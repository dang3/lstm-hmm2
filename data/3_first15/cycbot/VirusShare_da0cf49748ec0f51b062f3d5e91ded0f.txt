movl
add
add
sub
aam
add
aam
int3
ret
incb
add
pop
out
pop
add
filds
out
enter
sub
add
add
add
dec
adc
mov
jmp
add
add
pushf
int3
mov
add
sub
roll
xor
popa
add
add
add
addb
pushf
xchg
jne
aas
inc
add
xor
or
add
add
incl
add
incl
and
inc
add
bound
fs
add
add
jno
inc
add
and
arpl
push
cwtl
das
insl
sbb
cmp
loope
mov
add
pushf
dec
cmpsl
add
stc
mov
out
push
addb
add
ljmp
xchg
lods
jl
inc
add
cwtl
jno
loopne
dec
inc
add
add
test
popf
mov
ja
jmp
iret
xlat
testl
sub
add
sbb
cli
mov
add
push
jne
add
daa
add
add
nop
lods
in
outsb
mov
imul
sub
ds
xlat
stc
or
adc
mov
dec
out
mov
jle
lcall
sbb
add
pop
sub
dec
add
lcall
adc
fcmovne
cmp
inc
add
mov
js
add
pop
lret
add
jnp
add
push
inc
add
push
fnstcw
add
inc
add
jg
nop
repz
inc
add
lock
dec
inc
add
add
add
pop
or
cmc
or
loopne
lret
sbb
insl
inc
add
inc
add
call
lret
cmpsl
add
push
adc
and
cmpsb
add
dec
sahf
or
fisttps
adc
add
sbb
rol
add
sub
jbe
ss
xchg
sbb
adc
hlt
mov
cmpsb
add
ret
add
xchg
fcom
or
xor
out
mov
call
pop
add
add
hlt
mov
insl
and
sub
add
and
mov
aad
add
mov
shl
popa
add
add
add
cmp
rolb
add
dec
test
int3
cmp
in
cs
jge
mov
add
add
ljmp
mov
add
jo
add
mov
decl
add
add
cmpsl
add
push
add
adc
add
add
and
in
push
xchg
popa
add
mov
add
add
inc
add
aaa
aas
xchg
add
push
mov
roll
add
pop
push
push
cmc
sub
popl
jns
insl
push
push
fwait
ljmp
dec
mov
pop
lods
sti
xchg
xrelease
sti
sahf
inc
add
roll
add
negl
arpl
mov
or
add
add
insl
sbb
movsb
add
out
lds
sahf
out
scas
mov
jle
inc
add
push
cmp
out
repz
add
addb
lods
xor
mov
fwait
and
scas
jge
out
addl
inc
add
or
add
push
jle
ja
std
add
call
pop
stc
lods
pop
or
clc
movl
adc
rolb
pop
jp
pop
dec
and
or
data16
add
dec
sti
adc
pop
cmp
pop
sbb
dec
or
or
insl
aas
push
mov
ficoml
cmp
add
dec
stos
mov
jne
fwait
jns
addl
mov
jo
xor
dec
cmp
pop
sub
pop
add
mov
inc
add
stos
and
sbb
lods
push
pop
leave
mov
add
add
add
pushl
add
add
add
mov
add
jno
add
in
fcomi
cmc
xchg
xor
jecxz
pop
in
mov
jns
sbb
ja
mov
fisttpll
cltd
out
mov
mov
cmp
mov
push
mov
out
cmc
adc
nop
sbb
test
cmpsl
add
scas
push
cmp
push
or
movsb
add
mov
dec
add
call
addb
add
out
fisubs
add
sbb
iret
jecxz
inc
add
sub
add
add
add
add
xchg
daa
add
add
cltd
hlt
fsubs
add
add
and
add
leave
into
sub
rolb
lcall
inc
add
out
add
call
xlat
jb
cmp
push
jmp
movsb
add
add
xchg
jbe
add
outsb
jle
out
push
mov
add
add
push
xor
arpl
out
adc
push
xchg
fisubrl
mov
lods
cmp
add
push
sub
fs
add
add
mov
int3
in
inc
add
sbb
cmp
fdivrs
ja
add
jno
add
mov
add
add
pop
aas
cmp
add
cmp
mov
outsb
faddp
add
cwtl
js
jle
add
add
add
adc
add
mov
add
add
or
pop
add
mov
test
ljmp
movsl
add
dec
sbb
inc
add
add
pop
add
cwtl
sub
je
push
jle
mov
dec
sbb
add
dec
pop
ret
add
dec
movb
ds
sub
add
cld
pop
outsb
push
add
sbb
add
repnz
stos
lret
cmpsl
add
add
std
xlat
push
lods
rcrl
repz
push
fistpll
lods
enter
sub
adc
sti
cmp
push
outsb
das
iret
test
add
ss
pop
xor
or
addr16
jns
lock
cmp
inc
add
mov
add
lahf
popf
je
sahf
movl
add
add
insb
push
cs
mov
shll
loopne
icebp
les
pop
leave
mov
add
add
add
incl
dec
mov
push
insb
add
ljmp
mov
add
cmp
enter
icebp
xor
add
add
push
nop
add
lcall
aaa
pop
dec
sahf
in
xchg
ret
add
out
cmpsl
add
inc
add
pop
pop
clc
pop
in
ret
dec
sub
pop
aad
in
ret
push
xlat
jge
mov
pushl
addb
scas
clc
dec
mov
add
incl
mov
inc
add
add
daa
add
add
add
push
outsl
lcall
jne
xor
ds
add
add
loopne
add
add
dec
fdivrs
add
dec
and
jge
sub
mov
add
add
add
jp
or
popf
iret
add
ljmp
sub
add
push
mov
sbb
add
cld
dec
lret
in
xor
lahf
test
rcrb
movntps
add
jmp
std
pop
mov
add
inc
add
add
mov
inc
add
pop
repnz
movsl
add
xchg
mov
add
add
sbb
xor
add
xchg
add
incl
lods
sub
add
ds
pop
jmp
jb
pop
add
xchg
jg
add
fwait
jp
cmp
add
jo
xlat
mov
inc
add
add
leave
mov
dec
mov
lcall
aaa
arpl
push
add
inc
add
fcoml
push
lea
jne
add
jns
adc
fidivs
add
imul
roll
outsb
mov
add
jne
pop
adc
xlat
jle
out
mov
add
inc
add
adc
cmp
ret
add
add
sub
rolb
adc
mov
dec
jnp
ds
jecxz
loope
and
cld
sahf
imul
add
add
call
inc
add
pop
dec
dec
cmpsb
add
add
incl
adc
push
lock
add
jl
das
lock
add
add
adc
adc
pop
ds
lahf
roll
add
add
xchg
std
sub
movsl
add
enter
push
cmp
xor
add
scas
mov
addb
inc
add
pop
aas
or
add
rolb
test
cli
push
mov
xchg
cmp
je
addl
test
sbb
adc
repz
add
add
ljmp
data16
inc
add
add
add
incl
lea
add
adc
scas
lret
pop
bound
jmp
add
pop
fildl
icebp
xor
add
xor
jp
add
inc
add
jno
pop
fisubl
add
bound
or
mov
mov
stc
xchg
std
pushf
imul
cmp
push
sub
mov
cmp
adc
aad
add
xchg
addl
push
mov
movb
lcall
lods
cwtl
xor
addl
and
into
add
pop
icebp
jl
and
or
add
add
inc
add
add
decl
inc
add
lods
cwtl
outsl
sub
cwtl
pop
mov
push
add
mov
sub
add
push
roll
test
mov
and
ja
jge
sarb
dec
jmp
push
call
ret
sbb
add
daa
add
in
outsl
push
add
mov
in
fidivl
add
iret
jae
ja
add
scas
pop
jmp
add
in
in
lcall
test
cmp
add
out
or
fisubs
cs
mov
xchg
fadd
add
sub
decl
mov
mov
jp
shll
mov
jnp
addl
push
and
jmp
add
xor
jp
lods
dec
lods
mov
or
enter
add
incl
icebp
push
push
add
add
mov
shr
xchg
loopne
sub
add
add
call
mov
shll
add
mov
add
xchg
repnz
adc
out
out
loope
cmpsl
add
jbe
stos
pop
popf
fists
inc
add
shl
mov
and
add
or
mov
add
addb
in
data16
dec
sbb
dec
mov
or
add
aas
test
add
decl
xchg
aad
add
add
jg
dec
sbb
repz
iret
mov
add
add
push
mov
and
rclb
and
mov
add
int3
mov
add
out
fnstsw
xor
leave
xchg
je
mov
pop
inc
add
js
jae
dec
or
mov
fcoms
jnp
add
int3
add
add
addb
aam
in
addl
or
les
xchg
jecxz
jae
xchg
pushf
ss
inc
add
mov
mov
int
loop
jl
in
dec
jnp
fs
hlt
mov
add
cltd
xchg
icebp
aad
loopne
out
cs
add
loopne
jle
jno
xchg
icebp
out
mov
sahf
pop
mov
imulb
pushl
call
and
cmp
in
sub
xor
call
and
jne
dec
push
call
test
je
movzbl
add
mov
add
mov
shr
push
push
addl
call
push
call
leave
ret
push
mov
cld
push
push
mov
lods
xor
mov
sub
add
mov
add
stos
xor
pop
pop
leave
ret
jmp
jmp
jmp
addl
add
add
jo
fildll
add
push
loope
test
pop
add
outsl
inc
add
je
xchg
roll
sbb
jmp
push
sub
cmp
arpl
mov
mov
add
cmp
test
inc
add
add
insl
mov
lds
mov
add
addb
data16
add
icebp
push
add
add
push
ret
ret
sbb
pop
add
or
push
push
ds
push
pop
pop
add
mov
push
ret
lcall
call
inc
add
add
add
add
mov
jmp
inc
adc
aam
inc
add
push
mov
push
pop
add
test
call
adc
add
popa
adc
int3
stc
imul
mov
add
xchg
into
js
mov
cmc
sbb
bound
sub
in
das
lods
ds
xor
fucompp
xchg
cmp
scas
pop
addb
enter
fistl
hlt
mov
cmpsb
add
push
movzwl
jmp
sub
xchg
add
push
cmp
mov
mov
jp
cld
lods
clc
push
rolb
add
dec
jg
push
add
call
add
call
inc
add
incl
repz
ljmp
mov
out
and
in
in
and
shlb
cmpsl
add
cli
test
dec
bound
and
addl
pop
adc
clc
cmc
pshufw
cmpsl
add
add
addr16
daa
add
mov
cmp
cmpsb
add
call
loopne
sbb
adc
push
call
jg
in
addl
sub
add
ljmp
add
add
fdivl
mov
ret
jmp
push
push
pop
inc
push
jle
test
imul
xor
add
dec
inc
add
decl
jb
inc
add
and
pop
xchg
ja
cmc
lods
or
imul
add
add
movsl
add
clc
pop
dec
stos
ds
outsl
xchg
roll
add
jle
mov
leave
mov
jle
scas
mov
dec
sub
movl
inc
add
outsb
add
add
add
arpl
xchg
jnp
sbb
testb
mov
push
pop
sbb
stos
ret
add
add
bound
ljmp
sbb
adc
add
add
scas
xor
fiaddl
push
or
mov
test
jl
sub
jle
add
inc
add
ljmp
jmp
cmp
add
push
roll
add
add
aam
enter
pop
push
add
ljmp
bound
lahf
mov
sbb
pop
add
mov
cld
push
mov
mov
add
leave
jecxz
add
decl
arpl
ds
sub
insl
xor
outsb
movsl
add
arpl
pop
pop
pop
cmp
xchg
pop
mov
les
add
fnsave
push
jmp
or
push
flds
cmpsb
add
ljmp
mov
xchg
xor
jmp
aad
xchg
and
add
fistpl
push
test
pop
call
nop
rolb
ljmp
push
xor
add
mov
push
ret
sub
fsubrl
xor
dec
sbb
xchg
sbb
add
add
jns
inc
add
aam
add
add
cmpsl
add
xchg
lock
int3
test
add
sbbb
add
insb
dec
mov
add
lock
or
push
pop
jle
add
cld
scas
pop
pop
xchg
hlt
int3
pop
addb
test
xchg
in
mov
shrb
clc
and
insb
jnp
add
add
testb
sbb
test
jb
adc
shrl
add
scas
xchg
dec
movl
addl
movsb
add
insb
jae
add
mov
lahf
pop
stc
add
jg
test
sbb
test
imul
xlat
mov
addb
lock
add
data16
ljmp
add
mov
sbb
insb
jle
add
jmp
test
add
dec
pop
dec
xor
add
int
inc
add
or
cmc
in
dec
mov
iret
mov
add
scas
cmp
xchg
xchg
std
lret
push
imul
jmp
enter
mov
add
jmp
mov
xchg
mov
dec
lea
aam
addb
addr16
or
add
add
and
sub
jmp
ret
mov
hlt
cmp
add
add
into
pop
js
rcl
add
inc
add
frstor
sbb
and
add
push
push
jp
sub
xor
sub
add
push
mov
jbe
xchg
add
add
mov
add
add
add
add
add
push
inc
add
sub
lock
jb
jns
lods
je
add
fiaddl
add
out
push
aam
add
decl
xor
jns
mov
and
add
movl
xor
lock
popf
push
jae
add
int3
es
adc
lcall
and
add
add
dec
sti
bound
stos
mov
jmp
add
add
fwait
lock
roll
and
dec
add
outsl
push
in
mov
leave
cmp
sbb
je
jl
add
push
sbb
fstpt
adc
mov
inc
add
popa
add
insb
scas
dec
movsb
add
lods
or
stc
loop
addl
call
insb
in
jae
mov
imul
add
outsl
repnz
jmp
add
mov
add
dec
sahf
xchg
fsubrl
jg
stc
cld
rolb
and
addb
addl
adc
sbb
fwait
rolb
pop
rorl
pop
adc
push
mov
add
pop
push
push
push
ret
inc
push
and
jns
inc
add
fwait
jae
ret
add
dec
inc
add
lods
hlt
imul
mov
addb
and
and
lods
or
push
push
ret
mov
push
insb
push
roll
ret
add
add
stc
mov
leave
push
pop
push
ret
cld
push
push
sub
mov
add
add
mov
add
mov
xchg
into
fnstcw
add
mov
add
add
jg
and
mov
loop
mov
add
lret
test
and
mov
addb
pop
movaps
adc
push
inc
add
aam
js
inc
push
iret
jo
add
jnp
movsb
add
int
add
rorl
lock
mov
mov
jmp
adc
arpl
add
add
dec
and
pop
sar
cmp
add
mov
jge,pn
add
add
cltd
mov
rolb
test
jmp
mov
sub
mov
add
imul
loop
hlt
addl
pop
jl
out
roll
xor
lret
in
aam
add
decl
pop
mov
out
movb
clc
xor
call
loope
inc
add
cld
ljmp
inc
add
ret
add
push
mov
add
mov
or
add
add
add
add
add
push
inc
add
sar
and
nop
cmp
sbb
xchg
inc
add
add
jmp
sub
cmp
jae
add
cmp
push
ret
xchg
push
scas
xor
add
add
data16
add
inc
add
add
jmp
dec
fisubs
test
lret
outsb
mov
push
sbb
sub
mov
jl
add
xchg
scas
loope
movb
add
decl
test
dec
add
push
ret
xchg
pop
pop
daa
add
aaa
aam
nop
cmp
dec
add
inc
add
xchg
addl
in
rolb
add
or
sbb
add
call
cmp
pop
adc
mov
leave
sbb
add
rolb
and
rcrb
mov
add
lock
jo,pt
add
shll
mov
push
ret
jb
push
sub
movsb
add
adc
add
or
std
popf
mov
inc
add
inc
add
or
addb
jg
jbe
fisttps
in
ret
add
add
xor
hlt
adc
incl
add
jae
incl
mov
pop
leave
addb
sarl
aas
popa
add
out
movl
add
sbb
inc
add
add
inc
add
jae
push
add
lcall
rol
add
lahf
jns
add
aam
pop
xor
push
clc
sbb
cmp
adc
ljmp
push
addl
lret
ljmp
dec
lock
sbb
outsl
outsb
add
loope
add
or
mov
add
lahf
mov
clc
jmp
mov
pop
out
test
stc
pop
lods
or
inc
add
add
stc
mulb
sti
imul
jp
xchg
aas
loope
stos
xchg
dec
dec
pop
js
lock
mov
add
add
add
add
roll
dec
xor
mov
xor
add
movsl
add
ljmp
xor
out
ret
rolb
xor
repz
cld
jmp
addr16
mov
add
add
pushl
pusha
add
bound
aam
sub
and
loopne
stos
ja
add
leave
int3
dec
add
xchg
xchg
mov
xchg
and
lods
cmp
mov
cmp
add
test
call
push
ret
enter
std
je
lods
lret
inc
add
ret
cli
mov
cli
xchg
or
add
sbb
push
jmp
push
and
add
add
add
sbb
jp
sub
ds
data16
sbb
jmp
stc
popa
add
push
popa
add
add
add
decl
xchg
dec
mov
addl
dec
mov
mov
add
jmp
mov
mov
dec
test
popa
add
loope
sbb
ljmp
and
or
mov
mov
add
lods
cmpsl
add
mov
call
pusha
add
pop
dec
fistpl
mov
inc
add
test
xchg
lea
add
xor
add
xchg
and
ret
pop
push
not
bound
or
add
xrelease
push
arpl
sahf
decl
test
daa
add
jmp
in
data16
add
add
addb
mov
addl
add
mov
or
sub
add
add
fbstp
or
mov
xchg
jmp
push
sub
pop
outsb
mov
add
jnp
add
jns
adc
out
shl
push
or
call
inc
pop
add
push
push
and
or
dec
sub
je
add
lock
xor
insb
stos
mov
jb
dec
jbe
mov
add
xchg
and
dec
mov
enter
dec
sahf
push
pop
loope
test
movl
add
add
rol
add
test
jmp
aas
mov
inc
push
pop
pushf
mov
rolb
add
dec
inc
add
imul
adc
mov
mov
add
stos
scas
add
incl
adc
push
add
ljmp
pop
shlb
sub
test
add
add
std
or
sbb
cmpsl
add
add
or
mov
negl
jae
add
adc
add
rcrl
mov
push
mov
lea
lods
mov
int3
test
add
mov
mov
hlt
lods
jle
add
and
xchg
or
push
mov
pushf
mov
ret
add
cmp
in
xchg
adc
cs
fistpll
aam
add
jae
test
mov
add
decl
sub
mov
add
or
add
rol
add
add
pop
arpl
jne
sbb
or
add
push
mov
add
mov
add
add
test
fildll
aam
add
cmpsl
add
add
add
pop
adc
jns
cld
loop
push
mov
xchg
cmc
repnz
sbb
outsl
mov
add
adc
and
out
aas
jae
add
xor
fildl
and
pop
js
lahf
cltd
dec
cmp
pop
leave
push
movsl
add
mov
lock
repnz
xor
cli
fwait
movl
and
and
leave
jae
inc
add
add
add
fstl
jae
jmp
dec
push
xor
jmp
push
aam
inc
xchg
punpcklbw
test
mov
and
pop
cmpsb
add
decl
add
add
cmc
lret
cmp
scas
mov
aaa
or
push
add
rcll
push
jmp
cld
mov
add
add
mov
jmp
ret
push
fistpll
in
adc
dec
ljmp
mov
add
fiaddl
add
outsb
cmc
inc
add
add
jb
jmp
jb
sub
add
add
addb
cwtl
mov
sti
test
rcrl
js
mov
add
les
add
adc
stc
addb
flds
add
ret
in
aam
jmp
add
push
or
inc
add
or
cwtl
cmp
mov
xchg
xor
add
insb
push
push
dec
inc
add
loope
sub
or
call
movsb
add
cmc
leave
push
sbb
mov
cltd
movb
insl
inc
add
mov
stc
dec
hlt
dec
arpl
and
fcmove
xchg
dec
hlt
dec
arpl
mov
mov
add
insl
pusha
add
add
lret
mov
add
cltd
sbb
dec
mov
and
movsl
add
imul
push
adc
or
lea
add
jmp
inc
jb
sbb
enter
movsl
add
pop
add
or
adc
or
addb
and
sti
push
loope
jbe
cmpsb
add
out
xchg
dec
ret
add
adc
addl
out
clc
cmp
jmp
push
ret
popa
xor
jge
aaa
xchg
jl
pusha
add
test
jmp
das
movsl
add
pop
add
inc
add
add
add
scas
inc
add
add
in
jno
loope
repz
sbb
add
jmp
loop
aas
jb
add
add
mov
scas
loop
cld
mov
jnp
inc
add
imul
add
adc
xor
jge
cmp
add
int3
jmp
movsl
add
mov
add
jmp
and
adc
mov
or
mov
add
mov
outsl
xor
mov
add
jmp
out
repnz
jecxz
shlb
add
repz
mov
jmp
jle
xor
sub
mov
add
pop
ficoml
fiadds
cs
loopne
mov
mov
add
jmp
pop
xlat
and
dec
xor
lea
jmp
push
jb
into
jge
ret
cmpsb
cmp
cmp
push
push
push
push
ljmp
push
ret
push
adc
add
mov
adc
mov
sbb
jo
dec
lcall
leave
insb
sbb
pop
ffree
add
sub
adc
js
ret
test
mov
add
ljmp
xor
insl
jo
dec
push
add
push
jmp
aam
add
add
decl
inc
add
aam
xor
sub
cld
sbb
popf
cmp
add
add
add
xor
dec
dec
imul
shrl
ss
call
add
jo
sub
add
addb
js
sbb
pushf
dec
les
jecxz
inc
add
fdivs
dec
mov
fcoml
mov
pop
mov
add
xchg
mov
add
test
ret
add
cltd
mov
add
sbb
addb
add
xchg
dec
or
daa
add
cmp
or
mov
push
jmp
ljmp
add
hlt
sti
fcmove
imul
hlt
sbb
mov
inc
add
stos
fistpll
mov
movl
add
dec
movsl
add
fisttpl
and
imull
mov
ss
cmp
iret
dec
mov
lahf
addb
roll
jg
add
add
lgs
lods
push
and
inc
add
add
ret
add
add
sbb
shr
stos
dec
xchg
out
lods
dec
mov
jmp
pop
and
add
push
pop
push
pop
adc
xchg
jle
icebp
mov
add
push
enter
test
shll
pop
mov
jmp
arpl
cmc
push
movl
mov
jb
xchg
cs
fsubs
xchg
movb
fdivr
cmp
jmp
push
and
mov
add
int3
sbb
sub
add
sbb
jmp
inc
xchg
pop
sbb
jne
add
xor
mov
mov
jmp
ljmp
ss
jmp
jbe
add
in
lock
pop
add
fidivrl
add
add
ljmp
mov
xchg
mov
adc
adc
std
aam
daa
add
mov
mov
aam
lret
add
jmp
test
sahf
cmovo
lret
sub
sub
add
aam
aam
add
inc
add
lret
ret
daa
add
add
add
add
popf
sub
xchg
aam
repz
add
xchg
jmp
ret
sbb
sbb
mov
into
mov
in
lret
and
lret
push
cmp
aad
movb
adc
pop
add
jmp
into
push
pushf
mov
add
ds
add
int3
in
aad
add
jmp
sbb
cld
push
js
jmp
dec
rol
add
jnp
imul
add
enter
into
or
or
pop
lret
pop
mov
out
xor
fldenv
add
sub
or
iret
pusha
add
jno
cs
stos
adc
inc
add
jmp
arpl
inc
mul
push
scas
fwait
mov
add
add
add
in
int
movsl
add
xchg
cmp
pushf
data16
out
xchg
push
addl
ss
jecxz
jle
lahf
adc
fistpll
adc
add
cmpsl
add
ret
add
add
mov
mov
add
dec
add
dec
adc
and
jb
add
ljmp
add
xor
cs
div
jnp
add
adc
sub
and
lods
add
jle
lds
inc
add
mov
add
push
lret
cwtl
rclb
mov
pop
movl
add
pop
inc
add
mov
sbb
test
movsl
add
insb
fs
add
jmp
jmp
fidivl
rolb
add
ljmp
cwtl
cmp
cmp
push
add
frstor
and
cs
rclb
rcrb
mov
add
inc
add
jg
sti
mov
add
sti
insb
or
mov
cmp
xchg
pusha
add
add
add
int
push
leave
fcomps
mov
data16
inc
add
push
mov
test
popa
cmpsb
push
sbb
xor
xor
out
call
lock
enter
add
mov
xchg
pop
xlat
jae
mov
add
movb
jmp
enter
stos
pop
movl
mov
out
int3
cld
cmp
jmp
push
sbb
fldcw
das
or
cmpsb
add
and
pusha
add
add
scas
xor
decl
jne
jmp
add
add
add
call
push
popa
in
mov
add
add
je
sub
jle
add
push
push
inc
add
inc
add
jb
add
push
mov
leave
scas
movsb
and
scas
ja
add
add
add
jno
xchg
and
push
mov
pop
inc
add
add
outsl
or
cli
and
int3
in
jp
add
jne
jmp
mov
daa
add
add
decl
clc
sti
sbb
mov
adc
mov
aas
xor
mov
xchg
insb
lods
lods
cmp
add
loop
mov
add
and
add
call
sti
add
mov
add
decl
add
insb
aam
mov
notl
adc
add
test
leave
pop
add
push
xchg
lret
or
lods
dec
mov
filds
je
out
cltd
push
inc
add
into
cld
jle
mov
daa
add
xrelease
add
call
jmp
push
mov
mov
push
ret
push
push
mov
push
add
sarl
in
or
add
add
add
xchg
cmp
cmpsl
add
cmc
outsb
mov
add
cmp
sbb
and
add
jmp
push
dec
mov
mov
data16
jns
outsb
inc
add
cs
test
mov
add
inc
add
ja
decl
push
ret
push
push
pop
add
out
add
mov
jb
add
add
and
xlat
pop
add
aas
js
mov
add
mov
jmp
mov
bound
and
sbb
test
into
inc
inc
add
mov
int3
push
lahf
test
sbb
jb
add
mov
call
jmp
mov
inc
add
mov
leave
outsl
dec
call
jle
inc
add
arpl
push
into
test
clc
xor
sti
test
imul
jo
xchg
mov
dec
cmp
out
jl
std
or
push
mov
inc
add
mov
dec
loopne
daa
add
aas
ss
call
add
int3
push
add
stc
dec
movsb
add
sbb
aaa
xor
add
add
or
cmpsb
add
movl
push
lcall
nop
lahf
outsl
jle
or
mov
lahf
pop
mov
add
in
data16
add
push
pushl
shr
repz
dec
lcall
push
lock
cmp
iret
xchg
fimuls
add
cs
push
add
and
lea
push
jnp
loopne
mov
adc
pop
xchg
xor
and
lcall
lcall
add
jmp
add
add
cmp
add
mov
call
adc
jb
sahf
or
js
lret
mov
add
popf
lahf
sbb
push
ret
aas
push
sub
push
add
pop
push
in
adc
hlt
out
clc
in
fcomip
lahf
addb
xchg
call
mov
cli
pop
out
idivl
je
add
cmp
call
jmp
push
popa
add
add
add
inc
add
dec
and
add
or
sbb
dec
cmp
dec
mov
add
add
add
decl
xor
fimuls
lcall
mov
pop
add
sub
popa
into
popa
repnz
aas
ret
add
or
repz
lcall
sub
add
mov
push
xchg
icebp
addb
add
xor
mov
jmp
push
sbb
push
mov
or
movsb
add
stc
popa
add
mov
xor
in
lcall
inc
add
ret
add
jb
add
adc
hlt
mov
sub
dec
inc
add
sbb
sbb
add
addr16
jb
ljmp
bound
add
jmp
out
inc
add
add
cmp
daa
add
stc
adc
test
iret
sub
pop
mov
add
sub
add
mov
ret
add
lahf
loope
pop
sti
loop
pop
add
outsb
add
ljmp
addl
pop
roll
stos
addb
push
add
addr16
mov
mov
pop
je
inc
add
add
add
sar
loopne
and
dec
clc
ss
mov
cmp
add
jns
es
inc
add
addl
xchg
adc
dec
shlb
outsb
and
roll
lods
mov
jg
ljmp
mov
bound
addl
cltd
lds
adc
repnz
xchg
in
call
xlat
add
lcall
mov
imul
lahf
jb
movl
add
jnp
cld
xchg
mov
pusha
add
add
movl
mov
and
ret
add
add
add
add
int3
data16
add
sub
push
jmp
fldcw
rcrl
lds
sbb
or
addb
imul
cmp
test
mov
cltd
data16
dec
movsl
add
xchg
or
loopne
jp
sbb
jmp
add
push
aam
arpl
add
add
dec
aas
pop
jmp
hlt
mov
add
push
jmp
ljmp
jmp
rcll
add
shlb
dec
testl
mov
add
jp
adc
rolb
add
mov
push
iret
rcr
jle
dec
repnz
mov
xchg
mov
roll
fadds
jecxz
mov
add
and
mov
add
and
out
xchg
lea
add
sbb
mov
mov
add
add
enter
add
ljmp
cmp
addb
mov
xchg
es
add
shlb
scas
adc
psrld
jmp
popa
sbb
sub
movsb
add
daa
add
div
jmp
push
jle
add
outsl
dec
je
jle
mov
add
add
add
cmp
mov
js
inc
add
adc
xchg
push
push
or
or
in
and
cld
jg
add
add
xchg
xchg
adc
inc
add
sti
lcall
mov
add
dec
mov
decl
mov
push
fcomps
imul
fdivrl
add
and
lods
pop
aaa
scas
inc
add
mov
mov
mov
outsb
pop
add
iret
shlb
jge
jmp
into
lock
into
movsl
add
mov
int
sub
mov
sub
inc
add
xchg
dec
iret
clc
fadds
or
loop
mov
and
jmp
add
loop
cwtl
bound
int
or
aam
mov
xor
add
jae
mov
jbe
pop
mov
push
add
repz
push
sahf
inc
add
adc
add
push
dec
imul
sub
scas
test
dec
lcall
stc
pop
xchg
xchg
mov
sbb
xor
jbe
push
arpl
cwtl
dec
ja
pop
ljmp
addb
scas
mov
add
ficoms
mov
add
adc
movsl
add
add
insl
cmp
cmc
push
arpl
push
jmp
out
mov
jbe
add
add
mov
xor
push
test
gs
adc
add
add
mov
inc
add
push
or
xor
mov
rolb
dec
cmpsb
add
mov
add
imul
jno
clc
pop
nop
data16
pop
je
add
pushl
jmp
sbb
inc
outsb
and
or
repz
add
add
and
jmp
dec
push
addr16
push
jne
jmp
push
mov
add
fwait
in
loop
popa
add
cmp
jp
add
add
jne
dec
add
push
inc
add
jle
adc
popf
rcrl
add
lcall
stos
mov
add
sahf
int3
rolb
and
les
sti
pop
popf
lds
jae
dec
dec
push
add
push
inc
add
add
rcrb
mov
jmp
subl
xchg
pop
lret
ljmp
add
dec
out
or
fs
popf
fdivl
bound
push
xor
push
cmp
cwtl
sub
cwtl
mov
loop
ret
and
xor
lahf
aad
fucomi
shr
arpl
cmpsb
add
test
cmp
add
add
add
add
add
dec
nop
pop
lret
sub
lods
mov
mov
stos
aaa
ret
add
add
in
mov
mov
mov
adc
adcl
push
add
sahf
xchg
mov
inc
add
pop
inc
add
push
dec
push
add
insb
pop
addb
mov
add
add
imull
add
xchg
lock
test
add
daa
add
or
fcom
out
outsb
fistpll
pop
xor
clc
cmpsb
add
jmp
lods
sub
inc
add
push
add
xchg
sbb
ret
add
cmp
decl
xor
cmpsb
dec
add
cld
push
add
xchg
pushf
push
out
iret
sbb
push
or
fsts
add
addl
cmpsb
add
add
jmp
jb
push
arpl
add
adc
add
pop
push
mov
sahf
inc
add
jne
dec
fcmovu
sub
rcrb
imul
add
in
rolb
in
mov
mov
jno
add
lea
ljmp
int3
xchg
iret
mov
add
rolb
inc
add
iret
es
mov
inc
add
pop
add
repz
add
into
mov
add
into
dec
or
add
add
add
decl
bound
xchg
sub
mov
add
sbb
add
or
cld
or
es
pop
add
pushf
jge
add
dec
decl
test
dec
das
add
push
sahf
pop
cmp
test
jmp
or
arpl
add
jnp
les
adc
mov
adc
push
addl
and
insl
inc
add
rcr
addl
add
fdivrl
add
add
push
push
xchg
lds
out
push
inc
add
mov
mov
sar
incl
adc
mov
or
rolb
mov
pop
dec
xor
add
decl
push
add
add
les
push
push
jb
mov
add
call
popf
or
jge
fldl
stos
enter
pushl
push
jl
jmp
or
xchg
add
hlt
adc
pop
cmpsb
add
jne
add
push
je
jmp
pop
or
push
add
les
lret
push
nop
loope
xchg
mov
aam
add
add
mov
mov
add
dec
sub
cmc
cmp
sub
or
add
pop
lods
bound
xor
stc
dec
enter
add
lcall
stos
adc
cmpsl
add
icebp
daa
add
pop
sahf
shlb
and
sub
cmpsb
add
test
mov
xor
add
mov
lods
push
cmp
xchg
testb
inc
add
add
add
std
mov
add
add
add
add
cltd
into
sub
sub
mov
xchg
or
mov
add
daa
add
mov
and
jmp
push
xchg
js
nop
insl
cli
enter
mov
jmp
inc
das
sub
aaa
popf
cmc
xchg
inc
add
add
push
ret
cmpsb
inc
push
adc
add
xor
addl
jne
mov
decl
add
call
jmp
popa
push
pop
movb
push
arpl
movsb
add
add
rolb
mov
push
xor
add
add
outsb
xchg
adc
fldcw
js
les
pushf
adc
add
jno
add
pusha
add
leave
in
inc
add
pop
jbe
dec
icebp
pushf
xor
decl
sahf
push
cmp
jecxz
mov
in
cmova
or
add
clc
jmp
cmp
xor
pop
addl
xor
rolb
movl
stos
pop
push
add
lret
js
add
push
loope
cli
jns
push
jmp
add
push
pop
xchg
jmp
or
test
add
inc
add
xchg
andps
test
add
lcall
adc
add
mov
ljmp
aad
shr
jmp
cmp
cld
jp
cmp
push
adc
or
call
and
mov
decl
and
add
mulb
insb
xlat
dec
icebp
aam
lock
add
add
mov
dec
test
add
decl
dec
cltd
call
pop
cmpsl
add
dec
out
rol
add
nop
int
inc
add
loop
jns
add
icebp
pop
or
add
sub
jmp
or
add
push
push
jmp
mov
inc
cmp
ret
add
add
movsl
add
mov
mov
sbb
mov
push
adc
or
mov
adc
mov
rorl
scas
cmp
push
iret
enter
sub
ljmp
or
icebp
mov
pop
jmp
in
insb
adc
add
push
add
jmp
push
addl
add
mov
add
sub
add
push
add
and
mov
call
sbb
add
jle
dec
stos
push
fidivrs
or
or
pushf
sbb
add
add
add
shll
xchg
add
jnp
test
jno
repnz
icebp
adc
add
scas
mov
aad
mov
add
out
addb
hlt
mov
jnp
xor
mov
or
add
push
popa
fists
add
cli
lods
cwtl
movl
add
add
addb
sub
add
mov
jmp
adc
or
cmpsl
add
add
add
outsb
ret
add
cmc
daa
add
movsb
add
push
pushf
fidivl
inc
add
add
bound
pop
jg
fcmovu
rcl
pop
addb
lea
std
dec
notl
add
shrd
add
decl
pop
cmp
sbb
add
pop
add
outsl
sub
rolb
in
addb
cmc
test
add
xlat
and
and
sub
test
addb
inc
add
jecxz
mov
sbb
test
sub
add
fsubrp
call
mov
imulb
mov
add
incl
decl
add
jne
rclb
mov
pop
sbb
add
push
stos
xchg
arpl
cli
fsub
add
sbb
adc
ss
push
or
pusha
add
repz
push
out
add
and
ret
cmp
sti
lds
xor
adc
or
cmp
add
jmp
add
add
cmp
add
stc
mov
shlb
add
cli
not
xor
lahf
mov
jmp
dec
addb
add
inc
add
cltd
add
add
jmp
add
xor
cmp
add
test
dec
add
dec
pop
mov
add
add
lcall
sub
add
xor
sbb
add
mov
push
into
aad
mov
add
std
push
add
dec
pop
jns
movl
ret
add
add
ja
test
pop
stc
inc
add
add
call
bound
xchg
inc
add
aaa
dec
aaa
flds
mov
add
mov
add
out
sbb
add
jae
add
pop
dec
push
push
push
mov
add
sahf
stc
add
aaa
pop
add
pop
add
add
movsb
add
stos
ret
pop
rorb
js
imul
rolb
push
test
add
idiv
mov
add
jmp
add
pusha
jmp
mov
mov
mov
jns
jo
popa
add
push
jne
jmp
sbb
movl
push
adc
add
sbb
inc
xchg
loope
hlt
xor
xchg
inc
add
mov
inc
add
adc
push
mov
out
mov
add
push
shlb
lret
sub
add
jmp
pop
ds
das
fs
idiv
sub
jg
jl
pop
and
fsubl
leave
movsl
add
imul
push
aam
roll
add
std
sbb
and
add
push
inc
add
cmp
add
dec
das
sarb
aam
adc
add
movswl
jmp
or
cld
cmp
inc
add
lahf
xchg
sub
and
mov
jl
mov
jmp
add
add
add
cmp
inc
add
mov
out
roll
push
cwtl
inc
add
mov
pushf
xor
jecxz
xchg
into
mov
mov
add
roll
ror
jmp
cmpsb
sub
mov
in
sub
add
jmp
add
add
bound
or
add
and
push
pop
push
mov
push
ret
dec
pop
in
lret
lcall
sti
jae
add
xchg
pop
add
cld
lods
pop
pop
jae
out
jo
mov
pusha
add
add
scas
and
addl
add
cmp
nop
roll
dec
and
and
addl
dec
fstl
daa
add
add
not
outsl
popf
pop
add
stos
cli
add
pushl
inc
add
clc
ss
add
or
movl
movsl
add
xor
dec
gs
out
jp
jae
or
jo
pop
xlat
xchg
xor
fwait
inc
add
add
mov
or
into
push
aaa
dec
push
add
in
sbb
add
add
add
xchg
mov
cmp
sbb
mov
inc
add
jnp
and
mov
add
fsubr
stc
outsl
enter
int
loope
iret
xchg
popf
mov
out
pushf
and
sahf
loope
sbb
incl
cmp
inc
add
jbe
add
pop
mov
pop
roll
add
decl
add
into
dec
lock
xchg
jno
add
and
xchg
mov
dec
jmp
xchg
xchg
dec
push
dec
dec
mov
sub
or
sub
les
call
cmp
jmp
xor
push
sbb
add
pop
mov
add
xchg
aaa
xor
mov
add
add
add
mov
mov
and
push
push
push
ret
push
push
pop
cmp
or
mov
scas
sub
insb
sbb
add
test
pop
fnsave
lods
dec
dec
inc
add
sbb
add
add
addb
add
or
aas
xor
add
add
incl
mov
lods
mov
outsb
into
sub
add
inc
add
lret
sarl
mov
jp
sub
add
dec
xchg
testb
mov
leave
add
jmp
add
jmp
xor
das
arpl
imul
add
push
sbb
mov
add
jg
add
push
out
movsl
add
dec
insl
push
ja
icebp
mov
sub
inc
add
fsubl
add
mov
pop
add
jne
or
xchg
adc
arpl
mov
jge
xchg
out
jle
push
add
adc
push
xor
into
xchg
fdivs
xchg
xchg
push
mov
jmp
mov
push
test
lret
in
jle
mov
outsl
fwait
hlt
fdivr
mov
push
ret
jle
ret
add
pop
stos
ds
add
xor
ret
push
xchg
add
push
dec
stos
fcomp
inc
add
icebp
imul
add
mov
lods
cmp
inc
add
repz
add
add
dec
ret
add
mov
mov
daa
add
add
jmp
jmp
add
sub
out
divl
add
incl
add
add
pminub
addb
scas
bound
fsubr
hlt
aam
add
or
lret
test
dec
ret
add
push
lods
dec
out
and
lods
outsl
push
sub
pop
rolb
inc
add
add
ss
jge
sub
cmpsl
add
add
movb
jl
push
mov
mov
in
out
pop
stc
leave
or
add
fidivrl
xor
fs
or
das
pop
jg
push
test
jmp
and
add
fcmove
jge
popl
pop
cld
js
int
sub
add
decl
sub
or
add
mov
ja
dec
pushf
insl
jbe
xchg
and
jp
push
js
add
add
decl
inc
add
push
pop
fists
inc
add
out
push
mov
cmp
sbb
lods
jmp
call
pop
pop
xor
rolb
js
add
inc
add
add
sub
bound
ficoms
lea
add
pop
push
arpl
dec
std
lods
ja
dec
lret
mov
rolb
fsts
mov
insb
sub
add
add
roll
jmp
push
dec
aam
enter
pop
cmp
add
add
push
lcall
dec
cmpsl
add
outsb
aad
les
outsl
call
dec
and
in
dec
stc
fdivrl
and
addb
insb
mov
out
xor
inc
add
xor
mov
xchg
sub
ret
add
and
lds
fwait
pop
pop
pop
lret
lods
push
ret
ljmp
cmp
add
lcall
or
mov
fwait
mov
and
ret
and
ja
add
mov
cwtl
fstps
add
add
add
add
movsb
add
and
adc
add
add
add
in
or
push
jnp
ljmp
push
and
addl
cmp
pop
xchg
loopne
push
scas
jp
xchg
mov
add
add
fsub
add
jl
xor
inc
add
in
jns
popf
push
in
adc
xor
pushl
cmpsb
add
jns
test
stos
adc
add
mov
add
mov
add
mov
mov
add
jae
fcmove
cmp
inc
add
xchg
jmp
or
dec
jnp
add
pop
ljmp
pop
mov
jg
stc
pop
ljmp
cmp
addb
sub
repz
inc
jmp
push
sbb
pop
aas
push
pop
cmp
add
adc
push
in
xchg
sub
add
add
and
mov
jmp
mov
lcall
and
test
in
sub
dec
mov
xchg
test
mov
pop
and
xor
imul
neg
xor
add
inc
add
es
add
add
or
and
test
add
lcall
add
fadds
add
push
inc
add
cmp
add
ret
add
adc
add
add
pop
adc
das
and
cmp
scas
xor
add
outsb
sahf
xchg
insl
dec
or
pop
call
hlt
add
add
insb
jle
dec
cmpsb
add
popa
add
inc
add
js
les
dec
mov
dec
test
cwtl
sti
out
ret
adc
je
filds
add
shll
pop
loope
add
jmp
aam
xor
push
mov
push
mov
push
daa
add
clc
push
jne
call
addl
int
mov
dec
push
ret
pop
filds
inc
into
push
xor
ljmp
adc
cli
push
incl
daa
add
add
mov
fldcw
jo
ss
add
add
pop
outsb
pop
add
add
jp,pn
jne
push
jmp
push
pop
js
jb
jge
mov
lods
cmp
add
sarb
and
push
jg
inc
add
scas
pop
mov
movl
add
adc
hlt
lock
out
push
incl
push
push
jle
roll
cli
xchg
cmp
cwtl
scas
adc
add
je
jl
movsb
add
pop
add
add
out
jmp
arpl
sub
adc
add
dec
loope
jne
mov
push
add
in
push
push
pop
lcall
jno
cmp
lcall
mov
loopne
aad
iret
hlt
xor
in
xor
fwait
imul
push
test
enter
test
jo
rcll
cmpsl
add
adc
in
sbb
jmp
add
cmpsb
enter
std
in
push
add
cld
sub
out
mov
or
xchg
xchg
repz
mov
add
jmp
movb
add
jmp
xchg
adc
ja
add
lds
inc
add
ljmp
add
movb
add
data16
aas
stc
lahf
push
add
add
add
add
jno
pushf
push
xchg
stos
rcll
movsl
add
insb
lods
jne
push
pop
mov
mov
add
aas
dec
mov
add
add
add
xor
push
pop
jmp
push
mov
xor
add
jmp
add
scas
jp
in
decl
andb
add
fcom
scas
dec
shl
add
add
jb
xor
push
dec
addb
daa
add
add
pushf
decl
jne
add
push
jle
jp
imul
aam
loop
xor
sub
out
jge
fwait
or
pop
dec
mov
testb
xchg
or
xchg
imul
add
push
push
ret
sub
add
push
sbb
mov
lret
inc
add
movsl
add
iret
xchg
or
jne
jmp
addl
bound
adc
mov
add
lcall
mov
push
ret
add
jge
mov
lds
icebp
addl
cmp
jnp
xchg
ss
daa
add
addl
add
add
adc
add
iret
iret
pop
dec
data16
outsl
pop
add
call
cmp
inc
add
mov
mov
call
addb
add
mov
incl
xchg
nop
mov
add
ljmp
and
inc
add
mov
pop
fisubl
pop
dec
mov
add
inc
sar
incl
mov
add
rclb
add
roll
add
add
dec
lods
sub
cs
jecxz
xor
add
push
add
pop
add
add
negl
push
jmp
xor
and
bound
pop
mov
pushf
nopl
pushl
test
out
iret
mov
dec
cli
or
add
lcall
xor
push
mov
dec
add
movb
add
add
les
ja
ffreep
add
test
insb
lret
addl
repz
decl
xor
push
pop
add
dec
pushf
push
mov
jmp
mulb
dec
fnstenv
mov
outsb
ret
add
testl
scas
sub
imul
adc
push
sub
insl
sub
in
fstpt
push
mov
jae
shl
sub
add
jl
mov
jno
rorl
or
ljmp
add
pop
jle
add
mov
add
lcall
dec
cmp
fcoml
add
mov
aas
fisubrl
cltd
aad
push
adc
jl
fwait
and
je
add
or
add
sub
aaa
gs
in
movl
add
aas
pushf
dec
adc
addb
add
mov
cmp
add
in
mov
mov
sbb
add
movsl
add
add
lahf
mov
push
add
push
pop
mov
cmp
cmpsl
add
inc
add
loopne
jl
add
cmp
stos
popa
add
movb
jae
jno
xlat
mov
add
jmp
mov
add
add
es
pop
test
cmp
add
lods
movsl
add
add
dec
push
cltd
pop
add
incl
addl
dec
outsb
xor
cmp
mov
pop
mov
repz
push
mov
xchg
les
pop
lods
data16
sub
add
mov
mov
adc
aad
popf
mov
add
add
pop
add
xor
push
repz
cmp
xchg
mov
out
xchg
mov
add
add
aad
add
test
push
ret
push
push
cmp
add
icebp
gs
aam
pop
jae
push
or
mov
add
test
not
lahf
bound
and
ss
add
mov
popf
or
add
sub
pop
loopne
cltd
leave
stos
lods
mov
repz
imul
sbb
xor
mov
inc
add
stos
jb
and
icebp
or
add
sahf
cs
pop
imul
push
pop
fsubp
add
add
lret
fwait
jae
out
data16
dec
add
and
pop
and
lea
stos
mov
add
cli
lods
outsb
inc
add
inc
add
add
xchg
sqrtps
outsl
fcoml
or
add
add
repz
or
dec
cli
mov
add
add
inc
mov
pop
adc
in
fsts
fistl
data16
shl
add
fwait
rolb
jl
add
sarb
and
mov
add
pop
jns
jns
das
cltd
mov
inc
and
jmp
mov
dec
fstps
mov
push
ret
aas
jb
sbb
add
jmp
push
inc
test
jb
add
mov
add
addl
add
or
add
jle
inc
add
adc
js
mov
mov
jmp
fdecstp
add
add
mov
or
nop
inc
add
dec
jmp
jo
scas
pusha
add
xchg
sahf
repz
movb
pop
xor
xchg
roll
add
or
add
pop
fidivs
jg
add
rcrb
cmp
mov
imull
addl
repz
scas
adc
roll
scas
add
xlat
and
add
fcmovb
add
sbb
add
adcl
lock
sbb
add
pushf
adc
adc
jl
inc
add
testb
dec
repnz
pop
xor
in
inc
add
add
add
adc
out
mov
js
add
ljmp
mov
add
icebp
cmpsl
add
inc
add
repnz
shr
jmp
insb
pop
cmp
jg
jmp
cmpsb
push
push
push
ja
pop
inc
add
mov
push
psraw
and
dec
fisubs
sub
ret
jmp
push
pop
push
sbb
push
mov
pop
pop
xor
mov
add
mov
add
gs
add
lock
push
add
add
mov
sbb
dec
mov
mov
and
iret
lahf
dec
push
ret
add
shlb
cld
test
add
jne
mov
lds
mov
add
push
roll
push
add
roll
push
ret
add
insb
xor
movb
pop
jge
inc
add
add
jg
push
mov
jmp
ret
mov
into
dec
dec
jle
add
std
into
fcoml
cmp
pop
data16
add
adc
jmp
decl
add
fld
mov
into
jbe
add
lahf
leave
stc
divl
out
out
repz
pushf
mov
dec
pop
rolb
cmpsl
add
mov
add
sub
mov
sbb
push
fsubl
add
jns
add
sbb
push
ret
mov
add
mov
imul
jno
scas
dec
inc
add
add
mov
fnstcw
mov
scas
roll
in
imul
push
fcomps
addl
mov
jae
add
ljmp
icebp
out
movl
hlt
lcall
outsl
jns
push
ret
sub
add
pushf
jbe
push
fnstsw
pop
push
jl
xor
add
mov
daa
add
jns
add
push
xchg
ss
add
pop
negb
sub
push
jmp
adc
inc
pop
xor
out
fdiv
repnz
adc
add
nop
inc
add
xchg
sbb
gs
enter
add
lret
decb
add
add
std
fldcw
les
pop
push
iret
sbb
push
xor
insb
addb
fldl
mov
int
add
push
sbb
xchg
movsb
add
add
icebp
and
mov
pop
push
push
jmp
push
adc
and
imul
shlb
pop
cmc
mov
jnp
add
add
add
push
jne
cs
add
pop
lods
mov
add
add
add
add
test
ljmp
into
fucomip
aam
fcompl
add
inc
add
dec
stos
xchg
inc
add
or
and
push
dec
movl
add
add
jne
ret
add
and
fistl
inc
adc
xchg
sar
lcall
or
add
add
add
jg
icebp
inc
add
lret
add
decl
xor
out
cmp
sub
call
push
push
pop
dec
call
xchg
mov
movb
jns
dec
jae
out
hlt
repnz
jmp
xlat
dec
inc
add
fldl2e
push
das
lea
aaa
stos
daa
add
add
pushl
jmp
mov
push
push
mov
push
add
jmp
xor
fdivrl
sub
jmp
jmp
jmp
lcall
add
add
add
popf
hlt
jmp
addr16
arpl
roll
dec
loopne
lcall
or
add
dec
cmp
mov
dec
dec
fidivl
xor
icebp
sbb
loope
dec
mov
mov
add
jmp
lock
shlb
add
inc
add
mov
xor
lret
add
or
inc
add
add
jb
movb
adc
xor
sbb
adc
out
pop
add
add
add
jmp
xor
lods
add
movsb
add
add
ret
dec
add
lcall
popa
add
jmp
or
xchg
inc
add
aas
push
mov
decl
add
call
mov
add
mov
mov
add
rolb
rolb
sti
xor
add
incl
add
sub
add
jmp
add
add
add
movb
lahf
pop
loope
lret
cltd
adc
add
add
ljmp
nop
push
decl
inc
addr16
jl
popa
add
test
daa
add
add
push
aam
cwtl
arpl
popf
jge
mov
lds
cmpsb
add
sub
mov
jmp
cmp
add
add
add
push
add
jle
add
inc
add
add
add
add
add
mov
pop
bound
sahf
fsubp
add
add
mulps
loop
hlt
jge
sbb
add
fldcw
xor
push
ret
pop
xor
and
push
ret
or
add
out
and
jecxz
inc
add
pop
mov
xchg
mov
cmp
push
ret
into
ljmp
repnz
add
cld
mov
add
test
adc
ds
cmp
outsb
out
lret
rolb
fimull
repnz
stos
jg
inc
add
push
jmp
sbb
pop
inc
add
decl
test
inc
add
ret
mov
add
lea
push
adc
or
add
jbe
xor
add
add
addl
addb
mov
jmp
push
push
push
cld
ds
jbe
add
inc
add
push
add
xchg
movl
daa
add
and
ficomps
add
jmp
xor
push
jbe
sub
test
xlat
cwtl
jp
add
mov
cmpl
jmp
cld
xor
cli
pop
fnstcw
aam
movsb
add
icebp
inc
add
mov
scas
mov
sti
mov
roll
push
inc
add
cmp
fldenv
fbstp
flds
adc
inc
add
pop
add
movl
add
jmp
add
aad
movb
add
or
xor
jmp
data16
addb
repz
pusha
add
addb
pop
mov
add
or
and
cmp
mov
sbb
out
xchg
add
add
pop
jbe
das
mov
add
mov
add
adc
movl
dec
test
bound
jb
lods
push
ret
sbb
push
mov
sbb
add
test
sbb
add
js
repz
pop
adc
jmp
add
add
dec
mov
std
cmp
or
repz
mov
addb
add
add
lock
pushl
pusha
add
add
add
lahf
roll
dec
shll
add
js
jge
scas
sbb
in
sbb
leave
test
addb
jo
add
fstp
sub
popa
add
mov
add
add
das
out
xor
stos
inc
add
enter
aad
lret
movsl
add
fyl2x
adc
notl
jmp
insb
push
mov
and
mov
addb
add
add
decl
add
shll
popa
add
mov
add
add
sub
xchg
arpl
sub
mov
mov
xchg
inc
add
addb
push
jl
pop
lahf
fisubrl
shlb
add
add
cld
mov
out
add
jg
xchg
icebp
rolb
insl
inc
add
cld
jae
insb
and
ror
cmp
adc
fstps
add
add
xrelease
or
add
out
push
or
insl
sti
push
adc
inc
add
cmp
sbb
add
loop
stos
jecxz
je
add
jb
xlat
add
or
and
inc
add
lods
push
add
in
and
or
lds
ljmp
and
lds
cwtl
or
add
add
add
in
adc
or
add
aas
ret
add
xlat
cmpsl
add
xor
adc
pop
sarl
shlb
hlt
or
add
jmp
inc
add
fbstp
add
jae
jmp
add
nop
fcoms
popf
add
fdiv
sub
mov
pop
in
outsl
movb
dec
fwait
jo
stc
in
scas
or
xchg
jle
mov
bound
add
jg
stc
and
movsl
add
imul
addl
push
cld
or
xor
jmp
ret
push
cmp
cmc
or
sbb
enter
loop
call
and
cmpsb
add
add
lds
or
add
ljmp
cmp
add
pusha
add
data16
jmp
cld
push
sub
out
dec
cli
jae
int
inc
add
add
jmp
sub
mov
sub
inc
add
int
cmpsl
add
cmp
add
add
ret
add
add
incl
pop
leave
and
loopne
rorl
sbb
mov
sti
add
add
sub
xor
scas
leave
imul
add
out
pop
test
jge
push
mov
add
outsl
pusha
xlat
movsb
jmp
mov
jne
lods
pop
popl
jae
xor
add
test
out
mov
add
push
stos
xor
adc
cmp
fisttpll
sub
outsb
inc
add
lret
out
mov
loop
add
push
movsl
add
addl
dec
dec
jmp
add
jbe,pt
clc
jb
lods
insl
or
inc
add
add
add
jo
mov
add
incl
add
mov
pop
das
adc
mov
int
movsb
add
add
repnz
movl
jb
or
add
scas
fdivr
call
ret
add
scas
mov
add
pushl
hlt
leave
sub
aas
adc
ljmp
rcrl
jmp
xor
enter
cmp
xchg
aaa
dec
xor
add
add
pushl
adc
xchg
dec
nop
and
movntq
lcall
roll
loopne
mov
add
push
mov
push
jmp
push
and
mov
xor
mull
cmpsl
add
add
test
add
repnz
sub
add
movsb
add
inc
add
add
jmp
lcall
outsl
add
incl
ds
in
movsl
add
imul
xchg
fwait
in
mov
add
sub
add
jne
add
mov
jmp
in
stos
xchg
push
add
cmpsl
add
add
out
in
aas
addl
add
and
movb
add
push
sub
ja
push
sbb
add
adc
iret
sub
dec
dec
jbe
dec
das
xor
fld
add
and
xchg
jge
jb
in
pop
out
std
cmp
test
lods
xor
cltd
and
jne
add
mull
mov
add
inc
add
dec
pop
push
add
jmp
push
sbb
or
in
mov
test
add
jecxz
lahf
or
add
add
push
imul
sub
call
add
ljmp
outsl
arpl
ja
inc
add
or
add
int
add
outsb
movsb
add
jge
dec
cli
in
sbb
pop
sub
add
jmp
jp
add
push
sahf
mov
addb
pop
mov
adc
or
mov
cmp
pop
mov
add
add
or
add
lock
push
add
int
inc
add
lock
fidivrs
shlb
add
add
call
dec
and
add
movl
test
jmp
cmpsb
addr16
bound
lods
movsb
add
hlt
cmp
push
pusha
add
dec
cmc
lock
les
cld
bound
addr16
add
xlat
xor
clc
scas
xchg
cli
add
mov
xchg
ljmp
add
add
in
iret
dec
and
ss
pop
inc
add
jmp
ljmp
jnp
add
add
movb
cmp
and
out
cmp
adc
inc
add
arpl
jne
add
push
arpl
pop
add
call
pop
add
add
add
add
arpl
and
pop
js
or
add
addl
sbb
add
dec
mov
add
mov
loop
mov
dec
inc
add
add
out
lock
mov
inc
add
sbb
add
or
add
add
cmp
in
dec
fstps
inc
jmp
aas
lcall
clc
mov
push
add
xchg
add
scas
mov
cmpsl
add
roll
int
add
jnp
fistpl
sarl
add
outsl
in
or
mov
lock
mov
or
add
movb
add
cld
jle
sub
add
push
mov
je
movsl
add
inc
add
jp
add
inc
add
aad
add
add
mov
add
lcall
xchg
sbb
leave
mov
dec
mov
add
out
dec
bound
das
add
mov
and
xlat
sub
mov
pushf
cmp
addb
push
add
outsl
pop
in
mov
fwait
and
filds
scas
jne
lods
xchg
push
aaa
inc
add
add
inc
add
xchg
dec
and
mov
lret
add
add
nop
or
add
cmp
cmp
imul
shrb
push
lds
xor
enter
cmp
decl
or
push
arpl
cmp
jle
shl
in
inc
add
add
sbb
and
xchg
jmp
push
push
lock
int
in
or
cmp
clc
outsb
fcmovu
mov
or
xor
add
jl
add
add
stos
leave
hlt
xchg
xor
add
mov
mov
jmp
pop
xchg
loopne
jns
mov
jecxz
cmp
pusha
add
pop
out
sahf
lret
jmp
sub
mov
sldt
add
mov
aas
dec
repz
add
leave
mov
add
add
pushl
out
pop
sub
xor
add
add
mov
sub
imul
pop
adc
cmp
ds
shll
cmpsl
add
mov
fwait
inc
add
mov
add
ss
add
xor
mov
mov
sbb
das
cmpsl
inc
add
and
push
push
xor
push
lods
jecxz
pop
lods
or
sbb
jecxz
lea
lcall
dec
addb
div
mov
les
sub
dec
dec
mov
jae
movb
pushf
das
xchg
test
jb
nop
clc
int3
dec
mov
add
push
xor
sub
decl
jmp
push
add
push
add
sti
stos
out
scas
in
les
pop
scas
cmpsl
add
add
add
sub
fsubr
sbb
mov
add
add
push
out
pushf
cmp
mov
lds
pop
xor
mov
cli
scas
pop
addb
add
mov
fbld
xchg
add
push
ret
add
pop
inc
add
ljmp
add
and
push
cmp
inc
add
pushl
push
ret
popa
ret
gs
ds
sub
mov
or
inc
add
push
sub
out
mov
movsb
and
add
add
xchg
test
in
iret
cmp
pusha
jmp
xor
fcomip
mov
push
inc
add
adc
test
cmp
decl
mov
ret
and
mov
jmp
es
xchg
or
mov
push
loopne
lret
sti
adc
cwtl
push
push
jnp
add
pop
jl
add
cmpsl
add
jae
sub
ja
mov
pop
adc
loopne
pop
cltd
movsb
add
clc
mov
add
add
pushl
cwtl
jns
xchg
jnp
mov
cld
repz
daa
loop
incl
xchg
mov
add
add
sbb
and
addr16
add
fbld
outsb
mov
leave
loope
bound
sahf
inc
add
addl
inc
add
add
out
movsl
add
push
data16
dec
mov
push
pop
jns
dec
sbb
xlat
lock
int3
add
pushf
in
movb
add
sub
add
pushl
xor
add
adc
push
jmp
adc
mov
lret
les
xchg
ja
loope
mov
add
aaa
mov
arpl
js
int3
cmp
clc
dec
dec
or
mov
into
add
call
dec
mov
cmp
adc
jmp
xor
add
add
add
fbld
add
add
push
mov
jbe
and
stc
sub
jns
add
lret
jecxz
dec
out
leave
cmc
mov
mov
idivb
push
test
insb
mov
add
mov
lret
enter
add
dec
je
add
cmp
pop
push
int
jnp
sub
add
cmp
addb
add
call
movl
add
push
data16
add
ljmp
in
imul
lahf
icebp
and
mov
jmp
add
pop
mov
xor
inc
jb
push
mov
add
int3
add
scas
aam
loope
push
inc
add
loopne
pusha
add
add
stc
jecxz
dec
popl
sub
incl
jb
inc
add
aad
xor
dec
pusha
add
adc
mov
add
rcrb
test
lret
add
dec
mov
jbe
fs
add
out
inc
add
or
jge,pn
call
inc
add
push
add
add
add
mov
sub
insb
jmp
inc
addr16
repz
decl
add
push
xchg
pop
push
cld
inc
add
add
lods
insl
imul
and
push
add
jmp
lcall
dec
mov
rolb
add
mov
out
iret
pusha
add
adc
or
mov
add
addb
loope
stos
lock
ror
test
movsb
add
xchg
inc
add
add
lret
dec
adc
fdivs
add
mov
dec
inc
add
add
xchg
imul
xor
sar
fsubl
add
decl
add
add
push
mov
std
roll
roll
bswap
pop
mov
repnz
negl
pop
inc
add
int
pushl
loopne
outsb
insb
lcall
add
jg
movl
lea
adc
pop
add
mov
cli
push
mov
add
push
ret
sub
or
dec
jg
or
dec
cmpsb
add
add
add
dec
jae
inc
add
xchg
lds
cmp
pop
xor
push
inc
add
mov
lcall
sbb
repz
jmp
aam
cmp
js
xchg
mov
cmp
jmp
push
mov
js
ds
xchg
aad
add
mov
pop
aas
adc
add
add
add
test
lret
add
ljmp
add
pop
clc
jno
loop
fisttpll
int3
movb
scas
out
add
decl
adc
add
decl
mov
jmp
push
sub
roll
outsb
data16
data16
xor
xlat
popa
add
movsl
add
add
inc
add
cld
in
lock
test
mov
shrl
and
cmpsl
add
stos
inc
add
mov
xor
xchg
cwtl
sub
inc
add
add
xchg
nop
lock
sbb
imul
lcall
inc
pop
mov
and
fldt
imul
fadds
dec
inc
add
sbb
in
add
and
cld
add
xchg
and
sar
dec
mov
add
add
xor
out
sbb
mov
cld
cld
jne
aad
in
push
add
or
add
jp
or
pusha
add
pusha
add
add
lahf
into
mov
scas
xor
mov
leave
jae
add
push
pusha
jmp
push
lcall
add
call
je
add
ds
movl
outsb
daa
add
insl
pop
add
add
push
inc
add
push
add
push
rclb
add
jns
incl
push
movsb
add
pop
aad
jecxz
leave
nop
add
inc
add
add
dec
sbb
add
xchg
aad
add
xchg
xchg
in
adc
pusha
add
leave
and
lcall
mov
shrb
mov
sar
fnstenv
add
sub
inc
add
pusha
push
ret
push
popa
or
sub
mov
sbb
push
xchg
xlat
jnp
add
scas
xchg
imul
sub
jmp
push
in
incl
add
mov
cmp
add
fcoms
push
lahf
sbb
inc
add
push
xor
addl
jbe
outsl
inc
add
mov
jecxz
frstor
add
scas
addb
add
add
mov
roll
movb
and
scas
xchg
sub
nop
xor
clc
jmp
aam
mov
adc
call
adc
mov
in
mov
push
jle
adc
or
setnp
push
ret
inc
cmpsb
mov
mov
and
sub
iret
lahf
mov
or
jnp
addl
add
call
fmuls
imul
mov
add
inc
add
test
add
scas
or
lds
cs
push
mov
jmp
and
iret
lods
push
add
ljmp
xchg
jns
or
int3
fildl
into
and
loope
add
call
add
jle
lods
dec
rdtsc
repz
add
test
and
out
mov
add
add
pop
or
movl
mov
add
jecxz
mov
add
jg
add
pop
bound
adc
mov
ljmp
push
xchg
fadds
mov
add
call
push
pop
and
iret
pop
add
incl
pushl
pushf
pop
outsb
cmpsb
add
xchg
mov
cmp
jns
pusha
add
xchg
add
pushl
and
sahf
lcall
add
mov
lret
adc
in
jmp
sbb
fnstcw
mov
and
mov
lahf
pop
adc
dec
in
popf
mov
add
xchg
insl
aas
push
jne
jmp
push
xchg
push
push
pop
jmp
mov
stos
pop
jo
add
add
mov
mov
pop
aad
mov
pop
imul
mov
pusha
add
add
pushl
and
xor
or
mov
lods
mov
mov
add
fsubl
xchg
out
mov
jmp
xor
fstps
sbb
ja
add
daa
add
and
pop
add
add
call
add
out
sahf
mov
sub
mov
add
jb
iret
enter
test
pop
pop
out
push
clc
ljmp
push
mov
push
ret
cld
push
xchg
jno
xchg
ret
out
jb
pop
jne
add
add
inc
add
jns
loop
or
dec
iret
lods
jecxz
and
aaa
inc
add
and
inc
add
mov
mov
push
leave
das
xor
and
cmp
ret
add
jne
int3
fisubrs
add
loopne
sub
out
mov
nop
jle
inc
add
xor
loop
mov
and
bound
jmp
inc
add
push
jmp
arpl
jl
add
in
push
into
ljmp
sbb
and
mov
popa
add
imul
inc
add
into
cmpsb
add
cmp
push
inc
add
add
add
mov
jmp
sbb
pop
sub
add
in
mov
jg
aaa
sbb
push
fisubrl
sub
xor
pop
scas
imul
dec
mov
add
push
popf
jmp
sahf
push
daa
add
arpl
pushf
fiaddl
cmp
decl
outsb
jmp
jle
add
jg
xlat
ss
add
call
ret
add
xlat
sub
jae
add
or
arpl
xchg
jb
jecxz
adc
std
dec
push
lahf
cmp
add
add
inc
add
add
imul
popa
add
call
inc
add
call
dec
mov
cmp
leave
pause
lds
mov
outsb
pop
jae
loop
add
movl
add
leave
push
roll
and
imul
dec
lods
popf
adc
dec
dec
jg
les
dec
iret
push
lds
test
test
inc
add
and
jne
pop
jmp
call
mov
xchg
das
or
ljmp
lret
cmp
in
je
add
test
pop
das
inc
add
jnp
js
les
jg
mov
jmp
add
and
add
addr16
mov
jl
fimull
mov
add
fistpl
fwait
dec
cmpsl
add
adc
xor
mov
add
sub
sub
dec
xchg
dec
sar
xchg
jmp
das
or
and
jbe
add
add
add
mov
lret
pop
pushf
or
add
jg
add
pop
sub
add
ret
jmp
pop
push
aas
aam
and
add
addl
in
les
lods
xchg
xchg
stos
aam
mov
inc
add
test
jle
insl
sub
mov
jmp
add
notb
lcall
sahf
roll
out
dec
dec
roll
int
sbb
int3
test
jo
lss
fisubs
add
mov
fnstsw
call
dec
xchg
scas
inc
add
add
add
pop
pop
adc
xor
lcall
pop
mov
cmc
ret
add
add
dec
cld
je
in
sahf
sub
jmp
add
add
adc
push
jmp
dec
push
stos
push
insb
jle
negb
mov
imul
and
or
ficoml
sub
jnp
add
jmp
pop
fnstcw
leave
and
mov
add
add
incl
xchg
fwait
int3
ljmp
fwait
mov
add
jnp
repz
add
push
popa
jmp
push
popa
cmp
jmp
mov
add
and
mov
push
repz
je
out
ret
ret
add
add
incb
movl
add
lcall
cmp
in
adc
jmp
push
jle
ret
jo
add
int
add
fbld
xchg
rclb
cmp
add
jmp
cwtl
mov
dec
sbb
shr
ljmp
lock
lcall
add
or
sub
jmp
push
idivb
xchg
cmp
cmp
aad
sbb
jmp
cmpsb
push
cmp
mov
xchg
gs
and
dec
outsb
clc
add
fsts
inc
add
or
adc
mov
mov
sbb
test
jmp
dec
add
call
cli
jmp
add
out
dec
pop
addl
xchg
jnp
add
jg
jb
add
popa
add
mov
jmp
adc
lods
icebp
addb
adc
sbb
add
push
sub
call
add
outsb
test
test
roll
fcmove
inc
add
push
adc
mov
add
in
ret
add
sub
adc
xchg
cmpsl
add
stos
push
ret
add
push
popa
addb
movl
movsb
add
add
outsl
js
add
cmp
add
add
mov
add
btc
fdivrp
call
jmp
adc
jl
mov
add
add
dec
mov
mov
leave
test
roll
add
or
pushl
mov
push
jne
clc
roll
mov
testl
bnd
push
push
insb
sub
add
pusha
jmp
xor
push
adc
add
in
repz
add
push
daa
add
fdivr
mov
add
add
add
decl
cmp
pop
adc
rolb
add
jmp
jle
add
dec
xchg
cwtl
test
or
add
and
add
push
rolb
jp
sbb
shr
arpl
add
cmp
push
enter
push
jb
out
stos
sub
jno
add
sti
mov
add
imul
jle
mov
sbb
jle
mov
add
leave
or
sbb
pop
js
lods
jno
or
pop
add
stos
lock
dec
mov
add
add
add
jge
add
jae
xor
cld
jb
mov
add
dec
in
sub
sub
sub
sbb
dec
fcom
mov
add
stos
add
add
add
add
add
stc
stc
cld
sbb
push
add
lcall
push
ret
push
sub
mov
jmp
enter
mov
or
inc
add
add
flds
std
lock
cltd
xlat
and
jae
sahf
mov
mov
add
dec
inc
add
bnd
mull
add
incl
sub
pop
ds
iret
sub
and
sbb
and
pusha
add
jae
jno
add
jle
add
add
scas
into
add
cli
in
addb
and
push
pushf
mov
add
add
fld
add
test
js
outsl
loop
ret
add
add
cli
xchg
dec
divb
add
mov
xor
inc
add
cld
or
int
add
sub
add
xor
push
jmp
aas
push
and
add
cmp
divl
and
addl
in
frndint
inc
add
fisttpll
add
and
ss
add
add
pushl
add
push
ret
mov
add
sahf
loope
fsubrl
in
pop
fisttps
iret
xchg
jg
push
push
mov
add
sbb
add
shlb
cli
rcl
jl
adc
inc
add
add
add
add
dec
pop
rolb
in
stc
js
add
sbb
sbb
mov
jp
add
add
and
cmpsl
add
lods
dec
add
out
or
scas
pop
add
xchg
fsub
add
aad
add
add
jnp
add
jge
jmp
add
jl
push
mov
mov
fidivl
int
sbb
cmp
add
mov
inc
add
and
or
popf
je
in
mov
add
test
mov
movb
mov
in
sbb
fsubr
inc
add
add
push
mov
decl
add
enter
scas
xor
pop
inc
add
dec
xchg
mov
add
push
imul
nop
jbe
jb
sub
lds
icebp
cmp
push
jecxz
loope
ds
js
addb
push
les
xchg
sub
or
sbb
pushl
fsts
add
push
cmp
add
adc
add
sub
mov
add
inc
add
cmp
jmp
add
fbstp
imul
std
lcall
lods
xchg
sbb
stos
jmp
cmpsb
add
mov
add
jns
scas
sbb
pusha
add
in
roll
pushf
ja
pop
enter
test
pop
std
ljmp
jbe
add
and
lcall
adc
push
hlt
call
jb
and
sub
dec
cmc
dec
mov
add
add
sub
add
push
and
daa
add
add
mov
jge
sarb
mov
sti
cmp
xor
or
in
mov
add
sbb
dec
dec
mov
fcomps
call
sbb
add
insl
roll
mov
inc
add
push
mov
inc
add
insl
movb
push
mov
sarb
addl
add
mov
cwtl
mov
dec
mov
add
push
imul
movl
out
out
jnp
push
js
add
add
push
add
repnz
add
push
ret
testb
mov
and
jge
jmp
mov
lds
push
jmp
pop
add
cli
fsub
add
add
insl
stos
bound
lock
sub
aaa
int3
lock
bound
sub
jge
shlb
and
popa
add
popa
add
ret
lods
jmp
lock
xchg
push
notb
jge
or
mov
stc
push
pop
cwtl
inc
add
sti
ja
add
cld
push
ret
jb
mov
ljmp
out
adc
push
xchg
lods
nop
jb
inc
add
add
sbb
jmp
adc
xchg
push
out
scas
and
sahf
mov
pop
inc
add
data16
mov
inc
add
push
add
ret
mov
push
inc
add
pop
cld
arpl
xchg
push
ret
mov
sbb
sub
add
in
call
jnp
addb
add
std
push
out
sbb
add
icebp
ret
add
into
jne
pop
add
xor
add
lcall
in
fildll
pop
pop
addl
fidivrs
mov
jns
adc
push
xchg
call
jmp
ljmp
call
decl
mov
jnp
push
mov
dec
jno
adc
inc
add
inc
add
jns
call
data16
cmpsb
add
add
pop
out
jae
add
push
push
xor
add
sahf
cmp
xor
pop
adc
pop
test
sbb
add
or
dec
sub
dec
xor
mov
addb
jb
add
bound
loopne
add
jmp
leave
xchg
sbb
loop
jne
add
mov
jno
add
add
mov
les
push
mov
adc
add
movsl
add
mov
add
add
jb
push
mov
lahf
dec
mull
pop
mov
sbb
mov
mov
iret
mov
add
add
jns
lds
push
xlat
cmp
das
inc
repnz
cmp
leave
mov
mov
in
sub
cmp
xchg
and
stos
mov
push
ljmp
sub
sub
mov
add
xchg
sub
add
icebp
shlb
add
push
mov
cmp
push
pop
add
movsl
add
jge
sbb
into
push
adc
push
testb
dec
ret
gs
add
jns
xor
jmp
mov
mov
ljmp
add
jle
push
jmp
push
fucomip
stos
cmpsb
cmpsb
mov
add
scas
xchg
rol
add
test
cmpsl
add
dec
loop
xor
jmp
add
sub
mov
add
xor
push
ret
cmpsb
popa
inc
push
insb
add
ljmp
add
lea
pop
sarl
dec
cmc
pop
add
jno
add
add
nop
xor
pop
shl
mov
pop
dec
dec
aas
dec
mov
jo
sbb
sbb
aaa
pushf
out
xlat
adc
add
call
in
je
push
popf
scas
and
hlt
adc
pop
push
add
pushl
sub
mov
xor
movsl
add
ds
push
add
decl
mov
ss
jmp
mov
add
push
jmp
sub
push
enter
ss
in
fxch
xor
sub
dec
xchg
icebp
pushf
insb
cmc
or
fmulp
pop
add
dec
mov
faddl
decl
pop
add
les
or
add
test
or
dec
sub
mov
gs
add
push
add
add
addl
loope
mov
sti
mov
add
add
add
lds
xchg
mov
fs
add
cltd
jae
jae
add
enter
push
mov
popa
inc
add
cmpsb
or
adc
add
add
jl
or
roll
lret
xor
iret
mov
pandn
xchg
jb
stos
inc
add
inc
add
outsl
pop
out
adc
add
incl
push
mov
mov
inc
add
push
mov
jmp
faddl
ljmp
add
add
jg
add
add
add
ljmp
cmpsl
add
sbb
int
int3
add
decl
add
addl
or
add
mov
sub
dec
mov
jnp
add
xchg
xchg
lea
sbb
add
add
inc
add
push
mov
cmp
cmp
add
lcall
mov
add
jmp
add
call
out
or
push
add
repnz
add
add
repnz
cwtl
or
add
pushl
aad
push
jmp
push
lock
jmp
add
decl
rcr
aaa
scas
clc
adc
cltd
testb
dec
addb
xchg
mov
jae
je
add
add
xchg
jmp
push
mov
fimuls
add
popa
add
push
insb
scas
jg
insb
jno
ss
pop
xlat
cmp
add
mov
add
jmp
mov
push
sbb
mov
cmp
add
xrelease
iret
roll
pop
popf
jle
dec
addl
lret
sub
add
fwait
cmc
pop
pop
cmp
xchg
lret
stos
ret
cmpsl
add
and
pop
cld
int3
jno
jg
add
push
jmp
inc
push
ljmp
xchg
cmp
cmp
add
mov
test
call
sub
push
negl
add
dec
adc
push
add
mov
add
std
aas
jecxz
adc
push
add
ljmp
dec
incl
dec
cmp
mov
dec
push
lock
dec
mov
icebp
daa
add
push
cmc
jb
add
push
lock
movsl
add
jmp
dec
popa
or
pusha
add
jmp
push
inc
push
sub
jmp
push
and
into
outsl
dec
mov
repnz
movsl
add
hlt
pop
jg
ja
add
repz
xchg
fnstsw
cmp
add
pop
pop
add
ss
add
add
adc
adc
mov
popf
decb
fadds
sub
lcall
push
ret
push
flds
add
add
jnp
nop
mov
ljmp
push
xor
xor
add
daa
add
or
add
jns
add
add
add
or
pop
xchg
mov
add
call
mov
mov
add
lods
scas
xchg
mov
add
add
lret
add
pushl
add
add
fidivrs
pop
pop
mov
pushl
addb
daa
add
add
decl
popf
insb
add
adc
std
loope
and
or
xlat
ret
cmpsb
add
jp
xor
pushf
mov
push
add
decl
xor
push
or
sar
push
push
ret
mov
add
xor
mov
adc
add
fwait
ret
add
add
pop
push
add
jmp
push
add
int3
lock
fists
jecxz
mov
add
dec
addl
popf
push
and
into
jo
ljmp
push
mov
lcall
pop
daa
add
push
movl
ds
sub
xchg
pop
and
mov
add
add
out
daa
add
add
mov
push
add
push
ret
ret
pop
stos
in
mov
addl
add
inc
add
add
add
add
jge
fistl
adc
test
adc
xlat
shll
add
push
ret
cmp
ljmp
push
stc
adc
add
jbe
add
ficompl
xchg
addb
xchg
and
jbe
in
lds
inc
add
inc
add
divl
add
and
add
push
mov
scas
cmc
or
add
inc
add
call
sbb
add
dec
jnp
add
push
and
or
fstl
test
mov
add
test
add
jbe
lods
cmp
add
jb
ljmp
sub
ret
or
mov
add
jb
add
sub
and
sub
add
dec
aam
aas
icebp
ja
fldenv
add
roll
or
add
mov
push
add
add
push
ret
xchg
mov
iret
dec
cli
sub
arpl
jp
iret
cmp
mov
xchg
in
in
sbb
add
add
push
stos
jmp
and
push
or
sbb
pop
cld
add
add
lcall
add
add
sub
add
add
stos
aas
aad
aad
jnp
jne
dec
lahf
ss
add
jmp
adc
push
push
sbb
and
mov
add
push
aas
mov
cld
test
data16
add
in
fdiv
in
adc
sbb
add
js
mov
push
nop
jae
pop
aad
add
jae
push
inc
add
add
dec
outsb
pop
shll
dec
roll
add
loope
sbb
push
or
jg
add
fildll
mov
mov
add
roll
in
bnd
test
jecxz
mov
add
leave
addl
mov
jmp
or
mov
add
icebp
add
jmp
add
dec
sub
flds
decl
mov
stc
xor
add
lcall
or
in
cli
movsl
add
imul
add
add
sbb
add
aam
or
jb
test
and
mov
or
mov
inc
add
adc
roll
add
mov
sahf
int3
and
mov
sbb
add
sbb
inc
in
xor
pushl
add
and
lcall
xchg
rcrb
push
add
add
or
xor
add
aaa
pop
icebp
inc
add
or
sbb
add
jb
js
call
add
ljmp
dec
rcrb
push
add
add
ljmp
push
jmp
sbb
mov
dec
sub
xlat
lret
add
addb
clc
pop
push
into
push
lret
and
jns
sbb
insb
cmc
sub
pusha
add
mov
or
hlt
mov
inc
add
sub
add
add
or
add
decl
lods
call
pop
arpl
dec
les
in
movl
mov
mov
add
jl
add
mov
add
fisttps
add
in
gs
jnp
mov
sahf
fnstenv
and
push
icebp
ljmp
ficoms
sbb
push
fildll
add
add
add
nop
add
add
add
daa
add
mov
add
add
add
icebp
arpl
addl
mov
jl
add
mov
jmp
das
sbb
push
sbb
addl
push
fucom
add
addl
adc
loop
sub
cs
fstps
add
pushf
addb
add
aas
push
mov
add
mov
jmp
push
aam
pop
add
jmp
add
jb
mov
jmp
sub
pop
out
push
mov
add
incl
ljmp
add
test
test
pop
mov
or
add
add
roll
stc
inc
add
jg
popa
add
sbb
test
aam
jmp
cmp
inc
and
mov
inc
adc
addl
add
mov
mov
rolb
fstpt
bound
test
call
add
je
push
push
cmpsb
add
mov
mov
sahf
jno
fmuls
mov
faddp
add
dec
jmp
fsts
pop
push
ret
add
flds
loop
aaa
jecxz
lret
ljmp
adc
add
sbb
jle
add
and
fcoms
ss
add
ret
fisubrs
push
movl
mov
add
pushf
dec
nop
adc
lods
mov
pop
pushf
jae
add
fstpt
ljmp
add
ss
jp
lods
xor
mov
add
add
ljmp
xchg
mov
addb
cmp
lahf
jnp
add
in
int3
lds
and
or
ljmp
and
push
ret
inc
adc
pop
out
hlt
sub
push
add
mov
add
imul
xor
and
sub
mov
decl
out
fiadds
xor
add
roll
add
add
add
and
sar
sbb
outsl
mov
bound
insb
das
aam
sub
sub
add
fiaddl
pushl
lock
add
add
fisubrl
fsubrl
rcr
les
dec
or
add
cmpsl
add
add
or
add
call
add
test
and
pop
int
je
push
ret
lds
jl
add
icebp
mov
sub
call
push
and
stc
pop
sub
push
mov
or
mov
add
pop
add
clc
ret
lea
fcmovnbe
or
jbe
add
add
mov
ds
add
add
push
ja
add
push
xchg
cld
xor
or
xchg
jecxz
cmpsb
add
push
ds
mov
cmp
add
cli
jb
push
add
leave
jmp
add
mov
add
mov
jmp
push
inc
mov
les
lret
dec
mov
pushf
mov
cwtl
rorb
adc
add
add
jne
jmp
ret
decl
js
inc
add
push
aad
ror
add
call
leave
push
loope
fistps
add
add
add
pop
dec
push
push
add
pusha
add
mov
movsb
inc
add
pop
cld
addr16
add
out
jge
mov
call
das
sbb
add
jae
add
dec
xor
fisttpll
cmpsb
add
fadds
in
add
cmp
xchg
mov
mov
add
add
jo
add
or
push
xchg
inc
add
in
pushf
pop
and
insl
jne
sub
inc
add
sub
jmp
push
arpl
mov
rcrb
mov
add
sub
push
add
arpl
aad
add
movsb
jmp
add
xor
out
xlat
faddl
jmp
add
aaa
or
fildl
sub
imul
add
adc
xchg
ret
add
jl
add
cmp
or
fiadds
add
fisubs
inc
add
add
jns
enter
pop
sub
or
push
std
xor
cmp
outsl
cld
add
cli
push
sub
and
mov
test
jb
jge
add
mov
xchg
fimull
xchg
dec
repnz
test
pop
mov
outsl
xchg
ja
push
in
fisttpl
add
popa
add
jmp
jl
add
jo
mov
cmp
idivl
or
push
test
cmc
hlt
mov
add
sbb
add
in
fstpl
loopne
lret
jbe
bound
sub
add
sub
mov
ljmp
enter
mov
movb
int3
nop
test
mov
loop
add
movb
add
add
cli
nop
mov
mov
cmp
add
inc
and
in
cld
cmp
lret
add
roll
sub
or
xchg
sbb
add
sub
repnz
hlt
mov
mov
cld
ret
stos
mov
lcall
fstpl
jle
push
ljmp
cltd
mov
cmpsl
add
add
std
cld
aad
add
adc
mov
add
add
adc
fld
add
or
mov
shlb
mov
addb
cltd
loope
cs
xchg
out
roll
lods
push
ret
push
dec
mov
dec
insl
mov
and
sub
adc
add
cli
insb
aam
pusha
add
add
push
add
fadds
cmp
loopne
les
test
cli
mov
in
mov
popa
add
add
add
pop
pop
xor
test
cmp
push
sub
cmp
add
push
add
aad
pop
mov
aam
mov
jg
cmove
hlt
stos
and
mov
cltd
dec
mov
add
add
test
add
lods
fincstp
movsb
add
cli
push
add
add
dec
dec
aad
mov
and
icebp
lods
into
imul
add
jmp
add
add
pushl
cmp
or
addb
add
arpl
pop
shrl
in
jp
inc
add
xchg
adc
lods
mov
bound
add
add
or
dec
icebp
pop
icebp
pushf
and
mov
popf
pop
mov
lret
mov
sub
dec
notl
push
add
push
lods
les
sbb
lahf
aad
sbb
dec
mov
iret
into
mov
push
pop
idiv
call
push
adc
add
mov
cmp
mov
xor
cltd
aad
addl
sahf
push
pop
stos
mov
or
add
sbb
popa
lock
call
xchg
xchg
sub
add
add
xor
test
and
add
call
nop
xchg
roll
adc
add
ja
inc
add
lret
xchg
push
aam
pop
and
jle
pop
add
adc
outsl
rolb
xchg
loope
adc
add
add
lods
je
mov
add
add
daa
add
cmp
arpl
mov
add
aam
xor
or
fsubrl
xchg
es
jle
xchg
push
add
cmp
mov
push
popa
add
add
dec
cmp
pop
mov
push
add
add
add
mov
add
pop
test
in
popa
add
add
leave
repz
inc
add
xchg
insb
iret
in
mov
movsb
add
lods
inc
add
lcall
imull
jl
push
bound
movsb
add
add
xchg
jge
repnz
jae
fnsave
pop
add
shl
cmp
dec
out
cmp
add
sbb
or
outsl
or
lods
aas
cmc
sbb
add
bound
cltd
pop
pop
add
lock
add
stc
push
mov
jge
add
and
add
push
push
enter
pop
or
int3
fadds
jne
add
ret
xlat
ficoms
dec
mov
loope
negb
roll
dec
dec
addl
mov
add
iret
scas
and
movsl
add
pop
xor
aas
inc
add
incl
push
mov
add
cmp
add
clc
push
sbb
jae
add
add
jmp
ret
add
mov
and
or
cmpsl
add
add
in
ret
add
hlt
mov
or
and
dec
cmp
pop
aam
sub
add
push
cli
cmp
add
xor
insb
adc
adc
add
push
rolb
add
dec
jmp
add
ljmp
jmp
pop
ret
fnstcw
sub
or
or
inc
add
cmp
cwtl
movb
add
sbb
ja
movsb
add
cmp
pop
aad
add
add
dec
mov
xor
lods
ljmp
add
lock
fs
rorl
xor
push
jo
jns
add
fwait
jns
push
dec
test
ret
arpl
addl
cmp
imul
call
ja
adc
loop
add
cltd
cmp
test
add
roll
mov
lcall
pop
dec
dec
push
fwait
insb
xchg
cmp
sti
mov
cmp
ret
add
repz
fsubr
inc
add
in
cwtl
cwtl
cmp
add
jnp
xchg
jbe
movsl
add
rolb
fiaddl
xchg
cmp
rolb
mov
push
jbe
into
push
stc
pop
add
rolb
jnp
inc
add
shl
add
add
icebp
addb
mov
fdivrs
in
xchg
push
and
inc
add
add
xor
add
cmp
daa
add
jg
add
addb
std
sbb
add
lea
pop
adc
mov
push
out
cltd
jo
inc
add
mov
push
add
scas
add
in
mov
inc
add
or
xchg
movl
jmp
add
mov
sti
push
mov
fldt
movb
addl
insb
xchg
mov
in
jmp
mov
jl
add
sahf
inc
add
adc
outsb
adc
fists
dec
xor
add
add
mov
add
pop
in
xor
aad
or
add
add
sub
add
bswap
mov
mov
add
push
push
push
ret
pop
mulb
xchg
fs
add
jb
jmp
push
ja
xchg
loopne
pop
imul
cmp
cmpsb
add
filds
mov
jmp
fbstp
push
dec
in
pop
movsb
add
inc
add
push
sarl
lds
cmpsb
add
jle
add
jmp
xchg
bound
lea
mov
push
xor
cmp
dec
stc
mov
push
or
repz
das
and
xor
jno
mov
mul
add
push
pop
jae
mov
push
jmp
addr16
mov
arpl
stos
lret
xor
add
jbe
sbb
pop
cmp
mov
inc
add
add
sti
xchg
test
movsl
add
sbb
push
cmp
dec
mov
xchg
fwait
add
enter
inc
add
add
jmp
add
sub
adc
mov
push
add
pop
xor
cwtl
test
movl
jno
jmp
sbb
roll
xchg
pop
fldt
test
out
imul
adc
cmpsl
add
icebp
or
out
fwait
and
mov
cli
out
mov
sub
mov
jl
add
adc
fs
add
jl
add
add
iret
xchg
das
xlat
in
sub
or
jp
add
sub
movsb
add
xchg
std
aad
xor
imul
add
add
orl
ret
sub
jne
add
add
add
push
jmp
cmpsb
cmp
add
add
and
loopne
lret
js
test
roll
ljmp
nop
sub
fmul
add
mov
inc
add
add
xchg
sub
inc
add
stos
mov
sti
stos
mov
in
adc
xlat
mov
mov
inc
add
add
addl
int
inc
add
add
push
add
or
inc
add
add
ret
add
add
movsb
add
jle
add
push
insl
push
loop
mov
add
jns
add
add
out
jecxz
mov
cli
pop
add
sbb
mov
fsubrs
xrelease
test
lret
roll
pushl
jbe
pop
xor
add
cmc
mov
fwait
mov
pop
add
pop
arpl
jge
mov
push
ret
stos
inc
add
add
add
add
cmp
add
add
lock
add
pushf
jbe
movl
test
add
mov
mov
add
mov
test
loopne
das
cmpsl
add
inc
jmp
cmp
pop
loope
incb
dec
imul
icebp
push
les
inc
add
data16
test
dec
dec
cltd
mov
js
sub
scas
int
add
pop
addl
inc
add
add
add
sub
push
pop
sub
xchg
into
int3
mov
cmp
and
js
add
add
add
xor
cmp
add
xchg
cmp
add
popf
aas
pop
add
jle
data16
add
jmp
cmc
lods
int
add
pop
out
dec
push
push
scas
jnp
sbb
popf
cmpsb
add
cmp
pop
loopne
inc
add
ljmp
add
adc
ret
jmp
aam
js
ret
cmp
pushf
xchg
outsb
jae
add
sbb
incl
jmp
adc
add
and
cmp
add
ljmp
xor
bound
fnsave
xchg
sbb
cwtl
movb
jae
inc
add
popa
add
dec
dec
xchg
push
cli
test
add
pop
cmp
sbb
push
mov
mov
data16
addb
mov
pop
inc
add
ljmp
pop
inc
add
imul
pop
add
push
push
enter
pushf
sub
inc
add
ds
add
pop
fisubs
pusha
add
and
les
insb
jbe
sbb
std
mov
add
cmp
or
mov
clc
ret
add
adc
add
add
aad
mov
sbb
add
push
mov
lcall
fcmovu
lods
add
add
clc
xchg
jno
lock
or
inc
add
add
outsb
or
jbe
or
add
out
sti
movb
arpl
pop
lahf
sub
mov
pop
inc
add
sahf
mov
inc
add
or
mov
scas
xchg
mov
add
pop
cltd
insl
insb
jne
fidivrs
int
lcall
and
popa
push
jp
add
lahf
push
ljmp
clc
mov
mov
push
fcoms
pop
hlt
pop
jg
dec
cmp
aam
pushf
dec
enter
add
cmp
cmp
ljmp
lock
mov
add
ret
clc
pop
adc
sub
jge
add
movb
daa
add
aam
add
jo
pop
jmp
in
adc
or
sub
jnp
jmp
jmp
add
test
xlat
xor
adc
addb
add
in
lcall
mov
inc
add
mov
lret
loopne
roll
and
push
add
add
ret
add
insl
dec
push
dec
cmp
addb
sti
add
and
jo
cmp
add
mov
jp
xor
push
dec
int
inc
add
or
addb
mov
add
mov
add
in
jb
inc
add
aam
add
std
cltd
addl
pop
in
enter
push
jge
add
and
jbe
push
stos
jmp
adc
push
dec
push
jnp
jge
dec
aam
enter
dec
mov
popa
add
sub
jl
loopne
sti
push
inc
add
xchg
jb
add
mov
fstps
cs
adc
mov
xchg
loopne
xchg
inc
add
loopne
bound
jno
add
mov
inc
add
cmp
dec
sub
mov
mov
ljmp
xchg
ret
ret
sar
fimuls
add
xchg
jnp
add
ljmp
arpl
lcall
pushf
add
dec
in
mov
push
and
aas
push
xor
pusha
add
add
jl
pop
add
adc
dec
mov
mov
jmp
imull
shl
addl
add
mov
jl
mov
lods
lea
add
incl
test
pushf
xchg
scas
push
mov
imul
lret
addr16
add
mov
std
repnz
rolb
bndldx
call
push
ret
pop
sub
mov
scas
rolb
movb
and
inc
add
out
popf
test
stos
dec
addb
add
fstl
add
and
jecxz
ss
in
fsubr
movb
and
xlat
push
outsl
inc
add
enter
aaa
add
pushl
popa
add
jge
jmp
sbb
push
test
mov
shrd
dec
mov
cld
icebp
roll
add
pop
add
lcall
pop
mov
push
push
jg,pt
adc
or
add
movb
js
add
jo
mov
cli
popf
fiadds
decl
and
gs
add
dec
cmp
and
aam
addl
mov
push
js
mov
int
loope
test
add
add
jo
add
add
dec
mov
jle
stos
push
xor
add
icebp
push
dec
and
int
mov
insl
adc
add
inc
add
ja
fcoml
push
cmp
ss
or
pusha
add
push
loopne
sub
push
inc
mov
add
lahf
repz
add
push
ret
sbb
aaa
mov
or
add
mov
lret
lahf
fldl
mov
sub
add
sub
pop
das
adc
add
add
ljmp
add
inc
add
mov
add
add
dec
mov
shl
push
ret
sbb
call
mov
cs
add
add
je
xor
sub
fnstsw
loop
push
push
test
jle
cmc
mov
add
div
jmp
add
sbb
int3
sub
jmp
and
js
adc
inc
add
pop
and
mov
mov
mov
sub
cmp
xchg
test
or
push
add
jmp
add
add
add
add
cld
push
jmp
add
dec
cmp
cmc
das
lahf
stos
aaa
push
jo
cld
outsb
lret
mov
jp
cld
xlat
inc
add
jae
iret
jo
aam
mov
cwtl
or
cmp
inc
add
dec
ret
add
push
shrl
ficompl
push
jmp
popa
cmp
add
sbb
lods
clc
in
jge
jo
add
xchg
xor
imul
in
out
jle
cmp
lcall
inc
add
sub
sbb
sbb
sbb
xor
jmp
push
push
into
jb
stc
dec
addb
add
lahf
scas
and
add
cmp
ja
dec
mov
insl
mov
lahf
pop
cmp
ja
loope
outsl
icebp
cmpsl
add
jmp
outsl
imul
dec
add
push
cwtl
outsl
push
rcrb
adc
push
addb
add
and
xchg
jae
cmpsl
add
in
or
test
dec
sbb
pop
movb
lods
movaps
add
add
dec
popa
add
call
mov
sbb
jmp
js
cmp
xchg
dec
jbe
xchg
cmc
mov
add
jmp
stos
add
int3
mov
add
mov
add
push
add
add
aaa
cli
outsl
lret
sub
mov
cmp
push
pop
add
inc
add
popf
dec
out
data16
repz
cmp
add
pop
sub
or
mov
add
ret
add
xchg
add
repz
mov
add
add
test
add
and
int
mov
fists
cmp
add
add
daa
add
cmp
mov
dec
clc
in
neg
add
mov
add
addl
daa
add
push
in
addb
popf
mov
add
cmp
add
hlt
push
dec
jmp
jb
mov
daa
add
mov
in
fcmovu
lods
jbe
fildll
xchg
pop
pop
add
and
addl
add
jmp
add
push
popa
add
popf
popa
add
addb
jmp
push
jmp
lock
and
add
add
mov
jmp
popa
push
xor
into
inc
add
dec
jecxz
out
rcrb
mov
ljmp
insl
inc
add
and
push
xor
jmp
icebp
mov
cld
fs
xor
add
and
and
mov
cmp
call
addr16
adc
add
fildl
lcall
push
add
popa
add
xor
xchg
data16
mov
or
call
aas
xchg
pop
dec
sarl
hlt
movsl
add
pop
add
add
adc
mov
dec
out
js
insb
sbb
and
add
das
ljmp
add
cld
jnp
xchg
je
cmpsl
add
rclb
add
pushl
add
mov
jmp
lcall
cmpsb
add
xchg
mov
add
test
cli
xchg
pop
movups
inc
add
out
sub
push
pop
popf
imul
and
jge
loop
xchg
call
push
and
add
push
push
andl
add
add
mov
add
out
outsb
js
ret
add
jp
xchg
call
mov
xchg
jecxz
mov
push
les
in
pop
mov
add
add
add
es
push
push
and
jp
add
lods
pop
add
push
add
pop
add
add
cmp
cmp
jl
incl
mov
scas
aad
add
aam
incb
imul
add
icebp
test
jle
lret
push
push
inc
add
pop
outsl
and
adc
jmp
push
mov
jmp
push
or
mov
cltd
sbb
mov
jmp
adc
mov
mov
aas
ljmp
mov
mov
push
cmp
or
mov
add
xchg
lods
mov
loope
and
inc
add
ret
add
sub
add
rolb
inc
add
add
xor
adc
xchg
jmp
lcall
xchg
loopne
jno
add
or
jge
cmc
imul
test
xchg
test
je
add
push
push
add
cmp
aad
ret
add
mov
xor
xor
shl
jns
dec
xchg
lds
cmpsl
add
clc
clc
cld
pop
idiv
mov
jmp
push
or
add
lock
outsb
lret
sub
inc
add
test
insl
inc
add
addl
add
insb
mov
xor
add
pusha
add
lahf
inc
add
add
fnstsw
add
movb
add
add
loope
jge
aaa
push
pop
add
fdivr
insl
insl
jbe
add
and
repz
or
mov
add
dec
mov
clc
iret
scas
rclb
arpl
insb
idivl
sbb
push
mov
ficoml
push
mov
loop
dec
scas
push
in
pop
cltd
add
pushl
mov
add
add
mulb
xchg
add
add
jp
push
ficoms
ret
mov
push
testl
jmp
mov
aaa
cmp
inc
add
sarb
in
sbb
test
jmp
xor
or
inc
add
pop
or
add
add
jmp
test
fists
outsb
iret
push
jae
xor
mov
xor
fwait
cld
jae
sarl
jmp
xchg
sub
fldt
ss
add
jmp
out
or
test
sbb
icebp
clc
inc
add
mov
pop
pop
bound
push
sbb
call
mov
insl
outsb
lahf
pop
dec
xor
iret
mov
adc
add
movl
add
push
fimull
in
jle
divb
and
pop
add
pusha
add
xor
adc
jne
lcall
call
push
ret
into
popa
adc
xchg
sti
adc
add
dec
popa
add
sub
xchg
pop
jo
je
add
mov
xor
add
sub
outsb
pop
mov
call
add
leave
or
mov
add
add
adc
and
add
add
sbb
jmp
in
xchg
add
lcall
dec
outsl
scas
leave
pop
addl
fisubrl
jbe
pop
jo
out
dec
jbe
filds
pushl
add
addb
add
sub
add
add
jmp
maskmovq
negl
xchg
dec
mov
push
add
pop
jb
clc
push
cli
jmp
mov
ja
lods
outsl
cmp
addb
in
push
jle
data16
nop
out
push
sbb
push
jo
pop
stos
xor
test
or
push
mov
add
roll
insl
add
call
jb
add
add
adc
and
and
mov
sahf
leave
movsl
add
jns
add
inc
add
add
or
jmp
adc
add
dec
popa
add
jge
xchg
add
push
daa
add
add
or
sub
add
dec
movsl
add
xchg
push
add
mov
in
pop
movb
add
add
decl
pushl
add
in
ds
pushl
or
in
sub
mov
dec
insb
mov
movl
mov
ret
addl
and
outsb
xor
mov
in
jmp
cmp
imul
mov
in
test
inc
add
cli
jno
das
stc
inc
add
mov
add
add
jmp
add
add
add
push
stos
mov
into
jl
mov
add
incl
sub
push
push
add
imul
fstpt
imull
cs
push
xor
insl
sub
add
jnp
sbb
add
testb
jecxz
sub
add
es
push
add
add
sti
in
and
test
mov
insl
sahf
xor
xlat
ret
add
lock
imul
mov
or
add
call
roll
add
add
outsl
inc
add
addb
loopne
in
lahf
jo
pop
cwtl
or
cld
in
pop
add
incl
mov
mov
cmp
sub
in
sub
lcall
sub
pop
cli
aam
fsubl
add
sbb
xor
gs
add
repz
push
add
decl
add
int
dec
and
dec
ret
stos
add
add
add
lcall
incl
or
loop
sbb
lods
test
dec
sbb
xchg
pop
mov
xchg
push
lret
js
xor
jle
int3
jl
mov
add
add
mov
lret
loope
push
add
pop
add
push
cmp
ljmp
ret
add
mov
add
call
lret
ret
push
rclb
pop
fstp
jno
push
or
add
inc
add
movsl
add
ret
add
lds
fistps
pop
jno
add
jmp
jmp
push
loop
xor
fadds
cmpsb
add
repz
add
jecxz
xchg
lcall
mov
fwait
out
lods
pop
cmp
out
lock
cmpsb
add
loop
out
jae
cmpsb
add
call
adc
lea
xlat
outsl
and
sbb
movsl
add
cmp
add
add
imul
lcall
xchg
add
lds
mov
add
push
jg
xor
inc
add
add
add
pop
jne
mov
and
sbb
cltd
shrb
xchg
pop
xlat
aad
xor
int
add
add
mov
lods
cmp
add
add
dec
xchg
push
jl
or
lahf
test
outsl
lret
iret
movsl
add
add
sbb
mov
adc
cmp
mov
cmp
add
dec
testb
mov
fimuls
add
cltd
fdivp
add
sub
mov
mov
add
push
stos
cmp
dec
mov
sub
ja
or
sbb
push
add
lea
dec
jle
add
mov
sbb
icebp
push
cmp
add
fistpll
xchg
jg
add
in
fisttpl
leave
rolb
repnz
add
add
pushl
add
xor
add
mov
xor
add
add
dec
cmp
fs
mov
add
call
pop
adc
add
add
insb
inc
add
and
inc
add
call
mov
jb
add
jbe
add
clc
pushf
insl
ss
cmp
fwait
push
mov
mov
push
dec
mov
add
add
add
xor
add
push
add
and
data16
push
add
push
add
add
inc
add
imull
shl
mov
mov
add
out
sub
dec
ljmp
pop
movb
cmpsl
add
shr
and
stc
mov
ret
add
jmp
cmp
add
outsl
addl
outsb
mov
mov
add
mov
jns
sbb
mov
adc
push
add
add
xchg
shll
pop
fimuls
and
xchg
lods
mov
add
mov
pause
add
incl
add
fst
jnp
out
push
add
sbb
or
in
push
push
add
inc
add
pop
movsb
add
iret
mov
lcall
jne
xor
cli
jge
fisubs
mov
add
roll
add
call
outsl
mov
insl
ret
pop
fisubl
add
add
sti
add
pushl
cmp
inc
add
push
mov
or
add
mov
sub
add
fcomp
or
adc
lds
push
add
and
cmp
in
cwtl
push
xchg
mov
inc
add
mov
jmp
out
mov
cmpsb
add
les
mov
sub
xchg
pop
or
cs
pop
loop
mov
sahf
or
add
pop
xor
add
push
sbb
aam
dec
bound
pop
cld
fstl
pop
or
adc
call
push
lar
call
add
jns
hlt
test
mov
adc
loop
cld
mov
mov
nop
xor
cmc
ret
add
push
add
nop
adc
lock
and
adc
mov
sahf
addl
call
or
into
dec
cmp
rorl
add
cwtl
sbb
imul
xchg
lahf
mov
mov
lcall
loope
dec
and
stos
pushf
push
dec
out
data16
fimuls
dec
into
aas
dec
and
shrl
mov
in
xchg
dec
xchg
or
aam
je
inc
add
inc
add
or
add
add
mov
ja
js
lock
cmp
add
add
incl
sbb
push
xchg
scas
or
ret
add
push
popa
add
scas
iret
out
icebp
sahf
rcrl
pop
mov
jp
add
loopne
faddp
add
iret
xor
add
decl
xchg
movsb
add
cmpsb
add
movl
mov
or
add
lcall
test
jbe
sbb
sbb
rcrl
and
jg
inc
add
xchg
lcall
je
add
lahf
bound
das
insb
mov
stos
xadd
push
mov
pushl
lock
ret
push
testb
out
out
adc
mov
sbb
add
cli
lock
mov
push
xchg
xchg
notb
and
insl
push
jae
add
add
and
xchg
fisubrs
pop
in
sti
jecxz
addb
add
cmp
pushf
cwtl
pop
adc
add
push
mov
add
add
add
add
aas
incl
cltd
aaa
push
call
pop
add
arpl
bound
dec
pop
pop
jnp
or
mov
add
add
add
xlat
in
icebp
and
fadd
add
sub
inc
add
add
pop
sub
add
cmp
add
cmp
add
ljmp
mov
mov
pop
add
jno
add
jp
add
adc
pop
pop
and
aad
imul
aam
movsb
add
cmpsl
add
dec
and
daa
add
push
les
test
jno
out
pop
inc
add
loop
lret
jo
jae
mov
adc
repz
sub
add
int3
testl
jo
add
adc
xchg
push
or
adc
add
and
xor
sahf
and
cmp
cmp
add
add
js
xchg
jne
cmp
decl
add
inc
add
inc
add
add
add
bound
call
lcall
mov
or
fimuls
movl
add
dec
cmc
dec
and
lods
push
pop
jmp
sub
add
add
and
gs
dec
jle
sub
sub
jle
gs
cltd
repz
mov
add
add
add
add
insl
adc
add
add
jne
inc
add
or
add
in
mov
in
fcomps
sbb
addb
add
popa
add
roll
add
push
inc
add
lret
xor
add
add
jle
ret
add
add
mov
push
cmc
inc
add
mov
mov
sub
roll
pusha
add
xchg
add
xor
lods
pusha
add
add
xor
add
add
int3
stos
xchg
mov
add
cmpsl
add
push
popf
inc
add
ja
fiaddl
aas
xchg
decb
add
decl
out
jns
add
and
cli
ret
add
shlb
add
cmp
dec
sbb
movsl
add
addb
aam
add
push
mov
add
cmp
test
push
sbb
arpl
push
data16
pusha
add
add
ss
or
and
daa
add
push
imul
addl
add
loop
dec
pop
xlat
out
sub
xor
cltd
xor
xor
adc
sub
cmp
int
xchg
jge
dec
xchg
and
in
xor
test
add
xor
call
sub
xchg
aas
jle
add
jmp
test
cmp
daa
add
add
sub
dec
stc
pusha
add
js
mov
lds
inc
add
sbb
cwtl
cli
bound
insb
mov
jns
addb
xchg
stc
mov
aam
add
imul
das
lcall
pusha
add
and
lret
movsb
add
sub
or
or
add
push
test
add
movsl
add
add
xchg
and
js
add
lret
add
fdivr
mov
add
add
pop
jns
sbb
add
scas
add
lds
dec
movsb
add
int
add
in
mov
cmp
add
pushf
lds
hlt
enter
adc
sbb
add
pusha
add
movups
xchg
mov
fisttpl
scas
push
mov
pop
xchg
push
dec
movsb
add
or
rorb
call
inc
add
pusha
add
fwait
movb
outsl
pop
daa
add
jg
adc
xor
mov
sub
outsl
xchg
and
mov
pop
add
test
popf
sub
mov
sub
add
add
outsb
add
add
add
pop
loopne
faddl
in
mov
jmp
or
sysexit
dec
lods
into
mov
add
xor
and
pop
jns
add
aas
mov
cwtl
xor
pop
jbe
xchg
data16
add
mov
push
fdiv
sub
js
fcomi
decb
jge
roll
add
push
aam
movl
pop
mov
bnd
add
add
inc
add
add
mov
mov
jb
enter
addb
sbb
pushl
push
decb
xchg
jne
adc
add
out
loop
pop
flds
outsl
dec
sahf
cmp
test
push
add
js
add
add
lcall
push
sub
xor
cltd
cli
cmp
push
add
jmp
add
xor
pop
sbb
lret
adc
iret
out
jp
jmp
sub
add
cmp
test
lods
mov
push
test
dec
jp
add
and
xlat
pushf
repnz
movsl
add
pushl
bound
test
cmp
add
lret
xor
call
cmp
xor
add
insb
sahf
fsubp
add
mov
sbb
pop
pop
lds
pop
outsb
jge
jnp
add
or
add
inc
add
mov
inc
add
add
rcrl
inc
add
pop
adc
sbb
push
dec
mov
cmp
dec
pop
sub
jle
sbb
add
pop
mov
call
scas
int3
mov
fs
add
xchg
outsl
test
mov
in
loop
ljmp
add
int3
xor
xchg
aam
addr16
add
out
roll
inc
add
add
add
rcrl
lods
cs
and
mov
mov
jle
ret
sbb
insl
push
in
int
mov
sahf
popa
add
idiv
filds
push
mov
sbb
pushf
adc
addb
fwait
ds
jp
dec
into
sub
add
sub
add
pop
sub
add
sbb
mov
push
mov
lahf
add
call
add
add
add
jmp
inc
add
mov
fbstp
add
add
sub
or
cmp
fildll
add
scas
adc
pushf
mov
jno
inc
add
cmp
dec
in
fnsave
add
sbb
inc
add
add
push
lahf
fsubs
push
addl
loopne
jl
add
add
loopne
iret
or
add
add
pushf
lds
mov
push
mov
les
push
add
lods
cld
test
popf
xor
mov
test
jmp
int3
xlat
nop
dec
shl
add
push
push
mov
lods
addl
std
repz
movl
mov
pop
push
push
sbb
xchg
dec
rcll
cmpsl
add
pop
xor
jle
cmpsl
add
inc
add
test
in
mov
jnp
imul
js
jns
add
in
fwait
mov
rclb
add
fs
icebp
mov
movsl
add
data16
imul
incl
mov
pop
dec
push
push
pop
add
jmp
ffree
add
jge
add
je
pop
in
stos
xor
add
out
adc
add
add
add
je
cmp
push
in
mov
jle
add
xchg
cmp
clc
lcall
add
dec
outsb
nop
movb
idiv
in
pop
cli
bound
adc
adc
add
std
outsb
xlat
and
pop
add
xchg
xor
add
ljmp
add
or
add
cli
jg
push
sbb
xor
jbe
add
jl
lods
add
cmp
and
adc
std
je
pop
mov
push
cmp
addb
xchg
lds
and
dec
fsubl
rolb
sbb
adc
rcll
icebp
add
addb
test
test
xchg
jbe
addl
mov
dec
in
and
mov
addb
jmp
leave
dec
das
mov
lds
dec
lods
in
aas
out
stc
xchg
roll
xor
adc
push
lret
in
inc
add
testb
jmp
ss
ret
add
add
insb
fucomp
pop
test
out
xchg
dec
addl
mov
add
dec
xchg
jecxz
add
jge
movb
rolb
cltd
ficoms
test
mov
add
pop
add
mov
add
add
add
jl
add
pushl
pop
mov
add
or
popa
add
add
addl
loopne
daa
add
sbb
add
inc
add
dec
add
ljmp
lods
and
mov
outsb
push
mov
roll
cwtl
inc
add
aas
xchg
sbb
lret
cmp
ljmp
add
xor
pop
sub
or
in
adc
add
dec
inc
add
add
ljmp
insl
arpl
pop
addl
loop
ja
add
gs
add
add
shr
test
add
xor
xor
addl
add
and
pop
pop
addl
fnstsw
push
sbb
jge
add
pushl
ret
add
xchg
xor
inc
add
add
add
lcall
popa
add
add
aad
mov
adc
jno
add
add
insb
enter
stos
aas
or
add
add
lret
insb
jl
sarl
ret
add
dec
jbe
pop
sub
add
addl
inc
add
aad
add
pop
movsb
add
lods
push
mov
lahf
inc
add
add
add
cwtl
pusha
add
and
lods
mov
hlt
addl
int3
das
aaa
mov
add
add
test
sub
jae
mov
sub
pop
sub
add
decl
aad
add
inc
add
addr16
loopne
pop
add
add
incl
incl
movb
add
mov
add
or
adc
movb
lea
iret
sarb
add
add
add
or
xchg
loope
add
xchg
push
cwtl
xor
add
in
addl
add
cmp
push
add
add
push
add
add
mov
roll
add
add
fimull
jge
add
js
arpl
dec
mov
sub
das
and
mov
push
mov
mov
cmp
and
pop
add
push
inc
add
add
cmp
add
cmp
xor
jnp
add
addb
add
add
fxch
sub
and
or
add
xchg
ret
lods
out
jl
jb
add
out
lock
sahf
mov
mov
stos
push
push
lahf
add
sbb
sub
pop
dec
fwait
mov
add
add
add
jge
mov
push
loop,pn
repz
stos
addl
sbb
add
in
pop
call
addl
in
or
mov
enter
lcall
add
mov
rcr
cmp
sub
add
push
xchg
xor
add
mov
mov
loopne
leave
dec
add
sbb
pop
push
fwait
xor
push
jnp
mov
cmpsb
add
add
pop
test
and
pop
ret
stos
stos
push
pop
dec
data16
lods
data16
xlat
add
jecxz
xchg
out
xor
add
xor
xchg
les
ljmp
test
jge
jbe
outsl
push
les
add
jp
inc
add
shlb
add
pop
mov
add
mov
bound
cmp
leave
add
pushl
add
fwait
push
decb
jns
repz
add
jmp
add
add
sbb
add
repnz
or
fildl
add
add
pushl
cmpsb
add
cmp
add
xchg
fistl
inc
add
mul
add
lds
push
js
stc
cmp
add
roll
add
adc
ficoml
fadds
jbe
int3
pop
out
inc
add
cmc
push
add
sti
test
mov
roll
add
jge
jo
mov
jecxz
mov
xor
sbb
and
fnstsw
add
push
loopne
inc
add
data16
inc
add
aam
out
rolb
stos
stos
push
popa
add
add
add
add
fimull
and
aaa
mov
inc
add
add
loope
xchg
sti
fldt
jae
cs
fwait
xchg
dec
cwtl
cli
dec
xchg
lods
call
jbe
add
daa
add
xor
cmpsl
add
adc
mov
mov
pop
inc
add
imul
cmp
sbb
lcall
roll
jnp
add
data16
add
lds
mov
dec
lods
sbb
mov
add
add
add
call
dec
or
aad
xor
mov
aad
pop
mov
push
add
sub
test
scas
jno
jns
in
dec
mov
jne
add
add
sbb
add
jmp
add
addl
and
loope
addb
push
adc
add
repnz
jne
adc
xchg
mov
add
add
sbb
and
adc
add
add
mov
add
cs
push
sahf
mov
add
pop
jmp
cmp
mov
sub
add
lcall
mov
add
add
dec
push
add
mov
mov
mov
sub
sbb
dec
sbb
add
jne
adc
ja
add
add
add
xor
aam
cmp
push
sbb
add
adc
decl
add
data16
adc
add
mov
cmp
data16
xchg
dec
or
sub
js
mov
dec
mov
addb
jecxz
jno
aas
adc
mov
mov
sbb
mov
pop
jp
pop
push
add
call
pop
ret
add
addb
add
add
cs
fnstenv
mov
add
inc
add
mov
add
xchg
adc
repnz
add
add
add
cmp
sti
test
add
add
stc
xor
add
xor
sub
add
ss
cmpsb
add
add
outsb
std
xchg
out
rolb
mov
add
sbb
add
movl
faddl
decl
jecxz
ds
push
sbb
decl
add
cli
pop
add
add
add
je
outsb
lahf
cli
cmp
add
call
push
mov
std
pop
pop
das
xchg
xchg
mov
add
divb
or
add
inc
add
addb
addb
jne
xchg
inc
add
add
add
in
xor
rolb
sahf
inc
add
pusha
add
add
mov
sahf
test
dec
rolb
mov
add
dec
data16
add
add
addb
les
add
test
cmpsl
add
add
mov
fisttpl
adc
test
add
stc
mov
lods
data16
test
or
in
mov
add
add
push
or
lods
test
or
aaa
add
ljmp
dec
mov
add
loop
and
icebp
js
add
lret
mov
repz
add
mov
pop
out
pop
add
xchg
aaa
scas
sti
pusha
add
add
add
imul
mov
inc
add
add
jl
xchg
sti
rorb
stc
js
cmp
jb
dec
push
es
xchg
jne
sub
inc
add
daa
add
in
daa
add
add
repz
pop
or
insl
sbb
xchg
ret
std
xchg
cli
or
add
and
dec
mov
xchg
ja
add
loopne
mov
add
fsubs
outsl
or
movl
add
ljmp
xchg
pop
roll
lea
add
xor
in
lret
js
and
mov
add
incl
add
or
adc
or
shll
mov
ljmp
hlt
ret
iret
cmp
add
enter
or
add
add
rcr
pop
scas
add
jmp
add
imul
xchg
xchg
add
decl
inc
add
add
movsb
add
add
sbb
call
pop
addb
or
and
aaa
arpl
cmp
add
xchg
inc
add
iret
sub
jns
add
addl
clc
repz
add
or
addb
fwait
js
or
adc
into
stc
sbb
pop
roll
cmc
mov
jmp
mov
lods
adc
cld
icebp
mov
mov
add
add
or
test
lcall
roll
movsb
add
mov
add
insl
fstpl
dec
xor
push
loop
clc
inc
add
xchg
fstpl
add
jmp
ret
outsl
dec
xchg
dec
lds
inc
add
push
ss
xor
decl
stos
lods
inc
add
xor
push
add
push
dec
cmp
pop
insb
aaa
test
add
call
push
add
add
add
add
aas
in
filds
mov
or
cmp
xchg
clc
add
in
popa
add
cmp
ja
add
push
movb
mov
jp
and
dec
dec
adc
out
stc
and
imul
aad
xchg
daa
add
fdivl
inc
add
mov
dec
mov
fcomps
outsl
jmp
dec
jp
add
add
mov
add
xor
lcall
test
push
test
jno
mov
ds
add
movb
mov
add
test
jge
dec
in
mov
mov
cmp
into
mov
add
repnz
push
fwait
xchg
adc
mov
add
cmp
pusha
add
rcrl
add
sub
std
pop
les
sub
fwait
cs
repnz
addb
adc
add
mov
add
and
out
add
lcall
xchg
jge
add
push
lahf
xchg
clc
iret
xor
adc
test
insb
repz
xlat
sbb
test
cmp
jo
add
pop
je
lret
add
int
fwait
mov
add
pushl
or
and
xor
inc
add
add
jmp
js
movsl
add
mov
stc
pop
adc
push
in
filds
out
cltd
aam
push
int3
int3
js
lret
adc
ret
add
add
mov
je
popa
add
loope
lds
out
ret
add
push
cmp
fwait
out
lock
adc
fisubrl
push
and
push
pop
sbb
add
addb
out
call
adc
lods
push
enter
scas
xor
cmp
sub
mov
mov
add
pusha
add
sarl
fadds
decl
ficomps
fucomi
outsl
fs
cld
sub
or
add
add
add
icebp
mov
add
add
jbe
add
fucomip
fcmove
test
stos
inc
add
movsl
add
pop
jg
add
and
dec
mov
pop
add
sub
in
xor
mov
inc
add
sbb
add
mov
add
arpl
roll
xchg
shlb
cmp
inc
add
pop
mov
add
addb
jmp
adc
out
test
jp
sub
cwtl
je
add
dec
jnp
push
lods
imulb
cmp
hlt
xchg
inc
add
adc
add
xchg
sub
out
pop
imul
add
add
push
ret
ss
inc
add
push
test
xchg
nop
add
jl
sub
add
add
xchg
cmp
add
rolb
pushf
and
and
les
xchg
repnz
add
ror
ja
stos
jno
les
jle
add
ud2
into
mov
add
into
movb
add
fcmovbe
incb
into
cmp
iret
and
ds
rolb
add
je
pop
push
dec
jbe
jns
les
xchg
push
sub
push
xchg
int
addb
add
jge
mov
into
insl
arpl
xchg
sbb
test
jp
add
movsl
add
add
add
add
js
data16
out
push
aam
aam
push
pop
jl
add
cmp
aaa
cld
out
imul
sbb
add
add
in
jecxz
cmp
add
mov
jnp
je
add
mov
xchg
jmp
arpl
lret
clc
shlb
or
mov
mov
call
add
xchg
daa
add
pop
add
jmp
add
pop
sub
add
sub
pusha
add
push
add
xor
aaa
ret
test
pop
add
pushf
adc
jns
sahf
adc
add
daa
add
add
and
push
add
ret
add
leave
jne
iret
mov
mov
pusha
add
pop
add
arpl
scas
int3
shlb
ja
stos
dec
scas
mov
jp
aad
xchg
hlt
jl
mov
sti
push
xor
adc
mov
mov
add
loop
push
shrb
cwtl
addb
add
add
imul
fwait
icebp
rcl
inc
add
lcall
lods
xchg
sub
lret
addl
xor
stos
movsl
add
and
adc
add
add
incl
rsqrtps
lahf
push
into
loop
popa
add
add
jmp
xchg
shl
add
outsb
sub
add
outsb
sarl
dec
dec
out
mov
mov
jne
add
loop
enter
fucom
add
add
ror
stc
mov
and
mov
rcrl
mov
push
pop
inc
add
data16
dec
jne
add
or
scas
fstl
mov
int3
imul
fidivrl
cld
and
ja
add
cld
insb
jno
add
add
pushl
or
jmp
cltd
or
scas
loop
dec
imul
xor
add
mov
mov
insb
sahf
mov
inc
add
add
repnz
add
pop
mov
add
inc
add
add
lcall
roll
mov
mov
mov
lock
jb
cmp
sub
or
jl
xchg
push
cwtl
or
mov
out
cmp
outsb
addb
add
lock
add
int
add
add
int3
addl
dec
add
addl
mov
fst
ss
inc
add
add
xlat
jb
and
or
js
cmp
adc
cwtl
negb
inc
add
add
xchg
ficoms
insl
xor
xchg
imul
shr
ja
add
push
nop
int3
mov
pop
sub
lea
mov
movsl
add
add
add
add
ljmp
sbb
add
aas
mov
ss
push
js
fdiv
xchg
jg
cmp
ss
lret
pusha
add
push
leave
mov
jo
add
fiaddl
js
lret
out
and
pop
push
dec
xchg
jno
mov
xchg
adc
out
and
jle
sub
inc
add
stos
arpl
jns
jo
divl
cmp
jge
adc
out
mov
scas
jb
add
lret
add
add
or
data16
mov
xor
ss
leave
add
xchg
cmp
out
sahf
int3
inc
add
pop
cld
test
add
cwtl
push
mov
push
cmp
add
jle
aas
jecxz
addb
addb
add
roll
add
add
lds
repnz
add
xchg
popf
stos
popf
sub
iret
out
addb
cltd
dec
es
mov
add
adc
inc
add
incl
insb
aad
cmp
mov
add
out
into
add
lcall
add
jae
adc
add
adc
inc
add
add
fiaddl
mov
scas
stos
pop
insl
decb
bound
pusha
add
aaa
adc
cmp
pop
cwtl
fchs
add
int3
adc
xor
je
mov
inc
add
inc
add
call
adc
pushf
lahf
addl
mov
enter
les
or
pop
in
inc
add
xchg
cmpsb
add
add
jns
loope
sub
xchg
es
sbb
add
jae
add
icebp
xchg
mov
sub
mov
sbb
push
movl
push
repnz
add
inc
add
add
sub
xor
cs
sub
cmp
push
push
fistpl
sbb
addb
lcall
ret
add
or
mov
call
add
bound
push
pop
pop
mov
hlt
pop
jg
into
lfs
xor
sub
pop
mov
nop
and
test
push
push
insb
ss
rolb
ds
dec
repnz
lods
js
xchg
repz
mov
push
pop
add
add
push
movb
add
std
out
pop
add
inc
add
add
push
imul
push
cwtl
aaa
insb
push
mov
add
les
mov
popf
jl
mov
and
scas
out
mov
add
mov
pop
fiaddl
mov
movsb
add
sub
dec
sub
inc
add
daa
add
jo
add
decl
sbb
add
fiadds
jmp
sub
pusha
add
ja
out
insl
push
xor
lods
stc
int
add
fdiv
adc
and
lret
jnp
mov
test
repz
fcoms
jae
fcoml
dec
ret
add
in
push
jns
mov
sub
add
cli
pop
hlt
scas
push
jbe
cld
shrl
outsb
clc
or
in
ss
and
or
add
push
jnp
xchg
xchg
mov
add
jns
outsl
dec
clc
mov
movb
mov
pop
add
roll
das
mov
movb
addb
push
mov
in
inc
add
imul
xor
jnp
lods
lds
xor
push
sbb
rolb
mov
rcr
dec
jge
add
xchg
adc
call
aaa
xlat
and
xor
add
dec
fisubl
adc
arpl
jmp
popa
add
das
daa
add
add
ret
lahf
in
cwtl
jne
in
pop
scas
jl
add
add
xlat
int3
and
sub
add
or
lods
frndint
adc
xchg
cmpsb
add
in
xchg
in
inc
add
repz
and
inc
add
loop
pop
jb
inc
add
jb
out
mov
mov
push
pop
ljmp
imul
cmp
aam
pushl
adc
lea
les
adc
add
add
insl
push
data16
add
lret
stos
fs
int
ds
rol
add
sbb
jae
add
inc
add
fadds
stc
clc
movb
rolb
mov
roll
add
lcall
push
xchg
push
ljmp
add
xor
movl
aam
push
push
dec
sub
push
cwtl
inc
add
add
add
cltd
sahf
aaa
mov
mov
pop
movl
int
mov
push
dec
mov
add
xchg
mov
xchg
sub
pop
jp
rorl
add
add
add
jns
mov
add
test
or
add
jnp
inc
add
or
jns
cmp
jecxz
cmpsb
add
add
lcall
inc
add
push
ss
add
daa
add
add
mov
add
movsl
add
dec
cmp
add
aas
mov
add
add
xlat
add
fwait
mov
sub
mov
dec
mov
jno
pushl
xlat
cmpsb
add
add
and
aam
scas
loopne
dec
sar
add
decl
cmp
addl
push
shlb
shrl
add
ljmp
sahf
jecxz
and
jns
xchg
shrb
or
mov
fsubp
add
adc
cmpsl
add
call
ret
xchg
cmp
add
add
add
ror
movl
mov
xlat
jo
das
mov
pop
add
call
mov
mov
enter
les
xchg
pusha
add
xchg
mov
add
add
jmp
add
imul
push
mov
inc
add
roll
outsl
push
das
mov
jb
add
cwtl
dec
nop
repnz
push
add
jb
inc
add
test
mov
sahf
lds
cmp
xchg
inc
add
inc
add
xchg
sub
repz
out
das
and
ljmp
fadds
add
imul
add
add
add
lods
jb
add
add
pop
jp
out
fdivp
push
jg
add
push
test
jne
push
add
dec
jbe
add
jl
push
pop
insb
arpl
iret
mov
decl
xchg
mov
add
fscale
test
sbb
dec
pop
fsubrl
cmc
xchg
roll
add
add
das
sbb
fists
mov
lods
sahf
pop
xchg
mov
add
pusha
add
push
cmp
pop
repz
dec
fisttpll
mov
loope
push
xor
or
add
test
ljmp
pop
add
sbb
repz
int
out
mov
sub
out
lret
mov
add
xchg
pop
jne
or
sub
mov
ds
cmp
xchg
ss
pop
sti
adc
addl
add
and
dec
cmp
add
pop
sbb
in
mov
aaa
add
push
add
add
outsb
ds
sbb
mov
add
xchg
pusha
add
inc
add
push
std
aaa
pop
mov
and
cli
xchg
pop
xchg
sub
jge
xlat
into
int
dec
xchg
sub
add
push
loop
hlt
test
sbb
les
movl
push
js
lahf
inc
add
jg
pop
fimull
add
testl
add
aaa
mov
dec
jmp
cmp
addl
pusha
add
add
add
add
movsl
add
outsb
bound
mov
decl
add
add
int3
or
stos
fcmovu
leave
addb
pop
leave
pop
push
push
dec
xor
or
xchg
dec
mov
jno
add
add
add
push
sub
pop
push
sub
pop
roll
ds
add
pop
dec
push
add
pop
icebp
dec
test
popa
add
sub
jnp
testl
mov
cmp
xchg
add
incl
inc
add
cmpsb
add
dec
add
lcall
cmc
pop
addl
sbb
mov
add
inc
add
add
pushf
fwait
cs
arpl
dec
xor
add
decb
pop
lahf
mov
xchg
jno
add
add
and
imul
add
aam
mov
out
dec
mov
inc
add
and
dec
sub
incl
xchg
jmp
nop
addl
incb
lcall
mov
icebp
jmp
aam
ret
add
mov
inc
add
adc
mov
pop
push
lcall
add
jmp
lea
call
jbe
sub
add
adc
push
dec
arpl
dec
xchg
fwait
mov
pushf
test
jg
sahf
mov
mov
out
pop
mov
add
cli
push
add
decl
jle
lds
adc
sbb
inc
add
addb
or
add
pushl
insl
or
fcmove
outsb
and
adc
pop
data16
loope
and
sub
pusha
add
jge
add
add
jnp
add
xor
test
ds
add
lea
cs
addl
lea
movsb
add
jb
and
or
mov
mov
add
add
scas
push
js
repnz
icebp
aam
dec
movb
mov
clc
xchg
fcoms
pop
cmp
add
adc
inc
add
sbb
mov
inc
add
add
adc
bswap
ret
add
lret
jmp
enter
std
jno
int
jg
xchg
cmpsb
add
jmp
push
jno
xor
repnz
leave
les
out
cmp
sub
addl
add
outsb
xchg
jmp
lds
lods
test
into
push
adc
mov
out
insl
sbb
add
pop
fadd
add
add
add
mov
xor
push
xchg
jns
fistpl
or
stos
dec
clc
int3
and
mov
movsl
add
f2xm1
aaa
push
push
mov
push
adc
lahf
inc
add
scas
lods
push
std
inc
add
sarl
ja
dec
jae
add
or
daa
add
jo
sub
and
pop
push
test
add
cmp
sub
cmp
dec
out
pop
mov
xchg
xchg
xor
xor
pop
aam
rcr
xor
xchg
sbb
jbe
jge
movsb
add
add
insl
arpl
xchg
clc
or
add
xchg
je
xchg
lcall
arpl
sub
jbe
inc
add
dec
cmpsl
add
add
push
cmpsl
add
add
rcl
rorl
fmuls
imul
ja
pushf
out
outsl
pop
or
xchg
push
or
add
ljmp
or
mov
and
push
into
jb
cmp
add
add
cmp
aam
add
cmp
add
test
lret
push
insl
jmp
mov
cs
mov
hlt
fwait
xlat
addl
fisubs
lods
pushl
fcoms
pop
jle
and
insl
xchg
pop
jl
add
decl
push
mov
add
pushf
in
or
pop
jno
pushf
jmp
inc
add
mov
xor
loope
push
add
stc
mov
sub
enter
jecxz
pop
add
dec
dec
and
cmp
sar
xor
add
aam
sbb
call
add
mov
in
mov
js
lods
inc
add
xchg
sub
xchg
fmul
ds
xor
add
es
clc
add
wbinvd
xchg
loop
rcrl
imul
popa
add
push
int
mov
sbb
sub
sahf
fisttpll
into
adc
loope
loop
pop
lock
add
jno
sub
cmpsb
add
add
ljmp
movsb
add
add
add
int
mov
add
dec
or
sub
xor
or
jbe
xchg
mov
inc
add
add
inc
add
fisubs
sub
incl
push
pop
testb
add
clc
popf
lods
jnp
add
mov
daa
add
push
add
xchg
jb
add
add
jmp
popa
add
add
mov
cmp
mov
add
cltd
pop
movsl
add
add
fstl
aad
add
xchg
mov
divl
push
jmp
pop
std
lcall
sub
add
lods
rcrb
int3
cs
add
loope
ret
add
roll
add
add
and
add
call
jne
add
inc
add
cmp
enter
outsb
addr16
add
push
xchg
pop
lret
inc
add
cld
push
ret
add
dec
je
add
add
jmp
add
inc
add
mov
test
xchg
lds
scas
dec
pusha
add
mov
inc
add
repnz
pop
jmp
add
add
rolb
les
pop
outsl
dec
js
add
adc
incl
push
or
jecxz
mov
adc
add
decl
or
movb
add
sub
xchg
addl
pop
push
nop
dec
dec
sub
or
std
pop
add
add
in
add
jmp
add
jb
decl
lahf
je
add
inc
add
pop
mov
mov
add
jg
pusha
add
add
push
mov
daa
add
mov
decl
loope
pop
movsl
add
add
stc
xchg
daa
add
sub
dec
aam
ds
adc
dec
sahf
push
dec
push
inc
add
mov
into
fcmovb
add
xchg
jo
add
inc
add
add
add
xor
lahf
add
cli
in
dec
addl
sub
add
arpl
xchg
xchg
or
jns
loop
movb
cmpsl
add
addb
add
or
mov
ja
xor
mov
xor
movl
insl
jb
mov
pushf
adc
sbb
cmp
mov
mov
hlt
push
pop
mov
fisttpll
add
jle
add
xchg
scas
sub
into
addr16
add
xchg
lahf
sahf
cmpsl
add
test
ret
add
xor
cmp
sbb
jl
add
xor
push
add
add
sarb
decl
and
sbb
fsub
add
cvtps2pi
and
mov
cmpsl
add
aam
les
mov
mov
lret
xor
add
add
cld
je
inc
add
add
fidivrl
mov
loopne
pushf
aas
inc
add
ljmp
roll
push
data16
jle
add
and
adc
sub
lods
addl
add
add
xlat
mov
insb
push
aam
outsb
out
outsl
push
imul
int
jo
mov
movsl
add
cmpsl
add
sahf
inc
add
push
aas
roll
push
jecxz
cwtl
inc
add
ljmp
push
cmp
addl
mov
xchg
jnp
lea
add
aaa
data16
add
jp
fs
add
xchg
je
add
add
add
je
lret
sub
add
in
pushf
and
sub
sub
ljmp
sbb
adc
push
lds
imulb
data16
cmp
rcr
pop
ss
addl
rolb
add
jo
fldt
out
mov
add
jp
sub
lcall
add
stc
dec
pop
data16
sub
add
pop
bound
movb
pop
push
cwtl
jp
ljmp
pop
lret
sbb
push
and
sbb
movsl
add
out
push
test
push
movb
add
and
xchg
jo
xchg
or
jbe
ret
add
ret
cmpsl
add
add
fistpll
adc
inc
add
aaa
dec
inc
add
daa
add
mul
add
inc
add
push
aad
add
int
add
add
xchg
loopne
dec
jecxz
sub
fwait
popa
add
lock
xor
add
les
loop
add
add
cld
fisubrs
aaa
out
mov
sub
add
sub
jbe
scas
jb
add
add
int
sub
mov
add
jmp
add
sbb
into
cli
into
jp
jecxz
repz
mov
add
pop
mov
sbb
movl
cmp
popa
add
and
add
mov
mov
add
movsl
add
or
add
insb
jle
test
pusha
add
sahf
xchg
dec
enter
add
ljmp
cld
push
js
xor
das
cmp
push
pop
mov
push
pop
add
add
incl
jmp
add
jg
lea
popa
add
in
pop
nop
dec
les
xor
add
aas
aas
dec
js
and
cmp
lea
add
pop
xchg
repz
notb
in
pop
jns
dec
mov
pop
insl
cmp
insb
stos
cli
mov
pop
leave
data16
cmp
mov
push
lret
mov
sub
add
inc
add
pop
mov
xchg
jl
push
mov
push
scas
push
outsl
movsb
add
out
imul
xchg
xchg
aad
add
sti
push
test
mov
cltd
call
nop
imull
nop
outsl
data16
daa
add
and
add
jg
into
roll
les
roll
add
cmp
sub
roll
ljmp
mov
push
inc
add
cwtl
lcall
add
mov
add
unpckhps
xor
dec
and
rcll
mov
cltd
add
decl
bound
adc
ljmp
sahf
push
sti
mov
call
mov
sbb
ja
mov
dec
inc
add
add
ds
je
cld
lods
iret
dec
jl
inc
add
ja
add
cwtl
mov
add
inc
add
add
add
fdivr
insl
xor
scas
repnz
xchg
push
cld
cmp
repz
xor
push
or
movl
icebp
out
lcall
inc
add
xchg
mov
mov
je
mov
dec
push
cwtl
mov
xchg
lods
jge
or
xchg
cmpsb
add
jae
add
jb
push
lret
out
dec
jle
aam
std
pop
outsl
mov
nop
fwait
pusha
add
mov
add
xor
sbb
xor
ja
mov
mov
outsb
fildl
popa
add
add
cwtl
cmp
aad
cmpsb
add
fnstsw
and
aaa
or
add
jbe
addl
mov
inc
add
mov
scas
loope
std
lods
push
sbb
scas
jmp
add
sub
cmp
lock
call
ret
jecxz
in
js
pop
imul
lret
shrb
sbb
insb
inc
add
and
sar
xchg
insb
sbb
jl
add
fsts
cmp
or
add
jmp
pushl
lcall
add
movsl
add
incl
adc
add
mov
add
insb
loop,pt
cmp
push
mov
sbb
add
movsb
add
add
dec
add
jmp
imul
push
add
popf
out
add
jmp
pop
add
add
add
cmp
mov
decl
add
add
mov
inc
add
cmpsl
add
add
ss
sbb
jp
add
sbb
in
mov
test
push
ficoms
xchg
incl
jmp
add
cmp
call
xor
nop
add
jo
push
jmp
inc
add
and
xor
inc
add
jne
jge
add
jle
add
insb
into
sbb
popf
push
in
mov
push
xchg
outsb
arpl
adc
cmp
push
or
loop
nop
dec
cld
sub
add
cmp
in
cmp
add
jno
mov
fmul
mov
lahf
inc
add
xor
push
or
dec
out
repz
add
test
or
js
cld
stos
leave
adc
add
ret
push
or
test
bound
cltd
addl
add
jne
mov
add
push
fnstcw
daa
add
jecxz
call
aam
jb
add
jns
nop
push
add
shrb
outsb
test
imul
shr
in
inc
add
add
add
add
cmp
add
lret
cld
lahf
add
fdiv
jb
sbb
add
call
in
pop
mov
jg
add
mov
xchg
dec
pop
scas
rcr
pop
sub
xchg
test
or
addl
add
aad
mov
add
movl
fldln2
xchg
push
outsb
lods
and
cmpsl
add
ja
lcall
enter
pop
and
enter
lock
add
ljmp
add
imul
add
or
cli
and
xchg
push
push
mov
mov
out
mov
add
add
je
mov
add
ja
push
jle
mov
jp
mov
pop
or
pop
jl
inc
add
add
movsl
add
sti
jbe
pop
pop
out
mov
push
xor
pop
xchg
mov
add
cmp
ljmp
movb
xlat
bnd
xchg
in
outsl
aad
lret
pop
cli
add
incl
xchg
pop
dec
fdivs
mul
add
push
into
mov
fldenv
cmp
in
js
lcall
adc
add
decl
ret
add
js
in
test
add
repz
int3
push
out
push
cltd
loope
lods
push
addl
add
ljmp
sbb
repz
push
cmpsl
add
sbb
add
rcr
sub
sub
push
pop
scas
push
and
inc
add
popf
std
pop
mov
mov
lock
and
roll
cmp
mov
cmc
push
loope
mov
pop
out
out
add
jg
add
add
push
mov
xor
cmp
cmp
jae
dec
shrl
add
add
fistpl
bound
addb
mov
ja
add
imulb
mov
add
add
add
fimuls
popa
add
and
or
outsb
ja
dec
sub
add
cmp
dec
inc
add
add
xchg
aad
jg
add
cmp
inc
add
sub
mov
mov
add
inc
add
inc
add
in
in
pusha
add
ret
add
add
jge
add
add
adc
add
fdivrl
inc
add
sub
adc
add
aam
add
add
lea
mov
or
add
xchg
mov
jns
add
add
mov
mov
jne
pop
test
addl
jl
lds
movsl
add
add
incl
add
mov
lods
popf
icebp
je
rolb
add
add
mov
sbb
imul
adc
jmp
add
push
outsb
inc
add
jecxz
lods
aaa
mov
inc
add
xchg
enter
ja
add
add
int
push
test
dec
aad
add
rolb
cmp
pop
push
repz
and
or
push
cmp
push
lock
adc
ror
xor
repnz
lock
push
push
pop
mov
inc
add
xchg
mov
repnz
cs
xor
xchg
lods
inc
add
in
popf
outsb
idivl
push
out
pop
out
stc
mov
or
int3
dec
mov
shl
imul
ljmp
add
jg
push
or
rcl
inc
add
mov
fcomps
lea
arpl
aaa
es
das
push
jmp
movl
add
xor
add
mov
push
mov
shlb
scas
jno
add
add
mov
lahf
fisubs
add
or
sti
pop
push
in
adc
add
jmp
dec
popa
add
inc
add
add
rolb
in
add
int
inc
add
xchg
cld
icebp
xchg
insl
in
push
and
pop
outsl
mov
lds
jne
add
hlt
mov
test
ljmp
rcrb
add
add
inc
add
push
add
jmp
mov
add
repz
call
lahf
rcrl
mov
adc
dec
inc
add
add
mov
inc
add
add
out
jle
cld
daa
add
mov
out
cmp
mov
add
pop
int3
jnp
imul
adc
or
insl
cmp
xchg
jmp
mov
insl
fucomip
scas
inc
add
mov
ljmp
inc
add
rolb
push
jp
add
mov
mov
add
inc
add
add
loope
scas
pop
sub
addr16
cld
jp
loopne
jp
push
and
push
add
mov
test
add
mov
sahf
xchg
xor
ret
add
sbb
add
sub
and
mov
test
fdiv
xchg
mov
push
stos
add
ret
add
add
ja
in
mov
add
add
clc
addl
fmuls
mov
roll
and
test
mov
scas
fnstcw
test
add
jmp
int3
dec
fistps
add
push
add
adc
add
jbe
add
cmpsl
add
xor
jle
add
add
out
fdivr
inc
add
add
cs
mov
add
enter
pop
lods
cmp
xchg
roll
inc
add
add
or
dec
pop
dec
repnz
xor
jmp
add
lock
mov
inc
add
add
add
jmp
jbe
push
stc
push
stc
and
xlat
pop
add
pop
hlt
jns
add
add
or
out
inc
add
addb
xchg
in
push
cmp
imul
sbb
dec
or
dec
add
mov
sbb
add
add
fcmovnb
add
sub
add
fcmovbe
ret
pop
add
out
movl
and
push
push
push
xchg
ret
add
lods
data16
pop
movsb
add
add
pop
ja
add
adc
int3
adc
leave
out
xor
push
sub
add
iret
movsl
add
cmp
in
out
mov
add
fists
push
add
inc
add
test
jae
lea
decl
add
imul
std
daa
add
nop
add
add
sbb
fiaddl
cmp
add
roll
add
mov
sub
jb
pop
into
in
outsl
mov
std
cmp
mov
mov
mov
inc
add
je
add
pushf
loopne,pn
aad
repnz
dec
cmp
icebp
sbb
popf
movl
mov
push
divb
mov
fldcw
add
ljmp
add
add
or
add
push
dec
adc
test
mov
pop
shll
roll
and
das
pop
flds
jne
xchg
stos
ljmp
insl
negl
dec
sub
popf
push
add
add
sub
add
pushl
movl
sub
add
cmp
lret
rolb
push
mov
push
jle
paddsw
lcall
je
std
push
loop
shrb
movsl
add
add
jmp
ds
xchg
imul
fcomps
sarl
add
rclb
xor
add
add
mov
mov
add
add
sub
add
inc
add
mov
pop
pusha
add
stc
or
dec
arpl
adc
add
scas
dec
dec
push
inc
add
movsl
add
add
add
xchg
in
adc
mov
jbe
add
add
xchg
stc
rolb
add
incl
add
add
add
add
mov
mov
add
and
outsb
xor
lods
rclb
icebp
pop
add
inc
add
add
cmp
int3
mov
je
imul
movsb
add
mov
lahf
lods
mov
or
rolb
add
pop
std
push
lcall
add
cmp
lock
jns
not
mov
mov
in
and
mov
mov
stos
inc
add
movb
mov
shll
mov
jl
add
pushl
dec
or
pusha
add
push
jns
pop
imul
cmpsl
add
sbb
test
add
jle
adc
xor
je
add
ss
ds
add
mov
pusha
add
sti
mov
ss
jae
dec
push
adc
jp
cmp
inc
add
int
add
push
or
lds
clc
mov
cmp
mov
pusha
add
mov
sarl
stos
ljmp
cmp
cmp
lods
or
sbb
add
mov
sbb
mov
ret
lcall
adc
addl
add
outsl
adc
mov
push
inc
add
dec
pop
add
call
xor
mov
add
addl
jb
jmp
imul
cmp
sbb
add
cld
jge
pop
hlt
cmp
add
bound
fstpl
incl
add
pop
add
add
mov
mov
xchg
mov
aaa
dec
lds
aas
rcl
pop
adc
sub
add
test
cmc
popa
add
insb
dec
cld
jmp
add
inc
add
push
les
sbb
loopne
inc
add
add
pop
add
loop
scas
fwait
inc
add
dec
scas
inc
add
push
add
cmc
dec
mov
add
imul
mov
add
jbe
mov
ja
mov
out
scas
jo
or
or
push
add
rcl
cmp
pop
lahf
lods
call
and
and
jno
out
decl
insl
icebp
iret
pushf
sub
mov
sbb
jl
das
sub
pop
jnp
icebp
cmp
mov
add
inc
add
add
add
add
addb
ljmp
jp
add
jbe
test
movl
cmp
add
jno
iret
test
push
call
cmp
add
cltd
and
fwait
mov
add
add
jae
lcall
add
add
add
mov
aaa
and
mov
ret
add
xchg
inc
add
pop
pop
loopne
sbb
xchg
adc
add
add
dec
push
pop
push
push
rolb
add
inc
add
add
ret
lea
pushl
add
mov
cmp
add
enter
test
push
test
mov
push
xchg
mov
and
les
mov
mov
add
in
ret
add
sahf
inc
add
xchg
xchg
sub
pop
cli
mov
mov
int3
bound
leave
mov
fadd
add
pop
add
add
cld
in
fidivrs
sub
inc
add
pushl
jnp
mov
cmpsl
add
test
out
or
jmp
add
add
inc
add
push
cwtl
mov
outsb
xchg
dec
pop
je
xor
mov
add
mov
fisubl
lcall
dec
cmp
add
add
test
addb
jmp
enter
add
add
pushf
dec
cmp
xchg
adc
add
les
push
and
mov
icebp
repz
jno
add
ds
loopne
adc
add
rol
add
scas
push
mov
add
add
inc
add
xor
add
add
add
fwait
addl
and
movsl
add
xor
add
dec
incl
xchg
cmp
mov
lret
mov
xchg
push
and
jbe
add
clc
cmpsb
add
add
mov
add
or
add
add
pop
scas
lret
mov
add
add
call
inc
add
insb
mov
inc
add
add
bound
jne
roll
mov
xchg
fs
add
mov
jo
add
inc
add
loop
imul
add
add
ljmp
add
push
xor
mov
mov
xchg
or
mov
cmp
mov
cmpsl
add
xor
add
aam
mov
imul
add
inc
add
add
add
push
cmpsb
add
fwait
mov
testl
clc
aas
push
ret
fistl
add
push
dec
pushl
addl
addb
xchg
fdivl
cs
mov
push
mov
add
sbb
dec
pushf
cmc
adc
sub
add
mov
add
mov
add
sbb
pop
xchg
sar
cmp
cwtl
push
inc
add
add
mov
adc
lock
cmp
mov
cld
sbb
add
add
imul
add
mov
pop
add
xor
xor
add
add
int
lret
fisttpl
add
add
mov
add
or
sbb
or
add
lods
lods
sti
decb
add
loope
mov
ljmp
cmp
in
mov
int3
in
movsb
add
int3
mov
push
inc
add
movsb
add
rclb
dec
nop
addb
dec
pop
adc
add
add
neg
into
adc
in
push
pop
test
add
xchg
ret
add
add
sub
or
xchg
addl
adc
icebp
sbb
mov
fsts
adc
adc
push
dec
sub
mov
cld
or
cwtl
pop
add
loop
repnz
adc
add
loop
test
icebp
xlat
xchg
pusha
add
add
add
push
xor
dec
and
lds
sahf
out
mov
add
call
add
outsl
fidivs
jbe
add
push
hlt
cmp
xchg
dec
jo
inc
add
jnp
adc
mov
testb
add
int
icebp
hlt
push
push
dec
insl
dec
mov
sbb
loopne
leave
xor
push
int
mov
and
jp
push
mov
dec
cmpsb
add
add
add
jp
sbb
idivb
add
inc
add
insb
movb
add
dec
cmp
add
lds
sti
leave
push
jno
push
movntq
arpl
jae
push
inc
add
add
jmp
add
mov
add
aas
sbb
or
add
xor
cmp
movl
jae
add
lock
dec
dec
add
add
lods
jmp
add
or
das
or
lods
int3
mov
test
mov
stos
xor
adc
add
add
cli
pop
call
xchg
repnz
rcll
dec
test
int3
dec
inc
add
cmp
adc
xchg
add
jmp
or
aas
mov
in
cmp
add
jmp
stc
loop
popf
mov
add
int3
mov
sub
add
add
call
xchg
int
ret
jmp
das
add
sub
mov
les
stc
inc
add
push
lods
test
jae
pop
and
insl
adc
sbb
mov
nop
mov
nop
jnp
add
add
add
mov
or
or
stos
push
sub
push
stos
addb
imul
inc
add
repz
jge
jge
add
or
add
add
add
dec
test
inc
add
inc
add
out
test
imul
sbb
cmc
popf
add
dec
mov
out
add
in
pusha
add
lret
test
pushf
stos
aaa
and
push
and
mov
jl
in
in
jbe
dec
cmpsb
add
hlt
inc
add
mov
mov
imulb
cmpsb
add
add
in
jmp
sbb
js
mov
add
ds
out
test
inc
add
sbb
in
repnz
add
add
lret
ds
add
mov
add
jo
push
fisubl
jp
inc
add
popa
add
sub
jo
add
inc
add
in
xchg
xchg
or
add
cmp
cmpsb
add
add
add
xor
cs
icebp
or
ficomps
decl
mov
mov
jnp
out
imul
test
ja
dec
enter
addl
push
lods
pop
and
scas
push
hlt
pop
mov
ret
add
sti
aad
out
aad
std
add
mov
add
xchg
jge
dec
xchg
insl
xchg
lods
aad
sti
movsb
add
add
inc
add
push
outsb
jle
push
add
sbb
add
sub
add
popf
cmp
hlt
inc
add
mov
addb
add
add
jmp
mov
movsl
add
call
pop
push
popf
inc
add
mov
add
cmc
sahf
xor
mov
or
icebp
xchg
xchg
add
add
push
mov
psrld
inc
add
jp
mov
mov
or
xchg
movsl
add
sbb
cld
pop
stos
push
arpl
rcrl
mov
add
dec
test
inc
add
lods
xchg
addb
add
and
jp
cwtl
pop
in
je
scas
mulb
add
dec
inc
add
and
push
in
insb
add
jecxz
xchg
fidivrl
sub
add
imul
or
push
stos
xor
add
jle
test
mov
mov
adc
movsl
add
out
into
divl
add
add
inc
add
or
outsl
dec
mov
movsl
add
push
fstps
jecxz
out
xchg
dec
out
and
shll
icebp
arpl
sbb
add
push
pusha
add
out
mov
add
nop
fcompl
mov
stos
fwait
push
mov
xchg
adc
adc
add
push
addl
add
dec
imul
push
idivl
aad
ret
add
movsb
add
mov
shl
add
dec
lds
paddd
push
int3
dec
ds
imul
jo
ljmp
cltd
mov
push
or
sti
adc
add
out
iret
sbb
add
call
add
sub
cmpsl
add
add
xor
mov
lock
mov
add
enter
add
add
xor
add
pushl
mul
add
add
dec
outsb
pop
enter
add
scas
mov
mov
pusha
add
add
movl
aaa
inc
add
movb
adc
aas
js
add
insb
roll
lret
idivb
pop
cltd
out
inc
add
add
add
mov
mov
call
mov
popa
add
outsl
cwtl
mov
movsl
add
lcall
pop
add
pop
enter
adc
pop
mov
pushf
push
mov
add
pop
sbb
jb
notb
add
add
decl
add
add
cli
sbb
add
roll
push
movl
inc
add
test
xchg
add
ljmp
mov
mov
loopne,pn
and
or
add
add
add
jb
add
sbb
in
mov
ja
and
cmpxchg
add
jae
aas
ja
pusha
add
add
xor
push
mov
aas
sub
add
sahf
ss
bound
jmp
stos
fists
nop
adc
add
add
movl
decl
sub
adc
cltd
xchg
mov
add
mov
jb
imul
lcall
repz
fcom
or
push
and
or
mov
clc
aam
add
fisttps
out
push
rcll
lods
sahf
test
out
mov
mov
mov
push
leave
lcall
add
dec
in
in
roll
shll
pop
repz
add
mov
arpl
xchg
hlt
pop
mov
mov
add
pop
push
add
and
mov
cwtl
mov
insb
xor
inc
add
add
jmp
add
add
ljmp
add
loopne
mov
xchg
pop
xor
add
in
shll
popa
add
jns
add
bound
popa
add
add
add
call
lock
inc
add
lock
mov
fwait
mov
add
xor
stc
mov
add
shl
in
scas
dec
add
decl
pop
add
dec
ja
sbb
dec
fwait
in
xor
cmp
scas
or
mov
and
xchg
iret
scas
test
ss
add
fcmovnu
inc
add
jle
insl
mov
inc
add
jnp
add
add
movb
out
into
jbe
lea
mov
xchg
lock
add
add
add
mov
xlat
aad
ret
add
and
popa
add
xchg
sbb
add
scas
add
lcall
hlt
or
mov
add
int
add
inc
add
test
addr16
add
add
leave
outsl
push
xor
cltd
cmp
shrb
pop
pop
popf
iret
aam
sub
or
out
inc
add
int3
pop
add
movsb
add
push
lods
inc
add
add
jmp
pop
stos
mov
cltd
jecxz
pop
dec
mov
push
add
call
scas
mov
add
add
add
adc
cmp
or
add
popf
cmp
add
ljmp
movl
in
aam
xchg
xchg
aas
and
jbe,pn
mov
add
jmp
jl
fstl
repz
mov
jecxz
xlat
ret
add
add
in
scas
or
xchg
mov
insb
dec
lret
mov
test
cmp
movl
add
add
add
push
jns
into
popa
add
rorl
xchg
cwtl
xchg
cmpsl
add
stos
pop
hlt
pop
mov
add
decb
das
lods
add
push
into
insb
pop
or
insl
aaa
mov
add
add
dec
and
arpl
xor
jnp
or
add
sti
pop
call
add
add
add
jmp
add
fnstsw
mov
addl
test
test
jle
test
imul
leave
mov
add
push
arpl
xchg
outsl
ss
add
call
lret
test
outsb
sbb
and
inc
add
jg
jecxz
sub
or
ds
add
add
add
fcmovnbe
cmp
inc
add
add
sbb
cmp
aad
add
push
lret
aas
std
mov
add
jne
pop
fistl
dec
arpl
repz
call
lods
sbb
int3
jl
les
aam
addb
sbb
cld
mov
incb
add
pop
pop
xchg
addb
jp
iret
cmc
leave
xor
cmp
fisubrs
sub
insb
mov
loop
xlat
xchg
ret
add
mov
roll
nop
or
add
in
adc
add
push
repnz
add
or
sub
pop
loop
repz
call
add
dec
addb
add
aas
mov
mov
jb
mov
ficoml
adc
aad
int3
aaa
push
and
or
out
stc
mov
lods
xchg
jle
aad
mull
add
jb
mov
mull
push
scas
jg
jbe
add
mov
push
out
sub
push
js
jno
lds
jb
aam
js
inc
add
loopne
push
lret
out
mov
cmpsl
add
js
add
mov
in
int3
stc
sub
add
movb
pop
repz
pop
outsl
lods
lret
sbb
add
decl
mov
in
addb
cmovb
popf
mov
jnp
sti
test
sbb
cmpsb
add
xchg
lock
test
aaa
rolb
frstor
add
setae
pop
pop
mov
add
inc
add
mov
imul
inc
add
in
rolb
les
pop
jp
inc
add
insb
or
sbb
fidivl
lret
sbb
aas
pop
test
xchg
leave
test
les
bound
mov
shlb
mov
in
in
nop
in
xchg
out
scas
xchg
pusha
add
jecxz
rorl
mov
add
call
push
add
aam
add
xor
add
add
mov
ret
add
add
xchg
mov
jecxz
das
push
mov
add
pushl
inc
add
add
sub
add
mov
pop
insl
mov
xor
repnz
or
int
test
imul
loop
frstor
add
add
add
add
decl
xchg
outsl
cmp
hlt
insb
testb
mov
sbb
repz
mov
pop
mov
add
add
adc
out
mov
adc
add
dec
call
adc
add
and
cmc
jmp
cmp
add
out
in
imul
int
fwait
test
es
dec
cmpsl
add
cwtl
xor
xor
add
dec
sub
mov
jmp
and
cld
pop
add
xchg
sub
inc
add
jns
pop
rcll
fstps
call
movl
cltd
aad
add
mov
cltd
dec
bound
aad
add
add
insl
aas
inc
add
outsb
loop
call
movl
and
push
jbe
out
in
push
add
add
add
inc
add
in
sub
movsb
add
or
adc
adc
inc
add
add
decl
jecxz
scas
jno
fwait
xchg
inc
add
add
add
mov
jbe
test
add
imul
add
cli
push
rcl
stos
mov
leave
push
xor
add
add
sbb
add
pushl
adc
add
sub
sbb
dec
jge
mov
add
movsb
add
mov
sbb
dec
enter
sbb
mov
lahf
das
ret
loop
adc
add
add
movsl
add
sti
mov
mov
lods
mov
sbb
dec
loopne
or
xchg
mov
out
loopne
arpl
jecxz
in
sub
arpl
push
lods
stos
jbe
sub
jle
ljmp
sahf
rolb
mov
mov
pusha
add
sbb
fcoml
data16
cld
movb
add
addb
mov
mov
mov
ljmp
inc
add
les
jle
jge
fstpl
mov
add
add
jp
call
xor
add
add
xchg
mov
push
push
test
sbb
add
add
add
add
add
add
add
xchg
add
cmp
sti
jle
addb
fbstp
mov
add
mov
addl
add
push
pusha
add
add
lahf
call
test
dec
add
add
sti
xchg
out
push
jbe
sub
cmp
leave
pop
bound
mov
push
sub
movb
mov
ja
dec
dec
inc
add
add
fsub
add
push
inc
add
mov
or
mov
add
xchg
sbb
cmp
and
lea
popa
add
add
mov
jmp
add
cltd
dec
bnd
mov
aam
or
add
call
sbb
ljmp
ss
lcall
dec
xchg
lods
xor
rolb
cmp
xor
insb
popf
dec
adc
fsub
add
mov
lahf
mov
fbstp
pushf
mov
jl
movsb
add
adc
fistpl
mov
mov
cmpsb
add
add
add
or
sub
js
xchg
adc
adc
rcll
sub
add
mov
add
addb
stc
lahf
lock
or
dec
leave
jmp
xor
add
mov
cmpsl
add
add
dec
dec
cmp
aad
push
clc
adc
mov
leave
stos
push
sub
add
jb
xchg
cli
mov
pop
gs
sub
add
popa
add
bnd
add
sub
aaa
addb
mov
mov
lock
int3
bound
xor
dec
add
xlat
lods
push
add
sbb
add
adc
cwtl
in
loope
mov
xchg
push
pusha
add
dec
dec
mov
add
dec
data16
sti
push
divl
xor
scas
add
decl
mov
xlat
sarb
movsb
add
pop
jne
cmp
sti
insb
add
cld
add
icebp
cmp
add
fnsetpm(287
add
loop
call
add
mov
or
add
add
inc
add
cmp
mov
in
stos
dec
rcl
dec
sbb
lcall
mov
inc
add
ds
pop
dec
stos
rorb
fwait
lret
mov
fidivrs
and
mov
movb
dec
pop
repnz
incl
or
dec
leave
xor
inc
add
cltd
mov
lahf
test
adc
outsb
inc
add
add
mov
addb
lods
outsl
outsb
popa
add
mov
movb
test
std
mov
mov
mov
iret
les
pop
xchg
sub
mov
inc
add
sarl
dec
jge
add
enter
nop
xchg
dec
jp
add
out
cmpsb
add
cmp
add
mov
pushf
jp
sub
invd
xor
push
add
repnz
add
shl
add
ret
add
fdivrl
out
insb
adc
cmp
add
pop
fcoms
rcrb
sbb
sub
add
xchg
jne
and
mov
mov
call
or
sbb
add
mov
add
add
sbb
cmp
add
jl
lock
lret
mov
outsl
sub
addl
add
mov
lcall
and
scas
push
jp
add
add
and
push
or
std
or
enter
or
pop
ror
xchg
sub
jno
rcll
sbb
sbb
add
jp
inc
add
mov
ja
nop
leave
mov
ljmp
pop
in
pushf
lahf
lret
lret
add
add
les
rcll
cli
mov
add
add
aad
popf
mov
insb
inc
add
int3
xchg
or
movb
ja
add
cwtl
nop
add
cli
les
arpl
shlb
mov
push
xlat
das
xchg
xchg
push
jae
popa
add
add
mov
add
pushl
add
int3
add
cmp
testb
stos
les
xlat
int3
bound
lahf
bound
lret
dec
xlat
and
fwait
jns
sbb
pusha
add
add
cmp
sbb
add
lcall
add
jle
add
hlt
and
inc
add
dec
mov
js
jbe
sub
lea
decl
and
push
sbb
add
je
add
mov
mov
pop
xchg
jns
add
mov
fcoms
out
test
inc
add
pop
sub
sub
add
add
lahf
pushf
lds
jge
and
ret
add
int3
add
aad
add
cmp
add
les
add
fstpl
pushl
dec
rcrl
loope
and
imul
add
js
add
add
jbe
test
mov
out
movb
scas
lea
decb
cmc
fcmovnb
add
outsb
pop
out
out
or
and
sub
rolb
pop
mov
ss
insb
mov
mov
add
sahf
popa
add
pop
sub
testb
pop
in
iret
xchg
pop
add
ss
push
outsl
sbb
mov
add
test
adc
or
call
add
in
in
scas
adc
xlat
out
mov
jmp
cwtl
xor
insb
and
je
aad
arpl
mov
pop
js
add
and
push
pop
add
lcall
cmp
rolb
xor
adc
push
inc
add
imull
add
test
insb
inc
add
jmp
sbb
sti
inc
add
add
test
repnz
adc
lods
push
push
aas
mov
add
js
add
incl
outsl
cld
xchg
clc
cwtl
mov
push
icebp
lcall
add
or
mov
je
insl
and
inc
add
sub
xor
add
push
push
popa
add
cmp
dec
jecxz
lock
add
sbb
or
add
pop
push
mov
dec
ja
add
add
fwait
and
scas
rolb
jp
nop
bound
insb
push
mov
add
cld
mov
loope
sbb
add
inc
add
lds
lcall
add
sbb
push
add
adc
add
mov
test
add
adc
add
ret
add
push
mov
cltd
mov
fwait
stos
mov
addl
jmp
add
roll
add
add
push
jne
pop
fwait
dec
push
addb
dec
js
mov
lock
cmp
sbb
add
add
lock
daa
add
fbld
sbb
aad
add
xchg
mov
lods
mov
in
mov
les
cmpsl
add
lds
jne
data16
mov
inc
add
add
add
ljmp
ja
shll
addb
mov
sbb
add
mov
jmp
out
jmp
xchg
xchg
cmp
mov
add
jnp
xchg
add
pushl
test
and
decb
das
.byte
xchg
into
pop
