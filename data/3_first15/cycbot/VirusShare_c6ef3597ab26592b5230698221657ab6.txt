sarb
add
dec
cli
ds
ss
add
add
add
int
xchg
inc
add
add
add
cld
addb
gs
add
add
fmuls
movsb
pop
addl
cmp
inc
add
inc
add
mov
filds
adc
rolb
mov
fldl
xor
mov
xchg
push
out
mov
ret
add
addr16
add
cmpsb
inc
add
jl
cld
mov
add
add
cmp
sbb
addb
push
xchg
aad
sbb
jae
add
cwtl
enter
popa
add
cmp
sub
in
adc
sub
add
adc
lcall
iret
xchg
das
jl
cmp
sbb
je
aad
jge
dec
arpl
rcr
int3
sbb
pop
add
xchg
mov
or
or
fsts
add
adc
test
rcrl
out
clc
addb
pop
add
xor
sbb
dec
int
add
shlb
mov
add
aas
mov
daa
jbe
add
add
aas
mov
mov
sbb
popa
add
dec
scas
inc
add
adc
out
or
fsubrl
jmp
sahf
cmp
dec
push
mov
sub
push
mov
push
push
push
push
push
push
push
push
notrack
mov
pop
dec
imul
cmp
ss
push
call
cmp
je
mov
lea
push
push
push
call
push
jmp
ret
int3
mov
cld
cs
lea
xchg
or
xchg
lea
repnz
jne
jmp
pop
add
es
cs
ret
add
add
adc
add
leave
aam
sbb
stc
push
add
mov
std
lcall
xor
pop
jns
fiadds
add
aas
test
addl
test
jp
repnz
scas
jno
xor
mov
or
sbb
out
lds
je
je
sbb
mov
lcall
add
add
dec
pop
or
test
lds
adc
and
sti
jmp
add
addb
mov
roll
add
jo
jl
mov
pop
ficoms
cmp
pop
movsb
icebp
ja
add
bound
lahf
adc
insb
inc
add
cmp
add
adc
lcall
sti
jne
enter
fadds
add
push
pop
cs
inc
add
in
inc
add
add
hlt
cmc
sbb
addl
outsl
jmp
mov
xchg
mov
add
adc
push
addl
xchg
cmp
repz
lock
add
movb
mov
ret
inc
add
add
jne
inc
add
add
loope
fucom
fwait
jne
jns
add
gs
add
scas
filds
xchg
push
shlb
call
add
mov
icebp
sti
popl
add
leave
daa
movsl
lods
add
push
inc
add
xor
xchg
cli
xchg
je
sbb
or
roll
test
inc
add
enter
fadds
and
push
lea
add
fnstsw
mov
mov
xor
dec
dec
out
scas
and
mov
add
jbe
xor
rorl
mov
jge
xor
or
popl
fs
xchg
mov
inc
add
push
cmp
add
mov
add
push
mov
ds
icebp
mov
dec
outsb
adc
stc
push
int
add
cmp
test
decl
test
pop
jbe
addb
push
inc
add
xchg
cs
xor
mov
mov
dec
jns
add
and
and
lahf
jge
into
sbb
addr16
pop
add
add
add
mov
sbb
mov
lods
stos
cmp
cld
or
add
sti
test
sbb
addl
pop
add
pop
repz
clc
jae
pushf
xchg
pop
sbb
add
lret
loop
pop
loopne
add
and
int
mov
cmpsb
out
ja
push
add
outsb
cld
out
clc
stos
mov
xor
xlat
lds
sbb
mov
neg
cmp
xchg
dec
sbb
mov
dec
popa
add
add
inc
add
ljmp
mov
or
aaa
popf
push
fcoms
pop
fs
add
add
fsub
cmp
or
add
add
adc
add
loope
push
mov
mov
jecxz
add
xor
mov
lock
dec
cmp
addl
mov
dec
pop
arpl
cmp
add
inc
add
mov
dec
jle
mov
sbb
call
sahf
js
jno
mov
add
loopne
xor
add
mov
jo
inc
add
push
sub
xor
neg
adc
pop
lds
test
int
and
mov
pop
jo
dec
shrl
add
and
cmp
xchg
pop
xchg
es
cmp
add
in
pop
addb
add
jmp
arpl
fisttps
mov
push
stos
popa
add
add
icebp
roll
dec
fldcw
mov
mov
add
mov
add
add
ja
add
movsb
pusha
add
out
pop
dec
testl
or
and
sub
mov
int
mulb
add
add
movl
add
inc
add
jnp
mov
cmp
cmp
push
xchg
daa
ret
add
sarb
cltd
jg
add
into
lods
sbb
insl
addb
nop
jns
in
outsl
adc
mov
or
sub
xor
stos
sub
aad
inc
add
add
push
cmpsl
ret
sbb
int3
iret
ja
rorl
rcrb
add
lret
add
add
xor
call
jecxz
jp
sbb
add
cmp
pop
sub
add
les
cwtl
or
jg
in
cwtl
out
push
cmpsl
mov
pop
xor
cmpsl
jno
add
push
jl
test
lock
add
mov
mov
mov
jo
xor
add
mov
fstp
outsb
inc
add
mov
xchg
imulb
add
test
xchg
mov
std
repz
insl
out
nop
adc
add
add
mov
add
pop
stc
push
fistl
and
and
sbb
or
pop
outsl
insl
loope
pop
fists
testb
test
xchg
and
cld
sahf
js
ja
in
std
sti
dec
in
pop
push
pusha
add
addl
sbb
fisubrs
out
stc
call
out
add
adc
push
add
daa
repnz
sub
pusha
add
xor
sub
adc
dec
dec
rolb
add
add
add
jle
insb
xor
xchg
gs
mov
add
xchg
addl
adc
xchg
inc
add
out
sub
mov
xchg
pop
push
cmp
enter
jmp
lret
add
add
jb
shrb
lea
faddl
add
fs
push
xor
add
mov
sub
sbb
add
in
pop
shlb
popf
movsl
fsubl
mov
add
xor
in
jns
addb
add
in
xor
sbb
or
and
test
movb
add
mov
roll
test
test
dec
lock
mov
mov
mov
je
js
sub
add
loopne
and
test
cli
out
test
lea
inc
add
jbe
mov
mov
pop
inc
add
add
pop
lcall
add
cmc
cltd
adc
addb
cmp
sbb
pop
add
lcall
pop
pop
fisttpl
cmp
or
cmp
dec
dec
cli
and
ret
addb
xchg
jle
dec
stos
fiaddl
add
cmc
inc
add
mov
rcl
leave
sub
push
mov
sbb
outsb
mov
add
iret
jae
lock
mulb
in
adc
jecxz
arpl
pop
mov
dec
iret
jb
dec
stos
test
mov
sbb
aad
cmp
xchg
mov
in
add
hlt
sub
xchg
dec
push
stos
and
iret
test
ljmp
pop
enter
add
add
outsl
mov
lds
jecxz
sti
in
lret
inc
add
stc
pop
xchg
testb
mov
mov
inc
add
push
ret
add
sar
cmp
loope
pop
bound
enter
faddl
xchg
popf
ds
xchg
aaa
inc
add
insl
mov
test
loop
das
xchg
cmp
ret
push
mov
aaa
call
fidivrl
lods
pop
neg
xor
jle
add
inc
add
add
dec
aad
cmp
adc
xchg
movl
ret
add
call
dec
pop
pop
jns
xchg
in
xor
arpl
fldl
ror
xchg
push
xchg
cltd
or
add
sbb
fsubrs
jb
lock
mov
add
add
jne
push
nop
mov
sbb
pop
add
repnz
js
add
add
shll
jb
sbb
jnp
into
dec
test
or
bound
push
mov
push
cmp
xchg
std
and
pop
add
scas
xchg
xchg
push
xchg
dec
lcall
sahf
das
outsb
sbb
int3
xchg
out
stc
aas
pusha
add
xchg
aaa
cwtl
lods
in
je
movsl
rcrb
lods
and
and
adc
adc
in
lock
mov
iret
inc
add
push
sbb
add
mov
mov
mov
xor
add
add
mov
xchg
mov
pusha
add
movsl
push
jnp
scas
in
push
pop
or
cmp
stc
cmc
dec
mov
out
loop
add
ljmp
add
add
add
add
jl
fs
mov
add
icebp
test
add
xchg
push
enter
std
dec
mov
or
add
adc
addb
test
mov
sbb
or
test
nop
and
daa
test
mov
movsb
lds
pusha
add
loop
and
jb
add
dec
lods
push
and
adc
add
add
movsb
sti
jle
aam
out
dec
jecxz
mov
and
leave
frstor
push
pushf
adc
jb
movsl
jns
add
daa
cs
mov
in
scas
inc
add
mov
sbb
mov
lods
sbb
imul
xlat
sbb
ja
insb
pushf
ds
mov
out
sbb
fdivs
inc
add
int3
xchg
movsb
jbe
sub
dec
sahf
jmp
adc
aam
jl
mov
jl
add
jmp
cmp
pop
js
add
cmp
stc
mov
pop
das
outsb
fstps
and
and
insl
cwtl
loopew
addb
daa
xor
lahf
dec
adc
js
add
jmp
mov
push
inc
add
add
add
icebp
pop
cmc
sub
push
jne
ret
add
dec
jge
pop
xchg
into
repz
lods
popa
add
add
jns
cs
add
fsubl
movsl
pop
icebp
sahf
mov
add
aam
add
hlt
ret
push
ficoms
test
push
mov
mov
pop
negb
addl
and
pop
mov
mov
outsb
and
xlat
jmp
mov
cmp
and
movl
add
enter
dec
pop
or
ja
push
scas
adc
lahf
mov
test
add
mov
enter
int3
addl
push
into
inc
add
nop
addb
lock
xor
add
fildl
sub
add
popf
cli
sub
xor
movb
pop
adc
scas
mov
add
sbb
pop
iret
stc
mov
dec
mov
mov
addb
test
les
bound
movb
popa
add
jg
add
cwtl
push
repnz
add
xlat
inc
add
nop
jle
inc
add
add
test
add
pop
call
push
inc
add
adc
sarb
add
jmp
aaa
mov
sbb
add
stos
cltd
call
cli
and
xor
or
add
fisttpll
add
cwtl
pop
push
lea
inc
add
add
mull
or
add
dec
icebp
mov
push
xchg
sub
test
jno
add
pop
xchg
push
addl
dec
mov
icebp
mov
imul
or
mov
mov
cmp
add
das
jns
inc
add
lock
fisttps
daa
jmp
lds
xchg
pop
and
hlt
lods
imulb
mov
push
adc
xchg
stc
int
add
add
pop
add
pop
mov
add
mov
push
bnd
movb
jp
sub
mov
add
add
add
add
mov
sub
data16
push
outsb
or
dec
in
test
leave
sahf
mov
mov
or
sbb
add
imul
add
hlt
jnp
xor
imul
add
leave
xchg
xchg
imull
roll
int
adc
push
jo
add
inc
add
add
push
pop
add
cmp
cmp
nop
push
movl
test
aas
dec
mov
and
enter
xchg
addb
sub
addb
add
add
popa
add
movsl
test
rolb
add
ss
add
add
mov
je
xchg
sub
test
stc
sub
ret
lahf
icebp
xchg
mov
add
movsl
cmc
movsl
repz
add
rcrl
stos
lahf
xor
je
cmp
pop
mov
or
push
and
cmp
xchg
pop
movb
jbe
adc
jmp
add
xchg
rolb
fdivl
add
inc
add
add
fidivrl
adc
add
adc
add
mov
mov
sbb
xchg
sahf
pextrw
add
ljmp
adc
xchg
in
cli
ficoms
jnp
int
mov
add
call
repnz
ficoml
fisttpl
add
add
add
sbb
and
inc
add
jnp
pop
popf
xor
cli
loope
lahf
add
pop
add
mov
cmp
in
jle
or
pop
push
test
or
add
add
fmull
fistpl
clc
cmpsl
inc
add
popa
add
in
mov
mov
pop
add
add
mov
pushf
mov
add
pop
push
xchg
daa
push
add
push
pop
add
popf
sbb
pop
add
insb
jbe
movsl
adc
movsl
jnp
cld
mov
dec
cmp
add
dec
mov
stos
bound
jmp
cs
sbb
add
mov
inc
add
sbb
roll
add
scas
mov
add
stos
int
icebp
xchg
loope
adc
add
fsubr
cltd
push
add
sbb
add
add
sub
stos
mov
test
mov
dec
sbb
jl
jo
pop
roll
mov
pop
add
add
add
xlat
lds
addl
mov
das
dec
sub
mov
cmpsb
loop
mov
aas
je
jno
or
mov
add
ljmp
add
cmp
mov
push
cltd
in
xchg
jg
dec
push
daa
in
lock
add
imul
fidivrs
loop
add
mov
dec
mov
popf
push
ljmp
pop
add
mov
ss
roll
and
daa
push
cmpsb
mov
bound
fisttps
call
jl
repz
fnstenv
nop
out
sahf
fsubrl
das
mulb
fwait
in
xchg
outsb
stos
jle
cltd
into
jno
dec
out
sbb
pop
add
pop
sbb
add
imul
xlat
or
aad
arpl
sub
sahf
pushf
cld
push
mov
mov
ljmp
dec
mov
add
addl
push
nop
mov
ficoms
adc
pusha
add
mov
shlb
sbb
std
std
leave
test
mov
xor
jmp
dec
dec
xchg
xor
shll
add
mov
outsl
gs
add
sbb
aad
add
cmpsl
inc
add
movsb
inc
add
aas
loopne
iret
jg
movb
stos
gs
inc
add
cmp
cmpsb
push
addb
lods
mov
xchg
xchg
out
std
lret
lret
adc
sahf
mov
pop
add
std
or
cmp
dec
mov
add
add
movsl
test
pop
pop
mov
dec
xlat
xor
in
cld
xor
cmp
push
push
pusha
add
adc
lahf
dec
movsl
fdivl
lds
sub
mov
jno
popf
mov
jmp
mov
aam
add
add
or
outsl
xor
xor
es
inc
add
mov
push
dec
insl
test
and
js
imul
xchg
test
popa
add
xchg
cmp
clc
cmp
xchg
repz
and
data16
add
sbb
fisttpll
push
rolb
add
lock
aad
xchg
popf
xor
cli
into
aam
xchg
addb
add
xchg
sarl
ret
add
add
dec
stos
dec
pop
add
out
add
push
sbb
push
cmp
aaa
add
insl
push
roll
inc
add
int3
push
fisttpll
add
dec
jmp
aas
sbb
add
pop
pop
mov
add
add
push
mov
cmp
push
xor
into
pushl
or
jg
add
pop
dec
ret
push
xchg
pop
adc
add
fstpl
leave
movsb
jle
mov
cmc
add
xchg
cli
jge
dec
lret
push
dec
sbb
cmpsb
push
inc
add
notl
sub
mov
push
push
xor
dec
cmc
or
dec
iret
int3
pushf
inc
add
je
aas
nop
jmp
adc
pop
addb
add
add
add
push
in
pop
shlb
push
fneni(8087
dec
movsl
add
inc
add
int
push
lds
cmp
add
in
jns
inc
add
lahf
cmp
in
popa
add
add
push
xor
push
rcrl
add
addb
push
movsb
popf
sub
aad
inc
add
stos
daa
popa
add
fldenv
inc
add
add
mov
or
fs
ret
add
add
sub
dec
scas
rolb
scas
adc
pop
fsubs
movsl
into
addr16
outsb
bound
in
xchg
xor
xor
scas
iret
xchg
mov
aaa
cld
adc
jle
add
add
add
sbb
pop
addl
mov
and
icebp
loope
test
mov
add
push
js
fs
inc
add
and
push
loope
mov
nop
mov
add
pusha
add
and
xchg
lds
movb
popf
mov
push
clc
inc
add
das
stc
call
add
add
cmc
cmc
mulb
add
fcmovnb
add
jne
add
xchg
out
pushf
inc
add
add
mov
in
in
es
pop
pusha
add
add
add
dec
test
xchg
mov
lea
mov
fs
and
jl
testl
push
sbb
outsl
mov
divb
add
inc
add
add
push
mov
and
in
adc
out
mov
add
xor
push
xor
pop
lods
push
jnp
adc
push
push
imul
stc
cmp
mov
sahf
pop
decb
pop
and
popa
add
push
ja
outsl
lret
insb
ds
add
add
xor
icebp
jae
push
fwait
add
jno
imul
test
mov
pop
sahf
adc
pop
add
or
jbe
call
jl
jne
push
or
mov
ss
dec
flds
add
inc
add
aam
pop
add
dec
fcmovnb
add
in
lahf
bound
inc
add
add
hlt
leave
arpl
addb
jecxz
daa
pushl
xchg
cmp
add
fstpt
out
cmp
cmp
and
mov
lock
xor
xor
outsl
push
push
sbb
pop
cmp
bound
dec
ja
jbe
addr16
stos
dec
and
in
insl
pop
xchg
in
pop
adc
roll
cmp
add
gs
jns
nop
adc
pop
movb
aaa
adc
stc
cmpsl
xor
mov
psubd
jg
mov
repz
jmp
add
movsb
je
mov
dec
bound
sub
int3
jmp
jbe
loopne
sub
movl
jb
add
enter
repnz
add
rcll
pop
add
mov
add
add
mov
and
push
xor
rorb
pushf
xlat
mov
add
add
pop
lock
nop
or
add
mov
addb
scas
sub
test
jge
mov
add
inc
add
jp
fwait
addl
arpl
call
cwtl
or
jge
add
mov
movb
out
cmp
sbb
mov
mov
lds
mov
lret
dec
push
add
cli
sbb
ret
add
enter
xchg
xor
les
sti
vphaddwq
mov
pop
test
add
add
add
adc
add
jns
add
jle
or
addl
and
movsl
adc
jne
add
addb
pop
jae
mov
scas
cmpsb
dec
pop
ja
add
add
sbb
cmc
cmovae
mov
add
xchg
ffree
add
or
xchg
xchg
xlat
adc
add
sbb
mov
xor
push
add
fsubrs
adc
pop
jne
addr16
jmp
add
pop
xchg
sahf
adc
add
lret
xchg
fistpll
cmp
lret
mov
add
add
pusha
add
add
inc
add
addb
leave
cmp
aam
cmp
add
or
jle
iret
inc
add
add
in
int3
adc
add
jmp
fxam
xor
dec
add
jmp
dec
test
cli
mov
imull
ljmp
ret
mov
pushf
test
ds
add
imul
loope
loope
aaa
add
sti
inc
add
add
add
std
or
fwait
lret
pop
cmc
dec
dec
ja
dec
repz
add
jno
jo
jae
inc
add
lcall
push
jno
enter
push
scas
xor
xchg
icebp
xor
call
pop
jge
dec
and
fildl
add
out
and
xchg
lea
xchg
xchg
xchg
mov
xchg
mov
jns
mov
outsb
jecxz
pusha
add
enter
inc
add
add
aas
cmp
add
xchg
sub
jnp
adc
push
sbb
in
out
xor
add
cmp
mov
popf
pop
xchg
push
and
or
fidivrl
sub
inc
add
testl
cli
imul
and
in
roll
add
shlb
roll
add
pop
add
addl
js
loope
add
repz
or
xchg
out
add
mov
cmp
jae
adc
xchg
xchg
pop
mov
out
ja
xchg
addb
ja
jg
add
add
scas
xchg
pop
add
pop
add
add
add
cwtl
std
jne
ss
lret
lock
cmc
test
fmul
pop
call
rolb
and
lahf
push
adc
and
je
gs
jne
ret
add
test
pop
add
jbe
mov
ljmp
jle
add
mov
jno
cmc
jmp
cmp
xchg
mov
idivb
data16
sbb
add
add
jbe
call
sbb
fnstcw
rcr
scas
ficomps
mov
into
mov
dec
scas
mov
mov
jg
xchg
std
or
cmp
mov
fsubrl
push
push
jle
mov
jl
popl
pop
roll
out
repnz
add
aam
add
xchg
pushf
cmp
mov
xlat
sub
xor
cmc
push
jae
add
jo
test
fs
aaa
imul
mov
xchg
clts
add
add
push
sti
pop
bound
sbb
les
add
pop
mov
add
nop
cld
pusha
add
je
cli
nop
shlb
movb
inc
add
add
add
inc
add
and
icebp
addb
xchg
out
add
xor
test
roll
das
cmp
cmc
enter
cltd
mov
push
push
cmpsb
sbb
test
addb
add
jo
mov
add
pop
inc
add
pop
add
jg
ss
add
jbe
xchg
push
cmp
sbb
jns
add
add
sbb
push
inc
add
sbb
add
out
lret
adc
stos
in
cld
pop
push
outsl
mov
mov
xor
shrb
adc
sub
push
lock
ds
insl
addb
int
lahf
bound
cs
adc
or
inc
add
imul
inc
add
jmp
cmp
sbb
jo
add
mov
int3
movsb
jle
fbld
add
add
add
cltd
pop
cld
fwait
pushf
xor
mov
push
and
addr16
adc
les
jno
cmp
add
sub
inc
add
cld
aam
jo
or
pop
jg
xlat
xlat
jg
pop
lret
cmp
or
add
mov
jl
fistps
aas
jl
push
push
addb
addb
fwait
ss
push
lret
pushf
pop
imul
dec
aaa
daa
pop
mov
mov
movsl
push
int
add
sahf
das
push
add
stos
int3
push
jo
dec
loopne
popf
push
outsl
sub
dec
repz
add
movb
mull
sbb
cld
push
or
sbb
add
shlb
xchg
nop
in
sub
fidivs
clc
pop
loopne
xor
pushf
pusha
add
daa
cmp
aas
ds
add
lcall
jbe
out
mov
aaa
ss
push
push
shr
or
or
icebp
mov
addb
xlat
dec
and
pop
mov
daa
lcall
xchg
ljmp
in
pop
repnz
mov
xchg
fldcw
xchg
in
add
mov
jmp
jbe
mov
in
loop
aas
cmp
test
mov
lcall
addl
inc
add
add
sub
add
repz
hlt
js
outsb
pusha
add
jecxz
in
arpl
fdivl
dec
fimull
dec
xchg
sbb
les
push
xchg
std
mov
add
out
fisttpll
sbb
lods
adc
popf
push
push
dec
arpl
decb
inc
add
ds
jl
int
mov
pushl
add
lods
jo
mov
outsl
or
xor
cmp
or
cs
out
push
int3
pusha
add
icebp
call
mov
mov
lcall
or
scas
push
or
cmp
mov
test
addl
fucomp
imul
add
xchg
bound
adc
jns
adc
std
ja
or
cmp
sahf
fstpt
adc
add
or
xchg
arpl
arpl
popa
add
sarl
loope
add
or
stos
xor
push
insl
gs
add
fxch
mov
jg
mov
add
add
or
cmpsl
dec
imull
lret
dec
dec
fnstcw
cmpsl
xor
or
dec
jns
or
push
insl
iret
cmpsb
pop
popa
add
ljmp
iret
icebp
lds
xlat
js
hlt
mov
or
idivl
outsb
push
popa
add
stc
ret
xchg
mov
add
out
add
xchg
imul
mov
inc
add
jnp
rolb
leave
inc
add
xchg
jle
mov
stos
shll
add
xchg
add
push
les
clc
or
lret
mov
push
push
push
in
es
cmp
dec
scas
push
add
or
dec
xchg
int3
ljmp
adc
cmc
cmp
add
mov
add
mov
int
jbe
inc
add
movb
jle
sbb
aad
add
insb
hlt
xor
push
sbb
repz
mov
stos
ret
jle
lret
cmpsb
aaa
adc
mov
out
xor
ds
or
sub
roll
push
or
mov
mov
inc
add
adc
fsts
cmc
and
dec
xor
cmpsl
jb
mov
mov
push
stos
dec
js
jne
add
mov
lret
mov
mov
stc
or
sub
sbb
add
into
fmul
xchg
rolb
and
fdivs
call
test
cli
adc
add
idiv
imul
mov
mov
add
cmp
out
mov
inc
add
and
jg
sbb
sub
adc
or
add
mov
add
jnp
add
add
stc
sub
add
je
cmp
jg
push
decl
add
fwait
mov
lcall
mov
xor
insl
divl
aas
xchg
repz
addb
mov
data16
add
ret
sub
int
cmp
dec
test
adc
xchg
sub
data16
push
push
stos
mov
into
push
jb
sbb
daa
inc
add
mov
fbld
sub
add
inc
add
insb
cltd
xor
add
add
add
mov
adc
add
out
cmp
cmp
test
mov
xlat
push
add
xchg
or
add
xchg
nop
mov
pop
inc
add
stos
leave
hlt
in
imul
add
std
mov
jb
adc
insl
imulb
lods
xor
add
mov
addl
jmp
in
mov
adc
add
clc
jns
add
mov
jbe
mov
add
mov
imul
dec
repnz
lds
pop
dec
push
mov
add
fdivrs
xor
push
mov
bound
in
jmp
and
jg
add
mov
sahf
push
clc
or
notl
add
std
xor
xor
xchg
rcrb
sub
ret
add
sub
outsl
adc
inc
add
cmp
mov
hlt
jge
inc
add
xchg
lea
mov
xor
arpl
push
hlt
sti
push
nop
pop
leave
mov
adc
add
jmp
inc
add
cmp
jb
rcll
imul
add
movsl
pop
inc
add
cmpsb
and
push
add
push
in
pushf
repnz
stos
ret
add
add
sahf
std
xchg
mov
cmp
addl
add
add
add
adc
cltd
in
sub
cwtl
xchg
push
daa
jne
mov
dec
add
jmp
loope
roll
add
push
nop
das
gs
dec
jge
in
imul
push
scas
dec
stos
gs
add
dec
xchg
in
out
sbb
call
add
add
ljmp
pop
mov
mov
in
ret
data16
js
inc
add
aam
mov
add
pusha
add
jno
cs
je
jne
adc
jg
add
jne
in
pop
repz
mov
push
add
cld
repz
out
mov
push
and
test
pop
in
inc
add
or
push
movsl
sbb
imul
loopne
icebp
jne
adc
lods
pop
out
inc
add
enter
rorb
cmpsl
cmp
add
stc
adc
scas
movl
add
add
push
out
arpl
sbb
sbb
xchg
repz
addr16
add
out
cld
xor
ret
add
adc
cmp
aaa
jns
add
gs
mov
out
loop
addb
push
mov
pop
pop
xor
and
insb
pop
sbb
data16
imul
cmpsb
mov
outsl
dec
pop
fwait
ds
add
shlb
cmp
pushf
mov
movl
xchg
and
and
sbb
pop
or
add
add
mov
sub
cmp
aam
scas
in
jl
add
cmpsb
add
ljmp
xchg
fnstsw
add
pop
or
or
das
shll
add
pop
movl
enter
aas
inc
add
mov
add
lea
sbb
int3
inc
add
adc
xchg
inc
add
add
hlt
bound
outsb
push
adc
roll
push
jge
pop
es
js,pn
sbb
add
push
dec
in
xchg
lahf
jo
js
mov
jle
mov
dec
fsubrp
dec
sbb
xor
pop
dec
loope
add
or
sub
inc
add
sub
sbb
mov
add
and
mov
out
jp
movl
fsubrl
mov
push
shlb
movb
icebp
out
push
sahf
mov
cld
sub
add
je
mov
mov
nop
add
fwait
test
iret
inc
add
adc
cmpsl
mov
mov
pop
pop
pop
pop
lea
rcrl
add
rorb
cwtl
lea
mov
sti
into
in
ret
add
add
add
add
into
mov
stc
adc
arpl
pop
outsb
pop
fcmove
jg
adc
sub
mulb
and
and
push
add
pop
rcll
add
enter
inc
add
mov
ss
inc
add
addb
jbe
jbe
int
inc
add
push
add
addb
js
stc
or
ds
jae
jp
pop
lods
lods
jmp
out
jl
mov
mov
xor
jl
add
sub
out
add
add
add
lret
xchg
sub
insb
imul
roll
popa
add
addb
inc
add
add
jge
ljmp
cmp
push
leave
cli
es
and
ss
cld
fbstp
fdivl
mov
or
mov
das
sbb
sbb
add
add
xor
lds
sbb
mov
add
dec
mov
push
push
dec
add
out
das
sbb
pop
dec
pop
xchg
insl
lds
fs
js
add
cmp
add
test
xlat
in
aad
roll
add
dec
sbb
int3
sub
or
lods
sbb
add
sub
out
add
inc
add
in
lahf
mov
pop
es
cwtl
addb
adc
cwtl
and
dec
sbb
add
sbb
outsl
adc
cmp
ret
add
add
xor
test
pop
jb
in
jecxz
xchg
inc
add
jae
cmp
in
sub
push
pop
cld
pop
ds
add
pop
xchg
sbb
lock
adc
add
les
pop
out
data16
mov
inc
add
roll
rol
add
addl
iret
sbb
add
add
add
or
lret
cs
aaa
insl
cmp
inc
add
adc
pop
ret
add
mov
cmpsb
sbb
inc
add
lods
rolb
mov
mov
les
adc
push
int3
mov
sub
sbb
fisubs
in
and
jle
add
stc
scas
jp
hlt
in
cmp
cmp
adc
jnp
cmpsl
pop
xor
inc
add
icebp
mov
xchg
inc
add
add
mov
add
mov
mov
inc
add
lods
aas
cli
cmp
addl
insb
sahf
xchg
mov
std
lcall
jecxz
call
aas
clc
cmp
push
jg
inc
add
aas
sbb
xchg
mov
scas
xor
mov
mov
in
sbb
add
add
xchg
loop
scas
negl
sub
mov
add
push
add
mov
cmp
add
push
insb
pop
mov
inc
add
adc
cmp
add
dec
pxor
mov
mov
add
mov
pop
lds
pop
xchg
lods
push
lods
mov
xchg
sbb
ja
fs
add
add
cmpsb
inc
add
imul
addb
add
xchg
and
cld
enter
adc
add
add
add
adc
add
dec
ja
push
stos
cmp
lods
movb
ja
add
jne
lds
xchg
mov
int3
rolb
add
cmpsb
stos
fisubrl
inc
add
add
jecxz
sub
adc
and
fsts
sub
inc
add
add
add
lret
add
setp
mov
push
mov
add
xchg
mov
fdivr
cwtl
aas
movsl
jmp
jbe
add
mov
add
mov
cmp
xchg
cltd
jne
inc
add
aaa
jb
jmp
fwait
adc
adc
pop
fnstcw
or
fisttpl
imul
or
add
inc
add
dec
adc
es
add
mov
ror
adc
add
lret
pop
aaa
mov
add
es
ret
push
les
xlat
jge
xchg
fs
add
add
jnp
add
loope
jle
addb
test
mov
push
add
movb
sub
mov
imul
add
pop
pop
movb
andps
jne
sub
loopne
add
enter
pusha
add
push
add
cmp
push
lret
enter
or
fwait
lcall
add
loopne
push
test
cli
mov
add
lea
inc
add
rolb
repz
push
out
enter
lret
jecxz
inc
add
jge
sbb
add
jae
cmp
add
add
add
or
repz
add
mov
fcmovbe
gs
bound
cmc
add
addr16
cmp
lock
fs
movb
mov
jns
test
pop
add
push
push
sahf
lods
jle
adc
sbb
fwait
mov
add
dec
mov
mov
cmpsb
mov
push
movl
addl
dec
xchg
jp
jge
add
insl
popf
movsl
xchg
mov
sbb
int
cld
add
dec
xchg
inc
add
addl
insl
add
adc
cmp
jo
add
adc
aas
jge
jle
movb
adc
movl
bound
test
push
stos
popf
xor
mov
add
stc
aas
cmpsl
into
js
push
aad
sbb
add
ret
add
mov
cltd
jae
xchg
push
or
add
adc
add
pop
push
cwtl
fisubrl
xor
sub
xor
dec
addr16
xor
inc
add
xchg
iretw
inc
add
push
rolb
adc
and
cmp
out
add
push
push
push
addb
repz
adc
add
adc
jecxz
mov
jle
add
aad
jbe
lds
notb
pop
inc
add
es
outsb
xchg
add
popf
mov
mov
add
dec
sub
add
add
pop
pop
dec
adc
bound
push
bound
mov
add
jnp
add
std
test
add
lods
in
fsub
sbb
inc
add
adc
pop
sbb
mov
pop
jge
lea
addl
cmp
add
repnz
dec
pushf
add
add
jmp
cmp
pop
push
rclb
inc
add
add
jle
add
shrl
add
mov
mov
mov
push
std
inc
add
mov
out
xchg
push
and
fldcw
es
iret
movsb
movsb
data16
pop
lcall
mov
add
cmpsb
addl
add
lahf
fisttps
movsbl
add
fcoml
push
fs
add
xchg
scas
xlat
mov
pop
add
mov
push
in
push
push
add
xor
add
dec
or
scas
test
mov
sbb
mov
clc
sub
mov
push
add
jmp
push
pop
dec
xchg
sub
add
jo
mov
add
push
mov
add
inc
add
add
pop
cmpsl
push
add
inc
add
add
rolb
loopw
cld
sbb
push
sbb
add
imul
inc
add
jb
mov
in
rcrb
outsb
dec
aad
aad
cltd
mov
out
jae
test
cpuid
hlt
es
add
mov
add
iret
jo
fwait
sub
xchg
or
arpl
out
in
std
adc
lahf
dec
mov
add
ljmp
in
add
xchg
xchg
pop
xor
mov
fwait
rolb
cmp
sub
repnz
mov
aam
aaa
add
inc
add
lods
push
add
lea
aaa
xchg
nop
int
jmp
cmp
cli
sub
incb
xchg
mov
adc
sub
in
addl
gs
js
lret
in
jmp
cmp
lock
inc
add
xor
std
out
fstl
push
dec
aaa
inc
add
ds
add
add
fidivs
pusha
add
add
shlb
dec
and
in
xchg
ds
test
lcall
es
add
sbb
enter
mov
add
cmpsb
bound
xchg
rorl
icebp
enter
or
jecxz
in
dec
xor
sbb
pop
or
insl
cmpsl
out
jp
mov
pop
push
dec
les
adc
mov
cli
and
fildll
add
mov
stos
mov
mov
mov
add
ss
imul
dec
ljmp
add
int
pop
loopne
add
leave
repnz
idivl
scas
pop
roll
add
push
jns
ljmp
iret
aad
push
mov
add
inc
add
mov
push
fst
xor
fstp
mov
test
mul
std
out
roll
sub
inc
add
fisubs
inc
add
dec
inc
add
push
xchg
sbb
inc
add
in
fnsave
adc
add
pop
cmp
add
add
mov
addl
add
push
add
add
aas
adc
loopne
std
mov
add
mov
test
gs
negl
mov
add
es
jg
pop
jae
inc
add
add
cmp
add
sti
pop
jnp
add
add
das
and
mov
sbb
lahf
in
dec
push
outsb
mov
jl
add
lods
sti
test
dec
sub
add
ljmp
add
push
jbe
cltd
loop
pop
pop
mov
enter
push
push
add
inc
add
iret
addb
mov
mov
add
jne
add
add
dec
stc
movsl
into
adc
xor
int3
leave
dec
push
ja
add
mov
mov
jno
add
inc
add
in
sub
add
cmp
pop
mov
das
in
xor
fdivr
addb
sbb
cmpsb
pop
ret
add
in
xor
addb
mov
addr16
inc
add
arpl
jne
mov
add
stos
add
and
int
add
jnp
into
push
xchg
mov
sbb
insb
fcomp
mov
add
leave
test
add
xlat
push
and
adc
bound
pop
divb
das
icebp
mov
mov
add
jno
jge
add
in
push
lret
xchg
add
dec
pusha
add
add
shlb
rep
sbb
sub
scas
test
hlt
leave
jb
add
add
add
xchg
fs
cwtl
xor
xor
jnp
fstpl
fldt
out
insl
pop
je
or
or
dec
out
stc
xchg
mov
lods
cmc
in
push
jp
popl
dec
stos
out
jbe
imulb
pop
fcompp
aaa
popf
pop
aad
or
and
mov
dec
dec
mov
in
movsb
mov
xchg
cmpsl
push
mov
xor
lret
popa
add
dec
push
add
push
test
rolb
add
cld
aaa
xlat
dec
xor
cmpsl
shl
int
sub
add
into
jb,pn
dec
dec
push
jne
ds
add
mov
pop
fcomp
sbb
add
rclb
fistl
pop
dec
add
adc
jg
aam
mov
cs
roll
sub
add
add
sub
pop
add
sub
sbb
dec
mov
add
mul
adc
push
inc
add
cmp
int
stc
rolb
add
sub
add
xchg
push
lock
inc
add
movb
add
push
add
xchg
into
sbb
xchg
xor
data16
iret
roll
inc
add
add
add
add
xchg
push
add
cmp
mov
ss
add
cmp
lods
daa
jecxz
jecxz
es
movsb
jecxz
add
pop
mov
mov
scas
adc
loope
cmp
add
or
fxch
sbb
mov
das
adc
out
sbb
add
xchg
movsb
addl
add
out
add
addb
out
nop
roll
fidivrs
insl
and
inc
add
and
xor
add
dec
sbb
ja
test
scas
in
xor
lea
or
add
addb
add
inc
add
std
repz
add
push
mov
lahf
test
ror
inc
add
mov
insl
shl
insl
adc
add
jp
icebp
sbb
jb
scas
and
push
mov
jbe
add
cld
in
jmp
shrl
mov
mov
mov
add
and
ret
add
scas
stos
imul
sbb
add
dec
popf
inc
add
je
addl
sbb
or
add
jb
and
lcall
cmpsb
icebp
ret
add
out
and
mov
popa
add
dec
adc
jns
or
data16
and
cs
aad
add
push
inc
add
out
dec
mulb
add
mov
add
or
lcall
imul
int3
xchg
pop
add
pusha
add
xchg
leave
mov
testl
add
mov
add
jmp
dec
add
mov
lahf
leave
push
add
xor
mov
ds
addb
sar
fildll
gs
pop
in
ja
outsb
fsubrs
fldt
inc
add
fisubl
add
mov
addl
popf
xchg
insb
or
add
outsb
mov
cmp
ss
ja
mov
ret
je
sub
sbb
mov
in
pop
mov
push
mov
dec
pop
enter
sub
mov
add
inc
add
jne
jnp
fildll
push
and
fwait
add
cwtd
ljmp
add
add
dec
in
decb
add
and
and
and
shrb
xchg
cld
fisttps
push
push
and
cmc
pushf
je
paddw
pop
jnp
mov
add
es
and
jge
rorb
sub
pop
in
in
std
or
or
fxch
cmp
adc
add
xchg
les
mov
popa
add
fstpt
test
icebp
pop
or
rcrb
rcrl
add
dec
cmp
adc
add
lods
add
jo
push
adc
or
xchg
xor
add
jb
mov
aaa
add
push
mov
xchg
jmp
add
add
mov
add
pop
in
fstl
aad
das
lods
cmpsl
sub
fwait
and
insl
test
insb
mov
xchg
push
mov
movb
ja
inc
add
fisubs
xchg
pop
inc
add
jb
scas
mov
sub
add
sub
pop
dec
fidivs
or
xchg
mov
mov
and
pusha
add
mov
aam
jmp
add
cmp
add
xchg
dec
add
mov
imul
inc
add
cmp
ret
add
mov
xchg
dec
bswap
jp
add
dec
mov
add
mov
inc
add
clc
mov
outsb
insl
xor
mov
xchg
fisubrs
imul
sub
push
jg
mov
xor
test
repnz
jne
ljmp
pop
pushf
jmp
jg
xchg
sbb
addl
leave
cmp
nop
testl
push
push
dec
inc
add
lds
leave
and
jns
pop
inc
add
add
mov
mov
movsb
lods
add
aam
leave
dec
idiv
pop
les
in
mov
imul
sbb
add
add
add
jbe
fcmovbe
bound
addl
push
jecxz
sub
insb
loop
add
add
cmc
adc
add
fucomp
call
sarl
add
mov
add
pop
jne
and
faddp
add
add
xor
shrl
enter
repz
or
add
test
pop
stos
ss
in
in
scas
rolb
add
xor
sub
sbb
sbb
ret
pop
pusha
add
pop
jl
xchg
pop
sbb
movsl
divb
add
sub
pop
add
movsl
jge
pop
xchg
repnz
js
and
fwait
iret
inc
add
pop
sbb
add
ja
popf
js
jne
jp
cld
push
xor
pop
add
cmp
add
push
pop
sbb
cmpsb
jmp
aam
push
xchg
lods
or
xor
fists
mov
mov
add
mov
and
add
jbe
add
mov
sbb
push
add
insl
or
imull
outsb
inc
add
addb
ss
les
dec
ljmp
mov
in
pop
dec
or
jo
add
add
or
push
jbe
add
sub
mov
movb
push
mov
add
test
pop
sbb
mov
out
cmpsl
in
add
outsb
mov
sub
shrl
lea
mov
push
fiadds
sbb
stos
jb
add
add
add
test
push
inc
add
les
jmp
inc
add
push
mov
roll
in
sub
fsubl
pop
add
insb
adc
sarb
mov
pop
xor
add
jno
mov
add
scas
push
mov
lahf
dec
or
xchg
sbb
sti
addb
loopne
ret
movl
and
es
mov
add
lret
mov
jo
fcoms
push
ljmp
int3
sub
clc
enter
xchg
mov
xor
sti
push
sub
movl
add
sbb
fwait
and
push
cmpsl
nop
arpl
lods
inc
add
cs
fsubrs
push
add
adc
xor
sub
imul
lock
pop
cmp
add
mov
movsb
sbb
adc
add
sbb
push
lret
gs
add
scas
call
add
add
fcoml
pushf
nop
inc
add
cmpsl
push
ds
rcr
dec
and
push
add
ds
addb
push
mov
push
xchg
mov
test
mov
mov
add
test
adc
add
add
add
add
or
cmp
loopne
add
fwait
test
and
add
loop
pushf
cli
ss
sbb
pop
and
jne
sbb
sbb
or
sub
xchg
sbb
movsl
stc
aas
aas
mov
or
add
add
cmp
ret
cli
outsb
test
mov
xor
roll
and
cld
test
imul
add
lcall
or
rolb
add
cwtl
cmp
scas
mov
aad
pop
or
testb
dec
repz
mov
or
push
stos
inc
add
in
push
xlat
jb
push
inc
add
inc
add
pop
xchg
cmp
add
in
xchg
jecxz
cmp
sub
xchg
out
add
inc
add
add
and
push
jmp
adc
test
jle
add
ljmp
mov
ja
scas
aad
jge
repnz
incl
add
cli
mov
test
xchg
xchg
fucomip
add
and
pop
jo
add
add
not
ss
and
lea
addl
sub
xlat
adc
bound
repnz
mov
imulb
dec
mov
loopne
movsb
fcompl
in
add
in
rcr
lahf
sub
fiaddl
dec
mov
lods
cmp
xor
ds
out
add
add
add
jo
jg
bound
aam
jl
pop
les
cmp
sbb
mov
add
fimuls
or
xchg
jmp
fistpl
push
push
popf
out
inc
add
fs
popa
add
repz
add
icebp
addl
dec
pop
inc
add
and
inc
add
mov
outsb
repnz
mov
or
popf
add
outsl
pop
iret
sar
adc
aam
repz
xchg
scas
jecxz
in
add
add
xor
add
add
popf
mov
add
cmpsb
cmp
cltd
mov
xchg
sti
add
add
ja
dec
or
stc
mov
insb
dec
jbe
push
popf
jno
out
add
add
fadds
or
add
insb
jb
aam
dec
call
inc
add
add
push
mov
cmp
push
jnp
fildl
repnz
add
lcall
add
adc
mov
stos
sbb
pop
add
adc
pop
jmp
jge
jno
adc
mov
sub
mov
pop
outsl
xchg
cltd
fst
push
mov
shrb
jg
inc
add
xchg
add
push
mov
push
dec
aam
add
les
jle
outsl
ds
mov
add
fs
add
push
add
add
xchg
roll
mov
loop,pt
mov
or
ja
insl
add
mov
imull
dec
movsb
push
add
sub
lahf
inc
add
xchg
addl
pop
mov
fwait
addl
xor
jecxz
adc
adc
pop
inc
add
mov
mov
push
or
lea
pop
sbb
ret
add
pop
xchg
arpl
mov
add
addl
fists
bound
add
mov
dec
hlt
aam
idivb
and
xchg
outsb
and
in
rolb
aam
add
add
push
add
or
mov
push
adc
add
dec
adc
sar
xchg
addb
add
push
imul
sbb
xchg
sbb
adc
mov
seto
pop
std
pop
jp
add
xor
outsb
add
jecxz
and
es
push
push
push
lds
inc
add
cmp
movb
mov
mov
inc
add
add
jae
popf
mov
adc
add
mov
add
lcall
lahf
inc
add
mov
mov
rcr
add
cvttps2pi
dec
mov
fldz
pop
cmp
cmp
add
lea
add
mov
or
add
lds
ret
add
imul
test
js
pop
repz
pop
cmp
addl
mov
xor
add
loop
adc
fwait
sbb
in
add
jmp
add
cmc
rolb
data16
in
add
gs
add
out
xor
and
jno
jp
cmp
add
push
add
clc
das
gs
aad
aaa
sahf
sub
std
iret
lock
lret
test
mov
pop
mov
sti
aad
sbb
push
popf
mov
ret
movl
add
addb
xlat
hlt
push
inc
add
outsl
cli
mov
lcall
mov
repz
inc
add
jl
sahf
xchg
lods
das
pop
or
adc
insb
mov
aam
add
inc
add
sub
add
icebp
inc
add
lahf
int3
outsb
lock
add
stos
cmp
ss
and
out
dec
adc
push
add
les
test
imul
aam
add
test
mov
incb
xchg
mov
sbb
rcll
pop
add
int3
pop
addl
push
add
cmp
in
pop
loopne
push
mov
jge
xor
pop
add
sbb
fidivrl
scas
mov
add
add
pop
jbe
stc
adc
sub
cmp
sarl
mov
movsl
mov
or
cwtl
loop
dec
push
sub
xchg
leave
cmpsb
pop
aas
test
adc
add
push
cmpsb
adc
mov
ljmp
movsb
pop
movsb
xchg
inc
add
add
adc
dec
popf
pop
add
jns
push
aam
je
add
mov
sbb
test
mov
nop
cli
pop
stos
or
add
stos
sbb
jb
jnp
jl
dec
pop
inc
add
jg
cs
and
xchg
sbb
push
fldl
inc
add
or
dec
test
xchg
mov
cmp
inc
add
add
xchg
mov
ret
jp
pushf
test
add
imulb
roll
inc
add
mov
es
je
insl
xchg
xchg
mov
inc
add
jecxz
insb
mov
xor
or
cwtl
jecxz
push
dec
cli
xchg
or
mov
rorb
xchg
out
mov
fistpl
test
add
or
xchg
push
roll
ljmp
xor
lret
addb
xor
add
repnz
iret
mov
imul
call
add
pop
shlb
push
or
dec
pop
fbld
add
mov
cmp
mov
add
xchg
xor
cltd
mov
scas
fs
jg
jae
mov
pop
dec
xchg
fs
js
imul
add
push
inc
add
push
dec
addb
lds
xor
lret
add
in
jmp
cwtl
sub
out
cmc
dec
sub
lret
movsl
pushf
icebp
push
sub
aas
and
fs
outsb
in
add
mov
addl
add
add
dec
xchg
ljmp
add
jae
and
dec
out
lahf
dec
add
sub
xor
jns
push
out
test
sbb
add
pop
mov
add
push
flds
xchg
push
js
mov
leave
mov
xor
mov
xor
ja
adc
mov
cmpsl
stos
cltd
lret
add
jecxz
pop
ljmp
add
dec
add
lods
outsl
jno
cmp
adc
push
xor
add
mov
mov
xor
addl
cmc
lds
aam
dec
loope
xor
and
mov
aam
mov
xor
decl
je
pop
sub
jmp
add
xlat
sub
ds
adc
insl
xor
ja
cmp
dec
dec
fsubl
out
cmp
jne
xchg
inc
add
push
add
xor
xchg
push
xchg
xchg
test
inc
add
cmp
jne
je
add
pop
cmp
out
pushl
inc
add
leave
loop
gs
add
outsl
add
sub
mov
lods
outsb
out
addb
lods
int
xchg
sbb
pop
add
jbe
adc
jae
dec
shlb
mov
into
xor
jp
xor
sub
hlt
pop
sub
inc
add
in
push
inc
add
outsl
pop
in
ds
add
mov
sti
jno
pop
xchg
mov
repz
add
sbb
add
daa
cld
jae
add
pop
mov
pop
std
inc
add
pop
xor
lds
mov
jno
pop
mov
add
and
addb
xchg
mov
sahf
test
pop
leave
dec
sbb
add
aaa
dec
cwtl
roll
adc
mov
add
pop
dec
push
dec
out
add
mov
add
roll
sbb
stos
and
push
mov
ret
add
and
or
lcall
movb
test
fcmovbe
sub
out
pop
fistpl
loopne
cmp
or
outsl
jo
ljmp
lock
fsubrl
cmpsb
out
push
cpuid
push
ret
jnp
push
rolb
inc
add
in
loopne
repnz
add
add
cmp
add
sbb
push
sbb
add
and
add
cmp
cmp
outsl
stos
xchg
adc
shl
mov
popl
call
adc
repnz
jmp
fstpl
mov
lret
fcomps
mov
xor
ret
add
dec
mov
inc
add
movsl
scas
les
cmpsl
scas
ljmp
dec
lret
add
sbb
cld
scas
add
das
inc
add
push
movsl
lock
mov
bound
mov
jecxz
mov
aas
movsb
sbb
test
push
xor
add
push
incl
add
inc
add
cli
push
imul
xchg
sbb
data16
addr16
add
mov
add
add
out
add
add
out
aaa
adc
out
pop
loope
cmp
in
add
hlt
mov
add
or
js
cmc
jge
jb
movsb
pop
dec
call
or
outsl
int
ret
inc
add
ud2
sub
mov
jno
insl
js
adc
jle
push
pushf
pop
test
int3
xchg
lahf
sub
add
pusha
add
bnd
loope
shll
add
mov
pop
add
insl
cli
adc
mov
scas
mov
out
mov
add
add
sub
addb
das
ss
add
out
dec
pop
rorb
imul
das
sahf
imul
sub
in
jg
dec
push
sar
icebp
in
adc
in
loop
dec
outsl
hlt
fs
pop
roll
and
cmp
xchg
and
mov
loope
pop
xchg
orps
add
fimuls
mov
lds
loope
inc
add
add
add
aaa
xchg
cmpsb
test
stc
fildll
loope
pop
inc
add
fdiv
in
insb
inc
add
xchg
lds
dec
scas
testl
pop
icebp
loop
cltd
das
cmp
add
jle
movb
pop
mov
fldt
sub
shrb
cmc
inc
add
dec
call
lea
mov
add
rolb
scas
cs
add
add
or
add
push
enter
fsubl
cmc
movsb
test
fcomps
repnz
xchg
test
xchg
daa
enter
xchg
and
mov
repnz
xchg
sbb
cmp
add
and
popa
add
add
mov
push
movb
mov
iret
adc
bound
inc
add
test
push
int
adc
sub
cmpsb
push
addl
dec
test
mov
pop
scas
jge
jp
cmc
add
pop
aaa
xchg
js
jns
das
adc
imul
push
dec
int3
dec
push
or
loope
pop
add
pushf
fcomip
pusha
add
mov
cmp
arpl
mov
inc
add
jb
ss
add
and
sub
mov
cmp
fsubrs
jl
cmc
mov
lea
data16
add
add
aad
add
push
mov
lds
jb
sbb
icebp
outsb
mov
mov
movsb
inc
add
add
test
cmp
sbb
jecxz
scas
pop
ss
and
xor
xchg
dec
imul
or
in
adc
add
imul
lcall
pop
mov
addl
pop
xchg
sub
push
cmp
or
add
add
fcompl
neg
mov
ds
xchg
sbb
add
cmp
push
add
fldt
stos
or
add
push
mov
mov
leave
out
pop
int3
insl
test
add
outsb
jle
test
ds
cmp
mov
push
clc
mov
inc
add
dec
in
push
imul
add
and
xchg
lret
roll
lock
dec
dec
inc
add
bound
movb
mov
add
dec
jb
fcmovnu
jl
push
aam
stos
jp
adc
cmpsl
aad
push
pop
das
pop
mov
inc
add
mov
xor
xchg
cwtl
out
es
or
add
gs
dec
add
lret
adc
movl
jl
sbb
int
sarb
jge
mov
add
add
aad
mov
mov
fstps
aaa
fldt
mov
add
add
ja
add
cmp
hlt
jg
das
shl
push
loop
dec
inc
add
loop
scas
push
cmp
push
cmp
scas
lret
push
pop
add
aam
insb
and
fbld
sbb
push
add
and
test
stos
aaa
inc
add
imul
stc
add
jp
push
add
clc
push
xor
in
filds
push
jle
cmp
and
lcall
add
add
int3
push
add
push
sbb
adc
bound
mov
adc
lret
cmpsb
aad
jbe
add
pop
adc
sbb
mov
inc
add
out
xchg
nop
enter
roll
sbb
outsl
mov
add
mov
adc
add
push
adc
dec
mov
lods
add
shlb
add
xor
push
test
ljmp
cli
jbe
xchg
or
repz
inc
add
mov
in
mov
icebp
mov
add
xor
add
mov
push
cli
fwait
lcall
lds
mov
cmc
stc
dec
insl
push
inc
add
roll
dec
hlt
out
add
sti
sub
loope
mov
pop
mov
mov
add
cmpsl
repnz
push
add
pop
mov
movsl
pop
vmread
ret
add
push
dec
je
add
mov
lods
and
mov
roll
add
add
imul
outsb
mov
call
aaa
das
xchg
push
aas
or
inc
add
pusha
add
popf
popa
add
out
push
push
and
cmp
inc
add
add
mov
add
or
loope
into
icebp
xchg
mov
imul
mov
sub
cmpsl
push
xchg
out
js
es
loopne
mov
add
xor
inc
add
push
loop
daa
std
int
ficompl
aas
push
pop
cltd
jle
sahf
jo
pop
xchg
xor
inc
add
add
dec
sahf
mov
xchg
loopne
cmp
cmpsl
movl
jbe
rcrb
sbb
movb
inc
add
sub
daa
loope
xor
xchg
bound
aas
cmc
push
aam
add
adc
pop
mov
push
dec
loop
add
adc
addl
ret
add
addb
and
je
add
addl
das
xchg
or
jmp
cmp
in
mov
dec
add
pop
cmpsb
jns
notb
add
decb
push
rcrb
ljmp
movb
add
pop
jbe
push
imul
add
ds
or
add
aas
pushf
sbb
inc
add
addr16
in
add
mov
inc
add
pop
inc
add
movl
test
push
pop
dec
add
inc
add
mov
aaa
lret
xchg
inc
add
mov
and
jmp
lds
push
loop
xchg
add
je
call
lret
jg
xor
inc
add
mov
data16
or
lods
dec
xchg
sub
mov
dec
mov
xchg
int
and
out
dec
pop
mov
stc
cs
cmp
jp
add
ljmp
add
es
cmp
xchg
and
xor
clc
inc
add
ja
add
inc
add
pop
and
pusha
add
mov
push
mov
xchg
repz
add
movsl
mov
jne
push
add
call
xor
xchg
sbb
pop
pop
out
shl
inc
add
push
fbld
cmp
adc
lock
imul
dec
repz
sbb
cltd
shll
cwtl
mov
add
add
adc
out
inc
add
or
into
aam
or
shrb
push
add
mov
imul
cwtl
mov
loop
out
xchg
lds
lcall
cmp
add
xor
cwtl
call
lds
add
push
sub
roll
and
pop
sub
xor
push
ss
pop
push
add
aam
add
add
fiaddl
fnsave
stos
data16
stc
xor
ljmp
iret
fimuls
add
mov
fwait
dec
lret
cmp
add
adc
stos
mov
popf
hlt
mov
adc
push
pop
loop
push
push
popa
add
add
cltd
jecxz
add
idivl
addb
enter
and
mov
cmp
mov
add
cli
pop
stc
jae
or
loop
add
addl
popa
add
xor
cmp
sub
xchg
jle
add
addl
add
dec
push
mov
aad
sbb
pop
mov
inc
add
aaa
push
sar
fs
jae
loope
jb
add
das
dec
mul
inc
add
add
addb
add
mov
add
scas
lea
push
inc
add
mov
je
sbb
jg
mov
imul
inc
add
add
pop
je
bsf
xchg
add
jae
add
mov
pop
cmp
test
cmp
incb
rclb
mov
dec
mov
adc
xchg
fisubl
xchg
cmp
insb
in
sub
jmp
pushf
dec
push
inc
add
stos
or
xchg
nop
jo
and
jp
repz
mov
sbb
add
bound
mov
sub
cmc
out
mov
in
and
or
xchg
dec
lret
cltd
insb
jmp
cmpsl
mov
push
pusha
add
movsl
xor
out
addb
mov
adc
stc
call
mov
es
or
sub
add
xchg
add
rclb
sub
mov
mov
popf
and
xchg
icebp
nop
addl
push
adc
daa
and
add
mov
cmp
mov
fwait
sbb
shrl
add
jmp
sub
mov
add
insb
in
sbb
aas
popf
push
mov
das
hlt
icebp
mov
mov
dec
push
sub
loopne
add
mov
add
dec
rorb
icebp
mov
data16
pop
pop
loope
add
add
call
ds
add
lds
out
clc
hlt
test
stos
xchg
xor
ret
add
or
out
push
cmp
add
mov
push
jne
mov
xor
inc
add
cmp
and
movsb
push
cmp
test
push
call
xchg
push
in
mov
mov
hlt
ja
add
adc
lock
push
xchg
outsl
aad
cmp
adc
add
arpl
mov
add
push
cld
adc
mov
xchg
les
and
aad
mov
sahf
ret
add
pop
jb
js
mov
add
cli
scas
pop
cmp
inc
add
or
pusha
add
data16
sti
jmp
jmp
xchg
loop
pop
inc
add
adc
add
push
xor
out
xor
mov
and
add
xchg
icebp
test
lcall
insl
cmp
add
enter
or
adc
cs
xor
add
mov
out
sbb
jmp
pop
pop
sub
inc
add
test
daa
out
dec
mulb
push
cmc
and
dec
xchg
movl
or
cmp
adc
push
addl
pop
or
pop
in
movsb
sub
into
insb
outsb
mov
add
fcompl
sbb
add
testb
jbe
pop
sbb
mov
fwait
xchg
out
test
mov
mov
out
add
lock
xchg
add
push
out
and
mov
inc
add
xchg
addb
mov
rolb
and
add
in
add
and
iret
add
outsl
jno
xchg
pop
into
lahf
push
pushf
push
push
es
cmpsl
mov
mov
test
mov
inc
add
addl
jo
or
and
sahf
lahf
insb
fdivrl
in
mov
xchg
mov
loopne
mov
add
pop
flds
outsl
or
sbb
pusha
add
iret
sbb
lea
ja
add
test
add
movb
fcmove
inc
add
scas
movsl
sbb
fmull
mov
jle
sbb
mov
test
sahf
stc
push
icebp
pop
dec
movb
push
in
lret
das
mov
pop
xchg
mov
add
idivb
lods
pop
aam
loope
add
jg
adc
aas
add
adc
mov
add
clc
test
jl
add
add
cmp
push
inc
add
xchg
imul
add
cmc
in
push
mov
fsubrs
push
inc
add
imul
mov
push
or
in
add
jl
xor
mov
add
ja
movsl
lea
and
movb
push
adc
add
pop
mov
dec
mov
xchg
mov
fldenv
mov
jns
cmp
leave
cmp
add
ss
add
mov
repz
jecxz
fnstsw
fldl
repnz
icebp
mov
xchg
pop
mov
int
push
les
cli
movsl
xlat
das
in
add
cmpsl
das
cmc
ret
add
add
dec
pop
nop
data16
mov
xchg
or
push
sti
ja
pop
add
sbb
lret
xor
aaa
xchg
pop
addb
sbb
add
daa
pop
jecxz
add
in
fmul
das
or
and
jo
dec
loope,pt
sub
push
roll
mov
gs
add
lods
dec
xchg
in
add
sub
fbstp
add
push
push
add
jge
sbb
xchg
sub
or
adc
fcomp
int3
aad
add
and
popa
add
insl
insb
test
add
in
sub
sahf
and
fimuls
in
jnp
movsb
int
mov
in
stos
into
out
fsubrp
jae
jge
jne
pop
test
add
jmp
mov
lret
pop
cmp
push
jns
and
dec
addb
addb
xor
add
ds
cmp
add
xor
add
mov
clc
aam
push
pop
clc
lods
arpl
decl
push
jno
sbb
mov
jb
pop
xor
mov
add
add
arpl
sahf
sub
add
iret
push
add
in
addb
add
jle
enter
adc
add
enter
xor
sbb
and
xchg
xor
xor
std
jae
add
outsb
jg
mov
adc
movsb
sub
push
xchg
dec
addb
adc
pop
rcrb
add
and
cmp
push
addb
xor
das
test
push
inc
add
mov
and
jecxz
imul
lods
stos
lods
sahf
jbe
enter
shll
add
popf
inc
add
pop
sbb
add
push
cmpsl
cmpsb
sahf
or
sub
add
pop
xor
insb
dec
sub
sbb
add
mov
pusha
add
xlat
addl
sub
loop
cltd
jo
add
cltd
cli
dec
fcoml
test
inc
add
jbe
add
xchg
test
dec
dec
xor
jg
in
inc
add
xchg
lahf
lock
jb
pop
inc
add
inc
add
pop
in
add
movsl
rcl
addb
push
add
lea
push
bound
fmull
mov
fsts
inc
add
in
in
ficoml
and
cltd
sbb
pop
movl
xchg
dec
mov
cltd
pop
or
out
insl
out
mov
mov
add
push
aam
imul
xor
rolb
sub
bound
inc
add
push
dec
popa
add
mov
jnp
std
lods
adc
out
mov
add
adc
add
shll
icebp
fildl
add
add
movb
test
in
rcrb
add
test
xchg
fdivp
lret
cmp
add
cmp
jns
pop
add
and
nop
mov
cmp
nop
std
mov
out
push
pop
xchg
movl
adc
stos
mov
decl
shlb
movsb
push
hlt
addr16
dec
sbb
nop
sbb
add
and
jns
add
jp
test
std
imul
shlb
addl
movsl
dec
jmp
lods
into
xchg
leavew
and
xchg
mov
inc
add
add
cmp
int
lcall
loopne
lods
mul
mov
jae
add
add
and
dec
jge
xor
mov
add
sub
mov
loopne
pop
outsb
cmp
hlt
pushf
mov
add
mov
mov
insl
sbb
add
das
addl
add
aam
in
inc
add
dec
mov
or
lret
lods
sbb
add
rolb
push
mov
rolb
mov
loope
cmp
test
adc
adc
pushf
bound
fisttpll
cmp
inc
add
add
and
pop
inc
add
imulb
mov
std
test
pop
lret
add
leave
lods
mov
inc
add
add
xchg
sub
mov
add
ja
jmp
jmp
xchg
and
sbb
mov
push
jmp
add
or
pop
pop
lds
sub
fs
mov
adc
adc
mov
dec
inc
add
dec
push
mov
add
pop
fisttps
insl
sar
int3
popa
add
sub
pop
mov
fstpt
sub
int
xchg
lret
hlt
das
xor
add
add
cltd
les
push
xor
pushf
and
and
popf
je
notb
in
xchg
jge
insb
add
add
mov
gs
mov
mov
lret
add
adc
outsb
jge
adc
add
jno
dec
pop
add
mov
add
aaa
ds
add
xchg
dec
sbb
js
add
sub
out
test
adc
add
sbb
flds
add
test
rcr
pop
dec
xchg
jecxz
sti
addl
sub
inc
add
dec
int
sub
cwtl
push
adc
add
movsb
push
or
dec
push
jmp
std
fldcw
aam
sbb
dec
push
add
add
mov
add
add
testb
clc
fst
and
or
mov
jle
jmp
es
add
or
aad
je
mov
and
outsl
iret
and
or
mov
add
jo
push
push
rolb
fisubs
add
loop
fistps
cmp
mov
mov
cmp
mov
push
ja
mov
in
sbb
jo
aad
sbb
pop
add
in
adc
jle
inc
add
mov
cmp
das
std
ja
add
mov
fnstenv
icebp
push
push
pop
outsb
out
jnp
fldl
negb
les
adc
fnstsw
add
cld
je
je
add
in
dec
and
and
movsl
mov
movsb
in
movb
lret
add
or
ds
cmpsb
ds
aam
add
sbb
add
scas
outsb
sbb
scas
jo
adc
insl
call
cmp
adc
test
push
addb
cld
call
icebp
mov
les
inc
add
add
xor
push
aas
pop
jmp
ja
mov
lret
add
jb
outsb
push
push
cmp
add
mov
fisubs
movb
addb
out
jmp
push
add
into
sbb
add
add
sub
jb
adc
adc
inc
add
add
lock
iret
or
fbld
leave
hlt
out
xchg
cmp
adc
jecxz
xchg
pushf
movl
jecxz
addr16
add
lret
test
push
xor
xchg
fs
outsb
pop
add
mov
add
addb
movsb
add
mov
push
sbb
xor
push
push
test
xchg
pop
adc
sub
mov
pop
jge
add
pop
cmc
int
add
stc
or
cmp
inc
add
sub
push
add
enter
std
iret
cltd
or
lret
clc
cmpsl
xchg
jbe
xchg
cmp
ret
add
mov
push
xchg
mov
sub
adc
not
jge
jo
mov
inc
add
out
xlat
and
int3
and
cltd
adc
les
and
in
test
fs
add
jno
add
sbb
imul
mov
add
add
push
in
testl
sti
dec
addl
xchg
and
cmp
cmp
test
cmpsl
xor
xor
mov
jmp
call
out
mov
add
shll
lea
in
mov
stos
cmpsb
mov
jns
mov
aaa
mov
inc
add
inc
add
add
add
add
outsb
add
cmp
clc
push
and
scas
sub
add
les
outsb
addl
push
jecxz
mov
jb
xchg
add
aam
fadd
add
aaa
pop
push
mov
mov
movsb
imul
mov
out
xchg
xor
inc
add
add
mov
enter
sti
add
pop
jnp
add
sbb
fnsave
aad
sbb
xor
int
inc
add
push
xor
add
cwtl
sbb
sahf
pop
mov
push
and
jecxz
add
cmpsb
sar
adc
add
add
mov
xor
jge
inc
add
push
jg
jge
add
clc
mov
dec
mov
dec
xchg
test
cmp
push
adc
dec
mov
lret
sbb
hlt
dec
lds
sbb
and
call
addl
add
add
fwait
dec
sbb
and
dec
cltd
sub
cmpsl
xor
rolb
iret
xlat
cmpsl
enter
cwtl
pop
inc
add
and
add
add
add
inc
add
lods
sbb
and
movb
pop
push
add
int
outsb
in
xchg
addb
mov
imulb
sub
arpl
inc
add
sub
adc
ret
cmp
add
add
push
add
popa
add
push
add
add
int3
sub
add
push
hlt
add
dec
imul
out
dec
inc
add
add
add
add
lods
scas
inc
add
add
paddd
mov
jge
sbb
add
insl
push
add
xchg
jmp
std
arpl
jge
lock
mov
add
add
sub
or
add
add
add
inc
add
icebp
in
add
mov
push
inc
add
add
dec
jl
out
add
add
in
shrb
add
push
roll
cmpsb
xor
jbe
daa
adc
rcll
push
push
cs
jp
sbb
add
add
inc
add
sarb
xor
adc
add
pop
scas
push
xor
add
clc
inc
add
xchg
xor
mov
push
xchg
jbe
push
bswap
popf
insl
mov
add
imul
or
add
sbb
add
std
pop
push
mov
sbb
pop
xchg
cmp
out
and
xchg
nop
adc
sbb
xchg
inc
add
mov
bound
mov
pop
test
int3
out
loopne
lret
mov
mov
sub
clc
sbb
rcr
ja
ret
add
fldenv
or
lea
neg
test
cmpsl
jl
add
add
inc
add
or
sbb
jbe,pn
mov
sub
cmp
fsts
jne
or
add
pushf
add
test
xor
xor
cmp
fsubs
push
dec
ret
jg
dec
sub
xor
test
pushf
es
add
add
inc
add
xor
xor
adc
mov
mov
add
inc
add
test
mov
js
cltd
jmp
jns
out
dec
or
stos
adc
out
cmpsb
into
outsl
mov
testl
addl
push
add
add
xchg
aaa
movsl
sti
loop
and
sub
xor
add
test
pop
pop
js
xor
mov
sarl
inc
add
xor
cwtl
popf
call
leave
cmp
adc
jp
xor
sbb
mov
jg
popa
add
outsb
out
mov
mov
mov
adc
outsb
xor
int3
cmc
insb
xor
outsl
imul
addl
inc
add
shl
ja
ljmp
inc
add
dec
icebp
mov
addl
inc
add
dec
addl
int3
dec
lret
pusha
add
jae
mov
rolb
lcall
xor
daa
fldcw
int3
ficoml
stc
loop
mov
lahf
hlt
popf
mov
ret
add
xchg
rclb
ss
in
inc
add
repz
push
or
movsb
pop
xchg
push
pop
jbe
sti
test
push
pop
add
add
enter
mov
mov
add
cmpsb
cmpsl
sub
mov
test
pop
add
xor
mov
add
inc
add
or
mov
xor
inc
add
ja
add
icebp
push
push
lret
and
dec
dec
scas
lcall
cmp
out
stos
fldl
adc
in
adc
je
add
mov
add
xchg
ss
xor
xchg
mov
jmp
movsl
xchg
mov
add
lea
pop
rorb
push
movb
out
or
mov
add
loopnew
add
in
add
icebp
rsqrtps
rorb
nop
pop
add
pusha
add
pop
add
stos
mov
inc
add
lock
dec
or
add
test
jg
addr16
adc
add
cmp
mov
cs
jb
add
in
lods
or
js
add
sbb
push
in
test
add
popa
add
hlt
sarl
cld
adc
inc
add
jbe
add
xor
inc
add
adc
inc
add
push
fildl
jecxz
aad
adc
addl
std
xor
cmpsl
add
mov
movl
cmp
mov
stos
mov
inc
add
sbb
jp
add
add
stc
jb
add
add
xchg
add
xor
repz
jb
mov
dec
xor
lock
and
push
mov
xchg
ret
orl
and
jb
add
pop
add
adc
add
add
push
stc
jb
mov
imul
add
out
adc
add
add
add
add
inc
add
int3
mov
stc
jb
add
xchg
jg
add
nop
jmp
sub
lahf
and
jne
stc
jb
cltd
add
nop
jmp
or
or
dec
add
mov
xchg
ret
add
cltd
shr
mov
nop
jmp
add
jno
add
add
push
nop
jmp
push
add
add
push
add
xor
push
mov
xchg
ret
add
mov
inc
or
mov
xchg
ret
add
test
push
add
nop
jmp
subl
inc
stc
jb
and
add
pop
add
xor
add
add
inc
push
mov
xchg
ret
cmp
adc
subb
add
jno
in
add
mov
xchg
ret
imul
add
test
ret
pusha
stc
jb
add
int
add
nop
sbb
add
jb
add
add
add
mov
push
mov
xchg
ret
cmp
cmp
xchg
dec
add
nop
jmp
xor
dec
jg
add
insb
je
stc
jb
lahf
outsb
add
stc
jb
add
add
xor
clc
stc
jb
sbb
or
mov
nop
jmp
add
or
add
jb
and
add
xor
stc
jb
add
add
out
mov
stc
jb
add
in
mov
stc
jb
add
testl
popa
add
jb
mov
add
mov
dec
sbb
add
jb
mov
xchg
push
lea
mov
adc
jb
jecxz
add
movsb
mov
js
mov
xchg
ret
incb
stc
jb
add
fildl
popa
cs
cmp
inc
add
and
arpl
add
stc
jb
add
outsl
mov
add
stc
jb
and
mov
pop
stc
jb
add
addb
jne
stc
jb
inc
mov
pop
mov
stc
jb
mov
mov
inc
add
push
mov
add
mov
in
fcoms
mov
xchg
ret
inc
jecxz
add
add
push
mov
xchg
ret
sbb
add
stc
jb
xchg
add
add
mov
xchg
ret
pop
add
fcmovnu
inc
add
and
push
mov
xchg
ret
cltd
add
outsl
push
mov
add
and
lcall
add
mov
stc
jb
add
mov
mov
sub
ret
test
or
add
js
nop
jmp
addb
int
cs
outsb
div
nop
jmp
sbbl
pop
nop
jmp
mov
and
add
test
add
and
stc
jb
mov
add
int
sub
mov
jb
add
mov
mov
stc
jb
xchg
fildl
add
insb
jne
stc
jb
dec
popa
add
test
nop
jmp
and
add
add
sbb
jb
imul
cs
add
sub
stc
jb
mov
imul
rep
nop
jmp
mov
xchg
inc
inc
add
add
stc
jb
add
outsl
rcrb
nop
jmp
add
lahf
add
add
add
add
repnz
jb
or
lock
add
loope
pop
add
push
mov
xchg
ret
jecxz
ss
jne
nop
jmp
add
inc
iret
popa
nop
jmp
outsb
add
add
imul
nop
nop
repz
pause
jmp
add
mov
or
in
jbe
add
sub
scas
xor
pop
stc
jb
add
add
cmp
jle
push
mov
xchg
ret
movsl
cmp
aas
mov
stc
jb
or
add
inc
aad
push
push
mov
xchg
ret
add
mov
insb
inc
jb
stc
jb
cltd
dec
cmpl
sub
add
sub
cltd
jg,pn
mull
jmp
inc
add
add
popa
add
jb
add
add
lea
stc
jb
xchg
add
add
jecxz
add
addb
add
adc
push
push
stc
jb
andb
xchg
rclb
ficoms
jb
int
mov
mov
add
push
mov
xchg
ret
jg
add
dec
adc
jb
movsl
add
add
addl
add
movsl
cmp
add
add
push
mov
adc
add
adc
sbb
adc
inc
add
mov
xchg
ret
movsl
and
push
mov
stc
jb
add
negl
push
mov
xchg
ret
add
add
decb
jb
dec
add
add
add
mov
andb
mov
add
call
stc
jb
inc
xor
dec
sub
mov
inc
add
add
xchg
jmp
mov
xchg
ret
add
add
and
mov
jb
add
popa
or
rep
stc
jb
jg
add
cltd
cmpb
inc
call
inc
add
inc
mov
add
stc
jb
add
ret
lea
push
mov
xchg
ret
add
add
add
push
and
and
jb
pop
stc
jb
mov
mov
in
and
mov
loop
add
mov
jg
roll
cmp
cmpb
add
mov
int
mov
and
add
mov
add
sub
add
add
icebp
dec
pop
or
stos
push
push
mov
xchg
ret
add
add
adc
pop
xlat
inc
add
incb
imul
cmpb
add
cs
dec
cmp
add
xchg
enter
jb
add
add
mov
or
in
cmc
sbb
movsl
push
mov
inc
jge
mov
stc
jb
add
push
mov
jecxz
jnp
jbe
out
add
add
mov
adc
decl
push
add
add
jb
add
addb
pop
add
cwtl
xchg
stc
jb
add
cmpsl
in
and
pop
mov
stc
jb
add
xor
movb
mov
xchg
ret
mov
es
nop
jmp
mov
add
add
repnz
add
fdivr
jb
int
add
fildl
jmp
jb
add
inc
add
sbb
add
mov
add
ds
nop
jmp
inc
add
and
lret
or
stc
jb
and
aam
maskmovq
stc
jb
add
cmp
add
stc
jb
add
add
push
mov
xchg
ret
inc
add
jg
adc
add
add
jb
and
add
add
dec
rep
stc
jb
mov
fistpl
stc
jb
add
cltd
and
add
add
push
mov
insb
mov
push
dec
add
add
push
push
mov
xchg
ret
jg
mov
js
stc
jb
test
pop
mov
and
mov
xchg
push
mov
xchg
ret
add
imul
add
call
stc
jb
xor
cmpb
jne
stc
jb
in
add
add
sbbb
add
add
push
pop
outsb
mov
nop
jmp
jg
int
add
add
sub
nop
jmp
add
add
add
push
stc
jb
cltd
add
sbb
out
stc
jb
xchg
add
cs
ret
add
jb
mov
add
dec
adc
call
sub
ret
imul
xchg
popa
add
add
add
add
mov
add
dec
dec
dec
nop
jmp
add
add
sub
jne
nop
jmp
mov
add
dec
xor
stc
jb
dec
add
cs
add
add
add
push
stc
jb
int
add
fidivs
sub
push
mov
xchg
ret
add
add
stc
jb
add
jg
cs
pop
stc
jb
lahf
add
dec
add
add
add
nop
jmp
mov
dec
add
jne
stc
jb
mov
add
add
dec
push
stc
jb
add
mov
add
add
push
nop
jmp
add
add
dec
add
add
fldl
jne
stc
jb
inc
xor
pop
popa
push
mov
xchg
ret
add
xchg
add
xchg
dec
push
mov
add
mov
mov
add
fsubrl
popl
stc
jb
cltd
cltd
mov
dec
pusha
stc
jb
inc
imul
test
in
sub
push
mov
xchg
ret
lahf
add
call
stc
jb
inc
pop
add
mov
stc
jb
inc
sbb
mov
add
stc
jb
cltd
add
or
jb
add
je
pop
push
mov
xchg
ret
and
add
add
jp
dec
pop
add
nop
jmp
pop
pop
add
add
pop
push
mov
xchg
ret
data16
imul
xor
stc
jb
add
add
add
into
test
nop
jmp
cs
add
mov
nop
jmp
add
add
mov
call
stc
jb
add
int
add
or
mov
lahf
inc
add
add
add
push
mov
xchg
ret
add
add
mov
push
mov
xchg
ret
inc
mov
mov
jo
mov
add
add
je
add
stc
jb
add
add
jno
int3
mov
nop
jmp
add
fildl
cltd
add
cld
mov
stc
jb
add
xorl
jb
add
add
cmp
mov
add
stc
jb
add
lock
push
mov
add
ss
lcall
add
push
rolb
cmpw
stc
jb
add
cmp
push
int
add
add
cltd
add
push
mov
jnp
mov
sarl
add
lret
call
stc
jb
add
fisttpl
outsl
nop
jmp
add
add
inc
add
push
stc
jb
and
jecxz
arpl
faddl
xchg
ret
add
dec
add
dec
stc
jb
arpl
cmp
add
nop
jmp
mov
add
xchg
push
lahf
mov
stc
jb
xchg
and
xor
sbbb
inc
ss
push
in
jmp
stc
jb
mov
mov
xor
xchg
jb
add
add
addl
sbb
add
add
and
add
jg
sub
add
jb
imul
dec
nop
jmp
inc
add
mov
mov
in
add
mov
sbb
add
add
push
sti
push
push
mov
xchg
ret
and
insl
jne
nop
jmp
add
movsl
dec
xchg
in
xor
push
mov
xchg
ret
add
jge
stc
jb
add
add
pushl
push
mov
xchg
ret
add
jno
ljmp
add
add
lahf
dec
add
add
inc
add
and
call
add
std
mov
stc
jb
add
mov
mov
stc
jb
testl
cmp
jmp
jecxz
add
cmp
testl
adc
jb
jg
in
add
sar
ret
stc
jb
add
mov
add
ret
add
jb
in
fidivs
jno
je
stc
jb
sub
add
push
nop
jmp
data16
add
and
arpl
add
dec
jne
nop
jmp
add
arpl
mov
mov
incl
add
add
xchg
add
jb
add
add
negl
xchg
xchg
dec
push
push
mov
xchg
ret
add
mov
push
mov
xchg
ret
xor
xchg
cld
inc
add
add
jno
mov
jb
add
push
mov
add
add
stc
jb
mov
xor
stc
jb
and
push
sub
add
jecxz
add
mov
stc
jb
push
movsl
dec
imul
pop
mov
stc
jb
incb
add
mov
jmp
add
fildl
add
movsb
stc
jb
add
or
add
add
push
mov
xchg
ret
or
outsb
fistpl
lret
push
mov
xchg
ret
cltd
add
mov
repz
jb
incb
xchg
add
add
sub
stc
jb
add
notl
ja
mov
push
mov
xchg
ret
or
lret
dec
push
mov
xchg
ret
add
cltd
outsb
mov
int3
je
stc
jb
cs
fcmovnbe
loop
jmp
add
movsl
add
repnz
push
push
mov
xchg
ret
add
data16
shrl
jb
lahf
add
test
nop
jmp
pop
add
inc
mov
jb
cmp
sbb
ret
add
sbb
add
add
add
movsl
mov
test
or
add
jb
and
decb
test
add
jb
cltd
lock
add
pop
nop
jmp
add
mov
jb
add
add
push
mov
fstpl
mov
xchg
ret
pop
mov
adc
call
stc
jb
add
jg
mov
lock
push
mov
xchg
ret
add
add
add
loope
add
popa
jecxz
add
mov
nop
jmp
inc
and
add
outsl
out
decl
stc
jb
mov
jnp
rclb
fildl
xchg
ret
dec
data16
insb
mov
stc
jb
add
push
and
add
ret
stc
jb
mov
mov
repz
mov
xchg
ret
add
xor
mov
stc
jb
cmp
add
jne
xor
nop
jmp
test
add
push
mov
xchg
ret
in
inc
test
jb
lock
xor
mov
stc
jb
add
and
stc
jb
mov
push
mov
inc
add
add
stc
jb
jno
fisubs
add
push
mov
mov
pop
fwait
mov
jne
add
ret
add
stc
jb
add
sub
jmp
movsl
add
xor
and
mul
test
jmp
push
add
pop
add
mov
xchg
ret
add
ficoml
in
mov
push
sbb
xchg
pand
add
and
push
mov
xchg
ret
add
shr
stc
jb
or
fbstp
rclb
incl
cmp
add
cmp
add
dec
mov
stc
jb
add
jecxz
mov
nop
jmp
inc
add
add
jb
mov
stc
jb
add
add
mov
mov
cmp
nop
jmp
mov
dec
and
sub
stc
jb
add
cmp
add
addr16
dec
or
mov
xchg
ret
add
in
mov
stc
jb
orb
add
outsb
scas
mov
stc
jb
movsl
xor
fldt
mov
stc
jb
inc
add
add
and
in
add
stc
jb
cmp
dec
add
stc
jb
lahf
xor
jb
dec
push
mov
xchg
ret
xor
addl
repnz
push
stc
jb
sub
outsl
inc
add
testl
adc
add
jb
add
pop
movsl
out
push
mov
addb
push
or
add
outsb
mov
stc
jb
xchg
add
adc
jno
test
nop
jmp
cs
incb
add
add
jmp
sti
out
fidivs
sbb
push
push
mov
xchg
ret
xor
push
stc
jb
add
add
pop
and
push
mov
xchg
ret
add
ss
add
jg
nop
jmp
add
add
add
mov
nop
jmp
jg
sub
enter
add
lock
add
add
add
add
jb
add
call
add
add
ss
jl
sar
adcb
incl
or
add
adc
jmp
sub
push
xchg
es
leave
mov
stc
jb
incb
mov
add
jmp
stc
jb
ss
dec
shrb
xor
push
mov
xchg
ret
lock
add
add
mov
nop
jmp
mov
add
inc
add
lock
into
lea
push
mov
xchg
ret
add
add
movb
popf
push
mov
and
or
mov
xor
push
push
mov
xchg
ret
cltd
xchg
add
pop
and
nop
jmp
add
sbb
inc
add
es
stc
jb
add
mov
add
movsw
add
add
add
out
push
stc
jb
cmp
mov
add
nop
jmp
push
xor
add
sbb
xor
add
stc
jb
incb
jne
stc
jb
xchg
fiadds
push
cmc
xor
mov
nop
jmp
add
and
add
cmp
jb
mov
add
xchg
add
call
stc
jb
add
lock
int3
pusha
stc
jb
and
and
popa
call
adcb
mov
add
add
push
jae
mov
stc
jb
test
and
in
pushl
stc
jb
add
add
cmp
push
mov
xchg
ret
add
arpl
add
jb
add
pop
jno
call
stc
jb
add
add
ret
add
add
stc
jb
push
mov
adc
movzwl
stc
jb
mov
jge
dec
cmp
jb
mov
and
dec
nop
jmp
in
jno
cmp
add
add
mov
nop
jmp
outsb
int
add
pop
push
stc
jb
and
mov
add
add
mov
test
add
stc
jb
add
int
pop
stc
jb
fildl
mov
add
add
adcb
add
in
add
push
mov
add
incl
add
inc
movl
stc
jb
add
add
mov
stc
jb
add
add
stc
jb
xchg
add
popa
add
fwait
xor
stc
jb
add
add
and
lea
sar
xorb
sbb
sub
add
add
jb
fisubs
push
stc
jb
mov
int
mov
test
jb
pop
add
push
test
push
mov
xchg
ret
add
add
adc
testl
nop
jmp
pop
add
jecxz
mov
stc
jb
sbb
add
mov
mov
push
mov
xchg
ret
mov
adc
call
stc
jb
xor
stc
jb
add
push
add
add
and
and
stc
jb
pop
adcl
stc
jb
add
add
jecxz
add
stc
jb
inc
imul
cld
or
idiv
incl
cmp
pop
jnp
adc
jb
add
mov
sub
into
jne
stc
jb
push
add
push
mov
push
mov
xchg
ret
jecxz
inc
add
dec
and
push
mov
xchg
ret
add
imul
subb
add
imul
cltd
addb
add
add
in
pop
jle
mov
xor
add
cld
jmp
mov
push
stc
jb
add
cs
mov
repnz
add
stc
jb
add
add
and
dec
push
push
mov
xchg
ret
or
add
add
stc
jb
add
testw
sub
add
cmp
add
add
mov
pop
push
push
mov
xchg
ret
mov
add
addb
test
nop
jmp
add
add
add
arpl
ret
inc
push
mov
xchg
ret
testl
jecxz
mov
push
mov
xchg
ret
add
add
or
add
in
lea
mov
xchg
ret
mov
add
cs
pushl
nop
jmp
inc
lock
add
add
xor
mov
nop
jmp
add
and
lods
stc
jb
cs
imul
nop
lahf
pop
stc
jb
add
decb
sbb
loop
add
mov
rorb
stc
jb
testl
mov
stc
jb
fistpl
add
dec
call
nop
jmp
add
jecxz
add
call
nop
jmp
and
fisttpll
add
jb
jecxz
and
cmpsl
jecxz
add
xchg
cs
repnz
stc
jb
add
cs
sbbb
add
add
fwait
push
push
mov
xchg
ret
data16
xor
jl
enter
insl
incl
lock
testl
mov
stc
jb
add
pop
mov
stc
jb
add
mov
xorb
add
stc
jb
jno
mov
add
repz
mov
add
add
stc
jb
add
and
jb
cltd
add
test
add
fisttpl
mov
add
jb
arpl
mov
stc
jb
mov
dec
add
nop
jmp
lahf
int
and
pop
add
lret
add
stc
jb
dec
dec
add
add
mov
mov
stc
jb
add
mov
mov
mov
xchg
ret
xchg
mov
xchg
ret
add
add
rorl
add
add
add
fisttpll
in
jmp
lcall
add
or
jbe
stc
jb
orb
add
stc
jb
push
add
cmp
decb
icebp
cli
pushl
test
test
test
jg
test
mov
mov
js
add
pop
and
add
mov
adc
add
cltd
cltd
or
fiadds
outsb
add
nop
jmp
mov
mov
xchg
push
mov
stc
jb
popa
dec
add
popa
add
and
add
adc
jb
or
in
add
jmp
mov
pop
add
stos
or
add
fiadds
add
repnz
xor
push
mov
xchg
ret
arpl
and
jecxz
add
adc
test
outsl
push
stc
jb
add
mov
add
add
jecxz
add
add
add
stc
jb
push
add
cmp
popl
mov
incl
add
add
in
jg
add
or
xlat
add
popa
add
push
mov
xchg
ret
inc
ss
jnp
les
stc
jb
add
and
push
mov
push
mov
xchg
ret
push
add
fildl
add
jb
outsb
pop
add
out
inc
add
push
push
incb
mov
pop
mov
stc
jb
add
inc
mov
jb
add
add
add
add
and
fildl
mov
fistpl
dec
push
stc
jb
mov
mov
sti
stc
jb
add
add
testl
mov
xchg
ret
arpl
popa
mov
stc
jb
dec
jno
add
mov
nop
jmp
arpl
add
add
add
push
stc
jb
xor
dec
add
data16
repz
add
add
add
mov
stc
jb
add
mov
aam
pusha
stc
jb
inc
fldt
or
add
add
pop
stc
incl
mov
add
lock
std
rep
stc
jb
push
popa
outsl
test
popa
dec
pop
subl
stc
jb
and
add
add
add
fadds
xchg
ret
inc
dec
add
pop
mov
stc
jb
cs
pop
mov
mov
stos
out
incl
dec
adcb
pop
or
jmp
add
add
sbb
push
add
nop
jmp
add
incb
inc
push
jbe
push
mov
xchg
ret
imull
mov
add
nop
jmp
jecxz
or
add
mov
stc
jb
add
add
mov
nop
jmp
add
jg
add
mov
nop
jmp
fimuls
add
sub
push
push
mov
xchg
ret
mov
jno
add
push
mov
xchg
ret
add
stc
jb
add
cmp
mov
cmpb
incl
mov
add
or
jmp
add
dec
xor
add
call
scas
sti
incl
pop
add
call
jmp
mov
add
sbbb
mov
xchg
ret
arpl
sbb
rclb
pop
mov
push
mov
xchg
ret
add
add
fwait
jl
stc
jb
xchg
inc
push
push
aas
mov
stc
jb
mov
mov
push
mov
xchg
ret
jecxz
mov
mov
stc
jb
add
inc
add
add
nop
jmp
sbb
lods
and
push
mov
xchg
ret
test
jno
mov
stc
jb
xchg
push
add
push
mov
xchg
ret
add
testl
imul
add
add
add
sbb
jmp
incl
outsl
outsl
pop
sbb
xlat
lea
nop
jmp
and
into
and
push
mov
xchg
ret
add
fldt
jb
orl
cmp
incl
mov
mov
cmp
or
lcall
add
jecxz
movzwl
stc
jb
outsl
mov
add
mov
stc
jb
mov
add
push
jne
stc
jb
add
add
push
mov
xchg
ret
add
add
push
mov
stc
jb
fstpt
sub
test
jb
add
add
movzwl
nop
jmp
add
add
add
push
mov
aam
dec
push
mov
xchg
ret
ficomps
sbb
jmp
dec
sub
add
jmp
nop
jmp
add
mov
scas
mov
stc
jb
sbb
add
or
stc
jb
add
add
sbb
mov
xchg
ret
and
repz
stc
jb
xor
lea
sub
inc
add
add
inc
stc
jb
add
ficoms
mov
jmp
mov
add
popa
add
and
incl
movsl
mov
sub
jecxz
incl
in
inc
add
push
pop
inc
add
decl
push
mov
xchg
ret
mov
mov
stc
jb
add
mov
add
mov
stc
jb
xchg
mov
add
add
mov
xchg
ret
lock
mov
stos
loope
ljmp
sub
movsl
add
mov
popa
add
jmp
add
add
add
xor
jb
add
add
test
les
repz
push
push
mov
xchg
ret
add
add
stc
jb
int
add
add
sub
call
sub
ret
dec
ss
pop
enter
jb
mov
outsl
jno
ror
pop
push
mov
xchg
ret
add
outsb
notl
cld
push
mov
xchg
ret
add
add
push
mov
subb
incl
add
stc
jb
fildl
add
add
fcom
inc
add
add
dec
cmp
nop
jmp
add
add
in
incl
data16
and
add
lahf
jb
stc
jb
imul
hlt
cwtl
mov
push
mov
xchg
ret
outsl
cltd
xchg
movsb
pop
pop
push
mov
xchg
ret
add
add
subb
add
jb
in
mull
stc
jb
fildl
add
mov
add
push
mov
xchg
and
add
repz
mov
stc
jb
orl
stc
jb
add
add
mov
stc
jb
jecxz
sub
add
add
arpl
outsb
pop
nop
jmp
dec
mov
add
cmp
jb
add
add
inc
adc
mov
xchg
ret
mov
stc
jb
xchg
add
add
add
cmp
add
stc
jb
inc
xchg
cltd
mov
mov
int
jl
push
mov
xchg
ret
sub
jmp
orb
incl
jg
mov
testl
push
push
mov
xchg
ret
imul
and
jb
imul
and
daa
jae
pop
push
mov
xchg
ret
add
pop
cs
add
xor
pushl
push
mov
xchg
ret
add
add
and
sbb
clc
inc
add
add
add
push
in
incl
add
sub
xor
and
push
mov
xchg
ret
imul
stc
xor
stc
jb
mov
add
sbb
inc
add
push
and
fildl
add
adc
jb
mov
data16
out
stc
jb
incb
mov
sub
xorb
cmp
mov
incl
jne
nop
jmp
outsl
add
lock
sbb
jb
sub
add
fisubrs
sub
add
jb
xor
add
jmp
and
and
fstpt
call
fiadds
mov
adc
add
stc
jb
cs
dec
pushf
cmpl
nop
jmp
arpl
lock
add
nop
jmp
fldt
pop
and
je
nop
jmp
add
cmp
push
lcall
add
sub
jbe
stc
jb
add
dec
je
stc
jb
addb
addl
mov
inc
push
mov
xchg
ret
add
divl
push
push
mov
xchg
ret
add
in
add
int
pop
jae
jb
fildl
jg
sub
xchg
call
and
add
add
jns
stc
jb
lahf
inc
popa
add
outsl
fmull
xorb
ljmp
add
inc
add
sub
stc
jb
add
add
sar
subb
ljmp
add
test
push
in
mov
nop
jmp
and
test
mov
stc
jb
popa
push
cmp
mov
dec
add
mov
xchg
ret
cmp
sub
sbb
rclb
lock
add
add
add
xor
and
test
fidivs
jb
xor
add
inc
stc
jb
add
and
lds
jle
imul
cmp
incl
dec
and
shl
push
add
sub
nop
jmp
mov
add
cwtl
idiv
pushl
fnsetpm(287
xchg
sqrtps
and
sub
ret
add
add
mov
stc
jb
sbb
add
xchg
movb
inc
add
jb
and
mov
int
add
jb
fdivp
inc
data16
mov
xchg
dec
mov
stc
jb
add
orl
inc
add
add
inc
ss
push
stc
jb
add
add
add
add
fiaddl
jge
stc
jb
mov
jno
add
and
je
stc
jb
xor
and
or
add
sub
add
inc
push
mov
stc
jb
int
add
jne
nop
jmp
add
dec
add
and
push
mov
xchg
ret
cs
add
add
push
mov
xchg
ret
add
add
pop
jae
jb
mov
test
clc
stc
jb
incb
mov
xchg
nop
jmp
add
add
lock
mov
stos
popa
stc
jb
add
fstl
jb
outsl
add
add
cmp
nop
jmp
mov
movsl
mov
add
rolb
add
jb
and
mov
pop
imul
stc
jb
push
inc
and
iret
add
push
mov
xchg
ret
add
mov
mov
stos
push
mov
xchg
ret
test
lock
stc
jb
cmp
xchg
add
addl
jne
nop
jmp
add
add
addb
push
sub
push
mov
xchg
ret
ss
jp
jle
stc
jb
xor
std
push
stc
jb
xchg
add
add
imul
lcall
jmp
jg
add
arpl
out
mov
stc
jb
arpl
inc
push
mov
xchg
ret
push
cmp
cltd
push
outsb
xchg
stc
jb
xchg
add
add
incb
mov
out
incb
mov
movsl
add
popa
add
mov
stc
jb
cs
xor
stc
jb
add
add
push
mov
mov
add
pop
add
jne
fwait
rcll
sub
add
rolb
fldt
fnstsw
insl
imul
jle
roll
addl
add
in
fsub
lds
jl
mov
lcall
add
add
cmp
in
ljmp
mov
hlt
lock
cmp
dec
adc
dec
xor
stos
add
push
pusha
add
jmp
leave
movl
jecxz
add
add
add
mov
cmovnp
add
add
jl
cmpsl
loopne
add
jns
sbb
sub
addb
fwait
das
data16
arpl
mov
pop
inc
add
or
xchg
mov
ja
add
sub
pop
fwait
aas
dec
jo
cmp
add
pop
add
lahf
sbb
adc
scas
xor
leave
out
jo
add
fdivr
sub
inc
add
addb
addb
lea
in
pop
in
push
clc
xchg
or
sbb
movsl
fwait
scas
mov
add
sbb
add
out
movsb
dec
into
rcll
dec
scas
sub
mov
int3
inc
add
and
addb
add
pop
sub
push
add
add
fs
popa
add
jle
cli
ja
pop
jmp
stc
loopne
xchg
jnp
leave
cmp
add
add
ss
add
rcrl
jmp
leave
je
cmp
das
jl
xchg
jb
add
xchg
lcall
movsb
std
add
sub
lods
add
sbb
test
dec
pop
add
iret
movsl
pop
pop
imull
in
or
push
iret
cmp
imul
or
out
push
int3
in
jae
add
data16
xor
repz
fistps
or
test
xor
xchg
jae
sub
cwtl
popw
pop
into
mov
mov
cmp
add
js
push
cmp
arpl
adc
add
mov
inc
add
movsl
addl
idivl
cld
jne
mov
and
push
mov
inc
add
aaa
mov
in
outsb
nop
adc
mov
inc
add
add
cmp
mov
mov
repz
scas
sub
xchg
inc
add
icebp
pop
add
aas
cli
jle
pop
addb
fildl
shrl
fwait
out
mov
sub
mov
add
das
cli
in
xchg
ss
xchg
sub
inc
add
or
add
loopne
mov
movl
popf
add
into
pop
add
cmc
inc
add
adc
mov
mov
ret
mov
jnp
sbb
gs
add
das
or
into
inc
add
pop
cmp
cmpsl
mov
add
jmp
dec
rolb
insl
xchg
sbb
sub
lds
or
ljmp
dec
jnp
jbe
jns
pop
cmpsl
mov
adc
pop
cld
out
add
cli
push
add
inc
add
jnp
pop
add
xlat
movl
out
aas
nop
dec
popa
add
call
pusha
add
ja
pop
js
mov
lods
mov
sti
call
test
sub
mov
cmpsb
test
jmp
mov
add
ja
fisttps
add
xchg
and
sbb
pop
in
mov
add
outsl
mov
aas
loope
cmp
cltd
mov
add
stos
push
mov
add
dec
pop
mov
lods
pop
add
inc
add
add
pop
add
cwtl
loope
test
jbe
cli
push
movb
fbld
xchg
iretw
loop
push
and
inc
add
mov
add
or
jnp
add
add
jne
lret
in
fcoms
movl
or
push
sbb
popf
lds
push
lcall
movl
mov
lea
fstl
lret
pusha
add
sbb
test
mov
sub
pop
cld
sbb
sub
mov
xor
add
xor
inc
add
pop
or
mov
pop
sbb
adc
movl
add
mov
mov
add
repz
mov
aad
sbb
icebp
leave
fcom
jmp
jbe
out
loop
stos
mov
sbb
add
fcmovnb
add
ss
and
fidivrl
push
push
dec
insb
pop
popa
add
xchg
pop
lods
xchg
or
xchg
mov
pmaddwd
inc
add
mov
leave
in
add
add
pop
or
push
sbb
adc
ja
int
addb
xor
xor
mov
rolb
jl
fsub
mov
add
ds
xchg
or
fsubrp
xchg
push
pop
and
movb
or
aaa
pop
and
xchg
pop
mov
fisttpll
xor
add
jb
xchg
lods
jb
out
add
or
mov
in
std
pushf
mov
test
ss
push
jp
push
add
fsubl
add
cmpsl
push
mov
add
in
aam
dec
dec
dec
in
xor
push
pusha
add
add
mov
jg
jo
add
nop
xchg
lahf
outsb
mov
jl
aam
outsb
dec
mov
addl
mov
add
sub
loope
lods
lea
lock
add
add
in
fimull
add
add
add
xchg
hlt
adc
mul
cmpsb
neg
cmp
sbb
shlb
push
pop
push
stos
xor
add
dec
test
pop
mov
pop
sbb
aaa
sahf
out
movl
mul
test
in
xor
jp
add
sbb
insb
push
dec
push
mov
add
add
addl
sbb
cld
sub
sbb
xlat
ljmp
pop
sub
insb
mov
add
add
and
ljmp
test
cmp
leave
fwait
inc
add
or
lods
out
movsl
and
cmp
imul
adc
mov
fnstcw
popa
add
add
je
add
add
xor
movsb
aad
pop
lahf
sbb
xlat
in
mov
repz
pop
add
mov
addb
add
jne
test
add
mov
sub
push
inc
add
repz
add
add
mov
mov
dec
hlt
pusha
add
in
jmp
addl
aad
adc
out
data16
xor
jecxz
outsl
pushf
test
xor
xor
dec
ret
add
add
aas
cmp
adc
push
add
ret
add
push
inc
add
lea
fistl
sbb
push
in
jecxz
or
scas
dec
xchg
sti
pop
mov
xchg
xor
add
xchg
test
ret
xchg
and
mov
push
push
cld
jo
add
test
imul
cmp
add
icebp
data16
mulb
push
add
push
xlat
es
push
out
lods
out
mov
dec
scas
ljmp
push
cmc
mov
sbb
shlb
pop
jnp
adc
and
data16
xchg
mov
stos
mov
sbb
adc
mov
cmpsb
ror
mov
data16
repz
add
mov
cli
int3
rolb
jecxz
call
out
add
add
outsl
cmp
lcall
add
mov
outsl
insl
mov
add
jnp
rolb
popf
cmp
xchg
mov
mov
cli
adc
add
mov
loop
add
call
mov
add
or
cmp
sbb
test
xor
mov
adc
or
and
mov
add
inc
add
add
jnp
add
pop
pop
jp
add
or
das
mov
dec
sbb
dec
cltd
movsb
jnp
adc
add
insl
loopne
roll
fnstcw
fdivrs
mulb
fldcw
add
loopne
xor
or
call
xchg
ljmp
jne
xchg
xchg
addl
pop
aam
repz
aaa
aaa
jle
ljmp
into
loop
add
mov
dec
mov
es
ret
add
mov
es
cmp
add
mov
cli
test
idiv
sub
jne
or
mov
wrmsr
mov
pop
in
std
dec
xchg
dec
nop
sub
hlt
leave
push
testl
sgdtl
ficoms
dec
fnsave
data16
xchg
fisubrl
add
mov
add
mov
flds
add
roll
jl
cmc
shlb
popf
lds
std
stos
jmp
add
idiv
and
mov
or
or
pop
inc
add
add
mov
xchg
push
sub
push
xchg
jl
sbb
jge
aad
js
add
push
les
mov
mov
rolb
dec
mov
add
aaa
jle
insl
or
lock
pop
loope
jb
cltd
mov
push
movsb
adc
jecxz
add
jg
dec
xchg
mov
add
add
pop
jmp
pusha
add
pop
mov
insb
mov
lea
movsl
cmpsl
jl
xor
add
aas
ffreep
add
ljmp
add
cmp
add
jge
loop
dec
or
add
add
mov
pop
sbb
sub
mov
add
push
sub
sarb
dec
pusha
add
add
mov
std
jge
in
lret
cmpsl
or
fdiv
lods
jecxz
sub
stos
adc
adc
add
jg
jp
sbb
sti
icebp
rolb
add
movl
mov
ljmp
ds
enter
jne
mov
xor
lods
inc
add
stos
jmp
add
mov
mov
jnp
dec
xchg
call
push
push
add
je
inc
add
cmp
mov
add
out
and
lea
movb
outsl
test
dec
pop
mov
out
bound
pop
daa
mov
and
xor
or
add
mov
daa
push
mov
cs
jl
loope
xchg
lahf
nop
pushf
adc
repz
sbb
mov
fcomip
bound
ret
push
out
mov
data16
pop
push
ficomps
dec
aas
inc
add
add
dec
add
cmp
push
or
lods
add
xor
cmp
push
cwtl
cmp
ret
ret
add
dec
mov
add
scas
std
sbb
movsb
sub
add
add
adc
lcall
adc
enter
add
bsf
out
pop
adc
cmp
adc
out
les
out
in
in
ljmp
add
data16
sub
sti
addb
pop
fldl
push
add
daa
xor
lods
scas
mov
ds
xchg
pop
add
add
mov
sub
push
add
movsl
rcrl
hlt
mov
inc
add
ret
insb
imul
mov
pop
call
addr16
aad
lea
out
pop
inc
add
clc
lock
xchg
lret
leave
xor
jge
hlt
adc
lret
aaa
lock
jecxz
mov
add
and
rcrl
add
ret
add
mov
add
add
std
je
push
cld
or
jecxz
into
lock
dec
scas
or
mov
dec
inc
add
ja
inc
add
es
sub
std
inc
add
sub
into
inc
add
in
mov
gs
jae
sbb
jo
xchg
xor
les
cli
inc
add
mul
pop
cli
push
add
xchg
dec
test
data16
mov
push
je
mov
and
pop
adc
das
outsb
hlt
lds
outsl
adc
addb
xchg
bound
add
sbb
add
pop
add
add
addb
push
mov
xchg
mov
cmpsb
push
add
add
xor
nop
mov
das
gs
das
or
nop
mov
lods
pop
ljmp
xchg
je
add
addb
or
jle
xor
jle
xchg
cld
fmuls
mov
les
push
daa
xchg
xlat
ret
dec
lahf
test
dec
daa
jecxz
fnstcw
and
addl
push
push
xchg
and
cs
add
sub
sub
rcrb
cmp
mov
push
inc
add
cmpsb
cwtl
add
add
mov
cmp
pop
je
sbb
out
jle
imul
add
adc
insb
or
add
ret
add
mov
sbb
pop
inc
add
add
cmp
mov
add
gs
cmpsl
rolb
add
sub
clc
ds
cmc
scas
cli
mov
sbb
cmp
push
add
jno
dec
cld
sbb
loop
sbb
std
sbb
les
xlat
enter
inc
add
lock
jae
push
mov
cwtl
lret
push
addl
dec
fiaddl
ficomps
add
cmpsb
dec
xchg
mov
pop
add
add
mov
jb
cmp
add
add
cmp
or
cmp
lahf
add
push
xor
adc
push
pusha
add
pop
lcall
push
cmp
add
inc
add
clc
outsb
adc
add
cmpsl
inc
add
nop
roll
es
or
mov
hlt
mov
inc
add
aam
das
and
sub
inc
add
pop
inc
add
inc
add
xor
repnz
test
fcoms
add
ljmp
add
insl
sub
ret
push
addl
add
mov
iret
lods
out
sbb
sbb
scas
jecxz
dec
test
xchg
xor
inc
add
and
aas
addl
mov
shlb
add
add
and
pop
add
outsl
and
call
cmpsb
addb
cltd
mov
addr16
fldcw
xchg
ret
add
leave
push
jge
jns
fsubr
les
pop
jns
je
bound
enter
jbe
mov
jbe
fimull
inc
add
add
add
xchg
or
add
inc
add
add
dec
mov
mov
aaa
adc
xor
add
inc
add
push
addb
cmp
stos
dec
adc
mov
filds
ficoms
roll
add
push
cmpsl
movsl
lret
movsl
idiv
and
jae
jne
fistpl
xchg
movsb
dec
or
pop
xor
push
stos
dec
push
push
pop
xchg
lret
pop
xor
mov
add
dec
cwtl
xlat
lret
xor
mov
add
addl
add
and
xchg
push
and
dec
mov
sahf
xchg
pop
cmp
or
lret
cmp
add
push
sbb
ret
add
arpl
mov
add
mov
movsl
fiadds
jo
add
ljmp
xchg
pop
in
push
fcoml
cmp
xor
add
cmpsb
enter
mov
pop
jns
aas
push
cmp
mov
add
stos
xchg
pop
xor
sbb
or
les
mov
sub
add
pop
pop
lods
addb
popf
cmp
movsl
adc
jge
add
insl
pop
jp
out
push
cmc
rcr
pop
add
std
and
add
imul
or
push
push
xor
add
icebp
rcrl
lea
adc
cmp
ret
add
pusha
add
daa
xchg
and
inc
add
nop
push
lcall
add
icebp
sub
aam
fnstenv
hlt
lcall
pop
mov
mull
xchg
lock
push
xor
dec
test
icebp
daa
dec
daa
mov
xchg
cmp
cs
add
cmp
push
pop
jecxz
inc
add
add
add
es
inc
add
push
mov
xchg
pop
nop
add
add
les
mov
mov
fcmovnbe
or
inc
add
pop
stos
cli
dec
mov
stos
frstor
pop
jo
add
lret
cmp
mov
mov
and
aad
rolb
add
xchg
ret
add
popa
add
add
pop
lea
imul
mov
popf
and
push
or
xchg
in
pop
inc
add
and
call
add
mov
xchg
jno
lret
cmc
repz
add
dec
mov
mov
mov
add
data16
adc
pop
into
into
cs
int3
push
rclb
add
mov
add
hlt
test
inc
add
and
divl
add
mov
add
and
jns
push
inc
add
std
sub
add
push
faddp
add
xlat
cmp
dec
sub
cmp
dec
rolb
dec
sbb
dec
xor
add
mov
cmpsl
dec
mov
dec
inc
add
add
add
mov
pop
mov
jmp
cmp
mov
add
pop
or
fistl
add
inc
add
cmpsb
loop
lods
addb
cmp
sub
cld
sub
stos
ljmp
jae
adc
push
add
aaa
sbb
push
jmp
push
add
pop
push
xchg
push
into
add
out
les
or
inc
add
add
inc
add
xchg
in
add
loope
add
lret
fisubrs
xor
cmc
scas
hlt
sti
aaa
pop
jg
shll
add
sbb
int
sub
inc
add
aam
add
int
fisubrs
and
xchg
adc
add
adc
lods
filds
add
int
xlat
aaa
stc
dec
pop
add
mov
push
into
fstl
push
mov
lods
pop
adc
mov
or
mov
add
mov
ds
push
sub
test
mov
xor
cmp
out
je
sub
mov
scas
unpcklps
add
roll
push
data16
cmc
aaa
adc
pop
or
dec
xor
add
pushf
sub
jne
das
in
ss
mov
dec
adc
test
negb
or
cli
push
mov
lret
mov
fidivrl
cld
movsl
mov
or
and
aam
pop
add
xchg
lods
push
jl
xchg
stos
daa
xchg
decb
add
imul
push
cmp
fucomip
dec
xor
adc
lds
sub
in
inc
add
movsl
pop
add
hlt
hlt
xor
inc
add
add
push
adc
aaa
sbb
inc
add
sub
add
ja
add
ja
sub
mov
xchg
scas
pop
dec
inc
add
inc
add
out
and
loopne
in
sbb
daa
ret
add
add
add
xchg
popf
mov
enter
jmp
add
xor
add
adc
aas
mov
mov
push
add
and
jbe
mov
movb
hlt
hlt
mov
lods
push
dec
sbb
sub
fistps
addl
add
test
mov
in
sbb
add
rcrb
xchg
sbb
sbb
mov
jg
add
add
mov
dec
aaa
jno
sbb
pop
push
xchg
stc
mov
xchg
or
ja
loop
lods
aam
outsb
mov
mov
aas
fdivrs
fcoms
add
xor
hlt
jns
push
insb
xchg
mov
addb
add
add
jge
add
addb
add
add
jmp
adc
sbb
fwait
xchg
xchg
cmp
cmp
add
add
add
popf
inc
add
std
dec
test
in
add
movl
insb
fldenv
add
scas
popa
add
add
loope
mov
jbe
add
ret
sub
inc
add
add
rolb
mov
fsubp
mov
lds
popf
roll
xchg
xor
pand
repnz
mov
and
stos
add
sbb
hlt
mov
add
gs
add
mov
int
loop
dec
add
bound
mov
sahf
fs
xchg
xchg
push
mov
jb
adc
cld
call
lock
add
clc
fisttpll
and
mov
jno
add
xchg
cmp
push
scas
inc
add
leave
imul
dec
push
dec
sbb
cmp
jecxz
mov
adc
test
outsl
fdivs
cmpsb
int
add
imul
cld
add
rolb
add
fldl
jnp
or
jg
sub
fsubrs
in
loop
xlat
nop
push
xchg
jno
jo
cld
and
add
mov
bound
nop
je
lret
idivl
repz
inc
add
xor
jmp
add
jecxz
sbb
mov
add
pop
xor
add
aam
inc
add
add
adc
outsl
sahf
les
sub
add
fucomp
dec
insb
push
sahf
lret
add
outsb
mov
inc
add
daa
add
inc
add
jno
arpl
jp
add
aaa
pusha
add
test
das
inc
add
popf
movl
lods
cmc
pop
xor
xchg
and
mov
dec
jecxz
and
jnp
jns
ret
cmpsb
dec
pop
mov
in
pop
lock
movb
rolb
les
cwtl
out
addb
popf
and
mov
add
mov
push
mov
scas
xchg
cltd
je
add
add
addl
loopne
mov
add
aaa
inc
add
add
mov
xchg
sub
pop
bound
pop
imul
mov
sub
lds
out
inc
add
mov
repz
scas
aaa
cld
pop
shl
pop
add
xlat
sub
je
movb
popf
dec
stos
adc
les
xchg
rcll
push
or
scas
hlt
enter
addl
jle
adc
stos
sbb
sbb
xchg
clc
cmp
addb
mov
pushf
mov
addb
push
loop
add
add
stos
or
stc
push
adc
push
dec
inc
add
add
cmp
mov
add
pop
lds
cmp
mov
fildl
or
sub
jle
inc
add
dec
jo
loop
roll
sub
icebp
mov
xchg
adc
sub
add
adc
ret
lock
dec
pop
mov
xlat
sub
pop
add
inc
add
sub
call
sbb
rolb
cmp
dec
iret
ljmp
add
negl
add
pop
pop
dec
xor
add
adc
ljmp
cli
out
mov
inc
add
test
stos
fnstsw
add
enter
adc
push
test
and
mov
test
sub
fdivp
inc
add
call
xlat
xchg
je
pusha
add
aaa
cmp
mov
inc
add
fcmovbe
movl
sbb
cwtl
test
add
sbb
out
add
std
sar
addb
xlat
jl
movsl
pop
add
sarb
mov
push
lea
mov
pop
jg
or
add
lock
and
sbb
add
add
mov
sub
loope
jg
test
mov
clc
out
popa
add
add
add
cmc
mov
xor
lods
jns
add
addl
pop
jno
gs
jae
rcrl
lds
aas
or
xor
fwait
ja
mov
add
arpl
mov
sub
xor
test
dec
insb
movl
in
gs
push
addb
xchg
and
mov
movsb
xor
clc
out
pop
stos
xchg
add
aam
imull
mov
addb
fdiv
dec
mov
scas
out
xchg
in
add
imull
insl
stc
leave
push
imul
add
outsb
loope
rcl
sarl
shll
push
xchg
test
push
mov
dec
in
rolb
inc
add
add
pop
push
add
or
or
les
out
fwait
adc
push
fwait
int
sbb
mov
icebp
push
pop
rolb
cmpsb
out
pop
mov
dec
or
add
mov
mov
cmp
and
pushf
out
cmp
adc
jecxz
mov
mov
or
sbb
mov
or
sahf
pop
jbe
or
jle
mov
nop
gs
xlat
xor
push
add
push
add
adc
ljmp
lret
pop
ja
inc
add
dec
add
outsb
shr
sub
lea
jmp
jne
cmc
scas
ljmp
mov
jp
and
dec
pop
lock
mov
mov
mov
fnsave
aaa
sbb
mov
ds
je
lahf
addb
sbb
pop
add
outsb
loope
addl
lods
adc
sbb
fcoml
mov
add
insb
aas
cmp
icebp
dec
daa
jp
pop
xchg
sub
mov
addb
loope
or
std
sbb
jo
test
cli
lds
stos
xor
or
sub
jne
inc
add
inc
add
add
inc
add
int
add
add
lock
add
mov
mov
adc
and
movsb
dec
mov
arpl
adc
idiv
enter
fimuls
enter
add
inc
add
sub
insb
jns
push
or
inc
add
lea
mov
inc
add
cmpsb
jle
cld
les
loop
add
pop
mov
sbb
or
add
addb
cltd
push
xchg
push
adc
pusha
add
cmp
les
loop
into
jo
mov
add
inc
add
popa
add
icebp
cs
xchg
js
addl
add
mov
std
sub
sbb
push
dec
gs
push
cmc
sbb
popa
add
pop
pusha
add
add
dec
jno
popa
add
pop
push
cmp
scas
jg
sbb
add
jmp
stc
cmp
in
add
add
add
add
ret
add
push
mov
pop
and
frndint
push
stc
or
add
or
sub
mov
int3
insb
push
or
frstor
add
scas
sub
sahf
jnp
sub
fcomps
sahf
pop
mov
push
add
add
hlt
push
repz
popf
xchg
leave
mov
out
mov
cmc
dec
test
ds
or
mov
or
pop
and
out
jl
add
lret
adc
out
in
imul
mov
push
jl
push
test
std
bt
fs
stc
jo
add
dec
testl
jmp
shr
arpl
and
inc
add
mov
fsubrs
in
mov
movl
std
insl
jg
push
out
pop
cmp
stos
add
xor
mov
add
add
insl
ljmp
imul
add
add
xchg
test
cli
test
inc
add
and
adc
outsl
idivb
lcall
or
pop
pop
add
or
add
xchg
mov
push
mov
iret
add
sbb
test
imul
mov
add
add
xor
add
push
sbb
mov
xor
pushf
jge
enter
xor
xor
inc
add
pop
aad
xor
loopne
clc
ja,pt
pop
lods
mov
je
addb
dec
dec
xchg
adc
daa
push
ret
add
jb
jbe
sub
into
cs
enter
lods
xor
ret
add
xor
add
mov
add
pop
sbb
add
sub
js
mov
outsb
cld
das
scas
sub
pop
cmp
insl
je
add
std
adc
sbb
lock
push
int3
test
add
xlat
dec
ljmp
cmp
add
and
inc
add
flds
mov
inc
add
sbb
adc
add
cmp
xchg
not
repnz
mov
cmpsl
in
hlt
loopne
mov
xchg
cmp
fldt
mulb
decb
or
add
cmc
jle
movl
std
inc
add
js
jp
add
es
stos
roll
xchg
pushf
pop
stos
mov
idivl
mov
cmp
jne
test
addl
dec
dec
xchg
mov
rolb
repz
push
dec
mov
decl
jo,pn
int
mov
stos
jae
addr16
add
mov
mov
test
fwait
mov
add
add
lds
sbb
lret
in
sti
bound
add
xchg
testb
fs
mov
mov
cmp
cltd
sarb
ret
icebp
mov
fwait
std
imul
mov
add
shll
jo
push
outsl
mov
xchg
popf
inc
add
jno
cmpsl
movb
pushf
push
inc
add
mov
out
xchg
mov
fdivrs
and
pop
xchg
addb
mov
and
daa
pop
push
aaa
andnps
mov
add
fs
shll
repz
hlt
into
daa
jnp
sub
ret
add
add
sub
mov
imul
xchg
fimuls
push
mov
push
mov
jl
or
loop
shlb
int3
cmp
rep
les
in
add
popf
popf
xor
add
add
add
add
iret
push
add
jmp
daa
out
add
aaa
adc
sub
add
add
sub
imul
cmp
and
xchg
test
jo
ficoml
xor
adc
add
sbb
pop
jge
xchg
fcmovu
pop
divl
push
enter
mov
pop
fbstp
adc
js
push
add
xlat
les
adc
pop
fcoml
test
lahf
call
les
xchg
jmp
add
stc
aam
pop
inc
add
add
movb
cs
jg
add
popa
add
stos
bound
out
dec
mov
sahf
adc
and
xchg
dec
xor
add
aam
sbb
ret
add
mov
movsb
fstpt
sub
xor
scas
repz
pop
and
js
movb
outsl
dec
roll
pop
add
add
aaa
cmp
movl
test
ret
add
jns
mov
adc
das
addb
jmp
xor
mov
xchg
mov
add
rolb
and
add
gs
inc
add
add
inc
add
nop
lret
pop
xor
and
mov
dec
out
lea
dec
and
xchg
add
mov
pop
addb
rolb
arpl
sbb
sbb
and
pusha
add
aad
add
outsl
push
add
mov
xchg
addb
arpl
test
aad
add
into
pop
mov
dec
outsb
addl
sahf
movsl
roll
out
or
jp
and
imul
popl
stos
aam
lds
inc
add
add
imull
xchg
clc
es
inc
add
rolb
inc
add
call
lea
or
mov
xor
inc
add
and
mov
pop
mov
or
mov
xor
leave
fxch
outsb
out
push
add
daa
int
add
push
cltd
rolb
pop
je
add
pop
loop
cmp
inc
add
out
inc
add
add
dec
mov
cmp
sbb
mov
jnp
jno
cmpsb
xor
sbb
movsb
sbb
or
sbb
add
mov
pop
pop
add
or
jne
pop
pop
jae
sbb
addl
or
or
sti
inc
add
add
jno
add
adc
mov
add
jae
loopne
mov
sbb
nop
out
addl
add
shlb
stos
sahf
jp
sub
add
lcall
dec
jg
inc
add
aas
xchg
mov
or
faddl
lods
xor
mov
gs
sub
mov
aad
push
add
nop
mov
inc
add
mov
add
pop
dec
jns
test
mov
mov
add
mov
add
inc
add
das
pop
xor
sub
ret
add
sub
popf
mov
mov
mov
add
xor
jle
sbb
cwtl
sar
xor
arpl
dec
addb
leave
rolb
jae
jmp
add
stc
push
scas
jne
cld
dec
mov
rolb
or
jge
pop
pop
pop
push
add
mov
out
test
xor
pop
push
in
clc
mov
dec
int
and
add
inc
add
jle
mov
mov
adc
decl
ret
add
ficoml
in
inc
add
fldenv
inc
add
cmpsl
clc
rclb
xlat
loopne
xchg
pushf
mov
dec
jb
lods
pop
shl
dec
pop
jmp
test
shr
addb
add
add
dec
xchg
icebp
fisubl
add
nop
int
add
jnp
add
movb
jns
lods
inc
add
mov
add
cmp
lcall
sub
pop
push
cmp
push
int
add
xchg
pop
imul
std
lds
and
sbb
add
lods
mov
mov
cmp
mov
enter
mov
jl
in
mov
into
dec
fildl
xchg
ss
sahf
adc
fcompl
shlb
add
fdivl
adc
push
pop
mov
stos
scas
xchg
add
fnstcw
push
sahf
std
cmp
add
sahf
add
in
cmp
outsb
mov
add
mov
add
mov
add
mov
add
cmpsb
insl
ret
xor
cmp
dec
lock
sahf
pushf
cmp
das
and
mov
fldcw
add
mov
inc
add
add
pop
mov
enter
pop
mov
add
iret
jnp
out
sub
mov
lock
jne
adc
xor
add
sub
xor
add
pop
add
add
rolb
sub
add
add
add
push
add
add
mov
xlat
and
fisubrs
sahf
inc
add
sub
lcall
in
or
sub
roll
jp
cli
mov
imul
xor
adc
add
in
mov
add
test
lahf
push
movsb
mov
xchg
xchg
pop
rclb
pop
mov
cmp
push
test
jl
or
jmp
jge
fstpl
xchg
mov
lahf
fsubl
test
jmp
daa
xchg
call
mov
fwait
jns
fsts
mov
jo
add
imul
mov
loopne
jo
lret
rcrl
mov
mov
cmp
add
adc
fisubrs
repnz
add
movb
cs
jmp
rcr
xchg
add
mov
fldt
mov
fidivs
mov
add
add
addps
lea
xor
insl
leave
dec
and
inc
add
inc
add
add
fcoms
in
push
lock
ret
adc
inc
add
icebp
cld
pop
mov
rolb
pushf
sbb
pop
add
popf
lret
add
and
xchg
iret
inc
add
add
fldcw
and
out
add
repz
add
and
jo
add
and
in
divl
out
add
lds
stc
cltd
loop
sti
in
cld
mov
test
ret
js
rolb
mov
add
cmp
add
and
repz
jge
mov
pop
xchg
hlt
xlat
push
add
sub
cwtl
std
mov
add
js
mov
dec
ret
add
sub
imul
dec
or
popf
sahf
jbe
adc
lret
addb
add
jno
fisubrs
push
mov
add
cld
sti
add
mov
push
je
lds
lret
inc
add
movsb
push
push
sub
add
fs
inc
add
bound
xor
mov
dec
ds
mov
test
lods
ss
pop
cli
loop
push
add
pop
pushl
aad
movsb
pushl
and
addb
mov
stos
in
lret
divb
adc
fistl
jmp
in
mov
add
sbb
outsb
daa
das
fsubrl
imul
add
stc
pop
xchg
leave
mov
inc
add
cmp
outsb
adc
sub
lods
inc
add
add
cmp
mov
or
sub
lea
add
xchg
ss
mov
clc
into
xchg
hlt
dec
out
insl
out
imul
mov
or
xchg
adc
jp
out
stos
push
or
jno
push
sbb
cld
fsubrl
add
cwtl
fnsave
lods
pop
add
cld
aas
ljmp
add
daa
in
jae
pushf
stos
lods
stos
fisttpll
dec
push
add
add
mov
in
add
add
push
add
xor
jecxz
repnz
lahf
ds
pop
popa
add
ljmp
cmc
sbb
mov
aas
fs
add
enter
insl
ljmp
fdivp
test
dec
dec
inc
add
addl
popl
add
lods
add
into
inc
add
add
xchg
ret
add
pushl
rol
add
cmp
hlt
push
enter
repz
addb
or
sbb
stos
push
js
xor
adc
or
sub
pop
insl
addl
add
icebp
adc
movb
xchg
gs
mov
mov
jnp
jle
sbb
push
jmp
outsb
lret
adc
addb
das
sbb
add
add
push
xor
fnsave
pop
mov
js
mov
jge
push
mov
cltd
addb
add
add
test
add
mov
mov
stos
xor
add
jns
int3
push
sbb
add
test
test
dec
repnz
sarl
fdivr
pusha
add
xor
add
push
test
sbb
push
add
clc
jl
add
mov
mov
jo
add
dec
mov
and
adc
mov
mov
pop
std
mov
into
fisttps
and
sub
mov
sbb
mov
jge
xchg
xor
mov
pusha
add
addl
xchg
cltd
jo
add
xchg
fdiv
int3
pop
jl
lret
inc
add
add
add
mov
inc
add
inc
add
mov
fstps
sbb
or
add
jge
add
and
jns
addl
sbb
and
sub
or
xchg
jecxz
add
push
xor
xor
divb
outsl
jnp
aam
add
jecxz
lret
int
sahf
sbb
cld
or
cmp
sub
mov
add
mul
jmp
xchg
sub
xor
xchg
icebp
cltd
test
outsb
and
add
insl
jb
and
pop
dec
addl
push
insb
cmc
insb
cld
push
aam
rolb
add
imul
add
add
dec
mov
push
scas
insb
filds
add
lret
xlat
aas
inc
add
sbb
jne
jge
push
repnz
loopne
aam
xadd
mov
add
int3
fsubrs
and
imul
test
add
cwtl
lds
mov
pop
enter
clc
and
fcompl
add
in
addl
jno
add
cmpsb
mov
fst
fnsave
add
sbb
sbb
add
lret
inc
add
xchg
and
popa
add
add
add
jns
xor
cmp
dec
sbb
add
mov
jae
enter
xor
add
add
mov
movb
pop
and
push
dec
inc
add
lock
mov
xchg
mov
dec
sti
hlt
or
push
add
mov
std
dec
cld
pop
add
aas
insl
add
loope
add
jp
and
sub
add
pushf
int
push
fs
cmpsb
inc
add
loopne
add
out
mov
aam
add
add
js
in
ljmp
add
fisttpll
addb
lods
fdivrl
sub
add
les
loope
fcoml
mov
jmp
add
hlt
negl
in
add
add
stc
pop
adc
loope
jno
add
movsl
jne
or
add
lret
mov
add
sub
xchg
inc
add
and
push
rolb
loopne
pop
add
add
cmp
mov
mov
sbb
cltd
lahf
mov
inc
add
add
lea
pop
jmp
pop
sub
xchg
inc
add
out
in
dec
mov
out
scas
lret
dec
movswl
rclb
xchg
mov
movl
cmpsl
inc
add
nop
outsb
push
sahf
mov
push
lods
push
add
sub
mov
add
xor
popf
insl
ret
add
push
lock
adc
pushf
fnstcw
aad
add
jnp
addr16
icebp
push
dec
je
add
fs
movl
adc
fucomp
sub
lret
std
and
jns
push
cli
add
jmp
xchg
xor
ficoml
insb
out
aam
cmpsb
cli
pop
mov
add
negl
mov
push
jecxz
and
int
shl
lcall
push
aas
cmp
sbb
dec
leave
push
add
sub
cmpsl
or
outsl
or
jnp
leave
cmpsl
lret
jl
jb
xchg
iret
and
js
add
les
jecxz
add
scas
add
xor
sub
test
in
test
or
push
sub
ljmp
cmpsl
mov
xor
ljmp
add
mov
cmpsb
cmp
push
lret
push
cmp
addb
loope
mov
test
ljmp
adc
movb
add
rolb
push
and
xchg
lcall
add
add
xrelease
mov
movb
add
fwait
lods
shll
add
jp
mov
cmp
dec
jp
ror
sub
js
sarl
movsb
aaa
jne
add
or
nop
xchg
shlb
sahf
push
ljmp
aam
adc
pop
loop
dec
cmpsb
push
aaa
cmp
add
ja
xor
and
fsubl
cld
nop
xor
push
fnstsw
or
dec
and
mov
add
sar
aad
or
xor
loope
dec
xor
cli
mov
movb
mov
in
and
add
push
sbb
mov
and
movb
mov
into
fimull
lea
das
xchg
cwtl
cltd
sub
inc
add
adc
adc
lret
ss
ss
jp
add
sub
or
xchg
rcr
add
pop
lea
repnz
push
add
add
cli
and
pop
add
xor
and
mov
movl
and
roll
iret
sti
lahf
xchg
dec
pushf
call
in
cld
enter
jmp
sbb
mov
sti
pop
xchg
add
pushf
das
sahf
or
aam
mov
add
addb
add
dec
outsl
jb
add
imul
push
cmp
jnp
mov
push
repnz
push
cmpsb
aam
dec
in
stc
addb
add
add
stos
xchg
roll
add
test
in
lret
and
add
aaa
js
fistpl
lahf
in
jl
mov
movsl
ret
add
loop
aad
add
rolb
aas
repz
sbb
jl
loop
mov
addr16
out
leave
loopne
sub
add
jmp
adc
mov
mov
das
jmp
and
mov
fcmovbe
jbe
xchg
aaa
xchg
dec
test
lcall
mov
lret
das
xchg
inc
add
xchg
or
add
mov
inc
add
mov
mov
rorl
xchg
fbld
test
add
xchg
sbb
push
pushf
dec
mov
mov
lcall
dec
jbe
lods
addb
pop
xchg
jbe
sbb
inc
add
xchg
bound
xchg
addb
jmp
pop
fsubs
add
sbb
dec
push
inc
add
sbb
fcmovne
fs
and
jmp
cmp
cltd
fdivrs
les
cmp
int
jae
insb
pushf
fwait
push
repnz
negb
mov
jno
dec
inc
add
mov
mov
dec
xchg
or
stos
cmp
add
stos
mov
jae
in
lods
cwtl
imul
adc
xor
jl
pop
and
add
fimuls
xchg
pop
filds
push
incb
movl
add
sbb
dec
mov
mov
call
mov
cmpsl
in
loop
repz
clc
aam
add
arpl
popa
add
hlt
mov
add
clc
test
push
sub
ficoms
pop
jg
jmp
jae
add
roll
in
scas
mov
call
and
aas
pop
xor
stos
in
dec
add
call
xchg
xlat
xlat
jo
inc
add
or
je
fstpt
add
cmp
add
lcall
in
or
daa
int3
push
push
jne
lcall
das
jmp
push
and
mov
sbb
fwait
xchg
in
inc
add
add
sub
mov
inc
add
add
adc
arpl
mov
lock
xchg
lds
lods
and
daa
enter
nop
pop
jle
add
push
fcompl
inc
add
mov
jbe
adc
cs
dec
dec
hlt
or
shlb
jno
cwtl
mov
jecxz
or
addb
push
xlat
test
fisubrs
jo
dec
dec
out
fldcw
jmp
adc
mov
movl
nop
dec
and
rclb
inc
add
ljmp
lcall
inc
add
add
jl
mulb
loopne
shlb
add
inc
add
add
push
pop
lret
add
popa
add
sub
push
add
sbb
pop
roll
sub
scas
xchg
sub
loopne
sbb
nop
lret
rorl
mov
outsl
jb
cmp
jnp
and
cmp
cltd
pop
cmp
popa
add
or
add
cmpsl
jno
push
add
bound
fcoml
fs
add
add
js
cmpsl
dec
outsl
mov
add
and
jb
cwtl
or
cli
repz
add
adc
add
cmp
outsb
and
mov
cmp
int3
daa
and
cmpsb
adc
xchg
addb
push
mov
push
ljmp
add
dec
test
cmpsl
test
aam
outsb
insl
cmc
ds
adc
cmpsl
int
cli
push
fwait
rcrl
lods
push
push
pop
ret
add
stos
out
dec
pop
xchg
inc
add
dec
xlat
push
int3
addl
roll
dec
pop
add
or
iret
cltd
push
mov
rsm
testl
add
ljmp
push
add
or
jae
movl
sub
pop
ljmp
push
pop
jno
add
mov
jno
psllw
call
mov
fucomp
cs
pushf
leave
das
gs
rcrl
add
mov
cltd
inc
add
mov
add
add
jbe
sbb
cmpsl
insl
cmp
add
add
addl
mov
add
inc
add
push
jo
loop
add
sbb
xor
in
cmp
add
test
add
sbb
adc
dec
or
add
lods
outsl
xchg
mov
repnz
cmp
pop
jecxz
in
movb
add
push
or
lahf
push
pop
lcall
and
dec
cld
mov
cli
cmp
add
lods
fsub
and
inc
add
dec
jl
cmp
xor
sub
sbb
leave
dec
jnp
add
sub
mov
pop
in
loope
add
filds
inc
add
add
mov
jl
mov
add
gs
add
inc
add
adc
cmpsb
gs
mov
add
jg
sbb
aad
stos
sbb
add
or
rol
add
cmpsl
sar
mov
add
dec
lret
aam
fdiv
out
add
loopne
add
add
add
or
pop
add
add
or
lcall
fists
arpl
in
sahf
cmpsl
negb
outsb
std
push
push
jne
mov
add
add
xchg
push
mov
add
adc
pop
pop
test
fidivl
fstps
add
pop
test
jbe
add
add
jbe
mov
aaa
sbb
inc
add
pop
dec
xor
add
cmc
je
xchg
mov
add
jno
es
mull
sbb
outsb
pusha
add
dec
fsubs
jl
mov
push
scas
push
cmpsb
lds
outsb
push
sbb
sub
repz
push
pop
dec
push
loop
inc
add
add
rorl
xlat
xlat
jl
mov
cmc
ret
ds
push
les
lods
jl
cli
or
jg
add
out
je
movsb
jb
push
adc
testb
testb
add
mov
iret
imul
cmpsb
jo
adc
push
dec
adc
inc
add
js
xor
outsb
lds
sbb
outsl
fs
pushf
popf
shll
add
cs
cmp
mov
sub
out
pop
scas
addb
fnstcw
add
movsb
xor
xchg
je
add
lcall
addl
pop
cmc
cmp
das
fisttps
xor
repnz
mov
inc
add
popa
add
or
adc
sub
gs
push
jl
movl
test
add
dec
push
jbe
pop
xchg
frstpm(287
sti
lret
mov
jg
adc
std
enter
jns
sbb
inc
add
iret
addb
addl
jbe
add
cmp
movsl
std
ret
sahf
jmp
popf
mov
mov
add
lods
sub
fidivrl
xchg
and
icebp
mov
or
inc
add
mov
pushl
popf
mov
xor
addl
add
push
xor
mov
cli
jo
inc
add
mov
je
sti
sub
sbb
jle
add
pop
xchg
mov
or
lock
enter
jns
popl
lods
ljmp
add
js
or
gs
jl
add
stos
mov
and
adc
fiadds
add
mov
mov
push
pop
mov
insl
dec
test
push
hlt
addl
mov
sbb
fcompl
repz
std
sti
fstps
dec
mov
xchg
xchg
roll
nop
decl
mov
nop
lcall
cmp
add
call
push
clc
mov
add
mov
lcall
enter
sbb
inc
add
out
or
inc
add
inc
add
fcmovnu
sbb
js
fldcw
jns,pn
add
add
popf
sbb
ret
add
mov
hlt
int3
cmpsl
js
add
mov
inc
add
add
in
movsl
addl
add
into
aas
xchg
mov
add
add
outsb
push
add
ja
dec
xchg
jns
adc
stc
push
add
jb
add
xlat
cld
addr16
movsl
sub
fildl
add
les
adc
cmpsl
add
cmp
fsub
or
fsubl
pop
aaa
popa
add
jno
xor
sbb
mov
add
mov
sbb
mov
call
pop
pop
aad
imul
pusha
add
add
into
xchg
and
movb
adc
shrb
addl
imul
mov
rolb
xchg
jl
loopw
ljmp
cmc
test
add
addl
ljmp
xchg
out
mov
pop
xor
int
fisubrl
add
ds
fmuls
pop
dec
int3
push
cmpsb
xor
lock
xchg
inc
add
add
sub
add
sbb
dec
divb
out
nop
popf
lahf
or
mov
call
adc
dec
jge
lret
movsb
cmpsb
hlt
mov
sbb
add
shl
fdivrp
jl
dec
out
push
inc
add
fldenv
out
fdivs
test
and
call
add
jo
mov
stos
lock
call
add
lret
filds
sbb
ss
call
pop
inc
add
outsb
test
push
add
and
adc
add
push
fisttpll
hlt
add
sbb
xchg
sbb
in
jle
or
aas
mov
ds
or
xor
fdivl
add
pop
push
add
cmp
inc
add
or
sub
incl
addl
add
jle
mov
add
mov
add
lcall
sub
popl
mov
adc
inc
add
add
jl
mov
movb
push
cltd
mov
in
enter
lret
add
add
sub
add
pushf
add
mov
adc
ret
add
xchg
lret
lds
outsl
or
adc
addl
jae
and
adc
into
fwait
aaa
push
aad
cmpsl
dec
mov
mov
add
fisttpll
test
lret
hlt
pusha
add
call
pushf
mov
insl
sbb
add
sbb
cltd
mov
cmp
add
xor
xchg
int
adc
leave
lcall
adc
add
or
cs
add
jnp
mov
xchg
movsl
test
sbb
mov
mov
sbb
mov
cli
sbb
push
stos
sbb
das
mov
adc
ja
xchg
push
in
and
daa
jmp
addl
jl
cwtl
int3
mov
inc
add
add
jne
pop
cltd
cwtl
loop
dec
loop
or
daa
pop
mov
inc
add
xchg
hlt
pop
call
xchg
dec
pop
push
cwtl
jno
pop
shlb
add
mov
jb
xchg
mov
sbb
xor
inc
add
jne
mov
add
add
inc
add
adc
je
testl
jecxz
inc
add
mov
mov
pop
loopne
sub
test
adc
jp
xchg
cmc
mov
cmp
popa
add
sbb
roll
lcall
les
je
movsl
push
mov
xor
mov
add
movsb
insl
repz
add
sub
add
jns
jp
push
enter
insb
jge
fldl
test
imul
pop
add
sbb
xlat
pop
addl
scas
test
ja
add
roll
outsb
inc
add
ret
add
push
out
stos
xchg
loop
mov
sub
call
lock
xor
push
mov
lcall
xor
rcrb
sbb
stos
cs
pop
mov
cli
jae
pop
add
movb
iret
dec
mov
pop
push
add
addl
and
mov
and
mov
hlt
inc
add
mov
xchg
pop
fmuls
sub
add
mov
add
js
cmpsl
cs
jecxz
insl
adc
add
lret
pop
ljmp
insb
inc
add
pop
xchg
inc
add
aad
sbb
and
pusha
add
inc
add
mov
jne
push
std
lahf
cmp
adc
lods
mov
jge
add
jno
jl
push
add
add
ds
mov
mov
add
add
cltd
pop
jbe
mov
adc
aad
push
push
cmp
xchg
jle
lock
aam
mov
outsl
jge
jmp
add
add
inc
add
dec
fwait
mov
into
inc
add
bound
sub
xchg
push
movsb
jns
pop
xor
pusha
add
and
xchg
call
ja
cmp
jno
xchg
xchg
aad
lock
jno
dec
pop
cli
loopne
xor
roll
add
shlb
push
jmp
sub
cmp
mov
sbb
fisubrl
sub
dec
xchg
sbb
roll
adc
xor
aad
xchg
or
add
add
add
push
cmp
push
cmp
fistl
mov
pop
outsb
dec
imul
and
mov
xor
xchg
xor
or
pop
outsb
or
mov
mov
add
out
lds
repnz
pop
push
mov
add
ss
icebp
stos
mov
jecxz
adc
dec
pop
add
mov
add
mov
add
mov
push
xchg
imul
inc
add
jl
or
and
xor
add
in
and
push
cli
or
mov
add
mov
fstpt
lds
and
jns
addb
ret
add
xchg
addb
inc
add
adc
add
addl
gs
push
push
sbb
stos
mov
jo
mov
add
or
xor
push
sub
push
lds
xlat
addl
add
out
iret
mov
lcall
fldt
push
cli
cwtl
addl
push
hlt
mov
jmp
enter
cmp
sub
add
fildll
mov
xchg
scas
rorl
pop
add
rolb
dec
cmp
add
and
and
mov
in
aas
mov
and
dec
addb
lods
mov
inc
add
inc
add
add
stos
aaa
pop
fwait
bnd
mov
mov
cmpsl
and
pusha
add
cmp
fidivrs
jno
lds
testl
jbe
hlt
icebp
mov
stc
or
sahf
enter
dec
or
inc
add
cmp
mov
insl
xchg
in
test
fcomi
test
addl
add
loope
dec
dec
insb
out
mov
add
aas
fwait
mov
rcrb
add
fisubrl
sub
or
jne
js
add
pop
add
mov
incb
mov
adc
adc
add
arpl
popf
xor
in
sti
xor
jae
inc
add
les
scas
daa
sbb
inc
add
cmp
add
and
jbe
and
outsl
popf
push
lea
scas
xchg
movl
sub
and
mov
inc
add
add
add
mov
jno
xchg
pop
mov
add
mov
lcall
loope
mov
jg
jae
xor
pop
add
jg
xor
jge
sub
lret
jno
and
push
add
add
pop
mov
repnz
fcmove
push
push
jge
add
push
dec
mov
push
add
insb
ja
sub
jmp
mov
or
xchg
mov
cwtl
mov
add
lea
movsl
sbb
mov
adc
mov
add
pop
ljmp
fwait
insl
aaa
std
sub
mov
iret
stc
cmp
lcall
inc
add
add
scas
jb
out
pop
and
movb
inc
add
lret
daa
sahf
dec
scas
stos
scas
add
adc
sub
cmc
shl
jmp
sub
pop
int3
repz
sbb
cld
mov
in
in
adc
adc
dec
sbb
aas
sub
pop
aad
pop
lcall
mov
or
movsl
sbb
add
insl
xchg
incb
add
cs
add
jp
xchg
push
lods
cmp
int
sbb
nop
cmp
inc
add
cvttps2pi
dec
pop
mov
pop
clc
adc
and
mov
fsubp
jbe
push
add
mov
and
jge
pushf
pop
imul
jae
addl
add
nop
out
stos
adc
popf
adc
roll
jmp
bound
xchg
es
lret
xchg
jns
xchg
sbb
mov
insl
or
add
add
add
scas
xchg
lock
mov
insb
roll
push
mov
pop
popf
add
stc
addl
add
xchg
jns
jmp
xchg
add
cmc
xlat
jo
fisttps
or
pop
add
jg
xchg
lret
popa
add
or
cmp
fimull
inc
add
mov
pop
adc
adc
add
rcll
mov
jns
inc
add
lea
out
ss
sub
or
add
or
lea
xchg
insl
dec
push
ret
add
pop
addb
aaa
inc
add
sub
push
mov
sub
add
repnz
pop
movsl
sbb
and
cld
outsb
enter
fdivrp
sbb
lds
mov
add
and
add
add
sub
add
add
sbb
int
mov
ds
cmp
cs
jecxz
jle
ljmp
mov
lods
or
in
add
add
roll
or
pop
roll
lds
adc
push
sbb
scas
pop
lods
popf
xor
pop
push
mov
add
jo
dec
fimull
insb
lods
sbb
repnz
cmp
inc
add
movb
jne
jne
cwtl
xlat
cmp
mov
leave
sub
pop
sbb
inc
add
inc
add
out
jae
movsb
sahf
mov
xchg
bound
pop
add
xchg
aad
add
movl
bound
push
into
ss
ja
nop
jno
in
movsl
dec
sub
xchg
jno
lahf
lahf
shlb
jp
xchg
push
sbb
pop
sbb
testb
popf
jg
mov
xchg
sub
dec
and
adc
jae
mov
fcomip
mov
decl
jp
aad
out
lods
arpl
mov
add
and
lods
push
sub
aam
adc
mov
stos
cmp
stos
cmpsb
fistpll
repnz
cmp
add
mov
leave
cltd
shll
dec
test
sbb
rorb
push
push
out
cmpsb
lahf
push
movl
daa
sarl
and
sbb
aaa
cwtl
les
or
lret
call
mov
cmp
aad
clc
loopew
ret
add
fprem1
test
lret
ja
add
insl
xchg
cli
cmp
dec
addb
mov
int
mov
pop
add
add
insb
sbb
pop
mov
out
jbe
and
mov
jg
lret
xchg
jo
mov
add
repnz
add
inc
add
test
nop
test
adc
add
add
stc
add
movb
xor
xchg
outsl
mov
mov
and
pop
stos
adc
test
imul
popa
add
mov
shl
frstor
cmp
add
aas
addl
add
mov
mov
or
movb
push
sub
jp
daa
add
xor
aad
add
add
xchg
loop
sub
ret
mov
dec
fbstp
jg
add
scas
sbb
pushf
insl
roll
push
hlt
and
psubusw
add
imul
and
inc
add
add
push
add
addb
xchg
or
add
addr16
add
pop
fsubrs
lret
add
adc
inc
add
std
add
inc
add
lds
icebp
mov
add
push
mov
sbb
movl
into
inc
add
int
and
popa
add
les
std
mov
stos
dec
pop
xchg
cmp
ds
add
dec
fldl
add
xor
add
lds
sub
mov
inc
add
into
repz
pop
push
jnp
mov
idivb
inc
add
mov
xchg
ds
pop
add
push
mov
mov
std
or
repz
jecxz
imul
sbb
adc
push
popf
jl
fwait
cmp
add
aam
in
outsl
cmp
cmp
push
jbe
loope
add
test
movsl
mov
cs
pop
sbb
add
fmull
add
add
lock
push
add
imul
add
push
pop
add
sbb
scas
test
add
in
push
add
loop
add
lds
push
notb
add
mov
loopne
add
sahf
inc
add
add
add
push
pop
push
add
jne
push
inc
add
sbb
pop
push
push
add
add
je
movb
loope
add
xchg
inc
add
xchg
movb
fildl
mov
loopne
add
cmp
sub
mov
mov
add
arpl
lret
gs
add
jbe
mov
push
loop
and
les
xor
pop
out
mov
fs
fldl
add
jg
add
jle
addb
sbb
sub
icebp
jmp
dec
int
or
aad
mov
jmp
stc
sub
in
popf
pop
xor
into
shll
xlat
aaa
mov
pop
cmp
fs
mov
aad
out
ljmp
nop
xor
or
and
push
flds
out
adc
jae
mov
add
xlat
pop
add
popf
jp
cltd
pop
add
call
cmc
jnp
sub
mov
jo
xor
sub
cmp
leave
cmpsb
bound
in
outsl
out
aas
std
rolb
xor
add
cwtl
in
ret
add
sbb
lods
and
lods
inc
add
lea
dec
clc
or
outsb
scas
rolb
mov
inc
add
add
loop
add
jmp
fists
nop
jl
cmpsl
lret
add
and
mov
fadds
add
loope
roll
mov
dec
xor
sub
stos
inc
add
pop
call
add
inc
add
bound
pop
add
icebp
sbb
push
add
pop
lods
or
lcall
rcl
inc
add
jo
cmp
rolb
scas
test
sub
add
xlat
mov
mov
lret
xchg
pop
divb
popa
add
push
pushl
lret
mov
fists
inc
add
add
std
lods
lds
pop
out
loopne
push
xor
es
out
mov
sub
shld
inc
add
cmp
adc
das
xchg
outsl
pop
in
push
pop
add
push
insb
adc
xchg
mov
fisubrl
mov
add
loope
jp
sub
sub
xlat
mov
lahf
add
dec
jecxz
in
cwtl
lea
popa
add
scas
inc
add
add
cmpsb
mov
mov
cmc
sbb
push
mov
clc
mov
repz
pusha
add
das
les
mov
pop
ss
cmp
jae
mov
jae
sub
into
push
inc
add
inc
add
imul
sbb
and
push
cmpsb
adc
adc
cmpsb
imul
push
das
out
fwait
jae
sub
add
add
jbe
bound
ret
es
cwtl
pop
call
xor
add
dec
jnp
dec
std
push
jns
sub
repnz
mov
lcall
add
mov
pop
addb
mov
scas
jnp
hlt
mov
sbb
add
js
test
add
in
sbb
add
test
iret
jg
xchg
mov
adc
add
add
mov
or
stos
pop
in
xchg
adc
add
add
xlat
mov
jp
test
stos
test
stc
and
push
sub
inc
add
fistpl
inc
add
jle
dec
ret
add
shll
mov
pop
dec
sub
roll
push
pop
enter
xlat
aas
lea
inc
add
cmp
aas
pusha
add
push
mov
cmpsb
pop
js
lahf
jg
addb
add
xchg
addb
jo
or
clc
jle
adc
add
out
add
movsb
lahf
ljmp
add
jne
and
or
out
xchg
jge
mov
enter
jp
scas
sbb
hlt
jecxz
push
es
arpl
inc
add
mov
xchg
idivb
xor
push
adc
fsubrs
add
xchg
pop
js
xor
pop
loop
out
xchg
xchg
mov
pop
jno
add
mov
cmp
lea
xor
add
push
lea
lret
movsb
sub
add
cmp
loopne
sti
cmp
ficompl
lea
jecxz
in
sub
mov
mov
xchg
adc
cmp
jo
push
or
add
add
scas
aaa
push
mov
mov
add
mov
adc
push
push
xchg
inc
add
in
add
xchg
xchg
inc
add
in
popa
add
cmp
cmp
addl
fnsave
lcall
movsb
and
dec
nop
iret
enter
dec
into
lcall
add
add
push
roll
fucom
aas
aad
push
je
insb
adc
repz
add
add
cmp
in
dec
inc
add
sub
mov
jg
addb
test
sub
push
add
add
xchg
sbb
call
add
pop
test
cld
jns
xchg
inc
add
xor
and
and
clc
roll
fwait
cwtl
cli
xchg
in
jno
push
jmp
cmp
pop
push
popf
mov
repnz
add
cmpsb
and
push
lock
xlat
call
mov
mov
sbb
add
add
mov
test
fcmovbe
xor
add
nop
cmpsl
mov
inc
add
lahf
data16
xor
test
pop
push
jl
icebp
xchg
jp
pop
fisubl
push
push
sub
or
fstp
add
push
movl
add
add
pop
push
leave
stc
fs
add
add
add
les
jg
adc
xchg
aam
add
stos
mov
cli
pop
add
aaa
enter
add
rcrl
rolb
push
daa
icebp
test
and
inc
add
daa
mov
jmp
add
enter
add
lods
movb
add
mov
pop
data16
imul
push
xor
test
xchg
add
sbb
sbb
add
pusha
add
movsl
cmp
add
fcmovnb
add
mov
or
std
push
xor
xor
insb
jecxz
dec
dec
call
push
cmc
xor
fildl
clc
sub
loopne
push
lcall
outsb
enter
and
mov
xchg
push
xchg
jns
sub
bound
inc
add
adc
rclb
push
jnp
aad
sub
xor
lods
popf
pop
lret
sti
push
insl
push
add
aas
lret
frstor
xchg
dec
mov
and
idivl
in
mov
imul
add
repz
lock
pushf
popa
add
rclb
aam
addl
push
dec
test
add
ja
add
xlat
stos
mov
add
and
les
push
pop
inc
add
lahf
lret
out
out
mov
into
mov
add
mov
jne
add
pop
jl
inc
add
testl
xchg
bound
xor
xchg
movb
and
insl
ret
add
sub
sbb
addl
push
sbb
add
add
add
jb
add
int
ljmp
add
add
and
mov
adc
sbb
js
push
sub
mov
or
scas
fs
lea
push
add
fisttpll
leave
push
or
fidivrl
xchg
movsl
push
inc
add
insl
xlat
iret
push
inc
add
aam
das
adc
in
sahf
fldcw
inc
add
adc
das
sub
insl
sbb
pop
dec
movsb
and
das
push
and
mov
pop
lods
les
adc
xchg
aad
add
mov
mov
loop
addl
popf
ret
add
and
add
and
fmuls
lock
std
lds
in
jae
pop
add
push
pop
rolb
lret
out
mov
add
add
add
daa
dec
jmp
into
or
sbb
sbb
lds
sbb
cmp
adc
xchg
inc
add
iret
std
das
out
or
add
cmp
repnz
loop
out
mov
aas
xor
dec
call
add
mov
inc
add
cmc
push
shl
std
and
fwait
es
bnd
add
add
int
sub
add
addb
cmc
iret
imul
push
push
pop
mov
cwtl
out
add
clc
fdivs
mov
pop
jecxz
push
sbb
icebp
loope
add
nop
dec
ficompl
add
jbe
movl
add
inc
add
push
xchg
xchg
or
sub
xchg
xchg
push
movsb
xchg
rorb
add
addr16
aam
jp
add
and
pop
movsl
adc
add
xchg
daa
jp
push
pop
in
xchg
jecxz
nop
xchg
dec
lret
iret
push
inc
add
dec
inc
add
sub
sbb
in
rcrl
jl
add
xchg
les
or
fldcw
add
add
adc
loopne
jg
ds
add
clc
xor
add
push
push
in
xchg
sub
and
jmp
mov
loopne
xlat
xchg
cmpsl
and
add
or
xor
add
ds
mov
add
add
test
roll
movsl
and
dec
jne
fcmovnb
add
add
addl
addl
pop
rcll
lret
es
mov
inc
add
adc
sbb
add
add
sub
imul
in
mov
add
mov
rcll
add
outsl
jnp
push
jo
sbb
insl
mov
aas
out
mov
sbb
xor
lods
dec
jle,pn
xor
and
sub
pusha
add
mov
push
popa
add
movl
test
xchg
mov
scas
mov
add
lahf
sbb
hlt
jmp
add
dec
xchg
xor
mov
sub
adc
add
icebp
addb
ss
sbb
inc
add
adc
inc
add
out
sub
add
pop
call
jg
rolb
add
movl
xchg
xor
inc
add
cmp
mov
xchg
out
pop
test
push
add
jo
mov
inc
add
or
mov
movb
mov
sbb
sbb
enter
mov
mov
je
add
add
mov
pop
and
dec
test
roll
std
inc
add
xchg
ja
or
pop
dec
push
pop
loopnew
push
and
clc
mov
addr16
pop
and
push
sub
loope
lods
aad
int3
inc
add
outsb
cmpsb
mov
pop
popa
add
dec
add
jmp
imul
pop
idivl
xor
mov
add
test
add
repnz
add
add
imul
xchg
ficompl
jmp
pop
sub
loopne
testl
nop
mov
cwtl
popa
add
dec
xchg
clc
push
stos
jns
and
addb
mov
pop
ss
sub
leave
repz
xchg
jle,pt
nop
mov
add
pop
nop
cmpsl
dec
mov
repnz
jmp
loopne
add
add
pop
clc
repz
popa
add
in
xor
xchg
enter
aad
out
inc
add
xchg
rcll
cmp
addr16
jmp
popf
xor
add
add
pop
lret
fbstp
ja
mov
scas
and
dec
add
xor
movl
insl
ljmp
popa
add
lret
fs
add
add
sti
sub
pop
mov
insl
popa
add
fidivrs
xor
or
xchg
dec
ret
add
xor
pop
cmpsb
enter
cwtl
or
add
daa
cld
popa
add
rorb
adc
fucomi
sub
mov
add
push
pop
je
divl
pop
push
js
in
sub
cltd
xchg
lcall
clc
or
add
repz
js
adc
add
add
push
js
sbb
out
xchg
push
pop
stos
mov
rclb
add
add
stos
addb
sbb
add
add
cmp
fs
movb
idivb
sbb
inc
add
add
cmpsb
mov
jmp
pslld
push
outsl
imul
pop
pop
int3
mov
mov
add
pop
add
notb
daa
out
cmpsb
or
dec
xlat
mov
add
xor
pushf
push
shrb
xor
lods
dec
fisubrl
mov
addl
add
add
lods
or
lahf
out
jae
or
das
jl
mov
addl
mov
ss
xor
xchg
mov
into
adc
pop
add
add
add
dec
jno
nop
jge
add
les
cmp
shlb
add
popa
add
repz
jb
jg
repz
sahf
aaa
lahf
push
imulb
rcrb
stos
dec
and
xchg
push
dec
and
push
fldt
inc
add
imul
int
mov
or
pop
mov
clc
sub
sbb
aaa
movl
aas
and
xchg
push
mov
add
scas
push
xor
jmp
in
lret
sbb
das
repz
movsb
sub
mov
stos
lret
jge
shl
jecxz
add
mov
inc
add
mull
add
int3
mov
das
addl
add
add
add
ja
add
jno
fsts
sub
sub
add
or
test
and
sahf
rolb
push
push
inc
add
xchg
pop
push
sahf
bound
mov
icebp
mov
cwtl
push
shlb
add
add
adc
iret
test
mov
xchg
mov
mov
mov
and
dec
mov
add
test
xor
enter
or
add
mov
add
add
mov
or
adc
push
dec
out
adc
out
repz
cmp
inc
add
push
ret
loopne
mov
out
roll
add
sub
push
inc
add
jmp
ljmp
movsl
enter
dec
xlat
in
shl
rolb
push
push
out
sub
lods
sbb
test
adc
cmpsl
xchg
aam
clc
loope
nop
xchg
in
add
add
or
add
fucomp
mov
sub
add
cld
cwtl
int3
imul
movsl
mov
movb
add
add
sub
popf
xor
add
addr16
addb
rcl
push
add
cmp
xlat
movsl
or
rolb
adc
ret
add
cwtl
adc
mov
sti
inc
add
les
mov
add
mov
cltd
xor
js
add
hlt
mov
sbb
addb
xchg
daa
add
addb
jg
add
int3
xchg
movb
addb
xor
pop
push
mov
add
add
lods
xlat
mov
xchg
push
push
mov
stos
mov
mov
pop
fiaddl
add
aad
stos
add
push
daa
lret
dec
mov
pushl
cmpsl
inc
add
aam
sbb
sbb
add
mov
lods
adc
add
imul
scas
jb
pop
insl
mov
or
push
mov
mov
ficoml
stos
clc
mov
add
push
add
aad
repz
aas
pop
pop
cmp
cmc
jl
cmpsb
imul
add
popf
cli
scas
fcos
xchg
xor
add
dec
sub
ret
addr16
cmp
dec
je
dec
dec
cli
inc
add
dec
mov
add
std
ret
add
stos
popa
add
enter
jnp
add
ret
or
roll
add
push
dec
dec
sub
pop
divl
cmp
movb
repz
sbb
xor
add
pop
lds
inc
add
add
int
bound
pop
outsl
cmp
add
xor
add
pop
gs
rolb
fcoms
jae
flds
push
jmp
out
push
add
lds
sub
daa
mov
adc
xchg
aas
adc
mov
mov
xlat
cmp
addb
xor
std
int3
shlb
push
add
add
inc
add
pop
mov
sub
out
dec
addr16
jmp
add
and
add
shl
out
popa
add
mov
xor
mov
add
inc
add
add
add
imul
pop
inc
add
adc
mov
sar
mov
add
movl
js
repz
ss
sbb
add
pop
add
and
push
xchg
push
pushf
cltd
and
push
into
addb
fwait
pop
ret
sbb
add
add
pop
mov
pop
and
add
arpl
outsb
mov
cmp
pop
cmpsb
mov
sub
lret
mov
ficoml
add
fwait
icebp
icebp
xor
mov
roll
repnz
add
jne
sahf
ds
dec
mov
add
notl
ss
arpl
jl
xor
jae
sub
ret
add
dec
add
pop
iret
push
dec
icebp
fsubr
cmpsl
inc
add
mov
pop
jecxz
idivb
fstpt
xchg
push
sti
cld
add
daa
or
cmpsl
mov
xchg
fsubs
add
xor
xor
cmp
call
xchg
aas
imul
dec
movl
cmp
arpl
sub
add
addl
add
add
leave
dec
lret
lock
add
push
push
add
ss
add
xor
stos
mov
xor
inc
add
jl
mov
adc
xor
inc
add
jecxz
call
call
pop
into
fisubs
add
xchg
xchg
lea
xchg
clc
int
xchg
bound
hlt
out
lea
and
roll
xchg
mov
loopne
mov
dec
movb
add
sbb
test
movb
in
pop
pop
pusha
add
cmpsl
movsb
sbb
in
or
mov
dec
cmp
xchg
lock
push
mov
popf
stos
sub
pop
pop
sub
push
pavgb
repnz
jle
repz
add
xchg
mov
sub
lods
fcomps
rolb
add
push
fcomps
sbb
test
push
sarl
xor
sub
add
cld
pushw
add
add
inc
add
lock
add
add
sub
mov
add
nop
testl
test
adc
mov
adc
mov
xor
jecxz
xchg
add
ficompl
or
sbb
out
cmp
test
rol
add
push
sub
and
sub
loop
loopne
pusha
add
dec
popf
mov
or
add
add
add
daa
jb
ficoml
mov
movl
add
fcomps
add
xor
pop
push
jl
lods
dec
in
cmp
add
dec
adc
cli
xchg
je
sbb
sti
int
popf
int3
cmp
popa
add
add
aam
ja
add
cmp
add
mov
mov
pop
add
jo
inc
add
push
pop
inc
add
lret
mov
bound
dec
scas
fnsave
pop
insl
adc
pop
movsl
mov
and
fisubl
adc
add
add
xchg
or
dec
and
jo
add
add
or
and
jp
mov
lods
xchg
movswl
cs
scas
lcall
and
dec
dec
adc
je
add
mov
push
push
mov
pop
outsl
addr16
xchg
inc
add
out
add
sbb
addl
and
pop
mov
jne
push
mov
dec
popf
xchg
movb
mov
sub
add
addb
idiv
cmp
cmp
aas
cmp
inc
add
or
jae
add
add
add
in
arpl
fucom
and
imul
xor
pop
movl
add
pop
dec
in
sub
notb
sub
inc
add
adc
cmc
ss
mov
lods
push
cmc
outsb
hlt
je
imul
adc
add
insb
fcmove
jl
shl
dec
test
and
or
add
ret
add
xchg
movsb
jo
or
add
cmp
dec
call
add
add
js
insl
addb
jne
cmpsb
int3
mov
add
fidivrl
push
lcall
dec
sahf
aam
xor
insb
fadds
add
xor
out
adc
fs
aad
adc
insl
lods
adc
add
test
jbe
add
xor
inc
add
jg
push
push
div
and
testl
adc
das
and
xor
roll
cli
stos
ror
addb
addl
mov
sbb
arpl
pminsw
aad
fcmovne
clc
sub
dec
addl
scas
mov
cmc
pusha
add
cli
aaa
cs
aam
inc
add
mov
sbb
add
xor
lret
mov
leave
pop
xchg
test
push
rdmsr
jno
das
pop
es
test
pop
addr16
add
jb
adc
ret
add
insb
std
mov
mov
sbb
loopne
imul
mov
dec
insl
jo
pop
push
add
and
jl
add
sbb
adc
in
test
push
mov
repz
add
test
es
pop
add
sub
mov
loop
push
mov
leave
pusha
add
mov
xor
leave
and
inc
add
and
aaa
pusha
add
scas
data16
ret
push
xchg
insl
stos
ds
push
sub
xor
addl
outsl
cmovo
daa
xor
dec
sahf
lds
jge
fwait
popa
add
jmp
add
add
add
add
jecxz
mov
add
add
fiadds
xchg
or
cwtl
out
js
push
xchg
les
nop
sbb
inc
add
lcall
ret
add
inc
add
pop
xor
dec
pop
cld
fs
mov
or
adc
movb
popa
add
ljmp
dec
add
das
inc
add
loop
add
or
in
push
test
lahf
and
inc
add
clc
mov
test
mov
inc
add
add
popf
xchg
mov
addl
add
pop
mov
jmp
push
add
out
addl
push
push
inc
add
fcmovnu
jl
mov
jmp
xchg
mov
add
add
cmpsl
mov
add
pop
add
mov
jp
fs
rorb
inc
add
test
add
pop
je,pt
incb
add
add
out
lret
adc
push
push
add
popa
add
mov
pop
pop
mov
fcmovu
sar
mov
cmc
nop
mov
push
repnz
and
and
xchg
xchg
lea
cmp
sti
mov
add
add
and
out
add
stc
dec
add
mov
popa
add
xlat
hlt
mov
xor
mov
xchg
out
push
jo
mov
mov
add
mov
jecxz
add
lea
xor
inc
add
repnz
outsl
cmp
loop
adc
inc
add
jno
xchg
xor
imul
aad
add
inc
add
push
sub
cmc
icebp
mov
add
xlat
lods
ljmp
movb
sahf
jns
fisubrs
ds
jl
dec
and
pop
dec
mov
inc
add
add
mov
mov
pop
adc
or
cmp
pop
adc
mov
outsb
ss
lods
cwtl
mov
das
lock
loope
push
addr16
cmp
rcrb
jle
xor
add
aam
imul
add
cmp
in
mov
mov
ljmp
sbb
mov
mov
xchg
scas
pop
add
inc
add
mov
int3
aad
clc
jecxz
xchg
int
div
push
and
dec
cmp
jns
add
push
rolb
aam
add
addl
mov
sahf
mov
add
scas
add
popa
add
mov
mov
sub
cli
addb
fs
clc
xor
add
push
mov
xchg
pop
push
adc
xchg
jns
dec
ret
sub
adc
clc
or
mov
mov
cmp
add
fdivl
mov
or
push
pop
lods
addr16
movl
leave
fs
jle
jno
add
jnp
add
sub
add
xor
clc
add
mov
fisubl
out
rcr
adc
cs
add
sub
pop
inc
add
pop
jo
addl
adc
sbb
push
enter
sub
stos
stos
xchg
xlat
xchg
subps
shlb
adc
add
sbb
add
les
cmp
sbb
add
add
iret
xchg
add
push
roll
add
adc
add
xchg
cwtl
insb
sti
xchg
jecxz
fistpl
notb
fcomip
psrlq
xlat
rolb
add
inc
add
jae
add
jne
aas
xchg
cltd
frstor
cltd
je
inc
add
xor
add
cmp
mov
cmp
dec
sbb
add
add
daa
jmp
mov
inc
add
rcrb
sahf
lods
cld
fidivrs
jg
add
add
xchg
pop
push
popa
add
add
cmpsb
adc
dec
xor
dec
ret
add
out
stos
aaa
mov
lahf
aam
ret
imul
mov
add
add
add
mov
jo
mov
imul
xor
jno
add
dec
mov
jbe
sub
pusha
add
ljmp
cs
ss
mov
add
bound
into
fsubr
and
popf
push
cld
scas
into
bnd
add
pop
ret
add
push
mov
movsl
lahf
sbb
add
aaa
dec
mov
adc
dec
fwait
dec
dec
xchg
jecxz
add
push
push
ds
mov
dec
mov
rclb
xchg
pop
pop
mov
push
xchg
pop
or
push
js
in
push
nop
cltd
std
fistpll
adc
sub
into
int
add
lds
mov
cmp
or
add
mov
pop
movsb
ret
rolb
outsl
push
mov
outsl
aaa
xchg
sub
ljmp
addl
xchg
adc
je
jne
into
les
xchg
xor
mov
loope
lcall
pop
lahf
or
pop
data16
jne
mov
jno
fstpt
and
outsl
in
sub
int
mov
jae
add
add
add
xor
xlat
pop
mov
mov
or
leave
pop
repnz
xchg
inc
add
mov
dec
sub
mov
rolb
mov
stc
mov
add
in
mov
fdivs
sbb
push
add
cs
jbe
inc
add
fwait
aam
jmp
std
or
xor
movb
mov
out
or
aas
sub
bnd
add
mov
mov
fwait
mov
dec
fimull
in
inc
add
jae
sarb
addw
pop
cmpsb
or
sub
add
mov
sbb
add
sub
loope
jns
fldt
lret
cmpsl
testl
add
jmp
xchg
nop
shrb
fsubs
ret
add
adc
xchg
mov
add
lock
xchg
dec
repnz
cld
xchg
sub
add
add
sub
xor
xor
ja
notl
inc
add
cmp
add
in
ss
out
pop
addb
idivb
imul
push
loopne
and
jbe
add
cld
nop
imul
dec
push
std
fimull
ret
fcompl
aam
pop
inc
add
mov
mov
mov
push
jp
add
cmc
and
or
add
addr16
add
or
popa
add
testl
add
mov
xchg
arpl
popa
add
daa
pop
ror
jmp
cmp
mov
add
mov
fstps
test
adc
add
add
jne
add
xor
mov
add
add
xchg
ljmp
add
dec
int
mov
xchg
ficoml
lds
push
mov
fildl
inc
add
or
lgs
and
daa
daa
test
push
dec
push
pop
sbb
xchg
pop
addl
add
dec
push
fsubl
add
jl
xchg
mov
mov
adc
out
insb
xor
mov
and
or
add
int3
sbb
add
or
ds
add
xchg
roll
out
xor
fldenv
sub
adc
addl
into
fldcw
cmp
mov
pop
fdivrl
adc
jg
fwait
cmpsb
int3
in
and
mov
outsb
aas
mov
add
aas
xchg
in
inc
add
mov
add
mov
add
out
inc
add
addb
add
or
js
stos
sub
add
cmp
pusha
add
ret
add
add
es
add
xchg
sbb
dec
into
jecxz
movsbl
and
xchg
xchg
shll
pop
xchg
pop
repnz
addl
add
xor
sbb
outsb
mov
in
adc
fcomip
pushf
cmp
decl
adc
bound
movsb
xchg
xor
outsl
adc
xchg
pop
hlt
pop
dec
add
data16
push
les
add
mov
movb
sahf
jb
in
insl
push
jno
test
or
dec
std
pop
mov
sbb
scas
sbb
add
std
loopne
clc
mov
cli
imul
add
mov
add
mov
add
iret
imul
fwait
addb
fiaddl
add
shlb
pcmpgtd
test
sub
ja
adc
add
sub
cmp
jb
or
add
push
add
xor
popf
jns
imul
adc
or
mov
add
mov
add
inc
add
mov
jecxz
into
mov
pop
mov
cltd
push
cmpsb
sahf
stos
sbb
jmp
jns
pop
iret
xchg
ja
nop
stos
mov
mov
add
dec
lcall
cli
repz
shrl
lret
mov
popf
pop
sbb
xor
pop
xchg
push
and
stos
roll
cmp
mov
push
addb
jne
mov
cltd
fs
add
mov
pop
ficomps
pop
pop
fcoms
mov
push
mov
icebp
mov
popa
add
lcall
add
in
stos
adc
ss
cmp
iret
repz
ret
add
add
inc
add
roll
sub
pop
mov
cmp
push
pop
add
adc
add
jb
adc
add
idiv
xchg
stc
rolb
jno
add
add
push
scas
xchg
jl
xor
repz
dec
test
dec
out
dec
ljmp
push
inc
add
rolb
insb
popf
aad
incl
push
ret
add
xlat
stc
sbb
add
push
dec
rolb
add
scas
cmp
xchg
hlt
popfw
and
jae
inc
add
nop
insl
pop
out
push
mov
js
xchg
xchg
sub
mov
je
add
jns
cmp
dec
imul
int
addb
movsb
test
jmp
sahf
mov
and
rcll
xchg
outsl
xchg
mov
popa
add
and
and
push
jecxz
test
push
jae
mov
dec
and
lret
jge
aas
xor
adc
in
icebp
jp
mov
add
cmc
mov
inc
add
cmp
jge
cmp
test
aas
addb
mov
and
lods
dec
xor
mov
add
add
mov
fmulp
push
or
loop
cli
xor
call
xchg
sbb
add
lret
rorb
push
es
add
leave
mov
add
out
add
imull
adc
dec
inc
add
mov
jb
test
stos
scas
pop
cmp
fldcw
and
pop
and
addl
adc
add
movb
add
and
cmc
xchg
xchg
mov
fwait
xor
and
scas
enter
cmp
and
push
addl
es
adc
add
loop
push
cmp
add
add
dec
sar
stos
jae
xchg
pop
adc
rolb
add
popa
add
out
xchg
adc
add
dec
je
repz
dec
loop
sahf
mov
movsb
xor
and
xadd
movb
ja
add
mov
gs
and
sbb
and
mov
jp
addb
add
add
mov
or
sar
xor
in
or
push
push
add
divl
jmp
les
divl
add
push
sub
add
enter
add
and
jp
inc
add
rorl
xor
xchg
jl
mov
or
add
repz
movl
pop
loop
mov
rorb
movb
and
add
sub
packsswb
jo
add
arpl
movsl
movw
add
addl
test
nop
jcxz
xchg
inc
add
test
dec
stc
and
cmp
xchg
cmp
jl
mov
xchg
movsb
in
pushf
mov
mov
in
ret
add
movb
jo
ds
into
jmp
pop
inc
add
mov
bound
cltd
cmp
into
xchg
push
and
add
dec
cmp
jg
add
push
inc
add
out
inc
add
pop
movsl
clc
movl
mov
add
cmp
xor
add
and
or
jns
repnz
pop
add
sub
jno
push
and
movl
pop
fcoml
pusha
add
es
addb
in
add
outsl
mov
mov
sahf
ds
scas
sti
adc
leave
call
lods
leave
pop
add
mov
add
movb
idiv
setne
add
loope
xor
addb
test
fbstp
sbb
icebp
xchg
movl
add
xlat
insb
ss
nop
inc
add
push
scas
das
pandn
outsb
xor
push
add
shll
mov
jg
aas
lods
sub
cmp
add
xchg
or
mov
xchg
add
push
sub
inc
add
ja
decb
dec
int3
jecxz
iret
scas
sbb
lcall
add
add
mov
add
mov
pavgw
add
addl
arpl
xor
cmp
xchg
popa
add
sub
cmp
adc
fcoms
leave
fdivr
fimuls
add
mov
add
add
push
pop
call
mov
arpl
addb
xor
add
ret
add
popf
cmpsb
xchg
bound
jno
fwait
inc
add
mov
and
ljmp
fbstp
push
jmp
add
add
mov
push
dec
call
add
out
pop
sti
dec
cltd
xchg
cmp
insl
jb
dec
jmp
inc
add
add
inc
add
add
lock
mov
icebp
jae
mov
int
push
insb
cmpsl
mov
xor
lods
or
addb
mov
aam
mov
movb
push
out
add
cmp
cmp
in
add
in
stos
popa
add
pop
or
mov
push
repz
cwtl
lock
std
test
sti
adc
in
sbb
rorl
lret
cli
imul
in
mov
lods
imul
xchg
mov
and
movsb
xchg
mov
sbb
rcr
sti
movsl
cmp
add
add
xchg
cmp
ds
add
sub
jp
pop
cs
ljmp
and
or
or
mov
clc
les
je
fldcw
stos
jg
or
fs
jecxz
add
out
dec
mov
add
and
mov
pop
xchg
gs
ret
ss
or
fsubrl
add
les
es
sqrtps
and
sub
add
jl
dec
aaa
mov
in
movl
pop
push
cltd
cmpsb
and
js
icebp
lea
dec
pop
cmp
add
and
mov
dec
rcll
roll
xchg
in
adc
push
repz
add
fildll
mov
pop
sbb
popf
dec
out
fldl
add
xchg
fstps
mov
in
or
and
mov
add
bound
seta
xchg
dec
dec
cltd
lcall
js
fwait
jmp
ret
add
cmp
add
arpl
dec
enter
and
mov
push
cwtl
bound
jne
cmp
ret
add
jne
mov
add
les
insb
mov
js
scas
aas
stos
dec
pusha
add
add
jo
xor
cmpsl
mov
mov
imul
jmp
sub
xor
xor
sub
jmp
fstpt
push
insl
pop
mov
add
in
scas
add
jle
ss
ja
push
insl
cmc
mov
adc
cmp
push
add
movsl
gs
add
adc
add
xor
pop
stos
ficompl
add
mov
add
mov
adc
sbb
arpl
decl
aam
outsb
or
or
stc
addl
sub
loopne
shrb
fucom
and
test
dec
push
jbe
add
notb
jo
jecxz
push
mov
addl
jmp
mov
add
repnz
or
cs
xchg
sbb
and
cmp
cltd
adc
add
es
sbb
fwait
push
or
push
mov
dec
das
les
fstpl
jl
mov
inc
add
mov
call
lea
mov
cli
xchg
cli
adc
push
lods
cltd
adc
pop
testl
movsb
mov
add
add
iret
mov
push
test
fisubrs
mov
mov
test
scas
dec
addb
scas
mov
dec
pop
xor
in
sub
dec
mov
inc
add
stos
fldcw
or
mov
xor
xor
aaa
xor
stos
pusha
add
adc
xor
loope
out
clc
push
das
sub
xchg
and
add
push
inc
add
and
pop
add
mov
add
ljmp
mov
inc
add
sub
and
popf
or
push
aad
nop
and
mov
add
bound
fwait
pop
fmul
cli
cmp
movsb
clc
pusha
add
add
movsl
mov
icebp
shll
je
add
sbb
fidivrs
dec
mov
mov
pop
fisubs
push
sti
sbb
xchg
ret
add
add
push
pop
jmp
data16
add
int
dec
sarb
jp
int
adc
cmp
fstps
mov
pushf
cmp
pop
int
add
shlb
dec
mov
add
das
mov
stos
pop
scas
into
iret
xchg
xor
add
add
mov
and
push
iret
inc
add
add
je
add
cli
sbb
fdivrl
negl
mov
sbb
add
jnp
cmp
add
add
mov
roll
or
dec
xchg
and
stos
adc
push
jge
mov
add
mov
add
cmp
ja
xchg
mov
sub
add
insl
pop
add
xchg
lret
in
push
and
repz
repz
frstor
lds
loope
pop
test
add
rclb
mov
add
mov
mov
add
xchg
sbb
addl
add
xchg
mov
add
and
add
push
xchg
pop
arpl
nop
addb
add
fildl
mov
adc
fldenv
mov
pop
mov
cmc
test
pop
add
loope
popf
jne
jle
nop
xor
push
mov
ja
xor
test
rolb
mov
add
add
mov
cmp
add
js
out
add
insb
jb
mov
aam
jae
inc
add
mov
add
int3
lods
pop
dec
cld
and
or
add
fists
add
out
ja
cvtpi2ps
lahf
scas
sbb
push
dec
mov
inc
add
add
dec
insl
testb
pushw
sbb
xor
pop
mov
rolb
add
out
mov
mov
add
sahf
popf
mov
test
pop
movsb
and
xor
shll
cmc
sti
in
lds
xchg
add
sarb
aaa
jb
xchg
dec
lods
enter
pop
inc
add
pop
hlt
inc
add
jecxz
lret
push
mov
or
xlat
xchg
dec
jp
pop
add
push
les
adc
sub
test
xor
cwtl
cmpsl
out
and
fimull
add
in
pushf
cmpsb
sbb
adc
add
es
dec
aaa
sbb
icebp
mov
aaa
adc
idivl
jnp
das
jmp
push
addl
hlt
mov
sbb
add
addl
push
int
sbb
enter
add
adc
mov
mov
add
xor
sti
pop
add
add
call
add
sbb
mov
pop
xor
fbld
add
add
cmc
dec
push
mov
mov
out
pop
add
cmc
cmp
pop
mov
out
jmp
or
testl
rolb
scas
movl
dec
or
add
mov
insl
jno
add
push
add
and
push
add
aad
inc
add
add
fsubrl
xchg
ret
add
movsl
fwait
popa
add
add
addb
xor
lds
pop
jns
add
pop
add
add
filds
jb
int
or
std
fwait
cld
adc
push
sbb
or
into
ret
fwait
xchg
aad
test
rolb
mov
pop
pop
imul
cmp
push
bound
mov
cmp
gs
add
in
lret
popf
push
xor
in
clc
xchg
mov
add
dec
sub
adc
dec
stc
pop
sub
add
cwtl
fcoml
test
mov
add
mov
sbb
xchg
int3
stc
rolb
sbb
add
lret
cmp
add
add
jns
add
jnp
out
xchg
add
pop
or
jno
rolb
and
rcrb
pop
ret
add
or
pop
sti
xchg
js
add
cli
push
ljmp
es
movsb
lret
popa
add
fcmove
cmovl
lds
seto
xchg
movb
in
push
jns
sbb
pop
add
out
ja
nop
dec
fldcw
adc
test
test
repz
pusha
add
cld
lcall
cmp
mov
push
sbb
in
mov
shlb
repz
sbb
sbb
test
jle
pop
adc
sub
add
fmull
lock
int
test
cmp
add
sbb
add
push
sbb
xchg
inc
add
add
add
nop
scas
js
mulb
add
pusha
add
inc
add
pusha
add
and
xchg
test
xchg
inc
add
jno
xchg
loopne
xchg
adc
fisttpl
xlat
adc
movl
add
jnp
add
mov
mov
cli
add
std
out
sub
add
scas
mov
jp
jg
js
push
sbb
das
mov
push
push
and
mov
add
out
mov
add
inc
add
sti
fwait
shl
repnz
frstor
add
add
ss
addl
int3
fldcw
mov
imul
jnp
add
push
add
movsb
adc
mov
xchg
dec
mov
xchg
les
mov
pop
shrl
movsl
pop
add
add
lret
daa
dec
scas
clc
sti
jb
adc
fdecstp
and
fdivl
and
sahf
sbb
mov
add
mov
mov
mov
ss
jecxz
xor
pop
nop
ss
std
fs
add
ret
add
movsl
adc
addl
add
ljmp
xchg
add
jp
or
pop
add
mov
inc
add
loop
out
push
xchg
test
into
loopne
mov
pop
ljmp
xchg
std
inc
add
pusha
add
test
cli
mov
addb
add
add
push
add
sub
push
aad
add
add
add
cmpsb
and
fwait
sbb
nop
mov
in
lock
mov
mov
mov
inc
add
push
ret
add
loop
arpl
pop
add
mov
xor
add
in
sahf
fistpl
lahf
repnz
adc
scas
cmpsb
dec
cld
pop
add
pushf
lret
orps
test
mov
sub
jne
add
cmp
test
xor
and
std
out
nop
ja
pop
add
test
out
sbb
mov
les
rorl
add
divl
push
jp
popa
add
add
jo
rorb
adc
sarl
add
fisttps
ret
add
add
inc
add
cmp
adc
lds
daa
insl
and
inc
add
shll
fs
insb
and
sahf
addb
push
cli
pop
fisubrs
jecxz
jae
je
push
add
lds
cmp
stos
sbb
hlt
add
xor
add
mov
stos
add
dec
adc
add
addb
add
inc
add
mov
inc
add
jle
sbb
push
roll
mov
add
addb
loopne
xlat
mov
in
or
call
add
ds
mov
add
add
ret
int3
rclb
sbb
add
inc
add
insb
pusha
add
insl
outsl
jae
push
bound
popf
and
cli
sub
inc
add
lcall
addb
test
ja
add
rolb
inc
add
addl
fincstp
in
fsubrs
xchg
enter
js
push
add
inc
add
test
mov
sbb
daa
divl
bound
int
add
mov
add
mov
dec
mov
repnz
popa
add
add
push
jl
jl
or
add
daa
mov
add
gs
in
add
cmpsl
je
out
add
sbb
mov
into
out
addl
add
inc
add
inc
add
cmp
cltd
popf
cli
out
add
ljmp
pop
je
popa
add
push
push
mov
sub
jb
mov
popa
add
inc
add
add
loop
ret
pop
or
in
cli
xchg
push
popf
pusha
add
inc
add
push
fsts
dec
sbb
mov
sbb
cmp
inc
add
addl
xchg
mov
mov
xor
mov
das
mov
jnp
mov
ret
add
pushf
mov
add
inc
add
xchg
fcoml
addl
mov
lret
idivl
add
or
je
call
xchg
iret
ss
mov
and
movb
xchg
or
iret
jbe
test
enter
jp
add
pop
int
out
idivl
test
mov
add
addl
cmp
cmp
push
mov
test
iret
rolb
pusha
add
add
push
jl
and
add
adc
cmp
cmp
call
xchg
add
lods
sub
mov
adc
add
int3
cmp
call
aam
xchg
dec
xchg
outsb
mov
add
xor
ljmp
mov
pop
add
add
int
xchg
mov
lahf
cs
add
or
pop
push
xchg
xchg
in
pop
into
out
pop
faddl
add
mov
pcmpeqb
inc
add
jg
test
cmp
push
add
add
in
rol
add
push
dec
push
cmp
lods
jns
adc
lods
xor
mov
movl
push
and
sbb
loopne
lahf
or
ret
pushfw
lods
rolb
push
mov
inc
add
inc
add
xor
add
test
add
add
jne
adc
add
lods
or
divl
xor
cmpsl
cmpsl
in
or
add
out
push
sbb
sbb
mov
dec
jbe
mov
jae
inc
add
add
pop
add
mov
sahf
xchg
cmp
xlat
call
lock
fs
add
jns
stos
arpl
dec
shll
add
add
cs
add
dec
inc
add
push
addb
rolb
mov
adc
mov
add
arpl
lret
inc
add
out
movsb
cmp
jp
add
insb
lods
ds
adc
inc
add
inc
add
fimull
repz
cltd
js
cs
xchg
stc
popa
add
adc
loopne
mov
jl
add
fs
or
dec
bound
addb
test
xchg
addb
xchg
out
mov
lods
lret
and
add
outsb
es
test
jl
mov
loopne
jg
add
push
mov
sub
les
xor
cld
push
je
mov
ja
popa
add
or
lret
enter
aas
xchg
xchg
daa
xchg
lds
dec
ret
add
ds
ret
mull
xchg
sub
scas
fcomp
mov
sub
pop
mov
insl
jb
mov
aas
shrb
xchg
ds
mov
sbb
jge
cld
mov
leave
push
add
outsl
jle
fsqrt
mov
dec
mov
mov
dec
dec
push
fnsave
lahf
and
xor
inc
add
in
in
add
jae
dec
les
repnz
mov
sbb
add
outsl
sbb
cmp
mov
and
mov
loop
ret
add
les
mov
add
push
xor
adc
popf
ret
lret
cmp
mov
mov
add
ds
ja
add
inc
add
push
xchg
in
int
loope
loope
out
dec
jno
add
xchg
or
add
in
rolb
mov
adc
addb
adc
pop
test
out
sahf
scas
scas
scas
test
xchg
test
pop
and
frstor
mov
pushf
insb
mov
dec
aam
hlt
cmp
pushf
js
add
sub
inc
add
xchg
xchg
ret
add
daa
lods
loopne
jmp
in
push
push
outsb
dec
dec
in
and
xchg
adc
stos
outsl
push
fdiv
pop
add
add
xchg
ljmp
fcmovb
add
push
rorb
cmp
les
hlt
add
push
mov
call
mov
iret
inc
add
lock
adc
mov
sub
add
push
rep
cmp
push
mov
mov
add
push
setle
cmp
push
sub
addb
dec
adc
add
xor
pop
jmp
in
jnp
add
cmp
or
mov
cmp
add
sti
push
pop
sahf
pop
pop
push
daa
negl
popa
add
sbb
add
adc
sarl
add
add
mov
std
push
cmc
jecxz
leave
dec
xchg
ss
xchg
add
out
lock
sub
fidivrs
xor
add
adc
je
mov
add
inc
add
add
enter
lret
add
push
addr16
ja
add
add
mov
fistl
add
xchg
pop
pushf
rorb
out
push
addl
inc
add
stc
xchg
jmp
fbld
add
lcall
pop
sub
bound
pop
or
or
int3
inc
add
sub
jg
mov
push
daa
sub
add
into
cwtl
gs
lahf
test
into
mov
scas
inc
add
push
add
sub
mov
cld
lcall
dec
jae
imul
add
pop
lock
cmpsl
and
mov
add
lret
cmpsl
mov
xor
adc
cmpsb
les
inc
add
push
sub
rolb
add
mov
add
sbb
add
push
ret
iret
ret
addl
js
add
adc
scas
movb
mov
stc
adc
mov
mov
int3
lret
jnp
rcll
fistps
enter
and
mov
lock
push
lret
or
pop
pusha
add
mov
repnz
xor
dec
mov
mov
testl
jno
sub
mov
adc
mov
mull
int3
cmpsb
sub
inc
add
not
addr16
add
mov
cltd
pop
mov
outsl
cld
dec
hlt
jo
cli
nop
and
daa
sub
mov
dec
and
imul
stos
inc
add
fdivrl
lea
fisubs
nop
pop
movl
add
fnstcw
xchg
jno
jnp
push
dec
stos
loope
cmp
ret
add
and
out
mov
jae
pop
xor
movb
push
or
addb
mov
xchg
cwtl
jo
add
cmp
iret
dec
movl
dec
mov
pop
mov
iret
add
lret
jecxz
sub
gs
add
rolb
mov
stos
int3
gs
pop
pop
dec
xchg
cmpsl
icebp
fwait
pusha
add
adc
jp
jecxz
add
add
xor
nop
in
daa
pop
xor
into
and
ljmp
add
add
cli
das
pop
and
jmp
mov
dec
movb
sahf
loope
loope
push
adc
xchg
movsb
int3
inc
add
js
nop
inc
add
dec
cmp
inc
add
add
cmp
add
cld
mov
ds
mov
roll
loopne
dec
lahf
xor
or
testb
dec
shlb
cmpsb
lods
mov
add
cli
add
xchg
int
add
fstpt
addb
pop
out
push
xor
or
in
push
jnp
add
inc
add
das
pop
popf
jp
and
dec
ret
add
xchg
push
les
cmp
rolb
add
and
addr16
movl
fiaddl
push
add
daa
aaa
mov
or
sub
mov
add
dec
pop
pop
addb
arpl
movsl
jno
addb
sbb
add
pop
roll
inc
add
push
out
xchg
and
outsl
sub
sub
repz
push
dec
and
pop
mov
add
or
fistpl
fidivrl
insb
jp
rolb
mov
rolb
mov
addb
pmulhuw
xor
stos
iret
in
mov
add
fisttpll
fiadds
dec
negb
lods
sbb
mov
add
add
pop
sti
jge
pusha
add
lods
and
xchg
ja
addr16
sbb
das
jb
sbb
add
bound
fcoms
cld
roll
nop
lds
sbb
fcomps
rolb
sbb
add
addr16
adc
es
push
ret
add
add
add
add
inc
add
dec
jecxz
stos
loopne
push
fstpl
mov
ret
add
fcmovnu
xchg
std
cld
xor
add
jb
test
sub
add
out
mov
xor
cs
push
das
xchg
mov
into
icebp
lods
call
pusha
add
call
mov
mov
mov
pusha
add
and
adc
pushf
jl
pop
sbb
add
add
mov
xor
fsub
push
add
test
mov
add
lret
push
jl
into
cwtl
inc
add
sub
cltd
int3
clc
out
lcall
mov
add
sub
add
add
mov
cmpsl
adc
mov
add
mov
add
add
outsb
push
sbb
xor
shrl
dec
push
pop
lcall
mov
xor
test
movsl
jl
mov
dec
dec
aas
sbb
sarb
std
mov
lds
jg
inc
add
outsb
imul
cs
insb
xchg
and
and
jno
push
add
dec
push
push
pop
nop
mov
pop
push
fisubrl
add
sti
dec
adc
pop
and
sbb
add
or
jl
pop
xor
bound
movsl
mov
into
stos
in
mov
push
in
mov
sbb
jo
pop
and
mov
mov
inc
add
push
addl
repz
add
mov
mov
jno
outsl
mov
and
cmp
or
cmpsb
je
jbe
inc
add
add
fcmovbe
addb
inc
add
popa
add
pop
test
loop
push
add
push
int
pop
inc
add
adc
dec
movb
aas
cli
inc
add
data16
addb
push
cli
push
jecxz
add
add
movb
xchg
mov
push
test
push
iret
or
sub
and
fstl
or
sbb
lretw
mov
shlb
mov
xchg
add
std
xchg
aaa
push
add
stos
dec
ret
add
jbe
mov
add
filds
sbb
xchg
pop
adc
stos
sub
mov
push
add
pop
mov
sbb
fdecstp
jne
add
mov
add
jo
push
add
in
add
add
out
and
xchg
nop
outsb
cmp
bound
adc
xchg
fisttps
push
cmpsb
shrb
jo
push
sti
dec
sbb
push
mov
push
addb
mov
xchg
ret
xor
add
add
stc
pop
addl
mov
xor
fs
in
inc
add
into
not
pop
xor
movsl
or
add
add
stc
adc
aas
mov
sahf
push
incb
inc
add
cmp
jns
movsb
repz
add
roll
add
jne
add
xchg
cmp
stos
inc
add
mov
mov
aad
pusha
add
lret
aas
lock
pop
sub
pop
pop
cmp
mov
in
jno
cmp
mov
adc
xlat
scas
jbe
movsb
push
mov
mov
push
mov
sti
loopne
mov
hlt
jo
incl
int3
push
mov
test
fwait
test
clc
fildl
add
inc
add
push
adc
add
inc
add
add
inc
add
pop
inc
add
add
daa
and
stc
mov
imul
xor
jl
xor
jno
push
pop
pop
add
add
add
add
xchg
and
mov
and
add
stos
jno
ret
add
push
add
adc
aaa
std
mov
int
test
addr16
fadds
add
mov
add
pushf
ss
cmp
cmp
leave
test
mov
addr16
add
fnstenv
mov
adc
fbld
jle
xor
push
test
out
mov
pop
dec
cld
mov
push
test
ds
ret
or
addr16
fimuls
jge
xchg
mov
jle
add
imul
jmp
cmc
cli
inc
add
not
add
dec
mov
add
imulb
add
inc
add
inc
add
mov
push
adc
fisubrs
into
push
add
add
jnp
jge
mov
inc
add
push
add
sbb
pop
in
sahf
movsl
mov
add
dec
roll
jmp
shll
adc
or
mov
xor
adc
cltd
pop
addb
jl
into
xchg
mov
xor
repz
xchg
nop
in
lahf
or
xchg
shlb
outsl
addl
mov
xchg
sub
sbb
add
add
add
push
xor
adc
ljmp
push
xor
addl
xchg
sub
or
jmp
add
add
xchg
jge
cld
mull
ret
add
inc
add
cmp
mov
push
add
mov
popf
in
add
int3
mov
mov
insl
sbb
mov
add
outsb
imul
aaa
ret
add
sub
and
mov
xchg
rolb
add
inc
add
addl
fcmove
movlps
out
les
lock
insb
cmp
mov
mov
loope
test
add
cmp
ja
fimull
sub
add
jb
nop
mov
scas
cmpsl
cmpsb
sub
outsl
sub
ret
add
jbe
std
add
mov
push
dec
test
dec
bound
bound
dec
stos
lret
aad
and
xchg
pop
imul
mov
xor
scas
ss
ffreep
add
fmull
add
or
jg
pop
lods
mov
adc
pop
mov
adc
pop
loopne
ret
add
stos
push
sbb
arpl
jae
ja,pt
xor
fistpll
cmp
jns
popf
rolb
add
push
les
sub
add
or
scas
xor
dec
lods
pop
roll
xchg
jno
mov
sub
ja
rolb
add
pop
imul
dec
and
add
mov
jle
dec
ret
xchg
sarb
add
popa
add
mov
push
xchg
addb
fwait
inc
add
dec
mov
sub
or
testb
les
nop
mov
add
in
or
movl
loope
add
pop
movb
ret
add
or
xchg
sub
push
roll
leave
les
dec
out
pop
stos
pop
add
and
sahf
rcr
hlt
inc
add
in
add
and
jecxz
inc
add
mov
xor
sarb
cltd
sahf
shl
jecxz
or
lea
cmp
cmp
lret
fadds
xchg
mov
add
rcrl
mov
inc
add
sbb
call
pop
push
arpl
jnp
jb
add
roll
iret
pop
add
sub
lret
lret
add
pop
jne
call
popf
cmpsl
jmp
jne
iret
mov
pop
and
mov
add
in
mov
rolb
add
sub
inc
add
in
pop
add
popa
add
add
pop
add
sub
stc
sub
cmp
mov
ljmp
fwait
dec
fsubrl
cld
rolb
fwait
mov
add
dec
pop
rorl
mov
mov
sti
pushf
xchg
push
xor
movsb
and
add
clc
out
push
add
xchg
sahf
cmpsl
xor
add
test
jle
cltd
push
mov
loope
xor
pusha
add
sub
add
or
hlt
movl
repnz
add
repnz
imul
addb
pop
pushaw
add
mov
add
aaa
sub
mov
add
add
shrb
add
inc
add
inc
add
jno
inc
add
setge
add
add
add
punpckhdq
cwtl
loop
add
mov
add
cmc
jl
lods
jecxz
pop
push
jp
mov
cmp
sbb
popl
in
rolb
xchg
ljmp
mov
out
add
push
sub
mov
out
data16
xor
lock
lock
fnstsw
add
std
lret
loopne
aad
int3
movb
cmpxchg
sbb
sti
pop
add
in
shrl
mov
mov
jae
mov
cmpsb
sub
xor
cmpsb
jge
insl
aad
push
add
jnp
and
push
mov
or
add
and
mov
popa
add
lret
xor
sub
mov
mov
cltd
inc
add
movl
jno
and
icebp
pop
lret
imul
inc
add
pop
addl
cmp
sub
sub
out
clc
mov
lea
pop
pop
mov
test
pop
xchg
and
lea
xchg
repnz
mov
adc
inc
add
nop
and
gs
add
mov
mov
mov
xchg
add
adc
jns
xchg
movb
xchg
sub
mov
and
data16
imul
cmp
lret
dec
cld
sbb
pop
sub
xor
lea
xchg
and
xchg
or
add
scas
clc
pop
xchg
movb
add
fildll
dec
or
lods
rcrl
add
mov
adc
cmp
add
add
testb
xor
xchg
xchg
into
or
and
addr16
imul
arpl
push
add
rorb
dec
xchg
xchg
cmp
and
or
or
xor
xchg
mov
xor
or
addl
xor
daa
push
pop
insl
movsb
jmp
inc
add
test
mov
pop
loope
jg
pusha
add
nop
mov
add
movsl
adc
fwait
clc
pop
outsl
cmpsb
lods
sbb
adc
add
sub
roll
dec
fiadds
add
fstpt
test
sub
das
sub
push
and
and
push
lods
cs
clc
mov
jnp
shlb
dec
pop
ljmp
je
jle
mov
stc
cmp
pop
mov
push
daa
sbb
add
in
xor
sbb
clc
cmp
pop
cmp
jg
out
int3
movb
add
popa
add
call
add
test
dec
cmp
leave
mov
xchg
mov
xor
aad
add
add
addr16
mov
dec
jne
cmp
pop
push
pop
int
movl
or
sbb
jne
add
mov
push
movl
mov
call
lds
icebp
push
push
ds
mov
pop
add
lods
xchg
clc
scas
jge
add
jg
out
pushf
fisttpll
xchg
inc
add
mov
mov
sbb
aas
leave
ret
add
jp
fstpl
cmovs
cld
jl
lods
int
add
add
adc
add
push
int
in
add
shll
sbb
add
push
in
push
xchg
mov
pop
cs
in
or
imul
rorb
add
shl
jge
fldl
insl
repz
cmp
xchg
mov
fwait
imul
jg
cmp
add
scas
data16
movsl
lods
and
sub
addl
add
lret
mov
mov
mov
mov
add
xchg
js
dec
stos
xchg
loope
lret
scas
stc
mov
cld
push
add
xor
jo
in
inc
add
roll
add
or
adc
pushf
sysenter
inc
add
dec
enter
adc
prefetcht1
mov
pop
add
lods
sub
add
jb
add
xor
pop
add
push
movsl
pop
cmp
jge
xchg
test
inc
add
movsl
aaa
shll
pop
in
in
jmp
pusha
add
add
add
pop
sarb
jecxz
cmp
fmull
or
mov
div
scas
jno
pand
ljmp
sub
addb
add
mov
mov
aaa
xor
aas
movb
clc
dec
cmp
dec
popf
imull
icebp
fldlg2
fidivl
sub
stos
hlt
lcall
jne
push
xchg
cmp
shrd
stos
loope
addb
jae
movl
mov
xchg
pop
fimuls
pop
movsl
sbb
add
fs
lahf
jne
mov
dec
sahf
outsl
out
insl
scas
addl
int
add
add
stos
rolb
test
outsl
or
aam
push
loopne
addb
cmpsl
call
adc
jp,pn
xchg
sbb
addb
ficoms
mov
add
add
sbb
test
mov
pop
das
cmovnp
cs
sarl
add
scas
sub
adc
xchg
out
movsl
and
push
bound
jo
add
jne
std
and
jmp
scas
jl
pushf
jno
out
add
push
cli
xchg
fcoms
pusha
add
or
push
insb
dec
adc
or
pop
divl
add
push
add
add
add
push
jg
mov
ret
decb
cmp
mov
push
xor
cli
dec
mov
aaa
xchg
or
inc
add
sub
mov
and
pop
jmp
imul
loop
push
push
pusha
add
popa
add
mov
cmp
push
and
mov
sub
aam
add
loope
xchg
lods
cmp
dec
ds
dec
xchg
jns
scas
stos
popfw
pushf
mov
add
add
imul
pop
sbb
test
mov
add
add
jle
roll
fstpt
and
cltd
pop
lock
jbe
loope
add
cld
mulb
gs
ret
pop
xchg
mov
fwait
sti
fisubrs
mov
inc
add
pop
dec
jmp
jnp
mov
add
add
mov
cmp
add
fisttpl
adc
test
push
add
hlt
std
roll
add
mov
add
push
das
lret
addb
scas
adc
sub
adc
jecxz
push
xchg
movsb
out
ja
sub
sbb
divb
push
rorb
cmp
add
adc
sbb
test
and
fildl
insl
loop
aam
test
and
adc
push
mov
mov
lcall
paddb
dec
and
sbb
addl
or
cli
and
push
dec
bound
rclb
out
pop
imul
clc
sarb
push
add
add
ljmp
adc
dec
pop
mov
cmp
mov
or
push
push
and
repnz
xlat
xchg
in
xchg
sub
int3
inc
add
add
loop
insb
mov
out
lea
je
mov
sbb
jmp
test
imul
add
push
iret
in
sub
sbb
jmp
pop
inc
add
mov
add
jnp
adc
jle
xor
aaa
adc
push
fisttpl
push
popf
mov
add
mov
xchg
leave
test
xor
addr16
add
cld
repz
xchg
sub
inc
add
cmp
ss
or
les
mov
add
mov
dec
push
dec
addb
push
mov
dec
out
sbb
je
cmpsl
cmp
jp
add
fisttps
cmp
jne
jno
mov
popl
dec
lea
cmp
sub
hlt
addb
addb
repz
add
jo
mov
test
pushf
test
xor
add
call
sbb
push
xor
out
push
inc
add
mov
adc
movb
adc
inc
add
jno
jmp
add
and
push
in
add
add
add
into
mov
pop
lcall
ficomps
xchg
sahf
inc
add
sub
sahf
dec
jl
movsl
movsb
lea
add
xchg
xlat
dec
addr16
insb
daa
roll
mov
add
ret
add
pop
shl
movl
popa
add
mov
repnz
add
add
pop
addl
pop
inc
add
dec
rcl
xchg
or
inc
add
pop
or
add
dec
mov
xchg
imul
inc
add
dec
outsl
fldl
add
push
int3
lret
xchg
imul
in
popf
movsb
dec
ret
add
les
rclb
and
movb
loopne
or
cmp
add
mov
dec
dec
call
xor
add
add
rolb
jnp
stos
mov
out
idiv
sub
jmp
bound
mov
jle
and
push
add
mov
aam
aad
ficoms
mov
and
xchg
xchg
pop
jge
add
add
add
mov
dec
fdivp
movsl
scas
sub
jle
into
mov
sbb
int
sbb
and
ja
add
jno
add
jmp
scas
movb
add
es
adc
rol
add
adc
sbb
dec
xchg
push
sbb
cmp
xchg
pusha
add
inc
add
fwait
ret
in
mov
or
fildll
add
daa
fdivrs
sbb
push
pop
cmp
xor
jg
aad
imul
sub
hlt
push
insl
push
inc
add
out
add
inc
add
aam
arpl
dec
adc
dec
lds
negb
jmp
lcall
adc
sub
repz
mov
outsb
mov
out
sti
inc
add
aas
test
adc
je
dec
mov
add
test
add
mov
pop
in
push
mov
insl
push
dec
mov
loope
add
add
sti
dec
out
inc
add
mov
fs
pop
push
add
out
cmp
mov
addr16
addl
decb
dec
xor
add
mov
in
cmp
mov
xor
pusha
add
pop
add
ret
and
jl
ljmp
mov
mov
aas
pushf
dec
jp
movb
xor
test
in
cmp
hlt
sub
push
dec
ret
outsl
or
add
sub
push
into
push
xchg
into
push
mov
xchg
add
in
inc
add
pop
sbb
xor
adc
pusha
add
mov
cmp
mov
das
mov
mov
sub
rolb
xchg
mulb
pop
icebp
mov
and
sub
pop
inc
add
into
mov
gs
push
int3
into
xlat
mov
add
adc
adc
out
push
fcoms
push
aaa
sub
xchg
cld
addb
insb
adc
adc
add
loop
xor
pop
add
sub
xor
mov
fsub
cmp
push
cmc
or
mov
adc
xchg
push
mov
add
dec
adc
mov
cmp
mov
fistpll
and
inc
add
mov
add
or
addb
xor
pop
idivl
rolb
add
mov
dec
jmp
in
in
sarl
add
dec
mov
mov
pop
popa
add
add
addb
and
loopne
insl
lret
add
addb
add
xchg
out
xor
scas
lret
inc
add
sahf
pop
movl
cmp
xor
jg
mov
loopne
js
sbb
jecxz
js
js
pop
add
daa
adc
loop
jmp
lcall
iret
scas
imul
add
add
fwait
fwait
mov
push
in
pop
mov
jb
call
add
or
mov
cltd
out
addb
loop
add
inc
add
scas
mov
jns
lcall
enter
dec
mov
adc
or
mov
insb
into
and
add
and
aam
sub
adc
mov
jbe
das
add
xchg
popa
add
mov
cli
icebp
jne
pop
add
and
xchg
or
xor
addl
xor
popf
into
adc
jge
mov
add
jbe
int
dec
jns
movsl
jbe
mov
pop
cmp
rorl
push
mov
or
lret
mov
cwtl
and
jnp
pop
lds
or
xor
add
test
jb
add
pause
ret
push
pop
in
outsl
movl
add
addr16
cmp
int
out
flds
ret
dec
and
roll
pop
jl
enter
mov
jbe
loopne
xchg
sbb
or
leave
test
popf
pop
mov
ficoms
inc
add
adc
lods
loop
aam
dec
jge
test
fdivrs
addb
pop
sub
jle
lods
lret
jl
add
cmp
mov
adc
lods
les
in
xchg
out
cltd
push
popa
add
imul
add
lds
xchg
mov
add
movl
or
add
sub
xchg
cltd
jne
sahf
mov
dec
insb
cmp
add
mov
xor
in
push
mov
adc
enter
dec
roll
in
shll
add
mov
add
hlt
push
les
push
mov
aam
mov
or
ret
inc
add
iret
lcall
les
out
ret
stc
cltd
repz
mov
hlt
insl
push
fistps
mov
stc
gs
lods
mov
dec
xchg
jo
scas
add
enter
mov
cmc
movl
add
xchg
addr16
push
in
hlt
icebp
imul
sahf
mov
jb,pn
inc
add
adc
cmp
jg
add
push
int3
dec
or
pop
push
outsb
sub
add
addr16
push
inc
add
add
repnz
add
loopne
popa
add
sbb
int
push
xchg
inc
add
in
pusha
add
pop
and
repz
rolb
and
add
push
jo
mov
lods
dec
mov
and
or
scas
aad
out
xchg
ds
int
insb
int
push
xchg
ret
jno
adc
fcoml
aaa
and
lret
pusha
add
adc
xor
dec
aad
lcall
out
xor
jecxz
roll
cltd
cmp
add
add
inc
add
inc
add
add
and
test
jns
add
jne
add
and
jnp
add
dec
mov
pop
arpl
idivl
push
add
or
add
jno
add
push
ret
inc
add
and
test
add
push
les
xchg
sbb
or
and
xor
add
lea
add
gs
test
xor
add
in
roll
add
adc
in
lcall
pop
pop
loop
sub
add
xor
sub
loope
insl
test
icebp
adc
into
cmp
xor
fiaddl
movsl
pop
jecxz
and
bound
cmp
scas
adc
mov
add
test
jmp
adc
add
add
sbb
add
hlt
pop
cmpsb
xchg
mov
mov
fstpt
out
pop
mov
add
out
lds
inc
add
jo
push
push
jae
fmul
std
fadd
add
addb
out
lods
and
mov
fwait
or
sub
xor
icebp
or
add
xor
fs
add
xor
lahf
addb
test
jne
lret
repnz
movsb
sub
adc
and
addr16
add
leave
push
ret
add
ja
fistps
add
cmp
fadd
add
popa
add
leave
fdivr
mov
idivb
xchg
lret
mov
movsb
rcrl
add
add
pop
add
fdivrl
sbb
mov
ret
add
mov
mov
mov
std
lods
and
imul
pop
popa
add
add
ret
pushf
inc
add
mov
jno
mov
addb
add
fdivrl
loop
movsl
imul
inc
add
push
mov
es
push
jge
mov
and
push
out
mov
fldenv
je
inc
add
scas
adc
loopne
add
add
and
cld
mov
sbb
mov
cmc
mov
cmpsl
shll
icebp
push
frstpm(287
je
sbb
or
xor
jb
add
mov
adc
xchg
lcall
jne
jnp
repnz
dec
push
jnp
ds
sub
add
add
adc
push
cmp
jb
sub
push
mov
and
ljmp
ret
add
insl
test
adc
sti
mov
add
add
add
or
add
jmp
push
add
add
in
add
inc
add
aas
cli
jmp
add
enter
xor
dec
sbb
lea
or
fwait
inc
add
mov
add
xchg
je
sbb
mov
test
je
xchg
sub
add
xor
imul
inc
add
fcmovu
cwtl
sbb
add
ret
add
imul
ss
fucomip
pop
jb
pop
add
icebp
lahf
scas
jg
pop
add
fidivs
popl
movl
push
sub
mov
lods
gs
shrl
and
pop
add
addl
in
mov
fadd
add
add
pop
add
adc
std
xchg
out
pop
add
mov
add
jmp
stos
xchg
cmp
pusha
add
or
xchg
jp
mov
jo
add
dec
jns
xlat
sub
lock
cld
jnp
aas
push
in
movl
add
repz
pop
push
add
mov
ret
shlb
xchg
inc
add
inc
add
ss
add
fs
add
and
and
iret
jae
ror
lahf
inc
add
js
add
dec
mov
out
stc
mov
xor
hlt
push
fadd
add
xchg
push
add
pop
add
scas
roll
les
jmp
add
mov
stos
inc
add
movsl
or
add
add
pop
push
jmp
add
pop
sbb
pushf
add
mov
ja
jae
mov
inc
add
lea
fdivrs
jo
add
inc
add
mov
push
add
add
insl
jp
xchg
roll
dec
sbb
add
xchg
sub
mov
mov
in
inc
add
nop
mov
pop
idiv
add
out
add
movsb
fsts
out
push
clc
daa
addr16
add
aad
add
repnz
and
lds
cmp
out
movsl
fucomi
mov
out
mov
add
xor
add
lret
test
jae
loopne
add
xchg
outsl
jno
pop
rolb
movb
loope
test
aaa
cmp
sub
and
stos
and
sbb
add
xchg
sahf
pop
inc
add
inc
add
dec
out
lods
out
jp
xchg
cs
test
bound
mov
test
cmc
je
or
jecxz
sti
mov
xchg
addl
push
test
add
pusha
add
add
jl
adc
dec
in
test
push
les
fdiv
ss
add
add
xor
fisubl
sbb
repz
addl
add
push
add
jbe
mov
xchg
clc
les
fldl
push
xor
ljmp
push
sbb
add
xchg
push
adc
test
iret
ficoms
add
jo
out
je
mov
add
lret
add
js
jp
jnp
roll
jo
mov
les
adc
and
inc
add
add
xor
mov
rolb
rdtsc
or
add
mov
int
mov
dec
xor
ja
xchg
int
add
add
add
inc
add
push
inc
add
add
adc
loop
mov
and
cmp
pop
int3
ret
pop
cmc
dec
addl
bound
cmpsl
push
xor
test
add
out
dec
dec
fmuls
dec
sub
push
add
inc
add
add
loopne
int
rcrl
jo
in
addl
and
scas
aam
xchg
inc
add
inc
add
xlat
xchg
inc
add
ds
mov
adc
movsl
add
push
movb
aad
or
out
xor
in
add
lea
inc
add
lock
mov
add
outsb
xchg
xor
or
add
add
cmp
add
xor
cmp
add
icebp
lret
insb
in
scas
or
add
cmpsb
mov
add
pushf
pop
cli
pop
xchg
rolb
mov
mov
or
add
in
scas
or
lea
faddl
xchg
out
aas
stos
frstor
adc
add
xchg
outsl
mov
xchg
sti
scas
fwait
nop
in
jecxz
inc
add
stos
test
and
xchg
fimull
mov
xchg
and
dec
xchg
inc
add
xchg
dec
sub
jae
mov
ds
add
call
inc
add
add
ss
xlat
in
dec
or
mov
fstpt
mov
mov
jo
jae
mov
mov
xchg
add
and
repnz
mov
aam
aad
cmp
cmp
add
cmp
mov
add
xchg
roll
lock
addl
adc
loop
mov
jbe
mov
jnp
cmp
mov
lcall
mov
roll
or
cmpsl
sub
push
jge
lea
es
lahf
push
pop
mov
push
add
cmpsl
sbb
out
in
xchg
jo
add
sahf
add
adc
int
std
pop
mov
add
outsb
jmp
cmp
jns
pop
lret
cwtl
repz
sbb
push
movsb
test
int
add
iret
rcrb
sbb
mov
mov
dec
fwait
push
mov
adc
test
imul
push
inc
add
push
inc
add
test
das
addl
outsl
lea
and
adc
scas
leave
mov
addl
add
adc
pop
movl
and
mov
es
popa
add
add
add
add
mov
dec
mov
pop
mov
inc
add
fistpll
add
jl
add
outsb
jge
push
or
inc
add
pop
mov
mov
jnp
iret
inc
add
pop
and
add
fwait
add
mov
mov
push
insb
push
add
mov
cmc
cs
jmp
push
out
jmp
add
push
xchg
mov
testl
add
neg
push
pop
xchg
jge
out
jo
aas
inc
add
std
sub
les
push
dec
xchg
push
fnstenv
add
or
lret
add
inc
add
inc
add
movb
dec
mov
addr16
mov
mov
add
jne
shll
sbb
repnz
adc
es
clc
sahf
nop
incl
lods
xchg
adc
hlt
outsb
out
stos
lods
inc
add
mov
mov
popf
std
push
jnp
add
lcall
repz
push
and
mov
mov
daa
mov
roll
movsb
fwait
push
shll
test
pop
sub
and
out
and
aad
add
or
mov
xchg
mov
inc
add
push
add
cli
int
xchg
jnp
add
jns
cmp
push
lcall
inc
add
add
bound
add
lods
sub
inc
add
add
xchg
outsl
je
lcall
jnp
cmp
push
cmpsb
adc
mov
jecxz
pop
push
lcall
data16
es
add
pop
ret
and
stos
mov
push
or
aaa
adc
add
and
std
test
jg
mov
add
push
jmp
adc
sub
push
add
out
add
rol
add
out
or
add
push
aam
test
ds
fdivl
cs
add
fbstp
cmpsb
and
dec
lea
add
das
fs
cld
mov
mov
leave
jns
rcl
adc
add
sub
addb
xchg
push
xlat
cli
loopne
adc
ret
dec
inc
add
cwtl
test
aam
hlt
lret
sbb
jl
mov
add
in
popa
add
jecxz
insl
push
xchg
or
push
add
bound
fwait
out
add
aaa
mov
mov
add
test
fwait
push
cltd
hlt
arpl
inc
add
sub
mov
das
lods
mov
mov
mov
and
ret
add
add
out
dec
lds
add
add
xchg
cmp
add
add
jne
or
addb
loop
popf
fs
mov
xchg
shlb
cmp
xor
mov
arpl
stos
inc
add
popf
pushf
ret
add
das
popa
add
push
bound
mov
mov
pop
dec
cmp
lods
mov
incb
add
fwait
or
arpl
dec
gs
das
push
push
mov
sub
add
ss
outsl
add
lret
pop
lret
jp
je
and
into
fsubrs
inc
add
in
pop
sub
inc
add
add
dec
negb
mov
int
imull
dec
xchg
call
jle
mov
repz
add
cmp
test
and
sub
rolb
inc
add
clc
mov
add
or
add
lods
ljmp
mov
push
or
add
mov
mov
es
cmp
jp
jnp
mov
jmp
add
arpl
test
iret
push
sbb
add
jmp
add
rolb
lcall
add
mov
add
add
jge
and
mov
ja
jo
push
out
ret
add
adc
push
mov
adc
sub
je
adc
in
or
lret
mov
mov
push
cs
test
lods
sbb
mov
mov
mov
test
into
frstor
cs
aam
sbb
stc
jl
shl
lret
lods
adc
add
cld
jge
adc
add
cmp
fcmovu
sahf
add
lahf
bound
xchg
dec
lret
inc
add
ljmp
mov
lcall
add
mov
add
dec
or
add
xor
movsl
lret
out
add
in
push
ficompl
sbb
push
arpl
sub
add
ret
add
mov
pop
ja
mov
lret
addl
gs
in
add
and
mov
cmp
inc
add
sub
dec
pop
mov
inc
add
xchg
xchg
cmp
outsb
inc
add
lods
adc
mov
mov
ss
add
add
std
jae
testb
mov
cld
inc
add
add
das
xor
inc
add
shrb
lcall
add
push
pop
inc
add
mov
pop
cli
add
pop
add
or
lea
call
xchg
hlt
aaa
cld
fwait
adc
add
je
loope
push
ret
add
ficompl
inc
add
jecxz
popa
add
add
adc
loop
jl
adc
mov
mov
fisubrl
cltd
rorl
mov
mov
or
lods
in
aaa
cmp
mov
mov
xchg
dec
or
aad
out
add
shll
repz
xchg
xchg
push
add
leave
push
add
aaa
xchg
pop
ds
ret
jmp
in
loop
sar
int3
in
addb
imul
call
xor
sub
clc
movl
cmp
add
sub
movsl
mov
test
add
and
notb
popf
std
scas
xchg
sbb
fcmovb
add
cli
mov
in
add
push
xchg
sbb
mov
cmp
mov
fildl
add
xor
add
test
jle
inc
add
add
push
xor
stc
pushl
push
add
pop
arpl
cwtl
clc
jnp
incb
stos
dec
xor
push
cmp
jno
in
mov
jbe
xor
add
push
pop
les
addl
cmpsl
rolb
add
add
and
cld
data16
sarl
ret
cli
in
mov
add
roll
or
mov
xchg
fs
pop
jle
jae
jno
pop
mov
loopne
dec
sarb
add
movb
gs
das
jmp
fidivs
mov
xchg
icebp
addl
mov
cmp
outsl
movl
mov
add
xchg
cmc
shr
cltd
stc
xchg
jmp
xchg
das
fildl
pop
add
test
outsb
sub
cld
int
repz
sbb
add
push
out
jmp
and
sarl
jns
push
addb
jge
push
add
mov
mov
add
add
mov
sbb
add
mov
inc
add
pop
sahf
loop
sahf
sbb
mov
pushl
xor
add
jns
add
test
push
addl
xchg
imul
add
add
pushf
dec
out
xlat
xor
repnz
add
stos
mov
add
add
aas
popf
cwtl
add
xchg
xchg
ljmp
mov
bound
out
arpl
xchg
outsl
mov
add
mov
add
fidivs
mov
ljmp
mov
repnz
fscale
mov
inc
add
mov
and
push
sbb
xchg
push
push
mov
je
add
pop
jge
rolb
xor
idivb
roll
mov
insl
sbb
cmp
sbb
mov
js
daa
cmp
test
aas
js
loopne
adc
lahf
inc
add
inc
add
jecxz
xchg
mov
loop
push
je
xchg
mov
mov
mov
iret
push
xchg
mov
ret
lret
xchg
xor
xchg
fmul
test
and
addl
jb
dec
fsubrl
add
js
clc
xchg
push
nop
dec
jp
sub
icebp
push
xlat
sbb
xor
movl
ds
mov
cmp
add
inc
add
negb
adc
sub
emms
roll
jo
pop
sub
add
sbb
mov
add
out
mov
mov
xor
pop
repz
imul
cltd
test
jge
fldl
xchg
pop
mov
adc
push
and
pop
and
icebp
fcoms
add
add
or
add
jb
push
mov
dec
jmp
add
add
jbe
ret
addb
and
mov
and
adc
ret
add
repnz
add
mov
outsb
pop
inc
add
pop
mov
or
add
stos
ficompl
mov
add
cmpsl
push
cs
sbb
loop
out
add
add
mull
add
inc
add
dec
inc
add
add
jg
jmp
add
fimuls
imul
lock
inc
add
roll
mov
xor
push
test
sub
and
lret
xchg
add
jns
aad
add
ds
dec
out
mov
call
in
add
inc
add
jb
cmpsl
jmp
fsubl
in
jecxz
jmp
mov
push
bnd
insb
and
adc
mov
fwait
out
aam
push
ss
in
pop
or
pcmpgtd
cmp
add
addl
add
pop
add
or
inc
add
add
jmp
jno
call
popf
aad
xor
push
mov
fcomp
or
jle
add
iret
mov
insl
imul
mov
jnp
add
pop
movb
add
test
leave
iret
mov
rep
push
add
add
and
push
out
imulb
add
add
add
fstps
add
clc
push
xchg
mov
jp
mov
cmc
call
dec
je
stc
mov
ss
or
jae
addb
or
test
lahf
std
repz
icebp
xchg
mov
pop
movsl
scas
sbb
shll
dec
xlat
push
mov
add
out
test
sub
out
mov
cltd
mov
rolb
dec
movaps
rolb
add
push
add
add
data16
addb
fcompl
addb
add
jg
jne
lahf
rcrl
int
xchg
push
imul
adc
jae
stc
xor
add
ja
mov
or
add
lock
ss
movsb
je
lods
and
pop
int
lods
test
xchg
mov
add
mov
sbb
push
les
call
add
push
nop
dec
mov
add
into
pop
sbb
in
lcall
jp
sub
lock
xchg
gs
push
add
push
add
hlt
fcmovnb
add
jecxz
push
movl
out
shll
mov
nop
insl
cmp
mov
pusha
add
jnp
cmp
clc
jnp
daa
add
dec
addl
int
mov
test
cmc
cld
push
mov
fisttpl
mov
fs
lcall
jp
in
sub
push
jmp
iret
in
out
test
stos
jne
aaa
lods
push
into
xchg
cmpsl
push
cmp
icebp
jecxz
mov
add
cmp
push
aas
leave
inc
add
leave
test
cli
or
inc
add
add
xor
imul
out
imul
nop
stos
xchg
out
pusha
add
test
out
dec
dec
mov
out
insl
mov
filds
loopne
scas
jnp
add
or
fstpt
cmp
dec
mov
mov
adc
ret
add
lods
mov
xor
fmuls
dec
test
fsts
add
add
add
fsubrl
add
add
add
xchg
cmp
daa
add
cmp
push
lods
repz
filds
mov
add
add
add
and
fdivp
adc
pushf
pop
add
es
pop
add
push
cwtl
or
lods
out
lods
stc
cmpsl
cmp
movsl
inc
add
mov
jl
in
insb
mov
jns
jmp
sbb
dec
scas
add
xor
xchg
out
and
jmpw
je
roll
scas
stc
pop
xor
add
scas
dec
or
jbe
outsl
sti
xchg
push
pop
pop
mov
fwait
int3
jae
dec
adc
test
mov
jae
aam
pop
mov
mov
fwait
push
xchg
add
sbb
add
jno
xchg
ds
cmp
xchg
cmp
add
cmp
mov
pop
mov
pop
add
jnp
lods
mov
sub
cmp
sub
popa
add
add
xchg
ljmp
sahf
xor
cli
bound
lds
rol
add
pushf
mov
sub
xchg
bound
fs
add
inc
add
outsl
push
add
jno
sub
fcomps
pop
daa
xchg
and
sahf
xchg
xchg
clc
jmp
add
pop
cmp
pop
add
add
int3
sbb
mov
cmpsb
cmpsb
aas
repnz
push
lret
or
push
mov
hlt
cs
add
fwait
dec
imul
add
push
pop
dec
xchg
push
rcrb
cmc
addl
add
daa
loope
mov
adc
arpl
fcmovu
push
lahf
xor
pop
cmc
icebp
adc
aad
or
sbb
add
add
add
add
aad
out
je
in
and
add
lret
shrb
roll
add
jo
jecxz
and
icebp
sub
arpl
shlb
pushf
mov
sub
jnp
mov
cmc
sahf
shrl
add
bound
mov
add
ret
add
xlat
jle
adc
mov
inc
add
ljmp
jbe
push
xor
mull
jae
adc
ljmp
imulb
out
leave
mov
jo
push
mov
mov
addb
xchg
mov
lahf
cli
mov
std
icebp
mov
add
mov
cwtl
into
test
sub
jg
out
sub
fsts
inc
add
rorb
and
pushf
mov
mov
mov
xchg
push
lret
lret
sub
outsl
sub
or
xor
or
gs
jmp
add
mov
add
lret
bound
mov
out
sahf
daa
jecxz
mov
add
addb
jae
xchg
or
jp
add
imul
imul
notl
push
mov
lcall
fcmovbe
cmp
push
je
int
and
add
push
test
ret
add
les
mov
loope
daa
pop
fldcw
push
fistpll
adc
into
fcomi
mov
xor
cmp
dec
popa
add
dec
add
and
sti
or
xor
dec
mov
fidivrl
add
inc
add
icebp
movl
add
sbb
jns
aad
sub
xchg
icebp
fists
pop
and
pop
jbe
add
mov
mov
jp
add
cmp
lds
call
add
pop
and
cmp
add
jae
xchg
xchg
and
scas
xchg
jnp
add
and
push
fnsave
jb
mov
stos
lods
adc
add
add
ja
cmc
adc
add
and
fsubrl
adc
add
add
cmp
int3
or
mov
xor
mov
add
push
movb
mov
pop
sub
push
or
fs
add
out
add
mov
cli
or
sub
push
add
fimuls
sub
daa
call
add
movl
xor
push
push
fisubrl
sub
adc
loopne
mov
scas
inc
add
stc
outsb
inc
add
minps
cmp
lea
push
lret
add
aas
add
jp
sbb
xchg
addl
stos
flds
inc
add
add
lret
aam
lds
push
dec
sbb
mov
ret
add
dec
adc
fldcw
test
pop
shr
adc
call
sahf
loop
dec
popf
aad
add
int
jle
xchg
sub
sti
cmpsb
mov
pushf
js
test
in
xor
sbb
sbb
leave
mov
jo
je
sarl
jae
mov
pop
or
add
adc
adc
fbld
jne
out
hlt
and
mov
mov
shrl
pop
je
xor
fnsave
addb
mov
fsin
inc
add
pop
mov
dec
adc
les
mov
paddusb
add
mov
jle
mov
sbb
pop
pop
pop
add
mov
lods
bound
push
xchg
cmp
hlt
bound
je
or
or
pop
mov
movsb
sbb
mov
add
and
jge
fsubs
inc
add
js
and
dec
roll
push
mov
mov
lds
jbe
add
xchg
or
std
xor
sbb
dec
jmp
add
sahf
nop
insl
jmp
adc
loop
sbb
add
push
add
pop
loope
push
add
call
mov
cmp
add
jns
shlb
divb
sub
sub
xlat
push
mov
in
ret
add
ret
dec
arpl
jge
or
pop
pop
add
sbb
mov
or
jae
mov
push
int
sub
sub
add
test
cmp
or
cwtl
mov
movb
add
dec
jno
fwait
movl
cmp
in
xor
ret
add
push
jge
movhps
lock
insb
stc
sbb
or
push
push
loopne
cmp
add
out
aaa
inc
add
rolb
push
addb
xlat
cmp
inc
add
add
add
jl
and
mov
xchg
rcrl
pop
loopne
cld
lea
ljmp
lahf
in
faddl
push
add
repz
and
aaa
fstpl
pop
into
jbe
xor
add
rorl
insb
inc
add
ret
jmp
add
cmp
cmp
add
sbb
insb
std
push
push
push
sbb
or
lahf
test
cmp
cltd
inc
add
push
enter
out
nop
adc
mov
pop
mov
std
lret
push
or
test
mov
mov
sub
arpl
jo
xchg
shr
lahf
inc
add
mov
std
cmc
fmull
mov
add
enter
or
shll
dec
mov
add
or
imul
fwait
stc
in
in
scas
push
popf
js
add
por
shll
add
xchg
add
adc
adc
loopne
es
sbb
xchg
sbb
nop
flds
add
jle
into
adc
push
movb
inc
add
add
add
pop
cltd
js
ss
call
add
cmpsl
das
data16
add
pushf
insb
push
test
into
pop
roll
lods
cltd
and
addb
cmpsl
bnd
jnp
bound
call
test
in
sbb
outsb
xor
push
add
aas
daa
sub
scas
aaa
add
addb
enter
movl
into
jge
addl
add
icebp
gs
add
fcomp
repnz
cld
cwtl
sub
bound
cmc
cmp
add
push
testl
add
and
sbb
mov
test
cld
arpl
pop
jnp
jg
xchg
mov
push
jb
add
cmp
mov
add
add
cmc
and
xchg
sbb
cld
stos
bound
pop
mov
push
fdivrs
mov
add
add
or
add
clc
scas
cmc
int
mov
add
inc
add
jecxz
and
cmc
loop
adc
xchg
jle
xor
push
nop
lods
mov
xchg
pop
shll
and
jp
pushf
call
repz
add
add
loop
daa
inc
add
inc
add
fcom
sub
repz
push
add
adc
add
pop
call
add
xchg
push
pop
daa
adc
sbb
sti
fwait
mov
jo
xor
push
sub
je
or
add
add
into
ljmp
clc
cld
add
push
addl
jg
push
add
insb
mov
pushf
scas
add
fdivrs
add
or
addl
insl
leave
push
sbb
dec
sbb
sarl
or
icebp
xor
test
add
mov
nop
insb
sub
push
dec
leave
lret
movsl
ja
add
pushl
add
sbb
jp
pop
mov
sub
jae
movb
jnp
rorl
fists
or
fwait
push
xchg
inc
add
mov
push
add
add
cltd
xchg
icebp
mov
movsl
xchg
sbb
aad
mov
xor
ss
call
xor
fisubrs
add
in
mov
xor
cs
or
mov
mov
lds
or
clc
or
jge
push
xor
fcomi
sbb
jb
pop
and
je
stos
lcall
les
imul
add
stos
pop
cmpsb
push
scas
sbb
or
call
pop
push
push
addl
jnp
rolb
add
in
sbb
sub
pop
stos
xchg
ficomps
push
inc
add
sbb
mov
mov
push
add
rorl
adc
cwtl
test
xchg
push
and
addl
lret
popa
add
push
xlat
sarb
sbb
mov
addb
fbld
add
pusha
add
xchg
fisubrs
cmp
cltd
popa
add
sub
or
jnp
cwtl
adc
add
popl
add
xlat
int3
lret
mov
mov
out
movsl
jg
sub
add
mov
dec
inc
add
shrl
das
add
movsl
sub
cmp
mov
test
jb
mov
cmp
mov
add
add
add
inc
add
fdivrl
xor
ret
add
mov
jmp
sub
jno
jp
add
popa
add
lods
mov
and
imul
or
pop
movsl
loope
pop
ss
sbb
fidivrs
mov
inc
add
xchg
leave
inc
add
insb
fisttpll
push
and
aaa
cmp
jno
icebp
cltd
cltd
imul
scas
jns
add
cmp
sahf
mov
dec
xor
sub
or
cs
popf
scas
inc
add
test
dec
addl
addb
and
bound
movsb
rolb
pop
movb
add
xor
xchg
popa
add
add
mov
xor
fistpll
push
ljmp
das
je
in
movlps
add
dec
es
jl
jmp
sbb
jns
lret
and
inc
add
mov
add
add
imul
sub
jmp
adc
mov
sub
push
mov
push
add
lret
add
add
cmp
push
sbb
mov
js
push
jo
mov
sub
push
mov
cmpsl
dec
cmp
xchg
cli
xchg
inc
add
pop
cs
mov
hlt
xor
add
add
scas
lret
xchg
cmp
loopne
jl
add
adc
scas
or
pop
arpl
cmp
inc
add
daa
mov
test
movsl
bound
push
dec
rolb
leave
or
addb
pop
call
js
int3
cli
das
push
adc
mov
adc
arpl
adc
add
int3
push
out
xor
add
sub
add
fsub
bound
pop
dec
cmpsb
push
add
dec
nop
das
jle
sub
add
add
pop
pop
lcall
stc
das
rolb
push
out
mov
add
adc
xchg
and
testb
add
call
and
sbb
jb
add
xor
jbe
xor
lcall
test
jns
or
xchg
lock
and
ss
pushf
fcos
inc
add
lods
push
cli
and
dec
lods
enter
cwtl
icebp
cmpsb
test
addb
jns
add
add
addl
jmp
add
cmp
cmpsb
mov
push
inc
add
lods
mov
xlat
sbb
mov
and
icebp
roll
sbb
adc
push
xchg
mov
data16
add
int
jmp
ja
cmpsl
int
xor
mov
xchg
cmpsb
int
push
adc
add
pop
daa
das
roll
mov
add
leave
dec
mov
cld
out
sbb
pop
mov
sub
mov
add
lret
fnsave
movl
add
jmp
ret
add
inc
add
add
movsl
fdivrs
aaa
sub
rcrl
dec
xchg
mov
add
xor
add
mov
or
mov
sahf
jge
add
pop
inc
add
xchg
cli
nop
stos
pop
mov
sub
add
xchg
xor
sub
inc
add
add
movb
adc
roll
mov
add
nop
insl
leave
sbb
rol
add
push
sbb
mov
xchg
cmp
add
js
adc
and
pop
ja
xor
out
add
insb
or
cwtl
mov
jle
outsb
jg
das
lea
mov
pop
pusha
add
repnz
mov
add
call
add
cmp
mov
clc
movb
lea
dec
jge
cmp
cmc
sub
add
jne
add
lods
pop
mov
cli
hlt
sub
mov
gs
push
sub
add
lcall
cmp
out
rcrl
xchg
bound
mov
add
add
lahf
popl
sbb
pop
sub
in
ret
add
gs
gs
push
xor
dec
cltd
movb
add
add
iret
mov
add
pop
jl
jae
xchg
cwtl
inc
add
movsl
mov
ljmp
and
lds
pop
xor
add
or
xchg
stos
mov
ret
cs
pop
add
mov
xor
fs
lea
xor
add
cltd
jno
add
inc
add
imul
inc
add
repz
aaa
jae
testl
mov
add
adc
sbb
nop
movsl
lcall
sti
aas
cli
jp
insb
movb
or
xchg
enter
add
cli
push
in
jg
cmp
fmull
ret
add
xor
lret
jg
ja
add
mov
push
sub
fisttps
lret
fistps
push
jb
pop
lds
push
ficoml
jae
add
add
inc
add
add
or
cli
fwait
stc
loope
add
xchg
push
call
aam
mov
into
movsl
xor
call
sbb
add
add
int
add
movl
jnp
aas
push
movsb
mov
add
lret
cmpsb
ss
mov
mov
popf
adc
lock
xor
mov
cld
mov
add
mov
repnz
add
aad
adc
add
sar
in
pop
jne
into
mov
roll
adc
mov
add
pop
mov
jl
dec
popf
out
jbe
lcall
cltd
or
pop
pop
mov
into
popf
mov
add
fs
xchg
cmp
add
movsl
mov
add
jne
mov
lds
xor
std
sub
jp
mov
jbe
add
dec
out
addl
pop
xor
add
mov
scas
fcompl
add
insb
call
sub
mov
movsl
ljmp
add
imul
popa
add
mov
or
jecxz
adc
test
shll
add
and
push
push
or
mov
mov
cmpsb
fbld
dec
adc
cltd
sbb
sti
pop
stos
dec
enter
dec
rolb
test
insl
dec
repz
testb
scas
mov
inc
add
addr16
add
or
popa
add
bound
jno
push
sbb
add
jbe
pop
mov
incl
cmp
dec
mov
add
loopne
add
fs
push
mov
or
push
dec
cmc
popf
or
jnp
mov
add
ljmp
test
dec
sarl
aam
sub
movb
aas
addb
les
jno
push
mov
mov
dec
or
add
add
sarl
rolb
add
mov
sub
lahf
and
dec
jo
add
mov
and
xchg
dec
mov
add
lds
data16
mov
in
mov
cltd
mov
mov
jbe
movsl
scas
fwait
sub
mov
adc
sub
sbb
aam
icebp
imul
and
popa
add
rolb
popa
add
in
add
outsl
lds
sbb
add
cmp
add
sub
test
movsl
repnz
push
adc
negb
fmuls
mov
sbb
sbb
add
and
dec
mov
jecxz
push
ss
xor
add
scas
stos
rcrb
inc
add
sbb
mov
add
jle
int
cmp
out
add
notb
inc
add
dec
ja
xor
mov
add
in
add
les
addb
add
sbb
nop
cmc
dec
out
add
and
xor
mov
add
ja
add
sbb
ja
cmp
jnp
push
cmp
stos
leave
addb
sub
into
scas
jp
rolb
push
cmp
pop
adc
push
add
bound
roll
pop
roll
add
xchg
in
push
out
mov
add
adc
ljmp
out
das
addl
or
jmp
add
ljmp
leave
out
outsl
fldt
out
and
scas
neg
test
idivl
ss
pop
loope
add
divl
mov
xlat
out
mov
sub
ret
add
jp
mov
add
aas
xchg
xor
cmpsl
std
pop
xchg
aam
das
and
push
fisubs
add
and
dec
test
xor
pushf
nop
or
loope
fstps
rolb
add
add
xchg
inc
add
mov
push
loope
lcall
add
pusha
add
adc
lret
lock
and
push
pusha
add
popf
mov
mov
add
adc
cmc
popf
in
sub
and
push
nop
scas
or
add
jg
xchg
add
mov
ficoml
inc
add
xchg
int3
pop
add
add
add
popf
out
push
or
add
xor
push
dec
fs
inc
add
iretw
xchg
mov
aaa
mov
fisubrl
je
cmpsb
inc
add
loop
sahf
cmp
sbb
or
adc
lods
inc
add
mov
les
addl
add
addl
cmp
inc
add
add
out
jne
mov
int3
nop
out
xchg
cmpsb
test
inc
add
in
cli
mov
int
leave
lret
mov
mov
gs
xchg
aas
and
js
movl
clc
call
into
fsubr
dec
cmpsb
sbb
roll
mov
sub
rolb
add
in
pop
cmp
leave
inc
add
je
js
mov
ret
add
mov
aad
fsubrs
xor
mov
lret
mov
addb
shrb
add
inc
add
mov
cmp
and
push
ds
add
mov
add
addl
imull
add
add
lods
popa
add
sbb
aaa
js
add
lock
xor
inc
add
aas
je
add
lods
add
jnp
mov
ljmp
dec
add
sbb
test
mov
push
xchg
jmp
jle
cmp
lahf
and
imul
ficompl
testb
inc
add
add
adc
roll
xor
jno
mov
out
inc
add
cmp
mov
fistl
outsl
mov
add
pop
add
dec
jbe
adc
add
movsb
rorb
movb
sbb
pop
dec
into
cmp
enter
mov
test
js
pop
jnp
das
add
int
leave
add
js
xchg
lds
mov
xchg
xchg
test
icebp
inc
add
push
xchg
jns
pop
popa
add
add
roll
add
add
add
sbb
add
add
add
enter
in
jnp
out
test
cmp
add
cwtl
mov
or
jb
xlat
ja
aas
test
mov
xlat
flds
pop
add
call
or
imul
add
add
mov
pop
mov
lods
cmc
sbb
cld
dec
fwait
lods
addb
xchg
hlt
add
adc
jns
add
popa
add
imul
add
ljmp
fucomp
xchg
stos
addl
test
and
test
test
cmp
add
stos
loope
fwait
dec
sbb
and
push
jb
jne
mov
in
int
stos
arpl
invd
lcall
lea
pop
sbb
rorb
aam
cld
sub
insb
movl
jns
mov
and
cmovne
pop
movb
lds
sbb
xchg
repnz
xchg
push
sub
cmpsb
scas
pop
mov
push
addb
jne
add
psubq
int
enter
push
push
data16
addr16
out
cmp
jge
adc
pop
xchg
push
sti
pop
cmc
or
out
add
add
add
movb
aaa
nop
or
sbb
mov
inc
add
add
fmull
or
sub
repnz
ds
add
addr16
movsl
les
and
int3
cwtl
sbb
push
arpl
lds
mov
loopne
stos
test
mulb
addr16
dec
das
adc
addr16
mov
sub
cmpsb
ja
fsubrs
sarl
xlat
insb
pop
insl
adc
pop
cs
pop
mov
add
add
ds
rcl
jae
out
push
push
imulb
in
jo
sub
mov
mulb
add
loopne
enter
cmp
add
xor
call
add
and
stc
mov
add
test
fsub
test
addl
dec
or
jns
stos
sub
shlb
negb
cmpsb
push
and
mov
scas
pop
stos
xchg
xchg
or
sbb
addr16
jmp
bound
std
aam
mov
add
add
imul
cmc
mov
cltd
je
pushf
mov
pop
inc
add
stos
push
add
js
dec
mov
filds
mov
icebp
pop
dec
nop
dec
imulb
jecxz
imul
add
dec
dec
mov
add
add
sbb
mov
fcompl
pop
jmp
movb
push
xor
inc
add
test
cmpsl
ss
into
mov
fcomps
fisubl
adc
jl
cmp
inc
add
scas
xlat
mov
cmp
sub
loope
lds
movl
addb
pop
movb
sbb
stc
movb
fistl
mov
sub
add
lahf
or
add
cltd
and
enter
adc
lods
out
pusha
add
jp
rolb
add
pop
testl
push
mov
add
std
dec
jo,pt
cld
push
ljmp
movsb
leave
add
pop
sub
and
xor
addr16
cwtl
popa
add
insl
dec
ret
or
addb
adc
add
push
repz
add
fimuls
push
outsl
les
imul
cmp
add
and
or
dec
xor
add
pop
add
mov
cwtl
add
xlat
jecxz
lahf
in
test
fldl
stos
or
clc
push
add
jl
jge
push
jae
pop
imulb
add
xchg
jmp
cmp
jl
imul
mov
test
adc
xchg
fwait
call
test
mov
cmpsb
sub
addr16
or
add
add
scas
adc
mov
xchg
in
testl
fstps
addl
add
cltd
xor
mov
js
jl
mov
push
add
push
sub
xchg
xchg
into
mov
in
mov
stos
jbe
je
jmp
add
and
addr16
add
or
imul
daa
inc
add
pop
in
jge
mov
jle
in
mov
pop
xchg
ds
fcmovnbe
ljmp
add
xchg
mov
arpl
mov
dec
test
mov
ror
movl
iret
cmp
add
add
pop
mov
add
fnstsw
add
inc
add
ret
add
xor
add
mov
pop
movsb
xor
add
xchg
push
add
in
lcall
lods
bound
sbb
js
out
adc
mov
add
jno
daa
fs
cld
sahf
insb
repnz
punpckhdq
addl
pop
in
das
aam
arpl
insl
sti
dec
adc
inc
add
sub
data16
adc
mov
rcrb
mov
push
movsb
dec
sbb
add
jle
lret
in
cwtl
movb
push
pop
cmp
push
cs
jmp
add
inc
add
sub
cmp
lock
test
pop
mov
lods
dec
adc
push
mov
lret
fisubl
mov
push
jnp
sbb
mov
cmp
mov
push
cmc
test
mov
push
pop
add
add
pop
adc
dec
insl
aaa
sbb
fdivrs
mov
and
cmc
popf
and
ja
repnz
stc
nop
pusha
add
mov
shl
adc
push
fnstsw
lds
popa
add
repz
ss
cli
jge
jnp
xchg
jl
add
push
fmull
add
add
and
std
nop
jae
xchg
mov
divb
xor
add
sub
inc
add
test
sbb
add
out
inc
add
movsb
sub
daa
sbb
int
cwtl
mov
loope
xchg
push
rolb
fdivp
inc
add
push
cmp
lahf
ja
sub
out
or
sbb
jle,pn
pop
fwait
sbb
adc
xchg
movb
test
in
dec
and
movsl
dec
inc
add
adc
mov
add
ja
jg
les
testl
add
clc
sbb
xor
mov
jne
sbb
ds
pop
inc
add
das
dec
cmp
push
add
pushf
adc
add
push
pop
ret
add
and
inc
add
inc
add
and
int
popf
jmp
cmp
shll
jle
rol
add
call
icebp
mov
add
fisubrs
xor
lds
pusha
add
ret
add
dec
pop
push
xchg
hlt
mov
test
outsb
xchg
roll
and
mov
cmc
mov
inc
add
lret
push
clc
jo
ja
adc
add
lock
in
movl
jns
add
add
inc
add
add
out
or
hlt
mov
pop
mov
add
test
xchg
lods
roll
fildll
or
mov
je
xchg
dec
xchg
scas
xchg
or
cmp
jns
scas
cs
sbb
data16
add
cmp
push
adc
inc
add
imul
nop
jg
mov
lock
dec
inc
add
sbb
mov
in
add
add
movsb
cld
mov
pop
xchg
roll
jge
add
cltd
mov
xor
fs
leave
lock
cltd
dec
loop
add
jg
or
or
sub
je
cld
xchg
jns
sahf
fists
inc
add
sbb
xor
dec
inc
add
mov
arpl
enter
mov
mov
xlat
outsl
inc
add
add
test
jb
sbb
imul
mov
lcall
int3
rcrl
cmp
inc
add
js
or
xchg
popf
bound
addl
add
leave
inc
add
sahf
movsl
iret
movb
or
jge
xchg
adc
clc
push
pop
and
mov
add
ja
jns
or
cwtl
cmpsb
add
jge
add
push
out
test
std
push
add
cmp
flds
in
ljmp
xor
loope
push
add
push
jno
cmp
aas
jb
mov
std
push
out
add
or
pop
sub
add
add
stos
xchg
in
movsb
cltd
sti
and
add
pop
xor
mov
mov
jle
outsb
mov
int3
inc
add
lcall
lahf
fistps
mov
mov
cld
movb
std
fprem
fcoml
push
jae
add
add
mov
xor
add
fwait
sub
push
jge
inc
add
daa
cmp
lods
and
sub
add
sub
xor
jae
add
cmp
xchg
fstpl
xchg
outsl
movl
jo
or
in
add
call
out
dec
lds
and
cmp
sbb
lods
push
lahf
adc
push
inc
add
sbb
leave
cs
sbb
cmp
aaa
movl
adc
xor
std
popf
add
jge
add
roll
cmp
pop
pushf
movl
movl
rcrb
add
mov
test
xchg
xchg
aam
push
movb
push
scas
cwtl
jbe
jl
push
repnz
aaa
je
fwait
sub
test
sub
push
loope
imul
repnz
bound
jbe
inc
add
add
cld
lcall
test
in
add
pop
xor
mov
sbb
cmp
aaa
mov
clc
fs
sub
mov
add
push
inc
add
jl
sti
jae
add
xchg
rolb
outsl
mov
mov
mov
into
les
inc
add
dec
fiadds
push
cli
xchg
xchg
add
addl
bound
faddl
cmpsb
movl
int
call
movsl
push
lock
jg
icebp
inc
add
data16
and
inc
add
testl
outsl
and
mov
test
addb
pop
add
push
mov
mov
adc
out
adc
add
add
cld
imul
cmp
cmpsb
outsb
cmpsb
and
adc
int3
movsl
adc
dec
xor
shr
xchg
xchg
in
inc
add
adc
shl
and
fst
xor
add
add
in
xor
aam
push
sub
add
scas
loopne
rclb
ret
add
fldlg2
xchg
fstps
xor
mull
push
arpl
pushf
sahf
addb
xchg
repz
std
xor
dec
int
or
add
movb
add
mov
mov
dec
in
push
popa
add
add
add
inc
add
jae
and
idivl
pop
fcoml
inc
add
test
in
inc
add
fldl
sbb
add
ret
dec
dec
js
dec
adc
fdivrl
daa
push
add
dec
pop
jne
cs
es
les
mov
insb
loope
xchg
repnz
andnps
sub
sbb
addl
mov
in
leave
pushf
mov
add
add
mov
pop
xchg
cli
sbb
inc
add
add
loope
inc
add
mov
push
add
add
clc
and
pop
add
lds
int3
lock
lock
jne
mov
enter
mov
sbb
adc
addl
cmp
push
jae
bound
in
xchg
sbb
sbb
cmpsb
xchg
mov
inc
add
add
add
into
cld
inc
add
icebp
pop
add
jmp
jp
lret
scas
jp
mov
rolb
cs
xor
clc
cmp
in
sub
nop
or
and
add
mov
arpl
and
cmp
addl
icebp
inc
add
movsl
fldenv
add
dec
or
add
add
sbb
jge
call
add
xchg
mov
xchg
insb
std
test
add
add
dec
arpl
das
ljmp
pusha
add
xchg
roll
ja
sahf
hlt
ja
idivb
add
sub
adc
lock
add
rolb
rcrl
mov
inc
add
cmp
or
or
data16
dec
push
xchg
mov
cmp
sbb
mov
repz
or
jbe
movb
es
mov
sub
add
out
addb
xor
add
pop
fstps
jo
movsl
pop
cmpsl
sbb
mov
jo
ret
mov
lds
dec
test
or
ss
movb
mov
mov
jmp
cltd
add
pop
or
shll
sbb
cmp
mov
dec
xchg
push
pop
push
pop
add
mov
push
test
add
cs
cld
in
cmp
xor
call
xor
xor
cmpsb
loopne
pop
hlt
mov
adc
fbstp
add
mov
ljmp
add
xchg
mov
int3
mov
adc
xchg
cs
sbb
push
and
movb
fistpl
clc
bound
in
add
frstor
push
mov
add
fdiv
daa
inc
add
sbb
mov
pushf
mov
xor
int3
leave
cmpsb
cltd
mov
xchg
inc
add
xlat
inc
add
sbb
mov
add
xlat
mov
int3
insl
cmpsb
pop
mov
test
lods
jge
mov
mov
aas
hlt
ret
add
shr
sahf
or
test
in
dec
mov
pop
loop
sub
add
rcll
and
xchg
or
cli
dec
rolb
add
cmp
sub
cmp
push
push
mov
les
inc
add
add
jb
jo
add
dec
sbb
xlat
inc
add
in
inc
add
out
nop
and
mov
movsb
movsb
sub
insb
arpl
mov
sub
add
sbb
xlat
stos
out
rcll
out
add
push
or
inc
add
add
loope
add
push
xchg
icebp
fcomip
arpl
test
addb
cld
shrb
pop
jl
mov
add
fnstsw
mov
push
dec
mov
add
aaa
xor
je
add
mov
scas
add
mov
jno
je
addl
inc
add
or
sbb
add
mov
push
add
jne
add
mov
movl
dec
jmp
push
roll
mov
pop
or
bound
mov
add
mov
xlat
inc
add
sti
mov
mov
in
data16
sub
pop
loop
cld
sbb
add
and
push
enter
out
aaa
addl
enter
cmp
pop
inc
add
inc
add
stos
decb
nop
aad
or
adc
pop
fsub
mov
add
loop
cltd
sbb
add
pop
push
clc
popf
sub
fbld
aas
push
mov
dec
pop
sub
popf
dec
inc
add
jl
negl
lcall
add
test
leave
and
jl
add
outsl
bound
addb
mov
add
pop
repnz
add
xor
add
movsb
test
fwait
iret
out
mov
out
imul
add
in
les
in
sbb
pop
cmpsl
addb
je
xchg
xor
fsubs
push
mov
cmp
fs
dec
addb
add
jle
add
pushf
mov
sahf
dec
ret
add
cld
xchg
xchg
gs
cmp
in
sti
sbb
ret
out
imul
int3
decb
js
mov
fdivrp
pop
xchg
bound
add
rolb
jbe
mov
xchg
sub
addr16
sub
fwait
addr16
clc
fs
xchg
in
add
adc
mov
outsl
rcr
rorb
dec
push
daa
jno
sti
and
shll
sbb
or
push
mov
cmp
imul
add
add
scas
or
arpl
pop
test
pop
jb
sarb
lea
inc
add
aam
cmp
add
add
jnp
fisubrs
int
cmp
dec
int3
lds
mov
lcall
loope
add
pusha
add
mov
push
jmp
in
in
xor
out
add
xor
add
lret
cmp
movb
mov
add
push
add
add
je
add
add
mov
mov
xchg
iret
iret
in
testb
sbb
les
test
mov
add
jge
repnz
jmp
add
rcll
add
lret
add
cltd
xchg
jge
adc
mov
sti
daa
add
mov
adc
out
pop
push
lcall
mov
daa
sbb
add
push
and
gs
test
std
xchg
stos
shll
or
cmpsl
int
push
push
pop
aas
pop
jp
mov
jg
loopne
bound
push
xor
inc
add
jae
and
mov
stos
mov
movsb
dec
xlat
fildll
cli
xor
add
aad
mov
xchg
push
add
pusha
add
add
les
jg
nop
mov
cltd
roll
lret
push
cmp
ficomps
cmpsl
ret
cmp
insb
aas
popf
lret
aad
sbb
roll
test
ja
mov
test
out
push
mov
add
test
outsb
inc
add
fs
sahf
in
xor
stc
insb
xchg
jl
and
jne
stc
sub
and
nop
imul
cmp
sbb
jno
xchg
daa
fstpl
rolb
add
aam
adc
add
cwtl
xchg
or
mov
mov
clc
or
movl
nop
je
jne
push
add
cmp
int3
jmp
dec
mov
lret
insb
lods
xchg
inc
add
lret
and
or
add
xor
adc
inc
add
lret
addl
add
ja
cmp
push
xchg
lds
jle
in
push
inc
add
dec
inc
add
sub
sbb
stos
int3
in
es
mov
movb
sahf
icebp
icebp
std
and
or
arpl
push
jnp
add
adc
or
leave
ja
fwait
mov
sti
xchg
or
add
mov
aaa
xchg
sarl
add
add
mov
test
cld
xchg
fmuls
ljmp
sbb
pop
xchg
and
stos
roll
sarl
adc
pop
add
add
adc
dec
pop
add
add
dec
and
pop
lahf
or
fcomps
aas
into
mov
dec
shl
cmp
lret
arpl
mov
mull
add
ja
jmp
lahf
adc
lds
cmp
clc
inc
add
push
aas
jge
addl
addl
jge
leave
inc
add
adc
sub
add
stos
test
pop
rclb
mov
add
push
inc
add
mov
cmpsb
push
mov
aam
cltd
js
add
add
shl
mov
add
push
add
mov
push
aas
xchg
dec
ds
arpl
pop
leave
pop
push
test
dec
out
aas
bound
jns
cmp
add
mov
cltd
iret
cmpsb
test
add
add
stc
mov
sti
inc
add
xor
add
lds
scas
dec
fcmovnbe
add
cmp
movl
sub
add
loope
add
push
arpl
mov
sti
or
out
add
jns
fistl
mov
add
push
faddl
lahf
mov
loope
inc
add
add
jp
pop
popa
add
xchg
into
or
mov
repz
pop
xor
xor
jmp
cli
mov
sbb
ror
loopne
loopne
xor
cli
cmp
mov
mov
stos
push
inc
add
inc
add
add
xchg
xchg
jge
add
fsubl
jns
mov
fisubrl
je
xor
jne
jo
addb
push
rclb
add
dec
adc
sub
and
or
sahf
mov
cltd
scas
imul
sub
out
add
out
pop
ja
das
mov
and
test
leave
fldt
add
in
xchg
out
mov
lret
jge
xchg
pop
pop
aaa
and
jmp
addl
outsl
xchg
xchg
popf
pop
xchg
pop
dec
je
movsb
mov
enter
xor
add
add
cmp
in
xchg
loope
jns
icebp
bound
int3
movsb
sbb
in
cmpsl
hlt
iret
jecxz
scas
pop
test
mov
sbb
aad
and
js
pop
add
in
add
pop
into
push
add
adc
jno
add
mov
xlat
or
sti
sbb
insb
and
dec
int3
mov
mov
fiadds
dec
iret
xor
add
and
sbb
xor
popa
add
mov
js
sbb
inc
add
je
mov
and
mov
insl
das
repz
push
jae
add
in
add
rolb
jle
jmp
in
xor
sbb
js
loopne
repnz
pop
and
cmp
imul
add
les
cmp
sti
movb
jns
add
xchg
jp
add
add
dec
sub
sub
sbb
push
add
sub
lret
or
and
inc
add
ret
int3
movl
and
sbb
jns
mov
das
or
cld
sbb
cmpsl
lcall
jp
dec
push
scas
ret
hlt
test
test
push
ret
lret
add
stos
imul
rclb
pop
jge
in
push
cld
jg
and
test
fisubrs
pop
add
add
je
addb
sbb
repz
add
je
jmp
add
add
movsb
push
or
rcrb
push
ljmp
add
test
push
mov
ficoms
jle
xchg
mov
add
pop
and
test
pop
mov
into
jmp
lods
mov
arpl
addr16
ret
add
dec
std
mov
idiv
sbb
jbe
jno
test
mov
jno
icebp
addb
add
pop
lods
scas
notl
add
xor
add
add
outsl
mov
jo
bound
loopne
add
test
lock
lods
pushf
rolb
jmp
lds
shll
jo
adc
out
loope
leave
jbe
mov
aad
add
add
mov
sti
mov
test
jg
adc
int3
push
mov
add
sbb
cltd
jg
fs
pop
dec
aas
daa
mov
into
call
imul
rolb
in
and
mov
inc
add
stos
ja
into
mov
addl
fbstp
sub
lret
jns
add
xor
and
arpl
negl
lds
fwait
out
jmp
mov
lds
mov
mov
and
scas
pop
xchg
rcl
mov
test
mov
popf
sbb
or
push
insb
xchg
ljmp
mov
jne
push
in
jne
add
call
add
insb
fimull
mov
mov
gs
addr16
stos
es
addr16
fwait
xlat
rol
add
aad
push
mul
in
clc
xchg
mov
jge
cmp
shlb
sbb
xchg
push
cmp
add
sbb
stos
cltd
or
mov
ret
insb
mov
mov
add
cmp
cmp
enter
pop
push
lds
adc
add
jae
bound
push
inc
add
xchg
je
leave
out
mov
cmc
jae
popf
mov
xchg
or
add
push
xchg
out
loopne
insb
pop
mov
loope
lahf
cmc
and
pop
in
adc
add
mov
add
adc
cmp
adc
pop
jl
xchg
std
pop
cmpsl
movsb
pop
add
addr16
fwait
push
push
hlt
sbb
or
push
mov
aam
lods
rolb
xlat
stos
or
imul
sub
clc
mov
addb
loopne
icebp
mov
push
dec
xchg
inc
add
pop
add
pop
sbb
jne
mov
in
loope
imul
jns
jb
call
aam
and
xchg
sub
lret
addl
dec
push
lahf
mov
sub
std
fwait
xor
pop
test
add
lcall
lea
or
dec
sbb
addl
cwtd
int
pop
adc
add
add
add
add
sbb
xchg
std
xor
add
add
das
les
or
iret
je
loope
sub
roll
xor
xchg
fs
add
mov
aam
add
xor
mov
cmp
movsb
repz
add
or
pop
lods
pop
das
decl
jle
aas
push
sahf
ficoml
push
jno
jno
xor
data16
les
shrb
cmp
lret
push
movb
mov
inc
add
push
add
mov
fwait
out
dec
pop
fisttpl
cmp
mull
jnp
add
jne
mov
aaa
divl
into
dec
dec
push
mov
ja
mov
dec
xchg
addb
inc
add
cmp
mov
or
jmp
fs
insb
ja
add
push
sahf
addl
mov
add
je
js
add
or
xchg
xchg
icebp
mov
movb
inc
add
add
add
and
daa
addr16
mov
jmp
push
icebp
fisubl
add
cld
and
aaa
sbb
add
add
xor
iret
jnp
out
ret
add
cmp
sub
fldln2
jg
xchg
adc
cmp
xor
in
divl
rolb
pop
lret
repnz
xchg
daa
lds
lea
inc
add
ljmp
mov
add
pop
mov
add
and
push
sahf
jns
mov
add
mov
sub
add
sbb
dec
call
leave
addl
and
movsl
fwait
clc
sub
xor
shrl
cli
shlb
mov
retw
add
popf
push
lods
jnp
lds
loopne
xchg
imul
sbb
test
or
jge
add
scas
bound
xchg
push
add
fcomps
addr16
inc
add
fmulp
movb
inc
add
fmull
aad
in
inc
add
dec
mov
add
roll
xchg
add
mov
out
and
popf
or
movb
add
lea
jo
and
mov
mov
jle
fidivrl
add
and
adc
stos
fdivl
add
mov
xor
repz
jb
add
pop
ret
xor
push
xchg
jno
fstps
dec
inc
add
cmp
movb
push
inc
add
xchg
ret
add
loopne
mov
leave
cwtl
mov
mov
mov
sahf
loope
sub
in
jb
mov
add
add
arpl
fcomi
xor
addb
js
or
mov
sbb
dec
xchg
xchg
mull
in
adc
addl
add
dec
loopne
test
add
sbb
sub
add
pop
lods
je
lahf
dec
mov
addb
cmpsl
movsb
aam
mov
push
bound
mov
hlt
sub
insb
or
movsb
movsl
jl
pusha
add
add
xchg
lret
add
ja
lcall
incl
adc
lods
insb
or
repnz
test
jnp
test
roll
or
outsl
add
mov
sahf
mov
push
cltd
sub
pushf
addl
mov
out
mov
sti
xchg
and
sahf
pop
mov
and
call
inc
add
mov
jnp
add
sub
popa
add
jmp
cmp
shlb
rclb
jb
mov
mov
in
sub
inc
add
add
out
roll
out
and
xor
add
outsb
movb
aaa
sbb
les
push
loop
pop
es
cltd
or
mov
lret
lds
jo
add
and
and
lret
cmpsb
sub
push
add
xchg
js
gs
hlt
addr16
add
add
mov
add
aam
mov
add
xchg
hlt
js
mov
xchg
mov
or
add
add
add
sub
dec
sub
add
pop
sub
or
stos
std
push
dec
mov
testl
sub
add
add
jge
std
icebp
js
pusha
add
pushf
or
lods
fistps
xchg
push
outsl
addl
pop
add
mov
mov
add
in
cwtl
cwtl
in
outsl
pop
frstor
mov
dec
push
add
pushf
sub
test
test
jne
add
adc
or
dec
in
hlt
add
add
fists
stos
push
mov
pop
je
add
mov
cld
std
gs
add
add
in
lcall
push
add
fs
jle
sbb
ficoms
adc
in
or
xchg
outsb
les
inc
add
dec
sbb
scas
movsb
out
add
adc
add
mov
add
loope
pop
sbb
mov
add
xchg
pop
data16
shll
mov
loope
movsb
and
lock
out
out
jo
or
push
je
inc
add
and
mov
mov
xor
pop
outsl
fimull
lret
mov
clc
loopne
mov
add
pop
add
add
nop
loope
mov
cmp
nop
jb
add
mov
je
add
das
cmp
xor
add
rcrl
addl
add
bound
in
add
push
mov
add
roll
daa
addb
in
inc
add
add
inc
add
push
mov
insb
enter
movl
pushf
js
add
es
fnstsw
cli
inc
add
pop
or
mov
mov
push
add
mov
enter
add
add
cmp
insl
rolb
add
mov
push
loope
jbe
add
aaa
lods
cwtl
xchg
push
lcall
add
push
insl
js
out
ret
add
in
ret
lea
and
out
pop
in
mov
out
rolb
jmp
add
or
test
push
pusha
add
mov
dec
pop
mov
mov
or
add
bnd
add
addl
add
push
adc
data16
addb
nop
inc
add
pusha
add
sbb
inc
add
add
lret
fsubs
in
mov
jae
dec
scas
loope
out
mov
cli
cwtl
insb
cld
pop
addl
add
jle,pt
push
cmp
inc
add
sbb
jmp
mull
add
fsubrl
ret
das
and
add
inc
add
add
aaa
adc
cli
mov
add
cmc
out
into
pop
pushl
mov
push
movsb
and
mov
cmp
pop
adc
add
inc
add
add
lds
dec
popf
rcrb
add
sub
push
stos
out
call
fldl
hlt
test
pop
sbb
or
push
jle
mov
xor
out
jb
mov
sub
jg
test
inc
add
jg
icebp
sbb
add
mov
movb
cmpsb
add
mov
and
sbb
adc
xor
pop
push
pop
lds
and
lds
jns
push
add
sbb
jno
add
test
je
cmpsb
popaw
add
cmp
add
sbb
mov
add
outsb
in
lods
int3
jg
push
mov
add
roll
push
push
mov
xor
inc
add
daa
mov
inc
add
movsl
call
cwtl
leave
jle
fildll
outsb
loop
and
xchg
pop
mov
mov
push
loopne
pushf
sbb
xchg
pop
movb
xchg
aad
add
repnz
fstpt
mov
js
ss
push
icebp
pop
sbb
cld
icebp
inc
add
pop
repz
pop
arpl
xor
scas
jecxz
add
nop
fistpl
test
xchg
push
mov
cwtl
lods
cmp
mov
hlt
mov
add
leave
jp
xchg
sub
cmp
add
decl
add
pop
lcall
out
add
sbb
add
add
scas
mov
add
add
fisubrl
movl
or
xchg
jge
mov
dec
add
js
add
ljmp
adc
sub
fmuls
push
imul
outsl
pop
int
add
mov
sbb
pop
ret
add
jnp
pop
push
movb
test
mov
pusha
add
add
add
xor
mov
imul
mov
fstpl
insl
or
adc
jle
add
std
fs
mov
adc
cmc
pop
sbb
loopne
fisttpl
popf
jbe
jle
xchg
dec
xchg
lods
mov
cmp
mov
dec
mov
adc
outsb
test
xor
roll
mov
stos
lea
lea
add
cltd
push
scas
mov
pop
sahf
push
sbb
cmpsl
popa
add
pop
inc
add
adc
pushf
push
dec
scas
mov
repnz
add
add
jae
adc
das
test
fiaddl
in
sbb
icebp
pop
add
shlb
cmp
push
add
inc
add
je
addl
sbb
push
das
stos
jns
imul
popf
fisubrl
push
jle
jne,pt
adc
divb
mov
lds
or
pusha
add
movsl
push
sti
xchg
add
mov
add
mov
jg
push
pusha
add
jecxz
mov
xor
imul
jp
xor
cld
cmc
lods
sbb
mov
add
mov
pop
insl
aam
addb
cmp
es
in
lret
push
add
loopne
sub
and
js
outsb
sahf
incb
std
add
mov
stc
sbb
xchg
add
testb
xchg
pusha
add
out
addl
sub
jnp
jp
add
jae
fs
inc
add
or
mov
fistps
ficompl
sti
mov
addl
xchg
jecxz
rcr
loopne
add
test
xor
add
add
add
xor
push
add
add
insb
sbb
mov
ss
rolb
lcall
add
pop
mov
inc
add
adc
add
cmp
and
push
cwtl
xor
ss
push
movl
enter
inc
add
mov
xor
int3
sbb
pop
add
adc
add
pop
pop
in
xor
add
add
jne
movl
add
add
add
