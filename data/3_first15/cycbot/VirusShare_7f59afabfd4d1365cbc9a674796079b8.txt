lds
fiaddl
add
mov
addb
push
ret
pop
mov
out
push
pop
repnz
pop
sbb
xor
xchg
fcoms
add
in
lret
in
rolb
mov
push
add
xchg
sbb
mov
cs
movsb
or
add
sbb
xchg
imul
pop
mov
pop
aaa
mov
jno
dec
clc
mov
lcall
sub
lea
inc
jl
lea
add
dec
incb
aam
fisubs
add
push
test
mul
test
mov
jge
add
movsl
fstpl
rolb
mov
inc
jmp
xchg
inc
adc
out
out
or
lahf
sub
fstpt
mov
imul
int3
loope
lds
jmp
cli
push
cs
mov
mov
mov
push
pop
pushf
add
cmpsl
popa
mov
imul
enter
mov
fldl
lea
xchg
das
repz
aaa
das
imul
sub
mov
lock
adc
fwait
mov
or
push
aad
jo
mov
xor
mov
stc
jnp
lock
jle
mov
sub
ja
sbb
add
bound
mov
imul
add
jns
xor
add
mov
add
jbe
mov
mov
lods
and
dec
xchg
xchg
and
cmpsl
jl
test
jp
push
movsl
scas
sahf
stc
jecxz
dec
add
mov
mov
add
mov
cmp
stos
push
jge
inc
push
and
sub
mov
adc
dec
adcl
adc
mov
push
add
dec
xlat
xor
scas
mov
stos
data16
unpcklps
jo
mov
ret
cld
adc
inc
in
mov
adc
mov
or
push
and
lret
jae
out
cwtl
gs
xchg
xchg
sbb
cmp
xchg
enter
cs
ret
jp
sub
add
pop
aas
mov
dec
sahf
daa
repnz
mov
mov
das
or
add
add
cld
sti
add
div
add
mov
ror
lods
mov
jg
ret
mov
mov
mov
test
dec
pop
popf
jle
and
mov
add
jo
mov
aaa
gs
add
xlat
add
mov
xlat
and
mov
ds
cmp
push
scas
out
sbb
test
fistpll
cmp
add
cmp
dec
inc
repz
sub
push
add
mov
fwait
data16
dec
pop
xlat
adc
data16
inc
imul
push
add
cmp
ret
pop
add
scas
daa
push
imul
scas
xchg
and
addb
decl
incl
lods
adc
jp
dec
lock
sub
sbb
push
xchg
xor
ljmp
push
mov
pusha
add
mov
add
or
add
sbb
adc
xchg
add
loopne
mov
xor
sbb
jns
test
cmpsb
cmp
sbb
sub
pop
fdiv
hlt
in
pop
mov
cmpsl
push
add
add
jb
mov
or
add
test
sbb
dec
or
add
and
lcall
cwtl
xor
adc
add
pop
ss
jbe
je
push
mov
adc
mov
jecxz
add
icebp
push
in
icebp
shl
adc
mov
xchg
add
dec
and
mov
push
jg
sub
xchg
addb
cs
add
js
pusha
add
pop
sbb
push
mov
ficompl
mov
icebp
decl
add
add
add
mov
daa
pop
cli
cmpsl
sbb
shrl
xor
add
mov
add
pop
xor
mov
cmpsl
dec
or
mov
nop
add
pop
or
mov
add
add
xchg
fldenv
inc
push
out
mov
sbb
push
dec
sub
pop
add
mov
int3
rolb
mov
xor
jmp
add
add
mov
je
jmp
into
ja
adc
mov
add
add
pop
rol
pop
pop
in
push
add
mov
or
adc
loopne
mov
cmp
mov
pop
lods
insb
lods
push
jecxz
push
stc
xor
push
out
arpl
fbstp
adc
mov
jge
cmp
bound
mov
hlt
adc
mov
mov
imul
mov
lret
cmp
add
lds
add
rolb
mov
sub
addb
mov
mov
add
push
and
in
jge
add
repz
xchg
enter
or
xlat
lahf
mov
add
add
add
add
xorl
dec
xchg
inc
mov
mov
add
mov
mov
adc
scas
ss
mov
popa
mov
mov
sbb
sub
push
mov
sub
push
push
push
push
push
push
cld
call
add
es
mov
movzbl
cmp
ss
push
call
mov
cmp
je
es
lea
cs
sub
mov
push
es
call
test
jne
jmp
leave
push
es
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
nop
lea
lea
sub
add
mov
sub
sub
push
pop
push
je
jmp
add
add
int3
lods
test
in
mov
mov
mov
stc
xchg
mov
stos
mov
aad
mov
push
pop
mov
mov
ljmp
push
sub
or
or
dec
ret
je
push
test
mov
data16
push
cmp
add
int3
ret
lret
pop
push
dec
inc
lods
insl
inc
nop
add
mov
add
and
inc
js
mov
mov
mov
xchg
sub
popa
decl
adc
mov
test
push
jle
add
cmc
enter
cmp
lods
adc
mov
or
sub
add
sti
repnz
imul
lock
add
add
ret
lods
pop
xor
jle
push
lds
ljmp
push
push
inc
leave
xor
mov
mov
jnp
push
mov
mov
and
mov
ja
add
add
arpl
leave
xchg
sbb
pusha
add
scas
shll
addb
das
loope
add
add
nop
add
mov
sbb
das
std
sub
add
mov
cwtl
cmc
push
dec
push
fwait
pop
test
addr16
cmc
push
cmp
mov
movl
mov
add
sub
mov
xor
movsb
adc
lret
sbb
cmpsl
bound
mov
das
filds
mov
bound
mov
lcall
or
xchg
fwait
mov
mov
sbbl
adc
mov
push
add
add
repnz
decb
outsl
mov
and
sahf
pop
inc
insb
mov
pop
stos
xor
orl
jmp
pop
jb
mov
jno
fs
call
inc
insb
ss
ret
test
out
mov
mov
add
xor
mov
xchg
add
add
xchg
idivb
jle
mov
add
popf
mov
lea
jl
xor
adcl
lea
fldt
sub
fs
add
jmp
add
std
sbb
dec
push
add
mov
sbb
fisubrs
mov
jnp
mov
aas
mov
cmpsl
mov
mov
lret
xor
mov
xchg
pop
lret
ftst
sbb
sbb
mov
add
push
jb
mov
notl
add
jmp
rolb
hlt
in
mov
test
movsb
out
add
mov
mov
sub
and
addb
mov
adc
push
add
sbb
add
inc
sub
inc
add
add
cld
popl
inc
popf
ss
cmp
xchg
mov
mov
mov
xor
in
mov
dec
mov
clc
ret
xchg
jno
inc
mov
mov
rolb
mov
test
lods
int
push
xchg
xor
add
lret
ds
ret
cwtl
jle
pop
sbb
add
dec
rolb
push
add
and
mov
push
add
xor
pop
jno
lods
adcl
mov
and
mov
add
xor
mov
mov
mov
ret
push
mov
hlt
es
sub
stos
pop
xor
adc
mov
cltd
aad
insb
inc
add
push
inc
and
add
add
loope
roll
add
sub
pop
cmp
jl
rolb
mov
xchg
add
mov
leave
or
sbb
fldl2e
hlt
int3
and
mov
das
or
lods
or
jp
sbb
rolb
mov
add
dec
fdivl
clc
addb
mov
jns
add
out
inc
and
jae
inc
pop
adc
inc
push
add
sbb
popa
dec
dec
pop
or
leave
lds
sub
rorl
jg
ss
add
inc
imul
out
lods
insl
inc
push
xchg
sub
push
pop
xor
xorl
data16
mov
mov
nop
add
push
add
dec
jb
mov
loop
mov
mov
push
mov
lret
sbbl
mov
or
arpl
mov
je
add
push
add
mov
add
pop
ljmp
xor
mov
push
and
in
ds
pop
data16
mov
xor
int3
xchg
pop
ja
fld
lds
mov
jb
mov
insw
scas
inc
bound
mov
out
ljmp
mov
add
punpcklwd
scas
test
lret
lock
push
lcall
inc
mov
dec
mov
mov
and
dec
adc
mov
xchg
and
int3
pop
and
mov
dec
cmp
addr16
stc
sbb
rolb
mov
addb
js
pop
mov
jbe
daa
out
pop
inc
test
adc
hlt
cmp
scas
or
jge
inc
enter
mov
cmc
xchg
and
mov
xor
mov
cli
sub
gs
sahf
pop
sub
inc
add
outsb
mov
push
add
icebp
addb
in
mov
stos
fwait
inc
aas
scas
leave
mov
scas
add
mov
fnstcw
out
ss
add
cmp
idivl
mov
mov
jmp
inc
sahf
dec
in
xor
add
outsl
sub
fists
test
sahf
dec
repnz
mov
mov
lock
add
mov
push
addb
push
add
mov
rol
and
sbb
xlat
daa
cmpsb
arpl
xchg
mov
sub
sbb
jae
or
das
cmpsb
fstpl
std
enter
mov
mov
fdivp
dec
mov
in
out
push
pusha
add
out
adc
mov
pop
popa
fsubl
gs
mov
pop
lds
movsb
out
cmp
xor
xchg
sbb
mov
data16
push
add
pop
in
xchg
fnsave
aas
jle
in
xor
mov
out
add
rcrl
xor
jno
in
xor
pop
mov
dec
sbb
fcomps
in
hlt
dec
loope
dec
mov
mov
xchg
mov
pop
fisubl
add
out
or
mov
xchg
mov
mov
add
rolb
mov
das
jle
jle
pop
inc
and
sbb
out
ljmp
icebp
aad
ljmp
in
fbld
enter
pop
xchg
addb
movsl
in
fnstenv
add
cli
xchg
and
mov
sbb
inc
or
xchg
mov
es
stos
jp
dec
into
push
loopne
mov
push
fdivrs
fdivr
fmull
add
mov
add
mov
push
adc
jbe
arpl
fwait
adc
mov
push
add
ficoml
pop
xchg
clc
pop
cmp
or
and
enter
fdivr
adcl
add
cmp
pop
fidivrs
dec
sub
lahf
int3
jns
pop
rolb
in
stc
xchg
std
push
add
sub
add
and
ljmp
adc
icebp
jle
xchg
lahf
clc
arpl
in
loope
aaa
aam
inc
cmp
test
int3
dec
jp
lcall
add
push
lea
test
pop
bound
mov
mov
sbb
jb
mov
mov
jns
push
dec
aad
jmp
mov
push
push
mov
in
xlat
mov
and
cmc
xor
jg
push
add
fiadds
stc
adc
mov
sub
add
mov
jb
mov
in
add
mov
push
nop
add
or
test
pop
ja
mov
lret
rolb
mov
ljmp
ficompl
call
bound
mov
into
cli
outsb
jecxz
mov
mov
arpl
daa
into
ret
test
movsl
loop
mov
in
inc
mov
loop
mov
dec
ror
mov
sub
ds
data16
mov
or
mov
sub
or
out
sub
pop
xchg
jle
or
and
xor
mov
mov
xchg
pop
jle
js
push
or
mov
repnz
mov
mov
movsb
xor
mov
lcall
into
jge
insl
push
adc
mov
mov
mov
add
jns
fcomps
in
inc
and
mov
lods
pop
mov
sbb
or
and
mov
add
ret
addb
mov
dec
movsb
adc
in
ret
addb
out
ljmp
pop
or
dec
or
add
xchg
movsl
stos
out
decl
movl
fwait
icebp
sub
push
add
inc
pop
icebp
jbe
test
pop
imul
xchg
add
out
in
lock
adc
xchg
pop
pop
stos
fstp
cli
mov
jecxz
mov
push
add
fcomps
rolb
mov
mov
int
jo
mov
repnz
add
pop
mov
loopne
mov
fsubs
push
iret
mov
adc
mov
adc
mov
add
xorl
jo
mov
push
add
inc
add
push
add
inc
mov
add
xor
mov
mov
xchg
out
xchg
xchg
add
cmp
test
inc
xchg
add
inc
orl
paddsw
add
sub
adc
or
add
call
mov
out
addb
push
add
enter
out
js
add
sub
imul
cld
mov
push
sub
jecxz
push
add
add
nop
add
push
in
hlt
in
test
out
mov
and
movsb
or
cmpsl
repnz
in
mov
add
mov
hlt
mov
mov
ljmp
jecxz
add
mov
pop
fnstcw
loopne
mov
es
lcall
add
push
jg
cs
outsl
mov
notb
add
dec
popf
mov
out
xchg
pop
sub
xchg
gs
sbbl
mov
fs
outsl
mov
fidivs
add
mov
clc
pop
mov
mov
add
dec
stos
popf
jb
mov
dec
push
mov
enter
std
aaa
mov
adc
fisttpl
dec
decl
mov
pop
repz
pop
cmp
mov
in
or
mov
mov
sub
cmpsb
popa
aad
add
popa
popa
inc
lock
notb
inc
add
push
pop
js
push
lcall
add
mov
xchg
in
mov
add
push
pop
cld
jae
pusha
add
xchg
adc
shrl
add
cs
int3
insb
int3
addr16
mov
ja
ds
jbe
adc
mov
lea
cmp
or
add
insl
adc
add
mov
sbb
mov
add
add
mov
mov
pop
stc
add
lock
cltd
jl
jnp
add
dec
mov
mov
jb
mov
mov
add
clc
adc
mov
out
jbe
ljmp
adcl
add
fdiv
dec
das
add
lret
add
sbb
jmp
jg
repz
add
aaa
int3
insb
rolb
mov
mov
in
pushf
pop
adc
leave
imul
push
adc
add
addb
sub
push
add
fwait
cmp
fcompl
das
lret
sub
or
pop
rolb
add
pushf
pop
imul
not
jmp
aam
icebp
sbb
sarl
pop
outsb
andl
jge
mov
out
or
test
xor
mov
aad
add
cmp
mov
repz
es
pop
fsts
xor
add
mov
mov
mov
out
mov
jnp
push
dec
rolb
mov
or
add
inc
xchg
xor
mov
mov
add
adc
mov
mov
cmp
mov
sti
rolb
mov
hlt
js
sbb
cmp
cmp
xor
mov
add
inc
subl
adc
inc
jle
mov
imulb
and
mov
pop
sub
std
lds
pop
scas
repnz
pop
sbb
addb
rolb
mov
and
rolb
mov
add
add
mov
mov
cmp
add
mov
in
inc
inc
lcall
pop
aaa
push
add
hlt
push
add
add
sbb
push
pushf
ljmp
ss
push
add
in
pop
aad
arpl
inc
sar
mov
push
cmp
roll
add
push
pop
mov
push
mov
scas
dec
mov
ret
loope
ja
add
jae
cmp
cmc
js
rolb
outsl
test
iret
into
pop
inc
add
les
sub
fsubs
dec
out
xor
push
scas
insb
jnp
add
cmp
xchg
es
mov
lea
adc
dec
mov
cli
xchg
add
ret
daa
dec
dec
and
sbbl
sbb
mov
xor
or
adc
mov
mov
into
jle
fsub
adc
mov
mov
add
das
div
mov
stc
movb
iret
push
add
inc
andl
mov
xchg
cmp
add
mov
add
pop
repnz
nop
add
jg
adc
add
mov
push
jmp
testb
mov
repz
inc
add
fnstcw
mov
mov
xor
pop
push
mov
mov
xchg
add
or
inc
add
stos
dec
bound
mov
inc
and
cli
push
pusha
add
rolb
mov
add
loope
mov
or
add
pop
popf
and
mov
add
pop
xchg
jp
fwait
shll
add
mov
pop
repnz
mov
enter
add
cmp
pop
addr16
add
xor
mov
inc
and
mov
pop
pop
push
roll
mov
fnsave
fdivr
push
or
scas
xchg
pop
rcll
cmp
add
add
mov
bound
mov
lahf
inc
mov
mov
mov
pop
lock
add
push
loop
mov
divb
fldenv
mov
add
lock
xlat
inc
jmp
mov
mov
mov
xor
frstor
and
mov
mov
push
hlt
jno
or
jl
jecxz
mov
out
out
jge
sub
js
mov
mov
add
xchg
and
jmp
shr
dec
fs
bswap
js
addb
fwait
xchg
cltd
mov
shrl
or
mov
mov
xchg
lahf
or
xor
mov
inc
cmp
gs
mov
mov
mov
popf
jp
sbb
jno
add
jbe
jg
mov
sub
es
rcrw
ret
pop
sub
add
cmp
fs
add
das
js
mov
pop
jnp,pn
add
dec
stos
imul
mov
or
cli
add
mov
or
xchg
add
mov
stos
testb
add
fcomps
hlt
mov
int3
rolb
push
jno
pop
jg
push
cmp
xlat
jle
xchg
mov
mov
sbb
xchg
inc
imul
jle
pop
loopne
mov
js
or
add
mov
add
cld
popa
aaa
add
into
push
int3
loop
mov
cwtl
imul
cld
addr16
fstpl
pop
jbe
stc
mov
sbb
lret
into
out
jb
mov
add
lcall
mov
jmp
mov
jne
addb
ret
or
jecxz
mov
mov
gs
mov
add
xor
or
aam
outsl
dec
insl
popf
pop
cmc
icebp
fistpl
mov
mov
push
cmp
add
cltd
fs
pusha
add
fsubrs
dec
iret
les
sub
adc
jne
les
mov
imul
sub
outsl
fdivs
aas
mov
add
add
add
push
cmp
ret
sbbl
std
push
add
fs
int
into
jl
das
loop
mov
cld
aas
dec
inc
fsubs
jbe
imul
das
fwait
inc
add
mov
inc
add
dec
notb
cltd
sarl
dec
std
stos
pop
jg
notb
stos
in
mov
out
push
jecxz
stos
nop
add
pop
out
mov
jo
mov
inc
addb
aas
jg
add
adc
ret
mov
push
imul
mov
test
sahf
das
sub
sbb
and
mov
xor
mov
cmp
mov
mov
mov
lret
add
push
mov
mov
mov
cmc
sbb
jae
xchg
cmp
add
mov
addb
and
daa
popa
cmc
sbb
mov
mov
adc
cmc
scas
les
lcall
pop
mov
xchg
mov
mov
push
add
add
mov
cmp
lds
xor
mov
aas
push
dec
cmp
add
arpl
gs
xchg
dec
xchg
jae
pop
mov
mov
in
add
inc
and
cmp
lods
add
mov
incb
mov
and
mov
dec
jmp
jl
jg
push
jle
inc
sbb
pop
ret
add
mov
xor
mov
cmpsb
iret
mov
ljmp
add
arpl
cld
add
pop
push
pop
rorl
es
mov
or
cmpsb
scas
xor
stc
dec
and
mov
lods
mov
loopne
mov
shl
pop
xchg
or
add
mov
rcr
enter
add
es
add
roll
mov
adc
mov
mov
cli
repz
ret
rolb
mov
add
mov
mov
cmp
push
ja
push
add
or
cmc
ss
sahf
push
jmp
insb
mov
inc
add
cmp
cmpsl
pop
xchg
xchg
rolb
mov
mov
lods
paddw
xor
test
mov
mov
insb
out
scas
add
rcr
stos
call
stos
repnz
mov
mov
add
test
in
xor
mov
mov
mov
add
push
adc
inc
sub
cmc
mov
xchg
sub
pushf
lcallw
jne
add
inc
int
sub
out
mov
lret
and
dec
cmp
and
add
lret
jo
mov
add
js
adc
cmp
jne
add
lods
or
xchg
stc
es
mov
or
xchg
clc
mov
mov
rolb
pop
mov
ficompl
jnp
inc
add
or
mov
cmpsb
push
daa
and
inc
add
rol
icebp
hlt
mov
mov
bound
mov
inc
add
mov
lea
jnp
pop
in
or
cmpl
dec
mov
imul
adc
cli
mov
or
lret
push
add
mov
bound
mov
add
adc
mov
pushaw
add
push
es
dec
add
jecxz
loopne
mov
pop
sbb
rolb
mov
fcomip
add
pusha
add
xor
mov
jno
and
jmp
sub
jp
xor
and
sbb
or
and
xor
enter
jmp
mov
add
rorl
jle
pushf
jecxz
cmp
aas
xlat
mov
ja
pop
add
add
arpl
jns
add
xchg
fs
mull
mov
push
icebp
aam
push
loopne
mov
data16
mov
mov
push
and
mov
mov
sti
lret
mov
fdiv
jns
pop
push
xor
mov
mov
stos
mov
mov
jnp
insl
xchg
stos
add
mov
cmpsl
xor
lods
inc
stos
jns
adc
mov
mov
jmp
add
mov
mov
add
push
push
add
mov
aas
pusha
add
inc
pushf
jmp
xor
icebp
cmp
inc
repnz
inc
xor
cmp
mov
jecxz
cmp
mov
pop
fwait
lcall
clc
mov
mov
mov
inc
scas
bound
mov
mov
dec
or
push
jle
add
stc
sbbl
sahf
data16
mov
xchg
mov
pop
imul
ret
cld
lds
cmc
mov
rolb
mov
addb
pop
jge
cmp
cmp
bound
mov
cmp
dec
inc
pop
add
mov
pop
inc
nop
add
out
push
loopne
mov
push
cmp
and
sub
fisubrl
loop
mov
cmp
dec
xor
cmp
leave
cltd
loope
inc
outsl
cmp
xchg
xchg
aaa
movsb
insl
cwtl
jl
int3
sahf
out
mov
insl
inc
push
push
dec
ds
test
popa
loope
rdpmc
repnz
or
jl
push
rolb
mov
and
mov
add
mov
outsb
xor
xor
mov
rolb
mov
mov
mov
adc
mov
fs
rorl
mov
nop
add
mov
add
mov
add
push
adc
fiadds
mov
addb
cmp
mov
adc
jl
or
xchg
sbb
bound
mov
jmp
mov
stc
das
int3
mov
fidivrs
cmp
into
xor
pushf
movsl
popl
ficomps
push
dec
js
pop
les
mov
mov
add
mov
jbe
add
jge
fcomp
xchg
mov
and
mov
add
outsb
popa
mov
sub
rolb
mov
insl
cmp
push
test
push
add
fs
mov
mov
add
add
sbb
movsb
mov
pusha
add
jbe
sub
jmp
aaa
mov
xchg
add
mov
nop
add
dec
stos
cmc
and
mov
add
insl
jecxz
dec
or
or
xor
bound
mov
lods
xchg
xor
mov
cmpsl
push
add
out
mov
out
lret
lret
les
add
mov
sbb
aad
addb
add
mov
jecxz
sbb
je
mov
mov
clc
mov
push
std
test
jae
and
mov
dec
data16
add
sbb
add
mov
add
mov
movsb
ja
test
mov
mov
cmp
add
mov
testl
add
in
out
addr16
add
and
mov
mov
xchg
sbb
dec
lret
jp
push
sub
test
xchg
hlt
dec
rolb
mov
pop
aad
pop
data16
jecxz
out
ret
jae
fistpll
add
mov
loop
mov
inc
add
cmpsl
cli
jp
scas
hlt
or
or
test
js
jge
lea
mov
mov
push
pop
roll
stc
roll
mov
push
sub
mov
mov
mov
popf
sahf
imul
mov
lock
add
ret
cmpsl
cmpsb
add
adc
das
xlat
pusha
add
aas
ss
add
mov
jnp
xor
leave
xchg
sub
cltd
cltd
mov
loopne
mov
fistpl
into
mov
mov
inc
mov
lds
add
enter
rolb
xor
add
jae
inc
mov
adc
mov
iret
in
and
add
push
sarl
jge
movsl
out
add
xor
push
add
movsb
xor
lret
mov
or
add
mov
mov
mov
push
mov
arpl
pop
pop
cmp
mov
mov
fs
jle
or
scas
adc
mov
ja
adc
mov
add
jne
stc
mulb
mov
add
add
sahf
fs
jns
cli
addb
xor
mov
mov
sub
adc
add
js
inc
cltd
test
loope
dec
cmp
cmp
add
xor
insb
mov
mov
out
add
pop
push
pusha
add
add
lcall
mov
add
mov
dec
repnz
mov
mov
add
clc
cmp
add
pop
ret
dec
xor
lret
iret
push
hlt
hlt
or
pop
mov
arpl
cmc
pop
jae
sti
push
dec
cmp
push
add
jmp
add
mov
ljmp
add
sub
iret
or
outsl
fimuls
mov
mov
push
mov
jne
xchg
sti
scas
adc
add
inc
add
mov
fnstcw
loopne
mov
std
lcall
loop
mov
cmpsl
negl
xor
cmp
mov
inc
add
into
loope
gs
xor
push
jo
mov
xchg
cs
pop
int
xor
or
jp
or
outsb
mov
movsl
repnz
or
in
neg
loope
clc
cmpsl
mov
sarl
push
outsb
and
add
mov
mov
iret
and
add
push
xor
stos
pusha
add
push
add
test
gs
add
mov
leave
sahf
mov
je
popf
mov
and
aad
pusha
add
pop
jbe
ss
fnstenv
add
jecxz
inc
cmp
loope,pn
cmp
dec
mov
movsb
mov
add
add
jmp
mov
inc
add
rcrl
push
fnsave
mov
unpcklps
and
mov
add
add
and
mov
mov
clc
enter
mov
add
or
cmp
add
cmp
pop
mov
cmpsl
dec
mov
cli
jecxz
rolb
mov
fcompl
mov
loop
mov
pop
mull
sub
cmpsb
nop
add
adc
cli
mov
xchg
int
jmp
mov
mov
cmp
scas
inc
xchg
add
mov
in
inc
add
mov
mov
cld
fiadds
mov
add
mov
out
rolb
mov
int3
fwait
icebp
sbb
sub
rcll
addb
movsb
or
pop
mov
mov
popf
icebp
mov
mov
insb
cmp
adc
mov
mov
adc
mov
add
mov
dec
cmp
mulb
fs
mov
stc
fs
xchg
sub
add
inc
mov
dec
clc
bound
mov
mov
sub
push
popf
stc
xor
fcomps
loopne
mov
decb
cwtl
dec
and
lret
scas
fsubs
dec
mov
es
add
add
lret
out
push
test
jge
pop
sahf
jg
add
add
testb
fsts
inc
stc
inc
repz
add
dec
movsb
loop
mov
add
sub
dec
repz
cwtl
fistl
orl
mov
aaa
testb
add
dec
inc
add
iret
mov
cli
xorl
ja
mov
mov
add
sub
pop
mov
gs
sub
sbb
lahf
pop
mov
xor
add
stos
inc
stos
jbe
arpl
mov
iret
jo
mov
lahf
or
dec
inc
pop
push
push
mov
mov
add
mov
cmpsb
xchg
lcall
leave
sub
mov
xchg
addb
push
push
add
dec
loopne
mov
cmpsb
sub
xchg
add
dec
add
pop
sub
inc
add
test
gs
aaa
adc
pop
cld
nop
add
adc
mov
jae
pushf
loop
mov
mov
mov
add
add
and
inc
jb
mov
push
mov
call
mov
cmpsl
jns
dec
gs
ljmp
mov
xchg
mov
cmc
ljmp
repz
jne
pop
mov
add
adc
stos
les
mov
fistpll
mov
repnz
add
sbb
push
jno
mov
xchg
pop
int3
sbb
rolb
mov
add
rolb
mov
gs
test
pop
xlat
xchg
pop
in
add
jp
data16
inc
jle
nop
add
fadds
rolb
lock
loope
add
push
push
outsb
icebp
arpl
add
fists
jne
xlat
addb
and
mov
cmpsb
mov
jp
push
aaa
stos
int
add
mov
loop
mov
pop
and
mov
cld
pop
stos
loop
mov
xchg
scas
fistpl
jb
mov
sub
xor
jo
mov
xor
xchg
push
addb
out
cmc
cmc
mov
iret
sbb
mov
and
xchg
ret
addr16
or
cmp
mov
sub
mov
push
repnz
fadds
pop
leave
jns
pop
dec
insl
cli
cmc
iret
pop
sub
out
pop
insb
and
outsl
lds
adc
inc
jle
and
mov
add
mov
mov
cmp
add
in
cmpl
test
stos
mov
mov
add
mov
imul
rorl
mov
dec
and
push
enter
adc
cmp
fwait
or
imulb
out
jg
out
add
jo
mov
dec
pop
ds
add
add
and
fcoms
add
imul
lods
or
std
in
mov
and
cwtl
in
add
push
adc
add
andl
add
mov
add
lea
inc
les
dec
imull
mov
xlat
xlat
cmpsl
pop
inc
and
add
rolb
mov
jl
rolb
mov
lcall
call
mov
testb
cwtl
repnz
lods
jp
adc
mov
dec
addb
imul
mov
ret
movsb
icebp
cwtl
mov
clc
pop
lcall
dec
jge
mov
sbb
stc
pushf
loop
mov
mov
mov
shll
mov
mov
add
add
addr16
mov
das
aad
bound
mov
out
ja
mov
xchg
fildll
mov
sub
outsb
rcl
cmp
mov
test
ret
pop
xchg
mov
mov
jg
sbb
lock
sti
out
cmpsb
or
lcall
cmpsb
dec
imul
push
sbb
inc
mov
mov
imul
js
inc
dec
or
aad
push
add
inc
rorl
cmp
lea
add
xlat
sbb
stos
adc
fcompl
or
push
cli
xor
add
add
mov
ret
loope
cmpsl
mov
loopne
mov
inc
std
fdivs
and
push
cs
or
pop
test
add
mov
add
mov
add
mov
mov
pop
jmp
out
mov
mov
outsb
out
jp
repz
push
out
std
and
mov
les
add
fcomp
bound
mov
adc
mov
add
jae
dec
pushf
bound
mov
mov
xchg
add
in
in
std
fwait
mov
mov
dec
or
fmull
xchg
lock
push
clc
xor
add
insl
stos
mov
aam
andl
mov
test
lock
fiadds
ret
add
lds
sbbl
add
ficomps
pop
fwait
mov
cmpsl
cmp
dec
or
push
pusha
add
movsl
adc
mov
mov
mov
add
mov
rolb
mov
int
and
mov
add
adc
insl
sub
jmp
cmp
add
mov
xchg
sub
inc
lret
cmpsl
insb
pop
out
jle
xchg
inc
add
sahf
add
mov
add
leave
imul
sbb
les
add
mov
les
cld
js
add
in
and
mov
jb
mov
inc
loopne
mov
jg
push
push
mov
add
mov
mov
cmp
add
mov
add
mov
adc
rolb
mov
add
ret
mov
add
int3
popf
adc
mov
movsl
mov
outsb
push
jae
addb
insb
in
push
jo
mov
out
xchg
dec
call
insb
push
add
aas
cmpsb
xchg
jmp
add
cld
das
sub
fistpl
fcmovnb
inc
add
sbb
push
mov
mov
add
fcmovbe
lahf
sbb
dec
mov
cmp
rolb
mov
popa
jae
cli
xor
mov
mov
out
aam
addb
xchg
mov
mov
mov
add
adc
add
rolb
mov
mov
test
ja
or
jae
test
lds
mov
test
mov
add
xor
insl
pop
scas
mov
mov
imul
cs
push
sbb
int3
lds
cmpsb
sub
add
mov
addb
xor
push
jmp
add
adc
mov
dec
out
in
jbe
imul
mov
je
jns
out
call
pop
in
or
addb
loop
mov
fcoml
add
rcll
dec
ds
push
das
mov
mov
scas
nop
add
bound
mov
in
ljmp
pop
leave
pop
mov
stos
inc
sti
addr16
cmpsb
fmuls
popa
sbb
sahf
loopne
mov
in
mov
ljmp
add
xchg
push
sbb
outsb
aam
cli
insb
fsubs
add
lock
push
push
outsb
mov
sti
popf
or
sbb
xchg
adc
aad
call
add
jle
shl
and
jo
mov
add
push
in
xchg
fcomps
das
pop
jmp
addb
mov
popa
jns
sbb
add
add
sub
in
add
push
iret
push
push
scas
imull
inc
add
add
sub
mov
sub
stos
pushf
mov
mov
add
mov
jl
lock
sub
mov
fisubs
rolb
mov
add
je
pusha
add
ret
scas
jb
mov
add
jmp
push
sysexit
mov
pop
push
xor
xor
std
sbb
push
les
add
lret
or
or
dec
fisttpl
dec
and
cmp
lret
dec
jmp
clc
fdivl
mov
mov
ret
jp
add
add
or
rolb
mov
frstor
xchg
aam
popw
xor
jmp
mov
xor
mov
test
push
adc
mov
pop
in
add
dec
addb
mov
test
add
ds
popf
fadds
dec
imul
hlt
mov
mov
ljmp
add
mov
ds
lds
cwtl
in
xchg
lock
xor
inc
push
xchg
add
mov
mov
jmp
xchg
sub
mov
add
mov
add
mov
scas
and
mov
jbe
fdivs
sbb
mov
add
jp
addr16
push
std
rolb
mov
adc
cwtl
push
into
shrl
inc
movsl
into
inc
xchg
lods
xchg
or
and
mov
fldenv
and
jb
mov
push
dec
mov
push
jb
mov
dec
movsl
insb
sbb
jl
add
or
mov
xchg
data16
add
xchg
cs
add
bound
mov
xor
and
cmp
frstor
adc
mov
xor
aas
adc
data16
mov
add
mov
cmc
test
mov
mov
adc
mov
sbb
jne
pop
cs
xchg
xchg
es
xchg
negb
push
jns
mov
inc
or
mov
les
adc
mov
cmpsl
bound
mov
jmp
sahf
jae
push
rorl
stc
inc
add
jno
rcl
add
adc
test
test
xor
mov
jl
add
mov
add
mov
adc
mov
dec
out
test
cmp
stc
and
mov
addb
mov
mov
add
mov
cmp
push
xor
mov
inc
mov
loop
mov
xor
rcrl
cmp
jmp
add
fbld
pop
dec
sbb
xor
mov
mov
fs
add
popf
je
imulb
aad
mov
cld
mov
xor
mov
lret
fidivs
cld
pop
sub
xchg
bound
mov
cmp
and
mov
xor
xchg
dec
xor
jae
inc
sbb
add
mov
fdivrl
inc
mov
outsl
lret
mov
mov
mov
fs
leave
or
adc
adc
add
mov
mov
mov
adc
mov
mov
cmpsb
les
out
jo
mov
inc
xchg
mov
loopne
mov
scas
das
imul
in
fwait
lods
leave
pushf
rcll
xor
shll
jno
lods
insl
xchg
add
mov
mov
mov
adc
and
inc
add
pop
xchg
and
ror
call
dec
or
dec
fdivrp
mov
inc
sbb
sbb
inc
jge
dec
sbb
xchg
rcrl
add
sbb
pop
cmp
inc
push
aam
movsb
lock
lods
pop
mov
mov
mov
lret
ret
inc
jno
bound
mov
cmp
pop
mov
mov
pop
cmp
pop
addb
lock
xor
mov
jmp
jns
test
cs
add
mov
cwtl
add
mov
push
rolb
mov
inc
push
add
xor
mov
into
sub
loopne
mov
add
add
and
mov
out
dec
jne
test
je
enter
mov
or
enter
movb
inc
add
jg
push
push
enter
stos
insl
call
lahf
jge
sti
mov
jns
iret
daa
into
cmc
in
pop
mov
cltd
sub
and
mov
sub
fistps
add
sub
add
adc
rolb
mov
sbb
fnsave
out
mov
lds
add
mov
arpl
add
xor
mov
mov
add
das
xchg
and
mov
and
flds
fstl
clc
or
cmp
jno
mov
insl
inc
or
add
mov
lods
aad
add
in
cmp
add
cmpsb
mov
add
add
sub
mov
push
mov
and
in
addr16
push
inc
and
mov
loop
mov
or
daa
jno
adc
es
or
mov
fwait
xor
mov
mov
sti
push
add
add
add
add
std
std
shll
out
lds
jae
mov
add
push
ja
add
cmpsb
std
xlat
cmpsl
push
jl
or
add
mov
mov
ss
mov
add
nop
add
loop
mov
add
sub
int3
stos
mov
mov
inc
mov
repz
aad
push
jecxz
xor
mov
mov
add
and
mov
mov
fisubrs
lods
sbb
leave
jns
push
add
mov
mov
mov
mov
adc
mov
std
lea
pusha
add
and
mov
rolb
dec
mov
sub
push
add
insl
pop
lods
dec
fidivs
add
pop
or
ret
loope
out
add
xor
mov
add
inc
add
or
inc
add
popf
mov
mov
mov
add
pop
lods
pop
cltd
cmp
pop
out
pop
add
jp
pop
mov
jmp
iret
cmp
add
popa
xchg
popa
cmpsl
dec
ja
test
jb
mov
pop
loopne
mov
inc
push
mov
ret
test
in
cli
mov
sub
leave
fsubs
mov
punpckhwd
add
loop
mov
or
cmc
icebp
inc
loope
inc
push
addb
rolb
mov
xchg
add
xchg
add
pop
popf
test
fistpll
add
movsb
jmp
jmp
push
inc
mov
mov
sub
fwait
mov
mov
lods
jge
or
jge
push
add
dec
cs
sub
add
cmc
jle
sbb
add
aam
xchg
js
cmp
in
push
pop
test
sbbl
inc
add
aad
test
subl
scas
sbb
test
movsb
std
out
mov
mov
bound
mov
push
mov
adc
add
fistpl
dec
cmpsl
or
cmp
daa
dec
push
jmp
adc
lods
inc
add
add
pop
jge
inc
rorl
add
mov
jae
dec
movsb
leave
jl
imul
ss
sbb
mov
mov
rolb
mov
adc
mov
loope,pn
sbb
pop
cmpl
outsb
imul
mov
mov
sbb
sar
pushf
loop
mov
xchg
mov
loopne
mov
xchg
sub
mov
add
xchg
rcrl
std
addr16
imulb
cld
addb
fnstsw
add
out
pop
ss
mov
sbb
push
pop
jmp
add
mov
adc
mov
add
mov
mulb
xchg
cmpsb
leave
ss
adc
mov
mov
out
fwait
outsl
mov
nop
add
pop
leave
adc
add
jecxz
add
rolb
or
stc
and
repz
pop
cmp
scas
jle
pop
or
jmp
mov
mov
lea
pushf
mov
pushf
or
pop
mov
mov
movsl
and
and
xchg
rolb
pop
std
repnz
add
out
cmc
fs
xor
mov
mov
and
repz
mov
adc
out
pop
addb
cmp
or
daa
ret
rol
pusha
add
push
add
mov
les
mov
xchg
fiaddl
push
add
addb
hlt
ja
xchg
test
inc
xchg
add
add
pop
lods
xchg
ja
aas
int3
loopne
mov
xchg
push
fldenv
and
mov
hlt
add
pop
dec
push
add
addr16
cs
add
or
sbb
hlt
mov
mov
mov
add
xor
add
add
jno
mov
aam
xchg
in
cmp
pop
cld
int
aam
push
add
cmpsb
push
sbb
mov
mov
jne
or
xor
mov
shll
mov
xchg
addb
push
or
ds
mov
jae
jmp
popf
adc
mov
popa
test
mov
or
add
mov
mov
in
xchg
cmp
mov
inc
lcall
mov
and
repz
add
push
adc
movsl
jle
imul
or
mov
lcall
or
repnz
mov
sahf
sbbl
add
mov
ss
mov
imul
xchg
hlt
pop
xchg
mov
mov
lods
test
push
add
dec
rolb
mov
mov
rolb
mov
mov
mov
push
dec
dec
int
add
cmpsb
es
outsl
sahf
ret
cmp
adc
in
mov
outsl
out
fldenv
xchg
cmp
xchg
aad
mov
mov
rolb
mov
xchg
dec
add
mov
outsb
aad
or
ja
out
pop
and
fsubp
ljmp
sub
add
addb
xor
add
push
add
add
mov
pop
jp
inc
and
inc
add
mov
pop
push
shll
sub
add
aad
int
fisttps
dec
sub
add
pop
or
and
mov
pushf
gs
push
jno
mov
mov
inc
les
add
loope
repz
pop
pop
xlat
jge
cmp
jns
addb
pop
add
push
sbb
mov
pop
xchg
mov
cmc
rolb
mov
add
mov
mov
movsl
repnz
movsl
in
imul
cmpl
add
ljmp
add
mov
imul
test
sbb
inc
jnp
inc
inc
call
jae
xchg
sub
mov
mov
lods
repz
push
ss
int
push
jae
sbbl
mov
pop
out
push
add
stos
in
mov
sub
cli
lcall
add
inc
cwtl
lods
arpl
addb
fdivrl
faddl
addb
push
scas
insl
mov
add
or
pop
xchg
sub
dec
call
sub
rolb
mov
cmc
sub
push
add
mov
add
add
lods
clc
stc
adc
mov
fstpt
icebp
and
mov
cmp
js
into
inc
add
mov
add
testb
addb
cmp
mov
or
pop
rolb
into
leave
gs
mov
dec
clc
sub
add
mov
sub
adc
in
cmp
sbb
sub
roll
add
add
add
add
mov
dec
mov
add
mov
fucomp
movsb
add
les
pop
popa
mov
ficompl
inc
pop
lret
xchg
jg
lods
mov
dec
mov
add
mov
push
mov
and
clc
pop
mov
mov
push
shll
mov
mov
adc
add
rolb
mov
testb
mov
push
movsl
cld
sarl
add
mov
cwtl
mov
mov
add
push
mov
pop
sbb
inc
add
add
jbe
clc
sbb
dec
push
lods
test
pop
mov
mulb
mov
push
iret
je
and
mov
rcrl
sub
mov
lods
mov
addb
addr16
mov
ljmp
add
mov
cmp
add
mov
pop
imul
cmp
jno
pop
arpl
add
mov
xchg
lea
cmp
out
push
dec
test
icebp
mov
mov
loope
outsb
cs
pop
sbb
out
int3
jbe
mov
add
pusha
add
jno
xor
mov
sbb
push
add
mov
mov
aaa
pop
hlt
push
inc
jne
add
inc
add
add
add
mov
outsb
fstpl
xor
shll
jmp
mov
jecxz
fldl
or
rolb
mov
lcall
inc
out
xor
mov
nop
add
push
xchg
call
add
fimull
xor
pop
fisubs
lds
sbb
outsb
adc
cmp
mov
mov
addb
sahf
sbb
dec
xor
pop
outsl
popf
sbb
and
mov
inc
add
cli
mov
push
stos
daa
fistpl
ss
lds
add
mov
add
mov
cwtl
std
mov
mov
int
push
sbb
add
fisubrs
mov
mov
adc
mov
fsubrs
xchg
add
mov
fisttps
cmp
ret
dec
cltd
bound
mov
add
pop
pop
sbb
add
mov
ss
lods
jecxz
mov
or
jge
cmp
add
js
cmp
xchg
add
das
mov
inc
pop
data16
mov
inc
call
xchg
lock
data16
mov
insl
mov
pop
xchg
test
mov
aaa
test
add
iret
rolb
mov
scas
int3
cltd
mov
sbb
adc
int
sbb
fsubrs
rolb
mov
popa
add
or
repnz
cmp
out
dec
mov
cwtl
mov
out
pop
jmp
xchg
adc
loop
mov
add
das
ljmp
aam
test
dec
cmc
leave
dec
bound
mov
lods
hlt
fmul
out
sub
popa
xchg
and
popf
push
pop
aad
imul
jns
addb
mov
and
mov
imul
mov
loop
mov
adc
mov
mov
jno
xlat
sbb
data16
mov
jno
popa
test
outsl
inc
pop
xchg
mov
mov
push
add
les
mov
std
mov
fwait
insl
adc
cmpsb
jecxz
xlat
pop
cmp
xor
aam
stos
inc
addb
je
lret
add
stos
pop
mov
mov
out
mov
sub
pop
icebp
push
push
push
inc
ret
adc
js
fcoms
jne
push
push
dec
lcall
inc
push
add
fiadds
add
rorl
mov
add
mov
rolb
mov
gs
daa
cmp
popa
xor
xchg
add
mov
mov
add
mov
cmovnp
jae
idivb
push
and
mov
mov
inc
lret
jae
add
mov
add
add
dec
aas
pop
sbb
addb
aad
jg
mov
xchg
push
add
and
mov
jg
inc
add
out
leave
push
fldl
rolb
mov
enter
ret
orl
mov
or
ds
jecxz
loopne
mov
push
std
dec
inc
add
mov
mov
add
add
mov
sbb
mov
adc
test
add
jo
mov
mov
push
sub
cld
dec
add
out
loop
mov
mov
jl
push
imul
xorl
add
loopne
mov
mov
fbld
add
stc
xchg
add
arpl
icebp
xchg
dec
enter
add
cmpsb
out
xchg
jmp
xor
into
inc
rolb
cmp
dec
xor
fldt
mov
test
rolb
mov
jg
out
xor
mov
add
jne
inc
add
mov
ss
add
movl
xor
in
mov
lahf
pop
shll
xor
mov
stc
ffree
mov
mov
shl
aas
mov
hlt
sub
mov
add
test
xchg
jge
movsb
mov
jecxz
sbb
jb
mov
add
daa
loopne
mov
stos
xchg
mov
push
sahf
inc
bound
mov
add
push
mov
in
fstpl
dec
sar
sbb
add
fwait
add
pop
sbb
ficompl
dec
push
or
jmp
inc
in
ss
imul
mov
test
pop
shrl
dec
jns
or
fsubp
xchg
bound
mov
mov
mov
jns
mov
xchg
call
pop
aad
xchg
push
push
std
add
mov
loop
mov
loop
mov
ljmp
add
stos
mov
mov
les
pop
cmpsb
addb
cwtl
and
add
dec
or
scas
rolb
sbb
sbb
mov
mov
mov
cmp
or
addr16
jnp
pusha
add
mov
ret
push
mov
pop
sbb
mov
mov
push
inc
xor
mov
sub
cmp
add
insl
ds
and
mov
inc
sbb
ja
add
mov
add
cmp
add
add
insb
sbb
mov
out
inc
mov
stos
jmp
add
add
lea
fldl
dec
pop
xor
mov
pop
jg
ds
lods
cmpsl
ljmp
insl
and
jnp
mov
add
mov
add
jp
fdivrp
inc
sub
adc
mov
lea
ljmp
mov
jae
xchg
add
stos
les
shr
stos
xor
add
mov
push
addb
cmc
outsb
call
push
ss
addr16
push
add
sub
inc
pop
gs
rolb
mov
int3
fstl
cs
add
dec
cmp
nop
add
push
cmp
ret
data16
int
mov
clc
adc
mov
sub
and
mov
cmpsl
lea
mov
push
sub
jns
add
xchg
mov
mov
fs
mov
sbb
fucomip
inc
cmp
mov
rolb
ret
cmp
xor
mov
mov
fwait
int3
sbb
lods
test
subl
mov
add
cmp
mov
stos
ds
in
add
ffree
mov
lds
mov
mov
testl
es
pop
shll
mov
mov
out
push
adc
xlat
clc
sub
xchg
mov
repnz
inc
hlt
scas
mov
add
mov
jp
outsl
mov
mov
add
addr16
xor
mov
bound
mov
or
mov
cmp
add
mov
mov
ss
push
fisttps
ret
enter
out
inc
add
fucomip
movsb
sub
jb
mov
call
add
mov
mov
fistpl
fstps
fisubs
mov
ss
jge
fidivs
add
addb
or
loopne
mov
sbb
fwait
lret
test
mov
xchg
or
popa
movsb
or
and
push
jecxz
add
mov
scas
xor
cli
jg
sbb
cmp
dec
mov
fwait
jno
add
add
bound
mov
iret
aad
pop
push
cmp
leave
adc
mov
mov
movsl
mov
out
mov
movsl
addr16
aas
mov
mov
add
fadd
aas
adc
ss
ljmp
mov
jmp
stos
lcall
add
xlat
add
add
dec
xlat
test
fs
mov
addb
pop
inc
jnp
loop
mov
pop
call
in
pop
out
xor
xor
jl
sub
xchg
mov
mov
mov
imul
xchg
push
leave
mov
jbe
pop
xchg
add
add
movsl
jl
cmp
xchg
in
and
mov
add
dec
or
jecxz
push
xor
dec
mov
insb
dec
cs
adc
fadds
add
add
cmp
cmp
test
mov
xchg
mov
test
jnp
fisubs
dec
xor
add
add
mov
mov
add
pop
rcr
add
push
cmpsb
repz
pop
mov
mov
mov
mov
fdivl
subl
mov
lock
ret
jne
in
je
sub
xchg
arpl
js
test
mov
shll
lods
stos
mov
mov
jb
mov
loope
add
mov
xchg
xor
add
mov
gs
adc
add
or
xchg
aaa
movsb
push
add
gs
xchg
pop
cmp
mov
jp
addb
daa
sahf
xchg
nop
add
rcrl
ret
pop
js
fs
cmp
stc
or
xchg
mov
mov
add
frstor
push
ss
fstl
mov
add
mov
mov
add
out
push
add
mov
leave
or
js
lcall
mov
jecxz
jnp
fsubs
nop
add
jnp
ds
setb
mov
or
dec
xchg
or
sbb
add
push
hlt
nop
add
call
mov
sub
add
xor
inc
es
arpl
mov
mov
add
mov
lea
add
shrl
add
cmpsb
pop
adc
add
add
add
dec
or
fidivs
mov
or
dec
jge
fidivs
fdivp
test
aad
jge
rolb
mov
lods
sub
je
nop
add
mov
enter
jecxz
rolb
mov
mov
mov
add
mov
jp
add
mov
mov
cmp
mov
cmpsb
mov
mov
mov
rolb
mov
out
xchg
push
ficoms
test
dec
mov
nopl
cmc
xor
xchg
pop
rolb
pushf
dec
hlt
insl
cmpsb
mov
xor
push
add
addb
cmp
push
stc
jno
ds
loop
mov
sti
push
jp
add
cltd
push
jne
lea
aam
sbb
jbe
rolb
mov
mov
icebp
shll
rolb
pusha
add
cmc
jno
stc
or
add
jmp
add
push
aad
xchg
mul
sbb
mov
mov
fmul
jno
push
add
js
lcall
insb
mov
mov
add
enter
jbe
mov
mov
dec
inc
ljmp
add
add
je
push
sbbl
mov
add
inc
add
mov
mov
das
push
jns
std
testl
lret
mov
in
xor
mov
xchg
lods
faddp
aam
faddl
mov
inc
sbb
dec
in
jle
jl
add
mov
orl
jl
lahf
or
mov
mov
mov
add
push
add
fisubs
add
leave
lds
sbb
jl
je
jne
inc
bound
mov
in
fidivl
cs
mov
cmp
out
add
mov
jbe
in
fsubs
dec
ficompl
pop
sbb
in
test
and
mov
xor
fiaddl
insl
int
adc
mov
fldcw
mov
pop
cmp
aam
jno,pt
mov
es
pop
aad
mov
mov
add
mov
mov
cmc
adc
mov
movsb
jle
fucomi
push
mov
mov
cmp
jg
mov
fs
fnsave
test
mov
mov
mov
add
mov
dec
or
pusha
add
shl
mov
add
sub
sbbl
stos
lret
mov
sbb
ds
adc
mov
pop
xchg
sub
inc
arpl
movsl
mov
out
lock
loope
popa
jno
notl
inc
add
add
add
mov
mov
loop
mov
loope
adc
mov
add
add
lods
fcmovnb
adc
or
rolb
mov
mov
add
das
push
jmp
add
addb
fs
bound
mov
push
fistpll
and
add
pusha
add
aas
sbb
nop
add
xchg
pop
imul
mov
cli
addr16
add
jl
add
adc
mov
lods
scas
lods
iret
into
imul
add
add
fimuls
and
sub
pushf
flds
fists
add
push
sbb
jbe
cmp
or
movsb
inc
add
add
icebp
fmulp
dec
lahf
jmp
jne
jnp
test
inc
add
mov
jne
out
adc
push
jne
das
js
mov
add
ja
movsb
sbb
and
mov
mov
jecxz
clc
scas
loopne
mov
or
jne
testb
jecxz
enter
cs
cmpl
push
push
add
xchg
sub
mov
popa
cmc
lds
cmp
add
add
inc
cmp
pop
test
jno
rolb
or
mov
jne
mov
and
out
movsb
jb
mov
dec
arpl
mov
mov
sub
sti
jle
push
lds
das
outsb
and
xchg
cmp
mov
cld
ljmp
dec
push
xor
mov
mov
xchg
add
sub
mov
mov
xchg
rolb
mov
sub
pop
xchg
cmp
ret
test
xchg
jl
loopne
mov
in
add
fwait
lods
inc
mov
xchg
stc
hlt
inc
add
ret
mov
push
mov
cmp
add
or
add
xor
adc
push
scas
mov
push
pop
loopne
mov
jo
mov
push
add
push
addr16
pop
jecxz
sbb
mov
xchg
pop
push
loop
mov
sbb
lock
jo
mov
sub
pop
inc
std
mov
mov
add
fistps
pop
jmp
aaa
or
test
mov
fucomip
int3
mov
xlat
jp
jecxz
jae
or
sub
push
mov
add
and
nop
add
add
cmpsl
xor
mov
rolb
mov
sub
lds
jae
jp
hlt
iret
test
pop
in
in
ret
cs
leave
aad
fidivrl
mov
mov
fs
cmp
xor
mov
adc
mov
mov
fwait
das
out
pop
jbe
std
mov
scas
testb
jno
test
jp
add
jmp
mov
roll
mov
add
cs
add
add
aaa
mov
pop
jo
mov
call
fs
inc
dec
dec
and
ss
mov
repnz
lret
push
pop
inc
add
mov
mov
add
cmp
stc
jp
sub
mov
add
add
mov
push
loopw
mov
add
add
aas
push
add
mov
insl
imul
int
mov
pop
push
add
pop
repz
add
xchg
xor
lahf
push
add
sbb
nop
add
mov
in
jns
add
push
ja
pop
jmp
push
sub
mov
dec
sarl
mov
mov
xlat
mov
daa
and
movb
inc
xchg
xlat
test
pop
int
jl
lods
push
add
or
dec
int
lahf
stc
vaddsubpd
mov
add
jno
add
lea
or
mov
jns
pop
xor
cmpsb
and
mov
cmc
mov
addb
xor
add
test
or
push
jmp
add
cmp
mov
adc
xchg
add
mov
cmp
sub
add
rolb
mov
jl
mov
mov
add
pushf
mov
mov
test
add
xchg
or
dec
push
add
dec
sub
push
cmp
push
xchg
push
rolb
sahf
movsb
dec
push
pop
mov
ss
add
sub
add
adc
out
pushf
pop
lret
aam
pop
stos
mov
inc
or
mov
fldz
and
mov
jo
mov
push
add
mov
add
mov
cmpsb
mov
mov
add
adc
in
xor
ljmp
gs
add
sub
adc
mov
cmp
les
mov
add
enter
mov
mov
inc
lretw
cli
repz
leave
pop
xchg
testb
adc
mov
mov
push
add
rolb
mov
call
push
mov
int
add
push
mov
pop
or
xchg
fs
cltd
xor
fld
loop
mov
and
jbe
nop
add
outsb
pop
in
cmc
stos
jl
insb
or
and
mov
and
mov
scas
dec
xchg
addl
aam
pushf
and
mov
add
mov
mov
mov
pushf
mov
stc
inc
enter
or
cltd
mov
lcall
mov
js
pop
jge
mov
pop
arpl
aaa
and
mov
add
pushf
repnz
add
xor
mov
or
gs
adc
into
or
push
dec
or
mov
add
mov
add
test
sub
aas
pop
jne
aas
iret
dec
repz
mov
add
mov
inc
dec
xchg
in
mov
mov
jge
or
add
out
in
lcall
call
addb
inc
add
mov
cmp
inc
out
and
mov
test
cmc
loop
mov
ret
dec
pop
sub
pushl
adc
movsb
sub
je
es
insb
popa
or
adc
rolb
mov
jo
mov
int
mov
mov
mov
fisttpll
stc
lret
lcall
pop
inc
ds
lahf
push
add
rorl
mov
add
aas
mov
xchg
add
hlt
fistps
cmp
notl
xchg
dec
push
es
pop
outsl
test
jae
inc
jbe
jle
test
pop
and
sbb
dec
stc
aam
sbb
add
hlt
push
call
add
roll
sbb
inc
inc
add
call
add
lods
out
inc
pop
cmp
or
push
fldt
jo
mov
iret
mov
xchg
and
add
jnp
punpcklwd
pop
and
mov
push
add
sarl
in
and
mov
popa
mov
rolb
mov
aas
push
ret
cmp
mov
scas
std
cmp
push
add
mov
add
jle
sub
ret
push
inc
add
out
xchg
push
add
mov
out
inc
add
out
add
mov
sarl
sub
adc
mov
adc
mov
hlt
mov
mov
add
mov
in
adc
mov
mov
and
negb
lret
xor
pop
lcall
mov
imul
subl
cli
mov
and
mov
add
push
jmp
add
cld
jns
add
xchg
inc
pop
rolb
or
add
pop
jle
mov
xor
rolb
mov
inc
add
loop
mov
add
mov
add
or
cmpsl
jecxz
xor
sbb
aas
jmp
jle
cs
add
incb
jecxz
add
mov
jg
out
mov
inc
xor
mov
mov
cmp
jg
loope
sbb
or
or
push
cwtl
movsb
fmulp
mov
mov
lret
jo
mov
test
pop
call
push
add
and
mov
sbb
nop
add
addb
mov
addb
icebp
or
mov
mov
or
in
or
xor
mov
sub
add
mov
mov
repz
repz
and
mov
daa
cli
lds
imul
add
add
add
mov
mov
mov
scas
cltd
addb
and
int
sub
cmpsl
cmp
and
mov
insl
inc
mov
jnp
icebp
sub
or
iret
repnz
mov
add
pop
addb
jge
hlt
inc
daa
in
mov
push
jns
dec
movsl
mov
mov
push
lock
bound
mov
sbb
in
fbld
sbb
mov
addb
jg
cwtl
and
fimull
jns
push
and
icebp
mov
mov
push
push
jle
outsl
jge
mov
leave
lret
test
pusha
add
sbb
es
dec
fcomi
add
out
push
add
pop
movsb
pop
ds
pop
push
aad
and
mov
mov
pop
fstp
mov
add
insb
cs
or
jo
mov
push
jg
xor
mov
shll
xchg
test
pop
mov
mov
ja,pt
push
add
add
clc
sahf
ret
fwait
jb
mov
add
add
add
cs
es
or
add
xlat
pop
stos
aad
sahf
js
in
fnstcw
cmc
jmp
sti
inc
mov
daa
pop
and
mov
mov
add
mov
xchg
cli
xor
mov
add
push
inc
inc
add
add
mov
xor
mov
jne
mov
inc
fistps
bound
mov
test
lahf
xor
mov
sbb
push
mov
mov
fs
add
inc
add
push
add
rolb
mov
dec
mov
addb
jae
int3
rolb
xor
aaa
adc
sbb
pop
mov
aaa
lahf
arpl
xchg
test
dec
mov
rolb
scas
sbb
cld
mov
in
imul
or
push
mov
jnp
pusha
add
mov
mov
sub
les
pushf
adc
mov
pop
adc
scas
push
iret
sub
push
or
add
pmaxsw
add
mov
loopne
mov
mov
add
dec
outsl
dec
lcall
jp
add
sub
mov
mov
add
mov
add
aaa
sub
addb
push
scas
or
add
adc
int3
test
rolb
mov
add
push
add
mov
add
mov
push
dec
pop
addb
or
push
iret
je
in
add
movsb
xchg
jnp
add
out
aas
mov
addb
test
mov
cmp
push
or
fistl
mov
xchg
add
insl
jle
dec
jae
add
sub
gs
popa
iret
sub
sahf
cmp
push
sbb
pop
xchg
add
add
add
xchg
push
sahf
xor
add
inc
push
gs
pop
xor
addr16
ljmp
mov
in
repnz
add
in
xor
mov
sti
jl
add
mov
movsl
adc
mov
lea
pop
xor
add
jne
mov
mov
imul
lods
xor
imul
xor
mov
lds
jae
mov
cwtl
cmp
xor
mov
add
mov
ja
iret
cmp
gs
cli
mov
mov
xchg
jbe
lock
clc
xchg
push
insl
mov
sub
rolb
movsb
out
fsubl
rolb
mov
cmc
mov
lahf
mov
fidivs
mov
and
fnstcw
and
add
pop
loop
mov
fmul
push
fimuls
pushf
jne
loope
pop
stos
push
sub
in
adc
sub
aaa
cwtl
mov
stos
pop
inc
push
jmp
add
jo
mov
add
aas
imul
jg
icebp
add
mov
addb
imul
jns
add
ficomps
jl
push
add
lcall
cmc
fidivrs
clc
sti
sub
out
jge
stos
mov
mov
out
or
add
ficoml
push
popa
push
movsb
dec
gs
or
jnp
sbb
add
push
or
stos
cwtl
hlt
pop
cmpsl
mov
mov
lods
jge
xor
mov
movsl
je
pop
rolb
mov
test
fdiv
mov
mov
sub
mov
mov
test
mov
enter
sub
and
aas
mov
inc
add
mov
mov
fnstsw
fmuls
or
xchg
sub
fldenv
sub
jbe
add
add
aam
add
add
lock
inc
add
pop
push
add
fdivs
out
roll
pusha
add
adc
and
add
and
in
sub
inc
rolb
mov
add
cwtl
inc
stos
andps
add
push
pop
pop
inc
add
adc
mov
inc
mov
sbb
cmp
ds
sub
fisttpl
add
subl
mov
scas
in
aam
cltd
cld
push
popf
pop
pop
fsubs
jle
cmpl
roll
pop
cmp
lods
and
mov
dec
lods
inc
add
add
scas
stos
jno
and
out
add
sbb
ljmp
dec
aad
xchg
lods
sbb
bound
mov
jmp
add
call
mov
cmpsl
cmp
mov
add
mov
stos
mov
xchg
out
loope
add
cmp
jne
adc
mov
mov
aas
stos
push
aad
mov
and
add
imul
pop
rolb
xchg
add
add
xchg
mov
testb
sahf
mov
ret
adc
mov
add
arpl
dec
jnp
mov
popl
jmp
inc
jg
imul
or
out
fsubl
and
cmp
jg
push
aaa
mov
add
jp
es
mov
sti
outsb
jp
scas
or
das
sub
mov
bound
mov
outsb
mov
fldt
add
push
jmp
add
or
cmpl
or
cmpsb
push
and
out
add
mov
mov
rcrl
push
je
inc
add
lahf
lea
mov
jg
add
mov
ja
and
mov
adc
mov
add
mov
ljmp
repnz
add
mov
lock
test
bound
mov
hlt
pop
jae
mov
stos
jbe
add
push
hlt
rolb
sub
sub
dec
push
int
out
add
in
popa
iret
stos
jmp
jp
add
mov
add
leave
sbb
push
mov
xchg
add
aaa
outsl
fstps
mov
xor
jns
mov
add
inc
push
ret
lods
mov
xor
xchg
sub
cmpsl
dec
push
stos
or
mov
add
add
rolb
mov
add
sbb
mov
js
xchg
loop
mov
dec
adc
add
mov
js
out
mov
add
in
jno
add
xchg
add
mov
mov
mov
mov
iret
ljmp
cmc
xchg
sbb
add
add
pop
arpl
pushf
mov
push
jnp
cmpsl
sbb
mov
dec
imul
aam
in
dec
sub
dec
stc
aam
add
jns
ja
cmp
stc
cmp
add
mov
insl
aad
xchg
dec
xchg
jl
scas
cli
bound
mov
add
sbb
stos
fisttps
fidivl
add
add
cmc
scas
sti
roll
mov
add
scas
es
int3
pushl
sub
or
adcl
add
add
fnstenv
adcl
add
and
repnz
jmp
mov
rolb
push
sub
mov
push
int
cwtl
nop
add
xchg
adc
mov
or
add
mov
add
lods
addr16
push
add
add
or
jnp
nopl
push
mov
push
add
mov
cmpsb
add
mov
cld
jbe
movsb
add
mov
fistl
mov
int3
sub
cmp
sub
mov
mov
pusha
add
out
add
add
shl
mov
inc
add
mov
inc
adc
sbb
or
xor
mov
data16
mov
mov
mov
jae
lds
mov
mov
dec
bound
mov
mov
cmpsb
dec
packssdw
lds
or
mov
add
mov
daa
fldl
add
enter
lods
cmp
dec
nop
add
mov
jmp
cmc
imul
sub
push
mov
rolb
mov
mov
sbb
jo
mov
mov
cli
int
out
mov
add
add
mov
pop
addb
mov
pop
test
and
fcomps
mov
pop
push
xchg
rolb
and
mov
js
xlat
ret
les
hlt
push
add
mov
jbe
hlt
outsl
or
and
jnp
iret
xor
mov
mov
cltd
push
add
rolb
mov
pop
mov
mov
int
push
add
cmpsb
and
or
lods
es
dec
jno
outsl
add
cmp
mov
mov
push
add
pop
xchg
add
push
add
rolb
mov
add
mov
add
loope
add
pop
sub
mov
movsl
and
adc
mov
mov
ds
xchg
in
adc
or
stos
adc
mov
outsb
xchg
cmp
add
mov
add
fsubrl
push
jnp
pop
ror
xchg
negl
add
mov
lsl
data16
and
mov
addr16
jns
cmp
mov
scas
js
adc
jecxz
inc
jmp
and
mov
or
jns
dec
lret
int
arpl
cmpsl
jg
mov
pop
rolb
mov
fmull
add
dec
scas
imul
cmc
neg
push
add
push
lahf
popa
and
mov
inc
add
repnz
nop
cld
jae
add
push
mov
add
mov
je
cmp
add
mov
add
add
daa
pop
out
mov
mov
nop
leave
jmp
mov
add
add
bound
mov
cwtl
add
push
mov
nop
leave
jmp
add
dec
clc
push
push
mov
xchg
ret
flds
add
test
push
mov
xchg
ret
fiaddl
jle
mov
sbb
repnz
nop
cld
jae
add
add
xlat
add
and
add
in
push
in
movsb
add
pop
add
add
mov
xchg
ret
mov
mov
out
clc
clc
repnz
nop
cld
jae
add
icebp
test
repnz
nop
cld
jae
mov
enter
out
dec
push
mov
xchg
ret
add
add
xlat
pop
decl
test
add
clc
repnz
nop
cld
jae
xlat
add
and
add
je
clc
repnz
nop
cld
jae
add
popf
test
add
add
ret
ds
add
add
pop
bound
in
add
push
clc
repnz
nop
cld
jae
add
push
clc
repnz
nop
cld
jae
lahf
mov
ljmp
add
clc
repnz
nop
cld
jae
push
sub
lea
add
push
mov
xchg
ret
add
add
dec
adcb
mov
add
repnz
nop
cld
jae
ja
ja
add
add
icebp
daa
jnp
mov
push
mov
xchg
ret
mov
add
mov
sbb
mov
push
clc
repnz
nop
cld
jae
xlat
fs
add
fcomi
movsb
push
mov
xchg
ret
lret
add
rorl
in
add
jg
inc
mov
arpl
mov
jmp
and
sbbb
nop
cld
jae
push
add
js
enter
pushf
mov
push
mov
xchg
ret
add
add
js
lahf
sbb
push
push
mov
nop
leave
jmp
add
lahf
add
mov
lea
push
mov
xchg
ret
andb
fwait
mov
clc
repnz
nop
cld
jae
xlat
ja
mov
push
mov
xchg
ret
push
push
push
and
fisttps
mov
adc
repnz
nop
cld
jae
add
add
add
mov
push
mov
nop
leave
jmp
add
mov
adc
mov
and
push
mov
xchg
ret
add
add
add
add
and
clc
repnz
nop
cld
jae
mov
add
mov
add
in
nop
leave
jmp
bound
add
add
mov
clc
repnz
nop
cld
jae
std
andb
push
push
mov
xchg
ret
std
stc
add
dec
addb
mov
stos
clc
repnz
nop
cld
jae
add
add
cmpb
mov
add
clc
repnz
nop
cld
jae
jge
add
add
out
je
clc
repnz
nop
cld
jae
add
fstpl
mov
xchg
ret
movsb
lret
add
dec
add
add
xor
add
clc
repnz
nop
cld
jae
inc
mov
or
mov
xchg
ret
add
add
add
mov
ds
push
mov
nop
leave
jmp
add
add
mov
inc
clc
repnz
nop
cld
jae
add
add
lret
add
pusha
push
pop
push
mov
xchg
ret
add
xlat
sub
add
rclb
jmp
and
js
mov
add
clc
repnz
nop
cld
jae
mov
sbb
mov
add
add
mov
nop
nop
cld
jae
adc
dec
add
mov
xchg
add
add
sub
add
aaa
test
cmp
push
mov
nop
leave
jmp
add
jge
add
mov
mov
pop
push
mov
nop
leave
jmp
add
lret
add
add
lods
jne
push
mov
nop
leave
jmp
ja
inc
xlat
pop
leave
push
mov
nop
leave
jmp
andb
add
xlat
std
popf
inc
outsb
pusha
clc
repnz
nop
cld
jae
fidivl
ja
add
mov
add
xor
mov
push
mov
nop
leave
jmp
add
stc
add
push
and
mov
test
lret
add
scas
dec
xor
add
xchg
xchg
pop
xor
clc
repnz
nop
cld
jae
add
add
add
add
clc
repnz
nop
cld
jae
add
ja
lahf
add
add
fs
mov
nop
leave
jmp
cmpb
clc
repnz
nop
cld
jae
add
add
bound
sbb
nop
nop
cld
jae
mov
adc
dec
mov
push
mov
nop
leave
jmp
add
lahf
push
sahf
call
clc
repnz
nop
cld
jae
add
add
adc
mov
repnz
nop
cld
jae
ljmp
xor
clc
repnz
nop
cld
jae
popf
add
add
jne
clc
repnz
nop
cld
jae
movsb
fisubl
add
clc
repnz
nop
cld
jae
add
popl
dec
call
push
mov
nop
leave
jmp
add
movsb
popl
adc
movzwl
push
mov
nop
leave
jmp
lahf
cmpb
shll
mov
mov
mov
add
mov
jne
je
repnz
nop
cld
jae
jge
add
push
mov
or
add
repnz
nop
cld
jae
bound
add
lret
cmp
repnz
nop
cld
jae
add
mov
cld
or
nop
leave
jmp
add
dec
push
clc
repnz
nop
cld
jae
add
ds
clc
repnz
nop
cld
jae
add
mov
outsl
rep
clc
repnz
nop
cld
jae
mov
add
ret
rolb
sbb
mov
xchg
ret
dec
sub
add
popf
ja
je
repnz
nop
nop
cld
jae
add
sub
add
clc
repnz
nop
cld
jae
push
add
push
mov
mov
nop
leave
jmp
enter
add
add
sbbl
clc
repnz
nop
cld
jae
add
add
enter
mov
clc
repnz
nop
cld
jae
mov
or
roll
xchg
ret
jle
lock
add
mov
mov
nop
leave
jmp
bound
add
add
lock
outsb
test
push
mov
nop
leave
jmp
add
add
add
add
and
repnz
nop
cld
jae
add
sub
addb
xchg
pop
leave
push
mov
add
add
ljmp
clc
dec
adc
mov
mov
and
add
repnz
nop
cld
jae
xorb
fiaddl
xchg
ret
fcmovbe
jge
add
mov
clc
repnz
nop
cld
jae
push
mov
dec
adc
repnz
nop
cld
jae
ret
add
js
mov
clc
repnz
nop
cld
jae
bound
add
add
int
push
mov
xchg
ret
xlat
dec
add
flds
add
mov
nop
leave
jmp
lahf
mov
add
and
inc
clc
repnz
nop
cld
jae
mov
jge
add
mov
push
mov
xchg
ret
ret
add
add
mov
clc
repnz
nop
cld
jae
add
add
push
mov
xchg
adc
nop
nop
cld
jae
add
stc
stos
push
mov
nop
leave
jmp
jge
add
test
mov
clc
repnz
nop
cld
jae
add
add
add
adc
xchg
repnz
nop
cld
jae
pusha
jge
add
daa
adc
xchg
sbb
repnz
nop
cld
jae
add
push
dec
pop
clc
repnz
nop
cld
jae
add
and
add
popf
add
jne
add
clc
repnz
nop
cld
jae
add
mov
pop
inc
clc
repnz
nop
cld
jae
bound
add
add
add
gs
mov
rcll
addr16
mov
clc
repnz
nop
cld
jae
add
add
lock
jbe
clc
repnz
nop
cld
jae
add
add
cmp
push
mov
nop
leave
jmp
add
mov
nop
add
add
clc
repnz
nop
cld
jae
add
stc
add
nop
nop
cld
jae
add
mov
xor
add
clc
repnz
nop
cld
jae
add
dec
add
clc
repnz
nop
cld
jae
dec
add
rcr
add
add
lahf
into
inc
add
add
add
enter
xchg
add
clc
repnz
nop
cld
jae
add
lret
enter
add
repnz
nop
cld
jae
add
ja
add
push
cs
clc
repnz
nop
cld
jae
add
fs
or
test
repnz
nop
cld
jae
add
add
cmpw
push
mov
nop
leave
jmp
xorb
add
repnz
nop
cld
jae
add
mov
add
lea
clc
repnz
nop
cld
jae
add
add
sub
aaa
adc
mov
jne
clc
repnz
nop
cld
jae
add
ds
xor
push
mov
nop
leave
jmp
enter
insb
popf
add
jg
sti
push
mov
nop
leave
jmp
fidivl
and
stos
add
clc
repnz
nop
cld
jae
ret
popf
popf
popl
sbb
add
clc
repnz
nop
cld
jae
and
add
rol
push
mov
xchg
ret
ja
lock
enter
cmpl
in
nop
leave
jmp
add
add
add
sbb
add
push
add
add
and
shl
push
mov
nop
leave
jmp
add
dec
in
jge
mov
push
mov
xchg
ret
sub
add
add
pusha
dec
add
pushl
push
mov
xchg
ret
add
sub
les
mov
xchg
ret
in
add
add
ret
test
xchg
and
mov
push
push
mov
xchg
ret
add
dec
add
add
add
lea
push
mov
xchg
ret
push
add
add
imul
mov
xchg
ret
mov
add
andb
inc
rolb
inc
push
mov
xchg
ret
add
ds
add
ljmp
repnz
nop
cld
jae
add
add
add
adc
les
repnz
nop
cld
jae
add
mov
push
mov
mov
nop
leave
jmp
adc
icebp
fidivrl
push
mov
xchg
ret
add
dec
push
mov
and
push
mov
nop
leave
jmp
mov
bound
mov
clc
repnz
nop
cld
jae
add
add
cmp
nop
nop
cld
jae
insb
add
add
mov
xor
nop
leave
jmp
pop
add
ret
repnz
nop
cld
jae
lea
std
add
rclb
in
nop
leave
jmp
enter
js
add
add
mov
xchg
ret
and
add
add
xlat
push
testl
nop
cld
jae
mov
sbb
mov
add
outsb
je
mov
nop
leave
jmp
xlat
add
stos
add
pop
push
mov
xchg
ret
push
lock
add
add
mov
push
mov
nop
leave
jmp
add
add
lret
add
mov
clc
repnz
nop
cld
jae
js
andb
in
pop
add
push
mov
nop
leave
jmp
inc
jle
inc
insb
mov
clc
repnz
nop
cld
jae
js
rolb
mov
mov
jne
clc
repnz
nop
cld
jae
adc
add
add
repnz
nop
cld
jae
add
nop
add
mov
clc
repnz
nop
cld
jae
add
jle
add
cs
inc
add
add
add
mov
cli
mov
clc
repnz
nop
cld
jae
add
fldenv
in
mov
clc
repnz
nop
cld
jae
ds
mov
ss
clc
repnz
nop
cld
jae
xlat
jle
mov
and
xor
clc
repnz
nop
cld
jae
add
add
add
mov
clc
repnz
nop
cld
jae
add
mov
clc
repnz
nop
cld
jae
icebp
add
ds
insl
cmp
push
mov
nop
leave
jmp
bound
add
lcall
mov
xchg
ret
push
add
mov
add
push
mov
nop
leave
jmp
add
add
jmp
lahf
push
dec
add
add
adcb
mov
push
mov
nop
leave
jmp
icebp
stc
push
add
push
mov
xchg
ret
add
adc
add
mov
clc
repnz
nop
cld
jae
std
std
fiaddl
jge
pop
clc
add
clc
repnz
nop
cld
jae
add
and
add
nop
nop
cld
jae
ret
stos
mov
add
or
push
sub
push
cmp
ret
add
sub
addb
out
add
clc
repnz
nop
cld
jae
add
popf
add
add
push
clc
repnz
nop
cld
jae
insb
push
add
mov
clc
repnz
nop
cld
jae
push
add
push
push
mov
xchg
ret
add
push
mov
mov
je
clc
repnz
nop
cld
jae
in
add
push
mov
add
cld
fidivl
stos
pop
neg
mov
or
xor
movb
add
clc
repnz
nop
cld
jae
ljmp
add
clc
repnz
nop
cld
jae
jge
add
mov
add
mov
clc
repnz
nop
cld
jae
js
lock
adc
fs
add
add
sub
dec
cmp
mov
nop
leave
jmp
add
add
icebp
add
add
clc
repnz
nop
cld
jae
add
adc
add
push
mov
xchg
ret
add
mov
lret
jne
clc
repnz
nop
cld
jae
pusha
add
sub
sar
repnz
nop
cld
jae
mov
js
add
pop
imul
clc
repnz
nop
cld
jae
add
inc
sbb
xlat
dec
add
clc
repnz
nop
cld
jae
pop
mov
lea
jge
add
repnz
nop
cld
jae
dec
add
add
test
pop
pop
push
mov
xchg
ret
add
mov
fiaddl
add
and
push
push
mov
xchg
ret
jge
dec
and
add
test
imul
clc
repnz
nop
cld
jae
ret
add
ret
adc
in
nop
leave
jmp
add
add
cld
push
push
mov
xchg
ret
add
add
and
add
repnz
nop
cld
jae
sub
addb
fs
mov
clc
repnz
nop
cld
jae
add
dec
lret
mov
mov
test
push
mov
nop
leave
jmp
add
add
js
fiaddl
nop
add
popa
clc
repnz
nop
cld
jae
ret
add
push
bound
add
mov
xchg
ret
add
je
call
push
mov
nop
leave
jmp
add
stc
addb
add
clc
repnz
nop
cld
jae
adc
addb
test
push
mov
nop
leave
jmp
ja
add
mov
ret
addb
rclb
in
nop
leave
jmp
add
add
rolb
cmpsb
push
outsl
and
push
mov
xchg
ret
add
lock
repnz
nop
cld
jae
pop
icebp
ja
add
add
loop
mov
push
push
clc
repnz
nop
cld
jae
stc
push
lea
ja
popf
ja
fcoml
cld
jae
mov
insb
add
jb
clc
repnz
nop
cld
jae
add
push
xchg
add
clc
repnz
nop
cld
jae
inc
std
bound
xor
mov
mov
push
mov
xchg
ret
sub
push
pop
and
push
mov
xchg
ret
ljmp
rolb
mov
mov
nop
nop
cld
jae
add
mov
mov
add
sti
clc
repnz
nop
cld
jae
mov
icebp
add
popf
lock
clc
repnz
nop
cld
jae
add
dec
add
add
mov
mov
clc
repnz
nop
cld
jae
mov
mov
add
lods
pop
push
mov
xchg
ret
inc
push
popl
add
mov
jmp
nop
cld
jae
xlat
dec
mov
add
cltd
pop
push
mov
nop
leave
jmp
lea
jge
inc
mov
push
mov
nop
leave
jmp
mov
add
lret
add
inc
jbe
and
push
mov
xchg
ret
icebp
add
mov
bound
repnz
nop
cld
jae
ja
ja
add
pop
push
mov
xchg
ret
mov
lahf
pop
add
sbb
dec
imul
cld
jae
add
add
clc
repnz
nop
cld
jae
push
mov
sub
xchg
or
add
in
nop
leave
jmp
add
add
add
clc
repnz
nop
cld
jae
add
addb
cmp
loop
add
ja
js
add
mov
enter
add
add
add
push
sahf
popa
fisttpl
je
clc
repnz
nop
cld
jae
dec
add
mov
add
clc
repnz
nop
cld
jae
add
in
push
jbe
push
push
mov
nop
leave
jmp
add
mov
dec
mov
movsb
clc
repnz
nop
cld
jae
bound
sub
pop
add
clc
repnz
nop
cld
jae
mov
xlat
mov
repnz
nop
cld
jae
std
add
mov
arpl
clc
repnz
nop
cld
jae
lea
ret
pop
and
push
push
mov
xchg
ret
add
adc
mov
add
adc
clc
repnz
nop
cld
jae
add
add
insb
push
ljmp
inc
adc
mov
xchg
ret
dec
ret
add
mov
mov
nop
nop
cld
jae
add
add
add
ret
pusha
std
mov
push
mov
nop
leave
jmp
add
add
push
clc
repnz
nop
cld
jae
sub
add
add
add
push
icebp
lea
clc
repnz
nop
cld
jae
enter
stos
jne
clc
repnz
nop
cld
jae
std
ja
sub
sar
repnz
nop
cld
jae
add
ljmp
add
push
js
mov
nop
leave
jmp
push
mov
mov
push
mov
nop
leave
jmp
ja
popf
lret
add
dec
outsl
popa
fs
repnz
nop
cld
jae
addb
mov
push
clc
repnz
nop
cld
jae
stc
lea
sub
std
add
loopne
mov
mov
mov
push
mov
xchg
ret
xlat
add
add
mov
test
clc
repnz
nop
cld
jae
add
lahf
dec
pop
clc
repnz
nop
cld
jae
lahf
mov
flds
push
push
mov
xchg
ret
add
ja
ds
arpl
push
mov
das
add
add
add
add
mov
add
push
mov
xchg
ret
std
add
push
jae
push
clc
repnz
nop
cld
jae
add
add
faddl
nop
cld
jae
add
add
xchg
clc
repnz
nop
cld
jae
add
popl
ja
rep
clc
repnz
nop
cld
jae
add
add
add
add
sub
push
mov
nop
leave
jmp
add
add
jge
mov
mov
push
push
mov
xchg
ret
add
add
popf
addb
mov
nop
leave
jmp
add
ljmp
xor
push
mov
xchg
ret
ds
push
add
add
mov
xchg
ret
mov
ror
add
icebp
mov
add
clc
repnz
nop
cld
jae
add
mov
stc
pushl
clc
repnz
nop
cld
jae
sub
add
add
push
mov
nop
leave
jmp
add
add
add
icebp
je
inc
mov
fistl
mov
cmp
ret
add
enter
mov
xchg
ret
add
bound
add
sar
nop
nop
cld
jae
ljmp
xchg
add
push
mov
nop
leave
jmp
stos
add
addb
shr
jmp
add
mov
popf
add
andb
jnp
repz
mov
xchg
ret
popf
addb
jge
add
add
add
repnz
nop
cld
jae
add
add
add
clc
repnz
nop
cld
jae
add
jle
add
movzwl
clc
repnz
nop
cld
jae
push
flds
addb
mov
clc
repnz
nop
cld
jae
lock
data16
clc
repnz
nop
cld
jae
add
mov
fs
adc
dec
jle
pusha
add
lock
add
je
clc
repnz
nop
cld
jae
add
ret
inc
sahf
mov
push
mov
nop
leave
jmp
add
mov
mov
cli
shr
clc
repnz
nop
cld
jae
add
push
pop
stos
mov
clc
repnz
nop
cld
jae
add
add
mov
clc
repnz
nop
cld
jae
add
add
add
mov
nop
leave
jmp
ret
add
add
loopne
mov
in
add
addl
movsl
pusha
lock
add
jle
add
mov
mov
push
mov
nop
leave
jmp
add
leave
les
clc
repnz
nop
cld
jae
add
adc
enter
nop
cld
jae
dec
dec
add
mov
nop
leave
jmp
pop
add
mov
movsb
add
push
push
mov
xchg
ret
xlat
add
enter
sbb
clc
repnz
nop
cld
jae
push
add
cmpsl
sbb
nop
nop
cld
jae
add
call
nop
nop
cld
jae
lock
add
das
mov
push
mov
xchg
ret
add
add
and
add
mov
add
xor
fistl
cwtl
fildl
xchg
ret
add
add
push
or
pop
faddl
xchg
ret
add
insb
jmp
mov
nop
leave
jmp
add
add
call
clc
repnz
nop
cld
jae
mov
add
push
cmp
jbe
push
mov
nop
leave
jmp
add
xor
mov
lock
add
repnz
nop
cld
jae
orb
and
clc
repnz
nop
cld
jae
jle
add
lahf
add
mov
clc
repnz
nop
cld
jae
add
lret
mov
clc
repnz
nop
cld
jae
add
pop
push
push
mov
xchg
ret
pop
ret
std
adc
add
clc
repnz
nop
cld
jae
add
hlt
jns
jne
push
mov
nop
leave
jmp
subb
add
add
add
clc
repnz
nop
cld
jae
add
add
js
mov
clc
repnz
nop
cld
jae
sub
or
dec
adc
loop
inc
add
add
add
mov
jmp
nop
nop
cld
jae
add
ja
add
add
add
add
repnz
nop
cld
jae
push
and
mov
push
push
mov
nop
leave
jmp
mov
and
pop
ds
mov
push
push
mov
xchg
ret
ret
sbb
add
test
mov
clc
repnz
nop
cld
jae
add
addb
lret
ja
push
push
mov
nop
leave
jmp
add
add
add
add
ror
clc
repnz
nop
cld
jae
xlat
movsb
jle
fs
push
add
clc
repnz
nop
cld
jae
and
popf
mov
nop
leave
jmp
mov
mov
js
add
out
call
in
nop
leave
jmp
add
sub
mov
clc
repnz
nop
cld
jae
std
add
sub
add
add
push
mov
nop
leave
jmp
add
pop
or
repnz
nop
cld
jae
add
enter
hlt
add
mov
jmp
clc
repnz
nop
cld
jae
add
push
in
add
jb
push
mov
xchg
ret
dec
add
popl
add
xchg
add
clc
repnz
nop
cld
jae
fs
js
dec
ret
push
mov
xchg
ret
add
insb
add
add
ret
push
jmp
incl
and
stos
add
add
adc
and
clc
repnz
nop
cld
jae
inc
add
push
push
push
mov
nop
leave
jmp
add
xor
enter
aam
pushl
clc
repnz
nop
cld
jae
push
add
push
mov
xchg
ret
add
push
mov
push
jmp
add
add
add
add
mov
inc
loopne
mov
xchg
ret
push
adc
add
and
clc
repnz
nop
cld
jae
icebp
pop
fs
iret
push
clc
repnz
nop
cld
jae
add
sub
popl
push
mov
nop
leave
jmp
add
flds
ljmp
dec
jmp
ljmp
sub
add
inc
add
add
add
add
clc
repnz
nop
cld
jae
stos
add
add
add
jne
clc
repnz
nop
cld
jae
add
add
mov
in
nop
leave
jmp
sbb
add
enter
add
push
mov
xchg
ret
add
add
add
clc
repnz
nop
cld
jae
flds
add
add
mov
stc
test
push
mov
nop
leave
jmp
add
stc
add
imul
add
in
nop
leave
jmp
js
and
push
out
out
lahf
push
mov
mov
cmp
add
sbb
add
add
imul
nop
nop
cld
jae
and
add
add
ret
xchg
mov
mov
add
ja
stc
dec
enter
add
repnz
nop
cld
jae
lret
add
fs
add
clc
repnz
nop
cld
jae
add
cs
push
mov
xchg
ret
add
dec
push
insb
cmc
popf
rep
push
mov
xchg
ret
ret
add
add
push
clc
repnz
nop
cld
jae
stc
add
push
sti
push
clc
repnz
nop
cld
jae
add
test
lret
xchg
ljmp
nop
cld
jae
xlat
add
mov
add
clc
repnz
nop
cld
jae
add
inc
insb
push
jno
cmpl
push
mov
xchg
ret
add
jge
in
add
mov
push
mov
nop
leave
jmp
sub
movsb
ret
lahf
jecxz
push
clc
repnz
nop
cld
jae
jge
add
rorl
mov
push
mov
nop
leave
jmp
add
lret
sub
add
add
clc
repnz
nop
cld
jae
add
add
add
dec
mov
push
mov
xchg
ret
mov
add
or
mov
xchg
ret
add
xor
mov
loop
mov
push
mov
nop
leave
jmp
and
add
mov
clc
repnz
nop
cld
jae
xlat
add
add
call
pop
into
inc
add
mov
add
in
nop
leave
jmp
movsb
mov
ljmp
mov
xchg
ret
mov
add
add
mov
push
mov
xchg
ret
add
test
loopne
clc
repnz
nop
cld
jae
add
mov
rep
clc
repnz
nop
cld
jae
shll
xlat
std
ljmp
nop
nop
cld
jae
add
push
dec
add
je
clc
repnz
nop
cld
jae
lret
sub
repnz
nop
cld
jae
jge
jle
push
bound
add
jne
clc
repnz
nop
cld
jae
pusha
add
mov
and
arpl
cmp
inc
repnz
incl
flds
add
lock
in
add
insb
add
xchg
int
popa
add
mov
xchg
ret
add
add
mov
add
clc
repnz
nop
cld
jae
add
add
add
mov
push
mov
xchg
ret
add
jge
add
sub
lahf
roll
xchg
ret
add
mov
loopne
mov
pop
clc
repnz
nop
cld
jae
and
fidivrl
sub
repnz
nop
cld
jae
ret
xlat
add
push
rclb
fs
add
lret
add
sbb
nop
leave
jmp
lret
movsb
push
mov
repnz
nop
cld
jae
jge
sbb
js
ret
clc
mov
clc
repnz
nop
cld
jae
push
xor
clc
repnz
nop
cld
jae
stos
add
add
pusha
and
pop
mov
clc
repnz
nop
cld
jae
ja
add
pop
arpl
add
mov
mov
repz
incl
dec
mov
mov
add
add
sbb
inc
add
fiaddl
add
add
add
repnz
nop
cld
jae
add
add
add
stc
out
stos
clc
repnz
nop
cld
jae
ljmp
add
lret
clc
repnz
nop
cld
jae
add
lahf
stos
mov
push
mov
mov
mov
push
mov
xchg
ret
add
fcmove
add
add
mov
clc
repnz
nop
cld
jae
pusha
mov
popf
ja
add
pop
push
mov
xchg
ret
enter
push
add
and
inc
dec
shr
clc
repnz
nop
cld
jae
sar
add
pusha
add
pop
push
push
mov
xchg
ret
add
popl
add
ljmp
pop
push
mov
xchg
ret
add
cmp
movsb
lret
add
push
mov
cmp
fadds
mov
ret
ret
sbb
add
clc
repnz
nop
cld
jae
add
enter
add
mov
push
clc
repnz
nop
cld
jae
add
add
dec
adc
repnz
nop
cld
jae
and
add
enter
mov
data16
sbb
repnz
nop
cld
jae
add
push
sub
ds
jae
mov
nop
leave
jmp
and
lock
add
sbb
add
push
mov
nop
leave
jmp
add
int
jge
clc
repnz
nop
cld
jae
insb
add
add
add
loop
push
mov
nop
leave
jmp
or
add
push
mov
nop
leave
jmp
add
js
add
add
adc
scas
not
push
mov
xchg
ret
dec
jge
jge
and
add
andl
nop
cld
jae
add
andb
clc
repnz
nop
cld
jae
test
xlat
add
mov
xchg
ret
icebp
add
jge
mov
or
mov
xchg
ret
add
popf
pop
lret
call
clc
repnz
nop
cld
jae
std
inc
pop
mov
jbe
decl
sub
sbb
pusha
add
mov
inc
scas
or
clc
repnz
nop
cld
jae
adc
stc
push
popa
push
mov
nop
leave
jmp
mov
fiaddl
add
ret
add
push
sbb
add
push
mov
nop
leave
jmp
add
xlat
fs
and
push
mov
xchg
ret
add
add
add
push
in
clc
repnz
nop
cld
jae
add
add
jmp
nop
cld
jae
add
add
sub
cmp
push
mov
nop
leave
jmp
sub
mov
and
repnz
nop
cld
jae
lret
lea
call
in
nop
leave
jmp
ljmp
mov
mov
mov
sub
inc
rolb
xchg
ret
add
add
dec
sbb
mov
xbegin
jae
popl
ljmp
add
clc
repnz
nop
cld
jae
in
push
add
add
outsl
call
add
lock
bound
in
mov
adc
dec
add
add
and
repnz
nop
cld
jae
ljmp
push
clc
repnz
nop
cld
jae
push
add
add
add
repnz
nop
cld
jae
add
add
and
add
stc
add
clc
repnz
nop
cld
jae
add
lret
test
pop
push
mov
xchg
ret
popl
icebp
movsb
add
addb
xor
push
mov
xchg
ret
inc
dec
addb
fs
add
sub
inc
add
jge
stc
insb
stc
ja
out
mov
clc
repnz
nop
cld
jae
add
add
xchg
mov
mov
call
in
nop
leave
jmp
push
ljmp
push
clc
repnz
nop
cld
jae
adc
xlat
jns
adc
repnz
nop
cld
jae
ja
pusha
add
mov
add
inc
push
mov
xchg
ret
lret
add
lock
add
dec
mov
clc
repnz
nop
cld
jae
add
add
mov
clc
repnz
nop
cld
jae
add
add
add
mov
nop
nop
cld
jae
mov
mov
mov
add
ljmp
ret
add
and
xlat
stc
orb
in
nop
leave
jmp
stc
js
enter
or
repnz
nop
cld
jae
dec
add
fisubl
hlt
test
repnz
nop
cld
jae
insb
sbb
lea
add
div
push
mov
nop
leave
jmp
pop
add
sbbb
stc
hlt
call
in
nop
leave
jmp
stos
js
mov
xchg
clc
mov
push
mov
xchg
ret
add
ja
add
xchg
test
test
push
mov
nop
leave
jmp
push
add
pop
popf
xchg
xor
clc
repnz
nop
cld
jae
add
insb
add
sbb
mov
nop
leave
jmp
ja
and
add
insb
add
into
mov
push
mov
xchg
ret
ret
ljmp
shl
clc
repnz
nop
cld
jae
add
dec
add
ret
iret
mov
clc
repnz
nop
cld
jae
add
insl
push
clc
repnz
nop
cld
jae
push
std
add
ror
add
mov
clc
repnz
nop
cld
jae
push
add
add
clc
repnz
nop
cld
jae
add
xor
popa
clc
repnz
nop
cld
jae
add
add
add
icebp
clc
pusha
push
mov
xchg
ret
add
add
add
add
gs
xchg
inc
add
or
repnz
nop
cld
jae
jle
add
popf
push
mov
clc
repnz
nop
cld
jae
xlat
mov
mov
mov
out
in
inc
add
dec
push
add
add
and
repnz
mov
int3
add
adc
je
lods
mov
add
mov
clc
repnz
nop
cld
jae
stc
stos
add
mov
pusha
clc
repnz
nop
cld
jae
add
add
add
rolb
mov
repnz
nop
cld
jae
add
mov
and
clc
repnz
nop
cld
jae
adc
add
lret
mov
repnz
nop
cld
jae
mov
pusha
add
and
repnz
nop
cld
jae
bound
addr16
and
push
mov
xchg
ret
stos
add
sub
push
shll
add
add
enter
pop
std
jbe
xor
mov
push
push
mov
nop
leave
jmp
in
fs
add
addb
lret
and
repnz
nop
cld
jae
add
pop
xor
push
mov
nop
leave
jmp
add
bound
mov
sub
clc
repnz
nop
cld
jae
enter
add
repnz
nop
cld
jae
sbb
add
ret
call
clc
repnz
nop
cld
jae
dec
add
movsb
and
pusha
push
mov
nop
leave
jmp
mov
add
add
addl
mov
push
mov
nop
leave
jmp
xlat
add
push
sahf
mov
push
mov
nop
leave
jmp
add
push
xor
push
mov
xchg
ret
add
stos
mov
repnz
nop
cld
jae
add
add
pop
add
clc
repnz
nop
cld
jae
add
xlat
add
add
mov
clc
repnz
nop
cld
jae
pusha
add
pusha
ret
dec
push
mov
nop
leave
jmp
add
add
add
mov
clc
repnz
nop
cld
jae
add
add
and
mov
push
mov
xchg
ret
ja
lock
addb
jo
mov
je
clc
repnz
nop
cld
jae
mov
add
dec
or
repnz
nop
cld
jae
add
ja
mov
ja
or
mov
nop
leave
jmp
enter
lock
xlat
add
clc
repnz
nop
cld
jae
enter
adcb
inc
call
inc
add
movsb
add
mov
mov
test
xlat
add
clc
repnz
nop
cld
jae
adc
adc
repnz
nop
cld
jae
movsb
add
mov
repnz
nop
cld
jae
dec
add
add
add
sub
push
mov
nop
leave
jmp
bound
add
popf
call
clc
repnz
nop
cld
jae
add
add
mov
xchg
ret
sub
mov
bound
mov
mov
inc
clc
repnz
nop
cld
jae
popf
bound
push
add
add
add
add
in
nop
leave
jmp
add
clc
repnz
nop
cld
jae
add
add
inc
add
xchg
lock
repnz
nop
cld
jae
add
mov
andb
sbb
stc
clc
repnz
nop
cld
jae
ret
push
pusha
pop
push
clc
repnz
nop
cld
jae
add
add
jmp
add
lock
cmc
add
add
jp
mov
jmp
in
ja
add
adc
add
mov
repz
repnz
nop
cld
jae
fcmove
stc
xlat
sub
mov
dec
add
clc
repnz
nop
cld
jae
add
add
ret
add
push
clc
repnz
nop
cld
jae
add
add
das
call
clc
repnz
nop
cld
jae
js
mov
into
pop
push
mov
nop
leave
jmp
jle
mov
add
lret
mov
push
mov
nop
leave
jmp
add
in
mov
test
jge
movswl
push
mov
nop
leave
jmp
add
add
popf
incb
nop
rolb
xchg
ret
add
ret
add
popf
cmp
adc
inc
add
add
rep
sub
clc
repnz
nop
cld
jae
jge
push
add
and
mov
xchg
ret
push
xlat
stos
add
loope
mov
repnz
nop
cld
jae
add
and
add
movsb
dec
je
clc
repnz
nop
cld
jae
add
lahf
ja
push
clc
repnz
nop
cld
jae
and
add
in
add
in
add
mov
sub
repnz
nop
cld
jae
ret
mov
push
push
mov
xchg
ret
mov
mov
cld
clc
repnz
nop
cld
jae
ret
add
add
push
push
mov
mov
rcr
incl
mov
test
add
xlat
add
repnz
nop
cld
jae
adc
pop
mov
xor
mov
mov
xchg
ret
pusha
add
add
sub
clc
repnz
nop
cld
jae
ficompl
mov
rclb
mov
inc
add
push
add
add
add
or
push
mov
nop
leave
jmp
add
js
lret
add
add
and
push
mov
xchg
ret
lock
enter
loop
mov
add
push
mov
xchg
ret
enter
fldenv
adc
clc
repnz
nop
cld
jae
pop
add
mov
stc
inc
add
add
mov
push
mov
xchg
ret
add
fs
push
clc
repnz
nop
cld
jae
add
enter
sub
lea
push
mov
nop
leave
jmp
add
add
fs
mov
jne
clc
repnz
nop
cld
jae
mov
add
inc
cmp
push
mov
nop
leave
jmp
sub
ljmp
mov
nop
leave
jmp
addb
enter
add
nop
leave
jmp
push
jle
mov
flds
or
clc
repnz
nop
cld
jae
add
test
mov
xchg
ret
mov
xlat
add
xlat
add
nop
cld
jae
std
mov
mov
push
clc
repnz
nop
cld
jae
add
lahf
add
add
dec
shll
add
push
mov
nop
leave
jmp
sub
dec
out
mov
push
mov
nop
leave
jmp
mov
add
dec
mov
mov
nop
leave
jmp
add
movsb
add
add
pop
clc
repnz
nop
cld
jae
in
mov
add
fxch
shll
je
clc
repnz
nop
cld
jae
add
popf
xchg
push
mov
nop
leave
jmp
movsb
dec
add
popf
add
mov
xchg
ret
add
movsb
add
add
mov
clc
repnz
nop
cld
jae
ja
add
test
in
nop
leave
jmp
jle
mov
add
sbb
xor
jmp
call
in
nop
leave
jmp
mov
add
inc
jne
and
clc
repnz
nop
cld
jae
add
add
dec
push
clc
repnz
nop
cld
jae
movsb
adc
test
incl
dec
popf
jge
std
mov
pop
popf
lahf
add
add
push
mov
clc
repnz
nop
cld
jae
mov
ljmp
icebp
clc
repnz
nop
cld
jae
add
jge
and
scas
lea
push
mov
xchg
ret
add
add
mov
or
push
mov
nop
leave
jmp
add
add
add
dec
add
push
mov
xchg
ret
add
add
enter
call
in
mov
add
mov
mov
rcll
dec
push
mov
nop
leave
jmp
add
add
ret
add
movb
mov
xchg
ret
add
add
add
push
mov
nop
leave
jmp
mov
add
dec
and
fmull
test
inc
add
push
add
add
or
mov
xchg
ret
add
xlat
sub
adc
mov
mov
lods
push
mov
nop
leave
jmp
mov
add
push
adc
clc
repnz
nop
cld
jae
lret
roll
cmp
inc
clc
repnz
nop
cld
jae
inc
adc
std
add
rcrl
add
push
mov
nop
leave
jmp
add
enter
inc
shrl
sar
nop
nop
cld
jae
ljmp
jnp
ljmp
add
add
fmuls
test
clc
repnz
nop
cld
jae
lock
nop
cld
jae
add
add
add
in
add
jge
push
mov
xchg
ret
add
add
add
mov
in
nop
leave
jmp
shll
test
call
in
nop
leave
jmp
mov
push
mov
xchg
ret
add
ljmp
imul
cli
dec
add
xorb
add
mov
push
mov
nop
leave
jmp
add
dec
add
call
push
mov
nop
leave
jmp
dec
enter
arpl
clc
repnz
nop
cld
jae
add
add
pop
push
mov
xchg
ret
mov
add
mov
mov
clc
repnz
nop
cld
jae
add
std
xlat
ljmp
clc
repnz
nop
cld
jae
add
movzwl
clc
repnz
nop
cld
jae
test
add
sbb
js
mov
nop
leave
jmp
adc
add
xlat
jns
add
push
mov
nop
leave
jmp
mov
mov
pop
push
mov
lock
mov
add
xor
pop
add
divl
lea
add
mov
fs
sub
stos
adc
mov
dec
pop
out
xor
test
jg
xlat
xor
jne
dec
je
pusha
add
adc
data16
jnp
jns
xor
sbb
mov
xchg
xor
pop
xor
mov
xchg
or
push
mov
arpl
mov
dec
aam
inc
jbe
jb
mov
mov
push
pop
and
mov
and
sbb
loop
mov
push
mull
and
les
mov
ds
mov
mov
gs
mov
jne
stc
mov
mov
push
push
mov
cmpl
sbb
mov
fwait
mov
xchg
lret
lock
in
mov
das
jb
mov
ljmp
mov
mov
push
iret
scas
dec
mov
xchg
pop
mov
mov
cmpsl
js
cmp
dec
inc
pop
pop
jno
inc
and
sub
xchg
int
add
add
lods
das
outsb
mov
cmc
rol
inc
int3
addr16
inc
add
mov
add
ret
push
ljmp
xor
mov
dec
hlt
xchg
add
mov
popf
outsl
mov
push
xor
fcomps
int
lret
dec
or
lods
cmc
in
lahf
dec
stos
xlat
pop
das
shll
dec
mov
xchg
lock
add
mov
pop
loope
aaa
mov
sub
test
dec
lea
dec
fisubrl
mulb
mov
mov
cmp
test
and
mov
sarl
xchg
loope
and
add
cltd
cltd
add
or
inc
add
stc
jecxz
or
or
insl
ss
cli
push
mov
inc
cli
xchg
fnstcw
inc
add
xor
mov
xchg
repnz
fistl
cmp
je
in
mov
mov
mov
or
test
and
mov
inc
and
addr16
je
mov
mov
mov
or
movsb
mov
add
xor
mov
and
mov
mov
jbe
adc
sub
add
pop
je
jg
flds
push
mov
pop
mov
addb
ljmp
pop
pusha
add
outsb
push
add
add
loopne
mov
enter
out
bound
mov
xor
sub
inc
add
jge
jmp
xor
or
call
mov
xor
jge
add
clc
jge
in
sub
xor
adc
mov
lahf
fsubrl
mov
popf
jo
mov
add
clc
lcall
mov
int
jb
mov
mov
lahf
or
fistps
add
add
add
sbbl
aaa
push
pop
imul
pop
sbb
xor
mov
mov
rolb
mov
add
inc
push
jb
mov
mov
mov
lods
or
outsl
ret
cmp
cltd
and
mov
add
xor
mulb
or
or
push
add
xor
mov
push
pop
nop
add
sbb
mov
mov
push
push
add
movsl
xchg
cs
in
ljmp
cld
hlt
lcall
inc
xor
mov
mov
mov
push
loop
mov
ss
bndstx
add
enter
jle
lret
in
lock
stc
cmp
scas
push
jbe
bound
mov
lods
ljmp
cs
mov
add
cltd
out
fwait
cmp
add
jno
and
mov
add
xlat
lds
add
cwtl
int3
jp
ds
icebp
sti
cwtl
rolb
mov
jns
scas
push
sub
and
pop
leave
ret
addb
push
add
movsl
test
xchg
add
add
xor
cmpsb
repz
shll
mov
jb
mov
js
mov
lock
sar
pop
loope
dec
bound
mov
cmpsb
and
enter
push
rolb
dec
sub
into
jae
mov
sbb
int
add
mov
add
addr16
aaa
mov
daa
int3
xor
add
push
mov
sbb
pop
pushf
pop
popf
or
test
rorl
enter
mov
jne
int
popa
mov
add
loope
sub
lock
jo
mov
data16
lds
mov
mov
add
mov
pop
pop
lahf
pop
sub
jecxz
insl
sub
icebp
testb
mov
mov
xchg
call
add
scas
and
push
jne
stos
cmp
sbb
ret
cmc
mov
lods
adc
mov
add
out
adc
mov
or
mov
adc
cmp
imul
rcrl
repnz
lret
dec
das
cmp
faddp
inc
add
sti
or
add
mov
mov
mov
jb
mov
cli
ret
les
or
jle
mov
push
mov
xchg
insl
dec
ficompl
nop
add
addr16
stos
ja
loop
mov
sbbl
mov
add
insb
pop
jmp
jnp
and
mov
pop
jne
imul
repnz
mov
cmp
mov
mov
dec
xchg
inc
add
mov
mov
idivb
and
add
mov
mov
mov
and
mov
xchg
in
xor
push
push
out
mov
daa
or
cwtl
inc
jmp
addb
push
repz
js
push
xlat
scas
ljmp
or
mov
mov
ss
movsl
imul
pop
lahf
mov
mov
aad
in
add
mov
arpl
jecxz
pushf
fisttpll
daa
aas
mov
xor
push
addr16
push
pushf
fmuls
mov
lds
and
xchg
lea
loop
mov
inc
sub
add
mov
adc
mov
sbb
mov
out
loope
add
jp
adc
mov
pop
xor
mov
insb
push
cmp
xor
add
add
mov
mov
mov
cmp
jns
mov
insb
pop
movsl
les
movb
fwait
les
repnz
test
pop
sti
mov
add
leave
cmp
pop
add
imul
inc
add
add
into
lret
fidivrl
add
adc
int3
and
mov
fucomp
sti
inc
or
xchg
stc
jl
add
cltd
mov
xchg
or
je
jb
mov
xchg
sub
jne
test
aas
dec
lds
or
add
cltd
aas
cli
int3
add
test
sbb
mov
mov
dec
out
and
sub
push
xlat
jle
or
loop
mov
sbb
popf
inc
push
jmp
adc
mov
pop
cmp
inc
add
push
sahf
test
pop
je
sbb
idivl
nop
add
movsl
in
fists
mov
lret
pop
xor
fucom
lahf
mov
out
pop
inc
add
xor
outsl
icebp
rolb
mov
mov
mov
mov
mov
inc
push
rolb
mov
dec
les
mov
pop
ja
adc
lods
mov
inc
sbb
mov
in
or
mov
add
or
sub
jno
lar
mov
ficoml
push
loopne
mov
xor
ret
cs
pop
mov
jbe
adc
mov
enter
jne
sbb
push
jnp
pushf
cmp
inc
out
mov
jmp
frstor
icebp
adc
dec
inc
add
push
add
fstpl
mov
mov
hlt
jl
andnps
mov
mov
dec
es
xchg
xor
adcl
test
fbld
mov
cltd
dec
cmpsl
add
ljmp
mov
jecxz
mov
mov
mov
mov
add
dec
mov
dec
pusha
add
das
inc
shll
addr16
cmp
add
sub
insl
mov
pop
pushf
cmp
xchg
mov
out
add
mov
cmp
lock
addb
stc
test
mov
out
incb
push
mov
popf
insl
mov
push
cmp
rolb
mov
mov
ljmp
add
mov
mov
add
mov
mov
xor
jle
orl
dec
fbld
dec
popa
loop
mov
add
add
add
mov
add
lahf
std
mov
enter
mov
lahf
inc
out
enter
jb
mov
jmp
add
push
xchg
push
bound
mov
int
lret
jg
add
dec
or
outsb
xor
loope
cmp
jne
les
call
stos
imul
ds
mov
aad
mov
lods
sti
pop
mov
test
mov
lret
movsb
adc
add
cli
sub
jnp
fdivr
mov
out
push
add
sub
mov
rorl
add
stc
or
adc
clc
mov
mov
mov
out
out
in
push
inc
pop
add
bound
mov
and
mov
stos
je
add
mov
ret
in
lahf
rorl
ret
mov
mov
adc
insl
jb
mov
data16
inc
call
add
jbe
test
mov
cs
adc
mov
sub
add
in
ffree
add
cwtl
sub
pop
stc
mulb
mov
or
add
test
mov
add
mov
or
adc
mov
es
add
fstps
dec
push
add
fisttps
lret
push
outsl
jmp
scas
rolb
mov
fnstenv
movsl
test
enter
fstpl
bound
mov
xor
mov
fiaddl
sbb
cmp
inc
std
cwtl
dec
int
add
sbb
popf
stos
cmp
sub
fimull
add
add
mov
cmp
andl
scas
sub
inc
iret
icebp
and
mov
rolb
ljmp
lea
adc
mov
mov
sub
addb
leave
xchg
sti
jne
inc
add
push
std
xchg
dec
adc
add
shll
add
dec
mov
lods
divb
mov
fistpll
mov
insb
or
aam
fs
inc
add
add
add
add
push
cwtl
pop
mov
in
test
sub
addb
adc
cmp
jmp
js
out
sbb
fnsave
lahf
bound
mov
lods
mov
inc
mov
sbb
add
sub
loopne
mov
sbb
jmp
add
push
loopne
mov
sarl
faddl
popl
add
add
fdivrs
or
pop
fstl
add
mov
sub
add
jae
hlt
add
add
fwait
pop
mov
lock
mov
dec
sbb
outsb
sub
mov
mov
mov
lcall
lea
loop
mov
mov
cmp
jmp
cmpsl
sub
decl
adc
push
out
ljmp
add
pop
push
int
mov
pop
loope
add
cld
pop
lcall
adc
mov
pop
jo
mov
in
clc
mov
push
scas
push
add
mov
xor
mov
loop
mov
add
fcoms
cli
bound
mov
outsl
mov
lea
cmp
lock
mov
inc
add
jmp
lods
int3
jnp
fisttpll
xor
push
add
add
popa
pop
mov
fstps
sbb
test
divb
mov
push
pop
loop
mov
das
mov
pop
mov
mov
sub
push
loopne
mov
adc
add
ret
jp
mov
lcall
rolb
mov
add
mov
cmp
add
jno
add
sbb
add
das
push
fwait
mov
add
add
ret
dec
jne
cwtl
sub
mov
hlt
insl
sub
sub
add
inc
je
xor
addb
popa
out
stc
or
rolb
push
lahf
pop
mov
add
push
fbld
rol
ja
lock
std
and
lret
sub
dec
pop
and
mov
adc
cmp
add
popa
sahf
cmp
cli
adc
and
mov
pop
mov
mov
add
add
mov
cs
rolb
mov
aaa
inc
mov
mov
mov
cmovp
addb
fidivl
push
cld
and
ret
xor
mov
push
dec
clc
sbb
add
jnp
or
jnp
adc
mov
dec
dec
aam
add
cltd
dec
lret
leave
mov
jb
mov
movsl
inc
adc
lahf
push
push
push
or
add
adc
mov
mov
fsubr
bound
mov
inc
push
insb
push
add
std
testb
inc
sti
lods
lods
addb
add
mov
cltd
aas
xor
mov
dec
mov
hlt
stc
test
and
imul
rolb
mov
pop
test
lods
imul
dec
sbbl
dec
cmpl
mov
ret
enter
push
dec
addb
lods
loope
add
add
test
mov
add
add
std
push
add
in
ds
movq
js
mov
lock
ss
mov
mov
push
icebp
sahf
add
add
repnz
mov
jmp
mov
fwait
push
inc
jbe
ret
loop
mov
add
movsl
sti
fwait
rolb
mov
push
adcl
pop
out
adc
lcall
mov
add
mov
and
mov
lret
mov
pop
jp
fisubrs
dec
dec
out
addr16
je
add
dec
adc
mov
mov
mov
inc
add
xor
mov
divb
rolb
inc
mov
lret
cmpsb
and
popa
jle
lahf
lret
in
jae
add
push
push
bound
mov
rorl
stc
sub
mov
add
pop
mov
lahf
pop
sti
mov
xor
jecxz
mov
mov
sub
gs
mov
cltd
add
mov
add
in
mov
scas
pop
mov
mov
mov
mov
mov
data16
bound
mov
pop
outsb
xor
stos
aas
addb
mov
sahf
inc
add
add
sub
push
jmp
ja
add
mov
ret
enter
adc
mov
ficompl
sub
mov
pop
push
cmc
inc
push
scas
mov
call
rcrl
cli
cmpsl
mov
push
dec
scas
push
push
pop
aaa
das
in
in
and
cmc
push
mov
mov
mov
xchg
dec
xchg
rolb
mov
or
out
lcall
jle
mov
adc
mov
shll
cs
jb
mov
inc
insl
in
clc
test
cmp
pop
add
mov
jge
cmp
icebp
add
pushf
cmp
sbb
iret
xchg
jge
add
std
rolb
mov
dec
sub
das
fsubrl
icebp
nop
add
adc
xor
mov
insb
daa
imul
jmp
stos
fisttpl
rolb
mov
je
add
fs
int
addb
addb
ret
push
fidivs
test
push
cmp
cmc
sub
outsb
stos
dec
push
add
adc
sub
mov
cli
add
mov
jp
add
fidivl
add
dec
add
mov
or
push
xchg
and
mov
push
rolb
xor
lret
inc
mov
mov
add
lea
mov
pop
and
adc
mov
ret
mov
jns
pushf
insl
push
add
mov
or
rolb
pusha
add
mov
test
jno
fsubs
push
out
mov
mov
add
cltd
addb
inc
add
add
pop
daa
xchg
sbb
pop
mov
pop
mov
adc
mov
daa
rolb
mov
push
sbb
inc
les
add
stc
sbbl
xor
jmp
gs
sbb
notl
add
add
add
mov
add
imul
psllw
lret
mov
inc
add
nop
add
mov
add
lcall
repz
pop
icebp
fsubl
ja
out
sub
idivl
mov
or
add
dec
mov
xor
push
test
xchg
addb
add
add
cmp
sub
ss
mov
pop
fsubrp
scas
and
aas
jmp
push
dec
add
pusha
add
sbb
lea
add
icebp
aaa
mov
in
movsl
test
test
lods
push
stos
sti
push
add
in
xor
push
add
mov
pop
push
pop
movsl
rolb
mov
inc
cmc
cwtl
or
popa
mov
mov
add
das
repnz
add
mov
add
push
pushf
dec
data16
dec
mov
out
mov
test
in
add
mov
add
add
mov
ja
hlt
inc
in
xchg
push
sbb
and
add
mov
mov
mov
mov
bound
mov
cmpsl
push
jbe
hlt
repnz
in
sti
xor
ret
inc
rcl
sub
dec
test
mov
add
add
inc
add
clc
dec
lahf
mov
subl
add
mov
mov
popf
mov
mov
add
mov
test
outsb
in
daa
iret
jle
lods
pusha
add
and
mov
add
pop
scas
enter
mov
pop
out
or
or
pop
rolb
mov
dec
lods
mov
mov
add
imul
aam
rcr
adc
mov
adc
push
pop
arpl
mov
push
push
gs
push
cmp
adc
lods
mov
mov
sbb
sbb
jo
mov
cmpsb
stos
push
aaa
fldz
pusha
add
dec
cmpsl
xchg
push
add
mov
pusha
add
popa
rolb
jns
mov
cmp
sbb
dec
cmp
push
add
add
add
mov
add
lods
adc
mov
or
cs
bound
mov
lret
and
cs
std
sbb
testl
jg
sub
dec
mov
inc
sbb
out
fnstcw
sbb
add
or
add
mov
add
dec
movb
mov
iret
add
cmp
sub
dec
and
data16
cmpsb
cmp
aad
cmp
add
sub
sti
xlat
out
mov
mov
in
xor
mov
mov
aaa
in
dec
inc
rolb
mov
aaa
xor
mov
fucomi
scas
cmp
jecxz
nop
add
nop
add
rolb
mov
rolb
mov
add
inc
jnp
nop
add
in
mov
mov
mov
jmp
add
nop
add
loop
mov
mov
stos
icebp
or
int
stos
and
pop
dec
insb
cmp
mov
addb
movsb
cwtl
mov
pop
sbb
pushf
jns
push
dec
push
rolb
mov
imul
jns
fldenv
popf
jecxz
add
add
imul
xchg
pop
popa
repnz
mov
jmp
add
mov
stc
mov
cmc
ljmp
out
mov
mov
inc
ja
pop
sbb
inc
add
movntq
out
sub
insb
sub
in
fcoms
mov
insl
cmc
push
fs
mov
mov
inc
add
and
mov
faddl
xor
mov
loop
mov
push
add
jg
xchg
repz
pop
daa
xchg
mov
es
pop
fcoms
imul
sub
cld
jl
add
outsb
xor
mov
aas
mov
fs
dec
fisubl
sbb
lods
int
xlat
sbb
fcoms
mov
pushf
adc
mov
jge
and
jmp
lods
repz
xchg
cmpl
mov
xchg
leave
nop
add
sbb
fstps
out
add
add
lea
mov
sub
mov
add
add
mov
push
push
pop
rolb
mov
push
xchg
xchg
add
pushf
cltd
mov
movsl
add
add
push
add
add
and
mov
add
mov
or
mov
cmp
test
pusha
add
ljmp
push
into
dec
ss
icebp
addb
pop
xor
mov
je
ss
outsb
mov
mov
lcall
add
and
jge
cltd
mov
fistps
outsb
mov
fs
add
add
stos
cwtl
imul
cmp
fisubrs
das
cmpsl
adc
sub
pushf
pusha
add
lods
dec
testb
fistpl
and
int
dec
mov
dec
call
mov
cs
xchg
pop
repz
add
jecxz
add
mov
add
jge
mov
add
cld
imul
mov
lcall
cmp
pop
outsl
or
mov
add
mov
add
adc
cmp
add
fildl
xchg
cmpsb
fsts
fnstenv
mov
xchg
loope
roll
adc
movsl
icebp
cs
mov
jae
sahf
out
movswl
cmc
jno
fxch
add
rolb
mov
ret
cs
sub
add
std
andl
or
mov
mov
arpl
dec
ss
std
fsubs
in
in
add
xor
sub
rcrl
sbb
xor
add
add
cltd
fldt
mov
add
add
adc
mov
add
mov
out
adc
pop
aas
add
adc
mov
sbb
push
ja
clc
loope
xor
cld
stos
fnstsw
add
dec
xchg
addb
cli
loopne
mov
add
mov
cld
movsl
jl
dec
bound
mov
add
xchg
ror
in
xor
call
push
test
and
inc
pop
test
add
addb
cwtl
xor
mov
mov
andl
jge
add
lret
mov
mov
aam
fcomip
fisubs
in
hlt
enter
mov
xchg
fwait
jl
add
and
jge
add
mov
mov
add
mov
mov
sbb
loop
mov
inc
add
xchg
xor
rcl
cltd
mov
mov
cmpsb
sti
jo
mov
jo
mov
cmp
sti
dec
push
popf
lods
sbb
lods
push
sbb
dec
cmp
adc
out
mov
lods
or
fsubs
cmp
gs
and
mov
aad
inc
sub
int
iret
fsincos
mov
xchg
sbb
rolb
pop
fs
xchg
xchg
mov
adc
and
mov
add
ret
jl
pushf
cmp
aas
xor
jne,pn
adc
mov
add
sbb
add
xchg
loopne
mov
adc
cs
mov
add
cmp
sti
addb
adc
xchg
rcrl
bound
mov
dec
fisubs
int
frstor
mov
push
xchg
repz
inc
mov
push
stos
adc
loope
add
mov
and
jg
xchg
inc
add
dec
loop
mov
mov
ljmp
sbb
fcoml
cld
xchg
inc
dec
sbb
or
add
fistpll
jp
add
add
inc
sub
fdiv
add
lds
mov
jl
xor
js
in
add
or
cmp
pusha
add
pop
vcmpsd
stos
sbb
or
xor
and
mov
add
add
lret
dec
sub
test
add
pop
push
rolb
mov
scas
ficomps
lcall
scas
sbb
add
lock
inc
add
xchg
jbe
add
inc
xchg
test
sub
mov
mov
push
add
inc
add
push
xchg
add
mov
idiv
jne
add
add
rolb
js
add
pushf
std
or
push
add
lret
cs
mov
inc
and
adc
cmp
mov
jno
mov
jnp
and
cmp
sbb
imul
lea
test
add
mov
mov
push
add
outsl
into
stos
push
add
ds
xor
inc
ret
jns
cmp
lods
adcl
imulb
out
jg
jl
cmp
test
fildl
mov
add
dec
icebp
test
movsb
pop
ja
and
mov
add
mov
outsl
cli
ljmp
mov
add
lods
in
out
rcll
mov
in
mov
sbb
inc
lcall
mov
push
lcall
add
shll
pop
cmp
imul
mov
add
lcall
data16
sub
pop
push
pusha
add
mov
add
fsubrl
icebp
out
call
sub
xchg
inc
cmp
insb
and
mov
fisubl
pushf
adc
aas
clc
push
and
adc
inc
fnsave
cmpsb
pop
mov
mov
jecxz
add
add
xor
mov
push
inc
mov
lds
and
fldt
add
aad
out
lock
aam
loop
mov
fcoml
add
sbb
xchg
ficoms
orl
jnp
jnp
xlat
add
mov
add
and
and
scas
inc
add
in
aas
mov
sbb
and
mov
mov
out
outsb
sub
lret
jbe
add
push
inc
and
mov
add
jl
add
cmp
movsl
cmp
fidivs
outsl
enter
add
aam
out
lcall
aam
lods
push
ds
add
mov
imul
inc
add
inc
add
add
add
das
inc
jecxz
nop
add
add
dec
sbb
and
cmp
add
mov
add
and
fwait
lahf
hlt
pop
int
out
cmpsb
push
push
xchg
inc
sub
inc
pop
mov
lods
aam
dec
loopne
mov
add
jp
jl
cld
adc
mov
cmp
sub
bound
mov
add
dec
push
cwtl
jns
sbb
pop
nop
add
inc
sahf
xor
mov
clc
addb
movsl
xor
push
repz
fcompl
adc
mov
or
insl
scas
ss
mov
out
mov
add
cmc
jl
js,pn
rolb
mov
mov
sbb
mov
sti
test
mov
add
dec
add
stos
or
add
cmp
add
sub
add
mov
jns
add
add
insl
or
lahf
rorl
negb
xchg
push
and
mov
add
in
push
jmp
rcll
stos
push
shrl
mov
xchg
xchg
add
adc
iret
cmp
push
cmovl
add
stos
sub
test
mov
adc
mov
xchg
jb
mov
mov
or
pop
xor
mov
cmp
std
fnstenv
and
push
cmpsb
faddl
jecxz
ret
jle
mov
outsb
ficoms
xchg
cmp
add
mov
pop
icebp
add
xor
lahf
and
out
xor
mov
xor
mov
add
insl
adc
add
and
pusha
add
add
mov
add
cmovnp
fildll
mov
push
mov
inc
xor
mov
in
xlat
mov
add
dec
add
daa
shll
lret
popf
hlt
mov
mov
cli
mull
call
cmp
add
clc
fsubrl
dec
sub
icebp
xchg
add
imul
mov
mov
lahf
idivb
fisubs
add
sub
mov
or
sbb
add
cwtl
into
pop
fs
movsb
cwtl
dec
pop
lods
insl
cmp
jle
add
dec
dec
imulb
xor
mov
clc
push
sub
add
push
add
add
icebp
inc
add
ficoms
imul
sbb
pop
xchg
rolb
call
in
sbb
fistl
sub
pusha
add
add
insb
pop
xor
mov
mov
rolb
mov
daa
and
add
mov
mov
or
jne
hlt
loop
mov
fs
sbb
in
add
adc
mov
add
scas
cli
lahf
data16
mov
mov
mov
loopne
mov
int
popf
add
ja
jge
pushf
popf
lret
mov
add
mov
add
xchg
lret
dec
popf
aam
mov
shr
and
mov
xor
and
popa
xchg
sar
xchg
leave
fiadds
mov
aaa
and
mov
stos
sbb
mov
mov
and
ret
popf
subl
scas
loopne
mov
jb
mov
push
add
mov
fbstp
adc
sub
lods
lods
fnstcw
mov
aas
test
pushf
cli
xchg
mov
mov
mov
adc
mov
mov
xlat
mov
and
add
mov
mov
jae
adc
sbb
dec
sbb
adc
test
add
aam
push
mov
push
push
inc
adc
cwtl
mov
mov
cmp
shl
movsb
enter
add
divb
or
mov
test
mov
mov
test
jne
adc
mov
sbb
pop
fsubs
outsb
push
inc
fisubrs
in
out
leave
push
shr
sbb
add
rolb
mov
pushf
mov
mov
adc
sbb
pusha
add
addb
xchg
push
sbb
jbe
add
ret
xor
mov
in
mov
add
sub
js
sti
adc
rolb
xor
xchg
fists
adc
out
and
mov
jmp
into
push
sbbl
lret
cmpsb
mov
mov
xor
push
add
add
mov
add
loope
xor
mov
mov
in
ret
and
mov
ficoml
xchg
add
inc
add
xchg
sbb
jecxz
and
mov
add
sub
iret
xchg
mov
and
mov
scas
inc
add
aam
notb
push
add
lahf
pop
aaa
sbb
lret
mov
mov
add
mov
jl
xor
push
add
out
add
add
mov
add
or
ljmp
add
pop
mov
cld
fisubrs
out
fs
mov
dec
adc
mov
mov
xchg
std
stc
int3
js
dec
push
add
inc
imul
daa
push
xchg
jb
mov
add
add
mov
test
repz
stos
pop
xlat
inc
sub
jno
out
inc
sahf
pop
jnp
mov
ds
push
jo
mov
mov
cli
jmp
hlt
ss
loopne
mov
loope
add
add
sbb
add
test
sbb
je
inc
js
mov
lock
cli
mov
add
divl
mov
insl
jb
mov
mov
mov
test
mov
add
adc
adc
push
or
mov
add
pop
sub
enter
cmp
addb
mov
add
cmp
cmp
jnp
add
data16
mov
add
push
bound
mov
add
sbb
mov
xor
mov
pop
add
add
add
ud2
out
mov
mov
aaa
sarl
add
add
inc
xor
sahf
rolb
mov
int
outsb
in
add
xchg
cmp
xor
lea
out
mov
out
mov
add
add
dec
push
add
pop
sub
add
push
mov
leave
mov
mov
pop
xlat
inc
jae
add
mov
pop
pop
adc
dec
rorl
cmp
mov
mov
sub
sbb
add
mov
data16
aam
imul
mulb
sahf
or
jp
mov
lcall
xor
inc
mov
inc
add
mov
jle
xchg
or
and
mov
popa
sarl
lahf
arpl
sub
sub
out
mov
add
add
ljmp
inc
jp
les
aaa
pop
xor
mov
mov
mov
and
mov
pop
adc
pusha
add
in
add
pop
dec
pop
xor
inc
insl
aaa
lds
sarl
add
rolb
or
add
pop
jg
sub
in
cli
test
pop
xor
mov
ret
shrl
mov
jb
mov
xlat
jno
cmp
arpl
fisttpl
ss
addr16
adc
mov
mov
mov
jg
cmp
jnp
movsl
push
and
mov
sub
cmp
xor
jne
insb
dec
sub
sbb
push
xor
mov
std
insb
sbb
jle
jne
mov
mov
mov
inc
sbb
test
ljmp
mov
xchg
pop
in
imul
rolb
mov
xlat
cmpsb
repz
add
add
pop
push
add
jb
mov
inc
das
out
lea
xor
jo
mov
cmp
add
mov
sbb
xchg
add
int3
pop
sub
add
mov
pop
unpckhps
not
test
add
add
push
movsb
inc
sbb
pop
insl
xor
mov
add
sbb
mov
into
inc
inc
fidivrl
mov
cwtl
cmp
add
mov
sbb
dec
rolb
mov
add
mov
ljmp
dec
mov
into
rcl
fcomps
pop
enter
add
add
mov
mov
jecxz
lret
addr16
and
mov
push
jno
add
add
mov
add
sbb
and
rolb
fistl
cmc
repnz
sub
sbb
cmpsb
test
inc
repz
mov
popa
mov
mov
iret
push
rolb
mov
jge
mov
mov
aad
jne
into
mov
sub
pop
popa
int
add
adc
mov
xchg
and
cmc
pop
mov
clc
xchg
jmp
add
shrl
add
cmp
jg
hlt
ja
lahf
jmp
sbb
and
int3
fidivrl
push
mov
add
outsb
dec
incb
add
lcall
pop
addb
inc
push
mov
pop
scas
cmpsb
lds
daa
daa
xchg
fiadds
adcl
je
stc
subl
fdivr
lods
popa
or
add
or
gs
push
adc
pop
repz
ljmp
jle
xor
mov
cmp
xchg
outsl
add
rolb
lahf
aad
add
xlat
pop
xlat
mov
stc
jmp
mov
je
ss
aaa
imul
leave
lea
sbb
icebp
aas
mov
lods
pop
inc
and
mov
aad
mov
mov
mov
or
add
add
mov
sub
pop
or
cmpsl
push
rolb
mov
das
das
inc
add
loope
in
cli
xor
mov
mov
stc
dec
xor
mov
aad
add
mov
mov
dec
mov
sahf
inc
push
pop
pop
jp
insl
leave
sub
jnp
fsubrs
mov
add
push
imul
pop
stc
sbb
mov
imul
sbb
and
or
jae
pop
cmpsl
arpl
rolb
mov
cmp
push
add
mov
push
push
add
mov
add
xchg
mov
out
mov
cmp
add
fstpt
mov
pop
subl
mov
mov
dec
sub
xchg
sti
mov
mov
pusha
add
icebp
pop
mov
call
inc
sub
jae
dec
dec
ret
test
push
aad
popf
dec
repnz
sar
add
pop
pop
jo
mov
mov
mov
and
jo
mov
push
inc
mov
popf
xchg
das
je
aaa
bound
mov
mov
pop
push
imul
fnsave
inc
add
add
sub
dec
inc
popf
rolb
mov
dec
mov
addb
addb
mov
inc
ds
mov
inc
sahf
ret
in
das
stos
dec
jp
add
mov
jb
mov
jb
mov
jecxz
cmp
pop
pop
mov
inc
jge
push
add
add
clc
xor
cmpsl
data16
mov
std
fwait
push
add
mov
jne
pop
jo
mov
mov
pop
xlat
sub
pop
xchg
sbb
sub
mov
test
inc
jl
jns
add
addr16
lahf
mov
iret
orl
test
daa
inc
add
inc
aas
cwtl
loope
pop
les
cli
stc
push
test
inc
mov
add
movl
pop
mov
pop
or
mov
mov
mov
jnp
ja
ja
imul
lods
dec
les
cmp
dec
mov
sub
add
loope
jbe
and
push
sub
mov
out
cmp
rolb
mov
add
in
andl
or
xchg
fildll
sub
add
cmc
or
aad
mov
jbe
stc
sub
mov
cmp
mov
sets
xor
lea
add
sti
or
mov
adc
xchg
add
dec
pushf
mov
inc
mov
ss
xchg
ss
mov
and
pop
and
mov
sbb
jmp
fiaddl
push
add
add
addb
inc
add
ja
fdivs
out
jmp
ffreep
add
and
mov
jmp
push
mov
add
in
in
mov
enter
xlat
mov
arpl
xchg
dec
mov
add
mov
mov
mov
add
aad
test
mov
or
lds
add
mov
pop
das
mov
scas
adc
mov
or
add
clc
es
xchg
lods
add
xchg
inc
add
mov
cli
addb
mov
aam
xor
ss
add
outsb
add
mov
pop
test
mov
inc
inc
xor
mov
std
lods
cmp
adc
mov
add
push
xor
add
mov
test
push
jmp
sbb
lds
mov
xchg
sub
jnp
insb
mov
jnp
add
adc
mov
xor
mov
add
loopne
mov
mov
mov
call
imul
xchg
stc
pop
addr16
xor
divb
mov
jmp
sbb
mov
adc
cmp
add
cwtl
xchg
add
and
push
jno
shrl
add
cli
xor
dec
in
std
pop
icebp
pop
test
mov
test
in
imul
inc
inc
mov
push
add
pop
fs
add
adc
xor
mov
add
inc
add
inc
add
lahf
negb
xlat
inc
jmp
in
aaa
sbb
das
les
fs
add
jbe
xchg
add
and
mov
lahf
aas
rolb
filds
lcall
nop
add
iret
push
add
add
mov
enter
dec
push
add
out
rcl
rolb
aas
pop
rolb
mov
int
add
hlt
mov
punpcklwd
add
mov
mov
push
insb
rolb
mov
adc
mov
mov
repnz
add
mov
daa
cmp
or
popa
push
clc
push
pop
and
jle
pop
aad
aaa
fdivrp
stos
scas
mov
movsl
dec
pusha
add
shll
fdivp
or
push
add
jg
mov
add
notb
add
mov
movsb
leave
push
aam
add
aaa
jle
xchg
dec
and
or
leave
adc
mov
mov
vandps
or
mov
add
mov
add
add
push
mov
outsl
repnz
jns
add
sub
sahf
push
mov
lods
xchg
add
mov
add
mov
mov
fists
mov
add
je
add
add
or
jo
mov
aaa
sbbl
adc
push
adc
add
pop
imul
outsl
xor
dec
cmpsb
or
decb
nop
add
sbb
sub
jmp
lock
add
aad
icebp
cmp
movsb
or
std
jbe
jle
dec
push
add
mov
lea
mov
shll
add
arpl
sbb
mov
lods
push
or
lcall
addb
leave
push
jmp
add
mov
lret
add
push
add
mov
ret
cmp
js
jp
xchg
mov
jmp
rolb
mov
push
add
cltd
mov
mov
cwtl
cli
jecxz
xlat
dec
out
aaa
xchg
mov
add
cmpsb
adc
push
add
sub
add
jl
and
mov
pop
pop
mov
test
mov
setle
cmc
adc
fstps
movsl
cmp
jp
sub
add
sub
sar
icebp
jp
loopne
mov
ds
or
add
imul
mov
xchg
arpl
adc
mov
add
mov
and
mov
addb
pop
arpl
add
xchg
inc
dec
ss
gs
mov
add
xor
inc
add
mov
pusha
add
sahf
lahf
add
mov
inc
mov
jecxz
cmp
add
push
movsb
in
cmp
add
add
add
mov
test
or
mov
jecxz
imull
lahf
int
push
popf
push
lods
xchg
and
mov
stc
mov
adc
mov
push
bndstx
test
stos
and
int3
nop
add
mov
add
mov
std
mov
movups
mov
mov
cltd
sbb
cli
pushf
stos
ret
mov
add
cmc
sub
addr16
add
inc
xor
fisttpll
jle
and
mov
xlat
ljmp
xchg
mov
fs
xchg
lds
mov
out
lea
js
mov
add
in
push
mov
add
notl
sbb
mov
push
add
cmp
pop
lods
mov
addb
fadd
fmul
popl
sbb
add
add
add
imul
scas
and
mov
pop
sbb
movsl
jl
sub
mov
imul
les
xor
cmp
adc
arpl
lea
dec
fcmovne
clc
adc
mov
lds
into
lea
stos
fistpll
xor
push
xchg
push
dec
imul
enter
add
mov
mov
mov
mov
rcrl
inc
sbb
mov
mov
call
dec
popa
or
leave
push
ret
xor
add
aad
test
push
jo
mov
std
aam
xchg
test
add
hlt
pop
add
shll
addb
cmpsb
pop
push
xchg
push
hlt
lds
call
add
fdivr
gs
mov
mov
mov
add
sbb
mov
add
lret
cmp
push
rolb
mov
mov
mov
pop
and
enter
push
xor
mov
dec
pop
cmc
push
push
daa
std
imul
add
xchg
lds
mov
insb
mov
add
mov
or
xor
pop
xor
mov
fldt
sbb
packuswb
outsb
lds
push
mov
mov
pop
outsl
cs
push
loopew
leave
outsl
push
add
mov
push
shll
daa
stos
les
jnp
add
pop
xchg
sahf
imul
lret
mov
add
mov
pop
ficompl
lahf
insl
inc
stos
rolb
jmp
pop
shll
add
cmp
mov
add
add
es
cmp
outsb
xchg
stc
in
add
sbb
fwait
int
xchg
jmp
cmpsb
clc
stos
leave
push
lret
lretw
or
add
mov
dec
loop
mov
in
fldl
stos
mov
insl
mov
mov
mov
push
aam
mov
xchg
jbe
and
mov
add
add
div
jae
call
mov
cmp
addb
jl
fidivl
add
sub
lcall
mov
add
push
movsb
cmpsl
dec
movl
mov
cmp
sub
cmp
inc
jle
push
mov
mov
inc
add
mov
mov
mov
push
xchg
xor
das
les
mov
dec
lods
test
lcall
mov
add
mov
addb
pop
cmp
jne
fiadds
sbb
lret
out
jl
add
add
cltd
xchg
mov
lds
loop
mov
lahf
adc
mov
mov
add
xchg
ret
insb
lock
pop
bound
mov
xor
and
inc
stos
dec
mov
mov
add
paddw
mov
sub
sbb
fistl
mov
es
sub
pop
pop
mov
imul
inc
mov
movsb
es
inc
nop
add
mov
jnp
ret
pusha
add
xor
mov
imul
sub
sbb
add
in
and
fldenv
mov
add
push
aam
add
xor
mov
mov
xorl
fcmovne
lods
inc
inc
add
sub
pop
out
shld
xchg
in
test
mov
mov
mov
add
outsb
inc
sub
mov
add
xchg
stos
mov
add
mov
push
add
jl
add
or
add
add
add
mov
pop
int3
out
rolb
int
xchg
and
xchg
add
loopne
mov
test
pop
and
imul
mov
sbb
mov
sbb
xchg
dec
mov
push
mov
sub
addb
insb
aaa
jbe
or
jbe
pop
dec
inc
js
in
test
add
adc
mov
mov
push
mov
add
add
ja
lea
add
xchg
pushf
mov
adc
fcomip
mov
add
add
mov
mov
add
sbb
rorl
call
jae
test
std
je
cmc
pop
push
bound
mov
add
add
add
insb
repz
xchg
or
movsl
and
mov
loope
out
jae
add
add
add
imul
mov
xchg
lds
mov
mov
sti
mov
mov
dec
jl
int3
sahf
dec
sbb
ret
or
ret
lods
cmp
jl
mov
test
xor
mov
push
inc
add
cmp
fcoms
lea
addb
dec
mov
mov
test
jns
mov
and
neg
push
es
sub
fldlg2
sub
add
push
add
add
jne
add
adc
mov
faddp
lock
out
push
gs
mov
out
push
sarl
add
xchg
fstpt
xchg
dec
sub
inc
mov
mov
mov
add
cmpxchg
fmuls
xor
mov
add
andl
rolb
mov
mov
sub
mull
movsl
push
cmpsb
xor
mov
sbb
sbb
mov
inc
push
adc
jno
test
push
sbb
movsb
mov
mulb
mov
gs
mov
imul
adc
pusha
add
cmpsb
movsl
jnp
xchg
xchg
add
add
add
popf
rorl
and
mov
imul
testl
fcoml
fstp
jmp
push
in
aam
out
jl
iret
or
out
push
add
add
add
gs
dec
mov
add
or
sbb
pop
aam
insb
lret
fsubr
sub
xor
push
ja
stos
outsl
inc
cmp
mov
jb
mov
add
int
inc
add
fwait
inc
add
jg
addr16
fwait
dec
in
in
add
mov
ffree
add
inc
add
mov
pop
loopne
mov
in
in
arpl
add
mov
into
mov
mov
std
or
movl
mov
add
int3
mov
and
mov
or
addr16
mov
arpl
loop
mov
cmpsb
xchg
add
mov
lea
scas
xchg
cmp
and
mov
sbb
add
mov
popl
push
cld
dec
scas
and
mov
jp
cmc
ret
jmp
mov
add
mov
jp
js
mov
push
add
fstl
add
add
mov
push
add
mov
jge
inc
add
and
ja
rolb
mov
mov
inc
sub
cld
push
mov
cmp
add
je
add
fnsave
ret
ds
push
xlat
sbb
add
or
mov
out
add
aad
lret
insb
into
sub
dec
jl
ficoms
mov
add
bound
mov
mov
mov
xlat
dec
das
cs
enter
in
add
xor
mov
add
cmp
add
clc
decl
pop
das
xor
mov
mov
mov
dec
and
js
xchg
mov
xor
pop
inc
pop
pop
xor
add
mov
mov
mov
mov
add
mov
or
add
sub
push
add
push
add
mov
fs
jnp
sarl
sarl
pushf
sbb
dec
mov
add
or
add
mov
mov
pop
push
inc
iret
loopne
mov
loope
loop
mov
outsb
or
add
gs
in
push
and
mov
mov
jle
jo
mov
add
inc
and
push
mov
mov
push
add
adc
mov
dec
pop
ret
pop
fbld
mov
fidivs
cmp
cs
or
imul
jae
cltd
mov
jo
mov
sbb
popf
cmp
data16
lods
ret
mov
dec
es
sub
rolb
mov
add
dec
mov
add
mov
lret
mov
xor
mov
int3
and
add
mov
int
outsb
inc
xor
mov
add
out
add
sahf
fbstp
call
push
das
lret
in
inc
lcall
movsb
enter
sbb
add
add
jl
aam
sti
pop
and
or
add
sahf
push
es
into
repnz
inc
sarl
in
lret
bound
mov
mov
sbb
data16
aad
cmpsl
and
mov
fsub
add
mov
dec
or
add
pop
ss
mov
add
arpl
jmp
popl
lods
popf
cld
ret
mov
call
mov
repnz
shl
jg
xlat
mov
ljmp
mov
pop
inc
add
data16
push
loop
mov
sub
in
sti
sub
loope
pop
xchg
aam
mul
add
test
pop
or
xorl
rolb
mov
mov
mov
add
mov
push
nop
add
sbb
xor
xchg
cld
ficoms
push
sbb
mov
add
mov
mov
add
mov
dec
js
lret
mov
test
lods
repnz
sbb
lods
repz
mov
xchg
add
add
xchg
ret
fiaddl
in
insb
or
mov
jae
push
stc
and
or
mov
stos
cmpsb
pop
int
push
add
dec
enter
xchg
mov
insb
mov
test
mov
add
dec
sbb
mov
cmp
or
xor
jmp
mov
cs
add
add
add
push
push
mov
or
add
outsl
sub
int3
push
outsl
jns,pn
scas
pcmpeqw
mov
ret
jp
pushl
out
shll
mov
add
add
mov
mov
cmp
add
add
or
clc
add
add
mov
dec
ds
add
push
add
pop
push
pop
call
les
sbb
mov
fs
int3
dec
movsl
fnsave
pop
mov
pop
ret
jo
mov
cs
adc
mov
aam
add
cmpl
xchg
aam
cmpsb
sbb
mov
testl
loope
clc
mov
add
icebp
fldt
jmp
cs
push
mov
in
dec
push
xchg
das
stos
add
aas
in
mov
xor
sbb
and
mov
add
xchg
dec
sub
insl
mov
mov
mov
xchg
addb
cmpsb
xchg
sbb
add
out
add
xchg
ret
jbe
add
mov
jl
xchg
call
xchg
and
mov
sahf
enter
mov
rolb
mov
add
fisubrl
add
mov
cwtl
inc
sarl
and
dec
add
add
xlat
lock
mov
adc
dec
nop
add
daa
mov
add
ficompl
xchg
cli
cmpsl
sbb
mov
stos
cmp
out
test
or
dec
jmp
adc
lods
je
fnsave
push
cltd
out
inc
add
push
push
les
add
xchg
push
sub
sarl
lods
sbb
or
or
add
dec
scas
lea
or
jae
mov
stos
xchg
adc
pop
sub
cmpsl
testb
mov
add
xchg
repnz
movsb
ss
pop
iret
cltd
stc
mov
cwtl
add
lret
ret
jecxz,pn
add
mov
mov
popf
mov
xchg
or
adc
mov
xchg
lret
or
push
add
mov
or
fwait
push
add
insl
sbb
add
mov
add
cmp
out
mov
or
lods
ds
pop
mov
mov
movsb
lahf
ljmp
mov
add
sub
mov
add
cmpsl
dec
cld
jbe
jnp
out
je
push
outsb
ret
outsl
cmp
test
dec
push
jle
add
nop
add
mov
mov
roll
fs
dec
loope
repz
shll
mov
add
pop
shll
jnp
jmp
add
add
sbb
outsl
jmp
xor
fwait
mov
fimuls
setp
sbb
int
dec
sbb
mov
add
cmp
mov
pop
mov
inc
loopne
mov
cmc
add
jge
aam
ficoml
scas
lret
gs
adc
add
xlat
jnp
cwtl
jns
fsubl
and
pop
inc
pop
xlat
cmp
ret
clc
lahf
push
jmp
or
add
push
add
xchg
cmpsl
cli
outsb
jns
jb
mov
mov
cltd
rolb
das
in
jmp
pop
es
and
or
les
std
push
lret
add
mov
jae
pop
jno
jno
xchg
add
sbb
add
gs
sbb
sbb
lods
cmc
movsb
inc
inc
add
mov
addb
xchg
fs
mov
xchg
in
ss
and
movsl
ljmp
test
add
mov
std
mov
mov
shrl
fdivr
mov
daa
rolb
mov
mov
nop
add
push
jecxz
fsubr
enter
dec
imul
dec
or
add
mov
add
fdivs
mov
xor
faddp
pop
mov
or
add
mov
mov
lds
ljmp
lds
mov
jp
imul
dec
jne
insl
addr16
je
fisubrl
arpl
sar
add
lret
xchg
jg
scas
xchg
add
and
inc
add
call
pop
jmp
lock
ss
outsl
fbstp
pop
and
mov
pop
lahf
ja
sub
add
or
add
cmp
mov
gs
mov
pop
jne
shll
cmc
cmp
leave
jns
bound
mov
jmp
mov
insb
popa
popf
sbb
push
add
xchg
add
mov
mov
mov
add
or
cmp
and
add
dec
dec
hlt
test
xor
mov
in
dec
lods
mov
mov
lods
push
in
xchg
aas
fidivl
movsb
inc
mov
mov
cmp
sub
cli
pop
addb
loope
add
cmpsb
add
sub
sti
or
dec
cmp
scas
cmp
mov
pop
xor
add
mov
cmp
subl
pop
push
arpl
ret
and
and
mov
fcoml
mov
sbb
inc
aam
sbb
inc
mov
and
jnp
mov
add
add
jno
lods
lret
stos
sbb
add
into
test
inc
sbb
add
mov
sahf
push
add
mov
or
push
ljmp
or
add
lret
jp
fsub
add
out
mov
mov
sbb
imul
add
adc
mov
or
mov
jo
mov
xchg
xor
mov
xor
jo
mov
cmp
das
sub
dec
inc
insb
cmc
push
stos
or
imul
add
mov
xchg
push
jae
fistl
add
movsb
out
jg
adc
mov
add
add
add
mov
xlat
into
insl
sbb
push
mov
outsl
dec
mov
test
out
lea
mov
popf
test
adc
rol
mov
movsl
sub
in
bound
mov
xor
decl
sbb
aad
int
jbe
icebp
sti
insb
sar
insl
mov
das
pop
scas
and
add
int3
in
jp
cmp
test
and
lea
dec
dec
repz
mov
int3
xor
xchg
dec
xchg
jne
insl
outsl
hlt
in
lods
and
dec
push
xchg
lods
push
push
sub
add
addb
sub
mov
arpl
mov
mov
and
es
gs
push
popf
test
insl
iret
loop
mov
jae
cmpsb
inc
inc
mov
cmp
push
mov
pop
aad
loopne
mov
add
mov
add
insb
out
lods
cmpsl
mov
jb
mov
out
xor
mov
cmp
in
adc
mov
ja
xchg
scas
testb
mov
and
mov
add
pusha
add
dec
out
or
mov
out
cmp
sub
mov
add
outsb
into
rcll
leave
das
rolb
mov
cli
push
fwait
cli
inc
fwait
mov
mov
add
pop
push
sub
int3
lcall
push
negb
pop
push
jno
data16
outsl
adc
inc
aaa
decl
push
mov
lcall
add
pop
in
xchg
cmp
lods
cmc
mov
fldcw
loop
mov
mov
mov
iret
fmulp
notb
je
and
add
cltd
ja
and
mov
lea
push
imul
xchg
sub
call
adc
jge
or
imulb
cmp
mov
pcmpeqd
dec
test
ficomps
loopne
mov
lahf
and
mov
cmp
xchg
mov
add
add
cltd
cmc
lret
add
cmp
je
push
mov
rolb
mov
dec
mov
mov
mov
stos
fadds
dec
add
inc
add
popf
mov
ja
or
or
xor
pop
or
aad
dec
sub
jmp
add
outsl
enter
sub
mov
push
cli
clc
inc
es
add
xor
mov
cmpsb
test
add
mov
dec
sbb
insb
rolb
mov
and
cmp
add
xchg
cmp
adc
add
insl
stos
pop
mov
insl
out
jle
mov
push
mov
lahf
mov
cwtl
int
rorl
lahf
or
filds
mov
lods
mov
jecxz
imul
push
stos
fmuls
xchg
test
movsb
inc
inc
xor
add
ret
movl
add
les
mov
mov
mov
add
lock
mov
sub
popa
xchg
and
dec
popf
adc
or
fst
jnp
icebp
fistpl
into
dec
jl
xchg
inc
ret
jl
dec
fdivr
cmp
cld
add
adc
add
addb
mov
iret
call
add
add
mov
imul
pushf
out
imul
adc
pop
es
aaa
lcall
or
add
mov
mov
mov
sub
or
dec
ret
add
jg,pt
jge
add
mov
mov
and
xchg
inc
lret
ret
cmp
pop
mov
in
mov
arpl
dec
lods
inc
add
mov
add
mov
call
adc
mov
stc
jne
cmp
sbb
dec
xchg
pop
sub
mov
stc
push
xor
sub
mov
bound
mov
add
fxch
fneni(8087
add
dec
ror
ret
mov
jns
mov
mov
cmpsb
xor
lahf
out
js
xor
je
add
sub
in
inc
or
lods
icebp
les
sub
ss
aaa
mov
xchg
cmc
faddl
xlat
fdivrs
xchg
in
ret
in
icebp
jp
int3
push
sarl
in
fstps
mov
ret
mov
mov
add
jg
sbb
mov
inc
data16
cmp
add
add
jmp
subl
sub
in
cltd
mov
push
add
add
and
mov
mov
mov
sub
cmp
pop
adc
mov
rolb
mov
pusha
add
mov
mov
loope
push
push
add
sub
jg
enter
add
adc
and
out
sub
fdivrs
dec
mov
and
mov
add
dec
pop
jbe
add
scas
cmp
sub
inc
outsl
cmp
fsubp
mov
or
add
inc
and
insl
rolb
mov
or
fdivrs
and
mov
mov
jecxz
xchg
xchg
cmp
mov
inc
jno
adc
mov
dec
sbb
dec
mov
mov
sub
or
pop
lret
sub
scas
xor
mov
dec
xor
mov
mov
cs
pop
sbb
and
cmpl
pop
ja
insb
shll
sbb
fcmovbe
cmp
mov
aaa
fwait
dec
cwtl
data16
test
add
xor
inc
out
addr16
mov
inc
push
decl
add
outsb
sub
pop
es
ss
scas
sbb
add
add
int3
sbbl
arpl
add
push
xor
scas
bound
mov
pop
mov
push
fsubs
mov
rolb
mov
mov
insb
or
imul
adc
fwait
sarl
mov
mov
lds
mov
mov
out
les
sbb
fists
jl
outsb
jmp
je
sub
inc
fsubp
push
rorl
daa
fmull
lgs
add
mov
cmp
idivl
jge
dec
jl
mov
pusha
add
and
mov
sbb
or
inc
and
push
add
cmp
add
lcall
inc
mov
adc
adc
add
pop
add
adc
mov
stc
mov
in
movsb
pop
mov
sbb
out
xlat
xchg
hlt
mov
mov
mov
dec
inc
add
insl
pop
iret
sbb
mov
xchg
es
shll
or
out
pop
xor
mov
sahf
push
jmp
pop
mov
pop
mov
jo
mov
std
cmp
cmp
push
and
mov
add
push
jae
pop
jb
mov
jmp
xor
add
dec
mov
nop
add
xchg
cmp
mov
insl
jmp
adc
mov
add
push
push
inc
inc
mov
xchg
call
pop
lcall
add
push
mov
mov
cmpsl
jg
pop
outsb
out
adcl
lahf
push
add
in
in
xor
scas
in
xchg
cmpsl
enter
insl
dec
out
addr16
pop
dec
xchg
push
negb
push
fcomps
mov
shll
mov
lahf
das
in
sub
es
sbb
mov
testb
lock
mov
add
fmuls
push
leave
mov
mov
cld
xor
mov
mov
test
ds
ja
add
mov
add
mov
add
push
jno
push
add
adc
mov
pop
gs
add
aas
arpl
add
sbb
sbb
in
xchg
push
in
xor
add
inc
add
add
ds
movb
mov
jno
sbb
and
add
test
in
out
je
sbb
out
xchg
mov
sarl
push
add
add
loope
add
add
outsb
ror
inc
jne
pop
push
add
add
call
jp
cltd
or
scas
inc
add
jne
psadbw
lods
sbb
pop
ja
ja
xchg
movsb
or
add
lcall
add
sbb
popa
pop
imul
mov
mov
in
int
pop
scas
pop
xchg
insb
xchg
sbb
inc
add
dec
cmp
add
int
add
or
stos
sub
loopne
mov
add
sti
shll
add
mov
paddusw
lock
jne
sti
sub
sub
sbb
add
mov
jg
cld
shll
mov
imul
xor
push
loopne
mov
fucomp
and
adc
mov
enter
mov
popf
mov
loope
xor
push
mov
insl
pop
fcom
lock
pop
pusha
add
mov
mov
inc
add
jno
data16
mov
loop
mov
sub
adc
mov
push
xor
add
imul
call
push
mov
add
add
mov
cmc
xchg
xchg
sbb
add
cli
sub
push
in
jmp
push
jge
add
sub
mov
or
lds
push
xor
cmpl
mov
adc
repz
and
mov
lods
lahf
repnz
xor
mov
cmp
hlt
mov
mov
mov
or
xchg
es
sub
xchg
clc
and
mov
cmpsl
stos
sub
or
mov
rol
jp
bound
mov
outsl
push
loopne
mov
add
cmp
add
add
add
jno
cltd
outsl
sub
popf
test
inc
int3
mov
xchg
inc
xor
popf
in
push
mov
call
clc
cmc
add
sub
add
add
mov
jg
ret
bound
mov
iret
xchg
adc
gs
add
std
jmp
jg
xor
mov
push
push
outsb
pop
fistps
bound
mov
pop
ret
pop
mov
sbb
jmp
lods
and
add
or
fstpt
jne
into
jb
mov
int
pop
in
xor
popf
sub
xor
mov
add
mov
add
mov
or
rolb
mov
pop
leave
hlt
add
mov
mov
aaa
push
dec
inc
sbb
mov
in
and
mov
imul
xchg
add
mov
imul
jmp
sub
add
mov
or
or
mov
mov
or
mov
mov
add
add
cli
inc
and
mov
es
test
add
add
mov
fsubr
pop
insl
sbb
mov
hlt
mov
mov
mov
movntdq
icebp
aas
cmc
adc
in
push
mov
mov
sti
dec
ss
data16
imul
pop
leave
stos
orl
outsb
pop
and
mov
mov
add
mov
movsb
je
test
push
or
adc
pop
jmp
mov
jnp
lret
and
ret
sbb
subl
fdivrs
repz
mov
xchg
adc
mov
add
mov
adc
mov
inc
lods
xchg
outsb
arpl
repnz
mov
addb
imul
add
test
leave
les
add
ds
in
jmp
testl
mov
mov
cwtl
xchg
dec
sub
jnp
jbe
mov
add
mov
lods
xchg
sub
xchg
mulb
add
mov
add
loopne
mov
inc
cmp
and
mul
divl
sbb
test
addb
inc
add
sahf
rol
mov
fisubrl
mov
mov
xchg
ret
mov
fs
gs
fnsave
lods
cmpsl
ds
int3
push
sbb
lea
mov
xchg
lcall
xchg
add
sahf
and
mov
add
mov
mov
sub
push
loop
mov
mov
insl
add
int3
mov
mov
into
pop
dec
into
or
lret
mov
sahf
lahf
movsl
stos
or
in
and
push
outsl
mov
and
mov
push
add
mov
push
add
add
xor
mov
xor
xor
add
jb
mov
ficomps
insb
sbb
xor
mov
add
jo
mov
pop
scas
inc
add
scas
pushf
mov
add
addb
fsts
rolb
mov
pop
or
mov
ds
mov
mov
or
mov
sti
flds
std
pop
mov
push
push
insl
popf
ret
addr16
sti
mov
pop
faddl
add
stos
sbb
pop
cwtl
push
xor
mov
outsl
orl
daa
out
dec
dec
fwait
dec
jmp
lret
testl
mov
cmp
enter
lods
cmp
cmp
mov
push
dec
cmp
bound
mov
addr16
pop
shr
addb
leave
sub
push
cltd
xchg
xchg
jp
loope
es
sbb
mov
mov
cmp
xor
mov
dec
int
shll
cli
repnz
std
leave
lcall
inc
mov
repnz
jno
add
mov
add
mov
add
add
sbbl
add
and
pop
jne
pop
xchg
rolb
mov
mov
xor
adc
mov
jnp
add
dec
fldcw
arpl
dec
in
pop
ror
cmp
and
sbb
fiadds
add
cmp
add
cltd
aad
mov
push
pusha
add
mov
lods
fisubs
add
and
mov
adc
mov
jmp
cmp
in
cmpsl
inc
add
mov
push
frstor
sbb
loop
mov
aad
sbb
fs
adc
inc
out
rorl
adc
fcomps
or
filds
lods
adc
add
xchg
add
mov
test
cmp
icebp
cmp
rolb
mov
add
daa
ds
fidivl
dec
add
cmp
call
jmp
dec
and
mov
pop
pop
pop
cli
dec
add
mov
add
sub
xchg
imul
push
add
imul
fcomps
rolb
lea
xchg
out
xor
mov
add
mov
mov
add
mov
mov
add
mov
fcoms
mov
mov
das
mov
mov
fwait
ds
imul
add
mov
jns
lcall
push
int
ljmp
or
std
mov
or
dec
in
xlat
lds
add
sub
mov
mov
add
push
add
add
test
push
pop
stc
stc
negb
and
cli
pop
add
xor
push
mov
lods
add
xor
mov
jbe
int
fldt
and
dec
iret
jge
test
mov
push
mov
stos
mov
mov
arpl
and
lock
mov
outsb
aam
jne
mov
add
mov
cmp
adc
mov
inc
imul
adc
add
xchg
cmp
pop
adc
decb
add
sub
push
inc
movhps
adc
adc
mov
push
inc
scas
and
pop
add
sti
sub
add
ss
addl
int3
pop
enter
and
mov
sbb
sbb
cmp
aaa
mov
add
mov
inc
add
or
mov
add
enter
ljmp
push
ret
xchg
loop
mov
idivb
add
mov
and
pop
push
pop
pop
jne
enter
aam
cltd
push
add
mov
add
fstps
faddl
mov
fadds
jo
mov
xchg
jne
test
lahf
pop
or
int3
testl
sub
add
pop
jp
fnstenv
jne
cmpsb
xor
enter
mov
mov
sub
mov
clc
test
sbb
or
sbb
xchg
test
lahf
inc
mov
mov
push
popa
enter
inc
add
daa
cs
mov
mov
mov
xchg
add
push
fsts
fldl
mov
jns
add
mov
fists
push
sub
addb
leave
jl
rcrl
push
idivb
jmp
aam
add
inc
add
inc
add
out
jne
add
sub
xchg
mov
mov
pop
fcoml
add
mov
sub
add
push
push
add
add
sub
add
mov
mov
mov
mov
lods
add
icebp
or
sub
mov
and
jno
mov
dec
faddl
xchg
pop
pop
push
xchg
lds
xchg
push
inc
jg
xor
mov
cmp
add
xchg
adc
imul
scas
fbld
outsb
jp
dec
mov
in
mov
jne
dec
xchg
sahf
shr
mov
clc
out
arpl
outsl
jne
out
rolb
pop
mov
mov
mov
in
pushf
mov
aaa
lods
and
add
roll
mov
mov
mov
pop
jl
add
cli
jecxz
fildl
in
ljmp
pop
fcompl
movsl
xor
mov
mov
pop
sbb
add
insb
sbb
fcmove
push
jnp
into
inc
add
test
loopne
mov
mov
movl
dec
mov
cmpsl
pop
roll
add
mov
addb
cld
sbb
nop
add
adc
pop
outsb
inc
xor
or
add
aaa
xchg
shll
or
add
add
and
sbb
xor
push
pop
in
adc
mov
add
mov
add
dec
cwtl
cmp
jmp
pop
sub
pop
inc
or
add
fcompl
fnstcw
jnp
or
out
dec
push
adc
mov
inc
add
adc
add
dec
adc
in
xchg
xchg
inc
add
add
add
insl
scas
into
mov
and
mov
addb
mov
das
push
pushf
sub
out
mov
pop
push
xor
test
ja
dec
lock
leave
jb
mov
and
mov
or
add
addb
or
xlat
sub
add
push
lret
push
add
cmp
add
repnz
lds
add
sub
test
add
add
movsl
add
mov
mov
xchg
add
lods
or
pop
fstps
cmp
fnstsw
repnz
cmc
pushf
out
mul
ljmp
addb
stos
sbb
daa
lods
mov
xchg
loopne
mov
mov
mov
xchg
mov
test
jge
leave
das
jge
lods
or
sub
add
add
imul
fldenv
cwtl
mov
subl
add
add
inc
in
mov
shll
movsl
iret
cmpsb
jno
add
js
cmp
adc
mov
out
bound
mov
add
test
fcom
add
test
xlat
ds
add
mov
jge
pop
cli
clc
mov
mov
add
mov
add
mov
loop
mov
pop
aad
mov
divb
mov
or
pop
mov
fwait
sub
add
mov
in
stc
mov
or
push
add
adc
mov
add
pusha
add
sbb
add
inc
inc
fsubrl
or
ficoms
push
add
ja
and
add
in
inc
add
mov
mov
test
and
add
pop
imul
adc
cmc
adc
mov
add
cmp
sub
lret
xchg
jno
pop
movsb
inc
add
bound
mov
sbb
mov
mov
hlt
mov
fcoml
add
mov
icebp
pop
loopne
mov
lods
pushf
imul
push
dec
repz
inc
and
add
mov
mov
mov
push
rolb
mov
ljmp
add
das
movsb
popa
mov
jo
mov
cmpsl
shll
clc
jnp
stos
rcll
in
and
test
mov
ljmp
xor
xor
shll
mov
add
fdivrs
push
cld
dec
cmp
mov
hlt
jbe
int
call
dec
fcompl
inc
rolb
mov
test
cmp
mov
in
or
cmp
add
mov
imul
mov
jbe
jnp
mov
lret
lds
scas
sub
daa
into
inc
add
add
mov
cli
data16
mov
add
add
push
fistl
add
and
mov
scas
push
mov
add
add
stos
mov
aam
cwtl
addr16
adc
add
or
stc
mov
mov
xor
xchg
addb
fisttps
rep
push
pop
mov
xor
mov
and
inc
dec
push
mov
popf
call
sti
aad
pop
xchg
jge
sbb
add
add
add
scas
sti
aaa
sti
mov
fwait
push
out
add
mov
adc
mov
add
sub
aas
sub
mov
lcall
pop
mov
mov
mov
or
add
push
ja
scas
adcl
push
test
test
mov
add
mov
mov
sti
add
add
mov
add
add
pushf
jbe
sti
arpl
outsb
loop
mov
xor
mov
and
mov
mov
je
mov
add
add
mov
stc
imul
mov
fcoml
sbb
rolb
mov
xor
mov
add
jmp
je
std
push
into
or
iret
cmp
in
add
mov
mov
jno
xchg
add
inc
or
lds
adc
dec
rcll
aad
add
adc
sub
mov
rcl
popa
fisttpll
mov
and
mov
imul
add
add
int
pop
push
mov
cmp
add
ret
stc
sbb
add
mov
add
add
mov
mov
incb
adc
mov
and
mov
test
add
add
push
add
popf
fnstsw
xchg
lcall
call
dec
mov
jae
loopne
mov
mov
mov
repnz
mov
fcomps
add
dec
loopne
mov
push
add
push
sbb
mov
adc
push
sbb
add
icebp
insl
repz
inc
add
push
add
dec
mov
add
mov
into
out
addl
push
andl
movsl
scas
mov
mov
xor
mov
out
rolb
mov
mov
xchg
sahf
and
test
jns
inc
jl
inc
popf
lds
xor
mov
xchg
cmp
rcll
dec
pop
inc
dec
or
push
pop
mov
in
mov
or
cmpsb
das
cwtl
add
ficoms
rolb
mov
xchg
addl
insl
cs
push
xchg
add
mov
add
add
mov
push
rolb
mov
es
lret
mov
add
add
sbb
add
push
add
jl
sub
mov
cmp
ret
inc
xor
out
hlt
test
add
mov
dec
ret
jl
xlat
xchg
and
mov
ret
dec
mov
dec
adc
mov
mov
and
sub
mov
mov
mov
stos
repnz
das
data16
push
add
out
pop
out
add
enter
mov
cmp
adc
add
lods
arpl
es
sbb
jp
xchg
push
das
add
pop
jl
lds
lods
loopne
mov
les
pop
ret
mov
outsl
inc
and
mov
push
popa
jbe
insb
std
es
xchg
fisttpl
iret
jle
ljmp
mov
xchg
mov
mov
lret
cmpsb
repnz
inc
add
add
mov
mov
sti
popf
cmp
mov
add
ds
sbb
add
push
add
mov
xchg
pop
testb
jle
adc
sbb
pushf
jle
add
addb
mov
mov
jb
mov
repnz
aad
add
int
mov
jne
lea
bound
mov
add
mov
pop
jmp
mov
mov
mov
push
out
js
movsb
pop
and
mov
add
fwait
add
add
out
addb
call
mov
test
addb
xchg
hlt
jo
mov
es
adc
mov
add
mov
test
add
dec
add
pop
fistpl
or
jp
xchg
sub
and
mov
jnp
call
mov
mov
add
add
push
jne
jmp
mov
cwtl
sub
adc
enter
sub
hlt
and
pop
jmp
inc
cmp
rolb
mov
jecxz
mov
sub
scas
mov
int3
lock
mov
jo
mov
fwait
test
shr
push
mov
add
mov
mov
clts
xchg
addl
jge
pop
ljmp
mov
mov
aad
mov
xchg
sbb
push
lds
push
mov
lret
adc
mov
enter
ljmp
add
jle
pop
out
add
lahf
loop
mov
jnp
xor
add
add
push
adc
mov
push
stos
pop
fnsave
sub
lcall
mov
addb
cwtl
stc
repnz
test
ljmp
mov
sbb
popa
pop
mov
mov
push
jnp
mov
jge,pt
xchg
dec
mov
lds
jecxz
push
enter
mov
jb
mov
add
cltd
dec
pop
or
sub
pop
inc
sub
push
mov
cmp
in
add
in
sahf
cmp
rorl
iret
mov
adc
jae
jle
pcmpeqb
pop
cmp
enter
jns
aas
movsl
sar
outsl
xor
mov
dec
mov
xor
add
mov
out
pop
mov
mov
mov
cmpsb
imul
jb
mov
pop
test
jb
mov
addb
ret
xchg
bound
mov
add
in
add
add
repnz
mov
mov
or
jg
mov
jge
imul
ds
xchg
pop
fs
pop
insb
rcll
inc
jl
jne
lret
adc
jae
out
xorl
dec
cmp
mov
jp
sbb
xchg
ds
ja
xchg
inc
enter
pop
xchg
jb
mov
xor
sbb
dec
call
dec
inc
popl
add
inc
mov
pop
mov
into
outsb
cmpsb
pop
cltd
lahf
cwtl
push
inc
mov
add
mov
and
mov
iret
jmp
addr16
adc
mov
rolb
mov
inc
add
roll
inc
movsb
inc
xor
mov
lcall
add
and
pop
test
mov
jl
and
mov
xor
lock
adc
mov
mov
aad
adc
mov
aaa
dec
mov
arpl
movsl
and
mov
push
in
push
add
out
mov
pop
push
test
loope
movsb
sti
pop
xchg
and
mov
in
add
ret
fcmovnb
notb
add
push
push
adc
pop
lods
ds
pop
xor
dec
mov
repnz
fimull
jmp
add
sub
xchg
jp
lock
mov
add
addb
ret
outsb
js
xchg
add
nop
add
sarl
lret
out
insb
xor
mov
repnz
pusha
add
leave
icebp
inc
mov
or
jo
mov
adc
aaa
and
mov
mov
mov
xchg
cmp
or
scas
xor
daa
test
push
repnz
add
mov
jl
je
lea
mov
xchg
adc
enter
call
mov
mov
js
mov
enter
add
push
addb
xchg
xor
mov
mov
imul
inc
sub
cmp
std
pop
mov
inc
rolb
aaa
jbe
sti
icebp
jo
mov
stos
lods
add
xor
jp
and
cmp
test
inc
add
xchg
add
sbb
adc
mov
jge
ljmp
pop
push
add
push
popa
ss
mov
mov
lods
dec
inc
ss
js
lods
sahf
mov
add
mov
das
movsb
mov
dec
rolb
mov
xchg
nop
add
jmp
outsb
rolb
mov
add
mov
rolb
xchg
add
cmpsl
addb
jmp
repz
cmp
js
xor
mov
scas
dec
in
bound
mov
mov
mov
popf
daa
shrl
mov
push
xchg
fcompl
mov
mov
loope
pop
sub
and
lcall
jg
pop
es
hlt
mov
and
adc
mov
mov
mov
add
push
notl
std
and
xchg
stos
mov
dec
popl
xor
and
mov
xor
jp
mov
aam
xchg
jae
add
imul
inc
dec
popf
test
incb
mov
xchg
daa
jmp
movsb
pop
mov
add
add
mov
mov
sub
adc
mov
decb
mov
add
cmpsl
stos
pop
ljmp
mov
pop
cwtl
jno
add
mov
mov
dec
mov
icebp
sti
dec
cmp
repz
call
arpl
mov
mov
mov
cmp
add
mov
push
add
pop
xchg
mov
jecxz
out
jbe
add
mov
and
mov
mov
mov
mov
mov
loop
mov
scas
in
sub
mov
sub
addr16
fs
idivl
jne
cmp
mov
adc
xchg
or
and
mov
inc
popf
adc
clc
pop
cmc
lods
repnz
mov
add
add
sub
das
lcall
or
mov
push
or
pop
or
sub
rolb
mov
imul
or
cwtl
sbb
mov
mov
mov
cmc
push
leave
xor
add
push
inc
cmpl
mov
sub
data16
insb
mov
testb
mov
out
rolb
mov
xor
sbb
jp
push
aam
dec
out
xchg
into
addb
mov
ljmp
popaw
sub
xor
or
cmc
popf
jbe
adc
fiaddl
lretw
jb
mov
mov
test
xor
pop
ret
in
jnp
in
in
adc
dec
push
test
push
rolb
mov
xchg
gs
add
pop
hlt
pop
jb
mov
lcall
mov
ljmp
repnz
mov
add
dec
xchg
add
add
gs
imul
cmc
push
mov
ss
fcompl
into
repz
and
mov
lret
or
sbb
mov
mov
mov
dec
pop
add
mov
mov
xor
mov
add
push
cmpsb
sub
jge
add
test
mov
mov
xlat
rolb
mov
out
lods
fisttpl
lret
popf
repnz
push
add
cmp
xchg
add
mov
sti
in
repz
xchg
lods
es
jne
test
lea
aad
add
xlat
pop
arpl
adc
push
inc
scas
jns
cmp
sahf
fidivrl
fldenv
add
mov
pop
loope
stos
jg
ret
sub
dec
pop
jo
mov
cmp
add
jecxz
sub
push
xor
jl
push
mov
movsb
aas
pop
addb
jae
pop
pusha
add
bound
mov
sbb
mov
mov
add
sub
test
mov
pop
imul
mov
jg
fsubrl
add
gs
push
mov
add
pop
mov
int
rolb
mov
add
or
adc
mov
jo
mov
loopne
mov
push
inc
pusha
add
add
push
lock
xor
mov
icebp
mulb
pop
push
inc
or
test
push
xor
mov
add
add
push
dec
push
dec
inc
cmp
add
imul
add
mov
out
push
sbb
mov
cmpsl
add
mov
add
mov
movsl
and
mov
rolb
mov
lock
in
add
cmp
repz
scas
push
add
ja
jle
dec
inc
lock
cmp
mov
mov
sub
and
jnp
add
nop
add
sub
mov
mov
dec
outsb
jb
mov
sub
cmp
xchg
add
push
add
push
mov
lods
dec
sbb
add
mov
add
pop
cwtl
call
fs
mov
movsb
gs
mov
inc
xor
mov
enter
mov
cmpsb
in
sbb
jmp
and
mov
mov
add
add
mov
and
ja
pushf
mov
lcall
mov
cmpsl
pop
out
xchg
aaa
rorl
mov
pop
mov
test
fidivrl
inc
xchg
inc
add
or
cmp
aad
dec
cmp
mov
add
enter
jecxz
pop
or
addb
mov
cmp
mov
xor
jo
mov
dec
inc
add
mov
add
mov
xchg
cmp
outsb
jno
sarl
mov
mul
lret
xor
mov
mov
stos
sub
scas
sub
mov
cmpsl
push
inc
int
dec
sahf
add
add
add
jnp
xchg
jne
mov
mov
inc
pop
bound
mov
inc
scas
cmp
add
xchg
shll
ljmp
jnp
add
mov
add
cmp
jg
add
mov
add
std
xchg
add
aas
add
mov
mov
aam
cwtl
inc
add
add
sbb
mov
add
add
mov
add
mov
add
sub
ljmp
daa
out
sbb
add
add
aaa
lret
sbb
add
mov
stos
cmpsl
add
mov
cltd
xchg
xor
mov
sbb
add
and
mov
add
scas
cwtl
push
stos
lret
xor
add
xchg
cmp
push
dec
cmp
push
test
clc
push
and
or
cs
pop
aad
cmpsb
in
cmp
jo
mov
add
push
xchg
jecxz
lods
push
nop
add
xor
in
jno
push
add
inc
xor
sahf
xchg
repz
jb
mov
push
xor
rcrl
loop
mov
mov
addb
xor
mov
mov
sbb
es
sub
mov
add
xor
popa
mov
pop
pop
sbb
add
dec
ret
fldcw
mov
bound
mov
into
rolb
mov
xchg
jle
in
call
xor
mov
push
add
jmp
pop
iret
xchg
test
jnp
push
sub
add
mov
lea
adc
add
mov
pop
sub
les
mov
mov
mov
and
add
pop
movsb
jae
add
adc
movsb
cmp
pop
push
rolb
ja
jne
movb
rolb
test
add
jbe
add
inc
test
mov
mov
adc
inc
shl
inc
add
test
or
mov
push
subl
add
jmp
add
cltd
flds
mov
mov
mov
xor
sub
add
iret
and
cmc
lahf
adc
mov
push
add
aaa
call
add
mov
es
addb
notl
push
add
add
mov
fs
cwtl
and
xor
jae,pt
add
aaa
xor
data16
bound
mov
clc
in
popa
dec
inc
add
mov
pop
insl
jnp
adc
mov
mov
add
cs
std
addr16
jmp
jmp
cmp
aad
add
in
dec
dec
pop
stos
imul
add
mov
inc
add
movsb
push
test
mov
sbb
mov
outsl
xchg
data16
mov
testl
dec
ljmp
jnp
mov
cld
jle
xor
sbb
mov
mov
out
xchg
mov
sbb
outsb
sbb
sub
mov
add
add
loop
mov
jp
incl
add
sahf
mov
xor
add
enter
add
popa
jno
add
loope
xlat
mov
sbb
or
jle
mov
cmpsb
imul
mov
push
mov
and
mov
into
xchg
fisttpl
push
test
push
test
repnz
push
jge
jo
mov
ds
movsl
jl
test
sbb
rolb
mov
add
jecxz
mov
lcall
fimull
mov
fdivr
dec
mov
pop
push
fs
rol
add
and
stos
test
and
mov
test
mov
inc
clc
add
mov
std
notl
mov
and
add
cld
rolb
mov
add
xchg
stos
inc
lret
bound
mov
and
mov
jg
ficoml
jl
sbb
hlt
pop
mov
in
sbbl
xchg
enter
push
push
adc
sbb
rolb
mov
inc
adc
mov
les
xor
mov
xor
mov
dec
or
rolb
iret
jnp
out
jge
out
inc
je
icebp
lods
jnp
scas
fldenv
add
xchg
call
ds
int3
cli
or
add
insl
cmp
js
cmp
push
lret
xor
mov
and
outsb
rolb
addb
add
push
add
test
mov
pop
dec
mov
mov
pop
mov
jmp
add
incb
addb
fnstsw
rorl
mov
sti
pop
xor
mov
loope
push
push
mov
mov
pop
decb
inc
cmp
sub
sti
xchg
add
xchg
push
mov
mov
xchg
push
and
mov
push
add
sub
adc
gs
js
cmp
mov
push
mov
mov
mov
mov
push
mov
not
leave
cmpsl
sarl
cs
mov
inc
pop
pusha
add
ja
jae
sub
xor
test
mov
add
mov
mov
cmc
or
sbb
adc
mov
stos
out
inc
jns
jle
inc
add
inc
std
mov
mov
pop
sbb
add
inc
lods
out
inc
cli
inc
add
inc
pop
or
mov
pop
jns
int3
imul
dec
in
add
mov
into
mov
in
popf
pop
lea
add
movsb
scas
stos
test
xchg
sti
sbb
repnz
cmp
xor
lret
or
enter
mov
icebp
rolb
mov
and
bound
mov
mov
iret
int
add
mov
push
jbe
xlat
mov
xchg
mov
das
bound
mov
xor
fidivs
xchg
add
dec
push
xor
mov
adc
xor
sbb
jmp
cmp
out
ss
xor
pop
jno
lret
jns
stos
das
in
enter
add
mov
insl
and
xor
cmpsb
or
mov
or
sub
test
add
cmc
aam
pop
add
cmp
movb
dec
neg
dec
pop
mov
mov
mov
pop
xor
mov
jno
mov
and
nop
add
ficompl
lods
faddp
add
cmc
scas
notl
ss
xchg
push
add
out
sub
cmp
add
cld
mov
mov
ret
pmuludq
add
shll
mov
adc
mov
mov
sti
and
jge
add
in
jmp
add
mov
cmc
sub
adc
mov
ljmp
mov
mov
subl
mov
add
imul
add
mov
bound
mov
data16
inc
sbb
sub
clc
mov
loop
mov
cmp
pop
adc
shll
add
add
in
or
shrl
xor
add
gs
inc
add
sub
mov
add
inc
lea
loope
xchg
js
rolb
mov
add
pop
scas
imul
add
sbb
lock
fstpl
and
dec
fwait
and
xchg
add
pop
push
mov
stc
test
adc
test
jne
js
add
lods
mov
mov
add
pop
cmpsb
sbb
mov
mov
jecxz
lds
fcmovne
push
mov
les
addr16
call
cltd
rolb
mov
jmp
ss
mov
imul
js
add
lods
cmp
hlt
xchg
mov
mov
movsl
dec
lds
xchg
out
adc
mov
or
pusha
add
push
xchg
add
cli
sbb
add
jb
mov
rolb
mov
inc
mov
loop
mov
dec
into
cmc
lock
inc
add
push
push
add
pop
jne
xchg
add
mov
fidivrl
add
mov
dec
adc
or
fdivrl
outsb
rcrl
outsl
xor
mov
add
loop
mov
lock
ficoms
bound
mov
lret
mov
nop
add
add
fmuls
add
xor
mov
mov
iret
dec
jns
or
imul
mov
imul
xlat
arpl
xchg
ret
cli
das
mov
scas
into
ret
repz
mov
mov
add
lods
clc
add
mov
stc
or
mov
add
popa
out
sbb
push
and
mov
xor
mov
and
fisubrs
pop
outsl
mov
cs
pop
xor
cmc
pushf
xchg
sahf
xchg
mov
xchg
popa
js
jg
sahf
xchg
fldcw
mov
mov
mov
fsubs
outsb
push
lahf
cltd
xchg
dec
push
rolb
mov
iret
test
pop
jp
jae
jo
mov
mov
dec
cmp
xor
add
rolb
mov
addb
js
scas
fsubl
mov
jnp
add
mov
fsubrl
cmpsl
icebp
outsb
jbe
stos
cmp
or
inc
add
loope
add
jp
out
xchg
add
fimuls
das
sub
mov
daa
add
mov
nop
add
leave
pop
aam
mov
push
xchg
mov
aaa
push
mov
loop
mov
ds
ret
int
push
adc
or
outsb
ja
push
pop
daa
inc
jnp
rolb
mov
add
dec
decb
ljmpw
or
add
jl
test
fldenv
add
mov
xchg
inc
pop
sbb
popa
cmp
mov
in
jns
lea
aam
add
sub
jmp
add
add
mov
add
mov
add
adc
in
js
pop
push
aaa
xchg
xchg
or
imul
out
jbe
push
xor
mov
sarl
pop
adc
mov
pop
imull
leave
mov
loopne
mov
mov
cmp
jecxz
cmp
mov
mov
mov
cmp
add
loop
mov
repnz
add
mov
lea
add
mov
dec
push
out
std
jo
mov
or
mov
fimull
out
mov
mov
inc
xchg
xor
mov
mov
add
cli
rolb
mov
add
sbb
decb
add
mov
pop
xor
mov
in
pop
out
xchg
xchg
stos
rolb
mov
sub
jno
add
xchg
sbb
cmp
cmc
ds
mov
popf
rcrl
cmp
lahf
inc
daa
xchg
lds
das
push
aas
cltd
sub
xchg
add
pop
out
mov
jle
movsl
in
lock
mov
inc
dec
adc
mov
mov
repnz
std
negl
add
mov
inc
dec
xor
mov
add
leave
decb
stc
jns
pop
inc
xchg
push
sub
mov
push
popa
out
jp
dec
out
xor
rolb
mov
add
mov
add
add
ljmp
pushl
mov
mov
mov
push
scas
and
loop
mov
add
mov
sahf
mov
add
mov
mov
pop
add
mov
mov
mov
or
cmpsl
or
mov
add
add
lods
mov
fcomps
in
pop
jmp
adc
mov
jne
ja
push
fs
repnz
add
arpl
cwtl
insb
loop
mov
sbb
xor
pop
xor
orl
testb
add
pop
ret
jnp
mov
pushf
mov
mov
add
imul
jnp
mov
fmul
jb
mov
imul
add
and
pop
dec
pop
lahf
stc
dec
out
push
push
push
jg
daa
mov
push
pop
test
mov
fs
sbb
mov
or
jge,pt
xchg
dec
jge
cmpsb
les
jl
dec
mov
xchg
mov
or
inc
pop
push
jp
adc
mov
or
add
xchg
std
imul
cs
xchg
adc
nop
add
inc
imul
int
xorl
mov
pop
dec
xchg
jb
mov
dec
incl
notl
adc
mov
in
call
mov
mov
imul
mov
add
bound
mov
nop
add
mov
jg
push
jp
popa
pop
pop
adc
int3
cltd
dec
xor
popf
cmpsb
mov
js
lods
insb
jl,pt
roll
mov
sub
add
mov
in
lods
ss
rolb
mov
ja
add
and
fcmovu
stos
inc
jmp
mov
movsl
inc
add
clc
xor
mov
add
add
jb
mov
inc
out
mov
add
faddl
in
imul
xchg
mov
mov
pop
or
mov
in
nop
add
mov
dec
out
lds
sub
pop
aam
daa
or
add
or
or
xor
mov
ret
cmp
int3
mov
mov
stc
sbb
pop
add
add
in
add
adc
mov
pop
push
stos
daa
fadds
add
mov
add
jle
mov
pushl
xchg
xchg
or
sub
mov
dec
dec
in
test
fcmovne
adc
mov
adc
xor
mov
repnz
adc
mov
cmp
cmp
inc
add
fstpl
lret
insl
mov
mov
mov
sub
mov
add
inc
push
add
mov
rcr
mov
cltd
xchg
cmp
mov
dec
daa
push
add
push
loopne
mov
jb
mov
push
push
sub
push
js
or
int
cmc
xlat
cwtl
inc
jl
and
jo
mov
fildll
outsb
push
jp
sub
mov
jae
inc
bound
mov
lahf
push
sub
cmp
inc
pop
xchg
lds
add
add
outsl
mov
add
add
arpl
repnz
add
add
xchg
add
ss
add
dec
push
in
xchg
pushl
xor
mov
add
add
mov
cwtl
or
nop
add
jb
mov
pusha
add
cld
test
xor
and
mov
into
addr16
sahf
iret
das
push
adc
mov
cli
inc
pop
jns
add
aas
mov
xor
movsb
sub
add
out
xorl
xchg
divb
mov
jno
add
add
xchg
add
in
push
enter
into
push
pushf
xchg
lods
xchg
adc
mov
mov
jmp
lret
imul
and
popa
xchg
pop
lret
adc
ja
dec
sbb
divb
add
int3
mov
ja
push
insb
int3
pop
movsb
fistpl
int3
out
push
mov
mov
aad
les
fistpl
jmp
push
outsl
pusha
add
inc
pop
add
cmp
xor
cs
jecxz
cmp
xchg
mov
push
lods
ljmp
ficompl
mov
pop
out
adc
and
testl
mov
fldcw
add
add
xchg
add
call
push
add
jmp
xor
mov
cmp
cmpsb
stos
stc
jns
sub
push
adc
add
add
loop
mov
pop
mov
imul
inc
dec
fwait
cmp
jecxz
pop
enter
mov
scas
or
out
pop
fwait
mov
jbe
add
mov
mov
popf
pop
pop
or
add
add
sti
fsubrl
imul
jg
icebp
insb
sbb
repz
add
mov
dec
xchg
pop
movsb
and
mov
mov
add
mov
movsl
adc
out
lret
push
add
and
mov
mov
inc
mov
add
fldt
loopne
mov
dec
mov
cmp
js
insl
fnstenv
lock
daa
xchg
mov
sti
sub
int
imul
mov
add
mov
mov
fmull
arpl
rolb
mov
icebp
push
sahf
mov
mov
lret
mov
jno
mov
iret
xor
call
jmp
movsb
rolb
mov
mov
mov
fnstcw
mov
imul
mov
les
data16
pop
rcll
xchg
cmpl
leave
stc
mov
mov
inc
dec
rolb
xchg
push
lods
xchg
add
in
xchg
add
daa
mov
mov
add
push
add
mov
rolb
mov
xchg
jp
fucomip
mov
mov
sti
push
pminub
jb
mov
mov
fldenv
dec
insb
and
imul
push
lahf
add
mov
rcll
add
jecxz
sub
clc
xchg
jns
add
xor
nop
add
lods
jmp
push
adc
xor
add
inc
xchg
iret
xor
mov
ffree
call
ss
dec
loopne
mov
imul
adc
pop
aam
das
mov
dec
mov
pop
in
or
jp
das
adc
mov
pushf
hlt
cs
aas
add
mov
movsl
or
sbb
add
sub
add
js
dec
dec
insb
cmpsb
mov
push
jg
push
int
or
ljmp
pop
xor
ficoms
push
add
inc
ret
dec
pop
mov
and
mov
scas
addb
jne
add
insb
addb
mov
cmpsb
cltd
sub
pop
mov
mov
add
lods
or
sbb
neg
jg
pop
sbb
mov
push
inc
add
jmp
mov
aam
add
mov
pop
fisubl
ja
aas
jb
mov
hlt
aad
mov
and
std
pop
jle
rol
das
add
jae
add
mov
test
popa
push
xchg
mov
ds
inc
add
stc
icebp
pushf
clc
mov
mov
and
sub
add
add
mov
sub
movsb
rolb
mov
outsl
scas
mov
enter
jo
mov
mov
add
bound
mov
mov
xor
add
mov
shrl
pop
ljmp
mov
pop
or
mov
mov
xor
mov
mov
repz
add
or
push
add
daa
mov
add
jmp
add
xor
mov
mov
and
inc
mov
sub
sub
mov
repnz
test
divb
cmp
push
adc
negl
rolb
mov
mov
jge
add
nop
add
add
sub
xchg
cltd
fwait
iret
dec
cmp
add
add
sbb
insb
repnz
test
sub
mov
jae
or
pop
inc
add
mov
push
mov
fildl
mov
xor
mov
leave
daa
in
dec
in
and
mov
add
daa
jl
sbb
xor
jge
pop
dec
jo
mov
push
rolb
mov
pop
xor
mov
mov
adc
or
mov
push
inc
or
jae
mov
add
mov
popf
cmc
push
stos
repnz
pop
ret
mov
pop
in
mov
xchg
xchg
cli
sahf
movb
mov
dec
dec
mov
jecxz
sbb
outsl
inc
add
add
fisubl
jns
addb
cmp
movsb
cld
daa
ret
and
mov
sub
mov
cltd
std
out
aad
out
das
lahf
and
mov
stc
sub
add
cmp
dec
in
mov
add
jmp
or
test
lea
lock
xchg
jle
sbb
mov
add
mov
ret
data16
push
add
mov
jns
mov
add
pop
fisttps
sbb
das
jmp
testb
push
sub
mov
andl
cmovns
rolb
jmp
adc
add
pop
mov
mov
jbe
sbb
add
add
push
xor
es
inc
call
mov
push
lock
out
cmpsl
pop
pop
xor
ret
pop
test
add
out
das
inc
add
mov
inc
add
leave
jecxz
es
daa
dec
mov
es
add
jp
sbb
div
jecxz
dec
mov
xchg
add
notb
mov
test
mov
outsb
sbb
pusha
add
add
lock
pushf
mov
hlt
jno
in
dec
pop
clc
adc
mov
mov
into
add
sub
mov
xlat
or
xchg
adc
mov
mov
cld
jle
xchg
sub
fcomps
in
sbb
into
mov
outsb
setge
add
lret
sbb
cmp
fmuls
loop
mov
push
leave
sbb
or
mov
cmc
subl
add
mov
ret
popf
cwtl
jmpw
xchg
jnp
sub
add
in
xchg
xlat
lahf
push
movsl
inc
pop
cmpsb
cmpsl
cs
mov
jbe
add
fbld
push
add
mov
jmpw
inc
das
mov
test
out
lahf
sub
xchg
repnz
add
xchg
jl
add
stc
xchg
cmp
fimull
icebp
mov
mov
movsb
pop
push
add
test
testb
lret
mov
imul
fwait
mov
negb
rcr
push
jg
fstpl
sbb
js
out
mov
ret
fcoml
sbb
int
mov
cmp
xchg
mov
mov
add
test
data16
stc
fwait
ljmp
add
lahf
mov
mov
mov
sbb
jbe
std
mov
dec
push
xchg
and
mov
divl
inc
jne
mov
fwait
loopne
mov
add
add
icebp
adc
pop
repz
xchg
add
pushf
cmp
lahf
jge
pop
shrl
sub
cmp
test
add
mov
jns
add
repnz
sahf
les
pop
mov
inc
add
adc
cmp
mov
jmp
stos
outsl
iret
fwait
hlt
testb
xor
mulb
nop
add
jge
imul
leave
hlt
sbb
arpl
dec
or
into
mov
fwait
rolb
push
idivb
and
add
adc
mov
add
mov
push
sbb
mov
adc
mov
jbe
or
in
scas
jbe
mov
ja
cmp
xchg
dec
sub
adc
push
add
add
out
add
cmp
andl
mov
movsb
pop
adc
xor
icebp
repz
pushf
std
jne
xchg
mov
add
test
add
add
mov
xor
cld
xor
inc
aaa
ja
add
adc
add
dec
push
add
add
in
or
mov
cmp
add
adc
add
sub
or
mov
sub
dec
adc
mov
fdivrp
cmp
mov
mov
stos
jnp
add
sbb
add
add
dec
lds
bound
mov
scas
out
ret
sub
add
push
add
and
gs
sbb
or
mov
in
fs
es
mov
lods
aad
js
add
add
jns
dec
adc
or
add
cld
jnp
mov
rcll
roll
in
ficoms
add
dec
xchg
push
jl
fisubl
add
sbb
add
mov
inc
xor
loope
js
push
repnz
addr16
lahf
fmull
push
cli
vpshlb
add
inc
lret
mov
add
jecxz
add
dec
push
mov
add
add
lds
das
sbb
inc
mov
repnz
das
mov
iret
dec
jno
inc
icebp
shl
es
out
outsl
outsl
in
loop
mov
popf
inc
jo
mov
scas
les
inc
in
pop
das
pop
add
add
rolb
mov
mov
sub
and
push
pop
lahf
mov
add
fcmovne
cmp
sbb
jno
in
popf
sub
and
daa
rolb
mov
into
xchg
fs
das
cld
iret
iret
sti
rolb
mov
lret
inc
rolb
mov
mov
jmp
dec
shrl
ja
pop
adc
sahf
test
jnp
mov
add
mov
add
jecxz
and
mov
stc
test
mull
mov
add
imul
mov
mov
push
add
stc
jo
mov
xor
jbe
scas
mov
add
and
mov
xor
imul
add
aam
add
xchg
xlat
adc
xor
mov
mov
mov
and
mov
les
ja
and
incb
mov
pop
arpl
lea
jge
add
dec
pop
add
test
mov
mov
add
add
mov
imul
mov
mov
mov
cmpsb
xchg
sbb
adc
push
or
sahf
xlat
xor
add
mov
cmp
dec
push
cmc
jg
dec
addb
pop
addb
test
pop
add
sbb
rolb
mov
mov
in
in
in
hlt
cmp
pop
test
add
mov
mov
add
test
pop
out
das
mov
mov
push
mov
cmp
dec
fstpl
pop
rolb
mov
cmpsb
insb
loop
mov
adc
mov
mov
cmp
in
hlt
and
mov
pop
lods
jl
mov
mov
push
int3
in
inc
repnz
clc
repz
pop
lahf
mov
cmpsb
call
rcll
in
test
jae
js
add
test
fwait
add
lds
add
mov
mov
sti
jl
repz
mov
add
mov
pop
mov
mov
fildll
mov
rolb
mov
mov
cmp
fwait
lock
mov
xor
add
mov
outsl
push
or
add
lret
sar
repnz
add
mov
mov
in
inc
jno
sbb
in
jge
cmp
sub
in
and
mov
push
aas
and
xchg
mov
adc
mov
mov
mov
into
bound
mov
mov
insb
inc
xchg
jnp
add
insb
movl
mov
cmpsb
cwtl
fisttps
push
stos
and
add
mov
dec
and
mov
mov
or
jae
lock
add
adcl
mov
pshufw
test
outsb
cmp
out
xor
jo
mov
mov
dec
xchg
push
add
and
jns
out
pop
sbb
or
out
push
hlt
test
cmp
add
push
and
out
lret
add
sub
imul
cmpsb
into
dec
test
and
mov
sub
imul
cmp
mov
fimuls
cmc
rolb
outsb
push
add
mov
inc
bound
mov
add
loopne
mov
mov
je
add
add
mov
pop
jne
cmp
mov
push
cwtl
rolb
mov
lret
repz
jg
psllw
jno
in
dec
out
sub
dec
push
push
sub
add
xchg
mov
mov
mov
mov
add
adc
rolb
dec
rcll
mov
cli
add
mov
scas
xchg
subl
or
movhps
push
inc
mov
add
pushw
dec
roll
add
repnz
or
aam
sbb
sti
pop
pause
add
sahf
dec
cmp
aam
xlat
out
add
pop
test
xchg
sbb
scas
pop
xchg
stc
movsl
mov
pushf
xor
add
lods
mov
add
addb
scas
mov
outsl
mov
stos
sahf
adc
pusha
add
xor
inc
cld
push
add
pop
inc
jge
cmp
popf
cmpsb
xchg
ds
add
mov
cmc
repz
aaa
or
inc
loopne
mov
xlat
popa
inc
inc
add
add
loop
mov
rolb
imul
inc
add
popa
xlat
push
add
js
fwait
pop
les
jae
xchg
sub
mov
or
push
add
adc
mov
inc
fidivl
sahf
sar
pop
shl
add
jne
jno
inc
mov
popa
xor
nop
add
push
add
cmp
addl
jne
imul
fistpll
mov
push
mov
mov
dec
pusha
add
mov
repnz
mov
cmp
lret
je
test
jnp
mov
aaa
mov
aas
push
in
adc
add
xor
mov
imul
add
or
add
add
es
addr16
adc
add
fsub
outsl
jl
fsubs
add
mov
fistpll
mov
xchg
sbb
es
adc
mov
mov
adcl
jae
add
test
inc
cmpsb
mov
sar
inc
push
push
adc
add
mov
pop
xchg
in
aaa
mov
stc
in
lock
add
add
into
lret
dec
mov
add
push
add
mov
cmpsl
push
ret
xor
mov
mov
add
out
mov
cmpsb
push
fs
mov
pushf
mov
int
cmpl
add
daa
push
sarl
dec
jns
divb
shll
push
outsb
jl
add
int
add
ss
jp
add
inc
push
mov
movsb
notb
mov
jmp
sub
pop
xor
mov
out
pop
ds
add
fmuls
into
pop
sub
addr16
mov
add
add
cmp
push
push
in
clc
mov
mov
add
mov
add
leave
out
cwtl
cltd
dec
add
pop
cmp
popf
sub
and
mov
mov
mov
std
lock
rolb
mov
es
adc
addb
cmp
mov
mov
stos
lock
push
cmp
xor
mov
jg
lods
sbb
add
filds
repz
dec
push
adc
cmc
popf
xchg
add
test
xor
or
adc
mov
mov
inc
add
lds
jno
add
frstor
xor
das
lods
ffree
push
adc
add
and
mov
add
cmp
mov
mov
pusha
add
imul
jle
mov
push
and
mov
add
test
mov
jp
inc
scas
cmp
xor
push
xor
mov
repz
dec
pusha
add
jo
mov
pop
daa
mov
rol
pop
aam
icebp
das
dec
xchg
ja
cmp
insl
mov
xlat
pushf
loop
mov
cmc
xlat
xor
mov
mov
rcrl
cmp
jge
add
inc
xor
test
jge
test
out
add
mov
loop
mov
cli
imul
addr16
mov
scas
sbb
xor
repnz
add
mov
pop
out
hlt
ds
in
or
add
out
mov
cwtl
xchg
cmp
stos
mov
fs
aam
xchg
add
mov
aaa
sub
jns
cld
pushf
lcall
lds
fstl
mov
xor
fsubl
push
add
fidivrl
mov
add
add
mov
add
add
xchg
add
std
push
lcall
xchg
add
add
mov
adc
sub
je
sbb
in
cmpsl
sub
mov
add
and
and
sti
fisubrs
adc
cmc
inc
pop
in
jae
cmpsb
sub
jp
add
add
test
pop
stc
jmp
push
add
mov
mov
cmc
movsb
inc
add
arpl
pop
xlat
cli
mov
dec
nop
add
jge
insl
dec
loope
jl
adc
mov
xor
adc
mov
lods
lret
rolb
mov
pop
icebp
test
addb
insb
mov
sti
insb
and
mov
cmp
add
outsb
in
jecxz
add
mov
mov
push
icebp
mov
mov
add
mov
mov
hlt
lods
pop
jge
xor
mov
dec
adc
fisttpl
dec
add
mov
push
xchg
lods
and
pop
push
add
mov
mov
cmpsl
inc
call
add
mov
add
or
dec
pop
fnstenv
movsl
adc
mov
adc
mov
notb
stc
fs
data16
cmp
add
pusha
add
adc
sbb
icebp
push
add
mov
xchg
mov
imul
arpl
mov
add
add
rolb
mov
push
sbb
xchg
xchg
pop
push
in
mov
movsl
test
jle
add
mov
test
xor
mov
cmc
repnz
scas
pop
aaa
jbe
out
aam
add
or
leave
cmp
add
sbb
add
out
or
push
int3
xchg
inc
add
lds
mov
mov
mov
push
addb
and
add
mov
sbb
pop
shll
scas
aaa
in
idivl
rorl
mov
mov
push
add
sbb
addr16
cmp
pop
loope
sbb
dec
jbe
aad
jmp
mov
mov
cmp
popa
inc
lahf
lods
orl
or
add
add
sbb
popf
and
jae
inc
data16
mov
add
mov
adcl
fildl
inc
xor
add
and
pop
push
mov
mov
and
mov
sbb
jb
mov
adc
and
add
je
ljmp
add
pop
push
xor
mov
add
jb
mov
in
push
add
test
jne
adc
cli
rorl
lret
lret
inc
cmp
cli
pusha
add
dec
inc
add
mov
fs
add
and
mov
mov
mov
test
data16
mov
xchg
testb
add
add
pop
scas
pop
aaa
push
jno
pop
and
test
lods
inc
dec
adc
pop
jg
push
loopne
mov
test
add
sub
aad
xchg
mov
mov
inc
loope
pop
in
mov
jb
mov
cwtl
iret
and
mov
loop
mov
das
mov
mov
mov
add
mov
jae
gs
mov
cmp
adc
add
mov
les
out
adc
xchg
xor
rolb
pop
scas
jl
in
add
call
js
push
add
add
add
mov
sub
adc
and
pop
fcomps
pop
repz
and
mov
test
popf
xchg
adc
xchg
sub
inc
add
sbb
add
imull
cmp
fisubrs
movsb
jecxz
xchg
loopne
mov
add
or
call
jne
flds
daa
sbb
add
mov
add
fdiv
vpmaxub
mov
jb
mov
and
mov
mov
stc
dec
addr16
add
mov
dec
ficoml
mov
or
pop
fninit
scas
sub
loop
mov
mov
call
xchg
out
add
add
roll
pop
adc
pop
pop
pop
insl
mov
ja
sbb
fwait
mov
aad
jl
and
inc
fwait
mov
fsubl
cmp
add
add
xchg
add
pusha
add
notb
lock
add
movsb
adc
pop
jle
fcoml
lcall
sbb
inc
int
add
arpl
inc
add
test
jmp
add
or
pushf
pop
and
mov
xor
pop
repnz
insl
enter
test
je
add
cwtl
imul
addb
aaa
cmp
sub
lahf
and
mov
jecxz
sub
add
xor
rolb
insb
cli
and
sbb
add
mov
xchg
dec
cmovle
rolb
push
add
int3
mov
jp
insl
cmpsb
push
outsl
call
adc
mov
nop
add
test
aas
inc
inc
cld
and
mov
add
add
add
add
jmp
pop
inc
add
pop
in
lcall
inc
mov
gs
or
int
test
in
mov
mov
mov
inc
cli
es
mov
test
jae
adc
cmpsl
sub
inc
add
add
or
add
xor
add
jnp
add
mov
mov
inc
sub
out
aad
jno
mov
xorl
das
in
sti
pusha
add
lds
dec
jecxz
out
arpl
je
add
adc
add
xchg
ss
test
mov
pop
push
mov
into
cltd
mov
add
leave
dec
add
mov
add
push
add
sbb
mov
js
test
add
ljmp
mov
and
pushf
xor
das
pop
dec
into
popf
push
push
in
in
xor
addb
mov
add
dec
or
mov
imul
add
iret
call
mov
push
rolb
addr16
rolb
mov
xlat
cltd
es
in
hlt
mov
jae
jmp
add
mov
inc
add
outsl
rcr
loop
mov
out
add
add
add
mov
cs
in
pop
adc
mov
mov
mov
add
add
push
sbb
clc
insb
mov
mov
fisubrl
loope
xchg
insb
push
sbb
add
sti
or
add
and
mov
push
adc
in
pushf
cmp
mov
xchg
pushf
and
cmp
scas
lods
arpl
pop
jl
pop
xchg
mov
push
movsl
inc
add
mov
sbb
ljmp
jle
inc
add
add
mov
hlt
mov
mov
cwtl
addps
adc
fcoms
popf
int
add
.byte
mov
