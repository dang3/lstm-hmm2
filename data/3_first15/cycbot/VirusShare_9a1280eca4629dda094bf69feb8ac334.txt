add
add
or
add
add
or
add
add
add
or
add
or
add
or
or
or
add
add
or
or
add
add
add
or
add
add
add
or
or
add
or
add
add
add
or
add
or
add
add
or
add
add
or
or
add
add
add
or
add
or
add
add
add
add
add
add
add
add
or
add
add
add
or
or
or
add
or
add
add
add
or
add
add
add
or
or
add
add
add
add
or
add
add
add
or
or
add
add
add
add
add
or
or
or
add
or
add
or
add
add
add
add
add
add
add
or
add
or
add
or
add
add
add
add
add
add
or
or
add
add
add
add
add
add
add
add
or
add
or
add
add
add
add
or
or
or
add
add
add
add
add
add
add
or
add
add
add
or
or
or
add
or
add
add
add
add
add
or
add
or
or
or
add
add
or
or
or
add
add
or
or
or
or
add
add
add
add
or
or
add
add
or
add
or
add
or
add
or
add
add
or
add
or
add
or
add
or
add
add
add
add
or
add
or
or
add
add
add
or
add
add
add
or
add
or
add
or
or
or
add
or
add
add
add
add
add
or
add
or
add
or
or
or
add
add
add
or
add
or
or
or
add
or
add
or
add
add
or
add
or
or
add
or
add
add
add
or
add
add
or
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
add
add
or
or
add
add
or
add
or
add
or
or
or
add
or
add
or
add
or
add
add
add
or
add
add
or
add
or
or
add
or
add
or
add
or
add
add
add
or
or
add
or
or
or
add
or
add
or
add
add
add
or
add
or
add
or
add
add
add
add
add
add
add
or
add
or
or
add
or
add
or
add
add
or
add
or
add
or
or
add
add
or
add
add
add
add
add
or
add
add
add
add
add
add
add
or
add
or
add
or
add
add
add
add
add
or
or
or
add
add
or
or
or
or
add
add
add
add
add
or
add
add
add
or
add
add
add
or
add
add
add
add
add
add
add
or
add
or
add
add
add
add
add
or
add
or
add
add
add
or
add
or
add
add
add
or
add
add
add
or
add
add
add
add
add
or
add
add
or
or
add
add
add
add
or
add
or
add
or
or
add
add
add
or
add
or
add
or
add
add
add
add
add
add
add
or
add
or
add
or
or
add
or
add
or
add
or
add
add
or
add
or
add
add
add
or
add
or
add
add
or
add
add
or
add
add
add
add
or
add
or
or
or
add
or
add
or
add
or
add
or
add
or
add
add
add
add
or
add
or
add
or
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
add
add
add
add
or
add
or
add
or
add
add
add
or
add
or
or
add
add
or
or
add
or
add
add
add
add
or
add
or
add
or
add
add
add
or
add
add
add
or
add
or
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
or
or
add
add
or
add
add
add
or
add
add
add
add
add
or
add
or
add
add
add
or
add
add
add
or
add
add
add
add
add
or
add
or
add
or
add
add
add
add
add
add
or
add
add
add
add
add
or
add
add
or
add
add
add
or
add
or
add
add
or
or
add
add
add
or
add
or
add
add
add
or
add
or
add
add
add
add
add
or
add
or
or
add
add
add
add
add
add
add
add
add
or
add
or
or
add
or
or
add
or
or
or
add
add
or
or
or
add
or
or
add
add
add
or
or
add
add
or
or
or
or
or
add
add
or
add
or
or
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
add
add
add
add
add
add
or
add
add
add
add
add
or
add
or
add
add
add
add
add
or
or
add
or
add
or
add
or
add
or
add
add
add
add
add
or
add
add
add
or
or
add
add
or
add
or
add
or
add
add
add
or
add
add
add
add
or
add
add
add
add
add
or
or
or
add
add
add
or
add
add
add
or
or
or
add
add
or
add
add
add
or
or
or
add
add
add
or
add
add
add
or
add
add
add
or
add
add
or
add
add
or
or
add
or
add
add
or
add
or
add
add
add
or
add
add
add
or
add
or
add
add
add
add
add
add
add
or
add
add
or
or
add
or
or
add
or
add
add
or
or
add
add
add
or
add
add
or
add
add
add
or
or
add
add
or
add
or
add
add
add
add
or
add
or
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
or
or
add
or
add
or
add
add
or
add
or
add
add
add
add
add
add
add
add
add
or
or
or
or
add
or
add
or
add
or
add
add
add
or
or
or
add
add
add
or
add
or
add
add
add
or
or
or
or
add
add
or
add
add
add
or
or
add
or
or
add
or
add
or
or
or
add
or
add
add
add
or
add
or
add
or
add
or
add
add
add
add
add
or
add
add
or
add
add
or
add
or
add
add
add
or
add
or
add
add
add
or
add
or
add
or
add
add
or
or
add
or
add
or
add
or
or
add
or
or
add
add
or
or
or
or
add
or
add
add
add
or
add
add
add
add
add
or
add
or
add
or
add
add
add
or
add
add
add
or
or
or
or
add
or
add
add
add
add
add
or
or
add
or
add
add
add
add
add
or
add
or
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
or
add
add
add
add
add
add
add
add
add
add
or
add
or
add
add
add
add
add
add
add
or
add
add
or
add
or
or
add
or
or
add
or
add
add
add
add
add
or
add
or
add
or
add
or
add
or
add
add
add
add
or
or
add
or
add
or
add
add
add
add
add
add
add
or
add
or
or
add
or
or
add
add
add
or
or
or
add
add
add
add
add
add
add
or
or
or
or
add
add
add
or
add
add
or
add
or
or
or
add
add
add
add
add
or
add
or
add
or
or
add
add
add
add
add
add
add
or
add
add
or
add
or
add
add
add
add
or
add
add
or
or
add
or
add
add
add
or
add
add
add
or
add
or
add
or
or
add
or
or
add
or
add
or
add
add
add
add
add
or
add
or
add
or
add
or
add
add
or
add
or
add
add
add
or
add
or
or
or
add
add
or
or
add
add
add
add
add
add
add
or
or
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
add
add
add
add
or
add
add
add
add
add
add
add
or
add
add
add
or
or
add
or
add
add
add
or
add
or
add
or
add
add
add
add
add
add
or
add
or
add
add
add
add
add
or
or
add
add
add
add
add
or
add
add
add
add
or
or
add
add
or
add
add
add
add
add
add
add
add
add
or
add
or
or
or
or
add
or
or
or
add
add
add
or
add
or
add
or
add
add
or
add
or
or
add
add
add
or
add
add
add
add
add
or
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
or
add
add
or
add
add
add
add
add
add
add
add
or
or
add
add
add
add
add
or
add
or
or
or
add
add
add
or
add
or
add
add
add
add
add
add
add
or
add
add
add
or
add
add
add
or
add
or
add
add
add
or
add
or
add
or
or
or
add
or
or
or
or
add
or
or
add
add
add
add
add
add
or
add
add
or
add
or
add
add
add
or
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
or
or
add
or
add
add
add
or
add
add
add
add
add
add
add
or
add
add
add
or
add
or
add
add
or
add
or
add
or
add
add
or
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
or
add
add
or
add
or
add
or
or
add
add
add
add
add
add
add
add
add
add
or
or
add
add
or
or
add
add
add
add
add
add
or
add
add
or
add
or
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
or
or
add
add
add
or
add
add
add
or
add
add
or
or
add
add
add
or
add
add
add
add
add
or
add
add
add
add
add
add
add
or
add
or
add
add
add
add
add
add
add
or
add
add
add
add
or
add
add
or
add
add
add
add
add
add
or
or
add
add
or
add
add
add
or
add
or
add
add
add
add
add
add
or
add
or
add
add
add
or
add
or
add
add
add
add
or
add
add
or
or
or
or
or
or
add
or
add
or
add
or
add
add
add
or
add
add
or
add
add
add
add
or
or
add
add
add
add
add
or
add
or
add
add
add
or
add
or
add
or
add
add
or
or
add
add
add
add
add
add
add
add
add
add
or
or
add
or
add
add
add
add
add
or
or
add
add
add
add
add
add
add
add
or
add
add
add
or
or
add
or
add
or
or
add
or
add
add
or
add
add
add
or
add
or
add
or
add
add
add
add
add
add
add
add
add
add
add
or
or
or
add
or
add
or
add
or
add
add
or
add
add
add
add
add
or
add
or
add
or
or
add
add
or
add
add
or
add
or
add
add
add
add
or
add
add
or
add
or
add
or
add
add
add
add
or
or
add
add
or
add
or
add
or
add
or
add
or
add
add
add
add
add
or
add
add
add
add
add
or
add
or
add
or
add
or
add
or
or
or
or
add
or
add
or
or
add
or
or
or
add
or
add
or
add
or
add
add
add
add
add
or
add
or
or
add
add
or
add
or
add
or
add
add
add
add
add
or
add
or
add
or
add
or
add
add
or
add
or
or
add
or
add
add
or
add
or
add
add
add
add
add
add
add
or
or
add
add
or
add
or
add
add
add
add
add
add
or
add
or
add
add
add
add
add
add
or
add
or
add
add
add
add
add
or
or
or
add
or
add
or
add
or
add
add
add
add
add
add
add
or
add
add
add
or
add
add
add
or
add
add
add
add
add
or
add
or
add
add
add
add
or
add
or
add
or
add
add
arpl
xchg
add
add
test
add
push
sti
add
add
lcall
lds
mov
mov
mov
mov
ljmp
mov
je
xor
fmul
sbb
cmp
add
add
mov
fbld
loopne
adc
mov
inc
sbb
add
add
jmp
xchg
fisttpll
in
add
add
adc
ror
pcmpeqw
mov
jns
and
add
mov
mov
fiaddl
add
inc
mov
mov
and
xchg
sub
add
add
xchg
or
add
add
lea
shrb
adc
xchg
insb
mov
inc
stc
pusha
add
add
enter
aas
adc
int
mulb
frstor
add
add
inc
mov
rclb
outsb
push
xchg
push
jmp
outsl
sti
mov
ja
mov
std
xchg
xchg
push
push
sarb
push
pop
mov
fisubrs
cmp
add
add
pop
mov
sarl
push
sbb
pushf
test
lds
sub
add
add
add
scas
cmp
ficoms
cltd
leave
push
push
bound
adc
add
xor
add
ljmp
push
movsl
mov
jbe
mov
cli
sar
pop
jge
mov
pop
mov
movd
add
add
adc
add
xchg
mov
mov
add
mov
in
les
jle
pop
imul
push
data16
loopne
movsl
push
mov
jnp
ljmp
pop
jg
mov
les
push
inc
xchg
push
cmp
int3
dec
sti
ret
jmp
add
mov
test
add
add
addb
add
add
pop
inc
add
add
repz
mov
xchg
inc
sbb
cld
cmp
repz
xchg
sbb
mov
ljmp
jl
ja
push
adc
dec
dec
cmp
add
add
sbb
and
add
add
mov
fdivrp
leave
rcrl
lret
jp
dec
mov
idivb
mov
fimull
add
add
fmul
mov
jge
mov
push
icebp
pusha
mov
movl
testb
mov
add
pop
jbe
sub
fwait
add
add
xchg
mov
rolb
mov
das
adc
int
push
mov
add
add
add
mov
adc
pop
and
nop
inc
das
fsubrs
mov
and
lahf
aas
jp
mov
mov
ss
iret
sub
pop
sub
mov
add
add
add
add
and
add
add
cmp
push
out
pop
or
add
add
jge
les
call
xchg
pop
add
add
add
andb
inc
mov
cli
dec
mov
sbb
and
pusha
mov
push
out
xor
fwait
push
jo
cmpsb
adc
add
add
in
cltd
out
cmp
pop
cmpsb
xchg
cltd
mov
pop
pop
mov
add
std
rcrb
add
shl
mov
lahf
loope
test
sahf
and
add
add
lea
inc
add
add
fildll
push
mov
cmpsb
fcompl
push
cmp
loopne
inc
cmpsb
mov
or
imul
addb
and
pop
pusha
mov
fidivrl
flds
cs
inc
movsb
cs
inc
mov
pushf
enter
push
into
mov
pop
int3
mov
cmp
out
in
lds
in
mov
out
jo
loope
and
add
add
clc
sahf
jns
push
mov
add
add
out
sbb
add
fstps
or
dec
add
add
sahf
mov
dec
repnz
cs
mov
aad
scas
pop
xchg
mov
es
sahf
sub
add
add
xlat
arpl
push
or
add
add
push
aam
sti
and
loopne
and
add
mov
xchg
out
scas
outsl
xchg
aas
scas
push
xchg
xor
dec
inc
jl
jl
lret
popa
inc
jecxz
push
lods
mov
mov
inc
push
pop
jnp
push
dec
or
das
ja
jno
xor
sahf
lods
movsb
inc
mov
mov
out
sbb
add
add
fdivrs
pop
dec
cmpsl
cmp
aad
addr16
je
sbb
je
flds
cld
mov
jb
cmp
inc
mov
mov
add
inc
add
dec
add
add
mov
jl
cli
sub
xor
add
add
pop
add
mov
mov
ljmp
addb
add
add
stos
popa
cmpsl
pop
sbb
add
jl
xor
fs
add
add
fisttpl
pop
pop
cmc
sbb
cltd
sub
pop
orl
adcb
clc
and
ficoml
fmull
fldt
mov
dec
mov
dec
out
cmpsb
add
add
cli
negl
je
imul
mov
jmp
add
add
pop
xor
shlb
mov
adc
dec
add
add
ljmp
dec
mov
sub
clc
adc
push
shl
or
add
add
mov
aam
xorl
sbb
lret
xchg
xor
push
mov
push
jg
mov
push
mov
int
sub
mov
add
add
add
add
adc
add
add
xor
mov
mov
lods
aam
inc
mov
lret
ja
sar
adc
add
add
push
and
add
add
and
xchg
add
add
shl
push
pop
inc
cmp
js
test
or
imul
scas
xchg
sbb
bound
mov
out
lea
lods
adc
lahf
add
pop
ss
xchg
adc
pusha
add
add
imul
inc
jnp
ret
or
aam
mov
pop
insb
mov
mov
sub
add
add
add
add
popa
aas
loope
ret
cld
mov
inc
mov
add
add
push
jge
cmpsl
mov
jae
mov
stos
in
jne
pop
mov
cld
cs
cmp
mov
add
sarl
in
sub
pop
sbb
push
add
add
add
add
jo
loop
sbb
hlt
outsl
inc
xchg
movsb
add
movsl
add
fsub
xchg
test
mov
imul
add
add
push
pop
arpl
call
pop
add
add
add
push
xlat
jnp
pop
aad
or
mov
add
daa
fwait
jnp
or
and
push
in
in
sti
pop
popa
push
addl
mov
add
add
add
cmpsb
movsl
arpl
pop
sbbl
scas
cmp
mov
push
cmp
or
cli
movsl
sbb
pop
cltd
mov
loopne
mov
das
aas
jle
xor
test
mov
xchg
lcall
mov
fcomip
push
aam
add
in
add
add
sub
inc
xlat
fmull
mov
sbb
aam
leave
sahf
test
mov
add
add
mov
stc
test
add
mov
push
add
dec
enter
mov
fisubrs
ret
imul
sbb
out
out
shr
loopnew
or
call
mov
mov
add
add
jmp
xor
aaa
stos
movsl
rol
or
sti
jo
jmp
fcmovne
filds
add
add
adc
mov
daa
test
roll
mov
add
add
mov
in
dec
mov
fmull
pop
adc
dec
add
add
add
cli
and
shrb
mov
data16
adc
or
mov
xor
jno
stc
jle
sbb
test
add
add
cwtl
dec
jp
test
nop
pop
neg
je
or
add
and
add
add
add
add
mov
inc
jecxz
pop
cmpsb
adcl
mov
stos
lcall
mov
add
lret
mov
loopne
mov
jne
cli
pop
test
add
push
xor
add
fidivrs
punpcklwd
jno
rol
outsb
dec
js
js
incl
push
fwait
js
daa
ret
jl
mov
popa
jle
stos
and
mov
push
in
dec
mov
out
out
add
add
jle
push
xchg
inc
lock
scas
push
daa
rclb
lret
dec
repz
mov
mov
inc
repz
push
cmpsl
and
ret
shlb
ja
xlat
push
push
ja
mov
push
jnp
xchg
xchg
stos
test
add
fbld
stc
imul
lea
loope
add
add
iret
repnz
xchg
adc
inc
std
mov
inc
mov
lods
add
iret
jle
and
add
add
xor
add
lsl
push
das
mov
dec
push
fidivs
jp
mov
hlt
mov
cwtl
arpl
xor
stos
sub
cmp
pop
fdivr
imul
test
adc
add
hlt
mov
mov
add
add
outsb
lods
mov
jns
lret
xor
stc
xchg
bound
add
add
xchg
add
ret
sbb
add
movb
lret
xchg
push
jg
jge
xor
jecxz
stc
push
dec
mov
cmpsl
mov
jl
push
pop
in
roll
add
add
das
pushf
pop
pop
scas
xchg
sub
cwtl
push
fwait
inc
faddl
mov
cmp
mov
mov
daa
jo
pop
jle
cwtl
sbbl
roll
jl
lods
mov
and
add
add
push
subl
outsb
test
repz
popa
cltd
xor
aas
inc
mov
incb
daa
push
je
int3
jp
pop
lret
ficoms
sti
nop
aad
or
dec
cmpsb
lock
add
add
add
add
add
icebp
rcrb
gs
dec
rep
notb
push
cmp
pop
shrl
push
cmp
lahf
mov
adc
jl
xchg
scas
xchg
int3
jge
inc
mov
jbe
pop
sbb
lahf
xchg
call
shlb
test
add
add
shl
imul
inc
cmp
mov
outsb
jne
sub
pop
mov
add
add
inc
repz
push
pop
cmp
in
enter
xorb
push
dec
repnz
mov
push
and
add
add
pop
mov
adc
push
iret
dec
add
add
insb
add
add
icebp
lea
add
add
jae
and
add
add
mov
push
xchg
pop
cs
imul
jb
pop
cmc
pop
inc
jns
jae
mov
mov
mov
or
add
add
jmp
add
add
mov
add
iret
xorl
and
imul
and
add
add
jmp
push
fnstcw
out
sbb
pushw
imul
fisttpll
mov
cmp
and
mov
add
add
sub
dec
mov
xor
push
stos
jb
cli
xor
into
mov
and
fildll
add
add
rol
mov
mov
add
add
sub
add
jb
sti
gs
sbb
data16
xchg
dec
mov
fwait
jb
mov
cmp
das
jg
call
push
mov
sbb
nop
pop
mov
add
add
adcb
fists
movsb
je
sbb
add
cmpsb
mov
cmp
sbb
adc
or
out
int3
push
testb
mov
clc
pop
scas
mov
adc
popf
pop
lock
insl
ss
add
add
add
adc
cmp
movsb
cltd
inc
cmp
xor
dec
mov
pushf
xchg
in
xor
push
pop
or
lods
and
jle
jno
add
add
xor
adc
add
add
sbb
cmp
addb
popa
inc
mov
in
adc
add
adc
mov
jne
jo
aad
xlat
ja
or
add
add
add
add
mov
mov
cs
and
fidivl
les
add
or
add
add
jnp
jmp
inc
mov
push
iret
dec
hlt
cmc
out
and
add
add
inc
lcall
aam
cmpsb
cmc
fptan
test
add
add
cmp
mov
mov
add
mov
mov
or
mov
ret
nop
adc
pop
jo
sti
xchg
and
mov
jo
or
add
add
mov
add
stc
adc
and
add
add
add
mov
push
sbb
mov
mov
mov
adc
jl
mov
mov
outsl
xchg
test
add
add
cli
and
add
add
add
or
add
add
mov
js
pop
push
stc
xor
inc
ss
imulb
dec
jge
xchg
cmp
add
add
ljmpw
mov
mov
or
jne
push
push
notl
push
das
jb
and
scas
push
xchg
inc
mov
push
cmp
out
jecxz
jmp
nop
push
lret
inc
jl
pop
stos
xchg
ds
andl
add
add
lret
pop
sub
cld
jmp
mov
push
mov
xlat
xor
lcall
add
add
lods
pop
push
jp
jl
popa
lret
adc
adc
push
fsts
add
add
jmp
rorl
xchg
add
or
jne
xor
test
inc
shl
shll
lcall
push
scas
pop
xchg
sti
enter
add
add
xchg
mov
jo
xor
mov
aaa
mov
sub
movsb
loop
pop
lock
aaa
stos
jae
mov
mov
add
add
add
dec
jns
jle
into
sub
fdivrl
xor
mov
push
fldt
xor
add
mov
js
cmp
data16
xor
out
push
sub
addr16
in
add
mov
jb
add
lret
inc
in
inc
xchg
xchg
mov
add
add
icebp
lock
add
adc
inc
sbb
or
add
add
sti
pop
loopne
aaa
lret
cmp
inc
ficompl
add
add
add
mov
push
sub
shlb
imul
xchg
popa
orl
jne
lock
stc
adc
hlt
and
add
pop
cmp
dec
xchg
test
xchg
add
push
imul
mov
add
add
jbe
mov
mov
test
add
mov
fisttpl
and
int
pop
loope
or
add
add
outsl
and
add
add
mov
xor
add
ret
cld
push
ret
mov
jg
push
rcr
mov
add
add
add
js
pop
cmp
mov
fbstp
adc
addr16
std
sbb
in
jae
call
mov
ljmp
lods
mov
add
add
jl
cli
outsl
outsl
cmp
shlb
inc
add
xchg
or
add
add
and
in
add
add
scas
cmpl
add
js
or
add
add
mov
push
adc
aad
rcll
cmp
aas
inc
add
add
lds
jb
sub
dec
shll
add
add
mov
jp
mov
mov
sbb
sub
mov
mov
pop
scas
loope
scas
xor
jg
das
stos
lock
jmp
ss
dec
mov
loope
or
jp
fistpl
andl
jecxz
add
add
push
pop
and
add
add
xor
fnsave
daa
jle
push
sbb
jle
es
mov
cltd
fildl
dec
mov
aad
mov
gs
shll
int
jmp
inc
add
add
add
xor
add
add
test
add
add
add
pop
dec
mov
fidivrl
dec
xchg
cmp
and
call
jo
pop
sub
add
add
add
add
and
cmp
leave
aas
shrl
add
add
add
add
pushf
cs
sub
add
add
insl
shlb
push
cmpsl
and
add
add
sbb
mov
xor
pop
nop
cmp
ret
je
and
aaa
or
mov
je
stos
mov
mov
inc
xchg
mov
das
inc
adc
enter
sub
jg
shlb
xchg
xchg
add
sbb
add
add
dec
add
pop
aad
add
mov
mov
ret
xchg
cmp
out
push
dec
sub
push
xlat
push
adc
insb
add
add
dec
jge
lret
out
sbb
push
rclb
pusha
mov
lods
dec
add
add
mov
xchg
mov
ret
popa
in
sar
jle
test
add
add
repnz
add
ljmp
inc
filds
subl
add
add
add
stos
jns
cli
push
xchg
and
add
add
add
loope
mulb
pop
inc
pop
add
add
inc
jmp
or
in
std
jno
pop
jg
dec
int3
sub
stos
sub
repz
scas
sbb
cmc
testl
mov
daa
pushf
mov
pop
or
add
add
add
add
aaa
add
add
add
scas
pop
pop
iret
cmc
mov
mov
and
add
add
das
mov
mov
lret
cmp
and
jbe
add
add
ret
int
movsl
pop
addr16
icebp
pop
and
add
add
mov
mov
pop
mov
data16
es
adc
xor
xor
pop
test
add
add
or
add
add
stos
lcall
add
mov
es
aad
mov
stos
sbb
out
mov
fwait
cmp
inc
cld
fildl
mov
inc
add
add
pop
xchg
loope
loopne,pt
aas
aas
gs
or
add
add
repnz
inc
inc
adc
xlat
xor
adc
add
repnz
xor
lock
dec
push
test
push
xchg
scas
jb
lods
sub
and
jne
add
add
sub
add
add
add
add
add
add
cmp
add
call
adc
nop
cmpsb
aad
adc
int
sbb
cmp
cmp
adc
add
add
inc
mov
pop
dec
lret
out
mov
or
add
add
xlat
lea
inc
ficomps
sub
adc
add
add
mov
insl
int3
pop
mov
add
pop
jb
pop
dec
lock
add
add
addr16
shrb
add
sbb
mov
add
mov
adcl
stos
mov
mov
pop
cld
rcrb
pop
stos
les
pop
sbb
lret
cs
mov
lret
daa
push
inc
dec
rcr
add
add
ljmp
and
add
add
and
add
add
outsb
jbe
or
or
add
add
shll
add
add
out
mov
addl
jns
int3
mov
jmp
pusha
mov
mov
mov
cld
aas
pop
cs
sub
push
sbb
add
add
add
sbb
and
cltd
lds
out
call
mov
sub
add
add
add
add
jnp
lds
jne
in
push
notl
scas
pop
mov
push
push
push
ss
xor
add
add
add
push
lret
sub
xchg
dec
push
pop
xchg
call
add
jae
je
lods
scas
fwait
add
add
add
js
adc
add
add
lcall
and
scas
cmp
cltd
hlt
push
enter
add
js
std
and
ljmp
add
rclb
or
xchg
repnz
ficoml
repz
pushf
jns
subb
jno
mov
in
push
lods
repnz
mov
jp
sbb
push
call
add
add
pop
fsts
xorb
cmpsb
push
lcall
hlt
and
add
add
cmp
fs
popf
test
pusha
mov
aam
add
and
add
add
add
popl
les
add
add
movsb
cmp
dec
mov
pop
lcall
cmp
push
pop
add
add
add
xor
jmp
sbb
pop
mov
push
nop
xchg
adcb
push
stos
jl
mov
out
sahf
cmp
into
cmp
stos
rcrb
fcoml
pop
push
decl
add
add
add
stos
pop
sar
mov
fnsave
ljmp
repz
adc
add
add
add
data16
aaa
das
mov
les
inc
test
scas
pop
dec
icebp
add
mov
pop
cmp
add
mov
clc
je
sarb
bound
push
ljmp
jle
jnp
add
jp
mov
xor
mov
xchg
lcall
add
sub
pop
cld
sbb
in
sub
out
les
add
add
pop
mov
decb
jl
pop
clc
add
add
mov
dec
rclb
arpl
add
add
sti
mov
icebp
loopne
pop
and
add
add
fmuls
add
add
or
add
add
std
sub
lods
stc
cmovae
add
add
push
inc
and
add
add
push
test
add
push
stos
xchg
sub
fimuls
out
pop
rclb
out
mov
mov
enter
dec
add
add
pop
jno
dec
stos
pop
mov
jnp
push
pop
rclb
add
add
sub
scas
loope
lds
roll
mov
xchg
es
or
add
push
dec
shrl
add
stos
mov
outsl
fwait
xchg
into
aad
mov
jecxz
clc
insb
and
and
aad
xchg
sub
call
cmp
jne
lea
push
push
push
mov
call
or
mov
shr
mov
add
push
push
push
push
push
call
leave
ret
ret
mov
mov
mov
or
cld
lea
lea
sub
shr
not
inc
sub
mov
je
mov
add
lea
clc
jmp
ret
push
mov
sub
lea
movl
movl
push
push
push
push
push
push
cld
call
test
jne
push
bnd
cs
lret
mov
into
add
add
pop
outsl
xlat
repnz
es
pop
push
mov
cwtl
stos
mov
xor
loop
sbb
sbb
fwait
pop
pop
mov
push
cltd
lcall
jle
mov
push
inc
mov
mov
push
fcmovnu
xchg
xlat
aas
and
add
add
pop
inc
sbb
sub
add
add
add
cld
outsl
pop
mov
addr16
jmp
popl
iret
loop
decl
jne
iret
adc
repnz
stc
jl
push
roll
aam
mov
inc
pop
pop
sbb
lea
fdivrl
movsl
rorb
out
loope
gs
mov
hlt
test
lods
push
std
push
push
mov
mov
enter
sub
sbbb
ljmp
add
add
mov
ljmp
push
xor
aas
dec
mov
inc
neg
loope
mov
arpl
and
add
add
leave
mov
test
xchg
sub
iret
sbb
adc
push
ficompl
mov
inc
xor
insb
add
add
or
add
add
add
add
add
add
add
add
push
push
add
stos
xchg
mov
add
add
aad
cmc
ja
pop
inc
add
add
mov
add
add
add
fnsave
sbb
mov
lea
fdivrl
add
pop
push
cmp
imul
jb
in
add
add
push
xchg
sbb
adc
pushl
cld
in
mov
xor
mov
mov
mov
sahf
sub
add
add
and
add
add
sbb
out
aam
pusha
mov
cld
dec
add
add
and
pusha
add
add
mov
scas
xchg
ret
rcrl
pop
or
add
add
mov
mov
pop
pop
mov
imul
fs
cmpsb
jo
add
pop
fcoms
adc
xor
add
add
scas
notl
imul
inc
call
add
add
add
bound
inc
mov
sbb
mov
mov
pop
jo
jno
mov
xchg
mov
and
loopne
pop
lds
adc
mov
jno
sbb
add
add
les
lds
add
add
filds
dec
adc
in
lcall
dec
mov
fstpl
xor
cmp
aad
push
mov
xchg
pop
pop
sbb
aam
add
add
xchg
pushf
jge
pop
mov
mov
sahf
sub
add
add
push
dec
cld
jmp
add
add
cmp
sub
jl
int
rolb
mov
add
xchg
loopne
mov
fildll
add
jnp
js
inc
pop
aas
in
xor
push
mov
imul
andb
fisttps
xor
mov
stos
add
add
cmpsb
das
enter
dec
sar
mov
mov
xor
sbb
mov
mov
add
add
add
xchg
fsubs
add
add
add
xor
push
fisttps
jne
add
adc
mov
jecxz
lret
push
mov
out
adc
push
push
fists
test
test
xchg
sbb
cmp
sbb
add
in
or
add
add
add
mov
roll
inc
scas
scas
sbb
sbb
mov
add
add
dec
clc
xchg
sub
popa
mov
mov
clc
mov
add
add
sub
add
add
dec
mov
fcmovu
push
push
fnstsw
je
pop
fldl
fbld
add
add
ljmp
add
iret
push
pop
adc
iret
sub
jge
push
int3
pushf
notb
or
lea
dec
add
add
mov
mov
pop
xor
add
add
mov
mov
sahf
mov
xchg
add
add
add
pop
outsb
sahf
jbe
mov
fwait
xor
call
shlb
rorl
add
add
xor
jbe
sub
add
add
cwtl
ja
mov
mov
mov
push
xchg
cmp
add
push
fbstp
fsubrl
bnd
add
add
xchg
dec
cltd
xchg
subl
loop
dec
call
cmpsl
sub
add
add
and
add
add
xchg
scas
lods
daa
daa
sub
pop
xchg
lock
les
shrb
imull
cmc
out
bound
and
sbb
int3
push
pushf
mov
add
sti
jl
inc
sub
add
add
lret
mov
add
add
push
jo
das
sub
add
add
jae
pop
test
jl
sub
lret
aad
scas
ja
push
pop
test
rolb
add
pop
push
mov
add
add
add
ret
in
sub
add
add
daa
ja
leave
in
mov
sbbl
lea
shl
or
cmp
mov
ss
js
test
inc
add
add
xchg
cmp
add
aam
fwait
or
add
add
mov
add
fidivrs
mov
lock
pop
dec
aaa
pop
mov
inc
and
add
dec
cmpsl
fdivs
add
xor
pcmpgtd
add
dec
jns
mov
adc
inc
cmpsb
lret
xchg
cmpsl
inc
xor
test
negb
xor
mov
sub
jge
add
mov
push
rcrl
scas
or
es
push
enter
push
mov
int3
or
add
add
jg
cmp
and
std
insb
add
add
lcall
jle
imul
test
dec
andb
add
nop
jmp
dec
out
mov
xchg
cmp
xchg
dec
es
mov
jg
add
add
xchg
cmp
pusha
mov
clc
and
jns
mov
add
mov
xor
repz
adc
add
lea
gs
push
jecxz
stos
mov
lahf
test
add
add
repz
add
add
pop
ret
add
add
cmpl
xor
add
add
add
add
add
fs
es
repz
sbb
add
add
clc
mov
adc
add
add
sbb
sbb
aad
dec
mov
push
iret
in
sub
hlt
repz
test
adc
pop
adc
jne
add
add
add
add
add
shlb
xchg
mov
add
add
add
mov
add
add
pop
adc
mov
mov
add
out
test
outsb
inc
mov
mov
jnp
and
aas
xchg
stos
fcoml
mov
add
add
jl
repnz
mov
push
mov
shrl
jge
mov
lods
sub
add
add
lds
adc
mov
sub
add
add
lahf
inc
out
mov
addr16
gs
mov
lods
enter
mov
cltd
mov
add
add
and
sarl
jmp
sti
shl
jmp
jp
cli
out
or
jmp
add
sub
push
sbb
sti
xchg
mov
aam
add
add
jmp
sub
add
add
in
push
sbb
cmp
hlt
orb
mov
int
jp
jg
aas
push
xchg
xchg
aam
ret
nop
rcl
lds
negl
xchg
outsl
mov
mov
mov
in
mov
call
outsl
xchg
call
mov
mov
and
jnp
jo
mov
add
add
xor
idivb
sbb
adc
sub
pop
or
and
add
add
loop
loop
cmp
mov
sbb
out
add
push
sub
call
add
adc
and
xchg
mov
mov
push
push
call
dec
add
add
in
pop
das
xchg
add
outsl
stc
cs
fnstcw
add
mov
jnp
pop
add
add
add
add
add
add
ret
fdivs
jno
or
jnp
sub
or
pop
push
inc
cmp
add
push
sub
outsb
out
inc
mov
ja
enter
addr16
jnp
push
inc
cmp
leave
fisubl
xlat
jae
mov
dec
fisttps
cmc
adc
arpl
in
fmuls
sub
add
add
xchg
nop
popf
rorb
add
add
in
movsb
imul
les
cmp
lods
pop
or
pop
sub
in
pusha
add
add
stos
dec
pop
addb
add
add
jge
leave
rcl
enter
push
mov
sub
add
push
out
cli
mov
add
add
add
jno
cmpsl
je
xchg
test
mov
adc
pop
dec
in
imul
aaa
pop
hlt
testl
sbb
mov
fistpll
negb
outsb
imul
xor
cmpsl
rcll
add
add
js
sub
add
add
and
xchg
add
sub
sbb
mov
cwtl
jb
xorb
mov
inc
jg
dec
mov
jo
cmpl
and
add
add
shll
sub
test
jno
jb
inc
add
add
lret
xor
sbb
cmp
jecxz
clc
xor
out
in
aad
mov
pop
mov
ficoml
fildll
stc
adc
inc
xor
loop
fcmovnbe
push
icebp
push
sbb
xchg
sub
cli
ficompl
aad
fxch
adc
add
add
lret
sbb
jge
cs
jp
jae
jmp
dec
cld
aam
iret
dec
push
les
pop
mov
mov
cmp
repnz
add
jnp
cvtdq2ps
and
add
add
xchg
int
enter
add
cmc
and
js
mov
inc
dec
arpl
and
add
add
add
fistps
xchg
pop
adc
gs
popf
push
or
pop
jb
jb
dec
or
inc
cs
stos
jl
add
add
and
pop
add
add
mov
push
push
pop
bound
cmp
movq
inc
mov
sub
shll
add
mov
add
xchg
xchg
and
add
add
dec
cmp
roll
mov
cmp
add
add
add
sub
add
add
inc
add
add
mov
scas
jb
pop
mov
add
add
in
jle
push
mov
ret
sbb
add
add
cmp
mov
int3
loop
add
add
mov
cld
pop
adc
push
add
add
popa
pop
pop
test
jl
mov
add
add
pop
cmc
and
add
add
jecxz
sub
add
pmaxub
sbb
clc
fimull
add
add
hlt
inc
xor
iret
jmp
flds
das
push
xchg
add
add
or
add
mov
clc
jne
aaa
mov
push
mulps
out
sub
inc
add
add
jae
push
js
imul
push
xchg
pop
pop
in
stos
jo
mov
daa
mov
xlat
dec
scas
cmpsl
push
addr16
cli
fstp
mov
fcmovbe
add
in
ficomps
cmpb
add
add
enter
inc
es
push
inc
mov
dec
mov
divl
scas
addr16
jnp
xchg
pop
pusha
mov
add
jp
add
mov
inc
dec
xchg
fistps
adc
mov
ljmpw
iret
or
mov
mov
insl
mov
jo
outsl
pop
sub
mov
sub
out
ficompl
cld
pop
je
xor
mov
push
sbb
adc
cmc
fstl
add
insl
push
enter
jbe
inc
mov
push
dec
sbb
mov
adc
push
mov
xchg
xor
add
dec
je
jecxz
lret
pop
inc
dec
cmp
adc
pop
imul
jno
ds
add
add
mov
add
add
mov
inc
mov
mov
ret
subl
dec
mov
push
pop
ss
stos
dec
add
add
outsb
xorb
test
add
add
icebp
sbb
cmpl
stos
stos
ds
cmp
pop
aad
test
arpl
stos
inc
repnz
mov
add
add
leave
dec
das
rcrb
push
hlt
nop
xchg
dec
mov
mov
mov
mov
add
dec
add
add
push
in
add
add
flds
add
cmp
adc
add
add
data16
or
push
stos
lds
add
outsl
xor
cwtl
xchg
pop
imul
filds
sarl
je
sub
loopne
xchg
movsl
mov
jnp
ret
add
add
pop
es
xor
ds
lahf
sbb
sbb
sbb
push
inc
test
add
add
add
test
clc
je
mov
mov
mov
mov
dec
mov
movsb
stc
inc
mov
add
add
mov
mov
ret
mov
add
mov
sub
jno
cmp
xchg
ret
fsubl
mov
sbb
dec
popa
ljmp
mov
aaa
xchg
out
cwtl
out
stos
jp
xchg
mov
je
cmp
rcl
or
add
add
rcrl
out
mov
cs
lret
mov
lea
mov
sti
loop
mov
inc
fxam
cmpsl
and
mov
adc
or
add
add
sbb
sahf
xor
mov
lods
pushf
pushf
jg
jns
and
movsb
fcoml
mov
mov
add
mov
sbb
mov
add
add
or
in
xor
and
push
mov
ljmp
rcr
scas
sbb
mov
add
test
add
add
cs
mov
mov
xchg
clc
mov
add
push
clc
repnz
nop
nop
jae
xchg
lock
pop
sbb
cmp
ret
add
add
sub
clc
repnz
nop
nop
jae
xchg
add
les
movsb
in
clc
repnz
nop
nop
jae
add
dec
sbb
add
dec
add
clc
repnz
nop
nop
jae
add
add
addr16
js
mov
mov
nop
push
mov
leave
nop
jmp
add
dec
aad
add
add
clc
repnz
nop
nop
jae
mov
cmpsb
lock
repnz
nop
nop
jae
ss
mov
rcll
add
push
lahf
mov
xchg
ret
add
cmc
out
add
and
jne
clc
repnz
nop
nop
jae
add
add
pusha
lods
add
call
clc
repnz
nop
nop
jae
and
mov
add
lock
repnz
nop
nop
jae
push
add
gs
add
jnp
rclb
jmp
sahf
sbb
mov
add
arpl
add
adc
sti
nop
push
mov
leave
nop
jmp
cmp
ret
add
add
push
pop
clc
repnz
nop
nop
jae
pop
add
add
sbb
in
jl
add
pop
push
mov
xchg
ret
add
out
add
add
add
jge
mov
add
push
mov
leave
nop
jmp
out
ret
add
jmp
nop
push
mov
leave
nop
jmp
add
add
add
add
add
add
add
xor
nop
nop
jae
add
add
addr16
movzwl
clc
repnz
nop
nop
jae
ret
pusha
add
mov
add
push
mov
add
clc
repnz
nop
nop
jae
add
add
pop
push
add
pop
sub
inc
xor
nop
push
mov
leave
nop
jmp
les
add
sbb
add
fistl
mov
xchg
ret
add
add
sahf
pop
lock
les
pop
mov
mov
xchg
ret
pop
add
sbb
aam
mov
add
jne
clc
repnz
nop
nop
jae
jecxz
cmp
add
ud0
clc
repnz
nop
nop
jae
push
add
addr16
fsubrs
add
add
clc
repnz
nop
nop
jae
add
lock
lcall
repnz
nop
nop
jae
add
add
add
add
add
ss
cld
nop
nop
jae
clc
inc
add
add
add
sbb
dec
mov
xchg
ret
add
dec
add
ss
mov
cmp
ret
add
add
add
adcb
in
add
icebp
adc
add
incl
sbb
nop
add
fiadds
add
lods
clc
repnz
nop
nop
jae
daa
xchg
add
pusha
gs
dec
movsl
call
push
mov
xchg
ret
pop
dec
add
add
addb
mov
push
rclb
inc
add
add
in
jmp
sbb
hlt
ror
jne
rolb
repnz
nop
nop
jae
ret
dec
sbb
pop
mov
add
xchg
push
fistpl
clc
repnz
nop
nop
jae
jecxz
add
in
add
cli
nop
push
mov
leave
nop
jmp
andb
pusha
add
push
mov
xchg
ret
add
aam
out
add
dec
sbb
add
int
clc
repnz
nop
nop
jae
aam
add
lock
cs
rorl
mov
xchg
ret
add
add
add
dec
sub
mov
cmp
ret
movsb
add
pusha
lahf
xorl
imul
clc
repnz
nop
nop
jae
sub
movsb
pop
add
add
sahf
add
mov
clc
repnz
nop
nop
jae
in
aad
add
sub
nop
push
mov
leave
nop
jmp
add
pop
inc
sbb
addb
addr16
addr16
push
mov
xchg
ret
add
mov
ss
add
dec
pusha
clc
repnz
nop
nop
jae
lahf
in
add
movsb
add
push
xor
push
mov
xchg
ret
mov
xchg
cmpb
add
add
add
cmp
cld
nop
nop
jae
sahf
lock
add
add
subb
in
leave
nop
jmp
aad
jecxz
add
add
add
ss
sbb
repnz
nop
nop
jae
lahf
sub
add
je
push
clc
repnz
nop
nop
jae
add
add
sbb
add
adc
fld1
nop
push
mov
leave
nop
jmp
mov
jno
add
pop
sahf
outsl
mov
clc
repnz
nop
nop
jae
cmp
les
sub
pop
add
repnz
nop
nop
jae
mov
in
add
pop
cmp
push
clc
repnz
nop
nop
jae
addb
addr16
add
push
push
mov
xchg
ret
push
xor
add
je
mov
add
add
outsb
inc
or
add
add
jle
mov
nop
push
mov
leave
nop
jmp
add
add
incl
sahf
add
add
and
add
repnz
mov
add
clc
repnz
nop
nop
jae
add
lock
push
push
mov
xchg
ret
add
push
jl
add
sub
sbb
push
mov
nop
push
mov
leave
nop
jmp
roll
add
cmpsb
add
xor
out
pop
sub
mov
leave
nop
jmp
add
add
add
add
fistpl
push
mov
xchg
ret
xchg
cmp
add
incl
pop
aad
popl
cld
nop
nop
jae
add
add
in
add
add
mov
sti
add
add
nop
push
mov
leave
nop
jmp
add
add
mov
push
mov
xchg
ret
sbb
add
add
add
add
cmp
adc
add
nop
push
mov
leave
nop
jmp
add
add
push
add
movsb
clc
add
add
add
clc
repnz
nop
nop
jae
add
cmp
dec
dec
add
sahf
xchg
nop
push
mov
leave
nop
jmp
pop
add
add
add
addl
push
mov
xchg
ret
dec
add
add
add
in
jl
fistpl
push
mov
xchg
ret
sbb
lahf
pop
sub
pop
xor
test
push
mov
xchg
ret
add
add
movsb
add
add
inc
and
clc
repnz
nop
nop
jae
lods
push
mov
movsb
in
sbb
in
leave
nop
jmp
in
cmp
sbb
mov
inc
popa
fistpl
clc
repnz
nop
nop
jae
add
cmpsb
addr16
and
imul
clc
repnz
nop
nop
jae
add
daa
cmc
addr16
add
pop
mov
dec
push
mov
xchg
ret
add
aam
add
lods
dec
mov
das
add
clc
repnz
nop
nop
jae
add
add
pusha
in
rol
push
pop
call
nop
push
mov
leave
nop
jmp
add
xchg
add
out
movsb
clc
rol
ljmp
nop
jae
je
aam
aam
add
lock
push
popf
add
clc
repnz
nop
nop
jae
jecxz
je
add
std
add
cmc
mov
clc
repnz
nop
nop
jae
add
add
add
add
mov
sahf
cltd
push
clc
repnz
nop
nop
jae
add
add
add
add
ss
inc
and
push
mov
leave
nop
jmp
add
std
shrl
sbbb
clc
repnz
nop
nop
jae
pop
cmp
addb
add
jns
cmpl
nop
jmp
add
add
mov
nop
push
mov
leave
nop
jmp
add
xchg
add
mov
jg
xor
nop
pop
sub
repnz
nop
nop
jae
in
les
les
push
mov
xchg
ret
add
add
mov
add
pusha
sahf
sbb
nop
jae
lods
and
add
lahf
cmp
mov
clc
repnz
nop
nop
jae
add
add
je
add
mov
mov
in
je
cmp
imul
pop
fiaddl
jl
imul
add
jo
mov
clc
repnz
nop
nop
jae
lahf
mov
pop
mov
xchg
and
push
mov
xchg
ret
add
add
lock
decl
sti
clc
repnz
nop
nop
jae
push
add
add
add
add
push
call
clc
repnz
nop
nop
jae
rcl
add
aam
add
sahf
xor
push
mov
xchg
ret
pop
add
add
mov
sbb
clc
repnz
nop
nop
jae
dec
adc
add
lahf
mov
clc
repnz
nop
nop
jae
jno
cmpsb
sub
movsb
les
repnz
nop
nop
jae
out
add
xor
add
in
add
add
sarl
clc
repnz
nop
nop
jae
pop
ret
les
jecxz
add
inc
fld1
push
mov
xchg
ret
xor
sub
sub
enter
in
sbb
clc
repnz
nop
nop
jae
add
add
sub
pop
clc
add
aas
shr
clc
repnz
nop
nop
jae
sbb
add
add
les
mov
addb
cmp
ret
jecxz
mov
and
add
inc
push
testl
xchg
ret
lock
sahf
arpl
clc
mov
mov
repnz
nop
nop
jae
add
push
add
not
clc
repnz
nop
nop
jae
rol
clc
add
inc
daa
sbb
lcall
inc
add
add
mov
add
xor
faddl
insl
inc
add
lods
addr16
jecxz
mov
movsb
add
add
add
clc
repnz
nop
nop
jae
add
adc
adc
addr16
nop
push
mov
leave
nop
jmp
add
inc
mov
call
add
in
add
clc
repnz
nop
nop
jae
and
add
add
std
jmp
repnz
nop
nop
jae
arpl
out
cmp
daa
add
iret
mov
clc
repnz
nop
nop
jae
add
aam
add
sub
add
cmp
lahf
add
add
add
add
add
dec
scas
mov
push
mov
xchg
ret
adc
sahf
addl
push
cmp
pop
fwait
nop
push
mov
leave
nop
jmp
add
std
mov
add
in
push
out
push
pop
xchg
sti
je
nop
push
mov
leave
nop
jmp
add
sbb
add
stos
clc
repnz
nop
nop
jae
add
add
cmp
sbb
add
push
mov
xchg
ret
sbb
add
les
subb
inc
add
add
dec
push
add
add
clc
repnz
nop
nop
jae
add
add
les
and
add
clc
repnz
nop
nop
jae
xchg
inc
add
add
mov
cmp
repz
mov
xchg
ret
add
and
add
lahf
add
push
fistpl
push
mov
xchg
ret
sahf
mov
sbb
les
jno
ret
in
mov
clc
repnz
nop
nop
jae
pop
add
lock
mov
add
add
jno
test
clc
repnz
nop
nop
jae
pop
lock
add
add
mov
xchg
ret
mov
add
add
inc
push
clc
repnz
nop
nop
jae
cmp
les
pop
add
add
std
adc
clc
repnz
nop
nop
jae
pop
les
sbb
jl
mov
add
lock
lea
push
mov
xchg
ret
sahf
add
lock
push
xchg
fld1
push
mov
xchg
ret
pop
add
lock
ret
sbb
add
loopne
repnz
nop
nop
jae
add
aad
add
bound
xlat
ret
clc
repnz
nop
nop
jae
lock
mov
add
push
inc
mov
add
push
mov
xchg
ret
addr16
lock
add
add
add
add
repnz
nop
nop
jae
addr16
jmp
test
push
mov
xchg
ret
mov
lock
add
add
pusha
sbb
add
fwait
jne
clc
repnz
nop
nop
jae
add
cmp
mov
push
mov
xchg
ret
cmp
add
add
adc
in
leave
nop
jmp
add
add
sbb
adc
sbb
push
push
clc
repnz
nop
nop
jae
cmp
sbb
add
xor
add
add
clc
repnz
nop
nop
jae
add
dec
add
push
mov
clc
repnz
nop
nop
jae
add
daa
addb
jl
xchg
arpl
mov
mov
xchg
ret
add
add
xchg
out
mov
push
in
lds
add
or
mov
add
add
ja
test
push
mov
leave
nop
jmp
add
add
add
inc
jae
inc
and
repnz
nop
nop
jae
ret
add
add
add
test
xchg
ret
gs
add
add
lahf
and
cld
nop
nop
jae
lock
add
arpl
in
imul
push
add
xor
add
add
fisttpll
nop
nop
jae
in
jecxz
ss
lahf
aam
add
push
nop
push
mov
leave
nop
jmp
add
add
movsb
add
add
aam
add
push
mov
xchg
ret
add
add
pusha
add
daa
std
add
mov
int
lret
clc
repnz
nop
nop
jae
xchg
add
add
shrl
data16
clc
repnz
nop
nop
jae
addr16
add
add
mov
outsb
icebp
clc
repnz
nop
nop
jae
lock
dec
jmp
inc
jmp
sahf
addl
mov
dec
xor
xchg
add
add
test
add
daa
push
clc
repnz
nop
nop
jae
add
mov
std
sub
sahf
mov
dec
cmp
repnz
nop
nop
jae
add
jl
adc
lock
add
dec
mov
mov
movzwl
clc
repnz
nop
nop
jae
jmp
add
add
lahf
subl
clc
repnz
nop
nop
jae
arpl
roll
add
clc
repnz
nop
nop
jae
add
add
xchg
movsb
les
add
inc
push
clc
repnz
nop
nop
jae
add
daa
add
movl
clc
repnz
nop
nop
jae
push
arpl
cmpsb
add
add
sti
imul
clc
repnz
nop
nop
jae
add
dec
add
add
clc
shll
pop
clc
repnz
nop
nop
jae
jno
add
add
addl
push
push
mov
xchg
ret
add
movsb
add
xchg
gs
sbb
cld
nop
nop
jae
cmpsb
cmp
andb
pop
clc
repnz
nop
nop
jae
add
std
clc
add
arpl
pop
cmp
push
mov
xchg
ret
add
add
dec
add
lock
nop
push
mov
leave
nop
jmp
out
std
add
arpl
add
andb
add
push
mov
xchg
ret
addr16
xchg
in
mov
and
add
repnz
nop
nop
jae
add
add
add
cmp
nop
push
mov
leave
nop
jmp
mov
daa
rcll
mov
pushl
push
mov
xchg
ret
lock
add
add
addr16
or
push
mov
leave
nop
jmp
add
add
add
cmc
sub
insb
add
add
data16
xor
push
mov
xchg
ret
adc
sahf
pusha
add
add
add
repnz
nop
nop
jae
add
std
add
inc
add
sahf
and
mov
xchg
ret
add
add
add
std
add
ret
clc
repnz
nop
nop
jae
adc
pop
cmp
dec
add
push
pop
push
mov
xchg
ret
cmp
add
pop
roll
lock
add
lock
stos
clc
repnz
nop
nop
jae
in
gs
jno
add
nop
nop
jae
clc
add
add
add
push
lods
sti
push
clc
repnz
nop
nop
jae
lahf
push
daa
mov
sub
jge
add
mov
ss
mov
add
clc
repnz
nop
nop
jae
add
add
add
add
in
jo
jmp
cmpl
mov
leave
nop
jmp
add
xchg
lock
scas
mov
clc
repnz
nop
nop
jae
mov
add
rep
nop
push
mov
leave
nop
jmp
mov
jl
add
push
ret
pop
add
ja
fwait
adc
add
andl
add
sbb
adc
andl
nop
nop
jae
add
mov
popf
push
push
mov
xchg
ret
daa
add
jl
dec
add
add
lods
add
dec
dec
mov
nop
push
mov
leave
nop
jmp
jl
pusha
lock
add
arpl
clc
repnz
nop
nop
jae
xor
add
push
push
mov
xchg
ret
pop
arpl
sub
add
jmp
pop
xor
nop
push
mov
leave
nop
jmp
dec
aad
add
add
push
lea
clc
repnz
nop
nop
jae
and
push
icebp
add
clc
repnz
nop
nop
jae
add
sbb
aad
in
lahf
mov
clc
repnz
nop
nop
jae
addr16
cmp
out
inc
sahf
push
rep
clc
repnz
nop
nop
jae
mov
add
in
add
add
xor
jne
clc
repnz
nop
nop
jae
addr16
cmc
jl
ljmp
jmp
inc
adc
push
mov
leave
nop
jmp
movl
add
sbb
sbb
nop
nop
jae
dec
pop
add
add
arpl
jmp
jmp
in
leave
nop
jmp
add
xor
add
cmp
add
add
add
out
add
incl
nop
push
mov
leave
nop
jmp
add
sahf
sarl
jmp
clc
repnz
nop
nop
jae
sbb
add
add
cmpsb
add
mov
push
mov
xchg
ret
pop
shll
lock
add
mov
clc
repnz
nop
nop
jae
add
add
jl
add
pop
mov
clc
repnz
nop
nop
jae
shr
mov
out
call
clc
repnz
nop
nop
jae
pusha
clc
je
and
les
aad
test
adc
add
repnz
nop
nop
jae
les
xor
add
cld
xchg
mov
xchg
ret
add
add
add
add
cmc
add
xchg
push
outsl
mov
clc
repnz
nop
nop
jae
adcb
out
add
mov
add
mov
mov
xchg
ret
add
sahf
add
add
add
xchg
mov
add
add
cld
nop
nop
jae
jl
add
add
add
add
clc
repnz
nop
nop
jae
and
add
add
sbb
enter
repnz
nop
nop
jae
mov
pop
add
out
mov
mov
clc
repnz
nop
nop
jae
add
lock
add
jno
xor
clc
repnz
nop
nop
jae
pusha
add
and
jno
add
je
nop
push
mov
leave
nop
jmp
add
add
mov
sbb
stos
int
icebp
clc
repnz
nop
nop
jae
dec
add
lods
dec
add
add
jmp
push
add
ret
add
les
cmc
add
add
andb
push
clc
repnz
nop
nop
jae
adcl
lock
or
mov
cld
nop
nop
jae
add
addl
flds
cld
nop
nop
jae
std
add
lock
addb
jae
pop
adc
nop
jmp
movsb
cmpsb
add
mov
add
adc
clc
repnz
nop
nop
jae
add
add
add
add
clc
repnz
nop
nop
jae
addl
mov
in
jl
add
mov
sbb
add
add
mov
clc
repnz
nop
nop
jae
add
add
jl
dec
sbbl
inc
mov
scas
cwtl
mov
nop
nop
jae
add
lahf
add
addb
mov
add
stc
fld1
push
mov
xchg
ret
jl
addb
incl
add
add
push
mov
xchg
ret
add
dec
dec
add
add
sbb
mov
loopne
xchg
js
into
rcrl
push
mov
leave
nop
jmp
cmpsb
add
aad
add
add
fisttps
nop
nop
jae
xchg
movsb
cmp
add
pop
lods
out
fstl
repnz
nop
nop
jae
lock
inc
push
xor
adc
add
or
cmpsl
push
add
add
add
add
mov
lods
mov
nop
push
mov
leave
nop
jmp
adcb
std
jmp
add
cmp
nop
nop
jae
in
add
add
sbb
add
add
cld
nop
nop
jae
add
movsb
add
add
add
add
pusha
and
repnz
nop
nop
jae
jno
pop
add
add
inc
movsb
cmc
add
push
nop
push
mov
leave
nop
jmp
add
out
in
add
add
mov
push
mov
xchg
ret
add
lock
aad
mov
add
clc
repnz
nop
nop
jae
add
aad
push
ret
call
mov
nop
push
mov
leave
nop
jmp
adc
in
add
lcall
inc
add
mov
mov
movl
ret
add
add
clc
repnz
nop
nop
jae
add
daa
add
mov
add
arpl
in
scas
roll
add
out
add
push
inc
stos
sub
dec
add
gs
clc
repnz
nop
nop
jae
add
add
ret
push
clc
repnz
nop
nop
jae
add
mov
inc
mov
add
es
negb
cwtl
shll
add
push
mov
xchg
ret
mov
add
in
xchg
mov
clc
repnz
nop
nop
jae
rcll
add
add
testl
nop
push
mov
leave
nop
jmp
roll
sahf
add
adcl
sbb
add
add
insl
and
jge
add
jo
movsl
push
clc
repnz
nop
nop
jae
xor
add
pop
add
sbb
or
repz
clc
repnz
nop
nop
jae
orb
cmc
rorl
mov
xchg
ret
ret
add
add
ss
mov
push
mov
xchg
ret
cmc
jl
pop
clc
sahf
aam
add
lock
loopne
push
mov
xchg
ret
arpl
add
add
clc
stc
mov
clc
repnz
nop
nop
jae
aad
pop
add
add
pop
ret
nop
push
mov
leave
nop
jmp
add
add
add
je
aad
adc
cld
nop
nop
jae
daa
xchg
add
daa
add
add
outsl
pop
push
mov
xchg
ret
jl
cmp
add
daa
add
dec
cmp
movsb
adc
mov
idiv
repnz
nop
nop
jae
add
add
jecxz
daa
or
cld
nop
nop
jae
dec
add
inc
add
pop
lahf
lock
mov
nop
nop
jae
clc
in
pop
lahf
addr16
sahf
aad
cmc
sbb
mov
clc
repnz
nop
nop
jae
addr16
add
add
lods
les
pop
add
incl
add
repnz
nop
nop
jae
addl
add
test
add
clc
repnz
nop
nop
jae
dec
add
add
sbb
add
mov
push
nop
push
mov
leave
nop
jmp
add
movsb
stc
mov
clc
repnz
nop
nop
jae
add
lock
add
adc
cmpb
clc
repnz
nop
nop
jae
sbb
add
cmp
in
call
nop
push
mov
leave
nop
jmp
aam
xor
arpl
adc
add
inc
jmp
add
outsl
out
mov
jp
std
mov
clc
repnz
nop
nop
jae
xor
add
add
sbb
imul
std
add
add
add
jp
push
push
mov
xchg
ret
andl
cmpsb
add
push
clc
repnz
nop
nop
jae
mov
dec
dec
add
add
add
pop
xor
clc
repnz
nop
nop
jae
add
pop
cmpsb
add
sar
repnz
nop
nop
jae
add
lods
add
add
add
cmp
test
add
clc
repnz
nop
nop
jae
add
sahf
add
add
gs
repnz
nop
nop
jae
add
add
xor
nop
jae
sbb
pop
lock
add
add
add
xlat
mov
clc
repnz
nop
nop
jae
addr16
add
arpl
ljmp
nop
nop
jae
add
inc
add
mov
add
push
sbb
nop
nop
jae
xor
add
sbb
add
pop
add
dec
cmp
repnz
nop
nop
jae
jmp
add
mov
pop
outsb
mov
call
clc
repnz
nop
nop
jae
add
mov
push
mov
xchg
ret
add
cmpsb
mov
cmc
add
jmp
clc
repnz
nop
nop
jae
jno
add
add
add
clc
add
and
nop
push
mov
leave
nop
jmp
addr16
add
add
andl
aas
adc
nop
jmp
add
add
lahf
sahf
add
clc
test
pop
add
mov
add
out
jae
rorb
pusha
clc
repnz
nop
nop
jae
in
addb
mov
adc
push
mov
xchg
ret
add
lahf
pusha
mov
add
aam
adc
jne
clc
repnz
nop
nop
jae
add
add
add
ljmp
nop
jae
add
addr16
in
cmp
cmpsb
xor
inc
clc
repnz
nop
nop
jae
clc
mov
add
jle
pop
push
mov
xchg
ret
in
xchg
add
addl
dec
sbb
ja
test
sbb
add
nop
jmp
add
add
arpl
push
mov
leave
nop
jmp
add
cmp
adcl
repnz
nop
nop
jae
sahf
add
std
lcall
adc
pop
stos
push
mov
xchg
ret
rcl
pop
in
cmp
aam
popa
clc
repnz
nop
nop
jae
add
mov
addr16
pop
mov
pop
clc
repnz
nop
nop
jae
xchg
mov
add
add
lock
jp
jbe
clc
repnz
nop
nop
jae
mov
sub
fisttpll
nop
nop
jae
add
out
sahf
jmp
pop
xchg
inc
add
clc
repnz
nop
nop
jae
add
add
jecxz
sbb
add
cld
nop
nop
jae
lock
dec
add
add
push
nop
push
mov
leave
nop
jmp
add
mov
clc
cmpsb
xchg
jbe
bound
repz
repnz
nop
nop
jae
lock
add
add
sbb
push
xor
nop
nop
jae
dec
std
add
pusha
add
jl
fld1
clc
repnz
nop
nop
jae
lock
mov
sbb
mov
mov
clc
repnz
nop
nop
jae
xchg
add
mov
fwait
push
mov
xchg
ret
add
add
in
add
out
fmulp
sub
clc
repnz
nop
nop
jae
mov
add
addb
and
roll
push
mov
leave
nop
jmp
jmp
mov
lods
add
pop
inc
add
sub
add
mov
add
aaa
push
clc
repnz
nop
nop
jae
add
add
jae
clc
repnz
nop
nop
jae
sbb
add
jno
add
les
cmp
push
mov
leave
nop
jmp
add
out
add
add
dec
add
cmp
repnz
nop
nop
jae
sbbl
pop
push
mov
insb
mov
add
xchg
test
and
in
add
add
dec
enter
test
add
clc
repnz
nop
nop
jae
add
add
addr16
js
mov
mov
clc
repnz
nop
nop
jae
pop
addr16
gs
pop
clc
repnz
nop
nop
jae
add
lock
lock
daa
in
clc
inc
popa
nop
push
mov
leave
nop
jmp
ret
lahf
addb
cmc
dec
add
xchg
push
clc
repnz
nop
nop
jae
add
les
add
gs
clc
repnz
nop
nop
jae
add
mov
add
nop
add
push
mov
leave
nop
jmp
addl
add
add
repz
nop
push
mov
leave
nop
jmp
add
jmp
add
dec
push
enter
add
out
push
and
sbb
add
mov
sbb
push
push
mov
xchg
ret
add
add
push
sahf
aam
push
clc
repnz
nop
nop
jae
adc
add
sahf
mov
add
jmp
nop
nop
jae
add
mov
add
add
add
nop
push
mov
leave
nop
jmp
mov
add
add
push
mov
xchg
ret
addr16
add
add
cmc
add
mov
mov
xchg
ret
pop
ss
add
inc
xchg
add
push
push
mov
xchg
ret
add
addr16
push
add
mov
repnz
nop
nop
jae
add
cmp
sub
add
ss
mov
add
push
mov
xchg
ret
addb
lahf
lods
ret
sbb
mov
and
add
add
add
add
pop
clc
repnz
nop
nop
jae
and
lock
pop
pop
aam
add
add
pop
clc
repnz
nop
nop
jae
movsb
add
arpl
je
clc
add
add
adc
movsb
clc
repnz
nop
nop
jae
aad
lahf
add
xchg
add
add
iret
call
nop
push
mov
leave
nop
jmp
add
inc
add
add
add
inc
and
clc
repnz
nop
nop
jae
aad
addr16
cmp
fsubp
ja
jne
push
mov
xchg
ret
pop
jecxz
add
jcxz
addb
xchg
inc
add
je
mov
je
and
pop
test
mov
clc
repnz
nop
nop
jae
daa
add
add
sub
pop
dec
push
mov
call
xchg
add
or
mov
bnd
push
imul
adc
repnz
nop
nop
jae
mov
add
inc
add
add
add
in
leave
nop
jmp
add
cmpsb
sub
sub
jecxz
mov
add
add
ja
clc
repnz
nop
nop
jae
gs
aad
xchg
mulb
jb
add
in
dec
lods
add
add
jecxz
sbb
push
mov
xchg
ret
std
add
add
inc
add
and
clc
repnz
nop
nop
jae
dec
add
jecxz
add
mov
inc
add
add
add
add
addl
mov
add
repnz
nop
nop
jae
add
daa
mov
add
nop
push
mov
leave
nop
jmp
sub
aam
add
mov
push
mov
xchg
ret
add
xchg
jecxz
cmpsb
add
add
add
mov
xchg
ret
jl
pop
lahf
add
mov
pop
add
xchg
push
clc
repnz
nop
nop
jae
out
add
cmp
lods
xchg
daa
add
es
clc
repnz
nop
nop
jae
je
sbb
aam
dec
add
add
cld
nop
nop
jae
pusha
jno
mov
lock
add
repnz
nop
nop
jae
les
xchg
push
fsubs
clc
repnz
nop
nop
jae
in
add
add
xor
mov
xchg
adc
cld
nop
nop
jae
out
les
jmp
and
gs
clc
repnz
nop
nop
jae
cmc
addr16
add
sbb
cmp
add
add
and
cmpsb
add
mov
xchg
repnz
nop
nop
jae
lods
add
cmpsb
add
push
push
mov
xchg
ret
addr16
xchg
add
lock
mov
add
subb
in
cld
clc
repnz
nop
nop
jae
jmp
add
call
mov
xchg
ret
andl
add
out
add
jg
clc
repnz
nop
nop
jae
xor
push
lahf
adc
lahf
xor
clc
repnz
nop
nop
jae
add
add
aad
ret
mov
nop
push
mov
leave
nop
jmp
add
push
add
arpl
add
aam
int
add
nop
jmp
ret
je
les
add
add
ss
pop
mov
push
mov
xchg
ret
add
jno
out
add
jecxz
and
mov
nop
push
mov
leave
nop
jmp
jmp
aam
add
addr16
mov
and
mov
xchg
ret
add
out
add
add
lock
clc
repnz
nop
nop
jae
add
ret
add
mov
loopne
lcall
icebp
mov
nop
push
mov
leave
nop
jmp
add
addb
xor
pop
nop
push
mov
leave
nop
jmp
add
add
aam
xchg
mov
cld
nop
nop
jae
and
add
add
add
inc
add
xchg
repnz
nop
nop
jae
and
add
add
add
add
pusha
clc
repnz
nop
nop
jae
les
sahf
xor
addl
xor
add
push
mov
xchg
ret
lock
add
addb
inc
add
xchg
loopne
fimull
repnz
nop
nop
jae
dec
mov
add
addl
subl
nop
push
mov
leave
nop
jmp
mov
add
add
addr16
push
clc
repnz
nop
nop
jae
std
pusha
add
out
push
add
mov
clc
repnz
nop
nop
jae
add
pop
add
sub
test
nop
push
mov
leave
nop
jmp
pop
addr16
add
add
clc
repnz
nop
nop
jae
daa
add
les
mov
cmp
pop
aam
push
clc
repnz
nop
nop
jae
addr16
mov
aad
add
fdivrp
call
nop
jmp
push
add
pop
push
mov
xchg
ret
add
add
mov
addr16
outsl
inc
clc
repnz
nop
nop
jae
add
dec
jno
mov
call
nop
nop
jae
roll
add
add
add
clc
repnz
nop
nop
jae
add
jmp
add
aam
je
clc
repnz
nop
nop
jae
mov
clc
clc
add
cld
nop
nop
jae
decl
push
add
add
push
mov
xchg
ret
add
gs
add
movsb
je
cmc
inc
mov
push
clc
repnz
nop
nop
jae
add
add
xchg
shl
in
add
je
nop
push
mov
leave
nop
jmp
xor
add
lahf
add
hlt
js
or
add
add
cld
nop
nop
jae
add
add
add
add
je
lods
cmp
repnz
nop
nop
jae
pop
mov
aam
cmc
adc
push
push
mov
xchg
ret
sarl
add
add
add
add
mov
mov
fistpl
push
mov
xchg
ret
sub
add
movl
clc
repnz
nop
nop
jae
add
je
clc
add
add
pusha
jecxz
iret
mov
clc
repnz
nop
nop
jae
add
xchg
add
add
sbb
mov
add
movsb
sbb
pop
addb
and
add
or
clc
repnz
nop
nop
jae
add
movsb
add
pop
xor
dec
sbb
mov
xchg
ret
add
add
lahf
pop
jl
add
cld
nop
nop
jae
addr16
add
les
pop
rcl
dec
mov
roll
inc
add
mov
inc
add
je
incl
sub
mov
clc
repnz
nop
nop
jae
mov
add
add
adc
ljmp
nop
jae
add
addr16
rorl
repnz
nop
nop
jae
lock
add
add
add
xor
mov
leave
nop
jmp
inc
add
push
add
xor
xor
test
repnz
nop
nop
jae
add
pop
add
add
repnz
nop
nop
jae
add
pusha
dec
sbb
add
pop
pushl
cmp
nop
push
mov
leave
nop
jmp
add
add
incl
add
addl
add
les
addr16
add
add
gs
fsubr
mov
repnz
nop
nop
jae
jecxz
sbb
mov
add
add
jne
roll
mov
xchg
ret
add
ret
in
mov
fcompl
rcll
repnz
nop
nop
jae
add
add
lods
pop
add
add
shr
clc
repnz
nop
nop
jae
les
add
add
rclb
jnp
inc
add
sbb
clc
add
mov
mov
movsb
xchg
movsb
push
test
repnz
nop
nop
jae
add
add
add
add
or
add
add
jmp
add
and
gs
add
add
arpl
lahf
mov
mov
popl
cld
nop
nop
jae
add
dec
lock
push
lock
andb
clc
repnz
nop
nop
jae
add
cmpsb
std
mov
add
repnz
nop
nop
jae
lahf
roll
add
add
cmpsb
jg
push
mov
xchg
ret
add
jmp
lahf
add
lods
je
inc
dec
rolb
push
mov
xchg
ret
movl
add
xchg
add
sub
repnz
nop
nop
jae
lock
add
lret
jg
clc
repnz
nop
nop
jae
sahf
and
addb
rcrl
repnz
nop
nop
jae
add
mov
les
aad
ret
les
sub
mov
xchg
ret
mov
add
add
in
mov
in
leave
nop
jmp
cmp
push
add
sub
addb
cmp
ret
add
gs
add
push
mov
xchg
ret
add
je
add
lock
test
add
repnz
nop
nop
jae
add
lods
out
or
idiv
clc
repnz
nop
nop
jae
add
mov
and
add
pop
push
mov
xchg
ret
add
decl
add
pop
mov
clc
repnz
nop
nop
jae
add
add
gs
add
rcll
aaa
pop
clc
repnz
nop
nop
jae
in
add
add
add
mov
mov
push
push
mov
xchg
ret
add
add
add
pusha
add
inc
mov
pop
push
push
mov
xchg
ret
out
add
addr16
incl
aam
pushl
clc
repnz
nop
nop
jae
add
add
add
daa
cmc
or
add
add
aaa
mov
clc
repnz
nop
nop
jae
je
add
mov
add
xor
xor
push
mov
xchg
ret
xchg
add
sahf
xchg
add
mov
nop
push
mov
leave
nop
jmp
and
ret
add
cmpsb
add
and
sar
repnz
nop
nop
jae
add
cmp
mov
out
sbb
pop
push
mov
xchg
ret
add
std
std
add
add
movsb
add
add
and
and
add
ljmp
addr16
lock
push
mov
add
lods
cs
clc
repnz
nop
nop
jae
pop
add
add
add
inc
or
clc
repnz
nop
nop
jae
lock
add
add
xchg
push
mov
xchg
ret
lock
push
add
jl
xor
repnz
nop
nop
jae
xchg
mov
add
push
xchg
push
push
mov
xchg
ret
sbb
add
add
addr16
add
jecxz
pop
xor
push
mov
xchg
ret
add
add
mov
pusha
add
mov
aaa
push
mov
xchg
ret
clc
pop
pop
add
add
add
aam
push
mov
push
mov
xchg
ret
add
lock
cmpsb
cmpsb
cmc
add
add
cmp
mov
mov
xchg
ret
dec
jno
add
mov
xor
add
push
clc
repnz
nop
nop
jae
cmc
add
add
mov
add
mov
clc
repnz
nop
nop
jae
add
add
movl
cmc
clc
repnz
nop
nop
jae
addr16
push
add
pop
push
mov
xchg
ret
add
mov
roll
add
ret
clc
repnz
nop
nop
jae
lahf
arpl
dec
daa
pop
add
ret
add
add
nop
push
mov
leave
nop
jmp
add
cmc
add
add
add
jecxz
pop
clc
repnz
nop
nop
jae
add
add
mov
add
repnz
nop
nop
jae
jecxz
shl
arpl
add
add
ss
not
nop
push
mov
leave
nop
jmp
add
in
xchg
add
add
cmc
ret
call
nop
push
mov
leave
nop
jmp
add
add
mov
cmp
nop
push
mov
leave
nop
jmp
add
sbb
add
fidivrl
cmp
pop
inc
add
add
add
andb
add
jb
addl
insb
nop
push
mov
leave
nop
jmp
add
add
add
aam
fwait
clc
repnz
nop
nop
jae
add
add
les
add
repnz
nop
nop
jae
add
add
add
pop
sub
addr16
call
clc
repnz
nop
nop
jae
jmp
add
push
add
add
stos
clc
repnz
nop
nop
jae
add
add
add
sahf
add
add
add
bound
xlat
push
nop
push
mov
leave
nop
jmp
jno
in
cmp
add
clc
std
cmp
nop
push
mov
leave
nop
jmp
addl
add
push
nop
push
mov
leave
nop
jmp
and
addl
cmp
jne
clc
repnz
nop
nop
jae
push
add
rcll
add
nop
push
mov
leave
nop
jmp
sar
mov
add
add
lock
into
jae
jge
clc
repnz
nop
nop
jae
sbb
cmp
add
clc
add
pop
xchg
clc
repnz
nop
nop
jae
add
add
sub
mov
xchg
ret
cmp
in
les
ret
or
add
add
dec
cmp
repnz
nop
nop
jae
add
inc
gs
jmp
add
add
add
andb
movsb
add
les
lock
into
negb
inc
clc
repnz
nop
nop
jae
add
add
add
call
push
mov
leave
nop
jmp
add
roll
add
adc
mov
sub
push
mov
leave
nop
jmp
add
jecxz
jecxz
pop
aam
pusha
jmp
add
fistl
in
in
adc
add
add
add
add
add
jle
add
jbe
pop
xor
clc
repnz
nop
nop
jae
lock
dec
mov
add
js
push
mov
nop
push
mov
leave
nop
jmp
je
add
arpl
out
loope
jge
clc
repnz
nop
nop
jae
add
add
add
aad
add
xor
clc
repnz
nop
nop
jae
add
in
xor
add
push
add
clc
repnz
nop
nop
jae
mov
add
cmp
adc
loope
clc
repnz
nop
nop
jae
les
add
lahf
add
xchg
xchg
mov
clc
repnz
nop
nop
jae
daa
xchg
add
add
rcll
in
add
mov
stc
aaa
add
add
loop
mov
adc
mov
xchg
ret
add
pop
dec
and
sub
xor
mov
clc
repnz
nop
nop
jae
add
mov
add
add
add
jne
clc
repnz
nop
nop
jae
incl
push
in
add
sub
repnz
nop
nop
jae
in
ss
mov
add
add
add
repnz
nop
nop
jae
add
sbb
jmp
clc
repnz
nop
nop
jae
xor
add
in
push
stc
mov
nop
push
mov
leave
nop
jmp
sarl
add
pop
add
add
and
mov
leave
nop
jmp
cmp
movsb
and
aad
out
sbb
jbe
push
clc
repnz
nop
nop
jae
lods
addr16
sahf
pusha
add
add
repnz
nop
nop
jae
in
add
add
push
clc
repnz
nop
nop
jae
ss
les
cmc
sbb
add
ret
add
mov
clc
repnz
nop
nop
jae
jmp
add
clc
repnz
nop
nop
jae
arpl
add
sahf
shlb
movsl
mov
push
mov
xchg
ret
les
out
mov
arpl
add
add
repnz
nop
nop
jae
addb
mov
adc
push
add
clc
repnz
nop
nop
jae
add
pop
add
dec
add
incl
dec
add
add
add
xchg
jecxz
mov
push
lock
jecxz
mov
jmp
daa
mov
add
cmpsb
aad
dec
xchg
xchg
add
add
sbb
repnz
nop
nop
jae
add
sahf
add
xchg
clc
repnz
nop
nop
jae
addr16
sahf
movsb
add
sahf
add
jne
clc
repnz
nop
nop
jae
sub
mov
roll
mov
nop
push
mov
leave
nop
jmp
jecxz
add
sbb
add
xchg
adc
nop
nop
jae
arpl
add
add
je
add
addr16
mov
test
cld
nop
nop
jae
add
cmc
add
add
mov
nop
push
mov
leave
nop
jmp
addr16
pusha
les
aad
pop
mov
clc
repnz
nop
nop
jae
les
add
add
sbb
add
add
nop
nop
jae
add
cmp
sbb
add
jmp
sahf
xchg
inc
add
dec
les
arpl
add
push
push
mov
xchg
ret
and
cmpsb
add
add
add
fsubl
test
aam
clc
repnz
nop
nop
jae
pop
pusha
add
call
nop
push
mov
leave
nop
jmp
add
in
add
sahf
add
add
clc
repnz
nop
nop
jae
inc
add
sahf
cmpsb
add
push
add
push
jne
dec
add
mov
cmp
ret
add
add
les
add
adc
add
xor
clc
repnz
nop
nop
jae
add
add
arpl
xchg
pop
pop
clc
repnz
nop
nop
jae
jmp
add
ss
add
loopne
dec
push
mov
xchg
ret
les
mov
add
add
daa
sub
repnz
clc
repnz
nop
nop
jae
pusha
add
les
add
push
mov
xchg
ret
add
jecxz
jl
addl
add
clc
repnz
nop
nop
jae
lods
out
push
std
add
mov
clc
repnz
nop
nop
jae
adc
cmp
xchg
push
nop
push
mov
leave
nop
jmp
add
pop
add
sbb
cmp
repnz
nop
nop
jae
add
add
sahf
add
call
nop
push
mov
leave
nop
jmp
pusha
jecxz
sbb
and
mov
inc
loopne
mov
xchg
ret
add
xor
add
mov
add
add
fs
dec
clc
repnz
nop
nop
jae
add
aad
mov
and
notl
push
mov
xchg
ret
add
inc
sahf
orl
cmpl
add
nop
jmp
add
lods
add
les
repnz
nop
nop
jae
mov
add
std
lock
pop
push
mov
xchg
ret
add
lahf
add
lods
jno
add
mov
clc
repnz
nop
nop
jae
add
xchg
incl
in
lahf
add
cmc
inc
push
mov
xchg
ret
add
add
add
clc
add
add
lock
daa
push
clc
repnz
nop
nop
jae
add
add
xchg
add
mov
mov
inc
add
out
ret
add
dec
jecxz
cmp
repnz
nop
nop
jae
roll
sahf
lods
jecxz
les
add
add
push
clc
repnz
nop
nop
jae
jno
add
adc
add
push
rorl
add
std
clc
repnz
nop
nop
jae
add
add
add
cmp
repnz
nop
nop
jae
add
cmp
add
add
add
push
fld1
clc
repnz
nop
nop
jae
cmc
jl
je
in
add
adc
clc
repnz
nop
nop
jae
addr16
mov
sbb
loopne
inc
nop
push
mov
leave
nop
jmp
add
jno
push
sahf
andb
add
add
nop
push
mov
leave
nop
jmp
lock
add
add
add
lods
fucomip
out
add
add
in
in
add
add
lock
add
addb
cmpsb
mov
sbb
push
mov
xchg
ret
add
mov
add
out
add
add
clc
repnz
nop
nop
jae
push
cmpl
push
mov
xchg
ret
xchg
add
add
in
je
cmpsb
add
out
adc
test
push
mov
xchg
ret
add
cmc
jmp
cmp
add
test
mov
leave
nop
jmp
add
add
add
jmp
add
into
nop
lahf
mov
clc
repnz
nop
nop
jae
xchg
cmc
sub
inc
and
clc
repnz
nop
nop
jae
add
add
dec
add
add
jle
add
add
add
add
add
movl
push
mov
leave
nop
jmp
pusha
add
mov
incl
add
add
add
stos
pusha
inc
add
cmp
movsb
les
push
repnz
nop
nop
jae
incl
mov
add
add
cmc
add
clc
repnz
nop
nop
jae
sbb
cmp
pop
cmp
add
jno
jge
clc
repnz
nop
nop
jae
xor
add
add
fs
adc
push
mov
leave
nop
jmp
inc
gs
add
add
add
mov
add
add
leave
nop
jmp
add
in
add
add
push
adc
repnz
nop
nop
jae
add
jmp
add
insb
mov
xchg
call
clc
repnz
nop
nop
jae
aad
add
pop
add
mov
clc
repnz
nop
nop
jae
daa
xchg
add
pusha
je
jbe
notl
mov
xchg
ret
movsb
add
add
add
aam
incl
mov
call
nop
jae
add
mov
add
add
add
lahf
ds
movswl
nop
push
mov
leave
nop
jmp
cmp
daa
add
add
clc
repnz
nop
nop
jae
add
pop
add
add
aam
into
fs
fwait
clc
repnz
nop
nop
jae
add
add
lods
push
add
repnz
nop
nop
jae
add
add
add
add
in
je
fwait
nop
push
mov
leave
nop
jmp
add
add
add
adc
push
mov
leave
nop
jmp
sbb
in
sub
addr16
addb
lea
cld
nop
nop
jae
add
add
add
add
movsb
aas
mov
clc
repnz
nop
nop
jae
add
lock
lods
add
rol
fdivr
repnz
nop
nop
jae
arpl
ss
add
xchg
les
loopne
clc
repnz
nop
nop
jae
pop
les
pop
out
mov
fisttpll
cld
nop
nop
jae
add
mov
add
movsb
lahf
rep
clc
repnz
nop
nop
jae
jecxz
add
dec
xor
cmp
nop
push
mov
leave
nop
jmp
add
jecxz
add
add
add
loope
xor
add
nop
push
mov
leave
nop
jmp
mov
add
pop
stos
clc
repnz
nop
nop
jae
mov
add
add
add
in
shl
clc
repnz
nop
nop
jae
add
add
mov
adcb
sbb
push
mov
xchg
ret
sahf
xchg
arpl
add
add
jnp
nop
nop
jae
add
pop
add
add
sbb
lea
xchg
ret
add
xchg
add
add
addr16
add
cmp
mov
xchg
ret
mov
addr16
add
rol
out
aad
nop
push
mov
leave
nop
jmp
in
add
je
and
dec
arpl
test
repnz
nop
nop
jae
mov
movsb
add
add
jecxz
push
mov
nop
push
mov
leave
nop
jmp
mov
lods
dec
out
clc
add
add
sar
cld
nop
nop
jae
cmc
inc
push
lock
add
add
pop
inc
clc
repnz
nop
nop
jae
add
sbb
add
add
cld
push
push
mov
pop
add
std
inc
add
add
push
or
xchg
push
add
add
add
ss
std
add
push
mov
xchg
ret
gs
mov
add
add
add
xor
clc
repnz
nop
nop
jae
add
mov
loopne
repnz
nop
nop
jae
cmpsb
sbbl
lea
or
inc
add
add
add
add
add
mov
nop
jae
clc
add
inc
add
add
push
nop
push
mov
leave
nop
jmp
jl
ss
jmp
aad
add
add
add
repnz
nop
nop
jae
add
lods
add
add
mov
and
cld
nop
nop
jae
add
add
jl
mov
dec
shl
clc
repnz
nop
nop
jae
add
add
add
push
clc
repnz
nop
nop
jae
jmp
arpl
add
sub
cld
nop
nop
jae
add
lahf
add
xchg
je
lock
jmp
aam
add
inc
ss
mov
add
mov
mov
clc
repnz
nop
nop
jae
add
cmc
out
sahf
add
add
jg
clc
repnz
nop
nop
jae
mov
sub
addb
sub
push
cmp
test
bound
and
add
add
jmp
mov
push
add
jecxz
lret
js
lret
roll
jno
add
mov
add
les
fcompp
cld
clc
repnz
nop
nop
jae
adc
add
sub
add
repnz
nop
nop
jae
add
add
sahf
cmp
and
push
mov
leave
nop
jmp
daa
add
add
je
in
inc
push
les
add
repnz
nop
nop
jae
std
add
jmp
mov
clc
repnz
nop
nop
jae
mov
je
aad
jl
push
mov
mov
clc
repnz
nop
nop
jae
add
ret
mov
sahf
addb
call
nop
jmp
pop
add
lahf
mov
call
mov
push
mov
xchg
ret
add
add
add
je
xor
sub
add
clc
repnz
nop
nop
jae
xchg
je
add
add
fwait
mov
clc
repnz
nop
nop
jae
sub
sbb
xchg
add
mov
add
add
push
mov
xchg
ret
in
add
cmpsb
sbb
add
adc
clc
repnz
nop
nop
jae
add
add
pop
jmp
add
push
mov
xchg
ret
cmc
addl
pusha
push
loop
push
mov
leave
nop
jmp
addr16
add
test
nop
push
mov
leave
nop
jmp
add
push
add
clc
repnz
nop
nop
jae
push
arpl
add
incl
add
push
mov
jecxz
jnp
add
add
xchg
mov
mov
add
add
add
stc
mov
clc
repnz
nop
nop
jae
lock
add
in
add
add
je
sub
ficoml
and
sahf
add
add
bound
add
jbe
xor
push
mov
xchg
ret
mov
mov
icebp
add
push
mov
xchg
ret
andl
shl
add
mov
clc
repnz
nop
nop
jae
xchg
add
add
xor
cmp
nop
push
mov
leave
nop
jmp
add
jno
add
add
nop
push
mov
leave
nop
jmp
add
add
add
add
nop
sub
add
repnz
nop
nop
jae
mov
clc
dec
dec
lods
sbbl
add
add
dec
add
lock
clc
repnz
nop
nop
jae
add
add
aam
dec
add
in
add
outsb
add
repnz
nop
nop
jae
add
add
add
add
add
lock
in
dec
add
add
add
sub
loope
sti
xchg
add
add
repnz
nop
nop
jae
gs
add
in
les
and
jae
repnz
nop
nop
jae
aad
pusha
add
add
sbb
push
mov
leave
nop
jmp
lods
add
mov
les
repnz
nop
nop
jae
inc
add
pop
add
add
ret
fstp
call
inc
add
cmpsb
cmc
mov
add
call
nop
jae
cmpsb
in
dec
mov
add
mov
jl
cmp
test
clc
repnz
nop
nop
jae
add
adc
jo
lret
xor
clc
repnz
nop
nop
jae
add
mov
add
mov
je
mov
clc
repnz
nop
nop
jae
add
adc
add
add
mov
xchg
ret
add
add
add
out
mov
push
mov
xchg
ret
cmc
add
sahf
add
sahf
add
xorl
clc
repnz
nop
nop
jae
pop
jl
lods
jecxz
push
and
push
mov
arpl
in
cwtl
xchg
out
add
xchg
add
jo
jne
cmp
mov
rcrb
movsb
or
add
add
add
add
add
add
fnstenv
mov
push
or
pop
jo
xchg
add
mov
fwait
push
nop
pop
and
add
add
push
js
add
add
jl
test
loopne
jle
sbb
dec
cmp
hlt
jns
sbb
popf
and
mov
loopne
negb
fistpll
iret
je
imul
call
add
add
add
test
sbb
out
xor
jno
xlat
mov
jg
fiaddl
add
add
add
add
clc
cmp
xor
fcmovne
xchg
ret
popa
lcall
rcrl
fwait
xchg
data16
xchg
lods
imul
sub
add
add
loopne
mov
add
add
call
cmp
mov
repnz
icebp
and
add
add
int3
fimull
bound
shll
push
cmp
inc
xor
pop
inc
sti
push
mov
mov
mov
imul
orb
adc
shl
scas
jmp
test
daa
pop
push
push
lcall
loope
stc
stc
mov
add
dec
add
add
mov
inc
mov
rol
mov
js
mov
loopne
hlt
add
add
add
leave
mov
pushf
or
or
add
add
pop
pop
inc
mov
mov
and
add
add
hlt
dec
add
add
rolb
stc
pop
popf
mov
add
nop
shrb
pop
jl
bound
cmp
mov
add
in
xchg
xchg
push
jp
jecxz
stos
pushf
adc
lods
icebp
std
sbb
repnz
fistpll
sub
sub
daa
aas
cmp
mov
add
es
stos
or
and
add
add
ds
mov
pop
push
jecxz
push
jp
mov
scas
adc
pop
adc
stos
push
bound
cmp
add
lods
push
pop
scas
neg
mov
mov
cli
push
pushfw
in
mov
lcall
insl
push
cmc
mov
mov
mov
sahf
rol
jp
xchg
jg
add
or
xor
cmp
std
adc
push
and
sbb
cmpsl
dec
push
jae
insb
mov
pop
in
cmp
and
add
add
or
add
add
test
add
add
or
add
add
xor
pop
lock
call
outsl
ss
push
loop
inc
mov
cmp
add
add
daa
jne
cmp
add
add
mov
add
add
mov
add
add
int
dec
push
out
jle
mov
mov
aad
jmp
sbb
cmpsl
or
sbb
inc
dec
hlt
mov
out
sub
add
jns
add
add
push
shll
or
add
add
push
loopne
dec
add
add
xor
mov
mov
and
ret
inc
mov
mov
push
push
push
xor
mov
daa
paddq
pusha
add
add
ja
mov
xchg
sub
dec
add
add
shr
movl
fmul
popa
push
add
pop
shrb
add
inc
dec
mov
imul
insl
in
xchg
addr16
fisttpl
add
add
jle
push
lea
pop
sub
mov
mov
xor
mov
inc
mov
les
pop
btr
fadds
cmpsb
imul
lods
push
mov
add
adc
xor
pusha
add
add
or
lret
call
add
xor
inc
sbb
and
add
add
add
add
std
int
js
hlt
cmp
das
daa
in
movsl
jl
mov
out
push
mov
adc
ret
jne
mov
push
cmp
repnz
xchg
shlb
mov
loope
into
test
pop
inc
sub
add
add
pop
int3
jnp
into
and
add
add
loope
pop
cmpsb
cmp
mov
add
add
add
add
add
add
add
adc
pop
inc
roll
call
dec
sub
add
add
mov
int
pop
fstps
into
jge
loop
xchg
or
jo
mov
outsb
xor
repnz
into
testb
push
ficomps
xor
add
add
ret
and
inc
je
icebp
push
xor
cwtl
push
xchg
mov
fs
dec
scas
mov
add
and
rcll
mov
mov
mov
add
inc
jmp
dec
leave
js
inc
fdivrs
fwait
dec
in
les
mov
add
add
jne
ja
jbe
lahf
pop
cli
pop
add
sar
mov
mov
shrb
mov
popf
ds
jbe
mov
mov
aaa
pop
inc
xchg
es
cmp
xor
add
add
daa
bound
adc
sub
enter
add
repz
jecxz
xchg
fmul
rorl
add
cmp
sbb
test
aas
jns
fdivl
add
add
dec
add
add
push
mov
insl
out
or
sub
or
mov
loopne
and
mov
leave
ds
jmp
xchg
je
xor
or
and
add
add
dec
push
inc
add
add
add
lahf
xchg
pop
lods
sub
sbb
arpl
xor
pop
inc
scas
mov
outsl
test
add
loopne
repz
fiadds
lahf
sub
xchg
arpl
mov
sub
jb
jmp
aam
mov
loopne
test
icebp
lret
addb
sbb
push
mov
mov
mov
iret
jb
pop
push
jecxz
xor
or
jmp
add
ror
jecxz
out
dec
pop
mov
imulb
insb
mov
fbstp
mov
rolb
hlt
mov
dec
and
mov
popf
cmp
jbe
and
add
add
lock
mov
xor
pop
push
popf
or
mov
hlt
lcall
add
add
js
xchg
add
mov
in
loope
sub
sbb
mov
lret
pusha
add
add
repz
icebp
mov
popa
jo
pop
int3
inc
call
shlb
into
fmul
sub
pop
pop
fs
sbb
popa
xlat
lods
xchg
mov
add
add
int3
jmp
call
in
cmc
cs
mov
test
ljmp
not
mov
mov
mov
das
arpl
sbb
lods
inc
mov
stos
lret
icebp
inc
jo
les
ret
sarl
xor
pop
push
cli
es
jg
sub
xchg
ret
mov
scas
inc
pop
push
mov
add
mov
outsb
xorl
add
add
pop
test
add
in
mov
add
andl
pop
sub
sub
add
add
add
add
dec
sti
mov
clc
fmul
imul
push
decb
popa
adc
add
leave
das
shll
dec
add
add
cmp
and
dec
pop
cld
xor
add
sub
insb
mov
int3
jl
inc
cld
or
add
add
inc
inc
adc
call
mov
add
add
cld
cwtl
subb
add
add
hlt
pop
xor
out
push
and
out
sbb
pop
add
xchg
xchg
dec
add
add
in
shrl
jg
sbbb
mov
add
mov
lret
sbb
test
mov
pop
insl
cmp
add
add
jmp
add
xor
mov
dec
arpl
adc
push
fcomi
sti
mov
into
adc
fcomp
inc
mov
xchg
adc
push
jge
push
mov
jge
lock
sub
jnp
enter
push
mov
add
push
aam
loope
sub
inc
fdivs
add
cli
daa
sub
pushf
or
in
jl
cli
mov
or
int
testb
jae
pop
scas
scas
mov
into
scas
jmp
adc
add
or
mov
fistpl
ja
out
aaa
insl
or
add
add
out
push
adc
add
andl
add
cmpl
add
imul
outsb
jbe
sub
andb
loopne
jnp
sub
mov
mov
sbb
jae
mov
pop
ja
bts
inc
mov
push
outsb
cld
xchg
aam
ljmp
ss
movsl
out
adc
add
add
add
xchg
inc
add
add
enter
push
inc
pop
aaa
push
lods
push
xlat
jne
clc
imul
dec
es
xchg
and
clc
out
in
xlat
or
add
add
andb
mov
arpl
fstl
jle
cmp
fdivrl
push
mov
stos
and
add
add
fidivrl
push
fwait
in
das
cmp
loope
add
add
lret
jle
or
add
add
cmp
rcrl
sub
push
add
add
add
push
sbb
mov
aam
test
xlat
xchg
in
shrl
add
add
cld
cmp
cwtl
xor
aas
out
mov
push
divl
lahf
mov
sub
add
add
sub
cmp
adc
out
aaa
mov
cmp
fldl
xor
push
push
jge
popa
pop
pop
cmp
cmc
adc
and
add
add
shr
jbe
xchg
mov
add
add
cmp
hlt
pop
push
addl
dec
jnp
jmp
jb
mov
mov
cld
sub
in
cmp
mov
stc
inc
addr16
sub
das
sub
xchg
jp
pop
xchg
andb
add
mov
adc
add
add
push
xor
push
cmp
pop
cmpb
rep
out
outsb
jle
outsl
push
popf
nop
pop
mov
shll
cmp
xchg
cli
std
add
add
aaa
xchg
inc
je
jne
es
and
add
add
add
lcall
adc
outsl
test
pop
stc
stos
shrb
mov
sbb
add
add
mov
les
pusha
add
add
imul
out
inc
push
push
cmp
add
add
out
mov
cmp
add
cmpl
xchg
mov
inc
popa
data16
adc
das
xchg
pushf
cmp
fnstenv
push
into
sbb
dec
mov
bound
add
xlat
arpl
adc
inc
xlat
cmp
icebp
xlat
cltd
lods
fcompl
fdivl
add
sbb
and
icebp
repnz
sti
cwtl
add
add
cmpsl
ficoms
dec
mov
add
add
jnp
dec
jb
add
add
mov
jg
insl
jo
mov
adc
xchg
enter
add
pushf
pop
repz
aas
xchg
cmp
out
fs
test
adc
or
add
add
lahf
stc
in
xchg
fmull
movsb
push
push
fbstp
fimull
mov
lods
scas
jns
adc
xchg
dec
inc
sahf
scas
xchg
adc
decb
mov
leave
or
loopne
or
add
add
aaa
std
jmp
scas
pop
popfw
inc
add
add
add
and
add
add
push
mov
lret
mov
and
add
lea
add
add
or
add
add
dec
sub
add
add
ja
mov
add
lods
adc
push
repz
add
add
lods
stc
or
rolb
subps
dec
mov
mov
mov
sbb
add
add
int
rclb
mov
push
or
add
add
or
aas
test
add
mov
dec
and
lret
jl
xchg
outsl
jae
cmp
mov
rcll
add
sbb
mov
imul
or
jge
inc
dec
mov
das
lret
push
adc
push
movsb
xchg
jecxz
mov
out
out
sahf
out
addr16
mov
pop
dec
add
add
pop
stos
lret
add
add
out
adc
jp
adc
jp
outsb
jne
or
stos
dec
popf
mov
mov
and
popf
es
dec
out
sahf
sbb
inc
add
mov
xchg
jns
loope
loopne
hlt
adc
add
adc
bound
mov
inc
mov
int3
jl
adc
lret
pop
mov
les
les
mov
nop
and
add
add
push
addl
mov
mov
inc
add
add
lret
aas
xor
pop
imul
lahf
mov
stos
enter
push
push
mov
push
fisubl
loope
mov
add
add
clc
push
mov
push
cmpsb
sub
je
jns
xor
add
add
add
cwtl
push
sbb
add
xlat
outsb
jbe
mov
js
scas
add
add
add
adc
add
add
dec
je
add
add
ja
aam
xor
add
add
pmulhuw
mov
inc
add
add
sbb
mov
add
pop
pop
mov
xchg
mov
loopne
fldt
fmuls
sbb
les
add
adc
icebp
ret
pop
pop
leave
cmp
mov
shlb
jg,pn
stos
lods
int3
in
insb
mov
insb
mov
cmp
add
add
loopne
add
adc
xor
cmpsl
mov
dec
xchg
les
bound
add
pop
data16
dec
clc
push
mov
scas
das
mov
pop
xor
fidivs
and
cwtl
inc
jmp
add
add
mulb
xchg
orb
add
sbb
inc
in
sti
add
aaa
pop
inc
add
add
js
cmp
add
add
mov
push
pop
jb
mov
inc
iret
or
push
jle
pop
add
add
add
xor
fisubs
and
add
add
add
add
and
add
add
fnstsw
lea
xor
mov
mov
cmpsl
jbe
add
add
cmpsb
xlat
inc
jo
jp
dec
adc
dec
mov
and
outsl
mov
add
mov
test
add
pop
push
int
jnp
mov
or
add
add
sahf
data16
mov
xchg
dec
lods
xchg
test
push
push
mov
add
std
mov
mov
xor
movsb
fsubs
xchg
js
inc
out
test
test
sub
add
add
add
call
mov
repz
sbb
add
add
cmpsb
mov
pop
fcomp
push
push
mov
adc
rcl
cwtl
and
or
add
add
pop
decl
adc
arpl
xlat
call
xor
test
pop
cmpsb
push
test
sub
add
add
mov
jne
cmc
xor
add
add
lods
popa
or
add
add
inc
rorl
inc
in
leave
and
add
or
and
aaa
push
enter
xchg
jg
adc
inc
mov
out
rclb
mov
notb
mov
sbb
xor
clc
and
add
add
push
ss
mov
loopne
ljmp
cmc
mov
add
add
add
pop
mov
sbb
adc
jle
xor
mulb
data16
add
add
jl
jns
sbb
pusha
add
add
es
aaa
and
add
add
aam
popf
adc
cmc
and
add
add
insl
pop
xchg
dec
xor
or
add
add
aas
or
add
add
sahf
mov
add
add
and
add
add
push
jne
roll
les
mov
mov
mov
subl
dec
cmp
xchg
dec
push
mov
add
add
add
xor
mov
clc
jbe
insb
mov
mov
sbb
scas
popl
add
or
or
add
add
and
add
mov
add
mov
rol
cmp
push
xlat
scas
testb
mov
stc
dec
push
scas
xchg
sbb
sti
cld
shlb
in
mov
jecxz
push
in
imul
popa
repz
cltd
pop
xchg
push
mov
es
or
or
xor
add
fisttpl
push
cli
std
out
cmp
test
pop
jg
clc
xorl
add
daa
mov
mov
inc
add
add
pop
add
add
enter
dec
insl
push
fwait
outsl
cmp
leave
xor
outsl
and
pop
or
add
negl
mov
jo
mov
push
sub
add
add
xchg
js
mov
xchg
push
test
sbb
addr16
fisubrl
sbb
std
mov
cltd
enter
and
add
cmp
je
popf
inc
out
jbe
jo
cmp
add
mov
jg
push
push
sbb
or
jns
adc
cltd
int3
ficoml
jno
mov
add
aam
fwait
mov
mov
fsubp
mov
lock
jns
add
add
mov
add
add
add
testb
add
add
adc
add
icebp
and
add
cs
loop
ds
jnp
ds
add
add
in
stos
int
jecxz
imul
inc
mov
pop
lods
lahf
cmp
adc
mov
call
add
push
cltd
lock
popa
loope
iret
xchg
cmp
mov
mov
xor
aaa
sbb
add
add
inc
inc
cs
out
mov
dec
ds
and
add
add
sbb
sar
mov
ret
and
add
add
add
leave
cld
and
add
lods
add
ficoml
add
shl
sub
add
add
mov
sbb
add
pop
repz
pop
add
add
fildll
cmp
mov
mov
or
add
fstl
cmp
push
aam
inc
mov
add
add
add
pop
cwtl
mov
lods
mov
add
add
dec
add
add
test
mov
mov
test
ljmp
add
icebp
xorb
repnz
andl
pop
ret
ret
ret
scas
aas
std
fbld
add
jns
mov
add
nop
repz
lds
rcr
outsl
std
cld
out
fmull
add
and
xor
push
and
add
add
std
sub
mov
add
adc
xchg
xchg
bnd
shlb
loop
cmp
idiv
adc
dec
inc
test
adc
lcall
add
int3
pop
imul
lret
push
clc
pop
dec
shlw
pusha
add
add
push
aad
cmpsl
ja
add
add
popf
outsb
sahf
bound
mov
jmp
jp
fstl
imul
mov
mov
mov
jg
xor
add
mov
mov
outsl
or
push
mov
pop
iret
push
idiv
mov
es
add
adc
std
and
mov
in
imul
loopne
imul
inc
add
add
jb
loope
push
out
pop
mov
add
add
in
add
inc
mov
jbe
fsubrl
add
add
push
xor
add
pusha
add
add
out
sahf
mov
pushf
push
mov
xor
les
xchg
popf
dec
imul
inc
mov
or
push
repnz
pop
test
rolb
jge
cmp
sub
fisttps
dec
mov
push
push
sbb
jbe
mov
rcl
mov
dec
mov
out
loope
mov
stos
loop
jae
movsl
and
add
add
sbb
repnz
imul
add
sahf
or
add
add
mov
pushf
lret
push
xchg
and
test
jnp
push
sub
add
add
push
push
ret
or
xchg
fnsave
lahf
mov
mov
push
dec
and
sbb
add
add
das
jnp
jmp
pop
mov
call
fcmovbe
loop,pn
add
add
arpl
mov
add
enter
xchg
inc
in
push
adc
push
push
mov
pushf
inc
xor
pop
ljmp
daa
mov
sub
jl
ret
sub
leave
movsl
push
flds
sub
imul
add
push
mov
sub
add
cs
sub
xchg
das
jnp
xchg
incl
jns
add
add
pop
dec
sub
add
add
pop
push
enter
popf
arpl
popa
leave
jl
push
dec
xchg
in
faddp
mov
push
xchg
mov
pop
adc
add
add
xchg
in
stc
rorb
adc
push
jecxz
xchg
sub
add
add
add
gs
jb
xor
cmp
fisttps
cmp
add
add
jmp
or
ja
hlt
sbb
dec
stos
ljmp
add
xor
jns
or
push
aad
jne
jmp
cmc
int3
mov
add
mov
jb
inc
movsl
pop
xor
inc
arpl
fadds
add
add
add
fisttps
repz
mov
lret
and
in
jb
mov
inc
es
test
xchg
outsl
inc
cmp
add
sub
add
add
sub
cltd
cmp
mov
insb
add
add
or
add
add
or
dec
and
add
add
xchg
fdivrp
cltd
push
aad
add
add
sub
add
add
fsubrs
stc
aad
mov
add
sbb
aam
mov
mov
add
sub
cmc
insb
mov
cmc
dec
mov
arpl
lret
and
fwait
arpl
je
pop
push
jb
adc
inc
jl
jae
mov
pop
call
push
pop
call
add
cmpsb
testb
mov
add
add
pop
and
add
add
mov
add
out
mov
jno
loopne
mov
cmpsb
lods
out
xchg
jbe
lds
add
add
jge
add
add
push
push
mov
add
add
loope
and
add
add
adc
pop
jo
jl
fs
sub
add
add
loopne
cmpsl
fidivrl
xor
push
xchg
lock
ret
test
dec
mov
fildl
add
add
adc
mov
lcall
add
add
jg
mov
shrl
jg
pop
mov
pusha
mov
push
movsb
push
push
cmc
mov
shlb
pop
shll
scas
or
add
add
adc
jmp
out
mov
push
fnstsw
sub
shr
imul
mov
sub
nop
xchg
pop
fwait
mov
jnp
mov
mov
xor
movsb
shrl
rcll
iret
xchg
fsubrp
xor
jp
sbb
or
into
in
or
add
add
fcomip
sbb
dec
pop
movsb
loop
in
jle
aad
out
insl
lods
dec
popf
pop
fcompl
pop
imull
mov
loope
pushf
in
xchg
jl
dec
lret
push
push
push
mov
addb
pop
cld
in
jmp
mov
arpl
cltd
imul
add
jge
xchg
xchg
addl
add
test
xchg
leave
notb
mov
jmp
add
add
ss
and
add
add
xor
cmc
int3
mov
add
test
adc
add
out
dec
dec
mov
add
add
mov
add
add
adc
xchg
push
push
xchg
imul
add
inc
push
mov
stos
inc
jmp
xchg
cs
add
add
in
push
cltd
stc
add
cltd
pop
lahf
adc
add
add
or
xor
and
in
push
popf
fwait
ret
mov
outsb
loope
sub
dec
inc
or
mov
bound
add
aad
fucom
push
aaa
sbb
add
add
and
jl
xor
dec
add
add
xor
add
add
add
add
add
iret
leave
in
int3
mov
stc
mov
sbb
adc
std
pop
pop
jne
mov
mov
add
add
add
jo
cld
insl
test
add
xchg
aam
out
imul
clc
shl
arpl
jae
addr16
leave
icebp
rclb
mov
jmp
add
add
dec
add
add
fcomps
add
mov
negb
dec
ret
add
add
dec
or
add
add
shlb
add
shrl
push
mov
cmpb
mov
sub
je
icebp
jnp
mov
add
xor
adc
addr16
mov
ds
add
out
add
add
add
sbb
add
nop
call
add
add
pusha
mov
mov
add
add
repnz
loope
sbb
xchg
mov
jmp
bound
shll
push
dec
es
push
xor
mov
cmpsb
xor
add
add
and
add
add
xor
pop
stc
and
jns
fbld
add
add
jl
lret
ret
sti
xor
xor
imul
add
icebp
jmp
pop
cmp
jge
int3
jle
dec
cmp
jns
xor
sbb
shr
xor
mov
rcll
jne
fildll
jno
pop
hlt
mov
mov
add
pop
inc
fst
xor
xchg
xor
fwait
jmp
jl
mov
jmp
sub
scas
xchg
sub
or
adc
and
aaa
or
dec
sub
mov
fadds
lahf
cltd
sub
add
add
sarl
adc
add
cmp
adc
loope
loop
out
stos
mov
out
mov
nop
xchg
mov
shlb
lods
nop
aad
popa
push
enter
add
add
add
aaa
push
addr16
outsl
repnz
add
dec
lret
mov
shll
add
add
out
mov
mov
cmp
mov
je
jp
sbb
insb
add
add
scas
sub
adc
inc
rol
or
add
add
add
add
rorb
jb
cmp
das
into
sbb
mov
add
add
mov
sbb
cmpsl
xchg
in
das
test
clc
mov
add
inc
add
add
ja
push
iret
orb
leave
xchg
jb
inc
xlat
or
mov
add
or
add
add
jns
lock
sbb
outsl
mov
push
ja
dec
inc
mov
sub
cmp
or
fdivl
cmp
out
adc
mov
add
mov
add
sbb
push
xchg
es
popf
insb
add
add
mov
inc
repnz
add
add
add
push
xchg
xor
push
pop
jmp
add
add
jb
dec
add
add
add
outsl
shll
xchg
add
add
repz
push
lods
stc
fwait
mov
inc
mov
andl
shl
pop
loop
mov
daa
scas
xchg
pop
sub
mov
insl
adc
add
nop
outsb
pop
pop
lea
mov
aad
xchg
sub
add
add
jmp
inc
push
push
pop
gs
sub
push
lea
movsb
fbld
insb
add
add
ss
fsubs
add
add
out
adc
pop
les
add
mov
dec
add
add
pop
mov
and
mov
xlat
lret
fs
stc
add
fsubrs
push
call
rolb
adc
sbb
add
test
cmp
aas
pop
ret
dec
add
add
lcall
iret
mov
dec
add
add
mov
mov
and
jo
sti
scas
inc
frstor
add
add
adc
fimuls
jg
repnz
add
add
add
into
pop
ja
enter
push
rcrl
add
jp
jne
dec
cltd
mov
out
cli
push
or
addr16
fdivrs
inc
jns
mov
cmc
repnz
scas
addr16
shll
push
or
add
add
dec
sbb
rcll
cmpsb
dec
testb
mov
add
add
add
ds
test
dec
aam
je
sti
out
add
imul
or
add
add
inc
sub
add
add
pop
add
fidivs
out
cmp
fsubl
add
dec
add
add
adc
nop
push
add
add
add
add
sub
xchg
mov
jae
add
in
cmp
mov
int
or
add
add
hlt
std
popa
cmp
fwait
add
add
xor
daa
pop
adc
sbb
and
sti
dec
adc
add
add
pop
cmp
xchg
jg
add
add
dec
add
add
insb
mov
pop
ljmp
cld
lret
push
loopne
mov
add
cmc
pop
ret
sub
add
add
push
pop
cmp
cmp
shlb
sbbb
cmp
inc
add
add
jb
test
xchg
mov
aaa
inc
pop
fcomps
add
and
add
add
test
data16
and
call
fcmovbe
into
push
repz
subl
xchg
push
mov
adc
cmpsl
frstpm(287
js
inc
cmpsl
shl
dec
rcrb
shll
cmp
adc
es
mov
mov
test
add
loopne
mov
cltd
push
push
xchg
lea
lods
ja
pop
repnz
mov
test
out
dec
add
add
mov
add
add
sub
add
add
out
xor
add
add
adc
mov
sahf
push
sub
arpl
inc
cmp
cmp
xchg
sbb
push
jle
pop
lock
xchg
add
add
add
sti
mov
jg
imulb
add
add
pop
jge
in
adc
int3
mov
add
scas
xchg
dec
mov
repz
adc
mov
hlt
or
shrl
add
jne
mov
repz
cmp
repz
push
ds
inc
cmp
out
cmp
xchg
testl
jge
xchg
aaa
sub
dec
add
add
fimull
pop
cmp
insl
jp
cmp
lds
xor
adc
or
mov
mov
cmp
adc
sbb
cmp
and
inc
sbbl
cltd
sbb
aad
clc
push
xlat
cmp
insl
xchg
mov
int3
add
add
mul
pop
rcll
pop
in
cld
push
lds
sete
gs
add
insl
cwtl
add
jbe
xchg
cli
jo
out
mov
adc
add
push
xchg
cltd
xchg
mov
xor
mov
jmp
outsl
arpl
sbb
push
js
insb
add
add
les
data16
pop
sbb
js
ret
jmp
and
sbb
push
pop
sbb
imul
push
in
int
popa
aad
adc
fnstsw
inc
fs
pop
daa
pop
cmp
or
call
add
add
and
push
in
jp
pop
frstor
rcr
jae
insb
mov
mov
and
js
mov
arpl
or
sbb
inc
mov
inc
insl
test
sub
enter
sub
push
add
hlt
cltd
or
fscale
sbb
push
cmp
bound
add
add
cmp
pusha
mov
inc
or
add
add
add
mov
xchg
pushf
out
fs
aad
out
mov
add
add
xor
sbb
out
pop
stos
mov
enter
shll
pop
loop
je
sahf
fcomps
test
or
add
add
add
add
add
jno
popw
js
mov
clc
outsl
or
push
mov
lock
sub
xchg
adc
add
sub
popf
mov
xchg
es
fxch
lcall
add
add
sbb
gs
add
add
js
jb
mov
pop
push
sub
enter
std
inc
fwait
subl
dec
mov
lods
xchg
add
mov
daa
mov
nop
les
xor
lods
lock
add
stc
dec
mov
pop
int3
vcvtps2pd
sarl
add
add
push
ja
xchg
sub
aaa
xchg
adc
arpl
cmp
add
mov
pop
cmp
out
ss
inc
jecxz
in
adc
push
scas
push
add
pop
jne
jmp
xor
mov
js
out
push
in
push
xor
sti
mov
test
jno
sbb
inc
add
add
jne
addb
pop
loopne
ljmp
add
add
and
and
fadds
mov
sub
ja
sub
add
add
dec
xchg
lods
sbb
insb
add
add
stos
js
dec
add
add
cs
incl
add
mov
fcomi
cmp
push
push
fildl
add
adc
add
add
add
add
pop
inc
cli
lahf
add
add
mov
lret
add
add
leave
inc
add
add
cmpsl
sub
add
add
push
iret
xor
lret
add
add
add
int
xor
neg
jmp
and
add
add
lahf
push
add
add
add
div
sub
add
ljmp
xchg
jae
lahf
out
jb
stos
aas
fwait
xor
add
inc
test
mov
pop
pop
jns
push
jno
mov
dec
xor
ret
add
add
cmc
mov
cmpsl
mov
call
les
mov
fmuls
push
push
mov
and
shll
sbb
xchg
pushf
ficomps
push
pusha
add
add
insl
imul
adc
cmp
sub
add
add
jae
xor
repz
add
add
cmp
ja
inc
push
and
xchg
add
add
mov
add
add
sbb
pop
rclb
icebp
nop
fsubrp
shll
add
pop
inc
fsubs
push
fidivrs
xor
insb
mov
inc
mov
pop
add
push
not
rorb
popa
pop
sti
jp
test
mov
add
add
jp
xchg
xor
test
ret
aad
gs
jno
adc
mov
jle
js
jmp
add
add
out
mov
pop
jp
negb
add
add
out
or
bound
stos
mov
movsl
jne
cmp
gs
popf
loopne
movsl
nop
xor
inc
or
fldenv
add
sbb
or
push
mov
add
in
push
pusha
mov
mov
or
push
pop
jecxz
fidivrs
mov
xchg
in
push
enter
add
add
add
add
xor
ret
and
arpl
jle
out
mov
jmp
add
add
mov
push
xorl
lods
mov
lea
scas
ss
push
repz
testl
dec
mov
insb
add
add
mov
mov
sarb
in
inc
ds
cmp
scas
cld
mull
push
andl
and
loope
xor
leave
rol
pop
outsl
pop
and
into
xchg
jmp
add
and
add
add
or
daa
push
loop
sti
mov
cld
pop
fdiv
test
int
les
pop
mov
jnp
mov
shr
jmp
loope
inc
out
out
sbb
push
out
add
add
add
scas
cltd
adc
dec
adc
lcall
dec
into
add
mov
loope
sub
add
add
mov
adc
subb
push
push
jge
lahf
add
dec
jae
jle
fdivrl
dec
sub
sbb
lcall
popa
divl
inc
ja
jo
add
add
mov
xchg
call
add
add
mov
sbb
popa
sbb
movsb
dec
mov
data16
push
test
addr16
jbe
faddl
imul
es
xchg
movsl
pop
scas
imul
imul
insl
sub
add
add
shrb
out
mov
add
add
jp
xlat
repnz
mov
jae
imul
imul
xchg
sti
add
iret
js
adc
sbb
dec
add
add
add
add
add
add
dec
fistps
xchg
rcll
xchg
jns
xor
mov
cli
jns
scas
xchg
push
cmp
test
mov
test
xchg
repz
add
xchg
mov
push
cmc
mull
mov
and
add
add
add
add
cmp
mov
push
mov
sub
cmp
xchg
insl
mov
aas
fstps
out
xor
push
jno
or
sub
mov
mov
inc
sbb
xor
xlat
sub
add
add
add
add
adc
add
adc
push
jae
mov
stos
sbb
dec
imul
sbb
mov
pusha
mov
xchg
in
push
push
div
xor
pop
jns
and
add
add
jne
mov
mov
push
mov
imul
add
shlb
cs
pop
xor
dec
pop
jno
lcall
jnp
adc
in
cmc
fildl
scas
adc
jns
sbb
add
add
sbb
rorl
add
add
add
scas
daa
dec
fstps
adc
add
icebp
lret
add
add
add
hlt
jmp
add
in
test
cmp
push
sub
add
add
jmp
aas
and
add
add
icebp
fdiv
sbb
mov
sahf
sub
add
add
sub
add
add
sub
sub
add
cmc
push
cmp
bound
test
lahf
jecxz
pop
push
jns
mov
pop
dec
xchg
pop
stos
sbb
fwait
loopne
push
out
add
jnp
inc
mov
rorb
add
mov
sbb
sub
stos
outsb
jb
xchg
fwait
mov
int
sub
add
add
lock
or
add
add
sub
pop
ds
fisubl
in
push
xchg
mov
data16
xchg
mov
loop
jb
add
mov
or
adc
cmpl
lcall
lods
cmp
add
add
in
or
mov
mov
cmpsb
inc
xchg
fnstcw
xchg
xchg
or
dec
das
dec
call
jl
fninit
arpl
adc
sub
push
imul
ss
xor
add
dec
mov
push
ljmp
jnp
or
add
add
mov
add
add
std
push
xor
call
enter
sub
sbb
and
xchg
insl
sub
gs
data16
movsl
push
or
add
add
stc
cmp
dec
adc
test
je
pushf
xchg
mov
mov
outsl
pop
sahf
lods
iret
mov
mov
clc
mov
pop
mov
jg
out
push
cli
fcompl
mov
add
add
aaa
ds
dec
sahf
sub
add
add
cltd
inc
and
add
add
mov
jns
jmp
add
and
mov
jmp
and
add
add
add
add
adc
push
cmpsb
insl
movsl
sahf
dec
push
cmp
movsb
mov
sub
mov
test
add
out
sbb
je
mov
daa
ss
mov
je
mov
push
movsb
es
xor
add
add
jne
inc
mov
add
add
add
add
add
mov
imul
mov
add
in
lods
add
add
leave
inc
inc
movsl
loop
or
add
add
inc
mov
add
ffree
int
jecxz
fcmovnbe
rclb
mov
xchg
xchg
in
jns
and
add
add
or
icebp
jnp
ror
hlt
mov
pop
xchg
mov
stos
xor
adc
add
lea
adc
xor
lods
jmp
add
add
popa
cmpsl
mov
cmpl
push
jo
mov
ds
in
jmp
add
add
xchg
jg
shll
lock
mov
enter
pop
cmp
dec
aas
jb
adc
int
jo
fbstp
scas
gs
and
add
add
fs
inc
ja
sub
cs
adc
add
lret
dec
jno
cld
add
add
add
test
cmc
push
loope
lods
movsl
mov
call
add
add
push
add
add
add
and
xchg
mov
add
add
shl
sbb
inc
cmp
jno
iret
mov
jl
add
add
cmpsl
movsb
pop
sbb
add
add
lock
push
in
dec
in
dec
pop
test
add
add
rclb
adc
cmp
repz
and
pop
dec
add
dec
inc
lock
out
mov
pop
mov
add
add
shll
iret
cltd
das
inc
mov
jnp
movaps
mov
xchg
dec
add
add
lods
fsts
lahf
add
sub
add
add
mov
and
add
add
test
xor
jo
cltd
movsl
push
or
std
push
add
es
dec
add
add
cwtl
js
outsl
popf
mov
int3
pop
mov
fldl
lahf
loop
push
mov
fs
adc
ljmp
sub
orb
in
out
mov
addr16
rolb
add
femms
out
lock
dec
popf
cmpsl
jge
pusha
add
add
and
add
add
stos
jecxz
pop
ss
gs
xor
inc
mov
push
mov
nop
pop
mov
push
ret
and
mov
outsb
les
dec
test
pop
and
add
add
jb
inc
loop
pop
mov
adc
add
xchg
dec
mov
add
add
ss
push
outsb
push
mov
add
add
mov
mov
mov
es
mov
add
add
lahf
jmp
fsts
cmp
je
cmp
xchg
mov
sbb
xor
das
inc
push
aaa
outsb
xor
xor
add
pop
out
outsb
push
in
int
into
sub
add
add
adc
fsubr
lcall
imull
cmp
xlat
pop
mov
fsubrl
sbb
push
sbb
outsl
cmp
in
pop
pop
cmp
std
jl
xchg
jno
cwtl
push
sbb
pushw
add
inc
mov
out
add
add
add
add
ja
cli
or
add
add
add
pushf
addb
jg
test
sub
add
add
cmc
in
xor
int
push
bnd
xor
dec
add
add
pop
js
dec
add
add
mov
lret
adc
into
and
cli
outsb
ret
xor
dec
add
add
test
pop
outsl
pop
mov
test
inc
mov
mov
out
sbb
cmpsb
fs
ss
inc
fnsave
fisttps
add
add
add
add
xchg
add
add
or
add
add
mov
dec
cmp
mov
add
jbe
into
fadds
dec
ret
pop
je
movsl
jmp
cmp
add
pop
insl
imul
aaa
mov
or
mov
and
add
add
add
add
xchg
subl
add
add
lret
hlt
lods
loopne
scas
jl
cwtl
jbe
xor
sub
xorl
cmp
add
add
mov
inc
jae
jp
cmpsb
xorl
out
das
lock
mov
push
cmpsl
stos
adcb
cwtl
dec
into
jle
xor
adc
cwtl
inc
add
add
or
jg
pusha
mov
icebp
xchg
sbb
shll
cmp
adc
cli
push
mov
imul
add
add
xor
mov
ret
xchg
push
push
mov
or
add
add
mov
mov
sub
mov
out
or
cli
mov
add
add
in
test
lods
clc
insl
movl
push
inc
mov
cs
fwait
adc
mov
sbb
add
pop
mov
mov
cmp
inc
incl
push
mov
add
add
add
xchg
subl
sahf
out
jae
fsubl
add
addr16
xor
outsl
push
fldt
add
add
add
scas
ficoms
mov
add
add
and
push
cwtl
into
pop
in
or
rcrb
mov
add
add
add
aaa
xchg
xchg
xor
inc
enter
ret
push
xrelease
jno
clc
mov
jns
pop
xchg
pop
sub
or
inc
test
mov
pop
data16
iret
mov
mov
int3
jle
stc
jg
mov
add
pusha
add
add
mov
faddl
sarl
pop
push
dec
dec
sub
daa
sahf
bound
dec
dec
and
add
add
dec
mov
es
mov
inc
leave
pop
push
cli
push
scas
les
add
pop
cltd
dec
adc
add
add
inc
sub
add
add
out
out
jg
sub
mov
shll
lcall
add
add
add
mov
pusha
mov
xchg
pop
outsl
cmp
in
mov
out
addr16
push
nop
push
pop
adc
add
add
das
loope
xlat
cmp
xchg
push
fs
cwtl
cwtl
iret
hlt
mov
cmpsl
stos
mov
xchg
movsb
lods
dec
push
out
cmpsl
and
pop
shl
fldenv
mov
iret
hlt
in
sbb
aad
sti
repz
imul
pusha
add
add
int3
mov
sub
inc
jp
mov
popa
out
add
add
add
add
add
incb
add
add
mov
add
icebp
inc
aaa
pusha
mov
push
aam
aam
or
ss
xchg
mov
lods
and
stos
pop
pop
call
daa
jne
lods
pop
pusha
add
add
lahf
je
mov
outsb
mov
dec
loop
hlt
inc
add
add
lods
push
dec
mov
shlb
int3
mov
subb
mov
jbe
bound
mov
pop
fdivl
repnz
push
hlt
xchg
cmp
mov
in
test
sar
push
mov
mov
in
add
inc
js
hlt
lods
lods
jns
jle
outsb
repz
mov
popa
add
add
out
or
xor
mov
arpl
lret
pop
mov
cmp
outsb
outsb
add
add
pop
pop
pop
mov
inc
faddl
pusha
mov
add
add
push
ret
aaa
inc
xorb
mov
fmul
rcll
outsb
add
add
aad
lret
rolb
rorl
add
test
adc
sysret
daa
and
push
and
xlat
test
pop
jl
fmull
xor
popf
cmp
nop
pop
mov
out
sti
push
aam
xchg
cmpsl
jle
xor
and
aaa
in
scas
lahf
mov
jb
test
jp
push
inc
orb
add
add
rcrl
add
lock
rclb
ficoms
and
and
add
rorl
repz
mov
addr16
add
add
sbb
mov
push
lret
in
mov
jae
insb
add
add
hlt
pop
movsb
or
loope
add
add
es
jbe
push
insb
add
add
fsub
sahf
pop
cmc
popf
mov
dec
sub
jo
mov
inc
mov
sbb
inc
adc
dec
fmulp
push
out
dec
test
mov
aad
loope
rclb
aam
stos
cltd
inc
incl
add
out
pusha
mov
mov
xchg
sarl
jo
ja
sub
add
jge
jbe
dec
mov
xor
sbb
aas
cs
rcll
stc
xchg
and
in
es
mov
and
add
add
add
add
jo
test
add
jbe
int3
mov
loop
out
mov
add
bound
stc
add
mov
mov
inc
addb
sbb
mov
push
fcmovne
bound
add
mov
mov
fstl
mov
or
add
add
movsb
adc
mov
test
in
mov
add
add
aam
push
ja
lods
in
mov
dec
stos
icebp
push
sbb
add
add
sbb
cwtl
mov
lahf
push
aam
pop
inc
stos
pusha
add
add
stc
push
movsl
aad
and
add
add
xor
sbb
mov
mov
add
pop
fisttpll
cmp
add
add
mov
adc
or
dec
add
add
or
cli
dec
dec
mov
outsb
fisubrl
add
add
ret
mov
repz
pop
xor
test
jne
mov
js
dec
add
add
jl
mov
pop
fdivs
in
popf
add
flds
pop
xchg
int3
adc
add
add
add
add
add
ja
std
es
hlt
fcmovnu
pop
mov
ret
mov
add
add
cmp
mov
or
jae
mov
inc
add
add
xor
fwait
cmp
insl
add
ljmp
add
jnp
leave
xchg
rorb
sub
add
add
mov
pop
cli
and
lds
gs
inc
add
add
fldcw
add
daa
cwtl
mov
add
enter
es
xchg
nop
dec
xor
dec
inc
out
xor
cld
xchg
das
sub
mov
es
into
mov
add
add
lods
decb
add
add
fiadds
add
pop
push
test
mov
jle
movsl
xor
push
push
add
add
add
fdivrl
clc
loopne
cmp
ljmp
add
test
cltd
mov
mov
mov
push
mov
xlat
pop
push
lods
inc
add
add
pop
lret
std
movsb
hlt
insb
add
add
xchg
or
ret
je
push
test
arpl
hlt
pusha
add
add
push
in
inc
mov
adcb
add
add
mov
out
jb
pop
lds
call
ret
add
add
jmp
cmpsb
jg
cmp
subb
mov
mov
gs
loopne
add
add
and
add
add
jo
add
add
loopne
mov
cmp
ret
in
mov
test
inc
or
add
add
jno
daa
jmp
test
test
cmpsb
testl
jnp
mov
dec
mov
jb
pusha
mov
cwtl
inc
add
mov
scas
pop
and
add
add
js
pushw
stc
shl
jg
add
add
testb
xchg
pop
int3
mov
sbb
sub
add
add
mov
lret
daa
hlt
dec
add
add
xchg
cld
inc
out
or
add
add
pop
data16
push
test
add
add
pop
cmp
mov
push
int3
jns
xorl
adc
cmp
xchg
pushf
jp
mov
add
imul
rcrl
imul
lret
es
sti
and
push
cmp
mov
je
arpl
mov
les
xchg
jmp
xor
cmp
mov
mov
add
add
pop
lcall
and
repnz
cltd
adc
inc
push
sarb
imul
add
into
xor
pop
sub
mov
aas
aam
sub
add
add
shr
mov
testl
mov
out
cmp
subl
mov
into
ds
mov
adc
cmpsb
lcall
dec
mov
call
add
cmpsl
mov
mov
add
add
push
or
pop
xor
fldenv
add
cmp
mov
add
add
rcll
std
inc
lahf
ja
xorl
icebp
or
jl
ljmp
xchg
bt
loopne
sub
add
add
add
push
cmp
add
add
add
add
push
andb
add
add
sbb
add
lea
add
fcmovnbe
rcrb
stos
cmp
sub
add
dec
std
insl
mov
add
mov
inc
mov
cwtl
xchg
in
mov
mov
push
jbe
add
add
out
stc
xchg
xor
xchg
add
add
add
add
popa
js
clc
shrb
mov
jo
xchg
pop
push
inc
add
add
hlt
movsb
pusha
mov
cld
fwait
imul
nop
add
add
sub
add
add
aam
mov
scas
nop
fidivl
daa
xor
sub
sub
mov
mov
add
sbb
popa
testb
in
popa
jp
xor
cmp
sbb
jmp
pop
and
mov
rclb
add
test
stos
xchg
test
add
mov
dec
inc
mov
push
pushf
add
mov
add
or
ret
inc
pop
gs
add
add
or
add
add
ret
add
add
lds
pop
sbb
in
out
mov
jne
daa
dec
subl
or
cmc
mov
jo
pop
mov
jb
lahf
xorl
add
mov
add
add
xchg
xchg
vaddsubps
mov
jecxz
out
xchg
ret
insb
mov
push
fsubl
sahf
ss
cmc
test
add
jns
mov
lds
ret
sub
add
add
add
pop
adc
pop
push
subl
sarl
les
add
add
cltd
mov
test
add
jmp
add
and
inc
sti
jge
push
jno
pop
mov
clc
adc
add
lds
stos
inc
loopne
divb
push
cmpsb
jnp,pt
adc
add
adc
nop
scas
adc
dec
dec
xlat
pop
mov
lahf
mov
pop
mov
jns
mov
adc
mov
cmp
js
or
add
add
mov
add
insl
cmp
dec
fimull
xlat
out
cmc
adc
add
pop
lea
add
add
or
repz
cmp
xchg
or
add
add
stos
add
add
add
add
mov
nop
out
jns
pop
adc
add
outsb
lret
pop
lret
and
sub
add
add
cmp
pop
inc
adc
int
inc
push
in
bound
mov
sub
gs
fwait
adc
push
xchg
out
pop
inc
mov
out
xchg
ljmp
sub
movsl
mov
mov
push
das
cmp
sub
xorb
jnp
push
in
ljmp
dec
xor
xchg
xchg
clc
mov
pop
inc
add
add
xor
dec
bsf
gs
add
add
fnsetpm(287
test
mov
shlb
add
or
or
enter
add
add
inc
mov
sub
add
add
aaa
add
add
add
mov
inc
pop
lea
jecxz
punpckhwd
cld
aad
xchg
shrb
std
fdivs
dec
pop
lret
dec
ss
sub
sub
mov
xchg
rcll
add
add
inc
rcrb
mov
jle
test
jge
inc
jae
sarl
test
loopne
outsb
xchg
lods
lea
xchg
mov
jno
mov
out
mov
jns
stc
movsb
ja
mov
pop
sbb
lods
imul
dec
add
add
mov
add
out
iret
rclb
lcall
mov
jnp
add
add
cmp
out
stos
mov
add
push
pop
outsb
fisttpl
xchg
mov
or
in
pop
mov
xchg
loopne
cmc
jb
ja
add
add
int
sahf
in
mov
add
add
inc
test
in
leave
popl
fadd
je
int
xor
int3
out
test
push
roll
jge
daa
bound
fdivrs
out
daa
testl
frstor
decb
jb
or
pop
mov
sbb
dec
push
or
add
add
inc
add
add
mov
in
les
mov
mov
idivb
xchg
cmp
dec
add
add
add
outsb
adc
dec
add
add
pop
pop
xor
inc
aaa
inc
jnp
data16
add
add
add
push
or
xor
lds
sbb
mov
add
inc
xor
pusha
mov
adc
arpl
mov
das
jno
pop
aad
cmpl
push
mov
add
xchg
xchg
add
outsl
dec
icebp
dec
int
sub
add
push
jge
loop
xchg
hlt
cmpb
push
test
inc
repnz
das
xor
inc
jae
loop
add
add
add
inc
sar
ja
lcall
mov
outsl
adc
dec
test
movsb
jne
ja
add
add
add
iret
popl
add
add
sub
add
add
ljmp
push
jg
cmp
xor
ja
daa
mov
test
add
cwtl
cmpsb
push
add
add
and
add
mov
add
add
xor
jge
sahf
xchg
std
incl
push
lods
dec
jns
sub
cli
lcall
nop
xchg
mov
mov
jmp
mov
jg
push
outsb
jp
cli
daa
jne
sbb
mov
sub
enter
add
add
dec
pop
movsb
lods
nop
push
xchg
and
add
jno
add
jl
fs
fs
mov
add
xor
in
std
xchg
push
cs
lods
pop
xchg
xor
cltd
into
mov
dec
jl
push
xchg
mov
int
push
inc
insl
or
sbb
fcoml
test
sub
inc
add
add
add
add
push
and
jno
stc
mov
scas
fisttps
cmpsb
xlat
outsl
xchg
popf
add
nop
in
into
xlat
mov
xor
cmp
jg
imul
jmp
jnp
jl
inc
dec
xchg
jne
xor
xchg
lahf
in
xchg
stc
inc
cmp
push
inc
mov
frstor
add
jae
ljmp
mov
jne
cwtl
fcoml
xlat
sti
out
add
or
sub
add
add
jo
repz
cmp
fsubs
daa
or
mov
add
movsb
inc
dec
or
add
add
add
add
add
ljmp
cmp
insl
insb
add
add
in
and
add
inc
fwait
insb
mov
insb
mov
es
dec
lock
out
bound
jg
cmpsb
lea
std
xchg
pop
pop
pop
pop
out
sbb
dec
ljmp
mov
sub
mov
add
pop
mov
or
add
add
sub
add
adc
add
add
sub
fxch
inc
mov
add
add
std
dec
add
add
push
inc
inc
mov
jno
mov
sbb
and
xchg
fsub
cmp
mov
mov
pop
push
pop
scas
or
pop
nop
call
lea
sahf
dec
out
push
push
or
add
clc
xor
push
fwait
popf
mov
mov
sub
pop
mov
add
mov
icebp
pop
sbbl
add
loop
xchg
addr16
cmpsb
shll
mov
mov
xor
add
adc
mov
xlat
fadds
add
add
jge
dec
jle
dec
and
xchg
sbb
insb
mov
xor
add
mov
pop
inc
repz
sahf
fimull
add
icebp
adc
mov
mov
add
fstpl
movsl
push
and
inc
mov
push
sub
add
add
mov
stos
ljmp
test
xor
rcr
movsl
ret
fistpl
mov
add
mov
loopne
shlb
icebp
mov
cmp
xchg
sbb
mov
jo
sub
mov
inc
xchg
xor
int3
jb
sbb
xor
mov
mov
fdivl
cmc
or
add
add
jns
mov
mull
push
dec
mov
xor
or
or
jbe
mov
adc
mov
or
add
fiadds
inc
cmp
fiaddl
mov
bound
cmp
cwtl
xchg
loopne
inc
add
add
cld
dec
add
add
xchg
cld
xor
lret
add
add
add
mov
fmulp
int
add
add
adc
movsl
stc
push
sbb
inc
add
add
loopne
mov
sbb
xchg
int3
inc
mov
jne
mov
xchg
add
add
add
add
xchg
sub
clc
xchg
ds
es
dec
mov
add
outsb
mov
jbe
ss
sbb
add
jno
push
jno
mov
enter
add
add
rclb
push
pop
sub
inc
mov
add
add
or
pop
out
pop
pop
mov
xor
icebp
xchg
mov
jmp
pop
daa
jmp
add
add
mov
adc
inc
xor
add
inc
sahf
aad
sahf
adc
pop
hlt
mov
add
or
add
add
sahf
or
adc
or
add
add
cmpsl
jnp
adc
mov
push
mov
mov
add
add
add
add
sbb
pop
js
mov
jb
pop
lcall
mov
xor
dec
in
inc
add
add
xchg
xor
xchg
add
add
clc
xchg
push
mov
aas
mov
enter
add
add
dec
or
int3
push
fcomi
inc
test
sbb
add
fstps
shrl
sbb
mov
fildll
add
add
adc
dec
add
add
nop
fistpll
clc
aam
ret
sub
out
sub
inc
ret
lods
in
and
add
gs
fistps
xor
sbb
push
jbe
and
jmp
lcall
jmp
fimull
push
adc
mov
add
add
insl
scas
push
add
dec
nop
inc
stc
fdivrl
dec
pop
adc
mov
test
jle
mov
in
or
xchg
scas
adc
arpl
xor
aam
push
and
jle
ja
jbe
add
add
mov
test
and
pop
aaa
lcall
mov
add
outsl
dec
mov
adc
pop
xchg
test
mov
jbe
insl
icebp
loopne
xchg
adc
adc
sub
jmp
ljmp
clc
sub
or
decb
stc
jns
mov
lcall
mov
add
adcb
scas
mov
add
add
add
out
in
sbb
addr16
mov
aam
movsb
in
push
dec
nop
xchg
xlat
lods
cwtl
inc
lret
test
lcall
ds
sub
add
add
inc
lock
lcall
inc
push
dec
xor
lret
inc
cmp
in
mov
ficoml
xor
dec
fs
mov
and
jmp
add
add
shll
shlb
jne
jmp
push
pop
testb
int
cmc
stc
mov
mov
mov
mov
mov
adc
ret
cmp
jg
fsubl
pop
out
xchg
jecxz
xchg
push
nop
xor
ret
fisubrl
dec
lcall
aam
outsl
cmp
test
and
gs
and
add
add
wrmsr
movsl
mov
roll
add
add
sahf
jg
push
outsl
dec
dec
add
add
cmp
out
test
mov
cld
nop
aad
xor
xor
push
pop
clc
adc
jmp
add
cli
imul
cld
mov
dec
cltd
mov
xchg
rol
std
cmp
jmp
add
add
lods
cli
and
add
ja
inc
mov
mov
add
mov
mov
loope
inc
mov
inc
cwtl
inc
add
fcompl
ss
or
push
inc
mov
ret
mov
fdivs
dec
add
test
rdpmc
leave
push
push
xchg
inc
push
inc
mov
pop
or
add
dec
loop
mov
daa
in
mov
or
add
add
aas
pop
pop
jb
push
fcomi
leave
adc
ljmp
add
add
aad
mov
pop
mov
or
cli
mov
js
pop
movsb
xchg
pop
mov
jnp
push
loope
es
push
dec
mov
or
add
add
out
xor
mov
ss
mov
push
out
mov
lret
repnz
jo
dec
add
add
mov
mov
dec
mov
stos
inc
or
add
add
lods
jno
mov
mov
js
out
incl
xchg
sbb
imul
aam
dec
mov
inc
loop
mov
sub
add
incl
and
cmp
and
fwait
xor
sub
and
add
add
stos
mov
add
lahf
mov
jmp
dec
mov
sbb
fadd
movsl
lea
test
jb
dec
add
add
out
outsl
scas
sbb
mov
push
jl
jmp
xchg
adcb
ljmp
loopne
add
dec
mov
cli
xor
stos
push
mov
repnz
rcr
int3
shll
icebp
cmp
cwtl
push
aaa
adc
outsl
pop
imul
xor
add
add
add
fdiv
and
add
add
xorb
xor
cs
push
cmp
xchg
test
ja
adc
push
cmp
add
pop
jg
and
push
pop
lods
test
fnstenv
es
sbb
testb
or
add
add
jbe
fistpl
mov
push
push
pop
jg
int
push
xchg
sub
rcrb
dec
cmc
mov
out
aad
mov
add
insl
mov
cltd
pushf
lret
test
ret
mov
in
xor
xchg
cs
xchg
fucomip
xchg
fildl
xchg
push
ffreep
mov
xor
add
scas
xor
push
lcall
cmc
scas
aaa
mov
add
add
add
dec
add
add
gs
cmp
cmp
loope
mov
daa
add
lock
jo
outsb
add
aaa
roll
add
add
out
lret
cmp
aaa
sahf
ss
jle
sbb
dec
fistl
push
push
out
repnz
pop
cmp
or
add
add
and
add
add
push
sahf
fwait
jg
sbb
mov
xor
aad
lret
loop
adc
hlt
mov
enter
add
add
xchg
nop
dec
ja
mov
fs
lret
pop
out
cmp
mov
ds
lcall
cmp
xor
mov
push
jg
add
add
mov
sbb
dec
outsb
int
aad
test
add
outsb
push
push
push
int3
sub
add
add
xchg
jl
pop
loope
dec
mov
add
add
or
pop
sub
add
add
insl
iret
mov
add
xlat
outsb
adc
add
add
mov
jo
aaa
xor
fidivrs
push
fisubrl
in
lods
sbb
std
shl
ss
std
add
add
add
add
add
pop
mov
add
or
jmp
sub
fdivl
adc
cltd
pop
ja
push
push
outsl
push
rcrl
fidivrl
or
add
add
cmc
push
daa
in
cmc
mov
or
mov
cmp
add
add
mov
ficoml
stos
xlat
stos
sbb
lret
decl
add
nop
jb
and
push
cmp
bound
dec
add
add
leave
es
test
cmp
push
std
push
xchg
dec
mov
inc
push
les
pop
mov
test
mov
repz
mov
mov
jnp
cmpsl
bound
or
cmc
mov
adc
cmp
scas
inc
xchg
fnstenv
xchg
xor
add
add
test
mov
push
pop
push
das
adc
int
arpl
lret
out
popf
adc
dec
mov
les
mov
je
xchg
loop
mov
inc
test
rorl
jecxz
ja
rcl
jmp
cld
outsl
cmp
jns
add
mov
aam
rclb
test
inc
lods
jnp
or
pop
push
inc
mov
and
add
add
in
aas
jns
rolb
stos
shll
and
add
add
push
inc
mov
sbb
push
and
jo
lods
pop
xor
push
js
arpl
test
push
pop
pop
mov
idivb
add
insl
xchg
call
aas
cltd
in
stc
mov
mov
push
xchg
test
mov
loopne
mov
sti
aad
cltd
jecxz
mov
sahf
inc
xor
lret
aam
data16
loopne
rclb
adc
test
gs
pop
lds
in
cli
adc
movsl
xchg
fsubrs
pop
xlat
mov
fwait
divl
out
fiadds
add
fnstenv
add
push
push
and
into
filds
cmp
lock
xor
add
add
add
movsl
insb
add
add
aas
dec
pushf
adc
jae
cmp
pop
sub
rol
mov
outsl
lret
sbb
repnz
pop
lods
daa
mov
add
jns
lret
xchg
xchg
cwtl
scas
push
xlat
mov
cmp
out
pop
sub
lods
pop
pop
jle
shlb
fxch
js
dec
int
sahf
sbb
xor
sbb
or
add
add
mov
adc
add
leave
and
add
add
add
add
jge
sbb
sub
add
add
inc
int3
jno
add
in
sub
loopne
cmp
jns
test
cs
test
dec
loope
imulb
lret
mov
add
or
add
add
clc
mulb
ss
mov
mov
mov
cli
sub
mov
bound
or
add
add
test
gs
stc
pop
push
mov
jne
popf
scas
jnp
adc
int
stos
add
xchg
loopne
add
shll
sub
imul
dec
pushf
loopne
fwait
mov
dec
add
add
add
dec
inc
jmp
add
add
add
test
sbb
cmpsb
lret
lods
in
mov
mov
add
pop
rorl
add
add
leave
sbb
imul
add
add
mov
xor
stos
arpl
ljmp
adc
out
test
out
mov
fldcw
add
add
sub
inc
in
notl
repnz
ds
mov
add
add
ljmp
sub
add
add
out
cmp
or
rcl
jno
push
shrl
repnz
icebp
int3
ret
push
mov
in
in
popl
push
mov
add
add
mov
dec
add
add
rclb
or
add
add
mov
add
add
inc
divps
test
shrl
add
xlat
add
push
std
add
mov
pop
mov
cwtl
cmp
add
add
jg
mov
ficomps
sub
push
add
add
add
test
loopne
jle
lods
out
das
loope
jne
shr
or
into
xchg
jo
into
sarl
jl
inc
jbe
lock
inc
mov
xor
push
std
or
ret
scas
pop
sub
add
add
and
add
add
imul
sub
gs
or
xchg
pop
lahf
addr16
movl
add
lahf
popa
int
xchg
adc
sarb
adc
add
jae
xlat
pop
sbb
pop
adcb
in
mov
and
in
mov
push
ss
pop
mov
lahf
adc
mov
push
movsb
add
add
add
mov
push
paddusb
or
add
add
mov
lds
in
fdivp
jae
sub
dec
and
cli
out
aas
testb
dec
clc
jmp
mov
arpl
jb
jge
inc
add
add
outsb
adc
push
sbb
addr16
xor
dec
add
add
insb
add
add
ret
push
mov
mov
push
js
out
mov
jle
push
xor
pop
mov
dec
out
cmp
decl
add
add
mov
add
xchg
sbb
loopne
push
bound
jg
xchg
xchg
mov
add
add
mov
push
xchg
aad
lret
xchg
int
dec
mov
xchg
in
ja
mov
popa
jge
test
sti
jl
stos
int
pop
lahf
cmp
sbb
add
add
lds
and
add
jno
arpl
orb
cmpsl
stc
mov
adc
in
sbb
fnstenv
popl
imul
outsl
pop
or
out
mov
push
sub
and
pusha
mov
sub
pop
inc
jae
repnz
mov
xchg
xchg
xchg
decl
add
add
loopne
sub
add
add
rcr
movsl
mov
pop
dec
dec
in
mov
fstp
pop
push
inc
fdivr
imul
mov
dec
push
lahf
std
std
inc
inc
pop
sbbl
jmp
mov
xor
enter
mov
mov
cmpb
add
add
sbb
mov
push
jl
add
add
dec
mov
cmc
mov
cmp
test
pop
or
add
add
xlat
jge
mov
add
icebp
sbb
add
add
lahf
mov
ja
aas
imul
mov
xchg
sub
and
adc
dec
add
add
dec
dec
add
add
push
lods
push
sbb
mov
arpl
or
add
add
stc
jns
movsl
sub
mov
mov
inc
mov
sub
movsl
loope
in
push
pop
or
hlt
lcall
jae
pop
test
add
add
into
lcall
xor
mov
popa
cmp
xchg
jnp
adc
push
xor
fisubs
add
sbb
clc
test
enter
clc
cwtl
ret
dec
loope
scas
in
in
into
pop
test
nop
imul
add
add
dec
andb
or
mov
das
cmp
data16
add
add
addb
test
ljmp
cli
add
cs
dec
mov
push
cmp
mov
mov
aad
xchg
fsubl
mov
daa
mov
add
cld
std
mov
sbb
movsb
repz
sub
mov
xchg
loope
add
add
add
xchg
mov
mov
arpl
add
add
add
mov
outsb
stc
inc
jg
ret
ja
add
add
ljmp
push
and
add
add
add
dec
dec
add
add
dec
cmp
or
add
fiadds
ficoms
nop
adc
je
push
mov
inc
mov
xchg
mov
add
aaa
in
pop
fdivrs
add
jecxz
cmp
aad
jmp
insb
mov
add
add
cs
test
push
cmpsb
xor
bound
jl
mov
jo
movsl
ds
lahf
sub
add
add
pop
xor
mov
or
fldcw
mov
push
out
test
jecxz
test
push
push
push
dec
add
aad
mov
aam
out
or
test
push
add
inc
add
add
cli
sub
add
add
mov
push
jmp
mov
ret
pop
xor
test
aas
rorb
add
aam
cmp
xchg
iret
mov
push
std
mov
fimull
add
dec
leave
or
push
repz
daa
pop
inc
add
add
mov
xor
lret
fmuls
mov
cmp
add
hlt
xor
add
in
add
add
push
test
push
leave
dec
es
add
add
test
add
scas
mov
fisttpll
sbb
nop
repz
inc
bound
mov
dec
addr16
or
add
add
pop
jns
add
add
std
mov
add
add
add
mov
test
cmp
loopne
cs
mov
xchg
inc
mov
xor
ficompl
lds
jns
int3
lret
outsb
mov
cli
pop
cmp
add
add
pushf
lods
testb
add
add
mov
add
add
xchg
dec
into
scas
addr16
mov
dec
add
add
add
loopne
daa
movsb
addr16
mov
cli
mov
add
add
add
add
fimull
insb
add
add
sar
loope
inc
mov
shr
mov
cmp
cmp
push
add
add
rorl
xchg
xor
and
add
add
fidivs
inc
fwait
adc
add
pop
test
outsl
mov
call
mov
ficompl
and
cmp
inc
fiadds
lods
nop
sub
xlat
adc
add
add
inc
sbb
dec
add
add
add
add
add
jns
lods
orb
add
ja
stc
push
add
add
add
les
add
add
out
fsubrs
jge
xor
add
add
xchg
sub
fsubs
add
fsts
icebp
push
jnp
jnp
insb
mov
cli
loopne
cli
in
mov
pop
popf
in
ror
push
mov
shrl
pop
dec
dec
sarb
pop
les
add
add
push
scas
mov
jb
sub
imul
fisubl
add
fidivs
add
ja
imul
test
mov
test
add
dec
mov
cmp
push
mov
inc
int3
mov
ljmp
or
add
add
cmp
movsl
insl
adc
icebp
jbe
push
add
add
mov
add
clc
dec
add
add
pop
cli
cltd
cli
sub
arpl
data16
add
add
mov
hlt
jbe
cltd
ljmp
add
sbb
add
xchg
in
or
add
add
das
rclb
arpl
add
add
pop
mov
and
push
mov
push
in
mov
ljmp
ljmp
rcrb
mov
jbe
mov
std
roll
sbb
std
sbb
mov
lods
add
mov
mov
fimull
mov
shll
mov
test
push
xor
out
jbe
xchg
push
setns
shr
adc
shr
lret
pop
fwait
inc
sub
push
shlb
jmp
pop
sub
ret
fsubr
inc
add
add
push
loopne
xor
aam
xchg
mov
xor
das
jecxz
out
js
fs
mov
or
cmp
mov
sub
add
add
inc
jo
mov
outsl
sub
add
add
roll
add
les
insl
sbbl
lock
pushf
push
aam
add
add
add
jl
add
add
jge
mov
pop
je
and
sub
out
int
xlat
and
add
add
add
add
add
sub
and
add
dec
add
add
pop
mov
les
insb
add
add
mov
inc
mov
daa
repnz
fldcw
sar
aas
push
inc
pusha
mov
vcvttpd2uqq
jns
mov
sbb
cltd
mov
mov
sub
add
add
pop
es
inc
or
add
add
add
lods
mov
add
xor
arpl
daa
adcl
inc
and
add
add
xchg
icebp
aaa
push
lret
aam
sub
add
add
enter
cmp
out
es
repz
cli
sub
aam
sub
cmc
jmp
loope
enter
add
mov
outsl
lret
xor
sbb
pop
mov
xchg
mov
push
push
cltd
xor
dec
imul
cmp
movl
call
add
and
pop
je
adc
orl
push
ljmp
sub
add
add
fadd
scas
sub
mov
pushf
divl
add
jmp
mov
xchg
mov
mov
adc
inc
test
loopne
arpl
in
and
fstpl
add
loope
jge
push
ljmp
pop
mov
pop
pop
sbb
dec
add
add
add
add
add
push
test
cmp
mov
movsl
dec
add
add
sub
shrb
clc
call
adc
or
add
cltd
loopne
enter
xchg
or
xor
stos
pop
mov
call
lea
mov
shlb
and
dec
mov
mov
mov
push
in
cmp
mov
mov
mov
pusha
add
add
popa
or
insl
and
add
add
lcall
insb
add
add
fdivs
adc
add
add
lcall
imul
jmp
mov
inc
rorl
cltd
cltd
loop
push
pop
jmp
dec
mov
lock
push
stc
and
dec
sub
cmp
daa
jmp
loopne
mov
outsb
das
cmp
lahf
in
pushf
gs
shl
fmul
cmpl
add
pop
adc
push
push
jne
push
xchg
lock
add
add
aad
pusha
add
add
and
or
into
aaa
repz
ret
rorb
add
outsl
nop
mov
les
movsl
sbb
icebp
std
testl
add
js
das
mov
leave
cmp
fcompl
mov
cmpsl
add
mov
repz
das
sub
sbbl
sbb
xchg
imul
lock
enter
pop
bnd
pop
and
sbb
cmp
pop
int3
pop
lret
mov
mov
inc
lahf
lahf
jbe
repz
movsb
jmp
mov
test
pop
add
add
add
mov
ret
les
lock
jmp
mov
sti
mov
orb
pop
push
in
or
mov
mov
push
xchg
push
inc
sbb
jmp
inc
mov
mov
push
loope
add
mov
add
add
in
and
arpl
add
inc
call
xchg
mov
jle
xor
add
sbbl
popf
dec
mov
jb
cmp
stc
pop
shrb
daa
cmp
mov
pop
test
decb
cs
xor
xor
jbe
sbb
mov
cmpb
iret
je
lock
push
mov
subl
enter
scas
add
sbbl
mov
add
add
out
mov
inc
add
add
lods
jge
pop
call
add
jmp
add
test
out
rol
mulb
add
inc
clc
test
sar
mull
stos
faddp
mov
or
add
int
add
push
sbb
insb
mov
mov
repnz
mov
lods
mov
in
shlb
add
add
movsb
dec
mov
jo
pop
fiaddl
dec
dec
push
test
cmp
push
mov
jmp
jl
rcr
stc
cmp
adc
lret
icebp
mov
or
add
js
loopne
shlb
push
push
movsb
aad
ljmp
pop
lock
jle
mov
sahf
cld
sbb
test
mov
and
inc
add
add
dec
repz
mov
aad
pop
arpl
mov
add
dec
sbb
sub
add
add
sbb
gs
dec
jl
out
pop
imul
add
add
int3
cmc
in
inc
and
inc
mov
dec
push
push
mov
pusha
mov
cwtl
mov
add
add
add
sbb
or
add
add
in
loope
add
add
repnz
les
into
mov
leave
push
cmp
jmp
mov
mov
out
stc
inc
inc
sbb
lods
pop
sarb
std
cli
add
test
sub
jne
cwtl
xchg
movsl
dec
sbb
cmp
js
mov
js
ret
sub
je
mov
jecxz
sbb
test
push
xor
call
or
or
jnp
xor
and
add
hlt
mov
mov
inc
mov
sbb
aam
pop
mov
add
add
add
add
add
int
sub
add
add
sbb
add
outsl
xor
aaa
adc
fidivrs
xor
loop
fs
daa
inc
out
xorl
xchg
hlt
push
xchg
mov
mov
sub
fxch
std
scas
xchg
ljmp
add
stos
cmpsb
add
add
add
daa
clc
inc
ficoms
cli
sub
add
add
add
aaa
pusha
add
add
mov
test
je
add
add
xchg
push
jecxz
in
insl
mov
add
cmc
sahf
xchg
xor
mov
xor
adc
add
or
push
in
jo
int3
xor
dec
jp
add
add
and
add
gs
and
push
in
push
mov
bound
mov
add
add
lods
dec
or
add
add
repnz
pop
fnstsw
lods
inc
aaa
jge
cmp
fdivl
push
fidivrs
xchg
scas
out
xchg
mov
inc
or
lcall
add
add
add
sub
add
add
jp
hlt
and
xchg
and
dec
mov
orl
dec
out
add
fmuls
fdivrp
les
add
add
ret
popf
psubsw
cmp
xor
and
add
add
jne
pop
jbe
sub
mov
fisttps
add
add
cld
push
adc
mov
decb
into
out
inc
popf
sub
dec
int
mov
adc
push
push
cmp
add
add
bound
mov
imul
clc
lret
jb
sub
sbb
add
add
add
xchg
sbb
add
sub
add
add
dec
jnp
fists
adc
mov
fwait
clc
repnz
fcoml
cmc
leave
loopne
mov
mov
adc
add
popf
adc
add
add
call
mov
sub
dec
adc
cmpsl
loope
mov
add
add
sub
mov
lahf
lods
leave
mov
lahf
mov
push
decl
mov
mov
fisttpll
pop
sub
lea
add
ljmp
push
lock
jle
fadds
mov
xchg
adc
in
ret
loope
in
inc
mov
repnz
add
xor
cmp
stos
lcall
jecxz
cli
mov
and
pop
faddl
iret
pop
fdivl
add
out
pop
pushf
outsl
orl
add
arpl
ficompl
sub
add
add
push
rclb
imul
dec
mov
ja
daa
stos
in
sub
add
add
cld
je
mov
js
mov
lock
dec
rol
cmp
in
push
or
mov
push
add
add
push
xor
adc
push
je
stos
push
insb
add
add
aaa
icebp
mov
add
js
mov
adc
add
bound
inc
cs
std
aas
jne
in
movsb
mov
pushf
xor
sub
add
add
xchg
xchg
xchg
add
les
jle
mov
rol
call
add
sub
add
add
add
adc
add
mov
mov
adc
mov
xchg
in
pusha
add
add
and
cmp
mov
call
add
sbb
add
out
imul
insb
mov
ds
add
mov
or
mov
push
enter
add
mov
xchg
movb
jno
mov
push
test
adc
add
add
in
cltd
or
add
mov
imul
cmpsb
lahf
std
mov
test
add
add
mov
pushf
and
xorl
cmp
dec
xchg
xor
pop
mov
add
mov
add
fsubs
and
add
add
push
cmpsb
xchg
dec
xor
or
add
add
sarl
jle
cmp
add
add
mov
inc
adc
inc
add
add
push
add
data16
jae
xor
mov
mov
add
add
add
push
mov
add
decl
jecxz
and
mov
mov
mov
pop
aas
fidivrl
mov
push
outsb
imul
dec
dec
mov
add
sub
mov
or
add
add
add
add
ds
push
stos
outsb
jae
popl
xchg
das
jbe
add
add
add
negb
sub
add
scas
rorb
add
bound
mov
jle
adc
add
add
add
add
add
int3
sub
add
add
and
sahf
loope
lock
xchg
out
repz
les
push
cmpsl
cwtl
les
add
add
add
add
movsl
lock
cmp
mov
add
xlat
mov
adc
fwait
mov
gs
mov
mov
push
in
adc
xor
dec
std
loopne
test
xchg
inc
jnp
push
mov
ljmp
jl
sahf
shrl
mov
xchg
test
add
add
scas
inc
js
fwait
pop
mov
add
jnp
loop
add
ja
lret
push
xchg
ljmp
or
jle
mov
mov
add
lds
add
shlb
and
push
ljmp
inc
in
add
add
add
add
add
push
mov
out
and
mov
sub
add
add
push
outsb
iret
sbb
mov
or
add
add
or
ja
mov
jne
decb
pushf
movsl
rolb
add
add
adc
pop
int3
mov
mov
jmp
test
add
dec
sbb
adc
sub
or
xor
add
adc
imul
and
iret
xor
lds
inc
mov
xchg
sbb
xor
push
lods
icebp
cltd
sbb
repz
add
ss
hlt
push
lret
jbe
bound
add
sbb
fcomi
iret
and
or
nop
jns
dec
add
add
or
sahf
je
push
jo
fucomp
lcall
sbb
add
xor
jmp
add
add
cmpsl
stos
iret
mov
insl
dec
cltd
ljmp
in
loope
inc
fstpt
fucomp
or
add
add
je
xor
in
xchg
xchg
mov
dec
mov
in
ljmp
js
add
cmpsb
enter
ret
out
pop
or
aam
lret
jae
inc
add
add
fisubrs
xchg
push
mov
cmpsb
roll
add
add
mov
sbb
cmp
xchg
call
cltd
mov
add
loopne
dec
std
push
popf
enter
fstl
leave
test
add
add
add
cld
in
fldl
xorl
out
icebp
das
mov
in
mov
cltd
sub
mov
and
iret
inc
mov
in
test
movsl
pop
aad
int3
fdiv
dec
mov
sub
cmp
or
add
add
mov
mov
stc
mov
mov
mov
adc
mov
mov
pop
popf
pop
mov
xchg
lods
mov
int3
pusha
add
add
xor
int3
shll
cmpsl
call
xchg
mov
pushf
xchg
fadds
mov
sbb
in
inc
ret
fldl
push
in
and
inc
ret
fwait
loop
divb
js
leave
std
mov
inc
sub
add
orl
push
rorl
stos
jnp,pn
cmpl
add
flds
dec
je
lock
xchg
in
inc
inc
into
ljmp
jmp
pusha
add
add
add
mov
add
pushf
loop
add
add
data16
sbbb
adc
jecxz
jb
xchg
push
mov
cmp
sbb
add
mov
pop
and
test
cmc
arpl
xor
dec
and
add
add
dec
adc
int3
add
xor
loopw
push
aad
out
jnp
dec
mov
dec
arpl
sbb
fildll
mov
or
add
add
in
add
add
add
add
add
inc
inc
mov
imul
jecxz
jo
nop
cmp
push
test
cmp
test
xor
and
add
add
pusha
add
add
lcall
nop
sbb
jb
pop
loope
mov
int
dec
inc
mov
add
add
outsl
jge
mov
mov
dec
mov
add
add
add
add
jmp
add
out
out
dec
jo
out
in
mov
xchg
pop
fdivrp
sub
inc
lcall
fwait
mov
ss
push
insb
add
add
and
and
add
xor
les
jge
or
stc
rcrl
imul
jp
add
add
xor
or
add
add
add
add
pop
dec
popa
adc
jbe
enter
or
add
xlat
push
pop
in
sub
add
add
mov
rolb
add
adcl
xchg
push
rol
aad
or
mov
xor
add
add
add
mov
push
push
shrl
and
add
add
jae
fs
stos
out
sbb
rcr
ret
sub
cmp
add
push
imul
test
xor
rcl
lods
xchg
push
mov
add
add
enter
jne
jecxz
adc
mov
push
js
dec
loop
popf
push
sub
pop
insb
mov
ret
popf
test
out
loopne,pn
stos
shlb
xlat
jl
test
jl
sub
dec
add
add
add
stos
pop
ret
loopne
dec
test
add
add
imul
xchg
stc
repz
in
mov
repnz
sahf
dec
adc
stos
mov
push
and
dec
mov
push
leavew
out
test
fdivl
cmp
sub
mov
imul
movl
push
repnz
xchg
adc
add
ret
jne
xchg
jns
enter
cmpsl
mov
insl
push
jecxz
push
add
add
add
lods
jne
js
adc
and
mov
rcrl
mov
pusha
mov
add
add
add
add
leave
pushw
mov
fldcw
mov
sbb
mov
lds
inc
repz
jno
mov
ret
ljmp
add
add
imul
fcmovnbe
pop
pop
xchg
mov
insl
and
add
add
pop
and
add
add
stos
cmp
mov
mov
pop
test
add
or
add
add
jae
adc
jge
xchg
in
shll
idiv
mov
out
add
add
add
test
insl
test
sarb
push
std
ret
dec
xor
push
popf
cmpsb
lret
jge
lahf
les
pop
shll
test
repnz
push
test
les
add
mov
jmp
and
aaa
stos
inc
subl
sbb
jg
mov
call
push
negb
add
add
int
xor
daa
sub
shlb
add
add
pushf
je
addb
movsb
mov
inc
mov
and
add
add
add
add
inc
test
mov
ret
adc
sub
add
add
dec
pop
test
sbb
lcall
xchg
repz
jnp
jl
xlat
fwait
outsb
push
xchg
dec
mov
or
xchg
popf
enter
addr16
les
jae
in
xchg
push
daa
in
popa
std
lret
push
fcmove
or
jb
mov
sub
scas
rcll
dec
mov
mov
cld
cld
scas
sbb
add
add
and
add
add
fcmovne
mov
ljmp
xchg
pop
or
add
add
lret
pushl
add
add
mov
xor
int
jg
mov
shll
push
sbb
add
add
xor
dec
mov
xchg
or
add
hlt
or
xor
in
push
mov
push
arpl
and
add
add
loop
mov
adc
ret
push
stos
mov
shll
aaa
lds
push
fistpl
ljmp
xor
sub
cs
add
add
add
add
add
mov
loop
lcall
jns
mov
inc
push
add
mov
cmp
xchg
xchg
mov
clc
lret
xchg
sbb
add
add
xor
mov
cltd
in
outsl
jo
cmp
test
stos
outsb
aad
mov
leave
mov
out
inc
add
add
sub
movsl
call
loopne
inc
mov
mov
mov
add
add
fdivs
adc
dec
lods
iret
out
mov
andb
jns
out
add
sbb
or
add
add
inc
mov
orl
and
mov
cmp
add
add
ja
push
push
jbe
in
add
add
loop
add
add
or
add
add
add
ljmp
and
add
add
add
add
mov
mov
add
add
add
pop
and
add
add
add
add
add
add
faddp
aaa
sub
add
push
xchg
and
add
add
cmp
jecxz
mov
ds
repz
icebp
fdivr
xchg
mov
int3
int
push
and
jg
and
fcos
xor
add
shl
sbb
js
dec
data16
cwtl
gs
loop
cmp
pushf
ret
push
or
add
add
aam
xor
pushf
je
mov
add
icebp
and
add
add
mov
add
add
lds
sti
cwtl
orb
aam
les
add
negb
fcoms
mov
mov
ds
add
add
clc
dec
ret
mov
inc
add
add
and
add
add
add
add
lods
out
outsl
jb
or
out
jns
shr
pop
push
cmp
add
incb
inc
push
jmp
add
fsubl
pop
js
cmp
js
dec
mov
mull
test
out
mov
sub
ret
jge
les
jb
mov
pop
out
scas
lahf
lds
dec
or
fwait
jg
mov
add
add
add
add
add
rclb
rcrb
sbb
clc
dec
ljmp
xor
orl
mov
xchg
mov
add
add
decb
mov
push
fcomip
pushf
sbb
out
std
adc
add
loope
aas
add
add
mov
dec
add
add
add
cmc
jo
dec
sbb
or
js
mov
out
pop
add
inc
jns
adc
fwait
iret
daa
sub
std
iret
out
pushf
fldt
jae
in
push
push
inc
ljmp
push
in
sub
add
add
cmpsb
adc
add
jnp
cmp
xor
es
mov
out
cmp
and
or
add
add
js
jbe
xchg
lods
xchg
jle
aad
xchg
sbb
mov
dec
cmp
shll
inc
pop
insl
inc
fldt
add
add
mov
add
add
andb
leave
add
jns
call
mov
jle
shl
fdivl
fnsave
incl
add
add
add
stos
pop
nop
outsl
sbb
xchg
dec
lods
lock
add
add
test
lret
jbe
aaa
push
insb
mov
jl
push
or
add
add
test
dec
add
add
lret
into
out
mov
and
push
movsb
mov
add
insb
mov
insb
mov
xchg
cmp
mov
mov
add
jg
xchg
mov
arpl
mov
add
test
mov
add
xor
in
dec
add
add
push
data16
lods
adc
cli
add
sbb
or
pop
jl
daa
in
adc
cmp
add
add
cltd
shlb
bound
cltd
subl
arpl
arpl
hlt
cmp
inc
shlb
xchg
jb
mov
popf
bound
mov
lahf
mov
jecxz
inc
mov
enter
into
repz
jns
test
je
and
add
add
roll
inc
push
dec
das
jno
scas
sbb
decb
aam
mov
lahf
aaa
and
fistps
iret
jmp
add
dec
pop
cmp
xor
mov
pop
test
das
cmc
scas
stos
and
add
add
gs
lret
xchg
cmp
ja
xchg
xchg
mov
mov
push
and
pop
pusha
mov
add
add
jp
divb
add
sahf
fwait
mov
lahf
pop
arpl
mov
inc
mov
mov
or
add
add
adc
add
add
scas
lret
push
repz
mov
inc
test
mov
pop
pop
cmc
mov
pop
adc
add
sahf
mov
sti
int3
outsb
lret
stos
pop
dec
out
test
sbb
xchg
mov
lret
cld
loope
inc
bound
roll
ja
ret
fwait
out
outsl
jae
or
pop
jmp
cmpsb
adc
xor
inc
cli
mov
cmp
and
gs
mov
or
movsl
cmp
jle
add
add
lcall
out
inc
jle
dec
adc
ret
test
add
std
inc
pop
mov
sbb
out
mov
into
xchg
mov
xchg
mov
add
add
insl
inc
mov
sti
jbe
jmp
jo
mov
fidivs
jecxz
data16
mov
ffreep
leave
push
in
loope
jge
jmp
jl
fcomps
or
jmp
add
add
push
cmp
pop
repz
clc
testl
xchg
jg
or
add
add
add
mov
sub
add
stos
cmpb
aam
aas
xchg
mov
sub
jle
add
les
out
sbb
xchg
movsb
pop
lahf
push
cltd
or
leave
cmc
inc
rcrb
stos
pop
pminub
jno
mov
dec
bound
dec
xor
add
add
loop
dec
jmp
add
mov
pop
mov
jmp
scas
int3
fcoml
movsb
adc
push
or
insl
sbb
lds
insb
mov
iret
scas
scas
jl
sub
add
add
mov
xchg
inc
lcall
fistps
mov
cmp
add
jg
push
sub
inc
add
add
pusha
add
add
sbb
and
add
out
out
into
jge
add
cs
xor
or
pop
negl
xor
cs
flds
sbb
dec
add
in
cs
cmp
data16
pusha
mov
lods
fcomps
mov
add
add
insb
add
add
lods
add
inc
mov
mov
push
lods
push
xor
in
out
adc
fsubs
push
andl
scas
loop
xor
in
and
leave
jg
fld
xor
xor
lret
sbbl
add
lcall
loop
mov
and
in
arpl
add
rclb
dec
inc
add
add
mov
std
push
sbb
lcall
aam
es
stos
sub
add
add
movsl
sti
xlat
pop
push
push
into
cwtl
aam
add
add
out
out
jmp
and
cmp
xchg
shl
adc
jge
and
adc
imull
cmp
mov
adc
adc
stos
adc
add
xchg
mov
daa
adc
xchg
and
ret
xor
pop
adc
popa
int
inc
and
andl
add
aad
pop
aad
stos
sub
xchg
mov
add
add
add
inc
add
sbb
add
jg
test
add
stc
clc
jo
xchg
mov
jae
push
repz
jg
push
scas
mov
mov
inc
add
add
mov
into
mov
or
xchg
scas
xchg
ret
dec
mov
mov
scas
jne
repnz
decb
imul
mov
jecxz
arpl
add
add
addl
pop
jl
add
add
xor
xor
sbb
addr16
jae
shlb
lods
sub
add
add
push
xor
vpmacsdqh
push
pop
push
movsb
push
out
lock
add
mov
cmp
in
dec
sahf
push
cwtl
sbb
popa
push
pop
push
js
push
sbb
insb
add
add
scas
stos
mov
insb
mov
lret
cmp
jns
mov
aas
pusha
mov
mov
cwtl
add
mov
je
sbb
mov
subb
fcmovnbe
sahf
mov
add
sarb
xor
mov
xchg
mov
add
add
xor
inc
mov
test
insb
mov
sub
lahf
and
mov
repnz
lret
cmp
push
test
xchg
pop
mov
shll
pop
mov
mov
imul
add
or
mov
call
sub
add
add
out
mulb
or
push
cmc
adc
aam
movsb
orb
lods
into
xchg
xchg
fcomi
jb
and
add
add
pop
loop
mov
pop
out
mov
or
add
add
add
add
jp
lods
adc
add
add
add
add
mov
ficomps
or
test
adc
leave
insw
mov
xor
inc
outsl
sub
add
add
add
mov
add
add
add
mov
mov
xor
add
add
dec
std
mov
push
stos
push
iret
xchg
push
gs
ja
imul
int
xchg
mov
rorl
add
add
fstpt
and
pop
jmp
push
push
xor
ss
rclb
xor
lret
jmp
add
shrb
ljmp
nop
in
stos
cwtl
mov
mov
vmulss
jg
enter
mov
cmpsb
mov
iret
mov
jge
push
bound
lea
mov
in
add
and
add
add
push
sarl
xchg
mov
lds
testb
int3
imul
fyl2xp1
out
mov
out
sbb
in
sbb
add
add
sub
clc
je
fisubrs
test
jp,pn
jne
add
add
inc
add
add
pop
push
push
dec
xchg
outsb
and
add
add
mov
imul
pop
sbb
aas
inc
repz
push
out
test
xor
cwtl
dec
daa
pop
pop
enter
add
xor
add
add
mov
inc
add
add
fs
sub
je
lods
cld
add
lret
pushf
fmuls
cvtdq2ps
test
lods
aas
pop
pop
rorb
jno
add
add
add
add
call
add
pop
or
add
add
es
lcall
lods
inc
repz
outsb
or
fcomps
jae
repz
repz
and
or
add
add
sub
addr16
mov
mov
pop
mov
xchg
in
cmp
cs
cmp
dec
test
add
hlt
imul
adc
cmp
inc
mov
cmpsb
enter
inc
sarl
mov
icebp
js
loopne
mov
and
dec
loop
out
mov
add
and
stos
lds
je
leave
hlt
adc
arpl
ficomps
ds
cld
pop
inc
ret
jnp
cltd
in
cs
mov
popa
and
sub
add
add
insb
add
add
popa
lret
pusha
add
add
fidivrl
jbe
lds
imul
push
loopne
sti
in
or
mov
cmp
mov
xor
outsb
adc
add
ljmp
out
std
xchg
and
and
add
add
xchg
cmp
cmpsl
std
loop
andl
inc
adcb
ljmp
loopne
divb
outsb
mov
int3
and
les
xchg
sub
mov
xor
std
loopne
movsb
out
inc
add
add
mov
sub
cmpsb
sbb
sub
add
add
dec
test
lds
xchg
push
test
ljmp
adc
jne
jle
pushf
dec
mov
aam
cli
ds
ret
je
loopne
int3
dec
dec
dec
shlb
add
dec
mov
or
inc
jnp
add
add
add
add
and
mov
clc
jge
xchg
movsb
xchg
addr16
cmc
cmp
jg
and
pop
adc
fcoml
xor
sbb
mov
insb
mov
test
xor
jg
aas
ja
add
cmp
push
fldl
mov
fs
enter
leave
int
mov
push
dec
mov
and
add
add
lret
filds
add
outsb
je
inc
cmp
test
and
mov
aas
lods
popf
push
inc
add
add
pop
popa
jecxz
inc
mov
das
jbe
movl
mov
cltd
mov
mov
mov
jne
pop
or
fisubrl
add
add
dec
cmpsl
jns
xor
adc
fsubs
add
and
add
popf
pop
xchg
out
test
in
shrb
rcll
xorb
add
add
dec
movsl
pop
adc
add
add
xor
push
xor
int3
popf
mov
push
cmp
jge
sub
mov
insb
mov
cmp
ljmp
stos
pusha
add
add
test
or
mov
cli
lahf
push
mov
adc
add
add
mov
mov
pop
and
add
add
ljmp
add
cmpsl
loop
xor
dec
adc
add
add
popa
stc
or
add
add
xchg
mov
cli
jo
adc
bound
xor
pop
cmpsb
or
sbb
jmp
mov
adc
add
add
mov
dec
add
add
aam
int
cli
rcll
minps
movsb
inc
ss
mov
sarb
int3
rcl
mov
test
jnp
cmpsl
repz
add
add
out
add
ja
and
mov
pop
push
dec
mov
clc
dec
or
std
xchg
mov
dec
dec
jg
insl
out
das
incl
or
aam
pop
inc
out
fld
xlat
lcall
mov
xchg
andl
mov
add
add
sub
add
add
mov
lcall
add
imul
add
fmull
add
add
sbb
in
mov
add
pop
icebp
and
add
add
lret
in
and
add
add
dec
outsb
push
lcall
cmp
out
xchg
sbb
push
in
xchg
fldcw
or
pusha
add
add
and
ss
pushf
sub
add
add
imul
inc
or
jo
jmp
adc
inc
mov
inc
inc
out
mov
in
testb
outsb
add
add
add
cmc
fmul
push
sbb
add
add
imul
xor
add
sti
fwait
outsl
fisttpl
add
add
fs
inc
fisubs
cli
pop
outsl
rclb
mov
mov
movsb
xor
sbb
divl
sbb
xchg
faddl
jl
dec
xchg
sbb
lret
cmp
push
aas
pop
mov
sub
add
add
mov
add
in
popa
imul
add
add
cwtl
jmp
mov
mov
iret
insb
add
add
popf
int
and
add
add
add
add
add
add
cmpsl
loopne
ljmp
sub
add
push
pop
mov
inc
push
call
push
dec
dec
add
add
test
mov
jne
insb
add
add
fiaddl
mov
pop
push
mov
dec
add
add
push
pop
or
pop
pop
sbb
repnz
dec
aaa
cmpl
jb
cmp
clc
sub
sub
push
test
rclb
jg
or
add
add
push
jecxz
shll
movsl
ret
or
imul
call
nop
ljmp
fmull
sub
dec
add
add
add
mov
mov
sbbl
mov
sbb
cmpsb
rorl
sub
mov
cmp
push
sahf
mov
lods
xchg
ds
ja
mov
movl
popa
pushf
mov
imul
xchg
sub
cmp
lods
mov
push
xchg
inc
mov
cmpsb
xchg
xor
jl
add
add
add
fsubl
add
add
std
sbb
dec
fcmovne
mov
arpl
cmp
or
push
add
add
adc
add
add
add
stos
shll
or
mov
adc
rol
dec
rorb
popf
mov
lods
out
aaa
lds
stos
cmovg
cmpsb
test
lods
pop
cmp
mov
jnp
iret
clc
add
scas
data16
daa
mov
push
and
nop
mov
testl
clc
test
mov
add
sahf
jp
test
push
xchg
dec
data16
lret
cmpsb
cmpb
cld
sbb
add
add
inc
mov
add
imul
lea
pushf
out
lock
adc
sub
ret
mov
pop
test
pop
cli
shrb
add
add
add
arpl
add
adc
adc
add
add
add
sahf
cmp
cmp
push
and
test
loop
cli
fdiv
cmp
xor
add
add
ret
out
dec
add
add
mov
test
pop
mov
pop
jp
sub
push
mov
add
pop
into
push
enter
add
add
lret
mov
push
ja
negl
repz
pop
fwait
pop
jmp
jae
and
mov
cmpb
dec
test
xchg
popf
and
or
jg
add
add
sub
add
add
add
add
add
mov
add
xchg
dec
mov
sbb
fisttps
test
mov
mov
mov
cld
sbb
mov
es
aad
xorl
enter
mov
movaps
add
add
pop
and
add
add
inc
cmp
popf
es
inc
add
add
dec
adc
mov
jns
mov
mov
dec
mov
out
fisttpl
or
add
add
icebp
xchg
stos
lods
cltd
mov
mov
jbe
xorb
cld
aam
bound
adc
add
add
in
mov
add
add
add
pop
push
fnstcw
add
add
rclb
fisubs
cmp
repz
mov
pusha
mov
xchg
xchg
pop
cwtl
push
loope
fstpl
or
cmp
sbb
rcrl
icebp
inc
call
add
subb
add
add
and
jle
mov
push
fsubrs
dec
add
je
inc
cmp
add
add
pusha
add
add
xor
xchg
jnp
fists
sub
add
add
sub
add
add
mov
xchg
sbb
jne
mov
insb
mov
aad
stc
mov
dec
mov
clc
mov
and
les
xor
inc
adc
adc
xor
pop
shr
jmp
jmp
jne
jle
xor
mov
adc
jb
je
aam
test
push
hlt
jp
fdivrs
mov
bound
sti
movsl
fiadds
adc
aad
or
rcll
pop
adc
add
sarb
sbb
inc
rorl
pop
push
scas
in
clc
inc
in
xchg
ds
dec
push
dec
lcall
add
add
inc
add
sub
sub
fsts
inc
add
add
mov
rorl
push
fstpl
add
add
cld
xchg
insb
add
add
sahf
or
sbb
in
ja
pop
jp
cmp
ljmp
add
add
add
scas
sti
lock
fisubrl
mov
movsb
add
add
add
in
loope
jo
into
jbe
icebp
mov
fnstcw
les
dec
pop
cmp
jle
cmpsb
xchg
jp
push
aas
and
add
add
add
add
jae
xor
ror
outsb
push
dec
add
movsl
inc
cmp
lds
cmp
and
daa
jb
or
fwait
call
adc
cmp
adc
xor
add
jp
dec
mov
popa
sti
and
jb
sbb
jmp
outsb
sbb
sub
add
add
sbb
jnp
repz
mov
dec
add
add
mov
daa
shrb
inc
mov
add
add
add
add
sub
add
add
pop
es
or
nop
or
jmp
pop
mov
jle
mov
je
mov
jmp
pop
cmpsb
push
rorl
adc
pop
cs
cmp
xchg
mov
sbb
or
add
add
pop
dec
sbb
mov
mov
int3
inc
push
insl
or
add
add
pusha
mov
jge
je
and
adc
add
shl
inc
mov
leave
mov
bound
pop
arpl
push
xchg
pop
mov
mov
or
in
push
fimull
std
pop
outsb
fcmovnb
dec
nop
test
or
add
add
push
and
add
mov
test
mov
xchg
or
mov
push
pop
ja
dec
jecxz
test
movsb
push
loopne
sub
and
dec
movsl
pop
bound
push
mov
fsubrl
std
pop
sub
mov
and
aam
out
xor
add
add
fstpl
das
fwait
xchg
lret
add
add
add
add
pop
xchg
mov
cmp
fnstcw
sbb
mov
add
mov
mov
insl
jecxz
ja
jne
rclb
lahf
push
or
cmp
mov
int
loope
shlb
inc
into
movsl
dec
rorl
imul
cs
xor
icebp
dec
mov
iret
sub
and
mov
popf
cmp
mull
sub
xchg
lahf
adc
push
pushf
adc
add
inc
add
add
loopne
ffree
test
or
push
mov
rorb
add
add
mov
push
mov
add
add
mov
add
xchg
xor
js
xor
lods
lea
dec
and
sub
stos
add
jle
push
cs
cmpsb
pop
nop
icebp
sbb
push
ss
mov
cwtl
out
push
inc
mov
imul
insb
add
add
dec
dec
mov
test
and
fidivl
push
es
arpl
js
das
inc
mov
int3
fildll
loope
pusha
add
add
imul
cmp
dec
mov
dec
dec
add
add
mov
out
popf
xor
jo
mov
mov
pop
cmp
pop
fstpl
and
xor
push
xor
add
add
fimull
xchg
cmp
or
add
add
sbb
dec
out
sbb
rclb
in
jns
pop
adc
xor
or
or
addb
stos
sbb
adc
jnp
ss
enter
andl
adc
lds
cld
orl
sahf
orl
out
push
or
add
add
add
add
lret
or
negl
mov
add
add
add
add
fs
sub
add
nop
cmc
jae
jo
fstl
popa
repz
jp
mov
jecxz
scas
out
push
mov
insl
ds
mov
mov
sar
sbb
add
inc
lods
cmp
neg
ja
inc
add
add
lods
mov
push
jp
in
lret
clc
adc
xchg
mov
aaa
xchg
pop
shl
push
shrb
into
add
add
adc
xor
add
pusha
mov
dec
jo
xorl
or
add
add
jle
cmovne
add
adc
gs
mov
adc
jae
pop
popa
xchg
sbb
repnz
pop
js
pop
dec
shll
or
pop
push
stc
repnz
pop
dec
xchg
bound
lret
push
scas
jne
pop
popf
xchg
mov
sub
cmp
adc
pop
inc
xchg
lea
inc
sti
imul
stos
cmp
push
sub
cmp
jbe
sbb
fld
fistpll
mov
dec
add
add
sub
add
add
vcvtpd2psx
int3
xor
mov
dec
fstpt
sbb
and
add
add
lahf
insl
and
adc
sbb
stos
jb
push
cmpsl
jo
pop
push
lods
pop
shrb
fdivs
push
loop
aaa
add
add
add
sbb
add
arpl
add
add
lods
dec
mov
pop
jmp
cld
sub
add
add
es
push
stos
mov
add
add
xchg
scas
stos
insb
mov
rcrl
pop
mov
lret
xor
insw
adc
sbb
leave
cltd
xlat
mov
lahf
int3
jecxz
mov
jbe
scas
xchg
cmp
add
add
xor
mov
add
andl
add
sub
div
inc
adc
add
mov
jnp
push
xor
pop
mull
pop
pusha
add
add
jg
lret
and
pop
lcall
mov
inc
cld
cwtl
add
add
add
mov
push
adcb
adc
adc
iret
scas
stos
pop
nop
pop
adc
add
add
ds
xchg
mov
xchg
sti
lods
movsb
xchg
or
sub
std
in
out
lcall
add
add
jo
rolb
fwait
imul
ja
and
bound
ja
fs
and
jmp
cmc
jmp
add
mov
repz
leave
mov
inc
cld
rorl
add
add
sar
mov
int3
repz
idivl
repz
lea
xchg
push
cmp
add
jl
fldcw
adc
add
ficompl
nopl
lea
mov
add
add
jmp
push
cmc
jg
cmpxchg
add
add
dec
mov
pop
push
or
insl
test
add
add
pop
outsl
and
or
mov
into
sbb
nop
mov
cmpsb
adc
add
add
dec
test
imul
cmp
and
adc
jge
pop
push
call
pop
adc
gs
xchg
push
cmp
mov
es
in
or
rclb
loop
and
mov
xchg
cli
sub
pusha
mov
es
pop
arpl
add
xchg
stc
pop
xchg
std
mov
inc
cmp
or
push
dec
xor
adc
loope
lret
fnstsw
mov
sbb
mov
add
dec
jecxz
dec
in
stc
cli
clc
cltd
pop
and
push
jmp
mov
jge
add
add
test
add
dec
mov
jle
aas
sti
shll
rcrl
mov
scas
cmp
mov
scas
sbb
jns
and
lds
icebp
xor
add
add
push
adc
mov
add
cmp
icebp
dec
pop
das
pop
mov
leave
jns
imul
xlat
add
add
dec
xor
xor
add
out
inc
roll
pop
xchg
xchg
lock
xor
int3
sub
dec
andb
outsl
das
inc
mov
add
add
repz
cmpsb
test
lea
add
inc
or
add
add
out
or
mov
ficomps
inc
add
add
ds
add
add
xchg
add
test
or
xor
add
scas
mov
mov
xor
mov
push
loope
dec
sbb
nop
jg
push
xor
mov
jae
pop
lods
fsubr
cmp
repz
add
add
jo
pop
shlb
add
add
pop
sbb
cmp
mov
prefetch
call
js,pn
in
push
xor
mov
ds
lret
in
fildl
leave
inc
and
mov
inc
rclb
add
icebp
imul
mov
and
pop
jne
sub
cmp
daa
in
mov
addl
sbb
mov
repz
cltd
jo
xor
mov
ret
add
add
add
and
jne
dec
movb
sbb
jle
push
mov
movsb
xor
dec
scas
cld
and
out
fildl
push
leave
xor
aam
leave
mov
rcrl
test
mov
insb
mov
mov
clc
ja
cmp
adc
sub
push
mov
xor
sbb
imul
xchg
pop
mov
sbb
dec
mov
repz
add
add
dec
mov
cli
adc
inc
adc
in
arpl
push
loop
into
adcl
adc
fcompl
jle
or
bound
daa
js
or
dec
aaa
mov
add
add
add
inc
add
add
arpl
jecxz
add
inc
mov
jle
jbe
add
add
add
mov
add
add
outsb
jmp
add
add
add
js
or
add
add
cli
xchg
and
add
add
add
fidivs
jp
scas
loop
sarb
inc
or
hlt
push
pop
add
push
cmpsl
jno
aas
mov
fimuls
xchg
sub
or
inc
push
loopne
mov
bound
arpl
add
icebp
aam
dec
lock
stos
cmp
push
dec
xchg
or
push
add
add
jne
movsb
cmp
bts
or
sahf
test
lods
loop
lods
into
inc
paddusb
jle
pop
push
xor
loope
test
notb
add
rcrl
icebp
pop
inc
cmp
add
add
cwtl
and
ret
adc
mov
cwtl
mov
stos
dec
ret
out
test
add
jp
sbb
lods
mov
insb
mov
mov
dec
repz
outsb
std
imul
add
pop
dec
sub
pop
jns
and
cmpsb
lods
push
out
insb
add
add
mov
add
stc
push
or
add
add
xacquire
add
xchg
jne
into
xor
fs
mov
add
pop
pop
mov
inc
pop
mov
jmp
add
pop
ror
pop
into
cmpb
addr16
iret
test
add
icebp
jl
mov
and
scas
xchg
inc
aad
lds
mov
shl
push
out
adc
jg
ret
mov
sub
add
add
pop
out
adc
mov
enter
jo
and
cmpsb
xor
push
mov
cmp
test
shlb
xor
ds
xor
push
testl
jg
xchg
repz
push
mov
sub
add
xchg
test
xor
mov
movsl
add
shr
scas
mov
inc
andl
nopl
out
jo
cmpsb
mov
push
jmp
cmc
cmpl
into
pop
sbb
or
mov
insl
cmpsl
xchg
cmp
inc
mov
cmp
add
add
mov
add
add
std
pop
mov
dec
addb
aas
scas
dec
je
lahf
xchg
adc
repnz
cld
or
add
add
in
inc
pop
adcl
repnz
add
aad
add
add
dec
hlt
pop
adc
stos
jge
jns
adc
fsts
scas
out
sti
data16
add
cmp
rdtsc
add
stc
xchg
sbb
xchg
push
sub
jg
cmp
mov
fsubr
jnp
cmp
outsb
push
jp
fadds
add
and
jmp
hlt
js
inc
scas
in
cmp
je
out
push
dec
mov
push
sub
repnz
mov
add
sbb
inc
sbb
mov
sub
jnp
stos
jl
jg
enter
mov
test
push
sbb
adc
mov
out
mov
into
enter
int3
jae
and
mov
decb
xchg
dec
mov
add
add
loop
mov
xor
aaa
sub
xchg
ret
and
add
add
add
add
add
xchg
pop
notb
in
ret
ror
arpl
sub
lret
loopne
les
or
add
add
jne
cwtl
subl
cs
add
add
add
add
add
mov
enter
add
add
add
add
add
mov
cmpsb
mov
pop
lahf
pop
fsubp
inc
push
ret
pushl
enter
mov
mov
lcall
mov
out
enter
add
add
fwait
adc
add
add
add
add
pop
pop
jo
xor
test
in
into
movsl
pop
fisttpll
add
cld
pop
mov
push
sub
cmp
mov
add
add
add
and
cltd
loopne
add
add
ss
and
add
add
dec
call
inc
jae
pop
pop
dec
add
add
pop
scas
bound
push
mov
cli
aad
adc
push
arpl
cwtl
xchg
push
pushl
pop
push
movb
sbb
mov
sbb
repnz
into
cmp
or
push
sub
mov
lret
add
int3
push
add
movsl
add
inc
mov
dec
divl
add
fbld
dec
ljmp
push
pop
pushf
pop
sbb
add
call
cmp
inc
mov
push
loop
mov
mov
or
int
push
xor
add
and
add
add
call
and
add
xor
das
xchg
mov
pushf
mov
add
add
lcall
add
add
inc
add
add
inc
movsl
xchg
pop
mov
mov
enter
arpl
add
add
lret
xor
bound
pop
js
mov
testb
sbb
add
add
nop
cmpb
mov
dec
nop
jno
in
sbb
loope
mov
inc
paddd
and
add
add
adcl
mov
fcmovne
cltd
loopne
mov
jecxz
outsl
insl
xor
fidivs
mov
mov
adc
or
add
add
and
inc
mov
je
push
or
inc
add
add
in
inc
add
add
hlt
int3
pop
mov
out
pop
movsb
fisttpll
and
add
add
mov
sbb
jecxz
mov
loope
orl
push
scas
jge
mov
clc
xorb
stos
mov
and
sub
andl
and
mov
pop
push
iret
xor
idivl
test
mov
add
add
mov
ja
add
add
mov
mov
nop
imul
cmp
sahf
sahf
adc
dec
into
popa
mov
icebp
insb
add
add
mov
add
je
ds
adcl
ret
icebp
jae
xchg
test
add
push
mov
push
sbb
add
add
shll
fbld
loope
cmpsl
imul
jae
in
daa
fbstp
dec
mov
add
mov
popf
imul
cwtl
punpcklwd
sbb
lock
mov
sar
lret
sub
add
add
nop
add
xchg
hlt
into
inc
mov
add
push
xlat
xchg
out
dec
aaa
lret
popf
sti
xchg
movsl
and
ret
cmovp
es
sbb
jecxz
fnstsw
xor
sbb
in
pop
add
pusha
mov
lea
leave
xor
dec
dec
adc
push
outsl
test
mov
cmc
push
out
inc
jecxz
add
add
dec
mov
jae
cmpl
add
xorb
jo
in
mov
add
mov
in
daa
icebp
fcoml
adc
out
dec
int
scas
imul
add
cmpsl
dec
ljmp
mov
cmpsb
imul
jmp
xlat
shrl
add
jns
push
lcall
arpl
xor
sub
int3
mov
pop
or
test
aad
cmp
mov
xchg
loopne
push
push
fdivrs
add
insb
mov
push
imul
pop
inc
add
rcrl
mov
add
add
dec
mov
call
lods
cld
push
adc
mov
cmp
je
je
jge
lret
sbb
push
pop
or
jo
sahf
sahf
shll
xlat
pop
out
repnz
mov
add
add
push
jnp
push
je
pop
shlb
fidivl
cmp
ret
mov
in
and
dec
ljmp
add
push
stc
pop
jns
lret
lea
mov
enter
jno
or
fidivl
mov
leave
sahf
test
add
and
or
add
add
inc
cmp
add
dec
test
stos
loope
das
xor
mov
add
mov
mov
add
mov
add
add
les
mov
aaa
fcomi
xchg
mov
pop
repnz
add
add
add
add
movsl
or
add
add
sub
loope
jae
mov
pcmpgtb
add
add
aad
mov
push
mov
adc
add
add
mov
in
sub
cmp
add
add
addr16
inc
andl
add
mov
jb
mov
xor
fcompl
mov
xchg
jp
jo
add
add
fiaddl
inc
leave
mov
xchg
into
ret
adcb
jge
ret
loop
call
add
sarb
jp
mulb
loope
inc
mov
xorl
add
xchg
shrl
arpl
cwtl
outsl
fdivr
inc
add
add
mov
or
add
adc
add
add
inc
popl
xchg
cli
jle
not
sbb
dec
push
mov
or
mov
jbe
jl
mov
add
add
daa
sub
in
xor
stos
arpl
bound
je
pop
pop
repnz
add
add
add
add
mov
arpl
jg
xor
adc
ja
pop
scas
adc
sbb
dec
pop
push
subl
pusha
add
add
cmp
push
sbb
jns
cltd
movsb
lret
clc
out
mov
push
mov
adc
jo
or
add
add
add
add
sbb
cltd
test
clc
lahf
push
ss
and
add
add
rolb
add
xor
sub
std
cmc
push
mov
lods
testl
sbb
je
add
aam
jmp
add
inc
mov
cwtl
xchg
fwait
test
xlat
mov
add
hlt
icebp
xchg
in
mov
hlt
jns
aad
add
and
sbb
add
aaa
sub
pushf
pushf
enter
xchg
and
add
add
inc
inc
xchg
ja
xor
push
pop
stos
cltd
dec
add
dec
mov
xchg
pushf
jmp
out
in
fistpl
mov
xchg
fcoml
add
add
rcr
xor
add
add
pop
cs
or
add
ja
outsb
loopne
xchg
pop
movsb
mov
fpatan
jb
movsl
sbb
jns
or
mov
fdivl
or
cmp
cs
pop
cmp
lret
enter
push
jns
fwait
adcb
cmpsb
popf
mov
push
mov
adc
stos
ret
loop
xrelease
add
mov
push
movsl
adc
fists
iret
sub
adc
bound
popl
je
pop
dec
adc
jb
mov
inc
clc
add
lea
adc
jo
pop
gs
add
mov
mov
add
out
mov
scas
cmp
mov
add
sbb
lret
daa
test
xor
call
jne
pop
push
js
dec
jae
lret
and
cltd
loope
sbb
push
mov
aam
mov
add
loop
mov
testb
add
ljmp
mov
add
add
xor
lds
or
add
add
in
xor
loope
adc
mov
add
add
js
in
gs
add
add
leave
push
cmp
add
fwait
mov
mov
adc
mov
fimull
insb
mov
mov
dec
outsl
rcrl
mov
add
add
or
ss
icebp
into
ja
fucom
gs
sti
roll
add
add
jg
jmp
push
xchg
mov
add
daa
xchg
imul
inc
add
add
push
out
cld
mov
inc
mov
cmp
sub
add
add
add
dec
adc
xor
and
jge
push
test
aaa
out
in
fwait
stos
push
addr16
decl
rcrb
jmp
es
nop
push
pop
pop
repz
mov
lea
mov
mov
lret
call
jge
enter
add
lock
pop
xchg
ds
add
add
test
mul
fisubrs
fadd
xchg
mov
daa
push
cmp
mov
push
filds
add
add
mov
add
add
cmpl
jecxz
add
add
jmp
mov
xor
icebp
sarb
inc
sub
adcb
add
add
and
sbb
add
out
movsl
mov
pop
add
xor
push
jmp
pop
sub
insb
add
add
insb
mov
ret
xchg
sti
cmpsb
and
aaa
test
lods
pop
repz
dec
loop
adc
add
add
ds
add
dec
mov
rcl
inc
lock
sub
add
add
out
out
xchg
xchg
push
cmp
iret
and
add
add
ret
adc
insl
aam
dec
pop
xlat
stos
ret
mov
scas
imul
mov
in
test
push
cmp
movsb
dec
add
add
xor
mov
aaa
ficoml
dec
mov
inc
or
in
push
and
add
add
xchg
cli
lock
mov
add
les
pop
scas
push
lret
gs
mov
mov
add
add
or
push
or
cwtl
mov
dec
jle
int3
add
add
add
sub
lds
arpl
or
add
add
shlb
andl
adc
xor
jg
rorl
xchg
pop
or
mov
add
add
cmp
pop
shlb
fcom
xchg
bound
pushf
shll
add
add
stos
cwtl
jp
xchg
or
int
mov
jp
mov
xchg
aas
and
add
fsubr
in
iret
call
add
add
push
inc
inc
pop
dec
cmp
sbb
shl
xchg
dec
sbb
mov
sbb
arpl
pop
test
cmp
mov
fcoms
aad
mov
add
cmp
pop
xchg
andb
add
inc
fwait
adc
adc
and
loopne
inc
push
pop
push
mov
mov
scas
pop
and
add
add
add
fisttps
add
mov
mov
add
btcl
cmpsl
jne
sub
push
cmpsl
add
jbe
sahf
hlt
outsl
pushf
adc
mov
mov
sti
icebp
jle
mov
or
add
add
jecxz
stc
ret
enter
add
pop
mov
outsl
mov
in
cmpsb
sbb
add
add
divl
inc
add
add
insb
add
add
adc
push
les
ss
fimull
xchg
push
xchg
jg
jnp
pop
jp
add
jo
popa
lret
add
add
inc
add
andb
add
add
mov
int
in
rol
xchg
scas
pusha
add
add
ret
fistpl
movsl
out
push
cmp
ficoml
jb
mov
dec
mov
sbbb
testb
sub
add
xchg
lds
lret
mov
out
mov
and
pop
mov
stc
xor
add
scas
inc
mov
pusha
add
add
testl
popf
and
add
add
pop
addr16
in
bound
add
add
jno
int
in
int
jmp
pop
pop
mov
inc
or
fidivrl
fimuls
add
add
inc
getsec
cli
xchg
scas
jnp
in
xchg
inc
and
and
xor
dec
mov
testl
inc
gs
jp
push
push
lods
xorb
xchg
add
fwait
inc
popa
mov
movsb
cmp
sub
shr
ror
sub
shl
cmpsb
pop
insl
popf
or
push
jnp
or
add
add
fwait
mov
xlat
xor
add
mov
dec
mov
scas
cmp
mov
push
push
ljmp
mov
fidivl
int
stos
test
jmp
add
xor
int
and
data16
jno
cltd
xlat
and
add
add
aad
sbb
sub
add
add
jb
movsb
or
mov
lock
xor
push
dec
andl
pop
push
xchg
popa
call
in
mov
lock
mov
add
imul
testl
add
sbb
sub
sbb
and
jl
adc
mov
add
add
pop
add
add
rorb
pop
cli
mov
jbe
push
cld
push
mov
movl
mov
add
add
sub
add
add
add
dec
xchg
jno
rclb
mov
add
add
sbb
xor
repnz
xor
inc
add
test
sub
orb
jnp
ljmp
add
ret
mov
add
scas
and
cwtl
lret
xchg
shr
adc
outsb
xchg
loop
ljmp
sbb
xor
pop
mov
pop
inc
cli
mov
add
add
mull
mov
stc
add
jns
and
fldl
add
sub
mov
inc
test
out
mov
sub
adc
addl
add
add
xchg
add
jbe
cltd
mov
mov
adc
inc
add
add
loopne
mov
add
add
sub
out
shl
xchg
lods
shl
ljmp
les
add
mov
xchg
mov
cmp
add
leave
add
push
cmc
in
adc
add
jo
cmp
rol
sub
mov
add
mov
loopne
dec
mov
sbb
cmpsl
sub
add
add
xor
add
lahf
sub
add
add
icebp
xchg
and
repz
aaa
ds
call
fidivrs
add
clc
repnz
mov
daa
inc
add
add
cmpsl
pop
jge
lahf
inc
add
add
cmp
push
shrb
add
ret
stos
or
add
add
rcll
cmp
lret
in
sarl
or
pop
jnp
out
das
or
cmpsl
push
adc
cli
add
xor
int
pop
aaa
shl
dec
add
add
mov
dec
pop
jl
iret
dec
out
adc
add
add
jns
mov
mov
cmc
xchg
adc
push
jl
xchg
mov
popa
inc
mov
mov
xlat
or
add
add
ljmp
add
pop
jno
jns
mov
jp
push
cmpsb
push
inc
lds
xchg
repnz
dec
add
add
sahf
and
add
and
add
dec
out
mov
add
add
rcrl
mov
push
andl
mov
cmp
arpl
push
stos
mov
iret
inc
jae
fnstsw
test
adc
xchg
cld
jb
add
add
addr16
imul
popf
cmp
xchg
sub
add
add
add
add
out
dec
mov
repnz
lods
pop
addl
lods
divb
adc
cmc
mov
add
jo
call
addl
popa
pop
push
jns
add
cmp
push
pop
mov
add
dec
push
jns
xor
in
cmp
xlat
out
sbb
add
add
add
test
mov
stos
mov
and
add
add
cs
in
dec
pop
adc
pop
scas
movsb
add
add
add
adcb
outsl
cmp
orl
repz
das
jbe
fdiv
sub
jmp
push
je
add
inc
add
add
add
pop
in
arpl
adc
jo
fildl
sub
lret
je
sub
mov
pop
int3
movsl
pop
jle
mov
data16
clc
in
cmp
add
add
movsl
and
int
aas
jne
repz
cmp
fiaddl
add
add
xor
shlb
and
inc
adc
or
mov
call
fistl
jne
hlt
pop
lock
mov
adc
mov
push
fwait
dec
sub
add
add
cwtl
enter
jle
jae
xchg
dec
add
add
stos
lea
addr16
pop
std
adc
loop
popf
sbb
mov
add
add
sarl
pop
ret
cli
jbe
scas
fsubp
sub
add
add
imul
cwtl
pop
mov
sbb
outsl
mov
into
pop
push
fld
sahf
test
pop
int3
sub
pop
cmpsl
mov
addb
lret
push
pop
subb
dec
test
jns
mov
les
mov
sub
cmp
jp
je
rcll
aam
push
jp
ror
sbb
sti
add
add
add
pop
das
dec
add
add
xchg
jo
data16
sub
pop
jb
stos
xor
jl
ljmp
ret
mov
add
sbb
xchg
fcomps
cmp
dec
add
add
insl
repnz
and
dec
push
adc
add
add
xchg
addb
inc
mov
test
add
lods
fmul
push
insl
adc
jp
shlb
add
add
sub
add
shr
dec
inc
xor
inc
cmp
mov
lods
scas
adc
sbb
repnz
aaa
sbb
sub
add
add
sub
jecxz
xor
add
add
dec
add
add
or
lret
pushl
cwtl
int3
cmc
repnz
sub
out
sub
nop
xchg
mov
add
add
lahf
ret
add
add
loop
das
cli
stos
xor
add
add
movsl
gs
add
cs
sbbb
jg
addl
add
add
movsb
or
xor
test
jbe
sub
std
jg
fisubl
add
dec
cwtl
repz
adc
cmp
icebp
insb
add
add
xchg
cmp
add
add
and
ficoms
add
popf
cmp
jecxz
push
cmp
mov
cld
lods
pop
and
add
add
adc
add
add
adc
xor
test
cwtl
in
in
mov
gs
jp
sub
jns
loop
jl
mov
push
cmp
inc
xor
add
mov
addb
jae
test
add
add
add
add
clc
outsb
es
pop
adc
mov
sbb
push
jne
or
pop
xchg
mov
mov
aas
push
add
stos
inc
lcall
repnz
jle
je
add
add
cmpsl
jmp
cwtl
mov
adc
lds
add
mov
jmp
dec
adc
push
add
add
add
push
ret
cmc
loope
mov
push
inc
cmpsl
push
pop
in
mov
in
mov
nop
push
leave
incb
jbe
add
add
xor
add
add
add
add
mov
add
xchg
push
gs
add
imul
mov
mov
push
fstp
ror
mov
jl
negb
out
addr16
inc
mov
add
out
aas
pop
ja
xlat
add
insb
add
add
cwtl
hlt
adc
sub
mov
push
jae
cmpsb
dec
je
sbb
mov
faddp
xchg
je
adcb
cli
das
rcr
outsl
das
push
sbb
pop
push
loopne
push
fnstenv
int3
loope
sarb
into
xchg
addr16
add
add
add
pop
lea
cwtl
int3
pushf
inc
and
mov
add
cld
jge
mov
push
add
loopne
gs
sub
clc
fstpt
jp
push
es
jl
add
mov
inc
out
sub
jg
add
ljmp
sub
add
add
xchg
add
test
insl
sbb
add
add
pop
mov
push
adc
push
add
add
add
add
add
das
mov
mov
fchs
mov
add
fcoml
mov
jae
and
or
add
add
dec
stos
xchg
mov
or
lock
xor
and
inc
lahf
push
test
jl
add
mov
push
mov
sub
add
add
pop
nop
push
ljmp
add
add
or
xor
scas
jecxz
roll
add
add
dec
ret
lret
stos
es
add
nop
pop
int
scas
enter
popa
subl
jo
adc
into
jb
mov
add
add
scas
add
add
add
push
push
xor
subb
add
add
test
aad
rclb
jo
dec
add
add
mov
shrb
loope
dec
sbb
ja
out
jns
jnp
pop
test
and
je
out
push
mov
das
setns
mov
mov
or
add
add
mov
add
sub
add
add
sub
dec
lds
mov
mov
add
push
stos
pusha
mov
int3
jne
mov
push
fists
inc
push
sub
push
pop
loop
adc
mov
add
add
add
add
adc
inc
mov
rorb
add
add
lock
mov
mov
mov
dec
add
add
jbe
add
add
enter
dec
sahf
mov
hlt
and
add
add
xor
dec
aas
ss
in
sub
add
add
adc
add
mov
pop
lahf
and
mov
sbb
pop
jg
out
add
add
mov
mov
pop
fs
clc
adc
rcrl
add
pop
adc
je
dec
mov
jl
xchg
mov
add
lcall
pushf
lds
dec
shll
sub
add
add
in
and
in
or
add
add
add
add
push
ljmp
arpl
sbb
pop
pop
sub
push
pop
push
inc
fdiv
aam
popa
dec
inc
jmp
ret
jnp
cltd
les
xor
adc
fidivrs
push
imul
add
add
add
add
add
mov
rclb
add
lahf
mov
xchg
pop
daa
pop
inc
mov
outsl
mov
xchg
gs
add
add
add
add
add
add
repnz
fcomi
popa
roll
mov
mov
negb
dec
jmp
or
add
add
cltd
shr
fbld
or
jge
mov
test
aad
mov
jmp
xchg
or
repnz
sbbb
repnz
add
add
into
je
ret
pop
pop
xchg
aas
push
dec
mov
mov
xchg
adc
cmc
mov
es
xor
add
mov
add
add
sbb
and
negb
imul
aad
lds
and
test
add
add
or
aad
icebp
ja
adc
push
inc
sub
add
add
add
and
add
push
mov
cmp
xchg
xchg
imul
xor
cmp
add
cwtl
ja
xor
add
add
rorl
jmp
jp
mov
jge
les
stc
orl
push
addb
mov
inc
mov
jmp
lret
int3
push
pop
push
push
add
arpl
nop
into
adc
loopne
inc
sub
mov
jmp
jecxz
out
add
add
out
daa
mov
dec
in
stos
mov
add
add
cmpsl
jb
pop
int
movb
aas
push
mov
sub
push
lods
addb
sbb
bound
dec
add
add
add
pop
jbe
icebp
popf
arpl
fimuls
popa
nop
les
add
add
mov
mov
int
cmc
mov
lea
inc
xchg
stc
fwait
pop
mov
loop
jg
jl
mov
inc
add
add
test
pop
add
xchg
mov
mov
push
mov
mov
and
add
add
scas
in
js
or
add
add
push
adc
or
mov
add
add
pop
sti
leave
and
add
add
clc
pop
or
addr16
dec
dec
mov
push
mov
mov
lret
pop
pusha
add
add
sbb
rorb
lock
mov
daa
add
add
add
add
add
mov
lret
repz
aad
mov
mov
rolb
je
mov
filds
add
loop
lods
add
mov
xor
pop
enter
std
push
dec
mov
movl
mov
push
fldt
in
mov
sub
mov
imull
jne
stos
lret
imul
xchg
in
insl
mov
pusha
add
add
xor
jne
mov
add
das
pop
popa
jecxz
call
es
shr
mov
roll
cmp
ret
arpl
mov
add
add
add
push
dec
mov
push
mov
dec
jecxz
add
add
xor
enter
add
jge
test
fcompl
cli
inc
mov
mov
aam
mov
stos
jae
orb
ret
or
mov
lret
push
fiadds
add
add
imul
hlt
cmpsl
loopne
sub
push
imul
xchg
cmp
inc
xchg
hlt
ljmp
cmp
dec
leave
loope
mov
shrl
add
mov
test
cmp
jns
sbb
mov
add
add
or
add
mov
daa
cld
lret
dec
in
gs
addr16
inc
dec
cld
or
cmp
mov
cmp
les
mov
add
jo
sbbl
test
sbb
and
mov
sub
xchg
repz
dec
mov
mov
call
jb
sbb
cmc
xorl
sub
jo
xlat
inc
push
mov
and
subb
lds
add
add
add
hlt
es
add
add
push
jae
pop
sti
mov
decb
ss
aas
xchg
inc
fwait
push
inc
xchg
stos
rcl
xchg
repnz
inc
outsl
fdivrl
dec
mov
ss
sbb
add
add
decl
dec
in
fs
inc
mov
xchg
data16
daa
sbb
add
add
ds
jg
or
xor
jb
test
inc
jbe
pop
adcl
mov
inc
mov
mov
xor
shrl
mov
popf
sub
add
add
jp
mov
es
mov
es
mov
loop
enter
mov
add
add
fisttps
push
scas
das
sbb
pop
fisubrl
imul
add
enter
pop
dec
mov
js
test
xchg
jmp
pop
movsb
rclb
lock
aas
out
mov
mov
xchg
out
aad
jno
push
and
jecxz
ret
add
add
outsl
pop
pop
xchg
pop
and
add
add
add
mov
das
aas
sbb
add
add
iret
push
nop
or
jb
test
pop
push
adc
jbe
ja
in
mov
and
add
mov
sbb
std
stos
cmp
lret
pusha
mov
jp
fidivrl
and
add
add
dec
mov
loopne,pt
add
add
add
dec
mov
jns
lods
ret
sbb
add
inc
adc
ss
pop
ret
sbb
test
popf
fwait
mov
mov
mov
push
sub
pop
xor
mov
aas
sbb
in
mov
add
add
pop
ret
iret
test
push
sti
mov
out
mov
les
adc
ljmp
dec
mov
movsb
pop
ret
add
add
sub
add
add
cmp
add
cmp
add
add
mov
add
push
add
add
add
sbbl
cmp
add
cmp
add
add
xor
add
add
scas
push
inc
pop
add
test
pushf
mov
and
popf
sbb
fstpt
call
add
mov
in
int3
fidivl
pop
adc
imul
add
adc
push
dec
add
add
stos
lods
idiv
mov
add
add
pop
insb
mov
repz
inc
xor
ret
ficomps
and
adc
jp
aas
fcompl
insb
add
add
push
cmpsl
ffreep
xchg
in
pushf
push
mov
cmp
pop
push
int3
mov
add
add
add
mov
inc
sti
push
mov
mov
in
leave
mov
mov
popa
or
mov
pop
push
dec
mov
pop
xor
add
add
lock
div
and
add
add
in
push
push
inc
cld
in
jg
jp
jecxz
mov
add
add
ds
push
and
add
add
sbb
dec
lds
xchg
fdivrs
xchg
mov
insl
push
push
mov
xor
loop
je
xchg
or
ret
bound
je
arpl
cmpsl
jno
or
add
add
sub
add
add
fwait
jae
out
push
push
ret
add
add
rolb
shll
dec
add
add
mov
add
gs
add
add
add
xor
sbbb
adc
add
add
add
xor
stos
xor
add
add
andb
mov
cmp
jle
xor
jo
shlb
add
jle
dec
shrl
add
add
lret
pop
sbbl
loop
in
loop
or
les
adcl
dec
in
or
add
add
push
test
leave
scas
adc
adc
rcl
pushf
sbb
inc
sbb
sub
add
mov
add
sbb
lock
xchg
int
pop
loope
sbb
cli
xchg
mov
jp
mov
and
add
add
jbe
insl
je
cmp
out
mov
dec
andl
out
or
add
add
sbb
inc
xchg
mov
add
add
xchg
icebp
sbbb
add
add
add
loop
push
or
or
stos
sbb
out
mov
push
shrb
add
add
mov
add
add
adc
mov
test
jge
xchg
loopne
adc
xor
pop
out
push
mov
hlt
mov
testb
add
add
sub
add
add
enter
cli
add
adc
into
daa
adc
dec
add
add
push
jns
add
add
add
add
shll
lahf
jp
mov
enter
mov
push
sbb
add
xchg
iret
mov
and
add
add
arpl
cs
xchg
mov
mov
pop
stos
or
sbb
cwtl
pop
stos
outsb
and
sub
add
add
mov
jno
adc
in
aad
inc
add
enter
add
arpl
outsl
or
xor
add
add
add
fiadds
rcrb
test
xchg
mov
jmp
inc
les
or
add
add
les
push
mov
bound
bound
bound
lret
cmp
mov
arpl
in
loopne
std
sub
add
add
inc
lcall
xchg
rcl
push
mov
add
xchg
xchg
je
iret
test
add
icebp
add
pop
add
add
add
cmp
add
or
add
add
call
and
add
add
add
add
mov
xchg
adc
cmpb
fists
das
fnstsw
mov
cmc
ret
xor
mov
lods
dec
lret
into
dec
stos
adc
loope
push
mov
ds
pop
dec
jbe
push
data16
les
rcr
stos
cmp
add
add
add
add
add
aas
adc
ss
cmc
lods
bound
or
add
add
ds
pop
mov
out
mov
es
mov
pushw
mov
dec
pop
jle
jle
lahf
or
add
add
or
stc
cmp
sbb
cmpb
mov
xchg
mov
lahf
mov
add
lods
xlat
data16
mov
mov
mov
repnz
add
add
add
add
add
fidivrs
sbb
jo
adc
popf
mov
sub
jns
into
sub
dec
dec
inc
jl
mov
lcall
add
mul
dec
inc
push
push
lds
stos
repnz
dec
pop
out
dec
push
xlat
mov
add
add
add
sub
mov
mov
inc
mov
in
shlb
ds
mov
icebp
fstl
dec
mov
xlat
loope
jecxz
jl
scas
lret
fcoms
pop
dec
jg
ljmp
dec
mov
fistpll
addl
add
pop
popf
negl
inc
jns
add
add
push
jno
in
or
add
xor
aas
out
and
xchg
xor
inc
test
xor
or
les
pop
nop
dec
add
add
test
inc
sbb
out
dec
add
add
push
sbb
int
mov
testl
add
add
add
add
xchg
mov
jne
rorl
sub
sbb
dec
call
add
add
cld
pop
and
add
add
jo
mov
push
xchg
xchg
mov
imul
sub
add
add
inc
mov
add
add
loopne
add
aam
pusha
mov
inc
mov
mov
mov
cwtl
adc
repz
mov
cmpsl
or
add
add
out
jg
sub
fiaddl
ljmp
mov
sete
sub
arpl
fists
cld
sbb
out
js
pop
sbb
add
mov
cltd
or
push
insb
add
add
mov
xchg
mov
mov
add
cmp
popl
add
add
push
pop
mov
push
or
mov
or
cld
out
gs
movsb
adc
pop
mov
aas
add
pop
jb
add
add
add
or
cld
sub
mov
add
int3
clc
mov
add
add
jmp
fldt
hlt
scas
aaa
mov
int3
sub
je
inc
sahf
test
int
dec
sbb
jae
sbb
add
add
sub
add
add
call
cmc
outsl
inc
movsl
mov
jl
xchg
inc
mov
jle
add
and
add
add
or
add
add
andl
hlt
pop
or
add
add
dec
sbb
ret
add
add
pusha
add
add
sar
xchg
sub
add
add
fs
mov
sub
add
add
jmp
jmp
add
add
push
mov
mov
inc
xor
add
add
fsts
mov
mov
push
es
sub
repz
movsl
mov
adc
icebp
add
add
add
nop
in
sbb
jecxz
mov
out
subl
mov
loop
xchg
ja
push
pop
mov
xchg
xchg
pop
adc
cmpl
add
sbb
xor
xchg
mov
stos
les
or
add
add
loope
cmp
cmp
mov
pop
adc
hlt
into
scas
mov
add
add
add
adc
add
dec
bound
imul
jge
add
negl
sub
or
add
add
mov
lcall
bound
into
cli
es
xlat
jp
fmuls
je
mov
cli
pop
push
addb
add
add
add
mov
adc
add
sub
fwait
pushf
jno
es
mov
xor
adc
repz
cwtl
xchg
dec
dec
mov
add
add
mov
xchg
push
imul
mov
das
scas
std
loopne
pop
ret
fisttpll
rcrl
sub
add
add
add
add
push
fldl
outsl
je
ret
in
in
sbb
adc
xchg
pop
leave
jne
push
leave
adc
inc
outsb
add
pop
or
ss
ret
mov
test
cltd
std
sub
jecxz
add
add
add
mov
add
add
add
add
or
add
add
fistl
mov
mov
mov
adc
mov
js
add
add
stos
lds
inc
movlps
add
add
mov
shl
lcall
and
stos
inc
cltd
mov
pop
in
sbb
jne
das
xchg
add
dec
dec
andl
mov
aas
sahf
notb
aad
scas
and
add
add
outsb
mov
add
add
dec
xchg
add
add
adc
mov
sti
fnstenv
movsl
fsubrs
lret
push
imul
sarb
icebp
cmp
mov
lock
jne
pusha
add
add
xchg
movsb
pop
aad
jb
mov
mov
mov
xchg
imul
mov
lcall
add
add
inc
mov
shrl
mov
loopne
and
sub
inc
inc
push
out
dec
mov
and
add
add
dec
mov
push
mov
leave
xor
add
add
add
pop
push
adc
pop
mov
clc
int
mov
dec
mov
add
out
mov
xchg
aaa
push
loop
xchg
jg
mov
jmp
aam
sbb
lds
mov
add
add
xchg
sub
inc
outsl
loope
mov
jg
aaa
push
cld
fldl
outsl
mov
cli
jmp
mov
xchg
xor
bound
xor
mov
add
add
lret
adc
sub
mov
add
add
mov
push
and
sub
mov
push
mov
cmpsl
mov
adc
mov
mov
add
add
add
lds
in
xchg
mov
jns
mov
movsb
lea
mov
ret
dec
and
enter
add
arpl
mov
cli
gs
xchg
mov
lret
mov
and
push
xor
dec
cmp
xchg
cmp
lock
out
mov
or
push
jecxz
add
add
jae
es
lock
popf
aaa
mov
scas
xor
add
test
out
mov
mov
jl
mov
jge
mov
mov
mov
inc
push
add
cmp
lea
mov
in
repz
dec
xor
jne
dec
test
mov
sbb
std
sub
sbb
push
ret
fcmove
pop
frstor
xlat
shr
mov
mov
fisttpl
add
orl
add
add
add
xchg
add
add
call
cmp
lods
and
add
add
roll
dec
cli
or
cs
jle
outsl
mov
clc
mov
jo
iret
mov
mov
mov
test
decb
fcoms
sub
out
scas
dec
add
add
push
notl
lods
add
add
add
cmpsl
stos
in
leave
mov
ret
mov
add
add
clc
jns
jb
sbb
popf
add
add
add
aaa
dec
cmpsb
lret
dec
scas
and
pop
jae
or
mov
stc
or
mov
mov
jle
cs
arpl
aas
imul
mov
add
js
lret
sub
pop
lret
lcall
mov
adc
push
cmpl
and
add
add
clc
adc
cmp
cmpsb
xor
dec
xchg
fimull
add
add
lret
sbbl
call
cmpsb
cwtl
decl
add
in
jb
mov
and
movsb
push
stos
push
push
push
movsb
push
arpl
adc
loope
and
add
add
add
xchg
inc
xor
test
loopne
shll
mov
xor
pop
jns
xor
cld
hlt
fisttps
or
add
add
add
movsb
xlat
cmpsb
in
inc
add
add
add
add
add
cmc
jmp
lcall
cmp
lds
add
mov
push
pop
cmp
jmp
fstpl
sbb
push
inc
lret
add
int
leave
xorl
jge
mov
mov
add
add
sub
add
add
shll
push
mov
add
jmp
inc
adc
ret
test
sub
add
add
add
add
mov
lahf
xchg
shl
clc
adc
mov
pop
and
shrl
add
add
sbb
data16
pop
lcall
add
sarl
addb
jge
lcall
out
lock
sbb
imul
mov
sbb
loop
mov
inc
pop
and
aad
mov
add
add
mov
leave
cmc
cmp
or
add
add
add
add
add
add
pop
insl
mov
add
inc
inc
inc
mov
or
add
xchg
out
lds
add
add
add
add
add
dec
das
sbb
add
lret
dec
cmp
subb
add
fdecstp
sub
xchg
lcall
outsl
orb
jne
and
arpl
adc
loop
jmp
add
push
sbb
iret
mov
lea
dec
mov
test
pusha
mov
ss
mov
xchg
xor
sbb
sbb
jge
jb
into
pop
add
add
or
loope
jne
sbb
pop
aam
in
cld
sbb
shrb
dec
mov
jle
xor
sub
popa
push
mov
outsb
mov
sbb
mov
add
jle
xchg
pop
cmp
sub
int
cltd
sbb
lock
cmp
insl
xor
and
add
add
add
add
mov
lret
testl
add
add
add
add
add
je
add
add
add
push
cs
out
fs
lea
pop
orb
or
add
add
fcompl
dec
inc
jae
push
mov
add
mov
orb
add
add
jmp
dec
mov
test
mov
cmp
push
mov
cltd
in
push
cmpl
add
add
pop
push
sub
in
stos
inc
cmc
xchg
jae
sub
movsb
in
es
dec
mov
push
cmpb
adc
sar
sbb
loope
and
pop
cmpsb
arpl
shlb
imul
mov
inc
scas
notl
inc
mov
push
inc
mov
jmp
mov
insl
xor
push
test
pop
mov
jle
jbe
xor
cwtl
sbb
and
add
add
movl
jle
nop
add
push
loopne
or
pop
add
adc
stos
sarl
add
pop
sbb
insl
lods
ss
xlat
mov
out
iret
mov
mov
push
jp
or
push
xlat
mov
adc
xor
push
clc
sub
addr16
pop
clc
jb
ljmp
insb
mov
xchg
loope
xor
popf
jecxz
and
dec
punpcklwd
push
add
mov
ret
js
mov
aaa
ret
mov
insl
fwait
dec
mov
add
add
add
add
clc
xor
pop
ret
add
add
arpl
add
add
xor
mov
add
add
xor
add
call
mov
adc
clc
jmp
aaa
mov
ret
iret
gs
int
fimuls
shl
mov
or
pop
mov
push
jnp
repnz
imul
xor
add
pop
cli
scas
in
cld
cmc
sbb
jl
pop
popa
mov
add
ss
cmp
in
cmp
dec
jbe
mov
ljmp
test
and
cmpsb
fimuls
jns
push
xchg
jno
lret
in
xchg
pop
fldt
mov
filds
add
add
popf
test
lahf
pop
mov
ds
push
add
add
enter
add
loopne
fsubrl
sbb
outsl
btr
addr16
divb
xchg
add
add
out
dec
xchg
push
and
add
add
fldt
jmp
mov
add
fnstsw
or
leave
xchg
adc
loope
mov
dec
add
lret
insb
add
add
hlt
xlat
or
mov
flds
mov
push
icebp
mov
pop
enter
fdivs
cli
or
loope
pop
mov
dec
in
xor
mov
jns
stos
orb
jp
std
jnp
jle
repz
xchg
pop
loope
aam
addr16
into
dec
add
add
sub
and
add
add
or
pop
xchg
add
xor
add
add
mov
or
push
sbb
cltd
lock
cli
loope
in
xorb
jne
icebp
mov
inc
enter
push
orl
leave
popf
xchg
add
add
lock
sti
jns
xor
icebp
subb
pop
lcall
dec
out
push
mov
jle
jne
xor
adc
mov
or
sti
mov
inc
jb
cwtl
and
pop
mov
out
mov
aas
mov
movsl
xchg
and
add
add
dec
mov
mov
imul
mov
xor
pop
or
xor
fs
std
test
add
jp
jnp
inc
es
divb
in
mov
jbe
push
lock
cld
dec
mov
outsb
sub
sbb
cmpsl
hlt
imul
repz
daa
call
mov
fcoml
inc
add
add
push
dec
mov
jbe
stos
mov
rolb
mov
popf
fdivl
pop
mov
add
add
dec
push
arpl
mov
jle
mov
mov
sub
mov
sbb
das
movsb
bound
call
stos
sub
cmp
in
adc
mov
mov
add
jno
int
stos
inc
mov
cmp
add
add
adc
mulb
mov
ror
push
and
xchg
sub
add
add
add
dec
xor
xor
je
in
lcall
add
mov
test
mov
nop
push
sub
sbb
and
add
add
sbb
sub
add
add
xchg
mov
cli
mov
add
add
add
test
lcall
dec
add
add
stc
sbb
orl
add
aas
stc
movsl
dec
jle
and
aad
push
enter
out
ror
call
das
sarl
xchg
outsb
les
cli
xor
xchg
dec
mov
lret
adc
scas
mov
sub
test
repz
lret
gs
xchg
mov
sub
add
add
add
add
mov
or
add
add
rol
pusha
mov
mov
adc
cli
push
adc
push
inc
inc
add
add
mov
jns
stos
psrlq
inc
cmp
stos
movsl
pop
xchg
xchg
push
insb
add
add
adc
add
add
pop
mov
add
add
scas
or
add
add
add
mov
xor
push
pop
call
pop
xchg
or
add
add
mov
cmp
jb
out
inc
jb
mov
xchg
ret
add
add
outsl
pop
mov
add
add
or
xor
je
aaa
shll
outsb
stos
or
andb
jl
mov
daa
cmp
add
add
xchg
mov
lock
cltd
pushf
div
je
cmp
data16
add
outsl
inc
mov
insl
andb
fs
mov
sti
pusha
mov
and
shlb
imul
add
mov
mov
daa
xchg
pop
push
jno
mov
cmp
shll
mov
negl
out
pop
lea
add
add
jb
out
fildl
and
pop
mov
repz
pop
out
fbstp
inc
jp
mov
sbb
pop
int
cli
xor
add
add
in
ss
cmp
jle
and
cmp
notl
add
mov
push
sarb
add
add
dec
icebp
adc
add
push
fcoml
stos
scas
pop
push
aas
ret
lea
fnstenv
inc
or
mov
mov
cmc
ljmp
add
add
and
adc
pop
dec
mov
outsl
mov
xchg
test
push
cmp
push
xor
and
add
or
add
add
and
add
add
add
mov
jbe
in
leave
xor
mov
int3
jmp
inc
and
imul
add
add
mov
mov
jnp
fstps
in
mov
add
cltd
stc
ljmp
shlb
into
imull
mov
incl
add
add
mov
cmp
outsb
test
add
adc
add
add
rcrl
sub
push
scas
out
ljmp
jnp
sahf
flds
pusha
add
add
out
mov
insb
add
add
sub
add
add
add
lock
add
add
push
aas
or
add
add
push
popf
insl
pop
pop
add
mov
add
add
sub
mov
jbe
imul
sbb
mov
test
test
movsb
xchg
jno
adc
icebp
cmp
or
add
add
add
out
cmp
sub
mov
gs
mov
popf
xor
das
out
testb
add
mov
xchg
jp
jp
and
add
add
mov
mov
push
or
add
add
add
data16
stos
xchg
out
cld
xchg
push
xchg
xor
mov
pop
and
add
add
fneni(8087
fidivs
add
cmpsb
adc
dec
pop
xchg
mov
fwait
inc
xchg
pop
push
inc
fimull
xchg
ret
push
ja
out
inc
sbb
sub
sbb
in
cmp
pop
outsl
repz
sar
sarb
pop
mov
je
mov
xor
movsb
add
inc
aaa
imul
adc
fwait
xchg
mov
lret
adc
add
add
add
add
or
enter
pop
ss
rol
stos
jmp
fs
mov
xchg
add
loopne
mov
ds
out
push
add
sub
jmp
out
hlt
ljmp
ljmp
xor
out
roll
pop
aas
jno
pushf
fnsave
add
mov
and
sub
inc
in
jae
pop
shrb
xchg
mov
sub
fs
mov
xor
sub
scas
adc
fildll
test
jmp
and
lds
xchg
xor
cmovp
out
fdivs
ficoml
mov
add
add
add
add
sahf
push
or
add
add
divb
xchg
mov
xor
jb
sub
add
add
leave
mov
lods
std
mov
add
add
sub
mov
adc
add
add
add
add
jp
aas
scas
push
sbb
xor
xchg
push
imul
add
pop
jbe
inc
out
rcll
repz
inc
icebp
jbe
mov
xor
mov
ret
mov
gs
add
add
add
lods
shrb
xchg
mov
cmp
jge
repnz
cmp
sbb
lret
arpl
dec
push
pushf
mov
mov
popa
add
add
add
cs
sbb
add
add
add
outsl
ficoms
ret
iret
out
xchg
jbe
je
mov
mov
ret
sti
dec
add
add
aas
add
sbb
test
mov
cwtl
xor
daa
sub
pop
fisubrs
arpl
cwtl
inc
and
movsb
xorb
les
add
add
adc
sub
add
add
add
add
add
call
lock
mov
push
lock
leave
je
fwait
jl
lods
shlb
add
add
add
add
mov
xchg
jno
popf
jl
sbb
push
and
add
add
add
add
add
add
cmp
es
pushf
jb
into
test
add
add
add
push
insl
mov
daa
xor
hlt
fsubrl
add
add
dec
push
fistl
mov
mov
shrb
inc
ja
jo
in
clc
fwait
xor
add
sub
cmpsl
or
bound
add
outsb
clc
cmp
xor
and
ja
ficomps
jge
mov
add
add
flds
add
mov
int3
in
int
test
push
movb
add
cmp
dec
in
jp
xchg
adc
sti
sarb
xchg
jb
mov
cltd
add
je
mov
sahf
ss
add
add
add
add
sub
mov
rcrl
aaa
pop
int3
xor
cmpsl
aas
mov
lcall
and
das
repz
pop
lods
ss
mov
cmp
inc
inc
lahf
cmp
add
and
and
mov
int3
and
inc
push
push
xchg
xchg
ja
mov
xor
sub
push
loope
pop
push
das
leave
fidivl
mov
jne
fimull
stos
imul
lret
sub
test
jl
sub
add
add
fmuls
add
add
leave
sub
add
add
add
add
push
sub
gs
add
add
jns
add
outsl
loope
cmp
jae
inc
adc
shlb
inc
aad
fdivrp
mov
sbb
gs
pop
je
push
cmpsl
pop
das
jae
adc
pop
cwtl
in
pop
pop
jb
lahf
fnsave
or
sahf
inc
add
add
call
fldl
add
add
fistps
lahf
movsl
jge
xchg
sub
dec
jne
out
data16
mov
push
aas
sbb
add
add
arpl
inc
sbb
add
mov
mov
add
add
inc
add
add
test
and
test
mov
xor
mov
or
inc
inc
add
add
jp
adc
pop
aad
cmpsb
and
add
add
int3
mov
pop
lds
imul
add
pop
mov
mov
sbb
mov
aam
dec
cmp
mov
dec
push
mov
dec
mov
add
hlt
cwtl
fs
mov
pop
mov
ret
lret
outsl
subb
and
mov
movzbl
dec
add
add
fistpl
mov
add
add
add
cmp
negb
imul
add
add
add
cmp
pop
lods
or
mov
or
push
cmp
scas
mov
lock
cwtl
scas
int3
ret
add
add
or
xor
test
push
jg
mov
jg
ret
pushf
xchg
xchg
pusha
add
add
or
push
mov
ja
cmpsl
loope
pop
add
add
add
mov
dec
in
imulb
adc
dec
add
add
mov
rcrb
adc
sarb
mov
imul
lahf
ret
or
mov
mov
push
repz
mov
add
add
add
and
dec
lock
movsl
sub
add
add
popl
push
pop
mov
xchg
cld
add
sub
add
add
imul
add
add
push
fbstp
pop
popf
mov
add
add
inc
cltd
or
mov
or
mull
pop
fadds
inc
and
shll
mov
into
xchg
mov
mov
sbb
gs
add
add
add
add
xchg
push
mov
cmpsb
push
movsb
mov
test
and
adc
test
mov
push
add
mov
fmul
paddb
mov
mov
cmp
push
push
push
jge
push
aam
mov
das
rcll
add
popf
push
scas
dec
add
add
shl
mov
pop
cmc
jb
das
or
add
add
add
repnz
cs
jle
add
add
sbb
icebp
lods
cwtl
repnz
mov
or
add
add
add
add
jno
leave
ss
sub
cmp
and
add
add
mov
cmp
dec
or
fimull
scas
adc
add
fidivrl
cltd
imul
add
mov
add
add
lds
scas
or
add
add
push
int3
pop
and
mov
add
ja
mov
shrb
add
add
cmp
mov
adcl
xchg
repz
adc
cmp
int
mov
push
mov
mov
sbb
and
add
add
mov
stc
or
jp
add
add
es
inc
dec
dec
stos
push
test
add
add
add
jmp
sub
lock
jae
mov
and
leave
push
dec
pop
mov
add
add
add
add
add
scas
push
jnp
mov
add
add
xor
add
cltd
mov
or
xchg
stos
sar
jg
adc
add
jo
sahf
jp
and
add
add
xchg
cmc
sbb
xor
add
aad
mov
add
push
and
add
add
popa
test
ret
cmp
inc
scas
mov
mov
in
add
add
bound
add
dec
mov
mov
es
mov
enter
in
sti
sahf
jle
cmp
jnp
cmp
add
add
popa
test
je
adc
out
pop
aad
rcl
lret
mov
mov
call
push
sbb
add
leave
mov
into
imul
stos
test
test
addb
ficompl
repz
ljmp
icebp
jle
xchg
mov
add
add
add
add
mov
outsl
hlt
sub
mov
js
arpl
rorb
pop
sbb
nop
push
shl
cmp
test
jae
popf
xor
cld
add
add
push
or
sub
gs
mov
lret
pop
rcrl
add
add
add
push
sub
jg
das
bound
sbb
mov
add
in
icebp
inc
cli
fwait
cmpsl
mov
in
sub
pop
adc
cmc
fdivrs
fidivl
adc
push
xor
sbb
mov
add
add
add
fadd
out
push
pop
shll
add
add
arpl
stos
xchg
js
in
hlt
pop
test
and
add
add
and
lods
dec
push
add
add
cmp
sub
mov
mov
and
sub
xchg
data16
sub
or
rorl
mov
pop
cmpsb
or
mov
jae
sbb
mov
lods
aam
outsb
adc
pushf
pop
push
xchg
pushf
in
daa
test
ret
xor
arpl
out
push
add
mov
adc
xor
and
cs
jo
add
add
xchg
loope
inc
test
dec
dec
jbe
add
xchg
xor
pop
out
std
adc
jbe
stc
pop
pushf
fsubs
lods
jl
push
cmp
int
cmovge
and
add
add
mov
addl
int
or
and
add
add
xor
or
add
add
into
mov
mov
ljmp
aad
sbb
in
add
sbb
dec
popf
out
pop
adc
add
add
shl
cmp
or
inc
xchg
js
mov
xchg
and
mov
push
into
outsl
pop
adc
xchg
scas
and
add
add
mov
pusha
mov
sub
cmpsb
adcl
add
add
out
pop
inc
mov
test
xor
mov
imul
ret
lret
std
in
mov
sbb
fdivs
xor
add
fiaddl
add
add
int
add
add
add
pusha
add
add
dec
insl
gs
push
leave
int3
mov
sbb
and
add
add
aad
add
add
add
add
push
jae
pop
lcall
pop
ljmp
xor
movsl
stos
push
in
add
xlat
jmp
add
popf
icebp
push
lock
mov
xchg
std
or
add
add
push
adc
and
add
add
je
enter
mov
jnp
inc
test
pop
lcall
fbld
xor
xchg
out
movsb
sub
imul
or
popf
xchg
sub
add
add
adc
lcall
jp
and
add
add
pop
add
inc
mov
xor
int
jo
cmp
xor
ficoms
arpl
mov
imulb
movsl
daa
xor
push
stos
fnstcw
or
add
add
out
mov
push
leave
jae
mov
mov
cmpsl
lds
or
add
add
add
imul
push
jo
icebp
aas
mov
sbb
inc
mov
dec
sub
pop
cmc
sub
add
add
cs
mov
aaa
aaa
mov
icebp
mov
mov
fdivrs
add
add
sbb
jns
dec
mov
add
add
stos
aad
jecxz
cmp
aad
dec
or
inc
stos
add
add
add
xchg
movsl
pop
rclb
gs
add
adc
pop
out
add
add
add
add
jo
call
jne
jae
jmp
lcall
bound
add
add
and
sub
hlt
pop
xchg
lret
enter
mov
fisttps
jmp
sahf
xchg
mov
pop
cli
xchg
or
add
add
xchg
icebp
cs
add
add
ljmp
out
mov
lods
xchg
rorl
cld
add
pushf
jbe
outsb
inc
mov
fldcw
add
add
push
sub
mov
loopne
mov
imul
jecxz
in
mov
add
mov
pmulhw
mov
mov
push
add
add
and
push
jbe
mov
rcrl
test
mov
add
cwtl
adc
and
js
mov
clc
fldt
adc
jp
sahf
mov
inc
jmp
xchg
sub
mov
xchg
push
or
ljmp
filds
add
add
jnp
mov
mov
add
in
mov
cltd
loop
mov
mov
movsl
cmp
insb
mov
stc
pop
pop
or
insb
add
add
jae
outsb
lahf
stos
jae
mov
lea
sbb
add
add
sub
add
add
dec
add
add
clc
test
scas
sub
add
add
push
mov
mov
jae
dec
mov
sbb
jmp
loope
add
add
imul
jns
dec
stc
mov
lods
cltd
int3
mov
add
stos
arpl
jbe
into
lea
sub
hlt
jne
sub
add
sbb
nop
insl
sub
fcomi
lret
pop
scas
ficomps
fisubs
xchg
cmp
leavew
stos
push
xchg
sbb
aas
ss
scas
nop
mov
mov
inc
jg
fwait
aaa
mov
add
adc
add
ret
test
clc
mov
mov
fsub
and
add
add
push
sysenter
popf
pop
roll
loopne
into
shrb
add
pop
loop
push
push
mov
mov
andb
pop
sbb
and
add
lcall
testl
add
add
mov
add
add
mov
add
add
dec
lret
pop
jge
stos
xor
xor
inc
mov
add
add
add
stos
into
scas
pop
test
cmpsb
cmpsb
sar
sarl
fwait
jb
cmpsb
jno
jb
cs
sub
cmp
in
or
xor
pop
push
out
jmp
or
add
add
je
sahf
shlb
xchg
jg
adc
bound
xchg
repnz
out
roll
sub
mov
test
aad
cmp
sahf
pop
inc
in
pop
add
fldenv
test
lock
add
add
dec
cmpb
add
add
fsubr
add
add
pusha
mov
sbb
insb
mov
stos
cmp
addr16
sub
cmp
push
push
insb
mov
fimull
xor
add
add
add
add
push
pop
cwtl
rcll
mov
adc
mov
xor
lods
lods
ficomps
add
inc
mov
mov
add
inc
add
add
inc
das
pop
negl
add
add
stc
jg,pt
inc
add
add
or
add
add
xor
mov
mov
add
add
inc
fisubs
mov
add
add
sbb
lods
push
outsl
pop
icebp
loopne
push
adcb
xor
movsb
cmpsb
inc
mov
mov
inc
dec
mov
das
pop
pop
insl
lret
cltd
cmp
dec
inc
xorl
pushf
lcall
or
pop
ficoms
add
add
mov
loopne
pusha
add
add
iret
or
add
add
in
push
lcall
imul
mov
add
add
rcrl
inc
xchg
push
mov
mov
in
nop
push
retw
jbe
and
add
xor
bound
add
add
decb
add
add
sub
and
sub
add
add
dec
out
and
fisubrl
add
add
andnps
xchg
sti
je
hlt
mov
sub
dec
add
add
in
xlat
out
push
ljmp
addr16
out
xor
ffree
mov
add
shll
add
add
cmp
mov
dec
sbb
sar
mov
out
stos
jnp
in
adc
rorl
cmp
in
lods
pop
in
pop
pop
sti
out
lea
sub
pop
dec
mov
repnz
fs
popf
pop
mov
enter
pop
jnp
xlat
pushf
adc
add
add
dec
add
add
test
sub
inc
dec
xor
divb
aam
add
add
add
fwait
aam
js
mov
add
add
adc
add
add
mov
leave
sub
mov
loopne
add
jne
cmp
add
add
imul
jns
mov
ret
and
adc
cld
fwait
sub
add
add
pop
nop
test
mov
and
inc
in
loope
mov
ret
fmul
roll
mov
in
jp
mov
sub
inc
in
ljmp
add
adc
add
jecxz
stos
xor
add
add
loop
ds
jmp
xchg
add
loopne
imul
jbe
sub
je
dec
mov
test
dec
or
aad
push
aas
cli
js
gs
xor
rorb
xchg
lods
sub
pop
sbb
mov
test
adc
add
add
or
add
add
jle
pop
mov
aas
ss
push
shll
jge
mov
add
add
pop
jae
fnstenv
add
add
add
add
popa
cmc
sub
pop
mov
add
add
xor
mov
push
adc
push
stc
mov
in
ret
add
add
imull
sbb
mov
je
mov
mov
pop
outsb
lods
clc
adc
add
add
mov
add
add
int
jb
jmp
add
not
in
mov
add
inc
add
add
sti
push
test
stos
add
and
out
sub
mov
inc
sbb
mov
add
fistl
xchg
addl
push
xlat
movsl
add
femms
or
add
add
sbb
je
pop
push
stos
xor
ljmp
add
add
sbb
and
add
add
divb
adc
add
add
sahf
xchg
fsubrs
mov
inc
mov
aad
bound
xchg
jo
jno
and
lret
add
add
add
add
inc
les
cmp
sbb
add
add
movsl
inc
add
add
adcb
mov
ret
fdivs
add
or
pop
insb
mov
mov
ret
enter
push
xchg
pop
mov
cld
sub
aam
popa
mov
mov
add
push
mov
lock
sbb
arpl
mov
jae
pop
mov
mov
cli
cmpsb
sub
add
add
mov
mov
dec
jno
insb
mov
test
mov
addr16
jnp
xchg
add
xor
loopne
sub
add
pusha
mov
cs
jp,pn
inc
mov
push
bound
sbb
pop
xor
mov
sub
shl
scas
jnp
aaa
ficompl
inc
xchg
push
sub
jne
mov
add
add
in
or
leave
dec
lods
dec
xchg
call
mov
sbb
and
jmp
pusha
mov
iret
mov
shll
jmp
in
sub
add
lods
repz
sbb
inc
add
add
movsb
lahf
inc
push
ljmp
sub
add
add
ds
add
add
das
or
sbb
ds
push
mov
mov
add
add
int
gs
mov
mov
pop
sub
add
add
cmovns
jge
mov
call
sub
cmp
add
ffree
and
add
add
add
mov
icebp
sti
and
jg
lcall
push
in
mov
repnz
add
ret
mov
push
pop
sub
add
add
call
add
add
add
add
loop
mov
out
pusha
mov
xor
cmp
lods
pop
rorl
add
add
add
inc
mov
xchg
stos
ficoms
sahf
test
andb
push
int
scas
mov
scas
cld
imul
insl
jb
push
fsubrs
add
add
lods
stos
hlt
ljmp
sbb
or
add
add
ret
out
shl
lods
inc
adc
pop
movsb
sub
inc
call
add
stos
pushf
mov
sbb
les
add
add
cmp
movsl
mov
int
outsb
pop
xor
mov
jg
cs
adc
addr16
sahf
mov
add
mov
cltd
xor
mov
pusha
mov
scas
sub
add
add
les
inc
test
add
add
adc
mov
cld
and
sub
add
add
push
inc
pop
dec
lea
add
sub
lcall
mov
xor
scas
shl
add
mov
lahf
stos
jle
jns
pop
cmp
mov
xchg
in
scas
dec
add
add
add
scas
jnp
out
std
or
push
decb
loop
mov
xlat
mov
fidivrl
int3
and
add
add
add
cs
push
out
sub
add
add
sub
add
pop
imul
data16
add
add
sbb
loope
push
div
dec
mov
into
add
add
outsb
stos
stos
lock
mov
call
sti
out
push
pop
push
dec
inc
mov
cmc
jne
in
pop
movsb
xor
add
mov
cmpsl
ja
test
aas
inc
cmovb
add
add
pop
leave
ret
adc
and
pushf
adc
push
adc
cmp
or
add
add
mov
lods
pop
jae
push
or
sbb
mov
std
mov
add
pop
icebp
push
dec
or
add
add
cmp
inc
sub
or
add
xor
xchg
add
shl
cmp
mov
out
rorl
jmp
or
push
roll
add
add
out
push
xor
repz
sbb
leave
jle
mov
insb
mov
sbb
add
cmp
lahf
in
stos
dec
add
ja
bound
rol
mov
loope
fcomps
adc
add
add
fnstsw
add
add
add
out
lahf
pop
jg
xchg
pop
fiaddl
and
fldcw
pop
fisubrs
mov
popa
arpl
mov
add
cmc
repz
pop
or
popa
andb
js
xchg
hlt
xchg
in
push
out
insl
mov
mov
xor
add
mov
xlat
into
addr16
aaa
iret
mov
add
sbb
dec
shrl
add
add
repnz
or
cmc
into
sbb
addr16
xchg
sti
repz
js
iret
xchg
push
rclb
into
xor
daa
adc
mov
test
add
add
jecxz
ret
add
add
xchg
lock
ja
adc
add
scas
xchg
push
lods
mov
adc
push
gs
add
add
cmc
ds
out
aam
mov
pop
sbb
or
jns
lock
fimuls
popf
push
push
inc
pop
dec
mov
jmp
xchg
push
fistpl
push
ja
push
and
pop
es
xor
xor
add
addr16
jne
rolb
add
add
add
inc
mov
dec
mov
inc
ljmp
add
test
push
loop
iret
adc
dec
xchg
sbbl
mov
push
mov
or
and
mov
stos
mov
xor
xchg
nop
test
mov
jo
adc
inc
push
pusha
mov
loop
xchg
std
dec
push
sub
add
add
or
add
add
add
add
xchg
add
add
adc
std
sbb
rcrl
shlb
and
mov
add
mov
nop
adc
mov
dec
dec
add
add
loopne
inc
into
stos
sbb
cmpsl
shrb
sti
in
test
out
dec
mov
add
cltd
adc
dec
push
mov
add
mov
in
push
idivb
out
xchg
pop
inc
xchg
cmpsl
inc
jge
xor
sbb
xchg
clc
jecxz
mov
or
add
add
mov
add
add
add
imul
cmp
dec
xchg
mov
mov
mov
cmp
or
sti
xor
mov
je
mov
lahf
push
aaa
repnz
or
lock
add
add
mov
ds
cmp
out
mov
pop
mov
ds
xor
les
lahf
fidivrl
ljmp
mov
std
mov
dec
mov
mov
add
add
je
add
add
dec
inc
cmp
push
sub
push
in
jp
mov
movsb
cs
mov
lahf
mov
mov
xor
xor
movsb
sbb
ret
pop
pop
ljmp
lcall
mov
add
cmpsl
and
add
add
xor
mov
add
ss
add
add
sahf
cmpb
add
scas
add
add
add
andl
mov
dec
outsb
std
inc
dec
add
add
sub
add
add
xchg
push
in
pop
mov
add
add
cmp
stos
lcall
pop
pop
inc
mov
imul
adc
cmc
sub
pop
test
lret
das
or
mov
xor
lret
inc
leave
ja
xchg
je
mov
add
add
sbb
mov
scas
pop
jl,pt
les
imul
repnz
jmp
mov
sub
xchg
pushf
or
add
add
loopne
gs
std
movb
add
adc
cmc
into
loope
popf
mov
fcoml
adc
add
add
jno
mov
add
add
add
add
and
or
inc
dec
shl
adc
push
adc
clc
sub
fidivs
and
popa
aas
mov
sbb
lock
into
xchg
push
aad
daa
cmp
xchg
lds
jg
dec
add
add
ljmp
add
add
sub
bound
inc
xchg
dec
mov
je
int
pop
add
fbld
ret
imul
or
adc
js
out
push
pop
fcompl
clc
pop
scas
ljmp
pop
and
sbb
xlat
cmp
mov
insl
xorb
pop
xchg
jbe
add
fwait
add
xchg
xor
sbb
rcrb
dec
mov
js
cwtl
idiv
mov
and
add
add
sbbl
add
add
hlt
sbb
icebp
mov
xchg
mov
xchg
add
jge
mov
pop
mov
add
adcb
or
imul
lahf
stc
cmp
adc
jno
adc
push
xchg
sub
add
add
das
stc
addr16
rcrb
add
add
ret
mov
jecxz
imul
add
insb
add
add
leave
jle
add
add
add
idivb
sbb
xlat
aas
mov
add
add
jno
inc
andb
add
add
stc
push
mov
aas
mov
outsb
jbe
jne
ret
loop
icebp
sbb
test
add
add
xchg
andb
mov
sub
out
mov
mov
add
add
inc
repnz
mov
mov
jae
add
add
int3
cmp
lcall
sti
lock
adc
cmp
adc
adc
add
add
xchg
jae
icebp
mov
cmp
dec
xchg
adc
loop
cmc
arpl
outsb
fwait
sub
jns
xorps
pusha
mov
test
inc
jo
loope
dec
push
mov
add
icebp
xlat
ret
cld
or
add
mov
lea
push
mov
cmp
push
mov
lahf
xchg
arpl
xchg
call
add
nop
fdivrs
sahf
add
inc
inc
add
add
pushf
fisttps
or
insl
mov
out
fisubrs
or
add
add
fwait
dec
arpl
popa
sbb
jl
ror
or
iret
mov
pop
sti
pop
xchg
adc
mov
xchg
repnz
xor
stos
aam
addr16
loopne
add
add
adc
add
add
xchg
jle
add
add
pop
lods
mov
xchg
add
xchg
and
adc
ret
ficompl
sbb
incb
test
add
imul
lock
loop
in
cwtl
sbb
mov
insl
cmp
pop
test
out
mov
xor
mov
shll
add
pushl
into
mov
out
js
insl
fisubrs
loop
ret
cmp
rcr
negb
or
add
add
add
add
add
add
test
mov
adc
lret
fwait
sub
add
add
mov
add
add
outsl
adc
push
xor
ljmp
lahf
dec
daa
jo
sub
add
add
mov
add
add
jno
orl
and
ret
adc
sti
add
sbb
add
add
jle
enter
add
add
add
and
mov
lret
div
jnp
cli
mov
dec
and
add
add
cmp
pop
subl
bound
mov
sub
hlt
out
push
call
mov
add
add
popa
push
ror
js
lea
mov
sub
add
xor
or
add
add
ss
mov
lock
pop
dec
cs
ljmp
add
sbb
mov
push
movsl
mov
popf
mov
add
push
push
notb
adc
sub
add
add
push
notl
push
push
mov
jno
xor
add
xor
jge
decl
insl
pop
shr
push
popa
mov
push
insl
lret
jle
dec
cld
or
ljmp
xchg
mov
add
cs
mov
sub
jnp
jmp
jmp
xchg
fldenv
inc
add
xchg
inc
mov
push
xchg
sbb
notb
mov
xchg
cmp
pusha
add
add
lods
aad
mov
dec
push
es
pop
adc
cmp
xchg
and
xchg
call
sarl
fnsave
add
push
push
add
push
xor
leave
dec
pop
add
add
and
add
add
sbb
mov
add
movsl
mov
add
add
out
cwtl
outsl
mov
sub
shrb
add
aas
mov
pop
je
jmp
cmpsb
sbb
mov
ljmp
adc
pop
or
in
dec
aam
cmpsb
inc
dec
mov
push
fisubrl
popa
push
and
jle
mov
out
mov
out
inc
cmp
loope
cli
mov
daa
cmp
add
cmpsl
fwait
shl
call
mov
jae
gs
inc
pop
xor
sbb
xchg
mov
rorl
or
adc
sbb
mov
jnp
repz
stos
imul
mov
mov
add
add
imul
cmpsb
sub
add
add
xchg
cs
add
xchg
loopne
ficompl
hlt
ja
dec
sub
adc
stc
pop
test
je
cmc
mov
add
add
les
xlat
insb
add
add
call
sub
ja
loope
mov
imul
out
mov
mov
loop
xor
pop
rorb
jg
sub
or
add
add
fstl
adc
lods
jb
add
loope
add
add
sbb
mov
jle
test
add
add
mov
push
and
add
add
cs
xor
rorb
add
add
add
imul
or
mov
lret
shrl
test
add
add
jecxz
add
add
add
pusha
add
add
jo
mov
mov
inc
lahf
mov
push
xor
sahf
int3
jle
cltd
sub
add
add
mov
je
out
jae
mov
loope
lods
adc
fcompl
fists
pop
or
add
add
andb
add
jbe
mov
sbb
dec
mov
jge
pop
cmp
push
dec
stc
bnd
push
cmp
cmp
add
add
pusha
add
add
popf
pushl
xor
mov
pusha
mov
mov
sub
xlat
test
inc
pop
mov
shl
cmpsl
mov
add
sbb
add
add
jg
push
roll
lock
ja
adc
adc
clc
push
out
dec
mov
in
cmp
mov
or
mov
add
pop
test
mov
inc
mull
mov
clc
xchg
cmp
arpl
add
popf
dec
mov
and
sub
clc
cmp
push
mov
and
insb
mov
add
mov
insl
mov
out
rcr
push
pushf
andb
mov
lea
and
xor
jge
lret
cmp
inc
inc
call
repz
xchg
arpl
add
add
ret
add
add
adc
xchg
sbb
mov
sti
xor
mov
neg
aas
ds
lods
or
mov
pop
aas
xchg
adc
repnz
xchg
or
xor
mov
xlat
xchg
mov
lea
fcomp
mov
loopne
sub
add
dec
leave
mov
int
mov
jo
nop
test
test
dec
or
add
add
outsb
into
sub
xor
nop
adc
cld
and
push
mov
imul
add
add
lret
fcompl
pushf
jecxz
test
mov
xor
jo
inc
in
dec
fidivs
dec
andb
jmp
cmpsl
mov
imul
add
add
mov
add
add
add
add
add
scas
rclb
mov
loop
mov
mov
mov
insl
cmpsb
fdivs
xchg
es
movsb
sahf
rcr
sbb
cmc
sbb
xor
add
xor
xchg
out
push
into
fldl
hlt
push
add
add
add
insl
sub
pusha
mov
shlb
es
notb
mov
outsb
mov
xor
pushf
cmpl
add
add
add
add
rcrb
andl
add
add
add
ret
jae
repnz
jge
and
cmp
inc
xor
push
mov
dec
pop
push
sbb
xor
and
add
add
leave
cli
dec
xchg
lods
jae
dec
dec
jne
mov
cmp
add
add
subb
mov
js
xchg
xchg
ss
add
add
or
mov
cli
mov
add
loope
dec
xor
sbb
call
fwait
shr
lret
insb
add
add
pop
add
mov
xor
pop
lcall
test
out
cmc
loope
xchg
movsl
test
add
add
mov
add
mov
out
scas
fsubs
sti
pop
cli
clc
mov
rorb
call
cmp
outsl
inc
mov
add
add
add
outsl
hlt
addr16
clc
in
xor
add
add
bound
enter
add
cli
aas
and
jecxz
or
jae
jge
adc
add
add
das
cmp
leave
jle
push
mov
cmp
mov
add
add
or
add
add
negl
add
add
fistps
andb
and
add
add
inc
sub
nop
or
mov
jbe
mov
rcl
cmpsb
ss
ffreep
addl
push
iret
popa
sahf
mov
mov
push
mov
add
bound
dec
add
add
mov
mov
mov
sub
xchg
push
dec
lods
mov
ret
jb
lret
sub
icebp
push
sub
add
add
in
movsl
xor
inc
mov
scas
and
add
add
mov
add
add
xchg
shlb
pushf
fistps
mov
mov
subb
insb
mov
push
inc
add
add
lea
pop
testl
xchg
push
push
lret
arpl
mov
adcl
lods
xor
jmp
leave
test
in
cmc
popf
jnp
hlt
mov
xor
gs
jns
pop
mov
jae
dec
add
add
sbb
add
sbb
push
mov
inc
mov
dec
mov
fidivrs
push
xlat
js
leave
adc
inc
ss
and
add
add
xchg
test
in
data16
pop
sbbl
cmp
cmp
ja
sub
sbb
add
add
adc
test
xor
fwait
inc
jle
cmp
js
push
add
outsb
mov
rorb
add
add
and
add
sub
add
dec
inc
mov
or
popa
push
ds
fldt
cmp
add
add
sbb
arpl
add
ja
mov
sub
add
add
gs
shrl
xchg
cmpsl
cltd
dec
imul
and
mov
movsl
push
jbe
sbbl
lcall
aam
cwtl
cmpsb
movsb
xor
add
pop
mov
jg
cmp
add
mov
sub
fistpl
cltd
or
add
add
add
or
add
rep
ret
cmpsl
jl
jmp
aad
mov
mov
add
add
add
std
addr16
je
mov
sbb
jne
add
add
je
movsb
and
add
add
enter
add
add
add
add
xor
clc
mov
mov
add
add
dec
shr
pusha
mov
icebp
push
lcall
add
mov
test
loop
add
add
repnz
bound
inc
push
rcrb
stos
push
mov
loope
sub
clc
scas
mov
adc
add
or
add
xchg
push
aaa
cld
adc
je
xor
mov
dec
jg
adc
mov
add
movsl
call
sbb
sub
in
mov
push
mov
add
xchg
fdivr
push
mov
fcompl
js
ljmp
mov
and
iret
add
dec
mov
insb
mov
iret
mov
fs
fsubs
add
dec
mov
sbb
sbb
je
std
inc
out
sub
clc
imul
lcall
sub
mov
pop
mov
jne
jle
xchg
cmp
mov
add
add
loop
enter
pusha
add
add
test
and
add
pop
outsb
popa
sti
out
sub
push
cmp
mov
pop
xchg
clc
dec
fistpl
jge
popf
sub
push
stos
rorb
adcb
shl
dec
or
leave
out
push
sbb
adc
mov
lods
sbb
gs
adc
mov
adc
pop
jmp
idivl
xchg
lods
and
inc
mov
jl
ret
inc
inc
mov
shlb
sub
fcomps
jle
push
mov
add
add
repz
pop
cli
addl
push
push
stc
pop
js
mov
test
pusha
mov
stos
cmpsb
mov
and
add
add
add
rclb
mov
jg
add
add
jecxz
and
or
add
outsl
or
add
add
and
add
add
xor
mov
iret
sub
das
scas
inc
mov
out
xchg
xchg
and
inc
scas
jl
out
add
add
pusha
mov
movsl
jno
mov
cmp
out
gs
sub
add
add
add
scas
andb
mov
add
push
cmp
mov
add
mov
xchg
and
repnz
push
movsl
fisubrl
fsubl
fimull
loop
test
pop
movsl
dec
mov
xchg
jmp
and
add
mov
pop
loope
pop
mov
js
ficoml
sub
dec
sub
lret
mov
jnp
sub
das
xchg
xchg
and
add
add
add
add
scas
bound
mov
cmpsb
cmc
mov
mov
jne
sbb
mov
add
add
inc
sub
inc
push
repnz
xchg
mov
mov
movsb
and
add
add
sub
mov
mov
jecxz
addr16
xchg
dec
out
jmp
jb
mov
pop
inc
jmp
mov
movsb
mov
mov
sbb
insl
xchg
jle
nop
mov
sub
inc
mov
into
je
add
ljmp
dec
sti
stc
sti
jecxz
mov
fdecstp
les
ret
jl
mov
add
out
push
add
add
add
and
test
pop
pop
in
sbb
xchg
incl
rcl
fs
roll
push
jle
fs
repz
add
add
push
lods
daa
jecxz
cmc
or
add
add
xor
mov
add
add
push
daa
sbb
or
add
add
xor
add
add
lea
add
jbe
mov
dec
ja
jae
cmpsb
movsl
sub
ss
jbe
or
add
add
leave
jle
pop
aad
xor
lods
dec
leave
lds
hlt
sbbb
xchg
pushf
imul
lret
ja
fistps
stc
lds
jmp
push
mov
push
xchg
imul
mov
out
jl
in
in
movsl
mov
add
add
add
int3
mov
xor
xchg
add
add
add
add
add
add
add
inc
add
add
inc
mov
and
ds
xchg
into
jge
sub
push
jae
push
aam
push
adc
xor
add
add
rcll
add
ljmp
inc
pop
mov
inc
mov
xchg
cs
dec
xor
xor
ss
fidivl
mov
add
jl
scas
ror
adc
push
imul
cmp
movsl
inc
xor
mov
push
lahf
je
cmp
add
add
mov
pop
xchg
and
scas
inc
add
add
mov
xchg
pop
xchg
inc
subb
pop
sbb
iret
or
add
scas
pop
cmp
cltd
repz
jecxz
pop
popf
pop
add
add
add
xor
jns,pt
push
stos
mov
mov
test
in
xchg
pop
mov
sti
jne
mov
pushf
loopne
mov
fdivs
add
mov
es
dec
fs
into
jnp
jle
sbb
ljmp
add
add
push
scas
jo
dec
push
sbb
adc
sbb
out
ret
ja
push
xor
mov
push
stos
cmovp
bound
xor
sbb
aad
sarb
lret
pusha
add
add
cld
jne
mov
add
add
sbb
lret
xor
inc
idivb
mov
add
add
adc
mov
dec
adc
cmp
lods
pop
push
aam
adc
es
subl
pop
popa
adc
add
data16
mov
adcl
cld
push
sti
sub
mov
add
add
fld
js
dec
add
add
ss
mov
mov
adc
cli
mov
adc
icebp
fxch
and
lods
aam
jo
fsubs
cmp
inc
mov
jbe
mov
mov
pop
mov
mov
pop
inc
push
xchg
add
add
iret
xor
out
int3
or
mov
jmp
in
or
pop
pop
mov
adc
out
fisubs
add
add
loope
add
add
lock
outsb
daa
push
lock
mov
sub
fdivs
cmpsb
in
add
sub
add
add
sub
xorb
shlb
add
mov
orb
in
inc
push
and
mov
mov
cli
dec
mov
mov
shlb
test
mov
add
add
sub
jl
add
imul
divl
fwait
mov
enter
cmpsb
sar
test
add
add
mov
outsb
cmp
addl
or
jl
jmp
shlb
inc
xchg
push
sub
icebp
mov
pushf
cmc
sub
lock
out
int
pop
aaa
jbe
test
mov
mov
rorb
and
lret
push
scas
mov
fbld
mov
jns
mov
mov
add
add
lcall
repz
or
add
cmp
das
push
lcall
dec
fdivs
mov
mov
or
add
add
jne
xor
dec
les
aam
add
add
mov
sbb
push
or
xchg
add
dec
sbb
stos
xor
add
add
dec
insl
cld
sahf
push
xchg
xor
cmpl
dec
loope
sbb
adc
lock
xchg
arpl
jle
jmp
mov
xchg
inc
mov
jmp
add
add
test
jb
les
into
arpl
and
add
fs
pop
shl
and
dec
in
pusha
mov
add
sbb
and
mov
sbb
call
lock
xor
or
inc
jne
int
rorl
add
add
xchg
ja
fildll
add
cmpsb
filds
jne
jmp
dec
mov
repz
out
xchg
clc
mov
jnp
xor
xor
adc
add
add
sti
dec
in
into
inc
add
ja
cmp
orl
add
add
into
xchg
leave
sub
mov
scas
scas
mov
pushf
and
shlb
add
pop
fldcw
sbb
movsl
push
and
inc
xor
add
popl
imul
in
mov
nop
ret
fisubrl
lret
pop
xchg
lret
xor
and
add
add
or
imull
repz
mov
xchg
loope
inc
pop
sahf
orl
fcomps
fnstenv
sbbb
jns
rorl
clc
mov
nop
jns
pop
pushl
push
lods
xor
or
xor
add
add
incl
jb
xchg
xchg
jl
lahf
mov
xchg
push
jns
mov
or
jmp
add
add
fwait
or
add
jmp
sahf
int3
push
clc
scas
sbb
jg
inc
mov
xor
mov
xchg
adc
cmp
shlb
or
add
add
mov
push
cmp
jnp
add
add
mov
imul
sub
add
add
adc
jl
ret
enter
pop
ss
sub
shrl
add
xchg
add
add
and
fldl
sbb
add
add
add
adc
enter
add
pop
inc
pop
icebp
inc
mov
orb
push
dec
dec
dec
lea
cwtl
sub
ror
sub
push
push
aas
lahf
stos
push
fcoms
movsb
iret
ficompl
cmp
notl
push
stc
add
xchg
test
cmp
push
in
test
add
add
pop
and
sub
push
jecxz
pop
test
push
sub
jmp
add
add
shl
xor
mov
add
aam
stc
jne
cwtl
out
in
sti
out
in
ss
je
mov
add
add
mov
add
popf
xchg
imul
mov
xchg
notl
stc
xorl
add
add
je,pn
movsb
fiadds
jae
sbbl
sub
add
iret
fdivrl
xchg
test
fistl
sub
jnp
out
pop
jae
je
lock
stos
lods
jle
push
or
or
mov
fidivrs
test
sti
sub
cmc
in
ror
push
cltd
sbb
add
call
add
push
sub
jne
pop
int3
pop
mov
mov
add
push
add
mov
sub
add
mov
mov
mov
add
add
xlat
repnz
jns
jo
inc
adc
sahf
xor
inc
addr16
cmpsb
dec
push
sahf
sbb
add
add
xchg
pushf
or
leave
mov
inc
mov
xor
idivb
in
add
call
add
cmc
test
cmp
rcr
leave
fbld
jg
ja
dec
clc
in
sub
add
add
loope
or
movsb
mov
xor
and
arpl
ret
ret
ror
mov
mov
add
xchg
mov
sub
cmp
sbb
in
rcll
movsb
push
xchg
js
inc
clc
push
mov
add
lea
mov
adc
add
and
add
add
inc
aam
out
mov
jo
mov
add
add
inc
inc
enter
pusha
mov
ss
std
les
pop
sub
sbb
cli
outsl
sub
cmpl
mov
jne
mov
add
add
inc
in
loopne
fwait
rcr
gs
push
loopne
pop
das
insl
push
cwtl
add
add
add
ja
mov
lahf
nop
dec
push
in
cmp
mov
xchg
and
add
add
cmp
cmp
mov
inc
or
xlat
js
or
add
add
test
cmp
lea
mov
lods
pop
jle
std
mov
insl
mov
xchg
ja
sbb
cmc
pop
add
add
add
pop
pop
ficomps
in
inc
mov
cmc
dec
push
xchg
jg
ret
ja
int
mulb
jb
mov
push
stos
repnz
add
add
or
add
add
sbb
mov
fistl
xchg
inc
jae
xor
mov
sub
add
add
ret
or
add
add
xor
out
lretw
sbb
and
pop
inc
inc
lods
pop
pop
dec
push
ljmp
xchg
jnp
push
mov
cltd
mov
sbb
iret
bound
test
push
call
add
cltd
add
add
mov
hlt
daa
add
add
ja
fcoms
sub
add
cmp
lods
push
call
call
loopne
dec
cmpsl
push
repnz
icebp
test
das
pushf
lret
js
in
pop
ret
cwtl
shr
iret
cmp
xor
dec
in
adc
pop
fwait
add
add
add
mov
imul
add
lahf
insl
cwtl
mov
ds
pop
js
jbe
mov
das
ljmp
lock
mov
mov
add
add
mov
pop
push
popf
je
outsb
fsubrs
and
add
add
bound
add
push
loope
je
push
dec
imul
inc
mov
mov
mov
jo
mov
mov
lods
sbb
test
imul
add
dec
mov
arpl
add
inc
push
loop
sub
add
add
push
sbb
mov
add
add
mov
mov
aad
roll
add
add
mov
jb
imul
add
mov
shlb
jo
add
add
mov
mov
aaa
push
jo
add
add
and
int3
fidivl
mov
sub
inc
sub
out
sub
add
add
mov
pop
xchg
or
insb
mov
mov
xor
mov
divb
add
pop
jns
mov
jecxz
mov
movsl
daa
mov
mov
gs
lcall
inc
push
shr
and
sti
lods
orb
add
test
jae
mov
inc
rcrb
sbb
loop
test
pop
cmp
mov
gs
mov
addl
add
mov
jge
adc
pop
sub
popa
cld
mov
mov
mov
rcll
stc
test
out
pop
in
popf
imul
inc
sub
add
add
push
repnz
inc
add
add
adc
pop
lods
cs
loop
add
add
int
orl
cmp
jle
sub
add
add
rol
inc
aad
xchg
push
cmp
cmpsb
xchg
clc
gs
add
dec
mov
cmp
scas
fwait
mov
lock
imul
add
inc
mov
mov
ljmp
test
mov
in
mov
rclb
add
ja
xor
scas
cmp
push
popf
jp
frstor
mov
fisubrl
imul
cmc
out
out
mov
mov
push
lods
inc
out
or
lret
leave
jae
cwtl
add
aas
aad
cli
push
mov
push
lock
neg
push
pop
jae
jns
sbb
add
add
loope
cli
cwtl
out
in
clc
cmp
inc
add
add
icebp
push
iretw
int3
jbe
mov
in
daa
std
dec
push
orl
adc
sti
mov
ud1
inc
push
mov
cmpsl
int3
clc
pop
push
add
add
mov
testb
sbb
add
add
mov
or
add
add
je
mov
mov
xchg
mov
add
add
jns
add
add
add
add
add
leave
int3
cmp
rcll
dec
int
jno
inc
cmp
push
inc
push
test
xchg
dec
or
add
add
sub
and
add
add
mov
jp
pop
mov
add
ret
mov
stc
xchg
mov
outsb
jge
mov
xchg
scas
js
jb
fwait
fs
mov
pushf
cmp
push
lea
adc
into
pop
ds
lret
add
add
leave
mov
add
mov
and
and
int3
mov
pop
dec
mov
sbb
push
jo
popa
rclb
jmp
inc
aas
out
lods
insb
add
add
adc
out
int3
jae
inc
sbb
and
int
add
add
js
repnz
jp
scas
stc
decl
push
mov
add
jae
sbb
decb
cmp
push
in
jmp
xchg
dec
pop
cmp
ljmp
jp
jge
pop
xchg
inc
popf
xor
push
imul
inc
push
sub
add
add
xor
sbb
sbb
xor
fimull
dec
sub
mov
xor
sbb
mov
adc
out
mov
cmpsb
lods
dec
and
inc
inc
mov
dec
mov
roll
add
add
das
add
in
xor
ret
cli
cltd
mov
jne
push
movsl
cmp
fsubrs
add
add
add
mov
sub
mov
xor
pop
fistpl
cmpb
lods
cltd
mov
inc
mov
lods
jp
add
add
xor
cli
sub
std
enter
add
add
jge
ret
mov
jbe
inc
mov
add
add
in
in
lds
jecxz
jbe
leave
subb
add
add
mov
fdivs
popa
test
je
sub
lcall
pop
cmp
mov
or
add
add
mov
sti
loopne
push
aas
insl
mov
data16
daa
mov
add
push
lea
xor
lret
dec
jl
lods
mov
lds
add
add
add
test
mov
aad
lret
test
sar
decl
shll
push
adc
les
lock
jl
sub
add
add
push
pop
sub
rol
repz
xchg
je
cs
loopne
adc
insl
ja
jmp
add
add
add
sarb
xchg
cld
push
adc
out
inc
push
ret
mov
dec
jmp
mov
cli
loopne
out
mov
pop
push
lods
sub
xchg
push
and
add
add
pop
pop
cmc
inc
repz
mov
mov
cmp
cld
adc
lock
dec
inc
lahf
mov
mov
dec
add
add
sbb
add
add
push
out
cltd
fisttps
ret
and
fmuls
sahf
daa
mov
sub
mov
add
push
pop
test
sbb
stc
out
and
movsb
test
cmc
out
test
dec
add
add
pop
pop
stc
adc
dec
scas
orl
lret
test
test
fldcw
mov
add
fnstcw
enter
fisubrs
sub
sub
add
add
adc
outsb
jmp
and
pop
and
hlt
fldl
mov
xor
mov
mov
das
aas
push
ljmp
fcomp
dec
daa
arpl
add
add
adc
xor
add
jae
fdiv
xchg
sbb
cmp
jge
stos
jno
testb
les
add
add
cmpb
mov
sub
loopne
mov
mov
mov
scas
pop
in
adc
mov
add
add
mov
mov
mov
inc
stos
gs
sub
movsl
test
mov
test
add
lea
cmp
mov
je,pn
jp
inc
fcmovnu
mov
add
add
push
lret
and
add
add
repnz
add
iret
cmc
clc
pop
cmpsb
sub
adc
add
add
adc
dec
add
add
movsb
adc
inc
sbb
xchg
dec
pop
cmp
fneni(8087
stos
xchg
mov
mov
xchg
mov
scas
mov
int
insb
add
add
popf
mov
mov
cmc
inc
cmp
scas
rcrl
cmpsb
jae
loop
sub
add
add
scas
sub
add
add
fisubs
add
lret
mov
dec
adc
scas
daa
add
xlat
stos
pushf
xchg
ljmp
or
scas
cltd
popf
addr16
and
add
add
jl
add
add
add
mov
add
xor
mov
add
cmp
push
sbb
cli
bound
xor
mov
out
mov
mov
out
xchg
inc
rorb
and
mov
add
add
add
shl
bnd
adc
or
xchg
xchg
scas
and
add
add
rcr
pop
and
add
add
add
aam
lret
fisubs
add
add
rolb
arpl
mov
inc
and
jecxz
xor
out
ret
loope
and
enter
add
pop
bound
sub
mov
movsl
fwait
sub
ss
jmp
push
ret
ret
imul
push
mov
add
add
push
fimull
pushl
xchg
jbe
js
cmp
add
add
sbb
cli
jae
add
xchg
loopne
cld
pop
push
popa
test
in
push
dec
aas
stc
stc
mov
add
lcall
fldcw
pop
push
jnp
add
dec
mov
inc
mov
dec
cmp
jns
mov
ret
xor
add
add
sbb
xchg
push
inc
adc
mov
movsb
std
add
lods
mov
push
sbb
popa
adc
lahf
push
loope
mov
scas
mov
inc
pop
jmp
insl
sahf
mov
or
jecxz
cwtl
add
adc
dec
add
test
and
daa
mov
adc
lods
cmpb
add
add
lea
outsl
cmc
outsb
jae
out
push
cltd
mov
add
in
addr16
mov
add
cmp
xchg
or
add
add
outsb
push
xchg
enter
mov
jno
ret
jae
sub
fsubrs
fcoml
xchg
je
test
sub
add
add
adc
test
cwtl
mov
add
add
pop
cld
int3
adc
and
or
inc
adc
stc
cmc
fsubrl
add
outsb
cmp
mov
jge
test
push
lret
xchg
sti
jb
insb
add
add
int3
ret
repnz
inc
dec
cmpsb
insl
mov
cmp
pop
xor
jp
mov
cmpsl
or
add
dec
mov
jo
xchg
add
add
cwtl
fdivs
mov
cmpsl
jo
ss
daa
xor
mov
and
add
add
jae
mov
cmpsl
and
fsubl
xor
popf
mov
dec
mov
mov
xchg
loop
mov
add
xchg
enter
dec
adc
pop
mov
add
add
add
add
js
pushf
xor
lods
cmpsb
into
mov
jecxz
test
sub
add
add
adc
popa
mov
add
icebp
mov
add
add
xchg
ret
leave
aas
or
loop
loopne
imul
mov
rcr
cmpsl
sbb
add
add
in
orb
add
mov
xchg
jbe
add
add
fldt
sbbb
dec
mov
xor
push
pop
push
sub
add
add
add
add
test
add
add
mov
sti
pop
xchg
mov
int
pop
cmpsl
jle
push
loopne
push
mov
add
pop
cmpl
mov
shlb
add
add
cltd
jl
add
add
jae
ds
loopne
jnp
out
xchg
and
cltd
mov
add
pop
inc
cmp
push
stos
sahf
imul
es
add
add
add
jge
jp
ret
divl
add
movsb
cs
pusha
add
add
test
sbb
mov
stos
mov
inc
mov
imulb
xchg
loope,pn
int3
imul
sti
out
insb
add
add
sahf
push
xor
addr16
cld
pop
jl
mov
ret
and
loopne
cwtl
add
stos
pop
das
adc
sbb
xchg
std
xor
sarb
movsl
ds
mov
fmulp
jae
in
dec
add
add
cmp
add
add
push
pop
loope
mov
xchg
es
add
add
inc
ret
out
sahf
imul
push
or
jmp
push
cmp
xchg
rcl
jnp
push
sub
mov
sbb
popf
xor
add
loopne
jecxz
loop
mov
pop
fistpl
pop
dec
enter
xchg
mov
aaa
push
int
popf
xlat
int3
mov
outsb
punpckhwd
fstpl
call
add
dec
jne
xchg
bound
out
out
jmp
nop
mov
roll
and
bound
imul
aaa
js
dec
lcall
cmpsb
sub
push
imul
xor
sub
mov
xor
imul
pop
mov
lock
add
add
add
ret
bswap
lsl
add
add
and
add
add
cmp
int3
cmpl
pushf
shll
sar
movsl
lea
push
add
add
stos
mov
scas
cld
mov
sahf
shlb
mov
inc
or
mov
lea
mov
sbb
dec
add
add
lahf
adcl
shrb
jmp
test
dec
mov
into
push
lea
xchg
fs
sbbb
add
mov
add
dec
xchg
mov
ljmp
push
lods
rcll
lods
testl
cmp
fldt
inc
rorb
cld
aas
std
cmp
jg
mov
sti
addr16
and
add
add
add
add
ret
out
das
stc
lret
xor
add
add
add
add
mov
inc
aam
push
xor
cmp
cltd
stos
hlt
stc
aad
lods
shrl
popa
lret
or
std
jo
shll
dec
mov
add
or
nop
push
jmp
pusha
mov
or
sti
fsubrs
add
add
push
add
add
daa
or
rcl
jbe
xor
mov
push
ljmp
jecxz
imul
cmpsl
sub
js
aad
and
adc
aas
adc
lock
mov
cs
add
add
push
ret
frstor
movsb
pop
es
sub
and
insb
add
add
mov
inc
mov
add
cs
jg
inc
outsl
jns
daa
cmp
and
jae
sbb
add
into
sub
xor
add
jns
push
mov
fwait
in
mov
aas
sub
aad
lock
mov
jg
pusha
mov
inc
gs
xchg
and
add
add
in
jp
jbe
pop
fiadds
adc
cmp
and
adc
dec
mov
push
mov
out
xlat
push
push
xchg
je
mov
pop
inc
mov
add
add
mov
scas
xor
sbb
add
shlb
add
add
ret
stc
dec
or
mov
add
add
lods
aas
out
or
jmp
xchg
add
pusha
mov
push
shrb
in
sub
add
add
inc
mov
jne
pop
scas
cmp
xchg
pushf
subb
add
add
pop
test
rcr
out
scas
mov
mov
add
xchg
in
xorl
sub
jge
dec
mov
mov
sub
sub
add
add
pop
adc
jo
adc
sbb
add
add
hlt
insl
dec
mov
sbb
mov
fbld
pop
addb
data16
pop
popl
mov
pop
stc
imul
adc
adc
cmp
inc
pop
mov
xchg
cwtl
pop
sti
mov
daa
fcomp
sub
add
add
rclb
mov
sbbb
pushf
fidivrs
ja
sub
add
add
les
loope
xchg
push
xchg
or
xchg
icebp
js
ljmp
add
xlat
movsb
and
lods
ljmp
mov
push
fwait
mov
add
fnsave
jl
cld
mov
mov
mov
xor
jp
in
mov
loope
mov
rolb
outsb
jmp
inc
xchg
cmpsb
sbb
add
ficomps
mov
aaa
aaa
vmaxps
ficoms
invlpg
ret
jp
aam
clc
les
test
add
add
mov
xlat
in
dec
testl
je
iret
mov
mov
dec
mov
mov
add
or
or
inc
mov
mov
fmuls
daa
jmp
inc
scas
sbb
arpl
mov
inc
fldl
dec
add
sbb
jmp
sbb
cli
mov
add
aaa
mov
add
test
ja
out
in
flds
add
add
ss
xchg
mov
mov
mov
dec
mov
rorb
sahf
fimull
add
add
dec
add
add
into
pop
and
cmpsl
cmpsl
rcrb
xlat
or
add
mov
add
add
add
outsl
test
jo
mov
loope
push
cli
je
and
add
add
mov
push
cmpsb
mov
cmpl
fwait
sahf
and
add
add
aaa
jns
idivb
xor
add
add
jns
sub
out
add
add
add
xchg
pop
sahf
pop
pop
inc
jns
aad
adc
orb
cmp
lock
out
mov
jno
mov
mov
not
ficoml
add
add
push
data16
lea
mov
push
stos
xchg
dec
and
xor
add
add
add
add
adc
add
shll
cmp
jl
mov
test
mulb
xor
enter
sub
add
add
add
inc
jle
insb
mov
cmpsb
cmp
loope
cli
jge
fwait
outsb
pusha
add
add
add
add
add
add
push
popf
mov
inc
subb
push
movsl
jae
es
lahf
xlat
push
in
cld
and
add
add
add
add
dec
add
add
inc
cltd
shlb
int3
stc
nop
rol
es
jb
add
or
add
add
add
add
add
add
add
ss
mov
dec
add
add
lcall
add
test
add
add
test
add
add
mov
popf
cwtl
das
xchg
push
stc
or
sub
divb
es
cmpsb
rcrb
mov
andl
movb
ds
nop
mov
lock
outsl
jne
je
push
hlt
push
cwtl
shl
test
add
in
pop
ret
cmp
fldt
into
mov
stos
add
add
add
and
in
mov
push
inc
cmp
imul
int3
xchg
pop
cmpb
mov
sub
add
lret
je
jae
mov
add
sub
add
loop
add
add
mov
mov
xlat
subb
mov
mov
cli
addr16
mov
mov
jb
mov
pop
pushl
pop
int3
mov
push
loopne
mov
test
jae
xchg
imul
mov
add
add
add
push
pop
loop
jno
xor
add
add
lret
sub
add
add
add
add
jp
jecxz
out
xchg
mov
rclb
mov
push
arpl
push
test
add
add
cli
and
xchg
jns
jecxz
add
add
inc
push
clc
push
lods
push
aam
gs
rolb
add
mov
daa
xor
or
fdiv
ljmp
and
sbb
ror
decb
stos
hlt
or
add
add
and
inc
jns
add
add
leave
push
xchg
nop
adc
and
xrelease
push
icebp
or
add
add
adc
pop
mov
imull
add
add
div
cmp
dec
call
popf
cltd
mov
pop
movsb
cmp
adc
add
add
repnz
mov
jmp
jmp
jg
ret
jp
inc
mov
dec
mov
sub
call
push
out
inc
sub
pop
stc
sbb
dec
add
add
lcall
cmp
add
pop
dec
xor
sar
mov
lea
pop
test
test
fmull
xor
jecxz
arpl
clc
mov
subl
dec
and
xchg
and
adc
jle
in
ret
test
loope
test
out
fucom
mov
xchg
mov
add
sbb
and
inc
add
add
loop
and
out
adc
inc
inc
cmp
inc
pop
stc
or
add
add
add
add
testl
mov
hlt
fildl
dec
popf
or
mul
jmp
aam
push
testb
int3
das
fwait
jmp
sub
add
dec
shll
mov
mov
add
mov
and
add
add
xor
outsb
dec
jmp
ljmp
dec
mov
icebp
xchg
stos
fidivl
addr16
add
xor
mov
out
push
or
add
pushf
mov
stos
or
add
add
cmp
sahf
add
sbb
lea
add
add
sbb
das
xchg
mov
mov
lods
jbe
cld
or
in
fcompl
loope
testb
jbe
cmp
cmp
jo
insl
outsb
out
sar
jb
roll
add
add
add
jmp
xchg
fisubs
cmp
daa
shrb
repnz
mov
mov
or
mov
inc
ds
sbbb
sub
jb
ficoml
aaa
jge
push
mov
movsb
dec
lods
dec
add
add
notb
mov
adc
push
ljmp
mov
cmp
and
mov
xor
xchg
add
push
push
imul
add
add
imul
jno
mov
push
cmp
mov
cmpl
stos
pop
mov
sub
daa
sbb
and
jle
or
add
test
mov
inc
pop
jb
mov
add
jge
sbb
jae
cmpl
add
pop
and
inc
xlat
shrl
stos
push
cmp
add
add
add
add
in
push
lods
fdivrl
gs
pusha
mov
ja
add
pop
mov
add
add
leave
test
mov
xor
cmp
out
inc
push
ret
mov
pop
lcall
cmp
push
andb
loope,pt
shl
cmp
or
and
mov
cmp
out
adc
cmc
adcl
add
inc
push
mov
mov
add
mov
xchg
out
test
insb
mov
lret
arpl
jecxz
ss
inc
rorb
add
push
movsb
ljmp
add
cmp
add
add
dec
mov
int
dec
and
out
sub
add
add
fisttpll
fldt
roll
add
add
or
xchg
imul
jno
add
add
add
dec
mov
pop
loop
lods
aam
adc
test
add
add
jmp
and
add
and
add
add
outsl
fisubrl
mov
push
push
fcoml
add
mov
sub
sti
std
inc
loopne
jle
add
add
bound
popa
add
xor
sbb
mov
inc
and
mov
push
and
add
add
xchg
mov
rcrl
add
mov
call
fsts
push
xchg
mov
mov
add
add
and
pop
mov
lods
test
add
and
adc
jb
push
mov
and
std
lcall
or
lods
jne
add
add
mov
add
add
push
popf
xchg
ret
iret
lods
mov
insl
in
lds
add
add
pop
pop
push
loope
fdivrs
fidivrl
fdivp
in
add
add
add
add
add
mov
cmp
push
pop
xchg
mov
mov
add
int3
stc
in
xchg
bound
xor
add
add
data16
mov
add
add
mov
insl
shll
data16
push
lods
test
and
add
add
xorb
outsb
imul
add
add
fucomp
xlat
movsb
sbb
dec
cltd
cmc
cld
push
popa
inc
xor
aam
fwait
add
clc
inc
aad
imul
fists
adcl
lods
jae
inc
sbb
cwtl
xchg
mov
add
add
pop
dec
hlt
mov
xchg
mov
pop
scas
jle
ret
into
pop
es
push
jno
int3
mov
dec
add
add
sub
mov
rol
scas
inc
iret
sbb
rcrl
das
dec
add
add
inc
jbe
push
jp
dec
mov
add
add
mov
lods
popf
xchg
or
add
add
inc
scas
jns
fidivrs
mul
fcoml
bound
pop
test
sub
add
add
jmp
cli
stos
xchg
scas
mov
mov
dec
clc
loop
pop
mov
stc
icebp
xor
sub
popa
ds
push
mov
sbb
mov
inc
mov
push
mov
std
xchg
cmp
es
and
xchg
jecxz
roll
add
sahf
dec
scas
fstps
jmp
fwait
subl
sbb
mov
lods
or
test
dec
mov
scas
popf
push
fisttpl
fimull
add
add
and
pop
loopne
sahf
rcrl
cld
lahf
mov
mov
shll
add
add
cmp
cld
aad
sbb
cli
xchg
les
js
mov
jns
fnstsw
adc
sub
add
add
add
add
fsubp
cmp
push
fs
ja
sub
cmpsb
mov
add
mov
loop
fcmovne
pop
shrl
cmp
shrb
scas
cld
sub
ljmp
fcmovnu
mov
lret
das
jne
clc
test
add
add
fisubs
jae
leave
xor
add
jmp
dec
mov
leave
movlps
add
add
lods
out
pop
mov
cmp
push
stc
mov
imul
cld
lcall
add
add
es
int3
pop
push
add
add
and
loope
sub
orb
add
lcall
call
add
stos
sbb
ret
call
int3
in
ss
aas
lock
mov
hlt
add
add
add
cmpsl
push
push
sarb
push
je
rcll
mov
dec
xor
jge
and
add
add
daa
inc
add
add
sub
add
add
cmc
pop
shrb
mov
jnp
fsubl
add
add
imul
inc
mov
es
mov
mov
mov
cltd
and
fstps
in
mov
cs
add
add
xlat
outsl
orb
loop
fildl
add
mov
jge
sarb
mov
js
or
add
add
add
add
out
or
dec
mov
lods
adc
add
push
xor
fldcw
sbb
push
scas
sub
add
add
shrb
add
add
cmp
add
sub
add
add
divl
stc
pop
xor
addr16
enter
add
add
cli
xchg
jnp
sub
in
add
add
cwtl
scas
or
push
jle
mov
cmpsl
and
add
add
add
in
int
cmp
xor
add
add
mov
inc
aaa
inc
out
mov
dec
stos
sub
and
shll
xchg
call
xlat
push
stc
std
insl
mov
lahf
fisubrs
xchg
cmp
jnp
mov
push
arpl
jns
test
pushf
mov
stc
lea
icebp
and
add
add
je
loop
mov
add
lods
ja
orb
xchg
outsl
pop
push
cltd
push
pop
jge
icebp
jl
outsl
cli
inc
jno
inc
inc
pop
mov
pop
ss
cltd
lcall
sub
add
add
rclb
mov
in
sbb
add
lret
sub
add
add
push
cmpsl
test
movl
jbe
cmpsb
mov
fwait
add
fsubp
popf
dec
cli
jp
cmp
out
fcomi
xchg
scas
inc
mov
jbe
or
add
add
cmp
xlat
arpl
push
and
or
add
add
iret
jae
inc
ret
pusha
mov
les
add
fs
jo
xchg
xorb
addb
mov
mov
ljmp
mov
pop
cmp
loop
mov
add
mov
je
mov
inc
stos
adc
mov
push
inc
mov
adc
add
mov
das
inc
and
int
in
fldcw
fldenv
add
add
jle
add
rcr
pop
hlt
adc
mov
outsl
jg
jae
ret
cmp
sbb
add
ret
and
sub
test
lds
out
in
int3
repnz
mov
push
outsb
xor
cmc
push
mov
shl
add
mov
add
add
int
cwtl
fadd
mov
fisubrl
push
out
mov
ds
jbe
loopne
jns
inc
add
add
sbb
repnz
cltd
rcl
hlt
xchg
inc
jnp
mulb
sarb
add
pusha
add
add
xlat
adc
pop
hlt
mov
add
shrl
rolb
add
dec
sahf
shr
mov
add
add
add
adc
or
add
add
into
sub
mov
sti
scas
test
sti
int
sub
add
call
mov
and
xchg
fidivrs
out
xchg
popf
icebp
repnz
ja
mov
add
pusha
mov
loopne
xor
or
inc
add
add
inc
add
add
mov
dec
mov
lds
add
add
cmp
sbb
xor
je
and
add
add
jne
fwait
push
fldt
or
ror
pop
shr
add
sahf
fistl
insb
add
add
loope
add
add
test
popa
mov
mov
aad
movsl
xchg
test
and
inc
add
add
fstpt
cs
mov
or
aas
jns
out
xchg
inc
mov
mov
in
addr16
or
xchg
mov
loopne
jbe
xchg
ret
xchg
sbb
add
add
in
or
add
add
jbe
jge
mov
movsl
sub
arpl
add
add
clc
mov
data16
add
outsb
xlat
mov
add
push
sub
add
add
adc
jge
push
mov
add
xchg
xor
mov
or
lods
dec
mov
xchg
aas
aam
or
add
add
pop
jg
aam
gs
jg
mov
push
sti
jo
add
add
pop
jmp
and
add
add
dec
notb
mov
fcompl
xor
and
add
add
int
jo
outsl
repz
lret
sbbb
push
clc
inc
mov
pop
pop
jae
mov
cmpsl
pushf
subl
ror
sub
push
stc
cmp
push
sub
sbb
sbb
fwait
cmp
cmp
mov
dec
mov
ret
pushf
shll
aam
sbb
pusha
mov
push
movsb
addr16
std
lahf
add
mov
in
add
jae
mov
repnz
add
cli
testl
add
lods
sbb
adc
adc
xchg
dec
scas
sbb
push
arpl
repnz
sub
add
add
sti
movsl
or
add
add
out
testb
add
mov
mov
test
test
add
add
cmp
fsts
stos
wrmsr
adc
xor
idivb
incl
xor
ljmp
add
mov
mov
je
sub
add
cmp
popl
and
fsubs
adcb
ret
jno
adc
xchg
out
dec
fwait
insb
mov
mov
add
add
dec
mov
mov
lret
and
add
add
leave
test
mov
into
loope
add
add
pop
xor
push
cmp
js
inc
punpckhdq
mov
arpl
mov
lahf
push
xor
pop
mov
les
add
mov
sub
or
inc
add
pop
imul
jge
add
add
add
inc
add
jmp
add
add
add
mov
add
icebp
xchg
outsl
loope
push
ds
test
mov
lcall
mov
jnp
sbb
dec
sbb
mulb
js
pop
lods
repz
cld
adcb
clc
sbbb
mov
xchg
test
add
add
aas
js
enter
pop
stos
and
mov
aaa
push
xor
mov
pop
pop
pop
adcl
pop
shl
ss
rcr
cs
outsl
jg
add
add
add
pushl
sub
out
push
ds
in
outsb
xchg
sub
fisubrs
add
loopne
out
std
adc
lret
faddl
mov
push
shl
sub
inc
out
iret
and
and
add
add
mov
xchg
xor
nop
push
add
mov
cld
adc
das
hlt
jne
cmp
and
aaa
jb
repz
and
jb
add
add
clc
lret
dec
lret
popa
add
add
add
add
std
cld
sbb
mov
add
push
push
xchg
add
sbb
add
add
add
repnz
push
cmpsb
fbstp
jne
in
iret
jno
jb
push
sub
add
dec
xchg
mov
add
add
call
addr16
popa
int
xchg
or
xor
add
add
add
sub
pushf
cmpsb
pop
pushf
mov
ds
cmp
jmp
add
data16
inc
pop
pop
sub
add
add
aaa
adcl
aas
push
ja
mov
jno
add
add
mov
mov
mov
stc
lods
push
insb
add
add
loopne
mov
adc
add
sbb
mov
fs
push
adc
mov
loop
mov
mov
sub
push
in
clc
cltd
int
xor
xor
and
sbb
and
sub
add
add
add
dec
adc
dec
lret
jge
movsb
pop
adc
je
jg
cmp
add
cmp
mov
in
sub
add
add
popf
jecxz
push
cwtl
jbe
mov
sub
mov
add
add
dec
add
add
pusha
add
add
fs
jae
add
add
add
aam
ret
rcr
jmp
sub
add
add
lea
pop
ds
dec
pusha
add
add
pop
popa
imul
ljmp
lds
in
scas
cs
pushf
sbb
sbb
xor
add
or
lods
mov
dec
or
das
call
add
leave
and
push
push
cmp
jl
jo
jg
jle
icebp
mov
xor
add
add
add
or
insl
leave
out
pop
xor
js
mov
jnp
mov
xor
outsb
push
outsb
xchg
push
mov
xchg
out
daa
push
xchg
jecxz
cmp
mov
or
sti
mov
clc
repz
sub
sbb
push
mov
mov
mov
inc
cltd
pushf
mov
dec
add
add
cltd
inc
mov
js
nop
aaa
xlat
jle
cmpsb
repnz
sbb
gs
jae
add
adc
add
add
add
popf
rcr
jecxz
mov
add
add
dec
add
add
daa
sahf
scas
or
out
mov
pop
lret
stos
jo
hlt
sbbb
in
push
or
add
add
into
daa
fadds
sbb
xor
pop
mov
pop
adc
shrb
cmp
aaa
aaa
mov
in
adc
popa
dec
mov
add
add
arpl
jge
mov
test
lret
dec
mov
inc
add
add
xchg
or
add
add
or
add
add
pop
inc
aam
inc
adc
add
add
loope
jmp
fcomps
add
add
nop
fnstcw
add
add
dec
mov
adc
aas
xchg
stc
mov
add
lcall
pop
push
xchg
push
jne
add
add
add
add
push
icebp
cmp
in
aam
cs
icebp
xor
pusha
add
add
scas
and
pop
mov
cld
push
divb
addr16
mov
add
cltd
mov
mov
inc
or
pusha
add
add
mov
xchg
outsb
xor
jmp
lret
stos
jg
dec
mov
push
push
push
cmp
jne
pusha
mov
add
add
mov
mov
arpl
add
add
jge
add
loopne
jp
add
test
andl
inc
jl
inc
aam
mov
sbb
add
dec
mov
mov
sbb
xor
pop
jge
pop
cmp
add
push
pop
popf
popf
pop
or
orl
add
std
mov
mov
dec
mov
pop
out
cmp
in
jecxz
cli
sti
into
cmp
mull
add
add
icebp
mov
mov
pop
subl
lea
es
into
outsl
and
mov
and
add
add
insb
add
add
sbbl
dec
add
add
clc
fidivl
adc
add
add
or
cmp
add
jp
xchg
adc
movsb
ss
imul
xchg
lds
dec
xor
mov
adcb
add
add
addr16
cwtl
lahf
loope
lcall
int3
jecxz
cmp
rolb
dec
mov
jge
add
add
mov
push
dec
sbb
jnp
mov
scas
pop
inc
add
add
cmp
sbb
rclb
add
add
lret
outsl
add
nop
ret
leave
pop
xchg
and
inc
into
lds
andl
add
add
jl
inc
mov
lods
shrl
insl
inc
mov
inc
inc
ds
add
add
rorl
faddl
mov
push
ficoml
mov
lret
lods
sub
and
add
dec
sub
xchg
int
sub
cs
into
lock
sub
mov
add
and
test
sti
inc
push
or
xchg
cmpsl
pop
jb
pop
shll
icebp
mov
push
mov
or
adc
nop
xchg
cmpsb
rorb
push
imul
pop
mov
in
pop
sub
sub
mov
and
push
pop
sub
mov
push
cmc
lret
lods
cmc
push
jle
mov
add
add
add
cmp
push
dec
jae
jb
movsl
insl
lret
insl
sbb
push
xor
pop
divb
lds
fwait
jnp
add
add
xor
filds
add
add
mov
xchg
sahf
mov
imul
cs
adc
add
sub
sbb
rclb
add
pop
sub
ja
add
in
cmc
jmp
lret
nop
fidivrs
xchg
pop
orl
add
js
pop
sbb
fwait
cmp
sti
faddp
xor
add
dec
inc
xchg
and
add
dec
sbb
stc
iret
fwait
fcompl
cmpsb
lods
sub
movsl
dec
xor
loop
loopne
adc
stos
xchg
cmp
lret
imul
mov
jnp
pop
mov
or
add
add
mov
cwtl
lahf
test
test
out
iret
mov
daa
xchg
dec
mov
cmp
cld
mov
dec
movsb
or
add
add
lahf
inc
mov
push
mov
sub
push
cmp
and
add
psrlq
add
jmp
push
pop
icebp
dec
add
add
xor
adc
in
pop
xchg
adc
andb
inc
adc
aad
inc
sub
add
add
popa
push
leave
imul
cmc
push
inc
pop
mov
jo
add
add
sarl
or
add
mov
sbb
mov
cmpsl
jge
lcall
outsl
sub
mov
fisttpl
add
add
add
xchg
out
loopne
nop
aad
pusha
mov
mov
mov
add
add
xor
cwtl
call
and
ja
sub
add
add
nop
inc
add
add
aad
jne
jl
ds
dec
ljmp
add
cmp
lock
icebp
mov
repz
or
add
add
daa
push
lret
jmp
gs
scas
fmull
adc
outsl
aam
sahf
dec
cmc
ret
xchg
mov
or
addr16
lods
loop
int3
add
add
add
add
add
push
mov
lds
mov
xor
out
in
dec
add
add
add
pop
mov
sti
inc
mov
adc
stc
clc
add
sub
mov
mov
incl
mov
movsl
cmp
sti
mov
out
adc
add
add
sub
add
add
fidivrs
test
add
add
lret
adc
sub
add
mov
data16
push
out
lret
mov
xor
add
add
or
push
mov
outsl
lcall
ja
mov
add
add
xor
cmp
aad
cli
jbe
das
adc
jae
outsb
out
or
mov
fidivs
add
adc
push
xlat
data16
pop
loop
je
dec
fdivs
stos
je
and
mov
mov
cmpsb
mov
jnp
inc
xor
stc
inc
mov
xchg
cs
fmull
in
pop
fnsave
ss
pop
or
add
add
adc
add
mov
lock
push
and
add
add
mov
mov
test
dec
adc
sub
add
add
test
mov
mov
adc
add
add
ljmp
insb
mov
push
ss
bound
mov
jg
xchg
and
movsl
mov
mov
or
jp
push
inc
lods
test
push
cmp
sahf
repz
add
add
add
add
stos
add
add
add
cmp
xor
inc
fcomip
sti
gs
xchg
add
aas
iret
clc
gs
sbb
sbb
sbb
mov
addr16
pop
mov
in
repz
cmc
adc
and
mov
mov
adc
sti
dec
pop
fadds
fwait
rcrb
jge
or
add
add
add
add
lds
hlt
pop
sub
sbb
add
add
push
cmp
out
dec
fstpl
and
pushf
add
es
mov
mov
and
sub
aad
jp
clc
int
adc
divb
jg
bnd
jp
push
fildll
mov
push
mov
add
outsl
mov
mov
mov
add
cmc
and
add
nop
jl
es
cmp
mov
pusha
mov
out
leave
cwtl
adc
cmp
add
add
jl
add
add
pop
sbb
xor
in
insb
add
add
or
jg
fsubrs
cmc
imul
repz
out
cmp
add
add
add
adc
pop
or
push
mov
add
lret
scas
jbe
and
outsl
sub
add
add
mov
pop
pop
hlt
or
mov
mov
dec
mov
enter
lods
ret
gs
lea
stos
push
mov
add
add
es
pop
adc
pushf
mov
push
dec
sub
add
add
or
jno
or
add
add
lret
clc
mov
add
inc
in
mov
lret
xor
push
mov
mov
in
into
dec
call
add
jae
push
fcoml
dec
popa
inc
icebp
xor
pusha
mov
mov
add
add
adc
jo
pop
cld
mov
jno
enter
in
adc
shlb
mov
enter
stos
dec
mov
push
nop
or
xlat
rol
lods
cmp
ja
and
add
add
mov
cmpsl
fwait
loope
rolb
and
adc
xor
aad
packsswb
insb
mov
lret
lds
add
lea
xchg
push
mov
pop
mov
pop
bound
add
add
inc
xchg
add
add
ljmp
loop
xchg
cmp
cltd
xchg
bound
xchg
fdivl
je
loopne
outsb
cwtl
ds
inc
jle
push
sarb
sbb
push
icebp
adc
adc
std
sub
pop
cmpl
add
mov
cmp
mov
scas
push
push
jmp
mov
dec
out
cmp
das
jge
xchg
test
mov
mov
jns
punpcklbw
add
add
sub
add
add
push
mov
add
add
cmp
mov
int3
lahf
loope
sti
add
add
cmp
xchg
xor
cltd
loope
add
add
dec
mov
add
add
sbb
add
add
movsl
in
pop
xor
lea
add
mov
sahf
scas
adc
push
aas
jmp
into
xchg
mov
xor
fdivrl
mov
jns
pop
and
mov
push
rcll
inc
add
add
insl
ljmp
cmp
mov
mov
cmp
aas
sub
sub
jge
or
xchg
mov
mov
add
add
rorb
dec
mov
add
xor
or
add
add
xchg
enter
inc
cmp
add
add
shr
cmp
xlat
mov
add
ret
das
mov
rorb
cmp
insl
lods
cmp
repnz
push
push
in
xlat
inc
add
add
push
scas
imul
pop
cltd
ljmp
ja
and
add
add
decl
mov
enter
dec
ja
lds
fcompl
lret
in
push
sub
lds
mov
leave
pop
loopne
lcall
lret
add
add
add
leave
adc
sub
add
add
icebp
aad
push
scas
jg
and
add
add
insb
mov
das
outsl
std
jno
hlt
pop
adc
push
adc
mov
out
mov
ret
mov
ja
es
popl
add
add
out
out
addr16
add
sbb
mov
mov
add
or
add
daa
or
iret
mov
mov
add
add
scas
jecxz
mov
popf
cld
mov
int
pop
push
xor
pop
mov
loopne
add
add
add
push
inc
imul
movsl
enter
dec
add
add
cmp
cltd
jns
inc
mov
sub
into
imul
add
add
xor
add
add
add
add
ljmp
adc
mov
lret
xchg
repz
int3
notl
pop
and
in
int
stos
push
cmpsb
movl
test
std
dec
fsubr
and
add
add
ljmp
add
fdivrl
aas
push
fists
pop
aad
aas
lea
add
add
das
inc
sbb
inc
cmp
out
cltd
pop
and
jmp
in
popa
arpl
xchg
fidivl
loope
clc
sub
add
add
cld
push
fs
clc
ds
adc
loope
jmp
sbb
or
add
jbe
js
stos
sar
dec
add
add
jle
or
jecxz
adc
inc
add
add
pop
repz
hlt
jge
movsb
adc
adc
popf
push
inc
mov
mov
mov
adc
push
mov
sbb
dec
inc
jno
xchg
cmp
inc
xor
shl
adc
test
and
push
mov
arpl
lcall
loopne
and
cmp
mov
add
xor
add
aad
xor
push
mov
or
add
add
push
dec
mov
stos
push
loope
icebp
aaa
mov
loope
mov
out
lahf
fiadds
mov
sub
aad
and
add
add
or
mov
ret
es
outsl
sbb
jb
mov
leave
aaa
icebp
xor
mov
fsub
aaa
xlat
xor
out
jp
in
mov
adc
lret
dec
xchg
mov
add
mov
stc
inc
inc
inc
cmp
rol
pop
mov
adc
testb
clc
in
dec
add
add
cmpl
push
jns
sahf
movsb
shll
mov
dec
inc
leave
in
mov
cmpsl
out
xsavec
xor
mov
lea
add
add
fstl
dec
sbb
push
xorl
mov
shrl
mov
lahf
adc
adc
add
add
roll
inc
mov
aas
iret
mov
or
ja
out
pop
mov
add
adc
test
mov
mov
xchg
pusha
add
add
sbb
iret
push
xor
cmp
mov
or
add
add
inc
mov
push
in
inc
push
insb
mov
jns
lock
ja
fimuls
add
add
xlat
outsl
or
stos
xor
pop
pop
adc
add
add
adc
sti
stos
imul
insl
test
sbb
jmp
in
ret
int
rolb
cld
push
nop
mov
imul
rorb
add
cwtl
clc
cmp
shl
cmpsb
pop
int3
ficompl
mov
xor
adc
cmp
adc
das
test
outsb
movsb
dec
rorl
adc
add
sbb
ljmp
int
imul
mov
jns
add
xchg
jl
movsl
and
add
add
xchg
pop
push
xchg
popf
arpl
add
add
add
xor
add
mov
sub
cmp
std
add
popf
jp
fcmovu
bound
add
in
mov
cmp
lds
sub
add
add
xor
mov
mov
sub
mov
repnz
mov
fisttpl
add
add
fsubl
add
add
mov
cvtdq2ps
xchg
sub
xchg
mov
mov
iret
lret
mov
out
push
sbb
jl
dec
fidivrs
daa
jl
push
adcl
mov
add
cwtl
mov
xchg
mov
mov
sub
sahf
xor
add
add
add
jge
loop
xchg
mov
int3
idiv
mov
std
repz
jb
pop
repnz
xchg
push
jmp
jbe
loop
cmp
xor
loop
movsl
sbb
pop
popa
stos
xchg
xchg
mov
iret
or
stc
mov
add
ljmp
mov
lock
mov
divl
clc
sub
iret
cmp
add
adcl
xchg
add
add
sub
add
add
leave
es
xor
pop
sti
cltd
jns
mov
mov
pop
ds
push
cmp
iret
dec
add
add
sbb
xchg
sbb
outsb
mov
xchg
mov
iret
fisubs
dec
ss
xchg
xchg
push
mov
cmpsl
std
dec
fdivrl
mov
fimuls
dec
inc
cmpsb
cmp
adc
sbb
jno
jg
cmp
push
dec
out
adc
push
outsb
hlt
xorb
jg
std
rcrl
xchg
decb
mov
mov
addr16
popf
sbb
add
sbb
imul
push
fistpl
add
add
cmp
and
inc
push
scas
aad
jns
sub
add
add
xchg
repnz
jo
mov
mov
xor
insl
mov
icebp
enter
sbb
sahf
in
cmp
push
push
es
scas
and
imul
add
add
xor
jae
or
add
xchg
adc
in
mov
iret
in
jnp
lods
fistl
jge
sub
in
pop
test
aas
es
sbb
or
add
add
push
mov
scas
mov
add
add
add
mov
hlt
into
test
lret
js
mov
call
jg
xor
add
add
mov
add
add
test
xor
push
jge
xchg
pop
xchg
repz
stc
mov
jecxz
add
add
pop
push
cltd
mov
add
test
and
add
add
data16
or
scas
xchg
jns
cmp
mov
push
aad
and
add
add
flds
add
add
sbb
or
add
add
xchg
xor
movsl
test
mov
mov
nop
rorl
jmp
jbe
shr
add
add
popa
cwtl
sbb
pop
ret
or
in
inc
xor
dec
xor
push
or
popf
scas
repnz
in
call
sahf
cli
movb
call
sub
fwait
or
add
add
dec
lea
iret
adc
test
inc
add
add
mov
es
push
xlat
cltd
fadds
jle
xchg
add
add
mov
add
add
daa
mov
sub
dec
xchg
das
mov
xor
add
jns
jne
sahf
xor
add
add
add
stos
jae
leave
sti
adc
outsb
xchg
xchg
fisubrs
add
jae
mov
jno
add
add
inc
cmpsl
jecxz
pop
adc
inc
xor
fchs
cmc
iret
lahf
in
xchg
push
insl
mov
xchg
loop
xchg
adc
add
add
add
push
es
dec
fisubrl
mov
scas
jns
jmp
push
xchg
lcall
inc
in
test
jl
test
inc
cmpsb
fbld
add
add
stos
mov
jb
inc
addr16
arpl
xchg
fsts
jo
arpl
imul
push
push
out
and
xor
cmp
add
add
in
dec
mov
add
add
cwtl
dec
mov
add
add
add
das
fimuls
repnz
push
push
mov
mov
jns
ja
mov
mov
add
add
xor
add
fsubrp
pushf
add
mov
xorb
sbb
iret
mov
out
mov
cs
in
lret
movsb
test
ret
imul
icebp
js
aaa
pop
divb
fcomps
repz
loop
add
jo
fnstcw
cmp
push
jno
sub
add
add
clc
mov
add
lods
rcrl
inc
adc
sbb
mov
lret
lock
add
add
xchg
and
add
add
lcall
lock
xlat
cmpsl
sbb
cmpl
adc
out
mov
add
sub
xlat
mov
push
and
add
add
add
jbe
aaa
jne
inc
out
jle
xchg
push
add
add
sti
or
mov
mov
xchg
negb
mov
jmp
push
mov
popa
bound
rclb
add
add
pop
call
insb
mov
in
push
add
lods
mov
sbb
push
inc
test
xor
mov
lds
imul
xchg
popf
adc
out
add
lcall
mulb
sbb
test
pop
lret
and
ds
inc
add
add
popf
mov
dec
dec
lret
cmp
stos
jle
sub
mov
jne
test
add
xchg
and
push
out
mov
ret
stc
out
jne
popa
sub
add
add
sbb
out
mov
and
sbb
scas
jb
mov
add
xor
xor
add
add
lret
add
rolb
stos
mov
add
clc
ret
sbb
mov
movsl
popa
clc
mov
push
jle
test
bound
xlat
jecxz
pop
notb
bound
outsb
in
xor
cltd
push
xchg
push
outsl
dec
mov
mov
add
add
inc
mov
mov
add
add
sti
ret
pushf
jmp
or
jge
adc
testb
scas
in
shrb
cmp
or
add
add
test
mov
add
xchg
cmp
popa
sub
js
or
add
add
mov
andb
push
jmp
add
add
out
call
fwait
sbb
jno
mov
jnp
mov
mov
sub
push
pop
clc
shlb
xchg
adc
test
lret
pushf
lds
je
cmp
inc
insb
add
add
mov
pop
push
push
repz
lahf
in
js
out
lahf
fistl
lods
mov
mov
sti
pop
sahf
stos
sti
repnz
scas
and
mov
dec
mov
nop
add
lahf
jg
js
dec
and
roll
adc
or
mov
incb
mov
orl
cmpsb
sub
inc
les
das
test
shll
add
add
bound
adc
cmp
repnz
xor
xchg
jmp
or
xchg
pop
arpl
xor
es
mov
and
dec
cmp
sbbl
add
in
adc
sti
in
push
rolb
adc
xchg
mov
dec
inc
add
add
xchg
and
add
add
insl
daa
add
add
add
pop
sbb
mov
int
insl
and
inc
bound
enter
adc
or
add
add
xor
mov
sbb
cmp
mov
loope
xchg
mov
cmpsl
mov
jmp
mov
add
add
inc
gs
je
pop
add
fiaddl
add
add
add
cmpsb
dec
in
xor
pop
fstl
fisttpll
inc
mov
imul
imul
mov
jle
mov
add
add
add
rclb
leave
enter
orl
sub
add
add
add
xor
xchg
xchg
jp
sub
push
pop
xchg
icebp
lret
repz
and
sti
shlb
jmp
out
test
and
add
pushf
xchg
mov
nop
mov
pop
ljmp
cmp
out
loopne
sahf
and
lods
jnp
inc
xor
addl
add
add
xchg
movsb
xchg
shll
xlat
mov
ffree
scas
int3
test
sahf
into
int3
imul
mov
cmp
loopne
xchg
mov
pop
ds
scas
mov
test
xorb
push
cmp
sub
add
add
arpl
jbe
add
add
lret
bound
in
or
mov
mov
repz
int3
in
mov
mov
add
add
call
pop
enter
mov
aad
js
mov
enter
loopne
sbb
add
add
out
sbb
sti
stc
or
ret
jae
cmc
lret
int
sbb
cmpsb
ret
mov
out
dec
shrb
shrb
xor
call
aaa
cmp
mov
inc
mov
scas
sub
jbe
add
add
add
arpl
cmp
jno
stc
pop
repz
int
popa
daa
sub
add
add
jp
jecxz
dec
mov
jae
xchg
xchg
inc
mov
cmp
out
push
repz
adc
mov
inc
add
add
sar
enter
add
add
jnp
push
inc
out
cmp
imul
mov
mov
scas
in
add
add
movsl
dec
add
add
sub
scas
adc
xchg
or
add
add
loop
or
push
mov
mov
movsb
sahf
icebp
mov
test
jnp
mov
mov
aad
cmp
mov
imul
popf
nop
rorl
mov
lret
sub
add
add
cwtl
jbe
jmp
nop
mov
mov
add
push
pop
mull
add
add
mov
add
add
popa
mov
ljmp
add
add
stos
cmp
pop
add
lods
icebp
loopnew
push
int3
pop
fstps
inc
mov
std
mov
test
es
call
mov
iret
mov
add
push
shrb
mov
sahf
cs
cmc
icebp
dec
jecxz
fwait
idivb
xchg
or
mov
mov
rorl
pop
jmp
add
bound
sbb
fimull
xchg
push
jbe
sub
mov
sub
add
add
add
add
jbe
mov
xor
xchg
out
cli
jl
sub
lcall
scas
jnp
out
pop
xchg
sub
jg
mov
in
and
mov
pop
decl
add
sub
add
add
cwtl
xchg
and
bound
lahf
insl
mov
popf
arpl
pop
pop
inc
mov
add
add
pushf
push
aam
rorb
in
mov
in
mov
mov
les
pushf
nop
lock
jno
int
push
ds
jmp
sub
scas
inc
aam
xchg
pop
movl
jge
push
mov
sbb
mov
add
dec
lods
leave
call
popf
push
negl
lret
sahf
lock
in
xor
push
fwait
in
pop
fdivrl
add
notb
mov
fidivrl
adc
dec
ljmp
leave
push
or
pop
out
dec
add
add
or
add
add
or
add
add
inc
je
int3
dec
add
add
jb
std
cmpsl
lea
add
add
add
add
mov
add
add
sub
add
add
cmp
add
roll
mov
stos
outsb
in
pop
xor
aas
add
add
xor
sti
mov
xor
int3
mov
push
mov
psrld
test
xchg
mov
ficomps
imul
pop
loope
add
sbb
dec
cwtl
ds
pushl
jbe
sti
inc
and
cltd
mov
xchg
aaa
leave
or
dec
mov
insl
or
enter
int3
or
inc
adc
shr
pop
xorb
lock
addr16
add
add
push
aaa
fs
xchg
rcrb
aad
pop
repnz
les
dec
push
hlt
outsl
int3
push
test
in
xchg
js
rcrl
xor
jne
stos
push
insl
out
mov
push
insl
add
add
add
dec
add
add
push
push
ss
xchg
subl
popa
mov
pop
imulb
add
bound
movsl
push
mov
add
add
aaa
mov
aad
or
jmp
inc
out
aad
icebp
jge
push
inc
sahf
cmp
add
add
repz
mov
pop
pop
push
or
xchg
sti
adc
rcl
sti
xchg
arpl
add
add
into
cli
pop
adc
mov
sahf
pop
pop
xorl
fidivl
mov
test
add
cmpsb
jle
push
mov
add
mov
xor
test
divl
js
jns
mov
add
add
insb
add
add
in
add
int3
ret
mov
neg
hlt
cmp
xchg
imul
inc
mov
nop
test
pushf
addr16
and
mov
add
icebp
push
fwait
pop
shrl
add
add
and
add
add
out
arpl
pop
shl
xor
fs
mov
add
jp
xlat
push
xchg
pop
push
leave
inc
add
les
cmpl
aas
dec
jno
pop
inc
sar
fildl
mov
jb
xchg
push
repnz
sub
add
add
sbb
mov
and
ret
imul
testl
adcl
xor
dec
inc
mov
add
add
ret
xor
hlt
push
xlat
pop
pop
fildll
inc
sub
shll
dec
es
mov
addr16
pop
push
sub
aas
lea
push
fisubrs
xchg
es
ja
stos
adc
add
add
add
out
jmp
xor
push
sub
add
add
aaa
mov
mov
cmpsl
test
jne
or
sbb
inc
pop
mov
inc
add
add
rep
out
js
sbb
inc
mov
mov
fnstcw
popf
push
pop
clc
rcll
add
or
add
add
rcrl
add
add
add
dec
mov
jns
lods
cmpb
cmpsl
xchg
cmp
jno
movsb
xor
aas
std
fdivl
stos
adc
xchg
dec
jl
popl
add
lret
int3
lods
movl
xchg
aaa
repnz
out
frstor
in
jl
mov
jae
add
mov
mov
mull
add
xor
add
push
repz
push
xchg
push
rcrl
shrb
add
add
add
test
add
add
adc
jbe
cld
shrb
sbb
mov
sbb
push
inc
and
add
cltd
and
ret
xor
movsl
lret
sub
mov
leave
dec
cld
cmpsb
mov
add
shll
shlb
fs
dec
add
add
mov
arpl
sbb
add
add
add
jp
icebp
pop
mov
push
lea
add
add
mov
dec
lock
mov
and
cmp
cmp
pop
xchg
xor
and
lds
lock
add
jb
jg
pop
sub
cmpsb
cmc
cmp
dec
or
add
add
push
insl
jp
adc
rol
movsb
decb
add
sbb
pop
repz
insb
mov
mov
add
cmpsl
sahf
sahf
addl
add
add
cmp
mov
pop
out
pop
adc
popf
js
inc
adc
inc
enter
mov
sub
jecxz
push
bound
lds
lahf
jle
arpl
loopne
sub
pop
cmp
add
add
mov
es
xchg
call
add
and
es
pop
dec
cmpsb
test
dec
add
add
cmp
push
and
imul
add
add
sbb
or
mov
lods
dec
int3
in
btc
fdivrl
add
xchg
mov
js
dec
bound
andb
cmpsb
inc
mov
mov
fcom
lret
subb
xor
add
add
jecxz
lcall
mov
inc
call
sub
xor
sarb
xor
add
add
pop
mov
out
or
fdivrs
sbb
xor
cli
arpl
push
push
xorb
leave
cmp
pusha
add
add
cli
cmp
mov
push
aam
pop
inc
cmp
and
jg
sbb
add
scas
sub
add
xchg
mov
loope
dec
xlat
and
negl
jmp
xchg
sub
aam
jb
sub
add
add
adc
cmp
je
cmc
daa
bswap
gs
js
or
add
add
jae
xchg
mov
adc
int3
cltd
pop
nop
pop
add
pop
sub
inc
sbb
jno
add
lcall
aaa
or
add
add
add
int3
push
mov
pusha
mov
lret
rol
sbb
fdiv
cmp
pop
jb
fnstcw
inc
mov
in
jbe
lds
in
mov
add
add
aad
in
cvttps2pi
pop
into
rolb
ret
sbb
xor
push
or
sahf
pop
andb
ret
sbb
cmp
mov
jmp
pop
sbb
clc
adc
and
cwtl
lds
push
in
dec
dec
mov
xchg
in
jae
inc
mov
mov
ficoml
inc
jno
mov
push
fistps
pop
mov
xor
data16
bound
ja
mov
jp
xchg
jle
movsl
xchg
sbb
add
jmp
cmp
cmp
fcmovbe
lock
add
roll
daa
les
jbe
lret
sbbb
jnp
adc
xchg
inc
add
add
add
or
inc
cmp
sti
sbb
mov
out
pop
ss
add
add
ficompl
clc
jmp
or
adc
test
lods
and
pop
xorb
add
add
mov
stos
and
rcl
xchg
aad
test
pop
add
jbe
aaa
xor
std
aam
lods
mov
push
pop
adc
loop
or
dec
sub
sti
into
sub
int
pusha
add
add
hlt
push
insb
add
add
mov
jno
xor
iret
dec
sbb
sbb
lea
add
jl
cmp
push
adc
jl
mov
mov
sbb
add
add
add
mov
jg
jns
inc
mov
dec
inc
inc
popa
call
cwtl
test
out
mov
and
add
mov
add
add
lods
orl
cmp
mov
ds
and
add
add
mov
jne
adc
add
add
sbb
add
movsl
pop
in
pop
cmp
inc
cmp
addl
pushf
inc
add
add
das
inc
add
add
xlat
ret
jmp
mov
xchg
test
and
or
add
add
scas
mov
hlt
and
add
add
add
cmc
enter
out
or
mov
add
add
popl
shrl
add
mov
test
pop
pop
mov
mov
add
add
jle
add
add
lds
ret
pusha
add
add
sub
add
add
frstor
add
add
add
jo
jb
add
add
add
andb
push
ret
enter
outsb
fstpl
loope
jbe
cmp
imul
adc
lods
das
in
notl
cli
cld
fs
push
push
xlat
lock
imul
out
xchg
mov
cmp
and
jno
das
mov
add
lods
inc
int3
pushf
cmp
lods
inc
mov
fs
stc
push
cmp
add
test
inc
adc
inc
stos
fbld
les
add
add
fistpl
lock
test
rcll
xor
add
add
mov
push
inc
fwait
push
xor
cs
sub
mov
popa
pop
mov
add
add
jns
imul
cli
mov
and
push
lock
pop
add
add
add
aaa
fwait
jno
test
fmull
enter
add
add
push
xor
add
adc
add
add
shl
or
inc
test
addr16
mov
add
movsb
in
aam
loopne
vcomiss
and
mov
jne
shl
push
hlt
or
pop
das
pop
out
aam
es
cs
and
add
add
push
lret
jbe
inc
cli
jo
fidivrs
pusha
mov
in
xor
xchg
push
add
sub
add
add
pop
test
rcrb
dec
aam
push
inc
mov
push
clc
daa
loopne
mov
mov
fadds
dec
add
add
mov
lret
dec
add
add
sbbw
sbb
and
sub
add
add
shll
push
mov
xchg
in
or
add
add
sub
add
add
adc
aad
call
repz
jp
add
add
ljmp
mov
loope
inc
mov
push
stos
sbb
jle
mov
add
jo
mov
roll
xchg
and
dec
add
rorl
xor
out
dec
pop
lods
lea
ss
aad
pop
in
jle
mov
mov
pop
xor
ja
jle
imul
enter
movsb
imul
push
sub
inc
int
scas
jmp
add
pop
lcall
add
jns
xor
lcall
jge,pn
cmp
hlt
adc
mov
and
pop
xor
rorb
adc
add
not
in
sbb
adc
cli
dec
mov
jns
dec
add
add
movb
lods
cmp
add
and
mov
add
fdiv
inc
jo
and
iret
and
pop
insb
add
add
add
mov
lock
add
mov
jne
jne
cmp
pop
fsubr
pop
mov
movsb
cmp
sub
mov
xchg
xchg
loope
add
add
xchg
data16
or
add
add
push
pushf
mov
xchg
mov
outsb
jo
scas
in
dec
push
sbb
add
add
jbe
gs
in
xchg
int3
xor
inc
icebp
adc
cmpsl
sbb
test
sar
or
add
add
ficoml
fucomp
pop
push
test
aaa
lret
mov
push
aaa
push
out
mov
add
add
rorl
add
add
add
add
test
mov
xchg
popf
out
call
add
xchg
or
std
fsubs
pop
mov
xchg
dec
jb
mul
jge
xchg
dec
mov
jmp
cltd
pop
jae
outsl
cld
js
les
push
stos
and
add
add
sub
mov
pushf
das
or
jp
pushf
mov
lds
pop
fwait
adc
iret
xchg
mov
cli
cmp
add
add
mov
test
xor
mov
add
add
paddb
xchg
scas
sarl
mov
mov
mov
sub
push
mov
mov
mov
mov
sbb
xor
shl
xlat
fbstp
scas
nop
adc
or
je
add
add
sbb
outsl
jmp
test
into
sub
add
inc
pop
xor
cmp
add
add
add
fwait
cs
enter
pusha
mov
push
mov
mov
or
cmp
mov
mov
jmp
pop
ss
je
pop
rcl
jne
add
pop
mov
add
cmp
add
cmpsl
or
aaa
xlat
cmp
mov
dec
push
dec
lret
xlat
in
push
pop
fnsave
fsubl
add
add
add
or
pop
sub
add
add
push
imul
stos
mov
lret
pusha
add
add
mov
cld
lret
in
mov
ror
out
test
imulb
js
xchg
aam
movl
mov
dec
add
add
push
xchg
out
mov
cli
push
bnd
sbb
mov
push
pusha
add
add
xchg
xchg
pusha
mov
xlat
in
cmp
add
push
adc
je
aas
mov
xor
movsb
std
push
aaa
ret
push
sub
add
pop
mov
lcall
add
xchg
sub
mov
add
add
or
add
add
add
pushf
les
hlt
das
ret
add
mov
aad
fimuls
in
lahf
test
or
push
or
pop
insb
add
add
jecxz
rcrl
dec
cmp
pop
xlat
cltd
mov
std
mov
add
add
lcall
and
push
vpcmpeqb
icebp
movsl
popa
inc
lcall
cmp
mov
mov
add
add
adc
int
imul
add
sahf
testb
sbb
mov
pushf
jge
fstpl
jl
sbb
mov
add
outsl
push
dec
xchg
jle
xchg
inc
clc
dec
fbstp
std
imul
stc
push
stc
iret
in
lret
hlt
dec
push
orl
sub
add
add
pop
in
sub
mov
ffree
fildll
push
rolb
aam
sti
std
sbb
xchg
int
and
add
add
mov
sbb
inc
push
fs
stos
xchg
mov
cmp
std
push
dec
ja
fmuls
mov
sbb
cmp
add
add
cs
es
cli
stc
in
in
unpckhps
or
gs
cmp
jne
sbb
push
push
aaa
testl
mov
lahf
or
fldenv
add
add
sub
add
add
ret
insl
cmp
add
add
mov
xchg
xchg
movsb
pusha
add
add
push
loopne
pop
xchg
outsb
inc
push
mov
sbb
ljmp
shl
arpl
fsubp
mov
xchg
mov
idiv
es
mov
add
add
subl
fmul
sub
gs
add
add
cld
mov
pushf
daa
fchs
fucom
push
add
add
add
aam
les
xchg
int3
test
mov
add
cmp
mov
mov
mov
test
xchg
push
xchg
out
add
add
add
es
pop
stc
shrl
push
xor
mov
add
add
mov
jle
adc
cmp
add
lret
jns
ja
mov
jnp
jnp
or
add
mov
sbb
inc
mov
cmp
rorb
jns
pop
push
idiv
je
nop
movsl
int3
sbbl
mov
insl
dec
mov
clc
clc
add
cmp
popf
or
je
jo
lret
cmp
bnd
add
add
add
add
add
fbld
mov
stc
fadds
fldt
add
add
mov
adc
add
xor
pop
jnp
fldenv
enter
sub
sub
movl
push
popa
sbb
pushl
dec
jb
cmp
ss
adc
mull
loopne
add
add
and
add
push
lea
dec
lds
mov
xchg
loope
pop
xchg
ret
cmp
lds
jl
jl
popf
test
cmp
xchg
fidivrl
add
mov
mov
and
nop
cmc
insb
add
add
lcall
daa
push
nop
push
xorb
and
push
rcrl
outsl
sti
testb
push
push
int
pop
in
shr
ja
xchg
sub
lds
test
in
inc
add
add
add
jns
call
cltd
dec
notb
xchg
cmp
ret
nop
ret
push
sbb
ljmp
fiadds
pop
push
inc
sbb
jl
mov
mov
cmp
cmp
pop
cmc
add
add
call
fldl
mov
inc
jmp
js
adc
scas
outsl
xchg
sahf
mov
mov
es
orl
int3
dec
add
add
repz
sbb
out
cmc
lret
mov
inc
mov
cmpsb
jecxz
hlt
icebp
iret
popf
sub
add
add
cld
gs
jl
sub
dec
pop
dec
mov
lock
push
daa
mov
jbe
and
jbe
pushf
mov
mov
stos
sbb
pop
mov
push
fs
push
xor
lds
out
cmpsb
pop
cmc
xor
sub
cmp
push
cld
loop
sub
push
in
add
add
dec
xchg
push
outsl
sahf
cmp
jp
sub
sti
pop
mov
pushf
adc
adc
mov
lret
ret
dec
xchg
push
pop
xchg
jp
jecxz
popa
mov
add
add
add
mov
add
add
add
add
add
add
mov
add
mov
mov
hlt
cmp
cmp
cmp
add
add
lret
int
dec
out
insb
add
add
dec
addb
ss
jge
lock
add
add
dec
add
mov
je
adc
sub
mov
popf
cld
insb
mov
pop
out
sbbl
xor
xchg
adc
popf
ljmp
adc
add
add
add
cmp
flds
mov
mov
icebp
leave
flds
call
data16
mov
sub
jp
arpl
push
sbb
js
inc
add
add
xchg
xchg
pop
push
pop
dec
add
add
decb
add
add
xor
stos
out
mov
sbb
pop
lea
data16
jg
pop
push
adc
sub
add
add
push
pop
cmpsl
rorb
dec
cmp
lods
xchg
scas
lock
xchg
push
cmp
icebp
pop
push
ds
pop
push
cmp
add
add
adc
cltd
sub
xor
lods
jmp
ds
mov
repz
pop
pop
movsl
mov
pop
add
jecxz
add
or
add
add
bound
arpl
and
add
add
xchg
cwtl
cli
icebp
gs
and
add
add
jne
dec
sub
inc
fldenv
add
mov
aam
aas
cltd
mov
lret
inc
sarb
xchg
js
add
add
jbe
mov
adc
test
shlb
or
mov
dec
rcl
sbb
add
add
xor
lea
and
sub
lods
or
lock
inc
push
sub
add
xor
stos
rcll
leave
xchg
addr16
mov
xor
jl
mov
mov
mov
or
add
add
mov
mov
test
div
and
pop
rol
jmp
scas
sbb
jns
movsl
leave
or
andb
add
dec
add
add
inc
add
add
dec
inc
mov
mov
inc
xchg
mov
outsb
mov
mov
cltd
cmpsb
jbe
dec
xchg
mov
test
xchg
dec
mov
cli
add
imul
mov
mov
dec
mov
push
movb
cmp
test
push
aas
and
iret
test
cmp
cmp
add
add
mov
sbb
test
add
out
das
sbb
cmc
out
xchg
jg
sub
add
add
xor
and
mov
shl
jo
rol
mov
mov
inc
cmpsb
inc
add
add
das
fsubs
adc
jmp
add
add
scas
pop
inc
or
add
add
cmpsb
mov
in
add
add
mov
pusha
add
add
push
outsb
adc
ja
mov
out
cmp
aad
out
mov
add
mov
stc
adc
ret
jle
xor
sar
outsl
test
sub
jg
mov
das
leave
xchg
repnz
and
xchg
mov
jge
popa
shrl
pusha
mov
or
add
add
xor
and
or
cli
sub
add
arpl
add
dec
aas
test
xlat
push
jae
mov
dec
and
add
add
inc
ret
sbb
shlb
aad
leave
sbb
lret
cmp
iret
add
lods
xchg
xchg
mov
and
sbb
xchg
lods
pop
sbb
nop
mov
dec
mov
mov
nop
adc
shl
pusha
mov
ret
sbb
fildl
push
mov
dec
mov
add
add
sahf
movsl
xchg
xor
jmp
gs
lahf
cs
dec
lahf
dec
sub
xorb
loopne
dec
add
add
insl
lods
or
pop
loope
cmp
push
xorl
xor
mov
inc
les
std
push
xor
mov
inc
jo
xor
cmp
bound
fdivs
fildl
cwtl
leave
nop
loopne
repz
mov
fs
dec
jmp
xchg
xor
mov
stos
leave
mov
inc
adc
out
test
sbb
mov
in
test
xchg
test
adc
add
add
add
aad
cld
dec
pop
jge
fdivrs
stc
or
add
add
adc
int
daa
movsb
xor
cmc
fcom
inc
add
add
stc
sbb
xor
ljmp
mov
insl
xchg
mov
inc
push
pop
bound
add
lds
add
add
add
or
xchg
and
and
dec
push
rcr
ret
mov
add
mov
ds
in
fldl
inc
mov
jae
mov
or
add
call
xchg
mov
jl
bound
pop
sub
xchg
lods
mov
add
mov
lahf
mov
jmp
or
sbb
pop
push
mov
loopne
mov
pop
out
fldenv
cld
or
adc
mov
aad
repnz
add
add
inc
mov
jg
add
add
lahf
add
add
mov
xor
ret
out
sub
xor
cmp
test
mov
xor
out
sbb
or
pop
inc
nop
xor
jg
add
add
push
xchg
mov
add
add
es
mov
cmc
inc
add
add
and
stos
ret
and
aaa
xor
jb
mov
repnz
ficoml
loope
negb
mov
pop
mov
add
nop
loop
in
call
add
add
mov
inc
inc
jno
add
add
dec
jge
add
add
xor
dec
ret
call
scas
in
icebp
mov
testb
add
call
mov
hlt
inc
mov
jecxz
add
add
stos
es
mull
mov
and
inc
jecxz
mov
pop
nop
or
jge
inc
inc
nop
int
mov
in
mov
xchg
dec
clc
dec
cmc
jns
ret
mov
push
sub
add
add
int
pop
out
movsb
icebp
sbb
jne
sub
add
add
add
iret
rorb
add
decl
es
fldenv
arpl
icebp
mov
mov
cmpsb
lea
scas
sub
clc
jl
cmp
ret
mov
mov
fbld
pop
add
jbe
pusha
add
add
and
in
icebp
imul
cmp
mov
push
test
les
in
stc
mov
ja
add
add
adc
daa
push
cmpsl
pusha
add
add
mov
add
add
call
sti
aad
sub
icebp
and
add
add
add
loopne
dec
and
add
add
push
ror
fs
xchg
mov
push
sbb
cmp
cld
scas
mulb
mov
clc
scas
shll
mov
sarb
lahf
dec
push
sub
pushf
sub
add
add
add
popf
cmpsb
mov
jnp
into
pop
insl
stos
stc
clc
hlt
fwait
aam
dec
enter
loope
inc
add
add
push
and
mov
mov
mov
icebp
mov
mov
push
gs
sub
insb
add
add
test
es
cli
js
sahf
out
jmp
cmc
test
movsl
into
scas
jle
jge
test
inc
mov
push
loop
adc
and
aaa
sar
mov
xor
inc
mov
pop
js
mov
adc
test
fcmovbe
cmp
adc
sbb
inc
nop
adc
add
add
cmp
add
movsl
arpl
add
add
or
add
add
mov
add
add
add
enter
jns
cmp
je
add
add
shll
outsb
cli
pop
cmp
sub
pusha
add
add
fmull
add
add
or
mov
ja
add
add
add
outsb
sbb
dec
mov
pop
lock
mov
cmpl
stos
cmpsl
cmc
cmp
fidivrs
insl
out
pop
rcrl
in
inc
mov
push
mov
pop
outsl
inc
add
add
js
xor
fadds
pop
pop
shrb
es
hlt
into
lods
popf
movsb
aam
mov
lfs
lock
out
pop
mov
cmp
clc
sbb
hlt
das
into
das
xchg
xchg
out
ret
movsb
repnz
xchg
fiaddl
sub
add
add
icebp
scas
add
movsb
mov
ret
in
imul
add
lock
aaa
repz
mov
jle
iret
fstpt
sub
pusha
mov
adc
xor
loopne
adc
or
mov
fstl
mov
jne
lcall
lret
add
add
cmpsl
and
add
add
repnz
loope
cltd
std
sub
add
add
add
mov
jbe
sub
add
add
sbb
pusha
mov
push
js
movsb
ror
loop
lahf
mov
cld
pop
movsl
or
add
add
rclb
es
test
mov
imull
jle
lcall
add
add
add
cmp
cmp
lret
imul
icebp
pop
jl
adc
add
add
aam
mov
mov
mov
call
mov
adc
xor
fs
push
sti
out
in
aas
test
scas
scas
jbe
xchg
xchg
and
call
add
mov
push
out
mov
dec
vmwrite
xor
dec
add
add
inc
je
inc
add
add
inc
cltd
sbb
stos
push
enter
add
xchg
adc
xchg
lret
cwtl
movsb
xorb
add
add
xchg
add
add
fistpl
sbbl
xor
jle
nop
jp
jmp
call
mov
mov
xchg
xchg
roll
jg
test
xor
loop
sbb
aad
cmpsl
mov
test
mov
and
fisubs
aad
inc
fsubrs
add
add
jo
mov
sub
mov
add
cld
cmp
outsl
cmc
and
jge
mov
add
add
jb
jbe
sbb
mov
in
sbb
and
add
add
add
cmp
jle
ret
icebp
and
out
lods
in
dec
add
add
into
movsl
ret
jo
and
lcall
sbb
mov
jge
fistpll
imul
jl
movsb
lds
in
nop
mov
inc
cmp
add
cmp
jl
jp
notl
aad
outsb
push
lds
call
jae
pop
dec
pop
jmp
sub
or
add
add
cmp
lcall
out
hlt
ldmxcsr
movsb
nop
mov
xlat
jp
ret
in
pop
push
dec
add
add
add
test
add
out
adc
mov
mov
xchg
cli
sarl
scas
push
out
mov
arpl
popa
outsl
mov
test
add
add
jo
mov
sub
push
les
add
imul
lcall
ja
adc
add
add
dec
ret
add
add
cmp
cmpl
shll
push
ret
pop
sbb
inc
mov
add
add
insl
cmp
adc
or
add
add
dec
scas
lcall
push
xlat
cld
xchg
adc
sti
xchg
jo
xchg
pop
sub
mov
add
add
mov
leave
jne
sub
sbb
add
add
stos
ja
add
add
push
inc
jne
lcall
movsl
jae
pop
sub
leave
in
jb
inc
pop
aas
jge
mov
arpl
jno
add
int3
jmp
mov
xchg
add
add
add
pop
mov
lahf
loop
jns
mov
mov
fstpt
int
fs
jmp
add
and
outsl
push
and
add
add
add
add
stos
sti
fisttpl
push
adc
mov
subb
aas
out
pop
clc
xor
add
add
add
xor
imul
or
xor
aad
cs
pushf
popf
fidivrs
mov
add
and
xchg
or
mov
cmp
int
push
rcrl
add
add
add
out
xchg
xchg
jo
in
add
jp
sub
sti
dec
xor
mov
mov
sub
jno
shrb
push
jle
pop
leave
jge
loope
rcr
sti
adc
bound
test
or
add
add
daa
inc
mov
es
aaa
sbb
mov
sahf
lods
cmp
and
xchg
or
add
add
jecxz
xor
inc
push
dec
stos
cs
add
cli
and
rcrb
out
gs
add
outsb
mov
or
add
add
add
xor
ret
loop
ret
insl
data16
cmpsb
dec
xchg
mov
sbb
mov
or
mov
sub
push
jg
outsl
cltd
xor
and
lods
mov
in
push
xlat
lods
les
inc
mov
mov
add
add
shr
pop
push
lods
mov
sbb
add
ja
xor
add
es
add
add
cmp
mov
pusha
add
add
sbb
stos
decl
or
mov
cmp
in
fnsave
pop
insl
mov
in
add
sti
push
test
cmpsl
js
ss
add
add
xchg
es
dec
adc
aas
jns
ljmp
add
add
pop
leave
mov
sub
pop
lock
fs
mov
test
adc
mov
inc
push
inc
movsb
stc
xchg
mov
imul
add
add
mov
or
add
incl
aaa
mov
jae
out
repnz
mov
shlb
add
and
add
add
and
add
add
lea
aas
sub
push
iret
cmp
ret
xchg
js
out
mov
push
push
jecxz
cwtl
sti
pop
pop
xchg
dec
int
push
cmp
add
add
cmp
pop
test
sti
out
pop
mov
xchg
lods
jb
loopne
test
mov
dec
sbb
mov
jl
mov
mov
add
add
xchg
fldenv
jecxz
add
add
add
hlt
loopne
add
cmp
fsubs
add
add
add
pop
and
fsubs
addr16
push
rcrl
adc
xchg
imul
add
sti
push
ljmp
loopne
jmp
add
add
call
adc
xchg
adc
or
add
add
push
aad
add
add
mov
add
jo
pop
sbb
imul
outsl
call
adc
mov
icebp
jl
sub
arpl
cld
cmp
jl
push
ret
cmp
or
add
add
jbe
add
cltd
adc
stos
sub
stos
jae
mov
or
add
add
sbb
push
insl
xchg
dec
dec
data16
leave
fucomp
mov
xor
pop
andb
add
imul
mov
mov
push
jecxz
ss
dec
mov
movsb
lcall
ficompl
push
xchg
adc
cmpsb
nop
js
iret
lcall
add
testl
xor
pop
dec
mov
add
add
dec
push
adc
xor
fimull
fs
iret
sub
inc
push
inc
dec
adc
add
and
jno
aam
lods
cmp
popa
add
mov
fnstenv
jne
repnz
inc
xchg
sbb
add
add
movl
mov
cmpsb
in
fsubrl
stos
pop
inc
mov
dec
or
mov
lock
add
clc
and
jnp
mov
sti
leave
mov
mov
mov
cmp
in
dec
add
add
mov
aas
inc
add
add
sbb
lods
gs
xchg
mov
inc
add
add
xor
push
mov
arpl
cmovb
lods
daa
xor
mov
sub
add
cmp
sbb
jb
mov
pop
and
jno
pushf
xor
decb
lock
mov
xorl
shrl
test
xchg
jbe
mov
cmpsb
push
pop
inc
dec
add
add
insb
add
add
outsb
std
inc
inc
xchg
jae
sbb
add
add
mov
adc
mov
fcompl
push
xor
pop
sub
add
les
cmpsl
sahf
and
dec
adc
ds
adc
scas
stos
pop
gs
xor
xor
add
jl
leave
dec
jb
xchg
scas
addl
or
jae
pusha
mov
pop
pop
adc
movsb
int3
xlat
pop
ficoms
or
add
add
stc
mov
and
std
cwtl
and
sub
add
add
icebp
add
add
add
dec
stos
jns
mov
loop
aas
push
mov
mov
ds
mov
push
jg
push
cmp
cmc
ret
adc
push
hlt
mov
stos
or
add
add
sbb
sub
mov
add
add
insl
mov
lret
mov
scas
fdivrs
fistl
addb
add
sbb
rcrb
mov
mov
inc
cs
sbb
add
inc
imul
psubsw
adc
push
negb
icebp
out
in
push
lock
or
add
add
add
mov
mov
xchg
push
hlt
push
jmp
dec
cmp
cwtl
adc
dec
shl
pop
inc
xchg
cmp
xchg
pop
inc
fcmove
adcl
dec
jp
jg
scas
fs
test
and
add
add
fadd
mov
mov
notb
mov
setno
inc
dec
sub
add
add
call
mov
mov
repz
in
xchg
dec
add
add
nop
cmc
lea
add
add
add
jno
xor
testl
push
fcomps
gs
into
jnp
jo
push
test
pop
adc
das
xlat
add
add
mov
pop
sbb
rolb
mov
lds
mov
movsl
adc
push
xchg
adcl
xor
testb
add
add
fsubrl
pop
in
sub
loop
into
data16
sub
add
andb
xlat
push
lret
push
repz
popl
add
add
xlat
mov
cli
xor
movsb
jg
mov
mov
daa
dec
xchg
loop
mov
add
add
mov
movsl
sub
add
add
add
cmp
lret
shrl
mov
inc
loope
sub
cltd
int3
dec
mov
add
shlb
add
add
pop
std
rcrl
test
mov
in
push
jno
add
add
sub
add
add
fsubrl
das
mov
fwait
xlat
js
mov
mov
jmp
fsubr
jnp
outsl
sub
jo
rcr
out
pop
sarl
flds
xchg
jg
out
dec
xor
add
mov
aas
xchg
adc
mov
inc
mov
fildll
add
jnp
pop
xchg
add
jg
xchg
pop
mov
jg
mov
sub
add
add
mov
dec
shrb
shrb
pop
pop
cmp
imull
or
or
mov
or
cld
popf
jg
mov
les
insb
add
add
int3
cmp
dec
dec
cmc
movsl
inc
jnp
inc
lea
adc
dec
enter
add
add
sbb
in
push
es
jnp
out
inc
mov
jmp
push
sbb
inc
add
add
jmp
and
add
add
dec
add
add
jae
popf
das
shll
jle
jnp
add
add
sahf
push
xor
lods
fcom
or
xchg
cmp
pop
lds
push
push
jg
push
in
jae
jbe
lock
mov
insb
add
add
dec
mov
fiadds
add
add
mov
dec
add
add
and
scas
sbbl
sub
add
add
scas
leave
push
pop
inc
hlt
leave
pop
bound
in
aaa
test
or
iret
pop
adc
push
sub
add
add
add
sbbl
jns
mov
pop
inc
or
add
add
add
or
add
add
and
test
add
dec
add
add
xchg
jnp
xchg
movsl
dec
sahf
ds
push
jo
mov
pusha
add
add
mov
mov
cs
push
sbb
lret
xchg
paddw
dec
aad
cmc
hlt
bound
mov
test
mov
cmp
mov
cld
pop
leave
int
loope
test
stos
pop
push
in
iret
lods
pop
sbb
pop
lret
shlb
int
jge
jmp
jnp
add
sub
add
add
push
pop
lea
add
sub
add
add
xchg
divl
mov
sarl
insl
jb
mov
lds
pop
out
in
dec
add
add
mov
shl
cltd
cmp
add
add
ret
loop
push
push
insb
add
add
shrl
mov
sbb
mov
fistl
add
lret
loope
stos
dec
iret
lret
mov
out
sbb
sub
loopne
mov
scas
jp
mov
cltd
imul
add
add
add
rclb
xor
add
add
shl
repz
jb
pop
lret
es
mov
inc
add
add
iret
pop
test
dec
mov
xchg
add
xor
mov
xlat
xor
cmp
pop
push
lods
lea
aad
scas
push
push
stc
dec
arpl
xor
mov
aas
fwait
sub
add
add
andl
gs
int
xchg
pop
push
sub
add
add
sub
out
sub
add
add
fsubrs
mov
call
jecxz
lcall
pop
js
stos
push
das
lahf
lds
testl
sti
inc
mov
jl
sub
add
add
adc
fildl
add
add
add
iret
sbb
pusha
add
add
and
add
add
bnd
les
add
add
in
jns
pop
jno
push
mov
jmp
cmpsl
mul
dec
jbe
lods
pop
xchg
icebp
sbb
inc
or
inc
test
out
jge
mov
xchg
fs
inc
out
adc
nop
sbb
das
aaa
imul
lret
aam
arpl
xor
imul
mov
or
jno
pusha
add
add
or
ficoms
daa
xchg
push
daa
dec
mov
jecxz
cmp
stos
aam
dec
call
mov
push
test
adc
mov
add
push
sti
pop
sbb
insl
int3
andl
push
cltd
mov
sti
dec
ss
sub
add
add
adc
add
add
inc
and
add
add
jnp
add
add
inc
mov
jno
sbb
nop
pop
sub
add
add
lret
xor
iret
mov
mov
ret
outsl
mov
js
push
dec
in
mov
pop
imulb
add
add
cmpb
or
insl
add
mov
dec
mov
adc
or
add
add
lahf
jg
push
test
shrb
push
int3
cltd
cs
rcr
lea
mov
add
imul
daa
push
push
inc
jnp
outsb
mov
push
or
in
mov
arpl
add
add
add
add
inc
mov
out
fs
mov
push
mov
add
add
push
pop
pop
rclb
test
mov
add
cmpsb
out
mov
fistpl
cmp
leave
cwtl
push
jge
sti
push
xorl
mov
lahf
mov
mov
dec
xchg
imul
add
mov
jecxz
pop
jp
cmpsl
in
mov
add
cltd
stos
pusha
mov
xchg
sbb
mov
sub
add
add
add
lcall
daa
aad
loope
dec
jbe
leave
int
mov
push
sub
add
add
jmp
sbb
mov
add
dec
mov
lret
int3
lods
pop
mov
adc
mov
add
mov
movsb
add
add
add
fmuls
add
add
scas
mov
jns
cli
push
push
subb
add
add
das
adc
into
dec
cmp
out
adc
repz
mov
test
addr16
out
jb
rcrl
adc
cs
lods
jbe
mov
push
dec
in
adc
sbb
fs
add
add
add
in
ja
pop
and
add
add
add
sub
add
add
es
add
add
jnp
out
xlat
dec
bound
push
mov
out
cvtdq2ps
cmpsl
inc
push
pop
aad
xchg
fldl2e
jb
sahf
lods
fldcw
add
mov
fdivrl
mov
inc
mov
es
pop
outsl
xlat
sbb
das
and
int
jae
xchg
xchg
adc
movsl
dec
add
add
data16
inc
or
add
add
sub
adc
cmpsl
dec
cmp
or
mov
jns
add
add
scas
pop
inc
add
add
adc
add
lds
add
add
add
mov
out
enter
adc
add
add
dec
rcrb
pop
hlt
mov
mov
inc
dec
xchg
stos
test
out
mov
fildl
rcrl
xchg
ja
dec
add
add
int
and
push
loop
jmp
mov
mov
mov
add
add
hlt
jp
jb
push
xchg
in
pop
jae
jnp
outsb
pushf
leave
scas
sub
add
add
lsl
jae
add
add
cmpsl
adc
aaa
xor
add
add
add
mov
push
xchg
les
in
inc
add
add
lods
mov
cld
ret
cmp
and
mov
mov
sti
adc
es
rcrl
mov
dec
add
add
fldl
ds
add
add
inc
add
add
in
fwait
inc
mov
adc
jo
inc
sub
add
add
add
mov
mov
out
pop
mov
fs
add
xchg
out
mov
call
sbb
mov
fildl
add
add
xor
push
imul
jge
cs
push
jne
shrb
push
sub
and
add
add
mov
sub
add
add
add
pop
xchg
ljmp
inc
sbb
add
add
dec
mov
fnstenv
bound
test
jecxz
sbb
loope
popf
dec
xchg
dec
dec
dec
pop
int
xchg
test
sbb
and
mov
push
shll
pop
cli
stc
mov
adc
add
push
dec
jl
or
outsl
into
jecxz
mov
pop
es
add
add
add
lods
fimull
mov
add
add
lret
pop
shrl
pop
adc
aas
sub
ja
scas
mov
mov
sub
xor
in
push
cltd
dec
xlat
aad
into
data16
lret
imul
adc
pop
call
add
add
enter
popa
lret
mov
and
nop
pop
xor
push
push
sub
lds
mov
sti
stos
pusha
add
add
add
add
add
mov
icebp
rep
sarl
or
add
add
shl
or
mov
mov
and
or
add
inc
scas
cmc
iret
int3
aas
ss
push
jno
lahf
cmc
cld
lock
jle
arpl
and
add
add
jmp
andl
mov
pop
sbb
cmp
add
add
cmpb
fmull
out
test
sub
movsl
test
mov
fcompl
out
xor
jmp
mov
add
pop
xor
add
and
ret
pop
xchg
aas
lret
mov
add
add
test
and
ja
out
lret
sarb
insl
test
jl
adc
ficomps
lcall
test
mov
fsub
mov
pop
xchg
pusha
mov
fisubl
add
add
sbb
loope
je
dec
lahf
subb
pop
scas
cltd
pop
arpl
cwtl
inc
lcall
jb
cmp
or
in
and
dec
add
add
outsl
xor
mov
add
add
dec
add
add
repz
sar
repz
ja
add
add
push
sbb
aam
adc
add
jo
and
popa
inc
sub
add
add
add
add
test
mov
fcmovnbe
inc
add
add
cmp
pop
es
add
add
add
add
jmp
add
lds
add
add
pop
pop
dec
mov
add
add
adc
add
fldl
shrb
ja
pop
jg
xor
dec
jne
mov
xchg
mov
pop
sub
add
mulb
call
ds
fstpl
adc
mov
adc
into
and
add
add
add
outsl
jne
repnz
mov
ret
mov
sub
shrb
adc
cmp
or
add
add
sti
bound
add
add
cmp
ds
rcrb
lea
xchg
jnp
and
ss
fbld
cmpsb
aaa
jmp
sub
add
lret
decl
add
add
les
insl
scas
jo
xor
add
cmpsl
add
add
add
imul
jbe
cld
push
pop
cmp
insb
mov
das
sti
in
insb
add
add
cs
pop
and
add
add
lds
push
fbld
add
add
mov
add
adc
lret
addb
ss
mov
dec
rolb
add
orl
or
add
add
jle
push
adc
add
add
shlb
jnp
inc
dec
dec
push
push
mov
hlt
pushf
push
jmp
add
add
jnp
cmpsb
stos
imul
mov
push
push
xchg
pop
incl
test
dec
mov
xor
add
add
add
cmpb
pop
push
push
mov
test
popf
stc
pop
dec
dec
add
add
xor
fsubl
xchg
arpl
add
add
mov
add
add
pop
inc
add
add
push
and
jl
and
popf
xorl
mov
push
daa
outsb
push
movsl
fldl
out
cmp
pop
adc
add
leave
mov
add
add
add
jge
jae
jl
mov
add
add
xchg
rolb
add
add
push
andl
sub
xchg
movsl
lcall
cmp
cmp
aaa
fucomip
in
test
mov
dec
dec
push
xchg
jmp
push
js
xor
out
mov
add
add
add
outsl
out
popf
in
cs
mov
les
and
out
or
sub
out
sub
add
add
pop
enter
pop
lods
push
sbb
pop
xor
add
mov
mov
pushf
mov
dec
mov
pusha
add
add
das
jg
pop
xlat
add
add
add
add
add
inc
ja
or
add
add
xor
xchg
xchg
jbe
pusha
mov
mull
sbb
mov
sbbb
cld
arpl
inc
xchg
andb
xor
and
fstl
and
add
add
cmp
pop
add
xchg
lods
sub
add
add
in
testb
add
add
add
lock
mov
jecxz
mov
push
or
xlat
jg
mov
and
ljmp
sbb
push
fiadds
mov
enter
test
fnsave
mov
sbb
ss
lods
rcll
push
mov
lret
stc
pop
add
lds
adc
mov
lods
test
dec
and
add
add
je
add
add
add
mov
jmp
cmpsl
adc
lds
mov
and
les
pop
add
add
add
dec
mov
mov
add
enter
xchg
pop
sub
xchg
mov
mov
mov
es
add
add
lods
ljmp
stc
je
pop
lahf
add
add
mov
je
mov
ficoml
jle
inc
adc
dec
fwait
mov
cltd
lods
adc
mov
fstp
lods
and
jb
nop
imul
add
add
mov
push
jbe
js
push
nop
sbb
push
sahf
xor
bound
add
in
sarb
mov
fwait
jle
mov
add
add
in
push
sub
xor
iret
lds
mov
jmp
hlt
add
fimuls
push
sbb
add
add
mov
sbb
cmp
sti
or
loope
loopne
mov
sbb
jge
ret
inc
add
add
add
add
mov
faddp
mov
mov
jae
gs
dec
mov
push
pop
orb
add
add
ret
aas
sbb
subb
or
add
add
call
and
in
test
add
add
and
add
add
add
mov
ret
out
mov
dec
outsl
sbb
movsb
scas
pop
sbb
xchg
fs
outsb
in
lock
or
sbb
out
cmp
and
jae
mov
loop
cmc
sbb
add
idivb
cmc
jbe
imul
aam
adc
add
add
shll
mov
loopne
test
icebp
cmc
sub
pop
sub
loopne
and
dec
sub
cmc
shl
push
sarb
sbbl
inc
mov
mov
add
xor
add
add
pusha
mov
push
cmp
icebp
call
add
add
push
push
out
add
call
add
add
fldl
lret
add
cmc
pop
enter
mov
add
add
mov
xchg
mov
cmp
add
add
add
mov
mov
fcomip
roll
int
idiv
pop
jge
aaa
inc
sti
xchg
sbb
mov
xchg
bound
add
add
mov
xor
cmpsb
add
sbb
mov
dec
pop
fidivrs
pop
nop
inc
ret
cld
lret
inc
push
inc
mov
pop
sub
add
add
je
sub
pop
lds
cmp
popf
jbe
lcall
add
add
cmp
pop
out
out
roll
lds
inc
or
add
add
xchg
int3
push
push
cli
shll
int3
push
nop
fdivrl
pop
cmp
and
xchg
sub
add
add
cmp
in
fdivs
out
subb
or
add
add
in
or
fstps
adc
add
add
push
testb
out
inc
pop
scas
push
ret
pop
mov
inc
mov
nop
mov
mov
bts
cs
insl
mov
sub
push
mov
inc
dec
es
mov
jecxz
call
add
xchg
cld
push
lcall
adc
add
add
xchg
call
out
je
imull
add
push
ss
js,pt
ja
cltd
cmp
add
mov
push
add
enter
inc
add
add
or
call
xchg
stos
sub
test
mov
push
lcall
xchg
jecxz
push
jns
into
pop
sahf
test
sub
in
pop
fadds
jge
mov
repnz
add
add
mov
jo
mov
cmp
push
icebp
pop
mov
add
xor
or
aas
jp
mov
daa
insl
aad
xchg
lret
add
add
lods
ret
leave
lret
hlt
and
add
add
add
mov
mov
dec
push
rcr
jmp
push
sub
add
add
shlb
subl
pusha
mov
sub
adc
cmp
cmp
fs
cmpsb
xor
popa
mov
xor
push
in
int3
push
test
and
repz
lods
movq
mov
push
push
lea
jo
or
add
pusha
mov
cmp
adc
ds
xor
mov
pop
dec
jmp
rcl
sub
add
add
cmp
js
lock
popl
popa
in
movsb
dec
fldl
shrb
xor
pop
mov
ficoms
popa
push
ljmp
jb
in
jp
cmp
jg
orb
mov
loope
cli
cmpb
add
cwtl
test
imull
mov
call
add
add
sub
js
imul
bound
cmpsb
mov
cmpsl
loopne
mov
ja
std
jl
gs
mov
add
add
lock
popa
ja
popf
idivl
mov
add
js
pop
arpl
mov
add
sbb
mov
adc
add
fildll
mov
ds
add
add
push
lea
mov
pop
in
iret
fstp
pop
aas
jmp
add
add
mov
dec
fcoml
arpl
add
clc
shr
aas
push
push
jno
inc
add
add
flds
xchg
inc
decl
add
xchg
aam
adc
push
jb
popf
dec
enter
stc
pusha
mov
fldenv
mov
aad
rcll
mov
pop
leave
call
lret
arpl
sub
sbb
mov
mov
add
add
bound
popf
out
and
cmp
lock
test
loop
aam
aas
mov
xlat
jg
push
scas
ret
dec
add
add
mov
mov
pop
lods
sub
fistpl
add
add
jl
mov
pop
scas
pop
jbe
push
fstpl
inc
pop
adc
and
add
add
inc
mov
adc
push
cmp
mov
lock
xchg
jae
out
push
loop
and
add
add
cmp
pushf
fbstp
and
xchg
ljmp
add
add
and
push
adcl
aas
inc
call
movl
icebp
or
dec
xor
das
std
xor
icebp
push
test
jo
imul
jp
sbb
add
add
xlat
jg
icebp
jp
jbe
jae
sub
out
stos
sbb
add
add
imul
lods
test
out
xor
mov
sub
fmuls
rcrl
sbb
xlat
cmc
dec
jecxz
in
xchg
add
dec
es
pop
push
mov
xchg
add
add
add
xor
xchg
les
sub
mov
pop
pop
inc
sub
add
add
xor
mov
cmp
push
ss
movsl
push
and
data16
sub
ja
jecxz
jl
mov
jge
jge
inc
mov
jmp
pop
mov
rcll
cmc
lahf
mov
xchg
or
add
add
mov
fs
push
push
sbb
push
lret
xchg
cs
xchg
pop
rol
decl
inc
jecxz
subl
cmp
nop
je
add
add
pavgb
sbb
pop
test
hlt
mov
cwtl
xchg
imulb
and
aam
lds
jae
add
mov
inc
les
stos
insl
push
cmc
jnp
mov
ja
cmp
xlat
add
jle
inc
xlat
sub
push
enter
add
add
cld
dec
add
add
add
andl
add
mov
cmpsl
xlat
dec
mov
enter
repnz
add
add
push
push
sub
mov
add
add
scas
loopne
adc
xchg
sbb
xchg
sbb
dec
dec
fisubl
adc
lcall
popa
inc
mov
push
push
xchg
xor
addr16
add
add
or
sub
adc
add
movsl
xchg
icebp
mov
mov
gs
sbb
adc
hlt
rcrl
jle
mov
cmp
dec
add
add
mov
mov
add
cmc
shr
mov
push
push
mov
imul
pushf
jo
dec
sub
add
add
adc
push
mov
loop
add
mov
add
div
movsl
jg
pop
into
aam
pop
or
add
add
in
add
add
adc
and
mov
pop
and
add
out
xor
dec
add
add
pop
or
add
add
or
lds
or
sti
and
push
and
aaa
arpl
aad
add
add
push
mov
xchg
pushf
push
movsl
sub
jno
and
popa
mov
adc
mov
add
add
dec
mov
scas
push
inc
push
xor
mov
mov
cli
sbb
add
inc
cmpsl
enter
sub
add
add
mov
inc
push
adc
pop
add
jg
cmc
push
jmp
test
test
mov
pushl
adc
xchg
les
addb
add
frstor
add
add
pop
push
pop
pop
sub
mov
and
test
aam
hlt
mov
pop
sbb
adc
cmp
aad
sbb
fistl
lods
fwait
pusha
mov
mov
fdivrs
or
cmp
push
leave
nopl
es
and
add
add
nop
negb
or
add
lcall
add
jp
and
nop
sub
dec
add
add
dec
add
add
pusha
add
add
xchg
mov
sbb
and
add
add
jne
mov
mov
shlb
or
aaa
out
mov
xor
sti
jmp
out
fldenv
add
lds
mov
cld
imul
ret
mov
add
add
fstl
push
fnstsw
and
add
add
add
faddl
sti
xor
xor
enter
mov
stos
sub
aam
out
cmp
mov
mov
aam
inc
mov
cltd
adc
shl
jnp
rorl
je
xchg
xchg
mov
pop
mov
ja
fwait
ja
sub
add
add
cmp
in
mov
add
add
lahf
notl
fcoml
and
add
add
inc
mov
hlt
push
jb
jl
fcoms
jne
adc
xlat
xor
jecxz
and
jl
add
ds
cmp
add
sbb
mov
sbb
inc
mov
out
pop
sti
adc
jmp
jle
mov
and
aam
out
insl
sub
add
add
add
add
add
add
mov
sbb
sbb
add
add
es
or
sub
cmpsl
mov
add
lahf
push
jge
js
push
adc
jmp
in
ret
stos
mov
sub
add
add
mov
add
add
mov
adc
sbb
jg
mov
xor
aas
pop
flds
aaa
lret
xchg
pop
sbb
add
add
std
fwait
and
cmpsb
test
add
add
into
mov
addr16
sub
add
loopne
xor
adc
mov
add
shlb
push
push
imul
push
pop
shl
mov
push
xor
mov
jo
ljmp
add
jp
inc
sub
dec
add
add
imull
insl
stos
cmp
add
add
jae
leave
push
jmp
mov
mov
ret
insb
add
add
pop
pop
nop
mov
and
dec
enter
mov
data16
shrl
enter
sbb
mov
in
xchg
leave
jns
add
add
lret
sahf
sub
xor
push
lods
dec
add
add
sub
incb
dec
ja
cld
stos
loope
inc
push
add
add
in
fsubs
or
leave
mov
add
add
pop
jmp
ljmp
add
add
and
add
add
arpl
sti
fldl
add
add
cld
push
ret
repnz
or
add
push
rcrb
call
jl
adc
mov
mov
lret
xor
out
cli
idiv
iret
sub
xchg
dec
add
add
push
and
inc
addr16
sub
mov
popa
add
jae
imul
push
push
ljmp
not
mov
adc
mov
shrl
add
mov
cmpsl
or
and
add
add
mov
add
xor
shr
in
sarb
inc
mov
das
call
mov
insb
mov
fadds
mov
lret
xchg
mov
pop
movsl
xchg
stc
jns
jle
mov
stos
add
lret
icebp
pop
jle
sbb
pusha
mov
pop
sub
add
add
movsb
sbb
sbb
cmp
mov
scas
mov
mov
int3
mov
insb
add
add
cs
and
fistps
ret
les
push
ss
xchg
outsb
mov
sbb
fsts
add
scas
loop
sbb
add
adc
mov
add
add
sub
dec
mov
add
add
and
add
add
pmaxsw
add
xor
cmpsb
aad
add
add
add
shlb
fimuls
mov
imul
es
ss
sub
add
add
mov
add
dec
xchg
aam
add
add
add
jnp
stos
mov
test
mov
rcrl
divl
or
add
push
mov
stos
adc
test
mov
cmp
mov
add
add
insb
mov
or
add
add
in
loopne
stc
cmp
mov
stos
inc
ficompl
loopne
fisubl
xchg
gs
adc
leave
div
push
mov
push
call
add
add
paddusw
xor
bnd
in
jmp
pop
add
jae
inc
mov
in
jbe
test
cmpsl
inc
add
add
imul
dec
mov
mov
add
push
cmp
mov
out
int
xchg
imul
in
push
xlat
test
in
es
sub
add
add
push
mov
punpcklbw
add
add
mov
add
pop
shlb
add
add
mov
add
sbb
add
add
call
stos
jno
cmp
out
test
jae
std
sbb
and
shl
jecxz
fmuls
add
mov
sub
adc
out
icebp
out
sahf
xchg
add
add
cwtl
add
add
add
addr16
add
add
jnp
fnsave
add
add
add
add
push
in
mov
add
popa
aad
add
add
fsubr
add
into
cli
cmp
push
push
and
cwtl
xchg
cmp
jp
xor
push
mov
pop
je
or
add
add
gs
in
frstpm(287
or
gs
sbb
test
stc
and
arpl
add
add
jmp
jns
xor
dec
iret
mov
mov
mov
add
add
subl
rol
shll
add
cmp
into
std
popf
pop
push
dec
insl
sbb
pop
xlat
stc
sti
faddl
push
jg
cmpsl
adc
nop
mov
cmp
loop
inc
add
add
je
fcomps
xchg
pop
ss
add
inc
and
add
add
mov
mov
mov
fldcw
jle
adc
sahf
insl
xchg
push
test
or
add
add
add
add
mov
cmp
add
add
loop
mov
add
push
test
add
add
xor
push
fcomi
sbbl
repnz
mov
lret
mov
adc
inc
mov
xchg
inc
mov
sbb
cmpsl
pop
lret
test
xor
jg
call
pop
fsubs
cmp
xchg
fists
dec
call
xchg
xor
xor
mov
aas
mov
adc
add
add
iret
clc
mov
add
pop
imul
insb
add
add
dec
add
add
xchg
and
add
add
add
add
aaa
jl
inc
into
pop
mov
into
add
add
add
lahf
cmc
push
push
cs
jmp
add
sub
add
add
movsb
and
dec
xchg
add
add
mov
jns
sub
add
add
and
add
add
cld
jl
pop
jae
pop
sub
mov
jae
xchg
dec
sub
lret
add
add
add
add
ds
dec
xor
xchg
les
testb
jle
lret
add
add
jecxz
mov
cmpb
notb
sbbb
out
sbb
jecxz
ret
test
mov
movsb
icebp
out
lods
jmp
mov
inc
jb
cli
xlat
loopne
sub
add
add
scas
sarl
lods
lcall
cmp
jl
mov
and
aas
or
dec
pop
out
mov
mov
mov
add
add
jae
pop
inc
mov
aas
mov
inc
pop
jnp
push
push
xchg
cmpsl
mov
daa
xchg
movsb
js
repz
inc
js
clc
aas
dec
mov
out
insl
fldl2e
shrb
mov
ret
dec
adc
mov
test
pop
push
lods
cld
pop
dec
stos
add
push
mov
add
mov
mov
test
mov
lcall
cmp
ss
push
and
add
lock
add
add
popa
ss
sub
imul
jle
fcompl
ljmp
fwait
ss
adc
dec
daa
aas
incb
add
add
lret
add
add
sub
std
dec
mov
adc
mov
ss
xchg
add
add
inc
add
mov
pushf
inc
add
add
add
int3
fwait
rcr
jbe
aad
loopne
mov
push
cmp
sbb
inc
add
add
inc
mov
pop
jmp
dec
jp
fistps
in
sahf
xchg
add
add
add
cwtl
add
add
out
fnstenv
or
add
add
leave
push
stos
fwait
in
int3
lret
in
daa
add
mov
jae
sbb
shll
fwait
xchg
pop
fisttpll
pop
mov
mov
adc
mov
add
add
add
inc
out
dec
lea
or
xlat
or
add
add
sti
push
push
cwtl
push
push
sbb
mov
mov
xor
jae
ja
mov
cmp
add
lods
add
jecxz
pop
shlb
jae
stos
sub
add
pop
test
mov
into
ljmp
scas
pop
stos
jnp
sbb
mov
sub
jmp
sub
pop
div
ficoms
xchg
stos
fidivl
mov
pop
adc
dec
jmp
jmp
jb
rorb
in
push
divl
rcrb
dec
mov
mov
sbb
sbb
push
out
mov
movsl
dec
mov
mov
xchg
shrl
push
xchg
jg
orl
xchg
daa
loopne
cmpsl
cli
out
addl
add
dec
jge
adc
mov
rcl
adc
aam
mov
xchg
lds
pop
pop
mov
or
das
add
mov
and
xor
pushl
ss
mov
inc
xor
mov
mov
mov
add
add
mov
add
jo
hlt
cmp
out
jg
mov
mov
pop
jmp
add
push
loop
popf
sub
int3
test
jmp
movsl
nop
push
daa
inc
cmp
jb
insb
add
add
xor
aad
add
add
add
sub
mov
jmp
out
loopne
mov
sub
xor
es
add
add
mov
in
aad
mov
lahf
add
add
xlat
add
add
add
lods
xchg
add
inc
mov
roll
or
scas
push
outsb
adc
in
aas
mov
inc
jo
and
rorl
add
movsl
lahf
push
daa
jns
sub
cmp
sub
hlt
mov
aam
and
sbb
xchg
jo
add
add
jnp
shrl
cs
dec
add
add
add
sbb
orl
pop
call
inc
or
push
push
scas
add
xor
xor
add
test
mov
fiaddl
add
push
dec
add
add
aad
pop
push
pop
ljmp
add
aaa
rcrl
imul
inc
push
dec
pop
stc
negl
lret
pop
and
js
adc
mov
inc
iret
xchg
pop
cmp
dec
add
add
fsubl
or
mov
scas
cmc
iret
cmpsl
jno
les
and
add
add
pushf
in
loop,pn
pop
js
mov
push
inc
test
fldl
add
sub
pop
xor
pop
andb
mov
sub
add
add
adc
int3
or
movsl
ret
mov
fwait
outsb
cmpl
rorl
add
sbb
add
cmpsl
andl
mov
test
repnz
ljmp
and
test
add
das
rolb
out
mov
mov
jecxz
adc
into
mov
aam
mov
aaa
adc
aad
cmp
arpl
add
cltd
stos
inc
mov
and
add
add
adc
sub
add
fstpl
jecxz
adc
sbb
std
cmp
repnz
pop
lock
inc
add
add
pop
cld
push
or
xor
push
cmpsb
jg
mov
imul
cmp
or
jge
repz
add
add
push
fcomp
jge
addr16
or
xor
mov
push
mov
mov
cmpsb
mov
pop
and
pop
enter
inc
add
add
inc
xorl
sbb
mov
add
add
leave
adc
imul
xchg
decb
dec
mov
ljmp
add
jb
fldl
cld
sbb
sbb
add
add
fildl
mov
loop
jnp
pop
jg
ret
lods
dec
jl
mul
leave
push
sub
push
ss
jno
out
add
jmp
hlt
jle
mov
call
ss
por
sbb
je
sbb
rol
sbb
jle
xchg
or
pop
movsl
gs
add
add
add
push
inc
jecxz
iret
mov
jbe
hlt
jl
cld
stos
mov
xchg
stos
loope
or
add
add
add
add
add
add
adc
jl
gs
mov
in
mov
inc
jecxz
xchg
or
std
cmpsb
andb
mov
out
push
jb
mov
cmp
and
movsb
mov
or
xchg
mov
mov
add
cmp
add
shl
cltd
repnz
jg
xor
add
add
insb
add
add
movsb
xcrypt-cfb
cmpsl
mov
and
jecxz
lock
mov
lea
mov
and
cwtl
add
icebp
jmp
add
add
popf
sbb
cmpsb
es
movsb
nop
pusha
add
add
sub
add
add
push
rorb
mov
and
add
add
movsb
mov
popa
sbb
daa
sbb
add
mov
out
mov
inc
shlb
test
fmull
add
mov
add
movsl
push
sahf
adc
pop
push
jecxz
mov
outsb
push
cmpsb
shlb
mov
push
dec
sbb
pop
jo
jae
xor
mov
in
pusha
add
add
lret
jae
divb
pushf
lea
sub
add
add
mov
add
shl
jmp
jl
or
add
add
into
and
add
add
enter
popa
inc
push
pop
push
push
mov
cwtl
xchg
jnp
push
cli
cltd
xchg
sub
add
add
movsb
inc
xchg
scas
fldcw
and
or
add
add
pop
cltd
cltd
cmpsb
std
mov
adc
jl
mov
pop
inc
mov
add
add
adc
cld
fldpi
pop
and
mov
add
cmp
xchg
sbb
lahf
push
fwait
es
aas
loope
pop
cmp
add
add
push
mov
pop
dec
or
add
repz
add
popa
jp
add
mov
mov
push
dec
mov
sahf
sbb
popf
sahf
lahf
add
sbb
iret
cld
cmp
add
jecxz
mov
mov
xor
and
add
add
fdivr
inc
mov
xchg
inc
fistpll
orl
jge
mov
add
fldcw
fwait
cmp
jno
pop
xor
push
inc
add
add
imul
jno
mov
cli
loop
and
mov
mov
add
ret
mov
mov
fistpl
ljmp
add
add
ret
add
add
lods
cwtl
aas
gs
jo
in
movl
add
sbb
sbb
int3
repz
push
lock
outsb
push
shl
add
add
add
js
sti
outsb
mov
xor
mov
or
js
cmc
sahf
cmp
xor
xor
dec
push
stc
jl
dec
ret
pop
insb
add
add
mov
or
push
int3
int
mov
sbb
add
add
incb
add
add
push
mov
mov
fcmovbe
or
mov
pop
pop
scas
test
clc
cmpsb
movsl
test
or
pop
and
add
add
mov
mov
insb
add
add
sahf
and
add
add
adc
dec
adc
mov
adc
mov
cmc
fistps
cmp
add
popf
xlat
mov
sub
add
dec
mov
jne
mov
loop
or
into
out
jb
inc
nop
das
aaa
xchg
lds
mov
push
imull
mov
faddl
add
add
jno
out
inc
add
add
rcr
xor
xor
add
add
sbb
out
sbbb
repnz
addb
dec
mov
frstor
add
add
stos
mov
lret
mov
mov
or
jnp
jg
xchg
sbb
aad
mov
repz
pop
nop
xchg
aas
mov
mov
sbbb
inc
sbb
push
sbb
pop
or
fs
test
aaa
pushf
push
cmc
std
push
mov
mov
mov
test
dec
mov
decl
mov
push
imul
add
pop
loope
cwtl
and
jno
mov
insb
add
add
popa
in
or
mov
push
stos
fcoml
mov
or
xor
add
mov
jg
dec
push
xchg
push
cmp
mov
inc
xor
lret
xchg
add
mov
mov
add
add
sbb
xchg
inc
lock
xchg
pop
mov
jecxz
add
jl
rcl
stos
jno
push
jne
or
push
popa
stc
push
pop
and
xorl
repnz
gs
xlat
push
in
lea
mov
adc
imul
in
push
aad
mov
jne
cmpsb
pop
inc
or
adc
add
mov
std
pop
cmpsl
aaa
jbe
test
scas
mov
cltd
push
mov
pop
fldenv
and
add
add
xor
adc
in
and
stos
mov
mov
push
pusha
mov
fnstsw
lds
das
jo
push
or
add
add
stos
lret
insl
xor
int3
cmp
or
jecxz
push
loopne
mov
xor
mov
clc
lahf
in
jns
mov
or
mov
cs
mov
out
adc
icebp
push
inc
pusha
add
add
xchg
lret
sar
xchg
add
add
pusha
mov
jge
mov
scas
mov
nop
fsubrl
sti
out
xor
pop
xchg
mov
icebp
add
hlt
lds
sbb
cmpl
or
in
out
pushl
sub
add
add
sbb
add
add
jmp
aad
jo
cmp
mov
add
add
inc
add
add
leave
enter
fistl
stos
mov
mov
sub
cmc
mov
push
addr16
mov
gs
sub
add
add
xor
pop
repz
xchg
push
push
mov
mov
pop
and
push
mov
add
add
xor
adc
test
pop
leave
outsb
push
mov
hlt
fldlg2
pop
sub
movsl
xor
mov
add
adc
call
popf
xchg
cld
hlt
out
outsl
xorl
daa
jb
leave
cmp
push
mov
lds
sub
xchg
or
add
add
mov
cli
and
dec
adc
mov
loope
mov
xchg
in
sbb
inc
add
add
stos
out
mov
xchg
adc
add
add
mov
add
outsb
fists
pop
mov
xchg
addr16
test
mov
sbbl
add
fcmovnb
cmovs
add
add
mov
add
jno
jae
pop
add
add
add
loope
or
fsubr
ficompl
cmp
or
mov
xor
add
adc
push
out
pop
xchg
fiaddl
sbb
xorb
add
add
add
add
stos
stos
pop
sub
mov
int3
mov
cwtl
addl
pusha
mov
ljmp
cltd
ret
or
add
add
add
ljmp
mov
repnz
xor
lock
aad
mov
lahf
out
xchg
add
add
jmp
loope
sahf
and
add
add
xchg
shrb
push
lcall
aaa
inc
in
nop
popa
add
add
jg
fdivrs
insb
add
add
pop
inc
das
ret
mov
cld
cmp
mov
add
add
adc
xlat
and
inc
mov
mov
add
jo
loope
xchg
leave
out
mov
mov
add
add
add
dec
ret
mov
jnp
dec
jg
outsl
adc
pop
jns
ret
sarl
aaa
std
mov
pushf
hlt
sbb
mov
ds
sbb
add
nop
test
movsl
cltd
daa
popa
lahf
adc
fnstcw
xchg
hlt
aad
addr16
test
das
sti
jb
inc
push
in
jnp
les
xorl
add
add
add
add
and
add
add
mov
mov
lcall
xor
loop
mov
add
add
and
add
add
mov
jmp
push
and
mov
std
movsb
pusha
mov
mov
pop
sbb
cmp
add
add
sti
or
pusha
mov
js
and
ljmp
or
or
addr16
insl
dec
ret
xchg
outsb
sub
pop
or
add
add
pop
mov
add
pusha
add
add
mov
mov
mov
pop
adc
mov
xchg
pop
ret
add
sub
lcall
faddl
sbb
mov
add
mov
shl
scas
mov
shrb
enter
shrb
fwait
icebp
jg
or
std
mov
inc
and
add
add
scas
push
cs
and
add
add
in
add
add
add
mov
mov
sub
add
add
addr16
inc
xor
add
add
add
mov
dec
test
and
add
add
scas
push
out
daa
xchg
mov
jae
mov
imul
sbb
jp
aas
andb
arpl
adc
jmp
mov
leave
into
imul
jmp
add
add
pop
mov
inc
lods
std
cmp
movsl
test
fsin
stc
inc
mov
lret
mov
add
loope
je
lods
mov
repnz
mov
or
fcoml
mov
adc
pop
jo
pop
andb
shll
imul
push
mov
aam
xchg
mov
pop
push
bsr
push
loope
iret
jns
and
add
add
jne
add
add
add
and
add
add
jne
xchg
or
xor
imul
push
xor
push
xor
sub
jl
out
inc
mov
adc
dec
add
add
push
test
out
sub
cmpb
sahf
sub
xor
pop
movsl
repnz
add
add
push
repnz
add
add
insl
jo
or
add
add
xchg
add
dec
mov
mov
add
icebp
or
mov
sub
sbb
jbe
adc
add
mov
or
add
add
in
jmp
pop
adc
ret
jno
xor
stos
rol
dec
loope
movsb
adcl
loop
pop
arpl
movsl
loopne
mov
add
add
test
popf
fistpll
sub
fsubrl
add
jbe
aaa
ljmp
add
add
add
add
add
dec
jl
xor
iret
cmp
push
in
out
jns
sbb
ret
add
dec
int
mov
lcall
add
add
or
dec
xor
dec
xchg
jle
jge
adc
add
pushf
pop
push
ds
mov
stc
cmp
adc
add
add
fildl
addl
stc
mov
es
jg
mov
arpl
pushf
xor
shll
xor
in
aad
adc
add
add
dec
icebp
int
cmp
fcmovb
or
sub
add
add
aad
mov
andl
mov
pop
cmp
dec
mov
negl
mov
dec
mov
in
stos
jmp
ja
dec
add
add
pop
hlt
mov
mov
test
mov
xor
xchg
push
pop
xchg
cmpsb
xchg
or
add
add
cmc
pop
cmpsb
outsb
lahf
es
sub
enter
mov
ljmp
aad
je
ljmp
les
add
push
lahf
orl
movsb
sub
rclb
or
lcall
es
sbb
mov
add
test
out
in
out
pop
lds
jno
mov
mov
je
xchg
and
add
add
call
jl
push
push
ss
idivb
add
inc
test
jl
ljmp
or
fwait
out
sub
outsl
inc
inc
mov
lods
stos
ficomps
mov
fstps
lock
aad
push
fnstsw
cmc
inc
add
add
inc
add
add
mov
out
xchg
cmp
jns
out
xchg
xor
add
add
ljmp
fdiv
bound
add
add
add
fstps
push
jbe
add
add
add
shl
xchg
sub
and
xor
pop
mov
mov
fnstsw
mov
aaa
xchg
push
repz
jae
pop
adc
cs
cs
push
sbb
mov
pop
jns
call
add
add
or
mov
add
repz
rcll
adc
popl
sbb
xchg
jp
push
stc
movsb
or
add
add
and
movsl
jecxz
push
popf
mov
filds
fldenv
imul
bound
pop
imul
ds
stc
adc
mov
ja
add
add
add
push
jle
jg
add
insl
subl
or
inc
mov
dec
mov
pushf
mov
add
lock
xor
add
push
mov
mov
stos
mov
pop
and
fcomip
iret
repnz
enter
shll
nop
cmp
addr16
jb
cmp
and
add
add
mov
xor
add
add
lret
in
mov
jbe
cmp
add
add
or
inc
fistpll
add
add
xchg
popa
in
int
mov
dec
xchg
out
add
pop
sbb
inc
inc
clc
adc
push
in
scas
jo
mov
cmp
cmpsl
mov
pop
imul
mov
mov
xchg
pop
outsl
mov
in
xchg
dec
push
fisubl
add
add
in
jnp
xchg
loopne
push
mov
pop
push
sub
shll
mov
dec
mov
cmp
mov
aas
jmp
add
enter
out
fistps
nop
xor
jne
stos
pop
mov
add
add
es
mov
pop
icebp
add
add
add
icebp
mov
test
xor
and
add
add
test
jle
push
sbb
and
add
add
repz
pop
pop
add
add
add
mov
adc
or
add
or
add
add
add
add
add
add
add
add
mov
into
mov
add
add
jo
mov
add
add
sub
ret
les
push
cmp
add
push
jno
cmpsl
cli
pop
xor
add
loope
data16
add
add
add
pop
dec
add
add
push
aaa
mov
outsb
pmulhuw
cmp
add
jnp
and
add
add
cmpsl
mov
idivb
imul
jl
adc
add
sbb
jp
add
add
in
mov
xchg
add
xchg
mulb
stc
xlat
mov
mov
mov
mov
jns
pop
push
push
mov
mov
lcall
jnp
loope
sbb
mov
ret
cmpsb
mov
bound
imul
hlt
ds
loopne
add
add
ljmp
add
add
add
add
add
jno
scas
std
fistps
inc
add
add
xchg
mov
fildl
add
push
mov
mov
lds
add
add
xor
insb
add
add
push
cmp
mov
push
cs
fyl2xp1
pop
pop
mov
xor
xor
xor
lahf
fildll
gs
movsl
rorl
add
add
popf
pop
sbb
sub
add
add
add
pop
clc
mov
jmp
repz
ffree
dec
add
add
mov
or
cmp
cs
out
cmp
jmp
xor
add
add
outsl
aas
push
cmp
inc
mov
xchg
push
mov
loope
sbb
push
aad
pop
mov
scas
mov
jns
push
lods
daa
arpl
and
add
add
fstl
inc
add
add
test
lcall
jae
loope
cld
push
rcll
add
add
dec
in
mov
fimuls
mov
adc
xlat
mov
jp
or
add
add
fisubrs
pop
dec
mov
add
add
das
mov
jnp
mov
xchg
enter
mov
ror
pusha
mov
test
pop
dec
insl
ja
dec
mov
rcr
xchg
jns
sub
add
add
cmpsl
sarl
add
adc
add
add
ret
add
outsl
rclb
jns
jo
mov
push
cmp
add
mov
mov
mov
pop
cmp
dec
pop
mov
jl
loop
xor
pop
push
sbb
dec
stc
mov
add
sbb
add
add
sbb
cmp
lcall
add
add
add
ret
dec
scas
mov
lahf
and
dec
movsl
add
out
fisttpll
add
add
jo
lahf
jecxz
pop
or
jno
dec
pop
dec
cmpsl
cmpsb
repz
out
cmp
fcoms
xorb
fistpl
xchg
xor
repnz
inc
add
add
scas
mov
loope
dec
add
add
add
add
add
sbb
mov
add
add
dec
lods
insl
fimuls
push
cmc
sbb
lahf
inc
mov
xchg
test
jbe
jnp
shrl
cmp
cmp
gs
in
adc
lock
out
jl
in
mov
and
add
add
mov
push
orb
mov
mov
add
add
test
add
fistpll
aad
push
inc
test
mov
inc
pop
rolb
rorl
sbb
outsb
sti
stc
stos
ljmp
dec
add
add
jle
sub
add
add
in
cld
mov
imul
add
jnp
cmp
fcmovb
inc
cmp
mov
adcl
add
cwtl
mov
shl
outsl
or
add
test
cmp
pop
bound
add
aaa
jmp
jne
loop
ror
jb
sbb
xchg
scas
lret
clc
fnstenv
dec
jbe
lods
sahf
cld
pop
mov
out
mov
and
cmp
jle
cmp
push
ljmp
ret
in
xor
add
cltd
movb
add
ja
mov
push
cmp
jnp
add
add
in
pop
pop
mov
in
or
jg
mov
dec
clc
cmpsl
mov
add
pop
mov
and
dec
add
add
data16
lret
pop
out
popf
cld
inc
cwtl
inc
pop
xchg
pop
push
xlat
xlat
popf
sub
add
add
ds
pushf
pop
sub
mov
add
add
add
mov
or
mov
jmp
lods
data16
mov
sub
add
add
cltd
add
add
add
add
or
