aad
loopne
mov
loopne
xchg
mov
loopne
stos
movsb
loopne
les
loopne
pop
test
mov
mov
loopne
repnz
loopne
ljmp
mov
movsb
loopne
cmpsl
loopne
andb
mov
movsl
loopne
push
test
mov
cmpsb
loopne
lcall
mov
test
loopne
cmp
loopne
outsl
movsb
loopne
das
mov
loopne
jo
loopne
je
loopne
andb
shll
loopne
leave
movsl
loopne
cmp
mov
test
mov
mov
loopne
inc
cmpsl
loopne
mov
loopne
xor
loopne
daa
cmpsb
loopne
push
cmpsb
loopne
mov
movsb
loopne
cmc
movsl
loopne
bound
loopne
js
loopne
pop
movsb
loopne
cmpsb
loopne
js
loopne
test
movsl
loopne
cmp
loopne
test
mov
mov
loopne
push
mov
loopne
int
loopne
fldenv
mov
cmpsb
loopne
mov
test
loopne
shll
loopne
mov
loopne
cmp
loopne
xchg
cmpsl
loopne
pop
cmpsl
loopne
repz
mov
mov
loopne
popf
cmpsb
loopne
lods
movsb
loopne
inc
movsb
loopne
loopne
sbb
movsb
loopne
sti
movsb
loopne
daa
test
loopne
add
movsl
loopne
movsb
loopne
cli
cmpsl
loopne
mov
cmpsl
loopne
dec
movsl
loopne
push
cmpsb
loopne
push
cmpsl
loopne
xchg
mov
loopne
sub
loopne
test
mov
loopne
sbb
loopne
and
loopne
adc
cmpsb
loopne
mov
loopne
mov
loopne
or
mov
movsl
loopne
xor
loopne
shlb
loopne
xchg
loopne
mov
cmpsb
loopne
push
test
loopne
cmc
test
mov
movsl
loopne
or
cmpsb
loopne
xchg
mov
loopne
shlb
loopne
fisubs
loopne
pusha
cmpsb
loopne
jp
loopne
enter
std
test
mov
mov
loopne
xchg
mov
loopne
cmpsl
loopne
jbe
loopne
lret
test
mov
movsl
loopne
xor
loopne
jmp
movsb
loopne
xchg
mov
loopne
add
cmpsb
loopne
shll
mov
mov
loopne
stos
movsb
loopne
lock
loopne
inc
test
loopne
mov
loopne
aas
test
loopne
lahf
test
mov
test
mov
movsl
loopne
mov
mov
loopne
mov
loopne
pop
mov
loopne
mov
loopne
or
loopne
mulb
loopne
insl
movsl
loopne
mov
test
mov
movsb
loopne
sub
loopne
push
cmpsb
loopne
data16
loopne
imul
loopne
pop
cmpsb
loopne
mov
loopne
lahf
movsl
loopne
cli
cmpsl
loopne
push
cmpsl
loopne
jmp
loopne
pop
movsb
loopne
fisubs
loopne
or
mov
mov
loopne
jecxz
loopne
frstor
loopne
lods
mov
loopne
mov
cmpsl
loopne
push
test
loopne
or
loopne
xchg
movsb
loopne
sub
loopne
mov
mov
loopne
inc
cmpsl
loopne
fsubs
loopne
push
mov
loopne
pop
movsb
loopne
xchg
test
mov
mov
loopne
mov
loopne
repz
loopne
int3
movsl
loopne
jno
loopne
lds
loopne
xor
loopne
shrb
mov
mov
loopne
and
movsl
loopne
push
cmpsb
loopne
loope
loopne
inc
cmpsb
loopne
xchg
mov
loopne
andl
loopne
shlb
mov
movsl
loopne
fildll
loopne
shlb
loopne
inc
movsl
loopne
fisubl
loopne
jmp
mov
mov
loopne
std
mov
loopne
inc
test
mov
cmpsl
loopne
sub
loopne
andl
loopne
shll
loopne
js
loopne
in
test
mov
cmpsl
loopne
or
loopne
and
loopne
ret
movsl
loopne
pusha
mov
loopne
popf
mov
loopne
andl
mov
cmpsl
loopne
dec
test
loopne
dec
mov
loopne
cmp
loopne
sub
loopne
add
loopne
cmp
loopne
clc
mov
loopne
cld
movsl
loopne
fsubs
loopne
or
loopne
push
test
loopne
fwait
cmpsl
loopne
mov
loopne
out
cmpsl
loopne
sbb
mov
loopne
in
loopne
sbb
movsl
loopne
push
loopne
movsb
cmpsl
loopne
xchg
loopne
lods
movsb
loopne
fsubl
loopne
cwtl
test
mov
cmpsl
loopne
scas
cmpsl
loopne
push
test
loopne
movsb
loopne
push
cmpsb
loopne
movsb
loopne
mov
loopne
daa
cmpsl
loopne
mov
loopne
and
loopne
mov
loopne
movsl
loopne
mov
movsb
loopne
test
cmpsl
loopne
xor
loopne
xchg
mov
loopne
adc
loopne
push
cmpsb
loopne
dec
test
loopne
pop
movsl
loopne
cmpsl
loopne
inc
test
mov
movsl
loopne
xchg
movsl
loopne
jle
loopne
jns
loopne
add
loopne
add
mov
mov
loopne
pop
movsl
loopne
cmp
loopne
ljmp
mov
test
loopne
xor
loopne
push
movsb
loopne
adc
loopne
or
loopne
scas
test
mov
cmpsl
loopne
pop
mov
loopne
jns
loopne
mov
movsl
loopne
jns
loopne
outsb
movsl
loopne
sbb
mov
loopne
loope
loopne
shlb
loopne
mulb
loopne
xor
loopne
and
loopne
inc
movsl
loopne
subb
mov
mov
loopne
and
mov
loopne
add
loopne
dec
mov
loopne
push
movsl
loopne
lods
cmpsl
loopne
cmp
mov
loopne
cltd
movsb
loopne
shlb
loopne
inc
movsb
loopne
and
loopne
inc
movsl
loopne
push
loopne
insb
movsb
loopne
cwtl
cmpsl
loopne
das
mov
loopne
into
cmpsl
loopne
hlt
mov
loopne
push
mov
loopne
adc
test
mov
cmpsb
loopne
mov
mov
loopne
sbb
movsb
loopne
mov
loopne
movsl
test
mov
cmpsl
loopne
xor
loopne
inc
test
mov
mov
loopne
push
mov
loopne
inc
mov
loopne
pop
movsb
loopne
pushf
cmpsb
loopne
jbe
loopne
sub
mov
mov
loopne
pop
mov
loopne
dec
cmpsb
loopne
in
movsl
loopne
mov
cmpsl
loopne
mov
cmpsl
loopne
jl
loopne
inc
mov
loopne
push
cmpsl
loopne
mov
loopne
shll
mov
cmpsb
loopne
out
loopne
fisubs
loopne
shll
loopne
xchg
mov
loopne
xor
mov
mov
loopne
jae
loopne
jg
loopne
andl
mov
movsl
loopne
and
loopne
loope
loopne
mov
loopne
fldenv
loopne
xchg
mov
loopne
out
loopne
popf
movsl
loopne
fwait
mov
loopne
std
movsb
loopne
arpl
loopne
push
cmpsb
loopne
andb
mov
mov
loopne
sbb
loopne
mov
loopne
pop
cmpsb
loopne
mulb
loopne
in
loopne
mov
mov
loopne
stos
movsb
loopne
lret
cmpsl
loopne
and
loopne
pop
movsl
loopne
popf
movsb
loopne
adc
loopne
fbld
loopne
xchg
cmpsl
loopne
mov
mov
loopne
sbb
loopne
mov
loopne
xchg
loopne
push
cmpsb
loopne
aad
loopne
je
loopne
in
cmpsb
loopne
repnz
loopne
inc
test
mov
test
loopne
int3
cmpsl
loopne
mov
movsb
loopne
sub
loopne
push
movsb
loopne
mov
movsb
loopne
inc
test
loopne
xchg
mov
movsl
loopne
cmpsl
loopne
mov
test
mov
mov
loopne
lahf
movsl
loopne
dec
test
mov
movsb
loopne
jb
loopne
movsl
loopne
jecxz
loopne
jl
loopne
and
loopne
push
cmpsl
loopne
out
loopne
cmpsw
loopne
ret
mov
loopne
insl
test
mov
mov
loopne
push
movsb
loopne
pop
cmpsl
loopne
mov
loopne
dec
movsb
loopne
js
loopne
jo
loopne
pop
mov
loopne
test
loopne
adc
loopne
aad
loopne
mov
loopne
pop
mov
loopne
cmp
cmpsb
loopne
addr16
xchg
cmpsb
loopne
scas
movsb
loopne
test
cmpsl
loopne
shlb
mov
mov
loopne
jle
loopne
cmpsl
loopne
pop
test
mov
movsl
loopne
aad
loopne
les
loopne
mov
loopne
add
test
mov
movsl
loopne
dec
test
loopne
jge
loopne
push
test
loopne
scas
cmpsl
loopne
out
loopne
inc
mov
loopne
cmp
loopne
fisubrs
loopne
fldenv
loopne
dec
movsb
loopne
cltd
movsb
loopne
mov
loopne
mov
test
mov
mov
loopne
dec
test
loopne
sbb
loopne
jmp
mov
cmpsb
loopne
and
loopne
loop
loopne
pop
movsl
loopne
jecxz
loopne
lahf
movsb
loopne
jecxz
loopne
pop
cmpsb
loopne
adc
loopne
scas
movsb
loopne
xchg
cmpsb
loopne
loopne
loopne
aas
mov
loopne
sub
loopne
mov
loopne
xchg
movsl
loopne
les
loopne
jae
loopne
xor
mov
cmpsb
loopne
xchg
mov
loopne
and
loopne
xor
loopne
jno
loopne
cmp
loopne
andl
mov
mov
loopne
or
loopne
lds
loopne
repnz
loopne
movsb
loopne
jbe
loopne
out
loopne
mov
loopne
mov
loopne
lcall
mov
movsb
loopne
sti
cmpsb
loopne
clc
mov
loopne
mov
movsl
loopne
sub
loopne
jl
loopne
or
loopne
sub
loopne
sbb
loopne
fldenv
loopne
sahf
mov
loopne
iret
test
mov
cmpsb
loopne
mov
loopne
pop
cmpsl
loopne
push
cmpsb
loopne
inc
test
loopne
lret
cmpsb
loopne
xchg
mov
loopne
pop
cmpsl
loopne
in
loopne
cmpsl
loopne
xchg
mov
loopne
mov
loopne
movsb
mov
loopne
mov
cmpsb
loopne
imul
mov
movsl
loopne
pop
mov
loopne
xchg
loopne
mov
loopne
sub
loopne
dec
mov
loopne
sub
loopne
in
cmpsl
loopne
scas
mov
loopne
nop
cmpsl
loopne
sub
loopne
add
loopne
xor
loopne
pusha
cmpsb
loopne
out
loopne
popa
test
mov
mov
loopne
jnp
loopne
popf
movsb
loopne
shll
loopne
mov
loopne
call
mov
loopne
inc
test
mov
mov
loopne
jp
loopne
nop
movsb
loopne
jp
loopne
lods
test
mov
movsl
loopne
jnp
loopne
push
cmpsl
loopne
pop
mov
loopne
movsb
movsb
loopne
adc
cmpsb
loopne
sbb
loopne
mov
mov
loopne
xor
loopne
stc
cmpsl
loopne
adc
loopne
pushf
mov
loopne
dec
movsb
loopne
or
loopne
mov
loopne
and
loopne
push
mov
loopne
add
test
loopne
stos
mov
loopne
aaa
test
mov
mov
loopne
sbb
loopne
adc
loopne
inc
movsb
loopne
xor
loopne
dec
test
mov
cmpsb
loopne
xor
loopne
adc
loopne
dec
test
loopne
arpl
mov
movsb
loopne
xcrypt-cfb
mov
movsb
loopne
fwait
cmpsb
loopne
cmp
loopne
jns
loopne
outsl
movsb
loopne
cs
loopne
scas
cmpsl
loopne
mov
cmpsl
loopne
sub
loopne
imull
loopne
inc
test
mov
cmpsb
loopne
adc
loopne
in
test
mov
test
mov
movsb
loopne
add
test
mov
mov
loopne
jle
loopne
mov
cmpsb
loopne
cltd
mov
loopne
inc
cmpsb
loopne
adc
loopne
add
test
mov
test
loopne
mov
loopne
frstor
loopne
pop
mov
loopne
xchg
cmpsl
loopne
sbb
loopne
out
mov
loopne
popa
mov
loopne
sahf
mov
loopne
inc
cmpsb
loopne
add
loopne
dec
movsb
loopne
mov
movsb
loopne
dec
test
mov
mov
loopne
out
loopne
icebp
cmpsl
loopne
movsb
loopne
pop
test
mov
mov
loopne
jo
loopne
cmp
loopne
mov
mov
mov
loopne
cmp
loopne
shlb
mov
test
mov
test
mov
cmpsb
loopne
hlt
test
mov
cmpsl
loopne
push
test
mov
movsl
loopne
push
test
mov
cmpsb
loopne
repz
loopne
mov
cmpsb
loopne
test
loopne
aas
cmpsb
loopne
hlt
mov
loopne
xchg
loopne
ljmp
mov
test
mov
movsl
loopne
mov
loopne
push
loopne
outsb
mov
loopne
sti
cmpsb
loopne
mov
cmpsb
loopne
sbb
loopne
pop
mov
loopne
cltd
mov
loopne
mov
loopne
mov
loopne
mov
loopne
call
test
loopne
lods
cmpsl
loopne
push
test
mov
mov
loopne
imul
loopne
mov
loopne
stos
movsl
loopne
jle
loopne
repz
loopne
pop
mov
loopne
out
loopne
insb
cmpsb
loopne
popf
cmpsl
loopne
mov
loopne
xchg
cmpsb
loopne
out
loopne
fldenv
loopne
addr16
inc
test
loopne
jmp
mov
loopne
cpuid
loopne
sub
loopne
dec
cmpsl
loopne
lds
loopne
in
test
mov
mov
loopne
xchg
cmpsl
loopne
add
mov
movsl
loopne
jo
loopne
or
test
loopne
dec
mov
loopne
mov
test
mov
test
mov
mov
loopne
mov
loopne
push
mov
loopne
movsb
loopne
int3
mov
loopne
aaa
test
loopne
sub
loopne
in
movsb
loopne
popa
movsb
loopne
mov
mov
loopne
movsb
loopne
mov
mov
loopne
sub
loopne
test
test
mov
cmpsl
loopne
andl
loopne
das
movsb
loopne
push
mov
loopne
mov
movsl
loopne
and
loopne
mov
loopne
in
loopne
sub
loopne
xchg
mov
loopne
popa
test
mov
cmpsb
loopne
adc
mov
loopne
les
loopne
test
mov
cmpsb
loopne
push
movsb
loopne
daa
movsb
loopne
fisubl
loopne
adc
loopne
adc
loopne
xcrypt-cfb
mov
mov
loopne
andb
inc
movsl
loopne
out
loopne
cld
mov
loopne
pop
movsl
loopne
lds
loopne
mov
loopne
shll
mov
cmpsl
loopne
dec
movsb
loopne
imulb
loopne
addr16
out
loopne
andb
mov
test
mov
movsb
loopne
sub
movsl
loopne
push
mov
loopne
jo
loopne
inc
movsl
loopne
mov
loopne
sub
mov
loopne
sub
mov
cmpsb
loopne
xchg
cmpsb
loopne
push
mov
loopne
imul
mov
cmpsb
loopne
shll
movsl
cmpsb
loopne
pop
test
loopne
test
mov
loopne
mov
loopne
push
movsl
loopne
bound
mov
cmpsb
loopne
fsubs
loopne
aaa
movsb
loopne
lock
loopne
imul
mov
cmpsb
loopne
stc
movsl
loopne
cmp
loopne
in
mov
loopne
jnp
loopne
int
loopne
repz
loopne
loop
loopne
loop
loopne
test
movsl
loopne
jp
loopne
xor
mov
loopne
cmpsl
loopne
cmp
loopne
insl
cmpsb
loopne
jbe
loopne
loopne
inc
test
loopne
andb
mov
test
loopne
lds
loopne
cmpsl
cmpsb
loopne
xlat
cmpsb
loopne
dec
movsb
loopne
mov
loopne
mov
movsb
loopne
into
mov
loopne
mov
loopne
dec
movsl
loopne
pop
movsl
loopne
mov
loopne
mov
loopne
push
movsl
loopne
cmp
loopne
mov
loopne
sub
cmpsb
loopne
jo
loopne
test
loopne
inc
test
mov
cmpsb
loopne
loope
loopne
popf
movsb
loopne
xchg
cmpsb
loopne
test
loopne
xor
loopne
iret
test
mov
mov
loopne
mov
loopne
shrb
mov
cmpsb
loopne
bound
loopne
cmpsl
mov
loopne
mov
loopne
dec
movsb
loopne
je
loopne
cmc
mov
loopne
pop
mov
loopne
pop
mov
loopne
pop
mov
loopne
mov
cmpsl
loopne
mov
loopne
jo
loopne
and
loopne
xchg
mov
loopne
outsb
mov
loopne
repz
loopne
mov
loopne
lret
mov
mov
loopne
sti
cmpsb
loopne
nop
mov
loopne
adc
loopne
push
movsb
loopne
mulb
mov
cmpsl
loopne
add
loopne
dec
cmpsl
loopne
push
mov
loopne
loope
loopne
or
loopne
cmp
loopne
lret
cmpsl
loopne
in
loopne
stos
test
mov
cmpsb
loopne
mulb
loopne
cmp
loopne
jno
loopne
les
loopne
mov
loopne
iret
movsl
loopne
test
mov
cmpsl
loopne
lds
loopne
add
loopne
fisubs
loopne
cwtl
mov
loopne
jo
loopne
mov
loopne
addr16
cmp
loopne
fisubl
loopne
sahf
cmpsl
loopne
shlb
mov
mov
loopne
xor
loopne
dec
test
mov
mov
loopne
xchg
movsl
loopne
leave
mov
loopne
mull
loopne
mov
loopne
mov
test
mov
movsb
loopne
inc
movsb
loopne
cli
mov
loopne
shlb
loopne
mov
loopne
or
loopne
pop
movsl
loopne
je
loopne
les
loopne
cmpsl
loopne
in
movsl
loopne
test
loopne
xchg
loopne
dec
movsb
loopne
aam
loopne
sbb
loopne
imull
loopne
sbb
loopne
mov
loopne
mov
mov
cmpsl
loopne
add
loopne
pop
movsb
loopne
cmpsb
loopne
ret
test
mov
mov
loopne
mulb
loopne
mov
test
mov
movsl
loopne
adc
loopne
fisubl
loopne
or
loopne
push
movsb
loopne
pusha
mov
loopne
ja
loopne
mov
loopne
sub
loopne
or
loopne
outsb
mov
loopne
jge
loopne
sbb
loopne
loope
loopne
movsl
movsb
loopne
shll
mov
movsl
loopne
mov
cmpsb
loopne
cmpsb
loopne
lea
loopne
pop
cmpsb
loopne
add
loopne
jne
loopne
xchg
movsl
loopne
xchg
mov
movsl
loopne
shlb
loopne
or
loopne
frstor
loopne
dec
test
loopne
out
loopne
loopne
mov
loopne
mov
loopne
mov
movsl
loopne
and
cmpsl
loopne
out
loopne
movsb
loopne
jno
loopne
lds
loopne
sub
loopne
cmp
mov
loopne
add
mov
cmpsb
loopne
les
mov
movsl
loopne
sub
loopne
jno
loopne
scas
movsl
loopne
lret
mov
test
mov
cmpsl
loopne
int3
mov
loopne
jns
loopne
stos
movsb
loopne
movsb
mov
loopne
cmp
test
loopne
jecxz
loopne
mov
loopne
or
loopne
in
movsb
loopne
and
loopne
insb
movsb
loopne
cmc
mov
loopne
cmp
loopne
pop
test
mov
mov
loopne
int
loopne
stos
test
mov
cmpsl
loopne
in
loopne
xchg
mov
loopne
inc
movsl
loopne
mov
test
mov
mov
loopne
inc
test
mov
mov
loopne
adc
mov
cmpsl
loopne
push
mov
loopne
lret
cmpsb
loopne
cmp
loopne
push
cmpsl
loopne
inc
movsb
loopne
xor
loopne
jp
loopne
sbb
loopne
test
mov
mov
loopne
mov
loopne
loop
loopne
jecxz
loopne
add
loopne
xor
loopne
repnz
loopne
push
cmpsl
loopne
out
movsb
loopne
pop
movsb
loopne
inc
mov
loopne
test
loopne
lods
mov
loopne
mov
loopne
push
mov
loopne
imull
loopne
inc
mov
loopne
ds
loopne
mov
loopne
lret
mov
cmpsl
loopne
and
loopne
dec
cmpsl
loopne
pop
pop
sub
add
sahf
cmp
jg
jg
lret
stc
xchg
xchg
cmp
push
add
test
mov
sbb
and
out
clc
cmp
add
add
inc
clc
sbb
negl
pop
and
add
aam
add
inc
clc
movsl
clc
ja
add
enter
cs
in
sbb
in
add
add
inc
clc
aas
mov
mov
push
add
mov
clc
add
cmp
cltd
inc
add
je
add
gs
pusha
add
imul
cld
inc
clc
std
mov
clc
sub
sbb
jp
clc
enter
cmp
shll
add
add
stos
push
add
dec
mov
clc
adc
add
add
sub
cmp
or
test
adc
add
add
iret
mov
dec
ficompl
pop
mov
clc
clc
pop
scas
xchg
sub
sub
out
cs
sbb
js
mov
dec
aas
rcl
xchg
push
clc
cmp
daa
clc
je
clc
mov
add
insl
mov
clc
push
pusha
add
lea
clc
mov
add
stos
in
in
jb
add
sar
clc
sub
rcll
add
mov
jno
add
outsl
ja
out
add
or
std
cmp
inc
add
xor
add
sbb
add
clc
cmp
ss
clc
repz
add
add
xor
add
add
add
add
cs
xchg
push
test
inc
clc
fdivr
pusha
add
pop
mov
mov
mull
lock
jb
add
test
sbb
and
add
add
mov
cmp
idiv
pop
clc
jne
mov
out
cmpsl
clc
cmp
pop
dec
outsl
dec
stos
jle
push
add
clc
pop
enter
or
cmp
clc
mov
int
pusha
add
push
clc
inc
clc
add
add
call
add
or
lods
jle
sub
add
add
add
add
cld
push
clc
add
sbb
mov
xor
stc
cld
xlat
das
adc
add
add
lret
add
add
lret
add
pop
out
sbb
add
sti
out
aaa
dec
xchg
jo
add
jmp
clc
enter
push
add
jp
clc
testb
leave
inc
add
sub
das
loop
mov
cmp
add
out
mov
xchg
lock
add
ja
clc
cmp
shlb
fists
add
std
mov
add
push
outsb
es
pop
sbb
jmp
into
adc
add
outsl
push
add
sahf
push
dec
fisubrs
out
inc
add
xchg
icebp
mov
dec
stos
es
push
adc
add
mov
lret
clc
inc
clc
sti
dec
insl
aam
inc
clc
xchg
mov
clc
mov
cmpsl
clc
pushf
dec
cwtl
mov
stos
scas
mov
lahf
xor
add
add
pop
out
dec
xchg
and
add
fcoms
cmp
clc
and
dec
ss
sbb
or
fcoms
sub
xor
sbb
or
add
sub
outsb
dec
sbb
add
clc
dec
jp
sub
pop
out
jp
clc
clc
mov
add
clc
mov
clc
sbb
psubsw
clc
pop
clc
aam
inc
clc
test
aaa
add
cmp
jecxz
sar
stc
add
add
mov
jg
clc
and
add
fimuls
xbegin
sub
out
lcall
dec
clc
imul
xchg
sbb
pop
popf
cld
jno
add
insl
xor
add
adc
clc
cmp
add
jle
clc
and
add
clc
cmp
sar
mov
add
iret
popf
adc
add
mov
inc
add
loop
sar
add
outsl
pusha
add
dec
inc
clc
ss
cmp
iret
jl
std
nop
mov
clc
inc
clc
cmpsl
clc
je
clc
xchg
pop
and
add
and
lods
movsb
clc
arpl
add
clc
and
add
bound
add
repnz
add
es
and
or
jns
dec
mov
mov
clc
mov
push
addr16
hlt
mov
sub
negb
jns
dec
test
cmp
insl
add
add
std
cltd
jecxz
xlat
jbe
add
movsb
clc
scas
adc
add
xchg
cmp
add
add
lea
pusha
add
fimuls
jl
xor
stc
out
sub
inc
clc
ljmp
add
adc
clc
repnz
add
add
xor
pop
clc
stos
inc
clc
adc
inc
clc
push
int3
xchg
dec
leave
popf
mov
lret
and
mov
xor
clc
aaa
and
xchg
dec
sti
or
xabort
iret
add
scas
and
add
add
add
or
flds
clc
fdivl
imul
js
mov
sub
mov
out
aas
pusha
add
jp
cmc
add
aas
loopne
cmc
roll
mov
sub
cs
xor
add
and
add
ja
cmp
add
addr16
push
jle
enter
nop
inc
clc
fcmovu
mov
pop
lret
sar
clc
stc
push
sbb
mov
add
cmp
add
and
add
add
cmp
dec
pop
xchg
push
jl
clc
jno
add
icebp
aad
aam
stc
mov
and
add
sub
cmp
clc
jo
add
mov
add
sub
jle
clc
pop
fsts
cltd
int
sub
inc
clc
xbegin
mov
out
imul
clc
mov
nop
adc
add
cmp
clc
lods
fs
mov
push
hlt
es
dec
and
add
ficoms
add
xbegin
mov
add
imul
mov
add
cwtl
ss
clc
cmpsb
clc
mov
xchg
push
add
sbb
in
je
clc
pop
iret
add
add
clc
lcall
gs
mov
or
dec
sbb
clc
pusha
add
jo
add
mov
mov
add
js
in
std
cs
jmp
lret
mov
push
into
xor
add
movsb
clc
out
or
push
and
add
stos
or
add
cmp
or
cmpsl
clc
adc
add
add
imul
notl
fdivp
xbegin
arpl
add
dec
sbb
sbb
ret
inc
add
sti
addr16
cli
pop
arpl
add
xor
add
mov
pop
pop
push
jne
clc
mov
bound
add
arpl
add
jge
lcall
cmp
imul
clc
dec
aad
popf
dec
mov
jno
add
xor
bound
add
clc
push
add
mov
xor
add
xchg
sbb
clc
ret
pop
mov
aad
add
adc
add
add
ja
sbb
jmp
sbb
fisubs
add
rcll
add
add
push
jl
cld
in
lcall
clc
push
xchg
or
clc
add
add
mov
stos
sub
add
clc
das
jmp
cmp
push
xchg
dec
movsl
clc
add
xchg
mov
clc
rcrb
clc
jo
add
sub
cltd
jp
lcall
jg
cmpsl
clc
out
inc
clc
call
add
and
add
clc
imul
push
add
push
sbb
add
fdivs
add
lods
scas
mov
add
call
add
sar
clc
inc
clc
or
add
mov
clc
notb
cwtl
mov
clc
mov
clc
hlt
mov
add
add
sub
push
cmpsb
clc
pop
xor
push
iret
in
ja
cmp
add
data16
sgdtl
add
data16
add
add
push
lock
pop
pop
sar
add
scas
into
cmpsb
clc
ja
movsl
clc
das
add
out
or
clc
mov
add
mov
movsb
clc
rcll
add
dec
sbb
add
in
mov
ds
push
push
add
pop
clc
lret
clc
xchg
and
add
pop
push
add
repz
add
add
ret
clc
into
lcall
cmpsl
clc
sub
jmp
lret
pop
cmp
dec
emms
or
add
call
clc
mov
pop
push
sub
out
and
clc
not
and
add
test
inc
test
xor
fcoml
in
push
sub
lea
lea
push
push
push
push
call
es
push
mov
and
xor
not
test
setne
nop
nop
loop
pop
lea
or
sub
xchg
not
es
ss
pop
add
movzbl
es
push
or
and
push
mov
add
add
push
mov
push
push
call
push
call
leave
ret
lea
sub
mov
lock
lea
lock
ret
pop
jmp
and
je
and
sub
test
nop
nop
nop
nop
nop
push
push
push
je
mov
adc
test
jne
ret
andl
mov
lea
push
push
push
push
mov
push
lret
call
je
pop
add
add
ja
sub
sub
loopne
decb
add
add
in
push
fstp
cmp
fs
jmp
mov
into
stos
xor
add
int3
sub
add
into
xchg
and
add
add
clc
push
clc
sbb
ja
leave
jp
dec
cmpsb
clc
addr16
repz
add
xchg
imul
push
inc
clc
sub
add
sar
mov
pop
mov
stos
mov
cwtl
inc
add
pop
or
icebp
jns
sar
aad
mov
cwtl
xor
add
clc
push
imul
xchg
adc
add
add
xor
add
jns
add
sbb
je
jnp
xchg
cwtl
aam
mov
pop
mov
add
imulb
sbb
cmpsb
clc
mov
clc
inc
clc
cltd
sbb
ss
adc
clc
push
add
repnz
add
inc
add
daa
clc
mov
xchg
add
add
clc
push
stc
dec
mul
clc
stos
sbb
out
push
add
sub
cs
clc
or
clc
idivb
stc
test
call
add
push
inc
clc
push
add
mov
loopne
sbb
clc
fisubrl
and
mov
sbb
add
sbb
clc
pop
clc
lods
mov
pop
dec
xor
clc
test
push
add
out
add
pop
mov
stos
dec
inc
clc
js
clc
insb
fwait
adc
sahf
dec
out
sar
clc
pop
clc
adc
add
clc
cld
cmp
cmp
clc
jne
push
clc
xchg
and
xchg
mov
inc
add
mov
sbb
add
and
add
push
clc
and
add
add
jp
outsl
pop
push
add
insl
sbb
sti
fisubl
clc
push
add
dec
imul
inc
clc
cmp
icebp
sbb
lahf
divps
adc
add
sbb
or
add
clc
popa
add
data16
mov
call
xor
sbb
insl
xor
jp
add
add
ja
es
or
pop
mov
call
cmp
mov
std
dec
jl
or
add
xchg
cmp
sbb
add
maxps
clc
js
xchg
notl
lcall
mov
clc
shll
add
clc
pop
and
add
xchg
inc
add
dec
ja
clc
lock
add
insb
lret
ret
clc
or
out
fs
dec
jae
add
loopne
mov
ret
pop
out
cmp
clc
inc
add
dec
aam
clc
repz
clc
add
add
clc
mov
clc
fdivl
add
add
stos
inc
add
jnp
xchg
cmp
sub
mov
int
addr16
je
xchg
cmpsb
clc
and
add
clc
adc
add
and
add
add
dec
push
add
inc
clc
xabort
add
jae
add
add
add
add
fmull
mov
push
dec
xor
add
leave
jl
mulb
sbb
mov
clc
test
push
xor
adc
add
sahf
or
clc
mov
movsb
clc
dec
int
clc
push
add
jne
clc
add
add
cmc
or
cmp
fisubs
add
stc
push
enter
jbe
loopne
sub
jns
clc
push
lods
or
int
sub
push
add
and
add
clc
pop
es
jbe
clc
lret
movsb
clc
iret
test
outsb
mov
ljmp
mov
clc
xchg
cltd
sbb
clc
or
clc
cmc
arpl
add
dec
fnstsw
clc
sahf
in
mov
clc
push
push
add
cmc
jle
stos
roll
sar
clc
pushf
jmp
sub
in
pop
ret
stos
pusha
add
jecxz
out
cmp
aad
pushf
fucomip
push
cwtl
pusha
add
fldcw
aam
shrl
jae
add
mov
clc
mov
pop
mov
xor
add
cmp
add
push
gs
jp
clc
pop
out
fwait
sbb
clc
mov
xbegin
iret
and
add
or
clc
jg
fistl
cli
mov
imul
clc
xchg
xlat
dec
test
push
inc
clc
adc
add
cli
int
pop
and
sub
into
xchg
int3
popf
xor
add
clc
cmpsb
clc
inc
clc
push
jno
add
clc
jmp
dec
test
mov
add
clc
cld
sahf
push
popf
xbegin
scas
xchg
pop
and
add
add
jl
xchg
jecxz
in
cmp
cltd
push
insl
nop
aam
clc
xlat
xlat
inc
add
jae
add
clc
sbb
roll
hlt
mov
clc
lea
add
add
add
clc
sbb
add
lea
dec
jmp
jno
add
lea
std
jno
add
clc
lea
add
popa
add
mov
pop
or
cmp
clc
pusha
add
xor
add
add
loopne
pop
inc
add
aas
mov
cmp
push
add
pop
nop
push
lods
xor
add
nop
lods
ret
fmull
outsb
outsb
gs
adc
cmpsb
clc
adc
add
add
bound
add
movsl
clc
xor
add
cld
ja
clc
movsl
clc
xor
add
gs
jmp
xchg
cmp
pop
push
clc
cmp
clc
aaa
aaa
mov
ret
clc
pop
xchg
push
add
sbb
cli
es
movsl
clc
add
add
sarl
lods
or
sbb
pop
sahf
cmp
push
or
clc
cmp
cwtl
testl
add
pop
pushf
icebp
or
mov
punpcklwd
add
jae
add
imul
xchg
aaa
cmp
add
stos
shl
sbb
jle
cmp
clc
mov
add
enter
cmp
clc
push
fldl
sub
inc
clc
adc
add
in
push
and
add
xchg
mov
push
in
test
dec
scas
dec
test
int3
stc
inc
add
fprem
cmp
cmp
pop
xchg
test
push
add
fcmovu
xchg
dec
add
add
inc
clc
data16
inc
clc
sbb
dec
and
add
clc
pusha
add
in
je
pushf
fnstenv
rcr
or
clc
xchg
sahf
pop
test
pop
stos
mov
clc
push
add
jp
call
cmp
add
and
adc
add
cmpsl
clc
pop
sub
mov
add
out
cmp
jae
add
add
popa
add
push
jmp
into
xchg
fisubs
clc
mov
lea
in
lock
and
add
outsb
aas
jecxz
pushf
push
add
imull
ds
inc
clc
jns
mov
mov
xbegin
ljmp
cltd
insl
mov
movsl
clc
js
add
xchg
add
adc
rdmsr
add
xor
add
add
sar
insl
cmp
sub
add
dec
iret
or
pop
in
mov
add
adc
lea
fwait
push
inc
clc
adc
add
clc
xchg
cmpsb
clc
mov
clc
ja
clc
pop
loopne
and
add
sbb
pop
in
fxam
clc
xchg
ss
add
std
add
add
or
add
ss
test
bound
add
add
add
add
push
add
cmp
cwtl
xchg
into
push
add
out
js
icebp
add
add
adc
push
xor
add
ret
add
in
xlat
mov
fwait
popf
es
xor
add
mov
clc
pop
sahf
cmp
clc
add
or
clc
gs
dec
pop
pop
cmpsb
clc
cmp
sub
add
jg
xor
outsb
lret
add
or
clc
mov
popa
add
and
or
clc
xor
add
add
jb
add
aas
pop
in
xor
add
pop
out
sti
stc
pop
xchg
fbstp
add
fucomp
fwait
in
js
push
cmp
clc
jle
lahf
mov
stc
out
jae
add
aam
cmp
and
add
clc
ja
add
add
clc
dec
aas
nop
push
pop
inc
clc
adc
das
cli
jl
add
cld
jl
add
icebp
sti
jo
add
push
add
mov
clc
clc
sbb
or
dec
push
fcmovnu
adc
lea
or
inc
add
cmc
lea
clc
mov
imul
fldt
fdivs
add
sbb
add
push
add
inc
add
push
mov
ljmp
push
add
xchg
xchg
into
xor
add
add
loop
pop
arpl
add
clc
test
test
gs
test
cmp
sahf
mov
jge
jle
dec
fs
sti
jns
mov
js
mov
clc
pop
imul
scas
sbb
add
add
imul
stc
in
pop
mov
push
fisubrs
push
fdivp
loopne
mov
fisttpll
push
sub
hlt
cmp
mov
cmpsl
clc
dec
call
mov
fs
std
dec
inc
clc
cmp
add
cltd
int3
jb
add
pushf
add
add
mov
clc
jne
ud0
clc
mov
clc
sub
add
pop
adc
add
clc
stos
cmpsb
clc
pop
lcall
or
clc
in
mov
add
lahf
mov
push
add
xor
add
adc
add
add
pop
inc
add
scas
aas
rcl
cmp
ds
clc
and
clc
adc
add
push
add
dec
scas
out
jne
jg
xchg
add
push
rorl
stos
push
pop
sbb
sbb
nop
cltd
jp
add
xbegin
or
ret
xchg
xlat
and
inc
clc
cmp
add
pop
lret
clc
js
mov
and
add
clc
inc
add
inc
add
gs
inc
add
jmp
fstl
jne
cmovg
cmp
add
aam
add
inc
add
or
mov
or
add
icebp
mov
add
add
xchg
xchg
xchg
call
clc
dec
cmp
push
add
je
inc
clc
test
mov
add
clc
fisubs
add
pop
sbb
add
mov
repz
mov
clc
ja
add
add
add
add
insl
clc
dec
cmpsb
clc
or
popa
add
stos
idivb
mov
add
adc
cmpsb
clc
daa
clc
jge
pop
cmp
fimull
pop
xor
add
clc
inc
clc
je
clc
push
add
popf
test
leave
cmp
add
or
dec
jbe,pn
add
fistl
add
jae
add
mov
clc
add
sub
mov
pop
push
add
repnz
add
cltd
sbb
jp
loop,pn
cli
popa
add
movsb
clc
ret
clc
dec
in
cmp
add
dec
xchg
gs
lea
add
out
pop
jle
clc
movsl
clc
mov
es
jg
or
stos
mov
loop
out
sahf
cs
fwait
jbe
add
sbb
das
iret
lret
insb
js
add
fbld
add
push
sub
jb
add
clc
insb
movsb
clc
push
xor
add
adc
jns
cmp
add
add
fs
xor
add
hlt
mov
hlt
mov
add
jle
enter
or
aad
cltd
cmp
cmp
popa
add
movsl
clc
sub
aam
push
clc
sbb
xor
add
pop
repnz
icebp
or
add
add
xchg
sbb
stos
xchg
cmp
clc
sbb
lock
xchg
pop
jle
add
sbb
adc
sub
ret
clc
dec
fistpl
lret
movsl
clc
into
leave
or
ss
mov
and
add
clc
add
add
sub
insl
mov
mov
mov
sbb
clc
loope
fmull
fldcw
clc
xchg
and
xor
add
clc
xchg
scas
inc
add
cmp
lods
and
add
add
add
add
jmp
clc
dec
push
inc
clc
ja
or
adc
add
pop
mov
cmp
sbb
clc
int
test
xor
add
ret
clc
or
dec
pop
lods
sub
add
popf
addr16
lret
in
mov
sti
insb
adc
add
add
or
add
clc
sbb
add
fistpl
addr16
pushf
cltd
dec
push
add
arpl
add
clc
jg
clc
es
cs
clc
testb
das
jno
add
mov
in
push
and
add
test
add
mov
clc
ja
add
cmp
jnp
sbb
add
cmp
aam
dec
and
add
ja
fcmovu
and
add
clc
in
and
add
and
cmp
or
lcall
movsl
clc
into
and
add
jecxz
outsb
jno
add
fwait
inc
add
mov
xor
add
out
out
pop
mov
clc
adc
mov
gs
mov
add
arpl
add
push
clc
dec
xchg
out
fistpll
add
xlat
out
icebp
out
clc
pop
enter
add
lahf
dec
test
xor
add
in
jbe
clc
cmp
jle
add
incl
or
xchg
test
push
pop
xchg
xchg
or
pop
jle
clc
mov
adc
add
xor
add
clc
xchg
loopne
sub
dec
testl
pushf
mov
mov
in
popf
xchg
or
add
mov
add
add
add
sub
clc
sbb
das
sub
aam
cmp
clc
shrb
bound
add
stos
cld
fwait
sbb
clc
mov
clc
mov
clc
cmpsl
clc
jae
add
add
mov
hlt
inc
clc
mov
jp
jae
add
divl
add
clc
sar
add
sub
add
scas
and
lret
sub
push
add
inc
add
and
add
jmp
add
adc
add
and
add
push
fdivrs
jno
add
sub
movsl
clc
jecxz
mov
clc
pop
das
lock
mov
sbb
fbld
lret
ljmp
add
xchg
mov
daa
clc
cmp
sbb
clc
mov
cmpsb
clc
xchg
add
add
add
clc
jg
dec
sbb
sar
lods
aaa
int
mov
cmpsb
clc
ficomps
gs
fcmovne
mov
add
pop
or
add
xchg
jb
add
aas
mov
cmp
icebp
sar
mov
add
imul
mov
xchg
fsub
clc
pop
out
adc
clc
aaa
jecxz
std
mov
es
dec
push
adc
mov
add
lahf
add
add
add
sub
push
add
jbe
cmpsb
clc
xor
add
xabort
clc
mov
xor
add
add
ss
rorb
and
add
dec
dec
inc
clc
cs
shlb
add
dec
sbb
clc
mov
clc
sub
mov
sub
add
cmp
clc
xchg
sub
add
fldcw
fsubrs
mov
clc
fsubrl
clc
ret
clc
jbe
mov
add
clc
dec
mov
or
add
imul
add
movsb
clc
sahf
fs
adc
pop
mov
mov
clc
xor
add
jbe
sbb
add
xor
clc
push
add
dec
push
clc
ss
xabort
clc
mov
clc
cmp
and
add
or
clc
adc
add
jmp
clc
enter
xor
add
push
xbegin
fistps
lret
mov
out
dec
pop
sbb
pop
push
data16
adc
push
xchg
shrl
sub
sub
in
mov
add
or
clc
gs
push
adc
add
in
xchg
pop
or
clc
lahf
and
add
add
add
clc
call
add
clc
add
add
clc
jo
add
dec
shlb
scas
daa
clc
sbb
push
add
out
adc
add
out
jp
jnp
pop
clc
pop
in
repnz
cmp
add
clc
mov
jl
cmp
vmovaps
clc
aam
add
jg
inc
clc
dec
je
clc
add
ljmp
jbe
jmp
push
leave
clc
gs
daa
clc
imul
outsl
jbe
clc
jb
add
add
jnp
clc
mov
add
fistpll
test
out
mov
out
mov
sub
cli
sbb
add
inc
clc
xlat
push
xchg
sar
clc
xchg
hlt
dec
xchg
xchg
sub
and
add
aaa
mov
mov
add
clc
inc
clc
mov
add
addr16
push
add
sar
clc
adc
add
pop
push
sub
push
repnz
mov
data16
adc
add
push
add
xchg
mov
insb
cmpsl
clc
popa
add
icebp
push
push
je
sar
clc
mov
jne
lcall
mov
clc
stos
sar
clc
and
adc
add
add
jo
add
add
add
xor
add
stc
push
in
out
call
clc
outsb
add
clc
cmp
clc
push
clc
sarb
add
mov
adc
add
add
add
and
add
es
add
add
add
add
add
clc
ret
clc
or
or
sub
je
outsl
iret
into
pop
ljmp
sahf
jecxz
dec
jo
add
mov
xor
add
fcomp
js
cmp
jnp
clc
inc
clc
push
sar
add
cmp
clc
popf
ret
clc
sub
xlat
jmp
push
cmp
clc
cmp
aam
outsb
inc
clc
jmp
and
je
mov
mov
add
cmp
or
dec
xchg
lahf
sar
lods
push
add
jno
add
xchg
mov
mov
dec
jb
add
leave
pop
aad
xchg
push
nop
popa
add
inc
add
lcall
dec
mov
repnz
test
cltd
xchg
clc
popf
mov
stos
fsubl
add
mov
mov
movsl
clc
xor
add
or
in
sub
test
lahf
adc
add
add
dec
xabort
add
or
clc
mov
clc
xor
add
add
clc
fcoms
iret
loopne
adc
add
add
clc
ss
add
add
add
bound
add
mov
lock
mov
in
js
sbb
sub
faddl
add
add
push
clc
sub
add
cmpsb
clc
xchg
xchg
arpl
add
cmp
data16
hlt
ds
cmp
add
push
jb
add
mov
clc
popa
add
mov
add
add
sbb
and
add
add
leave
ror
mov
rorl
cmp
imul
and
add
add
add
xor
clc
sub
dec
pop
clc
cmp
clc
push
add
sahf
push
add
push
add
fs
cli
repz
clc
fst
movsl
clc
jp
xbegin
pop
or
mov
sbb
aad
cmp
imul
jne
cmp
das
sub
movsb
clc
cmpsb
clc
lcall
xor
dec
xchg
daa
clc
loop
pop
inc
clc
lea
push
cld
fwait
and
add
stc
add
add
pop
pop
mov
xchg
nop
adc
dec
fldt
mov
mov
cmp
in
jecxz
cli
out
aad
ds
and
add
aad
clc
cmp
cmp
adc
add
clc
adc
add
jecxz
clc
in
add
add
mov
decb
pop
mov
jns
pop
data16
fsubrs
addr16
shlb
cmc
push
rol
clc
inc
add
push
add
jg
clc
pop
cli
dec
mov
cmp
sub
std
jp
xchg
jge
cs
clc
sub
add
imul
add
clc
adc
add
sbb
bound
add
cmp
loopne
roll
add
add
test
adc
add
add
in
add
adc
add
clc
xor
add
add
fwait
sbb
cmp
popf
and
add
clc
cmpsb
clc
mov
add
jge
jne
add
and
and
add
lret
lods
fsubs
add
in
mov
cmp
pop
clc
push
clc
mov
into
out
dec
jl
ds
sbb
out
jmp
clc
out
push
add
add
clc
jl
add
aaa
cmp
xchg
jmp
clc
sub
cmp
daa
clc
push
add
mov
int
dec
lahf
xchg
mov
out
in
add
add
clc
jns
clc
pop
wbinvd
mov
jle
add
add
pop
outsl
inc
clc
inc
add
and
add
push
xchg
ds
and
jge
sbb
sub
clc
in
xor
insb
cmp
icebp
movsb
clc
in
push
add
shr
push
add
scas
lea
dec
sahf
lock
pop
mov
jnp
js
int
jg
clc
add
pop
xchg
sar
mov
add
add
push
clc
sub
pushf
mov
dec
call
add
ja
clc
sub
sahf
sarb
xchg
std
mov
clc
xlat
mov
push
add
test
pop
xlat
add
or
add
rcrb
pop
pop
jle
mov
jge
fmulp
push
add
loop
repz
repz
push
clc
cmc
cmp
add
test
xchg
mov
add
sbb
add
add
or
clc
pop
clc
movsb
clc
je
dec
loope
lret
xchg
data16
mov
clc
fmull
cmp
add
iret
dec
scas
pmulhw
xor
add
add
jge
clc
adc
add
fisttps
pushf
ja
sti
inc
add
sub
dec
outsb
outsb
fs
xor
add
add
dec
dec
push
clc
jbe
clc
insb
in
dec
in
arpl
add
jmp
clc
jge
mov
push
je
out
add
add
mov
clc
test
xchg
imull
clc
inc
add
dec
sbb
dec
aad
adc
cmp
add
mov
jecxz
and
cmp
in
pop
cmp
mov
xchg
sub
pop
clc
lcall
lock
add
icebp
fsubs
int3
in
fs
xor
push
clc
popf
push
add
enter
fstpl
add
pop
inc
add
repnz
clc
pop
jne
and
add
add
add
add
clc
add
cmpsl
clc
in
std
mov
add
mov
imul
popf
add
push
je
clc
jp
push
mov
lods
mov
clc
leave
je
jns
int3
cmc
pop
adc
add
pop
and
add
cwtl
sarl
call
fists
add
inc
add
dec
dec
mov
dec
inc
clc
mov
add
sbb
clc
jl
jmp
sti
out
mov
lahf
mov
push
xabort
scas
data16
xlat
cmpsb
clc
insb
inc
add
mov
iret
je
flds
fcoml
inc
add
xchg
aaa
and
jecxz
imul
pop
cld
mov
pop
dec
jmp
add
xchg
pop
xchg
cmpxchg
xchg
mov
clc
xor
add
clc
nop
push
xor
add
add
sub
nop
jae
add
cmp
add
push
clc
dec
inc
add
lock
in
inc
add
inc
clc
ds
xor
add
xchg
cmp
clc
and
add
add
cmp
fcmovnbe
jmp
xor
cmp
add
sub
mov
and
add
loopne
inc
add
xor
clc
mov
fdivl
add
add
pop
fidivrs
sbb
lcall
xchg
sar
inc
add
push
insb
filds
add
cli
push
clc
push
add
aad
sub
mov
add
icebp
xor
mov
cltd
vmovaps
data16
xbegin
mov
dec
jl
clc
sub
clc
xchg
sbb
pusha
add
or
clc
jnp
xchg
movsl
clc
testl
pop
add
add
clc
call
clc
fimull
sub
add
mov
or
adc
clc
adc
add
clc
inc
clc
pop
setno
cmc
into
daa
clc
scas
pop
outsb
push
add
std
std
cmp
add
add
mov
xor
clc
push
xchg
jb
add
inc
clc
xor
add
sbb
fisubl
leave
mov
add
clc
push
jb
add
not
and
add
push
mov
daa
clc
sar
clc
dec
add
add
mov
clc
clc
push
test
xor
add
clc
fucomp
cmp
add
ds
clc
sti
lods
push
sbb
add
push
clc
and
add
mov
adc
add
mov
sub
clc
sahf
jno
add
clc
sbb
pop
loope
or
add
xor
add
add
pushf
movsb
clc
sar
popf
inc
add
das
int3
jle
jnp
xabort
clc
xor
add
pop
mov
clc
scas
xchg
jo
add
mov
mov
push
xor
add
enter
insl
in
dec
mov
test
add
or
nop
fs
into
stos
test
add
daa
clc
es
mov
cmp
dec
sub
add
psraw
repz
cmc
mov
add
das
inc
add
xchg
jle
roll
dec
nop
add
add
cli
fiadds
clc
jbe
add
fsub
clc
stos
mov
clc
loope
jl
into
xor
add
clc
shrb
mov
add
out
insb
mov
add
fsubr
or
pushf
push
push
lods
scas
dec
push
fisttps
add
add
call
addr16
pop
sahf
int3
cmpsb
clc
mov
in
and
add
add
mov
mov
xchg
in
mov
and
popf
mov
clc
xlat
xor
add
cltd
pop
xchg
push
add
imul
data16
nop
jo
add
add
movsl
clc
lret
popf
icebp
lret
mov
push
add
int3
dec
xlat
jp
mov
hlt
cmp
pop
lahf
repz
add
xor
xor
add
sub
mov
dec
sub
add
jle
js
xor
add
int
pop
clc
fmull
clc
enter
addr16
mov
inc
clc
mov
pop
clc
mov
ret
fwait
gs
adc
add
and
add
and
add
add
push
lods
pop
iret
mov
or
add
jl
fwait
loopne
mov
lea
add
sbb
add
pop
clc
mov
test
mov
add
or
add
mov
cmp
push
push
fiaddl
mov
add
outsl
scas
cmp
iret
movsl
clc
shl
jae
add
and
add
pop
pop
sbb
add
sub
aas
xchg
call
mov
clc
push
clc
mov
cmp
and
add
add
data16
xchg
test
push
add
ret
clc
loope
test
scas
jno
add
clc
cmpsb
clc
jnp
out
pop
lea
mov
cmpsb
clc
pop
cmp
add
clc
lret
rorl
mov
clc
push
clc
cmp
clc
cmp
fs
adc
add
clc
adc
pop
xlat
add
sub
clc
inc
add
mov
add
nop
data16
pop
lods
shl
clc
ds
add
repz
add
clc
outsb
lret
stc
inc
clc
cmp
clc
lods
adc
pop
cmpsl
clc
and
add
add
jge
movsl
clc
push
mov
inc
clc
xbegin
mov
add
jmp
sub
add
clc
sar
add
add
clc
into
mov
rcrb
mov
rclb
pushf
cmpsl
clc
fdivp
adc
adc
add
xabort
add
repnz
sbb
out
clc
test
lods
cltd
cmp
in
scas
aas
int
sbb
cmp
fwait
fs
pushl
add
add
stos
push
and
add
clc
mov
imul
jg
push
testl
clc
xor
xchg
int3
sbb
mov
aad
std
mov
mov
or
sar
scas
and
test
dec
and
add
clc
test
add
xlat
adc
add
mov
pop
lods
data16
aad
add
sub
clc
lret
dec
inc
add
dec
lahf
adc
add
push
clc
push
mov
add
cmp
shll
movsb
clc
adc
add
addr16
scas
jb
add
clc
loope
das
adc
add
or
inc
clc
lock
add
add
jmp
push
push
ljmp
push
cs
clc
fistl
clc
pslld
add
clc
data16
push
add
lock
clc
lock
cmp
add
mov
clc
add
add
loope
add
xchg
jl
add
dec
and
add
push
add
jns
add
fisubrs
dec
adc
jg
mov
clc
mov
add
add
and
add
clc
xchg
and
clc
mov
dec
clc
adc
add
outsl
insb
loopne
mov
shl
clc
nop
hlt
pop
data16
and
add
jb
add
add
pop
adc
add
add
sbb
clc
dec
cmp
clc
in
cmc
inc
clc
fisttpll
sub
stos
xchg
dec
xchg
pop
push
add
ss
outsl
or
add
clc
push
cmp
dec
lock
inc
add
mov
pop
xor
clc
bound
add
cwtl
xor
add
add
test
jns
or
clc
or
add
mov
push
ret
clc
push
clc
stos
nop
xchg
int
jl
daa
clc
test
jno
add
clc
clc
jb
add
popa
add
and
sub
mov
clc
cmp
mov
and
pushf
cmp
addr16
or
add
cltd
data16
ret
clc
mov
mov
add
and
add
in
and
add
clc
adc
gs
pop
sar
divb
add
fstl
cltd
mov
add
cmc
push
add
pop
add
add
add
hlt
in
jae
add
push
cmp
jne
clc
cmp
cmp
das
ret
add
insb
dec
mov
mov
clc
clc
nop
mov
add
cmp
add
add
add
insb
es
in
pop
push
add
cmp
jg
sbb
xor
add
leave
lcall
clc
fbld
pop
mov
clc
sub
insl
dec
mov
clc
pmulhuw
arpl
add
repnz
fdivrl
pop
clc
and
add
add
aaa
imul
add
xor
add
sbb
inc
add
adc
mov
clc
mov
add
add
xchg
mov
sahf
sbb
js
incb
add
adc
add
popf
sbb
mov
dec
cmp
clc
insb
stos
jecxz
add
cmp
cltd
sti
dec
jb
add
add
add
add
mov
add
sbb
clc
xor
add
pop
dec
mov
clc
jp
sub
mov
repnz
mov
or
xabort
cwtl
sbb
jle
mov
stos
stos
arpl
add
dec
sub
add
mov
cwtl
jae
add
lock
repz
sti
add
xor
add
popl
clc
adc
add
add
inc
clc
fwait
aas
mov
add
ljmp
xlat
je
add
mov
fcoml
jp
pop
enter
mov
add
add
add
add
or
pop
cmp
dec
inc
clc
lock
cmp
addr16
inc
clc
add
add
adc
add
clc
sbb
fldcw
dec
out
xor
add
testl
and
push
and
add
cli
sbb
push
aaa
sbb
outsl
loop
call
add
xchg
idiv
inc
clc
add
cltd
sbb
jg
clc
cmp
add
jge
pop
aam
xchg
inc
add
dec
js
clc
data16
mov
clc
test
fsubrs
cmc
addr16
cmp
clc
inc
clc
sbb
or
adc
add
leave
insl
fcomps
push
ds
in
push
lret
pop
rorb
xchg
xlat
cmp
jl
enter
outsl
sbb
add
add
insl
ret
das
popf
pop
clc
fcoms
add
sbb
in
push
add
stos
dec
and
add
add
mov
add
clc
jp
fs
fcmove
clc
dec
fdivrl
xor
add
loopne
or
repz
data16
add
mov
in
stos
aas
incb
adc
add
and
add
mov
add
ret
and
add
clc
out
xabort
xchg
mov
sti
iret
bound
add
inc
clc
imul
clc
cltd
jg
push
xchg
aas
mov
adc
and
add
and
add
test
mov
add
out
lods
dec
cmp
adc
add
or
add
sub
ds
jp
inc
clc
mov
stos
inc
clc
xchg
jo
add
xchg
or
xor
sar
push
add
clc
sbb
xchg
ja
sub
icebp
mov
sub
ds
repnz
arpl
add
cmp
clc
daa
clc
push
scas
inc
clc
dec
iret
ret
clc
pop
jns
add
xchg
clc
xbegin
movsl
clc
mov
add
add
xchg
bound
add
clc
test
sbb
mov
jae
add
clc
xabort
clc
dec
mov
cmp
lock
stos
cs
add
in
mov
push
add
adc
add
sub
negb
es
outsl
push
add
add
add
clc
mov
clc
pop
cmpsb
clc
lahf
sbb
leave
pop
fsubrp
add
clc
and
add
push
add
pop
or
clc
xbegin
inc
add
lea
add
inc
add
add
cmp
mov
pop
and
add
and
add
int3
pop
daa
clc
inc
clc
dec
mov
lret
add
clc
inc
clc
mov
mov
out
dec
bound
add
add
clc
fmuls
sahf
and
nop
dec
xor
add
add
mov
pop
repz
aas
xchg
and
add
scas
clc
dec
push
aam
into
icebp
push
cmpsb
clc
mov
adc
cs
jmp
lea
or
push
ret
clc
mov
stos
mov
in
xor
add
add
add
push
xor
add
add
pop
or
mov
clc
das
sbb
mov
add
aam
jle
xlat
mov
pop
outsl
cmpsl
clc
adc
add
xlat
mov
add
arpl
add
fists
add
sbb
inc
clc
inc
clc
enter
aam
cmpsb
clc
test
movsl
clc
xor
sbb
pop
inc
clc
ljmp
xchg
scas
sub
pop
data16
push
add
push
or
add
hlt
pop
clc
cwtl
xchg
icebp
sbb
add
sarb
inc
add
cmp
clc
es
mov
clc
or
shr
jns
je
loop
and
add
add
adc
roll
add
jne
aad
cmp
mov
clc
nop
iret
aad
clc
adc
clc
imul
lock
mov
adc
add
fmuls
repz
adc
add
sub
xchg
xchg
cmp
clc
cmp
cmp
clc
cltd
bound
add
in
aam
clc
xor
add
xor
add
add
cmp
clc
rorb
out
cmp
mov
add
imul
cmpsb
clc
popa
add
adc
add
lret
add
add
inc
clc
jns
movsl
clc
mov
adc
add
add
xchg
in
fidivrl
add
mov
clc
xbegin
add
clc
jae
add
clc
sub
or
fdivs
clc
adc
add
jbe
clc
xchg
fsubs
add
add
lods
std
and
add
jl
sub
sub
add
jmp
setl
add
push
rcl
cmp
clc
cmp
clc
jle
add
add
mov
mov
and
cltd
cld
push
add
add
add
call
mov
add
clc
xor
add
add
loop
add
add
add
add
clc
ret
clc
fstpt
test
sti
push
add
xchg
dec
jnp
clc
adc
add
or
clc
push
add
ret
clc
push
add
and
add
clc
jecxz
lods
stc
dec
movsb
clc
sub
and
add
ds
ds
mov
clc
out
mov
clc
rol
clc
cmp
movsl
clc
hlt
mov
fiadds
add
lahf
sub
adc
add
add
mov
add
add
clc
jl
xor
add
jl
loope
inc
clc
adc
add
or
pop
mov
add
mov
cwtl
mov
clc
je
inc
clc
mov
jl
mov
jecxz
mov
clc
divl
mov
loopne
xor
nop
pop
adc
clc
and
mov
xchg
sub
clc
test
jmp
loop
or
dec
loop
sbb
add
aam
shlb
add
add
mov
sar
sub
es
xlat
mov
sti
pavgw
jbe
push
fidivrs
add
movsl
clc
pop
xchg
adc
add
sar
clc
shl
clc
push
xchg
cmp
add
arpl
add
add
or
shrb
add
sub
mov
xchg
rcrb
shl
clc
mov
jmp
clc
ss
js
aam
mov
sar
aam
clc
repnz
clc
sub
clc
enter
xor
jge
ljmp
movsl
clc
jbe
jns
clc
pop
lea
call
and
add
dec
sbb
clc
adc
cmp
add
add
add
out
out
or
inc
add
sub
inc
clc
mov
add
and
clc
sbb
cmp
clc
add
mov
dec
adc
dec
or
clc
sub
sbb
add
int3
mov
clc
lahf
outsl
inc
clc
movsl
clc
mov
sub
in
xchg
rorl
loopne
xor
add
clc
stos
inc
clc
aaa
ret
clc
shll
add
aaa
and
add
mov
clc
imul
jbe
clc
ss
arpl
add
add
je
add
or
ljmp
insl
nop
mov
fimuls
divl
add
mov
jnp
cmpsl
clc
xchg
scas
mov
clc
pop
ret
xchg
testl
mov
add
mov
add
add
clc
loopne
add
add
add
add
add
test
and
cmc
sbb
add
or
push
inc
clc
clc
xchg
adc
ret
dec
das
xchg
push
push
or
cmp
clc
cmp
add
gs
movsl
clc
mov
clc
jle
and
add
inc
add
rclb
add
clc
push
add
dec
cmp
clc
jmp
mov
cli
fidivrl
mov
mov
add
inc
add
pop
loopne
add
add
add
imul
push
cmp
ss
into
scas
insl
jae
add
stos
add
add
pop
and
loop
loope
mov
add
enter
add
jne
stos
jl
add
mov
repz
sbb
add
xor
add
push
mov
jb
add
std
xchg
out
and
add
clc
and
add
clc
bound
add
mov
clc
loop
scas
mov
stos
rcr
ja
test
lock
ljmp
or
jmp
jecxz
inc
add
aaa
adc
add
add
pop
in
sbb
add
stos
lock
clc
ljmp
jg
sub
scas
dec
out
int3
push
es
pop
clc
cmc
sti
push
add
add
add
clc
xchg
hlt
psubq
aam
add
pop
and
add
sti
mov
cmp
add
xor
add
add
out
cld
mov
and
add
clc
lret
mov
popf
adc
add
xor
add
out
movsl
clc
jo
add
and
push
add
add
add
fs
cmp
add
adc
add
in
mov
inc
add
cmc
mov
push
clc
pop
xchg
mov
clc
clc
mov
add
mov
jnp
add
addr16
add
add
mov
lea
clc
lret
mov
clc
repnz
add
lock
inc
clc
dec
push
lret
jmp
add
sbb
xchg
inc
clc
sti
dec
cmp
add
aam
shl
clc
mov
and
stc
dec
stos
push
or
add
xor
add
pushf
clc
pop
add
bswap
stos
add
add
jne
jp
clc
scas
shrl
call
inc
add
add
add
popf
or
mov
clc
int3
lods
into
das
dec
int3
cmp
jmp
clc
test
or
pop
fidivs
add
push
inc
clc
cmc
ja
ja
add
and
add
es
es
fisubrl
std
scas
mov
clc
stc
sarb
or
mov
clc
out
rol
clc
lods
je
push
add
pop
clc
mov
add
in
inc
add
cmpsl
clc
or
faddp
clc
stos
xor
add
aad
inc
add
sub
leave
outsl
aas
repz
clc
push
add
scas
xor
add
clc
cwtl
xor
add
dec
inc
clc
cltd
push
fistl
add
add
add
lcall
clc
inc
clc
pop
jo
add
add
out
out
clc
pop
xor
clc
push
add
lret
int
in
and
jbe
pop
clc
mov
mov
mov
clc
sbb
clc
push
add
sar
clc
pusha
add
cmc
push
jnp
clc
popa
add
ljmp
xchg
sub
xor
add
sahf
in
movsl
clc
cmp
clc
adc
add
inc
add
or
pop
stos
int3
popf
mov
clc
test
xchg
insb
scas
push
pop
cmpsl
clc
clc
test
clc
sbb
mov
pop
out
or
add
add
sti
xchg
push
add
imul
sbb
clc
mov
cwtl
xor
add
test
mov
jl
clc
xlat
xchg
push
xchg
inc
clc
pop
inc
add
out
jns
clc
in
aad
clc
fstpt
lods
arpl
add
dec
mov
add
push
enter
sub
dec
fcomip
das
mov
test
test
ss
jg
add
je
in
and
add
clc
xabort
or
add
mov
add
xor
add
add
cmpsl
clc
popa
add
hlt
pop
mov
add
cmp
clc
test
mov
add
xchg
in
insb
notl
ja
imul
ljmp
push
adc
aam
lret
add
add
add
das
xchg
cmp
or
mov
mov
call
sub
cli
or
divb
add
clc
popa
add
hlt
ja
aaa
xchg
jl
sub
add
push
xor
jle
add
fildl
add
push
jns
add
mov
add
leave
data16
xlat
mov
clc
pop
jmp
mov
add
clc
or
add
sahf
sbb
mov
cwtl
pushf
cmpsl
clc
and
adc
add
sbb
clc
xabort
mov
add
clc
lret
add
jge
jns
mov
push
add
mov
int3
popf
cmp
jg
clc
imul
pop
xbegin
or
cmp
mov
clc
sahf
jecxz
jle
loope
mov
clc
sbb
ss
and
add
aam
cmp
add
sarl
xchg
mov
mov
clc
test
jb
add
ja
mov
inc
clc
movups
add
xor
add
pop
clc
outsl
push
dec
pop
lcall
mov
aaa
jns
ret
add
add
push
xabort
add
lods
clc
push
add
or
cmp
movsb
clc
sar
push
add
clc
pop
int3
outsl
mov
dec
lock
adc
add
add
aas
jbe
fs
scas
lret
clc
inc
clc
pop
clc
call
push
clc
push
add
pop
sbb
add
sbb
push
lcall
mov
clc
xchg
mov
sub
dec
adc
clc
lock
add
out
adc
movsl
clc
outsl
xchg
jmp
add
int3
inc
add
cwtl
or
xchg
mov
add
mov
enter
add
add
add
xchg
out
out
jno
add
inc
clc
and
add
outsl
fisubl
roll
fadds
add
icebp
outsb
push
clc
jne
icebp
adc
add
xor
add
inc
add
fcompl
jne
sar
outsb
gs
push
lret
adc
add
add
test
jmp
cld
ja
push
clc
mov
sub
xor
add
xor
add
clc
sbb
clc
push
clc
cmc
sar
clc
adc
add
add
arpl
add
clc
push
sub
add
sti
insb
or
push
pop
clc
push
ret
clc
sar
clc
into
shll
dec
es
push
xchg
ret
clc
xchg
fs
cld
pushf
das
test
in
movsb
clc
pushf
mov
clc
jp
push
mov
jle
mov
clc
imul
xor
dec
xor
add
clc
add
add
jae
add
add
loopne
xor
add
clc
cmc
push
add
pop
clc
add
add
mov
dec
lods
jo
add
pop
nop
pop
xor
movsl
clc
clc
mov
aas
push
add
lods
inc
clc
pushf
pusha
add
jno
add
clc
pop
push
clc
adc
add
arpl
add
or
pop
dec
cmp
add
clc
cmp
clc
and
add
movsb
clc
cmpsl
clc
adc
add
push
add
jb
add
add
loopne
or
clc
xbegin
xchg
test
sar
xlat
gs
dec
and
add
ja
data16
lret
mov
clc
out
cmp
or
add
mov
inc
add
rcl
pop
xchg
cmp
clc
sar
test
out
sar
in
daa
clc
push
jge
clc
loope
bound
add
out
xchg
push
stc
cmp
add
rolb
ret
clc
ss
and
add
lea
addr16
in
test
mov
add
add
jns,pt
cltd
sub
pop
sahf
jge
and
add
clc
stos
cmp
pop
dec
and
lods
push
dec
js
add
push
add
xor
clc
jmp
enter
test
mov
add
ljmp
data16
out
jmp
xor
add
pop
test
lods
mov
cltd
es
xor
add
fwait
xchg
mov
loope
test
cmp
sar
mov
adc
add
int
dec
sub
clc
push
add
popa
add
in
add
mov
mov
and
add
loope
jg
clc
cwtl
pop
mov
add
stos
mov
clc
aad
push
aas
ja
clc
sbb
add
fs
imul
pop
incb
clc
inc
add
lret
sub
add
cmp
clc
outsb
xabort
inc
add
aad
clc
ror
jmp
clc
in
mov
cmp
add
lods
das
cmc
jp
inc
clc
sti
fdivr
fcoms
insb
jl
dec
inc
clc
sub
lods
test
pop
and
add
push
mov
insl
mov
add
and
add
add
ja
add
int
movsl
clc
push
clc
pop
lods
stc
cli
cmp
iret
cld
repz
add
and
add
add
stc
in
xor
add
aam
clc
xor
add
xchg
sbb
clc
dec
mov
add
sub
and
add
jp
add
bnd
add
je
fcmovnb
clc
xlat
mov
fildl
add
add
add
add
lods
das
imul
fidivl
add
and
add
call
pop
sub
mov
sub
clc
sub
xchg
add
add
clc
xchg
imul
xchg
xchg
insb
xchg
xor
jge
aas
sub
out
sar
add
ljmp
in
jmp
adc
dec
loop
pop
jg
xor
add
imul
inc
add
dec
out
xor
add
clc
cmp
adc
add
cltd
inc
clc
add
add
cmpsb
clc
into
js
push
adc
add
mov
inc
clc
addr16
clc
pop
push
cmp
fwait
ds
outsl
pushl
add
push
xbegin
lret
add
inc
clc
repz
add
pop
mov
clc
ret
das
mov
cltd
and
add
lret
clc
mov
loope
lods
nop
dec
jns
cli
jnp
sub
xchg
mov
clc
cmp
cltd
add
add
loope
xchg
lea
decl
lret
jbe
clc
fldcw
inc
add
popa
add
mov
sub
lcall
outsl
mov
cwtl
jle
gs
mov
add
pop
sub
and
add
add
loope
sub
add
call
add
xor
add
add
xchg
or
iret
lret
test
leave
pushf
ret
clc
stc
test
clc
mov
adc
add
icebp
lcall
push
in
fs
incl
jecxz
dec
nop
sti
test
xchg
scas
mov
add
or
mov
sub
test
clc
hlt
stos
dec
cmp
adc
add
jmp
clc
fnsave
dec
iret
xchg
sub
mov
data16
std
mov
ficoml
add
dec
data16
or
add
aam
xabort
add
xor
add
clc
mov
clc
sub
add
out
mov
add
push
je
clc
jge
mov
imul
or
lods
mov
add
in
pop
clc
movsb
clc
lcall
add
add
inc
add
cli
aam
pop
mov
imul
cmp
aam
pop
lock
test
xor
add
cs
clc
insl
pop
outsl
test
add
aad
add
mov
lea
in
xor
add
add
aaa
cmp
pop
loope
mov
clc
out
cmp
aaa
fists
add
add
fcoms
xlat
jg
mov
imul
xchg
int3
fs
jp
xchg
js
mov
add
push
out
cmp
add
clc
mov
es
push
test
popf
in
or
outsb
push
push
add
adc
add
xchg
jmp
add
mov
push
clc
addr16
push
push
add
sbb
sbb
clc
xor
enter
clc
pop
sbb
clc
jecxz
inc
add
das
in
mov
sbb
add
cmp
clc
dec
inc
add
stc
and
add
cltd
cmp
cmp
clc
cmpsb
clc
clc
cmp
repnz
xlat
dec
mov
cmp
add
add
outsl
mov
clc
mov
fstl
add
clc
lods
or
mov
adc
add
mov
push
sub
clc
sahf
or
out
bound
add
add
sar
mov
pop
jg
mov
out
fwait
mov
add
jmp
jnp
das
push
clc
cmp
or
adc
out
fildll
das
out
push
es
xchg
repnz
sahf
inc
add
imul
scas
fs
push
add
xor
add
add
cmp
clc
jbe
into
dec
fsubs
clc
ret
cld
add
add
mov
clc
sti
lock
fwait
leave
push
push
arpl
add
add
dec
pop
insl
jp
aaa
xor
jl
lea
add
mov
loope
fwait
loop
int
clc
mov
sar
mov
clc
mov
clc
mov
xbegin
cmp
clc
mov
add
das
jl
cmp
clc
test
call
loop
and
add
aam
cmp
add
and
add
mov
inc
clc
clc
pusha
add
popf
mov
insb
shlb
fldt
sbb
lea
sbb
clc
jb
add
fdivs
add
outsb
lods
into
aam
lret
jp,pn
adc
add
clc
lods
cmp
xchg
std
push
add
inc
add
je
ja
ret
clc
xchg
mov
sar
clc
mov
or
clc
movsl
clc
adc
in
or
clc
out
cltd
cmp
add
cltd
jnp
jns
dec
daa
clc
je
add
mov
mov
add
dec
xor
add
clc
imul
jecxz
inc
clc
mov
pushf
xchg
lock
clc
outsl
fbld
clc
pop
lahf
lods
fcompl
inc
add
xchg
xchg
cmp
iret
mov
add
clc
shll
add
inc
clc
xabort
add
push
and
add
aaa
pop
mull
clc
fldcw
add
nop
lea
add
xchg
clc
ds
add
sub
movsl
clc
inc
add
dec
sahf
sub
cmp
cs
idivl
incb
jecxz
ret
push
dec
xor
add
cmp
clc
and
scas
aam
clc
popf
dec
mov
adc
add
je
clc
flds
clc
loope
sub
add
add
jbe
pop
jns
clc
push
clc
dec
jae
add
addr16
and
add
or
pop
inc
add
pop
adc
add
pop
fnstcw
stos
outsb
jmp
clc
cli
jns
enter
test
pop
fcmovu
xchg
and
mov
cmp
clc
dec
push
inc
clc
daa
clc
add
add
clc
xchg
cmpsb
clc
xchg
push
clc
xchg
neg
arpl
add
mov
jo
add
clc
loopne
dec
aad
dec
mov
xor
add
das
test
add
add
jo
add
clc
lret
ljmp
clc
cli
jns
clc
mov
add
add
popf
jno
add
clc
loopne
jne
add
sub
add
sbb
pop
sbb
lret
clc
add
cmp
popa
add
or
repz
out
jle
add
xabort
clc
jnp
and
add
shll
inc
clc
fwait
sbb
mov
add
out
cs
pop
sub
adc
add
out
mov
clc
add
add
inc
add
std
lret
sub
shlb
add
adc
add
rcll
add
mov
clc
push
clc
add
add
sbb
pop
inc
clc
and
call
xchg
mov
movsb
clc
iret
out
mov
clc
pop
push
add
data16
xor
push
add
dec
hlt
or
mov
aaa
sti
mov
ret
clc
mov
xchg
mov
enter
jp
sbb
clc
jle
sub
inc
clc
pop
adc
add
clc
xchg
daa
clc
gs
inc
clc
faddp
clc
enter
pushf
and
add
add
inc
add
in
dec
jns
fs
inc
add
add
add
add
add
add
mov
add
clc
fucom
clc
ret
clc
ja
add
jnp
adc
add
das
xor
add
inc
add
jnp
push
lret
das
rcr
mov
mov
push
nop
push
je
insl
adc
pop
pop
std
cmp
xchg
add
add
add
jbe
test
add
out
stos
in
xchg
xbegin
add
mov
aam
xor
add
add
int
clc
rcrb
repnz
rolb
add
adc
sbb
jmp
addr16
xor
add
clc
sbb
mov
add
clc
ss
and
add
out
mov
clc
sub
mov
add
sbb
jmp
clc
arpl
add
in
add
jp
pop
sbb
outsb
es
mov
out
push
jns
repz
add
adc
add
popf
mov
fwait
mov
add
add
in
popf
pop
adc
add
xabort
add
xlat
fbstp
inc
clc
imul
add
add
clc
cmp
mov
xor
dec
mul
clc
inc
clc
outsl
pop
sbb
add
add
sub
add
data16
sahf
leave
icebp
cmp
add
fwait
sub
pop
arpl
add
add
mov
clc
lods
cli
ret
or
loop
push
clc
fildl
lret
in
ficomps
je
clc
mov
popf
repnz
mov
add
sub
clc
mov
jle
push
clc
mov
pop
pop
sbb
setno
clc
sub
loope
pop
jge
mov
jbe
mov
clc
pop
inc
add
negb
int3
out
mov
add
add
cmp
add
lea
push
add
lahf
je
sub
inc
add
inc
clc
clc
cwtl
add
mov
add
pop
out
es
out
dec
pop
jbe
test
pop
push
add
adc
pushf
sub
mov
pop
out
mov
into
cmp
je
sub
pop
sbb
sbb
add
bound
add
or
clc
leave
sbb
add
dec
ss
clc
das
clc
xor
xor
add
cmp
pop
pop
add
repz
cltd
adc
add
stos
adc
add
add
add
add
lahf
gs
or
jno
add
das
pop
cmp
xchg
fsubr
jne
shlb
add
clc
push
dec
gs
cmp
push
std
sub
inc
add
jp
fld
clc
cmp
add
sar
push
inc
clc
inc
add
pop
call
push
add
cld
mov
clc
xlat
fs
test
add
add
jle
stos
out
lods
mov
mov
xbegin
clc
cmp
jg
clc
inc
add
leave
cmp
cmc
icebp
sbb
clc
and
push
jl
sub
sub
clc
fdivr
out
popf
icebp
jae
add
sbb
in
pop
push
xor
inc
add
shlb
cmp
clc
in
mov
jl
jbe
clc
sub
add
or
and
add
add
add
add
clc
es
sbb
scas
dec
dec
adc
add
jl
push
clc
in
xlat
frstor
fisubrs
pop
pop
popf
jae
add
add
add
outsb
test
addr16
xchg
shrl
lods
adc
add
sahf
ja
clc
insl
mov
push
inc
add
pop
clc
cmp
jmp
add
int3
mov
sub
add
jo
add
popa
add
lcall
jmp
mov
in
cmp
clc
loopne
rorb
or
scas
adc
push
addr16
sbb
add
add
lcall
aaa
and
add
loopne
add
repz
movsl
clc
lret
xchg
and
nop
test
adc
add
sar
test
je
mov
sub
xor
add
aam
add
imul
or
pop
shll
clc
inc
clc
pushl
clc
and
add
stos
cltd
mov
mov
pop
mov
add
add
xchg
cmp
data16
push
add
push
inc
add
or
cmp
std
cld
add
add
push
add
fdivs
pop
movsb
clc
sub
push
add
push
and
popf
mov
add
cmp
add
nop
scas
js
add
jecxz
add
add
rol
clc
push
mov
push
add
jle
sub
clc
mov
cmp
popf
outsb
add
add
add
mov
inc
add
sub
clc
in
xor
add
pop
and
add
clc
cmp
clc
inc
clc
mov
add
add
clc
shrb
fs
cs
clc
dec
lods
icebp
xchg
popf
pop
rcrb
adc
add
jecxz
ds
add
mov
fiadds
jmp
and
add
add
cwtl
aad
clc
cmp
push
add
inc
add
inc
add
data16
push
add
pusha
add
jae
add
xchg
jbe
jg
int
add
pop
sar
add
cmp
icebp
idivb
clc
sub
sar
cmp
dec
mov
cmc
int
lock
inc
add
jns
add
xchg
cmp
clc
scas
sub
add
mov
xchg
sub
clc
push
xchg
and
add
scas
fbstp
xbegin
add
inc
clc
xchg
icebp
push
out
xor
inc
clc
test
out
fstps
add
rorb
test
imul
add
imul
add
jb
add
imul
clc
clc
stc
cmp
sub
clc
imul
mov
add
add
pusha
add
add
add
jb
add
add
sar
cmp
movsl
clc
pop
clc
mov
add
add
movsb
clc
std
inc
clc
addr16
popf
daa
clc
mov
cmp
add
adc
add
jl
clc
xabort
sub
add
cwtl
int3
sub
clc
inc
clc
jo
add
jae
add
add
sbb
add
scas
fisttpll
dec
jmp
or
clc
in
mov
stc
clc
mov
add
nop
and
and
add
add
pop
add
sbb
aam
add
xor
add
jmp
bound
add
movsb
clc
icebp
test
leave
sti
sahf
dec
cmp
jge
mov
clc
dec
cmp
adc
add
movsb
clc
lods
movsl
clc
mov
jp
clc
sub
clc
sub
clc
inc
clc
mov
je
addr16
imul
stc
fildll
mov
add
in
jle
hlt
or
clc
cmp
clc
ret
mov
clc
int
clc
push
add
add
add
jle
xchg
sub
add
and
add
clc
xor
add
jnp
sbb
xchg
inc
clc
mov
ja
daa
clc
inc
add
pop
add
add
sbb
add
push
clc
lock
dec
test
jmp
arpl
add
sub
data16
inc
clc
mov
cwtl
cmp
clc
jo
add
add
lret
mov
roll
add
xchg
in
inc
clc
adc
add
adc
add
clc
lahf
sub
cmp
add
xor
int
mov
and
add
movsb
clc
movsb
clc
fnstenv
mov
cltd
mov
clc
push
pusha
add
pop
fsts
fdivp
lea
out
fcmovbe
scas
sbb
jg
in
add
fmuls
jno
add
dec
jne
clc
cld
popf
cmc
mov
inc
add
scas
out
xchg
xabort
and
add
add
mov
fs
lcall
imul
push
clc
mov
add
ljmp
stos
xchg
pop
or
add
jmp
add
fsub
clc
xbegin
sar
clc
xor
js
clc
pusha
add
decl
jo
add
inc
clc
fdivrl
lods
mov
cmpsl
clc
loope
xor
add
das
or
clc
cmpsl
clc
sub
inc
add
and
add
add
sbb
add
push
add
cltd
test
fmuls
add
inc
clc
je
lods
rol
clc
xchg
mov
out
xchg
mov
add
jle
add
pop
sti
adc
add
inc
clc
es
pop
clc
aas
fstl
mov
clc
pop
fnstcw
cmp
jno
add
sti
popf
pop
ret
clc
aad
add
push
stos
push
add
stc
adc
add
push
dec
jmp
and
add
lock
add
clc
nop
push
add
dec
test
push
ret
clc
in
dec
cwtl
arpl
add
ficoml
leave
ret
clc
in
stc
cmp
ret
repnz
mov
pop
clc
fidivl
add
insb
mov
movq
push
jnp
mov
or
clc
clc
lods
jmp
and
add
add
add
add
repz
into
insb
test
ja
outsb
cmp
clc
stos
fdivl
add
lret
or
clc
test
clc
add
add
cmp
dec
cmc
ficomps
shlb
fstps
aad
xchg
add
sbb
shll
add
ljmp
add
add
loopne
insl
aam
mov
push
add
add
add
je
jns
jo
add
clc
dec
clc
repnz
mov
adc
and
add
mov
sub
add
xabort
cwtl
loope
fbld
clc
add
add
clc
bound
add
clc
bound
add
stos
sub
sbb
push
imul
clc
inc
add
mov
cmp
cmp
push
sub
int3
out
rcll
add
loopne
xabort
ljmp
adc
add
clc
cmp
popa
add
sbb
xchg
xchg
loop
xchg
outsl
inc
clc
lods
mov
clc
mov
push
add
dec
outsl
insl
sbb
add
mov
mov
add
movsl
clc
cld
push
lock
or
mov
add
xchg
jbe
cwtl
mov
add
icebp
pop
leave
stos
cmp
dec
sub
push
add
pop
loop
push
ret
clc
not
test
clc
jno
add
dec
pop
xor
lahf
jae
add
fistps
mov
fdiv
ss
leave
stc
push
cmp
add
dec
aam
mov
clc
sahf
xlat
cs
stc
mov
enter
clc
mov
sahf
add
add
push
mov
inc
clc
imul
enter
add
pop
fildl
insl
or
add
jnp
clc
test
mov
or
add
clc
sbb
fidivl
jns
scas
xor
ljmp
sti
xchg
mov
gs
in
popf
ret
clc
adc
daa
clc
stos
in
dec
in
aaa
xchg
rcl
adc
clc
cmp
or
clc
xchg
pop
idiv
sar
xchg
inc
clc
lcall
push
add
movsl
clc
out
call
fistpll
or
add
dec
push
xchg
and
adc
imul
call
add
xbegin
inc
add
jle
jb
add
cli
adc
dec
enter
add
add
clc
mov
ret
shlb
clc
cmp
lret
mov
and
jnp
clc
pushf
test
sub
insb
jae
add
add
push
add
add
add
fistpll
repz
add
xlat
jmp
push
add
mov
add
xchg
cmp
add
dec
fwait
mov
xabort
adc
add
xor
mov
xchg
push
add
pop
mov
cmp
add
push
ss
in
dec
and
jmp
clc
inc
add
das
test
cltd
mov
push
or
mov
mov
and
int3
in
xchg
movsl
clc
pop
cmp
sbb
add
add
jecxz
jp
add
je
push
add
mov
iret
xchg
js
mov
lods
jl
clc
jle
fcmovbe
mov
add
in
pop
cmp
push
aas
leave
scas
iret
dec
test
add
xor
add
add
add
dec
mov
in
dec
jp
test
fs
je
imul
add
adc
add
daa
clc
es
iret
and
xor
xor
shll
add
dec
cmc
mov
add
dec
ds
lcall
cld
inc
add
ljmp
inc
add
mov
in
fcompl
leave
mov
ficomps
xlat
pusha
add
imulb
pop
mov
and
add
add
fimuls
inc
clc
mov
fisttpll
clc
push
add
insb
push
add
out
inc
clc
mov
cli
xchg
cmp
clc
std
pusha
add
loope
ds
pop
mul
clc
cli
vmwrite
add
pop
dec
cmp
add
dec
push
add
fidivrl
int3
mov
sbb
leave
sar
aam
clc
lcall
sbb
outsl
pushf
sar
pusha
add
popa
add
sub
add
xor
add
mov
add
pop
aaa
pushf
test
clc
imul
add
mov
add
sbb
inc
clc
jb
add
fstl
add
insb
or
lea
xchg
mov
loop
cmp
clc
adc
add
clc
lret
push
es
mov
mov
jbe
clc
push
leave
or
clc
pop
jns
clc
mov
cld
out
sbb
ret
popl
xchg
or
cmp
into
adc
add
dec
notl
add
shlb
imull
clc
insl
mov
clc
aaa
xor
add
clc
icebp
popf
sub
inc
clc
sbb
sub
add
add
pop
cmp
pop
clc
inc
add
push
add
and
add
test
mov
fcompl
gs
jmp
cmp
xchg
mov
clc
scas
fildll
jae
add
fs
push
add
cmp
xlat
push
mov
ljmp
mov
add
fdivrs
pop
pusha
add
dec
test
cmp
add
add
and
add
sbb
inc
clc
outsb
dec
mov
pop
inc
add
jp
jo
add
clc
or
add
mov
arpl
add
add
mov
clc
imul
add
cmp
sbb
add
add
xchg
outsl
sub
scas
and
add
xchg
sar
push
add
int3
jge
add
add
add
jns
clc
test
pop
pop
fcoms
add
enter
aas
mov
sbb
pop
stos
cs
int
shll
add
xchg
jo
add
pop
daa
clc
testb
add
pop
xchg
scas
push
cmpsb
clc
cmp
clc
sbb
out
sbb
pusha
add
dec
jmp
enter
sub
clc
or
lcall
jbe
clc
popa
add
aaa
mov
xchg
push
es
mov
scas
imul
rolb
add
clc
jnp
add
mov
clc
ds
add
mov
clc
push
push
fnstcw
jmp
mov
xchg
push
add
mov
imul
add
add
add
dec
cs
clc
cwtl
fidivs
add
leave
testl
mov
sub
fmul
cltd
pop
adc
add
jne
dec
dec
xchg
xor
add
clc
neg
mov
clc
push
add
leave
rcrb
pop
dec
in
mov
fldt
mov
dec
xor
add
loopne
lock
inc
clc
repz
add
pop
pop
cwtl
xchg
sub
push
clc
jae
add
mov
clc
and
add
in
push
mov
add
clc
es
lods
imul
xlat
mov
mov
clc
fdivrs
jnp
fstpl
add
cmc
cmp
mov
clc
decb
clc
or
clc
push
aaa
sbb
dec
dec
mov
clc
dec
cmp
cld
mov
data16
sbb
add
mov
in
or
clc
fwait
das
fisubl
aaa
xor
add
clc
fwait
and
add
cmp
lret
cmp
int3
mov
pop
loope
adc
add
xchg
jmp
add
sub
sub
outsb
xbegin
clc
fisttpl
add
adc
add
push
popf
sbb
pop
aas
mov
add
sbb
std
mov
or
nop
cmp
jecxz
jne
jmp
clc
aaa
and
add
mov
repz
out
pop
nop
arpl
add
add
cmp
enter
sbb
sbb
pop
dec
or
or
repz
cmp
fisttpl
insl
ss
daa
clc
rcrl
add
add
cmp
or
xbegin
xchg
es
sar
clc
cmp
clc
aam
fistpl
and
add
clc
push
pop
out
push
dec
xchg
mov
sub
inc
add
lods
inc
add
cmp
cmp
add
cmp
clc
cmp
ljmp
clc
xchg
lea
clc
dec
je
clc
out
sbb
scas
loopne
lods
in
nop
lock
clc
aaa
movsb
clc
jbe
clc
in
imul
jne
sbb
clc
cmp
sub
sub
repnz
cmp
mov
clc
stos
call
xchg
adc
add
add
mov
add
hlt
movsb
clc
or
int
add
jecxz
push
scas
sub
push
add
pop
add
cmp
jmp
clc
xbegin
aaa
sar
fadds
add
push
dec
int
pop
nop
push
clc
faddl
add
clc
add
add
push
add
xor
add
int3
jge
ret
clc
xchg
fwait
inc
add
jae
add
fnstcw
in
xchg
vmaxps
jo
add
pop
cmp
clc
stc
dec
pop
clc
addr16
imull
cmp
clc
mulb
add
sar
ljmp
pop
xchg
mov
and
add
ljmp
cmp
clc
in
sar
clc
mulb
add
stc
pop
clc
negb
clc
mov
test
xchg
aas
imul
and
add
add
je
clc
pop
mov
add
add
adc
add
add
mov
in
mov
ror
xor
add
clc
gs
gs
sti
out
lea
or
add
or
add
push
add
mov
cwtl
add
add
dec
dec
xchg
push
add
xchg
mov
clc
dec
stos
cmp
push
out
mov
loope
mov
xchg
repz
push
call
popa
add
xchg
nop
dec
ret
clc
adc
add
add
add
call
test
adc
add
in
repz
sahf
jg
flds
clc
movsb
clc
std
lods
mov
ss
xchg
or
loope
in
in
jg
repz
fnstsw
addr16
cmp
dec
roll
clc
xchg
push
add
cmp
gs
or
sub
inc
clc
js
vmovups
add
aad
clc
repz
inc
add
dec
aad
cli
pop
cs
clc
fstl
push
inc
clc
cltd
add
add
xlat
clc
data16
in
test
mov
test
add
popf
iret
shrb
out
testb
js
ja
dec
cmp
xchg
push
add
mov
cmp
push
add
jmp
add
inc
clc
and
shlb
add
inc
add
cmpsl
clc
je
movsl
clc
xchg
cltd
xchg
arpl
add
cmp
mov
pop
jbe
clc
nop
mov
insl
outsb
mov
scas
in
test
fwait
mov
clc
push
clc
into
in
inc
add
flds
add
xor
add
sti
jae
add
cmp
fsubrl
add
dec
fst
jae
add
add
inc
add
xor
dec
adc
add
add
add
xor
add
in
mov
push
clc
out
cmp
jp
xchg
push
add
xabort
clc
loop
jle
clc
cmpsb
clc
and
stc
cmp
mov
inc
clc
fiaddl
add
mov
rclb
test
in
mov
xlat
jo
add
clc
fwait
das
fimuls
adc
add
mov
outsb
in
push
clc
nop
into
xor
add
out
lods
cs
inc
clc
mov
add
add
and
add
add
bound
add
add
xor
add
add
xor
add
add
clc
fsub
clc
pop
push
dec
mov
subps
xchg
mov
test
add
cmp
imul
sar
mov
mov
clc
hlt
jg
cmp
mov
clc
sahf
inc
clc
push
add
pop
je
add
xchg
xor
add
ss
cmp
add
lcall
lods
mov
add
arpl
add
mov
jns
add
mov
pop
clc
sub
inc
clc
adc
add
bound
add
mov
add
cmp
add
mov
clc
mov
nop
jmp
adc
sti
xchg
lret
push
in
scas
mov
movlhps
scas
dec
inc
add
and
sbb
imul
jg
movsb
clc
inc
clc
xchg
fs
push
insl
or
mov
cmp
stc
xchg
push
add
push
add
sbb
xchg
mov
clc
jbe
clc
clc
cmp
dec
ss
adc
add
cmc
btr
add
test
rclb
shrb
fwait
in
notl
add
jae
add
clc
enter
pop
clc
in
xabort
arpl
add
add
mov
data16
mov
or
in
mov
jne
inc
clc
sarl
add
mov
add
add
clc
cmp
add
movsb
clc
dec
sar
xchg
idiv
mov
clc
push
imul
clc
xor
add
divb
add
mov
aad
cmc
add
add
clc
outsb
cmc
test
push
clc
add
add
add
lea
mov
and
push
cli
mov
add
push
pop
ficoms
cmp
jmp
das
xor
clc
push
in
scas
mov
push
faddl
shl
lods
popa
add
repnz
pop
clc
push
ja
repz
pop
clc
and
add
popa
add
cltd
mov
add
lods
push
mov
mov
add
add
cmp
clc
shll
jns
clc
push
jp
aaa
daa
clc
repnz
clc
mov
add
sar
scas
push
out
aad
add
xchg
lcall
mov
xchg
ret
fst
lods
adc
shrb
lods
cld
notl
add
imul
mov
nop
jmp
add
pop
sbb
mov
add
jmp
xchg
std
ret
cli
cmpsl
clc
push
idivl
dec
nop
push
add
jo
add
push
pusha
add
xchg
rorb
sar
mov
test
add
lret
sub
decl
jmp
in
movhps
cmc
jmp
ss
jmp
add
jnp
outsb
std
divb
bound
add
loop
mov
add
xor
add
xlat
add
jp
test
push
add
iret
sbb
pop
fmull
clc
data16
and
add
add
add
mov
clc
bound
add
ljmp
or
cltd
movsb
jnp
xor
mov
nop
jmp
ret
mov
inc
clc
fsub
clc
fldenv
test
push
mov
cwtl
adc
sbb
add
or
fimuls
clc
fimuls
add
insb
add
add
fwait
push
clc
clc
ret
clc
pop
lods
ret
clc
pushl
rclb
add
adc
mov
add
inc
clc
sar
clc
or
clc
int
push
imul
mov
ja
jb
add
add
mov
clc
cmp
add
and
loope
aad
mov
ret
clc
sub
mov
add
negl
inc
clc
and
add
fldt
mov
nop
jmp
cmp
push
hlt
xchg
ss
std
push
add
jo
add
clc
out
in
xbegin
or
clc
and
add
add
cwtl
cs
fmuls
fsubrs
clc
push
popa
nop
jmp
mov
adc
clc
mov
mull
dec
loop
daa
clc
dec
jns
in
imul
xor
rcll
add
xchg
jmp
fstl
clc
lret
add
mov
fdivrs
add
lods
add
in
jnp
push
jmp
adc
in
mov
test
mov
push
add
hlt
aad
xor
add
fs
mov
clc
nop
aaa
lret
add
add
cmp
jo
add
add
aam
mov
idivb
jle
add
add
push
add
leave
dec
mov
lock
add
jg
add
cld
nop
stos
or
cld
and
add
clc
inc
clc
mov
insb
push
xchg
call
mov
add
jmp
add
xor
add
xor
clc
mov
mov
or
cmp
jns
xlat
fisubl
add
xor
jle
mov
and
sub
ret
or
adc
add
push
cmp
nop
jmp
mov
xor
daa
clc
mov
add
nop
jmp
mov
add
jae
add
clc
sbb
out
cmc
negb
add
and
add
clc
xbegin
add
in
and
add
inc
clc
cmp
insb
fnstsw
fwait
and
dec
fildl
stc
inc
add
cld
xchg
clc
gs
mov
pop
mov
dec
test
pop
mov
clc
sahf
ret
push
xchg
in
add
add
imul
clc
push
add
sahf
cmpsl
clc
mov
clc
sar
out
pusha
add
dec
cmp
clc
mov
push
add
mov
gs
sbb
adc
add
add
je
popa
add
push
mov
nop
jmp
add
xor
adc
add
mov
addr16
push
cld
push
mov
xchg
ret
std
cmp
add
xor
add
add
loopne
add
add
lcall
sbb
iret
xlat
outsb
push
mov
clc
idivb
fwait
jge
sbb
push
mov
xchg
ret
adc
add
nop
jmp
add
mov
clc
loop
sub
scas
inc
clc
scas
dec
pop
mov
clc
loopne
ret
clc
mov
add
jle
xor
add
add
mov
push
add
nop
jmp
das
add
movsb
clc
ret
clc
push
add
sub
popa
add
mov
xor
add
arpl
add
bound
add
fwait
mov
add
add
mov
clc
aam
adc
push
clc
or
add
xchg
and
add
mov
loopne
cmp
inc
clc
in
daa
clc
dec
mov
clc
sub
jne
nop
jmp
stos
add
pop
sub
cmp
cmpsb
clc
mov
add
xchg
cmp
add
clc
ja
mov
clc
divb
add
jo
add
clc
aaa
lock
add
or
add
pushf
stos
pushf
and
add
testb
inc
clc
jmp
add
js
nop
xchg
mov
add
lcall
nop
jmp
in
add
movsb
add
and
imul
push
clc
fnsave
aam
mov
push
mov
xchg
ret
invlpg
loope
xchg
jns
add
ljmp
cltd
cmp
xor
add
shr
idivb
cltd
testl
push
add
mov
pop
mov
in
insl
idivl
sbb
cmpsb
clc
dec
mov
fs
loopne
popf
sti
sahf
scas
out
push
push
clc
js
sar
lahf
imul
xlat
jle
dec
mov
cmpl
nop
jmp
jle
add
ret
nop
jmp
add
das
std
or
add
add
ret
or
add
nop
fldl
sti
xchg
es
sbb
test
jmp
mov
jbe
clc
sbb
or
clc
cmp
aas
inc
clc
inc
add
add
add
add
pusha
add
mov
clc
roll
add
in
and
add
pop
clc
ss
pop
mov
jl
lock
aam
push
push
push
mov
xchg
ret
cli
std
mov
xlat
add
add
clc
sub
add
out
shlb
add
arpl
add
mov
add
cmp
hlt
lods
mov
clc
mov
and
bound
add
add
in
shl
clc
mov
stos
push
sbb
dec
jo
add
sub
clc
es
or
inc
clc
lea
add
mov
add
clc
push
pop
clc
insl
cmp
int3
ficoms
add
or
add
sub
mov
iret
std
xor
add
test
data16
lahf
cltd
loopne
fstpt
add
push
jae
add
clc
dec
inc
clc
xor
add
clc
lahf
gs
xor
add
fwait
sbb
sbb
lahf
in
outsb
xlat
test
data16
cmp
inc
clc
mov
ljmp
jmp
add
das
pop
lods
mov
add
add
add
aad
dec
adc
ljmp
dec
into
fwait
mov
clc
lock
imul
clc
add
add
dec
adc
add
add
pop
scas
sub
clc
sar
clc
iret
sub
dec
sbb
cmc
insl
daa
clc
cmp
lea
pusha
add
jp
add
or
cmp
shr
jnp
out
call
sar
clc
pushf
scas
adc
add
dec
pop
adc
clc
cs
es
jg
inc
add
lock
clc
out
push
add
nop
jmp
in
in
stos
fnsave
clc
lods
and
add
push
add
pop
test
mov
clc
adc
inc
clc
dec
jmp
dec
not
xchg
iret
cmc
jbe
mov
push
fwait
mov
clc
out
hlt
jg
clc
gs
aad
or
test
pop
sub
xchg
mov
dec
ljmp
clc
xchg
cli
sbb
add
pop
cmc
sbb
enter
clc
fistl
add
clc
fld
clc
jle
ret
add
mov
mov
add
mov
mov
cmp
mov
add
std
test
pop
xor
add
pop
cmc
aam
add
xchg
inc
add
call
sbb
xor
add
sbb
enter
jns
mov
clc
movsl
clc
mov
pushl
rclb
or
xchg
ret
add
xchg
or
add
add
fnstsw
dec
add
add
add
jnp
in
jle
sub
clc
cli
scas
es
leave
outsl
push
pop
nop
jmp
mov
andb
mov
add
lcall
nop
jmp
daa
inc
mov
in
mov
add
pop
cmp
inc
add
aam
notl
add
push
cmp
out
cli
mov
mov
mov
bound
add
clc
ja
xbegin
dec
jmp
nop
jmp
or
je
pop
mov
mov
push
push
nop
jmp
add
bsf
mov
clc
cld
leave
adc
add
mov
clc
fnstsw
add
add
cld
jl
push
fs
push
clc
movsb
clc
loope
nop
and
add
sbb
nop
jmp
in
add
add
xor
es
decl
adc
add
lods
mov
cmp
add
lcall
clc
xchg
insl
repnz
add
repz
add
test
pop
clc
mov
pushf
cltd
push
xchg
inc
clc
push
js
add
fucom
add
inc
add
fwait
insb
lret
mov
lock
dec
push
mov
push
mov
xchg
ret
or
fnsave
jg
add
mov
cmpsl
clc
jne
add
fisttpl
clc
sub
add
cld
push
movsl
clc
xchg
adc
add
or
mov
fidivrl
sub
jns
rep
nop
jmp
add
pop
in
call
lods
xabort
adc
add
add
iret
or
repnz
lret
add
add
clc
adc
add
clc
xchg
mov
and
nop
jmp
lods
add
push
mov
loop
mov
and
add
add
dec
jns
dec
mov
clc
clc
or
cmp
inc
clc
rcrl
mov
add
cmp
cs
mov
add
hlt
pop
cmpsb
clc
jmp
into
int3
in
dec
pop
jecxz
xchg
mov
jb
add
and
add
clc
mov
lret
add
stos
arpl
add
lea
and
clc
pop
loopne
aas
sub
test
clc
loopne
mov
nop
jmp
add
add
movzwl
add
dec
push
add
sub
add
add
mov
add
add
shl
cmp
add
add
inc
clc
mov
jmp
jbe
outsb
lods
or
clc
mov
clc
dec
xlat
sahf
fwait
and
add
jmp
clc
fs
aas
rcll
loope
lcall
data16
mov
dec
sub
clc
xbegin
add
in
add
add
adc
clc
mov
add
mov
cmp
pop
add
adc
mov
add
stos
xor
add
cmp
add
push
and
add
mov
fdivl
nop
jmp
das
mov
xor
add
add
push
out
popf
push
iret
data16
repz
push
clc
and
add
jnp
add
pop
clc
sbb
mov
xchg
ret
cmp
xchg
fs
pslld
add
sar
add
jmp
scas
mov
lahf
sar
jns
mov
sbb
clc
sub
jnp
and
add
jmp
clc
jb
add
jmp
xor
xchg
subb
sbb
pop
lcall
cli
subb
in
cmp
clc
lods
into
lods
or
jle
in
call
add
push
add
xchg
addr16
inc
clc
push
add
rcll
clc
data16
mov
jmp
sti
mov
mov
add
cmp
add
add
push
mov
jg
pop
lret
adc
add
add
add
xor
add
popf
je
pop
pop
imul
push
add
popf
xchg
mov
jae
add
sar
lods
cltd
mov
pusha
add
pop
movsl
clc
jecxz
jmp
inc
add
aaa
test
idiv
lea
adc
add
mov
clc
xor
add
and
add
clc
mov
shll
daa
clc
sbb
das
pop
movsl
clc
fnstsw
sti
out
movsl
clc
sub
xbegin
add
call
sub
ret
cli
mov
cmp
jo
add
add
dec
aas
out
xchg
repz
inc
clc
add
add
clc
fdivr
add
add
jno
add
clc
add
add
clc
aam
or
add
mov
xchg
ret
mov
xchg
add
push
xor
jae
add
add
cmp
mov
nop
jmp
mov
adc
mov
clc
mov
add
dec
icebp
xor
add
clc
cli
xchg
repnz
add
add
cmc
push
clc
add
add
das
mov
add
lcall
das
sahf
pop
mov
sub
sub
clc
hlt
sar
out
cmp
add
int3
push
test
loop
xchg
cwtl
loope
mov
sbb
clc
cmp
mov
cmpsl
clc
sahf
cmp
clc
sahf
in
xor
mov
clc
push
sub
in
and
add
js
add
ss
cmp
clc
lcall
xor
add
clc
push
add
adc
add
mov
sub
push
jne
add
xbegin
and
add
xor
add
sub
add
aas
jbe
clc
dec
jg
clc
or
je
clc
inc
add
daa
clc
hlt
call
add
movsl
clc
ficompl
clc
mov
mov
xchg
ret
cmpsl
std
sub
inc
add
fistpl
xor
add
loop
outsl
sar
add
jae
add
mov
pop
mov
xchg
mov
nop
jmp
loop
mov
add
xor
add
js
mov
and
pusha
add
add
add
cwtl
in
xchg
inc
add
sub
dec
cltd
inc
clc
jb
add
outsl
lahf
js
adc
add
out
mov
aam
clc
jmp
clc
mov
clc
xor
add
out
out
jecxz
adc
add
cs
aas
fadds
clc
add
add
sbb
push
mov
nop
jmp
mov
daa
cli
unpcklps
add
xchg
cmp
add
sar
sub
add
lcall
mov
es
sub
cmp
mov
loope
mov
dec
adc
add
pusha
add
mov
push
add
test
mov
notb
push
es
cmc
clc
or
mov
push
jno
add
inc
add
lret
jo
add
cmpsb
clc
in
dec
mov
push
mov
add
xchg
cltd
mov
outsb
adc
add
scas
jns
add
mulb
add
sub
loop
test
dec
dec
mov
add
add
popf
cmp
clc
jle
add
inc
add
mov
aam
js
es
stc
jae
add
add
and
add
push
inc
clc
cmpsl
clc
cmpsl
clc
sbb
clc
adc
add
dec
xor
add
pop
mov
add
jmp
add
cmp
push
add
cmp
leave
mov
stos
lock
mov
add
add
add
xchg
mov
clc
in
xchg
ds
cltd
add
add
add
add
nop
jmp
in
ret
sbb
add
call
nop
jmp
das
add
push
loopne
cmp
mov
add
push
add
jmp
adc
add
je
adc
add
cmpsl
clc
xchg
push
xchg
nop
icebp
mov
pop
dec
lcall
cmp
add
sbb
xchg
lea
inc
clc
mov
xchg
loope
mov
add
add
add
mov
xor
mov
add
mov
int
lret
out
push
fisubl
clc
cmpsb
clc
cmpsb
clc
icebp
mov
push
mov
xchg
ret
or
adc
add
adc
add
clc
dec
xchg
lahf
adc
jge
mov
add
dec
ljmp
push
mov
xchg
ret
push
add
cld
dec
bnd
cltd
and
add
clc
fstps
push
mov
jmp
je
jnp
movsb
pop
jnp
clc
mov
dec
sahf
adc
add
clc
xor
add
adc
add
jge
push
mov
lret
clc
push
add
mov
clc
in
stos
dec
pextrw
lret
clc
mov
push
mov
push
add
cmp
js
pop
clc
es
xabort
sti
sbb
inc
and
jmp
movsb
mov
cmpsl
clc
cmp
clc
mov
mov
add
je
clc
jno
add
clc
outsb
xchg
cld
dec
or
push
clc
sbb
ja
add
scas
cmp
pop
js
mov
jno
add
add
std
es
cmp
out
scas
cs
pop
clc
dec
ds
push
adc
add
cld
sub
clc
pusha
add
movsl
clc
xchg
es
insl
test
fwait
cmp
test
in
mov
clc
ret
clc
add
add
aaa
adc
add
clc
adc
add
ficompl
add
or
mov
clc
rorb
add
push
filds
add
decb
scas
cmp
clc
inc
add
mov
add
lret
clc
cwtl
sar
add
cmp
fstpt
mov
or
insb
xchg
adc
movsl
clc
clc
adc
add
add
sbb
add
jmp
sti
cltd
add
add
ret
clc
xlat
rcrb
cmp
cmp
push
clc
mov
mov
out
lcall
clc
pop
ret
push
add
aaa
mov
sub
clc
test
xchg
daa
clc
sbb
add
das
out
or
add
mov
pop
ffreep
clc
rcl
nop
scas
dec
mov
clc
mov
fisubrs
aaa
and
popa
add
rclb
add
clc
xchg
cltd
xor
add
add
lea
cmp
mov
add
add
mov
clc
test
js
and
mov
outsb
dec
imul
lea
call
xchg
repz
clc
imul
clc
push
aam
pop
test
movsb
clc
out
push
add
arpl
add
js
clc
pop
insb
or
clc
and
add
xor
add
cwtl
push
add
sbb
push
add
bound
add
xor
add
mov
add
imul
or
je
nop
jmp
xchg
add
fwait
xchg
scas
fsubrs
clc
sbb
mov
mov
xchg
ret
add
add
mov
mov
clc
in
pop
xchg
xchg
mulb
cmpsb
clc
mov
dec
inc
nop
jmp
xor
daa
xor
pop
cs
mov
nop
jmp
setns
leave
mov
pop
push
insl
mov
cmpsb
clc
clc
jge
addr16
cmp
add
nop
jmp
cmpsl
das
or
clc
adc
add
in
jg
jns
clc
push
add
pop
inc
add
xor
mov
pop
mov
add
fdivrl
sub
in
int3
sar
call
clc
adc
add
jmp
adc
add
mov
add
ljmp
jno
add
loop
inc
add
ret
inc
clc
and
cmp
clc
push
add
add
add
fisubs
add
es
mov
xchg
jbe
fstps
leave
fdivrp
dec
mov
add
nop
jmp
xor
stos
mov
add
clc
loope
inc
clc
mov
test
push
clc
mov
lahf
dec
pop
scas
repnz
fs
sub
clc
popa
add
sbb
and
add
aas
scas
mov
je
nop
jmp
mov
push
shll
lret
test
lret
add
movswl
add
insl
sub
js
add
clc
lock
add
push
jmp
nop
jmp
mov
mov
cmpsl
clc
add
imul
jge
stc
inc
add
jecxz
clc
bound
add
js
add
testl
fwait
repz
or
add
repnz
out
cmp
add
test
fisubs
dec
test
add
fadd
clc
sub
jno
add
push
add
inc
add
lahf
pop
clc
jp
clc
inc
add
inc
add
lods
pop
mov
mov
mov
xchg
ret
das
fnstcw
inc
nop
jmp
in
xchg
add
add
cli
add
add
jne
inc
clc
arpl
add
clc
and
add
pop
lods
jmp
and
jbe
push
clc
and
add
xor
add
mov
add
movsl
clc
js
xor
add
or
add
lods
add
test
and
or
clc
sbb
shrl
addr16
xlat
cld
dec
mov
in
pop
pop
ret
clc
pop
insl
hlt
xchg
lcall
jecxz
adc
add
or
aam
xabort
aam
clc
mov
add
add
jb
add
out
dec
inc
add
aam
clc
lcall
or
xchg
xchg
push
add
out
push
add
pushf
xor
add
loop
out
inc
add
cwtl
xor
add
add
stc
sub
add
clc
out
lcall
xlat
mov
sbb
icebp
outsl
call
nop
jmp
pop
cmp
lea
add
mov
clc
sbb
clc
stos
cmp
add
clc
nop
and
add
add
add
mov
clc
movaps
clc
mov
clc
jns
jge
outsl
aad
xor
jns
cmp
xchg
jl
add
fs
cmp
jp
xor
add
loop
pop
fstps
or
es
pop
cli
cmp
ljmp
clc
push
or
jbe
cmp
insl
mov
jl
or
cmc
repz
add
add
push
mov
clc
mov
inc
add
leave
stos
out
push
add
mov
clc
jge
int
sbb
clc
shlb
add
clc
add
add
add
imul
jmp
outsb
pop
adc
inc
add
repnz
add
clc
lret
cmp
call
add
iret
call
and
add
iret
lods
xor
add
cmpsl
clc
ficoml
inc
add
popa
add
es
pop
clc
stc
dec
mov
add
add
xor
add
fs
and
add
mov
icebp
fs
iret
vsubps
add
ljmp
add
clc
sar
sbb
mov
je
xchg
out
xor
add
popf
test
sub
mov
decb
mov
xchg
mov
imul
imul
mov
add
adc
add
add
push
add
clc
pop
jno
add
adc
add
clc
int3
jl
add
arpl
add
adc
add
clc
xchg
mov
add
cmp
jecxz
pop
cld
xor
add
stos
add
add
arpl
add
xchg
dec
movsb
clc
lea
add
add
pop
stos
sbb
add
add
clc
mov
dec
or
add
jbe
aad
pop
xchg
push
push
push
mov
xchg
ret
movsb
lods
add
clc
add
add
mov
xchg
ds
clc
add
js
add
xor
add
clc
jae
add
decl
nop
jmp
inc
pop
xchg
add
jle
arpl
add
add
adc
add
in
pop
sbb
pop
pop
add
add
es
adc
add
push
xchg
es
ds
cmp
jne,pn
cmpsb
clc
lock
ds
call
add
xchg
mov
mov
xchg
mov
clc
cmp
clc
jno
add
add
cmp
sbb
mov
add
nop
jmp
cltd
jnp
mov
jo
add
pop
jbe
out
sub
dec
ds
push
mov
clc
xchg
into
out
xchg
rol
clc
iret
dec
cmp
clc
rcll
mov
jb
add
add
push
jmp
dec
pop
push
bound
add
add
clc
xchg
xchg
call
clc
sti
popa
add
pop
and
add
add
sbb
jo
add
sar
inc
clc
loop
add
add
add
jmp
mov
xchg
jbe
mov
cmp
jae
add
enter
clc
inc
add
adc
add
fdivrl
insl
je
movsb
clc
inc
add
inc
clc
je
in
stos
pusha
add
xor
add
out
aas
xor
dec
xor
incl
ljmp
add
jbe
roll
add
jle
inc
add
or
lods
cmp
data16
lret
insl
jae
add
jg
lea
nop
jmp
pop
mov
add
inc
add
or
or
jo
add
add
inc
clc
fdivr
mov
inc
clc
scas
xchg
mov
add
decb
and
clc
push
imul
clc
push
push
add
push
add
nop
jmp
or
mov
daa
add
add
add
je
xchg
mov
mov
xchg
ret
movsb
mov
cli
inc
add
sbb
jae
add
add
jbe
clc
xchg
in
ljmp
sti
sub
jo
add
ljmp
inc
add
mov
adc
add
pop
push
add
clc
ficomps
xlat
fstl
add
pop
jl
add
and
clc
dec
fs
mov
dec
cs
add
inc
clc
xchg
inc
clc
xabort
push
add
cs
hlt
xchg
dec
mov
cmp
mov
inc
clc
addr16
xor
add
xchg
sar
mov
out
xchg
pop
pusha
add
fcomps
xchg
push
add
pop
cmp
outsl
sar
bound
add
cmp
mov
test
fs
cmp
clc
mov
xchg
fwait
mov
clc
ljmp
scas
call
mov
xchg
ret
daa
add
xchg
arpl
add
mov
data16
out
jo
add
dec
jno
add
add
xor
add
push
add
insb
sar
xor
nop
jmp
cmp
add
shll
pop
mov
rcr
stc
je
push
xchg
icebp
es
imul
outsl
and
add
clc
xchg
push
pop
jo
add
cmpsb
clc
dec
xchg
insl
lret
xlat
clc
push
pop
add
add
xchg
fs
sub
pop
dec
int
mov
rcl
rolb
and
add
fstpl
clc
lock
fistpl
lods
hlt
xchg
cs
add
jmp
jmp
add
xor
add
add
mov
mov
and
add
mov
add
aaa
js
add
aam
inc
add
aad
mov
es
aas
movsl
clc
mov
clc
dec
pop
mov
adc
add
add
xchg
popl
clc
ds
fmuls
jne
clc
add
repnz
push
dec
arpl
add
add
test
add
mov
add
cmp
dec
cmp
jmp
add
add
add
fcompl
xchg
test
sbb
push
xchg
ja
hlt
push
lea
add
test
xor
add
clc
loop
addr16
mov
ss
mov
gs
dec
insl
mov
pop
adc
add
clc
pop
lret
jg
pushl
add
push
mov
xchg
ret
mov
xchg
jmp
lock
add
jbe
stc
test
sar
sbb
movsb
clc
cmp
xabort
jp
jg
add
lods
push
mov
nop
jmp
mov
cli
daa
xbegin
add
in
sub
push
ret
nop
jmp
das
mov
cmpsl
jbe
inc
clc
daa
clc
cmp
add
jle
mov
sub
and
add
in
lock
clc
test
test
inc
clc
pop
jbe
jl
mov
stos
adc
add
pushf
leave
ljmp
movsl
clc
jge
arpl
add
add
imul
lahf
cwtl
daa
clc
inc
clc
push
add
negl
dec
mov
dec
xchg
aaa
ja
mov
or
add
ret
add
mov
mov
inc
add
sub
data16
mov
idivb
and
add
sub
cmp
mov
add
in
mov
push
add
leave
inc
add
xor
add
add
push
add
in
cld
aas
call
cmp
aam
add
aas
hlt
dec
xor
add
mov
add
add
sub
mov
fnsave
test
mov
add
scas
inc
clc
es
xchg
int
dec
call
jmp
add
je
mov
adc
add
jecxz
and
add
mov
int3
cmp
add
lea
add
and
add
arpl
add
add
inc
add
jo
add
add
test
in
je
inc
clc
loop
sub
clc
push
mov
iret
outsl
add
xor
in
jns
jns
mov
add
scas
or
add
sub
add
dec
sub
arpl
add
hlt
out
loop
cmc
adc
add
sub
jge
clc
addr16
jle
mov
nop
jmp
stos
add
xlat
sub
fwait
sar
jnp
test
pop
in
push
cmp
push
mov
xchg
ret
mov
or
jmp
das
cmpsl
xchg
cmp
add
ret
push
push
mov
xchg
ret
add
daa
clc
mov
clc
icebp
pop
in
clc
mov
cli
or
push
add
push
mov
xchg
ret
jnp
mov
daa
clc
jns
cmp
xchg
push
cmp
add
nop
jmp
jbe
or
stos
mov
cmp
clc
pop
fisubs
push
clc
dec
and
clc
es
pop
mov
pop
clc
push
add
or
aad
pop
xor
add
xor
add
pop
xchg
das
insl
jmp
add
sbb
add
nop
jmp
jle
jbe
loop
lret
call
ds
es
push
nop
jmp
ret
fisttpll
add
daa
clc
dec
in
inc
clc
and
add
add
mov
add
pop
add
clc
insl
xbegin
clc
js
hlt
adc
add
pushf
sahf
repnz
add
inc
clc
gs
mov
add
add
add
push
nop
jmp
add
push
in
std
jnp
sbb
pop
clc
xor
test
nop
jmp
cmpsl
jnp
add
mov
xor
add
add
lret
sbb
inc
clc
icebp
cmp
add
add
clc
dec
mov
mov
add
add
mov
nop
jmp
std
add
clc
fnstenv
and
cltd
mov
aam
sbb
jmp
jnp
das
add
lods
stos
aad
addr16
sbb
clc
dec
addr16
test
push
inc
nop
jmp
add
add
lcall
or
nop
mov
dec
xchg
repz
add
iret
shrl
movsl
clc
pop
popf
push
aam
sub
pop
push
jmp
je
loop
mov
clc
mov
mov
nop
jmp
mov
jbe
push
add
fsincos
adc
add
clc
sbb
jno
add
loop
cli
fisttpll
mov
or
out
sarb
mov
adc
add
clc
xor
add
push
test
mov
mov
add
add
add
clc
inc
clc
cmpsl
clc
bound
add
push
add
clc
pop
or
clc
popa
add
sbb
stc
mov
clc
fsts
jo
add
clc
cmp
mov
adc
add
imul
jmp
ret
stos
das
ret
and
add
add
add
mov
mov
pop
push
clc
pop
adc
add
ret
xor
add
sub
enter
mov
jmp
clc
test
cmp
clc
or
test
pusha
add
add
add
xor
add
sbb
add
add
sub
lods
nop
jmp
xor
jnp
jle
es
xor
add
clc
sub
mov
nop
jmp
lods
add
aad
dec
inc
clc
nop
vandps
nop
jmp
adc
clc
negl
cmpsb
clc
push
add
das
mov
movsl
clc
clc
outsl
jns
jno
add
clc
leave
mov
add
repz
clc
add
add
cmp
clc
dec
movsl
clc
dec
pop
in
sbb
push
pop
leave
xbegin
cs
jo
add
cmc
jo
add
leave
arpl
add
fisubrl
icebp
sbb
test
push
lret
add
add
add
mov
bound
add
push
add
loopne
xchg
sbb
add
ja
cwtl
cltd
or
add
je
cmp
add
test
insb
or
aam
call
nop
jmp
in
mov
clc
dec
movsl
clc
push
add
mov
clc
xor
clc
mov
lock
addr16
push
add
add
pushf
mov
cmp
add
rclb
push
xchg
jl
addr16
out
sbb
loopne
inc
clc
jnp
std
mov
push
add
in
sbb
mov
clc
pop
cmp
add
jg
add
and
add
clc
or
clc
xor
clc
pusha
add
cmp
adc
add
mov
fs
sub
jge
add
in
cmp
jg
sub
clc
push
cltd
movsb
clc
aad
xor
add
xchg
add
add
pop
dec
mov
clc
fnsave
add
sbb
nop
jmp
add
std
add
clc
das
shrb
clc
dec
sub
outsl
xchg
mov
dec
lret
or
cmp
fldenv
add
mov
inc
nop
jmp
add
pop
std
pop
cli
cmp
xor
add
movsl
clc
dec
data16
hlt
sbb
cld
or
lock
clc
in
cltd
aad
add
push
mov
xchg
ret
aad
cmp
add
aam
imul
mov
nop
jmp
add
verw
mov
dec
or
cmp
clc
add
add
repnz
sbb
add
pop
clc
xchg
ficoml
gs
pop
and
into
sub
ljmp
leave
cli
int3
xchg
into
pop
and
add
push
pop
nop
jmp
xor
add
clc
sub
clc
jmp
clc
push
add
xchg
lcall
xchg
pusha
add
push
add
lret
xor
add
add
std
pop
test
adc
add
add
std
push
add
int3
cmp
adc
add
add
lret
push
jne
nop
jmp
mov
mov
loopne
xchg
jecxz
sahf
insb
cmp
scas
adc
add
ljmp
sub
mov
add
in
pop
test
xchg
js
clc
rdseed
jmp
clc
pop
clc
pop
test
xor
sar
clc
xlat
popf
add
add
add
add
add
xchg
xabort
push
imul
clc
mov
inc
add
jbe
sahf
imul
mov
int3
add
add
outsb
and
clc
push
adc
add
lcall
jbe
clc
push
pop
xor
add
cld
inc
add
dec
jo
add
clc
jb
add
pop
insl
push
add
js
push
pop
mov
clc
push
add
xchg
jl
mov
adc
add
add
int
out
sbb
nop
jmp
in
mov
je
clc
xchg
jnp
add
add
add
xchg
ss
clc
cwtl
dec
cli
into
push
add
stos
dec
js
mov
daa
clc
mov
add
xchg
jecxz
stos
mov
cmp
clc
cltd
adc
adc
add
pop
xor
add
icebp
fldl
clc
test
xor
pop
nop
jmp
cmp
push
jle
mov
clc
lahf
sub
add
leave
fcmovnb
clc
jp
clc
out
popf
cld
ds
clc
cld
pop
push
add
mov
clc
ds
add
push
clc
lahf
imul
negb
data16
scas
pushf
sar
std
cmp
or
add
clc
das
into
outsb
xor
add
add
add
add
dec
add
add
add
dec
mov
xchg
mov
outsl
das
push
add
inc
clc
sub
rcrb
icebp
xor
add
mov
mov
into
hlt
ss
clc
repz
clc
adc
xlat
dec
add
add
lcall
stc
hlt
je
mov
lods
mov
sub
add
lret
pusha
add
fiaddl
and
add
add
pop
cmp
push
mov
xchg
ret
cltd
add
mov
add
inc
add
inc
clc
aad
clc
push
repz
fadds
dec
lcall
mov
clc
mov
add
fidivrl
stos
and
sub
sbb
add
add
xor
idivl
clc
ds
lcall
xor
add
cmp
sub
daa
clc
xor
add
push
add
adc
movd
shl
clc
mov
fs
or
mov
add
and
add
sub
clc
movsl
clc
sbb
pop
xor
call
test
test
mov
cmp
clc
cmp
add
pop
mov
xor
add
fildll
lea
cwtl
jecxz
xchg
xlat
icebp
pusha
add
sub
clc
push
add
xchg
sahf
cmpsb
clc
adc
add
sahf
and
add
mov
add
mov
cmp
gs
cmp
push
push
jg
fidivrl
and
add
jns
pop
lock
add
clc
lahf
sbb
add
push
xor
popf
xor
inc
add
in
push
xlat
dec
notb
clc
out
ficomps
enter
add
testl
dec
push
stos
fs
test
icebp
mov
add
nop
jmp
je
in
mov
push
in
add
or
sar
mov
nop
jmp
add
adc
out
stc
hlt
pop
xor
add
xchg
sub
mov
clc
int
clc
sub
ljmp
clc
dec
test
push
mov
xchg
ret
in
pop
adc
iret
cmp
pop
js
add
popa
add
pop
jl
add
mov
clc
rorl
cmp
cmp
dec
xchg
sti
inc
add
sub
push
add
ret
clc
dec
and
add
mov
xchg
dec
nop
jmp
in
add
add
mov
in
sbb
jle
std
inc
jle
add
loopne
popf
lea
add
fs
idivl
add
adc
add
clc
popf
test
hlt
bound
add
add
mov
nop
jmp
movsb
das
or
rdmsr
add
xchg
mov
clc
xor
add
decl
sldt
adc
add
lods
push
inc
add
rclb
shll
add
imulb
add
xor
test
add
cmp
cmp
cmc
add
add
clc
or
add
push
aam
xabort
add
inc
add
repnz
mov
mov
clc
push
xlat
inc
clc
enter
jmp
mov
fnstenv
mov
push
jo
add
dec
xchg
fwait
xor
add
clc
lret
add
cmpsl
clc
inc
clc
mov
push
out
into
testb
in
cli
jecxz
lcall
sbb
jmp
add
add
mov
outsl
shrl
imul
aaa
loop
pop
clc
push
add
adc
add
lret
add
pop
lcall
add
int3
lea
mov
hlt
icebp
or
mov
aam
xor
add
clc
in
adc
add
clc
test
dec
in
movsb
clc
push
mov
popa
add
lea
clc
pusha
add
stos
jbe
xchg
rclb
pop
xor
inc
add
push
mov
xchg
ret
add
aas
cmp
dec
push
xlat
inc
add
mov
add
jo
add
jae
add
add
add
dec
mov
fsubl
clc
in
xchg
xor
add
mov
add
mov
xchg
push
int3
loopne
push
add
and
add
daa
clc
sti
pop
ret
clc
or
daa
clc
push
mov
add
xchg
cmc
jge
add
or
jns
add
cmp
clc
leave
jns
clc
fidivs
jno
add
lods
popa
add
data16
mov
add
add
add
mov
inc
clc
pop
sub
mov
clc
cs
inc
clc
insl
and
mov
js
mov
add
out
notl
clc
and
sub
fbld
leave
push
or
and
add
add
mov
lcall
jbe
nop
jmp
movsb
in
jle
cltd
add
out
popa
add
cmp
fnstcw
clc
pop
sbb
clc
das
push
add
jne
clc
movsl
clc
clc
fwait
dec
jl
mov
inc
clc
gs
jmp
pop
push
add
xor
dec
nop
jmp
cltd
pop
mov
adc
ljmp
jo
add
clc
and
dec
xor
add
push
je
nop
jmp
cltd
mov
and
add
add
cld
lods
into
adc
add
jnp
add
jle
sbb
js
clc
inc
add
iret
popa
add
sbb
push
push
mov
xchg
ret
jle
add
clc
push
aaa
inc
add
jmp
add
fwait
mov
clc
sub
add
mul
clc
int3
bound
add
add
outsl
jae
add
test
add
out
adc
add
clc
cmp
xor
add
add
test
test
int3
mov
clc
sbb
clc
gs
pop
addr16
in
fadd
clc
outsb
pop
clc
push
xor
add
add
jle
add
cmp
adc
add
xchg
nop
mov
leave
ja
add
sti
pop
xchg
mov
add
inc
clc
cmp
rolb
clc
rcll
add
dec
sbb
movsl
clc
lods
sahf
xchg
mov
sub
push
sub
nop
jmp
inc
std
xor
pop
xchg
mov
clc
mov
lret
dec
je
add
dec
xchg
cmpsl
clc
cmp
add
out
je
mov
add
mov
add
es
addr16
and
add
mov
movsl
clc
insl
imul
adc
add
push
fstpt
loopne
cmp
ja
add
out
mov
clc
popa
add
test
jnp
xchg
adc
add
ret
clc
in
punpckhwd
shr
cmp
loopne
xchg
sti
inc
clc
shll
add
sti
hlt
or
clc
pop
fistpl
testl
clc
jb
add
add
add
add
pop
add
clc
mov
dec
incl
mov
sub
ret
cmp
lea
add
insb
out
or
stos
xor
add
clc
mov
lods
dec
jo
add
add
mov
add
jp
or
add
add
clc
add
add
add
mov
and
clc
sub
cmp
clc
or
nop
jmp
jbe
add
cli
mov
adc
ds
aas
mov
lods
arpl
add
dec
loop
and
add
popa
add
stos
frstor
lea
popf
fcmovbe
scas
dec
pop
adc
sar
clc
add
add
jnp
clc
lret
clc
inc
add
jl
pop
and
out
mov
jp
clc
cmp
add
add
add
lahf
mov
popf
cld
cmp
fs
bound
add
clc
sbb
daa
clc
jecxz
sbb
mov
add
push
sbb
jmp
add
mov
ret
clc
mov
movsl
clc
jns
dec
lcall
push
and
add
aad
clc
ret
clc
sbb
fldcw
pop
xchg
sar
add
clc
cmp
add
mov
push
nop
jmp
add
add
cmpsl
add
das
inc
add
push
lret
aaa
xchg
gs
xchg
fwait
xbegin
add
ret
clc
dec
in
mov
pop
repz
add
push
jb
add
jle
imul
inc
add
cltd
pop
cmp
fiadds
inc
clc
sub
shl
mov
arpl
add
mov
fnstcw
ljmp
add
inc
clc
ss
daa
clc
leave
sub
add
fisttpll
add
mov
imul
add
imul
dec
xchg
int3
scas
jg
das
cmp
mov
xchg
pop
pop
xor
add
xabort
data16
outsb
jb
add
add
add
clc
xabort
popf
test
cld
pop
clc
loop
cmp
sub
add
clc
cltd
push
loope
pop
pop
mov
clc
leave
imul
xor
add
add
idivb
clc
xor
add
pop
std
xchg
sar
clc
pop
clc
xor
add
out
cwtl
dec
cmp
clc
or
psrad
push
push
add
cmp
out
xchg
dec
add
or
popa
nop
jmp
lods
push
stos
daa
add
cltd
ret
add
xor
add
sbb
pop
mov
and
stc
loope
add
fisubrl
clc
inc
clc
out
ret
clc
sub
clc
adc
add
add
mov
mov
add
mov
inc
clc
cmpsb
clc
pusha
add
ljmp
inc
add
lret
push
add
in
idiv
ret
clc
jle
clc
in
cmp
mull
clc
in
cmp
clc
sar
push
in
mov
add
movsb
clc
sub
js
cwtl
adc
add
add
psrad
dec
inc
clc
rolb
add
dec
jno
add
xor
add
add
mov
ret
clc
popf
mov
add
ret
clc
outsl
int3
push
sub
cmp
clc
sub
mov
clc
mov
jg
clc
adc
add
insb
mov
sub
clc
aam
loop
aad
pop
sahf
scas
push
add
inc
add
ret
clc
dec
pop
and
add
pop
fcompl
jns
loopne
enter
lret
out
out
mov
jp
cltd
jns
xchg
icebp
loope
jge
mov
clc
aad
js
dec
or
clc
pop
clc
cli
out
add
add
fistpl
xor
add
data16
jne
add
add
add
std
decl
pop
inc
cmp
mov
cvttps2pi
clc
push
add
mov
add
insb
inc
clc
inc
clc
xor
add
adc
add
add
add
add
clc
testl
clc
fmuls
jl
dec
sbb
insl
fimuls
inc
add
xchg
imul
add
js
fnstcw
jmp
add
daa
mov
lret
add
add
add
clc
pop
movsl
clc
push
add
ret
clc
test
xor
add
mov
pop
ljmp
inc
xor
nop
jmp
add
ret
repz
jnp
clc
add
inc
jp
nop
jmp
adc
add
jle
popa
add
sub
add
fucom
clc
xlat
jo
add
int
clc
cmp
lea
nop
jmp
std
add
dec
test
clc
imul
lock
clc
inc
clc
inc
add
ret
clc
pop
idivb
out
gs
lods
je
clc
jo
add
mov
pop
pop
clc
dec
and
add
cs
test
add
test
cmp
jnp
jmp
test
inc
add
cmp
add
bound
add
sbb
lcall
or
xor
in
je
stos
sub
insl
movsl
clc
inc
clc
frstor
mov
clc
sub
movsb
clc
xor
dec
bound
add
aaa
ljmp
imul
add
in
add
shl
jns
fistl
fnsave
addr16
cmp
add
call
clc
cmp
clc
mov
clc
scas
adc
add
xor
add
nop
jmp
adc
jbe
mov
sub
std
insl
jo
add
movsb
clc
movsb
clc
imul
pusha
add
xchg
dec
inc
nop
jmp
cmpsl
jnp
adcb
cmp
clc
push
mov
xabort
mov
add
pop
shrb
clc
ja
inc
add
aaa
pop
jecxz
lods
push
cmp
mov
add
push
mov
xchg
ret
add
aaa
cmp
pop
adc
add
lods
sbb
test
call
call
mov
nop
jmp
daa
das
pop
ret
cmpsl
xchg
xor
clc
data16
stos
adc
add
mov
add
sti
mov
jmp
mov
mov
clc
xbegin
repz
clc
cmp
incb
add
imul
add
out
stc
sar
cmp
int3
mov
cmp
clc
mov
or
add
dec
pop
aad
inc
add
out
add
add
add
dec
cwtl
pop
adc
clc
adc
add
add
pop
arpl
add
add
push
pop
pop
lock
scas
cmp
clc
cmc
xor
add
mov
movsl
clc
pop
clc
stos
dec
push
outsl
and
add
aam
lahf
mull
mov
mov
lcall
clc
imull
clc
xabort
clc
lods
popa
add
bswap
mov
add
add
in
int
es
lcall
stos
sar
or
sbb
add
fs
mov
clc
das
sar
stos
stos
rclb
mov
mov
add
add
sub
add
add
clc
mov
clc
xor
add
clc
push
add
sbb
cmpsl
clc
or
add
jg
add
add
xchg
or
add
sbb
test
in
call
add
jbe
clc
push
add
inc
clc
into
push
push
clc
test
jge
jmp
out
sbb
mov
add
mov
lahf
xor
clc
mov
in
int
add
push
add
rcll
fisubrl
add
add
stos
nop
jmp
paddsw
imul
std
loop
adc
add
pushf
jecxz
xchg
pop
adc
repz
sub
sub
push
popf
in
jmp
add
stos
xchg
cli
sar
adc
add
loopne
pop
xchg
push
add
dec
mov
pop
dec
adc
add
add
mov
lcall
and
add
pop
adc
out
or
stos
sub
testl
add
hlt
jne
notb
add
sar
ds
sub
xchg
in
loope
jnp
adc
add
pop
loop
lcall
clc
inc
clc
mov
fdivr
call
lods
aad
cmpsb
clc
test
mov
or
pushf
xchg
cmp
clc
xchg
sar
add
lcall
or
in
jno
add
scas
in
in
fsubrl
cmp
add
add
sub
push
pop
stos
sub
add
sti
std
pop
mov
xchg
movsb
clc
cmp
inc
add
mov
add
daa
lods
mov
inc
clc
popa
add
jae
add
es
shr
scas
add
jnp
js
test
sarb
arpl
add
lcall
scas
mov
pop
cli
adc
add
xchg
and
add
add
nop
jmp
add
pop
adc
dec
push
add
loopne
fcomi
jge
ret
clc
mov
add
jns
clc
jno
add
jmp
jnp
mov
je
add
arpl
add
cltd
inc
add
cmpsl
das
cmpsl
add
std
add
call
int3
push
ret
clc
fstps
inc
clc
push
push
add
add
loop
xchg
cmp
cmc
xchg
pop
pop
mov
clc
push
add
pop
or
mov
clc
fwait
cmp
into
mov
clc
loop
daa
clc
xor
mov
add
call
add
push
and
pop
pusha
add
fcomps
pop
jno
add
add
xabort
add
femms
cld
ja
clc
push
add
adc
add
int3
and
add
loope
sub
mov
adc
add
or
hlt
mov
jns
cs
add
add
fninit
clc
fwait
adc
add
add
pop
sbb
loop
mov
push
xchg
inc
add
mov
daa
pushf
xchg
sub
cmp
fdivl
add
add
add
jne
clc
mov
add
jne
clc
in
lods
repnz
add
push
fisubl
xor
add
clc
dec
leave
pop
mov
stc
gs
in
jge
xor
add
clc
repz
clc
loope
jns
push
add
aaa
mov
jns
clc
popa
add
cmp
pop
lods
mov
and
add
and
add
add
inc
add
stos
ljmp
push
clc
fidivrs
mov
sub
nop
jmp
stos
add
xor
add
and
clc
jg
xchg
inc
add
jae
add
add
clc
sti
xor
add
mov
sub
jno
add
mov
clc
and
add
fldenv
add
mov
in
pop
scas
push
sub
jae
add
stos
xchg
bound
add
loopne
pusha
add
sbb
xor
add
clc
adc
add
xor
add
clc
test
inc
clc
dec
cmp
or
fbld
cmp
pushf
push
add
imul
and
add
packssdw
add
xchg
out
fistl
add
push
cld
in
pushf
mov
add
inc
clc
popf
jmp
stos
push
aaa
xchg
sub
daa
clc
or
add
add
add
pop
ret
clc
or
add
mov
imul
xor
add
loopne
jne
adc
jle
loop
stc
pop
xabort
push
push
mov
xchg
ret
fucomp
inc
cli
and
add
add
mov
clc
out
mov
lea
aaa
sbb
out
xchg
push
clc
jmp
out
push
mov
or
cmp
loopne
inc
clc
fldenv
int
mov
jmp
clc
test
jle
jp
adc
add
clc
cmp
push
mov
add
xchg
sar
pop
stos
and
jns
add
adc
clc
jnp
loopne
fdivrl
xabort
fnstenv
add
aaa
adc
imul
mov
rclb
add
sub
ja
ljmp
add
clc
push
lret
clc
inc
clc
xabort
sbb
inc
add
mov
cmp
pop
clc
repnz
cmp
inc
add
push
and
add
clc
jo
add
clc
sub
outsb
and
add
and
add
dec
and
add
enter
clc
or
mov
clc
push
add
cmp
sarb
nop
jmp
daa
mov
pop
xchg
cmp
mov
clc
pop
sbb
inc
add
inc
add
ljmp
mov
clc
pop
minps
fiaddl
add
cmp
sub
adc
add
add
inc
add
lods
ja
dec
lcall
nop
cmp
push
clc
scas
repnz
stc
enter
jmp
outsb
push
clc
std
movsl
clc
xchg
in
xor
add
pop
ret
leave
out
push
leave
xor
fsubrs
or
aad
clc
cmp
add
out
cli
add
jnp
pop
xor
add
cmp
add
es
out
mov
clc
out
pushf
and
add
add
xor
add
xchg
ret
fistpl
out
fwait
clc
cltd
mov
and
sbb
adc
insl
pop
movsb
clc
cmp
clc
testl
repz
inc
add
fidivrs
jle,pn
clc
dec
xabort
imul
scas
call
std
lods
xchg
jp
clc
sbb
clc
cmp
jge
inc
add
das
pop
cli
test
push
mov
jmp
mov
lods
dec
jp
pop
clc
dec
sarb
mov
mov
cmp
add
stos
clc
mov
test
mov
sar
cs
xchg
push
popa
add
dec
aam
clc
pop
loop
fxch
pop
loope
and
add
in
loope
jne
push
shrl
sub
clc
and
rclb
add
add
mov
cmp
icebp
mov
clc
dec
dec
imul
shl
clc
adc
add
cmp
aaa
jle
adc
pop
sti
jmp
add
sbb
add
sbb
add
push
add
insl
mov
pop
clc
ret
clc
dec
in
push
add
mov
cmpsb
clc
pushf
jns
or
push
add
mov
call
call
clc
gs
and
clc
repnz
clc
data16
in
cltd
adc
add
add
mov
mov
inc
add
or
jg
arpl
add
stc
push
std
lahf
into
sbb
outsl
add
cltd
mov
cmpb
sar
das
push
push
aad
mov
jne
lods
push
mov
xchg
ret
add
mov
clc
xchg
lcall
gs
lods
insb
xchg
sub
sub
mov
lcall
and
clc
add
add
clc
into
push
clc
aad
xchg
mov
add
ja
shlb
add
rclb
xchg
mov
mov
inc
clc
test
cmp
add
inc
clc
adc
leave
fsubl
clc
push
subl
push
mov
xchg
ret
pop
sbb
int3
test
jb
add
clc
sub
mov
nop
jmp
inc
subb
fldl
cmp
fistpl
in
and
add
dec
sub
xabort
clc
sar
mov
nop
jmp
ret
je
clc
loope
sahf
test
jo
add
add
idivb
mov
sub
add
mov
hlt
xor
add
dec
in
lock
add
movsl
clc
aaa
xor
add
push
jle
inc
add
push
xor
add
add
add
push
fiadds
add
mov
and
add
add
clc
lahf
cmp
adc
call
mov
add
jl
dec
mov
clc
fsts
push
mov
psubusb
clc
das
arpl
add
clc
loope
lods
sub
clc
arpl
add
add
fcoml
add
add
cmp
insb
mov
or
or
popf
dec
dec
and
pop
pop
inc
clc
sbb
rclb
add
das
inc
mov
or
add
jns
add
movsb
clc
out
mov
nop
jmp
mov
or
insl
sbb
mov
nop
jmp
mov
adc
sti
pusha
add
mov
pop
clc
test
push
pop
xor
add
clc
and
repz
add
cs
jne
jl
clc
push
jl
cmp
clc
bound
add
loop
fsubl
lods
adc
add
add
jbe
xor
push
add
gs
hlt
out
mov
jns
cmp
add
popa
add
fisttpll
add
xor
add
inc
clc
lods
adc
add
push
add
mov
clc
cmp
int
lret
jno
add
adc
clc
jp
clc
sbb
add
add
add
pop
and
enter
aas
leave
cmc
inc
clc
out
sub
cmp
mov
rcrl
cmp
fistpl
add
add
lret
stos
fwait
add
add
push
jle
clc
scas
loop
outsl
fs
mov
pop
cmp
nop
jmp
xor
add
xchg
ja
and
mov
add
nop
jmp
adc
mov
pop
aad
mov
adcb
mov
add
scas
cld
das
jp
clc
je
xchg
adc
add
clc
call
pop
pop
sbb
mov
xbegin
movsl
clc
imull
insb
leave
js,pt
inc
clc
mov
dec
mull
clc
xabort
xor
add
cmc
test
sbb
cmp
jp
gs
popa
add
mov
add
add
pop
clc
mov
lock
cmpsb
clc
bound
add
gs
js
add
in
cmp
or
and
add
add
fcmovnu
sbb
xor
add
decl
test
add
nop
jmp
std
aad
inc
add
sub
add
fistpl
dec
bound
add
add
inc
clc
hlt
cltd
sub
or
pusha
add
leave
inc
clc
inc
clc
clc
adc
add
adc
add
pop
negb
lret
popf
fstps
flds
clc
sub
sbb
fistl
push
es
nop
jmp
mov
mov
clc
jb
add
clc
popf
fdivl
insl
dec
adc
add
clc
daa
clc
popf
ja
push
add
dec
dec
push
mov
sbb
clc
cmp
add
clc
mov
xabort
add
pop
cmp
fstp
push
std
aas
es
pop
in
pusha
add
jns
clc
hlt
and
add
add
arpl
add
or
clc
dec
pop
mov
int3
mov
xor
nop
jmp
std
add
outsb
xchg
das
sti
inc
clc
popf
jo
add
dec
lods
mov
clc
dec
pop
icebp
jae
add
add
add
add
aaa
sar
add
lcall
and
add
fidivrs
clc
xchg
dec
scas
push
sbb
addr16
mov
int
add
je
cmpsl
xchg
lods
pop
jo
add
mov
pop
imul
outsb
iret
push
add
cmp
adc
xabort
inc
add
out
mov
jle
add
fsts
gs
sti
inc
add
inc
clc
sbb
in
lret
clc
lcall
pop
mov
clc
aam
out
inc
add
jb
add
add
fs
push
mov
das
push
add
sti
mov
xor
scas
cmp
data16
jmp
add
mov
cmpsb
clc
and
add
jbe
clc
mov
mov
insl
cmp
xor
mov
add
and
push
sub
clc
add
xchg
popf
es
sub
dec
arpl
add
xchg
out
rcrl
adc
add
add
xor
add
fisubrl
add
push
mov
xchg
ret
daa
adc
cmp
clc
fcmovnb
clc
sbb
mov
adc
jmp
adc
popa
add
xor
add
clc
and
cmp
clc
test
aam
outsb
sar
sahf
std
sub
clc
jl
mov
clc
in
cmp
clc
inc
clc
dec
fs
mov
add
dec
mov
jge
cmp
and
add
adc
add
push
jp
lods
inc
clc
cmp
clc
leave
cs
lar
add
push
add
add
cmp
stos
pop
pop
dec
and
add
add
pop
xchg
ror
adc
add
cmp
rcrb
jmp
nop
jmp
mov
add
or
out
rcll
add
xor
clc
pushf
clc
mov
aad
mov
clc
shrb
out
push
cmpsb
jmp
add
add
scas
aas
lahf
add
sbb
clc
pop
stos
shrb
mov
add
movsb
clc
pop
and
loop
jb
add
clc
lret
dec
clc
aas
push
jle
ljmp
add
lock
mov
add
cmp
sar
scas
fdiv
cmp
clc
js
int
fwait
sti
inc
add
dec
cmp
clc
mov
es
test
pusha
add
arpl
add
add
test
pop
xchg
nop
inc
add
lods
jecxz
xchg
aaa
and
add
cld
or
mov
pop
shld
xabort
aad
loopne
aas
sbb
add
mov
clc
cmp
sub
popa
add
or
clc
sbb
xor
add
fnstcw
sub
add
push
jmp
in
lods
add
std
mov
add
das
mov
sub
clc
sar
sbb
add
ret
cmp
clc
inc
add
and
add
das
int3
hlt
push
add
jae
add
adc
add
clc
and
std
add
or
nop
jnp
shll
xor
add
movlps
add
inc
clc
repnz
clc
adc
add
add
add
and
add
movsb
clc
lods
mov
pop
cltd
out
rolb
mov
popf
xchg
cmp
loop
sub
sti
xor
add
add
out
push
xchg
cltd
dec
push
enter
pop
cmp
xchg
sbb
out
or
loope
fisubrl
mov
data16
incl
in
add
add
bound
add
jl
pop
push
mov
jbe
nop
jmp
adc
in
enter
clc
iret
xchg
cmc
in
xchg
jne
gs
jne
clc
hlt
mov
add
pop
nop
jmp
lods
cmp
mov
add
add
and
lcall
clc
mov
clc
xor
add
add
out
cmp
clc
cmp
ljmp
fisubl
add
and
add
add
adc
nop
jmp
sti
adc
cltd
jbe
or
es
iret
leave
into
sub
add
outsb
arpl
add
clc
loope
ficompl
add
cltd
fiadds
int3
mov
bound
add
add
mov
clc
and
iret
stc
sahf
fwait
mov
add
nop
jmp
xor
std
or
daa
rdmsr
add
inc
clc
ficoml
and
add
add
add
add
push
add
xabort
mov
clc
push
jl
push
clc
sub
sarb
adc
add
lcall
add
cld
cmp
add
stc
cmpsl
clc
jae
add
into
aaa
cs
clc
mov
xbegin
push
add
push
call
mov
push
aad
clc
sub
das
pop
popl
add
ret
mov
cs
add
xchg
lea
add
scas
loopne
jmp
xor
add
and
add
add
push
cltd
movsb
clc
jmp
and
add
jp
clc
and
add
cmpsl
clc
push
push
push
mov
xchg
ret
mov
adc
add
stc
mov
add
nop
jmp
pop
add
add
pop
sbb
add
sbb
fistl
add
add
fstpl
cmp
push
add
add
clc
scas
inc
clc
add
add
pop
add
add
clc
jae
add
test
hlt
lret
into
daa
clc
mov
clc
daa
clc
int
clc
insl
fisubrs
decl
test
inc
add
nop
jmp
das
cmpb
add
or
sub
add
add
aad
loop
sub
add
sbb
xchg
lret
imul
rcrl
mov
add
push
mov
xchg
ret
mov
das
mov
xchg
pop
sbb
xbegin
sbb
cmp
inc
add
jbe
clc
call
jmp
adc
xchg
shrb
push
dec
add
adc
daa
cltd
cltd
add
dec
or
aas
jecxz
xor
je
sub
add
pop
jno
add
dec
mov
aam
clc
insl
test
dec
xchg
add
add
sbb
sar
mov
clc
pop
sbb
clc
mov
rcrl
add
fs
arpl
add
cs
clc
movsb
clc
int3
testl
pop
xlat
stc
pop
jge
clc
fnstcw
mov
and
add
clc
jb
add
mov
nop
jne
add
scas
inc
add
inc
add
fmul
test
sti
push
mov
clc
mov
clc
xor
push
aaa
ret
sar
add
nop
jmp
pop
in
inc
xor
jnp
add
jne
insb
decl
decl
add
add
add
xor
add
clc
inc
clc
outsb
insl
or
add
xor
mov
nop
jmp
jnp
add
pop
push
pop
daa
clc
vmulps
movsb
clc
out
nop
mov
cmc
push
or
in
lea
sbb
mov
xchg
ret
mov
jmp
add
clc
or
clc
cwtl
repnz
add
xchg
xbegin
clc
std
cmp
cld
mov
cmp
xor
add
clc
outsl
or
mov
add
loope
enter
int
add
adc
add
cwtl
pop
jbe
clc
shll
add
std
sar
inc
add
mov
imul
add
add
xor
scas
arpl
add
jg
test
mov
fadd
clc
loopne
sub
clc
and
add
and
add
lock
inc
add
leave
cmp
cs
loop
dec
icebp
mov
sbb
inc
clc
imul
sub
add
flds
aam
clc
dec
mov
clc
inc
add
inc
clc
shrb
push
clc
in
push
add
add
add
jmp
add
inc
add
movsl
clc
cmp
clc
mov
aaa
pusha
add
aaa
loope
test
leave
lcall
pop
add
xchg
xchg
add
cltd
add
mov
in
fucomp
rep
clc
out
mov
clc
mov
out
ret
movsb
clc
or
jno
add
icebp
mov
add
add
stos
mov
addr16
inc
add
sbb
push
add
nop
jmp
add
mov
gs
xchg
mov
pop
popa
add
xchg
pushf
jae
add
int
add
in
adc
add
pop
xchg
shrb
inc
clc
pop
clc
add
add
add
sbb
fwait
xlat
xor
add
mov
inc
add
fidivrl
xor
add
and
add
clc
inc
clc
xor
add
add
sub
test
inc
add
movsb
clc
dec
mov
insl
int
add
jnp
pop
imul
clc
call
cmp
add
add
clc
inc
add
jle
add
add
add
add
std
data16
push
out
lcall
add
dec
inc
add
push
cmc
in
ret
add
imul
popa
add
adc
adc
add
push
xor
nop
jmp
pop
mov
std
adc
pusha
add
mov
sub
out
push
add
int3
outsl
jp
jbe,pn
add
mov
imul
nop
jmp
jmp
or
add
pop
in
fcoml
add
sub
push
pusha
push
mov
xchg
ret
mov
and
mov
stos
pop
dec
mov
popf
cmp
sbb
repnz
xchg
std
aam
mov
add
ja
xchg
push
mov
add
loope
sbb
cmp
clc
or
jno
add
xor
fcomps
add
sbb
mov
xchg
ret
pop
pop
add
clc
shl
clc
testb
mov
add
mov
adc
loopne
ja
clc
mov
pusha
add
mov
pusha
add
mov
add
jbe
or
clc
stos
push
mov
add
nop
jmp
ret
xor
in
mov
shr
mov
clc
cmpsb
clc
outsb
xor
add
add
pusha
add
stos
bound
add
mov
clc
push
add
or
mov
ljmp
mov
xchg
insb
sbb
add
xor
add
xchg
push
add
lea
add
int3
test
sub
add
bound
add
gs
sar
mov
popa
add
in
sbb
nop
jmp
mov
cli
adc
xchg
mov
lods
lahf
pop
aaa
pusha
add
addr16
pop
clc
int
add
add
add
push
mov
cmc
daa
clc
xchg
xchg
fcoms
or
pushf
inc
add
mov
clc
pop
xor
add
in
leave
cld
int
sahf
sbb
push
xor
add
lods
dec
adc
add
clc
or
mov
scas
enter
sbb
mov
jbe
movsb
loop
shlb
add
cmc
inc
clc
decb
clc
int
add
out
leave
mov
mov
xchg
ret
adc
clc
out
or
cmp
repz
add
add
cmp
test
sar
mov
dec
cwtl
mov
clc
dec
cmp
test
aas
pop
push
add
aas
jl
clc
push
push
cmp
add
jle
push
lods
xor
add
loop
mov
add
jp
and
add
mov
jmp
clc
jge
add
and
add
incl
decb
inc
add
std
icebp
adc
mov
clc
adc
add
clc
shrb
add
icebp
sub
push
cmp
clc
jo
add
add
jecxz
push
add
jge
clc
inc
clc
sar
add
inc
clc
iret
dec
insl
pop
mov
clc
pop
cmc
xor
scas
sub
adc
mov
clc
sti
stos
cli
loop
mov
in
incl
std
xchg
adc
clc
cmp
repz
out
mov
clc
mov
dec
cmp
add
add
jnp
jbe
das
setbe
sti
adc
add
add
mov
add
fadds
pop
xor
add
push
test
lahf
sbb
stos
nop
jmp
mov
cmpb
xchg
cwtl
lods
inc
clc
pop
stos
and
push
add
outsb
movsl
clc
rorb
mov
add
clc
clc
push
add
nop
jmp
cltd
pop
mov
clc
xchg
jns
inc
add
cmp
and
xor
add
clc
incl
faddl
xchg
ret
adc
mov
clc
gs
std
cmp
clc
iret
or
sar
pop
xabort
add
dec
add
add
addr16
test
sub
jmp
add
hlt
or
fs
push
pop
add
jbe
add
das
mov
add
cmp
sar
pusha
add
mov
add
clc
add
add
add
jns
mov
xor
add
dec
add
add
ret
clc
mov
movsb
clc
ds
jns
add
jle
and
jge
clc
cmp
imul
add
cmp
sub
enter
add
or
mov
push
mov
xchg
ret
loop
xchg
notb
add
fmul
fidivrl
clc
test
mov
jmp
mov
push
xchg
popa
add
loop
inc
clc
push
fbld
add
js
in
xchg
sbb
mov
xchg
ret
stos
jmp
in
sub
inc
add
fdivr
lahf
jp
push
add
mov
fdivp
lea
add
mov
add
add
in
sub
add
ja
popf
xchg
mov
mov
enter
dec
imul
call
add
aad
std
hlt
or
jns
add
mov
xchg
mov
ds
push
fists
add
dec
iret
insl
inc
clc
mov
add
sar
clc
and
add
mov
std
daa
clc
insb
mov
scas
test
jg
clc
insb
inc
add
imull
into
dec
xchg
cwtl
push
add
mov
add
stos
adc
add
jg
push
nop
jmp
inc
or
loop
clc
cmc
das
sub
jecxz
sub
clc
push
fstl
add
cmp
movsb
clc
mov
sarl
clc
inc
clc
imul
es
xchg
dec
jno
add
cld
outsl
push
pop
nop
jmp
inc
mov
sub
inc
clc
repz
fisttpl
push
test
clc
out
cwtl
mov
add
jmp
cmp
cmpsl
das
xor
call
push
mov
xchg
ret
mov
jge
sbb
out
nop
jmp
xor
inc
xor
outsb
and
add
xchg
add
add
jmp
call
add
and
add
jne
mov
cmp
dec
js
and
add
pcmpgtw
test
add
loope
loope
cmp
add
lock
add
adc
add
cmc
mov
fs
push
insb
fstpl
dec
push
lcall
and
inc
clc
mov
jecxz
shll
clc
mov
mov
jle
fnstenv
add
mov
add
pop
dec
cld
pop
pop
clc
pop
hlt
imull
aas
stc
cmp
jne
nop
jmp
mov
mov
push
jmp
pop
stos
xchg
cmp
loop
inc
clc
or
add
cmp
add
inc
clc
xchg
mull
testb
bound
add
add
xchg
fiaddl
add
mov
add
mov
stos
fs
das
iret
lahf
cld
scas
jb
add
cmp
add
inc
add
push
add
push
clc
mov
mov
nop
jmp
loop
push
mov
add
clc
call
cmp
add
js
adc
add
mov
cmpsb
clc
sbb
sub
add
inc
add
inc
add
push
add
jle
cmpsb
clc
aas
mov
add
xbegin
add
fists
fsubrs
or
adc
add
push
add
ret
clc
loop
push
adc
xchg
ret
cltd
jnp
jnp
clc
stc
int
pop
or
add
xchg
aas
sbb
clc
mov
clc
cmpsl
clc
fdivl
pop
mov
adc
clc
xor
add
sbb
mov
jb
add
xor
add
cmovp
jg
push
add
iret
add
add
pop
lahf
jg
mov
inc
and
jmp
cltd
adc
push
sarb
mov
aaa
push
add
jnp
add
clc
sub
cmp
add
nop
jmp
movsb
pop
add
push
and
add
test
add
xlat
xabort
inc
add
xbegin
clc
inc
clc
popf
sahf
lock
add
add
push
push
xchg
or
push
fdivl
mov
cmpsl
clc
std
mov
push
mov
into
in
cmpsl
clc
fnsave
pop
push
mov
or
mov
bnd
jmp
jle
jnp
adc
clc
cld
cmp
lods
cs
mov
adc
add
enter
cmc
popf
sub
clc
push
add
stos
sbb
addr16
iret
test
aaa
mov
xchg
xor
test
sbb
jmp
adc
das
add
add
aad
dec
pop
push
add
fsubr
fidivs
add
cmp
mov
nop
jmp
mov
push
push
add
add
xchg
ds
clc
es
push
add
jae
add
clc
fcoml
add
pop
cmova
cld
mov
clc
ror
jo
add
inc
add
cltd
pop
sahf
cmp
out
mov
dec
iret
fiadds
add
pushf
dec
push
add
jno
add
sub
lahf
mov
add
clc
gs
sub
add
or
add
clc
mov
add
imul
ja
imul
add
mov
and
add
adc
add
add
add
push
add
mov
xlat
fcomp
test
add
nop
jmp
mov
mov
icebp
dec
push
int
pop
inc
clc
cmpsl
clc
mov
xchg
cmp
cwtl
cmp
xchg
loop
pop
clc
imul
add
pusha
add
or
or
sbb
stos
nop
jmp
add
daa
inc
add
movsl
clc
xchg
xor
add
dec
adc
add
add
xchg
sub
or
add
scas
push
bound
add
xor
push
mov
xchg
ret
sti
add
fs
mov
add
add
dec
sbb
add
loope
pushf
shl
or
add
clc
mov
add
adc
add
push
add
mov
or
inc
add
cltd
sti
mov
add
clc
pop
repnz
xchg
aas
sahf
xchg
jnp
in
sti
xchg
sbb
pop
aad
push
add
int
jae
add
sub
clc
adc
clc
sub
clc
adc
add
daa
clc
jg
jo
add
in
bound
add
add
xchg
jo
add
add
addr16
imulb
leave
into
xchg
pop
loop
data16
mov
insl
sar
and
add
add
push
fmull
clc
gs
sub
add
rcrb
sub
mov
loope
mov
push
jmp
xor
add
ret
clc
lods
push
pop
push
inc
add
daa
clc
and
add
mov
jno
add
push
add
cmp
nop
xabort
fsts
aaa
sub
ja
add
mov
jb
jmp
pop
mov
adc
add
shll
add
mov
clc
push
jne
nop
jmp
add
lods
sbb
clc
add
push
fdiv
js
add
xchg
xor
add
inc
clc
jo
add
leave
scas
imul
lcall
inc
clc
cmp
insb
or
int3
push
std
xchg
or
add
and
clc
ret
clc
adc
add
add
adc
add
stc
xor
add
sbb
clc
cmp
add
cwtl
jecxz
mov
in
mov
jne
sub
clc
daa
clc
dec
inc
clc
add
inc
add
bound
add
pop
push
decl
nop
jmp
mov
adc
scas
push
fdivr
loopne
lcall
or
lods
and
add
nop
jmp
xor
add
jge
add
inc
add
imul
pop
pop
and
jmp
stc
xlat
clc
cmp
lahf
mov
clc
cmp
int
mov
add
add
scas
js
add
xor
adc
add
add
mov
test
add
stc
fucomp
and
mov
add
pop
sbb
cmp
ljmp
jnp
mov
ja
mov
gs
mov
insl
xlat
nop
out
nop
insb
idivl
xchg
push
dec
lcall
lahf
xor
add
add
imul
mov
fisttpll
fnstenv
clc
ss
cmp
clc
fwait
cmp
add
cld
pop
ret
icebp
xchg
ja
mov
pusha
add
add
xbegin
jmp
ret
outsb
inc
cltd
cmp
enter
nop
jmp
jle
mov
frstor
or
clc
push
jnp
scas
insb
pushf
xlat
bound
add
aam
clc
outsl
pop
mov
add
nop
jmp
xchg
xor
aaa
push
cli
xchg
into
pcmpeqw
jno
add
out
add
add
add
add
int3
repz
add
cmp
lea
cmp
pop
adc
add
fs
and
push
add
push
mov
xchg
ret
cltd
das
daa
ja
loope
mov
mov
xchg
ret
jmp
add
xchg
movsb
clc
inc
add
insl
xbegin
add
aad
adc
clc
cmp
clc
dec
rcll
add
clc
repnz
dec
and
mov
sub
mov
test
test
xor
add
clc
mov
jmp
mov
add
sti
das
and
mov
shr
inc
add
je
call
or
dec
out
divl
add
add
int3
fs
or
repz
or
sub
add
xchg
mov
jns
clc
fimuls
xor
add
inc
add
bnd
add
inc
clc
or
mov
cmpsl
clc
pop
data16
popa
add
aas
jge
mov
nop
jmp
cltd
movsb
add
pop
in
adc
add
xor
add
clc
std
pop
cmp
push
add
fidivl
pushf
cmc
mov
out
adc
or
lret
pop
pop
cltd
push
clc
mov
pop
clc
adc
add
pop
cli
cmp
sub
inc
add
clc
and
add
xchg
adc
popf
pop
std
cs
and
add
repnz
push
mov
add
adc
add
into
nop
cmp
iret
jmp
xchg
add
add
mov
xchg
pusha
add
add
xor
add
mov
xchg
ret
add
xchg
xor
add
cmpsb
clc
addr16
std
dec
xchg
cltd
data16
jge
cltd
mov
sbb
clc
stos
bound
add
xor
add
push
add
nop
jmp
stos
sub
mov
mov
add
in
or
sub
repnz
test
test
add
clc
and
dec
inc
add
sub
movsb
clc
xor
add
clc
mov
jbe
mov
or
clc
mov
repz
ja
sub
add
dec
mov
aad
mov
add
into
inc
clc
and
add
inc
add
lahf
cmpsb
clc
fistps
push
mov
add
cmp
cmp
push
clc
fs
aad
fs
add
add
loop
data16
push
cmpsb
clc
rolb
cmp
lcall
add
lods
fisubrs
movswl
nop
jmp
add
loop
shrd
add
jmp
nop
jmp
ret
in
mov
xchg
inc
add
cmp
in
movsl
clc
inc
add
icebp
pop
hlt
mov
fdivrs
add
push
in
js
dec
pop
popa
add
cmp
add
mov
add
xchg
icebp
cmc
gs
add
add
add
add
xchg
test
cmp
cmp
sub
loope
cmp
add
testb
clc
sti
lret
mov
mov
decl
daa
mov
clc
scas
aam
insb
out
cmp
xor
add
dec
jb
add
add
sahf
xchg
lods
jp
nop
jmp
nop
pop
add
clc
test
in
mov
clc
mov
clc
dec
cmp
pop
push
cmc
cmp
add
add
add
sti
nop
jmp
add
add
clc
sbb
out
aam
add
rorl
add
popf
push
clc
mov
add
xchg
ret
add
mov
add
inc
clc
clc
add
add
stc
sahf
cmpsl
clc
mov
or
clc
int3
frstor
clc
test
mov
add
aam
arpl
add
rolb
add
jo
add
addr16
add
add
add
lret
bsf
add
add
sub
mov
add
add
imul
clc
cwtl
dec
mov
clc
inc
add
or
cmp
loop
cwtl
test
pop
adc
add
add
sbb
mov
push
add
dec
sbb
ja
mov
and
add
add
mov
clc
mov
add
xchg
fs
sub
jle
add
jns
pop
pop
pop
fwait
sahf
sar
add
cmp
cmp
rorb
rcrl
test
jmp
dec
fcomi
js
xchg
stos
pop
clc
cmp
clc
xchg
fucomi
pop
add
add
in
xchg
or
xor
dec
into
pop
and
add
xor
add
test
mov
add
inc
clc
clc
push
add
xor
pushf
loopne
outsl
and
add
cwtl
fs
addr16
inc
clc
mov
in
add
add
clc
dec
test
ja
adc
add
fmul
cli
pop
fs
sub
mov
lret
nop
jmp
or
addr16
dec
cltd
mov
inc
add
je
outsl
jecxz
int
mov
clc
xor
add
mov
mov
clc
xchg
gs
cmp
clc
xchg
adc
add
pop
cmpsb
clc
adc
add
pop
sahf
jle,pn
inc
clc
test
sti
inc
add
nop
out
test
aas
cmp
in
ret
clc
adc
clc
insl
cmpsl
clc
daa
clc
inc
add
xchg
ds
add
outsb
adc
add
ficompl
add
add
clc
dec
test
add
add
xchg
jnp
sar
clc
lret
aas
daa
clc
out
dec
bound
add
clc
mov
je
lahf
addr16
lret
mov
clc
jecxz
mov
pusha
add
mov
push
mov
xchg
ret
adc
and
add
inc
clc
incb
add
stos
into
out
push
add
jnp
sar
xchg
jb
add
int3
frstor
clc
imul
pop
stos
cmp
clc
aaa
cmp
iret
sub
mov
clc
jns
clc
jnp
mov
inc
add
notb
clc
fs
xchg
mov
jb
add
clc
lods
inc
add
push
leave
loop
mov
add
mov
clc
mov
aam
sub
clc
fsubrs
clc
arpl
add
call
add
xor
add
dec
arpl
add
add
add
pop
int
add
or
loopne
lea
sbb
aad
add
add
mov
push
out
cmp
aas
mov
popf
mov
add
clc
mov
fbstp
add
jmp
clc
lods
xabort
adc
add
stos
fdivl
mov
fnstsw
add
cli
adc
add
clc
mov
clc
xchg
dec
out
push
ljmp
movsb
clc
fadds
add
nop
loop
bound
add
jp
pop
xbegin
add
clc
nop
push
or
add
inc
add
mov
clc
mov
in
pusha
add
mov
clc
cwtl
jbe
xchg
cwtl
idivl
cmc
shll
add
dec
cmp
add
or
clc
lahf
xchg
mov
aad
clc
shrl
add
add
sub
add
xchg
mov
add
dec
shrb
clc
mov
jno
add
push
add
in
int
into
push
xlat
inc
add
adc
dec
jmp
jl
loope
mov
fst
clc
xchg
insl
add
add
sub
je
int
add
mov
ret
aaa
ljmp
push
call
and
mov
jle
cmp
mov
ficoml
mov
add
daa
clc
arpl
add
add
data16
sbb
loope
sahf
adc
add
pop
xchg
call
jmp
std
cmpsl
cmp
outsb
outsb
enter
add
push
or
add
add
lahf
je
iret
pop
pop
rorb
add
loop
sar
insb
cmp
add
clc
jb
add
add
add
add
add
clc
jmp
out
scas
in
in
push
add
daa
clc
mov
clc
in
mov
mov
sbb
xbegin
stos
jno
add
xor
add
jl
lock
lods
lcall
xor
add
pop
sub
clc
daa
clc
mov
add
out
pop
xchg
setne
clc
scas
mov
sbb
and
nop
jmp
ret
mov
pop
mov
ja
mov
clc
inc
clc
aas
pop
mov
aad
ds
add
arpl
add
add
or
mov
mov
jle
je
adc
stos
icebp
push
add
dec
cwtl
sbb
clc
mov
or
clc
imul
add
mov
mov
xchg
ret
bsr
add
pop
push
push
add
push
clc
movsb
clc
sbb
nop
jmp
add
lods
std
inc
clc
iret
gs
inc
clc
fcomip
outsl
add
add
jno
add
sahf
loopne
pop
clc
lret
xor
add
xor
add
and
add
clc
enter
add
cmp
stos
pusha
add
sti
or
in
out
push
sub
xchg
adc
add
add
sahf
popa
add
add
add
mov
add
add
aam
mov
sub
in
aam
das
cmpsb
clc
mov
cwtl
adc
clc
mov
dec
sub
repz
mov
in
push
add
sbb
add
add
add
add
movsl
clc
pop
xchg
sub
push
clc
inc
clc
popa
add
xor
add
add
int
add
pop
clc
test
sub
fiadds
clc
or
add
out
das
lret
clc
int3
pop
add
add
clc
outsl
outsl
test
add
dec
and
add
clc
daa
clc
icebp
mov
clc
adc
add
out
jno
add
clc
bound
add
xor
add
cltd
cmp
mov
nop
jmp
add
add
add
popf
xabort
rorb
stc
mov
hlt
xchg
jmp
clc
cmpsb
clc
lahf
xchg
fisttps
in
cmp
out
xor
add
and
add
add
clc
mov
xor
add
xchg
adc
add
cmpsl
clc
aaa
xabort
push
add
das
das
sti
add
add
pop
push
add
add
in
inc
mov
xor
add
push
add
das
inc
add
cmpsl
clc
fsubr
xabort
es
lret
inc
clc
lods
lret
add
int3
add
clc
jmp
nop
jmp
mov
sbb
add
repz
jmp
das
out
jne
cmp
add
mov
sti
cmp
clc
xabort
add
sti
enter
add
or
jecxz
clc
das
xchg
xor
add
fstps
and
leave
xchg
jae
add
add
mov
jnp
clc
mov
addr16
mov
xor
add
mov
outsl
mov
mov
add
pop
mov
add
clc
shlb
add
lret
push
jmp
add
stc
pusha
add
sbb
out
lea
clc
jo
add
out
xor
roll
add
add
clc
cmpsb
clc
fs
mov
add
out
in
sar
jno
add
add
clc
mov
or
add
nop
jmp
inc
frstor
clc
mov
add
pusha
add
pop
dec
sub
push
lahf
dec
push
addr16
xor
clc
ret
clc
dec
fmulp
adc
add
clc
iret
dec
bnd
or
adc
add
add
test
pop
pop
jb
add
cmp
mov
jge
rcll
add
sbb
nop
jmp
ret
xchg
add
sub
aas
push
add
stos
popa
add
aas
xchg
jl
or
add
lods
fidivs
insb
rorb
pop
addr16
aam
add
aam
cmp
add
and
push
xor
nop
jmp
sub
add
cmp
mov
inc
add
gs
and
add
sbb
ja
cmp
add
xabort
jae
add
scas
rclb
add
pop
je
scas
divb
cmp
clc
iret
and
lods
mov
sub
push
add
push
add
push
jmp
adc
jg
ds
add
add
test
push
add
push
add
mov
stos
xbegin
clc
cs
sbb
loopne
aad
addr16
or
clc
xor
add
clc
xchg
cltd
mov
js
clc
adc
add
clc
leave
outsb
xchg
or
fmulp
sub
loope
insl
xchg
into
mov
clc
pop
cmp
clc
fcoml
add
hlt
pusha
add
test
nop
sbb
add
adc
jmp
add
add
fwait
push
add
clc
dec
clc
je
clc
or
clc
sar
clc
rcll
add
add
mov
add
add
clc
push
mov
xchg
ret
add
pop
add
add
push
pop
mov
ja
jbe
cmp
ret
clc
pop
test
adc
jne
mov
nop
jmp
push
jnp
add
push
into
out
pop
data16
lahf
mov
aam
loope
scas
sbb
sbb
clc
jle
imull
pop
and
add
out
lods
mov
test
mov
shl
int3
clc
mov
clc
out
addr16
mov
cld
jmp
dec
test
hlt
leave
push
push
sar
or
add
call
aad
clc
pusha
add
xor
add
add
jmp
add
daa
adc
lock
rcll
pushl
or
das
pop
sar
iret
repnz
imul
das
ja
lock
mov
add
xor
add
add
add
decl
addr16
cmp
movsl
clc
fstpt
mov
shrb
movb
xchg
ret
cmp
add
lret
xlat
loope
rorb
push
add
adc
add
add
push
rep
push
mov
xchg
ret
mov
clc
pop
rcrb
jo
add
inc
clc
sbb
clc
jmp
nop
jmp
adc
xchg
add
jns
push
add
shl
clc
cld
out
dec
jo
add
add
imul
mov
pop
clc
stc
xchg
bound
add
clc
jle
lock
clc
sub
sti
push
pop
iret
cmpsl
clc
mov
sub
adc
mov
add
addr16
adc
clc
lods
or
pusha
nop
jmp
add
frstor
add
add
jmp
nop
jmp
add
movsb
mov
adc
add
mov
clc
pushf
mov
clc
clc
pop
sbb
clc
jne
adc
add
pop
clc
push
arpl
add
inc
add
ret
clc
cmp
lret
xchg
cmp
clc
jecxz
sub
dec
mov
xor
add
lcall
add
push
jmp
in
jbe
clc
aam
scas
or
clc
out
es
jo
add
xchg
adc
add
clc
xlat
pop
lea
add
scas
cmp
clc
adc
add
clc
addr16
sti
push
std
fwait
push
shrl
push
cltd
rolb
add
cmp
inc
clc
xor
add
fwait
jae
add
add
fcmovnbe
gs
xlat
sub
add
imul
and
dec
sbb
icebp
cmp
add
outsl
ret
push
xchg
sti
sub
add
fildll
mov
nop
jmp
jbe
pcmpeqd
sbb
aas
mov
mov
mov
call
mov
das
outsb
cltd
add
jle
mov
nop
jmp
cli
add
adc
enter
add
mov
jmp
or
mov
sti
pop
pop
aas
cmpsl
clc
cmp
jae
jmp
add
adc
aam
add
cmp
repnz
clc
inc
add
jbe
mov
clc
inc
clc
adc
out
adc
add
add
or
clc
mov
add
add
add
test
rcrb
add
ret
add
mov
add
sub
enter
cmp
insb
dec
imul
cli
push
add
xor
add
add
test
adc
add
add
adc
add
test
aaa
addr16
inc
add
stos
add
add
repz
xabort
sbb
in
stos
sub
into
cmp
fiadds
add
clc
fstps
inc
add
das
daa
clc
mov
or
clc
jg
push
jne
nop
jmp
add
xor
das
imul
clc
fstl
add
mov
add
imull
dec
stos
sub
jmp
mov
mov
pop
cmp
rcrl
dec
hlt
push
fsubr
loop
push
clc
jg
clc
push
jno
add
inc
add
sahf
push
jmp
pop
das
idivb
mov
nop
jmp
or
adc
add
add
dec
aaa
pop
xchg
jg
lahf
or
mov
jmp
inc
add
clc
mov
icebp
lahf
data16
cmc
adc
add
mov
data16
ds
add
repz
add
add
push
xchg
sbb
jmp
sub
loop
movsb
cmp
popa
add
pop
lea
pop
lret
lahf
inc
add
cmp
mov
add
add
inc
clc
adc
inc
clc
loop
inc
clc
jle
add
adc
add
clc
xor
clc
paddusb
and
pop
and
add
mov
jmp
push
mov
fnstenv
test
cmp
jmp
jbe
add
cltd
push
mov
nop
jmp
jle
sti
sub
mov
pop
xabort
mov
test
adc
add
fnsave
bswap
jl
add
pop
or
jo
add
clc
js
sub
add
aas
push
jl
jno
add
lret
adc
sbb
incl
ret
mov
nop
cltd
shll
add
imul
outsl
pop
or
fsubs
add
js
ljmp
or
clc
xchg
aas
fsubl
pop
mov
add
ret
add
cld
add
add
add
sbb
daa
clc
mov
inc
clc
dec
xor
add
jge
cmp
clc
xor
add
cli
or
or
dec
jmp
popa
add
mov
arpl
add
clc
ss
clc
jno
add
clc
js
clc
pop
mov
shll
add
cmp
loop
pop
fcmovne
mov
sub
add
add
clc
adc
scas
dec
incb
add
clc
sub
add
ljmp
or
add
add
pop
and
add
mov
add
add
clc
and
add
call
sub
clc
in
mov
pop
js
clc
bound
add
clc
mov
add
push
push
mov
xchg
ret
add
add
clc
mov
movsb
clc
mov
cmp
add
sub
clc
in
jno
add
add
pop
mov
jo
add
clc
int3
jmp
and
add
js
xchg
cmp
dec
and
add
mov
int
xchg
xor
loop
xchg
pop
sub
clc
add
add
add
add
xor
add
jns
stos
pop
clc
inc
clc
pop
ja
pop
clc
cmp
clc
aad
testl
popf
jge
mov
nop
jmp
das
mov
cltd
pop
in
cmpsl
clc
xchg
xchg
cmp
fldt
dec
jno
add
cmpsb
clc
test
push
xor
add
clc
jmp
add
add
dec
out
jl
clc
xor
cltd
mov
add
inc
clc
cmpsb
clc
xchg
lret
sub
push
xchg
mov
add
add
repz
sub
clc
dec
lods
arpl
add
arpl
add
sub
jmp
rclb
cli
mov
add
mov
hlt
jb
add
pop
jmp
jb
add
leave
fucomp
loop
das
xor
add
add
xor
add
pusha
add
cmp
dec
aad
jb
add
xor
add
and
add
push
test
mov
lock
mov
jmp
movsb
mov
je
ror
out
lret
loop
scas
push
add
cmp
add
clc
stos
es
scas
stc
lret
or
dec
pop
or
in
scas
mov
xor
add
sti
cmp
clc
in
addr16
adc
sub
addr16
xabort
add
add
add
mov
mov
adc
add
add
sbb
mov
jmp
insl
jmp
sbb
add
push
repnz
push
mov
nop
jmp
das
aad
pop
push
pop
mov
stos
jae
add
je
pop
cld
loop
mov
out
aad
clc
out
daa
clc
inc
clc
imul
in
mov
clc
push
jecxz
xchg
mov
sbb
add
add
dec
sub
dec
mov
xchg
dec
fadds
add
add
add
mov
mov
xchg
fwait
sar
cmp
add
add
incl
add
jle
clc
pop
and
add
add
xor
add
lods
fnstsw
and
add
add
jmp
push
add
mov
testl
push
add
adc
add
add
xor
add
sbb
es
inc
add
cmp
aaa
xchg
lock
add
clc
dec
mov
stos
loope
test
clc
in
clc
or
clc
mov
lea
push
mov
xchg
ret
cmpsl
stos
shld
clc
iret
adc
movsl
clc
leave
mov
add
xbegin
clc
inc
clc
ja
aas
add
insb
mov
adc
add
pop
add
imul
sub
jg
add
ds
aas
rorl
add
add
movd
int3
cmp
clc
xor
add
rdmsr
add
mov
clc
mov
inc
add
testb
add
nop
jmp
add
or
mov
add
clc
enter
mov
add
mov
clc
dec
sbb
clc
push
cs
nop
jmp
pop
jbe
jle
mov
iret
cli
ja
xchg
es
push
clc
outsl
xor
cmpsl
clc
cmp
add
icebp
dec
out
fistl
iret
loop
ret
clc
jl
das
pop
ret
add
cmp
cmp
add
add
bound
add
adc
add
add
iret
test
out
add
add
xor
add
add
xchg
fdivs
bswap
lret
pop
aas
cmpsl
clc
add
add
mov
pop
and
add
pop
clc
loop
xor
add
clc
clc
dec
mov
add
cmp
xchg
dec
ljmp
rcll
add
mov
clc
jae
add
sbb
pop
xor
add
xchg
sbb
add
or
mov
jp
clc
fs
cmp
clc
mov
sbb
cwtl
sbb
add
mov
add
inc
clc
mov
add
add
sti
sbb
ficomps
add
int3
leave
jns
clc
jl
ds
cltd
cmp
cmp
pop
loop
sahf
dec
rolb
add
cmp
clc
js
xchg
test
dec
sbb
into
sar
clc
sbb
add
cmpsl
clc
loope
std
negb
xchg
movsb
clc
shrl
jae
add
das
push
mov
cmpsb
clc
dec
and
mov
outsb
cli
dec
or
jg
sti
xchg
push
leave
adc
cmovns
add
add
rol
clc
push
push
pop
mov
inc
clc
jle
add
add
add
mov
arpl
jmp
std
pop
fldl
stc
mov
jbe
dec
adc
mov
cmp
add
jmp
lods
fimuls
add
fwait
mov
hlt
pop
clc
aad
add
jmp
cs
out
divl
add
xor
add
clc
jns
das
jl
clc
cmp
iret
mov
test
clc
cmp
fiadds
jg
cmp
adc
add
add
add
push
popf
cs
bswap
sbb
clc
inc
clc
mov
dec
jg
clc
stos
popf
cmp
add
dec
fcmovu
outsb
lret
clc
pop
cmc
nop
scas
jmp
nop
jmp
outsb
loop
pop
cli
adc
jbe
and
add
push
add
ret
xchg
icebp
pop
clc
adc
add
mov
add
insb
xor
add
sar
inc
clc
clc
cltd
sbb
mov
sahf
mov
cmpsb
clc
int
jb
add
in
xchg
add
lods
jle
clc
hlt
cmpsb
clc
enter
mov
les
nop
jmp
daa
cltd
or
push
cmpsl
js
fsubrl
xlat
or
clc
pop
xchg
mov
mov
pop
inc
clc
je
outsl
push
add
lcall
add
mov
jl
mov
add
mov
nop
jmp
mov
daa
rolb
add
and
mov
clc
cwtl
mov
inc
add
pusha
add
repz
and
mov
add
clc
cmc
lock
clc
sub
clc
addr16
adc
add
fadds
das
lea
xlat
lahf
xchg
mov
xchg
lret
test
add
nop
jmp
sub
add
nop
pop
cmp
cld
push
dec
nop
jmp
stos
mov
add
enter
add
sub
sub
add
jmp
add
popa
add
jbe
fnstsw
cmp
add
loope
push
in
scas
xor
add
nop
jmp
add
mov
fstpl
rclb
test
sub
je
add
pop
test
mov
add
add
sub
into
arpl
add
clc
pop
dec
and
ja
fwait
jbe
xor
icebp
mov
lea
nop
jmp
ret
xor
aad
add
add
outsb
enter
insb
cmc
push
add
sbb
xchg
xchg
out
add
add
cmc
cmp
cmpl
nop
jmp
mov
cmp
push
fs
ret
pop
ja
clc
adc
mov
xbegin
cwtl
inc
add
mov
push
inc
add
mov
loope
pop
add
add
clc
leave
loop
loop
push
jmp
jmp
das
in
movsb
add
mov
jno
add
fdivrl
xor
add
arpl
add
popf
je
icebp
and
add
addr16
mov
nop
jmp
mov
adc
add
xlat
jg
cmp
pop
push
lahf
lret
aad
stos
add
jmp
mov
inc
clc
dec
hlt
js
mulb
mov
and
cltd
pop
xabort
xabort
clc
adc
add
jle
clc
iret
lcall
sar
add
inc
add
inc
add
sub
clc
xabort
or
sub
mov
ret
clc
rorl
cmp
jg
mov
out
jnp
add
sbb
add
mov
push
clc
sar
add
lods
sbb
clc
cmp
movsl
clc
pop
lea
add
test
cmp
add
add
add
add
mov
loopne
nop
jmp
push
add
clc
dec
inc
add
push
add
add
add
movsb
clc
inc
clc
int3
lcall
sbb
jb
add
clc
mov
add
fnstcw
lret
mov
clc
nop
mov
add
popa
add
or
add
hlt
sti
pop
outsb
push
rcr
xor
xchg
lock
add
daa
clc
adc
add
cmp
insb
nop
mov
call
in
add
clc
loope
stos
cld
add
add
dec
adc
add
cmpsl
clc
cmp
mov
pop
pop
cli
mov
cli
inc
clc
xchg
mov
xor
add
add
shll
add
inc
add
leave
repz
add
add
add
mov
nop
stos
pusha
add
jge
inc
clc
push
pop
notl
add
jns
fmull
insb
push
clc
or
push
push
clc
pop
clc
mov
testl
pushf
test
jae
add
jle
xbegin
lret
sar
add
add
push
add
sbb
xor
add
add
js
adc
add
clc
sbb
add
add
push
add
clc
and
add
clc
fs
jp
movsl
clc
stc
mov
clc
mov
clc
enter
mov
scas
mov
sub
inc
add
fistl
add
and
add
gs
stos
aas
inc
add
sbb
test
nop
push
add
data16
imull
mov
xchg
mov
add
cmp
fs
in
lret
lcall
clc
push
sub
sub
clc
mov
sahf
xchg
in
cwtl
mov
pop
out
aad
xor
add
lods
or
inc
add
and
clc
jl
dec
pop
mov
add
clc
cmp
add
fwait
or
xchg
pop
aad
push
add
nop
into
lret
stos
nop
jmp
movsb
jbe
jmp
dec
cltd
pop
fucom
clc
je
push
or
add
add
not
repz
rol
clc
jecxz
sbb
add
add
clc
arpl
add
cwtl
loop
out
inc
clc
add
adc
add
out
jb
add
sbb
inc
add
cmp
jmp
mov
clc
in
clc
cmp
add
loop
lock
mov
nop
jmp
inc
mov
cmpsl
add
clc
pop
mov
clc
aad
pop
cld
lret
clc
or
dec
add
add
add
xlat
out
fisubrs
xbegin
add
and
add
mov
ret
fdivl
daa
clc
ds
lods
xor
jb
add
mov
push
stc
jmp
mov
add
xchg
cltd
jg
xchg
pushf
jle
das
xbegin
add
ljmp
inc
clc
sar
xchg
test
cmp
add
mov
add
fdivl
add
add
jbe
clc
imul
call
add
sti
adc
add
push
dec
sub
into
in
lods
push
mov
nop
jmp
in
jmp
push
clc
xor
add
aad
add
add
add
fistl
xchg
imul
jle
loop
xor
add
push
clc
adc
add
sub
add
test
cs
add
imul
clc
aad
pop
jg
adc
add
ja
add
addr16
daa
clc
out
mov
imul
xor
add
inc
add
sbb
add
clc
roll
add
add
clc
pop
mov
cwtl
inc
add
imul
imul
sbb
clc
inc
add
popa
add
pop
cmc
into
movsb
clc
aas
clc
ja
xchg
push
add
fists
xor
add
add
mov
inc
add
shlb
add
jb
add
clc
jo
add
clc
not
cmpsl
clc
lock
jo
add
clc
push
lret
xor
pop
or
add
scas
cmp
ficoms
inc
test
call
add
add
add
pusha
add
lret
cmp
mov
add
push
clc
movsl
clc
ficompl
mov
nop
jmp
aad
add
add
int
add
in
mov
push
dec
in
arpl
add
sub
clc
int3
pusha
add
push
sbb
push
pop
xor
mov
add
clc
pop
cmpsl
clc
lods
add
cltd
mov
sar
push
add
mov
add
push
add
fdivr
repz
and
add
add
mov
mov
clc
out
xor
add
imul
or
clc
push
add
call
aad
xchg
jecxz
test
and
jno,pn
add
clc
adc
add
repnz
add
clc
pop
mov
or
out
mov
or
clc
sti
cld
push
pushl
notb
add
sub
ret
cmp
fcoml
jmp
adc
jle
push
fistps
clc
xchg
mov
mov
push
mov
xchg
ret
mov
xchg
dec
mov
pop
jns
addr16
and
add
cmpsb
clc
mov
sub
clc
cli
ja
fs
cmp
push
nop
jmp
cltd
add
add
sti
add
inc
add
out
es
in
mov
clc
push
or
jae
add
aad
inc
add
gs
int3
ret
clc
das
add
add
add
adc
sbb
cwtl
mov
cli
loop
inc
cmp
or
aam
daa
clc
aam
and
add
add
push
add
nop
jmp
adc
jbe
pusha
add
jp
dec
dec
mov
test
mov
fnstenv
add
mov
bound
add
fwait
inc
clc
pop
repnz
cmp
cmpsb
clc
sub
imul
xchg
out
int3
sahf
decl
jmp
mov
loop
lgs
add
mov
clc
mov
cmp
imul
dec
push
pop
popf
push
add
rcl
xor
add
inc
clc
popa
add
dec
outsb
aad
leave
pop
test
push
add
sbb
add
add
mov
clc
push
ret
pushf
ss
jb
add
xchg
notb
add
mov
or
add
in
adc
es
pusha
add
or
mov
add
nop
dec
fbstp
test
insl
and
add
add
cli
adc
add
mov
lea
inc
clc
ss
cmp
clc
cmpsl
clc
mov
aaa
gs
sbb
clc
pusha
add
scas
negb
xor
add
cld
sub
and
add
mov
test
and
add
clc
push
sbb
scas
lods
nop
xchg
cwtl
hlt
mov
clc
jnp
movsb
clc
ret
clc
xor
leave
aad
pusha
nop
jmp
ret
ret
add
in
hlt
inc
add
movsl
clc
stos
jle
fmul
scas
iret
test
add
sbb
jmp
das
mov
aad
mov
jne
add
cwtl
cmp
clc
test
xchg
push
test
outsb
dec
insl
dec
push
iret
cmc
mov
push
mov
pop
xabort
add
into
sbb
add
inc
add
pusha
add
or
jo
add
or
clc
pop
or
add
sub
add
add
fisubl
cmc
lahf
aad
stc
sbb
jmp
xchg
add
outsb
add
add
clc
jle
push
cmp
fcoml
es
inc
add
lahf
cmc
mov
add
out
sbb
add
out
jne
sarb
aad
mov
clc
popl
add
sbb
sub
sub
and
add
cmp
mov
loope
push
clc
arpl
add
sti
or
clc
jno
add
sub
pop
call
mov
xchg
ret
add
in
add
clc
add
xchg
stc
dec
cmp
sbb
iret
or
inc
add
cltd
push
add
jle
clc
cmpsl
clc
xor
add
add
add
pop
lods
loop
jle
imul
outsb
cmp
xor
add
lea
add
add
add
push
push
push
mov
xchg
ret
mov
aas
adc
jle
jmp
add
in
mov
add
in
mov
add
test
shlb
add
adc
add
and
nop
jmp
cli
xor
add
or
push
ret
add
mov
daa
add
adc
stos
ror
pop
sbb
mov
push
nop
jmp
add
insl
fadds
add
into
je
push
add
cmp
clc
mov
clc
lods
imull
add
add
nop
jmp
jle
cmpsl
movsb
es
leave
push
and
add
fstpl
and
add
add
fisttpll
clc
or
clc
inc
add
cmp
sar
jl
clc
mov
add
leave
loopne
aam
clc
mov
clc
mov
add
pusha
add
cmpsb
clc
test
clc
mov
add
lods
xchg
add
add
sbb
nop
jmp
add
xchg
out
sub
xchg
jno
add
add
add
nop
jmp
push
jnp
das
add
gs
and
add
inc
clc
fsubrl
int3
jl
mov
nop
jmp
add
pop
add
aaa
dec
into
fisttpll
clc
pop
and
add
inc
clc
bound
add
pop
rcrl
mov
nop
jmp
je
outsb
jle
sub
repz
add
js
cmp
and
add
frstor
add
inc
add
lods
stc
movsb
clc
fs
insl
mov
push
sub
push
push
mov
xchg
ret
ret
push
sbb
clc
cmc
outsl
cwtl
int
add
gs
lods
out
in
add
add
sub
add
mov
clc
cld
mov
imul
stc
push
pushf
push
outsl
pop
jle
mov
add
add
xor
add
clc
cmp
movsl
clc
cmp
add
sub
mov
sub
outsl
leave
imul
popf
aaa
icebp
in
fadd
clc
stos
mov
repnz
nop
dec
scas
pop
cld
lods
sbb
push
mov
add
inc
add
mov
add
clc
mov
clc
jle
clc
xor
mov
aas
cmp
add
and
add
push
jmp
or
adc
out
sub
and
add
clc
adc
add
insl
jb
add
mov
mov
dec
sub
stos
pop
clc
loopne
mov
xchg
repz
ret
sar
lods
loop
push
add
nop
jmp
mov
xor
jle
sahf
loope
test
add
inc
add
mov
sub
add
lcall
clc
and
icebp
sub
mov
add
xchg
mov
add
leave
leave
cmpsl
clc
call
push
clc
mov
and
add
add
add
jecxz
adc
add
clc
xlat
in
jne
lret
mov
pusha
add
scas
dec
popf
loopne
lcall
add
push
add
clc
pop
mov
add
bound
add
fnstenv
shlb
add
add
add
add
bound
add
add
jno
add
sar
and
add
add
xchg
hlt
repnz
clc
mov
ja
add
stc
addr16
outsb
pop
popf
test
popf
mov
clc
inc
add
adc
add
add
add
push
or
cmp
cs
scas
insl
sub
test
jmp
inc
daa
inc
pop
jecxz
fldt
sub
clc
loope
pop
nop
cld
sarb
clc
cmp
xlat
je
mov
nop
jmp
mov
mov
inc
add
and
in
dec
repz
fwait
lcall
dec
fsubs
cmp
add
adc
bnd
clc
call
mov
mov
es
push
aas
arpl
add
add
pop
jle
add
pop
xor
add
add
popa
add
cs
adc
movsl
clc
stos
dec
vmread
sar
add
ja
int3
push
outsl
nop
jmp
mov
daa
inc
dec
sub
adc
add
cmp
xor
add
add
add
sbb
add
xor
add
add
es
rorb
sbb
repz
mov
pop
test
cmp
clc
js
add
jle,pt
clc
jp
push
xchg
cmp
clc
sub
add
vunpcklps
cld
mov
clc
cmp
add
flds
cmp
test
xchg
mov
add
movsb
clc
jmp
lods
mov
arpl
add
xchg
fidivs
inc
add
inc
add
adc
add
xor
add
cmp
nop
xchg
inc
add
mov
cld
inc
add
cltd
mov
aas
or
in
jl
sti
cli
cmp
add
adc
add
clc
in
xchg
sbb
dec
push
xor
add
or
push
or
mov
fidivrl
dec
push
add
and
add
pushf
clc
cmp
inc
clc
std
lahf
xchg
sahf
mov
clc
popa
add
cmp
add
jecxz
pop
outsb
and
or
xor
add
loop
push
mov
sarl
clc
inc
add
fildll
xlat
add
add
add
jno
add
or
sub
sbb
sub
add
add
xor
repz
clc
fwait
pop
and
add
add
sbb
add
clc
inc
clc
pop
adc
add
clc
pop
fisttpl
outsl
jmp
cmp
jae
add
add
dec
and
add
add
gs
mov
inc
add
out
push
and
add
add
sub
add
and
ds
nop
jmp
add
loop
loop
clc
outsl
stos
and
push
add
push
clc
sbb
sub
add
add
fs
jmp
nop
jmp
daa
xchg
mov
inc
add
out
sub
clc
mov
clc
cwtl
inc
add
jle
loop
lret
and
add
cli
fadds
clc
sub
ss
popl
add
clc
jno
add
outsb
push
loop
out
push
or
xchg
push
inc
add
enter
add
jae
add
clc
faddp
clc
push
add
loop
cmp
xbegin
pop
inc
clc
push
add
add
add
clc
xchg
enter
clc
sbb
add
add
adc
add
add
sub
stos
ja
insl
xor
add
add
nop
jmp
pcmpeqd
mov
push
movsb
clc
xchg
sbb
or
pushl
add
in
movsb
clc
xchg
dec
loop
hlt
int
movsl
clc
cmp
mov
je
add
mov
add
and
add
clc
sub
xchg
xchg
lret
rcll
rclb
cmp
lods
mov
repnz
mov
add
outsb
das
cmp
mov
nop
jmp
daa
add
xchg
add
add
jno
add
mov
mov
xabort
sbb
leave
jle
clc
jmp
add
add
add
es
and
add
movsb
clc
fs
mov
leave
jnp
add
and
add
add
clc
ret
clc
sbb
lods
call
jnp
adc
aas
aas
cmpsb
clc
lcall
cmp
add
outsb
push
add
das
cltd
fstps
test
clc
ss
push
shr
push
add
push
popf
lret
cld
repnz
sub
push
lods
ljmp
in
lods
mov
push
mov
xchg
ret
mov
loop
lods
fs
mov
cld
dec
sub
lcall
jno
add
pop
faddl
add
test
stos
jle
stos
xor
das
outsb
push
xchg
ljmp
add
das
xchg
add
add
mov
jne
nop
jmp
or
std
adc
jns
sub
jns,pt
pop
test
add
lahf
cmp
clc
add
add
dec
or
or
clc
inc
add
mov
clc
push
xchg
sahf
ds
and
add
cs
lcall
jno
add
add
add
jnp
clc
jp
add
jne
das
test
mov
cltd
push
add
cmp
xchg
ja
add
add
pop
adc
add
add
jne
add
fadd
clc
mov
into
xor
add
cmp
fs
xchg
nop
int3
jmp
cli
pop
or
cmp
jnp
mov
clc
sbb
sti
xor
add
dec
xabort
in
mov
add
scas
pop
mov
mov
mov
je
fs
sar
add
xor
add
cmpsl
clc
cmp
add
cld
dec
scas
shll
clc
fsts
add
cmpsb
clc
add
add
add
call
or
clc
out
js
mov
lea
mov
push
mulb
add
push
pop
clc
add
add
add
add
clc
mov
movsl
clc
xlat
testb
incl
sti
nop
jmp
stos
add
inc
add
mov
clc
das
int
ds
clc
dec
ficomps
lods
or
clc
cmp
js
clc
rorl
movsb
clc
fmul
in
ret
mov
add
cmp
sub
sbb
es
jo
add
jle
add
add
add
add
cmp
fidivrs
sbb
add
and
add
lea
js
add
mov
clc
sahf
dec
lods
pop
repz
dec
nop
mov
clc
insl
decl
mov
and
add
outsb
push
daa
clc
xchg
stos
and
ja
and
pop
xchg
cs
es
jecxz
xchg
and
add
clc
stc
js
hlt
add
add
cmp
ret
clc
jbe
mov
inc
add
out
dec
mov
mov
jmp
add
jbe
stos
je
clc
fldcw
mov
mov
add
cmpsl
clc
in
dec
push
pop
aam
ret
clc
push
add
repz
clc
scas
fsqrt
insb
xchg
cmp
fadds
je
clc
mov
add
add
adc
out
lea
cli
into
cld
adc
cmp
add
mov
movsl
clc
mov
push
fiadds
es
pop
push
clc
mov
sub
scas
out
and
and
pop
shrl
push
xor
add
sbb
test
clc
xor
add
pop
inc
clc
fimuls
cmp
shlb
add
add
adc
add
clc
fisubl
jb
add
cmp
pop
jns
imul
in
and
add
sti
clc
inc
add
fs
or
clc
lods
adc
movsl
clc
iret
cmove
cmpsl
clc
aaa
mov
add
nop
jmp
add
mov
clc
xor
add
add
shl
clc
cmp
pop
test
jno
add
add
add
ret
mov
test
pop
imulb
add
mov
add
std
xchg
paddusw
das
daa
mov
add
inc
add
std
aas
inc
add
out
xchg
jb
add
mov
clc
xchg
decl
jmp
cmpsl
add
adc
clc
cli
jle
in
test
mull
cmp
and
add
add
or
add
add
mov
nop
jmp
mov
pop
enter
enter
sub
add
push
add
pop
clc
lret
clc
test
call
add
nop
jmp
adc
dec
xchg
pop
xchg
test
cltd
push
ja
loopne
js
clc
int
add
mov
clc
and
add
add
sar
mov
add
sbb
nop
jmp
daa
pop
add
scas
cmp
dec
jecxz
imul
sbb
clc
cmp
add
pusha
add
xor
into
fistpll
clc
movsl
clc
sbb
sbb
movsl
clc
or
add
pop
xlat
frstor
imul
mov
jl
clc
sar
aaa
jno
add
fs
pop
test
mov
stos
popa
add
mov
loopne
add
add
out
movsl
clc
push
cmp
in
loop
in
add
add
xor
add
lods
pop
ja
cs
xchg
fiaddl
cmp
mov
int3
lods
leave
test
add
add
sbb
incl
sub
jbe
jle
add
push
arpl
add
clc
adc
add
add
pop
sar
add
adc
add
clc
mov
xchg
mov
clc
pop
sti
iret
lahf
push
clc
jg
add
aaa
ljmp
loope
popf
jbe
inc
clc
mov
jecxz
add
in
daa
jnp
inc
clc
stc
jb
add
js
push
add
flds
add
add
jmp
cmp
fsts
add
or
add
push
inc
add
lods
dec
clc
daa
clc
mov
and
sub
inc
add
outsb
mov
sbb
jne
nop
jmp
cli
add
movsb
or
aaa
fs
call
call
mov
xchg
ret
das
add
in
push
push
nop
jmp
add
fldenv
clc
cld
xchg
sbb
call
je
cmc
inc
clc
push
mov
add
push
add
push
adc
add
add
add
and
add
popa
add
pusha
add
sbb
clc
fisttps
add
add
addr16
mov
add
add
add
cmpsb
clc
and
xchg
sbb
add
add
ret
cmp
rolb
clc
jbe
clc
pop
mov
add
data16
ja
clc
inc
clc
inc
clc
ja
jno
add
add
add
aam
clc
jp
add
add
add
clc
dec
adc
cmp
gs
cld
push
add
icebp
in
ds
clc
mulb
add
jecxz
test
clc
repz
add
cmp
add
lock
add
xchg
test
xlat
enter
sbb
mov
sar
ficoms
add
repnz
jnp
clc
push
xor
nop
jmp
das
mov
cmpsl
shrl
cld
cli
push
clc
out
xor
add
add
mov
mov
dec
mov
sub
clc
sbb
cmp
xor
add
add
clc
and
jmp
add
je
iret
pop
or
clc
dec
scas
xor
add
add
add
push
add
addr16
or
mov
mov
clc
mov
clc
mov
add
inc
clc
sbb
clc
dec
incl
lret
out
call
add
cmp
xchg
pop
dec
test
xor
add
call
jmp
unpckhps
lods
sti
verw
or
clc
fadds
inc
clc
call
add
push
cmp
clc
push
clc
clc
and
pop
sbb
add
add
jle
adc
cmc
cmp
xchg
lea
clc
mov
pop
mov
clc
xor
add
mov
lods
lret
add
add
add
push
mov
xchg
ret
std
jnp
add
stc
pop
push
movsb
clc
cwtl
jae
add
mov
add
jmp
mov
clc
sub
clc
ja
xchg
jle
enter
fs
cmp
add
clc
movsb
clc
lret
push
mov
mov
xchg
and
add
mov
pop
mov
mov
fcmovne
pop
jle
jae
add
inc
add
or
mov
clc
sub
and
add
in
adc
add
add
dec
imul
jle
clc
stc
sub
clc
aam
xor
xor
clc
xchg
sbb
clc
dec
or
clc
ret
add
inc
clc
aam
lcall
fsubrs
or
pop
inc
add
sub
clc
rol
clc
out
push
add
pop
clc
out
sbb
dec
cwtl
dec
push
rcll
push
mov
xchg
ret
add
push
lea
test
imul
push
add
popf
movsl
clc
lcall
mov
add
aam
xchg
aad
fsubr
gs
ret
clc
push
add
xchg
scas
cmp
clc
gs
sbb
sub
jbe
add
leave
mov
cmp
add
nop
pop
cld
test
sub
clc
push
cmp
jne
in
outsl
cmovge
clc
insl
inc
add
cmp
call
mov
add
mov
push
clc
scas
lods
cmp
clc
bound
add
clc
insl
add
pop
xchg
movsl
clc
xor
add
enter
xchg
pop
cmp
insl
dec
cmc
mov
and
add
leave
mov
clc
sbb
clc
adc
add
inc
add
sar
hlt
sub
scas
mov
inc
add
mov
add
cltd
cs
push
add
cltd
or
in
in
inc
add
test
mov
nop
jmp
aad
jbe
xor
add
cmp
ds
leave
or
xchg
je
inc
clc
popa
add
ret
clc
into
jle
push
xchg
pushl
fldl
movsb
add
xor
add
lahf
decl
nop
jmp
daa
in
outsb
std
add
cmp
jp
clc
fwait
cmp
mov
or
clc
gs
and
dec
fiadds
adc
add
es
dec
inc
clc
mov
add
lcall
add
push
push
push
mov
xchg
ret
adc
push
add
jp
and
add
jnp
repz
loope
sar
ja
clc
and
add
scas
pushf
roll
in
adc
add
add
test
clc
nop
add
add
mov
inc
add
jne
lret
add
add
push
call
incl
pop
xor
mov
nop
jmp
adc
fldl
add
add
xor
add
out
mov
cmp
decl
mov
add
jmp
add
bts
adc
add
add
adc
clc
ss
add
frstor
add
push
call
incl
in
cmp
clc
std
mov
add
add
mov
add
cmp
clc
ret
clc
stos
scas
mov
mov
nop
jmp
in
jnp
mov
test
pop
imul
jo
add
or
aas
cltd
fisttpl
push
pop
sti
arpl
add
clc
loopne
ja
push
add
cmp
add
push
mov
add
sub
ficomps
mov
xchg
ret
mov
add
stc
cmc
gs
ja
xor
add
fadd
clc
vcmpps
mov
cmp
add
int
add
jnp
clc
enter
mov
or
xchg
cmp
clc
mov
arpl
add
jns
scas
fcos
jne
nop
jmp
add
jns
jo
add
add
add
mov
push
cmp
mov
add
fdivs
clc
mov
pop
clc
gs
inc
clc
int
and
add
clc
jbe
inc
clc
insl
mov
ret
clc
jle
cmpsl
clc
sbb
add
fadd
clc
mov
jbe
add
fcomps
fwait
das
pop
sahf
int3
add
add
add
lods
call
inc
nop
jmp
push
mov
daa
loop
sub
clc
pushf
push
out
dec
push
pop
nop
jmp
aad
adc
sub
xchg
sub
push
mov
xchg
xchg
adc
add
mov
mov
add
leave
or
clc
cmp
movswl
nop
jmp
adc
inc
add
inc
add
pop
or
or
add
mov
sbb
loope
fisubrl
mov
popa
add
pop
sub
add
mov
clc
add
add
pop
pop
adc
je
add
call
rcll
jb
add
add
or
sar
sub
inc
clc
test
inc
add
inc
add
sar
call
jmp
mov
daa
pop
clc
out
fsub
clc
mov
inc
clc
mov
add
and
clc
mov
clc
call
or
mov
cmp
clc
leave
mov
and
add
xor
clc
dec
lock
int3
xlat
jge
sarl
cltd
and
add
add
inc
add
scas
fmul
in
mov
clc
xchg
insb
mov
add
bound
add
clc
inc
clc
aam
add
loopne
pop
shll
xchg
outsb
test
pop
add
add
call
add
or
mov
nop
jmp
inc
push
mov
push
dec
stos
testl
inc
add
or
push
xor
nop
jmp
jmp
je
popf
dec
lcall
pop
clc
xor
add
clc
repnz
add
push
mov
aam
add
jns
add
nop
jmp
daa
movsb
jnp
stos
ret
or
add
out
mov
adc
add
sbb
icebp
dec
mov
add
add
clc
in
xchg
sbb
mov
clc
or
lock
sub
add
ljmp
fiaddl
add
add
pop
add
outsl
and
add
cli
sub
cmp
mov
add
aad
inc
clc
add
add
clc
jb
add
js
je
scas
addr16
insl
insb
xor
add
repz
xor
leave
sti
adc
add
add
addr16
loop
ss
jl
cmpsb
clc
fsub
clc
mov
cmp
mov
jnp
idivb
scas
sbb
lea
nop
jmp
cmpsl
cltd
sldt
add
lods
xabort
out
shlb
add
jle
add
xchg
xchg
push
add
sub
into
jae
add
jne
nop
jmp
cmp
xbegin
ja
hlt
mov
rclb
pusha
add
mov
jp
gs
pop
jnp
adc
loope
push
xchg
mov
add
adc
clc
test
push
mov
nop
jmp
lods
cmp
xchg
xchg
push
dec
xchg
test
pop
imulb
inc
clc
pushl
rclb
add
jbe
add
jle
nop
loopne
inc
add
loop
jl
clc
loope
xor
add
clc
add
sbb
push
xor
add
cmpsl
popa
add
cli
call
add
cli
ret
add
sbb
cmc
stos
xchg
inc
add
das
pop
loope
inc
add
imul
sub
add
daa
clc
mov
int
clc
and
in
es
rolb
aaa
lcall
jmp
xchg
mov
ret
and
add
loop
lcall
call
add
jg
clc
fs
and
add
cmp
sar
add
add
add
neg
pop
je
notl
jmp
stos
adc
add
ss
insb
add
xor
add
clc
clc
jbe
or
stc
sub
push
mov
add
mov
leave
sub
add
xor
adc
add
pop
cltd
mov
mov
nop
jmp
sub
movntq
out
loope
rolb
mov
add
outsb
sar
movsb
clc
push
or
xor
mov
push
mov
xchg
ret
std
cmp
lret
icebp
mov
add
add
pop
mov
add
daa
clc
dec
rclb
clc
push
add
ret
clc
jg
mov
clc
xchg
data16
mov
clc
xor
add
or
mov
nop
jmp
add
add
or
inc
add
xbegin
std
ja
clc
into
in
pop
dec
jnp
clc
xor
add
mov
add
mov
cmc
test
mov
and
nop
jmp
cmp
xor
clc
lahf
out
adc
jmp
jbe
jnp
pop
add
test
add
push
add
dec
and
add
call
nop
jmp
xor
das
push
cmc
clc
jl
adc
adc
add
clc
stos
sub
int
mov
add
clc
js
add
bnd
mov
nop
jmp
mov
add
clc
mov
popa
add
divl
add
add
xor
add
aam
pop
inc
add
mov
clc
pushf
fnstcw
inc
add
icebp
fs
cmp
push
pop
nop
jmp
add
add
or
jnp
add
lahf
movsb
clc
mov
clc
fsubrs
cmp
clc
fs
hlt
es
das
mov
mov
mov
sbb
clc
or
sbb
cmp
add
pushf
sbb
sbb
and
movb
add
nop
jmp
add
dec
xchg
mov
dec
ds
clc
xchg
fwait
cmp
sbb
jmp
adc
sti
jle
jne
push
add
inc
add
add
add
sub
cmp
add
and
add
sbb
add
scas
imul
insb
pop
stc
sbb
clc
jbe,pt
or
sub
jl
hlt
cmp
add
icebp
sti
inc
add
jbe
cmp
ss
sar
clc
insb
mov
add
int3
mov
dec
nop
jmp
mov
cltd
or
mov
mov
stc
add
add
clc
jg
sub
clc
jp
add
lock
clc
or
clc
and
or
add
pop
test
jno
add
push
cld
and
lods
pshufw
test
cmp
or
clc
lret
clc
call
clc
mov
enter
sar
add
sub
mov
add
inc
clc
movsl
clc
int
add
sub
pop
aad
sahf
aam
add
xchg
ret
clc
jle
clc
pop
pop
aaa
inc
clc
fstpt
stos
bound
add
pop
dec
daa
clc
sti
push
jne
xchg
cmpsb
clc
mov
push
add
test
jecxz
fistps
sti
mov
pop
repnz
add
sbb
nop
jmp
lods
mov
cli
das
inc
inc
clc
mov
push
jmp
mov
daa
and
add
add
add
pop
movsb
clc
ljmp
xchg
stos
sbb
shll
add
cmp
jmp
std
add
cltd
das
cltd
pop
scas
push
pop
lods
mov
test
jmp
add
inc
lahf
imul
jp
add
mov
cmp
jmp
in
sti
std
adc
scas
sub
test
jb
add
inc
add
out
in
or
cmp
mov
adc
clc
xor
add
pop
xor
add
sub
add
push
xor
add
aaa
xor
add
fisubrs
add
clc
adc
add
fnstcw
dec
lods
mov
test
clc
adc
test
clc
mov
int3
and
stos
xor
add
add
out
jle
clc
dec
pusha
add
sbb
cmpsb
clc
mov
fldenv
clc
stc
pop
clc
cmc
outsl
ja
add
xabort
add
xchg
cmp
add
scas
shlb
cmp
add
jmp
jbe
fisttpll
xchg
xchg
imul
add
add
pushf
fildll
jmp
sub
sbb
cs
inc
add
sub
cmpsb
clc
pop
xchg
sahf
pop
imul
jns
std
insl
sti
pusha
add
jne
clc
loope
cwtl
fnstcw
push
clc
mov
push
push
sub
fnstcw
inc
clc
or
xchg
scas
pop
clc
dec
mov
mov
add
sub
mov
adc
add
cmp
clc
ja
add
add
repz
push
shr
nop
jmp
jle
xchg
lods
xor
jo
add
outsl
xor
clc
push
add
and
in
xor
clc
mov
addr16
in
mov
mov
sar
cmp
clc
mov
add
insl
test
jl
add
ret
test
mov
push
mov
xchg
ret
pop
mov
cmc
test
clc
cmp
clc
aad
clc
push
jecxz
popl
lods
cli
aaa
xchg
push
outsl
hlt
hlt
fxch
jl
add
cmp
add
cmp
jb
add
cld
xchg
jbe
movsl
clc
fstps
jne
clc
rcr
push
sar
jecxz
data16
lock
add
mov
jnp
and
add
xchg
sbb
mull
in
xor
adc
mov
or
ja
inc
add
push
jne
nop
jmp
jmp
push
add
bound
add
mov
incl
lods
add
jb
add
popa
add
lods
inc
add
shrl
not
nop
jmp
add
movsb
sahf
adc
add
clc
mov
js
cmp
add
clc
imul
xabort
xchg
cmpsb
clc
insl
sahf
push
clc
loopne
xchg
push
add
cld
fxch
mov
clc
cmp
xor
add
nop
jmp
cltd
aad
in
mov
cmpsl
repnz
push
add
nop
jmp
stos
xor
jb
add
clc
dec
scas
cmp
clc
in
loopne
hlt
fs
gs
pop
or
add
and
add
lret
mov
sbb
jae
add
clc
sub
clc
push
outsl
mov
stc
lret
mov
clc
lahf
rcll
sbb
add
loop
mov
add
clc
add
add
mov
mov
pop
pop
cmp
clc
cwtl
pop
pop
movsb
clc
clc
in
je
clc
imul
pop
adc
add
clc
ret
clc
sbb
sbb
sbb
gs
cs
clc
inc
add
js
inc
clc
push
inc
clc
xbegin
add
clc
sar
add
push
add
popf
inc
clc
sub
jle
cmp
cli
dec
mov
xor
clc
sar
mov
mov
xchg
ret
aad
and
add
add
cmp
clc
lret
sti
mov
aaa
mov
push
clc
in
fwait
sub
pop
enter
add
xor
add
or
or
out
inc
add
aam
clc
fstl
sub
clc
adc
add
clc
clc
sar
sar
syscall
clc
pop
add
test
insb
in
jmp
add
mov
sub
add
add
scas
cmpsl
clc
mov
inc
add
add
pop
lahf
out
hlt
cwtl
jmp
stos
push
add
jle
clc
mov
stos
inc
clc
pop
add
add
mov
out
cmp
add
mov
add
and
add
int
nop
jle
xor
add
out
stos
mov
add
repz
scas
ret
gs
int
add
add
ficomps
sub
dec
lods
jp
clc
lods
or
out
jne
dec
xchg
push
pop
jg
mov
cmp
and
add
add
call
repnz
add
fisubl
add
push
nop
jmp
jle
lods
inc
add
adc
lret
cmp
fbld
sub
jecxz
ljmp
insl
fidivrs
xchg
add
add
sbb
call
nop
jmp
xor
cltd
cltd
mov
add
clc
pop
inc
clc
pushf
leave
mov
movsb
clc
cmc
add
add
add
aas
or
clc
loopne
lret
lock
test
cmc
mov
bound
add
psubw
ds
or
clc
aas
sub
sub
mov
add
ret
clc
scas
adc
add
add
mov
fs
mov
cmp
add
cs
add
outsb
imul
clc
push
add
ret
clc
fmuls
add
mov
sbb
incl
loopne
xbegin
arpl
add
add
fdiv
cwtl
jo
add
clc
fsubs
mov
test
popf
mov
outsl
hlt
pop
and
add
clc
jmp
xor
add
stos
jno
add
and
mov
jmp
jmp
cltd
or
xor
je
je
push
jmp
mov
fisttpll
outsb
cs
pusha
add
fcompp
daa
clc
xchg
cs
mov
nop
jmp
add
notl
cmp
rclb
add
adc
std
adc
imul
push
cmp
aam
xchg
nop
jmp
in
mov
loopne
das
adc
xchg
or
dec
add
sub
push
nop
jmp
cmpsl
mov
mov
add
adc
add
clc
push
add
lret
icebp
loopne
adc
add
add
push
xor
add
clc
lock
out
lret
insl
lahf
adc
add
clc
sbb
mov
add
mov
sub
add
sub
push
mov
clc
out
out
and
add
lret
xor
add
add
adc
add
sahf
sti
and
add
add
cs
pop
adc
add
cmp
clc
mov
add
nop
xor
clc
mov
push
or
adc
add
add
adc
add
mov
lahf
int
jge
ret
clc
mov
pushf
ret
add
sti
mov
je
insb
test
fstl
aam
clc
test
daa
clc
adc
clc
push
mov
lea
dec
pop
test
imul
mov
fwait
nop
ja
push
nop
jmp
inc
add
xchg
mov
mov
jbe
jne
nop
jmp
adc
inc
add
push
test
dec
in
je
add
fmull
jl
push
test
clc
inc
clc
dec
mov
push
add
cwtl
ja
push
add
mov
call
jle
push
cmp
push
test
mov
add
out
add
pusha
push
mov
xchg
ret
add
adc
clc
adc
push
clc
cmp
leave
fsubrp
jb
add
add
ds
mov
clc
push
add
or
push
push
add
jmp
add
and
add
push
jmp
nop
jmp
loop
add
loopne
lret
clc
jo
add
jge
pop
test
cld
test
pop
mov
jne
cmp
mov
test
daa
clc
sti
xchg
fsubl
add
add
fcmovb
clc
jo
add
je
add
nop
jmp
std
outsb
je
fcompl
add
clc
inc
clc
out
xchg
ljmp
clc
loopne
std
cmp
add
mov
clc
sbb
push
add
jno
add
mov
clc
mov
clc
inc
add
xabort
clc
cmp
add
add
add
jbe
cmp
aam
jbe
xor
add
cmp
clc
push
sub
adc
incl
mov
ss
icebp
sub
add
pop
scas
mov
add
add
sub
add
cmp
cltd
addr16
movsl
clc
cmc
test
inc
add
in
pop
clc
pop
in
test
push
and
add
fs
xlat
adc
add
add
shll
lret
clc
fistpl
gs
cmpsb
clc
xchg
outsl
test
clc
pop
movsb
clc
and
repnz
outsb
dec
lea
xor
lods
test
jb
add
mov
xlat
and
add
add
xchg
xor
add
movsl
clc
in
shlb
clc
cmp
xchg
mov
add
insl
nop
pop
aas
mov
pop
cwtl
sub
add
sub
dec
in
push
add
fsubrs
cli
movsb
clc
sarb
add
cltd
cmpsb
clc
or
clc
clc
jne
clc
xlat
lods
lret
outsb
shll
add
mov
push
add
jns
hlt
sar
clc
pop
pushf
daa
clc
mov
add
mov
add
add
add
ret
cmp
xchg
xchg
or
clc
icebp
je
add
je
add
mov
add
test
call
add
dec
jmp
jle
add
insb
mov
negl
mov
cwtl
pop
pop
in
jnp
mov
mov
fidivs
clc
loop
aaa
stos
add
add
clc
adc
add
mov
add
lock
add
mov
clc
and
add
imul
loopne
or
data16
ret
clc
divb
add
sbb
lahf
repz
xchg
cwtl
sbb
dec
insb
dec
fidivrl
mov
add
cld
and
add
clc
jecxz
xabort
clc
add
add
clc
mov
inc
add
jmp
mov
add
incl
adc
add
jnp
mov
add
fisttpll
aam
sbb
clc
push
add
push
and
push
mov
xchg
ret
lods
adc
sbb
clc
inc
add
push
add
stos
hlt
clc
push
mov
pop
add
scas
jg
clc
int
add
dec
in
mov
clc
pushf
stos
mov
jmp
add
dec
mov
add
pop
xlat
adc
add
rep
nop
jmp
add
mov
xor
clc
inc
clc
insl
cmp
or
pop
xor
clc
ret
xchg
jge
pop
adc
add
sub
daa
clc
stc
pop
lods
js
popa
add
je
clc
cltd
pop
or
jg
jns
clc
das
sahf
inc
clc
jo
add
addr16
cmc
aam
clc
or
clc
dec
add
add
add
lret
add
das
sub
clc
lahf
mov
sub
out
lahf
cs
jmp
clc
pop
cmpsl
clc
mov
inc
clc
sub
mov
aam
divl
add
push
add
mov
nop
jmp
mov
sub
mov
in
arpl
add
add
add
incl
jle
in
sbb
rcrb
call
add
adc
fsubrp
lcall
mov
clc
xchg
fildl
jmp
or
add
es
sti
pop
clc
insb
jecxz
dec
mov
adc
add
hlt
jne
dec
jp
xor
add
pop
xchg
mov
add
loopne
mov
add
cmp
xchg
test
push
add
sar
xlat
lret
ds
clc
pusha
add
out
xor
add
mov
add
loopne
decl
inc
mov
outsb
pop
adc
call
cmp
es
pop
jmp
fnstenv
add
ja
mov
clc
out
hlt
cwtl
int
loope
sbb
rcrb
clc
in
add
aad
add
add
add
jge
add
and
mov
test
clc
sbb
add
test
mov
clc
cmpsb
clc
setb
add
sub
stos
mov
popf
sbb
scas
lea
and
inc
add
bound
add
add
mov
filds
in
or
je
js
xor
add
dec
nop
xor
add
mov
clc
in
fcoms
add
dec
adc
add
add
pop
sbb
pop
movsb
clc
mov
adc
add
mov
add
lret
daa
clc
mov
shlb
pop
out
push
movsl
clc
mov
xor
add
add
xor
add
mov
add
iret
mov
imul
xchg
ret
add
stos
jo
add
add
jbe
clc
fwait
cmp
leave
mov
test
lret
push
add
add
daa
clc
imul
enter
enter
int
add
add
mov
imul
inc
aad
mov
adc
mov
add
jg
jne
lret
stos
mov
mov
nop
jmp
std
jbe
jbe
add
add
cmpsb
clc
xchg
cmp
iret
fs
stc
in
mov
loopne
cmpsl
clc
jle
mov
dec
insl
stos
ljmp
nop
jmp
add
add
mov
aam
call
jmp
xchg
cmp
lcall
or
clc
call
scas
adc
xchg
dec
dec
sahf
xchg
in
or
add
sti
jne
xlat
pop
adc
add
clc
data16
and
add
sub
sbb
add
nop
jmp
mov
xor
add
hlt
xchg
std
jae
add
add
add
pop
clc
fwait
sar
add
jnp
clc
popf
dec
jne
int3
mov
add
addr16
sub
cmp
clc
sar
fistpl
adc
add
add
fstps
mov
movsb
clc
jl
cmp
sar
clc
pop
negb
cwtl
cmp
stos
and
add
add
sbb
jmp
xchg
inc
or
pop
lods
jbe
and
add
clc
in
inc
add
or
sbb
outsb
cmp
and
add
adc
mov
out
ljmp
clc
mov
add
stos
ret
clc
out
ja
sahf
push
mov
clc
jnp
ret
fisubrl
xabort
data16
jmp
push
insl
mov
clc
sub
dec
cli
push
add
jo
add
je
or
xor
add
add
xchg
ret
clc
es
bound
add
add
nop
jmp
inc
in
daa
daa
add
sar
call
incl
jle
loop
add
lret
push
or
add
add
jb
add
add
lret
icebp
cmpsl
clc
sbb
popa
add
adc
add
addr16
cmp
cmp
pop
aam
push
push
nop
jmp
movsb
mov
xor
clc
inc
add
mov
jmp
jbe
pop
das
xchg
sub
and
add
add
add
lods
jmp
cmp
clc
cmp
add
cmp
adc
popf
mov
in
bnd
clc
adc
add
or
clc
adc
clc
mov
insb
mov
and
xor
add
cmp
jmp
mov
jmp
add
nop
jmp
xchg
das
cmpsl
pop
psubd
sbb
mov
jl
incl
sti
cmpb
jle
cmp
add
jg
inc
clc
scas
scas
jge
shll
add
mov
add
mov
jmp
clc
sbb
add
add
cmpsl
clc
lods
test
loopne
pop
iret
mov
or
xor
sar
jmp
das
mov
add
xor
add
xchg
push
clc
lcall
aaa
ficomps
fcompl
add
testb
sbb
std
sub
adc
add
add
add
insl
xor
add
add
clc
test
fcoms
add
or
add
popf
addr16
shrl
and
add
xchg
ss
mov
add
clc
out
sar
push
clc
mov
adc
add
push
imul
ret
clc
fs
lret
mov
in
hlt
mov
fisubrs
insb
sub
clc
mov
jo
add
add
clc
mov
push
lcall
clc
out
rorb
stc
repz
add
add
add
int
clc
mov
mov
add
addr16
stos
dec
cmpsb
clc
lock
inc
add
inc
add
adc
add
add
nop
jmp
lods
daa
jbe
lods
mov
stc
and
pusha
add
mov
mov
jle
clc
lret
test
int
aas
push
add
cld
out
in
xor
add
hlt
rcll
mov
aaa
push
mov
clc
in
cltd
add
movsl
clc
add
add
xchg
cltd
mov
ss
sbb
xchg
ret
adc
add
clc
mov
clc
mov
push
mov
clc
iret
mov
or
loopne
lahf
sub
mov
fldcw
lea
dec
rol
clc
push
xor
je
clc
repz
fsubs
clc
repz
or
add
aas
pop
fstps
inc
clc
mov
add
push
mov
xchg
ret
add
pushf
negb
jmp
mov
clc
or
add
clc
mov
imul
mov
sbb
nop
jmp
cmp
add
test
xbegin
jg
dec
jne
clc
aam
mov
sub
lahf
xor
clc
mov
add
push
add
call
mov
das
lock
jns
add
add
add
loopne
in
mov
div
nop
jmp
inc
adc
adc
cs
ror
cmp
xchg
jmp
add
clc
and
add
jmp
inc
sti
adc
or
mov
clc
mov
add
add
jno
add
add
leave
push
add
push
imul
xlat
aaa
or
lods
es
popa
add
popa
add
add
add
add
inc
clc
inc
clc
or
aad
in
inc
clc
xchg
mov
sub
mov
add
mov
nop
jmp
mov
fimuls
add
pop
xor
add
sbb
jmp
stos
xchg
inc
pop
mov
pop
pop
sub
clc
mov
sti
push
mov
add
loope
dec
add
sbb
clc
sahf
loopne
mov
add
or
add
jnp
push
clc
sti
add
add
jg
add
or
jp
clc
gs
jo
add
ret
clc
push
sbb
add
mov
clc
pop
mov
lods
mov
clc
out
xlat
dec
mov
pop
cli
mov
or
add
sarl
out
movsb
clc
dec
insb
ficoms
jb
add
addr16
mov
mov
idiv
mov
std
mov
add
add
jmp
in
adc
add
cmp
clc
test
pop
sbb
add
jae
add
in
sub
push
add
jo
add
dec
cmp
pop
movsb
clc
cmpsb
clc
rorb
cmp
clc
cmc
js
clc
jb
add
add
add
sarb
outsl
scas
out
xor
fs
in
mov
clc
mov
lods
mov
clc
push
add
adc
add
pusha
add
fistpll
daa
clc
imul
adc
add
add
cmp
inc
add
and
in
sub
add
aas
mov
add
add
xbegin
clc
xchg
add
add
add
push
pop
icebp
arpl
add
fidivrl
add
insb
jnp
mov
mov
movb
jmp
lods
ret
cmp
add
xor
add
cld
dec
jmp
add
clc
sub
sub
add
inc
clc
jmp
bound
add
pop
adc
hlt
fcomps
add
add
add
xor
clc
jno
add
fwait
add
add
xchg
push
add
daa
clc
push
repz
clc
enter
clc
mov
scas
mov
arpl
incl
adc
mov
clc
or
js
clc
lret
and
add
clc
cmp
mov
jmp
mov
pop
imul
add
xchg
cmpsb
clc
sbb
flds
sbb
sub
xchg
ret
add
insb
mov
shrb
in
mov
clc
mov
pop
ret
add
add
pop
das
jbe
fwait
lock
clc
stc
ss
sub
stos
sub
pop
clc
pop
xor
add
inc
clc
mov
push
add
sub
lret
cmpsb
clc
inc
clc
inc
clc
movsb
clc
xor
outsb
cmp
in
clc
in
xchg
adc
add
ret
mov
xchg
ret
jle
jp
clc
iret
shrl
pop
std
xor
add
pop
lret
clc
lret
icebp
add
hlt
pushf
in
sub
add
arpl
add
mov
es
movsb
clc
sar
clc
pushf
xchg
fs
jno
add
je
sbb
mov
clc
dec
adc
add
rclb
add
or
clc
lods
xchg
hlt
sbb
adc
add
nop
jmp
add
pop
aas
loope
mov
jae
add
add
jg
clc
movsl
clc
lahf
or
xchg
mov
jmp
add
rcrl
jo
add
adc
add
xchg
pop
or
adc
add
xchg
dec
out
lods
mov
loopne
icebp
lret
out
test
and
and
mov
mov
ss
or
cli
imul
lcall
add
cmp
add
in
cmpsl
clc
dec
inc
clc
sbb
mov
add
xor
add
add
imul
jne
cmp
jo
add
add
mov
clc
outsb
flds
or
fistps
cld
clc
push
clc
aas
lods
cli
ja
out
and
add
clc
sar
cli
add
add
mov
push
mov
nop
jmp
std
add
clc
cmp
clc
push
inc
clc
into
inc
add
fidivrs
clc
dec
xor
add
add
mov
xbegin
add
ss
aas
in
sub
xbegin
cmp
loope
push
icebp
pop
js
aam
cmp
add
sti
inc
add
loope
aaa
in
or
clc
clc
roll
add
sbb
clc
je
fcmovnbe
push
or
mov
add
cmpsl
clc
xlat
popa
add
cmp
lock
add
test
nop
jmp
mov
add
std
aad
xchg
xbegin
clc
xor
add
add
movsb
clc
inc
clc
cmc
mov
loop
xchg
aam
clc
enter
sbb
loope
cmp
in
adc
add
stos
sub
dec
jb
add
scas
xchg
ret
clc
inc
clc
sub
xor
add
add
ret
clc
je
add
cwtl
jae
add
xchg
pminsw
sbb
push
test
add
outsb
repz
ret
or
add
xchg
mov
out
mov
test
xor
add
add
pop
jae
add
mov
add
pop
jns
cmp
imul
fidivrs
push
sar
lcall
jnp
inc
mov
or
add
jp
xchg
cmpsb
clc
cmp
clc
pop
mov
and
jge
adc
add
rcrb
push
add
ss
jo
add
clc
mov
daa
clc
out
lret
push
add
ds
push
inc
add
xchg
enter
jae
add
clc
movsl
clc
and
add
nop
jmp
das
jbe
add
lods
xchg
sub
pop
sar
clc
add
add
inc
clc
cmp
clc
inc
clc
mov
add
jmp
push
add
jo
add
sbb
adc
add
mov
add
imul
lea
nop
dec
outsb
inc
clc
jae
add
add
sar
add
fstpt
lock
test
clc
inc
add
fs
pop
out
insl
cs
lea
nop
jmp
add
cltd
add
clc
inc
add
clc
inc
add
xor
add
out
sub
clc
xabort
movsl
clc
and
test
clc
icebp
cmc
sar
push
add
cmp
rorb
add
xchg
test
cltd
pop
nop
mov
cmp
clc
sti
aam
aad
add
mov
mov
ffreep
clc
xor
add
out
outsb
imulb
clc
mov
add
pop
clc
push
loop
sub
add
shlb
inc
add
mov
clc
lods
or
adc
add
or
int3
xchg
movsl
clc
xchg
pop
mov
mov
fucomp
jno
add
lcall
dec
hlt
mov
add
sbb
clc
add
add
fs
clc
iret
push
add
lcall
add
sub
clc
rol
clc
pop
mov
add
push
add
hlt
daa
clc
dec
data16
sbb
clc
sub
cmp
push
in
sub
int
clc
stos
push
add
fisubrs
scas
inc
add
scas
leave
iret
mov
push
nop
jmp
das
add
cltd
in
clc
nop
sub
mov
add
lods
clc
dec
pop
clc
pop
clc
fisttpl
pop
xchg
lahf
or
dec
rcr
or
sub
push
xor
nop
jmp
or
sub
push
mov
xchg
ret
xchg
or
shr
mov
clc
cmp
clc
fistl
adc
add
cmpsb
clc
mov
je
jno
add
cmp
add
inc
add
ret
or
jge,pn
mov
pop
nop
jmp
daa
mov
add
push
add
into
ds
aam
add
adc
add
mov
dec
call
decl
das
or
cltd
cmp
push
add
icebp
arpl
add
add
movsb
clc
ljmp
dec
lret
pop
fnstenv
add
mov
mov
or
add
imul
cmp
adc
add
aas
repz
fs
popf
push
add
fsubrp
dec
xor
add
test
cmp
jae
add
frstor
loop
mov
call
xchg
ds
clc
stos
mov
sar
stos
xor
add
add
push
lea
lcall
in
mov
push
addr16
mov
aaa
divl
clc
jmp
in
test
ret
clc
fistps
je
push
dec
xchg
inc
add
push
inc
add
fdivs
xchg
aaa
inc
add
mov
clc
mov
add
test
push
mov
jge
mov
ret
clc
rcrl
add
sub
ret
fwait
cmpsl
clc
or
add
bound
add
clc
push
inc
push
mov
xchg
ret
inc
adc
adc
add
xor
add
clc
clc
inc
add
nop
lahf
cmp
dec
dec
cmp
clc
test
add
add
mov
gs
sar
xlat
xor
add
in
jbe
pop
test
call
clc
aam
inc
clc
cwtl
das
jns
cmp
mov
push
mov
xchg
ret
daa
std
lret
leave
dec
outsl
in
mov
sar
clc
pop
ds
xlat
out
jmp
push
add
jb
add
clc
pop
fwait
std
out
in
ss
aad
add
sub
outsb
mov
add
push
clc
jmp
mov
jno
add
das
mov
pop
test
pusha
add
add
rcll
add
jo
add
add
push
add
adc
add
add
add
repz
inc
add
inc
add
xor
add
rcl
movsl
clc
lret
kmovw
arpl
add
add
mov
clc
loope
enter
add
dec
out
inc
clc
adc
inc
add
and
add
add
clc
xchg
popf
popa
add
xchg
iret
aas
mov
mov
clc
xchg
out
pop
cmp
xchg
int
add
xchg
push
lahf
sbb
and
mov
stc
das
inc
add
mov
mov
jnp
push
clc
or
mov
call
call
inc
ret
add
nop
jmp
cli
adc
inc
add
pop
sub
push
add
testb
clc
in
jo
add
add
stc
jbe
in
mov
push
testl
clc
cltd
jl
add
cmpsl
clc
inc
clc
inc
clc
xbegin
add
cmp
add
clc
out
ret
clc
push
test
push
mov
xchg
ret
mov
add
cs
cwtl
dec
jns
add
cwtl
bound
add
decl
jb
incl
xbegin
cmp
push
add
jns
out
inc
clc
dec
adc
add
cmpsb
clc
arpl
add
add
add
bound
add
clc
xor
add
sbb
inc
clc
mov
inc
clc
jne
clc
push
rep
nop
jmp
sub
jmp
add
imul
push
xor
add
add
adc
add
cmovno
add
stc
dec
cmp
cmpsb
clc
out
mov
sar
add
add
add
push
sar
xor
add
add
clc
sub
add
add
add
imul
adc
adc
add
jmp
scas
mov
clc
dec
mov
clc
mov
adc
add
add
mov
mov
pop
sub
add
enter
pop
mov
sar
xor
nop
jmp
sub
adc
ret
and
add
cmp
push
clc
loope
pop
test
add
xbegin
cmp
add
cli
fnstcw
popf
xor
clc
push
clc
push
add
clc
pop
sbb
add
and
add
hlt
mov
clc
ss
shlb
loope
push
add
es
pop
dec
shrl
clc
out
dec
and
dec
and
add
dec
roll
loop
in
movsl
clc
loop
xchg
pop
sub
movsb
clc
mov
or
mov
nop
jmp
in
add
add
add
imul
mov
clc
mov
mov
int
inc
add
in
add
sbb
cwtl
jp
add
scas
xor
add
iret
cmp
icebp
outsb
movsb
clc
adc
mov
jl
push
add
lods
xchg
mov
add
sbb
es
mov
jmp
add
add
popa
add
std
inc
add
and
add
clc
dec
test
clc
cmp
and
add
int
fcmove
and
notb
pop
clc
outsl
sbb
add
dec
jne
cmp
clc
fiaddl
inc
add
sahf
push
clc
ss
add
je
clc
fwait
enter
gs
repnz
inc
add
shrb
inc
add
cmp
add
mov
dec
shr
popf
mov
imul
cmpsl
clc
nop
ds
or
lods
push
xchg
pop
dec
hlt
cmp
cmp
sub
or
inc
clc
ss
push
add
cmpsb
clc
mov
push
add
jge
clc
sbb
lahf
dec
dec
xchg
mov
cmp
add
imul
mov
add
mov
leave
enter
jl
data16
das
gs
nop
daa
clc
cmpsl
clc
push
clc
cli
jmp
pop
sti
inc
add
add
add
pop
decb
add
sub
xchg
xlat
leave
jae
add
pop
clc
jge
inc
add
fistpll
std
mov
inc
clc
jo
add
cltd
or
rolb
lcall
cmpsb
clc
outsl
adc
add
push
jmp
std
jbe
stos
je
clc
inc
add
aas
sar
lret
lods
xchg
lret
dec
xchg
sarb
adc
add
in
pop
jmp
into
add
add
add
stos
clc
roll
push
cmp
dec
imul
pop
jg
add
mov
sub
add
cli
sub
add
sbb
add
add
mov
clc
xchg
je
clc
push
pop
adc
and
add
add
add
mov
add
push
add
add
jecxz
aam
sahf
cli
cmp
clc
cmp
int3
cld
mov
xbegin
outsb
xchg
push
dec
rolb
xor
add
inc
clc
out
cmp
jb
add
xor
add
adc
add
pop
mov
mov
xchg
jbe
rcll
dec
ljmp
clc
dec
mov
cmp
jle
add
pushf
int
push
popl
clc
push
pop
mov
jg
data16
xchg
mov
stos
push
or
clc
aas
in
cmp
cmp
pop
lahf
xchg
inc
add
sbb
jnp
lret
fstl
add
mov
outsl
sub
xacquire
add
inc
add
add
clc
xchg
jmp
test
adc
add
addr16
push
popf
jne
clc
xchg
pop
pop
mov
push
adc
cmp
cltd
mov
push
sbb
mov
mov
daa
clc
and
add
add
gs
add
shl
outsl
dec
out
xchg
cmp
sub
into
inc
add
add
add
sbb
into
and
add
add
add
add
mov
add
add
add
xchg
push
add
xchg
pop
fadds
addr16
push
add
fs
push
inc
clc
in
aad
repnz
repz
clc
sti
stos
movsb
clc
icebp
jbe
sbb
sub
push
pop
lods
mov
ret
clc
in
add
add
add
test
push
das
in
mov
add
cmp
clc
and
sahf
mov
into
xchg
mov
ret
clc
push
inc
clc
xchg
ljmp
add
add
imul
add
ja
and
clc
loope
ss
mov
jmp
f2xm1
jno
add
cli
mov
lock
or
test
stos
lods
fisubl
add
clc
out
mov
mov
clc
inc
add
sub
imul
cmpsl
clc
jb
add
cmp
clc
mov
xor
add
clc
test
mov
clc
loope
out
mov
int3
cwtl
push
or
adc
add
outsb
repz
inc
add
repz
add
std
movsb
clc
xchg
mov
adc
clc
mov
xbegin
add
mov
push
lret
or
dec
xchg
push
dec
adc
fwait
inc
clc
in
pop
clc
dec
push
add
and
stc
or
add
add
add
add
pop
xabort
pop
sub
sar
decb
cmp
rol
clc
mov
arpl
add
mov
outsb
inc
clc
xor
add
push
add
sub
add
dec
mov
out
sub
clc
push
add
int3
mov
shrl
xchg
mov
sbb
clc
xor
add
clc
outsl
sbb
and
jae
add
push
add
lret
sbb
xchg
adc
mov
add
mov
add
mov
jecxz
sub
add
popa
add
pusha
add
and
add
add
int3
loope
cmc
ds
fdivr
add
sahf
cmp
pop
clc
push
addr16
dec
mov
sub
clc
inc
add
cmp
xchg
lret
pop
mov
clc
adc
inc
add
push
jle
dec
xor
add
mov
aad
clc
aad
or
cltd
enter
clc
lock
ret
clc
jecxz
imul
mov
push
add
sub
out
push
jo
add
add
lods
or
xabort
clc
inc
add
jecxz
cmp
clc
in
add
nop
sbb
pop
xor
add
add
int
cmp
add
mov
add
and
add
add
push
add
adc
add
add
bound
add
sar
inc
clc
push
add
push
je
pop
push
jb
add
add
sbb
clc
mov
sbb
nop
fs
in
popa
add
push
xchg
jnp
ljmp
push
clc
adc
add
aam
cmp
or
pop
xchg
sbb
clc
cmpsl
clc
jns
insl
testb
xor
add
outsb
cmp
sar
ret
cmp
clc
push
add
mov
add
mov
clc
mov
nop
cmp
in
jge
adc
add
add
pushf
cli
lods
mov
add
xchg
aad
and
add
jg
and
add
cmp
add
pushf
xbegin
add
dec
or
jl
mov
fidivrs
loop
xor
add
add
xchg
sbb
push
stos
mov
add
add
clc
xor
add
mov
sar
clc
stc
inc
add
scas
cmp
add
ret
push
add
loopne
jge
pop
xbegin
add
clc
cmp
mov
das
aas
daa
clc
add
add
add
into
aam
test
xchg
enter
add
scas
and
add
into
lods
mov
add
xchg
dec
ss
add
cld
dec
lods
iret
aam
sbb
pop
push
enter
add
push
add
xchg
lock
inc
clc
dec
cmp
clc
mov
clc
mov
jle
sar
inc
clc
cmpsl
clc
imul
push
push
clc
push
clc
dec
lock
sbb
pop
clc
ss
xchg
or
clc
lret
lret
xor
add
aad
xchg
xchg
popf
imul
lret
jg
or
add
cmp
pop
je
mov
fbld
add
add
push
clc
dec
pop
incb
sub
call
ljmp
add
jns
add
jbe
ljmp
add
and
add
pop
aas
xor
add
clc
inc
add
sbb
xor
and
stos
jle
jae
add
clc
mov
jo
add
test
insb
clc
or
xor
add
rolb
add
push
mov
or
xchg
aas
or
clc
xchg
fwait
sub
mov
add
add
sub
xor
add
test
cmp
clc
sub
clc
jecxz
xor
add
clc
aam
dec
jge
repnz
clc
sub
mov
clc
nop
pop
iret
mov
clc
xchg
xchg
leave
clc
mov
mov
cmp
jne
clc
pop
clc
pop
and
add
lods
mov
rcrl
jno
add
pop
dec
xor
add
add
out
push
clc
sahf
test
clc
ret
clc
xbegin
add
mov
add
mov
jae
add
add
cs
jo
add
add
mov
imul
or
pop
fs
sub
movsb
clc
sar
add
rorl
add
loop
leave
imul
add
add
in
into
mov
clc
jge
jbe
add
test
clc
push
add
and
add
gs
shl
clc
daa
clc
push
clc
sub
loop
xor
dec
dec
sahf
lods
mov
iret
push
or
add
div
loope
or
add
add
inc
add
ss
add
fs
pop
dec
adc
add
xabort
clc
pop
clc
dec
mov
clc
out
push
jbe
inc
add
cmpsb
clc
jge
clc
imul
add
inc
add
xchg
ds
clc
rep
clc
mov
clc
jp
clc
fistpl
add
add
mov
cmp
imul
out
sub
ret
clc
xchg
sbb
add
add
add
js
shlb
inc
add
dec
xchg
int3
and
add
pop
clc
cmp
cld
xor
add
add
sbb
clc
aaa
mov
add
jge
add
jl
cltd
add
add
add
jl
imulb
push
adc
pop
mov
add
add
loopne
addr16
fdivrl
mov
sbb
sbb
das
aas
adc
add
sub
call
cmp
sub
mov
shlb
clc
das
xchg
popf
ret
cmp
cmp
aas
mov
add
clc
loope
arpl
add
pop
push
out
mov
jo
add
clc
inc
clc
in
cwtl
sbb
clc
stc
mov
pop
pop
push
pop
ds
inc
clc
fwait
lret
fldcw
clc
mov
add
in
mov
adc
push
add
mov
iret
cmp
clc
mov
out
rcrb
clc
in
dec
test
icebp
popa
add
out
sbb
dec
pop
push
sbb
push
add
ss
add
icebp
xbegin
clc
sbb
add
cmp
add
add
inc
clc
dec
popl
or
scas
cmp
dec
fmul
jle
jne
mov
insl
scas
sbb
add
dec
dec
and
add
pop
adc
add
jae
add
mov
clc
out
jl
add
add
fidivl
movsl
clc
jge
scas
stos
push
mov
add
add
dec
xchg
cmpsb
clc
push
shr
ret
jno
add
sub
out
adc
add
add
add
xor
add
add
push
movsl
clc
imul
clc
cwtl
test
xor
aas
nop
clc
addr16
mov
clc
mov
inc
add
clc
pusha
add
and
add
pop
mov
mov
add
imul
dec
fs
sar
add
sbb
xchg
mov
push
aad
aad
sbb
push
push
clc
push
xchg
lahf
xchg
or
lock
clc
idiv
enter
clc
leave
movsl
clc
rol
clc
clc
popf
cli
inc
clc
sub
add
inc
clc
pop
jb
add
call
clc
popf
pop
or
add
cli
mov
mov
push
cmp
popa
add
rclb
clc
out
arpl
add
and
push
adc
add
add
dec
pop
push
add
and
add
cmc
das
mov
clc
nop
pop
sbb
add
dec
add
dec
nop
cmp
sbb
push
push
add
es
loopne
test
data16
jge
mov
xchg
or
sub
out
es
xlat
push
sub
fldcw
add
clc
mov
add
xor
add
jle
add
mov
loope
mov
pop
push
adc
add
insl
data16
push
add
shl
clc
out
data16
or
mov
loop
loope
mov
lahf
xor
add
and
mov
clc
clc
jne
add
lret
mov
add
fistpll
dec
int
clc
jne
cmp
clc
fs
cmc
mov
sub
add
stc
inc
clc
jo
add
lea
push
loope
repnz
adc
add
popa
add
lret
nop
out
xbegin
sar
clc
insb
out
dec
ja
loope
pop
scas
mov
ja
xchg
call
xor
clc
sar
add
or
movsb
clc
gs
push
add
mov
clc
iret
ret
xchg
aam
insb
push
xor
lods
ret
clc
outsb
jae
add
lcall
lahf
jmp
dec
sar
xor
jmp
mov
push
clc
adc
add
test
sti
dec
push
in
mov
add
add
add
add
iret
shrl
clc
cmp
or
clc
stc
xor
add
cwtl
pop
cmp
mov
cmc
sub
imul
out
mov
dec
xor
adc
add
clc
das
or
and
add
aaa
jae
add
add
xchg
cmp
insl
mov
cmp
clc
pop
clc
jb
add
cmp
test
mov
add
cld
push
add
add
pop
mov
pop
cld
push
pusha
add
test
scas
sub
loop
int3
into
mov
push
testl
sub
data16
rcll
ret
clc
xchg
pusha
add
aas
scas
mov
fiaddl
add
add
lret
loope
das
mov
clc
outsb
xchg
pop
or
clc
iret
scas
sub
roll
pusha
add
xchg
inc
add
sbb
adc
add
in
movsb
clc
fwait
mov
pop
clc
jnp
add
add
lods
jns
clc
inc
clc
push
jecxz
adc
add
ret
pop
pop
xor
add
mov
clc
mov
mov
sub
sub
mov
pop
clc
cld
mov
lahf
pop
mov
addr16
loop
out
test
and
push
daa
clc
mov
mov
add
aaa
cltd
jle
cltd
lock
clc
push
test
jp
fiaddl
mov
and
add
ficomps
add
add
stc
push
add
imul
dec
in
push
add
loopne
je
push
add
mov
test
mov
clc
cmp
clc
add
add
xchg
stos
push
mov
xchg
cmp
out
inc
clc
fstl
clc
imul
add
pop
xchg
cmp
sub
clc
movsl
clc
jbe
mov
push
mov
pop
jl
or
inc
add
push
dec
or
add
mov
cmp
inc
add
insb
push
clc
aaa
mov
jnp
clc
mov
add
jmp
arpl
add
insl
imul
repz
sub
add
fsts
add
add
clc
mov
sub
clc
sbb
jl
xchg
xchg
int
add
je
fsub
clc
fmul
movsb
clc
test
fistps
outsb
xbegin
add
inc
clc
sar
cmp
clc
inc
clc
mov
popa
add
cmp
clc
sbb
add
test
pop
cmp
clc
mov
or
enter
inc
add
jnp
mov
add
out
xchg
pop
or
in
cmp
inc
clc
movsl
clc
xchg
lahf
pushf
pop
testl
insl
adc
add
cltd
adc
clc
addr16
xchg
lods
cmpsb
clc
push
add
mov
xchg
lcall
mov
scas
jp
add
fs
dec
push
clc
fimull
lahf
mov
adc
add
clc
jb
add
ds
addr16
int
add
cmp
add
xlat
out
jge
add
test
jle
insl
push
add
push
bound
add
add
pop
sbb
add
jo
add
dec
pop
dec
jl
addr16
dec
cltd
cltd
mov
ljmp
clc
pop
mov
fs
pop
adc
add
add
sub
or
movsb
clc
lock
lahf
pop
and
push
add
lock
dec
nop
cmc
arpl
add
add
mov
mov
std
aaa
and
add
inc
clc
unpcklps
scas
jmp
das
xchg
enter
add
add
add
rdseed
fisubrl
add
movsl
clc
push
add
pushf
mov
clc
cmp
clc
mov
clc
inc
add
aaa
pushf
loop
mov
clc
mov
mov
clc
mov
rol
clc
out
int3
sub
clc
imul
jle
cmpsl
clc
and
das
gs
loopne
xchg
sbb
lret
hlt
movsb
clc
cmp
mov
add
pop
xor
clc
or
mov
adc
add
fnstcw
pop
es
psraw
mov
lea
add
scas
mov
clc
add
add
in
jo
add
lret
pusha
add
or
adc
movsl
clc
jg
clc
sar
jne
pop
mov
clc
inc
add
fstps
add
cmp
aam
mov
add
or
clc
jecxz
and
mulb
add
dec
or
inc
clc
int3
imul
mov
outsl
xlat
in
pop
out
lcall
pop
pop
xchg
in
lret
rorl
mov
inc
clc
insl
add
add
add
int
fsubl
add
aam
inc
clc
dec
mov
es
jle
add
cmp
add
scas
jg
dec
jnp
stos
lahf
pop
clc
flds
add
or
push
add
enter
clc
fs
push
test
cmp
mov
push
push
add
mov
add
add
nop
aas
xchg
addr16
ret
clc
ret
aam
clc
xor
add
mov
cmp
xchg
xchg
jnp
not
cld
fcmovnbe
pop
cmp
xor
add
add
mov
notl
aas
sub
add
add
test
test
sar
clc
adc
add
test
pushf
mov
sbb
push
clc
dec
cld
mov
clc
push
jge
clc
lods
stos
loopne
pushf
nop
mov
adc
add
add
fidivrl
test
inc
clc
push
add
mov
clc
jmp
clc
adc
ds
call
mov
clc
cs
daa
clc
cmp
test
add
add
rorl
xor
clc
and
add
mov
sub
arpl
add
add
mov
sub
lods
cmp
add
cmp
clc
pop
out
leave
ds
add
sub
jle
outsl
std
pop
xbegin
pop
iret
test
mov
push
add
push
test
clc
inc
add
mov
add
xabort
xchg
inc
add
jg
clc
mov
daa
clc
mov
xbegin
add
ds
clc
cmc
sub
nop
cmp
cmp
insb
loope
cmp
jmp
sbb
push
xlat
scas
shlb
add
cmp
icebp
stos
sub
inc
add
mov
dec
jno
add
adc
add
repnz
clc
movsb
clc
adc
dec
imul
add
nop
and
add
add
ss
push
dec
out
je
adc
and
add
add
fadds
mov
fisttpll
pop
jnp
das
ds
cmp
clc
or
add
and
imul
mov
add
dec
sti
cmp
clc
lahf
adc
cwtl
mov
jnp
loopne
inc
add
lock
int
add
add
add
lret
jae
add
scas
mov
std
inc
clc
stos
insl
xor
add
mov
add
jo
add
popa
add
je
insl
jge
mov
sbb
clc
enter
add
mov
xbegin
outsb
cld
xchg
gs
push
clc
pushf
lret
add
sub
add
jmp
push
add
xor
add
mov
and
add
clc
dec
jmp
clc
push
jg
clc
xchg
jb
add
dec
out
test
jle
clc
in
xchg
mov
add
add
cmpsb
clc
mov
mov
add
inc
clc
dec
mov
enter
add
inc
add
jbe
clc
pop
ds
aad
dec
mov
add
js
adc
stc
mov
xor
xor
add
mov
add
add
add
xor
add
dec
xabort
and
add
mov
loopne
xbegin
xchg
bound
add
add
cmp
repnz
incb
add
jmp
cmp
lret
clc
icebp
jo
add
cmp
fwait
and
clc
gs
mov
clc
aas
or
hlt
lahf
int
cs
cmp
add
imul
dec
out
call
add
jne
add
mov
inc
add
call
lcall
clc
daa
clc
sbb
mov
add
xchg
fsubrp
mov
push
clc
sbb
push
cmp
adc
add
imul
jge
clc
jle
pop
hlt
mov
add
sti
aas
sahf
outsb
xchg
popa
add
test
xor
add
incl
adc
add
mov
push
clc
jne
fs
cmc
cmp
add
pop
push
ret
clc
hlt
ret
clc
repnz
clc
jmp
inc
add
mov
clc
add
add
mov
ja
into
popa
add
inc
clc
dec
mov
pop
inc
clc
aad
clc
dec
out
imul
add
testb
clc
cmpsb
clc
mov
jp
call
scas
push
add
insl
lea
add
add
in
std
mov
hlt
pop
add
add
add
push
clc
fsubrl
xlat
inc
add
push
sbb
pop
or
cld
imul
mov
add
call
add
mov
hlt
out
insb
in
dec
dec
xchg
sub
add
pop
adc
add
clc
inc
add
mov
xor
xchg
sar
scas
push
add
std
or
xchg
data16
jae
add
push
sbb
or
psadbw
clc
mov
and
add
add
clc
xbegin
clc
ss
scas
xchg
xor
add
clc
imull
mov
clc
sub
clc
mov
clc
sub
clc
pop
repz
sbb
clc
bound
add
lock
add
int3
dec
fdivrl
jmp
mov
ret
clc
in
adc
add
clc
sbb
cmp
test
dec
mov
test
je
loope
and
mov
rol
clc
iret
dec
sti
fdivrl
add
sbb
push
add
inc
clc
ret
clc
insl
pusha
add
xor
lods
sub
add
out
and
scas
clc
mov
xor
add
xchg
test
pop
dec
mov
stos
sbb
xbegin
pop
movsb
clc
pusha
add
mov
clc
xor
add
add
xor
add
add
insl
imul
mov
cltd
sub
add
add
or
dec
pop
jns
push
add
or
std
cmp
clc
push
add
repnz
in
mov
lcall
test
cld
xchg
xabort
clc
ja
or
cmp
mov
pop
outsl
push
cwtl
xor
add
clc
add
add
clc
repz
add
add
mov
test
push
add
in
movsl
clc
xchg
add
add
clc
cwtl
xor
add
clc
out
leave
sbb
xor
add
or
dec
push
clc
or
clc
sar
bound
add
inc
add
jl
das
call
add
xchg
xor
add
stos
sbb
lods
jo
add
push
leave
adc
add
add
mov
clc
ds
stos
sub
sti
ljmp
popa
add
mov
clc
ss
dec
pop
jg
lods
mov
sti
pop
clc
lock
and
add
clc
xchg
into
icebp
fs
xor
add
outsl
rcrl
js
jg
add
ja
clc
loop
xbegin
clc
xor
add
add
pop
clc
ficompl
int3
pop
cmp
clc
push
inc
clc
xor
add
add
test
cmp
add
xor
add
cmp
xchg
xor
add
mov
mov
clc
mov
push
jnp
and
add
xor
scas
dec
sub
clc
addr16
cmpsb
clc
and
add
add
mov
add
pop
imul
add
xchg
push
imul
jp
clc
dec
aas
out
and
add
add
jmp
add
inc
add
mov
clc
inc
clc
insb
into
aam
add
fadds
add
insl
xlat
iret
cmp
clc
fwait
and
add
add
add
das
cmp
clc
sbb
xchg
pop
and
mov
negb
call
add
std
mov
fsubl
xor
add
clc
data16
lret
add
mov
cmp
xor
add
popa
add
dec
push
or
clc
out
pusha
add
nop
and
add
dec
mov
jl
mov
iret
cmp
out
imul
add
lea
movsl
clc
or
lret
push
mov
add
xabort
sbb
clc
ror
dec
das
arpl
add
sbb
dec
xlat
lahf
jno
add
clc
test
pop
sar
clc
rcr
prefetch
clc
outsb
jnp
sbb
fisttps
clc
clc
outsb
push
add
add
adc
add
xor
add
repnz
cmp
clc
xor
add
pop
jne
movsl
clc
mov
dec
or
inc
clc
leave
xor
fs
pop
sti
stos
in
xchg
jbe
icebp
xchg
xor
add
add
mov
add
arpl
add
cs
sbb
clc
and
add
or
cmp
clc
hlt
outsl
push
outsb
inc
add
loope
addr16
pop
or
clc
addr16
or
add
inc
add
aas
mov
clc
fwait
outsl
sti
sar
inc
clc
imul
loope
dec
aas
mov
add
mov
xbegin
add
adc
add
sti
sub
loop
inc
clc
inc
clc
loopne
fmuls
fiaddl
add
clc
enter
add
xor
add
or
mov
push
add
popl
xor
clc
mov
lahf
push
xor
mov
sti
pop
repnz
test
cmp
clc
in
cmpsl
clc
adc
add
fldt
popa
add
lahf
add
cmpsl
clc
dec
dec
push
jo
add
dec
fnstsw
pop
fadds
add
clc
mov
arpl
add
clc
mov
cmp
dec
dec
jl
cmp
clc
shr
cmc
xchg
fwait
cmp
pop
mov
add
mov
cmp
cmp
call
clc
pop
clc
mov
insl
mov
add
ds
add
mov
rcll
add
add
out
ret
add
cmp
clc
mov
pop
clc
xor
add
clc
loopne
int
arpl
add
in
into
jge
lods
scas
cli
cmp
push
clc
out
test
clc
mov
mov
jne
out
xor
clc
mov
add
adc
add
pop
jmp
loope
push
add
pop
sbb
xchg
cmp
cmp
call
jle
clc
xchg
or
or
ds
add
aaa
cmp
mov
adc
add
mov
jmp
fistpll
add
push
add
pop
push
jae
add
fisubrs
push
cmp
add
out
sub
jo
add
xchg
pop
xor
inc
add
push
fs
ljmp
clc
mov
mov
xchg
mov
iret
dec
gs
mov
rcrb
sub
add
aad
pop
clc
bound
add
data16
gs
or
nop
push
add
add
cmpsb
clc
lcall
flds
jne
add
mov
cmpsb
clc
in
outsl
fs
mov
clc
aas
pop
cld
adc
push
add
fs
pushl
add
scas
adc
add
out
js
add
sar
imull
xor
add
add
add
enter
add
xor
add
movsb
clc
lret
lahf
sub
and
xchg
xor
je
add
cmp
xabort
adc
add
dec
scas
sub
add
jae
add
add
outsb
imul
add
icebp
inc
clc
loope
jne
add
add
add
out
sbb
add
addr16
iret
test
push
aas
add
add
add
faddl
clc
sub
clc
adc
cmc
insb
or
enter
add
fwait
test
add
clc
inc
add
movsl
clc
and
xchg
push
add
cld
das
lock
mov
clc
insb
jb
add
hlt
fbld
add
sub
add
adc
add
ss
fldenv
add
lahf
push
cmpsb
clc
test
sarb
imul
sbb
cmpsb
clc
mov
sub
add
add
bound
add
cmp
or
gs
je
pop
adc
add
add
roll
add
add
mov
mov
add
dec
cmp
clc
out
lcall
popa
add
and
add
js
clc
add
add
add
aam
clc
dec
in
jae
add
sar
daa
clc
xor
add
das
jbe
fwait
pop
inc
clc
sub
sbb
mov
mov
adc
add
movsl
clc
cmp
push
mov
clc
bound
add
clc
add
add
add
aad
and
add
inc
add
psllq
add
inc
add
fwait
enter
dec
sub
clc
pop
jbe
pusha
add
push
clc
jecxz
dec
cli
in
ljmp
insb
in
adc
mov
cmp
in
mov
add
xchg
xor
add
data16
or
pop
fwait
imul
and
add
add
clc
push
leave
stc
cmp
push
sbb
xor
das
gs
imulb
jle
xor
add
clc
addr16
pop
mov
enter
mov
clc
push
lock
sbb
push
imul
data16
mov
clc
xchg
cmp
fs
sub
lods
repnz
add
cmp
clc
pop
movsb
clc
int
popa
add
inc
clc
adc
add
add
pop
mov
add
stos
ja
cwtl
mov
out
xor
add
push
add
fistpll
sub
adc
add
add
inc
add
ret
clc
pushf
test
xlat
jbe
cld
mov
daa
clc
movsb
clc
pop
imul
clc
test
mov
or
push
add
jp
clc
add
add
jbe
clc
mov
jo
add
xor
cmp
add
and
add
clc
sub
add
jo
add
repnz
xchg
out
cmp
add
xor
add
jns
add
test
add
add
clc
xchg
cmp
clc
ret
clc
fadds
push
dec
cmp
ret
add
add
push
inc
clc
cmp
add
fcmove
push
clc
ja
call
dec
out
repz
sub
clc
push
pusha
add
pop
push
stos
stos
dec
loop
lods
xchg
and
add
mov
add
add
clc
gs
xor
clc
adc
into
sar
or
clc
ljmp
jmp
adc
add
xchg
ss
pop
cld
add
add
jae
add
inc
add
cs
add
jno
add
add
add
in
outsl
jns
sub
add
cwtl
leave
inc
clc
arpl
add
clc
ja
pop
mov
insl
outsl
pop
jle
add
mov
movsl
clc
mov
ret
clc
xchg
hlt
adc
add
add
push
cmp
dec
lock
movsl
clc
inc
add
daa
clc
mov
sub
clc
fwait
int3
in
mov
enter
xor
stos
mov
test
and
add
add
sti
add
add
jge
clc
pusha
add
fcomp
mov
cmc
inc
add
jge
test
cmp
lock
push
add
idivb
dec
xor
add
add
sti
in
fstps
shrl
xor
testl
clc
pop
clc
in
dec
lret
scas
sbb
repnz
cmc
shrl
clc
xchg
mov
movsb
clc
xchg
sbb
adc
add
pop
mov
lock
mov
dec
ds
clc
jle
mov
clc
pop
push
add
ljmp
mov
add
mov
pop
or
xor
out
mov
sahf
xchg
mov
clc
pusha
add
push
or
ret
clc
xor
add
clc
push
add
xor
ds
scas
jl
add
or
jg
in
jae
add
sub
pop
iret
cmpsl
clc
movsl
clc
mov
add
fisubl
add
pop
sub
add
mov
stc
add
add
jb
add
add
xor
add
mov
inc
add
arpl
add
mov
addr16
arpl
add
lcall
or
pop
outsb
cmp
sbb
or
jb
add
add
jge
sub
mov
xchg
sub
inc
clc
daa
clc
lahf
jo
add
or
adc
add
sar
testl
out
mov
add
in
ss
add
add
clc
sahf
cmp
es
cmp
clc
jns
mov
or
inc
add
lret
cmp
sar
insl
pop
xchg
movsl
clc
repnz
push
jb
add
clc
and
add
enter
jg
lods
test
xabort
xor
add
into
jo
add
clc
push
inc
clc
push
add
pushf
loopne
jg
popf
iret
mov
test
or
push
mov
mov
or
pop
jp
clc
and
add
in
pop
mov
leave
data16
xlat
ds
jge
sub
cmp
daa
clc
push
clc
and
add
sar
repz
add
stc
js
mov
push
shrb
clc
fs
dec
or
in
add
add
clc
mov
add
sarb
idivb
push
sahf
es
xchg
dec
pushf
cmp
clc
and
add
add
es
mov
clc
stos
insb
ja
inc
add
inc
clc
lods
adc
add
scas
jb
add
clc
loop
xchg
lahf
sub
lahf
push
fcoms
add
gs
ljmp
cmp
push
mov
adc
add
mov
mull
xchg
cmpsb
clc
pop
mov
xbegin
jae
add
inc
clc
loopne
pop
aam
sahf
and
add
popf
lret
sti
daa
clc
jb
add
add
mov
jns
cmp
and
add
data16
xabort
cmp
pushl
scas
fistps
lods
push
clc
jle
add
dec
push
mov
clc
sub
and
add
push
mov
lret
dec
divb
es
aas
push
aam
mov
mov
jnp
or
jo
add
sub
das
dec
push
ljmp
fidivs
clc
je
or
in
push
fnstenv
loope
in
sbb
clc
popf
pop
popf
cvtpi2ps
out
jl
pop
push
add
cmp
cmp
clc
jge
add
sub
testl
pop
fadds
clc
add
add
cmp
add
and
std
or
jecxz
cmp
add
ror
scas
jnp
push
repnz
or
or
test
clc
add
add
mov
fidivrs
or
clc
push
or
clc
mov
bound
add
add
add
test
stos
aam
neg
je
clc
and
add
xor
insl
std
cmp
mov
or
xchg
cmc
sub
clc
scas
lret
xchg
push
xlat
mov
add
mov
add
jle
pushf
stos
ret
clc
fisubrs
push
xchg
and
jecxz
xchg
push
dec
clc
add
add
mov
mov
je
add
and
add
mov
add
cli
f2xm1
das
test
sar
clc
repnz
xor
lods
xor
add
clc
aaa
adc
add
adc
rclb
xabort
stos
add
jmp
dec
mov
dec
movsl
clc
lahf
nop
aam
clc
xchg
lods
pop
clc
cmp
mov
arpl
add
mov
test
clc
pop
sbb
call
fs
cld
and
add
clc
sub
mov
or
push
mov
dec
addr16
and
add
add
mov
add
data16
and
dec
bound
add
clc
mov
enter
sahf
jo
add
and
add
clc
adc
add
mov
aas
xor
js
add
cmp
and
add
add
sbb
test
sbb
push
sub
add
add
cmpsl
clc
mov
jnp
cmp
and
lahf
aaa
jnp
add
leave
icebp
pop
addr16
lret
push
jle
sar
jg
insb
inc
clc
mov
cmp
add
test
clc
lcall
add
movntq
out
cltd
sub
pusha
add
jmp
add
divb
mov
iret
mov
aam
pop
cmpsb
clc
and
add
dec
icebp
pushf
sub
add
push
sbb
xor
add
sbb
add
clc
push
xchg
leave
ret
clc
enter
cld
xchg
das
das
arpl
add
cwtl
and
jp
ret
clc
jp
pusha
add
cmp
int
xchg
sub
loop
add
add
aas
mov
add
int3
cltd
or
lret
repz
clc
push
sbb
mov
cmp
adc
mov
clc
inc
add
cli
lock
mov
das
jae
add
stc
shll
clc
out
xor
add
fdivrp
frstor
cmp
dec
icebp
sub
push
outsl
add
add
in
roll
add
clc
sarb
mov
shr
insl
loop
and
add
add
rol
clc
stos
das
mov
or
clc
dec
inc
clc
ficompl
daa
clc
out
pop
mov
mov
cwtl
and
testl
adc
add
add
test
or
repz
sar
lret
xabort
mov
inc
clc
sbb
add
clc
or
add
frstor
add
add
jae
add
repnz
mov
lahf
lea
add
mov
dec
inc
add
pop
sub
add
sub
add
lahf
kmovw
clc
and
add
xor
add
add
ret
clc
or
clc
arpl
add
cwtl
dec
cmp
clc
rorb
sar
int
clc
sbb
sar
clc
adc
add
mov
bound
add
mov
clc
fs
aad
out
fwait
and
add
add
clc
scas
mov
das
aad
adc
xlat
dec
cmp
xchg
add
addr16
mov
add
mov
inc
add
mov
sbb
insl
xchg
std
mov
adc
aam
inc
clc
lods
add
add
xor
add
mov
clc
cmc
pop
clc
mov
push
add
push
cmp
xlat
adc
add
mov
cltd
lods
xor
add
mov
add
nop
push
xchg
sbb
clc
es
arpl
add
inc
clc
jp
or
jbe
add
jg
rclb
add
cmp
add
stos
mov
out
push
push
adc
add
push
sarb
cmp
clc
in
jl
clc
xchg
push
clc
jns
add
loope
jne
add
xbegin
add
jl
adc
xor
test
gs
cmp
jmp
add
aam
clc
hlt
arpl
add
lret
add
test
clc
push
jp
clc
inc
clc
sti
push
mov
aaa
in
jnp
clc
bound
add
lret
cmpsb
clc
and
add
fwait
popf
mov
add
leave
jmp
jns
mov
push
jbe
cli
cwtl
addr16
xchg
ret
clc
gs
icebp
mov
outsb
jp
insb
lcall
add
and
add
lods
lcall
jne
add
and
fidivrs
clc
jecxz
enter
es
lods
fs
pop
scas
nop
je
cld
cs
or
dec
mov
loopne
fildll
or
test
jno
add
test
mov
cmp
cltd
hlt
mov
add
aam
clc
popf
cmp
fimuls
add
cmp
clc
or
xbegin
loop
sub
mov
imul
add
add
add
test
pop
test
jb
add
add
add
add
add
jmp
lods
xbegin
push
add
mov
das
dec
pop
pop
adc
add
dec
push
push
popf
lret
lods
and
add
out
out
dec
lods
rcr
test
test
inc
clc
lahf
iret
jno
add
mov
mov
jbe
or
jge
dec
add
add
add
repz
clc
or
jae
add
clc
outsb
mov
lahf
jns
add
mov
stos
push
gs
fdiv
mov
rcrl
mov
or
clc
insl
sbb
sar
sbb
add
add
clc
push
add
in
cmp
xor
add
loope
fmul
sbb
clc
popa
add
outsl
xor
add
mov
jae
add
add
xchg
jmp
mov
sbb
cmp
das
daa
clc
add
add
test
mov
mov
add
push
add
mov
jns
clc
ret
or
add
dec
adc
add
lods
mov
xchg
clc
insb
ds
movsb
clc
pop
clc
jge
sub
mov
clc
rclb
jne
add
mov
push
outsb
mov
clc
pop
push
add
lcall
pop
mov
add
scas
dec
xchg
es
mov
jo
add
cs
outsb
cli
cmp
add
pushf
xlat
sbb
pop
cmp
add
testb
fcoms
add
jb
add
clc
mov
clc
add
cmp
hlt
cltd
jl
data16
adc
add
insl
in
add
xchg
lahf
mov
xor
add
clc
sbb
inc
clc
dec
or
cmp
mov
cmp
clc
inc
clc
out
inc
add
out
das
pop
aaa
pushf
hlt
mov
add
add
add
cmp
sar
divl
pop
ds
ljmp
movsl
clc
push
add
jae
add
clc
and
add
clc
mov
mov
lea
fdivrs
stc
into
int3
fidivs
clc
aaa
add
add
clc
repz
jo
add
clc
movsl
clc
clc
inc
add
ret
icebp
push
std
adc
add
or
mov
clc
aas
pop
rolb
add
sub
and
outsl
dec
inc
clc
push
clc
cmp
clc
add
add
add
cmpsl
clc
lahf
mov
push
add
inc
add
sbb
clc
jp
clc
ds
mov
mov
sub
out
cmp
cltd
xor
add
mov
add
mov
scas
adc
add
add
rorl
clc
cmp
ds
inc
add
roll
clc
sbb
data16
pop
xor
add
push
clc
jne,pn
stos
lret
add
int
fisttpll
mov
add
mov
sub
clc
loope
cmpsb
clc
pushf
mov
clc
movsb
clc
inc
add
aad
push
xor
add
jmp
adc
add
stos
jno
add
imul
clc
jo
add
cmp
movsb
clc
mov
mov
lahf
adc
add
movsb
clc
cmp
add
into
push
adc
add
and
add
add
push
add
add
fwait
cs
adc
add
or
out
popa
add
cmp
lahf
shrb
clc
testb
dec
mov
lret
movsb
clc
lods
gs
shll
inc
clc
cmpsb
clc
dec
nop
inc
clc
or
inc
add
bound
add
xchg
cmpsb
clc
push
add
out
popl
sbb
loopne
int3
movsl
clc
mov
bound
add
mov
add
scas
or
test
out
cmp
hlt
mov
xchg
pop
adc
sbb
add
mov
adc
add
je
inc
add
mov
clc
movsb
clc
cmpsb
clc
mov
clc
xchg
pop
lods
cltd
and
push
aaa
and
rcr
arpl
add
dec
imul
clc
inc
clc
xchg
cmp
dec
icebp
mov
jbe
clc
inc
clc
dec
cld
sar
sbb
clc
inc
add
movsb
clc
sbb
add
je
add
mov
push
add
jg,pn
add
push
mov
repnz
insl
fmull
clc
jae
add
sub
pop
xchg
mov
cmp
adc
add
fs
pusha
add
or
clc
dec
mov
movsl
clc
or
add
enter
dec
mov
clc
loop
sbb
addr16
rol
clc
pop
xor
add
in
sar
clc
stos
fstpl
popl
lret
enter
mov
jae
add
push
add
xor
add
xchg
iret
mov
fstps
push
cli
std
xchg
xchg
stc
aas
xabort
mov
fneni(8087
clc
mov
mov
inc
add
mov
das
push
sbb
add
loope
mov
clc
jle
nop
sbb
xor
add
add
repz
in
clc
mov
add
sbb
fisubrl
clc
stc
cmp
clc
cld
inc
add
add
add
add
clc
pxor
inc
add
push
mov
clc
mov
push
clc
mov
cmp
stos
inc
clc
push
fidivl
mov
adc
add
clc
sub
bound
add
icebp
cmp
add
je
and
cld
stos
mov
clc
xchg
mov
clc
in
lahf
into
fimuls
ljmp
cmp
or
add
add
scas
jns
aam
mov
dec
pop
cmp
xchg
xor
add
sub
insl
mov
out
sbb
testl
add
js
daa
clc
in
and
add
int
mov
stos
cli
sahf
imul
clc
jp
movsb
clc
fwait
daa
clc
jge
clc
cmpsl
clc
add
add
fadd
clc
jp
jno
add
in
stos
ljmp
and
inc
add
xbegin
adc
add
push
clc
clc
and
add
clc
cmpsb
clc
out
jns
insl
xlat
out
aas
pop
lea
xor
clc
xor
add
add
testb
and
add
in
enter
sub
add
clc
fldt
sbb
add
add
add
mov
pop
inc
add
inc
clc
ficomps
sahf
add
aad
push
daa
clc
cli
in
rcrb
add
sub
xchg
sbb
mov
ljmp
clc
jns
clc
cmc
or
jle
clc
mov
js
pop
push
add
jle
clc
aas
inc
add
insl
cli
dec
jae
add
cmp
out
mov
scas
outsb
and
dec
jmp
add
push
sti
loop
dec
sbb
add
fcoms
add
clc
fucom
clc
sbb
mov
add
push
inc
clc
cli
aam
ficompl
sarl
clc
fistpll
jecxz
out
cmpsb
clc
daa
clc
bound
add
add
clc
mov
clc
mov
test
sbb
cmp
fimuls
in
cmpsl
clc
stos
mov
out
jg
clc
test
add
mov
push
add
cmpsb
clc
pop
notl
add
adc
add
add
xchg
mov
mov
mov
outsl
bound
add
clc
mov
add
mov
inc
clc
pcmpgtw
jae
add
xchg
mov
cli
lods
push
add
test
sar
cmp
add
ds
xor
add
add
sti
into
ret
clc
sub
sbb
outsb
fsubrs
xor
mov
sar
clc
pop
adc
jne
mov
mov
xchg
push
add
insb
call
test
add
add
dec
repnz
cmp
clc
fdivrl
fwait
push
adc
add
das
push
add
clc
add
aad
clc
pop
or
fisttps
sahf
rcrb
clc
add
add
xchg
addr16
add
add
add
ljmp
icebp
mov
xor
add
sti
dec
xchg
test
popa
add
sbb
clc
test
repz
add
clc
jl
add
add
dec
xchg
jns
add
mov
js
clc
or
push
clc
out
jb
add
push
or
add
add
mov
dec
dec
stos
fcmovnbe
fnstcw
fcom
push
clc
sub
clc
mov
add
add
add
xchg
das
mov
int
test
jno
add
clc
jne
pop
clc
enter
aas
insl
loop
jmp
xchg
add
add
call
push
add
jb
add
add
jo
add
lea
movsl
clc
fndisi(8087
clc
sub
clc
das
jae
add
push
add
fistpll
add
mov
gs
ret
clc
inc
add
inc
add
nop
sbb
clc
jnp
jp
ss
mov
add
das
jne
add
cld
repnz
rclb
clc
adc
add
mov
mov
push
sub
mov
push
add
or
test
mov
push
js
mov
movsl
clc
test
xbegin
sub
add
clc
adc
add
sbb
add
sar
pop
mov
mov
clc
dec
adc
aam
pop
add
add
icebp
rolb
add
add
jmp
stc
fistps
int
clc
int
test
lods
in
adc
add
jo
add
hlt
jae
add
add
repz
jb
add
into
outsl
sti
xchg
or
push
lock
add
dec
lahf
test
sahf
bound
add
dec
adc
add
add
cmp
sub
clc
ret
lock
push
xbegin
add
stc
fdivr
pusha
add
in
dec
or
clc
xor
add
add
xor
add
sahf
jp
das
dec
test
ja
clc
xor
add
inc
add
bound
add
add
clc
fisubrl
int
sar
mov
jbe
pop
daa
clc
insl
xchg
std
jno
add
push
lods
jg
mov
add
cmp
clc
mov
jno
add
push
xchg
xlat
sbb
add
popa
add
sub
add
xchg
dec
mov
hlt
xabort
fcompl
shrb
add
xchg
ficoms
add
add
std
es
popa
add
lret
mov
mov
clc
push
cmpsl
clc
push
push
add
ret
clc
xchg
jl
push
push
pusha
add
dec
cltd
add
add
clc
add
add
sub
add
add
mov
clc
ret
rcrl
pushf
cmp
add
xor
mov
add
add
lods
iret
mov
sar
sub
fst
ret
clc
int3
add
sbb
and
add
clc
pop
mov
add
std
and
add
adc
add
add
add
clc
lcall
add
add
cli
fsubrl
xchg
push
in
push
clc
push
add
dec
adc
add
popf
mov
and
add
clc
nop
scas
add
add
and
add
clc
sbb
push
cmp
ret
das
mov
add
es
ss
mov
clc
jg
add
dec
loope
cmpsl
clc
out
outsl
loop
cmp
pop
ret
clc
outsl
shr
xchg
ss
xor
add
add
mov
add
movsb
clc
inc
add
flds
xchg
arpl
add
xor
add
sub
clc
push
mov
sar
mov
mov
lock
push
add
pop
clc
mov
push
clc
rcll
add
clc
cmp
loopne
pop
and
add
lcall
add
mov
cmp
inc
add
fmul
mov
jecxz
popf
xor
add
add
jp
clc
inc
clc
fucomi
mov
cmp
loop
out
pop
mov
in
xchg
sbb
enter
add
sub
jecxz
xchg
mov
leave
and
add
add
pop
cmpsl
clc
sbb
push
add
sub
add
adc
clc
inc
add
out
jecxz
icebp
xor
add
mov
adc
add
loop
mov
loop
data16
push
xlat
jg
clc
inc
clc
xor
out
jp
add
add
fidivrs
fiadds
add
cld
cmp
mov
clc
out
aas
cmp
scas
sub
and
add
mov
fs
xlat
mov
pop
in
cmp
fcomps
out
popa
add
stc
jno
add
imul
push
clc
jo
add
clc
bound
add
add
jno
add
clc
lret
xor
add
jp
sub
add
and
add
pusha
add
in
jg
clc
mov
hlt
ficoms
lea
add
add
add
clc
xchg
icebp
fucom
clc
xbegin
mov
adc
add
add
add
clc
in
arpl
add
ds
push
cmp
push
rclb
or
xabort
mov
add
clc
push
add
imul
clc
xor
add
insb
jnp
fisttpl
lret
mulb
add
add
ss
clc
arpl
add
sbb
cmp
insb
sub
jbe
jp
add
sub
in
or
addr16
or
mov
add
pushf
fs
shlb
xchg
insb
frstor
add
aaa
xchg
push
add
sub
add
mov
sarb
clc
cli
dec
jno
add
clc
mov
inc
add
ret
clc
clc
clc
mull
add
adc
add
test
xor
add
clc
fcmovb
clc
and
nop
push
clc
sub
filds
add
add
push
xor
add
clc
mov
adc
add
dec
ficoms
add
clc
nop
dec
pop
clc
or
or
mov
cmp
cmove
inc
add
or
mov
jmp
in
pop
lods
dec
addr16
fsubrs
arpl
add
add
jnp
clc
jns
add
cmc
into
loop
or
int3
fstl
clc
lret
mov
adc
setns
test
clc
cmp
pop
dec
fidivs
add
xor
add
mov
pop
es
dec
icebp
xchg
aad
pushf
jo
add
clc
cmp
jns
jp
clc
xchg
sti
and
add
cmp
xbegin
in
xabort
clc
idiv
push
sub
add
icebp
mov
clc
xchg
cmp
inc
clc
icebp
xor
add
clc
jae
add
clc
clc
jg
popf
jb
add
nop
out
stc
mov
push
or
leave
xchg
pusha
add
loop
addr16
xchg
jb
add
adc
add
daa
clc
sub
clc
or
push
out
jae
add
xor
add
mov
add
pop
cmp
sbb
dec
pop
add
add
jle
add
dec
xabort
sti
mov
int3
lcall
push
clc
lahf
scas
adc
add
adc
add
mov
clc
xbegin
lods
pop
and
add
add
inc
clc
lock
add
add
add
add
clc
dec
movsb
clc
mov
add
dec
mov
jg
add
in
fcom
cmp
push
xchg
mov
sub
popf
loopne
push
add
sub
clc
stos
add
nop
dec
movsb
clc
or
adc
add
push
xchg
sub
add
cmp
add
xor
add
pop
xchg
lret
clc
or
cmp
ret
clc
dec
cmpsb
clc
fwait
cmpsb
clc
cmp
jmp
popf
aad
mov
xchg
clc
inc
clc
testl
clc
pop
cmp
loopne
lods
jno
add
add
inc
add
jl
clc
mov
mov
xchg
hlt
mov
clc
sbb
into
stos
dec
cwtl
out
jecxz
add
add
dec
out
lahf
xlat
pop
pop
xchg
mov
popl
add
leave
aaa
lret
out
mov
clc
push
rcrl
and
add
lahf
ja
mov
popf
imul
mov
dec
xabort
add
ljmp
add
in
or
clc
xchg
mov
in
sub
cmp
xor
add
cld
xor
add
push
das
jnp
lcall
clc
lods
sub
and
add
add
xchg
sar
and
clc
data16
lods
mov
clc
mov
xor
add
jne
and
add
hlt
inc
clc
dec
lock
xor
pop
mov
clc
scas
add
add
popa
add
inc
add
adc
add
add
lock
adc
add
push
add
clc
sar
mov
add
add
add
add
clc
pop
clc
aaa
cmp
add
pop
pop
clc
jge
xor
cmp
clc
decb
xchg
sub
clc
and
add
add
pop
lods
ljmp
clc
jbe
clc
out
add
add
jp
jne
add
and
add
add
bound
add
cmp
out
add
add
xchg
xchg
and
mov
movswl
clc
int3
dec
std
add
add
enter
add
add
clc
test
stc
xchg
sbb
loop
or
clc
push
lret
lock
out
movsl
clc
xor
add
cmp
pop
in
add
add
cmp
xbegin
add
scas
xchg
jno
add
add
add
cld
cmpsb
clc
mov
mov
fsubrs
outsl
and
add
enter
sar
popf
fsubrl
xchg
pop
or
add
fisubrs
clc
lods
sbb
clc
clc
jb
add
out
in
or
sub
mov
add
mov
add
and
and
add
add
pop
cmc
mov
mov
pop
sub
cmpsb
clc
mov
mov
add
inc
add
and
add
or
hlt
scas
ss
push
add
pop
into
clc
cwtl
testl
test
pop
jl
jae
add
cmpsl
clc
jecxz
adc
adc
add
add
pop
mov
shr
arpl
add
negb
clc
inc
clc
jle
cmc
mov
popf
mov
stc
cmp
jns
clc
jns
pop
test
out
fldenv
mov
sbb
add
in
cmp
clc
add
add
gs
cmp
clc
mov
xabort
outsl
add
jo
add
pop
cld
xchg
fucom
clc
cmp
sarl
sbb
add
xchg
test
add
mov
add
mov
xchg
cmp
clc
sub
add
into
jae
add
pop
pop
push
clc
mov
add
je
clc
mov
fsts
add
sub
add
outsl
xchg
dec
dec
xlat
sbb
mov
add
arpl
add
add
into
mov
clc
inc
add
cmp
mov
clc
data16
xor
add
nop
xchg
cmpsl
clc
shr
sub
mov
add
push
and
add
fnstcw
stos
ljmp
outsl
cmp
clc
test
inc
add
mov
pop
and
add
mov
inc
clc
sub
mov
xchg
shrl
push
add
and
mov
test
ss
call
xor
add
scas
jle
add
cmp
or
mov
cmp
fcmovb
clc
mov
clc
cwtl
push
add
mov
clc
addr16
js
xchg
aad
fucom
clc
cmpsb
clc
pop
ja
cmp
clc
and
add
add
mov
lods
enter
add
push
jp
int3
cs
clc
testb
loope
fwait
hlt
push
add
and
add
daa
clc
mov
clc
and
or
add
adc
add
clc
es
pop
push
add
push
xchg
loope
xchg
cltd
fisttps
stc
sbb
cld
sub
mull
add
add
pop
outsl
imul
test
insl
cmp
mov
add
or
aam
fdivr
mov
mov
push
cmp
in
jae
add
push
add
lcall
sbb
sar
clc
pop
lahf
mov
add
push
js
out
testb
gs
pop
clc
sub
inc
clc
clc
mov
mov
cmp
dec
jbe
add
insb
insb
loopne
inc
add
adc
add
dec
cmp
insl
in
pusha
add
sbb
clc
jle
jge
ja
clc
pop
xchg
fldln2
stos
lods
jne
sbb
clc
dec
aam
clc
out
add
add
fistpl
in
jne
ljmp
inc
clc
jb
add
jb
add
xchg
lret
add
adc
add
cmp
cs
clc
sahf
cmp
cmp
xor
add
add
inc
clc
push
xchg
sbb
cmp
add
clc
inc
clc
pop
loop
aad
clc
cmp
clc
jns
add
sar
clc
xchg
push
clc
mov
clc
pop
lcall
es
xchg
sbb
clc
xchg
mov
add
add
ret
clc
xchg
xor
add
clc
inc
clc
inc
clc
xbegin
pusha
add
dec
clc
mov
xor
push
mov
xor
add
pusha
add
pop
and
add
std
mov
and
add
sub
push
add
pop
movsl
clc
sar
push
add
lock
xchg
cmp
cmp
push
popa
add
inc
add
mov
mov
clc
adc
clc
paddsb
add
add
out
mov
push
and
add
inc
clc
fld1
adc
add
add
add
clc
add
add
clc
pop
inc
add
sbb
frstor
add
xor
sub
das
insb
scas
sar
cmpsl
clc
into
cli
sar
jno
add
pop
loopne
test
clc
in
in
leave
pop
dec
es
mov
add
adc
clc
dec
push
jecxz
insl
gs
lods
in
in
arpl
add
pop
or
cmp
push
add
adc
add
clc
sti
cltd
sti
inc
clc
cwtl
rclb
add
sbb
add
add
ljmp
cmc
insb
pop
or
clc
mov
add
add
xchg
or
jne
repz
jnp
clc
jns
scas
movsl
clc
lods
xchg
inc
clc
mov
clc
push
mov
clc
adc
add
add
clc
addr16
test
aaa
xbegin
mov
cli
loopne
xchg
aaa
sahf
push
add
mov
pop
loop
push
into
leave
lahf
out
sub
add
loopne
jns
test
add
and
add
xchg
mov
repz
nop
xchg
je
loopne
add
add
in
ds
add
add
inc
add
cmp
mov
add
push
shrb
add
jae
add
add
mov
test
clc
jns
mov
cmp
clc
and
add
clc
mov
mov
lods
xor
clc
cs
cs
iret
je
mov
clc
outsl
sbb
lret
add
jmp
add
inc
clc
adc
popf
popf
jnp
jge
add
jnp
dec
fdivl
add
iret
and
add
cmp
xbegin
add
aad
clc
xlat
int3
xor
add
mov
add
add
rcr
lods
mov
in
or
add
xchg
fsubl
scas
cmp
add
inc
clc
add
add
add
bnd
xbegin
add
cld
jb
add
mov
aam
clc
sbb
add
cmp
mov
clc
mov
pop
inc
clc
in
push
add
outsl
cli
fwait
dec
xchg
repnz
sbb
sub
push
push
push
int
out
icebp
push
cmp
clc
mov
jae
add
imul
dec
push
lods
fildll
jmp
clc
push
add
repnz
add
sar
add
push
test
add
clc
mov
int
add
arpl
add
shl
clc
push
leave
lret
dec
sar
clc
lods
mov
clc
mov
jl
jo
add
cmp
sub
and
add
add
iret
push
and
add
ret
jne
clc
sbb
xor
add
dec
push
add
dec
inc
add
in
adc
add
gs
inc
add
shlb
add
add
das
in
fs
dec
inc
add
pop
outsb
jg
cli
inc
add
aas
test
jb
add
rorb
out
mov
inc
clc
clc
jns
das
loop
mov
ja
sub
add
xor
add
ja
and
add
cltd
clc
xor
loope
out
adc
add
sbb
cmp
clc
aaa
psubq
add
loop
lahf
int3
and
add
lods
mov
cmpsl
clc
std
or
add
or
dec
ljmp
add
inc
clc
adc
add
pusha
add
pop
xor
add
clc
sbb
sar
clc
sar
dec
xchg
adc
adc
mov
jg
stc
dec
and
add
mov
add
and
add
clc
cmp
add
outsb
mov
add
pushf
lahf
mov
and
add
lret
add
push
add
loope
sbb
mov
and
add
add
push
cmp
cmp
clc
pop
popf
jmp
jo
add
pop
xor
push
stc
lahf
push
sar
repnz
add
or
aaa
fucomip
hlt
in
sbb
push
add
stos
xchg
add
add
add
cmp
sbb
add
dec
icebp
in
sbb
dec
int
mov
add
mov
add
add
add
shlb
popl
sbb
pop
cltd
aam
cmc
xor
push
clc
add
popa
add
add
add
cmp
clc
fcmovne
pop
insb
mov
push
add
add
pop
jmp
add
popf
dec
pop
xor
add
clc
test
enter
jbe
pop
clc
or
scas
fistpl
clc
lahf
jl
add
or
add
mov
jge
add
add
mov
clc
xchg
jge
mov
jo
add
scas
dec
xabort
gs
fimull
inc
add
sub
clc
dec
loop
push
leave
lods
mov
add
add
and
add
mov
inc
add
iret
lret
add
ret
clc
jmp
mov
in
add
add
das
nop
je
mov
ret
clc
dec
imul
push
clc
sbb
adc
scas
inc
add
mov
clc
lea
dec
pop
sub
cmc
lahf
inc
clc
or
add
add
test
sub
clc
out
sar
insb
lahf
fldl
cmp
rolb
clc
clc
push
clc
xchg
xchg
mov
push
clc
add
push
mov
sar
jecxz
cmp
add
test
add
xchg
jle
clc
jmp
cmp
outsl
int
rcrl
adc
add
lahf
sbb
add
pop
mov
cmp
cmp
pop
cmp
add
jg
pop
clc
dec
inc
clc
cmp
popa
add
clc
iret
das
sub
clc
dec
testl
add
add
xabort
add
ja
out
sbb
pop
clc
lahf
mov
mov
nop
sbb
adc
clc
incb
clc
int3
pop
cmp
push
or
popf
inc
clc
jg
mov
clc
sub
push
add
and
xbegin
add
jbe
clc
jns
add
in
and
add
cmp
ret
clc
in
sub
inc
clc
and
add
test
add
adc
add
clc
shl
xbegin
mov
clc
movsb
clc
stos
inc
add
mov
pop
clc
sub
in
gs
sbb
push
clc
pop
ffreep
clc
xchg
scas
add
add
aaa
addr16
mov
lret
mov
push
add
stos
push
mov
pop
jo
add
add
daa
clc
add
mov
aaa
sti
dec
mov
cmpsl
clc
ja
inc
add
mov
call
cmpsl
clc
cmp
or
clc
imul
mov
cs
clc
pop
cltd
shlb
ljmp
add
je
add
push
ds
ret
aaa
mov
add
out
jnp
xabort
xlat
flds
add
add
cmp
arpl
add
clc
mov
or
add
clc
jg
clc
mov
add
add
sbb
add
scas
cmp
push
add
and
add
pop
fwait
pop
pop
std
xlat
inc
clc
js
push
lea
shll
int
inc
add
inc
add
jle
mov
stos
outsl
out
sbb
and
add
add
js
add
sbb
dec
dec
cmp
add
add
dec
and
add
add
add
mov
inc
clc
pushf
adc
add
cmpsb
clc
add
push
clc
cltd
mov
fisubl
add
add
addr16
icebp
push
push
add
je
cli
loope
test
add
clc
clc
mov
clc
lock
sbb
add
cs
rcll
add
jbe
cwtl
cmpsl
clc
xchg
add
add
add
cmpsl
clc
clc
iret
sub
add
pop
mov
mov
adc
add
mov
and
shll
mov
outsb
push
pop
mov
xor
xchg
cmp
fadds
add
pop
sbb
cmp
clc
sub
add
pusha
add
into
pop
and
add
and
add
enter
in
mov
testl
add
add
add
clc
in
or
clc
shll
add
inc
clc
ret
clc
idivl
lea
test
and
add
arpl
add
clc
mov
mov
jno
add
add
adc
add
clc
inc
add
mov
add
add
add
stos
lock
lods
sub
adc
add
add
ja
jle
stos
out
das
xchg
out
pop
push
add
adc
push
jb
add
add
and
stos
push
clc
push
gs
mov
jecxz
call
jb
add
add
fmulp
aas
cmp
adc
add
jmp
and
add
sti
scas
add
add
jle
test
add
fcomp
mov
repnz
add
add
xor
clc
das
sti
jecxz
scas
inc
clc
dec
push
add
mov
sub
lret
add
clc
push
add
add
test
mov
fsubrs
clc
adc
add
push
add
mov
cmpsl
clc
cmp
loopne
mov
xchg
cmp
jnp
in
push
add
cs
movsl
clc
jo
add
xor
add
or
cmpsb
clc
and
add
mov
dec
jmp
je
push
dec
gs
jbe
add
jno
fbstp
cmp
enter
int3
add
stc
and
pop
icebp
sub
clc
jg
stc
gs
leave
push
inc
clc
sar
mov
mov
push
add
add
add
js
clc
out
pop
push
cli
cltd
aas
hlt
setl
adc
add
add
add
jl
sbb
fisttps
clc
fmull
xor
add
sub
dec
icebp
dec
imul
jge
add
dec
jl
add
add
add
xor
icebp
push
cmp
push
clc
push
and
fdivrl
dec
adc
add
ret
clc
js
add
imul
scas
push
clc
mov
cltd
xchg
icebp
inc
clc
add
cmp
clc
fisubs
sub
add
clc
repz
pop
sar
push
add
outsb
jnp
add
xlat
cmp
test
out
xor
add
cmp
nop
and
add
add
and
add
clc
sub
daa
clc
ret
clc
push
add
aad
xlat
mov
push
jg
clc
pop
push
inc
add
fistpll
mov
add
push
pop
in
mov
add
jl
add
int
jle
clc
xchg
lahf
mov
jbe
clc
cmpsb
clc
pop
sar
sub
mov
clc
popa
add
test
cmpsl
clc
out
dec
mov
xor
add
add
dec
fs
fcom
fists
add
cli
addr16
aaa
push
aaa
add
add
aaa
mov
add
add
aas
push
inc
add
mov
or
clc
int3
jns
push
add
aam
clc
xchg
push
add
and
clc
cmp
clc
sahf
sub
add
xchg
cmpsl
clc
ss
clc
xchg
cmp
cs
push
adc
add
add
dec
stos
push
loope
xor
cmp
mov
dec
nop
push
stos
imul
dec
and
add
clc
mov
add
sbb
inc
clc
sti
or
stos
test
stc
loopne
push
add
mov
push
mov
and
add
jmp
cs
divb
ret
clc
mov
mov
loopne
in
test
ljmp
xchg
cli
inc
add
inc
clc
mov
dec
and
add
ljmp
add
mov
push
mov
and
add
clc
mov
sub
or
add
leave
xchg
xor
add
pushf
nop
jns
sahf
lcall
inc
clc
dec
sbb
jbe
sub
mov
clc
pop
lea
push
add
xchg
data16
push
add
inc
add
bound
add
push
add
sar
jge
je
push
cwtl
mov
add
xabort
clc
sbb
clc
fwait
rcl
jno
add
add
shl
clc
das
stc
into
push
add
xbegin
aaa
and
add
xchg
das
fwait
inc
add
jne
fisubrl
clc
jae
add
clc
add
mov
cwtl
dec
add
xchg
jno
add
push
js
add
inc
clc
push
mov
faddl
int3
cld
mov
cli
cmp
push
pop
dec
xor
cmp
cmp
loope
pop
and
add
jecxz
and
add
ss
outsb
and
xchg
inc
add
cmp
nop
jle
xlat
cmc
add
add
add
add
mov
dec
mov
dec
in
je
xchg
fwait
sti
lret
pop
data16
mov
clc
inc
clc
sar
clc
outsb
gs
sub
inc
add
js
clc
xor
add
std
insb
insb
xchg
xor
lock
add
clc
cli
xchg
in
xor
add
das
daa
clc
sub
fistl
xchg
cld
jle
xchg
es
mov
jecxz
add
push
mov
add
popa
add
cmp
mov
ljmp
cmp
ja
clc
mov
pop
push
insb
add
jp
outsb
cmp
cld
loop
bound
add
add
xchg
cmp
clc
add
add
xchg
repnz
clc
sbb
aaa
push
lock
cli
sar
es
insb
mov
clc
mov
xchg
mov
add
clc
push
cwtl
and
es
xor
add
fs
repnz
push
jle
jp
mov
add
xchg
clc
xbegin
data16
mov
clc
imul
add
add
clc
push
fs
fucomip
or
and
add
cmp
add
add
loopne
js
add
adc
add
aam
or
clc
nop
mov
cmp
add
mov
adc
add
sbb
and
xor
add
mov
clc
icebp
sbb
clc
xchg
xchg
mov
call
xor
add
cmp
xor
add
arpl
add
add
clc
scas
loope
mov
cmpsl
clc
sbb
clc
xbegin
pop
ds
push
add
pop
mov
adc
add
add
pushf
repnz
clc
fdivs
add
add
cmp
clc
hlt
dec
fld
clc
ds
mov
out
jno
add
lods
mov
clc
rol
clc
mov
icebp
insb
fidivrs
nop
mov
or
add
es
jmp
push
dec
mov
sbb
xchg
gs
ss
fndisi(8087
clc
mov
adc
add
or
xor
add
push
add
mov
clc
inc
add
xor
add
outsl
pop
sub
out
mov
mov
add
push
gs
pmuludq
ss
ficompl
ljmp
sub
mov
pop
adc
add
clc
imul
add
xchg
imul
clc
mov
dec
push
clc
pop
popf
mov
dec
mov
std
outsl
adc
add
add
push
dec
cmpsb
clc
pop
mov
clc
mov
clc
cmp
and
add
jecxz
pop
clc
mov
in
std
insl
push
in
dec
push
repnz
add
inc
add
push
jnp
es
push
stc
test
out
inc
clc
insl
sbb
mov
js
xor
add
pop
cmp
clc
scas
xchg
cwtl
push
clc
lock
add
nop
clc
mov
sub
mov
clc
cmp
pop
imul
es
in
push
sbb
sub
js
out
fs
dec
xchg
xor
add
clc
test
rorb
scas
pop
xchg
cmp
sbb
add
add
add
cld
push
cmp
sub
cmpsb
clc
lahf
inc
add
jb
add
add
or
cmpsl
clc
or
clc
xchg
stos
push
pop
push
clc
clc
test
cmp
cs
pushf
push
repnz
jo
add
es
xchg
mov
dec
inc
add
xor
add
jnp
clc
clc
sub
aas
sbb
clc
aad
inc
add
popf
lcall
sbb
add
mov
pop
je
mov
add
aad
outsl
xabort
sub
jb
add
stc
fdivs
add
jns
clc
out
jg
push
add
cmp
cs
loop
sub
clc
js
xor
add
add
mov
push
clc
insb
aaa
sbb
add
add
pop
popa
add
push
cmp
push
add
push
mov
dec
ret
popa
add
dec
data16
cmp
clc
pop
clc
cmp
add
in
add
add
sti
test
xor
add
pop
xor
add
add
sahf
sub
clc
inc
clc
je
jmp
add
add
or
add
dec
or
into
dec
lcall
mov
clc
cmc
sarb
bound
add
add
aaa
mov
jnp
test
add
sub
and
xchg
cmp
adc
add
xabort
cli
and
add
inc
clc
or
clc
mov
and
add
add
adc
add
clc
mov
mov
add
nop
adc
add
xchg
int
push
mov
int
nop
int
cmpsb
clc
out
lods
clc
lahf
jb
add
sub
push
add
movsl
clc
dec
sti
outsl
cmp
add
mov
push
or
es
xchg
mov
and
add
xchg
popf
or
clc
repnz
in
sub
add
lods
cmp
fs
or
clc
inc
add
popa
add
dec
dec
xor
add
hlt
fsubs
xchg
clc
data16
shrb
mov
push
clc
jbe
clc
dec
xchg
adc
add
outsl
xchg
jbe
loopne
jp
inc
clc
es
sbb
add
addr16
sub
add
mov
add
pop
sub
jno
add
clc
dec
jmp
ss
jno
add
add
out
adc
add
add
dec
push
mov
mov
add
add
cmp
clc
ljmp
clc
xchg
jecxz
jl
jbe
negb
insl
jne
insl
mov
add
xor
aad
adc
add
add
mov
add
jle
xlat
fdivs
jnp
add
xchg
mov
push
clc
icebp
xor
jl
clc
loopne
insb
gs
jns
xchg
divl
add
lea
add
pop
sub
mov
xchg
loopne
cmp
add
sub
pop
cmpsl
clc
pop
clc
sar
add
dec
cmp
add
jmp
push
add
mov
xor
insb
aas
pop
repz
daa
clc
aad
clc
push
addr16
inc
clc
movsl
clc
dec
arpl
add
or
lods
jo
add
jb
add
shl
clc
fnsave
leave
mov
dec
dec
leave
push
pop
jle
clc
ds
add
pop
nop
cs
cltd
mov
add
inc
clc
pop
outsb
repz
clc
xchg
gs
inc
add
sub
sbb
xor
add
add
mov
loope
je
add
dec
mov
pop
out
leave
call
add
add
leave
stos
aas
sar
pop
clc
push
add
mov
add
add
dec
lahf
fldl
add
mov
add
notb
inc
add
ret
add
add
iret
int
clc
sub
sbb
cld
fisubl
dec
cmp
xchg
insl
jmp
xor
add
add
clc
fmull
popa
add
sub
outsl
cld
push
dec
sbb
clc
lret
adc
add
mov
jecxz
xor
add
push
xchg
popf
idivb
clc
jbe
xchg
jo
add
dec
xbegin
dec
fcom
xabort
jbe
cmpsl
clc
xabort
cmpsb
clc
add
add
rcl
push
add
lret
push
mov
clc
xor
add
and
add
clc
sub
clc
cs
inc
add
add
add
add
popa
add
xor
add
clc
push
add
xor
add
sub
jno
add
clc
fsubrs
out
lock
add
pop
loop
push
add
add
add
scas
sub
add
add
add
xor
add
clc
jo
add
add
dec
insl
gs
jecxz
ficoml
add
cmp
lret
mov
add
and
add
ljmp
mov
mov
clc
rorb
fstp
hlt
push
push
lea
xchg
dec
mov
add
cmp
inc
clc
adc
push
shrb
ret
clc
inc
add
in
inc
add
xchg
mov
sub
and
add
and
addr16
xadd
pop
clc
sti
jnp
imul
add
sub
add
enter
scas
jl
add
aas
push
mov
add
clc
mov
xchg
sub
add
xchg
xchg
mov
xchg
clc
cwtl
push
inc
add
xchg
xchg
push
add
push
add
inc
clc
pop
add
add
clc
cmp
pop
clc
lock
add
sub
push
gs
fsubrl
imul
scas
lret
sub
clc
cmp
xor
and
add
clc
mov
xchg
fisubl
bound
add
clc
jo
add
and
add
add
pusha
add
pop
sub
pop
pop
cmp
stos
out
mov
add
sar
xchg
sar
int3
in
xchg
addr16
xor
add
add
pop
cmp
outsl
sbb
imul
sub
clc
test
add
add
pop
movsb
clc
xchg
pop
out
mov
mov
popf
jmp
add
stos
sbb
pop
mov
clc
xchg
push
and
add
add
in
data16
or
clc
je
stos
push
add
pop
clc
jle
clc
mov
sub
dec
or
sub
div
dec
jb
add
js
mov
mov
mov
fs
rcl
inc
add
push
mov
mov
imul
clc
pusha
add
insb
iret
in
in
arpl
add
clc
inc
clc
cmc
es
loope
pop
xchg
mov
add
push
add
lcall
or
add
dec
and
nop
in
push
add
in
in
in
and
add
jns
clc
rorl
sti
mov
in
push
add
mov
cld
test
push
in
mov
clc
aaa
xchg
fidivs
add
ja
inc
clc
dec
mov
inc
clc
cmp
jl
add
sub
hlt
addr16
stc
scas
arpl
add
clc
mov
lock
inc
clc
ljmp
loope
xchg
jp
insl
jl
cs
clc
jg
and
add
mov
enter
fstps
add
dec
sbb
add
sti
xchg
add
add
add
arpl
add
add
dec
faddl
add
add
xchg
xchg
dec
icebp
pushl
clc
adc
add
add
pop
add
pop
push
xchg
int3
inc
add
or
sub
fs
jo
add
mov
fnstenv
add
xchg
inc
add
mov
and
add
add
adc
add
call
outsl
roll
add
push
pop
test
add
pushf
push
jns
push
shld
pop
jbe
jecxz
jnp
add
data16
push
add
nop
sbb
movsl
clc
mov
fiadds
add
push
add
xor
clc
mov
xor
add
clc
clc
dec
dec
sahf
in
lcall
test
insb
xor
add
cmp
clc
inc
add
scas
fcomip
das
mov
cmpsl
clc
cld
int
outsb
pop
clc
xor
add
insb
jecxz
fistpll
add
add
push
in
test
je
add
sbb
add
clc
cmp
mov
sub
add
xor
add
mov
sub
add
mov
fs
aad
clc
jmp
clc
jo
add
cmpsl
clc
mov
out
pop
idivb
or
sbb
pop
ljmp
and
add
sbb
xchg
xor
add
test
jae
add
adc
out
cs
push
clc
lock
clc
pop
add
add
neg
popa
add
dec
mov
push
xlat
push
in
shlb
inc
clc
add
sbb
clc
aad
clc
mov
ret
clc
mul
clc
mov
clc
inc
clc
mov
clc
dec
and
add
outsl
cmp
jl
mov
add
das
sbb
add
lods
fsts
add
push
ret
clc
pop
rdpmc
add
push
aaa
lea
in
xchg
mov
ret
clc
mov
add
add
add
xchg
test
push
add
dec
jp
hlt
pop
adc
add
movsl
clc
xchg
loopne
or
or
push
fisubl
add
add
jl
clc
push
mov
and
add
add
jmp
int3
test
sarb
into
clc
aaa
or
clc
imul
insb
stos
sub
inc
add
push
add
int
inc
add
in
dec
cmc
fidivs
add
add
or
add
inc
clc
inc
clc
test
into
out
cmp
repz
add
xchg
pushl
add
xchg
fsubs
lods
std
mov
mov
jbe
adc
add
clc
mov
dec
data16
push
add
or
push
gs
push
add
ja
out
addr16
adc
add
daa
clc
out
lret
fs
jne
sar
rorl
add
mov
dec
aas
std
inc
clc
adc
add
hlt
ja
lock
adc
add
jno
add
add
add
inc
add
xchg
push
add
lock
sar
add
adc
loop
shll
add
xlat
inc
add
lock
stc
js
clc
test
out
imul
add
add
pop
push
add
outsb
jecxz
cmp
add
xor
mov
xchg
scas
mov
icebp
out
push
pop
push
add
xlat
push
cmp
adc
add
clc
mov
clc
daa
clc
dec
xchg
popf
cmp
popa
add
add
add
aaa
popa
add
xchg
aam
clc
call
shrl
aad
clc
pushf
repz
sbb
clc
jl
xabort
call
fsubs
pop
insl
in
add
add
or
add
test
mov
add
jns
add
pop
in
test
xlat
push
fsubrs
inc
add
push
int3
stos
dec
mov
add
jnp
inc
add
outsl
loopne
push
add
push
sarb
jge
add
add
add
int
push
add
stc
sub
or
sub
add
add
add
vandps
daa
clc
into
push
js
maskmovq
divl
add
das
out
xabort
adc
add
in
push
clc
xchg
cli
or
in
shll
add
lret
clc
push
arpl
add
cltd
inc
add
insb
and
add
add
clc
lock
lea
add
icebp
cmp
aas
jb
add
out
mov
clc
sbb
int
add
pop
clc
mov
push
add
mov
add
xabort
imul
inc
add
ds
xchg
mov
clc
jne
sbb
xor
lock
clc
repnz
add
mov
add
icebp
dec
mov
or
and
add
adc
in
xchg
push
pusha
add
std
pop
mov
clc
sar
dec
mov
es
mov
adc
add
and
and
add
add
add
add
scas
push
faddl
add
lcall
clc
xor
ljmp
out
outsl
mov
push
xor
cld
sti
imul
ficoml
clc
cmp
cmp
clc
mov
sti
out
test
and
add
mov
clc
jbe
clc
mov
sbb
lret
and
clc
mov
rorl
add
clc
inc
add
clc
addr16
clc
dec
lret
or
stos
es
fistpll
aas
and
add
outsl
push
add
pop
inc
add
push
xchg
mov
movsb
clc
mov
sub
add
adc
add
xchg
xchg
dec
mov
xchg
lock
popf
icebp
jmp
clc
mov
add
xor
add
sub
jno
add
add
fsubs
add
mov
lods
pop
inc
clc
pop
xchg
leave
sahf
push
clc
fdiv
xor
add
jbe
lods
mov
add
pusha
add
mov
cld
cmp
cmp
clc
mov
clc
mov
insb
cmp
clc
sub
clc
clc
jb
add
add
mov
out
test
mov
xor
add
clc
xor
add
jb
add
add
clc
lret
fnsave
add
jmp
clc
add
add
clc
jg
jle
cli
jnp
dec
lock
cmp
cmovp
cwtl
jecxz
mov
mov
stc
cmpsl
clc
sar
jle
jle
clc
sub
add
mov
dec
ror
add
add
add
fs
adc
add
add
cwtl
mov
add
dec
jp
pop
add
add
das
xlat
inc
add
jns
lahf
cs
add
int3
add
add
cmpsb
clc
clc
mov
jmp
add
add
or
scas
pop
call
add
clc
jmp
mov
add
add
jp
add
pop
jge
mov
add
aaa
xchg
daa
clc
mov
add
sbb
clc
into
jmp
clc
test
mov
or
fwait
shrb
add
mov
or
add
jge
clc
push
cmp
clc
shll
add
sti
adc
add
pushf
and
add
pop
stos
outsb
fcmovnu
aam
clc
sahf
ja
das
sbb
xchg
xabort
clc
and
add
movsl
clc
outsb
hlt
sbb
add
mov
cmp
mov
push
mov
inc
clc
test
mov
add
add
add
add
cltd
pop
addr16
inc
add
mov
dec
ss
add
pop
dec
gs
lret
push
add
and
add
je
das
adc
add
jecxz
adc
add
add
jae
add
add
arpl
add
xchg
jo
add
push
pusha
add
jecxz
cmp
push
add
sub
add
popf
push
sar
clc
aam
movsb
clc
push
mov
cmpsl
clc
daa
clc
scas
xor
add
lea
xchg
cmp
clc
adc
add
sub
add
add
add
inc
add
pminsw
arpl
add
xor
add
inc
add
ret
clc
mov
add
push
add
mov
out
jl
dec
test
pushf
and
add
test
xchg
mov
mov
mov
clc
and
add
add
push
clc
pop
xbegin
add
push
cmp
add
in
adc
add
popa
add
out
iret
push
aam
inc
clc
push
push
loopne
in
lret
push
add
int3
cltd
lock
fmull
clc
pop
repz
cmp
cmp
add
and
add
lods
ficoms
out
pop
jg
test
mov
jnp
cli
out
sarl
mov
or
clc
dec
xchg
jl
add
xchg
jns
test
sub
clc
push
add
mov
xchg
xchg
cli
xchg
sbb
mov
sub
add
push
jl
pop
into
out
inc
add
icebp
loope
cli
loop
and
add
popa
add
lret
aaa
push
hlt
in
lcall
jmp
jmp
clc
or
dec
xlat
cmpsl
clc
imul
mov
mov
sti
clc
mov
add
add
rcl
repz
out
je
add
out
rolb
add
sbb
xchg
xor
add
add
inc
clc
or
add
xchg
push
add
adc
add
add
cmp
push
push
es
arpl
add
inc
add
xor
add
movsl
clc
dec
jb
add
clc
mov
and
add
leave
or
clc
or
add
outsb
jge
push
add
loope
xor
add
fwait
test
fcoms
clc
dec
ret
insb
movsl
clc
or
ret
sub
clc
add
add
enter
adc
add
rol
clc
jp
add
add
jg
add
mov
testl
clc
xchg
inc
add
mov
clc
or
push
add
xchg
mov
add
xor
add
pushf
jge
pushf
push
test
and
add
add
add
push
mov
data16
xchg
ret
add
clc
push
add
pop
or
add
es
jae
add
sub
pop
pop
clc
popf
loopne
mov
sarb
mov
or
lock
clc
jge
test
adc
add
sti
out
test
clc
in
mov
xchg
cwtl
push
add
shlb
fwait
cmc
stos
jne
test
push
clc
sbb
pushf
int3
mov
clc
fwait
repz
pop
clc
push
add
fwait
test
lods
testb
int
add
or
add
xchg
adc
add
add
jl
and
stos
icebp
pop
mov
pop
inc
clc
mov
add
dec
and
add
clc
mov
mov
cmp
in
push
add
xchg
sub
add
mov
enter
out
mov
cmp
add
jo
add
add
mul
clc
jecxz
aad
clc
xor
add
add
cmp
push
or
add
mov
jl
aad
clc
filds
add
lods
lret
add
mov
insl
push
mov
fldenv
xabort
xor
add
add
pop
mov
out
sub
out
bound
add
ret
lea
and
add
mov
gs
or
add
lock
sar
clc
fcompl
push
imul
jae
add
clc
push
inc
add
loope
xor
add
add
pop
jmp
mov
and
xchg
and
add
maskmovq
testl
clc
mov
lods
shll
ljmp
add
cmp
clc
loope
fcompl
jns
clc
rcl
nop
fcmovnb
clc
inc
clc
xchg
inc
clc
mov
clc
adc
add
sub
cmp
xor
add
xchg
push
add
push
or
clc
jno
add
dec
fsubr
mov
pushf
jne
clc
push
add
cmp
clc
add
add
pop
inc
clc
sbb
loop
aas
icebp
or
mov
test
cmpsb
clc
jp
add
fnsave
psllq
add
add
stc
mov
in
fsubs
add
scas
jne
clc
sub
cmp
mov
clc
test
es
cmp
pop
loop
insb
pusha
add
sar
ret
aaa
mov
inc
clc
mov
or
xchg
in
xchg
aaa
xchg
jecxz
jge
mov
push
clc
cmc
dec
push
add
pop
fistpl
clc
xchg
xor
cs
add
add
push
add
jg
sub
test
clc
jb
add
leave
iret
inc
clc
pop
cmp
sbb
clc
clc
mov
push
jae
add
clc
adc
add
clc
push
dec
aaa
xor
mov
add
add
xor
add
sbb
leave
hlt
sbb
and
bound
add
add
push
in
mov
jbe
std
rol
clc
icebp
aad
add
add
dec
dec
mov
pop
inc
clc
sti
inc
clc
xchg
aas
idivl
fcomps
lods
daa
clc
inc
add
xor
clc
jg
jnp
clc
sub
cmpsl
clc
aaa
add
add
clc
fdivs
int
fyl2xp1
rcrl
add
mov
add
mov
and
add
jmp
add
adc
add
jno
add
mov
clc
mov
jae
add
clc
dec
pop
add
add
clc
std
mov
add
data16
mov
clc
ds
mov
mov
out
daa
clc
repz
mov
clc
call
inc
clc
cmp
sub
out
loop
mov
insl
icebp
mov
xor
add
clc
lcall
clc
or
cli
mov
mov
or
lcall
sbb
and
data16
push
clc
and
test
movsb
clc
stc
cmp
and
leave
clc
push
add
ljmp
inc
clc
push
dec
pushf
mov
clc
aam
add
jae
add
pop
notb
add
jl
jg
pop
mov
xlat
pop
cmp
add
addr16
cmpsb
clc
sti
aas
push
dec
jg
clc
cmp
add
lcall
push
ss
cwtl
add
add
ja
imul
xchg
mov
clc
dec
flds
jge
clc
mov
pushf
cmp
jmp
outsl
sar
or
in
pop
cmp
clc
sbb
xor
dec
cmp
mov
pushf
and
add
add
leave
jl
lret
push
add
dec
scas
mov
add
pop
cld
lods
dec
movsb
clc
dec
aad
clc
xor
add
cmp
inc
add
jns
mov
aaa
cmp
addr16
sahf
addr16
fs
fwait
xchg
hlt
stos
pop
jge
adc
add
cmp
int
xchg
sar
ss
push
jg
dec
pshufw
pop
sbb
stos
int
or
test
xchg
sahf
pop
inc
clc
sub
sub
or
ljmp
clc
add
clc
mov
clc
inc
add
divb
add
jnp
inc
clc
dec
mov
add
adc
add
add
enter
fs
repz
add
adc
dec
fcom
or
cmp
clc
scas
cmpsl
clc
stc
hlt
push
add
lcall
test
lods
std
or
nop
cmpsb
clc
jmp
popf
add
add
add
test
lods
add
add
sbb
jo
add
add
clc
inc
add
mov
add
add
in
xor
mov
sub
xor
mov
clc
jae
add
add
add
movsl
clc
ret
clc
js
mov
jmp
js
mov
add
sbb
je
cs
scas
mov
rorb
add
jecxz
icebp
push
add
clc
std
push
jnp
xchg
lock
clc
jecxz
data16
fidivrl
inc
add
shrl
sub
clc
inc
add
outsb
loop
mov
add
sbb
add
add
add
pop
or
inc
clc
adc
add
inc
clc
sub
jnp
lock
sub
or
add
xor
add
sbb
dec
outsl
xchg
jg
sti
test
inc
clc
pop
adc
add
adc
clc
sahf
sub
rcrl
sub
add
sbb
push
add
jp
push
xor
add
in
lcall
and
add
and
add
inc
add
mov
jnp
outsl
outsl
into
xabort
addr16
stc
mov
push
clc
dec
dec
mov
icebp
push
add
cmpsl
clc
cmp
clc
mov
pop
sub
clc
shl
clc
lods
push
clc
cli
ds
test
fs
fwait
sub
ss
pop
clc
sub
cmp
jno
add
das
ret
clc
dec
adc
add
xchg
pop
ret
add
add
add
adc
add
call
xlat
pop
and
add
clc
jbe
cmpsb
clc
adc
add
clc
jmp
add
cmp
inc
add
xchg
inc
add
in
jne
repz
jo
add
add
bound
add
lcall
add
or
xor
add
add
stos
mov
clc
pop
xor
add
add
add
jecxz
and
add
out
jg
add
xbegin
lea
divl
add
and
add
xor
add
loopne
sbb
xor
clc
cmp
xor
add
inc
add
pop
pop
test
popa
add
int
mov
add
clc
es
dec
or
clc
sub
push
inc
add
ret
clc
lods
pop
insb
inc
clc
jge
mov
clc
xchg
mov
mov
add
jne
push
clc
out
rcrl
pop
mov
loopne
pop
jecxz
mov
sbb
das
or
clc
add
jmp
add
add
add
clc
inc
add
int3
test
cwtl
mov
push
add
mov
clc
pop
cltd
mov
jmp
cmp
fstpt
ss
xor
add
xchg
xabort
pop
das
sub
mov
add
sub
add
add
ret
clc
out
push
dec
mov
repz
clc
jmp
clc
cmp
xlat
mov
fs
shl
clc
stos
jo
add
mov
adc
add
xor
add
add
icebp
jle
test
sar
or
pop
or
int3
and
add
incl
int
popa
add
call
add
adc
aas
xchg
pushf
mov
or
sar
jne
add
getsec
enter
push
mov
lcall
add
clc
icebp
mov
popa
add
test
cmc
lahf
aad
mov
sub
clc
int3
je
add
pop
adc
mov
clc
lret
sar
mov
clc
leave
into
sub
lock
add
adc
add
adc
rclb
out
dec
loopne
lods
inc
add
jo
add
clc
inc
clc
shl
sub
or
add
int3
cmp
add
cltd
mov
add
add
sti
inc
add
mov
mov
or
clc
mov
cltd
pop
test
add
ds
into
inc
add
mov
addr16
pushl
mov
add
add
rcrb
xchg
pop
push
add
push
addr16
jmp
imul
clc
mov
clc
push
clc
sbb
clc
mov
imul
dec
aaa
jg
pop
xchg
xchg
pop
jb
add
clc
add
mov
push
lahf
rorb
addr16
jae
add
clc
jne
or
add
test
push
add
mov
mov
movsb
clc
inc
add
or
ja
das
mov
lcall
add
out
es
test
clc
pusha
add
nop
es
aas
inc
add
jne
pop
repz
insl
jb
add
add
mov
clc
push
push
ss
clc
xchg
repz
imul
add
push
bsr
rorb
fcoml
xchg
bound
add
cwtl
add
add
lods
out
jno
add
add
xchg
mov
inc
add
xchg
cmp
add
adc
add
add
push
divps
clc
pop
mov
add
push
mov
clc
mov
call
arpl
add
add
shl
clc
sbb
add
mov
add
and
add
lahf
inc
clc
bound
add
loop
jge
ret
clc
inc
add
lcall
push
scas
xchg
fmulp
lret
nop
in
inc
add
or
lret
jge
xchg
xchg
push
add
add
jns
clc
mov
add
mov
ss
sbb
dec
push
xor
add
pop
inc
add
mov
fsub
clc
scas
and
add
fidivrs
idivl
mov
adc
add
fld
clc
mov
add
ja
push
pop
clc
je
lret
xlat
inc
add
push
add
sub
clc
cs
jp
clc
jmp
jmp
clc
sub
pusha
add
add
add
add
add
push
inc
add
in
or
clc
mov
and
aaa
ss
cli
mov
mov
lret
clc
rcrb
lods
int3
rorb
shll
add
clc
testb
xabort
clc
js
jo
add
in
xchg
enter
clc
cmpsb
clc
insl
cmpsl
clc
inc
clc
cmpsb
clc
loope
mov
out
xor
add
jb
add
inc
clc
iret
rcrl
add
dec
inc
clc
movsb
clc
int3
ja
clc
div
cmp
clc
jmp
cs
pop
stc
ja
pop
add
das
adc
clc
dec
xchg
in
jno
add
or
clc
lods
mov
mov
outsb
clc
lcall
mov
lock
clc
mov
hlt
scas
lss
fidivl
push
add
nop
mov
add
aad
rorb
add
xchg
xchg
ret
cmp
mov
mov
inc
clc
sti
scas
cmp
scas
jo
add
add
clc
cmpsb
clc
pop
aam
clc
push
add
idivl
mulb
and
add
insb
je
aas
outsb
xchg
ficoml
add
add
xor
add
add
add
xchg
testl
dec
call
clc
stos
mov
sbb
ljmp
clc
mov
push
add
sahf
out
dec
cmp
clc
dec
dec
in
ss
loope
dec
stos
jae
add
or
outsl
sub
cmp
add
sarb
push
add
sub
clc
and
add
add
divl
add
push
or
clc
aaa
fs
in
sub
or
rcll
add
pop
mov
clc
cli
divb
add
clc
adc
add
mov
pop
pop
cwtl
arpl
add
cmp
pop
and
stc
jecxz
pop
add
add
push
push
add
cmp
add
mov
add
push
cld
inc
add
pop
adc
add
cs
add
push
add
cmove
mov
loopne
and
add
mov
clc
clc
mov
js
add
sbb
shll
add
jae
add
lods
xchg
stc
scas
jae
add
mov
test
std
add
add
sbb
add
dec
xor
add
arpl
add
add
mov
icebp
test
data16
push
imul
lods
bound
add
add
lea
add
add
add
clc
testl
jnp
fwait
cltd
push
cmc
bound
add
lahf
pop
clc
and
add
and
add
add
sbb
add
cmp
clc
data16
out
and
add
add
pop
xor
add
clc
mov
clc
dec
fcomp
test
movsb
clc
push
cwtl
adc
add
sbb
ss
sar
mov
ljmp
clc
cmpsb
clc
in
cmpsb
clc
jae
add
and
add
pop
and
sub
pop
cltd
mov
add
idiv
sub
test
push
add
or
pop
inc
add
xor
add
clc
inc
clc
ljmp
or
data16
sub
adc
clc
xbegin
add
add
ret
clc
pop
clc
pop
fs
es
mov
sti
push
sbb
clc
popa
add
inc
clc
cltd
mov
cli
aam
clc
popf
cmp
pop
or
mov
or
add
negl
sahf
cmp
or
add
mov
mov
test
push
dec
lcall
clc
das
ljmp
adc
outsl
rorb
sbb
pop
test
ret
clc
sti
int
cmp
scas
adc
add
ror
jb
add
leave
cmpsb
clc
mov
pushf
pop
mov
jmp
out
movsb
clc
jo
add
mov
movsb
clc
push
adc
add
jnp
in
jne
clc
lods
je
clc
sarl
mov
fwait
sti
dec
ss
cli
push
add
mov
sub
add
add
lods
add
jmp
adc
or
dec
sub
xchg
pop
push
xabort
inc
clc
push
aad
inc
clc
test
pop
sbb
sbb
imul
add
jle
inc
clc
sub
sar
jae
add
bound
add
cmp
ss
clc
add
xchg
and
add
add
pop
clc
cmp
push
jmp
add
fs
mov
lahf
aaa
pop
in
adc
add
add
or
xor
add
lcall
xbegin
fwait
sar
xor
add
add
lret
clc
out
pop
push
add
mov
movsl
clc
lock
add
cmp
cmp
xchg
ss
clc
mov
dec
sub
add
add
inc
add
xchg
nop
sbb
or
into
or
pop
out
jb
add
clc
inc
clc
and
add
sub
xchg
mov
pop
popf
mov
clc
push
add
pop
jnp
add
call
sub
mov
call
fwait
lahf
ret
fsts
add
lcall
clc
cwtl
jbe
add
dec
sar
add
aaa
outsb
jae
add
push
clc
mov
lret
into
xor
add
add
clc
mov
mov
clc
mov
sbb
clc
insl
add
add
test
xor
add
add
insl
addr16
rol
clc
pop
xchg
sar
xor
add
clc
xor
add
pop
adc
add
add
add
movsl
clc
dec
xor
add
movsb
clc
jb
add
dec
pusha
add
xbegin
mov
push
sub
xchg
pushf
pop
or
add
repnz
lret
mov
add
mov
clc
xchg
sub
push
fwait
cmpsb
clc
fldl
sahf
fldcw
mov
jmp
clc
popf
stc
aam
clc
out
scas
jecxz
cmp
loope
xchg
sahf
test
xabort
int3
jl
clc
cmp
and
das
adc
add
add
add
clc
and
add
pushf
xchg
sbb
clc
aaa
adc
add
push
xbegin
add
xabort
clc
arpl
add
sub
clc
adc
add
xor
add
pop
sahf
mov
jae
add
cmp
add
mov
mov
ss
clc
mov
arpl
add
loope
imul
popf
cmp
clc
mov
add
leave
pop
xchg
scas
divl
inc
add
mov
lea
inc
clc
lcall
and
add
clc
lret
add
clc
xor
add
or
mov
jge
or
clc
mov
xor
add
push
ss
sarb
dec
xbegin
mov
pop
sub
jb
add
add
and
add
icebp
pop
inc
add
mov
add
xchg
push
fwait
stos
cmp
xchg
test
push
ds
xor
mov
sar
jb
add
call
add
shl
clc
xchg
cmpsb
clc
out
cmp
add
lahf
stos
ret
clc
mov
dec
jecxz
inc
add
popf
in
adc
add
in
aas
repnz
push
xchg
cmpsb
clc
popf
xchg
loop
xor
add
js
scas
lsl
add
jb
add
add
xchg
test
push
add
push
add
dec
jecxz
pop
cli
out
lods
add
and
add
jne
dec
pop
xchg
push
outsl
mov
clc
std
jle
pop
lahf
lahf
mov
push
fbstp
add
clc
mov
fmulp
lahf
sub
ljmp
add
cmp
sbb
add
xlat
xor
add
fildll
clc
or
loope
out
lock
add
cmc
sub
dec
in
sub
or
ss
sahf
mov
cmp
outsl
in
cmp
add
sti
mov
push
clc
pop
jmp
xchg
lret
in
cs
in
ficoms
mov
hlt
jl
out
dec
aad
clc
dec
gs
pop
out
adc
add
sbb
shrl
rolb
jp
into
xchg
mov
imul
test
cwtl
dec
cli
xbegin
add
loop
jo
add
clc
je
ss
lock
fnstcw
or
jb
add
nop
cmp
add
cmp
push
clc
outsl
daa
clc
mov
adc
add
add
add
add
dec
fs
jbe
jle
push
add
and
ret
add
sar
pop
sbb
ljmp
mov
mov
or
aas
inc
clc
pop
or
xchg
dec
jle
mov
xor
xchg
or
scas
test
ljmp
jbe
xor
sub
dec
sub
sbb
clc
roll
add
repnz
cmpsl
clc
mov
push
add
or
clc
inc
add
pop
ja
dec
push
add
imul
test
repz
adc
add
pop
adc
cs
dec
adc
add
jmp
xchg
lods
loopne
dec
bt
cmc
push
cmp
jo
add
add
cs
out
lret
ja
push
clc
movsb
clc
mov
fisttpll
dec
bound
add
call
icebp
mov
add
clc
leave
mov
jno
add
cmp
cmp
std
cli
inc
clc
test
movsb
clc
pushl
inc
add
mov
cmc
cmp
out
popa
add
mov
clc
out
cld
sub
add
add
xor
fs
in
cmp
clc
or
aas
pop
jp
clc
cltd
gs
sbb
xchg
and
xabort
clc
pop
es
push
jae
add
arpl
add
clc
jmp
pop
dec
clc
push
add
add
mov
add
push
add
filds
jne
icebp
cmp
add
inc
clc
or
clc
mov
adc
add
jmp
mov
jae
add
add
mov
xchg
cmp
test
clc
arpl
add
add
in
in
jmp
leave
outsb
in
mov
push
test
push
jge
mov
dec
mov
clc
or
add
js
aaa
cmc
stc
adc
add
push
add
xchg
std
inc
add
aaa
jg
jne
clc
nop
jb
add
add
adc
add
sbb
add
add
mov
clc
xor
clc
arpl
add
gs
hlt
inc
add
loope
adc
fildl
add
clc
loope
js
lret
push
ds
add
js
vcvtps2pd
mov
cmp
push
push
ret
clc
mov
inc
clc
and
add
clc
and
add
add
inc
add
sbb
clc
mov
add
jnp
sbb
add
rcrl
and
add
pop
add
add
icebp
jmp
clc
popf
xor
add
or
jns
movsb
clc
fcom
insb
aas
loope
lcall
add
add
add
insb
push
clc
cmp
mov
add
icebp
inc
clc
test
pop
sbb
ret
fwait
adc
adc
add
xchg
gs
mov
clc
insl
jae
add
add
add
mov
clc
pop
lock
aad
add
out
inc
add
popa
add
data16
int
mov
push
fmuls
and
flds
add
cmp
repz
mov
pop
fisubl
clc
xchg
jae
add
jge
clc
mov
scas
push
ficoms
add
mov
sub
cmp
outsl
mov
fistpll
jbe
clc
jae
add
js
xadd
xlat
cmpsl
clc
inc
add
scas
in
cmp
arpl
add
clc
stos
dec
or
clc
out
push
fisttpl
scas
inc
clc
notb
ja
add
in
pop
js
clc
or
clc
jae
add
cmp
add
clc
je
sub
add
cmp
inc
add
adc
add
add
fistl
addr16
mov
add
add
sar
add
add
add
pop
clc
and
add
add
lcall
mov
add
in
sub
add
add
adc
popa
add
sub
jecxz
sub
jb
add
jge
clc
outsl
adc
add
add
sti
mov
add
push
add
mov
clc
pop
in
sti
iret
dec
mov
clc
fidivrs
push
xlat
xchg
movsl
clc
jo
add
xchg
push
add
fidivs
and
mov
push
mov
xchg
je
clc
loop
xchg
out
pop
fdivrs
clc
add
add
in
cmp
add
test
adc
add
mov
daa
clc
pusha
add
push
xchg
stos
mov
add
inc
clc
pusha
add
mov
clc
cmc
and
add
add
clc
sub
jno
add
add
ret
clc
add
add
clc
cmp
clc
mov
clc
xchg
ds
add
sar
mov
clc
sar
clc
lcall
xchg
push
mov
clc
daa
clc
push
add
cltd
cmp
clc
in
out
push
xchg
dec
out
rcll
add
add
out
repnz
movsb
clc
push
ja
add
xor
jae
add
call
xchg
stos
jmp
adc
clc
aaa
mov
ljmp
lods
adc
add
inc
clc
sbb
pop
sbb
mov
clc
loope
xchg
fs
pop
dec
popf
or
je
mov
pop
pop
sub
add
mov
and
add
ss
or
add
inc
add
test
clc
ret
clc
mov
add
movsb
clc
mov
in
imul
push
dec
or
or
xchg
cmovge
in
push
int
cs
aam
clc
lret
cli
xchg
ret
clc
bound
add
mov
rorl
int3
jmp
or
add
xchg
movsl
clc
shl
scas
insb
xchg
pop
loopne
popf
sti
push
mov
mov
clc
xchg
mov
add
testl
xabort
clc
push
clc
add
pop
sbb
clc
mov
jp
shll
cmp
add
and
add
mov
xchg
sahf
cmp
mov
add
add
push
add
lock
rcrl
clc
and
add
add
xchg
mov
add
dec
test
imul
adc
add
insl
inc
add
push
add
ret
clc
adc
add
and
imul
sar
add
mov
mov
popa
add
mov
pop
cltd
sbb
add
push
or
test
sub
into
cmp
clc
push
jmp
clc
clc
jecxz
rclb
mov
mov
mov
rorl
clc
imul
lcall
lea
pop
lods
push
clc
imul
clc
lahf
adc
add
cmp
clc
adc
jns
sbb
clc
jecxz
dec
cmp
clc
cltd
ret
clc
pop
outsb
xbegin
daa
clc
jmp
je
cmp
out
push
clc
mov
mov
add
inc
clc
ret
enter
stc
out
loope
cmpsb
clc
stc
clc
pop
popf
insl
or
clc
push
cmp
clc
jbe
icebp
pop
mov
add
fs
xor
add
movsb
clc
sub
outsl
pop
clc
frstor
add
clc
in
shrl
mov
xbegin
das
shlb
mov
adc
sbb
add
mov
add
add
mov
mov
adc
add
add
cltd
outsb
push
jo
add
fwait
adc
fcoms
int
data16
dec
pop
cld
imul
in
or
decb
add
test
sar
mov
mov
pushf
jno
add
clc
inc
add
xor
add
das
pop
testb
add
iret
cmpsb
clc
inc
clc
dec
iret
push
add
outsl
mov
mov
xchg
shlb
and
add
out
cmp
xchg
imul
xor
add
xlat
adc
add
outsb
lret
lods
or
add
cmp
mov
ret
clc
daa
clc
cltd
or
xor
adc
add
or
clc
xor
add
clc
adc
add
add
icebp
sub
clc
fcomp
add
add
add
pop
add
add
cmp
push
xchg
mov
or
in
aaa
lock
add
add
cmp
push
cmp
add
mov
jo
add
clc
xchg
xchg
cmp
add
sbb
clc
leave
mov
mull
add
sbb
ja
clc
or
add
dec
je
clc
lock
add
mov
repnz
push
outsb
mov
clc
rclb
add
add
inc
clc
ja
loop
arpl
add
test
cmp
add
add
lock
mov
add
jl
gs
dec
dec
sub
test
and
add
add
mov
mov
cwtl
ret
std
ret
clc
inc
clc
fbld
movsb
clc
aad
clc
jnp
jge
cwtl
push
xchg
inc
clc
mov
clc
dec
push
leave
mov
lcall
push
add
xchg
lcall
add
mov
clc
push
xchg
sub
into
cmpsl
clc
jl
jae
add
clc
adc
add
add
add
add
fcompl
or
xlat
in
mov
push
test
pop
adc
xchg
fmuls
pop
cmp
fstpt
mov
push
clc
aad
push
add
mov
jl
push
xor
add
sub
dec
add
or
test
leave
cmpsl
clc
add
add
clc
dec
jg
cmc
or
xabort
dec
aad
jg
clc
std
jp
mov
ljmp
nop
xchg
push
lods
adc
mov
es
sti
or
sbb
mov
adc
rorb
or
add
xchg
pop
clc
add
add
loope
and
add
adc
add
stos
incl
add
mov
add
jno
add
clc
ret
clc
lock
add
clc
in
mov
mov
add
add
inc
clc
pop
cmp
nop
mov
mov
popf
inc
add
jmp
je
clc
mov
inc
add
mov
jne
mov
clc
fsubrl
sbb
clc
fdivs
jl
clc
lods
in
cld
jmp
xchg
repz
repz
repz
daa
clc
jg
clc
fsubs
sbb
xchg
pop
push
add
xchg
setno
add
xor
add
add
mov
jecxz
lahf
or
add
mov
mov
add
sub
xchg
mov
clc
arpl
add
xchg
push
out
xlat
add
add
int
mov
add
add
test
sti
clc
push
test
add
mov
cmp
add
cmp
pop
sub
addr16
inc
clc
lret
mov
xor
add
jne
stc
add
out
mov
jnp
push
pushf
cmp
add
push
mov
clc
cmp
clc
shr
sub
pop
outsb
mov
clc
iret
xor
add
inc
add
test
jl
sti
cmpsl
clc
cli
sbb
mov
adc
add
add
add
clc
int3
push
add
pop
push
xchg
lret
daa
clc
mov
jle
imul
mov
faddl
push
inc
clc
or
xchg
push
pop
or
ficompl
or
inc
add
adc
add
mov
je
add
adc
inc
clc
sahf
add
add
imul
or
or
xchg
mov
clc
add
clc
rcr
jbe
add
std
mov
add
sub
clc
or
movsl
clc
push
dec
mov
add
add
add
add
pop
pusha
add
bound
add
clc
js
cwtl
popf
sbb
push
movsb
clc
adc
enter
clc
pop
or
sahf
push
add
inc
clc
sub
push
cmp
xor
add
jbe
stc
dec
adc
clc
adc
lods
in
push
add
and
add
add
xchg
ds
clc
loope
push
add
ffree
clc
xchg
and
cmp
adc
add
add
adc
xbegin
inc
clc
popa
add
daa
clc
mov
jle
add
loope
and
hlt
push
pop
jb
add
inc
add
in
in
mov
insb
jno
add
jbe
clc
pop
and
add
clc
xchg
lret
xchg
jb
add
clc
sub
add
rclb
fs
cs
clc
fisubrl
cmp
pop
fstpt
jle
mov
push
add
jbe
clc
sub
add
lret
bound
add
xbegin
clc
jmp
clc
arpl
add
add
add
add
inc
add
fs
jns
xchg
lea
and
xor
add
push
add
fistpll
mov
test
loopne,pt
sbb
jno
add
push
sbb
pop
mov
xlat
adc
add
dec
pop
clc
test
and
sbb
inc
clc
outsb
insl
push
scas
mov
add
clc
xchg
push
pop
push
add
mov
clc
gs
mov
decb
in
pop
sar
loop
inc
clc
iret
addr16
jo
add
or
adc
add
fimuls
inc
add
jae
add
mov
and
add
pop
lods
push
xor
add
ja
and
add
clc
negl
cmp
xabort
cltd
push
jbe
pop
mov
add
push
cs
push
cmp
dec
mov
clc
xchg
push
add
shrl
adc
add
clc
xor
add
stos
jns
mov
add
into
fbld
ret
dec
ret
clc
jo
add
mov
lcall
lock
xchg
sub
stc
stc
jno
add
add
imul
movsl
clc
push
add
fildll
inc
clc
mov
insb
xabort
clc
dec
jns
xbegin
or
add
sub
clc
rcrb
clc
push
loope
out
inc
add
cmc
test
cmpsb
clc
dec
adc
add
cmp
gs
imul
mov
pop
adc
add
cmp
clc
aad
insl
sbb
clc
jp
add
mov
mov
mov
jge
sub
clc
dec
mov
add
mov
add
clc
xchg
sbb
xchg
add
add
dec
stos
sub
clc
enter
inc
add
ljmp
pop
xchg
adc
add
add
add
xchg
arpl
add
add
xchg
sub
add
add
add
fwait
sar
cmp
add
fprem1
mov
leave
inc
add
sarl
clc
mov
movsl
clc
pop
fmuls
dec
int3
cs
push
add
or
jb
add
clc
mov
mov
clc
mov
add
add
push
add
nop
hlt
mov
add
pop
mov
dec
in
cmp
add
enter
dec
ret
add
in
inc
add
cmp
and
add
test
xabort
clc
stc
pop
clc
push
xlat
inc
clc
cmp
add
test
roll
sbb
std
test
nop
xchg
xchg
push
test
mov
je
bound
add
xbegin
in
aas
dec
nop
jp
dec
cwtl
scas
jmp
add
xchg
loope
xchg
loopne
sub
add
repz
xchg
and
add
in
xlat
bound
add
daa
clc
push
notb
clc
enter
leave
repz
push
test
in
lock
add
addr16
pop
cmp
sub
mov
add
fistps
cltd
xchg
popf
loopne
sub
push
and
rorl
call
push
clc
mov
cs
xchg
mov
testl
dec
dec
adc
add
add
clc
pop
jno
add
sbb
leave
xchg
pop
mov
fwait
arpl
add
cmp
mov
add
inc
clc
fistl
clc
rcrl
insl
sbb
filds
add
and
add
sub
aas
add
add
cmp
or
add
lock
pop
pop
dec
stos
sar
iret
pop
dec
iret
push
add
mov
jno
add
add
cmp
add
xor
add
pop
mov
add
jecxz
and
add
ret
jl
cwtl
xabort
cmp
xor
add
add
or
sar
notl
add
add
dec
push
sbb
add
outsl
mov
clc
leave
clc
push
add
or
stos
add
add
add
stos
cs
add
scas
aad
aas
ljmp
cmp
add
cmpsl
clc
ljmp
clc
and
fldl
add
clc
clc
add
xor
add
sahf
data16
adc
add
push
sar
add
mov
stos
jle
sbb
push
add
sbb
jecxz
mov
clc
stos
fistpll
clc
mov
add
dec
xbegin
add
gs
dec
mov
fidivl
push
pushf
or
xchg
pop
mov
jo
add
adc
add
leave
movsl
clc
cmp
mov
clc
sti
cmp
loope
jle
nop
mov
clc
ficompl
and
add
call
push
cmp
add
xchg
mov
mov
ret
sbb
add
sbb
dec
push
clc
test
add
shrl
mov
cmp
add
loopne
dec
adc
add
dec
push
mov
add
push
add
das
push
clc
pop
in
jne
mov
or
clc
pcmpeqw
adc
cmp
hlt
pushf
inc
add
mov
mov
dec
fcmove
inc
clc
mov
clc
ljmp
sbb
xlat
int3
add
and
inc
add
cmp
xchg
cltd
fldcw
and
add
inc
clc
ja
lahf
lret
xbegin
push
add
jb
add
inc
clc
add
je
sbb
clc
stos
into
cltd
cmp
add
push
cs
fs
xlat
or
adc
and
es
pop
loope
out
xchg
sbb
add
add
fdivr
mov
imulb
adc
add
ficoms
push
clc
pusha
add
test
add
in
add
add
add
es
and
dec
sti
sahf
cmpsl
clc
and
clc
mov
hlt
cmp
add
add
add
add
clc
imul
add
pop
setl
fucomp
lret
and
add
outsl
jmp
clc
pop
pop
dec
pop
push
mov
cmp
push
add
mov
and
pop
dec
into
xor
xlat
sbb
test
clc
not
adc
sbb
mov
add
xor
add
jmp
repz
aaa
or
add
push
vmovntps
add
add
xchg
arpl
add
clc
pop
add
add
inc
add
mov
xor
add
cli
mov
add
cvttps2pi
fwait
xor
add
inc
add
notl
add
fisubrs
add
inc
add
pop
and
add
add
jo
add
shlb
pop
push
add
dec
insb
push
add
fistps
mov
mov
clc
sahf
std
inc
clc
out
cmp
add
es
dec
fistpl
push
clc
lret
cli
jbe
inc
add
sar
clc
xchg
cmp
add
add
sti
iret
mov
clc
aas
pop
mul
clc
fidivrl
add
push
sbb
aaa
cli
imul
pop
js
and
add
add
mov
add
inc
add
mov
cli
xchg
or
jle
clc
add
mov
xchg
or
add
jnp
clc
bound
add
sub
mov
xor
add
aam
add
in
or
and
add
in
ss
jmp
push
clc
mov
push
add
aaa
xor
pushf
clc
out
jnp
clc
data16
ret
clc
inc
add
out
popa
add
and
jg
add
repz
pop
cmp
int
clc
test
jge
xchg
into
push
hlt
pop
in
test
data16
mov
je
push
sbb
add
xchg
aaa
pop
clc
nop
dec
testb
add
mov
pop
ja
imul
stc
sbb
add
clc
cmc
adc
add
mov
mov
sub
jns
push
push
sub
daa
clc
sub
add
jo
add
add
out
sub
pop
sbb
xor
add
clc
pushf
sub
add
mov
clc
dec
sbb
xchg
cmp
or
test
or
push
mov
xchg
bound
add
arpl
add
arpl
add
add
sbb
adc
cmp
mov
stos
mov
test
dec
das
popa
add
inc
clc
movsl
clc
add
add
call
add
cmc
fildll
push
add
adc
jge
int3
std
jmp
mov
or
lods
push
inc
add
dec
lea
inc
add
dec
inc
add
cmp
adc
pusha
add
ljmp
cmp
sbb
mov
and
add
push
jle
add
je
clc
and
and
add
popf
ret
clc
adc
clc
pop
cld
mov
inc
clc
gs
cmpsb
clc
fdivl
insb
xchg
loope
sub
xchg
sar
clc
pop
dec
cmp
xchg
add
xchg
fnstcw
jl
add
cli
out
mov
add
push
add
cmpsb
clc
out
and
enter
lahf
imul
xchg
mov
add
std
inc
clc
cmp
xchg
mov
mov
fisttpll
xor
add
add
add
and
xchg
cmp
clc
jecxz
cld
test
nop
lea
mov
repz
clc
mov
pusha
add
cli
bound
add
add
push
add
add
sub
sub
add
popl
jmp
or
sbb
mov
sahf
add
add
adc
xchg
or
cmp
in
sti
cli
das
cmp
add
test
gs
xor
in
adc
add
pop
sbb
clc
test
fdivl
add
dec
push
clc
es
mov
add
insl
adc
add
outsl
fs
inc
add
call
jmp
clc
adc
add
xor
add
loope
cmp
mov
clc
dec
push
aad
clc
push
add
pop
clc
cli
inc
clc
sub
cmpsl
clc
imul
add
jp
add
cmp
clc
cmpsb
clc
or
add
cmp
add
clc
in
cmpsb
clc
fildl
add
add
push
add
sub
clc
push
stos
mov
xor
clc
cld
in
sub
clc
iret
ret
clc
mov
add
pop
adc
add
add
pop
push
call
mov
int
mov
xlat
into
idivb
inc
add
sar
es
das
xor
add
add
fidivrl
xlat
mov
sar
add
dec
and
add
mov
inc
add
xor
add
xchg
push
ljmp
mov
clc
sti
in
icebp
xbegin
jecxz
pop
mov
xor
cmp
ja
jecxz
jb
add
add
adc
add
add
add
sahf
lea
cmp
xlat
imul
adc
push
repnz
add
lods
pop
out
add
pop
loopne
mov
mov
sub
jmp
lea
sub
adc
add
clc
ret
clc
mov
dec
or
sbb
add
mov
imul
or
push
dec
roll
clc
hlt
mov
add
clc
ficompl
enter
dec
mov
adc
add
add
aam
sub
xor
add
add
clc
repz
add
mov
add
clc
xor
sar
add
sub
cwtl
adc
add
add
add
add
or
clc
dec
dec
lods
repnz
adc
add
daa
clc
xchg
jp
inc
clc
and
and
lret
sub
sub
imul
add
cmp
clc
inc
add
adc
add
or
ljmp
mov
negb
jl
push
adc
add
clc
stos
lcall
sahf
xor
xchg
cld
sar
clc
bound
add
clc
scas
pop
add
add
add
add
clc
popf
lcall
add
clc
or
std
or
add
xchg
jbe
xbegin
mov
add
add
pop
data16
adc
add
sub
scas
addr16
sahf
push
pop
popf
je
int
sub
jg
sub
clc
scas
sbb
add
or
cltd
js
scas
pop
jae
add
mov
out
aas
xchg
jo
add
ss
add
ds
add
adc
add
clc
mov
cld
bnd
jmp
jo
add
add
add
xchg
lcall
jo
add
add
sar
clc
inc
clc
outsb
xor
jmp
add
sti
out
test
mov
rol
clc
push
jmp
xchg
loopne
loope
push
aas
das
push
add
add
lret
sbb
daa
clc
dec
cli
outsb
stc
pop
cmp
inc
clc
pop
cmp
xor
add
push
clc
je
add
decb
stos
fdivs
inc
add
ds
add
in
cmc
jle
clc
xlat
or
pop
arpl
add
sti
mov
clc
in
test
sar
add
push
mov
mov
clc
push
add
push
mov
and
lcall
or
jns
add
pop
mov
fimull
add
xabort
lahf
sbb
clc
or
add
and
loope
fnstcw
clc
or
add
test
add
pop
dec
lahf
test
push
inc
clc
sbb
ljmp
xchg
out
mov
add
in
dec
mov
add
jne
clc
sti
pop
pop
mov
stos
jl
cmp
leave
into
bswap
pop
clc
rcrl
dec
mov
mov
add
aam
add
das
movsb
clc
xchg
movsl
clc
and
add
jb
add
mov
jbe
or
clc
es
mov
inc
add
fimuls
dec
jg
clc
mov
jae
add
mov
addr16
pop
clc
fbld
add
popf
sub
pushf
mov
clc
mov
mov
clc
sub
aas
sti
mov
add
clc
out
push
clc
xchg
fsubp
clc
fsubrs
push
jmp
push
add
adc
add
add
jo
add
clc
push
pop
mov
add
addr16
push
add
pusha
add
std
ret
clc
jmp
jae
add
clc
dec
shrb
mov
es
jle
pop
mov
add
add
sbb
xor
add
sti
in
inc
clc
ror
jbe
aas
sar
enter
clc
jle
mov
insb
cmc
fdivs
adc
lock
stos
clc
push
inc
clc
cmp
fwait
sbb
xor
sub
clc
push
ds
sarb
cmp
add
clc
imul
into
cmp
sahf
adc
add
mov
add
jmp
push
add
sbb
add
sbb
cmc
mov
xor
stc
add
add
add
lahf
pop
xchg
testl
or
mov
ret
clc
or
pop
adc
inc
clc
jle
jbe
pop
push
outsl
repz
add
pop
sahf
shufps
push
sub
enter
add
add
out
leave
jbe
add
or
dec
cmc
push
add
arpl
add
in
stos
or
add
shll
stc
mov
xchg
jge
lcall
ret
clc
inc
clc
imul
mov
pop
mov
test
jo
add
clc
cmp
add
add
add
mov
jl
mov
clc
mov
jne
sub
clc
lock
jns
icebp
imul
push
xor
add
outsl
dec
pop
leave
push
dec
int3
mov
ds
mov
dec
jno
add
ljmp
stos
in
jae
add
das
imul
sbb
arpl
add
pop
test
push
sbb
clc
leave
xor
add
mov
add
iret
rcl
pop
jnp
cmp
or
adc
add
add
clc
mov
mov
dec
push
add
cmp
add
pop
add
add
sub
gs
xor
aam
add
fsub
clc
xor
add
clc
in
jmp
sub
fidivrl
fldt
jmp
jne
ret
clc
mov
lods
fistps
pop
sbb
clc
jae
add
add
jbe
clc
sti
cmpsb
clc
jnp
mov
jo
add
clc
int3
pop
pop
mul
clc
sbb
add
mov
clc
mov
push
add
rcl
insl
jns
test
fbld
add
add
movsb
clc
icebp
out
dec
test
add
jle
fs
push
clc
and
add
jge
dec
nop
pop
xchg
push
dec
sbb
lret
add
add
sub
sub
or
mov
out
dec
nop
cs
xor
add
clc
sub
pop
int3
push
pop
cmpsb
clc
mov
adc
xabort
clc
cmp
pop
clc
shl
clc
fistps
clc
int3
ficoms
add
out
cmp
clc
mov
add
imul
mov
jle
clc
aaa
cli
es
test
jl
dec
push
popf
arpl
add
shr
mov
clc
sti
adc
add
add
sti
insb
stos
out
adc
inc
clc
shll
add
pop
jmp
clc
or
add
call
and
push
dec
clc
mov
add
add
mov
clc
xchg
jle
add
imul
arpl
add
clc
sar
push
leave
mov
add
aad
add
lock
mov
dec
mov
pop
out
jl
popa
add
jmp
push
clc
call
add
adc
add
add
imul
mov
add
filds
add
pusha
add
test
pop
push
clc
pop
loop
dec
cmpsl
clc
repnz
out
out
dec
cld
dec
cmp
add
xchg
mov
stos
pop
pop
adc
movsl
clc
dec
sahf
xchg
and
add
clc
jo
add
or
xabort
jmp
fcoms
add
scas
iret
dec
and
js
xchg
stc
call
add
add
add
add
imul
clc
ss
lret
out
adc
add
mov
xlat
mov
xchg
pop
clc
lahf
cmpsb
clc
int3
cmpsb
clc
or
adc
add
add
mov
jb
add
add
inc
clc
or
add
cltd
jnp
clc
inc
clc
repz
clc
loopne
lea
add
push
add
jb
add
jnp
add
aad
push
clc
pop
sahf
mov
xchg
arpl
add
je
clc
jb
add
hlt
mov
clc
xchg
lret
inc
clc
jnp
aam
sahf
fildl
add
daa
clc
icebp
outsl
jo
add
mov
add
cld
jae
add
add
sub
out
dec
mov
adc
add
clc
sbb
clc
in
int
mov
daa
clc
mulb
clc
mov
clc
ror
inc
add
or
add
sub
add
ret
clc
and
add
dec
pop
repz
xor
add
cmp
add
lea
aam
push
add
daa
clc
ss
push
xor
add
add
and
mov
mov
cmp
cmp
add
push
xchg
xor
add
ds
into
gs
add
clc
jae
add
mov
fwait
sahf
dec
cmp
push
add
cmp
clc
imull
cmp
sar
lret
clc
jo
add
cmp
into
mov
add
shrl
ss
and
pop
out
rorl
ss
bound
add
clc
mov
add
data16
mov
or
add
cmp
cmc
call
and
add
add
fistps
nop
inc
clc
jb
add
movsb
clc
shr
sbb
sub
clc
jae
add
jge
pop
fs
lock
add
clc
or
add
sbb
int
mov
add
adc
clc
fisubrl
push
rclb
fldcw
inc
add
push
add
cmp
push
add
and
add
add
movsl
clc
cwtl
cmpsl
clc
jl
mov
add
idivb
dec
jb
add
add
or
mov
out
adc
add
mov
clc
sbb
add
cmpsl
clc
lods
xabort
sub
clc
mov
in
sub
push
add
cld
mov
push
add
pop
pop
imul
xchg
insl
pop
lret
mov
add
sar
sbb
push
add
mov
clc
outsb
jmp
loopne
movsl
clc
pop
or
clc
leave
push
cmpsl
clc
mov
popf
ffreep
clc
cltd
cmp
popa
add
mov
jmp
ret
clc
mov
clc
decb
add
inc
add
pop
sar
inc
add
out
lods
lods
jnp
pop
std
out
dec
das
cmp
clc
fistpl
and
add
add
add
adc
add
cmp
rorb
add
add
lret
add
add
add
stc
cmp
mov
sti
nop
ret
clc
mov
pop
ds
add
inc
add
ja
cmp
mov
pop
sahf
cmp
popl
add
daa
clc
enter
scas
push
cmpsl
clc
call
mov
add
push
fsubl
add
inc
clc
mov
inc
add
inc
add
pusha
add
lahf
mov
lea
add
shrb
or
add
pop
sub
mov
aaa
mov
and
add
add
dec
aad
aad
push
dec
xchg
push
add
nop
mov
mov
fmuls
xor
add
lods
mov
clc
jae
add
pop
fsubp
clc
sbb
sahf
nop
stos
icebp
dec
addr16
add
out
pop
mov
dec
imul
add
addr16
enter
push
test
mov
data16
loopne
cli
pop
mov
add
jge
mov
and
add
clc
stc
lret
cmc
dec
inc
clc
nop
ja
mov
lock
clc
mov
fwait
lcall
xchg
rol
clc
pop
mov
xchg
mov
mov
int3
cwtl
dec
and
add
clc
push
add
sbb
mov
mov
and
add
add
fcmovnb
clc
push
add
push
lods
and
add
aaa
fadds
xlat
push
add
lret
test
adc
add
inc
add
cmpsl
clc
iret
or
dec
push
cmp
push
add
lea
insb
jnp
clc
inc
clc
testl
push
pop
clc
add
add
inc
add
sbb
add
popa
add
dec
in
xchg
inc
clc
int3
in
lods
xchg
mov
pop
adc
add
clc
dec
inc
clc
mov
clc
sub
clc
pop
sar
sbb
or
add
add
or
jg
add
popa
add
cmp
clc
or
add
clc
push
add
adc
clc
outsl
xchg
sbb
jne
mov
xor
add
add
xchg
push
mov
rorb
clc
jno
add
add
mov
adc
add
clc
inc
add
mov
add
xchg
popa
add
xor
add
jle
std
jo
add
mov
repz
sar
add
push
jnp
int3
cmp
mov
cmp
gs
lods
clc
fwait
sbb
cs
cmp
cmp
add
add
add
add
sub
test
pop
pushf
jle
ficomps
pusha
add
jb
add
jmp
sbb
jge
clc
fcoml
pop
and
add
add
sub
imul
mov
mov
or
cmpsb
clc
add
add
icebp
cmp
cmp
inc
clc
roll
and
cmp
jle
mov
test
sub
imul
clc
mov
pop
mov
cmpsl
clc
inc
add
popa
add
mov
clc
bound
add
mov
add
dec
inc
add
scas
dec
cld
xor
mov
clc
out
ds
add
add
lahf
dec
ret
jb
add
out
jmp
psrlw
fidivrs
clc
arpl
add
add
jmp
xchg
mov
pop
or
ss
cmp
add
cmp
add
clc
je
xchg
xchg
push
xlat
mov
mov
lret
gs
inc
clc
fsts
push
adc
add
add
xchg
lret
outsb
mov
add
punpckhwd
clc
cmpsl
clc
mov
clc
mov
pop
fidivrl
clc
or
insb
fstpt
sar
clc
cmp
mov
clc
sub
jmp
xbegin
sbb
cli
pop
lret
sar
add
aam
sub
cmp
clc
and
add
clc
icebp
mov
bound
add
inc
add
shl
clc
loope
xchg
push
clc
cld
call
clc
push
sub
add
cmpsl
clc
xchg
pop
or
clc
mov
clc
outsb
inc
clc
fidivl
das
movsl
clc
xchg
push
fimull
stos
xchg
std
cmp
clc
xor
push
add
pop
sbb
xchg
pop
js
popf
jmp
loope
mov
fwait
jp
lods
pop
int
jl
add
pop
push
xor
clc
nop
cltd
aad
push
add
pop
clc
movsl
clc
clc
push
mov
icebp
and
test
and
add
clc
xbegin
test
js
cmp
cwtl
fdivl
cmc
inc
add
dec
mov
mov
clc
aad
clc
cltd
icebp
not
add
add
mov
mull
mov
add
xor
and
add
pop
clc
stc
bound
add
clc
daa
clc
and
add
nop
xchg
fnstsw
clc
in
jns
clc
outsb
cli
sbb
add
popf
cmpsl
clc
enter
add
sub
and
add
and
sub
clc
in
xor
add
push
xchg
cli
inc
clc
pop
inc
clc
pop
xor
add
adc
add
sub
in
mov
mov
add
add
mov
add
add
add
sbb
add
pop
mov
add
imul
idiv
and
add
sar
jb
add
jnp
clc
cwtl
ja
or
clc
mov
and
sbb
sar
add
mov
add
adc
mov
inc
add
jnp
jb
add
xor
add
sbb
lods
and
fstpt
add
add
add
movsb
clc
jo
add
es
addr16
pushf
sub
std
cmp
clc
jns
add
loop
and
add
pop
enter
popf
clc
je
pop
adc
add
cmp
repnz
cmpsl
clc
sub
lcall
das
push
add
pop
mov
clc
call
pop
sbb
insb
cvtdq2ps
outsb
aad
je
dec
mov
add
mov
clc
sub
aam
lods
imul
jecxz
popf
mov
clc
popa
add
mov
xabort
test
sbb
add
stc
sbb
jl
push
inc
clc
cmp
test
lock
push
cs
xchg
sahf
xchg
mov
clc
or
xabort
sub
and
add
stc
mov
jl
mov
jmp
loop
jbe
add
fs
add
add
out
sbb
add
dec
push
add
add
sbb
clc
es
pop
ljmp
clc
clc
aas
dec
aaa
mov
adc
add
out
aas
xabort
inc
add
sub
leave
or
cltd
pop
xor
add
push
add
sub
out
dec
cmp
add
fisubrl
mov
add
push
add
adc
add
ret
clc
fmul
jns
sar
aad
xlat
pop
es
in
jle
push
dec
dec
mov
or
add
push
bound
add
leave
mov
push
pop
add
inc
clc
adc
add
sbb
clc
jl
push
xlat
mov
paddsw
xchg
imul
or
mov
icebp
inc
add
xlat
leave
pop
clc
mov
mov
mov
test
or
in
sub
dec
pop
jp
push
jae
add
cwtl
pushf
cmp
lcall
mov
add
mov
mov
clc
mov
sar
and
add
add
mov
add
add
adc
xchg
sbb
xbegin
add
mov
add
clc
fnstcw
aas
call
sub
cmc
mov
cmpsb
clc
enter
jge
inc
clc
and
add
mov
dec
fidivl
add
xor
add
sub
aam
clc
add
add
imull
add
push
inc
clc
popf
xchg
fstps
cmp
inc
add
lcall
sub
add
add
aad
ds
lcall
imul
jb
add
push
add
xor
add
push
dec
mov
and
add
push
add
push
add
mov
sahf
imul
add
add
js
cmpsb
clc
sub
ja
aas
xchg
lcall
xchg
xor
add
es
xor
add
pop
mov
or
rcll
mov
mov
dec
xchg
mov
add
insb
lods
sbb
das
mov
mov
clc
leave
and
add
add
nop
mov
sub
or
ret
clc
lea
mov
in
sbb
roll
add
fidivs
cmpsb
clc
lods
xor
add
clc
cmp
inc
add
push
add
aam
clc
adc
add
add
sub
fcoml
add
cmp
clc
jo
add
xchg
testb
aam
inc
clc
in
cmp
mov
mov
jl
add
lock
add
inc
clc
out
push
ret
clc
mov
jmp
daa
clc
push
clc
xchg
dec
insb
push
add
daa
clc
adc
add
lods
or
insb
jne
clc
test
es
cs
clc
cmp
add
add
xlat
mov
clc
mov
div
mov
clc
jmp
xchg
icebp
fidivl
add
cmp
sbb
popa
add
lods
mov
push
cli
xbegin
clc
loopne
sar
xchg
adc
add
test
xchg
lahf
mov
dec
cmp
clc
dec
cmp
test
add
sub
cmp
add
clc
jp
outsl
data16
and
add
add
ss
inc
clc
jmp
aad
clc
mov
clc
fildl
inc
clc
clc
or
aaa
mov
dec
aas
fs
icebp
popa
add
outsl
push
sarl
dec
int3
dec
cmp
adc
add
jg
clc
sbb
add
xor
lods
add
add
xor
add
clc
sub
ss
insb
cmp
cwtl
mov
incl
clc
scas
movsb
clc
fisubs
add
add
add
xabort
cmp
popa
add
xchg
jne
in
jle
add
pop
mov
and
addr16
push
add
push
add
inc
clc
jp
inc
clc
cs
adc
add
fs
in
push
pusha
add
shl
ljmp
add
cmp
fldenv
clc
or
inc
clc
shlb
inc
add
push
add
inc
clc
xchg
stc
pop
add
add
divb
add
fistpl
adc
add
sub
mov
clc
pop
push
add
test
sub
es
js
sar
in
dec
mov
push
cmp
gs
pop
xchg
jge
add
aaa
xor
add
adc
add
clc
xor
mov
add
add
jg
clc
mov
cwtl
cs
add
jbe
leave
nop
inc
clc
lock
pop
ficoml
fisttpl
inc
clc
or
jb
add
sbb
jne
clc
cmp
jo
add
dec
and
add
push
mov
clc
outsb
dec
pop
inc
add
notl
or
mov
and
add
and
clc
or
clc
and
cs
dec
incb
outsl
push
dec
xchg
lods
xchg
sub
add
sub
clc
pop
into
sbb
aas
jecxz
sbb
push
push
add
nop
add
enter
add
in
pop
ds
pop
stos
gs
fldt
sub
out
pop
fs
pop
xbegin
adc
add
add
mov
clc
outsl
insl
xchg
out
repnz
cmpsl
clc
repnz
inc
add
fistl
add
clc
inc
clc
sub
add
imul
imul
inc
clc
mov
dec
push
add
add
inc
clc
mov
add
imul
mov
imul
adc
add
add
clc
rolb
add
mov
add
add
xor
add
sar
cmp
clc
add
add
clc
mov
dec
bound
add
jo
add
clc
dec
stc
push
add
cmc
inc
add
push
add
cmpsl
clc
ss
clc
faddp
clc
adc
add
and
add
dec
sub
clc
jle
adc
add
mov
out
mov
add
arpl
add
sar
or
lock
jbe
cli
push
push
call
add
mov
clc
clc
dec
repnz
mov
enter
or
pop
test
int
clc
shrb
add
mov
xchg
mov
in
int3
dec
mov
add
leave
lcall
sbb
pop
clc
dec
jg
clc
xchg
xchg
inc
clc
movsb
clc
adc
add
aas
mov
clc
je
clc
shl
mov
clc
jmp
clc
and
pop
lock
add
xor
add
cmp
add
sar
clc
jae
add
clc
xabort
movsb
clc
adc
add
adc
add
xabort
clc
xor
inc
add
js
test
imul
add
push
das
repz
lcall
clc
stos
xchg
cmp
add
push
add
loop
mov
push
inc
add
divl
xor
add
clc
jae
add
clc
xchg
sti
into
mov
add
sub
add
movsb
clc
pop
iret
add
add
add
jbe
nop
pop
add
add
add
cmp
mov
or
add
clc
lcall
add
xor
sar
sub
clc
sarb
xor
or
add
push
add
mov
lods
xchg
leave
mov
frstor
add
mov
add
and
insl
cmp
std
add
add
add
mov
jmp
clc
cmp
clc
pop
arpl
add
pop
roll
add
add
pop
mov
xchg
fdivl
add
clc
cmpsb
clc
xchg
test
lcall
aaa
int3
movsb
clc
sub
clc
in
adc
add
clc
and
add
clc
mov
adc
add
fdivrs
popf
inc
add
test
pop
dec
es
shll
add
pop
pop
push
aas
popa
add
adc
add
add
add
add
add
cmp
xor
add
pushf
pop
cmp
mov
and
add
xor
add
and
add
clc
vrcpps
add
lea
add
add
add
arpl
add
cs
xchg
test
int3
mov
clc
sbb
in
sub
cmp
add
add
jb
add
std
clc
test
add
jae
add
clc
jmp
clc
xor
add
clc
xchg
sub
mov
pop
mov
lret
add
add
clc
and
adc
add
addr16
cmp
xor
or
dec
test
inc
add
cmp
add
sar
aas
xor
ljmp
add
clc
and
push
or
clc
push
jns
popa
add
stos
cld
cmp
sub
add
cmp
clc
sar
dec
aad
jb
add
jb
add
sub
jp
cmp
mov
add
testb
clc
nop
xor
test
adc
add
add
dec
sub
out
mov
adc
add
add
add
js
adc
add
cmp
clc
adc
add
cmp
clc
movsb
clc
repnz
cmp
fildll
or
shrl
lock
xchg
shrb
sub
mov
jp
daa
clc
cmp
mov
rol
clc
xchg
insb
jmp
add
iret
cmpsb
clc
mov
imull
mov
aam
inc
add
jmp
sar
add
add
clc
lahf
ljmp
cmp
add
add
add
or
test
lret
push
xor
add
mov
cmpsl
clc
ljmp
add
data16
repnz
out
pushl
add
mov
clc
mov
cmc
or
add
cmp
jmp
neg
imul
sub
add
shrb
faddl
xchg
push
add
cmpsb
clc
push
add
decl
sub
cmp
lret
clc
cmp
add
lret
flds
push
add
aam
jb
add
stos
es
cmp
push
cld
psubusb
add
clc
dec
mov
je
fidivrs
mov
or
jno
add
clc
aam
clc
incb
add
mov
mov
mov
add
je
jle
std
and
ficomps
out
sahf
gs
loope
or
clc
xor
clc
push
add
or
call
gs
mov
pop
mov
add
add
push
imul
mov
adc
clc
lcall
clc
jns
add
xor
add
clc
and
add
add
fs
sbb
add
mov
clc
loope
and
add
in
cmc
shl
clc
add
add
inc
clc
push
pop
insb
add
out
sub
add
inc
clc
mov
clc
mov
clc
or
adc
add
outsl
dec
pop
sar
test
push
add
add
add
jne
jo
add
outsl
add
add
call
fistpl
add
jo
add
sub
add
lods
xchg
push
cmp
cmc
pushf
jle
imul
add
arpl
add
jg
and
inc
clc
idiv
repnz
out
iret
nop
out
or
inc
clc
lret
cltd
and
add
in
dec
jl
aas
out
xor
scas
pushf
pusha
add
mov
clc
and
add
jb
clc
out
loope
and
clc
std
xchg
sub
add
fdiv
insl
daa
clc
inc
clc
clc
ret
add
pop
xor
add
sub
add
and
add
outsb
std
mov
add
stos
iret
je
push
aam
and
repnz
ja
int
add
out
push
sbb
dec
mov
add
lods
push
sbb
cmp
clc
enter
in
cmpsl
clc
popf
add
add
add
push
imul
or
jae
add
inc
add
int3
stc
aam
clc
int3
pop
jns
push
adc
add
rclb
sub
inc
clc
push
sbb
cmp
jnp
clc
lods
inc
clc
cli
sbb
clc
and
add
add
ret
add
add
add
clc
inc
clc
into
clc
clc
and
add
cmp
mov
into
sar
sahf
inc
add
adc
or
imul
sbb
scas
mov
clc
cmp
add
lods
sahf
dec
xchg
jmp
add
mov
sar
lods
push
add
push
add
iret
mov
out
or
mov
add
pushf
and
clc
jns
cmp
sahf
fsubrl
adc
add
notb
outsb
dec
jo
add
add
pop
out
or
loop
sbb
vcvtdq2ps
add
cmpsl
clc
notb
ja
clc
repz
stc
pop
pusha
add
push
jmp
add
mov
xchg
sbb
clc
cltd
ret
clc
push
and
add
xchg
mov
dec
sbb
adc
add
inc
add
xchg
mov
push
jmp
xlat
adc
add
mov
sbb
mov
loope
pop
xchg
pusha
add
add
add
add
lods
sub
cmp
sar
clc
js
inc
add
int3
pop
inc
add
cmp
arpl
add
add
and
add
out
jno
add
in
fdivl
xchg
hlt
movsb
clc
lods
mov
add
add
loop
stos
ds
add
not
ret
mov
and
add
fwait
cmp
jae
add
clc
jecxz
addr16
xchg
dec
pop
mov
jne
add
popa
add
inc
add
inc
add
xchg
jge
clc
xchg
daa
clc
push
add
jg
cmp
out
mov
clc
pcmpgtb
int3
pop
inc
clc
imul
add
daa
clc
sti
inc
clc
daa
clc
imul
sar
icebp
out
cld
mov
clc
inc
add
decb
test
add
xor
inc
add
xchg
or
and
add
jo
add
add
divb
cmp
mov
int
clc
jne
clc
mov
push
mov
iret
stc
adc
add
add
mov
mov
add
stc
daa
clc
ss
adc
add
jo
add
popf
push
pushf
insb
out
mov
clc
out
int
mov
enter
sub
add
insb
fwait
enter
clc
push
mov
clc
lahf
mov
jmp
es
aad
clc
jns
mov
sahf
jl
clc
ds
cmp
xbegin
stc
lret
inc
clc
loopne
sahf
js
roll
insb
push
fwait
rcr
js
lea
xchg
xchg
jno
add
sub
add
int3
mov
or
popf
mov
call
push
scas
cmp
mov
test
mull
add
push
jb
add
fs
fs
add
add
add
xor
add
lahf
inc
clc
mov
clc
push
add
out
rclb
add
int3
sub
clc
movsb
clc
xchg
mov
add
fldl
inc
clc
addr16
pop
lret
cmp
add
mov
pop
pop
clc
movsl
clc
enter
fyl2x
xchg
add
sub
loope
int3
outsb
lahf
std
pushf
mov
add
jae
add
add
mov
xor
add
inc
clc
mov
add
add
add
call
add
clc
daa
clc
dec
cmp
cmpsl
clc
jmp
bound
add
push
loope
mov
and
add
inc
add
out
cs
lock
push
add
popl
add
xabort
push
fildl
clc
fsubrp
mov
jns
cmp
cmp
clc
adc
add
aas
xor
add
ljmp
sub
xabort
xor
add
cmpsb
clc
push
add
add
add
clc
fists
aad
xabort
std
dec
jnp
pop
pop
clc
xchg
pop
xbegin
dec
gs
jge
clc
shlb
clc
jnp
stos
ja
sub
clc
lock
mov
add
sub
add
inc
clc
mov
lods
js
mov
inc
add
add
add
add
sub
lret
jg
lock
bound
add
push
cs
mov
sbb
fwait
gs
mov
mov
outsb
adc
add
add
jmp
mov
push
or
imul
sbb
fnsave
add
jns
mov
dec
aas
push
add
into
dec
mov
add
repz
add
xchg
cmpsl
clc
jb
add
clc
mov
add
dec
pop
clc
daa
clc
xchg
xchg
fstps
aad
jae
add
xchg
and
add
and
in
ja
clc
cmp
loope
out
xor
add
insl
jmp
inc
add
lcall
mov
repnz
incb
into
ret
mov
add
add
loope
jne
clc
or
sahf
loopne
xchg
cs
add
iret
cmp
add
add
cmc
and
add
push
mov
add
fildl
nop
cld
test
pop
dec
push
data16
ss
aad
cmp
cmp
add
das
out
mov
sub
in
dec
xor
mov
sar
loopne
adc
add
aad
push
js
clc
dec
adc
add
pushf
and
add
add
pop
xchg
jmp
ljmp
add
stc
nop
add
xor
add
int3
lea
clc
sub
inc
clc
xchg
movsb
clc
push
xchg
mov
ljmp
clc
and
push
add
sahf
adc
add
add
out
mov
add
iret
inc
add
movsb
clc
outsl
neg
jae
add
stc
pop
sub
out
and
sbb
stos
add
add
add
xlat
pop
mov
cld
aad
clc
push
cmp
adc
add
clc
jl
into
mov
push
ss
bound
add
clc
or
movsb
clc
xchg
cmp
cltd
xabort
sbb
clc
cmp
loope
or
xor
in
cltd
stos
into
add
add
add
out
mov
fisttpl
fnstcw
add
loope
bound
add
hlt
test
add
jo
add
lea
add
mov
clc
and
add
clc
pop
ljmp
adc
add
push
add
add
cmpsb
clc
mov
clc
xbegin
stos
xabort
dec
dec
arpl
add
clc
es
add
add
add
add
pop
aaa
repnz
add
push
add
in
pop
adc
enter
jl
clc
add
clc
jmp
or
add
outsb
notl
mov
inc
clc
testb
loopne
mov
lret
add
xlat
adc
or
hlt
and
add
clc
jo
add
cmc
aaa
adc
add
push
cwtl
adc
add
arpl
add
xor
add
add
test
push
push
pop
pop
push
add
and
add
shlb
jl
aam
clc
and
add
je
sbb
xchg
insb
das
mov
pushl
nop
inc
clc
pop
clc
pop
aas
fisubs
add
cmp
xchg
mov
mov
adc
xor
add
sarl
xchg
gs
inc
clc
sar
insb
add
stos
push
add
add
clc
data16
cmp
or
xor
add
jno
add
sub
clc
aam
sti
xlat
mov
ret
clc
inc
clc
jle
add
cmp
add
pusha
add
sub
add
clc
cmp
cli
loop
out
enter
jne
pop
jne
add
push
cltd
paddsw
add
clc
mov
cmp
clc
mov
std
ss
mov
test
sbb
bound
add
clc
mov
add
std
cmp
test
hlt
insl
or
jns
xchg
add
add
repnz
and
add
popf
xchg
js
sub
clc
push
push
out
add
add
movsl
clc
jg
push
sar
mov
add
in
insb
and
aam
lcall
leave
das
sti
test
add
cmp
sar
fcmovnbe
fildll
add
clc
mov
clc
or
clc
push
outsb
cmc
loope
or
add
fcoms
add
insl
arpl
add
jne
aaa
iret
adc
add
xor
pop
div
cmp
jnp
clc
lods
in
out
add
xbegin
dec
sbb
arpl
add
lock
cmp
add
add
mov
pop
into
pusha
add
es
and
sub
das
push
aad
add
mov
clc
ret
out
ds
daa
clc
push
clc
adc
test
repnz
xchg
mov
sar
fiaddl
add
add
add
nop
mov
int3
jp
mov
lods
inc
add
daa
clc
pusha
add
xor
add
lea
dec
in
mov
sahf
popa
add
push
jo
add
clc
xchg
sub
add
test
ret
clc
xchg
xabort
and
add
ja
aad
sti
sti
cmpsl
clc
stos
mov
xchg
dec
adc
add
jno
add
and
and
add
bound
add
jg
add
or
or
clc
addr16
movsl
clc
jo
add
add
je
clc
fimull
in
sbb
in
add
add
or
add
pusha
add
aad
daa
clc
jle
push
jns
clc
loop
sub
pop
clc
pop
dec
adc
add
pop
out
fwait
out
dec
fstpl
xchg
xchg
std
pusha
add
inc
clc
imul
clc
lods
sbb
fsubp
clc
out
xor
mov
or
cmp
pop
js
test
pop
pop
push
sub
add
test
mov
jmp
xor
add
xor
push
add
loop
movsl
clc
sub
add
inc
add
mov
sub
xlat
loope
push
or
dec
imul
stos
sar
aad
add
pop
mov
add
rcrl
add
lods
push
push
ljmp
clc
in
icebp
xlat
sub
out
xchg
cmpsl
clc
add
add
sub
cmp
xchg
lock
pop
cmp
pop
xor
add
clc
bound
add
add
popa
add
xlat
outsb
mov
cwtl
jge
dec
jle
lea
lea
jmp
popa
add
vmovhps
inc
add
cmc
xchg
dec
stos
inc
add
push
scas
xor
push
dec
lods
push
add
add
add
insb
mov
add
clc
ja
clc
aam
push
add
dec
xabort
lock
cmp
addr16
jmp
xor
add
adc
fmuls
mov
mov
push
add
rcrl
mov
jns
xor
add
pusha
add
in
pop
ret
mov
jnp
clc
sbb
mov
adc
push
or
sub
xor
clc
mov
int3
jne
ja
sub
add
sub
clc
hlt
sti
jmp
fpatan
push
dec
cmp
clc
out
es
sbb
pop
mov
or
clc
adc
add
pop
inc
add
push
inc
clc
adc
add
clc
imul
clc
push
add
scas
mov
outsb
inc
add
dec
inc
clc
jecxz
cmp
add
add
clc
inc
add
pushf
ss
out
mov
push
stos
sar
mov
mov
clc
inc
add
scas
aam
xlat
adc
add
fbld
clc
dec
lock
xor
add
pop
push
add
int3
aas
cld
push
cmpsl
clc
gs
sub
jge
xor
add
repz
sub
clc
jbe
cld
cmpsb
clc
scas
jecxz
fildll
mov
add
and
xchg
or
stos
push
push
out
sti
out
jne
mov
xchg
inc
clc
jae
add
add
in
mov
jle
sub
clc
fisttps
pop
ret
imul
adc
ficoml
imul
add
clc
nop
fwait
dec
cmp
jb
add
mov
add
add
cmpsl
clc
shrb
clc
jnp
cmp
add
add
aaa
lock
outsb
xor
add
or
sub
add
clc
cmc
in
xchg
fsubrl
add
lcall
xchg
sub
es
dec
jae
add
insl
bound
add
lods
out
fstp
and
aam
clc
dec
push
add
mov
inc
add
out
cld
cwtl
sbb
movsb
clc
cltd
dec
scas
fdivrl
add
stos
in
jmp
xabort
add
add
add
imul
add
clc
push
scas
mov
jge
out
inc
add
or
clc
bound
add
mov
add
sahf
adc
add
test
sarl
clc
bound
add
clc
inc
clc
es
cwtl
icebp
and
add
xchg
mov
xchg
int
clc
pop
jl
mov
clc
xchg
xchg
adc
clc
cmc
add
add
clc
ss
mov
clc
je
xor
add
xor
add
pop
mov
clc
sahf
pop
aas
adc
add
clc
inc
add
or
movups
add
mov
pop
fs
inc
add
repnz
pushf
dec
icebp
mov
loopne
insb
mov
rcll
add
adc
pop
jae
add
clc
rcr
xor
add
or
in
shl
clc
pop
inc
add
sahf
bswap
mov
clc
xor
add
inc
add
push
add
lcall
mov
add
ja
and
add
add
shlb
add
and
adc
add
add
cmp
clc
cmp
ss
js
addr16
mov
clc
jmp
jae
add
popf
rcrb
sar
add
cmp
test
dec
cmpsl
clc
ret
imul
iret
xchg
pop
iret
mov
add
jnp
clc
movsb
clc
data16
rorl
jno
add
add
lock
or
clc
dec
neg
mov
add
xor
add
sub
sbb
fcomps
add
fs
scas
gs
sub
in
push
loope
add
cmp
imul
clc
cmp
xchg
inc
add
ret
clc
mov
add
clc
cmp
add
data16
cmpsb
clc
sar
inc
add
pop
pop
clc
arpl
add
mov
in
cmp
add
stos
mov
clc
xchg
in
adc
ja
add
mov
loop
inc
add
lods
sub
add
jo
add
add
fdiv
adc
rol
clc
movsb
clc
aas
fdivs
add
push
add
xabort
add
cmpsb
clc
fisttps
je
clc
gs
xlat
fs
xchg
stc
call
add
loop
cli
pop
mov
enter
add
inc
add
xor
add
adc
add
add
mov
push
in
xchg
int
decl
add
pop
dec
push
xor
pop
cli
mov
clc
mov
add
add
cltd
nop
test
leave
sbb
add
cwtl
dec
sar
jne
lret
sub
popa
add
mov
sbb
push
add
imulb
js
xbegin
cmpsb
clc
mov
push
fbld
es
clc
adc
add
imul
pop
lret
jge
add
mov
xor
add
add
sub
dec
lret
clc
lcall
addr16
sbb
push
adc
shl
js
out
jo
add
clc
nop
adc
add
clc
mov
mov
add
ds
clc
scas
dec
mov
xor
clc
mov
lahf
mov
add
add
addr16
or
xchg
pop
mov
add
dec
and
add
enter
push
xabort
clc
xchg
cmc
and
add
or
pop
cmp
clc
dec
or
clc
jg
cmp
mov
clc
sbb
add
lods
sahf
data16
nop
je
jge
add
imull
stos
out
int
clc
stos
pusha
add
and
add
add
addr16
inc
add
fnstsw
mov
add
test
cmp
add
mov
add
jo
add
and
mov
inc
clc
jge
shll
add
clc
bound
add
add
fldenv
ds
add
lods
movsb
clc
jae
add
mov
cs
sti
inc
clc
out
fistpll
pop
mov
clc
and
mov
clc
sti
xchg
cmp
clc
ss
aam
push
add
bnd
add
lods
mov
clc
test
add
mov
lret
scas
inc
add
mov
clc
sahf
and
adc
add
lret
cmp
add
push
sar
ds
cmp
movsb
clc
pop
sbb
clc
jge
add
mov
stos
popa
add
jbe
mov
sbb
mov
add
fsubp
clc
or
sti
mov
add
pusha
add
sub
pop
mov
push
mov
jne
add
sub
clc
daa
clc
xor
add
out
out
gs
aaa
dec
sbb
add
add
add
add
jge
add
add
clc
xchg
push
xor
clc
daa
clc
add
add
fwait
scas
outsb
mov
cmpsl
clc
shlb
clc
sbb
lret
lock
add
pop
sbb
imull
xor
add
add
add
xchg
mov
pop
stos
out
scas
js
add
or
add
clc
ret
clc
mov
clc
adc
add
clc
xor
cmpsl
clc
cli
fcompl
clc
outsl
stos
mov
add
push
add
bound
add
fildl
clc
pop
clc
jb
add
clc
sbb
add
ror
mov
out
xor
add
notl
ret
clc
and
push
xchg
and
add
clc
adc
add
clc
jbe
sub
clc
add
add
add
or
pop
pop
imul
jg
clc
aaa
add
add
pusha
add
mov
clc
pop
clc
push
mov
lret
mov
repz
add
mov
add
loopne
add
add
add
in
sti
jo
add
mov
clc
jg
and
dec
aam
clc
mov
inc
clc
or
add
sbb
xor
ds
out
sar
adc
jb
add
sahf
or
outsb
cli
pop
push
add
add
add
gs
mov
or
dec
mov
in
iret
out
aad
inc
add
mov
inc
clc
or
lea
clc
push
pop
sub
add
add
clc
lea
cmp
clc
pop
jge
push
leave
pusha
add
scas
pop
fcoms
clc
add
add
clc
cmp
add
ret
clc
pop
clc
shrl
add
mov
mov
clc
inc
add
sbb
or
ret
clc
and
add
mov
arpl
add
es
xchg
inc
add
lret
xor
add
pushf
es
jnp
push
add
add
mov
push
xlat
push
scas
adc
add
mov
in
daa
clc
sbb
shlb
cmp
lcall
add
cli
aas
mov
jb
add
clc
jb
add
lcall
clc
cmp
arpl
add
pop
test
scas
adc
lods
sub
clc
dec
mov
add
add
add
cmp
xor
add
clc
jl
xbegin
push
pushf
and
add
out
dec
mov
scas
push
mov
add
clc
add
add
idiv
jo
add
add
ss
aas
ficoms
clc
push
loope
setbe
loop
fcomip
bound
add
pop
sbb
jmp
clc
or
push
negl
cmp
popa
add
xlat
in
icebp
lret
xchg
pop
mov
or
mov
clc
int3
int
add
jo
add
fwait
mov
and
add
and
loop
jecxz
add
push
xchg
and
add
fdivl
mov
add
add
call
pop
je
fcomip
inc
clc
fwait
pop
addr16
push
mov
clc
push
ja
dec
cli
sbb
clc
inc
clc
dec
out
mov
clc
dec
mov
clc
xchg
inc
add
jb
add
clc
xor
or
add
or
clc
ljmp
xchg
or
popf
fxch
faddp
clc
or
xbegin
clc
imull
push
js
sar
clc
outsb
iret
adc
add
stos
and
add
or
inc
add
jo
add
sub
mov
clc
adc
add
add
fnstcw
add
add
sbb
add
jne
sbb
and
add
xbegin
je
xchg
pop
cmp
xbegin
clc
fcoms
add
and
add
stos
sbb
fnstcw
popa
add
mov
add
out
pop
cmp
add
rcr
fdivrs
mov
clc
std
clc
mov
clc
popf
mov
clc
sbb
add
cmp
add
test
pushf
xchg
jle
xor
add
clc
pminub
jns
cmpsl
clc
test
mov
inc
add
aas
push
pop
pop
clc
xor
add
fldl
add
mov
mov
es
dec
or
adc
addr16
cmp
clc
loop
sbb
add
or
out
sub
add
push
inc
clc
and
add
pop
dec
cmp
clc
pop
sub
movsl
clc
dec
mov
clc
dec
int
pop
jle
add
adc
imul
clc
push
clc
mov
clc
sbb
clc
mov
clc
or
popf
inc
add
xor
add
scas
jge
push
add
jo
add
dec
and
add
jg
add
clc
movsl
clc
cmp
xor
push
mov
mov
add
pop
clc
push
add
int3
sbb
sbb
aad
call
cs
dec
inc
add
imul
add
pop
sahf
shl
fwait
stos
xchg
clc
fwait
xor
add
inc
add
mov
inc
clc
add
add
or
mov
cmp
clc
int3
jge
clc
mov
clc
dec
out
and
sub
adc
add
adc
add
out
cli
aam
ljmp
clc
mov
repz
add
add
push
outsl
gs
int3
scas
mov
sub
clc
inc
clc
dec
es
cmc
fs
xchg
ret
push
add
mov
clc
dec
pop
lods
inc
clc
in
repz
or
fnstenv
add
movsb
clc
arpl
add
out
mov
sub
clc
mov
clc
mov
fimull
xor
sahf
repz
cmp
clc
movsl
clc
xchg
sbb
pop
test
in
je
out
dec
test
or
mov
add
add
sbb
inc
clc
push
pop
xchg
je
mov
add
arpl
add
pop
and
add
dec
lea
int3
xchg
ja
cmp
sti
push
add
sub
mov
sub
clc
inc
add
pop
and
add
or
add
add
adc
add
sbb
pop
fidivs
adc
add
add
arpl
add
jnp
mov
lcall
test
ret
clc
adc
clc
movsl
clc
xabort
inc
add
inc
clc
xchg
mov
in
dec
incl
add
mov
hlt
arpl
add
outsl
call
mov
mov
cmpsb
clc
cmp
iret
xabort
xchg
fstp
lods
mov
lret
mov
add
add
push
xor
add
jno
add
sub
mov
add
jo
add
data16
jo
add
adc
clc
inc
clc
sti
pop
cmp
clc
js
add
lret
mov
mov
clc
jg
mov
add
scas
push
add
adc
pop
loop
xor
test
push
push
push
mov
add
jae
add
clc
cmp
xor
add
clc
mov
xor
add
add
mov
clc
test
jge
punpckldq
add
clc
ds
test
add
add
movsb
clc
xor
lahf
filds
add
mov
adc
add
test
xchg
xchg
lods
movsl
clc
mov
clc
das
cmp
insl
insb
fdivrs
dec
js
mov
cmp
clc
xchg
lahf
cmp
sbb
iret
add
into
mov
push
push
out
xor
push
push
mov
in
adc
faddl
adc
std
lahf
fdivrp
test
clc
sbb
clc
iret
cmpsb
clc
sub
dec
sahf
or
test
add
outsb
leave
xchg
lock
clc
fnstsw
sbb
pop
cmpsb
clc
int
mov
add
add
dec
inc
add
cwtl
mov
clc
add
add
sbb
jo
add
add
gs
in
xchg
fiaddl
add
add
mov
cmp
sub
clc
stc
cmp
mov
cmp
add
add
cmp
inc
add
add
add
add
iret
shll
test
out
push
lods
push
add
push
into
jmp
mov
and
add
add
outsl
repnz
clc
shlb
clc
bsr
add
pop
pushf
inc
add
pop
adc
push
pop
in
push
mov
mov
fwait
and
add
sti
add
add
push
imul
clc
ss
iret
mov
push
add
leave
jecxz
dec
mov
sub
repnz
add
mov
outsl
loopne
pop
testl
scas
fisubl
test
and
add
sub
sub
clc
xor
add
sti
cli
leave
scas
xor
clc
cs
clc
adc
add
pop
xabort
xchg
add
jge
in
pop
clc
dec
ja
mov
xor
ja
out
daa
clc
cmp
and
add
clc
sub
clc
loopne
lcall
clc
aam
clc
mov
movsb
clc
imull
decb
add
and
leave
xor
add
clc
pop
pop
push
es
xchg
jne
jo
add
add
add
push
sti
and
add
sub
and
add
cmc
inc
add
adc
add
add
call
add
inc
clc
shrb
test
call
adc
clc
mov
movsb
clc
jne
sub
clc
mov
xbegin
or
sub
xabort
fsubrl
fmull
mov
lods
mov
add
negl
stos
xbegin
pop
js
dec
push
add
mov
clc
out
inc
add
xor
cmp
clc
fisubrl
clc
mov
add
ret
clc
xor
add
ljmp
clc
mov
add
movsb
clc
inc
add
aaa
xor
xabort
add
sub
pusha
add
mov
xor
add
pop
push
mov
cld
or
mov
add
repnz
add
shl
bound
add
mov
push
add
sbb
add
cmc
xchg
jmp
adc
add
add
iret
xchg
push
add
sti
mov
movsb
clc
stc
cld
push
clc
bound
add
lock
sbb
out
pop
adc
add
add
mov
add
xchg
push
add
jge
clc
add
add
into
js
nop
dec
jle
clc
cmpsl
clc
jbe
jne
ljmp
lods
push
add
test
test
sub
test
inc
add
cmp
mov
add
jge
call
clc
mov
outsl
cmp
sbb
lret
lahf
imul
outsb
jecxz
ret
clc
sub
push
add
loope
and
enter
sbb
clc
mov
add
cmp
mov
addr16
repz
bound
add
or
clc
add
add
clc
sti
mov
add
add
rorb
dec
xchg
fists
add
mov
loopne
int3
inc
clc
sbb
xabort
fwait
and
es
xchg
clc
cmp
mov
test
push
add
xor
add
push
std
fisubs
add
out
dec
and
push
add
xchg
mov
pop
clc
pop
ds
insb
fisttpll
je
pop
mov
mov
cmp
mov
clc
out
push
clc
movsl
clc
mov
and
add
add
lret
es
xchg
cmp
clc
pop
sub
dec
jmp
clc
clc
imul
add
mov
lahf
cltd
mov
outsl
sbb
pop
fisttpll
cld
pop
sub
or
and
add
clc
lea
cmp
mov
clc
out
ljmp
add
inc
add
xchg
lcall
inc
add
repz
mov
and
add
sub
xabort
mov
jg
shl
cmc
mov
dec
xchg
cmp
jge
push
arpl
add
add
add
xchg
mov
outsb
leave
cmp
daa
clc
inc
add
xchg
dec
clc
cmp
add
clc
addr16
icebp
add
xchg
enter
outsl
pop
push
cltd
hlt
add
add
mov
out
push
xchg
nop
lods
add
add
add
xor
add
loope
sbb
adc
clc
cmp
cli
mov
add
imul
imul
vorps
mov
dec
dec
data16
jne
mov
xchg
lods
adc
add
cmp
clc
xor
add
in
mov
jbe
lahf
sub
outsl
sahf
mov
movsl
clc
cmp
mov
clc
mov
or
fcomip
sbb
clc
xabort
dec
jno
add
cmpsb
clc
lret
clc
test
xor
add
clc
mov
sub
inc
add
mov
clc
pop
mov
dec
shll
cmp
clc
and
imul
aam
clc
xchg
into
or
sub
push
pop
shlb
add
in
iret
sar
mov
sar
add
ficoml
test
xchg
xchg
cltd
mov
clc
adc
add
clc
push
add
ret
clc
inc
clc
mov
popf
lahf
icebp
outsb
or
repz
add
jo
add
mov
sub
clc
jmp
dec
inc
clc
pop
xchg
push
add
or
and
add
jecxz
mov
add
add
lock
push
sub
add
fsts
sub
add
sbb
clc
and
add
clc
out
cmp
add
sub
jnp
pop
loopne
outsl
fmuls
inc
add
pop
mov
add
ds
icebp
mov
clc
dec
sbb
clc
mov
nop
sar
mov
add
jp
mov
add
pop
mov
and
inc
add
ja
in
fldt
add
jecxz
or
push
add
cmp
loop
xor
clc
mov
inc
add
mov
pop
or
add
pop
xor
stc
or
xchg
add
mov
outsl
push
add
and
add
std
lcall
clc
adc
clc
into
pop
leave
fsubr
jge
dec
pop
mov
loopne
inc
clc
clc
xchg
addr16
xchg
xchg
or
insl
cltd
loope
or
and
add
arpl
add
xchg
cmp
add
mov
adc
add
es
daa
clc
jg
or
test
outsb
lock
clc
jg
js
insb
cmp
pop
mov
jge
out
rep
inc
clc
hlt
push
fnstcw
aad
add
xchg
sbb
mov
add
mov
aam
add
or
pop
imul
clc
pushf
gs
mov
xabort
pop
and
adc
cmp
xor
add
add
mov
shlb
loop
dec
lcall
add
in
adc
add
pushf
cmp
clc
dec
jns
out
lock
insb
jl
clc
xor
add
repnz
add
imul
mov
add
add
mov
add
ljmp
loopne
out
daa
clc
adc
xchg
and
add
add
insb
mull
sub
jg
sub
test
dec
jp
jo
add
mov
sbb
out
push
clc
scas
sub
scas
popf
inc
add
mov
ja
dec
in
sbb
cli
sar
adc
add
cltd
cmp
add
adc
add
ljmp
jb
add
lahf
lret
lret
inc
add
inc
add
or
push
and
adc
add
add
out
in
sar
rorb
pop
clc
sub
add
ret
add
fcoms
test
add
icebp
dec
mulb
add
adc
dec
inc
clc
loopne
pop
push
loopne
lcall
add
into
push
add
dec
mov
sbb
imul
inc
clc
fs
lcall
cmp
lock
mov
scas
mulb
add
sar
clc
sbb
clc
lock
and
add
xchg
clc
data16
clc
jecxz
int
clc
push
push
add
push
lods
arpl
add
cmp
pop
xor
clc
daa
clc
mov
lret
dec
arpl
add
add
