add
ret
dec
dec
fidivrs
add
add
add
mov
add
add
and
and
int
sbb
cli
cli
cli
cli
cli
cli
cli
xor
ret
ret
ret
ret
ret
ret
ret
ret
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
adc
adc
adc
adc
adc
adc
adc
add
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
or
or
or
or
or
or
sub
sub
sub
sub
sub
sub
jnp
fcmovne
lret
lret
lret
lret
lret
lret
mov
mov
jg
dec
mov
mov
mov
mov
inc
inc
xor
mov
loope
loope
pop
pop
pop
pop
sub
sub
out
out
out
out
out
out
fcomp
fcomp
fcomp
fcomp
fdivs
and
test
popa
popa
popa
popa
popa
popa
adc
rcl
lcall
cwtl
cwtl
mov
div
imulb
insb
insb
insb
rcl
rcl
rcl
rcl
rcl
rcl
shll
jno
jno
jno
jno
cwtl
cwtl
cmp
in
in
in
in
add
out
out
out
out
mov
mov
or
ficoml
push
push
push
rcl
jl
jl
push
add
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jne
jne
jne
jne
loopne
div
div
add
mov
pop
pop
pop
pop
pop
pop
andb
add
add
adc
adc
add
add
and
and
add
add
loopne
aad
aad
xchg
xchg
xchg
xchg
xchg
xchg
jns
jns
jns
scas
scas
cs
adc
fs
xor
xor
xor
push
jae
jae
push
push
push
push
pop
pop
pop
aas
aas
aas
aas
aas
aas
xchg
scas
scas
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
scas
lahf
add
sbb
sbb
sbb
sbb
sbb
bound
rcll
mov
addl
mov
mov
mov
mov
mov
int
int
int
add
add
int3
xor
xor
pop
pop
pop
pop
pop
pop
add
add
addr16
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
sbb
mov
xor
in
in
in
push
push
push
lods
lods
add
add
adc
adc
adc
sbb
loope
adc
adc
rolb
inc
add
addl
addl
addl
mov
in
in
clc
clc
aad
or
jnp
jnp
jnp
jnp
mov
cli
push
push
ja
ja
add
scas
scas
scas
scas
and
and
and
add
add
rclb
add
add
add
xor
pop
jb
in
in
ja
add
add
cmp
lods
lods
lods
lods
jle
jle
jle
jle
and
mov
mov
cld
cld
cld
cld
cld
enter
cmp
xor
jne
jne
jne
mov
pusha
or
or
lcall
pop
pop
pop
add
pfmul
mov
mov
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
dec
add
add
jle
inc
inc
inc
inc
jmp
jmp
jmp
xchg
xchg
xchg
xchg
mov
adc
inc
inc
inc
inc
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
vpcmpeqb
scas
scas
scas
mov
gs
movsl
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
or
or
or
or
or
iret
iret
iret
iret
iret
iret
iret
cmc
cmc
jle
lret
lret
lret
lret
lret
lret
jo
jo
jo
jo
mov
add
add
mov
rol
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
rcl
rcl
sub
in
test
test
test
test
add
add
add
cmp
cmp
cmp
cmp
mov
mov
xor
xor
xor
mov
mov
cli
add
add
lret
add
leave
leave
add
add
int
int
int
dec
xor
add
add
add
cmc
iret
iret
iret
mov
push
mov
push
movsb
movsb
movsb
movsb
mov
mov
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
sub
sub
and
ret
ret
ret
std
std
std
rol
rol
movsb
add
and
mov
rcl
rcl
rcl
rcr
fdivl
xor
xor
xor
xor
ds
add
add
daa
daa
daa
daa
mov
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
mov
mov
jne
jne
xor
xor
xor
mov
std
std
std
std
xor
scas
scas
scas
scas
scas
scas
mov
jns
fwait
fwait
fwait
std
dec
dec
dec
dec
dec
or
div
div
div
arpl
arpl
cmp
cmp
and
and
and
and
icebp
xor
xor
xor
xor
xor
add
add
add
add
adc
adc
adc
adc
adc
sub
sub
jbe
jbe
cmp
cmp
cmp
add
nop
push
push
push
sub
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
jmp
jmp
jmp
inc
inc
inc
mov
jmp
daa
daa
inc
inc
inc
popa
mov
mov
inc
inc
addr16
adcb
stc
stc
stc
stc
stc
stc
cmp
and
and
and
and
nop
nop
nop
nop
nop
nop
nop
nop
nop
insb
push
push
push
push
push
clc
clc
clc
xor
xor
xchg
mov
mov
rolb
add
add
add
outsl
outsl
outsl
outsl
adc
adc
adc
adc
adc
addl
dec
dec
dec
dec
icebp
add
xor
xor
outsb
outsb
outsb
outsb
outsb
sahf
xchg
add
xchg
xchg
xchg
xchg
xchg
xchg
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
xor
xor
xor
xor
xor
jns
jns
cmp
mov
jmp
jmp
jmp
jmp
jmp
push
push
push
aaa
popf
popf
jns
jns
repnz
insb
loop
jle
jle
jle
xor
xor
xor
xor
fcmovu
fcmovu
fimull
dec
dec
add
adc
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
loopne
loopne
loopne
nop
nop
nop
nop
nop
nop
nop
repnz
das
das
pusha
pusha
aas
add
lock
aam
aam
aam
aam
ret
ret
ret
ret
xor
div
div
mul
out
out
out
out
pop
pop
pop
pop
pop
pop
pop
pop
pop
push
push
mov
mov
fwait
fwait
pop
pop
push
xor
xor
xor
add
jo
jo
jge
add
add
dec
dec
dec
dec
dec
dec
dec
add
pop
add
or
push
cmp
cmp
cmp
cmp
cmp
cmp
sti
sti
sti
sti
sti
mov
mov
push
push
push
push
push
mov
mov
mov
test
test
mov
and
and
dec
data16
jne
aad
aad
rcl
rcl
rcl
roll
add
rcl
add
fldz
add
jns
jns
jns
jns
add
add
and
aad
aad
aad
aad
aad
aad
aad
cli
cli
cli
call
repz
add
test
test
dec
push
or
or
or
or
mov
add
push
push
xor
dec
dec
dec
dec
ret
ret
ret
icebp
icebp
icebp
add
pop
pop
pop
pop
pop
pop
pop
pop
pop
or
es
jae
jae
jae
jne
icebp
icebp
aam
aam
add
js
cli
cli
scas
scas
scas
scas
scas
scas
cld
cld
cld
cld
push
push
push
push
push
push
xchg
xchg
xchg
xchg
ret
ret
ret
jge
jge
jge
mov
mov
aas
aas
aas
fiadds
imul
pop
pop
add
add
add
add
cmp
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
or
or
xchg
xchg
xchg
xchg
xchg
jp
add
js
pushf
pushf
pushf
scas
scas
scas
scas
scas
dec
dec
dec
push
popf
popf
popf
popf
popf
popf
test
test
inc
popa
popa
popa
popa
popa
popa
ljmp
ljmp
push
mov
mov
push
push
push
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
div
imull
sub
sub
sub
sub
sub
add
add
add
movq
cmp
cmp
cmp
jmp
jmp
jmp
out
out
jns
jns
jns
rol
shlb
cltd
cltd
push
push
push
push
push
push
push
dec
dec
dec
div
div
div
div
div
cmp
push
fmull
js
add
in
addr16
daa
daa
daa
daa
iret
call
dec
push
sub
sub
push
push
push
push
push
push
push
push
push
push
push
mov
cmp
jg
jg
add
add
fisttps
jnp
jnp
jnp
xor
xor
xor
test
test
imul
xlat
xlat
xlat
mov
mov
mov
sbb
sbb
mov
cs
push
in
in
in
in
in
in
add
add
add
dec
dec
je
pop
pop
pop
xor
or
or
or
or
or
xchg
xchg
xchg
xchg
xchg
sub
push
jo
jo
fcmovnu
das
das
pop
pop
pop
pop
pop
pop
lods
lods
lods
lods
lods
lods
rorl
enter
or
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
popf
popf
push
push
sbb
push
push
mov
ljmp
add
add
add
aas
jnp
mov
push
sub
add
add
add
pop
pop
pop
add
add
dec
dec
dec
dec
dec
mov
add
add
add
cmpsl
cmpsl
cmpsl
xor
push
push
inc
inc
inc
inc
inc
lret
and
add
add
add
add
ficoms
mov
mov
and
and
loop
loope
loope
mov
mov
add
add
add
add
cmp
push
sbb
leave
leave
leave
addl
div
testb
les
mov
mov
mov
mov
ret
ret
ret
ret
and
mov
dec
dec
dec
dec
dec
dec
dec
imul
imul
inc
test
test
mov
mov
sbb
sbb
sbb
sbb
js
sahf
sahf
sahf
sahf
jne
jne
push
push
push
push
push
push
push
in
in
in
inc
pop
push
add
add
add
enter
lock
ja
ja
ja
sahf
or
sub
ljmp
in
in
in
in
in
in
in
xchg
xchg
in
in
add
add
add
add
mov
gs
sbb
sbb
sbb
push
push
push
push
push
push
addb
stc
stc
stc
stc
stc
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
rcl
rcl
roll
add
aaa
add
add
gs
dec
enter
jo
jo
jo
jo
jo
ljmp
sub
jno
mov
push
push
ljmp
mov
mov
fadds
add
add
add
add
push
push
push
push
mov
jmp
scas
scas
pop
pop
addl
add
sldt
add
jo
jo
cmp
leave
leave
leave
leave
leave
leave
leave
leave
cmp
sub
sub
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
mov
sbb
ss
jmp
jmp
adc
adc
push
push
cmc
cmc
xchg
xchg
add
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
and
and
and
and
and
pop
pop
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
imul
inc
inc
inc
ljmp
cs
mov
outsl
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xlat
xlat
jecxz
movsl
movsl
movsl
xchg
dec
add
pop
push
push
stos
stos
stos
stos
stos
stos
stos
outsb
adc
adc
addps
in
or
or
or
add
mov
addb
inc
sbb
sbb
inc
inc
inc
inc
inc
inc
inc
inc
inc
push
push
clc
add
jns
jns
jns
jns
add
call
call
pop
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
mov
mov
mov
mov
mov
mov
xchg
xchg
xchg
xchg
add
in
lcall
sub
sub
sub
sub
sub
sub
fcomp
fcomp
fsubrs
sub
sub
fcmovnu
mov
jb
push
push
push
push
push
push
push
push
out
out
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
jb
cld
cld
cld
cld
inc
mov
jo
jo
jo
addb
add
jge
jge
jge
pop
pop
pop
pop
loop
loop
xchg
xchg
mov
sbb
addl
hlt
hlt
hlt
hlt
pushf
pushf
pushf
pushf
add
add
add
sbb
dec
dec
xchg
xchg
xchg
xchg
xchg
enter
jns
and
and
and
adc
adc
xor
inc
add
dec
dec
pop
pop
pop
pop
pop
pop
add
add
xchg
cmp
mov
add
scas
scas
scas
scas
scas
scas
les
ds
add
add
add
add
or
push
dec
dec
dec
dec
dec
add
add
sub
xchg
or
or
xchg
imul
inc
push
push
and
and
add
jg
jg
mov
and
and
and
call
mov
mov
mov
mov
mov
push
push
push
ret
ret
ret
ret
add
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
jns
add
add
add
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
jle
out
out
out
out
out
add
add
add
or
js
nop
mov
mov
add
rcl
rcl
add
add
add
add
add
push
push
push
push
push
push
or
or
ret
ret
jge
jge
dec
dec
dec
rcrl
pop
pop
pop
pop
pop
pop
pop
pop
pop
mov
insb
insb
insb
insb
add
mov
stc
insl
insl
insl
pop
pop
popa
popa
daa
daa
daa
rcl
mov
add
add
lahf
lahf
lahf
lahf
lahf
add
jnp
dec
leave
and
rol
scas
scas
scas
scas
das
mov
add
shll
jo
jo
pop
pop
pop
cmp
push
push
jne
jne
repz
xchg
xchg
xchg
xchg
xchg
xchg
xchg
jo
mov
mov
mov
mov
mov
movsl
movsl
movsl
loope
loope
loope
mov
mov
mov
mov
cmp
cmp
adc
adc
adc
cs
cmc
cmc
cmc
mov
add
xor
xor
xor
call
movsl
movsl
movsl
movsl
ds
mov
add
xchg
dec
dec
dec
dec
dec
das
das
das
das
jle
jns
dec
dec
dec
dec
cmpsb
cmpsb
cmpsb
outsb
outsb
aad
in
loopne
loopne
loopne
loopne
loopne
mov
mov
or
or
or
add
add
add
rcl
rcl
rcl
rcl
sar
incb
fs
add
add
roll
cmp
cmp
cmp
cmp
pop
addb
insl
cwtl
cwtl
cwtl
mov
mov
mov
mov
inc
inc
inc
loop
push
push
push
push
push
push
push
push
push
push
dec
test
test
test
add
add
add
mov
pop
pop
pop
push
push
inc
inc
inc
inc
lea
lea
add
cli
ja
ja
ja
sub
sub
adc
pop
pop
pop
out
sbb
rol
addl
pop
pop
pop
pop
pop
pop
pop
popf
popf
popf
popf
popf
popf
mov
jl
jl
fstp
fnsave
xor
inc
inc
inc
adc
adc
adc
add
add
add
ss
pop
push
test
rol
or
add
fucomi
ljmp
ljmp
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
dec
dec
add
add
mov
mov
adc
pop
lea
jnp
add
add
out
out
out
out
out
xor
bound
xor
or
fcmovnbe
mov
std
std
std
push
cmpsb
cmpsb
mov
sti
rol
ror
lret
mov
xchg
or
and
addl
in
in
push
push
push
add
add
lret
lret
lret
test
ficoml
xchg
xchg
add
and
adc
das
das
das
add
add
add
push
push
push
push
popa
popa
popa
popa
popa
dec
add
mov
es
movsl
pop
add
call
adc
adc
adc
adc
dec
dec
dec
dec
dec
in
in
in
xchg
xchg
xchg
xchg
pop
push
push
push
push
push
push
push
add
leave
leave
leave
leave
leave
leave
xchg
pop
pop
mov
push
push
push
push
push
push
push
push
bound
bound
mov
sub
sub
sub
sub
inc
les
adc
adc
adc
adc
adc
imul
add
inc
inc
inc
inc
inc
adc
xchg
xchg
xchg
lods
add
add
inc
inc
add
add
add
jns
jns
jns
jns
jns
cmp
mov
mov
jno
jno
add
cmovae
inc
inc
inc
inc
inc
cmc
cmc
cmp
movsl
movsl
movsl
movsl
movsl
movsl
movsl
xchg
lahf
lahf
lahf
lahf
adc
bound
aas
aas
mov
jg
sub
sub
xor
inc
inc
inc
inc
cmp
rol
rol
dec
dec
dec
dec
dec
dec
dec
scas
scas
scas
sub
fcmovu
fcmovu
dec
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
dec
addr16
push
push
push
addr16
addr16
scas
scas
in
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
outsl
outsl
sldt
jb
jb
addb
add
ret
ret
ret
ret
ret
mov
rol
rol
adc
adc
sbb
sbb
pop
pop
pop
fs
xor
add
add
mov
push
jnp
jnp
jnp
jnp
jnp
jnp
jnp
sub
sub
sub
sub
sub
sub
sub
sub
jle
jle
test
aas
aas
aas
and
and
and
aaa
aaa
aaa
mov
mov
mov
mov
mov
addb
lret
repz
dec
dec
dec
sbb
sbb
sbb
sbb
sbb
sbb
sbb
inc
inc
push
push
lods
lods
lods
lods
lods
lods
push
push
push
push
push
mov
sbb
sbb
sbb
sbb
add
daa
push
push
xor
xor
xor
xor
mov
cmp
sbb
push
mov
pop
pop
pop
pop
pop
pop
pop
scas
scas
scas
scas
scas
scas
add
add
fcmovu
fisubrl
or
gs
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
jno
jno
jno
sbb
repz
add
fsub
in
add
add
imull
add
add
insl
insl
insl
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
fdivrp
stc
dec
dec
dec
dec
dec
dec
dec
dec
adc
lock
js
jle
mov
sbb
sbb
sbb
sbb
sbb
sbb
stos
stos
lret
add
add
into
or
or
or
or
or
add
jb
jb
jb
jb
jb
jb
jb
jb
add
jl
pop
pop
pop
pop
pop
xor
outsb
jno
jno
jno
jno
sbb
jecxz
repnz
inc
inc
inc
inc
shlb
bound
bound
bound
incb
mov
mov
popf
push
faddl
inc
inc
inc
push
push
add
add
cmp
cmp
cmp
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
mov
les
sldt
add
add
add
addl
inc
inc
inc
inc
inc
add
mov
mov
imul
add
gs
pusha
pusha
cmpsb
aam
lahf
lahf
lahf
lahf
lahf
aad
aad
jecxz
jecxz
jecxz
xchg
mov
out
das
push
je
je
bound
ret
ret
lret
add
add
add
add
rclb
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
test
div
div
div
mov
scas
scas
sbb
mov
mov
or
jno
jno
jno
movq
nop
nop
mov
mov
mov
mov
and
and
and
mov
ds
and
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
add
fstpl
lcall
fcomp
fcomp
xchg
xchg
sbb
sbb
sbb
sbb
sbb
mov
add
or
adc
adc
push
push
div
div
divb
sbb
sbb
sbb
pop
pop
pop
pop
pop
inc
inc
inc
sbb
nop
nop
nop
nop
jns
inc
inc
inc
inc
inc
inc
inc
inc
add
xchg
xchg
push
jae
jae
jae
jae
jmp
sub
sub
sub
sub
add
sbb
or
iret
iret
into
into
into
into
into
into
into
into
add
add
add
aaa
aaa
aaa
add
add
out
out
repnz
sti
cli
les
pop
pop
fcmovu
fcmovu
fcmovu
fcmovu
cli
cli
sbb
add
add
add
add
adc
adc
pop
pop
pop
pop
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
or
or
stos
stos
stos
stos
stos
add
xor
xor
xor
xor
xor
xor
bound
xchg
add
out
out
out
out
add
add
clc
cltd
add
jnp
add
add
add
decb
dec
dec
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
cmp
cmp
add
jno
pop
pop
pop
pop
pop
pop
pop
pop
sbb
mov
add
inc
inc
inc
inc
inc
inc
aad
aad
aad
ds
xchg
push
adc
adc
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
clc
clc
clc
clc
clc
clc
clc
or
or
or
or
ss
mov
mov
loop
push
push
push
push
fucom
in
fcmovnu
fistpl
iret
iret
iret
iret
imul
fcmovu
xchg
xchg
xchg
lods
lods
lods
lods
lods
lods
lods
mov
dec
dec
dec
xchg
pop
xor
and
and
daa
xchg
xchg
xchg
xchg
xchg
xchg
xchg
add
add
add
add
out
out
out
out
out
out
out
out
out
out
out
out
add
add
and
add
rol
popl
test
test
test
in
in
in
in
pop
pop
aas
aas
aas
adc
add
add
and
and
aaa
add
into
into
into
into
pop
pop
mov
pop
pop
mov
add
jns
jns
jns
jns
std
std
std
std
std
repnz
stos
aas
aas
aas
aas
aas
aas
aas
loopne
loopne
loopne
pop
das
das
das
iret
iret
iret
add
add
add
xor
sbb
lock
and
and
and
sbb
sbb
sub
sub
sub
sub
and
dec
dec
dec
dec
dec
dec
dec
dec
lret
lret
lret
lret
lret
add
add
inc
inc
inc
inc
mov
jbe
jbe
jp
faddl
addb
cmp
iret
iret
iret
iret
es
popa
div
notl
mov
add
add
int3
int3
int3
int3
int3
int3
popl
add
mov
lea
jb
int
int
int
int
int
les
ds
sti
push
je
je
je
je
je
je
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
add
addl
sub
inc
inc
inc
inc
inc
inc
add
add
add
repz
mov
mov
cld
cld
cld
cld
cld
cld
cld
pop
pop
fcmovnu
fcmovnu
mov
add
pusha
cli
cli
cli
cli
cli
cli
cli
lods
lods
lods
add
add
repnz
imul
mov
add
add
add
inc
inc
inc
xchg
xchg
xchg
xchg
xchg
xchg
nop
nop
xor
arpl
add
add
js
js
js
leave
leave
lods
lods
psrlw
rcl
rcl
rcl
int
int
int
jns
and
loop
loop
add
add
pop
pop
pop
pop
pop
pop
pop
pop
hlt
add
cld
mov
les
ds
add
add
bound
pusha
mov
adc
add
push
add
movsb
movsb
movsb
leave
leave
leave
leave
cmp
cmp
mov
mov
lret
add
mov
mov
jg
jg
mov
loop
loop
loop
sub
sub
sub
sub
int3
int3
int3
int3
int3
mov
add
add
inc
inc
inc
sbb
scas
scas
scas
scas
scas
scas
scas
scas
scas
add
ret
push
push
push
push
push
push
push
push
push
push
stos
stos
popf
popf
popf
popf
jg
jg
mov
jmp
jmp
jmp
jmp
cmp
adc
adc
adc
or
or
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
mov
adc
mov
mov
fcmovnu
fcmovnu
fcmovnu
fcmovnu
mov
mov
mov
mov
mov
mov
mov
mov
xchg
ret
ret
ret
ret
adc
push
loope
sub
sub
sub
sub
add
enter
xchg
xchg
xchg
xchg
xchg
xchg
xchg
das
das
xchg
xchg
dec
dec
dec
dec
jae
jbe
adc
leave
leave
leave
leave
add
loope
scas
scas
scas
scas
scas
scas
scas
scas
or
or
rcl
cli
cli
cli
cli
cli
cli
cs
mov
and
and
mov
mov
mov
and
and
popa
popa
les
lea
add
add
loope
loope
loope
loope
loope
cmp
cmp
cmp
xor
xor
xor
add
stos
stos
stos
repnz
pop
pop
pop
pop
pop
pop
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
add
stc
stc
stc
jle
test
cmpsb
cmpsb
or
ss
push
mov
arpl
fwait
fwait
fwait
imul
fcmovu
enter
dec
dec
lea
mov
jae
mov
dec
dec
adc
adc
adc
adc
mov
mov
test
add
nop
nop
xchg
xchg
xchg
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
sub
sub
sub
adc
fs
div
add
push
push
push
push
subb
sub
sub
adc
adc
adc
adc
adc
adc
dec
dec
dec
dec
rcl
sti
sti
xlat
xlat
sbb
lods
lods
cmp
addb
push
push
push
push
push
aam
out
ljmp
mov
jae
jae
and
and
push
push
push
clc
clc
clc
clc
clc
clc
clc
clc
clc
add
add
mov
and
and
and
inc
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
pop
pop
pop
pop
pop
pop
int3
int3
int3
int3
int3
int3
add
add
mov
mov
andb
and
and
and
inc
inc
inc
add
add
mov
mov
cmp
cmp
cmp
cmp
cmp
cmp
mov
pop
pop
pop
pop
es
pop
pop
pop
pop
adc
adc
rol
mov
repnz
xor
enter
aaa
ja
ja
ja
ja
mov
mov
xchg
xchg
xchg
add
div
div
jmp
push
pf2id
sbb
stos
stos
jb
jb
jb
jb
jb
imul
imul
and
and
and
and
and
and
and
and
fcmovnu
fcmovnu
addr16
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
pushf
pushf
pushf
cli
cli
rcl
rcl
shl
mov
je
je
je
je
lcall
ja
addr16
fsub
lret
lret
lret
lret
lret
lret
xchg
xchg
push
fisttps
sti
sti
pushf
and
or
addb
xor
xor
cmp
rcl
rcl
add
movsl
movsl
movsl
movsl
lcall
scas
scas
scas
scas
jecxz
jecxz
cmp
mov
rol
shrb
xchg
or
mov
adc
adc
adc
sbb
enter
nop
nop
pushf
pushf
pushf
pushf
pushf
lods
lods
lods
lods
lods
out
test
popa
add
add
or
rol
stos
stos
stos
stos
stos
stos
adc
lahf
cs
xchg
push
mov
mov
mov
mov
add
lods
lods
or
add
out
add
jae
jns
add
add
add
add
in
out
out
out
out
out
pop
pop
xchg
into
into
or
cmp
dec
dec
dec
inc
inc
inc
inc
inc
xchg
xchg
loopne
loopne
loopne
and
je
je
je
je
je
scas
scas
stos
xchg
xchg
sbb
add
add
mov
mov
add
add
add
add
ja
ja
jge
jge
jge
jge
jge
cmp
cmp
jmp
jmp
pop
pop
lods
lods
add
add
repz
sub
sub
sub
sub
fisubs
mov
in
scas
scas
scas
scas
scas
scas
scas
adc
mov
loopne
fcmovu
fiaddl
add
add
add
add
data16
ds
jb
jb
add
add
add
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
sbb
sbb
add
ror
lret
lret
lret
fs
dec
dec
jge
jge
mov
or
mov
test
test
xor
xor
adc
adc
adc
adc
add
add
add
filds
add
into
into
popa
popa
aaa
aaa
aaa
aaa
aaa
aaa
lcall
repz
add
add
sub
cmp
cmp
cmp
cmp
add
mov
sti
sti
sti
sti
sti
testb
dec
add
add
mov
mov
add
scas
scas
scas
scas
scas
scas
scas
loopne
loopne
loopne
loopne
loopne
add
div
add
add
rol
rol
sub
sub
mov
add
in
inc
inc
inc
inc
inc
xchg
jbe
mov
push
push
push
push
push
push
add
add
loop
loop
insb
insb
insb
insb
insb
insb
insb
insb
inc
xlat
xlat
xlat
xlat
cmc
mov
jle
jle
inc
inc
inc
jns
jns
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
fsubl
gs
outsl
add
mov
aam
add
adc
loop
rcl
rcl
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
add
add
add
jge
arpl
arpl
push
push
push
push
push
push
push
push
arpl
add
add
jbe
jbe
jbe
jbe
jbe
push
push
push
push
push
push
push
push
scas
scas
scas
scas
scas
dec
dec
push
push
fstp
fucom
mov
inc
inc
inc
inc
inc
jecxz
jl
hlt
stc
mov
mov
call
lahf
lahf
lahf
lahf
lahf
lahf
or
or
data16
mull
mov
mov
and
mov
dec
dec
dec
dec
add
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
lea
or
or
xlat
aad
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
mov
mov
add
add
add
movsl
add
cmp
cmp
cmp
cmp
cmp
mov
mov
lock
int3
int3
int3
int3
int3
int3
int3
icebp
rol
fcmovnu
jne
sbb
repz
pushf
push
push
push
movsl
movsl
movsl
movsl
movsl
movsl
xchg
xchg
xchg
xchg
jmp
sub
pop
pop
pop
pop
pop
pop
pop
pop
pop
jo
jo
jmp
jmp
add
ret
jbe
jbe
jbe
aaa
aaa
aaa
add
add
add
jecxz
stos
stos
stos
push
push
add
add
cs
xor
xor
lret
fisubrl
out
out
out
out
out
out
out
test
test
fcmovnu
fistl
push
sub
stc
stc
stc
stc
stc
iret
iret
and
in
in
cltd
cltd
cltd
jbe
add
add
cmp
cmp
cmp
cmp
cmp
cmp
jle
jle
adc
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
aaa
aaa
aaa
sahf
sahf
sahf
dec
dec
pop
add
add
rol
shl
loopne
lret
lret
lret
lret
call
call
adc
adc
adc
adc
add
add
add
repz
add
div
test
bound
sahf
sahf
outsb
outsb
outsb
outsb
add
add
add
add
mov
mov
mov
rcr
or
and
and
and
add
add
add
sub
cmp
in
in
in
in
lcall
mov
sbb
sbb
sbb
sbb
fwait
fwait
fwait
mov
mov
mov
mov
scas
scas
scas
pop
push
push
push
push
push
push
push
push
push
push
push
push
add
add
push
add
rol
rol
rol
cmpl
mov
lea
sbb
sbb
jb
cmpsl
add
add
add
push
push
push
push
push
push
push
push
jns
jno
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
jg
and
and
out
push
mov
ja
lcall
add
add
mov
push
lahf
lahf
push
push
push
sahf
sahf
push
push
jle
jle
insl
addl
sub
movsb
movsb
movsb
movsb
movsb
movsb
outsl
mov
xor
xor
dec
dec
lea
out
add
or
or
add
sub
sub
sub
sub
or
or
movsb
movsb
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
lahf
lahf
add
add
add
add
push
pop
pop
xor
add
pop
dec
jae
stos
shl
sbb
mov
mov
out
inc
leave
sbb
imul
out
scas
xor
pop
cmpl
ss
sub
and
mov
push
mov
jg
xchg
fisubs
addl
or
rcll
sub
and
lahf
rclb
jnp
fwait
stc
insb
or
sbb
jge
sar
mov
adc
lds
pop
mov
iret
movlps
sbb
js
adc
outsb
mov
mov
push
cwtl
add
add
xchg
orl
movsl
das
push
dec
imul
jae
dec
xor
cltd
cs
mov
mov
inc
dec
in
fidivrl
jo
dec
push
dec
loope
inc
sub
sub
inc
call
out
xchg
pop
jl
pop
jo
xchg
jle
sub
or
and
notl
pop
jnp
lods
and
stc
xchg
imul
rorl
dec
mov
or
movb
mov
mov
xor
mov
add
add
mov
orl
cmp
inc
add
fcoml
shlb
add
in
out
mov
shl
aam
addb
inc
daa
aaa
sbb
add
enterw
sub
adc
adc
pusha
xchg
push
mov
loopne
xchg
sbb
inc
jg
mov
andb
mov
adc
test
dec
cld
push
pop
jnp
jl
xchg
push
or
mov
pop
in
xchg
dec
push
loopne
add
inc
mov
sysexit
push
cmp
jge
outsb
sub
rolb
and
inc
adc
lock
in
add
cmp
adc
cmp
xlat
inc
push
xchg
pop
movsb
add
aad
cmp
out
imul
xchg
dec
mov
cmp
dec
dec
sbb
adc
inc
inc
lds
lds
sti
sub
inc
push
shl
addb
out
out
lahf
xor
inc
add
je
dec
mov
daa
sub
xor
inc
stos
loopne
outsl
jle
mov
or
out
jge
adc
outsl
cmp
mov
loopne
jmp
pop
sahf
adc
js
sti
mov
jmp
imul
andl
jb
shl
mov
dec
dec
push
pop
popf
add
das
sub
sti
popa
lret
add
nop
adc
je
add
push
shll
lods
inc
jge
out
add
outsl
addr16
shlb
and
push
mov
popf
and
jae
push
pop
xchg
stos
pusha
add
cmove
pop
and
cmp
addb
inc
jb
xchg
fimuls
aas
arpl
stos
repnz
add
pusha
sbbl
jns
adc
or
rolb
jle
es
enter
and
loopne
push
mov
add
adc
aaa
inc
xor
dec
jle
jl
jb
imul
add
rolb
movsl
in
push
inc
aas
mov
xchg
push
and
cmpl
jbe
pop
pop
jne
xor
jnp
cltd
aaa
cwtl
jmp
cmpsl
shrl
and
push
pop
inc
mov
push
js
dec
and
and
stos
mov
sub
xor
mov
add
es
mov
lea
mov
pusha
fidivl
mov
and
jns
jae
andb
push
divl
mov
inc
dec
mov
dec
imul
popa
fildll
orb
add
xorl
rclb
or
mov
or
or
imul
or
movsl
in
imul
lret
add
aad
in
pusha
daa
jecxz
lcall
loopne
mov
lret
pop
pop
pop
out
dec
cld
stos
daa
icebp
sub
adc
and
jl
dec
jl
adc
or
in
and
pop
add
mov
cmpsl
popa
out
sbb
popf
fdivrl
ret
pusha
fistpll
and
sub
rorb
jae
cmp
mov
push
cmp
mul
js
mov
and
jp
int
cmp
das
inc
jne
add
mov
jne
lods
and
push
stos
inc
shl
mov
dec
test
loopne
and
add
inc
shl
lock
aam
sub
mov
xchg
pusha
je
shlb
jae
ljmp
pop
xor
scas
pusha
pusha
push
fdivs
addb
je
test
xor
dec
jmp
lods
add
outsl
push
jae
int3
lds
xor
mov
outsl
mov
or
add
add
addr16
mov
sbb
cmp
cmp
xchg
push
pusha
inc
and
pop
and
cltd
daa
stc
sahf
push
sub
and
pusha
and
shl
out
push
hlt
jg
and
bound
aam
fsubrs
pusha
push
add
add
pop
push
add
fdivrl
push
dec
cmp
dec
lds
inc
mov
cmp
sub
sub
mov
sbb
sbb
add
iret
push
add
xchg
and
and
add
jno
mov
sbb
cld
jno
mov
imul
imul
and
subl
sub
pusha
rcr
inc
adc
arpl
rolb
les
cwtl
and
and
rorl
mov
add
movsl
mov
mov
jge
mov
mov
dec
popf
nop
push
inc
nop
mov
push
cmp
shlb
out
mov
lcall
xchg
sbb
icebp
iret
push
jge
repnz
test
mov
lds
es
rclb
push
andb
mov
jge
and
shlb
mov
mov
ficoms
fmull
sbb
das
adc
aad
pop
push
data16
mov
inc
jmp
icebp
push
add
lcall
addr16
pusha
mov
and
enter
mov
mov
pop
cmp
popa
xor
arpl
scas
shl
andl
mov
add
cmp
sub
add
loopne
rolb
dec
mov
xor
xchg
lods
mov
sbb
jns
add
pop
fbstp
fisubrl
insl
cmc
ret
repnz
pop
cmp
test
js
outsl
xchg
inc
mov
and
cmp
jne
sti
and
jnp
int
iret
out
ljmp
jge
lahf
imul
mov
adc
inc
stos
and
insl
cli
call
adc
ret
fdivs
and
jns
inc
xlat
loope
fistps
rolb
fbld
imul
rolb
out
lock
pusha
jg
jnp
xor
ljmp
insb
test
add
jae
mov
mov
push
pop
push
dec
cli
sub
orb
mov
andb
dec
mull
mov
pop
bound
pmuludq
mov
cwtl
popa
push
push
ficomps
adcl
cmp
push
ret
adc
les
les
jns
jmp
in
inc
sub
jp
jg
sbb
and
inc
loopne
out
stos
jg
add
aad
sub
jns
or
es
subb
addb
scas
lods
andb
mov
in
mov
push
iret
push
add
pop
movsb
and
push
shlb
mov
cmc
test
arpl
sarb
shll
test
and
ret
jge
fld
and
shrb
adc
mov
sub
loopne
pusha
and
xlat
xchg
pop
iret
xchg
loope
enter
xor
fwait
cmpsl
test
add
sbb
pop
cs
mov
cmc
addb
scas
ss
mov
and
ja
outsl
movsb
rolb
add
outsl
test
loopne
shlb
sub
and
push
loop
addr16
jb
mov
add
sub
cltd
push
shl
aad
pop
lds
inc
addb
push
clc
sti
aam
rcl
cmp
aam
gs
mov
fcoml
add
popfw
dec
test
fwait
jg
fsubl
mov
daa
add
adc
xchg
push
mov
shlb
and
enter
loopne
sub
mov
imul
add
shlb
ja
pusha
rorb
shlb
inc
and
and
aas
or
cmpb
mov
insb
cmpsl
jno
push
jp
incb
in
push
and
loopne
jae
mov
ret
dec
jl
inc
mov
add
mov
inc
aam
popf
mov
cs
add
aam
imul
dec
in
pusha
rorb
mov
loopne
out
xor
imul
andb
lods
dec
sbbl
mov
push
jnp
sub
jne
je
mov
xchg
dec
adc
movsl
xor
inc
inc
ds
repnz
les
shlb
cmpsl
adc
or
rolb
int3
lret
add
and
inc
pop
in
mov
fwait
pop
jae
xlat
testl
je
jg
push
add
inc
rolb
add
push
jle
into
insl
out
cmpsb
pusha
rcr
mov
and
cli
shll
dec
in
mov
roll
push
jecxz
int3
shll
out
lret
sub
push
popfw
cwtl
adc
into
push
sbb
aam
loopne
scas
loopne
insl
and
inc
cld
pop
repz
ret
ret
xor
mov
dec
aam
mov
gs
out
out
pusha
subb
insb
dec
aad
lds
push
jg
jns
fcoml
sarl
add
test
push
repnz
pusha
sbb
out
jo
jne
pusha
add
orl
cmp
cmp
rolb
sub
test
das
lods
inc
push
push
push
mov
and
mov
leave
insl
adc
inc
add
idivb
dec
aad
jb
test
ror
fsubr
lock
and
rclb
inc
xor
andb
and
rolb
and
and
inc
add
daa
rcl
inc
adcl
rolb
pusha
sbb
fsubl
shll
inc
loopne
jne
gs
shl
test
add
in
out
push
mov
jmp
into
dec
fldt
out
mov
sbb
addr16
std
std
cmc
call
mov
loopne
cmp
sahf
fcmovne
xchg
out
mov
sub
dec
push
push
jge
or
pusha
into
imul
or
mov
mov
out
sahf
mov
mov
sbbb
mov
mov
cmp
adc
dec
mov
inc
negl
dec
test
shlb
mov
insb
lsl
imul
movb
call
xchg
mov
add
xor
scas
mov
dec
sub
outsl
push
jne
push
cmpsl
mov
shrb
ds
shrb
pusha
ret
xchg
mov
xchg
dec
xchg
add
fldcw
loopne
icebp
mov
adc
sub
imul
cmpl
sarl
lahf
mov
xlat
or
pusha
inc
loopne
mov
lret
ss
xchg
dec
add
loopne
xchg
loopne
addr16
rcrl
fmull
pusha
pusha
mov
mov
rcrb
stos
lcall
adc
dec
stos
add
and
xor
rorl
mov
and
lock
pushf
loopne
shl
xchg
mov
dec
cli
mov
rol
cmpsb
mov
jle
mov
mov
data16
sti
mov
jl
mov
and
lock
data16
enter
lahf
adc
dec
mov
mov
movsb
loopne
xchg
std
lods
jo
stos
inc
and
rolb
ror
sub
add
mov
xor
jg
pop
mov
dec
cwtl
aaa
jecxz
lds
pop
push
or
fwait
in
ret
dec
ljmp
pop
sub
test
loopne
loopne
insl
add
cmp
and
fidivrl
push
in
iret
cmp
pusha
rolb
xchg
scas
outsb
pop
push
lea
adc
call
sub
inc
loopne
jl
xchg
and
sbbb
arpl
pusha
lea
jle
and
lods
jmp
and
push
add
orb
loopne
inc
sbbb
inc
inc
shlb
fstps
pushf
popa
pusha
mov
cmpsb
inc
pusha
jge
sbb
mov
add
lea
sub
shrb
mov
int
mov
cltd
shl
in
insl
cmp
aad
fwait
cmovns
mov
es
pusha
popf
and
rcrb
inc
stos
and
lock
mov
adc
lret
cmp
lea
add
data16
std
lahf
sti
aad
push
add
jle
lods
jl
adc
and
imul
mov
orb
or
and
mov
push
aad
lods
bswap
fstpt
out
push
lea
stc
push
rol
fstl
es
mov
rcr
push
or
xchg
dec
and
addb
add
inc
fwait
ret
xor
pusha
inc
cli
cmc
mov
andb
mov
stos
xor
cmp
jle
and
popf
inc
jnp
popa
test
loopne
lret
xor
cwtl
and
rclb
mov
rclb
dec
fs
push
add
shlb
inc
es
fnstenv
stos
add
rolb
inc
lods
popa
push
xor
and
sar
aas
pusha
lcall
and
inc
mov
push
addr16
pusha
add
mov
bound
pop
dec
stos
mov
mov
cmp
loope
rolb
andb
push
out
or
and
cli
insl
fnstsw
mov
xchg
mov
lahf
pop
push
and
daa
out
sub
inc
add
rolb
xchg
inc
sub
cmc
xchg
adc
xorl
in
jecxz
out
outsb
mov
and
mov
repz
sbb
fistl
sub
mov
push
jl
jmp
mov
and
leave
pop
inc
shlb
bound
mov
add
add
jl
push
push
and
cwtl
sahf
sarb
pusha
xorl
pop
fnsave
sbb
add
loopne
out
dec
xor
jl
mov
inc
and
subb
adcb
jno
mov
xor
adc
add
and
daa
fsts
cmp
pusha
and
adc
mov
push
lcall
sub
add
rorb
arpl
jmp
das
aaa
lods
inc
mov
fildll
bound
cmp
push
mov
sbbl
pusha
shlb
je
fidivl
mov
sbb
cmc
sahf
out
cli
imul
and
sbb
icebp
mov
or
sbb
in
lea
mov
xor
jns
fsubrs
loopne
icebp
sbb
jno
push
cmp
sub
loope
rolb
shrl
mov
push
pusha
or
mov
or
lcall
push
jle
shlb
dec
cld
in
test
sbb
inc
sub
pusha
shl
xchg
push
pop
xchg
rorb
xor
flds
mov
fisttpll
push
fdivrl
popa
push
push
inc
mov
fdivrl
pop
xchg
sbb
cs
and
and
repz
cwtl
jb
test
mov
cmp
add
mov
jae
mov
loope
jg
mov
cmc
shr
sahf
mov
jecxz
jle
insl
fstps
jl
out
cmp
lods
and
cmp
in
jle
mov
push
inc
das
nop
xlat
jp
mov
push
in
xchg
fsubs
and
pop
jle
test
and
inc
lret
addr16
inc
test
mov
rcl
jp
imul
cltd
sub
add
jb
mov
xorb
add
mov
call
loop
call
inc
sbb
loopne
enter
les
adc
mov
lock
pop
dec
jecxz
pop
dec
enter
cmp
jbe
xchg
popa
xchg
scas
xor
xchg
sbb
dec
inc
jbe
stc
hlt
jno
inc
fscale
call
and
add
xchg
das
ljmp
subb
ret
loop
jecxz
mov
and
icebp
enter
xchg
addb
mov
push
cmp
loopne
cmc
andb
and
loopne
in
arpl
lcall
add
and
mov
rcr
lret
adc
cmp
xor
fbstp
loopne
inc
mov
in
mov
xorb
add
cmpsl
add
rorb
mov
fnsave
push
add
outsl
ret
mov
pop
popf
lock
stos
inc
add
in
mov
mov
mov
pusha
push
jnp
idivb
aaa
xchg
pushf
and
mov
and
imul
shrl
push
lods
loopne
lahf
or
inc
pop
pop
outsl
cmpsl
cmpsl
rol
popa
enter
xchg
aam
push
push
js
fstpt
stos
pop
push
addb
sub
ror
and
leave
ret
jle
mov
mov
mov
push
fildl
jo
shl
mov
jmp
mov
and
adc
mov
shlb
pop
or
loopne
jmp
cli
bound
sbb
shll
mov
repz
add
call
cmp
sarb
mov
loopne
aad
cmpsw
push
mov
aas
enter
pop
pusha
stos
shlb
lahf
push
jnp
rcrb
adc
cmp
in
flds
sysexit
repnz
and
mov
jp
inc
loopne
fs
inc
fildll
mov
mov
paddq
sbb
mov
inc
mov
pop
jecxz
mov
popf
jns
repz
pusha
andb
pop
and
aad
cmp
int3
inc
out
adc
push
mov
dec
push
push
stos
rol
inc
add
shll
mov
rep
inc
rorb
sub
add
shlb
push
lea
mov
cld
add
add
mov
shlb
pushf
xor
jns
or
lret
loopne
mov
push
arpl
fadd
cmpsl
sub
bound
testl
dec
and
loopne
mov
loopne,pn
mov
nop
mov
out
mov
or
ret
and
rcr
xor
aad
repnz
or
push
sbb
or
jg
aaa
nop
rolb
mov
xchg
jb
mov
mov
and
jmpw
mov
xchg
push
sahf
jnp
jo
stos
rol
pop
pop
fmull
xor
and
mov
orb
popf
adc
mov
and
sahf
mov
sub
pusha
mov
jge
addb
dec
ss
inc
ja
pop
outsl
push
pop
sbb
adc
xor
call
out
or
mov
aam
pop
mov
add
pusha
inc
das
or
xor
pusha
pusha
dec
lea
sbb
jno
adc
xor
mov
add
xchg
push
out
loopne
jae
cmp
mov
add
inc
inc
test
adcb
std
dec
mov
add
adc
ljmp
std
movsl
push
aad
mov
iret
pop
pop
xor
sub
loopne
inc
orw
jo
mov
or
test
inc
push
and
inc
icebp
mov
and
jne
and
inc
shr
add
loopne
std
push
fsubrs
cmp
jecxz
inc
insb
mov
dec
addl
shlb
int
lret
dec
xor
push
out
fcmovb
push
pusha
mov
and
and
pop
outsl
xor
andb
test
repnz
je
jle
jbe
xor
cs
rolb
pop
les
sarb
inc
or
insb
clc
enter
xchg
sbb
scas
add
push
notl
in
add
push
push
push
push
push
xor
mov
call
cld
sub
inc
add
imul
nop
push
stc
pop
and
cmp
je
push
bnd
mov
cmp
jne
es
add
cs
add
stc
mov
push
push
clc
call
test
jne
push
ret
jmp
lea
movl
push
push
push
push
call
cmp
lea
jne
movzbl
or
add
mov
cld
not
imul
and
es
call
jmp
sbb
mov
add
ret
pop
pop
add
pop
push
sub
push
push
inc
or
xchg
lea
cld
lea
lea
mov
cld
add
mov
mov
mov
sub
mov
push
cld
jmp
xchg
je
xor
push
mov
jmp
clc
mov
mov
push
shl
cmc
ds
add
pusha
pop
jns
sub
pusha
ja
and
mov
icebp
ret
outsl
cmp
outsb
cmc
aam
data16
pop
int3
pop
inc
mov
imulb
sbb
adc
mov
mov
inc
add
pop
imul
mov
lock
loopne
out
rorl
and
adc
repnz
dec
mov
xor
dec
cmp
fs
aam
scas
and
scas
sti
das
leave
xchg
and
pusha
add
orl
pop
push
aad
jo
aaa
sub
shlb
add
sub
lahf
in
std
pusha
push
inc
loopne
pusha
add
outsl
jae
adc
pop
xchg
mov
orb
pop
pop
mov
and
xchg
xchg
pop
jecxz
mov
and
mov
mulb
jno
test
cmp
stos
inc
and
dec
js
mov
cmp
and
mov
repnz
mov
sub
lret
inc
mov
mov
mov
push
cmc
scas
imul
mov
add
andb
pop
arpl
sbb
test
cmpsb
rol
cmp
and
xchg
rcl
cld
popw
cld
mov
adc
xor
inc
xchg
ja
pusha
jmp
sub
sarb
gs
xor
or
and
data16
rol
mov
xchg
clc
addb
lahf
or
xchg
push
and
fbstp
or
adc
cltd
or
ss
mov
pusha
loopne
xor
dec
mov
arpl
add
xchg
sub
nop
inc
pop
stc
xlat
xor
lcall
loopne
into
sbb
scas
rol
loopne
mov
loopne
loope
jnp
push
addr16
rorb
pop
push
pop
adc
andb
jl
mov
mov
loopne
outsb
jp
or
ret
xchg
rcll
pop
out
adc
jmp
enter
jnp
shlb
int
movsl
aaa
adc
cmpsb
pusha
loopne
pop
fs
jne
cltd
jb
xlat
inc
lahf
jb
add
pop
jl
je
addb
shlb
andb
mov
and
ret
jae
rcll
out
xorl
sti
and
loopne
arpl
pushf
fwait
stos
cmpsl
mov
inc
mov
fdivrl
xchg
mov
jns
rol
mov
fisubrl
and
loopne
fwait
mov
rorl
sub
subb
sub
jae
xchg
inc
lds
xchg
push
sub
and
cmc
pop
inc
and
sbb
enter
xchg
les
or
loopne
in
pop
cmpsb
and
mov
mov
mov
cmc
pop
std
pop
add
add
loopne
mov
loopne
add
icebp
cwtl
sbb
mov
lcall
loopne
adc
sub
or
inc
arpl
cmpsb
mov
jmp
imul
mov
orl
ljmp
xlat
gs
mul
xor
sbb
shr
loopne
sahf
or
sar
push
lret
sbb
push
movsb
inc
sarb
inc
inc
popa
adc
std
int
mov
pusha
push
jp
leave
add
lret
add
and
in
inc
push
inc
adcb
adc
mov
inc
lea
out
mov
loopne
sar
mov
dec
out
gs
sbb
inc
sbb
xor
mov
out
mov
shlb
addb
daa
sub
fmuls
add
mov
cld
lods
push
push
adc
sbb
mov
mov
lock
gs
jmp
inc
add
and
push
int
or
fcomps
mov
mov
add
lea
hlt
daa
repnz
sub
in
push
addl
bound
rcll
adc
sahf
daa
push
add
mov
adc
pop
xchg
jnp
mov
fsubp
cmp
popf
or
jns
adc
mov
mull
mov
xchg
jb
repz
pusha
data16
jo
loopne
mov
pusha
shrb
rcr
sub
sarb
shll
mov
inc
sub
mov
inc
push
pushf
dec
or
imul
push
and
cli
inc
std
cmp
inc
shl
adc
sub
xor
cmp
or
fiaddl
and
and
mov
and
xor
cmpsl
mov
loopne
test
and
cwtl
aaa
scas
mov
push
inc
in
fcomi
movsl
sub
fwait
mov
jb
sbb
adc
mov
add
outsl
add
andb
rcrb
add
rcrb
test
add
jb
mov
lods
inc
inc
inc
mov
adc
lcall
inc
subb
scas
cmp
add
in
jecxz
inc
popf
and
cmpb
mov
add
cmp
hlt
jmp
xor
aam
adc
shrb
mov
pop
sahf
or
mov
inc
out
pop
fisubrl
mov
add
loopne
mov
or
aam
lret
cmp
cmc
push
ds
add
ds
push
pop
adc
loopne
mov
lock
mov
addb
mov
pop
adc
ds
bound
mov
mov
pop
inc
cmp
aad
pop
add
into
flds
arpl
dec
insl
popf
pop
jp
stos
loopne
or
adc
in
push
cmpl
xchg
adc
add
in
cmp
loope
sahf
sbb
orl
loopne
or
inc
inc
sub
cmp
mov
inc
out
pushf
int
pop
mov
add
xchg
pushf
inc
cwtl
hlt
pusha
sub
subb
jae
xchg
pop
adc
outsb
in
xor
pusha
adc
add
stos
loop
ret
imul
cli
js
and
cmc
loopne,pn
or
loopne
in
mov
mov
xor
mov
pop
addr16
stos
push
mov
pop
inc
jnp
stos
loopne
and
ds
loopne
add
add
inc
mov
jbe
daa
gs
and
push
push
loopne
push
and
movl
subl
movsl
outsb
cmp
iret
mov
and
ds
aad
iret
xor
sub
imull
andb
jge
ret
xchg
imul
push
inc
pusha
std
clc
fsubrs
inc
inc
das
cmpsl
cld
adc
shl
insb
insl
in
outsl
dec
add
out
gs
dec
mov
xchg
leave
sbb
or
add
cld
dec
nop
fmuls
and
imul
mov
test
pusha
call
inc
push
arpl
loopne
ds
or
andb
inc
jae
add
pop
or
lds
inc
and
enter
xchg
adc
adc
xor
mov
inc
add
and
inc
clc
and
xchg
jnp
shlb
mov
mov
and
pusha
call
adc
add
inc
add
addb
lcall
mov
pop
loope
or
add
mov
inc
test
fcmovbe
mov
inc
cmpsl
outsb
pop
fdivs
mov
leave
jg
nop
stc
pusha
adc
mov
cli
jns
pop
adc
loope
imul
sbb
and
xor
mov
cmpb
push
addr16
lock
mov
ficoms
mov
loopne
das
inc
sub
cwtl
rclb
das
add
and
and
dec
sbbl
pusha
rcrb
lods
bound
push
insl
imul
mov
sbb
aam
lret
ds
outsb
mov
dec
jge
lea
xor
cmp
and
and
ljmp
shr
stos
rol
and
sysexit
movsl
xor
call
jg
cmp
test
out
inc
and
jp
loopne
adc
dec
inc
mov
pusha
cmp
insl
add
loopne
rolb
fcoml
out
pop
pop
mov
add
stos
cmpsl
inc
mov
xorl
jne
pop
mov
ror
test
jo
ror
mov
add
testl
push
repz
cmp
shr
or
inc
xchg
shlb
xchg
fs
divb
jo
mov
adc
push
cltd
and
inc
cltd
pop
bound
cltd
sub
das
jae
shlb
rolb
jb
push
inc
inc
movsl
push
pop
and
inc
jno
enter
addb
rorb
add
jnp
fwait
lods
mov
inc
scas
pusha
shl
inc
mov
mov
jno
sbbl
cmc
mov
fisttpl
pusha
xor
loope
loop
repz
xor
ret
xchg
or
xor
inc
cmpsl
inc
inc
xchg
dec
push
lret
adc
insl
test
cltd
fdivr
pop
ret
jo
lret
ljmp
enter
push
fists
enter
and
cmp
test
jg
mov
ret
xchg
cmp
adc
mov
or
lods
rol
pusha
and
dec
mov
and
and
mov
loopne
test
add
jns
fwait
sub
jecxz
mov
push
push
mov
mov
push
pusha
add
add
and
fwait
mov
pusha
xorb
cmpsl
into
jmp
je
loope
cld
sbb
ljmp
sub
pushf
call
mov
jno
test
sarb
pop
and
adcl
inc
cmp
push
rcr
dec
dec
pop
mov
add
subb
rcrb
andb
inc
rol
push
mov
and
inc
inc
inc
das
loope
jmp
rcrb
xor
adc
add
cmp
xchg
pusha
loopne
dec
jl
in
lahf
add
into
cmp
fnsetpm(287
xchg
test
cltd
enter
imul
fucomi
sbb
push
inc
inc
ds
insl
stc
test
add
jg
leave
push
imulb
jmp
nop
sahf
jb
mov
push
pushf
popf
jge
mov
fidivrl
or
loopne
test
dec
and
xorb
aas
lods
mov
and
and
in
mov
cmp
les
push
sub
jecxz
test
shl
or
fldcw
and
test
andb
inc
inc
adc
ficoms
icebp
jb
push
lahf
fisttpl
and
dec
dec
out
fsubrs
jp
and
cmp
pop
cmp
test
dec
ja
and
inc
loope
or
jle
mov
fs
sahf
push
mov
mov
cmpl
mov
mov
sub
pusha
add
loopne
xchg
addl
ja
push
call
pop
movsl
shl
sbb
shr
jbe
lret
ret
sbb
xlat
jno
cmpsb
loopne
cmpsl
repz
jnp
push
jnp
add
andb
movsl
jns
sbb
inc
jge
movsl
xchg
enter
sahf
scas
addb
icebp
jb
sbb
lods
jo
push
cmp
mov
push
insl
fistpll
cmpsl
pop
adc
pusha
inc
test
loopne
and
and
pushf
xor
sub
mov
out
inc
pop
jecxz
pop
mov
out
push
mov
mov
out
aaa
loope
pushf
inc
ljmp
imul
lods
scas
pusha
add
pop
cld
mov
repnz
sbb
int
pop
test
mov
lcall
jne
add
lret
mov
mov
and
addb
mov
push
jmp
mov
cmpsb
andb
cmp
mov
xchg
dec
pop
jle
fwait
mov
ret
add
mov
loopne
popa
jecxz
clc
mov
popa
addl
cld
sub
and
adc
jle
pusha
add
les
mov
inc
inc
or
sahf
and
and
mov
xchg
insb
outsb
insl
imul
imul
in
add
push
sub
rolb
mov
adc
push
popf
imul
push
lret
push
daa
jae
sub
push
bound
push
stc
push
scas
pusha
inc
lcall
mov
lretw
nop
adc
popf
push
push
add
scas
scas
shlb
or
cli
cwtl
fldcw
add
int3
cmpsl
lahf
xchg
and
mull
add
jg
addb
sbb
nop
mov
pusha
and
pop
outsb
je
xor
inc
xor
xchg
xchg
xor
and
cld
jecxz
pop
pop
into
xor
inc
fdivrs
push
lods
xchg
call
adc
push
pop
sub
mov
fcmovbe
xor
push
sti
inc
push
mov
sarb
push
into
adcl
test
rorb
lahf
outsl
gs
in
sti
push
and
add
xchg
xchg
xor
mov
cmp
adc
shlb
pop
mov
push
out
inc
leave
pop
addb
mov
dec
cld
lods
push
and
xchg
inc
test
rolb
rclb
push
rcll
stc
cmpsl
lcall
rcll
gs
mov
in
int
jb
bound
push
andb
sti
pop
shll
aaa
daa
das
add
adcb
ds
jecxz
cmc
dec
push
insl
arpl
movsl
mov
outsl
lret
in
bound
sbb
lock
pusha
orb
andb
clc
inc
sub
mov
mov
pusha
mov
test
out
addb
fldl2e
mov
aas
ret
push
mov
adc
icebp
fcoml
rol
insl
js
pop
dec
and
shlb
push
add
and
inc
into
inc
out
inc
add
inc
loopne
test
pusha
inc
cmp
lds
inc
sub
cmp
mov
aad
movsb
and
xlat
stc
sub
xchg
ss
mov
rolb
pusha
lahf
xchg
sub
or
and
pushf
imul
mov
rol
inc
add
xchg
arpl
push
mov
clc
repnz
nop
cld
jae
and
push
dec
xchg
jmp
push
mov
nop
leave
nop
jmp
add
add
popf
fistl
test
push
mov
nop
leave
nop
jmp
rorl
xor
push
mov
xchg
ret
add
fcompl
add
nop
nop
cld
jae
mov
jno
push
mov
nop
leave
nop
jmp
add
pop
add
cmp
clc
repnz
nop
cld
jae
add
jmp
push
mov
xchg
ret
add
add
mov
add
fdivr
repnz
nop
cld
jae
add
mov
sbb
pop
sbb
add
repnz
nop
cld
jae
add
mov
xabort
nop
nop
cld
jae
add
push
cmp
add
clc
repnz
nop
cld
jae
nop
add
and
and
lea
push
mov
nop
leave
nop
jmp
push
lods
insl
ret
clc
repnz
nop
cld
jae
add
xchg
mov
out
fwait
clc
repnz
nop
cld
jae
add
ret
dec
clc
fsts
repnz
nop
cld
jae
mov
push
test
call
fwait
clc
repnz
nop
cld
jae
mov
jbe
test
add
push
mov
xchg
ret
sub
add
mov
clc
repnz
nop
cld
jae
sub
aad
div
test
jp
pusha
pusha
inc
pop
push
mov
nop
leave
nop
jmp
add
push
fwait
popf
mov
mov
push
mov
nop
leave
nop
jmp
lods
mov
push
dec
add
push
mov
xchg
ret
roll
add
add
popf
or
mov
add
faddl
add
add
add
add
dec
add
lahf
add
push
mov
xchg
ret
add
fisttpll
add
mov
nop
leave
nop
jmp
nop
add
xor
test
clc
mov
mov
xchg
ret
ret
add
int
jbe
push
push
mov
xchg
ret
std
mov
add
sub
pop
push
mov
xchg
ret
add
push
add
add
push
mov
nop
leave
nop
jmp
add
add
add
inc
popf
mov
je
sub
hlt
popa
inc
add
inc
mov
mov
clc
repnz
nop
cld
jae
mov
lds
push
mov
xchg
ret
add
add
push
add
push
cmp
mov
xchg
ret
test
add
push
clc
repnz
nop
cld
jae
add
add
add
cmp
jmp
add
mov
add
data16
add
push
push
clc
repnz
nop
cld
jae
add
mov
mov
nop
leave
nop
jmp
add
add
add
jne
jmp
nop
cld
jae
add
add
add
xor
push
mov
nop
leave
nop
jmp
sub
add
add
addb
cmp
ret
add
add
test
and
add
mov
cltd
stc
add
add
add
loop
popf
mov
int3
or
mov
mov
xchg
ret
mov
cmp
add
pop
inc
add
lods
add
push
loopne
and
repnz
nop
cld
jae
dec
mov
cmp
repnz
add
cmp
nop
cld
jae
mov
call
test
mov
xchg
ret
aad
jmp
xchg
pusha
pop
jecxz
push
mov
xchg
ret
add
and
frstor
add
or
clc
repnz
nop
cld
jae
std
add
xor
nop
cld
jae
add
and
test
jnp
add
clc
repnz
nop
cld
jae
add
clc
repnz
nop
cld
jae
add
add
add
sub
lea
clc
repnz
nop
cld
jae
mov
mov
mov
je
push
mov
nop
leave
nop
jmp
int
mov
pusha
push
mov
xchg
ret
shll
pop
add
ljmp
ret
add
cmp
add
mov
clc
repnz
nop
cld
jae
lods
add
lar
pushf
xor
nop
nop
cld
jae
add
add
test
sbb
add
repnz
nop
cld
jae
mov
adc
repnz
nop
cld
jae
push
lds
add
adc
nop
cld
jae
add
fwait
add
xor
clc
repnz
nop
cld
jae
ret
and
mov
clc
repnz
nop
cld
jae
dec
add
pop
test
push
mov
clc
repnz
nop
cld
jae
mov
cltd
add
repnz
nop
cld
jae
push
push
nop
add
xor
out
mov
add
in
nop
leave
nop
jmp
clc
test
add
ret
clc
repnz
nop
cld
jae
mov
dec
add
and
add
push
clc
repnz
nop
cld
jae
dec
add
add
movb
repnz
nop
cld
jae
add
faddl
cmp
out
jo
push
mov
nop
leave
nop
jmp
xchg
add
jbe
cmp
push
mov
nop
leave
nop
jmp
add
cmp
or
repnz
nop
cld
jae
add
jns
idiv
clc
repnz
nop
cld
jae
ret
add
jbe
add
add
add
rorb
mov
dec
ss
clc
repnz
nop
cld
jae
add
push
mov
nop
leave
nop
jmp
cltd
data16
push
mov
xchg
ret
add
and
data16
sbb
mov
pusha
jp
dec
mov
push
mov
xchg
ret
add
add
lock
fstpl
cld
jae
out
add
add
add
jg
and
repnz
nop
cld
jae
jbe
test
add
mov
clc
repnz
nop
cld
jae
call
call
in
inc
add
add
add
add
js
push
clc
repnz
nop
cld
jae
aad
add
clc
add
mov
clc
repnz
nop
cld
jae
add
add
add
add
mov
push
mov
nop
leave
nop
jmp
fwait
data16
stos
mov
push
mov
xchg
ret
add
add
add
scas
outsb
inc
add
add
mov
mov
rcr
and
mov
xchg
ret
add
add
add
xor
sbb
push
mov
xchg
ret
add
add
mov
push
mov
xchg
ret
clc
faddl
fildl
add
add
jne
clc
repnz
nop
cld
jae
push
add
clc
repnz
nop
cld
jae
cmp
dec
addr16
push
mov
xchg
ret
add
add
add
push
in
and
shll
add
mov
cmp
jne
clc
repnz
nop
cld
jae
push
add
sub
inc
mov
nop
leave
nop
jmp
mov
shr
or
adcb
loopne
js
push
clc
repnz
nop
cld
jae
add
add
mov
add
push
mov
xchg
ret
std
call
add
adc
mov
nop
leave
nop
jmp
add
add
cmp
inc
pop
rep
push
mov
xchg
ret
add
mov
add
lret
push
inc
sub
je
push
mov
nop
leave
nop
jmp
mov
std
lea
ret
push
mov
xchg
ret
mov
faddl
push
add
dec
icebp
add
clc
repnz
nop
cld
jae
add
aaa
push
push
mov
xchg
ret
lods
add
fdivl
dec
icebp
call
clc
repnz
nop
cld
jae
jmp
ror
clc
repnz
nop
cld
jae
add
lret
call
clc
repnz
nop
cld
jae
add
mov
pop
push
mov
xchg
ret
mov
pop
add
adc
push
clc
repnz
nop
cld
jae
rcl
add
aad
mov
rep
clc
repnz
nop
cld
jae
add
add
add
lds
repnz
nop
cld
jae
and
cmp
add
les
repnz
nop
cld
jae
mov
mov
mov
sahf
fwait
mov
push
mov
xchg
ret
mov
xchg
lds
fwait
add
cmp
repnz
nop
cld
jae
add
add
mov
andb
mov
add
clc
repnz
nop
cld
jae
mov
xchg
add
div
clc
repnz
nop
cld
jae
cmp
add
pop
jne
clc
repnz
nop
cld
jae
aad
dec
add
ret
push
add
push
mov
xchg
ret
add
add
add
add
pusha
push
mov
xchg
ret
push
add
add
cmp
adc
jmp
push
ret
add
add
add
std
mov
sub
cmp
ret
xchg
push
dec
sub
mov
clc
repnz
nop
cld
jae
add
aad
add
pop
popf
mov
clc
repnz
nop
cld
jae
push
add
pop
lods
add
clc
repnz
nop
cld
jae
add
lods
add
pusha
pusha
pop
ret
lds
jmp
pop
add
test
xchg
fistpl
faddl
jmp
nop
cld
jae
add
fwait
add
mov
mov
xchg
ret
add
and
add
mov
clc
repnz
nop
cld
jae
add
aad
packssdw
clc
repnz
nop
cld
jae
lds
dec
add
add
mov
xchg
ret
add
and
inc
sub
pusha
mulb
clc
repnz
nop
cld
jae
add
shrl
mov
add
pop
xor
add
fsubr
in
pop
xchg
rep
clc
repnz
nop
cld
jae
add
rcll
out
sbb
cld
jae
add
add
push
cmp
repnz
nop
cld
jae
add
add
dec
cmp
repnz
nop
cld
jae
lods
add
jmp
add
clc
repnz
nop
cld
jae
add
add
add
mov
clc
repnz
nop
cld
jae
popf
lods
mov
mov
add
cld
jae
add
add
add
repnz
nop
cld
jae
test
aad
add
mov
icebp
jno
add
clc
add
mov
add
inc
push
clc
repnz
nop
cld
jae
add
add
clc
nop
inc
and
clc
repnz
nop
cld
jae
add
mov
test
mov
add
add
add
add
jbe
call
or
add
in
nop
leave
nop
jmp
add
popa
mov
push
mov
nop
leave
nop
jmp
add
jmp
and
repnz
nop
cld
jae
test
jg
add
push
mov
nop
leave
nop
jmp
add
int
sub
xor
clc
repnz
nop
cld
jae
callw
add
sub
std
jmp
dec
push
clc
clc
add
roll
fwait
mov
add
clc
repnz
nop
cld
jae
add
out
push
and
repnz
nop
cld
jae
lods
nop
add
ret
add
repnz
nop
cld
jae
mov
mov
cmp
repnz
nop
cld
jae
push
inc
add
push
add
test
nop
nop
cld
jae
mov
add
sub
loopne
add
clc
repnz
nop
cld
jae
int
push
add
pop
mov
adc
clc
repnz
nop
cld
jae
push
push
int
add
mov
inc
pusha
test
mov
clc
repnz
nop
cld
jae
roll
push
clc
repnz
nop
cld
jae
jbe
dec
add
inc
add
dec
rcrb
call
in
nop
leave
nop
jmp
dec
add
add
pop
clc
repnz
nop
cld
jae
aad
add
mov
inc
add
mov
jmp
add
dec
push
lods
add
faddl
push
mov
nop
cld
jae
add
add
mov
mov
xchg
ret
add
sub
out
mov
out
test
repnz
nop
cld
jae
mov
add
scas
clc
incl
add
push
add
add
nop
sub
dec
push
mov
and
add
test
mov
nop
leave
nop
jmp
add
push
mov
xchg
ret
xor
clc
iret
add
push
mov
xchg
ret
add
add
add
xchg
pop
push
mov
nop
leave
nop
jmp
xchg
add
out
lods
add
clc
repnz
nop
cld
jae
aad
add
xchg
lods
add
push
jbe
dec
aam
int
inc
sbb
cmp
and
add
push
mov
add
dec
jb
clc
repnz
nop
cld
jae
add
and
add
clc
repnz
nop
cld
jae
fsubrl
dec
cmp
repnz
nop
cld
jae
xor
push
mov
sub
repz
repnz
nop
cld
jae
pop
jbe
add
push
add
repnz
nop
cld
jae
and
lods
sub
jmp
repnz
nop
cld
jae
add
add
clc
repnz
nop
cld
jae
add
add
fildl
add
movsl
mov
clc
repnz
nop
cld
jae
add
scas
enter
nop
cld
jae
mov
lds
and
add
clc
repnz
nop
cld
jae
add
add
add
xchg
mov
push
mov
xchg
ret
and
add
lods
add
add
xor
fld1
push
mov
xchg
ret
cltd
add
dec
add
add
jl
rolb
push
clc
repnz
nop
cld
jae
fwait
add
add
nop
cld
jae
push
xor
shrd
aam
mov
push
mov
nop
leave
nop
jmp
rcll
pop
clc
add
push
mov
nop
leave
nop
jmp
xchg
clc
add
addr16
push
mov
nop
leave
nop
jmp
and
clc
popf
push
aad
add
loopne
inc
scas
mov
or
repnz
nop
cld
jae
add
add
cli
jno
clc
repnz
nop
cld
jae
add
add
ss
pusha
clc
repnz
nop
cld
jae
add
ret
sahf
les
pop
clc
repnz
nop
cld
jae
add
add
ds
mov
push
imul
cmp
ret
push
xor
mov
fwait
push
mov
xchg
ret
add
std
add
mov
nop
leave
nop
jmp
add
add
call
add
clc
repnz
nop
cld
jae
fcoml
std
pop
push
mov
nop
leave
nop
jmp
add
mov
mov
inc
adc
repnz
nop
cld
jae
add
cltd
add
add
fld1
clc
repnz
nop
cld
jae
pop
add
add
add
insb
clc
repnz
nop
cld
jae
sldt
mov
pop
fistpl
push
mov
xchg
ret
add
clc
dec
lods
and
mov
nop
cld
jae
fcmovnb
inc
mov
mov
add
repnz
nop
cld
jae
pop
add
add
add
clc
repnz
nop
cld
jae
add
clc
add
add
fmul
pusha
push
mov
xchg
ret
add
add
std
aad
test
inc
add
testb
ret
sub
verw
dec
jbe
negl
repnz
nop
cld
jae
mov
pop
add
inc
and
push
mov
xchg
ret
cmp
mov
repnz
nop
cld
jae
mov
nop
add
add
lods
sub
repnz
nop
cld
jae
mov
dec
add
push
jg
jbe
clc
repnz
nop
cld
jae
pop
add
cmp
xorb
clc
repnz
nop
cld
jae
sub
xchg
mov
add
cmc
mov
push
mov
nop
leave
nop
jmp
dec
mov
add
jne
rorl
mov
xchg
ret
add
aad
add
add
repnz
nop
cld
jae
push
mov
jbe
push
jl
push
clc
repnz
nop
cld
jae
add
ret
mov
add
nop
leave
nop
jmp
ret
pop
mov
pop
clc
repnz
nop
cld
jae
std
std
add
add
mov
push
mov
nop
leave
nop
jmp
cmp
jbe
testl
nop
cld
jae
add
sarl
nop
nop
cld
jae
mov
mov
lds
mov
xchg
ret
lods
add
mov
rorl
repnz
nop
cld
jae
add
jmp
sar
repnz
nop
cld
jae
mov
ret
clc
repnz
nop
cld
jae
add
add
jbe
mov
clc
repnz
nop
cld
jae
mov
lods
add
add
pusha
add
jne
clc
repnz
nop
cld
jae
mov
test
clc
repnz
nop
cld
jae
add
add
je
clc
repnz
nop
cld
jae
add
add
dec
push
push
mov
nop
leave
nop
jmp
push
add
fsubr
add
nop
nop
cld
jae
xor
decl
test
repnz
nop
cld
jae
clc
ret
add
andb
add
add
lods
xchg
dec
xchg
add
add
add
add
push
mov
nop
leave
nop
jmp
add
nop
jno
push
mov
xchg
ret
add
add
and
mov
test
adc
dec
push
mov
xchg
ret
add
paddusb
push
addb
cmp
ret
add
call
xor
outsl
push
mov
nop
leave
nop
jmp
inc
add
and
mov
xchg
ret
add
add
int
pop
movsb
and
mov
clc
repnz
nop
cld
jae
clc
jmp
push
inc
push
mov
xchg
ret
add
mov
lods
add
je
xor
push
mov
xchg
ret
test
add
dec
add
add
mov
nop
leave
nop
jmp
mov
add
cltd
sub
xor
mov
nop
leave
nop
jmp
mov
add
add
adc
repnz
nop
cld
jae
add
test
and
sbb
push
mov
xchg
ret
add
add
mov
jecxz
add
add
clc
repnz
nop
cld
jae
add
add
dec
je
lods
push
mov
nop
leave
nop
jmp
shrl
pop
add
push
mov
xchg
ret
fildl
add
add
mov
addb
add
clc
repnz
nop
cld
jae
dec
call
xabort
nop
nop
cld
jae
add
push
xchg
test
add
push
mov
nop
leave
nop
jmp
aad
jmp
pusha
jns
add
add
push
add
push
popl
clc
repnz
nop
cld
jae
push
add
nop
add
inc
push
adc
push
clc
repnz
nop
cld
jae
push
aad
roll
add
mov
xchg
ret
add
mov
add
cmp
mov
push
mov
nop
leave
nop
jmp
cmp
add
cs
addb
mov
clc
repnz
nop
cld
jae
add
ret
and
out
push
push
mov
xchg
ret
add
add
add
test
pusha
jae
mov
clc
repnz
nop
cld
jae
add
repnz
nop
cld
jae
pop
inc
aad
std
push
and
repnz
nop
cld
jae
add
fldl
add
fwait
xchg
push
mov
xchg
ret
xor
add
fwait
add
enter
inc
adc
mov
xchg
ret
xchg
clc
add
add
nop
nop
cld
jae
add
lods
add
add
repnz
nop
cld
jae
std
dec
test
mov
push
mov
nop
leave
nop
jmp
mov
addb
jl
and
repnz
nop
cld
jae
add
int
call
add
add
repnz
nop
cld
jae
jbe
mov
add
add
push
mov
nop
leave
nop
jmp
and
add
movzwl
clc
repnz
nop
cld
jae
jmp
sahf
xor
pusha
and
push
pushl
push
mov
xchg
ret
add
push
push
push
mov
nop
leave
nop
jmp
add
popf
add
add
add
xchg
xchg
ret
add
add
add
lds
nop
cld
jae
fcmovne
std
pop
cmp
mov
and
js
repnz
nop
cld
jae
add
cltd
mov
stos
mov
push
mov
xchg
ret
inc
aad
jmp
cli
popa
mov
push
mov
nop
leave
nop
jmp
push
std
std
dec
xor
mov
clc
repnz
nop
cld
jae
push
jbe
add
push
rorb
call
clc
repnz
nop
cld
jae
inc
add
test
and
push
mov
xchg
ret
clc
add
faddl
mov
rep
push
mov
xchg
ret
test
add
mov
clc
repnz
nop
cld
jae
inc
jbe
andl
nop
cld
jae
add
xchg
add
pusha
sub
jge
clc
repnz
nop
cld
jae
add
dec
add
inc
sbb
cld
jae
add
clc
out
add
add
ja
dec
cmp
repnz
nop
cld
jae
clc
add
add
inc
jmp
cld
or
nop
leave
nop
jmp
lods
add
shr
jnp,pt
les
repnz
nop
cld
jae
cltd
mov
dec
mov
hlt
lea
ja
fs
repnz
nop
cld
jae
shrl
repnz
nop
cld
jae
push
fildl
ltr
aad
daa
fld1
clc
repnz
nop
cld
jae
add
add
shl
clc
repnz
nop
cld
jae
add
and
add
ret
pop
push
mov
xchg
ret
add
lds
pop
add
add
in
nop
leave
nop
jmp
add
cmp
xor
sub
jmp
incl
mov
clc
add
fnsave
xchg
lods
add
mov
clc
repnz
nop
cld
jae
push
add
xor
test
repnz
nop
cld
jae
xchg
sub
and
lods
adc
mov
xchg
ret
mov
push
inc
std
add
add
nop
cld
jae
ffree
int
lds
clc
repnz
nop
cld
jae
push
add
cmp
hlt
clc
repnz
nop
cld
jae
fstl
mov
push
mov
nop
leave
nop
jmp
add
aad
lods
movsb
mov
push
mov
nop
leave
nop
jmp
add
add
movzwl
clc
repnz
nop
cld
jae
add
clc
add
orl
repnz
nop
cld
jae
mov
fildl
jns
mov
mov
add
popl
add
jb
pcmpeqw
pushf
sbb
aad
sbb
jmp
decl
ret
mov
dec
add
mov
and
nop
cld
jae
add
xchg
mov
add
push
mov
pop
add
add
add
push
mov
nop
leave
nop
jmp
mov
call
rol
mov
push
mov
xchg
ret
and
add
dec
ret
lods
add
subl
push
mov
xchg
ret
std
jmp
add
nop
cld
jae
add
add
fwait
add
and
jmp
nop
cld
jae
add
test
pop
clc
repnz
nop
cld
jae
aad
push
lods
nop
add
inc
incl
nop
leave
nop
jmp
add
add
test
dec
jne
rclb
and
push
mov
nop
leave
nop
jmp
clc
add
xchg
clc
xor
push
mov
nop
leave
nop
jmp
mov
mov
sub
loopne
or
mov
insb
mov
push
mov
nop
leave
nop
jmp
add
int
mov
and
repnz
nop
cld
jae
add
repz
clc
repnz
nop
cld
jae
dec
fwait
mov
sbb
dec
push
mov
nop
leave
nop
jmp
lods
lods
mov
jge
enter
nop
leave
nop
jmp
dec
lods
add
add
push
mov
xchg
ret
mov
add
push
mov
nop
leave
nop
jmp
push
cmp
lods
aad
push
mov
xchg
ret
xor
dec
add
test
and
nop
cld
jae
aad
push
add
push
inc
clc
repnz
nop
cld
jae
and
add
add
jne
test
push
add
repnz
nop
cld
jae
add
cwtl
test
andb
je
clc
repnz
nop
cld
jae
push
imul
clc
repnz
nop
cld
jae
dec
add
push
mov
xchg
ret
out
clc
clc
add
push
add
add
nop
nop
cld
jae
rorl
push
push
mov
xchg
ret
add
nop
nop
sub
inc
std
add
mov
push
mov
nop
leave
nop
jmp
dec
dec
clc
popf
frstor
es
arpl
popa
push
mov
nop
leave
nop
jmp
mov
add
std
add
adc
push
clc
repnz
nop
cld
jae
add
cltd
add
add
mov
mov
push
mov
xchg
ret
add
int
add
add
imul
clc
repnz
nop
cld
jae
pop
xor
scas
mov
clc
repnz
nop
cld
jae
clc
mov
loopne
sbb
hlt
inc
sub
push
mov
nop
leave
nop
jmp
xchg
clc
mov
test
and
or
clc
repnz
nop
cld
jae
cmp
add
fistpl
and
repnz
nop
cld
jae
add
xchg
dec
add
clc
repnz
nop
cld
jae
dec
add
movzwl
clc
repnz
nop
cld
jae
dec
cmp
push
clc
repnz
nop
cld
jae
push
add
ret
clc
repnz
nop
cld
jae
popf
std
std
add
add
int
push
clc
repnz
nop
cld
jae
sub
clc
add
insl
push
clc
repnz
nop
cld
jae
add
add
mov
add
mov
inc
add
mov
mov
add
repnz
nop
cld
jae
add
add
clc
add
pop
pop
push
mov
xchg
ret
test
nop
add
clc
repnz
nop
cld
jae
mov
push
fstps
repnz
nop
cld
jae
add
add
mov
add
clc
repnz
nop
cld
jae
add
push
and
mov
push
ljmp
add
repnz
nop
cld
jae
test
pop
xor
clc
repnz
nop
cld
jae
clc
add
and
repnz
nop
cld
jae
ret
nop
mov
push
mov
nop
leave
nop
jmp
mov
pop
out
add
mov
ret
rorb
mov
lcall
mov
xchg
ret
add
add
shlb
pop
shl
push
mov
nop
leave
nop
jmp
push
add
xchg
push
push
mov
xchg
ret
add
add
push
addr16
clc
repnz
nop
cld
jae
add
pusha
pusha
fs
sbb
push
mov
xchg
ret
roll
add
lods
add
mov
clc
repnz
nop
cld
jae
add
add
jge
push
mov
nop
leave
nop
jmp
mov
add
mov
xor
add
repnz
nop
cld
jae
add
add
add
push
cmp
push
mov
nop
leave
nop
jmp
add
test
mov
xchg
fwait
clc
repnz
nop
cld
jae
and
push
mov
add
sbb
clc
repnz
nop
cld
jae
dec
add
add
leave
sub
repnz
nop
cld
jae
lods
cmp
xor
out
mov
clc
repnz
nop
cld
jae
add
add
rolb
push
clc
repnz
nop
cld
jae
add
add
mov
jmp
inc
add
add
ret
std
dec
cmp
repnz
nop
cld
jae
add
add
add
add
incl
push
mov
nop
leave
nop
jmp
add
popf
push
add
add
add
nop
fsubl
sub
faddl
push
mov
xchg
ret
add
add
lds
clc
add
mov
add
push
mov
xchg
ret
add
add
mov
sub
xor
filds
pop
add
movsb
add
add
push
mov
xchg
ret
push
inc
mov
add
add
clc
repnz
nop
cld
jae
add
clc
add
push
push
mov
xchg
ret
add
add
dec
add
mov
clc
repnz
nop
cld
jae
std
aad
add
in
rol
lods
and
lret
arpl
jecxz
addb
add
popa
push
mov
nop
leave
nop
jmp
cmp
add
fwait
mov
push
mov
nop
leave
nop
jmp
faddl
add
add
call
pop
add
data16
add
push
sub
add
add
cmp
repnz
clc
repnz
nop
cld
jae
jmp
je
clc
repnz
nop
cld
jae
add
push
fs
or
adc
jmp
outsb
inc
add
mov
add
leave
jne
push
mov
nop
leave
nop
jmp
add
and
addb
pop
and
repnz
nop
cld
jae
add
push
out
neg
sbb
clc
repnz
nop
cld
jae
mov
add
test
repnz
nop
cld
jae
mov
repnz
nop
cld
jae
dec
clc
add
add
dec
cmp
call
cld
jae
pop
dec
mov
add
push
movzwl
clc
repnz
nop
cld
jae
add
mov
cltd
mov
clc
repnz
nop
cld
jae
pop
insl
test
push
mov
xchg
ret
add
test
add
out
add
inc
push
adc
clc
repnz
nop
cld
jae
add
mov
clc
repnz
nop
cld
jae
push
add
xor
cmp
or
clc
repnz
nop
cld
jae
fildl
add
xor
mov
xchg
ret
add
and
xchg
add
push
sub
inc
add
add
push
aad
add
and
clc
repnz
nop
cld
jae
xchg
add
outsl
loopne
mov
xchg
ret
mov
xor
decl
push
mov
nop
leave
nop
jmp
sub
push
lea
clc
repnz
nop
cld
jae
add
dec
dec
add
jbe
pushl
clc
repnz
nop
cld
jae
push
mov
dec
add
sti
add
clc
repnz
nop
cld
jae
add
outsb
xchg
add
push
mov
nop
leave
nop
jmp
xchg
dec
cmp
mov
mov
mov
xchg
ret
add
add
nop
cld
jae
add
add
push
clc
repnz
nop
cld
jae
add
pop
add
fwait
add
xchg
nop
dec
jmp
rclb
and
cmp
ret
xchg
dec
add
dec
dec
lods
dec
test
loopne
lods
push
mov
xchg
ret
jbe
add
add
clc
add
decb
nop
nop
cld
jae
add
mov
inc
inc
sbb
call
clc
repnz
nop
cld
jae
clc
sub
add
clc
repnz
nop
cld
jae
inc
xchg
push
add
cltd
xor
push
mov
xchg
ret
add
xchg
sldt
add
push
push
mov
xchg
ret
mov
ret
jmp
pop
push
mov
xchg
ret
verw
push
add
xor
push
mov
xchg
ret
aad
add
ret
imul
repz
ljmp
mov
jmp
mov
dec
aad
sub
add
add
xor
pushf
add
clc
repnz
nop
cld
jae
add
fisttpll
add
mov
clc
repnz
nop
cld
jae
add
add
mov
mov
push
mov
xchg
ret
mov
mov
in
nop
leave
nop
jmp
pop
fwait
lods
add
mov
js
inc
add
cltd
add
in
nop
leave
nop
jmp
lods
add
pop
pop
add
mov
cmpl
push
mov
nop
leave
nop
jmp
mov
pop
pop
mov
push
dec
clc
repnz
nop
cld
jae
add
jg
clc
repnz
nop
cld
jae
xchg
dec
cltd
add
xor
mov
nop
leave
nop
jmp
add
add
add
add
cmp
rclb
mov
xchg
ret
test
mov
add
out
mov
push
mov
xchg
ret
add
add
lret
mov
push
mov
xchg
ret
int
add
push
add
push
mov
xchg
ret
add
add
std
add
push
add
push
clc
repnz
nop
cld
jae
add
dec
add
fs
push
mov
nop
leave
nop
jmp
fwait
dec
add
add
push
mov
xchg
ret
add
mov
clc
mov
push
mov
nop
leave
nop
jmp
mov
add
mov
pusha
iret
inc
push
mov
xchg
ret
pop
add
test
dec
dec
push
push
mov
xchg
ret
int
add
mov
clc
repnz
nop
cld
jae
inc
sete
add
add
clc
repnz
nop
cld
jae
add
add
add
mov
mov
clc
repnz
nop
cld
jae
push
mov
push
add
mov
jmp
incl
add
and
and
mov
mov
xchg
ret
test
add
and
clc
cltd
push
push
mov
xchg
ret
aad
add
aad
mov
nop
cld
jae
pop
add
int3
jne
clc
repnz
nop
cld
jae
add
push
add
add
pop
clc
repnz
nop
cld
jae
push
sldt
out
test
jmp
nop
nop
cld
jae
mov
and
repnz
nop
cld
jae
add
test
inc
fld1
clc
repnz
nop
cld
jae
push
add
ret
aad
pop
mov
push
mov
xchg
ret
add
test
lods
add
lods
dec
and
push
clc
repnz
nop
cld
jae
mov
clc
bswap
xor
push
mov
xchg
ret
clc
call
mov
fistl
in
nop
leave
nop
jmp
lds
push
add
push
or
pusha
into
pop
or
loopne
incl
roll
add
fwait
nop
add
data16
add
sub
rclb
in
nop
leave
nop
jmp
add
lods
int
sub
mov
clc
repnz
nop
cld
jae
add
add
cmpl
jae
push
add
lods
push
push
mov
xchg
ret
mov
mov
rclb
nop
leave
nop
jmp
add
mov
mov
clc
repnz
nop
cld
jae
add
add
popf
mov
rcll
repnz
nop
cld
jae
cmp
mov
mov
push
mov
xchg
ret
mov
push
test
xchg
add
xchg
movsb
mov
inc
and
mov
clc
repnz
nop
cld
jae
inc
add
cmp
add
push
mov
nop
leave
nop
jmp
add
cmp
xor
add
in
nop
leave
nop
jmp
add
out
dec
cmp
mov
xchg
ret
add
cmp
lahf
push
mov
add
jl
sahf
add
add
add
adc
ret
add
pop
call
clc
repnz
nop
cld
jae
push
mov
mov
in
pushf
or
add
xchg
add
pushf
xor
nop
cld
jae
add
jbe
inc
add
leave
cmpl
push
mov
nop
leave
nop
jmp
add
clc
repnz
nop
cld
jae
and
xchg
push
add
je
clc
repnz
nop
cld
jae
add
jmp
nop
nop
cld
jae
add
popf
add
fildl
sbb
jmp
add
faddl
pop
add
aad
aad
lods
add
add
jmp
mov
add
add
add
nop
add
xchg
add
mov
clc
repnz
nop
cld
jae
faddl
add
push
mov
xchg
ret
int
faddl
sub
push
nop
add
adc
mov
nop
leave
nop
jmp
push
add
xor
push
mov
xchg
ret
lods
add
add
dec
add
loopne
rcrl
repnz
nop
cld
jae
sub
int
data16
xor
jnp
or
nop
cld
jae
call
loopne
loope
clc
repnz
nop
cld
jae
lods
add
add
add
add
xor
clc
repnz
nop
cld
jae
add
add
dec
add
jmp
pop
push
mov
xchg
ret
push
add
push
inc
nop
mov
push
adc
repnz
nop
cld
jae
add
add
jns
push
mov
xchg
ret
inc
add
add
les
test
push
mov
xchg
ret
mov
push
dec
add
xadd
push
clc
repnz
nop
cld
jae
add
and
shrl
lea
clc
repnz
nop
cld
jae
mov
mov
je
clc
repnz
nop
cld
jae
call
idiv
repnz
nop
cld
jae
add
add
add
mov
cwtl
pop
fwait
clc
repnz
nop
cld
jae
add
add
add
clc
lsl
clc
repnz
nop
cld
jae
pop
roll
xor
dec
nop
jmp
test
clc
repnz
nop
cld
jae
aad
add
sub
sbb
jecxz
add
mov
add
mov
clc
repnz
nop
cld
jae
add
std
jmp
pop
clc
repnz
nop
cld
jae
add
vmovntpd
add
push
inc
add
mov
pop
dec
add
cmp
repnz
nop
cld
jae
add
fildl
mov
push
mov
xchg
ret
add
add
add
clc
add
clc
repnz
nop
cld
jae
add
rorl
les
mov
xchg
ret
add
add
dec
sub
nop
nop
cld
jae
add
add
int
push
add
push
mov
nop
leave
nop
jmp
add
add
add
sub
in
nop
leave
nop
jmp
mov
std
ret
mov
clc
repnz
nop
cld
jae
mov
fldl
add
je
jne
clc
repnz
nop
cld
jae
mov
cltd
movsl
mov
clc
repnz
nop
cld
jae
jbe
add
js
add
push
add
add
push
add
or
xchg
clc
repnz
nop
cld
jae
add
mov
int
add
nop
nop
cld
jae
int
dec
ret
mov
mov
push
mov
nop
leave
nop
jmp
add
push
mov
xchg
ret
add
push
add
add
push
push
push
mov
xchg
ret
add
aad
push
push
mov
xchg
ret
add
inc
add
mov
add
inc
add
repnz
nop
cld
jae
add
dec
push
popf
add
adc
jmp
add
mov
mov
mov
ret
mull
repnz
nop
cld
jae
add
mov
nop
leave
nop
jmp
test
sub
add
dec
sub
test
repnz
nop
cld
jae
add
add
sbb
nop
cld
jae
push
jbe
push
add
test
push
mov
nop
leave
nop
jmp
add
psllw
repnz
nop
cld
jae
roll
add
add
add
lds
repnz
nop
cld
jae
add
xchg
add
add
add
in
nop
leave
nop
jmp
add
dec
add
xchg
clc
repnz
nop
cld
jae
add
add
add
add
clc
repnz
nop
cld
jae
popf
dec
add
mov
add
imul
jae
out
add
add
clc
call
pop
cmp
mov
xchg
ret
int
mov
lods
and
inc
push
push
mov
xchg
ret
add
cmp
dec
jns
xor
add
clc
repnz
nop
cld
jae
int
add
mov
nop
nop
cld
jae
add
add
test
repnz
nop
cld
jae
sub
mov
clc
repnz
nop
cld
jae
add
mov
fstl
dec
push
push
push
mov
nop
leave
nop
jmp
add
lods
cmp
mov
ljmp
jae
add
roll
lds
repnz
nop
cld
jae
aad
mov
add
dec
fildl
lods
je
add
add
mov
andb
push
push
mov
xchg
ret
push
sub
add
andb
enter
nop
leave
nop
jmp
add
add
jecxz
add
add
clc
repnz
nop
cld
jae
mov
pusha
mov
push
mov
nop
leave
nop
jmp
mov
inc
add
mov
xchg
ret
mov
add
add
repnz
nop
cld
jae
add
add
add
push
clc
repnz
nop
cld
jae
xor
add
lds
push
add
call
cld
jae
clc
add
mov
mov
sub
add
lods
clc
repnz
nop
cld
jae
add
add
jns
clc
repnz
nop
cld
jae
add
add
mov
jo
aam
mov
call
in
nop
leave
nop
jmp
add
dec
xor
clc
repnz
nop
cld
jae
mov
mov
std
cwtl
and
mov
add
repnz
nop
cld
jae
inc
add
add
addr16
clc
repnz
nop
cld
jae
ret
fildl
mov
rorl
inc
add
fwait
cmpps
inc
mov
es
add
add
add
pop
pop
add
push
mov
xchg
ret
sub
push
mov
push
xchg
add
mov
nop
leave
nop
jmp
mov
and
add
pop
add
clc
repnz
nop
cld
jae
mov
lods
jne
clc
repnz
nop
cld
jae
pop
add
sbb
dec
xor
clc
repnz
nop
cld
jae
add
add
test
pop
cmp
push
mov
xchg
ret
inc
aad
mov
pusha
push
mov
nop
leave
nop
jmp
fcmovnb
push
add
mov
jne
clc
repnz
nop
cld
jae
nop
dec
clc
inc
test
and
and
out
lds
call
xlat
push
clc
repnz
nop
cld
jae
mov
add
add
mov
nop
leave
nop
jmp
lods
add
add
mov
add
push
push
mov
xchg
ret
add
add
mov
clc
repnz
nop
cld
jae
xchg
mov
add
push
mov
xchg
ret
fldl
add
add
xor
cmp
ret
add
mov
pusha
xor
nop
nop
cld
jae
add
pop
add
push
mov
nop
leave
nop
jmp
ret
aad
add
and
repnz
nop
cld
jae
push
pop
fistl
mov
or
movsb
push
mov
xchg
ret
add
add
add
xchg
daa
and
push
mov
xchg
ret
add
cmp
aad
push
mov
nop
leave
nop
jmp
add
xor
jbe
inc
add
dec
add
jae
loop
push
mov
nop
leave
nop
jmp
add
lods
add
aad
pop
outsl
mov
clc
repnz
nop
cld
jae
add
mov
lods
mov
leave
push
mov
nop
leave
nop
jmp
aad
fwait
push
and
push
mov
xchg
ret
inc
push
push
add
aad
jge
repz
mov
nop
leave
nop
jmp
add
dec
add
fldl
push
out
sbb
cmp
repnz
nop
cld
jae
lds
and
and
dec
sahf
in
push
mov
xchg
ret
add
push
push
add
push
ficoml
inc
clc
repnz
nop
cld
jae
add
repz
repnz
nop
cld
jae
add
add
add
add
loopne
in
xor
clc
repnz
nop
cld
jae
out
add
mov
inc
clc
repnz
nop
cld
jae
add
inc
lods
cltd
fsubrl
shl
inc
pop
push
mov
nop
leave
nop
jmp
sub
add
mov
add
js
popa
clc
repnz
nop
cld
jae
add
add
add
add
movb
adc
repnz
nop
cld
jae
cmp
push
aaa
pushl
jmp
incl
pop
dec
cmp
test
add
rcrb
dec
cmp
repnz
nop
cld
jae
add
lds
inc
add
test
call
aad
mov
or
repnz
nop
cld
jae
push
dec
call
mov
push
mov
nop
leave
nop
jmp
add
add
sub
rcll
mov
xchg
ret
add
add
clc
clc
pop
add
mov
clc
repnz
nop
cld
jae
add
int
jbe
call
clc
repnz
nop
cld
jae
xchg
str
fstps
repnz
nop
cld
jae
mov
add
add
jge
clc
repnz
nop
cld
jae
dec
dec
add
lds
xchg
xchg
mov
push
mov
nop
leave
nop
jmp
add
aad
add
rolb
add
repnz
nop
cld
jae
add
lods
add
add
push
mov
xchg
ret
pop
add
inc
in
sar
nop
nop
cld
jae
lds
int
xchg
clc
repnz
nop
cld
jae
fwait
roll
lods
lea
push
mov
nop
leave
nop
jmp
dec
add
add
push
mov
xchg
ret
xchg
push
add
add
add
and
dec
cmp
push
mov
nop
leave
nop
jmp
add
mov
jae
icebp
inc
dec
xchg
in
nop
leave
nop
jmp
fnsave
cmp
mov
clc
repnz
nop
cld
jae
dec
add
jne
add
repnz
nop
cld
jae
cltd
dec
clc
int
sub
dec
loope
clc
add
adc
add
mov
and
add
addr16
add
add
add
outsb
jne
imul
clc
repnz
nop
cld
jae
add
test
and
mov
nop
leave
nop
jmp
int
add
add
cmp
inc
pop
movzwl
jmp
add
add
add
add
push
add
pop
popa
mov
push
mov
xchg
ret
push
add
sub
add
fld1
clc
repnz
nop
cld
jae
mov
add
push
movzwl
clc
repnz
nop
cld
jae
add
add
sbb
xchg
clc
repnz
nop
cld
jae
out
push
aad
add
fwait
sub
ja
clc
repnz
nop
cld
jae
add
sub
mov
push
clc
repnz
nop
cld
jae
out
add
call
int3
scas
andb
push
mov
clc
repnz
nop
cld
jae
mov
add
push
int
cmpl
push
mov
nop
leave
nop
jmp
data16
adc
popa
cmp
push
mov
nop
leave
nop
jmp
push
test
loop
rolb
sbb
nop
nop
cld
jae
add
cmpsl
push
clc
repnz
nop
cld
jae
dec
push
ret
dec
add
cmc
dec
push
mov
nop
leave
nop
jmp
clc
add
add
sbb
in
mov
test
lds
add
or
add
icebp
add
inc
cmp
bound
push
enter
in
mov
rclb
dec
imul
in
xchg
inc
sahf
inc
aas
inc
lods
mov
testl
mov
bound
mov
inc
ret
push
push
pop
lret
mov
scas
pusha
and
faddl
aaa
js
pop
ret
inc
gs
adc
cmpsb
loopne
lcall
lret
fcmovnbe
mov
sar
lds
loopne
cmc
outsl
jae
fwait
cmpsb
inc
loopne
in
stc
lock
xchg
inc
push
add
stc
rclb
inc
add
sub
inc
test
xchg
mov
mov
loopne
fidivrs
test
inc
sbb
sti
jle
add
add
cld
and
and
loopne
cmp
mov
fwait
adc
aas
push
jno
movsl
sahf
sub
inc
xchg
xlat
push
push
push
and
or
roll
incb
jle
jns
punpckhbw
ret
lods
and
push
push
loopne
jp
int3
or
outsl
dec
push
add
sar
popa
ffree
mov
addl
jl
xor
jle
lods
loopne
sub
inc
outsl
cwtl
or
sbb
push
addb
test
mov
add
and
filds
and
scas
inc
add
ret
pop
mov
in
xor
pusha
push
loopne
repz
rcrb
and
and
lods
shlb
mov
pusha
mov
gs
mov
ret
sar
xchg
shll
jne
fisttps
mov
mov
push
xor
jecxz
add
fldenv
and
push
dec
pop
shl
rolb
stos
icebp
icebp
xor
mov
mov
jno
pop
loop
lcall
dec
sbb
add
add
loopne
sbb
out
imul
inc
stos
inc
andb
dec
les
loop
outsb
jno
add
xor
xchg
xor
xlat
repz
jae
inc
or
mov
cld
in
mov
add
loopne
add
and
jnp
xorl
int
out
ret
mov
std
add
clc
insl
cmp
pusha
loopne
imul
add
scas
loopne
fwait
push
in
popa
ret
sub
add
mov
push
stos
and
movsb
mov
xor
and
outsb
test
and
pusha
loopne
pusha
loopne
clc
out
sbbl
stos
mov
pushf
aas
inc
lds
stc
fs
and
xor
das
jne
push
icebp
cmp
test
pusha
xchg
sahf
loop
in
cmp
jle
loop
bound
jg
into
add
rolb
lods
mov
push
loopne
stos
xchg
pop
push
jae
ds
xor
pusha
inc
das
jl
push
loopne
fdivrs
pushf
int
fcom
imul
int3
jno
adc
pusha
add
les
leave
xchg
push
xchg
pop
nop
xchg
xor
int
out
sub
pusha
add
mov
fsts
lret
daa
int3
loopne
cmpl
pusha
add
add
mov
imul
stos
pop
push
mov
mov
xchg
movsl
negb
mov
addb
xor
jle
mov
push
add
shlb
jnp
fcomp
inc
jl
aam
xlat
sbb
sub
mov
arpl
daa
add
push
and
inc
jmp
pop
dec
sbb
popa
ds
jno
hlt
cli
push
out
mov
xchg
ss
andb
xchg
out
mov
cld
and
push
ret
clc
popa
mov
inc
mov
adc
popf
outsl
insb
test
and
sbb
call
or
mov
pop
dec
in
aaa
cmp
cld
call
outsb
jbe
arpl
push
cmp
imul
dec
or
adc
cmp
loopne
mov
push
mov
enter
sub
loopne
sahf
shrb
out
or
addb
insl
xchg
xchg
fs
pop
xor
js
outsb
test
inc
and
inc
hlt
enter
aaa
ja
or
pusha
sub
xor
ds
dec
push
add
shlb
and
mov
loopne
enter
cmp
enter
push
and
sbb
inc
sub
mov
jecxz
repz
pop
cmp
xorl
push
insb
dec
sbb
imul
fsubr
test
sbbb
ss
and
add
popa
xor
pop
push
lea
push
loopne
cmp
inc
int3
jl
jmp
jne
into
xchg
jbe
or
subb
sbbl
ret
lahf
pop
sti
in
jmp
andb
out
sar
inc
dec
out
loopne
ja
movsl
mov
js
pusha
and
vminps
lds
and
and
loopne
inc
xor
out
mov
fcoml
add
push
or
or
or
mov
fnstenv
mov
dec
lods
cmpsb
pusha
and
out
xor
mov
add
stos
and
mov
xor
sub
xchg
movsl
mov
adc
lods
cmpsb
mov
por
dec
jecxz
mov
into
pop
ret
or
mov
mov
inc
test
orb
mov
add
into
inc
pushf
mov
lret
and
xor
mov
ja
dec
cmpsb
andb
xchg
mov
popl
and
sbb
pop
jl
stc
mov
pop
fnstenv
loopne
stc
repnz
fldt
add
add
mov
lahf
addb
push
inc
and
rolb
rcrb
adc
dec
adc
shl
fisubs
pop
fcmovu
mov
lds
mov
loopne
scas
andb
pusha
stos
mov
stos
and
not
xchg
sub
pusha
mov
mov
mov
add
xor
and
add
add
pusha
and
pusha
xchg
mov
cli
lea
inc
jle
xchg
rorb
mov
lock
mov
shrb
jo
daa
cmc
rolb
inc
gs
push
pusha
mov
enter
lret
dec
xor
pusha
shlb
mov
enter
jg
adc
mov
lods
lds
lds
xor
scas
jno
xchg
mov
loop
shl
stos
rcll
mov
cwtl
rcl
lahf
and
xor
and
push
addb
andb
and
mov
sbb
or
lahf
add
or
cmpsl
inc
arpl
jns
dec
call
sbb
xchg
mov
and
shlb
addb
and
and
ljmp
jbe
add
int
imull
es
loopne
and
sti
xchg
adc
add
lock
jbe
xor
jge
out
stos
addb
out
in
daa
mov
and
pop
pusha
jle
lret
cwtl
sbb
loope
pop
sbb
add
add
mov
pop
push
mov
addb
xchg
sbb
rcl
sbb
add
mov
and
pop
out
sti
idivl
shrl
js
xchg
push
bound
sbb
lods
add
push
test
cmpsl
mov
mov
fwait
dec
ja
nop
dec
adc
fdivrs
shr
call
fcoml
test
loopne
lock
repz
mov
mov
pop
aaa
mov
stos
push
xchg
iret
pop
in
ficomps
aas
out
jnp
pusha
pusha
mov
jbe
leave
movl
imull
inc
aas
cmp
push
push
test
pop
and
loopne
xchg
push
pop
sub
adc
dec
sub
mov
xor
jmp
imul
sti
and
loopne
push
pusha
and
mov
jb
add
mov
lcall
jb
stos
mov
pusha
and
xchg
adc
fs
shlb
ds
sub
mov
daa
mov
adc
inc
mov
incb
fwait
xlat
pop
xor
in
sarl
daa
daa
imul
mov
mov
jl
sub
jae
dec
xchg
sbb
leave
ljmp
mov
or
shlb
out
jnp
and
leave
jae
int
and
aas
out
add
data16
jb
pop
imul
mov
test
adc
inc
and
sbb
cmc
rclb
mov
rol
hlt
xor
pop
and
push
cld
fdivl
out
lcall
adc
mull
jmp
std
lds
mov
xor
roll
enter
nop
fcoms
push
xlat
fistl
iret
push
rol
jge
push
inc
jbe
jge
call
loopne
jo
fiadds
dec
enter
sarb
add
mov
jbe
in
and
fisubrs
sahf
mov
pop
addb
pop
sbb
andb
pop
xchg
cmp
mov
clc
into
mov
pusha
shlb
fisttpll
xor
fsubrp
fsubs
mov
loop
lcall
mov
mov
pusha
and
mov
loopne
popl
xchg
xchg
rorb
mov
add
mov
loopne
cmp
lret
add
mov
jo
out
push
fmuls
inc
mov
popf
iret
mov
outsl
lahf
push
sub
xor
and
pusha
pop
inc
or
cmc
jbe
add
jne
ret
add
xlat
icebp
cmp
outsb
outsl
shr
mov
inc
jge
sbb
add
add
pop
pop
insl
stos
andb
sbb
cmp
movsb
inc
pusha
shlb
rcrb
outsb
pop
leave
lret
mov
fildll
aaa
push
lret
sub
loopne
inc
lods
mov
fxch
fwait
jge
ret
pop
int3
sbb
cmp
fidivrl
pushf
mov
aas
and
sbb
sbb
ret
sub
loopne
cmp
xor
movsb
add
mov
jae
dec
cmpsb
shlb
mov
rcl
mov
divl
mov
das
mov
test
andl
pop
jge
clc
insl
cwtl
jp
outsb
mov
insl
repnz
in
sti
add
sbbb
test
and
push
sub
add
clc
icebp
jne
cmc
cmp
add
push
shlb
inc
mov
insb
in
je
add
mov
stos
shlb
dec
in
pushf
cmp
jns
inc
add
pusha
adc
inc
mov
orb
rol
add
loopne
xchg
jmp
jg
or
scas
inc
mov
mov
test
and
cmpl
outsb
pushf
mov
fs
dec
or
subb
xor
dec
dec
mov
scas
rolb
jl
xor
sarl
enter
pusha
cwtl
sbbl
inc
aaa
negl
xchg
dec
addb
or
inc
or
lret
jo
inc
sbb
mov
lcall
repz
mull
mov
add
inc
inc
mov
ret
xchg
mov
jg
std
jno
fwait
jecxz
and
inc
dec
out
rcll
push
dec
mov
pusha
outsb
sub
addb
js
rol
add
popa
sbb
negl
mov
pusha
aas
jl
pop
test
shl
xlat
std
fdivrs
push
sbb
xor
and
loopne
std
add
inc
pop
cmp
fisubrs
aad
and
add
mov
jno
das
cld
cmp
cmp
shlb
dec
hlt
inc
shrl
loopne
push
and
push
cmp
add
inc
je
leave
and
inc
and
or
ret
xor
ss
jecxz
andb
pop
fistpl
sub
add
movsb
pusha
adcb
inc
add
inc
pusha
sbb
sub
push
xchg
aam
in
xor
insb
sti
xor
jmp
mov
jne
cmpsb
addb
pop
add
mov
xchg
and
inc
xchg
push
call
lea
js
lea
mov
dec
inc
push
into
sub
mov
rorb
jmp
popa
xchg
mov
rolb
inc
or
and
scas
dec
jmp
jne
rcrb
dec
int3
cmc
mov
xchg
push
popf
inc
cltd
inc
xchg
and
xor
orl
mov
and
loopne
mov
or
rclb
ret
xchg
mov
cltd
in
adc
rolb
xor
dec
and
sahf
jl
adc
or
sahf
jl
cmp
fs
outsl
jo
sbb
xchg
loopne
aas
sub
rol
sub
add
dec
xor
outsl
jmp
insb
jo
sub
loopne
mov
mov
or
add
shlb
daa
jbe
fcmovnbe
mov
loopne
ja
aas
sub
lds
cmp
pop
and
push
push
push
aaa
cwtl
add
add
cli
mov
call
xlat
mov
inc
inc
icebp
push
add
repnz
aam
andb
inc
mov
xchg
adcb
and
in
mov
nop
rclb
mov
jne
xchg
loope
mov
iret
je
mov
cmpsl
js
fwait
cmc
in
jge
or
jne
lods
ss
jae
fdivr
mov
lods
inc
add
add
sarl
sar
sub
add
movsb
addb
insb
xchg
mov
pusha
sub
pusha
stc
mov
push
pusha
icebp
aam
mov
sbb
and
and
jecxz
out
dec
jl
sbb
xchg
aam
mov
jmp
jmp
lcall
cli
aad
mov
test
adc
fdivl
pop
dec
fadd
dec
std
lcall
les
and
mov
sarl
inc
and
or
pop
je
pusha
inc
xchg
jle
fistl
push
and
cmc
mov
dec
aas
daa
adc
pusha
in
call
loop
mov
xorb
bound
sti
add
mov
dec
popa
xchg
xor
jnp
repz
daa
filds
xchg
sub
and
test
add
adc
and
nop
mov
jp
shrl
and
shr
ret
sub
mov
insl
lods
popa
jns
xor
add
aaa
aas
sub
and
sbb
mov
jg
bound
bound
or
jmp
adc
xor
int3
stos
and
cmp
out
out
subl
add
repnz
mov
sub
loopne
mov
cmp
aam
and
addb
aas
adc
or
mov
scas
add
mov
rcrb
rcr
jmp
rorb
popa
mov
lret
fs
push
pop
pop
add
add
addb
adc
lret
rclb
into
xchg
cmp
add
test
in
lret
ljmp
popf
adc
mov
and
std
insb
sbb
add
mov
lea
cmp
in
xor
xchg
ds
or
mov
push
pop
cmc
lcall
add
and
inc
cmp
adc
jg
addb
pusha
movsb
inc
adcb
cmpsl
or
shlb
ja
sbb
addb
movsb
and
jge
xchg
idivl
and
push
xchg
mov
add
in
loope
outsb
pop
fcmovne
push
mov
pusha
adc
jae
leave
lcall
mov
cmpsl
mov
cmp
add
stos
pusha
rolb
inc
add
add
fimull
loopne
and
inc
lods
loopne
mov
hlt
mov
loopne
adc
push
mov
ss
sbb
bound
pop
or
and
and
mov
xchg
je
mov
and
lret
mov
ret
mov
lea
jg
rclb
pop
sbb
add
pusha
add
mov
test
mov
fdivr
lahf
fldt
xchg
fucomp
jecxz
xchg
ret
pop
cwtl
js
incl
xchg
push
test
shlb
call
mov
ret
jnp
inc
sbb
movsb
mov
rclb
xchg
jmp
andb
cmp
pop
sub
xchg
mov
jmp
stc
arpl
add
shlb
xchg
scas
rolb
aad
add
pusha
pusha
in
xchg
xchg
loop
add
fisttps
insb
push
mov
call
dec
cs
mov
add
nop
jmp
mov
xor
loopne
addb
stos
add
cmp
fnstsw
inc
aad
xchg
cmc
or
out
cmp
adc
mov
sti
cmp
mov
out
loopne
ret
xorb
test
push
xchg
xchg
addr16
ret
push
dec
fldt
push
jp
out
lods
adc
jecxz
xor
shlb
dec
in
jp
and
loop
rclb
push
inc
xchg
sahf
xlat
out
mov
push
idiv
stc
fsubrp
out
dec
in
out
mov
sar
inc
push
mov
mov
lock
push
mov
and
rol
lret
pusha
cmc
jmp
loopne
push
jne
mov
int3
sahf
jp
mov
and
pusha
sarb
fldt
pusha
into
or
out
adc
push
jae
mov
mov
rcrl
xchg
mov
add
xorb
fs
pop
cli
add
imul
pop
cmp
or
adc
mov
ret
push
jl
aaa
and
pusha
shl
pop
sarl
roll
inc
and
bound
mov
daa
test
cmp
rcl
push
outsl
pop
xor
aas
js
aad
mov
adc
out
ja
cwtl
in
andb
loopne
xchg
fnsave
and
out
dec
xchg
dec
out
jo
testl
inc
ret
add
lahf
and
sbb
loopne
fnsave
and
mov
jp
xchg
cmc
and
loopne
adc
pop
lret
sbb
bound
ss
cmpsb
andb
mov
jp
ret
hlt
push
cmp
inc
inc
lret
inc
mov
jl
jns
xlat
sub
les
xor
loopne
xor
cmp
repz
push
mov
cmpsb
and
aas
push
sbb
arpl
jbe
mov
or
xorb
loopne
xlat
or
pusha
pusha
iret
mov
sahf
inc
cwtl
sub
cmp
scas
popf
jle
call
inc
insl
jns
test
pusha
ja
test
les
add
push
inc
testl
pusha
andb
mov
and
push
das
sti
xor
inc
stos
enter
dec
clc
lds
add
nop
and
and
adcl
jne
push
mov
and
xchg
lret
add
subb
jmp
int
inc
orb
loopne
clc
inc
sbb
rcr
cmpsl
enter
cmpl
or
or
jno
scas
shlb
inc
xor
dec
sub
out
lret
inc
cmp
inc
sbb
imul
add
inc
outsl
js
add
aam
out
insb
cltd
sbb
jp
mov
add
outsl
dec
push
insl
pop
mov
andb
inc
and
pop
repz
mov
inc
enter
lea
cmc
cld
scas
pop
push
cmp
imul
stos
and
aad
pop
lahf
mov
and
gs
fistl
out
adc
mov
and
adc
shlb
shlb
ret
mov
loopne
push
sub
add
add
stos
addb
dec
and
mov
push
jnp
inc
cmp
clc
imulb
shlb
lea
cmp
arpl
test
pusha
lahf
cmpsb
inc
and
inc
movsl
sub
cmpl
and
rorb
jg
adc
ds
sahf
xchg
cmc
jo
loopne
aas
iret
ljmp
and
pusha
jg
or
mov
arpl
add
cld
dec
push
fisubs
pusha
pusha
or
xlat
pop
mov
loopne
dec
testb
pop
fidivl
cltd
jbe
div
jp
cmp
in
xchg
pop
inc
lock
aam
ret
cmpsb
loopne
xchg
xchg
sbb
and
sarb
clc
test
bound
sub
addb
inc
dec
outsb
call
in
sbb
mov
sub
mov
push
mov
inc
and
pop
or
sarl
jno
in
int
adc
dec
jge
pusha
sar
rolb
dec
dec
out
push
lods
pop
dec
test
add
andb
rorb
mov
in
loopne
sbb
push
cwtl
nop
pop
jmp
inc
and
leave
mov
push
and
or
mov
into
push
jp
aad
ret
pop
repnz
or
xchg
xchg
ret
stos
dec
cmovl
cltd
sub
mov
and
mov
jo
rcll
xchg
into
adc
arpl
inc
add
cmpsb
and
sahf
jns
popa
pop
aad
add
mov
ret
xchg
mov
push
dec
add
loope
bound
add
jg
push
nop
xor
data16
push
bound
fwait
outsb
lcall
cwtl
pop
arpl
pusha
and
sub
pusha
ret
xchg
sub
adcb
inc
and
mov
aam
aam
lock
bound
outsb
mov
rclb
dec
jp
adc
clc
out
shr
pop
pop
fcmovu
jp
mov
mov
clc
and
inc
pop
arpl
inc
aam
and
mov
cmp
xchg
mov
orb
sub
and
clc
movsb
pusha
add
add
and
xchg
sbb
pusha
inc
and
cltd
mov
jbe
dec
shlb
xor
es
andb
or
push
pusha
pusha
dec
mov
add
mov
loopne
mov
ja
mov
pusha
pusha
lock
adcl
inc
and
in
addb
stos
loopne
or
xchg
xor
sti
lcall
out
imul
xor
and
mov
sbbb
lock
push
and
add
or
icebp
movsl
jmp
mov
enter
addr16
add
pusha
out
pop
aad
in
jo
ret
lret
loopne
inc
and
test
ret
loope
sub
and
rolb
sbb
das
xchg
mov
and
sub
add
and
out
xchg
mov
mov
mov
adc
pop
cmp
cli
fcoml
push
mov
mov
sub
fcomp
push
shl
add
push
or
je
arpl
inc
xchg
js
fcmove
dec
xchg
rorl
mov
scas
mov
mov
dec
mov
adc
loopne
out
mov
loopne
jb
sbb
adc
pop
or
loopne
mov
rcrl
mov
pusha
and
lea
and
rcrb
std
xchg
cmp
pusha
pusha
add
mov
cwtl
bound
movsb
loopne
test
and
and
or
mov
add
pusha
loopne
icebp
add
andb
clc
push
add
cmpb
mov
notl
adc
test
inc
and
lods
addb
insl
imul
inc
stos
pusha
loopne
mov
sub
rolb
inc
loopne
addb
xor
fidivs
pop
mull
aam
in
stc
adc
mov
or
inc
mov
mov
lds
adc
mov
shlb
push
popf
sub
jecxz
fstl
add
inc
jae
rcr
add
in
fincstp
addr16
daa
lret
cmp
jae
add
xchg
jo
and
inc
mov
adc
jns
addr16
addb
dec
outsl
mov
add
pop
aas
es
add
xor
arpl
dec
xlat
jecxz
push
push
fcmovne
std
fsts
roll
andb
inc
jbe
lahf
fidivrl
hlt
dec
dec
jno
mov
mov
loopne
add
inc
ret
inc
rclb
test
inc
xchg
mov
inc
ljmp
dec
mov
inc
xchg
ljmp
push
inc
movsb
andb
mov
push
ret
leave
and
inc
fs
add
loopne
cmpsb
mov
mov
add
sbb
mov
mov
jns
inc
cmp
ss
aas
call
add
sarb
xchg
nop
addb
lea
cld
jecxz
cmp
pusha
inc
dec
push
or
add
out
loopne
shl
out
sbb
xchg
or
clc
rcll
pusha
loopne
sub
nop
call
addr16
inc
jo
jle
loopne
adc
clc
enter
jecxz
int3
bound
in
data16
pusha
jnp
loop
movsl
jbe
ret
pop
mov
adc
xchg
dec
pop
adc
mov
add
inc
daa
push
loopne
inc
data16
xor
lcall
xor
andb
out
pushf
stc
dec
lea
adc
fisttpl
ret
mov
add
loopne
dec
bound
adc
sahf
cmc
jmp
mov
xor
sub
pop
add
cmpb
das
orl
and
sub
sarb
out
jecxz
ss
mov
fildll
or
sbb
bound
cltd
mov
xor
loopne
xchg
add
addb
mov
or
jno
push
xorl
in
xlat
jnp
aaa
out
xchg
jbe
aam
mov
pusha
add
mov
push
rcrb
cmp
loopne
std
inc
test
filds
xchg
adc
pop
mov
lods
mov
sbbb
in
xchg
adc
loope
inc
add
sti
loop
mov
lret
mov
loopne
push
pushf
repnz
inc
scas
addb
inc
pop
jp
inc
sub
add
mov
ds
jmp
loopne
inc
cmp
mov
int3
push
inc
mov
push
xchg
dec
pop
lahf
mov
mov
pop
xchg
mov
or
and
lret
jge
incl
lods
rcll
mov
jae
stos
shl
add
xor
mov
cli
cmp
mov
mov
pop
cwtl
test
inc
and
lods
jl
clc
repz
xor
and
leave
in
mov
ret
dec
mov
leave
pusha
and
pusha
call
push
xchg
or
cmp
aaa
jecxz
pop
push
jmp
les
aam
jbe
jb
lahf
mov
fldenv
fwait
stos
inc
sbbb
andb
dec
addw
and
loopne
add
inc
pop
nop
sbb
add
mov
jmp
jle
xchg
add
push
and
mov
jb
or
mov
xchg
js
loopne
and
or
les
and
jbe
cld
scas
dec
sahf
test
shlb
sub
jnp
xor
jmp
xor
push
sub
repnz
out
stc
mov
and
sub
in
inc
into
adc
cwtl
negb
leave
call
cltd
sti
sahf
dec
push
inc
lock
loope
mov
mov
daa
sbb
lahf
add
cmpb
adc
loopne
nop
bound
and
cmp
jmp
and
and
lds
loopne
pushf
call
mov
mov
call
das
mov
enter
mov
sbb
shlb
mov
sub
pusha
out
push
fistpl
and
outsl
xchg
mov
outsb
jg
xorl
test
fisubs
mov
in
jb
ja
lret
shlb
add
sub
pusha
lret
lahf
in
inc
and
dec
outsl
mov
loopne
sub
adc
adc
arpl
xchg
mov
xor
addb
fs
cwtl
mov
jns
insl
pop
loopne
mov
rcr
repz
inc
add
and
mov
mov
xor
cmp
call
sarl
in
inc
inc
add
and
subb
mov
fnstcw
fmull
xchg
pop
mov
cld
fdivs
pushf
stos
pusha
sbbb
pop
ret
ret
sub
add
adc
sti
sub
xor
xchg
xchg
mov
pusha
pop
jae
mov
pushf
xor
je
mov
das
push
jne
inc
dec
jae
ss
and
imull
test
sbbb
mov
jo
sub
shl
add
add
and
pop
fsubrs
add
jg
ret
fwait
dec
fcmove
push
sarl
lods
xor
fwait
push
and
ret
lahf
cmp
adc
call
les
sub
pop
push
inc
add
adc
inc
aad
push
push
add
pusha
xorb
or
or
dec
bound
and
rolb
mov
sti
repnz
cmp
jge
adc
add
mov
loopne
mov
jb
or
sbb
andb
hlt
ja
repz
mov
add
mov
bound
shlb
int
insl
sbb
loopne
aas
jge
mov
and
mov
xchg
andb
lock
xchg
dec
xchg
std
out
xor
mov
add
inc
dec
pop
data16
and
out
push
int3
sub
mov
test
rcrb
sub
and
or
daa
iret
xchg
fldenv
mov
dec
inc
jns
pop
out
andl
pop
cmp
add
cltd
fidivrl
lret
nop
jnp
push
enter
mulb
jecxz
jge
out
inc
mov
lret
mov
inc
sub
and
addb
loopne
fimuls
pop
lea
dec
test
rcl
jae
jp
dec
mull
jg
out
xchg
xchg
aad
cmp
rep
fldt
out
dec
jge
mov
and
stos
addb
loope
xchg
mov
sti
ja
cmp
rol
int
inc
push
or
sbb
imul
shl
shll
js
lea
out
mov
xchg
aam
into
push
ds
lock
dec
xchg
leave
scas
addb
xor
call
or
pusha
mov
loopne
jb
inc
and
ret
inc
push
jecxz
or
repz
mov
popf
adc
xchg
fnsave
adc
add
or
loopne
xchg
cmpsl
mov
loopne
add
dec
ret
mov
add
jns
xchg
stos
int
add
jno
loopne
lcall
into
push
cmp
mov
mov
xor
cld
sub
rcr
sbb
in
rolb
or
inc
jle
js
push
and
pusha
dec
loopne,pn
int3
dec
fbld
jl
ret
jp
aas
mov
mov
inc
push
bound
les
xor
popf
sbb
pop
xchg
lock
pusha
rclb
iret
pop
imul
pusha
inc
fiaddl
and
shrb
orb
sbb
mov
pusha
pusha
in
mov
sti
insl
and
adcb
movsl
mov
jbe
sub
mov
aas
clc
fsubs
outsb
or
pusha
push
into
fldl
lods
and
add
adc
mov
mov
adc
mov
mov
inc
xchg
mov
movsb
pusha
inc
cmp
jp,pt
and
mov
lds
xor
mov
and
fldenv
sbb
pop
ja
scas
pusha
rcrb
dec
mov
pusha
add
mov
cmp
sbb
and
and
in
loopne
dec
movsl
fimuls
cwtl
inc
pop
daa
loope
adc
enter
rolb
das
and
mov
fidivrl
jmp
jo
inc
pop
inc
sub
repnz
dec
ficomps
pop
mov
pop
aad
inc
mov
fidivrl
cmp
filds
push
ss
mov
xorb
outsl
roll
shl
pop
mov
sbb
test
xchg
inc
out
mov
aam
add
and
and
jae
xchg
aas
mov
sbb
cmc
rolb
mov
push
pop
sub
aas
cltd
bound
push
inc
subb
lds
fs
lcall
daa
mov
mov
mov
add
sbb
sub
mov
gs
movsw
pop
data16
ds
lds
xchg
jp
jge,pt
add
add
aaa
fisubrs
shl
inc
add
nop
repnz
push
jg
pop
sbb
mov
push
mov
lcall
fistpll
or
xchg
mov
pusha
cwtl
xor
in
mov
inc
add
daa
jg
jmp
repnz
xchg
pusha
and
adc
add
add
and
mov
sbb
test
pushf
andb
mov
inc
inc
cmp
addb
or
mov
sub
loope
mov
add
add
add
es
jmp
sub
cmc
fcmovbe
lds
or
add
xchg
jecxz
gs
mov
test
add
mov
idivl
ret
jecxz
lods
or
orb
mov
addr16
add
rorb
jae
es
pusha
push
inc
and
iret
jecxz
shll
add
rolb
and
dec
lock
and
shrb
and
es
loopne
xchg
xor
nop
mov
loopne
shlb
and
add
pusha
xchg
inc
inc
cltd
cmp
cmp
add
or
inc
loopne
or
inc
adc
stos
inc
mov
jge
push
clc
and
xchg
les
push
das
call
push
xor
mov
loopne
mov
sub
add
iret
notb
mov
jb
inc
dec
nop
sub
add
cwtl
sub
shll
stc
rcrb
inc
shrb
add
insb
andb
mov
add
loopne
cli
and
into
mov
adc
out
js
push
inc
and
or
shl
cmpsl
bound
jbe
rcrb
pop
enter
pop
ds
pop
add
rcr
stc
inc
mov
inc
insb
in
mov
rol
in
sbb
sbb
add
ds
fisubl
add
rcr
ja
adc
fcmovnu
pusha
sub
ret
lret
dec
test
jp
add
pusha
rcl
push
ret
out
std
and
or
orb
dec
ret
loopne
call
sti
jb
or
and
andb
test
inc
inc
stos
mov
fsubrs
add
and
mov
dec
ds
addb
pop
fs
dec
insb
jne
ljmp
out
mov
add
sub
and
xor
lods
pop
inc
in
mov
push
push
pop
test
rorb
and
mov
add
rolb
cmp
imul
cld
loopne
push
ret
inc
repnz
push
fidivrs
sbb
aad
iret
mov
and
mov
aaa
sar
ficompl
cli
lcall
push
push
pop
lcall
iret
bswap
add
jne
loopne
add
push
fs
push
inc
and
rclb
jno
sub
rcrb
in
dec
mov
addr16
aad
aas
xor
jae
inc
rcll
shll
adc
fwait
mov
mov
scas
xchg
or
pusha
pop
or
sarb
mov
mov
and
pop
sub
lret
sub
lds
pop
call
lods
ret
cld
ljmp
mov
push
test
xor
inc
mov
pusha
loopne,pn
scas
andb
push
mov
lcall
ds
lea
ret
cmpsl
sbb
inc
popf
add
cmpsb
mov
andb
sbb
add
enter
repz
jmp
addb
mov
test
loopne
adc
push
xor
pusha
shlb
mov
lock
into
cmpsl
pushf
mov
push
jnp
imul
out
loopne
int
dec
iret
adc
pop
stos
and
mov
cltd
jae
dec
mov
mov
jle
and
in
popa
xchg
fstl
inc
inc
dec
or
push
sbb
mov
add
lock
inc
and
jg
inc
loopne
ror
xorl
mov
call
push
mov
mov
shl
outsb
aaa
xor
and
ror
xor
add
jo
repz
neg
dec
sbb
dec
jp
pusha
inc
jns
pusha
mov
inc
push
add
or
add
shrb
jmp
ljmp
adc
push
mov
andb
popa
xchg
mov
xor
lcall
daa
mov
fcomip
push
lock
xchg
js
sub
rolb
push
xchg
pop
in
adc
mov
dec
jmp
pusha
and
popf
xor
cltd
mov
dec
xor
leave
lods
add
xchg
les
loopne
add
sarb
and
cmp
dec
cmp
imul
in
sahf
ret
mov
jbe
mov
daa
ja
and
mov
pop
call
jo
sarl
cltd
xchg
fmull
cmp
cld
xchg
cltd
stc
push
jp
xchg
sbb
mov
int
cltd
jne
add
mov
inc
das
xchg
mov
pusha
loopne
sahf
cli
mov
aas
fwait
cmp
aaa
adc
rolb
push
dec
mov
lock
nop
lods
add
and
ja
push
test
add
xchg
lret
loopne
mov
inc
xchg
cmp
push
fwait
push
push
loopne
daa
jo
loopne
jp
mov
pushf
sub
adc
addb
and
push
inc
lcall
xchg
fcoms
data16
mov
test
roll
lock
icebp
add
addr16
jno
xchg
ret
andb
add
inc
stc
fdivrs
mov
inc
mov
aad
adc
insb
xbegin
lret
dec
mov
xor
push
aaa
fcoms
lds
sti
popf
jmp
mov
inc
add
and
mov
loop
inc
jae
mov
adc
mov
ret
jge
add
sub
je
jae
clc
cmpsb
addb
jg
fsubp
das
sub
int
loopne
js
push
mov
rolb
jle
jno
fisubs
pop
mov
and
inc
sbbb
mov
push
mov
daa
cmpsl
gs
pusha
out
enter
and
idivl
icebp
clc
rcr
mov
into
loopne
dec
daa
test
stos
mov
mov
ret
mov
test
and
shl
add
pop
cmc
in
rcrb
dec
inc
dec
cmp
sbb
inc
inc
mov
and
dec
loope
inc
int3
dec
into
sub
add
ret
pusha
push
cmc
add
popf
and
add
pop
dec
test
xchg
pop
dec
adc
push
inc
movsl
xor
out
js
daa
push
push
mov
or
add
inc
cmc
mov
into
or
push
cli
mov
aam
les
popf
pop
icebp
inc
pop
pop
insb
aam
loopne
into
inc
out
xchg
dec
pop
data16
fdivrl
inc
mov
mov
inc
in
adc
push
pusha
inc
pop
movsl
repz
inc
daa
pop
mov
mov
add
push
jno
jb
andl
inc
add
jl
cld
xlat
test
rorb
mov
pusha
mov
rolb
inc
jb
pop
idivl
ss
inc
inc
pop
push
aaa
pop
jne
dec
mov
int3
mov
dec
jecxz
jbe
push
add
mov
sti
inc
mov
data16
aad
xor
adc
jmp
mov
imul
jg
xchg
xor
rcr
xchg
stc
pop
add
adc
mov
adc
xor
imull
xchg
push
addb
jns
pop
sti
das
mov
aad
pop
or
inc
cmpsb
add
rolb
xchg
shrb
dec
inc
push
mov
orb
inc
add
shlb
dec
mov
int3
test
inc
jp
mov
out
xchg
lods
cmp
hlt
jge
adc
mov
ret
pusha
pop
sbbl
ret
dec
jno
mov
pop
sbb
add
addb
inc
mov
les
push
push
pop
mov
xor
movsb
and
pop
ficomps
std
fwait
cmp
in
repz
dec
aas
mov
pusha
pusha
pop
pop
cmp
jge
xor
fildll
scas
add
insb
adc
fcmovnbe
pop
sbb
enter
es
mov
out
inc
rorb
jae
and
shlb
nop
xchg
and
loopne
scas
in
loopne
xchg
arpl
mov
add
dec
xor
in
jge
inc
ds
xor
mov
sub
rolb
fiadds
repnz
push
dec
push
mov
add
cwtl
cli
xchg
inc
fld
call
sarb
jg
lcall
pop
repz
and
adc
push
cmp
sbb
mov
dec
test
or
sbb
les
aad
add
sub
sahf
or
pushf
je
repnz
and
add
sub
in
mov
bound
out
les
ds
pusha
daa
mov
or
shl
scas
scas
pusha
shrb
cmp
sub
jae
push
add
das
mov
or
out
aaa
setg
push
mov
jg
int
mov
loopne
iret
inc
fisubrl
jae
mov
fists
cmc
jg
aad
cmp
scas
inc
add
sub
fbstp
or
add
xchg
and
call
mov
rcr
or
orb
rcll
ret
sbb
cmpsl
pushf
sbb
mov
fists
adc
mov
sahf
adc
add
xchg
ret
scas
loopne
test
and
subb
das
push
xor
pop
jno
jp
sbb
lods
add
idivb
mov
int
in
divb
push
leave
push
rolb
ja
jle
inc
adc
and
ss
pop
adc
mov
scas
jne
add
sbb
rorb
inc
addr16
sub
movsb
andb
mov
add
ja
fidivs
ret
ret
imul
rol
pop
stc
lods
shlb
sti
lods
daa
sti
std
stos
rol
call
loope
dec
adc
and
pusha
xor
test
ret
mov
cmp
rolb
mov
add
movsl
jp
mov
pop
or
cmp
lahf
iret
outsb
push
and
sahf
xchg
addr16
ss
jno
and
and
mov
mov
xchg
dec
pop
rolb
rol
imull
in
and
icebp
xchg
movb
mov
add
or
xchg
daa
cmp
mov
mov
and
scas
fucomi
gs
fistpl
xor
lods
test
add
cmp
pop
push
pusha
pusha
jns
inc
and
addb
push
xchg
inc
mov
aaa
scas
and
lock
addb
stos
loopne
add
cmpb
shlb
aas
les
stos
pop
shlb
addb
pop
pop
mov
jns
stc
push
jbe
and
lods
mov
into
aas
sub
sbb
lret
shr
bound
add
test
inc
add
shlb
dec
push
sbb
mov
adc
sub
mov
ja
fcoml
xorl
push
sbb
pop
adc
test
inc
scas
jmp
and
add
adc
aas
add
inc
mov
sbb
out
xor
lds
and
add
sbbb
pop
jg
inc
outsl
in
out
stos
dec
xchg
dec
mov
iret
pusha
add
pop
das
sub
popa
inc
in
mov
frstor
mov
shlb
sarl
and
add
xorb
add
mov
repnz
mov
sub
shlb
lods
sbb
mov
push
push
out
and
add
fldt
mov
hlt
ficomps
pushf
mov
add
mov
sbbb
mov
divl
sbb
pusha
mov
fstps
xor
stos
add
stos
arpl
bound
mov
idivb
add
mov
pusha
mov
popa
sub
sahf
cmp
pop
lcall
stos
enter
ljmp
xchg
inc
inc
adc
out
icebp
out
xor
and
gs
add
pusha
mov
and
jl
cmp
push
jmp
jbe
int
sar
das
stos
andb
imul
testb
cmp
add
add
pusha
or
mov
aas
pop
call
pushf
js
and
out
inc
in
push
adc
push
push
test
inc
jl
cmp
andb
pop
xor
push
mov
adcl
mov
push
cmp
imul
pusha
adc
and
clc
leave
cltd
mov
loopne
cmp
push
shl
jp
jae
jbe
and
loopne
repz
mov
pusha
inc
into
das
rcrl
es
and
dec
dec
sahf
adc
add
xchg
fistps
push
mov
dec
jbe
lret
push
inc
adc
fisubl
lock
lret
inc
shlb
lcall
pmulhuw
or
shr
dec
hlt
mov
pusha
testb
cltd
dec
mov
sbb
pop
xchg
mov
popf
out
xor
clc
xor
int3
and
loopne
jecxz
jns
mov
icebp
push
add
xchg
ret
push
iret
dec
push
pusha
xorb
out
inc
inc
rorl
loopne
mov
mov
dec
hlt
mov
shlb
mov
int3
mov
aam
int
cmp
mov
and
jno
mov
out
push
cmpsb
inc
add
jnp
push
inc
and
shrl
inc
add
jp
je
ret
pusha
pusha
inc
lahf
ljmp
xor
mov
rclb
addr16
and
pusha
pusha
or
rorb
rcrb
jbe
flds
movsw
outsb
xchg
into
rorb
push
and
test
repnz
jle
cmpsb
add
inc
adcb
cltd
push
push
add
or
inc
clc
imul
push
test
mov
jp
and
sbbl
add
xchg
cmp
xchg
outsl
sub
shlb
pusha
and
lock
mov
mov
and
out
movsl
xchg
rcrl
dec
aaa
ss
lret
pop
xlat
and
sub
mov
add
andl
cwtl
sbb
and
cmp
jo
and
popf
or
pop
jmp
sbb
pusha
pusha
xlat
mov
aam
pop
xor
addr16
push
dec
jne
jne
sbb
sbb
enter
add
adc
inc
adc
data16
out
mov
and
je
fisttpll
sar
mov
sbb
cltd
es
and
pop
cld
jl
movups
lds
mov
dec
push
cmp
pusha
rcrb
sub
dec
int3
and
loopne
mov
mov
pop
sub
and
push
xchg
mov
mov
test
pusha
ss
or
inc
adc
xor
push
dec
sub
pusha
mov
lea
aad
mov
sbb
xor
outsb
sbb
in
out
cmp
and
inc
xor
lods
js
xchg
das
lret
int3
movsl
cmp
punpckhdq
mov
mov
jmp
jg
call
sub
enter
xchg
pop
into
dec
or
shrb
loope
shll
pop
scas
jmp
inc
inc
mov
xor
jmp
addb
and
jo
mov
icebp
and
add
shll
loopne
push
int3
enter
add
imul
pusha
and
cmp
or
ret
shlb
ja
fidivrl
sti
cmp
pop
fs
cmp
repz
xorb
and
sub
popa
icebp
mov
add
dec
cmp
sub
pop
fisttpll
mov
inc
xlat
mov
pop
adc
dec
aaa
sub
jae
add
and
adc
stos
jo
inc
mov
scas
add
mov
and
pusha
loop
cs
pusha
clc
and
aas
mov
sbb
adc
dec
sub
rorb
xlat
adc
hlt
adc
lea
loope
out
xor
loopne
cmp
pop
jecxz
and
mov
andb
add
push
jbe
add
push
adc
pop
lods
add
aas
stos
loopne
mov
mov
xchg
adc
mov
es
into
mov
mov
shl
xor
push
loopne
jno
sti
dec
sub
andb
inc
jb
add
push
mov
inc
xor
and
daa
mov
and
test
inc
les
mov
addb
pop
sbb
ret
ficomps
shlb
pop
mov
loopne
popf
xor
or
mov
jo
sub
push
sbb
xchg
mov
mov
mov
loop
in
mov
sbb
mov
inc
jge
mov
pusha
mov
mov
jmp
pop
mov
sbb
pop
mov
xor
fisubs
add
mov
lds
dec
imul
inc
outsl
or
inc
pop
mov
loopne
jle
arpl
ljmp
push
cmp
cmp
es
jnp
mov
cli
inc
push
mov
jbe
push
js
cmp
rolb
fucomip
movsl
testb
inc
fisttpll
mov
add
and
add
cli
ds
or
add
cmpb
sbb
loopne
xchg
jb
mov
repz
add
rcl
addl
and
int3
frstor
adc
push
pusha
mov
and
cmpl
stc
rorb
loop
mov
rclb
inc
jmp
pop
jge
pusha
addb
sub
mov
pusha
pusha
movsb
and
push
add
mov
shlb
inc
shlb
mov
xlat
imul
inc
push
add
mov
mov
lock
inc
stos
cwtl
rol
push
shlb
jl
push
and
xor
mov
or
shr
cmp
insl
or
pop
scas
mov
cmpl
jp
pop
cmp
loopne
xor
inc
dec
and
std
sahf
icebp
push
outsl
pop
aas
mov
mov
mov
stos
add
xchg
or
cmp
mov
sbb
mov
loopne
adc
daa
in
addb
std
int3
jg
and
test
scas
and
mov
sub
mov
xor
pusha
mov
ret
sub
or
aad
add
pop
and
nop
aas
pop
in
push
testl
xchg
mov
sahf
push
or
and
std
out
jecxz
movsb
and
stos
add
rolb
int
mov
arpl
add
out
shrb
scas
and
outsb
arpl
push
pcmpeqw
sbb
cmp
arpl
push
mov
xor
int3
lock
xor
stos
inc
rclb
pusha
add
rcr
popa
out
mov
or
mov
mov
pusha
xchg
pop
push
mov
mov
dec
xchg
pop
pop
fiadds
pop
xchg
pushf
neg
push
mov
loopne
andb
mov
addb
test
inc
xor
hlt
cld
xor
cmp
repz
adc
pusha
and
add
ss
fistpl
sbb
loop
popa
scas
or
pusha
lds
test
aas
xchg
and
addr16
leave
pop
repnz
stc
ret
jecxz
and
icebp
shll
inc
mov
ja
inc
loopne
fisubs
add
add
lret
xor
inc
shl
jmp
dec
push
in
loopne
aad
sbb
pusha
mov
andb
iret
pop
ficoml
xchg
mov
mov
in
push
pop
mov
repnz
or
in
ret
mov
inc
fisubl
and
insb
mov
bound
inc
jbe
dec
lock
fabs
xlat
jmp
push
test
pusha
inc
scas
mov
push
mov
and
adc
or
mov
movsbl
fcmovbe
add
insl
pop
adc
jecxz
ds
and
addb
sahf
jge
jp
cli
push
jge
adc
add
add
loopne
imul
xor
mov
mov
dec
aam
fcom
lock
cmp
add
loopne
les
inc
mov
shl
enter
subb
pop
inc
aad
cmp
sbb
inc
pusha
add
nop
or
enter
add
pop
mov
inc
pusha
cmpsl
dec
jne
inc
sbb
daa
in
jp
cwtl
scas
and
fistpll
inc
test
and
push
aas
mov
into
cld
mov
push
pop
push
sti
in
xor
and
pusha
arpl
pop
stos
loopne
xor
inc
add
adc
rclb
jae
addb
rolb
loopne
pop
and
and
lret
mov
in
jno
es
push
test
pusha
jbe
mov
or
xchg
sub
or
xchg
sahf
movsb
loopne
mov
pusha
mov
ret
adc
popa
ljmp
or
sbbl
and
sahf
add
loopne
enter
loop
xchg
add
and
inc
or
adc
scas
shlb
shl
adcl
imul
sbb
add
sbb
adc
mov
push
inc
lret
sbb
jmp
or
add
loopne
pop
mov
loopne
fwait
lahf
dec
inc
mov
das
popa
enter
inc
andb
andb
sub
mov
popf
inc
mov
jb
cwtl
bound
xchg
pop
shl
cltd
std
mov
mov
adc
push
loopne
loop
call
fisubs
inc
inc
test
dec
scas
loopne
dec
loop
enter
lods
repnz
out
addb
mov
push
sbb
into
push
lds
pop
mov
sub
inc
sbb
xchg
shll
xchg
mov
jl
dec
xchg
fidivrl
pop
sarb
fs
or
jns
xor
test
rcrb
call
add
or
rolb
add
mov
sub
ss
pop
or
xchg
add
loopne
sahf
cmp
addb
mov
lods
js
into
aad
js
mov
mov
dec
and
aas
fisttpl
sbb
loop
in
add
lea
add
in
mov
imul
dec
add
lret
and
je
lret
and
adc
inc
push
pop
push
add
cmp
inc
aad
and
xor
xchg
mov
xor
push
inc
enter
pusha
jbe
or
sahf
test
loopne
mov
pusha
dec
idivb
cmp
loopne
mov
pop
pop
mov
mov
lcall
rol
ja
jecxz
mov
push
jmp
gs
dec
jbe
sub
pop
push
adc
or
add
pusha
lds
sub
push
inc
cmp
loopne
sbb
orb
and
idiv
or
adcb
pop
xor
jmp
ljmp
out
fs
adc
mov
ja
pop
push
and
fiaddl
pusha
ret
xor
lods
movsl
sbb
and
popa
push
addb
in
rcl
fistl
loopne
inc
int
push
add
adc
mov
dec
je
dec
jb
and
scas
sbb
inc
into
push
shl
repz
push
push
incb
shlb
loope
into
cmpsl
out
jmp
mov
cmp
mov
pop
mov
and
mov
or
inc
xchg
mov
push
aas
sub
cmpsl
clc
mov
in
inc
out
sahf
outsl
loope
mov
or
adc
inc
push
test
popa
js
push
cmp
leave
pop
into
insb
xchg
push
dec
lea
cli
jns
aaa
fwait
cmpsb
mov
mov
add
push
pushf
testb
ror
sbb
loopne
cmp
popa
jo
dec
adc
and
add
adcl
rolb
and
add
lock
mov
mov
mov
pop
and
loop
ds
andb
jmp
fstps
and
inc
fisttpll
push
fstpl
adc
sub
mov
mov
lock
sub
mov
and
pop
out
pop
lfs
sub
es
xorb
loopne,pn
sahf
movsl
cwtl
push
mov
push
aas
push
sbb
lcall
push
dec
aad
and
popa
mov
hlt
inc
sbb
out
inc
sub
sahf
insb
imul
out
stos
add
arpl
add
adc
pop
in
dec
sub
mov
lcall
jle
xchg
dec
or
outsb
outsl
xor
add
rolb
mov
das
sub
and
ja
lods
mov
pusha
shlb
dec
and
pusha
sub
aam
stos
fmull
xor
shl
pop
outsb
std
jnp
mov
icebp
or
pusha
xchg
push
shlb
stos
inc
add
cmpsl
rolb
add
jle
fcompl
subb
mov
and
andb
loopne
fstpl
sub
cmp
pop
xchg
push
js
dec
movb
inc
pop
dec
dec
ds
in
pusha
lock
jle
imul
andb
jle
loope
adc
mov
loopne
scas
hlt
rcr
lods
mov
int3
mov
mov
cli
lahf
dec
loop
xor
jge
sub
and
add
loope
inc
mov
mov
pop
fcompl
mov
mov
mov
icebp
sbb
addb
inc
rolb
sahf
adc
repnz
mov
xchg
loopne
cmp
add
into
push
jle
arpl
popf
pop
fs
adc
push
sub
xorb
mov
and
push
imul
xor
negl
push
pusha
loopne
stc
pop
or
subb
shl
mov
xor
je
rclb
mov
add
xchg
fstp
push
stc
mov
lods
insl
movsb
loopne
or
xchg
push
shl
cmc
dec
jl
mov
pusha
and
adc
xchg
pop
dec
adc
mull
loopne
cmp
lock
pop
js
jp
mov
andl
pusha
push
fnsave
repz
pop
adc
xor
push
adc
cmp
dec
sbb
nop
outsl
xchg
jecxz
mov
dec
push
and
jae
pop
add
sub
or
pusha
pusha
jp
andb
add
and
add
and
pusha
pusha
cli
jp
mov
pusha
jle
dec
addb
jge
cmp
jecxz
mov
or
lret
aad
cwtl
shll
and
sahf
jmp
mov
rolb
ret
loopne
mov
sarb
lea
stc
sbb
clc
lea
fcmovne
mov
mov
aam
inc
and
and
lock
fbld
push
inc
es
inc
pop
mov
sbbl
rorl
and
icebp
daa
jmpw
cwtl
test
mov
andb
fsubs
add
decb
out
jg
adc
in
pop
mov
ret
push
push
mov
mov
out
push
jne
inc
loopne
cmp
andb
jb
xchg
add
mov
lret
xor
jae
rclb
mov
or
loopne
push
lea
sub
or
and
stos
add
xchg
js
mov
pusha
add
shl
inc
arpl
out
adc
add
shlb
push
xchg
sti
dec
inc
stos
loopne
xchg
std
inc
ja
jmp
or
shr
int3
inc
ljmp
adc
aam
or
sbb
nop
push
in
mov
pusha
or
cmc
push
cld
jg
icebp
fistl
js
in
cmpsl
push
add
mov
and
daa
push
lret
in
cmp
cmp
add
xchg
mov
and
sbbl
outsb
insl
mov
mov
sarl
test
inc
je
cmc
call
sbb
xor
mov
dec
popf
cmpsl
pop
sahf
xor
out
or
loopne
in
stos
mov
push
pusha
add
push
add
mov
mov
sbb
xchg
mov
pop
mov
mov
jl
ja
xchg
add
mov
das
dec
pop
sub
fimuls
add
pop
mov
push
into
pop
inc
jno
add
movl
xlat
ljmp
bound
test
ss
test
pop
push
decb
ja
sub
shr
ret
inc
and
sahf
loopne
test
jp
pop
mov
addb
shl
mov
add
push
nop
push
fnsetpm(287
push
and
aas
loop
add
ljmp
sbb
test
pusha
fwait
or
xor
dec
shlb
lahf
xor
ficoml
scas
mov
movsb
pusha
loopne
pusha
test
inc
jae
adc
inc
mov
ret
out
inc
lret
cld
push
xchg
hlt
and
pusha
sbb
call
ljmp
mov
push
lret
dec
sub
add
jecxz
call
sbb
lret
sub
lea
andb
andb
fidivs
xor
je
je
jnp
mov
mov
push
fsub
sub
sbbb
subl
inc
xchg
fcmove
adc
in
cs
inc
inc
push
repz
inc
out
fldenv
sub
add
ret
push
andb
in
int
inc
mov
repz
push
add
mov
jmp
lods
add
je
xlat
inc
setge
and
cmc
aas
ljmp
hlt
and
iret
cmc
xchg
data16
and
ja,pt
js
xor
imul
add
inc
inc
cli
stos
pusha
cmpb
mov
or
mov
fsubs
and
add
imul
test
cmpb
cmp
xchg
bound
pushf
mov
fnsave
loopne
loopne
mov
mov
mov
stc
imul
int3
fistpll
das
and
insl
inc
pop
pop
fadds
inc
std
mov
jb
pushf
lret
leave
jb
push
push
cmp
push
jge
pop
aaa
ja
mov
inc
push
mov
loopne
int
sub
and
mov
inc
add
cmpb
push
and
fdivrl
loop
push
gs
push
add
sbbb
aas
pop
mov
int3
push
fisttpl
xor
fisubrl
addr16
psubd
push
pusha
ljmp
ja
or
scas
test
mov
push
shl
and
cmp
adc
and
sbb
mov
out
aad
jmp
add
pusha
cs
loopne
xchg
daa
pop
and
push
sahf
jb
ret
ds
mov
cmpsb
pusha
sarb
adc
movb
idivl
loop
loop
loopne
mov
and
rclb
pusha
and
sarb
mov
and
fistpll
add
mov
push
gs
or
sarb
push
outsb
mov
jns
inc
and
fs
pusha
mov
and
xor
fiadds
pop
das
fists
mov
mov
leave
iret
stos
shl
cmp
inc
and
sub
insl
outsl
fld
pop
pop
test
shlb
inc
and
shl
add
je
test
add
push
mov
push
jne
lcall
les
adcl
mov
inc
test
rclb
sbb
ja
pusha
mov
and
pop
fbld
sub
cmp
pop
jecxz
andb
andb
inc
xor
fwait
ss
adc
inc
scas
lret
lods
mov
mov
loopne
test
pop
and
and
enter
add
icebp
scas
mov
mov
push
test
dec
arpl
outsl
in
shlb
inc
rorb
cmp
and
xor
dec
fisubrl
mov
push
or
andb
mov
xor
sub
jno
lahf
jge
and
loopne
fldl2e
mov
jb
jmp
loopne
fcomps
out
and
lods
cmp
xor
loop
das
jge
out
sbb
dec
and
andb
in
xchg
es
rcrb
adc
mov
add
mov
lea
push
out
add
mov
out
cmc
jmp
adc
sbb
test
loopne
adc
jmp
mov
pop
push
and
sbb
cmp
jg
inc
dec
int3
mov
loopne
das
adc
jnp
loope
push
addb
pop
and
mov
add
and
out
mov
inc
mov
and
mov
sub
push
into
sti
pop
pop
push
xor
ljmp
add
rcrl
icebp
dec
push
rep
cmpsb
inc
pusha
out
addb
mov
adc
pop
jns
into
cmc
inc
enter
ss
xorl
lods
jnp
loope
cmp
mov
andb
testb
mov
fisttpll
or
andb
loopne
iret
cmp
sti
mov
mov
inc
adc
lea
mov
inc
sbb
inc
addb
mov
mov
out
or
popf
dec
xor
jno
aam
push
sbb
out
call
out
inc
mov
pop
sahf
jg
pop
cltd
rolb
andb
fisttps
dec
out
lods
pop
jnp
popl
pusha
rcrb
or
mov
call
iret
add
pusha
nop
push
mov
jecxz
mov
pop
lahf
mov
mov
inc
stos
and
jle
xchg
xor
mov
movsl
mov
inc
pushf
push
inc
and
pusha
sbbb
rolb
sub
subb
imul
loopne
sub
xchg
dec
adc
in
xchg
clc
mov
lock
rclb
into
inc
add
loop
xchg
fwait
mov
rcl
pop
push
mov
cmpsl
jecxz
jle
pop
cmp
push
add
outsl
inc
jnp
lods
addb
xorl
sub
mov
jle
inc
xorb
jne
jecxz
xor
fst
ja
inc
ret
cmp
mov
add
shr
mov
stos
mov
fincstp
push
mov
or
xchg
jno
mov
push
out
adc
jns
pop
pop
xor
icebp
adc
movsl
iret
mov
dec
stos
jge
inc
pusha
cld
popf
mov
mov
add
xor
xor
push
addb
aad
pop
cmpsb
pusha
and
cmp
jp
pop
mov
mov
mov
cmp
in
insb
xlat
sbb
testb
push
mov
out
loopne
pop
dec
stos
and
rclb
out
push
and
cmpsb
and
aam
shr
xchg
insb
cld
movsb
inc
addb
insl
ret
inc
mov
mov
imul
pop
shl
push
add
jo
lahf
cmp
lock
mov
je
jmp
ret
pop
pushf
adc
pusha
and
stos
add
fwait
nop
sbb
jns
pusha
inc
xchg
xchg
pusha
outsb
jg
or
add
jle
jo
lods
inc
cmp
or
xlat
aaa
pop
inc
ret
es
nop
adc
vcvtsi2ssl
mov
dec
add
inc
shl
xor
cwtl
pushf
test
xor
in
xchg
clc
sub
shlb
and
imul
popf
sbb
sub
andb
add
aam
mov
mov
out
ret
inc
mov
ljmp
and
jae
icebp
in
fdiv
push
mov
or
test
and
sbb
add
or
push
test
imulb
mov
adc
pop
pop
sbb
mov
dec
nop
jnp
fnstenv
das
inc
jno
add
inc
stc
lds
xor
jne
dec
sbb
in
int3
push
add
dec
fcomps
pop
mov
add
pushf
clc
jne
sub
xchg
fbld
loopne
int
pusha
pop
bnd
loopne
pushf
xchg
cmp
add
jmp
and
ret
ret
add
push
mov
pusha
mov
in
jno
int
popa
test
add
inc
xacquire
addb
sbb
xchg
fiaddl
mov
mov
xlat
andb
addb
pop
inc
fsubs
cmp
mov
inc
out
dec
push
pop
data16
jge
mov
or
xorb
pusha
and
xchg
inc
bound
daa
fcomps
sub
cltd
push
and
adcb
push
xchg
call
pusha
cmc
xchg
cmp
loopne
faddp
loope
cmc
sub
pusha
cmp
xchg
or
xor
bswap
cmp
add
inc
ljmp
adc
push
mov
shr
sbb
push
push
xor
test
xor
lret
fdivrs
lcall
loopne
or
add
xor
xchg
mov
sahf
std
arpl
movsl
into
mov
mov
or
add
out
setle
pop
dec
or
push
js
andb
ror
sbb
jle
xchg
mov
sbb
jecxz
mov
cmpsb
pusha
and
es
pusha
ja
push
aad
insl
add
add
scas
inc
loopne
andb
loop
pop
outsl
rcrl
addr16
andb
and
hlt
add
add
dec
das
fmull
sbb
xor
pusha
cld
sahf
sbb
popf
and
xor
xor
pop
pop
mov
loopne
fs
loopne
add
inc
push
xlat
mov
add
lahf
test
cmp
popf
cmp
fs
add
mov
mov
loop
xchg
and
xchg
jmp
and
insl
sbb
shrb
loope
std
pop
je
pop
enter
lods
push
cwtl
add
loopne
shrb
add
fsts
popf
imul
pop
addr16
add
pusha
and
sub
scas
sarb
mov
test
add
jae
sbb
inc
inc
sbb
leavew
mov
lds
sub
cld
shll
sub
mov
les
mov
mov
push
pusha
pusha
mov
add
loopne
call
xchg
inc
stc
dec
repz
imul
shlb
jp
jl
xchg
mov
mov
popf
lods
rol
add
cld
sbb
inc
inc
mov
pusha
adc
movsb
shlb
adc
jae
int3
sbb
rcrl
clc
pop
jne
in
jge
lods
addb
cmp
jmp
and
push
leave
push
pop
cmpsl
imul
inc
push
push
out
mov
fisttpll
shl
add
loopne
pop
push
and
fildll
and
add
xchg
out
popa
repz
push
in
arpl
ss
out
lock
and
mov
pop
and
xchg
lods
pusha
add
mov
sbb
addb
mov
inc
mov
rorb
cmp
mov
pusha
leave
cmp
xor
lods
mov
fisttpl
and
pop
insl
enter
and
shlb
outsl
pop
push
arpl
lahf
mov
add
and
movsb
shlb
std
rorb
rol
cmpsl
sahf
fisubrl
pop
cld
lret
icebp
loop
and
orl
fcoms
pop
loop
push
and
fiaddl
mov
ja
add
push
ficoms
sbb
adc
lea
add
lret
rolb
inc
pop
push
iret
mov
test
and
add
sti
mov
cmp
jmp
loopne
push
popf
scas
andb
addl
insb
adc
pusha
or
and
scas
outsl
dec
xlat
aas
insl
and
mov
aaa
mov
cmp
inc
add
mov
data16
stos
ror
aas
loopne
push
shr
jp
lahf
icebp
xchg
mov
flds
cmpsl
xor
aad
dec
mov
and
pop
xor
shl
mov
adc
dec
imul
push
shll
cmpsb
loopne
nop
test
pusha
loopne
pop
mov
pusha
jecxz
push
push
ret
mov
mov
andl
adc
clc
push
mov
mov
scas
rcrb
fisubs
shl
dec
fiadds
cltd
es
movsl
out
sarb
lea
mov
nop
in
push
inc
cmp
adc
inc
cmpsb
mov
mov
add
ja
cmp
mov
scas
push
push
or
mov
les
andb
mov
lahf
inc
push
fistps
pusha
pusha
stos
inc
loopne
icebp
lds
movsb
loopne
inc
std
dec
or
test
ret
pop
xor
pop
push
in
in
int
inc
mov
fucom
mov
pop
and
pusha
and
loopne
sbb
mov
sub
loopne
add
es
rcrb
shlb
jecxz
ret
lcall
scas
and
fwait
mov
es
adcb
xchg
and
add
pop
sub
inc
pop
jb
dec
loope
loopne
loope
sub
pusha
adc
add
push
test
pusha
xorb
adc
sarl
xchg
outsl
inc
cld
loop
pusha
pusha
cmc
jb
add
mov
xor
andb
and
lret
iret
sub
icebp
popf
xor
mov
dec
lret
push
popf
dec
aaa
nop
lds
pusha
loopne
faddl
add
clc
xchg
int3
adc
cmpsl
push
sbb
mov
rol
push
and
inc
xchg
pop
pushf
xchg
pop
mov
dec
test
and
andb
fsts
mov
cld
pop
sbb
cmp
and
loopne
jae
dec
dec
dec
inc
push
arpl
cs
and
xchg
mov
push
and
jge
pop
mov
push
pop
jmp
dec
mov
jmp
rolb
sub
mov
dec
sub
sarb
andb
shlb
add
fistpl
loopne
adcl
rolb
imul
aad
add
inc
push
pop
shr
mov
add
mov
pusha
shr
mov
sub
dec
shlb
adc
andb
adcb
inc
inc
or
adc
inc
shlb
xchg
pop
test
add
pusha
idivl
pusha
dec
inc
mov
lods
push
leave
cmp
loopne
xor
in
or
and
inc
pusha
lahf
and
inc
movsl
notl
arpl
je
cmp
ja
or
cwtl
aam
pop
imul
pusha
jle
fstp
jne
enter
test
adcb
add
outsb
das
cmp
mov
dec
jle
outsl
mov
lock
and
xchg
into
adc
mov
push
mov
mov
and
sbb
push
test
add
inc
lret
xchg
ficompl
stc
dec
dec
orl
iret
pop
push
mov
inc
out
dec
test
sub
sahf
inc
jecxz
shlb
xor
sub
and
aad
push
and
inc
dec
dec
dec
jg
iret
and
sbbb
push
mov
jmp
jg
stos
xor
fsubs
mov
inc
and
out
shrl
push
shl
mov
jno
xchg
stc
jno
addb
jno
cli
enter
sbb
loopne
pop
jnp
loopne
into
sub
lea
xchg
or
mov
sub
rorb
pusha
and
and
int
jnp
mov
jmp
arpl
aad
cmp
aad
inc
and
push
aam
clc
xchg
rol
and
shl
xchg
lcall
add
xchg
dec
cmc
js
push
lds
xchg
int
pop
cmpsl
xchg
movsb
andb
and
mov
xchg
jae
pusha
orb
mov
inc
and
cmp
pusha
sbbb
pop
iret
mov
jae
fbstp
mov
add
loop
mov
inc
xor
loopne
imull
and
pusha
cli
test
mov
clc
mov
and
fsubl
and
mov
pusha
push
addl
sub
mov
loopne
pop
inc
cli
mov
add
xlat
xor
les
xchg
mov
addb
outsb
test
mov
inc
fs
inc
rol
xor
movsb
add
pop
push
popa
hlt
outsl
xchg
mov
repz
and
jl
inc
out
sbb
xor
xchg
mov
mov
je
or
imul
out
lods
or
loopne
gs
add
mov
mov
sbb
addb
scas
and
xor
push
mov
mov
mov
rorl
add
inc
xchg
push
push
faddl
and
mov
pop
sub
add
jne
xchg
push
shlb
mov
jno
mov
xor
xor
inc
inc
xor
addb
scas
addb
mov
cli
jo
dec
into
xor
cwtl
jecxz
pop
es
gs
mov
neg
dec
lods
in
iret
mov
jns
add
or
and
and
stos
and
mov
out
or
pusha
shll
repnz
jecxz
popa
xor
pushf
xacquire
push
sub
addb
ret
fdivrl
pop
pop
js
jnp
addr16
lcall
push
loopne
lahf
sub
pusha
lret
fisubrs
sbb
inc
xor
dec
jnp
and
cmpsb
mov
icebp
add
and
dec
jbe
loopne
sub
mov
rcll
lods
aas
js
nop
add
and
and
cmp
sti
push
ss
adc
stos
adc
cmp
shrl
pusha
and
sbb
dec
lret
sbbb
insb
push
loop
je
aad
incl
xchg
test
xchg
jo
out
fs
push
fdiv
add
jns
call
loope
mov
xchg
mov
loop
jb
xor
mov
andb
dec
or
mov
add
jb
add
clc
inc
fnsave
jg
or
or
inc
fwait
lcall
rolb
mov
stc
mov
jmp
sti
push
mov
adc
les
inc
pusha
in
out
mov
bnd
mov
mov
add
xchg
popa
mov
push
push
pusha
pop
mov
inc
inc
adc
xor
aad
in
sub
jmp
push
cmc
add
icebp
in
push
pusha
cld
or
loop
or
cs
and
pop
xchg
ss
lock
pop
out
addb
dec
jle
lret
int3
cmp
push
shrb
inc
inc
push
rcr
pop
inc
add
cmpb
and
add
loopne
outsb
sti
in
mov
and
pusha
sbb
or
rolb
mov
loopne
mov
dec
xchg
and
mov
xor
xchg
shrb
push
iret
xchg
push
shlb
and
xchg
push
mov
loopne
stc
pop
pop
addb
lods
loopne
in
mov
pop
clc
aas
cmpsb
and
stc
sbb
sbb
shlb
test
jp
ret
addb
add
inc
and
add
push
pop
fcoml
aaa
aaa
inc
push
lcall
pop
lret
inc
test
subb
xor
lcall
loopne
rcl
imulb
mov
xchg
addl
lahf
daa
clc
dec
cltd
hlt
in
mov
loopne
or
loopne
loopne
mov
mov
addb
push
mov
or
ret
orb
ljmp
sbb
cmp
pop
hlt
cmpsl
sbb
lea
sarb
xor
loope
leave
pusha
insl
xchg
pop
mov
mov
jmp
fxch
ja
mov
cmp
add
mov
and
loopne
pushf
and
jns
fcoms
pop
pop
int3
mov
mov
pop
mov
xlat
mov
in
jnp
ficompl
movsl
fstps
mov
out
push
ss
xchg
mov
int
mov
adcb
sbb
fs
sub
add
add
xchg
testl
test
and
insb
test
inc
xchg
and
push
bound
and
and
stos
out
andb
xor
es
lods
shl
sarb
xlat
in
add
arpl
add
addb
pushw
push
mov
scas
pop
mov
in
push
rclb
mov
repz
xchg
in
jl
cmp
cmp
adc
loope
rolb
mov
pop
add
loopne
xor
inc
mov
pop
lahf
jne
and
jno
xor
pop
mov
fdivs
push
movsb
mov
pop
nop
or
repnz
out
out
xlat
jl
or
mov
mov
jle
rol
or
andb
imul
cmp
in
mov
sbb
add
dec
in
push
inc
shl
repz
add
inc
jo
mov
sub
and
add
mov
add
sub
imul
stc
cmp
fs
mov
pusha
inc
jb
fdiv
jb
fists
mov
add
outsl
fiaddl
mov
mov
inc
pop
mov
imulb
inc
inc
cmpsl
fwait
clc
mov
cwtl
push
shl
jecxz
cltd
cmpsl
rcrl
inc
inc
push
mov
mov
cmp
mov
pusha
lea
adc
and
dec
ffree
imul
mov
and
adcb
pop
jle
push
imul
ljmp
xchg
inc
insl
in
cwtl
or
repnz
lret
mov
mov
cmp
jmp
jp
pop
push
pop
nop
test
mov
xchg
inc
ret
lahf
pusha
dec
dec
sub
xor
inc
xor
rorb
test
loopne
icebp
andb
dec
sub
adc
fisttpll
and
popa
inc
call
andb
into
push
add
nop
inc
jecxz
or
loopne
loopne
rclb
push
or
orb
cmp
inc
nop
setnp
pusha
sub
lahf
cltd
sbb
sbb
in
lahf
aaa
jae
in
cmp
in
push
andb
loopne
imul
mov
push
mov
popa
lods
xchg
es
shll
imul
mov
jmp
test
inc
sbb
xlat
jnp
lret
xchg
jp
or
add
pmulhw
andb
pop
mov
jns
aaa
rclb
stc
mov
add
mov
xchg
out
cld
rorl
inc
push
dec
mov
dec
push
pop
lcall
add
add
adc
hlt
mov
leave
mov
hlt
pop
mov
jnp
loop
mov
pusha
incl
movsl
lods
in
cwtl
mov
loop
out
add
mov
bound
sbbl
mov
and
mov
inc
dec
jbe
sarb
outsb
mov
mov
mov
in
insl
sti
dec
jl
cmp
inc
sub
lret
out
mov
fwait
in
js
test
clc
jb
mov
mov
mov
cld
icebp
jle
bnd
lods
push
in
hlt
lds
inc
add
inc
nop
test
pop
insb
iret
pop
sub
jmp
dec
mov
mov
scas
inc
shlb
loopne
xor
xor
inc
mov
addb
ror
pusha
mov
loope
push
lods
and
aad
jg
cmp
add
push
mov
sbb
call
gs
inc
mov
inc
push
adc
in
push
leave
jno
add
lret
cmp
push
es
sbb
pop
icebp
lds
add
jae
cmp
stos
and
andb
cmpsl
xchg
fimull
and
loopne
sahf
jecxz
push
insl
sbb
pusha
test
rolb
in
sbb
mov
es
les
loopne
fwait
jp
out
dec
xor
dec
xor
mov
int
adcl
insl
std
jnp
inc
cli
arpl
movsl
sbb
insb
inc
pop
mov
ss
inc
pop
imul
rol
mov
mov
cmp
add
pop
add
sbb
push
in
adc
xchg
inc
mov
mov
sahf
shll
call
cmp
xchg
push
jp
mov
xor
inc
movsl
in
inc
popf
adcl
les
add
and
sub
adc
add
imul
add
sti
fisubl
mov
mov
cli
push
xor
arpl
lret
hlt
push
sbb
push
das
je
pop
ja
add
adcb
mov
adc
bound
in
inc
add
xor
jle
mov
or
std
dec
lahf
xchg
icebp
aam
sub
xor
rolb
sbb
dec
lock
rolb
inc
ficoml
xor
cmp
xor
call
inc
scas
stos
mov
aaa
out
adc
lods
add
out
fimull
cmp
rolb
flds
sbb
mov
and
inc
jbe
dec
add
inc
cwtl
or
je
push
ljmp
pusha
loopne
pop
jne
push
fwait
push
out
andb
inc
and
shrb
rcll
add
loope
shll
stos
loopne
outsb
cmpsl
repz
enter
cltd
fsubs
and
addb
xchg
dec
fcomi
adc
dec
loopne
outsb
dec
leave
addb
outsb
and
adc
mov
cmp
xorb
push
fs
or
gs
rolb
push
xor
imul
je
xchg
adc
mov
sbb
push
fidivrl
and
and
negl
fsubrp
adc
pop
ss
push
xor
popa
jl
lret
push
insb
insb
and
and
fildll
push
mov
pusha
inc
mov
mov
gs
roll
pop
adc
das
mov
mov
cmp
cmp
push
ds
ss
int3
xchg
cmp
add
or
mov
nop
push
scas
loopne
stc
js
mov
sub
sub
cmp
mov
push
adc
inc
adc
cmp
movsl
or
adc
daa
sub
pusha
ja
xchg
loopne
ja
sub
mov
add
sub
ja
in
xor
addb
loopne
push
mov
pusha
inc
pop
add
fs
fisubrl
and
mov
and
fdivrl
jmp
repnz
inc
adcb
je
test
inc
mov
ds
jne
adc
inc
pop
cmp
sti
add
dec
cmpl
sub
add
xorl
pop
daa
aas
sbb
int3
das
xlat
lods
loopne
out
stos
add
cwtl
pop
shrl
notb
rclb
inc
pop
pop
cmp
mov
andb
shlb
frstor
add
mov
sahf
icebp
mov
mov
or
xchg
pop
cmp
xchg
out
xchg
addl
test
cmpsb
loopne
aaa
clc
or
pusha
mov
and
inc
loopne
jo
fisubrs
add
lea
or
jo
data16
dec
sub
inc
sbb
cli
push
sarb
mov
mov
and
add
sbb
inc
loopne
mov
cmpsl
cli
sub
arpl
inc
shlb
imul
fmul
and
movsb
inc
mov
xchg
lret
jns
aaa
dec
jg
inc
std
stos
inc
mov
test
pop
bound
iret
cmp
lret
or
and
mov
and
loope
fwait
push
inc
and
lahf
cmp
dec
insb
dec
outsl
jl
cmp
or
pusha
nop
cmp
out
out
pop
xchg
daa
mov
mov
fbld
shl
mov
dec
adc
and
pusha
insb
adc
faddp
mov
aas
add
mov
and
lods
scas
movsl
cmc
ss
je
inc
test
cmp
loopne
ffreep
les
push
inc
nop
or
xor
rorb
movsl
jb
daa
xor
lods
add
jg
addb
shr
and
repnz
outsl
in
mov
cmpsb
mov
mov
ror
outsb
int3
mov
cmp
rorb
add
shlb
rorl
icebp
pop
je
andb
loopne
adc
mov
loop,pt
inc
and
mov
mov
int
ffree
iret
mov
push
pusha
inc
sub
in
and
loopne
out
shl
and
ret
aaa
nop
shr
or
sbbb
shr
mov
mov
mov
add
pop
push
xor
cmc
and
push
mov
jbe
test
into
pop
bound
pop
sub
mov
and
mov
addb
xor
sbb
mov
out
ret
int3
push
dec
ret
lahf
clc
xor
out
loopne,pn
xor
scas
call
mov
adc
push
loopne
xchg
loop
clc
pop
adc
pop
stos
add
adc
lods
loopne
push
icebp
mov
sub
and
or
jge
xorl
mov
rolb
test
rorl
in
mov
addr16
cmp
fmulp
pop
xor
xchg
xlat
pop
int
sub
and
and
inc
das
push
pop
mov
mov
mov
and
aaa
in
push
and
int
mov
jmp
add
mov
sub
and
insb
rorl
lea
mov
pusha
addb
and
arpl
outsb
cmp
sbb
shl
sbb
rolb
bswap
xor
js
pop
lea
and
movsl
add
shlb
inc
addb
mov
lds
rolb
test
inc
loopne
lret
andl
push
mov
outsb
add
sbb
shr
inc
inc
in
add
andb
imul
xchg
mov
or
loopne
imul
std
push
cmpsb
and
push
in
aaa
out
cmp
xor
cmp
sub
pop
loope
sbb
jb
sub
popf
stc
push
loopne
or
push
test
rcr
cli
xchg
add
push
rcl
jecxz
out
and
loopne
add
sti
std
sti
push
addb
sarb
shlb
mov
fs
sub
sarb
mov
pop
push
push
rol
pop
jmp
mov
rolb
dec
mov
add
push
sub
lods
mov
popa
rolb
addb
loopne
scas
add
push
mov
mov
stos
sub
lods
and
or
out
add
dec
pop
not
mov
xor
adc
ja
jnp
cmp
inc
inc
test
and
fstpl
loopne
fisubs
mov
sahf
push
aaa
jp
loope
sub
loop
pop
jmp
mov
bound
xchg
push
bnd
inc
test
add
pusha
shll
dec
cmp
pusha
add
jnp,pt
rorb
aad
adc
mov
rorl
pusha
sbb
enter
xchg
jg
add
cltd
and
inc
xchg
stc
ds
out
ret
lret
inc
cmp
inc
jo
pop
ret
push
and
add
hlt
mov
pop
jb
mov
in
dec
jp,pt
push
cmpsl
stc
xchg
hlt
repz
mov
out
dec
mov
roll
and
sbb
adc
cli
sub
mov
mov
gs
ds
dec
jno
and
loop
loopne
inc
push
inc
pusha
fnstenv
jns
add
ljmp
call
pusha
mov
or
dec
inc
push
leave
xor
sub
mov
add
out
sbb
push
test
rcrb
mov
and
jno
aaa
mov
xlat
add
inc
adc
push
adc
pop
into
repz
pusha
into
lds
pop
pop
pop
and
aad
add
icebp
insb
insl
lahf
insl
imul
jo
inc
add
mov
daa
fmul
xchg
mov
movsb
mov
sarb
lock
mov
push
dec
cmc
adc
pop
inc
cwtl
mov
insb
imulb
test
pusha
and
subl
xor
pop
mov
xchg
enter
mov
jne
inc
loopne
xor
loopne
icebp
mov
ret
shlb
mov
dec
clc
xor
popf
dec
ja
push
pusha
and
adc
and
pop
xchg
mov
mov
pusha
loopne
aad
sbb
dec
jb
push
xchg
xchg
sub
loopne
add
mov
adc
mov
xchg
cmc
cltd
push
mov
out
xchg
aas
shr
test
loopne
shll
pusha
rcl
js
lahf
gs
or
add
add
cld
insl
andb
test
inc
inc
pop
std
add
add
hlt
sub
pusha
pop
push
inc
jne
mov
jg
cvtpi2ps
inc
xorl
ret
sub
shlb
jo,pt
sbb
stos
sbb
in
loope
add
inc
sbb
and
cli
push
imul
loope
rcrl
cmpb
loope
lock
inc
pop
aaa
rolb
loopne
scas
mov
add
push
loopne
clc
les
mov
cmp
mov
or
mov
fmull
and
mov
jns
push
fstl
cwtl
pop
dec
and
add
add
add
inc
out
mov
shlb
mov
jns
jge
cmc
add
add
push
lods
mov
dec
cmc
xchg
das
aas
das
push
rcrl
adc
nopl
sub
shrb
sub
loopne
arpl
xor
mov
mov
int3
sub
clc
mov
das
mov
pop
leave
mov
lea
and
int3
jbe
inc
popf
fistl
xchg
rclb
orl
ljmp
mov
jo
sub
sbbb
fmulp
fimull
add
xlat
pop
clc
stc
mov
and
mov
sub
mov
cwtl
movsl
in
js
gs
lcall
push
xchg
add
or
and
sbb
ljmp
insb
jg
sbb
dec
xor
cmove
lock
cld
into
mov
xchg
mov
bound
mov
mov
aaa
aaa
into
push
gs
int
inc
pop
out
ds
push
push
outsl
scas
andb
rcll
clc
ja
mov
rolb
and
sti
cmp
andb
aaa
int3
sbb
aaa
sub
or
shrb
fmull
out
sahf
push
add
mov
or
mov
shlb
iret
fsubr
fcmovnu
cltd
out
add
mov
add
andb
jo
das
push
mov
and
repz
mov
pusha
xor
ds
adc
push
add
add
push
xchg
enter
pop
push
mov
fbstp
dec
les
bound
ret
out
adc
call
out
popf
jl
shl
pop
lcall
shlb
push
sub
push
cmp
or
inc
stos
and
decb
shlb
sub
inc
ds
loopne
push
addb
or
mov
sub
add
shrb
push
movsb
add
xorb
adc
or
loopne
add
stos
add
cwtl
out
ds
xchg
pmullw
int3
xor
out
rolb
sub
rep
ret
icebp
roll
in
int
loopne
push
addr16
push
out
mov
stc
cmp
repz
mov
jns
ret
jb
rorl
gs
daa
mov
mov
lret
cltd
sbb
loopne
pusha
add
adc
pusha
loopne
dec
dec
adc
jge
cltd
mov
cmp
mov
into
in
shlb
in
icebp
sbb
rolb
das
repz
test
addr16
idiv
es
and
pusha
and
mov
dec
inc
imulb
jmp
lea
sub
mov
out
out
push
test
fdivrp
adcw
push
add
xor
enter
shll
mov
push
mov
add
mov
pusha
inc
jge
xor
push
sbb
mov
cmp
les
cmpsb
loopne
cld
adc
pusha
add
jno
or
pusha
sbb
out
mov
ja
cwtl
mov
ror
shl
dec
fisubrl
dec
push
in
and
incb
inc
xor
push
ds
push
roll
lahf
stc
add
mov
leave
pop
xor
mov
ja
pop
mov
shrb
jns
pusha
mov
loopne
shlb
shrb
inc
pop
call
mov
out
push
lods
pusha
mov
roll
pusha
pusha
das
popa
nop
rcrb
addb
inc
inc
jae
test
mov
cmp
push
shlb
xor
lea
pusha
loopne
dec
adc
add
jnp
jl
mov
cli
pop
push
pop
adc
ret
dec
int3
cwtl
or
fimull
dec
and
and
pop
or
mov
mov
rcrb
jns
out
mov
mov
loopne
or
cmpsl
and
cmc
mov
les
sbb
push
mov
xor
sbb
rolb
inc
and
insb
dec
xor
ljmp
sub
aaa
popa
mov
testb
add
loopne
push
inc
add
mov
pusha
pop
fsubr
lcall
cmp
outsl
add
dec
lea
hlt
loopew
loopne
int
add
inc
fiadds
sahf
cwtl
loopne,pn
outsw
pop
ja
mov
bound
pop
mov
data16
aas
shll
jmp
jmp
test
stc
stc
sub
add
mov
scas
mov
rorl
pusha
xchg
int
xor
mov
test
pusha
jo
lock
mov
iret
cmpsb
add
pop
mov
shll
hlt
in
xchg
push
mov
ds
sub
jbe
xor
push
pusha
pusha
lahf
add
mov
cmpsb
shlb
aad
inc
lds
sahf
and
mov
push
mov
mov
inc
test
ret
loopne
jge
out
fcoms
outsl
aaa
test
add
lds
cmp
and
mov
mov
sahf
pop
dec
jmp
shrl
cmpsb
inc
mov
lret
xchg
mov
ficomps
mov
push
sti
xchg
dec
add
jns
mov
ljmp
inc
loopne
and
stos
shlb
sbb
addr16
loopne
pushl
adc
mov
or
pusha
out
push
xchg
jmp
adc
hlt
jne
imul
inc
cmp
cld
sub
inc
push
cmp
addb
or
push
or
sub
leave
bound
jns
mov
pop
cmc
gs
cmp
pusha
and
add
in
out
movsl
shr
aad
loopne
add
mov
xchg
sahf
mov
xchg
daa
roll
shlb
shlb
add
add
mov
stos
rolb
cmpb
popf
leave
loope
aad
adcl
sub
addb
andb
pusha
in
pop
jo
sbb
and
sbb
je
lea
je
push
arpl
add
pusha
dec
shlb
andb
pop
repz
sbb
in
dec
lock
mov
out
addr16
mov
loopne
jnp
push
repz
jb
xor
les
rolb
push
call
cmp
out
mov
jae
mov
jp
jns
mov
push
xchg
adc
pusha
pop
lods
loopne
mov
movsb
inc
adcb
in
cli
adc
outsl
leave
or
pusha
push
shlb
and
adc
insb
ret
mov
pop
adc
and
and
add
jmp
add
xchg
fidivl
add
push
inc
pop
sub
mov
in
loop
lahf
jmp
inc
mov
nop
jle
and
loopne
inc
sub
js
pop
int3
adc
pusha
enter
inc
xchg
inc
out
test
pusha
push
pop
mov
xchg
xlat
jno
push
dec
cmp
mov
and
lea
fdivl
loopne
imul
shll
add
mov
ret
jg
mov
loopne
dec
nop
inc
out
lcall
test
aad
inc
xchg
aad
pop
jnp
iret
cli
flds
and
adcl
push
mov
mov
xor
out
ljmp
push
das
push
rclb
mov
cmp
sbb
jge
imul
mov
rcrl
or
add
mov
add
data16
fildll
data16
lods
rol
mov
lret
loopne
push
shl
out
adc
sub
pusha
add
sub
loopne
and
or
pushf
mov
sub
lcall
pop
inc
repnz
aad
loopne
sbb
es
loopne
and
dec
mov
inc
addr16
lret
fwait
dec
mov
out
mov
into
push
lcall
inc
and
adc
mov
pushf
enter
mov
or
mov
add
xor
jne
xlat
decl
mov
loopne
sbb
jb
jnp
xchg
cltd
cmp
in
hlt
or
mov
pop
test
push
adc
dec
addr16
jl
xchg
pusha
in
push
add
fwait
adc
outsl
jge
fbld
in
or
insb
mov
test
mov
and
xchg
mov
xor
movsl
out
xor
add
jno
inc
cs
rolb
pop
sub
pop
aas
lds
scas
inc
xor
lahf
sbb
sub
dec
push
ret
loopne
add
lahf
mov
inc
filds
cwtl
pop
ljmp
std
and
xorb
dec
xor
addr16
xchg
test
add
or
add
pop
stos
pusha
add
cwtl
inc
pop
and
and
out
inc
lret
inc
or
out
aaa
or
orb
push
xchg
scas
addb
inc
mov
xorb
leave
mov
sbb
imul
loopne
xchg
ljmp
cli
sahf
push
inc
pusha
nop
incb
push
dec
and
scas
test
xchg
and
sbbb
mov
xchg
push
rorl
loopne
in
adc
rol
loopne
push
cwtl
cmc
or
inc
xchg
scas
shrl
cmp
dec
ret
add
lret
sarl
adc
loopne
dec
inc
or
pusha
mov
and
in
push
and
pop
pop
xchg
pop
pop
adc
loopne
roll
push
das
and
pop
fists
push
into
jnp
out
js
aad
mov
loopne
test
shlb
andb
aad
dec
insb
rclb
shlb
pop
xlat
test
andb
ds
shlb
addb
pusha
inc
repz
and
pusha
js
fwait
and
ret
sbb
pop
inc
or
add
or
and
mov
loop
leave
lcall
xor
and
dec
shrl
out
leave
cs
loopne
loopne
aam
ljmp
scas
enter
pusha
sub
into
sbb
mov
jbe
add
inc
xchg
mov
addl
sbb
addb
enter
mov
xchg
xor
addr16
add
and
pusha
aaa
xchg
inc
fldln2
sbb
mov
pop
adc
jl
mov
pop
jnp
inc
xchg
or
out
xor
push
inc
push
shlb
out
in
jb
or
pop
sub
pusha
jge
lods
inc
shlb
add
mov
pusha
and
outsl
shrl
and
mov
or
rorb
or
fisubrs
sar
pop
jae
or
xchg
or
adc
inc
in
sub
and
rorl
inc
orb
pusha
andl
in
push
jns
js
pusha
cmpb
adc
in
add
mov
cmp
out
int3
xchg
shll
xchg
fidivs
aas
sub
xorb
xchg
mov
test
dec
lods
pusha
loopne
push
inc
daa
jae
out
outsb
jmp
imul
jo
repnz
mov
addb
mov
pop
inc
mov
pusha
push
push
adc
insb
pop
cmp
ss
mov
and
add
cmc
dec
cmp
add
test
into
repz
out
sub
pusha
loopne
push
or
addb
inc
icebp
mov
ljmp
inc
lock
inc
add
nop
jbe
pop
push
pop
cmp
push
rolb
push
fimull
fadds
inc
loopne
fadd
mov
inc
inc
js
mov
lret
and
nop
pop
xor
fdivrs
movsl
mov
inc
js
xor
loope
inc
pusha
mov
pop
ljmp
sub
push
leave
or
sarb
fiaddl
or
inc
push
jl
add
jmp
imul
add
mov
ss
pop
push
xor
scas
popf
xchg
leave
stc
out
outsb
xor
sbb
andb
mov
inc
inc
inc
in
aad
iret
cmp
mov
mov
lcall
add
lret
jge
fisubrs
inc
mov
lods
add
mov
js
inc
in
pushf
mov
ss
dec
sbb
or
sbb
push
jecxz
aas
mov
in
scas
jg
dec
mov
inc
lahf
and
dec
adc
je
pusha
lods
sti
xor
mov
inc
repnz
and
lods
sbb
mov
mov
subb
in
and
inc
jbe
jecxz
dec
jns
inc
fnstsw
xor
mov
fisttpll
rorb
xchg
add
adcb
icebp
inc
mov
leave
dec
mov
lret
add
test
popf
in
add
and
pusha
pop
test
imul
loopne
cmp
add
add
add
andb
xor
loopne
or
or
jbe
into
push
int
std
dec
sarl
and
dec
inc
repz
pop
jp
lret
push
mov
rolb
scas
push
mov
add
ja
lods
mov
insl
ljmp
xor
fwait
rcrl
js
xchg
push
or
movsb
mov
mov
jae
cmp
cld
fiaddl
fisubl
arpl
xor
inc
inc
jge
mov
lret
xor
push
mov
cmpsl
inc
in
add
scas
adc
negb
fmull
add
or
and
add
mov
mov
and
push
dec
add
loopne
pop
out
xchg
gs
andb
ja
test
int3
cmp
sub
dec
daa
loop
in
pop
mov
loopne
shlb
jp
push
inc
lret
sbb
fiaddl
pop
arpl
shl
andl
loope
out
gs
pusha
cmp
and
std
fidivs
inc
loopne
stc
pop
cwtl
mov
test
and
jb
daa
aaa
call
mov
in
aam
mov
and
inc
mov
push
jg
or
cld
bound
pop
dec
nopl
lds
inc
inc
int
in
cli
xlat
sbb
dec
cmp
xchg
rclb
inc
push
jo
cwtl
inc
in
leave
dec
aad
das
dec
pop
mov
add
and
xchg
sahf
lds
pop
mov
imul
inc
loopne
fs
ds
cmpsb
inc
pusha
and
and
or
pusha
loopne
push
pop
adc
xchg
mov
cmp
and
and
in
and
pop
in
test
add
dec
xor
lret
pop
out
or
pusha
push
shl
cmp
and
xor
add
sarb
and
push
rep
mov
dec
mov
jle
lret
iret
sub
out
leave
cmp
enter
mov
xchg
sub
dec
sbb
loopne
xchg
mov
or
mov
jbe
pop
fs
andb
add
lea
aas
inc
inc
add
loopne
mov
and
sbbb
adc
add
inc
xchg
loopne
push
jecxz
movsl
pop
std
aaa
inc
aam
push
inc
inc
das
mov
push
add
cmp
loopne
in
shl
lds
add
shl
xchg
lcall
shrb
mov
fsub
iret
mov
popa
adc
add
xchg
mov
lcall
movsl
stos
pusha
andb
loopne
mov
shlb
lret
into
xchg
mov
jnp
adc
cmp
cmp
add
lds
mov
inc
adc
fwait
and
lds
mov
pusha
mov
int3
lahf
ret
mov
jne
add
inc
sbbb
inc
fidivrl
inc
mov
popa
or
int
mov
pop
arpl
xchg
leave
pusha
pop
repz
mov
inc
fldt
pusha
test
inc
pusha
sub
aas
aas
and
cmp
jecxz
nop
lret
out
mov
cmpsl
shr
sub
jbe
movsb
loopne
push
jo
lcall
mov
andb
pop
test
inc
cmp
jmp
stos
loopne
dec
add
and
adc
push
adc
mov
jecxz
push
adc
loopne
movsl
in
add
xchg
pusha
mov
aaa
cmc
inc
cmpl
xor
add
loopne
pop
xchg
inc
orl
push
lahf
mov
jmp
bound
in
fstl
xchg
dec
loope
adc
xchg
jo
loop
add
divl
dec
add
and
mov
mov
ds
mov
movsb
and
icebp
into
in
mov
test
xor
xchg
or
mov
imul
and
shlb
jg
dec
sub
and
add
ficomps
xchg
adc
mov
sub
adc
mov
mov
pop
push
nop
push
inc
sbbb
push
sub
add
loopne
cmp
pop
add
mov
add
lcall
pushf
nop
or
loop
push
inc
push
ljmp
scas
inc
pusha
out
mov
popf
popa
lods
pop
push
lret
push
inc
mov
iret
xlat
movsb
inc
adcb
push
mov
lods
xor
push
mov
pop
cmpsl
mov
pusha
or
lahf
les
and
and
pusha
pusha
mov
mov
cmp
ret
adc
les
xchg
gs
mov
bound
adc
fisubrl
rolb
cmp
outsb
popa
xor
dec
jle
sbb
or
pusha
aas
in
lods
mov
inc
jnp
xchg
std
mov
ficoml
ror
sbb
mov
dec
xlat
je
cli
dec
in
les
arpl
push
fs
jne
repnz
or
and
addl
inc
cltd
or
jge
sbb
push
pop
cli
cmp
add
jne
lods
sbb
sbb
jl
mov
pusha
push
inc
mov
inc
call
dec
inc
outsb
sbbl
outsb
and
das
ss
int3
mov
xor
add
popf
dec
and
dec
popa
pusha
pop
loope
aam
lods
cmp
jge
sbb
and
imul
or
inc
add
loop
and
xorb
push
test
cmp
popa
jp
dec
add
loopne
and
jge
mov
arpl
pusha
out
out
subl
mov
fmulp
fsubp
scas
fldl
adc
icebp
mov
mov
jecxz
das
and
mov
lea
sub
mov
mov
pusha
out
add
fcompl
ss
jecxz
push
add
dec
pop
xor
push
xlat
shlb
loop
add
dec
mov
mov
jbe
stos
add
pusha
mov
loopne
inc
inc
xor
sbb
ret
mov
lods
xchg
jnp
movups
mov
pop
cmp
add
roll
rorb
add
dec
pop
xchg
rol
lret
loop
inc
xorb
popf
add
shlb
lds
pop
repz
cmpsb
pusha
adc
js
gs
dec
fmull
shl
shlb
inc
dec
sub
xchg
fs
loopne
rcl
pop
xor
cmpsl
jae
rolb
add
jb
mov
loope
out
addr16
inc
cmp
lods
add
cmp
imul
not
xchg
sti
add
mov
sub
jg
stos
sbb
mov
lcall
outsb
sub
xchg
jge
int
dec
js
insb
mov
jmp
add
mov
pusha
inc
cli
std
pop
movsl
arpl
fldcw
add
fnstsw
pusha
cld
cmpsb
add
andb
jg
adc
cmpsl
imul
shlb
jne
jp
push
adc
fldenv
rolb
fisttpll
inc
add
jle
adc
lods
mov
fidivrs
jle
cmpsl
or
outsl
sbb
dec
sbb
mov
pop
loopne,pn
push
inc
push
dec
xor
fisttps
lret
out
mov
inc
mov
insb
pop
inc
pusha
inc
arpl
sbb
loopne
icebp
pop
cmpsb
rolb
fs
cmp
xchg
mov
hlt
jno
adc
cmc
and
fwait
sbb
mov
sbb
xchg
test
pop
dec
mov
test
inc
inc
inc
inc
and
inc
inc
and
mov
stc
cmp
mov
sbb
xchg
pop
hlt
in
xchg
and
ficoms
or
xor
rcrb
add
leave
loopne
or
pop
inc
aam
sahf
jnp
aaa
rorl
xchg
popa
jg
outsl
aad
inc
stc
sbb
inc
jae
add
and
inc
or
xor
pop
mov
fsubrp
lods
sbb
or
loopne
loopne
lods
loopne
add
add
cmp
and
and
mov
cmp
loopne
test
rcrb
cmp
enter
fbstp
ja
jno
jmp
push
xchg
dec
popa
xor
lea
and
adc
movb
add
mov
pusha
add
pusha
fistpll
int
inc
std
push
sbb
shlb
fwait
add
mov
push
in
filds
imul
push
add
shrb
sub
insl
lret
rep
clc
in
cmp
jne
inc
and
loopne
xor
and
daa
push
mov
and
pusha
rolb
cli
mov
add
bound
cmp
rcrb
xor
insl
push
mov
inc
rcl
pusha
mov
cmp
je
lock
stos
loopne
mov
fnsave
push
sti
and
dec
xchg
lcall
rol
clc
jb
pop
fnsave
jae
add
jae
fmul
xor
roll
cmp
mov
loopne
inc
xchg
jge
or
aaa
stos
and
jmp
pop
cmpsb
pusha
sar
fsubl
aam
andb
adc
adc
mul
inc
push
push
adc
push
jo
cmp
mov
rolb
andb
out
push
rclb
mov
icebp
or
pushf
push
enter
add
andb
rcl
mov
pushf
je
rolb
sub
xchg
mov
std
adc
cmp
shrl
in
call
adc
pop
andb
mov
inc
fistpl
jns
adc
andb
adc
add
inc
cmp
mov
mov
jecxz
cltd
or
dec
adc
outsb
punpckhdq
pop
inc
and
ljmp
and
shl
and
add
test
add
pop
call
mov
adc
stc
les
cmp
lods
pop
decb
adc
cmp
cmp
push
ret
xchg
mov
rolb
outsb
pop
gs
lock
dec
ss
xor
and
add
pop
xchg
dec
lret
xchg
xorb
xor
inc
loopne
in
cmp
fistpll
lock
and
and
int3
inc
aaa
rorb
cmpsb
addb
fistps
les
dec
pop
mov
mov
popf
inc
pop
push
cld
mov
fstl
cmp
sub
rcrb
inc
add
inc
sub
inc
ss
sub
mov
xor
or
adcb
mov
xor
cmp
and
iret
roll
dec
clc
push
add
cmpb
rol
sbb
push
scas
mov
test
xorb
sbb
into
addl
inc
cmpsb
mov
push
call
inc
mov
mov
and
sbb
xchg
mov
aam
loope
rcll
mov
lods
addb
addb
add
jg
pusha
add
pop
inc
daa
or
xchg
nop
sub
popa
daa
mov
lcall
test
mov
mov
push
loop
jg
lods
mov
js
and
arpl
push
jge
iret
sub
dec
jno
ret
mov
inc
adcb
jg
mov
and
inc
cmp
inc
loopne
push
adc
enter
cmp
nop
mov
rorb
imul
arpl
jb
pop
push
jo
shl
shll
push
xor
sub
addb
dec
fimull
in
je
cmp
mov
dec
add
fdivs
push
gs
sahf
cwtl
in
dec
cmp
ljmp
add
lods
lds
pop
pop
mov
cmp
std
xchg
push
mov
fsubs
push
push
addb
in
xor
leave
sbb
adc
jbe
mov
sub
cmpb
fcoml
aad
shlb
testl
xchg
and
mov
inc
arpl
dec
and
inc
sbb
addb
pusha
xchg
rolb
inc
out
push
lods
add
rcrb
push
adc
lahf
mov
push
std
cmp
add
stc
lret
lods
add
mov
pusha
sti
jnp
pop
pushf
jle
xchg
out
rorb
and
mov
sub
loopne
jp
test
mov
pop
subl
dec
test
inc
xor
in
sbb
testb
test
gs
neg
aad
mov
daa
cld
xchg
dec
pop
cmp
outsl
std
enter
inc
out
or
or
and
mov
loopne
mov
andb
sbb
add
add
push
repz
add
loop
int3
push
cmp
cmc
lahf
fists
popa
lock
loope
inc
add
add
stos
lahf
insl
push
daa
rorl
add
and
pop
ljmp
das
push
imul
sbbb
rcl
add
popa
jle
loopne
shrl
mov
div
jl
inc
or
mov
add
xor
sahf
out
scas
andb
ret
pop
mov
or
es
push
out
xchg
inc
aaa
loope
inc
subb
pusha
pop
btr
movsb
and
cltd
mov
rclb
mov
jmp
sub
sbb
sub
and
add
add
aaa
aam
popf
mov
stos
mov
hlt
jle
sub
xor
dec
pop
sbb
pop
sub
ss
hlt
pop
sub
rorb
add
sub
mov
pop
in
dec
add
mov
push
jmp
lock
sub
mov
pop
out
jle
enter
repz
jno
lea
add
orb
push
out
rolb
inc
shrb
sbb
fstps
test
rclb
mov
jl
leave
mov
setae
lcall
add
add
sarb
scas
xor
stos
ficoms
ret
insl
inc
sub
mov
rorb
scas
das
inc
shll
andb
or
or
push
cmp
dec
fadds
call
fidivrl
addr16
and
arpl
rcl
imul
es
ror
pusha
add
cli
jl
mov
shrd
mov
icebp
mov
and
loopne
jmp
inc
sbb
addb
btr
sub
and
jae
lcall
xor
loopne
scas
andb
jb
and
das
add
and
inc
shrb
int3
into
aas
mov
or
dec
add
pusha
dec
push
xchg
and
pop
addb
int
push
jp
loopne
pop
push
dec
cmp
rcr
mov
dec
xor
and
inc
and
jae
push
and
jmp
in
lret
add
xchg
or
inc
mov
loopne
or
and
or
add
inc
push
imul
inc
test
lods
and
test
dec
sbb
pusha
pusha
js
hlt
pop
and
in
inc
mov
pop
mov
push
add
mov
sbb
sti
jecxz
jo
into
sarb
xor
shlb
or
pusha
stc
popf
jecxz
mov
cmp
sbb
andb
adc
fadds
xorb
inc
dec
test
pusha
xchg
push
fwait
add
or
lods
and
push
mov
lcall
add
dec
mov
inc
sbb
xchg
loopne
pusha
rcrb
sbb
jg
push
mov
addb
insl
and
and
mov
scas
inc
inc
in
mov
mov
and
jo
sbb
rcll
pop
or
fidivl
andb
rol
mov
addr16
cmpsl
add
mov
inc
rclb
dec
or
cmc
jl
mov
sbb
lahf
and
mov
jl
outsb
sahf
lock
or
bound
and
pusha
iret
lret
inc
or
shrb
mov
ret
xor
aad
mov
mov
int3
daa
insb
ds
out
sub
and
testb
jae
mov
fisubl
movsb
loopne
lea
mov
dec
movsb
mov
xchg
scas
mov
mov
dec
mov
sbb
pusha
pusha
shlb
shrb
lods
scas
cmpsb
loopne
and
add
andb
loopne
jno
cltd
ljmp
je
mov
data16
loopne
xor
insb
out
rcl
sbbl
inc
cmp
jo
jle
mov
movsb
rolb
mov
jbe
push
and
adcb
xor
or
xor
xor
fdivrl
pusha
and
dec
jp
jo
outsb
xchg
fwait
mov
push
pusha
mov
xor
sbb
clc
fwait
imul
rorl
and
es
dec
fiadds
sti
sahf
shll
mov
mov
jmp
dec
mov
push
push
fadds
inc
js
std
ss
pop
andb
andb
mov
mov
inc
mov
shlb
loopne
mov
pop
lahf
mov
add
push
mov
or
sarb
dec
or
inc
xchg
mov
movsb
inc
add
inc
mov
data16
jp
xchg
icebp
in
inc
mov
add
in
add
xchg
pusha
sbb
aas
std
lret
pop
cltd
dec
xor
ficomps
or
fldenv
add
or
mov
dec
aad
daa
das
dec
add
add
sbb
sbb
iret
mov
sbb
andb
mov
or
and
int
pop
fxch
add
pop
mov
testb
sub
loopne
push
inc
rorb
sub
outsb
mov
ret
inc
sub
jg
sbb
fcmove
pop
rcrb
movsl
push
push
lcall
push
and
and
sbb
pop
add
mov
cmpsb
add
xlat
sub
push
aaa
lods
loopne
add
mov
les
and
loopne
insl
inc
xor
test
loopne,pn
mov
xchg
and
in
cwtl
fadds
ret
imul
mov
shrb
shl
mov
aaa
addb
xchg
add
xchg
repnz
add
mov
cs
pusha
mov
sbbb
loopne
cwtl
std
das
and
add
ficoml
dec
add
mov
popf
lret
aaa
xchg
enter
mov
and
dec
jle
pusha
add
rcl
mov
inc
mov
lds
xor
inc
jmp
shlb
pusha
add
push
inc
aam
lcall
dec
sbb
loop
push
sub
lret
and
inc
jmp
add
imul
test
and
test
sub
sbb
inc
mov
repz
mov
pusha
in
fwait
rcll
xchg
stos
and
ret
and
push
iret
cltd
mov
loopne
hlt
inc
hlt
xor
aam
lahf
xlat
outsl
pop
inc
add
out
add
and
iret
push
pop
not
cmp
dec
outsl
sbb
xchg
leave
scas
rolb
shl
mov
xor
pusha
shrb
loopne
adc
adcb
push
pop
aam
mov
out
int3
stc
dec
insl
dec
mov
dec
sti
xchg
cmp
fisubrs
dec
push
sbb
out
clc
xchg
inc
mov
pusha
loopne
repnz
mov
imul
push
and
rolb
repz
adc
cltd
pop
push
push
fisttpll
or
sbb
mov
cmp
inc
dec
adc
pop
shlb
sbb
mov
mov
aam
adc
stos
ss
and
icebp
ljmp
adc
inc
mov
pop
lods
add
pusha
and
shl
cmpsb
loopne
pop
push
push
push
loopne
jmp
jg
inc
fwait
push
mov
sti
mov
negb
out
inc
sub
lahf
push
lcall
dec
sbbl
fdivs
enter
andb
add
movsl
repz
out
push
add
adc
fcoms
pusha
sar
push
nop
xor
or
loopne
jb
addb
rcrl
and
and
or
loopne
fisttpl
inc
loopne
inc
loopne
inc
nop
mov
adcb
imul
sahf
ljmp
mov
add
mov
add
cmpsl
and
shlb
sbb
popa
xlat
mov
movsb
add
shl
stos
inc
pusha
cld
sub
das
xchg
mov
fstps
andb
pop
lret
sbbb
dec
dec
in
jo
dec
stos
rolb
inc
fistl
ret
call
pusha
lahf
mov
dec
jmp
fsubrs
pusha
add
mov
and
or
xor
xchg
int
sub
pop
jne
lret
in
mov
iret
fninit
sar
aaa
jg
pop
sti
fstps
adc
sbb
test
and
lret
js
and
and
ret
lods
xor
or
or
loopne
inc
mov
or
mov
or
or
or
inc
or
add
push
shrl
test
mov
in
or
add
and
ss
cwtl
adc
dec
test
sarb
cmc
push
dec
test
loopne
add
iret
mov
shl
addb
mov
jge
test
loopne
jbe
cmc
rorl
add
add
shlb
mov
and
es
out
pusha
sub
adc
adc
sti
xor
add
mov
outsb
inc
and
rcrb
adc
and
and
cmpsb
pusha
pusha
mov
inc
rorb
xor
and
jg
ja
cmp
jne
pop
sbb
mov
shrl
aad
les
rcrb
idivl
jns
out
xor
loopne
mov
movsb
addb
adc
mov
and
jmp
mov
testl
push
fcompl
push
pop
stc
adc
inc
mov
lcall
stc
pop
push
shll
cld
mov
push
cmpsb
loopne
stc
cltd
rorl
mov
ret
fcoms
mov
aad
lahf
push
add
jne
inc
add
pop
int
and
ds
fmuls
jae
xchg
and
inc
fcomps
jb
xor
divps
add
mov
mov
lds
inc
mov
push
inc
and
cmp
adc
push
add
adc
fistpl
or
and
and
addb
push
shl
and
shlb
dec
in
push
inc
shl
or
adc
xlat
push
addr16
lods
loopne
loope
pop
pop
dec
out
rorl
addb
loopne
shlb
push
xchg
push
test
and
bound
fadds
ja
shrb
jae
inc
mov
fs
xchg
out
jg
fcomp
inc
pop
inc
ljmp
lock
and
rcr
inc
and
repz
nop
movsb
addb
pop
in
loop
movsb
inc
adcb
or
or
insb
push
push
or
pusha
fsubs
andb
add
add
mov
push
movl
pusha
rorb
mov
jmp
mov
cmp
dec
xor
mov
push
adc
adc
cmpsl
in
or
mov
stc
dec
sub
mov
add
insl
jmp
into
jmp
cli
sub
fists
imul
cmp
sbb
aam
loop
cmp
shrb
inc
pusha
das
fsub
sbb
aaa
pop
or
loopne
sbb
rcll
adc
loope
pop
sahf
aad
mov
orb
pop
dec
fcmovnbe
mov
call
pop
mov
lret
sbbl
outsl
out
rcrb
and
mov
std
sub
and
enter
scas
add
or
and
pusha
loopne
test
and
inc
jmp
scas
andb
pop
fisttpl
add
test
and
cmp
loope
mov
pop
rolb
and
and
addb
loopne
in
inc
aam
je
jl
dec
xor
pop
icebp
add
and
xchg
fcomp
adc
sub
loopne
push
push
mov
add
leave
lock
pusha
add
pop
std
mov
je
lcall
loop
and
loopne
xor
repz
addb
dec
adc
lock
bound
rol
loop
mov
in
repz
loop
ret
pushf
cmp
mov
adc
sub
xor
shlb
adc
in
push
ljmp
repnz
mov
loop
shlb
push
push
leave
in
mov
mov
mov
inc
xchg
stos
loopne
test
sub
mov
sub
inc
adc
add
rcrl
fs
jne
adc
and
test
pusha
popf
mov
mov
stos
fucomip
andb
mov
push
dec
xor
mov
mov
xor
add
cmpsl
lcall
mov
pop
loopne
xchg
sub
mov
and
jmp
and
add
shl
pop
loopne
xor
and
pusha
mov
mov
test
cmpb
cmc
imul
outsl
mov
test
and
add
ljmp
insl
fistps
jmp
xor
test
cmp
dec
sbb
adc
inc
dec
add
inc
add
push
in
movsb
pusha
add
xchg
pop
pop
cmp
and
pusha
pusha
cmpl
aas
pop
scas
add
shlb
or
addb
shrl
loopne
ss
xchg
or
add
ret
dec
in
outsb
cmp
arpl
bound
dec
jecxz
cmp
mov
inc
or
mov
and
or
add
je
sbb
sub
loopne
mov
inc
rolb
pop
add
mov
lahf
and
loop
mov
mov
dec
add
pushf
xor
sbb
push
fisubrs
inc
inc
pop
pop
pop
sub
pusha
iret
lock
pop
notl
sub
and
rclb
xor
and
rol
stc
daa
xlat
fsubs
int3
das
std
rolb
inc
outsl
repnz
shlb
cmc
subps
dec
inc
adc
push
xchg
sbb
clc
out
out
mov
sub
jae
repz
push
decl
dec
push
or
and
lds
repnz
sub
push
jne
pusha
cmpb
add
nop
mov
inc
and
mov
and
cmp
add
dec
dec
mov
cmp
jmp
fistps
sbb
enter
and
xchg
scas
pusha
and
mov
bound
test
inc
sub
xor
add
shll
pop
icebp
dec
pop
pop
pushf
movsb
and
inc
mov
ds
jp
aam
sbb
loope
bound
mov
adcl
xorl
jle
cmp
sbb
out
mov
pusha
sub
insb
inc
dec
mov
rcl
dec
mov
mov
into
push
ud2
push
inc
inc
pop
sub
and
andb
adc
and
mov
fiaddl
sub
add
mov
xor
loopne
hlt
cmc
test
imul
sub
sub
mov
cmc
insl
idivl
ljmp
push
outsl
cmpsb
inc
inc
jne
sub
and
das
ret
xor
test
loopne
add
faddl
cli
dec
and
xor
aad
addb
subl
pop
rorl
mov
mov
loopne
lea
add
out
cmp
fwait
int3
push
pop
jb
and
add
pusha
mov
popa
add
inc
xor
cmp
push
xchg
sub
push
rcrl
sbb
sub
adc
mov
adcb
pusha
int3
popa
aaa
movsb
and
inc
jbe
xor
loopne
das
push
xchg
dec
inc
cmp
cltd
ret
add
inc
fmulp
adc
gs
fdivr
mov
js
mov
rcrb
rcll
shlb
xchg
jmp
mov
cld
push
inc
push
mov
and
andb
add
and
xchg
lret
ret
test
jbe
adc
cltd
xor
add
cwtl
xchg
add
mov
pusha
loopne
cmp
cmp
roll
loopne
in
incl
and
inc
shl
leave
fidivrs
test
xor
cmp
or
aam
sbb
adc
dec
and
and
inc
mov
push
clc
add
mov
sbb
xlat
pop
pop
and
xchg
xor
xor
push
add
je
add
out
call
das
cs
add
xor
and
in
and
jle
pop
lahf
aam
pushf
sti
scas
inc
pusha
adc
add
and
adc
lea
lahf
sbb
and
orb
mov
outsb
cld
jbe
sub
cmpsl
cmc
arpl
add
inc
fcmovnb
data16
pop
jne
pusha
pusha
lret
add
loop
fwait
pop
add
dec
mov
jge
mov
shlb
fdivrp
mov
and
pusha
popa
add
mov
inc
adc
andb
dec
xchg
mov
add
xor
mov
push
and
test
cmp
and
inc
ds
std
gs
pop
and
loopne
aas
fidivrs
mov
dec
or
js
xor
mov
xchg
sti
enter
cmpsl
popa
fstp
sti
icebp
xchg
jns
pushf
out
pop
cmc
mov
or
mov
sti
and
cmp
pusha
push
push
add
jg
and
pushf
push
hlt
outsl
divl
testb
mov
stc
inc
fwait
mov
jg
xchg
call
and
and
mov
sub
cwtl
mov
and
cmp
loop
inc
jo
pop
ret
in
sub
mov
add
or
daa
mov
jne
or
add
or
jno
fldcw
addb
pusha
pusha
shr
add
ljmp
pop
cmc
add
or
adcb
popf
jecxz
fisubs
mov
enter
xor
adc
push
mov
enter
jbe
ret
loopne
fcomps
lods
or
push
cmp
and
lods
mov
and
xor
inc
add
inc
dec
inc
repz
ds
push
bswap
sub
and
shlb
adcb
andb
fiadds
int
sarb
xor
adc
movb
cmpl
dec
das
out
outsb
orl
xor
scas
xor
sbb
adc
inc
or
jg
cld
push
sub
mov
inc
imul
jecxz
cmpsl
mov
add
repnz
mov
add
out
out
lods
rcrb
pop
push
lcall
pop
lea
xchg
xor
jbe
lods
cmp
xchg
add
repz
aaa
roll
jl
data16
shlb
pusha
pushf
fistps
les
adc
data16
loopne
and
loopne
dec
push
andb
addb
fcmovnb
mov
iret
dec
jle
ret
addb
and
and
sbb
fimuls
add
in
mov
push
pop
loope
jge
insl
adc
mov
and
sbb
mov
and
ljmp
cmp
mov
mov
add
add
fsubr
jne
push
lcall
mov
mov
inc
mov
inc
sahf
cmc
xchg
dec
out
sahf
dec
addb
and
mov
or
adcb
jbe
loope
aas
lods
and
jl
jmp
popa
xor
add
loopne
push
mov
shl
pop
pop
mov
lahf
rorb
lret
addb
add
and
mov
inc
out
cmp
fstl
inc
add
in
and
pop
mov
add
dec
movsb
pusha
adcb
test
pusha
sbb
loope
popf
xchg
dec
mov
jnp
mov
rcrb
addb
test
pusha
cmp
outsb
cmpsl
pop
sub
imul
add
dec
pop
out
inc
out
lret
dec
mov
sub
shlb
cmp
cmc
jbe
xchg
fisubrl
mov
sbb
lods
jle
and
dec
pop
loope
push
jp
mov
into
mov
push
jmp
wrmsr
mov
enter
aas
in
loop
adc
cmp
jg
ljmp
pusha
mov
stos
mov
sub
ret
arpl
je
fmuls
insl
cld
or
outsb
push
and
lds
inc
sub
sar
daa
mov
popl
inc
loopne
fnstenv
fwait
sub
push
lods
xchg
push
jg
mov
rolb
mov
xor
pop
bound
add
jo
andb
jge
and
shll
call
loope
lret
in
mov
and
mov
loopne
pop
inc
cld
fisubl
dec
jg
addr16
sti
stc
cmc
les
andb
jb
repnz
jne
shrl
jbe
inc
pushf
into
iret
pop
dec
imul
add
xorb
and
andb
sub
adcb
movb
lcall
pusha
arpl
mov
in
test
mov
out
adc
loopne
sub
jnp
call
dec
test
mov
xlat
mov
loopne
inc
sub
loopne
imul
mov
inc
add
jnp
int
shlb
add
mov
xchg
in
push
add
lret
mov
mov
push
sub
inc
cmp
icebp
sti
lds
add
pusha
push
in
cld
rolb
mov
sarb
cmp
push
test
rolb
push
subl
and
xchg
jno
xchg
dec
xchg
xchg
data16
inc
and
lea
mov
add
jo
pop
leave
gs
adc
andl
jo
cmp
pusha
xchg
sub
add
xchg
sarb
mov
mov
pusha
jo
xor
leave
repnz
push
out
andb
jnp
jp
repnz
negb
sub
shlb
mov
add
leave
aam
add
loopne
std
fcomi
fcoms
mov
bswap
or
pusha
pop
out
lahf
add
es
dec
shlb
shlb
or
or
adc
dec
mov
jb
inc
mov
sbb
and
popl
xchg
orb
and
lret
loop
adcl
mov
cmp
dec
or
loopne
loopne
push
jp
pop
popf
fisubrl
mov
mov
enter
ficoml
std
add
inc
xchg
cmp
loopne
adc
add
dec
cmp
fdivl
movsb
add
xor
mov
ds
and
add
pop
cld
mov
decb
xor
jns
or
iret
dec
leave
js
push
sub
pusha
jns
sbb
ficoms
lods
inc
add
mov
andb
cli
and
loopne
xchg
and
shl
enter
popf
sbb
lods
adc
clc
xor
loopne
popf
bound
pusha
add
mov
int3
sbb
popf
mov
fsubl
sarb
or
pusha
loopne
add
roll
ret
cmp
push
push
add
inc
mov
inc
cmp
cmp
dec
cmp
loopne
mov
fwait
mov
add
dec
and
xor
xor
mov
data16
push
jge
push
and
pop
std
sti
cwtl
jp
pop
or
push
pusha
mov
add
dec
imull
dec
fimull
dec
outsb
shl
mov
leave
cld
andb
cwtl
mov
xor
in
xchg
xor
rcl
les
call
jo
jns
fwait
rcrb
lds
std
push
push
test
pop
push
icebp
xchg
call
and
loopne
sub
shrb
loopne
jp
in
and
into
imul
and
stc
out
sub
inc
stc
stos
rolb
out
shlb
jo
loopne
int3
test
mov
add
rolb
mov
cs
in
in
mov
in
or
loopne
jmp
sbb
loopne
mov
bound
add
into
push
mov
mov
pop
xor
xor
movsl
xchg
shlb
test
loopne
lret
jmp
and
xor
into
xor
ficoml
mov
mov
cmp
rcr
fdivl
inc
inc
mov
and
adcb
pop
push
fwait
inc
mov
shrl
loopne
les
loopne
fmul
mov
inc
and
mov
sbb
sti
dec
addl
mov
test
movsl
popa
jns
mov
cmp
pop
xchg
aaa
mov
movsb
and
mov
loopne
dec
and
dec
imul
out
addb
lds
mov
icebp
loopne
pop
xchg
mov
loopne
jns
jmp
and
loopne
loop
xor
xchg
lods
rolb
add
clc
insl
mov
cmp
lcall
mov
mov
add
add
xchg
mov
inc
mov
sbb
mov
dec
clc
movsl
push
ret
cmp
add
jno
je
nop
in
sti
hlt
cmp
xor
in
xchg
fistpl
sub
mov
push
xor
adc
movsb
shlb
xchg
test
mov
mov
addb
jp
xchg
push
dec
aam
repz
addb
pop
push
out
sbb
ret
jmp
xchg
add
loopne
shrb
or
add
shlb
add
push
mov
lods
shlb
out
fists
mov
or
and
clc
mov
push
mov
pusha
and
rcrb
adc
sbb
inc
jl
pop
adc
mov
sbb
jno
js
mov
jno
loop
push
mov
scas
and
roll
add
fnstsw
je
imul
dec
dec
push
test
jno
leave
insl
pop
mov
aad
movsl
jnp
xor
outsl
push
adc
fcoms
shlb
inc
and
ret
jnp
and
arpl
loopne
push
add
add
pushf
and
stos
mov
xor
js
pop
testl
push
int3
lcall
ret
add
pusha
add
ret
xor
repnz
and
mov
mov
sub
cmp
push
dec
fwait
mov
sub
sub
push
xor
movsl
pop
sub
pusha
xchg
cmp
lods
dec
mov
push
mov
fisubrs
aas
andb
or
add
mov
movsb
pusha
inc
int
mov
add
add
and
dec
test
inc
xor
sub
lds
and
sbb
pop
jno
dec
fs
add
lret
dec
mov
jmp
mov
cli
jb
jl
adc
xor
stc
mov
and
aaa
jb
addb
mov
inc
shlb
iret
rcll
lods
mov
or
mov
dec
rcrl
incl
insl
enter
inc
mov
push
mov
mov
adc
jno
mov
adc
jg
andb
sub
stos
and
enter
inc
pop
movsl
push
mov
xor
mov
and
loopne
and
sar
rorl
adc
and
rolb
andb
gs
out
sub
inc
and
mov
adcb
aas
fwait
lret
mov
ret
and
and
push
daa
add
xchg
sbb
fs
inc
nop
push
jp
cli
test
mov
mov
dec
je
sti
dec
dec
xchg
fidivl
subb
mov
jge
fstpl
test
rolb
pusha
cmc
ja
pop
adc
out
ret
imul
or
add
sbb
xor
fs
sub
out
std
and
fists
push
jb
mov
dec
mov
setge
rorb
loopne
lods
imul
or
mov
sub
iret
rolb
add
inc
mov
push
ret
inc
adc
rol
inc
insl
scas
and
dec
jmp
xchg
mov
mov
adc
lcall
or
cmp
inc
pusha
cmp
sub
or
les
shl
addb
inc
in
out
sbb
shlb
sbb
sbb
and
sbb
pushf
cmpsl
inc
das
fs
xor
xor
iret
mov
or
inc
imul
mov
incl
and
shll
stos
dec
in
ficompl
lret
add
sar
sub
sbbb
mov
rol
push
mov
mov
loopne
outsl
cmpsb
andb
mov
in
mov
sub
rolb
and
add
pusha
xlat
fnstcw
fisttpl
or
add
sub
pusha
sar
xchg
add
mov
mov
rclb
add
and
and
sub
cmp
mov
or
and
jg
sbb
nop
dec
iret
pop
ret
outsb
mov
rol
jecxz
pop
jge
pushf
sub
add
add
ret
dec
mov
sti
sbb
dec
xor
add
pusha
and
push
pushf
bound
xchg
xor
or
mov
mov
cmp
shr
int3
pop
mov
xchg
add
aad
loop
push
rol
movswl
lock
xchg
scas
inc
xor
push
shl
js
icebp
aam
scas
addb
pusha
add
xchg
jnp
aaa
mov
mov
es
inc
add
xlat
clc
gs
pop
add
add
outsl
adc
aam
mov
popf
aas
sbb
push
jnp
pusha
loopne
into
or
mov
pop
dec
push
inc
add
cmc
les
js
lahf
or
mov
lret
pop
pop
fdivrp
fidivrs
add
mov
testb
sbb
adc
sub
sbb
rclb
dec
decb
sti
jge
mov
push
pusha
and
jg
data16
aaa
test
mov
rcrb
dec
push
mov
loopne
mov
push
pop
lcall
pop
add
loopne
xchg
cmp
in
stos
and
cli
in
cmpsl
mov
subb
test
cld
xchg
rorb
cmc
sbb
jge
flds
add
cmp
cltd
adc
dec
push
xchg
fistpl
scas
add
pusha
and
pusha
inc
adc
lret
test
ret
or
test
shl
imull
xchg
and
xchg
into
je
add
loopne
ret
pop
jmp
icebp
data16
repnz
loopne
fldl
aam
lock
add
xchg
jle
push
adc
lods
push
or
scas
pusha
rolb
fcoms
jl
int3
andb
loop
mov
pop
loope
pusha
mov
pusha
loopne
or
mov
aaa
ds
sub
mov
and
orb
loopne
std
flds
jns
inc
inc
mov
pusha
clc
push
sub
mov
and
sbb
jbe
clc
inc
test
and
in
xchg
fadds
icebp
inc
nop
test
and
nop
pop
clc
jecxz
and
lret
or
pusha
sub
add
int
push
aam
imul
loope
loopne
add
std
nop
insb
pop
aas
jmp
lods
test
and
and
sbb
sub
and
mov
jbe
and
xchg
cltd
dec
cmpsl
loope
addb
ret
popa
and
dec
frstor
scas
mov
xor
jae
aad
in
mov
pusha
pusha
inc
adc
pop
fcomps
inc
addb
inc
mov
and
or
ficompl
and
inc
adc
xchg
rclb
add
and
mov
fildll
cwtl
sbb
mov
xchg
mov
mov
rorb
or
fmull
loopne
sarl
mov
adcb
sub
loopne
xchg
and
mov
xor
mov
cmp
pop
popf
jae
jmp
xlat
lahf
test
mov
or
out
ja
int
sub
mov
and
jmp
cmpsb
pusha
and
and
rcrl
mov
jle
sahf
mov
xchg
push
jmp
inc
add
out
fwait
bound
cmp
sarb
xchg
std
fstps
mov
sub
cli
jae
insb
lods
jbe
mov
nop
lcall
cmp
inc
push
add
mov
vmovaps
loopne
cmp
sbb
inc
sbb
aas
mov
or
mov
hlt
jl
aaa
dec
shll
andb
add
push
sub
in
sahf
pop
ficompl
mov
xchg
add
mov
leave
and
nop
cmp
xchg
repz
shlb
cmp
loopne
movsb
shlb
ss
cli
or
jp
clc
and
shll
test
out
mov
fs
leave
xor
xor
add
aad
sbb
je
inc
pusha
dec
icebp
cmpsl
subl
jecxz
iret
fidivl
out
hlt
call
out
mov
and
ljmp
in
mov
cmp
xor
adc
xchg
pop
lret
mov
dec
push
push
pusha
loopne
sub
outsb
or
inc
jl
das
sub
les
ret
mov
test
rorb
lods
addb
dec
int3
jp
xchg
mov
decb
out
scas
push
mov
movsl
xchg
loopne,pn
xchg
js
mov
sub
and
aad
mov
fstl
aaa
stc
or
out
mov
jae
ljmp
insb
in
push
xchg
dec
cmp
jo
ljmp
pop
ret
cmp
inc
jbe
lret
int
cli
mov
dec
out
jmp
xchg
clc
sub
mov
cltd
adc
or
and
addb
sbb
pusha
or
mov
das
scas
addb
mov
push
mov
shrl
inc
xlat
dec
in
in
testb
or
push
add
shll
cmpsb
mov
in
out
addb
lahf
addr16
rcrl
loopne
out
movl
pusha
and
dec
xor
pop
leave
jmp
nop
add
sbb
lds
mov
daa
xor
inc
stos
mov
adc
and
jae
in
arpl
in
dec
or
rcr
xchg
dec
or
inc
fbld
pusha
and
xchg
mov
pusha
and
dec
mov
pop
in
decb
shrl
push
inc
xor
xlat
andb
fidivs
dec
lds
add
xor
xor
and
push
cltd
or
add
fsubrs
cmc
jbe
lcall
movsl
pop
fwait
pop
sub
pusha
push
pop
xor
loopne
int3
pop
sub
andl
cmp
in
push
popf
sbb
imul
xchg
fmuls
iret
jbe
adc
les
add
leave
mov
pop
mov
ret
cmp
ret
mov
pop
fimull
pusha
pusha
and
loopne
dec
ds
inc
ret
jecxz
nop
out
push
xchg
sub
and
mov
ja
inc
push
jno
adcb
jo
or
mov
pop
mov
lds
inc
clc
lock
cmp
mov
cmpl
push
loopne
adc
push
loopne
cmp
lcall
addr16
cltd
icebp
xchg
mov
and
sbbl
xchg
mov
je
pushf
cli
mov
in
imul
loopne
insl
mov
and
pop
shlb
enter
test
les
arpl
sbb
shlb
inc
and
orb
dec
out
rolb
xchg
insb
loopne
sbb
and
shlb
pop
jg
add
lahf
ret
cmp
lret
adc
repnz
jle
popf
mov
or
rcrb
int
pushf
fisubl
mov
rol
movsl
test
loopne
jg
mov
mov
inc
testl
andb
adc
dec
push
add
xor
add
jmp
add
stc
hlt
pop
testl
repz
lock
test
mov
jl
gs
imul
mov
jge
cmpsb
mov
mov
mov
add
pop
push
or
xor
dec
je
push
mov
ret
cltd
jnp
pop
addb
dec
and
mov
push
inc
sarb
ja
dec
push
sahf
in
adc
push
sub
pusha
lock
fldl
mov
inc
adc
jecxz
fs
sahf
iret
sbb
jnp
add
in
sbb
jecxz
pop
out
mov
in
cmpsb
add
xchg
dec
test
xor
and
inc
xor
sbb
push
or
mov
hlt
rorb
call
or
lahf
pushl
test
mov
mov
loopne
pop
test
add
shlb
loopne
xchg
adc
cs
pusha
inc
fs
push
bound
pop
loope
xchg
leave
insl
dec
jp
cli
inc
cltd
ftst
in
inc
mov
divb
imulb
xchg
sbb
fisubrs
jb
sbb
or
jae
lock
and
cmp
sbb
fcmovnu
or
loopne
sbb
loopne
cmp
push
cmp
inc
rolb
inc
adc
add
adc
inc
jns
and
cwtl
xchg
scas
xchg
stos
pop
jb
sbb
loopne
scas
adc
mov
hlt
popa
pushf
mov
pushf
pushf
jo
push
sub
test
add
mov
inc
dec
lcall
and
xchg
lret
daa
mov
pop
adc
lret
jg
lret
mov
jecxz
scas
loopne
mov
mov
sti
mov
aam
mov
je
imul
add
loop
mov
pop
fs
add
orl
shl
and
jb
cmp
loopne
ss
sbb
sahf
lock
cli
mov
and
sbbb
xchg
pop
andl
jb
xor
and
andb
jl
jns
loopne
imul
out
pop
jp
aad
movsb
addb
push
add
pop
lret
popa
lahf
shl
movsl
xchg
or
mov
outsl
xor
popf
jns
shlb
bound
or
add
int
loopne
cmp
sub
jl
enter
jo
sbb
inc
cmc
jae
jmp
pop
dec
cmp
iret
mov
xlat
lret
add
loopne
add
or
sub
pusha
cmp
push
or
sti
jo
xor
mov
inc
ljmp
inc
add
jg
ds
test
mov
lcall
xor
repnz
xchg
test
ret
jo
andb
sub
or
pusha
pop
in
test
les
and
mov
stos
xor
ljmp
sbbb
inc
add
rorb
or
nop
dec
push
bound
fwait
push
add
inc
data16
jge
adc
dec
ret
lods
shlb
lods
ds
loopne
mov
ror
daa
repz
sahf
xor
pusha
mov
add
inc
cmpsl
ds
imul
rol
addr16
mov
xor
lcall
xchg
out
dec
adc
mov
pusha
pusha
inc
stc
xchg
in
push
stc
xor
jne
std
xor
adc
aas
sub
mov
pushf
xlat
mov
je
sub
inc
xchg
adc
xor
ss
adc
enter
in
push
sarb
jae
mov
cld
and
rcr
or
loopne
ds
pusha
push
shlb
cmpsb
inc
loopne
mov
andb
and
lods
hlt
sub
fldl
ficoms
xchg
in
jb
mov
out
and
mov
loop
repnz
dec
lds
jg
rolb
pop
pop
xor
jae
push
andb
shl
pusha
pusha
mov
repz
sub
out
sub
lods
cmpsl
jecxz
inc
rolb
out
daa
or
push
cmpsb
add
sbb
jecxz
aad
mov
ds
lock
loopne
jl
sub
negb
fisubrs
and
sub
test
and
push
mov
imul
fdivrl
or
sub
mulb
outsl
out
and
addr16
jecxz
pusha
inc
dec
dec
adc
mov
movl
adc
mov
inc
mulb
push
les
in
in
ret
or
add
lods
and
mov
or
mov
lock
mov
add
in
dec
xor
pop
les
in
dec
adc
in
jae
shr
clc
das
ljmp
mov
cld
cs
pusha
mov
dec
pop
or
inc
adc
xchg
and
mov
ds
mov
in
hlt
sub
sarl
inc
and
pusha
rorb
shl
outsb
imul
lret
lods
or
mov
xor
jecxz
xchg
pusha
jo
cmp
insl
xor
in
and
gs
mov
inc
leave
lret
mov
vpshufhw
lahf
scas
add
fsubs
das
rcrb
jae
loopne
and
pusha
mov
add
xchg
mov
inc
cmp
or
xor
test
daa
ds
lret
stc
in
add
loopne
pop
aam
out
inc
inc
xor
xchg
push
out
enter
cmpsb
inc
inc
aam
cmp
and
dec
lahf
dec
adc
and
mov
shl
rolb
xor
nop
cmp
sti
mov
test
loopne
stc
fiadds
lret
loopne
inc
mov
xchg
mov
cmp
stos
loope
fildll
loopne
mov
addb
fwait
adc
rcrb
ja
sbb
imul
xor
inc
loopne
and
and
popa
cld
not
pop
add
inc
in
mov
into
jp
cmp
rcr
mov
inc
ret
insb
aad
popa
xor
nop
stc
inc
imul
adc
shll
pop
pop
int
les
rolb
and
mov
std
push
pusha
pusha
xor
test
inc
aam
push
fdivs
sbb
sbb
sbb
add
xorl
xchg
jg
repnz
pop
ret
outsl
push
push
ffree
and
rclb
and
insb
fnstcw
fldt
loopne
iret
aas
pop
push
movsl
add
inc
js
outsb
add
imul
xor
pusha
addb
mov
mov
pop
and
lods
mov
inc
inc
loopne,pn
cmp
out
clc
stc
mov
rcrb
fnstenv
test
loopne
or
iret
mov
xchg
fwait
gs
pop
jbe
andb
bound
mov
jns
stos
lcall
cmc
jecxz
loopne
jns
add
jbe
mov
inc
je
dec
hlt
in
and
pusha
pop
push
mov
inc
or
rcrb
dec
pop
popf
lods
add
stc
mov
pop
orl
aam
sbbl
jmp
rcrb
adc
xchg
aaa
sub
lahf
xor
inc
subb
dec
sbb
push
iret
fistpll
add
jb
cli
ficompl
fisubrs
inc
pop
pushl
addl
loopne
insl
push
cmp
jp
fidivrl
scas
addb
xchg
bound
pop
sub
test
dec
cwtl
movsl
and
push
sbbl
sub
and
test
scas
inc
addb
jp
push
shl
sbb
and
mov
dec
mov
fs
pushf
push
and
add
pop
gs
mov
xor
andb
fwait
stos
andb
xor
pop
out
sbb
and
cmpb
xorb
ja
lret
shll
imul
outsb
push
xor
shlb
shlb
pop
push
dec
and
pop
sub
add
icebp
sub
pushf
jl
rolb
neg
add
or
inc
test
fistpll
inc
dec
and
push
pop
lcall
enter
cmp
push
inc
or
mov
ret
sti
xchg
inc
stc
fimuls
mov
xchg
js
icebp
xor
sbb
arpl
mov
cmc
stos
shlb
push
andb
adc
popa
dec
sbb
sbb
rorl
fs
cltd
andb
cld
decb
cmp
andb
push
insb
jl
test
shlb
sub
lods
sar
pop
pop
push
int
gs
mov
pop
inc
cs
add
call
jecxz
andb
sub
cmp
fbld
add
mov
pop
loop
pusha
rorb
pop
inc
call
mov
sarl
jecxz
or
in
jp
sbb
andb
and
rcrb
xchg
stos
inc
inc
add
and
fistpll
mov
cli
stc
and
stc
daa
mov
or
cmp
lds
jecxz
std
pop
pushf
dec
add
pop
xchg
mov
addb
mov
mov
add
mov
das
std
xchg
loopne
scas
cmp
loope
addb
into
push
jl
sbb
out
cmpsb
mov
inc
or
push
dec
mov
bnd
pusha
rolb
loope
lea
jmp
mov
addb
outsb
lock
shlb
add
cwtl
mov
lahf
dec
out
in
xlat
cmc
daa
jle
dec
nop
add
jl
shl
js
xor
mov
pop
lret
add
mov
xchg
jne
out
jl
push
pusha
inc
nop
imul
andb
mov
scas
sub
push
dec
mov
dec
js
sahf
xchg
add
inc
cld
lahf
lods
add
pusha
pusha
stos
push
pusha
pusha
inc
int3
add
mov
je
loop
and
rolb
ror
sarl
push
add
xchg
rolb
in
rclb
adc
loopne
pop
dec
pop
fldenv
icebp
lahf
xchg
repz
xor
inc
add
mov
xor
push
int3
pop
inc
or
adc
jg
lods
dec
adc
dec
mov
fisubs
pusha
pusha
cld
ljmp
mov
rcrl
push
fsubrs
mov
das
pop
pop
sbb
xchg
inc
or
popa
sub
inc
into
jp
xor
pop
dec
pop
hlt
jge
xor
inc
pusha
xchg
pop
rcrl
loopne
test
andb
mov
inc
incl
lcall
daa
arpl
xchg
jo
andb
jge
mov
cld
xchg
dec
push
cmp
inc
loopne
test
add
pusha
in
test
fnstsw
testb
scas
jge
add
xor
pop
mov
andb
addb
mov
rcr
or
inc
jge
inc
inc
popa
adc
inc
fcom
hlt
xchg
shl
mov
ss
lahf
add
push
push
js
andb
lret
pop
mov
add
out
scas
in
arpl
xchg
xchg
dec
add
mov
pusha
inc
addb
adc
cmp
or
inc
call
shrl
repnz
add
dec
sub
add
rol
mov
ds
cmp
inc
in
andb
jg
mov
addb
movsb
add
mov
dec
push
inc
jno
pusha
add
sub
lcall
jo
dec
aad
xor
pop
sti
and
inc
in
sub
dec
pop
jb
adc
push
mov
sarl
mov
and
and
sbb
inc
imull
lea
mov
je
cmp
xchg
fsubrs
dec
push
stos
add
pop
jmp
inc
jecxz
cli
add
pusha
lcall
pusha
inc
inc
sub
loopne
inc
sar
push
mov
sub
cmp
lods
pusha
loopne
jnp
mov
and
stos
mov
pushf
and
aas
loop
mov
test
xorl
movsl
mov
inc
mov
pusha
arpl
inc
clc
std
cmp
push
mov
repnz
add
imul
mov
mov
add
test
xlat
mov
pusha
add
mov
jnp
jo
pop
sarl
xor
and
cld
loope
in
sub
add
shlb
add
lods
stc
mov
loopne
jl
jb
scas
and
cmpsl
stos
shlb
clc
inc
ja
push
mov
adc
addb
pop
fdivl
or
adc
imul
add
add
jp
loop
dec
insl
repnz
mov
and
rolb
mov
jbe
xchg
test
and
push
sbb
jne
jb
clc
test
daa
pop
sub
push
xor
lret
and
and
dec
and
ljmp
jbe
rcrb
jl
dec
rcll
ljmp
lea
push
enter
add
sarb
into
inc
mov
mov
fstpl
in
rolb
loopne
jg
jo
push
xlat
aas
popa
rcrb
push
or
int3
hlt
shrb
jne
cmp
scas
dec
ja
mov
loopne
xor
mov
cmpsl
js
lahf
cwtl
push
pop
pop
loop,pt
lods
inc
inc
xchg
lret
lods
fs
mov
loopne
xor
xchg
imul
sub
dec
test
pusha
pusha
pop
inc
inc
loopne
and
scas
xor
fstps
mov
mov
mov
add
inc
mov
sti
mov
shr
pushf
insb
fs
nop
jns
addb
sarl
mov
mov
add
incl
jp
lret
shlb
in
mov
test
and
xorl
inc
adc
popa
push
add
pusha
push
and
push
inc
andb
mov
popf
cmpsl
push
sti
dec
imul
push
lods
dec
test
jbe
iret
jmp
cmc
mov
mov
addr16
jl
xor
mov
push
jbe
cli
jnp
xchg
dec
sbb
inc
int
mov
lods
data16
out
jbe
cld
imul
cltd
je
test
sti
lds
xchg
call
loopne
sahf
daa
mov
mov
pusha
and
sub
loope
in
sbb
movsb
pusha
adcb
notl
fiaddl
or
rcl
ds
xor
sbb
xor
sub
sti
pop
cmc
cmp
fiaddl
fisttpll
cmp
addb
loopne
outsb
movsb
and
push
adc
lahf
insl
shl
clc
adc
and
mov
and
addb
sub
lret
aaa
or
loopne
pop
jl
sbb
and
loop
ss
xor
cli
mov
incl
and
andb
lods
add
insb
add
clc
in
xor
push
call
cmp
std
fsubrl
lock
andb
mov
pusha
add
jge
loop
ljmp
lods
andb
inc
std
push
jp,pt
iret
or
mov
mov
sbb
sbb
ljmp
nop
dec
push
lods
loopne
leave
dec
dec
xchg
pop
mov
dec
inc
decb
mov
add
inc
std
inc
add
jg
jno
dec
push
add
in
cmpsl
shl
cmp
xchg
cld
jns
pop
lcall
add
ret
push
push
adc
add
sub
shlb
out
cmp
add
andb
addr16
inc
push
inc
loopne
cmpsb
and
inc
or
sub
cmpsl
dec
insl
inc
hlt
jge
or
test
inc
xlat
xchg
repz
aad
aaa
jae
rorb
add
xlat
inc
add
mov
aam
mov
scas
jp
dec
dec
fdivrs
jl
lea
or
sahf
jo
sahf
pusha
pop
cmc
pop
jae
arpl
in
dec
in
ficompl
mov
dec
pop
nop
mov
sub
pusha
and
loope
xchg
jae
flds
inc
and
pop
fidivrl
pop
jnp
ljmpw
mov
outsb
cmpsb
and
mov
enter
fcoms
in
orl
hlt
scas
and
insl
sbb
cmp
lret
ror
ret
rolb
jne
stos
loopne
cmp
sbb
or
cwtl
andb
or
sub
or
jo
ja
movsb
and
sbb
loopne
nop
loopne
mov
mov
and
inc
mul
ss
pusha
sbbb
xor
push
jge
mov
pusha
mov
push
outsl
stc
mov
pusha
mov
and
sbb
popf
sti
das
enter
xchg
cmp
test
and
inc
push
add
sbb
xchg
test
sub
inc
sub
add
add
andb
jle
xor
shrl
inc
mov
hlt
lods
rolb
inc
mov
pop
mov
shlb
mov
dec
pop
mov
add
and
andb
inc
xor
addl
push
jp
inc
jnp
mov
jnp
sbb
inc
das
inc
sarb
inc
cmpsl
mov
lods
add
xchg
pop
inc
mov
xor
jo
ja
push
dec
int
push
lock
in
add
dec
in
adc
mov
mov
dec
lods
add
lret
cmp
inc
inc
scas
out
push
mov
add
add
movsb
add
jb
mov
jno
addb
push
ficomps
rol
scas
jno
and
or
loopne
cmp
nop
sub
rol
ja
clc
imul
mov
cmp
subb
aaa
pop
int3
jp
adc
jo
jle
rolb
pop
mov
adc
mov
push
or
pop
outsb
mov
jle
mov
adc
aad
dec
lods
daa
mov
pop
and
insl
cli
das
pushl
loope
mov
in
sbb
mov
andb
pop
lcall
xor
lock
fwait
dec
mov
pusha
repz
add
or
pusha
inc
jge
mov
addr16
cld
add
shrb
cltd
int
loopne
jbe
pusha
pusha
nop
in
andb
xor
xchg
dec
sbbl
test
mov
cmpb
lret
push
lock
mov
cmp
xor
test
and
mov
cmc
xchg
addr16
rolb
iret
clc
adc
enter
push
stc
aad
negl
push
insb
into
pop
sbb
lcall
mov
int3
cmpsb
and
pusha
lods
lret
nop
push
cmpsl
loopne
inc
jb
add
inc
add
cmp
mov
pop
xchg
mov
aaa
mov
xchg
xchg
pusha
mov
ja
adc
cmp
xor
enter
lcall
loopne
orl
and
loopne
sub
mov
pusha
and
mov
and
add
ret
push
sbb
outsl
jle
mov
stc
cmc
push
notl
pop
loopne,pn
repnz
int
ds
adc
ds
imul
andb
push
pusha
inc
sub
pusha
and
shlb
xor
imul
push
and
pop
xchg
into
xchg
add
and
jo
mov
mov
enter
inc
pop
add
and
adc
mov
xor
shlb
imul
sarb
pusha
jae
rolb
and
aad
loopne
jecxz
and
mov
mov
mov
push
outsb
push
int3
imul
mov
cmp
push
lahf
pop
sub
push
loopne
mov
bound
push
xor
enter
fcoms
mov
shll
ret
pop
sbb
stc
testb
jecxz
or
arpl
outsb
inc
sbb
neg
inc
xchg
mov
inc
cmp
and
andb
in
fisttps
cwtl
pusha
push
imul
cvtdq2ps
inc
mov
xor
dec
popf
mov
xor
out
in
cld
push
fnstsw
rol
xlat
xchg
push
add
and
addb
lret
inc
jg
repz
icebp
push
mov
loope
fwait
add
jg
add
sub
inc
dec
and
add
addr16
dec
lock
pushf
fs
imul
dec
jl
jle
enter
push
and
or
xorb
outsb
fdivrl
rep
out
add
pusha
jmp
inc
shl
stos
shl
mov
fistpl
inc
xchg
leave
imul
nop
xor
push
add
inc
into
jle
es
pusha
pop
shrl
cmp
mov
pop
mov
mov
push
push
add
mov
inc
dec
mov
jo
mov
lret
ret
cld
xchg
cmpsl
mov
pusha
cmp
push
jns
pop
add
and
in
dec
adc
out
and
nop
and
mov
lcall
inc
mov
aam
mov
pop
mov
aad
jg
cli
rol
vmovdqa
and
outsb
inc
or
jbe
adc
inc
rcrb
fwait
push
xchg
js
popa
or
and
in
cmp
iret
popa
loop
ret
call
in
ret
mov
mov
stos
mov
pusha
push
mov
adc
sub
mov
arpl
aas
pop
xchg
jle
push
fbstp
mov
mov
inc
adc
pop
xor
xchg
aam
lret
inc
sbb
data16
cld
gs
xchg
imul
sub
loopne
sbb
add
sbb
loop
and
loopne
cwtl
push
je
clc
adc
leave
push
lock
jae
clc
fistpll
roll
mov
out
shlb
inc
bound
push
loopne
cmpsl
hlt
imul
dec
mov
repnz
scas
sbb
pop
sbb
sub
mov
fidivs
test
test
adc
or
mov
andb
ficoms
mov
rol
inc
mov
pop
xor
sbb
jge
fsubrs
loopne
add
subb
test
add
inc
sub
loopne
xor
lcall
addb
ds
sti
movsl
push
jge
mov
add
shlb
sti
mov
jmp
lock
mov
int3
xor
push
inc
inc
cld
out
stos
pusha
orb
inc
cmpsl
int3
das
sbb
ficoml
fwait
les
cmp
xchg
popa
ret
sbb
jg
push
pusha
rclb
jg
pushf
daa
bound
and
lods
inc
pusha
xor
add
inc
mov
and
push
loope
popa
outsl
seto
cltd
sbb
adc
pop
ja
rolb
mov
jg
and
sbb
pusha
loopne
stos
loopne
push
adc
dec
lock
repnz
pusha
pusha
iret
out
out
shlb
xchg
xchg
sbb
dec
sarl
mov
inc
push
sahf
mov
cmpsl
or
pusha
xor
in
xchg
jl
dec
cmp
loopne
ljmp
push
inc
mov
or
or
dec
xchg
adc
adc
adc
xor
insl
leave
mov
jl
pusha
pusha
cs
add
out
je
jp
dec
sbb
sub
inc
dec
cld
ret
mov
inc
pusha
aad
loopne
fbstp
fisubs
push
inc
jg
dec
pop
adc
push
cwtl
mov
lret
aaa
das
and
mov
ficoms
sub
add
xor
mov
add
fisttps
cmp
es
mov
loop
repz
mov
push
repnz
dec
or
loopne
xor
test
and
mov
loopne
cmpsl
xchg
xorl
push
jnp
mov
loopne
xchg
out
push
inc
mov
pusha
mov
cld
xchg
mov
sbb
loopne
out
lret
mov
shr
mov
mov
arpl
loopne
xor
adc
div
inc
adc
rclb
add
leave
jne
shl
das
inc
out
iret
imulb
rolb
jle
pop
call
nop
sbb
inc
add
inc
mov
adc
loope
dec
sbb
int3
pushf
mov
mov
pusha
mov
addb
loopne
insl
push
and
mov
rorb
negb
ret
xor
rclb
scas
add
inc
loop
jbe
mov
sbb
and
fwait
std
ss
push
pop
sbb
pop
aaa
ss
imul
loopne
push
inc
jp
rorb
fs
push
pop
and
add
pushf
sub
add
rcrb
mov
pop
lcall
xchg
sub
lods
mov
xchg
and
loopne
andb
or
rorb
dec
mov
mov
adc
xchg
dec
test
movb
and
jecxz
ss
push
in
jae
shlb
push
sbb
shlb
lds
enter
pop
adc
mov
ret
ljmp
pusha
test
divb
int3
add
andb
and
push
mov
pop
xor
or
jecxz
loopne
mov
scas
loopne
sbb
add
in
inc
cmpsb
mov
mov
daa
cmp
add
mov
sbb
add
add
and
rolb
adc
push
mov
adc
in
sub
loopne
push
mov
inc
sbbb
push
cmp
fs
roll
sub
hlt
jno
cli
loope
call
mov
jae
std
in
imul
mov
and
movsb
loopne
stos
add
hlt
in
shl
jp
enter
mov
dec
jmp
pop
out
dec
aad
inc
and
sbb
sbb
sahf
jle
sarl
sub
das
outsl
jecxz
xchg
mov
leave
jbe
mov
inc
pusha
fmuls
push
lds
repz
and
subb
andb
in
and
shlb
filds
mov
jno
mov
pusha
andb
adc
in
loope
shlb
mov
andb
mov
sbb
inc
xchg
xchg
xchg
jae
jne
and
cmpsl
in
test
xorb
xor
cmc
cmp
loope
loop
cwtl
pop
add
inc
jae
pusha
and
andb
out
mov
insl
lahf
js
pusha
loopne
outsb
and
inc
jnp
jge
or
das
aam
imul
pusha
and
adc
loopne
mov
stos
add
das
jbe
ret
push
pusha
and
rcll
jae
dec
mov
jae
mov
fs
repnz
push
icebp
adc
cwtl
in
enter
shlb
xchg
mov
stos
int
sbb
in
scas
inc
adc
mov
cmpsl
push
and
lret
sub
es
loopne
shlb
adc
loopne
imul
or
add
or
lret
aad
push
imulb
jp
jae
pusha
loopne
loopne
mov
inc
jnp
int3
mov
push
in
dec
cmp
inc
jmp
xchg
pop
les
ret
sbb
imul
pusha
cltd
in
pusha
shlb
pusha
pop
fsubl
mov
add
xchg
mov
and
add
pop
leave
add
addb
inc
imul
lock
push
data16
sarb
scas
nop
add
xchg
bound
and
jae
sbb
movsb
inc
ror
pushf
add
loopne
mov
mov
fidivl
testb
jl
sub
sub
and
add
and
data16
adc
out
aad
popf
jl
loopne
and
or
loopne
mov
xchg
pop
insb
add
out
cmc
aam
add
lods
mov
jl
rolb
fwait
lcall
mov
mov
scas
rolb
out
andl
xor
mov
jg
js
loopne
or
movl
int
pusha
adcb
nop
push
imul
addr16
or
xchg
mov
loopne
pop
movsl
addb
leave
push
mov
in
mov
pusha
mov
or
and
cmp
or
fnsave
ss
cmp
inc
cmpsb
add
nop
aas
mov
xchg
ljmp
scas
enter
mov
inc
inc
add
and
xor
cwtl
shr
push
lret
adc
mov
and
mov
add
int
fidivrs
sub
loopne
add
rolb
xlat
add
dec
pop
jns
in
inc
iret
pop
ljmp
cwtl
cmpsl
mov
ja
jl
mov
xor
add
loopne
loopne
frstor
add
inc
shll
and
rclb
xchg
rorb
push
push
inc
mov
stos
inc
add
sub
shlb
loopne
xor
xor
je
imul
out
scas
and
imul
int
addb
mov
fimull
push
xor
sub
aad
nop
mov
cmp
mov
xor
shl
inc
in
inc
xchg
lfs
lret
sbb
sahf
mov
jp
cmp
cmp
and
mov
xlat
inc
fmul
aad
and
aam
add
pusha
pusha
push
pop
add
loope
jmp
mov
pusha
mov
push
mov
pop
fcoml
and
cmpl
test
popf
xor
ljmp
js
insl
dec
aam
pop
cmp
xor
mov
add
fwait
dec
pushl
rcrb
xchg
out
sbb
inc
mov
loopne
jbe
call
adc
test
popf
notl
cmp
imul
jp
ret
lods
xchg
or
and
fdivs
std
filds
mov
push
mov
add
pusha
inc
lods
mov
out
arpl
and
xor
cli
test
mov
cmp
jle
mov
inc
mov
sbb
je
loopne
insl
scas
imul
pop
pusha
lock
mov
out
adc
inc
les
mov
loopne
les
rcl
and
insl
dec
xchg
push
aas
pushf
push
inc
out
and
pop
sbb
add
and
hlt
lock
loop
test
cmpb
stos
pop
adc
fsub
dec
cmp
dec
out
mov
daa
shrb
sub
orb
push
ret
shrb
add
fildl
inc
and
loopne
dec
scas
inc
add
loopne
mov
add
dec
pop
enter
sti
jg
fwait
std
mov
and
fwait
xor
adcb
leave
cmpsb
and
cld
icebp
push
cmp
rol
jae
imul
inc
dec
aas
into
fxch
adc
mov
mov
or
gs
or
pextrw
mov
xlat
sbb
fldenv
shr
sub
rcl
jecxz
fneni(8087
jns
mov
lods
mov
push
cmpl
xor
pop
jecxz
add
out
sbb
outsb
xchg
pusha
sldt
pusha
lea
xor
push
imul
loopne
inc
mov
mov
adc
aad
inc
subb
outsb
in
mov
and
enter
dec
sub
add
bound
mov
addb
push
shlb
adcl
lret
inc
push
jecxz
jbe
adc
std
sub
inc
mov
cs
sarl
movsb
loopne
xchg
push
mov
ss
sti
jle
aaa
or
subb
adc
push
push
in
mov
add
mov
jb
mov
popa
mov
and
pop
stos
add
iret
cmp
mov
ljmp
loop
adc
insb
pop
sub
bound
dec
adc
popf
sarb
inc
mov
add
adc
jl
inc
pop
gs
shlb
xchg
mov
shl
jb
pusha
sub
icebp
add
loopne
out
xchg
sub
and
add
dec
faddl
int
jp
push
movsl
mov
mov
push
movsl
pop
mov
in
rclb
xchg
out
xlat
das
mov
in
dec
jp
jne
test
cmp
adc
mov
aas
xor
loopne
sahf
or
xchg
fiaddl
fwait
loop
in
add
mov
push
in
lds
loopne
mov
add
cmc
jns
mov
aas
lods
aas
xorl
fsubs
loopne
adc
xchg
mov
cmp
pusha
and
jp
mov
addb
mov
aam
mov
inc
inc
cs
loopne
pop
push
inc
or
int
pop
aas
aas
mov
data16
test
rcl
mov
add
cmp
add
xor
lret
xor
xor
mov
and
push
mov
aas
stos
and
push
out
shlb
pusha
push
fimull
andb
add
loopne
data16
pop
mov
xchg
ljmp
xlat
and
adc
pusha
inc
xchg
cmp
fadd
ljmp
sbb
dec
jb
and
out
sbb
lret
inc
flds
push
mov
mov
and
arpl
pusha
in
fldenv
push
jle
js
aad
ja
and
add
lret
xlat
jmp
mov
cmp
cmp
xor
or
aas
pop
imull
loopne
hlt
cmp
mov
popa
mov
pop
andl
shlb
xchg
shlb
in
icebp
sub
sbb
cmp
mov
add
mov
pop
lods
imul
ss
icebp
sbb
adc
roll
gs
dec
push
jg
dec
stos
push
out
int3
pop
ss
push
nop
dec
je
mov
push
sbb
push
push
and
andl
push
or
loope
lahf
loope
outsl
add
add
mov
loopne
insl
pushf
sti
insb
dec
xor
shlb
addb
inc
push
push
mov
pop
mov
stos
mov
adcl
pop
cmp
push
push
and
inc
loopne
cmp
in
xchg
sbb
cltd
test
shrb
cmp
add
dec
jnp
lret
addr16
andb
jmp
and
out
xchg
pop
jns
mov
adc
and
mov
lds
in
fs
ror
inc
ret
inc
adc
add
fstl
pop
or
daa
mov
in
inc
and
andb
stos
add
shll
andb
enter
ds
jmp
jbe
ror
inc
xchg
mov
mov
pusha
cwtl
ja
iret
roll
pop
mov
negl
cmc
adc
xchg
adc
push
dec
rcl
neg
jp
mov
fsts
jle
inc
adc
add
outsl
add
sub
pop
or
mov
or
mov
std
cmp
adc
or
lret
sbb
pop
mov
pusha
pusha
add
mov
stc
dec
mov
mov
sti
push
mov
xor
sbb
aad
mov
inc
loopne
add
mov
imul
inc
popf
mov
adc
pop
andb
mov
inc
sub
adc
mov
and
lret
mov
rcrb
and
mov
inc
mov
and
inc
outsb
dec
cmc
jle
in
test
add
fucomip
inc
mov
and
mov
inc
mov
add
sbb
addb
mov
xchg
mov
pop
scas
shlb
loopne
pop
insb
lret
out
inc
cmpsb
loopne
repz
mov
cmp
and
cmp
pusha
push
in
pop
aas
sbb
mov
and
gs
sar
insl
push
dec
movsb
mov
movsl
pop
stc
pop
leave
sbb
andb
aaa
daa
test
sbbb
jnp
mov
xchg
iret
cmc
popf
push
shl
jns
cwtl
jnp
scas
xchg
jl
incl
pop
inc
sti
sbb
cs
inc
cs
and
mov
mov
lock
cld
adc
shl
int3
adc
jg
scas
into
xchg
rcrb
and
inc
mov
add
loopne
out
dec
sbb
pop
cmp
pop
mov
sbb
std
decl
shlb
xchg
ret
in
nop
popf
std
test
inc
rorb
mov
bound
and
fldcw
sahf
mov
mov
rclb
cmp
mov
push
xchg
xchg
or
mov
loopne
and
pop
jne
lock
jnp
dec
push
daa
f2xm1
pop
stos
divl
sbb
loopne
cmp
and
movsb
mov
mov
testb
dec
mov
cli
lods
push
or
adcb
aam
jecxz
adc
gs
dec
push
jmp
lods
shlb
and
and
dec
xlat
sarb
inc
mov
mov
fists
les
loopne
outsb
faddl
xlat
scas
mov
mov
mov
loopne
pop
repz
xchg
xchg
repnz
lcall
cmp
movsb
inc
rcl
or
fcoms
xor
inc
loopne
add
loopne
jp
inc
mov
mov
test
pusha
xor
dec
nop
lea
ds
mov
mov
mov
add
andb
data16
movb
or
inc
xor
fisubl
adc
cmp
push
repz
lods
inc
inc
fmulp
fs
addb
cmp
mov
inc
shlb
mov
loopne
and
loopne
aaa
in
sub
mov
mov
sar
dec
aas
movsl
mov
loopne
add
cmpsl
and
cmpsb
inc
sarb
loop
add
insb
pop
dec
sarb
xchg
jl
dec
and
in
pushl
xor
add
pusha
add
and
mov
adc
push
test
and
mov
dec
mov
notb
push
pusha
aam
ds
dec
pop
iret
cmpsl
pop
inc
fs
pop
shrb
sbb
jns
bound
daa
mov
dec
xor
mov
shr
cmp
cmp
cltd
pop
shlb
cld
jne
push
fisubrs
inc
es
xchg
in
pop
cmpsb
pusha
inc
fldcw
pusha
pusha
je
xchg
divl
dec
pop
cmp
jg
pop
int3
push
aad
ljmp
pusha
shlb
push
clc
push
inc
and
cli
mov
cmp
jno
dec
or
add
shrb
shlb
inc
and
xor
lret
pusha
pusha
lock
jge
mov
addb
dec
mov
inc
and
and
inc
and
jb
add
xor
and
rcr
sbb
cmpsb
add
enter
add
shlb
add
push
out
test
cmp
loopne
push
push
mov
and
push
jg
divl
fadd
or
jae
std
xor
test
sub
out
loopne
cmp
sbb
movsl
add
test
orb
or
and
cmc
mov
sub
inc
add
loopne
jne
popf
imul
jg
stos
pusha
mov
subb
int3
shlb
xchg
add
sub
add
flds
add
lret
loop
or
shlb
mov
mov
aaa
cmp
mov
mov
xor
adc
push
sti
mov
popf
push
pusha
ds
rclb
rol
cmp
mov
stos
mov
out
call
and
push
mov
adc
loopne
lret
sub
ja
mov
loopne
fimull
mov
jle
ror
jp
and
pusha
inc
outsl
mov
and
jmp
pushf
xor
mov
mov
xchg
add
shlb
pusha
outsb
mov
pusha
shrb
adc
cmc
mov
sbb
mov
push
pop
xchg
repz
inc
adc
pusha
popf
cmp
and
mov
icebp
sahf
xor
and
cmp
sti
in
inc
dec
inc
jle
pop
divb
movsl
add
andb
and
loopne
xchg
push
push
xor
pusha
inc
add
pusha
xchg
je,pt
clc
and
jb
ret
and
mov
shll
add
dec
mov
aad
inc
mov
rcll
loopne
pop
push
and
sbb
push
jo
lods
shlb
gs
faddl
scas
into
mov
mov
adc
andb
xor
mov
and
js
pusha
loopne
loopne
add
jmp
pop
mov
cli
sti
iret
add
mov
loopne
mov
leave
jg
icebp
ret
add
mov
and
arpl
or
pusha
cwtl
ret
shr
paddusb
out
sbb
dec
shll
std
repnz
call
push
in
lret
add
mov
or
inc
lcall
sbb
xchg
out
lahf
cmp
fdivl
pop
inc
loope
mov
inc
pop
adc
adc
or
aaa
mov
imul
sbb
xor
sub
out
push
int3
xor
push
loopne
rcll
fwait
jl
jne
shl
inc
jo
add
mov
rol
sbb
test
mov
xchg
jecxz
dec
popf
data16
and
je
cmp
push
pushl
jg
in
negl
ror
jo
icebp
clc
ds
xchg
mov
int
cld
and
rolb
repz
or
test
add
fwait
jge
andb
imul
lret
ds
cltd
jo
add
outsl
add
inc
ljmp
lret
shlb
jmp
jge
xchg
dec
sub
shlb
mov
sub
cmp
mov
xorb
out
loope
mov
mov
jp
jmp
mov
cmc
lods
xchg
add
scas
and
mov
inc
movsl
push
ficompl
das
cmp
movsb
add
rolb
inc
sub
xorl
andb
aaa
mov
inc
into
sbb
mov
or
mov
or
addl
loopne
xor
dec
sub
mov
xchg
inc
imul
mov
pop
or
pusha
loopne
jbe
push
xchg
pusha
cmp
add
sub
pusha
pusha
add
add
xchg
xlat
ret
in
mov
out
inc
xchg
xchg
loop
mov
js
sti
hlt
mov
push
adc
cmp
ds
imul
lea
jge
add
lods
cmp
lahf
std
inc
sub
jnp
and
mov
add
shl
rclb
notl
aaa
andb
xor
and
lret
pop
movsb
add
ror
mov
daa
ljmp
add
cmpsl
inc
mov
ljmp
insb
andl
aam
mov
and
mov
and
aas
and
orb
pusha
cmpsb
add
imul
les
rolb
test
inc
cmc
test
cli
loop
jb
push
pop
mov
cmpsb
andb
pop
shll
ficoml
jbe
call
jmp
add
adc
sbb
scas
inc
loopne
movsb
add
test
inc
andb
pusha
or
addb
pusha
lods
loopne
inc
loopne
or
and
and
dec
mov
add
pop
fidivrs
pop
xchg
lcall
loopne
xlat
mov
daa
movsb
loopne
in
mov
pop
js
and
inc
adc
sbb
sbb
in
xor
je,pt
add
ljmp
out
mov
aam
fimuls
adc
push
pusha
adcb
sti
push
and
cmp
lret
mov
dec
repnz
xchg
jge
sti
out
pminsw
outsl
inc
addr16
pop
aad
adc
add
sbb
lahf
std
popa
dec
lods
andb
lret
dec
arpl
xor
jnp
pop
dec
jl
xor
enter
xchg
cmp
pop
adc
lret
or
jecxz
and
inc
xchg
addr16
mov
pusha
int
lds
push
jmp
addr16
add
sbbb
insb
les
andl
cmp
push
loopne
pusha
cwtl
adc
and
mov
outsl
sbb
adc
loopne
mov
add
push
or
cmpsb
and
sub
subb
add
daa
inc
pop
mov
and
orb
mov
push
mov
loopne
mov
in
cmc
dec
andb
push
mov
sbb
mov
pop
daa
sti
std
add
fs
and
and
loop
loope
enter
add
rorb
scas
rolb
andb
mov
loopne
ret
fbstp
and
dec
insl
int
sbb
dec
rcll
movl
xchg
fsts
adc
iret
rorb
std
sbb
and
jne
mov
xor
inc
and
pusha
jmp
shlb
shrl
fucomi
clc
dec
clc
mov
xchg
or
mov
push
mov
jne
pop
sarb
pusha
mov
imull
bound
or
stos
inc
shlb
xchg
add
mov
add
jecxz
shll
mov
mov
and
sub
or
inc
mov
loope
push
mov
daa
pusha
icebp
fisubrl
test
imul
dec
data16
dec
in
xchg
stos
addb
shl
push
jecxz
mov
das
sbb
and
dec
mov
and
pop
and
sbbb
mov
dec
cli
xchg
sub
aad
mov
movsl
fnstsw
or
loopne
push
xchg
daa
jno
and
and
add
mov
rorl
mov
add
pusha
xor
cmpsl
repnz
sbbl
into
imul
xor
mov
pop
push
mov
pop
roll
inc
test
mov
xchg
test
adc
add
xor
mov
dec
sarl
and
cltd
sub
xor
pusha
shl
cmp
movsb
loopne
fwait
leave
pop
movsb
inc
sarb
pop
push
push
scas
jb
push
aam
push
adc
sub
bound
in
xchg
les
mov
icebp
jl
mov
cmpsb
add
loope
stos
cld
add
pusha
push
lret
add
cld
stos
add
hlt
jns
dec
pop
out
cmp
scas
mov
push
cmp
iret
outsl
pop
inc
ss
xlat
push
xchg
push
push
and
add
sbbb
and
movsb
shl
jne
lret
scas
int
push
mov
and
and
mov
jg
mov
fdivl
dec
fldenv
loopne
popf
xchg
loopne
in
add
cmp
dec
dec
dec
push
inc
adc
pop
jnp
aad
js
mov
sbb
jle
in
dec
int3
sub
push
push
sahf
and
jmp
and
ja
jmp
mov
roll
inc
loopne
or
repz
inc
mov
repz
mov
loopne
insb
sub
pop
inc
lahf
out
cmp
testb
push
mov
and
fistpl
test
add
ss
ret
scas
xchg
in
jne
andb
mov
cmp
sbb
adc
and
hlt
insb
ds
or
loope
jbe
xor
add
pop
aas
mov
dec
or
add
mov
scas
add
mov
push
adc
sbb
adc
add
mov
mov
fmulp
psubusb
push
jmp
mov
and
add
ds
and
xchg
leave
lcall
pushf
mov
pusha
sbb
inc
or
sub
clc
xor
in
shlb
add
inc
inc
ljmp
push
jg
sbb
movsl
mov
add
xor
or
rcl
shlb
scas
ret
cmc
sub
pop
popa
mov
jg
les
lea
fistpll
addb
xchg
div
jo
mov
insl
inc
inc
add
andb
fucomip
mov
pusha
subb
rolb
xchg
xchg
pop
movsb
loopne
xchg
outsb
fisubrl
rol
jmp
sbb
pusha
pusha
pop
ljmp
loopne
divl
popa
data16
jo
mov
xchg
std
cs
dec
fists
fpatan
pop
rcrb
in
addb
movsb
pusha
and
loopne
inc
inc
mov
sub
dec
dec
int3
pop
lods
lods
fsubr
adc
xor
mov
and
ret
enter
mov
mov
ja
mov
mov
inc
and
xor
push
fdivrp
jbe
out
imul
clc
movsb
shlb
jl
out
xchg
add
imul
push
in
and
rorb
adc
rorb
pusha
fdivl
add
push
insb
dec
call
fisttpl
push
sub
sbbb
mov
rolb
dec
mov
pop
adc
mov
jle
pop
ss
add
or
orb
loopne
push
sub
or
pusha
add
mov
shl
in
outsl
sub
mov
addb
dec
rolb
inc
ss
scas
mov
xchg
mov
dec
xchg
jo
arpl
mov
dec
jno
into
clc
or
inc
push
mov
and
sbb
cmp
loopne
aaa
mov
pop
fimull
stos
add
sub
add
cmp
sbb
sbb
out
loopne
sbb
mov
sahf
pop
sub
inc
iret
nop
xchg
addl
cmpsl
movsl
addr16
jl
mov
and
inc
pop
loope
or
add
jl
test
inc
hlt
fimuls
mov
mov
sar
inc
mov
arpl
fstpt
mov
mov
mov
insb
fcoml
adc
sbb
mov
mov
adc
or
and
sbb
stos
test
loopne
inc
mov
add
mov
inc
inc
push
push
stos
in
fwait
mov
pop
pop
inc
sub
dec
pop
sbb
cmpsl
inc
movsb
add
dec
mov
mov
loopne
mov
mov
outsb
mov
push
out
ja
push
stos
jae
mov
mov
je
push
cmp
pop
mov
shll
cli
imul
mov
push
pusha
mov
mov
insb
sub
rcl
cmc
pop
cltd
jp
pusha
and
clc
xchg
out
cmpsb
pusha
loopne
jno
inc
repz
sub
cmp
inc
lods
add
pop
pop
and
addb
adc
xchg
mov
insl
addb
xorb
xlat
mov
cwtl
xchg
stc
pop
xchg
cmc
ss
pusha
pusha
sbb
hlt
je
inc
inc
addb
lret
xorb
sbb
mov
ljmp
mov
fsts
xchg
cmp
pop
cmpsl
xor
sbb
pop
add
pop
loop
dec
mov
xor
add
sbb
xor
pusha
cmp
mov
and
mov
std
push
movb
lods
xor
xor
inc
jbe
sub
lret
or
mov
lret
orb
mov
imul
fstpl
and
movsb
pusha
pusha
push
xchg
shl
adc
mov
push
arpl
mov
pusha
cpuid
mov
addr16
and
pusha
mov
dec
jbe
mov
or
jle
dec
clc
adc
mov
dec
jp
dec
xchg
rolb
push
repz
movsl
out
adc
adc
dec
cltd
sbb
scas
add
into
icebp
in
dec
push
sbb
add
fs
mov
popa
hlt
out
and
add
andb
push
jo
and
inc
sbbl
ja
loopne
add
lret
xchg
mov
fmuls
or
mov
and
xor
loopne
mov
shlb
lods
push
loop
inc
mov
loopne
mov
and
in
push
lods
andb
rolb
std
iret
loopne
pusha
loopne
push
add
mov
pop
cmp
or
mov
stos
stc
cmpl
adc
pop
sub
in
addr16
xor
and
and
orb
mov
daa
mov
imul
jno
loopne
mov
push
push
andb
sub
ja
aad
xchg
add
and
movsb
shlb
push
add
lahf
sub
or
sarb
xchg
sbbl
mov
loopne
or
fcompl
lcall
pop
sbb
aam
imul
scas
loopne
mov
loopne
test
sti
out
imul
xorl
and
fdivs
dec
jl
filds
loopne
pusha
and
mov
in
out
mov
or
orb
std
and
push
outsb
mov
sbb
inc
mov
xor
lock
xor
mov
fucom
adc
cwtl
mov
lcall
inc
mov
loopne
mov
xchg
fiaddl
inc
jle
push
sbb
push
insb
mov
mov
push
ja
sub
pusha
repz
inc
inc
sub
jg
in
xor
cld
scas
pusha
mov
and
add
push
dec
clc
enter
mov
shlb
cwtl
cmc
in
clc
and
stos
and
sbb
shlb
rolb
rcrb
and
cld
mov
inc
rolb
or
jne
cli
mov
xor
jp
or
daa
xor
outsl
push
das
test
nop
adc
mov
in
jp
add
pop
jecxz
stos
add
cmp
add
inc
adc
ss
pop
push
push
cmp
popa
jnp
andb
std
xchg
jecxz
sahf
inc
imul
xchg
lret
push
leave
repz
jmp
inc
lcall
lock
testb
lds
addb
inc
or
inc
sbbb
cli
jbe
aam
xor
add
popf
addb
sbb
andb
clc
pop
mov
movsb
and
lds
inc
jg
cltd
cmp
call
outsl
mov
repnz
fdivrs
add
jns
fldcw
pop
adc
in
lock
push
in
and
ss
outsb
dec
aad
xlat
psubd
addb
inc
mov
jecxz
sub
jno
pusha
inc
jmp
mov
jmp
stc
flds
loopne
aam
shlb
std
filds
aaa
pop
stos
adc
xchg
insb
jp
rolb
mov
xchg
popa
lods
nop
stc
mov
pop
push
clc
aam
cmp
shll
ja
add
inc
jns
push
sub
sub
or
jge
lods
pusha
adcb
out
ds
ja
movsb
loopne
stc
loope
mov
mov
js
scas
in
jae
push
push
aad
jb
pop
inc
adc
jge
xchg
fwait
jnp
add
movsb
addb
or
loopne
shl
or
mov
orb
ds
cmp
inc
mov
pop
push
lret
mov
pusha
xchg
shr
inc
xor
ret
hlt
rclb
aas
and
dec
push
xor
cld
rcrl
push
mov
pusha
int
nop
inc
lahf
fnstenv
cwtl
adc
inc
xor
jecxz
rep
stos
rol
ficomps
add
ja
cmpsl
cmpsb
mov
pop
mov
sbb
mov
dec
out
pop
in
and
pop
loopne
rolb
int3
hlt
aam
shll
aad
sbb
fisttpl
and
je
outsb
jmp
sbb
cmpsb
add
xchg
sub
add
add
xchg
push
jns
xchg
stos
ljmp
loopne
jmp
pop
sbb
xchg
lret
mov
sahf
enter
inc
mov
inc
shlb
ret
push
cmc
xchg
shrl
out
dec
xchg
inc
test
xor
iret
sub
iret
sbb
adc
mov
jns
inc
mov
scas
rolb
decl
jl
adc
cmp
roll
andb
rolb
inc
inc
aaa
or
xchg
cmc
pop
inc
fcmovnbe
das
mov
mov
add
cmpsb
add
jae
testb
dec
mov
cwtl
pusha
or
shr
jecxz
push
sub
pusha
mov
into
fwait
dec
and
jp
loopne
fcmovu
iret
cmp
mov
lret
repz
insl
cld
xor
push
int
pusha
mov
cmp
in
sahf
icebp
clc
sub
out
in
dec
es
or
xor
addb
add
data16
lret
lahf
xacquire
mov
add
push
pop
addr16
inc
les
fcom
push
sub
add
in
popa
ljmp
les
inc
xor
loopne
adc
push
add
pusha
pusha
push
or
cli
or
stos
add
add
lahf
and
imul
flds
xor
push
sahf
testb
test
push
jp
jae
dec
out
test
and
inc
outsl
add
loopne
insb
mov
jl
sbb
scas
shlb
jmp
iret
xchg
leave
sti
fmull
inc
orb
in
pusha
inc
test
mov
addr16
mov
mov
loopne
ficoms
sbb
inc
into
rol
jno
jl
add
or
mov
loopne
xchg
pushf
inc
mov
xchg
movsb
and
xor
add
lods
fcmove
scas
shlb
xor
inc
rcrb
andb
rolb
jae,pt
cmpsb
loopne
mov
mov
dec
add
rcr
push
insb
incb
loopne
insb
test
pusha
pop
pusha
out
push
or
xor
leave
popf
cmp
lret
aad
nop
mov
push
outsb
xor
sub
nop
sti
gs
jae
xor
and
mov
jns
cmp
stos
shlb
nop
mov
push
sub
repz
mov
pusha
and
aaa
int
inc
xchg
adcl
and
rolb
cmp
add
and
mov
pushf
sbb
cli
jae
push
or
loope
mov
les
and
loopne
arpl
inc
sysenter
pop
adc
rorl
mov
inc
push
xchg
addb
pop
jb
roll
test
add
lods
pusha
mov
fnstcw
mov
mov
nop
dec
pop
shlb
in
add
insb
ret
fcoml
cmp
inc
mov
and
shl
cwtl
mov
sub
pusha
shrb
andb
adc
inc
push
insb
push
js
mov
mov
xchg
mov
pusha
rorb
pusha
fdivrl
mov
sub
andb
scas
add
fcmovnu
push
mov
repz
out
mov
push
rolb
in
popf
xor
outsl
mov
pop
xor
ret
or
inc
fstpl
cmpps
mov
pushl
imul
cltd
lcall
mov
push
dec
mov
pusha
add
xchg
hlt
mov
fmull
jmp
iret
push
mov
add
pusha
jmp
cmp
sbb
mov
fs
jae
and
test
popf
adc
test
shlb
xor
mov
clc
or
and
mov
and
pop
sbb
add
inc
xchg
and
or
and
add
inc
int
push
pop
add
mov
inc
dec
ret
mov
and
add
out
rorl
loopne
fdivrl
arpl
callw
mov
call
rolb
loopne
cmp
insb
xchg
xchg
sbb
cld
inc
out
adc
mov
add
inc
mov
pusha
subb
mov
pusha
loopne
xor
or
std
roll
adc
add
mov
ja
jg
popf
jnp
pop
divb
stos
and
dec
ret
inc
cmp
mov
xchg
lock
inc
shrb
test
inc
mov
inc
ret
adc
loopne
xlat
js
adc
mov
add
add
cmp
jb
add
sub
shlb
addr16
mov
adc
inc
cld
sahf
aas
repnz
push
dec
jnp
and
adc
das
xchg
dec
jbe
push
cld
push
jmp
jnp
pop
fmull
idivb
mov
inc
adc
loopne
mov
pusha
and
pop
add
insl
add
pusha
mov
mov
add
add
or
loopne
popf
stos
pusha
inc
adc
inc
and
mov
xor
add
jmp
stc
pop
std
aad
stos
add
sbb
push
jno
repz
mov
in
and
sarb
subb
lret
arpl
enter
popa
mov
negb
fcoml
aaa
pushf
repz
pop
je
pusha
add
bound
mov
mov
loopne
push
add
mov
inc
das
cmpsb
and
int
pusha
loopne
push
popa
jb
mov
jp
fstl
push
dec
stc
lock
daa
adc
out
and
xor
sahf
sub
cmp
inc
cmp
cli
hlt
cmp
mov
pop
mov
push
push
lret
mov
inc
neg
cmpsl
push
addb
lock
out
jno
add
adc
add
and
in
outsb
or
sbbl
sbb
add
push
ret
lahf
out
andb
xor
in
and
sbb
push
in
xor
cltd
or
out
mov
add
jns
xchg
mov
pusha
je
jmp
xor
adc
and
shr
stos
inc
shl
add
xchg
sub
and
and
imul
shlb
pop
in
mov
loopne
je
sbb
add
outsb
pop
lea
mov
add
and
shl
fstpt
push
or
push
cmpsb
loopne
iret
xor
stc
push
xchg
js
cli
jp
push
mov
mov
fsubl
rol
and
ror
jb
inc
push
sub
and
shl
mov
lcall
ja
and
inc
mov
and
addb
cmp
sarb
pop
xor
pusha
pusha
imul
loopne
add
outsb
mov
jae
jns
push
addb
cwtl
enter
cmp
add
xor
push
rorb
inc
pop
ficoml
shl
test
jno
movsl
mov
jae
pusha
sbb
in
sub
mov
pusha
loope
add
loopne
dec
shlb
adc
mov
mov
sub
cmc
cmp
mov
out
lea
xorl
add
loopne
loop
or
sahf
jmp
pop
incb
rorl
in
and
cld
inc
stc
lahf
loopne
lock
lahf
mov
inc
ret
push
stos
andb
and
push
mov
pusha
pop
mov
push
inc
ret
daa
fwait
pop
and
inc
pusha
out
out
push
push
jge
and
rolb
loopne
or
mov
dec
mov
cmc
loope
or
lahf
leave
sbb
jnp
test
test
mov
in
push
rolb
arpl
fs
xor
idivl
jecxz
inc
mov
mov
repnz
and
lock
add
pusha
out
ljmp
and
mov
xlat
out
or
loope
stos
mov
push
inc
loopne
loopne
in
lock
in
stos
mov
xchg
jb
inc
mov
sbb
push
push
shlb
mov
loopne
jae
sub
rcr
jecxz
fwait
mov
popa
lahf
outsb
cs
and
loopne
ja
mov
shlb
inc
ja
lret
push
and
rclb
ds
and
add
clc
fwait
dec
std
push
sub
mov
rolb
pop
and
adc
enter
add
cmc
push
test
out
fnstcw
bound
xchg
inc
or
mov
mov
add
pusha
mov
cmp
ljmp
loop
and
and
jg
cmpsb
mov
movsb
mov
int3
inc
sub
mov
add
and
cmp
shrb
jne
ds
outsb
repz
dec
lahf
test
xchg
adc
xchg
sbb
addb
and
xchg
cld
sub
jg
xchg
push
pop
sbb
loope
push
imul
into
loopne,pn
fnstsw
test
addb
arpl
pusha
shrb
sahf
pusha
sub
and
adc
pusha
inc
rclb
jg
pop
adc
mov
rclb
pop
mov
pop
jno
mov
mov
pop
push
repz
pusha
pushf
jns
repz
loope
push
mov
loopne
sbb
and
and
out
push
sbb
adcl
mov
mov
lds
cmpsb
pusha
andb
inc
pusha
push
jg
pushl
out
mov
aas
lods
add
cmpsl
aam
fidivrl
andb
loopne
cmp
pop
cmp
xor
loopne
jg
out
icebp
out
inc
add
scas
loopne
cmp
and
popf
mov
loopne
cwtl
or
stos
scas
shlb
aaa
mov
shlb
inc
and
sub
jg
sub
jp
pop
pusha
jb
icebp
ljmp
decb
xchg
and
mov
repz
and
loopne
cmpl
adc
jmp
dec
inc
sub
xor
mov
int3
mov
mov
pusha
inc
lds
push
clc
jmp
or
sahf
sub
mov
inc
es
inc
addl
dec
and
cmp
fnsave
aas
in
or
add
or
add
out
aam
or
add
mov
dec
inc
inc
sub
cmp
inc
xor
xor
xlat
and
jnp
lcall
ret
and
xchg
pop
std
in
sub
dec
cmc
mov
mov
dec
jg
jb
std
and
lock
lds
mov
jb
adc
jge
and
sub
pop
in
aam
repz
test
outsl
ja
add
lock
movsl
ljmp
mov
or
andb
loopne
cmc
xor
popf
xor
enter
push
inc
loopne
fdivr
add
and
testl
pop
adc
rorb
leave
fmull
mov
sub
inc
jmp
or
inc
sub
into
sub
mov
push
cmpsl
std
cmp
lahf
out
inc
fimull
imul
mov
sbb
roll
and
inc
imul
loopne
mov
add
outsl
movb
pop
leave
cltd
ds
rorb
inc
loopne
and
mov
sub
jl
mov
or
loopne
fmuls
cli
leave
mov
jp
mov
negb
pusha
add
fsts
loopne
iret
inc
int
cmp
xor
adc
add
lcall
mov
and
inc
outsb
mov
andb
mov
mov
leave
cltd
lds
stos
loopne
pop
xchg
xor
add
seta
cmp
aad
sub
shlb
and
cmp
and
xor
xor
aad
mov
pop
push
cld
cmp
test
mov
lret
jb
and
cmp
and
and
pop
std
cmp
jl
pusha
cmpb
loopne
push
inc
pusha
cmp
push
xchg
stos
pusha
and
and
orb
pusha
xlat
jecxz
mov
imul
addb
lds
mov
shl
mov
add
repnz
mov
inc
inc
dec
lret
dec
and
addb
mov
gs
adc
pop
or
adcb
inc
or
xorb
das
inc
in
inc
xor
mov
rolb
jle
imul
pop
imul
dec
or
loopne
jmp
addb
scas
mov
int
insl
and
orl
xor
jb
mov
aam
rolb
jmp
or
adcb
js
inc
dec
lret
cltd
pop
inc
jle
lods
les
mov
dec
xchg
xor
decl
and
loopne
push
sub
stos
and
xchg
decb
out
test
dec
mov
mov
adc
rol
add
loop
addb
int3
pop
sbb
out
pop
test
sbb
mov
aam
sahf
fucomip
mov
test
xchg
leave
icebp
cmp
sub
test
and
arpl
leave
sub
shl
fwait
inc
aas
out
xchg
lock
inc
das
sarb
testl
loopne
inc
push
shlb
rclb
mov
sarb
or
inc
xchg
xchg
cmpsl
int
in
push
addb
cli
ss
popf
cld
xor
shlb
pusha
loope
xchg
xlat
cmc
sti
mov
mov
pop
icebp
cmp
mov
outsb
mov
jae
or
cmpsl
ret
js
ficoms
jb
addb
jns
rolb
fdivrl
adc
cmp
cmp
jo
hlt
inc
clc
jno
mov
inc
ds
mov
insl
pop
loope
mul
addb
xor
push
or
shr
or
add
mov
lock
and
movb
or
fwait
push
dec
pop
shlb
push
sbb
cmpb
pusha
pop
mov
pusha
shrl
dec
xlat
stc
repnz
daa
sti
mov
pusha
nop
imul
lods
loopne
addb
mov
loopne
add
mov
outsb
ss
inc
mov
pop
out
pusha
and
xor
cmp
aam
mov
and
or
ret
das
adc
stos
jne
cltd
les
and
addb
sar
rcr
outsb
mov
int3
aam
arpl
and
add
lods
add
add
inc
insb
int3
jmp
and
push
gs
add
ror
aad
int3
or
incl
addb
aam
push
pop
leave
cltd
leave
mov
pusha
cmpb
mov
mov
inc
mov
out
or
sbbb
pop
int
in
shlb
mov
pusha
roll
loopne
push
push
sbb
add
jg
addb
dec
cs
add
mov
sub
and
mov
lods
sti
jb
jno
aad
bound
push
dec
dec
icebp
adc
clc
jl
jnp
loope
xchg
push
pop
mov
ljmp
sti
pusha
loope
pusha
inc
mov
mov
and
mov
mov
or
fwait
cmp
and
pop
sub
aam
dec
test
mov
fs
mov
imul
mov
cmpsl
xchg
aam
add
push
and
pop
add
ljmp
and
ror
dec
and
loopne
test
cs
and
and
mov
test
mov
mov
xchg
ss
mov
bound
cld
or
inc
mul
and
aas
mov
fcompl
or
mov
or
inc
xchg
sbb
mov
dec
ja
mov
mov
loopne
xchg
cwtl
stc
fsubr
xor
popf
icebp
les
and
aad
xor
pop
inc
rorb
xorb
rolb
xchg
fsub
mov
clc
pop
mov
cmpsl
sbb
iret
pop
loope
and
sbb
mov
inc
mov
and
xchg
or
push
add
sub
and
sub
adc
mov
pop
fsts
loopne
jb
push
loopne
std
jmp
test
inc
sti
movsl
stos
enter
scas
cmp
out
sahf
or
imul
add
pusha
add
and
and
rolb
and
movsl
xor
pop
mov
jne
mov
and
add
pop
mov
addb
roll
add
cld
mov
in
add
add
xchg
xorps
jae
pusha
mov
hlt
cld
and
inc
mov
adc
loopne
xlat
add
lcall
mov
pop
add
pusha
es
aad
test
inc
cmc
outsl
iret
sbb
and
or
sbb
cmp
shlb
dec
sub
add
int
jle
push
pusha
add
pusha
int
mov
add
addb
je
mov
movb
mov
in
lahf
sub
pusha
out
adc
stos
pop
test
popa
sbb
int
add
mov
inc
fisttpl
jge
push
cmpsl
gs
pop
jge
mov
loop
pop
fldcw
loope
gs
mov
lods
mov
push
jl
add
loopne
je
imul
andb
push
imul
sub
pop
mov
in
mov
andb
mov
out
jae
adc
or
andl
mov
and
mov
adc
xlat
pop
loopne
adc
and
mov
hlt
mov
mov
daa
dec
xor
or
fstl
dec
inc
scas
inc
loopne
cld
repnz
or
cmp
jno
int
mov
out
add
add
ja
cmp
jo
xchg
mov
mov
out
loopne
or
in
arpl
roll
movsb
inc
sub
pop
inc
mov
sub
sub
loopne
inc
ss
xchg
outsb
icebp
push
push
loop
aaa
pusha
sarb
inc
xorb
inc
mull
fdivl
jecxz
fs
lock
add
pop
das
lahf
stc
in
call
sbb
call
mov
push
ja
out
leave
lds
or
sub
test
inc
daa
fisubrl
andb
push
or
scas
xchg
cmp
loopne
xor
insb
push
rclb
jbe
inc
rolb
adc
pop
pop
add
sbb
fldenv
loopne
and
push
pusha
pusha
ljmp
stc
push
mov
repnz
sarb
and
andb
mov
pop
xor
pop
xchg
jo
fisttpll
outsb
sbb
cmp
gs
mov
mov
add
loop
xchg
dec
aaa
push
addb
mov
fldenv
data16
inc
loopne
sbb
cli
ja
mov
pop
add
and
xor
add
jo
dec
lods
out
lea
aaa
std
mov
test
mov
pop
jge
andb
cmp
or
sbb
aas
test
shll
outsl
add
lock
pusha
mov
and
push
fmuls
fs
ds
add
jmp
rcrb
xlat
pop
jmp
add
adc
add
mov
add
mov
mov
inc
sahf
iret
sar
jbe
xchg
mov
add
jns
cmp
jge
inc
orb
push
ficoms
fstpl
outsb
mov
shrb
sbb
daa
xchg
rcr
and
pusha
mov
xor
pop
push
or
mov
fistps
and
jbe
loopne
ficompl
push
sahf
ret
xchg
and
add
loopne
lds
rolb
add
roll
loopne
pop
inc
incb
and
lret
sub
jecxz
sbb
and
and
mov
and
xchg
inc
or
cltd
mov
je
or
arpl
in
je
roll
and
in
and
rcl
pop
lock
add
jae
je
or
mov
add
andb
dec
inc
neg
mov
das
push
stos
fdivrs
fs
and
inc
and
dec
mov
jae
jp
inc
and
push
sub
and
out
push
and
mov
sbb
cmp
mov
inc
sahf
outsb
inc
test
sti
out
mov
jae
and
test
int
mov
imul
push
jecxz
repnz
inc
mov
addr16
push
dec
or
loopne
xor
daa
inc
sub
adc
icebp
or
add
inc
inc
ds
push
or
inc
test
cmpb
adc
repnz
pusha
sbb
jb
mov
jbe
aaa
and
aaa
jbe
in
hlt
lods
loopne
mov
loopne
stc
stos
loopne
hlt
inc
insb
adc
ja
popf
mov
loop
loopne
mov
and
ror
dec
xchg
mov
sarb
jnp
int
and
xchg
repz
aad
dec
ror
cmp
mov
pop
push
mov
mov
cwtl
pop
cmp
add
add
inc
cmp
inc
inc
xor
adc
insl
inc
sahf
and
shl
xchg
stos
andb
pop
adc
pusha
and
pop
not
mov
inc
hlt
jmp
movsl
push
test
add
pusha
add
add
lods
and
fneni(8087
ret
dec
adc
sarl
xchg
aaa
xchg
push
ret
mov
addb
jno
xchg
shrb
inc
xchg
sub
loopne
je
sbb
xchg
dec
mov
or
mov
call
push
push
push
and
fwait
rcrb
jmp
add
leave
ds
xor
lea
aam
adc
iret
lock
cltd
shlb
clc
cmp
push
pusha
push
jmp
and
rorb
cmp
pusha
loopne
jmp
add
aam
mov
mov
pop
lret
dec
add
jg
stc
cmp
add
in
add
rclb
nop
aas
sub
dec
add
inc
and
inc
cmc
cmp
pop
mov
add
inc
push
stos
loopne
imul
sub
lea
and
xchg
repz
cmpb
add
aad
cmp
sbb
and
pop
out
adc
xor
shl
xchg
repz
cmp
outsl
mov
sub
fistpl
daa
icebp
dec
lcall
adc
xor
sbb
or
adc
pop
push
lahf
adc
ds
push
movsl
dec
sbb
xchg
mov
addb
mov
aas
xchg
into
ror
cld
lret
js
sbb
or
inc
call
pusha
add
in
popf
dec
imulb
inc
add
pop
clc
jge
jmp
insb
movsb
inc
shlb
loopne
fisubl
xchg
push
add
out
pusha
add
scas
jnp
ds
or
fwait
adc
pusha
loopne
sub
shrb
sbb
pusha
aaa
sbb
popf
adcl
bound
jb
and
js
cltd
fninit
jge
sbb
and
adc
fsubl
push
or
repnz
rcrb
enter
and
add
mov
push
mov
inc
pusha
lods
in
cmp
data16
out
lahf
test
dec
add
pusha
inc
pushf
bnd
nop
outsb
dec
fnsave
stos
and
mov
int
mov
into
pop
jae
scas
fisubrl
add
shrl
or
fcompl
mov
add
andb
sub
mov
shl
mov
mov
mov
jb
stc
test
inc
mov
pop
sbbl
mov
mov
and
inc
push
dec
jne
fs
addb
test
and
inc
fmuls
leave
or
sbb
stc
shrb
mov
adc
or
add
je
inc
stos
imul
shlb
add
ror
cmp
sahf
or
shrb
loopne
in
jmp
pop
sbb
clc
pop
lods
loopne
dec
js
mov
loopne
inc
inc
stos
pop
insl
mov
fdivs
or
ror
in
pop
dec
std
mov
fidivrs
pop
and
add
ds
adc
test
pop
mov
cmp
xchg
jae
add
add
dec
add
out
add
and
mov
xor
jp
loopne
ss
mull
pop
jae
dec
xchg
mov
inc
jo
or
add
subb
add
scas
pusha
pusha
jnp
add
xchg
sbb
icebp
aaa
xchg
and
loopne
scas
add
and
cmp
adc
xchg
loop
mov
in
add
xchg
inc
cmp
jo
rcrl
xor
and
mov
out
loop
mov
popa
pop
jmp
ret
mov
insb
or
cmp
jne
push
mov
xor
jae
ljmp
es
aad
add
pop
jmp
inc
and
dec
push
pop
fs
clc
push
jnp
ds
pop
sbb
or
imul
imul
mov
jb
stos
and
sub
pop
pop
bound
push
popa
fucomip
scas
in
fisubrl
xor
mov
lahf
jmp
addb
pop
sbb
xchg
imul
cmp
test
sbb
inc
adc
sub
xor
adc
mov
gs
jae
push
inc
rcrl
mov
mov
and
mov
stc
cmpsb
mov
mov
add
subb
inc
cmpsl
daa
add
cmp
mov
push
stc
mov
inc
pop
jns
inc
pop
xchg
pusha
jo
hlt
adc
add
rolb
loopne
cmp
fcompl
jns
mov
xchg
mov
xchg
jp
inc
inc
test
cmp
int
or
mov
push
incl
addr16
or
inc
loopne
aam
mov
fidivl
jmp
rolb
andb
sbb
or
and
jl
les
sbb
push
mov
push
inc
andb
adc
loopne
stos
mov
subb
decb
mov
sets
mov
dec
inc
mov
lods
add
rcll
pushf
lea
dec
push
in
fidivrs
lret
inc
test
add
test
loope
inc
nop
lahf
mov
mov
mov
pusha
rclb
insb
cwtl
mov
pushf
xchg
jmp
incl
inc
and
sbb
add
mov
loopne
fs
ret
mov
mov
pusha
mov
xchg
mov
and
out
fmuls
shlb
lds
push
sbb
shlb
gs
sub
cmp
sbb
pop
jp
add
mov
popa
mov
add
mov
and
pusha
sahf
xor
mov
leave
jns
daa
or
add
jne
andb
mov
jne
pushf
adc
lret
cmp
mov
loopne
mov
test
inc
pop
xor
aaa
cmp
add
sbb
bound
hlt
ss
jp
push
outsl
pop
test
pusha
ffree
inc
add
push
cmp
xchg
sub
fildl
lock
addr16
shrl
jbe,pt
aas
sub
inc
mov
jo
adc
cld
das
xor
and
js
shl
xchg
xlat
dec
add
jnp
mov
ret
dec
mov
movsl
push
push
jecxz
jae
out
fsub
sbb
cmp
loopne
xchg
mov
data16
sarb
stc
mov
add
push
lret
fwait
ja
push
popa
popf
shrl
notl
cmpb
fildll
inc
loopne
std
xchg
out
sbb
or
sti
les
test
js
dec
and
mov
andb
je
out
dec
daa
and
inc
mov
jno
addb
xor
pop
into
and
cmpsl
cmp
fnsave
lea
shlb
mov
push
mov
mov
xchg
mov
pusha
roll
stos
add
jnp
inc
mov
xchg
and
mov
jno
outsl
cmp
sbb
inc
inc
cwtl
pop
jecxz
aas
xor
lret
add
or
in
or
andb
sub
xor
cmpsl
jmp
add
add
adc
mov
int
push
sbb
or
loopne
mov
mov
sub
addb
inc
cltd
adc
lds
and
mov
or
cmpb
pushf
jb
into
add
mov
jmp
data16
sub
sar
jo
lock
and
mov
xchg
dec
add
std
addr16
or
mov
enter
add
pusha
mov
inc
shlb
sbb
jns
hlt
jp
or
add
xor
cmp
add
mov
jmp
shlb
push
mov
add
and
sbb
divl
jno
movsl
mov
sarb
push
pop
mov
adc
nop
mov
pop
jp
add
cmp
push
cwtl
sbb
add
sbb
sub
add
cwtl
hlt
dec
sub
mov
repz
adc
add
mov
enter
pop
jae
mov
mov
mov
sbb
xchg
ds
pop
mov
pusha
repnz
hlt
xor
pop
or
pusha
pop
mov
shlb
lret
pop
lret
or
icebp
aam
inc
dec
or
mov
and
and
out
xchg
lds
call
mov
call
loopne
mov
xchg
cmp
iret
mov
pop
pop
or
fs
adc
pop
mov
mov
jne
cmp
and
stos
pusha
mov
int
mov
in
ja
xchg
xchg
loopne
ror
mov
and
and
ficoms
sbb
popa
clc
imul
or
mov
dec
stos
ja
and
mov
xlat
lcall
shl
daa
push
pop
and
pusha
loopne
inc
sbb
rolb
push
ljmp
outsl
mov
jno
pop
testb
add
loopne
ffreep
inc
mov
sub
cmp
scas
cmpsb
shlb
andb
sbb
jns
jl
pop
jecxz
pusha
inc
int3
mov
add
push
push
bound
repz
mov
mov
adc
cmp
inc
fld1
and
ret
inc
mov
iret
sub
inc
xor
adc
and
imul
dec
cmp
cli
sti
sub
inc
mov
enter
or
loopne
and
lahf
pop
pop
and
pop
mov
sub
mov
imul
ss
insb
jle
sub
sbb
inc
stos
mov
xlat
mov
aas
jne
or
ja
andb
add
and
mov
push
andb
jns
scas
test
and
fmul
cltd
push
dec
mov
andb
jb
mov
mov
and
add
sbb
xlat
inc
rorl
orb
loopne
xchg
and
loope
fwait
in
clc
dec
je
pop
mov
adc
push
lds
add
incb
loopne
mov
add
add
mov
icebp
mov
scas
jl
and
jo
imul
push
cmp
xor
insb
addb
xchg
lcall
jecxz
push
loopne
push
pop
lods
inc
pusha
or
into
inc
ss
fstl
xchg
stos
add
pusha
and
pusha
out
lods
loopne
adc
or
mov
pusha
and
jp
scas
shlb
aad
or
and
scas
mov
sbb
jp
pusha
and
inc
pusha
xor
scas
mov
aas
push
sbb
loop
mov
pop
pop
insb
adc
clc
cmp
popf
js
fs
outsb
dec
lcall
je
or
cmpb
xor
aas
es
xchg
leave
mov
arpl
mov
push
and
pop
cmp
dec
adc
sub
and
test
or
xor
inc
inc
loope
xlat
jle
mov
loopne
scas
shlb
jae
inc
inc
sti
jo
inc
inc
fwait
sbb
test
inc
sahf
rolb
loopne
ret
mov
rolb
mov
in
adc
iret
clc
and
jns
movsl
xlat
mov
inc
add
mov
or
loopne
add
push
stos
dec
data16
pop
or
mov
das
push
stos
fwait
arpl
out
xor
mov
jns
push
adc
xchg
ds
scas
inc
xorb
pop
jge
dec
pop
loopne
sahf
sbb
mov
das
xlat
or
xchg
loop
or
adc
iret
jns
idivb
ret
gs
sub
pusha
inc
popf
and
gs
xchg
sub
mov
lahf
cli
xchg
pop
mov
aam
jmp
mov
xchg
es
add
stos
mov
dec
push
std
and
aaa
sub
mov
test
fbstp
inc
cmp
dec
mov
cmpl
cmp
push
jo
pop
call
dec
fbstp
int
scas
adcl
call
dec
mov
jle
or
and
loopne
xor
pusha
pusha
test
loopne
push
pusha
add
push
out
inc
mov
fwait
add
rclb
fwait
push
jns
adc
push
push
pusha
loopne
insl
pop
mov
mov
and
cmp
and
xorb
push
loopne
mov
ja
scas
inc
shlb
out
push
rorb
pop
stos
mov
repnz
jl
pop
adcl
ret
or
sarb
and
mov
loopne
insb
andl
out
popf
jp
aam
cmpl
and
out
ja
xor
rorb
pop
or
or
in
xchg
jb
fwait
cmpsl
add
mov
loopne
lea
loopne
inc
ret
mov
leave
cmpl
rolb
pop
mov
and
dec
jl
es
inc
lods
cmp
clc
pop
dec
mov
mov
inc
add
sub
and
jno
sub
mov
loope
out
ret
out
stc
iret
or
adc
mov
scas
dec
call
adc
push
inc
fs
jmp
imul
cli
cmp
test
jle
sub
rolb
das
jb
push
push
add
inc
push
dec
ds
loopne
adc
mov
testb
mov
lahf
call
ret
cmpsl
xor
loop
negb
addr16
xor
loope
call
mov
xchg
jmp
cmp
insb
insl
ljmp
mov
cwtl
imul
add
jno
adc
push
decb
loopne
and
dec
rcrl
sub
pop
pop
xchg
dec
push
shlb
lret
push
adc
pusha
add
xchg
pop
popa
add
jno
cmp
shlb
pop
cmp
fsubl
and
sub
and
mov
add
arpl
shlb
cmpb
push
loope
mov
dec
enter
pusha
inc
hlt
cmp
into
jo
or
int
out
xchg
dec
sbb
sbb
addr16
fs
pop
out
outsl
repnz
loopne
sbb
or
and
lock
push
int
jbe
divb
push
pop
and
cld
movsl
fwait
insb
fadds
out
mov
in
gs
sbb
pusha
rcrb
adc
xor
addb
cmp
roll
pusha
fisttpll
loopne
mov
ss
push
push
ljmp
ja
adc
imul
aam
addb
stos
add
out
mov
pushf
push
sti
lret
dec
jo
lcall
xor
push
mov
sub
mov
outsl
test
sbb
adc
and
loopne
pop
test
mov
insb
cs
and
mov
jns
or
add
nop
sub
insl
sti
xchg
jns
movsl
push
sub
test
mov
adc
dec
adc
push
inc
int3
lcall
andb
pop
mov
mov
mov
neg
rcll
cltd
inc
pushf
flds
mov
xchg
xchg
mov
inc
fs
daa
into
call
pop
jns
sbb
inc
loopne
add
or
jne
pop
addr16
mov
in
in
adc
jb
cmc
inc
jno
mov
loopne
in
mov
pop
idivb
daa
insb
or
rcl
fwait
mov
dec
jp
lahf
cld
sbb
cltd
adc
loopne
nop
jecxz
inc
dec
mov
mov
mov
mov
mov
cmp
cwtl
inc
fdiv
jg
push
add
loopne
imul
and
pusha
cmp
push
daa
lahf
aaa
jns
ffree
adc
xchg
mov
jo
add
sti
test
into
jge
adc
add
loopne
jmp
pusha
pusha
out
rclb
push
pop
mov
xchg
pop
loope
dec
jl
xchg
mov
test
loop
jns
lahf
fiaddl
and
mov
adc
cmpb
js
in
addb
sbb
jmp
pusha
adc
cmp
lock
and
sbb
or
rcrb
fidivrl
cmp
pusha
jecxz
mov
insl
jl
sarb
andb
mov
mov
add
add
pop
pop
bound
mov
or
pusha
clc
and
mov
incl
loopne
pushf
pop
fsubl
add
sub
shrb
mov
loopne
aaa
mov
rolb
imul
dec
dec
jmp
fnstenv
inc
inc
adc
pop
mov
add
jbe
inc
mov
movb
inc
push
jnp
pop
js
jne
xor
cwtl
sub
repz
pusha
xorb
orl
out
scas
imul
adc
or
inc
fisubrl
and
imul
adc
xchg
push
sbb
and
mov
repnz
popf
nop
pop
push
mov
sub
pop
and
and
adc
cmpsl
ss
push
jmp
sbb
aas
in
or
mov
xchg
jne
andb
cmp
inc
mov
rolb
repnz
int3
jle
jns
mov
loopne
dec
sarl
popa
into
popf
pop
imul
je
or
mov
mov
xor
lods
pusha
add
std
insb
xchg
xchg
sarl
xlat
mov
mov
sbb
dec
insl
sti
dec
cmp
fs
cli
repnz
push
jne
mov
out
mov
pop
dec
bndldx
and
shlb
in
jmp
pusha
rclb
xor
cli
xor
adc
sbb
xchg
sbb
pop
sahf
inc
cwtl
cmp
inc
movl
mov
mov
xor
icebp
push
cli
adc
adc
cmp
xor
or
pusha
or
cmp
sti
sub
and
pusha
cmpsl
fs
mov
sub
repnz
adc
mov
pop
cmp
adc
mov
push
jo
and
in
stos
loopne
ja
sbb
jmp
testb
add
int
rolb
ja
xorl
movsb
inc
add
jno
sti
push
inc
insb
mov
and
ss
cld
push
and
pusha
outsb
lock
stos
lret
sub
loopne
inc
inc
dec
sahf
mov
inc
sti
sbb
jmp
addb
add
mov
nop
jmp
inc
and
orb
repz
push
add
add
inc
aam
cmp
test
xlat
dec
push
mov
loopne
jne
sub
adc
add
xchg
cltd
dec
dec
outsb
jb
dec
push
fildl
dec
mov
pop
sub
shlb
andb
ds
xchg
rcrb
icebp
push
leave
outsb
bound
loope
xor
andb
add
mov
addb
shl
call
fsubl
shl
adc
and
jo
xor
rol
mov
loopne
mov
loopne
stos
out
mov
inc
inc
lcall
jbe
cmpsl
sbb
xor
pop
inc
pop
out
pop
mov
add
test
mov
add
lock
mov
sbb
popa
jns
push
call
adcb
sarb
xchg
add
shlb
sar
mov
loopne
das
dec
scas
sbb
sbb
and
sbb
loopne
and
fadds
xor
lods
add
iret
adc
scas
imul
push
mov
stos
das
shlb
xor
lahf
cmp
js
and
mov
sbb
aam
rep
sub
and
cld
clc
jbe
rorl
and
add
in
push
loope
inc
cmpb
cmp
pop
cmpl
loopne
sti
mov
mov
mov
loopne
and
aas
popf
daa
ret
pop
fidivrl
xchg
loopne
sbb
add
pusha
movsl
mov
and
mov
call
lods
inc
shlb
hlt
out
or
mov
inc
mov
jno
jb
jo
aas
adc
out
sbb
pop
mov
dec
icebp
pop
cld
add
sbb
lret
or
aaa
jle
inc
jl
leave
fisttps
gs
inc
mov
xor
jno
and
and
in
sbb
clc
addr16
add
loopne
adc
in
adc
inc
push
mov
add
adc
sahf
add
popf
data16
mov
xor
loop
pop
fcos
push
sahf
push
xor
in
out
jo
cmp
sbb
or
mov
rcl
mov
loopne
jecxz
rol
mov
jge
ds
jns
sub
pusha
ljmp
andl
pusha
cmpsl
out
xor
pop
mov
sbb
jae
xor
xor
push
ficompl
int3
mov
adc
sub
or
inc
mov
inc
inc
xchg
fldt
andb
cwtl
das
pop
mull
and
mov
dec
addb
icebp
mov
loopne
lds
lods
rolb
push
push
sbb
jmp
mov
pop
push
adc
loop
arpl
out
mov
cmp
xor
push
nop
cmp
sbb
mov
mov
shlb
jns
shl
add
xor
rcrl
add
rorb
and
mov
sub
mov
test
loopne
add
xchg
andb
sahf
bound
dec
sahf
call
loopne
popl
andb
loop
jl
and
shlb
call
xor
lds
jnp
xchg
add
jg
nop
jae
dec
int
ds
lahf
inc
mov
je
cmp
jae
mov
xchg
mov
sahf
pop
inc
pop
inc
add
rcrb
fcmove
push
mov
rolb
inc
xor
loopne
jb
adc
pusha
mov
and
rolb
cvtps2pd
movsb
inc
rcrb
mov
lock
rcrb
sub
and
rolb
inc
mov
push
sub
loop
xchg
popf
ret
push
loopne
call
lahf
adc
ss
outsb
adc
jle
sbb
das
es
push
adc
pusha
and
sub
dec
jns
mov
dec
stos
jbe
daa
add
ljmp
mov
roll
rcll
nop
idivb
lahf
lock
inc
lea
addr16
icebp
xchg
mov
lret
adc
mov
inc
int
jmp
jecxz
xchg
lret
insl
into
sub
and
rorb
popf
cmp
in
popa
mov
shlb
movsb
mov
lods
pop
ficoms
aas
cmpsb
pusha
and
fstps
push
icebp
aaa
lods
pusha
add
pop
ljmp
add
add
cmp
pusha
sub
dec
push
int3
fists
mov
loopne
outsb
pop
sub
loopne
mov
in
cmp
fwait
cld
mov
cmc
push
iret
inc
mov
inc
stos
aad
ds
sub
jecxz
jb
or
xor
mov
loopne
dec
add
and
adcb
iret
lds
aas
xchg
mov
adc
sub
mov
adc
pusha
add
int3
or
inc
stos
cmp
pop
stos
imul
mov
dec
fwait
and
adcb
fstp
xchg
mov
or
loop
cmp
js
mov
push
push
gs
popf
cs
arpl
xchg
andl
fs
xchg
andb
sbb
pusha
and
and
subb
mov
adc
iret
je
popa
pop
movsb
shlb
loopne,pn
aad
rolb
stos
rol
push
mov
outsl
insl
push
and
adc
pop
data16
sbb
jge
mov
lret
ds
dec
imul
shl
mov
mov
sub
shl
mov
rcr
leave
jle
ret
jl
dec
aas
xor
xor
mov
ror
sbb
or
addb
jl
mov
xchg
mov
mov
data16
jge
lea
mov
inc
pop
xchg
push
xchg
daa
mov
rolb
loopne
sub
mov
pusha
cmp
push
rolb
andb
xor
subb
loopne
mov
fs
mov
sbb
int
push
adc
je
scas
nop
sti
out
aam
xor
test
mov
lahf
addb
popa
arpl
mov
jbe
lcall
fiaddl
andb
inc
stos
loopne
fidivs
push
ljmp
insl
andb
push
jae
pusha
loopne
loopne
xchg
daa
movsl
scas
inc
out
dec
lret
jo
aaa
loopne
add
std
out
das
mov
andb
rcl
mov
addb
pushw
lock
sub
inc
mov
mov
fisubrl
dec
jne
enter
icebp
and
jb
mov
mov
xor
lret
cmc
push
mov
outsb
icebp
imul
sub
add
rclb
adc
scas
loopne
dec
inc
pop
in
inc
dec
int3
fwait
mov
adc
inc
sbb
shr
inc
mov
imul
add
mov
xorb
lods
jno
loopne
lock
fistps
fcomps
vmovaps
shl
pop
xor
add
hlt
jo
xorl
movsb
andb
shl
inc
andb
xchg
cmp
nop
push
mov
push
adc
in
in
dec
nop
cmp
and
shlb
ret
inc
out
adc
lea
mov
inc
int3
xor
and
lods
add
jo
fists
in
lea
movsl
sub
orb
or
push
sbb
sub
xchg
pushf
scas
and
pop
movl
js
mov
jp
sub
add
addb
pop
sbb
js
and
add
and
rol
scas
fstpt
jmp
and
fbld
push
dec
mov
aaa
push
dec
iret
add
add
cmp
rcll
in
ficompl
fsubl
fs
andb
sbb
cmp
mov
loop
xchg
test
loopne
je
mov
mov
scas
and
movsb
rolb
fwait
jecxz
rolb
cwtl
cmp
mov
sbb
iret
or
inc
mov
lahf
pop
inc
aad
gs
ret
xchg
cmp
sub
rorb
pop
das
push
cli
cmp
lods
and
addb
and
rcrl
pop
cmp
sbb
add
imul
and
inc
int3
mov
shlb
lahf
adc
jbe
fidivrs
rol
lock
loop
aam
inc
ret
xchg
and
inc
pushf
and
ss
je
movsb
mov
mov
cmp
mov
mov
rorb
add
inc
mov
cmp
sbb
add
dec
insl
negl
addb
add
inc
shlb
lock
pop
movl
and
pushf
pop
test
addb
xchg
cmp
outsb
ret
int
mov
mov
add
mov
and
rolb
xchg
lahf
xor
ret
dec
pushf
enter
sbb
mov
xor
add
pusha
ljmp
addb
dec
sbb
dec
in
mov
dec
mov
or
stos
and
push
mov
cmc
and
pusha
cmp
jge
push
test
out
push
or
and
dec
ja
mov
cmp
fmull
and
lock
je
jne
xor
pusha
loopne
neg
mov
mov
push
fsubrs
outsl
jp
mov
xchg
mov
stc
dec
and
mov
fs
in
fidivs
pop
loop,pt
cmpl
pop
xor
add
loopne
pusha
add
mov
iret
jb
orl
pusha
mov
mov
push
dec
jecxz
sub
mov
xchg
inc
xchg
outsb
leave
enter
mov
out
jge
pop
addb
dec
adc
mov
andb
lahf
pop
lret
jmp
jecxz
stos
adc
mov
loopne
movsl
hlt
insl
push
clc
jb
rorl
mov
sub
jno
in
adc
fwait
outsb
mov
push
push
scas
loopne
loope
push
jbe
loopne
mov
cmp
sub
je
das
push
loopne
inc
faddl
mov
and
and
test
add
or
pop
cmp
adc
notl
adc
lea
xchg
fisubs
fldl2e
inc
mov
arpl
pusha
inc
out
jecxz
jbe
lods
dec
jl
pusha
loopne
add
adc
adc
shll
jne
jmp
mov
test
and
mov
mov
and
loopne
jmp
and
and
stos
shll
xor
pop
dec
sbb
je
jnp
aam
lods
inc
jo
cltd
cmp
jae
dec
unpckhps
sub
shlb
scas
aam
push
mov
add
in
mov
test
and
outsb
sub
pop
out
cli
fadds
pusha
loopne
adc
hlt
addb
test
loopne
jmp
out
cmp
popf
in
stc
inc
jne
mov
xor
dec
pop
imul
jno
add
rolb
pop
push
mov
scas
andb
xor
push
into
push
dec
out
sbb
std
aam
lods
pusha
orb
rol
adc
movsb
add
ret
or
test
loopne
icebp
jge
scas
rolb
adc
lds
mov
pusha
loopne
mov
loopne
pop
enter
xchg
out
dec
movsb
inc
shlb
or
inc
out
inc
cmpsl
ret
fistps
mov
lods
mov
xor
insl
sub
push
scas
cmp
dec
insb
jae
pop
or
addr16
aaa
rcrb
cmpsb
loopne
jb
sti
jne
or
fcoms
outsl
rcr
loopne
add
inc
loopne
mov
mov
test
sbb
mov
pop
inc
xlat
mov
movsl
fdivr
repnz
adc
add
dec
inc
iret
dec
add
pusha
sbb
icebp
add
mov
negb
and
loopne
mov
inc
fisubs
pop
nop
add
loopne
add
pop
rorl
mov
dec
lock
add
scas
testb
loopne
adc
mov
rorb
add
shl
rcrl
inc
loopne
sub
sbbb
xor
and
mov
mov
imul
adc
jno
aad
inc
mov
inc
outsl
ret
gs
inc
or
sub
and
cmpsb
shlb
adc
rcrl
sub
pusha
fcomps
sbb
out
inc
push
fadds
ja
add
mov
dec
aaa
fcomps
shl
repz
sahf
jae
scas
mov
pusha
or
inc
imull
add
mov
adc
dec
dec
or
add
and
mov
mov
jno
psubq
cmc
sahf
incl
shlb
inc
mov
ds
les
out
push
dec
cmp
push
mov
rolb
adc
fstl
mov
mov
and
xor
mov
or
and
in
pop
je
inc
mov
or
loopne
sar
and
mov
jecxz
jecxz
sub
pop
inc
stos
cmc
sbb
rolb
add
andb
add
dec
jge
call
xchg
rcll
leave
sub
enter
loopne
loop
stos
stos
shl
rorl
mov
loop
pop
ljmp
push
xlat
mov
ret
test
add
loopne
adc
xchg
jmp
inc
loopne
push
shl
sub
xchg
jae
xorl
pop
lret
mov
lcall
and
add
sbb
mov
loopne
rolb
fmulp
rol
call
stc
jp
bound
mov
imul
adc
add
and
pushf
mov
imul
loop
pop
add
outsl
iret
push
lret
arpl
andb
and
rolb
push
mov
inc
cwtl
mov
jnp
mov
inc
jecxz
inc
dec
in
gs
andl
mov
out
ljmp
sti
enter
adcb
jne
or
shlb
mov
and
jl
mov
sub
pop
icebp
push
jecxz
iret
fwait
loop
xor
loopne
cli
js
mul
mov
loopne
aaa
fstenv
nop
rorb
in
icebp
insb
add
mov
insb
rolb
or
loopne
cwtl
test
andb
shr
push
call
out
push
jnp
shl
mov
insl
fisttpl
pop
int
pop
cmp
xor
jge
fwait
jne
push
mov
les
mov
bound
mov
int3
jmp
test
loopne
loop
add
inc
pop
jge
iret
or
and
add
daa
jns
mov
imulb
enter
xchg
xor
lock
mov
pop
sbb
jecxz
mov
addb
pop
shll
shlb
fnstcw
cmc
aad
jbe
clc
mov
addl
and
xchg
ret
push
sbb
and
loopne
or
andb
insl
jp
stc
inc
movsl
mov
movsb
mov
loope
or
add
rcr
ja
mov
pushf
fbld
add
addb
andb
jmp
test
sbb
cli
fldt
mov
jnp
and
xorb
mov
jg
fcmovnb
addb
cmpsb
mov
in
or
loopne
shlb
jmp
loope
sbb
dec
shll
adc
out
shlb
xor
and
clc
or
and
stos
jo
jle
insl
iret
andb
movb
add
fdivr
clc
or
mov
jmp
andb
and
fs
inc
shrl
pusha
adc
loope
rolb
xchg
push
mov
push
xchg
add
ds
jbe
inc
cmpsb
loopne
sbb
rorl
out
mov
mov
jle
cmp
mov
addb
mov
aam
repz
pop
nop
mov
dec
cmpsl
and
aaa
loop
mov
sarb
pop
fwait
cmp
test
pop
in
lcall
scas
rol
mov
out
inc
icebp
push
dec
inc
ret
adc
add
and
je
sub
sti
rcrl
les
pusha
pop
fwait
push
xchg
jb
test
xor
int
adcl
push
cmpsl
sar
in
ljmp
shll
ret
mov
jecxz
xorl
addr16
enter
mov
loopne
loopne
mov
bound
gs
and
add
cmp
inc
pop
pop
mov
std
pop
or
xor
in
mov
stos
loopne
inc
arpl
sub
and
cmpsl
cmpsb
loopne
icebp
xchg
adc
ljmp
gs
and
shrl
sbb
adc
lret
mov
subl
or
pusha
daa
int3
mov
inc
mov
int3
jecxz
xor
andb
ret
jl
pop
sbb
aas
fadds
pusha
xorb
xchg
and
rcrb
mov
push
mov
cmc
and
mov
mov
inc
add
add
xchg
insb
or
mov
js
push
inc
mov
int
mov
jno
cli
push
cli
mov
cmpsb
pusha
shl
add
mov
mov
rclb
inc
shrb
loope
dec
push
andb
loop
fiadds
lahf
cmp
xor
mov
je
pusha
mov
repnz
xor
dec
or
rclb
push
es
mov
subb
mov
mov
or
mov
sar
cmpsb
pusha
add
mov
add
sub
xchg
test
andb
sti
jp
cmp
pop
loopne
push
or
xchg
mov
cmpsl
mov
imul
test
es
push
notb
inc
cmp
shlb
std
mov
add
jecxz
andb
mov
and
inc
dec
ja
mov
xchg
cmpsb
loopne
and
and
stos
add
into
mov
or
pusha
push
addb
cmc
jl
lahf
jae
std
sub
sar
or
mov
addl
adc
pusha
sar
movsb
loopne
adc
xchg
push
add
push
shlb
add
lret
aam
xorl
jecxz
test
xor
out
test
mov
testl
lcall
cmp
mov
test
inc
addb
lahf
xlat
pop
frstor
shr
jne
mov
and
mov
and
iret
andb
pop
nop
sbb
sarb
and
and
popa
push
add
pusha
and
xchg
andb
pusha
mov
add
add
and
inc
jnp
mov
mov
leave
and
push
cltd
mov
mov
add
and
mov
rorb
addb
insl
push
subl
outsb
iret
pop
int3
dec
incb
filds
pusha
loopne
mov
fcmovnb
mov
pop
push
mov
lea
mov
aaa
pop
arpl
dec
cmpsb
andb
iret
cmp
loopne
mov
addr16
fmull
popf
sbb
btsl
outsb
outsl
push
sarb
add
inc
inc
cmp
jae
sub
add
outsb
sbb
aaa
dec
pop
mov
popa
xchg
sub
push
shlb
pop
and
mov
loop
sbb
and
loopne
add
inc
push
push
loope
rorb
shrb
fs
adc
fistl
mov
mov
sbb
mov
or
lock
shrb
das
fdivl
xor
mov
add
lods
mov
push
ret
nop
and
pusha
pusha
aas
xor
pop
les
out
das
dec
inc
je
inc
inc
test
in
sbb
aaa
fisubs
popf
jp
sbb
sti
loope
add
cmp
dec
aaa
xchg
lret
mov
aaa
sbb
test
mov
mov
loopne
xchg
push
and
xorb
pusha
mov
or
add
inc
inc
xor
xchg
clc
xchg
inc
push
mov
push
shlb
cmp
cmpsb
loopne
and
in
mov
std
lods
pusha
pusha
out
fmull
or
loopne
in
mov
dec
push
leave
mov
addb
fbstp
sbb
mov
mov
jp
sti
mov
mov
pop
jp
dec
imul
push
into
rorl
andb
xchg
in
outsl
sbb
push
ss
or
pop
push
push
lahf
jle
cli
pop
pop
out
mov
cmp
pusha
inc
aas
cmp
xorb
imul
mov
sahf
sbb
aaa
xchg
idivb
pop
xchg
jge
add
xchg
leave
lret
cmp
pusha
and
lds
or
xor
inc
mov
into
dec
dec
imul
xchg
push
mov
push
or
pusha
xchg
loop
add
data16
in
and
sarb
add
arpl
and
js
jge
stos
add
shrb
mov
xor
jae
inc
pop
push
inc
xchg
mov
and
add
inc
subb
adc
pusha
idivl
ljmp
xchg
fdivrp
push
inc
les
xor
inc
test
cltd
andb
mov
loopne
lret
push
lahf
and
pusha
dec
je
pop
mov
adc
data16
rclb
cmp
sbb
xchg
pusha
pusha
andb
stos
and
ret
outsb
and
adcb
jle
push
push
cltd
adc
push
xlat
jbe
daa
in
jl
mov
rcl
xlat
ds
lcall
icebp
xchg
aam
mov
rolb
test
ja
shl
movsb
add
out
push
add
cmp
adc
fadds
imul
les
mov
aad
icebp
adc
push
jecxz
into
dec
or
mov
jns
mov
jae
int
sahf
push
dec
icebp
test
add
loopne
imul
mov
testb
dec
pop
push
lret
cli
lds
les
out
aam
adc
or
mov
pop
pop
push
mov
fidivrl
mov
insl
std
aad
popf
jecxz
pusha
scas
loopne
int
jmp
sbb
in
jns
pusha
rorb
incb
shlb
cmpsb
rolb
adc
jnp
mov
jecxz
jno
test
loopne
mov
or
cmp
lods
loop
fisubs
rolb
mov
push
lahf
in
jb
mov
add
jp
pop
xor
stc
loopne
stos
shlb
orb
adcb
cmp
mov
loop
cmp
add
add
ss
and
andb
push
push
adc
bound
jge
inc
loopne
iret
ss
dec
push
cmp
js
xchg
sub
inc
hlt
sbb
mov
rcll
inc
outsl
mov
inc
sbb
idivl
mov
adc
lods
cmpl
loopne
ds
popf
jl
inc
rolb
popa
push
addb
pop
lods
pusha
rol
loopne
push
pop
mov
adc
loopne
enter
loopne
roll
test
pop
xchg
adc
pusha
shr
adc
orb
push
pop
mov
orb
mov
rcll
in
cmp
inc
push
inc
addl
rolb
in
mov
push
push
leave
mov
xor
rclb
push
and
add
inc
fs
aad
sub
jp
mov
arpl
jne
andb
addl
in
and
pop
or
mov
jmp
push
fdivrl
test
stc
sub
sbb
inc
mov
and
pop
popf
stc
inc
jg
sbb
xor
dec
mov
inc
andb
inc
add
cmc
pushf
or
movsb
shlb
repnz
mov
cmpsl
pushf
scas
shl
arpl
mov
mov
dec
out
cmp
jo
pop
scas
shlb
and
add
adc
daa
xor
push
sbb
repnz
cmp
xchg
cltd
mov
idivl
loopne
sarl
lea
loopne
pop
sub
pop
add
push
mov
xchg
xchg
in
and
enter
and
rol
and
pusha
inc
pmaxub
sbb
mov
test
and
sub
cmovbe
inc
pusha
in
push
and
cmpsl
insb
lret
test
fdivrl
inc
or
subb
test
add
cmp
jae
add
cli
aam
jecxz
sub
sub
and
mov
add
pusha
or
addb
add
push
add
and
rcrb
cli
dec
sbb
out
and
push
jnp
gs
push
jl
add
mov
nop
testb
in
or
mov
xor
push
ss
jp
sti
xchg
cwtl
movsl
xor
xlat
dec
call
inc
sbb
cmp
mov
push
push
fmuls
add
hlt
mov
in
push
in
and
mov
ret
test
add
test
movsb
mov
lret
adc
es
sarb
sbb
aaa
jno
push
paddsw
out
push
andb
xor
popa
jno
dec
add
loopne
repnz
test
adc
in
shrb
loopne
push
cmpsl
nop
or
and
repnz
data16
inc
sub
inc
leave
cltd
nop
cmpsl
lahf
jne
xor
sbb
loopne
shlb
inc
in
arpl
jbe
add
andb
push
and
jns
inc
hlt
mov
inc
fdivrs
aaa
addb
fwait
rcrb
imul
das
movsl
je
and
pop
push
sub
loopne
push
loopne
jg
out
insb
push
loopne
pop
enter
aas
hlt
mov
xchg
cmpl
or
inc
lret
pop
jb
loopne
rolb
lret
mov
mov
shlb
add
cwtl
xlat
or
sar
mov
sub
iret
xchg
aas
lods
lods
cwtl
or
shlb
mov
rcrl
sbb
daa
xor
ret
cmpsl
popa
adc
subl
lods
cmpsl
pop
mov
fsts
loopne
cltd
ret
cmpsb
inc
loopne
iret
xchg
mov
mov
loopne
stos
mov
loopne
sti
icebp
or
sar
fs
jne
jp
and
rclb
fcmovbe
cmp
xlat
jne
mov
cmpsb
and
add
loopne
leave
push
mov
pusha
mov
pop
je
insb
mov
and
add
repz
adcl
outsb
fs
je
mov
push
and
pusha
mov
ret
andl
push
rorl
ret
pop
cmpsl
lahf
cmp
inc
mov
popa
out
rol
sbb
pop
out
mov
and
dec
jb
lods
mov
adc
cmc
adc
dec
mov
and
pusha
push
cld
cld
mov
and
shrl
and
and
add
repz
add
mov
or
rorb
pusha
inc
or
xor
push
sbb
mov
push
xor
std
xchg
and
xchg
ficoml
rcrl
mov
fwait
or
andb
cli
inc
negb
jb
les
mov
and
aaa
xlat
cmpsl
std
outsl
lea
jg
fwait
xor
lret
addb
add
shrb
arpl
lds
xor
dec
adc
sbb
cmpsl
or
rclb
jge
or
push
inc
mov
and
pusha
daa
cmpsl
outsb
xchg
shl
cld
pop
je
fcmovnbe
xor
inc
and
mov
pop
xor
add
ficoml
add
rorb
sub
roll
pop
mov
mov
mov
pusha
shlb
add
add
sbb
inc
inc
push
add
and
loopne
pop
push
or
or
push
cmp
inc
adc
loopne
shll
arpl
testb
push
ja
in
push
mov
dec
int3
inc
andb
adc
je
popa
scas
shlb
fs
xchg
mov
mov
ds
sbb
jno
mov
mov
cmp
out
xchg
ds
loopne
outsl
aaa
xor
sbb
add
pop
fs
push
inc
adc
jmp
hlt
sbb
rcrb
sub
jl
movsl
fildl
out
in
bound
popa
scas
pusha
loopne
repz
movsb
rol
clc
adc
push
ljmp
push
mov
cmp
movsl
leave
pusha
xchg
mov
andb
sti
andb
testl
mov
and
mov
mov
fwait
add
iret
xchg
pusha
add
cmp
dec
xor
daa
sbb
lea
adc
addr16
shlb
push
add
pop
lods
test
mov
loopne
scas
pusha
inc
cmp
mov
cmp
xadd
and
scas
inc
xor
mov
pusha
test
shlb
jnp
mov
mov
adc
jp
rol
mov
push
push
jge
pop
call
dec
lods
add
in
icebp
pop
lahf
push
mov
shl
loopne
add
push
lods
imul
pop
ret
je
push
dec
fstpt
cmp
addb
pop
in
mov
add
fs
push
mov
or
pusha
cmp
arpl
mov
loope
and
pusha
and
inc
popa
fistps
mov
pmaddwd
pusha
pusha
test
les
add
dec
inc
dec
adc
xlat
inc
or
loopne
jl
dec
push
dec
or
loopne
jns
fildll
xchg
in
inc
and
or
inc
jo
jae
fwait
cmp
cmp
mov
dec
mov
andb
inc
loopne
mov
rolb
sub
inc
xchg
jg
cmc
mov
mov
sbb
push
add
pop
sub
shlb
nop
and
add
in
lret
mov
in
xor
imul
inc
out
fidivl
ljmp
push
sub
shl
lods
and
sar
pop
lods
rolb
loope
pusha
loopne
fs
mov
mov
add
fcomip
sbb
data16
adc
inc
mov
cmpsl
sarb
fisubrl
add
pop
sti
mov
pusha
mov
rcl
push
inc
subb
mov
loopne
andb
loopne
std
mov
test
imul
sbb
sub
scas
loopne
inc
sbb
xor
shrb
xor
add
add
jecxz
add
mov
dec
shlb
aas
enter
ds
out
jecxz
xor
jg
addb
add
inc
shrb
movsl
les
out
ficoms
xchg
movsl
sbb
aam
cld
push
aas
adc
dec
dec
dec
mov
rolb
sub
mov
call
inc
mov
aaa
int
js
clc
ljmp
sub
dec
sbb
sbb
push
sbb
push
je
ret
scas
and
push
leave
paddusb
inc
sub
rolb
mov
mov
and
loopne
in
dec
mov
sahf
sub
or
mov
popf
fnstcw
jmp
rorl
adc
ret
mov
hlt
ds
mov
sub
mov
add
lcall
push
fcmovbe
loopne
sub
pusha
cmp
in
jbe
dec
cmpsb
inc
mov
mov
outsl
dec
leave
ds
cmp
fwait
add
adc
mov
loopne
jl
andb
repz
test
aam
xchg
xlat
daa
inc
sub
sbbb
adc
sub
add
cmc
hlt
sbb
pop
jp
mov
inc
xchg
xchg
dec
cmp
loop
xchg
test
inc
xor
lret
repz
cli
lret
push
pusha
add
dec
lahf
das
mov
jns
mov
loopne
out
aam
push
and
mov
pusha
loopne
lret
mov
ljmp
sbb
pusha
dec
mov
mov
inc
mov
sub
fildll
jbe
aam
add
loopne
mov
dec
xchg
rol
push
mov
push
aam
cmp
outsb
mov
shlb
test
and
push
je
andb
fcmovne
or
add
daa
xor
mov
sub
inc
cmc
inc
enter
sbb
xchg
xlat
mov
and
mov
mov
cmp
pusha
addb
sarb
inc
iret
in
rcrl
stc
cmp
xor
sub
shr
inc
fiadds
loopne
lds
pusha
pusha
gs
mov
inc
and
fbld
xchg
xchg
jae
loop
rcll
push
out
pop
lahf
jno
or
ret
cmpsl
imul
outsl
xlat
dec
jg
xchg
dec
pand
pusha
sbb
testl
cwtl
ss
pop
mov
xlat
add
loopne
xor
rolb
push
shll
jns
repz
xchg
leave
pop
enter
mov
and
clc
daa
aas
aam
test
mov
test
pop
push
mov
mov
mov
xchg
jl
sahf
mov
repz
adc
and
call
shlb
mov
dec
mov
shlb
push
pushf
mulb
push
dec
stc
ret
into
mov
sub
mov
sbb
js
add
pop
test
pusha
ljmp
add
lcall
push
imull
pusha
mov
or
mov
jns
es
pop
test
mov
mov
sbb
mov
shl
jbe
mov
and
mov
inc
test
lock
sbb
push
fnsave
rol
jecxz
and
rcrl
xor
stos
decl
fwait
sub
loopne
dec
mov
shrb
addb
add
jle
cli
imul
adc
pusha
sarb
test
mov
xor
outsl
mov
add
addb
fucomi
jp
std
fdivrl
idivb
pusha
addr16
gs
fdiv
xchg
in
sub
shll
loopne
aam
cmp
leave
cmp
pusha
mov
add
sbb
jno
inc
loopne
or
add
mov
inc
fsubrl
add
shll
aas
mov
jg
andb
pusha
pusha
sub
xor
xchg
jle
sub
xchg
ret
notl
addb
xor
and
pop
xchg
rcr
mov
arpl
pop
rclb
xchg
out
push
xchg
rclb
add
add
sub
js
mov
inc
mov
pop
loopne
adc
sbb
shlb
frstor
and
out
cmpsb
loopne
or
fwait
icebp
and
cmc
std
add
loopne,pn
dec
adc
jno
xor
iret
jns
jb
mov
push
and
mov
sub
push
mov
sbb
std
sub
inc
inc
sub
mov
rolb
mov
mov
mov
pusha
mov
mov
imull
and
loopne
cltd
or
add
jmp
mov
ret
inc
pop
lret
push
imul
pop
pop
inc
sub
add
sub
inc
xchg
notb
adc
inc
lock
shl
pop
mov
jae
mov
pop
push
loopne
sbb
add
sub
mov
arpl
add
jge
addr16
mov
pusha
adc
mov
pop
std
mov
clc
cmp
cmp
fiaddl
add
mov
mov
rolb
pop
xlat
mov
loopne
js
adc
fldl2t
push
xchg
or
jae
jo
lahf
push
push
and
cmpb
ret
and
cli
cmpsl
add
add
add
