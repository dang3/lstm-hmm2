add
sbb
dec
addb
add
and
add
mov
or
addb
add
sub
add
add
nop
add
add
add
or
and
add
add
add
orb
add
add
add
add
and
popa
add
rolb
or
add
or
orb
add
add
add
cwtl
addb
and
push
or
add
add
adc
inc
add
adc
or
add
add
add
test
or
adc
add
add
add
inc
add
adc
or
add
add
addb
orb
adc
add
add
add
inc
inc
add
and
or
addl
add
add
sub
add
add
add
add
inc
add
add
adc
and
in
cmpsb
cmpsb
std
mov
push
out
and
xchg
push
in
notl
sub
add
outsb
add
pop
std
add
hlt
xchg
and
mov
pop
jbe
enter
dec
xchg
mov
and
insb
sti
sbb
ss
dec
jbe
inc
ja
ffreep
dec
gs
scas
outsl
cmp
add
cmpsb
out
cs
dec
daa
repz
out
aad
mov
sbb
enter
mull
dec
add
push
movsl
es
setl
loop
movsl
into
jmp
cld
mov
xchg
fs
xor
nop
push
push
and
popf
scas
pusha
adc
cmpsl
insb
mov
adc
dec
enter
mov
inc
test
loopne
cmp
je
jns
lock
je,pn
pop
or
mov
sub
lock
fsubrl
or
and
pushf
cld
out
mov
or
and
out
push
insb
inc
mov
xchg
sbb
sti
pop
and
in
clc
dec
pop
lret
mov
xchg
cmp
inc
sarb
in
out
lds
cwtl
cmp
xor
ret
cmpsb
pop
mov
push
sti
inc
movsb
jnp
pop
outsl
or
clc
out
push
push
cmp
out
and
jl
hlt
and
sbb
mulb
addr16
jle
cmc
imul
aad
imul
push
cmc
out
and
jge
enter
mov
mov
lock
mov
push
xchg
lock
and
scas
out
mov
ss
stos
jle
sub
push
xlat
movsb
sbb
cmovle
adc
mov
lock
out
and
lods
scas
ss
lods
ss
lock
cmpsb
out
xor
cmp
repnz
out
and
xchg
cmp
cmpsb
movsb
daa
nop
jle
ja
and
xor
daa
hlt
movl
hlt
popf
leave
mov
cld
jb
lock
out
xor
fmuls
and
sub
push
in
scas
in
insl
loopne
shrl
ljmp
add
sub
mov
repnz
hlt
push
jbe
int
out
in
daa
imul
pop
inc
mov
out
adc
hlt
pushf
divl
js
scas
stc
ljmp
jne
mov
lock
insb
out
repnz
lock
jmp
and
icebp
neg
jbe
pxor
subb
and
mul
test
out
push
divl
aad
out
mov
loopne
dec
aaa
mov
sub
xor
jge
fidivs
scas
loop
stos
push
fists
xlat
jb
inc
movsl
fbstp
shlb
sub
incl
dec
mov
pop
sub
stos
push
cmc
mov
cmp
aaa
xor
ja
inc
rcl
push
mov
aaa
jo
cpuid
inc
jne
iret
add
in
aaa
mull
test
mulb
mov
xor
mov
gs
jnp,pt
into
and
out
jbe
leave
and
mov
ljmp
mov
enter
push
aas
mov
ljmp
loope
cli
sub
addr16
jbe
out
repnz
cmc
sbb
lock
mov
mov
inc
cmp
out
mov
je
mov
cmp
xchg
out
sub
aaa
stc
and
movsb
fs
and
clc
and
shlb
xor
movsb
das
lods
ret
add
mov
inc
sbb
cli
out
xor
scas
pop
jae
and
clc
and
cli
clc
out
aad
adc
and
sub
cli
and
mov
ds
jp
pushf
divl
js
mov
jb
aam
scas
out
mov
repz
pusha
pop
out
and
mov
negl
jbe
pop
cmc
mov
lret
in
xchg
xor
daa
filds
cmpsb
fdivrl
inc
cli
out
out
and
clc
mov
dec
mov
divl
xchg
stc
mov
js
jne
or
subb
enter
hlt
daa
out
and
push
imul
ja
xchg
icebp
repz
and
icebp
in
out
and
lock
mull
jb
mov
lock
leave
cmc
ja
xchg
aaa
jg
out
ja
or
out
push
dec
pop
or
jnp
das
rol
jno
mov
mov
mov
add
aas
mov
std
xor
inc
xlat
push
les
jecxz
jne
out
xor
clc
inc
fwait
xor
and
jle
ret
mov
jae
dec
jmp
push
add
mov
jae
ja
sarl
mov
cli
imul
rcrl
push
sub
pop
xchg
clc
jno
xchg
js
stos
daa
mov
outsb
and
cli
push
inc
mov
and
fs
sbb
pmulhw
adc
and
inc
mov
pop
shll
mov
lcall
out
dec
mov
test
add
ss
shrb
sub
and
cs
in
cmp
adc
jns
icebp
jb
aaa
test
sub
or
dec
nop
lock
xor
adc
subb
out
div
daa
and
aam
aaa
daa
xor
popa
mov
adc
xchg
push
aam
bound
adc
icebp
dec
adc
jno
ja
fidivrl
sub
and
inc
pop
sahf
cltd
and
test
fbld
imul
jno
push
inc
push
fbstp
cmp
stc
xor
pop
mov
and
mov
jns
clc
int
daa
jne
xor
out
or
lds
pop
loop
push
shl
ficompl
cs
repnz
lods
cmc
pop
loopne
push
bound
sub
mov
mov
jo
popf
test
cmp
pop
add
pop
jge
xor
leave
adc
push
xchg
and
fs
fwait
nop
cmc
xlat
jge
cltd
dec
aaa
cli
jno
repz
inc
int3
pop
js
addr16
cmp
mul
sti
xlat
mov
push
cli
rclb
mov
dec
push
mov
jge
mov
test
pop
lcall
jae
or
push
pop
testl
xor
push
xor
out
inc
out
or
cmp
add
and
sbb
xor
gs
jg
xor
stos
mov
stos
add
push
stc
xor
mov
jns
dec
scas
inc
push
popf
js
and
push
mov
inc
mov
xor
mov
cmp
and
jmp
mov
call
pop
inc
xchg
cmpb
in
mov
das
rorl
aad
mov
lods
mov
jecxz
or
jns
cmp
cmp
mov
push
mov
ret
lods
jo
pop
xchg
ror
dec
pop
aaa
adc
cmp
lock
inc
xor
clc
arpl
and
iret
test
inc
inc
jb
jmp
push
inc
add
xchg
cs
iret
cli
repz
mov
lea
push
xor
push
or
mov
inc
and
ss
leave
leave
jmp
mov
imul
push
sti
cltd
or
cmpsb
xor
pop
inc
inc
cmpsl
mov
cmp
mov
lcall
sarl
imul
mov
pop
push
test
xchg
inc
nop
into
repnz
bound
mov
scas
rcrl
idivl
mov
fistps
loopne
repnz
jnp
sub
mov
loopne
add
add
lret
dec
dec
out
mov
test
mov
lock
mov
and
xchg
cmp
daa
pop
fwait
inc
inc
mov
pop
pop
sub
fsubrl
aam
pop
or
fiadds
xor
xor
test
scas
sbb
pop
xor
pop
mov
pop
fdivr
das
xor
push
add
or
call
sub
enter
inc
mov
mov
push
mov
adc
and
add
add
inc
jns
xchg
add
xchg
in
pop
add
out
pop
repnz
mov
insl
cmp
pop
loop
cmp
mov
loopne
cwtl
adc
outsl
std
push
add
jb
and
jb
into
dec
lcall
outsl
pop
sub
shll
adc
add
jne
xor
repz
scas
mov
icebp
clc
inc
sub
jl
stc
int
gs
aas
outsl
cmpsb
push
inc
pop
push
jb
repnz
mov
sysenter
and
push
testl
std
jp
mov
sbb
mov
sub
inc
mov
inc
shlb
pushf
repz
adc
stos
xchg
xchg
jns
cmp
pusha
orb
cmpsb
sub
sub
cmp
ret
mov
add
pop
sub
dec
cmc
test
cmp
pop
outsl
loop
and
mov
push
cmp
call
jb
push
aaa
cmp
mov
das
add
push
jle
lods
dec
xchg
loop
je
stc
or
sbb
leave
mov
mov
mov
leave
xchg
mov
cld
das
cmpsl
or
cli
dec
ds
dec
pop
xor
aaa
mov
jmp
pop
push
sbb
push
aad
push
cmc
sub
xor
js
jno
xor
sbb
jnp
pop
push
and
sub
sbb
pop
fsubs
fdiv
xor
mov
cmpb
inc
icebp
clc
jbe
push
ficomps
es
sbb
cmpsl
or
pop
adc
add
in
sub
iret
ljmp
mov
cmp
cmc
jle
sub
pop
sbb
jbe
push
jno
das
gs
jg
mov
mov
or
mov
or
mov
dec
aam
negl
mov
gs
lahf
mov
repz
ja
sub
loope
sbb
fmulp
orb
sar
cmp
out
push
xlat
push
jb
xchg
lcall
js
pop
xlat
or
pushl
mov
pop
fsubrs
aas
scas
lods
push
repnz
repnz
xor
pop
push
fwait
mov
scas
jo
add
push
ss
jb
adc
inc
inc
aam
sbb
sbb
sbb
clc
fs
fbld
addr16
jp
aas
iret
jbe
mov
jb
cld
xchg
or
cmp
xchg
imul
push
dec
adc
mov
je
mov
jp
xchg
or
push
filds
out
mov
fstps
nop
pop
arpl
dec
in
inc
into
jno
mov
cmp
adc
testl
sti
jle
cmc
int3
jno
mov
std
add
lock
cmp
push
call
mov
test
xor
mov
movsl
push
inc
inc
mov
sub
sbb
mov
aaa
aam
ret
sbb
xchg
ja
fiadds
mov
push
ret
in
repnz
pop
sbb
cmp
enter
js
cmp
repnz
cmp
mov
inc
cltd
lods
xor
add
fists
enter
mov
jp
insb
add
mov
push
inc
xor
jle
sbb
ss
pop
cs
jo
retw
rcl
mov
jl
push
jg
call
dec
dec
cltd
mov
push
jle
mov
mov
xor
addl
xor
fsts
shlb
or
mov
xor
mov
cmovl
loope
mov
dec
js
rorl
mov
insl
jecxz
push
scas
jb
jo
pop
mov
jb
fdivr
jle
adc
out
mov
or
sti
iret
jo
pop
sbb
dec
enter
shll
call
cmpsb
pop
out
cmp
mov
bound
jg
mov
imul
mov
dec
bsr
jmp
mov
sbb
dec
jge
jnp
mov
pop
mov
shlb
loop
dec
sbb
push
rorb
adc
notb
mov
sbb
test
and
hlt
cmp
es
cmp
sub
jle
push
jbe
lds
push
sub
loope
icebp
std
hlt
aaa
cmp
lods
pop
jmp
cld
sub
push
push
cmc
mov
insb
stos
jp
mov
mov
idiv
rcr
xor
repz
pop
mov
das
cmp
mov
cmp
xor
adc
mov
sbb
rcrb
cmp
push
testl
int
pusha
inc
xchg
js
int
inc
test
notl
das
in
jge
add
adc
in
imul
jge
jl
dec
testb
std
mov
xor
out
lock
push
daa
push
inc
popf
ret
push
mov
xor
xor
lods
out
pusha
and
cs
cmp
aaa
sub
dec
sub
or
add
sbb
jb
out
xor
loop
push
jp
cmc
push
cmp
int
into
or
out
sbb
mov
mov
adc
leave
aas
xchg
and
adc
cmc
mov
mov
es
iret
mov
insb
les
ret
or
mov
jno
loope
cmc
mov
daa
mov
jb
push
imul
jae
push
imul
jb
mov
push
pop
jg
movsb
jl
bound
or
add
cmp
fisttpl
jle
pop
jp
xor
cmp
js
jne
insl
scas
adc
dec
mov
mov
nop
pusha
hlt
dec
bnd
icebp
or
icebp
popf
ss
ljmp
filds
leave
div
notb
adc
push
out
push
xor
cmp
cld
mov
hlt
xor
push
cmc
mov
dec
mov
adc
pop
addb
test
push
push
test
stos
arpl
in
daa
xchg
xchg
test
enter
xor
xor
xor
xlat
sbb
add
ds
add
aad
scas
jl
lods
mov
jb
js
andb
cwtl
xor
loop
lods
sbb
adc
add
mov
xchg
lds
movsb
inc
mov
js
push
icebp
rclb
clc
pop
sti
loope
out
lret
aaa
xchg
ljmp
enter
leave
mov
aas
pop
and
jge
int3
icebp
mov
push
and
sub
mov
add
in
aaa
or
dec
pop
and
movsb
pop
movsb
stc
lcall
das
daa
mov
mov
mov
mov
shrl
mov
int
stc
rol
das
popa
outsb
lods
mov
mov
mov
shlb
cmp
xor
aaa
bound
xor
cmpsl
mov
popa
mov
add
and
in
jns
xorl
stos
adc
pusha
cmp
pop
jp
xchg
inc
lock
loopne
mov
adc
xchg
ds
cmp
hlt
cbtw
ds
lahf
rclb
sti
mov
sbb
mov
fisttps
test
scas
fadd
test
test
outsl
loop
mov
jo
mov
jb
mov
insb
test
and
es
scas
lret
inc
jno
cmp
stc
lock
jg
das
ret
mov
mov
arpl
xor
mov
jne
test
sbb
sbb
jnp
dec
mov
sub
fisttps
das
lds
cmp
or
xchg
stc
lods
pop
cmp
into
jo
das
gs
arpl
test
xchg
arpl
push
inc
mov
cmp
or
mov
jg
enter
pop
cmp
lods
xor
mov
sbb
mov
loopne
divl
push
inc
cwtl
jl
cmp
adc
xor
pop
sbb
pop
int3
lret
addr16
push
fwait
jne
pop
stos
adc
mov
loop
cmc
sahf
mov
ret
cmpsb
jbe
test
test
stc
jmp
sub
jg
xchg
and
mov
pop
pop
lds
ficoml
arpl
jp
stc
scas
jno
rcr
int
mov
add
mov
notl
divb
repnz
inc
sahf
xor
dec
xor
add
inc
and
ret
mov
fdivl
imul
pop
cmpsb
xor
adc
sbbl
xchg
cld
jae
add
lcall
jp
jno
lock
cmp
lods
clc
adc
aas
pop
rcrl
gs
imul
adc
mov
and
ja
cmp
cli
inc
cmp
je
push
cmp
cmp
fmulp
icebp
divb
push
cmpsl
lods
lock
int3
pop
pop
push
jns
mov
push
jp
pop
cmp
jl
jno
pop
lds
icebp
cmc
xor
cmc
and
ds
shrb
sub
loope
lock
jg
movsb
inc
mov
hlt
sti
jnp
int
lea
fisttps
mov
jne
jl
jmp
aaa
loop
mov
lock
ljmp
es
aas
cmp
ss
stc
cmpsb
lahf
xor
adc
dec
js
fisttpll
clc
ljmp
jmp
and
mov
push
lret
and
inc
les
mov
addl
ret
push
cli
cmp
xor
fisubrs
add
xchg
dec
shrd
and
mov
mov
xchg
les
inc
jb
imull
lea
dec
hlt
pop
lods
push
add
push
push
ja
mull
shll
in
outsb
frstor
movb
mov
dec
fbstp
aad
jno
xor
jbe
movsb
pop
sbb
mov
or
dec
roll
jae
shlb
add
cmp
cmpsb
xlat
jno
push
dec
mov
int
jne
in
cmp
ss
lahf
cs
aad
push
jle
sbb
movq
or
es
fsubs
gs
cs
pop
call
xor
push
mov
out
cmpsb
icebp
test
ljmp
lock
iret
jns
pop
test
fisubl
inc
cmp
sbb
xchg
fwait
aad
cltd
jbe
cli
stos
leave
lods
and
lods
fisttps
inc
jp
sub
test
fcomp
out
out
pop
jge
mov
fwait
nop
scas
mov
ds
mov
inc
add
repz
xchg
xor
add
pushf
in
andl
xor
sarb
inc
hlt
rolb
rcrb
daa
call
pop
adc
xchg
es
jns
or
cld
dec
jg
mov
repnz
test
call
jg
cmpsb
xlat
adc
mov
jmp
mov
jmp
outsl
bound
mov
sahf
cmp
ds
or
lds
push
mov
rcrl
dec
mov
or
testl
lahf
test
stos
add
jne
cs
push
jno
fs
add
add
cmp
lahf
adc
or
popf
mov
push
stos
aad
or
sbb
in
ds
adc
xor
jbe
fadds
xchg
add
cs
rep
movsl
cmp
adc
test
mov
dec
imul
and
jp
imul
test
fsubrs
repnz
popa
sbb
and
sahf
les
outsl
nop
xchg
xchg
adc
test
and
jo
repnz
xor
mov
mov
pop
out
jle
out
xlat
mov
xchg
sbbb
icebp
sub
lret
lods
in
dec
jne
push
xor
popf
sti
mov
aaa
xor
imul
mov
pop
cld
sbb
lods
pop
repnz
add
push
add
xchg
jo
stc
das
push
in
cmpsl
mov
ret
ljmp
cmpb
xor
repz
mov
pop
addr16
arpl
xchg
add
clc
sbb
pop
sub
mov
or
loope
addr16
add
enter
xlat
test
mov
rcrl
lea
mov
loopne
ja
xor
fnop
sbb
cmp
xchg
stc
push
mov
daa
jnp
pusha
push
xchg
rclb
fst
and
lock
mov
pop
js
ret
sbb
mov
mov
test
fisttps
mov
jno
daa
dec
dec
outsl
sub
fsubp
inc
je
adc
jnp
xlat
xchg
in
mov
in
xor
mov
xor
xor
mov
shrl
je
aad
xor
out
scas
push
mov
pop
jbe
frstor
js
jp
loopne
ja
idivb
mov
mov
ds
mov
mov
je
loope
mov
stos
cmp
rolb
dec
shll
mov
hlt
ror
ret
cmp
lcall
in
xlat
movsl
mov
and
shrl
cmp
push
or
add
sbb
or
cli
cmp
ror
repz
jmp
mov
mov
dec
mov
js
loope
mov
nop
xchg
outsl
adc
jns
jecxz
leave
iret
dec
cmp
push
loope
pop
das
add
nop
mov
cli
ret
push
jne
iret
push
inc
jb
ds
xor
negb
mov
lcall
and
add
cmp
dec
repz
adc
std
arpl
cs
fmull
js
mov
jmp
aaa
jns
hlt
or
iret
sbbb
aas
xchg
jp
jecxz
dec
inc
popf
and
fistpl
sub
aaa
inc
mov
fwait
cmp
push
enter
out
pop
mov
arpl
mov
and
test
daa
mov
mov
pop
xor
pop
xchg
jp
jnp
add
cwtl
sub
cli
rclb
outsb
cld
inc
scas
mov
push
sbb
stos
jne
sub
jb
repnz
dec
mov
int
jb
dec
mov
call
xchg
mov
push
data16
loop
ja
mov
lahf
adc
sarb
xchg
push
and
testb
pusha
xorb
or
inc
jno
xchg
or
mov
jno
inc
jle
in
mov
ret
mov
test
bound
sub
in
pop
bound
jp
adcb
mov
add
icebp
xlat
mov
repz
aas
out
pop
pushf
adc
ljmp
sbb
imul
nop
dec
aam
icebp
out
mov
out
ret
pop
jno
and
rcrl
push
xchg
je
jnp
mov
test
mov
inc
insl
add
and
cli
cmp
jnp
adc
xorl
jl
mov
mov
push
xor
outsl
andb
push
push
test
aaa
sbb
jp
or
mov
js
pop
data16
lcall
push
xchg
jg
dec
push
mov
dec
cmpsl
es
xorl
das
cmp
bound
lret
xchg
lock
jnp
jnp
andl
xchg
repz
cld
sub
cmp
jno
hlt
adcb
or
adc
imul
add
repnz
xor
mov
mov
xor
popa
push
orl
xor
sub
mov
testl
pop
jbe
insl
jg
test
jmp
cmp
xorl
enter
adc
add
xchg
out
hlt
sbb
out
mov
test
arpl
pop
insw
dec
jge
sub
sub
pop
jb
mov
jmp
movsb
jno
adc
nop
daa
mov
popa
mov
out
inc
pop
mov
test
jl
dec
stc
inc
push
add
jae
cmp
mov
jb
adc
scas
stos
push
cmpsl
xor
sar
call
ss
jp
mov
or
jne
test
jnp
cmp
and
inc
mov
xor
jo
das
inc
enter
fsubl
cmp
and
adc
xchg
cmp
ret
add
push
lret
sbb
imul
xchg
mov
into
dec
mov
cmp
mov
idivl
adc
sub
sti
cmp
pop
mov
ret
cs
or
fldln2
jle
push
mov
xor
loopne
mov
in
push
cmp
cmp
mov
mov
push
pop
fisubrs
sbbb
and
push
addr16
sub
js
mov
inc
jo
adcl
xor
pop
xlat
scas
or
xchg
outsb
ja
js
outsl
adc
sub
dec
lock
sbb
mov
dec
mov
xchg
cmc
or
add
mov
int
jo
cmp
mov
dec
push
mov
lcall
adc
jb
movsb
sub
mov
dec
mov
cld
mov
movsl
jmp
outsb
pop
mov
in
dec
movsl
pop
je
lcall
mov
xchg
mov
cmpsb
call
outsl
fldl
and
cmp
add
ficoml
scas
repnz
sbb
std
loope,pn
add
xlat
push
mov
lods
mov
js
lahf
scas
mov
pop
or
jns
les
cmove
add
add
inc
jno
ja
int3
pop
das
mov
jmp
inc
pop
push
xchg
jl
jne
ss
dec
mov
inc
jae
rcrl
sub
and
clc
sub
push
nop
dec
cmp
mov
mov
mov
ficomps
push
icebp
aas
xchg
outsl
push
stos
movsb
push
xor
shrl
addr16
aas
arpl
clc
test
enter
push
jae
xor
inc
mov
inc
jb,pt
leave
sarb
dec
inc
stc
and
push
aaa
xchg
cmc
push
pop
push
popa
or
ffreep
pop
sbb
adc
ror
ret
repnz
add
push
adc
xchg
mov
jb
xchg
push
xchg
enter
call
xchg
jnp
jnp
andb
jl
sub
pushf
int
xor
fidivl
jbe
ret
cmova
inc
js
add
pop
cmp
jge
or
push
cmc
gs
and
jo
mov
aaa
and
xchg
ljmp
dec
cmpsl
pushf
and
mov
repz
jae
jb
mov
mov
and
xchg
jg
sub
js
sahf
jnp
mov
xchg
mov
fidivs
jb
xor
inc
add
sahf
adc
jl
cltd
std
pop
pop
cmp
imul
or
fstpt
cmp
jp
push
jp
xor
fwait
jp
repnz
fisubrl
pop
mov
pop
test
ss
js
push
ret
cltd
pop
xchg
arpl
adc
push
add
stc
test
xlat
push
inc
adc
xor
ja
and
inc
xor
aas
sahf
lret
les
and
sub
mov
mov
sarl
pop
pop
dec
jle
add
lret
mov
add
fistpl
push
xlat
cld
add
mov
sub
xor
test
je
insb
ja
shlb
lea
imul
jns
lret
test
stc
je
test
bound
mov
dec
je
iret
mov
adc
cli
mov
xor
jb
jg
out
push
das
mov
js
and
inc
cld
xchg
fbstp
xor
mov
and
enter
mov
ss
cli
jnp
push
mov
addr16
fldenv
pop
outsl
or
adc
shrb
and
sub
lods
xor
add
jbe
xchg
inc
xchg
jb
mov
jae
jl
jno
cld
loope
push
aas
insl
or
jp
sub
aam
fisubrs
pop
mov
xchg
test
adc
inc
out
jle,pt
pushf
add
sub
jg
mov
cmp
jp
ss
imul
ret
inc
push
sub
addr16
jge
hlt
push
jbe
js
arpl
divl
mov
es
stc
cmpsb
cli
mov
xor
sub
cwtl
mov
push
enter
lcall
out
adc
pop
add
cwtl
push
xor
lret
jecxz
cmp
mov
addr16
sbb
loopne
jmp
xchg
inc
fcmovb
std
jg
xchg
out
inc
das
aam
outsl
dec
mov
adc
mov
lea
adcb
push
dec
push
xchg
aad
push
or
jne
pushf
std
rol
ds
cmpsb
sub
push
sub
and
sahf
mov
cmp
and
or
adc
lcall
mov
jg
mov
dec
loopne
jno
inc
aam
xor
je
sub
push
mov
dec
sbb
scas
imull
cwtl
popf
jle
jg
ja
add
in
dec
je
arpl
inc
and
stos
mov
mov
mov
xchg
cmp
cmpsl
cmp
mov
aas
pop
call
int3
aaa
fsubrp
pop
jecxz
cmpsb
sti
pop
bound
or
insb
js
mov
mov
dec
rcrl
jmp
mov
adc
scas
pop
in
jb
in
repnz
xchg
xor
rorb
mov
popf
jmp
jecxz
lods
fwait
loopne
inc
mov
fisubs
push
add
inc
test
pushf
rclb
pusha
ficoml
push
int3
xor
push
addr16
out
js
and
or
leave
xor
stc
in
icebp
dec
sbb
test
inc
insl
cwtl
adc
pop
add
push
lds
mov
mov
sub
xchg
add
mov
inc
and
mov
es
inc
subl
xlat
push
mov
cli
cmp
add
xor
testl
cmp
repz
or
pushf
cmpsb
jmp
mov
pusha
mov
sub
xchg
dec
cmpsl
call
dec
jecxz
add
pop
pushf
adc
add
fs
inc
scas
jno
mov
ss
xlat
pop
dec
push
scas
xchg
test
ss
pop
xor
ret
cmp
mov
xchg
cli
fdivp
jae
adc
push
daa
jl
mov
dec
out
xor
leave
jge
xor
pop
xrelease
sarl
jge
sub
jl
test
repnz
and
popa
cmc
es
das
jae
pop
icebp
js
lret
movsb
xchg
daa
lcall
and
repz
dec
add
mov
jp
mov
and
or
push
gs
or
mov
adc
or
fwait
dec
xor
mov
jb
add
sbb
inc
call
fcomps
cmpsl
mov
orb
stos
and
fwait
adc
mov
mov
scas
pop
out
jo
or
inc
jae
cmp
imul
mov
pop
bnd
in
das
lret
leave
movsl
cld
addr16
aas
xor
popa
or
mov
ss
adc
js
or
push
jl
push
nop
rolb
adc
std
mov
sbb
jge
xor
daa
push
xorb
cmp
daa
addr16
mov
cmp
xchg
test
jb
call
test
nop
mov
mov
loopne
mov
mov
nop
aam
pop
adc
inc
push
and
dec
arpl
mov
test
sub
add
divl
mov
movsl
jmp
ret
out
test
sbb
jnp
in
mov
in
outsb
push
adc
xchg
mov
stc
or
inc
sti
hlt
push
out
mov
fwait
gs
jbe
and
das
inc
jae
dec
dec
push
test
jns
pop
xchg
js
fsubrl
jb
sbb
shl
add
xor
mov
test
out
push
ret
insl
inc
inc
jae
or
and
jns
in
cmp
cmp
leave
pop
in
adc
mov
push
mov
nop
add
mov
icebp
ficompl
repz
jbe
mov
mov
or
dec
js
lret
and
xor
cmp
jne
jb
movsb
xor
ljmp
cmp
ljmp
arpl
mov
je
imul
add
dec
mov
shll
xor
push
cmpsl
jo
push
outsb
test
push
xor
adc
stos
mov
icebp
mov
int
jb
sub
xor
xchg
push
push
cmp
jae
sub
and
leave
mov
adc
psubsw
mov
xchg
xchg
mov
cmc
repnz
mov
add
cmpsb
add
push
pop
mov
fldcw
ret
out
adc
xchg
loope
dec
pop
int3
xchg
outsl
getsec
sbb
push
xlat
scas
push
daa
and
sbb
ror
xor
daa
xor
idivb
int3
jl
sub
inc
shrb
sub
mov
mov
cmpsb
push
shl
enter
sbb
scas
jmp
ss
and
fstps
mov
or
sbb
ja
push
mov
test
inc
mov
xchg
sbb
jno
or
and
inc
mov
xchg
subb
jns
cli
mov
popl
movsb
xchg
sti
mov
add
add
lea
dec
jbe
scas
mov
outsl
push
jne
repz
lcall
gs
popf
dec
scas
shlb
push
sub
xor
ficoms
sbb
add
pushf
push
test
jo
push
xor
aad
mov
xchg
lock
jne
in
pop
xchg
lret
repz
fdiv
leave
stc
cmp
xor
mov
xlat
arpl
cmp
ret
inc
and
cli
push
mov
sti
fistps
js
dec
mov
out
fimuls
mov
xor
mov
xor
add
stos
sbbb
pop
dec
push
lahf
sbb
sub
push
daa
dec
cmp
std
cmp
imul
fisubrs
sti
inc
test
mov
cmp
mov
lret
pop
fnsave
adc
pop
adcl
mov
jl
mov
cmp
rorb
imul
cmpl
jnp
pop
pop
cmp
sti
shr
loopne
out
shll
lea
cmp
jp
mov
xchg
and
push
call
mov
mov
mov
xchg
pop
mov
xor
pop
jl
jo
dec
sbb
lret
inc
sahf
or
and
fabs
adc
push
jle
insb
fdivs
xor
movsl
sahf
inc
dec
iret
out
into
inc
add
fs
push
xchg
push
pop
xor
into
cs
add
es
or
pushf
mov
cmpsb
sbb
repnz
cmp
les
pusha
cmp
jle
icebp
push
jbe
or
push
pop
xchg
xchg
movsb
stos
inc
dec
lods
andb
push
push
xor
dec
jo
or
out
insl
leave
xor
jae
push
push
test
lods
stos
mov
fnstenv
jge
jge
sahf
sbb
cmp
jae
in
int3
icebp
push
in
and
shrb
outsl
sbb
inc
hlt
pop
mov
mov
flds
mov
mov
xor
jae
repnz
jg
dec
lahf
and
jns
and
shl
jge
mov
mov
leave
sub
mov
data16
push
add
cli
scas
leave
sbb
push
test
or
shll
orb
test
loope
lods
dec
stc
ds
ret
hlt
dec
push
jmp
mov
inc
aas
jae
dec
push
inc
lock
sub
inc
jmp
mov
xor
out
mov
test
adc
rcrl
jns
jb
lods
repnz
jne
xor
das
shll
mov
imul
shrb
mov
stos
lock
xchg
stc
ds
adc
mov
and
loop
xor
jle
jmp
testl
xchg
hlt
btr
jmp
fistl
insl
es
imul
adc
xchg
sti
aam
lahf
pushf
cmpsl
sbb
xchg
cld
mov
xchg
lcall
jp
push
das
filds
or
aam
cmp
jb
shl
pop
jae
jae
jnp
sbb
mov
xchg
dec
call
and
inc
ljmp
dec
rcl
mov
inc
in
xchg
sbb
pop
xor
and
jne
lret
arpl
xchg
scas
cmp
dec
cmp
nop
cli
mov
mov
js
mov
dec
jae
iret
mov
push
shrl
sbb
outsl
pop
lret
inc
je
jb
jmp
xor
push
xor
lret
pop
dec
jl
shlb
cmp
lahf
sarb
push
or
inc
push
out
push
aaa
add
mov
pop
aam
mov
jns
ss
insl
dec
scas
shl
cmp
inc
and
xor
into
outsb
adc
stc
stc
xchg
test
ret
es
jns
xor
outsl
pop
stc
mov
mov
jbe
sti
xor
mov
jns
jo
xchg
shrb
sub
fidivs
repnz
out
xchg
test
xchg
pushf
mov
lcall
xor
jb
es
jb
dec
mov
jb
lds
dec
mov
repnz
pop
jne
adc
push
mov
stos
mov
sbb
jnp
xchg
bound
inc
ja
inc
jae
shlb
and
aas
xor
test
fdivl
jb
dec
gs
push
jae
mov
adc
mov
inc
xchg
aas
xchg
xor
push
cmpl
or
sub
daa
mov
clc
aaa
cli
imul
cmpb
lcall
mov
or
incl
and
jae
cmp
out
rcrl
clc
add
cmp
dec
stc
jmp
push
icebp
fdivl
mov
jno
aad
sbb
stc
out
out
jnp
daa
ret
jl
lock
lods
lcall
mov
push
mov
dec
xchg
cltd
xor
push
jb
sub
adc
adc
sbb
rcrl
divb
sbb
lret
mov
jnp
fidivrl
add
movsb
es
sar
and
dec
sub
push
and
pxor
das
loope
je
inc
inc
lods
cwtl
mov
aam
mov
adc
mov
test
xchg
enter
mov
and
mov
push
mov
push
cmp
or
ljmp
repnz
xchg
pop
jbe
fwait
xor
leave
popa
mov
leave
sub
sbb
js
and
lock
xchg
inc
mov
divl
call
cmp
inc
pushf
mov
ss
subb
jnp
js
mov
or
sbb
jb
adc
pop
or
jge
cmc
adc
cmp
icebp
hlt
into
push
je
repnz
jl
mov
xor
fmull
add
cli
hlt
divb
dec
xor
and
xchg
nop
push
and
into
dec
cmc
push
sbb
sti
cld
loop
dec
cwtl
jne
mov
and
hlt
aas
mulb
hlt
cmp
jl
fyl2xp1
and
lods
imul
dec
jmp
sub
inc
mov
aas
inc
ja
mov
lret
push
fs
cmp
popf
mov
clc
mov
mov
in
pop
push
push
cmpsl
icebp
push
and
sahf
mov
ja
cmc
or
rclb
gs
mov
and
aas
stos
mov
fwait
sahf
mov
xor
pop
inc
movsl
cmp
jo
fistl
jp
push
loope
dec
push
jns
xor
push
mov
in
lahf
test
out
add
cmp
repz
cmc
scas
das
xor
push
inc
int3
push
ja
fiaddl
pop
cmp
and
inc
rolb
push
xchg
movsb
scas
adc
mov
push
push
mov
movsb
sbb
inc
xor
call
sbb
adc
xor
out
loop
in
icebp
sub
aas
pop
addr16
jo
mov
out
dec
xchg
cmp
enter
cli
and
xchg
mov
cmc
cmp
ss
imulb
jb
xor
repnz
mov
out
mov
cmpsb
mov
aam
mov
push
mov
out
mov
and
xchg
ss
xor
jo
adc
mov
repnz
rcl
sub
add
das
daa
push
sub
repz
inc
and
jecxz
cmpsl
jns
inc
mov
pslld
xor
or
jmp
fsubrl
mov
jnp
inc
push
sub
xor
cmp
repz
mov
cmp
sarl
mov
jge
bound
xor
cmpl
std
mov
jecxz
pop
push
icebp
rol
xor
jbe
mov
cmpsl
sub
mov
and
in
xchg
mov
push
out
add
pop
dec
or
dec
es
mov
sub
fmul
add
sub
mov
sbb
mov
cmp
mov
je
jo
and
sarb
pop
in
sbb
cltd
and
test
out
cmpsl
stos
stos
outsb
mov
fldcw
cmc
in
cmp
aas
xchg
aaa
xor
xchg
dec
jae
int3
adc
xor
add
jnp
pop
jle
cld
loope
push
loope
push
loop
aaa
or
xor
mov
mov
cmpsb
push
sub
mov
sbb
or
aas
xbegin
mov
mov
xor
movsb
repz
cmpsb
push
xor
mov
jns
xor
sarl
pop
xchg
hlt
add
sub
add
test
cmp
icebp
jle
shrl
fidivrs
mov
mov
loopne
cs
inc
mov
testl
jb
mov
add
mov
ds
les
mov
lods
out
imulb
inc
test
pop
xchg
xor
add
add
repnz
cltd
push
mov
jns
or
cmc
mov
mov
jo
sub
in
jno
jno
cmp
sub
jg
adc
jg
ret
cmpsl
lods
cs
sub
jno
mov
out
jmp
mov
pusha
dec
sub
inc
fisttpll
leave
pop
loop
ud1
es
adc
stc
inc
push
arpl
sub
inc
outsl
in
cmp
leave
inc
cmp
jp
ja
mov
xchg
jnp
sbb
cltd
xchg
and
and
daa
repnz
in
testb
je
xor
negb
push
jns
and
in
repz
mov
or
xor
jbe
sbb
pop
movsl
cs
and
sbb
xchg
jmp
out
lods
mov
ud1
pushf
into
lret
jge
clc
add
xor
hlt
daa
push
xchg
fldenv
dec
shrb
out
sub
in
jno
ss
icebp
addl
lods
mov
dec
ret
int
fsubrl
xchg
aaa
jp
jnp
je
mov
mov
push
sub
or
ljmp
je
sub
sti
clc
dec
add
lods
xchg
dec
pop
inc
xor
add
jl
jmp
jge
repnz
inc
mov
clc
enter
fcoml
xchg
xor
push
fstpt
ficompl
mov
out
sbb
mov
mov
in
pop
pop
icebp
and
xchg
jl
aaa
or
das
sbb
cmpb
ljmp
mov
mov
rcrb
pushw
iret
mov
add
inc
popl
arpl
push
or
fidivs
mov
aad
jne
jnp
cmpl
cwtl
std
jne
inc
add
sahf
jae
lret
or
lcall
cmc
ja
jnp
shll
pop
mov
testl
outsb
xor
jb
dec
add
loope
adc
cltd
repz
jae
bound
jae
lods
stos
xor
clc
cltd
fwait
mov
sbb
push
inc
hlt
push
dec
outsl
push
push
scas
and
sub
aas
jp
inc
fildll
ret
cmp
add
and
jno
js
popa
push
jge
and
loope
cld
cmpsl
xchg
lds
dec
xchg
xchg
adc
xor
jl
xor
hlt
push
xor
mov
shll
mov
rcrl
nop
data16
shr
cmp
ret
fscale
push
jecxz
mov
loope
mov
mov
mov
jb
cmpsb
pop
mov
or
adc
iret
movsl
dec
adc
adc
mov
std
mov
repnz
int3
dec
icebp
add
xchg
and
mov
push
pop
aas
adc
xor
jbe
in
fcmovbe
ja
outsl
divl
sub
mov
dec
dec
sub
rcrl
dec
test
adc
addr16
or
jo
sub
and
jns
mov
or
mov
inc
out
jae
sub
add
add
and
enter
mul
int3
jns
iret
xchg
push
leave
mov
sbb
lock
mov
cmc
pop
adc
ficoms
icebp
jge
inc
jl
inc
push
inc
mov
testb
cli
adc
test
inc
xchg
sti
pop
xor
mov
ja
pop
leave
outsl
xor
out
sbb
imul
out
or
xor
adcl
and
repnz
jne
test
cmc
fiadds
cmp
or
outsb
adc
jecxz
mov
popa
fisttps
test
mov
push
jle
stos
ret
xor
bound
jl
jbe
dec
data16
dec
fidivs
adc
sbb
andl
mov
daa
add
popa
sbb
shr
push
lea
ds
mov
xchg
sub
mov
loopne
mov
mov
fstpl
push
jge
push
dec
dec
call
test
add
mov
je
sub
xor
jnp
cmp
cmp
ficomps
adc
popa
cwtl
rclb
xor
xchg
daa
icebp
mov
inc
jne
pusha
stos
repnz
inc
sub
test
jo
sbb
ss
out
ret
pop
mov
adc
adc
dec
add
push
je
pop
leave
and
leave
icebp
lods
ja
ljmp
inc
ret
aas
rcrl
repz
dec
adc
inc
inc
and
mov
xchg
repnz
arpl
jae
mov
sub
pop
mov
arpl
hlt
lret
xor
push
insl
push
fadd
xor
dec
shl
mov
inc
xchg
shrl
and
insl
xor
repz
shrb
pop
sarl
fimuls
push
jnp
jbe
jno
pop
xor
testl
cltd
sbb
mov
test
out
hlt
lds
mov
push
lret
mov
inc
and
add
cmp
and
imulb
xor
stc
mov
xor
inc
ss
push
add
xchg
sbb
mov
repnz
mov
test
mov
fcomip
shll
jnp
push
in
mov
pusha
mov
cmp
dec
xchg
mov
ja
loopne
sub
fucomi
pop
imulb
js
fiadds
xor
scas
divl
mov
push
xor
shlb
adc
int3
loop
mov
inc
add
jge
dec
add
inc
cmp
cmpsb
sbb
inc
add
lcall
imulb
push
cmp
mov
xchg
mov
movl
cmp
insl
mov
or
xchg
aaa
push
sbb
mov
jae
lods
xor
pop
jecxz
adc
mov
and
cmp
popf
jp
jb
call
inc
fsubrs
pushf
std
xlat
dec
cmp
pushf
shlb
cmp
sbb
enterw
mov
adc
adc
pop
add
and
ds
pop
dec
jb
stc
jp
imul
ret
mov
xor
rclb
sbb
push
call
mov
push
stc
leave
push
repnz
mov
scas
out
or
ss
into
into
call
pop
mov
jo
scas
jnp
fwait
mov
pop
js
inc
movsb
cli
cmp
cmpsb
idiv
inc
push
cmc
pop
adc
and
and
pop
xchg
outsl
cmp
aaa
subb
pop
pop
jae
xchg
cmp
mov
push
jle
jl
push
test
dec
outsl
fdivrl
mov
xchg
xchg
in
cmpsl
cld
ja
or
sbb
lret
push
mov
movsb
in
push
jmp
cmp
xor
sbb
hlt
adc
movsl
aad
movsl
mov
push
cmpsl
out
push
mov
je
fcompl
xor
push
add
hlt
add
add
mov
ret
adc
shll
adc
stc
loope
mov
inc
clc
xor
add
cld
cmc
cmp
daa
rol
dec
loop
xor
outsb
push
dec
and
xorb
daa
xchg
adcl
or
and
repnz
push
pushf
pop
dec
mov
inc
lods
or
out
bound
outsl
inc
ret
cs
and
or
mov
gs
sub
stos
jne
out
imul
rorb
aas
je
push
ficoml
out
sub
and
pop
or
ucomiss
pop
pusha
and
xor
out
fstpl
cmp
dec
adc
sbb
jp
lock
pop
pusha
scas
mov
lret
clc
outsl
push
lods
sbb
stc
test
push
mov
push
push
jle
adc
movsl
push
movsl
lea
dec
mov
dec
mov
lret
and
mov
cmpsl
popf
int3
jb
rep
mov
outsl
jl
into
add
mov
add
call
and
mov
daa
jp
jecxz
xor
xchg
dec
mov
xchg
lock
ds
xchg
int
rorl
outsb
jae
mov
push
nop
movsl
leave
pop
lock
adc
mov
jne
stc
xchg
cmp
loopne
outsl
xchg
adc
lock
mov
insl
mov
add
jmp
pop
and
and
and
mov
loope
aad
fildl
inc
pop
xchg
push
cmp
iret
xchg
xchg
pop
notl
sbb
xor
sub
inc
dec
fstpt
sbb
xor
das
cmp
clc
push
mov
das
mov
add
dec
js
push
shl
mov
enter
jno
xor
cld
ficoml
mov
sbb
cmp
xor
pop
aaa
jecxz
cltd
xchg
scas
push
orl
push
mov
divb
add
cld
mov
jg
insl
jo
pop
jno
add
or
mov
inc
scas
lods
fwait
xchg
push
push
cmp
jge
dec
js
fdivrl
sahf
sbb
cmp
mov
mov
mov
sahf
jmp
mov
push
jnp
cmp
loop
sbb
aas
xor
lods
sarb
sbb
jle
fwait
leave
mov
add
mov
cmp
dec
xor
fldenv
sub
mov
out
pop
xchg
pop
sbb
jno
outsl
mov
inc
inc
add
jmp
sbb
shl
cmp
push
fmull
push
hlt
jge
test
xorl
and
push
out
repnz
or
jecxz
mov
push
pop
jbe
push
push
movsl
xlat
les
test
fstpl
sbb
xchg
cmp
xor
icebp
jb
jl
imul
or
cmp
add
xchg
push
dec
add
negl
into
mov
inc
jbe
sub
xchg
lahf
sub
or
sub
or
jp
das
push
out
jb
divl
mov
pop
jmp
push
mov
add
imul
inc
dec
adc
jae
push
mov
cmc
sbb
xchg
iret
xchg
xor
jbe
xlat
repnz
cli
out
add
fiaddl
mov
je
push
mov
mov
addr16
mov
mov
lahf
fs
lods
cli
mov
mov
cwtl
cmpsl
mov
lret
jae
ret
imul
repnz
nop
mov
mov
xor
outsl
fs
jnp
aad
pop
sar
in
scas
add
aad
inc
add
mov
or
repz
mov
jmp
cmp
loop
inc
out
test
int
xor
mov
push
mov
icebp
scas
das
outsl
call
inc
cmp
push
mov
aam
and
inc
xchg
sub
mov
mov
mov
jno
pop
jbe
cmpsb
mov
aaa
push
cmpsl
bound
dec
ljmp
mov
mov
cmp
movsl
subl
xchg
in
jns
xchg
inc
xchg
icebp
pop
stos
inc
push
or
jl
lds
data16
sbb
scas
mulb
dec
jg
not
leave
push
jb
fcoms
cmp
jns
sbb
mov
push
inc
fcoms
hlt
mov
xor
dec
inc
pop
push
fldcw
aaa
push
push
gs
sub
push
mov
ficomps
inc
mov
jp
sub
sbb
dec
aas
aaa
aaa
test
mov
xchg
mov
fsts
popa
dec
shrb
xor
sti
mov
push
scas
jo
lds
and
shll
pushf
dec
fisttpll
int
sub
arpl
jne
mov
mov
pop
std
push
mov
mov
ret
imul
sarl
fisubs
cltd
push
mov
popa
lea
jp
jge
cmp
sbb
push
or
call
or
popa
clc
dec
mov
dec
add
sbb
jecxz
pop
sahf
or
push
push
pop
fnstsw
cltd
lock
mov
cs
cmp
leave
inc
jo
jl
sahf
sub
push
frstor
leave
mulb
fisubl
iret
adc
mov
stos
mov
rcrl
add
fwait
test
mov
or
je
cmc
inc
aas
adc
inc
mov
pushf
xor
jno
mov
add
push
lahf
rclb
mull
popf
loopne
test
in
jns
dec
ret
idivb
inc
inc
out
mov
jge
les
decl
jns
jle
jge
adcb
inc
mov
shrl
in
add
push
sub
mov
or
cmp
xor
bound
cmp
xlat
or
push
jp
inc
mov
stos
jns
dec
fistps
das
mov
jae
adc
subb
pop
and
sub
ss
pop
sbb
xchg
cmc
addr16
lods
les
fnstenv
das
test
pop
push
dec
cwtl
inc
push
pusha
lods
test
xlat
pop
dec
dec
test
je
lea
scas
test
and
sti
inc
imul
xchg
das
xor
fstps
dec
sbb
enter
pop
jae
sti
jns
mov
mov
push
pop
adcb
add
mov
maxps
jp
ljmp
fildll
or
enter
insb
sub
addr16
dec
cld
inc
rcll
out
push
jae
pop
mov
call
les
xor
jbe
jle
rcll
orl
jne
mov
push
cs
jle
xchg
sbb
dec
fnstcw
cmp
push
jg
fstpt
psubq
std
popa
adc
mov
aad
pop
xor
dec
jg
pop
mov
inc
jnp
dec
xchg
mov
icebp
jno
imul
jge
mov
mov
sti
push
mov
icebp
dec
mov
aam
icebp
pop
xor
ja
lods
sarl
and
mov
cmp
xchg
mull
sti
pop
dec
jno
les
icebp
cmp
mov
and
loop
or
aaa
js
pop
icebp
loopne
leave
dec
test
mov
aam
clc
xor
pop
mov
adc
leave
sub
jmp
adc
jl
gs
xchg
jbe
cmpsb
mov
adc
je
ret
push
dec
push
pushf
ljmp
in
dec
xor
jl
and
cmp
movsb
jne
cmp
incl
adc
add
or
rclb
mov
sub
jg
jnp
ret
arpl
enter
cld
sub
mov
orb
popf
jnp
scas
dec
out
pop
push
inc
out
cli
sbb
mov
pop
arpl
xlat
int
jnp
lds
xchg
inc
pmulhuw
mov
cltd
push
mov
xor
cmpsl
mov
jnp
aaa
arpl
jb
jne
push
cli
mov
ja
add
pop
lods
mov
cmp
shl
pusha
mov
jns
test
rcrl
lret
shr
and
test
sbb
aas
xorb
add
and
jnp
mov
adc
dec
adc
out
xor
lret
outsl
in
lahf
arpl
lock
out
mov
cmp
pop
sbb
dec
pop
cmp
and
mov
outsb
mov
test
nop
sub
dec
movsb
cmpsl
insl
bound
ja
sarb
pop
adc
ret
ds
fisubl
divl
pop
mov
push
push
dec
ds
ss
int
mov
mov
ds
scas
lods
mov
mov
aad
lock
push
adc
aam
idivl
lahf
int
fadds
pop
xor
mov
dec
xor
adc
mov
jno
xchg
push
mov
ret
add
cmpb
sbb
scas
testb
cmc
sar
sub
pop
add
mov
mov
pop
ss
pusha
ja
sbb
mov
pop
and
pop
subb
jp
xor
cmp
mov
xchg
je
test
cmp
outsl
xchg
hlt
push
add
dec
push
fmull
cmpl
cltd
add
cwtl
push
cs
xor
in
push
shl
les
xor
test
sbb
pop
je
ja
pusha
sub
cld
and
mov
rclb
sti
ss
leave
in
test
imul
call
ja
test
or
test
aam
out
push
mov
sbb
inc
mov
cmp
xor
push
mov
lcall
int
mov
mov
test
xor
lock
or
bound
shll
jmp
lcall
movsl
push
xor
pop
aad
inc
xor
cmpsb
push
loopne
lods
out
cmp
sbb
addl
push
mov
out
sub
xor
out
dec
xor
pop
scas
dec
pop
iret
repnz
add
pop
mov
add
push
add
dec
mov
loop
sbb
test
pop
lret
jne
mov
jmp
pop
adc
imul
mov
shl
in
push
push
ja
sbb
xchg
push
jnp
loopne
dec
xlat
movl
out
repnz
xor
movsl
andb
movsl
fldenv
mov
and
adc
lret
mov
lock
cmp
sbb
push
cmp
ret
lock
loop
cmp
fsubrs
and
ja
negb
push
cmp
mov
mov
cmpsb
insb
mov
hlt
mov
adc
adc
jmp
jp
jne
mov
push
adc
jg
add
xor
jb
pusha
fwait
lcall
cmpsb
aas
stc
cmp
shl
pop
push
or
xor
out
daa
pop
aas
jno
push
repz
adc
inc
xor
jae
xor
jl
loop
pusha
pop
hlt
and
and
pop
out
push
cmp
js
subb
leave
xchg
test
lahf
and
jle
outsl
push
in
out
pushf
mov
sarl
les
icebp
pushf
jae
inc
daa
xor
mov
repnz
ss
jb
insl
jmp
clc
xchg
mov
fwait
stc
cmp
dec
cmp
js
lret
jb
sar
xchg
adc
enter
loop
xor
pop
push
adc
dec
cwtl
sub
pop
ficoms
jns
out
loope
add
mov
sahf
fmull
jo
iret
dec
ja
sbb
sbb
and
sti
jb,pt
popa
cmp
xchg
not
adc
push
fildll
pop
push
pop
cwtl
mov
aas
sbb
xlat
jl
lods
xor
lcall
and
mov
cmp
dec
ret
decb
jns
hlt
popa
std
cmp
cmp
sbb
lret
popa
pop
push
mov
outsb
cmp
add
imul
pop
cli
sub
jb
dec
and
insl
daa
mov
sbb
out
aad
and
mov
push
lea
mov
scas
cmp
mov
mov
adcl
push
jne
test
andl
pop
xor
jl
outsb
pusha
imul
push
sbb
cmp
ss
cmp
clc
enter
std
inc
jae
icebp
nop
adc
insl
pop
and
iret
pop
mov
adcb
aaa
movsb
or
fwait
mov
sub
jnp
andl
dec
pop
adc
ljmp
mov
mov
into
cs
push
insl
jg
xor
xor
mov
je
outsb
mov
lahf
mov
fsubrs
jb
xchg
mov
scas
divb
int3
pop
cmpsb
popf
xor
inc
sub
mov
push
mov
mov
sbb
xlat
jp
xchg
call
je
lock
mov
inc
add
out
mov
jne
sub
sub
test
dec
cmc
jge
pop
lret
repnz
jne
mov
jb
bound
jmp
xor
inc
mov
loop
and
xor
mov
icebp
sub
icebp
jno
repnz
pop
adc
aaa
je
and
idivl
add
iret
sbb
jno
or
cmp
inc
push
sbb
pop
xchg
pop
clc
data16
sub
ret
push
push
lods
cld
pop
add
pop
cli
cmp
jae
iret
aaa
not
subb
nop
ja
aas
dec
or
mov
adcl
and
add
cld
jnp
sbb
scas
jp
pop
test
pop
pusha
jne
pop
xor
and
xor
das
pop
addl
loopne
xor
cmp
pop
test
and
jnp
aam
xor
sbb
mov
das
cmp
aam
push
push
push
jbe
fld
repnz
rcrb
push
icebp
clc
ss
jb
fists
sbbl
xchg
mov
js
lock
pop
mov
lret
sbb
pop
fistpl
andl
and
out
add
rorb
push
arpl
outsl
push
insl
xorb
lcall
jo
mov
stos
or
or
jbe
jge
stos
mov
addr16
jns
stc
lret
push
or
icebp
cs
mov
iret
jbe
sahf
jecxz
int
add
and
sub
mov
inc
or
int3
push
roll
cmpsb
xor
dec
pop
subss
jb
out
testb
icebp
fwait
mov
icebp
arpl
inc
out
and
jmp
div
inc
test
sub
sbb
mov
mov
jmp
imul
scas
sbb
and
filds
sub
xchg
jle
daa
cmp
or
jmp
pop
rorl
stc
and
sbb
jo
mov
mov
icebp
divl
pop
or
je
icebp
sub
push
xchg
mov
xchg
icebp
or
mov
jno
std
push
and
scas
adc
xchg
andb
mov
sarl
jp
mov
xor
ja
enter
into
add
js
xor
jno
outsb
sbb
mov
mov
lret
adc
mov
aaa
sahf
in
and
inc
push
leave
bnd
nop
jno
cmp
rcrb
arpl
pop
push
stos
adc
int3
cmp
pushf
je
mov
iret
add
je
inc
ds
inc
fs
fisubl
mov
jg,pt
repnz
mov
mov
mov
ss
outsb
cmp
sbbb
pop
or
dec
sbb
adc
sbb
jb
lds
repnz
pop
cmp
je
stos
push
jmp
dec
push
pop
or
jb
loop
cmp
pop
leave
rcrb
mov
dec
inc
mov
pop
jno
mov
or
xor
loop
mov
das
jo
push
ja
mov
mov
inc
je
icebp
cmp
xor
roll
add
aas
insl
cmp
mov
xchg
sahf
pop
or
ss
es
cmp
mov
je
andb
sub
pop
pop
adc
sbb
push
pop
push
clc
mov
js
decb
xchg
pushf
push
sub
mov
xor
into
cmp
std
mov
mov
sbb
aaa
mov
in
stos
cwtl
cmp
push
aaa
scas
gs
mov
mov
sbb
and
sub
cld
cli
dec
fistpll
imulb
jecxz
jae
xchg
jne
aaa
andl
push
test
sbb
hlt
xlat
xor
scas
xchg
sub
enter
lret
lret
push
dec
iret
lcall
push
mov
dec
xor
mov
fsubl
movl
inc
in
jno,pn
movb
push
xchg
cmova
pop
outsb
std
in
xchg
loope
imul
rcrl
push
sub
cmp
mov
xlat
jno
or
sbb
dec
and
sub
mov
and
gs
cltd
xchg
inc
mov
xchg
adc
xchg
ficoms
jne
aad
flds
xchg
ljmp
ficomps
mov
jl
jle
xor
cmc
popf
xor
pop
jmp
dec
mov
dec
and
jmp
loop
repnz
push
jmp
mov
out
add
out
lahf
lahf
aam
xor
pop
movsb
lcall
push
mov
ret
cmc
adc
fmulp
out
shll
es
sbb
es
cltd
add
movsb
test
add
shrl
and
mov
cmp
pop
subb
jecxz
test
mov
mov
cltd
cmp
es
repnz
jno
enter
insb
pop
xchg
xorl
push
mov
push
mov
lahf
mov
push
loope
nop
scas
shrb
push
loopne
sahf
jl
pop
or
jb
add
jb
cmp
leave
ror
mov
int
shr
pop
xchg
ja
std
cltd
cmc
mov
rcrl
xchg
sbb
or
cmp
ss
cmp
icebp
nop
mov
leave
idivl
cmpsl
in
xor
aaa
lds
adcb
cs
inc
jno
je,pn
add
mov
and
dec
xor
xor
xchg
test
stos
std
cwtl
popf
test
xlat
mov
xor
das
js
jmp
mov
mov
leave
cltd
xor
xlat
xor
pop
xchg
add
dec
add
xor
icebp
or
dec
mov
lret
jns
adc
mov
pop
aaa
jge
sbb
mov
js
sarl
xor
sub
mov
rorl
mov
mov
xlat
or
icebp
out
pop
lock
cmp
sub
push
push
push
mov
jbe
call
movsl
js
dec
xchg
fdivrp
sub
sbb
not
mov
inc
inc
mov
jmp
sub
sbb
arpl
sub
cmp
std
hlt
bound
and
cmpsl
lods
xchg
jg
jne
mulb
cmp
sub
shl
xor
jecxz
push
mov
mov
add
out
mov
jg
fwait
adc
inc
ret
xor
sti
pop
sbb
xchg
xor
adc
adc
insb
int3
mov
dec
das
or
cmp
lods
fildll
fisubrl
int
mov
jno
and
cs
cmp
fstl
fisubrl
ret
sti
jnp
testl
movsl
cmp
loop
push
xor
push
aas
mov
shrl
lret
iret
cld
mov
mov
inc
pop
rorb
imul
push
xor
mov
cmpsl
push
insb
dec
aas
test
ret
xchg
test
dec
xchg
aas
xor
pusha
addl
mov
jae
pop
movsl
mov
mov
pusha
xor
mov
mov
lods
dec
pop
adc
pop
xchg
dec
dec
mov
cs
cld
jns
mov
adc
lret
out
dec
fistpll
sti
lret
adc
fistpl
shr
xor
adc
sbb
les
outsb
cmpsl
cld
push
adc
jno
push
mov
das
jae
mov
add
shll
xchg
mov
inc
and
or
das
adc
add
faddl
aaa
push
pop
cmpl
fxch
out
jb
nop
mov
ret
add
loopne
push
jne
stos
push
cmpsb
shlb
clc
in
adc
aad
das
mov
adc
in
ret
cmp
jmp
mov
xor
lret
jp
inc
xcrypt-ofb
cmpsl
scas
outsl
pop
addr16
or
mov
and
lds
xchg
sbb
or
jne
cmp
mov
std
sbbl
test
js
jmp
rcpps
or
mov
scas
sbb
repnz
xchg
jmp
mov
jne
stos
mov
cmpsb
shll
nop
lret
into
out
mov
scas
jp
jb
inc
aas
cmp
out
sub
pop
push
inc
and
test
pop
push
adc
cmc
imull
sahf
sub
les
mov
es
outsl
loop
mov
stc
jp
mov
decb
ja
mov
fildll
in
mov
outsl
and
mov
dec
mov
mov
lret
inc
lds
scas
sbb
cmp
inc
ss
rorb
push
mov
sbb
add
sbb
pop
jecxz
push
cmp
mov
dec
dec
and
ja
out
gs
mov
pop
enter
in
mov
mov
daa
sbb
mov
sahf
push
xor
in
mov
xor
popf
mov
inc
imul
xchg
popf
xor
cs
lods
add
lahf
cmpb
jns
sub
imul
add
mov
inc
mov
or
cmp
xor
aam
outsb
xchg
sub
cmp
xchg
adc
aas
and
in
je
mov
add
mov
push
and
lods
pop
aaa
dec
repnz
xor
pop
xchg
xor
cmp
cltd
sarl
je
jno
jne
mov
xchg
or
pop
adc
mov
and
movsb
jnp
imul
les
ss
push
dec
mov
xor
popf
sbb
mov
xor
mov
jae
mov
jg
loopne
sub
and
imul
cmp
xor
and
scas
push
lods
stos
icebp
xchg
cld
mov
in
cmp
inc
fnsave
lret
les
dec
push
testl
pxor
arpl
test
scas
sub
gs
cld
popa
mov
scas
dec
push
push
add
cld
dec
xchg
fistl
cmp
mov
inc
xchg
mov
xchg
inc
cmp
fldt
push
push
or
pop
sbb
xchg
data16
pusha
test
fwait
mov
es
jecxz
adc
popf
inc
mov
mov
cmpsl
inc
ja
fistps
arpl
xchg
jb
adc
loope
xchg
inc
pop
lret
sbb
call
dec
adc
stc
lods
xchg
push
cs
stos
out
aad
push
or
jmp
cmp
sbbl
pop
outsl
js
sub
enter
stc
lahf
push
push
mov
xor
test
enter
mov
xor
lock
adc
addb
mov
je
jnp
pushl
repz
xor
cld
xor
inc
fbld
lret
pop
jae
mov
in
sbb
iret
dec
push
and
lahf
xchg
xchg
std
cmp
cmp
fadd
sub
xchg
jb
es
fcmovnu
pop
adc
lret
pop
adc
stos
cli
xchg
mov
xchg
xchg
and
jns
sbb
popa
loop
push
jge
or
pop
mov
pushf
adc
jo
xor
cmp
gs
adc
shl
out
push
test
inc
add
out
test
lods
and
dec
call
notb
aaa
sub
mov
in
pop
sub
mov
mov
sub
inc
add
jo
xchg
lock
lahf
insb
inc
lahf
push
xor
mov
push
adc
fdiv
cmpsl
push
mov
dec
nop
inc
outsb
jle
sub
leave
cmp
out
xchg
sub
xor
aad
shr
icebp
iret
jno
into
sahf
and
pop
out
adc
mov
int3
iret
mov
movsl
fistpl
stc
test
xchg
cmp
insl
mov
mov
insl
jns
mov
stos
jae
xchg
cmp
arpl
xchg
push
mov
in
fs
scas
sbb
adc
daa
and
loop
add
push
mov
repnz
pop
cmp
fisubs
pop
jb
dec
clc
jne
cmpl
xor
and
movsl
hlt
pop
sub
mov
mov
adc
add
mov
cltd
popa
cltd
stc
jbe
xor
outsb
mov
inc
cmpl
cmp
inc
iret
sbb
das
and
cmp
icebp
mov
cld
jno
clc
push
adc
mov
pop
mov
sbb
outsl
mov
push
packuswb
decb
pop
enter
xor
mov
out
push
or
push
mov
mov
lods
incb
or
lea
pop
dec
pop
sti
mov
aam
xchg
icebp
jecxz
pop
and
int3
imul
movsb
ficoml
movsb
mov
xchg
lods
mov
fldcw
jle
mov
jb
cmp
jbe
cmc
jb
mov
jecxz
xchg
ficoms
fidivl
stc
addb
arpl
leave
bnd
mov
and
cld
ret
xchg
xchg
lcall
fstl
cmp
mov
iret
daa
into
mov
cmp
je
repnz
shrl
mov
out
jg
mov
jg
cld
xchg
lods
inc
mov
repz
add
cmp
lret
cmp
xchg
fiaddl
inc
mov
jne
div
cmpsb
je
data16
sub
mov
mov
jl
push
pop
mov
aam
in
adc
lods
and
add
fmull
pushl
out
mov
adc
xchg
into
cwtl
push
or
mov
add
cmp
xchg
or
sbb
shll
xchg
xor
adc
mov
push
lods
xchg
mov
add
xor
or
mov
and
cmpsl
jne
xchg
outsb
out
sbb
movsl
cmp
sub
lcall
push
pop
add
jo
lret
pop
push
xor
cld
in
js
pop
inc
cwtl
jle
cmp
jp
lret
mov
adc
shrl
or
jae
xor
mov
fwait
mov
push
push
ss
loop
cmpsb
push
mov
loop
mov
test
cmp
call
and
and
ljmp
arpl
mov
rclb
ret
sub
pop
popa
inc
mov
ds
jecxz
pop
push
call
cltd
adc
mov
es
push
lock
dec
adc
mov
movsb
cmp
stos
lock
sti
nop
in
sbb
sahf
cmp
sub
mov
xor
xor
jl
mov
sbb
push
sub
int3
sbb
add
cmc
xor
lea
jb
sbb
or
test
add
out
shrb
js
add
shrb
adc
lcall
mov
out
insb
sub
xor
cmp
fdiv
cmp
and
inc
sub
in
adc
mov
and
jne
lahf
mov
pop
cmp
jp
ljmp
jle
test
adc
in
out
into
xorb
sub
dec
xchg
jae
and
mov
mov
inc
push
mov
cmp
cltd
mov
lock
vcvtsd2si
lret
add
or
jo
mov
adc
outsl
jae
push
movsl
xor
aam
les
iret
pushl
int3
xchg
test
sub
psllq
cmp
mov
mov
in
cli
ret
lds
inc
xchg
loopew
pop
jecxz
movsb
and
jle
test
cmp
or
pop
gs
inc
aam
cld
fisttpl
in
cld
xchg
imul
sahf
shll
out
sub
xorl
and
mov
das
mov
add
jo
addb
fcmovnu
lock
scas
jae
or
cmp
mov
pop
jbe
jmp
inc
cmp
push
mov
int
mov
ror
push
cmp
mov
inc
pop
push
xor
xorb
mov
pop
and
xor
push
into
jo
adc
mov
repnz
mov
mov
jge
aad
nop
outsl
xorl
cmp
incb
loop
aaa
scas
sti
aas
push
rcll
mov
inc
jge
jne
cwtl
pop
inc
sub
sbb
cli
push
addr16
leave
enter
das
rorb
lret
push
popa
mov
jb
popf
and
test
jp
push
addr16
add
push
icebp
mov
mov
arpl
das
mov
pop
loop
shrl
mulb
mov
test
push
push
aam
lret
push
jge
addr16
mov
cmp
xor
jge
push
push
mov
jl
xor
fwait
imul
and
and
and
loop
outsl
int
mov
aas
test
add
jb
add
pop
sub
stc
adc
movsl
rcrb
fidivs
movsb
inc
sub
mov
sub
js
lahf
mov
add
push
aas
jno
mull
xchg
test
ret
enter
mov
pop
scas
cmpb
cmp
ret
adc
lods
mov
xchg
in
xor
aam
loope
add
lods
aaa
cs
push
repnz
arpl
cmp
js
mov
cmp
test
fldcw
sbb
mov
adc
pop
outsl
push
hlt
mov
cltd
popa
in
out
xor
jne
jnp
scas
xor
out
clc
out
mov
adc
push
adc
nop
nop
xchg
add
mov
push
push
and
mov
outsb
push
js
mov
lea
mov
test
xchg
mov
jle
xchg
cmp
mov
cld
mov
adc
dec
xor
lcall
lds
mov
adc
dec
mov
movsb
mov
mov
andl
sbb
pop
mov
push
cli
push
add
data16
test
mov
cmp
and
in
movsb
iret
loope
jmp
arpl
shlb
mov
stos
jbe
orl
outsb
jno
movsl
pop
ret
fwait
xchg
aaa
fimuls
mov
or
xchg
rcll
xchg
xor
jne
dec
or
xor
sbb
mov
sub
ret
and
inc
int3
pushw
nop
mov
cs
incb
push
adc
out
pop
fmull
ljmp
xchg
push
negl
cmp
sti
and
pop
xor
out
jmp
dec
test
add
adc
mov
ss
sbb
add
fnstcw
fs
adc
ret
mov
xorb
cli
cmpb
pop
rcrb
inc
xchg
xor
lcall
push
aaa
adc
ja
mov
shl
ja
jnp
adc
leave
cltd
lods
inc
data16
sbb
add
adc
inc
and
cmp
xchg
jo
push
sbb
sbb
subl
aam
hlt
repnz
mov
in
inc
mov
lea
mov
inc
inc
loopne
lods
add
mov
cmpb
inc
push
subl
notb
scas
mov
jge
adcl
mov
xchg
repnz
outsb
cmpsl
mov
mov
mulb
push
out
int3
mov
sbb
push
push
mov
bound
and
cmp
cmpsb
jmp
xchg
test
in
loop
ficompl
or
jns
mov
outsb
jg
test
xchg
sub
cmpb
call
push
xchg
test
cltd
and
adc
sarb
test
jnp
add
dec
mov
fidivrl
and
add
mov
dec
mov
xor
push
xor
fptan
cmp
hlt
jne
into
std
cwtl
jb
out
cmc
shlb
push
sar
test
jb
sahf
popf
xor
ret
iret
sub
scas
jbe
enter
movsl
movsl
xor
push
push
stc
sbb
inc
cmc
or
mov
sbb
dec
cld
sbb
scas
in
int
imul
or
ret
rep
adc
sbb
pop
out
add
enter
pushf
fdivl
xor
call
cwtl
int3
and
sub
jo
scas
pop
and
xor
cli
cmp
lods
rcrb
sub
push
pop
add
cmp
adc
out
hlt
icebp
and
andl
mov
mov
inc
jge
or
inc
push
outsl
in
lods
xor
inc
pop
loop
test
push
es
xchg
imul
xor
adc
mov
add
mov
xor
cli
cmpsl
shrb
pop
mov
push
pop
add
and
mov
hlt
std
test
add
stc
cmp
imulb
sub
ret
lret
call
lret
sbb
push
jae
cmp
cmp
icebp
xchg
push
insl
xor
test
fwait
mov
popf
popa
imul
lds
inc
ret
and
repz
clc
cmpsb
popa
stos
testb
out
stc
dec
je
insb
icebp
xor
jb
repnz
pop
xor
dec
push
push
adc
lret
adc
push
push
call
arpl
bound
xchg
sahf
xor
sti
xchg
mov
fistps
repz
or
cmpsb
sub
mov
jb
mov
ljmp
mov
ljmp
add
adc
cmp
loope
mov
push
cmp
insl
sub
push
test
inc
inc
and
pop
jae
subl
or
jbe
test
xchg
mov
sbb
jns
leave
je
jl
cmp
adc
mov
fiaddl
nop
xor
outsb
lds
adc
iret
sub
lds
cmpsl
or
cmpsl
cs
and
stos
fs
out
adc
inc
mov
je
mov
jge
cmpl
inc
out
insb
xchg
mov
cld
adc
adc
insl
mov
bound
scas
divl
push
pop
xor
dec
jb
inc
mov
iret
adc
das
cmp
jl
cmpsl
sbb
push
shl
push
das
add
pusha
dec
iret
popa
nop
push
xor
jbe
mov
stos
sub
rcrl
push
sbbl
sbb
jb
pop
xlat
and
aad
jl
push
int
icebp
pop
mov
daa
call
mov
addr16
xor
popf
add
or
mov
xchg
mov
call
cmpsl
and
inc
cld
dec
mov
cmp
adc
mov
scas
pop
xlat
ds
subb
filds
xor
test
stos
movsl
ss
fwait
dec
push
mov
lcall
sbb
jl
adc
cmpsl
jno
pusha
or
lcall
mov
ds
insl
lock
sahf
icebp
push
mov
xchg
mov
ret
xchg
mov
sub
loope
lret
cmpl
rcl
mov
mov
rolb
mov
xor
repz
xor
cli
out
test
mov
fwait
shll
rcll
addps
dec
add
add
xor
mov
pop
add
ficoms
jbe
sbb
std
shlb
xor
mov
icebp
mov
in
jp
jle
sub
or
push
xor
je
test
pop
fldt
test
adc
cmp
cltd
jne
inc
sub
inc
rcr
adc
sbb
pop
push
lret
push
hlt
xor
popa
test
inc
xchg
repnz
dec
icebp
lock
aaa
inc
adc
sub
and
popf
sub
fstpt
xchg
xor
xchg
xor
sarb
dec
and
imul
mov
pop
or
fdivl
mov
inc
sub
adc
repz
out
shlb
xchg
adc
sub
lahf
inc
cmpsl
icebp
mov
mov
pop
cmc
push
pop
adc
test
jae
icebp
das
rorl
lds
xor
inc
and
mov
mov
jmp
cmp
lds
dec
jl
rolb
bnd
jp
mov
add
or
sahf
pop
mov
push
or
sti
xchg
mov
sbb
push
sbb
aad
add
cmp
cli
mov
vsubpd
mov
sbb
frstor
dec
dec
mov
es
daa
mov
sbb
dec
push
rclb
xlat
mov
cmp
cmp
xchg
insb
gs
mov
fnstcw
sub
jle
push
loopew
leave
shl
mov
jmp
movsbl
popf
jb
icebp
mov
pusha
or
push
mov
mull
push
notl
daa
or
jno
xchg
push
call
mov
scas
sbb
xor
jnp
inc
mov
cmp
dec
pop
sub
jg
adc
cmpsl
cmp
mov
jbe
out
and
mov
leave
jae
mov
loopne
jb
sbb
test
mov
cmpsb
imul
mov
mov
mov
es
adc
gs
leave
jo
clc
leave
ljmp
add
adc
fistps
or
jp
outsb
jle
mov
andps
xchg
es
jns
add
add
int
gs
push
jp
ret
lret
cmpsb
pop
push
and
and
cmp
add
mov
cs
out
xchg
loopne
pop
in
fdivs
imul
imul
jne
inc
mov
cltd
addr16
cmpsb
ret
sub
insl
cmp
loopne
nop
mov
cltd
mov
mov
fstpl
sub
cmp
sbb
loope
cmp
repz
pop
pop
jmp
dec
pusha
sbb
out
mov
and
xlat
sub
popl
movsb
insb
xchg
or
es
lods
lock
jo
in
insb
into
sub
jecxz
in
idiv
fwait
pop
cmpsb
jmp
clc
push
mov
ja
lcall
or
les
scas
sbb
add
xor
sti
test
iret
jecxz
lret
js
int
xor
fadds
lret
jecxz
dec
inc
pop
insb
sub
add
push
cmp
and
jge
mov
jno
xchg
ja
sub
mov
adc
cmp
or
fsubp
pop
and
out
mov
or
rolb
jl
inc
lahf
in
or
jb
push
push
adc
push
pop
dec
pop
cmpb
mov
and
jb
ss
rcrl
pop
enter
pop
or
mov
push
mov
rcrb
dec
cld
add
push
cmpsl
add
mov
xchg
sub
cmpsl
push
mov
dec
or
das
cltd
movsb
fwait
outsb
inc
test
xchg
cmc
xor
push
popa
js
or
jae
lods
jne
cmpsb
sbb
mov
fucomip
adc
mov
xlat
cmp
xchg
out
fidivrl
lret
stc
jg
leave
push
xchg
out
ss
int
mov
fst
loop
lcall
pop
inc
push
out
jae
test
stc
add
ret
mov
jne
mov
cmpsl
pop
cmpsb
rcll
lret
mov
push
cli
das
test
mov
jp
je
shll
jns
mov
divb
int
in
cmp
dec
pop
mov
jo
jge
fisttps
pop
lock
add
nop
jp
cmp
divl
mov
test
cli
repz
add
mov
aas
ret
adc
jg
inc
jb
inc
adc
and
ja
leave
mov
sbb
cmp
dec
bound
push
lret
xorl
arpl
mov
sub
pop
jecxz
jp
inc
push
out
imul
push
sbb
add
mov
sbb
sub
push
push
bound
aam
pop
into
gs
sbb
cmpsl
cmp
push
cwtl
sub
cli
dec
aas
xchg
and
ljmp
adc
jmp
in
xchg
ss
cwtl
cmp
test
xor
inc
pusha
pop
and
aaa
clc
es
aaa
test
push
dec
xchg
xor
insl
bound
pop
cmpsb
mov
inc
scas
fbstp
mov
push
shl
jmp
and
jle
sti
je
mov
add
icebp
inc
inc
add
jbe
sbbb
jge
and
out
fsubrs
scas
add
inc
jne
push
out
or
xor
loope
jno
mov
rcrb
mov
jmp
xchg
aaa
inc
mov
xor
mov
mov
sti
ja
mov
mov
mov
sub
mov
in
mov
dec
xor
ret
pusha
cli
mov
sub
arpl
jb
lock
aaa
mov
jae
mov
cmpl
stos
push
dec
mov
xchg
cltd
iret
mov
sar
cmpsb
mov
loop
push
jle
gs
jnp
subb
mov
jp
fistps
pop
movsb
sub
or
leave
xor
inc
jne
out
lret
fs
mov
add
cwtl
push
scas
cmp
enter
push
push
xor
fsts
mulb
outsl
mov
punpcklwd
xchg
xor
cmp
mov
xchg
fnsave
adc
icebp
ficoms
movsl
add
arpl
repz
loopne
jae
sub
cmpsl
and
jle
repz
mov
and
stc
aad
movsb
mov
repnz
mov
out
ja
out
mov
jle
jl
adc
or
sub
repz
mov
xchg
lret
fldl
and
mov
addr16
and
fldenv
xor
out
stos
mov
xorl
xorb
ljmp
mov
xchg
jne
or
dec
rcrl
lods
mov
sub
push
das
sarl
dec
popa
fbld
cld
inc
mov
push
ret
mov
fs
das
fimuls
and
aad
add
jo
arpl
inc
stos
aam
scas
icebp
jmp
and
sub
add
and
pop
inc
or
and
xlat
loop
outsb
xor
shr
ljmp
rorb
out
jb
or
jmp
pop
pop
out
adc
jb
xor
repz
shlb
lahf
aas
jb
rorl
push
mov
push
inc
mov
cmp
hlt
lcall
cmp
add
jg
add
cmp
enter
add
xchg
push
clc
dec
ja
add
add
push
icebp
xchg
loope
loopne
fstpl
mov
stos
cs
mov
mov
cmp
inc
mov
js
aaa
pop
and
pop
xlat
enter
cmpsb
inc
iret
insb
lods
adc
imul
and
outsl
dec
sbb
call
push
push
aaa
jmp
mov
outsb
fwait
xlat
cmp
shll
jo
mov
or
pop
jle
xor
jge
sub
cmc
mulb
jne
xchg
js
push
mov
out
ds
xor
daa
stos
add
fdivs
xchg
ret
cmp
test
jle
add
jecxz
ja
clc
inc
xor
sub
cmpsl
sbb
ja
xor
repz
loopne
jle
cmp
out
in
cs
xorl
sbb
hlt
mov
jne
rcrb
scas
imul
mov
jne
loope
adc
adc
pop
xor
leave
and
out
ret
js
mov
sub
xor
inc
xor
jmp
jno
ds
inc
cmp
icebp
inc
push
sbb
jecxz
jecxz
sbb
gs
xchg
add
jne
sbb
xchg
lahf
add
jne,pt
jb
mov
adc
std
mov
xor
pop
fiadds
movsb
mov
ja
test
std
sub
and
ds
lods
bound
xchg
insl
call
imulb
add
or
xchg
dec
or
xor
ljmp
or
cmp
jp
pop
mov
outsb
xchg
push
pop
and
and
xor
cli
out
aaa
pop
and
stc
int3
into
int
mov
jmp
and
shll
mov
mov
shlb
jbe
jmp
jmp
out
xor
xchg
adc
mov
pushf
sub
mov
negl
sub
xor
insb
into
xor
out
or
lods
in
dec
arpl
arpl
and
jne
aaa
and
out
lahf
inc
xor
and
mov
mov
xor
js
sub
mov
lds
ja
out
jo
dec
je
and
hlt
insl
dec
jecxz
hlt
arpl
mov
xor
in
jne
jb
outsb
ja,pn
scas
mov
test
adc
xor
sub
mov
lods
sahf
and
call
xchg
loope
idivb
xorb
out
xor
test
stos
mov
icebp
adc
dec
add
mov
shlb
mov
jle
repnz
or
ljmp
stc
divl
or
cltd
cmp
icebp
mov
dec
aad
data16
scas
push
std
xor
or
and
cmpsl
mov
cmpsb
aad
adc
xchg
int3
inc
cmp
xchg
pop
mov
mov
out
daa
ret
imul
loope
mov
inc
hlt
scas
push
jle
aad
jbe
adc
addr16
inc
push
rcrb
cmp
cld
cmp
mov
dec
or
ljmp
mov
or
or
call
repnz
push
push
and
shrl
aad
incl
test
mov
cmc
pop
ljmp
stc
xor
xor
clc
inc
stos
mov
std
cmpsl
cmp
popf
pop
and
fbld
lret
mov
pushl
daa
or
test
das
in
divb
or
jmp
mov
jnp
mov
test
mov
movsl
mov
xor
cmp
or
push
cwtl
jae
loopne
cmpsb
mov
mov
jge
sahf
mov
popa
and
lret
mov
adc
std
jno
shll
aas
sbb
aas
mov
pop
lds
adc
iret
sbb
add
push
sbb
and
cmp
loop
cmp
sub
insb
leave
test
pop
cmp
shll
xor
xchg
dec
pop
inc
jecxz
jno
dec
add
stos
bound
inc
dec
jl
pop
or
and
les
cld
mov
pop
loop
addr16
inc
inc
cmp
mov
push
mov
mov
xchg
inc
mov
push
fldl
stos
out
and
stc
arpl
and
sub
lcall
stos
pop
push
popf
xor
fsubl
inc
xchg
cmpsl
aam
mov
repz
xchg
js
std
stc
jb
es
xor
adc
rcrl
arpl
rolb
movsb
andl
popa
lahf
cmp
pushf
cmp
out
ds
xor
bound
sbb
xor
jno
sbb
push
xor
testb
es
repz
or
mov
xchg
xchg
jno
pop
enter
or
testl
xor
jnp
or
pushf
push
xchg
stc
mov
mov
push
pushf
das
cld
xorl
repz
js
inc
and
in
xchg
jbe
bound
jg
out
fisubrs
xchg
das
andl
mov
hlt
push
cmp
sti
test
int3
dec
outsl
ljmp
decb
cmp
mov
jl
pop
inc
jb
or
sbb
sahf
jl
pop
adc
loopne
mov
adc
idivl
es
jns
test
and
sbb
add
mov
or
out
push
icebp
in
sub
js
insb
test
mov
xor
jne
pop
dec
fldcw
test
fldenv
xchg
sti
jp
arpl
je
jns
sub
imulb
lcall
mov
insb
lods
dec
sub
push
cmp
xchg
mov
mov
add
outsl
clc
sahf
jbe
cld
mov
loop
push
jb
xor
xchg
bound
xor
jb
inc
dec
mov
out
or
add
push
orl
mov
rcl
add
jne
mov
mov
je
sbb
sbb
inc
dec
and
loope
push
daa
inc
adc
mov
or
ret
and
enter
jno
pushf
repz
lret
lods
adcl
mov
enter
ljmp
sub
lds
jp
adc
lahf
test
push
jbe
mov
mov
pop
add
mov
sub
jbe
and
fistl
scas
add
std
xchg
mov
arpl
decl
fcmove
xchg
dec
mov
les
xor
test
pusha
dec
call
ds
sbb
mov
cwtl
mov
xchg
sbb
ret
mov
adc
icebp
and
dec
pop
out
fs
push
dec
inc
inc
xor
push
iret
cmpsl
scas
stos
push
push
iret
add
cmp
jne
ret
cmpsl
outsb
push
sahf
and
jns
scas
negl
outsl
call
jnp
add
push
or
lret
lods
test
mov
sub
movsl
adcl
adc
std
add
and
jnp
lret
mov
scas
inc
div
xchg
int
pop
out
dec
insb
mull
xor
jecxz
xor
sub
mov
sbb
push
aaa
es
lret
subb
and
popa
ret
push
push
pop
or
dec
mov
lods
xchg
mov
insb
mov
fmuls
rol
mov
cmpsl
push
lods
jns
scas
outsb
xor
out
mov
mov
adc
sbb
add
mov
mov
dec
and
orl
xor
gs
lea
and
repnz
es
sub
push
xor
push
cmpsb
sahf
sahf
cmp
mov
in
jl
es
jns
sbb
std
popa
xorb
lock
sti
xor
jne
push
mov
mov
push
mov
inc
sarl
jnp
nop
shlb
cld
sbb
mov
hlt
xor
push
xchg
shll
sbb
xor
sub
ljmp
sub
sahf
lahf
and
movsl
fimuls
or
test
dec
push
pusha
into
inc
push
xchg
addl
mov
and
dec
scas
rcl
fisttps
stos
jae
decb
call
enter
jno
push
cld
addr16
pop
or
xchg
or
test
pop
mov
fistpl
in
aaa
sbb
aam
in
xchg
cld
cltd
imul
xor
adc
popf
push
mov
icebp
dec
pop
pop
icebp
cli
mov
xchg
mov
sub
lahf
xchg
cmp
insb
sub
adc
add
repnz
xchg
cmpsb
data16
arpl
mov
adc
xor
cld
jbe
icebp
test
or
sbb
xchg
mov
icebp
cmpsl
stc
imul
jp
aas
push
repz
les
cmp
out
mov
mov
fstpl
inc
xchg
in
jmp
and
mov
mov
faddp
loopne
out
je
outsl
inc
mov
xchg
sub
repz
mov
add
xor
push
and
shr
rorl
dec
fcoml
je
push
push
cld
repz
cmc
sbb
pop
enter
mov
movsb
cmp
leave
push
cmp
test
sub
out
out
int3
jae
inc
add
xchg
dec
add
dec
inc
add
pop
mov
add
inc
stos
imul
movsb
nop
and
lods
popf
adc
xor
add
mov
arpl
call
xlat
jmp
andl
into
test
cmc
pop
mov
or
adcb
sti
ds
sub
push
push
sbb
not
sub
icebp
repz
out
das
pusha
xchg
aaa
cmpsb
faddp
test
push
fsubl
pop
scas
xchg
bound
xor
mov
movl
jl
dec
aad
stos
sub
inc
pop
dec
imul
push
xchg
xchg
or
das
mov
fsubrs
xchg
xor
jbe
pop
mov
aam
or
push
je
jmp
into
jg
sbb
icebp
js
pop
xor
xor
mov
xchg
mov
cld
dec
cmp
sahf
mov
adc
js
jmp
sbb
inc
jge
enter
xor
in
mov
cmpsb
repnz
in
inc
fisttpl
xor
cmp
movsl
cmp
div
sarb
and
push
push
mov
outsl
sub
or
sub
addr16
dec
mov
sarl
jno
xlat
xor
cwtl
outsl
jp
testl
outsb
inc
xchg
dec
push
and
arpl
cmp
fstps
out
mov
sbb
cli
shr
or
repnz
jl
jno
sub
sahf
mov
xchg
add
fs
lahf
dec
sbb
push
xchg
sbb
inc
or
mov
push
cmp
push
push
sti
dec
cmp
push
xor
jnp
ret
out
jne
icebp
inc
jns
xchg
xor
push
cmp
jb
jno
mov
cmpsl
add
inc
lds
jo
mov
call
les
inc
std
sbb
or
xor
daa
sbb
mov
dec
inc
sbb
add
stc
icebp
scas
xchg
cmp
jne
or
inc
pushf
imul
dec
clc
jg
mov
mov
arpl
stos
mov
pop
cmp
pop
or
popf
adc
movsb
jne
outsl
xchg
mov
adc
push
lret
mov
mov
xchg
in
add
jb
or
push
push
mov
jo
cmp
mov
popa
jo
out
xor
cmp
leave
xor
mov
call
fwait
dec
fsubr
cwtl
out
mov
push
mov
insb
lahf
movsl
jb
push
jmp
test
addr16
mov
outsb
inc
sahf
addl
mov
fstpt
xor
repnz
push
sub
dec
dec
daa
mov
dec
mov
pop
clc
push
repz
cmpsl
dec
mov
cmp
xor
lret
pop
pusha
mov
test
das
out
mov
xor
add
adc
bound
lcall
sbb
insl
cmpsb
mov
test
lcall
inc
and
pop
mov
cmc
jb
loopne
xor
inc
push
and
pop
mov
loop
clc
jl
jbe
stos
jns
inc
outsb
pusha
ret
enter
jne
push
jbe
daa
mov
inc
cmp
jo
sbb
ret
mov
test
scas
mov
jge
sub
test
adc
inc
mov
mov
out
cmc
inc
std
push
popa
pushf
jl
pop
in
sub
mov
jb
cs
lods
dec
and
push
sbb
sahf
cmp
outsb
cld
cmpsb
in
stc
je
dec
loopne
mov
clc
scas
fsubp
out
lods
filds
aaa
pop
bound
push
xor
inc
nop
adc
xor
popa
pusha
mov
jno
or
jno
add
and
xchg
shlb
push
xchg
or
push
and
jle
lcall
cld
mov
xchg
outsl
jae
into
sarb
scas
test
add
jnp
cwtl
std
negb
cmp
int
sub
lret
ret
cmpsl
mov
sahf
sbb
cmp
movsl
jns
add
jmp
aaa
aam
sub
or
scas
in
aad
adc
xor
ja
pop
movsb
ja
push
int3
pop
ja
xor
pop
jae
add
pop
add
pop
sbb
lock
pop
movb
pop
mov
je
insl
add
mov
popl
pushf
jl
popf
iret
ds
jp
popf
push
jmp
jne
cmpsl
push
subl
jg
mov
xor
jnp
dec
xchg
mov
inc
jp
adc
pop
rcr
pusha
jno
push
test
jae
enter
aaa
mov
cmp
push
xlat
or
cmc
ja
aam
fs
push
aam
mov
inc
loopne
cmp
pusha
aas
add
and
or
ja
ds
sub
enter
adc
idiv
dec
ror
mov
ds
and
xor
cmp
pop
jne
out
lea
shl
in
or
push
out
sub
mov
xor
movsb
adc
sbb
shlb
xchg
pop
jno
addl
loopne
push
lods
mov
cs
push
or
dec
adcb
movsl
lods
jae
out
lahf
out
inc
lods
and
icebp
in
xchg
or
rorb
lock
pop
inc
xlat
ds
mov
dec
imul
fmul
dec
pop
jge
aaa
mov
bnd
in
xchg
mov
push
popf
adc
jnp
mov
inc
mov
sub
movsb
insb
test
sub
addr16
scas
xor
bound
stos
lods
outsb
jl
not
rcrl
mulb
addr16
xor
lods
fsts
cmp
mov
dec
jnp
fdivr
cmp
pusha
xor
enter
inc
mov
dec
pop
sub
adc
lods
cmpb
fiaddl
andb
xlat
cmp
xor
popa
popl
pop
sub
jge
ret
mov
fadds
lcall
clc
cmp
xchg
pusha
add
cmpsl
push
adc
push
jne
cmpsl
mov
mov
add
xchg
mov
dec
fldt
cmp
push
cmp
negb
mov
movl
aas
mov
fisubrl
xchg
dec
mov
cmc
out
jo
xor
push
daa
sahf
ljmp
xchg
imul
sub
scas
gs
aaa
pop
inc
mov
adc
rcrb
xor
dec
add
add
xchg
mov
roll
sbb
mov
daa
icebp
mov
mov
xchg
scas
adc
jb
mov
cwtl
or
inc
inc
pop
lds
dec
adc
leave
xor
pop
mov
cmp
lods
push
jae
out
jb
dec
inc
scas
mov
push
pop
bound
jge
pop
cli
sub
inc
insb
push
jns,pn
jb
aaa
out
jns
je,pt
es
out
shl
imul
stc
xchg
ljmp
dec
mov
jns
mov
push
dec
insl
mov
sub
outsl
es
fldenv
call
push
nop
ja
imul
fwait
jo
cmc
add
aaa
xor
std
mov
lods
pop
push
mov
lods
cld
paddsw
cwtl
les
outsb
outsl
filds
pop
push
xchg
jnp
cld
js
or
cmp
mov
or
jb
mov
je
cmpsb
in
fbstp
push
call
mov
push
jae
addr16
push
clc
neg
mov
or
movb
cwtl
loope
aad
shlb
pop
pop
test
cmc
or
mov
push
xlat
ljmp
testl
inc
iret
jecxz
in
scas
out
pop
jl
add
jg
fsubs
mov
aas
and
pop
cmp
mov
dec
outsl
lret
enter
sti
pop
adc
sbb
cmpb
add
scas
sbb
movsw
sbb
push
loop
dec
pushf
clc
adc
jb
out
out
xor
mov
sbb
sbb
jbe
sub
xchg
mov
rolb
dec
and
fwait
pop
cmp
mov
sbb
dec
mov
xchg
mov
loopne
movsl
mov
addr16
sar
pop
mov
ja
repz
stos
pop
lock
test
inc
inc
sbb
cmp
lds
pop
cmp
mov
jno
int
jb
pusha
stc
mov
push
js
dec
sbb
adc
imul
dec
addr16
mov
outsl
aam
sub
cmp
adc
aas
cmp
xor
pop
cli
mov
imul
pop
insl
xorl
sbb
data16
ret
arpl
ss
xlat
xchg
xor
sbb
mov
adc
mov
mov
cmp
outsb
imul
add
out
fadds
aam
mov
test
mov
stos
adc
cmp
adc
mov
push
sub
lcall
enter
and
repnz
stc
jno
cli
inc
push
mov
xor
fcoms
adc
and
loopne
pop
mov
and
pop
stos
std
mov
test
mov
stos
in
mulb
sbb
int3
sub
push
shr
xor
push
addr16
xor
sub
mov
mov
cmp
aas
rclb
aad
test
insl
mov
test
sbb
inc
mov
adc
outsl
lea
jmp
dec
aam
or
xchg
addr16
leave
pop
mov
adc
sbb
out
aaa
add
mov
mov
jl
add
fdivl
mov
mov
adc
cwtl
cmpsb
lcall
adc
scas
sbb
adc
in
out
and
fstp
and
mov
and
je
xor
mov
lock
outsb
das
and
ljmp
icebp
mov
dec
jns
aas
lcall
adcl
icebp
sub
sub
je
sbbb
inc
jno
aaa
cmp
sub
inc
mov
mov
int3
jno
mull
sbb
pop
repnz
cld
push
fdivs
jg
rorl
addr16
lods
xchg
in
mov
in
aas
and
cmpsb
out
gs
or
mov
insl
gs
hlt
push
xor
xor
pop
outsl
sbb
movsl
pop
pop
out
scas
mov
jmp
sarb
inc
scas
ss
es
xor
xchg
adc
cwtl
dec
sbb
cwtl
pop
mov
mov
call
adc
mov
stc
out
cmp
insl
lret
add
mov
int3
sub
add
jns
das
icebp
add
rcll
movsl
xchg
add
jmp
cmpsb
mov
pop
repz
out
roll
cmc
loopne
push
js
sarb
cmp
popa
or
flds
std
xlat
mov
fnsave
test
out
adc
loopne
fs
dec
scas
cmpsl
fimuls
push
outsb
xor
adc
shrl
cmp
sub
movl
je
and
mov
mov
mov
jbe
lret
inc
push
je
mull
jp
ss
out
inc
xor
mov
mov
into
xchg
dec
filds
dec
lret
out
imul
pop
je
dec
xlat
adc
and
mov
xchg
mov
jb
jmp
leave
lock
out
push
jp
dec
mov
dec
dec
ljmp
sub
cwtl
jno
xor
ljmp
jg
cltd
jno
js
rclb
ds
or
imul
inc
jp
adc
mov
ja
add
dec
xor
and
leave
xchg
push
pop
lock
fwait
xor
loop
inc
and
xchg
jecxz
cmp
xor
dec
mov
inc
popa
sbb
adc
mulb
lret
fs
xchg
ja
pop
cmpsl
ss
pop
test
cmpsb
ret
shrb
inc
cmp
mov
icebp
pop
dec
add
cmp
pushf
sub
mov
fsubl
inc
jmp
repz
nop
pop
je
inc
sub
mov
iret
loope
fdivrp
ds
xor
cmc
cmpb
jbe
mov
aam
mov
pop
andb
jp
xchg
ret
jnp
pop
mov
jg
arpl
out
mov
mov
ja
jecxz
leave
inc
sbb
cmp
lds
sti
pop
push
inc
and
shrl
xor
push
sub
out
stc
add
iret
add
xor
rol
popa
sbb
push
ret
movnti
jecxz
add
sbb
pop
in
mov
shl
push
jle
mov
lea
and
mov
mov
rol
icebp
fsubrl
mov
dec
outsl
mov
sbb
cli
sarl
pop
out
cld
pusha
xor
dec
mov
sub
pushf
xor
pusha
cmpsb
fs
push
std
mov
jbe
dec
ret
outsb
mov
inc
imul
mov
add
inc
nop
fwait
jecxz
imul
and
jmp
xchg
mov
or
lods
es
lret
xchg
in
sbbl
dec
jo
enter
cmp
jp
stos
and
push
pop
insl
sahf
pop
nop
push
hlt
and
mov
jl
fistps
mov
test
popf
add
jb
inc
outsl
adc
fwait
push
jo
and
aad
outsl
mov
pusha
adc
or
jle
pop
mov
add
add
xor
iret
and
pop
testb
pop
adc
jl
stos
sub
and
cld
mov
add
mov
jg
jecxz
pop
inc
cmp
adcb
cmp
xlat
out
xor
push
cmpl
ss
add
rcrb
and
cmp
ds
cmp
jecxz
mov
sub
push
pop
dec
fbstp
pop
sbb
inc
dec
xchg
into
or
mov
mov
mov
cmpsb
adc
fnsave
inc
jb
pop
lret
dec
pop
pop
add
call
pop
mov
imul
in
in
das
cmp
add
movb
cwtl
dec
push
cmp
push
cmpsl
add
mov
pop
mov
jo
xchg
xorb
fsubp
or
mov
cmpl
and
ljmp
mov
jns
out
dec
lahf
imul
rolb
jl
mov
lock
loop
jne
mov
and
loop
or
ret
mov
out
lret
ret
int
cmp
popl
dec
sub
out
sbb
ja
gs
leave
xor
jae
push
lea
sub
xor
cs
pop
add
addr16
adc
xor
loopne
or
pop
lock
add
pop
imul
cmc
pop
push
ret
push
scas
and
sub
adc
mov
out
aas
aas
dec
in
xor
dec
repz
push
mov
popf
in
or
rcrb
movl
pop
jp
and
nop
mov
mov
and
test
push
lods
scas
outsb
pop
test
loope
fsubs
xchg
fadds
mov
inc
pop
scas
jl
sub
stos
cwtl
jl
jle
xor
gs
inc
shl
pop
popa
pop
pop
test
xchg
mov
mov
stc
movsl
mov
lret
inc
dec
jge
xchg
jge
xor
push
fistpll
mov
aas
xor
outsb
pop
push
mov
push
xor
in
mov
jnp
jge
rcll
sbb
daa
dec
popf
iret
test
dec
cld
jecxz
mov
mov
div
sbb
imul
mov
rorl
adc
shlb
insl
test
imul
or
shl
jle
mov
cltd
mov
inc
xlat
jbe
stos
jns
fdivrl
andl
jecxz
repnz
sub
and
mov
mov
pop
lcall
and
sbb
add
push
rcr
dec
lods
lds
stc
jns
inc
shll
jle
mov
add
and
sbb
rclb
jne
dec
sub
jb
ja
or
pop
xchg
fwait
sbb
ret
icebp
inc
out
lret
aas
adc
and
mov
and
add
push
mov
sub
push
call
or
jne
mov
push
push
push
call
push
push
push
call
push
mov
mov
push
push
call
mov
mov
cmpl
je
decl
subl
xor
rorl
addl
add
jmp
pop
pop
pop
mov
pop
ret
add
xchg
in
and
in
add
push
push
call
push
push
push
push
push
push
push
call
mov
mov
xor
mov
mov
rep
inc
cmp
jne
pop
pop
pop
mov
pop
ret
andb
inc
mov
and
push
mov
add
push
push
call
cmp
je
push
push
call
cmp
jne
push
call
cmp
je
push
push
push
call
mov
push
push
call
mov
push
call
cmp
jne
push
push
call
push
call
cmp
jne
push
push
call
push
call
mov
push
push
call
push
call
cmp
je
mov
push
call
or
je
push
push
call
mov
push
push
call
push
call
mov
push
call
and
jne
push
push
call
push
call
mov
push
call
mov
push
call
test
jne
push
push
call
or
jne
push
pushl
call
mov
push
call
mov
push
push
call
push
call
mov
push
call
cmp
je
push
call
mov
push
push
call
lea
push
push
push
call
mov
push
push
call
mov
mov
push
call
mov
subl
addl
call
mov
push
call
mov
movl
push
push
call
push
call
mov
pushl
push
call
mov
pushl
push
call
mov
shrl
pushl
call
push
push
call
addl
push
call
mov
call
xchg
dec
js
subb
and
inc
roll
add
lcall
imul
add
add
add
and
add
add
add
add
cltd
add
dec
lcall
imul
add
add
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
add
insb
jae
jb
outsb
inc
add
add
inc
gs
jb
arpl
fs
jae
add
add
dec
outsl
popa
fs
imul
add
add
push
imul
insb
insb
outsl
arpl
add
add
jb
insl
jo
