lret
xchg
dec
or
decl
add
add
sbb
sbbl
add
mov
add
hlt
mov
mov
xlat
xor
add
pop
gs
dec
inc
pop
les
outsl
test
dec
sbb
xlat
inc
pop
jno
add
or
test
jb
add
or
add
xchg
dec
repz
pusha
add
jne
pop
sarb
int
ss
lods
dec
mov
fxch
fwait
pop
add
add
mov
lds
pop
mov
add
mov
int3
inc
add
sub
adc
push
add
mov
add
loopne
sbbl
pop
les
push
es
dec
adc
add
or
add
jae
add
add
pop
rcr
rorb
out
cld
or
add
xchg
test
xor
add
add
and
add
xchg
pop
mov
xchg
pop
nop
mov
imul
scas
dec
xchg
sbb
int3
dec
icebp
mov
clc
fiaddl
int3
mov
movsl
pop
xchg
addr16
pop
lock
add
sti
jb
add
int3
sub
add
xchg
dec
push
pop
push
pop
mov
in
mov
mov
push
pop
inc
pop
push
add
inc
pop
xor
add
mov
inc
add
or
push
mov
pop
add
add
jg
pusha
add
sub
mov
push
inc
pop
loope
stos
test
dec
inc
pop
out
rcrl
pop
insl
push
pop
add
add
pop
sbbb
loope
in
cmpsb
pop
inc
add
mov
pop
stos
or
clc
xchg
leave
mov
pop
es
ss
fdivs
ds
push
add
negb
mov
aad
push
inc
add
fnstenv
add
sbbb
add
sbbl
add
popf
jge
fistpl
rcrl
cmp
test
ja
add
ja
sti
sbbl
xor
leave
call
sub
jecxz
ret
inc
pop
adc
add
pop
js
add
jmp
add
stos
and
add
add
pop
fiaddl
add
inc
add
push
jl
pop
dec
clc
repnz
add
push
push
cli
jns
mov
repnz
inc
pop
lods
and
add
push
mov
pop
stos
pop
add
add
cmp
aam
js
add
jno
add
pop
ficompl
ljmp
pop
imul
push
adc
inc
pop
ret
pop
lret
mov
fmull
int
and
add
jmp
pop
es
pusha
add
adc
add
rcrl
pop
jmp
add
lds
pop
inc
add
jno
add
lcall
add
xchg
aad
mov
cltd
into
test
mov
sub
jae
add
add
pop
es
sbbb
adc
pop
es
xor
xchg
repz
pop
out
sbbb
add
add
adc
add
add
imul
mov
add
cmp
pop
imul
nop
sbb
pop
jmp
add
lahf
lret
ret
pop
add
add
pop
enter
lods
xor
add
pushf
and
add
cmp
outsl
sub
es
nop
cmpsb
pop
mov
mov
jns
pop
test
pop
lret
mov
int
add
cmp
jo
add
sub
jp
jmp
add
stos
es
jnp
insb
cmpsb
pop
push
nop
fmulp
or
add
xlat
mov
dec
hlt
dec
in
int
pop
filds
call
inc
add
dec
repz
add
pop
xor
pop
xor
add
push
add
push
and
or
push
add
mov
or
xchg
push
or
fdivrs
mov
jl
add
lock
add
into
and
sbb
jle
pop
pushf
sbb
cmp
ljmp
jp
js
popa
add
or
and
add
add
insl
imul
add
cmp
add
ret
mov
add
sbb
pop
adc
int
fdivl
rcrb
add
scas
arpl
add
or
ss
inc
add
shll
add
loop
and
dec
dec
jb
add
cmp
add
ficomps
xchg
xchg
pop
daa
pop
mov
sub
pop
dec
inc
pop
xor
popf
stos
aaa
inc
pop
arpl
add
pop
and
add
add
ljmp
mov
ds
inc
pop
js
sbbl
jnp
pop
jnp
pop
in
repz
dec
push
pop
cwtl
sub
xchg
xor
add
sarl
mov
add
adc
add
shl
jne
cli
pop
xor
add
add
loop
lock
pop
cmpsb
pop
jne
push
jae
add
push
iret
lods
cs
and
add
sbbl
fimuls
add
mov
cmp
or
pop
dec
dec
lods
jb
add
pop
nop
pop
xor
loope
repnz
mov
add
jbe
imul
sbb
add
addr16
cli
cmp
fiadds
inc
pop
adc
add
add
movsb
pop
inc
add
push
jbe
pop
adc
add
and
mulb
add
dec
cmp
lds
dec
cmc
pop
cmc
lea
out
push
sub
add
insb
cld
cmp
inc
pop
xor
add
pop
pop
bound
add
jnp
pop
movsb
pop
cmp
and
add
movsb
pop
scas
lret
inc
pop
and
add
mov
outsl
pop
pop
xchg
fmulp
loope
xor
add
lock
test
add
out
loope
mov
mov
add
jmp
pop
jbe
pop
mov
pop
push
add
stos
es
and
add
pushf
mov
out
call
repnz
xchg
jecxz
les
xor
add
add
cmp
xor
inc
add
and
add
cli
lret
add
pop
jnp
iret
sbb
pop
sbbb
xlat
mov
add
mov
pop
jae
add
cmp
lahf
sbbb
lods
js
xchg
nop
pop
and
sbb
add
add
sbb
pop
clc
jge
pop
lret
add
nop
or
pop
jp
inc
add
adc
add
or
rcrb
lret
add
xchg
pextrw
pop
push
ret
jle
lret
shll
imul
test
cmpsl
pop
mov
and
push
or
mov
repz
mov
pop
clc
cmp
add
stos
xor
add
je
pop
arpl
add
add
adc
add
lock
divb
add
loopne
sub
add
popa
add
aad
add
fldenv
lahf
nop
xor
add
pop
sbbl
loop
xor
add
adc
out
mov
fbstp
add
sbb
add
mov
xchg
lret
out
cmp
repz
mov
add
pop
pop
out
pop
mov
add
xor
add
add
pop
cltd
imul
js
insb
sbbb
add
add
fiadds
sbbl
add
stos
call
leave
fs
mov
add
outsb
fs
mov
pop
fistps
int
cltd
stos
dec
sbb
pusha
add
adc
add
gs
pop
lds
push
add
sahf
dec
js
ljmp
add
push
add
or
pushf
popa
add
adc
add
sti
or
out
pop
scas
xor
add
test
lahf
bound
add
add
and
and
add
add
mov
mov
add
les
sub
pop
out
or
push
pop
stos
imul
pop
or
pop
inc
add
lcall
aad
ffree
pop
inc
add
mov
pop
push
test
sub
xchg
sbb
pop
push
inc
add
cld
cmp
add
or
lods
hlt
sbbb
fs
mov
pop
add
add
jl
add
aam
and
add
test
les
aas
rolb
pop
insl
rcrl
pop
cmp
add
nop
and
inc
pop
inc
add
rcrb
mov
jg
dec
or
mov
in
xchg
in
loopne
ret
pop
ret
add
scas
inc
add
sub
outsl
and
add
add
adc
add
add
mov
add
xlat
jo
add
lock
adc
add
ljmp
sub
add
mov
pop
jne
das
cmc
scas
int3
xchg
xlat
xchg
rcrb
push
mov
add
pop
and
adc
add
add
mov
add
repnz
sti
mov
add
pop
pop
aas
ret
inc
add
pop
mov
pop
cli
loopne
sbbl
fnstsw
test
pop
sub
lcall
imul
pop
jmp
add
jno
add
fs
mov
lret
adc
add
adc
add
repz
out
ds
pop
jbe
pop
test
arpl
add
sti
pop
iret
test
mov
sbb
lea
add
pop
fmull
scas
clc
jne
and
add
dec
cwtl
pusha
add
jne
jo
add
sub
push
add
fs
fucomp
out
or
jno
add
push
xchg
add
add
sbb
pop
and
add
and
add
add
or
sti
addr16
mov
mov
pop
inc
pop
sbb
adc
add
loope
adc
add
inc
pop
jg
sbb
push
nop
jbe
outsl
test
pop
je
sti
test
popf
call
cmp
repnz
pop
pop
xlat
adc
out
mov
add
pop
fst
ret
pop
imul
cmp
loopne
repz
add
jmp
loope
sbb
fsubrl
add
lret
add
xchg
fs
xchg
xlat
xchg
ficompl
mov
pop
out
shl
pop
and
add
jle
sub
add
in
std
xchg
pop
mov
add
add
and
cmc
cs
pushf
add
add
adc
add
add
add
push
pop
js
add
or
ret
pop
push
pop
and
add
inc
add
int3
ja
gs
mov
inc
add
pop
mov
pop
xor
add
sub
pop
popf
pop
push
pop
mov
pop
popa
add
push
pop
adc
pop
clc
stc
insb
rcll
add
pop
push
out
aam
pop
xchg
xchg
das
stc
sub
add
adc
clc
enter
sub
mov
add
and
lods
sbb
leave
push
bound
add
scas
xchg
xchg
add
add
hlt
pop
mov
jbe
or
sbb
pop
xchg
lret
pop
push
add
xchg
shrl
test
sub
add
addr16
and
add
pop
cmp
cwtl
sbb
pop
pop
shrb
pop
dec
dec
or
add
pop
test
pop
hlt
xor
fidivl
rcrb
or
lret
stos
inc
pop
xchg
scas
jg
mov
fwait
jae
add
in
pop
push
add
lods
adc
add
loop
pop
test
add
sbbl
hlt
lret
mov
push
add
leave
add
add
mov
fisubrl
add
insl
mov
add
sbb
daa
pop
and
leave
mov
das
sbbl
pop
jle
adc
rcrb
sbbl
cmc
sub
adc
add
add
xor
add
ss
inc
pop
mov
mov
and
adc
add
inc
add
insl
nop
inc
add
lds
pop
lds
xchg
popf
sbbl
pop
rolb
add
movsl
pop
dec
and
add
jp
pop
xor
add
add
inc
add
inc
pop
jmp
cmp
add
rcll
pop
sub
mov
lock
mov
mov
add
clc
jns
dec
sub
add
and
add
popa
add
pop
es
rolb
mov
leave
jnp
icebp
aaa
mov
pop
lods
iret
jl
paddsb
lcall
fldcw
pop
and
add
mov
pop
xor
add
add
add
aaa
push
test
adc
pushf
jno
add
jbe
jmp
jecxz
mov
add
pop
movsb
pop
mov
adc
inc
add
out
lret
gs
clc
decb
push
add
push
add
jl
test
add
je
jns
push
mov
dec
xor
pop
mov
pop
ret
pop
pop
int3
lahf
fcmovu
je
mov
pop
push
aaa
dec
jmp
cmp
pop
dec
pop
loope
xchg
inc
add
jbe
add
or
add
mov
pop
out
add
add
pop
inc
pop
mov
mov
add
fisttpl
push
jg
pop
jle
faddp
pop
fstl
int
and
add
dec
push
add
push
add
nop
pop
mov
pop
xchg
add
and
inc
pop
lods
xor
add
out
pop
xchg
add
add
xor
add
xlat
adc
push
pop
ds
dec
ret
test
pop
sbb
cs
pop
in
jb
add
in
fcompl
add
push
add
adc
add
pop
adc
negl
mov
add
repnz
sbbb
add
mov
movsb
pop
inc
pop
push
add
fildll
add
repz
pop
idivb
mov
or
in
dec
cmc
cmp
repz
lret
movsl
pop
mov
mov
jae
add
xor
add
rcrl
scas
xchg
cmc
push
in
insb
scas
imul
jne
xchg
or
pop
into
rclb
aaa
or
fidivl
add
mov
pop
push
adc
lds
push
pop
jb
add
jl
popf
or
pop
hlt
mov
add
pop
pushf
divl
pop
and
pop
es
pushf
jnp
cmp
inc
add
jne
outsl
dec
xchg
int3
and
jb
add
add
add
pop
inc
add
mov
outsb
adc
xor
add
add
fs
jno
add
popf
pop
int
cwtl
sahf
rcrl
pop
insl
and
add
sub
pop
out
or
add
fnstcw
add
outsb
les
es
inc
add
xor
add
gs
cmc
push
inc
add
test
pop
mov
and
add
pop
lock
pop
adc
add
pop
repnz
add
mov
dec
jbe
pop
and
add
jnp
pop
lods
inc
add
mov
xchg
jge
pop
stos
addr16
dec
je
ret
pop
cmp
pop
pop
and
add
jo
add
add
insl
push
gs
enter
and
pop
and
add
pop
fcompl
addr16
je
xchg
dec
das
stos
gs
sub
shll
test
inc
add
cwtl
popf
sub
xchg
xchg
ret
xor
add
add
in
xchg
in
ret
add
jp
out
gs
sub
pop
pop
int3
cmpsb
pop
or
movsb
pop
adc
popf
pop
push
add
js
pop
and
stos
ret
pop
shll
lret
sbb
ja
add
aam
pop
mov
add
cltd
sbb
add
ljmp
or
popa
add
and
inc
pop
and
add
test
in
inc
add
jl
jmp
add
fstps
pushf
sbb
rcrl
sbbb
add
sub
and
xchg
mov
pop
xor
add
pop
les
push
add
cld
pop
jecxz
mov
js
pop
adc
add
pop
push
add
rcrb
xlat
test
jns
mov
add
idivl
pop
sub
inc
add
rcrb
insl
inc
pop
jecxz
and
add
add
sub
add
mov
cwtl
or
fisttps
mov
inc
add
pop
push
int
cmc
xor
add
xchg
bound
add
xor
add
sub
sub
add
xchg
dec
xor
add
xchg
test
aas
cmpsb
pop
shr
test
imul
add
pop
mov
adc
stos
je
jecxz
iret
adc
add
add
pop
aad
pop
jmp
mov
cwtl
inc
add
rcrl
add
add
xchg
bound
add
or
int
add
pop
push
mov
adc
add
xor
add
pop
adc
add
pop
or
pop
stc
jo
add
add
shll
pop
mov
pop
in
call
in
and
add
jo
add
adc
add
cmpsl
pop
loope
es
icebp
lcall
rep
pop
dec
push
add
add
repz
add
mov
test
rclb
add
out
pop
sbbb
repz
sub
pop
insl
movsl
pop
es
mov
pop
jmp
pop
jg
add
or
sahf
leave
adc
add
add
add
stos
daa
pop
cwtl
dec
mov
cmp
fcomps
rorb
repnz
pop
mov
xchg
loopne
sbbb
add
add
fldenv
add
notb
cmp
add
or
add
cmc
ljmp
fdivrp
mov
dec
pop
mov
mov
add
pop
stos
sbb
pushf
sub
xchg
out
mov
add
adc
add
out
iret
insl
xchg
mov
jb
add
sub
mov
push
add
mov
scas
mov
add
mov
into
popf
pop
lea
add
add
repz
scas
lock
pop
jnp
pop
push
add
ljmp
adc
mov
xor
pop
loop
jmp
mov
icebp
mov
mov
push
call
push
add
xchg
leave
push
clc
sbb
in
push
add
int3
jp
pop
add
add
pop
and
pop
dec
push
cmp
arpl
add
xor
add
pushl
add
sbb
mov
pop
push
push
call
pop
mov
add
stos
mov
jmp
mov
pop
cli
jae
add
arpl
add
xchg
fs
mov
cmp
add
sub
add
rep
jno
add
pop
popa
add
scas
dec
cmovle
mov
out
xchg
push
aas
test
push
insb
push
pop
cs
iret
ret
pop
mov
pop
mov
mov
add
mov
pop
and
add
adc
inc
add
je
mov
js
add
and
add
pop
or
lds
sub
add
add
add
ljmp
pop
push
pop
les
mov
pop
cmpsb
pop
scas
mov
mov
inc
pop
je
pop
push
pop
int3
jecxz
ljmp
ljmp
jb
add
pusha
add
push
mov
imul
push
add
rcrb
or
ja
adc
add
arpl
add
pop
fwait
sub
pop
loope
mov
add
incb
add
dec
pop
sbb
add
cmp
rcrl
jmp
add
scas
inc
add
push
xlat
pop
sub
iret
inc
add
xchg
cmp
add
pop
fxch
gs
loopne
jno
add
les
in
mov
cmc
mov
inc
pop
stos
outsl
in
lcall
ret
pop
inc
add
cmp
enter
add
add
psllw
pop
adc
add
add
bound
add
pop
out
movsl
pop
test
inc
pop
push
lods
xchg
jl
adc
add
add
jae
add
aad
sub
movsb
pop
aad
cmpsl
pop
aaa
mov
sbb
pop
aam
pop
push
or
sbb
pop
lcall
pop
popa
add
sbb
mov
or
pop
pop
cmpsl
pop
mov
pop
xor
add
pop
icebp
add
icebp
pop
sub
mov
pop
hlt
enter
add
mov
add
mov
xchg
test
fsubrl
mov
mov
std
rclb
add
add
pop
mov
push
add
outsb
sbb
cs
add
roll
inc
pop
pusha
add
lods
fsubs
pop
dec
push
add
cmpsb
pop
fstps
test
pop
lods
xchg
cli
arpl
add
cs
lds
ficoml
sbb
push
add
mov
add
jnp
scas
adc
pop
and
add
pop
movsb
pop
sbbb
pop
mov
outsb
lcall
je
add
dec
daa
pop
cli
inc
add
mov
add
mov
add
add
pop
mov
pop
js
sub
add
sbb
push
cwtl
daa
pop
imul
add
xchg
daa
pop
mov
pop
sbb
sbb
push
movsb
pop
popa
add
jbe
pop
imul
add
cli
scas
xor
add
pop
cmp
pop
xor
add
add
pop
pop
xor
add
cmc
mov
pop
inc
pop
fsubrs
cmpsb
pop
aas
not
imul
stos
into
or
or
fists
add
jmp
or
pop
test
into
mov
add
sbb
push
add
hlt
jae
add
pop
mov
add
lods
stos
fidivl
lock
cmp
mov
cmp
cmc
sub
mov
add
js
xchg
pushf
xor
add
mov
js
xor
pop
inc
add
shr
dec
out
cltd
cmp
jns
add
fxch
lods
outsb
add
add
add
pop
inc
add
push
mov
pop
iret
xor
push
add
sub
ja
fcoms
and
add
add
sbb
jno
add
mov
add
add
add
add
add
mov
add
mov
sub
aam
mov
test
repz
pop
and
add
mov
add
cmp
pop
stos
cld
mov
rcrb
jno
add
cmpsl
pop
mov
add
xchg
xchg
add
add
sbbl
repnz
add
cmpsl
pop
sbb
add
or
leave
mov
jmp
dec
std
push
add
xlat
lret
dec
xlat
jnp
sbb
sub
in
test
add
add
in
push
add
rcrb
push
cli
and
add
add
sbb
pop
pop
outsl
addr16
ja
mov
push
add
xchg
pop
movsb
pop
xchg
pop
sti
clc
dec
movsb
pop
add
fwait
fwait
aaa
pop
pop
xchg
jne
pop
cs
lcall
aas
sbb
pop
pop
cwtl
lds
add
incl
pop
sub
push
bound
add
add
stos
lcall
add
mov
das
adc
add
jb
add
add
pop
mov
lret
jnp
sub
pop
movsl
pop
xor
pop
push
add
mov
call
pop
and
add
add
add
dec
cmp
into
mov
or
pop
pop
pop
aam
pop
lea
insl
jl
ret
pop
aaa
mov
sbbl
add
push
push
cltd
push
mov
xor
add
fdecstp
mov
pop
stc
in
or
fildll
add
test
pop
push
inc
add
addr16
xlat
insb
adc
add
inc
pop
lcall
add
pop
fs
xchg
sbbl
mov
jnp
lret
add
enter
mov
xor
or
add
add
pop
dec
jecxz
dec
add
add
iret
pop
cld
xchg
pop
sarb
repnz
pop
xor
add
jns
pop
xchg
jle
cmp
mov
iret
or
cmp
pop
jge
xor
movsl
pop
or
add
add
pop
xor
add
loop,pn
mov
add
pushl
jge
mov
sbb
add
push
pop
jmp
pop
cmp
push
add
shlb
push
add
add
pop
imul
add
mov
ficoml
pop
mov
and
add
add
mov
mov
mov
ret
pop
int
das
loopne
pop
pusha
add
mov
add
mov
pop
insl
insb
test
popa
add
sbbl
jmp
mov
mov
pop
int
mov
inc
pop
int3
pop
neg
daa
pop
mov
fldcw
pop
lret
push
and
add
add
fcomps
scas
ffreep
pop
xchg
sbbb
mov
cmpsb
pop
je
sbbl
or
idivl
add
xor
cli
iret
imul
adc
add
icebp
or
add
add
add
add
fldl
fwait
mov
mov
sub
add
mov
repnz
sub
add
sbbl
sbbb
add
mov
pop
pop
pop
fs
jae
add
nop
bound
add
pop
sbbb
les
std
loopne
adc
add
ret
add
loope
adc
add
aas
in
xor
add
push
daa
pop
mov
inc
pop
sbb
inc
pop
xor
cmp
sub
sbb
hlt
rcrl
sub
add
je
fnstsw
test
pop
pusha
add
lds
pop
mov
pop
push
add
add
add
sub
pop
jecxz
in
ficoms
fldt
lcall
pop
pop
mov
push
add
xor
add
add
repnz
push
pop
adc
add
add
enter
pop
jle
pop
dec
cs
dec
push
mov
mov
pop
imul
arpl
add
jno
add
ja
push
pop
push
cmp
mov
cmp
scas
or
rcll
cmp
fninit
pop
mov
add
scas
jns
pop
jb
add
pop
jp
add
jg
pop
mov
add
add
add
add
dec
out
hlt
add
add
xchg
push
sbbl
sbbl
pop
pop
mov
inc
pop
mov
add
mov
daa
pop
jp
pop
gs
xchg
aam
pop
push
test
sub
mov
mov
pop
sahf
mov
pop
push
mov
add
test
adc
add
ds
js
loop
inc
pop
ret
pop
lret
jnp
into
cmpsl
pop
roll
add
xchg
rclb
cli
sub
mov
int
pop
ss
lods
stos
inc
add
int3
inc
pop
outsb
mov
add
aaa
stc
inc
pop
loopne
push
or
jns
lcall
sub
hlt
mov
pop
inc
add
insl
cltd
pop
xlat
mov
mov
add
sti
scas
imul
pop
sbb
add
popf
push
add
movsb
pop
mov
jl
cmpsl
pop
movsb
pop
sbbl
popf
or
incb
add
pop
pushf
daa
pop
or
add
shlb
xchg
jae
add
xchg
loopne
xlat
mov
dec
pop
or
outsb
enter
add
add
cmp
stos
dec
dec
mov
add
aas
jno
add
xchg
leave
jno
add
loope
std
imul
stos
lea
pop
or
enter
movsl
pop
mov
inc
pop
mov
inc
pop
ret
pop
xor
add
pop
pop
mov
pop
xor
add
add
add
adc
add
add
repnz
add
push
dec
cld
fs
mov
pop
xchg
inc
pop
fs
rcll
mov
pop
sub
movsb
pop
jnp
inc
pop
jge
rcrb
add
cltd
sub
xchg
sub
adc
pop
xchg
jg
add
pop
pop
enter
shl
pop
sbb
movsb
pop
xchg
dec
aad
mov
add
imul
add
call
add
int
mov
add
popf
add
add
sbbl
or
add
push
add
add
pop
mov
pop
xchg
jmp
icebp
lcall
ficoml
add
scas
jno
add
adc
pop
and
add
add
scas
outsb
aas
mov
add
mov
popf
jae
add
icebp
mov
add
adc
add
add
jmp
cmpsb
pop
lds
enter
add
xchg
imul
stos
inc
pop
sbb
rcrb
stos
sbb
adc
add
imul
mov
les
pop
cmp
xchg
out
ss
pop
stc
scas
push
je
into
jae
add
ds
add
outsl
in
xor
add
push
jae
add
add
add
out
jecxz
out
or
ret
pop
shll
jo
add
push
add
jp
sub
or
bound
add
pop
lcall
add
xor
add
pop
pop
pusha
add
aad
pop
jae
add
jge
inc
pop
adc
add
jne
pop
out
sub
pusha
add
pop
nop
sbb
add
iret
div
cmp
or
add
movsl
pop
stos
fisttpll
xchg
outsl
das
gs
sub
dec
or
mov
add
mov
jp
loope
push
add
or
add
xchg
clc
inc
pop
or
ja
lahf
js
add
jb
add
add
mov
cltd
pop
jo
add
sub
xor
add
xor
add
xor
add
out
and
jo
add
pop
jns
mov
mov
lret
clc
pop
push
movsl
pop
call
dec
jecxz
dec
leave
aaa
push
test
loope
xor
add
lcall
lret
js
pop
mov
cmp
pop
cmp
and
add
lods
xchg
pop
enter
mov
add
add
adc
add
sahf
mov
and
add
add
adc
add
pop
adc
add
adc
cltd
pop
sbb
pop
pop
inc
pop
dec
jo
add
add
cltd
lret
and
add
dec
sahf
xlat
sbbl
cmp
mov
add
call
test
pop
push
pop
adc
add
lock
or
mov
jns
popf
rclb
add
pop
ljmp
add
add
add
flds
cmpsl
pop
inc
add
cmp
ljmp
sub
mov
mov
push
add
call
jge
pop
sub
pop
pop
int
xor
add
sub
add
aas
jns
inc
pop
es
pop
sub
testb
jne
xchg
in
out
cmp
add
into
ret
pop
pop
fisubs
add
mov
pop
pop
inc
add
js
adc
add
inc
pop
jbe
leave
pushf
push
add
iret
mov
and
test
pop
notl
xor
add
pop
sub
push
pop
mov
xchg
and
xor
insl
inc
pop
xor
add
sti
pusha
add
arpl
add
pop
jbe
add
call
pop
sub
daa
pop
push
sub
mov
out
add
add
mov
or
add
pop
push
cs
xchg
add
pop
sub
leave
push
in
popa
add
mov
and
add
pop
sar
and
add
js
call
ret
pop
loop
add
add
add
xchg
popf
push
add
cli
mov
sub
pop
outsb
gs
fs
or
add
sbb
or
cltd
mov
push
add
fadds
add
pop
loop
rcrb
insl
and
add
or
lea
nop
adc
test
scas
mov
push
xlat
xchg
arpl
add
sub
pop
cmp
push
pop
sub
pop
in
inc
add
push
or
add
sbbb
ret
jns
pop
push
add
pop
mov
xchg
negl
loope
pop
pusha
add
gs
cltd
mov
add
add
and
pop
mov
adc
add
pop
in
nop
pop
fidivs
add
sub
hlt
aaa
and
add
mov
xor
add
pop
movsb
pop
pop
mov
rorb
sub
add
push
pusha
add
push
add
fwait
imul
xchg
xchg
xchg
ds
add
test
jle
pop
dec
jb
add
xor
add
add
add
add
xor
add
add
adc
add
add
add
repz
add
out
or
pop
sub
notb
fsubr
repz
xor
cmc
imul
add
pop
sub
push
pop
out
test
int
adc
add
xchg
lds
cmp
push
pop
fldt
pop
lods
cltd
lcall
inc
add
pop
pop
and
add
mov
cmp
pop
sub
add
pop
fnsave
inc
add
cmp
add
lods
test
add
pop
jns
xchg
push
add
test
and
add
insb
add
add
nop
pop
pop
sbb
stc
pop
inc
add
sbbb
pop
xchg
pop
lods
ffree
pop
es
sub
loope
mov
daa
pop
ja
scas
jns
cltd
sub
pop
push
add
pop
mov
add
outsb
pop
mov
jmp
dec
xor
add
xor
add
pop
and
lods
addr16
push
int
pop
add
add
mov
gs
rcl
outsl
gs
pop
adc
or
notl
adc
movsl
pop
push
insl
pop
cmp
lcall
in
jp
pop
div
jns
pop
rolb
xchg
sbb
pop
mov
pop
aam
add
xchg
out
dec
xor
jbe
sub
add
pop
pop
test
fmuls
add
and
add
cmp
inc
pop
leave
les
sbb
clc
out
pushf
cwtl
xchg
xor
add
add
add
repz
cmp
add
mov
pop
ljmp
dec
das
imul
cmpsl
pop
jle
add
gs
xchg
add
cmp
arpl
add
mov
pop
repnz
sbbb
add
dec
mov
add
add
aam
xchg
lcall
ret
pop
fidivrs
pop
push
pop
mov
push
add
pop
aam
sbb
sbbb
das
inc
pop
push
add
lret
iret
ja
cmp
add
add
pop
dec
les
dec
or
inc
add
repz
add
mov
pop
in
and
in
cwtl
xor
add
or
and
add
cmp
add
cli
xchg
mov
pop
push
dec
dec
out
in
or
mov
sub
add
sub
pop
rol
pop
mov
pop
iret
in
and
add
mov
add
push
pushf
fdiv
pop
sbbl
sub
fcoml
mov
pop
mov
daa
pop
cld
jmp
xchg
add
add
jb
add
add
xor
mov
pop
aam
add
imul
pop
popf
xor
add
pop
lcall
sub
out
scas
add
add
add
pop
shrb
inc
pop
sbb
leave
add
add
stc
adc
add
inc
pop
sub
add
add
add
add
cmp
mov
leave
ss
pop
ds
cmpsb
pop
loope
and
fwait
js
add
arpl
add
sbb
mov
or
add
adc
add
add
das
in
loope
les
and
add
add
dec
lods
stc
das
xchg
or
lock
pop
mov
imul
sti
in
mov
pop
lea
arpl
add
add
add
ret
pop
lahf
jle
rcll
sbb
add
add
add
inc
add
outsb
xor
add
add
xchg
repnz
push
add
pop
dec
and
add
pop
inc
pop
in
mov
and
add
xchg
sbbb
jmp
mov
jmp
add
inc
add
and
add
mov
fbstp
pop
or
xor
mov
pop
mov
pop
xor
add
xchg
popa
add
fiadds
add
mov
pop
inc
pop
cmp
sbbb
pop
scas
sub
js
pop
test
pop
gs
pop
pop
out
or
pop
dec
xor
aam
push
inc
pop
cmpsb
pop
cmpsb
pop
or
lods
jg
and
mov
in
fcoml
add
mov
push
icebp
lret
sbb
jge
pop
add
add
pop
lahf
cs
adc
add
add
inc
add
sub
enter
mov
and
cs
add
xor
add
add
mov
jecxz
pop
lcall
imul
add
fdivrl
inc
add
aad
sbb
fisubs
jno
add
adc
add
sbbl
adc
add
inc
add
pop
sbb
ljmp
add
add
add
add
mov
add
add
push
push
lcall
add
pop
sub
pop
je
gs
inc
add
push
mov
in
out
mov
pop
jge
std
out
or
outsl
or
std
in
in
sbb
add
sbbb
add
call
pop
inc
add
mov
sti
lock
adc
pop
jae
add
fldenv
add
and
add
xor
out
and
add
xchg
ljmp
pop
mov
add
pop
stc
adc
add
addr16
les
dec
sbbb
pushf
push
add
inc
add
push
add
mov
inc
pop
dec
arpl
add
adc
add
add
or
push
adc
add
add
lods
mov
push
and
add
xor
add
pop
inc
add
sub
pop
cld
xchg
and
add
cmp
add
mov
pop
or
cmpsb
pop
xchg
jae
add
inc
add
jns
sbbb
pop
mov
push
adc
add
xor
add
pop
rcll
cltd
jnp
cmp
pop
pop
loop
add
push
add
sub
pop
insb
ret
sahf
sbbb
pop
or
pop
sub
pop
pop
out
rcrl
add
loopne
lahf
mov
insb
jl
not
jae
add
add
rclb
add
jmp
pop
cmp
pop
ret
pop
movsb
pop
dec
lods
adc
add
xchg
gs
in
mov
test
mov
addr16
push
add
stos
ret
push
sub
xor
add
pop
cli
xor
add
dec
sbbl
sub
mov
pop
cmc
js
ljmp
add
std
adc
add
jmp
lahf
xchg
lods
inc
add
pusha
add
loope
imul
sbb
hlt
fistl
add
mov
stos
xchg
pop
jnp
pop
out
or
dec
hlt
mov
dec
inc
add
xor
add
jecxz
push
sbb
pop
xlat
dec
sbb
pop
mov
mov
scas
stos
test
pop
sahf
cwtl
xor
mov
pop
dec
ds
pop
pop
pop
mov
pop
mulb
pop
adc
add
add
add
add
add
add
add
mov
pop
lcall
add
cmp
add
bound
add
std
sarb
add
imul
out
cmp
aas
push
pop
lods
movsb
pop
mov
movsb
pop
in
cmc
mov
pop
rcrb
pop
call
add
mov
add
mov
jb
add
inc
add
sub
test
add
push
lahf
add
icebp
les
add
pop
dec
adc
add
rorb
lahf
mov
mov
icebp
ss
loop
int
or
nop
lock
pop
in
cmp
int3
and
add
dec
pop
ficoml
push
pop
add
add
xchg
add
add
add
outsl
jno
add
scas
loopne
es
mov
mov
pusha
add
stos
mov
fisttps
pop
jns
movsb
pop
aam
add
int
mov
sub
xchg
out
outsl
fwait
mov
sub
inc
add
pop
bound
add
and
add
sbbl
pop
inc
pop
jo,pt
add
add
xor
adc
add
add
pop
and
add
add
xchg
jge
add
add
add
or
cmpsl
pop
jg
pop
jmp
mov
fwait
repnz
fdivl
add
push
inc
pop
fdivrs
dec
into
cmpsl
pop
or
mov
imulb
jmp
add
mov
insl
insl
fiaddl
pop
test
into
mov
and
add
xor
add
les
nop
pop
es
ljmp
add
popa
add
lret
lods
roll
add
cmc
dec
jbe
pop
nop
sbb
jae
add
push
pop
in
addr16
or
add
stos
jp
push
inc
add
pop
mov
cmp
add
sahf
push
xrelease
lahf
sbbl
loope
pop
or
pop
mov
sahf
fwait
push
mov
add
push
add
lock
rclb
xor
add
add
add
js
add
icebp
sti
pop
fs
or
cld
sahf
mov
jmp
jb
add
scas
aaa
lcall
aad
loope
test
pop
lods
push
es
pop
mov
clc
out
and
and
jbe
and
je
pop
arpl
add
mov
pop
jmp
sbb
pop
lret
in
sub
xchg
adc
add
add
add
pusha
add
cwtl
call
xchg
inc
pop
gs
arpl
add
pop
add
les
adc
add
adc
add
pop
pop
mov
lea
add
and
add
or
pop
jbe
aad
cld
pop
cmp
ficoml
and
add
jp
pop
mov
pop
fcmovnb
pop
xor
pop
and
add
sub
push
push
xchg
fists
aaa
cmp
loop
icebp
xchg
insl
dec
adc
dec
cmp
sbbb
pop
incb
add
lds
lods
pop
pop
clc
cld
sub
lcall
adc
add
dec
xchg
lds
dec
loop
add
add
das
and
add
ja
cmp
pop
and
add
add
divl
and
add
loop
sbbb
into
sahf
aad
mov
pop
testb
add
xchg
shll
pop
mov
or
pop
mov
mov
lods
sbbl
cmp
push
add
mov
add
push
repz
aas
rcrl
add
cmp
xchg
mov
pop
fdivrs
pop
push
negb
call
dec
xchg
cwtl
sbb
pop
cmp
testl
out
out
mov
add
adc
add
loop
xchg
push
outsl
push
add
rcll
add
sbb
mov
pop
xchg
xchg
int
add
lds
or
cmp
pop
fmull
pop
inc
pop
jle
pop
add
add
pop
outsl
ds
inc
pop
xchg
ss
push
add
jae
add
add
mov
xchg
push
std
addr16
fucom
pop
gs
sub
out
jge
sub
fnsave
pushf
push
xor
add
add
and
add
stos
inc
add
xchg
xchg
ja
cmc
das
cmpsb
pop
sahf
cli
and
jecxz
sub
lock
fs
icebp
sbb
mov
mov
mov
inc
pop
inc
add
mov
pop
or
add
sbb
add
sub
add
sahf
clc
cli
pushf
xchg
xlat
push
mov
sub
cmp
inc
pop
in
jg
and
add
pop
pop
pop
int3
pop
pop
sbb
xor
add
add
add
stos
fld
pop
lea
jg
xor
add
add
pop
repz
pop
cmp
add
cld
call
xchg
push
dec
std
cmp
pop
in
ds
add
add
jge
stos
fstpt
add
sbbb
add
push
add
lods
ficomps
notl
add
mov
cltd
push
add
sbb
ss
insl
jp
int3
es
pop
sub
cmp
add
cs
repnz
arpl
add
mov
inc
pop
jg
add
inc
add
mov
sbb
and
add
cmpsb
pop
inc
add
fsubr
jb
add
add
mov
add
mov
add
inc
add
pop
add
add
movsb
pop
push
pop
inc
add
sarb
aaa
mov
add
loope
add
add
push
pop
pop
xchg
repnz
or
mov
adc
add
fwait
pop
addr16
sahf
sarl
cwtl
mov
sbb
push
aam
xchg
and
add
sbb
test
test
jae
add
pop
ss
add
cmc
inc
pop
fsubrl
outsl
pop
std
mov
pop
je
push
add
test
pop
mov
mov
xor
mov
push
rolb
add
cmc
pop
fwait
xchg
add
mov
pop
outsl
das
fstl
sub
add
repz
repnz
add
mov
pop
aam
sub
cmp
add
cmp
inc
pop
in
sbb
pop
lret
leave
xchg
ret
pop
insb
addr16
pushf
sbbb
iret
adc
add
add
cwtl
pop
es
pop
leave
fmull
aas
call
cwtl
bound
add
add
mov
pop
in
add
add
mov
testl
mov
adc
ret
pop
nop
gs
jg
pop
cld
sti
in
hlt
out
fstpt
pop
pop
es
cmp
and
add
fistl
mov
add
add
add
dec
push
add
and
add
add
lret
add
imul
add
sbbb
pop
inc
pop
into
outsl
cs
fstps
pop
test
add
lds
int
pusha
add
mov
pop
jle
xor
add
xchg
push
sbb
add
rcrb
add
test
cld
mov
pop
fs
inc
add
and
mov
add
mov
jns
xchg
dec
loop
inc
pop
rcrl
add
xor
add
add
dec
mov
fs
adc
add
sbb
add
clc
lret
sbb
add
pop
pop
aam
cld
mul
pop
nop
jl
jle
loop
push
test
stc
js
sub
pop
adc
add
insb
or
xchg
pop
gs
mov
les
js
adc
imul
add
jmp
aas
js
push
add
out
xchg
pop
ror
fsubrs
js
add
add
pop
dec
push
jns
mov
add
insl
shll
add
mov
sbb
add
sahf
test
pop
add
add
js
cld
inc
pop
sbb
xchg
lret
sbb
out
hlt
enter
push
pop
xchg
lods
xor
add
iret
push
lea
mov
sbbl
test
daa
pop
xchg
ret
pop
movsb
pop
inc
add
sbbl
pop
nop
mov
pop
mov
ret
popa
add
add
add
xchg
inc
pop
adc
add
pop
pop
int
add
jmp
dec
xchg
adc
add
pop
adc
pop
sbb
out
stc
ja
int
push
inc
pop
ret
pop
and
pop
popa
add
cltd
out
out
lods
daa
pop
jge,pt
dec
cltd
jp
mov
bound
add
adc
push
jp
inc
and
dec
mov
sbb
mov
push
mov
add
push
push
call
add
push
call
mov
add
test
jne
jmp
mov
imul
movzbl
shr
push
mov
add
push
mov
push
push
call
push
call
leave
ret
xchg
mov
sub
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
jmp
shr
add
jmp
lea
movsl
pop
mov
add
pushf
mov
lods
lea
pop
mov
outsl
int
rcrb
popf
jge
mov
xchg
pop
sbb
pop
cs
add
push
testl
int
pop
inc
add
and
add
pop
lods
dec
lret
mov
add
xchg
lret
aas
jbe
add
in
jbe
push
jmp
and
arpl
push
add
add
scas
mov
decb
add
sarb
push
outsl
or
add
int
add
add
add
adc
add
sbbl
mov
add
jmp
pop
mov
add
loop
or
mov
pop
xchg
sti
jle
push
add
push
add
fs
call
pop
push
add
stos
push
add
lds
sahf
or
lcall
pop
lds
pop
repnz
add
pop
jge
pop
push
pop
mov
push
add
adc
add
pop
das
add
jmp
sub
add
inc
pop
jmp
add
jle
mov
std
lods
jp
pop
movsl
pop
imul
add
or
dec
loope
mov
jecxz
sbbb
add
cmp
out
push
jmp
aas
fcomp
mov
pop
fmull
sub
cmp
pop
sbbl
dec
inc
pop
pop
fnstsw
or
pop
hlt
pop
cmp
pop
sub
add
xor
add
xor
add
pop
jnp
out
or
mov
les
sub
sub
pop
incb
pop
test
add
xchg
arpl
add
mov
inc
add
inc
add
daa
pop
push
add
inc
pop
dec
icebp
out
inc
pop
pop
pop
lret
jae
add
es
adc
add
lcall
dec
sbb
jbe
add
inc
add
popa
add
jle
lock
add
adc
add
pop
int
push
add
std
pop
ficoms
add
rep
ss
sbb
inc
cmp
fistl
add
arpl
loop
stc
daa
pop
cmc
pop
das
push
add
insl
rcrb
lcall
add
js
add
pop
mov
pop
daa
pop
push
pop
mov
add
ret
pop
adc
out
cmp
and
add
add
lea
push
mov
dec
lods
mov
xor
add
add
add
out
dec
sbb
sbb
cmc
mov
insl
loopne
ret
pop
aam
xchg
enter
sub
add
xor
add
or
mov
ret
mov
add
xchg
xor
add
push
in
jo
add
popl
jmp
or
add
pop
ljmp
add
fists
lahf
test
sbb
inc
add
fbld
loope
insl
and
add
push
nop
push
ret
xor
inc
dec
mov
fcoms
jmp
cmpsl
xor
lods
push
out
mov
sub
add
out
and
add
pop
or
add
add
add
add
add
push
jmp
or
ljmp
les
movsl
pop
pop
pop
xor
jle
push
xchg
push
push
lea
jmp
fistpll
jp
dec
xchg
das
xchg
lahf
dec
cmc
shll
add
adc
add
add
sbb
mov
iret
xor
add
jmp
jp
xor
lds
push
ret
inc
add
push
pop
mov
shrl
xchg
outsl
mov
pop
sbbl
aam
add
arpl
arpl
movsb
pop
daa
pop
and
add
dec
pop
sbbl
stos
and
add
xor
push
add
das
je
pop
test
bound
add
and
stos
pop
cmp
dec
lods
sbb
xchg
cmpsb
pop
pop
pop
xlat
jge
mov
pop
nop
sbbl
add
mov
pop
lahf
add
aam
xchg
lds
add
stc
cs
add
mov
sub
pop
xchg
add
add
lods
pop
jns
outsl
and
je
into
fisubrs
push
cmp
mov
fiadds
add
mov
jae
add
pop
jns
mov
jmp
push
daa
arpl
and
pop
adc
add
test
add
rep
jmp
pop
daa
push
ret
arpl
sbb
add
fs
add
pop
or
in
jnp
pop
add
add
add
push
push
inc
jmp
arpl
aam
mov
jb
add
pop
adc
popa
add
cmp
add
cmp
cmp
dec
xchg
repz
lea
push
pop
into
xchg
mov
fcoml
and
or
mov
jmp
push
out
arpl
push
add
jmp
arpl
arpl
fs
pop
pushf
sbbl
lret
fdivs
mov
pop
popf
dec
xor
or
add
jmp
jmp
push
cmp
mov
and
add
xchg
mov
add
add
lcall
xchg
nop
xor
jo
add
xor
mov
add
xchg
cmpsl
pop
stos
mov
movsb
pop
ror
mov
inc
add
cwtl
cltd
pop
mov
in
mov
add
lea
add
fs
mov
cltd
or
xor
add
fdivrs
test
mov
call
in
das
add
sti
sbb
push
mov
nop
push
ret
arpl
dec
inc
pop
push
add
push
aaa
pop
les
add
add
jle
pop
mov
pop
pshufw
pusha
add
sbb
mov
sbb
mov
insl
add
add
add
rcr
fildll
push
sbb
inc
sbb
add
xor
sbbb
xor
add
mov
pop
xchg
cmp
push
ficoms
add
mov
add
sub
sti
jge
in
hlt
mov
add
mov
push
ret
daa
pop
addr16
mov
sub
push
nop
push
ret
arpl
out
mov
lahf
cs
mov
xchg
aaa
scas
jle
ja
stc
or
sub
pop
sbbl
push
add
jmp
lods
fists
push
js
add
loope
jp
add
xor
add
in
pop
pop
lcall
add
mov
pop
rcrl
cmp
sti
les
add
add
mov
jmp
or
and
stos
mov
pop
out
aad
mov
or
add
out
or
int
daa
pop
sub
add
mov
pop
rolb
inc
add
add
add
cmp
lock
push
add
jo
add
lret
adc
add
xchg
push
mov
pop
lahf
and
add
pop
inc
pop
ja
jo
add
pop
leave
cmp
push
pop
cld
inc
add
push
add
or
xchg
mov
leave
inc
pop
lock
mov
add
fwait
jb
add
add
adc
add
pop
push
int3
jge
add
xor
jl
dec
loop
jnp
aad
pop
sub
jb
add
adc
add
add
jmp
arpl
arpl
push
outsl
xchg
js
pop
test
pop
add
add
add
and
add
aas
cwtl
mov
add
sbbb
add
inc
add
mov
add
and
add
add
lahf
cmp
pop
cmp
add
mov
and
add
and
add
pop
popa
add
fldenv
add
mov
je
jmp
and
out
pushf
adc
add
or
test
add
add
aam
jnp
pop
in
enter
test
ret
pop
popl
cwtl
mov
cmp
push
jmp
arpl
add
outsl
cmc
jnp
lret
adc
add
push
ret
push
arpl
cmc
or
ret
leave
movsb
pop
hlt
in
xor
add
pop
add
add
pop
mov
int
pop
mov
or
pop
gs
mov
imulb
arpl
add
add
jns
push
jmp
arpl
test
and
add
rcll
add
jecxz
jl
cmp
jecxz
les
js
cld
xor
add
add
add
pop
dec
cmpsb
pop
jmp
lea
rorl
pop
imul
add
push
out
pop
dec
ljmp
add
add
mov
pop
loop
rcrl
sub
pop
lahf
call
mov
pop
test
lods
decl
popl
ret
arpl
xor
add
pop
or
jbe
pop
rcrb
pop
mov
xor
add
add
je
pop
xor
add
pop
out
cmp
js
pop
mov
fldt
gs
add
add
add
mov
xor
add
or
pop
xchg
xchg
mov
int3
or
nop
lret
mov
pop
add
add
mov
stos
add
and
push
aam
jbe
pop
mov
sub
lds
shlb
add
les
pop
movsb
pop
sti
push
add
rolb
jno
add
pop
xchg
push
or
call
jmp
mov
dec
rcrl
lahf
push
push
add
arpl
cmc
pop
cmpsl
in
pop
icebp
imul
pop
add
add
add
pop
pop
add
lret
dec
call
in
pop
xchg
mov
add
add
loope
cwtl
mov
push
add
mov
frstor
rcrb
add
add
pop
in
adc
add
int
loope
cwtl
fildll
cli
stc
add
lods
outsl
lods
loop
mov
insl
rcrb
and
movsb
pop
xor
pop
xchg
sbb
bound
add
imul
test
dec
sbb
add
jae
add
sahf
mov
sbb
add
sbb
arpl
add
clc
fdivrs
xor
aas
out
mov
cltd
xchg
sbb
iret
jp
adc
das
adc
add
add
cmpsl
pop
ljmp
jo
add
inc
add
jbe
or
and
add
sub
stos
cs
popa
add
mov
loop
xchg
add
pop
xchg
test
fcompl
adc
add
mov
add
ret
mov
and
mov
pop
inc
pop
sbbl
xchg
or
add
push
add
jl
fidivs
add
movsb
pop
add
add
test
add
cmp
adc
add
pop
pop
idivl
pop
pop
sbb
sbbb
and
add
pop
pop
add
add
adc
popa
add
or
pop
add
adc
add
cmp
add
lret
aas
mov
es
cld
mov
repz
aaa
arpl
pop
mov
pop
xlat
pop
cmpsl
pop
jge
pop
pop
shl
pop
int
test
enter
dec
mov
xlat
push
pop
dec
mov
xchg
insl
xchg
mov
add
repz
sbb
xchg
add
add
pop
inc
pop
rcrb
add
pop
lcall
mov
nop
cmp
add
enter
dec
push
jmp
fnstenv
pop
aaa
mov
test
stos
int3
int3
rcrb
bound
add
repnz
pop
test
add
or
push
ret
or
sbb
add
cmp
pop
shll
pop
and
add
pop
pusha
add
cmp
rclb
pop
or
add
mov
jmp
dec
adc
sbb
mov
add
sub
or
leave
ds
pop
ret
pop
jecxz
adc
add
jp
call
jmp
and
adc
and
insl
inc
add
push
add
cs
enter
xchg
pop
sbb
or
mov
pop
fs
xor
add
mov
add
enter
add
add
add
cmc
es
repnz
sub
or
sub
add
fwait
jno
add
push
jmp
push
daa
mov
pop
mov
jb
add
and
pushf
mov
mov
xchg
aad
sbb
xchg
ss
dec
mov
sti
dec
mov
or
sub
lret
lahf
dec
inc
pop
push
add
dec
pop
and
add
push
add
adc
in
test
ja
jge
pop
or
add
jo
add
mov
cmpsl
pop
jecxz
stc
repnz
stc
movsl
pop
push
dec
ljmp
sbbb
mov
nop
ret
idivb
pop
fsubl
add
mov
fcomi
mov
pop
sqrtps
add
lret
add
add
mov
add
push
dec
rclb
add
pop
pop
jno
add
out
dec
lods
enter
adc
add
paddsb
idivl
incl
and
add
push
arpl
xor
pop
dec
pop
pop
fmuls
add
iret
loopne
repz
add
fisttpll
adc
add
pop
sbb
pusha
add
std
ret
push
std
mull
add
adc
add
into
fsubr
xor
add
imul
and
daa
pop
pushf
pop
xchg
aas
pop
jnp
xlat
add
add
push
add
out
mov
add
mov
mov
in
ss
popa
add
cli
xchg
in
mov
mov
loop
lea
add
mov
or
popa
add
add
add
sbb
sbbl
jo
add
push
cmp
call
test
sbbb
shrb
inc
pop
fnstsw
jae
add
sbb
add
pop
or
in
jnp
pop
fisubrs
rcrb
lods
insb
push
pop
stc
call
add
pushf
fidivrs
xor
add
pop
popa
add
in
pop
sbb
pop
lcall
add
cld
and
add
cmp
inc
pop
ficompl
scas
and
add
or
add
add
add
dec
mov
push
xchg
sub
scas
std
rcrl
cmp
xchg
or
add
jne
add
pop
bound
add
mov
add
add
dec
filds
add
and
add
out
arpl
add
add
aad
imul
mov
idivl
pop
addr16
dec
dec
add
add
test
pop
es
insb
mov
add
in
jne
sti
or
fs
outsl
ret
pop
into
dec
pop
jg
fs
in
lods
loop
movsb
pop
and
add
add
add
pop
in
sbbb
iret
push
mov
jae
add
sbbb
ljmp
cmp
add
jmp
add
mov
add
clc
inc
pop
jecxz
arpl
add
mov
jmp
arpl
std
dec
repz
add
sbbb
int
xor
pop
shr
cmp
pop
add
add
push
test
jmp
push
mov
fldenv
mov
jb
pop
aad
pop
push
add
sbb
adc
add
jmp
add
xlat
mov
std
das
out
cwtl
int
push
inc
jmp
subb
mov
pop
mov
les
add
aad
pop
push
ss
cmp
ja
pop
imul
add
sub
rcrb
cmp
das
inc
pop
mov
mov
add
jns
add
dec
dec
pop
loope
or
scas
xor
add
mov
addr16
pop
test
imul
xchg
lahf
call
sub
add
popf
sub
sbbl
xchg
add
jmp
cwtl
cmpsb
pop
pop
mov
pop
push
dec
out
jmp
nopl
add
pop
ljmp
add
jl
add
sub
xor
add
and
add
add
aad
pop
daa
pop
pop
aaa
or
pop
mov
pop
sbb
out
pop
outsb
xor
add
filds
push
fisttps
mov
mov
dec
pushf
sbb
add
movsb
pop
sbbb
add
test
movsl
pop
lds
test
pop
cs
dec
movq
xor
add
or
pop
inc
add
jbe
or
mov
add
filds
add
or
xchg
int3
mov
sbb
in
pop
mov
add
pop
out
popf
dec
xor
add
pop
add
or
sbb
icebp
dec
rorb
jnp
mov
adc
add
add
int
mov
add
sbb
jmp
jne
daa
add
add
outsl
jo
add
add
push
add
das
mov
rcrl
sbb
inc
xor
add
adc
add
pop
mov
sbb
rorl
ret
pop
divb
xchg
cltd
inc
pop
leave
mov
pop
mov
pop
pop
nop
jo
add
pop
xchg
pop
sbb
adc
mov
ja
lret
es
jl
push
test
jmp
inc
arpl
cmp
or
add
push
add
insb
jne
add
sbb
and
add
sbbl
mov
adc
add
or
in
jbe
fstpl
push
outsb
leave
decl
call
sbb
arpl
outsl
dec
les
jns
pop
leave
lret
xchg
inc
pop
aas
mov
add
inc
add
sbbb
dec
push
jmp
enter
fsubs
add
in
cmp
call
or
movsb
pop
into
sub
sub
dec
out
pop
inc
pop
xchg
ds
cld
scas
and
add
add
out
push
mov
add
inc
pop
pop
ret
sahf
fldenv
mov
sub
outsb
dec
fstpt
pop
pop
pop
dec
mov
pop
jno
add
cmp
add
pop
jae
add
std
pop
jbe
cmp
pop
int
pop
mov
sbb
add
mov
in
pop
add
sub
mov
mov
in
mov
pop
xor
mov
xor
add
jae
add
mov
push
jmp
add
pop
pop
mov
pop
sbb
add
imul
add
arpl
and
xchg
punpckldq
add
mov
setg
jmp
xchg
sub
or
add
and
add
mov
jmp
daa
push
cmpsl
add
leave
ds
in
mov
aam
mov
inc
pop
ja
mov
out
stos
jl
fwait
jae
add
dec
enter
push
add
inc
pop
lret
mov
fs
or
stc
lret
popf
jecxz
push
dec
dec
lock
inc
pop
cmp
lahf
jns
pop
fistpll
push
add
pushf
ficoms
add
pop
pop
mov
xchg
push
pop
push
lahf
push
add
icebp
aaa
xchg
or
mov
xor
add
mov
jmp
cmc
adc
arpl
add
pop
ret
mov
add
mov
add
dec
push
add
mov
add
mov
and
add
pop
lods
imul
add
xchg
shrb
out
out
je
pop
in
push
add
cmp
inc
pop
xor
xchg
mov
mov
add
loopne
and
add
in
movsb
pop
repnz
adc
add
pop
pop
cmp
outsl
inc
add
push
add
enter
arpl
sbb
add
imul
add
pop
jl
add
sub
insl
insb
xor
int3
pop
test
add
or
add
xor
add
add
sbb
jns
add
arpl
cmp
push
mull
add
pop
xchg
stos
dec
add
add
mov
xor
movsl
pop
int3
xchg
mov
fsubl
add
mov
xor
pop
enter
and
lds
pusha
add
or
push
mov
add
gs
dec
push
add
idivl
lcall
clc
mov
add
or
push
loope
sbb
fbstp
repz
add
add
ret
pop
mov
push
add
incl
jge
jmp
arpl
add
add
lds
mov
repz
pop
bnd
bound
add
add
add
movzwl
jmp
pop
sub
sub
decl
add
xor
fistpll
add
xchg
jne
movsl
pop
push
add
nop
push
ret
arpl
jne
test
xchg
add
mov
xchg
or
pop
or
add
insl
movsl
pop
jae
add
lahf
loopne
mov
add
push
nop
push
ret
push
push
arpl
add
pop
dec
sbb
push
ret
subb
xor
add
je
add
int
pop
xchg
jns
scas
pusha
add
or
gs
gs
push
add
movsl
pop
repz
pop
mov
pop
ss
enter
xlat
push
shlb
add
jmp
inc
pop
scas
sub
dec
pop
xor
add
add
dec
test
test
add
push
add
sbb
add
pop
push
fldt
dec
push
add
jb
add
js
adc
pop
std
rcrl
int3
xchg
and
add
jno
add
add
add
pop
xchg
xor
add
sub
jmp
adc
xor
inc
pop
out
call
add
add
pop
test
popa
add
push
add
enter
insl
xchg
or
pop
push
add
cli
cmpsb
pop
xlat
mov
arpl
add
add
add
scas
mov
pop
dec
int
add
imul
mov
daa
cmc
arpl
daa
mov
jne
pop
dec
xchg
fistpll
aas
pop
test
inc
jmp
adc
cmp
sti
adc
add
into
mov
push
add
and
add
pop
adc
popf
cmpsl
pop
int3
xchg
push
add
sbbb
pop
repnz
pop
inc
add
jg
xor
nop
push
ret
dec
add
add
pop
pop
enter
ret
pop
fildll
sub
push
add
pop
loope
jmp
pop
insb
xor
add
dec
mov
mov
xchg
pop
sbbl
add
inc
pop
std
jp
add
add
sub
jae
or
push
add
pop
repnz
ficoml
cwtl
cmpsl
pop
clc
mov
pop
sbb
mov
pop
sbb
push
jno
add
popf
dec
add
jmp
mov
add
ret
add
xor
add
push
or
add
jne
push
dec
adc
mov
add
xchg
mull
add
push
add
adc
add
push
imul
jno
add
mov
sbb
jbe
add
add
pop
outsb
lcall
add
xchg
add
loop
repnz
pop
pop
mov
sbbl
cmp
push
jmp
daa
ret
pop
lods
adc
pop
add
add
add
jb
add
aam
insl
movsl
pop
aas
cmpsb
pop
or
mov
loope
mov
pop
aam
add
jno
add
add
jb
add
add
pop
adc
add
xor
add
call
push
ret
or
aaa
dec
and
stos
mov
cmpsl
pop
sbb
mov
xchg
add
add
pop
push
pusha
jmp
push
mov
pop
cli
add
add
mov
add
fsts
jmp
sarb
mov
add
push
cmpsl
and
arpl
pop
sbbl
mov
add
jne
mov
out
cmp
pop
push
loop
and
add
pusha
add
mov
ds
push
adc
add
addr16
out
fldenv
add
sub
add
fs
xchg
filds
jne
jmp
inc
ret
add
shrl
sbb
pop
jbe
pop
dec
push
dec
leave
int3
xchg
and
add
sub
cmpw
jmp
mov
and
add
add
lret
jae
add
popf
mov
xchg
pop
push
add
dec
push
sbb
sub
add
and
arpl
pop
adc
add
pop
cmp
int
and
add
out
in
aad
pop
les
pop
sub
add
pop
mov
mov
adc
add
add
pop
es
or
int3
imul
in
add
sub
fisttpl
pop
lret
pop
dec
mov
pop
repz
pop
movsl
pop
sbb
dec
insb
pop
scas
xchg
mov
popa
add
and
add
cmp
xchg
dec
inc
add
je
add
cmpsl
pop
and
add
ss
stc
cmp
inc
jmp
arpl
sbb
sti
imul
mov
add
add
pop
pop
enter
out
mov
add
push
cmp
pop
sub
icebp
out
repz
add
cmp
or
lods
cmp
push
add
cmp
cmp
pop
mov
ret
pop
aas
into
loopne
or
add
add
fsubrs
mov
adc
add
add
pop
jp
pop
cmc
or
lods
dec
in
dec
or
mov
sahf
lds
or
pop
mov
imulb
push
pop
fsubl
add
pop
stos
sbbb
mov
add
cmp
add
add
insl
or
add
xchg
pop
and
jo
add
cwtl
add
ljmp
sbbb
or
push
pop
xor
add
adc
sub
jmp
xlat
les
add
fwait
mov
enter
pop
jno
add
add
cmp
pop
dec
pop
sbb
mov
push
arpl
add
mov
incb
or
mov
pop
jmp
pop
dec
push
fs
daa
or
pop
lret
sbb
add
nop
addr16
in
inc
pop
fidivrs
pop
icebp
out
sbb
pop
lret
ret
pop
imul
add
mov
inc
add
lods
and
add
mov
or
add
cltd
sbbl
jg
and
loope
testl
add
imull
test
pop
cmpsl
pop
scas
shl
pop
mov
add
add
ds
pop
hlt
lret
out
inc
pop
xor
add
dec
frstor
add
fisubl
dec
test
and
add
add
cmp
add
and
add
fwait
mov
add
in
cmpsl
daa
sti
mov
popa
add
mov
adc
add
pop
push
adc
add
pop
pop
arpl
add
jecxz
test
aas
adc
add
mov
popf
and
cmp
mov
enter
push
add
xor
sub
arpl
pop
mov
popa
add
andb
sahf
sub
or
pop
jne
das
sbb
inc
insb
insb
jmp
push
pop
in
pusha
add
jg
pop
pop
inc
pop
pusha
add
cmpsb
pop
ret
add
mov
clc
sub
pop
pop
dec
mov
add
add
pop
pop
cli
lahf
aam
cmp
add
add
jnp
mov
inc
add
jno
add
push
pop
inc
pop
jo
add
pop
xor
add
mov
leave
lds
pop
icebp
adc
add
cmp
ss
xchg
mov
and
pop
mov
clc
std
pop
lea
pushf
mov
imul
es
push
add
cmp
add
pop
push
or
std
xor
add
cmpsb
pop
in
sub
lock
call
xchg
jns
cmc
je
add
pop
out
mov
pop
arpl
add
jg
cmpsb
pop
mov
dec
repz
add
in
rclb
add
sbbl
pop
jecxz
call
das
pop
dec
mov
jo
add
addr16
mov
push
add
mov
jmp
add
sub
enter
add
decl
mov
push
jmp
arpl
push
inc
add
inc
add
ja
lcall
fisttpll
mov
sbbl
pop
imul
outsl
push
pop
inc
pop
ljmp
shrl
push
addr16
sub
lea
jmp
add
dec
inc
pop
add
add
pop
mov
cmp
mov
jmp
cmpsl
inc
sbb
or
mov
add
arpl
and
adc
test
add
push
add
sarb
pop
aaa
adc
add
inc
add
sbb
out
fcoml
add
aam
fdivp
lret
jnp
call
in
icebp
add
call
into
xor
add
imul
xchg
je
xor
xor
add
pop
enter
xchg
jae
add
add
adc
add
arpl
add
pop
lods
ret
pop
mov
pop
sbb
js
out
xchg
and
add
mov
push
ret
push
cmc
rcrb
pop
jb
add
jne
dec
xchg
jl
das
enter
mov
repnz
jno
add
adc
ljmp
arpl
add
sub
pop
mov
pop
test
add
insb
sbb
sti
jmp
arpl
sbb
mov
add
cwtl
mov
std
stos
pop
mov
aas
cmc
clc
mov
pop
mov
lea
pop
imul
xor
add
pop
push
es
jecxz
idivb
sub
sub
add
mov
add
add
jp
sbb
add
push
fs
sub
das
cmp
int3
fisubrl
sbbb
cli
xchg
mov
pop
sub
mov
or
in
sbbl
add
pop
std
je
push
js
add
sub
pop
lock
add
add
lods
or
lock
add
add
fildll
adc
pop
imul
mov
add
daa
pop
mov
xor
jmp
sbb
fistps
push
xor
jmp
arpl
cmp
icebp
jmp
arpl
and
jecxz
cld
mov
mov
jle
stc
jnp
cmpsl
pop
inc
add
mov
mov
push
add
adc
add
pop
into
hlt
dec
aas
push
stc
lret
mov
pop
sbbb
pop
lret
out
out
into
les
xchg
mov
add
cwtl
add
jecxz
pop
pop
in
mov
into
dec
fcmovu
xor
add
add
inc
add
push
jp
add
add
mov
test
sub
add
add
das
out
adc
add
xchg
cwtl
add
inc
add
pop
adc
scas
lods
in
aam
pop
insl
mov
cmpsb
pop
jns
pop
in
sbb
test
add
jmp
dec
pop
adc
add
add
add
add
ret
inc
add
inc
add
insl
mov
stos
jp
and
cmpw
jmp
sbb
or
pop
in
ret
pop
pop
jns
add
inc
pop
or
add
mov
jecxz
decl
test
idiv
jmp
cmp
push
lret
and
add
pop
push
jo
add
dec
adc
add
add
pop
jbe
dec
cmc
xchg
add
xor
int
movsl
pop
dec
push
add
jle
add
pop
sbbl
add
inc
add
pop
in
repnz
pop
jle
add
add
and
add
jecxz
cli
lahf
push
adc
add
add
sub
in
enter
adc
add
add
add
nop
out
stos
das
sti
mov
sbb
rolb
test
ss
sti
jmp
hlt
xchg
lret
pop
insb
scas
xchg
mov
and
add
xor
outsl
xor
add
push
jmp
inc
fsts
inc
mov
pop
bound
add
je
and
add
mov
pop
or
cltd
dec
xchg
mov
pop
repnz
or
rcrl
scas
jns
xchg
scas
jge
push
pop
cld
js
mov
cmp
add
xor
add
sbb
in
add
adc
mov
out
jb
gs
sbb
jno
add
add
roll
add
mov
pop
adc
add
add
adc
pop
adc
pop
popf
cltd
jb
add
pop
mov
xor
add
push
fwait
adc
add
sbb
pop
fs
movsb
pop
lock
xor
xchg
or
pop
lret
inc
pop
cltd
sti
add
add
ret
pop
xchg
dec
fisubrl
add
pop
sub
lock
in
loope
out
das
test
xor
add
add
sbbb
pop
push
pop
mov
pop
testb
push
jns
jl
arpl
add
cwtl
jecxz
enter
mov
mov
mov
add
sub
shrb
shr
push
add
add
xchg
pop
decl
decl
mov
test
lahf
sbbb
add
pop
mov
add
icebp
ljmp
jbe
add
add
add
or
add
pop
inc
pop
push
add
jo
add
pop
jge
rolb
pop
imul
sbb
pop
or
lods
mov
sbb
dec
xor
add
pusha
add
push
add
lret
sbb
imul
add
jmp
add
or
rcrl
mov
push
nop
push
ret
push
arpl
and
dec
call
add
inc
add
and
add
add
pop
mov
mov
mov
cmp
jl
repz
jns
add
lret
add
add
jmp
pop
arpl
fs
jne
es
ja
pop
xchg
stc
jge
and
add
add
stos
decl
add
cmc
outsl
sub
and
xor
add
mov
pop
and
add
pop
stos
daa
pop
in
jmp
andl
sti
dec
and
pop
cmp
dec
hlt
jb
cmp
push
xchg
lock
dec
inc
pop
push
pop
xor
add
add
lret
add
sti
inc
pop
dec
xchg
fwait
pop
mov
jae
add
fldenv
stos
loop
jge
pop
push
add
ljmp
stos
dec
add
add
ljmp
pop
mov
add
jmp
add
add
push
add
sbb
movsl
pop
and
add
cltd
xor
add
pop
rcrb
test
add
jmp
mov
push
fistpll
xor
add
add
pop
push
pop
fstpl
pop
cwtl
push
add
arpl
add
sub
inc
pop
adc
add
pop
int
flds
add
arpl
add
adc
add
jbe
test
pop
jp
adc
add
mov
lock
insl
leave
add
dec
fsubrp
fbld
add
mov
add
sub
int3
push
dec
sbb
pop
cmp
pop
add
sbb
add
sub
push
add
arpl
add
shll
add
adc
add
add
hlt
or
push
pop
inc
add
add
add
repnz
add
lcall
pop
dec
mov
push
shll
add
add
pop
jne
jnp
adc
xor
add
insb
dec
and
add
das
sub
lahf
xchg
cmp
add
xor
add
push
fistpl
add
scas
ss
add
ficoml
add
xchg
mov
imul
mov
add
out
add
daa
push
sbb
push
aam
ja
push
add
pop
iret
inc
pop
popl
iret
xchg
mov
push
add
cli
fstpt
int
add
sub
pop
addr16
repz
icebp
xchg
mov
add
sub
mov
add
clc
repnz
jge
rolb
add
dec
inc
add
int3
mov
arpl
add
cmp
sbb
in
jmp
ret
add
mov
push
push
cmpsb
pop
jle
add
pop
cmp
add
fisttpll
pop
stc
lcall
gs
mov
add
arpl
lods
arpl
loope
adc
add
add
lods
cltd
xlat
in
adc
lods
mov
scas
add
mov
sbb
add
bound
add
sbb
pop
arpl
add
pop
stc
enter
cwtl
dec
sahf
cmp
dec
mov
push
add
xor
mov
loopne
lods
or
ret
pop
jne
loope
xchg
mov
add
ret
pop
sbb
dec
adc
add
dec
arpl
arpl
pop
movsl
pop
ret
pop
xor
add
inc
jno
add
ljmp
imul
pop
pop
mov
pop
push
cmp
pop
and
loopne
push
or
mov
pop
add
add
pop
imul
mov
pusha
add
dec
repnz
add
xlat
das
ss
pop
dec
rcrl
inc
add
pop
inc
add
xchg
pop
insb
out
mov
out
push
pop
jmp
aaa
cmp
imul
sbbl
imul
ds
mov
add
in
arpl
pop
adc
add
es
pop
xlat
or
pop
pop
xchg
gs
push
fcompl
jno
add
sti
ds
imul
push
add
arpl
add
inc
add
sbb
add
cltd
out
decl
xchg
add
add
pop
jle
pop
sti
adc
add
add
ret
cmpsl
pop
xchg
fnstenv
iret
rcrl
jp
ja
stos
sbb
jb
add
pop
push
leave
xchg
ja
cmp
add
int3
jp
dec
xlat
sbb
add
cs
jecxz
jno
add
pop
call
loopne
inc
pop
jg
pop
lret
int
push
add
add
add
push
mov
add
popa
add
scas
xchg
fiaddl
lock
aaa
sbbb
dec
inc
pop
loopne
or
jmp
lds
out
cs
mov
cmp
jecxz,pt
mov
add
ss
loopne
sub
icebp
jae
add
fcomip
rcrb
pop
icebp
mov
stos
iret
pop
rcrb
ficompl
jae
add
icebp
fst
daa
pop
mov
test
xor
add
and
pop
pop
lods
mov
cli
cmp
add
pop
scas
adc
xchg
cmp
pop
mov
mov
stos
sub
push
xchg
cwtl
add
add
cmpxchg
imul
add
es
and
add
jo
add
add
dec
mov
pop
xor
add
addr16
mov
or
mov
jmp
jp
in
pusha
add
xor
adc
add
adc
add
add
pop
sbb
ja
test
push
lods
nop
sti
test
inc
add
inc
pop
fdivs
pop
leave
jnp
imul
jmp
add
add
add
fldl
pop
pop
adc
add
sbbl
in
jno
add
pop
lret
jg
pop
lret
cmpsb
pop
sbb
fldenv
add
add
popa
add
or
mov
add
cs
push
sub
add
fld
pop
daa
pop
xchg
xor
sub
xchg
or
pop
idivl
lea
add
or
mov
fs
sbb
sbbl
and
jnp
add
cmp
jnp
or
push
add
stos
test
add
loop
lcall
rcrl
xor
cmp
pop
jmp
mov
add
xchg
rcrl
jge
jae
add
mov
xor
add
repz
add
fucomi
ret
pop
push
dec
and
fld
push
add
std
fs
sahf
or
jg
pop
xchg
cwtl
pop
adc
add
jno
add
jmp
dec
push
add
xlat
sti
aaa
mov
sbb
enter
mov
cmp
add
fs
ss
add
dec
jne
add
mov
add
add
mov
imul
js
pop
mov
fistpl
add
lcall
ret
pop
pop
into
pop
mov
pop
push
add
add
add
add
pop
dec
mov
add
lret
test
in
rcrl
in
inc
add
add
add
fidivl
aam
outsb
dec
add
add
push
add
aad
in
lock
in
pusha
add
push
add
jp
pop
adc
add
ljmp
scas
lret
fs
or
cmp
pop
bound
add
push
add
xchg
pop
mulb
jge
pop
mov
lret
mov
add
fimull
loope
leave
pop
mov
insl
inc
pop
mov
repz
mov
cmp
add
leave
mov
or
rorl
hlt
sahf
dec
ja
pop
fcoms
add
and
add
test
push
add
sbb
in
lods
insl
ret
mov
stos
push
pop
jmp
inc
mov
or
pop
scas
popa
add
inc
add
cs
mov
or
push
scas
insb
cmp
add
pop
push
fmuls
gs
pusha
add
pop
addr16
pop
xor
add
jmp
pop
add
add
mov
add
jmp
arpl
popa
add
insl
sbbl
jo
add
pop
sbb
test
sahf
pusha
add
push
push
add
jg
test
add
add
addr16
cmp
pop
push
add
insl
testb
lock
xor
pop
pop
fsubs
pop
popa
add
mov
dec
xor
add
inc
add
pop
xchg
cmp
icebp
test
pop
mov
pop
inc
pop
gs
out
out
mov
add
mov
add
sbb
rolb
xor
add
cmp
add
add
wbinvd
pop
sub
add
add
rcrl
popa
add
push
pop
addr16
adc
add
pop
xchg
pop
scas
std
hlt
lock
add
dec
lret
je
movzwl
jmp
ljmp
inc
add
cmc
mov
pop
adc
add
cld
pop
add
daa
add
adc
pop
push
add
hlt
imul
add
pop
xor
add
and
add
mov
mov
lods
gs
dec
mov
rcrb
jp
outsl
adc
add
cmp
lea
jmp
or
sub
mov
pop
scas
mov
cmc
mov
dec
add
jmp
addb
pop
mov
cmpsl
pop
push
arpl
add
add
xor
add
iret
mov
pop
jp
mov
out
add
add
pop
xchg
and
add
add
xchg
push
scas
ret
pop
popf
dec
xchg
jns
pop
and
add
and
add
pop
pop
cltd
adc
add
pop
bnd
add
mov
add
add
int3
jns
pop
xchg
cmpsb
pop
add
arpl
add
or
pop
mov
pop
cmp
testl
fwait
cmpsl
pop
repnz
loop
ljmp
add
push
nop
push
ret
push
add
xor
add
add
push
lahf
out
les
pop
mov
mov
inc
pop
jbe
add
cmp
inc
adc
mov
arpl
or
add
loope
ds
xor
add
push
or
adc
add
jge
pop
imul
pop
pop
cld
mov
jg
pop
or
add
std
or
into
test
add
jmp
fsub
pop
sub
shrl
pop
cwtl
fndisi(8087
pop
pop
sbbl
add
pop
pop
in
data16
repz
iret
test
add
int
push
add
inc
add
inc
pop
outsb
adc
add
pop
mov
lret
dec
movsb
pop
xchg
aad
stos
cmp
faddl
add
pop
pop
lock
insl
dec
xor
and
add
jmp
adc
pop
ss
and
add
fsincos
cmpsl
pop
and
mov
mov
mov
xchg
jmp
daa
mov
test
pop
mov
pop
jg
arpl
add
pusha
add
pop
lods
push
jo
add
popa
add
push
add
xor
out
xchg
jb
add
xor
add
sub
mov
add
pushf
arpl
loopne
xchg
inc
pop
push
pop
movsl
pop
mov
pop
push
mov
pop
pop
or
add
sbb
ret
pop
jecxz
dec
jp
sub
or
out
rep
sub
jae
jmp
mov
add
add
add
shll
pop
popa
add
loopne
push
call
nop
push
ret
push
enter
popf
popa
add
out
jge
pop
stc
adc
add
lock
pop
jmp
in
int3
pop
sbbl
add
mov
pop
ja
sbb
test
pop
jae
add
mov
pop
aad
adc
pop
sub
add
and
add
test
push
iret
rorl
and
mov
fsubrl
sti
pop
adc
push
lods
dec
pop
pop
scas
xchg
mov
add
dec
fs
mov
jbe
or
add
xor
dec
jle
fcmovu
scas
inc
add
das
sub
pop
lds
pop
test
pop
add
addr16
jo
add
call
or
sti
xchg
rep
sbbl
loop
test
pop
shll
jmp
imul
pop
std
cli
mov
pop
lods
into
repnz
xor
add
pop
decl
mov
push
add
dec
fists
test
int3
push
pop
bound
add
inc
add
mov
aas
add
cmp
gs
jmp
repnz
lcall
cltd
loopne
out
sub
sbb
in
out
incl
add
pop
mov
pop
push
adc
add
add
stos
pop
jmp
add
loop
jmp
ljmp
add
aas
mov
fs
mov
insl
sbbl
add
sarl
pop
mov
sbb
add
add
xchg
inc
pop
out
jno
add
xchg
scas
lcall
adc
add
add
push
sbb
push
pop
jg
pop
mov
pop
pop
mov
push
add
imul
inc
pop
divl
pop
fstl
into
rcrb
inc
pop
pop
mov
add
cmp
pop
xchg
test
pop
mov
pop
aam
adc
add
into
stc
dec
loopne
add
add
sbb
lret
pop
jns
repz
lret
add
push
inc
add
mov
inc
add
pop
sbbl
xor
add
or
sbb
icebp
jmp
or
add
add
add
jge
pop
aad
in
pop
sbb
jno
add
ds
stos
mov
fdivrl
out
bound
add
jg
gs
or
stos
xchg
fldt
dec
rcrb
add
rcrl
add
xor
add
pop
cs
push
pop
aam
pop
mov
cltd
fs
repz
add
add
adc
add
pop
testb
sti
cmp
pop
sti
pop
xchg
push
call
roll
hlt
mov
pop
add
add
sarb
xor
add
pop
fs
decb
pop
or
rcrl
push
add
nopl
add
stc
jecxz
fs
fbld
pop
cli
jb
add
stos
sub
pop
stc
int
mov
jmp
mov
sbb
out
out
add
adc
add
nop
sbb
cwtl
lock
mov
pop
mov
add
and
shlb
pop
ret
pop
xchg
stc
out
jp
dec
or
add
sbb
jmp
fstpt
mov
add
mov
pop
mov
inc
add
stos
add
add
and
push
add
repz
pop
cmp
add
jp
enter
imul
sub
sbb
test
add
jmp
pushf
push
add
mov
or
xchg
outsl
xchg
lods
movups
add
cmp
add
push
jmp
in
fisttps
test
add
mov
rcrb
int
add
push
mov
add
dec
insb
xor
add
lret
add
ficoml
lahf
xchg
xchg
push
add
mov
int3
outsb
fcompl
dec
cmpsb
pop
pop
stos
sarb
sub
test
pop
popf
or
pop
pop
push
loope
repz
add
add
pusha
and
add
pop
mov
into
addr16
pop
fs
xchg
and
adc
add
add
out
lock
icebp
or
mov
cwtl
sbb
xor
add
pop
xchg
sbb
jbe
insb
pop
pop
mov
out
sahf
pop
mov
and
add
lret
fucomip
xor
add
dec
xor
add
into
ljmp
shr
add
arpl
outsl
arpl
mov
pop
in
pop
and
add
push
sbbb
adc
add
push
stc
lret
pop
pop
pop
jmp
pop
fcmovbe
test
les
fs
jo
add
push
aas
lock
pop
and
add
in
lcall
add
dec
pop
push
push
bound
add
pop
daa
pop
xchg
mov
ja
add
add
add
pop
xchg
bound
add
js
loope
pop
push
jne
add
pop
arpl
jb
add
add
inc
pop
icebp
idivl
jl
fsubr
fdivrp
pop
jmp
and
jne
pop
push
in
mov
or
fsubs
add
cltd
mov
stos
out
stc
xchg
sub
pusha
add
rcrl
cs
sbbb
pop
adc
add
fcomi
push
in
adc
add
popf
out
sbbl
daa
pop
insb
mov
decl
mov
adc
cmpsl
pop
add
dec
sub
loop
popf
mulb
pop
adc
add
mov
xchg
jbe
add
jns
and
add
jno
add
jle
add
jb
add
pushf
nop
push
ret
add
sub
pop
and
add
int
add
cmp
aaa
or
pop
xchg
insb
jmp
daa
pop
int3
ljmp
cmp
add
pop
sbb
push
xchg
mov
mov
sahf
jae
add
pop
or
dec
fst
test
add
sbbb
add
sbb
pop
lds
inc
pop
xchg
xor
insl
std
pop
insb
push
push
icebp
fs
ss
adc
add
pop
adc
add
pop
int
mov
pop
push
add
add
add
movsl
pop
pop
clc
mov
jle
inc
pop
jnp
add
xchg
les
add
xchg
js
pop
std
iret
lret
pop
div
outsl
addr16
inc
add
mov
loopne
fsubrs
mov
call
add
xchg
mov
add
imul
rcl
and
add
add
clc
test
add
push
imul
pop
adc
or
insl
fnstsw
pop
clc
mov
add
inc
add
nop
les
aas
sti
xor
add
add
add
xor
add
add
out
loopne
test
add
jmp
pop
mov
xor
add
sub
add
xor
add
add
add
cltd
xor
add
add
xchg
ret
and
add
pop
jle
add
mov
add
pop
imul
inc
add
or
mov
nop
push
ret
cmc
or
mov
fstps
cltd
inc
pop
out
mov
addb
jmp
inc
dec
pop
rorb
add
lods
jae
add
inc
pop
and
add
jb
add
add
pop
lret
mov
pop
nop
sbb
sahf
mov
scas
mov
add
cmp
add
aas
int3
mov
je
sarb
inc
pop
hlt
lods
ret
mov
push
fldenv
push
add
mov
in
xor
add
lret
adc
add
add
dec
std
push
movsl
pop
repz
mov
dec
leave
pushf
mov
jmp
cmp
add
addr16
or
pop
aaa
imul
jnp
pop
xor
cmp
test
add
pop
rcrl
inc
pop
pop
addr16
mov
add
cmp
pop
dec
fwait
jne
cs
sbbl
pop
sarb
add
es
es
adc
add
pop
jbe
add
loope
mov
daa
pop
dec
jecxz
leave
int3
jge
idiv
jbe
push
insl
gs
xchg
scas
outsl
lea
loope
std
cmpsl
pop
dec
mov
add
jmp
arpl
bound
add
fbld
pop
inc
pop
popf
dec
cmpsl
pop
dec
out
sub
add
dec
or
and
xlat
add
add
popf
sub
mov
das
xor
add
add
push
add
sbb
in
add
std
pop
imul
ret
pop
popa
add
xchg
xchg
sub
mov
shrb
and
add
ret
add
add
push
add
js
add
arpl
cmc
pop
test
notb
sahf
imul
mov
iret
xchg
adc
add
pop
xor
cmc
cmp
add
ss
pop
rcrl
popa
add
mov
add
add
push
add
xchg
or
outsl
xor
add
in
jp
movsb
add
sub
dec
stos
movsl
pop
mov
add
add
in
daa
pop
inc
add
push
push
mov
add
add
mov
and
pop
ret
pop
lock
add
and
add
pop
rcrl
rcrb
fwait
ss
popf
cmp
add
add
arpl
add
pop
push
ret
pop
sub
mov
pop
mov
xor
add
lret
into
xlat
adc
add
popa
jmp
arpl
mov
out
and
add
shrl
xor
rcrb
add
cmc
pop
dec
sbb
or
jb
add
add
js
pop
jge
add
fimull
adc
mov
add
iret
ds
cltd
sbb
pop
rcrl
and
add
in
std
cmpsl
pop
push
add
jne
jmp
adc
add
add
dec
scas
aaa
push
addb
in
pop
adc
mov
bound
add
pop
pop
add
add
xchg
mov
fildll
jbe
jmp
or
ljmp
ljmp
pop
dec
lahf
enter
pop
or
mov
mov
sub
sbb
and
add
fs
sub
cli
or
sbbl
sti
lcall
clc
mov
push
sub
stc
arpl
add
sbb
and
add
jb
add
pop
out
push
rep
jmp
enter
enter
das
mov
pop
cmp
sbb
add
or
add
js
scas
xchg
stos
sbb
add
sbb
dec
sbb
pop
pop
je
jl
jb
add
or
gs
or
sbb
pop
test
int
pop
jne
pop
pusha
add
sbbl
cmp
inc
add
cmp
or
pushf
mull
pop
cwtl
push
aam
enter
pop
das
jns
add
ficompl
aaa
notl
fcompl
add
and
add
xor
movsl
pop
fdivl
add
mov
sbbl
push
add
mov
and
add
mov
pop
sbb
out
jmp
sti
sub
sbb
pause
push
ret
inc
jne
pop
jge
pop
dec
inc
jmp
cmc
fs
arpl
rcrl
add
nop
sbb
add
loopne
mov
lds
jp
lret
lea
jbe
add
lock
dec
sarb
pop
pop
dec
mov
add
fimull
add
xchg
cwtl
jb
add
pop
stc
in
sub
pop
and
add
mov
dec
fwait
push
fidivrl
add
push
inc
add
cs
add
add
add
mov
jmp
aaa
pop
xchg
cmp
das
add
add
dec
rcrb
xchg
mov
nop
push
ret
fsts
inc
cmp
clc
sub
outsb
clc
into
xchg
fs
pop
pop
rcrl
cmpsb
pop
pop
push
pop
leave
xchg
jmp
push
nop
push
ret
push
fs
je
inc
pop
push
adc
add
pop
outsb
test
add
add
push
mov
add
push
add
addb
lcall
add
cmp
test
je
adc
add
test
sbb
push
xorl
add
add
inc
pop
dec
shlb
add
in
loopne
jnp
pop
jo
add
pop
mov
add
add
add
mov
jb
add
lret
xchg
lods
sbbb
loop
movsl
pop
aas
es
jecxz
mov
pop
or
fs
sbbl
pop
fwait
jnp
mov
pop
pusha
add
imul
jl
out
pop
or
push
jmp
dec
arpl
aaa
push
add
add
cmp
pop
sbb
iret
gs
inc
add
inc
pop
int
rcrl
pop
and
add
lds
add
popa
add
loope
repnz
xchg
cmp
les
stos
adc
add
cwtl
mov
fadds
jmp
pop
imul
enter
stos
jb
add
or
pop
fwait
jmp
fdivrs
pop
dec
jl
xchg
push
add
jns
mov
pop
pop
pop
add
pop
mov
cmp
add
push
add
sbbl
add
xlat
xchg
or
pop
jg
jp
add
cmp
pop
sub
ljmp
add
je
jbe
pop
pop
fwait
lea
pop
je
jo
add
add
and
add
add
inc
add
lea
std
lret
add
bound
add
adc
lods
ja
inc
pop
mov
cmpsb
pop
inc
add
push
add
sahf
or
xchg
aas
xor
add
pop
mov
add
add
pop
jae
add
cmp
add
cmpsb
pop
bound
add
push
cmpsl
pop
pop
push
int3
das
loop
xchg
mov
add
pop
pop
and
add
xchg
sbb
lods
icebp
pop
rcrb
dec
pop
ljmp
dec
mov
add
lret
ljmp
add
sub
scas
add
push
cmpsb
data16
dec
arpl
sbb
cmc
incl
repz
adc
repz
add
add
enter
pop
pop
outsl
push
es
sbb
call
jmp
sub
or
clc
xchg
adc
add
and
mov
cmp
aaa
es
clc
pop
idivl
pusha
add
fistps
shr
and
add
or
cmpsl
sbb
add
add
add
loop
fcomi
lret
inc
add
out
or
sbb
out
push
add
inc
add
call
dec
outsl
popa
fs
pop
dec
repnz
jne
pop
cltd
mov
enter
add
xchg
pushf
mov
stos
pop
in
pop
jae
add
add
add
mov
cmp
jg
call
rcl
jmp
pushf
or
mov
dec
ret
pop
xchg
push
mov
jmp
enter
inc
fs
and
cmp
mov
pop
in
mov
pop
cmpsl
pop
lods
cmpsb
pop
dec
push
jne
jmp
aam
mov
testb
shr
add
add
insl
fistl
add
loop
xor
das
fisubrs
idivl
arpl
add
dec
inc
add
cmp
and
dec
lsl
add
pop
shll
add
test
pop
jmp
arpl
pop
mov
lock
sbb
xchg
sarl
sbbl
pop
inc
add
push
add
add
sbb
adc
add
divl
pop
sbb
je
add
jbe
pop
pop
cmp
xlat
mov
add
les
mov
pop
outsb
in
jle
add
and
aas
dec
cmp
add
add
ja
add
jmp
pop
push
or
xchg
dec
fstpt
pop
jge
adc
add
fcoml
add
add
cmp
dec
inc
add
mov
pop
add
add
or
inc
add
dec
aas
xor
rorl
pop
jnp
clc
jno
add
sub
sbbb
fsubr
lds
cmpsl
pop
mov
dec
in
lock
add
pop
pop
xchg
stos
ret
pop
mov
pop
jo
add
mov
pop
mov
clc
sbb
lret
int3
xchg
xchg
stos
push
sub
push
imul
mov
and
add
or
cmp
add
pop
dec
cmc
aaa
cmp
push
add
gs
lds
mov
add
xor
in
sbb
loope
fbstp
add
jge
icebp
outsb
dec
leave
std
and
add
or
xchg
and
mov
mov
aam
pop
dec
sbb
flds
dec
ds
in
lea
adc
add
add
add
cmp
mov
cld
test
mov
add
jmp
add
pop
cmp
add
and
xchg
rcrb
loopne
or
stc
push
add
js
xor
add
add
scas
fsubrs
xchg
outsb
pop
mov
pop
divb
add
add
sahf
rcrl
add
xchg
enter
inc
adc
add
insb
mov
pop
pop
sub
out
mov
cltd
pop
fldl
add
jae
add
pop
frstor
shlb
add
dec
pop
cli
push
popa
jmp
sti
pop
sti
sub
arpl
mov
fldt
inc
pop
jno
add
repz
pop
mov
ret
push
add
inc
add
mov
pop
jno
add
add
add
lret
sub
je
fnstenv
add
iret
adc
add
rcrb
pop
les
pop
cs
jb
add
jmp
jmp
sti
xchg
test
jnp
stc
test
imul
mov
add
cltd
es
mov
pop
mov
pop
scas
pop
xchg
pop
mov
pop
outsb
ret
add
mov
or
pop
movsl
pop
cmp
mov
add
fisubs
mov
mov
pop
mov
add
stos
add
add
arpl
add
mov
movsb
pop
mulb
xchg
pusha
add
into
push
incl
pushf
arpl
rcrb
add
or
add
xchg
add
push
add
push
shrl
push
add
fs
mov
add
out
sub
jge
sub
add
mov
push
add
push
imul
push
aaa
lock
and
add
and
push
mov
sbb
sbb
out
pop
pop
xor
add
movsb
pop
mov
pop
mov
add
lahf
mov
jg
push
add
in
fisubs
jge
pop
dec
ret
pop
push
pop
rcrl
cltd
fimuls
sbb
add
add
mov
add
decb
fdivrs
addr16
jb
add
mov
pop
repz
pop
insl
lcall
and
add
add
add
add
push
xchg
pop
sub
push
add
pop
ljmp
push
pop
mov
xchg
xchg
ret
sbbl
mov
xlat
je
repz
das
adc
add
pop
fs
idivb
pushl
jmp
arpl
arpl
adc
add
inc
pop
and
add
add
aam
cmc
and
pop
testl
add
cs
pop
mov
add
add
call
adc
pop
fstpl
push
jmp
pop
pop
test
stos
jmp
dec
xchg
or
arpl
adc
add
popa
add
scas
or
pop
in
hlt
fidivl
inc
pop
out
call
inc
pop
rcr
test
add
cli
add
add
out
hlt
aaa
imul
fstps
pop
sbb
mov
mov
add
and
add
add
lock
add
adc
add
jecxz
add
push
mov
jb
add
inc
add
xor
add
pop
test
cmp
add
add
sub
jns
cld
mov
add
jecxz
xchg
inc
add
jmp
pusha
add
push
sbb
repz
decl
enter
fldt
ds
lret
pop
loopne
dec
aaa
mov
decl
jmp
jne
push
cmc
fs
addr16
sbbl
fdivl
add
and
add
fdivrs
inc
pop
fwait
xor
add
add
xor
add
xor
add
add
mov
pop
pushf
push
dec
nop
push
ret
mov
lret
sub
cmp
pop
or
sub
push
pop
dec
out
movsb
pop
mov
add
cmc
push
add
or
dec
nop
push
ret
and
lods
jle
add
nop
push
ret
arpl
add
fucomi
mov
pop
int3
pop
xchg
mov
pop
xor
add
mov
pop
int3
es
sbbl
ss
and
add
push
sbb
pop
fsts
add
cs
or
add
pop
push
sarb
sarl
lds
pop
insl
cltd
inc
add
sbbl
xchg
jle
or
sub
pop
push
xlat
lock
call
daa
ljmp
pop
ss
add
pop
loopne
popa
add
and
xchg
addr16
push
inc
add
push
pushf
pop
arpl
movsb
pop
cltd
jno
add
pop
je
mov
addr16
and
sub
and
add
roll
add
movsl
pop
xchg
and
xor
add
pop
sub
pop
sub
mov
add
dec
lock
add
pop
push
add
mov
pop
ljmp
lods
mov
sbb
add
pop
push
int3
push
add
fdiv
rcrl
mov
jbe
cmp
pop
xor
add
fwait
cltd
ja
das
lock
sbb
add
pop
movsb
pop
pop
fistpl
rcrl
js
out
arpl
add
add
mov
idiv
push
fistps
decl
nop
push
ret
dec
sub
mov
jl
pop
sub
lcall
pop
imul
pop
mov
jmp
fdivl
add
stos
loopne
ss
rolb
add
add
xchg
xchg
nop
popa
add
push
pushf
sub
jge
push
mov
add
aam
leave
add
jne
xor
add
lock
mov
in
xchg
pop
jge
xlat
aad
mov
add
lds
add
pop
push
add
out
mov
pop
inc
pop
cmc
pop
pop
cmp
or
lret
pop
sbb
or
repz
popa
add
inc
pop
inc
pop
rcrl
sbb
add
add
add
lahf
dec
fnstenv
add
cmp
pop
sub
pop
aad
daa
pop
pop
push
add
mov
fwait
lcall
rcrl
cmp
es
mov
push
add
std
repnz
pop
pop
insb
imul
push
add
idiv
add
jmp
aaa
lods
arpl
in
pop
adc
add
pop
add
mov
inc
pop
insb
je
int3
adc
add
pop
jge
add
push
dec
shr
adc
add
sbbl
mov
pop
pop
out
icebp
cwtl
cmp
add
sahf
jb
add
mov
jmp
push
out
pushf
mov
and
add
jb
add
add
jno
add
pop
loopne
push
daa
pop
jb
add
or
outsb
icebp
lods
cmpsb
pop
lock
pop
mov
cs
jne
pop
sbb
fidivrl
test
jp
push
adc
add
pop
test
mov
add
stos
adc
addr16
and
add
add
addr16
cli
dec
faddl
pop
aad
add
mov
into
les
add
sbb
push
cwtl
inc
add
jnp
pop
into
aad
out
jle
mov
fwait
sbb
jmp
arpl
mov
add
add
arpl
add
add
mov
inc
pop
test
imul
add
dec
inc
add
mov
jmp
sbb
pop
scas
push
add
fidivl
xchg
idiv
mov
sbbb
add
pop
ret
lret
and
add
mov
add
pop
adc
add
add
iret
idivl
mov
lahf
sub
pop
adc
add
add
stos
or
push
arpl
add
test
loop
cld
inc
pop
and
add
add
cli
dec
dec
lahf
push
sbb
pop
repnz
movsbl
leave
js
pop
xor
add
rcrb
sub
add
dec
ds
pop
es
mov
add
jmp
daa
push
xchg
mov
sbbl
pop
repz
add
mov
and
jno
add
add
pop
out
cli
icebp
jge
add
punpckhbw
dec
cmc
fists
test
jp
rcll
outsl
arpl
add
add
xor
adc
push
mov
sub
movsl
pop
and
int
xchg
in
aaa
or
pop
jb
add
add
add
and
add
push
add
jmp
adc
mov
pop
xchg
pop
push
xchg
add
push
add
mov
add
inc
add
in
dec
int
repnz
mov
jb
add
lds
fwait
lret
add
and
add
insl
in
dec
xor
add
pop
mov
jnp
mov
lock
mov
pop
lret
mov
add
mov
dec
aaa
lock
movsl
pop
mov
push
add
pop
pop
xor
add
push
mov
pop
and
fstpt
pop
pop
cmp
outsl
rcrb
add
sub
sarl
add
jmp
adc
add
xchg
fsubs
add
dec
pushf
shl
push
sar
call
jne
outsl
sti
adc
add
add
pop
push
add
jmp
test
pop
ret
pop
inc
add
fdivs
push
xchg
push
pop
inc
pop
mov
sbbb
inc
add
stc
aad
dec
xchg
mov
pop
leave
jecxz
addr16
jecxz
cmpsb
pop
adc
add
out
lret
or
pop
xchg
sub
scas
inc
add
sbb
jmp
addb
adc
pop
pop
adc
add
dec
add
xor
add
notl
dec
ret
pop
xchg
test
bound
add
and
mov
add
movsb
pop
outsb
or
mov
add
repnz
pop
test
scas
popa
add
pop
or
jmp
or
xchg
dec
es
inc
pop
or
push
nop
push
ret
sub
arpl
mov
jb
add
dec
jmp
test
pop
pop
in
adc
add
add
dec
xchg
cltd
addr16
sub
sti
or
jb
add
dec
pop
hlt
sbb
pop
out
mov
lret
add
mov
pop
or
inc
add
jo
add
cli
sub
pop
fsubrl
mov
cmp
jmp
push
dec
push
arpl
jl
or
add
pop
cmp
jo
add
add
loope
scas
pushf
mov
es
bound
add
pop
jle
aaa
out
cwtl
pop
aas
add
add
das
sti
sbb
add
add
add
fmuls
pop
xchg
jle
gs
ja
sahf
cmp
aaa
add
add
pop
cmp
push
pop
into
mov
pop
sti
fwait
cmpsb
pop
push
pop
mov
add
pop
xchg
cld
mov
lcall
rorb
add
jne
testl
jmp
dec
fwait
pop
xchg
testl
pop
sub
das
xor
add
and
mov
setle
push
cmpsl
pop
repnz
add
leave
jne
insb
mov
pop
loop
out
fimull
jns
jmp
fnsave
add
in
inc
pop
xchg
xchg
sbbb
adc
sbb
mov
pop
sar
ljmp
push
sbb
push
pop
shrl
and
std
jge
jecxz
pop
xchg
jno
add
pop
pop
push
sbb
mov
add
std
mov
pushl
add
add
mov
lock
pop
lcall
dec
sldt
sub
arpl
jl,pn
jbe
lret
dec
cmp
insl
add
add
pop
mov
add
sub
add
fcmovb
pop
insb
jmp
rcrb
or
add
or
ss
pop
and
add
enter
aas
sub
pop
xor
jb
add
pop
and
add
pop
inc
pop
mov
pop
lahf
mov
rcrl
pop
imul
out
xor
add
or
punpckhbw
push
ret
inc
xchg
arpl
jecxz
push
imulb
dec
pop
pop
pop
idivb
pop
cli
adc
add
add
pop
jnp
pop
inc
add
out
jne
push
mov
cmp
lods
addr16
call
dec
stos
sbb
js
adc
add
pop
or
stos
rorb
mov
pop
mov
in
push
add
jmp
andb
push
lea
add
dec
out
adc
pop
pop
and
cmp
pop
dec
inc
add
mov
add
and
add
lds
bound
add
in
push
add
mov
add
jg
add
dec
jmp
pop
xor
add
sub
add
sahf
jnp
pop
inc
pop
xor
add
add
and
add
pop
movsl
pop
add
pop
std
push
scas
rcrl
popa
add
das
call
add
add
jmp
lods
sahf
mov
mov
add
xor
add
ja
pop
lock
cmpsl
pop
sbb
test
cmp
ror
icebp
mov
pop
ret
pop
repnz
adc
mul
pop
insl
rcrb
sahf
add
add
mov
cmpsl
pop
movsb
pop
sbbb
fimuls
rorl
xchg
incl
jmp
adc
movsl
pop
sub
add
jns
rcll
pushf
push
xor
test
dec
pop
out
dec
cwtl
lock
cmovp
pop
cmpsb
pop
cmp
pop
test
xor
or
inc
fdivrp
ret
push
popa
add
pop
in
arpl
add
cmpsb
pop
adc
add
sub
mov
icebp
sbbb
sarl
or
sbb
shr
xchg
add
cmp
insb
iret
test
and
add
stc
sti
hlt
pop
lock
mov
add
jbe
nop
ljmp
xor
add
add
rcrb
inc
pop
ror
nop
loope
sub
cmp
shl
pop
sar
sarb
sarb
int
cmovge
add
cmp
add
adc
add
pop
rcrl
sbb
pop
pop
jle
dec
sub
pop
outsl
loope
pop
pop
fwait
sbb
aam
pop
pop
call
or
test
add
pop
fbld
jae
add
imul
lds
mov
add
insb
inc
add
pop
lods
and
add
stc
jecxz
movsl
pop
cmp
jne
jns
sbbl
pop
and
add
pop
mov
add
pop
lahf
ljmp
or
insl
imul
jge
inc
add
push
push
pop
pop
cmpsl
pop
push
mov
jmp
adc
add
mov
cs
bound
add
mov
add
mov
cmpsl
pop
sbb
jne
pushl
jmp
adc
cmp
arpl
add
pop
test
cmp
popl
add
sub
pop
fsubs
sbbl
push
xchg
jmp
mov
or
mov
sbb
adc
add
xor
push
out
nop
and
ss
pop
lds
push
add
out
mov
inc
pop
arpl
add
and
add
dec
call
add
or
add
add
add
cmc
push
arpl
add
add
daa
pop
sti
push
add
jmp
mov
xor
jo
add
ret
pop
mov
pop
sar
push
jmp
aam
mov
add
jle
mov
pop
jae
add
add
jb
decl
and
sarb
lret
out
xchg
jne
aad
sub
adc
add
cmp
add
jmp
pop
das
mov
pop
pop
sub
add
push
jmp
add
add
les
std
pop
sub
add
lret
xchg
mov
adc
mov
add
into
idivl
mov
add
sbb
sar
cmp
xchg
and
pop
cmp
pop
repnz
popf
jg
loopne
int3
incb
pop
mov
adc
and
add
xlat
test
sti
lret
inc
add
or
outsl
sbb
dec
cmp
add
fistl
add
dec
loopne
outsb
out
jmp
fidivl
cli
xchg
mov
add
pop
popf
outsb
pop
pop
cmpsl
pop
pop
aam
stos
aad
xchg
scas
cmpsl
pop
adc
add
add
scas
pop
adc
add
add
pop
adc
cld
mov
jl
jbe
push
dec
fldenv
test
dec
std
sub
pop
xor
add
pop
sub
pop
stc
lahf
push
mov
jmp
sbb
fsts
mov
add
in
mov
aad
push
pop
nop
push
ret
aam
mov
vphaddubw
pop
jnp
setae
add
pop
sub
or
pop
pop
sub
add
repz
pop
movsl
pop
aam
pop
fildl
xor
jp
or
mov
nop
push
ret
or
add
decb
mov
and
out
mov
pop
js
push
add
xchg
hlt
xchg
pop
lea
add
adc
add
mov
add
jbe
add
cmp
shr
sub
add
dec
xor
arpl
xchg
sbb
enter
in
mov
testb
dec
sbb
add
add
das
rcrl
addr16
cli
lock
popa
add
mov
jg
pop
lock
add
jmp
xor
cli
fwait
pop
daa
pop
insl
lret
sbb
jmp
es
bound
add
repnz
xchg
mov
pop
icebp
lds
loopne
decl
test
std
add
sbb
add
add
add
add
and
add
and
add
pop
loop
lahf
push
pop
pop
push
pop
test
dec
inc
add
fwait
lock
adc
add
adc
add
add
sti
mov
js
adc
pop
notl
pop
aad
pop
out
adc
add
push
ror
jmp
arpl
push
call
jmp
filds
outsb
lds
sbb
mov
ds
pop
xor
daa
pop
mov
xchg
mov
in
fstp
mov
push
lahf
sub
sbb
adc
add
add
incl
sbb
call
xchg
aam
ds
add
out
cli
xor
add
test
paddq
add
inc
add
mov
pop
cmp
les
bnd
pop
add
or
xchg
cmp
loop
xchg
inc
add
or
pop
std
adc
inc
pop
incl
dec
cmp
icebp
sub
add
mov
add
adc
negb
pop
in
xchg
cmc
lods
dec
pop
pop
adc
int
pop
stos
pop
fsubs
or
add
push
add
jle
pop
mov
add
add
shl
pop
imul
sub
and
add
xor
add
int
add
lds
add
sbb
pop
jmp
cmp
pop
pop
dec
sub
in
cmp
ficomps
cli
mov
add
dec
add
mov
adc
xlat
lock
pop
fstpt
add
in
inc
add
mov
not
nop
push
ret
inc
add
movsl
pop
int3
mov
pop
pop
cmp
test
pop
push
add
pop
out
ret
pop
jl
and
add
pop
jmp
jmp
mov
pop
daa
pop
jae
add
jp
fchs
pop
fidivl
scas
mov
push
push
jmp
push
pushf
add
mov
into
les
loope
sbbb
xor
add
pop
adc
add
pop
add
add
pop
sub
pop
fisttpll
in
mov
xor
pop
cli
scas
mov
push
call
or
add
push
add
in
sub
movsl
pop
sbb
add
xchg
scas
call
adc
add
sbbl
fadds
add
fsubs
add
add
sbbl
jmp
pop
arpl
add
jns
add
loope
das
pushf
mov
lds
xchg
cmpsl
pop
jno
add
xchg
or
and
add
scas
lds
push
dec
ljmp
pause
pop
push
sub
jmp
arpl
jmp
inc
arpl
sub
pop
daa
pop
lea
pop
mov
inc
add
mov
test
pop
jecxz
push
incl
mov
jmp
cmp
pop
aas
push
pop
and
add
sbb
incl
sti
nop
push
ret
adc
pop
xchg
pop
scas
popf
mov
add
pushf
mov
aam
jecxz
aaa
and
add
add
push
add
pop
mov
xor
pop
iret
pop
decb
in
jnp
cmp
jmp
add
lret
out
or
mov
add
add
and
add
cmp
loope
mov
mov
add
stc
adc
add
pop
xchg
adc
add
and
cmp
push
add
imull
push
in
and
add
push
add
sub
add
pop
lock
push
pop
imul
fmull
adc
add
add
push
mov
jmp
and
push
daa
imul
out
in
mov
pop
and
add
imul
pop
into
push
sbbb
mov
fistl
add
inc
add
cs
mov
mov
xchg
add
add
lret
repnz
add
jns
mov
mov
or
cmc
inc
add
fmull
jmp
stc
jb
add
test
push
lahf
pop
jmp
mov
fisttpl
mov
pop
cwtl
ljmp
les
std
mov
add
out
pop
pop
mov
nop
cmp
pop
jge
cwtl
xchg
mull
mov
cli
into
popa
add
adc
add
cwtl
movsb
pop
jg
dec
mov
add
cs
fwait
in
mov
cld
pusha
add
fnstcw
add
lods
push
add
test
ss
stc
mov
stos
js
pop
mov
jp
ljmp
add
add
pop
test
cmp
pop
sqrtps
add
lods
in
je
fcoms
add
pop
imul
rcrb
add
add
sub
and
decb
loope
rcll
fwait
lods
xchg
cs
fiaddl
add
pushf
repnz
or
add
mov
pop
xchg
sbb
fs
mov
rcrb
add
movsl
pop
xchg
pop
adc
add
add
mov
sub
cli
push
pop
repnz
pop
add
add
pop
jmp
sub
arpl
jp
in
divb
cli
repnz
xor
bound
add
add
sbbl
scas
mov
lock
mov
shlb
add
push
sub
repz
arpl
filds
aam
pop
nop
sti
push
pop
mov
dec
sahf
ja
mov
cmc
jo
add
push
add
add
add
add
add
cli
xchg
cmpsb
pop
or
adc
add
add
and
add
mov
dec
ja
xchg
push
imul
jecxz
jmp
push
adc
add
add
mov
scas
cltd
in
clc
inc
pop
mov
mov
add
mov
int3
fisubl
pushf
call
fs
insb
pop
pop
jecxz
repz
add
sbbb
xor
adc
push
pop
imul
sbbl
pop
xchg
lods
add
xor
add
sbb
pop
cmovno
add
pop
mov
xchg
pop
aas
push
jae
add
pop
je
sarb
add
or
pop
pop
mov
pop
inc
add
cmc
arpl
xchg
xchg
fildll
test
bound
add
pop
rcll
add
stc
jno
add
fcompl
or
sbbb
mov
inc
pop
adc
add
adc
add
add
in
xor
add
dec
rcrl
inc
add
mov
pop
push
xor
add
rep
or
adc
add
test
cmp
pop
sub
pop
or
push
rep
jmp
aam
dec
arpl
pop
jnp
movsb
pop
stc
loop
xchg
sub
cmc
ja
mov
add
add
pop
pushl
shr
decl
mov
pushf
sbb
add
add
pushl
adc
and
dec
jle
add
lods
repz
add
xchg
rcrl
add
pop
mov
add
cld
jge
nop
jb
add
rcll
add
pop
dec
movsb
pop
aam
add
into
rorb
mov
add
cmpsl
pop
js
pop
into
jae
add
lods
add
add
mov
push
lock
add
cmp
jl
pop
addr16
pop
mov
aad
pop
cltd
es
push
add
adc
add
mov
fisubs
add
pop
xchg
pop
pop
sbbb
das
out
imul
pop
int
add
addr16
mov
cmp
aaa
into
fidivrs
add
inc
add
arpl
add
pop
imul
cli
push
enter
mov
pop
xchg
repnz
add
das
test
pop
jp
cmp
rcrb
push
add
fs
sbbl
movsb
pop
fs
es
jb
add
adc
add
add
arpl
add
stos
sbb
cmpsb
pop
cmpsl
pop
dec
movsb
pop
push
int3
aam
pop
rcrl
jg
add
sub
gs
sbb
nop
je
pop
jp
loope
dec
mov
add
sbbl
pop
sbb
mov
dec
add
jp
pushf
insb
mov
scas
pop
lahf
push
add
lods
cli
pop
jmp
pop
pop
repnz
in
push
jmp
jmp
arpl
or
pop
sbbl
les
add
mov
dec
sbb
into
mov
or
pop
mov
jmp
pop
xlat
xlat
or
adc
or
lcall
lods
add
or
stc
adc
add
push
push
add
loop
div
push
loop
inc
pop
adc
add
pop
xchg
adc
pop
pop
sub
fiaddl
add
and
sbb
gs
fadds
add
sbb
sahf
cld
cwtl
and
lds
addr16
push
fwait
inc
add
mov
jnp
jmp
pop
xchg
mov
mov
fwait
js
pop
mov
rcrl
ljmp
jmp
xor
aaa
lods
in
inc
pop
cltd
mov
add
fsubrs
nop
in
sub
add
jl
add
lods
jbe
pop
sbb
add
or
cltd
int3
xor
ret
pop
xchg
sbb
cmp
or
add
xchg
lret
decb
popa
add
cmp
nop
push
ret
ret
lods
mov
dec
repnz
or
imul
testl
pop
inc
pop
int3
imul
pop
mov
and
add
jge
add
iret
pop
jno
add
out
and
add
pop
inc
add
nop
shlb
mov
fcos
filds
lods
ds
pop
mov
mov
cld
imull
je
jmp
daa
daa
pop
xchg
adc
add
add
add
or
cmpsl
pop
test
pop
xchg
add
add
push
mov
fnstenv
push
hlt
mov
mov
jmp
or
dec
mov
ja
pop
fdivrs
or
add
into
push
add
shlb
add
es
mov
cld
lret
mov
add
add
add
xchg
jnp
adc
pop
add
add
add
dec
bound
add
or
insb
loope
and
mov
imull
jbe
test
jne
add
add
in
pop
test
lea
add
movsl
pop
aam
and
add
mov
fdivr
jmp
xchg
ret
xchg
mov
pop
mov
mov
lea
xor
lds
add
adc
mov
pop
and
add
add
or
and
add
sahf
dec
sub
pop
xor
add
xor
pop
sub
push
add
movsb
pop
mov
pop
shll
inc
add
sahf
stos
nop
xchg
pop
inc
add
nop
adc
add
fisubrs
dec
push
pop
push
inc
add
pop
gs
xchg
mov
sbbl
add
pop
imul
xor
add
mov
and
out
lds
pop
sbb
daa
pop
or
add
sub
lods
fs
lcall
out
inc
add
jne
adc
fbld
mov
add
pop
movsb
pop
sub
jg
adc
add
mov
add
add
pop
arpl
add
or
aaa
xlat
ret
pop
insl
pop
add
add
nop
cmp
add
or
add
in
call
mov
mov
cmp
pop
fisubs
add
add
dec
ret
pop
inc
add
xchg
popa
add
lahf
cmpsb
pop
pop
xor
add
adc
add
add
add
push
xor
nop
push
ret
into
arpl
jmp
add
pop
ljmp
add
pop
jns
dec
daa
pop
call
repz
call
daa
push
jne
ja
fdivs
add
ss
mov
pop
jo
add
add
dec
xchg
dec
cld
mov
add
std
jne
pop
xchg
or
add
aaa
sub
mov
pop
cli
nop
mov
add
or
fs
push
pop
in
lret
push
add
and
mov
test
dec
adc
inc
pop
aaa
jecxz
xchg
sub
adc
add
add
add
sub
and
add
pop
test
ja
jge
pop
cmp
mov
pop
sar
cli
in
dec
push
add
cwtl
sahf
mov
cmpsb
pop
sbb
jmp
pushf
sub
add
inc
pop
shrb
and
in
rcrl
aas
sti
mov
pop
test
add
inc
pop
or
pop
jmp
inc
out
xchg
arpl
cwtl
push
xchg
or
sub
or
out
push
imul
jmp
cmp
lods
insl
fiaddl
pop
das
pop
mov
fsubl
add
add
ficomps
push
mov
push
pop
cmp
adc
imul
add
add
loop
dec
xchg
xor
add
or
pop
pop
icebp
dec
pop
cmpsb
pop
in
bound
add
add
dec
mov
lock
pop
xlat
push
stos
xchg
push
add
icebp
cmp
cld
dec
iret
loop
stc
decl
jl
inc
add
mov
test
add
add
or
pop
mov
fs
dec
lea
cmp
add
fs
shr
imul
add
pop
std
dec
test
and
add
dec
outsb
aam
pop
xchg
jbe
ret
fcomi
inc
add
xchg
test
push
pop
test
add
loope
lret
pop
adc
stc
ds
pop
sbb
clc
jmp
arpl
arpl
rclb
add
mov
inc
pop
dec
fsubrl
cli
or
pop
dec
das
movsl
pop
jl
pop
repnz
pop
mov
sbb
ds
in
daa
pop
loopne
repnz
pop
and
add
std
inc
pop
mov
pusha
jmp
inc
arpl
add
mov
add
sub
xchg
push
bound
add
pop
add
iret
pusha
add
movsb
pop
adc
add
add
add
bound
add
pop
fs
lock
pop
in
inc
pop
mov
jmp
add
adc
mov
pop
das
cmp
jmp
or
pop
adc
jno
add
add
pop
icebp
xchg
imul
pop
mov
xchg
inc
add
das
cmp
dec
xor
add
mov
jp
add
lock
lock
jns
xchg
mov
add
pop
js
add
aad
add
mov
sbbb
add
mov
mov
pop
mov
add
pop
jge
and
add
cmp
stos
dec
xchg
mov
adc
add
mov
pop
add
add
pop
enter
add
jmp
sti
or
mov
push
popf
inc
pop
mov
leave
or
addr16
lret
add
enter
xchg
xor
add
pop
std
out
iret
lea
pop
mov
inc
pop
xchg
inc
pop
ds
stc
jnp
adc
add
add
fwait
add
and
xchg
mov
xchg
mov
jmp
enter
push
mov
or
jge
pop
fildll
pop
pusha
add
and
lods
fwait
xor
add
add
add
sub
pop
rcrl
add
and
add
call
jmp
daa
pushf
ljmp
add
lcall
dec
cmc
dec
jp
pop
adc
div
arpl
add
xchg
movlps
add
add
pop
enter
mov
sub
pop
in
dec
mov
or
add
jle
pop
outsl
es
daa
pop
cmp
ret
lods
out
sbbb
pop
cmp
adc
add
fmulp
xchg
fucom
pop
shl
pop
inc
pop
jmp
leave
call
roll
add
add
les
push
add
mov
pop
sbb
ror
cmp
add
call
pop
pop
out
faddp
pop
dec
mov
or
lock
add
pop
or
add
add
pop
imul
pop
pop
sub
cmp
pushf
mov
lock
cmp
mov
dec
add
dec
mov
mov
add
pop
mov
jle
or
mov
in
mov
add
xlat
or
sbbb
cmp
adc
add
dec
aas
jb
add
pop
fs
out
fistps
jp
push
add
add
add
fisubrs
sub
lods
out
jecxz
add
add
cmp
push
inc
add
insb
cltd
inc
pop
rcrb
inc
pop
gs
pop
pushf
mov
cmpsb
pop
cld
nop
push
ret
mov
and
scas
sbbb
add
in
ftst
pop
sbbb
add
pop
push
lods
cltd
inc
add
mov
jmp
add
pop
cli
into
pop
arpl
add
add
jne
jmp
sub
out
mov
mov
pop
pop
pop
mov
cmpsb
pop
enter
jle
push
add
fiaddl
add
mov
jg
pop
mov
push
mov
jmp
sub
aam
mov
fisttpll
lods
cs
xor
outsb
jge
arpl
add
adc
add
add
pop
jecxz
fs
mov
adc
add
adc
add
out
mov
into
loop
leave
mov
aam
add
push
add
outsb
pop
inc
add
or
sbbl
push
jmp
sbb
ljmp
lcall
add
arpl
add
add
push
inc
add
jle
pop
cmp
call
dec
push
call
mov
cs
pop
ret
pop
push
add
fwait
mov
add
mov
pop
sbbl
mov
cmp
fiaddl
add
rcrl
pop
push
mov
add
add
add
int
fisubl
pop
mov
pusha
add
leave
hlt
stos
lahf
test
pop
pop
pop
pushf
pop
mov
es
push
cmpl
jmp
pushf
sub
lock
xchg
shlb
add
mov
sbb
popa
jmp
dec
pop
arpl
jecxz
push
add
ret
pop
loope
push
lds
xor
add
loop
out
mov
pop
cmc
cmpsl
pop
push
es
repz
pop
sbbl
mov
dec
cmp
and
add
add
popl
pop
jge
pop
pop
enter
add
xor
add
pop
sub
mov
pop
pop
and
add
add
outsl
xchg
out
das
xchg
test
xchg
call
sub
pop
arpl
add
add
inc
add
into
xchg
repz
add
cmp
add
dec
add
add
pop
mov
add
arpl
add
add
sbbl
aas
enter
popf
mov
outsl
rcrl
sub
iret
xchg
stos
xor
dec
lcall
push
pop
push
add
ret
pop
mov
pop
jg
inc
pop
arpl
add
mov
hlt
pop
iret
cltd
stc
mov
les
inc
pop
fadds
pop
xor
pop
sbb
push
and
add
add
sbb
jge
push
out
daa
pop
sbb
out
sub
sti
lods
pop
fs
pop
lcall
add
outsb
jmp
push
ret
cmp
jp
xchg
xor
add
add
add
push
lods
and
add
add
dec
jne
pop
adc
add
cli
dec
fdiv
loopne
mov
pop
cmp
ret
pop
xor
add
add
aad
pop
ja
pop
jecxz
sub
add
dec
sbb
add
pop
int3
pop
nop
sub
pop
xchg
inc
add
push
add
xchg
lret
in
or
add
das
pop
add
xchg
shrb
shlb
inc
pop
pop
sbb
add
popf
test
pop
in
mov
add
decb
add
dec
xchg
inc
pop
jmp
jmp
pop
stos
push
out
fucompp
pop
mov
jns
add
js
les
push
add
xchg
in
ret
pop
xchg
jmp
mov
mov
iret
sub
and
add
mov
add
call
jmp
aam
test
arpl
add
sbbl
or
add
xchg
js
mov
add
mov
pop
push
mov
jmp
into
inc
in
mov
fcomip
add
jp
pop
clc
loopne
pop
aaa
jl
loope
inc
add
ret
xor
add
nop
fwait
mov
add
pop
xchg
add
jecxz
mov
push
add
xor
add
out
fs
in
aam
sbb
add
or
pushf
cmp
add
incl
jmp
arpl
mov
stos
pop
cwtl
sbb
sbb
add
out
bound
add
inc
pop
xchg
add
add
xor
add
push
mov
jmp
add
test
jmp
cmp
add
aam
int3
stos
cmpsl
pop
jmp
add
mov
sbbl
inc
pop
mov
repnz
mov
div
decl
jmp
std
inc
add
rcrl
sti
add
add
lcall
iret
pop
sbb
inc
pop
xchg
les
sub
loope
inc
pop
cli
dec
movsb
pop
jp
pop
xor
add
inc
pop
dec
mov
xchg
inc
add
mov
lods
rcrb
sbbb
add
jge
cmp
cmpsl
pop
pop
insl
js
shrl
cmp
ljmp
ss
push
pop
imul
pop
mov
pop
cmpsl
pop
das
sub
add
push
push
ret
mov
aam
add
ljmp
jmp
dec
and
jae
add
push
push
add
call
pop
lcall
add
pop
xchg
jo
add
add
add
add
lahf
sti
imul
mov
add
push
add
cmp
push
pushf
add
add
rclb
sub
push
mov
icebp
sbb
add
std
inc
pop
or
cld
ja
std
inc
add
iret
cmp
push
pop
fadd
pop
cltd
jecxz
mov
add
mov
jb
add
ret
pop
aam
add
add
push
pushf
cmp
add
ds
jle
adc
add
je
jmp
pop
movsb
pop
add
add
add
push
in
xor
add
adc
add
add
mov
pop
cli
and
pop
insl
mov
add
sahf
aas
sti
xchg
pop
push
xchg
lret
pop
fcomps
cmp
add
fwait
dec
jmp
add
ljmp
mov
add
sbbb
add
pop
stos
popa
add
ret
in
sbbl
add
lret
add
insl
lret
movsl
pop
ret
adc
add
rcrl
mov
scas
jmp
cmp
add
xchg
xchg
sbb
or
jmp
sbb
dec
mov
lahf
xor
pop
in
mov
mov
add
inc
add
imull
add
cmpsl
pop
xchg
fwait
aaa
add
add
out
jo
add
mov
push
pop
out
push
sub
stos
in
sti
dec
nop
inc
pop
xor
jne
outsb
pop
lea
test
or
dec
lea
add
js
add
andps
lods
into
ljmp
sub
ret
jmp
inc
push
or
ret
dec
mov
out
daa
pop
clc
insb
in
test
jne
jp
out
push
pop
xchg
mov
pop
mull
mov
pop
push
dec
jg
mov
std
sahf
es
popf
sub
xchg
leave
sbbb
mov
sti
pushf
xchg
fnstenv
dec
lea
adc
add
add
push
pop
stos
cli
adc
add
fwait
or
push
addr16
adc
add
mov
jmp
cmp
daa
jne
pop
aas
test
pop
sbb
incb
inc
pop
fsubrp
jmp
add
jb
add
mov
scas
rcrl
pop
add
add
cmpsb
pop
les
in
les
pop
sub
inc
pop
outsb
test
mov
mov
pop
pop
lods
jl
imul
pop
add
add
add
add
add
add
pop
jae
add
push
add
or
rcrb
add
js
add
cwtl
mov
scas
aas
dec
jb
add
add
loop
imul
addr16
int3
pop
popa
add
js
mov
add
pop
sub
add
sub
jno
add
mov
pop
pop
pop
lcall
pop
pop
or
pop
xchg
and
add
jmp
pop
xchg
sbbb
pop
bound
add
test
inc
pop
std
cmp
in
loope
cmp
jo
add
add
lcall
lds
daa
pop
inc
pop
or
jno
add
jns
xlat
xchg
push
add
dec
sbbb
sbbb
pop
mov
lret
sbb
pop
sbb
add
lods
sbb
add
dec
out
sbb
pusha
add
pop
adc
add
mov
pop
push
add
jbe
loope
aaa
or
mov
xchg
jle
and
add
push
add
hlt
inc
add
dec
dec
or
add
dec
and
add
je
mov
das
jo
add
dec
call
in
dec
inc
xor
fldl
xchg
lods
add
add
add
pop
mov
mov
nop
push
ret
daa
cmpsl
scas
bound
add
pop
mov
pop
mov
stos
rcr
insl
push
in
jae
add
xlat
pop
pop
mov
jp
inc
pop
hlt
negl
neg
adc
add
inc
pop
int3
stos
add
add
xchg
fisubrl
sub
add
mov
icebp
push
add
ja
mov
mov
xchg
adc
add
jmp
into
arpl
das
mov
loope
repnz
pop
mov
fwait
jns
pop
cvtpi2ps
jmp
push
xchg
add
cli
aas
aaa
decl
sub
or
pop
fst
pop
or
pop
mov
xor
pop
adc
add
call
pop
sbbb
aaa
dec
dec
pop
fisttps
add
lods
or
sarb
fwait
jecxz
gs
jno
add
adc
push
pop
push
adc
insl
jecxz
push
add
cltd
les
xor
repz
cmp
and
pop
jae
add
push
add
add
dec
dec
fs
mov
adc
add
pop
sti
test
adc
insl
and
out
cli
xchg
cli
jp
popa
add
xchg
popa
add
stos
dec
push
imul
pop
gs
or
xchg
adc
add
pop
in
fcmovu
inc
pop
jae
add
dec
std
sub
pop
xchg
imul
push
sub
push
jmp
inc
aam
mov
arpl
fwait
xlat
fsubp
pop
mov
add
ja
jge
int3
stos
les
push
add
add
imul
loopne
rcrb
pop
push
outsb
adc
sbb
add
pop
xchg
jne
iret
aad
xor
add
add
fdivr
push
mov
add
popl
sub
hlt
push
rorl
mov
mov
add
inc
pop
push
xor
add
pop
nop
cmpsb
pop
cmp
add
sbb
add
and
add
wbinvd
in
pop
stos
mov
dec
je
out
push
add
maxps
cs
jmp
dec
scas
gs
lods
aas
xchg
mov
out
cmp
test
pop
dec
sub
xchg
addr16
jno
add
inc
pop
sbbl
lret
jno
add
mov
ret
pop
in
mov
pop
pop
dec
ja
imulb
mov
outsl
hlt
decl
dec
in
cmp
add
push
insl
dec
and
add
add
pop
rcrl
pop
jl
sub
imul
mov
nop
push
ret
mov
add
push
add
sub
es
mov
lcall
pop
dec
enter
add
pop
rclb
sub
test
sub
arpl
test
bound
add
add
jmp
arpl
xor
add
add
iret
out
cld
and
add
popf
fs
xor
add
adc
add
add
into
add
add
fbstp
add
mov
imul
dec
pop
push
insl
outsb
xchg
pop
mov
sub
imul
pop
js
add
xchg
inc
pop
cmp
lahf
jle
pop
arpl
add
sub
lock
lret
cmp
adc
add
sub
jns
mov
mov
pop
mov
inc
pop
push
add
or
pop
inc
add
aad
fdivr
in
sub
aaa
xchg
mov
lds
addr16
dec
push
add
fidivrs
push
adc
add
std
or
inc
pop
push
imul
or
test
add
pop
push
add
pop
gs
adc
pop
pop
mov
add
lds
pop
repnz
shll
add
mov
pusha
add
int
mov
jmp
jne
mov
loopne
dec
stos
das
sub
push
add
pop
pop
pop
inc
pop
or
add
pop
pop
pop
or
xchg
push
into
je
imul
xlat
stos
xor
add
dec
xor
add
add
pop
insb
lcall
or
push
pop
or
std
out
lods
inc
pop
or
xor
add
movsl
pop
lods
movsb
pop
movsl
pop
xchg
lcall
pop
es
in
sub
addr16
cmp
lahf
adc
add
mov
pop
lret
pushf
fistpl
into
mov
stos
push
add
sbbl
int3
cmpsb
pop
addr16
imul
inc
pop
sub
nop
scas
icebp
sbb
cmp
inc
pop
xchg
pop
imul
pusha
add
cli
aas
jp
outsb
add
add
add
dec
push
inc
add
xor
add
addr16
adc
add
mov
push
ret
sub
divb
and
add
add
or
pop
sbb
cmp
jmp
fnstcw
pop
je
mov
das
shl
pop
push
pop
jbe
lods
jb
add
cmc
or
in
sub
add
and
add
pop
cltd
movsb
pop
mov
jl
adc
add
jl
testl
xchg
add
and
add
add
cmp
lods
aam
and
add
adc
add
dec
push
pop
jmp
arpl
mov
add
out
jmp
ljmp
call
je
jmp
arpl
ss
pop
int3
pusha
add
or
frstor
sti
movsl
pop
test
test
add
ret
shr
jmp
in
aaa
loopne
mov
cwtl
cltd
ss
pop
dec
aaa
sahf
xor
add
pop
or
repz
movsb
pop
test
add
pop
pop
jae
add
cmpsl
pop
mov
pop
pop
push
add
and
add
add
mov
addr16
movsl
pop
mov
xchg
xor
add
jns
fmul
or
add
jmp
push
add
add
mov
add
adc
add
mov
xlat
into
imul
pop
loop
mov
add
xor
add
pop
pop
mov
pop
aas
sbb
add
ds
in
out
lea
fisttpl
mov
add
cmp
add
sub
ja
mov
ficoml
enter
repz
add
adc
add
mov
or
xchg
scas
in
cs
rcrl
and
fucomp
cmp
mov
adc
add
rcll
add
add
adc
add
repz
pop
testl
mov
mov
fisttpl
sub
add
dec
mov
jb
add
jle
pop
iret
insl
hlt
jae
add
pop
mull
add
mov
pop
sbb
faddl
add
addr16
or
pop
inc
add
cwtl
push
cltd
cmp
cmpsb
pop
popf
or
pop
jne
inc
pop
ret
in
testb
pop
repz
jmp
pop
or
das
dec
dec
cmpsb
pop
test
add
mov
add
push
add
je
mov
mov
shll
clc
pop
sbbl
cli
jecxz
sbb
aas
mov
outsl
and
ss
pop
and
sub
add
mov
sub
addr16
inc
add
dec
jge
jmp
ss
stos
int3
in
call
jmp
xchg
inc
outsl
pop
iret
add
add
add
cmp
ljmp
inc
jb
jmp
mov
pop
mov
jmp
add
pop
pop
dec
lock
test
mov
and
add
pop
loope
dec
dec
cmp
rclb
add
mov
jne
movsb
pop
fdiv
mov
mov
lock
add
add
loop
nop
xchg
pop
in
jmp
xchg
lods
push
movsl
pop
xor
inc
pop
push
mov
adc
add
icebp
decb
add
loopne
jo
add
pop
mov
add
fsts
and
add
add
xchg
daa
arpl
sti
call
fstl
ja
push
mov
add
add
add
add
roll
add
add
sbb
add
adc
xchg
cmp
add
jae
add
add
nop
and
fistps
mov
jmp
push
aam
mov
pop
jb
add
test
pop
iret
fcmovnu
fistpl
pop
mov
add
add
rcrl
add
pop
jnp
add
push
add
push
dec
dec
adc
add
add
pop
sub
pop
xor
add
jbe
pop
cmpsb
pop
cmpsl
pop
sub
pop
mov
jbe
pop
test
pop
cltd
jae
add
dec
cmpsb
pop
test
pop
js
lret
pop
dec
xor
add
pop
sahf
xchg
add
add
pop
xor
add
add
jb
add
rcrl
rcrl
mov
pop
ljmp
pop
icebp
push
fdivrp
jmp
call
pop
xlat
call
popa
add
pushf
pop
aam
mov
push
add
push
sbb
pop
popa
add
repz
add
add
cmp
cmp
mov
jnp
pop
cmp
pop
pusha
add
test
mov
movsl
pop
jle
js
dec
cmp
or
pop
lods
or
pop
stos
cmp
hlt
sub
add
lds
lcall
mov
outsb
add
add
and
add
sbb
pop
jae
add
cmp
add
pop
hlt
cmp
pop
mov
jmp
sub
das
repz
mov
pop
and
cli
lret
inc
add
or
mov
xor
imul
add
gs
mov
fs
icebp
dec
inc
add
mov
testb
add
pop
xchg
scas
push
add
and
add
xlat
cmp
pop
xor
add
add
xchg
call
mov
inc
pop
xchg
and
clc
jns
ja
add
push
sbbl
add
add
adc
add
pop
movsb
pop
xor
add
sbbl
jl
pop
test
insb
jae
add
add
pop
pop
les
add
jb
add
mov
adc
add
xlat
jae
add
add
mov
xor
add
mov
jne
and
es
pop
cmp
pop
lods
dec
push
add
jg
lods
push
sbb
test
clc
jmp
adc
mov
add
leave
inc
pop
lock
clc
sahf
dec
lret
cmp
sub
pop
sbb
mov
adc
add
lds
pop
jl
add
sub
xchg
xchg
adc
add
adc
add
or
adc
add
es
in
mov
and
not
aad
fs
js
pop
clc
lods
fistpl
or
add
mov
pop
push
xchg
mov
stc
and
add
das
inc
pop
loope
pop
repnz
daa
pop
mov
js
pop
mov
adc
testl
and
add
testl
add
pop
test
add
add
mov
inc
add
pop
adc
faddl
add
pop
inc
pop
add
sub
add
adc
push
jp
pop
mov
iret
outsl
cmpsl
pop
jb
add
fwait
sbb
xor
and
rclb
pop
mov
xchg
jmp
pop
pop
dec
enter
push
add
cmp
pop
jne
popf
fs
iret
inc
pop
pop
int3
sbb
add
push
add
pop
clc
popa
add
testl
add
mov
test
pop
dec
cs
call
nop
push
ret
sbb
inc
pop
jo
add
cs
in
or
pop
movsb
pop
loop
xor
add
cmp
sti
and
add
rclb
add
iret
and
add
pop
es
dec
mov
add
add
adc
clc
cltd
icebp
sub
add
inc
add
push
add
jge
add
cmp
jae
add
mov
mov
dec
mov
sub
xchg
push
mov
push
and
add
pop
int
pop
pop
rcrl
mov
jmp
fldenv
enter
and
add
fiaddl
fmuls
add
add
int3
mov
pop
daa
pop
pop
clc
sbb
add
cltd
test
push
jmp
ljmp
push
lods
and
add
cmp
ret
pop
mov
call
xor
test
pop
cmp
jo
add
sub
ljmp
jp
pop
shl
mov
add
sub
pop
mull
add
insl
pop
push
add
pop
inc
add
lea
pop
test
pushf
add
fwait
arpl
add
xchg
or
pop
ds
popa
add
pop
sbbl
les
pop
repnz
fidivs
push
mov
jmp
enter
xor
add
add
jle
pop
jnp
sbbl
dec
lcall
imul
arpl
add
movsl
pop
ret
add
pusha
add
xor
add
pop
test
or
outsb
jge
pop
xchg
inc
add
adc
add
fcmove
lods
insb
pop
dec
push
add
daa
xor
pop
imul
mov
add
pop
out
add
or
ficoml
mov
mov
sbbb
sbb
pop
push
add
jmp
ret
add
fisttps
add
mov
frstor
add
pop
pop
and
add
push
cmp
add
cmp
and
jmp
xchg
push
lahf
push
pop
leave
js
jge
pop
push
add
and
add
lret
sbb
dec
add
add
out
jmp
fildl
popa
add
mov
and
add
std
add
add
punpcklbw
add
cmp
aad
lea
pop
inc
add
mov
add
cmp
xlat
icebp
sbbb
ljmp
xor
add
stos
push
test
decb
push
add
sti
xor
add
sbb
jmp
aam
pop
fcom
xor
pop
sub
add
sbb
pop
fsts
clc
xor
add
jg
cmp
not
and
add
adc
add
push
mov
jmp
xor
test
add
fdivr
loop
pop
pop
xor
add
pop
adc
add
pop
loop
pop
pop
out
sbbl
sti
sti
or
add
jg
pop
cmp
inc
add
push
inc
pop
mov
rclb
jmp
in
enter
popf
in
xchg
aas
push
ljmp
add
sbbl
pop
cs
ljmp
pop
or
or
adc
or
push
ret
pop
mov
pop
pop
loopne
loop
mov
mov
sti
outsl
lock
mov
add
mov
add
mov
cli
pminub
xor
add
pop
dec
dec
jo
add
fchs
pop
mov
pop
aaa
cmp
pop
out
xor
add
pop
inc
add
pop
pop
inc
add
jecxz
mov
add
mov
add
lret
mov
add
xor
add
cmpsl
pop
lcall
shr
push
lret
jmp
cmp
pop
in
lock
sbb
add
cmp
and
add
pop
lret
jns
cltd
ret
cli
in
xor
pusha
add
lds
pop
insb
inc
pop
push
add
mov
pop
sub
pop
and
add
sbb
ss
add
pop
icebp
imul
pop
out
inc
pop
jno
add
push
jmp
fists
arpl
je
add
pop
xchg
lods
and
imul
loope
jmp
fdivs
add
add
add
call
push
cmp
add
add
pop
ja
add
xor
add
mov
add
inc
pop
negl
adc
add
pop
cltd
mov
or
loopne
inc
add
sbb
sbbb
add
pop
sbb
pop
test
mov
mov
sbb
jmp
enter
adc
ljmp
push
cmc
shlb
push
push
mov
add
cmpsl
pop
add
sbbb
push
pop
pop
mov
pop
mov
cmp
push
mov
add
pop
cmpsl
pop
mov
add
mov
xchg
outsl
dec
sbb
add
add
jo
add
add
pop
fistpl
imul
jecxz
int
pop
aas
clc
shr
dec
mov
pop
sub
stc
mov
mov
pop
ret
add
xlat
and
sbb
pop
loop
cmp
pop
dec
mov
pop
negl
stos
gs
in
and
add
add
call
pop
popa
add
lea
add
fmuls
xor
push
add
dec
pop
pop
pop
mov
out
jmp
or
mov
movsb
pop
mov
add
enter
jno
test
pop
sbb
add
add
pop
pushf
add
add
sti
or
dec
sbb
pop
out
out
jae
add
add
pop
pop
pop
ja
jb
add
hlt
in
fcom
xchg
pop
and
add
pop
xchg
pop
mov
pop
push
add
jg
add
arpl
add
pop
push
add
jmp
xchg
push
or
insl
mov
pop
add
add
lea
jmp
mov
pop
mov
add
sub
push
push
jmp
xor
xor
call
add
add
cmc
aam
movsl
pop
adc
add
lea
add
jmp
xor
sub
push
add
and
add
mov
imul
gs
roll
decl
jmp
mov
out
stc
iret
arpl
add
imul
cmp
mov
add
add
add
add
xchg
pop
out
inc
add
inc
add
fmulp
inc
add
mov
pop
pop
cmpsb
pop
cs
stc
stos
mov
pop
int3
jb
add
inc
pop
aam
cmp
addr16
mov
mov
adc
add
es
clc
cmp
movzwl
jmp
ljmp
mov
cmp
lods
push
jmp
jmp
push
lods
pop
int
jle
mov
loopne
ret
pop
js
pop
mov
mov
pop
dec
call
add
imul
pop
xchg
pushf
jo
add
dec
add
add
add
pop
adc
add
int3
mov
cmc
pop
cmpsl
pop
mov
add
lods
jae
add
add
dec
xlat
rcrl
jp
fcmovne
in
test
cs
pop
jmp
fwait
insl
pushf
std
repnz
cmp
pop
xlat
jb
add
ficoms
pop
push
pop
jl
fidivl
je
xchg
jbe
and
pop
ret
test
add
push
pusha
add
ljmp
sbbl
sbb
add
std
jne
lret
or
fs
adc
out
movsl
pop
sbb
jecxz
and
push
add
pop
mov
pop
les
mov
fdivl
add
jle
int3
out
jl
add
cltd
push
add
push
add
ficompl
or
pop
dec
pop
pop
mov
cmp
pop
mov
pop
sbb
pop
int3
icebp
stc
push
test
test
pop
xor
add
negb
push
add
pop
addr16
push
sbbl
pop
sbbb
jge
pop
dec
or
lods
rcrl
add
cmp
testl
sub
lcall
push
pop
jp
mov
sbbl
jmp
push
jmp
xor
adc
pop
aad
xchg
in
xlat
jge
mov
and
add
popa
add
pop
adc
add
lret
enter
pusha
add
cmp
icebp
mov
test
inc
add
jne
add
jmp
sub
dec
std
es
divl
adc
add
rorb
pop
ficomps
cmp
jne
add
inc
add
adc
add
pusha
add
sarl
ret
pop
cld
ja
jg
add
icebp
jecxz
inc
pop
arpl
add
pop
pop
pop
cltd
inc
add
shlb
add
push
sarb
rolb
adc
add
xchg
cmp
pop
push
pop
cwtl
mov
add
adc
add
pop
xor
add
pop
and
add
pop
jnp
pop
inc
add
in
xor
add
decl
data16
jmp
arpl
add
add
ret
pop
into
pop
int3
cli
insl
int3
sbb
pop
in
ljmp
add
add
out
jmp
inc
pop
dec
lods
repz
imul
inc
pop
mov
stos
sbbl
add
lock
xchg
cld
lea
add
mov
push
inc
pop
pop
insl
cmc
adc
add
add
mov
popa
add
imul
xor
add
pop
mov
add
push
add
mov
pushl
ja
pop
rcrb
add
sub
jmp
sub
mov
push
repz
hlt
das
and
add
add
inc
add
mov
add
out
movsb
pop
ret
pop
sub
lahf
xor
add
out
ss
add
sbb
add
fistpl
in
sub
insb
mov
pop
adc
pop
outsb
cwtl
or
and
add
add
fstpt
lock
lea
mov
inc
add
ret
mov
add
mov
mov
pop
lret
out
sub
add
push
pop
shrb
dec
icebp
movsb
pop
cmp
add
xor
rolb
je
push
pop
out
call
orb
int3
imul
add
add
add
shl
pop
add
cmp
mov
aaa
dec
enter
jecxz
sub
mov
ja
or
add
jl
add
inc
pop
cld
icebp
imul
add
scas
ret
xchg
insb
push
jle
icebp
test
sbbb
pop
in
adc
dec
fwait
xor
add
cltd
loope
push
pop
pop
insb
mov
pop
out
xor
add
into
in
enter
cmp
lea
add
mov
add
and
xor
add
pop
adc
add
mov
cmp
ss
pop
aam
cmpsb
pop
jg
adc
add
iret
push
sbb
mov
push
ret
daa
sub
pop
adc
add
adc
add
xor
add
add
ljmp
nop
repnz
pop
outsl
into
pop
aad
jne
pop
pop
gs
jle
add
inc
pop
and
icebp
sbb
add
es
cmc
das
pusha
add
dec
jne
sbb
pop
mov
add
mov
stos
stos
out
xchg
enter
out
sbbl
pop
loopne
scas
stos
xchg
mov
or
out
jle
pop
dec
mov
rorb
in
xchg
popf
cmp
pop
in
xchg
push
add
cs
jge
jl
pop
xlat
faddl
add
sarb
lret
call
in
pop
inc
and
add
xchg
add
mov
ljmp
mov
jmp
jmp
fldenv
xchg
sti
sti
lcall
mov
fwait
inc
pop
mov
push
sahf
fbstp
mov
jmp
add
mov
pop
push
lret
in
pop
incl
and
add
pop
pushf
xlat
or
fsubp
pop
sub
loopne
mov
pop
mov
cmp
add
testl
pop
jbe
mov
add
je
mov
jne
pop
icebp
js
mov
pop
jmp
dec
ftst
ljmp
pushl
ljmp
sub
and
add
add
sub
imul
mov
mov
mov
stc
add
dec
push
sti
cmc
clc
lea
test
add
stos
and
cmpsb
pop
push
mov
outsl
arpl
add
push
mov
add
scas
iret
lahf
adc
jmp
push
pop
ret
add
pop
repz
rcrb
insb
xor
add
jle
lret
mov
lret
pop
pop
and
jns
pop
cltd
inc
add
push
outsl
add
push
sahf
cmp
lods
das
cmp
xchg
bound
add
add
in
imul
add
dec
sub
mov
lods
out
and
add
mov
jno
add
inc
pop
mov
pop
lret
add
in
movsl
pop
mov
add
sub
add
pop
xchg
or
add
cs
ret
pop
ret
pop
or
add
xchg
mov
cwtl
ja
pop
push
dec
mov
or
pop
pop
incl
js
jmp
ds
arpl
xchg
nop
push
adc
add
pop
sti
cmp
icebp
insb
mov
incl
and
xor
add
jg
add
pop
outsb
pop
mov
add
int3
decl
outsl
pop
icebp
jns
cmp
pop
insb
testl
add
push
add
mov
cmovnp
add
mov
add
add
into
mov
gs
inc
pop
stos
movsb
pop
and
add
add
pop
jne
std
hlt
std
and
add
pop
ljmp
nop
push
ret
or
xor
mov
rcll
add
add
dec
dec
sbb
add
gs
adc
btc
pop
dec
sbbl
pop
jne
test
mov
pop
aam
aam
pop
popf
movsl
pop
imul
add
push
test
shl
insl
lock
xchg
push
cmpsl
pop
jne
cmp
pop
cwtl
cmp
cs
pop
xchg
insl
test
inc
pop
lea
jmp
inc
xor
mov
rcr
jo
add
mov
push
mov
jmp
arpl
mov
popl
sbbl
add
pop
sbb
lahf
inc
pop
jne
inc
add
mov
les
gs
popf
mov
push
pop
int3
fwait
pusha
add
jmp
pop
into
jle
pop
dec
sub
add
mov
push
add
jns
add
add
add
mov
mov
add
mov
sbb
imulb
jmp
jmp
push
inc
xor
add
sub
pop
aam
dec
adc
add
adc
add
cltd
pushf
mov
adc
add
sub
pop
xchg
int
adc
jp
adc
add
pop
in
pop
daa
pop
sub
sti
test
pop
clc
notl
inc
pop
imul
add
add
add
cmc
xchg
mov
sahf
xchg
clc
jmp
mov
jmp
sbb
in
insb
test
add
scas
les
pop
test
pop
xor
icebp
pop
sbbl
nop
push
ret
mov
push
lret
cli
sbb
adc
add
xor
add
add
sbb
imul
ja
inc
pop
pop
cmp
fstl
pop
aam
fsubr
aaa
mov
mov
xor
out
sbb
pop
adc
add
rcrl
sub
lea
add
add
sbb
stc
je
popl
add
pop
push
pop
sbbb
cmc
push
das
mov
sub
sbbl
das
dec
nop
mov
pop
repnz
pop
fisubrl
cs
pop
mov
movsb
pop
dec
test
pop
add
add
pop
fwait
mov
cwtl
mov
add
push
add
dec
and
add
pop
or
fwait
dec
cmc
sbb
inc
pop
jge
xor
add
cwtl
cs
add
addr16
add
add
fnstsw
xor
jmp
jmp
sti
xchg
daa
pop
sbbl
bound
add
shll
and
add
icebp
xor
add
jo
add
push
add
aaa
mov
inc
xlat
jmp
arpl
push
nop
push
ret
pushf
sbb
add
aaa
fs
sub
out
pop
pop
aas
add
add
pop
scas
or
add
sahf
sub
pop
hlt
sbb
test
movsb
ja
incl
sbbb
sub
xor
add
repnz
add
mov
arpl
add
pop
and
add
xchg
mov
add
mov
pop
mov
add
pop
inc
pop
ds
sbbl
add
jno
add
add
and
add
pop
fs
xchg
stc
dec
arpl
add
dec
cmp
ljmp
pop
arpl
inc
mov
sub
sbbb
push
imul
mov
or
mov
loopne
inc
pop
in
inc
add
pop
sahf
in
movsl
pop
sahf
mul
pop
cltd
mov
adc
add
add
hlt
pop
outsl
and
add
sahf
mov
ror
sbb
jmp
add
push
scas
rclb
jge
push
fildll
add
add
xchg
lcall
push
mov
xchg
arpl
fiaddl
add
mov
ss
pop
pop
push
movsb
pop
inc
pop
jo
add
add
stos
mov
pop
cmp
add
cmp
add
insl
leave
cmpsl
pop
adc
dec
cmp
fisubs
pop
mov
ret
push
add
xchg
xchg
jmp
cmp
adc
lcall
push
add
add
mov
cmp
lcall
push
mov
sbb
mov
pop
mov
add
sti
imul
push
adc
add
sti
jmp
dec
into
mov
sub
mov
jmp
dec
arpl
or
pop
pop
inc
add
and
add
ret
pop
cmp
test
pop
jnp
pop
jecxz
mov
add
rolb
or
test
sbb
int
daa
pop
and
hlt
enter
pop
cwtl
pusha
add
push
add
add
dec
ss
ret
dec
jae
add
and
add
clts
pop
dec
hlt
add
add
sbbb
add
fucomi
pop
dec
mov
xchg
es
push
add
jl
pop
mov
jae
add
stos
xlat
push
sub
mov
pop
popf
sbbl
push
ss
cmp
lods
adc
add
cmp
sbbl
bnd
daa
pop
xchg
pop
aaa
lea
or
pop
lcall
mov
stos
fnstenv
add
addr16
es
aam
je
pop
pop
cmpsl
pop
jmp
cltd
loope
int
pop
xchg
jbe
stos
sub
xor
pop
pop
movsl
pop
inc
add
cmp
rcrl
add
xor
add
lods
sbb
sti
inc
add
lret
aas
dec
flds
dec
dec
sti
rcrb
add
test
rcrl
add
pop
push
pop
pop
loope
mov
lcall
pop
xchg
arpl
add
pop
bound
add
add
xchg
add
inc
pop
sti
xor
int
pop
jmp
inc
xor
jmp
push
xorb
mov
movsl
pop
push
add
push
xor
add
mov
sbb
push
cmp
add
push
push
in
xchg
mov
cmp
pop
xor
les
jmp
dec
dec
dec
sub
add
add
mov
add
push
gs
sub
pop
sti
sbbl
jae
add
pop
pusha
add
hlt
lret
loop
jo
add
add
divb
inc
pop
aad
mov
popf
push
add
daa
pop
loopne
jnp
pop
aad
mov
in
rorl
xlat
cmp
xchg
sbb
in
push
add
call
cmc
xchg
sarb
int
lcall
inc
inc
pop
bound
add
pop
jno
add
jo
add
pop
pop
fisubrs
push
push
mov
add
stos
add
pop
xchg
fisttps
mov
sbb
xor
add
add
add
or
lock
ss
add
sbbl
mov
add
push
xor
pop
insl
mov
pop
shll
int
add
ret
pop
jbe
pop
das
push
fstpl
in
jbe
jecxz,pt
inc
pop
scas
aaa
in
addr16
xor
add
pop
inc
add
ss
pop
cmp
stc
daa
pop
pop
pushf
mov
mov
es
mov
push
sbbl
jmp
mov
sbb
mov
xchg
pop
das
xchg
xor
add
and
mov
add
mov
pop
inc
add
aas
jo
add
add
mov
pop
arpl
add
mov
add
gs
loop
mov
sub
push
sldt
cmpsl
xchg
dec
arpl
les
daa
pop
icebp
outsb
and
add
pop
xor
dec
ss
ficoms
arpl
pop
int
pop
push
jb
add
and
jg
add
cwtl
repnz
mov
pop
dec
movsb
pop
push
add
sbbl
jo
add
syscall
pop
push
iret
and
add
pop
and
add
sub
mov
push
pop
jne
pop
dec
bound
add
inc
pop
pop
xchg
in
fdivrs
add
xor
add
mov
jle,pt
cmp
add
out
inc
add
scas
push
in
jnp
xor
add
add
pop
jmp
sbb
sub
aam
jmp
sub
in
js
add
aad
xchg
mov
das
aaa
lret
add
pusha
add
and
pop
mov
add
cmc
adc
add
popf
xchg
pushf
sub
jle
pop
movsb
pop
in
xchg
jo
add
les
lahf
xor
mov
pop
inc
add
lods
push
add
jb
add
add
xor
add
repz
pop
icebp
lds
aas
ret
pop
mov
jb
add
add
sbb
popa
add
dec
mov
push
cwtl
cmp
out
insl
das
pushf
jecxz
inc
add
inc
pop
lods
jle
sub
xchg
popa
add
cmp
mov
nop
push
ret
sub
add
sub
and
add
or
add
sub
shrb
add
outsb
adc
mov
imul
sub
add
jl
pop
mov
xchg
aaa
popf
pop
jl
lea
xchg
cmp
popf
lods
and
add
xchg
pop
mov
loope
jno
add
jo
add
pop
pop
xchg
sub
pop
xchg
mov
pop
ss
jae
add
mov
das
cmp
jb
add
adc
add
imul
divb
clc
lret
pop
pop
mov
xchg
or
xchg
xchg
fdivrl
add
int3
daa
pop
dec
add
add
mov
add
shlb
jo
add
add
pop
pop
pop
pop
fimull
cwtl
mov
fnstcw
pop
aad
pop
mov
add
push
ror
jmp
push
sub
jbe
push
add
mov
mov
xchg
add
call
dec
leave
cmpsl
pop
in
add
add
pop
out
sub
jle
add
add
add
loop
mov
dec
in
or
add
mov
mov
add
out
xor
add
pop
fdiv
repz
sbbb
mov
fwait
mov
add
jae
add
aam
cmp
jge
inc
pop
call
pop
lret
jmp
arpl
popf
decl
inc
pop
mov
iret
add
add
pop
lret
dec
in
add
add
pop
in
cmpsb
pop
mov
pop
mov
xchg
xchg
xor
add
cmp
add
mov
scas
enter
mov
jmp
and
adc
add
add
jno
add
cmpsl
pop
loop
and
add
test
cmpsb
pop
jl
add
es
inc
add
sbb
pop
imul
lods
or
popf
add
add
inc
add
add
add
pop
stos
fstps
jmp
xor
arpl
jmp
into
jne
pop
stc
sbb
cmpsl
pop
mov
pop
cli
pusha
add
xchg
sbb
jae
lcall
aam
ljmp
sub
push
xchg
xor
add
pop
pop
inc
pop
pop
cltd
aad
or
add
shrb
pop
lret
inc
pop
aad
add
add
pop
movsl
pop
mov
es
pop
pop
cs
pop
fcoms
roll
add
sti
adc
add
jnp
test
add
dec
cmpsl
pop
dec
out
in
mov
pop
fmuls
mov
int3
mov
fwait
lahf
call
add
pop
cmpsl
pop
bound
add
add
pop
xor
add
cli
cs
sub
fadds
pop
and
stos
addr16
imul
sub
sub
js
js
loope
mov
pop
or
add
pop
dec
jne
mov
lock
add
add
mov
dec
jne
sti
ds
add
xchg
xor
add
addr16
es
xchg
aam
mov
pop
pusha
add
hlt
pop
imul
add
fnop
daa
pop
in
hlt
cmp
pop
dec
adc
add
addr16
mov
mov
pop
dec
lcall
add
xchg
pop
mov
fmull
sbb
add
add
mov
loope
ja
pop
lret
pop
adc
and
add
pop
stos
pop
lods
ds
pop
and
inc
pop
sbb
dec
pop
add
add
sbbb
sub
add
enter
dec
jp
mov
pop
sbbl
pop
sbbb
add
push
pop
test
cmp
aam
pop
cmpsl
pop
rol
pop
clc
mov
lret
add
cmpsl
pop
sbb
movsb
nop
push
ret
add
mov
cmp
adc
add
add
mov
mov
pop
rcrl
fs
and
add
hlt
movsb
pop
aam
imul
pop
movsl
pop
inc
pop
xchg
mov
mov
inc
add
ljmp
add
add
xchg
leave
cmp
xor
add
inc
pop
inc
pop
or
ja
cltd
push
ss
add
adc
add
fildll
cli
je
outsl
in
lea
add
or
ret
pop
xor
add
in
movnti
fcomip
ficoms
add
test
aad
pop
mov
cmpsl
lcall
arpl
aas
inc
add
fsts
js
pop
xor
fistpl
pop
clc
repnz
pop
pop
mov
nop
cmp
add
dec
mov
pop
pop
pop
addr16
inc
add
scas
movsb
pop
inc
add
pop
sub
add
outsb
lea
pop
xchg
dec
rcrb
lods
sbb
lods
inc
add
enter
pop
cwtl
mov
repnz
rcrb
add
cwtl
jle
pop
adc
add
cmp
pop
push
nop
push
add
add
call
jmp
mov
arpl
add
cli
jb
add
pop
cwtl
and
add
add
imul
pop
inc
pop
std
popf
stos
push
add
push
shll
sub
inc
pop
rcr
jmp
add
notl
add
add
add
mov
ljmp
sbbb
lret
sbb
pop
ret
jecxz
insl
sub
loopne
jl
je
stos
pop
dec
les
add
bound
add
sub
sub
push
add
pop
call
sbbb
or
in
mov
xchg
and
aaa
scas
adc
add
fwait
sti
imul
shrb
outsb
pop
and
add
inc
and
jmp
mov
inc
add
inc
pop
daa
pop
xchg
push
add
es
ljmp
enter
pop
aam
test
xchg
jb
add
lret
add
ficompl
or
movsl
pop
vmread
mov
jmp
arpl
jne
jp
push
inc
add
cmpsb
pop
scas
imul
add
add
pop
test
add
pusha
add
and
add
pop
mov
pop
jno
add
or
dec
push
sub
adc
add
rcrl
add
xor
lds
pop
int3
jmp
xchg
add
add
pop
filds
add
sub
icebp
jge
rclb
add
mov
js
push
pop
cmpsl
pop
leave
outsl
jno
add
pop
test
pop
mov
pop
iret
cwtl
sbb
sbb
jp
push
jmp
add
sub
in
jno
add
add
jge
jmp
and
pushf
pop
jmp
mov
je
pop
and
add
lret
or
mov
fs
adc
add
add
add
add
int
sbb
cmp
add
inc
add
xor
rcrb
arpl
add
add
rcrl
je
pop
iret
loope
mov
inc
pop
inc
add
movsl
pop
mov
add
add
add
ret
pop
lods
idivl
dec
in
pop
inc
add
mov
imul
inc
add
cmp
sbb
or
xchg
pop
xchg
xchg
jmp
jmp
adc
add
pop
dec
add
add
pop
pop
mov
pop
push
jne
jmp
into
fwait
clc
jnp
call
jmp
pop
cmpsl
pushf
mov
outsl
and
jecxz
sbb
pop
mov
shl
jmp
enter
stos
bound
add
inc
pop
rorb
pop
idivb
adc
add
add
sbb
jmp
push
enter
sbbb
sahf
dec
rcrl
or
mov
sub
pop
inc
add
cmpsb
pop
repz
ss
loopne
arpl
add
call
in
lret
sub
pop
pop
add
cmc
jge
mov
jmp
aam
arpl
push
rcll
pop
mov
pop
repnz
xlat
xor
add
ds
pop
cmp
in
push
add
filds
int
pop
and
add
cmp
or
lods
enter
mov
mov
hlt
dec
jns
scas
adc
add
pop
scas
pop
mov
outsl
sbb
mov
push
ret
out
out
jne
rorl
lds
jmp
mov
decb
jle
mov
add
cmc
cwtl
lcall
int3
or
arpl
add
jmp
mov
sarb
mov
add
add
add
sbb
ds
mov
or
sub
add
imul
movsl
pop
inc
pop
adc
out
push
mov
xor
pop
xchg
sub
or
pop
xchg
iret
enter
cmp
loop
xchg
daa
pop
xlat
push
pop
pop
pop
in
dec
mov
mull
ret
pop
lahf
mov
push
loope
dec
aad
inc
add
stos
add
add
sbb
jp
mov
fdivr
pop
lds
mov
add
push
adc
add
stos
pop
jmp
bound
add
in
mov
jmp
xchg
fbld
inc
add
aaa
les
jp
inc
add
inc
add
out
pop
les
and
add
sub
loopne
test
ret
pop
fs
add
add
add
push
or
test
shlb
loop
fildl
add
add
cwtl
dec
jg
xor
cld
push
add
inc
pop
inc
add
pop
sbbb
sub
pop
and
add
add
add
add
fucomip
shll
add
add
dec
and
add
add
inc
pop
dec
test
sub
or
les
js
js
into
or
pop
xor
add
add
js
jmp
mov
fsubrp
xchg
inc
pop
xor
add
iret
mov
add
pusha
add
push
pusha
add
inc
add
cltd
pop
mov
fnsave
cli
xchg
jns
add
test
pop
adc
add
jno
add
add
pop
imull
pop
sarb
fs
cli
inc
add
std
jmp
and
inc
add
mov
fisttpll
cltd
pop
pop
pushf
inc
pop
std
js
add
adc
add
pop
aas
out
adc
add
add
test
pop
out
test
cwtl
icebp
out
xor
add
pop
add
add
push
sbb
add
pop
cld
notb
or
cld
loopne
stc
adc
add
mov
mov
add
mov
add
aaa
fidivl
lcall
sub
aad
add
jmp
in
mov
add
test
ret
cmpsb
pop
pop
pop
xchg
mov
xchg
push
jmp
outsl
add
add
sub
xchg
pop
push
leave
jmp
pop
sub
and
add
add
pop
ficomps
ds
sbb
add
loopne
pop
dec
jle
xchg
rcrl
add
sub
sbb
in
outsb
ss
out
pop
add
aam
icebp
push
pop
sbbl
cltd
rcrl
add
inc
add
adc
add
sub
pop
aas
repnz
sti
fidivl
das
inc
add
xor
add
mov
add
je
pop
xlat
pop
int3
sbb
add
cld
fdivrl
mov
add
push
push
mov
add
add
add
std
add
or
xchg
or
insb
sbb
mov
add
arpl
leave
mov
stos
pop
fisttpl
aas
es
sub
sbb
cmp
dec
nop
inc
pop
pop
addr16
jns
add
mov
addr16
test
pop
dec
xor
add
xchg
jne
or
jne
pop
out
xchg
inc
add
adc
add
pop
mov
pop
sbbl
nop
cmp
add
or
scas
cmp
jp
pop
adc
add
add
xor
add
inc
pop
xor
add
adc
add
pop
in
jne
add
add
add
adc
test
dec
loop
cltd
inc
add
bnd
aam
jae
add
pop
pop
pop
ja
pusha
add
dec
faddl
pop
mov
fidivrl
push
shll
add
punpckldq
add
add
or
outsl
test
pop
add
add
adc
pop
push
sub
data16
incl
dec
jo
add
adc
add
sbb
cmpsb
pop
insb
pop
mov
jmp
test
adc
add
jns
call
mov
repnz
push
add
add
xchg
inc
add
mov
mov
jne
nop
push
ret
outsl
add
add
xchg
mov
ret
pop
push
pop
arpl
add
xchg
mov
test
pop
mov
jmp
jge
cmpsl
pop
mov
fs
out
out
push
out
fucomi
push
ljmp
add
cmp
add
push
push
add
mov
dec
push
add
lret
sti
lret
jecxz
lcall
dec
inc
pop
aam
sbbl
add
in
std
imull
jp
aad
add
mov
pop
pop
pop
test
clc
mov
push
ret
cmp
mov
movsb
pop
pop
rcrb
or
fs
stos
call
jmp
arpl
cltd
loope
push
add
call
jnp
out
pop
pop
mov
pop
cmp
in
arpl
add
add
inc
pop
dec
fidivrs
inc
lock
outsl
arpl
outsl
movsl
pop
shrb
add
xchg
and
add
movsl
pop
xchg
mov
rcl
rcrb
pop
push
popf
push
scas
mov
cmp
pop
rcr
mov
stos
mov
enter
out
mov
pop
daa
pop
jmp
sbb
push
or
push
ret
lods
fldcw
add
in
cwtl
push
jne
lcall
pop
pop
pop
stos
inc
add
fiaddl
xchg
mov
mov
ljmp
rorb
mov
add
cmp
mov
cmc
out
mov
out
mov
divl
lcall
jbe
adc
add
add
iret
xor
add
adc
pop
sahf
jb
add
pop
nop
mov
paddusb
add
int
and
add
insb
or
add
loop
das
xor
add
sbb
pop
mov
add
cmp
jle
in
mov
pop
sbbl
lea
imul
fsubrs
nop
jno
add
pop
sbbl
aaa
lods
or
add
aam
xchg
js
push
int3
pusha
add
mov
pop
mov
jae
add
pop
inc
pop
out
pop
pop
mov
mov
add
les
pop
inc
pop
cmp
mov
popa
add
cmp
ficoms
and
add
pop
jb
add
xor
add
fstl
test
and
add
push
adc
movsb
pop
lcall
pop
insl
les
scas
mov
pop
pop
dec
in
jge
pop
cmp
xor
add
imul
pop
sbbb
nop
and
add
mov
push
nop
and
add
push
push
mov
add
add
add
movb
add
jmp
adc
xchg
pop
stos
insl
jb
add
pop
sti
mov
sbb
pop
sub
pop
icebp
adc
add
ljmp
push
jmp
pop
dec
sbb
sub
sbb
jne
jmp
arpl
arpl
add
loope
outsb
xchg
loope
int3
dec
lcall
or
mov
mov
pop
mov
and
rcrl
sub
pop
aas
mov
pop
inc
add
mov
sbbl
js
pop
fdivl
insb
mov
ss
arpl
add
pop
in
jae
add
pop
dec
imul
pop
sub
mov
jb
add
test
xchg
hlt
test
mov
pop
mov
jb
add
pop
push
test
jmp
ret
push
sti
sbb
ret
pop
push
add
sbb
mov
scas
outsl
jae
add
idivb
pop
insl
lahf
iret
adc
add
add
int
stos
shll
add
scas
ret
pop
inc
pop
sbb
je
jmp
inc
roll
add
cmp
pop
js
or
xor
add
movsl
pop
add
add
add
add
ret
pop
add
add
add
lods
mov
mov
popa
add
mov
jmp
adc
lock
add
out
cmp
jmp
aaa
ret
inc
or
test
repnz
pushl
jnp
cs
pop
sub
out
adc
add
gs
mov
pop
pop
sbb
pop
xlat
nop
inc
pop
stos
ds
mov
pop
add
add
push
add
sub
add
xchg
stc
sub
add
mov
push
add
jno
add
pop
movsb
pop
pop
cwtl
fsubs
ljmp
test
and
add
push
push
add
scas
clc
icebp
jno
add
add
or
pop
jecxz
inc
add
dec
inc
add
out
aaa
fs
aas
mov
pop
mov
xor
add
cmp
in
sbb
pop
mov
add
push
add
inc
pop
xor
add
popf
stc
ja
jle
sbb
cmpsl
pop
shr
ljmp
and
mov
pop
rcll
add
mov
or
pop
adc
add
mov
pop
sub
pop
daa
pop
lds
add
stos
mov
aas
mov
sbb
inc
pop
sbb
int
decl
add
push
jp
add
jle
add
cmp
add
loope
lret
popf
and
add
sbb
pusha
add
outsb
es
loop
mov
pop
pop
rcll
mov
add
out
or
pop
inc
add
loopne
sbbl
pop
lods
sbb
jo
add
out
sbbb
add
jo
add
loop
pop
insl
pop
xchg
xor
add
pop
fs
and
add
lods
push
jmp
daa
jecxz
repnz
pop
test
add
in
or
js
mov
test
imul
add
gs
subb
inc
add
sbbl
add
mov
sub
push
fwait
stc
jne
pop
push
pop
mov
add
inc
add
sbb
pop
push
mov
add
lock
mov
jecxz
mov
inc
add
xchg
add
outsb
leave
pop
xchg
and
add
add
insl
push
ret
pop
xchg
pop
es
mov
ja
jnp
add
std
outsl
in
sbb
out
sub
add
ss
add
loope
ljmp
jnp
mov
pop
pusha
add
xchg
in
dec
push
cmp
mov
pop
push
add
mov
pop
xlat
fwait
adc
add
and
add
enter
cwtl
ljmp
aam
jmp
add
pop
ds
notb
jg
jne
jmp
arpl
movsb
pop
aaa
movsb
pop
cmpsl
pop
adc
add
pop
or
fstpl
mov
popf
pop
pop
or
mov
add
stc
inc
add
repz
mov
pop
inc
add
pop
arpl
xchg
test
xchg
xchg
mov
pop
xor
add
mov
pop
outsl
jge
pop
pop
movsl
pop
jns
enter
mov
adc
add
add
scas
int
pop
outsl
divl
js
into
cli
add
add
xor
jmp
test
sbb
push
add
jns
sub
lods
nop
push
ret
push
arpl
push
and
add
aas
add
add
pop
or
lds
pop
jmp
mov
xchg
mov
mov
test
sbb
mov
add
and
inc
pop
pop
pop
test
pop
popf
sub
or
push
add
stos
add
add
pop
lahf
clc
push
add
xchg
pop
inc
add
addr16
pop
popf
fildl
nop
outsl
sahf
pop
repz
push
mov
and
jo
adc
push
add
xchg
test
push
push
stos
nop
push
ret
arpl
sbbb
jne
add
lods
mov
out
xchg
add
xor
add
add
cmp
pop
dec
cmp
add
add
pushf
es
mov
jnp
add
ret
pop
popa
add
out
inc
add
movsb
pop
leave
fstpl
inc
jmp
or
cmp
mov
add
int
iret
xlat
mov
cmp
hlt
inc
add
negl
out
cmc
jb
add
sbb
rcr
push
leave
xchg
insb
out
sub
add
mov
pop
rcrl
mov
aaa
and
add
pop
sub
fs
ljmp
adc
add
add
xchg
nop
xchg
icebp
loopne
xor
pop
stc
pop
rolb
add
in
jae
add
mov
in
call
aaa
aam
sub
and
add
pop
jp
das
ja
aas
adc
shll
add
push
jmp
arpl
sbb
arpl
mov
int3
xor
add
add
inc
add
push
inc
add
inc
add
pop
test
std
mov
pop
out
cwtl
jnp
pushf
dec
pushf
repz
cmpsb
pop
aad
and
mov
pop
push
add
les
inc
pop
hlt
xchg
ret
pop
in
pop
add
add
pop
insb
or
push
mov
add
add
add
add
stos
sub
pop
sbbl
pop
mov
pop
loope
mov
add
add
xchg
pop
stos
and
add
mov
pop
sbb
into
xor
add
packssdw
add
xchg
inc
pop
iret
stos
decl
lcall
add
pop
xor
add
stc
stc
das
rcrb
xor
add
mov
pop
pop
addr16
test
sub
rcrl
add
sahf
loopne
addr16
xchg
daa
pop
call
lods
lds
add
push
add
or
or
daa
pop
cmpsb
pop
sti
inc
add
mov
pop
add
arpl
add
or
pop
push
dec
jmp
or
push
cmp
jmp
lods
ds
daa
outsl
mov
mov
mov
add
adc
arpl
cmp
add
add
je
xlat
fwait
xor
dec
dec
nop
dec
mov
add
add
in
xchg
fstpl
add
decl
in
decl
jne
pop
rcrb
insl
pop
imul
sbb
jmp
push
mov
sub
lods
sarb
iret
shrb
push
add
xchg
push
add
mov
add
pop
rcl
popf
pop
xchg
sbb
stos
jmp
arpl
mov
mov
pop
cltd
dec
xor
add
jnp
test
push
aas
mov
add
lahf
add
loopne
in
cmp
std
sub
add
add
rcrb
pop
jge
pop
and
add
inc
pop
jb
add
add
add
add
add
push
arpl
add
jne
jl
jbe
mov
mov
add
push
dec
sub
add
arpl
add
pop
in
xor
pop
fstpt
jnp
incl
sti
arpl
fldl
push
mov
push
daa
cmp
jg
repnz
add
cmpsb
pop
push
scas
mov
xchg
rcll
add
add
add
add
aam
pop
rcrb
pop
pusha
add
mov
cmp
add
jmp
jne
jmp
cmpsl
pop
lods
dec
pop
pop
out
repz
mov
in
add
test
cmp
pushf
scas
mov
or
cmp
mov
pop
cmpsl
pop
fdivp
stc
in
out
adc
dec
pop
test
pop
lds
pop
xor
add
or
add
sbbl
pop
mov
fmuls
pop
es
fsub
pop
in
jnp
add
xlat
mov
sbbb
push
add
iret
mov
xchg
inc
add
mov
add
mov
xchg
stc
out
cwtl
mov
in
popa
add
xchg
or
sub
add
add
pusha
add
push
inc
add
mov
dec
pop
stos
mov
scas
sbbl
jg
pop
ret
add
cmp
inc
add
icebp
push
add
push
xchg
clc
push
call
int
pop
test
add
jg
ja
fnstsw
pop
pop
pop
sub
ss
ds
dec
jl
pop
add
add
add
call
pop
jb
add
add
mov
pop
pop
in
es
or
mov
pop
sub
out
leave
jmp
add
test
add
adc
mov
nop
push
ret
xchg
push
dec
sahf
rcrl
mov
cltd
idivl
imul
test
sub
add
add
add
aas
stc
jo
add
pop
and
add
add
icebp
in
mov
pop
adc
pop
jg,pn
pop
aaa
mov
pop
pop
cmpsl
pop
inc
add
sbbb
stos
adc
add
repnz
lahf
fildll
or
punpckldq
add
add
mov
add
inc
add
cltd
mov
lret
or
andb
pop
es
pop
repz
add
pop
lcall
add
or
add
cmp
mov
add
lret
les
pop
stos
outsl
insl
test
mov
add
leave
adc
add
add
add
iret
adc
inc
add
jae
add
add
pop
xor
add
xor
add
bound
add
mov
nop
push
ret
cmpsl
xor
dec
movsb
pop
popa
add
je
fsubs
add
cmp
dec
lods
push
jmp
outsl
incb
cmp
push
xchg
dec
jp
or
add
add
add
fld
pop
sub
dec
aam
cwtl
mov
add
ds
arpl
add
add
add
cmpsb
pop
in
cmp
jo
add
push
add
add
add
div
xor
add
pop
xchg
pop
test
fisubrl
pop
mov
adc
add
popf
and
add
or
fsubr
xor
add
push
ret
add
inc
xor
ucomiss
pop
dec
mov
pop
jae
add
test
lahf
adc
add
pop
or
scas
cld
decl
lods
into
sub
in
movsb
pop
les
cld
leave
std
mov
cmp
sbb
les
pop
xchg
repz
sarb
xor
ds
pop
pop
adc
popa
add
push
je
jmp
aam
add
push
jae
add
add
pop
inc
pop
inc
pop
pop
adc
or
sti
insb
pop
lcall
add
imul
add
ja
pop
out
mov
out
lret
hlt
and
add
mov
pop
push
int
sbb
add
add
ffree
pop
rcrl
add
test
lds
pop
std
imul
pop
pop
aaa
dec
cltd
rcrb
out
out
aad
mov
xor
dec
mov
loop
movsl
pop
call
arpl
incl
jne
arpl
arpl
add
popa
add
cmpsl
pop
dec
push
imul
inc
add
xchg
daa
pop
dec
pop
ror
std
or
mov
push
jmp
arpl
dec
and
add
pop
inc
pop
jne
cmp
ret
xchg
xchg
adc
add
repnz
pop
push
pop
pusha
add
or
rcrl
out
stc
pop
xchg
fildll
pop
loop
mov
shrb
std
jg
pop
cmp
add
sbb
add
pop
mov
sbb
add
pop
pop
adc
jbe
ljmp
add
push
cmp
pop
arpl
add
pop
push
add
jnp
hlt
cmp
push
ret
dec
ret
dec
arpl
add
test
pop
mov
sbbl
add
cli
lds
add
sbb
jmp
enter
add
add
pop
pop
xor
add
sub
pop
mov
pop
imul
lea
pop
dec
inc
add
jnp
nop
cmp
add
hlt
add
stos
test
pop
rcr
rcrl
add
es
fiadds
add
or
icebp
sbb
jecxz
mov
jmp
add
test
arpl
daa
pop
jns
jb
add
test
cmp
add
mov
add
add
add
sti
mov
add
sub
add
out
pop
lret
pop
pop
sbb
or
add
sahf
xchg
rorb
lods
mov
pop
leave
inc
pop
cmp
pop
addr16
dec
je
or
pop
lock
call
dec
enter
mov
jp
lds
les
add
add
add
packsswb
add
add
add
sbbb
pop
adc
mov
pop
icebp
mov
mov
gs
cmc
sarb
mov
nop
mov
mov
jmp
and
arpl
add
mov
add
add
repz
add
incl
sar
out
arpl
mov
mov
arpl
mov
leave
jbe
mov
pop
lods
bnd
add
mov
and
add
ret
pop
test
sub
add
movsb
pop
clc
sub
loope
bnd
pop
xchg
xchg
jmp
mov
cmp
mov
push
ret
pop
push
add
lahf
cld
sbb
add
sub
adc
add
lahf
bound
add
cmp
and
fsubs
dec
imul
loope
test
or
or
jno
add
inc
add
jecxz
push
sbbl
mov
pop
shlb
add
add
add
scas
in
cmpsl
pop
pop
popa
add
mov
adc
pop
daa
pop
movsl
pop
xchg
std
std
add
add
bound
add
mov
icebp
dec
test
movsl
pop
mov
pop
pop
in
jp
je
add
fdivrp
and
jmp
arpl
outsl
arpl
add
pop
xchg
pop
mov
mov
cld
or
pop
leave
fbld
add
cmc
sub
add
mov
shll
pop
pusha
add
sub
arpl
add
into
dec
bound
add
or
xchg
ljmp
add
lock
add
fildl
add
add
lds
notl
sub
test
pop
out
mov
cmpsl
imul
sbbb
or
pop
and
sub
mov
pop
ds
mov
add
sbb
out
jmp
ljmp
pop
in
cld
in
sbb
stc
jne
call
fld1
es
pop
xchg
xor
add
pusha
add
sbb
sbbb
pop
sbb
in
jmp
dec
push
add
sbb
add
pop
adc
add
cmp
add
inc
add
jg
pop
mov
pop
or
loop
jecxz
ds
clflush
add
push
lock
popf
popa
add
ds
das
iret
jecxz
xchg
gs
pop
movsb
pop
scas
pop
or
cs
jns
pop
les
pop
iret
fwait
insb
pop
call
pop
pop
pop
ret
push
in
decl
and
add
push
add
or
jmp
jmp
pop
test
arpl
xor
add
dec
pop
sub
mov
add
je
ds
ret
pop
mov
add
push
pop
lret
sarb
pop
mov
or
roll
add
pop
cwtl
scas
mov
pop
or
mov
push
nop
push
ret
dec
andb
sbb
ret
add
xor
add
add
lcall
rcrl
cmpl
lods
fidivrs
add
out
sub
sbbb
add
ret
pop
sbb
dec
push
add
out
inc
add
imul
add
sbbl
aam
pop
cmc
sbbl
sbbl
add
add
pop
mov
pop
push
addr16
jg
pop
rcrl
in
ja
pop
add
add
xor
add
stos
xor
add
dec
pop
fdivl
add
mov
sub
arpl
add
pop
rcrb
pop
and
add
mov
pop
insb
in
adc
mov
cmp
mov
pop
repz
add
scas
fbstp
mov
pop
fcompl
adc
pop
sub
add
das
sbb
xlat
fimull
adc
inc
add
push
pop
popf
lea
and
add
add
add
add
add
add
shl
pop
sbb
flds
add
add
pop
leave
jne
mov
clc
outsb
pop
inc
pop
rorl
cli
sub
push
jg
add
pop
fistpl
dec
adc
add
scas
outsb
xchg
jecxz
and
addr16
dec
cmc
or
aam
xor
push
add
jmp
arpl
pop
or
mov
dec
dec
imul
aad
sar
pop
pop
push
inc
pop
sbbb
fistps
enter
add
add
pop
jg
movsb
pop
rcrb
pop
ret
pop
test
add
lds
pop
xchg
and
jmp
rorl
add
leave
les
lret
mov
cwtl
xchg
add
and
add
xchg
jbe
add
popa
add
cli
mov
pop
lods
mov
cmp
add
add
add
jmp
cmp
lods
xor
sub
outsb
add
sub
rolb
dec
push
add
out
daa
pop
int3
jno
add
mov
icebp
inc
pop
push
cli
rcrl
icebp
lret
mov
mov
add
scas
or
mov
call
push
jne
cmp
arpl
call
jne
xor
sbbl
pop
es
dec
inc
add
or
hlt
stos
mov
pop
push
add
sbbb
push
adc
add
xchg
ss
mov
stc
push
push
add
or
add
cmp
add
pop
cmp
enter
add
pop
xor
add
add
inc
pop
and
add
add
mov
pop
mov
std
test
fisttpl
rcrl
cld
das
popa
add
test
add
add
sbbb
add
jl
stos
cmp
pop
pop
mov
lods
pop
mov
enter
lds
negb
in
add
in
add
add
pop
int3
pop
mov
pop
pop
jp
pop
insl
jae
add
add
mov
push
mov
pop
ret
add
int3
in
cmp
cmpsb
pop
insl
aam
mov
in
adc
add
add
add
movsb
pop
mov
lods
push
iret
ss
cwtl
or
lds
daa
pop
push
sbb
add
jns
dec
cld
jmp
js
sub
test
scas
mov
cmpsb
pop
push
and
add
xchg
cmp
add
xchg
push
mov
dec
inc
pop
ffree
pop
stos
fs
aam
cmpsl
pop
fistps
push
push
sbbb
inc
add
xor
add
pop
lret
pop
mov
pop
sub
les
inc
add
incb
fdivl
add
in
loope
fcmovnb
pop
dec
ljmp
arpl
add
mov
inc
add
dec
repz
add
push
push
push
sti
btc
cmp
adc
add
pop
pop
mov
mov
imul
cmpsb
pop
jbe
sub
addr16
sbb
add
add
add
cmp
push
fwait
out
lret
aam
add
aad
add
or
mov
xchg
mov
pop
pop
pop
and
add
sub
enter
mov
pop
ljmp
pop
sbb
xchg
popf
imul
sub
adc
add
push
call
iret
repnz
cmpsl
pop
pop
addr16
inc
pop
xor
pop
sti
jl
pop
pop
sbb
out
mov
mov
pop
sar
add
add
mov
js
add
fdivrl
pop
leave
lock
iret
pop
pop
xor
pop
jecxz
lret
add
pop
mov
mov
add
mov
out
mov
xchg
xchg
push
add
or
stos
push
add
push
rcrl
test
rcrl
dec
addr16
outsl
pop
gs
notb
pop
fcmovnbe
hlt
mov
dec
loop
sub
pop
jle
bnd
add
add
jg
jns
pop
pop
les
popl
add
sub
dec
adc
add
pop
jae
add
add
mov
xor
add
mov
testl
pop
and
add
pop
and
add
xchg
lods
aaa
inc
add
sbb
lcall
jg
add
shll
add
mov
in
mov
sub
and
add
add
pop
dec
fisubl
mov
add
sub
or
lods
pop
or
add
or
je
pop
xchg
mov
out
jb
add
test
pop
mov
pop
iret
or
or
pop
fistps
aaa
jo
add
pop
fnsave
add
or
rcrl
scas
pop
adc
pop
stos
pusha
add
bswap
icebp
pop
hlt
sbb
add
add
and
cmpsl
pop
mov
add
enter
sub
add
fs
mov
outsl
push
jo
add
pop
jp
insb
sbb
ljmp
fistpll
add
xchg
dec
sbb
into
stos
xor
add
pop
dec
cmpsb
pop
and
mov
and
add
mov
xor
add
add
add
xlat
xor
adc
adc
add
add
dec
in
and
add
pop
dec
adc
inc
pop
dec
dec
or
shrb
inc
add
cmpsb
pop
dec
rcrl
pop
and
pop
xchg
mov
add
fiaddl
add
pop
adc
add
pop
jmp
pop
or
rcrb
xchg
pop
sti
daa
pop
adc
mov
add
sti
imul
jbe
pop
cmpsl
pop
sarb
xor
add
add
adc
add
dec
mov
pop
dec
jbe
add
pop
inc
add
mov
add
jns
add
pop
xor
add
mov
xor
add
push
mov
add
fldl
add
notl
stos
jg
cmp
pop
sbbl
pop
xchg
mov
movsb
pop
inc
pop
sub
mov
std
adc
add
pop
pusha
add
xchg
ficomps
pop
loop
and
add
add
repnz
add
add
add
add
nop
ret
pop
sub
pop
jecxz
add
add
add
add
les
sub
xor
add
add
gs
xchg
mov
pushf
or
xor
add
pop
leave
mov
add
add
loop
pop
dec
out
xchg
dec
rcrl
ss
xchg
add
add
es
fstpt
mov
pop
stos
and
test
aad
arpl
add
pop
mov
test
cmpsl
pop
cmpsl
pop
rcrb
es
rorb
mov
add
bound
add
push
add
cmp
inc
add
cs
and
fstps
add
add
dec
jne
dec
imul
inc
add
add
jo
add
sub
add
sub
add
add
pop
push
or
pop
pop
xchg
push
movsl
pop
push
push
add
sti
pop
sbb
iret
js
add
iret
mov
add
and
add
add
in
test
or
cs
mov
push
add
enter
aas
insb
cmpsb
pop
cmp
cld
movsl
pop
adc
mov
cmc
sti
pop
pop
aam
jo
add
lahf
pop
inc
add
add
add
lock
sbbb
add
jg
or
repnz
fs
sub
add
in
pop
jno
add
sbbl
add
mov
pop
movsb
pop
lea
ds
pop
pop
stos
xchg
push
add
add
push
xchg
cmp
out
inc
pop
popf
add
add
push
xor
add
pop
jp
shrl
cld
xor
add
movsl
pop
mov
add
inc
pop
fimuls
es
cld
xchg
pop
or
in
push
push
mov
add
push
mov
add
push
and
add
add
dec
in
scas
loope
iret
ret
and
add
add
jb
add
pop
pop
inc
pop
jle
pop
push
xor
fstpl
mov
or
add
xlat
std
sbbb
shr
inc
pop
cmp
mov
std
pop
jbe
pop
mov
imul
xor
add
sub
pop
into
mov
pop
jae
add
fcoml
add
leave
cmp
sbb
add
lret
push
jb
add
adc
add
icebp
push
push
add
jecxz
jmp
jbe
xchg
inc
add
pusha
add
call
sub
add
cwtl
sub
add
rcrl
add
das
cmc
insb
adc
add
mov
lret
mov
pop
pop
shll
inc
add
es
mov
das
dec
mov
int3
mov
and
add
inc
pop
dec
jns
add
fisttps
fisubl
add
cs
add
into
dec
pop
rcrl
add
pop
cmp
mov
and
add
push
add
dec
bound
add
and
add
pop
add
insb
ljmp
sub
xchg
cmp
test
lcall
pop
push
dec
mov
add
pop
rcrb
add
es
mov
outsb
sbbl
enter
nop
dec
sbb
stos
es
sbb
add
pop
dec
int3
ljmp
jbe
and
add
cmp
lods
inc
add
pop
pop
aad
and
add
frstor
add
pop
leave
repnz
sub
pop
ret
pop
pop
adc
add
add
mov
pop
dec
pop
inc
add
lcall
enter
pop
and
add
pop
lock
pop
lret
push
add
dec
icebp
or
adc
add
ja
jle
cwtl
jecxz,pt
add
add
add
movsb
pop
mov
adc
add
es
fcmovnbe
sub
pop
adc
add
pop
int
bound
add
lods
and
add
inc
add
push
add
das
xor
add
xor
add
pop
xchg
push
pop
popf
and
add
add
xchg
jb
add
out
into
daa
pop
xor
add
outsb
testl
icebp
fsubl
in
sub
call
out
lret
mov
pop
dec
push
add
fincstp
sbb
add
je
xchg
ja
dec
jl
pop
leave
and
add
dec
pop
and
lcall
ja
pop
mov
loop
out
cmp
shl
and
add
jge
add
add
xchg
add
add
add
push
push
ret
pop
pop
xchg
int3
mov
jmp
pop
sbbl
scas
mov
add
pop
out
jg
push
add
xchg
xchg
pop
sbb
cltd
mov
loope
das
cmp
loopne
mov
addr16
jmp
add
call
jno
add
push
jmp
pop
cli
ror
jl
scas
push
pop
cld
sbb
add
pop
popf
imul
adc
add
das
adc
add
xor
add
pop
ret
pop
inc
add
bound
add
jge
push
jg
ja
dec
cli
loopne
pop
sbb
pop
lahf
mov
add
add
sub
sub
pop
push
addr16
mov
add
jmp
test
outsb
mov
pop
sub
imul
insl
fwait
mov
add
xlat
arpl
add
pop
test
loop
push
pop
sbbl
decb
dec
into
ljmp
cmp
add
jg
pop
fs
pushf
adc
add
mov
enter
int
mov
bound
add
xchg
sub
pop
and
add
add
or
pop
mov
pop
nop
fs
js
mov
jnp
pop
jg
xchg
jp
scas
mov
sbb
add
jne
add
cmc
pop
mov
jae
add
jmp
add
nop
jecxz
mov
add
add
pop
pop
aas
dec
pop
cmp
in
test
popa
add
les
rcrl
mov
add
in
pop
xchg
mov
cmpsl
pop
push
imul
nop
hlt
xchg
daa
pop
mov
add
insb
mov
pop
or
mov
pop
sbbb
addr16
push
movsb
pop
or
std
sub
pop
sbb
sbbl
ss
fld
pop
xchg
call
inc
add
scas
inc
add
fs
popf
fnstenv
pop
nop
or
dec
pop
outsb
add
add
mov
add
pop
mov
sub
inc
pop
aas
imul
sub
adc
add
fsubp
pop
sbb
rcrb
addr16
cmpsl
pop
sub
insl
movsl
pop
jae
add
mov
add
dec
out
sbb
pop
or
movsb
pop
call
mov
pop
jmp
pop
pop
or
ljmp
add
sahf
dec
or
add
and
leave
js
mov
pop
out
imul
sub
jmp
pop
sbbl
int3
or
add
rcrl
dec
test
pop
cmp
lds
jns
sub
dec
pop
mov
pop
push
xor
add
test
and
add
je
push
insl
ret
or
lods
pop
pop
push
and
add
scas
lahf
rorl
pop
ljmp
cmp
cmc
adc
add
pop
jp
rcrb
gs
adc
pop
pop
insl
pop
mov
xchg
jne
fnstcw
dec
push
add
mov
push
push
add
push
add
jo
add
xchg
or
popa
add
mov
movsl
pop
push
ds
xchg
mov
pop
ficompl
xchg
in
int3
scas
dec
lcall
sti
mov
mov
lock
popf
cmp
add
add
add
pop
sbbl
fistpll
add
les
sbb
pop
sub
mov
pop
pop
loope
dec
ss
add
sub
add
and
add
pop
int3
or
mov
pop
or
or
add
aam
pop
ljmp
lea
sbb
in
notl
add
add
aam
pop
lea
inc
pop
sub
pop
jns
xor
add
pop
mov
pop
call
neg
mov
jg
xchg
mov
add
sub
push
add
cld
fisubs
ret
pop
mov
add
pop
into
ss
inc
add
cmp
cmp
stos
or
add
push
popf
cmp
int
lahf
jb
add
je
mov
add
jecxz
test
loopne
cmpsl
pop
mov
pop
lock
mov
pop
fcomps
xchg
jns
add
xchg
dec
aaa
cmp
xor
add
add
add
sbb
pop
xor
add
in
sbbb
jmp
adc
add
pop
cmp
mov
add
jecxz
xchg
push
aas
std
lods
enter
fiaddl
fcoml
push
lret
xchg
add
lahf
nop
adc
add
pop
cli
add
add
add
adc
add
pop
gs
mov
pop
add
add
cli
xor
add
call
mov
pop
sbb
add
fs
or
xor
add
add
pop
imull
pop
jle
sbbb
pop
add
aad
mov
lcall
or
jns
sbbl
pop
inc
add
pop
inc
pop
or
pop
insl
in
out
jae
add
rcrb
je
lret
scas
lods
xor
add
lahf
iret
xchg
ror
out
bound
add
add
imul
pop
jnp
pop
sub
lds
lock
add
mov
lret
fists
cmp
in
xchg
popa
add
or
add
mov
pop
or
test
cmpsb
pop
jmp
pop
ret
pop
ljmp
sbbb
push
xchg
icebp
lcall
pop
pop
sub
movsl
pop
lods
sub
in
sbb
add
sbb
push
add
adc
add
mov
leave
jns
pop
lods
xor
cmpsb
pop
lods
mov
addr16
xchg
xchg
pop
xor
add
lods
push
pop
mov
or
add
insb
arpl
add
dec
mov
add
test
inc
pop
xchg
mov
test
fldcw
mov
cli
fiaddl
add
sbb
fwait
and
add
pop
es
in
and
add
add
add
add
xor
add
add
add
idiv
loop
dec
mov
pop
addr16
mov
add
mov
dec
jb
add
pop
insb
xor
mov
js
jp
xchg
sub
pop
outsb
imul
add
push
add
push
xor
add
sbb
popf
aaa
nop
popf
sbb
xchg
inc
add
out
arpl
add
add
lret
hlt
sbb
mov
add
cmp
pop
adc
add
test
add
pop
pop
adc
add
pop
dec
xor
add
dec
shrl
sub
sahf
daa
pop
mov
adc
clc
addr16
hlt
loopne
mov
pop
and
add
stos
in
iret
in
imul
push
dec
cs
push
add
add
add
pop
scas
imul
jnp
pop
bound
add
add
pop
sub
add
cmp
enter
add
dec
jle
pop
xor
add
pop
pop
jnp
test
xchg
je
adc
add
int3
in
les
or
mov
mov
enter
ljmp
add
push
xchg
jle
mov
mov
pop
loop
ds
add
insb
fsubrs
jb
add
pop
sbb
and
jmp
test
push
pop
pop
test
scas
nop
push
add
push
add
mov
add
cltd
jmp
pop
cmpsb
pop
loope
hlt
sbb
mov
add
push
cmp
pop
sbb
push
out
loope
incl
add
add
add
cmp
add
jb
add
movsl
pop
das
mov
scas
mov
pop
sub
add
inc
pop
jbe
push
jns
add
dec
sti
push
add
aam
pop
std
pop
push
add
cmp
jmp
sahf
xor
enter
add
mov
xor
test
pop
int
add
add
add
pop
test
pop
cmp
popa
add
add
ret
pop
mov
add
test
sbbl
inc
pop
repz
pop
jno
add
loopne
adc
add
aam
sarb
pop
inc
add
xchg
inc
pop
push
add
push
xchg
in
xchg
test
inc
add
pop
movsb
pop
pushf
sbbb
lods
push
xchg
adc
add
add
add
pop
aad
cmp
movsb
pop
lret
adc
add
add
add
inc
pop
popf
lea
add
pop
or
inc
add
pop
pop
sbbl
pop
inc
pop
xchg
jo
add
add
dec
mov
add
push
add
dec
and
add
fistpl
gs
mov
lar
add
add
mov
pop
ret
jno
add
pop
xchg
sbb
add
jmp
repz
sbb
sbbl
sbb
add
adc
add
mov
pop
loopne
xor
cmp
pop
pop
jb
add
in
or
fistpll
pop
sbb
rorb
xchg
popf
test
rcrb
add
loopne
jnp
push
repnz
arpl
add
movsb
pop
sbbb
push
add
fs
test
or
dec
sarl
xlat
stos
imul
sbbb
adc
add
clc
outsb
sub
pop
pusha
add
and
add
and
add
pop
aam
mov
push
jmp
pop
rol
pop
or
cmpsl
pop
xor
pop
xor
add
xchg
out
call
pop
adc
add
dec
popf
xchg
rcrb
pop
sahf
in
fisttpll
pop
popa
add
or
test
add
mov
cltd
pop
test
call
pop
fbstp
cld
fstl
pop
popa
add
pop
fstpt
and
rcrb
dec
dec
pop
mov
sbbl
stc
test
xor
pop
pop
jp
or
div
mov
mov
add
add
pop
inc
add
int
pop
and
add
pushf
mov
loopne
cs
scas
add
add
movsb
pop
pop
mov
iret
mul
pop
ret
pop
ror
outsb
dec
mov
movsl
pop
loope
inc
add
mov
jno
add
cmp
pop
into
adc
add
cmpsl
pop
ror
jmp
add
cld
jp
mov
add
add
mov
xor
add
pop
sbbl
push
add
mov
pop
in
inc
add
out
mov
pop
and
add
add
mov
pop
lret
xchg
push
insb
and
add
pop
push
push
mov
xchg
mov
pop
mov
int3
icebp
loopne
ja
pop
or
add
sub
add
and
scas
hlt
inc
pop
aaa
mov
push
mov
je
rorb
xor
add
in
sub
fdivrs
pop
mov
inc
pop
xchg
xchg
fmuls
daa
pop
pop
mov
loopne
stos
xchg
cmp
add
dec
adc
pop
aad
add
adc
add
mov
pop
xchg
ss
mov
cmp
mov
pop
mov
mov
pop
lret
sub
pop
aaa
sbbl
pop
cwtl
outsl
insl
insb
les
pop
push
stos
test
adc
add
xor
pop
cltd
xor
add
pop
out
in
mov
pop
call
pushf
sub
pop
aas
sub
mov
add
fldcw
inc
pop
int3
xchg
pop
pop
xlat
fcomi
pop
pop
mov
mov
repz
aas
aaa
pop
cwtl
out
in
xchg
ja
lcall
mov
push
add
les
popf
sbbl
mov
aas
je
add
mov
pop
cmpsb
pop
clc
jno
add
lret
jno
add
movsl
pop
mov
adc
add
add
inc
pop
into
scas
stc
fucomp
push
push
add
fdiv
pop
pop
movsl
pop
xlat
adc
jmp
push
add
push
add
hlt
loope
pop
push
add
jle
in
mov
xchg
add
and
add
add
lea
leave
mov
adc
das
sub
mov
lods
aad
pop
rorb
xchg
adc
add
cmp
fadds
add
adc
add
fnstsw
mov
cmpsl
pop
das
dec
rcrl
jp
pop
adc
add
stc
jp
add
push
pop
sbb
lods
rclb
jns
pop
push
add
lds
jp
sbb
bound
add
add
add
add
jge
pop
push
xchg
push
add
pop
mov
mov
add
cmp
pop
stc
adc
add
pop
xor
add
mov
cs
inc
pop
outsb
sti
xchg
cltd
lock
add
jle
mov
pop
insl
std
inc
add
jp
insb
add
add
add
aam
inc
add
movsb
pop
jle
xchg
aaa
into
imul
rolb
lcall
imul
push
movsl
pop
dec
ljmp
add
dec
std
in
sbbl
aas
lahf
sbb
cmpsb
pop
cli
pop
dec
or
add
add
add
pop
pop
je
mov
pop
mov
iret
invd
adc
add
in
icebp
ud2
lret
aad
pop
pop
pop
jge
or
mov
jge
pop
push
loopne
in
test
add
mov
mov
sub
outsb
sbb
adc
add
cli
xchg
jg
mov
pop
pop
sub
pop
les
add
icebp
pop
inc
pop
xchg
testb
popf
ss
push
add
pop
pop
nop
cli
jae
add
add
mov
aas
sbbl
pop
jae
add
sub
fdivrl
pop
sbb
add
sbbb
and
add
adc
add
add
pop
inc
pop
inc
add
inc
pop
call
add
repnz
add
mov
mov
pop
arpl
add
add
lret
jl
dec
lds
pop
xlat
sub
add
jns
fwait
xchg
bound
add
add
push
add
adc
add
lea
cmp
add
pop
or
jbe
add
jb
add
xchg
call
add
jge
inc
add
clc
or
pop
mov
xlat
std
sub
add
sbbb
pop
and
add
lock
pop
pop
pop
lret
pop
push
add
cmp
sbbl
bound
add
test
cmp
into
and
add
xor
add
add
pop
aaa
xchg
mov
add
add
pop
imul
cmp
fidivrl
sti
pusha
add
and
add
add
jecxz
xchg
sbb
mov
mov
cli
aam
add
sbb
mov
pop
lds
pop
mov
lret
pop
dec
pop
stc
in
jecxz
pop
sbb
iret
movsl
pop
dec
push
add
sub
pop
mov
pop
mov
shlb
cmp
cmp
iret
sbb
jns
xchg
out
outsb
sarb
mov
inc
pop
cmp
sub
lret
add
jecxz
test
push
or
pop
pushf
lods
dec
or
and
add
push
add
stos
cltd
js
pop
pop
lods
ds
lock
push
loopne
adc
pop
mov
pop
inc
add
mov
mov
ss
roll
lret
add
xchg
push
divl
add
push
sub
decl
cld
icebp
and
add
add
pop
fdivr
mov
adc
add
push
add
popf
or
pop
lcall
xchg
sbb
fisttpll
add
nop
mov
fwait
jnp
ret
pop
es
mov
push
xchg
add
add
mov
jno
add
push
jno
add
add
inc
add
mov
add
jnp
or
cmc
pop
lcall
repnz
add
add
xchg
in
xor
add
stos
sub
pop
jb
add
insl
sub
shrl
inc
add
repz
add
lcall
pop
cmc
lcall
pop
in
cmp
cwtl
pop
xchg
or
xor
add
fstpl
fstpl
insl
jb
add
mov
inc
pop
lds
add
sub
mov
mov
add
mov
pop
test
jge
pop
out
repnz
int
add
into
loop
pop
hlt
btr
mov
or
lock
stos
push
pop
or
pop
ljmp
adc
fwait
pop
xor
xor
add
pop
imul
add
or
sahf
sub
ljmp
or
nop
and
add
pop
add
add
add
push
test
add
mov
sub
add
in
in
rcr
stos
rorb
push
push
loop
cld
leave
shll
xor
pop
cmpsl
pop
mov
pop
call
test
gs
mov
xchg
add
xchg
mov
add
lret
int
add
mov
cwtl
lcall
add
mov
cmp
add
add
push
les
add
push
or
pop
or
add
pop
or
pop
jle
add
push
loope
enter
push
add
ficoml
pop
adc
add
or
insb
jmp
mov
ss
jne
push
pop
lds
cmp
add
sbbl
fildl
add
sub
fstpt
daa
pop
sbb
add
xor
add
div
add
add
push
jmp
xor
add
add
test
pop
push
add
ljmp
pop
in
filds
cli
je
pop
stos
sbb
pop
jb
add
pop
inc
add
daa
pop
sub
pop
jg
push
add
adc
pop
repz
outsb
mov
dec
lds
and
add
add
pop
fcomps
pop
xchg
pop
lea
les
pop
inc
pop
aas
pop
push
jecxz
pop
jecxz
addr16
scas
mov
js
add
add
add
les
pop
out
cmp
sub
cmp
adc
pop
pop
pop
stos
mov
pop
jno
add
pop
pop
outsl
sbbb
add
jne
inc
pop
std
pop
pushf
popf
rcrb
jns
pop
pop
gs
adc
add
add
and
add
add
outsb
arpl
add
cmovge
add
add
ret
pop
push
add
cmp
sub
xor
mov
pop
sub
out
mov
dec
mov
pop
popf
push
pop
lahf
lret
adc
add
ss
push
insb
pop
jle
or
add
mov
ret
roll
pop
pop
xchg
cli
dec
mov
sbb
add
adc
add
rcrl
rcrl
sbbb
mov
xor
add
mov
sub
push
and
add
push
pop
mov
pop
pusha
add
jmp
push
out
or
iret
mov
add
add
xchg
xchg
jae
add
xchg
sbb
pop
cmc
fwait
rcl
mov
xchg
fwait
inc
pop
jge
jbe
fs
add
or
lds
mov
iret
add
add
xchg
xor
add
in
xchg
xchg
in
xchg
enter
pop
inc
pop
cmp
add
add
pop
pop
decb
jmp
sub
add
jbe
sbbl
add
into
sbbb
jl
pop
push
and
arpl
add
xchg
pop
shl
pop
xchg
dec
lea
xor
xchg
pop
or
add
mov
pop
stc
fcomps
insl
movsb
pop
push
bound
add
sbbb
add
fs
fs
cld
fs
push
add
fstpt
test
add
jmp
fwait
iret
fsubr
call
jne
pop
lret
mov
mov
pop
out
divl
cmc
fldcw
cmp
push
xchg
testb
push
add
or
add
pop
mov
rolb
pop
lods
sub
pop
lret
fidivrl
add
adc
add
xor
add
ja
add
nop
pusha
add
xchg
bound
add
rcrl
add
loopne
aas
mov
outsb
cmp
mov
and
add
ja
sub
push
push
test
pop
les
je
pop
mov
add
add
inc
add
push
les
frstpm(287
pop
and
add
mov
or
lcall
fucom
pop
idivb
add
les
mov
ret
pop
cmp
mov
sbb
pop
lahf
js
test
or
test
add
scas
test
add
or
sbb
je
add
add
dec
sub
pop
in
nop
pop
pop
cmpsb
pop
jge
pop
jl
gs
lds
mov
add
cli
sbbb
xchg
jmp
sbb
fucom
pop
fwait
jne
add
xor
add
cmp
scas
jmp
adc
jns
fnstcw
add
pop
jnp
enter
add
dec
imul
fisttpll
cmp
mov
pop
daa
pop
test
js
pop
scas
aam
pop
sub
pop
jmp
pop
mov
pop
or
mov
pop
out
jmp
cmp
pop
lret
test
adc
add
pop
cltd
sub
pop
aaa
pop
stos
fsubrs
fs
and
add
int3
je
pop
xchg
js
loope
pop
push
mov
sbb
push
test
repz
mov
je
out
and
add
sbb
add
xor
or
add
mov
add
pop
jge
ljmp
push
decb
cld
in
add
and
add
adc
add
jno
add
and
enter
adc
pop
ss
pop
ret
into
pop
repnz
sbb
jg
lds
or
push
je
pop
jns
pop
xchg
mov
add
movsbl
add
decl
add
inc
pop
push
pop
sahf
pop
pop
mov
pushf
test
lock
xchg
sbb
jbe
xchg
xchg
jmp
cmpsb
pop
sbbb
test
iret
pop
xchg
mov
add
push
pop
scas
inc
add
and
add
adc
add
add
sub
pop
adc
add
pop
jp
or
add
and
iret
out
idivl
pop
test
add
add
add
pop
pop
test
and
add
lock
pop
xor
add
add
push
add
pop
pop
pop
cmp
pop
popa
add
pop
mov
sbbb
hlt
fdivrl
cmp
lods
sbb
add
fs
addr16
jnp
cltd
sbbb
pushf
dec
out
dec
repnz
mov
xchg
cmp
pop
jge
ficompl
xchg
test
pop
add
add
pop
outsl
pop
lahf
add
add
mov
xchg
xchg
fucomp
add
add
mov
pop
sbb
les
pop
xchg
ficoms
pop
cmc
mov
cwtl
clc
popa
add
stos
inc
pop
jae
add
add
xchg
sbb
mov
bswap
xor
add
add
xor
add
movsb
pop
and
pop
insb
sbb
cwtl
and
add
add
pop
push
add
push
add
mov
int
frstor
add
pop
cwtl
xor
pop
inc
add
fsubs
add
and
add
or
push
add
rcrb
add
jp
dec
xlat
test
pop
nop
pop
int
hlt
add
add
repnz
leave
dec
mov
xor
mov
mov
pop
fs
jnp
pop
dec
inc
add
ja
out
lcall
pop
fmuls
sbbl
pop
into
pop
insb
ljmp
fwait
or
adc
add
fwait
xchg
daa
pop
inc
pop
adc
add
dec
inc
add
negb
adc
loopne
sub
mov
sbb
sbbl
lods
bound
add
jo
add
pop
cmp
sahf
adc
add
pop
cltd
pop
mov
add
aaa
mov
push
repnz
add
add
pop
outsl
or
push
xor
add
sbb
dec
mov
fdivr
sbb
add
pop
push
mov
pop
leave
test
add
xchg
aad
pop
jo
add
mov
sbb
cmpsl
pop
xchg
mov
fidivrl
add
inc
pop
fstpl
pop
pop
cli
and
add
add
test
push
pop
imul
add
xor
add
sbbl
pop
inc
add
test
add
repz
push
sbb
and
add
jae
add
xor
add
adc
add
mov
out
mov
call
es
adc
add
add
add
inc
add
outsl
mov
mov
sbbb
cltd
lahf
insb
inc
add
adc
add
dec
xadd
in
add
add
add
fsts
push
add
call
jnp
xchg
push
gs
aas
loopne
mov
cmp
and
add
repnz
add
pop
pop
push
add
dec
xchg
and
add
pop
inc
pop
fimull
sub
add
stos
mov
lods
jae
add
jnp
xchg
repnz
lret
inc
add
pop
mov
in
mov
daa
pop
ljmp
mov
pop
cmpsb
pop
ja
sbbb
cmc
rclb
add
cs
fisubl
add
stc
cwtl
lahf
jns
sbb
imul
mov
sbb
pop
repz
add
inc
add
in
adc
add
cmp
shr
dec
ds
pop
or
sbbb
mov
lret
pop
xor
add
ret
pop
inc
add
lret
sahf
iret
push
lds
imul
sub
push
add
lea
cli
mov
pop
lock
push
add
mov
add
cwtl
ret
add
add
leave
pop
in
and
push
fidivl
add
loope
add
add
add
ja
jns
dec
insl
adc
add
loopne
sbb
fstl
add
pop
adc
pop
dec
cs
or
scas
aaa
bound
add
mov
fs
adc
add
stc
rcrl
add
es
jle
test
fildll
cs
pusha
add
stc
outsb
call
sbbl
xchg
test
std
xor
add
pop
decl
mov
inc
pop
mov
add
rcrl
divb
add
xchg
test
push
add
ds
pop
xchg
add
mov
pop
imul
pop
fucomip
cmp
pop
sub
cwtl
mov
push
add
mov
mov
pop
insl
movnti
dec
ffreep
pop
mov
add
psubb
in
cmp
pop
xor
add
rcrb
add
clc
jle,pt
lahf
pop
xchg
nop
jl
bound
add
pop
push
jnp
sub
pop
sbbb
insl
call
inc
pop
mov
je
mov
add
xlat
aam
fdivrl
bound
add
jmp
outsl
push
xchg
inc
add
mov
cmp
mov
aas
sti
out
xchg
xor
add
push
add
lret
inc
add
jp
cltd
mov
popf
fistpl
sbbl
sbbl
mov
leave
loopne
mov
add
fmuls
pop
pop
cmc
dec
xor
add
js
push
or
jmp
dec
mov
in
jae
add
lods
and
pop
leave
jg
inc
pop
mov
add
push
push
pop
int3
sbb
cmp
push
add
leave
mov
push
pop
pop
idiv
leave
inc
add
test
rcl
mov
add
out
xor
add
add
xor
add
xchg
ret
pop
mov
sti
rolb
pop
push
lds
add
loopne
in
mov
cld
outsl
push
fldcw
add
stc
ljmp
stos
or
aaa
mov
or
and
add
call
xor
add
mov
add
xor
add
leave
sub
sub
pop
sbbb
add
aam
add
jae
add
repnz
or
pop
jo
add
imul
pop
pop
popf
sbb
add
test
add
pushf
mov
xchg
mov
cmp
add
push
adc
add
pop
cmp
add
cmp
push
dec
pop
pop
mov
imul
fadds
pop
enter
daa
pop
jle
and
add
outsb
imull
pop
add
add
jle
xchg
sbbl
add
add
push
dec
mov
aam
add
movsl
pop
rcrb
hlt
in
sbbl
jns
mov
int
fadds
add
pop
jae
add
fs
inc
add
mov
aas
and
add
add
dec
sub
in
nop
jo
add
aam
fmul
sbb
pop
inc
pop
cmp
xchg
adc
add
push
pop
dec
jl
jae
add
in
inc
add
addr16
mov
fadds
testl
pop
xchg
add
mov
pop
shll
add
mov
pop
sbbl
pop
iret
incb
add
ret
pop
fsts
add
cltd
cmp
sarl
pushf
adc
add
pop
or
outsb
ror
sub
cmp
lcall
add
jae
add
shrb
pop
lret
xchg
nop
fdiv
arpl
add
mov
cmp
pop
adc
add
pop
mulb
in
test
imul
lret
mov
sarl
add
mov
or
pop
and
cltd
aam
xchg
jne
lods
leave
in
pop
out
jle
add
mov
add
mov
pop
fmuls
pop
roll
ljmp
pop
xor
add
jle
mov
daa
pop
add
test
fistps
xor
add
add
mov
pop
cmp
pop
cli
jg
dec
cmp
sbb
sbbl
pop
pop
jns
pop
add
add
xchg
ja
cmpsb
pop
sahf
int
in
sbb
decl
add
outsl
jae
add
add
sub
mov
in
and
loop
add
add
test
adc
add
pop
movsb
pop
push
add
jp
xchg
push
add
lods
lods
je
fisttps
ret
pop
add
arpl
add
pop
outsb
dec
test
testl
pop
test
xor
add
pop
into
imul
mov
lahf
in
mov
add
scas
inc
pop
sub
mov
pop
jg
push
pop
pop
xlat
pop
lea
xor
add
add
and
add
cmp
iret
lods
outsb
imul
inc
add
repz
out
rep
push
fidivrs
cmp
clc
outsl
jo
add
fstpl
pop
lock
mov
pop
push
sbb
dec
mov
pop
rcrb
inc
add
stc
push
xchg
clc
jmp
sbb
lahf
inc
pop
dec
sbbl
add
add
in
mov
out
ja
sbbl
add
scas
mov
pop
pop
sub
add
imul
add
pop
sub
add
negb
jnp
cmp
das
jmp
mov
add
inc
pop
jae
add
xor
add
jl
add
sti
test
dec
jl
in
in
sbb
aam
add
xchg
lret
or
jb
add
jo
add
addr16
imull
ljmp
pusha
add
pusha
add
es
mov
add
mov
or
pop
xchg
cmc
ret
pop
aaa
adc
popa
add
or
dec
pop
inc
add
cmp
inc
pop
mov
aam
cmp
rorl
push
std
mov
into
mov
add
sub
and
pop
cmp
mov
adc
pop
jmp
pop
mov
add
add
add
rcrb
fmuls
pop
and
add
mov
fmulp
gs
jl
and
add
cmpsb
pop
adc
add
jmp
mov
bound
add
and
inc
pop
push
jno
add
pop
jge
pop
popa
add
ret
pop
push
and
add
pop
sbbb
add
dec
sbbl
pop
xor
int3
and
jae
add
ss
in
aad
fldl
pop
add
and
add
sbbb
push
lahf
fsts
je
repnz
push
pop
lret
cmpsb
pop
cmc
inc
pop
scas
stos
add
rcll
add
outsb
ret
pop
mov
or
mov
mov
pop
outsl
sbb
add
lea
add
jae
add
sahf
sbbl
add
sbb
inc
pop
mov
pop
mov
add
mov
sub
adc
add
fcoml
add
in
dec
push
outsl
mov
pop
rcrl
sbb
add
add
add
add
mov
rcrl
xlat
sub
ja
add
jecxz
jmp
clc
mov
pop
fists
add
dec
sbbl
add
adc
add
add
pop
pop
scas
les
in
sub
pop
pop
jbe
rcrb
pop
stc
jmp
ljmp
add
clc
xrstors
xchg
ret
pop
faddp
pop
mov
pop
pop
sbb
inc
add
add
add
xor
add
xor
add
add
insb
and
add
int3
rcrb
or
or
inc
add
sahf
call
les
sbbb
sbbl
clc
push
add
xchg
cs
push
jno
add
out
or
fwait
pop
dec
call
mov
stos
das
xor
add
mov
iret
push
add
jae
add
pop
gs
cmp
pop
ljmp
rorl
lds
add
xchg
push
add
out
loopne
sub
add
pop
xor
add
dec
sbb
xchg
clc
adc
add
add
add
jp
dec
lods
or
push
add
pop
dec
lret
nop
arpl
add
add
fstl
add
cmp
add
jp
and
cmpsl
pop
rorb
add
popa
add
ret
cs
add
cld
aad
stos
mov
add
or
fstpt
add
nop
adc
popl
push
pop
jae
add
add
add
add
pop
mov
pop
add
sbb
add
and
add
rcrb
fs
imul
add
dec
sbb
pop
cli
sbb
xchg
add
lods
std
mov
stos
dec
mov
adc
add
cmpsl
pop
inc
pop
test
pop
adc
paddsb
jbe
mov
out
jne
dec
gs
add
out
push
hlt
movsb
pop
std
lds
loope
inc
add
lods
cmp
jo
add
cld
add
add
fcmovnu
push
pop
arpl
add
push
dec
ds
pop
mov
xchg
mov
push
pop
out
push
dec
add
add
add
in
mov
inc
add
iret
mov
jo,pn
add
add
jp
pop
dec
js
outsb
xchg
sbb
push
adc
lods
enter
loope
mov
jecxz
mov
add
jg
pop
cmp
dec
js
inc
pop
xchg
pop
out
cmp
pop
mov
mov
rcrb
mov
pop
daa
pop
test
enter
imul
mov
cld
mov
sbb
xor
jo
add
inc
add
jle
cltd
jmp
nop
jns
and
add
add
mov
pop
jge
pop
and
xor
add
mov
mov
scas
add
add
outsb
fnstenv
add
gs
repz
add
add
ljmp
add
fwait
xchg
xor
add
pop
dec
jae
add
pop
adc
add
out
test
cmp
add
mov
add
mov
pop
jmp
int3
or
roll
sbbl
push
add
scas
aas
aas
add
add
mov
faddl
add
imul
int
pop
int
pop
sub
lcall
popf
insl
popa
add
push
xlat
xchg
ret
pop
xchg
arpl
add
mov
sbbb
mov
add
pop
aad
sbb
sub
in
iret
loope
sub
adc
pop
insl
adc
add
pop
imul
xchg
shlb
add
pop
nop
outsb
imul
ret
pop
into
xlat
out
leave
stc
mov
mov
add
stc
lods
jno
add
cmpsl
pop
mov
pop
shrl
movsb
pop
pop
and
add
jl
mov
ss
pop
imul
fdivl
dec
or
movsl
pop
and
add
call
jbe
loop
push
pop
sbbl
je
pop
mov
add
pop
mov
adc
add
popf
ljmp
pop
push
rcrb
cmpsb
pop
sbb
pop
ficoml
mov
mov
pop
bound
add
iret
mov
jl
popf
fs
clc
mov
sbb
icebp
mov
add
add
scas
cwtl
sub
popa
add
sarb
dec
sahf
pop
popa
add
pop
icebp
push
add
jns
jg
adc
pop
outsb
adc
add
or
jne
sub
add
fwait
inc
add
sbbb
mov
add
or
lret
add
mov
inc
pop
int
pop
popf
repnz
jl
scas
mov
add
pop
fidivl
mov
lahf
test
add
adc
add
sti
outsl
pop
push
mov
cld
inc
pop
push
bound
add
ficoml
mov
pusha
add
js
icebp
aas
fnstcw
mov
mov
fcoms
add
testl
add
pop
jns
add
xchg
jl
jae,pt
add
add
aaa
pop
jb
add
cmp
add
mov
pop
mov
pop
sbb
mov
pop
mov
sub
lods
jp
pop
sarl
add
mov
pop
ja
mov
pop
sub
enter
pop
ljmp
in
pushf
dec
dec
adc
add
sbbb
aad
ja
mov
cmp
pop
lret
hlt
imul
dec
aas
leave
pop
or
pop
mov
add
cmpsl
pop
jne
mov
rcrb
lcall
pop
sbbl
add
pop
mov
icebp
and
ficoml
add
cs
shl
adc
add
fstpl
sbb
add
add
fisubrs
add
sbb
xor
jne
test
clc
loopne,pn
pop
fldcw
in
shll
add
pop
fs
sbbl
add
add
pop
mov
out
xlat
cs
mov
cmp
pop
lahf
jl
mov
pop
xor
add
xchg
sub
add
scas
mov
pop
jae
add
bound
add
mov
sub
pop
popf
es
sahf
mov
add
pop
scas
push
add
mov
rol
pop
mov
push
stos
pop
jo
add
icebp
and
add
add
je
ficompl
pop
shll
sahf
outsb
loop
int
pop
out
fimuls
add
ljmp
cmp
lds
pop
pop
jnp
adc
add
cmc
pop
cs
add
cmp
pop
xlat
mov
jg
rcrl
mov
pop
push
add
xchg
pop
xchg
mov
xchg
add
cli
xor
add
pop
scas
std
xor
add
add
pop
sub
jnp
je
pop
shll
sbb
pop
add
add
and
dec
mov
mov
stos
popa
add
mov
add
sbb
scas
mov
adc
add
gs
sub
pop
push
and
add
add
sbbb
int3
mov
mov
pop
dec
rorb
push
jmp
pop
xchg
sbbb
mov
pop
add
mov
sub
add
cs
push
inc
pop
ret
ds
or
fidivs
xchg
pushf
fs
pop
pop
cwtl
bound
add
fisubl
pusha
add
cmc
mov
add
test
add
xchg
popf
out
int
push
stos
push
add
and
test
cli
xchg
jmp
int3
ficoms
adc
add
pop
push
aas
daa
pop
inc
add
xor
add
pop
adc
add
mov
sbbl
xchg
sbb
cmp
add
lds
jl
sbb
stc
inc
add
in
cld
lret
cmp
add
add
and
mov
add
add
cmpsl
pop
mov
pusha
add
cmp
add
add
mov
jnp
lret
and
add
add
pop
adc
add
mov
pop
sbb
pop
pop
sbbl
push
sbbl
pop
movsb
pop
add
add
pop
sbb
loopne
dec
add
add
and
add
enter
pop
inc
add
add
lea
mov
add
pop
mov
pop
mov
add
outsl
divb
pop
insb
sbbl
pop
sbb
ljmp
adc
add
pop
mov
sahf
mov
add
sub
pop
rcrb
jle
xchg
push
push
lea
add
aas
fs
inc
pop
mov
add
or
pop
aas
jbe
insb
leave
test
add
xchg
ret
pop
dec
jmp
daa
pop
mov
and
add
add
in
mov
cwtl
outsb
lret
cmpsl
pop
inc
pop
cmc
repz
jae
add
xchg
lds
or
mov
xor
add
fsubl
add
cmp
scas
inc
pop
rcrl
aam
jns
pop
pop
aaa
into
lea
push
mov
pop
sti
out
xor
lret
jno
add
jge
cli
add
add
scas
lret
jecxz
outsb
mov
inc
pop
lds
jbe
pop
mov
inc
add
fidivrl
fyl2xp1
jno
add
sbb
cmp
pop
out
cmp
pop
mull
mov
pusha
add
shr
in
test
pop
or
outsl
jae
add
xchg
cmp
scas
push
scas
loope
mov
add
add
lcall
inc
add
bound
add
adc
add
add
inc
add
jne
pop
pop
cmp
std
add
add
xchg
xchg
cmpsl
pop
sarb
add
pop
jl
movsl
pop
pusha
add
push
es
out
push
xchg
push
add
jg
sbb
xor
add
add
pop
mov
pop
lret
in
das
out
pop
das
repz
add
imul
lret
hlt
mov
add
aaa
ja
pop
add
add
add
add
stos
pop
sbbb
pusha
add
xor
add
fldenv
outsb
lock
out
or
adc
cli
cld
push
add
push
pop
dec
inc
pop
pop
xor
sbb
jecxz
addr16
lods
mov
add
addr16
bound
add
addr16
adc
add
add
test
mov
add
daa
pop
xchg
out
adc
push
mov
and
add
push
add
inc
add
and
add
insl
in
lahf
in
aaa
jge
mov
push
add
push
dec
pusha
add
out
xor
add
add
pop
adc
add
mov
add
es
aam
ffreep
pop
test
push
add
mov
fs
in
jne
pop
xor
add
add
mov
sahf
mov
pop
pop
in
test
sub
add
aam
push
repnz
pop
mov
add
imul
add
out
test
push
fs
pop
movsl
pop
push
sbbb
cmc
stos
dec
fld
pop
nop
mov
repnz
imul
add
add
fidivrs
loope
mov
add
push
insb
lods
ret
pop
fadds
pop
pop
sbb
pop
sahf
stos
inc
pop
xchg
popa
add
and
add
mov
fldl
add
add
rorl
insl
mov
lret
xor
add
out
lret
pop
mov
divl
pop
sbb
lret
sub
sbb
rcrb
mov
pop
xor
add
pop
dec
jae
add
test
cmp
pop
fs
mov
add
add
rcrl
xchg
xor
add
add
add
cmpsl
pop
pop
nop
aam
mov
pop
pop
mov
pop
or
icebp
scas
inc
add
sub
sub
add
arpl
add
add
mov
add
rorb
pop
xor
push
dec
outsl
push
add
adc
add
imul
sbbl
add
imul
push
add
mov
imul
adc
add
sbb
xchg
movsl
pop
push
mov
add
add
arpl
add
pop
mov
jecxz
push
dec
sbbb
add
rcrb
pop
test
test
bnd
int3
gs
test
inc
pop
out
in
push
mov
add
jg
add
popf
inc
add
loope
sbb
jae
add
pop
outsb
stos
mov
jmp
or
stos
push
and
add
pop
cmp
mov
adc
add
imul
pop
jge
mov
pop
mov
add
jle
pop
pop
and
add
and
add
pop
pop
pusha
add
sbbb
mov
or
add
pop
adc
add
push
push
lds
pop
iret
adc
add
dec
inc
add
mov
pop
sbbb
sbb
add
pop
jnp
mov
pop
cmp
ja
imul
dec
mov
add
pop
push
das
dec
cld
arpl
add
shl
mov
xchg
lahf
leave
inc
add
addr16
push
mov
pop
psrlw
add
pop
fs
les
mov
sarl
adc
add
cmovle
xchg
ds
mov
fwait
outsl
popa
add
stos
hlt
rcrb
add
mov
dec
lds
mov
mov
pop
add
pop
pop
jl
clc
and
add
stos
mov
add
add
inc
pop
mov
jge
push
pop
jb
add
add
or
pop
sbbl
add
mov
fs
loopne
das
mov
cmpsl
pop
test
jge
mov
add
add
xchg
xchg
xchg
ljmp
out
push
pop
jo
add
xor
push
fidivrs
mov
xor
pop
test
cmc
fnsave
add
sub
js
push
out
and
and
add
jl
pop
addr16
rcrb
pop
mov
notb
aad
add
dec
add
add
add
jno
add
sbb
pop
in
lods
lret
xchg
mov
mov
das
xchg
pop
push
enter
mov
dec
xchg
pusha
add
push
cmpsl
pop
jnp
pop
ret
pop
xchg
pop
sbbl
sbbl
test
pop
mov
add
in
test
or
dec
push
sbbl
fisttpll
fdivl
add
cmp
cmp
sub
pop
rcrl
lock
pop
scas
imulb
mov
cmp
imul
cld
push
add
dec
rcrb
pop
and
add
push
pop
in
jl
pop
cmp
add
add
rcrl
and
add
or
mov
jae
add
add
inc
pop
cmpsb
pop
jge
add
insl
dec
inc
add
sbbb
pop
mov
add
jg
add
add
add
scas
mov
inc
pop
out
mov
add
rcrl
lds
js
fidivrs
sbb
rcr
jne
add
push
jno
add
mov
test
lcall
add
sub
lret
mov
pop
fildl
push
push
add
out
mov
add
xchg
out
add
add
cwtl
rclb
add
mov
cmpsl
pop
loope
stc
jnp,pn
add
incb
loop
movsb
pop
pop
pusha
add
push
jnp
pop
sarb
sbb
adc
movsl
pop
inc
pop
loope
insl
loop
lret
or
dec
push
jg
pop
fadd
pop
fildll
sbbb
adc
add
sti
jnp
test
and
add
in
repz
les
pop
ss
mov
and
add
nopl
daa
pop
leave
fimuls
in
push
add
imul
add
pop
nop
aas
xor
add
pop
leave
fwait
add
loopne
jb
add
insl
push
sbb
pop
push
fcomps
jecxz
push
dec
pop
outsb
in
loopne
test
add
out
jae
add
loopne
sub
mov
add
in
dec
push
push
stc
mov
adc
inc
pop
rcrb
mov
pop
xor
pop
inc
add
or
mov
mov
imul
dec
mov
pop
mov
xlat
mov
pop
repz
pop
out
test
pop
js
add
movsb
pop
push
add
imul
add
pop
xchg
push
incl
add
push
pop
pop
push
movsl
pop
iret
fcompl
mov
pop
les
das
ror
scas
cld
sbbb
add
leave
or
pop
and
cmp
cmc
fucomip
into
adc
lods
ja
repz
ret
add
dec
sbbb
add
pop
sub
dec
test
add
add
dec
pop
cltd
adc
add
inc
pop
inc
pop
in
jmp
push
add
addr16
cmp
add
out
xchg
outsb
jg
pop
add
pop
lods
pop
and
add
add
fdivrl
adc
mov
add
pop
inc
add
repz
pop
loopne
mov
pop
js
add
jo
add
dec
in
jae
add
add
into
inc
pop
jb
add
xor
add
push
mov
pop
push
es
in
xchg
add
cmp
add
mov
inc
add
aam
aam
pushf
push
add
add
mov
movsl
pop
es
add
add
xor
add
lcall
stos
fdivr
push
add
lods
in
addr16
popa
add
sub
add
xchg
and
add
add
loop
sbbb
add
popa
add
pop
nop
sbb
shrl
outsb
mov
add
push
pop
adc
add
pop
fidivl
xchg
xchg
mov
add
arpl
add
imul
mov
add
pusha
add
dec
lret
xchg
pop
push
add
pushf
adc
scas
inc
add
adc
xchg
xor
add
mov
cmp
add
pop
xchg
pop
sbbb
pop
push
add
sub
add
bound
add
ss
mov
pop
cmp
pop
enter
pop
inc
add
pop
mov
or
nop
das
pop
loop
fistpll
testl
cmp
imul
jmp
add
jns
pop
pop
xor
add
pop
xor
js
push
add
mov
pop
iret
xchg
push
pop
xchg
jp
add
cmp
pop
fstpt
sub
inc
add
mov
add
pop
mov
or
repz
add
inc
pop
fucomi
sub
push
pushf
xor
add
cmpsb
pop
cld
rcrb
or
pop
daa
pop
dec
sub
mov
call
sbb
and
add
aam
xchg
call
addr16
cmp
pop
pop
push
adc
add
daa
pop
jle
call
add
dec
pop
xchg
sub
sti
pop
cmpsl
pop
gs
sbb
sahf
pop
pop
mov
add
outsl
clc
xor
add
add
inc
add
gs
sub
fs
sbbb
add
pop
test
add
add
xchg
mov
cmpsl
pop
xchg
jno
add
sbb
ljmp
fdivs
add
cmp
negl
push
xchg
sti
cmp
cltd
stos
cwtl
and
add
rolb
add
sbbb
add
xchg
pop
loop
pushf
add
add
push
add
push
lcall
mov
pop
mov
bound
add
lcall
mov
cmp
dec
or
pop
dec
mov
push
imul
mov
add
enter
rolb
add
cmp
notb
add
add
popf
pusha
add
sbbb
scas
leave
lock
add
in
mov
add
roll
add
inc
add
imul
lret
xchg
mov
pop
hlt
adc
add
add
add
es
or
insl
daa
pop
pop
mov
popa
add
out
cmpsl
pop
xor
add
xchg
lret
inc
add
enter
cmc
add
add
cmp
gs
dec
mov
sbbl
add
add
adc
add
jb
add
mov
push
or
test
adc
add
enter
adc
add
push
jno
add
mov
in
fsubrp
mov
ja
jo
add
pop
mov
jge
add
push
dec
push
repnz
rcrl
pop
test
pop
stos
inc
pop
cld
into
rcrl
js
pop
pop
mov
mov
outsb
les
xlat
lcall
lds
push
push
add
incb
or
push
ret
pop
repz
pop
push
dec
dec
pop
and
add
add
aam
pop
inc
add
mov
lret
push
add
iret
jo
add
xor
add
add
dec
adc
add
add
or
adc
xor
add
sub
ja
insl
es
xor
sub
mov
ds
shr
repz
sbb
jno
add
cmp
and
jle
inc
add
in
mov
pop
adc
add
push
pop
push
rorb
dec
out
or
pop
jecxz
jle
jnp
fnstenv
add
add
mov
add
xor
add
mov
mov
cmpsb
pop
lcall
add
add
add
incb
imul
pop
pop
push
add
adc
add
jge
pop
add
add
mov
pop
ljmp
mov
dec
xchg
add
add
pop
cmc
mov
jmp
hlt
xor
add
xchg
add
add
sbb
mov
fdivl
enter
ljmp
inc
add
in
sbb
in
mov
add
sbb
cmc
out
movsl
pop
bnd
add
add
xor
add
add
add
dec
shll
add
les
add
sbb
pop
or
je
pop
cmp
pop
adc
pop
sbb
insl
push
pop
pop
cmp
lods
xor
add
xor
add
cli
insl
in
outsl
cmp
lret
loop
xchg
jle
mov
aam
xor
add
add
add
aas
cmpsl
pop
jns
add
push
sbbb
fistps
pop
jb
add
jge
pop
stos
push
push
add
or
add
std
sti
sbbl
pop
xor
leave
js
loopne
and
int3
outsb
or
jns
add
push
push
cmpsb
pop
jnp
pop
pmuludq
pop
mov
push
fs
mov
add
add
into
int3
cmpsb
pop
outsl
adc
outsb
pop
jb
add
push
mov
pop
ljmp
insl
ret
sub
cmp
add
sti
xor
add
add
xchg
push
add
add
add
add
lea
inc
pop
add
add
add
and
add
add
out
xchg
pop
or
add
add
dec
aas
test
int
cli
push
add
push
sbbb
pop
pop
sbb
sub
pop
lret
outsb
jnp
pop
es
jp
inc
add
dec
push
fcoml
add
sti
pop
mov
pop
lea
or
xchg
pop
sbb
pop
jge
add
int
add
arpl
add
pop
aam
xlat
add
mov
les
mov
out
rorl
xor
add
outsl
repnz
pop
pop
outsl
push
cmpsl
pop
fmul
ret
and
pop
fldl
add
mov
das
pop
mov
pop
pop
pop
dec
sub
dec
into
cld
ss
pop
lret
mov
pop
pop
aaa
mov
add
mov
and
jg
pop
adc
add
add
add
add
pop
popf
sub
xlat
test
add
add
test
mov
cltd
pop
adc
add
cmp
insl
js
mov
pusha
add
in
adc
mov
add
addr16
mov
pop
lds
out
xchg
roll
add
cmp
fldt
pop
shlb
add
and
add
jp
mov
and
add
pusha
add
lock
sbb
adc
add
mov
pop
sbb
pop
push
pop
mov
mov
xchg
sub
jb
add
inc
add
mov
pop
arpl
add
pop
cmp
cmpsl
pop
out
and
add
out
int3
nop
sbb
jp
sbbl
add
pop
push
add
fcoml
dec
cmpsb
pop
sbbb
add
ret
loopne
jg
fiadds
add
inc
add
xchg
jo
add
sub
add
jge
pop
lcall
pushf
push
mov
pop
pop
iret
dec
je
pop
adc
insb
stos
xor
add
stc
fwait
dec
sti
mov
mov
mov
aas
jge
inc
add
mov
sbb
mov
pop
add
add
xor
sbb
lods
int3
pop
pop
push
add
jl
dec
loope
aas
loop
and
fdivrl
sub
scas
pop
mov
add
repnz
xchg
pop
jg
fwait
pushf
cmp
or
pop
cmp
je
stc
fldenv
inc
pop
xor
add
add
add
sbb
movsb
pop
rcrl
cmc
sarb
or
pop
push
shlb
and
add
int3
lea
pop
add
das
push
sbb
leave
rcrb
add
pop
sub
test
jne
sub
pop
js
push
das
cmc
pop
les
xor
pop
lcall
leave
and
add
add
dec
pop
int
ss
jle
icebp
ret
pop
pushf
les
pop
loop
ljmp
adc
add
add
pop
fld
pop
mov
sbb
jne
add
add
test
fs
ror
add
add
push
xchg
insl
lds
pop
nop
mov
bound
add
add
shll
add
push
dec
xchg
xchg
mov
add
push
dec
cmp
jo
add
add
cld
int
mov
add
jo
add
cmp
mov
and
add
enter
pop
and
add
cmp
outsl
push
xor
add
or
cmpsl
pop
pop
mov
lcall
add
leave
sbb
add
add
add
pop
xor
je
test
push
add
cltd
sub
or
dec
fsubl
add
pop
or
or
add
add
pop
mov
lahf
dec
lods
push
add
mov
rcrl
pop
mov
jge
rorb
sbb
scas
pop
jmp
adc
add
dec
ds
call
ficomps
add
add
jnp
pop
cmp
arpl
add
add
adc
add
mov
pop
jmp
iret
aam
mov
jbe
mov
add
pop
jno
add
sarb
pop
pop
call
and
or
add
cltd
inc
add
into
mov
pop
gs
cmc
test
enter
add
movsl
pop
jne
push
add
repnz
aam
inc
pop
jmp
add
or
push
adc
add
sub
inc
pop
sbb
dec
rorl
popa
add
cld
add
add
stos
push
mov
add
add
push
add
jno
add
add
push
sbb
loopne
lcall
lock
mov
add
push
push
pop
fadds
pop
dec
sbbl
jge
cmp
pop
cmp
inc
pop
aas
push
mov
adc
add
pop
js
pop
lods
and
int
xchg
push
add
cs
inc
add
pop
rcrl
pop
jbe
ret
pop
pop
mov
cwtl
jb
add
add
add
pop
loopne
not
mov
call
add
mov
das
shrb
add
and
sub
mov
das
sbb
cwtl
nop
in
lret
xchg
push
std
sti
pop
and
jbe
sbbb
lock
arpl
add
pop
sti
fldl
push
pop
or
mov
inc
add
loope
pusha
add
aad
sub
add
jbe
pop
pop
pop
and
lock
push
call
add
or
add
add
scas
sbbb
in
sbbl
add
int3
lahf
ficompl
scas
adc
add
cltd
jecxz
dec
ret
pop
push
add
or
pop
and
jp
add
lret
mov
add
adc
repz
add
add
jp
cmc
jae
add
test
stos
sub
pop
or
sub
mov
push
xchg
add
and
add
pop
and
add
dec
push
cmp
pop
movsl
pop
pop
push
push
add
add
mov
lods
adc
add
sarb
add
add
pop
int
jp
dec
sub
pop
and
add
pop
repnz
adc
ret
pop
arpl
add
out
xor
add
rcrb
mov
les
pop
hlt
or
sbb
jmp
inc
pop
es
je
pop
jne
add
lock
or
xchg
outsb
fistl
xor
add
add
mov
cmp
inc
add
pop
pop
in
cld
jnp
cmpsl
pop
dec
jno
add
mov
pop
add
add
mov
ret
pop
or
arpl
add
mov
imul
jl
pop
pop
pop
pop
in
push
or
add
sub
iret
sbb
jmp
add
add
pop
pop
pop
bound
add
pop
jmp
pop
mov
fisubl
scas
cmp
add
xchg
pop
and
add
add
mov
jg
in
lock
add
pop
loope
add
add
rcrl
pop
dec
pop
iret
rcrl
jae
add
mov
mov
add
jnp
out
and
xor
cmp
sbb
or
pop
mov
pop
sbb
and
add
pop
call
xlat
movsl
pop
movsl
pop
xchg
jo
add
inc
pop
loop
daa
pop
xchg
popa
add
push
add
jmp
xchg
jbe
sbbl
xchg
xor
pop
pop
push
cmc
lcall
jmp
iret
fnstsw
pop
mov
dec
pop
ljmp
add
add
cld
les
push
add
push
add
add
add
jb
add
pop
adc
pop
mov
add
push
add
iret
ficoml
add
and
scas
or
cli
sbbb
fisttps
add
popf
jno
add
cmp
pushf
jae
add
pop
xor
ss
int3
adc
push
std
jg
xchg
aam
xchg
pop
mov
movsl
pop
rcrl
adc
add
pop
pop
add
add
in
jp
in
outsb
dec
and
add
pop
mov
sub
inc
pop
dec
jno
add
add
fs
icebp
insl
xor
add
dec
std
jae
add
pop
mov
pop
sub
xor
add
pop
pop
pop
call
add
imul
jmp
mov
add
cmp
pop
dec
bound
add
lahf
fiaddl
int
pop
cld
add
add
mov
jge
pop
imul
add
push
insb
dec
jb
add
add
loop
sbbb
mov
mov
add
add
bound
add
popf
push
lahf
inc
pop
push
fildll
notb
add
or
add
loopne
or
lret
adc
add
add
ds
rorl
pop
insl
out
xor
add
add
sbb
pop
and
add
add
inc
pop
lds
rorl
jo
add
adc
add
out
ffree
pop
sbb
xchg
pop
std
pop
xchg
jnp
sbbl
mov
add
loope
mov
sub
test
add
jg
das
cmp
or
add
or
and
add
add
xchg
push
xchg
lret
daa
pop
sub
pop
mov
enter
mov
dec
sbb
pop
mov
pop
pop
xchg
outsb
iret
pop
mov
dec
repnz
imul
aam
add
lcall
or
or
add
cmpsl
pop
and
add
add
lea
faddl
mov
add
sub
pop
mov
sbbl
nop
sahf
mov
add
pop
mov
add
add
add
or
add
pop
bound
add
or
or
mov
push
dec
insl
inc
add
rcr
jl
fldl
and
add
add
shrb
add
add
pop
lea
push
fsts
inc
add
inc
add
dec
mov
pop
dec
outsl
mov
add
int
sbb
pop
arpl
add
pop
fdivrs
test
mov
lea
xor
cmp
add
adc
add
in
and
push
out
gs
mov
jnp
fdivs
add
sahf
arpl
add
add
pop
incl
xor
add
lods
lock
pop
sbb
add
pop
cs
add
pop
pop
xchg
add
mov
add
rclb
add
aam
xor
add
rcrl
mov
or
pop
cmpsl
pop
inc
add
adc
add
add
pop
insb
and
add
pop
sub
inc
add
outsl
sub
popa
add
jg
push
pop
mov
add
push
in
add
out
sub
inc
add
lods
dec
in
sbbl
inc
add
jmp
call
fidivrs
pop
scas
stc
add
and
add
add
add
out
dec
inc
pop
std
out
rcrl
mov
add
mov
add
loopne
lds
xchg
sbb
push
call
xchg
and
add
test
enter
loope
sbb
adc
add
and
add
add
popf
ja
and
add
adc
add
sub
add
push
add
add
add
pushf
or
pop
fwait
add
add
pop
and
add
add
imul
mov
jp
addr16
jmp
mov
add
add
pop
fdiv
rcll
add
pop
jmp
inc
pop
inc
pop
push
add
ljmp
and
add
mov
lods
cmc
ljmp
pop
jp
pop
enter
es
jp
ljmp
inc
add
hlt
jae
add
mov
out
mov
inc
pop
xlat
adc
jecxz
inc
add
in
fadds
aaa
hlt
lret
cli
jg
insb
dec
push
add
out
nopl
inc
add
outsl
popa
add
mov
cmpsb
pop
pop
jle
pop
mov
cmp
sbb
lcall
cmp
mov
pop
cmp
pop
xor
add
inc
add
stos
inc
pop
sbbb
xor
add
add
mov
dec
push
cs
ret
mov
mov
pop
stos
dec
xchg
push
imul
pop
pop
and
add
add
sub
push
add
rcrb
pcmpgtd
pop
sahf
sahf
scas
xor
add
int
les
loop
sbbl
lret
rcrb
add
lcall
xchg
out
push
lahf
xchg
xor
add
push
inc
add
inc
add
sti
in
adc
pop
aam
cmp
add
in
or
rcrb
cmp
add
aas
jp
mov
sbb
add
jno
add
mov
pop
jge
cwtl
inc
pop
adc
add
lods
mov
add
add
pop
push
pop
xchg
movsl
pop
mov
pop
cmpsb
pop
bswap
aaa
jge
addr16
xor
add
xchg
pop
pushf
push
in
add
add
add
add
pop
es
aad
push
add
dec
ss
test
pop
fwait
xchg
inc
add
xchg
add
out
inc
add
and
add
xlat
cmp
xchg
in
stos
jecxz
and
pop
dec
cltd
xchg
sbb
cmp
or
cvtps2pi
les
dec
ljmp
loope
add
add
stc
shrl
pop
add
add
add
add
addr16
les
add
mov
cs
dec
adc
add
add
dec
cmp
enter
ja
loope
inc
pop
sbb
pop
mov
and
add
sbbb
pop
out
enter
xchg
ljmp
add
dec
rcrb
dec
sub
add
repnz
push
mov
pop
fimuls
add
pop
stos
adc
pop
sbb
movsl
pop
daa
pop
cmpsl
pop
pop
pop
and
add
add
add
fcompl
xchg
sub
idivl
sbbl
add
add
add
pop
outsl
xor
add
add
add
add
pop
pop
pop
xchg
nop
sbbb
imul
sub
pop
adc
add
pop
push
push
push
mov
pop
jo
add
pop
popl
add
sti
pop
or
test
mov
jno
add
xchg
ss
daa
pop
stc
inc
add
out
jecxz
and
add
pop
and
add
int3
ret
pop
pop
jb
add
pop
sbbb
add
pop
lea
and
add
pop
out
jae
add
arpl
add
mov
pop
inc
pop
push
add
fsubrl
jge
sbb
mov
lock
shll
flds
add
push
enter
add
and
add
pop
adc
add
pop
lods
test
fucomi
fistps
cmp
rep
cmp
pop
fnstsw
add
pop
push
inc
pop
sbb
mov
loop
mov
fistl
add
dec
in
repnz
rcrl
add
add
adc
fcomi
lahf
inc
add
xchg
add
push
pop
into
movsb
pop
ljmp
push
add
cmp
lret
pop
test
pop
iret
addr16
loop
jno
add
jle
pop
add
inc
add
push
scas
pop
nop
insb
jg
stos
les
cmp
add
fwait
cs
pop
xor
add
add
jo
add
repnz
aas
out
add
add
repnz
add
shlb
fcompl
pop
xchg
xchg
jo
add
stc
adc
add
mov
xor
add
pop
sbb
mov
add
fcmovu
mov
pop
pop
sahf
xchg
xchg
mov
ret
pop
imul
add
cltd
pop
hlt
mov
pop
cld
out
clc
sub
add
das
or
push
pop
movsb
pop
imul
pop
arpl
add
fistl
pop
enter
add
scas
icebp
outsl
dec
adc
add
add
pcmpgtw
push
add
je
lock
bound
add
pop
pop
push
out
push
xchg
dec
lea
mov
into
mov
pop
cmc
mov
mov
pop
jmp
dec
push
add
shl
pop
xchg
shlb
sti
mov
pop
stos
lret
xor
mov
or
jbe
pop
adc
mov
std
push
push
add
xchg
push
push
loope
lea
add
xchg
pop
pusha
add
mov
fmull
shrb
fmul
push
add
rcll
add
inc
pop
push
pop
outsl
inc
pop
cmp
imul
cmpsb
pop
push
mov
add
push
mov
mov
xchg
and
add
pop
fmul
sub
add
cmp
in
addr16
sbbl
add
push
add
hlt
xor
add
popf
sub
pop
and
pop
pusha
add
push
lea
add
dec
sbbl
in
sub
inc
pop
pop
pop
cmpsl
pop
test
repnz
push
pop
pop
push
add
lods
add
add
add
loopne
lds
add
pop
mov
cwtl
jo
add
add
pop
test
out
mov
push
add
push
add
xor
pop
push
pop
ja
pop
rsm
adc
add
loope
lock
cmp
pusha
add
jle
pop
cmpsb
pop
push
ret
pop
jb
add
pop
push
add
aaa
jmp
cmp
push
xchg
aaa
cmp
into
or
sbbb
pop
imul
add
inc
pop
pushf
jl
fwait
mov
add
hlt
fildl
mov
sbb
aaa
cmp
or
sbbl
or
rcr
lret
jmp
aam
add
add
mov
rol
pop
mov
jno
add
pop
arpl
add
pop
ljmp
out
dec
pop
movsl
pop
jns
cmp
xor
add
imul
dec
jbe
cmp
xchg
mov
push
adc
add
xchg
mov
sub
jmp
cmp
popa
add
jne
jmp
fsts
in
inc
pop
jl
filds
in
popa
add
mov
add
test
outsl
sbb
sbbb
sbb
cmp
add
add
pushf
xchg
scas
push
push
add
mov
test
jo
add
jp
icebp
imul
adc
add
pop
sbb
pop
fcompl
add
pop
xlat
or
je
jp
rclb
add
cmpsl
pop
lret
mov
mov
pop
xlat
add
add
pop
pop
in
in
pop
shrl
fcmovu
add
inc
add
push
add
pop
jmp
stc
dec
aas
pusha
add
and
and
add
jnp
lcall
xchg
cmp
pop
xchg
iret
inc
pop
pop
sub
pop
push
out
or
insb
ret
jge
test
lods
jecxz
je
daa
pop
mov
daa
pop
mov
decb
nop
daa
pop
pop
repz
rcl
inc
pop
add
add
repz
add
pop
adc
add
pop
adc
add
loop
call
add
xchg
pop
pop
std
es
outsb
inc
pop
and
sub
fnstcw
rorl
xchg
mov
fisubl
fdivs
shl
fcompl
pop
out
pop
lea
sbbl
add
add
jbe
clc
bnd
pop
jbe
pop
pop
mov
add
add
or
add
dec
inc
add
inc
pop
int3
xchg
add
mov
dec
pusha
add
push
dec
ljmp
test
pop
cmp
insb
sbbb
add
xor
pop
dec
xor
dec
sub
add
add
pop
and
add
mov
movsl
pop
mov
jg
inc
add
arpl
add
add
add
imul
jge
lret
bound
add
pop
sub
and
add
dec
call
mov
or
add
push
pop
inc
pop
les
pop
pop
aam
lods
inc
pop
adc
add
jg
cltd
nop
adc
push
add
bound
add
pop
cmc
push
add
dec
push
pop
jecxz
rorb
push
adc
add
sbb
pop
cmc
xor
add
call
mov
div
loopne
pushf
and
add
dec
mov
sub
xchg
repz
int
pop
test
popa
add
adc
add
pop
xchg
repnz
scas
loopne
les
test
pop
sbb
add
sbb
push
ds
out
ljmp
dec
mov
cld
sbbb
push
xchg
jae
add
repnz
add
mov
jl
pop
mov
pop
sbbb
jne
add
mov
sbb
add
mov
add
pop
jns
pop
or
add
add
ss
nop
jmp
hlt
nop
add
add
add
xor
gs
jb
add
add
out
add
add
pop
adc
add
add
ss
aas
rorl
add
pop
sbb
js
fidivs
add
cmp
jecxz
push
push
fstpl
add
inc
pop
add
test
mov
sub
leave
or
adc
add
pop
sbbb
add
ljmp
pop
iret
sub
dec
adc
add
add
add
inc
add
cmp
rcrl
xchg
lret
out
ljmp
xchg
inc
add
loop
mov
test
sub
jle
sbb
inc
add
lds
leave
mov
fnstcw
jno
add
push
add
xchg
mov
dec
xchg
call
pop
pop
push
add
imul
pop
hlt
xchg
fldt
cwtl
popf
movsl
pop
mov
add
jns
cmp
add
xchg
popa
add
add
add
cmc
adc
add
out
jne
adc
add
in
pop
push
add
mov
lock
and
add
pop
jp
jae
add
lcall
rcll
add
addr16
shll
add
jg
add
mov
jmp
std
mov
pop
mov
imul
inc
pop
divb
pop
mov
rcrb
pop
push
outsb
push
add
out
jnp
add
xor
add
pop
cmpsl
pop
pop
leave
cltd
repz
add
fwait
mov
cld
mov
cmp
add
pop
test
pop
je
pop
flds
cwtl
mov
sub
adc
add
hlt
lahf
lret
jns
jo
add
mov
jno
add
pop
cmp
pop
loopne
push
dec
ljmp
iret
fisubrl
or
clc
jl
sub
cli
and
add
pop
ljmp
xor
call
pop
mov
daa
pop
shrb
cmpsb
pop
adc
add
add
sbb
mov
add
in
jmp
pop
mov
add
es
sub
rcrb
add
fs
xsave
add
bound
add
sbbb
add
into
movsl
pop
dec
clc
cmp
xchg
es
sbbl
and
add
add
add
xlat
mov
dec
push
add
sahf
fwait
adc
add
cmp
pop
les
addr16
out
ret
jo
add
pop
lods
stos
ficoml
std
mov
lock
call
jl
test
cmp
aas
push
add
add
add
add
add
int3
cmpsl
pop
outsb
fldcw
push
cmpsl
pop
popa
add
ljmp
push
add
mov
mov
add
scas
shr
mov
xor
add
xor
clc
lahf
fst
mov
jg
pop
xchg
sbb
add
pop
lcall
mov
add
dec
stos
daa
pop
add
mov
scas
push
push
ds
adc
push
add
in
mov
push
add
pop
jl
mov
clc
fisttpl
popa
add
imul
pop
or
daa
pop
sub
pop
es
pop
pop
adc
add
roll
pop
in
adc
add
hlt
repnz
bnd
add
push
sbb
pop
xor
enter
ret
pop
pop
movsb
pop
clc
fldcw
fstps
pop
aad
mov
test
add
adc
add
into
inc
add
mov
mov
mov
dec
fiadds
insb
mov
mov
pop
pop
push
add
pop
pop
shrb
jnp
add
lahf
out
out
sub
fsubr
sub
add
cmpsl
pop
outsl
mov
rcrl
cmpsl
pop
dec
jle
add
mov
mov
pushf
fisttpll
stos
std
mov
imul
lock
add
les
repnz
pop
xor
add
sti
pop
pop
iret
mov
dec
test
pop
cmp
inc
add
ja
call
aas
inc
add
inc
add
inc
add
cmp
add
sub
addr16
pop
xor
lcall
dec
cs
push
add
fildll
pop
inc
pop
jmp
pop
leave
jns
cld
inc
add
lret
push
add
sbb
idiv
es
cmpsb
pop
in
test
stos
jmp
adc
daa
pop
aas
mov
popf
sbbl
mov
mov
int3
xchg
out
or
int
mov
xchg
mov
pop
cwtl
stos
stos
fs
cli
xchg
sbbb
pop
xor
add
shl
pop
scas
xor
add
add
pop
push
sub
sbbb
jnp
pop
adc
cltd
mov
add
cmp
pop
rcl
jle
add
add
sub
jns
pop
mov
push
mov
icebp
jp
es
arpl
add
push
add
mov
jb
add
es
mov
cmc
push
add
fwait
popf
add
sub
pop
xchg
mov
dec
inc
add
test
sub
add
movsb
pop
add
add
pop
push
push
stos
mov
pop
mov
add
push
adc
add
sbbb
push
loop
pop
mull
pop
dec
inc
pop
mov
jno
add
cs
push
add
cwtl
test
pop
push
cmp
add
pop
push
pop
nop
pushf
ret
pop
out
rorl
outsb
dec
es
jmp
jne
sbb
dec
push
inc
pop
jle
sbb
push
add
xchg
cs
lds
pop
xor
add
pop
adc
add
rorl
mov
pop
or
jbe
add
cmc
mov
and
add
mov
dec
add
add
add
pop
add
add
iret
loopne
mov
pop
sub
jae
add
pop
dec
jns
pop
sbbl
jne
add
loope
mov
push
lock
jg
jo
add
pop
repnz
add
pop
loopne
xor
add
or
xchg
pop
cwtl
sbbl
icebp
ljmp
das
push
add
sbb
hlt
and
add
mov
add
fildl
add
add
pushf
dec
cmp
and
add
lcall
pop
add
add
dec
add
shlb
stos
mov
pop
in
sbb
shll
pop
sbb
add
add
and
add
sbbb
push
add
adc
add
mov
clc
sbb
pop
lahf
loope
lods
bound
add
add
les
cmp
pop
sbb
inc
pop
sbb
dec
les
lret
dec
rcrl
test
pop
rcrb
mov
addr16
out
jnp
das
mov
gs
aas
into
pop
pop
aam
sub
push
pop
fwait
sahf
xor
add
add
pop
into
sbb
push
add
adc
add
cmpsb
pop
ja
pop
pop
adc
js
pop
push
cmpsb
pop
pop
cmp
adc
add
sbbb
sub
rcrb
jo
add
test
pop
sahf
mov
adc
add
add
add
adc
add
push
stos
int3
xchg
call
add
addr16
mov
or
lds
add
mov
repnz
out
jns
je
add
xor
add
push
and
lock
add
mov
add
add
scas
sti
cmp
loop
xchg
xor
add
sub
add
add
mov
cltd
xchg
xchg
pop
jns
cwtl
in
rcrb
lds
js
pop
sbbb
pop
sbb
mov
and
add
mov
add
add
repz
mov
xor
add
jmp
pop
push
or
dec
mov
pop
lods
es
mov
push
pop
lret
push
mov
rcrb
lret
xchg
jge
das
rcrb
pop
mov
sbbl
cli
leave
pop
insb
jg
push
pop
pop
pop
inc
add
adc
imul
stc
shll
add
add
and
add
pop
pop
and
add
lea
pop
cmp
sbb
icebp
dec
insb
bnd
or
add
call
dec
test
add
out
push
ss
rclb
pop
test
xchg
addr16
xor
add
pop
aaa
inc
pop
and
add
pop
inc
add
jno
add
add
mov
js
add
lds
pop
mov
mov
inc
pop
lock
adc
pop
leave
mov
push
add
lds
cmp
les
or
sbb
add
inc
add
inc
add
and
loop
arpl
add
adc
add
fsub
pop
in
cli
lcall
pop
fists
decl
pop
pop
jge
jmp
add
mov
or
add
rolb
sub
pop
adc
push
mov
add
pushf
lcall
out
xchg
mov
pop
testb
add
lods
int
dec
arpl
add
pop
pop
loop
push
test
jg
xlat
cmpsb
pop
and
add
add
out
mov
adc
add
lock
pop
xchg
test
pop
lahf
insb
add
add
imul
cmp
mov
fst
js
add
and
add
fdivrp
filds
outsb
movsl
pop
rolb
hlt
pop
inc
pop
pop
aaa
fwait
cwtl
lcall
xchg
fcoms
jbe
pop
sbbl
inc
add
inc
add
mov
pop
pop
adc
add
add
push
pop
push
add
cmp
pusha
add
in
dec
jbe
jmp
adc
add
js
pop
popf
mov
xchg
and
or
es
inc
add
inc
pop
push
jbe
das
negl
and
sbb
std
dec
push
pop
pop
pop
clc
push
sbb
mov
pop
cmp
add
and
add
sbbl
push
cmc
xor
add
pop
in
dec
adc
pushl
pop
ja
push
push
pop
roll
mov
aam
add
mov
sbb
mov
pop
lods
aaa
loopne
or
or
add
jmp
stos
fstp
cmpsl
pop
dec
add
std
jmp
hlt
push
add
mov
bound
add
add
pop
jnp
mov
out
and
mov
insb
mov
add
pop
inc
add
fistpll
mov
pop
add
add
add
pop
mov
sub
pop
dec
test
inc
pop
fimuls
add
pop
cmp
xchg
sbb
pop
xchg
cltd
les
add
mov
adc
add
add
mov
xchg
call
lods
iret
xor
add
decb
add
mov
lret
cwtl
cmpsb
pop
xchg
or
sub
jnp
mov
add
inc
pop
push
pop
and
add
add
pop
sbb
xlat
iret
les
adc
inc
add
inc
pop
ss
pop
cmp
xor
add
pop
and
cmp
sbb
or
add
adc
pop
incl
shrl
add
pop
enter
and
add
cmp
pop
mov
popa
add
dec
dec
mov
adc
add
shr
inc
add
jnp
add
push
add
lahf
ja
or
bound
add
mov
xor
add
xchg
pop
push
std
mov
pop
mov
dec
aam
pop
pop
xor
add
pop
out
add
bound
add
rcrl
add
add
jecxz
pop
icebp
sbb
pop
lds
fcmovnbe
xchg
sbb
sbb
movsl
pop
dec
sbbb
pop
pop
mov
pushf
pop
pop
adc
add
pop
xchg
push
add
sub
shlb
loope
jbe
xchg
push
fisttps
sub
push
add
pop
pop
dec
jb
add
pop
dec
cmp
add
pop
push
push
gs
mov
dec
xchg
stc
pop
pop
sbbb
insb
add
popf
pop
xchg
arpl
add
push
mov
out
inc
pop
movsl
pop
sub
inc
add
in
sbb
pop
xchg
aam
scas
xor
add
inc
add
push
pop
adc
add
idiv
insl
pop
mov
ret
pop
push
stos
jmp
add
xor
add
pop
call
sub
mov
nop
dec
cmp
cli
pop
or
add
add
add
or
pop
popf
mov
sar
mov
mov
add
imul
mov
pop
adc
add
add
jg
add
hlt
xchg
cmp
icebp
add
add
pop
ret
nop
fstpt
add
fistpll
mov
ds
pop
fisubs
dec
xchg
adc
add
xor
add
rolb
add
int3
pop
mov
pop
or
pop
ds
imul
pop
mov
lret
ljmp
add
add
or
adc
mov
pop
or
cmp
test
pop
or
add
imul
lods
xchg
mov
dec
sbb
pop
imulb
pop
dec
dec
lsl
add
push
push
add
jp
pop
push
pop
outsb
jnp
loop
pop
mov
pop
stc
popa
add
jmp
mov
fsubrs
or
in
and
add
pop
add
add
cmp
cmpsl
pop
jg
inc
pop
in
adc
add
or
jae
add
bound
add
jmp
jmp
or
add
add
add
add
sub
add
call
mov
add
aad
pop
jmp
cli
dec
lock
pop
inc
pop
in
mov
in
add
pop
mov
add
add
leave
add
add
dec
sbbb
inc
add
lock
add
pop
jg
pop
imul
sbbl
popf
and
pop
or
pop
cmp
add
lds
loop
mov
int
pop
out
adc
add
pop
cmp
hlt
mov
clc
jne
mov
and
add
jo
add
add
add
pop
pop
inc
add
loopne
dec
lret
xchg
adc
add
pop
adc
add
les
add
test
xchg
divb
add
add
or
lods
mov
add
add
mov
pop
cltd
lock
aad
add
add
push
lods
lods
out
dec
nop
pushf
jb
add
mov
xor
add
repz
int3
cwtl
movsb
pop
cmp
add
inc
add
xchg
sub
dec
inc
pop
std
xchg
jmp
pop
mov
pushf
popl
fwait
inc
add
and
mov
add
sub
mov
pop
and
add
pop
adc
add
mov
or
ret
pop
pop
push
test
adc
add
inc
add
pop
shlb
add
dec
arpl
add
add
mov
jg
rorb
std
jnp
mov
add
add
inc
add
out
mov
add
pop
mov
mov
sub
push
xchg
mov
add
mov
mov
es
jno
add
push
in
fistpl
repnz
jbe
add
cmp
mov
loope
pop
jmp
add
popf
xchg
mov
imul
add
cmp
gs
dec
sub
cmpsl
pop
xchg
movd
lcall
xor
add
sub
jbe
popf
and
clc
icebp
push
xchg
pop
and
add
xchg
or
sub
stc
mov
add
pop
pop
repz
ljmp
pop
xchg
cmp
add
mov
lds
mov
ret
mov
add
add
or
pop
rcrb
push
add
jns
mov
inc
add
out
sbbb
add
pop
pop
insl
pushl
icebp
pop
jmp
pop
dec
pop
xchg
insb
pop
jecxz
cmp
sbb
cmp
pop
shl
inc
pop
lods
dec
cwtl
jmp
mov
fdivs
add
mov
sub
add
pop
mov
popa
add
push
pop
mov
add
daa
pop
inc
pop
mov
add
repnz
add
int3
dec
jno
add
test
add
xchg
test
cmp
add
arpl
add
pop
mov
add
add
dec
sbbb
push
lods
cli
jne
outsl
int3
jns
add
outsl
sub
popa
add
sbb
cmc
add
add
inc
pop
jge
push
add
xchg
or
addr16
mov
gs
test
sti
mov
pop
aas
fisubrs
mov
lock
sub
adc
add
pop
xchg
and
add
pop
mov
or
sbbl
cmp
inc
pop
imul
std
lret
addr16
xchg
mov
fistl
xor
add
jecxz
in
sbb
inc
add
jg
dec
cmpsl
pop
out
push
lods
and
add
lock
or
icebp
lahf
mov
cmp
mov
std
fcmovb
pop
mov
aaa
loopne
scas
xor
add
out
adc
add
ret
pop
sbbl
lret
repnz
pop
xchg
les
popf
pop
outsl
ret
pop
inc
add
aaa
xchg
lods
ret
int3
test
pop
call
adc
add
popf
sub
cmp
pop
add
add
add
push
add
add
push
add
and
add
cmpsl
pop
jge
sbbb
mov
add
rcrb
mov
mov
sub
fmull
ret
pop
mov
add
xor
add
repnz
mov
pop
mov
dec
stos
aam
jbe
pop
and
add
pop
lea
and
mov
or
push
pop
aaa
sbbb
and
add
mov
clc
mov
xchg
pop
clc
adc
add
pop
cltd
mov
pop
xchg
pop
pop
bnd
rcrb
sbbb
add
add
add
cmp
pop
pushf
push
out
dec
sbbl
mov
fldcw
cmpsl
pop
test
call
pop
aaa
cmp
cmc
xchg
inc
pop
lcall
pop
hlt
into
add
add
mov
mov
clc
jo
add
mov
sbbl
pop
add
add
test
cmp
xlat
add
add
pop
and
and
add
pop
test
add
adc
add
pop
pop
cmp
add
aaa
mov
movsl
pop
or
dec
add
out
lret
push
and
add
jnp
ds
cld
lods
xchg
pop
sbb
add
loop
loopne
jg
jle
lret
add
setg
inc
pop
pop
xor
add
std
mov
cmp
add
and
add
je
pop
push
repz
add
mov
and
add
add
add
clc
test
lea
add
add
pop
lock
outsl
xchg
inc
add
xor
add
pop
jmp
pop
push
sub
pop
push
add
adc
jmp
jp
js
pop
xlat
outsl
icebp
xchg
mov
pop
pop
push
add
out
mov
lods
test
out
pop
jle
in
hlt
sub
pop
jnp
jmp
pop
lahf
aad
pop
fists
popa
add
in
jae
add
dec
and
add
test
insb
jbe
mov
pop
jg
mov
pop
stos
loope
cmpsl
pop
cwtl
fnstenv
sbbl
in
or
pop
insl
pop
pop
lds
cs
in
add
add
pop
stc
shll
add
lods
pop
lcall
mov
add
rcrl
je
lcall
add
add
out
mov
push
rolb
hlt
lea
dec
sbbl
pop
push
dec
mov
mov
mov
and
add
pop
xor
add
inc
add
icebp
shrb
cmp
sbb
jp
cmp
jne,pn
pop
aas
ds
negl
popf
or
lds
sti
pop
inc
pop
adc
add
sbb
pop
int3
outsl
and
sub
pop
sbb
pop
sub
movsl
pop
pop
es
xchg
pop
mov
xlat
jl
push
and
add
pop
repz
sub
add
leave
jg
jp
or
dec
add
add
into
inc
pop
mov
add
sbb
add
pop
iret
fnstenv
add
nop
or
add
fnstcw
mov
test
sub
pop
jnp
sbb
add
jo
add
mov
cwtl
inc
pop
inc
add
movsl
pop
sub
daa
pop
inc
add
pop
imul
add
xchg
jecxz
iret
clc
pop
addr16
xor
add
outsb
mov
add
test
sub
jp
push
mov
sbb
cs
and
add
xor
add
pop
mov
adc
addr16
mov
pop
arpl
add
add
adc
add
pop
lds
xchg
out
mov
mov
inc
pop
inc
add
repnz
add
add
push
pop
pop
lods
xchg
and
xor
pop
adc
sub
std
mov
pop
ret
pop
mov
push
and
push
mov
and
add
add
popa
add
sub
push
ja
xchg
mov
jmp
sbbl
add
popl
add
sbb
jl
sarl
mov
fildl
xchg
or
pop
mov
sbb
pop
call
call
pop
sbb
jnp
dec
push
ljmp
pop
cwtl
inc
add
mov
xchg
dec
movsb
pop
movsb
pop
adc
add
jbe
sub
pop
imul
adc
add
add
add
pop
pop
mov
pop
insb
int3
dec
popa
add
sarl
nop
jns
jo
add
add
lahf
sbb
add
sbb
add
xor
add
xchg
and
cmp
pop
fildll
mov
pop
popf
test
fmul
frstor
pop
test
sbbb
inc
add
adc
add
ljmp
pop
rcrb
add
add
stos
icebp
jae
add
outsb
jbe
bound
add
outsl
sbbl
pop
inc
pop
lea
daa
pop
fcomp
xor
add
and
add
cmpsb
pop
aad
mov
sub
pop
mov
add
mov
shlb
cld
imul
push
pop
pop
or
stc
sbbl
loop
mov
and
add
loop
out
cs
shrb
adc
add
ffreep
pop
and
add
add
pop
stos
jle
pop
mov
add
mov
mov
add
ficomps
add
gs
and
add
add
cli
loopne
inc
pop
jmp
add
or
mov
adc
add
mov
pusha
add
rorb
lret
add
add
xlat
mov
mov
add
xchg
adc
add
add
lcall
push
add
adc
add
add
sbb
repz
fsubr
or
adc
pop
sarb
imul
cmc
fsts
add
aad
cmp
mov
cltd
sbbl
pop
mov
sbb
icebp
add
sub
jmp
adc
add
pop
inc
pop
mov
pop
stos
lea
cmc
push
or
add
push
stc
std
out
push
mov
dec
xchg
imul
add
xor
add
pop
and
add
pop
jecxz
scas
sbbb
add
lea
mov
or
add
jbe
push
and
add
mov
int
call
pop
or
push
add
sbbl
sbbb
sub
or
adc
ss
and
add
push
sub
pop
in
in
sbbb
push
pop
sbb
aad
pop
test
cwtl
dec
sbb
repz
fcmovnbe
sbbl
mov
sbbl
cmpsb
pop
cmp
in
in
rorb
add
add
add
add
cmp
inc
add
jnp
imul
add
mov
lea
add
add
lock
xchg
adc
pop
and
add
sbb
jle
mov
adc
add
push
int
loopne
jge
add
aaa
push
shlb
add
cmp
sbb
and
push
add
push
pop
ds
mov
add
or
pusha
add
scas
jno
add
pop
imul
mov
pop
pop
insl
add
rcrb
add
repnz
add
dec
dec
fcompl
pop
xchg
popa
add
sub
sbb
pop
xchg
js,pt
aad
inc
add
jae
add
add
add
aaa
loope
add
add
dec
loop
rcrl
push
xor
push
pop
pop
in
js
pop
test
add
stos
mov
pop
dec
test
adc
add
add
mov
jle
add
or
test
sbb
mov
pop
imul
pop
jns
pop
sub
jmp
adc
loope
and
add
mov
adc
add
fisubs
add
dec
cmp
adc
into
lcall
add
imul
pop
xchg
ret
pop
mov
out
gs
clc
int3
dec
and
cmc
add
add
add
dec
shr
mov
add
mov
push
mov
mov
jl
pop
jnp
jle
add
mov
pop
cli
lret
fnstsw
xchg
adc
add
pop
dec
ja
add
jns
fiadds
add
pop
xchg
and
add
int3
pop
jbe
pop
xchg
pop
sbb
sbb
decb
je
sub
je
sahf
push
add
jge
in
aaa
fld1
int3
inc
add
loop
in
icebp
adc
jmp
call
add
inc
add
push
ja
cmp
xor
add
fldl
pop
xor
add
pop
push
add
xchg
out
dec
cmp
dec
clc
inc
add
sbb
pop
mull
scas
inc
pop
cli
popf
or
fisubs
add
xor
add
pop
in
pop
sub
fisubrs
xchg
fs
pop
addr16
lret
adc
ss
pop
push
popa
add
add
stos
stc
addr16
jae
add
or
in
xchg
add
into
cmpsl
pop
mov
cmc
sarl
sbbb
pop
xor
add
pop
cmp
fbstp
lcall
pop
aad
or
inc
pop
inc
add
test
std
mov
dec
stos
je
or
pop
pop
xlat
das
sbbb
xlat
xor
add
mov
pop
repz
lods
fsubs
add
pop
mov
add
int3
cmp
add
sub
add
sbb
add
add
cld
scas
mov
add
out
sarl
and
aad
cmp
pop
aas
inc
pop
cmp
pop
mov
push
xchg
pop
mov
adc
pop
idiv
lcall
dec
scas
int3
pusha
add
xchg
inc
add
push
cltd
adc
add
push
pop
outsl
test
add
movsb
pop
pop
mov
pop
test
inc
pop
stos
or
pop
ss
push
add
shlb
add
insb
dec
add
add
mov
inc
add
mov
push
push
add
add
add
pop
mov
fucom
pop
dec
sub
push
xchg
pop
mov
out
mov
mov
movsb
pop
or
add
loop
test
fwait
cmc
add
add
jne
loopne
call
pop
popa
add
insl
int3
aam
inc
pop
repz
add
cmpsl
pop
or
add
popa
add
in
loope
ja
clc
pop
imul
xchg
cltd
push
enter
insb
jp
gs
push
add
iret
push
cmp
mov
dec
fisubrs
lret
add
add
mov
fiadds
fists
jno
add
mov
dec
adc
mov
add
into
outsl
add
xchg
lret
pop
and
mov
pop
filds
add
push
cld
jne
pop
mov
xor
pop
push
mov
xor
pop
leave
stc
jnp
and
add
pop
dec
cmp
sub
sbb
pop
leave
and
jo
add
mov
rcrl
in
jno
add
add
addr16
pop
ret
jno
add
ljmp
xchg
scas
out
sti
and
add
xor
cmpsb
pop
repnz
add
mov
add
aas
mov
sbb
lret
imul
imul
pop
or
adc
add
out
jns
add
fisubs
sahf
mov
mov
add
or
xchg
lds
pop
xchg
loopne
sbbl
add
les
dec
pusha
add
cmp
add
in
inc
pop
inc
add
int
mov
pop
sar
hlt
adc
aad
aaa
shrl
pop
psubq
xchg
adc
add
rorl
jns
pop
rcrb
adc
cld
outsl
aaa
push
mov
jne
js
push
jle
pop
mov
pop
pusha
add
adc
add
fldt
xchg
dec
repnz
mov
cld
push
mov
adc
pop
adc
add
jno,pt
add
ficomps
sub
shll
add
sbb
cmp
xor
add
pop
in
lods
sarl
cmpsb
pop
and
aad
in
sbbb
stos
std
es
jle
add
add
sbbl
aam
pop
and
add
inc
pop
xor
sbbl
call
add
inc
pop
jbe
mov
inc
pop
push
gs
or
sbb
jg
or
pop
or
add
test
in
lret
outsl
add
add
pop
jns
mov
add
rcrl
mov
add
pop
pop
es
imul
outsb
adc
add
fs
xlat
push
add
add
add
pop
dec
pop
mov
bound
add
pop
inc
pop
xor
add
sbbl
mov
hlt
popa
add
jecxz
int3
mov
add
and
add
popa
add
adc
add
pop
cli
add
add
pop
xchg
dec
ja
inc
pop
int3
arpl
add
testb
popf
inc
add
es
les
xor
decl
pop
clc
test
jp
cli
xchg
dec
sti
adc
add
jnp
int
repnz
add
jnp
ret
pop
insl
sbb
mov
add
in
mov
add
xor
add
add
ficompl
push
pop
test
dec
mov
pop
dec
call
pop
sahf
hlt
cmpsb
pop
or
add
out
rcrl
shrb
mov
jmp
fimull
pop
inc
add
xchg
jno
add
pop
repnz
add
lret
xchg
add
add
pop
js
add
add
add
add
sti
lock
add
aas
or
bound
add
xchg
idivl
add
mov
test
lds
pop
in
or
pop
push
dec
sti
pop
fstl
add
add
xchg
insb
aas
test
push
add
jno
add
pop
pop
repz
mov
jo
add
scas
out
movsl
pop
jmp
pop
push
sahf
loopne
mov
add
aam
inc
pop
emms
jecxz
test
jo
add
adc
add
lret
icebp
fsubs
xchg
xchg
inc
add
adc
add
int
pop
and
add
push
add
int3
mov
pop
stc
std
es
sub
pop
jnp
pop
dec
mov
and
add
xor
pop
sbb
sbb
sub
push
xchg
jne
jl
cmp
pop
and
add
add
mov
add
stos
sbbl
dec
mov
mov
lods
std
dec
sub
add
int3
fmuls
pop
pop
incb
add
cltd
push
pop
arpl
add
pop
fcmovnu
movsb
pop
pop
pop
rorb
pop
sbb
pop
ss
push
aas
arpl
add
add
lods
icebp
mov
fiadds
add
dec
cmp
test
xchg
jb
add
mov
aaa
movsb
pop
xchg
xor
add
and
dec
jge
lock
int3
pop
mov
add
add
bound
add
pop
mov
add
sub
jns
pop
pop
lret
enter
push
rep
sub
pop
clc
test
mov
and
add
int3
cld
jb
add
adc
add
push
inc
add
fistpll
pop
cmpsb
pop
iret
mov
xchg
stos
stos
rorl
pop
ljmp
mov
add
add
cmp
xor
add
pop
pop
shll
add
rcrl
js
lahf
xor
movsb
pop
sbb
pop
cmp
pop
mov
pop
mov
movq
xchg
add
add
fisttpl
fistpll
mov
pop
or
add
add
movsb
pop
jl
cmp
xchg
lret
add
jg
add
jle
or
stc
fsubrs
jbe
cmp
adc
push
add
and
add
add
push
add
xchg
dec
mov
pop
jmp
bound
add
or
xlat
test
add
outsb
cmp
mov
push
add
mov
int3
xor
add
ja
daa
pop
or
aam
pop
aam
dec
jae
add
pop
call
imulb
jne
pop
push
pop
mov
add
cmp
pop
pop
iret
adc
add
and
add
push
xchg
cmp
add
xchg
inc
add
dec
dec
pop
inc
pop
fdivs
lods
dec
repz
inc
pop
mov
imul
xchg
ficoml
add
jo
add
cmp
push
lds
pop
mov
add
cmp
rcrl
jge
pop
test
mov
pop
scas
adc
add
cld
cmp
sbb
rcrb
pop
mov
jl
sub
sub
add
xchg
push
test
pop
mov
mov
pop
push
daa
pop
mov
add
add
adc
add
cmpsl
pop
mov
ss
jecxz
add
push
outsl
aam
insl
mov
mov
cltd
adc
add
testb
jae
add
add
fidivrl
pop
insb
sbb
pop
push
mov
pop
push
pop
movsb
pop
gs
dec
pushf
push
xor
add
scas
and
add
xchg
lret
clc
aam
test
add
je
pop
mov
std
mov
sbb
add
push
pop
mull
fldt
push
test
shlb
mov
in
push
mov
stos
dec
ret
pop
mov
add
aam
lret
xchg
cmp
add
push
dec
pop
add
ja
repnz
push
call
add
mov
add
pusha
add
gs
xor
pop
arpl
add
add
pop
sbbl
add
push
pop
pop
pop
pop
imul
pop
pusha
add
stos
inc
pop
sub
ljmp
sbb
cmp
test
inc
pop
jbe
in
mov
add
addr16
jmp
jl
pop
or
into
cltd
push
add
sbb
jge
mov
add
mov
push
pop
mov
lret
push
sbb
xchg
dec
xor
pop
or
popf
push
mov
jle
pop
imul
sub
in
jno
add
mov
pop
mov
inc
add
or
pop
or
and
add
imul
mov
movsb
pop
cmp
push
add
xor
add
add
xchg
mov
fsub
pop
loope
cwtl
js
add
daa
pop
add
add
mov
pop
loopne
sbb
popa
add
lods
ret
loop
push
test
xchg
mov
pop
adc
add
add
push
dec
addr16
in
loop
flds
add
and
add
pop
lds
pop
push
std
aad
pop
push
xor
loop
nop
xor
add
out
mov
pop
pop
fwait
mov
sbb
test
add
in
dec
push
pop
addr16
out
sub
sbb
add
popa
add
shrb
add
pop
pop
lahf
xlat
ljmp
add
or
adc
add
jle
add
fsubrl
pop
jb
add
pop
sub
int
add
pop
jg
add
push
add
add
aam
pop
fld
pop
push
sbbb
pop
mov
pop
jecxz
cld
sub
add
or
and
add
mov
xor
pop
jg
pop
in
pop
les
pop
mov
jmp
scas
pop
inc
pop
push
add
cmp
add
sbbl
add
add
mov
cmpsb
pop
push
add
leave
dec
pop
int3
leave
pop
push
pop
insb
leave
inc
pop
push
jb
add
dec
pop
xor
add
add
pop
negb
pop
nop
jge,pt
push
add
das
insb
test
push
jp
xor
add
sbbb
pop
pop
sub
pop
or
dec
stos
jo
add
pop
outsl
decl
pop
fldt
cmp
mov
jns
pop
mov
pop
gs
gs
and
add
inc
pop
inc
add
pop
or
xor
add
aaa
int3
sbbb
pop
push
pop
stc
inc
add
and
push
pop
jecxz
mov
pop
lds
ds
out
fsubs
add
push
push
add
lods
pop
idivb
adc
rcrl
lods
imul
sub
pop
mov
sbb
dec
mov
cmova
add
int3
mov
push
add
mov
add
rorb
pop
into
xor
add
add
push
add
dec
cs
pop
mov
sub
sbb
ret
jl
imul
add
addr16
push
add
cld
push
add
int
rcrl
into
sbbl
add
pop
fwait
rorb
mov
add
int3
mov
jno
add
pop
dec
fwait
cwtl
test
pop
daa
pop
repz
mov
pop
aad
add
push
sub
add
test
pusha
add
lret
repnz
jae
add
imul
sbb
pop
xor
pop
adc
add
lea
lea
sbbl
popa
add
pop
jge
add
or
add
pushf
into
rcrl
add
js
mov
xor
add
push
add
pop
jbe
pop
pop
pop
xor
add
jb
add
add
add
pop
xchg
enter
pop
pushf
dec
lret
cmp
in
mov
push
add
popa
add
sub
and
bound
add
lds
adc
add
movsb
pop
cmp
pop
mov
and
pop
mov
fldl
mov
xor
add
add
jne
jae
add
and
add
xor
add
pop
int
inc
pop
push
add
and
loop
jbe
sti
dec
cmp
add
pop
scas
xor
add
sub
sbbb
lock
add
add
pushl
add
push
cwtl
movsl
pop
cmc
out
fisttpl
fadds
add
and
add
imull
popa
add
lods
xchg
sub
repnz
add
rcrb
add
pop
adc
add
lds
adc
add
loopne
or
add
push
loope
loopne
movsb
pop
fmull
add
std
aas
jb
add
add
pop
inc
pop
jo
add
jle
pop
xor
add
add
add
add
add
bound
add
pop
jmp
pop
push
add
stc
push
test
pop
test
inc
add
arpl
add
cmp
pop
add
add
dec
and
add
jge
xchg
pop
pop
and
add
pop
and
sbbb
push
pop
inc
add
mov
roll
add
jo
add
push
add
mov
pop
inc
pop
les
add
push
pop
dec
mov
pop
pop
adc
add
pop
xor
add
outsl
ljmp
add
mov
inc
add
dec
out
scas
inc
add
js
add
push
sbb
xor
add
add
push
pop
xchg
xchg
pop
mov
push
cmp
add
push
dec
shlb
add
xor
add
add
mov
ret
pop
and
add
sbb
add
pop
call
fsubs
pop
int
test
lret
mov
fsubs
mov
lahf
daa
pop
mov
pop
push
pop
daa
pop
out
pop
imul
sub
pop
dec
mov
in
lret
sbb
push
sbb
lods
mov
ret
pop
mov
xchg
cmpsl
pop
mov
fsubp
pop
pop
mov
aam
enter
loopne
popa
add
stc
mov
add
jne
pop
cmp
add
int3
sbb
xchg
or
sbbl
sbbl
loop
adc
pop
cmp
sbb
mov
in
adc
add
sbb
decl
mov
xor
add
add
pop
jle
bound
add
pop
sbbb
shlb
mov
add
pop
or
jg
mov
pop
sbb
jnp
xchg
dec
inc
pop
lods
in
cs
add
jmp
clc
sub
pop
pop
fidivs
pop
push
sub
add
add
test
add
or
add
nop
mov
add
jl
pop
add
add
pop
jmp
add
into
pop
sub
lcall
sub
add
es
fcmove
js
mov
push
xchg
cltd
sbb
pop
lea
xchg
mov
movsl
pop
scas
cmp
fdivl
add
add
fsubrl
jge
pop
pop
sbb
and
add
mov
add
adc
add
imul
add
or
add
pop
adc
pop
jmp
stc
mov
pop
cmpsl
pop
adc
add
cmp
xchg
lods
mov
pop
movsl
pop
gs
rcll
pop
mov
mov
in
pop
lret
stos
out
mov
aaa
mov
fildll
add
nop
cli
mov
rcrl
out
adc
pop
inc
pop
ss
dec
sub
jp
pop
push
mov
add
aad
sbb
sbbl
pop
ja
lcall
iret
call
add
sbbl
inc
pop
adc
add
pop
add
add
push
add
xor
sti
loopne
pop
pop
repz
add
jg
arpl
add
xor
int3
rolb
pop
jae
add
pop
pop
pop
sbb
push
add
pusha
add
sbb
pop
push
add
xor
add
shll
add
push
add
mov
dec
xor
test
pop
ret
dec
bound
add
or
add
fdivrl
add
aaa
sbb
pop
cwtl
rcrl
cmp
lods
xchg
add
stos
stos
test
pop
jb
add
add
mov
mov
and
mov
add
les
jns
pop
arpl
add
pop
inc
add
ja
pop
fwait
cwtl
adc
add
jo
add
xchg
or
add
dec
hlt
shlb
add
adc
add
pop
stos
rcrb
test
pop
daa
pop
cli
je
inc
add
lds
nop
sbbb
jg
pop
lret
jne
pop
cmp
std
repz
pop
add
add
std
pop
outsb
cmpsl
pop
iret
xchg
ljmp
cli
sbbl
add
pop
sbb
xacquire
pop
push
and
add
add
pop
rep
sahf
icebp
jbe
pop
dec
in
or
pop
mov
pop
push
insl
dec
ss
jecxz
or
into
nop
lcall
xor
mov
das
push
pop
fildll
mov
pop
mov
add
jg
hlt
pushf
stc
std
xchg
jno
add
push
xlat
aas
in
repz
xchg
fiadds
pop
aas
or
or
mov
mov
in
pop
into
sub
movsb
pop
icebp
sti
inc
pop
sbbl
pop
movsb
pop
inc
pop
pop
ds
fistpll
outsb
test
jg
push
add
fsubs
add
add
jp
pop
sub
jb
add
xchg
int
add
add
add
push
jmp
xacquire
pop
dec
arpl
add
pop
or
pop
jp
pop
inc
pop
sbbb
aad
mov
pusha
add
lcall
sbb
add
clc
sub
pusha
add
gs
sub
insl
or
shl
pop
mov
jae
add
pop
hlt
insl
addr16
inc
add
xor
add
add
mov
cmp
jns
mov
lea
sbb
loopne
jno
add
jo
add
mov
add
and
add
pop
pop
jmp
pop
sub
add
lock
add
add
add
les
add
decb
out
imul
ret
pop
in
sub
pop
mov
shrb
inc
add
push
cmc
sub
xchg
rclb
add
adc
repz
add
add
js
pop
pop
mov
mov
jno
add
mov
xlat
sub
sti
mov
push
add
loope
repnz
ljmp
pop
in
jbe
dec
stos
call
add
mov
add
stos
pinsrw
pop
cmp
clc
rcrl
pop
push
sbb
pop
and
gs
xchg
imul
ret
pop
push
sbb
sbbl
adc
add
pop
adc
add
add
xor
add
mov
add
mov
pop
popf
and
push
pop
xor
add
ret
pop
pop
int3
push
pop
inc
add
sahf
cmc
dec
addr16
stos
arpl
add
rcr
sub
mov
add
add
inc
pop
sbb
sbbb
arpl
add
add
pop
jb
add
and
dec
cld
stos
es
push
test
stc
add
add
or
xor
and
add
push
rorl
pop
sbb
pop
testb
push
add
hlt
lods
and
add
dec
pop
inc
add
pop
ficompl
sbbb
rorb
push
pop
pop
inc
pop
and
add
add
je
pop
xor
add
jg
jae
add
add
add
mov
inc
pop
leave
cmpsb
pop
pop
dec
ds
pop
insl
sub
mov
mov
add
xchg
dec
cltd
dec
jns
push
mov
add
push
ljmp
pop
jge
jl
push
mov
sub
pop
out
popa
add
dec
dec
pop
outsl
sbb
fabs
pop
mov
add
add
add
rcll
outsl
fcompl
adc
jg
shlb
xor
add
add
add
rcrl
adc
add
decb
xchg
add
add
mov
push
sbb
mov
pop
loopne
push
add
sbb
add
sti
dec
lret
add
jo
add
add
inc
pop
mov
cmp
add
jb
add
add
stos
adc
sub
mov
int3
ret
fisttpll
jnp
iret
mov
push
cmp
ret
pop
jae
add
in
outsb
or
test
pop
cwtl
lods
popa
add
gs
int
pop
pop
int3
scas
lret
xchg
hlt
fsubr
add
add
loopne
and
add
into
test
pop
mov
sbbl
pop
fmull
add
sub
add
inc
add
sbbb
mov
or
add
jo
add
add
xor
add
mov
add
add
lods
inc
add
mov
pop
inc
add
sbbb
add
call
pop
push
jmp
pop
loopne
mov
and
add
sub
or
add
in
std
sbb
add
dec
imul
and
add
add
je
in
fwait
pop
mov
and
add
xor
add
insl
sbb
add
pop
cmp
sub
cs
add
add
in
sbbb
pop
cld
sbbb
cmp
add
add
fdivp
mov
pop
mov
add
pop
dec
dec
add
add
add
in
xlat
or
add
pop
clc
scas
sbb
ret
pop
sbb
xchg
aam
mov
add
aaa
out
jg
sbb
sti
inc
pop
and
add
add
mov
pop
cltd
push
pop
jo
add
js
sub
ret
pop
cmp
xor
pop
cs
pop
loope
fwait
mov
xlat
sbb
nop
in
pop
es
mov
out
add
add
dec
xor
add
hlt
xchg
mov
xor
add
add
dec
sbbl
or
cs
push
mul
pop
jge
push
add
in
pop
pop
and
ja
add
testb
pop
adc
add
nop
adc
add
adc
pop
inc
add
test
fcompl
add
shlb
adc
add
fistl
cli
arpl
add
mov
in
sbb
push
popa
add
test
mov
pop
sahf
popf
pop
mov
repz
sub
and
add
pop
sbb
sahf
in
jns
lods
fcomps
add
add
add
inc
pop
adc
sahf
outsb
jg
fnstsw
shlb
add
pop
add
add
out
sbb
add
jl
adc
add
add
cwtl
test
in
pusha
add
aas
cmp
scas
pop
arpl
add
pop
cld
push
add
stc
lahf
push
aam
add
add
mov
sti
lock
jbe
add
mov
adc
pop
xchg
cs
cmp
add
pop
jecxz
test
loope
pop
testl
add
repnz
sahf
test
std
cmp
pop
pop
lds
add
lock
jmp
pop
pop
dec
and
test
test
sbb
aaa
cwtl
mull
pop
jg
fisttps
sub
push
sub
xchg
pop
cmpsb
pop
pop
push
pusha
add
sqrtps
add
pop
pop
push
adc
pop
in
push
pop
jecxz
sbbb
add
add
push
add
inc
add
outsb
rorb
sub
pop
loopne
out
sbb
scas
mov
xchg
fcompl
mov
add
jl
pop
mov
lret
in
jp
xor
add
pop
dec
adc
add
cmpsl
pop
scas
and
inc
pop
imul
out
sbb
add
test
adc
add
add
and
mov
pop
loopne
mov
addr16
mov
inc
pop
test
sbb
aam
pop
mov
mov
inc
add
pop
inc
pop
loope
fsts
add
add
arpl
add
add
sbb
mov
push
add
push
add
mov
fst
bound
add
pop
fisttpl
adc
pop
dec
out
iret
mov
lahf
or
sub
xor
add
sub
push
pop
pop
push
int3
mov
or
pop
push
push
add
outsb
aaa
popa
add
dec
xchg
jp,pt
add
xor
add
pop
test
add
mov
or
add
inc
add
add
lcall
mov
and
sbb
xor
add
add
das
ret
mov
pop
xor
add
add
pop
sahf
inc
pop
jbe
fistpll
cwtl
std
cmp
adc
add
add
add
adc
add
pop
mov
jno
add
xor
add
jle
xor
add
pop
into
dec
mov
add
cld
out
loopne
stc
dec
lock
add
pop
insb
add
add
add
xchg
fdivrs
lahf
cmp
add
fidivrl
mov
push
add
xchg
pop
mov
mov
rcrb
pop
rorb
out
sbbb
pop
lcall
sub
repz
add
mulb
add
dec
inc
add
jbe
add
add
or
pop
xor
add
inc
add
push
add
jg
add
push
pop
bound
add
pop
jbe
and
add
dec
or
out
pop
das
lcall
jnp
jno
add
repz
aad
pop
push
ljmp
ja
decl
pop
inc
pop
insl
popf
popl
out
sub
mov
dec
mov
jbe
aas
pop
sbb
add
add
pop
sbb
cmp
xor
add
push
add
fists
into
arpl
add
pop
and
add
adc
sub
pop
adc
dec
sbb
add
xor
pop
push
add
mov
pop
int
inc
add
xchg
call
scas
lahf
out
add
add
add
add
fisubl
jnp
call
dec
fdivrl
sub
ljmp
pop
enter
sub
arpl
add
mov
add
sub
inc
add
pop
pop
mov
mov
dec
xor
add
stos
sbb
aas
in
jnp
pop
stc
fidivrs
pop
ret
pop
sub
ljmp
jle
pop
xor
.byte
insb
