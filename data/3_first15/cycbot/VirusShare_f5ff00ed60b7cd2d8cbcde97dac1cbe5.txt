es
xchg
xchg
scas
inc
dec
in
and
and
cmp
push
push
stos
stos
push
repz
out
rcl
rcl
pusha
pusha
pusha
mov
sbb
add
fadds
popf
xlat
xlat
xlat
push
push
push
loope
xor
out
out
les
out
inc
inc
mov
div
mulb
out
adc
jae
jae
out
out
adc
adc
out
out
out
out
out
sub
sub
nop
pop
pusha
stos
stos
stos
sub
lret
dec
sub
out
add
out
out
or
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
cmp
push
push
test
in
in
cli
cli
cli
cli
cmp
inc
inc
repz
add
sbb
scas
scas
out
out
out
inc
cltd
cltd
dec
dec
xchg
je
jl
icebp
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
test
test
test
lret
cmp
cmp
cmp
adc
data16
out
nop
nop
nop
nop
nop
pop
mov
fwait
fwait
fwait
fwait
out
out
lcall
pop
or
jl
dec
icebp
icebp
mov
cmp
jnp
cmp
inc
inc
inc
inc
cmp
addr16
rcrl
out
popa
out
aaa
sub
mov
mov
addb
adc
adc
xchg
jno
jno
lea
lea
push
mov
loopne
out
out
out
out
out
adc
adc
adc
adc
sbb
and
hlt
add
out
aaa
jecxz
mov
mov
jb
in
in
push
jmp
daa
daa
or
test
scas
scas
mov
sub
adc
out
aad
xchg
xchg
stos
out
out
or
sub
or
or
popa
daa
lea
pop
fwait
out
mov
out
adc
mov
mov
and
and
cmp
insl
insl
out
out
add
ret
sbb
sbb
sbb
data16
imul
mov
xlat
jbe
out
out
out
push
push
push
push
lods
in
add
inc
inc
inc
inc
out
fidivl
lret
lret
lret
xor
xor
xor
fs
add
arpl
arpl
out
out
sub
inc
inc
movsb
movsb
sub
xchg
das
das
das
mov
hlt
xor
mov
fcomp
fcomp
fdivs
out
out
out
fcmovu
clc
add
dec
dec
lahf
lahf
lahf
or
adc
sub
sub
push
dec
push
push
push
push
push
insb
out
out
das
das
das
das
das
or
or
or
or
pop
pop
pop
pop
cmp
icebp
icebp
xchg
dec
dec
push
aad
ret
nop
out
out
mov
mov
leave
js
loopne
out
out
out
inc
inc
inc
ds
and
cmpsb
cmpsb
cmpsb
cmpsb
mov
cmp
pop
pop
pop
cmp
mov
xor
and
mov
or
pop
sahf
ja
sbb
out
decl
enter
cmp
iret
iret
iret
iret
cmc
out
rcl
aas
aas
aas
cmc
cmc
addb
mov
cmc
imul
mov
mov
and
jne
pop
std
inc
scas
scas
sbb
push
leave
leave
inc
or
jl
fisttps
add
inc
inc
inc
inc
inc
inc
and
and
out
aam
ja
xchg
pop
push
jp
push
push
push
fisttps
or
pop
pop
pop
stc
stc
stc
sbb
mov
jge
lds
and
in
in
in
out
notb
mov
mov
xchg
dec
sub
mov
mov
insl
inc
imul
dec
dec
dec
push
dec
dec
cmp
lds
mov
adc
sbb
sbb
fstp
push
push
push
push
sub
aam
sub
sub
mov
loop
pushf
icebp
icebp
icebp
scas
in
repz
daa
out
out
arpl
insb
insb
cmp
out
out
out
out
out
adc
adc
loopne
jne
out
out
xchg
mov
test
aad
aad
sub
mov
lret
test
sahf
sahf
sahf
out
out
out
xor
xor
je
sti
js
xor
cld
cld
jbe
dec
out
out
bound
call
repz
mov
xchg
adc
xchg
movsl
movsl
mov
add
int
mov
jl
add
nop
nop
nop
nop
nop
adc
cs
ds
add
add
add
lock
iret
and
out
addl
sbb
xor
inc
mov
mov
addb
mov
mov
lods
push
push
adc
sbb
or
xchg
sub
sub
mov
ss
ret
ret
hlt
mov
push
rcrb
sbb
addb
cmpsl
sbb
aad
ror
mov
shl
cmc
addb
pusha
out
out
into
into
mov
push
rol
cmp
jg
in
cmp
int3
and
dec
dec
dec
dec
xchg
dec
xchg
xchg
xchg
push
push
test
popf
sahf
sahf
sbb
mov
mov
push
pop
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cs
movsb
cmp
cmp
js
push
push
push
pop
pop
pop
pop
pop
out
fcomp
popa
div
notl
pop
mov
into
into
int3
int3
out
out
out
jge
movsb
mov
inc
rcl
jo
fs
dec
int
cmp
cmp
sbb
sub
lods
lods
lods
lods
lods
lods
lods
dec
sbb
lods
or
test
inc
inc
cmp
es
pop
pop
jae
jae
sub
xor
addb
subl
jge
or
iret
iret
iret
xor
loopne
jnp
lret
lret
push
push
xchg
ss
lock
out
xor
mov
pusha
xchg
xchg
mov
pop
out
mov
mov
hlt
lcall
adc
adc
cltd
cltd
stc
stc
stc
hlt
sub
lret
dec
dec
jb
notb
push
push
push
push
adc
mov
mov
test
inc
inc
fwait
fwait
fwait
fwait
inc
loop
addb
add
add
jbe
stc
pop
xchg
aaa
addl
addl
inc
inc
inc
leave
leave
leave
cwtl
cwtl
lcall
aaa
sub
sub
repz
out
out
pop
xlat
sub
out
je
xlat
sub
mov
sbb
scas
scas
scas
or
or
and
and
pop
xor
jg
jb
xchg
xchg
adc
pop
sbb
das
mov
aam
xchg
xchg
jecxz
gs
mov
mov
pop
cmp
cmp
pop
dec
or
or
ds
xchg
inc
inc
outsl
int
mov
mov
outsb
outsb
outsb
lahf
leave
leave
pop
pop
add
add
add
add
pop
ja
cmp
xchg
add
xlat
movl
sbb
cmp
pop
add
or
jg
mov
adc
adc
es
in
enter
cmpsl
cmpsl
pop
aas
int3
int3
push
push
push
cmp
int
call
lods
iret
mov
stos
jae
xor
idivl
xchg
loop
std
std
xor
jbe
andb
es
test
lret
lret
and
jmp
mov
icebp
icebp
icebp
add
add
mov
fs
dec
out
out
out
out
out
add
in
cmpsl
cmpsl
cmpsl
mov
movsb
enter
pop
imul
imul
or
loope
out
iret
iret
cli
dec
dec
lock
aam
jp
scas
scas
xchg
fbld
mov
es
out
cmp
into
sbb
sbb
sbb
sbb
cltd
jno
push
push
dec
dec
add
shrl
sub
data16
clc
cmp
cmp
fstp
call
js
lret
mov
incb
xchg
xchg
xchg
xchg
xorb
clc
inc
inc
lock
imul
pop
outsl
ds
push
hlt
fimuls
ja
push
push
aas
adc
add
pop
out
out
out
push
mov
pop
pop
inc
inc
sub
fists
jae
jae
lds
outsl
outsl
imul
and
or
scas
rcl
xchg
mov
pop
test
jge
adc
addr16
mov
lcall
or
jle
cmp
lock
xor
bnd
jns
add
hlt
enter
fbstp
xor
fildll
cmp
push
push
loop
xchg
xchg
xchg
and
cmp
out
gs
mov
push
push
rcll
mov
cs
xchg
in
xchg
lahf
xchg
xchg
xchg
xchg
pop
xorb
jno
jno
es
dec
jmp
push
push
push
mov
dec
add
jl
outsb
outsb
icebp
dec
dec
dec
dec
pop
popf
jg
icebp
ficompl
sbb
mov
arpl
arpl
xor
jnp
ljmp
out
xlat
xlat
call
mov
mov
fwait
jl
lods
adc
pop
inc
ss
push
push
push
dec
mov
cs
push
push
ljmp
jbe
jbe
mov
inc
xor
mov
mov
clc
clc
data16
or
stos
into
into
into
int
stc
stc
stos
stos
stos
outsb
shr
in
in
push
push
aam
and
and
jecxz
out
out
cmp
cltd
loope
push
ds
cmp
out
out
or
or
or
pop
ret
fsubr
call
aam
aam
push
push
push
push
push
cld
pop
pop
imul
aad
aas
test
clc
inc
xchg
js
js
ds
xchg
xchg
xchg
xor
push
push
rcl
daa
rcl
setae
adc
inc
outsb
outsb
push
push
push
push
push
push
mov
fisubs
adc
push
push
inc
or
or
and
jb
jb
pmulhrw
and
fcomp
fcomp
push
lods
mov
push
or
fsubr
pop
mov
sbb
mov
mov
fdivr
xor
jl
out
out
out
jns
jns
jns
pushf
pushf
pushf
fcmovu
cmpsb
dec
dec
push
push
cmp
in
in
in
push
push
push
push
lret
adc
mov
mov
push
push
mov
push
aas
xchg
outsl
imul
sbb
aad
mov
movsl
mov
mov
mov
xchg
ja
or
or
or
or
mov
sbb
cs
add
icebp
icebp
js
js
js
popf
inc
inc
insl
push
push
push
pop
jno
jno
push
push
push
push
push
push
jle
add
add
shr
push
push
push
jno
jno
xchg
xchg
arpl
cmp
cmp
cmp
in
mov
div
div
lahf
lahf
cld
cld
cmp
adc
sub
sub
mov
inc
inc
sahf
sahf
sahf
xchg
xchg
xchg
xchg
xchg
xchg
fs
xchg
push
add
outsb
jns
mov
repz
cltd
cltd
js
add
cmp
pop
fisubl
cwtl
aas
aas
aas
aas
lret
lret
and
es
or
or
or
jae
push
push
push
and
and
cmpsb
cmpsb
cmpsb
cmpsb
in
in
xor
xor
xor
xchg
xchg
es
or
in
aam
xchg
xchg
sub
sub
int3
adc
jnp
add
cld
cld
cld
and
jnp
dec
aas
aas
aas
stos
imul
or
sub
and
and
and
fldenv
out
push
jbe
jbe
and
out
adcb
dec
icebp
push
addl
cmp
je
cmpsl
call
data16
loope
pop
pop
hlt
hlt
hlt
hlt
jmp
dec
test
test
jle
jle
jle
les
push
push
inc
inc
inc
inc
aad
into
cmp
cmp
add
add
cmpsb
stos
mov
gs
imul
and
mov
mov
shrd
int3
in
in
in
in
in
in
in
in
push
fstp
fstp
fnstsw
rol
inc
inc
inc
xor
xchg
xchg
push
ljmp
push
push
mov
andl
pop
ret
mov
pop
les
fcmovu
fidivl
sub
adc
adc
dec
dec
dec
sbb
sbb
sbb
rcl
dec
dec
pushf
pushf
dec
dec
dec
sbb
les
add
add
lcall
sbbb
pop
mov
out
mov
jl
dec
push
lahf
addr16
stos
stos
stos
stos
aad
lock
xor
test
fisttpll
aaa
out
scas
daa
daa
daa
out
out
inc
and
and
mov
testl
pop
pop
and
xchg
js
push
push
push
push
push
lret
outsl
xchg
gs
cwtl
cwtl
cwtl
pop
pop
pop
pop
pop
mov
mov
mov
mov
mov
adc
jmp
iret
iret
iret
iret
iret
iret
iret
fwait
fwait
fwait
fwait
out
ret
xor
dec
inc
inc
pop
sbb
sti
iret
scas
rep
xor
mov
mov
mov
repz
cmc
popa
popa
xchg
shlb
dec
dec
jecxz
and
pop
inc
xchg
xchg
mov
inc
adc
ret
rcll
xor
cmp
mov
leave
popf
popf
popf
popf
popf
mov
pop
nop
nop
nop
nop
xor
or
cmp
push
push
push
push
arpl
inc
adc
and
and
xlat
mov
lcall
in
adc
insl
imul
sub
cmp
ja
ja
push
push
push
xor
aaa
test
into
insb
insb
push
or
out
out
sbb
ds
dec
dec
jge
pop
data16
pop
pop
mov
xlat
xchg
xchg
scas
inc
xchg
xchg
xchg
xchg
xchg
xchg
fildll
lret
ljmp
mov
inc
inc
push
push
push
push
in
in
in
roll
out
out
lods
fs
inc
dec
xchg
popf
outsl
push
push
push
push
fmull
add
sbb
popf
pusha
add
lret
push
nop
nop
nop
bound
ljmp
addl
pop
pop
pop
pop
pop
in
stc
adc
dec
decl
or
mov
scas
xor
popa
popa
imul
pop
pop
pop
pop
fs
div
add
add
add
pop
pop
fsubrs
loopne
loopne
popf
popf
popf
pop
int
xor
xor
xor
aad
aad
aad
jmp
out
out
out
jge
lea
jecxz
jecxz
int
in
pop
cmp
cmp
push
and
cmp
pop
pop
pop
mov
push
jp
jp
jge
stos
roll
inc
inc
aas
repnz
pop
out
dec
dec
aam
aam
adc
sub
jns
add
mov
push
movsb
sarl
add
add
sub
sbb
sbb
rcl
rcl
rcl
shrl
xor
cmc
addl
iret
iret
adcb
daa
dec
dec
ljmp
inc
inc
xor
add
xchg
xchg
xchg
sub
inc
inc
pop
pop
pop
pop
sub
sub
sub
dec
add
add
add
ja
lock
pop
dec
dec
dec
ret
ret
and
iret
sti
sti
sti
push
dec
jae
rcl
mov
push
cmpsl
cmpsl
mov
pop
mov
push
push
hlt
hlt
adc
bound
mov
mov
mov
or
cmp
adc
lret
scas
sub
sub
push
cld
addr16
in
in
in
je
push
mov
xchg
test
or
xor
add
pop
pop
pop
pop
push
and
mov
mov
mov
mov
std
push
xchg
in
in
sahf
jle
jle
arpl
or
fs
div
div
div
loopne
jle
cmp
cmp
inc
inc
inc
inc
inc
inc
inc
push
push
push
loopne
xor
and
and
scas
mov
mov
inc
inc
inc
inc
inc
pop
xchg
xchg
mov
and
inc
and
adc
mov
cwtl
mov
push
adc
out
mov
fcomp
fcoms
push
xor
push
add
mov
mov
icebp
icebp
jle
push
push
push
mov
cmp
jnp
mov
movsl
movsl
movsl
movsl
mov
fisttps
movsb
lret
lret
lret
lret
aam
cmp
repnz
and
scas
scas
sub
lock
loop
shll
outsl
outsl
fucomi
clc
push
mov
xchg
leave
leave
mov
mov
fcmovu
dec
dec
dec
inc
inc
inc
inc
inc
inc
sub
sub
cwtl
cwtl
cwtl
rcl
sarl
out
out
out
out
out
sti
sti
add
es
jle
sub
xor
dec
dec
jne
clc
clc
fsubp
in
mov
cmc
cmc
cmc
cmc
cmc
cmc
cmpsl
arpl
out
out
out
dec
dec
gs
push
mov
and
and
daa
lret
lret
lret
lret
lret
xor
mov
ja
xchg
out
out
out
sbb
jae
mov
scas
out
std
push
insb
insb
push
fcomp
mov
icebp
pop
pop
push
push
push
mov
cmp
mov
outsb
outsb
xor
and
rcl
loop
inc
pop
pop
pop
push
push
pop
mov
iret
iret
shll
and
and
outsb
outsb
outsb
outsb
mov
cmc
clc
cmpsl
cmpsl
imul
jmp
mov
addb
int
pop
ss
mov
es
mov
ljmp
pop
sbb
and
pop
push
push
push
push
push
shrb
jne
jne
jne
mov
add
ret
mov
pop
lock
fs
ljmp
mov
sub
addb
lret
in
in
in
sbb
mov
daa
pop
aas
aas
sbb
jmp
cmc
and
jecxz
mov
inc
pop
push
push
test
dec
adc
lahf
movsb
jno
mov
loope
ret
test
mov
in
test
repz
lret
pop
pop
xor
xor
xor
xor
push
push
lahf
push
push
push
push
push
push
push
mov
mov
jo
and
jns
rol
shll
cmpsl
jae
jae
pop
pop
pop
pop
insl
das
cmpsl
mov
loop
dec
dec
fisubrs
jnp
outsl
outsl
adc
adc
adc
ret
xor
pop
pop
pop
repnz
test
jnp
movsl
movsl
movsl
adc
push
in
cmp
fcmovu
xchg
cmc
cmc
cmc
push
dec
test
pop
pop
pop
pop
aas
aas
aas
aas
aas
aas
jnp
sbb
sub
stc
adc
out
cmpsb
dec
dec
dec
dec
aad
pop
pop
mov
in
mov
insb
mov
lods
lods
lods
lods
sbb
xor
xor
and
and
shr
jmp
sbb
lret
fildll
jmp
inc
dec
rol
xor
xor
clc
clc
clc
cmp
call
or
clc
clc
clc
cli
cli
cli
push
push
adc
mov
dec
dec
jnp
jnp
push
jo
out
out
mov
mov
inc
cmp
cmp
pop
mov
mov
mov
mov
sub
jecxz
movsb
movsb
movsb
mov
sbb
rorl
lret
sbb
lahf
movl
ds
mov
les
xlat
xlat
fcoms
mov
push
mov
inc
inc
inc
inc
inc
inc
inc
inc
inc
mov
adc
outsb
outsb
xor
stos
mov
loop
ljmp
sub
lcall
push
mov
mov
icebp
push
push
push
push
jae
cli
cli
adc
movsb
movsb
movsb
mov
push
jg
mov
lods
lods
mov
cli
cli
cli
cli
cli
cli
data16
into
into
out
out
out
out
out
out
out
mov
stos
sub
fwait
fwait
in
insl
insl
insl
inc
lock
mov
mov
dec
dec
dec
dec
dec
dec
sti
adc
out
out
out
out
mov
mov
mov
xor
mov
xchg
lock
es
cmc
xchg
xchg
div
shr
call
push
stos
stos
inc
clc
rcl
shrb
push
push
fwait
fwait
ds
hlt
hlt
bound
sub
sub
fdivs
orb
ds
cmp
inc
lret
xchg
rcl
movhps
ret
jecxz
push
or
pop
addl
push
push
mov
test
test
push
push
push
push
nop
push
push
adc
jecxz
jbe
pop
pop
pop
lret
pop
pop
pop
sbb
xchg
or
mov
jmp
dec
cs
push
sbb
adc
inc
inc
mov
cmpsl
xor
cmp
sarl
loop
mov
mov
inc
inc
inc
inc
jno
bound
inc
inc
scas
scas
mov
add
add
rcl
addb
xchg
adc
xor
dec
inc
shlb
and
and
and
and
and
cld
cld
cld
sti
sti
sti
sti
test
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
js
add
fstp
sub
es
xchg
xchg
icebp
icebp
sti
sti
lret
mov
cs
push
push
push
cmp
movsl
sbb
sbb
sub
das
push
push
addr16
stc
stc
in
in
in
in
cmpsb
cmpsb
mov
mov
loopne
andl
and
mov
aam
mov
push
push
jmp
lea
mov
call
int3
int3
int3
int3
int3
jge
lcall
push
lcall
mov
fstp
fstp
fstp
fstp
xchg
cmpsl
cmpsl
popf
gs
imul
inc
inc
inc
inc
inc
inc
inc
sbb
xor
sbb
mov
jle
xchg
xchg
xchg
xchg
mov
cmp
mov
cmp
xorl
push
mov
dec
dec
mov
fcompl
stos
stos
stos
stos
int
bound
out
out
sbb
daa
adcb
sahf
sahf
sahf
sahf
sahf
repnz
loop
add
inc
dec
dec
dec
icebp
icebp
jnp
xor
xchg
xchg
xchg
xchg
mov
pop
pop
pop
pop
js
mov
and
out
pop
pop
pop
imul
xor
pop
dec
dec
sti
sti
sti
das
jnp
jnp
xor
push
push
stc
stc
add
add
aaa
jae
jle
jle
dec
pop
iret
iret
dec
dec
dec
dec
sub
in
in
in
in
in
in
mov
sub
sub
sub
xorl
sub
lret
lret
lret
lret
insl
movsb
cltd
imul
mov
sub
popa
into
hlt
hlt
hlt
hlt
fnstsw
loop,pt
lret
lods
lods
in
in
in
xchg
xchg
xchg
xchg
xchg
lahf
lahf
fsub
loope
mov
sub
push
cmpsl
arpl
dec
dec
addb
or
sbb
ds
inc
inc
inc
inc
cli
cli
test
jl
cmp
jmp
inc
cmpsl
cmpsl
in
jbe
lcall
sbb
sbb
ret
dec
outsb
push
sub
loopne
lods
lods
and
cwtl
cwtl
cwtl
sub
mov
mov
mov
loop
dec
xchg
push
mov
cli
sub
jo
xchg
mov
jg
jg
jg
adc
in
and
leave
push
or
jbe
jbe
pop
pop
pop
pop
pop
enter
daa
daa
xchg
adc
lcall
sub
inc
mov
pop
push
push
push
rcl
lret
and
pop
pop
pop
adc
addb
inc
pusha
pusha
pusha
movsl
in
add
fcomp
xor
movsl
movsl
movsl
cmpb
and
jecxz
jecxz
jecxz
jecxz
scas
scas
scas
scas
lds
je
ja
faddl
inc
sub
pop
jo
jo
jecxz
pop
popf
push
pop
pop
adc
in
jb
call
lret
arpl
jmp
jno
pop
pop
pop
roll
dec
shlb
roll
add
add
inc
add
int3
inc
xchg
add
scas
js
enter
mov
mov
inc
add
pop
add
add
xor
mov
pop
mov
add
add
xchg
jge
add
add
mov
add
push
add
out
aaa
scas
sub
ret
scas
and
shlb
lods
jo
xor
scas
adc
scas
push
add
add
and
jmp
and
pop
adc
lahf
jmp
fwait
xchg
or
iret
add
ja
or
xchg
call
pop
or
loop
push
add
mov
lea
ficomps
add
add
lret
fiadds
mov
fucomp
adc
movl
popa
inc
add
add
adc
cmp
scas
pop
add
adc
dec
add
push
insl
ror
inc
add
jmp
out
fnstsw
aas
add
lret
jge
xorl
add
cmp
aas
xchg
inc
add
pusha
add
scas
mov
or
sub
xchg
xor
add
stc
mov
add
gs
mov
daa
inc
add
add
push
adc
add
ds
cmpb
mov
int
lret
xchg
mov
test
cmp
sub
xor
enter
push
cmp
sti
adc
push
insl
sbb
call
add
lds
enter
add
sbb
add
inc
add
adc
add
pushf
ja
out
lret
stos
push
loopne
movsb
jo
pushf
mov
add
add
pop
add
add
repnz
inc
add
dec
cltd
sub
push
lahf
pop
pop
add
add
add
cmp
xchg
add
aas
and
adc
loopne
das
push
add
add
add
add
push
loop
add
jl
xchg
xor
add
add
mov
add
push
add
add
inc
add
add
cmp
stos
or
fucomi
pop
outsb
add
add
sti
add
ss
sbb
or
add
add
and
push
add
inc
cld
negl
pop
sbb
lahf
cli
stc
int
sub
add
push
and
mov
mov
push
mov
sahf
addr16
out
jae
adc
mov
lock
add
jne
std
jne
pop
add
sahf
mov
mov
add
shll
ja
mov
add
ret
stos
in
aas
and
inc
add
add
add
add
imul
add
add
pop
add
in
rorl
ret
pusha
add
into
and
dec
add
lahf
or
push
add
gs
sub
outsl
and
pop
adc
out
enter
add
pop
push
fisubs
add
stos
loopne
and
xchg
mov
stc
sarl
add
add
and
add
add
push
jnp
jns
lahf
lods
aaa
sbb
cmp
aas
sahf
inc
add
add
fdivrs
test
in
mov
mov
push
adc
add
rcr
jnp
xor
aaa
imul
ljmp
add
test
lock
inc
add
pusha
add
push
gs
xchg
mov
fdivr
mov
subb
repz
cld
push
add
jle
mov
add
mov
xchg
cmpsb
inc
inc
testb
and
aas
jno
add
mov
mov
mov
loop
cmpsb
mov
cmpsl
nop
cmp
fcomip
lds
add
push
sub
sub
ja
add
add
add
insl
pop
xchg
mov
add
fcmovnbe
pop
int3
les
jns
push
je
bound
push
add
add
sub
add
pop
add
cmc
rcrl
xchg
aas
mov
mov
add
push
add
cmp
and
add
add
decb
add
lods
fsubl
adc
mov
cmc
xchg
inc
shlb
lcall
add
add
mov
cmp
iret
out
add
jnp
shll
mov
sub
int
add
mov
sti
bound
lods
inc
inc
add
cmp
mov
add
lret
lods
mov
push
rclb
mov
cwtl
ljmp
add
in
add
dec
pop
xchg
dec
add
xor
stos
cwtl
mov
pop
add
inc
add
mov
in
leave
insl
push
add
add
int
dec
add
adc
push
add
xchg
pop
add
add
push
add
pop
stos
out
mov
add
add
inc
mov
mov
push
add
pop
add
fmull
adc
inc
xor
pop
cmpsl
movsb
mov
gs
inc
add
imul
sbb
inc
add
sub
in
xor
jo
jo
into
iret
pop
pop
add
add
sbb
push
add
push
add
add
add
pop
loopne
popf
pop
fdivl
add
add
sbb
aaa
int3
aaa
mov
add
add
add
andl
push
add
add
sbb
fld
pop
xchg
sarb
je
cmp
sub
cmp
scas
jle
iret
jmp
add
add
shll
mov
add
hlt
testb
pop
add
mov
add
add
sbb
inc
fsubs
add
pop
add
aam
add
add
pop
lea
add
pushf
pop
rol
pop
pushf
add
ret
mov
dec
add
add
lcall
add
add
add
bound
mov
popa
movsl
add
aam
xchg
popa
cmc
loope
arpl
push
sar
jae
cltd
out
add
stos
gs
nop
sahf
xchg
and
mov
scas
enter
popf
mov
add
sti
mov
add
add
test
and
add
xor
fiadds
lcall
test
mov
inc
add
xor
movl
add
aad
fdiv
sti
les
add
lods
xor
add
add
decb
jne
and
jb
mov
add
icebp
dec
cmp
pop
pop
jns
add
pop
add
add
xchg
fwait
iret
mov
rolb
add
pop
inc
add
pushf
sub
push
arpl
stos
mov
inc
add
sti
aaa
pop
lret
add
pop
sub
jb
cli
inc
add
stos
pop
aam
inc
add
xchg
mov
pop
jns
aaa
mov
add
xchg
into
lock
sti
mov
test
or
mov
dec
add
jle
xor
xlat
mov
ret
add
add
sahf
or
test
or
push
in
inc
add
add
inc
loopne
add
push
imul
adc
add
push
add
bound
pop
in
fdivl
gs
cmp
cmc
jns
jp
mov
add
add
or
inc
add
cmpsb
push
shr
lret
testl
in
ret
dec
add
xor
lds
push
add
add
popf
and
add
scas
cltd
outsb
add
push
add
push
mov
movsl
inc
add
aas
add
xchg
xor
xchg
mov
jns
icebp
adc
fidivrl
add
or
imul
adc
jbe
sbb
test
add
cmp
dec
and
push
add
into
pop
add
jp
imul
mov
add
push
add
inc
add
add
push
add
fisttpl
add
add
add
clc
jnp
sub
and
movsl
dec
add
add
cmpsl
ret
dec
add
lret
mov
xchg
adc
or
fadds
add
mov
sbb
pop
push
xor
jae
add
add
add
repnz
jns
jo
xor
movb
hlt
and
cwtl
dec
add
test
mov
sub
mov
lahf
enter
add
imul
add
cmp
das
xor
bound
ja
in
out
add
dec
lea
in
call
or
inc
leave
icebp
jae
cmc
cmpsb
push
add
add
add
sub
stos
repz
in
jl
or
sbb
icebp
pop
xchg
add
add
iret
mov
fwait
jnp
and
aad
mov
or
mov
inc
iret
mov
jp
mov
cmp
sbb
jmp
outsl
push
shlb
iret
adc
inc
add
test
icebp
mov
int3
add
add
add
sbb
jne
icebp
not
loope
fisubrs
popa
arpl
inc
add
addr16
repz
in
add
lds
add
stc
mov
xchg
add
cli
xchg
fistpl
add
repz
test
jb
jo
shll
push
add
add
push
add
mov
jp
xor
sbb
push
add
add
add
add
xor
mov
ds
lods
lahf
or
idivb
xchg
lret
jmp
add
mov
inc
adc
inc
add
lds
inc
add
sbb
mov
add
adc
stc
pop
add
add
out
dec
add
add
sbb
add
pop
adc
cli
les
clc
decl
inc
add
add
add
add
loope
add
pop
add
add
add
loopne
add
add
adc
pushf
push
add
adc
pop
and
inc
insl
dec
dec
jbe
mov
add
xor
mov
adc
add
les
jnp
add
mov
js
std
xchg
stos
or
icebp
mov
add
add
and
dec
add
push
add
aam
into
nop
cmp
jge
in
add
andb
popa
lock
and
xor
outsb
add
push
add
jge
add
add
add
dec
bound
mov
add
add
std
mov
dec
sub
fwait
hlt
and
xchg
pushf
cmpsb
scas
sarb
push
add
outsb
add
add
dec
add
pushf
ja
add
push
jecxz
add
add
push
xor
arpl
fdivl
xchg
add
out
lds
sti
dec
test
sub
xor
or
sbb
jmp
or
lret
movsb
mov
add
stc
sub
mov
sbb
int3
ret
mov
mov
add
adc
cld
cwtl
nop
add
add
jns
pushl
pop
mov
js
mov
add
orl
inc
subb
lock
pop
add
aaa
fisubl
sti
mov
imul
add
cld
fidivrl
add
mov
lret
stc
loope
mov
iret
lea
mov
add
pop
popf
ss
aam
bound
inc
add
mov
lock
sbb
add
or
mov
inc
test
dec
add
add
mov
and
push
in
cmpsb
imul
scas
add
cmpsl
mov
add
xchg
add
add
xchg
mov
add
add
add
pop
adc
je
in
inc
add
add
stc
jae
add
mov
inc
ljmp
pop
add
les
mov
pusha
add
add
cmp
dec
push
lret
mov
mov
mov
mov
jo
xchg
or
inc
lcall
ljmp
int3
fstpl
xlat
mov
add
add
pop
cmp
popf
pop
add
loope
ret
and
sub
add
dec
add
stos
add
add
add
add
xor
cmpl
hlt
pop
jo
idiv
stos
sub
add
outsl
xchg
icebp
push
add
and
jecxz
cwtl
or
or
inc
add
jnp
add
cmp
or
fcmovnbe
sub
add
dec
out
push
inc
ss
mov
adc
popf
sub
rcl
outsl
cmp
xor
add
and
jle
xchg
js
aas
cld
in
add
push
add
in
cmp
mov
cli
adc
xchg
add
test
neg
add
and
mov
jo
mov
rcll
out
mov
add
sti
and
imul
fldenv
repnz
insb
add
sub
in
mov
jmp
add
pop
dec
add
ret
rorl
add
mov
add
and
into
lret
add
out
insb
add
push
add
cmp
push
jnp
ljmp
mov
lock
and
popf
jbe
bound
jbe
je
xor
mov
jo
nop
dec
pop
sbb
cmp
and
outsb
add
add
xchg
or
cli
and
add
add
jb
xor
and
movsl
cmc
jg
lret
dec
dec
inc
add
fdivl
and
repz
add
rolb
push
add
add
fadds
pop
add
push
add
and
xchg
add
add
int
add
fnstenv
add
pop
mov
inc
add
iret
into
shl
cltd
shll
inc
adc
add
cltd
shr
add
mov
adc
push
add
add
insl
jbe
mov
in
xor
call
push
xchg
mov
test
cmp
add
sbb
mov
mov
adc
test
add
mov
test
add
lcall
leave
sbb
out
movsb
or
fdivs
mov
int3
adc
iret
mov
popf
pop
in
pop
add
in
mov
jmp
dec
add
mov
idivl
dec
out
rcll
add
in
ror
sub
mov
gs
adc
cmc
push
add
inc
mov
imul
outsl
test
add
mov
inc
fsub
pshufb
js
xor
and
push
xor
mov
nop
hlt
shr
jp
addr16
out
subl
push
aad
xor
add
sub
cmp
add
jecxz
andl
test
pop
add
push
add
adc
int3
cmp
xchg
pop
add
lods
lcall
mov
add
mov
idivl
inc
out
sahf
fld
push
cmc
rclb
cltd
cmpsb
add
add
orl
add
stos
xchg
adc
xchg
xor
lcall
add
xor
test
mov
add
inc
sti
pop
mov
bound
call
jp
push
add
fistl
mov
adc
imul
out
push
push
add
mov
or
adc
sarb
loope
into
dec
push
add
jmp
add
pusha
add
test
scas
bound
or
mov
or
cwtl
mov
and
add
add
pop
push
or
pop
and
jae
icebp
add
or
sbb
js
pop
cmp
les
add
into
pop
xchg
fists
repnz
add
add
add
imul
inc
inc
sbbl
lcall
shl
add
inc
add
add
add
movsb
addr16
cltd
add
pop
add
xor
xchg
clc
add
inc
icebp
gs
icebp
cltd
and
jmp
pop
xor
dec
out
mov
add
add
data16
into
mov
sub
mov
dec
cmp
in
add
dec
cmp
jnp
into
cmp
inc
inc
in
ljmp
add
xor
add
sahf
push
add
cltd
cmp
mov
out
add
fcomip
mov
int3
cmp
in
out
cmp
inc
add
daa
cmp
mov
out
add
add
out
jge
add
notb
pop
jp
or
imul
add
lods
out
mov
mov
add
mov
ret
jne
cmpb
xchg
lds
cmp
ljmp
negb
add
add
mov
cmpsb
aad
add
sahf
sub
mov
loop
cmpl
sahf
cmp
outsb
add
jns
add
mov
add
jb
mov
gs
filds
nop
cmp
xor
dec
inc
add
adc
dec
add
in
push
add
dec
add
in
mov
and
lea
add
jg
add
mov
xor
jno
dec
cli
add
fistpll
xchg
repnz
pusha
add
jge
xchg
ja
jmp
and
xlat
lret
popf
arpl
pop
sldt
mov
add
add
fdivl
test
in
lret
cli
je
fldenv
loope
push
add
dec
add
add
jge
add
rcrb
mov
ret
add
add
movsl
xor
aas
cwtl
outsb
add
and
sarl
add
lock
jae
lahf
les
push
add
add
or
push
in
xchg
incb
aas
adc
lret
add
or
aas
dec
push
add
xor
or
in
pop
rcll
xchg
lods
pop
add
push
bound
in
ljmp
mov
jmp
mov
add
push
in
js
jne
movsl
pop
xchg
xor
xchg
pop
data16
cmpsb
push
sbb
flds
ljmp
add
xor
aas
icebp
add
mov
mov
adc
cmp
xchg
aaa
pop
divl
lea
add
fistpl
add
xchg
add
add
repnz
push
add
add
sub
push
fcmovnu
neg
xchg
adc
add
add
int3
ret
or
pop
push
lods
cmp
jae
push
add
popa
add
mov
clc
imulb
lret
loope
push
add
add
add
cmpsb
cmpsb
fnsave
xchg
rolb
or
inc
add
das
std
fdivl
stos
jg
popf
es
cmpl
adc
cmpsb
aam
add
aas
push
jnp
mov
lods
pop
lret
push
add
pop
or
add
iret
sub
add
add
sbb
jne
mov
add
fnsave
mov
mov
add
fsubr
add
adc
add
jbe
pop
add
dec
rorb
negl
mov
aas
dec
loope
add
xchg
add
out
add
into
and
lods
fcoms
inc
add
add
add
aas
fmull
add
push
xchg
fxch
pushf
xor
movsb
jnp
add
add
fwait
mov
orl
test
push
cmp
cmp
mov
add
xchg
or
out
sbb
mov
insb
add
push
mov
add
add
mov
fdivr
cmp
dec
imul
lods
out
or
int3
push
add
add
mov
sahf
lret
lds
leave
shll
push
ret
mov
jbe
bound
out
jl
cwtl
out
push
add
jmp
add
mov
add
dec
int
sub
mov
inc
aam
mov
mov
jno
pop
data16
mov
std
inc
inc
lret
pop
add
sbb
adc
xlat
cmpsl
scas
les
in
cmc
push
fwait
add
inc
sub
cmc
mov
idiv
inc
add
add
lea
mov
add
sub
add
xchg
lds
ret
add
add
pop
add
cmc
push
add
xor
ret
fdivs
xchg
sub
mov
scas
xchg
jl
sub
aaa
push
add
push
add
fsubrs
add
sbb
adc
dec
add
dec
lcall
push
add
adc
filds
add
scas
mov
add
add
add
xor
pop
add
sbb
add
ret
add
sub
lods
inc
add
stc
pop
add
mov
js
test
outsl
insl
in
add
jecxz
mov
fsubrp
cmp
push
out
lock
int
dec
push
push
xchg
bound
mov
movsl
sub
add
mov
fld
jg
std
add
add
mov
lret
rclb
sbb
adc
lret
add
mov
add
add
add
add
ljmp
les
mov
test
or
test
add
or
lcall
add
add
mull
hlt
push
add
pop
addr16
add
fstpt
xor
pop
adc
and
cmp
add
xchg
fisubrs
sub
pop
fmuls
fcompl
nop
insb
add
cmp
and
gs
fmull
push
mov
xchg
rcll
dec
cmp
stc
xchg
mov
push
xchg
dec
and
scas
add
pop
outsb
add
add
dec
add
ljmp
add
add
inc
lcall
xor
fwait
aam
add
or
mov
push
add
cwtl
stos
andl
sbb
mov
test
jne
out
add
subl
mov
scas
stc
lcall
adc
clc
push
add
stos
ror
add
sbb
add
leave
inc
add
xchg
inc
add
int3
fimuls
add
add
push
add
xor
push
xchg
mov
pop
sbbb
push
add
add
add
jp
pop
push
add
loop
add
push
cmpsl
mov
dec
je
negb
pop
lea
rolb
mov
pop
add
pushf
jecxz
jg
add
inc
add
sbb
pop
addr16
add
and
adc
jb
enter
mov
bound
sahf
pop
pop
cmp
test
adc
pop
out
mov
or
xor
jne
add
sub
inc
add
mov
aas
dec
add
inc
push
add
ja
cmp
pushf
mov
icebp
out
mov
add
add
shll
add
ftst
cwtl
scas
movsb
lcall
stos
data16
std
mov
add
xchg
add
fcomi
xlat
sarb
rolb
sub
cmc
call
cmp
mov
add
or
mov
aam
cmc
sbb
aam
mov
add
dec
jp
cld
leave
pop
jp
pop
add
xor
imul
inc
add
sub
cmp
xlat
das
dec
shll
dec
mov
in
pop
inc
outsl
das
adc
enter
outsl
xchg
pop
sbb
adc
lods
pop
daa
or
dec
sbb
out
pop
or
in
sub
movl
clc
push
lea
call
sub
add
add
and
mov
cmp
je
mov
push
push
push
cld
call
test
jne
dec
add
mov
add
push
push
push
push
push
call
test
jne
xor
cld
push
es
lea
movl
push
push
push
call
push
cmp
lea
jne
movzbl
or
add
mov
add
not
cld
xor
test
jne
call
xor
mov
add
ret
xor
mov
mov
stc
mov
bnd
cmp
mov
mov
mov
inc
or
lea
lea
add
xchg
shr
xchg
lock
and
sub
cld
jne
push
mov
jne
roll
lahf
jno
and
lds
and
jg
pushf
or
add
loopne
lret
sub
push
add
dec
add
xchg
pop
ret
add
cmp
add
inc
add
add
cmc
loop
lock
pop
add
sarb
and
in
xchg
ja
xlat
inc
xor
lods
push
sbb
pop
add
fisubrl
dec
add
and
rcl
dec
add
dec
add
add
add
cmc
add
push
out
jae
aam
mov
xor
jle
or
xchg
je
pop
dec
add
dec
add
mov
inc
xchg
and
les
mov
cmp
add
loop
add
mov
stos
adcb
pop
and
add
mov
add
iret
sub
add
add
scas
xor
je
fiaddl
lock
fcomp
mov
movsb
out
cmp
pop
pushf
or
lret
mov
insb
add
add
scas
nop
mov
arpl
mov
xor
ret
outsl
adc
sbb
out
arpl
mov
or
adc
fdivs
mov
mov
add
fistl
xor
xchg
shrl
popf
jns
out
or
mov
pop
gs
leave
gs
add
aas
inc
add
add
add
push
pop
xchg
lods
clc
push
orb
lcall
sub
xor
test
add
nop
adc
mov
jge
adc
nopl
cmp
pushf
pop
xor
pop
sbb
xlat
pop
add
add
test
inc
fnstsw
dec
add
and
pop
in
jnp
add
mov
add
popf
imul
fs
ret
les
add
sti
adc
adc
dec
add
mov
and
mov
push
xlat
fisttpll
inc
add
jmp
shlb
xchg
cld
add
push
add
dec
and
add
mov
inc
add
add
jne
fidivs
sarl
cmp
cwtl
cmp
fdivs
add
jb
adc
addl
add
xchg
mov
inc
adc
lds
mov
jo
divb
das
sbb
xlat
sbb
sbb
adc
ljmp
gs
cltd
dec
add
jecxz
jo
int3
xor
call
add
xchg
and
cmc
cltd
idivl
aas
inc
add
data16
and
xor
push
rcl
in
adc
pop
out
inc
loopne
mov
add
xchg
xchg
jno
sub
lret
mov
enter
arpl
add
hlt
mov
mov
cmp
sub
pop
daa
pop
add
lret
inc
inc
add
add
xchg
loopne
sahf
cmp
rcll
add
clc
mov
aad
ret
incb
add
add
mov
add
sub
push
add
xchg
add
jb
outsl
cwtl
push
add
aaa
or
scas
std
pusha
add
add
test
insl
push
add
add
aaa
inc
add
cmp
enter
push
add
popa
mov
mov
lods
mov
push
pop
popf
cltd
out
sbb
cld
fisttpl
lret
and
mov
push
add
sub
into
xchg
cmp
push
add
rcrl
push
add
pop
add
xchg
adc
rol
pop
jle
adc
data16
add
add
lds
enter
add
iret
stos
roll
xchg
sbb
xor
add
sub
jbe
scas
repnz
add
scas
std
adc
add
pop
insb
add
daa
nop
add
add
pop
add
dec
push
add
jb
lcall
mov
cmovle
push
add
xchg
mov
cmp
arpl
pop
lret
pop
jae
add
test
add
lods
scas
push
sbb
and
mov
rorb
sub
stc
ljmp
lods
jnp
pop
add
sub
data16
jns
ljmp
repz
add
out
arpl
add
addl
pop
insl
fsub
lock
stos
jns
repnz
dec
insb
add
and
dec
add
aaa
mov
int
cmp
inc
add
add
push
in
enter
add
add
cmp
fnsave
shll
sarb
in
imul
adc
add
add
sub
jge
mov
repz
mov
add
add
pop
pop
sbb
incl
add
add
jecxz
add
add
sub
xchg
push
add
in
add
add
add
mov
cmp
xchg
int3
lcall
test
leave
push
idivl
add
adc
mov
dec
add
testl
fstps
or
lret
addl
add
scas
and
mov
push
hlt
add
bound
mov
lea
loope
in
add
popa
das
cld
sub
inc
add
xor
add
call
push
add
jno
sbb
add
add
movsb
mov
dec
in
sbb
xchg
mov
add
xor
sub
push
addl
lcall
inc
in
adc
lods
mov
dec
mov
dec
lahf
jmp
in
adc
xor
inc
add
mov
test
add
je
inc
js
push
mov
xor
jmp
call
in
jbe
sbb
add
jge
add
es
idivl
xor
lods
jg
mov
sub
inc
add
fwait
clc
sbb
push
add
js
and
mov
cltd
and
push
mov
add
test
push
add
lods
lret
in
dec
add
push
add
inc
add
add
add
sub
test
add
mov
pop
xchg
jbe
clc
inc
push
add
push
and
lds
icebp
outsl
jo
ja
inc
add
inc
add
loope
popa
clc
inc
lcall
imul
xchg
sbb
and
adc
cmp
pop
add
add
add
inc
add
mov
add
and
add
add
add
flds
add
mov
mov
add
lahf
stos
add
xor
hlt
outsl
shll
mov
gs
add
add
jg
jb
inc
add
add
pop
loop
jnp
fidivrs
gs
dec
add
sbb
jecxz
add
movl
std
cltd
jns
push
in
shlb
adc
incb
add
or
mov
das
mov
shlb
mov
push
in
add
mov
shll
pop
js
inc
add
add
inc
add
mov
jo
xchg
aam
add
imul
ja
add
movsb
mov
pop
scas
in
test
inc
add
dec
js
jmp
push
add
pop
enter
or
add
mov
lea
stos
push
add
cld
lds
mov
and
or
add
mov
add
leave
fistps
and
jb
sbb
xor
or
lcall
add
adc
add
rorb
xchg
pop
sahf
movsl
cmp
fdivs
in
out
loope
insb
add
xchg
addr16
xor
xchg
add
push
add
jg
add
lods
push
je
or
add
sbb
add
call
dec
das
std
mov
xchg
pop
add
pop
add
out
lret
push
rcr
frstor
add
ss
aad
add
stos
clc
jl
addr16
or
scas
rcrl
mov
mov
sub
mov
insl
pop
repz
add
sbb
mov
add
dec
xchg
adc
xchg
jg
or
addb
sbb
sub
adc
mov
add
arpl
add
push
add
aas
or
and
add
add
mov
push
das
in
hlt
gs
or
pop
add
fstpt
sahf
and
sti
mov
mov
ja
in
jae
sbb
and
jmp
add
lret
xorb
mov
aas
add
dec
add
add
fxch
bound
sbb
test
add
dec
mov
add
add
mov
add
add
push
add
sub
lea
mov
ror
add
das
loope
add
stos
nop
inc
add
fidivrs
add
add
inc
xchg
ffree
int3
pop
add
mov
inc
add
jo
stos
cmpsl
fucom
lret
and
fiaddl
dec
add
std
push
mov
add
pop
jns
add
cmp
cmpsl
ss
ja
pop
mov
lahf
add
jmp
add
stos
push
add
sbb
pop
out
add
decb
add
jmp
fistpl
dec
ljmp
mov
cmp
push
add
adc
mov
or
das
dec
add
adc
mov
loope
mov
cmp
in
inc
add
imul
pop
add
add
jp
inc
add
aam
ret
stc
cmp
jp
cmp
lret
add
and
mov
fabs
loop
in
ret
xor
xchg
jp
xor
pop
scas
push
add
leave
adc
call
push
add
out
add
xor
loope
add
ret
fwait
add
push
add
out
mov
movsb
cmp
in
add
lret
add
xchg
mov
insl
xor
mov
add
loop
add
pop
sbb
cmp
mov
xchg
cs
in
aas
sub
mov
sub
fsubl
mov
fisubs
imul
jne
inc
mov
cli
icebp
or
xchg
dec
dec
add
add
add
lods
addb
aas
jbe
frstor
dec
and
add
or
mov
mov
cmp
fnstcw
add
add
cmc
call
cmp
int3
or
sbb
add
xchg
scas
sbb
sub
mov
xor
je
mov
sub
mov
jb
iret
pop
add
sub
int3
adcl
xor
mov
inc
add
add
mov
push
or
cld
ret
add
lock
xchg
dec
add
pop
add
or
or
sub
sbb
loopne
add
clc
and
imul
add
jne
andl
out
jne
sbb
add
xor
fmul
gs
add
add
cmc
mov
add
push
add
xor
and
push
mov
add
shlb
icebp
loopne
add
mov
add
lds
add
add
push
pop
add
add
jge
and
mov
pop
add
aam
imul
roll
lret
sbb
add
dec
add
xor
popf
out
ret
or
push
and
sahf
push
add
add
add
inc
mov
movsl
adc
in
test
dec
in
xchg
ds
lods
rolb
adc
pop
add
add
mov
jecxz
and
dec
add
imull
xchg
add
xchg
mov
rcll
pmaxsw
test
mov
xor
add
jl
subb
pop
add
push
add
popa
aas
mov
movsl
mov
cmp
cmpsb
stos
jle
call
ret
add
loopne
add
inc
jmp
dec
leave
add
push
add
mov
adc
mov
cltd
xchg
jnp
add
jg
test
add
add
or
enter
mov
add
xlat
pop
add
add
add
sub
pop
add
shr
add
pop
out
call
add
xchg
pop
loope
add
lahf
insb
add
stos
dec
add
out
add
add
lcall
and
pop
pop
xchg
in
push
mov
push
add
adc
insl
jns
faddl
popa
addl
sub
add
jo
mov
xchg
repnz
add
add
aas
mov
mov
sbb
pop
cmpsb
in
xlat
or
test
add
add
add
xor
insb
add
add
or
inc
add
sbb
jne
add
mov
xchg
jle
add
mov
add
mov
imul
xchg
hlt
mov
sbb
pop
add
imul
xor
inc
add
xchg
xchg
adc
jno
push
add
rcl
xchg
add
stos
icebp
lods
xor
jo
les
add
xor
scas
imul
int3
sub
mov
jecxz
addr16
test
mov
jne
add
in
xor
pop
add
rorb
out
dec
lea
cmpsl
xchg
negl
add
sub
loopne
xchg
test
pop
sbb
push
add
out
clc
out
cmp
clc
xchg
test
cwtl
mov
add
in
lcall
or
orb
jge
xor
cli
ja
outsl
rcrb
adc
out
insb
add
dec
rcll
popf
and
fiaddl
or
mov
mov
add
insl
add
add
fwait
inc
das
xor
xchg
das
cmpsl
adc
in
fldt
inc
add
call
add
ljmp
mov
test
add
dec
test
sbb
add
add
add
add
sub
inc
add
es
outsb
add
or
notb
add
xchg
pop
add
push
cmpsb
aad
mov
add
add
mov
add
mov
add
inc
fnstenv
out
dec
add
add
int
add
mov
mov
add
in
xchg
or
sub
xor
mov
xchg
cwtl
xchg
and
mov
out
add
ret
or
jo
xor
dec
popf
cmp
dec
mov
add
out
clc
repnz
nop
nop
jae
roll
add
popa
add
mov
add
hlt
jae
and
movb
add
out
add
cmp
add
sbb
sti
nop
push
mov
leave
nop
jmp
add
rcrl
push
out
push
push
mov
xchg
ret
cmp
arpl
xor
add
xorb
nop
nop
jae
add
add
xchg
add
add
xchg
sbb
jl
inc
add
add
add
iret
rcrl
addr16
add
add
add
add
add
mov
add
mov
xchg
ret
add
add
add
mov
mov
xabort
cld
nop
nop
jae
pop
add
push
std
add
cmc
cmp
stos
sti
ret
add
and
xor
dec
add
and
or
add
std
cli
push
mov
clc
repnz
nop
nop
jae
inc
add
add
add
push
dec
add
cli
push
add
les
call
and
ja
mov
xchg
lods
add
clc
repnz
nop
nop
jae
add
jmp
mov
add
add
test
nop
push
mov
leave
nop
jmp
xchg
add
pop
add
stc
mov
clc
repnz
nop
nop
jae
in
test
add
sub
jnp
pop
nop
push
mov
leave
nop
jmp
add
add
popa
add
add
and
and
mov
xchg
ret
aam
add
dec
add
add
add
add
add
push
add
push
mov
xchg
ret
jmp
add
mov
add
cmc
add
push
mov
xchg
ret
hlt
pop
add
jl
add
add
mov
clc
mov
clc
repnz
nop
nop
jae
push
iret
sub
add
sti
xorl
clc
repnz
nop
nop
jae
mov
or
or
add
repnz
nop
nop
jae
add
pop
add
pop
inc
mov
push
mov
xchg
ret
mov
add
and
add
fisttpll
add
sbb
shrb
mov
clc
repnz
nop
nop
jae
popa
or
sub
sub
frstor
ja
clc
repnz
nop
nop
jae
add
or
add
dec
add
add
fistpl
clc
repnz
nop
nop
jae
repnz
push
xor
cmc
jmp
push
and
add
clc
repnz
nop
nop
jae
add
add
sub
jle
outsl
test
nop
push
mov
leave
nop
jmp
or
sbb
xor
xor
clc
repnz
nop
nop
jae
iret
jmp
add
roll
out
jbe
shl
clc
repnz
nop
nop
jae
add
add
leave
push
frstor
and
inc
inc
mov
clc
repnz
nop
nop
jae
push
dec
pop
jmp
hlt
add
mov
repnz
nop
nop
jae
add
fisttpll
mov
xchg
cmp
adcb
jmp
add
pop
inc
add
cmp
outsb
add
xchg
call
inc
add
std
pop
add
push
test
add
add
add
add
add
repnz
nop
nop
jae
out
add
mov
add
push
nop
push
mov
leave
nop
jmp
test
rorl
hlt
repnz
dec
mov
add
clc
repnz
nop
nop
jae
movl
jmp
dec
add
mov
add
pop
push
mov
xchg
ret
sbb
add
add
add
xchg
inc
add
or
or
add
add
add
fisubl
add
out
add
in
add
add
mov
dec
jmp
or
xchg
mov
push
mov
xchg
ret
inc
test
sar
add
push
clc
repnz
nop
nop
jae
add
cmc
roll
and
leave
in
rorl
mov
xchg
ret
dec
add
iret
add
add
hlt
add
jmp
jmp
pop
add
add
es
mov
push
aam
and
sbb
cmp
ret
add
mov
cmc
add
sbb
iret
add
add
clc
repnz
nop
nop
jae
add
add
decl
push
mov
xchg
ret
add
add
push
xchg
mov
add
push
clc
repnz
nop
nop
jae
sbb
add
jmp
add
add
rcll
nop
jae
xchg
add
add
add
add
mov
test
push
mov
leave
nop
jmp
xchg
popa
add
and
hlt
push
add
rep
clc
repnz
nop
nop
jae
hlt
add
aam
add
push
push
mov
xchg
ret
and
add
aam
sbb
add
add
gs
nop
push
mov
leave
nop
jmp
add
xor
sub
repnz
nop
nop
jae
add
dec
add
jmp
aam
sub
xor
clc
repnz
nop
nop
jae
add
sub
add
cwtl
add
mov
add
in
jne
clc
repnz
nop
nop
jae
sub
add
add
push
mov
xchg
ret
xchg
and
add
add
iret
cwtl
add
push
clc
repnz
nop
nop
jae
add
add
xchg
rcrl
sub
sti
add
nop
push
mov
leave
nop
jmp
mov
add
xor
clc
repnz
nop
nop
jae
movl
add
add
rolb
mov
push
mov
clc
repnz
nop
nop
jae
add
add
idivb
iret
mov
push
mov
xchg
ret
roll
add
add
mov
nop
nop
jae
add
and
mov
aam
hlt
fldl
dec
add
dec
das
add
clc
repnz
nop
nop
jae
xor
and
and
hlt
jmp
iret
test
cld
nop
nop
jae
hlt
mov
add
jmp
mov
add
mov
nop
push
mov
leave
nop
jmp
idivb
add
flds
add
inc
xchg
clc
repnz
nop
nop
jae
dec
add
pop
add
add
jbe
or
push
mov
leave
nop
jmp
xor
or
cli
std
add
fistpl
clc
repnz
nop
nop
jae
sbb
add
out
add
add
add
add
add
repnz
nop
nop
jae
add
out
mov
sbb
add
nop
push
mov
leave
nop
jmp
xchg
add
roll
or
add
add
inc
add
fwait
or
add
nop
jmp
add
add
jmp
add
nop
push
mov
leave
nop
jmp
dec
add
pop
pop
add
fldl
add
pushf
mov
push
mov
xchg
ret
pop
popa
add
cli
add
add
aam
xor
jns
add
clc
repnz
nop
nop
jae
xchg
add
or
lds
in
dec
add
imul
lcall
add
cmp
cwtl
pop
add
not
clc
repnz
nop
nop
jae
add
add
add
add
push
mov
xchg
ret
jmp
jmp
add
pop
add
add
mov
xchg
ret
add
add
add
into
in
inc
clc
repnz
nop
nop
jae
or
add
add
popa
flds
add
out
add
add
add
add
add
add
mov
nop
push
mov
leave
nop
jmp
pop
iret
sub
fstps
inc
cmp
nop
push
mov
leave
nop
jmp
push
roll
add
popa
add
jmp
add
in
add
add
clc
repnz
nop
nop
jae
add
xchg
add
iret
sub
bound
or
repnz
nop
nop
jae
add
push
add
mov
cmp
mov
add
clc
repnz
nop
nop
jae
fstps
arpl
jbe
add
mov
test
push
mov
xchg
ret
sbb
sub
add
cmc
test
iret
leave
popa
xor
clc
repnz
nop
nop
jae
pop
add
xor
and
and
add
repnz
nop
nop
jae
divb
add
test
repnz
nop
nop
jae
add
out
add
nop
push
mov
leave
nop
jmp
add
add
movl
enter
cld
nop
nop
jae
add
pop
xlat
add
push
popl
clc
repnz
nop
nop
jae
add
add
movl
xchg
repnz
nop
nop
jae
testb
cmp
cmc
mov
add
call
push
mov
xchg
ret
rcrl
jmp
add
repnz
repnz
nop
nop
jae
jmp
add
add
add
add
adc
sahf
fcoms
add
push
inc
add
std
add
add
xchg
add
add
insb
add
pop
push
mov
xchg
ret
xchg
and
and
add
add
add
outsb
and
repnz
nop
nop
jae
jmp
sbb
add
add
xor
repnz
nop
nop
jae
sbb
pop
xor
dec
dec
add
add
mov
in
leave
nop
jmp
test
test
add
add
add
nop
push
mov
leave
nop
jmp
add
xor
add
add
mov
clc
repnz
nop
nop
jae
add
flds
xchg
add
jo
mov
clc
repnz
nop
nop
jae
test
out
pop
add
push
loopne
mov
xchg
ret
pop
add
push
jl
add
add
and
mov
cld
nop
nop
jae
add
add
sbb
rol
add
push
add
hlt
add
ret
clc
repnz
nop
nop
jae
add
add
jmp
mov
std
cwtl
push
mov
jge
leave
clc
repnz
nop
nop
jae
add
or
std
add
jne
nop
push
mov
leave
nop
jmp
mov
testb
call
clc
repnz
nop
nop
jae
add
push
or
add
test
adc
cld
nop
nop
jae
add
pop
sub
mov
lock
push
sbb
bnd
add
mov
aam
dec
add
pop
add
add
jno
ret
push
mov
xchg
ret
testb
sub
sub
flds
jbe
push
push
mov
xchg
ret
add
add
mov
and
add
add
stos
push
mov
xchg
ret
cwtl
roll
add
popa
add
jg
clc
repnz
nop
nop
jae
add
add
divb
popa
pop
push
mov
xchg
ret
push
fxch
add
mov
roll
mov
add
repnz
nop
nop
jae
mov
movl
fwait
clc
repnz
nop
nop
jae
dec
dec
fisttpll
and
arpl
mov
lret
clc
repnz
nop
nop
jae
add
pop
jl
add
mov
push
mov
xchg
ret
add
cwtl
push
flds
add
cmc
add
les
test
add
nop
jmp
inc
add
mov
add
clc
repnz
nop
nop
jae
push
add
in
add
push
add
mov
clc
repnz
nop
nop
jae
add
add
add
add
mov
leave
nop
jmp
add
add
push
add
add
mov
jp
add
add
add
jl
fldl
add
rclb
pop
inc
add
add
sbb
pop
sbb
jl
add
lock
pop
push
clc
repnz
nop
nop
jae
add
xor
or
mov
aam
pop
pusha
push
mov
xchg
ret
xlat
add
cmp
add
xor
jmp
jl
into
adc
cmp
scas
pop
push
push
mov
xchg
ret
repnz
xchg
sbb
push
add
add
cld
nop
nop
jae
or
fldcw
add
aam
push
add
clc
repnz
nop
nop
jae
push
add
pop
add
pop
mov
clc
repnz
nop
nop
jae
add
and
aam
incl
aam
xor
dec
add
aam
add
add
mov
add
in
hlt
nop
mov
xchg
cmpsl
xchg
mov
clc
adc
add
add
xchg
test
mov
nop
push
mov
leave
nop
jmp
popa
dec
pop
push
xor
mov
fld1
clc
repnz
nop
nop
jae
aam
add
add
push
add
mov
xchg
ret
iret
add
xchg
xlat
add
add
xlat
pop
lea
nop
push
mov
leave
nop
jmp
es
add
or
and
push
clc
repnz
nop
nop
jae
add
mov
inc
roll
adc
pop
push
nop
push
mov
leave
nop
jmp
add
roll
add
jl
fld1
push
mov
xchg
ret
xchg
add
add
add
add
add
stos
pop
clc
repnz
nop
nop
jae
std
dec
and
add
dec
sbb
add
nop
push
mov
leave
nop
jmp
hlt
add
mov
add
pop
imul
nop
push
mov
leave
nop
jmp
fxch
add
mov
mov
mov
xor
out
add
sub
nop
nop
jae
add
add
mov
add
mov
clc
repnz
nop
nop
jae
dec
add
add
leave
roll
xor
clc
repnz
nop
nop
jae
popa
add
pop
sub
add
leave
sub
add
mov
js
testb
lds
andl
xchg
and
popf
add
into
in
lds
movsb
in
mov
clc
repnz
nop
nop
jae
push
add
dec
add
jge
add
add
add
popa
add
add
loop
add
mov
nop
push
mov
leave
nop
jmp
add
popa
mov
std
add
mov
clc
repnz
nop
nop
jae
pop
arpl
xor
neg
sbb
clc
repnz
nop
nop
jae
add
or
add
sbb
rcrb
mov
xchg
ret
dec
add
add
das
push
clc
repnz
nop
nop
jae
push
add
je
sub
repnz
nop
nop
jae
sub
mov
das
pushl
push
mov
xchg
ret
jmp
iret
add
sub
add
and
push
mov
xchg
ret
add
mov
iret
or
repnz
nop
nop
jae
add
add
add
leave
add
repnz
nop
nop
jae
xchg
add
cwtl
dec
add
add
subl
jae
fisttpll
add
add
jge
clc
repnz
nop
nop
jae
add
xor
and
cwtl
sbb
xor
nop
nop
jae
cmc
pop
and
and
out
add
add
ret
push
clc
repnz
nop
nop
jae
add
push
mov
rcll
mov
cmp
ret
arpl
xor
iret
add
jmp
call
clc
repnz
nop
nop
jae
add
add
dec
iret
push
add
push
mov
xchg
ret
add
xor
and
or
xchg
out
mov
nop
push
mov
leave
nop
jmp
std
sbb
mov
hlt
in
xlat
mov
jmp
nop
nop
jae
rcr
xchg
mov
movl
mov
clc
repnz
nop
nop
jae
test
add
xchg
fldenv
bound
rcrl
nop
jae
xchg
mov
xchg
add
dec
push
add
dec
clc
repnz
nop
nop
jae
aam
add
add
push
add
push
push
mov
xchg
ret
add
test
sbb
aaa
subl
push
mov
xchg
ret
add
repnz
add
add
add
dec
push
clc
repnz
nop
nop
jae
jmp
leave
add
xchg
add
ljmp
nop
jae
flds
add
add
pop
push
popa
add
push
jae
cld
nop
nop
jae
add
sub
cwtl
xchg
add
add
add
pop
nop
push
mov
leave
nop
jmp
cli
add
mov
or
xchg
inc
add
and
and
add
add
add
mov
clc
repnz
nop
nop
jae
dec
cmc
add
xlat
add
sbb
add
and
jmp
xchg
add
dec
popf
push
add
inc
add
add
add
testl
add
repnz
nop
nop
jae
sub
add
add
mov
clc
repnz
nop
nop
jae
add
add
dec
add
sbb
enter
and
repnz
nop
nop
jae
pop
add
add
mov
add
call
nop
push
mov
leave
nop
jmp
add
fldl
add
popf
je
clc
repnz
nop
nop
jae
pop
test
add
push
je
jb
push
mov
leave
nop
jmp
testb
in
add
add
jp
jg
clc
repnz
nop
nop
jae
add
pop
add
add
sbb
and
mov
xchg
ret
add
in
add
xchg
repnz
aam
push
add
mov
xchg
ret
cmp
cli
add
sub
and
xchg
roll
push
add
cld
nop
nop
jae
add
xor
add
add
add
jae
inc
or
repnz
nop
nop
jae
add
movl
jmp
int
nop
push
mov
leave
nop
jmp
mulb
add
add
add
add
add
cld
nop
nop
jae
rorl
jmp
pop
add
add
clc
repnz
nop
nop
jae
jmp
es
add
nop
push
mov
leave
nop
jmp
and
sub
or
cmc
cwtl
add
es
clc
repnz
nop
nop
jae
add
std
add
dec
dec
pop
add
push
clc
repnz
nop
nop
jae
in
add
or
add
xlat
add
dec
cmpsl
sub
clc
repnz
nop
nop
jae
iret
mov
add
aam
push
add
clc
repnz
nop
nop
jae
add
and
add
idiv
push
add
sub
add
repnz
nop
nop
jae
repnz
pop
xchg
add
add
add
add
nop
push
mov
leave
nop
jmp
and
jbe
mov
popa
xchg
rcrl
add
add
add
add
add
add
std
fwait
clc
repnz
nop
nop
jae
xchg
dec
sbb
push
sbb
or
add
movswl
clc
repnz
nop
nop
jae
or
push
add
sbb
cmp
jg
adc
repnz
nop
nop
jae
and
add
add
add
test
in
add
clc
repnz
nop
nop
jae
add
add
add
push
mov
leave
nop
jmp
test
and
add
hlt
add
xchg
or
mov
push
mov
xchg
ret
add
add
add
jmp
add
rcll
nop
nop
jae
add
xlat
add
add
aaa
add
clc
repnz
nop
nop
jae
add
cli
hlt
leave
movl
add
nop
push
mov
leave
nop
jmp
test
add
in
and
xchg
add
nop
push
mov
leave
nop
jmp
aam
es
and
cli
or
and
pop
inc
add
add
and
add
add
add
nop
push
mov
leave
nop
jmp
or
dec
add
add
sub
out
je
nop
push
mov
leave
nop
jmp
iret
roll
inc
mov
stc
fwait
clc
repnz
nop
nop
jae
hlt
add
add
dec
popa
pop
add
jne
clc
repnz
nop
nop
jae
push
add
add
cli
and
add
add
push
clc
repnz
nop
nop
jae
mov
add
cmc
cmp
jl
dec
divb
pop
cmp
repnz
nop
nop
jae
add
add
push
es
add
pop
add
push
push
mov
xchg
ret
es
iret
add
add
mov
fld1
push
mov
xchg
ret
pop
add
pop
add
add
scas
int
push
mov
xchg
ret
roll
xacquire
add
pop
add
and
pusha
nop
push
mov
leave
nop
jmp
add
add
hlt
mov
dec
inc
call
clc
repnz
nop
nop
jae
rcrl
add
or
and
add
clc
repnz
nop
nop
jae
add
roll
add
repnz
pop
dec
add
add
cmp
cmpsb
push
add
cmp
xor
iret
out
add
jl
mov
mov
add
repnz
nop
nop
jae
jl
popa
fldcw
add
or
mov
xchg
ret
fnstenv
add
repnz
xlat
pop
clc
repnz
nop
nop
jae
jl
jmp
cli
add
add
add
and
mov
clc
repnz
nop
nop
jae
add
add
add
std
add
push
push
mov
xchg
ret
sub
or
add
and
add
sub
nop
push
mov
leave
nop
jmp
cwtl
dec
pop
frstor
arpl
mov
push
or
repnz
nop
nop
jae
std
aam
xchg
mov
pusha
add
repnz
nop
nop
jae
or
add
les
push
mov
xchg
ret
sbb
add
test
cli
add
xchg
lods
loop
add
nop
nop
jae
pop
jbe
add
add
add
add
clc
repnz
nop
nop
jae
pop
add
test
cmc
add
test
sbb
mov
leave
nop
jmp
add
pop
stos
rep
clc
repnz
nop
nop
jae
dec
add
fnstenv
xchg
push
shl
or
add
clc
repnz
nop
nop
jae
add
sbb
cmp
mov
xchg
ret
add
add
iret
add
add
add
xchg
clc
repnz
nop
nop
jae
add
add
hlt
xlat
add
add
mov
push
mov
xchg
ret
rcrl
pop
push
arpl
add
jnp
test
sbb
add
repnz
nop
nop
jae
add
flds
add
pop
or
mov
add
nop
push
mov
leave
nop
jmp
dec
add
add
inc
arpl
sbb
lock
incl
leave
mov
cli
and
sbb
or
xchg
and
clc
out
xor
clc
repnz
nop
nop
jae
push
add
add
xchg
ljmp
clc
repnz
nop
nop
jae
mov
xchg
pop
or
sbb
repnz
nop
nop
jae
add
pop
add
mov
add
inc
add
clc
repnz
nop
nop
jae
add
mov
add
test
add
nop
jmp
hlt
xor
pop
xchg
fnsave
add
sbb
ret
add
aam
add
add
add
repnz
nop
nop
jae
shll
arpl
add
add
push
push
push
clc
repnz
nop
nop
jae
add
add
mov
add
adcb
repnz
nop
nop
jae
add
add
or
add
push
nop
push
mov
leave
nop
jmp
add
add
cli
add
sbb
add
or
add
clc
repnz
nop
nop
jae
in
add
add
add
push
js
mov
add
nop
jmp
add
add
add
iret
mov
dec
jge
add
push
mov
xchg
ret
aam
add
add
add
rcrl
repnz
nop
nop
jae
add
sbb
add
add
mov
add
cld
nop
nop
jae
add
and
jmp
add
std
popa
pop
add
in
leave
nop
jmp
dec
add
add
popa
add
add
pop
cwtl
ret
push
clc
repnz
nop
nop
jae
xlat
repnz
add
add
mov
gs
repnz
nop
nop
jae
fldl
and
sbb
fwait
push
mov
xchg
ret
jl
add
add
and
inc
hlt
rorl
repz
clc
repnz
nop
nop
jae
add
repnz
add
add
and
push
mov
mov
clc
outsl
clc
pop
jns
cwtl
shrl
add
or
add
clc
repnz
nop
nop
jae
and
jl
mov
or
and
orb
ret
push
inc
pop
test
and
sub
xchg
and
arpl
add
repnz
nop
nop
jae
add
add
fld1
push
mov
xchg
ret
xchg
movl
sbb
add
push
mov
leave
nop
jmp
add
add
add
arpl
add
add
add
add
inc
jecxz
push
mov
leave
nop
jmp
add
pop
pop
add
roll
repnz
nop
nop
jae
dec
out
push
sub
add
test
idiv
clc
repnz
nop
nop
jae
add
add
and
ret
push
nop
push
mov
leave
nop
jmp
pop
add
movl
add
or
nop
nop
jae
iret
std
add
add
pop
push
jl
popa
add
cld
pop
pop
clc
repnz
nop
nop
jae
or
cli
sbb
add
add
add
ret
out
fildl
add
add
add
jnp
add
add
loopne
add
nop
nop
jae
xchg
add
dec
and
add
add
add
or
add
repnz
nop
nop
jae
jmp
add
add
push
mov
leave
nop
jmp
add
mov
add
add
jmp
push
clc
repnz
nop
nop
jae
jmp
add
add
or
add
mov
jle
clc
repnz
nop
nop
jae
add
add
iret
xlat
inc
mov
nop
push
mov
leave
nop
jmp
mov
or
add
roll
add
add
clc
repnz
nop
nop
jae
pop
add
add
add
add
cmp
push
add
mov
adc
repnz
nop
nop
jae
or
leave
out
xchg
pop
sbb
add
add
clc
repnz
nop
nop
jae
movl
add
add
add
xor
clc
push
mov
xchg
ret
add
pop
add
movl
add
fiadds
push
mov
leave
nop
jmp
add
dec
add
xor
add
std
push
add
fisttps
popl
xchg
ret
add
add
add
add
sar
repnz
nop
nop
jae
std
add
add
add
cwtl
lret
pop
clc
repnz
nop
nop
jae
add
inc
add
out
xchg
add
mov
xchg
ret
iret
add
std
roll
cmc
dec
jmp
xor
rcll
repnz
nop
nop
jae
sub
hlt
rcrl
cmp
pop
add
out
and
clc
repnz
nop
nop
jae
add
add
add
les
repnz
nop
nop
jae
push
add
add
add
add
add
scas
push
clc
repnz
nop
nop
jae
add
mov
cli
roll
add
adc
cld
nop
nop
jae
add
jbe
jmp
hlt
add
dec
and
das
mov
nop
push
mov
leave
nop
jmp
add
cwtl
mov
add
adc
test
inc
add
fnstenv
add
cwtl
dec
dec
mov
mov
push
mov
xchg
ret
add
aam
add
add
and
repnz
nop
nop
jae
popa
iret
fnstenv
add
add
jl
lcall
incl
add
mov
add
iret
add
mov
add
clc
repnz
nop
nop
jae
es
xchg
add
add
add
stos
mov
clc
repnz
nop
nop
jae
xor
add
push
clc
repnz
nop
nop
jae
add
add
leave
add
add
add
repnz
nop
nop
jae
std
jmp
add
hlt
add
jmp
pop
add
add
cld
nop
nop
jae
jmp
mov
push
or
add
movl
push
mov
xchg
ret
cwtl
mov
xchg
mov
xorl
clc
repnz
nop
nop
jae
std
test
add
sub
movl
in
leave
nop
jmp
std
pop
sub
sub
jecxz
inc
adc
mov
xchg
ret
cmp
sub
mov
add
add
into
jne
clc
repnz
nop
nop
jae
push
xlat
or
dec
and
js
cld
in
adcl
jae
add
negb
add
add
roll
repnz
nop
nop
jae
add
mov
and
add
add
adc
repnz
nop
nop
jae
hlt
add
hlt
add
add
or
dec
add
repnz
nop
nop
jae
jl
add
add
add
adc
repnz
nop
nop
jae
or
or
iret
add
add
movsb
push
mov
xchg
ret
add
roll
inc
or
dec
aam
jmp
mov
clc
repnz
nop
nop
jae
add
pop
add
cmp
inc
add
jecxz
clc
repnz
nop
nop
jae
add
add
or
arpl
jnp
popa
nop
push
mov
leave
nop
jmp
add
add
add
out
mov
clc
repnz
nop
nop
jae
hlt
add
add
hlt
add
out
add
int3
mov
repnz
nop
nop
jae
push
add
mov
jbe
dec
add
mov
jne
clc
repnz
nop
nop
jae
add
add
hlt
mov
add
cld
nop
nop
jae
xor
aam
add
flds
or
mov
adc
nop
push
mov
leave
nop
jmp
add
and
push
and
mov
xchg
ret
add
add
pop
repnz
add
or
roll
repnz
nop
nop
jae
add
add
roll
add
bnd
movb
push
mov
leave
nop
jmp
add
add
cmc
and
jbe
and
jne
jmp
incl
movl
iret
xchg
add
sbb
repnz
nop
nop
jae
xlat
arpl
add
roll
add
xor
xchg
mov
clc
repnz
nop
nop
jae
add
add
and
and
push
push
mov
xchg
ret
pop
jl
mov
add
mov
add
add
add
nop
nop
jae
xchg
add
add
dec
or
mov
add
std
clc
repnz
nop
nop
jae
aam
add
popa
mov
push
push
mov
xchg
ret
jl
add
add
add
add
add
in
pop
push
mov
xchg
ret
dec
dec
iret
and
xor
sbb
inc
add
clc
repnz
nop
nop
jae
cmc
iret
inc
add
add
leave
add
repnz
nop
nop
jae
add
cmp
add
inc
add
test
nop
push
mov
leave
nop
jmp
arpl
iret
add
add
jbe
mov
movb
cld
nop
nop
jae
jmp
and
add
pop
xor
add
cmp
nop
push
mov
leave
nop
jmp
add
push
add
dec
cmp
repnz
nop
nop
jae
add
add
popa
add
pop
add
mov
push
clc
repnz
nop
nop
jae
test
add
roll
add
pop
push
mov
xchg
ret
iret
add
add
add
pop
iret
add
add
jo
push
inc
add
cmp
and
add
add
mov
add
add
clc
repnz
nop
nop
jae
add
add
and
push
add
leave
xor
clc
repnz
nop
nop
jae
xchg
add
and
add
std
pop
clc
repnz
nop
nop
jae
jl
push
add
add
add
push
mov
leave
nop
jmp
cwtl
xlat
add
add
add
pop
add
pop
nop
push
mov
leave
nop
jmp
cwtl
xchg
push
fldl
std
jmp
add
iret
pop
cmc
push
mov
add
add
jnp
add
xchg
add
add
push
mov
add
add
and
clc
repnz
nop
nop
jae
add
in
add
add
or
pop
jmp
incl
add
cwtl
or
repnz
in
arpl
add
popa
jbe
add
add
cltd
inc
add
and
iret
xlat
add
fldenv
cmc
or
call
clc
repnz
nop
nop
jae
cli
rorl
mov
xchg
arpl
push
mov
xchg
ret
mov
leave
add
add
add
mov
nop
push
mov
leave
nop
jmp
out
add
add
add
sbb
sub
mov
leave
nop
jmp
sbb
add
out
add
push
add
inc
add
xor
push
mov
xchg
ret
pop
mov
and
add
add
and
mov
add
push
mov
leave
nop
jmp
add
add
flds
add
add
test
add
clc
repnz
nop
nop
jae
add
std
add
or
add
push
mov
xchg
ret
inc
add
add
jmp
popa
mov
imul
adc
add
add
add
pop
add
or
and
pop
push
mov
xchg
ret
pop
add
movl
arpl
and
cmpsl
push
clc
repnz
nop
nop
jae
add
and
add
add
aam
test
repnz
nop
nop
jae
xchg
add
cli
add
pop
lret
mov
clc
repnz
nop
nop
jae
pop
or
pop
mov
pop
arpl
xor
clc
repnz
nop
nop
jae
add
test
add
pop
push
clc
repnz
nop
nop
jae
add
add
iret
xor
add
add
je
les
clc
repnz
nop
nop
jae
iret
mov
add
std
test
add
pop
xchg
clc
repnz
nop
nop
jae
leave
jmp
add
jbe
hlt
cwtl
sbb
cmp
ret
jne
nop
push
mov
leave
nop
jmp
mov
add
repnz
nop
nop
jae
push
jmp
add
add
add
pop
popa
add
les
mov
xchg
ret
xor
xor
shll
or
sbb
lcall
clc
repnz
nop
nop
jae
add
out
mov
inc
sbb
push
clc
repnz
nop
nop
jae
or
add
cmpsb
or
mov
xchg
ret
add
add
dec
add
push
push
mov
xchg
ret
roll
xchg
add
mov
add
add
sub
lcall
add
add
repnz
nop
nop
jae
add
sbb
repnz
nop
nop
jae
add
add
add
pop
std
call
clc
repnz
nop
nop
jae
in
add
add
jecxz
mov
nop
push
mov
leave
nop
jmp
add
or
add
repnz
nop
nop
jae
jmp
iret
xchg
flds
and
cwtl
jbe
lea
push
mov
xchg
ret
and
add
add
add
sub
add
cld
nop
nop
jae
add
add
add
add
add
mov
mov
push
mov
xchg
ret
add
and
add
or
push
jne
clc
repnz
nop
nop
jae
pop
add
sbb
sbb
clc
repnz
nop
nop
jae
aam
add
mov
mov
mov
iret
add
clc
repnz
nop
nop
jae
add
add
pop
popa
add
add
out
clc
repnz
nop
nop
jae
or
add
push
mov
xchg
ret
xchg
jmp
std
pop
add
xor
and
jns
push
mov
xchg
ret
std
add
add
add
and
gs
repnz
nop
nop
jae
and
cmp
add
push
leave
icebp
fld1
clc
repnz
nop
nop
jae
dec
xchg
xchg
add
add
arpl
aam
push
mov
clc
repnz
nop
nop
jae
add
add
add
xor
repnz
nop
nop
jae
dec
testb
add
add
and
add
aas
pop
clc
repnz
nop
nop
jae
pop
add
std
push
add
add
jne
push
mov
xchg
ret
add
pop
add
testb
leave
xor
add
clc
repnz
nop
nop
jae
add
add
xor
add
and
out
call
inc
inc
add
repnz
nop
nop
jae
add
dec
add
xlat
dec
leave
pop
std
mov
clc
repnz
nop
nop
jae
jbe
mov
flds
add
and
mov
mov
xchg
ret
testb
add
add
adc
inc
add
jmp
std
and
add
pop
add
add
xchg
add
pop
push
nop
push
mov
leave
nop
jmp
add
add
inc
and
add
cmp
cld
nop
nop
jae
dec
add
add
jns
clc
repnz
nop
nop
jae
add
and
xchg
pop
leave
iret
push
push
push
add
jecxz
clc
repnz
nop
nop
jae
add
add
and
add
add
add
add
pusha
add
sar
repnz
nop
nop
jae
add
mov
add
cwtl
es
push
clc
repnz
nop
nop
jae
add
cli
sbb
add
xor
mov
repnz
nop
nop
jae
pop
sbb
add
xor
fdivrl
add
add
out
add
add
and
sub
cld
nop
nop
jae
dec
add
add
pop
sub
push
shrb
push
mov
xchg
ret
flds
add
add
add
add
add
adcb
nop
jae
cwtl
dec
add
add
jbe
pop
mov
stc
mov
push
mov
xchg
ret
mov
arpl
in
push
leave
aam
xlat
push
jge
test
clc
repnz
nop
nop
jae
roll
add
outsb
add
fwait
xchg
xchg
clc
repnz
nop
nop
jae
add
dec
dec
testb
pop
sub
out
cmc
cmp
nop
push
mov
leave
nop
jmp
push
add
sarl
inc
lods
clc
repnz
nop
nop
jae
iret
frstor
add
add
fldl
negb
stos
std
movzwl
nop
push
mov
leave
nop
jmp
xor
add
add
stc
inc
clc
repnz
nop
nop
jae
pop
pop
sbb
add
and
add
add
xor
stc
cmpl
nop
push
mov
leave
nop
jmp
add
dec
iret
and
add
or
in
loop
mov
xchg
ret
add
rcl
arpl
sub
sub
nop
nop
jae
add
sub
add
sub
cwtl
add
mov
push
mov
leave
nop
jmp
add
sbb
pop
add
add
clc
repnz
nop
nop
jae
iret
arpl
add
mov
out
test
mov
xchg
ret
add
mov
add
iret
add
add
pusha
add
mov
xchg
ret
push
sbb
jmp
add
cli
add
inc
push
mov
xchg
ret
add
add
xchg
add
add
add
xor
nop
nop
jae
movl
and
add
add
ret
add
clc
repnz
nop
nop
jae
popa
and
add
add
iret
xlat
sub
sbb
push
mov
xchg
ret
sbb
cmp
or
add
and
jbe
ret
clc
repnz
nop
nop
jae
cmc
add
sub
or
xchg
testb
scas
mov
push
mov
xchg
ret
jmp
add
add
or
clc
repnz
nop
nop
jae
jmp
add
and
add
enter
repnz
nop
nop
jae
cli
add
xchg
add
sub
push
lcall
mov
xchg
ret
add
iret
cmp
leave
push
dec
sub
jne
clc
repnz
nop
nop
jae
add
add
add
adcl
xchg
ret
add
pop
and
add
push
add
push
inc
push
clc
repnz
nop
nop
jae
xchg
add
push
push
and
and
mov
adc
repnz
nop
nop
jae
mov
and
add
clc
repnz
nop
nop
jae
add
pop
std
add
add
add
add
lahf
lea
clc
repnz
nop
nop
jae
add
add
add
pop
xlat
divb
test
call
clc
repnz
nop
nop
jae
cwtl
add
add
and
add
testl
nop
push
mov
leave
nop
jmp
dec
add
add
add
sbb
push
mov
leave
nop
jmp
add
movl
fwait
push
push
mov
xchg
ret
test
dec
dec
test
add
jmp
test
add
clc
repnz
nop
nop
jae
dec
add
add
sub
jl
clc
repnz
nop
nop
jae
mov
mov
pop
add
ret
inc
clc
repnz
nop
nop
jae
add
add
arpl
add
jae
jmp
mov
xchg
ret
add
add
cwtl
movl
incl
add
repnz
nop
nop
jae
add
cli
add
dec
sub
mov
cld
nop
nop
jae
or
movl
add
lret
push
mov
xchg
ret
jmp
mov
add
push
add
mov
clc
repnz
nop
nop
jae
or
add
jbe
aas
not
clc
repnz
nop
nop
jae
and
add
add
add
push
push
mov
xchg
ret
roll
mov
or
arpl
push
add
clc
repnz
nop
nop
jae
and
add
add
add
popl
add
repnz
nop
nop
jae
add
sub
mov
inc
lock
repnz
nop
nop
jae
pop
jl
add
testb
leave
add
add
xchg
xchg
ret
pop
push
cmp
jl
and
rol
iret
or
nop
jae
add
pop
add
add
out
push
mov
clc
repnz
nop
nop
jae
pop
add
add
add
std
xor
jne
clc
repnz
nop
nop
jae
pop
arpl
add
add
cwtl
mov
pop
add
sbb
push
mov
xchg
ret
and
pop
add
mov
add
sub
clc
repnz
nop
nop
jae
add
fnstenv
neg
mov
stos
clc
repnz
nop
nop
jae
testb
jbe
arpl
jmp
mov
push
add
xchg
nop
push
mov
leave
nop
jmp
add
movl
add
add
push
lcall
add
loop
add
jg
lods
gs
clc
repnz
nop
nop
jae
leave
add
xlat
out
pop
add
iret
add
clc
sub
adc
out
push
clc
repnz
nop
nop
jae
pop
pop
dec
add
or
leave
add
add
or
pop
push
add
clc
repnz
nop
nop
jae
pop
add
xlat
add
fistpl
clc
repnz
nop
nop
jae
add
fldl
add
dec
jmp
inc
mov
nop
push
mov
leave
nop
jmp
add
test
add
scas
int
push
mov
xchg
ret
add
arpl
xchg
jmp
cwtl
roll
push
add
clc
repnz
nop
nop
jae
pop
sub
add
out
sub
jmp
mov
clc
repnz
nop
nop
jae
and
add
add
add
add
add
add
imul
cmp
ret
add
add
jmp
add
sub
add
jg
test
add
clc
repnz
nop
nop
jae
dec
and
add
in
add
arpl
jne
clc
repnz
nop
nop
jae
sbb
add
add
mov
repnz
nop
nop
jae
popa
pop
add
add
inc
add
add
mov
add
shr
nop
push
mov
leave
nop
jmp
add
add
rcrl
add
clc
repnz
nop
nop
jae
add
add
add
add
xor
add
cli
sbb
loope
dec
cmp
repnz
nop
nop
jae
add
and
hlt
jmp
add
push
mov
nop
push
mov
leave
nop
jmp
add
add
sbb
repnz
nop
nop
jae
xchg
pop
xor
mov
add
xor
mov
clc
repnz
nop
nop
jae
xchg
add
test
add
mov
add
add
add
jmp
add
add
mov
jmp
and
in
add
or
cld
nop
nop
jae
cwtl
hlt
add
add
cmp
repnz
nop
nop
jae
add
aam
push
dec
cli
sub
clc
repnz
nop
nop
jae
repnz
cwtl
add
add
jl
or
loopne
addr16
clc
repnz
nop
nop
jae
jl
add
pop
pop
fldenv
add
inc
clc
repnz
nop
nop
jae
add
and
jl
add
jbe
add
push
add
cld
nop
nop
jae
dec
test
xchg
jmp
mov
nop
push
mov
leave
nop
jmp
jmp
add
pop
arpl
cmc
inc
test
jmp
and
push
mov
xchg
ret
push
jmp
hlt
jmp
add
add
or
mov
cld
nop
nop
jae
add
add
sub
mov
xchg
lea
nop
push
mov
leave
nop
jmp
jmp
and
add
jmp
int
pop
jae
repnz
nop
nop
jae
mov
add
cwtl
repnz
popa
inc
push
push
mov
xchg
ret
add
jl
xchg
mov
mov
and
add
add
stc
add
nop
push
mov
leave
nop
jmp
add
add
pop
add
or
pop
add
repnz
nop
nop
jae
jmp
in
or
es
xlat
and
sub
aad
ret
add
int3
inc
add
xlat
add
test
add
stos
stos
stos
cmpw
clc
repnz
nop
nop
jae
mov
add
test
add
mov
nop
push
mov
leave
nop
jmp
add
add
add
mov
mov
leave
nop
jmp
xor
add
dec
add
xchg
jl
xor
add
data16
add
add
push
clc
repnz
nop
nop
jae
add
cmp
add
add
arpl
ret
mov
clc
repnz
nop
nop
jae
push
testb
push
add
hlt
push
add
fld1
clc
repnz
nop
nop
jae
cwtl
and
add
mov
add
push
add
add
repnz
nop
nop
jae
add
add
add
sbb
nop
nop
jae
add
add
and
dec
add
add
or
cld
nop
nop
jae
out
xchg
or
std
mov
cltd
mov
clc
repnz
nop
nop
jae
add
add
and
add
fs
popa
sub
push
mov
xchg
ret
hlt
add
xor
aam
add
iret
add
fistpl
clc
repnz
nop
nop
jae
add
add
test
mov
repnz
nop
nop
jae
or
sbb
pop
xchg
pop
add
movsb
stos
out
mov
jge
clc
repnz
nop
nop
jae
and
mov
mov
add
pop
and
add
add
push
mov
xchg
ret
add
add
and
add
add
push
add
or
inc
add
mov
jmp
sbb
out
jb
lahf
stos
clc
repnz
nop
nop
jae
xchg
pop
add
add
or
add
cli
mov
pop
inc
add
add
in
std
add
add
add
add
add
xor
sbb
nop
push
mov
leave
nop
jmp
add
add
sub
pushf
fisubs
pop
add
add
add
jne
clc
repnz
nop
nop
jae
add
add
insl
je
clc
repnz
nop
nop
jae
xchg
add
add
adc
push
mov
leave
nop
jmp
repnz
sbb
sbb
loop
add
pop
dec
push
in
sub
add
sub
add
nop
nop
jae
push
add
hlt
add
arpl
push
testb
inc
mov
clc
repnz
nop
nop
jae
pop
add
leave
roll
add
add
lea
push
mov
xchg
ret
add
add
add
jl
add
add
add
repnz
nop
nop
jae
jmp
add
leave
and
add
inc
push
push
mov
xchg
ret
add
add
sub
add
push
add
push
cmpsl
call
clc
repnz
nop
nop
jae
add
add
movl
mov
xor
repnz
nop
nop
jae
add
xchg
movl
out
nop
push
add
test
push
clc
repnz
nop
nop
jae
inc
cwtl
add
add
roll
pushl
clc
repnz
nop
nop
jae
add
mov
add
add
jb
inc
mov
clc
repnz
nop
nop
jae
add
add
iret
xlat
pop
add
dec
dec
add
add
lock
stos
or
mov
xchg
ret
add
add
std
add
fld1
push
clc
repnz
nop
nop
jae
out
hlt
mov
add
xor
nop
nop
jae
xor
add
add
or
push
mov
leave
nop
jmp
and
add
sub
add
stc
mov
clc
repnz
nop
nop
jae
add
popa
and
mov
and
add
scas
pushl
clc
repnz
nop
nop
jae
add
add
repnz
aam
add
clc
repnz
nop
nop
jae
mov
and
and
add
add
imul
incl
sbb
add
add
adc
repnz
nop
nop
jae
xor
out
push
xor
add
testb
pop
clc
repnz
nop
nop
jae
or
sbb
and
push
mov
xchg
ret
mov
add
mov
add
add
mov
nop
push
mov
leave
nop
jmp
push
rol
out
add
add
vphaddubd
incl
sub
add
roll
xor
mov
add
test
adc
cld
nop
nop
jae
pop
add
mov
nop
nop
jae
add
add
add
add
divb
popa
xorb
nop
push
mov
leave
nop
jmp
add
add
add
jbe
add
popa
add
xor
clc
repnz
nop
nop
jae
add
push
std
mov
or
xor
add
call
nop
nop
jae
add
add
push
movl
add
stos
clc
repnz
nop
nop
jae
cwtl
mov
sub
add
add
fistl
repnz
nop
nop
jae
add
sub
fscale
add
add
add
lods
push
mov
xchg
ret
add
pop
cmp
popa
and
rorl
push
mov
leave
nop
jmp
add
add
sub
or
jmp
add
andb
xchg
ret
mov
sbb
add
add
add
add
jb
add
and
add
add
testb
and
add
repnz
nop
nop
jae
add
add
es
add
push
clc
repnz
nop
nop
jae
xlat
add
and
cmp
add
mov
xchg
mov
cld
nop
nop
jae
dec
xor
add
popa
in
mov
cmpl
mov
leave
nop
jmp
inc
add
repnz
iret
in
popa
push
push
mov
xchg
ret
arpl
iret
sbb
leave
repnz
pop
add
stos
clc
repnz
nop
nop
jae
add
pop
xor
sub
in
and
or
mov
push
mov
xchg
ret
out
add
dec
add
sbb
sti
add
add
nop
push
mov
leave
nop
jmp
mov
xchg
cmc
add
add
xor
clc
repnz
nop
nop
jae
std
arpl
add
add
sbb
nop
nop
jae
add
and
add
cwtl
add
add
mov
mov
add
hlt
nop
inc
add
sub
add
dec
roll
jmp
fidivl
nop
nop
jae
and
xlat
rorl
or
add
push
add
mov
nop
push
mov
leave
nop
jmp
add
push
fiaddl
repnz
nop
nop
jae
pop
mov
add
add
cli
and
xlat
mov
clc
repnz
nop
nop
jae
cmp
cli
jbe
add
xchg
pop
add
ljmp
jmp
dec
mov
or
or
cltd
sbb
nop
push
mov
leave
nop
jmp
iret
aam
add
jl
mov
nop
push
mov
leave
nop
jmp
and
xchg
add
add
iret
jmp
push
clc
repnz
nop
nop
jae
mov
test
and
add
add
cld
nop
nop
jae
inc
es
in
testb
add
add
roll
sti
clc
repnz
nop
nop
jae
add
add
add
add
jae
inc
add
add
add
add
mov
add
push
mov
xchg
ret
add
popa
leave
sbb
jbe
xlat
add
add
clc
repnz
nop
nop
jae
and
jbe
cmp
add
add
add
aad
clc
repnz
nop
nop
jae
dec
hlt
xor
add
add
add
add
add
repnz
nop
nop
jae
dec
push
add
add
add
repnz
nop
nop
jae
add
add
jmp
add
push
jg
nop
push
mov
leave
nop
jmp
xchg
add
hlt
dec
mov
popa
mov
clc
repnz
nop
nop
jae
cwtl
add
add
arpl
fldl
push
add
add
enter
dec
add
mov
cld
nop
nop
jae
leave
add
test
add
xor
test
repnz
nop
nop
jae
fldl
add
test
in
mov
clc
repnz
nop
nop
jae
add
add
iret
addr16
push
mov
xchg
ret
iret
out
movl
dec
sub
jnp
nop
push
mov
leave
nop
jmp
cwtl
roll
cmc
add
and
add
ljmp
repnz
nop
nop
jae
aam
add
add
add
fisubrs
ja
rcll
mov
xchg
ret
add
add
dec
iret
add
push
clc
repnz
nop
nop
jae
pop
or
arpl
xlat
sbb
hlt
cmp
mov
xchg
ret
fldenv
jl
add
mov
sub
pop
add
sub
repnz
nop
nop
jae
aam
add
pop
add
dec
es
add
xchg
mov
clc
repnz
nop
nop
jae
add
roll
sbb
dec
add
in
leave
nop
jmp
add
shll
xchg
add
add
les
mov
nop
push
mov
leave
nop
jmp
hlt
cmp
test
add
fldl2e
lock
popa
nop
push
mov
leave
nop
jmp
add
shrl
roll
and
pop
aas
mov
clc
repnz
nop
nop
jae
push
and
add
add
add
nop
push
mov
leave
nop
jmp
add
std
add
add
add
add
xor
add
clc
repnz
nop
nop
jae
cli
add
test
add
add
clc
repnz
nop
nop
jae
dec
jmp
cmp
in
pop
pop
add
jecxz
add
repnz
nop
nop
jae
hlt
add
arpl
aam
out
xchg
in
into
adc
sbb
inc
push
clc
repnz
nop
nop
jae
iret
cmp
cmp
pop
add
add
jbe
insl
shr
clc
repnz
nop
nop
jae
dec
jmp
xchg
add
add
fiadds
pop
nop
push
mov
leave
nop
jmp
movl
push
sbb
frstor
lods
popf
je
clc
repnz
nop
nop
jae
sbb
sbb
push
xor
clc
repnz
nop
nop
jae
add
xchg
and
and
dec
movl
adc
repnz
nop
nop
jae
add
add
add
add
add
push
mov
leave
nop
jmp
aam
add
push
dec
insl
add
push
mov
xchg
ret
testb
add
xchg
add
add
add
jmp
nop
nop
jae
dec
add
add
arpl
sub
repnz
nop
nop
jae
add
not
add
xchg
out
dec
add
add
add
mov
nop
push
mov
leave
nop
jmp
dec
add
add
add
push
clc
repnz
nop
nop
jae
mov
add
pop
iret
add
add
push
mov
leave
nop
jmp
add
add
iret
add
add
add
add
nop
push
mov
leave
nop
jmp
add
mov
movl
clc
repnz
nop
nop
jae
add
and
and
add
or
add
pop
mov
clc
repnz
nop
nop
jae
add
add
add
jbe
add
rorb
nop
jae
sub
cmc
add
add
pop
add
pop
fs
push
push
mov
xchg
ret
popa
jmp
add
xlat
jmp
and
add
push
pop
add
cltd
fwait
nop
push
mov
leave
nop
jmp
add
or
add
add
mov
add
push
push
mov
xchg
ret
pop
iret
add
add
or
sbb
mov
clc
repnz
nop
nop
jae
aam
add
ret
add
clc
repnz
nop
nop
jae
dec
mov
add
mov
push
clc
repnz
nop
nop
jae
sbb
or
add
std
push
add
iret
clc
cltd
cmpl
nop
push
mov
leave
nop
jmp
aam
leave
and
popa
cltd
add
push
mov
xchg
ret
add
cwtl
add
add
fisttpll
sub
mov
clc
repnz
nop
nop
jae
add
xor
mov
pop
add
jge
inc
add
cli
mov
and
add
add
add
add
popa
push
inc
add
sub
and
pop
add
pop
pop
add
add
fdiv
clc
repnz
nop
nop
jae
movl
pop
and
repnz
nop
nop
jae
sub
mov
test
add
push
nop
push
mov
leave
nop
jmp
add
sub
xlat
sbb
and
dec
dec
dec
mov
sub
repnz
nop
nop
jae
std
rcr
arpl
test
add
pop
xor
push
mov
xchg
ret
test
es
add
and
cmc
dec
sbb
adc
repnz
nop
nop
jae
add
jmp
inc
popa
aam
jmp
lods
push
mov
xchg
ret
fldenv
mov
aam
add
add
mov
push
mov
xchg
ret
and
add
pop
repnz
dec
lds
inc
add
add
std
xor
add
sbb
and
stos
bound
in
jmp
add
and
es
add
pop
add
add
lea
clc
repnz
nop
nop
jae
add
add
add
push
nop
push
mov
leave
nop
jmp
pop
out
in
testb
add
fwait
push
clc
repnz
nop
nop
jae
pop
xlat
roll
sbb
add
popa
fld1
clc
repnz
nop
nop
jae
and
add
add
sub
add
clc
repnz
nop
nop
jae
add
add
add
push
sbb
inc
ret
clc
repnz
nop
nop
jae
mov
mov
movl
lods
push
mov
xchg
ret
popa
cli
add
sbb
sub
loop
call
push
mov
xchg
ret
or
xor
cwtl
aam
xlat
add
jmp
cmp
mov
clc
repnz
nop
nop
jae
add
add
std
add
push
add
add
add
jae
push
mov
leave
nop
jmp
add
add
mov
push
mov
xchg
ret
pop
add
add
fisttpll
xchg
nop
sti
push
nop
push
mov
leave
nop
jmp
add
add
add
xchg
xchg
jbe
pop
mov
clc
repnz
nop
nop
jae
dec
es
add
pop
xchg
push
add
add
mov
clc
repnz
nop
nop
jae
in
popa
add
test
clc
repnz
nop
nop
jae
shll
es
add
cmp
and
sbb
nop
nop
jae
add
add
dec
and
repnz
nop
nop
jae
add
add
leave
pop
add
imul
xchg
ret
add
add
add
test
add
add
adcl
je
lret
repnz
add
push
into
add
fsub
leave
xchg
sub
loop
add
jae
mov
int3
xor
jns
loope
stos
cli
out
je
loope
sbb
dec
add
pop
movsl
dec
jno
leave
imul
adc
mov
push
add
xchg
and
add
push
add
daa
push
add
mov
xor
add
pushf
dec
sbb
xchg
lods
aad
jnp
add
add
push
add
jge
add
lcall
daa
outsl
pop
add
add
js
and
jg
enter
jae
cmpsl
mov
scas
mov
or
jae
add
or
cmp
in
loope
add
popf
push
add
adc
call
out
add
imul
pop
and
jbe
mov
inc
add
add
or
add
and
cmpb
lahf
mov
mov
add
push
aad
mov
mov
add
mov
cld
jbe
lods
ret
icebp
insl
stc
inc
gs
mov
fwait
push
add
and
vpaddsb
arpl
sbb
inc
add
add
out
or
mov
add
ss
xor
rolb
jae
shrb
inc
aam
fsubrs
shlb
mov
repz
or
push
add
dec
add
mov
mov
cli
loop
leave
shll
dec
add
fsts
add
add
fildl
sahf
xor
mov
das
xchg
scas
arpl
add
jg
add
lods
mov
repz
add
mov
add
adc
sbbb
std
fwait
addr16
clc
aam
mov
cmpsl
and
pop
dec
add
push
add
push
dec
imul
jo
rol
repnz
insl
lods
mov
mov
sti
addr16
jle
or
popf
int
imul
js
lock
fcmovbe
imul
in
in
add
add
push
jl
insb
add
test
loop
add
pop
sbb
pop
add
jne
std
pusha
add
add
add
adc
mov
sub
stos
imul
add
loope
add
sub
jecxz
add
mov
add
add
push
imul
insl
adc
call
jae
rcrl
adc
add
stos
rorb
sbb
or
decb
add
add
dec
add
add
shrb
enter
imul
add
rclb
pop
xchg
iret
push
add
lret
xchg
rcrl
or
fmul
add
sti
jno
inc
add
sub
and
mov
mov
in
cmc
data16
push
pop
add
push
add
pop
rcrl
add
int
add
adc
add
inc
cmc
fstps
add
ja
add
pop
xchg
roll
add
push
add
icebp
repz
xchg
orl
add
dec
add
push
ja
sub
add
daa
icebp
sbb
and
xor
cmp
lds
add
add
popa
jmp
testb
add
stc
xchg
xchg
pop
jg
add
std
pop
lods
jl
and
jns
add
das
dec
push
add
xchg
ret
sub
sbb
and
stc
or
push
add
andb
cli
sub
pop
pop
add
add
dec
add
xor
mov
out
add
idivl
add
ficompl
pushf
jmp
sbb
out
add
mov
inc
add
dec
add
cmp
dec
add
and
dec
add
pusha
add
add
inc
add
in
cmp
jno
or
add
xchg
ret
outsl
mov
mov
adc
add
add
mov
push
add
add
xchg
adc
int3
out
mov
popf
das
sbb
or
add
add
add
push
add
mov
jnp
add
sbb
leave
repz
and
pop
add
in
ss
xchg
andl
and
addr16
ffree
jg
add
jbe
jg
push
add
xchg
jb
mov
add
mov
add
rorb
add
push
add
jle
jle
jmp
movsb
jle
dec
adc
and
sbb
add
pushf
bound
sbb
add
test
add
sub
push
add
sbb
cmp
xor
out
xchg
incb
xchg
add
mov
lahf
or
add
dec
add
orb
mov
aam
mov
mulb
add
lods
mov
test
in
and
add
das
mov
add
adc
add
xor
adc
pop
xchg
xchg
into
mov
xchg
add
push
add
mov
or
xorl
mov
xchg
dec
iret
add
lcall
adc
sbb
mov
popa
aaa
add
jns
jl
push
add
xchg
fprem1
js
icebp
jbe
cmp
inc
add
push
add
cmpsb
ljmp
in
mov
lea
aas
mov
add
add
and
repz
adc
data16
dec
jb
inc
add
rol
lret
imul
lods
mov
xchg
jmp
add
add
add
cltd
pop
test
in
add
or
add
add
inc
add
cli
xor
add
sub
dec
add
imul
test
add
dec
add
pusha
add
cmp
adc
hlt
out
mov
inc
add
add
cmc
add
xchg
in
shrl
xchg
or
int
or
add
lahf
pop
add
lret
add
bound
sbbb
test
add
inc
add
test
add
cld
xchg
arpl
lret
or
add
jo
add
test
xor
mov
add
ja
jb
sbb
inc
add
add
add
add
add
stc
in
adc
repnz
add
lods
test
hlt
movsl
addl
cmpb
imul
fisttps
add
je
fwait
sti
sbb
push
add
rcrl
andl
xchg
roll
jns
fcmovnb
push
add
pop
and
movsb
std
xor
add
xchg
or
lret
cmp
pop
sub
sbb
xchg
xchg
mov
xlat
stc
cltd
mov
in
cmpsb
cmpsl
bound
push
aad
xor
dec
add
mov
jo
addl
loope
addr16
add
jecxz
pinsrw
add
jle
push
jnp
add
lock
outsl
xchg
jbe
ficomps
and
scas
cmp
add
push
in
add
jg
add
jecxz
mov
jg
mov
push
add
pusha
add
ja
add
pop
add
dec
add
sbb
mov
or
push
test
fistpl
add
add
dec
add
push
cmp
in
les
pushf
jne
sbb
out
bnd
gs
and
mov
iret
iret
cltd
ja
add
out
imul
add
pop
stc
stc
xchg
fnstenv
add
add
add
sub
sub
repnz
cmpsb
mov
andb
add
idivl
jae
xor
rorb
cmp
add
ffree
mov
mov
sub
repnz
add
add
mov
add
ja
add
fsubp
loope
add
xchg
test
add
push
lock
shr
add
dec
add
add
dec
add
xor
arpl
cmp
dec
add
add
ret
cmp
pop
repz
sbb
imul
repnz
mov
jmp
shll
repz
add
test
add
fst
roll
adc
sahf
or
stos
sub
imul
mov
enter
jnp
add
sbb
aaa
add
push
add
jle
aam
push
add
pushf
dec
add
pushf
jmp
cltd
xor
call
add
add
xor
mov
add
cmpsb
in
stos
rol
movsl
inc
add
dec
mov
fadds
and
movsb
scas
stos
jp
hlt
jnp
add
push
add
scas
sahf
xlat
push
add
bnd
cmp
sbb
out
repz
mov
repnz
push
add
add
add
mov
ret
vpxor
cmp
iret
mov
insb
add
add
sub
fdivs
xor
dec
add
lock
out
push
add
or
rcr
and
repz
inc
add
subb
dec
add
add
popf
rorb
add
mov
je
pushf
imul
scas
add
add
ja
add
dec
add
jnp
push
add
pop
fcmovu
movsb
jns
into
call
aas
inc
fisubrl
add
or
mov
pop
dec
add
and
int3
or
jns
lea
add
add
xchg
mov
push
test
add
add
pushl
lcall
enter
pop
pop
push
add
mov
mov
addr16
loope
inc
add
adc
out
inc
add
or
data16
adc
rolb
jne
add
inc
add
fidivl
cmp
xor
mov
in
xchg
xchg
add
pop
pop
dec
add
add
out
add
xlat
inc
iret
int3
ja
push
add
add
or
add
add
lret
add
addl
and
add
orb
lret
mov
cs
loopne
sbb
cmp
add
cmp
add
out
dec
add
pop
add
dec
xor
les
fdiv
aad
insb
add
xchg
rcll
push
add
popf
pop
add
add
gs
adc
mov
push
add
sbb
clc
sbb
xchg
ljmp
add
shl
jge
inc
add
pop
lds
lods
sbbb
sbb
hlt
fistpll
mov
xor
mov
pop
lods
test
sbb
sbb
idiv
insl
enter
testb
jns
imul
int3
mov
mov
add
add
add
add
add
gs
sub
mov
add
stc
pop
add
and
dec
addr16
mov
divb
sbb
add
fnsave
jno
mov
dec
add
cmp
mov
fisttps
add
cmc
lock
jns
jne
loope
mov
aam
scas
xchg
int3
movsl
mov
mov
mov
adc
scas
test
mov
add
out
xlat
add
jge
dec
add
jno
daa
mov
add
into
jg
clc
cltd
lods
cmp
push
jo
cmc
popf
mov
dec
pushf
nop
imul
pop
scas
jmp
xlat
mov
push
add
adc
dec
test
rorb
add
or
sbb
push
and
cmp
filds
test
xchg
add
insl
sbb
cmp
xchg
inc
add
mov
daa
bound
aam
add
add
mov
inc
add
pusha
add
sbbb
call
add
ja
cltd
setae
mov
in
xor
mov
ficomps
imulb
ljmp
add
rcll
out
mov
add
bound
adc
mov
push
add
jecxz
inc
add
xor
mov
insb
add
sub
stos
jecxz
test
add
leave
lods
mov
mov
scas
int3
arpl
fsubrp
pop
xor
xorb
daa
arpl
add
push
add
add
cltd
dec
lock
int3
movsb
ret
sub
jo
das
jmp
sub
roll
add
add
outsb
add
ficompl
arpl
add
call
dec
add
shrb
rol
or
xchg
mov
ret
jge
lea
add
or
cs
pop
ret
sbb
imul
add
and
add
pop
xor
push
add
add
pop
sbb
movsl
adc
in
inc
sbb
pushf
mov
popa
lret
cmp
and
aaa
test
scas
jg
movsl
ret
sbb
jg
cmp
sub
lahf
jmp
scas
gs
add
sbb
insb
add
and
in
sahf
mov
add
cmp
add
add
subl
add
outsl
clc
mov
stos
cmp
add
cmpsb
call
sbb
add
xchg
movsl
in
and
adc
mov
add
xor
adc
ret
push
sbbl
add
mov
xchg
mulb
add
mov
loope
add
mov
adc
or
out
adc
mov
push
add
add
pop
lcall
jle
jns
xor
jle
fistps
shlb
mov
cld
push
add
subb
or
add
bnd
add
pusha
add
inc
cmp
das
inc
add
add
js
dec
add
and
and
testl
add
fwait
cli
lds
rcll
add
jne
add
popa
dec
add
enter
mov
add
cmp
fxam
inc
add
mov
sbb
notb
add
call
enter
shlb
out
std
daa
out
mov
inc
add
jmp
jg
add
jo
jbe
push
add
cmc
push
add
add
pop
cmp
insb
add
add
push
add
mov
rol
fcompp
or
xchg
aam
lea
lds
lods
ja
mov
mov
test
cmp
xor
sbb
pop
lret
adc
pushf
out
mov
dec
pop
add
push
data16
mov
loope
js
outsb
add
pop
add
jbe
repnz
push
add
notb
mov
add
add
into
xor
or
dec
sub
pusha
add
mov
add
push
add
inc
add
ret
out
add
mov
push
incl
inc
add
add
add
add
mov
add
js
sub
int3
push
add
add
stos
lods
xor
sub
out
add
out
mov
rorb
pushf
ljmp
add
dec
add
xchg
or
push
cld
lret
shll
iret
rcrb
xchg
xor
loop
jl
push
adc
or
fisubl
xchg
add
inc
add
gs
jb
cmp
rcr
inc
add
mov
push
mov
add
inc
add
inc
rorl
and
push
rclb
add
mov
add
inc
add
inc
mov
mov
in
mov
add
fisubs
rcrb
add
mov
daa
jnp
xor
aas
arpl
pusha
add
pop
aaa
add
mov
or
push
add
sub
push
add
add
adc
and
cmp
xor
mov
inc
mov
pop
xlat
into
pop
push
add
add
add
xchg
or
push
add
dec
add
add
add
lods
pop
insl
mov
out
repnz
add
test
push
add
pop
add
adc
jp
ljmp
lcall
mov
inc
cmpsl
cld
and
mov
mov
pusha
add
add
call
inc
add
mov
dec
add
cmp
or
or
aam
add
add
lea
sbb
repnz
stos
jb
mov
nop
lods
mov
add
imul
add
xor
cmc
mov
jge
add
jmp
jae
jbe
jns
sar
and
inc
add
ret
add
fldt
add
add
inc
pop
add
inc
add
cmp
jns
add
notl
add
add
loop
pop
jbe
inc
add
or
inc
add
add
mov
movsb
mov
testb
stc
outsb
add
pop
add
ret
or
imul
adc
inc
lret
fwait
mov
aaa
clc
xor
imul
cmpsl
pushf
into
add
imul
lret
inc
aad
icebp
push
add
cs
js
in
mov
insl
stos
add
and
add
add
pop
ficoms
je
push
add
push
inc
xor
fcompl
mov
hlt
and
and
inc
enter
call
cltd
pop
add
cmp
imul
mov
jne
clc
adc
arpl
pop
xchg
mov
int3
in
jae
hlt
ret
xchg
cmp
add
sbb
xor
or
sbb
add
push
add
out
or
add
jno
and
jg
rcrb
call
push
jecxz
push
adc
and
bound
lods
repz
mov
ret
or
add
xlat
lret
ret
loop
sbb
sub
sub
and
adc
sub
daa
test
stc
jl
sbb
pusha
add
mov
add
lock
add
data16
add
test
inc
add
pushf
clc
movups
cmp
sub
pop
out
xchg
push
add
xor
lcall
lret
add
mov
add
mov
add
or
add
xor
jle
js
pop
xchg
adc
int
rolb
add
lods
loopne
add
mul
push
add
dec
addr16
add
das
add
pop
sahf
out
pushl
test
inc
lret
cli
mov
lret
sub
ret
fadds
xchg
in
mov
add
mov
pop
add
jg
adc
add
aam
add
adc
aas
lock
add
mov
out
fsts
adc
out
sub
hlt
mov
mov
stc
push
mov
and
adc
jns
test
js
dec
add
add
into
std
push
add
cmpsl
cmp
hlt
clc
aas
daa
icebp
xchg
mov
xor
fnsave
add
into
cli
outsb
add
dec
add
xor
shlb
shl
xchg
jns
pop
repz
hlt
popf
fistps
add
push
xchg
sbb
sub
ret
add
pop
adc
in
jl
sarl
shrl
or
lds
push
add
add
cmp
cmp
xchg
stos
mov
push
add
dec
add
push
add
push
jge
add
add
jno
pushf
xor
notb
add
orl
add
incl
and
rcrb
loop
mov
int3
add
add
movsl
or
jae
adc
xchg
jnp
pop
add
fcmovne
lds
push
add
cld
pop
push
add
add
add
cmp
roll
test
mov
dec
dec
fcoms
pop
add
sbb
add
pop
xor
pop
and
push
pop
or
iret
mov
das
mov
add
mov
int
jle
xchg
add
or
push
add
icebp
inc
add
add
lods
outsb
add
add
aas
jmp
mov
pop
add
sub
mov
cmp
xchg
jbe
shr
ja
jle
in
sub
das
jle
sub
add
leave
addr16
add
scas
sub
insb
add
addr16
repnz
lret
in
cmpsl
push
add
add
sbb
into
push
add
leave
xorl
add
add
add
push
add
add
scas
ret
pop
add
add
iret
add
dec
icebp
imul
or
fcoml
loopne
inc
add
mov
cwtl
push
sbb
or
pop
pop
add
add
add
adc
mov
push
sahf
jae
dec
jecxz
les
inc
add
idivl
ljmp
mov
pusha
add
sub
jne
rol
push
aaa
jne
add
lret
in
add
fwait
mov
add
add
xor
in
push
pusha
add
mov
aad
inc
add
out
aaa
add
add
jp
inc
add
cmpl
push
and
sbb
sbb
je
dec
ljmp
add
lret
push
add
mov
add
add
das
out
add
jb
mov
add
add
add
iret
mov
pusha
add
cmp
add
cmp
xlat
in
cwtl
call
cmpsl
sbb
jne
add
pop
add
sub
pop
add
movsb
adc
sub
add
add
mov
pop
add
mov
scas
popa
jecxz
add
faddl
lods
stos
jbe
mov
stc
shr
add
or
arpl
inc
add
sarl
add
jo
jb
mov
add
popf
cld
in
das
push
add
xchg
sahf
xorb
lret
adc
sti
sbb
mov
sbb
add
mov
add
add
cmc
outsl
sarl
or
ja
rolb
or
lahf
mov
mov
add
add
outsb
add
add
jae
mov
sti
jnp
mov
add
ret
lock
sub
add
loope
mov
add
fdivrl
add
inc
add
push
add
dec
inc
push
add
add
adc
jle
into
mov
xor
add
xchg
mov
add
add
jmp
sub
push
add
ret
adc
add
add
add
mov
or
cltd
xor
je
bound
jmp
add
sub
or
je
in
popf
das
inc
jecxz
push
popf
fwait
inc
je
andb
lahf
dec
jmp
ret
mov
decb
leave
test
dec
ss
mov
out
dec
in
xor
mov
add
add
outsb
add
iret
mov
pop
jecxz
xchg
cmp
movsb
and
daa
adc
imul
or
orl
jp
enter
adc
lcall
add
sub
xor
pop
or
sahf
mov
push
add
repz
insb
add
loop
std
bswap
roll
push
add
lds
add
movl
add
je
sub
fs
jb
jno
add
out
lcall
push
out
inc
test
fwait
xchg
mov
add
jg
js
sub
mov
mov
add
add
sbb
pop
add
add
dec
add
add
add
jno
mov
add
les
stos
cli
push
mov
mov
int
repnz
jbe
sub
inc
add
je
push
add
adc
dec
add
add
lock
sub
add
add
fsts
loop
pop
mov
and
call
pushf
sti
mov
push
add
and
lods
push
add
test
add
loope
xchg
pop
into
int3
xor
out
addb
daa
test
clc
cmp
pop
aas
inc
add
add
out
ffree
jae
jg
add
rorb
inc
pop
popa
mov
add
add
or
inc
dec
add
and
adc
add
fcmovnu
xchg
add
add
stc
mov
faddl
xor
mov
inc
jb
sub
and
xor
mov
xor
subl
pop
in
mov
add
mov
xchg
rcrb
add
add
loopne
add
enter
add
mov
mov
inc
jmp
mov
add
pop
mov
sub
push
add
cli
add
and
inc
rcll
add
jae
add
add
sub
sbb
bound
push
add
call
push
add
dec
add
pop
loop
insl
cmp
adc
stos
push
add
and
stos
std
xor
mov
push
aaa
lock
rorb
xlat
jns
push
dec
sub
mov
std
shl
adc
repz
packsswb
add
out
mov
add
outsl
stos
fisttpl
add
lea
inc
in
lret
shll
cmp
add
mov
dec
movsl
xchg
inc
add
push
add
insl
das
rorb
outsb
add
lods
jp
scas
clc
lods
movsb
test
loop
leave
loopne
popf
data16
cmpsb
sub
sti
pop
add
add
sub
pop
add
mov
add
add
in
mov
add
cli
cmp
mov
pusha
add
addl
enter
movsb
add
push
cli
movsb
imul
fnstsw
sbbb
dec
fidivrl
repnz
lods
adc
jb
mov
inc
add
and
add
inc
add
pop
add
cmp
inc
add
cmp
add
dec
add
dec
add
in
test
sub
loop
andl
pop
add
pop
movsl
push
jo
sub
mov
psrlq
ds
int
add
dec
mov
add
inc
popa
pop
nop
and
xor
push
add
sahf
je
pop
and
add
add
fisttps
popa
insl
andl
add
push
add
ja
add
add
inc
out
mov
add
pushf
mov
sub
jg
and
xchg
pop
cltd
fldt
and
sub
je
lods
pop
add
add
testb
add
xbegin
mov
add
mov
inc
push
test
xor
add
stc
and
arpl
add
add
test
jb
ja
dec
dec
add
add
add
add
inc
add
sbb
iret
jb
dec
cmp
push
add
lahf
in
xlat
in
jbe
mov
outsb
add
push
ja
gs
sub
add
fcmove
iret
mov
add
add
jecxz
add
aad
pop
daa
in
test
mov
dec
fnstcw
add
push
add
jecxz
mov
add
add
dec
je
fnstcw
add
fstl
add
cmpsl
or
sbbl
cli
cmp
add
add
adc
jecxz
xchg
aaa
push
add
xor
cltd
mov
add
add
pop
add
sbb
jg
mov
add
std
decl
icebp
filds
fidivl
push
add
icebp
bound
stc
sbb
or
add
mov
jne
shrl
and
cmp
mov
add
pop
pop
fdivrp
mov
mov
xchg
mull
add
add
add
dec
or
inc
pop
add
add
mov
jo
daa
sub
int3
fdivl
dec
mov
mov
inc
add
dec
add
hlt
add
jne
lock
iret
add
or
sti
clc
dec
pushf
mov
add
mov
mov
add
cmpsb
dec
add
mov
jg
out
add
add
insl
lret
jnp
pop
add
add
add
pop
xchg
outsb
add
add
add
imul
pusha
add
xor
sbbl
jle
adc
xchg
push
into
push
aaa
jne
and
add
xchg
sub
and
add
loopne
shrl
rolb
outsl
pop
loopne
cmpsl
xor
sbb
jno
add
movsb
iret
or
add
add
add
xchg
hlt
popf
xchg
hlt
out
add
idivl
add
mov
pop
add
dec
adc
int
mov
mov
lret
daa
and
add
test
push
add
mov
add
rolb
add
add
mov
testl
outsl
pop
addb
mov
in
or
and
push
insl
mov
add
add
mov
and
cmp
add
xchg
and
and
jp
sub
jbe
mov
aaa
mov
add
xor
add
inc
add
bound
push
xchg
adc
cld
scas
fimuls
aam
jge
add
scas
scas
add
cmp
add
add
mov
add
xchg
or
in
add
enter
add
lcall
add
xchg
stos
pop
jnp
add
sbb
pop
xor
lahf
push
aad
aas
daa
test
lret
std
jb
jb
or
std
addr16
push
add
scas
mov
add
nop
xchg
aam
add
mov
mov
sub
jp
cmp
or
fstpl
pop
add
inc
cmpsb
iret
push
xchg
stos
jo
adc
popf
fisttpl
sub
out
pop
mov
dec
or
jnp
sub
stos
jp
testb
add
push
test
add
lret
mov
add
in
jno
andb
sbb
arpl
mov
mov
mov
pop
cmpsb
outsl
xchg
test
xchg
sarl
add
insl
fidivrl
add
push
inc
add
add
imul
mov
daa
lret
add
addb
es
jl
daa
mov
int3
xchg
pop
xor
mov
in
push
add
sbb
add
fstpl
add
jmp
add
add
cwtl
add
mov
movsb
mov
or
inc
inc
add
and
add
push
or
add
incb
xchg
icebp
dec
add
inc
sub
cmp
dec
add
add
add
pop
repnz
pop
out
add
push
add
adc
ljmp
push
add
mov
add
push
add
js
mov
pop
add
imul
int
dec
add
add
or
add
mov
add
in
push
add
out
loope
jl
pushf
int3
pop
xor
jns
or
add
popa
mov
fnstcw
jb
mov
cmp
cmp
lret
jg
mov
adc
jb
pop
insl
stos
shll
jge
dec
add
jge
sub
je
inc
add
mov
mov
add
add
cmp
mov
xor
push
test
xchg
repz
add
lret
outsl
add
sub
xor
pop
test
mov
add
cmc
fmuls
in
fucomip
aas
adc
xlat
mov
pop
add
add
inc
jle
push
ret
add
orl
pop
add
add
add
mov
add
jns
rclb
add
ljmp
add
adc
out
rorb
add
add
rcr
enter
mov
aas
mov
ror
push
add
add
adcl
pop
add
jne
xor
jmp
dec
add
dec
pop
ret
dec
cltd
cmpsl
aad
add
and
mov
sbb
and
mov
sbb
mov
add
je
jnp
mov
addr16
add
add
push
add
mov
dec
push
add
mov
hlt
sub
loopne
xchg
stos
push
add
scas
jg
adc
or
add
mov
popf
push
add
inc
add
push
add
jp
and
mov
js
ja
mov
stos
mov
mov
cmpb
push
add
add
stc
sbb
dec
add
add
inc
jg
mov
add
mov
in
push
ret
or
mov
out
fdivrp
push
add
add
shlb
test
add
out
clc
jnp
icebp
inc
add
add
mov
sti
xchg
mov
add
sbb
xor
dec
add
inc
mov
mov
insb
add
adc
ja
push
popf
xchg
or
mov
add
sbb
ficoml
test
add
pop
cli
insl
pop
add
sbbl
add
sub
into
mov
adc
cmp
in
push
add
add
cmc
lcall
mov
add
add
add
add
push
add
pop
ljmp
and
popa
add
add
dec
add
add
popa
insb
add
add
mov
iret
jp
sbb
int
add
add
addr16
add
mov
mov
loopne
jge
ja
cmp
scas
sbb
add
add
add
add
push
add
dec
add
mov
or
jbe
testl
shlb
mov
xchg
cmpsl
popf
jae
xchg
movsb
pop
movsl
pop
add
negb
add
sbb
add
or
mov
daa
jb
mov
js
fimuls
nop
into
dec
lret
icebp
jl
add
cmpsl
dec
imul
add
add
add
outsl
fadds
xor
jle
repz
pushf
cmp
mov
add
fistl
dec
ret
pop
push
pushf
int
add
arpl
lock
loopne
xchg
lock
enter
mov
add
je
addr16
add
fsubrp
clc
mov
mov
adcl
push
into
stos
ret
add
repnz
sub
mov
add
xchg
aaa
or
inc
mov
add
add
add
iret
dec
add
shll
add
aam
popf
dec
xor
cmp
lret
into
mov
roll
xchg
ja
add
outsb
add
cmp
add
sub
inc
add
mov
aam
lea
stos
aad
and
arpl
pop
add
insl
mov
pop
loope
paddq
idivb
aaa
add
das
mov
not
fsubs
inc
add
js
jp
jg
ljmp
add
jp
push
add
add
insl
ljmp
add
sbb
adc
out
mov
insb
add
clc
sub
add
imul
call
scas
aam
into
mov
xchg
mov
add
dec
mov
xchg
add
add
cmp
mov
inc
add
scas
pop
xchg
push
add
stos
mov
add
mov
outsl
cmpsl
jb
mov
mov
es
adc
cmpsl
jmp
test
push
add
imul
adc
int3
mov
in
cmp
jl
inc
fcoms
movsl
push
bound
jo
cld
in
shl
rol
das
or
lea
add
add
in
subb
jecxz
mov
xor
xchg
sbb
in
add
pusha
add
xor
cld
cmp
ret
jge
clc
adc
jae
add
ss
add
das
cmp
jmp
inc
sbb
push
add
jmp
push
xchg
add
add
inc
add
cld
mov
add
fisttpll
fnstsw
mov
add
push
inc
mov
push
add
into
jl
dec
add
mov
jmp
mov
mov
pop
add
mov
outsl
pop
outsl
hlt
xlat
mov
stos
push
dec
add
out
xor
xchg
ja
int3
sbb
rcrl
add
jne
cltd
push
dec
add
add
push
and
mov
mov
add
aaa
mov
mov
sbb
xor
push
add
jnp
adc
add
jnp
add
popf
addl
ds
push
add
add
mov
pop
or
fldcw
cmp
inc
add
dec
pop
add
mov
jg
add
mov
gs
xor
das
cmp
add
push
add
cmp
test
inc
add
sub
add
lret
jnp
in
mov
call
aad
push
add
fchs
dec
jl
push
add
imul
mov
or
imul
xchg
data16
call
cmpsl
mov
jg
outsb
add
add
xor
repz
add
sbb
push
add
cmp
push
add
imull
into
pop
add
add
add
jl
test
and
add
pop
js
aas
movsl
movsb
ljmp
cmpsb
je
push
daa
gs
psubb
cmp
inc
add
add
inc
and
cli
push
add
insb
add
dec
jge
repz
add
fdivrl
mov
xchg
cmpb
add
push
add
sbb
add
add
shlb
dec
xor
out
sub
ds
jnp
add
add
mov
outsb
add
rorb
ja
add
popa
inc
popa
mov
lea
jne
fistps
xchg
add
add
in
add
sub
dec
xor
mov
lods
add
movsb
movsb
je
nop
les
add
jge
mov
sub
insl
cmpsb
xchg
ret
cltd
mov
movsb
in
xchg
aas
je
push
in
cmp
adc
ror
flds
jnp
xor
adc
and
lock
and
add
and
mov
shll
add
mov
sub
mov
inc
add
hlt
scas
sahf
adc
aam
mov
mov
add
cmpl
inc
add
arpl
pop
imul
stos
sbb
divb
icebp
outsb
add
pop
arpl
jg
sub
add
jle
ja
add
add
lods
mov
add
mov
scas
dec
add
ljmp
sti
pusha
add
mov
push
lret
add
cmc
fwait
test
xor
push
add
hlt
adc
mov
add
and
push
add
sti
xchg
out
mov
movsb
adc
lock
xor
fcomp
aad
add
add
add
sub
sar
std
sar
lret
jmp
add
call
insb
add
cld
mov
add
jmp
addr16
fdivs
xor
mov
adc
add
jl
dec
add
mov
mov
jg
mov
out
iret
pushf
inc
mull
or
push
add
add
add
or
lods
mov
add
push
add
jae
push
add
add
es
mov
call
inc
add
rorl
test
jmp
jge
cmp
add
insb
add
popf
jo
mov
inc
add
add
add
add
add
loope
cmp
mov
add
test
add
cmpsb
insl
in
lods
stc
bound
dec
add
cli
lret
add
jle
sub
loopne
pop
lret
add
add
add
add
pushf
jge
pop
xchg
and
movsb
aam
add
imul
add
out
xlat
sarl
add
lds
hlt
rcrb
pop
jnp
loope
inc
add
fisttpl
add
and
jno
inc
add
js
xchg
mov
pop
dec
nop
les
pusha
add
add
je
push
add
in
add
jo
xchg
adc
jnp
fsubs
or
pop
add
add
imul
add
add
dec
xchg
icebp
jns
movsl
push
add
and
adc
int3
ret
push
add
lret
js
lods
test
into
sub
movsl
movsb
data16
jno
ret
xor
std
test
add
jbe
out
pop
imul
adcl
inc
mov
add
pop
add
pop
mov
das
bound
addr16
sub
sub
jmp
inc
add
into
or
add
add
cwtl
fnclex
jg
pop
add
push
add
add
inc
add
mov
add
enter
adc
xchg
pop
stc
jb
cmpsl
shr
jnp
cli
cmc
fistl
imul
scas
loopne
add
sbb
jnp
add
jne
add
into
add
xor
pop
mov
cmp
dec
jbe
mov
and
sbb
stc
leave
inc
adc
and
daa
test
jbe
aas
cmp
sahf
adc
add
lret
lods
bound
js
jne
orl
mov
jns
addr16
xlat
jp
mov
jo
sbb
inc
iret
insb
add
pop
push
mov
add
push
add
add
dec
add
test
mov
mov
sub
fldenv
movsl
and
loopne
jecxz
push
dec
add
cmp
push
sub
shrl
add
negb
add
add
lods
push
mov
sub
lock
mov
add
add
add
adc
das
imul
sbb
sbb
add
mov
jbe
xor
add
into
ja
add
fsubl
hlt
pop
add
pop
and
push
fmul
outsl
sbb
cmp
xchg
add
sub
sub
add
sbb
mov
add
add
push
jb
cmp
add
ja
loop
movsl
cmc
scas
xchg
leave
jge
push
or
mov
lcall
add
add
test
add
add
mov
clc
pop
add
pop
add
cmp
leave
xchg
insl
jg
add
jbe
movsl
stc
imul
pop
add
add
jb
lods
push
add
add
xchg
add
add
dec
add
ret
fcoml
add
imul
add
mov
negb
adc
fmull
mov
xchg
add
mov
add
ljmp
add
loop
add
fildll
jnp
jno
add
push
add
add
mov
sahf
xchg
xchg
in
xor
lock
fistl
adc
sub
xor
test
add
add
cmpsb
in
ret
in
cmp
add
xor
push
imul
mov
add
mov
add
sub
std
insb
add
fistl
add
cwtl
sub
outsb
add
pop
add
mov
sub
jae
inc
add
orb
add
pop
sarl
inc
add
push
add
add
add
div
scas
adc
arpl
push
pop
mov
sub
add
testb
mov
test
or
repz
imul
incb
shll
rorl
add
shrb
lret
lcall
add
adc
cmp
xchg
mov
add
mov
adc
add
xorb
push
push
add
mov
mov
add
jno
add
repnz
add
je
or
ret
and
dec
push
add
fsubrs
test
aaa
mov
test
adc
adc
pop
xchg
movnti
cmp
jecxz
es
jae
add
cli
addr16
add
xchg
test
add
sub
push
xchg
sub
pop
xor
les
sub
add
es
xor
out
jne
add
addr16
jmp
rolb
add
leave
negb
shlb
filds
pop
add
jp
les
loope
add
js
in
push
add
out
shll
pusha
add
sub
stc
insb
add
jg
add
ja
add
inc
or
add
mov
jle
mov
sbb
rcl
push
add
xchg
inc
add
sbb
cli
rorl
sbb
pusha
add
add
rolb
jbe
sahf
andb
andps
loop
mov
iret
imul
inc
add
loope
add
pushf
rolb
aas
leave
repnz
dec
in
push
add
add
or
cmc
dec
mov
outsb
add
add
pop
cmpsl
sub
pop
xchg
and
aad
add
sarl
subb
push
add
add
add
stos
add
ss
mov
jle
xorl
jnp
add
push
add
add
lods
aad
lfs
inc
add
cld
dec
lahf
add
and
add
gs
cmp
in
clc
popa
scas
mov
add
add
ljmp
popa
fnstenv
jmp
add
add
mov
add
cmp
push
add
pop
add
add
add
mov
sbb
in
sahf
fs
pop
add
pop
pop
mov
inc
add
int3
jae
add
add
add
loopne
add
flds
inc
add
loop
add
push
push
add
add
push
add
or
xchg
dec
outsl
jg
bound
mov
adc
enter
pop
add
cmp
sub
add
or
push
add
test
cmp
shl
call
add
imul
ret
cwtl
out
dec
or
add
push
add
jmp
and
repnz
mov
sbb
dec
add
and
add
and
outsb
add
outsb
add
sub
or
ljmp
xor
or
bound
push
cmp
pop
add
add
aaa
and
mov
xor
lock
xlat
xlat
clc
push
add
add
jmp
xchg
scas
enter
add
mov
mov
mov
mov
divl
adc
push
stos
sub
mov
pop
shrb
jmp
add
fbld
iret
cmc
popl
and
dec
add
add
imul
ja
jnp
push
hlt
enter
add
mov
or
ror
popf
scas
push
mov
cmc
pusha
add
xor
pop
mov
std
or
dec
imul
out
xor
jb
mov
cmp
rol
xor
lret
int
push
add
syscall
add
xchg
mov
xor
mov
lret
leave
addl
sbb
pop
add
push
arpl
add
lock
pusha
add
cmp
add
add
add
scas
jbe
jp
sbb
sbb
in
popa
cmp
adc
cld
ss
and
in
pop
xor
push
cltd
sub
call
mov
test
dec
mov
fisttps
test
test
add
into
shl
add
push
add
add
call
add
push
add
lahf
rcrb
mov
mov
sbb
pop
add
mul
or
add
stc
insb
add
sub
dec
add
and
jb
mov
movsb
int
add
rorl
add
addb
outsb
add
inc
loope
aaa
sbb
inc
jbe
out
das
add
jl
and
popf
addr16
lods
sbb
push
add
testl
hlt
xchg
xor
in
cmp
adc
cmp
pop
add
repz
xchg
push
add
and
daa
xchg
sbb
into
lea
and
ds
or
pop
add
lcall
daa
test
inc
add
add
mov
adc
sbbb
add
mov
push
add
push
add
dec
add
loopne
add
hlt
movsb
cltd
add
or
into
test
add
add
jnp
dec
pop
mov
add
ret
add
xchg
cmp
add
or
mov
aam
loope
add
add
jge
add
xchg
add
cltd
scas
jns
rcrb
add
mov
add
js
ljmp
lea
add
in
or
shl
cli
mov
frstor
cmp
cmp
push
add
xchg
mov
jl
xchg
mov
sbb
in
add
jnp
das
mov
pop
add
dec
add
js
imul
vrcpps
push
add
adc
add
push
add
pushf
sub
sub
push
nop
add
xchg
dec
out
ret
cmp
stos
int3
movsb
mov
add
push
add
shlb
rorl
add
je
mov
add
adc
add
aas
mov
add
add
mov
inc
mov
add
insl
jb
sub
add
xchg
add
sbb
xchg
nop
lds
jmp
pop
add
or
shll
sub
repz
add
or
out
sub
test
stos
and
gs
js
in
jl
xchg
inc
add
xor
inc
add
cmp
mov
add
add
inc
push
lock
jns
cmc
mov
hlt
adc
add
jl
sub
imul
sbb
flds
cmpsl
shr
imul
dec
add
add
add
aaa
dec
add
add
jnp
ret
ret
daa
inc
add
add
iret
sbb
mov
add
mov
mov
mov
add
add
add
add
add
test
mov
and
movl
dec
mov
js
dec
add
push
add
add
add
push
jb
clc
pop
and
mov
mov
or
jo
dec
and
dec
cmp
repz
lock
aam
xchg
add
dec
add
orl
add
mov
add
insl
int
add
add
lods
fwait
loope
xchg
mov
ret
ret
aaa
call
ret
frstor
inc
xchg
pop
sub
test
push
add
xor
xchg
enter
fstl
popf
xchg
addr16
or
fdivl
add
jmp
bound
jns
jp
ljmp
add
add
fistps
jmp
fistps
mov
sub
mov
xor
aam
ds
pusha
add
push
add
xor
or
xchg
push
mov
sub
add
loop
add
and
mov
xor
ret
push
pop
aam
stc
adc
insl
and
scas
mov
jae
add
inc
add
adc
pop
add
sub
jno
or
sbb
inc
add
shlb
mov
fisubs
add
sub
jnp
pop
gs
shlb
pop
add
and
add
add
in
scas
xor
push
add
lret
pop
jl
fwait
sub
add
add
add
add
out
add
das
jmp
aas
push
push
in
mov
out
add
or
mov
mov
mov
mov
sbbl
movsl
mov
out
xor
dec
add
and
call
and
cld
xor
jmp
movsl
repnz
cmp
mov
add
xchg
cmpsb
add
push
add
add
stc
mov
xchg
add
test
add
add
mov
add
adc
add
sbb
add
inc
popa
dec
xchg
cli
sub
stos
in
lods
xchg
aam
js
jb
add
add
loop
add
mov
xchg
sub
out
push
cmpsl
jecxz
add
pusha
add
lcall
pop
mov
loop
jns
dec
das
cmc
fstps
push
add
div
xchg
mov
add
or
shrl
addl
add
ljmp
add
rolb
mov
popl
xchg
fidivrl
insb
add
inc
push
add
add
stos
mov
jp
sbb
push
add
add
mov
or
scas
out
dec
add
sub
sbb
jmp
stos
push
scas
in
mov
add
loope
sub
iret
loop
cmpsl
xor
dec
add
add
add
add
nop
push
add
dec
cmc
jne
inc
add
dec
add
test
aas
lods
jo
ljmp
jl
scas
rcr
cmp
adc
xchg
inc
add
add
sub
ljmp
jl
movsl
xor
inc
icebp
or
in
les
add
cmp
cwtl
pop
add
jl
pop
cwtl
pop
jmp
add
add
add
add
sbb
jbe
mov
add
mov
add
imul
ret
clc
sti
add
mov
sti
into
aad
add
test
pop
mov
and
out
enter
add
mov
and
dec
add
mov
jb
clts
add
movntq
dec
add
imul
pop
add
cmc
push
add
outsl
js
inc
add
xor
sub
push
jae
mov
xchg
cltd
mov
sub
in
jae
aam
jns
cmc
cmpsb
in
adc
ret
add
push
add
mov
add
add
cmp
pop
mov
sbb
push
add
add
add
mov
dec
add
add
add
pop
cmpsb
out
outsl
stc
inc
add
sbb
add
fnstsw
aaa
in
loopne
pusha
add
ss
in
lret
insb
add
cld
sbb
fwait
xor
cmp
hlt
scas
sti
or
cmp
jecxz
mov
ret
outsl
cld
and
push
add
cltd
push
add
add
add
mov
pushf
imul
add
add
mov
cmpsb
jbe
sbb
out
add
fisttpl
add
aas
in
cmpsb
fcom
sbb
rclb
add
push
add
mov
add
mov
outsb
add
add
sbb
testb
jae
icebp
sbb
adc
roll
popa
add
inc
add
aaa
add
add
inc
bound
fsubrp
inc
mov
push
add
jecxz
add
icebp
sbb
jl
xchg
add
push
add
sub
pop
push
add
mov
push
add
jecxz
xor
mov
out
add
imul
mov
mov
pop
test
scas
and
jle
nop
jnp
pop
clc
int
pop
push
pusha
add
sub
jg
push
adc
pop
adc
sub
xor
add
movsb
insl
xor
es
lcall
add
push
add
add
lret
in
lock
add
sbb
in
add
shlb
sub
add
and
sub
push
mov
cmc
ja
add
push
add
xor
adc
cpuid
jecxz
add
lea
add
add
jge
shlb
add
jno
pop
add
mov
aas
or
xchg
pop
add
add
push
sbb
pop
fistps
daa
gs
out
mov
jmp
add
add
add
add
sub
ret
test
fadds
add
push
add
xor
stos
cltd
ja
inc
xchg
add
or
popf
lret
subb
adc
and
addr16
push
data16
mov
push
iret
sbb
imul
out
add
add
add
rcrl
xchg
inc
mov
out
arpl
add
sbb
and
fwait
in
pop
add
shlb
lock
rcrb
or
xchg
cs
push
rcl
add
add
mov
add
sbb
out
repnz
cmp
add
ljmp
adc
mov
add
add
clc
shlb
jb
out
cmpsl
mov
add
mov
ficompl
adc
mov
mov
sbb
add
iret
xlat
dec
add
lea
add
inc
add
fbld
out
fdivrs
mov
xchg
sahf
in
ret
lds
sahf
iret
repz
add
test
add
shll
cmpsb
sbb
xor
add
imul
inc
xlat
movsb
mov
xchg
ficoms
jecxz
add
sarb
add
inc
add
mov
add
or
inc
add
jbe
and
int
cmp
mov
inc
add
pop
add
inc
add
scas
hlt
adc
xchg
addr16
jae
pop
add
sbb
mov
sub
sub
xchg
cmp
in
mov
mov
rcll
pop
inc
dec
and
xor
mov
pushf
adc
push
add
xlat
les
sub
jnp
xor
and
jg
ret
fiaddl
pop
into
lods
mov
cmp
je
add
sbb
add
sbb
iret
mov
add
add
add
adc
sbb
inc
add
add
stos
xorb
lods
scas
fmul
push
add
add
std
xor
xlat
mov
add
add
pop
cltd
push
add
sub
add
add
jecxz
mov
das
mov
add
cmp
inc
add
and
sub
add
add
cmp
mov
cld
mov
jae
fisttpll
add
add
add
and
mov
cmc
inc
add
add
add
add
mov
add
jb
sub
inc
add
loope
and
and
fwait
pop
add
add
add
rep
sbb
int3
stc
cs
test
test
add
adc
jge
add
or
add
jnp
dec
push
add
mov
pop
outsb
add
test
sbb
add
and
add
add
lods
adc
mov
fxtract
fcompp
das
mov
sub
cmpsb
mov
pop
sbb
les
add
cmpl
bound
add
in
arpl
add
sbb
lea
inc
add
iret
cltd
xchg
adc
stc
les
jne
add
lods
push
add
adc
inc
add
add
add
fucomip
test
int3
dec
dec
add
and
mov
and
xor
cwtl
enter
outsb
add
inc
add
adc
daa
lods
hlt
cli
jbe
aad
pop
add
add
add
out
add
cltd
push
add
aam
or
lods
loopne
mov
imul
sbb
repz
add
jo
shlb
push
add
aas
mov
lret
leave
lret
imul
stc
aas
push
push
testl
enter
adc
pop
inc
out
or
ljmp
in
lcall
add
mov
add
stc
xor
sbb
mov
xor
ja
sub
and
movl
push
adc
insb
add
cmp
andb
or
adc
int3
data16
add
mov
add
inc
add
pop
add
sti
stos
ficoms
insl
into
loopne
add
lods
into
loopne
mov
add
add
fcomps
add
fsqrt
pop
cmpsb
popf
sub
adc
cmp
dec
add
inc
xor
and
pop
shlb
lret
inc
sub
add
adc
add
sub
ret
and
adc
jbe
stc
bound
adc
loopne
or
add
add
mov
add
pop
mov
add
sub
xchg
add
sbb
pop
add
dec
add
add
shrb
insb
add
xchg
jns
std
xchg
xchg
push
and
pop
mov
outsl
jo
daa
push
add
mov
mov
mov
fisubl
add
pop
add
stc
movsl
aam
jp
fwait
push
add
arpl
leave
cmp
test
and
shll
add
lret
sbb
test
loope
xchg
cmp
lds
add
add
add
dec
add
cmc
or
push
aad
jmp
clc
imul
mov
notb
xchg
filds
jg
mov
xchg
in
add
test
add
pop
fcompl
fistpll
add
iret
dec
add
pop
out
push
dec
add
xor
repz
xchg
mov
mov
add
add
popf
mov
or
add
add
sub
into
inc
test
inc
popf
jge
popf
add
data16
jp
pop
xor
jmp
test
push
mov
add
lock
data16
push
add
add
shll
xor
outsl
movsb
insl
ret
repz
adc
or
add
ret
clc
cmp
sub
add
ret
add
mov
mov
pop
add
add
mov
lret
jbe
dec
adc
add
add
mov
dec
aam
add
or
sub
in
add
lahf
and
add
mov
cmc
loope
add
std
cwtl
mov
xlat
cli
or
adc
add
inc
fiaddl
sbb
xor
mov
and
popf
add
test
mov
xorb
jle
and
icebp
inc
add
out
add
inc
add
inc
dec
add
les
cmpsb
loope
add
lahf
insb
add
shrb
add
clc
push
add
cli
mov
xchg
mov
sti
xchg
mov
and
lods
add
add
popa
out
add
test
add
adc
inc
dec
add
dec
add
add
add
push
add
shll
add
push
add
mov
shl
xchg
std
add
cmpsb
mov
add
add
gs
cmp
mov
add
add
popf
mov
add
pop
add
mov
and
inc
int
push
add
sarb
add
dec
add
mov
cltd
out
sub
cli
sub
fidivrs
in
stos
ja
add
add
movsb
adc
and
scas
add
repz
subb
addl
add
popf
dec
mov
sbb
mov
inc
add
ficoml
maxps
add
mov
cmp
mov
inc
add
enter
les
ja
daa
xchg
insl
cmp
pop
push
add
pusha
add
inc
add
stos
out
mov
add
loop
cli
xor
pushl
add
fimull
into
pop
std
dec
cmp
pop
pop
add
imul
add
in
jb
in
int3
push
add
in
call
add
lock
push
add
bound
out
pop
data16
dec
int
jbe
ficomps
in
push
into
out
mov
push
push
add
push
mov
add
add
sub
xor
jne
shlb
roll
dec
add
add
movsb
add
xchg
jge
sub
popa
pop
xchg
cmp
lret
hlt
ljmp
jecxz
add
add
lods
filds
rcll
sub
jne
lret
les
xchg
sbb
notl
fiadds
sbbb
add
and
insl
mov
add
out
icebp
xorl
add
cltd
sbb
cmpsl
dec
add
rcl
add
in
mov
mov
cld
and
inc
add
cmp
xchg
xchg
stos
xor
add
dec
cmc
mov
mov
mov
add
clc
and
lcall
add
dec
add
add
pop
dec
add
nop
add
addr16
sbb
mov
cli
or
test
xor
pop
gs
mov
jnp
cmp
sbb
mov
add
add
arpl
jl
cmpsl
or
add
repz
sbb
andb
lods
rcr
pop
daa
mov
jns
xchg
lods
jb
and
arpl
mov
add
daa
mov
add
out
add
xchg
inc
das
add
mov
and
das
in
aad
mov
add
cwtl
lods
notl
jle
cld
imul
dec
pusha
add
add
xchg
mov
dec
arpl
sbb
add
adc
mov
pop
inc
cli
jle
sbb
add
add
and
fisttps
lds
add
fcomps
nop
jnp
adc
popa
insb
add
jne
aas
sub
cmpsl
and
and
lcall
into
xor
aad
lea
inc
add
rcrb
inc
and
add
add
inc
add
stos
xchg
in
jg
inc
fadd
push
add
cmpsb
in
xchg
add
loope
std
stos
jb
pop
loopne
add
add
push
adc
add
jno
add
add
imul
xchg
ja
add
jbe
pusha
add
add
orb
dec
jbe
xor
mulb
aad
add
jne
add
inc
add
mov
in
dec
add
add
xlat
cmp
fnsave
add
cmp
adc
popl
xor
mov
insb
add
in
mov
sti
gs
das
in
scas
rolb
fwait
xchg
mov
dec
adcb
add
jl
enter
loope
mov
add
add
inc
add
repnz
jne
jge
add
ljmp
xchg
pop
bound
fmuls
add
add
add
popf
mov
mov
mulb
add
insl
jo
jno
and
incl
cmpsb
mov
mov
add
push
lods
imul
clc
inc
add
adc
dec
loopne
cld
cmp
jno
pop
inc
outsb
add
and
push
in
xchg
xor
pushl
outsl
outsb
add
fisubrl
add
add
call
adc
mov
lret
sub
sbb
or
gs
jno
mov
pop
pop
js
test
xor
jg
cmp
aaa
add
push
push
add
dec
add
jmp
adc
push
add
mov
xchg
add
sub
out
add
add
add
movsl
aad
cli
insb
add
lret
add
arpl
jnp
add
add
mov
add
add
jp
fiaddl
pop
mov
add
mov
xlat
pop
stos
xor
cmp
push
inc
add
xor
jns
add
add
add
add
xor
or
mov
add
sbb
mov
fidivrl
cli
xchg
sbb
clc
sbb
push
push
add
mov
push
stc
sbb
addr16
pop
add
push
add
rcr
add
add
cmp
insl
jo
insb
add
orl
movsb
movsl
idivb
inc
sbb
ljmp
sarl
jp
jge
jl
bound
insl
mov
jmp
gs
scas
jae
add
add
jp
pop
add
or
fld
sub
in
rcr
mov
pop
add
inc
add
xchg
inc
xor
int3
mov
add
aaa
sbb
add
nop
mov
cmc
fistps
jae
xor
push
add
push
mov
test
mov
loopne
push
add
int
add
repz
mov
add
sbb
mov
ljmp
pop
add
inc
add
cmp
leave
cmp
popf
ret
adc
add
xchg
cwtl
into
sub
xorb
cmp
rcr
push
inc
add
xchg
jg
movsl
aad
add
xor
movsl
or
jb
sub
aam
addr16
jmp
add
adc
or
lret
xor
pop
add
add
adc
push
pop
add
daa
jecxz
add
cltd
loopne
imul
add
add
add
lahf
pop
pop
test
mov
pmulhw
inc
sbb
sub
repnz
add
sub
add
add
add
loopne
cmpsl
stos
loopne
add
repnz
add
sub
xchg
cli
ljmp
jnp
add
sub
add
mov
add
add
add
repnz
pop
add
mov
jno
jae
add
fcompl
xchg
adc
add
cltd
xchg
lods
mov
ror
mov
add
adc
stc
decl
add
add
insb
add
xor
and
imul
inc
add
add
or
clts
add
push
add
lds
add
and
test
repz
fsubrs
cmp
xorl
bound
mov
out
lret
inc
mov
in
stos
add
adc
xor
add
add
inc
add
ja
add
rolb
mov
clc
lock
test
jb
lcall
add
and
lods
rorb
mov
or
pop
add
jge
add
push
add
bound
pop
das
or
ljmp
add
mov
mov
nop
cmp
repnz
cltd
xchg
je
outsb
add
out
cld
scas
sbbb
repz
push
add
mov
xchg
pop
add
std
sub
loope
add
pop
push
sarl
cmp
blcic
sahf
pop
add
imul
lret
loope
jnp
add
add
mov
xchg
std
adc
test
lods
and
xchg
cwtl
dec
stos
pop
add
add
adc
sub
fwait
mov
shl
hlt
push
add
pop
add
cli
push
pop
add
rcrl
popa
int
add
mov
add
dec
add
sub
or
cld
xchg
pop
cmp
xchg
jns
addb
jp
lret
cmp
mov
sub
cltd
pop
cwtl
adc
or
add
xchg
add
orb
inc
add
add
test
shll
add
add
jl
gs
addr16
mov
add
add
add
add
out
pushl
add
mov
ljmp
into
dec
add
or
ss
inc
add
sub
adc
in
rclb
call
add
daa
mov
ja
xchg
adc
je
jae
add
add
add
inc
loopne
add
pop
add
and
inc
add
fidivrl
arpl
pop
jbe
rcrl
aam
dec
cmp
mov
add
mov
add
mov
mov
lds
mov
sbb
dec
rcrl
add
add
inc
add
add
jmp
add
jb
jp
and
push
add
add
add
add
mov
fidivl
loop
aam
pop
add
sarb
add
pushf
jae
imul
pop
jp
inc
mov
data16
inc
add
sbb
cmp
add
jb
enter
pop
mov
icebp
out
pop
outsl
xor
imul
add
add
add
and
mov
jg
adc
cmpl
jne
daa
sub
dec
add
fwait
jecxz
jo
pop
ret
adc
mov
add
out
add
mov
add
rcll
gs
in
add
push
cmpl
add
sub
or
push
add
shr
push
rcrl
inc
sar
jg
add
push
jl
inc
add
xor
xchg
jnp
add
add
dec
push
movsl
sbb
cmp
push
cmova
subb
add
cld
inc
add
test
daa
fcompl
cmp
sbb
fdivrs
cmc
fstps
add
push
dec
lea
hlt
js
xchg
decl
das
in
and
add
add
add
lods
fsubl
in
mov
add
das
xchg
add
lret
repz
add
xchg
fldt
add
jno
rcrb
inc
add
fcomip
push
add
add
or
xchg
stc
dec
add
out
add
push
add
add
add
jbe
daa
aad
into
xor
pop
add
jmp
jno
sub
out
jmp
add
mov
push
add
push
push
jae
xor
jb
addl
aad
pop
pop
mov
incb
ja
imulb
add
push
add
out
inc
add
in
pop
add
xchg
and
mov
or
in
add
idivb
add
cmp
out
lahf
cli
push
add
add
add
push
ss
divb
int
repnz
fbstp
dec
add
jns
add
sti
pop
addr16
push
test
stos
cmp
dec
aad
add
rcll
add
jb
push
clc
mov
jp
push
add
lods
stc
mov
hlt
and
push
mov
rolb
jne
int
push
bound
add
inc
add
sbb
rcrl
out
add
inc
add
add
push
stos
mov
rcll
add
mov
mov
out
mov
xchg
call
test
popf
js
or
add
add
lods
push
add
jb
and
daa
sub
out
addr16
dec
mov
andb
mov
or
loope
add
lods
mov
movsl
shl
insb
add
scas
pusha
add
mov
and
fidivs
test
add
push
add
in
in
add
mul
dec
add
sbb
enter
loop
cmp
add
jne
sbb
pop
add
in
add
cli
sbb
test
mov
add
adc
add
push
sbbl
add
add
jl
lea
icebp
lcall
mov
add
repz
jno
insl
outsb
add
sub
popl
andb
pop
add
xorb
out
inc
popa
xchg
jp
xor
arpl
add
cmp
dec
add
add
add
add
les
add
insl
das
cmc
sbbb
and
into
pop
add
loopne
jge
scas
inc
add
add
lods
das
mov
add
add
add
cld
dec
pushl
cmp
sub
adc
cmp
add
aam
mov
push
add
repz
adc
pop
into
in
outsb
add
in
push
add
in
popa
or
sub
add
std
test
test
or
je
xor
mov
add
popa
xor
mov
push
xor
imul
dec
add
pop
add
add
inc
add
sbb
push
add
cmp
jbe
in
add
rcrb
and
in
test
rolb
sbb
ficoms
add
xchg
and
andl
jmp
add
adcb
jno
add
lcall
sahf
mov
icebp
sub
loopne
pop
faddp
mov
mov
pop
inc
add
stos
push
add
xor
test
add
cmp
add
add
mov
add
add
test
rcll
xor
rolb
dec
adc
add
int
push
adc
addb
imul
shl
scas
dec
add
adc
jg
call
jg
jae
add
jae
add
add
add
and
ffreep
mov
jno
add
add
xchg
dec
pusha
add
add
add
test
mov
lods
mov
out
movsb
inc
imul
add
add
out
mov
iret
aam
mov
add
inc
daa
push
add
pushf
dec
add
add
add
sub
loope
add
and
stos
adc
jg
stc
out
mov
mov
cld
cli
call
jns
add
sbb
xor
add
cmc
test
and
sbb
jg
in
sti
nop
and
scas
push
xchg
adc
call
add
loopne
lock
arpl
add
imul
mov
mov
sub
dec
lret
push
out
mov
or
cmp
add
mov
in
push
cmp
cli
ret
sub
pop
add
pop
add
add
outsl
movsb
imul
sbb
inc
add
pop
adc
adc
xchg
pop
push
int
int3
sub
pop
insl
in
push
add
int3
aas
or
add
sbb
cmp
add
mov
add
addr16
lds
jmp
fcomp
pop
insl
cmp
jmp
add
int3
les
inc
mov
push
mov
clc
mull
add
or
add
sarl
and
add
sbb
adc
dec
add
fadds
add
pop
loopne
sbb
inc
mov
add
ja
fsubr
pop
data16
in
dec
add
mov
in
push
add
sarb
add
adc
push
dec
add
add
or
cmp
and
adc
leave
mov
fld
test
push
add
add
clc
ret
cmpsl
mov
push
jecxz
mov
mov
or
push
add
push
movsl
inc
adc
push
mov
pop
add
or
xchg
aad
and
push
add
jns
sub
lods
sub
ljmp
mov
stos
test
xor
enter
jmp
sub
shl
outsb
add
call
add
cmp
scas
push
out
push
add
cmp
push
add
add
mov
add
out
inc
cmp
jge
sbb
mov
test
add
bound
inc
add
add
sahf
add
mov
cmp
add
out
pop
add
add
jmp
add
aam
lcall
mov
add
and
xchg
mov
ds
loopne
add
addl
fwait
scas
push
add
pop
sub
xor
push
add
and
hlt
movsb
rorb
xchg
add
add
mov
lret
push
add
mov
into
cld
jge
pusha
add
stos
mov
add
add
add
mov
subl
das
insb
add
xchg
sbb
daa
mov
add
pop
inc
add
mov
lea
add
pop
and
add
shlb
call
cmp
mov
inc
sub
pop
pop
jae
movsb
cmp
mov
cmp
sti
cmp
bound
fcomps
and
ret
add
push
add
jns
fsubrl
iret
out
fadds
add
jle
cwtl
jns
or
ja
dec
or
popa
sub
out
out
ljmp
add
loope
or
add
add
add
mov
insl
push
add
sub
push
add
sub
or
sub
or
dec
sahf
xor
xlat
insb
add
incb
sub
add
test
sbb
mov
jns
inc
imul
add
add
add
insb
add
lahf
movsb
dec
add
mov
out
add
add
pop
add
and
xchg
cmp
add
mov
add
push
add
scas
adc
add
js
lret
repz
jb
sbb
xchg
pop
add
idiv
in
mov
mov
fildl
xchg
or
add
add
fbld
mov
cmp
jno
add
inc
add
add
add
int3
sub
jl
sub
sbb
aaa
test
lret
aam
mov
bound
xchg
sarb
jbe
shrl
sub
jmp
mov
add
arpl
dec
add
push
add
add
add
sub
jmp
xor
sbb
aam
popa
push
std
dec
inc
push
add
cltd
xor
cmp
mov
or
pop
fcomps
add
cli
pop
add
add
xor
dec
jns
cmp
addr16
popa
inc
clc
cltd
jo
add
sbb
add
out
add
mov
insb
add
jne
add
push
add
or
subl
inc
add
lock
add
repnz
int3
ret
bound
mov
jge
sbb
into
mov
cltd
stos
sarl
aam
inc
add
ret
push
jecxz
jno
mov
jns
mov
add
xchg
test
add
sbb
pusha
add
outsl
inc
add
jno
add
daa
inc
xor
imull
push
lock
imul
stc
ljmp
sub
and
mov
mov
xchg
push
sbb
xchg
ljmp
pop
sarb
pop
es
cli
and
cmpsl
pop
push
mov
add
xchg
les
mov
jg
bnd
push
adc
pusha
add
ja
add
add
cmp
sub
aaa
push
add
add
ljmp
add
dec
add
dec
lock
push
mov
add
add
and
loopne
jmp
and
pop
add
and
add
add
add
rcll
add
mov
add
push
add
aas
and
notb
add
add
aas
sti
fwait
int
inc
and
push
add
mov
scas
popf
adc
fmulp
mov
sahf
stc
and
decl
rclb
dec
sbb
sub
add
sarl
add
push
dec
add
in
mov
add
push
ret
movsb
xchg
push
mov
or
sbb
addb
pop
adc
imul
pop
add
add
stos
repnz
mov
push
add
outsb
add
xchg
push
add
add
repz
lret
or
clc
outsb
add
mov
add
pop
ret
add
daa
cli
dec
ret
pop
add
lret
push
add
add
pop
rcrb
jp
and
ret
mov
add
xor
popa
or
mov
add
mov
lods
aas
clc
iret
push
add
insl
sti
and
adc
fisubrs
add
test
add
add
mov
js
icebp
dec
test
push
add
push
push
add
mov
mov
and
mov
or
call
jl
jne
add
outsb
add
push
adc
shlb
add
jle
aad
sub
loope
add
sbb
pusha
add
xlat
sbb
popa
cld
push
add
dec
inc
add
mov
add
add
sub
in
add
add
enter
jo
or
add
mov
movsl
pop
jb
xor
jae
aad
add
xchg
mov
ss
mov
add
dec
add
dec
aam
dec
mov
aad
ja
pushf
repnz
add
add
add
hlt
sbb
xchg
sbb
paddb
xchg
daa
and
fidivrs
pop
add
xor
int
add
inc
xor
rcrb
movsb
sbb
lods
clc
adc
mov
jbe
out
arpl
inc
add
jo
push
add
add
add
loop
add
insb
add
mov
outsl
scas
sbb
xor
inc
add
mov
inc
add
add
out
shrl
aaa
mov
add
mov
idivb
add
inc
pusha
add
aas
xor
add
add
add
add
cs
sbbb
xchg
xchg
pop
add
mov
add
rcrb
sub
pop
enter
add
sub
jo
and
in
in
xchg
pop
xchg
lea
push
lods
iret
in
cmc
mov
add
inc
add
flds
enter
xchg
add
cmpsb
jns
add
mov
add
test
js
cmp
or
fdivl
xchg
lock
fnstsw
cli
and
imul
int3
jl
iret
sbb
cmp
test
adc
or
sarb
add
jg
enter
iret
aam
push
add
aas
mov
daa
jp
movsb
inc
shrb
jnp
lahf
out
call
fsubrs
xchg
sub
push
add
add
pop
and
add
mov
xor
push
cmp
mov
cli
jg
add
sub
jp
cmpsb
aad
add
jbe
jne
push
dec
scas
mov
gs
ja
imul
push
cld
aad
divb
add
mov
add
pop
inc
in
push
out
ljmp
xchg
pop
xlat
xor
mov
jne
add
mov
add
add
or
jmp
add
add
xchg
insb
add
repz
add
add
add
adc
cmc
push
add
loopne
add
add
sbb
add
lods
jns
dec
add
cmp
add
insl
sub
aam
sbb
add
add
xchg
xchg
xchg
dec
jbe
ds
repz
shl
out
fiaddl
push
daa
test
add
jb
xor
clc
add
pop
add
outsb
add
mov
in
scas
add
add
add
enter
lcall
and
lea
add
pop
add
add
xor
cmp
aas
scas
mov
cmp
sbb
gs
add
cmp
add
add
lret
jo
push
add
xchg
and
add
cmpsl
inc
or
sbb
add
mov
add
add
cmp
hlt
shrl
jae
add
lahf
jmp
pop
mov
add
scas
jl
mov
push
add
adc
and
and
leave
dec
add
out
jl
in
or
xorb
add
add
push
add
hlt
jmp
shl
loop
xor
repz
add
xchg
cltd
jge
arpl
rcrb
xor
iret
repnz
pushf
add
pop
in
loop
ret
out
fsubr
insl
inc
std
mov
cld
jnp
mov
pop
test
add
add
mov
add
add
test
sub
jp
add
mull
add
pop
scas
push
add
add
enter
dec
add
add
push
jl
aam
ficomps
pop
sti
testl
or
das
insb
add
and
xor
add
push
jge
pop
inc
or
cmp
add
addl
dec
adc
dec
rcrl
daa
dec
add
add
scas
movsl
data16
add
add
add
push
add
ret
inc
pop
add
inc
mov
push
add
inc
add
add
xchg
notl
es
sub
add
jl
xchg
mov
add
add
add
arpl
or
cmpsb
scas
int
loope
push
popa
sbb
lods
add
insb
add
add
iret
xchg
out
pop
rol
fsubl
mov
bnd
cmpsb
add
push
xchg
pop
addr16
pop
add
jbe
xchg
xchg
xchg
fidivrl
add
sub
in
lds
add
mov
xchg
mov
xchg
ret
lock
jne
lods
ret
loope
jns
es
pop
xor
sub
and
mov
je
mov
xor
add
lds
mov
mov
add
add
out
imul
jmp
es
jb
sbb
push
add
xchg
gs
outsb
add
cmpsl
pop
add
loop
jl
push
add
sbb
add
cmpsb
fs
into
ja
add
mov
cmpsb
push
add
jle
adc
fdivl
add
sahf
add
adc
add
add
xchg
cmp
fdecstp
enter
and
inc
add
out
add
lds
lcall
js
jae
cmpsb
lret
xlat
push
push
add
jno
sub
js
mov
add
push
add
add
add
daa
cmp
sub
sub
xchg
xor
popf
xchg
adc
lods
dec
add
cvtps2pi
and
mov
and
add
jl
lea
jo
push
add
push
inc
lahf
or
incl
xchg
stos
push
add
test
and
outsb
add
add
popf
pusha
add
add
dec
aad
lret
xor
and
lods
jno
add
dec
fsts
push
add
adc
inc
add
dec
add
mov
add
add
xchg
into
xor
dec
pop
imul
xchg
xor
dec
xchg
jae
bound
adc
loope
mov
adc
inc
ret
movsb
cmpsl
pop
fisubrl
int3
pusha
add
add
inc
add
mov
jb
imul
jg
add
hlt
lret
notb
add
mov
dec
add
sbbb
sub
add
insl
xor
jmp
inc
add
sti
fiaddl
mov
mul
ljmp
rcrl
gs
mov
stc
adc
sbb
and
mov
add
pop
into
sub
shrb
subb
push
lods
pop
add
add
mov
add
jnp
movsb
loopne
add
mov
in
xchg
outsb
add
add
add
add
mov
sub
or
push
add
xlat
add
mov
insb
add
cmpsb
mov
lds
xor
jns
idiv
cmp
sbb
or
scas
rclb
add
add
mov
pop
add
dec
nop
pop
call
add
fcomi
jb
add
pop
fcomps
jb
and
sub
add
add
add
lahf
dec
rorl
lcall
rorl
add
mov
xor
popa
les
and
add
ljmp
xchg
fisttpll
adc
or
in
nop
stc
lret
addr16
je
sub
stc
cmp
into
lods
popf
repnz
imul
aad
xchg
inc
add
xchg
adc
cmc
clc
cmpsb
pop
adc
or
sbb
pop
pop
jl
cmp
pop
add
add
add
mov
xor
addr16
add
add
add
les
xchg
out
jno
pop
sbb
outsl
jo
lea
push
add
jb
add
add
mov
inc
enter
add
mov
ljmp
add
xor
into
mov
or
in
add
xchg
dec
add
nop
loopne
mov
xchg
fimull
pop
out
mov
cltd
mov
loop
add
lods
movsb
and
add
add
add
mov
add
add
fadd
add
mov
cmpsb
mov
xchg
cmp
adc
or
push
cltd
sbb
sbb
mov
fnstsw
jne
jnp
pop
dec
add
add
lods
testb
add
xor
sub
ja
mov
add
jae
add
repz
js
sbb
xchg
mov
leave
xchg
sub
sbb
fmull
push
add
ret
mov
pusha
add
sbb
fistps
ja
jnp
fisttpl
les
dec
pop
add
jmp
ficoms
pop
add
jae
xor
pusha
add
sbb
fmull
or
add
flds
test
inc
add
adc
fisttpl
add
add
inc
push
add
nop
dec
add
add
add
and
add
int3
mov
cmp
or
inc
add
stos
adc
cmp
xchg
jno
pop
add
jle
xor
test
sub
sbb
add
loope
cmp
into
dec
add
add
add
fistpl
add
dec
add
add
add
pushf
pop
dec
add
rcll
add
gs
shrb
je
fbld
or
scas
das
lret
mov
out
cmp
jae
xchg
xor
mov
add
mov
jmp
add
stos
stos
adc
cwtl
jmp
xchg
mov
iret
mov
dec
add
fidivrl
out
addr16
lret
mov
pop
shll
inc
add
mov
and
lods
in
xor
add
dec
add
imul
add
sub
xor
sets
fmull
add
add
add
add
inc
sbb
jb
adc
xchg
push
add
arpl
xchg
push
add
sub
add
xchg
mov
ret
hlt
and
ja
add
cmp
insl
ja
adc
add
lods
outsl
cs
jge
add
add
pop
mov
xchg
push
add
int3
mov
adc
add
in
push
sub
push
add
mov
ds
popa
cmp
subb
mov
insl
sub
push
add
add
call
xor
stos
cmp
inc
add
add
or
sbb
cmp
fnstsw
push
add
add
cwtl
xchg
rcl
fwait
int3
push
add
add
sti
sti
scas
mov
push
add
dec
add
mov
push
adc
add
lods
shll
in
mov
mov
mov
xchg
pop
mov
inc
add
adcb
clc
add
sti
dec
jmp
add
mov
daa
cmpsl
sub
mov
inc
add
add
rol
repnz
jp
mov
shr
std
sbb
out
add
add
push
add
add
add
mov
add
xor
mov
or
test
sbb
nop
loope
outsl
jge
jp
dec
add
add
ret
sbb
cmpsl
out
mov
push
adc
xchg
aas
mov
fisubs
pop
xor
mov
add
cltd
and
add
add
jl
jo
push
xor
jmp
add
fdivrp
mov
loope
mov
add
add
stc
cmpb
dec
add
sub
xchg
jb
adc
andl
scas
xchg
push
jb
add
stos
dec
mov
jb
jmp
stos
inc
or
inc
add
into
xchg
les
cmp
add
add
loopne
add
cmpsl
xchg
popa
scas
and
std
in
lcall
inc
add
ret
sarb
add
fsubrp
cld
jmp
cmc
pop
mov
test
push
adc
mov
add
add
gs
cmc
arpl
and
shlb
gs
push
sub
out
xor
repnz
lds
add
add
cmc
mov
or
add
and
lahf
out
pop
stc
sbb
add
add
jecxz
mov
mull
add
cmp
mov
movsb
call
add
cltd
push
add
add
mov
and
and
gs
add
push
add
jl
jecxz
mov
add
push
add
popf
xchg
aad
loop
add
shl
cwtl
leave
rcrb
mov
lret
repz
mov
test
add
add
mov
add
lcall
or
pop
fadds
jecxz
add
cmpsb
int3
lock
push
add
in
jl
add
loop
stc
cmp
jl
jb
lahf
dec
xlat
dec
mov
aaa
jmp
xchg
into
lcall
add
pop
lods
repz
cmp
mov
xchg
jecxz
shl
test
pop
jae
add
adc
jl
bound
int
cmpsb
push
popf
test
jl
daa
call
cli
psraw
push
add
and
sahf
or
popa
xchg
mov
add
push
add
add
xchg
push
add
pop
push
add
dec
push
or
inc
inc
add
add
hlt
loope
dec
or
pop
add
and
fdivl
add
add
mov
ret
add
adc
cmp
jae
add
jg
mov
icebp
call
data16
movsl
and
push
add
add
pop
push
loop
add
add
rorl
fwait
xchg
push
shlb
test
add
movsl
loop
add
add
call
mov
add
add
cmc
xor
add
aad
insl
inc
pop
mov
cmp
mov
sbb
xchg
mov
in
loope
add
add
add
xchg
ret
sub
add
pop
sub
push
add
xor
sbb
jg
add
sbb
or
add
add
cli
add
sbb
jl
pop
imul
aam
dec
add
inc
adc
loope
jns
aad
loop
shrb
shrl
add
stos
sub
arpl
rol
xchg
jmp
and
lret
or
add
insl
jnp
dec
add
repz
add
cltd
pop
dec
add
adc
aaa
cmp
mov
add
lret
mov
jl
aaa
loop
add
add
out
into
fwait
mov
clc
pop
add
add
fsubrs
sbb
add
push
add
call
fsubs
jmp
and
mov
mov
scas
dec
add
scas
mov
rorl
aad
add
add
mov
add
dec
mov
pusha
add
add
add
clc
pop
dec
push
add
add
add
dec
add
mov
test
push
add
add
inc
mov
sbbb
cmp
stos
jbe
addr16
add
add
inc
jae
add
add
add
test
add
push
call
jmp
jne
mov
add
cmp
icebp
jns
push
add
pop
add
push
sub
fistl
xchg
loop
movsb
xchg
xor
dec
cltd
iret
fucomi
das
dec
add
or
insl
inc
add
push
jae
loop
add
dec
inc
add
xor
in
mov
dec
add
sbb
mov
jmp
xchg
mov
add
leave
sbb
mov
push
add
add
add
and
push
add
leave
repnz
imul
add
loope
adc
pop
jb
aaa
push
inc
subb
imul
xchg
jae
sub
stc
cmp
add
add
clc
mov
add
mull
bnd
paddsw
or
js
outsl
imul
xchg
push
dec
loop
and
pusha
add
push
outsl
insb
add
sub
and
fidivs
ljmp
lret
dec
add
add
inc
cmp
in
add
sti
cmp
xchg
xor
pop
pop
add
add
add
nop
lods
inc
add
xorl
mov
push
dec
jl
ret
add
or
adc
cmpsl
inc
repz
add
les
sub
dec
insl
mov
add
addr16
or
mov
push
rcrb
inc
add
sub
add
sub
dec
add
xchg
push
xchg
mov
aas
add
sub
repz
mov
clc
dec
pop
add
jg
xchg
dec
or
mov
mov
xor
insl
sub
and
mov
add
push
add
pavgw
dec
fldenv
add
movups
mov
inc
add
scas
push
add
add
add
mov
add
call
pop
sub
jb
movsl
mov
pop
dec
mov
xchg
push
add
add
mov
or
add
mov
cmp
das
lret
and
imulb
add
pop
add
pop
push
rolb
xor
enter
add
jae
repnz
adc
xchg
fdivrl
and
cli
pushf
pusha
add
add
jb
ja
add
scas
add
les
add
xor
add
fdivrl
pop
rorb
in
dec
add
add
add
add
add
add
mov
add
cmpl
push
add
dec
mov
rorb
or
pop
add
iret
mov
jo
jle
xchg
aam
add
repnz
in
mull
mov
add
add
mov
bound
bound
sahf
sub
add
aaa
xor
std
lock
mov
or
xor
inc
insl
outsb
add
xchg
adc
cmp
insl
inc
add
lret
or
mov
add
jecxz
add
inc
inc
add
lds
test
fcomps
add
xor
adc
cmpsb
xchg
icebp
sbb
inc
jnp
movsb
out
add
cmp
pusha
add
fisubs
push
add
dec
cltd
sarl
enter
aaa
enter
data16
add
popf
xchg
pop
call
ljmp
adc
icebp
add
rol
iret
imul
add
ljmp
mov
adc
jo
cmpsb
test
jmp
sarb
rolb
sti
push
lahf
mov
add
cmpsl
dec
xchg
cmp
inc
add
lret
sbbb
jno
out
loop
xor
lods
add
das
push
add
add
inc
cmpsl
icebp
scas
popa
add
add
test
inc
jae
stos
mov
mov
push
add
jge
add
add
add
sub
mov
neg
clc
out
repz
outsl
dec
push
inc
sar
mov
push
add
add
pop
shlb
cmpsl
add
add
fcmove
imul
and
add
push
add
fisttpl
aad
jno
push
mov
or
pop
add
push
add
in
into
arpl
add
add
inc
add
add
or
push
add
add
add
sub
lods
sbb
xchg
mov
mov
push
push
add
mov
mov
aam
pop
scas
cmp
rol
dec
imul
inc
add
cmp
push
add
mov
inc
add
mov
or
pop
xor
ret
leave
push
add
cli
je
inc
add
enter
add
push
add
xchg
or
out
cli
xchg
shll
mov
jge
add
shufps
push
add
add
jmp
mov
add
cli
jnp
and
in
mov
fidivrs
add
and
xor
and
push
xchg
sub
cmpsb
sub
sbb
add
jle
outsb
add
inc
cmpsl
ljmp
hlt
mov
imul
cli
sbb
sub
add
add
rolb
mov
dec
push
rcll
xchg
cmc
xchg
jge
add
add
xchg
sbb
add
lahf
inc
xchg
hlt
add
adc
mov
ja
mov
add
test
sub
std
lock
jae
and
add
mov
test
addl
push
pop
addl
inc
cli
clc
fwait
pop
inc
add
add
cmc
mov
insl
loop
clc
arpl
adc
add
incb
add
je
cmpb
mov
add
arpl
jns
test
psubusw
push
out
loop
add
add
xchg
aaa
inc
add
add
jae
movsb
mov
loop
add
mov
add
mov
push
mov
or
enter
add
pop
add
inc
pop
daa
lock
adc
negl
fmul
mov
cmp
xlat
jg
sub
inc
add
inc
cmp
shrl
pop
cmp
fcmovne
fwait
cmpsb
jne
cmpsb
pop
fisubrs
cmp
add
clc
mov
sbb
or
push
add
dec
add
mov
mov
fidivrs
add
lods
add
jge
mov
fnsave
out
addl
add
add
cmp
or
call
mov
cwtl
cld
movsb
dec
add
push
add
outsl
in
fwait
lret
sbb
mov
add
mov
in
int
or
push
sbb
insl
cmp
adc
add
add
add
add
inc
dec
xchg
pop
icebp
cwtl
sar
aas
jg
add
mov
add
arpl
call
lods
xlat
stc
xor
loopne
movsl
and
or
lods
push
xchg
jecxz
ss
xchg
inc
add
xlat
xor
add
fmull
enter
std
sub
pushf
or
add
add
add
add
into
jne
jle
add
pop
add
sti
push
loope
je
mov
sarl
add
call
insl
fmul
mov
add
dec
enter
pusha
add
pusha
add
xchg
sub
lret
add
pop
das
sbb
lock
mov
mov
push
add
test
mov
loopne
enter
add
sub
in
movsl
rorb
add
ja
sarl
inc
sti
cmp
outsl
loope
dec
xchg
clc
xor
faddl
add
lahf
adcl
and
or
cmp
push
andl
call
jg
adc
in
jnp
xor
push
add
add
and
sbb
sahf
pop
clc
push
add
add
pop
sub
ret
add
jo
push
pop
fistps
add
xchg
and
test
mov
dec
or
cwtl
imul
mov
add
test
jb
leave
jg
jb
and
xchg
and
add
dec
xchg
imul
dec
add
lret
mov
mov
leave
test
add
dec
add
ds
fistpl
jmp
add
add
divl
cltd
add
cmpsb
sbb
insl
rclb
mov
dec
add
add
inc
add
push
pop
or
add
fmuls
add
add
add
dec
add
cwtl
and
mov
pop
add
popa
into
sti
mov
data16
inc
add
xchg
and
dec
add
scas
ljmp
pop
add
icebp
xchg
push
add
add
mov
add
popf
or
negb
add
add
cwtl
scas
xsha256
cmpsb
adc
movsl
sbb
add
or
add
add
xchg
mov
clc
pop
divb
sbb
popf
inc
mov
mov
add
mov
add
add
cld
push
add
aas
push
add
mov
add
xchg
sbb
dec
add
add
add
add
rcll
cli
pop
add
pop
lods
xlat
adc
mov
push
add
bound
popf
push
jb
adc
in
test
add
jp
movsb
js
adc
roll
fadds
jnp
inc
add
cwtl
les
xor
mov
add
mov
sbb
and
jecxz
fsub
leave
data16
xchg
mov
fisttps
add
popa
xchg
mov
mov
jnp
mov
pop
insl
sbb
repz
xchg
pop
push
add
push
in
add
mov
jb
sbb
and
in
add
into
pop
add
inc
add
adc
sub
pop
add
loop
decb
cmc
or
pusha
add
cmp
adc
add
clc
fcmovne
stos
jae
add
lret
add
mov
popf
cmc
adc
push
add
mov
in
xchg
jg
sub
arpl
xor
sbb
sbb
mov
push
add
imul
int3
cmc
mov
jle
arpl
in
add
pop
sub
cmp
cli
and
mov
ret
add
push
add
jnp
add
sbb
clc
aas
or
aaa
or
dec
mov
add
rolb
dec
add
add
lret
leave
jnp
sbb
inc
add
je
incb
insb
add
insl
cld
jno
scas
std
das
rorb
add
cwtl
or
mov
add
xlat
stc
mov
faddl
mov
addb
sub
pusha
add
lret
pop
add
sbb
cmc
lret
cmp
add
add
rclb
dec
jne
inc
cmpsl
testb
mov
testb
add
xlat
xor
add
xchg
xor
pushf
add
add
add
adc
mov
orl
push
add
out
stos
adc
ljmp
cmp
out
dec
add
neg
add
push
add
add
add
add
arpl
add
xchg
add
lods
gs
push
add
scas
jmp
pop
and
jno
dec
lret
lds
add
add
sbb
mov
out
add
in
add
jo
inc
cmpl
or
fcomps
inc
mov
cmp
enter
add
dec
add
sub
jecxz
adc
xlat
pop
add
push
add
add
pop
add
jp
subb
jecxz
movaps
xchg
push
add
adc
xchg
mov
adc
pop
sahf
jns
add
or
add
jnp
xor
pop
xchg
out
sub
xchg
lret
push
add
add
add
cmp
pusha
add
mov
add
jge
jno
mov
pop
jnp
ret
sub
shr
push
add
ja
sbb
in
fmul
add
sbb
mov
cld
loope
rcrl
sbb
filds
and
xchg
cmp
fidivrs
inc
add
add
ja
lcall
push
add
enter
xchg
or
mov
test
add
mov
out
sub
pop
add
xor
mov
inc
add
add
daa
mov
add
add
pushf
fcmovnu
push
add
popf
sti
dec
add
sub
stc
fidivrl
add
adc
aam
inc
pop
pop
add
lret
add
sbb
rolb
mov
leave
push
add
arpl
test
dec
and
lret
inc
add
insl
pop
add
test
xlat
lods
xorl
mov
jp
mov
js
mov
in
jns
cmpsl
cld
daa
aaa
daa
roll
add
cmpl
add
pop
popf
or
adc
sub
out
jb
shlb
push
add
mov
add
rorl
std
xor
ljmp
inc
ljmp
add
cwtl
and
sbb
dec
ret
imul
xor
mov
mov
loop
add
int
mov
or
insl
loop
mov
jmp
lea
xor
adc
mov
xchg
pop
mov
sti
mov
push
clc
rolb
pushf
rcll
add
mov
add
jmp
cmp
pop
rcr
stos
sub
mov
mov
mov
mov
stc
mov
cmpsb
in
xor
pop
add
ret
repz
leave
pop
add
jns
loop
fadd
push
jae
pop
popf
fdivp
xchg
inc
dec
cwtl
cld
jb
fisttpll
cmp
dec
adc
test
add
fdecstp
mov
add
lahf
call
add
lock
sarl
loop
push
add
add
adcb
pop
mulb
pop
repnz
pop
or
add
sahf
add
pop
add
adc
sti
xor
pop
pop
add
inc
jmp
add
xchg
add
add
add
adc
sub
popa
jae
add
icebp
or
xchg
cmp
xchg
sub
jb
in
shrl
add
adc
add
fsts
add
mov
jmp
jnp
add
mull
jb
pop
mov
push
movsb
inc
add
addr16
leave
sbb
inc
pop
push
lds
inc
add
add
fcomps
pop
repz
add
lods
aas
les
inc
inc
cmp
adc
adc
data16
add
cwtl
mov
ja
add
lock
int3
jnp
xchg
mov
scas
add
sbb
lret
les
add
shll
mov
add
jmp
add
js
cld
insb
add
in
lcall
pop
std
sbb
mov
add
pushf
outsb
add
in
arpl
add
mov
inc
add
imul
loope
add
loop
add
fsts
add
xchg
add
add
shlb
xchg
iret
aam
in
cmp
cwtl
ljmp
dec
add
add
lock
mov
mov
xchg
inc
add
add
sbbb
jne
add
add
add
and
mov
jle
pop
sbb
cli
movsl
incb
fsubrl
add
push
add
jmp
add
das
in
add
xor
or
in
jbe
add
lret
fiadds
pop
add
in
add
cmc
mov
gs
test
out
int
add
add
jne
add
icebp
cwtl
cmp
xchg
add
mov
or
lea
mov
jns
or
cmpsl
mov
add
and
mov
call
imul
iret
in
xchg
push
inc
mov
das
dec
mov
mov
jg
mov
rcr
jg
stos
insb
add
xlat
stc
jp
jns
adc
cwtl
fwait
in
sbb
outsl
adc
and
and
testl
negb
push
out
sub
aas
dec
add
fists
xchg
mov
add
and
mov
add
out
push
jmp
add
stc
roll
add
mov
mov
dec
jge
lock
push
jae
add
out
call
repnz
pop
pop
pop
add
lcall
and
add
pushf
cmp
in
nop
push
pushf
dec
pop
and
add
fldenv
add
inc
add
stos
xchg
adc
hlt
add
add
mov
or
cmpsb
fstpl
push
add
add
adc
add
add
into
enter
js
cld
pusha
add
add
cltd
repnz
sub
inc
add
mov
add
add
mov
add
sub
jb
jmp
mov
jg
jp
cmp
add
mov
cs
lods
ror
xor
insl
push
add
add
dec
pushf
stos
or
nop
push
add
add
jns
add
push
add
data16
adc
ficoml
push
add
cwtl
xor
testl
or
sub
gs
mov
xchg
sti
add
adc
add
cmp
add
add
push
mov
cs
xor
stc
mov
or
mov
add
add
sbb
ret
mov
add
pop
or
add
add
lods
shl
add
xchg
mov
add
mov
add
cmp
mov
sbb
mov
add
dec
dec
add
xlat
xchg
push
add
mov
jmp
outsb
add
mov
mov
mov
push
add
xchg
add
inc
add
jb
int3
mov
add
into
lds
cmp
or
dec
add
jmp
adc
lcall
add
and
xchg
imul
add
dec
add
adc
sbb
sub
fldl
add
icebp
inc
arpl
xor
andb
pop
add
xor
push
xchg
dec
add
add
jnp
add
add
add
fcmove
inc
add
and
pop
mov
outsl
cwtl
addr16
pop
pop
inc
add
add
fwait
cmp
add
add
mov
ficompl
add
add
add
and
lods
mov
stos
clc
loopne
sub
sub
xchg
mov
int3
mov
data16
repnz
inc
add
pop
add
test
pop
mov
add
pop
sub
push
out
add
mov
add
dec
cmp
dec
ja
test
xchg
dec
repz
add
fwait
xchg
cmc
pop
sbb
jl
jmp
popf
push
add
fnstenv
sub
cmpsl
push
sbb
adc
xor
jbe
pop
add
add
jnp
call
mov
ficoms
add
andl
leave
bound
call
sbb
add
test
loope
add
xor
mov
xlat
cmpsb
xchg
cwtl
imul
mov
nop
cmp
cltd
adc
dec
jg
inc
add
in
jo
mov
mov
jne
repnz
adc
jecxz
add
push
add
adc
add
insb
add
dec
stos
mov
aas
ds
and
fdivrl
popa
iret
or
and
sub
add
xchg
insl
xor
xor
mov
mov
movsb
stos
push
add
cmpsb
ret
sti
cmpsb
sub
add
xlat
out
push
movsb
in
and
mov
lods
cmp
test
add
in
xor
add
xor
add
jns
add
add
fidivrs
mov
add
dec
add
add
or
je
hlt
cwtl
stc
and
jb
lods
arpl
push
add
sbb
daa
and
js
or
movsl
movsb
les
sbb
jl
pop
add
dec
push
sbb
mov
and
es
xchg
xchg
xchg
mov
add
add
add
std
add
xchg
test
jbe
jg
mov
test
cli
in
daa
enter
add
or
cmp
cld
mov
icebp
enter
and
ficoms
add
cmp
add
and
sahf
sbb
outsl
lcall
add
icebp
jmp
jae
out
test
in
xchg
cmp
pushf
sti
mov
add
push
add
jnp
lods
mov
icebp
push
add
fadds
add
adc
sub
popa
dec
mov
add
imul
bound
sahf
or
add
sahf
push
add
sbb
xchg
sub
repz
dec
add
add
cmpsb
das
and
lcall
add
push
push
add
shlb
add
add
negb
into
cmp
frstor
add
repz
mov
out
aas
mov
insl
push
dec
add
out
xor
and
xlat
jp
stc
mov
rol
arpl
dec
add
fnstenv
add
push
add
outsb
add
shrl
adc
xor
push
cwtl
out
push
add
pop
add
xor
test
js
mov
outsb
add
xor
cmp
jl
jnp
add
xchg
sahf
xor
xor
andl
mov
inc
cld
lods
int
add
pop
add
lret
lret
dec
jno
add
lods
dec
add
add
cmc
inc
jmp
sub
and
push
add
push
add
xor
mov
xor
lods
jge
and
xchg
xor
fistl
jecxz
add
cmpsl
adc
mov
sub
loopne
xchg
shrl
insl
mov
pop
add
push
imul
add
lods
cld
lods
jbe
gs
add
inc
add
pop
add
add
jns
in
rcll
xchg
sub
mov
adc
add
add
lahf
int
xor
mov
mov
ret
add
jb
and
add
lret
pop
aam
mov
xchg
arpl
leave
in
mov
mov
xchg
fildl
add
lcall
add
pop
sbb
enter
add
dec
sbb
lods
add
inc
jl
add
mov
add
push
add
dec
inc
add
sti
daa
add
dec
cmp
xchg
je
dec
xor
jne
cmp
mov
dec
jo
jns
frstor
pop
std
scas
dec
add
push
xchg
add
insl
mov
add
add
pusha
add
add
add
push
sbb
aam
push
add
movsl
fdivr
mov
ret
pop
add
add
add
xchg
push
add
sub
inc
add
add
aas
xchg
or
int3
mov
das
jae
mov
adc
and
push
add
sahf
ror
or
and
jne
add
je
fildll
adc
out
mov
add
popa
loop
xor
cmp
add
xor
hlt
or
inc
pop
add
and
add
outsl
fcmovnu
adc
aad
sub
ret
adc
pop
add
xor
lock
xchg
lahf
subl
or
sub
loope
test
gs
mov
add
cmp
xchg
inc
inc
ds
or
int
decl
test
add
jno
leave
into
or
add
add
add
dec
cld
les
jp
sbb
cli
ror
add
mov
mov
and
sbb
sti
pop
dec
bswap
push
jle
inc
add
in
mov
lret
bound
lahf
cmpsb
adc
shll
add
mov
into
out
sbb
popf
repnz
mov
add
loop
lock
add
leave
clc
decl
pop
add
pushl
inc
add
inc
add
lea
out
add
add
incl
sbb
lahf
ja
adcb
int3
int
jle
sub
in
push
add
xchg
dec
xor
fimuls
std
shr
or
jg
scas
movb
xchg
add
lods
mov
push
add
mov
push
mov
in
sub
data16
cmp
stos
insb
add
mov
dec
sbb
add
in
mov
in
xor
adc
fstpt
pop
pop
arpl
pop
shr
sbb
add
adc
jp
stos
add
push
push
add
add
add
inc
add
ret
sbb
jmp
push
add
xor
pusha
add
add
stos
inc
add
aas
inc
push
add
add
popa
arpl
dec
sub
shr
add
movb
dec
add
add
sbbb
mov
sub
inc
add
add
test
mov
fwait
mov
pop
loop
scas
adcb
mov
add
sbb
add
sub
add
add
cwtl
xchg
movsl
xchg
mov
je
sbb
adc
add
inc
sbb
pop
add
lods
push
add
clc
sbb
or
js
scas
lcall
or
xchg
sub
inc
add
imul
mov
out
imul
xchg
lret
iret
incb
sbb
mov
or
mov
add
insl
mov
pop
mov
shrd
xchg
push
inc
fst
jp
mov
sbbl
cmp
inc
add
push
add
and
add
adc
jne
xchg
or
sub
cmp
test
add
jg
jae
dec
add
pop
aaa
fnstsw
movsb
and
outsb
add
cld
iret
add
adc
add
pop
jo
cwtl
mov
leave
into
add
enter
rcl
pop
fldenv
adc
adc
movsb
and
test
int3
xchg
xor
mov
sub
rcrb
pop
inc
movsb
mov
dec
out
mov
add
jno
push
rcl
fbld
std
pop
xchg
adc
rorl
das
add
mov
xchg
pop
test
insl
in
jle
icebp
mov
add
shl
add
ror
arpl
sbb
push
add
add
add
cwtl
scas
sub
lods
mov
xchg
cmp
dec
add
add
add
mov
dec
fnsave
xchg
cmp
in
push
add
cmp
jg
lahf
and
addr16
add
add
inc
add
neg
loopne
add
add
add
test
dec
add
outsl
push
add
shll
cli
mov
add
sti
jns
mov
out
xor
out
sub
scas
clc
xor
add
and
sarb
add
xor
loop
outsl
shll
sbb
inc
fdiv
cmp
mov
daa
mov
sub
inc
add
inc
stos
push
rcrl
rcl
xchg
sbb
daa
add
add
xor
adc
mov
add
mov
repnz
pop
add
lret
mov
add
push
add
cwtl
cmp
push
pop
add
xchg
inc
subb
add
rolb
push
pop
add
pop
add
pusha
add
add
add
add
ret
push
jbe
add
mov
pop
and
sbb
and
and
jnp
cmp
scas
dec
es
outsb
add
mov
cmp
or
and
or
insl
xchg
add
ret
loop
rolb
cmpsb
add
push
add
add
test
push
add
and
aas
fdivl
dec
add
call
add
add
adc
fisttpll
out
sbb
negb
push
add
xchg
inc
add
inc
add
xchg
xor
pop
lea
lock
add
add
test
fadds
lds
add
sahf
je
test
jae
loope
xor
push
add
ret
pop
add
enter
xchg
xlat
jmp
pop
add
mov
adc
mov
add
pop
enter
out
push
pop
cmp
lret
jo
rclb
xor
add
ljmp
cs
mov
mov
test
add
add
add
loope
xchg
cmc
adc
xchg
add
dec
add
ljmp
movb
shr
mov
mov
pop
add
add
add
and
mov
or
cli
movsb
leave
shlb
aam
and
je
cmp
inc
icebp
addr16
push
add
movsl
xor
sbb
mov
pusha
add
dec
dec
mov
test
add
add
xlat
cmp
mov
test
xor
jg
cmpsl
cwtl
push
mov
adc
pop
cld
cltd
jg
add
xchg
cld
insb
add
xor
push
add
sub
sub
in
imul
and
cwtl
enter
mov
or
bsr
jle
ret
pop
add
fsts
add
icebp
movsb
pop
mov
lcall
cmp
add
das
in
add
jmp
mov
mov
xchg
mov
mov
add
jge
xchg
pushf
mov
cmc
push
add
add
cmp
cmpsb
xchg
cmpsb
dec
hlt
inc
add
mov
aam
pop
add
jp
mov
add
xor
pop
sub
fs
movl
pop
add
test
cli
addl
mov
mov
mov
push
add
add
int3
imul
cli
add
adc
ss
pop
and
add
jbe
decl
test
sub
dec
add
adc
loopne
cmp
mov
ss
int3
cmp
lcall
add
aam
in
sub
scas
dec
les
add
ret
add
xor
sti
add
xchg
test
jo
or
sub
out
aaa
mov
decb
icebp
scas
add
mov
add
dec
push
add
add
add
lcall
mov
add
xor
jge
cmp
dec
add
add
repnz
dec
add
fneni(8087
fsubl
add
add
fstp
je
testl
add
add
cmc
push
or
ljmp
add
add
mov
mov
out
push
add
jg
insl
xor
jne
mov
cmc
mov
lock
push
add
xor
outsb
add
push
add
add
sbb
sub
jmp
loop
pop
add
dec
add
push
cmp
xor
xor
xchg
cmpsb
jbe
or
xchg
or
lods
gs
pop
add
es
add
dec
push
pushf
adcl
std
fwait
push
jp
pop
push
fsubs
add
add
push
fstl
xchg
test
add
add
leave
mov
add
add
pop
jg
add
ja
dec
cmpsl
jle
mov
pop
jne
add
add
out
add
add
xchg
int
xchg
add
add
cmp
stos
and
jbe
repnz
lret
in
pop
add
add
je
aam
push
add
mov
cmpsb
xor
nop
lock
add
add
add
js
push
fldenv
add
add
add
pop
add
jg
fbld
aaa
fcomi
hlt
call
jle
out
mov
fistpl
sarl
and
dec
ljmp
add
sahf
adc
inc
add
pop
sar
nop
fbstp
popa
lea
xor
add
les
inc
add
jp
aam
insb
add
cmp
dec
int
add
add
fimuls
jo
data16
add
jmp
add
cmp
mov
add
push
add
xchg
push
lods
and
add
push
add
push
add
add
xchg
shlb
add
push
mov
roll
add
cld
pop
mov
or
mov
xchg
scas
ljmp
sahf
fbstp
add
stos
pop
sti
xor
xchg
xor
call
and
adc
cmc
outsl
cmc
push
add
adc
add
adcb
add
add
popa
mov
sbb
movsb
push
test
xlat
or
add
add
test
push
xchg
insb
add
pop
add
push
add
or
xchg
add
int3
mov
add
iret
shll
jbe
mov
add
jle
stos
dec
rolb
pop
add
add
fsubl
xor
xchg
cmp
fwait
test
or
inc
shr
add
add
add
add
imull
popf
add
adc
jae
mov
xlat
lds
ficompl
add
movsb
jns
mov
add
lret
les
add
fdivrl
mov
add
into
jb
or
add
add
idivb
inc
push
icebp
add
sbb
add
sbb
ljmp
jg
pop
add
dec
dec
add
xchg
inc
add
aas
adc
pop
add
and
inc
fldt
add
fsts
jne
add
add
cmp
loop
xor
add
add
dec
in
out
cmp
mov
add
outsl
out
adc
adcl
xchg
add
lret
or
stos
pushf
xchg
or
xor
movsl
mov
fwait
bound
call
xor
sub
rorb
icebp
mov
add
les
add
int3
xchg
hlt
test
cmpsb
lods
mov
mov
xchg
divb
sbb
adc
ja
rcrl
pop
vpand
add
fidivrl
cmp
cmp
mov
mov
in
inc
pop
add
add
add
xlat
test
repz
pushf
insb
add
push
add
and
push
add
push
add
cmpsl
out
movsl
mov
repnz
push
pusha
add
push
push
add
lds
in
jl
aam
testl
add
xor
popa
pop
jo
fmul
adc
or
add
cli
add
aas
imull
imul
test
rcr
in
fdivl
pop
fistl
imul
fdivrs
call
jp
push
call
add
add
std
lret
int3
dec
add
adc
xchg
push
add
mov
fcomps
add
test
jmp
add
xor
fidivrl
das
subl
pop
add
rol
dec
test
and
add
push
add
xor
aas
out
call
sub
mov
and
arpl
push
add
add
add
dec
stos
add
pop
sub
cli
sbb
popa
or
cwtl
xchg
add
add
loope
popl
lcall
add
insl
or
int3
push
add
xor
xor
adc
xchg
add
stc
and
push
add
lcall
mov
jmp
dec
sub
insl
je
dec
fldenv
gs
fwait
or
int3
mov
add
jle
shl
mov
std
movb
clc
movsb
push
pushf
jb
popf
pop
add
ja
add
rcl
cwtl
dec
add
add
dec
pop
push
add
loopne
add
in
jp
mov
js
mov
add
cmpb
cmp
sti
xchg
cmp
outsl
aam
outsb
add
xchg
out
inc
outsl
shll
mov
cmp
cmp
add
orb
xchg
jns
add
add
ret
jle
add
outsl
cmc
cli
push
add
xchg
dec
sub
cltd
fcompl
xchg
push
add
add
addb
add
add
mov
jl
push
add
inc
add
add
ljmp
aas
fimull
sub
add
add
lds
add
add
popf
xor
jbe
div
jg
add
jo
cwtl
mov
pop
jmp
sub
pop
add
gs
jnp
stos
or
add
mov
inc
add
add
cmp
inc
add
cmp
xchg
aam
add
push
add
add
insl
pop
and
mov
fidivrs
add
dec
add
out
movsl
xchg
nop
or
add
imul
add
mov
pusha
add
lret
mov
sub
sbb
and
cmpsl
mov
imul
out
sub
jg
add
aad
xchg
lret
add
cmp
add
fstps
mov
add
outsl
es
mov
inc
mov
loope
ljmp
gs
ljmp
cltd
rorl
xor
inc
add
add
mov
in
daa
enter
add
jae
add
inc
dec
add
movsl
mov
push
addr16
add
jno
xchg
ret
in
adc
xor
incb
mov
add
inc
add
in
mov
mov
mov
std
and
mov
mov
fwait
and
inc
add
fdivr
push
shl
mov
add
add
xchg
loope
mov
scas
jmp
add
add
mov
xor
inc
jae
add
ljmp
add
add
xor
pop
add
add
add
push
add
push
cltd
sub
lods
or
outsb
add
add
mov
xchg
mov
aaa
int3
data16
add
add
add
mov
add
xor
add
add
add
add
mov
add
push
add
fisubrs
ret
or
add
mov
push
cli
jo
rolb
add
cmpsl
pop
cmpsb
xor
or
cld
iret
aad
pop
xchg
insl
ffreep
sub
inc
add
xor
fcmovnbe
js
stos
mov
aas
sub
rcrl
clc
add
aad
jno
xor
pop
add
repz
push
push
add
lahf
ret
js
xchg
mov
mov
fistps
adcl
add
add
add
add
push
add
mov
add
pop
add
jmp
pop
add
jmp
mov
mov
add
jecxz
push
cmp
dec
add
pop
add
fnstsw
add
fbstp
xlat
xor
lods
mov
pop
movsb
cld
sub
lea
adc
scas
fsubrs
pop
ljmp
add
int3
mov
add
add
addr16
add
and
cmp
jb
xchg
cmp
add
aaa
pop
mov
add
ja
scas
pop
jmp
xorl
xsha256
cmpsb
aad
inc
mov
and
add
movsb
adc
inc
lret
sarb
cmpsb
jnp
or
pop
mov
sub
test
mov
adc
add
or
int3
xor
fcmovbe
mov
outsb
add
sti
in
add
inc
add
psubusb
outsb
add
pop
adc
loopne
int3
or
hlt
pop
xor
pushf
ljmp
ret
inc
add
add
add
add
or
add
mov
lods
insl
or
add
fldenv
std
sahf
sub
in
inc
add
int
add
sbb
cmpsl
out
aam
pop
add
mov
add
add
dec
sbb
mov
out
mov
mov
into
or
sub
sti
mov
dec
add
sbb
jge
pop
dec
movb
mov
sub
add
add
sarb
mov
cmp
jge
dec
add
movsl
xchg
and
inc
jmp
pusha
add
push
add
mov
aaa
cltd
lods
cmp
stc
rsm
jecxz
dec
add
fwait
sar
in
cs
les
loope
repz
fidivrs
lods
inc
add
movb
add
jns
rclb
add
add
inc
int3
jp
xchg
mov
add
mov
add
mov
mov
add
mov
cmpsl
fucomi
fdivr
gs
mov
adc
stos
out
lods
push
xchg
sub
add
leave
inc
movsb
mov
fxch
idiv
mov
add
pop
add
test
add
adcl
aas
or
out
std
sub
add
ret
es
xchg
xlat
push
call
pop
sub
jne
add
cmpsl
jle
out
mov
inc
add
add
lds
cmp
and
jle
or
add
repnz
leave
icebp
push
xchg
enter
add
dec
push
add
bound
mov
insl
xchg
rcll
out
scas
pop
and
jle
pop
outsb
add
jns
js
jb
sarb
dec
push
add
outsb
add
mov
add
arpl
sti
fildl
mov
add
add
pop
outsl
dec
add
and
rclb
jp
data16
xor
add
push
add
popf
cmp
jmp
iret
inc
add
subb
fcmovnb
enter
add
xchg
popl
add
popf
fucomi
push
cmp
mov
add
loopne
test
in
in
add
out
add
xchg
fldt
xchg
jg
add
push
add
jge
sarl
sub
fdivs
mov
or
mov
add
and
jp
fiadds
mov
xchg
mov
dec
add
add
cmc
data16
call
inc
or
loopne
lahf
pop
add
push
add
out
sub
xor
stos
cmpl
add
mov
jae
orl
pop
add
clc
test
jnp
mov
dec
add
xchg
mov
mov
add
add
rcr
add
add
int3
sbb
sub
and
les
cwtl
or
divb
cmc
sub
loop
push
inc
add
in
add
shlb
mov
aaa
enter
out
sarl
add
popa
fildll
inc
add
and
add
loop
add
pop
push
insb
add
jle
inc
inc
jb
punpcklbw
jmp
add
aas
mov
push
add
mov
sbb
adc
jns
add
add
lods
pop
fcomip
lds
fbstp
push
add
add
sbb
and
add
xchg
pop
mov
add
sti
mov
add
mov
adc
int3
sub
xlat
dec
jmp
pushf
les
jecxz
xchg
inc
add
and
movsl
and
in
dec
add
fimull
pusha
add
fistps
add
fildl
imul
push
add
imul
xchg
pop
ret
mov
xchg
cli
shll
mov
xor
test
pusha
add
pop
iret
fmuls
add
add
cmc
ljmp
or
push
add
jno
cwtl
xchg
mov
mov
fistpl
test
orb
stc
inc
add
cmp
jns
out
adc
jnp
lret
xchg
out
mov
add
xchg
cmp
mov
das
add
add
and
repnz
pop
cmc
lods
xlat
stos
int
add
add
mov
inc
pop
add
add
add
sahf
dec
add
js
lahf
cmc
enter
loope
push
pop
mov
add
inc
add
sub
cli
cmpl
add
roll
outsl
adc
cmp
cli
jb
add
add
pop
sub
scas
loope
add
cli
adc
cmpl
add
jmp
add
xor
or
mov
add
add
pop
add
dec
add
inc
add
add
push
add
adcb
lock
insb
add
push
add
popa
pop
lea
cmpsb
testl
or
dec
out
mov
add
pop
call
scas
mov
inc
incl
xchg
repnz
add
add
add
push
add
gs
add
add
adcl
jl
sub
cmc
sti
test
add
insl
adc
mov
lcall
adc
sbb
idivb
add
cmovb
bound
repnz
mulb
add
mov
add
pusha
add
add
stos
mov
add
ja
or
jg
add
in
lds
add
add
jnp
jo
notl
mov
add
jb
outsb
add
ljmp
add
mov
add
add
aam
or
div
rolb
mov
rorb
add
adc
das
or
mov
add
cld
jo
in
dec
or
pop
add
xchg
xorps
in
std
adc
bound
andl
xchg
or
xchg
cwtl
sub
inc
add
add
mov
inc
stc
sbb
sub
add
jl
sub
es
sbb
dec
pop
xchg
xlat
icebp
dec
js
pop
add
add
adc
mov
xlat
movsb
dec
jmp
les
pop
add
rcrb
call
or
jnp
aam
lahf
jne
add
pop
add
movsb
je
push
cltd
pushf
pushf
inc
add
jecxz
add
add
mov
xchg
insb
add
test
or
popl
in
jmp
pusha
add
hlt
dec
xor
add
test
shl
lahf
lods
out
or
xchg
out
xor
xchg
push
add
add
and
add
inc
adc
insl
inc
add
test
add
add
add
add
mov
aam
add
pop
dec
add
cltd
lret
sahf
xor
fcomps
add
add
fimuls
sub
sub
mov
add
inc
add
scas
cld
add
sbb
cmp
xchg
sbb
je
loope
fwait
sbb
ret
cltd
repz
push
fst
mov
out
imul
xchg
dec
inc
loop
xor
mov
enter
imul
sub
and
sahf
lds
mov
pop
add
lahf
mov
add
sub
push
adc
push
add
mov
nop
mov
add
cmp
inc
push
add
pop
add
insl
add
or
add
sbb
add
xchg
int3
jo
xor
lahf
mov
add
mov
adc
movsl
in
test
xchg
scas
lret
rorb
in
popa
push
add
push
add
xor
or
jg
daa
adc
call
push
add
add
adc
xchg
pop
fdiv
mov
scas
int3
insl
cmp
adc
jecxz
add
push
add
outsl
xor
cli
test
xor
jg
aas
sarb
jl
mov
add
adc
aaa
push
add
pop
add
es
js
cmp
jmp
in
dec
pop
mov
add
aaa
add
movsb
mov
loop
add
dec
or
mov
xor
negl
add
cld
shrb
test
and
inc
jo
aas
pusha
add
repnz
in
xchg
sahf
mov
mov
push
add
inc
pop
add
cmpsl
add
repnz
add
mov
add
add
test
addr16
push
add
add
add
cltd
mov
roll
push
ja
or
add
rcrl
roll
sbbb
enter
dec
sub
shl
mov
repz
sbb
inc
pop
add
inc
popl
clc
pop
add
add
cmc
jns
cmp
lahf
hlt
xor
call
adc
add
mull
pop
daa
mov
shll
bound
repz
sbb
sub
adc
cmp
psrlw
mov
cmp
mov
add
or
daa
and
icebp
pop
cmc
test
mov
lea
add
cmp
add
inc
add
andb
add
jb
shrb
add
add
ficoms
or
aaa
or
add
mov
add
test
sbb
jge
fs
xor
sbb
mov
add
cmp
add
mov
loop
sbb
dec
dec
add
pop
add
xor
xor
mov
cwtl
add
jae
icebp
ficomps
dec
add
add
push
sub
into
pop
mov
icebp
pop
jo
xor
xchg
test
js
cmp
ret
out
lods
jnp
fcmovb
xchg
test
ljmp
add
and
fldt
add
sub
add
add
subb
mov
add
mulb
mov
jg
shrl
add
add
dec
add
inc
cmp
xchg
cmp
sub
lret
push
add
clc
enter
jns
add
int3
rcll
xchg
inc
add
and
clc
xchg
mov
add
mov
fildl
add
loopne
inc
add
cmp
add
lds
testb
add
xor
or
out
repz
add
xchg
dec
add
pop
cltd
push
add
cli
fdivl
lret
jle
rolb
movsb
pop
pop
bound
pusha
add
fwait
mov
add
or
sbb
pop
sti
xchg
pop
add
dec
add
xor
fiadds
or
dec
add
inc
inc
add
in
shll
lods
dec
add
iret
lret
test
enter
mov
add
add
xchg
xchg
add
jne
inc
add
adc
js
dec
adc
mov
add
add
stos
dec
add
pop
sub
shlb
and
push
add
xchg
mov
dec
xchg
imul
mov
mov
jmp
add
add
hlt
pop
add
sbb
add
cmpsl
test
jne
add
xchg
jns
daa
test
add
aad
insl
jle
xchg
arpl
pop
dec
add
cld
das
addl
jp
test
inc
add
in
jbe
ret
add
jecxz
js
stc
gs
add
test
add
xor
mov
add
sbb
out
jo
rcll
add
cs
add
add
xlat
lea
mov
add
stos
movsl
xchg
negb
dec
add
mov
dec
shr
xchg
arpl
mov
out
add
scas
scas
pop
lret
cmpl
add
sub
xchg
mov
hlt
or
push
add
add
popf
aam
cld
aad
add
aad
fcmovne
das
push
leave
into
xor
orl
add
popa
pop
jmp
in
jae
add
add
add
test
add
lods
enter
mov
gs
shrl
sti
scas
scas
cmp
nop
insl
or
pop
mov
add
jmp
add
cli
and
out
add
pop
and
fwait
pop
popf
jp
and
adc
xchg
fldcw
jb
dec
add
inc
add
pop
adc
adc
jae
pop
add
jg
and
mov
adc
cmp
enter
mov
mov
xorl
xchg
pop
xchg
pop
inc
out
lret
inc
pushf
and
mov
xor
test
aad
xchg
push
add
pop
mov
mov
aaa
and
sbb
ret
cmp
rclb
orb
mov
outsl
mov
les
sbb
mov
add
lret
std
xchg
in
and
mov
add
out
mov
add
or
add
sub
mov
xchg
add
cmpsl
pop
add
sbb
ja
mov
jle
aaa
or
lods
pop
add
add
dec
add
out
out
lret
cltd
add
mov
xchg
xor
push
push
add
add
add
add
sti
xor
sub
out
stos
push
add
pop
or
adc
je
mov
add
inc
mov
add
enter
test
inc
add
fimull
mov
xchg
jnp
popa
dec
mov
dec
ret
dec
xor
adc
pop
jge
mov
add
mov
into
sbb
add
nop
pop
add
add
sbb
out
das
dec
add
xor
test
mov
xor
test
sub
jb
push
add
aaa
pop
add
nop
aas
scas
outsb
add
xchg
int
xchg
jns
add
clc
arpl
mov
lahf
lret
push
add
cwtl
roll
jge
add
in
and
scas
cmp
insb
add
adc
pop
adc
int
inc
stos
push
rorb
mov
fisubl
ficomps
add
inc
notb
inc
add
add
add
inc
ret
hlt
mov
add
lahf
imul
enter
or
jb
push
mov
and
lcall
les
pushf
rclb
or
popa
push
add
jno
pop
inc
mov
cmp
jle
dec
add
dec
add
jg
mov
cli
add
test
cli
in
add
es
mov
jbe
js
or
mov
push
cmp
subb
add
fistpll
push
add
fldenv
add
daa
xchg
lahf
repnz
add
aaa
rcll
or
andl
add
lds
add
add
sti
adc
out
cmp
scas
mov
fidivl
jb
js
sarl
sbb
sub
mov
loope
sbb
xor
push
add
aad
add
add
pop
mov
add
add
add
mov
add
lods
jl
push
add
sbb
pop
in
push
add
inc
and
dec
sub
push
add
add
add
add
add
push
add
lret
faddl
add
jle
pusha
add
hlt
loope
lods
scas
dec
fbstp
add
mov
aad
lahf
cltd
lods
pusha
add
add
mov
cltd
pop
push
sbb
xor
repz
fimull
popa
out
mov
insb
add
jb
std
dec
add
dec
and
add
stos
in
mov
mov
add
das
inc
or
pop
loopne
add
add
sbb
and
loopne
jmp
enter
data16
add
mov
das
cmp
pop
add
add
add
add
add
add
inc
pop
add
add
add
pop
adc
sbb
lods
mov
or
or
xchg
dec
add
neg
xor
test
add
add
fmul
mov
xchg
repz
and
and
inc
add
dec
jp
sbb
cmp
add
add
push
cwtl
mov
add
ret
dec
add
pop
sub
sub
add
pop
add
stc
pop
add
or
adc
cmp
add
or
adc
jb
fucomi
pop
pop
roll
add
aad
add
add
add
add
cltd
in
fstpt
xchg
mov
jns
cmp
jg
and
bsr
xor
icebp
enter
imulb
add
rorb
or
movsb
movsb
lret
adc
pop
add
add
cmpsb
push
jbe
jmp
fstpl
shrb
sub
add
mov
add
adc
inc
pop
push
dec
add
mov
cmc
sbbb
jae
pop
add
inc
add
add
dec
xchg
dec
add
xchg
add
daa
shlb
mov
lcall
add
fwait
xchg
add
sub
ret
mov
adc
xchg
and
test
push
add
jae
aaa
imul
cmp
insb
add
pop
loopne
add
sar
js
stos
or
dec
add
in
mov
das
fadds
add
jnp
jae
add
sbb
ffreep
cli
cltd
cmp
cmp
jg
add
pop
add
movsb
pushf
jecxz
mov
xchg
pop
es
xor
and
xor
add
rcll
idiv
xor
jne
adc
add
add
xlat
dec
add
sub
arpl
rorb
int3
cwtl
xor
add
sbbl
pusha
add
add
sub
or
aas
lahf
pop
into
movsl
testl
shll
test
cmp
or
inc
add
int
sub
test
xchg
out
cmp
pop
add
jl
int3
jg
jne
add
xchg
jge
fbld
sub
add
add
adc
movsl
bound
and
pop
add
or
pop
and
cmp
fwait
or
je
xor
fcmove
jns
add
mov
xchg
add
mov
addb
mov
mov
arpl
stc
inc
sub
fidivl
add
xchg
pop
add
add
dec
jae
movsl
mov
out
mov
mov
add
add
dec
add
fwait
sbb
pushl
add
repnz
dec
add
out
add
sbb
add
add
add
add
mov
cld
fdivl
mov
add
xor
shrl
add
push
add
add
lods
xorb
add
xor
sbb
mov
add
out
mov
ja
daa
xor
xor
repz
imulb
sub
imul
adc
fwait
pop
loope
push
or
pop
add
add
add
add
add
add
mov
add
add
inc
pop
popa
inc
sub
add
lret
xchg
add
pop
mov
add
add
xchg
xlat
out
sub
inc
add
xlat
push
pop
inc
clc
mov
add
add
add
xorl
mov
add
cwtl
lods
mov
pop
lea
or
and
loop
or
or
xchg
in
mov
fbstp
mov
jns
sbb
xor
dec
add
cmp
add
add
fldt
inc
add
test
add
cltd
rorb
mov
add
add
add
add
add
mov
add
xchg
inc
shrl
add
dec
mov
push
shrb
test
inc
add
push
push
add
sub
xor
push
add
sub
add
xor
add
add
test
mov
add
pop
add
xlat
dec
add
pop
add
or
lret
xchg
pop
add
jb
ja
inc
add
sub
data16
lock
dec
add
inc
pop
shll
add
jg
and
addl
repz
add
jns
jns
dec
add
sub
add
or
push
add
inc
add
add
popa
sbb
add
mov
add
dec
add
mov
jne
add
add
mov
addr16
push
add
and
xchg
call
das
mov
sti
inc
cmpsl
rcll
into
repnz
stc
les
cltd
or
mov
sbb
mov
imul
dec
add
dec
sub
cmp
inc
add
add
adc
clc
mov
and
outsb
add
add
pushf
inc
inc
add
pusha
add
push
add
nop
lock
lock
inc
add
lcall
xchg
jno
add
out
std
dec
add
cs
cmpsl
cltd
mov
inc
add
mov
and
mov
cmp
dec
add
jecxz
loop
xchg
add
shl
shlb
add
add
inc
pop
leave
jecxz
and
add
add
scas
and
push
enter
popf
add
je
mov
and
or
sub
push
add
xor
cmp
iret
std
lods
loopne
bound
jb
gs
add
out
sub
ds
mov
cmc
jge
out
add
cmpsb
pop
inc
push
cmp
and
jnp
imul
insb
add
add
add
jl
xor
add
mov
xor
sub
outsb
add
in
test
add
dec
add
cwtl
cmp
adc
imul
pushf
add
leave
mov
adc
lret
int3
mov
jmp
lods
inc
mov
xorl
adc
repz
mov
pushf
jnp
nop
loope
or
dec
pop
add
add
shl
sti
js
repnz
lret
daa
mov
and
lcall
loopne
jns
in
or
inc
mov
leave
mov
add
jg
add
add
add
popl
add
mov
repz
xor
jae
sbb
aad
mov
je
imul
js
and
add
push
add
mov
sti
mov
add
adc
ffreep
into
add
shr
mov
xor
imul
jecxz
mov
ljmp
pop
or
add
sahf
add
inc
add
cmp
mov
cmp
dec
add
add
bound
pop
rcrl
pop
out
inc
filds
sub
rolb
add
sbb
aas
pop
dec
lcall
add
cli
lea
xor
lcall
mov
out
ficompl
add
add
incl
jne
cmp
mov
test
add
nop
mov
jg
hlt
push
add
addl
mov
sbb
mov
pop
add
out
mov
add
add
add
popa
pop
xor
mov
add
add
out
in
push
add
stc
adc
pushf
mov
cmp
cmp
add
add
or
cmp
or
bound
xorb
add
add
add
cmpsb
mov
or
enter
js
push
out
jge
int3
pushf
dec
add
pop
add
and
data16
lods
clc
loop
jbe
ret
inc
add
out
jecxz
cmp
or
lret
mov
or
inc
clc
imul
xchg
pop
test
sub
enter
sub
stos
cmp
push
jo
cmp
mov
add
push
shlb
inc
nop
pop
fadd
and
rdpmc
pusha
add
call
mov
call
roll
lcall
mov
jg
hlt
dec
add
icebp
stc
lods
int3
call
mov
add
in
cli
or
outsl
fsts
inc
add
mov
lret
push
add
stc
xor
inc
mov
add
jg
add
inc
xchg
sub
fldcw
jae
add
in
add
xchg
leave
lcall
sti
jecxz
add
cli
ret
lods
lea
shr
xchg
dec
lds
mov
call
stos
add
mov
fwait
or
push
data16
jle
add
add
jns
addr16
cmp
dec
outsb
add
aad
out
xor
or
jle
frstor
add
xor
add
cmp
out
jnp
rcll
gs
imul
mov
mov
cmpsl
adc
sbbl
add
lahf
xchg
aaa
sub
add
inc
inc
add
adc
add
lcall
adc
stos
or
add
bound
mov
fisubl
mov
add
add
popf
daa
jl
jo
std
or
add
push
aas
outsl
xchg
inc
add
and
mov
ret
jmp
xor
imul
aas
inc
mov
inc
movsb
mov
add
imul
push
shl
mov
add
test
cmp
pop
add
add
add
ja
jns
ficomps
push
or
push
add
add
jg
add
add
or
add
ljmp
cmp
xor
xlat
push
add
jbe
inc
and
mov
bound
xchg
and
out
dec
add
add
inc
lret
orb
fcmovb
inc
add
add
add
xor
add
add
mov
add
add
add
cli
push
add
add
and
cmp
ljmp
pusha
add
push
add
dec
push
pop
add
aaa
pop
or
add
adc
test
into
in
jmp
stos
insl
push
add
xor
add
add
push
mov
push
add
fldenv
dec
or
add
rcll
pop
add
mov
and
cmp
inc
add
jl
aad
add
push
add
lock
repnz
popa
dec
cmp
add
mov
add
mov
xor
das
shlb
fcmovb
cmp
ficoms
jp
jae
loop
add
mov
add
out
add
das
xchg
or
testb
add
in
xchg
xor
jp
pop
daa
push
add
dec
xchg
mov
or
out
dec
jb
loope
add
jbe
stos
movsb
pop
add
stos
ja
add
add
mov
cltd
fiaddl
add
pop
add
sbb
xchg
testl
popf
into
inc
add
inc
or
jnp
int
sahf
push
add
out
jmp
int3
fiaddl
lds
mov
in
adc
mov
and
movsl
jp
mov
add
fucompp
xchg
push
add
add
shrl
or
mov
test
repz
clc
pop
add
call
call
rolb
xor
les
or
out
xor
add
sbb
xchg
add
pop
add
add
test
add
pushf
fwait
insl
in
mov
fadds
loopne
lock
add
add
add
add
arpl
add
pop
cmpsl
ljmp
add
cmpl
lahf
in
add
add
in
xchg
bound
std
add
ror
or
pop
add
add
sbbb
mov
mov
sbb
add
add
xor
inc
add
add
mov
push
add
inc
add
add
mov
sbb
aam
add
lahf
pop
jg
add
filds
add
inc
add
enter
jae
xchg
test
xor
popa
in
push
xor
sbb
cmp
push
pop
push
add
sbb
outsl
sbb
test
cmp
loope
pop
adc
imul
dec
lahf
sbb
sbb
xchg
and
add
cmpsb
mov
cmp
and
ljmp
movsb
or
push
je
mov
pop
fs
lret
adc
jmp
mov
mov
xchg
jecxz
add
fdivl
dec
add
add
fbld
xchg
addr16
test
hlt
mov
cli
add
fisubs
add
xor
ficoms
mov
fsts
cld
dec
add
fnop
adcb
add
cmc
pop
add
add
xchg
test
popa
xchg
insb
add
inc
add
cwtl
xor
andl
add
lcall
cmp
icebp
adc
call
push
add
pop
fadds
add
hlt
lds
jl
in
mov
add
inc
dec
add
jns
cltd
nop
addb
clc
lods
cmp
inc
mov
jmp
popa
outsl
adcl
sub
xor
daa
cmp
and
outsl
fwait
mov
add
sahf
adcb
mov
add
sbb
xor
lea
add
loopne
mov
and
ret
int
add
push
add
mov
add
test
mov
sbb
add
les
mov
imul
mov
outsl
mov
xchg
dec
add
add
in
or
sbb
push
add
add
loope
pop
mov
add
popa
push
pop
cli
xor
icebp
push
add
xchg
testb
add
lret
rorb
add
aaa
pushf
mov
lret
add
rorl
sub
mov
add
add
jbe
inc
add
jmp
add
add
add
jnp
add
adc
pop
add
nop
mov
mov
pop
std
popa
cmpsl
push
mov
fsubp
mov
add
dec
add
jmp
mov
add
enter
xor
pusha
add
xchg
sub
call
mov
or
add
inc
xor
pop
mov
sub
popa
pop
int3
inc
add
loop
subl
and
add
add
jmp
jecxz
adc
and
or
mov
mov
add
adc
fdivl
adc
js
mov
insb
add
mov
mov
add
add
arpl
add
add
mov
add
ret
adc
sub
mov
add
bound
ret
or
sub
in
mov
add
and
fistl
pop
mov
inc
add
add
mov
mov
add
add
leave
cmpsb
imul
add
push
test
adc
sub
aad
lods
int
outsb
add
jo
dec
push
add
pop
inc
add
or
or
ja
pop
dec
xor
add
movd
cmp
mov
cli
mov
add
jg
add
andl
fsubrs
mov
sub
add
enter
cltd
mov
xchg
cltd
sbb
xchg
push
add
jge
jne
enter
aaa
xchg
xchg
xchg
shll
add
jmp
lea
add
inc
add
and
iret
lds
add
aaa
push
add
cld
out
lahf
jns
and
ss
and
add
sti
loope
sarl
mov
hlt
xor
adc
insl
and
icebp
and
mov
loop
pop
mov
add
pop
and
jo
mov
pusha
add
rcl
mov
push
add
add
arpl
mov
mov
add
mov
xchg
add
or
add
push
add
cwtl
xchg
sarb
adc
sub
addr16
cmpsb
scas
sub
lret
dec
cmc
xor
enter
add
sbb
add
aam
repnz
mov
inc
clc
push
add
add
shlb
xchg
call
cmpsb
lahf
push
add
pop
xchg
and
sub
xchg
shrb
add
add
lret
add
aas
and
push
add
mull
pushf
push
push
add
mov
ret
movsl
mov
add
add
add
mov
and
cmp
insb
add
push
add
add
add
and
push
add
add
add
add
add
ret
mov
faddl
add
fsts
add
arpl
xchg
movsl
lahf
les
movsb
out
inc
add
mov
sbb
push
add
add
in
mov
pop
push
dec
add
xor
add
lea
push
add
or
mov
add
or
mov
dec
add
stos
push
lcall
dec
dec
jbe
in
mov
add
push
cmp
pop
add
dec
add
pop
mov
add
cmp
loope
add
xor
loope
rorb
repz
int3
push
add
roll
xor
xchg
mov
and
nop
jmp
push
add
mov
add
push
add
or
loope
add
or
dec
add
xlat
jge
jnp
sar
in
add
add
pop
jge
add
aam
push
add
add
sub
and
into
in
adc
cmp
xchg
push
add
add
sbb
jo
adc
mov
add
cmp
cmpsl
xchg
daa
mov
mov
inc
add
and
mov
jmp
and
cmp
sub
ljmp
add
xchg
add
mov
push
add
lods
ljmp
cmp
add
daa
xchg
add
xchg
xchg
sbb
add
shrl
shr
add
movsb
xor
mov
sub
scas
xchg
js
js
xchg
aad
jg
mov
push
add
lret
dec
add
bound
lock
out
adc
adc
and
sbb
sbb
add
add
add
add
dec
add
js
andl
adc
adc
imul
xor
pop
pop
xlat
shlb
add
dec
add
jl
rcl
lods
mov
and
sahf
ljmp
outsl
inc
mov
add
xorb
mov
jmp
add
pop
mov
push
add
xor
mov
js
jb
push
cmp
mov
sbb
dec
add
pushl
add
hlt
jp
cltd
mov
xor
dec
add
jmp
add
sbb
pop
jle
dec
add
add
scas
xchg
pushf
shr
lock
inc
add
adc
add
add
add
mov
lds
je
rorl
push
or
enter
jns
jmp
negb
xchg
add
iret
or
jp
and
add
add
sti
add
add
add
fiaddl
mov
out
ret
inc
inc
add
or
movsl
in
int
test
add
adc
adc
adc
insl
loop
and
add
ljmp
cli
push
add
add
add
addr16
in
mov
pop
in
fimuls
mov
pop
sbb
out
or
add
sbb
add
add
jle
repz
inc
add
fldcw
xor
add
add
test
add
cmp
jnp
inc
add
pusha
add
push
add
add
push
add
fmull
dec
jle
lret
and
add
or
add
jo
lods
add
push
add
daa
lcall
push
add
ss
adc
add
mov
sbb
xor
mov
fsubs
les
or
lds
inc
add
xchg
test
pop
add
dec
sbb
add
popf
add
les
or
js
mov
and
fstp
or
add
pop
add
xor
mov
pop
add
adc
std
jp
cltd
inc
push
add
faddp
lret
or
mov
iret
xchg
out
xor
clc
push
add
fwait
push
add
xchg
loope
add
lcall
jge
push
mov
xor
add
add
jp
jmp
add
and
xchg
dec
add
int3
das
stos
jnp
add
or
mov
xor
fiaddl
add
adc
testl
ret
xor
and
test
inc
dec
mov
xchg
insb
add
add
mov
ficomps
or
imul
xchg
add
xchg
outsb
add
push
leave
dec
add
add
add
add
test
xchg
icebp
mov
iret
sbb
and
add
add
outsl
pop
add
inc
add
add
out
mov
movsb
loope
dec
add
add
outsb
add
leave
push
add
mov
adc
pop
push
fistl
mov
outsl
push
add
adc
mov
push
jmp
add
jne
faddl
repnz
add
add
addr16
add
dec
add
xlat
dec
add
add
fldt
add
mov
scas
cld
stc
cmp
push
mov
roll
add
adc
sub
mov
pop
add
add
sbb
stc
scas
jae
add
add
pop
mov
add
xchg
cltd
pop
mov
push
in
xchg
stc
ja
scas
loopew
inc
add
mov
add
repz
outsl
push
add
cmpsb
bound
imull
sti
or
push
add
je
xchg
aaa
test
add
in
mov
ret
out
jb
push
sbb
or
xor
sbb
sub
pop
shlb
add
add
mull
in
mov
sbb
add
add
push
shrb
add
mov
call
sub
lahf
jg
push
add
fiaddl
cmpb
push
add
inc
leave
mov
cmpsb
mov
stos
rcll
xor
adc
jge
mov
fiadds
add
cmc
outsl
out
mov
leave
xchg
cld
add
stc
dec
ljmp
add
int
add
mov
jmp
ficoms
ja
add
clc
add
jnp
leave
je
xchg
xchg
aaa
jb
fadd
xlat
xlat
pushl
dec
add
sbb
add
jnp
int
add
rolb
mov
push
testb
popa
aad
cmp
outsl
pusha
add
sub
add
cmp
lds
add
mov
inc
xchg
dec
ja
mov
and
add
add
rolb
mov
or
sub
scas
dec
add
adc
mov
mov
ficompl
add
mov
inc
add
and
mov
stos
test
cld
rclb
movsl
jno
and
add
mull
add
fnsave
scas
repnz
add
jno
pop
loopne
test
add
icebp
mov
daa
fisttpl
rcll
imul
add
pop
add
add
mov
sub
lcall
out
inc
add
add
add
fildll
cmp
add
adcb
xchg
adc
aaa
aaa
xor
add
aaa
adc
jns
ss
rcll
jmp
scas
lahf
add
aad
repnz
add
add
push
add
xor
add
pop
cmpsb
mov
int3
mov
and
add
mov
add
hlt
jb
fadds
test
lahf
ljmp
insl
or
inc
or
cmc
lcall
call
inc
add
dec
mov
add
or
jg
add
dec
divps
sub
stos
inc
add
dec
or
jbe
imul
loopne
scas
adc
cli
add
add
inc
inc
add
add
push
cmpsl
and
loop
push
inc
add
sbb
push
pusha
add
push
add
dec
add
mov
xor
pop
shlb
std
xchg
xor
add
add
adcb
int
add
add
dec
add
add
sub
add
cmpsb
mov
jp
fs
mov
outsb
add
xlat
mov
sbb
jl
outsl
xor
mov
add
loope
add
cmc
ficomps
add
ret
mov
xlat
mov
aad
mov
push
mov
aam
add
push
add
aas
sti
sbb
mov
inc
cmpsb
ret
movsb
outsb
add
fwait
rol
add
pop
pop
add
dec
and
jle
movsb
or
add
repz
and
lods
aad
mov
dec
add
mov
or
add
std
push
add
and
dec
add
adc
cmpsb
out
ret
push
add
add
add
pusha
add
push
add
mov
je
pop
add
add
cli
sarl
loope
fisubrs
jmp
aam
add
or
mov
add
xchg
jg
loop
imul
fdiv
sbb
sub
adc
sub
pop
bound
push
push
imul
cli
mov
mov
fidivs
test
pop
push
add
mov
mov
add
jo
test
in
or
cli
dec
mov
add
cld
in
jecxz
fistl
add
xchg
cmp
mov
aaa
notb
xchg
add
fstl
adc
xchg
add
add
dec
jnp
mov
add
mov
fisttpl
test
mov
add
mov
add
mov
add
xchg
pop
add
repz
loopne
add
push
rcrl
stos
fisubrs
cmp
insl
adc
inc
add
xor
add
iret
push
add
fdivl
add
dec
idiv
adc
and
add
enter
add
add
dec
pop
inc
add
xor
flds
xorl
cmp
daa
pop
add
mov
push
add
in
aaa
enter
sub
push
add
mov
add
cmc
test
cwtl
xor
add
jmp
or
push
add
fwait
aaa
aaa
leave
cmpsb
incl
dec
add
lahf
mov
sbb
adc
adc
cmp
push
add
add
je
dec
xlat
out
xchg
incb
add
aas
cltd
cli
int3
push
add
imul
fldt
add
xchg
dec
add
add
sbb
adc
mov
sbb
pop
mov
add
add
add
pop
push
add
add
stc
cmp
jp
cwtl
cmp
xor
sahf
fwait
nop
or
cmpsl
sbb
mov
addr16
add
lret
loope
add
inc
add
add
or
dec
add
ret
shrl
adc
add
push
add
lods
jbe
add
aam
or
cmovb
incl
in
add
add
sub
inc
add
mov
icebp
cmpsb
jns
xlat
in
add
sahf
test
mov
add
sub
xchg
out
pop
push
fiadds
aaa
les
xor
jecxz
pop
add
popf
push
sub
adc
imul
outsb
add
add
sbb
add
mov
ret
cmp
loop
mov
inc
repz
cltd
mov
dec
add
xor
shr
rorb
jmp
out
adc
push
lcall
or
jo
icebp
insb
add
add
lret
xchg
mov
jns
pop
add
add
add
add
aam
xchg
sub
add
in
xchg
stos
or
in
jo
inc
mov
jae
cmp
and
or
ja
fsubrl
add
and
fs
sahf
mov
xchg
lcall
add
add
int3
fildl
add
dec
add
add
aam
sub
xor
sub
repnz
and
xor
push
cmpsb
xchg
cltd
jmp
xchg
dec
add
and
out
mov
add
xchg
dec
add
sub
dec
add
das
dec
insb
add
inc
out
push
push
jo
roll
xchg
pusha
add
push
fidivl
xchg
ret
in
push
outsb
add
add
bound
push
add
aas
xchg
mov
sti
roll
jns
add
xchg
sub
mov
in
add
es
in
out
add
or
jmp
push
push
add
aad
sar
and
push
lret
mov
inc
add
mov
mov
jle
shll
addb
add
ja
je
pop
rsm
lret
add
pop
nop
mov
por
add
adc
xchg
cmpsb
xchg
aas
dec
add
outsl
or
fwait
cmc
mov
add
std
xchg
and
add
add
adc
movsb
push
add
add
jl
dec
add
adc
jne
add
add
sbb
add
add
mov
into
cli
sub
and
add
mov
int
add
stc
jo
xchg
jo
pop
loope
popa
dec
add
mov
dec
add
lahf
pushf
mov
iret
cmp
add
and
add
sub
xchg
stos
inc
add
stos
int
and
inc
add
add
add
or
sbb
cmpsb
and
std
add
inc
jp
push
add
add
jmp
mov
xchg
data16
add
xor
mov
add
add
iret
and
in
add
inc
add
and
dec
add
add
in
push
push
xchg
mov
add
out
add
sub
xchg
dec
add
ficomps
int3
add
add
addr16
cmp
add
das
decb
mov
push
add
add
add
cltd
cmc
mov
mov
add
and
push
cltd
scas
shl
mov
push
mov
aas
scas
out
and
stc
sub
sbb
fsub
int3
add
jns
add
dec
fnstsw
into
adc
mov
stos
and
sub
sub
cs
jecxz
xor
mov
icebp
sahf
das
notb
stos
test
mov
add
adc
jmp
lods
pop
add
imul
lods
push
push
add
sub
push
add
add
push
jae
out
daa
mov
dec
add
push
sbb
addr16
dec
add
shl
aad
movl
and
push
add
adc
std
stos
sub
pushf
cmp
add
add
roll
or
mov
sub
lahf
add
pop
test
shrb
in
std
sbb
int
mov
lret
lret
stc
rol
add
mov
mov
cmp
imul
gs
arpl
mov
jno
or
out
ret
add
add
je
jmp
test
pop
out
add
jnp
add
lea
pop
mov
lea
imul
xchg
mov
ret
lods
mov
ljmp
and
daa
into
add
dec
cltd
jp
fnstenv
aas
int
push
add
sub
lds
cmp
mov
jno
pop
add
push
add
lods
xor
in
add
or
nop
movb
cld
cmc
and
insl
lret
cmpsb
enter
aas
xor
jg
mov
sti
xchg
popf
sbb
bound
add
cmp
add
sub
mov
adc
fstl
cmc
pop
cmpsb
cmpsl
lods
test
add
add
cmpsb
out
aad
add
push
mov
sbb
add
add
mov
add
sbb
and
add
dec
inc
inc
les
add
add
addr16
and
mov
mov
add
inc
inc
repz
xchg
test
daa
lds
out
pop
andb
and
xchg
or
pusha
add
push
add
fwait
cmpsb
mov
mov
push
xchg
jge
popl
repnz
nop
in
add
push
add
fdivl
jmp
jecxz
push
add
add
cmpsb
cmpb
je
jg
imul
add
add
push
add
add
sahf
mov
mov
pop
add
cmpsb
dec
add
add
dec
sti
cmp
cltd
mov
push
sbb
pop
add
add
roll
add
sbb
cmp
push
pop
lods
insb
add
push
addr16
jae
dec
aas
scas
cmpsl
push
add
pop
js
pop
lret
add
or
push
loop
adc
popf
add
pop
jno
pop
add
in
xchg
add
dec
add
jae
jnp
cmp
add
mov
aas
cmp
das
mov
daa
add
add
add
mov
ljmp
mov
imulb
add
decl
das
int3
jae
dec
add
ret
lods
insb
add
push
add
xchg
add
add
add
inc
cwtl
jns
loop
gs
pop
out
xchg
add
add
add
push
add
or
add
test
dec
add
add
ljmp
cmc
dec
pop
add
call
scas
cmp
dec
addb
add
rorb
dec
or
xorb
fbld
add
xor
lods
adc
jmp
fbld
mov
popa
pop
add
nop
push
add
mov
adc
jnp
add
lcall
push
add
add
icebp
xchg
xchg
mov
sti
cld
mov
xchg
xor
je
or
fldt
iret
push
add
jb
mov
in
pop
add
push
add
lock
push
add
gs
loopne
jp
inc
add
adc
add
xchg
xchg
aaa
and
add
push
fstpt
add
cmp
sbb
cld
loope
int
addr16
loopne
addr16
sub
add
mov
js
xchg
inc
add
add
add
stos
mov
cmpsl
mov
pop
add
push
ret
jecxz
add
jne
mov
mov
add
jge
add
sub
inc
fidivs
add
or
addr16
cmpsb
movl
lahf
push
add
add
aam
divb
cmp
imul
scas
gs
xchg
add
push
add
pop
add
pop
xchg
out
and
js
add
notl
add
push
roll
add
sub
jno
push
rcrl
add
xor
lock
add
notl
add
mov
add
add
mov
aad
int
dec
or
add
and
mov
lods
jne
adc
push
add
cmpsb
shrl
add
loop
ds
push
mov
int3
notb
xchg
out
xchg
jnp
imull
xchg
bound
inc
add
mov
add
lcall
clc
pop
add
add
adc
pop
add
add
jno
add
nop
ljmp
rcr
dec
add
sbb
xchg
call
add
add
mov
fiaddl
shll
cmpsb
das
enter
fsubs
push
adc
jge
or
add
les
mov
add
push
mov
add
push
add
mov
aaa
jle
cwtl
je
rolb
xchg
enter
nop
movsl
test
push
add
outsb
add
or
push
insb
add
jb
pop
ret
clc
or
dec
int3
mov
add
add
add
add
dec
add
shrb
add
and
inc
add
sub
mov
xchg
outsb
add
lds
fsubrl
js
aas
loop
xchg
mov
sbb
adc
push
add
cmpl
add
cmpsl
mov
and
xor
add
pop
fadds
xchg
sub
in
add
fs
bound
pushf
xchg
add
push
inc
add
add
mov
pusha
add
add
add
aaa
cld
mov
or
or
in
push
add
es
das
daa
adc
add
jae
daa
hlt
sub
shll
fistl
jmp
inc
clc
pop
lcall
dec
arpl
or
mov
add
add
scas
xorb
insb
add
xchg
cltd
lds
push
add
cmpsl
into
pop
add
and
mov
sti
in
adc
pop
dec
aas
in
add
out
add
das
jp
dec
add
jge
mov
add
add
pop
mov
add
sbb
adc
imul
xor
jmp
add
or
adcb
ljmp
mov
cmp
sbb
out
in
das
xchg
jg
add
xchg
push
push
add
mov
mov
lcall
lds
shlb
add
mov
add
xor
mov
inc
push
add
push
add
push
add
add
jl
roll
mov
and
xor
test
sbb
add
adc
push
add
shlb
add
sbb
shrb
add
jb
sbb
dec
subb
bound
pop
add
add
or
jnp
add
incb
mov
add
cli
js
dec
out
mov
add
mov
aaa
test
add
mov
dec
add
lret
mov
mov
pop
inc
add
jbe
push
xor
sub
pop
add
mov
add
add
mov
add
add
pop
add
mov
add
xlat
imul
add
add
add
add
inc
add
xchg
or
add
mov
std
jle
xchg
sbb
scas
jbe
inc
add
fdivrs
pop
add
add
xorb
add
add
and
xor
push
add
test
out
lcall
add
add
pop
add
sub
adc
mov
inc
add
lahf
pop
add
imulb
data16
mov
ret
stos
jp
jo
inc
add
add
add
pushf
outsb
add
sub
rcr
loop
clc
add
and
shll
add
mov
add
add
test
jl
cmp
lds
or
and
cmc
jg
fidivs
scas
lret
gs
mov
xchg
jbe
mov
xchg
add
mov
or
xchg
loop
add
jne
jns
outsl
inc
add
cmp
out
add
adc
adc
cmp
cli
out
mov
add
mull
add
add
dec
js
mov
dec
add
cltd
pop
rol
popa
inc
out
subl
add
rol
mov
jecxz
add
orb
adc
cwtl
add
add
out
push
cmpsl
incb
pusha
add
inc
pop
sahf
mov
jnp
dec
add
cmp
cmp
jecxz
jae
and
add
xor
inc
add
xchg
pop
add
add
das
xchg
stos
inc
cltd
adc
popa
nop
das
mov
mov
lock
add
pop
testl
aad
add
add
scas
sbb
cmp
sbb
mov
test
add
pop
add
fcomi
divl
add
pop
cmp
jbe
imul
sub
inc
add
add
add
aaa
jns
mov
popf
and
add
add
add
dec
mov
repz
and
mov
test
add
inc
add
push
add
jg
add
ret
jbe
cmp
add
and
cmc
fcomps
lahf
cmc
loop
test
adc
outsb
add
jle
xorl
scas
fadds
or
xchg
aad
sub
mov
push
cli
xchg
cmp
jb
sbb
in
imul
mov
scas
add
lock
mov
add
adc
testb
rcr
jo
mov
in
jp
jb
fwait
push
aam
pop
push
add
jo
dec
add
xchg
dec
add
lcall
add
and
lock
jbe
ret
sub
push
add
add
add
sbb
add
add
mov
insl
and
sbb
ja
jo
stos
lcall
out
add
add
sbb
inc
shl
sub
js
ljmp
inc
add
mov
mov
add
cld
leave
ret
aas
add
cmp
push
add
and
push
bnd
add
push
add
inc
xchg
shrl
mov
sub
scas
cmpsl
or
stos
dec
mov
out
sub
push
leave
shlb
std
adc
add
mov
add
push
hlt
mov
xor
loopne
mov
popl
lahf
add
add
sub
sub
aam
pop
add
add
add
pushf
shrb
and
xchg
inc
cmp
cli
pusha
add
add
xor
lock
insb
add
add
sti
add
and
jo
adc
call
inc
add
dec
add
or
fnstcw
xchg
adc
daa
push
mov
mov
add
pop
add
push
sbb
inc
add
sub
dec
add
lahf
add
or
xchg
add
repz
stc
les
ja
add
xor
hlt
cli
mov
add
add
add
add
js
mov
add
popa
push
add
xor
push
add
add
aaa
sbb
repz
add
add
test
inc
add
loope
mov
push
add
jbe
insb
add
add
add
lcall
cmc
lock
add
add
xor
lods
data16
pop
cli
add
add
fimuls
pcmpeqb
movl
add
xchg
lcall
mov
dec
add
or
xchg
in
into
rcr
cmpsl
dec
orb
add
mov
xchg
sub
jne
add
out
iret
add
inc
add
lret
inc
add
mov
out
add
test
add
and
push
add
stos
hlt
inc
add
add
xchg
push
add
pusha
add
scas
dec
mov
add
add
pop
jg
push
add
push
inc
add
mov
aaa
fs
inc
add
hlt
cmp
push
add
pop
add
mov
cwtl
and
xchg
insl
aam
call
lcall
jns
inc
pop
add
hlt
inc
add
pop
fisubs
aaa
repz
or
sub
pop
sbb
fisttps
add
push
add
push
add
sbb
add
add
add
add
imul
bound
gs
fdivs
mov
sbb
xor
lock
mov
push
add
mov
add
fisubs
xchg
imul
xchg
xorb
adc
add
sti
mov
dec
add
sbb
in
xchg
xchg
sub
add
inc
and
add
fcmovbe
leave
jbe
add
cmp
insb
add
adc
les
sub
nop
ficompl
outsb
add
ja
jno
movsl
loopne
add
insb
add
mov
test
imul
jae
add
mov
add
mov
add
add
sub
ds
outsb
add
push
add
cmp
pop
in
add
insl
mov
cltd
repnz
adc
add
addr16
lahf
negb
add
or
ljmp
add
mov
imul
add
add
es
mov
mov
daa
and
lock
out
mov
and
clc
std
stos
add
add
add
xchg
xlat
arpl
insl
insb
add
int
add
mov
lcall
jg
add
jmp
mov
mov
and
add
jmp
dec
add
lods
dec
sbb
adc
mov
add
cmp
mov
int3
fwait
mov
lahf
push
add
fwait
pop
add
add
aam
add
inc
or
testb
sbb
xor
push
sarb
dec
add
cld
lret
push
add
call
add
dec
les
jae
xor
add
pop
add
or
dec
push
add
mov
mov
inc
xchg
mov
popf
pop
add
gs
add
pop
mov
rcrb
adc
jl
cli
dec
add
add
push
add
or
enter
xor
bnd
inc
lods
in
add
add
push
add
add
ja
add
pusha
add
add
scas
outsl
xor
add
add
sahf
and
movsl
lret
stc
popa
test
push
notl
loop
mov
add
jmp
lahf
mov
leave
lcall
imul
clc
test
xchg
xor
lods
mov
add
arpl
popf
sbb
jmp
rcrb
dec
and
scas
test
add
in
add
add
push
add
inc
add
add
loop
mov
inc
or
dec
xlat
xor
sbb
lods
xchg
dec
inc
dec
add
jge
cmp
or
outsl
add
mov
adc
push
add
mov
add
pop
add
movsl
jge
add
bound
repnz
add
mov
add
or
push
pop
nop
into
faddp
push
add
inc
add
popa
add
inc
int3
sub
int3
mov
and
insl
add
fs
stc
pop
add
fiadds
sbb
rclb
dec
add
out
add
in
add
mov
sbb
add
lock
outsl
xchg
test
mov
mov
xor
or
and
xchg
xor
adc
shlb
out
add
arpl
icebp
adc
out
shl
add
push
add
xchg
pop
add
push
push
add
pop
add
ja
push
add
iret
leave
sub
cmc
mov
inc
push
add
push
add
out
mov
add
insb
add
or
push
add
bound
mov
out
rorb
out
push
in
sub
fmul
xlat
mov
push
add
inc
js
push
adc
mov
add
sbb
add
add
ja
sub
mov
enter
fildll
jg
add
mov
adc
add
insl
in
mov
je
adc
dec
add
lea
mov
lock
aam
add
repz
inc
mov
add
xchg
and
cld
xor
stos
jg
or
shrb
add
inc
add
mov
jmp
cmpsl
xchg
shlb
adc
adc
push
add
shll
add
ficompl
add
lahf
sbb
lods
cmc
icebp
xchg
rcll
add
inc
add
call
add
aas
add
sub
or
add
xchg
push
add
test
add
add
add
xor
add
sbb
inc
xlat
mov
dec
clc
push
add
dec
add
imul
add
adcb
add
jmp
js
lahf
fidivrl
jp
imul
mov
add
int
add
xor
sub
adc
push
lods
std
inc
add
sbb
ja
or
sbb
mov
add
cmp
xchg
jmp
add
call
or
cmp
add
aam
mov
xor
test
add
mov
jecxz
xchg
out
inc
add
jmp
ret
shll
add
filds
xchg
push
add
mov
fldenv
add
and
xor
aas
pop
adc
xor
bound
or
dec
add
push
movsl
inc
inc
push
add
fiaddl
mov
fsubl
add
sbb
ja
sub
add
pusha
add
add
sub
fcmove
shll
cli
sbb
in
setae
add
hlt
lds
mov
add
leave
stc
xor
push
add
dec
sbb
jle
add
mov
outsl
sahf
cmpsb
cltd
push
add
adc
arpl
cmpsl
mov
ret
add
add
test
add
add
js
out
mov
sahf
sahf
je
aam
sub
out
scas
pop
push
add
xchg
jb
push
add
sbb
add
fimuls
ret
adc
leave
jle
pop
add
sbb
add
xchg
add
popa
in
arpl
mov
test
fisubrs
ret
and
add
push
add
sub
push
push
add
add
lock
rclb
rol
fistpll
pop
add
pop
ja
cmp
inc
pop
gs
lcall
cs
loope
jae
xor
je
int3
mov
push
mov
ret
add
push
add
add
add
sbb
fldcw
add
orl
dec
jb
mov
add
add
adc
das
jmp
mov
jle
or
add
pop
daa
in
cmp
dec
add
adc
add
mov
xchg
lods
jno
ret
push
add
xchg
and
adc
sahf
cmc
fwait
add
lods
adc
sbb
add
jecxz
lret
lcall
add
mov
add
pop
add
pop
lock
cmp
into
cmpsb
jmp
add
bound
movsl
mov
test
mov
dec
add
add
dec
add
repnz
filds
add
int
mov
divl
xor
aad
cld
mov
sub
out
sbb
sbb
xlat
aad
mov
sub
xor
addr16
xchg
fsqrt
addb
int
mov
mov
shll
andl
inc
out
or
add
add
sbb
outsb
add
pop
loope
add
add
stos
jns
add
pop
js
fsub
les
add
aas
mov
dec
add
cmc
ja
mov
add
cmp
daa
cli
xor
and
xor
pop
push
dec
sbb
add
push
xchg
outsl
sahf
xchg
mov
add
in
in
sbb
adc
icebp
and
sbb
push
add
xchg
popa
call
dec
mul
xchg
adcb
popf
lcall
je
daa
and
add
addr16
cli
pushf
sbb
mov
adcl
jp
mov
aaa
lahf
adc
test
add
fbstp
sbb
dec
scas
stc
xchg
or
loope
sbb
movsb
arpl
push
add
add
add
sbb
cmp
in
add
int3
xchg
cmp
add
push
add
inc
add
ds
addr16
mov
aaa
ret
or
in
push
add
jae
lock
add
add
faddl
xor
mov
cmp
fstpl
add
inc
idivb
mov
add
mov
pop
scas
mov
mov
cmp
cmp
adc
sbb
mov
push
xchg
outsb
add
pop
fistl
lock
add
xchg
cmp
add
add
and
les
jne
and
xchg
call
xchg
shll
leave
dec
push
cld
adc
push
stos
enter
mov
add
pop
add
aas
cmc
adc
pushf
sbb
test
xor
jae
push
add
add
stos
lahf
mov
mov
add
add
mov
int
les
jge
add
rclb
add
test
sbb
out
fwait
popf
test
sbb
add
add
sub
fucomip
sbb
hlt
jmp
push
je
rcrb
xor
add
adc
xor
and
lea
sub
lea
imul
test
push
add
add
mov
add
xchg
xor
inc
rcl
dec
addr16
add
add
ds
test
jl
ror
mov
add
add
dec
add
mov
in
mov
mov
add
pop
mov
adcl
les
add
fiaddl
lret
popa
out
add
add
insb
add
dec
cmpsb
add
xchg
jno
sub
nop
clc
inc
add
ljmp
add
pop
push
add
xchg
cmp
add
adc
cli
mov
add
add
add
test
push
movsl
loope
dec
add
add
add
sti
xor
jp
std
repz
add
adc
xchg
mov
lret
in
bound
or
add
bound
cmpsl
push
rcr
jbe
fstpl
sub
lret
inc
add
mov
pop
loop
cli
dec
add
push
push
add
adc
mov
add
fsubr
mov
push
add
add
jg
in
imul
push
testb
imul
jnp
clc
xchg
sbb
mov
ficomps
sub
xchg
push
add
add
sahf
xchg
sub
xchg
divl
jne
xchg
popa
adc
adc
stc
adc
adc
add
mov
mov
clc
and
cmpsb
jge
add
add
loop
std
testb
add
add
test
add
mov
sbb
lock
repz
adc
scas
les
add
lock
add
add
add
adc
add
aas
ret
add
mov
in
dec
add
mov
pop
add
xor
mov
add
ds
gs
dec
dec
sahf
xchg
fcomps
lcall
int3
inc
jno
and
add
add
add
add
aaa
testl
pusha
add
jns
add
leave
xchg
adc
add
in
push
add
cmpsl
push
add
xchg
push
outsb
add
dec
mov
push
add
adc
push
add
subl
add
pop
vmovapd
push
add
popf
ss
lret
adc
out
add
out
pop
mov
test
xor
test
gs
arpl
or
mov
add
xor
dec
add
pop
loop
and
pushf
cmp
mov
scas
push
add
add
ret
stos
pop
add
add
std
das
lods
dec
add
add
add
xchg
outsb
add
movsl
mov
pushf
cli
lods
loopne
aad
add
ret
adc
xchg
sbb
adc
mov
hlt
add
mov
pop
loopne
add
add
add
ljmp
push
jne
xchg
push
add
data16
roll
sbb
dec
add
push
add
inc
std
or
ljmp
or
xlat
inc
add
int3
adc
push
add
out
mov
testb
add
mov
add
add
popa
mov
sbb
fmul
bound
mov
js
push
add
in
or
repz
pop
and
scas
mov
addr16
lods
adc
xchg
pop
add
mov
add
stos
sub
cltd
push
mov
mov
add
movsb
insl
clc
jns
dec
add
add
push
add
in
push
add
add
push
pop
shrl
pop
or
add
lcall
add
and
jo
call
mov
icebp
xchg
add
outsl
cmpsb
int3
mov
lods
inc
add
jne
pop
add
add
push
add
repz
xchg
ret
fdivrl
add
add
lods
popa
pop
add
add
push
add
fsubrp
cld
sbb
repnz
cwtl
jno
add
add
inc
loopne
ret
add
lret
std
fcom
xor
stos
call
out
cmp
cld
add
add
call
adc
mov
jns
add
push
shr
int3
fcomps
iret
and
lock
dec
or
lods
xchg
and
lahf
jg
cs
push
add
or
add
ret
hlt
push
add
std
add
or
arpl
add
pop
sub
enter
arpl
sub
arpl
and
sbbl
add
add
movsb
sbb
mov
cmc
aad
add
sarl
add
sub
dec
vaddpd
addl
xchg
or
and
dec
add
sbb
add
add
popf
movsl
sti
pop
arpl
add
mov
push
daa
mov
sbb
adcb
jge
pop
jmp
push
ret
lods
jle
sub
add
stos
or
xor
pop
enter
add
add
sbb
add
ret
add
pop
out
jmp
loopne
sbb
sti
xchg
xchg
add
add
cmpl
xchg
mov
add
call
or
jno
movsl
sub
rol
test
sbb
lret
sar
bound
add
mov
add
xor
pop
add
subb
addl
pusha
add
adcb
dec
add
test
dec
fldt
mov
ret
sbb
mulb
push
jne
inc
jns
push
mov
push
mov
add
jae
mov
add
add
pop
add
add
sbb
cmp
lods
sbb
mov
add
ljmp
add
insl
ficoms
lret
iret
fldt
notb
rcrb
mov
cmp
cmp
test
add
shll
sub
int3
les
or
adc
adc
or
adc
call
fadd
addb
xchg
bound
add
push
add
add
add
mov
gs
add
stos
out
fadd
jne
leave
and
dec
push
add
cmpsb
sahf
iret
mov
mov
add
mov
cmpsl
lods
adc
xor
or
iret
push
add
jge
sbb
add
pushf
cmpsl
test
sub
add
add
jp
in
popf
mov
add
add
xchg
std
dec
add
in
test
ss
scas
mov
mov
sub
into
add
add
dec
sti
cmp
dec
jbe
bound
and
xor
sbb
jno
push
add
nop
jae
adc
bound
mov
fldenv
dec
add
lods
enter
dec
add
jne
cmc
mov
inc
and
mov
xchg
push
add
pop
mov
mov
dec
inc
add
fisubs
add
add
xorl
xor
imul
xor
mov
mov
mov
push
dec
lret
add
xor
movsb
arpl
ja
mov
add
cmp
push
stc
and
dec
add
add
dec
std
dec
push
add
push
mov
cmpsb
xchg
call
adc
jb
bound
inc
add
fldcw
cli
xchg
imul
add
add
mov
setge
cmp
and
out
sbb
xor
iret
and
int3
add
scas
pop
add
add
stos
inc
add
mov
dec
push
add
in
mov
insl
lods
cltd
aas
mov
into
in
pop
add
inc
xor
shll
fcomps
add
xchg
aam
add
and
mov
push
add
add
test
mov
lods
cld
sbb
push
add
daa
mov
jnp
add
add
adc
xchg
adc
pop
add
ljmp
pop
cmp
in
add
xor
aad
add
ja
xchg
and
sti
stos
mov
pop
out
jmp
add
roll
mov
mov
add
lods
cmc
or
lods
out
mov
sub
jae
add
jns
add
rcrb
and
jnp
cli
js
insl
add
mov
mov
push
add
cli
pop
xchg
je
dec
jg
add
dec
jae
add
mov
stos
imul
add
add
js
rcr
pusha
add
add
seto
bound
fimuls
and
outsl
insl
fldenv
cmp
in
stos
pop
add
fiaddl
sub
rol
add
add
jae
add
in
add
ja
sub
test
adc
add
iret
sbb
icebp
aaa
inc
and
mov
push
add
add
cld
dec
add
das
jae
std
out
sub
je
stc
fwait
in
or
imulb
lea
cmp
mov
xchg
push
add
stos
in
mov
add
xor
scas
cmc
xor
fcoms
adc
or
fstps
ja
mov
add
sbb
sti
arpl
lods
movl
sahf
stc
sub
add
add
frstor
xor
cltd
das
into
push
add
push
outsb
add
add
mov
jb
loop
adc
sbb
add
loopne
adc
mov
add
mov
out
sti
mov
test
aas
js
outsl
push
outsb
add
fdivrl
pop
jnp
add
add
mov
add
data16
or
add
add
jbe
cmpsb
jp
loope
add
push
add
ret
pop
add
add
add
mov
nop
add
jmp
fcoms
add
sbb
sahf
insb
add
mov
jmp
mov
sti
cwtl
aas
mov
jne
add
add
jle
ss
cmp
jns
outsl
fists
lds
mov
add
orb
add
add
ret
je
add
add
sbb
dec
sbb
decb
shlb
loop
aas
mov
pop
xchg
test
repnz
repnz
sub
or
ret
fisubl
or
dec
lea
add
pushf
add
inc
add
sub
add
xchg
fmull
add
mov
mov
add
sub
cmp
sarb
flds
add
add
push
dec
out
inc
add
inc
ljmp
add
adc
add
hlt
js
in
inc
add
neg
or
jmp
add
cwtl
test
lea
jno
add
xor
xchg
mov
pop
add
sti
push
add
add
loop
mov
add
adc
insb
add
add
jo
inc
leave
mov
push
icebp
mov
inc
add
xor
add
xor
mov
js
jle
xchg
fisubl
xor
xchg
mov
mov
add
mov
lods
inc
dec
add
pusha
add
les
add
nop
pop
add
test
add
cmp
outsl
inc
frstor
add
loop
pop
inc
add
add
sahf
pop
add
decb
jns
add
out
jo
into
ret
pushf
pop
pushf
insl
std
movsb
push
mov
xor
fucomp
mov
fldl
inc
mov
jne
pushf
adc
fnstcw
jmp
add
pushf
xor
in
inc
jecxz
mov
or
clc
xchg
pop
pop
add
aaa
mov
stos
add
pop
add
and
mov
outsb
add
cvtdq2ps
push
dec
sbb
mov
mov
jo
stc
cltd
xchg
out
lahf
push
add
or
je
mov
outsl
mov
adcl
or
push
add
mov
shlb
repz
push
mov
leave
push
add
or
mov
pushf
mov
add
scas
dec
add
daa
out
repz
xchg
xchg
pusha
add
mov
cli
mov
add
push
stc
mov
rcrl
jle
push
add
hlt
push
xchg
arpl
mov
add
or
mov
add
add
les
mov
add
add
dec
add
fwait
xor
lahf
adc
inc
add
mov
movl
mov
mov
pusha
add
cmp
add
add
add
add
inc
add
loopne
jecxz
add
movsl
decl
pop
das
shlb
add
call
jns
add
fwait
mov
popa
lcall
jae
sub
inc
ja
cmp
ss
jp
push
add
mov
pop
fwait
cmpsl
aaa
mov
inc
movsb
push
add
pop
scas
add
mov
outsl
xor
vcvtpd2dqx
sbb
mov
cmc
mov
xchg
test
xchg
mov
adc
mov
add
add
add
test
adc
add
add
outsl
lret
add
movsl
jne
iret
add
pop
add
mov
lret
dec
out
add
and
xor
cld
sbb
addb
pop
add
add
jl
fcomps
mov
repnz
mov
push
sbb
std
loope
add
push
add
loop
inc
test
mov
test
cwtl
mov
add
add
xchg
andb
dec
add
cmp
push
cmp
movsl
rorl
stos
cmp
cmp
int3
xchg
imul
in
leave
jmp
pop
add
jmp
fisubrl
xor
jmp
fadds
cmp
lret
push
add
sbb
add
add
stc
faddl
and
popa
fs
xor
icebp
cltd
loopne
add
xchg
das
loop
add
sub
jne
andb
fsincos
add
pusha
add
mov
add
movsb
jle
pop
add
mov
jb
push
adc
push
add
mov
testb
dec
sti
push
int3
fwait
repz
std
xchg
jbe
inc
add
pop
mov
clc
addr16
or
mov
loope
add
add
jl
loop
add
pop
add
enter
add
jge
add
sub
sbb
jp
sbb
int
stos
stos
xchg
in
xor
add
push
add
pop
add
pop
add
data16
add
pop
cld
mov
sbb
dec
xchg
stos
cmp
cmp
xchg
jge
add
stos
adc
fsub
dec
pop
add
inc
add
add
dec
add
add
add
test
dec
fldcw
add
cwtl
outsb
add
xchg
std
fdivrl
mov
or
mov
aaa
mov
sti
outsb
add
xor
add
lods
fcomi
bound
call
xchg
push
add
gs
add
inc
rorb
add
pop
add
les
les
cmpsb
mov
add
add
icebp
cmpsb
loop
insb
add
int3
stos
add
imul
movsl
shll
iret
insl
iret
add
add
add
add
sarb
add
les
cwtl
lret
cmp
insb
add
add
add
add
add
sbb
sub
add
cmp
jno
add
add
pop
dec
fisttpll
sbb
je
jmp
add
std
pop
cmp
mov
mov
insl
mov
dec
ret
leave
push
add
dec
jp
data16
add
jl
mov
data16
xchg
adc
jg
pusha
add
mov
add
dec
xor
loopne
je
rcrb
push
add
push
add
in
push
call
fmul
testl
inc
inc
add
test
add
ja
in
outsl
jmp
mov
stos
inc
imul
in
jp
cmpsl
dec
add
add
mov
xchg
jno
push
add
aaa
add
popf
inc
add
jne
insb
add
je
js
push
add
dec
add
call
dec
add
test
add
scas
push
cmp
mov
sbb
jb
outsb
add
fsubrp
add
add
pop
dec
add
inc
popf
add
daa
push
add
fcomps
mov
movsb
xchg
pop
jo
lods
repz
push
cmp
leave
mov
mov
shl
cmp
pslld
sbb
inc
jle
add
cltd
sub
inc
lods
mov
mov
xor
inc
stc
adcb
insl
in
pop
add
push
repz
leave
add
mov
cltd
repz
int3
and
shll
imul
loope
js
lahf
adc
mov
dec
test
cmp
mov
pop
lods
push
jno
or
stos
cwtl
ja
fucomip
repnz
mov
or
lret
add
test
enter
cmpsl
bound
lds
movsb
or
mov
push
add
stc
shll
or
repnz
mov
mov
add
inc
mov
add
int3
lahf
mov
add
das
arpl
lcall
sbb
xor
cmp
add
pop
add
add
push
aaa
movsb
hlt
rorb
stc
fmuls
adc
push
add
add
adc
mov
push
add
add
mov
add
add
gs
icebp
or
jge
dec
add
add
mov
add
dec
mov
arpl
lea
add
mul
shl
lret
jp
or
movsl
into
adc
xor
imul
clc
mov
add
lock
out
shlb
les
or
jbe
mov
and
xor
push
add
dec
add
fwait
test
movsl
mov
sahf
ds
push
add
cmp
insb
add
mov
pushf
and
aaa
jno
or
mov
mov
les
add
add
insb
add
scas
sbb
add
cmp
sbbb
dec
add
out
orb
jmp
mov
loope
add
and
int3
bound
mov
shlb
cmp
push
add
mov
and
sbb
push
add
fmull
add
push
cmc
cli
cltd
or
test
xor
lret
test
dec
add
add
cmovp
and
or
loopne
sbb
mov
add
add
dec
add
mov
xor
add
bound
icebp
jno
xor
push
cmp
and
jne
add
in
xchg
test
add
add
into
mov
imulb
adc
mov
mov
sti
jmp
call
and
daa
xorb
lcall
push
add
fstl
mov
rorb
push
add
mov
rcr
test
add
test
lds
add
or
sbb
pop
add
dec
push
ljmp
add
and
mov
into
xchg
dec
sub
fiadds
add
test
ret
inc
or
mov
lds
add
jmp
mov
or
into
scas
lea
add
inc
add
sbb
pop
add
insb
add
dec
add
std
xchg
icebp
cmp
dec
xor
iret
add
mov
outsl
xor
bnd
mov
jge
icebp
out
insl
mov
pop
add
and
popf
sbb
add
mov
out
movntps
dec
add
add
xor
aam
add
jno
add
lahf
mov
in
add
scas
push
in
and
in
pop
mov
movsb
cld
test
out
aam
cli
adc
lret
add
dec
cmpsl
push
mov
rcl
jae
jae
add
aaa
xchg
mov
sub
cmp
mov
pop
sti
add
dec
add
xor
dec
mov
int3
test
incb
add
shll
sub
scas
inc
add
cmp
cwtl
mov
adc
adc
push
add
push
and
or
push
and
add
jg
add
test
add
add
xor
stos
inc
add
inc
mov
pushf
mov
add
sbb
dec
add
mov
jbe
sbb
test
loop
dec
add
cmp
add
xchg
test
out
fmulp
scas
mov
dec
xor
out
mov
lods
lods
lret
or
bound
outsb
add
add
loop
cs
sarb
in
sbb
inc
add
pop
adc
pushf
inc
dec
add
shrb
push
add
sbb
push
add
xchg
lock
lea
out
push
add
add
pop
add
arpl
mov
int3
leave
jl
dec
add
in
jno
std
aas
aam
add
movsb
dec
add
outsl
into
cli
hlt
and
xchg
push
add
add
jae
inc
aam
add
add
cmp
popa
adc
addr16
sub
add
mov
adc
pop
add
inc
pop
jp
add
add
aaa
jl
outsl
and
add
add
add
sbb
cmc
ret
pop
add
mov
sbb
mov
aas
push
scas
ret
dec
cmpsl
cmc
mov
out
add
aaa
pushf
add
add
add
add
enter
add
add
lcall
pop
add
cmpsl
push
add
sub
lds
movsl
orb
sub
add
subl
xor
pushl
mov
mov
sub
out
mov
leave
inc
adc
loop
rcrb
fwait
push
add
nop
daa
pop
addl
incb
cmp
add
into
cmp
add
pop
add
sahf
push
or
call
stc
inc
adc
dec
xorl
sahf
out
add
inc
add
sub
shlb
insb
add
xchg
std
arpl
inc
add
sub
push
add
movsl
cmp
rorl
add
add
pop
add
cwtl
fisttpll
pop
xor
lea
jmp
add
xchg
dec
add
add
add
fwait
jl
xlat
pop
xchg
add
add
cmp
fisubrl
xor
push
add
lock
add
leave
mov
sub
mov
add
xor
in
test
popf
xchg
xor
pop
pop
pop
add
and
jmp
scas
ja
fdivrp
pop
add
mov
dec
in
mov
loopne
jne
add
adc
arpl
aaa
in
cmp
sbb
add
dec
add
cmp
out
sbb
idivb
add
jmp
in
sbb
push
jns
jns
sti
xchg
fcom
mov
cld
dec
xchg
mov
call
xor
cmp
or
xchg
int
orb
xchg
and
sbb
pop
into
out
ret
mov
inc
add
repnz
add
pop
or
scas
add
add
scas
imul
mov
add
rcrb
jp
add
sbb
dec
add
adc
scas
jle
push
add
mov
pop
add
addr16
std
and
test
fnstenv
add
add
orl
stos
push
add
rolb
add
and
adc
insb
add
test
add
add
push
add
repz
cmpsl
sub
cld
add
add
mov
push
adc
add
add
notl
aaa
xchg
add
sub
add
add
test
or
cmp
xorb
add
add
ret
add
lock
in
mov
sub
inc
add
inc
add
sub
out
sbb
inc
mov
lret
inc
test
jecxz
scas
or
mov
add
lods
adc
add
add
add
and
arpl
mov
dec
add
mov
rcr
and
or
test
dec
jge
add
into
jmp
add
ja
out
mov
stos
dec
mov
fdiv
xchg
fwait
add
cmpl
add
add
jno
stc
push
add
xchg
xor
lock
stc
loope
imull
mov
jns
call
je
aas
jge
test
fdiv
sahf
pop
cld
inc
adc
pop
xchg
add
loop
add
sbb
lods
test
dec
add
add
add
add
xchg
push
add
popa
mov
add
add
out
jo
add
inc
dec
inc
add
add
inc
add
jle
lock
pop
cmp
inc
xchg
rorl
add
insb
add
ficoml
pop
add
or
subb
add
mov
mov
add
jmp
jmp
out
fistl
xor
xor
jg
add
adc
push
cmp
sub
or
mov
sbbb
add
mov
push
add
push
add
inc
or
mov
loope
add
and
sbb
flds
js
push
push
add
push
add
inc
ljmp
jmp
bound
dec
dec
or
add
push
add
sbb
and
enter
add
cmp
push
add
add
pop
stos
jns
xor
daa
jno
push
push
mov
cs
test
sbb
mov
fsubrs
add
cmp
push
add
outsb
add
mov
add
cmpsb
scas
repnz
inc
inc
add
xorl
add
xchg
dec
add
sbb
and
aas
int
lret
add
or
dec
add
add
sbb
ds
pop
pushf
fldl
add
stc
mov
ljmp
jno
ja
push
or
dec
add
stos
inc
sub
lea
pop
fcompl
cmp
push
add
imul
cmp
pop
add
mov
add
cmpl
les
push
add
jge
fnstcw
and
inc
add
shll
cmp
push
add
add
int
mov
insl
mov
or
cmc
jbe
popf
sbb
dec
add
mov
inc
imul
xor
out
inc
xor
jecxz
xchg
pop
mov
add
stc
xchg
inc
xor
cmp
dec
mov
mov
add
jo
cmpsb
push
clc
mov
ret
fldt
add
mov
inc
xchg
repz
add
cmp
cmp
add
add
scas
dec
daa
or
add
xor
xchg
stos
jg
xor
add
addr16
and
jge
or
mov
pop
add
ret
popa
sub
add
repnz
jg
in
js
loopne
mov
lods
inc
in
lods
andb
add
insb
add
lds
add
add
pop
xor
push
add
inc
add
add
fsubs
aam
add
outsb
add
inc
add
jo
div
xchg
int3
jnp
jg
add
xchg
mov
adc
mov
fists
add
addb
add
dec
add
add
dec
movsb
mov
add
test
je
add
jno
insl
rcr
adc
inc
scas
mov
sub
cmpsb
mov
stos
int3
inc
and
jb
icebp
andl
adc
jge
add
enter
add
add
orb
aam
jae
add
jae
add
jg
add
adc
adc
mov
cwtl
inc
cmp
xor
out
in
add
icebp
jae
pop
jmp
movsl
cmpsl
or
pop
dec
insb
add
xchg
fbstp
add
js
mov
pop
pop
das
lcall
or
add
and
add
and
add
inc
add
out
add
sub
icebp
adc
loopne
add
insb
add
cmp
push
add
sbb
push
es
pop
jne
add
repz
shl
daa
cltd
cmp
and
xchg
mov
adc
add
add
add
rcrl
xor
cmp
mov
add
inc
shll
xor
daa
int3
sub
cmp
nop
lods
jp
pop
jb
aas
lods
shrb
sub
iret
dec
xorl
loop
cmc
aaa
push
mov
mov
lea
lcall
addl
add
sahf
xchg
pop
arpl
insl
in
xor
mov
xchg
out
add
add
mov
imul
icebp
pop
add
andl
sarb
cmp
mov
adc
test
add
inc
add
rcrb
imul
cmp
cmp
ret
in
ret
fdivr
xor
test
insl
inc
add
repnz
out
push
add
add
add
ljmp
add
mov
sti
ret
push
add
jno
roll
and
int3
adc
lds
rcpps
or
jp
scas
aam
push
add
jbe
fbld
imul
add
in
daa
out
icebp
call
cmp
pop
mov
sbb
popa
fists
cmp
push
push
and
inc
xchg
push
push
add
add
jl
mov
sub
add
mov
dec
addl
test
daa
ror
xor
adc
mov
add
shll
jnp
add
dec
add
jbe
stc
adc
mov
jb
repnz
add
into
movsb
mov
inc
sub
pop
add
stos
lds
add
cmpb
add
jecxz
jae
dec
add
cld
cltd
out
mov
add
add
add
and
mov
fwait
mul
cmpsl
and
aaa
xchg
xor
jp
ret
add
or
outsb
add
push
cmp
lret
add
mov
mov
add
xor
xchg
lock
into
loopne
add
add
adc
add
pushf
mov
pop
or
add
sbb
or
rcr
std
dec
add
pop
add
add
fcmove
mov
roll
sub
test
fsubrl
aad
sti
orl
idivb
and
push
add
sub
and
xchg
jae
jl
sbb
jecxz
cltd
push
add
add
sbb
faddl
jne
sub
lret
mov
or
pop
add
dec
mov
jle
sbb
ret
mov
pop
into
or
mov
jnp
add
mov
test
add
push
add
sub
testb
push
add
add
sti
xlat
inc
or
lahf
add
add
add
add
lahf
lock
inc
and
test
add
ret
cmpsl
dec
add
vandpd
sbb
mov
inc
add
rcrl
add
or
xor
call
add
add
cmpsb
sbb
adc
push
add
add
cmp
call
dec
gs
add
xchg
mov
push
add
cmp
inc
cwtl
jns
jo
insb
add
sti
sub
outsl
jae
push
add
add
adc
dec
sti
jns
mov
ss
sub
sbb
or
insb
add
out
shlb
mov
test
xlat
mov
pop
inc
cs
dec
push
mov
cmp
sahf
lret
dec
add
push
add
add
pop
xor
outsl
sub
xor
sbb
pop
pop
add
add
add
add
lock
fcmove
adc
jae
add
sbb
add
mov
add
ficomps
loope
adc
sbb
popa
imul
mov
loop
add
add
add
add
add
push
add
and
inc
add
mov
scas
test
scas
and
sbb
pop
push
add
movl
lea
lret
adc
stc
insl
pop
add
jp
dec
sarl
leave
xor
add
push
add
sahf
or
mov
add
lods
sbb
push
and
jnp
adc
mov
add
dec
mov
adc
dec
add
cmpb
outsb
add
mov
add
jecxz
and
sbb
test
add
lods
fwait
popf
arpl
sbb
jge
push
add
ja
add
mov
add
adc
adc
dec
mov
aaa
sbb
add
add
cmp
dec
add
add
test
or
pop
add
pop
add
mov
add
sbb
dec
push
test
push
add
cmp
stc
addl
pushl
int
add
cmc
push
add
fimuls
out
fsubr
aas
push
add
sub
xchg
or
xchg
adc
adc
inc
cmp
add
ljmp
mov
mov
add
or
mov
dec
stos
sbb
nop
sarl
pop
insl
sbb
add
faddl
cwtl
inc
add
add
add
sbb
cli
push
add
in
add
pop
jae
shrb
or
enter
push
pop
mov
mov
or
dec
add
and
add
es
jnp
test
pop
mov
add
adc
pop
lea
mov
add
jno
dec
sub
nop
adc
mov
jbe
mov
push
pop
lcall
push
add
lock
cmpsl
inc
js
std
jle
fbstp
rcrl
add
insl
ret
cmc
dec
mov
fstps
xchg
notl
cwtl
or
or
mov
aam
xor
add
jecxz
cmpsl
fidivrl
jle
hlt
dec
add
pop
add
add
add
rcl
enter
add
pop
add
jg
add
adc
push
add
mov
arpl
shrl
mov
sbb
loopne
shr
aas
jb
daa
ja
add
jmp
jnp
subl
jne
add
add
or
rcl
and
add
into
orl
ja
add
insl
dec
nop
add
shlb
add
fcmovu
fcomp
mov
xchg
sahf
test
in
std
pop
add
pop
inc
add
add
add
jnp
in
jge
notb
out
shll
jo
add
push
add
jbe
stos
lahf
ljmp
jl
mov
fninit
test
add
add
sub
fistpl
add
lods
dec
out
sub
add
add
mov
add
add
or
jae
out
add
add
sbb
adc
jb
add
mov
mov
aas
movsl
pop
add
fs
mov
jo
movsl
cmp
mov
add
add
cmp
adc
adc
add
movsl
cld
out
add
dec
add
sahf
rolb
add
xchg
aas
jae
inc
add
repnz
inc
cmp
insb
add
mov
add
add
test
inc
dec
lret
roll
sarb
jbe
and
shl
out
push
add
add
jmp
add
mov
sub
outsb
add
aad
push
add
add
dec
add
cli
pop
add
frstor
jle
fbstp
mov
ret
add
xchg
add
mov
add
pop
ljmp
test
inc
ljmp
add
cmp
mov
xchg
pop
movsb
inc
mov
cltd
cmp
push
add
shlb
add
imul
fwait
dec
add
add
leave
inc
add
push
add
sub
mov
add
jbe
in
add
popa
cld
dec
add
std
or
cmc
dec
pop
add
aas
imul
int3
sbb
dec
in
call
ror
add
add
push
int3
push
add
cmp
enter
add
and
mov
add
adc
add
add
mov
xlat
sub
add
inc
aam
mov
dec
dec
add
sub
incb
ficompl
jecxz
sahf
mov
pop
add
add
inc
add
loop
add
push
push
add
call
out
dec
add
pop
test
dec
add
enter
hlt
sahf
lea
add
imul
add
add
testl
mov
add
and
adc
and
out
testl
stos
adc
cmpb
adc
mov
fs
sub
sbb
xchg
xchg
mov
imul
add
pop
repnz
adc
inc
mov
lahf
movb
out
ret
push
add
lods
pop
dec
xor
inc
or
push
cmp
add
lock
aam
call
push
add
hlt
ficoms
addb
add
hlt
jg
cld
adc
add
mov
lcall
cmp
add
add
dec
dec
add
jmp
leave
mov
cld
jmp
pushf
jo
inc
jge
add
add
add
jmp
test
imul
clc
iret
cmp
add
repz
sub
mov
add
add
add
lods
jle
mov
and
out
adc
xchg
nop
sti
xchg
mov
jl
or
sbb
loope
add
cmpl
mov
add
cmp
icebp
ret
push
add
push
add
lret
int3
clc
cmp
ret
and
lods
sahf
cltd
lods
in
add
lock
add
insl
aaa
push
add
divl
add
in
add
aam
ret
aad
lahf
xchg
nop
test
inc
cmp
add
mov
dec
add
add
scas
stos
push
test
mov
add
adc
lods
sub
lock
fs
enter
pop
cmpsl
and
dec
aad
mov
pop
pop
add
add
push
cwtl
inc
add
stos
hlt
jne
add
cwtl
imul
or
add
mov
jp
jg
jle
push
add
add
in
mov
gs
add
add
mov
sbb
pusha
add
int3
or
jmp
xchg
sbb
mov
dec
add
add
jae
add
outsl
push
sub
rcrb
stos
setb
add
sbb
cmp
mov
ret
dec
add
pop
aas
xor
add
add
xor
xor
push
add
add
pop
mov
aam
fninit
test
mov
fwait
xchg
or
ret
enter
imul
add
in
inc
mov
add
inc
test
loope
jnp
add
popa
sbb
into
pusha
add
add
mov
fildll
add
fisubrs
lahf
pop
shrl
add
push
add
xchg
rorl
mov
add
sbb
inc
iret
xorl
jg
xlat
inc
add
add
push
out
mov
pop
add
dec
into
lret
sub
jo
in
lret
stc
mov
mov
and
nop
and
pop
add
loop
add
enter
in
leave
outsb
add
pop
dec
push
add
mov
add
movsb
dec
add
leave
mov
add
mov
into
xor
jp
cli
stos
inc
add
add
mov
ljmp
jb
testb
jno
add
out
sub
add
xchg
push
pop
repnz
jb
nop
push
add
leave
shlb
adc
sbb
nop
sbb
sub
mov
enter
nop
fildl
dec
xor
paddq
add
shrb
jge
xor
pop
add
add
mov
lock
add
mov
dec
shll
add
hlt
enter
mov
sbb
test
outsl
jb
fwait
pop
add
pop
add
add
mov
mov
xchg
fcmovnu
out
add
jmp
fwait
and
add
mov
std
sbb
add
adc
or
dec
add
out
sub
scas
lods
frstor
loop
add
nop
mov
add
push
add
push
lock
bound
fbld
add
outsl
cmp
mov
lods
jno
dec
fistpll
adc
add
add
jnp
add
add
fisubs
add
add
push
mov
add
push
dec
add
std
or
loope
cmp
pusha
add
jmp
lcall
addl
orps
test
pop
dec
add
adc
sbbl
clc
into
movsl
repz
and
mov
and
add
xchg
insl
pop
fxch
inc
add
xchg
dec
arpl
push
add
pusha
add
jl
fcom
ret
sub
shll
cmp
icebp
pusha
add
outsb
add
insl
push
lret
mov
repnz
jmp
or
pop
ffreep
fldt
add
xor
jmp
mov
add
sti
cmp
cmpsb
loope
cmp
add
idivb
fdecstp
out
addr16
push
add
add
add
add
add
and
add
add
fiaddl
lds
imul
dec
add
add
add
jl
dec
jbe
stos
or
add
mov
popa
in
rclb
mov
add
into
in
add
jmp
sti
mov
dec
add
sub
mov
add
shl
adcl
stos
xor
scas
fimuls
mov
xlat
xlat
pop
pop
jnp
or
add
add
add
rclb
add
call
lcall
and
xchg
add
and
add
icebp
sbb
test
push
add
test
inc
test
jnp
mov
pushf
cmp
je
and
aam
sahf
xchg
add
pop
inc
sbb
push
add
jne
imul
xchg
popf
xor
in
stc
stos
scas
and
icebp
out
loop
pop
add
push
js
add
in
push
add
jb
cld
test
jno
add
nop
xor
add
ficomps
insl
xor
dec
xor
push
add
add
adc
ljmp
sbb
loope
add
xchg
movsl
in
out
add
hlt
fs
divb
leave
stos
hlt
mov
cmpsl
inc
add
add
add
push
add
sbbb
cltd
dec
add
xlat
add
push
sub
call
adcl
hlt
lock
mov
dec
or
out
cmp
lahf
mov
orb
add
lods
mov
add
push
add
loop
outsb
add
add
enter
push
add
dec
add
test
scas
adc
cvtpi2ps
pop
ret
xor
clc
fst
imul
lds
sti
scas
popa
pushf
call
and
bound
add
add
add
sahf
jecxz
shrl
pop
add
movsl
cmpsb
popa
shll
insl
sub
scas
pop
mov
jmp
imul
add
inc
cmpl
ds
mov
sahf
repz
push
or
aas
cmp
test
add
push
mov
jge
sbb
add
add
loopne
sbb
fistl
aad
sub
les
push
add
jge
pop
add
adc
add
xor
cmp
fidivl
xor
push
add
pop
dec
ja
repnz
icebp
xchg
xlat
stos
jo
dec
cmp
add
add
cmpsl
cmp
daa
incl
pushf
mov
leave
or
xchg
jae
pushf
fcmovnu
in
sbb
push
add
lret
mov
adc
js
lea
cmp
push
add
sbb
loope
or
test
add
inc
out
push
in
or
cld
jb
rcrl
lods
push
xor
insl
adc
data16
jbe
adc
xchg
jecxz
les
add
sub
jmp
pop
add
add
out
push
add
loop
add
dec
add
in
xor
mov
pop
repnz
scas
shll
test
hlt
fwait
sti
mov
jbe
jb
scas
jmp
xor
movsb
sbb
push
add
es
push
add
add
inc
dec
hlt
push
stos
insl
jns
cmc
mov
insl
in
int
test
add
add
dec
and
xor
or
inc
mov
mov
dec
dec
cmp
fdivrs
mov
mov
jecxz
xchg
jb
fsubrs
lret
lcall
mov
add
aam
add
aaa
mov
add
add
jecxz
add
repnz
mov
add
outsb
add
lods
inc
add
shrb
in
mov
mov
mov
cld
fisubl
add
add
lea
add
mov
fs
scas
nop
adc
add
xlat
orb
xor
or
or
bound
and
cmp
test
add
add
in
imul
imul
add
fwait
lock
xchg
jnp
into
sub
push
add
ljmp
stos
stos
cmpl
add
inc
insb
add
add
and
mov
lods
movsb
adc
outsl
adc
cmp
jnp
cmpsb
fst
add
xchg
cmp
clc
mov
mov
add
inc
lcall
add
imul
add
xor
lock
loope
add
mov
insl
jns
adc
std
in
fcmovb
push
add
int3
inc
test
inc
add
in
shll
adc
enter
stos
or
mov
jb
les
in
add
add
imul
inc
add
push
add
test
iret
aam
fldenv
aaa
add
add
add
lds
jns
add
push
add
pop
add
mov
add
add
filds
mov
jge
lret
inc
dec
aam
ret
jbe
cmp
pop
and
mov
fldl
xchg
jecxz
add
jge
aaa
mov
into
push
fisttpll
test
dec
gs
dec
add
pushf
xor
sbb
mov
ret
imul
push
xor
mov
int
add
add
les
add
in
out
leave
iret
or
add
pop
add
add
jbe
jnp
ja
xor
push
add
add
dec
add
or
rcll
mov
add
aas
mov
cwtl
xchg
in
out
adc
adc
add
sub
leave
clc
sbb
in
hlt
mov
mov
iret
inc
add
add
jg
sbb
add
add
js
cmp
negb
jae
imul
mov
push
in
stos
mov
jg
pop
adc
inc
pushf
xor
jnp
out
lahf
cmp
sbb
cld
inc
outsl
xchg
cmp
mov
daa
iret
push
add
jo
inc
inc
add
or
ror
int3
ficomps
enter
jno
add
imul
mov
cmc
or
mov
dec
add
add
int
outsb
add
and
call
pushf
aaa
xor
mov
inc
add
add
aad
add
add
add
add
sbb
xchg
addb
add
add
sbb
add
mov
in
repz
push
add
dec
add
xchg
cmpsl
mov
out
fwait
xchg
sub
scas
stos
push
add
adc
fwait
inc
ljmp
dec
add
add
fcoms
lea
addr16
push
add
enter
jmp
rcll
pop
xor
sub
xchg
lret
mov
cmp
inc
js
andb
push
add
pop
add
stc
ret
add
loop
sbb
fisttps
call
cmp
sbb
jmp
inc
add
mov
mov
icebp
incb
cwtl
push
push
cmpsb
mov
xor
pop
pop
fisubs
pop
add
jle
mov
add
lds
add
in
add
add
add
daa
pushf
test
add
sub
in
fwait
and
pop
adc
test
dec
add
outsb
add
cmp
outsl
cld
mov
sub
mov
arpl
stos
out
and
imul
add
pop
iret
sub
scas
rcrb
je
icebp
lock
sub
sub
pop
in
cltd
mov
add
add
push
sbb
jle
jns
add
push
nop
mov
add
sub
mov
add
add
adc
sarb
add
add
and
cmp
clc
jae
jmp
jg
lahf
dec
add
xor
in
add
add
add
add
test
dec
fidivrs
push
add
cmp
sub
mov
arpl
scas
xor
test
out
mov
sub
imulb
add
test
add
pop
add
push
add
rcll
cmc
scas
out
inc
add
pop
dec
repz
or
cwtl
test
add
add
sub
xchg
sbb
jmp
add
push
add
xchg
cmp
xor
add
mov
add
fstl
add
add
dec
add
sub
rclb
jo
imul
adcl
adc
pop
add
adc
push
add
and
add
sub
pop
add
mov
lods
lea
mov
stc
jo
xor
add
fwait
data16
ljmp
enter
add
imul
lahf
mov
int3
lds
add
dec
jno
pop
roll
js
int3
je
inc
add
add
mov
ds
dec
test
imul
add
mov
and
sahf
stos
adc
mov
add
cmc
adc
repz
inc
add
push
mov
js
js
jp
mov
or
mov
cmp
ret
inc
add
push
add
add
mov
or
add
add
add
add
call
add
ret
jge
ljmp
jecxz
dec
add
xor
in
fldl2e
lahf
cwtl
cmp
bndldx
mov
aaa
push
add
add
sub
xchg
push
add
jo
repnz
divb
add
push
add
add
add
add
jne
lret
add
outsl
loopne
aad
mov
push
xchg
mov
ds
xchg
jmp
add
mov
js
shrb
test
adc
rcrb
add
cmpsb
test
ja
aaa
dec
daa
dec
out
add
add
add
add
add
fildll
add
scas
push
sbb
or
sbb
push
add
sahf
testl
fistpl
adc
cmc
push
and
and
inc
add
mov
mov
cmpsb
lock
imul
add
push
add
cmpsb
jecxz
and
and
push
add
ficoms
cmp
cwtl
cmp
int3
sbb
cmp
push
mov
add
add
add
call
add
mov
in
sbb
xor
jmp
mov
add
add
add
add
nop
mov
je
pop
cld
mov
outsb
add
jne
pop
pusha
add
sub
negl
add
and
pop
add
lahf
je
adc
outsb
add
add
in
out
popa
sub
into
pusha
add
adc
stc
aaa
jmp
push
add
add
ja
jb
lret
scas
repz
clc
jecxz
dec
push
add
push
add
push
add
sub
and
push
add
sbb
xchg
mov
lahf
mov
and
add
dec
add
in
add
xchg
and
jne
in
pop
mov
add
pop
pop
lcall
or
inc
and
fldenv
lahf
cmp
and
mov
xor
pop
add
sbb
cmpb
adc
mov
xor
push
add
add
lods
jle
jl
xchg
pop
add
or
daa
lds
add
add
popa
divl
and
push
add
sub
stc
xor
mov
aas
aam
add
ret
test
add
push
in
cmpsl
xor
dec
outsl
mov
shll
mov
mov
int3
jae
popa
sub
push
add
jge
mov
push
pop
push
add
lods
sub
add
aad
mov
add
in
xchg
popa
xor
stc
movsl
jns
add
paddd
mov
push
jns
bound
adc
leave
lret
gs
cmp
rorb
xchg
add
dec
cmpsb
jno
gs
xor
add
push
dec
add
add
sub
xor
add
hlt
push
add
and
sub
mov
pop
in
stos
lds
push
inc
add
sub
mov
pop
jns
ret
arpl
mov
clc
pushf
into
or
add
push
bound
les
addl
ret
mov
mov
push
add
and
xchg
push
adc
jo
in
iret
dec
and
pop
cmp
mov
gs
mov
dec
xlat
cmpsl
fisttpll
es
call
add
adc
jge
add
ret
inc
add
mov
add
lcall
xchg
xchg
lods
sub
mov
test
ret
adc
mov
add
dec
add
enter
and
mov
enter
mov
insl
sbb
adc
xchg
push
add
add
out
cli
enter
jp
or
stos
mov
shlb
mov
add
and
bound
jb
pop
add
insb
add
cmp
jns
dec
add
test
push
and
addb
add
push
scas
inc
nopl
add
add
and
mov
add
imul
xchg
scas
mov
sub
inc
jns
xlat
add
rcrl
mov
xor
hlt
push
add
fiadds
add
lods
ret
std
pusha
add
cmp
mov
add
loope
test
add
dec
mov
pop
xchg
add
cmpsl
or
repnz
sub
imul
xchg
out
mov
mov
mov
ret
popa
into
add
scas
data16
add
divb
add
mov
xor
push
add
mov
jge
add
jecxz
jbe
test
add
enter
mov
cmc
xorb
mov
mov
add
add
sub
and
add
stos
arpl
subb
add
push
add
mov
add
jp
mov
add
push
add
xchg
mov
add
orb
mov
iret
jbe
adc
pop
pop
pop
pushf
fiaddl
xchg
aam
add
jae
add
lcall
push
add
xchg
lods
jmp
add
and
jo
ljmp
adc
push
add
fdiv
jg
arpl
jecxz
mov
cmp
xorl
lahf
add
sub
jmp
add
xor
orl
faddl
pushf
jnp
add
pop
enter
add
jg
inc
sti
movsl
mov
pop
add
test
add
mov
pop
xchg
or
and
imul
mov
lds
cmp
sbb
fistl
lods
inc
mov
or
pop
add
imul
add
add
rol
adc
shl
rcrb
add
mov
add
add
fisubrs
jns
popf
inc
add
dec
andb
add
add
add
ret
lcall
or
lock
loope
pusha
add
cs
mov
push
add
test
dec
sar
lcall
add
add
add
mov
cmpsl
fnstsw
mov
add
cmpsl
or
subl
add
add
push
add
adc
fs
data16
jmp
add
and
and
stc
roll
add
add
adc
sub
and
mov
add
insl
imul
in
jl
xor
jle
adc
std
jne
add
and
xchg
data16
scas
popf
mov
fidivrl
add
add
mov
imul
jmp
cmp
add
jno
scas
sub
sub
jne
dec
add
nop
movaps
fstl
inc
add
sar
sbb
pop
adc
inc
mov
je
sbb
inc
lahf
pop
xchg
adc
mov
gs
mov
test
pop
add
popf
or
aaa
pusha
add
loope
add
aas
jns
sbb
ljmp
popf
sub
add
or
add
add
add
add
inc
adc
cmp
mov
add
mov
add
cld
test
jno
sub
push
sbb
sti
in
test
ret
push
add
jnp
notb
addr16
faddl
add
inc
add
ret
inc
add
push
add
int3
cmc
mov
add
add
add
mov
jge
push
add
add
mov
jnp
add
inc
add
xlat
cmc
pop
add
mov
into
out
stc
mov
cmp
and
xor
pusha
add
ja
movsl
call
pop
push
lret
pushf
movsl
or
insb
add
fwait
adc
and
bound
xorb
add
add
cmp
and
mov
or
dec
fwait
imul
add
add
jo
lahf
adc
sub
sbb
rcrb
add
sub
and
or
jnp
add
icebp
daa
mov
mov
shr
push
pop
add
push
add
add
lcall
ret
jmp
add
ret
add
repz
add
add
fistpll
add
pop
xchg
ret
mov
add
shll
inc
add
rorl
stos
fwait
addb
fldpi
sbb
xor
cs
xchg
hlt
pop
add
movsb
mov
repnz
jae
pop
add
jg
add
dec
xlat
sub
lahf
pop
add
ljmp
insb
add
in
cmp
int3
in
add
sar
inc
imul
xor
pop
add
add
hlt
dec
add
adc
inc
mov
sbb
add
sbb
mov
stc
divb
pop
shlb
mov
adc
xor
or
aaa
ret
add
aad
add
dec
add
add
mov
loopne
jg
or
lret
iret
xchg
fsubrs
add
pop
add
inc
add
xor
add
addb
xchg
add
imul
add
rol
add
movsb
lods
mov
fs
push
cmp
xchg
lret
lea
scas
scas
pusha
add
add
pop
into
push
add
aas
imul
call
enter
xor
sub
mov
mov
sub
sahf
add
mov
add
aaa
fwait
and
mov
add
not
pop
leave
adc
out
add
seto
call
scas
cs
inc
add
jo
leave
mov
jg
fildll
inc
add
add
loope
sbb
add
adc
or
inc
add
sub
cltd
ret
add
jge
add
add
mov
pop
mov
and
mov
jecxz
jnp
push
cltd
int3
fcomps
add
outsl
pop
shlb
adc
mov
cwtl
jge
xchg
push
add
add
cmc
icebp
cmp
jl
in
das
out
cmp
add
js
push
add
iret
pop
stc
cs
inc
add
inc
xchg
add
xor
mov
jbe
loope
rcrl
push
add
push
add
loopne
xorb
adc
test
ljmp
cmc
rorl
scas
sbb
stos
sbbl
add
add
add
jle
inc
add
cmpl
add
add
add
mov
sbbl
std
fsts
add
lahf
add
jp
xor
int3
add
and
insb
add
add
pop
fisttpll
enter
add
xchg
cmpl
shrb
pop
add
mov
adc
and
add
pop
pop
cwtl
mov
add
jo
fadds
and
cmpl
scas
and
and
stc
stos
push
add
lds
add
add
fadds
add
add
sbb
inc
outsl
aad
add
push
add
mov
hlt
and
sti
mov
mov
push
and
mov
add
lret
jp
out
jne
fcmovb
aaa
xor
fwait
int
add
jnp
add
pop
inc
shr
mov
or
mov
cli
fiadds
icebp
in
shl
xor
sub
jne
imul
mov
add
imul
movsl
loopne
stos
adc
add
jmp
lds
add
add
insb
add
lahf
mov
or
pop
add
xor
or
mov
sbb
lods
inc
add
add
pop
xchg
push
add
add
and
cmp
jp
mov
mov
add
inc
sbb
aas
out
xor
jmp
add
mov
mov
int3
jbe
iret
dec
add
add
dec
add
std
neg
mov
aaa
and
inc
add
fdivl
dec
mov
rcrl
dec
dec
add
je
cmpsl
jnp
jne
sahf
sbb
push
ret
sub
or
repnz
pop
add
mov
popa
jnp
std
sbb
dec
lock
or
jbe
push
add
rcr
mov
xchg
xor
imul
xchg
jmp
adc
fnstcw
push
add
add
fcoms
add
add
xchg
cs
inc
add
cmc
imulb
add
push
das
and
add
mov
icebp
fdivrl
loop
add
test
add
add
add
mov
or
jp
mov
orl
push
mov
add
fwait
out
and
dec
add
orl
ret
pop
adc
adc
loopne
add
mov
add
pop
loopne
xorb
jae
add
int3
stos
sbb
shll
add
js
scas
pushf
mov
cs
stos
mov
push
das
inc
add
cmpsl
mov
or
mov
add
cltd
mov
mov
add
mov
add
dec
add
add
mov
jecxz
lcall
and
insb
add
inc
stos
jp
mov
mov
jp
sub
push
add
sbb
and
pushf
cmc
inc
or
add
jae
add
imul
mov
add
dec
add
or
mov
jo
jmp
pop
xchg
push
in
pushf
in
pushf
mov
add
cltd
in
in
xchg
add
out
iret
scas
shrb
jno
add
mov
xchg
push
add
mov
outsb
add
lods
aaa
dec
cmp
add
imul
add
imulb
add
add
or
sti
push
add
cwtl
fisubl
dec
cmp
lcall
stc
adc
push
add
mov
add
adc
ret
add
leave
cmpsb
loopne
xor
pop
add
sbb
add
jmp
add
cmp
mov
add
mov
add
stos
aas
mov
ja
popa
dec
and
arpl
add
ret
aas
adc
sbb
add
loop
add
cmpsl
sub
rolb
or
cmp
fldl
add
loop
add
xchg
add
add
lods
add
xlat
mov
fcompl
xchg
pop
sub
xor
mov
adc
jle
pop
add
mov
loopne
enter
mov
lods
push
fiaddl
ret
popf
cld
cltd
fst
inc
xor
and
scas
push
jne
enter
cli
cmp
inc
add
imul
mov
mov
loop
lret
xor
sbb
pop
adcb
cmp
xchg
aad
ret
and
stos
push
stos
push
add
add
ror
cmc
add
jg
outsl
push
add
xor
cmp
and
mov
and
outsl
pop
add
add
inc
add
xchg
inc
add
add
lods
fists
add
dec
out
dec
add
mov
popa
dec
xchg
repnz
or
and
mov
lds
pop
mov
add
add
xchg
data16
push
add
add
incl
sbb
arpl
dec
push
add
add
arpl
out
sub
add
xor
mov
cwtl
sub
pusha
add
loopne
pop
add
xchg
mov
add
add
ret
int3
mov
xchg
push
mov
test
cmp
lret
repnz
add
jle
add
adcl
jg
insb
add
add
jg
add
inc
add
outsb
add
jmp
loopne
sub
push
cmpb
dec
add
add
daa
dec
lods
mov
pop
add
rcll
fstl
ja
add
lahf
jg
add
add
and
lcall
gs
jbe
hlt
push
add
xor
pop
mov
push
mov
adc
inc
add
pusha
add
das
dec
add
dec
add
mov
shlb
and
adc
in
xchg
push
add
stos
dec
xor
pop
ljmp
inc
sub
shrb
cli
outsl
dec
add
sbb
adc
mov
bndldx
out
sbb
cmp
and
add
add
add
add
test
add
adc
add
add
adc
mov
lahf
mov
add
xchg
cld
movl
add
subl
adc
mov
out
push
int3
loope
stos
jmp
jns
jge
sub
mov
lret
or
adc
jne
jmp
add
icebp
add
xor
stos
out
jno
mov
sti
and
xchg
ja
jle
jmp
jp
stos
outsb
add
out
pop
add
xchg
cld
clc
shlb
add
in
and
out
sbb
sti
mov
add
cli
add
ljmp
cmp
mov
stc
pop
lods
dec
add
add
add
pop
add
add
add
mov
out
test
add
push
test
outsl
fsts
mov
imul
pusha
add
add
push
fstpt
outsl
repz
popa
cmp
jge
add
cmp
sahf
mov
or
pop
add
inc
add
fcmovu
jge
stos
int
add
imul
add
mov
fldcw
jge
sbb
lcall
stc
adc
je
mov
xchg
pop
jmp
add
adc
xorb
add
into
cmp
jl
jmp
pop
dec
push
add
add
xor
bound
fnsave
add
mov
mov
add
cmp
pushf
xchg
dec
inc
push
add
aaa
push
add
in
xchg
fmul
lcall
push
ret
push
add
cmpsl
mov
mov
add
add
jmp
xchg
jne
mov
out
loope
in
cmpsb
popa
adc
jb
jo
popa
sub
lods
mov
push
xchg
lcall
add
jmp
loop
add
aas
aad
add
add
lea
and
and
xor
xchg
push
add
inc
sahf
jg
add
imul
add
add
dec
movsl
sbb
push
add
mov
or
add
cmc
mov
xlat
popa
add
jo
jb
ficoms
les
add
jbe
sub
xor
jmp
and
add
clc
mov
add
in
add
hlt
cmpl
sbb
adc
or
dec
mov
add
push
add
dec
add
adc
mov
add
add
mov
add
lock
or
and
cmp
sarb
test
add
add
jecxz
add
pop
add
orl
insl
push
and
push
add
add
add
add
cli
fidivs
mov
add
movb
mov
jle
sahf
dec
add
add
dec
add
add
xchg
xor
dec
jge
jb
out
sub
jno
mov
stos
test
add
idiv
sbbl
add
add
add
std
mov
add
dec
mov
mov
add
pop
add
jne
outsl
enter
adc
iret
jg
out
out
xor
inc
jp
xor
add
add
dec
add
add
dec
jno
pusha
add
jge
adc
sbb
pop
add
imulb
jns
mov
add
push
add
loop
add
js
xchg
dec
and
xor
lret
fwait
jecxz
push
add
or
mov
repnz
subl
dec
add
cld
mov
mov
imul
cs
xor
mov
xor
hlt
lahf
popl
push
add
add
pushf
imul
push
add
pop
inc
add
imul
dec
add
add
add
dec
add
pop
dec
popa
jnp
add
add
cmp
xchg
and
cld
shr
sub
sbb
mov
sub
add
cmp
enter
fcmovne
xchg
sahf
stos
pop
loopne
jp
outsl
jmp
add
add
xor
sub
movsl
dec
inc
add
fisubrl
add
mov
add
pop
mov
xchg
and
ret
test
cmp
stos
jnp
xchg
enter
push
outsl
sub
jne
jb
and
and
aaa
mov
imul
xchg
jmp
xchg
cmp
inc
add
call
mov
add
ljmp
cmp
add
push
add
xor
cmc
add
pop
dec
add
add
mov
sarb
je
sbbb
mov
push
add
xchg
pop
add
add
add
or
je
xchg
outsl
add
add
adc
xor
add
sahf
push
add
jg
add
add
call
add
ret
mov
adc
rol
ljmp
pop
sub
cmp
leave
pop
dec
add
xchg
insl
icebp
add
add
push
add
stos
add
inc
enter
sub
aaa
sub
add
dec
add
fidivl
xor
adc
aaa
mov
cmp
cmp
je
dec
add
jno
add
mov
xchg
sub
pop
add
in
pop
movsb
adc
xor
adcl
and
jmp
push
add
stc
inc
add
jns
lret
pop
push
mov
rorb
inc
ror
jl
push
add
dec
xchg
mov
add
jns
popa
in
add
aam
movsb
pop
add
pop
cmpsb
test
xchg
sahf
imul
add
adc
shlb
add
daa
in
add
add
jne
mov
cmp
push
add
add
push
add
loop
add
mov
jg
add
jno
pop
add
rolb
add
xchg
push
mov
add
ja
add
lret
iret
cmc
xchg
ret
jne
sar
pop
add
add
or
imul
pop
ja
mov
pop
mov
sbb
add
ljmp
sub
xchg
sbb
add
sahf
inc
add
ljmp
push
sbb
or
cmpsl
and
iret
xchg
ja
add
dec
roll
add
add
xor
das
in
sbb
add
jb
jp
jo
mov
out
lahf
arpl
inc
inc
cmpsb
lcall
mov
jp
adc
mov
mov
or
add
add
add
add
gs
lret
add
add
add
das
into
dec
jmp
lods
in
pusha
add
inc
lds
lahf
dec
add
add
add
jne
int
add
add
add
add
test
lret
loope
fxch
aas
push
stc
inc
add
xchg
sub
add
cmp
aam
sub
add
inc
add
mov
in
fbstp
lcall
add
sub
fcoms
add
mov
add
push
add
add
add
cmp
add
mov
xchg
movsl
test
lods
lods
scas
mov
hlt
sbb
add
dec
add
outsb
add
pop
insb
add
add
add
lock
repz
push
add
cmpl
es
mov
adc
add
add
fmulp
insb
add
test
xor
aaa
inc
add
push
add
and
mov
mov
mov
add
stc
xor
bnd
mov
xchg
pushf
dec
adc
jb
push
arpl
add
dec
pop
pop
add
xchg
sbb
cmp
cmp
aam
mov
cltd
sbb
mov
movsl
lds
cld
aaa
adc
mov
cltd
outsl
imul
pop
popa
fcoms
cmp
adc
jle
push
js
aas
cmc
mov
add
add
adc
xor
sbb
and
clc
xchg
and
pop
dec
add
mov
and
add
add
std
data16
cmp
roll
out
mov
or
cmp
je
adc
sbb
mov
and
das
add
pushf
sub
jle
xchg
add
jp
cmp
add
outsb
add
loop
push
add
or
adc
js
outsb
add
lea
push
add
add
inc
mov
add
add
imul
add
add
pop
or
or
mov
mov
enter
inc
xlat
and
and
push
add
add
xor
dec
add
mov
clc
mov
lret
lock
dec
repz
jo
mov
dec
rcll
movsl
arpl
mov
sbb
ljmp
cmp
dec
add
sbb
add
mov
inc
add
sub
js
stos
jmp
add
add
xchg
mov
cltd
shlb
insb
add
movsb
jl
shll
mov
lods
pop
push
add
cli
insb
add
add
inc
add
cmpb
and
fadds
pop
ficompl
stc
sbb
push
add
negl
xor
xor
push
add
mov
add
mov
cmp
push
sbb
test
add
add
add
and
jo
test
add
add
add
idivb
or
or
nop
pop
add
jne
ljmp
imul
mov
scas
adc
movsl
or
cmpsl
jg
add
aas
cmpsl
inc
add
sub
inc
or
jge
push
sub
stc
addr16
add
mov
bound
hlt
lods
cmp
imul
sbb
jnp
dec
add
pop
add
add
jecxz
sub
insl
sbb
add
sbb
std
pop
sbbl
mov
add
popf
adc
jmp
test
inc
int3
dec
jae
lret
mov
adc
stos
pop
add
add
sub
add
idivl
fistl
xor
cli
bound
and
mov
jnp
add
inc
add
sbb
xor
mov
ffreep
mov
add
jle
cmp
add
jae
add
into
mov
fcmovnu
and
mov
jmp
add
mov
jle
cmp
pusha
add
mov
nop
ja
movsb
outsl
leave
sbb
insl
jb
xor
add
xchg
out
add
sti
pop
movsl
or
mov
movl
jmp
add
adc
inc
cmp
and
pusha
add
inc
add
sub
imul
outsb
add
add
add
sbb
xchg
repnz
mov
add
mov
xor
das
cmp
or
xor
aas
jae
jle
xchg
mov
jbe
adc
pop
setns
call
push
add
push
add
jg
dec
add
mov
add
movsb
stc
add
test
add
and
inc
add
mov
jg
clc
mov
out
or
ret
jns
test
lock
add
add
mov
add
scas
xchg
xlat
movups
add
fpatan
jbe
fcmovnu
outsb
add
mov
bound
cmp
fsubrs
mov
adc
cmc
lret
ljmp
movsl
and
fstpl
push
fwait
add
xor
mov
sbb
ljmp
cmp
or
and
cld
mov
mov
mov
mov
into
dec
add
das
out
add
leave
out
add
fisubrs
rcr
mov
inc
add
add
sub
out
jge
add
jge
je
jmp
in
insl
fistps
sarb
int3
xlat
hlt
fisubs
pusha
add
add
add
subl
inc
add
add
add
add
add
add
pop
cmp
add
add
and
cmpl
loope
inc
add
add
out
or
dec
add
adc
jne
add
dec
add
add
pop
pusha
add
loop
bound
pop
add
add
and
push
bound
mov
xlat
lcall
add
pop
add
in
sbb
out
stos
mov
vmwrite
sahf
push
add
mov
sub
mov
das
loope
add
add
mov
add
mov
add
repz
mov
call
js
sub
aas
outsb
add
cmpsb
mov
add
pushf
inc
pop
lea
call
add
pop
in
imul
add
add
jbe
jb
xor
add
int
cltd
fnstenv
insb
add
sub
or
lds
les
popf
xor
scas
aaa
jp
xor
adc
xlat
cmpsb
mov
pushf
inc
add
add
sarl
inc
adcl
fwait
and
and
jns
xchg
test
add
cmp
mov
sub
mov
jbe
iret
testb
add
mov
fnstenv
add
jg
fsubl
add
pop
ret
xchg
adc
xlat
mov
add
ja
adc
jne
add
mov
pop
adc
jge
add
push
add
add
cmp
jle
les
push
insb
add
nop
sti
shll
xchg
test
into
movsb
stc
out
mov
fnstsw
add
cmc
ljmp
add
aam
or
stos
aad
mov
add
add
xchg
cli
adc
xor
add
aas
add
add
lods
mov
mov
pop
add
scas
jmp
xor
pushf
push
add
loopne
sub
orl
xor
fucomi
dec
add
cld
push
xchg
sbb
in
add
mov
loop
xlat
shl
cmp
jno
push
add
cmpsl
imul
add
inc
add
fsubrl
add
mov
sub
dec
add
add
dec
jmp
adc
push
xchg
pushf
or
fnstsw
xchg
jne
bound
sahf
loop
add
add
rorb
add
test
mov
out
or
and
lret
xchg
mov
sbb
std
ret
cmp
xchg
inc
add
out
add
cmpsb
adc
je
lock
pop
mov
xor
adcl
adc
add
add
dec
add
mov
imul
jns
fdiv
adc
push
push
rcl
or
je
pop
add
push
xlat
pusha
add
mov
dec
add
xor
adc
imul
pop
adc
push
mov
sahf
sbbl
pop
add
mov
push
add
mov
mov
inc
add
jbe
jns
add
lret
jne
add
add
add
jae
cmp
mov
mov
add
ret
ja
sar
add
icebp
xor
repnz
add
repz
add
cmp
ljmp
add
add
add
pop
add
lret
rol
lock
add
mov
mov
out
xchg
insl
andl
jo
inc
sbb
stos
pop
cmp
jl
icebp
orps
or
sbb
gs
push
add
add
fists
add
xchg
mov
add
add
nop
inc
lahf
js
orl
cmp
out
push
add
lret
pop
add
xor
add
subl
add
jno
fidivrs
pop
add
add
pop
add
pop
add
dec
in
add
add
repz
add
add
sahf
pop
add
add
add
sbbl
add
push
lods
fistpll
add
cmp
mov
xor
cwtl
or
or
pop
add
repz
add
mov
jae
or
jl
mov
fcoms
mov
or
gs
inc
adc
jmp
xor
pushf
cld
add
add
pop
mov
add
lock
add
jmp
add
add
push
push
add
push
add
jnp
and
sbb
fsubrs
mov
rcll
aad
add
add
dec
and
mov
jns
add
add
jl
add
sbb
out
add
xor
push
add
cltd
sub
mov
dec
add
add
cld
lods
push
movsb
dec
fistpl
loopne
bound
or
ficompl
add
add
add
inc
add
xchg
sub
ret
scas
add
push
add
cmc
sub
push
add
add
add
add
xor
jmp
clc
cmp
dec
je
add
ja
loope
mov
fwait
dec
add
inc
mov
scas
push
add
test
dec
add
mull
add
or
push
add
add
add
xchg
int
add
sbb
lods
mov
in
std
pop
add
popf
call
cltd
stos
loope
rcr
cli
repnz
mov
add
sbb
jo
add
xchg
lea
fnstenv
pminsw
sbb
outsl
imul
add
jp
dec
add
inc
add
add
add
cmp
and
push
or
inc
add
add
shr
mov
lcall
add
inc
add
mov
jge
dec
add
sti
add
xor
mov
mov
iret
mov
add
add
jl
cmpsl
inc
add
pop
stos
mov
jmp
or
add
mov
xchg
lret
les
out
mov
add
mov
add
xchg
xchg
pop
insb
add
add
add
call
push
push
add
add
in
push
add
add
adc
int3
jle
mov
mov
xchg
shlb
add
and
add
scas
and
mov
lods
or
inc
cmpsb
sbb
dec
add
or
int3
xlat
xor
imul
push
pushf
iret
sahf
pop
pop
js
mov
add
mov
inc
push
jno
jmp
add
add
loopne
into
int3
lods
sarb
insl
dec
add
add
add
xor
dec
push
add
je
cmp
inc
add
xchg
sub
adc
push
add
icebp
cltd
fwait
ret
push
add
jge
push
add
in
call
imul
add
pop
outsb
add
dec
jecxz
add
pop
add
aaa
jbe
cld
jmp
repnz
rol
add
sbb
stc
sub
ja
test
cltd
inc
shrb
push
add
js
hlt
sub
add
add
add
add
aas
pop
cmc
testb
adc
mov
dec
add
push
add
lds
enter
adc
mov
ror
jns
add
mov
xchg
outsl
pop
add
test
push
hlt
sbb
add
sub
mov
int3
lret
add
mov
movsl
pushf
mov
push
dec
add
rcrl
mov
add
jbe
outsl
stc
popl
dec
pop
imul
cld
cmp
push
popf
jecxz
ljmp
mov
and
lock
adc
adc
mov
movb
or
pop
pusha
add
and
add
mov
mov
mov
les
rorb
add
sarl
pop
daa
sub
inc
add
out
idivl
adc
jo
ja
add
pop
or
je
movsl
jp
pop
add
add
das
test
add
pop
add
inc
add
aad
out
add
jbe
in
add
rcrb
stos
mov
leave
in
push
add
pop
rolb
jg
add
cmp
dec
add
bound
cmc
clc
aad
bound
int3
scas
out
mov
adc
dec
add
mov
sub
js
cmp
push
mov
add
xchg
gs
lock
pop
add
arpl
ret
add
int3
or
cmp
push
dec
add
lods
jmp
and
push
add
sbb
add
fdivs
and
fists
loope
add
xchg
add
mov
add
add
mov
dec
push
push
add
add
sbb
adcl
insb
add
or
adc
sbb
mov
bound
cli
ds
negl
jnp
mov
or
je
or
mov
add
or
sbb
pop
add
test
add
and
sbb
add
gs
in
xchg
fsubl
fdivs
lods
jl
add
or
sub
push
add
aas
pusha
add
mov
mov
xchg
les
cli
cmp
lods
out
jmp
add
inc
xchg
cmp
repnz
cwtl
jge
add
insb
add
imul
mov
imul
aad
add
pop
enter
add
add
add
sti
jbe
mov
test
add
inc
add
nop
popl
enter
add
push
push
add
add
loop
int3
addr16
lods
and
sti
aam
mov
add
add
cmpsb
repnz
mov
test
add
pop
out
add
add
xchg
xor
icebp
dec
add
mov
jp
int3
lea
add
shrb
data16
add
add
sub
push
lret
inc
jmp
pushf
xchg
inc
and
add
cmpsl
xchg
sub
leave
inc
sbb
mov
outsb
add
add
mov
add
test
stos
xchg
in
cmp
imulb
cmp
adc
lret
add
add
lahf
and
iret
inc
adc
or
or
pop
lods
arpl
xchg
test
add
mov
sbb
sub
push
add
imul
sub
outsb
add
shll
add
mulb
add
dec
add
add
dec
xchg
idivb
pop
add
add
or
sbb
and
pop
add
add
add
add
add
sub
add
ja
in
loopne
push
or
sub
mov
pandn
push
add
add
sbb
add
jnp
inc
and
js
push
add
add
rcrb
fdivrl
outsl
rol
jp
mov
subb
sbb
push
in
shlb
push
xor
mov
daa
jno
leave
jno
sbb
clc
xchg
add
add
into
call
xchg
dec
js
dec
aaa
and
mov
inc
add
lea
or
add
jb
jnp
add
shrb
ja
aad
cmp
cmp
sub
sbb
rcll
rclb
add
es
xchg
or
pop
sti
sbb
xor
pop
addr16
add
add
add
cmp
test
test
mov
xchg
push
add
mov
add
scas
rcll
cld
jno
lods
and
xchg
mov
fidivrs
add
out
push
sub
adcb
insb
add
add
add
mov
jl
mov
mov
add
or
or
test
mov
mov
stos
iret
push
add
jp
in
pop
add
add
sahf
or
sbb
push
sti
add
add
mov
cmp
in
add
imul
inc
cmc
fsubrs
add
mov
jl
xor
scas
shll
add
add
lods
mov
mov
arpl
xor
add
add
mov
add
add
cmpsb
jmp
nop
add
dec
test
xlat
adc
dec
add
mov
add
mov
lret
adc
mov
fdiv
fdivl
dec
add
inc
add
add
enter
pop
loop
je
mov
fldcw
sbb
sahf
xchg
js
dec
mov
add
inc
add
loopne
lods
lcall
sbb
fmull
enter
inc
add
mov
mov
pop
add
imull
add
add
sbb
aaa
push
add
fldl
fistl
add
aad
or
rcrb
andb
ret
xlat
mov
xchg
adc
push
add
xor
sbb
push
add
cmp
xchg
shl
or
popf
shll
xlat
movsb
xorl
ljmp
sbb
lcall
adc
dec
out
mov
cwtl
push
add
fcomps
mov
fcompl
add
fstps
arpl
lds
dec
pop
add
dec
fiadds
add
and
add
add
rorl
push
add
xchg
adc
arpl
lea
adc
in
add
insb
add
cmp
adc
jae
jne
inc
aaa
mov
cltd
jo
in
das
xorl
add
push
add
push
add
push
add
cli
roll
dec
add
jnp
sahf
loope
jmp
aam
clc
jl
sbb
add
mov
add
xchg
add
xchg
std
test
add
jmp
cmp
xchg
sub
sbb
add
inc
add
and
jl
xchg
test
jo
cltd
loopne
bound
xchg
sbb
mov
test
xor
icebp
pop
add
add
add
cmp
add
clc
inc
add
jg
sbb
xchg
sahf
inc
add
rcrb
cmp
lahf
jg
leave
cmp
xor
aad
add
or
ljmp
popa
mov
adc
xchg
and
cmp
data16
mov
or
ljmp
add
loopne
ret
adc
jne
add
xchg
iret
and
bound
sub
add
test
add
add
xchg
xchg
scas
ret
xchg
cmp
outsl
push
repz
nop
pop
shlb
add
outsl
outsl
enter
lea
add
push
cltd
inc
push
and
xchg
insl
cmp
jmp
add
push
add
push
add
jmp
add
add
sub
out
inc
pop
jns
mov
out
add
loope
xor
cmpsb
sub
sahf
icebp
inc
dec
mov
fcmovbe
inc
add
sub
pop
hlt
das
sub
pop
add
sbb
adc
add
add
dec
add
push
lret
dec
adc
add
addr16
add
mov
lock
lds
fadds
add
cmpsb
out
inc
js
fidivl
add
add
jmp
add
push
add
sbb
add
pop
add
mov
jo
movaps
aas
or
cmc
aas
out
int
daa
imul
add
int3
sbb
mov
add
mov
add
xor
roll
add
scas
mov
in
jno
mov
call
cmpsl
inc
lret
pop
pop
add
repnz
mov
dec
or
mov
imul
xchg
mov
lcall
add
add
add
xor
xchg
inc
test
add
inc
pop
push
add
add
add
insb
add
stos
or
mov
int
into
and
add
divb
cmp
andl
add
std
movsb
mov
add
add
cmp
loope
loop
or
add
inc
arpl
scas
or
hlt
repz
pushf
adc
dec
pop
add
jg
and
jb
and
scas
inc
or
xchg
jns
xor
push
fadd
push
outsb
add
dec
mov
in
add
adc
cld
or
push
add
add
xor
cli
arpl
xor
xchg
filds
in
add
mov
ljmp
add
popf
mov
push
add
daa
pop
add
add
mov
hlt
mov
test
pop
cmpsl
and
or
or
fadd
fiadds
or
pop
xchg
stos
xchg
das
out
es
lcall
lds
add
out
push
add
hlt
lds
push
add
sbb
jecxz
mov
and
inc
add
jae
adc
int3
aam
notl
adc
and
add
jecxz
add
aaa
cld
insb
add
roll
xchg
enter
add
jmp
add
mov
fnstsw
gs
add
add
sbb
add
inc
add
add
addr16
or
icebp
out
les
pop
mov
and
dec
push
cltd
sbb
add
dec
add
jns
repnz
or
mov
pop
std
cmp
scas
lock
pop
add
add
mov
add
mov
popa
pop
add
rclb
xor
inc
add
jmp
cmpsl
testb
and
mov
add
into
insl
mov
addr16
fdivrl
add
in
cmp
ja
and
lods
mov
push
push
fwait
xchg
push
or
insl
ret
dec
add
fstps
in
add
pop
stos
add
mov
xchg
je
or
push
inc
add
add
inc
add
pop
cmc
xor
pop
add
dec
sbb
ljmp
aad
jecxz
mov
add
mov
lcall
jge
mov
test
add
jge
dec
add
xchg
bound
je
mov
sub
subb
fisttpll
sbb
pop
add
add
out
inc
add
pop
sbb
add
out
shll
push
mov
sbb
dec
push
xchg
mov
add
add
aas
aaa
in
negl
test
add
add
xor
ss
fwait
in
sbb
pop
iret
lock
pop
xchg
jo
stos
mov
adc
pop
sbb
stos
rorl
xchg
add
add
lock
outsl
cli
ret
dec
add
push
add
pop
add
xor
repnz
add
inc
mov
out
add
add
sti
mov
mov
add
mov
mov
xor
add
mov
and
lock
inc
faddp
repz
push
add
fwait
xchg
mov
pushf
push
and
jb
inc
xchg
out
decl
add
out
jb
fdivp
leave
xor
xor
imul
add
inc
add
add
push
sbb
sub
dec
add
loop
mov
add
xchg
pop
cld
push
add
mov
pop
push
add
loop
add
xor
or
adc
add
add
add
repz
add
add
cmp
dec
cld
cmp
lcall
aam
add
and
dec
xorb
loop
xor
pop
jle
out
lds
aaa
mov
and
lock
pusha
add
in
add
fistpll
and
mov
adc
jl
imul
add
arpl
into
test
in
ds
rorl
jno
in
test
add
add
sub
call
add
aas
leave
fwait
xchg
xor
adc
bound
jmp
add
aad
or
mov
mov
add
cli
int
add
out
add
add
pop
xor
lods
pop
arpl
lds
mov
mov
mov
push
add
xor
mov
insb
add
icebp
dec
add
xchg
cwtl
dec
add
ljmp
mov
enter
stos
subb
jae
iret
mov
outsb
add
jp
int3
fcomps
add
add
add
lds
sbb
jns
aad
inc
mov
cli
test
add
shl
jo
xchg
lea
add
stc
shr
push
add
or
sbb
loop
adc
shll
add
add
insl
xor
mov
sub
sbb
push
add
setle
add
xchg
loopne
imul
in
add
add
fidivl
dec
push
add
call
imul
test
add
je
je
add
lods
inc
add
mov
insl
jle
out
lcall
jmp
add
xchg
jg
dec
and
loopne
subb
mov
adc
push
add
incb
mov
mov
push
add
pop
or
test
xchg
test
sbb
add
sbb
cli
in
js
andl
add
jns
scas
pop
jbe
adc
sbb
add
add
adc
cmp
loopne
add
movsl
cmp
je
data16
add
lret
push
add
nop
sahf
sbb
test
lock
push
add
add
push
add
lea
jp
add
add
sbb
add
add
std
imul
fcompl
add
movlps
mov
push
push
cmp
adc
cltd
pop
pop
sbb
adc
dec
add
cmp
inc
aaa
lret
add
xor
add
jno
jnp
add
and
xchg
cltd
dec
inc
add
mov
jmp
push
add
pop
mov
popa
or
push
enter
iret
arpl
push
lcall
pop
add
rcrl
int3
push
mov
or
push
jp
xchg
dec
add
mov
and
out
aaa
cmp
addr16
add
inc
add
lahf
outsl
inc
add
xchg
push
lods
idiv
loope
repnz
add
mov
shl
add
outsl
dec
add
or
add
add
inc
ss
cld
xlat
pop
add
je
add
push
add
add
add
cmp
xor
and
movsl
imull
out
outsb
add
cwtl
stc
xchg
push
and
imul
mov
add
mov
clc
clc
mov
xor
add
insl
lcall
and
jmp
add
shl
cmp
xchg
pop
clc
mov
and
js
jne
jg
add
mov
lret
subl
dec
add
int
sti
mov
inc
add
stos
xor
add
add
and
adc
mov
add
push
add
xor
das
inc
jb
adc
iret
adc
js
fcoml
stos
xchg
cmp
int3
inc
setp
push
aad
add
add
add
in
out
push
sub
repz
and
mov
pop
add
in
jne
add
jb
mov
mov
xchg
push
add
ret
sub
push
add
sarl
rcll
add
add
add
add
dec
sub
mov
clc
xchg
shrl
add
add
jmp
lret
or
in
xchg
jge
add
lcall
push
add
es
dec
add
inc
add
movsb
pop
fildl
dec
add
mov
add
dec
add
popf
inc
add
inc
lods
js
lcall
add
ja
addr16
addr16
in
inc
add
aas
stos
cmpsl
ss
mov
mov
add
push
add
jle
imul
push
add
das
lret
nop
lods
lods
pop
add
jns
xor
cmp
add
xchg
test
add
mov
les
add
mov
fidivl
in
add
cmp
add
out
out
sti
pop
sbb
add
add
jo
push
add
push
lods
mov
imul
push
jbe
arpl
add
add
add
pop
jmp
xchg
add
add
add
add
add
ret
iret
xor
jl
outsl
cli
mov
cmpsl
push
incl
lds
add
xlat
push
xchg
lret
add
mov
add
movsb
in
test
push
dec
add
cmpsb
movsl
mov
add
sti
sub
test
mov
cmp
jbe
cmp
sbb
add
jb
shll
cli
mov
repz
outsb
add
out
sub
dec
add
and
cmpl
add
pushf
les
add
iret
sbbb
mov
add
jl
sub
pusha
add
repz
mov
insb
add
jno
popa
push
add
jge
cmp
cmp
adc
add
dec
add
cmp
cmp
ja
pop
pop
in
mov
inc
add
lea
add
fidivrs
inc
mulb
dec
xor
sti
cmc
dec
add
add
dec
add
dec
mov
cmp
add
jb
fs
mov
add
adc
scas
nop
add
test
dec
daa
mov
int3
out
push
add
push
add
add
push
call
sub
fildll
add
out
add
lcall
add
cmpsl
pop
add
sub
add
xchg
xchg
and
jle
pop
add
add
mov
mov
loopne
dec
loope
dec
add
xchg
push
xor
add
add
aam
stc
inc
add
add
push
out
cwtl
sbb
repz
or
push
add
add
push
add
int3
push
add
sub
in
mov
xchg
jo
mov
lds
mov
lods
adc
out
addr16
popa
mov
add
daa
ljmp
daa
pop
xchg
movsb
xchg
nop
mov
pusha
add
xor
js
loope
es
shl
add
sub
popa
adc
xlat
cltd
dec
add
and
push
add
and
add
add
sub
je
lock
add
fwait
cld
ja
add
jbe
icebp
and
sbb
xor
andb
add
mov
sub
fsubrs
add
add
jp
js
outsb
add
std
fstenv
add
ret
inc
lock
jns
xor
fstpt
mov
loop
mov
dec
jno
inc
add
xchg
and
cmp
loop
xor
add
stos
xchg
add
lahf
clc
jp
adc
mov
fistpll
push
movsb
ret
adc
xchg
in
lock
add
sti
sbb
or
jae
sbb
or
mov
dec
mov
mov
dec
add
pop
add
out
jns
add
jno
add
add
repz
fstps
sbb
sub
insl
into
mov
add
dec
mov
fwait
xchg
in
ffree
sbb
push
add
pusha
add
xchg
adc
dec
cmp
jecxz
jo
xor
dec
mov
add
jp
inc
add
add
add
pop
fwait
ret
stos
jmp
jl
add
cmp
pop
add
nop
or
fsubrs
dec
add
and
pop
add
dec
add
xchg
sub
xchg
std
mov
in
bound
std
in
add
out
xchg
outsb
add
dec
add
mov
add
adc
ret
xchg
add
xor
dec
int3
vcmppd
cmpb
add
jb
xchg
mov
inc
daa
xor
add
add
xor
add
mov
int3
cmp
jb
sahf
push
add
arpl
jge
add
add
scas
jno
dec
add
add
mul
int3
cmovae
add
add
repnz
negb
loop
push
add
inc
add
jne
outsl
xor
add
add
and
inc
add
add
push
movsl
add
jne
call
add
add
add
adc
pusha
add
out
add
mov
jmp
dec
mov
lcall
lret
add
shll
shr
mov
stc
das
sub
push
add
cmp
aam
add
fidivrs
add
add
jo
sub
movsb
cli
or
jmp
in
sti
pop
add
add
add
rclb
pop
pop
in
mov
sub
add
mov
jl
loopne
xchg
into
xor
lret
ss
mov
add
out
leave
cmpb
inc
pop
xor
cmp
mov
mov
add
das
mov
dec
mov
push
add
shll
add
add
add
flds
dec
add
repnz
popf
xchg
fmuls
add
mov
add
sbb
jo
adc
add
shlb
test
mov
or
repz
test
add
test
mov
std
aam
push
add
inc
lar
xchg
xor
mov
mov
mul
pop
nop
popa
sub
fists
jnp
add
jl
push
add
mov
pop
mov
add
add
pop
add
xlat
into
xor
jno
stos
xor
int3
mov
pop
add
lahf
orl
clc
dec
adc
cmp
out
adc
xchg
test
add
or
in
shrl
add
add
cmp
push
sub
add
cld
add
push
mov
fcoms
fbstp
add
xor
inc
sub
and
cmp
cmp
outsl
xor
cltd
sbb
pop
mov
std
int
adcb
pop
xchg
inc
push
add
mov
adc
jge
add
and
lock
aam
je
subb
mov
inc
add
mov
inc
jnp
in
adc
fbstp
add
shlb
add
add
add
lods
loop
and
fs
movsb
jmp
add
pop
add
adc
push
pop
mov
push
add
lret
pop
add
in
je
and
pop
add
jle
xchg
mov
add
js
scas
mov
pop
add
add
push
add
add
mov
sub
nop
inc
add
add
pop
in
or
sub
daa
mov
add
xchg
and
dec
add
push
add
popa
mov
cmp
divl
cmp
mov
or
and
adc
mov
out
add
add
mov
enter
and
xlat
out
jp
rcll
test
decl
sub
jg
shlb
out
inc
cmpb
jl
sbb
adc
and
and
add
mov
shll
into
lret
push
enter
add
add
bound
sahf
mov
repz
out
adc
xlat
cmpsb
aaa
lret
in
lea
inc
addl
cmpl
ret
jno
sbb
add
inc
icebp
ret
dec
add
test
pop
hlt
push
add
sub
cwtl
pop
mov
mulb
outsl
or
mov
cld
inc
add
or
insl
xchg
sub
xor
add
jmp
add
adc
shrb
add
mov
mov
pop
push
rcll
add
add
mov
add
mov
add
pop
add
jae
jnp
mov
lea
ds
repnz
mov
add
add
out
add
mov
xchg
out
js
sub
xor
xchg
xor
sub
gs
mov
add
outsb
add
add
dec
arpl
arpl
lods
or
add
and
neg
dec
add
add
add
mov
leave
in
add
in
testl
mov
add
add
lret
pop
cmp
sbb
xchg
inc
popa
std
dec
add
jge
push
inc
add
int3
movsl
push
add
rcll
mov
push
add
add
stos
jnp
add
add
lods
scas
mov
pop
jnp
add
test
xchg
gs
add
add
sub
xor
mov
jl
xor
adc
add
add
push
inc
add
sbb
in
or
add
jmp
enter
xor
add
dec
add
insl
xchg
sahf
cmp
test
jle
into
jns
sub
jno
add
pusha
add
mov
sarb
loop
cmpsl
jbe
sbb
add
push
shrb
add
repnz
sub
outsl
lock
add
adc
cwtl
inc
jmp
add
xchg
pop
add
push
add
fwait
pusha
add
inc
add
sbb
dec
add
call
daa
stos
xchg
cli
cmp
xchg
scas
mov
sub
lret
mov
push
dec
add
add
jge
dec
add
add
pop
add
sbb
xor
das
xchg
stc
les
inc
push
add
cmp
out
aaa
shlb
int3
push
jg
aam
aaa
mov
pop
test
insb
add
mov
and
aaa
mov
in
add
add
bound
mov
incb
add
add
push
push
bound
ret
hlt
iret
loope
ficoms
add
cmp
jno
aad
in
pop
add
fstpt
inc
dec
add
out
dec
cmc
dec
and
jl
ds
in
xchg
lock
in
mov
cmp
add
add
std
pop
stc
inc
add
shl
imul
cmpsl
adc
sahf
sub
jnp
push
add
mov
mov
xchg
mov
adc
in
dec
add
sbb
xchg
cmc
movsl
pop
xchg
add
add
sub
sub
cmp
add
test
push
add
pop
add
add
and
jecxz
sbb
je
ret
jg
in
push
add
pop
add
iret
push
add
lret
push
add
mov
mov
jae
mov
fwait
imul
xchg
aam
imul
pop
add
add
fimull
insl
push
dec
add
dec
add
add
popf
inc
add
add
fnsave
mov
divb
ret
movsb
jmp
or
add
aam
add
mov
xor
nop
cld
test
sbb
ljmp
int3
mov
sub
arpl
fsubs
add
stos
sti
cmpsb
mov
dec
inc
pusha
add
lcall
adc
hlt
or
daa
jl
repnz
js
jno
mov
arpl
and
mov
lock
add
movsl
mov
rcrb
ljmp
mov
add
add
add
and
insl
insb
add
add
add
and
test
dec
fnsave
dec
add
mov
add
jle
and
lea
fwait
dec
jl
inc
xor
add
and
hlt
add
aas
in
nop
add
adc
mov
lock
mov
sarl
mov
sub
inc
out
fcmovnu
loop
jge
add
or
aas
ljmp
mov
dec
imull
mov
adc
add
add
adc
add
mov
sbb
xchg
mov
add
add
test
imul
mov
rorl
adc
xor
push
add
inc
mov
add
movsl
jbe
popf
or
mov
mov
add
lret
movsl
test
sub
mov
jg
cmp
faddl
push
int
pop
mov
xchg
in
in
enter
mov
fnstsw
add
addb
mov
or
add
andl
xor
fwait
data16
push
mov
add
push
add
add
repz
cmp
sbbb
add
lret
add
pop
add
andl
aas
shll
xchg
add
les
out
xchg
ljmp
imul
fcompl
xchg
jne
inc
add
add
aad
add
ja
nop
dec
add
popa
daa
iret
jl
add
push
add
add
push
add
daa
scas
stc
es
mov
dec
add
jle
push
add
add
mov
add
sub
add
add
iret
jmp
mov
cs
loopne
testb
test
xor
mov
insb
add
scas
sbb
addl
add
loop
add
decl
icebp
xor
clc
push
add
fcomi
rcr
add
enter
sbb
jl
fimull
add
nop
sbb
or
jecxz
mov
fwait
push
add
mov
shlb
data16
out
push
add
cmpsl
test
xor
mov
scas
push
add
fildl
add
jno
fbld
add
pop
add
add
dec
in
add
test
add
loopne
add
add
mov
add
jge
pop
aaa
and
pop
lock
add
in
jg
xchg
push
add
scas
sub
int3
fstpl
pop
add
sbb
dec
add
jae
or
fcoml
adc
add
cli
lahf
imull
xor
and
mov
push
add
test
mov
xor
cmp
add
sub
loopne
lcall
sbb
add
gs
add
jne
sarb
testl
jmp
xlat
icebp
xor
push
add
xlat
jbe
ljmp
jg
add
jg
sarl
mov
jo
xchg
or
mov
add
out
jae
add
push
mov
add
orl
addr16
cmpsl
movb
inc
test
jmp
add
dec
cmp
add
pusha
add
adc
pop
add
lods
xchg
lret
dec
add
add
pop
mov
add
add
iret
call
add
fwait
jge
jbe
outsl
fwait
popf
xor
add
add
bswap
aaa
lods
scas
dec
add
lods
jle
adc
push
sahf
cld
sbb
cmpsb
xor
ret
add
add
add
sub
add
or
leave
std
dec
add
ds
pop
add
jmp
add
mov
sub
rcrb
cli
shrb
xchg
dec
push
sub
jns
add
add
fcomps
ret
enter
jl
pop
mov
xor
popa
xchg
out
xor
subl
inc
or
add
fsubrp
push
add
fdivs
push
add
mov
int
xchg
test
push
add
jmp
mov
cmp
add
aaa
xchg
mov
dec
lea
fbstp
hlt
add
ret
sahf
sub
adc
cwtl
and
imull
add
das
jns
test
add
push
dec
add
add
pop
or
and
ja
imul
add
std
add
add
setne
and
add
mov
or
mov
mov
xor
out
mov
test
add
leave
loopne
pop
add
fidivs
icebp
push
aaa
pop
xchg
sarb
add
mov
dec
addr16
push
add
sub
out
filds
add
add
push
jae
add
xor
cwtl
mov
mov
sbb
push
add
daa
insb
add
add
and
aaa
push
add
add
ljmp
inc
jl
les
add
dec
push
rolb
mov
add
hlt
pop
mov
add
inc
sbb
insl
gs
push
add
mov
out
mov
cmp
add
jno
sbb
pop
rcll
aaa
cmp
movsb
or
cmp
je
jg
pusha
add
add
add
cmp
out
add
add
add
inc
xor
add
ja
jno
cmp
pop
pop
int3
not
lock
aaa
cmp
add
and
sbb
sahf
enter
loope
add
hlt
rorl
sub
enter
ss
add
jb
test
stos
fisubs
add
add
and
or
adc
push
add
stos
jg
arpl
bound
cmp
aaa
sbb
mov
add
lods
push
add
fwait
pop
xchg
sub
inc
jecxz
add
sbb
add
call
add
repnz
sbb
add
dec
add
mov
scas
std
fisubrs
stos
xor
xchg
jge
add
add
add
add
jb
or
add
xor
add
add
cmp
add
xor
rclb
xor
shrb
shll
adc
lods
icebp
push
add
mov
or
in
mov
add
push
add
mov
add
push
add
stos
add
aam
xlat
mov
add
add
stos
inc
add
jl
xor
mov
aaa
test
ja
sbb
xlat
xchg
aaa
repnz
pop
inc
ja
jp
sub
and
push
sbb
movsl
jnp
jle
inc
add
jbe
and
or
xchg
jmp
enter
mov
repnz
nop
dec
add
inc
add
dec
jecxz
add
add
jae
add
stos
dec
insb
add
add
scas
pop
mov
or
pop
jnp
dec
add
insb
add
push
add
fsubl
int
xchg
loope
add
sbbl
xchg
or
aam
jae
addb
sub
addr16
sub
add
clc
mov
pop
sbb
jge
add
add
cmp
xchg
push
add
add
adc
pusha
add
cmp
sbb
insb
add
cmpsl
subl
add
stc
push
add
inc
arpl
add
je
mov
add
xchg
cmp
in
add
add
repnz
add
jnp
cmp
int
cmovns
cwtl
xchg
push
xor
or
mov
in
dec
add
add
pushf
mov
add
mov
jae
mov
ret
dec
lret
divl
jo
inc
in
aad
dec
pusha
add
cmp
xchg
jle
fidivrs
call
bnd
add
sub
xchg
movsl
inc
add
out
add
xchg
insl
aas
lds
pop
add
inc
sub
mov
jbe
mull
add
je
add
inc
pop
cmovs
or
iret
ja
add
add
sbb
movsb
faddl
add
mov
mov
and
repnz
adc
add
sahf
add
and
jb
lret
fwait
jno
int
add
mov
ret
dec
xor
iret
cmpsl
testl
and
movsb
xor
inc
add
inc
add
mov
add
and
sub
cmpsb
fwait
xchg
popa
outsl
rcl
int
mov
ljmp
mov
cmpl
add
outsb
add
add
sub
mov
add
jno
leave
mov
std
sub
jl
cmc
pop
pop
add
push
adc
push
sbb
mov
jno
sbb
fldl
add
and
and
push
inc
add
adc
add
add
jl
test
adc
cmc
sub
in
orl
dec
xchg
pop
lcall
test
sub
inc
add
aaa
std
dec
into
cmp
lea
add
add
mov
call
sbb
clc
nop
ljmp
mov
mov
punpckhbw
or
pop
xchg
adc
add
add
adc
add
js
add
add
ret
sub
addl
in
mov
jne
add
add
je
jne
xacquire
andb
add
jno
adc
xchg
jae
sti
inc
add
dec
add
icebp
stc
or
lcall
xor
ja
mov
push
add
ds
ja
pushf
mov
lea
add
imul
add
push
add
add
lret
mov
lcall
add
lcall
add
adc
sbb
shlb
add
cmc
mov
mov
ret
fbld
rdmsr
add
mov
gs
cmc
out
mov
bound
and
mov
inc
inc
dec
add
add
ret
inc
add
ja
add
rcrb
add
test
add
sub
inc
add
mov
mov
push
add
inc
mov
sbb
xor
cmc
scas
mov
in
data16
ret
mov
bound
aaa
bound
sub
cmp
dec
add
into
push
add
add
add
xchg
jmp
call
in
add
add
add
add
pop
add
gs
add
xor
fucomi
inc
add
test
add
popf
test
dec
add
inc
add
push
add
stos
adc
add
add
orl
inc
add
sahf
xchg
and
jle
xchg
dec
add
mov
pop
add
test
add
fcom
pop
mov
sbb
push
add
add
mov
add
add
add
push
xor
sbb
or
test
mov
ljmp
out
sti
adc
jp
out
pop
add
add
popa
testb
loop
mov
das
scas
mov
add
gs
sbb
shl
pop
add
cmc
out
lods
in
push
mov
add
shrl
lret
cmc
in
or
mov
mov
jmp
add
loopne
add
push
add
js
push
add
cmp
xorl
mov
sbb
lods
pop
fsub
shlb
movsb
inc
add
add
imul
mov
xor
mov
add
and
ret
shll
jb
imul
ret
pushf
add
ja
xchg
jmp
add
pop
inc
add
add
idivb
jmp
add
pop
add
pop
add
data16
cmc
jmp
fldt
mov
add
pop
xchg
cltd
outsl
push
add
shr
in
add
aas
xrelease
inc
add
push
add
aas
xchg
and
push
mov
mov
add
sub
out
add
add
add
push
add
add
xchg
movsb
xchg
out
push
jmp
mov
sbb
or
lea
add
sti
mov
lret
adc
mov
ljmp
add
pop
push
sub
in
xor
dec
add
or
sub
sahf
jns
push
xor
jb
jae
add
add
ret
jae
push
lret
or
daa
mov
and
push
add
sub
dec
add
loopne
rclb
or
aaa
sbb
test
xor
add
inc
add
add
and
in
xchg
add
inc
add
rolb
ret
pop
ret
jecxz
sti
mov
push
add
add
add
jno
and
pop
add
mov
cld
leave
mov
movsb
jno
fsts
enter
jmp
add
xchg
arpl
ja
pop
mov
add
add
add
jge
xchg
add
add
lcall
push
add
xor
pushf
out
bnd
add
dec
add
jb
sub
inc
add
ret
push
jl
push
rorb
add
xor
sub
push
add
add
test
add
in
mov
adc
or
mov
mov
add
add
insb
add
in
loope
mov
add
jecxz
push
cwtl
fidivrl
add
aaa
ja
cli
add
pop
add
ja
mov
add
mov
xchg
int3
test
add
add
mov
inc
add
fsub
popa
bound
and
xchg
inc
dec
add
int
fsts
add
rolb
inc
test
aam
bound
je
ja
insl
push
jmp
loope
add
mov
mov
jne
mov
add
add
jmp
cli
popf
test
add
or
add
fwait
repnz
test
add
cmp
lods
jmp
gs
pop
test
add
lahf
shlb
mov
fcomps
xchg
add
sub
cmp
inc
add
push
jno
mov
mov
jmp
data16
add
mov
adc
sbb
rolb
jnp
leave
sbb
add
xorb
outsl
adc
push
add
fmul
xor
xchg
lods
sbbl
fdivp
out
mov
xor
push
add
in
xlat
mov
out
cmp
xlat
pop
add
insl
ret
cmpsl
mov
add
adc
rorb
fsubr
mov
mov
jl
mov
lret
add
add
add
fwait
xor
dec
int
pop
add
testb
mov
push
add
jns
add
out
arpl
sub
divb
add
add
jle
cmpsb
arpl
aaa
mov
adc
dec
cmc
jmp
pop
pop
shrb
dec
leave
mov
inc
xchg
and
sbb
mov
add
rorb
add
xor
stc
fisttpl
xchg
loop
sub
out
cmp
pushf
add
xlat
push
add
add
add
mov
sbb
addr16
push
ret
aad
add
mov
repnz
add
push
add
jo
add
lret
mov
inc
add
jae
add
aam
data16
in
and
jno
shl
stos
cwtl
stos
pop
out
push
add
sub
add
clc
push
add
jns
add
test
sub
rcrl
sub
xor
add
hlt
gs
aad
sbb
add
add
add
pop
jmp
xor
mov
add
add
sub
and
lea
pushf
pop
mov
jle
fmul
aaa
jae
add
add
push
ret
jg
xchg
mov
lods
sahf
out
pop
add
inc
cmp
cs
lds
jnp
push
div
jnp
call
add
and
xchg
push
add
push
add
dec
add
fcoml
add
sahf
add
mov
std
sbbb
add
dec
aas
add
mov
leave
fwait
pop
adc
or
add
add
add
out
pop
add
push
loope
mov
xor
cltd
add
pop
push
add
add
add
push
add
dec
add
jl
pop
pop
aam
sbb
jmp
add
loopne
push
cmpsl
loope
mov
arpl
xor
jl
adc
movsl
arpl
add
push
add
push
add
out
xor
sahf
mov
pushf
test
xor
dec
add
mov
xchg
jno
add
add
pusha
add
xchg
jp
jns
add
add
ljmp
cwtl
pushf
cld
lret
test
add
lcall
stc
sbb
push
add
js
inc
and
pop
cmpsb
sub
stos
push
add
add
mov
sahf
xor
and
add
add
add
and
cmp
push
add
dec
add
cmpsb
in
xchg
aas
aad
add
mov
dec
add
pop
hlt
out
mov
jecxz
int3
loope
add
add
mov
movsb
adc
xor
jg
add
jb
pop
cmp
add
push
add
aad
les
push
add
jmp
jl
push
add
lret
push
add
add
fcomp
sahf
xchg
scas
add
xor
pushf
inc
or
in
xor
aaa
cli
jne
sbb
xchg
mov
inc
stos
xor
in
loopne
xor
lods
mov
add
imul
je
mov
loop
jo
fisttpll
sbb
add
add
sti
or
pop
add
or
xlat
std
je
movsl
test
add
mov
aad
mov
imulb
fistl
cmp
xchg
lds
add
add
jno
pop
cmp
xchg
push
add
lar
fstpt
lret
add
data16
out
mov
mov
or
add
jb
popf
rcrb
ss
xchg
insb
add
add
adc
fisubs
aaa
xchg
cmpsl
scas
mov
push
add
add
dec
add
test
or
pop
xlat
mov
add
enter
cwtl
pop
ficoms
mov
push
mov
aas
loope
cmpl
add
pushf
rol
xchg
ljmp
add
jnp
xor
mov
mov
jb
and
insb
add
add
xchg
cltd
add
sub
sbb
icebp
movsl
rorb
inc
dec
add
add
add
or
cli
insl
movsb
xor
push
add
cmpsb
dec
add
pop
add
mov
jne
add
xor
lock
cmp
ljmp
adc
gs
add
adc
ret
add
cmp
call
faddl
call
add
stos
pop
add
mov
add
sbb
sub
sub
or
fimuls
mov
aaa
fildl
push
scas
adc
gs
add
add
negl
stos
pushf
mov
fnstsw
add
add
mov
add
mov
outsb
add
xchg
outsl
jns
fildl
dec
add
dec
rclb
test
add
xchg
shll
pushf
mov
add
sub
popa
test
leave
sub
je
test
jge
fwait
scas
push
add
xchg
jl
ja
add
push
add
jnp
add
push
add
push
add
dec
mov
movups
jb
fst
pop
ror
cwtl
out
add
pop
add
cmpsb
call
ret
imul
lahf
insl
push
add
pop
adc
sbb
xchg
push
add
sti
pop
add
adc
int
aaa
xor
loop
pop
scas
lret
xlat
jg
scas
in
aam
les
mov
dec
mov
sbb
mov
add
xlat
jbe
push
add
add
aam
sahf
test
add
js
pop
pop
loope
inc
or
mov
addb
jl
and
mov
arpl
mov
test
sbb
loop
pop
add
add
imul
andl
lcall
das
gs
push
adc
push
das
mov
sbb
jbe
aas
or
mov
add
in
sub
out
inc
incl
mov
pop
add
test
add
jb
ss
in
jg
add
add
mov
into
test
add
jo
mov
add
add
icebp
push
add
sti
cmp
cmp
mov
ficoml
rolb
rcrl
push
pop
fildl
pop
add
jbe
add
insl
mov
add
add
add
int
jp
shll
enter
dec
add
add
arpl
fldcw
int
xor
add
outsb
add
cmc
mov
add
loopne
out
fcompl
leave
add
add
pop
mov
adc
sub
sbb
mov
add
sbb
insl
mov
mov
mov
sti
xchg
sub
add
add
popf
or
imul
add
adc
jmp
adc
mov
add
comiss
shl
add
sbb
dec
add
dec
add
lods
cli
in
add
sub
pop
add
cmp
test
add
add
push
add
nop
shlb
sbb
dec
shlb
les
cmp
cmp
mov
mov
add
dec
inc
push
add
sahf
dec
add
add
cmp
and
movsb
dec
add
sub
lahf
sub
add
scas
cmp
add
in
fwait
ret
add
testl
ror
mov
mov
mov
push
add
dec
popf
js
sbb
and
add
add
mov
jns
sbb
jo
xor
mov
dec
add
jns
add
add
mov
mov
into
jmp
push
mov
test
inc
xchg
rclb
jno
add
dec
adc
add
mov
xor
iret
pop
pop
push
sub
ffreep
je
inc
add
adc
mov
cmp
pop
add
clc
mov
add
xchg
pusha
add
aam
add
cmpsl
cmp
jbe
repnz
jne
int
dec
add
pop
scas
mov
add
mov
sub
int
add
aaa
and
imul
xchg
hlt
popa
push
add
jp
outsl
fwait
lea
mov
add
in
sub
daa
inc
add
mov
add
or
ficoml
add
add
inc
add
add
push
int
push
mov
rorb
inc
mov
xchg
rol
add
and
data16
mov
mov
and
jnp
add
test
ret
mov
shr
add
add
mov
add
push
add
pushf
je
mov
push
add
xchg
adc
std
in
xor
xor
addr16
mov
in
mov
mov
xchg
push
test
add
sbb
add
mov
mov
rol
push
test
mov
jo
ja
cmp
add
xor
addr16
pop
loop
or
add
jg
in
jl
das
push
add
pop
add
push
add
cli
xor
xchg
out
test
loop
xor
in
xchg
scas
cld
pushf
sti
jns
add
add
pop
add
test
test
pushf
cmp
push
add
add
scas
push
inc
add
add
cs
xor
adc
jns
lcall
out
cmpsl
cld
jge
jecxz
pusha
add
add
add
add
aam
add
adcb
cld
add
adc
sub
mov
popf
add
push
popf
inc
add
out
sub
add
push
mov
xchg
add
add
push
add
sub
mulb
add
jns
mov
in
clc
out
insb
add
gs
jae
cwtl
add
out
jg
sarb
add
push
fwait
mov
pop
stc
mov
add
jns
add
xor
pushf
icebp
push
add
movb
pusha
add
jno
add
sbb
jecxz
add
aad
sbb
mov
ret
js
inc
add
add
jl
xor
das
lods
aad
cli
shlb
add
out
in
add
sbbb
pop
add
add
mov
add
insb
add
mov
xchg
mov
add
arpl
adc
or
out
out
lock
nop
push
add
roll
mov
add
loope
pop
mov
xchg
icebp
xor
cld
sub
enter
jecxz
pop
aaa
add
jmp
movsb
jle
nop
mov
add
mov
mov
jb
dec
add
add
in
inc
add
add
mov
enter
xor
inc
add
push
add
add
imul
mov
pop
add
add
fldenv
xor
and
jmp
sub
fwait
xchg
add
add
add
clc
mov
mov
mov
add
push
jne
lahf
mov
cmp
jl
sub
dec
mov
sbb
cmp
xchg
dec
and
add
cs
pop
stos
mov
mov
jle
add
mov
adc
stos
jnp
add
roll
mov
ficoms
or
js
jge
out
mov
add
fsubr
jmp
push
add
pop
add
xchg
jg
sahf
add
in
inc
ret
adc
insb
add
and
push
add
add
out
sbb
pop
pop
or
mov
rorl
add
and
inc
pop
add
add
lret
cmp
add
add
add
inc
add
insl
jns
xchg
in
jbe
mov
add
add
adc
shl
and
mov
outsl
dec
dec
push
add
mov
xlat
push
add
fcomps
test
stos
add
add
mov
repnz
add
or
test
insb
add
add
lods
cmp
xor
daa
add
ret
add
jecxz
test
rclb
adc
cltd
mov
push
add
and
xorb
add
push
lods
jae
push
add
mov
mov
add
add
test
add
shr
cmp
test
add
mov
push
add
fnstsw
int3
mov
add
pop
in
dec
add
inc
ret
add
or
add
and
jp
je
xor
push
xchg
inc
inc
scas
enter
cs
sub
add
in
cmp
push
add
add
mov
fstpt
aaa
stos
cli
scas
enter
add
pop
add
fsubrl
add
mov
dec
mov
ja
add
ljmp
jbe
xor
and
mov
in
add
push
add
clc
sahf
hlt
loope
paddq
inc
xor
std
jl
mov
and
loop
insb
add
test
add
mov
cmc
pop
call
inc
add
ss
mov
push
inc
add
add
push
dec
add
cwtl
leave
and
scas
in
pushf
push
add
add
call
popa
in
fnstenv
xchg
xor
aas
aad
add
frstor
inc
add
fimull
rcr
aas
addl
sub
fsubs
add
add
mov
push
fcmovnb
jle
xor
lock
or
ja
pop
mov
fidivs
cmc
pop
jmp
lcall
hlt
jnp
ja
cwtl
stos
loop
add
jno
mov
pop
lahf
or
add
mov
mov
jle
cmc
jmp
sub
sub
sti
fdivr
fnsave
add
add
add
add
inc
add
mov
ja
movsl
clc
inc
in
mov
inc
int
pushf
dec
mov
add
subl
inc
add
loopne
call
add
mov
mov
push
clc
mov
adc
aam
jg
cmpsl
add
cmc
ljmp
add
inc
add
mov
add
xchg
push
adc
enter
add
sub
int3
inc
fistpll
out
int3
test
enter
add
filds
fsubr
xor
bound
rorb
data16
add
cmp
mov
cwtl
cltd
stos
adc
hlt
leave
sbb
insl
adc
adc
das
dec
jle
fnsetpm(287
and
out
out
cmp
xor
jo
push
add
sti
in
pusha
add
add
sub
insb
add
fnsave
insl
inc
add
add
pusha
add
add
pop
add
daa
pusha
add
jecxz
push
add
test
sbb
push
mov
hlt
dec
add
adc
pusha
add
add
add
add
add
lods
mov
xor
xor
xchg
add
xchg
sahf
inc
mov
add
test
cmp
ja
dec
push
add
add
mov
add
lods
insb
add
cmp
add
pusha
add
add
test
add
add
and
inc
jbe
dec
add
frstor
mov
dec
sbb
add
imul
bound
sub
and
out
test
lea
xchg
shll
es
jno
or
popf
dec
add
pop
push
add
in
adc
je
lahf
fisubs
jb
xor
mov
add
mov
add
movsb
mov
repz
add
add
sub
out
sub
ljmp
inc
add
jbe
popf
pop
add
sbb
lods
or
add
mov
mov
lods
fidivl
or
test
lock
mov
jns
add
sti
xchg
inc
push
sbb
je
lock
ljmp
jnp
pusha
add
pushf
clc
out
cmpsb
cli
add
xor
pop
add
outsb
add
add
xchg
mov
nop
iret
mov
add
enter
add
in
push
add
add
cmpsb
mov
dec
jle
iret
repnz
dec
add
xchg
pushf
adc
negb
jge
bound
add
jo
xor
xchg
sub
incl
out
dec
add
push
adc
movsb
mov
pop
add
xchg
lahf
mov
xchg
add
jecxz
xlat
lcall
jbe
arpl
fs
mov
and
cli
adc
sbb
aas
push
add
dec
add
fucom
rcrb
cltd
sub
push
add
scas
into
or
int3
jb
outsb
add
mov
push
add
jp
addr16
and
loopne
fiaddl
data16
gs
inc
pop
aaa
push
jle
mov
add
xchg
sub
add
mov
jae
adc
sbb
into
fsubs
or
adc
mov
cmp
fldenv
add
lret
js
into
pop
add
mov
add
test
adc
sar
lods
dec
lret
add
lcall
add
sbbl
pop
adc
lret
dec
add
in
mov
adc
inc
add
add
add
enter
jmp
jl
inc
add
sbbb
jmp
daa
inc
pop
add
rclb
mov
leave
jl
cwtl
push
add
scas
aad
pop
add
sbbl
add
sub
std
push
add
aam
dec
add
add
icebp
dec
add
add
leave
add
mov
cmp
jo
in
hlt
sarl
aaa
inc
add
movsl
and
pop
add
push
add
pop
aam
or
ljmp
mov
add
out
test
lods
sbbl
test
bound
mov
jle
cmp
cld
jl
in
add
push
add
add
add
pop
add
xor
sub
in
mov
pop
sub
add
add
pushf
mov
loope
add
dec
add
or
jle
addr16
arpl
inc
add
cmp
je
sbb
mov
add
jp
cmp
xchg
inc
add
ret
insl
mov
scas
xor
dec
test
jmp
add
outsb
add
sub
sub
inc
add
or
add
push
dec
inc
add
inc
add
dec
or
xchg
add
cmp
pop
pop
add
js
xor
xorl
test
test
jns
or
sar
jne
add
mov
xor
cltd
jb
leave
mov
add
mov
add
adcl
add
fcmovbe
ja
xchg
adc
xor
push
mov
sahf
orb
add
ja
cmpsl
loope
cmpsb
xchg
lods
mov
mov
pushf
leave
fdivp
or
out
pop
add
movl
adc
rclb
xchg
add
add
aad
mov
jle
pushf
data16
sti
cmp
dec
add
scas
push
push
cmp
add
jae
into
add
lret
add
or
push
add
add
gs
add
push
add
fnstenv
in
mov
add
loopne
sub
xor
adc
sbb
dec
add
jge
ret
jb
sbbb
adc
xor
xor
pop
add
je
pop
cmp
enter
jbe
filds
sti
push
add
mov
sbb
adcb
add
in
mov
test
add
add
mov
add
add
dec
mov
ret
sarb
jns
imul
add
vmptrld
inc
mov
sbb
fcomp
cmp
add
out
jns
js
sbb
shlb
out
xchg
iret
add
pushf
insb
add
sub
mov
jmp
add
cmc
sub
je
movl
stos
cld
enter
add
scas
lods
xchg
mov
add
mov
mov
add
stos
shlb
fwait
sub
xchg
fistpll
add
inc
out
add
add
mov
std
loop
mov
mov
push
jo
fsubl
xchg
enter
lods
cwtl
adc
xlat
in
xor
sbb
adc
add
pop
add
pop
add
fwait
in
dec
add
andb
cmp
pop
cmp
xor
jmp
jle
lahf
xchg
xchg
push
jae
rcll
cwtl
xor
pop
add
mov
xchg
adc
pop
add
mov
idivb
add
out
add
pop
insl
adc
mov
add
xor
sub
xor
lods
mov
add
add
add
repz
stos
sub
mov
test
add
pop
insl
ss
mov
inc
add
adc
das
or
movb
hlt
lret
mov
clc
lods
lret
add
mov
add
cmp
adc
or
mov
movsl
cmp
add
add
nop
filds
pop
add
sbbb
push
lds
and
jae
add
pop
mov
bnd
dec
add
and
or
push
add
xchg
outsl
sbb
mov
or
sbb
pop
add
inc
out
add
add
add
pop
or
cwtl
mov
and
mov
lahf
cmp
lods
shrl
add
mov
add
mov
add
add
lret
call
jmp
mov
add
add
rolb
add
add
int3
xchg
test
lock
add
add
aad
scas
add
add
add
addl
ret
bound
test
outsl
add
add
movsl
lcall
mov
xchg
mov
mov
scas
pop
jo
push
add
sbb
repnz
dec
add
ljmp
add
pop
add
add
inc
add
or
inc
add
jae
in
adc
test
inc
add
inc
test
mov
add
add
add
add
fadd
xchg
mov
add
repz
add
in
mov
jbe
das
push
add
push
shrb
add
lock
imul
enter
add
enter
add
stos
xchg
into
push
enter
outsb
add
add
add
les
in
add
add
pop
add
cmp
test
and
cmp
cmp
cld
outsl
push
cmp
mov
test
xor
add
add
idivl
in
jp
shll
movsb
mov
sarl
jge
insb
add
pop
jbe
scas
mov
setge
add
popa
ret
lret
mov
adc
pushf
scas
stos
mov
ret
fstl
rcrb
xchg
mov
pop
cmp
test
push
add
or
test
icebp
aas
and
mov
sbb
sub
mov
lods
cld
clc
or
inc
dec
add
mov
add
add
add
hlt
add
add
cmc
cmpsb
inc
mov
pop
dec
add
cmp
inc
fwait
imul
sbb
jne
repz
push
add
add
add
sub
add
ja
sbbb
mov
add
or
add
mov
dec
add
fnstenv
and
out
mov
lahf
fucomip
js
adc
inc
add
push
add
add
adc
cmp
adc
imul
inc
push
add
andl
mov
add
add
add
lock
scas
mov
pop
add
inc
add
push
std
mov
mov
fsubrs
push
add
ds
fbstp
add
dec
inc
in
scas
mov
les
dec
add
jo
or
adc
fcomip
or
add
add
nop
xor
inc
daa
mov
push
mov
push
add
or
sti
into
sbb
pop
sub
add
or
mov
add
inc
outsl
daa
add
push
xchg
in
add
add
lahf
add
bound
cmc
mov
add
mov
jb
mov
add
dec
rcrb
add
lret
mov
ret
sub
sub
movsb
or
pushf
jne
stos
ljmp
arpl
mov
popf
or
push
add
jns
add
sub
add
mov
add
add
fcmovbe
inc
add
add
jno
popa
in
jae
xor
mov
rcrl
out
popa
in
cmp
js
add
add
jno
sbb
lahf
pop
pop
add
bound
push
xor
sub
cmc
movsl
adc
rclb
add
fmuls
add
lcall
movsb
add
cmp
test
lock
add
icebp
pop
add
and
add
or
xor
adc
pop
add
add
or
mov
setp
adc
add
ja
lcall
insb
add
cwtl
jb
or
fwait
imul
dec
or
loope
stos
jbe
mov
ret
leave
clc
inc
sub
movsl
and
insb
add
and
add
rolb
sbb
mov
mov
add
xor
jg
cmp
sbb
add
add
in
fdivr
gs
test
jnp
add
out
add
adc
int3
add
push
add
add
add
inc
add
push
movsb
xchg
xorl
add
out
dec
imul
sub
mov
add
add
inc
add
and
add
lods
add
cmp
lods
les
mov
push
cmpsb
js
push
add
lret
fiaddl
das
ret
sbb
fsubrl
insl
jo
int3
cmp
bound
repz
cltd
sbb
in
xchg
sub
test
add
aaa
js
dec
add
add
add
fcomps
jbe
mov
jl
mov
xchg
xchg
xchg
rorl
fistpl
inc
add
add
add
add
movsl
xchg
pop
cmp
jmp
cmpsl
nop
aam
mov
aam
add
add
push
ss
add
add
in
int
add
push
add
cmp
and
inc
inc
add
xor
add
push
add
add
aam
rol
mov
add
pop
addr16
sub
pushf
enter
add
loope
inc
add
lret
or
add
add
add
pop
xlat
lret
xchg
inc
add
xor
test
add
out
or
jecxz
maskmovq
testl
add
add
in
adc
pop
add
inc
and
fnstenv
test
xchg
mov
cmpsb
add
nop
hlt
in
inc
mov
cmpsl
gs
jno
test
pop
int
imul
sub
cmp
add
aad
rorb
add
fimuls
add
inc
std
aam
cli
xchg
dec
cmp
cmp
mov
add
mov
add
subl
add
cmpsl
mov
mov
setp
mov
pop
sub
into
test
sbb
adcl
lods
jp
aad
ffreep
pop
add
add
push
add
add
jne
test
popf
pop
lea
add
cmpl
test
and
popa
mov
xor
jmp
insl
push
add
and
xor
adc
sbb
add
adc
fistps
add
add
inc
add
xchg
sti
add
pop
adc
add
mov
lods
jbe
mov
add
lahf
add
dec
add
aaa
mov
sub
stos
divb
in
add
pop
add
xchg
jbe
xor
mov
add
fcmovu
xchg
add
filds
mov
add
ja
in
mov
mov
mov
add
or
add
jp
outsl
insb
add
mov
add
add
xchg
dec
add
stc
mov
mov
imul
pminub
mov
jecxz
xor
mov
inc
add
add
sub
in
add
jns
bound
pop
hlt
je
push
popa
outsb
add
xor
scas
dec
add
add
movsb
lret
fwait
mov
fdivl
add
shrb
in
mov
mov
xchg
mov
add
jecxz
push
push
add
add
push
add
add
shlb
test
add
add
dec
jae
xor
test
fnstsw
daa
cltd
ret
cwtl
fistpll
pop
xor
aas
mov
out
add
xor
loopne
pop
stos
push
data16
jg
add
imul
add
cmpsl
cmp
sar
xor
sub
mov
shll
rcr
int3
add
out
cwtl
pushf
lahf
aaa
out
add
fstps
mov
movsb
test
repz
jbe
xlat
insl
sub
sti
or
sbb
leave
test
xchg
mov
pop
add
add
add
pop
add
add
or
js
jg
push
push
pop
add
adc
xor
pop
mov
lods
push
popa
and
add
sub
xchg
mov
pop
add
push
add
int
add
inc
add
pop
sub
in
lods
jo
adc
mov
xchg
mov
add
push
push
cmpsb
leave
sti
fisttps
add
inc
mov
fiaddl
add
sub
mov
imul
fidivrs
sub
push
add
inc
add
add
pop
jmp
cli
stos
imul
cld
bound
movsl
in
lds
les
add
insl
movsb
jg
fldenv
add
rorb
add
cmc
stos
int3
lret
mov
xor
ror
push
jno
jg
add
scas
pop
test
loopne
xor
in
and
jns
and
add
std
xchg
scas
inc
lahf
jp
mov
pop
iret
outsb
add
push
jle
jmp
cmpsb
sahf
mov
mov
cmp
lock
cmp
add
loopne
adc
push
dec
addl
add
sbb
push
add
jo
cmc
outsl
or
mov
add
pushf
rorl
fwait
xor
xchg
rcll
add
out
dec
add
jecxz
add
xor
push
bound
jp
lock
aaa
stc
in
dec
add
movsl
ret
into
fdivrl
cmp
xchg
inc
add
cs
insb
add
mov
cmovns
push
add
push
add
add
std
xor
gs
inc
add
test
mov
add
mov
sbb
out
leave
dec
xor
aas
push
sti
mov
xchg
xor
add
daa
ret
or
sbb
fdivrs
add
jnp
add
xor
push
add
add
lret
pop
dec
add
cmp
cmpb
xor
mov
sub
pop
cmp
clc
jge
add
jecxz
sub
inc
inc
add
push
add
fsubrl
insl
call
add
sub
add
sarl
and
idivb
add
add
or
add
mov
add
mov
add
lret
movsl
jmp
or
test
repz
sbb
sub
xor
add
sahf
adc
add
ret
xchg
add
sbb
test
clc
jle
sub
push
add
mov
sbb
out
loop
test
add
xchg
es
xchg
inc
icebp
and
lret
mov
adc
int
sarl
add
adc
lods
enter
jae
add
xor
jns
sbb
movsb
rcrb
add
push
add
push
add
add
leave
mov
in
adcl
push
add
add
add
js
adc
mov
js
aad
clc
cli
mov
jp
dec
add
or
mov
add
imul
les
pusha
add
insb
add
mov
add
add
add
cmp
lcall
popf
sbb
fdivrl
add
popa
jo
cmp
dec
add
push
push
add
mov
sti
push
add
add
mov
add
add
imul
out
test
out
inc
add
test
push
cmp
in
in
add
xlat
bts
rcrl
iret
lods
mov
jb
insb
add
imul
popa
or
and
push
add
add
adc
lcall
and
mov
fsts
cmp
add
add
in
mov
add
scas
pop
enter
jg
ljmp
jle
mov
mov
xchg
push
mov
mov
imul
inc
add
jbe
add
mov
test
pop
daa
out
xor
pop
pop
pop
and
lds
cs
and
pop
add
fmuls
mov
rorl
cli
mov
mov
add
pop
pop
icebp
lods
lcall
lret
enter
stos
stos
pusha
add
and
sti
fwait
mov
add
add
add
dec
add
pop
ficomps
xor
inc
jnp
add
add
hlt
imul
jne
push
add
mov
add
dec
pop
add
add
pop
add
sub
shll
das
pop
add
test
scas
inc
loop
mov
add
pop
lcall
xchg
mov
cmp
cwtl
inc
add
fst
and
lea
xchg
imul
add
add
pushf
clc
add
sti
das
xchg
movsb
jle
sahf
dec
add
daa
aad
sub
mov
add
cmp
loope
add
je
push
add
les
add
or
cmp
dec
add
xor
rcrb
push
pop
add
push
add
jg
or
mov
add
mov
xchg
mov
sbb
mov
je
sbb
fcoms
add
push
mov
sub
lods
adcl
pop
add
and
add
pop
xor
mov
dec
out
push
add
jl
jp
add
add
aam
push
add
fisubl
loop
ljmp
fmull
add
fidivs
add
shl
mov
add
add
mov
add
push
add
lea
insl
jmp
pop
lahf
mov
and
std
push
add
test
add
xchg
icebp
dec
add
daa
mov
lahf
and
push
add
add
add
out
mulb
test
mov
sbb
insb
add
push
add
stos
push
pop
add
stos
icebp
adc
add
fwait
into
iret
sbbl
push
pop
leave
push
add
xor
add
add
sbb
add
xor
or
aaa
pop
dec
xchg
int3
adc
and
clc
and
jb
add
add
roll
jb
leave
or
add
add
add
pop
jmp
xchg
test
mov
ljmp
add
add
add
lret
mov
add
sarb
add
pop
sbbb
dec
dec
add
add
cs
fdiv
imul
add
rorl
mov
jmp
sahf
gs
and
movsl
dec
add
jo
dec
add
imul
or
push
add
in
icebp
add
adc
pop
add
lret
add
fmulp
sbb
mov
cmp
lcall
adc
and
dec
dec
loopne
pop
bound
mov
enter
cli
pop
add
push
add
out
addr16
ret
leave
loop
inc
and
add
cld
or
add
popf
jb
sub
dec
inc
shr
call
pop
test
add
mov
push
and
add
test
xor
adcb
xorb
std
xchg
dec
jno
add
lods
push
pop
cvttps2pi
jae
jae
lods
outsb
add
add
add
mov
pusha
add
mov
add
idivb
bound
push
add
pop
sub
cltd
dec
add
add
mov
ja
jge
add
nop
test
cmpsb
add
mov
or
out
loope
jecxz
mov
lods
or
loop
push
add
add
mov
mov
add
fwait
inc
push
cmp
sub
data16
bound
jg
pop
add
add
jl
sbb
jl
int
dec
add
ficomps
testl
cmp
cmpsb
fistl
shrb
add
inc
mov
sbb
sub
stc
lret
push
add
xor
adc
xchg
insb
add
push
add
add
cld
adc
ljmp
ss
out
or
in
mov
nop
jae
lret
je
mov
inc
add
outsl
push
add
mov
lods
xchg
aaa
jbe
push
mov
dec
add
cmp
les
add
je
mov
add
push
rcrl
adc
ret
dec
adc
xchg
xor
mov
jo
bound
sbb
sbb
pop
roll
mov
adc
std
jne
push
inc
push
add
adc
adc
nop
movl
add
out
jno
add
xchg
stos
push
lock
movsl
mov
and
add
aad
jl
mov
push
mulb
add
aas
add
cs
add
push
add
add
enter
loope
movsl
aam
jg
cmp
testb
inc
jle
sbb
push
add
add
inc
xorl
cld
xor
mov
or
add
dec
mov
daa
in
jnp
insb
add
mov
add
pop
add
std
into
std
rcrb
add
packuswb
add
cld
add
ja
fldt
fisubrl
xor
lret
pop
cs
ret
pop
pop
add
int3
les
inc
out
out
push
mov
add
add
jne
cmp
int3
outsl
cmpsb
fldl
add
std
arpl
mov
mov
sub
loop
add
jmp
add
add
add
inc
add
aaa
pop
add
jecxz
xor
loope
add
add
dec
add
add
jne
add
pop
bound
sbb
mov
add
jl
orl
adc
mov
add
pop
sbb
add
scas
add
push
add
add
enter
adc
mov
mov
cmpsb
xchg
shl
call
and
or
and
std
insb
add
cmp
add
fucomi
hlt
sub
push
add
add
mov
add
push
add
sub
xchg
nop
lods
mov
mov
clc
loope
xchg
inc
dec
mov
arpl
push
inc
icebp
inc
add
pop
add
dec
inc
add
sub
push
add
test
out
add
and
inc
cmp
cmp
cmp
mov
jge
add
push
add
xor
and
sbb
stos
add
add
add
xor
in
cmpsb
pop
sub
push
add
jge
add
lock
je
cmp
loope
add
dec
add
jle
and
jb
pop
mov
imul
add
cmp
add
mov
loope
xor
cmp
repz
ret
fldl
cmp
add
gs
mov
xchg
testl
add
mov
add
lcall
mov
jg
hlt
outsl
or
leave
rorl
scas
inc
add
xor
lods
jae
cmpsl
xor
pop
add
add
add
cmpsb
jb
fsubs
or
dec
mov
add
add
dec
cmp
insl
loop
pop
add
scas
stos
mov
arpl
mov
cmp
xorb
jnp
add
push
add
add
sahf
mov
mov
sub
add
xchg
lret
add
cmp
call
into
jmp
stos
cmp
dec
add
lahf
cmp
js
jno
in
xchg
pop
sti
aas
xlat
repnz
cltd
dec
add
add
or
into
inc
add
icebp
xlat
sbb
loope
add
sahf
fiaddl
test
and
jmp
cld
lock
add
jae
sar
arpl
inc
add
int3
cmc
mov
add
lret
jo
stos
xor
inc
add
add
add
dec
add
add
jnp
add
add
lea
stc
jle
or
pop
mov
add
sub
or
add
push
add
add
add
mov
sub
les
scas
mov
add
movsl
sahf
jbe
mov
push
sub
icebp
mov
adc
or
mov
xor
popf
in
jg
add
add
stc
and
pop
add
cmpsl
push
adc
scas
lds
inc
jle
xchg
jne
add
lock
add
js
fwait
adc
int3
setp
mov
movsb
test
adc
mov
sbb
test
not
les
pushf
mov
cld
lret
sub
imul
mov
add
lea
push
add
xchg
add
push
add
lods
jns
add
add
lahf
xor
mov
jp
call
add
add
jnp
test
add
add
add
xor
push
add
incl
cmp
adc
mov
add
test
adc
pusha
add
push
test
and
test
add
pop
add
add
adc
pop
add
or
mov
add
ret
adc
daa
out
xor
sub
stos
lock
cltd
sub
out
mov
mov
frstor
out
outsb
add
xor
cmp
and
push
add
shll
cli
mov
addr16
lock
inc
aaa
cmp
add
sub
mov
loope
push
add
add
adc
push
add
and
push
add
shll
add
test
and
adc
mov
jmp
aas
and
subb
jnp
add
bound
fisubrl
and
aam
jns
dec
inc
lock
add
fs
in
jnp
mov
add
add
push
add
add
add
leave
divb
add
fisttpll
int3
mov
add
add
mov
lahf
outsb
add
add
dec
sbb
cmc
jmp
loop
daa
sahf
fdivrl
dec
lret
and
rolb
pop
add
cmpsb
adc
arpl
mov
add
add
push
jl
cmp
add
add
add
add
adc
and
je
dec
pop
jl
shlb
int3
js
out
add
rolb
cmc
daa
dec
scas
into
adc
push
hlt
in
cli
ret
sbb
sbb
xor
add
add
mov
cmp
ret
int3
add
jmp
add
add
add
pop
repz
insb
add
rcrl
cmp
xchg
lcall
add
adc
aaa
mov
add
mov
pop
add
xchg
cmp
dec
add
lods
fidivrl
add
out
out
xchg
mov
cmp
add
push
add
aad
mov
add
into
lcall
or
push
add
icebp
inc
add
cmp
pop
lods
sahf
xor
scas
mov
xchg
jno
test
sbb
test
add
dec
add
mov
add
pop
add
sub
mov
add
out
pop
jp
bound
pop
add
psrlq
add
movsl
pop
push
mov
incb
repz
add
sub
pop
cmp
push
add
mov
mov
add
in
mov
sarb
gs
add
cld
xlat
lret
mov
fists
add
and
pop
inc
pop
add
dec
add
add
push
add
adc
notb
add
xlat
in
stos
jb
scas
ss
les
in
xchg
mov
add
insl
push
add
xor
int
fwait
dec
out
xchg
add
and
sti
pop
add
add
add
cmc
mov
push
add
adc
pushf
cmc
pop
adc
jl
and
fcmovb
or
mov
add
sbb
jmp
mov
xor
pop
adc
jge
jg
or
xor
icebp
mulb
jge
add
add
pop
add
add
xchg
add
add
sahf
jo
and
sbb
mov
jp
cmpl
add
inc
add
ja
add
add
cwtl
inc
mov
fwait
out
cmp
imul
cmpsl
test
add
cmp
xchg
fimuls
filds
jae
loope
add
add
mov
pop
add
test
add
icebp
dec
arpl
adc
icebp
and
in
addr16
insb
add
popf
adc
cmpsb
push
inc
push
add
filds
arpl
das
std
iret
out
outsl
sbb
arpl
daa
cli
sub
or
test
mov
inc
hlt
loopne
mov
inc
cltd
dec
add
jecxz
dec
jnp
push
in
stc
inc
add
sbb
adc
add
movsb
pop
cwtl
and
mov
cmp
add
mov
push
add
add
and
xchg
adc
sbb
sub
push
add
cmp
jo
xor
inc
dec
add
pop
cmpsb
add
lret
clc
pusha
add
or
push
add
lea
cmp
xor
add
add
arpl
sub
pop
or
and
pop
rol
xchg
test
rorb
pop
dec
mov
shll
ja
fcompl
add
push
add
mov
test
push
add
jns
imul
add
ja
add
jmp
inc
add
add
and
xchg
and
push
or
mov
movsl
cmp
lods
repz
popa
push
xor
imul
add
xabort
fldenv
add
lods
xchg
sbb
mov
sub
fwait
daa
and
pop
add
jmp
inc
xchg
lock
add
nop
daa
sahf
dec
add
add
mov
mov
push
add
push
dec
push
add
inc
push
mov
mov
sub
xor
xchg
xchg
add
add
xchg
iret
mov
sbb
add
mov
jb
out
or
scas
mov
push
inc
in
mov
lahf
push
stos
jle
stos
ja
add
and
lcall
addr16
fcom
add
inc
add
nop
notb
mov
add
cmp
dec
add
jg
dec
adc
lcall
add
dec
cmp
cmp
ret
add
xor
mov
mov
int3
setg
pusha
add
add
jp
in
or
loop
ljmp
das
movsl
insl
outsl
push
add
pop
fwait
loope
add
fldl
xchg
mov
scas
push
add
add
mov
jecxz
add
add
mov
push
add
fistps
pushf
and
and
add
add
push
add
xchg
pop
out
add
mov
and
add
iret
gs
mov
js
loope
test
adc
adc
jmp
les
jecxz
pop
mov
sbb
imul
add
lahf
cmp
aam
jno
rclb
add
sbb
cmc
into
subb
pop
sbb
push
add
inc
add
bswap
jae
xor
xor
push
mov
adc
dec
add
inc
add
add
cmp
cmpb
ret
add
fwait
sbbb
xlat
mov
add
lods
popf
pop
add
add
lea
int3
or
cmp
iret
hlt
loop
add
mov
add
mov
xor
push
add
iret
sub
test
add
repz
popa
pop
rolb
add
inc
in
rorl
add
pop
cltd
out
in
dec
add
loopne
mov
testb
add
or
call
add
cld
lock
add
add
mov
or
pop
in
fstl
add
mov
pushf
xchg
movsb
loop
add
fdivs
fbstp
sbb
jmp
in
dec
mov
fmuls
cmp
sub
or
lcall
fisubrl
xchg
lcall
add
cmp
daa
orl
daa
mov
dec
add
add
pop
cwtl
data16
dec
nop
imul
mov
mov
cmp
add
dec
pop
and
mov
or
loopne
add
add
in
jae
fcmovb
pop
add
cltd
lcall
jmp
add
sub
add
add
push
xchg
add
and
mov
in
add
cmp
dec
dec
fsub
mov
inc
add
jbe
lock
jnp
adc
mov
test
sub
add
xlat
push
add
sbb
lods
nop
sub
inc
frstor
test
movsl
lcall
jecxz
add
add
es
in
add
mov
daa
xchg
mov
pop
add
popf
cli
cmp
lock
dec
rorb
add
out
sbb
add
rep
dec
add
test
repz
std
add
add
or
add
mov
shrb
stos
sub
cmp
mov
pop
ja
sarl
out
add
aam
add
test
lret
das
stos
mov
mov
popf
imul
push
add
add
lods
faddl
dec
add
add
mov
push
repnz
mov
add
add
add
xchg
sbb
cmpsb
jg
into
loope
seta
aas
adc
add
mov
iret
rorl
xchg
push
pop
sahf
fnsave
jle
and
aad
movsb
xor
lock
xchg
push
fistps
dec
push
or
rorb
mov
cmp
pop
add
mov
add
cli
add
fcmove
adc
sbb
mov
mov
fnsave
add
test
nop
or
mov
fwait
pop
idivl
pop
add
repz
inc
aam
xor
enter
pop
add
jae
and
fsubrp
mov
push
add
loop
add
movsl
sahf
add
mov
bound
in
push
mov
inc
adc
add
add
movsl
ret
jbe
sub
inc
add
inc
add
test
add
mov
repnz
mov
int
add
add
scas
test
add
mov
int3
mov
mov
xchg
inc
add
add
adc
stc
data16
lret
inc
adc
fwait
mov
add
testb
add
jge
xor
xchg
inc
push
xchg
loop
add
into
iret
pusha
add
jl
int
add
jb
cmp
mov
aas
hlt
jbe
pop
inc
add
lea
add
outsb
add
repnz
add
sahf
jmp
aas
cmp
cmp
dec
add
insb
add
pop
jns
outsl
std
xchg
push
add
clc
sub
cmp
jge
int
add
xlat
add
add
sbbb
add
or
loopne
iret
xchg
jne
jecxz
inc
add
imul
mov
or
cmpsl
or
mov
in
xlat
divl
add
inc
pushf
xchg
add
adc
jle
hlt
xor
fisubrl
aaa
cmp
xor
add
mov
add
or
test
fucomp
adc
or
dec
scas
lret
adc
div
fidivrl
add
lock
outsb
add
jge
lock
mov
and
icebp
and
xchg
and
adc
orl
add
jnp
xor
xchg
add
sub
add
add
add
jp
sbb
jno
int3
jle
xor
sbb
add
push
jmp
xchg
or
js
nop
add
add
lods
testl
lea
jb
shlb
push
pop
lret
xchg
sbbb
fcom
ret
inc
xor
xchg
add
add
add
add
add
add
sti
dec
add
dec
add
out
dec
mov
aam
cltd
clc
das
and
inc
pop
add
enter
add
shrl
or
or
xor
add
mov
mov
xchg
mov
or
gs
cmp
in
mov
scas
push
add
pop
incb
inc
sbb
pop
push
add
enter
movsb
arpl
ljmp
cwtl
test
mov
in
jne
pop
pop
add
sarl
repz
xor
or
jecxz
xchg
jp
and
add
test
add
pushf
aaa
xor
mov
dec
jmp
das
cmpsl
cmpsb
push
mov
mov
xchg
lods
mov
lahf
push
add
mov
push
add
pop
sub
add
daa
xchg
imulb
jmp
add
add
and
fwait
out
mov
gs
add
add
mov
test
lods
push
cmp
add
hlt
inc
or
and
add
vpmacsdd
cmpsb
inc
lods
and
push
pushf
into
jmp
jmp
fcomps
data16
jp
into
out
repnz
add
xchg
dec
add
push
add
cmpsb
add
xor
add
iret
xchg
fucomp
cld
data16
pop
sub
and
ret
xchg
add
ret
pop
add
add
add
inc
hlt
add
add
mov
outsb
add
ret
push
out
js
inc
add
rcrb
add
or
add
cmp
cmp
inc
xchg
loopne
add
mov
and
and
mov
testl
mov
add
add
int3
add
test
and
add
dec
add
out
push
add
add
rcrb
jbe
fwait
sbb
mov
mov
lods
fsubrs
aas
inc
add
or
sti
xor
popa
adc
jecxz
add
add
push
add
loopne
test
add
scas
sbb
adc
add
add
clc
jbe
sti
iret
outsl
xor
sbb
push
add
outsb
add
cmp
pop
add
dec
adc
add
add
aad
adc
in
imul
popa
inc
fisubl
add
jo
cltd
std
push
iret
pop
mov
cmpsl
out
push
add
add
filds
aad
jg
sub
mov
add
add
jns
or
adc
repnz
add
sub
xor
imul
fldl
mov
jmp
add
leave
test
sarb
pop
push
aaa
push
sbb
add
dec
add
pop
add
jle
add
jo
rol
adc
fistl
lods
inc
add
push
add
cmp
movsb
jle
cmp
nop
aas
rorb
push
xor
fldl
mov
add
add
cmp
pop
mov
test
adc
mov
fcoml
sub
jmp
jge
fnsave
sbb
jb
and
mov
add
mov
mov
cld
sub
insb
add
je
xorl
push
add
or
int3
cltd
jno
sbb
add
add
add
cmp
add
and
jle
add
add
add
add
mov
add
add
add
jae
bound
push
pop
add
add
lret
filds
sbb
mov
sub
mov
inc
add
add
xor
nop
mov
in
popa
scas
cs
nop
add
dec
add
inc
mov
aad
cmpsl
fstps
movsl
ljmp
add
sti
aas
cmp
inc
in
fsubl
push
shlb
cmp
add
push
add
aas
inc
mov
mov
popf
mov
add
adc
pop
int
add
push
add
lods
mov
add
inc
xlat
mov
mov
mov
data16
add
push
add
adcb
imul
add
ja
dec
ret
pop
or
repz
out
lods
mov
cmp
sahf
sub
xchg
mov
cli
std
in
or
arpl
add
pop
add
leave
inc
in
sbb
std
mov
fdivp
movsl
aad
inc
fiaddl
add
dec
adc
or
add
in
sbbb
add
add
stc
dec
add
add
add
sbb
add
ljmp
jge
add
stc
nop
cld
sbb
sbb
rcll
call
cmc
xor
fsts
mov
pop
sub
adc
cmp
and
in
add
add
sub
mov
xor
sbb
sahf
cmp
stos
out
add
add
lock
lcall
and
mov
add
xchg
iret
out
mov
adc
or
sbb
add
xchg
lods
mov
or
jle
adc
outsl
pop
shrl
dec
add
add
add
ss
inc
add
ficoml
dec
add
xchg
test
add
pop
test
dec
add
mov
dec
add
add
cmc
enter
add
fidivrl
and
mov
mov
popf
inc
add
add
and
je
push
or
pop
jp
cs
add
push
add
push
add
push
add
add
cmp
mov
push
popf
mov
sti
ja
pop
dec
add
jp
leave
fcmovnb
aad
mov
add
add
stos
push
add
push
add
add
pop
sbb
ja
add
add
loopne
jecxz
add
add
xchg
movsl
push
cmp
add
lret
add
shll
popa
xchg
push
in
xchg
xchg
sub
xor
add
push
cmp
out
sti
cmp
add
xor
add
add
fstpt
dec
cmp
sbb
jge
nop
xchg
call
movsb
ficoml
add
aas
sub
xlat
jmp
sbb
lcall
and
cmp
fwait
scas
aad
pop
inc
mov
scas
dec
add
ret
xchg
out
adc
fisttpll
adc
pushf
xorps
in
loop
pop
add
lock
popf
pop
aam
xchg
adc
xor
mov
add
pop
xchg
adc
je
mov
mov
add
adc
mov
add
pusha
add
mov
int
sar
rcrb
mov
add
pop
fsubrs
adc
out
jecxz
add
push
lea
out
inc
add
daa
cmp
lds
xor
xchg
dec
xchg
xor
xchg
je
add
loope
add
add
push
xlat
es
add
add
sbb
add
dec
clc
jnp
lret
pop
add
fucom
cmp
stos
jl
push
add
outsb
add
sub
cmp
pushl
cmp
push
stos
aaa
clc
pop
mov
add
push
stos
in
stos
mov
incl
mov
or
test
xchg
mov
stc
push
sub
push
or
rcl
js
sub
add
add
cmp
add
pop
add
push
insl
cmc
lahf
ja
cmp
notb
mov
imul
xchg
stc
pusha
add
add
stos
stos
cmpsb
icebp
pop
add
dec
ds
popf
mov
push
add
add
add
cli
pop
add
test
cld
sahf
mov
xchg
add
test
add
sub
enter
adc
loop
mov
dec
xchg
sbb
add
loopne
pusha
add
or
out
call
pop
addb
shlb
lahf
xchg
movsb
lret
icebp
test
xchg
lcall
xlat
cmp
bound
pop
add
fidivs
ror
iret
cmp
js
fistps
repnz
test
jge
mov
dec
add
push
in
add
add
xchg
pop
add
aad
mov
sbb
jl
add
inc
cmpsl
jnp
push
add
in
xchg
jne
mov
mov
mov
les
je
stos
jb
xlat
sbb
add
add
add
pop
and
jmp
fwait
cmp
xor
push
leave
fdivrl
jmp
add
add
pushf
or
add
test
test
xor
pop
add
jne
sub
pop
add
and
sbb
add
add
jl
push
add
bound
hlt
sub
notl
or
cmpsb
ret
dec
pushl
add
int
cltd
out
pop
add
hlt
jae
add
fldl
jb
mov
push
fwait
mov
add
xor
pusha
add
addr16
sub
add
add
mov
sbb
or
xchg
sbb
mov
add
xor
fwait
imul
jb
loopne
add
add
inc
add
sub
add
leave
loop
iret
push
xlat
ds
pop
xchg
add
jne
add
out
and
mov
add
sarl
sub
inc
add
add
dec
add
add
iret
jb
xor
add
push
add
add
add
add
add
inc
imul
add
jae
test
or
aaa
lcall
mov
add
add
cmp
mov
dec
pushf
ret
cmpsb
out
jl
inc
add
dec
fwait
inc
add
sub
test
aaa
mov
adc
add
add
das
add
nop
ret
jle
dec
sbb
mov
jbe
std
inc
jl
repz
add
out
dec
fdivs
rcl
add
inc
add
add
out
push
mov
addl
add
add
mov
sahf
negb
add
test
fnstcw
adc
jg
lahf
xlat
andl
add
lret
and
push
add
add
dec
pop
add
adc
mov
jecxz
cwtl
lock
jge
aam
add
shll
outsb
add
and
add
mov
xchg
xchg
inc
add
add
inc
mov
mov
lret
aam
push
out
roll
jle
jle
jg
add
sbb
fisttps
imulb
add
les
ret
mov
add
inc
add
jne
jp
ljmp
in
popa
mov
mov
out
jle
flds
movsb
mov
and
fbstp
ja
negl
add
fimuls
add
add
jns
cld
sub
add
mov
hlt
cli
bound
jae
add
push
add
scas
rcrl
add
fisubrs
add
pop
add
cwtl
stc
mov
fisttps
add
hlt
cmp
aam
dec
add
add
lcall
jno
add
dec
or
std
daa
nop
adc
mov
out
inc
mov
subb
in
add
paddsw
jae
add
push
add
repz
push
aam
add
add
add
xchg
dec
add
mov
xor
outsl
mov
xlat
out
jecxz
dec
imul
push
add
nop
pop
mov
or
scas
add
add
iret
push
int3
push
xchg
dec
mov
sbb
add
xlat
or
xor
mov
or
xor
es
mov
add
xchg
in
add
jle
insl
cmp
out
pop
int
xor
sub
hlt
ret
add
inc
add
fadds
sbbb
hlt
or
mov
fsub
or
call
add
add
mov
add
dec
add
push
loope
shrl
add
repz
into
jecxz
add
mov
pusha
add
push
add
mov
ror
lds
mov
or
lret
inc
add
out
cmc
lds
sub
das
cwtl
push
add
add
adc
jb
jecxz
and
add
add
gs
cli
pusha
add
imul
mov
dec
add
sbb
mov
dec
les
std
lock
push
mov
add
ljmp
add
add
loope
mov
push
mov
jb
stc
shrb
sub
mov
add
xorl
test
jmp
pop
incl
cmpsb
mov
xor
imul
inc
add
ret
rcll
add
adc
cmp
ja
mov
xor
mov
add
sub
add
cmp
push
inc
sub
sbb
sub
jmp
test
adc
fs
pop
idivb
clc
repnz
xor
dec
add
cmp
cmp
sbb
mov
imul
add
jmp
add
adc
rcrl
aad
add
rcrb
push
add
add
jno
movsl
mov
dec
sbb
jecxz
or
outsb
add
add
add
stos
mov
add
out
add
add
add
add
push
add
mov
js
inc
add
add
adc
dec
add
mov
mov
std
sub
arpl
inc
add
xchg
ds
mov
popf
cmp
mov
add
add
adc
xchg
pop
add
add
sbb
mov
xchg
fisubrl
cmp
mov
add
add
stc
daa
test
xlat
jae
mov
and
and
add
ret
fdivrl
stc
mov
mov
or
add
xor
pop
repnz
dec
add
add
shrl
sub
mulb
cltd
int3
scas
mov
add
pop
mov
add
