ss
in
loope
in
loop
in
jmp
loop
aas
out
in
loop
in
in
in
in
in
in
in
loop
in
jecxz
in
in
in
jmp
loop
and
in
loop
in
out
in
jecxz
in
in
in
jecxz
in
in
in
call
loop
jecxz,pn
in
call
loop
shl
loop
popf
in
in
out
in
out
in
call
loop
push
call
loop
adc
loop
xor
loop
xchg
loop
or
loop
add
loop
shl
loop
mov
call
loop
and
in
in
loop
in
in
in
loope
in
in
in
out
in
call
loop
mul
loop
ds
in
in
in
in
in
out
in
in
in
jmp
loop
loope
loop
push
jmp
loop
gs
in
out
in
loope
in
jecxz
in
in
in
jecxz
in
in
in
in
in
jmp
loop
call
in
in
in
in
loope
in
out
in
out
in
in
in
call
loop
xchg
loop
in
call
loop
in
loope
in
loope
in
jmp
loop
or
loop
xor
loop
inc
in
in
in
in
out
in
call
loop
xor
loop
lahf
jecxz
in
jecxz
in
out
in
out
in
loop
in
loop
in
loope
in
call
loop
mov
loop
stos
in
in
loop
in
call
loop
add
loop
insb
call
loop
stc
in
in
jecxz
in
out
in
jecxz
in
jmp
loop
cld
loop
in
out
in
jmp
loop
cmpsl
in
in
in
in
jecxz
in
loope
in
loop
in
loope
in
in
in
loope
in
call
loop
pop
jmp
loop
mov
in
in
in
in
call
loop
fsub
loop
or
loop
sub
loop
mov
loop
add
in
in
jecxz
in
out
in
in
in
loop
in
in
in
jecxz
in
loope
in
call
loop
push
loop
in
loope
in
in
in
in
in
call
loop
mov
loop
in
loop
in
loope
in
out
in
call
loop
cmp
loop
test
loop
mov
call
loop
fucomp
loop
adc
loop
mov
out
in
jmp
loop
in
in
in
out
in
out
in
out
in
out
in
call
loop
popa
in
in
jmp
loop
dec
out
in
jecxz
in
call
loop
insl
out
in
loop
in
loop
in
call
loop
inc
in
in
in
in
loope
in
in
in
out
in
jecxz
in
in
in
in
in
jmp
loop
lret
in
call
loop
fsubr
loop
cs
in
in
in
loope
in
out
in
jecxz
in
out
in
in
in
jmp
loop
dec
call
loop
xchg
jecxz
in
in
in
call
loop
clc
call
loop
pop
call
loop
xor
jecxz
in
loope
in
jecxz
in
in
in
jecxz
in
loope
in
in
in
out
in
in
in
call
loop
imul
loop
cld
out
in
out
in
out
in
loop
in
out
in
in
in
in
in
out
in
in
in
loope
in
out
in
loope
in
in
in
in
in
jecxz
in
call
loop
scas
in
in
in
in
loop
in
in
in
in
in
jecxz
in
call
loop
mov
in
in
out
in
in
in
loop
in
loope
in
loop
in
in
in
loop
in
in
in
out
in
call
loop
mov
out
in
in
in
loop
in
jmp
loop
cwtl
in
in
in
in
loope
in
call
loop
repnz
in
out
in
loop
in
in
in
loope
in
out
in
out
in
out
in
call
loop
lcall
in
loop
in
out
in
in
in
out
in
out
in
jecxz
in
in
in
call
loop
inc
loop
in
jmp
loop
fwait
call
loop
fsub
loop
xor
loop
nop
loope
in
loope
in
call
loop
popf
call
loop
popa
in
in
out
in
in
in
call
loop
repz
in
out
in
call
loop
out
call
loop
aam
loop
push
out
in
loope
in
jecxz
in
in
in
jmp
loop
in
loop
jl
loop
mov
loop
or
loop
out
out
in
jecxz
in
loop
in
jecxz
in
in
in
in
in
in
in
call
loop
loope
loop
out
loop
in
loop
in
call
loop
das
in
in
in
in
jecxz
in
out
in
call
loop
push
jmp
loop
jae
loop
inc
loop
in
out
in
jmp
loop
mov
call
loop
mov
loop
mov
loop
mul
loop
cwtl
call
loop
cmpsb
jecxz
in
jmp
loop
xchg
loope
in
in
in
in
in
out
in
out
in
out
in
loop
in
loope
in
in
in
in
in
in
in
loop
in
in
in
loope
in
loop
in
jecxz
in
out
in
in
in
loope
in
loop
in
call
loop
icebp
out
in
loope
in
loop
in
out
in
loop
in
out
in
in
in
out
in
loop
in
out
in
loope
in
loope
in
out
in
out
in
loop
in
jmp
loop
loop
in
out
in
call
loop
and
loop
test
loop
in
out
in
call
loop
shl
loop
loop
in
jecxz
in
in
in
in
in
in
in
out
in
out
in
jmp
loop
xor
loop
in
loop
shl
loop
jo
loop
sbb
loop
je
loop
xchg
loope
in
jecxz
in
call
loop
nop
loope
in
loope
in
out
in
loop
in
in
in
in
in
in
in
loop
in
in
in
loop
in
loop
in
loope
in
jmp
loop
test
loop
movsb
jecxz
in
out
in
call
loop
sub
loop
push
in
in
call
loop
push
out
in
out
in
out
in
loop
in
out
in
in
in
in
in
in
in
out
in
in
in
in
in
loope
in
jmp
loop
mov
loop
outsl
in
in
call
loop
daa
in
in
in
in
loop
in
loope
in
in
in
in
in
in
in
jecxz
in
in
in
in
in
out
in
in
in
loope
in
jecxz
in
out
in
in
in
call
loop
pop
jmp
loop
lock
in
in
in
loop
in
in
in
jmp
loop
push
call
loop
push
out
in
in
in
in
in
out
in
out
in
in
in
jecxz
in
out
in
in
in
out
in
call
loop
stos
jecxz
in
loop
in
out
in
loop
in
out
in
jecxz
in
in
in
out
in
jecxz
in
in
in
in
in
in
in
jmp
loop
call
jecxz
in
in
in
jecxz
in
jecxz
in
in
in
out
in
jecxz
in
in
in
out
in
call
loop
jecxz
in
out
in
loop
in
call
loop
loopne
loop
loop
insb
out
in
loop
in
in
in
in
in
jecxz
in
jecxz
in
jecxz
in
loope
in
call
loop
mov
call
loop
stc
call
loop
lcall
in
out
in
loop
in
jecxz
in
loop
in
jmp
loop
push
in
in
jecxz
in
out
in
in
in
jecxz
in
in
in
in
in
loop
in
loope
in
in
in
loop
in
out
in
out
in
jecxz
in
in
in
in
in
out
in
out
in
loop
in
out
in
call
loop
cmp
loope
in
out
in
out
in
call
loop
in
loop
xchg
loop
in
call
loop
sub
loop
or
jecxz
in
jmp
loop
sbb
loop
cmp
loop
xor
in
in
in
in
jecxz
in
call
loop
clc
out
in
out
in
in
in
out
in
loope
in
loop
in
in
in
in
in
loope
in
call
loop
sub
loop
adc
loop
mov
call
loop
add
loop
dec
out
in
out
in
out
in
jecxz
in
in
in
call
loop
inc
out
in
jmp
loop
cmp
loop
jmp
in
in
loop
in
call
loop
dec
in
in
out
in
loop
in
in
in
out
in
loope
in
out
in
in
in
call
loop
bnd
loop
pop
jecxz
in
out
in
call
loop
sub
out
in
out
in
loope
in
loop
in
out
in
loope
in
in
in
in
in
loop
in
out
in
out
in
in
in
call
loop
arpl
loop
and
loop
xchg
call
loop
pop
in
in
in
in
jecxz
in
out
in
out
in
out
in
call
loop
ds
in
out
in
out
in
in
in
loope
in
in
in
in
in
out
in
in
in
out
in
call
loop
push
out
in
jmp
loop
adc
loop
lods
jecxz
in
call
loop
dec
out
in
out
in
jecxz
in
out
in
out
in
call
loop
nop
loop
in
call
loop
call
in
in
in
in
loope
in
in
in
jecxz
in
in
in
call
loop
test
jecxz
in
in
in
in
in
loope
in
jecxz
in
in
in
in
in
call
loop
dec
jecxz
in
out
in
out
in
jmp
loop
sbb
loop
adc
loop
add
loop
jae
loop
cmp
loop
mov
loop
inc
jecxz
in
out
in
loop
in
call
loop
jl
loop
sub
loop
inc
jmp
loop
mov
loop
popf
out
in
loope
in
jmp
loop
shl
in
out
in
jmp
loop
pmulhuw
in
out
in
call
loop
adc
loop
imul
loop
gs
in
out
in
out
in
loope
in
jmp
loop
and
loop
int3
call
loop
mov
loope
in
loop
in
out
in
loop
in
call
loop
gs
in
loop
in
in
in
out
in
out
in
loop
in
jecxz
in
jmp
loop
mov
loop
mov
loop
fsub
loop
cltd
call
loop
push
in
in
in
in
in
in
call
loop
iret
jecxz
in
loop
in
jmp
loop
cmp
loop
mov
loop
in
loop
in
jmp
loop
push
out
in
in
in
in
in
out
in
out
in
call
loop
ja
loop
out
loop
out
in
out
in
call
loop
pop
in
in
loop
in
in
in
out
in
out
in
loop
in
out
in
call
loop
lods
in
in
loop
in
out
in
in
in
in
in
loop
in
in
in
loope
in
loop
in
loop
in
in
in
out
in
loop
in
jecxz
in
loop
in
jecxz
in
loope
in
call
loop
stos
out
in
in
in
in
in
call
loop
movsl
out
in
in
in
loop
in
out
in
call
loop
in
loop
cmp
loop
cwtl
in
in
out
in
in
in
out
in
in
in
jecxz
in
jecxz
in
loope
in
jmp
loop
loope
in
call
loop
cmp
loop
in
in
in
out
in
call
loop
xchg
in
in
out
in
jecxz
in
in
in
in
in
out
in
loope
in
call
loop
test
loop
fld1
loop
sub
loop
mov
jecxz
in
in
in
in
in
jmp
loop
lods
loope
in
loop
in
jecxz
in
in
in
loope
in
in
in
jecxz
in
out
in
loope
in
in
in
jmp
loop
call
call
loop
or
loop
shl
loop
xor
loop
pop
jmp
loop
sub
loop
outsl
jecxz
in
in
in
call
loop
shr
in
jecxz
in
in
in
jecxz
in
in
in
out
in
loop
in
in
in
loope
in
in
in
loop
in
out
in
loop
in
loop
in
call
loop
ljmp
in
in
in
out
in
jecxz
in
out
in
loop
in
in
in
loop
in
jecxz
in
loope
in
call
loop
and
in
call
loop
pop
jmp
loop
cltd
jecxz
in
loope
in
call
loop
loopne
loop
inc
call
loop
loop
jmp
loop
movsl
loope
in
in
in
call
loop
xchg
jecxz
in
loop
in
out
in
call
loop
aad
loop
add
loop
mov
loop
out
out
in
out
in
out
in
loope
in
out
in
out
in
call
loop
sbb
loop
xchg
jecxz
in
loop
in
jecxz
in
out
in
out
in
loop
in
out
in
in
in
loop
in
loop
in
call
loop
and
out
in
in
in
call
loop
pop
jecxz
in
call
loop
scas
out
in
out
in
in
in
jmp
loop
in
loop
mov
jecxz
in
loop
in
jecxz
in
loop
in
loope
in
jecxz
in
out
in
in
in
jecxz
in
call
loop
jnp
loop
dec
in
in
call
loop
ds
loop
stos
jecxz
in
loope
in
loope
in
out
in
out
in
out
in
jmp
loop
cmpsl
call
loop
add
jmp
loop
sub
in
in
call
loop
sub
loop
loop
in
in
in
out
in
out
in
out
in
in
in
call
loop
mov
call
loop
and
loop
arpl
loop
lock
in
in
in
loope
in
jecxz
in
in
in
in
in
out
in
jmp
loop
out
loop
mov
loop
hlt
loope
in
call
loop
mov
in
in
in
in
in
in
loop
in
jmp
loop
mov
call
loop
mov
out
in
out
in
jecxz
in
jecxz
in
jecxz
in
jmp
loop
es
in
out
in
jecxz
in
in
in
loop
in
jmp
loop
loope
loop
call
loop
and
loop
inc
in
in
in
in
in
in
call
loop
daa
call
loop
mov
loop
xchg
loop
das
in
in
loop
in
loop
in
in
in
call
loop
push
out
in
out
in
out
in
out
in
call
loop
add
loop
add
out
in
in
in
out
in
out
in
in
in
loope
in
in
in
in
in
in
in
out
in
jecxz
in
out
in
jecxz
in
call
loop
xor
out
in
jecxz
in
jecxz
in
loop
in
loope
in
out
in
out
in
in
in
loop
in
in
in
out
in
out
in
jecxz
in
jecxz
in
call
loop
inc
call
loop
enter
push
jecxz
in
in
in
loop
in
in
in
out
in
in
in
out
in
jecxz
in
in
in
in
in
loop
in
loop
in
jecxz
in
jecxz
in
jecxz
in
call
loop
je
loop
popf
loop
in
jecxz
in
jecxz
in
loope
in
out
in
in
in
in
in
call
loop
iret
out
in
jecxz
in
jmp
loop
xchg
in
in
out
in
in
in
call
loop
js
loop
sahf
out
in
in
in
out
in
jmp
loop
sbb
loop
push
jmp
loop
add
loop
loop
loop
jae
loop
mov
loop
xlat
loop
in
out
in
out
in
jmp
loop
push
out
in
in
in
out
in
loope
in
in
in
loop
in
loope
in
in
in
loope
in
loope
in
call
loop
pop
loope
in
loope
in
in
in
in
in
out
in
in
in
out
in
call
loop
sbb
out
in
call
loop
jnp
loop
cmpsb
call
loop
pop
in
in
out
in
loop
in
out
in
out
in
loop
in
call
loop
mov
loop
sub
loop
cmpsl
jecxz
in
out
in
in
in
out
in
jecxz
in
out
in
call
loop
xor
loop
in
loop
adc
loop
cmc
call
loop
hlt
in
in
jmp
loop
shl
in
out
in
jmp
loop
xor
loop
cmp
loop
iret
jecxz
in
loop
in
in
in
in
in
out
in
out
in
in
in
jmp
loop
cmc
in
in
out
in
in
in
loop
in
jecxz
in
out
in
loop
in
out
in
out
in
out
in
out
in
in
in
call
loop
jmp
loop
push
in
in
out
in
out
in
in
in
loope
in
in
in
in
in
in
in
jecxz
in
in
in
call
loop
sti
loop
in
jecxz
in
out
in
out
in
in
in
jecxz
in
jecxz
in
jecxz
in
in
in
out
in
out
in
jecxz
in
in
in
out
in
call
loop
in
in
in
out
in
in
in
out
in
in
in
loope
in
jecxz
in
out
in
in
in
loop
in
out
in
out
in
jmp
loop
push
call
loop
arpl
loop
lcall
in
loope
in
in
in
jecxz
in
in
in
in
in
in
in
out
in
loope
in
in
in
in
in
out
in
jecxz
in
in
in
loop
in
loop
in
out
in
call
loop
cltd
call
loop
mov
loop
jge
loop
mov
loop
mov
loop
je
loop
ljmp
in
loope
in
loope
in
jecxz
in
out
in
loop
in
in
in
in
in
jecxz
in
out
in
loope
in
out
in
in
in
loope
in
call
loop
in
loop
popf
in
in
out
in
in
in
in
in
jmp
loop
shr
loop
aad
loop
scas
out
in
jecxz
in
in
in
loop
in
loope
in
call
loop
movsl
in
in
in
in
out
in
in
in
loop
in
loope
in
loop
in
out
in
in
in
loop
in
loope
in
in
in
call
loop
lcall
in
loop
in
out
in
in
in
loop
in
out
in
loop
in
jecxz
in
jecxz
in
out
in
out
in
jecxz
in
loop
in
out
in
loop
in
out
in
loop
in
jmp
loop
js
loop
sbb
loop
cwtl
loope
in
loope
in
call
loop
xor
loop
shl
in
in
in
jecxz
in
loop
in
loop
in
in
in
loop
in
in
in
out
in
in
in
jecxz
in
loop
in
loop
in
call
loop
lock
in
call
loop
in
loop
bnd
loop
cltd
out
in
out
in
out
in
out
in
loop
in
in
in
call
loop
cmp
loop
sbb
loop
std
loop
in
jmp
loop
cmp
loop
ss
loop
jnp
loop
sbb
loop
inc
loop
in
out
in
out
in
call
loop
int3
in
in
out
in
call
add
outsl
sti
mov
add
add
jo
cmp
sbb
dec
or
mov
sarl
add
add
add
int3
xchg
pop
cmp
add
call
decl
add
popf
dec
data16
dec
daa
add
and
inc
add
fistps
adc
dec
jne
push
or
mov
add
xchg
mov
jae
decl
add
add
stc
cmp
pop
add
decl
inc
add
add
call
fcoms
addb
popa
add
insb
mov
add
push
paddq
mov
aas
jp
add
mov
or
popa
add
or
lods
mov
call
add
mov
add
div
test
jmp
loop
aaa
filds
add
xor
lcall
fdivrs
leave
pop
cmpsb
add
int3
mov
add
dec
mov
nop
push
add
and
xchg
dec
or
mov
jge
add
mov
or
movl
pop
pop
mov
add
xchg
rolb
add
mov
arpl
incl
adc
jmp
add
adc
ljmp
add
sub
mov
add
add
mov
sub
mov
test
or
lcall
leave
loopne
inc
add
push
lret
insl
dec
jl
cltd
xchg
in
push
loope
ficoml
sub
pushf
adc
mov
insl
int
add
mov
add
cwtl
push
add
ja,pt
dec
clc
scas
rolb
add
ds
fsts
decl
roll
test
or
scas
jmp
movsl
add
adc
push
addl
pop
jo
in
movb
sbb
cld
test
add
xchg
aaa
push
add
inc
add
pop
xchg
xchg
shl
test
fcomi
addb
loopne
movl
ja
outsl
dec
repnz
notb
lods
and
lcall
add
or
add
mov
jb
inc
add
call
decl
add
mov
data16
repnz
jmp
add
xor
pushl
push
fldenv
lock
inc
add
test
roll
add
add
or
cmc
cmp
mov
cwtl
xchg
push
add
dec
sbb
adc
incl
mov
cmc
inc
add
pop
add
popf
sub
mulb
ljmp
push
add
dec
mov
add
cwtl
sbb
dec
into
aad
mov
cmpsl
add
lcall
daa
add
add
cli
ljmp
aad
push
pop
jmp
mov
cmp
repnz
cmp
add
imull
addl
aam
cmpsb
add
add
mov
inc
add
dec
notl
add
dec
scas
lcall
and
incl
add
add
ljmp
call
xchg
pop
push
add
into
sar
ret
add
jp
add
push
add
addr16
sub
dec
push
add
inc
add
dec
test
xchg
xor
lcall
add
inc
add
mov
pop
outsb
xchg
mov
add
loopne
nop
call
inc
add
add
add
ljmp
decl
fcoml
leave
pop
add
popf
add
add
in
testl
test
cmp
cmc
dec
pop
push
or
push
add
fcomps
add
push
jae
ljmp
add
daa
add
add
cli
lret
add
add
call
mov
add
jle
xchg
mov
add
add
movb
roll
jnp
imul
fwait
xchg
enter
dec
xchg
mov
mov
jp
adc
mov
mov
in
sbb
lcall
push
sub
incl
call
add
je
add
cs
xor
pop
dec
repz
pop
inc
add
or
sub
mov
jae
adc
incl
add
les
addb
dec
movl
decl
add
add
mov
cmp
mov
add
pop
add
xor
int
push
call
inc
add
lret
mov
jnp
out
xchg
cs
clc
movl
mov
add
jo
incl
add
js
les
mov
add
loope
pop
lret
sti
dec
popf
icebp
push
pop
xlat
pop
jae
lcall
ret
roll
aam
cmpsb
add
insl
push
add
jae
push
aaa
pop
sbb
test
mov
add
inc
add
add
add
pop
cmc
sbb
add
rol
add
push
shl
add
add
ljmp
call
ljmp
add
fcoml
sub
stos
inc
add
add
ljmp
adc
pushl
add
nop
ljmp
xor
imul
lcall
inc
add
add
pop
cmpsl
add
mov
push
add
dec
mov
add
bound
pushl
mov
dec
test
cltd
sub
fcomps
and
ljmp
repnz
add
lcall
inc
add
inc
add
add
cmpsl
add
cmp
aad
outsb
jl
pop
mov
add
adc
pushl
add
or
add
aad
xchg
loope
es
push
mov
aam
fwait
xor
ljmp
or
add
push
add
add
jge
sbb
xor
out
xor
incl
loope
test
cmp
mov
mov
mov
fwait
aas
fcompl
add
add
sbb
add
scas
aam
lahf
mov
imul
mov
stc
cltd
cmp
add
inc
add
add
call
pushf
pop
stc
add
inc
add
inc
add
add
cli
mov
cmp
sub
in
pop
scas
ret
fadds
xor
jmp
incl
pushl
std
sbb
mov
int3
wbinvd
ret
enter
test
add
xchg
insb
insb
jnp
test
adc
decl
add
ljmp
incl
fildl
int
add
int3
xor
pushl
add
push
jbe
dec
imul
add
mov
add
xchg
roll
add
pop
lds
pop
sub
adc
jmp
add
enter
movsb
add
lret
cmc
adc
xchg
pop
or
sti
ss
xchg
rolb
pusha
add
cs
cltd
adc
and
mov
mov
daa
add
add
sbb
dec
add
decl
cltd
ret
add
add
xchg
jp
int
add
aaa
or
add
add
dec
jb
jl
cmc
je
sub
jae
pushl
mov
movb
add
movsl
add
add
jle
add
int
aas
pop
dec
lds
mov
daa
add
push
add
push
add
add
lcall
imul
add
int3
das
pop
pop
add
add
mov
decl
mov
xor
incl
ljmp
mov
add
jns
out
inc
add
dec
pop
jno
lcall
cmp
call
call
add
mov
add
addl
clc
ret
mov
sbb
sbb
aaa
jge
sahf
mov
add
stos
roll
add
fsts
push
add
dec
dec
test
movsl
add
jb
call
inc
add
data16
add
push
add
sbb
pushl
mov
lret
xchg
shlb
call
ljmp
add
movb
mov
addl
add
sti
pop
clc
push
add
aad
adc
jl
scas
mov
scas
inc
add
sbb
das
clc
cli
jno
decl
add
add
add
out
xor
add
ljmp
movl
out
lret
bound
decl
lock
lcall
call
fisttpl
decl
pop
cmp
arpl
call
cmp
push
add
push
add
push
xchg
lahf
outsb
fwait
stc
pop
or
xchg
dec
lret
cli
and
push
movsl
add
xchg
xchg
pop
inc
add
loope
cmp
incl
mov
add
mov
sbb
mov
addb
movsb
add
push
icebp
xchg
add
bound
jmp
aad
addb
add
dec
sub
sub
sbb
in
ss
roll
add
mov
add
mov
dec
jb
call
in
add
inc
add
or
add
leave
arpl
jmp
mov
add
repz
jmp
movsl
add
add
cmp
fstpl
and
or
sbb
stc
xchg
les
rorb
add
call
lds
cmp
add
imul
lcall
lock
jle
mov
fdivp
and
call
ss
add
fnstcw
push
in
addr16
inc
add
jp
or
mov
cwtl
sti
ja
mov
cwtl
sbb
into
std
cs
sti
int3
lret
jp
push
add
negl
xchg
add
call
jmp
add
add
ja
add
add
dec
negb
jae
lcall
movb
ja
and
jmp
ljmp
call
push
add
ds
int3
mov
add
and
lcall
add
inc
add
add
addb
cmpsb
add
add
push
adc
clc
mov
sbb
lods
jg
sub
dec
addl
sub
add
imul
aam
js
add
mov
outsl
lods
test
add
and
in
out
xchg
push
mov
js
add
fsts
lds
pop
add
inc
add
test
pop
jo
pushl
jnp
and
call
dec
adc
ljmp
mov
fdivr
test
mov
add
jle
repz
jmp
inc
add
cmp
pop
or
push
in
aad
push
mov
pushl
decl
lahf
cmpsl
add
call
add
dec
and
add
lcall
sar
fldcw
add
push
arpl
decl
add
mov
aas
dec
xor
call
inc
add
pop
js
mov
push
add
decb
loop
fnsave
push
add
xchg
mov
add
add
call
add
push
dec
pop
sbb
add
loope
int
mov
add
fwait
jnp
aad
std
jmp
pop
pop
repz
add
pop
addr16
sub
add
add
lret
add
xor
incl
mov
or
mov
xchg
add
lcall
movsl
add
add
add
sub
jmp
add
fsubrl
dec
mov
sub
lcall
dec
add
xchg
mov
add
pusha
add
test
pop
add
clc
cld
lds
mov
add
cmp
add
in
das
mov
roll
cltd
fistpl
ficompl
push
cmp
mov
mov
je
rcr
mov
sbb
sarl
mov
sub
push
push
push
call
test
jne
push
push
push
push
push
call
test
jne
mov
lea
push
push
push
push
call
push
call
xchg
cld
lea
sub
mov
lock
lea
lock
ret
in
inc
add
xor
dec
call
in
loope
inc
add
push
cs
fdivl
add
je
ret
add
dec
test
add
in
stc
mov
std
add
shl
add
add
lcall
cmp
lea
mov
fwait
mov
xor
lcall
xchg
in
pop
sub
mov
testl
xlat
cmp
add
movsb
add
movl
sti
inc
add
mov
loope
test
add
insb
mov
add
cmp
in
mov
std
lret
inc
add
mov
and
ljmp
add
fdivl
add
add
add
add
push
sub
jnp
add
mov
mov
sub
mov
test
insl
out
movl
add
dec
xchg
lds
mov
add
or
add
or
add
add
popa
add
bound
ljmp
push
enter
call
mov
dec
mov
add
mov
lds
sbb
loop
imul
sub
pop
add
add
inc
add
push
stos
jae
call
ret
add
add
push
repz
mov
push
add
mov
addb
cmpsb
add
jmp
add
inc
add
test
fsubl
nop
addl
push
sbb
sub
add
add
cmp
add
ljmp
add
add
roll
pop
movl
jne
or
jle
add
inc
add
pop
pop
inc
add
fwait
pushf
mov
add
fldt
pushl
fstps
pop
sub
add
out
sti
sub
add
movsb
add
lcall
add
add
in
adc
and
mov
adc
incl
add
jp
inc
add
and
xchg
ss
rolb
add
add
das
aam
add
push
add
xchg
movsb
add
jnp
add
jmp
incl
add
test
leave
aam
in
pop
mov
bound
call
add
jo
fisttpl
call
add
xchg
arpl
jmp
add
mov
sub
push
add
ret
addl
out
jle
insb
out
push
add
mov
mov
ret
mov
xor
cmp
out
adc
ljmp
and
jmp
ss
repnz
sub
jae
ds
test
popf
add
xchg
xchg
int
aad
jnp
mov
ret
add
call
inc
add
xchg
popf
jl
cmc
sub
sbb
pop
jl
cmc
dec
mov
pushl
add
push
cmp
add
cld
decb
mov
pushl
add
ja
push
sti
cltd
add
pushl
ficoml
lahf
or
pushl
push
or
call
popa
add
push
add
sbb
ficoms
dec
lods
xchg
leave
lds
call
mov
decl
add
cmpsl
add
fsubl
pushl
xor
jmp
out
daa
add
xchg
jge
pop
add
jmp
ja
mov
add
movsl
add
add
mov
add
test
add
push
add
add
clc
jmp
daa
add
pop
inc
add
xor
pushl
add
test
fnstsw
add
call
mov
push
add
fwait
xlat
das
push
stos
fnstsw
add
add
fldt
sub
jp
mov
jmp
call
popf
aad
mov
jae
inc
add
add
mov
add
stos
iret
and
jo
jmp
ds
or
js
in
inc
add
add
roll
push
add
incl
add
add
pop
jl
add
mov
add
mov
mov
add
jmp
add
add
lcall
popa
add
sahf
sub
shl
add
add
add
push
add
daa
add
add
adc
jmp
add
jo
fnstcw
add
cmp
mov
add
xchg
ljmp
incl
ret
add
add
add
sbb
aaa
cli
mov
xor
call
add
push
loope
in
fsubl
movsl
add
dec
add
call
cmp
sbb
jns
add
and
jmp
add
cltd
dec
sbb
add
push
jl
ss
test
mov
mov
sti
arpl
incl
sarb
data16
add
test
mov
add
addl
les
data16
dec
rolb
inc
add
push
adc
lcall
add
inc
add
jo
decl
mov
je
mov
jb
pushl
stos
mov
cmp
lcall
add
lods
lret
adc
or
add
movb
add
popf
aas
test
jmp
add
sbb
xlat
pop
add
add
push
add
cmp
mov
jg
mov
add
add
or
mov
xor
add
dec
lods
test
jne
add
add
arpl
jmp
add
add
add
int3
xor
inc
add
in
stos
cmp
dec
shlb
hlt
cwtl
sbb
mov
add
mov
xor
jmp
cli
ja
sti
scas
push
add
xchg
rcrb
ss
lds
dec
add
xchg
imul
addb
add
bound
ljmp
aas
jae
call
jmp
add
ficoms
add
pop
mov
mov
add
lcall
or
lcall
add
adc
lcall
xor
decl
fiadds
add
mov
test
pop
lds
inc
add
test
pop
add
add
icebp
add
je
add
inc
add
sub
add
lcall
imul
add
lcall
in
aad
push
or
cmp
add
sahf
mov
loop
sbb
mov
loop
test
add
sub
mov
add
add
jmp
out
jnp
jle
xchg
iret
dec
mov
jae
incl
jns
mov
aam
mov
iret
pushf
lret
add
add
rolb
add
incl
pop
xchg
cld
scas
jp
add
sub
add
cmpsb
add
loop
jo
inc
add
aas
sbb
xor
incl
add
add
lea
lret
xor
rorb
pop
aam
test
icebp
ljmp
lcall
in
dec
push
test
bound
call
add
icebp
jb
incl
push
add
xor
jmp
pop
outsb
stos
sbb
adc
jmp
adc
hlt
add
adc
jmp
add
add
mov
push
bound
lcall
add
jecxz
fsubrs
xchg
adc
jmp
add
add
call
sbb
add
add
sbb
jno
cmp
add
faddl
mov
stos
add
mov
dec
pop
cmp
add
add
ljmp
jecxz
bound
call
ljmp
jmp
lret
sub
ljmp
mov
add
add
lds
jno
call
out
pop
sahf
mov
int
push
add
lds
mov
add
jge
add
lcall
add
jo
pushl
ljmp
xor
incl
xor
dec
pop
jne
addl
inc
add
fimuls
add
add
pushl
call
add
mov
add
add
add
les
fwait
sub
fdivrp
jg
hlt
inc
add
out
or
mov
sub
add
xchg
int3
cmp
add
push
insb
mov
add
add
add
imul
lock
jmp
add
out
arpl
ljmp
push
pop
inc
add
ds
add
add
add
xchg
adc
jg
cwtl
sahf
ljmp
add
inc
add
jge
and
dec
test
aas
pop
lahf
mov
inc
add
inc
add
cmc
lcall
lcall
add
sub
movb
es
scas
mov
add
pop
mov
std
hlt
pop
movsl
add
cmp
in
xor
pushl
mov
pop
jo
cmp
ljmp
enter
push
mov
mov
jge
data16
test
addl
add
xlat
pop
in
mov
aam
adc
filds
pop
xchg
lahf
xchg
mov
xchg
outsl
add
ja
pop
loopne
adc
mov
popf
mov
jmp
or
jmp
aam
jg
pop
je
add
add
pop
leave
cmp
das
xchg
mov
cmpsl
add
push
add
in
sub
dec
xchg
das
lret
mov
add
lcall
mov
jbe
xchg
add
pushf
insb
and
jmp
jbe
mov
add
push
out
pop
add
enter
in
mov
add
sub
pop
lea
or
cmp
add
imul
enter
jns
lock
in
js
fldenv
xchg
scas
cmpsl
add
xlat
jp
add
add
push
shlb
loop
es
out
cmp
xchg
and
jmp
cmp
sbb
in
jbe
jg
add
addb
pop
xchg
mov
addl
cmc
mov
jbe
ss
mov
lock
mov
add
sahf
add
add
jno
ljmp
adc
inc
add
add
loopne
mov
push
je
add
rcr
lret
sub
or
js
add
xchg
je
lcall
loopne
lret
rcll
and
incl
loopne
mov
scas
xlat
fdivrl
adc
jmp
and
lcall
adc
ljmp
sbb
cwtl
and
in
mov
stos
sub
aam
sbb
xchg
sahf
test
ss
add
loop
addb
add
add
mov
jle
movl
add
jmp
add
cs
stos
xor
decl
es
repz
add
in
in
lds
sub
add
addl
add
enter
pushl
aam
add
lods
ret
add
add
add
jge
dec
push
movl
ljmp
add
jmp
in
ret
add
pop
addl
cmp
mov
icebp
call
sahf
ds
pop
sahf
mov
icebp
insb
push
mov
mov
lcall
mov
add
jbe
repz
mov
xchg
shrl
inc
add
add
adc
mov
lret
pushl
dec
pop
ja
add
xchg
es
std
adc
call
xchg
push
add
add
paddsw
out
fidivrs
addb
aaa
pop
mov
fs
add
xor
inc
add
push
add
sbb
add
and
sti
out
fs
addl
fildl
add
inc
add
or
je
add
ljmp
inc
add
jb
push
stos
adc
decl
std
loopne
sbb
roll
sbb
push
add
cmp
repnz
leave
aam
add
incl
add
mov
add
xor
ljmp
ror
xor
decl
push
add
or
add
xor
push
mov
aas
pop
and
lcall
jge
add
jmp
add
add
jmp
add
jne
xchg
movsl
add
inc
add
movsb
add
add
add
stc
xor
ljmp
ror
lods
xor
decl
arpl
call
add
add
test
pop
scas
fmulp
das
adc
call
mov
add
dec
or
mov
add
fldcw
add
sbb
aad
enter
push
pusha
add
xchg
mov
jnp
add
addr16
inc
add
add
jmp
cli
inc
add
call
incl
add
data16
push
repz
out
out
and
and
incl
add
movl
add
cltd
and
cmp
add
xchg
push
xchg
mov
add
and
ljmp
sbb
ja
add
sbb
mov
add
test
test
les
lea
push
addl
mov
push
add
add
addl
add
cli
add
add
dec
outsl
in
push
dec
std
dec
lock
add
out
pop
inc
add
jmp
cmp
incl
add
mov
addl
pop
xchg
inc
add
cmp
lock
jge
add
mov
stos
mov
jge
add
fimuls
add
push
jno
lcall
or
popf
mov
mov
add
and
call
add
xchg
fists
add
add
add
add
jle
xchg
pop
jp
or
push
mov
in
stos
lea
scas
mov
popf
push
add
add
je
add
test
shlb
add
decb
add
add
in
sti
mov
add
dec
test
jne
insb
std
dec
imul
shll
push
dec
imul
mov
xor
add
movsl
add
rolb
stos
mov
enter
popa
add
lahf
push
add
out
cltd
push
add
daa
add
daa
add
xchg
mov
add
lock
add
aad
jl
and
pushl
mov
mov
test
add
inc
add
inc
add
adc
sbb
or
mov
fisubl
cmpsb
add
add
mov
lcall
xlat
push
add
ss
add
xor
ljmp
incl
ljmp
add
jns
mov
loopne
mov
lahf
mov
jle
pop
sbb
sbb
call
sbb
scas
daa
add
add
sub
add
inc
add
add
inc
add
movl
call
lods
fmull
cltd
loopne
fldenv
add
out
pushf
pusha
add
pop
add
call
add
lret
add
xor
pop
xchg
mov
inc
add
ljmp
mov
add
push
sbb
lds
icebp
xchg
sbb
add
aad
fucomp
je
push
jecxz
xchg
push
mov
out
icebp
mov
add
add
lret
imul
pop
jecxz
mov
dec
scas
and
jmp
add
addl
add
iret
mov
add
adc
jp
add
jbe
add
aam
add
add
in
add
and
inc
add
add
pop
ss
add
lcall
jae
ljmp
shl
mov
popf
call
push
sub
hlt
sub
dec
stos
jg
addl
imul
add
jle
inc
add
add
add
add
xor
decl
inc
add
push
add
clc
inc
add
sbb
mov
mov
add
call
add
mov
jle
add
push
and
jnp
xchg
pop
dec
dec
and
pushl
pop
xchg
push
stos
fiadds
sti
mov
add
mov
jne
bound
ljmp
add
arpl
jmp
add
sar
jp
or
and
incl
addb
popa
add
int
add
rolb
add
mov
mov
pop
sbb
inc
add
fmull
cmp
jmp
add
add
mov
cmp
ds
push
add
loope
cmp
mov
lock
insl
leave
or
ljmp
shl
add
sahf
mov
fsubs
je
incl
jne
xor
add
or
cld
xchg
icebp
out
sub
add
decl
xchg
cld
rorb
mulb
lcall
loopne
mov
inc
add
add
popf
mov
add
jmp
lcall
mov
rclb
incl
in
outsl
into
inc
add
decl
arpl
call
mov
jle
push
and
lcall
push
and
sti
sti
mov
add
xchg
daa
add
repnz
push
or
add
ret
jae
ljmp
addr16
add
pop
mov
xchg
or
out
mov
mov
dec
inc
add
outsl
xchg
pop
sarb
add
jp
sbb
sbb
add
jno
pushl
add
ljmp
add
jnp
rcrl
es
pushf
in
jmp
cwtl
scas
mov
fnstcw
gs
push
cmp
sub
or
pop
insb
xchg
add
pushl
jno
call
add
int
stc
dec
mov
add
pop
add
into
mov
inc
add
cmp
add
test
pop
push
cs
jae
pushl
add
aaa
inc
add
and
loope
movsb
add
add
push
mov
pop
jno
pushl
add
mov
sub
add
or
add
jp
addl
fucomip
jns
xchg
mov
stos
out
add
jmp
add
call
jp
arpl
ljmp
add
scas
jle
xor
decl
movsb
add
cld
in
sahf
pop
call
lahf
out
jbe
mov
stos
push
cli
in
ja
je
lahf
bound
jmp
dec
jge
out
dec
xchg
inc
add
add
fwait
sub
movsl
add
and
decl
add
mov
jb
call
mov
enter
dec
out
lock
add
jl
loopne
add
movlps
call
cmp
ljmp
int3
lods
test
add
add
loopne
clc
push
add
push
add
in
in
xchg
scas
or
add
xchg
ret
add
mov
add
xchg
sub
insl
pop
jbe
test
push
sbb
add
fidivrl
mov
dec
or
push
ror
insb
pop
pop
loop
push
icebp
jb
call
add
sub
push
add
and
mov
sub
add
lds
test
aad
pushf
and
scas
mov
add
lahf
lds
or
add
fucomp
or
push
add
add
sbb
add
fsubr
lods
add
jmp
add
in
out
rcrl
dec
test
jnp
in
ret
xchg
iret
inc
add
incl
add
call
add
push
add
jne
add
dec
sbb
push
mov
and
fnstcw
add
add
int
mov
mov
xchg
pop
add
inc
add
mov
popa
add
jbe
movl
popa
add
int3
mov
or
std
daa
add
mov
mov
add
and
call
cs
adc
jmp
add
imul
push
mov
fistps
cmp
and
dec
loop
and
call
lcall
clc
inc
add
add
add
testl
bound
ljmp
jns
insl
add
lcall
nop
lcall
test
mov
in
mov
add
inc
add
adc
inc
add
lret
incl
jno
jmp
add
add
push
inc
add
jnp
xor
fcomps
jmp
add
add
rcrl
add
add
ret
add
sahf
inc
add
mov
add
cmp
rolb
jge
xor
lcall
mov
add
add
addr16
add
decl
add
mov
lret
cs
xchg
jns
adc
fistl
cwtl
outsb
int3
ljmp
add
mov
add
adc
lcall
roll
add
mov
add
popf
ds
sub
movl
pop
xchg
iret
pop
data16
add
adc
aam
bound
incl
add
lahf
or
mov
xchg
roll
add
fnstsw
add
call
mov
ret
cmp
xchg
cmp
add
add
add
mov
pushl
add
push
or
in
inc
add
inc
add
add
add
or
add
mov
jb
decl
dec
sub
push
jb
ljmp
negl
incl
push
leave
cmp
add
jo
pushl
pushl
add
jg
add
jge
xchg
je
fdivl
add
cmpsb
add
add
push
add
ljmp
add
test
jge
add
xchg
fcmovnu
mov
pushl
add
out
push
outsl
ficompl
cmpsb
add
pusha
add
addb
iret
dec
imul
add
mov
fsubs
inc
add
sub
rolb
pop
rcrb
xchg
xor
push
imul
stos
setge
and
jmp
add
add
fs
xchg
movl
loop
test
dec
out
sbb
test
jne
add
mov
add
xor
incl
add
movl
pop
sbb
add
add
pop
in
insl
mov
mov
push
add
jb
call
mov
stos
xchg
cmp
popf
xchg
pop
xchg
test
movb
mov
jl
add
data16
data16
add
addb
adc
ljmp
imul
xchg
mov
fnsave
cmp
pop
dec
test
mov
lcall
push
add
inc
add
popf
inc
add
imul
add
add
add
add
xchg
repz
cmpsl
add
add
add
jle
push
add
mov
fsubrl
cld
loopne
movb
xlat
test
add
ljmp
roll
add
dec
repnz
sbb
das
jns
sbb
add
and
lcall
das
loopne
repnz
inc
add
nop
pop
and
or
inc
add
scas
adc
jmp
add
lret
add
pushl
and
incl
lea
addl
lock
icebp
push
add
pop
lea
jecxz
pop
add
and
jns
hlt
push
xchg
fcompl
shll
out
aad
sub
pushl
add
add
mov
cmp
add
add
add
sbb
jmp
add
fisttps
mov
int3
ficompl
add
call
sub
decl
cwtl
addb
lock
jg
add
mov
xor
decl
lea
les
addb
mov
inc
add
and
jmp
add
mov
int
add
xor
lods
inc
add
cmp
add
xor
jg
ss
pop
cmpsl
add
add
add
xor
incl
cmp
xlat
mov
sbb
inc
add
jmp
add
push
add
mov
add
incl
add
add
jl
push
insb
add
ljmp
pushf
iret
add
jmp
add
leave
dec
lcall
cmp
add
stos
repz
jne
add
add
enter
mull
add
lcall
aam
dec
ljmp
and
decl
mov
add
in
std
cltd
add
push
call
add
push
add
and
pushl
push
icebp
icebp
fnstcw
mov
add
adc
pushl
imul
nop
lds
fwait
insl
js
add
xor
mov
das
pushf
cmp
inc
add
pushf
popf
mov
cmp
icebp
pushf
or
loopne
push
jnp
add
hlt
outsl
mov
push
xor
jp
or
add
data16
add
in
pop
sti
cwtl
cs
mov
lcall
xor
jmp
test
push
in
ficomps
add
add
pushl
add
movsl
add
cmp
jg
adc
lcall
add
popa
add
iret
xor
add
mov
or
add
addl
ja
nop
and
cmpsl
add
in
in
scas
add
incb
add
fcoms
add
add
lock
dec
leave
in
mov
pop
lods
inc
add
cli
xchg
mov
decl
add
or
add
stos
ja
addb
out
pop
aas
loop
cld
or
incl
add
jg
add
rolb
add
add
fidivl
jo
call
cmc
mov
add
xor
call
aad
add
inc
add
dec
rolb
xor
jmp
xchg
jnp
add
data16
imul
cmp
cli
mov
cmp
add
jl
sbb
lret
xchg
mov
lock
inc
add
xchg
push
movb
mov
add
test
jmp
push
addb
add
popf
adc
ljmp
or
loope
or
lods
and
flds
dec
addb
cs
push
add
mov
repnz
sub
movsl
add
test
outsb
shlb
nop
lods
outsl
data16
in
or
add
pop
cltd
push
add
insl
dec
loop
mov
sub
mov
push
push
add
ret
add
mov
push
ret
aas
scas
add
add
call
jmp
add
add
add
in
jecxz
push
add
rolb
lcall
scas
adc
push
cmpsl
add
lea
add
cltd
push
add
mov
sub
cld
movsl
add
daa
add
inc
add
insb
cld
out
mov
add
add
push
fldcw
inc
add
iret
cmp
mov
add
push
add
dec
push
add
out
jnp
add
xchg
inc
add
js
ljmp
ja
add
sbb
dec
mov
fwait
push
jmp
and
in
in
pushf
dec
push
add
adc
pushl
mov
push
add
add
pop
lret
sarl
cmp
scas
lock
negl
scas
sub
call
add
in
add
stc
jne
dec
fsubp
add
add
ds
add
xchg
dec
cmp
add
mov
mov
add
int
add
xchg
push
ljmp
pop
pop
repz
rolb
add
ja
mov
cmc
sub
jae
call
cs
neg
cld
popa
add
addb
dec
jge
add
jle
aam
mov
pop
or
mov
add
call
add
decl
mull
mov
add
add
fwait
mov
cmp
fnstsw
mov
scas
aas
std
inc
add
in
mov
add
ret
add
add
xchg
jge
add
ljmp
xchg
addl
add
sbb
pop
pop
mov
test
cmp
imul
push
pushf
add
incl
mov
add
cmp
add
sbb
add
xor
pushl
fiaddl
mov
mov
add
add
add
add
ds
push
add
jno
jmp
add
add
bound
ljmp
call
lret
push
ret
add
add
push
xchg
fiaddl
add
mov
dec
out
loop
insl
loope
pusha
add
dec
mov
mov
daa
add
add
dec
in
cltd
addl
cmc
adc
jge
sbb
je
test
cmc
test
out
jmp
add
outsb
mov
add
sub
mov
cmp
lock
das
push
xchg
insb
mov
imul
add
call
les
roll
and
mov
add
aas
adc
jl
inc
add
lcall
popa
add
add
lcall
inc
add
mov
pop
fdivs
pop
je
add
mov
add
sub
icebp
xchg
cs
in
jne
inc
add
add
jmp
incl
clc
sub
jp
test
clc
stos
adc
decl
pushf
fidivl
add
add
mov
add
xchg
sti
fdivrl
add
add
incl
add
lcall
add
push
add
cmp
nop
push
lock
int
mov
outsl
mov
inc
add
jp
nop
addb
push
add
lock
add
cmc
sbb
add
inc
add
cmp
add
pop
jnp
addl
jmp
lcall
push
xlat
sub
push
mov
or
les
sbb
xor
jmp
or
cwtl
jo
mov
sar
add
ljmp
xchg
in
push
jae
pushl
decl
cmc
lea
push
mov
add
mov
add
out
inc
add
pop
inc
add
inc
add
jne
out
les
and
enter
movb
and
jmp
add
push
add
push
cmp
add
jg
and
push
ficoms
add
fsub
add
addb
popa
add
enter
add
sub
add
add
out
loop
pushl
mov
or
add
pop
pusha
add
addb
and
jnp
add
pop
jp
xlat
fwait
ja
rolb
add
xchg
addb
fcmovbe
fbstp
daa
add
add
add
add
dec
stos
mov
dec
and
add
roll
add
arpl
ljmp
cmpsl
add
add
ffree
add
pushl
add
out
pop
or
jecxz
fdivl
lcall
lds
xchg
and
lcall
inc
add
add
jle
add
mov
cmp
filds
out
adc
mov
xlat
lcall
hlt
sbb
push
add
add
insb
xrelease
ficomps
add
push
hlt
inc
add
add
decl
sub
imul
addb
dec
mov
call
add
xlat
add
lcall
add
sbb
out
lock
mov
push
pop
add
sbb
add
jb
cmp
add
mov
pop
movsb
add
add
dec
mov
add
test
pop
pusha
add
add
pushl
add
xchg
sub
dec
mov
inc
add
mov
add
push
pushf
je
add
decl
push
add
call
addl
lret
add
idiv
lods
inc
add
inc
add
add
add
fistps
mov
divb
clc
addb
xor
mov
les
dec
jbe
mov
add
sub
ss
insl
aad
mov
jl
jp
add
mov
lock
addb
jo
jmp
add
fcmove
aam
inc
add
mov
add
push
pop
jnp
cmp
loopne
lds
ffreep
add
call
xchg
jbe
add
jl
xchg
mov
das
stos
insb
mov
roll
inc
add
add
insl
sub
add
rolb
icebp
out
jg
push
add
loop
xor
call
add
mov
pop
out
movsl
add
add
and
jns
pushf
addl
cmp
leave
lret
add
cmp
arpl
ljmp
add
dec
mov
sub
add
add
mov
mov
inc
add
les
movb
xor
ljmp
add
incl
adc
inc
add
add
decl
and
faddl
imul
jp
pop
push
add
lcall
popf
and
call
add
sarb
pop
std
inc
add
arpl
pushl
add
jo
decl
int
add
fbstp
ficomps
dec
imul
add
mov
lcall
mov
cmp
jne
add
ret
add
add
inc
add
pop
jns
jge
mov
and
iret
jbe
pushl
call
add
es
adc
jmp
add
notl
xchg
jge
bound
inc
add
repz
aad
adc
jmp
xchg
into
jl
sbb
add
or
mov
add
mov
cmp
add
outsl
mov
jnp
scas
and
incl
pop
fimuls
add
sbb
add
mov
or
ljmp
mov
jmp
jae
decl
iret
mov
add
add
add
movsl
add
add
addl
add
push
sbb
nop
js
add
sti
cmc
mov
movsb
add
incl
add
add
scas
fistl
mov
pop
cmp
les
aaa
lods
fsubl
pop
xchg
lods
aad
dec
test
jmp
in
addl
out
dec
or
add
les
inc
add
jo
mov
addb
xchg
fwait
cmc
outsl
push
add
fadd
add
sbb
mov
cmp
lahf
dec
daa
add
pop
aas
add
pushl
add
movb
cmpsb
add
int
add
outsl
add
call
sub
and
xor
xchg
inc
add
jb
decl
sbb
mov
add
aad
xor
pushl
mov
insb
add
pushl
add
psadbw
add
insl
add
sahf
inc
add
push
add
sub
add
push
mov
add
sti
push
add
sbb
test
xchg
pop
insl
mov
adc
decl
jmp
add
inc
add
sub
add
mov
mov
xchg
test
inc
add
je
test
and
out
sub
fs
adc
jle
jns
push
add
add
loop
cmp
pinsrw
addb
add
cmp
add
arpl
lcall
add
adc
incl
add
pusha
add
mov
std
loop
jmp
add
stos
jle
leave
test
add
pop
inc
add
add
add
jge
fwait
insb
mov
add
cli
pop
pop
lods
bnd
stos
cmp
inc
add
add
movb
xor
jmp
add
out
ss
imul
mov
add
in
push
jae
incl
mov
addb
inc
add
cmp
cmc
je
std
je
add
mov
add
mov
add
inc
add
add
add
mov
and
call
add
add
or
add
jnp
add
xchg
loopne
aaa
arpl
std
stc
adc
pushl
mov
mov
add
push
mov
add
adc
incl
xchg
push
add
cmp
xchg
jl
jb
jmp
popf
imul
add
pop
jae
pushl
add
cltd
and
call
mov
xchg
jo
mov
out
or
add
out
sub
les
pop
sbb
cld
pop
lock
add
lock
push
add
fwait
add
add
js
js
cmpsl
add
add
xor
jae
mov
add
push
mov
inc
add
add
mov
imul
jp
in
or
and
pop
push
shl
xchg
sbb
add
add
in
and
jp
add
adc
pushl
lret
jp
mov
cmp
test
add
mov
mov
mov
or
push
add
xchg
sbb
add
sbb
jns
add
test
add
add
add
mov
push
add
add
incl
add
movsb
add
push
add
jmp
cld
arpl
ljmp
add
mov
inc
add
call
mov
add
xchg
out
fbld
add
call
je
add
add
mov
fldenv
add
adc
in
mov
adc
ljmp
mov
add
inc
add
dec
xchg
nop
fbld
push
xchg
nop
cmp
add
add
out
fsubrs
jge
push
inc
add
lods
sahf
out
cmpsl
add
add
mov
mov
add
pop
int3
dec
iret
mov
in
add
incl
add
data16
pop
add
add
mov
sub
add
ss
pop
cmp
xor
pushl
add
out
inc
add
adc
jmp
add
mov
cmp
add
xor
dec
and
ljmp
test
clc
and
call
incl
inc
add
xor
incl
jmp
add
and
pushl
addb
ficompl
xchg
pop
les
sub
add
into
cmp
add
mov
clc
xchg
mov
push
ljmp
sbb
xchg
dec
jp
add
jae
jmp
add
add
xlat
out
cmc
xlat
push
add
fimull
mov
add
jns
movsb
add
add
addb
movl
pop
inc
add
jnp
daa
add
not
ja
fs
add
pushl
rorl
add
add
sub
out
xchg
ficompl
popl
add
lahf
cmpsb
add
add
lcall
fstps
into
insl
arpl
ljmp
jo
lcall
sahf
stc
ret
or
movb
icebp
jmp
add
shr
aad
in
and
jmp
in
mov
das
out
add
add
in
adc
decl
insb
and
xor
decl
add
or
jge
xor
jmp
popa
add
in
jl
or
xchg
fidivl
add
and
push
lods
xchg
jns
push
add
sub
push
in
lret
add
or
add
gs
inc
add
jnp
sbb
inc
add
cmp
add
pop
xor
mov
imul
add
mov
add
pushl
add
jmp
pop
push
add
fdiv
aam
inc
add
cmp
jl
push
add
lcall
add
jnp
sahf
mov
sbb
add
add
mov
sti
pop
fidivl
xchg
jbe
dec
mov
sbb
push
fcoms
inc
add
sahf
aam
add
or
pop
mov
addb
add
in
lret
add
fmull
dec
je
mov
icebp
pop
das
imul
add
add
adc
push
stos
test
pop
jmp
adc
jl
inc
add
jl
dec
mov
pop
cmp
add
data16
add
jge
add
push
add
jecxz
nop
movsb
add
jb
lcall
test
inc
add
rolb
jmp
add
sub
mov
sub
adc
call
add
xor
ljmp
add
jns
xor
xchg
mov
mov
add
pushf
aaa
cmp
mov
in
dec
outsl
mov
jg
push
add
xor
add
add
mov
ds
push
add
jne
add
iret
add
inc
add
fisubl
add
mov
pop
mov
jmp
inc
add
mov
xchg
dec
cmp
cwtl
jle
pop
pop
fwait
aad
add
dec
mov
add
bound
inc
add
add
ljmp
pusha
add
xchg
testl
call
add
lahf
lea
xchg
inc
add
mov
decl
add
mov
xchg
addb
inc
add
xor
jp
push
sti
dec
icebp
out
leave
mov
add
pop
test
imul
jb
dec
and
cld
xchg
push
add
sub
cmc
xor
not
pusha
add
adc
call
push
sbb
lock
outsl
movl
jae
decl
and
das
in
mov
mov
rolb
sub
xchg
inc
add
loopne
int
or
xchg
add
incl
ljmp
add
dec
addl
mov
xor
lcall
jmp
add
inc
add
ret
add
add
mov
mov
add
mov
les
jnp
cld
xchg
push
stc
rolb
xchg
xlat
popa
add
sub
add
lods
test
lds
aad
add
sbb
arpl
call
add
stc
mov
mov
jge
mov
sbb
in
lods
adc
incl
add
stc
out
ss
and
jns
out
jg
ds
add
roll
add
inc
add
mov
in
mov
jmp
dec
push
inc
add
sbb
push
or
pop
sub
shrb
cli
cmp
enter
cs
dec
movsl
add
jns
mov
add
add
mov
add
cmp
in
ds
add
xor
add
mov
mov
in
xor
push
pushf
and
mov
add
out
dec
inc
add
lods
je
addb
fs
in
sub
cmp
out
xchg
js
push
jae
jns
add
cmp
push
inc
add
clc
push
add
aas
inc
add
push
add
add
pop
ret
inc
add
adc
out
adc
pushl
sbb
push
add
push
add
xchg
jmp
lret
js
jecxz
lea
loopne
sbb
lds
push
add
xor
dec
negl
adc
decl
mul
add
push
es
xor
scas
sub
fisttpll
js
add
add
add
add
imul
xor
pop
mov
cmc
sbb
add
and
lcall
xchg
adc
call
add
inc
add
sub
incl
mov
dec
sahf
mov
xor
incl
stos
int3
or
ljmp
decl
add
js
xor
mov
adc
or
data16
call
test
dec
fwait
sbb
cmc
jecxz
roll
add
les
jecxz
jbe
mov
add
mov
add
mov
mov
inc
add
add
add
push
daa
add
add
cmp
nop
sub
ja
xchg
scas
popa
add
push
xor
ljmp
mov
xchg
xchg
loopne
or
repz
cmp
add
stos
sub
add
decl
pop
pop
mov
ret
add
xchg
mov
nop
adc
mov
mov
cltd
pop
mov
add
sub
mov
add
jbe
add
inc
add
lret
push
add
mov
stc
adc
inc
add
ljmp
add
mov
add
push
or
out
dec
ret
or
add
test
add
add
add
add
push
add
fldl
push
add
add
add
fisttpl
pop
lret
or
adc
jmp
xor
jmp
addl
cltd
cmp
cld
mov
mov
add
loope
inc
add
decl
add
fsubrl
mov
xor
jle
add
rcl
rclb
incl
add
jo
jmp
add
imul
aas
cmp
push
add
push
out
pop
ret
add
add
jp
add
pop
shlb
xchg
cmpsb
add
push
jle
test
ljmp
inc
add
cltd
sbb
sbb
fdivrs
add
and
ljmp
cmp
test
roll
add
loopne
aad
add
ja
jb
decl
add
ret
pop
xor
jg
sub
or
addb
add
and
decl
lds
outsb
push
add
or
scas
jns
xchg
mov
add
incl
add
mov
add
fistpl
mov
jmp
add
add
add
add
add
and
call
add
mov
add
pop
pop
aad
addl
mov
xlat
mov
jne
fidivrs
add
stos
dec
xchg
test
inc
add
add
sub
ffreep
add
and
call
push
add
mov
sahf
cmp
xor
call
cs
out
daa
add
dec
xor
add
dec
sbb
decl
add
add
sub
call
mov
cltd
xchg
add
jmp
movsb
add
test
cmp
add
add
addb
xchg
xchg
push
int
ficomps
add
jmp
add
stos
pusha
add
lcall
cmc
xchg
mov
and
add
std
jecxz
bnd
leave
test
mov
bound
call
fidivs
ljmp
int3
sbb
add
adc
pushl
ljmp
pop
xor
incl
add
pop
push
xchg
adc
jg
add
dec
ret
add
incl
in
jmp
add
cmp
cld
cmp
sti
popf
pop
jbe,pt
add
fwait
movl
repnz
add
movsb
add
ljmp
xchg
adc
ljmp
push
sub
fmull
out
pop
adc
addl
dec
test
and
ljmp
popa
add
arpl
incl
call
add
ret
add
add
sbb
add
cltd
pop
addl
push
or
xchg
into
adc
lcall
add
stos
adc
push
cmpsl
add
add
add
dec
add
jecxz
sbb
or
ljmp
add
jo
ljmp
inc
add
ljmp
mov
add
lea
jg
popa
add
or
add
pop
leave
sbb
jmp
add
push
add
mov
rorb
jge
cli
or
ret
add
mov
cltd
out
cld
inc
add
mov
add
dec
dec
mov
sahf
cmpsl
add
add
test
add
dec
mov
cmpsl
add
add
lret
repz
add
dec
xchg
cs
add
adc
decl
in
push
add
mov
arpl
jl
dec
inc
add
mov
pusha
add
leave
mov
jae
jmp
add
xor
add
xchg
cmp
pop
je
decl
jo
call
mov
cmp
repnz
add
jmp
int
jg
add
pcmpeqw
cwtl
pop
jge
add
add
add
enter
add
cmp
clc
sub
add
pop
mov
int
inc
add
icebp
std
inc
add
addl
mov
rolb
add
jmp
jp
les
mov
das
jp
add
xor
pushl
add
sahf
push
add
xor
ljmp
xor
in
mov
loop
daa
add
loopne
push
or
add
sbb
xchg
pop
out
pop
aaa
inc
add
dec
xchg
pop
add
jmp
add
aam
add
add
add
add
nop
mov
cltd
aaa
xor
xor
incl
clc
leave
xor
pushl
adc
lcall
repz
ljmp
and
lcall
xchg
nop
outsl
scas
clc
dec
lcall
lcall
add
sbb
push
sbb
sub
sahf
inc
add
clc
cmp
add
add
push
add
add
ljmp
jg
sub
pusha
add
fmuls
xchg
loop
rorl
dec
jns,pn
sub
fistps
cli
mov
stos
cwtl
add
decl
mov
jb
jmp
add
mov
pop
push
add
adc
lcall
mov
add
jg
icebp
mov
in
mov
in
cmpsb
add
add
pushl
add
mov
lahf
in
or
add
add
daa
add
add
insb
or
fcomp
mov
sbb
add
add
mov
ja
mov
lcall
iret
into
push
add
adc
sub
mov
mov
push
test
repz
js
dec
jns
in
push
adc
pop
fdivrp
xor
decl
inc
add
js
xor
pushl
xchg
mov
ds
add
jbe
add
rolb
add
add
mov
bound
push
sti
mov
pushf
pop
jae
jmp
add
sub
add
call
jg
add
add
repnz
and
pushl
jmp
ss
add
rol
add
pop
cld
ret
add
fistpll
lret
cltd
xor
incl
pop
jno
fidivrs
lahf
cwtl
dec
mov
mov
inc
add
add
add
popf
in
jns
fcoms
addl
add
incl
add
sbb
add
call
addl
add
mov
lods
scas
cli
imul
pop
xor
decl
addb
or
xlat
dec
sbb
incl
decl
and
lcall
and
sbb
add
inc
add
add
or
add
add
push
and
inc
add
ljmp
dec
push
add
sub
add
add
nop
adc
dec
dec
dec
cmp
push
in
movsb
add
lcall
out
lret
enter
pop
jns
aam
or
add
add
loopne
lcall
ljmp
or
das
test
jnp
mov
add
lret
stos
rclb
push
xchg
sbb
add
jecxz
xor
call
stc
fisubrl
add
push
sbb
movsb
add
int3
cmpsb
add
fcoml
add
pop
out
adc
decl
addb
add
into
loopne
add
xor
decl
movb
add
incl
add
and
call
add
xchg
ljmp
lcall
incl
mov
add
arpl
fadd
add
into
jmp
add
mov
shll
inc
add
adc
lcall
add
les
loope
jae
pushl
add
call
call
sbb
addb
inc
add
mov
arpl
ljmp
cmp
xor
add
pop
imul
outsb
out
jg
add
add
cmp
std
mov
add
add
add
fsts
lcall
add
rcr
ljmp
push
cmpsb
add
pushl
or
add
cmp
add
and
inc
add
dec
xchg
ret
add
mov
call
out
in
inc
add
mov
mov
add
push
scas
push
imulb
adc
decl
push
fldenv
mov
xchg
xchg
lea
add
mov
lcall
dec
xchg
cmpsb
add
add
add
sub
add
decl
xor
lcall
adc
popa
add
loopne
cmpsb
add
inc
add
add
outsb
js
shlb
call
push
add
add
mov
add
add
pop
adc
jmp
add
add
daa
add
add
jmp
and
incl
add
jl
add
adc
jmp
add
das
cmp
mov
add
add
xchg
rolb
insl
insb
pushf
lahf
cld
sbb
notb
add
ja
aaa
test
sbb
push
movb
add
jg
push
add
inc
add
test
jnp
add
jecxz
and
push
add
jl
add
stos
movsb
add
inc
add
add
call
jmp
add
add
sbb
add
or
push
add
dec
push
add
xchg
jno
incl
add
rclb
cmp
cmp
ljmp
int3
rcll
add
cld
out
mov
add
ljmp
add
ds
leave
repnz
ss
push
cltd
jb
cmp
cld
idivb
out
sub
add
les
adc
cli
add
jmp
add
push
repz
or
addb
or
add
xchg
lock
lock
sub
jmp
add
add
adc
call
pushl
call
lds
push
dec
jge
lock
pop
out
cmpsb
add
fwait
idiv
jecxz
xor
jmp
add
push
add
cld
push
add
repz
loop
sbb
fistpll
push
xchg
int3
rorl
add
add
add
or
lods
push
movb
mov
ds
push
ja
pop
sahf
inc
add
or
pop
or
in
jmp
add
add
and
jmp
mov
add
add
aaa
xor
jmp
jmp
add
mov
fcmovbe
fwait
add
loop
mov
or
add
inc
add
repnz
ret
sub
and
pushl
out
addb
add
mov
je
inc
add
aas
inc
add
inc
add
jnp
out
movb
jge
add
sbb
movb
push
add
add
call
das
xchg
dec
movl
decl
addb
and
pusha
add
sbb
jle
add
push
cmp
add
call
into
inc
add
add
incl
daa
add
daa
add
test
clc
sub
add
pop
and
add
in
xchg
push
mov
jecxz
aas
lods
cmpsl
add
xchg
fisttpl
call
add
xchg
add
add
clc
cmp
sub
fwait
cmpsb
add
jle
add
xchg
dec
mov
dec
xchg
lret
push
mov
scas
push
lds
sbb
lcall
pusha
add
xor
cmp
add
decl
add
push
inc
add
and
pushl
aas
mov
or
sbb
ds
add
outsb
cmp
xchg
xor
pushl
call
add
add
rolb
add
add
sub
add
int
add
add
add
loop
rolb
add
inc
add
stc
add
sub
sbb
addb
rolb
into
jle
lods
jnp
jp
fdivrl
shlb
stos
aam
mov
mov
pop
sbb
ljmp
incl
add
mov
in
or
js
add
sub
pop
addl
in
data16
popa
add
inc
add
add
add
das
nop
xchg
iret
cmpsl
add
je
jns
pop
push
ret
add
add
pushf
popa
add
push
add
dec
shlb
and
jmp
add
rclb
cmp
popf
add
lcall
int
inc
add
addb
push
add
mov
repnz
stc
imul
inc
add
dec
jo
incl
add
add
incl
dec
cld
xchg
mov
dec
lods
bound
decl
lahf
out
push
add
pop
adc
arpl
pushl
int3
inc
add
add
and
call
lea
pop
mov
sbb
add
add
mov
pushl
call
lock
jbe
shrl
lock
movsb
add
lret
dec
movsl
add
push
push
clc
inc
add
call
dec
pop
clc
jecxz
lods
imul
xchg
pop
add
inc
add
ljmp
fstp
stos
sahf
imul
decl
mov
add
addb
addb
add
mov
mov
add
add
stos
ror
fisubl
add
and
adc
fisubl
je
sbb
add
add
push
cltd
fcmovnb
add
add
xchg
gs
pop
push
add
pushl
add
push
fdiv
jl
dec
add
decl
out
push
add
in
mov
dec
arpl
pushl
in
push
out
add
jmp
dec
int3
push
add
mov
cmp
inc
add
lcall
add
std
test
iret
js
xchg
imul
add
add
imul
and
jmp
add
shlb
dec
add
add
and
cmp
add
pop
test
mov
add
popf
aad
fdivl
in
mov
and
dec
test
push
loope
icebp
sub
lcall
jne
cmpsb
add
jmp
add
mov
imulb
add
add
or
ljmp
add
sbb
add
aaa
into
shrb
cmp
into
and
jmp
and
incl
add
jno
mov
cli
pushf
xchg
repnz
add
adc
push
sbb
incl
add
data16
add
hlt
mov
add
pop
fwait
lods
mov
add
pushf
daa
add
int3
and
ljmp
add
dec
add
popf
or
shlb
add
test
xchg
sti
rolb
xchg
stos
lock
ja
mov
add
add
in
add
decl
add
sub
fidivrl
cmpsb
add
mov
add
mov
add
pop
add
mov
or
add
mov
mov
popa
add
ret
sub
sahf
ss
and
pushl
mov
dec
dec
outsl
scas
xor
incl
pushl
and
out
addb
adc
jmp
movsb
add
adc
incl
call
mov
add
lds
push
add
out
jp
mov
xor
decl
arpl
incl
add
mov
or
out
rolb
push
add
enter
jae
incl
call
in
movl
jns
or
add
and
call
sbb
add
jb
call
add
sub
inc
add
sbb
in
mov
add
lcall
mov
cmp
mov
add
add
loop
jmp
or
add
push
add
mov
cld
aaa
xor
ljmp
cld
push
call
add
jb
dec
js
add
add
lea
lods
pop
and
ljmp
scas
sub
add
inc
add
sub
or
lods
ret
add
lods
test
mov
lcall
outsb
adc
ljmp
in
js
rcrl
add
jmp
add
jns
add
insb
inc
add
and
call
add
das
fidivrl
dec
addl
mov
dec
jb
cmp
lcall
and
ljmp
ja
add
test
repz
ljmp
mov
iret
scas
push
adc
fsubl
jmp
dec
repz
jns
addl
jno
jmp
lods
sub
add
pop
stos
push
add
outsl
xor
jno
jmp
in
out
dec
lds
addl
lock
add
add
ljmp
scas
inc
add
xlat
inc
add
mov
add
push
pop
sti
nop
adc
add
jg
push
add
sbb
jle
sbb
add
jnp
cmp
adc
ljmp
jecxz
ss
repnz
or
jge
add
mov
addl
cwtl
cmc
inc
add
add
cltd
cwtl
xor
call
dec
cmp
stos
outsb
push
add
xor
lcall
inc
add
xor
in
adc
fwait
mov
add
add
ljmp
in
xor
ljmp
stos
or
pushl
add
sbb
add
adc
decl
pop
jno
pushl
cmp
cwtl
jbe
inc
add
popa
add
pop
bound
jmp
add
movsb
add
stos
ds
mov
add
jo
lcall
add
jmp
mov
add
add
add
mov
cmp
sub
jecxz
outsb
das
mov
push
pop
ss
push
pop
pop
sti
sub
add
jbe
and
pushl
call
stc
xchg
movsb
add
mov
jbe
pop
add
daa
add
dec
or
push
add
add
ret
dec
xchg
mov
add
mov
add
stos
dec
outsb
or
cs
daa
add
add
add
or
out
bnd
add
sub
jmp
jb
push
and
xchg
sub
mov
inc
add
add
add
ljmp
sub
add
cmp
mov
add
lcall
jno
stc
and
add
clc
js
cmc
add
xchg
in
jno
mov
add
mov
xchg
xor
decl
insl
xchg
outsl
mov
scas
fwait
mov
add
loope
xor
ljmp
add
add
leave
fnstenv
sti
xor
call
sub
jbe
add
scas
and
out
or
lret
or
add
loope
xchg
xchg
sub
add
add
test
mov
movsb
add
cwtl
xor
test
dec
add
jmp
add
pop
jns
mov
add
add
xchg
mov
mov
roll
addr16
add
pop
cmp
adc
sub
add
fbld
pushl
add
inc
add
cmpsb
add
pushl
ja
insl
fistpl
lahf
sarb
push
add
ss
iret
iret
mov
xchg
xchg
xor
lcall
xchg
fdivl
ljmp
add
stc
inc
add
mov
add
shlb
add
stos
pop
hlt
cli
xchg
cmp
dec
outsl
push
test
add
pop
cmpsb
add
add
push
movl
add
icebp
int3
add
xchg
test
fstp
and
ljmp
add
jle
xor
stos
stc
jp
add
shrl
imul
add
add
loopne
sub
xchg
push
add
jbe
add
sbb
add
cmp
xor
sbb
popa
add
adc
shl
mov
addb
add
or
and
jmp
add
push
add
repz
mov
xor
dec
add
xor
lcall
cmc
popa
add
lds
xchg
and
fists
pushl
add
xchg
cld
ljmp
ljmp
xchg
outsb
cmp
lods
mov
add
add
add
hlt
xchg
mov
add
xchg
jns
adc
decl
rcr
jp
inc
add
pop
lahf
add
ljmp
aas
pop
data16
mov
jecxz
test
jmp
jecxz
xchg
sbb
adc
decl
add
dec
ds
dec
popf
fs
lret
pop
les
imul
add
xchg
pop
fadd
add
insb
popa
add
aas
or
sbb
das
push
in
fwait
adc
add
sub
push
add
sub
lcall
add
add
jae
pushl
data16
add
roll
scas
mov
ljmp
jae
jmp
jmp
fildl
add
pop
repz
add
add
inc
add
add
movsl
add
add
xchg
lcall
addl
ljmp
sub
rcrl
add
lret
xchg
dec
push
xor
push
int3
add
cmpsb
add
pop
pushl
scas
in
mov
jno
lcall
sbb
repnz
add
movsb
add
add
std
cmp
test
add
jmp
add
or
xchg
mov
jbe
test
mov
adc
or
iret
jmp
inc
add
add
cmp
push
jecxz
push
add
out
push
das
sbb
jns
jbe
xchg
movsb
add
mov
inc
add
movb
mov
add
cmpsb
add
add
pushl
outsl
out
in
add
ds
mov
repz
jo
jmp
add
jp
add
fnstenv
or
add
push
lods
das
inc
add
add
inc
add
add
xchg
adc
mov
add
test
mov
add
add
jb
incl
pushl
jns
add
jbe
dec
push
setle
dec
aaa
lret
adc
add
add
sbb
jmp
addl
scas
pop
cmpsl
add
cltd
dec
imul
push
push
aas
cmp
push
add
push
inc
add
imul
add
shr
lods
stc
adc
fsubrl
add
sbb
ret
add
add
inc
add
xchg
push
add
sti
inc
add
sub
incl
lods
pop
leave
add
incl
add
dec
xchg
ljmp
loop
jno
pushl
lea
jmp
add
add
mov
addb
lods
addl
cld
cwtl
sbb
mov
jae
ljmp
jle
and
js
add
add
lcall
mov
or
inc
add
mov
add
adc
ret
call
add
repnz
add
unpckhps
sbb
add
mov
jne
add
add
call
pop
repnz
test
inc
add
and
push
lret
inc
add
cwtl
pop
dec
loopne
fisttpll
add
inc
add
push
add
test
imul
mov
mov
add
lods
add
adc
test
mov
inc
add
xacquire
adc
add
roll
add
icebp
push
add
test
movb
inc
add
addl
incl
xlat
ficoms
push
add
pandn
dec
push
cmp
jo
jmp
add
add
nop
jno
lcall
cs
add
sub
mov
fnstcw
push
or
xchg
and
aaa
xchg
int3
xor
jle
lcall
lcall
ja
xchg
loope
insb
xchg
sbb
pop
mov
add
add
popa
add
mov
add
cmp
add
adc
pushl
add
sub
je
stos
lds
or
add
cltd
ds
push
add
and
decl
add
xor
jmp
pushl
dec
rol
add
sahf
icebp
sbb
add
into
dec
shlb
add
cmp
pop
cmp
ret
pop
or
inc
add
fcmovne
mov
jg
sbb
add
out
adc
decl
sbb
xor
lcall
addl
add
int3
in
dec
es
add
addl
test
and
pop
addb
pop
bswap
push
add
push
pop
add
les
leave
push
sbb
int3
pop
inc
add
dec
int
mov
xchg
jecxz
xchg
mov
add
fcomps
in
dec
jmp
add
pop
std
loopne
adc
add
adc
jmp
add
push
add
fwait
pop
push
add
sbb
add
in
insl
rclb
mov
xchg
push
mul
add
aad
clc
cmp
xor
and
call
add
xor
pushl
add
xchg
fadd
add
addl
in
pushf
or
add
rolb
leave
cli
nop
lods
or
add
jecxz
pushf
enter
std
ret
jbe
daa
add
in
decb
push
add
sbb
add
lret
flds
das
push
out
nop
adc
jmp
sbb
add
xlat
push
rclb
cwtl
cli
dec
and
decl
dec
sbb
stos
adc
or
add
xchg
jle
mov
add
add
jmp
add
add
pusha
add
mov
add
sbb
add
xlat
je
add
and
incl
add
cs
in
mov
push
add
cmp
jb
inc
add
add
jbe
and
call
pop
fimuls
add
cli
jne
repz
and
lea
jnp
add
addl
dec
pop
jb
pushl
add
mov
decl
xor
jge
add
jmp
add
fidivrs
scas
loopne
roll
add
add
ja
add
xchg
add
cs
jge
cltd
in
cmp
or
fisubs
lcall
hlt
add
pushl
test
add
out
ror
sti
icebp
test
rcl
or
cli
addb
add
std
cmp
sbb
incl
jge
add
shll
add
mov
pushl
add
mov
add
add
add
add
push
int
push
pop
daa
add
rcrb
imul
dec
sub
add
jg
ficoml
call
adc
incl
ljmp
dec
push
add
jmp
add
insb
in
cmc
jo
ljmp
sub
and
jmp
add
pop
inc
add
push
add
int3
dec
cmp
cmpsl
add
hlt
pop
je
aas
pop
inc
add
add
hlt
xlat
inc
add
ss
add
cmp
decl
add
add
add
inc
add
add
sti
mov
dec
or
add
mov
xchg
jg
add
popa
add
sub
add
aam
std
stos
sahf
mov
add
decl
jbe
mov
into
jecxz
lods
lcall
icebp
rolb
aam
sbb
insl
mov
and
jecxz
and
or
incl
and
incl
add
or
lods
push
add
cmc
pop
push
cmpsb
add
pop
lods
cmpsl
add
inc
add
rolb
pop
and
mov
mov
vmread
add
mov
add
sub
test
lahf
push
pusha
add
mov
add
rcl
jb
jmp
add
pop
xchg
push
lea
add
cmp
mov
pop
jp
fidivl
add
push
add
jge
adc
jmp
jb
ljmp
insb
cmp
add
test
imul
cmp
test
inc
add
push
cmc
inc
add
add
mull
add
call
imul
mov
pushl
add
mov
add
fsubr
mov
int
sub
add
test
ret
add
add
add
add
lock
fidivrs
add
in
sbb
or
ljmp
add
jl
push
lods
xchg
bound
jmp
add
pop
add
jmp
lcall
or
jns
out
inc
add
stos
call
push
fldcw
aam
cmp
pushl
add
aam
push
scas
mov
sbb
adc
dec
push
in
je
dec
rolb
add
pop
lahf
mov
and
std
loope
outsb
filds
add
jle
inc
add
pop
jnp
add
sbb
add
inc
add
cmp
add
pushl
dec
jb
call
outsl
popf
adc
jp
repnz
add
push
add
cmc
jno
call
call
ljmp
sub
pushl
add
nop
repz
cmc
push
adc
add
insl
jp
mov
xchg
clc
pop
add
sub
sbb
sbb
add
repnz
pop
mov
lods
push
cmp
pushl
add
xchg
jnp
xchg
int3
cld
ds
add
jmp
add
add
jmp
ror
mov
lock
adc
decl
push
add
or
add
pop
popf
adc
dec
loopne
mov
add
cmc
mov
ret
mov
incb
add
add
loope
xor
call
out
mov
jecxz
stos
mov
or
int
lods
mov
js
or
add
gs
mov
cltd
or
dec
sbb
cmp
add
push
pop
jno
incl
incl
adc
call
lcall
add
or
add
call
add
xor
xor
jmp
cmc
bound
decl
mov
sub
xor
jmp
add
dec
fsubs
jmp
or
add
pop
fstpt
add
add
push
add
arpl
decl
lahf
nop
sub
add
fwait
int
add
hlt
dec
ljmp
add
pop
add
ljmp
add
fistpll
and
ljmp
lret
add
lcall
movsb
add
push
stos
and
pushl
jge
sar
inc
add
adc
call
lcall
int
mov
pop
data16
or
addl
in
fiadds
ja
add
or
push
jmp
pop
stos
and
mov
pop
outsl
or
cmp
pop
mov
xchg
enter
add
add
clc
sbb
jmp
add
add
mov
add
xchg
mov
std
sbb
leave
lahf
jo
lcall
addl
out
xchg
mov
adc
jmp
add
jno
call
add
or
popa
add
dec
xchg
inc
add
or
jae
pushl
add
cs
addl
push
das
insl
clc
mov
sbb
inc
add
mov
call
lcall
je
add
aam
add
les
addl
iret
cmp
fistpl
aas
xor
dec
rcrb
add
mov
sub
pop
add
add
add
jmp
add
and
jl
add
or
cltd
mov
sub
cli
add
lcall
ljmp
fldt
push
and
xor
movb
test
pop
dec
dec
aas
inc
add
inc
add
push
add
pusha
add
pop
xor
incl
gs
inc
add
add
add
mov
sbb
mov
cmp
fadds
test
add
and
call
out
cmp
add
add
and
xchg
sub
in
or
mov
imull
fldt
add
rolb
push
add
mov
add
push
pusha
add
mov
mov
pushl
jmp
add
xchg
aas
jl
scas
imul
in
cmp
add
or
add
add
add
jecxz
lret
addb
add
mov
add
fisttps
cmp
xchg
popa
add
pushf
adc
add
outsl
inc
add
add
pop
and
jmp
rorb
add
jp
add
mov
or
push
cmc
pop
dec
jno
jmp
add
cmpsb
add
js
and
ljmp
icebp
lret
cmpsl
add
testl
incl
sub
mov
testl
add
add
and
call
incl
fnstsw
add
pushl
popf
aam
or
sub
jno
call
call
add
test
add
add
movsb
add
add
popa
add
inc
add
add
add
xor
call
fwait
push
xchg
adc
jmp
mov
add
push
add
and
pushl
dec
mov
call
add
jae
pushl
int3
or
data16
loop
les
aas
mov
and
mov
inc
add
add
jl
adc
jmp
add
add
jmp
push
cmp
arpl
decl
ljmp
add
jecxz
add
cmp
iret
lods
clc
sbb
xchg
stc
mov
add
mov
add
mov
add
add
push
add
push
sbb
add
incl
jnp
dec
jl
mov
add
add
cli
scas
mov
push
add
roll
test
imul
add
arpl
call
mov
add
inc
add
add
add
lret
popf
mov
aam
shl
or
outsb
les
pop
add
ljmp
daa
add
loop
and
jns
jp
add
loope
jne
jns
add
pop
xor
pop
test
or
add
jns
enter
adc
jg
add
mov
jl
popf
mov
add
scas
xchg
movsl
add
add
repnz
outsb
dec
xchg
rolb
imul
add
sub
lcall
add
push
mov
add
mov
add
sbb
and
pushl
add
mov
call
mov
add
mov
add
cmpsl
add
add
push
cmp
loopne
notl
add
sbb
and
dec
jp
imul
or
add
ret
add
lcall
bound
decl
incl
add
fwait
push
loopne
in
push
add
mov
jae
incl
add
add
mov
jmp
push
add
add
aas
jmp
push
add
xchg
or
aas
addr16
into
inc
add
hlt
roll
or
pushl
movsb
add
mov
add
mov
movb
filds
lcall
pop
xchg
das
pusha
add
cwtl
add
mov
fcoms
call
loop
psubusb
add
addl
jl
js
test
dec
imul
add
sbb
add
add
or
sti
sbb
call
add
lcall
dec
inc
add
sbb
mov
jno
pushl
mov
movsb
add
add
std
addb
add
pushl
add
sbb
call
in
cli
ror
test
fs
jo
incl
cmp
aam
add
xor
decl
adc
add
inc
add
je
and
call
cmpsb
add
ss
add
call
mov
add
and
cmp
movb
push
add
jo
lcall
insb
adc
insl
add
ljmp
lcall
jg
cltd
stos
lahf
jg
das
add
lcall
jp
add
movsb
add
incl
push
fstps
lret
pop
sub
cmpsb
add
add
dec
mov
add
xor
jns
mov
and
ljmp
add
add
mov
sbb
jnp
push
lcall
push
mov
push
add
jmp
mov
add
add
sbb
pop
fadd
add
out
pop
mov
fwait
addb
add
scas
into
ret
add
pop
fwait
pop
sahf
loope
ds
adc
incl
mov
mov
mov
add
fisubs
add
in
stc
call
jo
decl
add
movsb
add
daa
add
push
add
pop
fisttps
movsl
add
roll
fstps
add
jp
adc
call
repz
add
sbb
add
aad
bound
jb
jmp
add
add
add
push
les
sub
add
dec
push
add
lcall
adc
lcall
add
in
xor
call
lcall
imul
mov
out
mov
insl
aam
ja
leave
mov
add
cmc
sbb
ljmp
popf
outsl
imul
mov
roll
sbb
add
add
sbb
add
das
in
pop
push
adc
mulb
jmp
pushl
inc
add
outsl
jl
jae
call
jmp
add
mov
add
lcall
mov
imul
and
lcall
add
add
add
xor
pushl
je
push
repnz
add
add
stc
lahf
bnd
xor
pop
out
lods
lahf
addl
xchg
xchg
pop
and
decl
dec
cmc
popa
add
mov
adc
out
push
add
cmp
movl
test
add
dec
filds
add
int
sbb
ljmp
ret
nop
adc
cmp
add
daa
add
in
xchg
sbb
mov
out
cmpsl
add
xchg
mov
add
add
jl
add
adc
call
add
inc
add
repnz
dec
and
call
fidivrs
xlat
and
in
fdivl
add
aad
fs
arpl
ljmp
data16
call
add
add
addb
add
filds
lock
repz
test
lahf
stc
insb
lret
sub
dec
ds
xlat
clc
into
aaa
xchg
xchg
pop
dec
push
add
xchg
imul
add
pop
jp
add
jmp
ljmp
jbe
dec
faddl
dec
fwait
jge
add
inc
add
fldt
push
add
sbb
enter
add
add
lds
aad
iret
or
push
cmp
incl
add
xchg
ljmp
add
add
or
add
dec
pop
repz
rcr
xchg
pop
in
mov
cli
push
out
cmp
imul
lock
add
inc
add
jmp
popf
mov
adc
lcall
sbb
addl
cmp
add
xor
arpl
ljmp
push
cld
push
sbb
test
xchg
cwtl
inc
add
add
adc
push
add
outsl
das
mov
add
mov
loopne
lds
jns
rolb
shl
fistl
outsb
push
jns
add
and
incl
pushf
out
stc
mov
std
in
bound
decl
or
aas
mov
roll
roll
iret
int3
arpl
ljmp
fdivrs
pushf
inc
add
push
add
add
push
add
lea
icebp
mov
data16
clc
jne
pop
jno
jmp
jae
cmp
dec
or
add
mov
add
sarl
add
add
js
adc
divb
scas
in
lahf
add
pushl
shlb
adc
pop
jle
insl
icebp
roll
pop
push
sbb
dec
and
decl
icebp
dec
add
incl
ljmp
inc
add
daa
add
mov
push
jo
call
add
in
push
push
add
in
clc
ljmp
in
cmp
jmp
add
push
add
or
push
add
int3
dec
mov
test
add
or
js
repz
add
push
or
xchg
cmpsl
add
add
cwtl
out
and
call
dec
data16
add
cmp
xchg
and
add
dec
cwtl
and
ljmp
aaa
pop
mov
sub
push
push
addb
clc
mov
mov
popf
jmp
jge
add
add
lahf
lock
mov
push
jg
pop
push
lods
mov
fstl
pop
lcall
cmovae
decl
fstpt
out
cwtl
rclb
push
add
fisttpll
fidivrs
shrl
sbb
rolb
add
mov
hlt
xchg
mov
into
sbb
incl
cli
icebp
add
add
cltd
rolb
add
add
dec
stos
mov
negb
ljmp
or
add
gs
jbe
add
mov
sti
cmpsb
add
mov
add
in
fdivrl
fisubs
jmp
ljmp
sub
outsb
call
mov
add
add
add
pop
lods
movsb
add
rcl
or
or
lret
ljmp
movl
add
js
sub
decl
add
clc
out
xor
mov
cmpsb
add
jl
in
xchg
daa
add
ficompl
insb
add
incl
addb
add
dec
nop
addl
dec
mov
cmpsl
add
cmp
sub
lods
inc
add
add
add
mov
mov
jnp
add
jne
adc
jmp
xchg
jl
add
mov
iret
and
add
add
push
scas
push
add
add
repz
bound
ljmp
jge
add
pop
sbb
push
add
add
add
pop
jbe
xor
pushl
add
add
test
inc
add
lret
call
inc
add
push
add
adc
jge
outsb
or
jb
incl
decl
lock
add
call
bound
jmp
add
add
add
nop
addb
addl
lea
out
pop
cmp
sub
jmp
imul
pusha
add
shll
add
push
add
adc
add
add
ficomps
dec
or
fmuls
and
jl
add
adc
decl
ss
aaa
xchg
dec
xor
pushl
out
jmp
in
dec
das
sbb
add
add
add
ljmp
add
and
aas
jns
push
add
and
das
pop
mov
add
add
xchg
outsl
into
movb
mov
push
andnps
outsl
add
clc
add
pop
dec
loope
call
pushl
ljmp
pop
rol
add
or
jmp
add
ss
xchg
addl
cld
fwait
mov
icebp
mov
cwtl
cmp
sbb
add
mov
ljmp
jno
fsubr
push
add
add
pop
xchg
pop
add
incl
lahf
stc
in
insb
mov
lcall
roll
add
xor
pop
fwait
stos
pop
popa
add
jp
add
add
cmp
lcall
lock
jmp
add
out
jns
ficompl
test
lret
add
xchg
in
insl
icebp
aas
mov
addb
add
stos
int3
sub
add
add
mov
add
repz
add
jmp
scas
out
scas
jns
add
mov
add
int3
data16
adc
call
fsts
incl
add
into
enter
outsl
xchg
inc
add
ljmp
dec
mov
inc
add
dec
das
sub
add
stos
push
add
sahf
mov
push
arpl
lcall
xor
jmp
add
aas
popf
idivl
scas
rolb
out
repz
add
xor
jmp
add
add
jmp
jmp
in
adc
mov
jmp
xor
lcall
shl
add
in
cmp
add
dec
mov
add
jg
lcall
xchg
cmp
add
stos
pop
sets
add
mov
mov
add
fdivp
inc
add
jno
jmp
push
adc
ljmp
cwtl
xchg
mov
int
mov
mov
dec
sbb
add
lock
decl
add
in
nop
mov
add
add
cld
jle
xchg
jno
lcall
jnp
lcall
mov
add
rep
fdivrs
add
fwait
jp
das
pusha
add
cld
test
jge
movsb
add
add
and
decl
mov
add
lcall
adc
add
and
incl
cmp
pop
fildll
int3
call
jmp
add
inc
add
add
out
cmp
add
mov
imul
xchg
stc
loop
shlb
call
aas
lcall
test
inc
add
add
stos
mov
mov
sbb
add
in
shll
xchg
mov
enter
clc
lahf
mov
add
add
add
or
add
dec
xor
mov
roll
add
pusha
add
pop
scas
fcoms
ret
cmp
add
decl
sti
xchg
mov
add
jge
lret
inc
add
jle
add
lds
outsl
ret
add
jmp
dec
in
idivl
mov
pop
xchg
fldl
jo
jl
add
aaa
jmp
add
add
decl
mulb
cltd
or
addb
jle
icebp
mov
fildll
les
loope
pop
mov
mov
jnp
sbb
pop
loopne
out
mov
add
mov
add
inc
add
jmp
add
inc
add
add
push
nop
jmp
mov
push
pop
in
mov
nop
jmp
add
add
pop
push
mov
xchg
ret
add
inc
xor
inc
add
lahf
mov
nop
jmp
add
add
add
nop
jmp
les
add
add
add
add
or
jmp
testb
add
push
nop
jmp
lret
insb
lds
mov
mov
add
add
and
add
mov
mov
add
pop
mov
add
add
add
add
cmp
add
jecxz
repnz
mov
nop
jmp
push
add
adc
add
jge
rclb
mov
add
add
mov
add
sbb
jmp
add
add
nop
scas
cmp
nop
jmp
add
xchg
mov
add
rcll
mov
mov
sub
ret
scas
add
subl
add
add
test
xchg
pop
std
push
nop
jmp
pushf
add
dec
add
add
dec
mov
nop
jmp
fwait
ret
inc
cmp
add
call
add
add
xor
nop
jmp
gs
add
pop
test
sarb
mov
add
add
add
dec
pop
push
mov
xchg
ret
les
mov
cs
push
mov
xchg
ret
in
add
add
xchg
nop
jmp
add
leave
jg
add
jno
add
mov
xchg
ret
and
add
and
jmp
add
add
add
repnz
mov
nop
jmp
add
cmp
add
mov
xchg
ret
add
outsb
pop
push
mov
xchg
ret
loopne
mov
nop
jmp
add
jno
std
push
push
mov
xchg
ret
shr
add
pushf
sldt
add
dec
les
pop
les
pop
cmp
rcrb
jno
add
add
rep
nop
jmp
add
add
add
movb
add
push
mov
xchg
ret
add
add
mov
nop
jmp
xor
sub
push
mov
xchg
ret
cmp
add
pushl
mov
nop
jmp
insb
add
and
add
nop
jmp
add
add
push
mov
xchg
ret
mov
idivb
mov
push
mov
xchg
ret
loopne
add
test
jmp
and
add
mov
nop
jmp
dec
add
jb
add
add
add
cmp
or
add
loopne
add
mov
call
add
nop
jmp
mov
add
adc
add
nop
jmp
add
or
jmp
popf
in
add
add
jno
nop
jmp
or
fwait
push
add
daa
add
mov
nop
jmp
add
add
les
notl
add
add
rclb
add
add
rolb
ret
add
jmp
nop
jmp
add
push
les
add
icebp
aam
mov
nop
jmp
push
and
outsb
and
jmp
xor
in
in
sub
popf
inc
add
les
pop
fbstp
add
push
mov
xchg
ret
out
les
outsl
arpl
add
add
add
inc
adc
jmp
add
cmp
inc
add
adc
add
add
dec
add
mov
inc
jb
nop
jmp
push
and
pop
clc
call
nop
jmp
add
add
add
add
in
push
js
push
mov
xchg
ret
push
add
add
mov
nop
jmp
add
les
pop
nop
jmp
add
add
jg
add
in
cmp
mov
jle
cmp
test
inc
add
add
push
xchg
sti
pushl
add
fstps
jmp
add
mov
add
movb
add
mov
lret
add
add
mov
nop
jmp
les
jbe
sub
cmpl
dec
push
add
or
add
int
nop
jmp
push
xchg
add
add
add
add
mov
lods
sub
push
mov
xchg
ret
sahf
lds
insb
mov
nop
jmp
add
cld
or
and
add
jg
pop
add
push
mov
xchg
ret
add
add
call
mov
mov
add
lret
cmc
jmp
adc
add
jg
push
adc
xor
add
and
lds
jno
inc
in
in
cmp
nop
jmp
leave
add
pushf
sahf
mov
push
nop
jmp
add
add
outsl
je
nop
jmp
add
add
incl
add
mov
cmp
jmp
add
lret
popf
and
incl
mov
ficoms
and
add
mov
nop
jmp
add
xor
lret
fiaddl
jbe
nop
jmp
leave
push
lds
popa
add
add
nop
jmp
jbe
add
pop
sub
add
out
add
nop
jmp
add
lds
popf
or
nop
jmp
push
cmp
jg
add
mov
mov
nop
jmp
scas
add
add
push
int
or
nop
jmp
lret
add
mov
ret
nop
jmp
add
pop
in
cmpl
nop
jmp
enter
add
data16
jmp
push
add
call
nop
jmp
add
cmp
xor
addb
and
nop
jmp
inc
add
pop
and
jle
add
incl
nop
jmp
enter
xor
insl
mov
nop
jmp
add
and
or
jmp
add
cmp
cmp
or
add
enter
add
sti
add
push
mov
xchg
ret
push
fs
mov
mov
nop
jmp
add
aad
add
int3
mov
nop
jmp
add
inc
push
loopne
or
mov
xchg
ret
add
lds
add
add
mov
mov
xchg
ret
xchg
add
dec
cmp
jmp
add
add
jg
push
inc
sbb
andl
sub
mov
add
dec
add
mov
nop
jmp
leave
add
xor
pushf
imul
jmp
loopne
add
hlt
mov
jmp
add
mov
mov
adc
dec
call
nop
jmp
mov
add
push
mov
xchg
ret
add
ljmp
pause
jmp
add
sub
dec
rolb
jbe
add
push
nop
jmp
leave
popf
add
add
pushl
push
mov
xchg
ret
or
add
add
add
add
add
insb
add
add
add
std
mov
nop
jmp
add
push
add
call
add
add
push
nop
jmp
and
push
add
mov
adc
jmp
add
in
push
add
call
nop
jmp
les
in
into
add
nop
jmp
add
push
add
add
add
nop
jmp
add
add
add
or
jmp
push
add
push
pushf
add
cmp
ljmp
out
clc
jmp
mov
and
add
add
mov
in
add
in
add
dec
mov
and
nop
jmp
add
add
add
mov
nop
jmp
loopne
or
jmp
test
call
add
in
lds
add
decl
popa
nop
jmp
sub
add
inc
or
pushf
popa
nop
jmp
add
mov
and
incl
lcall
nop
jmp
add
add
add
add
aas
add
aam
add
imul
add
mov
enter
or
mov
nop
jmp
add
add
mov
mov
nop
jmp
sub
add
ljmp
mov
mov
dec
add
pop
add
repz
pop
sti
ret
nop
jmp
lret
add
add
add
test
add
in
add
and
adc
jmp
add
add
gs
ljmp
cmp
loopne
mov
jg
nop
jmp
add
add
lods
sbb
jae
add
push
sub
lds
push
push
hlt
call
xchg
add
mov
xor
add
leave
mov
nop
jmp
add
or
cmp
lcall
inc
add
mov
pop
nop
jmp
add
push
jno
lea
in
add
scas
rolb
jmp
add
jmp
mov
push
mov
xchg
ret
add
aam
jne
nop
jmp
cmp
add
add
push
mov
xchg
ret
sub
add
jmp
sar
add
loopne
scas
and
add
out
add
nop
jmp
add
ja
std
dec
push
mov
xchg
ret
add
add
out
add
nop
jmp
scas
add
push
jb
mov
add
nop
jmp
loopne
inc
add
nop
jmp
lds
add
js
add
add
nop
jmp
testb
add
enter
incl
add
mov
jg
nop
jmp
push
add
add
or
add
scas
enter
cld
incl
add
cs
xchg
int
jmp
sbb
add
add
add
out
cmp
adc
push
push
arpl
jmp
jb
add
push
addl
add
push
mov
xchg
ret
insb
push
nop
jmp
add
jnp
in
mov
push
mov
push
dec
outsb
add
mov
popf
test
sti
add
push
mov
iret
incl
adc
and
add
mov
jle
mov
jmp
add
jmp
add
add
mov
nop
jmp
add
out
dec
nop
jmp
add
lods
fwait
add
add
xor
jmp
add
add
inc
add
and
jmp
sub
test
idiv
ljmp
add
rclb
mov
push
mov
xchg
ret
push
push
decl
pop
cld
inc
pop
or
xor
push
mov
xchg
ret
cmp
add
jne
nop
jmp
push
mov
push
cmpsl
pop
add
nop
jmp
popf
add
jne
nop
jmp
add
notb
add
sar
incl
push
add
add
xchg
nop
jmp
add
add
incl
add
and
decl
lret
nop
jmp
testb
add
enter
dec
cmp
jmp
rolb
add
add
add
nop
jmp
add
inc
pushf
mov
nop
jmp
les
and
mov
test
gs
subl
nop
jmp
add
pop
lds
cld
mov
nop
jmp
in
loopne
les
mulb
add
add
add
inc
xchg
add
add
xor
inc
add
add
int
dec
add
add
icebp
nop
jmp
rolb
add
xor
into
testl
nop
jmp
cmp
xchg
rolb
add
jnp
mov
jmp
mov
add
add
push
pop
cmp
mov
xchg
ret
add
pop
pop
push
mov
xchg
ret
add
jnp
loopne
data16
nop
jmp
add
mov
add
add
cmp
ret
inc
add
pop
cmpl
nop
jmp
add
xor
test
adc
push
out
add
nop
jmp
sahf
testb
add
push
add
mov
adc
add
cmp
add
out
add
lea
push
mov
xchg
ret
loopne
push
nop
jmp
add
add
insb
dec
add
dec
movzwl
nop
jmp
mov
cmpsl
add
add
inc
inc
add
loopne
add
add
aas
jmp
nop
jmp
sahf
ret
dec
gs
pusha
add
adc
add
nop
jmp
add
add
notb
jge
add
add
add
add
adc
ljmp
push
mov
xchg
ret
add
nop
jmp
out
add
scas
add
cmp
nop
jmp
cmp
add
je
nop
jmp
les
les
inc
add
add
push
xor
call
in
pop
push
mov
xchg
ret
jbe
add
mov
insb
jne
nop
jmp
pushl
out
test
push
mov
xchg
ret
add
add
nop
jmp
mov
leave
add
inc
add
lds
outsl
mov
nop
jmp
out
push
cs
lds
movb
add
movb
pushl
push
mov
xchg
ret
push
add
add
stos
push
nop
jmp
dec
les
in
sub
aam
add
nop
jmp
add
adc
inc
push
mov
xchg
ret
add
les
xchg
jle
test
adc
add
add
adc
add
mov
jne
nop
jmp
mov
add
add
push
mov
xchg
ret
add
mov
lods
sahf
inc
add
mov
fldl
add
cmp
push
cld
mov
and
add
push
sahf
pop
movzwl
nop
jmp
adc
xor
cmp
jmp
sahf
add
add
push
mov
xchg
ret
add
stos
dec
nop
jmp
ret
mov
cmp
add
lods
push
nop
jmp
leave
pop
loopne
mov
inc
add
mov
lea
scas
add
add
xchg
adc
mov
xchg
ret
add
out
add
nop
jmp
lds
in
add
out
mov
add
add
mov
push
jno
inc
add
sub
nop
jmp
in
push
jg
add
mov
fiaddl
stos
add
xchg
add
adc
jmp
lea
jmp
mov
imul
add
nop
jmp
loopne
and
add
and
add
jne
add
incl
jne
nop
jmp
mov
add
pause
jmp
add
jbe
sahf
lret
add
sub
lcall
lret
push
nop
jmp
leave
xchg
add
loopne
loopne
sbb
popa
nop
jmp
add
cmp
add
add
sub
add
add
add
add
nop
jmp
push
add
in
inc
add
mov
cli
incl
cmp
add
add
add
scas
inc
add
leave
push
mov
xchg
ret
leave
inc
push
dec
lret
cmp
jmp
add
rol
and
add
add
xor
nop
jmp
add
rclb
push
je
nop
jmp
add
add
and
nop
jmp
lret
add
stc
ret
nop
jmp
adc
add
add
les
add
add
nop
jmp
jnp
pop
mov
call
incl
jnp
cmp
lahf
add
nop
jmp
or
add
push
add
es
push
add
jb
decl
add
nop
jmp
add
add
call
div
nop
jmp
lcall
popa
add
pop
add
nop
jmp
add
add
les
sarb
jmp
jp
nop
jmp
popf
push
add
push
jmp
lods
jbe
loopne
push
adc
jmp
add
add
mov
push
push
add
int3
add
nop
jmp
push
dec
mov
add
mov
nop
jmp
testb
and
pushl
nop
jmp
inc
sub
mov
push
mov
xchg
ret
add
fwait
sahf
div
nop
jmp
add
or
add
push
add
roll
mov
nop
jmp
lret
add
mov
add
jno
call
jnp
add
lcall
add
jb
inc
mov
mov
xchg
ret
push
add
xor
dec
and
nop
jmp
add
idivb
incl
clc
push
nop
jmp
add
add
add
push
hlt
cmp
nop
jmp
insb
leave
add
xor
mov
nop
jmp
fwait
push
dec
sub
add
nop
jmp
insb
add
lods
push
nop
jmp
add
insb
add
add
add
pusha
nop
jmp
jb
loopne
add
add
mov
add
add
call
add
and
pop
mov
push
mov
xchg
ret
lret
inc
add
lea
nop
jmp
mov
add
push
add
call
add
adc
mov
sub
call
add
add
jbe
nop
jmp
add
add
add
add
and
push
push
mov
xchg
ret
add
push
jmp
nop
jmp
xor
add
add
inc
adc
add
add
jne
nop
jmp
add
add
addb
add
sti
push
push
mov
xchg
ret
rclb
add
jmp
pop
add
add
xadd
aaa
nop
jmp
add
fwait
add
add
leave
nop
jmp
push
add
add
add
dec
mov
push
mov
xchg
ret
add
add
lcall
stos
nop
jmp
push
add
jbe
add
lock
add
nop
jmp
add
add
mov
add
add
nop
jmp
add
leave
lret
mov
add
mov
in
add
mov
jg
in
add
add
je
js
mov
xchg
ret
add
add
nop
jmp
push
add
les
lods
add
push
mov
xchg
ret
or
mov
adc
jmp
cmp
in
imul
nop
jmp
out
xchg
add
lods
push
mov
xchg
ret
add
sub
ret
add
add
int
nop
jmp
mov
add
adc
push
push
mov
xchg
ret
add
push
loope
pop
stos
nop
jmp
add
add
add
add
cwtl
mov
nop
jmp
add
inc
add
repz
mov
xchg
ret
cs
push
add
sbb
push
add
jmp
add
lds
add
fbld
nop
jmp
add
inc
and
mov
and
pushf
adc
hlt
call
add
add
adc
dec
mov
nop
jmp
add
add
cmp
mov
nop
jmp
div
mov
xor
push
push
mov
xchg
ret
add
lret
femms
add
nop
jmp
push
jb
xchg
inc
add
lcall
mov
push
mov
xchg
ret
jg
xor
into
pop
add
or
jnp
inc
add
xchg
inc
add
add
ret
out
mov
add
cmp
call
add
test
and
add
cmp
or
jmp
add
add
enter
jge
je
add
nop
jmp
lds
jg
mov
push
mov
xchg
ret
add
movsb
add
xor
nop
jmp
add
mov
inc
add
int3
and
nop
jmp
add
add
or
in
jge
inc
add
rolb
sbb
imul
jmp
push
fs
lret
or
jmp
adc
or
mov
nop
jmp
add
push
xor
jmp
or
add
in
xor
add
xchg
int
lret
push
mov
xchg
ret
cmp
add
push
nop
jmp
add
xor
add
push
mov
xchg
ret
add
call
mov
add
addl
mov
call
nop
jmp
add
rolb
add
lcall
nop
jmp
xor
mov
jmp
add
add
push
mov
add
add
add
pop
add
add
adc
push
mov
mov
xchg
mov
sbb
pop
nop
jmp
add
add
push
add
call
nop
jmp
lds
add
loopne
add
incl
repz
call
incl
pushf
and
call
call
les
call
jmp
lods
add
add
add
push
xor
add
nop
jmp
lds
add
ja
push
mov
jo
add
xor
add
add
jne
and
mov
jmp
add
shrl
add
nop
jmp
add
add
dec
mov
nop
jmp
add
xor
ljmp
xor
push
mov
xchg
ret
add
adc
add
add
daa
add
ret
nop
jmp
add
mov
dec
jbe
imul
jmp
dec
or
add
mov
add
nop
jmp
pop
mul
add
popf
roll
add
add
movsb
add
xor
nop
jmp
add
add
arpl
pushl
add
incl
and
add
push
ret
pop
push
mov
setge
jmp
inc
or
in
add
add
nop
jmp
cs
add
add
incl
add
pop
jae
call
fisttpll
mov
add
nop
jmp
sahf
add
icebp
and
decl
mov
and
jbe
popf
shlb
ljmp
nop
jmp
or
addr16
jmp
nop
jmp
or
add
add
or
add
nop
jmp
incl
add
push
mov
xchg
ret
add
push
push
mov
xchg
ret
add
loopne
xchg
nop
jmp
lret
push
push
or
jmp
mov
add
add
push
mov
xchg
ret
add
pop
lea
nop
jmp
add
xor
mov
mov
nop
jmp
add
and
mov
add
clc
nop
jmp
add
push
add
add
sub
nop
jmp
in
pushf
mov
add
add
push
mov
xchg
ret
and
add
dec
xor
nop
jmp
add
int3
jne
nop
jmp
jg
or
sub
push
mov
xchg
ret
add
movsl
add
icebp
rolb
jmp
jmp
add
or
add
jnp
jnp
mov
nop
jmp
add
add
mov
nop
jmp
sub
xor
and
add
jg
mov
call
jnp
push
sahf
test
add
mov
push
mov
xchg
ret
and
add
decl
clc
nop
jmp
add
jnp
notb
jne
call
incl
in
pop
jmp
sti
incl
jb
add
jno
add
pushl
mov
nop
jmp
adc
lds
mov
nop
jmp
jbe
pushf
pop
jne
nop
jmp
lods
popf
dec
push
xchg
je
dec
push
push
mov
xchg
ret
add
add
add
pop
mov
push
mov
xchg
ret
sahf
add
add
jne
nop
jmp
ret
add
lcall
incl
add
and
add
pushf
push
push
mov
xchg
ret
add
sbb
mov
mov
add
out
aam
add
int3
mov
nop
jmp
xor
inc
add
add
nop
jmp
mov
add
push
nop
jmp
out
sahf
add
lret
call
nop
jmp
sahf
add
add
aad
add
add
jmp
mov
and
loopne
add
cmp
mov
in
sahf
jbe
call
nop
jmp
and
mov
jmp
cmp
push
aas
inc
push
mov
xchg
ret
add
add
inc
call
lcall
call
call
cli
incl
add
jb
leave
add
add
add
nop
jmp
add
push
add
add
mov
je
nop
jmp
jnp
add
cld
mov
nop
jmp
xor
add
pushl
lods
movsl
add
jmp
add
add
nop
jmp
cmp
or
fists
call
mov
add
cmp
mov
nop
jmp
mov
or
mov
push
mov
xchg
ret
lods
jbe
dec
mov
nop
jmp
add
rol
add
mov
nop
jmp
add
add
mov
mov
nop
jmp
add
add
nop
jmp
add
push
dec
insb
ror
push
mov
xchg
ret
add
icebp
pop
ret
nop
jmp
add
add
push
add
add
nop
jmp
jnp
xor
pop
call
nop
jmp
adc
add
dec
add
nop
jmp
ret
inc
mov
add
movsb
inc
add
or
adc
push
inc
add
aas
add
nop
jmp
add
cmp
push
add
add
pop
add
cmp
lds
add
push
push
stos
push
push
mov
xchg
ret
les
xor
jmp
add
add
cmp
nop
jmp
sub
popf
add
lret
nop
jmp
add
add
and
movl
nop
jmp
add
push
push
add
aas
add
add
call
add
add
push
push
mov
xchg
ret
mov
add
out
mov
hlt
decl
enter
jg
movl
nop
jmp
add
pop
add
push
adc
add
mov
nop
jmp
ret
add
add
lret
cmpl
ljmp
jno
jno
stos
nop
jmp
add
push
add
xor
add
jne
nop
jmp
add
inc
scas
add
nop
jmp
jg
push
push
addl
jmp
add
add
in
add
addb
add
xor
pushl
add
incl
call
enter
in
incl
add
les
lret
add
shr
push
mov
xchg
ret
sahf
out
add
incl
pushl
movb
add
nop
jmp
add
bound
decl
mov
nop
jmp
add
mov
cs
push
xchg
shrl
sti
nop
jmp
add
add
inc
add
jo
mov
jmp
jb
add
pop
nop
jmp
lods
add
cmp
add
add
jmp
test
jmp
add
add
mov
inc
mov
and
nop
jmp
add
rolb
add
add
fucomip
incl
mov
add
add
add
test
and
lcall
add
add
push
mov
xchg
ret
mov
add
jnp
mov
push
nop
jmp
mov
add
add
push
nop
jmp
add
add
test
xor
jmp
mov
xchg
ret
les
add
push
add
and
incl
adc
xor
and
lods
rorb
cmpl
nop
jmp
or
add
fmull
test
call
dec
push
add
jle
push
mov
xchg
ret
add
mov
test
add
adc
xchg
je
add
out
decl
cmp
add
add
mov
call
jmp
lea
nop
jmp
add
cmp
out
pushl
nop
jmp
add
mov
aam
call
scas
pop
add
push
mov
xchg
ret
les
gs
sub
lds
data16
xor
nop
jmp
add
add
jmp
les
out
add
fmull
add
inc
add
push
push
sub
lock
incl
enter
push
add
push
add
sub
and
add
cs
pop
xor
scas
inc
add
add
push
add
dec
rep
nop
jmp
rol
loopne
add
inc
add
mov
jb
add
adc
inc
and
jmp
adc
daa
add
jge
nop
jmp
mov
dec
jmp
incl
jb
leave
out
les
and
mov
lahf
inc
add
or
jmp
pop
inc
les
loopne
add
jmp
add
loopne
add
add
cmp
cwtl
cld
mov
add
add
nop
jmp
add
add
ret
xor
add
movzwl
nop
jmp
inc
enter
mov
mov
xchg
ret
in
and
data16
pop
add
inc
lock
mov
xchg
ret
push
shl
push
mov
xchg
ret
and
lods
push
rclb
call
add
add
pushl
decl
jg
nop
jmp
inc
enter
loopne
add
rep
nop
jmp
push
add
lods
push
nop
jmp
add
jbe
add
jg
cmpsl
add
lea
push
mov
xchg
ret
and
jnp
push
nop
jmp
add
and
cmp
ficoms
mov
popf
scas
pop
pop
nop
jmp
add
xor
mov
xor
nop
jmp
jno
add
mov
add
push
nop
jmp
ret
jnp
pushf
add
add
movsl
inc
add
pop
mov
loop
cld
test
nop
jmp
fwait
cmp
add
leave
stc
movswl
nop
jmp
add
add
mov
lock
jmp
add
add
call
nop
jmp
in
add
dec
push
push
mov
xchg
ret
add
sahf
cmp
push
nop
jmp
mov
add
inc
add
mov
nop
jmp
and
jno
jnp
mov
add
nop
jmp
fwait
add
add
cs
or
nop
jmp
enter
add
add
or
jmp
testb
add
cmp
mov
jmp
add
add
add
test
call
call
add
sbb
ret
cs
add
inc
add
xchg
pop
add
push
push
mov
xchg
ret
add
jnp
pop
xor
nop
jmp
in
add
jnp
add
pushl
add
adc
lcall
mov
ljmp
add
loopne
push
fs
push
nop
jmp
add
jnp
loopne
xchg
lods
movzwl
nop
jmp
add
dec
out
push
sub
and
nop
jmp
push
add
ret
nop
jmp
loopne
pop
add
leave
dec
jb
lcall
push
push
mov
xchg
ret
add
inc
shl
lret
lea
nop
jmp
inc
lret
add
or
or
nop
jmp
fs
mov
lret
add
nop
jmp
mov
les
mov
push
nop
jmp
jb
lds
leave
les
scas
push
push
mov
xchg
ret
add
jbe
movl
mov
add
add
add
add
movsb
nop
jmp
incl
pop
add
jge
nop
jmp
add
cmp
cli
mov
nop
jmp
add
add
add
cmp
nop
jmp
pop
enter
lods
add
movb
add
pop
nop
jmp
add
loopne
add
je
add
lods
shl
nop
jmp
pop
loopne
add
roll
mov
push
mov
xchg
ret
add
nop
jmp
add
add
add
dec
push
mov
xchg
ret
out
les
pushf
push
add
mov
xchg
out
call
call
inc
add
incl
sub
add
incl
add
add
test
call
cmp
out
push
movsb
nop
jmp
push
in
lret
or
nop
jmp
add
incl
add
push
in
add
jns
das
xchg
adc
pusha
nop
jmp
add
add
add
add
add
jns
sbb
call
insb
inc
mov
xor
adc
nop
jmp
add
add
and
inc
mov
scas
lret
add
add
pushl
add
mov
jmp
call
decl
fwait
add
call
sub
dec
add
cmp
push
add
mov
pop
push
mov
xchg
ret
leave
jnp
add
add
mov
push
nop
jmp
add
add
mov
nop
jmp
loopne
add
loopne
pop
push
push
mov
xchg
ret
cmp
add
add
movsl
add
inc
lock
dec
add
add
in
les
nop
push
add
push
stos
jne
nop
jmp
add
sub
jmp
add
jno
pop
cmp
addl
and
and
and
mov
and
sub
ret
rolb
mov
nop
jmp
xor
add
add
sti
mov
nop
jmp
add
jg
xchg
add
je
nop
jmp
add
xor
decl
jmp
add
mov
add
add
adc
call
ljmp
mov
nop
jmp
and
pushf
decl
nop
jmp
add
mov
leave
mov
mov
xchg
ret
mov
out
pusha
nop
jmp
out
add
loopne
add
add
aam
add
insb
int
jno
decl
add
or
push
cmp
call
pop
clc
add
push
pop
in
movb
lahf
stos
push
add
jg
roll
sbb
jmp
incl
add
add
addb
sub
inc
add
and
call
incl
push
pop
jmp
add
in
inc
add
add
adc
incl
addl
fidivrl
add
int
add
faddl
decl
sbb
mov
add
mov
add
lea
add
add
ja
add
add
add
dec
nop
clc
sub
lods
push
loop
mov
mov
add
test
daa
add
mov
ss
lea
cs
je
add
insb
je
sahf
addb
js
add
lcall
lret
lret
add
call
push
add
cmp
add
fwait
or
sbb
in
data16
push
and
call
sbb
jno
ljmp
jne
cs
mov
add
xchg
pop
filds
add
pusha
add
lods
inc
add
hlt
mov
add
sbb
add
xchg
arpl
incl
add
or
cld
jnp
add
mov
pop
add
in
inc
add
jb
jmp
add
aad
jbe
daa
add
add
jno
decl
aam
add
jl
mov
data16
daa
add
outsl
jae
jmp
add
mulb
neg
inc
add
add
arpl
cmp
cmp
xchg
int
xchg
or
xchg
add
add
xor
cmp
mov
or
daa
add
sbb
add
cmp
add
mov
add
xor
incl
inc
add
xchg
mov
add
addb
push
cmp
std
xchg
aaa
clc
bound
call
add
addb
add
add
add
xchg
repz
loope
pop
bound
incl
add
outsl
fldenv
call
aam
mov
mov
push
repnz
mulb
ja
incb
jmp
call
add
inc
add
lods
leave
fnsave
xor
jmp
scas
inc
add
out
xchg
cmp
add
sbb
sub
out
inc
add
pop
outsb
add
call
shrl
mov
push
or
mov
add
dec
dec
pop
add
add
jl
mov
mov
xor
jmp
add
add
or
addb
scas
scas
ret
sysexit
mov
outsb
xchg
mov
sbb
ja
lds
add
mov
add
out
jns
add
pop
dec
sbb
pop
lods
adc
call
add
and
pushl
xor
das
xchg
ret
add
decl
add
jge
add
mov
add
add
fisubs
add
xor
call
xlat
outsb
xchg
push
add
fcomps
and
decl
xchg
lea
add
cli
mov
pushl
lcall
icebp
jae
lcall
icebp
mov
add
mov
pop
or
add
lret
in
xor
lcall
jns
push
addb
push
add
xchg
je
and
fxch
and
mov
add
gs
add
addb
fs
cld
loope
cld
cmp
add
call
or
mov
or
and
in
sbb
add
add
jmp
push
xchg
mov
push
add
add
ret
add
cmpsl
add
insl
in
lahf
insl
enter
add
add
pop
dec
icebp
dec
mov
sbb
adc
decl
add
dec
jle
add
inc
add
lock
ja
add
or
add
loopne
cmpsl
add
fnstcw
stos
xlat
push
cmp
add
mov
xchg
xor
incl
add
ja
add
call
push
add
push
sub
cs
outsl
add
lcall
xor
call
testb
cmp
adc
fcompl
xchg
jns
add
mov
int
add
call
add
lcall
add
aaa
in
and
jmp
add
add
add
add
lods
add
call
pop
adc
decl
xchg
sti
addb
add
jae
flds
mov
jo
lcall
test
clc
aad
imul
out
mov
add
xchg
leave
sub
xor
pushl
jo
inc
add
add
mov
xor
incl
ljmp
aas
sahf
ja
add
out
lcall
mov
add
push
out
imul
cmpsb
add
lods
data16
fwait
iret
ljmp
add
jp
add
add
push
add
xchg
inc
add
outsb
test
add
incl
dec
xchg
ljmp
mov
fstpt
jle
add
js
add
mov
add
add
insb
addb
add
and
ljmp
ljmp
add
lcall
popf
mov
add
add
or
xor
dec
add
movl
or
add
mov
add
nop
mov
add
dec
pop
mov
daa
add
jg
dec
add
lret
rcl
mov
js
icebp
cmp
bound
pushl
add
inc
add
ss
add
loope
dec
mov
out
data16
adc
cltd
loop
push
mov
lret
divl
add
je
add
cld
xchg
loope
aad
add
sub
mov
add
aas
lock
mov
jbe
movsl
add
cmp
sbb
roll
cmc
std
scas
jbe
push
add
jmp
cmp
call
add
call
decb
out
mov
add
dec
jnp
pop
inc
add
add
inc
add
ljmp
push
outsl
data16
add
cld
jno
lcall
jmp
ret
add
push
add
mov
add
sub
ljmp
pop
inc
add
add
scas
addb
sbb
clc
mov
add
xchg
nop
mov
sbb
cmp
rcrb
cli
sbb
lret
pop
movl
push
add
mov
xchg
ss
xchg
mov
dec
mov
decl
aam
sub
add
mov
add
add
call
inc
add
roll
add
add
mov
sub
add
add
sbb
add
outsb
cmpsl
add
out
data16
sub
loop
clc
outsb
or
add
pushl
sbb
addb
push
pop
sub
call
adc
cmp
inc
add
add
and
pushl
push
insl
or
add
das
int3
pop
insl
shlb
lcall
mov
push
hlt
fisubrs
cmpsl
add
add
enter
ret
add
jno
pushl
and
pushl
jmp
add
or
or
add
add
cmp
add
sbb
add
pop
jmp
add
sti
add
add
and
jmp
add
xchg
push
lods
test
add
pop
ljmp
cmpsl
add
addb
mov
jbe
add
insb
jns
add
ret
add
add
add
mov
ja
movsl
add
jns
sub
mov
add
xor
call
ljmp
add
lcall
adc
call
add
stos
stc
push
add
mov
pop
daa
add
out
jmp
scas
add
lcall
pop
jae
push
dec
les
icebp
mov
aad
add
rolb
ljmp
add
sbb
neg
dec
lods
pop
jge
or
mov
mov
add
inc
add
mov
call
jmp
add
cmp
add
loope
roll
dec
cmp
or
mov
add
add
ss
jmp
mov
add
cmc
ss
aas
les
or
add
movsb
add
mov
add
pop
push
cs
xchg
mov
mov
or
xor
add
cli
xlat
xchg
adc
call
inc
add
sbb
call
add
jge
or
decl
stos
je
lock
jns
sbb
outsb
popf
imul
xchg
and
ljmp
xchg
dec
jb
decl
add
and
sahf
in
and
mov
dec
pop
dec
cmp
add
jbe
cmpsl
add
out
iret
jae
ljmp
or
jl
aam
inc
add
jmp
stc
int3
imul
decl
sub
movl
jmp
and
incl
add
dec
scas
jbe
add
xor
ljmp
mulb
nop
add
add
mov
add
push
aas
sub
popl
dec
xlat
or
insl
fnstsw
and
dec
addb
out
negl
test
fisttpll
and
sbb
out
outsb
outsb
or
jns
es
add
mov
add
pop
push
pushf
dec
into
adc
add
fsubs
xor
mov
add
pop
xor
jmp
push
jge
imul
test
stos
cmp
call
aad
add
in
test
push
add
imul
push
insl
cmp
sbb
add
add
and
push
mov
inc
add
cmc
sub
cmp
ret
add
add
bound
decl
and
lcall
cs
lods
stos
xchg
mov
add
insl
daa
add
je
inc
add
push
dec
jge
mov
jge
add
jmp
add
mov
add
add
push
dec
in
ja
addl
or
outsl
add
incl
add
jp
addb
std
inc
add
add
ds
imul
inc
add
out
mov
add
pop
add
push
add
add
jp
xchg
fwait
cmp
pop
add
add
push
add
call
add
aas
jb
mov
test
add
dec
mov
add
jo
decl
add
add
add
dec
push
add
stc
mov
xchg
or
or
pop
lahf
pop
cmp
inc
add
pop
mov
mov
test
mov
enter
jns
mov
imul
out
pushf
fisttps
sbb
or
aaa
jg
add
addl
ljmp
lcall
cmp
add
cli
xchg
mov
mov
add
test
add
add
cmp
add
lcall
or
or
movb
in
leave
push
add
dec
push
add
movb
add
add
push
add
pushl
jmp
lcall
lcall
add
push
add
jnp
addb
rclb
lret
jmp
repz
movl
add
movsb
add
add
add
mov
jmp
repnz
fcomps
add
add
jb
ljmp
movsl
add
add
rolb
or
cltd
push
add
fsubp
add
pop
adc
mov
add
or
mov
add
add
insl
xor
mov
and
push
xchg
fstpt
push
add
add
ljmp
push
mov
add
imulb
add
add
sub
xchg
outsl
jae
pushl
add
xchg
push
or
push
add
mov
jle
push
mov
add
leave
fnstsw
add
movsb
add
jmp
or
and
add
in
add
decl
add
mov
add
add
xchg
adc
pushf
stos
dec
lds
gs
pusha
add
inc
add
xor
jb
lcall
push
fistpll
fwait
iret
sbb
std
mov
adc
jg
pop
jb
ljmp
call
add
ja
add
mov
cltd
or
add
add
xor
jge
add
ljmp
repnz
sub
add
dec
cmpsb
add
decl
sub
lret
pop
enter
add
pop
clc
addl
cmpsl
add
sti
adc
jmp
add
lret
dec
sub
bound
jmp
scas
pop
gs
std
add
inc
add
mov
lret
call
add
inc
add
cld
cld
sbb
into
cltd
add
fmull
add
add
sub
add
jmp
xchg
cwtl
jle
mov
pusha
add
sbb
pop
sbb
add
insl
scas
mov
add
decl
shl
add
incl
add
or
daa
add
add
or
mov
add
fwait
insl
lea
stc
mov
inc
add
mov
add
or
xor
fmuls
add
add
idivl
hlt
mov
sub
ret
add
mov
push
push
iret
pop
add
fwait
mov
mov
call
daa
add
cld
lea
dec
sbb
dec
lcall
add
call
push
mov
add
sti
dec
or
add
mov
xchg
push
neg
dec
stc
stc
dec
fwait
in
dec
jno
lcall
push
add
mov
fisttpl
movl
iret
sbb
jle
mov
add
add
add
outsb
xchg
xchg
clc
adc
ljmp
sbb
add
pop
cmp
in
iret
xchg
test
add
loope
rcrl
test
popa
add
add
lret
decl
lods
add
incl
add
out
mov
imul
jno
mov
incl
add
jmp
popa
add
mov
out
or
cmpsl
add
pop
xor
call
add
xor
mov
jno
call
pusha
add
mov
idivb
jb
jnp,pt
sub
add
cmp
jnp
add
add
aaa
in
pop
js
add
mov
add
push
add
jle
mov
add
leave
inc
add
add
sbb
cltd
stos
jbe
inc
add
push
addb
loope
movsl
add
mov
add
jp
stc
test
cwtl
cmp
push
add
jl
jbe
jno
pushl
add
cmpsl
add
inc
add
or
dec
loopne
repnz
mov
xchg
pop
add
add
mov
add
mov
mov
adc
pushl
mov
icebp
test
aas
jle
add
addl
add
movb
push
add
mov
push
adc
cmp
popa
add
pop
cmp
xor
add
pop
inc
add
add
mov
push
add
and
jmp
add
add
aad
add
add
aam
mov
imul
addl
add
out
ds
movb
in
stc
dec
cmp
cltd
cltd
jecxz
adc
ljmp
add
cmp
add
push
add
mov
jl
inc
add
mov
ss
out
addl
call
sti
mov
roll
add
mov
add
incl
add
and
inc
add
xchg
addl
sub
add
ds
xlat
mov
jo
cld
stos
enter
cmp
pusha
add
push
mov
add
jmp
add
jmp
in
mov
frstor
add
add
pushl
aad
add
outsl
daa
add
xchg
mov
in
inc
add
jmp
inc
add
pop
in
mov
insl
inc
add
add
outsl
hlt
loopne
add
sti
push
add
mov
cmp
pop
sbb
ret
add
cmp
jo
lcall
enter
decl
out
fisttpl
add
call
lea
mov
mov
add
lret
in
push
imul
test
addb
cltd
xchg
mov
data16
call
addl
addl
mov
cmp
leave
mov
jl
bound
incl
sub
add
add
into
test
ds
mov
mov
repnz
sub
aad
add
cld
sbb
pusha
add
hlt
push
add
ret
add
mov
pop
loope
xor
push
test
add
rclb
add
roll
cmp
jne
push
add
ljmp
sbb
inc
add
movsl
add
addl
cmp
add
shlb
add
ljmp
add
lds
cmp
jmp
add
xchg
mov
add
mov
out
jecxz
loop
xchg
jo
decl
repz
call
clc
push
add
imul
cld
add
mov
add
incl
add
xor
add
das
mov
add
out
add
pop
xor
lcall
into
mov
cmpsb
add
cmp
mov
xchg
xchg
dec
xlat
pushf
mov
repz
add
pop
pop
cli
lcall
push
add
arpl
mov
inc
add
scas
add
jmp
add
decl
and
lcall
jmp
add
rorb
add
push
push
add
push
xchg
cmpsl
add
add
pushf
int
filds
add
sahf
js
iret
pop
cmc
push
add
add
jmp
addb
xchg
aad
add
xchg
jnp
xor
add
test
lcall
add
repnz
idivl
ss
add
add
pushf
call
add
mov
out
sub
add
add
jns
or
add
cmp
fmull
outsb
sbb
add
push
add
mov
ret
mov
mov
add
icebp
push
add
add
pop
mov
add
int3
out
mov
clc
cmp
add
cltd
mov
rcrb
stos
mov
mov
add
add
ja
add
scas
aaa
inc
add
imul
lahf
jbe
popf
out
ret
jge
add
inc
add
loop
inc
add
xchg
sbb
call
add
mov
lock
add
mov
add
jnp
xchg
add
lcall
pop
pop
add
mov
mov
fbld
addl
push
scas
cld
lea
add
xor
incl
add
jne
add
mov
add
add
cltd
mov
lods
in
add
filds
or
push
mov
cld
pop
cmp
cmp
pop
out
lds
or
add
pop
jl
sbb
pop
stc
sub
test
decl
push
inc
add
push
idivl
add
add
incl
add
inc
add
add
add
add
xchg
call
fstpl
movb
add
lods
pop
push
add
and
arpl
jl
mov
add
xchg
inc
add
jbe
add
les
lods
cli
pusha
add
push
imul
ret
add
adc
insl
pushf
fmulp
test
jne
add
jmp
incl
dec
pushl
or
fstps
and
decl
jne
in
dec
mov
add
push
addl
pop
pop
and
decl
add
inc
add
in
pop
xor
cmp
bound
lcall
out
dec
imul
rcl
test
push
add
mov
mov
and
decl
add
add
xchg
fldenv
in
rclb
inc
add
aaa
shr
jmp
add
mov
popf
aam
inc
add
jle
add
add
add
decl
add
add
imul
jge
xor
ljmp
decl
mov
hlt
or
add
pop
setae
add
fwait
enter
mov
pusha
add
mov
xchg
ror
mov
movsl
add
aaa
shlb
add
push
add
jns
add
add
call
decl
add
inc
add
add
add
rolb
cld
mov
loopne
std
xchg
xor
decl
fnstenv
add
push
add
xchg
cwtl
decb
add
add
roll
jbe,pt
add
jo
ljmp
call
ss
adc
jmp
add
ljmp
add
aas
fsubr
out
push
mov
outsb
in
jo
jmp
call
repz
call
mov
add
add
insb
hlt
mov
jne
add
mov
mov
out
nop
aaa
les
fisubs
dec
sbb
fnsave
cmp
add
and
jmp
decl
sub
lcall
mov
add
add
movsb
add
decl
add
loop
jmp
sahf
inc
add
icebp
in
sbb
jmp
add
js
mov
add
sbb
pop
add
add
pop
rcrl
lods
test
push
push
dec
jp
imul
movsl
add
jmp
mov
sub
addb
xor
ljmp
adc
inc
add
adc
lcall
xor
inc
add
add
in
hlt
fdiv
jo
dec
adc
jmp
add
cmp
mov
jmp
jp
add
add
push
sub
lcall
add
pop
mov
shrb
xchg
daa
add
std
xchg
icebp
add
call
out
sub
out
xchg
ror
mov
add
mov
ljmp
testl
pushl
add
jge
mov
or
push
adc
call
ds
scas
adc
jns
cmp
dec
jno
inc
add
pavgw
fildl
add
mov
add
add
clc
arpl
jmp
add
inc
add
jmp
add
aam
div
add
movb
add
call
add
push
add
mov
loope
push
add
push
add
or
add
add
roll
incl
jmp
imul
mov
mov
add
ljmp
pusha
add
nop
scas
roll
call
sbb
add
addb
icebp
out
aaa
xor
mov
out
dec
lcall
jmp
xchg
push
add
push
out
outsb
addb
sahf
in
add
ljmp
movl
out
sub
add
push
add
pop
jp
add
out
repnz
add
jns
pop
sub
jne
dec
lds
or
add
sbb
sbb
movsl
add
lahf
rolb
or
dec
cltd
pop
dec
jg
add
incl
push
add
mov
and
xor
jmp
push
add
pop
rcr
push
ljmp
sahf
mov
add
add
add
popa
add
or
mov
add
add
scas
xlat
sub
add
clc
lods
mov
ljmp
add
cmp
push
add
hlt
rolb
add
or
push
pop
int3
mov
mov
inc
add
js
cmpsl
add
cmc
add
add
sub
imul
dec
mov
lcall
and
lcall
add
xchg
xchg
aaa
scas
movb
cmp
decl
in
add
ljmp
push
outsl
stc
sti
adc
add
das
cmp
out
sub
push
roll
ljmp
mov
sbb
mov
inc
add
je
je
push
add
and
ljmp
add
mov
add
ficoms
decl
add
add
or
jecxz
roll
addl
add
notl
add
decl
std
addl
add
add
decl
sbb
add
lods
sahf
jecxz
lods
mov
add
mov
add
mov
fwait
aam
add
jmp
lods
hlt
push
les
das
xchg
dec
daa
add
cs
add
push
roll
sub
nop
mov
add
mov
add
out
jnp
xlat
fistpll
lret
dec
sub
pop
shlb
or
add
call
sbb
and
ljmp
and
jmp
add
add
add
mov
add
pop
add
add
js
pop
outsb
or
inc
add
mov
pop
hlt
lods
ljmp
adc
call
call
ljmp
fsubs
add
xchg
mov
mov
add
leave
jne
add
and
add
enter
das
push
mov
add
push
or
lret
loop
sub
add
push
add
add
gs
xchg
push
pop
mov
push
cmp
es
jge
xchg
mov
jle
insb
mov
rclb
add
pop
dec
lock
add
test
inc
add
cmp
add
mov
add
adc
decl
add
nop
les
inc
add
je
add
popa
add
mov
jle
add
push
mov
add
loopne
mov
mov
roll
add
test
add
das
cmpsl
add
add
mov
add
add
add
sub
add
ljmp
aam
inc
add
fisttps
stos
clc
xchg
sub
add
movb
add
pop
sbb
fldt
jmp
pop
cmpsl
add
movsb
add
test
das
mov
inc
add
nop
pop
dec
nop
dec
faddl
add
push
add
movsl
add
inc
add
add
sahf
popf
dec
pop
sbb
repz
add
ja
loop
xchg
cmp
add
fwait
adc
jmp
add
or
mov
cwtl
sbb
mov
xchg
add
push
int
repz
adc
sbb
add
and
pushl
ljmp
add
cmp
add
icebp
push
fidivs
rcr
mov
add
pop
addb
add
inc
add
mov
add
adc
jecxz
jo
dec
sbb
add
movl
bound
call
cmp
call
add
add
push
lea
call
add
add
mov
jge
add
sbb
faddl
loope
pusha
add
mov
pop
sub
push
xchg
push
add
add
and
lcall
cli
mov
imul
ret
add
cli
pop
std
xor
lcall
daa
add
sub
ret
and
push
sbb
dec
cmp
imul
pop
icebp
and
incl
add
jle
jmp
cs
mov
mov
les
pop
lret
add
addl
push
add
stc
out
movsb
add
in
and
out
mov
inc
add
iret
stc
push
gs
ds
in
mov
mov
push
pop
sbb
adc
sub
add
adc
mov
cld
pop
jbe
add
popf
pushf
push
clc
addl
add
lret
xlat
jbe
add
leave
lds
jecxz
mov
daa
add
push
xchg
mov
sub
fmuls
xchg
out
cld
add
test
push
add
adc
decl
mov
jle
add
add
call
mov
and
decl
inc
add
dec
outsl
outsb
popf
scas
jp
push
ljmp
into
dec
mov
cmp
inc
add
movl
stos
xor
add
js
icebp
mov
jmp
inc
add
jp
add
sub
mov
xchg
mov
add
mov
mov
jae
incl
add
dec
xchg
xchg
jns
add
add
and
call
add
fsubr
and
jmp
add
add
jno
decl
add
push
sub
inc
add
dec
push
insl
cltd
xor
add
add
jae
ljmp
add
mov
add
add
add
sub
xchg
jecxz
adc
push
jle
mov
add
inc
add
add
les
into
pusha
add
xchg
dec
ljmp
mov
mov
sub
add
mov
nop
lret
xlat
addl
xchg
mov
fwait
pop
mov
movl
xchg
add
jmp
sub
add
jmp
jne
mov
add
add
add
add
popa
add
dec
jo
pushl
add
add
add
mov
sub
pop
cltd
jmp
dec
add
incl
dec
lea
add
dec
mov
add
rorb
add
push
sub
ja
icebp
dec
and
aas
dec
add
cmp
add
xchg
ss
lahf
xchg
xlat
jl
add
cmp
sub
or
jno
jmp
sbb
add
add
add
lret
sub
mov
add
cmp
hlt
mov
adc
jmp
add
inc
add
add
pop
add
add
jbe
add
add
add
xchg
mov
jmp
add
mov
cli
xchg
mov
jo
pushl
add
push
add
sub
stc
fildll
sub
mov
jmp
lds
push
add
cmp
data16
and
jmp
mov
bound
call
adc
add
add
lahf
pushl
movsb
add
pushl
shlb
iret
push
push
push
mov
add
add
pop
jle
add
adc
ljmp
pop
outsl
xor
pop
sbb
repz
leave
call
fucomip
cmp
add
add
add
outsl
roll
xchg
dec
mov
mov
movsl
add
sub
add
lock
fwait
push
stos
repz
sbb
iret
add
add
add
lods
xchg
aad
add
rcrl
addb
pop
loopne
jmp
int
stc
pop
xchg
xchg
xor
fistl
add
sub
ds
push
sbb
mov
lret
jge
add
incl
lcall
add
stos
pop
xchg
pop
ret
add
inc
add
add
fldt
add
adc
in
aam
add
mov
add
mov
mov
repz
jmp
loop,pt
add
data16
add
jmp
adc
add
mov
add
push
addb
imul
and
call
mov
add
mov
dec
pop
jle
adc
cmp
add
pop
or
aaa
pop
call
mov
and
jl
pop
roll
add
xchg
and
dec
and
ljmp
lret
xor
call
mov
pop
pop
jae
call
mov
mov
test
nop
dec
jg
push
add
js
add
sub
xchg
je
push
add
sub
xchg
loope
ret
add
fwait
inc
add
sub
add
pushl
mov
je
add
and
decl
add
dec
mov
add
pop
add
sahf
push
add
lret
dec
push
ds
add
jne
jmp
add
add
mov
pop
xchg
fildl
out
pop
stos
pop
lock
jmp
add
mov
decl
pop
mov
add
add
mov
lahf
sbb
ret
add
loop
xor
add
addb
add
fiaddl
mov
data16
add
imul
add
mov
repnz
fists
mov
rcrl
push
push
add
mov
add
dec
daa
add
jbe
add
or
add
pushf
cmp
push
pop
jle
add
movb
cmp
add
testl
ret
add
add
stc
jo
inc
add
cs
add
pop
inc
add
pop
scas
xchg
jg
and
push
out
jmp
add
add
cmp
and
cwtl
or
add
call
add
push
push
add
xchg
fdivp
dec
movb
addb
sub
pusha
add
cmpsb
add
jbe
in
or
add
dec
shl
add
pop
adc
jmp
decl
or
push
inc
add
cs
movsb
add
add
loope
mov
jg,pt
cmp
stos
jnp
xchg
or
add
dec
adc
dec
ret
and
jmp
push
add
add
incl
call
add
bound
call
sbb
call
sub
mov
add
jecxz
ret
add
neg
xor
lcall
in
outsb
mov
add
mov
xor
pushl
xor
adc
jbe
mov
dec
sub
mov
addl
stc
push
add
dec
repz
int
mov
sub
sub
pop
test
fimull
jns
add
xchg
out
ja
jae
decl
add
out
mov
mov
enter
out
lret
mov
stc
inc
add
add
push
add
insb
push
add
lds
popf
and
ds
add
incl
ret
add
add
add
or
xchg
sti
imul
push
adc
jl
add
addl
incl
jmp
add
cmp
inc
add
enter
add
add
push
bound
lcall
xor
add
mov
add
in
pop
add
push
add
stos
rolb
add
pop
pop
xchg
push
pop
cmpsb
add
bnd
lock
dec
lods
add
mov
call
cld
add
dec
and
decl
loope
mov
ret
add
cmpsb
add
stos
xor
jo
push
sub
add
adc
roll
mov
add
dec
add
jmp
pop
fwait
mov
lret
add
in
inc
add
movb
add
mov
stos
mov
jne
clc
adc
decl
cmovge
incl
add
or
mov
add
xchg
cmp
xor
ds
push
aad
sbb
or
adc
decl
mov
add
das
pop
movsl
add
lock
loop
pop
add
add
and
lcall
add
xlat
adc
add
adc
jmp
call
fldl
sbb
add
xor
call
das
ja
addb
add
mov
mov
lret
dec
add
pusha
add
shll
add
pushl
add
push
hlt
mov
add
add
cs
add
push
add
dec
push
jmp
add
jne
xchg
add
mov
mov
inc
add
add
add
add
add
add
imul
sti
imul
sub
data16
add
out
aad
add
mov
sbb
add
test
push
sub
add
add
movb
movsb
add
sub
leave
imul
mov
int3
fdivrp
xor
lcall
add
and
push
cwtl
mov
add
mov
repz
testl
fdecstp
add
outsb
scas
push
lods
jo
incl
loop
dec
add
dec
stos
in
jge
add
or
sub
lcall
cltd
sbb
add
pop
add
mov
pusha
add
loope
add
call
push
add
push
add
movb
add
fcomip
mov
loope
mov
add
cmpsl
add
mov
incl
scas
roll
add
push
mov
add
cmp
add
mov
ja
add
out
push
add
sub
sub
inc
add
push
into
std
in
add
push
shlb
mov
xchg
add
dec
mov
add
sub
add
pop
fdivl
add
div
clc
push
inc
add
push
add
and
lcall
les
push
add
jnp
in
je
xor
lcall
lret
jae
fmul
test
push
mov
xchg
pop
mov
sub
add
and
pushl
imul
push
popa
add
xchg
int3
bound
inc
add
fs
movsl
add
fisubs
mov
sbb
test
xchg
testb
in
dec
mov
push
adc
lcall
push
and
cmp
add
or
add
cmp
out
hlt
mov
sbb
loope
xchg
jo
call
call
add
call
push
add
decl
mov
inc
add
push
mov
push
add
pop
scas
add
fstpt
insl
sub
push
movsl
add
add
stos
mov
add
daa
add
ja
add
add
jns
into
mov
jmp
xlat
lock
dec
repz
dec
popf
movb
adc
jmp
lcall
add
jmp
jg
cld
jbe
add
mov
fadds
fisubrl
push
add
inc
add
add
add
xor
pushl
cltd
mov
add
cwtl
inc
add
inc
add
insl
daa
add
push
addl
push
sahf
lods
out
daa
add
add
bound
jmp
add
ljmp
add
xor
fsubrl
call
rcr
lea
dec
add
push
repz
ljmp
ret
add
ljmp
sub
mov
push
sub
add
add
dec
push
adc
jmp
xchg
movb
jle
add
add
cmp
incl
add
push
add
push
add
jnp
mov
jno
lcall
add
ljmp
pushf
jb
lcall
dec
cli
popa
add
push
pop
jne
mov
incl
mov
xor
dec
inc
add
movsb
add
add
sub
movsl
add
popa
add
mov
add
clc
mov
mov
add
xchg
adc
call
addl
add
adc
dec
xchg
aad
add
lcall
add
sub
add
dec
leave
add
iret
xor
jmp
add
push
adc
incl
add
or
cmp
aad
add
inc
add
dec
clc
movsb
add
mov
mov
add
js
repz
mov
push
test
cli
xor
push
adc
pushl
decl
mov
sbb
jge
and
pushl
add
roll
add
xor
call
cmpsl
add
lcall
add
out
pop
push
cli
rolb
pusha
add
fsubrp
sub
push
add
pop
add
leave
leave
add
lcall
fsts
mov
add
outsl
push
fldt
push
xor
sub
add
mov
mov
add
push
add
pusha
add
add
jmp
int
add
add
call
push
popa
add
mov
lock
lahf
mov
xlat
jno
pushl
sbb
sub
bound
jge
jno
cmp
movl
add
push
add
test
idiv
pop
daa
add
jo
decl
push
add
inc
add
add
in
push
inc
add
add
mov
sar
add
dec
sbb
ljmp
mov
inc
add
data16
cmp
repz
mov
mov
jmp
incl
data16
nop
push
add
stc
pop
pusha
add
inc
add
xlat
sub
stc
pop
ja
and
fdivrs
lods
lea
sbb
cmp
add
int3
sub
out
out
xor
incl
add
pop
movsl
add
add
add
push
add
mov
add
mov
add
test
fmuls
lret
lods
sarb
or
xor
decl
loope
mov
sbb
dec
inc
add
push
ss
test
mov
cli
pop
out
jb
jnp
mov
mov
dec
push
add
mov
add
push
xchg
cmpsl
add
dec
std
mov
ret
add
sbb
and
or
stos
cmp
xchg
aas
mov
sub
add
sub
dec
dec
mov
out
cmp
or
insl
hlt
sbb
clc
adc
pushl
call
add
mov
add
faddl
dec
lret
mov
add
roll
mov
add
mov
mov
push
add
xor
inc
add
iret
xchg
into
clc
xchg
and
call
inc
add
add
loop
pop
add
imul
add
rolb
push
add
fcoms
notl
sbb
inc
add
scas
sub
in
ljmp
add
out
leave
sub
hlt
mov
add
jbe
xor
ljmp
sti
insl
mov
je
out
mov
icebp
xor
lcall
xchg
lds
mov
inc
add
mov
mov
test
add
outsb
sub
decl
mov
cmp
jge
ret
or
fcmovne
stos
pop
add
add
lret
jnp
pop
movb
add
mov
add
lret
inc
add
sbb
mov
add
sub
jle
jnp
add
jmp
movsl
add
add
add
and
incl
int
mov
adc
pushl
ljmp
add
incl
pop
cmp
js
add
leave
jb
lcall
je
or
add
aad
lock
jecxz
add
inc
add
movsl
add
add
dec
sub
outsl
arpl
jmp
loope
pushf
push
add
pushl
add
add
add
imul
push
add
pop
in
les
mov
loop
push
xor
add
mov
add
add
add
mov
mul
add
add
cltd
inc
add
fimuls
addb
movsl
add
push
lds
pop
or
sub
add
stos
std
lret
jg
add
add
fs
insl
icebp
mov
add
jae
lcall
cld
fisttps
fisttps
mov
mov
add
add
xchg
cmp
jno
pushl
dec
addb
pop
enter
add
in
sbb
jo
jmp
add
jmp
and
decl
neg
mov
test
aam
add
incl
push
adc
incl
nop
mov
add
test
push
add
cli
or
jmp
add
add
outsb
xchg
xchg
mov
xchg
ficoml
jns
dec
push
add
sti
cmc
in
in
and
jmp
mov
imul
add
dec
add
jmp
add
add
add
pop
mov
or
mov
sahf
lcall
or
sub
add
movl
pushl
lock
push
adc
incl
cltd
and
ljmp
jb
decl
mov
add
xlat
jge
add
inc
add
mov
add
loop
outsb
cmp
in
call
sbb
outsb
push
add
popf
jbe
push
inc
add
and
call
add
add
pop
in
pop
add
movsb
add
cmp
lea
repz
mov
mov
faddl
mov
add
add
push
add
mov
setb
mov
add
daa
add
add
add
mov
shlb
pushl
jbe
cld
out
dec
jno
incl
call
je
add
fistps
mov
das
mov
xchg
xor
jmp
add
and
sti
int
add
add
jl
aaa
cmp
jne
adc
push
icebp
cltd
push
add
xor
add
hlt
inc
add
adc
pop
adc
in
xor
mov
push
xchg
sahf
ret
add
insl
sub
adc
ljmp
sub
int3
sbb
pop
xchg
outsb
fcomps
popa
add
call
testl
jnp
add
add
add
xor
jmp
pusha
add
out
push
ljmp
mov
add
inc
add
aas
addl
jns
add
ljmp
dec
sarb
in
mov
rcr
in
dec
add
call
add
out
and
jle
adc
incl
add
add
pop
adc
dec
jnp
dec
icebp
xchg
imul
add
call
cmp
add
jg
xor
fistpll
mov
add
pop
bound
fists
cwtl
jb
cli
out
pop
mov
aas
push
add
cld
movl
add
jl
lret
add
out
jne
pop
cmp
add
inc
add
sti
dec
sahf
adc
out
cwtl
je
mov
testb
pop
pop
aad
add
add
sbb
sbb
lock
fsubr
ja
add
cmpsb
add
xor
decl
ret
add
mov
lcall
incl
ljmp
xor
movl
jo
incl
add
adc
dec
addl
add
mov
std
pushf
pop
push
and
jle
test
jmp
add
scas
stc
icebp
imul
cmpsb
add
dec
rolb
call
and
inc
add
add
arpl
lcall
add
add
dec
and
decl
xor
outsb
xchg
in
push
or
add
jnp
add
nop
flds
pop
enter
add
adc
add
std
pop
cwtl
imul
movsb
add
in
xlat
cmpsl
add
add
xor
xchg
add
fcmovbe
pop
add
stos
out
sbb
add
jae
decl
add
mov
add
add
jmp
ljmp
and
lcall
and
cmp
pop
fsubs
add
out
ljmp
in
sti
inc
add
call
bound
lcall
push
add
test
add
dec
xchg
xchg
xlat
cmp
add
into
pop
add
push
add
out
inc
add
lret
pop
add
loope
inc
add
add
pushl
push
add
jle
add
stos
mov
loopne
daa
add
fsubs
add
aad
add
sbb
add
add
add
addb
add
data16
call
add
std
xchg
or
add
add
push
add
mov
dec
in
dec
jne
pushf
adc
jp
add
sbb
ja
in
ud2
push
add
jno
incl
stc
movl
lret
lods
inc
add
js
add
jnp
movsl
add
add
and
std
mov
test
fsincos
pop
aad
xchg
push
adc
ljmp
cmpsb
add
inc
add
and
jns
jp
xchg
out
cli
sbb
add
sahf
scas
rolb
add
mov
xor
jmp
mov
shrb
cwtl
aaa
lods
out
xor
incl
cmp
lcall
xor
fldcw
mov
sarb
repz
shll
add
jnp
call
ljmp
lcall
or
add
and
lcall
int3
mov
cmpsl
add
lods
roll
ljmp
mov
xchg
pop
arpl
lcall
jb
call
lret
mov
scas
mov
addl
bound
call
sub
mov
push
jge
add
cmp
pushl
add
jmp
xchg
mov
int
js
add
add
dec
push
add
aam
push
lcall
lret
sbb
call
add
and
jmp
insl
jg
out
rorb
call
mov
add
ret
add
push
roll
dec
cmpsl
add
fmul
xor
call
rcrb
mov
add
cmp
out
cmp
cmpsl
add
sub
call
scas
sub
dec
cmp
add
add
addb
add
aam
add
int3
ret
loopne
cld
push
leave
xchg
in
xlat
ja
jp
lock
add
jns
fmul
rolb
lods
test
jle
add
add
insl
adc
jmp
cs
sbb
add
incl
decl
outsb
pop
mov
add
jne
dec
jae
incl
add
inc
add
xor
xchg
dec
pop
movsl
add
mov
add
call
add
incl
add
incl
add
lods
jns
or
jmp
add
push
add
add
pop
test
sbb
in
jl
add
sbb
aad
or
mov
je
add
cmp
loope
inc
add
xchg
leave
testb
mov
add
mov
push
or
mov
pop
adc
ljmp
das
les
add
jmp
add
add
mov
fwait
fs
call
test
sbb
imul
or
xchg
sbb
ja
push
add
popa
add
sbb
add
dec
push
pop
lahf
test
outsb
mov
ljmp
aam
int
add
bound
cmp
test
jmp
add
add
fistpll
nop
cmp
mov
xor
add
push
add
addr16
add
add
add
leave
mov
add
pop
mov
loopne
pop
imul
ljmp
in
leave
out
jae
jmp
xchg
cwtl
jno
call
into
jns
addl
add
jo
clc
jle
add
mov
ss
or
sarb
ss
leave
jno
jmp
and
lcall
add
add
sub
xchg
mov
out
jg
mov
push
pop
addb
add
jg
dec
sahf
daa
add
ss
push
add
add
out
das
pushl
add
add
jmp
addb
add
das
test
bound
jmp
pushl
jmp
incb
add
leave
push
sub
add
add
decl
test
or
fbstp
sbb
add
popa
add
mov
xchg
or
dec
fnsave
and
fidivrs
add
mov
jmp
xor
pushl
outsb
lcall
stos
mov
idivb
push
jae
call
add
inc
add
ljmp
add
ja
jns
std
icebp
bound
mov
add
incl
clc
jbe
add
std
int3
pop
dec
mov
jmp
add
xchg
sub
icebp
push
add
mov
push
iret
bound
incl
fs
add
cmc
imul
les
jge
lea
push
add
inc
add
adc
jmp
notb
mov
add
int
out
jne
outsb
inc
add
bound
decl
inc
add
pusha
add
inc
add
int
xor
decl
add
add
push
jno
decl
jmp
add
pop
call
adc
js
adc
stc
roll
xlat
outsl
add
dec
int
add
shlb
dec
fwait
pop
jecxz
jg
inc
add
jae
call
imul
decl
imulb
call
loopne
cli
addb
addb
jns
add
dec
jns
pop
add
sbb
mov
add
lcall
add
jg
push
dec
dec
pop
or
xor
mov
call
add
jmp
bound
ljmp
icebp
outsb
mov
xchg
sbb
and
fdivrs
addr16
add
add
ret
add
mov
rorb
dec
loope
jle
inc
add
je
inc
add
lcall
dec
adc
ljmp
not
jb
jle
mov
add
fcoml
decl
add
add
fdivl
pushl
add
dec
jg
sub
mov
add
cmpsb
add
add
mov
jns
add
xchg
pop
stos
repz
movb
jmp
xor
pop
insb
mov
inc
add
mov
add
pushl
add
add
ljmp
cmp
add
jb
jmp
add
inc
add
mov
addl
lea
add
xchg
insb
mov
mov
dec
ret
add
cmp
add
add
push
fnclex
add
add
cmp
inc
add
pop
mov
repz
add
add
sbb
lcall
sub
add
add
mov
je
lahf
iret
imul
dec
popa
add
aam
add
imull
bound
jle
adc
add
pop
dec
sub
loop
inc
add
add
data16
imull
xchg
lock
mov
mov
add
add
clc
iret
or
push
push
add
add
in
mov
add
cmp
loop
add
ljmp
test
inc
add
clc
pop
mov
add
mov
out
call
push
add
jae
decl
jbe
fiaddl
add
mov
xchg
gs
add
leave
jne
add
cli
inc
add
jnp
out
repnz
test
fldcw
sbb
roll
fdivl
mull
jmp
add
rcr
pusha
add
das
adc
add
daa
add
jmp
sub
add
add
add
or
call
leave
sub
add
mov
cmp
add
outsl
jae
ljmp
scas
leave
mov
fisubrl
cli
mov
sbb
add
int3
loope
add
add
or
pop
fcompl
and
push
jne
jb
incl
arpl
ljmp
insl
cmpsb
add
jmp
jmp
add
push
and
pushl
dec
push
scas
push
cmp
fwait
sub
add
fldt
add
mov
sbb
and
add
aad
xchg
lods
xchg
mov
add
pop
inc
add
sub
adc
ljmp
pushf
roll
jne
add
jg
add
ret
shlb
add
lods
cltd
mov
inc
add
adc
decl
shll
add
das
pop
jmp
addb
add
movl
add
arpl
ljmp
sbb
add
add
adc
incl
mov
add
jmp
mov
bound
mov
or
xchg
sub
out
xor
pop
les
jp
fwait
rclb
pushl
xchg
jg
leave
fnsave
add
mov
addl
inc
add
sti
loopne
sti
xor
fcmovnu
inc
add
mov
gs
add
push
lar
stc
icebp
nop
sbb
dec
cmp
add
adc
call
rolb
mov
inc
add
xor
cli
jnp
add
movl
repnz
popa
add
jns
test
aad
lods
shrb
add
xchg
movsb
add
mov
add
pop
psrad
pop
mov
sbb
mov
push
add
push
add
mov
add
in
leave
inc
add
call
adc
ljmp
outsb
cld
js
les
dec
and
in
pop
add
add
cmpsb
add
into
insb
lods
ds
jae
jmp
add
in
pop
xor
add
xchg
shrl
lcall
push
add
xor
cld
fdivrp
mov
roll
adc
pop
add
mov
add
adc
lcall
add
incl
add
in
out
fisubrl
mov
call
add
add
xor
clc
push
add
jns
jg
adc
clc
out
addb
aad
jb
call
jbe
add
addl
add
divb
movl
out
test
mov
add
add
add
pop
pop
add
add
inc
add
jecxz
pushf
xor
incl
ljmp
call
add
add
jl
mov
add
add
bound
call
addr16
rolb
add
ljmp
add
call
mov
add
js
pop
movsl
add
stc
cwtl
cli
push
add
jge
mov
add
add
call
je
sub
dec
pop
adc
clc
enter
or
iret
daa
add
xchg
filds
add
mov
jbe
fcmovbe
je
nop
mov
leave
and
xor
cmp
pop
addb
aas
push
add
lods
mov
call
add
cmc
jns
add
inc
add
jecxz
dec
out
decl
aad
cmpsl
add
xchg
xchg
or
dec
mov
add
xor
enter
cmp
adc
push
mov
dec
fcoml
insb
add
dec
stos
leave
fisttps
add
jge
add
push
add
mov
icebp
add
call
dec
jbe
xchg
iret
mov
lret
add
add
jmp
add
add
rolb
fistl
iret
mov
add
add
pop
cwtl
mov
add
divb
add
fadds
push
jmp
repnz
sub
lcall
add
decl
jmp
std
divb
jmp
add
pop
mov
add
mov
test
popa
add
or
pop
mov
jmp
add
imul
add
mov
lcall
fsubs
cltd
in
sti
sub
cwtl
dec
test
jmp
lods
push
add
aad
add
pushl
jp
add
pop
hlt
lock
pop
add
add
icebp
dec
clc
jl
add
add
ljmp
in
xor
decl
incl
add
out
daa
add
rolb
mov
into
xor
call
decl
xor
decl
hlt
mov
add
xchg
push
dec
mov
mov
dec
add
lods
iret
inc
add
add
mull
aad
add
add
std
sbb
pop
add
add
dec
push
cmp
xchg
xchg
xlat
aaa
addl
aad
ds
lahf
add
sub
mov
add
jmp
add
add
sahf
nop
fimuls
add
ljmp
add
jge
cmpsb
add
jg
addl
pop
xor
decl
cmp
mov
add
sub
add
add
aaa
into
cmp
aaa
insl
adc
fbstp
shl
add
push
add
jbe
lret
aaa
test
lcall
shll
in
int3
and
addb
dec
mov
pop
std
xor
decl
mov
xchg
cmpsl
add
dec
rolb
adc
ljmp
inc
add
inc
add
insl
movl
cmp
jo
call
push
add
xor
add
in
jmp
xchg
aad
dec
mov
or
add
add
mov
add
ljmp
add
rcl
pop
dec
mov
push
add
add
ja
add
rolb
lahf
cmp
call
jmp
and
pop
inc
add
push
idivl
movsb
add
add
cs
xchg
call
stc
and
call
mov
add
rcll
inc
add
loop
inc
add
aad
in
inc
add
add
lret
lods
mov
jge
mov
add
adc
jmp
add
cmpsl
add
insb
cmp
add
dec
pop
xchg
xlat
test
mov
lcall
movsb
add
add
in
push
mov
add
shl
add
lcall
add
add
mov
mov
pop
inc
add
addb
xchg
adc
ljmp
insl
add
ljmp
jb
fcmovb
add
das
fdivl
push
sbb
sub
addl
xchg
jns
push
add
add
lcall
dec
xor
ljmp
icebp
pushf
xor
jmp
mov
in
mov
add
add
xor
cmp
pushl
add
cld
roll
es
sarl
notb
out
add
add
lret
or
add
or
scas
aaa
mov
mov
mov
mov
mov
add
incl
sub
mov
inc
add
repnz
add
mov
cltd
aam
mov
aad
aam
in
addr16
add
add
mov
add
inc
add
add
add
ljmp
add
add
cmp
push
ret
add
cmp
popf
xchg
data16
jne
add
out
xchg
addb
add
xor
add
decl
add
lcall
add
les
lcall
push
add
test
call
mov
in
out
add
lods
xor
xchg
xor
pushl
dec
mov
dec
push
add
mov
inc
add
cmp
test
mov
dec
rcrb
loopne
int
lcall
js
loope
cmpsb
add
add
or
add
add
fiadds
mov
call
push
add
xor
push
push
add
mov
call
mul
add
add
ret
add
adc
pushl
xor
call
add
movsl
add
and
std
int3
mov
add
roll
fwait
and
fsubs
mov
hlt
lret
add
or
adc
xor
mov
out
jne
add
fwait
movsl
add
add
add
incl
mov
xlat
loope
test
add
sub
dec
hlt
stc
mov
add
dec
inc
add
push
add
ret
jne
xchg
rolb
and
add
scas
ja
jb
jge
rclb
add
add
add
ljmp
add
fabs
add
add
popf
sahf
jle
daa
add
jmp
mov
ljmp
mov
mov
and
lcall
test
jnp
add
fbstp
aaa
adc
dec
pop
inc
add
or
test
mov
xchg
lret
clc
pusha
add
jge,pt
addl
xor
out
mov
sbb
call
add
std
inc
add
out
les
fsts
push
int
add
or
mov
add
lret
inc
add
lret
leave
data16
add
add
cmp
mov
add
in
lea
add
dec
jmp
add
inc
add
faddp
add
sbb
fcoms
sbb
lcall
ljmp
add
aas
push
add
rolb
leave
or
inc
add
and
pushl
pop
add
jmp
add
add
mov
add
ljmp
sbb
add
push
cmc
fnsave
mov
sub
scas
push
or
add
mov
add
xchg
fcmovnu
outsl
jo
jmp
add
push
xchg
inc
add
lods
sti
push
add
call
das
fldt
cmp
add
push
cmc
aaa
pop
sbb
loopne
inc
add
add
call
adc
inc
add
add
sub
pop
cmp
add
pushl
add
jno
jl
pusha
add
in
movsl
add
add
add
mov
pop
add
jmp
add
roll
repz
jno
incl
add
hlt
addl
add
pop
insl
movl
add
bound
call
loopne
arpl
ljmp
adc
jns
push
add
mov
popa
add
cmpsl
add
add
out
test
movsb
add
push
add
xlat
mov
add
add
jae
push
movb
loopne
xchg
xchg
outsb
lock
add
xor
lcall
sub
adc
jmp
add
push
add
push
or
imulb
mov
push
add
xor
pushl
inc
add
cmp
add
insb
xchg
decb
sub
mov
or
add
sub
shrl
leave
dec
cmp
enter
xchg
jo
cli
sbb
rcll
add
lock
movl
add
lcall
jb
lcall
adc
movl
add
add
add
add
jns
add
add
dec
fsubs
push
inc
add
pushl
sbb
scas
std
adc
add
mov
insl
cs
test
imul
testl
add
sahf
stc
add
lcall
in
lock
test
decl
add
jnp
add
mov
add
pushl
or
add
out
xchg
or
inc
add
cltd
mov
fstps
dec
shrd
add
sbb
sub
add
jmp
stos
in
jl
addb
mov
movb
add
mov
iret
xchg
std
repnz
add
call
add
or
add
cmp
jbe
scas
mov
scas
dec
jnp
add
lcall
add
les
das
scas
pop
repnz
add
mov
aas
inc
add
add
push
mov
xor
jmp
add
mov
add
jmp
psrad
xchg
testl
add
adc
incl
add
dec
enter
cs
addl
dec
sub
add
sbb
out
loopne
arpl
incl
cmpsb
add
pop
add
test
inc
add
loop
fwait
iret
pop
push
or
add
addb
add
inc
add
dec
jg
icebp
movsl
add
add
out
sti
mov
add
and
mov
mov
sub
jg
add
pop
push
adc
ljmp
sub
add
add
cld
add
lcall
lods
cs
mov
lea
push
add
pop
jae
mov
add
repnz
ljmp
loop
xor
ljmp
add
add
lea
js
jecxz
aam
add
add
ret
add
push
add
dec
xchg
xor
ljmp
mov
push
mov
adc
jmp
add
mov
loope
pop
clc
xor
jge
cwtl
mov
addl
inc
add
mov
add
sti
push
add
repnz
dec
jp
add
xchg
fistps
xchg
jl
inc
add
fdivr
lea
insb
inc
add
lahf
adc
add
add
test
mov
add
add
xor
decl
mov
add
ljmp
aad
xchg
push
movb
aam
sbb
add
fisttps
call
aam
pop
addb
add
outsl
push
jecxz
add
inc
add
add
movb
jno
jp
add
pop
and
jmp
add
jmp
scas
test
addl
add
dec
fcomps
add
or
add
incl
mov
add
call
ret
movsb
add
add
add
mov
lea
pushl
dec
pop
out
jb
lcall
add
mov
mov
addl
cmpsb
add
mov
data16
arpl
fbld
add
push
xor
addr16
or
insl
jo
std
mov
jmp
add
in
inc
add
mov
ret
add
mov
add
inc
add
lret
xor
mov
mov
decl
jge
popf
push
mov
mov
and
ljmp
test
adc
lcall
pop
in
imul
out
pushf
call
iret
movl
cmp
add
jb
jmp
add
movsl
add
or
lret
lret
mov
repnz
cmp
inc
add
incl
pushl
test
mov
data16
clc
ss
add
fstl
dec
cwtl
xchg
sub
ret
add
lock
outsl
aaa
or
xchg
sbb
add
add
add
aaa
mov
fwait
and
jmp
add
out
jo
call
add
xor
roll
addb
add
adc
fucom
add
add
add
call
push
jmp
push
add
inc
add
sub
mov
push
insl
loope
loope
iret
cmp
mov
add
movl
add
xor
call
or
loop
in
jp
roll
shlb
add
cmpsl
add
add
incl
movb
xor
add
aas
call
add
pop
setp
and
out
jle
clc
hlt
push
pop
cwtl
xchg
add
call
xlat
and
call
pusha
add
pusha
add
xchg
lock
and
lcall
aad
add
mov
sbb
add
adc
add
into
sarb
adc
incl
incl
add
pop
fimull
xor
pushl
add
icebp
push
popa
add
add
push
mov
cmp
mov
movsb
add
nop
jo
pushl
add
popa
add
mov
in
int3
mov
add
div
pop
and
pushl
lock
das
xchg
lock
cmp
add
jp
add
push
shl
add
pop
push
addb
imul
add
add
inc
add
lret
dec
xor
enter
out
xchg
jg
movb
shl
add
mov
add
jmp
push
dec
cs
sbb
incl
add
aam
add
add
mov
add
ljmp
enter
jle
add
add
xchg
data16
jle
addb
mov
add
incl
cmp
lods
or
fidivrl
xor
xchg
je
outsb
nop
cmc
std
in
in
addr16
outsb
fiaddl
xchg
mov
stc
mull
pop
addl
xor
decl
add
or
ret
add
les
push
call
movl
test
lret
jbe
aad
loope
data16
nop
xor
inc
add
add
jmp
hlt
pop
mov
adc
ljmp
cmc
outsl
cs
add
add
mov
lock
data16
add
dec
mov
lret
pop
adc
jmp
add
pop
jle
pop
or
add
fisttps
arpl
decl
push
add
add
mov
mov
jae
pushl
jmp
add
xor
add
mov
cli
pop
adc
pushl
es
fdivl
push
sub
add
mov
cltd
mov
icebp
add
lcall
adc
pushl
ja
add
push
add
adc
xor
call
push
movl
enter
jno
ljmp
mov
inc
add
test
xor
lcall
pop
stos
test
daa
add
mov
add
in
jl
pop
pop
mov
addb
pop
data16
lea
add
inc
add
inc
add
sbb
rcll
pop
ret
add
incl
push
add
cmpsl
add
add
push
test
jl
sub
sub
add
jnp
cmpsl
add
cmpsl
add
dec
cmpsl
add
add
add
push
add
dec
pop
push
add
add
daa
add
lcall
nop
in
addl
sbb
add
out
in
fcomip
add
mov
icebp
add
jmp
inc
add
inc
add
iret
mov
call
add
aam
pop
in
sub
leave
insl
cmp
mov
mov
add
or
add
add
mov
lods
jmp
js
add
pushl
movsb
add
jns
out
movsb
add
popf
ja
icebp
addb
mov
adc
jl
lret
pop
sbb
pop
out
cmpsl
add
incl
add
ds
outsl
das
push
add
cli
xor
add
ljmp
push
push
out
mov
jge
in
nop
adc
call
call
nop
mov
sbb
lods
and
aas
insl
int3
sub
popf
sbb
shrb
je
minps
add
loopne
pop
add
incl
ljmp
cmp
mov
add
inc
add
pushl
std
jp
pop
push
cmpsb
add
lds
inc
add
sbb
aad
out
or
hlt
inc
add
test
stc
dec
lods
test
add
pop
test
bswap
das
cmp
add
add
dec
sub
add
cmpsl
add
inc
add
pop
pushf
and
call
add
mov
and
push
in
movsl
add
call
xchg
xchg
jg
roll
add
adc
call
jnp
and
pushl
add
cmp
jl
sbb
iret
scas
lahf
test
mov
add
mov
mov
outsb
push
adc
add
inc
add
movl
add
aam
add
dec
or
pop
push
add
decl
inc
add
xor
mov
add
imul
jmp
add
lahf
rcll
xchg
fwait
addl
ljmp
mov
or
jle
add
lcall
add
jmp
xchg
pop
xchg
xchg
adc
decl
push
add
fnstsw
pop
mov
add
out
addb
stc
in
std
add
decl
add
inc
add
adc
call
lcall
cmp
in
insl
jne
and
call
add
fs
or
and
inc
add
setno
mov
repnz
pop
stc
stc
mov
add
mov
push
xchg
lret
push
mov
icebp
daa
add
cmc
imul
and
mov
lret
sti
rolb
add
and
incl
stos
push
ret
add
add
loope
and
ds
ds
push
jnp
pop
imul
cmc
inc
add
sub
nop
movsb
add
add
pop
mov
add
lret
pop
jo
incl
add
add
add
decl
je
adc
jmp
cmp
pusha
add
push
out
fnstenv
pop
dec
cmp
incl
decl
jne
cmp
les
xchg
mov
cld
cld
insb
inc
add
cmp
add
add
or
inc
add
sub
or
je
add
cltd
es
add
add
or
pop
imul
leave
roll
xchg
push
add
sub
dec
xlat
push
xor
add
fstps
sti
js
inc
add
adc
xchg
cmpsl
add
pushl
pushl
add
addl
sub
enter
insl
fsin
jo
fnsave
xchg
mov
lcall
add
inc
add
add
rolb
add
jo
pushl
mov
into
cmp
adc
decl
add
adc
incl
sub
cltd
jo
decl
mov
ret
xchg
mov
aam
add
lcall
jg
add
xchg
xchg
cmp
aaa
insl
push
pop
mov
rclb
jp
add
xor
add
ret
pop
pop
mov
add
cmp
add
push
add
xchg
cld
test
xchg
shlb
add
cwtl
cmp
mov
pop
fdivl
add
inc
add
mov
movb
push
add
sub
push
add
loop
imul
sti
sar
repz
add
sub
add
add
add
add
add
sub
add
add
out
push
add
mov
icebp
aaa
in
jb
pushl
decl
lcall
add
sbb
cmpsb
add
add
lds
int
outsb
insb
leave
cmp
add
mov
add
ljmp
into
hlt
add
jmp
add
add
ljmp
adc
add
mov
add
add
cmpsb
add
add
aaa
les
adc
lcall
xchg
movb
add
push
outsb
sub
dec
adc
call
push
add
jb
jmp
add
push
mov
mov
out
cmc
cs
outsb
push
add
pop
outsb
sub
xchg
sbb
add
movsl
add
and
jg
add
dec
jmp
dec
push
and
pushl
and
incl
out
nop
test
js
aad
mov
add
out
adc
decl
les
xchg
cmpsb
add
pop
add
faddl
loopne
pop
stos
push
add
je
fistps
incl
mov
add
imul
add
stos
cmp
add
shr
adc
hlt
mov
and
xor
decl
sbb
jnp
les
arpl
ljmp
insb
push
jl
imulb
movb
jo
lcall
adc
call
lcall
hlt
hlt
inc
add
lahf
mov
add
jecxz
xchg
adc
jmp
add
add
jo
pushl
add
xchg
mov
mov
mov
push
add
test
lret
adc
pop
inc
add
add
jp
add
in
mov
mov
add
addl
and
ljmp
xor
call
in
test
add
in
movsb
add
xchg
cmp
test
xchg
rolb
leave
sub
add
mov
add
add
in
roll
mov
out
movsb
add
cmp
add
pop
jno
incl
add
add
add
js
movl
rolb
and
mov
add
insb
repnz
test
xchg
imul
jge
cmp
ret
add
and
pusha
add
repz
add
mov
pushf
pop
add
and
mov
aad
add
clc
movsl
add
mov
jmp
sub
push
add
pop
mov
add
outsl
or
add
outsb
and
pushl
mov
mov
fwait
aam
add
add
push
add
clc
mov
fdivrp
cmpsb
add
add
add
add
mov
inc
add
jp
add
add
call
push
add
jl
xchg
lock
lcall
cwtl
loop
in
adc
add
pop
test
out
push
testb
sbb
test
repz
loop
cwtl
mov
fwait
lcall
add
outsb
test
xchg
push
add
divb
jmp
jl
push
or
mov
xchg
sub
decl
push
add
sbb
add
add
pop
and
cld
adc
in
push
add
pusha
add
mov
jmp
add
leave
fmuls
push
insb
fisttpl
xor
jle
add
ret
add
leave
inc
add
sub
add
addl
mov
cli
test
add
roll
or
add
incl
add
rcrl
add
fsubl
pop
inc
add
popf
push
lods
mov
popa
add
jecxz
dec
cs
mov
pop
xchg
push
jae
jmp
add
jg
add
inc
add
das
popf
shll
add
addl
add
enter
daa
add
lcall
and
ljmp
aam
out
adc
incl
mov
mov
cmp
xchg
add
pushl
pop
and
call
pop
enter
sti
or
sub
push
in
out
lds
or
mov
add
add
fdivrs
add
add
pop
add
aas
fisubrl
nop
sub
add
cs
ret
add
leave
dec
add
pushl
mov
jno
ljmp
in
out
cld
shlb
stc
xchg
sbb
xchg
cs
add
rolb
xor
js
add
decl
movsl
add
shr
aad
add
sbb
neg
sub
pusha
add
mov
jp
mov
cwtl
pusha
add
mov
mov
lret
inc
add
and
mov
inc
add
lods
mov
stos
lock
cmp
clc
mov
mov
xchg
addb
pop
jg
stc
adc
call
mov
push
add
hlt
xchg
incl
lcall
add
xor
out
cmp
lahf
decl
clc
test
insl
dec
pop
add
add
pop
in
inc
add
fstl
lahf
ret
add
roll
jbe
xor
jmp
add
add
pushl
inc
add
jnp
sub
add
dec
jne
mov
into
out
cmovae
push
sub
add
xchg
jnp
xor
lcall
in
add
pushl
add
inc
add
call
add
incl
mov
inc
add
add
add
mov
add
int
movb
add
pop
adc
push
repz
push
rclb
fsubr
mov
add
movb
jne
rolb
add
cmp
cli
push
movsl
add
and
ljmp
add
ljmp
add
lcall
add
cs
fimull
add
cs
mov
cwtl
scas
mov
xchg
das
sbb
add
iret
inc
add
cmp
add
cmp
daa
add
pushl
add
xor
ljmp
incl
push
add
inc
add
call
add
dec
push
add
push
shl
add
lcall
lret
call
xchg
dec
push
hlt
push
lods
inc
add
rolb
add
fiadds
mov
dec
movsb
add
incl
add
in
rcl
test
xchg
pushf
adc
add
add
insl
cltd
stos
call
add
push
add
es
test
add
mov
add
sti
sub
popf
jle
push
add
pushf
scas
jecxz
adc
jmp
add
enter
add
aaa
cwtl
xor
ljmp
loopne
into
dec
xor
pop
add
movl
mov
in
insl
imul
das
out
and
ljmp
mov
lcall
insl
jno
pushl
add
lds
add
aad
add
arpl
ljmp
adc
jmp
add
and
inc
add
hlt
or
daa
add
popf
push
sub
ljmp
push
outsb
in
das
cmpsb
add
loope
adc
decl
push
add
mov
iret
addb
fincstp
jl
mov
stos
cmp
in
ljmp
jmp
add
add
rolb
push
add
movsb
add
dec
call
test
adc
inc
add
call
xchg
sbb
add
pop
push
popa
add
outsl
xor
call
mov
imul
imul
fwait
lret
mov
mov
jo
incl
add
call
call
add
mov
jmp
add
add
add
add
add
add
xor
jge
and
call
into
add
cmp
incl
mov
jmp
add
decl
and
pushl
je
add
and
jmp
add
xchg
jl
test
inc
add
and
cmp
inc
add
add
out
xor
jmp
jmp
add
decl
pop
aaa
push
add
negl
decl
data16
push
push
xor
jmp
incl
inc
add
inc
add
add
cmpsl
add
or
xor
popa
add
inc
add
dec
mov
add
addl
push
and
jge
cmp
xchg
sub
pusha
add
inc
add
das
inc
add
rep
repz
cmp
add
sub
add
inc
add
mov
add
add
lret
movsl
add
xchg
pop
pop
sub
add
jnp
add
xchg
aad
push
push
add
jecxz
push
fistpl
shrl
add
outsl
mov
add
cltd
cmpsb
add
in
pop
data16
cmpsl
add
adc
jmp
add
cmp
addl
out
aas
push
add
jns
sub
adc
xchg
mov
test
pop
outsl
in
inc
add
jecxz
mov
ds
add
rolb
add
adc
push
mov
xor
pushl
add
jne
pop
and
incl
dec
in
inc
add
mov
xchg
out
and
ljmp
add
movsb
add
pop
sbb
xchg
push
add
addb
mov
xor
cmp
mov
mov
shl
add
add
dec
movsb
add
add
jmp
call
int
dec
sbb
add
pushl
fdivl
push
sbb
add
outsl
sub
add
add
add
xchg
out
jl
add
loope
push
add
xor
xor
add
lahf
test
lcall
ljmp
mov
into
xchg
jmp
decb
inc
add
repz
jl
add
popf
addl
or
lds
xlat
pop
outsb
push
sub
dec
jnp
iret
rcrb
lcall
mov
test
add
in
sahf
sub
pop
jno
jmp
xor
decl
add
testl
shlb
pushl
add
pop
sub
hlt
dec
imul
out
or
decl
mov
add
sbb
add
jle
ljmp
lea
cmp
adc
call
add
mov
add
add
add
push
add
add
pop
jg
add
or
sbb
ja
or
stos
adc
jmp
add
jmp
call
xor
sbb
add
outsl
movsb
add
add
or
add
pushl
dec
cltd
or
add
add
add
loop
xor
incl
fstps
fwait
and
int3
cmp
add
incl
sub
rolb
or
jo
call
dec
dec
jo
incl
add
mov
add
imul
add
mov
popf
cmp
dec
bound
call
frstor
add
les
jge
add
jmp
push
popf
sahf
shll
add
test
aas
jne
add
cs
add
jne
add
ljmp
dec
and
call
out
test
add
add
sub
add
shll
mov
or
add
bswap
add
mov
clc
into
add
pushl
imul
add
roll
jns
jo
jmp
add
sub
cmp
add
pop
push
repnz
lcall
dec
aaa
pop
negb
fwait
mov
cmpsb
add
iret
jns
lcall
out
add
mov
add
adc
jmp
add
pop
imul
inc
add
add
inc
add
add
add
adc
jmp
add
pop
jecxz
loope
enter
add
and
cmp
cmp
add
xchg
and
call
pop
cmp
scas
mov
lods
jge
add
mov
add
adc
pushl
jb
jmp
add
add
les
leave
or
std
repnz
jno
incl
add
mov
add
mov
cltd
or
add
and
call
adc
lcall
add
daa
add
push
inc
add
dec
push
cmpsb
add
adc
mov
add
decl
adc
call
incl
and
pushl
add
cwtl
push
add
adc
decl
stc
mov
bound
incl
and
push
add
cmp
ficoms
add
or
cmc
jmp
jo
call
add
bndldx
call
mov
or
in
aas
xor
jmp
movsb
add
scas
xor
xor
jmp
lcall
fimuls
out
push
mov
add
insb
pop
lods
mov
shl
add
fisttpll
lcall
push
sbb
mov
dec
loope
mov
add
jnp
xchg
xchg
jns
inc
add
lods
mov
add
add
std
adc
dec
jp
iret
dec
and
cmp
jmp
add
add
decl
mov
mov
mov
cmpsl
add
add
add
add
add
popa
add
mov
mov
out
push
push
fistpll
into
into
xchg
jnp
inc
add
mov
iret
test
add
addb
std
push
das
mov
push
lds
adc
jmp
add
stc
xchg
adc
mov
int3
into
iret
repz
cmp
or
add
add
jmp
add
cmpsb
add
stc
xor
call
ljmp
dec
jno
dec
and
stos
pop
jl
add
call
fsubrl
add
movl
mov
add
mov
add
stos
adc
divps
cmp
mov
repnz
ja
mov
aad
sbb
fstps
add
mull
add
call
mov
add
lcall
inc
add
adc
pushl
mov
test
push
add
add
loop
mov
jecxz
insl
lahf
mov
add
xchg
in
loop
or
jmp
call
aaa
mov
mov
add
cmp
add
cmp
add
call
add
add
mov
add
cmc
les
mov
and
call
dec
in
inc
add
das
add
fidivrs
add
je
rorl
push
sti
movb
inc
add
or
roll
add
xchg
lret
call
jecxz
in
adc
incl
cltd
daa
add
cmp
into
arpl
mov
jge
loopne
gs
insb
fwait
mov
cld
sbb
add
pop
push
add
enter
add
add
cmpsb
add
add
pop
cmpsl
add
and
pushl
add
pop
faddl
add
pop
xor
ljmp
pop
add
or
add
add
pushl
add
shrl
add
in
mov
scas
cmp
loopne
sub
popf
cmc
mov
test
insl
mov
add
jmp
xchg
rolb
add
add
mov
pop
cmovbe
sub
add
add
in
out
ret
add
add
loop
fs
push
jbe
push
movb
pushf
es
outsb
mov
jbe
dec
lret
movl
add
or
dec
jbe
jp
addb
add
xchg
out
ror
xchg
add
jmp
cmp
mull
jmp
xlat
jno
decl
adc
push
add
fwait
mov
add
out
in
sti
test
add
add
add
push
inc
add
or
movb
jmp
fmull
out
sub
jmp
add
pop
xor
out
pop
cmpsl
add
xchg
and
lcall
aaa
cltd
xor
add
lahf
movsb
add
add
add
jmp
mov
mov
add
add
dec
test
add
jo
call
add
xchg
push
add
es
scas
adc
incl
cld
jle
add
jmp
sbb
add
inc
add
add
add
add
inc
add
icebp
outsl
sub
push
sbb
std
cmp
fs
mov
pushf
addl
sub
je
mov
jmp
std
pushf
xchg
movsl
add
iret
adc
fsubrs
xlat
lods
mov
add
adc
ljmp
add
push
sub
lcall
iret
or
outsb
outsb
shlb
scas
clc
pop
jns
add
add
jl
pop
cmp
pushl
add
add
das
and
add
aad
add
ret
add
cmp
add
inc
add
lods
insb
movsl
add
stc
jne
fwait
test
cmpsl
add
add
jle
shrb
loopne
fstps
outsb
jle
add
add
cmpsb
add
jmp
push
mov
daa
add
add
lcall
lret
sub
test
call
test
add
dec
movl
add
add
loopne
mov
add
addl
fists
into
sub
out
add
loopne
dec
movsl
add
add
cwtl
xchg
or
add
sbb
outsl
push
add
mov
cmp
mull
inc
add
sar
xchg
xchg
dec
imul
dec
add
jmp
add
add
pop
mov
mov
fxch
inc
add
insl
cmpsb
add
cmp
js
xchg
ret
add
add
pop
loopne
push
add
aaa
mov
popf
out
hlt
call
loopne
in
xchg
imulb
repz
decb
sbb
fists
mov
pusha
add
leave
cmc
enter
lods
mov
push
add
addl
jle
addb
add
jecxz
fisttpll
imul
in
sti
add
out
push
je
add
into
fwait
jne
pusha
add
cld
mov
ljmp
pop
roll
add
adc
push
mov
mov
add
inc
add
das
inc
add
lret
mov
add
inc
add
fdiv
jge
fcomps
je
arpl
js
pop
ficoml
ljmp
mov
add
xchg
add
bound
ljmp
sub
add
add
popa
add
pop
adc
jge
xchg
jp
add
jmp
xor
cld
gs
add
sub
add
sub
aam
add
mov
lcall
mov
adc
incb
add
add
fsubr
out
or
inc
add
push
add
and
jmp
add
xchg
das
fsubr
addl
add
pop
inc
add
mov
sahf
or
mov
add
xchg
adc
xor
incl
add
mov
stos
xchg
mov
jae
pushl
inc
add
pop
fidivl
add
addb
add
dec
hlt
addb
xchg
fiaddl
push
inc
add
lcall
add
sbb
add
pop
gs
xchg
in
loopne
mov
dec
xchg
fisttpl
aaa
pop
pop
add
jae
decl
nop
sarb
sbb
add
or
cltd
inc
add
incl
daa
add
test
inc
add
jno
decl
out
xor
add
add
daa
add
add
add
or
clc
sub
add
pushl
add
xor
ljmp
xor
lcall
leave
sbb
adc
add
fwait
hlt
sub
add
inc
add
fildll
add
rcrl
insl
pop
ljmp
add
xchg
jno
jmp
add
add
divb
add
xor
pushl
addl
incl
add
dec
adc
call
pop
add
decl
mov
ficomps
add
add
movb
lea
dec
leave
outsb
js
add
add
add
jo
inc
add
add
and
cmp
add
inc
add
add
lods
sub
mov
push
add
das
xchg
dec
pop
fstpt
add
addr16
dec
cmp
call
mov
in
add
add
add
mov
add
add
ds
xrelease
add
add
ljmp
clc
jne
xchg
lds
fstpl
inc
add
or
dec
out
insb
fdivl
add
adc
jmp
repnz
add
stc
fildll
mov
add
fsubrl
nop
mov
cmp
in
pop
addl
outsl
fldcw
outsl
push
add
ss
jb
push
cld
pop
iret
ds
insl
mov
mov
add
call
add
mov
xchg
inc
add
add
arpl
clc
cmpsl
add
dec
jae
ljmp
xor
lcall
rcrl
std
imul
add
data16
and
pushl
movsb
add
add
mov
fimull
iret
into
lock
mov
push
lock
add
into
adc
lcall
dec
jae
call
es
mov
fistpll
lcall
push
shrl
adc
enter
add
and
pushl
push
or
mov
push
add
pop
roll
add
pop
add
clc
iret
insl
lock
fistpl
add
dec
xor
add
cmp
dec
in
or
mov
adc
inc
add
inc
add
mov
lods
lea
out
mov
add
mov
add
inc
add
add
push
cmc
testl
lahf
nop
lods
mov
ljmp
sbb
jbe
add
lods
push
add
pop
iret
cmp
add
push
divb
add
add
pop
cld
mov
add
add
das
out
leave
cmp
push
add
adc
inc
add
fmul
jns
mov
inc
add
add
pushl
add
lods
push
leave
sub
add
fdivrl
addl
inc
add
pusha
add
test
jmp
add
cmp
cmp
mov
movsb
add
mull
pop
lods
and
call
lock
incl
dec
jo
call
pushl
add
aas
push
add
mov
lcall
out
sbb
inc
add
push
push
add
and
mov
clc
int3
int3
mov
cltd
loope
push
add
movl
pop
cmp
add
das
mov
push
xor
cmp
add
sarb
add
movb
mov
adc
add
add
roll
mov
jmp
add
pusha
add
test
sahf
js
add
add
sub
add
ljmp
in
ja
add
pop
jo
jmp
add
add
out
scas
sahf
adc
jmp
push
and
fbstp
mov
pop
mov
lcall
push
inc
add
mov
pushf
inc
add
jmp
add
incl
cmpsl
add
mov
lcall
mov
loope
cmp
insb
out
pop
sub
add
add
call
add
call
inc
add
add
out
or
adc
ljmp
push
add
mov
movl
sbb
xor
std
iret
les
out
inc
add
inc
add
loopne
and
incl
jmp
add
xchg
addr16
xchg
fidivrl
pop
sbb
add
fldenv
add
sub
add
data16
xlat
int3
jns
mov
add
sti
mov
dec
sbb
aad
cmp
add
add
ljmp
rcr
jb
push
aaa
data16
outsb
mov
data16
xor
jp
mov
adc
add
loopne
sbb
add
mov
add
add
mov
add
add
jmp
add
test
mov
cmp
sbb
add
xor
lcall
add
movsl
add
add
inc
add
add
add
or
add
mov
fnsave
call
or
addb
fistl
add
in
xor
incl
lcall
cmp
sbb
add
inc
add
and
js
add
decl
adc
lcall
movb
mov
addl
jmp
add
add
add
dec
addl
push
mov
dec
stos
repz
fistpl
shr
cwtl
movsb
add
loop
rcl
mov
les
dec
in
stos
sahf
pop
shll
inc
add
xlat
pop
xor
decl
add
add
sub
and
jmp
add
movl
test
sub
add
add
inc
add
repnz
out
mov
mov
xchg
ucomiss
add
mov
mov
inc
add
in
sbb
decl
loopne
dec
fisubrl
add
imul
dec
xchg
daa
add
sub
add
test
push
paddq
sbb
mov
mov
xor
call
jmp
add
add
loope
out
jecxz
cmp
lea
test
adc
jmp
add
add
fidivl
jmp
add
add
mov
ljmp
inc
add
pop
sub
decl
xor
jmp
add
sub
int
addl
insb
lcall
dec
popf
adc
call
test
jno
pushl
pop
leave
cwtl
outsl
outsb
add
pop
addb
pop
hlt
lea
lcall
lods
repnz
adc
pushl
add
or
sbb
pop
jg
add
iret
mov
lds
or
xchg
lds
das
addb
lret
adc
decl
stc
sub
adc
pushl
aam
lea
aad
and
jp
mov
ss
cmp
mov
ds
lcall
lahf
push
push
add
pop
repz
and
adc
dec
idivb
add
decl
add
cmc
push
add
lcall
pop
pop
rcrb
xor
add
push
dec
sub
inc
add
pop
add
addl
inc
add
mov
mov
xor
incl
add
add
add
cwtl
push
add
cmpsb
add
and
call
roll
add
mov
sub
incl
addb
popa
add
mov
inc
add
dec
mov
divl
popf
adc
add
add
push
inc
add
xlat
push
pusha
add
cmpsb
add
add
call
mov
cmp
cmp
sbb
mov
xlat
sbb
mov
xor
pushl
call
add
or
add
sbb
push
add
add
mov
fdivl
push
add
dec
in
jecxz
mov
imulb
add
mov
fnstcw
adc
push
addl
add
or
ja
add
fdivs
mov
lock
dec
jmp
mov
mov
add
pop
dec
in
jne
add
add
pop
int
or
add
rolb
jmp
add
loope
jg
mov
decl
cmp
xlat
pop
cmp
std
mov
ret
add
pushl
lcall
outsl
test
sub
cld
pop
inc
add
jae
pushl
call
pop
bound
ljmp
jns
fstp
fdivs
push
add
in
nop
fwait
add
add
ljmp
lret
ja
add
jle
cwtl
in
mov
mov
add
arpl
call
add
lods
sbb
sub
sub
jg
jns
add
jnp
movl
add
push
adc
ds
cs
pop
pop
sbb
scas
fwait
add
jmp
add
movsb
add
add
mov
add
mov
ja
out
ret
push
addl
jb
incl
incl
add
pushl
add
pusha
add
cmpsl
add
cmp
ljmp
test
mov
popa
add
adc
cmp
add
add
dec
rorl
iret
shl
add
add
movl
pop
add
int
add
call
sbb
push
roll
dec
test
cld
inc
add
push
ret
sub
out
fsubs
je
add
add
dec
or
pushl
add
push
add
data16
add
pusha
add
icebp
addr16
jg
add
int3
jo
jmp
add
je
sti
lahf
add
push
push
add
inc
add
cmp
xchg
movsl
add
roll
movl
sub
fs
add
roll
and
add
sbb
push
mov
fisubs
popf
inc
add
sahf
pop
daa
add
pushf
ja
bound
incl
dec
aam
inc
add
mov
test
sub
add
lcall
add
jno
ljmp
add
mov
cmp
adc
jmp
add
int
pop
xor
call
mov
xor
popf
out
cs
in
jecxz
je
mov
cmp
fmuls
add
jl
fstpt
dec
jno
jnp
pop
mulb
or
add
cmp
adc
decl
pop
test
lea
mov
add
out
mov
xor
ficoms
dec
mov
aaa
jmp
and
lret
xor
call
je
hlt
or
sbb
add
add
jne
out
ja
sbb
clc
add
aam
add
call
adc
decl
add
pushf
insl
sbb
add
lea
add
and
incl
add
inc
add
add
add
add
xchg
mov
dec
jmp
jnp
enter
scas
pop
add
mov
in
push
outsb
sti
inc
add
enter
push
add
cld
repnz
sbb
push
mov
jno
pushl
push
shll
push
movsl
add
jle
cmp
xchg
or
jmp
jmp
addl
addb
imul
dec
loope
aas
adc
ljmp
jl
push
add
sbb
add
mov
jmp
add
in
sbb
add
jmp
loopne
pop
cmpsb
add
sysret
add
loope
and
xchg
xor
repz
cmp
jno
ljmp
push
jle
add
iret
inc
add
insb
hlt
scas
cmp
lcall
cld
cs
mov
push
push
add
sub
std
in
adc
jmp
add
fcoms
lcall
add
aas
test
pop
or
decl
push
pushf
inc
add
add
call
push
sbb
pop
add
push
outsl
sbb
add
add
outsl
sub
mov
add
add
pushl
lcall
xchg
or
call
add
cs
adc
pushl
add
ud0
mov
cld
ja
icebp
cltd
sub
add
add
sub
add
sahf
sub
jne
clc
dec
lret
call
xchg
or
add
mov
out
clc
test
xor
lcall
dec
incb
add
lcall
call
add
ret
add
adc
lcall
aam
out
pop
addb
and
and
ljmp
mov
xchg
mov
adc
xor
call
das
cmpsl
add
movsl
add
insb
mov
add
or
pusha
add
mov
addl
add
fstpt
push
add
jmp
out
imul
jecxz
hlt
insb
cmp
mov
xor
add
sahf
lds
movb
add
xchg
aaa
fwait
scas
or
pop
test
pop
add
jmp
add
icebp
lret
popa
add
push
add
cmp
mov
lret
add
xchg
imul
jp
ja
add
lods
idivb
shrb
add
popf
testb
mov
dec
and
lcall
imul
mov
dec
push
mov
add
das
push
test
mov
lock
enter
repz
outsb
cmpsl
add
jno
jl
xchg
movb
mov
std
sub
mov
add
ljmp
add
pop
addb
add
loopne
mov
add
inc
add
add
incl
incl
add
adc
add
sub
add
add
add
inc
add
and
stc
fisubrs
inc
add
adc
add
imulb
add
add
inc
add
cmp
fnstsw
add
push
sbb
add
mov
add
and
jmp
add
in
jbe
jnp
add
push
mov
sbb
sbb
xchg
mov
ss
push
cltd
test
push
fisttpll
mov
sahf
lcall
repz
outsl
lds
leave
jo
lcall
add
pop
add
xchg
ljmp
addr16
imul
xchg
xchg
sahf
adc
call
add
cmp
push
mov
push
jle
or
push
movl
in
lds
cmpsl
add
cmpsl
add
cli
fstpt
into
inc
add
scas
and
jnp
add
pusha
add
xchg
add
std
xchg
les
adc
add
sbb
add
mov
lcall
xchg
pusha
add
sub
decb
add
jb
incl
in
pop
repnz
add
push
add
aas
sbb
add
testb
outsl
lods
enter
add
and
call
js
lock
add
mov
pop
and
incl
fiadds
add
add
fcmovnu
cs
xchg
cld
push
xor
incl
add
daa
add
add
ret
cmpsl
add
fsubl
add
fucom
add
add
aas
dec
pop
ret
add
add
aam
shrl
adc
incl
dec
arpl
jle
pop
add
in
jnp
xchg
push
xchg
data16
xlat
fidivrs
stos
and
and
inc
add
psubsw
jg
add
incl
add
inc
add
test
mov
add
mov
push
movb
add
push
add
addb
mov
ret
add
in
rcr
push
add
cmc
or
add
xchg
jl
push
inc
add
mov
cwtl
xlat
inc
add
out
or
mov
add
addl
or
add
sarl
add
add
add
inc
add
jecxz
das
add
imul
sti
int
add
movb
popa
add
icebp
sub
sbb
sub
pop
movsb
add
jbe
scas
test
out
mov
jnp
add
add
cmp
pushl
cmp
cmp
fbld
pop
add
aad
xchg
stos
sbb
dec
cmp
add
add
addl
mov
out
lcall
je
loope
pop
and
ds
adc
decl
jo
lcall
xchg
mov
test
add
aaa
and
decl
dec
jbe
fneni(8087
add
add
dec
lahf
fistps
add
jp
add
sub
jp
in
testb
lcall
push
sub
add
ljmp
add
sbb
cmc
stos
dec
iret
xchg
jge
fwait
sbb
sub
jmp
ljmp
add
in
shrl
ret
add
lds
xchg
jecxz
int
test
jecxz
and
stos
cltd
sbb
ljmp
add
dec
mov
pushf
or
add
addb
out
cmp
sub
test
je
iret
adc
add
insb
js
cmc
rorl
fcomip
leave
push
addb
rolb
cli
aas
and
lcall
sahf
cli
sub
add
ds
mov
add
push
add
in
imul
add
add
push
mov
icebp
cld
stos
mov
or
mov
decl
cmp
add
mulb
add
pusha
add
pop
sti
inc
add
je
add
push
dec
int
add
repnz
add
add
dec
xchg
sbb
add
mov
das
dec
das
xor
jmp
push
add
fxch
fstps
lds
aas
cmp
add
lds
mov
movb
add
cli
inc
add
pop
addl
jg
push
rolb
add
lcall
addb
imul
leave
inc
add
mov
add
sub
jl
add
cltd
mov
xchg
fcoms
dec
jbe
fnstcw
test
mov
jecxz
xchg
mov
sub
push
add
cmp
add
or
jno
jmp
adc
add
popf
addb
inc
add
mov
mov
incl
or
mov
add
fcomps
inc
add
jecxz
inc
add
pop
pop
add
and
pushl
std
pop
push
iret
adc
ljmp
xor
incl
rolb
add
mov
daa
add
add
xor
pushl
call
and
mov
or
mov
add
scas
push
sahf
stos
add
xor
dec
mov
add
mov
pushl
out
faddl
decl
push
dec
dec
repz
add
add
std
insl
daa
add
add
ljmp
dec
cmp
add
rolb
and
incl
jmp
add
xor
call
jecxz
mov
add
inc
add
jp
add
mov
jle
add
pushl
or
xchg
sbb
jl
stos
negl
dec
cmc
movb
xchg
sahf
outsl
xchg
add
jns
cmp
mov
fisttpl
or
sarl
jmp
or
add
movsb
add
jnp
add
jp
add
cli
mov
mov
dec
aas
out
gs
jle
ds
iret
xchg
fisubs
add
add
add
add
ret
addr16
sub
movb
add
add
in
negl
mov
sahf
lahf
inc
add
call
lds
add
incl
cwtl
dec
movl
jns
out
loop
out
out
jp
sub
add
cmc
in
les
jmp
mov
mov
jmp
icebp
push
mov
ljmp
fisubs
add
popf
rorb
jmp
pushl
out
xchg
add
test
dec
mov
xchg
into
nop
nop
jno
lcall
ljmp
add
and
in
fidivl
decl
stos
std
nop
xchg
lods
rolb
decl
les
inc
add
mov
jmp
sub
push
xlat
or
dec
imul
jbe
rorb
add
jb
lcall
roll
imul
shr
cli
enter
push
add
mov
and
data16
push
add
shl
or
mov
mov
fistl
add
xor
fsubl
jge
xor
ljmp
add
sti
ljmp
and
add
push
lahf
in
sub
inc
add
in
pop
lcall
add
and
scas
adc
call
add
jno
call
int3
in
pop
not
mov
lcall
add
cli
mov
mov
add
xchg
bound
jmp
imul
and
lcall
or
pop
jae
lcall
test
add
add
data16
add
xchg
sbb
cwtl
icebp
sub
cmc
adc
cmp
add
mov
adc
lcall
incl
add
add
add
push
dec
in
xchg
xchg
jne
mov
add
fistpll
mov
add
call
add
push
mov
inc
add
add
fsubrs
repnz
rorl
add
sbb
add
push
jmp
pop
xor
jns
add
in
lods
xor
incl
call
jb
ljmp
or
ret
add
jmp
mov
jae
clc
pushf
dec
add
out
out
ret
add
pop
xchg
lock
test
add
lcall
add
mov
add
pop
stos
xchg
mov
loope
adc
in
in
aas
jbe
in
fmulp
mov
add
add
mov
add
inc
add
or
add
ds
sbb
inc
add
outsb
jle
xchg
pop
add
rorl
cmp
add
pusha
add
push
add
mov
fbld
les
repnz
xchg
mov
rolb
add
add
clc
pop
mov
dec
add
pushl
add
pushl
or
popa
add
insl
addb
and
add
enter
addb
repnz
sub
add
xchg
imul
pop
shll
incl
add
loopne
adc
pushl
cmp
mov
aam
lods
push
pop
mov
out
add
lcall
out
and
dec
rorb
je
ret
add
and
lcall
test
xchg
pop
cmp
add
add
mov
add
movl
jp
sub
std
outsl
sub
sbb
add
or
add
call
xchg
push
add
mov
jle
outsb
outsb
sub
or
add
aas
dec
or
jmp
loope
push
loopne
xor
add
mov
add
add
data16
add
loope
mov
dec
lods
sbb
add
fistl
add
xlat
add
call
jmp
add
jge
jmp
call
mov
sahf
test
lock
add
add
pushf
pop
pop
lds
aas
add
or
pop
ja
stos
jo
ljmp
mov
pop
addb
mov
stos
add
aam
sub
cs
dec
sti
aaa
enter
add
loop
in
jg
adc
inc
add
std
sub
les
jmp
add
fisttps
jl
jno
incl
in
xchg
sub
jge
clc
pop
xchg
add
in
jne
lret
xchg
cmp
dec
ficoms
jns
add
add
jl
popl
into
addl
mov
sysexit
and
pushl
add
add
add
add
add
add
call
add
decl
movl
xchg
push
les
dec
pop
add
movl
push
add
int3
pop
and
incl
mov
cmp
add
pop
add
pop
sub
add
add
mov
add
xor
ljmp
push
add
push
add
add
rorb
add
icebp
jmp
pop
popf
mov
cmc
repz
jmp
add
aas
pop
push
mov
leave
cmp
add
out
push
dec
sarb
sti
sub
mov
loop
mov
add
add
pop
cli
pop
jl
add
outsb
add
push
add
test
add
lds
scas
idivb
mov
ret
add
fst
cwtl
and
pushl
sti
addl
incl
or
in
add
jmp
add
add
repz
ljmp
pop
into
xor
sti
aad
add
add
add
sti
out
xchg
shll
rorb
sbb
into
cs
push
add
mov
clc
mov
popa
add
mov
add
decl
adc
call
add
push
add
adc
lcall
dec
repnz
add
inc
add
insb
mov
inc
add
jo
mov
and
add
popa
add
ret
clc
data16
rcll
xchg
outsl
jns
cmc
test
add
pop
roll
mov
adc
incl
add
jg
sbb
add
dec
xor
lcall
imul
clc
jae
call
xchg
enter
mov
cmp
sbb
iret
sub
imul
call
fisttpl
add
out
jle
bound
incl
call
pop
adc
cmp
add
add
inc
add
lds
sbb
xor
decl
cld
out
jge
das
pop
xchg
add
incl
insb
mov
mov
call
push
fbstp
add
or
adc
add
cmpsl
add
mov
test
jbe
jb
ljmp
js
repnz
jmp
incl
add
mov
add
pavgb
fcoms
daa
add
add
jnp
add
pusha
add
push
movb
adc
mov
loopne
int
add
mov
cltd
jno
incl
mov
ljmp
add
negb
js
movsb
add
add
or
add
loop
fwait
imul
add
call
push
cwtl
push
add
mov
sub
add
cmp
data16
add
ret
add
sbb
and
lcall
jle
add
insl
adc
iret
cvtps2pi
add
mov
cmc
push
jne
fwait
pop
aaa
xchg
cmp
push
push
fcoml
faddl
add
pop
mov
add
fwait
and
inc
add
inc
add
jnp
add
inc
add
les
sub
add
popf
mov
or
add
add
incl
add
in
adc
jmp
decl
daa
add
or
out
shrl
les
push
add
dec
pop
mov
mov
add
add
xchg
adc
call
adc
lcall
arpl
call
add
xchg
cmpsb
add
add
add
into
aaa
scas
mov
xchg
jnp
add
add
add
mov
ret
add
cmp
add
dec
flds
and
call
add
xchg
jbe
out
incb
or
aam
add
mov
addl
add
xchg
lods
imul
or
add
outsb
dec
adc
push
sbb
loop
mov
add
pop
leave
addb
pushf
xchg
je
cltd
scas
daa
add
mov
add
mov
xchg
fistl
idivl
add
inc
add
add
cmpsb
add
icebp
lds
test
xlat
mov
ret
add
push
fs
add
popf
inc
add
jnp
add
fldenv
fcmovnbe
and
incl
add
add
pushl
add
fnsave
stc
xor
add
test
mov
iret
adc
dec
jno
stc
push
sbb
cmpsb
add
notl
jne
mov
pop
pop
in
sbb
sub
imul
fcompl
add
and
dec
imul
les
pop
insl
mull
decl
adc
incl
incl
pop
push
sahf
dec
xchg
add
call
setb
add
jnp
mov
nop
add
ljmp
pusha
add
sub
fwait
jp
inc
add
incl
push
sbb
add
push
insl
cmp
jae
call
sub
clc
mov
mov
add
jbe
mov
mov
insl
mov
add
add
sub
add
mov
cmp
add
push
push
pop
add
mov
push
add
xor
stos
out
fmull
adc
dec
pushf
xchg
or
repz
add
dec
add
pushl
mov
lahf
ret
add
add
pushl
add
add
rcll
pop
stos
cmc
or
add
add
mov
add
cmp
add
out
leave
xor
add
add
mov
out
pushf
xchg
and
push
sbb
movsb
add
pop
cmp
add
std
mov
popf
out
sub
lds
movb
add
add
mov
insb
cld
adc
jmp
add
addl
jae
incl
mov
add
call
xor
inc
add
mov
jle
add
add
add
add
mov
lds
movsl
add
add
xor
call
cwtl
addl
pop
add
add
out
fsubrl
cmp
add
js
xchg
jo
jmp
lods
mov
jns
add
jmp
cltd
fcoml
ljmp
dec
xor
jmp
and
jle
add
add
call
add
rolb
test
adc
jmp
iret
pop
addb
add
loope
push
clc
adc
addl
sub
dec
clc
jg
xchg
mulb
xchg
inc
add
add
add
enter
ret
add
add
decl
add
cltd
mov
add
mov
jnp
lods
outsb
mov
add
mulb
add
sub
bound
decl
lcall
addl
add
addl
icebp
mov
xchg
aas
pop
add
test
roll
push
mov
add
xchg
mov
add
add
ljmp
add
dec
jmp
push
add
stos
jmp
add
add
add
pushl
add
loopne
data16
xor
mov
rcrl
add
cmpsb
add
xchg
daa
add
add
jg
insl
jmp
hlt
xor
data16
add
push
rcll
sub
push
addl
add
insl
jmp
cmp
leave
notl
or
mov
mov
aam
add
outsl
inc
add
outsb
jne
adc
call
movsl
add
inc
add
xchg
mov
add
pop
rcr
xor
call
add
aaa
inc
add
fnstsw
add
add
mov
lods
xchg
sahf
lock
add
scas
out
test
lock
jmp
add
push
cmp
lahf
xor
call
and
cld
add
incl
sub
shll
add
xchg
jne
sbb
add
movsb
add
outsb
pop
icebp
ja
mov
add
lcall
dec
mov
lret
addb
test
pop
sahf
repnz
roll
dec
flds
fildll
movb
mov
add
jl
outsl
mov
add
add
jl
inc
add
inc
add
push
add
sbb
or
call
fwait
js
add
cltd
stos
xchg
sub
add
ret
add
lcall
push
mov
add
popf
fs
dec
mov
out
sbb
shl
add
and
incl
pop
add
cmp
add
xrelease
push
inc
add
scas
add
sub
dec
test
add
lds
aad
add
sbb
lods
iret
pop
sti
lods
xor
push
ja
add
pop
addl
add
mov
add
jge
xor
call
xchg
insb
iret
iret
dec
repnz
mov
pop
data16
imul
incl
test
insb
push
add
xor
lcall
dec
push
or
push
cwtl
mov
add
sbb
decl
cs
jno
inc
add
sub
add
ljmp
rcrl
lcall
add
mov
dec
fdivrl
add
jmp
incl
cmpsl
add
mov
push
outsl
jmp
add
add
es
cmp
nop
loopne
dec
stos
mov
mov
addl
push
add
jo
jmp
decl
mov
inc
add
ss
arpl
stc
pop
addb
mov
mov
mov
int
sbb
add
lcall
add
rcll
ss
gs
adc
ljmp
add
scas
fcomps
incl
inc
add
inc
add
lahf
sub
add
out
push
std
add
pushl
cmp
fdivr
pop
cmp
data16
add
add
incl
jle
xchg
add
xchg
int3
dec
push
das
sbb
test
icebp
push
in
bound
jmp
add
call
in
pop
in
movl
loop
dec
lret
mov
sbb
add
add
ljmp
sbb
add
mov
call
stos
pop
roll
lods
daa
add
scas
mov
add
lcall
jg
add
cmp
mov
add
pushf
jmp
add
add
leave
adc
push
clc
sbb
pop
out
aam
ret
add
jnp
xor
movsb
add
mov
xchg
dec
jle
adc
jmp
test
add
clc
cmp
cmp
jge
popf
rclb
fstl
add
mov
rcrl
pop
scas
aam
jnp
insb
mov
sbb
adc
jns
cmp
testl
jg
add
addl
add
add
insb
xchg
lahf
roll
fwait
ds
add
mov
add
mov
lret
add
iret
test
imul
lahf
jp
add
mov
add
mov
sub
mov
push
pop
out
addb
cmp
inc
add
loopne
or
pop
cmp
adc
incl
push
mov
add
dec
xchg
mov
sbb
add
addb
pop
cwtl
sub
xchg
enter
out
cmp
addb
dec
jnp
pop
cmp
xchg
gs
add
imul
add
sub
add
push
in
sub
outsb
in
cmp
sub
loope
inc
add
jno
pushl
cmp
ss
pop
push
jecxz
adc
sti
adc
jmp
add
dec
jg
add
fisubl
add
fldenv
fwait
ds
dec
movl
add
sarl
add
int3
mov
loope
pop
jns
pop
or
add
add
adc
decl
pop
pop
fistl
dec
stos
add
add
cli
daa
add
dec
xchg
lret
test
cmp
add
ret
add
clc
mov
ss
call
add
mov
ret
add
add
adc
loope
adc
add
insl
in
daa
add
add
or
xor
pushl
and
call
call
push
aam
add
xlat
lods
aam
push
add
cmp
add
add
inc
add
jge
add
dec
cld
cli
jo
incl
push
add
add
jb
push
jnp
popf
ds
imul
push
add
mov
lcall
dec
repnz
pop
aad
add
add
cld
cli
jp
movb
jo
jmp
test
stos
addr16
and
sub
add
sbb
add
out
mov
add
call
add
jmp
add
sub
xchg
into
pop
add
incl
sub
addb
add
xlat
jo
incl
jno
mov
insl
das
pop
int3
cmc
pop
sahf
fsts
decl
add
add
leave
sbb
add
addr16
or
push
mov
stos
and
call
add
idivl
bound
incl
popa
add
adc
add
mov
add
lcall
add
add
lods
repz
or
add
push
es
mov
push
repz
sbb
add
and
cmp
int
ljmp
ja
fwait
les
or
fwait
jns
sub
mov
cmp
add
cmc
arpl
pushl
add
fdiv
cmp
ret
add
add
inc
add
sbb
stc
hlt
notl
cld
pop
ja
mov
push
imul
bound
jl
mov
jne
jmp
fldenv
add
inc
add
add
dec
or
sahf
pop
in
mov
dec
xchg
cvtps2pi
push
push
rolb
cmc
lock
ja
sbb
sub
pop
add
add
jg
jbe
negb
xor
call
add
je
cmp
add
lahf
push
sub
inc
add
mov
cmp
push
mov
bound
call
ljmp
in
cld
scas
push
mov
dec
mov
mov
fistpll
sbb
add
xchg
push
add
fisttpll
add
add
decl
or
add
jnp
add
adc
ljmp
push
add
fidivl
scas
sbb
push
add
xchg
addl
jne
add
add
decl
add
push
sub
mov
dec
out
pop
ja
xchg
pop
xchg
inc
add
or
call
roll
inc
add
pop
xchg
movsb
add
jmp
pop
add
add
add
mov
rorl
dec
push
add
cmp
or
js
sbb
mov
add
add
daa
add
add
jp
add
incl
inc
add
xor
decl
pop
mov
add
gs
js
or
add
mov
lds
mov
arpl
jmp
add
add
add
inc
add
hlt
adc
pushl
add
add
lds
jmp
add
inc
add
push
add
add
add
adc
decl
cwtl
cmp
decb
negl
out
add
sub
jmp
pushl
add
dec
out
dec
popa
add
insl
jnp
pop
lret
mov
pushl
ljmp
add
pop
mov
decl
jmp
aas
sti
call
add
and
ljmp
add
popa
add
sub
out
pop
mov
cmp
push
insb
test
lods
or
push
cltd
insb
dec
xor
jmp
inc
add
pop
add
add
or
jae
lcall
inc
add
jmp
shrb
inc
add
add
push
add
push
add
ljmp
or
lcall
add
add
fcmovbe
fildl
mov
iret
xchg
xlat
call
jbe
pop
add
decl
xor
cmp
loope
test
jle
loopne
sub
add
inc
add
inc
add
adc
lcall
mov
add
test
mov
mov
test
pop
dec
addb
add
xchg
jle
daa
add
mov
aam
or
add
pop
mov
adc
fdivs
add
add
add
lock
test
add
or
add
add
sbb
dec
and
xchg
jae,pt
pushl
lcall
call
add
inc
add
imul
js
dec
outsb
aad
pop
enter
insl
xchg
mov
add
add
add
jecxz
xchg
jbe
insl
pop
test
xor
mov
add
push
mov
dec
xchg
stc
pop
jle
xor
jmp
jno
ljmp
add
cmp
lcall
lods
pop
sub
inc
add
inc
add
add
sub
push
ficoml
add
add
ljmp
sbb
lds
in
xchg
rcl
les
mov
push
inc
add
mov
pop
bnd
dec
add
jae
decl
add
add
dec
ds
movsb
add
dec
mov
cmc
adc
pushl
sbb
ljmp
add
in
xlat
mov
pop
xchg
dec
stos
cmp
pop
add
and
call
xchg
mov
daa
add
add
add
out
sahf
jmp
or
dec
cmp
incl
add
out
sbb
add
ss
lds
sbb
jl
testb
mov
aas
jl
push
add
lea
add
pop
das
mov
fldenv
adc
incl
add
add
add
nop
test
xchg
adc
ljmp
add
mov
in
push
pop
test
add
add
js
push
xor
lods
add
jmp
mov
add
add
cmp
push
imul
ljmp
push
push
ret
add
and
mov
pop
add
lcall
add
stos
or
push
add
xlat
idivl
imul
add
xchg
mov
incl
and
decl
dec
add
jl
add
call
add
movb
gs
scas
mov
adc
add
decl
dec
inc
add
mov
xchg
mov
cltd
insb
inc
add
xchg
mov
push
sarb
movl
jmp
shll
sub
pop
add
add
test
push
sub
das
fyl2x
data16
outsb
outsb
mov
add
fstps
pop
incl
sub
loopne
and
call
add
pop
ljmp
jmp
popf
in
push
pop
adc
pushl
add
xchg
cmp
mov
ficompl
dec
push
scas
dec
mov
add
lcall
incl
repnz
add
cmp
xor
jmp
sbb
push
add
std
add
cmp
add
popf
outsb
and
incl
add
loop
lods
jle
sbb
clc
test
insb
add
xor
stc
jmp
add
jb
inc
add
iret
pop
cld
mov
addr16
test
clc
dec
addl
sub
jmp
in
or
sbb
decl
xchg
mov
call
incl
jnp
dec
and
nop
enter
fcomip
push
pop
cwtl
push
add
inc
add
mov
add
pop
scas
or
add
rep
into
pop
add
add
jecxz
outsl
dec
push
add
mov
test
sbb
cli
cmp
add
sub
mov
jae
mov
add
add
lahf
sbb
add
cmp
call
loopne
xor
add
lcall
add
stos
and
incl
add
push
add
fmull
cmp
add
mov
or
xchg
sub
cmp
add
add
add
add
lcall
scas
sub
add
call
decl
mov
ficomps
cmp
pop
sbb
add
add
add
mov
push
inc
add
fs
scas
push
and
iret
dec
test
fsubrs
dec
int
add
jo
lcall
roll
pop
or
mov
lods
gs
push
fbld
add
int3
or
xchg
push
mov
sub
xor
call
add
sbb
add
fcomps
data16
fsts
cld
jae
decl
imul
dec
jns
sbb
fiaddl
call
incl
add
stc
jbe
add
cmpsl
add
add
cmc
jp
sbb
pop
and
call
fsts
add
push
cmpsb
add
mov
out
movl
add
roll
inc
add
cmp
ficoml
lcall
and
or
add
xor
lcall
add
adc
pushl
add
and
decl
mov
and
cmp
fstpl
add
out
xchg
inc
add
pop
mov
add
movsb
add
ljmp
jmp
add
add
dec
insb
inc
add
xchg
inc
add
or
das
push
pop
das
ja
test
xchg
cld
and
push
xchg
lahf
cmp
add
sahf
pushf
jecxz
rcll
mov
push
add
xchg
push
add
insl
jo
pushl
jmp
mov
xchg
cmp
inc
add
popf
cmc
rorl
jno
call
add
in
movb
data16
dec
fwait
mov
decl
sub
jl
notb
cli
int
fdivrs
cmc
mov
outsb
pop
in
addl
cmp
mov
inc
add
adc
call
sub
cmp
add
or
mov
add
nop
or
jp
add
js
add
push
add
cmc
jg
daa
add
dec
jns
add
ret
add
test
cltd
mov
add
fidivs
jbe
add
xchg
pop
lods
mov
mov
add
popf
jecxz
and
jmp
add
mov
add
push
roll
ljmp
je
pop
bound
ljmp
lret
add
sbb
lods
jecxz
out
push
push
mov
pushf
fiadds
repz
repz
add
cwtl
dec
mov
mov
test
mov
imul
mov
test
sub
cwtl
enter
mov
dec
lds
data16
dec
popa
add
mov
aam
add
xlat
test
add
cmp
xchg
je
adc
add
add
ja
int
into
and
inc
add
jp
add
jae
decl
mov
or
cwtl
pushf
cli
sub
in
lock
out
or
push
add
aaa
xor
pushl
add
test
lahf
fisubrs
clc
rcl
mov
add
push
add
or
add
push
pop
loopne
aad
cmc
mov
add
mov
xor
call
add
inc
add
mov
add
and
jl
adc
out
pop
icebp
cmp
roll
add
out
movb
jae
jmp
and
sbb
ja
add
cmp
cltd
loop
js
add
mov
add
test
add
mov
add
mov
dec
in
pop
add
add
in
and
add
add
leave
scas
sbb
add
add
fmul
push
add
cmpsl
add
mov
jge
add
int3
push
lret
fstps
xlat
jmp
ficomps
mov
jno
incl
add
pop
sti
add
xchg
addb
inc
add
add
jns
into
xor
add
add
mov
mull
add
popa
add
aas
fldt
xlat
call
mov
lods
xchg
aaa
out
inc
add
daa
add
xor
add
addl
add
ljmp
mov
cmp
cmp
add
dec
ret
xchg
mov
add
repz
add
scas
sahf
shrl
add
jmp
add
mov
insb
xchg
movb
add
cmpsl
add
cld
jo
lcall
scas
push
add
lock
add
add
lock
rolb
jnp
add
push
add
add
sarb
sbb
sub
mov
push
testl
int3
add
add
add
xchg
push
pop
pop
mov
pop
in
xchg
adc
pushl
dec
mov
lods
mov
xor
call
sbb
mov
mov
insb
cli
cmpsl
add
push
std
add
pushl
xor
decl
add
jmp
add
dec
sbb
add
push
or
add
jecxz
addl
pop
xchg
pop
out
xchg
dec
sub
add
mov
mov
sbb
ljmp
mov
pop
js
add
dec
pop
loop
les
movb
ds
lods
xchg
bound
dec
push
push
adc
mov
dec
mov
int
ret
push
add
or
mov
inc
add
stc
imul
test
repnz
loope
enter
dec
pop
les
push
add
mov
add
sbb
add
add
sbb
add
xchg
arpl
incl
add
xchg
cmp
jecxz
inc
add
or
jl
jbe
pop
inc
add
or
pop
mov
add
inc
add
jl
push
add
dec
and
dec
bt
jle
xchg
notb
cmp
popf
movl
xchg
stos
sub
add
les
inc
add
call
movb
data16
inc
add
push
add
dec
dec
or
mov
pop
add
mov
ret
movb
push
add
mov
add
pushl
dec
test
add
add
adc
stc
sbb
jl
loopne
daa
add
bound
decl
int
or
ja
add
add
clc
shrb
push
add
xchg
cmp
mov
addl
imull
dec
roll
mov
in
mov
adc
add
add
mov
xchg
in
aam
pop
jne
add
mov
dec
inc
add
int3
decl
loope
sbb
add
and
call
mov
add
sbb
push
ljmp
out
stc
push
add
xchg
add
call
add
push
rolb
add
ljmp
mov
add
sahf
xor
add
nop
les
pop
into
mov
mov
ljmp
add
movsl
add
add
ljmp
or
add
lcall
jl
add
fnstcw
push
cmp
shrb
xchg
mov
pushl
push
add
xchg
push
mov
js
add
mov
mov
add
add
xor
popa
add
mov
add
pop
lcall
movl
arpl
jmp
cmpsl
add
mov
nop
imul
pop
fstps
hlt
add
dec
pop
cltd
movb
add
mov
call
add
ja
clc
inc
add
mov
popf
enter
mov
add
dec
mov
add
ficoms
add
add
int
sub
dec
push
sbb
out
dec
fsub
add
push
add
mov
addb
adc
jmp
xor
cmp
fcoms
add
lcall
add
add
mov
popa
add
frstor
add
mov
adc
incl
mov
fnstsw
jl
cmc
lret
cmp
add
add
jmp
roll
xlat
push
call
lods
pop
pop
addl
out
test
aam
add
xor
jbe
add
add
add
sti
or
xchg
sar
add
add
in
shrl
gs
mov
add
add
imul
push
lcall
add
call
es
adc
add
icebp
mov
add
pop
out
icebp
mov
mov
lcall
pusha
add
fwait
idivb
add
adc
jge
out
adc
incl
pushl
call
test
cmp
dec
xchg
out
fisubl
add
jae
call
add
xor
inc
add
add
pushl
aad
add
fmul
movsl
add
sub
push
add
loopne
xchg
mov
addl
add
data16
add
loop
out
mov
pop
xchg
rol
add
movsb
add
je
sbb
mov
rolb
inc
add
and
push
iret
outsl
add
das
cmp
add
mov
clc
jb
jmp
add
lcall
add
xchg
jmp
jns
add
add
mov
push
jp
jns
jmp
add
fiadds
or
add
insl
inc
add
stos
sub
aas
adc
incl
jmp
pushl
add
xor
lcall
dec
inc
add
pop
push
movsb
add
pop
mov
addb
mov
or
add
add
xchg
sbb
or
pop
push
add
fwait
sbb
sarl
cmp
add
or
xor
aas
test
xchg
inc
add
add
xchg
dec
bound
ljmp
jmp
adc
sti
or
arpl
ljmp
loope
or
int3
test
jmp
inc
add
push
add
pop
mov
add
xor
ljmp
repz
add
sar
sbb
add
dec
inc
add
mov
inc
add
ss
addr16
mov
add
ljmp
xor
call
ljmp
cmpsl
add
adc
incl
jmp
lds
fadd
add
sub
mov
fildll
mov
add
in
add
arpl
call
sbb
cmc
push
xchg
inc
add
add
lcall
out
jnp
push
add
add
mov
xchg
out
xchg
out
scas
xchg
cld
cmpsl
add
pop
aam
add
pop
dec
mov
add
sub
and
add
push
movsl
add
add
pop
cli
pop
add
add
mov
push
mov
add
cli
cltd
mov
aaa
pop
jmp
jg
lahf
rolb
add
add
dec
aas
fcoms
add
pushf
add
pushl
add
xor
ljmp
outsb
push
pop
movsb
add
push
mov
and
mov
add
ret
or
add
add
or
jae
jmp
repnz
add
dec
movl
or
arpl
lcall
cltd
ret
bound
call
mov
imul
loop
sbb
add
call
lods
xchg
test
add
fstps
or
mov
lret
xchg
adc
jmp
add
adc
add
call
add
cmc
inc
add
sub
push
add
jnp
jae
cli
popf
das
packsswb
incl
fidivl
and
cmp
shr
or
cmpsb
add
add
je
cmp
pushf
leave
loope
sub
rclb
xchg
stc
pop
add
add
in
jbe
cmp
add
jmp
lods
push
ret
add
out
lods
inc
add
cmc
out
pop
mov
lret
pop
add
add
rolb
add
lcall
sub
add
cmp
add
addl
fsts
ljmp
jnp
lret
clc
jnp
dec
inc
add
sbb
in
inc
add
mov
pushf
xchg
ljmp
pop
sbb
xor
lcall
cld
jp
mov
rolb
mov
add
fmul
daa
add
and
call
add
inc
add
call
das
cmpsl
add
jmp
ljmp
push
xor
dec
cmpsl
add
add
rol
add
sub
cmp
popa
add
dec
mov
add
mov
cmc
hlt
push
add
pop
push
add
add
aas
push
xchg
cmp
adc
decl
jmp
push
stc
aad
fidivl
stos
add
pushl
out
xlat
or
bound
jmp
adc
clc
roll
add
jb
jmp
add
push
cltd
aam
sbb
add
in
cwtl
mov
add
or
jmp
add
add
ret
add
test
add
and
decl
test
push
add
pop
or
cmp
pushf
pop
movsb
add
loop
imul
pop
testl
xchg
and
lcall
add
call
add
sub
and
sbb
ret
add
stos
and
jmp
jmp
add
add
dec
add
cmp
fmull
loop
dec
mov
add
aaa
and
decl
int
lahf
add
add
sub
add
sbb
add
add
jmp
popf
divb
mov
or
sbb
mov
pop
pop
inc
add
xor
jle
add
cmp
cmp
add
lret
push
push
add
pop
inc
add
ret
arpl
lcall
jne
add
add
or
aaa
pop
out
xchg
jnp
add
out
lea
add
ret
add
add
add
jne
mov
scas
xchg
dec
mov
aad
add
repnz
sti
call
add
add
xor
decl
pop
add
mov
inc
add
sbb
add
pop
cmp
add
add
insb
fists
fnsave
adc
fisttpl
mov
xchg
cmp
lcall
adc
jmp
lcall
fmul
mov
decl
cwtl
js
mov
sub
add
add
xor
jle
add
std
decb
scas
pop
mov
fisttpl
repnz
add
jge
jge
bound
dec
or
jl
add
push
add
push
movsl
add
lock
inc
add
add
or
mov
mov
decl
add
add
add
add
dec
push
jo
call
mov
sarl
mov
adc
sub
pushl
add
loopne
sub
xchg
sbb
add
add
jmp
add
push
add
add
xor
incl
nop
mov
fidivrl
lcall
pop
pop
sub
jle
dec
movl
cmpsl
add
fldt
add
push
inc
add
std
lock
movb
add
add
add
mov
add
xor
push
add
out
mov
jle
test
cmpsb
add
leave
sarb
test
ret
add
dec
jp
mov
jno
decl
divl
mov
dec
mov
and
incl
jmp
mov
jl
add
add
add
mov
add
bound
call
jmp
add
mov
xchg
mov
rcll
xchg
lea
incl
add
mov
add
adc
add
mov
xor
pushl
cmpsb
add
sbb
or
stos
xlat
movsl
add
add
add
add
pop
xchg
and
jmp
add
lcall
push
dec
push
jmp
add
jge
add
push
notb
add
js
add
add
jecxz
push
add
adc
pushl
out
addl
test
shl
add
dec
lret
sti
mov
mov
add
decl
xor
lcall
add
addl
add
lock
sbb
add
or
jmp
or
xchg
movb
je
nop
jecxz
push
pop
push
roll
add
das
mov
sub
addl
ret
sub
inc
add
fiaddl
add
cwtl
in
add
call
xlat
repz
jo
decl
add
jl
lret
pushf
nop
jae
incl
add
push
add
hlt
jb
lcall
repz
sbb
movsb
add
ljmp
cmp
xchg
push
leave
stc
xchg
stos
repnz
outsb
and
call
decl
cmp
cmpsl
add
ret
add
jge
outsl
mov
add
or
sbb
sub
dec
ret
add
add
push
nop
xor
jmp
add
lods
dec
xor
fidivrs
cmp
inc
add
jb
call
adc
cmp
add
jo
inc
add
mov
decl
ficompl
add
ljmp
mov
lcall
ficoms
cmpsl
add
insb
pop
inc
add
and
les
xchg
pop
mov
je
and
jp
jnp
add
add
add
shl
int
fistps
outsl
ljmp
addl
bound
push
xchg
lds
jb
lcall
cmp
mov
add
and
incl
inc
add
iret
fistl
shlb
jg
pusha
add
dec
cmp
cli
popf
js
add
inc
add
add
xor
add
add
add
movsl
add
mov
hlt
lahf
out
pusha
add
ret
arpl
ljmp
and
cltd
xchg
and
lcall
mov
pop
sbb
add
test
xor
lcall
movsb
add
add
cmp
add
dec
xchg
movsb
add
and
incl
call
pop
jmp
ljmp
cltd
jnp
fs
add
shll
dec
xor
call
jmp
add
add
mov
push
add
shrl
addb
into
push
add
cwtl
xor
incl
addb
or
cli
jge
add
jecxz
mov
push
fsubl
add
out
testb
cmp
lahf
aam
add
fbstp
add
aam
sub
das
xchg
pop
lcall
and
add
sub
nop
adc
decl
iret
jl
adc
jmp
add
sbb
xor
ljmp
into
out
imul
out
aam
add
clc
mov
mov
add
lahf
insb
jecxz
shl
cli
or
add
les
inc
add
leave
mov
add
movb
add
clc
xchg
aam
xor
push
or
add
outsb
pop
sbb
iret
push
mov
jg
push
test
sahf
arpl
incl
decl
add
ss
mov
dec
int
add
lcall
sub
int
pushf
mull
add
in
flds
add
xor
jmp
ljmp
add
cmc
lea
mov
add
or
dec
or
push
mov
xor
lcall
cwtl
xor
add
insb
mov
mov
jae
pushl
add
ret
popf
incb
add
int3
xchg
sarb
cltd
addb
jl
jno
cmp
add
add
add
ljmp
xor
pushl
add
adc
les
mov
imul
and
add
js
arpl
cmp
ss
xchg
pop
cltd
cmp
data16
dec
mov
lods
insl
mov
pushf
popa
add
jae
call
add
jmp
mov
xor
decl
pop
add
mov
mov
lcall
or
add
ljmp
jecxz
mov
dec
js
incb
add
pop
add
jmp
add
bound
call
pop
lock
jmp
add
movl
adc
jle
bound
ljmp
icebp
out
adc
ljmp
mov
xor
add
std
les
or
add
int3
pop
add
add
ds
inc
add
test
mov
add
and
incl
sub
mov
fstl
xchg
xor
lcall
push
add
and
lcall
mov
lods
mov
add
jmp
add
loope
mov
add
pextrw
add
add
add
xor
fdiv
push
add
cs
add
fisubrs
or
add
jmp
outsb
pop
add
cltd
out
xchg
mov
mov
add
add
add
insb
sub
add
add
jno
mov
jmp
add
aaa
clc
arpl
cmp
add
insl
aaa
jmp
int3
lods
push
mov
in
aas
shlb
mov
jb
ljmp
add
add
aad
inc
add
push
lock
push
add
xor
jnp
add
add
add
add
xor
lcall
fisttps
ljmp
adc
call
push
sub
add
addl
inc
add
adc
decl
adc
lcall
add
and
decl
add
repz
pop
addl
add
xchg
pushf
cltd
inc
add
add
jmp
jmp
cmpsb
add
add
dec
hlt
ja
and
test
rorl
js
push
add
mov
add
jae
decl
into
ret
pop
outsl
cli
mov
add
daa
add
inc
add
inc
add
aam
add
jbe
add
test
add
push
lds
pop
add
jmp
add
push
add
push
mov
add
xor
incl
dec
xor
decl
outsl
sub
add
stos
or
jge
add
add
call
xor
or
incl
add
push
pop
outsl
jae
ljmp
call
sbb
fdivs
mov
lcall
aad
addl
mov
pop
dec
add
jnp
add
sub
mov
dec
insl
pop
hlt
testl
call
pop
test
mov
dec
add
rorl
push
lcall
mov
loopne
mov
add
stos
add
mov
arpl
decl
mov
das
fwait
add
mov
and
insb
cli
mov
dec
movsl
add
add
roll
add
mov
dec
fcompl
add
dec
mov
mov
add
add
outsl
hlt
add
pushl
add
jmp
out
sahf
aam
mov
inc
add
inc
add
add
popa
add
push
add
ja
insl
mov
jns
sahf
addb
add
incl
jp
into
lods
daa
add
lahf
adc
call
test
pop
pop
cli
lret
rolb
cmc
stos
pop
movsb
add
adc
add
fnsave
jbe
add
filds
push
add
add
add
lock
add
add
xor
lcall
sub
add
add
mov
movb
add
sti
or
cmp
sub
add
add
repnz
stos
jp
add
add
jnp
add
fdivl
add
mov
mov
test
call
add
das
push
fdivr
add
add
pop
add
in
dec
mov
add
dec
and
mov
gs
arpl
jmp
jl
pop
in
and
inc
add
xor
loopne
test
cld
xchg
pop
aad
add
add
call
fs
add
loope
or
test
cltd
inc
add
adc
jmp
add
mov
or
adc
or
out
sub
in
frstor
call
xchg
sbb
popf
mov
adc
mov
jl
sub
popa
add
mov
push
or
pmulhuw
mov
shlb
add
leave
jecxz
add
mov
cmp
mov
mov
add
lcall
lock
push
in
jns
mov
add
ja
adc
dec
fucomip
inc
add
xchg
mov
je
cld
imul
cwtl
sarb
call
call
inc
add
add
lds
xchg
xchg
push
add
mov
xlat
fcoms
add
adc
jmp
add
mov
stos
jge
add
push
pop
test
add
mov
not
pop
cmc
movsl
add
jmp
add
add
stos
jl
imul
shrl
mov
push
add
mov
jae
incl
jmp
repz
inc
add
add
mov
jmp
add
push
add
test
mov
add
mov
fwait
into
test
mov
pop
cli
push
pop
aaa
sub
jmp
ret
add
out
fsubl
pushl
add
cmp
rol
add
adc
std
pop
loope
fwait
jne
data16
les
push
pop
lahf
movb
add
pop
jp
sti
fwait
addb
aad
add
add
leave
mov
add
pop
addl
add
clc
fisttps
int3
push
inc
add
je
fwait
ljmp
popa
add
adc
decl
add
add
pop
bound
call
roll
dec
je
add
leave
xor
jmp
add
cli
fldl
add
insl
pushf
mov
cmp
int
dec
mov
add
add
mov
inc
add
int3
mov
xchg
adc
push
mov
stos
xchg
test
inc
add
mov
add
add
mov
xchg
rep
jnp
add
add
jmp
push
add
movsl
add
xchg
pop
and
add
add
adc
add
dec
mov
mov
add
add
pop
adc
add
repnz
add
jmp
fisubrl
outsb
ljmp
add
bound
lcall
jmp
in
popf
mov
scas
pop
and
pushl
mov
adc
jmp
xchg
pop
or
xchg
xor
add
add
cmpsb
add
add
and
lcall
aas
or
add
popf
mov
and
ljmp
add
loop
pop
popa
add
pop
lea
out
lock
xchg
cmp
call
mov
jle
add
faddl
mov
push
jno
inc
add
test
push
cli
mov
aad
int3
fwait
add
roll
add
add
dec
mov
jmp
add
sub
xor
stos
cmpsl
add
add
push
pop
inc
add
add
lret
mov
push
add
cmp
cmpsl
add
add
les
mov
mov
sti
int3
add
jmp
call
roll
add
jnp
lahf
std
cmp
add
pushl
sbb
add
ljmp
and
lcall
jmp
jmp
add
pushf
shrb
add
decl
and
add
idivl
mov
add
negb
pop
inc
add
lock
dec
test
add
incl
push
add
add
sbb
pop
lahf
jp
add
popa
add
cmp
add
cld
bnd
ljmp
lcall
or
add
fwait
mov
rolb
pop
add
dec
fdivs
pushl
add
ficoml
add
pop
sbb
not
arpl
dec
add
lcall
xor
push
leave
out
sub
roll
add
data16
add
add
stos
addb
jmp
jns
or
decl
push
mov
cmp
sub
mov
call
popa
add
fistps
loop
and
jmp
nop
xor
decl
add
lds
push
add
dec
bound
incl
xor
inc
add
call
out
sub
jge
add
ja
add
add
add
add
bound
mov
add
sbb
aad
ds
add
cld
dec
addl
jecxz
ss
xor
fdivr
adc
ljmp
add
call
mov
push
add
jo
ljmp
loopne
js
jne
add
add
add
ljmp
incl
call
bound
jmp
add
xor
lcall
xchg
jne
popf
fmuls
popa
add
out
ja
in
pushl
scas
mov
sbb
pusha
add
mov
fldl
sub
push
ret
add
add
incl
add
stc
mov
pushl
das
aam
pop
arpl
decl
arpl
incl
add
roll
add
bswap
bound
dec
bound
ljmp
add
ret
add
add
stos
addl
mov
and
jmp
cld
lahf
test
xor
decl
out
add
xchg
movb
add
or
cmp
mov
add
dec
nop
mov
lods
cli
jecxz
gs
add
dec
pop
out
test
daa
add
cld
push
mov
add
repnz
sbb
add
jmp
add
out
mov
adc
lcall
popa
add
cmp
push
add
shrd
repz
xchg
pop
out
xchg
rolb
lahf
repz
cmpsl
add
sarl
dec
and
inc
add
test
mov
pushl
jnp
fwait
lcall
add
dec
popa
add
fistpl
popa
add
and
fnclex
add
lcall
out
insl
mov
js
push
out
pop
dec
out
lret
inc
add
rcrl
add
sbb
push
add
int3
popf
mov
add
add
dec
add
mov
pop
mov
inc
add
int3
lcall
adc
call
sub
add
add
add
ljmp
idivb
push
add
cmpsb
add
inc
add
mov
add
inc
add
add
add
pop
movb
inc
add
cld
clc
push
sbb
mov
enter
stos
mov
add
mov
add
add
add
test
addb
add
cmp
rolb
addb
add
fbld
stc
pop
ljmp
add
addb
add
ds
imul
cmp
add
sbb
enter
add
push
add
call
add
dec
stc
cmp
dec
setb
outsb
pop
std
and
js
inc
add
mov
pop
xchg
rolb
bound
jmp
add
fwait
sbb
push
add
mov
addl
add
pushf
adc
jmp
dec
addl
mov
hlt
loope
sbb
add
add
add
push
scas
or
push
int
push
pop
or
add
imul
out
dec
xchg
add
cmp
push
add
jb
inc
add
sbb
imul
ljmp
and
lcall
sbb
jns
aam
cli
es
add
add
adc
call
mov
add
add
xchg
scas
scas
mov
leave
push
add
nop
addl
test
inc
add
popa
add
adc
dec
mov
sub
xor
decl
fisubs
jmp
add
decl
fistps
jl
add
insl
in
ret
add
mov
add
ljmp
push
outsl
in
dec
addl
adc
mov
push
mov
cmp
ljmp
pop
jmp
add
lock
fptan
fisttpl
jmp
inc
add
stc
ret
add
lret
mov
mov
dec
fdivrl
pushl
mov
incl
add
inc
add
lahf
fisubl
ds
lahf
ja,pn
test
pop
aaa
push
add
movl
add
add
roll
add
push
roll
mov
data16
lret
pop
stos
rolb
addb
dec
mov
add
adc
add
sbb
add
add
decl
pushf
xchg
inc
add
add
and
lcall
add
idiv
or
test
ret
add
sub
add
into
add
dec
pop
xlat
bound
call
decl
push
add
jo
inc
add
incl
add
mov
jne
adc
jmp
ljmp
aam
push
pop
or
add
xor
call
add
jmp
sub
add
xchg
jbe
push
daa
add
push
int3
int
dec
cmp
xor
pushl
xchg
mov
mov
add
jmp
add
ljmp
jae
sti
mov
add
jmp
movb
movsb
add
shlb
add
xchg
adc
add
rcrb
jmp
add
decl
dec
pop
inc
add
roll
add
sub
add
rolb
add
jp
mov
iret
xchg
jecxz
inc
add
dec
testb
dec
test
mov
add
jns
test
loop
aaa
push
add
mull
add
pop
add
ret
add
inc
add
inc
add
add
ljmp
pop
movsb
add
dec
push
jecxz
aas
mov
add
mov
cmpsl
add
jo
lcall
add
les
mull
add
mov
add
lods
sub
jecxz
icebp
or
add
mov
call
jbe
ret
add
mov
add
out
arpl
ljmp
fcoms
lcall
add
add
adc
nop
dec
cmp
xor
incl
lcall
add
notl
add
inc
add
sub
sub
loop
out
fidivrs
add
push
add
addl
add
xor
jl
add
call
jge
imul
cmpsb
add
int
xor
pushl
mov
xchg
sub
decl
cmp
cld
xchg
or
std
ss
insl
dec
fprem
iret
mov
stos
fsubp
add
jle
add
addb
add
in
imul
es
addb
mov
dec
push
add
cmc
pushf
enter
push
inc
add
push
add
dec
lock
jne
pop
lcall
es
addl
in
imul
sub
popf
imul
jl
or
jle
add
insb
push
jl
aaa
adc
lcall
call
xchg
xchg
mov
jge
add
das
cmp
aam
add
push
push
xor
decl
xor
add
xor
incl
mov
xchg
mov
push
test
adc
jg
add
inc
add
test
cltd
cmp
push
jno
ljmp
lock
mov
add
mov
je
add
add
aad
data16
jmp
add
iret
add
clc
testb
incl
outsb
loope
cli
pop
jne
add
mov
faddl
add
iret
mov
adc
jne
xchg
adc
addb
add
ss
in
mov
push
sti
sbb
bound
jmp
add
lcall
add
pushl
test
sbb
add
ljmp
add
inc
add
xor
call
dec
or
mov
add
jmp
add
enter
out
xchg
add
ljmp
jg
nop
leave
mov
push
cmp
les
pop
jnp
push
add
pushl
call
inc
add
or
push
cltd
adc
add
add
add
pop
cmp
dec
test
or
addb
mov
pop
dec
push
movsl
add
add
je
sbb
add
push
add
dec
outsl
out
out
faddl
add
jmp
inc
add
mov
mov
in
fisubrl
notl
push
addl
add
pop
add
ljmp
arpl
ljmp
pop
mov
imul
pop
movl
mov
jns
push
add
push
or
add
loope
movsb
add
pop
stos
loopne
mov
add
scas
sbb
add
fdivl
push
addb
pop
mov
add
mov
add
mov
add
xchg
rcrl
cmp
add
stos
mov
das
rol
add
xor
mov
xor
lea
fwait
jl
ret
movsb
add
mov
jmp
add
pop
cmc
sub
cmp
dec
push
xchg
mov
test
sbb
mov
inc
add
movb
or
inc
add
daa
add
inc
add
add
arpl
jmp
incl
add
imul
aad
inc
add
call
imul
add
add
lahf
xchg
cmpsb
add
incl
incl
add
xor
or
ret
add
test
cmp
or
lcall
cmpsb
add
sub
fwait
xor
dec
inc
add
add
sbb
mov
cmp
in
jno
incl
out
cltd
int
add
in
addl
jnp
add
fs
add
mov
mov
test
add
popa
add
mov
bound
js
mov
cvtps2pd
add
fnstenv
mov
aaa
sub
add
stos
adc
call
pop
add
add
cmp
fisubl
mov
add
cmc
pushf
imul
movsb
add
lret
incl
jb
jle
add
add
dec
jb
jmp
add
and
bound
popf
lcall
mov
pushf
dec
pop
add
or
sbb
and
incl
add
clc
jg
add
mov
add
add
xchg
test
jg
add
int3
outsl
ds
ret
add
cwtl
addb
add
iret
or
into
cmp
push
dec
mov
in
pop
jnp
push
add
inc
add
inc
add
mov
inc
add
push
sub
add
add
ss
add
cmp
call
pop
js
lret
ljmp
call
cld
dec
loopne
jnp
adc
jle
cmp
stc
mov
add
imul
lock
incl
call
add
inc
add
divl
inc
add
call
add
jg
add
cmp
add
mov
push
xor
add
xchg
mov
add
mov
push
add
push
out
repnz
addb
mov
add
xchg
sub
sub
add
add
xor
jmp
fbld
add
mov
or
movsl
add
add
add
nop
add
xlat
inc
add
add
pop
aad
data16
lret
test
cmp
pushl
call
jnp
jg
add
add
call
add
mov
ret
add
mov
lds
mov
sub
in
popa
add
out
inc
add
push
add
addl
jmp
jns
add
enter
pop
ljmp
pusha
add
adc
call
pushl
popa
add
sbb
add
add
in
jge
add
add
add
jp
add
dec
call
add
and
jnp
lret
add
xchg
iret
scas
jmp
dec
les
sbb
jae
pushl
add
lcall
inc
add
mov
cli
cmp
add
mov
fcoml
rolb
pushl
out
sahf
mov
xchg
inc
add
mov
add
and
cmp
jb
jg
add
sbb
add
add
or
dec
mov
ds
add
push
add
mov
add
aas
jl
test
lods
cmp
add
rolb
in
repz
std
xchg
mov
xor
push
cmp
add
sti
sub
stos
addl
iret
xchg
pop
movsl
add
add
cs
sub
xchg
cs
cs
add
lcall
loope
pushf
xchg
mov
add
jnp
fcmovb
add
add
mov
cltd
lret
jmp
ficompl
repz
cmp
add
out
and
in
bound
ljmp
add
cld
and
pushl
dec
mov
mov
add
rcrl
add
adc
call
test
pop
call
add
fldcw
jne
sarb
add
fildll
sub
add
cli
lahf
mov
out
cmpsl
add
adc
jle
pop
xchg
xor
add
ljmp
test
mov
incl
out
xor
pop
fwait
cwtl
add
add
add
jmp
add
xor
inc
add
pop
sbb
add
scas
enter
add
mov
ljmp
add
fdivrs
xlat
outsb
flds
add
xchg
push
into
jl
data16
add
xchg
mov
push
popf
dec
and
incl
movl
mov
add
ljmp
cmpsb
add
int3
pop
cmp
popa
add
test
add
mov
add
cmp
int
out
inc
add
jae
incl
enter
xchg
popl
mov
add
jle
imul
imul
cli
mov
inc
add
icebp
lret
lods
sbb
jmp
add
int
lods
sub
pop
add
inc
add
iret
push
add
inc
add
lcall
rolb
add
push
push
add
stos
mov
std
out
cmp
add
aaa
and
dec
sbb
pop
lea
clc
data16
in
sbb
lahf
pop
pop
outsb
add
shll
les
pop
mov
jno
call
add
or
xchg
cli
test
loopne
je
fimuls
add
jecxz
aad
add
sbb
mov
add
in
xor
stos
sahf
adc
pushl
add
call
dec
push
and
jmp
stos
insl
and
jmp
add
add
out
test
and
aas
pop
inc
add
adc
lcall
lret
addl
jmp
sbb
add
or
nop
insl
adc
lcall
jb
call
cmp
fdivl
add
aas
cmp
inc
add
mov
js
lret
or
add
mov
mov
xor
or
iret
rcll
adc
decl
add
inc
add
mov
jge
lret
xchg
insl
js
add
mov
add
int
mov
add
push
fstl
add
out
push
and
call
add
popf
jbe
add
add
ret
add
add
push
dec
stos
int3
pop
inc
add
or
pop
add
lcall
les
mov
call
add
xchg
add
or
dec
cmpsl
add
xor
dec
xchg
cmpsl
add
sar
test
loope
xchg
pop
mov
fdivrl
add
imulb
push
add
or
decl
mov
decl
mov
stos
mov
adc
ljmp
mov
into
test
adc
incl
inc
add
repz
mov
mov
sbb
add
addl
add
add
push
or
mov
sbb
in
mov
adc
pushl
dec
push
mull
add
push
dec
aad
add
out
lahf
xor
push
bound
dec
shrl
add
add
les
push
jp
sysexit
mov
add
adc
incl
add
push
add
add
add
clc
xchg
pop
dec
movl
lret
js
jg
addl
add
test
je
jns
add
push
add
movsb
add
jne
mov
xor
sub
or
repz
test
dec
mov
xchg
mov
add
out
adc
inc
add
lods
or
add
lds
push
add
imul
pop
inc
add
xor
scas
sbb
add
pusha
add
cmp
xor
pushl
call
add
movl
aas
push
add
icebp
fwait
mov
jl
loope
daa
add
je
sbb
add
add
add
test
jo
pushl
mov
jae
decl
stos
cmp
dec
adc
call
mov
add
call
push
nop
dec
repz
push
mov
mov
in
and
add
cmp
mov
xchg
or
add
incl
inc
add
add
add
inc
add
data16
inc
add
addb
add
call
in
std
push
and
inc
add
mov
lea
addl
lcall
add
lods
xor
call
call
test
incl
mov
mov
loop
jle
jp
dec
enter
pop
sub
add
insl
loopne
xchg
mov
movl
xchg
shlb
incl
test
fs
jb
lcall
loop
out
icebp
ficoms
dec
sub
mov
push
dec
fcomp
push
add
fimull
add
lahf
mov
test
xor
call
cmpsl
add
cmp
mov
xchg
enter
xchg
adc
decl
mov
repz
call
add
mov
pop
inc
add
int3
pop
or
mov
add
jmp
add
add
push
sbb
add
call
mov
bound
decl
add
cmp
incl
add
dec
add
add
scas
sbb
inc
add
add
add
cmp
lcall
push
pop
adc
fdivrl
push
add
dec
lahf
and
lods
dec
ret
add
add
loop
je
add
sbb
addl
fcompl
decl
jns
sbb
in
xor
lds
lret
mov
je
test
push
mov
inc
add
mov
mov
add
jns
add
add
push
add
fwait
mov
add
cli
jo
jmp
add
xor
add
fisttpl
dec
cli
in
insb
outsb
push
loope
icebp
mov
add
inc
add
add
xchg
je
mov
js
add
addl
mov
add
fwait
sarl
jbe
scas
mov
inc
add
fcoml
ljmp
call
mov
inc
add
clc
js
mov
jmp
enter
mov
or
add
push
add
pop
addl
pop
push
mov
movl
adc
call
call
xor
ljmp
fwait
and
dec
sahf
mov
add
lahf
mov
call
sbb
jecxz
mov
add
pushl
or
icebp
xchg
cmp
add
cmc
das
sbb
push
lret
push
add
fsubrl
shl
stos
icebp
imul
call
and
push
or
das
xchg
out
xlat
xchg
outsb
or
add
add
push
addb
lea
add
data16
pop
icebp
pusha
add
addl
adc
pushl
roll
add
ret
add
sub
add
or
add
add
jmp
decl
lahf
push
jmp
add
add
addl
dec
adc
pushl
add
repnz
cmp
add
fadd
add
sarb
addb
pop
pop
cmp
adc
jnp
adc
dec
imul
jge
push
add
pop
rcll
push
jl
xchg
jb
jmp
addb
add
std
shr
add
fisttpl
lret
add
ret
popf
les
iret
fsubrp
or
push
add
inc
add
out
loopne
gs
dec
cmpsb
add
add
popa
add
fstl
cmp
btr
pushl
xchg
fdivs
add
add
fucom
add
add
insb
fwait
es
jne
addl
stos
lods
xchg
sti
mov
add
add
add
in
cmc
pusha
add
xchg
dec
and
incl
and
add
test
jle
add
cmp
fsub
add
add
decl
add
dec
stos
inc
add
push
add
add
push
add
incl
sbb
add
mov
add
packsswb
decl
dec
xlat
jle
xor
incl
add
mov
jle
leave
pushf
cmp
push
xor
incl
add
mov
add
inc
add
add
out
sub
jne
pop
stc
cmp
xor
ljmp
decb
ss
push
add
mov
outsb
mov
sub
cli
sbb
ss
les
insb
jle
mov
add
dec
push
push
add
mov
imul
sbb
add
add
cmp
add
xor
incl
inc
add
stc
fcmovbe
scas
adc
jmp
add
add
call
arpl
decb
jbe
imul
add
sub
lods
xchg
aam
decb
push
push
and
push
cltd
and
decl
add
pushl
mov
add
pop
lcall
lcall
pushl
add
shlb
dec
push
inc
add
add
xlat
std
ret
add
cld
out
outsl
xor
jmp
sub
add
adc
arpl
pushl
sbb
add
push
add
add
iret
pop
pusha
add
mov
fcmovu
push
xor
cmp
add
loope
jmp
insl
jnp
add
and
hlt
imul
hlt
adc
incl
add
in
or
pop
add
and
sbb
jo
decl
adc
call
mov
add
or
push
add
jo
call
ljmp
popf
cmpsb
add
pusha
add
xor
popa
add
daa
add
add
add
sub
sarl
add
repz
and
incl
add
sahf
xor
add
dec
bound
pushl
add
lods
nop
pop
insb
pop
push
xchg
dec
cwtl
pop
sarb
add
adc
call
pushl
jmp
add
loope
movsl
add
xchg
and
in
cs
add
mov
ds
inc
add
add
fcoml
add
cmp
mov
add
sbb
loop
ljmp
ljmp
add
and
lcall
mov
add
cwtl
lds
mov
dec
jne
add
add
xchg
pop
lds
fists
mov
lret
push
lret
mov
xchg
out
pushf
imul
pop
roll
xlat
pop
add
push
sti
mov
outsb
jne
add
mov
imul
add
mov
add
popf
mov
pavgb
and
cmpsl
add
mov
lds
dec
cmp
es
jns
mov
leave
and
decl
pop
inc
add
push
xor
jge
pop
adc
jg
adc
incl
dec
sbb
sub
mov
jbe
add
data16
call
add
sti
sbb
add
decl
mov
pop
or
jo
call
in
movb
int
add
iret
mov
lahf
js
add
add
enter
mov
add
jnp
fwait
pop
mov
sbb
push
pop
mov
lahf
stc
jecxz
mov
dec
dec
pop
bound
incl
fcomi
xchg
leave
stc
pop
aas
xchg
test
adc
cli
jmp
add
xor
incl
add
out
loop
addl
jg
mov
sub
xchg
int3
ja
add
cmp
mov
cmp
addl
adc
jl
add
or
hlt
loop
add
ljmp
or
mov
repnz
or
lret
mov
add
add
add
insl
les
test
pop
xor
incl
add
inc
add
dec
jb
lcall
data16
dec
xchg
sbb
movb
add
mov
fwait
pop
lcall
jp
cmp
inc
add
mov
add
adc
pushl
add
push
add
adc
negl
test
add
xchg
jle
add
cmpsb
add
sbb
push
add
mov
ror
or
sbb
add
add
sub
push
add
jo
decl
xlat
mov
mov
jge
xchg
loop,pn
daa
add
add
cwtl
fwait
push
push
add
sbb
xor
rcl
add
add
adc
mov
ret
add
inc
add
add
dec
xchg
ret
add
roll
dec
pushf
pop
call
and
pop
xor
call
lock
testl
dec
mov
rolb
pop
mov
or
jb
push
add
int
add
mov
js
popa
add
aam
repz
add
add
fildl
insb
sbb
add
add
add
add
push
icebp
jo
incl
add
xor
add
dec
or
xchg
ja
add
cli
test
add
mov
lea
add
push
int
aas
mov
call
jnp
push
xchg
adc
call
movsl
add
cmpsl
add
outsl
std
mov
add
mov
movb
inc
add
add
cmpsl
add
add
rorl
sti
xor
lcall
std
lret
and
fcoms
pop
pop
add
jno
inc
add
add
push
xor
call
decl
cltd
adc
add
mov
int
add
jle
and
ja
mov
ret
add
pop
add
in
mov
or
push
fmul
int3
fists
decl
dec
jae
jmp
add
lcall
addl
sarb
and
loope
iret
fdiv
xchg
sub
sbb
add
ljmp
pusha
add
int
pop
pop
js
add
call
out
add
adc
call
arpl
pushl
incl
decl
add
lods
and
ljmp
in
sub
stos
push
add
outsb
shlb
add
shlb
or
add
loope
mov
jb
jmp
add
xchg
mov
rclb
add
in
insb
es
cmp
sti
rolb
bound
pushl
mov
mov
ljmp
push
ds
lods
sbb
cmp
jp
nop
movsb
add
add
scas
icebp
hlt
aas
xchg
cld
repz
jle
add
or
add
jbe
add
add
ret
rolb
out
lahf
iret
repnz
outsl
les
or
movb
add
lods
aam
pminsw
lahf
aaa
or
inc
add
bound
jmp
push
jl
inc
add
jge
xor
ljmp
add
add
les
add
xchg
pop
ret
inc
add
in
ljmp
int
imul
stos
push
add
addb
add
push
sub
test
decb
mov
add
push
or
add
jmp
add
mov
in
sub
add
cli
mov
push
inc
add
inc
add
xor
pushl
add
ds
adc
ljmp
rolb
add
mov
sbb
outsb
xchg
or
xlat
in
lock
pop
fidivl
add
in
inc
add
js
add
je
dec
cmpsb
add
fisttps
nop
stos
mov
pop
loope
sbb
lcall
pop
add
jmp
add
mov
add
add
and
incl
ljmp
ljmp
add
or
mov
fidivrs
ss
sbb
outsb
addb
add
adc
jmp
add
push
or
lcall
fisttps
dec
fisubrl
add
jb
ljmp
jmp
add
add
addb
xor
call
inc
add
shl
inc
add
cmp
mov
add
push
stc
jae
inc
add
jmp
add
addl
add
aad
les
add
jmp
xchg
sbb
fisttpl
add
add
test
ja
roll
sbb
add
inc
add
jmp
movsl
add
and
mov
adc
jmp
add
popf
fwait
ret
jg
pusha
add
inc
add
add
mov
xchg
fldcw
cs
add
add
dec
notb
add
add
rep
add
cmp
inc
add
cmpsb
add
jbe
dec
lahf
and
call
add
test
rcrb
loopne
das
mov
aaa
jge
movl
js
stos
push
jno
ljmp
cld
jno
lcall
lds
or
add
pushl
aaa
xlat
ret
add
fidivl
call
or
add
add
data16
push
add
les
mov
add
ret
filds
fmul
addl
bound
lcall
inc
add
mov
addr16
mov
lods
icebp
addl
call
push
add
ss
add
enter
incl
dec
pop
xchg
lcall
inc
add
loop
xchg
outsl
aam
add
enter
adc
add
mov
add
mov
call
pushf
repz
jno
lcall
popf
les
push
insl
fcmovnbe
adc
cs
leave
pusha
add
test
leave
sub
adc
cmp
add
pushf
mov
pushl
add
dec
repz
add
add
pop
add
inc
add
pop
lret
mov
add
std
jmp
cmp
add
cmp
in
pop
out
sub
add
lahf
mov
add
int
fnstenv
jmp
add
add
scas
das
xor
lcall
ret
add
scas
inc
add
test
jae
mov
std
push
and
ljmp
sub
daa
add
addl
cmp
add
jo
ljmp
mov
add
dec
lahf
pop
fstl
add
cmp
dec
nop
cmp
add
jmp
icebp
mov
adc
call
loopne
mov
ljmp
add
inc
add
add
add
cmp
ficoms
jmp
decl
mov
jecxz
add
decl
add
data16
loope
pop
add
add
add
sahf
int
jb
call
push
add
sub
ss
add
addb
adc
xchg
xor
dec
in
push
cmp
add
jmp
call
ja
movsb
add
in
stos
repz
jo
jns
sub
add
push
add
mov
out
or
lcall
aaa
pushf
sbb
push
add
add
xchg
cmp
and
jmp
ss
push
add
incl
incl
mov
lods
flds
add
jmp
add
add
fldl
xchg
fistpll
push
add
sbb
arpl
call
cli
inc
add
in
lock
cmp
add
ds
lods
pop
adc
jmp
in
ss
xchg
sbb
lcall
jno
incl
push
add
loope
push
ret
add
test
mov
add
adc
add
call
lds
fmul
aas
test
add
fwait
test
push
sub
add
jns
mov
jp
add
xchg
pop
fcomps
mov
add
test
push
add
or
mov
push
add
mov
sti
dec
jo
call
add
fldl
add
in
movsl
add
add
cmp
add
add
push
bound
jmp
cli
in
movsb
add
ja
lret
add
jns
out
cmp
push
add
lea
pop
ret
add
int3
cmpsb
add
xchg
iret
popa
add
jp
add
pop
add
out
mov
jle
push
add
ret
add
inc
add
aaa
xchg
daa
add
add
sub
add
or
aas
jae
call
push
xchg
jae
decl
and
pushl
lcall
adc
iret
addl
test
add
mov
sahf
mov
sub
stos
push
add
sbb
add
ss
testl
cmp
add
enter
jne
lret
add
cmp
ljmp
add
dec
sbb
add
fcomps
inc
add
rolb
mov
add
xor
call
cltd
jnp
jno
out
mov
jmp
jmp
add
decl
jl
inc
add
leave
pop
mov
add
add
scas
rcrb
ds
adc
call
mov
pop
fisubl
sub
ss
cmc
pop
jle
outsb
sbb
pop
jae
cmp
daa
add
cmpsl
add
add
incl
add
jae
ljmp
add
add
pop
add
fsts
add
xor
hlt
push
pop
cmp
add
test
push
add
loopne
mov
inc
add
add
aad
dec
mov
mov
stos
mov
add
adc
incl
add
insl
or
lcall
and
add
popa
add
jge
iret
daa
add
sub
add
sub
addb
xor
call
push
ret
movsl
add
add
add
jne
pop
clc
pusha
add
movsb
add
jle
xchg
sbb
stc
scas
mov
outsb
and
incl
pushl
add
jle
addb
add
add
or
add
mov
add
popa
add
push
add
arpl
lcall
mov
pushf
rolb
add
addb
add
and
push
fwait
mov
add
insb
imul
add
clc
xchg
dec
and
out
js
sub
aam
aas
scas
cs
lret
pop
pop
iret
enter
push
and
fstps
inc
add
repnz
sahf
lods
outsb
dec
outsl
fucomp
fildll
iret
test
jg
icebp
xor
jmp
inc
add
jmp
cmp
daa
add
sbb
rcrl
or
js
in
pop
addl
xchg
dec
mov
lcall
xchg
cmp
add
pop
pop
xchg
xor
inc
add
lock
jnp
jae
pushl
roll
inc
add
xchg
and
add
add
xchg
addl
jle
lea
add
add
push
nop
stos
ja
stc
pop
jmp
sbb
xor
jmp
jmp
jb
pushl
adc
ljmp
lret
daa
add
ret
add
cmp
addr16
ret
add
out
inc
add
mov
roll
add
add
mov
add
add
lcall
pop
push
inc
add
pop
add
data16
and
sub
xor
dec
bound
cmp
jb
jmp
mov
add
jge
pop
push
add
call
call
jg
add
fsubrs
daa
add
add
push
mov
mov
xor
cmp
add
dec
loop
stos
adc
call
imul
dec
sub
or
fsubr
mov
add
pop
add
sbb
ja
add
outsb
jb
lcall
add
sub
xor
incl
pop
fildll
je
or
adc
jl
enter
mov
je
add
stos
push
add
xchg
int
add
push
jmp
ret
add
xchg
fidivrs
add
mov
pop
and
incl
incl
push
mov
mov
mov
dec
test
pop
add
daa
add
mov
pop
lret
sarl
ficompl
mov
jle
dec
mov
push
add
and
call
dec
sub
call
push
stc
test
or
and
cmp
imul
cmpsb
add
dec
sub
int
outsb
aas
push
add
in
hlt
je
hlt
push
add
and
call
cmp
fnsave
xor
add
dec
push
addl
pop
add
ljmp
and
fldl
sub
ljmp
add
in
mov
xor
dec
insb
inc
add
jne
xor
lcall
adc
jmp
cmp
add
sahf
stos
ljmp
add
outsl
mov
add
mov
add
int
lods
cmp
mov
aaa
adc
jmp
add
dec
insl
mov
lea
cmpsb
add
add
decl
add
lods
or
divl
add
fcompl
add
cmp
sbb
sbb
and
pushl
add
sbb
iret
cmp
movsl
add
test
cmp
add
js
add
xchg
sub
add
sub
mov
pop
lock
mov
mov
add
ret
add
psubq
dec
or
mov
sbb
add
add
jg
test
add
lcall
fiadds
cmpsb
add
sub
add
add
mov
add
sbb
dec
arpl
ljmp
ret
add
add
roll
add
cld
ret
scas
xchg
cwtl
popa
add
nop
cmp
inc
add
jmp
lahf
pop
add
add
loop
mov
stos
inc
add
mov
add
add
mov
add
add
lods
mov
test
jns
add
lcall
or
add
das
jb
jmp
or
mov
lods
test
cwtl
popa
add
xchg
xchg
sub
dec
dec
dec
pop
movsb
add
add
js
aad
and
dec
pop
xchg
loopne
jae
jmp
add
add
add
stos
pushf
leave
bound
call
mov
add
popf
jbe
add
movsl
add
add
and
test
dec
in
mov
ljmp
call
add
ds
sbb
add
or
ret
push
aam
int3
add
decl
add
dec
sti
jno
incl
add
arpl
call
add
in
inc
add
jge
imul
sahf
pusha
add
data16
jbe
add
xchg
adc
decl
decl
add
xchg
hlt
dec
stc
dec
mul
add
lahf
inc
add
cld
es
js
movsb
add
add
add
dec
int3
ret
add
add
fidivs
incl
and
cmp
add
int3
mov
add
add
jge
add
addl
add
addl
add
cmpsb
add
out
fsubs
clc
addb
incl
add
lcall
aaa
sti
les
jb
mov
add
adc
decl
adc
fistl
add
in
out
add
add
pop
cmp
imul
in
dec
dec
sub
cmpsb
add
add
push
push
or
and
adc
jmp
mov
add
daa
add
arpl
pushl
jmp
add
bound
jmp
mov
add
lea
add
inc
add
push
test
pop
jge
add
add
dec
ret
dec
fadds
mov
into
inc
add
pop
loopne
pop
add
jmp
fadd
add
adc
incl
add
jl
mov
decl
add
fisttps
insl
jo
incl
and
jmp
decl
push
add
test
add
add
test
sub
cmc
push
add
and
rcll
jo
sarb
or
mov
xchg
mov
jno
lcall
inc
add
mov
add
pop
add
inc
add
loopne
int3
lds
or
add
call
pop
pushf
dec
lcall
add
enter
xchg
movsb
add
add
add
add
adc
call
mov
aad
inc
add
test
mov
add
push
add
aam
lds
mov
add
add
addl
data16
incl
movl
add
mov
mov
lret
sub
lcall
add
ret
and
call
call
add
call
ljmp
and
inc
add
xor
incl
add
test
xchg
push
sahf
addb
cmp
test
les
addb
cmpsl
add
daa
add
dec
sbb
mov
sahf
fnsave
add
sub
inc
add
sbb
out
cmp
add
pop
add
add
add
out
aaa
jns
add
mull
or
sbb
pushf
pop
jle
pop
int3
test
add
sub
mov
add
xor
pushl
add
jp
dec
ret
add
push
in
loop
out
out
shrb
add
adc
jmp
lcall
add
mov
add
cs
add
dec
dec
popf
imul
call
cmc
enter
ret
add
roll
add
aad
popa
add
ret
js
or
add
jmp
add
insb
pop
pop
fcom
loope
dec
xchg
lods
mov
xlat
xchg
xor
cmp
ja
sub
std
push
add
sub
dec
addb
add
push
test
call
popa
add
insb
in
lds
push
add
jne
mov
mov
cmp
pop
jmp
add
add
or
cs
cwtl
mov
mov
addl
dec
icebp
out
mov
add
add
add
pusha
add
push
jo
mov
rcr
push
add
xchg
fstpl
repnz
add
fstpl
mov
std
mov
in
mov
pushf
sbb
cmovb
call
decl
pop
mov
dec
and
jnp
add
jle
xchg
or
mov
outsb
jmp
add
add
xor
enter
mov
out
mov
add
stc
pushf
insb
add
incl
add
mov
aaa
cmp
add
pushf
pop
ja
add
push
add
xchg
aas
pop
pushf
out
testb
out
addb
loopne
push
add
add
add
lds
movl
std
aam
add
inc
add
add
ljmp
mov
shll
cmpsb
add
and
loope
dec
inc
add
add
add
lods
push
fidivl
sub
mov
add
ljmp
fwait
pop
pop
lea
mov
dec
arpl
cmp
push
jns
rolb
add
cmc
hlt
xchg
mov
divps
into
notb
decl
dec
pushf
movb
xor
add
add
out
out
jl
xor
decl
xor
lahf
cli
out
sbb
jns
add
add
decl
add
pushl
js
mov
inc
add
add
and
push
cmp
add
add
push
add
push
push
ret
push
add
mov
push
aad
shl
aaa
cs
cmp
add
enter
push
add
sahf
sti
mov
add
outsb
xchg
mov
testl
leave
cmp
lcall
and
ljmp
lock
xor
mov
lods
ret
call
xchg
push
add
push
test
add
ljmp
ljmp
popf
pop
or
cmc
cmp
test
ret
add
adc
pushl
cmp
add
aas
push
imul
mov
xchg
jo
decl
or
mov
add
xor
ljmp
cwtl
xchg
mov
outsb
xchg
mov
mov
inc
add
or
jle
loope
shrl
pushf
aam
xchg
cmp
add
add
add
dec
mov
call
ror
int
xchg
pop
add
pusha
add
sbb
add
sub
xchg
cmp
add
inc
add
data16
pushl
ljmp
pop
sub
add
stos
mov
lcall
rolb
fwait
clc
test
incl
adc
jmp
pusha
add
imul
mov
add
or
add
push
add
add
cmpsl
add
add
mov
add
int3
lahf
imul
jmp
add
add
adc
xor
dec
xlat
xchg
ds
clc
push
imul
mov
push
jecxz
sub
xor
decl
add
add
add
add
xchg
dec
sub
xor
decl
jae
pushl
add
int3
push
fbstp
adc
nop
cmpsb
add
lcall
xchg
push
jbe
add
mov
add
add
rolb
sar
into
imul
add
mov
cli
push
add
mov
jmp
add
mov
inc
add
mov
push
pop
fwait
mov
movb
add
jmp
jmp
pop
addb
bts
jb
out
jmp
mov
xchg
push
add
mov
inc
add
mov
lock
add
mov
add
xor
ljmp
scas
fisubrl
bound
jle
mov
inc
add
sub
popa
add
pop
mov
outsl
adc
lcall
lret
aam
add
mov
cs
scas
shlb
movsl
add
inc
add
addb
add
add
push
mov
lock
into
sub
mov
add
add
sbb
fldenv
add
cmp
add
mov
add
pop
ja
add
insl
xor
movb
pop
inc
add
cmpsb
add
leave
jecxz
fwait
sbb
and
pushl
lret
test
leave
jl
add
add
lea
mov
bound
call
add
jae
fnstenv
add
std
sub
dec
xor
add
mov
je
sub
or
or
das
test
ja
arpl
incl
xchg
ret
add
xchg
push
add
cltd
cmpsl
add
push
repz
fists
ljmp
add
les
and
sub
add
iret
push
add
sub
mov
cld
mov
popf
arpl
mov
mov
add
cmp
add
incl
push
adc
mov
out
or
xor
call
fisttps
popa
add
xor
lcall
sbb
cld
cwtl
movsb
add
add
add
add
lds
lahf
cmp
nop
sub
xchg
idivl
pop
cmp
scas
pop
add
call
in
sbb
rolb
add
clc
dec
mov
call
insl
loopne
mov
bound
decl
scas
cmp
mov
add
in
cmpsb
add
add
sub
add
add
jp
add
and
or
add
inc
add
jle
cmpsb
add
mov
mov
sub
lods
xchg
pop
pop
mov
add
mov
add
cs
xor
ljmp
arpl
decl
incb
add
incl
lcall
ret
add
add
add
out
ljmp
das
inc
add
movsl
add
loop
sbb
add
add
jle
add
lods
ljmp
addr16
push
add
adc
std
sbb
mov
add
pushf
ja
pop
and
call
add
pop
push
add
and
push
arpl
inc
add
add
clc
fdivrl
mov
or
add
mov
push
push
fwait
cmp
mov
mov
leave
adc
pushl
dec
xchg
adc
ljmp
sub
xchg
mov
clc
ss
add
add
pushl
pushl
call
add
cld
lock
add
add
or
aas
adc
lcall
sub
add
add
cmp
mov
rolb
add
enter
insb
cld
data16
mov
add
out
sub
and
jnp
sub
in
xchg
movl
cmp
adc
ljmp
lcall
addb
aaa
ret
add
mov
lret
lcall
aad
ja
add
sti
and
jmp
add
add
mov
add
mov
add
cmp
sub
mov
ret
add
jmp
test
into
and
iret
sahf
inc
add
dec
adc
incl
clc
idivl
xchg
xor
pushl
add
xor
lcall
decl
dec
repz
push
add
ss
inc
add
cmc
aad
add
inc
add
mov
lcall
add
add
add
add
insb
jmp
push
pusha
add
aaa
jae
ljmp
outsb
xor
call
add
inc
add
rolb
lods
jnp
jg
pop
add
pushl
cmpsl
add
push
cmpsl
add
pop
add
incl
add
out
imul
mov
cmp
out
in
call
mov
add
pop
insb
adc
pop
stc
test
loope
xchg
lods
pusha
add
push
sub
cmpsb
add
decl
mov
add
addb
decl
out
fcompl
add
dec
divl
loop
xlat
popf
lret
inc
add
mov
in
jo
cmp
xor
jmp
int
add
add
aaa
inc
add
push
push
dec
cs
fsubrs
clc
push
add
test
lods
jge
loopne
pusha
add
sub
jo
incl
imul
sub
lcall
inc
add
pop
and
mov
add
dec
and
inc
add
add
adc
dec
movb
rcll
add
mov
fidivs
add
cs
fsubr
add
aas
mov
in
mov
push
jne
cltd
call
xor
pushl
stc
sbb
add
xchg
add
add
add
and
imull
sub
xchg
mov
cmpsl
add
cltd
int3
jno
lcall
in
enter
paddsw
add
add
sti
push
lods
out
rcl
push
movsb
add
add
add
or
fisttps
add
ljmp
xor
incl
jns
rolb
add
add
xchg
aad
add
sti
or
jb
jmp
add
xchg
mov
repz
rolb
add
ljmp
push
add
add
or
iret
inc
add
jmp
cmp
add
bound
ljmp
lcall
xchg
mov
cmc
jb
ljmp
add
hlt
outsl
mov
pop
int3
jo
call
add
gs
mov
cmp
inc
add
pop
in
dec
jecxz
add
cli
scas
xchg
mov
lods
cmpsl
add
cmp
stos
sub
mov
inc
add
call
out
nop
pop
ja
pop
push
add
sar
sub
stos
cltd
out
xchg
jmp
inc
add
mov
icebp
cmp
decl
scas
sbb
ret
add
lds
inc
add
cmpsb
add
cmp
add
aam
pop
aad
add
addl
jne
add
std
mov
mov
aam
hlt
adc
call
clc
std
cmpsl
add
mov
outsl
daa
add
loop
cli
mov
push
cs
lods
std
inc
add
lret
add
xlat
pop
jne
add
insl
ss
add
call
inc
add
cmp
divb
leave
add
dec
out
aaa
lahf
mov
add
hlt
movsb
add
les
and
lcall
add
lcall
jae
jmp
add
testl
add
sbb
add
xor
incl
call
pushl
lcall
add
or
add
pop
insl
test
in
jns
mov
add
push
sbb
pop
add
push
mov
add
pusha
add
push
add
shl
fildll
pop
inc
add
fisttpl
cmp
adc
push
pop
add
push
dec
jp
mov
xchg
int
pop
imul
add
inc
add
push
add
pop
sub
xchg
add
decl
add
add
jns
jecxz
loope
scas
or
add
push
add
dec
mov
add
lahf
fwait
and
incl
add
mov
pushf
dec
test
mov
pop
clc
add
outsl
js
in
add
decl
mulb
test
int3
jecxz
rolb
pushl
add
std
xchg
mov
adc
cmp
xchg
sarb
stc
xchg
pop
stos
or
mov
iret
int
jmp
stc
dec
dec
xchg
and
jl
mov
stc
lcall
lcall
add
mov
imul
cmpsl
add
iret
movb
xor
fidivrl
fs
inc
add
scas
inc
add
sub
cli
pop
or
mov
add
dec
bound
decl
cli
or
pop
lods
jbe
je
dec
jl
cmp
repz
incl
push
add
add
add
add
push
fmull
adc
push
sbb
add
pushl
add
inc
add
add
fsubr
jbe
data16
shr
push
cmc
sub
pop
repz
jmp
ljmp
dec
mov
lret
add
decl
lcall
in
insb
xor
decl
mov
lds
jmp
inc
add
sub
xchg
push
clc
outsl
cmpsb
add
aas
jg
xchg
imul
add
add
and
in
pop
mov
jb
decl
mov
inc
add
data16
add
sub
xchg
pusha
add
add
out
push
push
add
push
rcll
ljmp
xchg
repz
ja
loopne
dec
jl
add
pop
sti
ret
add
add
add
testb
rolb
add
add
or
add
push
add
in
xchg
mov
js
pusha
add
lods
cmp
repnz
add
cmp
adc
jmp
add
add
inc
add
inc
add
add
filds
jmp
lea
lds
aaa
push
add
fdivs
ret
add
add
and
decl
and
jo
incl
ss
cltd
pop
mov
push
mov
and
add
movl
add
add
xchg
inc
add
mov
mov
popa
add
iret
in
sub
out
mov
decl
add
xchg
jbe
jge
add
push
add
inc
add
call
jbe
add
roll
inc
add
inc
add
jae
incl
add
daa
add
das
pop
sub
add
or
adc
jp
add
dec
mov
add
add
psraw
aas
or
add
aad
std
addb
add
add
add
pop
mov
movsl
add
loope
push
addb
insb
jl
xchg
pushf
push
sub
add
lods
into
into
ror
hlt
js
mov
filds
mov
dec
addl
add
xor
jmp
add
lcall
in
call
push
out
jae
jmp
add
repnz
pop
jl
push
add
cs
fcmovnbe
adc
incl
add
int
cmp
add
pushl
incl
add
dec
push
and
incl
int
int
lea
test
gs
pushf
hlt
fcoml
add
movnti
out
mov
dec
lods
mov
jl
add
sbb
decl
ja
notb
ds
fwait
or
add
pop
mov
sbb
add
dec
xor
incl
aaa
pop
lds
test
mov
or
jp
shll
jg
add
add
stc
cwtl
stos
pop
add
sub
add
sahf
mov
jle
sub
movsb
add
push
or
lods
icebp
add
dec
leave
mov
add
inc
add
mov
imul
inc
add
pushl
add
aas
mov
repnz
mov
rolb
jle
xor
incl
add
cmp
fsubrl
fwait
ss
std
mov
jne
add
rcrl
add
mov
add
adc
xchg
pop
add
and
lcall
push
add
fsubl
add
icebp
ficomps
jns
loopne
and
test
hlt
insl
lods
jo
mov
movb
sbb
add
int3
mov
add
sbb
add
sub
roll
sbb
or
ret
xor
call
pushl
push
sbb
ss
or
add
mov
in
into
mov
cmc
xchg
addb
mov
dec
cli
add
pop
sub
push
add
stos
repz
ljmp
je
cmp
push
add
and
jmp
add
mov
add
mov
roll
lret
int3
js
mov
test
jmp
sbb
push
loopne
flds
incl
add
mov
jle
add
cld
add
mov
xlat
or
mov
add
add
decl
into
cmp
add
inc
add
addl
cmpsb
add
jbe
add
sbb
sahf
ja
pop
adc
aad
pop
or
mov
cmp
dec
xlat
rorl
adc
fildll
add
aaa
mov
push
add
add
mov
pusha
add
enter
cld
iret
adc
call
bound
lcall
push
roll
add
push
add
addb
outsl
xor
pushl
mov
call
add
sub
inc
add
and
ljmp
add
add
mov
add
add
in
cmp
rcr
dec
movsb
add
add
popa
add
rolb
add
xchg
jnp
loopne
je
add
jg
add
add
lcall
jmp
add
add
mov
ret
scas
xchg
fimuls
mov
lods
ret
scas
in
and
jmp
add
dec
mov
mov
lds
inc
add
add
in
fucomp
push
add
insl
addr16
add
insb
jle
pop
addb
fdivl
push
add
fadds
mov
jp
and
aam
out
aaa
cmp
sahf
inc
add
inc
add
add
in
stos
jbe
add
jmp
jmp
and
inc
add
add
add
repz
outsb
mov
rolb
jmp
or
je
stos
stos
lea
add
jg
add
add
add
cmp
sub
push
sub
decl
hlt
adc
fimull
adc
in
lds
sbb
idivb
ret
add
add
pop
aaa
dec
into
jne
rclb
fdivrp
mov
incl
mov
jmp
add
xchg
push
add
mov
add
hlt
jmp
add
add
test
js
add
lcall
add
add
cli
mov
xchg
notl
shll
add
pop
jl
aad
or
jmp
adc
incl
cli
xchg
test
add
mov
jecxz
xchg
repz
pop
repz
push
out
movsl
add
stc
stos
cmp
xchg
inc
add
add
add
push
add
jle
add
call
cmpsb
add
fcoms
mov
add
jmp
xchg
adc
jmp
cltd
shl
push
add
in
sub
add
xchg
iret
popa
add
les
addb
into
movsb
add
add
incl
hlt
xchg
mov
outsb
mov
pushl
add
lods
dec
ljmp
add
js
add
pop
pop
psubsw
inc
add
gs
mov
dec
xchg
roll
add
lret
sub
insb
sub
push
aad
add
popf
cli
ret
add
call
add
adc
add
sub
add
sub
and
ljmp
pop
add
sub
or
pop
push
and
pushl
mov
shlb
bound
lcall
addl
mov
add
fdivr
mov
shll
cli
mov
roll
adc
add
jo
jmp
add
out
fdivrs
in
jo
push
daa
add
dec
inc
add
push
push
add
shrb
je
add
mov
sub
pop
sub
mov
push
add
test
insl
jg
inc
add
sahf
sarb
and
add
cli
add
add
sahf
shl
aad
add
add
sub
add
nop
pop
mov
mov
cld
movsl
add
xor
add
int3
sub
add
popl
aas
adc
decl
and
jmp
aas
roll
add
in
aad
test
add
ljmp
add
add
in
xor
call
fsubr
and
push
ljmp
add
jge
add
in
jo
sahf
push
push
add
sub
jno
call
pushf
das
pop
js,pt
add
insb
sbb
add
iret
data16
xchg
das
movl
add
add
stc
mov
inc
add
inc
add
repnz
add
jmp
daa
add
jl
cs
add
stc
lret
add
lcall
adc
jmp
add
inc
add
out
bound
lcall
or
add
push
pop
add
pushl
add
add
add
call
shlb
fdivrs
movsl
add
int3
imulb
add
push
add
add
loopne
outsb
out
adc
xor
decl
stos
aaa
repz
cs
or
addb
xor
int3
test
add
popa
add
out
or
add
sbb
fwait
mov
js
jecxz
mov
add
lcall
and
decl
insl
leave
lcall
push
dec
inc
add
mov
jbe
add
dec
inc
add
xor
push
xchg
int
dec
xchg
inc
add
loope
pusha
add
sar
ret
and
pop
clc
push
add
sbb
std
jp
add
icebp
jo
inc
add
gs
add
push
jne
dec
jp
mov
lcall
add
push
add
in
sahf
push
cmc
das
iret
int3
test
out
add
stc
lret
mov
int3
add
xchg
loopne
add
push
sbb
std
push
add
dec
mov
cwtl
xchg
imul
aas
lea
test
jo
incl
add
ds
cmc
ljmp
adc
cmp
xor
jl
in
push
sbb
add
lcall
adc
out
jmp
add
ret
add
cmp
sti
and
inc
add
add
push
mov
ud2
or
add
shlb
fwait
lods
out
sbb
add
mov
jmp
mov
movb
add
mov
loopne
loop,pn
xchg
mov
icebp
pushf
xlat
enter
iret
add
xor
incl
add
add
pop
add
lcall
sub
add
clc
addl
mov
add
add
ljmp
roll
add
add
hlt
xor
jmp
ljmp
leave
add
jp
push
pop
into
inc
add
xor
call
add
sbb
inc
add
add
add
lods
js
je
add
add
shlb
add
cmp
insl
pop
push
sub
push
add
aad
icebp
imul
repnz
xchg
sub
lret
add
pop
xchg
xor
call
add
push
cmpsb
add
decl
inc
add
jl
leave
stos
mov
mov
fmull
icebp
push
add
bound
lcall
pushl
das
ret
push
add
add
push
and
pushl
shr
ret
add
repnz
add
testb
mov
cmc
cs
add
loope
xchg
mov
sub
cltd
mov
add
add
fnstsw
adc
call
cwtl
lret
jl
add
jl
mov
out
gs
inc
add
dec
sbb
aad
and
ljmp
inc
add
sbb
dec
fs
mov
roll
add
pushl
add
cs
jg
push
dec
jecxz
int
out
imul
xchg
pop
push
icebp
mov
loop
popf
rolb
push
add
add
mov
sub
mov
jno
ljmp
outsb
ret
add
add
pop
ret
add
add
pusha
add
add
mov
sbb
or
jno
jmp
add
lret
sub
jno
fnsave
or
or
movsb
add
call
int3
lea
fnsave
std
cwtl
and
test
test
les
gs
sbb
xor
incl
mov
add
fldpi
inc
add
mov
cs
add
lcall
movb
add
mov
pop
add
add
pushf
xor
cmp
mov
sahf
loope
lock
mov
jno
incl
add
add
and
decl
jge
sub
push
dec
mov
addb
pop
fsubr
jbe
add
je
add
mov
xor
call
add
fdivr
inc
add
cwtl
leave
mov
std
jecxz
fdiv
addl
add
pop
mov
pop
inc
add
add
testl
mov
jge
add
insb
addb
add
fsts
mov
push
add
ss
push
add
jecxz
xor
lcall
faddl
jmp
decl
aaa
mov
loop
cs
add
lahf
popf
push
mov
inc
add
ds
add
add
cmp
js
lret
sbb
add
add
ret
jmp
ja
jg
mov
clc
add
lock
mov
ss
mov
adc
add
decl
add
repnz
add
add
push
add
sbb
das
ljmp
inc
add
or
adc
call
sub
fwait
das
adc
incl
dec
ret
add
push
aaa
scas
jmp
add
in
rcrb
push
add
mov
add
fsts
add
rorb
push
xchg
cmp
add
sbb
jno
decl
lea
add
add
lds
es
insl
or
add
add
add
and
movsl
add
push
adc
into
fwait
jmp
add
add
cmp
add
xchg
gs
inc
add
xor
sub
jo
jmp
add
xchg
mov
add
jge
add
lds
jbe
sub
paddb
inc
add
cmp
gs
xor
mov
mov
inc
add
dec
out
movl
call
add
add
cmc
insb
cwtl
jno
pushl
or
mov
ljmp
mov
adc
pushl
je
push
jb
pushl
mov
addb
push
add
cmpsb
add
cmp
xlat
clc
arpl
ljmp
stc
inc
add
mov
add
popa
add
sahf
shll
jmp
lcall
add
loop
sub
dec
push
pop
add
mov
fidivs
add
insl
xchg
dec
sbb
loope
xor
decl
mov
rolb
cmpsb
add
jmp
add
ficomps
out
jmp
outsl
hlt
enter
mov
jge
add
adc
pushl
sti
rcr
aad
dec
jno
jns
xor
mov
dec
xchg
dec
lcall
xchg
xor
aas
xor
ljmp
add
ss
in
outsl
and
rolb
add
push
imul
add
fdivrs
cmp
dec
jo
call
lcall
mov
ret
add
lret
test
add
mov
or
push
add
mov
add
iret
test
sbb
add
aad
inc
add
add
xchg
adc
jmp
mov
int3
test
mov
jp
add
js
shll
jmp
add
mov
mov
popa
add
cs
add
adc
lcall
mov
jae
decl
hlt
pop
cmp
push
cwtl
adc
ljmp
dec
imul
inc
add
mov
add
jmp
add
call
decl
mov
cmp
cmp
lcall
add
xor
lcall
out
jo
aas
xor
cmp
inc
add
add
adc
pushl
mov
push
addl
fcmovnb
add
xor
mov
pop
add
xor
mov
test
jne
leave
mov
fldt
add
add
sub
inc
add
cmp
cmp
xchg
inc
add
jge
add
xor
pushl
adc
call
mov
les
pop
test
add
push
add
fdivrs
sub
jg
cmpsb
add
mov
add
loop
mov
jl
repz
incl
add
pop
repz
xor
jmp
add
inc
add
mov
lock
add
lcall
push
mov
add
jmp
add
in
add
lcall
ds
mov
cmpsb
add
add
add
cmp
ljmp
mov
lea
jns
sbb
pop
popf
lock
push
dec
les
pop
data16
add
add
pop
aaa
stc
inc
add
rolb
add
add
aas
push
ja,pn
add
pop
add
mov
insb
out
in
mov
jo
lcall
xor
mov
imul
nop
mov
and
rol
add
call
jp
add
add
rcrb
pop
je
lret
in
pop
add
lret
dec
pop
add
inc
add
inc
add
add
inc
add
and
in
loop,pn
mov
aam
imul
fistps
mov
add
sbb
sbb
lret
cmp
lcall
cmp
jno
ljmp
add
add
jg
xor
jmp
add
pop
out
fbstp
stos
xchg
cwtl
inc
add
adc
incl
cmpsb
add
add
jae
decl
loopne
into
popl
dec
lahf
mov
cs
mov
sbb
pop
push
and
ljmp
add
add
leave
ja
add
gs
loop
mov
add
mov
mov
add
push
ds
daa
add
add
xlat
roll
xor
decl
add
add
push
add
jge
data16
loop
pop
in
mov
pop
addl
repz
test
aad
add
add
lods
pop
insl
fldcw
add
add
xor
jge
add
mov
addr16
add
in
sbb
xchg
jg
add
and
call
add
sub
add
or
mov
mov
add
bound
ljmp
out
imul
imul
add
pop
cmp
inc
add
pop
add
xchg
cmp
push
lret
push
addl
add
push
add
inc
add
and
add
xchg
inc
add
inc
add
je
repnz
add
scas
sbb
pushl
add
add
cwtl
sbb
popf
out
fisttpll
je
push
add
addl
jmp
aam
add
xchg
rdtsc
add
dec
in
mov
add
add
add
dec
fsubs
sbb
dec
imulb
in
or
mov
call
add
add
pop
xor
incl
pushl
jmp
add
js
add
dec
daa
add
add
daa
add
stc
pop
ds
add
add
add
and
jmp
call
add
rcrl
add
neg
add
call
xor
decl
out
xchg
cs
add
push
and
mov
sahf
dec
mov
add
incl
movsl
add
or
add
push
add
aam
add
mov
add
lock
add
data16
add
out
movsb
add
or
sub
mov
add
shl
add
jnp
movsl
add
mov
or
cltd
insl
les
mov
imul
fisttps
push
xlat
call
mov
dec
repz
push
aam
pushf
stos
mov
add
xor
mov
add
add
mov
mov
les
int
add
push
adc
incl
add
gs
mov
pushl
add
mov
jle
add
add
sub
add
mov
lret
add
xchg
pop
add
movl
add
notl
dec
addl
ret
add
in
outsb
mov
aad
test
cli
and
pushl
sub
dec
mov
add
or
cwtl
stos
cmpsl
add
mov
fstl
pop
add
imul
push
sbb
xor
ljmp
add
pushf
dec
adc
decl
add
rorb
add
insl
xor
inc
add
in
sbb
xchg
int3
push
or
add
adc
lcall
int3
test
bound
call
add
add
pop
dec
jmp
mov
pop
mov
incl
leave
scas
fdivrs
popa
add
xchg
lahf
add
lcall
ds
add
out
and
fcmovnbe
hlt
add
decl
sub
add
xchg
pop
stos
mov
mov
lods
movsb
add
xor
bound
call
add
jae
pushl
jmp
add
inc
add
or
jmp
gs
fildll
insl
pushf
in
roll
ljmp
aas
adc
ljmp
insb
sahf
inc
add
and
cmp
add
xor
incl
pop
out
aad
and
decl
or
in
push
hlt
dec
mov
test
dec
sbb
mov
iret
sbb
push
icebp
movl
loopne
roll
add
fcoms
add
xor
pushl
leave
in
add
decl
mov
mov
mov
add
rorl
stos
cmp
xchg
rol
add
add
fsubr
addl
mov
add
cmpsl
add
add
add
addb
push
or
out
cmp
pop
fs
mov
repz
adc
incl
jmp
scas
or
add
std
xchg
ret
add
dec
cld
rolb
add
add
scas
mov
adc
mov
imul
add
dec
insl
jge
add
add
push
add
sub
out
pop
and
call
add
incl
cmp
add
cmp
out
popl
jns
or
daa
add
iret
push
iret
cmc
mov
add
add
add
jge
add
or
sub
add
dec
mov
loope
pop
xor
ljmp
jl
add
xchg
and
add
clc
push
add
pop
fsub
add
add
adc
ljmp
jo
in
xchg
dec
mov
jmp
add
and
fstl
add
int
jo
decl
push
add
jle
mov
add
shl
add
push
add
ja
repnz
add
cmp
aam
adc
call
add
jle
add
mov
xchg
push
add
add
pushl
test
not
xchg
cmp
add
add
add
sbb
mov
add
add
movb
negl
sbb
add
dec
test
addl
or
jecxz
fldcw
sarb
add
outsl
in
jecxz
imul
ret
and
insl
scas
ret
add
insb
mov
inc
add
add
add
add
ret
add
inc
add
pop
jae
lcall
jo
call
dec
xchg
out
imul
mov
daa
add
rorl
and
lcall
add
cmp
ds
add
enter
lret
pusha
add
addb
add
pop
add
and
decl
lcall
adc
push
mov
mov
pop
out
mulb
add
and
ljmp
add
add
add
push
stos
pushf
in
mov
bound
ljmp
shlb
nop
mov
add
mov
cmpsb
add
call
jns
lock
incl
add
adc
call
mov
out
cmpsl
add
popa
add
inc
add
mov
and
xchg
test
test
out
scas
rol
add
add
jnp
mov
add
sub
jg
add
jle
add
add
pop
pop
enter
lcall
inc
add
add
sub
add
jne
loope
dec
movl
inc
add
xchg
or
xor
lcall
adc
call
lcall
add
add
push
add
adc
lcall
mov
adc
call
mov
jecxz
data16
lcall
add
mov
insb
add
call
enter
jl
add
test
movsb
add
jg
outsb
daa
add
rolb
lahf
inc
add
cmc
mov
pop
adc
call
pushl
cmpsb
add
xor
ljmp
std
xchg
iret
mov
add
addb
bound
decl
jmp
inc
add
xchg
pop
jae
decl
fisttpll
add
fbstp
push
add
cmp
loop
push
add
lods
test
roll
add
mov
pushl
addl
mov
mov
jno
inc
add
or
call
enter
add
pushl
add
cld
mov
push
xor
or
jp
icebp
pop
push
push
inc
add
add
lret
js
mov
add
add
and
incl
and
inc
add
inc
add
and
call
adc
add
dec
sub
pop
pop
xchg
and
add
aaa
fimull
xor
ljmp
mov
insl
sub
and
dec
pop
or
movsl
add
push
cmp
adc
call
sbb
imul
out
dec
sbb
insb
lahf
push
cmpsl
add
add
push
aaa
adc
decl
jmp
addl
add
and
incl
jo
jns
xchg
stos
and
ljmp
scas
jg
add
call
add
mov
push
add
call
push
add
jecxz
lret
and
call
addb
mov
movsl
add
add
inc
add
lock
addl
add
add
mov
adc
test
add
test
add
loopne
outsb
pop
mov
add
je
push
add
loop
push
jg
add
add
add
xor
jmp
aas
cmp
adc
incl
in
xchg
inc
add
shll
xchg
mov
jl
movsl
add
add
dec
mov
lcall
add
or
add
mov
add
decl
pushl
push
stos
ds
pop
int3
addl
add
add
jmp
add
add
add
fcompl
and
cltd
daa
add
add
int3
or
add
jmp
inc
add
add
jbe,pt
add
jecxz
jns
add
mov
movb
add
lcall
xchg
pushf
or
lcall
out
sub
sbb
add
add
addb
add
add
add
data16
add
pushl
add
dec
out
xchg
arpl
lcall
add
add
jns
inc
add
pushf
mov
adc
incl
lcall
add
stos
cmpsl
add
add
popf
addl
dec
mov
push
test
lahf
add
stc
mov
add
push
add
insb
lret
adc
add
and
jmp
push
inc
add
aas
dec
xchg
push
test
add
pop
push
lds
popf
lcall
sub
outsl
imul
jns
add
in
cmp
outsl
xchg
faddl
add
add
jge
in
nop
pop
xchg
aas
push
mov
adc
mov
add
icebp
loopne
fsubl
cli
push
bound
clc
ljmp
nop
mov
xor
ljmp
mov
popf
leave
and
in
xchg
into
cltd
xchg
mov
add
insl
jmp
add
mov
add
movsl
add
add
mov
ss
add
call
call
add
add
push
jne
lods
movb
mov
imul
add
fnstcw
add
repnz
mov
add
incl
jne
jl
add
nop
or
fwait
lret
hlt
int
dec
divl
call
loope
mov
call
add
add
add
jno
lcall
shl
add
add
adc
call
add
jnp
add
in
pop
or
icebp
push
inc
add
add
jmp
add
add
in
ds
test
adc
call
xchg
icebp
dec
dec
pop
add
incl
fdivs
add
iret
in
mov
and
ljmp
mov
fsts
add
adc
mov
push
jae
cli
mov
add
add
enter
cwtl
lcall
cltd
xchg
mov
add
push
xchg
test
ljmp
pop
out
add
call
sub
adc
adc
incl
lcall
xor
call
mov
add
mov
and
lcall
push
movsl
add
xor
dec
push
add
inc
add
out
out
sahf
fwait
mov
movsb
add
add
lods
xchg
jp
jnp
stos
std
mov
cmp
sub
lcall
sbb
adc
pushl
daa
add
add
add
sub
sub
add
xor
decl
mov
outsl
inc
add
pushf
sub
add
lods
bnd
ret
add
arpl
pushl
add
sbb
inc
add
dec
out
pop
mov
push
mov
add
dec
sbb
ret
add
jno
push
jb
push
movl
lock
add
jle
add
enter
add
push
push
dec
push
cmpsb
add
shr
dec
sub
jno
jmp
add
add
cltd
rolb
add
in
das
cmp
add
jne
sub
loop
push
xor
call
out
scas
lock
dec
pop
in
fdivl
mov
cmpsl
add
add
stos
pop
out
xchg
clc
pusha
add
les
aad
cmc
jmp
stc
adc
dec
dec
fnstenv
lcall
addl
sub
add
add
pop
rolb
test
cmp
xchg
dec
dec
pop
addl
mov
add
ja
lret
int3
scas
cli
mov
add
cld
sub
add
in
mov
add
ja
dec
xor
incl
or
call
mov
mov
dec
or
add
sub
daa
add
jmp
add
mov
add
sbb
add
pushl
cli
push
cld
push
cmp
add
mov
cli
in
mov
add
mov
jl
add
das
data16
mov
adc
inc
add
sbb
sbb
pop
cmp
call
dec
ja,pn
add
add
add
jmp
lcall
add
mov
inc
add
add
jmp
inc
add
out
data16
or
cld
bound
decl
iret
mov
ja
ficoml
incl
pushf
lods
incb
add
test
adc
call
addb
int3
les
ja
mov
leave
mov
xlat
xchg
lods
mov
add
add
in
mov
xchg
or
call
std
test
add
pop
daa
add
mov
xchg
stos
xchg
mov
pop
pop
add
cmc
scas
shlb
add
push
inc
add
jecxz
jnp
adc
call
outsl
fstl
add
dec
jmp
shrl
aam
sbb
add
mov
jo
incl
jmp
jmp
fdivl
mov
data16
dec
jecxz
hlt
repnz
sub
or
decl
xor
add
push
fst
leave
xor
incl
sbb
pop
jo
jle
add
arpl
mov
add
mov
out
pop
icebp
or
adc
jmp
add
jns
inc
add
inc
add
inc
add
addl
add
addb
into
ss
mov
add
add
add
add
cs
sbb
decl
mov
add
js
push
cmc
fildll
fwait
pop
movsb
add
jmp
mov
add
rcr
fcomps
mov
lret
add
lret
inc
add
mov
push
jp
sbb
add
add
fildl
incl
add
rcrb
lds
jb
mov
add
lahf
ret
pop
xchg
xchg
push
add
test
into
inc
add
test
sbb
add
pop
add
sub
xor
ljmp
and
dec
repnz
add
sbb
incl
pop
xchg
es
in
adc
pushl
cmp
js
jae
mov
stc
pop
mov
outsb
pop
sbb
add
sbb
add
cmpsl
add
cmpsl
add
add
aas
mov
int
add
ljmp
call
mov
int3
mov
add
out
push
add
jne
ret
push
add
lahf
or
add
add
push
stc
push
add
outsl
lret
and
incl
add
xor
add
into
lds
mov
xor
add
call
les
push
add
mov
out
mov
add
int
add
imul
add
xor
ljmp
mov
test
notb
add
cmp
mov
add
idivl
lods
inc
add
pop
xchg
lcall
add
or
add
lcall
add
mov
ds
add
cld
enter
or
mov
push
dec
data16
loop
mov
xor
add
cltd
xchg
inc
add
in
pop
add
pushl
pop
jne
jbe
add
leave
popf
xchg
mov
addb
inc
add
popa
add
jns
and
clc
lahf
movl
add
inc
add
lock
shrb
stos
dec
jb
pushl
mov
add
cmpsb
add
add
arpl
ljmp
in
xchg
jns,pn
add
add
add
imul
lcall
add
insb
icebp
sub
imul
jmp
cltd
add
decl
in
pop
mov
or
xchg
fcoml
or
in
fisubs
push
add
and
push
sub
hlt
xchg
call
jno
clc
lods
movsl
add
add
adc
decl
add
stc
or
inc
add
mov
xchg
jbe
call
sbb
add
adc
call
add
inc
add
add
pushl
sbb
loope
rcrb
ljmp
mov
add
dec
stos
int3
push
mov
inc
add
movb
push
add
or
addl
add
in
cltd
push
add
mov
sub
add
pop
xor
lcall
mov
add
push
imul
push
insl
mov
add
pop
xor
lcall
popf
dec
clc
lds
loope
jae
decl
int
cmp
daa
add
add
pushl
cmp
add
inc
add
xchg
adc
jmp
add
mov
dec
or
mov
add
add
jp
cmpsl
add
dec
cmp
pop
notb
call
add
jb
pushl
call
push
add
mov
add
lret
pop
push
inc
add
cmp
add
sbb
mov
dec
insb
dec
das
cmpsl
add
inc
add
add
mov
add
call
jmp
add
loopne
adc
pushl
add
jno
pushl
ja
jne
add
dec
movb
add
add
decl
aaa
in
and
mov
add
sbb
pop
rolb
mov
and
push
clc
das
cmp
add
jmp
add
inc
add
call
nop
movl
lcall
add
mov
in
movl
stos
bound
decl
add
sbb
jp
or
mov
add
popf
and
call
and
lcall
mov
cmp
addl
cmc
mov
add
stos
jecxz
call
pushl
test
in
adc
add
or
cvtpi2ps
lcall
add
mov
add
cmp
mov
mov
jg
and
decl
add
dec
outsl
inc
add
cwtl
jbe
rolb
xchg
add
fdivs
add
out
cli
rolb
add
or
add
add
jmp
sti
sub
dec
movb
add
add
sub
add
adc
outsb
pop
sbb
dec
mov
add
call
pushl
add
jp
sub
int3
icebp
push
add
lcall
fdivrs
xchg
jl
add
mov
add
and
jmp
add
xchg
jge
add
jno
ljmp
mov
add
add
add
sub
fnstsw
mov
add
outsb
lds
push
add
out
cmpsb
add
add
test
pop
adc
roll
dec
aad
les
test
mov
and
add
inc
add
test
lods
cld
imul
ljmp
xchg
mov
xor
decl
mov
sub
mov
add
adc
pushl
mul
add
mov
lcall
add
fnstsw
xchg
and
jmp
jb
mov
sti
shll
add
pop
cmc
add
addl
and
jmp
add
add
decl
dec
cmp
cmp
sbb
call
inc
add
dec
js
movl
in
movb
add
xchg
in
xchg
inc
add
jo
jmp
call
iret
dec
mov
mov
addb
cmp
rcrl
call
add
inc
add
movsl
add
mov
or
repnz
add
lds
insb
inc
add
dec
mov
movsl
add
stc
icebp
xchg
pop
popf
jo
jmp
mov
add
add
lret
and
lcall
add
add
dec
mov
fimull
dec
leave
data16
mov
add
scas
rdmsr
add
pop
lods
dec
insl
xchg
aas
xchg
addb
sbb
cltd
out
add
push
in
add
pushl
add
sahf
cmpsl
add
add
sbb
fucomi
add
js
add
mov
add
sbb
out
hlt
aam
push
add
cmpsl
add
lret
data16
add
imul
stos
push
add
add
mov
jl
cmpsb
add
movb
rolb
and
jmp
jl
aam
ret
cld
call
or
add
push
add
add
lods
xor
add
fiaddl
add
or
add
sub
add
jo
dec
adc
add
cmp
mov
out
mov
addb
add
jo
push
pop
mov
ds
push
add
xor
lcall
add
dec
mov
add
add
imul
add
xchg
add
dec
repnz
pop
push
aad
add
jmp
add
xor
decl
jge
xchg
in
mov
add
xor
add
cmp
add
sbb
add
scas
push
add
imul
fmull
add
mov
jnp
jg
add
mov
jbe
pop
repz
jge
leave
shrb
cli
addl
jne
std
js
arpl
fdivrl
in
xchg
pop
and
lcall
lcall
add
mov
jmp
add
mov
push
add
in
fwait
lock
pop
jp
inc
add
dec
es
mov
aas
fistps
add
aam
ds
adc
call
jmp
add
movsl
add
cmp
mov
add
into
aad
jl
dec
sub
ja
add
nop
mov
add
add
add
xchg
call
add
lcall
lret
loope
inc
add
movb
add
cs
incl
xchg
stos
imul
cmc
addb
pop
push
outsb
lcall
inc
add
xor
in
sbb
lahf
das
mov
loopne
xchg
mov
dec
call
sub
and
lcall
popf
addl
js
pop
fistps
add
idivl
in
sub
arpl
call
push
cmc
out
or
add
add
add
jmp
add
ret
add
jg
add
and
incl
add
push
add
cld
lea
mov
add
cmp
aad
add
jo
jmp
add
adc
jmp
add
add
les
mov
dec
mov
jmp
pushf
into
pushf
insb
mov
call
add
fdivl
add
mov
xor
inc
add
xor
ljmp
fs
add
lcall
xlat
pop
sbb
add
xchg
lret
add
add
xchg
jnp
add
leave
in
ret
jl
repnz
or
ja
outsl
fistps
inc
add
add
bound
inc
add
push
cmpsl
add
add
lock
mov
in
mov
movb
add
add
adc
call
flds
push
or
add
outsb
jnp
lock
loopne
jns
in
dec
out
add
outsl
fistpl
add
test
add
adc
pushl
imul
add
mov
add
lfs
cmc
enter
sub
cmp
test
jae
jmp
add
js
add
sbb
add
and
jnp
add
das
push
mov
loope
les
roll
decl
or
add
dec
pop
push
rclb
add
addl
out
test
xor
incl
clc
sub
add
enter
add
sub
and
incl
scas
add
add
dec
push
and
add
fldcw
stos
and
test
add
mov
mov
push
add
mov
mov
or
or
add
decl
repz
pushf
inc
add
mov
movb
jp
adc
add
mov
xor
fucomi
dec
mov
aaa
pop
leave
push
mov
pop
mov
add
movsb
add
add
or
and
add
dec
in
mov
inc
add
push
add
mov
test
xor
jmp
xchg
pop
scas
cwtl
das
in
mov
cmp
add
add
sbb
outsb
add
jae
pushl
or
add
into
pop
xor
add
mov
and
mov
pop
and
pushl
mov
add
addb
add
dec
sub
add
aas
mov
mov
pushl
xchg
ja
mov
add
add
inc
add
into
or
add
aaa
cs
add
mov
dec
xor
add
fwait
or
jmp
mov
outsb
daa
add
add
arpl
decl
add
and
lcall
pushf
ret
add
sti
je
add
add
call
gs
pop
add
cwtl
lock
lahf
mov
jae
incl
mov
ljmp
loopne
fsts
pushl
add
jbe
cmp
iret
cmpsl
add
dec
cmpsb
add
add
jns
mov
add
mov
push
mov
add
add
adc
mov
jns
and
sub
add
mov
out
ljmp
add
inc
add
pushf
ss
pop
outsb
call
jmp
mov
mov
add
sub
ret
add
inc
add
jno
lcall
add
adc
jmp
add
xchg
xchg
fwait
and
popa
add
mov
add
sbb
add
add
add
or
push
jns
mov
movsl
add
xchg
sbb
sbb
addl
pusha
add
inc
add
repnz
inc
add
fidivs
push
add
add
jge
add
cmp
add
movsl
add
call
xor
add
mov
add
mov
pop
pushf
addb
add
lock
lahf
cmpsb
add
xlat
rolb
add
dec
dec
xchg
dec
mov
add
add
decl
js
inc
add
mov
loope
xchg
movb
mov
scas
in
mov
adc
ljmp
push
mov
add
out
sahf
out
outsl
cmpsl
add
mov
add
push
sbb
or
ja
add
xchg
mov
add
in
mov
addb
add
dec
jb
ljmp
ljmp
push
cld
sti
xor
call
ret
mov
lret
mov
insb
sbb
sarb
add
xor
aaa
sub
push
aas
mov
mov
lret
pop
pop
inc
add
in
imul
inc
add
add
lret
fsubrl
add
add
mov
add
add
jns
jae
jmp
add
movsl
add
mov
jmp
add
out
or
add
rolb
push
fst
addl
adc
mov
add
and
dec
outsl
pop
in
xchg
lret
add
add
inc
add
xchg
inc
add
or
bound
pushl
je
add
push
and
push
push
fldcw
lcall
push
add
cmp
pop
lds
in
sbb
jmp
add
ja
mov
addl
leave
lcall
aaa
or
je
filds
pushl
add
sbb
mov
lcall
mov
incl
sbb
imul
icebp
ret
add
rolb
push
add
decl
lret
add
out
ret
mov
or
sbb
add
push
add
ljmp
std
sti
or
add
or
pop
je
xchg
sub
add
xchg
xor
lcall
cwtl
push
add
sbb
sub
movb
add
aad
addl
outsb
adc
incl
xor
in
push
add
sbb
xor
pop
push
add
ja
pusha
add
dec
rol
add
add
ss
add
xchg
mov
push
pop
add
cmp
or
call
adc
mov
stos
fsubs
add
movb
adc
in
and
lcall
or
stc
outsb
push
shll
lret
loop
outsl
out
jb
ljmp
xchg
inc
add
mov
les
or
and
jmp
decl
cltd
je
std
lods
mov
add
divb
add
add
jmp
incl
decl
xchg
inc
add
or
add
and
call
lds
lret
xchg
inc
add
cs
icebp
nop
or
and
xor
jmp
add
cmp
add
cmp
add
jg
dec
les
xchg
push
dec
movl
call
inc
add
dec
fwait
insl
fwait
push
lret
sub
push
add
mov
cltd
call
lcall
loopne
push
add
inc
add
cmp
mov
cmp
jbe
inc
add
add
add
ss
mov
scas
push
add
std
or
mov
sub
pop
jno
fistpll
mov
mulps
inc
add
sub
fcoms
add
fmul
add
lcall
add
add
stc
in
das
ss
add
mov
push
movsb
add
jle
add
fbld
add
add
cmp
in
sbb
push
add
daa
add
xor
jmp
lods
xchg
cwtl
cmp
int3
cmp
add
pop
add
add
jg
add
push
add
sahf
jo
pushl
add
in
pushf
repz
sbb
cmp
add
decl
lock
sti
or
add
xchg
sbb
inc
add
mov
call
add
or
mov
push
lcall
les
sahf
mov
clc
mov
pop
pop
loop
lcall
cmc
fwait
in
dec
scas
cmpsb
add
add
out
popa
add
stos
rolb
add
or
add
dec
push
pusha
add
sbb
sbb
imul
mov
addl
pop
xlat
dec
cmp
xor
mov
add
mov
and
and
inc
add
add
inc
add
push
xchg
xor
dec
mov
add
sub
call
test
add
add
lcall
add
fldenv
push
jno
decl
ljmp
dec
dec
daa
add
add
or
in
xchg
lcall
jns
outsb
bound
lcall
xchg
or
add
pop
ss
fisttpll
jmp
pop
add
cmp
add
stc
jge
add
addl
cltd
fsubl
jbe
lret
push
add
mov
test
rcrb
inc
add
xchg
xor
jmp
sbb
data16
xchg
sbb
add
movsb
add
add
or
lds
cltd
je
add
ljmp
add
cmp
fwait
sbb
loope
mov
movb
call
jmp
in
mov
pushl
add
add
incl
add
adc
inc
add
push
add
loop
inc
add
and
pusha
add
shlb
add
dec
add
jmp
cli
mov
add
addb
add
lock
cmp
mov
rorb
mov
inc
add
pop
mov
loopne
pushf
sub
push
stos
loop
sarl
roll
add
jmp
add
mov
loope
cmp
xchg
out
xor
incl
add
repnz
and
sbb
add
loop
addl
repz
add
ficoms
add
hlt
add
dec
pop
out
push
push
xor
aam
pop
sbb
nop
pop
adc
mov
loopne
pop
rolb
adc
pushl
inc
add
add
out
xchg
adc
incl
inc
add
and
dec
roll
daa
add
leave
xor
pop
lret
jo
incl
add
add
add
add
add
add
cmp
add
cmp
jmp
dec
xor
mov
mov
int3
arpl
ljmp
jns
inc
add
add
test
add
add
pop
mov
add
faddl
xchg
add
je,pn
bound
fdivs
addl
xor
ljmp
out
sub
pushl
stc
icebp
cmp
add
mov
movb
push
push
add
mov
add
repnz
test
add
add
call
mov
addr16
add
sbb
add
daa
add
xchg
addb
add
mov
push
add
pop
iret
ds
or
cmc
cmp
cmp
add
testl
jmp
sub
pushl
push
xor
xor
jmp
ljmp
stos
cmp
call
ds
fstps
clc
fbstp
lcall
dec
out
int
aas
and
jmp
add
or
or
pushf
fdivs
ffree
add
add
add
mov
add
xchg
leave
data16
fisttpll
jae
ljmp
imul
test
divl
add
addb
mov
xor
decl
push
fisubrl
add
fnstenv
xlat
addl
enter
add
addl
imul
rcrb
push
add
or
cli
enter
jmp
pop
stos
pop
jg
loopne
dec
xchg
in
add
jmp
add
add
fldz
cmp
add
jmp
mov
comiss
lods
imul
add
jo
decl
jg
add
add
add
jo
call
and
mov
adc
decl
add
dec
into
adc
cmpsl
add
cld
push
pop
cmp
aas
dec
mov
inc
add
aaa
inc
add
out
bound
call
mov
inc
add
add
aas
add
adc
pushl
jns
jae
pushl
inc
add
cmp
addb
add
bound
call
xchg
movb
stos
fwait
aam
add
movsl
add
dec
and
lcall
push
sbb
pop
sub
jg
sahf
mov
je
add
push
addl
pop
ljmp
bound
decl
addb
add
idivl
lret
call
in
xor
lcall
sub
divl
push
in
addb
add
lcall
xlat
dec
shlb
aaa
int
jmp
stc
stos
jbe
pop
insb
dec
cwtl
push
mov
add
cmpsl
add
sub
in
imul
pop
mov
lcall
mov
pop
or
aas
cmp
xchg
lock
xor
incl
xor
add
push
add
hlt
popf
into
xchg
sub
addb
adc
incl
add
mov
add
jge
add
adc
shrb
add
inc
add
add
jp
add
icebp
scas
or
aas
push
call
push
add
enter
insb
ja
add
hlt
ret
add
xor
add
mov
mov
mov
add
add
lea
test
fmuls
add
xchg
les
movl
pushl
mov
int3
aaa
or
add
incl
ja
out
ret
add
adc
cmp
add
adc
movsl
add
add
jbe
divb
add
cmpsb
add
and
jmp
add
add
call
fcoml
into
popl
lcall
and
decl
add
pop
add
jbe
cmp
mov
mov
lahf
jmp
add
push
pop
jb
decl
add
inc
add
add
movsb
add
xchg
addb
xchg
movsb
add
jl
and
dec
xchg
jmp
mov
sahf
jnp
add
jmp
add
sbb
adc
fcoms
add
pop
loop
jp
push
lcall
mov
add
cli
adc
xchg
add
and
lcall
mov
cmp
pop
daa
add
add
stos
dec
xchg
sbb
or
add
add
lcall
je
cmp
ljmp
add
adc
jmp
add
mov
pop
ljmp
ljmp
mov
ficomps
add
xlat
push
fidivl
xchg
out
icebp
and
cmp
add
dec
cmpsl
add
mov
out
and
call
fdivs
call
add
sti
push
add
jmp
add
push
mov
mov
add
add
decl
or
fwait
mov
add
call
push
mov
add
call
add
incl
mov
xchg
sbb
imul
lds
ss
in
into
xchg
pop
jae
jmp
sahf
or
or
add
add
imul
mov
sbb
add
xchg
sub
leave
or
xchg
or
lret
add
into
insl
fstl
decl
add
and
adc
inc
add
add
fsubrp
mov
pop
dec
dec
mov
dec
fbld
data16
and
decl
adc
jnp
add
lret
stos
pop
out
in
ret
add
jmp
add
add
adc
jmp
add
jmp
mov
imul
dec
jle
add
jmp
add
xchg
xchg
in
mov
add
add
inc
add
add
adc
pushl
add
addl
sarb
pop
mov
jg
sbb
mov
fildll
mov
add
cwtl
jo
in
in
push
inc
add
lahf
mov
push
add
sbb
sub
imul
shr
xor
lcall
add
fdivs
ficompl
cmpsb
add
or
popa
add
mov
or
sbb
add
ds
je
mov
ds
add
popa
add
movsl
add
mov
add
xlat
daa
add
xlat
aas
test
add
cmc
mov
idivb
scas
push
insb
roll
daa
add
fcompl
iret
mov
jge
add
add
arpl
incl
add
cmp
push
ljmp
arpl
ljmp
ljmp
add
leave
mov
pop
push
add
mov
adc
add
cmp
mov
cld
dec
cli
rcr
xchg
mov
inc
add
mov
add
cli
loopne
pop
cs
mov
add
mov
adc
incl
inc
add
mov
loope
push
add
add
cmp
dec
inc
add
sub
add
lcall
inc
add
add
mov
adc
in
lds
inc
add
sbb
inc
add
add
mov
jmp
add
add
mov
jb
ljmp
inc
add
iret
inc
add
add
add
or
pop
add
cltd
aas
imul
add
loop
push
repnz
add
pushl
mov
ja
jae
push
lret
call
daa
add
iret
lods
nop
fwait
lcall
rolb
add
ljmp
ljmp
add
add
mov
add
aaa
mov
sbb
aas
and
inc
add
jno
jmp
dec
sbb
or
cwtl
or
loop
inc
add
add
sahf
js
add
nop
addb
in
das
in
movb
test
add
or
add
popa
add
lcall
cwtl
mov
add
call
add
ljmp
ror
test
jno
ljmp
add
fisttps
movsl
add
add
add
ljmp
fwait
and
add
insb
or
pushl
jmp
add
lret
addb
inc
add
sub
cmp
add
add
pushl
pushf
xor
incl
incl
jecxz
sub
add
add
add
xchg
sbb
je
xor
mov
cld
jmp
jmp
add
mov
pop
sub
mov
mov
xchg
sub
mov
mov
add
mov
data16
pushf
mov
xor
add
and
inc
add
add
jmp
add
xchg
xchg
or
dec
cli
push
pusha
add
pop
inc
add
add
pop
pop
and
call
pop
lcall
dec
in
inc
add
out
pop
add
cli
js
mov
lcall
and
roll
aas
xor
add
insb
push
add
das
addl
es
add
pushl
leave
out
cwtl
pop
outsl
lock
add
jne
inc
add
add
insl
shlb
add
mov
pushl
nop
das
daa
add
add
cld
ja
add
add
xchg
mov
cltd
notl
add
add
pop
adc
mov
jnp
adc
pushl
lods
mov
add
xor
sub
in
les
out
dec
sub
sub
add
out
hlt
push
jmp
add
jl
stos
lods
bswap
insl
cmc
movsl
add
std
addl
fidivs
pushl
lods
jp
imul
js
repnz
dec
rolb
jl
add
movsb
add
decl
push
add
mov
mov
dec
lods
clc
add
jmp
add
pop
mov
out
jg
add
add
incl
aas
loopne
dec
call
insb
push
add
lock
add
lea
pop
add
add
rcrb
ret
add
lcall
add
repz
add
push
stos
sub
add
iret
push
cs
xor
dec
or
movsb
add
cmp
add
popa
add
and
and
lcall
push
add
aam
xor
stc
push
iret
call
mov
mov
add
add
arpl
jmp
add
jl
pop
daa
add
cld
call
mov
sbb
ret
add
mov
mov
jp
xor
add
int
mov
or
adc
jmp
add
add
decl
add
add
call
enter
mov
and
in
nop
fcoms
cmp
add
test
insl
mov
add
sbb
add
add
ljmp
adc
inc
add
fucomip
ds
inc
add
adc
add
mov
dec
dec
addb
mov
lret
push
sahf
ffreep
add
mov
or
movsl
add
add
xlat
mov
add
jle
pop
inc
add
data16
mov
sti
jle
xlat
push
mov
add
outsl
and
jmp
add
add
push
inc
add
add
inc
add
dec
push
adc
or
cmp
bound
dec
pop
inc
add
or
incl
cld
jg
push
sahf
movb
arpl
call
fstpl
add
jmp
sub
jecxz
dec
add
lcall
bt
xor
mov
push
add
shrl
add
lcall
jp
and
call
and
fnstenv
push
cmpsl
add
div
mov
int3
adc
incl
std
xlat
mov
pushf
add
call
ljmp
das
dec
mov
test
add
pop
add
ljmp
add
and
dec
ljmp
lea
inc
add
add
leave
mov
sbb
lea
add
cltd
xchg
mov
cs
addl
addb
call
pusha
add
mov
sub
inc
add
mov
add
je
push
add
cmp
add
call
jmp
add
add
pop
push
pop
sbb
int
bound
decl
add
call
add
call
xchg
out
inc
add
add
jbe
mov
roll
pushl
les
or
pop
cmpsb
add
add
add
adc
lcall
aad
push
and
mov
cmp
add
mov
add
push
out
mov
lock
or
pusha
add
xchg
fldenv
lcall
addl
scas
out
push
push
jecxz
cli
icebp
inc
add
enter
popf
loop
mov
cmc
dec
repnz
or
add
mov
jg
push
add
ret
add
cmp
call
add
add
hlt
lret
xchg
clc
test
cmpsb
add
roll
add
fistpll
add
filds
add
sub
pushl
add
enter
sti
xchg
movsl
add
ret
mov
push
add
mov
add
fcoml
int
add
addl
ljmp
jns
add
std
pop
add
insl
rolb
pop
pop
fcmovnu
pushf
popl
incl
call
lahf
addb
in
push
add
lret
stc
jb
pushl
cmp
pop
ja
push
jecxz
adc
pushl
mov
decl
mov
add
xor
jmp
add
movsl
add
mov
movsb
add
and
inc
add
add
add
out
cmpsb
add
and
incl
int
shlb
adc
pushl
sbb
add
mov
add
lcall
rolb
push
fldl
out
cmc
push
add
sub
addb
dec
mov
test
xchg
cld
scas
xchg
mov
movsb
add
imul
add
add
sub
xchg
mov
xor
out
in
cld
sahf
add
addb
add
flds
push
xor
mov
movsl
add
add
add
add
addl
add
jns
add
add
ja
mov
pop
xor
cs
or
ja
iret
sbb
out
or
add
lods
and
jmp
repz
call
add
push
add
push
iret
lods
je
lock
add
aad
cwtl
fwait
je
push
add
dec
clc
jecxz
jg
scas
lcall
add
pop
lea
xchg
stos
cmp
add
hlt
push
and
dec
mov
cmp
jg
fsubrs
add
pop
add
faddl
xchg
and
jmp
add
jecxz
aad
and
lcall
mov
fwait
inc
add
xchg
push
jbe
inc
add
add
cmp
lcall
cmp
test
inc
add
arpl
jmp
add
add
and
incl
mov
add
mov
cmp
ljmp
movsl
add
cmp
in
cmp
pushl
and
lret
iret
jge
stc
adc
lcall
jb
ljmp
xor
pushl
mov
ja
imul
call
add
cmp
cld
jb
pushl
or
add
rorl
xor
incl
decl
lods
inc
add
add
add
jmp
shlb
in
inc
add
imul
sub
sbb
jbe
add
cmpsl
add
push
popa
add
dec
movsb
add
push
add
jo
decl
mov
idiv
push
xchg
inc
add
call
jp
sbb
add
addl
in
hlt
rclb
cmpsl
add
sbb
mov
add
cld
cld
mov
mov
pop
and
ljmp
movsl
add
hlt
push
lds
popl
add
add
mov
add
insl
sbb
push
mov
xor
mov
dec
jne
pop
add
jne
xor
add
nop
data16
cli
cltd
mov
std
ljmp
mov
movsl
add
xchg
jp
lods
xchg
xchg
jge
add
js
jno
push
sub
adc
add
jno
ljmp
add
cmpsb
add
add
or
std
xor
lcall
jecxz
pop
jl
add
push
push
insl
mov
add
arpl
incl
sub
pop
mov
movb
mov
add
jmp
add
add
jnp
add
and
call
les
mov
jge
add
cmp
cmovg
mov
add
hlt
cli
dec
or
jge
jp
mov
ljmp
add
fsubrs
add
or
mov
add
add
lahf
inc
add
pop
in
icebp
push
add
in
scas
and
inc
add
incl
jmp
add
add
call
add
and
lcall
test
jno
add
dec
add
adc
call
xor
inc
add
mov
jmp
add
mov
call
inc
add
lods
xchg
xchg
dec
movsb
add
mov
add
add
sbb
mov
addl
dec
arpl
jmp
add
les
xlat
xor
ljmp
add
xchg
dec
mov
add
loopne
enter
add
and
leave
jge
pop
lods
inc
add
push
add
xchg
inc
add
aam
add
mov
lods
ret
mov
ljmp
mov
add
sub
stos
push
iret
div
imul
add
into
addl
adc
cmp
test
hlt
push
in
sahf
mov
add
or
add
aad
inc
add
stc
inc
add
jmp
add
out
and
jmp
add
add
cmp
roll
add
cmp
cld
les
fldt
cmc
lods
pop
add
push
mov
add
cmp
add
arpl
decl
aas
stos
xor
jmp
incl
add
add
pushl
pushl
mov
mov
or
add
or
call
add
lret
dec
imul
pop
js
test
mov
push
add
pop
cmp
cwtl
xor
ljmp
add
rolb
nop
inc
add
clc
adc
cld
je
in
lahf
ret
add
and
adc
inc
add
in
jns
sub
dec
xor
decl
aam
add
fsubr
xchg
xor
decl
nop
fcompl
incb
pushl
addl
xchg
test
ja
pop
les
dec
xchg
mov
add
add
in
dec
data16
decl
idivl
fsubl
add
add
add
out
mov
fnstcw
aam
push
add
adc
dec
pop
mov
add
mov
or
ja
xor
cmpsl
add
or
add
addb
mov
add
jecxz
add
mov
add
pop
ds
lea
dec
fstpl
add
dec
jae
clc
mov
lcall
je
add
pop
mov
lods
and
decl
cmp
incl
mov
add
lcall
xor
and
pushl
add
add
push
push
movsl
add
mov
sub
js
add
and
incl
add
addl
pushf
add
mov
push
popa
add
out
ja
movlps
ljmp
sbb
push
add
enter
dec
iret
push
add
mov
imul
jne
and
call
sbb
add
cmp
add
push
add
xor
xor
decl
mov
test
dec
adc
lcall
add
inc
add
int3
popa
add
mov
decl
loopne
ret
add
add
xor
incl
ljmp
add
movb
mov
inc
add
add
in
mov
add
iret
shr
rolb
add
int3
jo
jl
pop
inc
add
pushl
in
add
push
push
aad
adc
xor
cmp
jecxz
movsb
add
in
scas
loope
mov
movsl
add
add
scas
xchg
push
add
lods
movsb
add
xchg
out
addl
mov
bound
incl
jmp
add
stc
out
popa
add
push
sti
sti
xchg
adc
mov
mov
cmp
push
in
lea
mov
add
cwtl
mov
or
add
add
xchg
dec
mov
push
rolb
rolb
sahf
add
call
sub
jns
push
pop
and
mov
ss
test
insb
adc
add
add
fidivl
add
es
add
decl
and
jg
popf
push
and
decb
add
decl
add
roll
popa
add
divb
add
repz
adc
push
mov
cld
push
add
mov
rolb
call
dec
xchg
out
clc
test
add
lods
popf
mov
movsl
add
pop
add
add
mov
outsb
or
pushl
jmp
add
jns
xchg
int
add
and
jmp
mov
add
mov
call
call
inc
add
add
fnstcw
sbb
aas
ficompl
and
popa
add
repnz
add
mov
lock
push
add
mov
push
add
nop
sbb
add
ja
pusha
add
or
add
xchg
jmp
imul
or
xchg
mov
add
cmp
std
inc
add
jmp
pushl
and
pushl
add
xor
inc
add
mov
add
pushl
data16
add
stc
fdivs
add
pusha
add
mov
into
mov
rolb
fs
xchg
adc
push
outsl
sub
add
add
jecxz
cli
mov
sbb
and
call
outsl
int
enter
les
fs
pop
imul
or
push
add
push
imul
adc
push
adc
xor
imul
movswl
add
ds
add
push
add
mov
dec
iret
cwtl
pushf
jp
icebp
xor
mov
mov
les
in
mov
enter
add
mov
add
pop
xchg
inc
add
and
ljmp
cmpsl
add
int
ficomps
pushf
cmc
jg
stos
cltd
xor
ss
add
incl
add
lcall
notb
add
or
add
fisubs
addb
icebp
stc
cltd
stos
ret
add
mov
add
add
add
push
out
mov
and
decl
mov
stos
jg
add
pop
jne
add
add
or
jmp
add
add
xchg
adc
cmp
je
insb
dec
movsl
add
fs
or
add
mov
mov
pop
in
pop
iret
xchg
add
incl
call
dec
daa
add
decl
mov
add
xor
add
ljmp
lret
add
data16
add
test
xchg
lret
mov
mov
add
daa
add
add
into
mov
add
jno
pushl
inc
add
aaa
out
jg
sub
push
cmp
add
add
sahf
addb
add
jge
adc
decl
fsub
add
add
xor
movl
cmp
in
jns
push
sub
add
ss
add
or
lret
out
sub
in
inc
add
add
rolb
add
fsts
add
sbb
pop
mov
sub
rolb
add
inc
add
out
add
inc
add
ds
add
add
fmull
add
imul
push
dec
ds
gs
add
add
push
add
mov
mov
add
pop
sub
and
jmp
jmp
add
xlat
or
add
add
mov
add
lcall
fcoms
add
arpl
inc
add
imul
jmp
mov
fwait
std
hlt
outsb
popf
les
sbb
aad
cltd
adc
lahf
sub
mov
pushl
and
lcall
lcall
lcall
add
addl
cmp
pop
jmp
xchg
out
xor
in
xchg
dec
and
jmp
add
add
xchg
jmp
inc
add
push
mov
inc
add
add
add
mov
imul
cltd
pusha
add
outsb
repz
inc
add
mov
add
incl
add
jmp
xchg
jge
add
adc
dec
sub
add
imul
add
scas
das
cld
std
inc
add
lcall
add
cltd
and
add
pushl
pop
enter
cs
push
add
nop
or
add
add
inc
add
shrb
popf
mov
incl
loopne
dec
fiaddl
ljmp
cmp
fcos
pop
icebp
push
mov
lods
hlt
movb
mov
mov
xor
decl
insl
shlb
in
xor
dec
pushl
push
jbe
les
xor
lcall
arpl
incl
cmp
add
add
adc
mov
shl
add
or
mov
mov
or
jne
iret
pop
ja
add
pushf
jae
stc
out
inc
add
repnz
mov
pusha
add
adc
ljmp
jl
cld
mov
aaa
pop
das
ret
cmp
out
mov
jp
add
incl
xor
add
lods
inc
add
pop
cs
add
gs
mov
and
mov
fdivs
pinsrw
loop
mov
add
outsb
pop
cmpsl
add
add
inc
add
lcall
add
sbb
mov
leave
push
add
ret
add
ret
add
jmp
add
mov
mov
lret
or
or
std
xchg
or
add
sti
xor
inc
add
push
add
xor
lcall
popf
repz
cld
mov
lds
mov
add
call
cmp
sbb
addl
mov
mov
jbe
add
mov
mov
sub
push
lret
push
sub
incl
add
cmp
call
pop
jmp
fs
add
add
nop
and
jp
push
out
and
lcall
add
add
add
add
test
movsl
add
add
mov
cmpsb
add
loope
repz
add
push
fiadds
add
lods
sbb
pop
rorl
add
cli
iret
mov
dec
fiadds
add
sbb
pop
pusha
add
sbb
fistpll
add
inc
add
data16
xor
or
mov
add
fdivrs
inc
add
add
sahf
and
ljmp
pop
jp
lret
repnz
cmpsl
add
add
add
add
add
jbe
je
aad
xor
lcall
movl
dec
inc
add
jecxz
mov
mov
add
mov
xchg
cmp
jmp
sbb
mov
xchg
jl
or
sbb
add
mov
xchg
out
ss
sub
cmp
nop
mov
daa
add
test
mov
je
add
mov
add
loopne
in
jne
add
addb
mov
add
push
add
add
shll
dec
jp
xchg
pop
iret
out
leave
aam
push
add
pusha
add
add
xor
decl
jae
jmp
jne
xor
add
mov
dec
bound
call
add
lcall
jns
fsubp
add
add
add
leave
dec
cs
shll
decl
add
jge
sub
shr
lret
pushl
adc
dec
pop
mov
pop
add
add
pushl
cmp
pushl
incl
in
popa
add
add
decl
mov
cmp
jle
jg
add
push
add
or
mov
adc
lcall
mov
ljmp
in
xor
lcall
adc
decl
adc
call
pop
push
cmp
lcall
je
rolb
fwait
or
add
in
data16
xchg
mov
jo
jmp
add
data16
gs
push
add
add
dec
sbb
add
pusha
add
jp
cmp
dec
inc
add
mov
movb
add
out
mov
mov
add
add
addl
mov
test
jmp
sub
int3
mov
pop
loopne
xchg
xchg
movsb
add
push
sub
lcall
add
sar
dec
dec
push
sarb
or
jno
pushl
jae
pushl
cltd
sbb
add
pushl
jmp
adc
mov
sbb
add
lea
dec
jmp
mov
scas
push
add
pusha
add
lret
jmp
sbb
adc
decl
push
jne
mov
add
mov
sub
add
negl
add
dec
xchg
gs
inc
add
add
in
and
decl
jge
push
push
cmp
jne
push
bound
push
fwait
dec
or
rolb
stc
aad
add
push
add
xchg
ja
cld
mov
imul
add
dec
mov
addl
sub
add
cmpsl
add
sub
xchg
outsl
fsubl
call
mov
add
ficompl
dec
test
int
add
call
ljmp
enter
sbb
xchg
movsb
add
jnp
add
push
cwtl
out
xchg
mov
add
fadds
lock
add
icebp
sub
fcomps
or
outsb
xchg
add
call
int3
cli
jecxz
mov
imul
add
cmpsb
add
sti
mov
adc
dec
or
mov
jecxz
mov
jbe
out
sbb
cwtl
mov
decl
sub
js
cmp
cli
and
adc
sti
push
add
and
mov
pop
add
add
clc
add
dec
decb
add
in
adc
or
and
out
dec
and
push
push
repz
mov
add
jmp
shll
incl
add
sub
fchs
add
add
inc
add
movl
mov
test
cmpsl
add
movsb
add
push
add
stos
out
data16
je
add
std
mov
popf
jmp
incl
add
mov
inc
add
jbe
add
add
std
pop
movsl
add
add
mov
add
fdivp
push
daa
add
jle
add
mov
add
add
mov
addb
lahf
pop
add
add
xchg
jne
add
clc
cs
movl
add
push
add
mov
add
add
scas
stos
push
push
pushf
ffreep
add
ja
add
fdivr
and
decl
sbb
sti
clc
xor
jp
push
add
call
and
movl
mov
dec
filds
add
popl
add
insb
scas
push
add
mov
in
stc
jb
decl
loop
jmp
add
add
and
jle
add
sbb
cmp
into
mov
call
add
aad
add
add
loopne
adc
jmp
cmp
push
xchg
out
les
inc
add
add
movsb
add
decl
xchg
sti
pop
sbb
add
test
js
add
or
jp
jo
inc
add
or
push
jno
decl
add
and
decl
cli
fiaddl
add
push
popa
add
jno
lcall
add
xchg
loope
dec
and
jns
je
out
out
insl
scas
inc
add
in
xor
ljmp
popf
movsb
add
pop
add
jmp
or
add
decl
push
lahf
insb
movb
add
push
add
lahf
clc
push
add
pop
dec
mov
add
add
cld
aaa
mov
decl
in
or
or
rolb
out
mov
and
call
out
dec
sahf
mov
add
push
add
inc
add
or
fstps
mov
add
out
push
lock
int3
push
fwait
popf
xchg
movsb
add
push
add
lcall
bound
decl
call
mov
add
push
ja
add
pushl
add
mov
aas
in
mov
add
pop
inc
add
or
add
stos
call
add
stc
pop
loopne
mov
test
add
add
cmp
add
mov
cltd
shl
xchg
sub
sub
int
mov
add
dec
or
add
add
das
xlat
shlb
add
sub
decl
add
push
insl
adc
ljmp
add
mov
fsub
add
xor
add
mov
mov
add
sub
xor
incl
add
dec
roll
lret
leave
or
add
in
mov
add
cmpsb
add
add
xor
add
inc
add
jnp
jl
cmc
mov
fisttps
xor
pushl
incl
add
or
sbb
fcoml
add
add
sbb
jge
add
pushl
js
adc
test
lods
movsb
add
shrl
add
ljmp
push
jg
test
cmovo
ljmp
push
in
stc
lds
mov
inc
add
sub
test
xchg
jns
sbb
sbb
imul
imul
add
mov
add
xchg
xor
add
ds
add
mov
sub
jne
nop
test
ret
add
fsub
add
xor
ljmp
movb
dec
push
rolb
add
xchg
cmp
pop
mov
add
xchg
cmp
loopne
sbb
rcrl
mov
or
dec
add
ljmp
lcall
jmp
dec
ret
add
addl
les
mov
add
add
inc
add
sbb
and
dec
addl
addl
add
add
mov
add
cmp
daa
add
jecxz
mov
xchg
iret
push
add
sbb
cmpsl
add
add
sub
in
mov
sub
cmp
out
and
cmp
add
mov
add
pop
lahf
lahf
or
decl
push
pop
xlat
push
add
pushf
daa
add
add
and
add
cmpsb
add
add
cmpsb
add
xchg
or
xlat
sub
push
add
adc
incl
jnp
shrb
leave
cmp
imul
fisubrs
xchg
pop
bound
decl
in
jbe
add
xor
jae
call
add
in
mov
ficomps
add
add
ljmp
aas
pop
mov
in
out
movl
lods
xor
ljmp
sahf
lret
jl
stos
mov
insl
xor
cmp
lea
mov
addl
add
in
sti
mov
jnp
in
fimull
add
pushf
xchg
arpl
call
rolb
jmp
decl
ljmp
adc
decl
add
daa
add
add
jl
daa
add
add
sub
add
popl
pop
add
lcall
ja
enter
add
pop
xchg
pop
call
leave
fiadds
lcall
rcll
out
add
loop
push
jmp
add
lahf
imul
xchg
push
add
add
add
add
add
mov
dec
mov
add
loop
hlt
ficomps
mov
sbb
add
add
sbb
push
std
xchg
jnp
cli
push
add
std
das
stos
inc
add
fcmovnb
add
add
bnd
lcall
add
sub
add
jmp
jmp
call
add
push
or
add
dec
test
icebp
pop
sub
add
fisttpll
rcll
add
testl
into
rcll
add
int3
es
pop
in
stos
add
add
roll
add
mov
sub
lcall
imul
add
pushf
lcall
add
shr
cmp
mov
or
add
fists
daa
add
call
add
pushf
imul
pusha
add
ljmp
les
mov
push
pop
dec
ret
arpl
jmp
cmp
add
push
addr16
add
mov
push
add
decl
lcall
xor
jmp
repz
enter
xor
decl
cmp
push
add
movsb
add
add
test
add
rorb
cmpsb
add
aas
cmp
push
mov
sbb
adc
pop
inc
add
push
add
out
xchg
push
mov
add
xchg
pop
je
pop
imul
out
in
add
inc
add
adc
incl
add
add
add
rclb
repz
rorl
add
add
inc
add
add
add
mov
and
gs
add
xor
ljmp
das
aad
mov
or
jno
lcall
push
add
mov
or
add
call
addl
fwait
insb
in
movsl
add
adc
inc
add
push
add
cmpsb
add
jge
and
mov
addr16
mov
incl
decl
add
enter
dec
int3
xchg
mov
shr
flds
add
int
pop
dec
xlat
add
add
add
lods
cs
add
roll
arpl
ljmp
lahf
aad
insl
cmpsl
add
add
mov
and
incl
add
add
add
popf
movl
cmpsl
add
iret
pop
add
xchg
loopne
xlat
inc
add
jp
outsb
cmp
add
add
add
into
movb
push
add
in
inc
add
jl
lcall
mov
add
mov
in
pop
inc
add
rclb
add
push
addb
add
nop
inc
add
xchg
es
cmpsb
add
xchg
in
fstl
ljmp
pop
mov
add
add
push
add
icebp
jecxz
push
add
in
nop
cmp
add
mull
add
pop
inc
add
add
pusha
add
adc
jmp
add
fistpl
add
fbld
mov
inc
add
jp
cmpsl
add
in
add
lcall
fdivrl
pushf
adc
ljmp
repz
adc
decl
sub
mov
addb
push
add
sbb
mov
imul
add
xlat
aas
add
incl
decl
call
ljmp
add
add
adc
jmp
add
jge
sub
pop
aad
or
bound
incl
add
mov
or
add
in
scas
stos
add
call
mov
add
fisttpll
xlat
addb
add
fidivl
add
decl
add
xor
fcoms
cli
lods
mov
daa
add
outsb
sbb
adc
add
lcall
add
repz
add
aas
xor
ljmp
jmp
add
ret
add
addl
add
mov
hlt
fists
sarb
mov
cmp
push
add
adc
jmp
add
add
or
into
push
dec
lock
add
imul
aam
shll
call
std
mov
add
add
xor
lods
mov
add
mov
or
add
jae
call
dec
pop
pop
cld
mulb
add
or
loopne
outsb
ljmp
jecxz
jp
fsubrs
fidivrs
pop
dec
and
push
idivl
pop
in
in
insb
or
add
jp
fwait
sbb
and
lcall
les
xlat
jecxz
xchg
fcomp
jno
fisttps
call
pop
fadds
xor
jmp
sbb
cmp
addb
test
cmp
jns
add
add
fimuls
pop
sub
add
les
cmp
dec
movb
cmpsb
add
data16
add
push
add
clc
outsb
sbb
add
arpl
ljmp
add
call
add
push
int3
pop
sbb
pop
dec
xchg
sti
jl
dec
loope
xchg
mov
in
add
jno
incl
add
add
test
lds
lcall
xchg
push
add
jge
mov
pop
idivb
or
add
sub
add
add
mov
add
fwait
hlt
int3
ja
add
addl
das
data16
add
pushf
add
incl
aas
movb
xor
fsubs
adc
decl
mov
ja
add
or
incl
mov
cltd
jmp
adc
cmp
sub
incl
fmull
add
push
lahf
popa
add
mov
add
add
pop
mov
loope
xor
decl
call
in
jge
add
jno
decl
add
lret
cs
add
pushl
add
addb
insl
cs
adc
call
lcall
jge
addl
add
add
adc
pushl
add
add
movsb
add
lcall
sub
sahf
push
mov
mov
adc
add
test
in
fistl
decl
sub
add
fiadds
cmp
stos
shll
add
addr16
or
add
imul
mov
movsb
add
scas
stc
imul
and
decl
mov
nop
iret
pop
xchg
add
mov
jbe
pop
mov
mov
mov
xchg
and
lcall
cltd
pop
into
cwtl
dec
mov
ds
addl
dec
in
sub
xor
add
add
jb
lcall
mov
jmp
ljmp
add
cmp
and
call
out
sbb
add
add
sub
sbb
pop
pop
mov
add
call
mov
inc
add
add
lcall
ds
add
mov
pop
push
mov
inc
add
add
mov
stc
popf
sar
jae
pushl
dec
movl
out
cmp
add
adc
incl
add
xchg
addl
inc
add
mov
jecxz
mov
xor
jmp
add
test
push
push
add
xor
jmp
fisubl
movl
cmp
sub
aaa
rorl
adc
pushl
add
mov
sahf
out
xchg
mov
push
loope
xlat
sbb
jle
movsb
add
add
jg
push
lods
test
jg
add
sub
add
mov
add
jno
jmp
ret
add
incl
fistpl
icebp
xchg
mov
call
addb
addb
int
add
pop
add
push
popf
imul
bound
lcall
add
jno
ljmp
mov
add
push
inc
add
xor
cmp
jecxz
inc
add
add
movl
add
call
pop
call
adc
pushl
lahf
in
xlat
inc
add
sbb
pusha
add
pop
inc
add
add
sbb
jmp
add
call
inc
add
xor
call
mov
roll
aaa
out
ret
cld
jge
add
imul
gs
add
mov
add
jmp
add
jb
jmp
test
pusha
add
cmc
ret
mov
addb
add
push
add
fnstenv
pushl
add
dec
jge
add
add
add
je
dec
movl
add
push
add
ret
add
add
imulb
ljmp
lret
mov
inc
add
loope
bound
cld
or
push
outsl
mov
scas
mov
xchg
push
xchg
rol
add
loopne
fsts
push
add
mov
add
sub
aas
push
push
lcall
clc
out
push
add
lahf
fwait
mov
add
mov
mov
inc
add
arpl
inc
add
std
addb
add
clc
imul
jmp
jge
add
add
cmp
loope
dec
xchg
adc
pushl
add
fidivrl
lahf
jecxz
push
add
add
sbb
add
inc
add
jmp
add
push
jne
xchg
push
add
inc
add
dec
hlt
push
add
and
push
xchg
loopne
mov
add
incl
mov
add
mov
push
les
imul
mov
js
fldenv
call
pushl
xchg
insl
or
add
cmc
mov
add
add
add
loopne
addl
xchg
fisttps
movb
lret
push
sub
enter
imul
int
add
add
add
xor
call
add
add
scas
lods
and
add
add
test
or
add
add
decl
fidivrs
cvttps2pi
add
adc
push
rol
add
sbb
mov
mov
call
lcall
cmp
add
leave
roll
or
enter
outsl
cld
mov
incl
ret
add
jecxz
add
jle
jle
test
decl
add
dec
or
jmp
add
mov
add
add
add
and
lcall
sbb
pushl
pusha
add
add
incl
inc
add
lret
dec
mov
mov
out
add
or
add
xchg
mov
cmpsl
add
add
enter
call
sbb
add
mov
mov
dec
ret
add
or
add
incl
add
mov
cmp
add
in
or
shl
add
add
fldenv
fisubrs
xchg
jle
fwait
lds
cs
mov
add
jmp
add
bound
call
pop
mov
jmp
add
add
mov
and
ljmp
gs
add
add
jmp
addl
mov
add
or
mov
push
add
jae
ljmp
add
cmp
mov
scas
pop
mov
out
in
mov
ss
sbb
push
add
add
add
xor
call
add
in
push
pminub
push
enter
add
clc
lcall
xlat
push
mov
add
lods
mov
in
jge
jge
pop
imul
add
dec
fistl
push
cwtl
ffreep
add
add
add
hlt
fsts
add
or
jecxz
add
add
push
add
xchg
test
xchg
out
sub
bound
pushl
add
or
add
jmp
movl
jnp
jbe
xchg
clc
add
outsb
dec
adc
call
pop
mulb
imul
push
jp
push
add
xor
ljmp
enter
and
jmp
add
xor
lcall
mov
add
jmp
add
ljmp
xlat
mov
add
notb
pushl
add
dec
sub
add
push
xor
lcall
push
add
add
mov
lret
add
jge
ret
int
cmp
cld
arpl
ljmp
add
lret
frstor
jmp
call
roll
push
xchg
xor
je
les
cmpsb
add
decl
movl
aas
std
inc
add
jne
aam
jge
add
cmp
sub
add
add
jle
or
mov
add
cli
in
jae
call
test
mov
inc
add
in
inc
add
xchg
cltd
pop
out
adc
push
sub
push
inc
add
ljmp
add
mov
jg
rsm
lret
push
and
ljmp
add
add
fldl
incl
jle
ret
add
push
mov
cmpsl
add
add
movsb
add
add
cmp
loop
cld
out
addl
add
add
add
fwait
adc
in
mov
add
pushl
adc
jmp
xor
incl
jns
mov
add
cmp
scas
pop
xchg
mov
pushl
add
addb
sbb
add
in
data16
add
addl
xor
incl
add
push
dec
add
pushl
push
dec
or
xor
mov
in
ret
daa
add
add
jmp
add
test
cmp
ss
lret
add
fwait
pop
ljmp
add
je
push
or
add
es
add
add
cld
daa
add
add
add
dec
outsl
nop
lods
dec
sub
shlb
xor
call
add
dec
aad
add
daa
add
mov
add
dec
stc
fwait
mov
inc
add
outsb
pop
inc
add
xor
lcall
add
add
mov
add
jle
xchg
inc
add
or
lcall
add
add
lcall
xchg
cmp
movl
xor
stos
add
negl
ja
call
lahf
rolb
int
add
jmp
push
cmp
mov
push
enter
xchg
sbb
add
xor
pushl
add
cmp
add
xchg
cld
xor
jmp
pusha
add
adc
lcall
test
in
ret
add
add
or
jb
inc
add
cmpsb
add
lcall
adc
decl
scas
and
call
and
decl
stos
jbe
ds
jl
insl
stos
faddl
add
jle
inc
add
add
xchg
inc
add
add
call
add
adc
ljmp
add
add
mov
pop
sbb
decl
add
fisubs
add
add
add
incl
test
test
push
add
sbb
inc
add
rcrl
xchg
xchg
popf
in
add
mov
and
test
add
jmp
add
mov
jmp
movsl
add
dec
pop
dec
int
ja
add
push
add
call
mov
adc
incl
push
loop
mov
shlb
mov
test
imul
and
push
inc
add
jne
rolb
add
pop
cmp
sub
add
add
movsl
add
sub
add
add
dec
fdivrs
mulb
add
mov
shlb
add
ja
add
add
cli
stos
outsb
lahf
xor
incl
cs
add
jns
add
add
lret
push
pop
or
push
lods
or
incl
inc
add
add
xchg
cmp
add
in
cmp
add
jne
out
scas
cmpsl
add
jp
inc
add
jmp
pop
xor
mov
rorl
add
xchg
stc
cmp
add
add
jg
mov
add
and
pushl
cmpsb
add
imul
roll
call
push
mov
inc
add
sbb
and
jmp
out
mov
addl
pop
push
add
lret
call
jmp
fucomip
or
add
adc
call
sbb
mov
mov
add
test
xor
cmp
add
jo
decl
add
jno
pushl
jno
pushl
jb
lcall
add
outsl
sub
mov
add
cmp
add
mov
cs
add
add
out
sahf
and
lcall
adc
dec
test
or
sar
add
loopne
cmpsb
add
add
or
add
jge
add
push
add
jb
ljmp
lea
cmp
add
dec
push
add
add
ret
jle
push
add
lahf
decb
loopne
aas
jno
aas
ret
add
add
sub
sub
mov
xchg
cmpsb
add
xchg
and
decl
fsubrs
sahf
mov
lods
push
mov
jmp
add
add
dec
push
pop
jmp
decl
pop
dec
xor
pushl
stos
test
std
push
sub
cwtl
sub
jno
pushl
call
adc
pushl
add
add
add
jbe
mov
xchg
mov
in
jecxz
pop
add
incl
add
aam
sub
add
add
js
add
add
popa
add
movsl
add
add
add
incl
xor
cld
std
jmp
add
cmp
test
xchg
add
decl
ss
mov
mov
rcr
and
ljmp
loope
mov
add
cmpsl
add
rorl
rolb
xchg
mov
sar
push
cwtl
imul
add
movsl
add
add
mov
cwtl
pushf
mov
add
pop
fmul
jae
decl
xor
jge
int3
jmp
loopne
loope
pop
sbb
dec
insl
out
inc
add
xchg
jo
call
push
mov
mov
add
lret
pop
movb
out
cmp
add
cmp
or
jbe
add
xor
cmp
add
push
add
sub
adc
decl
adc
call
icebp
in
adc
fisubl
jp
fadd
add
push
in
jne
aad
iret
adc
jmp
pushl
dec
push
add
xor
call
mov
mov
movsl
add
jmp
mov
push
sti
cli
ret
add
xchg
pop
cltd
mov
xchg
jbe
add
cltd
enter
add
xchg
mov
or
add
sub
add
call
je
popf
mov
mov
inc
add
repnz
mov
js
add
pop
jg
cmp
lea
add
push
add
sbb
add
add
inc
add
push
add
shl
add
imul
jae
std
into
mov
add
jle
sub
add
insb
repz
adc
dec
jg
add
add
mov
nop
and
lcall
roll
lret
mov
add
incl
lock
cmpsl
add
mov
add
mov
jnp
or
add
cmp
test
xlat
dec
dec
pop
pop
mov
adc
faddl
cmpsl
add
arpl
jmp
add
jne
dec
cmp
push
addb
movsb
add
sub
add
add
mov
add
mov
add
sub
cmp
je
add
movsb
add
stos
ds
add
dec
movsb
add
add
xchg
dec
ret
add
xchg
pop
sbb
add
inc
add
jl
das
mov
pop
inc
add
jmp
daa
add
jle
add
ljmp
dec
jnp
sub
jg
out
ljmp
ret
add
sarl
add
push
jmp
pop
loop
mov
add
push
xchg
jge
add
push
add
stc
lods
sub
add
jns
sub
jl
add
pop
pop
outsb
ret
add
lcall
sub
add
add
push
add
jns
add
add
ljmp
jns
add
add
hlt
cld
dec
mov
out
ss
lods
and
incl
mov
add
les
jns
add
mov
add
repz
jmp
add
decl
jns
add
popf
not
mov
add
add
addb
pop
out
or
fstpl
sub
add
pop
call
jae
inc
add
mov
out
mov
add
iret
xchg
adc
lcall
add
out
mov
jle
les
pop
stc
mov
add
push
lock
sub
push
add
push
add
scas
ret
and
push
mov
add
add
xor
jmp
add
add
popf
pop
or
add
inc
add
pop
dec
outsl
xchg
out
and
stos
addb
push
add
pop
add
add
lea
add
add
or
cmp
stos
xor
lcall
cmp
xchg
adc
jl
out
jb
inc
add
enter
imul
outsb
jns
pop
push
cmp
add
mov
push
pop
xor
ljmp
or
add
aad
pop
in
mov
mov
lods
rep
add
js
add
insb
es
ja
add
mov
data16
negl
sbb
add
add
test
pop
pop
add
lfs
pop
js
cmpsb
add
add
add
ljmp
jle
outsl
mov
add
add
pop
rolb
add
add
dec
icebp
and
add
add
lcall
add
inc
add
add
jno
lcall
add
mov
add
add
jl
add
push
add
into
xor
decl
add
pushl
incl
sub
ret
add
add
incl
call
ljmp
mov
mov
inc
add
lahf
nop
xchg
aam
or
mov
call
add
cmpsl
add
add
dec
mov
add
je
xchg
mov
xchg
xchg
loop
pushf
xchg
adc
in
adc
lcall
jmp
sub
mov
add
mov
mov
bound
call
ljmp
push
xlat
in
pop
add
inc
add
and
outsl
lret
ljmp
mov
out
ret
add
test
gs
add
decl
mov
int
add
add
dec
shll
add
dec
push
add
data16
add
repz
add
mov
insl
addl
and
sahf
test
add
call
jb
pushl
add
cmp
dec
loop
call
add
sbb
pushl
add
dec
push
add
repz
and
jmp
add
fisttps
xchg
rcl
sbb
dec
sahf
xchg
cmp
add
out
cmp
add
incl
pusha
add
flds
add
push
sbb
add
out
mov
stos
pop
lds
int3
pop
sbb
cwtl
iret
mov
add
call
add
mov
and
jmp
add
and
loope
insb
lock
add
cmp
lcall
addl
sbb
add
mov
add
cld
xchg
lret
dec
mov
pop
cmpsl
add
mov
add
add
push
loope
sahf
ds
into
ja
push
add
sub
scas
in
cli
mov
outsl
dec
sbb
leave
dec
fs
cmp
add
adc
call
ror
rcr
lgs
loopne
sub
sbb
add
add
lds
lret
xchg
inc
add
les
mov
cmc
cmp
pushl
flds
add
and
cld
mov
rolb
add
lods
jbe
mov
ret
add
decl
stos
jecxz
popf
jne
add
ds
add
dec
roll
stc
and
inc
add
adc
int3
nop
scas
inc
add
stc
xchg
out
sub
add
add
mov
add
nop
lahf
jnp
movsl
add
sahf
lea
ret
outsl
sub
mov
add
add
jmp
add
jmp
add
or
add
out
pushf
cmp
cld
jae
inc
add
fwait
inc
add
pop
push
add
bound
incl
jg
sub
lahf
jg
add
push
add
xchg
jno
call
add
adc
jecxz
sub
add
arpl
jmp
add
ljmp
add
add
fcoml
addl
inc
add
add
jo
jmp
sbb
xor
push
js
fstpt
add
inc
add
imul
add
data16
outsl
ljmp
idiv
pop
fsts
xchg
loope
add
add
mov
jmp
mov
fcomip
in
xor
add
push
cmp
add
rolb
and
sbb
xchg
iret
mov
add
out
nop
mov
push
xor
add
inc
add
mov
pop
movsb
add
and
call
aaa
cmpsl
add
les
inc
add
adc
pushl
jmp
ss
repz
add
add
call
add
call
or
int
xor
adc
ljmp
pop
cmc
fstpl
adc
mov
fsubs
ljmp
inc
add
loop
add
dec
xchg
inc
add
pushl
add
pop
enter
cmp
adc
jmp
add
ljmp
add
add
sarb
repz
lahf
adc
ljmp
add
lcall
movb
addb
das
jl
adc
decl
test
add
adc
push
shl
add
push
sbb
shl
add
mov
cmp
test
enter
mov
jno
pushl
ds
das
pop
sub
add
inc
add
xor
in
sub
test
pop
and
pushl
jmp
mov
stos
lcall
xor
jp,pt
xor
decl
repz
test
mov
jmp
add
and
mov
add
in
out
or
adc
call
jmp
sbb
add
imul
pop
stc
aad
addl
push
push
lret
ja
add
add
add
das
push
add
je
loop
ljmp
add
ret
add
push
jne
repz
rolb
add
pop
add
das
lahf
sub
addb
xor
ljmp
cmp
jmp
add
jmp
add
add
cmp
add
ljmp
test
pop
shl
addb
mov
insb
lock
add
scas
mov
scas
popa
add
and
jge
outsb
int3
mov
push
fadd
add
add
add
add
fidivrs
je
add
negb
cmc
pop
iret
jmp
sbb
add
dec
mov
inc
add
add
add
inc
add
add
jle
add
call
add
jp
add
push
add
repnz
pop
sti
push
test
or
ja
into
adc
call
add
fisubs
push
add
lea
mov
ficomps
add
addb
add
inc
add
and
jmp
add
lcall
add
nop
pusha
add
repz
ficomps
repz
xchg
jp
add
add
inc
add
pushf
sub
mov
add
cmp
call
inc
add
xchg
and
lcall
pop
enter
xchg
icebp
pop
push
flds
decl
add
mov
add
adc
mov
div
das
mov
add
sub
xchg
pushf
jns
mov
sub
add
roll
add
aaa
dec
pushf
add
add
add
addb
data16
push
add
jl
add
mov
inc
add
jg
mov
test
mov
jmp
add
add
add
pushl
roll
pushf
sbb
jp
add
fisubrs
scas
aad
add
arpl
incl
mov
jns
cld
sbb
add
vpmacsww
push
cmpsb
add
ljmp
fidivrl
cmpsb
add
and
incl
stc
in
bound
jmp
add
ds
inc
add
add
dec
pushf
inc
add
sti
in
mov
leave
fstps
add
lahf
adc
lcall
add
add
aas
cwtl
push
in
or
add
repnz
add
adc
call
lcall
test
lahf
pop
repnz
jo
jmp
pushl
ljmp
test
imul
sub
add
add
xadd
shr
fdivp
addl
mov
mov
add
pusha
add
outsl
or
add
jmp
out
jmp
inc
add
les
neg
add
inc
add
xor
out
pop
cmpsb
add
js
fwait
clc
insl
mov
or
cld
mov
add
icebp
inc
add
insb
lods
adc
jmp
pop
pop
test
aas
enter
imul
data16
xor
lcall
lahf
mov
call
addb
ret
add
in
mov
add
add
dec
add
decl
mov
mov
test
add
ud2
jmp
fisttps
add
filds
lcall
add
xchg
push
int
mov
mov
add
add
sbb
movl
mov
pop
jmp
add
cli
jmp
mov
xchg
or
call
rolb
int
scas
jmp
ficoms
add
cmp
xchg
test
and
cmp
add
pop
add
fsubr
xor
fsubs
movsb
add
add
cmp
aas
push
add
loope
test
ds
add
sub
add
cmp
outsb
cmc
jmp
push
ret
addr16
xchg
inc
add
ret
xor
push
fwait
and
lcall
lcall
push
roll
mov
pop
repz
add
add
mov
add
xor
fldl
insl
mov
enter
add
call
push
add
cmp
dec
add
incl
es
fisttpl
mov
out
xor
push
cmp
mov
cmp
push
push
movsl
add
test
mull
ljmp
add
fsubp
add
add
or
and
add
lcall
cld
clc
lds
mov
sbb
and
incl
aad
loop
sti
xor
pushl
mov
xlat
xchg
mov
add
jo
out
push
mov
add
incl
add
dec
lret
dec
leave
fildl
add
add
jg
lret
addb
push
cmp
out
pop
dec
xlat
mov
out
addb
mov
jne
cmp
add
test
add
or
pop
lret
adc
test
test
enter
xor
ljmp
jmp
or
add
inc
add
lods
lret
push
dec
out
test
lret
ljmp
bound
incl
cmp
add
das
pop
add
ljmp
or
jmp
roll
nop
or
add
data16
addl
mov
jne
add
push
roll
mov
decl
add
scas
pop
pop
cmc
sub
add
jno
lcall
add
test
cmpsb
add
add
cwtl
xchg
dec
inc
add
mov
add
mov
or
add
add
ljmp
outsb
icebp
inc
add
ljmp
roll
test
add
addl
add
data16
movl
jmp
xchg
lcall
sbb
add
and
dec
int3
xor
lcall
cld
out
mov
jecxz
movsl
add
and
jmp
add
mov
loope
movsl
add
add
iret
cmp
cmp
jnp
add
add
nop
scas
add
jl
aad
int3
or
arpl
decl
mov
add
enter
xlat
enter
cmp
fidivl
adc
jmp
add
push
cli
adc
incl
add
int3
dec
jl
xchg
cmp
adc
jmp
sub
ljmp
int3
mov
add
add
lcall
add
repnz
xor
decl
sbb
add
addl
sti
push
add
adc
lcall
pop
cwtl
mov
push
add
inc
add
addb
addl
sahf
into
jns
add
or
shrl
jne
add
mov
adc
out
insl
adc
jmp
test
add
jmp
add
dec
filds
ljmp
and
jmp
add
sub
mov
cwtl
jae
decl
movb
add
jl
stc
lods
aaa
shrb
outsl
mov
fbstp
ljmp
jb
push
lods
dec
fimuls
add
movsb
add
mov
pop
or
add
add
cmpsb
add
push
in
add
add
mov
jb
call
dec
stos
lods
lods
dec
arpl
ljmp
arpl
mov
jle
add
add
cld
les
imul
add
add
adc
lcall
stos
test
push
fistps
inc
add
rorl
mov
sahf
mov
add
das
filds
add
clc
mov
lcall
ret
adc
sahf
push
pop
inc
add
and
xchg
xchg
inc
add
mov
add
add
sbb
add
leave
pop
xchg
add
mov
in
lret
push
add
sbb
sti
fbstp
add
jb
decl
test
fsub
add
lret
cwtl
addb
out
lcall
shl
add
mov
mov
wbinvd
jmp
jmp
fistps
fwait
stc
mov
mov
add
sub
add
dec
test
add
add
add
mov
pop
and
ljmp
data16
inc
add
dec
stc
cmp
xchg
loope
xor
js
clc
call
dec
cmpsb
add
add
jae
incl
inc
add
bound
call
addl
lahf
xor
cmp
inc
add
in
mov
add
bound
mov
loop
or
enter
outsl
push
xor
mov
movsb
add
pop
mov
add
jle
add
icebp
in
fsubrl
add
xchg
sub
mov
aam
pop
dec
push
cmp
jnp
mov
cli
push
add
addl
xor
incl
lcall
jp
shl
add
push
add
insb
mov
pop
in
cli
outsl
push
add
stc
jecxz
mov
xchg
push
jae
lcall
inc
add
fmuls
add
add
int3
mov
add
loopne
mov
add
and
xor
ljmp
fisttpl
xchg
clc
leave
push
pop
fs
ljmp
loope
fwait
or
dec
fstpl
push
fisubs
sti
loopne
stos
lret
sbb
addl
add
addb
repz
enter
movb
cmp
add
jl
sbb
aad
in
fnstsw
inc
add
sti
pop
loope
roll
add
cmp
add
inc
add
add
push
add
jmp
sub
sbb
mov
add
out
outsl
mov
ljmp
pop
xor
js
add
add
add
lcall
add
add
lods
dec
sahf
fwait
dec
xor
jmp
add
movb
fldl
mov
add
jge
add
adc
incl
add
or
jle
add
cmp
xchg
repz
jns
add
outsb
stc
push
jnp
sub
std
lods
lock
mov
add
jb
call
xlat
ret
add
fdivp
adc
movsl
add
icebp
sti
mov
sbb
pushl
inc
add
dec
sub
xchg
push
add
mov
lret
sub
add
xchg
ljmp
jno
incl
add
mov
lcall
push
add
test
add
call
add
enter
jno
jmp
inc
add
add
or
addb
jne
push
add
or
add
sahf
jmp
add
incl
add
add
nop
imul
jo
ljmp
enter
inc
add
cmp
or
add
decl
lahf
jae
decl
into
loope
test
sbb
add
inc
add
out
mov
fmul
push
add
add
push
add
call
lcall
fwait
out
sbb
mov
pop
inc
add
pusha
add
pop
sub
jmp
out
mov
add
xchg
mov
add
xchg
movb
loope
aaa
xchg
dec
add
cmp
insl
sbb
ficompl
pusha
add
mov
jbe
add
repnz
ret
cld
stos
aas
das
and
lcall
add
mov
add
inc
add
pop
add
push
add
movb
ret
add
aas
out
mov
add
add
cmp
cltd
mov
add
popa
add
lods
icebp
adc
add
add
and
mov
sub
add
int3
testl
enter
and
mov
lcall
mov
stos
sbb
enter
lcall
mov
add
pushl
outsl
mov
pop
imul
xchg
in
imul
jae
decl
and
add
cli
adc
incl
add
imul
cld
dec
jbe
imul
mov
add
push
mov
sahf
mov
pop
jbe
das
mov
sub
xor
decl
sbb
decl
jle
in
movsb
add
nop
in
fldcw
xor
lcall
das
ljmp
incl
add
cld
mov
add
jns
dec
or
sbb
add
add
imulb
and
test
pop
loopne
and
inc
add
cli
fadds
decl
sbb
and
jmp
add
hlt
loop
movb
addb
push
xchg
mov
xchg
xor
incl
add
fwait
mov
add
adc
dec
add
decl
pusha
add
push
pusha
add
fwait
push
add
imul
push
add
scas
daa
add
add
jne
add
dec
cmpsb
add
movl
add
mov
inc
add
and
mov
add
pusha
add
xrelease
fwait
xchg
sub
cmp
incl
add
mov
add
cwtl
imul
pushl
add
add
adc
push
addl
add
dec
stc
add
lods
inc
add
xor
inc
add
sub
out
jbe
push
hlt
inc
add
jmp
jno
jmp
jmp
add
mov
inc
add
lahf
pop
cmp
incl
sub
add
mov
push
add
fldt
ljmp
in
dec
movsl
add
add
add
popf
and
jmp
call
add
das
adc
jg
shl
add
sub
addl
jmp
repz
call
adc
call
jmp
add
repz
add
push
mov
add
jno
decl
add
lret
stos
cs
add
scas
push
add
lcall
lock
add
pop
lret
jb
pushl
decl
fsubs
jo
incl
fucom
add
outsb
cmp
push
add
and
mov
cmpsb
add
pop
jne
or
xchg
mov
add
jnp
cs
sub
add
adc
incl
add
ds
inc
add
add
leave
lea
add
outsb
xchg
inc
add
add
addl
scas
add
mov
pop
push
add
cmp
add
mov
add
bound
call
movsb
add
std
push
aaa
jbe,pn
pushf
pop
xor
jmp
add
rcr
mov
insb
imul
add
add
jge
dec
inc
add
pop
in
jp
add
fldt
pop
arpl
dec
fwait
or
mov
sbb
and
push
neg
push
add
add
lret
call
add
xchg
pushf
mov
adc
pop
add
push
mov
mov
add
sub
sub
pop
add
flds
add
std
dec
addb
mov
add
push
add
add
push
add
jns
inc
add
stos
cmp
add
test
aas
repnz
add
ds
add
cwtl
stc
sbb
jmp
add
jb
decl
jle
add
cmp
add
or
jo
ljmp
js
adc
ljmp
jns
dec
inc
add
or
add
incl
sub
roll
fstpl
mov
lock
icebp
mov
add
addb
add
mov
inc
add
push
add
int
add
enter
jnp
adc
sti
pop
mov
jnp
sbb
add
into
dec
jo
call
jmp
xlat
das
movsb
add
cmpsl
add
jmp
pop
xchg
jg
add
ror
add
jmp
add
fcomip
add
iret
sub
xchg
jp
dec
jbe
add
stos
lret
mov
add
aas
xor
pop
sarb
icebp
cli
add
lcall
shrb
stc
push
adc
call
out
or
add
shrb
js
add
addl
fiaddl
push
add
adc
decl
addb
and
sbb
add
add
call
pop
cmpsl
add
add
adc
jmp
add
add
add
adc
call
lcall
inc
add
and
fidivl
cmp
add
mov
add
mull
repz
decl
lcall
pusha
add
adc
add
adc
fidivrl
aad
mov
imull
add
dec
imul
xor
ljmp
cmp
addl
inc
add
xchg
xor
incl
incl
movsb
add
clc
sbb
lea
jmp
or
dec
mov
add
loope
dec
sub
int3
daa
add
mov
add
ljmp
add
movsb
add
add
mov
push
repz
sarl
jnp
add
xchg
sub
pop
icebp
jnp
dec
arpl
call
incl
push
out
loope
dec
lods
shl
add
add
or
stc
pop
xchg
lea
inc
add
mov
xor
add
in
mov
es
pop
aaa
cltd
dec
sbb
add
add
add
clc
mov
lret
add
aas
addl
cwtl
sahf
or
pushl
add
add
push
add
xchg
into
loop,pt
jp
xlat
pop
push
pop
add
lcall
add
add
lcall
popf
add
incl
xchg
in
lret
cmp
adc
out
sbb
add
mov
cmpsb
add
push
add
cmpsl
add
test
xor
decl
clc
push
add
mov
das
aaa
popa
add
or
cmp
fadd
add
add
dec
rcrl
dec
xchg
sub
mov
add
add
push
imul
xchg
xchg
out
adc
dec
and
jns
jmp
movsl
add
jg
add
fbstp
aas
dec
leave
mov
ljmp
add
insb
mov
add
push
out
stc
in
cmp
inc
add
or
mov
movl
jge
sub
jns
stos
adc
lcall
push
enter
jb
pushl
cmpsl
add
sub
aas
fwait
dec
ficompl
add
add
lcall
mov
add
lret
add
movsb
add
xchg
and
jmp
add
fwait
push
ret
push
add
inc
add
sbb
call
decl
cmp
in
push
add
call
outsl
fbstp
ljmp
fcomps
and
dec
movb
xchg
dec
pushf
fisubrl
call
cmp
call
pop
test
xchg
jmp
jns
add
sti
or
or
iret
dec
fdivrl
nop
shlb
sbb
add
add
fs
data16
mov
jge
sub
inc
add
add
mov
push
roll
mov
addb
lock
lods
adc
add
pushf
roll
or
push
add
mov
add
cmp
add
in
outsb
divb
cmpsb
add
cmp
bound
clc
gs
inc
add
add
sahf
stos
mov
stc
loopne
daa
add
add
xchg
xchg
push
add
sub
sti
lret
mov
decl
movl
lret
lea
popa
add
roll
and
incl
jmp
xchg
sub
lock
mov
repnz
push
add
popf
cmpsl
add
inc
add
mov
mov
sbb
add
and
jmp
add
push
stos
push
leave
aaa
sub
add
push
inc
add
pop
sub
add
add
outsl
add
lcall
imul
add
adc
call
xor
dec
lock
add
pop
push
lret
or
dec
jl
xchg
adc
dec
sbb
out
aas
fwait
ret
mov
mov
test
int3
mov
imul
sub
pop
lock
pushl
enter
jecxz
dec
xchg
mov
out
jbe
add
cmp
lds
hlt
test
cmc
dec
aad
push
add
cwtl
sub
add
inc
add
add
incl
loope
xor
jmp
add
sbb
add
add
rcrb
inc
add
add
xchg
sub
ljmp
add
inc
add
add
push
add
add
dec
jns
dec
cmp
mov
cmp
add
inc
add
popf
mov
cmp
ljmp
add
push
add
push
add
in
adc
jmp
xchg
les
push
add
add
add
mov
in
pusha
add
add
pop
add
add
add
add
call
xchg
pop
xchg
lcall
add
std
aam
clc
add
add
push
mov
pusha
add
data16
dec
pop
add
call
push
xchg
mov
add
das
lea
in
jmp
pushf
roll
jnp
int3
pop
test
sub
jb
jmp
call
mov
call
or
jecxz
push
cmp
pop
mov
imul
add
or
add
in
add
call
jbe
add
movsl
add
or
add
xor
incl
push
add
fidivrl
jecxz
adc
pushl
jns
add
into
pop
push
add
outsb
mov
inc
add
das
mov
add
add
adc
add
inc
add
dec
mov
jp
sub
add
into
js
sbb
add
xchg
hlt
dec
out
xor
ljmp
fadds
add
frstor
in
xor
decl
aad
je
add
incl
or
repz
pushf
cld
inc
add
sub
mov
icebp
cltd
ret
add
pushl
add
jno
jmp
icebp
inc
add
xor
incl
mov
add
inc
add
cld
dec
ret
add
es
mov
jo
decl
ljmp
add
icebp
out
and
lcall
ret
xchg
cmp
jle
add
jmp
jmp
add
xchg
push
pop
or
add
movl
add
push
jbe
add
pop
add
add
add
sahf
popf
insb
cmp
jns
cmp
xchg
mov
add
movb
add
lahf
push
add
sbb
add
sub
add
add
add
mov
les
dec
add
cs
mov
add
push
add
pop
xor
push
add
lret
add
rolb
add
lcall
add
jmp
add
add
incl
add
addr16
repz
icebp
sub
push
loopne
or
push
push
add
roll
popl
loopne
mov
add
xchg
fsubs
mov
jle
insl
mov
ret
dec
push
push
aaa
icebp
adc
jmp
add
add
add
enter
add
add
add
jmp
call
add
repz
jb
ljmp
enter
decl
out
xchg
sbb
add
int3
mov
pop
dec
dec
insb
jo
call
data16
xor
xchg
jo
call
and
dec
pop
push
add
jno
incl
addl
loope
or
mov
add
cmc
lret
loop
ja
xchg
je
fstpt
cltd
addl
and
incl
sbb
roll
add
pop
fisttps
jmp
inc
add
push
and
add
mov
cmp
add
pusha
add
ja
add
inc
add
mov
call
call
xchg
inc
add
adc
add
add
xchg
mov
call
jb
decl
add
add
xchg
sbb
mov
cwtl
cli
push
jne
divb
add
lahf
add
decl
add
aaa
sbb
add
popa
add
bound
decl
cmp
je
cltd
lea
adc
add
push
cmp
popa
add
addb
add
scas
div
movl
jno
decl
add
incl
add
call
add
roll
mov
movb
add
call
dec
mov
adc
jmp
imul
std
je
add
outsl
xchg
and
ljmp
int
add
push
bound
lcall
add
pop
dec
enter
add
cs
ljmp
mov
add
clc
sbb
mov
add
add
xchg
inc
add
pop
add
add
jbe
add
adc
add
dec
icebp
push
add
xor
add
in
sbb
jmp
add
out
push
mov
and
pushl
add
xor
and
jmp
jge
mov
in
stos
cltd
mov
sbb
pop
stc
loopne
inc
add
scas
lcall
imul
dec
js
js
add
push
add
hlt
cltd
mov
add
sbb
sub
notl
decl
cmc
rorb
add
add
stc
mov
add
pop
inc
add
fistl
dec
jns
pop
add
and
add
ljmp
xor
push
dec
je
sub
add
xchg
in
lea
mov
mov
inc
add
add
dec
mov
sbb
pushl
add
xchg
loope
jnp
xchg
cmp
inc
add
add
mov
mov
add
fimull
add
sti
jg
add
test
jmp
jmp
add
ret
test
push
sbb
add
add
dec
and
mov
add
jmp
nop
mov
and
mov
sbb
bound
mov
aam
pop
fwait
push
inc
add
call
fldcw
mov
add
ret
ret
add
mov
xchg
jbe
stc
inc
add
inc
add
add
adc
add
inc
add
aad
xchg
sbb
mov
pushf
or
outsb
mov
es
imul
movsl
add
pop
leave
add
hlt
mov
add
aam
fbld
xchg
jnp
shrl
inc
add
add
nop
iret
mov
cmp
out
dec
add
incl
outsb
xor
decl
add
add
add
mov
add
lcall
sbb
add
pop
in
add
incl
mov
add
mov
and
call
mov
decl
mov
fsubrs
xchg
iret
loope
and
pushl
decl
mov
jp
jp
sbb
jo
jge
add
repnz
xor
pushl
cmpsl
add
add
add
cmc
js
add
mov
dec
push
cld
lcall
xchg
aad
lods
roll
fs
mov
call
sbb
in
movb
add
pop
shl
add
add
add
lods
imul
mov
ja
loop
in
movsl
add
add
jge
imull
repnz
sbb
sub
add
int
push
jnp
add
adc
decl
add
and
ljmp
push
add
ja
add
push
add
add
addl
dec
jmp
add
mov
pop
xlat
cmp
add
dec
js
mov
popa
add
sub
adc
add
add
xor
sti
cmp
or
data16
scas
push
cli
adc
add
stos
jb
ljmp
add
imul
jmp
add
mov
loopne
cld
movsl
add
fnstsw
pushl
add
in
adc
jle
inc
add
adc
ljmp
jp
lret
add
xchg
jg
popl
jge
test
call
inc
add
leave
inc
add
lods
repz
mov
insb
test
adc
pushl
ja
add
sub
add
call
cltd
or
addl
call
decl
mov
cmp
add
add
rorl
sbb
call
add
inc
add
add
mov
scas
pop
outsb
or
add
and
call
jle
mov
incl
adc
shll
add
xor
call
add
pop
push
add
jmp
jp
loop
mov
ficoml
jmp
add
fidivl
add
fcmovb
add
movsl
add
add
repz
addl
add
sub
add
mov
lcall
add
mov
add
add
enter
in
mov
sub
sub
incl
in
imul
aas
cmp
add
inc
add
sbb
add
sbb
incl
or
add
xor
dec
mov
jmp
incl
or
pop
aam
stc
inc
add
add
xchg
imul
pop
cmpsb
add
lret
mov
add
enter
add
rolb
imul
out
jl
add
hlt
jg
add
jmp
movb
lods
rol
add
or
add
sub
add
mov
add
add
mov
out
movsl
add
add
test
aas
jne
pop
add
mov
mov
add
incl
add
dec
test
sbb
jnp
insl
daa
add
repnz
test
xchg
nop
ja
add
jle
add
mul
add
js
jae
incl
addb
mov
ja
sbb
push
in
test
add
mov
or
add
jl
add
ljmp
and
ljmp
pop
add
fldenv
data16
pop
out
or
int
cmp
mov
add
add
inc
add
push
rep
add
aas
pop
jmp
add
lwpins
pop
mov
pop
or
cltd
pop
add
divb
add
negb
add
int3
imul
movb
movsb
add
aas
or
dec
xor
add
add
jmp
add
add
add
arpl
decl
and
jp
addb
rolb
push
loopne
jl
adc
pop
push
in
std
lcall
add
mov
call
decl
sub
add
pop
popf
add
add
pop
das
adc
decl
pushf
std
and
jmp
add
cs
add
jp
ljmp
jmp
data16
add
pop
pop
icebp
stos
daa
add
jmp
ss
mov
cmp
ljmp
fnstcw
inc
add
addl
inc
add
fucomip
xchg
cmp
je
add
stc
xchg
jb
jmp
cmp
jbe
cmp
inc
add
scas
add
in
push
std
inc
add
inc
add
add
mov
decl
jbe
insl
mov
add
add
add
add
add
xchg
test
add
jmp
pushl
xchg
enter
or
push
add
nop
je
push
sbb
scas
inc
add
cmp
pop
add
iret
jle
add
inc
add
push
add
push
testb
xor
add
xor
lcall
aam
mov
add
xchg
js
add
jecxz
out
jne
test
jl
push
and
pushl
jl
push
dec
xor
decl
add
ljmp
mov
add
test
adc
lcall
add
push
je
push
add
pop
shll
lcall
fldl
add
rolb
movl
decl
mov
mov
add
stos
mov
cmp
add
push
add
ja
add
add
fsubrl
add
xchg
test
add
insb
pop
jns
sub
add
pop
data16
add
ljmp
and
pushl
add
stc
stos
push
add
xor
add
fnstcw
sub
ja
movl
pop
roll
xlat
cmpsb
add
push
add
push
add
xchg
jb
lcall
loope
sahf
and
mov
ljmp
loope
pop
ja
mov
loopne
xchg
clc
xor
decl
incl
pushl
ljmp
dec
xchg
sbb
sbb
ljmp
add
mov
inc
add
sub
add
call
inc
add
mov
add
add
out
dec
jmp
xchg
sahf
data16
mov
xchg
inc
add
add
aam
mov
add
int
test
add
int
mov
decl
cmc
addl
jge
mov
inc
add
jecxz
dec
sub
imul
movsb
add
jmp
jne
daa
add
add
add
test
dec
cmp
in
add
pushl
add
add
lods
mov
add
push
add
cmc
mov
xchg
clc
addb
mov
dec
push
push
sbb
jmp
pop
jb
push
int3
or
jmp
rolb
add
push
add
aas
ss
add
enter
add
stos
sbb
arpl
decl
cli
lock
jle
add
add
int3
add
std
xchg
sbb
sub
inc
add
decl
cmp
xor
lcall
add
jmp
scas
mov
or
shlb
jmp
pop
sti
mov
mov
add
cmp
lods
push
js
add
addb
add
sub
daa
add
jmp
add
xchg
dec
imul
and
loope
dec
mov
iret
dec
lea
pushl
add
add
mov
mov
add
xor
ljmp
aam
add
stc
aad
mov
pusha
add
inc
add
add
mov
idivl
pop
fdivl
inc
add
lock
push
jnp
rcl
xor
call
mov
scas
lea
cltd
adc
incl
add
adc
decl
psrlq
push
add
add
data16
iret
outsl
sub
addl
lcall
add
addr16
add
cmp
out
add
add
inc
add
jle
pop
cmc
xor
mov
jb
push
addb
outsl
mov
xor
add
imul
add
and
mov
popa
add
lods
les
push
mov
ljmp
repz
ja
test
stc
clc
in
lds
xchg
sbb
push
repnz
inc
add
add
incl
xor
call
jl
pop
inc
add
scas
in
lock
add
add
push
or
jg
add
mov
fwait
test
and
call
add
or
sbb
leave
inc
add
sbb
xor
mov
add
add
sahf
cli
cmc
mov
xor
inc
add
mov
mov
jge
xchg
or
mov
jbe
ficoml
int
sub
pusha
add
sub
call
inc
add
mov
and
call
call
data16
loop
ljmp
scas
inc
add
fucom
add
add
pop
dec
cmpxchg
and
decl
jecxz
loop
test
xor
ljmp
fstl
adc
incl
sbb
test
add
pop
fimull
add
add
imul
lcall
shlb
or
mov
cmp
and
addl
add
bnd
jmp
sbb
call
add
fbld
dec
js
jl
out
out
aad
cmp
addl
loope
jne
lcall
shrl
call
pop
add
incl
sub
push
add
mov
cmp
mov
add
mov
add
and
pushl
incl
mov
adc
ds
add
lahf
cld
push
fdivrs
leave
sbb
adc
loopne
hlt
push
add
leave
rclb
dec
roll
mov
icebp
or
add
ljmp
pop
mov
arpl
lcall
or
cmp
add
inc
add
ljmp
ljmp
add
ret
add
add
dec
xchg
sahf
xchg
add
cli
fwait
adc
inc
add
mov
add
add
jmp
pop
cmp
call
cmp
stc
mov
cli
xor
pushl
add
inc
add
add
sbb
add
push
add
jg
shl
push
add
in
icebp
pusha
add
repnz
add
testb
mov
mov
adc
decl
in
xor
call
lock
leave
add
incl
add
cmpsl
add
fwait
int3
sub
test
mov
sub
add
scas
push
movsl
add
jnp
rolb
js
popa
add
cmp
jmp
iret
data16
dec
cmc
pop
push
add
pop
test
jecxz
xchg
mov
push
add
mov
call
rclb
addl
ss
cld
pop
mov
add
shlb
add
dec
xchg
push
push
addl
add
movsl
add
xchg
mov
sub
into
push
add
adc
add
sbb
add
pop
add
pop
clc
add
lcall
addb
dec
pop
stos
stc
jmp
js
in
pushf
es
inc
add
push
add
add
cmp
mov
les
stos
iret
mov
dec
mov
fadd
add
push
cli
repz
add
mov
push
push
add
xor
ljmp
add
ljmp
inc
add
mov
dec
jmp
cmp
jge
sbb
add
add
jg
add
out
insl
pop
test
or
mov
add
and
decl
add
add
and
push
aam
add
adc
call
call
add
sbb
jg
push
movsb
add
lcall
add
xchg
dec
mov
lret
add
add
mov
add
pop
call
imul
cmc
lret
mov
lds
js
fimuls
jmp
in
push
add
shr
loope
rorl
add
cmp
movsb
add
shrl
mov
fcmovb
add
movsb
add
add
push
neg
sub
add
pushl
mov
mov
mov
jmp
add
add
push
mov
add
dec
cmpsl
add
add
lahf
je
popa
add
loopne
xchg
les
add
jmp
add
movsl
add
add
dec
test
add
int3
dec
data16
movl
cmp
add
insb
fldt
adc
add
mov
cmp
sub
fcomps
cmc
xor
decl
mov
adc
add
jg
add
pop
jns
icebp
jno
jmp
test
jg
add
jmp
xchg
pavgw
add
xlat
cmp
add
push
add
sahf
dec
roll
stc
sub
dec
mov
mov
xchg
fcompl
add
add
cmp
hlt
daa
add
popf
rolb
mov
mov
add
sub
imul
mov
add
inc
add
or
add
test
pop
pop
mov
xchg
sahf
rol
add
jmp
add
add
dec
ss
add
call
pop
pop
cmp
cmp
mov
mov
add
dec
in
lods
repz
addb
add
call
mov
lahf
cli
push
mov
push
add
mov
xor
decl
movsb
add
add
dec
xchg
pop
and
decl
out
mov
inc
add
out
push
cli
mov
adc
call
ss
push
add
jmp
adc
inc
add
and
lcall
ficoml
lret
cli
or
imul
and
jmp
jbe
xor
jmp
add
cltd
dec
adc
ljmp
or
icebp
cwtl
jnp
add
add
aas
out
stc
mov
cmp
out
fidivrl
mov
jb
inc
add
fucomi
lods
movsl
add
mov
add
push
scas
inc
add
pop
daa
add
add
mov
add
enter
add
mov
push
add
xchg
adc
addl
daa
add
and
call
add
cmp
sub
add
push
add
divl
add
lret
stos
js
xchg
jns
test
mov
out
data16
add
insb
or
add
popf
jecxz
push
jle
mov
mov
jmp
gs
dec
shll
add
jne
add
push
addb
fcoms
dec
add
push
pop
dec
out
jb
jmp
addb
pop
and
lcall
xchg
xor
mov
add
or
add
cmp
lret
push
cmp
lods
xchg
fdiv
push
imul
out
lea
jbe
add
scas
mov
add
add
pinsrw
mov
movsb
add
stc
call
mov
pop
add
jo
decl
call
jge
int3
out
push
add
inc
add
add
mov
dec
and
fimuls
adc
fdiv
addb
fldcw
pop
jnp
add
rolb
add
lods
insl
pop
cmp
add
add
jae
call
add
mov
rolb
adc
add
lds
add
out
fidivl
add
lds
dec
popa
add
add
sti
dec
icebp
mov
and
or
add
pop
shll
addl
jno
call
add
sub
add
add
out
iret
decl
jmp
push
xchg
test
add
cwtl
xchg
jp
dec
leave
aas
lods
ljmp
add
mov
addb
add
add
adc
call
lcall
jmp
add
lcall
xchg
cmc
frstor
pop
add
outsl
test
jnp
pop
mov
call
decl
out
jle
add
sub
add
in
cmpsb
add
incl
ljmp
lcall
icebp
dec
mov
aad
movl
fistps
test
mov
sbb
addl
in
dec
pushf
imul
testl
and
ljmp
pop
cmp
ret
add
in
sbb
add
or
fsubrs
addb
das
xor
decl
bound
pushl
out
fwait
adc
lcall
add
add
push
fnsave
push
add
scas
xor
push
add
adc
incl
ficoms
add
xor
jge
iret
pushf
fcomps
add
add
call
out
pusha
add
mov
pushf
push
xchg
in
iret
aam
roll
xchg
add
pusha
add
xchg
repnz
xor
test
or
add
adc
pushl
add
outsb
nop
test
clc
inc
add
add
cmp
sbb
mov
into
xor
cli
sbb
ljmp
add
add
call
add
mov
repz
add
movl
push
sub
and
pushl
mov
add
arpl
jmp
add
add
push
add
leave
adc
incl
mov
call
ja
add
add
add
dec
test
and
jl
pusha
add
mov
adc
incl
add
or
mov
addl
add
mov
imul
add
call
adc
addl
cmc
inc
add
add
xchg
lcall
add
jb
jmp
leave
int
add
decl
or
repnz
add
mov
jp
jl
add
add
and
and
ljmp
dec
iret
std
adc
stc
sbb
jns
addb
ljmp
xchg
pop
sub
jmp
mov
push
add
lcall
add
push
add
inc
add
addl
add
and
jmp
add
imul
push
add
lret
add
cli
xchg
push
add
inc
add
mov
scas
pop
daa
add
add
outsb
lret
pop
stc
add
lcall
dec
insb
insl
icebp
out
cmp
add
push
add
jns
loop
clc
popf
dec
mov
bound
dec
sbb
add
push
shlb
iret
in
les
and
call
lret
lds
push
add
call
add
cmc
loopne
in
pop
xchg
out
or
sbb
jle
nop
fdivrs
iret
adc
jmp
jmp
add
mov
add
cmc
mov
lahf
rcll
test
stos
cwtl
cmpsb
add
add
add
xlat
sub
or
add
mov
stc
decb
adc
ljmp
pop
aam
incb
lcall
pushl
out
mov
add
lcall
cld
roll
add
out
pop
or
add
adc
fadds
sbb
in
pop
add
sub
or
cmp
add
bnd
sub
add
mov
scas
xchg
inc
add
fistpll
je
nop
pop
bound
decl
push
lea
rcr
push
add
stos
adc
incl
addb
add
jmp
sub
into
xor
call
int
add
aam
add
jno
lcall
mov
pop
sti
mov
sarb
push
divb
inc
add
addb
loopne
out
or
add
mov
popa
add
jl
out
lret
addb
xchg
test
inc
add
pop
notl
push
add
inc
add
in
sbb
add
mov
fucomi
jl
pop
sbb
add
in
je
push
add
out
jnp
addb
add
add
ljmp
call
insl
inc
add
add
inc
add
and
mov
pusha
add
cmp
dec
shll
add
jg
add
enter
xchg
xor
decl
add
leave
imul
add
jb
decl
daa
add
aam
and
mov
movsl
add
loop
add
push
add
call
sarl
cld
roll
les
out
xor
inc
add
ja
or
dec
sub
sbb
cmp
lret
sub
add
push
add
dec
addb
fwait
je
mov
mov
mov
add
add
js
mov
add
add
or
cmp
add
add
jp
mov
rolb
test
push
add
imul
add
lock
pushf
in
pop
fbstp
popl
add
adc
dec
inc
add
jbe
mov
add
mov
shlb
outsb
push
add
sbb
shll
add
fldt
jge
pop
mov
mov
mov
add
mov
aad
hlt
push
add
shl
in
sti
pop
out
lcall
add
imul
fadds
pushl
add
aam
pop
xchg
sbb
add
xchg
mov
add
cwtl
icebp
call
scas
pushf
inc
add
adc
add
mov
adc
stos
pop
mov
add
shrb
jmp
jge
outsb
std
lods
int3
jno,pt
ljmp
les
mov
hlt
add
add
pop
jne
push
add
add
pop
or
add
loop
call
sbb
mov
add
mov
in
xchg
push
dec
sbb
add
or
add
add
fmull
cmpsl
add
je
imul
pop
jl
add
cltd
xchg
xor
incl
add
out
jl
cltd
stc
xchg
ret
add
dec
lods
xchg
dec
sub
add
nop
inc
add
test
jl
mov
cmp
add
outsb
roll
jg
popa
add
scas
mov
add
dec
pop
xor
jle
add
das
mov
jle
push
pop
aad
jae
call
addl
mov
pushl
aaa
mov
cmp
cltd
and
ret
add
hlt
dec
xchg
pop
mov
rcrb
mov
add
mov
add
lcall
push
rcrb
add
xor
pushl
jmp
add
and
in
cli
jae
ljmp
inc
add
xchg
das
mov
fmuls
pop
clc
rolb
xor
call
test
clc
push
add
jnp
and
cmp
push
cmpsb
add
cmpsl
add
pop
mov
mov
add
int3
ss
add
mov
lcall
add
mov
bound
call
add
dec
dec
sti
sub
outsb
out
cld
and
sti
loopne
push
jg
lcall
adc
incl
or
mov
add
sbb
add
icebp
loopne
jle
loopne
mov
das
push
add
mov
add
rcll
add
adc
dec
add
jmp
test
lcall
int3
int3
xchg
pop
add
add
add
call
or
add
mov
jmp
decl
and
call
add
push
add
int
push
add
cld
out
pop
or
negb
add
cmp
mov
xor
add
clc
sbb
loop
xor
rolb
push
add
xor
out
push
add
ret
add
add
push
jge
pusha
add
cli
or
add
xor
call
jmp
addb
add
loopne
incb
jmp
add
arpl
call
decl
ret
xchg
push
cmp
loopne
scas
mov
adc
ljmp
dec
imul
sub
insl
cmpsb
add
add
addb
loop
xchg
aad
add
add
sbb
mov
add
incl
add
movl
call
jae
decl
call
sub
enter
push
xor
lcall
lds
ljmp
dec
mov
add
enter
ret
pop
nop
scas
mov
add
xchg
stc
les
and
call
add
mov
icebp
xor
jmp
add
mov
add
add
or
and
decl
ja
add
decb
popf
lea
daa
add
add
and
lcall
pop
lret
dec
inc
add
fmull
inc
add
mov
jge
inc
add
sub
xchg
aaa
jmp
mov
iret
mov
mov
call
push
add
roll
ljmp
add
xor
call
adc
pop
push
jae
dec
mov
xchg
std
xchg
stos
jne
sub
add
fwait
mov
std
mov
jb
push
push
add
push
add
cmpxchg
rorl
pop
push
add
dec
dec
xor
jl
in
in
mov
add
test
hlt
repnz
add
xchg
clc
pop
int
add
jmp
add
mov
add
ljmp
fcomi
xor
decl
mov
add
test
jnp
sbb
xchg
add
add
lahf
ud2
jecxz
dec
ficoms
mov
jmp
cmp
xlat
xor
lret
dec
jnp
add
mov
add
stos
not
and
jmp
les
arpl
pushl
add
xchg
mov
std
test
lcall
add
mov
add
add
pusha
add
test
je
arpl
push
inc
add
addl
inc
add
pop
push
adc
jmp
dec
or
mov
je
add
ds
jle
dec
jg
add
jns
enter
clc
mov
test
sub
jp
add
mov
or
ljmp
xchg
repnz
add
lret
das
jmp
add
or
add
mov
pushl
sbb
add
add
insb
hlt
in
fbstp
loop
push
add
jl
mov
imul
add
imulb
xchg
jp
push
pushl
jns
xchg
clc
push
into
push
sub
lret
ror
xor
ljmp
xchg
push
add
jae
pushl
ja
add
mov
mov
sbb
add
mov
xor
incl
add
dec
fisubrs
mov
test
jg
movsb
add
add
jo
dec
addl
ss
xchg
imul
xchg
cld
data16
sti
jns
cmp
test
push
cmp
cs
stos
sbb
xchg
cld
cmp
arpl
incl
add
mov
pop
dec
stc
push
add
fistpll
in
jp
add
cltd
addr16
add
add
mov
jb
ljmp
lcall
inc
add
insb
mov
add
add
sub
mov
arpl
jmp
mov
mov
add
xor
lret
add
cmc
dec
pop
imul
in
out
rolb
call
add
add
in
cmc
shl
adc
decl
js
add
mov
jmp
jmp
inc
add
lcall
arpl
ljmp
add
dec
xlat
std
test
jl
mov
mov
vmwrite
add
stos
push
jge
pop
xchg
sbb
jmp
and
lcall
add
adc
add
imul
add
jns
add
jno
ljmp
addl
sbb
lahf
imul
sbb
dec
adc
xchg
add
decl
add
add
jmp
addb
mov
cmp
test
lds
rolb
cmpsl
add
push
xchg
out
test
sub
add
fs
test
ret
out
aad
adc
add
sahf
push
mov
adc
add
pop
in
and
incl
add
add
jl
and
mov
add
jl
pop
lahf
sbb
and
mov
jmp
add
add
stos
out
leave
push
add
or
addl
add
jecxz
clc
jp
shl
sub
addb
and
lea
pushl
add
push
xchg
addl
add
pop
sti
call
xor
pop
or
cmp
and
call
ljmp
jl
movsb
add
add
jmp
in
pop
int3
ret
add
add
sti
repnz
add
push
mov
and
ljmp
add
jno
lcall
js
mov
add
jmp
sub
add
mov
pushl
xor
pushl
call
add
cmp
addl
insl
cltd
rcrl
jnp
arpl
push
mov
mov
add
jmp
add
add
je
add
aam
add
movsb
add
test
arpl
decl
sub
add
mov
mov
adc
jecxz
sub
add
jle
cmpsb
add
sti
push
xor
decl
faddl
inc
add
in
mov
jmp
add
inc
add
cld
inc
add
add
inc
add
push
lahf
jl
movl
aas
imul
mov
cmp
imul
dec
mov
call
ljmp
fnsave
call
sahf
cmp
test
xchg
lahf
cwtl
push
divl
call
fcompl
scas
pop
add
clc
lret
or
add
add
xor
ljmp
call
adc
ljmp
jns
nop
inc
add
jmp
sbb
icebp
push
xchg
enter
mov
add
mov
add
cwtl
in
jbe
add
dec
sub
add
add
xchg
aas
add
adc
ljmp
sub
pusha
add
cs
push
push
add
jb
call
add
mov
fbstp
add
fwait
bound
mov
sbb
cwtl
in
stc
jle
incl
jecxz
push
add
lods
aam
push
cmp
cmp
add
cmp
and
pusha
add
dec
insb
ret
add
xchg
jge
btc
fsubrs
add
jmp
lret
pop
inc
add
or
dec
xchg
pop
scas
sbb
addl
or
add
loop
lea
stos
out
jbe
add
add
add
addb
es
add
jg
or
add
mov
add
out
roll
inc
add
movsl
add
add
imul
cmc
mov
add
mov
lods
das
mov
addl
xchg
mov
addl
add
dec
add
xor
add
add
lcall
ss
inc
add
in
sbb
inc
add
xor
push
add
add
cld
push
add
outsl
jecxz
leave
jge
cmp
jns
aam
cmp
add
push
sub
sbb
jmp
add
add
aaa
test
pop
movl
add
movsl
add
add
add
lcall
sbb
decl
fsubs
add
std
mov
add
repnz
inc
add
push
add
cmpsb
add
add
add
ljmp
repz
add
mov
mov
add
clc
lret
add
repz
add
add
stc
dec
ret
add
sub
add
adc
xlat
jp
add
inc
add
push
add
out
and
adc
mov
mov
add
sub
add
pop
mov
fbld
add
out
test
xlat
cli
insl
dec
cmc
pop
movd
lret
adc
jg
sub
add
xor
mov
fistpll
adc
call
add
pop
out
roll
addl
xor
ljmp
aas
and
js
or
add
cmp
lea
add
sti
push
pusha
add
int3
or
add
mov
dec
mov
call
add
push
jmp
loope
mov
sbb
imull
add
add
xchg
ret
add
add
add
call
dec
enter
pop
int3
push
add
lret
xor
decl
and
xor
fstpl
pusha
add
mov
mov
xchg
jns
cli
adc
jmp
add
cmp
xlat
outsb
cmp
loop
inc
add
add
xor
decl
add
inc
add
into
sub
add
jne
add
add
adc
aad
push
into
into
in
dec
mov
in
or
movsb
add
imul
fisubs
call
add
sub
add
inc
add
bound
jmp
stos
mov
add
into
inc
add
push
xor
call
movsl
add
and
add
jmp
pop
mov
dec
pop
into
nop
fisubrl
or
jb
stc
shll
decl
loopne
push
xchg
sysret
add
mov
add
mov
add
jns
scas
frstor
add
xchg
cmp
lea
frstor
add
jo
cmp
add
add
out
cmp
add
jmp
add
and
ljmp
aas
push
jp
enter
mulb
mov
add
add
add
inc
add
add
push
add
roll
lcall
and
dec
fisttps
and
pushl
add
lods
push
add
mov
mov
pop
jbe,pt
arpl
jmp
add
mov
mov
add
mov
lea
fnstcw
push
cmp
add
sbb
ret
add
add
add
icebp
int3
mov
add
mov
pop
dec
jg
add
repnz
sub
add
adc
shlb
add
addb
imulb
jmp
adc
sbb
pop
dec
js
add
push
add
add
out
cmp
mov
push
add
dec
adc
push
insl
dec
cltd
mov
inc
add
dec
pop
jp
mov
ss
lret
cmp
push
add
xchg
pop
push
mov
add
jmp
add
ficompl
mov
add
mov
add
dec
mov
out
in
fmull
movsl
add
push
cld
mov
add
ret
add
cwtl
or
push
add
mov
insb
push
incl
push
add
jl
or
adc
lcall
add
add
add
stos
out
repnz
add
xchg
xchg
and
jns
add
sbb
add
xchg
inc
add
cmpsl
add
add
lcall
push
and
cmc
addl
mov
jge
clc
les
add
add
xor
mov
add
add
cmc
jg
add
aas
add
call
outsl
add
loopne
call
mov
lcall
dec
pop
add
ja
movl
fnstsw
push
add
divl
add
sbb
pop
clc
movsb
add
add
jae
call
add
and
call
incl
add
push
xchg
fdivs
push
jp
add
adc
cmp
pop
cli
dec
and
cli
lods
adc
call
cmp
cmp
sbb
decl
mov
add
lahf
sahf
push
add
fsubs
add
imul
fsubrl
push
sbb
cli
ffree
add
incl
add
test
addl
mov
lahf
sub
inc
add
ljmp
lea
fstps
out
jge
add
add
add
inc
add
popf
mov
fdivl
incl
add
dec
cmp
scas
and
decl
call
mov
add
jmp
xlat
cwtl
cli
cmc
and
lods
pop
icebp
pushf
sub
roll
add
divb
fmull
adc
ljmp
add
pop
and
pushl
add
add
add
lcall
xchg
pop
mov
add
loope
mov
add
push
push
add
add
add
hlt
add
call
decl
fcmovu
and
rorl
fsub
add
add
incl
add
cwtl
mov
add
das
filds
add
fcmovb
add
dec
repz
inc
add
mov
hlt
adc
inc
add
mov
pop
es
test
addb
sbb
mov
aas
add
sbb
popa
add
xchg
sbb
js
add
add
mov
fwait
movb
add
insl
pusha
add
insl
mov
popf
in
push
add
adc
cwtl
push
add
call
add
sub
add
and
inc
add
cmp
pushl
addl
add
push
and
fnsave
stc
push
add
mov
cmp
aad
add
mov
cli
addb
mov
jg
jle
mov
add
mov
lds
insl
inc
add
ljmp
add
jecxz
pop
mov
inc
add
jno
ljmp
push
add
mov
xor
fcoml
dec
out
outsb
cmpsl
add
jl
mov
xchg
mov
mov
cmp
dec
fucomi
mov
and
ljmp
enter
push
add
jmp
dec
out
or
jle
mov
add
add
sbb
jp
popf
adc
mov
add
or
add
push
add
rolb
add
add
push
add
add
inc
add
pop
out
addb
add
ds
iret
mov
add
add
add
sbb
sbb
add
dec
in
mov
incl
pushl
cmpsl
add
jmp
aam
int
sbb
add
push
xchg
mov
inc
add
into
push
in
rcll
add
out
aad
add
addb
mov
push
add
fisttpll
add
cltd
add
pushl
add
dec
push
fstl
test
mov
lcall
sbb
mov
push
mov
add
in
pop
cmpsb
add
add
and
call
mov
add
ds
inc
add
cmpsb
add
call
xchg
divl
incl
mov
add
pop
xor
ljmp
out
inc
add
jle
xchg
sub
fcmovnbe
or
jg
add
sarl
leave
out
inc
add
in
pop
mov
add
add
mov
add
add
add
add
fwait
iret
inc
add
inc
add
jo
call
add
sti
iret
inc
add
imul
push
push
push
jle
sbb
pop
mov
mov
into
leave
cmp
push
add
xchg
lea
fsub
add
adc
mov
jo
jmp
incl
mov
dec
jp
add
repnz
add
dec
ret
add
add
incl
add
mov
sub
lret
add
pop
jno
ljmp
add
cli
lock
cmp
and
fdivl
cwtl
testb
incl
xchg
adc
add
xchg
push
or
add
nop
dec
or
pop
and
xor
incl
add
aas
sbb
add
add
mov
mov
cmp
sbb
add
in
or
add
pop
test
add
sahf
cltd
jl
mov
inc
add
js
mov
add
jno
lcall
decl
add
adc
pushl
add
out
roll
pop
addr16
mov
add
in
pusha
add
push
sub
std
add
sub
mov
jp
mov
xor
push
pop
add
lcall
sub
dec
in
or
stc
mov
js
add
or
jmp
add
jle
pushf
stos
xor
mov
add
ds
popf
cmpsl
add
push
add
enter
add
jnp
add
stc
or
lock
push
ret
add
xchg
sti
lcall
add
mov
pop
add
decl
mov
divl
je
add
call
movsl
add
add
xor
incl
cmp
jle
jne
add
add
mov
stos
cld
jp
add
add
add
ficompl
mov
mov
scas
in
xlat
xor
lcall
and
ljmp
pop
inc
add
std
loop
jg
jo
std
xlat
and
addb
jns
sub
add
call
lret
pop
pop
xchg
scas
int3
add
aas
cmpsb
add
pop
xchg
mov
add
push
fldl
mov
adc
decl
test
mov
sbb
jbe
add
popf
into
push
add
mov
ja
call
mov
xchg
jg
add
dec
test
push
xor
ljmp
push
add
sbb
lret
add
outsl
insl
mov
add
add
push
add
fisubrs
mov
mov
add
popf
cmpsb
add
jns
add
add
decl
adc
add
shll
add
mov
aam
xor
add
testl
jmp
add
repz
pop
dec
adc
pushl
scas
lods
cli
mov
aaa
lahf
jle
lret
loopne
mov
lods
nop
sbb
inc
add
cltd
dec
sub
mov
rcll
incl
leave
scas
lock
add
cmp
je
push
add
incl
jmp
add
sbb
cltd
adc
incl
call
sub
call
ret
add
add
dec
aaa
fwait
jno
pushl
add
jae
jg
mov
add
cs
sub
add
lock
dec
mov
add
cmp
std
in
fldenv
call
call
adc
ljmp
mov
add
adc
pushl
add
pop
out
mov
add
inc
add
mov
add
mov
outsl
xchg
jbe
add
jbe
and
cld
movsb
add
mov
adc
roll
add
daa
add
add
ljmp
dec
stos
dec
push
and
inc
add
aaa
pop
add
cmp
call
add
roll
outsb
dec
loop
push
lods
aad
jno
pushl
add
sub
aas
lret
sub
xchg
pop
add
mov
negl
adc
or
add
xor
dec
dec
pop
int3
sbb
jl
add
xchg
add
mov
xlat
fucomip
mov
push
add
cmp
nop
adc
jmp
mov
imul
add
jmp
in
outsb
aas
xor
int3
add
call
push
sbb
jae
incl
pop
daa
add
add
inc
add
xchg
dec
pop
mov
xchg
bsf
add
inc
add
add
add
push
sbb
pop
stc
xor
decl
mov
mov
add
add
mov
stos
pop
addl
add
js
add
mov
mov
dec
mov
lcall
add
add
cmp
add
cmp
roll
xchg
addl
add
add
dec
imul
adc
jp
pop
adc
mov
sub
add
ja
sub
enter
adc
mov
add
add
mov
add
pusha
add
in
jp
rcll
xchg
xchg
movsb
add
dec
xchg
int3
js
add
add
and
lcall
std
daa
add
scas
xor
incl
add
and
decl
dec
sbb
add
mov
pushf
into
imul
add
pop
fst
pop
outsb
dec
rorl
xor
cld
lods
mov
mov
cmpsb
add
add
xchg
mov
add
add
or
xchg
popf
xchg
pusha
add
sti
mov
call
out
lcall
decl
adc
add
adc
pushl
add
mov
pop
add
popf
jge
add
add
into
push
jb
mov
and
lcall
add
outsl
mov
scas
sbb
add
in
mov
mov
add
add
add
push
ds
negl
pusha
add
stos
dec
sub
pop
push
xor
pushl
rcrl
outsb
and
call
pop
jle
add
and
mov
add
jp
fbstp
into
xchg
mov
les
mov
sti
mov
add
je
movsb
add
scas
cmp
add
add
add
incl
add
add
and
fnstsw
add
add
cld
and
jge
add
test
cmpsb
add
add
xor
ljmp
mov
adc
jmp
add
aas
cmp
add
decl
lea
add
mov
mov
xchg
adc
ljmp
icebp
and
ljmp
aam
add
out
fildl
add
or
mov
mov
pop
jl
add
hlt
add
jns
pop
lods
call
ljmp
les
pop
sub
outsl
pop
mov
pop
loop
dec
add
add
mov
adc
mov
add
add
fucom
add
add
out
cmp
cli
imul
ret
add
add
fldl
sub
add
add
js
add
ja
add
push
add
or
cmpsb
add
add
add
das
mov
mov
bound
incl
add
mov
sub
add
xchg
dec
insb
fwait
popf
scas
jp
std
fnstcw
mov
push
outsl
sub
data16
or
mov
cmpsb
add
add
add
xor
pushl
decl
lcall
decl
cmp
call
add
movsb
add
jle
add
push
jl
jg
add
pushl
idivb
aaa
in
fidivrs
mov
in
sub
bound
jp
sub
add
daa
add
pop
mov
add
sbb
cld
jle
aam
add
add
lds
mov
lds
push
data16
movsl
add
ret
sub
stos
sbb
push
mov
fsubrl
add
bound
jmp
jmp
xchg
push
jg
add
cmp
add
dec
call
add
jp
add
jle
dec
xchg
add
stc
xchg
incl
ljmp
dec
aaa
pop
icebp
shl
cmpsb
add
inc
add
test
test
xchg
inc
add
scas
rcrl
add
pop
mov
add
outsb
js
add
ret
add
or
ret
add
faddp
add
mov
roll
add
pusha
add
ja
cld
push
cmpsb
add
add
jp
mov
daa
add
cmc
in
pop
imul
rolb
dec
cmc
adc
pushl
push
ret
add
out
fisubrl
lcall
add
pop
nop
add
add
add
jae
ljmp
mov
ss
mov
add
xor
dec
and
inc
add
out
in
ret
pop
inc
add
aas
add
incl
jle
add
push
int
add
or
add
cmp
pushl
add
or
in
adc
ljmp
add
dec
ljmp
test
push
xor
jg
add
add
add
jmp
adc
call
or
xchg
movb
lock
in
outsl
popf
ds
inc
add
std
pop
mov
add
jnp
loope
ljmp
add
imul
xor
jge
xlat
test
add
movb
inc
add
xor
add
push
mov
and
call
add
loopne
add
jbe
pop
mov
outsl
sbb
jle
add
inc
add
decl
dec
cmp
ljmp
add
add
add
xlat
jecxz
dec
pop
jno
call
add
add
int3
fsubrl
add
fstl
push
add
push
decl
or
mov
push
add
mov
add
js
leave
loopne
push
xchg
int3
mov
mov
test
cmc
outsb
add
dec
mov
cli
movl
mov
lcall
mov
decl
and
std
stos
xchg
ret
add
add
ret
mov
add
movl
jmp
out
pop
add
add
inc
add
mov
add
lret
stos
fldln2
jmp
clc
add
incl
dec
xor
pushl
pop
pop
add
add
stos
addl
and
call
shlb
ljmp
fndisi(8087
add
add
mov
add
mov
add
add
pushl
add
sarl
pop
add
mov
pop
mov
pop
add
loop
test
addb
or
ljmp
xchg
arpl
call
mov
inc
add
in
xchg
addl
mov
call
add
addl
push
add
add
push
and
push
jo
fidivrs
stos
ds
mov
sub
add
repz
dec
add
add
or
movsb
add
dec
addb
inc
add
add
add
mov
int3
add
lcall
add
add
xor
call
add
jo
call
add
cmc
inc
add
or
mov
sahf
test
insb
jno
lcall
push
imul
popa
add
sahf
adc
and
cmp
or
add
mov
add
jl
scas
aad
and
dec
mov
mov
cmp
addl
push
das
push
push
push
or
add
push
add
xchg
mov
xor
jmp
add
or
mov
inc
add
addb
sti
add
add
dec
fbld
dec
test
pop
or
push
and
push
xchg
mov
ljmp
loop
adc
jle
imul
popf
test
push
ret
arpl
dec
sysexit
daa
add
lret
push
dec
fsub
add
call
inc
add
add
push
add
repnz
out
inc
add
dec
fnstcw
add
inc
add
test
add
loope
sarb
testl
add
cmc
in
and
cmc
dec
pop
adc
cmp
add
lcall
xchg
in
inc
add
xlat
popa
add
roll
add
add
negb
pushl
add
roll
sahf
test
lock
jle
add
inc
add
sub
mov
mov
loop
cwtl
adc
ljmp
mov
add
mov
add
add
xor
push
xor
add
xchg
push
lods
inc
add
add
arpl
fwait
dec
sbb
xor
call
xchg
and
xchg
push
lds
fistpl
push
addl
pusha
add
and
incl
into
xchg
loop
sub
add
fisubl
jp
add
add
sub
push
pushf
mov
add
cmpsl
add
out
arpl
out
xchg
in
fisubrs
outsb
pop
addb
call
mov
ror
rclb
mov
mov
jnp
add
and
call
jp
xchg
cs
jg
aaa
jb
pushl
add
mov
inc
add
les
pop
cld
iret
mov
leave
addb
mov
add
decl
cmp
add
add
loop
or
test
jns
jl
movl
popa
add
arpl
jmp
add
or
add
test
add
pop
movsb
add
lea
add
lock
add
cmp
adc
ljmp
aam
pop
mov
cmc
sbb
add
lods
jle
mov
call
rolb
mov
fistps
add
mov
sub
cmp
push
xor
call
ljmp
nop
pop
clc
add
push
ljmp
hlt
ljmp
jmp
add
cltd
in
inc
add
add
shll
add
and
incl
mov
add
incl
jmp
imul
add
lcall
add
xor
pushl
add
add
jno
cmp
addr16
jg
and
decl
add
or
sbb
jmp
mov
arpl
decl
mov
pushf
ja
test
lods
dec
push
rolb
out
mov
rcll
test
pushl
dec
lret
insl
or
push
add
jnp
jg
prefetch
or
add
sbb
add
cmp
les
cmpsl
add
insl
je
movl
add
fxam
add
push
in
dec
inc
add
dec
jl
add
push
movsb
add
sub
add
fiaddl
add
and
sbb
int
movl
dec
lea
add
stos
dec
pop
scas
or
add
lods
aas
adc
call
mov
xchg
add
push
xchg
sbb
push
or
popa
add
or
add
xchg
mov
and
jmp
pushf
incb
add
movl
add
add
movsb
add
inc
add
or
add
push
add
jbe
add
sub
add
into
add
xchg
stc
scas
sub
add
idiv
or
test
mov
inc
add
pop
add
add
or
add
add
pushl
and
lcall
add
pop
imul
sbb
out
das
inc
add
data16
inc
add
and
add
call
mov
add
mov
add
jne
sbb
add
jno
xor
add
or
add
loopne
mov
in
leave
loopne
test
lret
ljmp
mov
mov
movb
movb
lds
mov
loop
push
and
clc
xchg
sbb
sub
mov
fistpll
ret
add
jb
incl
add
push
or
pushl
add
pushf
xchg
add
or
add
push
add
pop
mov
push
jns
xchg
xchg
dec
test
pop
nop
movsb
add
add
and
dec
cmp
jbe
imul
push
add
cmp
add
sbb
cmpsl
add
inc
add
scas
adc
pushl
ljmp
xchg
or
xchg
add
incl
add
nop
jo
cmp
loop
ja
add
xchg
jno
ljmp
xor
add
add
call
pop
rorl
mov
aam
add
inc
add
xchg
addb
mov
add
dec
outsl
jle
enter
add
adc
or
add
add
ror
cmpsl
add
ffree
add
enter
pop
mov
add
adc
jmp
add
xor
decl
lds
movl
pushf
outsl
or
add
pushl
pushl
add
add
popf
sub
data16
mov
pop
xor
jmp
jle
add
add
add
insl
fsts
mov
pop
mov
add
lods
cmp
fisubs
add
and
ljmp
add
add
hlt
and
out
sub
mov
test
cmp
add
push
add
sub
sub
shlb
les
cld
push
imul
mov
push
push
add
mov
dec
and
dec
negb
and
inc
add
lret
or
incl
add
rcrb
add
push
add
test
lods
push
test
sahf
addl
and
dec
fsubs
inc
add
push
jge
add
repz
jp
repz
push
add
add
add
mov
dec
icebp
pop
mov
push
sarl
in
pop
xchg
mov
dec
xchg
movb
cmc
js
imulb
sub
inc
add
inc
add
mov
data16
mov
add
add
add
decl
arpl
std
fcomi
xchg
in
std
aad
addb
outsb
cwtl
popf
hlt
xlat
leave
adc
jmp
fs
and
push
push
add
mov
std
addl
pop
jecxz
cmc
fildl
jnp
dec
outsl
jecxz
jo
lcall
mov
fdivrs
add
mov
jp
or
dec
aas
fsubl
add
movsl
add
call
add
out
stos
jbe
add
pushf
rclb
decl
add
add
dec
dec
mov
nop
pop
add
mov
pushf
cli
xchg
loope
push
and
fwait
xchg
dec
or
mov
rolb
add
cmp
pop
inc
add
fisttps
add
pop
xchg
cmp
mov
add
mov
add
decl
add
inc
add
clc
xchg
pop
std
repnz
mov
push
add
lahf
rolb
jmp
push
add
dec
movl
aad
idivl
decb
incl
mov
xchg
xor
decl
pop
iret
adc
in
sbb
mov
dec
mov
or
inc
add
addl
rolb
decl
notl
add
imul
add
ljmp
push
add
push
push
lods
mov
pop
pop
ds
push
jl
rolb
stos
push
pop
add
add
out
movsl
add
mov
add
push
cmp
mov
hlt
sub
and
push
mov
xor
call
pushl
add
test
lods
mov
add
dec
xchg
mov
add
xor
push
mov
add
pop
mov
add
std
inc
add
loope
imul
or
add
cmp
add
incl
roll
add
test
test
add
add
xchg
out
add
add
cmp
stos
fldenv
sub
daa
add
add
inc
add
push
cs
add
add
cmp
pop
mov
xchg
pop
xor
add
add
or
adc
decl
add
pushl
lcall
jge
int3
loopne
add
pushl
add
fsubl
pushl
xchg
or
mov
pop
push
movsl
add
leave
adc
push
add
jle
movb
add
jle
ljmp
adc
ljmp
xor
pop
jg
push
jb
jl
add
loop
sahf
adc
call
ja
add
adc
ljmp
inc
add
xchg
adc
xchg
jl
mov
fistpl
add
add
daa
add
cmc
sbb
popf
lret
and
jmp
add
mov
icebp
sub
push
add
lods
outsb
sbb
jno
lcall
add
push
dec
and
incl
je
aam
mov
mov
or
repz
add
lahf
or
int3
mov
add
jbe
add
mov
add
xor
lcall
je
mov
mov
inc
add
add
addl
add
and
leave
inc
add
and
inc
add
push
aad
pop
fldl
add
xor
add
inc
add
jne
add
addl
add
mov
jae
call
jmp
add
mov
add
jmp
push
push
xor
add
jg
inc
add
repnz
adc
addb
aad
shr
jne
add
clc
pop
add
mov
jo
jmp
and
add
add
add
jmp
jb
mov
decl
mov
add
movb
fldenv
popa
add
mov
shlb
jmp
ljmp
sbb
jp
cmp
add
loopne
pop
add
mov
lock
and
incl
dec
int3
dec
jmp
decl
adc
mov
addl
int
adc
ljmp
pop
sti
inc
add
lods
mov
add
pop
add
add
loopne
addb
jg
test
push
add
mov
arpl
incl
decl
jns
push
ficoml
add
hlt
pop
jecxz
inc
add
sub
movl
sub
pop
scas
fwait
cmp
add
pop
mov
fcompl
dec
add
popa
add
loope
dec
jne
test
add
add
pop
out
addb
mov
pushl
push
ljmp
cmp
xor
pushl
add
sbb
add
hlt
dec
jae
ljmp
jmp
pop
rcll
imul
leave
adc
jmp
fwait
iret
sbb
data16
add
call
add
add
call
add
push
stos
pop
or
movb
and
decl
movsl
add
cmp
fimuls
jmp
inc
add
pop
add
xchg
inc
add
jp
and
ljmp
inc
add
pop
or
add
addl
add
roll
add
xchg
cmp
add
mov
xchg
and
call
sti
ss
mov
incl
incl
add
dec
loope
jnp
add
jmp
add
jae
call
fstpt
pop
adc
jmp
add
add
xchg
roll
pusha
add
fsubs
sbb
or
fsubrs
popl
jmp
jne
add
fistpl
movl
adc
incl
add
cmp
data16
ljmp
nop
inc
add
pop
cmp
sub
add
add
cmp
inc
add
dec
or
mov
leave
and
cld
fwait
aas
lds
mov
aaa
jp
jle
cmc
pop
add
add
movb
mov
add
decl
add
aad
inc
add
add
mov
add
insl
sub
push
add
insb
jbe
dec
pop
insb
jle
data16
inc
add
fdivrl
icebp
push
add
cmpsl
add
out
jge
into
and
push
cmp
out
stc
sbb
add
insb
mov
add
add
fistl
add
popa
add
mov
sbb
test
cmp
mov
sub
int3
je
jg
jg
fnstsw
sub
add
push
push
sahf
jbe
hlt
and
lcall
pop
sti
xor
ljmp
mov
add
jae
jmp
add
mov
xchg
push
sti
push
add
adc
and
addl
add
incl
incl
jmp
pop
add
or
adc
pushl
xor
ljmp
mov
push
dec
mov
or
add
in
cmp
xchg
mov
push
lret
call
push
push
add
daa
add
sub
or
ret
push
lock
mov
or
pushf
cmp
sbb
lock
add
pop
ja
jg
ss
add
lock
and
decl
xchg
std
in
aad
dec
pusha
add
add
add
sbb
add
jle
add
test
add
pusha
add
push
outsb
out
push
jge
cli
lea
dec
xchg
std
cmp
rol
add
add
add
xchg
lods
dec
and
call
add
add
cmpsl
add
add
xchg
outsl
xchg
add
lcall
add
jns
add
or
add
sbb
popa
add
push
jle
addb
add
push
add
dec
mov
jmp
movl
pop
sbb
add
pop
add
pushl
movb
add
fistpll
jmp
jge
add
xor
mov
push
iret
das
cmp
add
pushl
test
inc
add
jecxz
and
pushl
gs
mov
outsl
out
mov
add
add
std
aam
lock
jle
stos
mov
pop
cld
ret
add
cmpsl
add
add
dec
inc
add
add
add
cmp
sub
jmp
in
addb
cmp
inc
add
pop
add
add
adc
std
inc
add
mov
mov
add
mov
xchg
jl
add
add
pop
inc
add
add
jge
movsl
add
add
add
jle
inc
add
mov
add
fistpll
ja
add
incl
add
mov
mov
add
and
jp
add
scas
and
decl
mov
in
fimuls
and
cmp
add
jmp
lds
mov
add
xchg
lods
addl
jge
std
jbe
addl
add
call
call
scas
jns
add
nop
xchg
mov
add
dec
stos
mov
dec
dec
adc
incl
repnz
add
decl
xchg
add
add
xchg
pop
divl
add
and
jge
sub
out
aas
adc
sbb
addb
add
xor
js
add
imul
adc
addb
add
popa
add
push
lahf
movsl
add
add
push
ret
add
push
dec
popf
cld
out
inc
add
repz
out
xlat
mov
add
push
cmp
out
cmp
add
xchg
pop
cld
stos
bound
call
add
aad
pop
in
or
pop
lret
sub
add
push
mov
leave
xchg
mov
push
add
push
add
scas
loop
sbb
add
stos
div
fwait
pop
or
and
decl
xor
pushl
sub
mov
pop
add
lcall
notb
add
fnstcw
mov
mov
js
leave
cmp
or
loope
cmp
mov
add
into
movl
add
add
rolb
cmp
cmpsb
add
pusha
add
daa
add
bound
jmp
fcoms
cmpsb
add
jb
incl
pop
or
add
xlat
out
sbb
pop
inc
add
jp
add
cmp
into
adc
ljmp
in
ret
imul
test
lret
flds
cmp
clc
pop
add
sbb
popf
inc
add
pop
std
or
ds
mov
aaa
repz
in
insb
pushf
into
mov
into
pop
les
enter
add
pop
add
add
test
xchg
xchg
mov
add
adc
fcoms
mov
add
cmp
test
add
xchg
inc
add
ss
add
ret
add
js
and
incl
pop
xchg
adc
incl
jl
sbb
jmp
add
mov
add
ret
add
data16
add
add
jg
sbb
add
testl
add
dec
das
addr16
jecxz
push
xchg
repz
add
jnp
mov
mov
and
fisubs
add
mov
add
sbb
add
sbb
add
pop
push
add
cmp
add
fwait
add
sbb
outsb
mov
adc
pushl
ficoml
ljmp
inc
add
lcall
mov
jno
decl
aad
cwtl
ljmp
add
add
fisttpll
pop
addl
and
jb
jmp
add
adc
incl
jp
add
and
cmp
sbb
fidivrl
popa
add
and
lods
cmpsb
add
stc
sbb
cltd
dec
int3
add
ljmp
cmpsl
add
in
mov
jbe
add
icebp
push
inc
add
push
mov
mov
movl
add
enter
pop
in
mov
add
xor
ljmp
lock
paddw
jg
add
add
dec
jp
xchg
jg
add
sub
pop
xchg
or
add
xchg
lcall
call
jmp
aad
add
add
pushl
sub
test
sbb
add
add
jge
ljmp
dec
addb
jecxz
sub
aas
or
sub
incl
sub
add
mov
sbb
pop
mov
gs
inc
add
dec
adc
arpl
jg
sbb
push
add
add
add
xor
ja
xchg
push
add
cltd
imul
push
add
push
arpl
incl
push
ret
add
sbb
std
cmpsl
add
lds
jo
jge
add
lahf
call
mov
mov
test
js
out
jns
add
inc
add
scas
pop
adc
mov
daa
add
jecxz
jmp
add
jg
add
xor
push
add
jmp
add
popf
ss
add
clc
add
mov
stos
jno
dec
jns
add
movsl
add
pushl
add
mov
decl
jns
xor
pushl
fcoms
add
push
les
jmp
fs
mov
incl
add
and
call
pop
bound
jmp
add
data16
fdivs
push
movb
loope
icebp
xchg
sbb
mov
add
out
sbb
xor
mov
push
pop
add
add
cmp
add
or
cmp
ljmp
cmp
add
cmc
pop
mov
add
add
mov
adc
pop
add
and
pushl
add
fidivrl
add
popa
add
add
lcall
lret
add
mov
aam
add
push
sahf
dec
sub
add
pop
or
add
inc
add
push
lods
jle
add
inc
add
clc
push
add
scas
int3
mov
add
lcall
addr16
add
cmp
and
addb
or
add
push
mov
add
addr16
jo
decl
int3
cmp
sti
out
adc
incl
cmpsb
add
add
pop
dec
cmc
push
add
lcall
add
cmp
add
jmp
shl
jmp
push
add
punpckhdq
add
adc
add
add
incl
add
cmp
dec
faddp
add
lret
cmp
add
add
cmp
jp
xor
push
insb
jnp
add
ljmp
add
incl
into
inc
add
cmc
adc
imul
cmp
pop
in
inc
add
add
roll
pop
jecxz
aas
xchg
xor
out
push
test
call
addl
add
je
dec
scas
xchg
mov
add
js
or
cmpsb
add
push
mov
pop
ds
mov
mov
push
add
in
mov
repz
lds
pop
mov
jge
add
mov
inc
add
mov
jmp
xchg
popa
add
dec
cmp
add
add
decl
mov
add
inc
add
aam
mov
push
push
add
leave
les
outsb
sti
add
call
incl
inc
add
xor
incl
in
fistpll
xchg
lea
cmp
les
add
add
add
pushl
add
and
decl
add
adc
incl
add
call
call
dec
psubd
add
mov
out
loop
enter
add
scas
dec
movl
decl
in
push
jno
in
ret
push
jo
ljmp
fisttpl
jp
push
adc
jmp
add
stc
jo
stc
sub
add
mov
mov
add
jle
dec
roll
cld
bound
dec
pop
add
cmpsb
add
jne
into
daa
add
add
movl
push
push
add
int
in
adc
ljmp
and
lcall
jns
add
les
mov
in
fidivrl
inc
add
jmp
add
inc
add
add
lcall
fnstsw
mov
add
mov
inc
add
add
adc
pushl
ljmp
or
leave
mov
mov
add
jmp
push
add
adc
cld
add
jp
add
and
push
inc
add
into
addb
xor
jmp
or
add
push
in
addb
add
fistpll
add
add
mov
mov
add
shlb
add
sub
lret
xor
pushl
push
add
es
cmp
into
mov
push
add
add
push
add
xor
cmp
add
xchg
cs
inc
add
imulb
xor
stc
mov
xchg
roll
mov
adc
lcall
xor
add
jecxz
movl
jmp
add
ds
add
repz
call
cmc
ja
fsubs
pop
jecxz
sti
add
jmp
add
mov
cld
push
lcall
mov
add
add
push
add
mov
lcall
mov
and
jmp
add
add
adc
sub
add
decl
add
sub
addr16
data16
imul
dec
cmp
sahf
cmpsl
add
loopne
mov
addb
test
pusha
add
xchg
push
rcrl
mov
in
add
dec
mov
push
or
shll
add
fistpll
add
movsb
add
mov
cmp
add
jne
add
ljmp
sub
add
inc
add
bound
lcall
mov
and
call
arpl
lcall
or
addl
jg
add
icebp
xor
call
add
jbe
clc
push
imul
add
sbb
add
jmp
cmp
bound
jmp
add
add
cmp
daa
add
add
addl
cld
repz
mov
pushf
adc
pushl
jge
add
xchg
int3
or
add
cs
pop
je
roll
sub
add
int3
sbb
or
jle
add
pop
movsb
add
adc
ljmp
loop
add
jmp
add
mov
incl
add
mov
push
jl
aaa
mov
ret
add
repz
mov
imul
lcall
rep
aas
add
cmp
loopne
adc
dec
sub
adc
or
repnz
incl
lock
int
mov
add
fldenv
decl
stos
ss
push
in
jnp
add
add
add
pop
add
outsb
int3
fisubs
add
stc
push
add
pop
cs
mov
cmc
xor
inc
add
jmp
add
add
xor
decl
jmp
adc
mov
push
xchg
cli
pop
pop
mov
add
add
ja
je
add
push
or
add
incl
or
add
lcall
lock
clc
jns
add
decl
jmp
in
sbb
dec
imul
ss
je
pop
mov
add
jo
jmp
mov
dec
das
xchg
or
fsubrl
outsl
pop
shrb
call
add
enter
add
xchg
test
add
ljmp
in
out
sub
inc
add
inc
add
loope
test
aaa
icebp
dec
shlb
fcom
jne
add
mov
lcall
pop
pop
sub
mov
cltd
mov
add
test
stos
std
lods
xchg
dec
fbld
in
aaa
out
inc
add
stos
ss
mov
mov
add
les
add
add
imul
insl
hlt
fcmovb
add
data16
jnp
sbb
dec
push
cmp
pushl
add
dec
das
imul
dec
jmp
add
cmp
lods
movsl
add
jl
and
fldt
mov
clc
cmp
mov
adc
js
js
add
sti
mov
mov
scas
xor
incl
call
out
pop
dec
mov
adc
inc
add
lds
pop
mov
pop
bound
jmp
add
roll
jg
add
jg
or
cli
sub
xor
dec
dec
daa
add
addr16
jnp
rolb
ljmp
repnz
add
push
addb
outsl
ds
jl
add
sub
sbb
add
xor
and
mov
sti
pusha
add
das
stos
inc
add
add
ja
add
add
pop
pop
pop
sub
popa
add
movb
sub
sti
mov
add
inc
add
in
xlat
movb
add
cltd
mov
aaa
pop
lahf
xchg
xor
jmp
add
rolb
mov
filds
call
rclb
cmp
cmpsb
add
push
adc
pushl
add
call
jecxz
fstpt
neg
movsl
add
cmp
add
dec
iret
scas
int
add
std
pop
add
dec
push
add
add
add
roll
add
mov
movsl
add
xchg
inc
add
cmc
adc
lcall
call
push
jnp
push
and
decl
add
and
pushl
add
hlt
nop
mov
add
scas
divb
add
add
mov
iret
mov
xchg
call
fwait
addb
dec
jle
add
xor
ljmp
add
cld
or
das
xor
push
mov
pop
pop
rcll
lahf
lret
and
call
sarb
clc
arpl
pushl
in
ror
mov
mov
jp
and
ljmp
cmp
mov
jns
mov
mov
dec
loop
ror
stos
ficomps
dec
loope
mov
pop
sbb
fbstp
cmp
mov
add
sbb
dec
cmp
add
addl
mov
das
dec
sbb
add
mov
add
ret
add
test
in
out
inc
add
call
jmp
dec
punpcklwd
incl
inc
add
sub
out
fstl
add
test
popa
add
cmpsl
add
arpl
lcall
xlat
adc
mov
filds
call
add
and
jmp
decl
mov
jb
incl
add
pop
mov
mov
add
outsl
test
out
popa
add
das
lods
std
mov
push
call
add
fistpl
fimull
xor
lcall
dec
mov
cmpsb
add
xchg
into
imul
sub
scas
add
xchg
loop
jns
bound
decl
ds
add
jne
int3
add
cmp
add
lret
jmp
add
call
add
add
repz
cmp
jb
ljmp
add
add
jmp
add
and
ljmp
add
stc
popf
rcl
pop
pop
push
add
cmpsl
add
jl
add
jecxz
mov
mov
ror
in
push
aas
mov
sbb
add
cli
mov
push
inc
add
testb
addl
sti
fmull
add
jge
add
add
inc
add
int
add
aaa
ds
add
call
xchg
fst
dec
addb
add
call
ret
add
cltd
xchg
mov
bound
call
push
scas
mov
and
xchg
jle
lret
out
xchg
daa
add
dec
jnp
loopne
jae
jmp
inc
add
add
imul
add
push
add
sub
jbe
fnstenv
add
and
lcall
aam
out
insb
mov
in
mov
jb
pushl
into
add
ljmp
les
lret
xor
push
jl
add
or
dec
movb
add
repz
mov
add
pushf
pushf
dec
jno
jge
add
push
add
pop
fcomps
add
cld
lahf
cmc
out
jmp
add
sbb
xchg
mov
add
add
test
lcall
fwait
xchg
adc
fstpl
daa
add
xor
jmp
add
add
ljmp
roll
sbb
add
add
add
jbe
add
and
inc
add
mov
addl
add
add
mov
rcll
jnp
mov
into
pop
push
out
mov
fisttpl
sbb
add
lcall
jae
call
and
jmp
incl
add
add
add
lret
add
lea
add
loop
arpl
push
xor
inc
add
flds
push
rorl
jae
dec
cs
mov
stc
or
add
scas
cltd
nop
leave
into
mov
pop
ja
add
rolb
mov
cmpsl
add
jmp
decl
icebp
adc
aad
mov
add
movsl
add
pop
addb
out
int
add
add
adc
push
push
in
decb
jnp
add
add
ret
lret
add
dec
je
ret
dec
jno
jl
cmp
in
dec
hlt
ja
xchg
push
inc
add
outsb
outsb
push
addr16
xor
call
mov
sub
add
test
xor
mov
add
fmull
call
ja
or
add
jmp
add
cmpsl
add
push
add
add
dec
icebp
or
add
mov
daa
add
sub
inc
add
outsb
dec
xor
jmp
add
dec
mov
fisttpl
push
xor
add
add
mov
add
mov
clc
imul
add
xchg
int
jmp
add
add
insb
push
add
jg
pop
insb
outsl
sub
add
sbb
cwtl
es
add
into
or
lods
mov
add
rorl
add
mov
rorb
add
decl
add
add
xor
add
jmp
add
mov
movb
add
add
lods
adc
or
repnz
nop
stos
adc
dec
cmp
add
rcrl
add
inc
add
add
cwtl
rolb
mov
add
add
imul
add
incl
pusha
add
aam
add
xor
pushl
jmp
xor
mov
test
add
jge
mov
jle
add
mov
add
call
add
call
pushf
enter
decl
push
add
movsl
add
fldl
sub
or
addl
pushf
xor
jmp
add
ss
lret
xor
ljmp
sub
jmp
std
fmulp
mov
add
decl
mov
cmp
add
add
and
test
cmp
add
call
scas
arpl
lcall
or
add
add
outsb
add
add
dec
mov
add
xor
add
mov
push
add
add
dec
out
mov
mov
add
add
pushl
clc
pusha
add
jns
popf
inc
add
into
daa
add
lcall
xor
cmp
xor
pop
aaa
imul
cli
pushf
into
and
lcall
pop
sbb
dec
mov
ret
add
push
adc
incl
cltd
std
test
movsb
add
lock
cmc
pusha
add
inc
add
jg
in
repnz
add
mov
mov
cmpsl
add
incl
add
add
jp
add
in
or
adc
pop
inc
add
jecxz
mov
daa
add
mov
sbb
jo
lcall
cli
loop
dec
std
ljmp
sub
lock
cmpsl
add
enter
xor
call
jecxz
cmc
dec
addb
scas
test
mov
add
pushl
fldcw
xchg
inc
add
ret
add
addl
cmp
repz
add
cmp
add
xchg
cwtl
imul
cld
mov
mov
push
add
loopne
mov
stos
out
rcll
addb
add
adc
jmp
incl
mov
lcall
pop
das
test
jns
rcl
mov
cmp
rcrl
mov
add
mov
add
add
lcall
je
add
call
mov
push
add
pop
add
add
sub
add
mov
hlt
dec
fildll
dec
xchg
or
jmp
xor
clc
cmc
jmp
mov
add
add
add
xchg
aad
and
push
fsubs
hlt
sbb
loope
das
stc
icebp
mov
fistpll
pop
inc
add
xor
jmp
fiaddl
movb
add
sbb
add
pushl
decl
add
push
mov
add
out
insl
shl
add
or
add
add
add
jp
sahf
jns
or
mov
add
add
add
incl
and
std
dec
loop
jl
add
fldt
stos
mov
mov
add
dec
sbb
inc
add
leave
iret
dec
lock
lcall
xchg
or
add
add
inc
add
inc
add
cmp
add
adc
ljmp
mov
jecxz
cmc
into
cmp
nop
test
sbb
insb
enter
lahf
xor
incl
jmp
incl
stos
push
mov
add
mov
push
hlt
mov
add
cmpsl
add
jmp
add
add
decl
mov
add
dec
in
into
pop
lcall
mov
add
decl
jl
ja
movsb
add
mov
call
bound
push
push
mov
insl
mov
call
out
inc
add
and
adc
incl
add
xor
decl
mov
mov
add
xchg
leave
sbb
ss
cmp
dec
pop
shll
add
mov
add
xchg
adc
pushl
push
xor
jmp
add
incl
add
popa
add
stos
arpl
jl
add
add
mov
cmp
pop
add
jmp
add
add
inc
add
decl
add
arpl
incl
add
fcomps
xor
jmp
add
jbe
icebp
in
jp
or
sahf
add
incl
dec
outsl
hlt
sub
push
add
cmp
add
in
in
xchg
xchg
mov
add
rolb
sbb
add
pop
add
add
int3
add
sbb
adc
pushl
test
je
add
pushl
add
xor
dec
fwait
out
leave
mov
add
add
mov
add
out
lret
ljmp
ret
add
stc
xor
incl
adc
cli
inc
add
incl
jnp
adc
call
js
add
cmp
mov
xor
jle
cmpsl
add
add
pop
mov
adc
std
push
mov
or
xor
stc
outsl
inc
add
fldl
pushl
inc
add
ljmp
mov
mov
pop
sbb
inc
add
jl
or
ret
add
ljmp
add
popa
add
ss
stos
lea
add
cmp
incl
popa
add
repz
inc
add
pushl
call
add
add
iret
bound
jmp
add
rolb
push
add
outsl
out
mov
add
push
leave
pusha
add
sahf
mov
mov
inc
add
popf
inc
add
and
leave
dec
mov
add
fimuls
dec
xor
imull
mov
push
add
iret
and
lcall
ret
add
add
pushl
add
push
add
pop
jge
stc
jl
mov
inc
add
mov
mov
xchg
aas
mov
add
jl
add
cmpsl
add
cmpsb
add
and
pusha
add
mov
lret
xor
bound
ljmp
xchg
popa
add
jbe
dec
dec
or
jge
shl
int3
fldenv
lods
pushf
in
inc
add
xchg
pop
outsb
add
call
adc
iret
scas
outsb
sbb
lea
add
jl
add
add
add
pushl
add
scas
adc
mov
push
inc
add
dec
addb
lcall
add
add
lcall
scas
or
xchg
pop
int3
and
call
add
add
movsb
add
sub
adc
call
sbb
sbb
out
xor
pushl
dec
cmp
cmp
jmp
jno
cld
sbb
and
call
inc
add
jns
mov
sub
lds
and
mov
pushf
outsb
mov
add
into
pop
lret
sti
inc
add
jbe
add
inc
add
sbb
pop
add
dec
mov
pushl
call
incl
sub
add
daa
add
dec
sub
test
add
pushl
aas
inc
add
outsb
jno
lcall
sbb
je
int3
rcrl
std
int3
jne
invd
xchg
mov
push
movd
add
cltd
jb
call
aam
mov
jo
lcall
add
loopne
jmp
add
cwtl
out
or
lcall
add
pop
jbe
push
add
test
add
inc
add
popa
add
repnz
lcall
xchg
push
lea
add
add
add
xchg
jb
decl
add
mov
add
mov
push
add
mov
lock
dec
out
jmp
add
sarb
xchg
test
cmp
clc
aaa
aaa
repnz
dec
sbb
call
or
jge
in
and
jmp
scas
addb
add
rolb
into
sti
mov
imul
std
add
cld
roll
xlat
sbb
inc
add
jmp
mov
add
add
mov
and
sub
jo
call
adc
decl
inc
add
add
incl
jmp
add
mov
fstps
add
sti
xor
call
add
adc
dec
mov
sub
add
cmp
add
add
imul
ljmp
push
lock
out
pop
mov
jmp
add
movl
pusha
add
testl
cwtl
cld
adc
mov
in
ja
iret
xchg
sub
outsb
xlat
push
push
add
lods
or
push
push
ror
or
add
insb
test
addb
push
lods
leave
movl
mov
rolb
add
decl
loop
push
addb
add
decl
add
add
call
dec
xor
jmp
dec
pop
ss
add
xlat
mov
add
jns
je
rcr
arpl
ljmp
add
add
xlat
in
pop
xor
incl
add
enter
bound
lcall
in
push
lahf
mov
xchg
pop
jl
es
nop
cmp
push
data16
pop
nop
xlat
xchg
cmpsb
add
mov
lea
icebp
lock
mov
rcr
pop
repz
aad
cmp
into
call
movb
push
out
mov
add
divl
incl
hlt
jo
ljmp
cmp
sti
sbb
mov
pop
add
shll
sbb
cmc
cmp
loope
add
call
adc
cmp
add
mov
and
rolb
aas
mov
cld
jmp
xlat
or
out
stos
mov
fs
mov
jp
in
mov
add
push
mov
ja
sub
add
add
mov
add
loope
lods
call
add
add
adc
pusha
add
inc
add
addb
cld
mov
fnsave
push
add
nop
xchg
pop
push
add
pushl
add
pop
add
add
arpl
jge
add
hlt
and
decl
sti
fisubrl
dec
sub
add
push
add
push
add
add
add
dec
jno
jmp
add
dec
xor
call
lock
aas
rep
cli
dec
lcall
mov
push
add
fnstenv
insl
mov
dec
fcmovb
add
add
call
mov
mov
add
in
dec
add
xor
jge
mov
add
inc
add
xor
mov
cmp
dec
add
mov
movl
hlt
popf
sub
xchg
push
loop
or
scas
add
pushl
inc
add
dec
push
add
sbb
cmc
movsb
add
popa
add
jb
jmp
add
xor
or
add
outsl
push
out
add
add
sbb
mov
ja
aaa
shlb
adc
lcall
cmp
jecxz
arpl
call
xor
jmp
add
push
cmp
pop
or
pushl
ljmp
int3
enter
sub
sbb
pop
fst
push
ss
add
xlat
scas
hlt
pop
jmp
inc
add
pop
add
add
mov
aaa
in
mov
add
jl
addl
push
jle
loopne
int3
add
fcomip
lods
inc
add
enter
repz
dec
loop
jo
call
add
test
test
jmp
pusha
add
cmc
add
imul
add
rolb
add
and
ljmp
xchg
lock
and
adc
call
add
pop
mov
add
int3
mov
jecxz
out
fisubrs
jmp
cmp
pop
clc
filds
rolb
add
fsubrp
xor
decl
in
insb
pop
add
pop
gs
std
movsl
add
movsl
add
or
adc
sti
leave
mov
repz
add
mov
xor
push
pop
inc
add
mov
or
add
nop
jmp
add
add
mov
pop
add
add
add
fsubr
addb
pop
cmp
cs
push
xor
add
add
jns
push
mov
pushl
add
mov
lcall
dec
repz
mov
mov
push
ja
fdivrl
add
add
push
add
xchg
mov
add
pop
data16
add
out
pop
inc
add
sarl
add
xor
loopne
leave
mov
les
mov
je
mov
adc
push
cmp
jmp
add
out
xor
mov
and
inc
add
popa
add
sbb
inc
add
jmp
je
insb
cwtl
out
and
incl
cmc
and
jl
cltd
xchg
mov
add
add
pushf
sbb
add
aas
and
dec
call
add
sarb
xchg
mov
idiv
test
imull
add
push
sbb
add
ja
ret
push
add
sahf
push
push
add
jnp
jno
lcall
add
add
add
mov
inc
add
aas
jge
sarl
dec
test
mov
xlat
lcall
add
test
lods
push
jbe
add
call
add
mov
cmc
insl
addb
sbb
stos
sbb
sarb
fisttps
sub
sub
add
inc
add
jmp
push
add
push
fbstp
jmp
sub
jno
jmp
pop
pop
sub
add
mov
inc
add
add
imul
repz
je
dec
jmp
mov
into
decl
cmp
data16
cmp
add
call
loop
inc
add
hlt
push
das
fisubrl
sbb
imul
add
add
sbb
dec
out
gs
mov
add
insl
jbe
adc
call
in
rclb
add
fbstp
add
mov
add
mov
aaa
mov
mov
add
nop
xor
inc
add
insb
icebp
mov
aad
js
add
xchg
pop
in
stc
notl
xchg
or
stos
addl
add
decl
addb
inc
add
pop
sbb
adc
pushl
jnp
add
push
repz
and
ljmp
test
xchg
in
test
arpl
ljmp
xchg
cltd
icebp
lahf
fadd
add
add
mov
add
lret
mov
add
incl
add
jne
or
add
add
add
xchg
xchg
in
pop
rolb
add
sub
mov
and
incl
lea
add
dec
addl
fnsave
add
push
add
lret
repz
and
pushl
add
xchg
data16
arpl
call
cld
std
pop
push
sbb
inc
add
cmp
decl
add
dec
popa
add
add
pushl
add
jnp
pop
push
outsb
addl
mov
iret
shll
lcall
leave
lret
push
add
int
ds
xchg
scas
add
lcall
add
cwtl
jne
scas
sbb
repz
add
pop
mov
add
xor
lcall
push
outsb
push
or
loopne
mov
pop
daa
add
cmc
xchg
xchg
mov
add
cmp
lock
incl
inc
add
jl
xor
fistpll
stos
stos
mov
push
add
pop
pop
rcrl
add
cltd
and
mov
and
adc
incl
add
add
add
add
add
sub
pop
xlat
or
movsb
add
push
std
call
add
add
jno
decl
out
insb
inc
add
shld
add
pop
or
mov
or
add
je
add
inc
add
pop
push
in
addb
ret
arpl
pushl
fmull
notl
rcll
ljmp
pushl
loop
sti
push
xor
in
sbb
add
insb
sti
rolb
add
add
lods
nop
fnstsw
out
mov
add
add
jecxz
dec
cmp
add
pusha
add
and
push
mov
loop
push
movl
ljmp
add
cmp
mov
sub
jnp
or
call
cmp
daa
add
inc
add
add
push
das
adc
xchg
lea
mov
add
aas
loope,pn
xchg
cs
cmp
add
and
into
roll
sbb
add
call
pop
repnz
push
add
jmp
add
xor
movsl
add
push
cmp
add
mov
lcall
add
pop
pop
or
jge
call
in
mov
cmp
add
cmp
insb
and
decl
mov
decl
or
add
lahf
pop
mov
mov
add
xlat
fcomip
mov
jns
mov
icebp
sub
xchg
adc
lcall
loope
mov
paddb
add
mov
int3
jo
decl
addb
std
movl
xchg
pushf
cmp
add
lcall
mov
push
add
sti
lea
decl
add
add
lcall
jle
aas
xor
add
mov
rolb
jnp
int3
add
add
jge
add
sub
sub
xchg
xchg
xchg
fisubrl
mov
pop
fsubs
mov
jge
stos
aaa
dec
test
sbb
jmp
cmp
add
dec
mov
add
push
dec
mov
add
mov
add
das
cmp
mov
add
add
pop
add
mov
arpl
incl
add
inc
add
jne
mov
add
sub
add
xor
addb
add
jmp
xor
lcall
add
sbb
enter
das
roll
add
test
stos
adc
lcall
jp
jge
add
or
jmp
add
div
cmc
xor
call
add
out
adc
jae
pushl
roll
xor
ljmp
mov
xor
decl
dec
inc
add
or
add
loope
mov
inc
add
loope
aaa
pop
lret
call
insb
addr16
mov
popa
add
movsb
add
add
es
xchg
jmp
add
add
popa
add
add
aaa
jae
call
outsb
cmp
or
cmp
int
add
add
stos
sub
addb
and
movsl
add
add
in
inc
add
jae
call
ret
add
add
sub
add
adc
decl
adc
pushl
decl
or
add
pop
test
test
iret
sub
and
push
add
int
into
mov
push
add
ljmp
add
jmp
sub
ret
add
daa
add
add
mov
fmul
or
fisubs
jg
add
add
movsl
add
jnp
add
add
add
or
movsl
add
cmp
sub
ljmp
adc
ljmp
pushf
mov
add
xchg
aaa
psllw
add
mov
xor
pushl
addl
add
arpl
mov
sahf
out
ss
add
outsb
mov
add
xchg
xor
sar
mov
push
jl
dec
jg
iret
fwait
mov
add
add
jnp
add
out
icebp
xchg
xor
incl
xor
lcall
popf
xor
lcall
xchg
movsl
add
loope
sbb
mov
or
jl
fistps
jmp
xchg
lret
cltd
inc
add
add
popa
add
xchg
add
incl
pop
out
movsl
add
cmp
add
fstl
add
jo
inc
add
add
enter
incl
decl
bound
jmp
stos
shll
ljmp
adc
jo
fisubrs
add
imul
add
add
add
add
add
iret
cwtl
xchg
jle
add
inc
add
loopne
je
add
insb
or
add
roll
add
add
cmp
cmp
add
mov
pop
add
add
mov
fnsave
decl
cld
pop
cli
jge
shl
or
add
jmp
aad
cld
xrelease
addb
add
inc
add
mov
pop
mov
mov
add
or
dec
movl
jmp
out
mov
add
add
xor
jmp
push
or
lcall
jb
call
decl
sbb
add
push
add
add
test
dec
je
jne
add
push
add
fnstcw
mov
enter
cvtps2pd
jbe
cmp
sub
repz
addl
add
push
jbe
mov
add
add
fdivrl
add
stos
pop
cld
xor
inc
add
add
nop
dec
inc
add
inc
add
jno
push
mov
push
add
shrb
scas
xor
dec
mov
movsb
add
testl
add
jmp
addr16
loopne
or
outsl
pop
lret
mov
les
rclb
add
cltd
hlt
jne
lahf
imul
jge
add
push
dec
xchg
into
mov
ljmp
or
add
add
insb
xor
fldenv
sbb
add
sbb
jg
add
adc
jmp
add
push
lahf
movsl
add
in
fdivl
ljmp
add
ret
add
hlt
jmp
data16
addb
aad
add
mov
or
add
pop
lea
push
add
sub
dec
ret
add
sbb
xor
js
inc
add
xchg
xchg
jo
call
ja
add
fdivs
add
add
push
rcl
mov
push
adc
inc
add
add
ds
xor
dec
inc
add
lret
into
lea
pop
mov
cli
push
add
jle
das
dec
ret
add
maskmovq
notl
loope
outsb
mov
pushf
push
jp
mov
add
add
xor
dec
add
pusha
add
ljmp
sbb
sahf
jo
incl
lods
movl
out
pop
inc
add
mov
add
jmp
add
inc
add
jbe
sub
and
inc
add
je
cmp
add
daa
add
ret
out
push
pushf
and
insb
jle
test
popf
sbb
leave
jnp
add
arpl
decl
insb
dec
xor
xchg
sbb
or
add
ja
cmp
ja
add
decl
jnp
add
xchg
shl
add
jmp
add
xor
je
push
add
add
fwait
insb
or
add
dec
mov
add
into
stos
int
add
insb
push
add
fwait
jne
push
and
jle
add
add
call
dec
fldcw
add
add
mov
in
adc
call
incl
add
add
sub
add
add
call
dec
mov
jo
lcall
xor
add
push
arpl
inc
add
pop
push
dec
sub
and
lcall
sbb
and
add
call
adc
incl
outsb
and
jmp
repnz
outsb
movl
add
pushl
bound
fucom
add
loop
inc
add
or
jns
dec
insl
out
jle
add
filds
ljmp
cld
incb
insb
outsl
jle
loop
imulb
pop
push
dec
push
addl
pop
das
mov
pop
add
mov
addb
add
fwait
sahf
dec
or
idivb
add
push
add
or
lret
hlt
lds
add
lcall
xchg
cwtl
and
and
call
gs
roll
pushl
fcomps
jg
add
add
add
mov
jl
add
add
push
add
add
decl
out
inc
add
movb
add
ljmp
add
add
mov
mov
add
cmpsl
add
fiadds
add
movsb
add
pop
push
addl
mov
cmc
dec
js
fwait
ret
add
mul
add
pushl
pushl
xchg
iret
jmp
pushl
das
xor
add
add
mov
inc
add
xchg
ficomps
icebp
outsb
in
ret
xchg
pop
repz
cli
add
add
and
addb
pop
xchg
movb
add
adc
ljmp
jmp
jne
loopne
ljmp
and
lcall
daa
add
jecxz
sahf
inc
add
mov
lahf
leave
addb
push
xlat
add
call
call
adc
lcall
popa
add
jns
inc
add
out
cltd
sbb
call
incl
add
pop
paddsw
lcall
add
pop
pop
repnz
add
and
dec
inc
add
mov
push
movl
xor
add
sbb
add
or
inc
add
hlt
cmp
addb
sahf
xchg
xlat
xor
xor
lods
inc
add
xchg
mov
lcall
movb
add
ret
add
ja
add
je
stos
xchg
and
jmp
add
mov
mov
add
mov
test
or
mov
add
jp
pop
jmp
mov
xchg
and
add
dec
mov
repz
add
xor
incl
or
add
ret
add
cmp
out
mov
add
imul
sub
dec
xor
pop
int3
sbb
add
jle
or
inc
add
adc
jo
pushl
jmp
add
jp
inc
add
fisubs
ljmp
aas
ljmp
pop
jb
fistps
sub
add
mov
mov
out
xchg
xchg
in
or
hlt
lcall
mov
add
add
jp
mov
jp
loopne
mov
ljmp
mov
cld
jle
iret
push
add
dec
and
mov
jl
push
add
sahf
add
incl
addl
add
jb
jmp
add
inc
add
add
add
add
aad
push
icebp
rolb
add
sbb
add
cmp
mov
pop
in
dec
mov
jo
cli
jmp
push
dec
add
jmp
decl
add
pop
stos
mov
cmp
sahf
push
add
push
loop
pop
stc
mov
add
mov
mov
adc
sub
or
xchg
sub
add
pop
iret
pop
js
pop
push
outsb
pusha
add
or
incl
add
out
icebp
pop
xor
dec
xchg
dec
xchg
pop
movl
shrb
push
mov
inc
add
adc
jmp
call
imul
add
add
sti
push
sub
insl
ljmp
stos
mov
loop
jns
or
call
add
divb
movsl
add
lods
cmp
add
or
lock
cld
dec
mov
add
mov
add
movsb
add
inc
add
push
add
mov
aas
xor
jle
aas
js
aad
pop
and
lcall
test
scas
nop
imul
add
clc
jg
add
pop
cmpsb
add
add
mov
arpl
incl
adc
call
and
cli
cmp
repnz
pushl
incl
add
add
out
mov
add
jl
add
sub
mov
add
lea
add
inc
add
add
add
push
adc
aam
add
jmp
fnstenv
add
push
add
insl
push
add
mov
lods
je
push
out
and
push
cli
adc
ljmp
sbb
add
stos
dec
rcrl
iret
jg
daa
add
icebp
mov
add
lcall
dec
popf
lret
add
add
push
sub
add
xchg
flds
jg
add
sbb
jne
jb
inc
add
add
add
pushl
sahf
shl
leave
sbb
pop
rolb
pop
lret
ljmp
mov
popl
add
adc
incl
add
clc
out
sbb
inc
add
sbb
and
lcall
jnp
add
push
add
outsl
dec
sub
out
cmp
imul
add
loop
push
add
push
or
mov
jnp
inc
add
push
mov
out
imul
imul
add
aas
roll
lret
aas
dec
int
add
fnstsw
add
cmpsb
add
and
pushl
incl
add
out
movsl
add
add
jecxz
cmp
out
mov
pushl
mov
out
test
mov
fcmovb
add
add
add
add
leave
dec
fwait
mov
add
jge
add
push
xor
jge
add
cmp
add
and
call
pushf
lock
add
sti
mov
add
jp
add
lds
repnz
add
jmp
fstpt
add
loopne
push
popa
add
mov
daa
add
mov
add
mov
popa
add
data16
add
in
in
jae
pushl
sub
arpl
call
call
lcall
pop
add
add
add
or
fisttpl
nop
loope
lds
sbb
add
out
mov
sub
push
test
push
rcl
movb
aaa
mov
mov
add
mov
cwtl
fwait
xchg
fimull
daa
add
add
add
loope
fdivrs
add
dec
mov
jne
add
lcall
ss
add
outsl
dec
nop
enter
std
jno
jge
add
xchg
cmpsl
add
in
dec
pop
dec
in
mov
add
iret
pop
jae
jg
pop
or
js
bound
call
add
shll
xchg
imul
in
insl
arpl
push
sub
jmp
add
xchg
sbb
pop
push
push
mov
enter
mov
pop
fcmovbe
sbb
add
add
add
xchg
dec
cmp
push
add
scas
aad
stc
xor
incl
mov
add
aas
xor
incl
jmp
add
stc
push
das
push
add
mov
add
add
jb
call
add
mov
add
cs
sbb
cli
les
inc
add
data16
mov
mov
add
es
add
incl
decl
insl
xchg
xchg
sahf
jg
push
mov
xchg
shl
add
xchg
inc
add
pushl
pusha
add
lods
test
test
push
inc
add
cmp
ljmp
mov
leave
push
into
jbe
into
ret
bound
incl
in
das
jg
add
pushf
test
mov
icebp
loopne
pop
aas
sub
aam
add
xchg
mov
aas
loop
add
call
add
test
iret
cmp
rorb
jg
add
ficoms
or
pushl
pushl
add
add
jmp
ljmp
sbb
add
rcr
pop
push
aam
add
lcall
sub
xchg
jmp
jmp
addl
leave
sbb
mov
push
add
call
add
cmp
int
add
dec
ds
or
ds
and
mov
pusha
add
or
add
adc
push
push
or
incl
mov
adc
dec
call
call
jo
lcall
jmp
add
or
popa
add
call
dec
cmpsb
add
pop
add
xchg
lock
add
add
rcr
pop
cmp
add
add
int3
and
jmp
add
jnp
loop
dec
pop
loopne
or
add
xchg
hlt
sbb
lret
decl
push
add
clc
add
adc
add
std
dec
jb
lcall
cmp
xchg
ljmp
cmp
add
add
add
mov
push
add
repnz
pushl
scas
sub
mov
loopne
mov
movb
addb
adc
jmp
test
out
pop
mov
clc
add
stc
addl
pop
imul
dec
addb
inc
add
cwtl
hlt
push
mov
jg
ja
cwtl
and
cmp
dec
imul
decl
ljmp
cmpsb
add
add
fdivrl
jge
in
jbe
inc
add
fs
les
fadds
add
mov
xchg
popa
add
lods
int3
xchg
and
dec
cmp
incl
add
mov
addl
jbe
jge
int
int3
dec
loope
add
lret
adc
call
add
push
add
push
in
nop
mov
add
out
xlat
xchg
jmp
add
imul
add
mov
add
mov
inc
add
pop
mov
insl
aad
lods
aad
fdivrs
add
mov
add
sahf
movl
imul
jmp
add
push
imul
pushl
call
add
daa
add
jecxz
sbb
add
jecxz
pop
sbb
push
add
ss
cmp
push
add
bound
incl
ljmp
dec
mov
test
out
sub
aam
out
jns
add
dec
and
add
ljmp
add
test
int3
add
decl
imul
pushl
add
iret
or
lcall
inc
add
add
or
decl
add
int3
cmp
mov
repnz
pop
cmp
decl
mov
jle
add
shl
add
data16
mov
add
fwait
adc
inc
add
add
inc
add
dec
push
add
decl
lea
pop
jecxz
push
pop
add
jae
ljmp
addl
pop
and
lcall
jmp
ret
add
xchg
add
decl
movsb
add
jg
push
add
inc
add
mov
add
ljmp
add
add
add
fcmovb
add
add
or
fldcw
mov
pop
pop
adc
push
fdivrl
lea
add
loop
dec
mov
pop
mov
ljmp
add
dec
mov
adc
pushl
add
add
call
dec
add
call
lds
cmp
adc
jmp
add
cmp
add
push
add
add
aad
add
fs
mov
in
cs
add
add
popa
add
rorl
add
movsl
add
mov
das
dec
leave
stos
inc
add
cmp
ljmp
mov
dec
lret
cmp
xchg
pop
adc
data16
cmp
imul
push
push
fsubrs
xchg
mov
stc
push
add
cli
pop
fadd
add
add
add
scas
or
jge
pusha
add
inc
add
xchg
cmp
filds
pop
add
and
sbb
mov
add
decl
int3
add
jo
inc
add
out
mov
add
movl
sbb
js
hlt
adc
add
add
pop
xlat
add
jg
sbb
dec
dec
out
and
lcall
jo
push
pop
add
fnsave
add
daa
add
add
sub
mov
add
or
add
cmp
add
movsl
add
cli
jb
push
loope
adc
decl
mov
mov
insl
inc
add
add
out
or
insl
lahf
invd
jecxz
mov
and
xor
lcall
mov
add
and
decl
test
dec
fsub
add
add
frstor
decl
mov
jns
add
add
call
call
pop
test
xchg
cmpsb
add
adc
jno,pt
jns
cmp
jle
fwait
push
xor
out
xchg
shlb
ljmp
add
xor
ljmp
xchg
and
incl
movsb
add
jb
jmp
add
enter
or
sub
add
xor
call
add
sbb
cli
sbb
pop
popa
add
or
add
adc
fisttpl
in
push
inc
add
movl
add
lret
call
add
incl
decl
add
jae
call
add
clc
adc
jmp
notb
cmp
add
sub
jg
add
aas
les
pop
jl
pop
popa
add
jmp
lods
popa
add
pop
decl
add
testl
cld
aaa
cmp
add
stos
arpl
pushl
add
jb
inc
add
add
xchg
lods
test
add
pushl
add
call
jns
jmp
push
addb
add
add
mov
xchg
cmp
add
add
add
dec
mov
mov
add
cmp
or
xchg
xor
lcall
add
dec
lods
mov
ret
add
dec
and
call
add
daa
add
jmp
add
out
out
push
cmp
testb
lret
add
insb
xlat
roll
xchg
add
add
dec
cmc
push
add
add
pop
jp
add
scas
mov
mov
xor
ds
sub
movb
add
xchg
or
add
mov
sbb
enter
sbb
cmpsb
add
mov
mov
jg
add
ljmp
pop
xchg
test
sbb
add
lret
stc
ljmp
or
lods
mov
add
push
jnp
sbb
add
add
add
cmc
cmp
or
incb
xor
call
aam
lods
mov
and
call
hlt
scas
movl
cmp
add
add
rcll
jmp
add
pushl
add
rolb
cli
xchg
add
incl
adc
lcall
push
add
xchg
jb
call
mov
movb
mov
incb
add
dec
or
das
push
add
and
cltd
xchg
pop
mov
test
jno
call
mov
addb
rorb
push
mov
dec
xor
inc
add
sbb
add
or
movsb
add
mov
stos
and
shlb
or
or
xchg
movsl
add
or
incl
add
nop
data16
add
mov
loop
rcl
ljmp
incb
mov
call
sub
add
cltd
lock
stos
lock
movl
add
in
lahf
lock
pop
aam
add
add
add
add
ret
add
add
fisubs
add
iret
jp
jnp
add
stc
addl
pop
xchg
push
add
cmp
pop
xchg
adc
add
sbb
and
or
cmpsb
add
jmp
jnp
lods
xor
call
mov
arpl
jmp
add
jge
mov
add
inc
add
shl
leave
lods
pop
data16
add
add
add
xchg
loopne
xor
add
add
pushl
dec
sbb
decl
dec
xchg
mov
jbe
outsl
jbe
das
cltd
jge
add
out
ud1
bound
pushl
sarl
popf
fiadds
pushl
add
insb
jo
in
mov
lcall
or
push
add
shr
fidivrs
ja
push
adc
loopne
xchg
lcall
outsl
mov
js
mov
hlt
fisubrl
add
add
or
add
add
add
jmp
and
repz
jge
fimull
sbb
popl
add
mov
pop
add
jmp
add
jmp
es
add
nop
sub
lds
in
push
add
testb
xchg
addr16
sub
jmp
mov
hlt
fwait
insl
xchg
pop
daa
add
dec
pop
fldenv
add
mov
inc
add
dec
jns
add
sbb
add
fsubs
int3
jg
xlat
int
clc
or
les
push
outsb
mov
add
aad
add
add
addl
les
mov
push
hlt
les
lret
ret
mov
add
rorb
insb
jno
call
jmp
mov
sbb
lret
add
decl
or
add
mov
add
cmp
add
int3
jl
add
dec
mov
outsl
mov
jo
jmp
mov
cmp
leave
jmp
add
pushl
icebp
adc
add
insl
test
xor
add
loop
out
stos
push
mov
push
add
cmpsl
add
stos
adc
ljmp
leave
adc
decl
mov
dec
jg
inc
add
jno
jmp
cmp
lock
sub
add
push
add
dec
push
add
inc
add
ljmp
pop
popa
add
push
add
outsl
aad
add
jne
mov
push
stc
dec
adc
call
incl
decl
pop
pop
add
incl
insl
out
dec
iret
fbld
decl
inc
add
imul
inc
add
call
lcall
mov
roll
das
insl
lahf
push
jge
add
jno
push
addl
add
adc
add
jb
out
cmp
add
add
add
inc
add
dec
add
lahf
fisttps
lret
in
icebp
add
call
or
test
add
ljmp
shll
jmp
add
pop
dec
xchg
jmp
lret
call
and
call
decl
mov
decl
out
xchg
push
sbb
add
mov
dec
lcall
lcall
dec
adc
incl
lock
jle
add
dec
cmp
call
jle
inc
add
mov
or
mov
lahf
int
in
ror
push
aaa
adc
decl
loope
movl
add
fsubl
add
ja
add
add
mov
lds
add
ljmp
incl
add
dec
int
sarb
rol
add
nop
jne
roll
jae
decl
addb
add
std
inc
add
dec
and
call
push
pop
add
clc
mov
pop
add
call
jle
jmp
mov
or
pop
add
adc
inc
add
pusha
add
add
add
jle
xchg
test
jmp
add
cwtl
dec
inc
add
or
xor
call
xchg
ret
add
add
inc
add
add
xlat
pop
aam
or
xlat
or
add
ret
add
add
add
cwtl
push
pop
aaa
xor
fstl
ljmp
jae
incl
test
loopne
adc
inc
add
dec
mov
mov
jecxz
inc
add
ficompl
popf
mov
jns
add
add
xor
ljmp
push
mov
cmpsl
add
shlb
ljmp
add
adc
jmp
out
inc
add
or
mov
add
add
in
dec
xlat
jp
add
mov
or
int3
add
incl
add
sbb
add
jb
pushl
ja
add
dec
imul
jecxz
mov
mov
xchg
lods
jne
adc
add
in
add
sbb
xchg
mull
ljmp
or
add
push
cmp
add
push
push
cmp
add
arpl
jmp
data16
xchg
std
movl
into
xor
incl
add
pop
clc
std
test
jl
fisubrs
add
ds
aam
js
add
add
sub
add
inc
add
or
in
dec
add
out
pop
sbb
lret
inc
add
fsubl
add
add
fcoms
add
test
dec
add
jecxz
loopne
push
popa
add
loope
fcmovnb
add
or
mov
xchg
ret
aas
dec
addb
lods
adc
call
add
repnz
call
sbb
add
rcl
mov
ljmp
sub
cld
push
inc
add
or
mov
ret
add
neg
mov
adc
mov
aad
add
add
sbb
aaa
rolb
lcall
in
pop
pop
jmp
push
add
xor
movsl
add
arpl
lcall
inc
add
lret
jmp
add
pop
xor
call
add
mov
mov
lcall
testb
out
add
incl
add
push
add
xchg
sbb
pop
push
out
ss
out
dec
js
mov
push
push
add
mov
sub
icebp
ret
add
add
cmp
add
sbb
or
fdivrl
hlt
stos
fstpl
dec
xchg
jl
cmp
add
inc
add
jle
or
add
int
fucomp
mov
pop
lret
clc
movl
mov
push
cmp
add
xchg
dec
jns
xchg
mov
add
jmp
ficoml
add
insb
je
add
cmc
movb
inc
add
xchg
add
jmp
add
out
and
inc
add
inc
add
incl
add
inc
add
shl
add
lret
jl
pop
int3
mov
insb
mov
add
clc
ss
fdivrs
add
enter
inc
add
lea
and
dec
lods
ficomps
add
pusha
add
cmp
add
cli
jecxz
push
hlt
rcrb
xchg
add
call
rcrb
add
or
add
sbb
add
in
dec
rolb
add
pop
in
repz
add
aas
shl
add
shll
out
xlat
sub
add
pop
movb
push
cmp
je
add
mov
call
out
cmp
test
pusha
add
xchg
add
addl
add
jo
lcall
xor
ljmp
ss
add
ljmp
sbb
add
adc
call
mov
inc
add
aam
add
cmp
push
cli
imul
decl
add
push
add
aad
and
mov
decl
push
add
push
sbb
jge
jno
inc
add
add
dec
lock
dec
xor
add
dec
mov
cmp
add
or
add
cs
adc
decl
imulb
roll
stc
push
push
add
cmp
add
xor
cmovae
jmp
call
imul
out
pop
xor
inc
add
testb
pushl
add
into
movb
add
pop
adc
add
lods
bound
cli
pop
add
jb
push
test
in
popf
movb
add
xchg
jo
call
add
mov
repz
push
add
imul
faddl
mov
test
pop
cmp
stos
and
call
jmp
add
lods
mov
