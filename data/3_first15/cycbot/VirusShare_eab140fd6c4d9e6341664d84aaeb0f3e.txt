cmp
dec
inc
mov
mov
mov
into
dec
loope,pn
cwtl
test
fildll
divb
add
ljmp
push
xchg
popa
xchg
js
leave
ss
add
xchg
add
mov
sbb
out
or
xchg
daa
js
lods
push
fldl
adc
mov
mov
sub
repnz
rolb
mov
out
jg
add
jl
fld
add
sbb
adc
mov
mov
dec
sahf
add
add
jae
dec
test
popf
addr16
movsb
addb
xchg
neg
sahf
push
add
out
and
mov
xor
xchg
and
aam
imull
lahf
cmp
movsb
enter
mov
add
fstpt
push
mov
mov
or
mov
iret
and
sub
data16
sub
sti
adc
dec
cmp
movsb
sbb
stos
xor
popa
inc
or
add
repnz
mov
lret
adc
out
jmp
rolb
mov
cmp
xchg
add
adc
mov
pop
lret
mov
data16
mov
mov
jo
mov
mov
mov
or
mov
mov
add
mov
test
ss
add
sbb
jb
mov
xor
mov
dec
adc
mov
mov
add
mov
mov
inc
jg
pop
xchg
sbb
push
xchg
adc
mov
rorl
ret
dec
jle
out
movsl
jae
cmc
mov
mov
add
jmp
ljmp
mov
ret
fimull
inc
add
adc
mov
outsl
aam
xchg
add
mov
mov
xor
mov
add
fmuls
inc
insl
movsb
out
mov
add
cmpsl
jbe
sub
adc
iret
adc
movsl
je
outsb
mov
add
add
sub
push
ret
lods
das
int
jl
add
iret
sub
jge
out
sub
xchg
cmp
fidivs
mov
lock
add
ss
adc
mov
mov
mov
mov
add
repnz
push
adc
mov
sbb
ret
stos
and
stos
push
and
inc
clc
dec
mov
add
mov
frstor
push
adc
addb
idivb
add
mov
cmpsl
pop
ljmp
aaa
cmc
push
fcomi
repnz
cmp
and
mov
add
xlat
cli
fcomps
add
mov
lock
jge
out
mov
sbb
rolb
mov
adc
mov
add
sub
add
imul
push
sbb
test
pop
jae
xor
pop
je
pop
shrl
test
dec
lcall
nop
add
cmc
inc
mov
jp
addr16
in
jp
jnp
aaa
out
es
int
add
mov
xlat
repnz
mov
xlat
push
add
ljmp
sub
add
mov
jmp
adc
add
add
dec
add
or
outsb
aad
inc
nop
add
mov
pop
ret
push
add
addb
sub
add
stos
jae
adc
add
daa
mov
mov
pop
sub
insl
mov
int
addr16
aad
push
xchg
sub
add
mov
mov
decb
pop
nop
add
int
and
mov
stos
insl
jmp
mov
mov
mov
dec
dec
testb
daa
data16
add
in
sahf
pushf
je
add
das
push
inc
sub
ss
fsubr
pusha
add
sbb
testb
jle
scas
andl
mov
stc
dec
push
movsb
fisubrl
jl
xorl
cwtl
js
pop
test
or
sti
sub
mov
mov
push
lret
and
mov
cld
jnp
add
xor
mov
inc
clc
push
or
pop
das
dec
xlat
mov
out
stos
jo
mov
cmp
and
mov
mov
mov
pop
movsb
xchg
loope
scas
fisubrs
das
xor
lret
fsubr
or
insb
dec
mov
lods
inc
add
jb
mov
add
lods
flds
mov
push
cli
loope
imul
mov
repnz
aad
push
add
mov
arpl
orl
cmp
add
insl
stos
cmp
mov
inc
call
xor
mov
cmp
mov
push
sti
push
xlat
ret
pop
bound
mov
cmc
addr16
mov
aas
mov
loope
in
or
out
jge
jle
nop
add
int3
push
and
mov
cmp
addr16
add
dec
inc
add
xchg
pop
hlt
imul
cmpsl
xor
mov
xchg
jne
scas
adc
add
jle
and
pop
mov
sbb
add
sub
mov
iret
lea
test
add
mov
xchg
push
or
adc
mov
mov
inc
inc
xor
gs
xchg
arpl
sub
mov
cmp
mulb
mov
leave
popf
shl
decb
mov
mov
mov
or
sahf
cltd
add
fcoml
mov
add
pop
push
and
lret
cmp
add
lret
ds
add
sbb
into
mov
jns
pextrw
test
enter
std
outsl
test
pop
pop
xchg
add
mov
add
fsubrs
stc
adc
mov
dec
iret
or
add
cmp
or
das
xlat
mov
and
mov
fstps
in
dec
test
mov
dec
push
inc
scas
movsb
mov
add
pop
mov
dec
mov
cwtl
push
push
xchg
inc
pushf
push
insl
jmp
jecxz
in
jne
sub
inc
push
add
add
addb
push
lcall
xor
mov
mov
jne
or
push
cmpsl
mov
addb
jnp
out
aas
aam
push
popa
rolb
test
jbe
mov
mov
push
xchg
xchg
cs
lahf
fwait
jl
and
add
lret
ljmp
push
dec
int3
push
loope
or
fimuls
fwait
mov
push
aam
inc
call
test
out
data16
add
add
mov
mov
pushf
push
sbb
xchg
in
lret
add
mov
add
add
pop
std
insl
mov
mov
add
mov
mov
rolb
mov
hlt
pop
or
mov
mov
push
add
testb
test
or
repz
dec
inc
add
mov
xchg
enter
std
push
adc
in
movsb
add
add
push
push
push
push
push
cld
call
sub
es
movzbl
cmp
ss
push
push
call
mov
cmp
je
es
lea
cs
sub
mov
push
es
call
test
jne
jmp
leave
push
es
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
nop
lea
lea
sub
add
mov
sub
sub
push
pop
push
je
jmp
add
add
mov
inc
jecxz
cmpsl
adc
add
mov
vpaddusw
mov
fcomps
or
es
movsl
mov
cltd
mov
jle
out
push
sub
add
jl
shll
inc
inc
adc
js
sub
mov
fcmovnu
mov
lcall
add
xor
mov
mov
add
in
adc
push
mov
or
mov
mov
mov
pushf
and
add
push
add
scas
pop
in
pushf
inc
add
add
rolb
mov
call
iret
lcall
add
hlt
adc
addr16
cmp
push
call
gs
je
jmp
adc
mov
cltd
inc
jp
inc
out
mov
inc
add
and
mov
ret
sub
jmp
add
add
cmp
dec
pop
cld
sbb
dec
sub
xlat
and
add
jmp
add
fnstenv
scas
inc
dec
inc
cmp
jmp
xor
mov
lock
out
pop
jmp
add
mov
add
mov
stc
stos
pop
jne
add
in
rcrl
pop
push
mov
cld
bound
mov
add
jne
iret
dec
pop
jne
xchg
sbbl
add
out
add
mov
mov
add
or
mov
data16
push
mov
aam
mov
sub
fildl
add
test
js
dec
sbb
add
add
sbb
xor
dec
mov
cmpsb
push
sub
add
das
testl
mov
fs
rolb
mov
shl
addb
add
add
add
jno
sub
bound
mov
add
pop
test
mov
les
add
xor
mov
lds
mov
movsl
arpl
ret
jno
into
pop
or
mov
add
fistpll
sub
mov
mov
mov
in
mov
mov
mov
in
movsb
mov
call
js
push
add
pop
add
int3
ret
nop
add
add
mov
hlt
icebp
dec
push
add
mov
test
fs
mov
nop
add
jo
mov
fistpll
inc
xlat
lock
dec
out
pop
sub
pop
out
pop
sbb
das
xchg
mov
loope
add
mov
das
adc
xchg
negb
mov
add
negl
mov
rolb
mov
aas
pop
mov
add
mov
mov
popa
xchg
xchg
adc
std
aam
jbe
cmc
lcall
add
sar
or
xchg
add
add
add
les
add
out
or
test
aad
jno
ss
mov
rolb
mov
test
call
add
mov
and
cmc
data16
add
sbb
or
add
jbe
cli
dec
or
loopne
mov
add
inc
cli
mov
addb
clc
test
das
fildll
inc
add
or
add
nop
add
mov
addr16
out
push
sub
pushf
in
jne
mov
repnz
addb
mov
mov
jns
add
mov
mov
add
add
loope
loop
mov
mov
push
sbb
add
add
mov
or
inc
sar
add
movntps
test
mov
mov
sbb
add
shll
popf
mov
sbb
adc
add
pop
out
js
xchg
ss
sarl
and
mov
mov
les
arpl
xchg
add
adc
mov
add
xor
mov
jb
mov
xchg
mov
mov
fidivs
push
in
cltd
outsl
and
jo
mov
in
mov
jbe
mov
fs
gs
rolb
mov
xchg
mov
mov
mov
mov
rorl
mov
fnstenv
or
mov
pop
pop
cmp
sbb
add
or
filds
in
push
mov
add
mov
aam
fwait
inc
add
inc
into
cmp
mov
lods
nop
add
mov
call
add
mov
add
xchg
pop
push
pop
cmp
add
mov
lock
add
mov
add
lds
push
xor
push
or
push
adc
mov
xor
mov
mov
cmc
push
in
movsb
inc
xor
loopne
mov
fcoms
inc
add
lahf
add
mov
push
jnp
sub
mov
pop
xor
inc
push
inc
mov
add
icebp
sub
es
inc
movsl
cmp
mov
add
outsb
jmp
jno
rcr
pushf
pop
xorl
sub
jns
dec
mov
lahf
adc
sbb
inc
xchg
mov
mov
test
mov
xchg
push
pop
and
mov
push
mov
loopne
mov
fsubrp
out
add
inc
cmpsl
add
add
fsts
mov
mov
ja
and
sub
enter
mov
pop
pop
pop
mov
or
ljmp
xlat
inc
mov
mov
pop
rolb
mov
sub
jl
xchg
xor
mov
jbe
loop
mov
jle
xchg
add
lea
fstl
mov
ret
cld
pop
push
mov
iret
dec
cwtl
dec
dec
xlat
and
stos
loopne,pt
mov
add
repz
lock
inc
mov
adc
mov
insl
sahf
test
add
mov
inc
lds
mov
mov
das
rolb
push
add
and
lret
lock
int
daa
or
sub
les
test
in
fcmovnb
add
mov
add
add
mov
mov
mov
addb
aas
imul
dec
cmp
add
fwait
inc
dec
lahf
or
add
dec
imul
pusha
add
rolb
mov
bound
mov
rcrl
adc
std
and
mov
cmp
int
scas
add
xor
mov
pop
jo
mov
mov
mov
dec
mov
repz
add
cmpsl
stc
nop
add
mov
add
insl
push
mov
ret
mov
jne
add
mull
xor
test
sbb
mov
mov
jo
mov
jl
cmp
mov
loope
xchg
and
loopne
mov
inc
iret
sub
add
mov
fisubrs
scas
cmpsl
mov
in
mulb
sbb
add
mov
mov
pop
sub
pop
iret
popa
sub
mov
jbe
inc
mov
insb
xchg
jg
int
mov
cmpl
lods
arpl
and
mov
add
mov
cmp
cmp
jae
sbb
add
cmc
push
inc
add
cmp
mov
sbb
add
mov
adc
xor
in
fsubrl
cmp
in
jle
mov
add
pop
add
adc
mov
scas
nop
add
leave
xor
mov
mov
add
xchg
add
dec
sub
xor
loope
iret
pop
mov
test
daa
je
dec
mov
sar
addb
jecxz
push
add
add
push
add
xchg
lahf
push
movsb
fcompl
dec
mov
ljmp
add
cli
and
mov
add
popf
xor
add
sub
cs
lds
repnz
or
add
push
jge
xchg
fidivrl
pop
xchg
stos
mov
movsl
mov
xchg
test
mov
mov
lcall
pop
outsl
mov
mov
cmp
addr16
inc
std
adcl
in
bound
mov
add
scas
cmp
out
shrl
in
add
int
add
sti
xor
mov
ss
sbb
dec
dec
cmp
cmpsb
sub
mov
mov
xchg
add
mov
jae
test
addr16
cltd
lods
or
add
ljmp
pop
jae
enter
test
mov
les
add
push
cli
dec
push
cmp
inc
add
sahf
ret
lea
add
add
push
mov
mov
add
out
rolb
mov
xchg
add
pop
dec
int
and
add
mov
scas
xchg
push
add
sbb
inc
add
out
xor
mov
ljmp
xchg
add
jle
pop
mov
push
xlat
ja
call
push
jne
je
mov
add
xchg
out
push
lds
in
mov
jne
adc
mov
mov
add
lcall
mov
mov
cmp
add
inc
inc
dec
lahf
add
cmp
adc
mov
sub
shll
jp
sbb
pop
sbb
into
fcmovne
test
add
and
mov
std
xchg
mov
test
out
or
push
ds
xchg
mov
jl
icebp
mov
jbe
sbb
cmpsl
stc
mov
in
loopne
mov
mulb
gs
sub
call
add
add
xchg
and
add
add
add
mov
xor
mov
cld
test
or
mov
add
inc
lea
add
imul
add
lahf
fidivrl
scas
mov
sbb
sub
push
cwtl
jae
dec
addb
cmp
xchg
dec
fldlg2
add
mov
and
adcl
mov
cmp
mov
sbb
add
dec
jo
mov
mov
mov
add
xchg
xlat
sahf
out
jle
ret
test
sub
inc
add
loopne
mov
lods
in
nop
add
enter
add
push
leave
popl
xchg
and
mov
adc
mov
rolb
mov
xchg
cmp
into
dec
jne
add
mov
mov
mov
push
add
fnstcw
rolb
mov
jmp
add
mov
mov
xchg
add
jb
mov
pop
xchg
add
sahf
addb
xchg
and
mov
out
adc
xchg
fstps
xor
xchg
dec
rcl
clc
sbb
aad
xlat
int3
dec
outsb
test
add
jmp
cmc
sbbl
movsb
mov
lods
push
pusha
add
mov
push
dec
lret
adc
mov
jb
mov
mov
cmp
insl
and
mov
popa
xor
mov
xchg
add
pop
inc
add
adc
mov
ja
test
add
outsb
push
popa
sbb
out
sbb
and
mov
add
sub
pop
or
fmul
or
mov
ret
inc
add
add
stos
je
mov
mov
push
pop
int
lcall
add
or
jnp
inc
jmp
xlat
sub
ja
fisubrl
inc
add
mov
jp
lods
movsb
lahf
push
popf
mov
cmp
cwtl
pop
mov
lcall
inc
add
add
mov
call
lods
mov
mov
mov
mov
cs
jo
mov
xchg
or
inc
mov
nop
add
xchg
or
add
or
jl
add
mov
sahf
xor
mov
cmpsl
rolb
mov
test
fisubl
lods
addb
jp
add
imul
jb
mov
lea
add
testb
mov
pop
jne
aas
add
xchg
int3
xorl
into
clc
or
add
xchg
imul
rolb
mov
cltd
lcall
add
jae
sub
mov
add
adc
push
test
jb
mov
and
xchg
adc
add
mov
inc
xor
mov
add
jb
mov
test
xchg
add
shrl
pop
add
add
stos
mov
pop
stos
jno
or
adc
mov
out
adc
test
mov
add
xchg
lods
rolb
mov
rolb
mov
fsub
add
xchg
add
in
into
xor
mov
add
add
int3
xor
dec
negb
bound
mov
add
xchg
mov
mov
mov
add
mov
mov
aam
and
sbb
mov
or
mov
inc
and
mov
adc
sub
popf
and
mov
hlt
pop
fisubs
test
mov
push
popf
adc
dec
mov
sub
add
incb
rolb
push
jo
mov
shll
dec
sub
popf
adc
add
enter
push
ret
pop
fistpl
mov
mov
and
lret
mov
add
mov
filds
repnz
pop
pop
inc
mov
pop
mov
in
add
mov
push
fbstp
add
push
lods
rolb
hlt
imul
lods
es
mov
add
sub
add
add
mov
adc
dec
mov
push
jb
mov
mov
add
push
add
mov
inc
add
repz
add
addb
or
mov
inc
ss
mov
cmp
fdivrl
pop
call
pop
out
cli
push
pop
pop
cs
enter
int3
mov
test
mov
jmp
adc
int3
jmp
push
sub
add
and
fldl
add
xor
push
add
lods
xchg
test
mov
pop
pusha
add
test
movsb
xchg
fildl
fidivrl
mov
scas
sbb
add
mov
add
add
addb
repnz
add
xchg
leave
sahf
cmp
mov
add
cmpl
add
mov
cmp
lret
mov
push
add
jbe
add
ds
jge
pop
push
add
add
add
xchg
dec
or
lds
ja
xchg
cmp
mov
pop
add
mov
add
mov
mov
cmpl
lcall
mov
aad
adc
rolb
mov
jl
xchg
lcall
fidivrl
inc
shll
add
mov
mov
sub
popa
xchg
inc
add
add
mov
ds
loop
mov
dec
xchg
mov
jb
mov
test
inc
test
test
repz
mov
add
push
clc
mov
cs
add
mov
add
je
mov
outsl
sub
imul
mov
mov
nop
add
scas
dec
and
mov
cmpsl
sub
xor
mov
sarl
testb
add
add
mov
scas
cmp
push
ljmp
vcomiss
add
xor
insl
pop
insb
push
add
add
mov
sub
push
loope
stos
sbb
imull
push
popf
lahf
xchg
lods
cmp
push
and
popf
pop
in
inc
movsl
xchg
add
mov
xor
add
mov
ss
fidivs
sbb
pop
ret
push
int3
sbb
add
sub
pop
enter
add
pop
sub
add
rcrl
je
rolb
enter
xchg
mov
mov
int
push
add
daa
mov
mov
cmp
cmp
sbb
pop
xor
mov
mov
pop
mov
push
push
mov
mov
add
aad
aam
es
leave
mov
mov
cmp
add
add
dec
inc
xor
pop
and
add
mov
insb
loope
ret
arpl
and
sbb
icebp
les
call
mov
add
lock
mov
cli
sub
dec
fistpll
or
cmpsb
cli
pop
repnz
push
shl
cs
lock
stos
mov
scas
jnp
add
iret
call
bound
mov
cltd
inc
mov
iret
mov
cmp
lret
repz
movsl
push
xchg
movsl
inc
data16
xlat
add
dec
mov
mov
lods
xchg
cli
nop
add
add
mov
in
jle
ret
cmp
add
mov
pop
aas
dec
jne
cwtl
std
scas
nop
add
jns
push
jecxz
add
scas
dec
add
add
mov
mov
clc
scas
push
jae
xor
mov
add
cmpsb
push
je
jae
imul
addb
imul
adc
mov
add
in
lea
push
add
fisubs
push
mov
inc
add
xchg
mov
in
fstl
jg
addb
jne
adc
or
add
add
xor
movsb
ja
add
mov
cmp
iret
xchg
inc
dec
mov
test
push
repz
loop
mov
xor
or
mov
xchg
add
mov
mov
mov
insb
sub
mov
xchg
fidivrs
adc
add
std
das
cmp
adc
mov
push
scas
push
call
mov
cmpsl
rolb
outsl
cld
mov
sub
aas
pop
or
xchg
add
mov
inc
and
add
push
xor
adc
imul
xchg
jns
mov
ss
scas
dec
imul
insl
or
inc
add
call
jg
mov
add
fstpl
add
and
mov
shll
dec
dec
pop
xchg
push
pop
adc
mov
xchg
sub
stos
rcl
mov
sub
fsubl
mov
jge
dec
icebp
scas
and
js
sbb
and
aad
add
mov
pusha
add
mov
arpl
wbinvd
in
adcl
xor
mov
push
add
mov
mov
stos
or
int3
jecxz
push
add
pop
rcrl
enter
pop
mov
imul
and
cli
flds
mov
mov
lret
in
mov
imul
add
add
add
mov
or
add
mov
lds
mov
mov
push
mov
sub
in
in
bound
mov
or
cli
push
out
lret
jmp
add
fnop
add
faddp
and
call
es
fstl
mov
or
pop
push
add
add
mov
cwtl
cs
adc
dec
jo
mov
mov
add
add
jne
stos
push
push
aaa
dec
cmpsl
add
lock
add
and
mov
stos
cmp
xchg
add
mov
addb
cmpsb
sbb
sub
test
dec
cmp
lcall
in
rolb
mov
adc
call
sbb
mov
mov
adc
adc
add
fadd
ficomps
test
fdivrp
out
bound
mov
push
mov
xlat
pop
xchg
call
xor
lds
mov
push
add
mov
xor
aad
jnp
add
mov
pop
daa
adc
mov
add
call
add
mov
xchg
cmpl
mov
popa
call
std
push
add
pop
jge
loopne
mov
add
mov
in
std
inc
add
sti
inc
mov
out
mov
jbe
fidivl
mov
aad
pop
mov
pop
filds
stos
pop
adc
cmp
push
pop
jecxz
insb
lret
addb
add
mov
add
or
pop
call
std
sbb
aam
fs
incl
mov
sub
test
addb
loope
dec
jnp
pop
out
fwait
mov
push
addr16
add
mov
push
clc
rcl
mov
mov
mov
decb
cmc
or
inc
insb
inc
add
mov
in
pop
inc
and
xor
mov
mov
and
add
das
frstor
inc
add
jnp
cmp
xchg
cmp
push
repz
add
jno
nop
add
or
les
mov
add
bswap
xchg
push
out
mov
icebp
in
repz
jne
outsb
cmpl
mov
push
repz
in
les
jb
mov
add
push
push
jb
mov
xor
icebp
mov
mov
fadd
enter
mov
add
mov
jp
out
xor
mov
sub
pmaxsw
push
fwait
mov
mov
pop
xchg
jg
jb
mov
addb
cmp
icebp
jns
add
xchg
loopne
mov
dec
lcall
dec
imul
ljmp
pop
xchg
ret
stc
add
mov
mov
stos
mov
jmp
or
repz
sbb
in
pop
scas
push
sub
mov
fnstenv
add
add
add
and
mov
add
add
inc
cmp
adc
add
xorps
jmp
addr16
add
xchg
add
mov
mov
mov
movsb
inc
push
dec
jne
and
add
mov
mov
and
mov
hlt
xlat
jno
pop
test
cltd
sub
sbb
mov
mov
xchg
push
pop
je
push
add
mov
mov
or
scas
sbb
cli
jno
mov
sbb
mov
add
in
stos
xchg
aad
jecxz
fisubrs
xor
mov
inc
adc
or
adc
mov
cmpsb
ret
mov
mov
add
mov
add
cmp
mov
cli
xor
mov
inc
add
mov
test
pand
push
sbb
sub
xor
xchg
lret
adc
mov
cmpsl
les
add
mov
add
jns
clc
sub
sbb
sub
or
sbb
jnp
cltd
pushf
sti
mov
add
dec
aad
ret
adc
add
add
dec
clc
add
mov
ficomps
xchg
xchg
mov
lahf
ljmp
mov
mov
mov
mov
cmp
test
mov
jne
iret
sbb
inc
add
mov
add
es
int
inc
add
add
mov
xor
sahf
and
mov
mov
xchg
das
cmpsb
mov
push
xchg
ficomps
sub
leave
xor
sbb
add
imul
leave
jmp
out
fisttpll
add
sub
lcall
mov
addb
lcall
add
mov
mov
jae
popf
push
sub
mov
call
adcl
popl
add
fiaddl
pop
dec
xor
add
mov
add
add
out
jge
stos
xor
mov
setnp
inc
mov
push
add
or
add
add
mov
shll
data16
mov
pushf
call
sub
mov
clc
cmp
outsb
sub
xchg
add
pop
xchg
imul
xorl
sbb
mov
add
aas
cmpsb
add
lahf
and
mov
dec
js
mov
aam
cltd
je
fucom
xor
mov
cs
mov
insl
arpl
add
push
add
mov
mov
in
call
xchg
mov
xchg
inc
test
pusha
add
jl
xor
repz
out
mov
mov
mov
and
mov
dec
sbb
sbb
add
lahf
mov
push
jge
add
add
add
out
xchg
cs
pop
sahf
xchg
lahf
lcall
clc
sub
clc
lds
dec
imul
mov
push
jp
add
xor
xchg
loop
mov
or
and
mov
hlt
pop
add
mov
rcl
sub
leave
ret
lcall
and
leave
bound
mov
mov
inc
push
sbb
add
mov
mov
push
mov
dec
pop
inc
test
mov
jmp
or
sub
insb
jl
movsb
adc
les
rolb
test
movsb
bound
mov
add
mov
add
mov
mov
pop
outsl
mov
add
lret
add
mov
add
mov
mov
inc
pop
cmp
xor
les
xchg
or
add
mov
pop
std
movsb
or
es
push
push
loop
mov
xor
mov
sti
testl
imul
inc
add
add
lea
dec
push
ret
stos
sub
mov
push
out
xchg
jge
sbb
inc
add
fwait
xchg
pop
ret
sti
sub
shll
test
mov
shll
pop
mov
cmp
test
add
mov
sub
pushf
push
add
and
mov
add
iret
popa
adc
push
clc
loopne
mov
inc
add
cmp
rolb
cld
movsl
fistpl
repz
dec
jge
or
add
xlat
xchg
rolb
mov
cmp
jns
addb
clc
mov
ret
sub
outsl
adc
pop
or
add
add
add
push
dec
mov
mov
or
inc
add
mov
cmp
test
mov
jecxz
lods
lahf
imul
ret
ret
mov
dec
popa
test
das
inc
add
cwtl
sbb
cmp
arpl
neg
sbb
insl
xchg
mov
and
mov
jne
imul
mov
int
push
mov
sbb
add
in
pop
add
mov
mov
add
sub
cs
or
add
xchg
and
data16
into
push
in
ljmp
mov
sub
jae
jecxz
mov
mov
and
lods
or
pop
xor
push
jae
ret
leave
adc
mov
das
inc
mov
add
mov
add
add
aas
je
cs
int
sbb
and
data16
mov
xlat
movsb
xchg
xor
add
lret
mov
mov
push
add
clc
mov
fldpi
or
and
mov
fcomps
xor
pushf
push
aaa
mov
add
jecxz
cmp
fwait
push
inc
add
pop
inc
or
mov
jae
add
mov
arpl
mov
or
add
mov
into
shll
add
mov
ljmp
int
adc
fnsave
mov
add
mov
xlat
sub
mov
cmp
ret
cld
movsb
or
lcall
mov
add
inc
adc
mov
jb
mov
jle
stos
fcoml
icebp
or
push
pop
testl
adc
jl
out
mov
xor
mov
sbb
mov
addb
aaa
mov
mov
push
pop
jl
cmp
scas
cmpsl
fbld
push
bound
mov
shll
sbb
test
cmp
add
pop
xchg
push
arpl
mov
add
jno
mov
call
xchg
jecxz
outsb
add
popl
mov
jo,pt
mov
call
dec
jge
add
sbb
movsl
push
stos
aas
jnp
cmp
movsb
cmp
adc
mov
mov
push
or
mov
pop
lret
jle
push
xchg
xchg
add
sub
add
ja
jns
fcoms
xchg
add
jg
daa
pop
dec
div
ret
mov
mov
xchg
pop
xchg
test
fistpll
mov
mov
faddp
outsb
test
sahf
jmp
jmp
enter
inc
xchg
mov
and
mov
loop
mov
adc
mov
pop
nop
add
loopne
mov
mov
adc
lahf
or
add
outsl
subl
adc
insl
bound
mov
movsl
daa
icebp
cmp
aam
mov
in
jge
dec
jmp
mov
mov
lds
add
push
dec
mov
add
jmp
xor
pop
fildll
insb
mov
push
pop
jnp
add
ss
aad
add
or
out
out
fisubl
lods
or
add
mov
push
pop
push
ret
rorl
add
mov
adc
xchg
gs
mov
adc
adc
xor
mov
push
adc
mov
test
mov
xchg
add
add
dec
mov
mov
cltd
std
insl
mov
test
jne
lret
add
pop
ss
aam
xchg
dec
jl
fcomps
dec
ds
dec
mov
test
mov
stos
dec
pop
sahf
pop
inc
jecxz
push
in
daa
aad
ljmp
dec
add
add
cmp
push
sub
test
loopne
mov
inc
add
addb
xchg
pop
xor
mov
fwait
xor
and
mov
mov
js
bound
mov
inc
mov
pop
cmpsb
and
mov
push
add
mov
dec
pusha
add
inc
addr16
cmp
cmc
rolb
mov
xor
xchg
movsl
add
out
mov
cwtl
negl
push
stos
pushf
xor
rolb
mov
fldt
add
push
jmp
add
mov
cmc
adc
mov
stos
pop
cltd
fidivrs
lods
gs
inc
repz
stos
push
testl
cs
xor
mov
or
aas
add
mov
or
pop
xor
je
mov
cli
jle
and
sub
jns
jo
mov
add
mov
add
cmp
insb
je
mov
mov
xchg
stos
js
ljmp
pop
in
popf
std
jne
and
idivb
mov
add
mov
incl
push
lods
jecxz
push
rolb
mov
or
pop
leave
and
ja
add
xchg
add
inc
jae
sbb
push
and
rcll
add
test
pop
jge
push
add
fpatan
mov
popf
ud2
dec
rolb
ss
pop
imul
fidivs
mov
mov
xchg
cmp
jecxz
jb
mov
lods
xor
push
add
add
imul
mov
and
add
pop
fsubrl
ds
shrl
lds
add
bound
mov
dec
lahf
or
repz
mov
mov
gs
mov
add
mov
or
ficomps
cmp
mov
sbb
imul
push
and
jl
cmp
sbb
inc
pop
jecxz
scas
movsl
inc
in
and
mov
mov
xchg
fprem1
jl
aam
scas
adc
xchg
jnp
cs
add
loopne
mov
sar
in
add
sub
lret
add
aad
jmp
addl
xlat
inc
call
mov
addb
fcomp
dec
xor
mov
in
or
mov
adc
jbe
jne
sbb
xchg
adc
mov
and
fiaddl
dec
dec
xor
nop
add
xchg
into
das
in
and
insb
les
jnp
rcll
add
mov
sub
mov
or
jl
arpl
add
fsubrl
ds
popf
add
add
cwtl
iret
pushf
cmp
add
stc
push
in
sub
imul
xlat
sub
sbb
mov
rolb
cmp
testl
add
popf
mov
aas
xchg
rolb
mov
add
mov
add
mov
aam
in
push
xchg
add
inc
mov
mov
jl
fwait
stos
xor
mov
dec
outsl
enter
sbb
fs
dec
xor
mov
in
mov
sub
add
lds
push
cli
dec
jbe
xor
in
sub
push
mov
pushf
xchg
add
leave
push
aaa
shl
mov
and
mov
pop
insb
pushf
lret
imul
push
cmpsb
adc
push
adc
mov
rolb
mov
stos
ss
push
mov
fists
add
stos
adc
mov
mov
std
mov
mov
stc
push
push
ds
cltd
outsl
or
or
mov
add
mov
cmp
push
mov
add
mov
add
clc
addb
dec
lcall
rolb
mov
scas
xchg
cmp
push
cmpl
jmp
add
lods
add
add
iret
jo
mov
mov
test
add
insl
lods
and
mov
xlat
xor
es
add
mov
lret
shll
ljmp
adc
xor
ss
mov
fadds
add
jne
pop
mov
add
mov
mov
aad
scas
push
add
sbbl
add
lahf
mov
bound
mov
dec
pop
int3
xchg
pop
cmpsb
push
add
mov
jge
add
enter
push
mov
add
or
adc
mov
mov
xlat
jno
into
push
inc
jmp
lcall
sbb
mov
add
loope
add
clc
das
aad
jo
mov
add
add
out
adc
add
mov
mov
in
imul
test
fwait
mov
mov
es
push
aas
pop
and
jb
mov
mov
xor
xor
leave
jae
and
mov
mov
push
in
add
notb
stos
fists
xlat
bound
mov
add
cmc
test
mov
adc
xchg
or
add
or
add
mov
add
sub
mov
ljmp
sbb
inc
add
push
cmp
add
invd
pop
enter
mov
cmpsl
xor
ret
in
sahf
rolb
out
jge
insl
inc
inc
stos
mov
push
add
jecxz
cmc
leave
jecxz
mov
test
lods
fldenv
cld
mov
push
in
xor
test
add
add
dec
pop
mov
cmc
or
les
ds
xchg
enter
cmp
xchg
fistps
adc
xor
arpl
add
rcll
jmp
sti
dec
rolb
xchg
push
mov
xchg
sti
cmp
and
pop
cmp
add
mov
rolb
mov
or
imul
fdiv
pusha
add
xorl
aaa
xchg
cmp
mov
pop
jmp
adc
xor
mov
mov
add
jns,pt
subl
aad
add
add
xchg
add
add
mov
mov
pop
mov
mov
fnstsw
sub
rolb
mov
push
mov
cmpsb
popa
mov
jle
xchg
mov
aas
push
mov
add
sti
js
scas
jp
lea
add
mov
fs
inc
add
jo
mov
ret
addb
sub
aad
push
add
addl
imul
mov
push
xor
mov
lods
inc
add
test
stos
fidivrs
mov
add
xchg
sbb
aad
imul
mov
push
push
addb
pop
test
mov
mov
es
dec
rcll
sub
cmp
xor
scas
int3
or
inc
test
mov
xchg
add
add
test
cmp
inc
cmpsl
sbb
insl
jecxz
adc
jl
inc
add
lods
mov
popa
in
pop
cmp
test
mov
out
popa
xlat
fists
mov
rolb
mov
repz
push
add
pop
outsb
gs
cmc
les
arpl
mov
pop
out
xchg
adc
mov
sahf
sbb
and
mov
inc
xor
mov
dec
pop
int
stos
fisttps
mov
add
out
sti
movsb
and
ficoms
aad
mov
jo
mov
xchg
add
push
clc
mov
pop
mov
add
out
in
lahf
sbb
add
or
add
xor
leave
outsb
pop
fdivs
mov
add
aas
mov
add
loope
ret
mov
cld
xor
mov
and
mov
mov
rorl
out
sbb
sbb
jg
push
cmpsb
push
sub
pop
xchg
cmp
add
add
mov
push
enter
lret
gs
inc
xchg
sub
adcl
loope
add
add
add
mov
mov
imul
mov
xchg
inc
add
mov
mov
jno
scas
sbb
fadd
xchg
out
and
test
add
or
and
mov
cmp
add
and
rolb
mov
pushf
mov
mov
add
cwtl
mov
mov
add
mov
popf
xchg
pop
inc
jmp
fwait
sub
add
push
mov
mov
adc
adc
gs
outsb
add
repz
mov
mov
jg
inc
ss
push
mov
out
cltd
mov
pop
int3
sub
mov
dec
stos
inc
inc
outsl
push
mov
sahf
ja
js
imul
push
add
add
sub
dec
push
add
pop
sub
mov
sub
add
add
mov
mov
add
loop
mov
and
jg
sahf
shl
in
rolb
mov
add
mov
push
mov
loope
leave
push
sbb
add
mov
insb
mov
mov
addr16
pop
fistpl
sub
repnz
cltd
xchg
push
add
scas
dec
jbe
add
push
into
mov
or
add
lods
dec
push
push
aam
xchg
adc
mov
aas
jg
mov
das
rolb
mov
mov
cmp
dec
rolb
jecxz
push
je
cltd
xchg
pop
sub
mov
push
lods
cmpsb
xlat
dec
rolb
mov
fsts
add
lock
test
adc
mov
test
add
jmp
insl
mov
mov
xchg
push
xchg
push
loopne
mov
lock
fdivs
sbb
dec
cmp
outsl
xchg
test
pop
fwait
cmp
sub
mov
jb
mov
xchg
add
lahf
cwtl
xchg
addb
mov
mov
sub
dec
add
dec
adc
add
addb
lret
add
mov
roll
add
int3
icebp
jo
mov
aad
and
mov
mov
mov
imul
and
push
mov
sbb
lods
pop
clc
xor
outsl
and
mov
push
add
call
jne
addb
bound
mov
mov
loopne
mov
dec
jp
pmaxsw
cmpsl
cmp
mov
adc
add
add
push
push
popl
add
ljmp
xor
mov
add
repnz
lea
add
mov
pop
push
add
insb
cmp
sti
xor
sbb
mov
mov
test
xor
jne
xor
and
add
add
add
rcll
mov
stc
sub
add
mov
inc
fidivs
mov
mov
les
mov
sbb
xor
ret
fs
add
rolb
mov
add
cs
lock
sub
mov
mov
add
xchg
pop
stos
loopne
mov
mov
mov
add
mov
mov
lods
mov
mov
lcall
push
and
sub
sti
cmp
inc
aam
mov
mov
add
mov
xlat
pop
stos
mov
mov
mov
mov
push
cmp
into
jno
sub
in
cmpsb
mov
ljmp
mov
add
cmpl
inc
mov
push
xchg
mov
add
adc
mov
add
add
cmpsb
lahf
mov
mov
ja
push
mov
pop
in
mov
jae
add
sti
cli
push
push
imul
stc
bound
mov
mov
loopne
mov
mov
adc
mov
add
add
and
mov
fidivl
push
add
inc
add
add
mov
mov
mov
sub
pop
cmpl
call
or
insl
lods
mulb
mov
dec
mov
mov
mov
decl
sbb
inc
inc
add
sbb
mov
lock
ds
and
lds
mov
push
pop
ret
jne
int
push
push
loop
mov
add
shl
mov
shll
add
test
pop
icebp
mov
push
xor
aas
stc
lahf
or
xor
mov
js
xor
lcall
or
adc
cmp
cld
dec
sub
add
mov
mov
lods
mov
mov
and
cmp
add
add
mov
add
add
add
sbb
mov
ret
jo
mov
add
lea
add
loopne
mov
dec
xor
jnp
push
in
int3
pop
adc
stos
cmp
add
fwait
adc
int3
pop
jecxz
in
jl
mov
out
pop
sbb
mov
add
loop
mov
mov
xor
push
fcom
enter
mov
sub
stos
lock
shl
dec
fisttps
inc
jl
sti
stos
pusha
add
sbb
dec
stos
iret
jns
gs
adc
lret
in
adc
ljmp
mov
pop
jae
call
dec
fwait
aas
adc
scas
bound
mov
jg
lods
mov
add
test
jbe
outsl
out
jae
add
out
lcall
das
fdivl
mov
fildl
mov
xchg
adc
dec
mov
mov
mov
and
out
hlt
shll
mov
jae
and
mov
add
sbb
add
clc
mov
mov
add
add
mov
sbb
pop
or
mov
mov
scas
outsl
or
add
mov
pushaw
add
jo
mov
mov
or
push
pop
mov
push
sbb
pop
bound
mov
in
loope
addb
push
je
adc
mov
jae
dec
lock
mov
xor
cmp
mov
jge
mov
mov
mov
adc
and
mov
dec
xchg
shrl
sar
aaa
jp
sti
sbb
adc
mov
test
cmovle
add
icebp
adc
jns
add
in
push
adc
lahf
fiaddl
and
mov
add
jne
dec
cld
mov
dec
or
add
mov
cmp
fisubs
add
js
xchg
mov
adc
xor
lds
fldenv
adc
loop
mov
imul
pushl
mov
push
add
mov
add
fsub
fnsave
xor
mov
ljmp
or
xor
mov
outsl
push
mov
leavew
xlat
adc
movsb
adc
mov
loopne
mov
mov
mov
xor
mov
mov
mov
or
in
inc
rolb
mov
pop
daa
and
stos
outsb
mov
mov
out
mov
repnz
es
in
jae
add
add
add
std
mov
add
out
mov
push
cli
mov
sbb
mov
jne
es
sbb
pop
fsubrl
add
inc
call
and
pop
or
cmp
mov
inc
jg
gs
mov
pop
ficompl
scas
pop
das
mov
aad
lcall
cli
mov
cmp
cmpsb
inc
aaa
dec
scas
js
cmpsb
cmp
int
int3
loop
mov
jle
pop
xchg
mov
data16
jge
fwait
inc
cmp
mov
inc
addb
mov
repnz
adc
lock
jae
js
addl
mov
ss
shl
cltd
loop
mov
aad
mov
add
add
adc
jecxz
add
jnp
jge
add
dec
flds
add
cmovp
mov
xor
mov
fwait
dec
mov
ss
push
cmc
mov
add
lea
mov
cmpsb
cmovp
inc
inc
inc
add
icebp
dec
push
imul
xchg
mov
mov
jb
mov
xchg
ja
addr16
add
mov
fiadds
push
mov
mov
cmp
adc
adc
mov
lea
rolb
sub
pop
inc
push
push
inc
es
dec
mov
lods
icebp
or
pop
sahf
idivl
push
cs
mov
cmpsl
sbb
add
mov
xor
imul
sub
js
mov
cmp
gs
pop
inc
jecxz
lcall
add
hlt
fiadds
jae
add
sub
mov
sub
fimull
cmc
and
addb
fisttps
ret
in
sbb
add
out
mov
loopne
mov
pushf
test
mov
jg
dec
idiv
xchg
test
mov
add
sub
mov
add
add
mov
mov
jge
lea
hlt
in
jg
inc
sbb
aad
sbb
jns
inc
xchg
lods
lock
jb
mov
mov
push
xchg
fmuls
add
xlat
mov
mov
lods
scas
in
movsbl
jg
dec
insb
xchg
test
lods
scas
stos
xchg
add
add
pop
mov
adc
cmc
mov
add
imul
mov
jg
insl
add
inc
add
push
xor
sbbl
xchg
pop
or
mov
mov
xorl
fdivl
dec
pop
jno
add
sbb
xchg
or
jmp
mov
dec
fwait
ja
out
dec
jbe
pushf
out
addb
sub
leave
mov
sbb
adc
push
in
push
pusha
add
inc
add
jo
mov
das
mov
mov
mov
xor
cmp
add
add
push
es
jmp
sahf
pop
cmp
mov
xor
mov
or
mov
and
sti
enter
mov
dec
hlt
popa
mov
aad
lcall
rolb
mov
add
jne
fsubrp
in
sarl
arpl
jnp
add
addr16
mov
sub
sub
arpl
movsl
rolb
sbb
add
push
sub
or
mov
arpl
add
mov
mov
js
inc
mov
sub
push
and
mov
inc
cmp
push
pop
adc
add
sub
cmc
dec
jecxz
outsb
jb
mov
mov
movsb
jno
sub
daa
jae
add
cmp
lret
jb
mov
je
cmp
rcll
fisttpl
add
cmp
loopne
mov
das
push
leave
pop
mov
mov
adc
cltd
fadd
xchg
outsb
push
scas
pop
mov
sbb
push
pop
test
out
stc
mov
cmc
inc
mov
cs
clc
and
jg
or
mov
dec
dec
repz
fidivrs
push
adc
mov
testl
rcll
sbb
mov
cmp
xor
add
add
add
rolb
mov
sbb
sbb
es
mov
out
rolb
mov
mov
adc
mov
dec
std
sub
inc
cmp
mov
mov
and
mov
or
inc
sbb
xchg
pop
addb
enter
das
cmp
sub
mov
jmp
add
push
mov
les
test
push
cmc
shll
add
mov
rolb
flds
iret
std
sbb
loope
add
pop
pop
adc
mov
jg
add
cmpsl
arpl
jbe
imul
push
loopnew
mov
add
mov
mov
pop
sbb
mov
divl
testb
or
and
movsb
ljmp
pop
ret
pop
jge
cmp
cltd
dec
mov
inc
shl
cwtl
es
stos
gs
les
mov
outsl
adcl
jae
add
xchg
mov
add
iret
or
jbe
out
xchg
jle
mov
cmpl
pop
or
pop
ficompl
data16
movsb
iret
push
add
add
add
xchg
pop
addb
xor
js
jge
mov
mov
sub
pop
xor
imul
cmp
imul
pop
adc
mov
hlt
pop
jo
mov
addl
adc
mov
mov
mov
les
and
mov
daa
push
insb
sbb
push
imul
mov
mov
add
mov
pop
jle
xchg
test
ss
inc
sbb
push
xchg
push
or
mov
xor
pushf
xor
add
stos
or
out
mov
in
ret
stos
leave
sarl
jle
fldenv
mov
cmp
lcall
pop
sti
loop
mov
sub
adc
jle
jae
cwtl
scas
testl
jns
repnz
jno
test
push
test
add
lahf
test
out
mov
jbe
lods
ljmp
nop
add
adc
inc
lods
jne
cmc
dec
imul
cmp
xchg
jecxz
pop
mov
mov
inc
ds
faddl
inc
xchg
push
test
push
inc
daa
cmp
into
sbb
fisubrl
mov
add
cltd
xor
mov
cmp
add
mov
add
jne
ja
mov
adc
mov
mov
mov
mov
mov
adc
test
mov
fcomp
sbb
inc
call
add
mov
jle
inc
movsl
mov
mov
or
pop
mov
or
adc
adc
mov
clc
adc
mov
divl
pop
insb
insb
rorl
sub
add
add
movsb
out
or
add
mov
and
dec
cmc
push
push
repnz
fstl
in
out
fstpt
jp
add
mov
jg
xor
lods
mov
aaa
sbb
cmp
out
inc
loope
lea
mov
addb
sti
add
add
add
in
add
mov
xor
pop
out
or
in
xor
pop
insb
add
xchg
les
mov
mov
mov
lea
lods
push
add
movlps
mov
and
mov
mov
mov
ljmp
add
mov
mov
lods
jbe
ss
add
mov
inc
add
add
rolb
mov
add
mov
add
xor
xor
push
out
add
pusha
add
int
mov
mov
jl
adc
mov
in
add
mov
add
outsb
dec
call
leave
aaa
and
mov
or
call
sbb
add
dec
inc
add
daa
mov
add
mov
dec
aaa
cld
test
lods
xor
or
outsl
or
rolb
mov
sub
mulb
add
rolb
mov
jecxz
sub
xor
add
mov
fdivrl
out
or
mov
add
add
adc
out
push
arpl
mov
mov
mov
jb
mov
add
mov
jnp
sti
or
or
mov
mov
sahf
dec
int3
movsl
sbb
add
cmp
mov
pop
sbb
ljmp
push
mov
mov
data16
mov
mov
add
sub
mov
imul
inc
imul
hlt
leave
push
pop
jecxz
inc
add
out
sbb
dec
add
and
cli
icebp
insl
fistpl
pop
divl
add
jae
mov
outsb
in
es
rorl
mov
arpl
add
add
test
mov
mov
je
push
nop
add
xchg
xchg
or
cs
mov
cmp
mov
inc
pop
lods
or
jl
add
xchg
nop
add
xchg
push
add
xchg
fisubs
mov
bound
mov
getsec
lret
xor
add
mov
repz
add
aad
fisubrs
jnp
xchg
mov
adc
mov
add
lret
sub
arpl
test
inc
add
add
add
push
out
cmp
mov
jae
pop
jmp
std
jo
mov
pop
sub
add
jo
mov
ds
or
add
mov
push
sub
add
push
pop
adc
pop
cmc
scas
in
stos
nop
add
jne
pop
addb
mov
lret
and
mov
lcall
push
sub
insb
mov
jg
inc
dec
lds
jo
mov
popa
cli
push
jns
mov
pop
adc
mov
add
aad
int
lcall
iret
or
sub
xor
mov
mov
mov
push
mov
cmp
add
mov
addb
xchg
push
in
add
mov
adc
mov
inc
add
fcoml
add
mov
cmpl
sbb
rorl
mov
rcl
fidivrs
xchg
mov
push
ljmp
push
cmp
sbb
das
xor
mov
rolb
mov
inc
mov
pop
bound
mov
add
and
jmp
imull
adc
mov
aam
and
mov
sbb
adc
xor
add
pop
xlat
repz
jp
clc
test
jp
or
stos
pop
sub
js
jb
mov
push
mov
mov
arpl
negb
fldl
adc
dec
sub
stc
rolb
mov
xchg
dec
sub
add
hlt
es
dec
in
push
and
jmp
jmp
adc
or
sahf
mov
mov
xchg
test
mov
mov
imul
xchg
xor
mov
mov
add
sahf
jecxz
add
mov
add
das
inc
add
cmpsb
xlat
es
add
das
cmp
add
mov
mov
cmp
add
mov
push
push
add
cs
int
fs
adc
mov
pop
rolb
cltd
pop
pop
xchg
and
mov
inc
in
frstor
mov
or
jae
les
mov
push
add
daa
mov
mov
loop
mov
pop
xor
mov
add
add
sub
cmpsb
or
xchg
add
les
mov
cmp
std
imul
cmp
mov
add
lahf
repz
mov
aad
pop
rolb
mov
push
enter
imul
jbe
mov
add
and
mov
stc
cli
lods
movsb
cltd
arpl
xchg
add
add
add
mov
call
daa
ffree
jl
inc
cltd
jecxz
std
repnz
add
or
add
pop
dec
inc
insl
and
inc
add
cmp
xor
loopne
mov
mov
insl
jmp
in
pop
inc
add
sahf
scas
pop
mov
mov
mov
push
mov
mov
inc
add
call
mov
add
cltd
ret
add
mov
sub
and
mov
xor
movsl
xchg
xchg
rep
cmc
je
outsl
and
mov
mov
nop
add
push
push
roll
mov
xchg
push
add
hlt
xor
push
add
inc
fsubrs
pop
add
add
data16
mov
mov
dec
pop
fisttpll
jmp
cwtl
adc
xchg
add
cwtl
lret
dec
and
mov
add
xor
mov
xchg
dec
scas
addl
inc
stc
jns
jbe
add
fldt
imul
add
mov
out
jle
aad
mov
test
addb
jge
adc
mov
lret
xor
mov
mov
add
mov
sahf
sti
into
dec
les
adc
add
mov
jp
bound
mov
inc
add
mov
ss
or
add
mov
add
add
push
leave
test
add
mov
sbb
mov
add
fdivl
ds
out
aas
scas
ds
lret
add
int3
adc
add
lea
xchg
xor
or
xor
add
add
jno
add
sbb
push
test
jo
mov
pop
lahf
and
add
mov
addr16
xor
mov
add
sbb
push
lea
jne
or
add
jmp
add
and
mov
push
sbb
aad
jae
hlt
sbb
test
movsl
lcall
add
sub
iret
std
cmpsb
iret
imul
adc
mov
popa
leave
loop
mov
notl
nop
add
add
add
dec
stos
dec
and
mov
insb
or
cmp
in
test
add
pop
cltd
inc
sub
fcoms
cmc
cmpsb
fdivl
mov
es
js
adc
mov
mov
pop
clc
push
or
clc
cmp
or
add
cmp
dec
mov
xchg
addr16
jnp
pop
or
add
sub
push
dec
adc
mov
cli
lods
popf
lds
adc
fistpll
dec
fdivrs
mov
movsl
mov
cmp
jle
add
mov
mov
or
xorl
push
jb
mov
sub
sub
add
jne
daa
mov
mov
addb
sbb
mov
aas
aaa
aas
mov
popa
rolb
mov
add
mov
add
pop
sti
sbbl
lcall
mov
add
add
push
xchg
dec
ljmp
mov
mov
mov
retw
and
mov
lock
adc
add
mov
adc
add
mov
gs
add
push
xor
mov
add
cmpsb
ljmp
fisubl
add
mov
iret
divl
shr
icebp
sbb
test
push
or
add
ret
or
std
adc
xchg
pop
add
daa
aaa
test
pop
inc
add
sbb
imul
jmp
insb
rorl
pop
sub
rolb
mov
mov
mov
aaa
outsb
dec
aam
sahf
test
es
pop
sbb
sub
and
push
mov
mov
fimuls
pop
mov
pop
call
add
pop
jmp
aam
mov
mov
pop
inc
add
cmc
rolb
mov
add
fbstp
mov
inc
sbb
inc
mov
add
outsl
push
add
push
add
mov
mov
clc
lahf
mov
in
add
dec
xor
cmp
inc
mov
xor
mov
cmp
sbb
mov
or
add
and
pop
stos
test
pop
lahf
push
mov
js
add
mov
push
jbe
movb
jae
xor
addb
addb
pusha
add
pop
lret
mov
fildll
out
test
push
decb
pop
cwtl
pop
cwtl
mov
hlt
push
dec
push
insl
out
sub
movsl
test
add
sub
and
mov
sub
inc
push
gs
add
test
mov
iret
xchg
push
sbb
xor
mov
sub
inc
insb
pop
ss
movsl
fiaddl
push
push
lret
sbb
mov
jg
xchg
leave
fdivrl
mov
inc
int
out
pushf
inc
sub
push
add
mov
loopne
mov
mov
mov
mov
jo
mov
mov
cmp
mov
jb
mov
fldln2
push
mov
fwait
push
add
jmp
or
mov
mov
xlat
inc
jg
sbb
shr
sub
mov
fiaddl
push
jno
rolb
into
push
divb
jecxz
push
ret
adc
lods
sahf
cmp
jl
push
mov
xchg
mov
jb
mov
mov
ja
add
mov
mov
add
inc
add
cmp
push
mov
xchg
push
add
ljmp
lods
pop
mov
push
test
daa
jle
add
push
sbb
rolb
dec
addb
xchg
add
mov
cmp
std
mov
in
or
or
mov
in
add
xchg
mov
arpl
push
testl
add
dec
xchg
je
imul
gs
jmp
jp
out
jge
mov
addb
test
push
cwtl
scas
and
repz
mov
insb
pushf
mov
xlat
mov
fldt
addl
mov
into
push
mov
add
adc
rolb
mov
cmp
add
iret
shrl
pop
add
mov
test
or
ja
popf
add
mov
cmp
sbb
xchg
add
mov
mov
adc
pushf
pushf
add
mov
cmp
mov
cmpsb
test
pusha
add
pusha
add
idiv
pop
or
mov
jmp
call
push
pop
cmc
sbb
mov
xchg
push
inc
push
outsl
aam
aad
dec
mov
sbb
dec
pusha
add
inc
sbb
fcmovbe
sti
mov
add
xchg
and
mov
loopne
mov
addb
cmp
add
adc
mov
push
mov
sti
xor
cld
sub
mov
pusha
add
jmp
mov
or
dec
xor
add
and
and
call
out
dec
jne
add
movsl
rcrl
mov
mov
aaa
outsl
sbb
add
out
inc
push
stc
add
stos
rolb
mov
dec
aas
scas
cmp
pop
test
sbb
sub
fwait
repnz
jno
sub
push
cs
clc
sbb
fwait
int3
jno
int
add
test
sbb
add
mov
mov
push
lret
mov
mov
adc
shr
or
mov
xchg
sbb
pop
jns
add
bound
mov
mov
daa
mov
sbb
xor
mov
lahf
add
inc
fnstcw
scas
xchg
push
add
lcall
hlt
mov
inc
xchg
sbb
inc
add
mov
in
sbb
dec
call
loope
lock
int
xchg
add
repnz
lret
sub
push
leave
repz
add
gs
add
add
mov
mov
xor
bound
mov
movswl
mov
add
sahf
cmp
sahf
cmpsb
push
in
dec
in
mov
mov
pop
bound
mov
mov
adc
and
mov
sub
mov
sbb
setbe
xor
mov
clc
mov
imul
sbb
in
or
adc
mov
add
add
add
icebp
pop
pop
fisubl
sub
push
pop
xor
ljmp
jmp
mov
xor
jg
mov
aaa
push
jb
mov
push
lret
mov
xchg
push
mov
mov
mov
push
in
add
jg
jo
mov
mov
add
mov
dec
into
sub
push
cmc
xor
loopne
mov
ret
in
rolb
jg
add
mov
and
mov
pop
repz
ret
arpl
push
jae
cwtl
lcall
aaa
les
mov
lds
jb
mov
loopne
mov
and
stos
cmp
add
push
or
mov
add
add
iret
dec
daa
mov
cmp
xor
mov
add
inc
sbb
cmp
add
fs
sahf
jp
inc
push
cwtl
xor
sbb
sbb
mov
mov
out
call
add
add
sahf
js
loop
mov
pop
cld
aad
lret
cmp
add
nop
add
pop
repz
push
pop
or
add
clc
or
dec
mov
mov
sbb
dec
lods
xlat
cmp
imul
pop
jb
mov
sbb
xchg
add
mov
std
mov
rolb
pop
insb
add
add
inc
add
adc
mov
imul
fiaddl
xchg
add
mov
mov
outsb
jmp
pop
sbb
pusha
add
mov
mov
dec
mov
imul
mov
cltd
rolb
mov
bound
mov
in
pop
pop
and
es
sti
cs
cmp
loopne
mov
enter
mov
enter
fnstsw
push
insl
dec
std
rolb
mov
loopne
mov
xor
inc
push
and
mov
mov
rolb
fildl
rolb
mov
add
pop
clc
or
xchg
cmp
sbb
loop
mov
rorl
rol
cmp
lods
rolb
mov
mov
in
pop
cmpl
add
xor
ret
test
mov
ljmp
cmp
dec
cmp
xchg
jg
ds
xchg
add
xlat
add
add
outsb
movsl
daa
xchg
add
pop
sbb
les
aas
pop
cltd
jnp
movsl
jmp
add
xchg
jns
lret
cmpsl
mov
cs
andl
cltd
and
mov
das
bound
mov
add
cli
aaa
push
adc
and
fs
dec
clc
cwtl
test
stos
pop
lods
inc
mov
xchg
aaa
and
mov
aam
mov
add
xchg
push
cmp
jge
and
icebp
dec
push
add
pushf
rcll
dec
fsubs
in
and
jnp
dec
xchg
xchg
mov
add
add
or
cmpsl
mov
adc
mov
pop
int3
inc
cmp
sbb
push
xchg
push
mov
or
adc
mov
xor
mov
push
push
ud1
and
push
scas
cwtl
inc
add
dec
js
sbb
add
sub
out
jle
into
int3
adc
jno
shll
sub
adc
mov
pop
rorl
divb
push
lcall
imul
add
sbb
lcall
mov
inc
es
popa
dec
mov
mov
into
push
fdivrs
mov
ficomps
rolb
mov
outsl
lods
cmp
add
jecxz
repnz
cld
pop
add
mov
test
mov
movsb
sti
or
xor
mov
mov
mov
mov
push
ja
imul
ds
loope
es
push
xor
sbb
add
mov
lret
movsl
loopne
mov
mov
mov
inc
add
rolb
mov
js
add
push
outsl
push
test
sbb
add
and
inc
add
sbb
mov
mov
out
jecxz
adc
add
bound
mov
jle
aaa
jno
dec
loope
into
sub
pop
push
or
sbb
pop
mov
dec
imulb
push
fsubl
add
movsb
inc
jne
sub
cs
jle
pop
pushf
shll
sbb
and
mov
ret
idivl
cld
xchg
aam
lea
mov
mov
iret
xchg
or
sub
daa
enter
daa
adc
mov
push
rolb
mov
jbe
add
add
test
xchg
mov
mov
add
cmp
gs
jmp
lds
cmpsb
xor
mov
jmp
add
xor
inc
sbb
dec
add
enter
stos
jb
mov
mov
mov
sbb
fadds
rorl
xor
lds
add
inc
lcall
lret
push
stc
iret
jno
add
mov
and
add
mov
mov
jmp
push
scas
cltd
outsl
jb
mov
add
mov
mov
add
mov
mov
mov
add
mov
push
add
fdivl
jl
xor
dec
pop
arpl
push
insl
sub
add
fdivrs
xorl
xchg
sti
mov
mov
into
testb
mov
or
or
test
cmp
add
popa
xchg
fldl
mov
push
mov
mov
lods
in
scas
add
cmc
repz
ret
arpl
setl
je
add
sub
pop
popf
cwtl
inc
cmp
loopne
mov
dec
dec
aad
inc
add
lods
sbb
mov
call
fmul
es
or
mov
inc
cmc
push
add
jmp
or
add
mov
stos
movsb
arpl
in
add
lods
lods
mov
mov
fs
sbb
movsb
adc
movsb
jae
cld
or
cmp
jno
add
pop
pop
scas
cs
hlt
cmpsl
inc
add
sub
test
mov
pop
lods
loope
sahf
mov
mov
ljmp
mov
xchg
insl
mov
and
mov
add
mov
daa
or
jo
mov
add
mov
imul
call
jmp
movsl
push
fstpl
mov
add
jp
add
adc
leave
pop
mov
repz
xor
mov
addb
fs
rolb
mov
add
push
dec
inc
add
jns
aas
into
out
or
jne
add
dec
jne
jb
mov
cmpsb
or
xchg
pop
ficoml
and
add
mov
mov
fidivrs
and
adc
adc
mov
and
mov
jg
imul
jecxz
add
mov
movsl
ficompl
sub
stc
mov
lcall
inc
add
xchg
dec
int3
add
mov
jl
fcmovu
hlt
outsb
mulb
add
jns
popf
js
cmp
push
fbld
mov
pop
jle
add
xor
mov
or
dec
int3
das
movsb
iret
rcll
add
add
add
decl
in
dec
test
mov
pop
xchg
adc
stos
inc
add
jl
jns
xchg
lods
das
hlt
call
mov
sbb
mov
add
pop
pop
mov
mov
mov
or
stos
sbb
push
dec
mov
mov
inc
add
mov
andl
mov
out
iret
in
mov
insb
daa
jno
int3
test
dec
dec
and
clc
into
mov
push
loop
mov
sbb
add
mov
pop
pop
bound
mov
jb
mov
stc
outsl
cwtl
mov
int
pop
cmp
jmp
add
add
pop
rolb
mov
push
enter
jmp
pop
popf
aas
femms
fisttps
pop
inc
cmp
bound
mov
stos
jge
jmp
add
add
dec
sub
test
cmp
jns
fimuls
inc
dec
jg
sahf
mov
add
out
and
stos
sarl
mov
and
dec
fs
push
mov
clc
mov
lods
cld
jmp
and
rep
push
std
andl
pop
loope
push
inc
add
cs
add
data16
mov
push
mov
inc
iret
push
pop
aas
hlt
jno
fstps
and
iret
or
add
clc
lcall
sahf
add
mov
mov
mov
add
sub
in
add
dec
sub
push
fcmovu
test
outsl
bswap
add
popa
sbb
fildll
out
jge
imul
outsl
xchg
cltd
mov
push
cmp
jp
mov
mov
mov
mov
cmpsb
rolb
mov
mov
repnz
hlt
mov
add
pop
js
out
add
mov
std
inc
add
sub
push
add
cmp
dec
or
test
test
and
mov
adc
ret
imul
and
mov
aas
or
xchg
inc
push
pop
out
movsl
xor
mov
scas
xor
mov
add
mov
mov
rorl
lret
mov
hlt
mov
inc
add
fdiv
jl
inc
push
push
or
lahf
cmp
xor
push
add
jmp
jmp
add
mov
mov
mov
insl
lcall
jge
jo
mov
mov
pop
xchg
push
cmpl
add
inc
cli
xchg
dec
pushf
rcl
jge
das
sbb
ret
pop
jmp
add
movsl
jge
cmpl
mov
sbbl
mov
add
jmp
and
mov
aam
or
lcall
jne
xor
xor
rolb
mov
or
repnz
add
sub
aam
div
mov
lds
mov
push
add
and
mov
add
enter
cmp
and
call
push
add
push
movsb
roll
mov
xor
jmp
insl
fcompl
add
fsubp
sahf
dec
mov
xchg
xchg
mov
add
dec
into
out
xor
mov
mov
fstps
pop
adc
add
adc
mov
cmp
or
stos
mov
iret
dec
mov
xchg
add
in
mov
data16
mov
mov
pop
or
add
lret
mov
or
ss
push
inc
or
cmp
add
jle
add
push
add
cs
mov
mov
add
scas
pop
add
mov
cmpl
notl
push
add
cmpsl
sub
out
mov
add
sbb
fdivl
xor
add
mov
add
dec
int3
out
adc
jecxz
imul
in
fs
mov
popf
pop
std
jo
mov
sub
or
jne
add
add
sub
addb
mov
add
add
lcall
sbb
int
pop
les
lds
fdivrl
dec
lret
fdivr
rolb
mov
jnp
sbb
in
fstpl
mov
add
jl
shll
popl
and
mov
or
mov
mov
rolb
mov
daa
jno
lock
repnz
add
mov
mov
inc
add
and
mov
loop
mov
add
jle
adc
mov
jmp
add
rolb
or
pop
mov
jmp
jo
mov
dec
pushf
push
add
mov
add
mov
xchg
decb
icebp
pop
cmp
add
mov
sub
fdivrl
adc
mov
mov
mov
push
mov
xor
mov
pusha
add
xor
mov
in
mov
dec
xor
add
add
sbb
add
icebp
jle
cltd
lock
ds
dec
leave
fcomps
mov
push
add
das
adc
mov
xchg
lret
or
push
jae
pop
cmc
lret
cmpsl
mov
mov
jbe
add
add
jno
mov
add
adc
mov
mov
decl
add
mov
mov
add
mov
and
add
stos
sub
adc
push
dec
ja
mov
sbb
xchg
add
in
xchg
std
in
and
mov
mov
mov
in
dec
pop
sub
mov
mov
test
xchg
js
into
jbe
push
js
pop
jecxz
add
mov
pop
cmp
mov
mov
xor
cli
mov
addr16
dec
aam
pop
dec
sbb
xchg
mov
mov
mov
mov
mov
sub
mov
sub
mov
leave
mov
mov
mov
xchg
push
movsb
mov
jo
mov
mov
cmpsl
lret
dec
pop
and
cmp
frstor
mov
adc
add
and
xchg
fisttpll
int
mov
add
mov
insl
sbb
cmp
mov
sbb
add
cmpsb
mov
mov
add
mov
push
mov
lretw
lret
push
inc
add
dec
inc
gs
mov
data16
mov
xor
cmp
sbb
add
mov
jle
jmp
xchg
lock
mov
aam
xor
out
arpl
or
cmpsb
push
add
rorl
imul
lods
xchg
stos
inc
push
loopne
mov
add
repnz
nop
cld
jae
add
xor
lods
mov
clc
repnz
nop
cld
jae
add
add
add
out
mov
clc
repnz
nop
cld
jae
xor
pop
and
clc
repnz
nop
cld
jae
or
add
xor
faddl
mov
cmp
ret
movsl
or
add
mov
push
mov
nop
leave
jmp
add
add
mov
add
dec
sub
push
fiaddl
xchg
ret
cltd
add
hlt
add
jl
add
pop
clc
repnz
nop
cld
jae
or
pusha
add
je
jp
add
clc
repnz
nop
cld
jae
add
add
add
dec
scas
je
push
mov
nop
leave
jmp
inc
add
cmpl
in
inc
add
outsb
add
add
cli
pusha
sub
mov
nop
leave
jmp
out
add
add
xor
xor
pop
push
mov
xchg
ret
pop
jl
adc
mov
mov
mov
clc
repnz
nop
cld
jae
xchg
popa
add
adc
inc
icebp
clc
repnz
nop
cld
jae
aam
add
add
subl
ljmp
cmp
add
decl
test
add
clc
repnz
nop
cld
jae
add
xchg
aad
add
push
mov
xchg
ret
add
pop
add
xor
add
add
push
mov
xchg
ret
dec
add
hlt
test
push
mov
cmc
ds
xchg
add
add
mov
icebp
scas
add
add
inc
xchg
mov
call
clc
repnz
nop
cld
jae
jp
add
stc
pop
push
mov
xchg
ret
add
dec
pusha
pop
aas
add
pop
add
push
mov
nop
leave
jmp
add
add
add
aaa
hlt
inc
mov
mov
mov
clc
repnz
nop
cld
jae
add
mov
fimuls
nop
cld
jae
adc
jbe
add
xchg
mov
mov
clc
repnz
nop
cld
jae
add
xor
mov
lock
mov
nop
leave
jmp
std
jle
add
jp
scas
mov
clc
repnz
nop
cld
jae
push
test
rolb
mov
adcb
nop
leave
jmp
jle
add
cli
jge
add
adc
cmp
ret
and
dec
pop
or
jge
clc
repnz
nop
cld
jae
add
mov
clc
repnz
nop
cld
jae
sub
adc
push
mov
nop
leave
jmp
jp
add
add
mov
mov
clc
repnz
nop
cld
jae
aam
aas
inc
imul
nop
cld
jae
lret
add
inc
pusha
add
or
mov
xchg
ret
add
add
add
lahf
push
mov
add
add
mov
and
add
mov
nop
leave
jmp
je
add
jl
fdivrl
nop
nop
cld
jae
add
or
add
and
repnz
nop
cld
jae
jl
add
mov
add
add
add
add
add
add
jbe
rep
push
mov
nop
leave
jmp
out
add
cmp
mov
mov
xchg
ret
mov
addl
std
cmp
push
mov
nop
leave
jmp
add
or
add
inc
add
add
add
add
jbe
sbb
nop
nop
cld
jae
xor
add
add
mov
loop
mov
repnz
nop
cld
jae
add
push
jl
add
leave
xchg
clc
repnz
nop
cld
jae
add
add
add
adc
mov
clc
repnz
nop
cld
jae
xchg
push
add
add
mov
nop
nop
cld
jae
jl
push
cwtl
cmp
push
mov
nop
leave
jmp
add
jbe
lret
dec
add
in
mov
clc
repnz
nop
cld
jae
jle
addl
xor
clc
repnz
nop
cld
jae
inc
filds
mov
nop
nop
cld
jae
or
jae
jl
bound
mov
div
push
mov
nop
leave
jmp
add
dec
add
add
clc
repnz
nop
cld
jae
add
add
or
mov
dec
push
mov
nop
leave
jmp
add
inc
add
push
pop
add
and
clc
repnz
nop
cld
jae
jp
add
adc
cli
clc
repnz
nop
cld
jae
add
add
pop
je
stos
push
clc
repnz
nop
cld
jae
add
inc
add
jno
cmp
clc
clc
repnz
nop
cld
jae
or
add
add
mov
repnz
nop
cld
jae
add
add
add
jle
clc
repnz
nop
cld
jae
xor
xor
in
popa
clc
repnz
nop
cld
jae
and
add
add
or
nop
nop
cld
jae
add
push
push
lret
add
cmp
push
mov
xchg
ret
xor
inc
add
je
call
jb
inc
add
rcr
lret
cli
add
add
addl
inc
inc
add
mov
adcl
repnz
nop
cld
jae
add
add
xchg
add
push
mov
xchg
ret
push
xor
rolb
pop
add
imul
add
repnz
nop
cld
jae
xchg
lea
inc
and
clc
repnz
nop
cld
jae
add
add
add
cmp
ret
add
in
nop
leave
jmp
add
or
xor
add
add
in
nop
leave
jmp
add
cltd
filds
clc
repnz
nop
cld
jae
int3
dec
add
adc
pop
mov
clc
repnz
nop
cld
jae
push
adc
add
push
mov
jmp
popa
add
repnz
nop
cld
jae
add
enter
std
add
clc
repnz
nop
cld
jae
cli
add
sub
xor
add
clc
repnz
nop
cld
jae
push
cmp
mov
cmp
inc
add
add
mov
xchg
pop
pop
clc
repnz
nop
cld
jae
outsb
movsl
add
dec
dec
fbld
mov
clc
repnz
nop
cld
jae
xor
add
mov
push
mov
xchg
ret
int3
dec
add
or
add
addb
pop
jb
push
mov
nop
leave
jmp
add
mov
sldt
push
mov
nop
leave
jmp
add
pop
and
mov
push
mov
nop
leave
jmp
jle
test
xchg
add
or
test
add
nop
nop
cld
jae
add
lea
repnz
nop
cld
jae
add
test
test
add
mov
push
mov
xchg
ret
add
add
dec
adc
int3
add
clc
repnz
nop
cld
jae
add
aas
enter
or
inc
and
xor
add
cmp
pusha
add
mov
js
test
repnz
nop
cld
jae
jp
int3
xchg
add
clc
repnz
nop
cld
jae
jp
jle
add
jp
push
mov
movsl
push
sub
and
data16
fcmovnu
add
aas
add
push
lret
push
mov
nop
leave
jmp
aam
jl
hlt
add
push
lret
push
push
mov
xchg
ret
sub
sub
inc
add
clc
repnz
nop
cld
jae
pop
pop
add
add
push
clc
repnz
nop
cld
jae
add
jle
mov
pusha
xor
pop
push
mov
xchg
ret
jl
add
add
add
jg
push
mov
nop
leave
jmp
add
pop
add
jp
add
mov
xchg
ret
test
fldl
adc
push
mov
nop
leave
jmp
add
movsl
test
dec
xchg
add
stos
call
push
mov
nop
leave
jmp
or
add
push
add
push
clc
repnz
nop
cld
jae
cltd
add
add
jae
sub
cmp
inc
add
add
xor
clc
push
clc
repnz
nop
cld
jae
xor
push
movsl
add
add
popa
clc
repnz
nop
cld
jae
push
add
mov
nop
leave
jmp
add
add
inc
add
out
add
js
mov
xchg
ret
xor
faddl
jbe
mov
repnz
nop
cld
jae
addl
mov
mov
nop
leave
jmp
pop
popa
xor
xor
add
jmp
add
add
add
add
add
int3
popa
cmpsb
out
cmp
push
mov
nop
leave
jmp
xor
fsubl
add
add
hlt
or
repnz
nop
cld
jae
add
std
add
jbe
test
nop
nop
cld
jae
add
add
push
orl
nop
cld
jae
jbe
pop
add
add
clc
repnz
nop
cld
jae
add
add
pop
push
mov
xchg
ret
fldl
add
cltd
enter
sub
clc
push
mov
xchg
ret
xor
and
add
add
sti
mov
push
mov
nop
leave
jmp
cwtl
pusha
push
jae
arpl
jle
clc
repnz
nop
cld
jae
aas
or
add
int
in
add
add
clc
repnz
nop
cld
jae
add
xorl
shrl
xchg
push
mov
nop
leave
jmp
mov
addl
push
mov
nop
leave
jmp
add
add
hlt
xchg
insl
add
push
mov
xchg
ret
inc
cmp
push
fcoml
fmull
mov
add
repnz
nop
cld
jae
hlt
movsl
add
add
push
push
mov
xchg
ret
andl
and
push
mov
xchg
ret
add
add
adc
mov
add
add
add
add
add
in
and
push
mov
xchg
ret
push
add
add
add
push
mov
nop
leave
jmp
std
filds
shlb
add
aas
add
clc
repnz
nop
cld
jae
pop
add
add
test
mov
push
mov
xchg
ret
add
lea
add
repz
ss
add
fstpl
hlt
test
subl
sub
repnz
nop
cld
jae
jbe
add
mov
nop
cld
jae
jl
add
add
repz
mov
nop
leave
jmp
add
mov
dec
add
push
mov
nop
leave
jmp
inc
jle
dec
inc
mov
movsb
out
add
add
pop
add
add
je
sbb
nop
nop
cld
jae
test
xor
inc
dec
call
push
mov
nop
leave
jmp
add
add
jmp
mov
or
add
mov
jo
out
add
dec
add
insb
sub
mov
repnz
nop
cld
jae
adc
xor
add
test
jns
jmp
fsubl
cmp
popa
faddl
add
lods
mov
clc
repnz
nop
cld
jae
pop
add
lea
xchg
add
adc
in
nop
leave
jmp
out
xorl
pop
mov
clc
repnz
nop
cld
jae
push
add
add
add
cmp
clc
repnz
nop
cld
jae
add
push
mov
xchg
ret
and
add
add
cli
xor
add
add
add
mov
xchg
add
mov
add
add
push
mov
nop
leave
jmp
inc
add
add
dec
push
mov
xchg
ret
lret
int3
sub
add
add
add
nop
cld
jae
add
add
sbb
test
add
repnz
nop
cld
jae
pusha
add
mov
push
mov
nop
leave
jmp
add
adc
mov
clc
repnz
nop
cld
jae
push
add
add
mov
push
mov
nop
leave
jmp
enter
and
cli
and
mov
mov
mov
clc
repnz
nop
cld
jae
add
push
add
add
clc
repnz
nop
cld
jae
cli
add
out
mov
push
mov
nop
leave
jmp
add
add
idiv
repnz
nop
cld
jae
addl
add
add
add
jmp
add
or
add
dec
and
nop
cld
jae
aas
add
cwtl
add
inc
add
inc
lock
repnz
nop
cld
jae
dec
aas
lea
add
add
add
add
pop
cld
add
sub
push
addb
bound
mov
pushl
clc
repnz
nop
cld
jae
adc
aam
add
or
add
add
xor
add
add
rep
clc
repnz
nop
cld
jae
push
std
cltd
push
pusha
add
mov
je
clc
repnz
nop
cld
jae
or
pop
mov
xchg
sbb
nop
nop
cld
jae
and
dec
adc
popa
add
push
or
mov
nop
leave
jmp
cmp
std
add
test
out
aas
add
movsl
add
addl
inc
sub
nop
nop
cld
jae
aas
add
add
pusha
or
add
add
repnz
nop
cld
jae
add
movsl
add
add
xor
add
clc
repnz
nop
cld
jae
add
fimull
nop
cld
jae
pusha
pop
lea
add
pop
xchg
test
xor
clc
repnz
nop
cld
jae
jl
aam
ja
add
and
cld
jae
sub
add
add
add
addb
mov
mov
xchg
ret
add
add
test
fists
add
push
mov
nop
leave
jmp
add
movsl
addb
insl
mov
clc
repnz
nop
cld
jae
filds
add
pusha
lea
clc
repnz
nop
cld
jae
xchg
add
mov
jmp
call
pop
add
add
dec
pop
add
pop
pop
add
mov
push
clc
repnz
nop
cld
jae
fsubl
aam
inc
add
xor
sub
daa
sbb
add
filds
add
inc
mov
add
add
repnz
nop
cld
jae
add
cli
jmp
fildl
xchg
ret
int3
inc
push
cli
add
adc
aam
mov
clc
repnz
nop
cld
jae
add
cmp
mov
xchg
ret
mov
add
and
nop
cld
jae
add
cltd
add
add
add
clc
repnz
nop
cld
jae
add
push
filds
add
add
icebp
push
mov
nop
leave
jmp
test
push
test
std
xchg
xlat
gs
mov
clc
repnz
nop
cld
jae
hlt
xor
sub
clc
repnz
nop
cld
jae
rolb
add
and
ret
enter
dec
faddl
xchg
ret
add
mov
add
add
clc
repnz
nop
cld
jae
je
add
add
pop
popa
clc
repnz
nop
cld
jae
pop
je
pop
add
je
jg
push
mov
xchg
ret
jae
add
out
pop
fldl
jae
push
mov
add
add
xchg
cwtl
enter
lods
and
push
nop
add
clc
repnz
nop
cld
jae
push
push
mov
add
mov
pop
cmp
push
mov
nop
leave
jmp
add
jmp
add
add
add
movsl
test
add
add
pop
fdivl
sar
nop
nop
cld
jae
add
cwtl
add
jp
mov
xchg
stc
call
in
nop
leave
jmp
inc
jp
add
push
push
mov
xchg
ret
add
add
int3
add
jnp
add
repnz
nop
cld
jae
add
add
pop
add
cmp
mov
xchg
ret
pop
xor
add
add
icebp
in
push
mov
clc
repnz
nop
cld
jae
add
popa
add
add
clc
repnz
nop
cld
jae
jae
fistps
cmp
fistl
mov
nop
leave
jmp
cwtl
je
add
add
test
add
inc
stc
inc
add
mov
test
aam
add
add
clc
repnz
nop
cld
jae
add
add
add
add
push
mov
xchg
ret
xor
aas
adc
add
je
clc
repnz
nop
cld
jae
pop
add
clc
repnz
nop
cld
jae
push
cltd
rolb
inc
jl
add
jp
fdivrp
repnz
nop
cld
jae
aas
test
std
movsl
add
xor
clc
repnz
nop
cld
jae
faddl
pop
add
pop
or
add
repnz
nop
cld
jae
cli
add
mov
nop
leave
jmp
filds
test
or
add
fisubrl
clc
repnz
nop
cld
jae
add
jle
add
xor
mov
push
push
mov
nop
leave
jmp
push
int3
add
add
add
add
repnz
nop
cld
jae
lea
mov
in
nop
leave
jmp
dec
std
add
jle
add
push
clc
repnz
nop
cld
jae
xor
and
pop
add
lods
mov
clc
repnz
nop
cld
jae
adc
sub
mov
sbb
sti
clc
repnz
nop
cld
jae
cmp
add
dec
xor
push
mov
xchg
ret
add
enter
daa
fucomp
mov
add
clc
repnz
nop
cld
jae
add
mov
clc
repnz
nop
cld
jae
add
jp
out
pusha
decb
test
add
clc
repnz
nop
cld
jae
jle
add
int3
xchg
clc
repnz
nop
cld
jae
add
lret
je
and
jo
push
mov
nop
leave
jmp
jl
add
pop
add
push
fisttps
nop
nop
cld
jae
add
add
or
mov
clc
repnz
nop
cld
jae
add
sub
jae
add
add
xchg
add
movsl
lret
pop
lret
xchg
add
mov
mov
mov
mov
push
mov
pop
fnstenv
add
leave
add
add
jae
les
aas
adc
aas
add
cmp
jl
push
cmp
movsb
push
xor
or
push
mov
nop
leave
jmp
push
adcl
cmc
cwtl
mov
clc
repnz
nop
cld
jae
add
add
cmp
add
je
push
mov
nop
leave
jmp
add
add
arpl
add
mov
inc
add
adc
add
xchg
add
add
mov
push
mov
nop
leave
jmp
add
jae
pusha
imul
in
nop
leave
jmp
sub
popa
add
xor
jmp
add
or
add
or
add
lea
test
push
mov
xchg
ret
lea
add
add
dec
faddl
lea
push
mov
nop
leave
jmp
push
add
add
add
add
mov
clc
repnz
nop
cld
jae
xchg
add
pusha
add
add
clc
repnz
nop
cld
jae
sub
dec
jae
adc
sub
fucompp
inc
add
add
add
add
nop
leave
jmp
add
add
add
add
push
outsb
mov
clc
repnz
nop
cld
jae
mov
add
lret
in
nop
leave
jmp
hlt
add
lret
pop
add
movsl
push
lret
in
xchg
ret
outsl
add
adc
add
leave
add
test
add
add
clc
repnz
nop
cld
jae
cli
add
dec
outsl
mov
push
mov
nop
leave
jmp
push
add
add
add
add
test
clc
repnz
nop
cld
jae
add
and
push
mov
xchg
ret
add
pusha
jle
test
xor
mov
sub
add
aas
test
rolb
and
push
sbb
nop
nop
cld
jae
xchg
add
add
repnz
nop
cld
jae
add
frstor
add
dec
jg
mov
push
clc
repnz
nop
cld
jae
add
add
leave
std
call
in
nop
leave
jmp
adc
or
sbb
repnz
nop
cld
jae
add
xchg
jecxz
inc
and
xor
mov
clc
repnz
nop
cld
jae
inc
add
clc
pop
push
mov
nop
leave
jmp
inc
fisttpll
aas
out
dec
mov
xor
or
clc
repnz
nop
cld
jae
add
nop
nop
cld
jae
std
add
pop
addl
movb
arpl
inc
add
cmpl
add
push
mov
ss
add
lods
add
add
movsl
imul
add
repnz
nop
cld
jae
add
sbb
push
mov
nop
leave
jmp
cli
add
cltd
cmp
shl
push
mov
nop
leave
jmp
add
add
outsb
mov
clc
repnz
nop
cld
jae
pop
dec
add
lea
sub
push
mov
xchg
ret
adc
outsb
add
cwtl
cmp
mov
xchg
ret
push
jp
je
push
add
hlt
mov
cmp
fs
insb
clc
repnz
nop
cld
jae
add
add
popa
add
repnz
nop
cld
jae
add
push
scas
push
push
mov
nop
leave
jmp
add
add
sub
cwtl
jl
sub
js
push
mov
nop
leave
jmp
add
add
add
push
mov
nop
leave
jmp
add
add
add
call
clc
repnz
nop
cld
jae
add
add
in
nop
leave
jmp
or
cmp
push
push
add
iret
add
clc
repnz
nop
cld
jae
add
addb
popl
repnz
nop
cld
jae
add
movsl
add
mov
clc
repnz
nop
cld
jae
add
add
hlt
enter
call
push
mov
nop
leave
jmp
add
add
xchg
add
lea
add
dec
jae
je
add
enter
mov
clc
repnz
nop
cld
jae
xor
aaa
xlat
xor
xor
push
mov
xchg
ret
push
pop
aam
add
test
adc
mov
push
mov
nop
leave
jmp
or
cltd
sti
jmp
aam
jp
add
add
cwtl
add
add
or
mov
xchg
ret
aam
dec
push
add
inc
aam
je
jmp
clc
repnz
nop
cld
jae
adc
add
cwtl
push
mov
repnz
nop
cld
jae
cwtl
add
add
test
add
mov
call
clc
repnz
nop
cld
jae
add
xor
push
mov
xchg
ret
inc
mov
add
adc
xor
mov
insl
test
push
mov
xchg
ret
add
test
add
jmp
add
or
add
add
out
mov
push
mov
nop
leave
jmp
lea
int3
add
push
add
mov
jecxz
ja
mov
and
add
add
xor
push
mov
xchg
ret
dec
add
adc
decb
xchg
inc
add
jp
cltd
push
add
movsb
aam
add
repnz
nop
cld
jae
xchg
pusha
xchg
add
scas
enter
nop
cld
jae
add
jno
mov
clc
repnz
nop
cld
jae
out
adc
add
dec
bound
mov
add
in
nop
leave
jmp
add
test
or
add
repnz
nop
cld
jae
test
add
cmp
mov
add
push
add
dec
pusha
pop
add
int3
add
add
clc
repnz
nop
cld
jae
lea
push
cmp
ffreep
push
mov
nop
leave
jmp
test
add
xor
pop
add
mov
jecxz
mov
jmp
add
xor
mov
fisttps
in
nop
leave
jmp
sub
add
pop
adc
add
repnz
nop
cld
jae
pusha
add
dec
cmpsb
rolb
mov
rcl
add
or
add
repnz
nop
cld
jae
inc
add
dec
inc
clc
repnz
nop
cld
jae
add
add
clc
clc
repnz
nop
cld
jae
adc
lea
or
xor
mov
mov
clc
repnz
nop
cld
jae
mov
call
clc
repnz
nop
cld
jae
add
add
and
push
mov
xchg
ret
out
adc
add
jo
mov
rol
push
mov
xchg
ret
movsl
cltd
pusha
xor
lea
clc
repnz
nop
cld
jae
add
add
add
mov
nop
leave
jmp
inc
add
mov
jno
not
push
mov
xchg
ret
fcompl
filds
add
push
mov
xchg
ret
push
add
add
ss
pusha
push
mov
xchg
ret
push
push
filds
push
ret
mov
pushf
clc
repnz
nop
cld
jae
add
std
cli
cli
push
push
mov
xchg
ret
add
add
mov
shr
incl
cwtl
add
xor
outsb
add
test
add
push
pop
add
push
mov
xchg
ret
cwtl
adc
xor
nop
nop
cld
jae
pop
add
add
cltd
fdivrl
clc
repnz
nop
cld
jae
adc
addl
repnz
nop
cld
jae
add
inc
xor
add
mov
clc
repnz
nop
cld
jae
enter
mov
popa
xor
mov
add
inc
push
mov
nop
leave
jmp
add
add
push
movsl
push
inc
lods
cmp
push
mov
nop
leave
jmp
mov
dec
outsb
mov
ja
fs
mov
nop
leave
jmp
push
je
cwtl
add
nop
nop
cld
jae
out
add
sub
add
add
push
mov
xchg
ret
pop
jae
xchg
adc
add
or
mov
nop
leave
jmp
add
add
add
add
inc
and
clc
repnz
nop
cld
jae
cli
jp
xor
inc
sub
clc
repnz
nop
cld
jae
or
add
add
add
xor
decl
push
mov
xchg
ret
add
add
sar
repnz
nop
cld
jae
add
cmp
adc
pop
popl
push
mov
nop
leave
jmp
enter
aas
hlt
leave
pop
push
mov
xchg
ret
pop
add
add
hlt
popa
dec
out
add
clc
repnz
nop
cld
jae
sub
inc
dec
add
adc
add
repnz
nop
cld
jae
push
jl
or
repnz
nop
cld
jae
jbe
pusha
add
mov
add
mov
and
push
mov
nop
leave
jmp
dec
add
adc
aas
xchg
mov
clc
repnz
nop
cld
jae
sub
mov
repnz
nop
cld
jae
aas
add
je
and
jne
clc
repnz
nop
cld
jae
add
push
mov
xchg
ret
hlt
aas
movsl
mov
add
adcl
cld
jae
or
enter
gs
lret
or
mov
xchg
ret
and
addl
sbb
nop
nop
cld
jae
add
add
add
mov
clc
repnz
nop
cld
jae
add
jbe
add
je
clc
repnz
nop
cld
jae
dec
lret
add
add
push
mov
xchg
ret
or
add
add
sub
push
mov
xchg
ret
add
add
pop
mov
test
repnz
nop
cld
jae
add
dec
push
clc
repnz
nop
cld
jae
xor
enter
or
clc
repnz
nop
cld
jae
add
dec
add
repnz
nop
cld
jae
jp
add
xor
pusha
push
mov
xchg
ret
add
inc
outsb
add
push
clc
repnz
nop
cld
jae
xchg
aas
cwtl
inc
adc
mov
clc
repnz
nop
cld
jae
jbe
xor
mov
out
add
test
add
add
dec
stc
call
in
nop
leave
jmp
add
cltd
cmp
add
call
in
nop
leave
jmp
add
popa
add
mov
xchg
ret
add
pusha
push
cltd
inc
mov
movl
add
jae
push
add
jae
push
push
mov
xchg
ret
aas
movsl
add
add
lret
pop
movsl
decl
nop
nop
cld
jae
add
add
add
push
clc
repnz
nop
cld
jae
lea
jbe
add
add
push
mov
xchg
ret
add
pusha
xchg
add
push
clc
repnz
nop
cld
jae
rolb
add
xorl
in
add
fidivrs
add
gs
lahf
rolb
sub
and
rep
clc
repnz
nop
cld
jae
add
cmp
add
inc
add
nop
nop
cld
jae
add
cmpl
sub
repnz
nop
cld
jae
xor
xor
clc
repnz
nop
cld
jae
jle
jle
pusha
out
test
nop
cld
jae
sar
cltd
inc
adc
out
add
nop
nop
cld
jae
add
pop
add
dec
add
repnz
nop
cld
jae
add
test
add
inc
cld
movzwl
clc
repnz
nop
cld
jae
dec
pop
add
add
cmp
add
pusha
add
add
push
fcompl
jbe
add
mov
jg
clc
repnz
nop
cld
jae
add
stc
push
push
mov
xchg
ret
add
add
cli
push
inc
fnstsw
scas
add
push
mov
xchg
ret
add
add
push
add
add
clc
repnz
nop
cld
jae
add
xor
pop
outsl
jne
clc
repnz
nop
cld
jae
cmp
push
clc
repnz
nop
cld
jae
sub
add
mov
xchg
ret
add
aaa
enter
in
nop
leave
jmp
add
add
cwtl
in
lea
clc
repnz
nop
cld
jae
add
mov
pusha
xor
mov
in
nop
leave
jmp
test
dec
mov
clc
repnz
nop
cld
jae
add
sarb
push
push
mov
nop
leave
jmp
cltd
xchg
add
pusha
add
xor
mov
push
mov
xchg
ret
pop
add
add
mov
sub
clc
repnz
nop
cld
jae
enter
aam
les
mov
push
mov
xchg
ret
add
movsl
push
out
test
mov
nop
cld
jae
add
pop
add
jbe
add
pop
clc
repnz
nop
cld
jae
inc
add
add
dec
pusha
inc
add
adc
repnz
nop
cld
jae
pop
add
add
jne
push
mov
xchg
ret
add
add
hlt
jae
add
clc
repnz
nop
cld
jae
add
add
rcr
mov
nop
nop
cld
jae
add
add
jl
add
add
clc
repnz
nop
cld
jae
xor
fldl
shlb
mov
pusha
add
loopne
mov
nop
leave
jmp
add
or
add
adc
jne
push
mov
nop
leave
jmp
push
add
je
jl
xor
add
clc
repnz
nop
cld
jae
add
add
push
xchg
push
mov
xchg
ret
cwtl
fldl
xchg
addl
push
clc
repnz
nop
cld
jae
add
add
lea
fsubrl
testl
add
add
fisttpll
repnz
nop
cld
jae
add
pop
jbe
test
cmpw
push
mov
nop
leave
jmp
hlt
add
add
imul
jae
je
test
xor
xchg
cltd
lcall
nop
cld
jae
xor
add
inc
pusha
test
xor
cmp
ret
add
add
dec
add
addl
push
mov
xchg
ret
xor
xchg
or
adc
hlt
push
movsb
incl
int3
dec
add
add
jae
pusha
mov
and
mov
clc
repnz
nop
cld
jae
faddl
push
pop
mov
clc
repnz
nop
cld
jae
add
add
add
mov
mov
clc
repnz
nop
cld
jae
cwtl
dec
pop
add
mov
add
add
add
add
loopw
mov
clc
repnz
nop
cld
jae
add
movzwl
clc
repnz
nop
cld
jae
jle
add
pop
mov
clc
repnz
nop
cld
jae
fldl
cwtl
add
add
push
mov
nop
leave
jmp
xchg
push
jbe
hlt
add
cltd
inc
and
mov
and
repnz
nop
cld
jae
cli
add
pop
out
add
dec
add
add
fnstsw
add
repnz
xchg
fdivrp
clc
repnz
nop
cld
jae
movsl
add
mov
clc
repnz
nop
cld
jae
xchg
dec
mov
add
roll
xchg
ret
dec
cwtl
add
cmpl
mov
nop
leave
jmp
add
add
lret
fstpl
push
push
mov
xchg
ret
add
add
dec
cmp
repnz
nop
cld
jae
enter
push
pusha
xor
fbstp
sar
repnz
nop
cld
jae
xchg
cmpl
nop
cld
jae
add
push
and
add
mov
xchg
ret
mov
adc
xor
dec
int3
fs
push
add
mov
nop
leave
jmp
add
add
xor
add
mov
clc
repnz
nop
cld
jae
cltd
hlt
add
add
sub
clc
repnz
nop
cld
jae
add
adc
les
mov
push
mov
xchg
ret
add
dec
push
xchg
adc
dec
hlt
inc
add
add
add
push
lea
nop
nop
cld
jae
add
add
adc
sub
call
outsb
mov
add
add
inc
outsl
mov
clc
repnz
nop
cld
jae
jp
xchg
xchg
add
add
repnz
nop
cld
jae
xor
cmp
sbb
rolb
xchg
ret
dec
add
add
add
add
add
push
mov
xchg
ret
add
pop
add
add
mov
dec
add
cltd
add
add
add
iret
mov
push
mov
nop
leave
jmp
cmp
dec
scas
sub
push
mov
nop
leave
jmp
add
hlt
add
aas
pop
add
clc
repnz
nop
cld
jae
add
test
lahf
cmpl
push
mov
nop
leave
jmp
adc
add
test
push
mov
xchg
ret
add
dec
dec
cltd
add
push
push
push
mov
xchg
ret
add
add
add
add
clc
repnz
nop
cld
jae
add
movsl
cwtl
add
pusha
sar
repnz
nop
cld
jae
add
add
or
mov
nop
leave
jmp
pusha
cli
add
pop
int3
add
fdiv
call
in
nop
leave
jmp
add
sub
test
repnz
nop
cld
jae
add
and
repnz
nop
cld
jae
filds
add
jl
cmovns
in
nop
leave
jmp
add
rcr
add
pop
filds
es
je
clc
repnz
nop
cld
jae
mov
mov
and
push
mov
nop
leave
jmp
add
pusha
add
cmp
repnz
nop
cld
jae
add
pop
add
popa
fists
mov
xchg
ret
inc
push
jae
add
and
enter
clc
repnz
nop
cld
jae
cmp
add
enter
lret
clc
repnz
nop
cld
jae
add
fldl
dec
lea
add
jb
push
mov
nop
leave
jmp
add
add
adc
and
push
mov
xchg
ret
pop
std
cltd
test
add
mov
mov
clc
repnz
nop
cld
jae
add
push
jno
xor
push
mov
nop
leave
jmp
cmp
aas
add
jnp
jmp
cld
jae
jl
sub
add
sub
jmp
dec
add
add
add
pop
jbe
add
lret
jne
clc
repnz
nop
cld
jae
addl
add
push
and
jae
inc
popa
add
push
push
mov
xchg
ret
je
jle
addl
aaa
je
push
dec
je
push
mov
nop
leave
jmp
xor
add
pop
mov
add
mov
loop
clc
repnz
nop
cld
jae
add
int3
add
and
push
mov
xchg
ret
hlt
dec
fnsave
and
jle
dec
cmp
repnz
nop
cld
jae
add
test
pop
add
stos
clc
repnz
nop
cld
jae
addl
add
mov
push
mov
nop
leave
jmp
faddl
add
cmpl
push
mov
xchg
ret
push
add
add
rolb
fsubrl
mov
xchg
ret
add
add
add
sbb
cwtl
push
add
clc
repnz
nop
cld
jae
aam
add
test
call
in
nop
leave
jmp
add
clc
repnz
nop
cld
jae
add
push
inc
add
stc
add
push
mov
nop
leave
jmp
xor
sub
add
and
repz
repnz
nop
cld
jae
add
outsb
xor
add
mov
mov
clc
repnz
nop
cld
jae
adc
sub
repnz
nop
cld
jae
sub
add
add
mov
mov
push
mov
xchg
ret
add
add
lea
jbe
and
cld
inc
add
add
add
add
add
jne
push
mov
nop
leave
jmp
fistps
add
hlt
push
cmpsl
loopne
mov
cltd
rep
push
mov
xchg
ret
mov
jl
add
pop
sub
test
push
mov
nop
leave
jmp
add
lea
or
sar
nop
nop
cld
jae
xchg
pop
add
sub
pop
clc
repnz
nop
cld
jae
add
add
add
pop
sti
xchg
push
mov
xchg
ret
add
adc
dec
roll
clc
repnz
nop
cld
jae
inc
push
add
call
add
add
add
add
add
movb
repnz
nop
cld
jae
aam
jae
add
mov
xchg
ret
dec
add
push
iret
add
push
mov
xchg
ret
add
inc
cmp
mov
clc
repnz
nop
cld
jae
add
jle
aas
daa
fimull
nop
nop
cld
jae
adc
filds
add
sbb
push
mov
xchg
ret
add
lea
xor
jbe
cli
sti
push
clc
repnz
nop
cld
jae
dec
sub
hlt
or
movsb
push
mov
nop
leave
jmp
jle
add
push
add
push
add
lods
clc
repnz
nop
cld
jae
outsb
pop
add
push
clc
repnz
nop
cld
jae
add
add
andl
add
add
add
pop
jle
add
mov
clc
repnz
nop
cld
jae
lea
xchg
push
cli
add
sub
clc
repnz
nop
cld
jae
cmpl
or
leave
jmp
add
add
xor
xor
add
clc
repnz
nop
cld
jae
add
add
add
mov
nop
leave
jmp
add
pusha
sbb
movsb
push
mov
xchg
ret
add
add
add
lret
repnz
nop
cld
jae
pop
jl
pop
or
fildll
adc
in
nop
leave
jmp
filds
add
cli
aam
shrl
nop
cld
jae
or
mov
add
jp
pusha
idiv
clc
repnz
nop
cld
jae
popa
add
clc
repnz
nop
cld
jae
pop
inc
add
jae
xchg
fwait
mov
push
mov
nop
leave
jmp
add
add
push
push
mov
xchg
ret
push
add
add
add
mov
xchg
ret
test
add
add
mov
mov
xchg
ret
hlt
cmpl
push
mov
nop
leave
jmp
xchg
add
aam
aam
jle
mov
mov
mov
nop
leave
jmp
jae
and
addl
push
mov
nop
leave
jmp
cmp
add
add
add
mov
clc
repnz
nop
cld
jae
add
pop
pop
push
clc
repnz
nop
cld
jae
mov
add
dec
outsb
add
inc
clc
repnz
nop
cld
jae
test
add
add
inc
add
clc
repnz
nop
cld
jae
add
jle
call
nop
cld
jae
add
add
add
jl
pop
stos
push
mov
xchg
ret
add
int3
sar
or
push
jae
add
push
push
mov
xchg
ret
add
out
xor
xor
dec
add
adc
add
add
add
aam
add
repnz
nop
cld
jae
jae
add
add
add
add
add
in
nop
leave
jmp
push
inc
adc
mov
clc
repnz
nop
cld
jae
sub
push
add
mov
push
mov
nop
leave
jmp
add
pop
jnp
inc
and
clc
repnz
nop
cld
jae
sub
add
cltd
leave
push
push
mov
xchg
ret
add
hlt
mov
sbbl
jae
push
add
push
add
call
clc
repnz
nop
cld
jae
aas
add
mov
add
mov
clc
repnz
nop
cld
jae
cli
add
imul
push
ljmp
cld
jae
add
ffreep
jmp
nop
cld
jae
push
add
push
add
jo
mov
clc
repnz
nop
cld
jae
add
and
xor
and
ss
clc
repnz
nop
cld
jae
inc
pop
add
add
repnz
nop
cld
jae
or
inc
out
add
push
mov
add
add
add
fbld
add
add
add
xor
lea
dec
cmp
repnz
nop
cld
jae
add
adc
mov
clc
repnz
nop
cld
jae
cmp
or
push
clc
repnz
nop
cld
jae
dec
pusha
push
je
add
mov
xchg
ret
push
out
adc
movsl
cltd
mov
jmp
and
add
pusha
add
push
mov
add
add
and
mov
xchg
ret
jae
mov
add
enter
call
nop
nop
cld
jae
pop
lret
add
scas
pusha
clc
repnz
nop
cld
jae
cwtl
pop
rolb
dec
add
nop
nop
cld
jae
cli
add
add
add
add
mov
clc
repnz
nop
cld
jae
add
cmp
inc
and
repnz
nop
cld
jae
inc
add
movsl
add
mov
nop
leave
jmp
add
xor
mov
mov
aad
dec
and
push
mov
xchg
ret
cmpl
stos
testl
push
mov
nop
leave
jmp
test
pop
movsb
insb
subl
clc
repnz
nop
cld
jae
add
aas
add
jne
pusha
clc
repnz
nop
cld
jae
add
add
add
outsb
pushl
push
mov
xchg
ret
je
add
pop
std
imul
add
push
jl
dec
dec
adc
mov
int
clc
repnz
nop
cld
jae
pop
hlt
popa
add
dec
inc
push
insl
mov
push
mov
xchg
ret
pusha
add
add
push
mov
nop
leave
jmp
cwtl
pusha
or
add
add
add
push
mov
xchg
ret
or
add
movsl
push
add
push
clc
repnz
nop
cld
jae
pop
add
pop
xor
jl
add
push
mov
nop
leave
jmp
add
add
jmp
xbegin
jae
or
adc
push
add
jle
jge
clc
repnz
nop
cld
jae
cwtl
cwtl
add
or
jno
mov
clc
repnz
nop
cld
jae
hlt
add
out
lea
xabort
nop
nop
cld
jae
mov
xor
pause
add
push
clc
repnz
nop
cld
jae
or
cltd
add
jbe
add
clc
repnz
nop
cld
jae
int3
add
test
call
clc
repnz
nop
cld
jae
add
inc
add
mov
add
in
nop
leave
jmp
popa
add
push
mov
xchg
ret
std
cwtl
push
add
push
add
les
clc
repnz
nop
cld
jae
add
pop
add
add
shll
dec
adc
repnz
nop
cld
jae
addl
push
mov
in
add
clc
repnz
nop
cld
jae
add
orl
ss
repnz
nop
cld
jae
movsl
xor
add
add
pusha
add
clc
repnz
nop
cld
jae
popa
add
imul
jae
add
add
adc
clc
add
in
nop
leave
jmp
adc
std
add
add
stos
dec
push
mov
xchg
ret
cwtl
aas
cli
add
inc
add
cmp
push
mov
add
add
jg
add
mov
xchg
imul
ret
std
repz
mov
cmpsb
leave
push
addl
mov
imul
jg
sbb
push
push
add
loop
mov
add
lret
jl
int
or
enter
clc
arpl
xchg
repz
add
xchg
xchg
add
add
and
push
cmc
test
jmp
adc
mov
add
add
pop
and
jne
dec
mov
push
mov
pop
incl
mov
add
mov
and
mov
add
inc
add
mov
add
inc
sub
ret
sbb
mov
mov
ds
and
or
sbb
jne
mov
mov
repz
movb
movd
idivb
jmp
cs
push
and
cmp
mov
test
imul
es
std
jo
mov
lahf
arpl
repnz
add
adc
mov
mov
sub
mov
ret
mov
pop
fildll
lahf
dec
sbb
mov
or
add
push
jmp
out
mov
loop
mov
mov
jns
sbb
cs
pop
addb
jno
add
pminub
add
mov
adc
mov
and
mov
icebp
hlt
out
mov
fwait
jp
loop
mov
loope
mov
cltd
out
cmc
sub
xor
mov
inc
add
stc
mov
push
xchg
pop
sbb
rolb
mov
mov
inc
mov
test
pop
jmp
ss
and
mov
adcl
mov
cmpsl
insb
mov
test
pop
cmpsl
je
mov
mov
push
pop
aas
cmp
pop
pushf
pusha
add
lcall
popf
cltd
xchg
and
jmp
xchg
fadds
add
rcll
loopne
mov
ljmp
dec
imull
jns
movsb
push
adc
mov
mov
inc
outsb
jg
cltd
adc
loopne
mov
pop
loop
mov
xchg
mov
in
mov
repz
jne
cmp
popf
jecxz
mov
movsb
rolb
icebp
mov
mov
dec
aad
in
jnp
add
sarl
icebp
or
fidivrs
xor
add
push
imul
aam
and
jl
mov
stos
int
stc
cmp
pop
addb
adc
clc
dec
mov
cld
out
fldenv
mov
enter
mov
cmpsl
xchg
mov
shl
mov
xchg
mov
jns
add
aaa
sbb
leave
popa
roll
add
sbb
sar
inc
iret
xchg
add
mov
add
insb
loopne
mov
jle
mov
and
pop
neg
aas
xor
add
add
mov
das
jecxz
lock
call
cmp
repz
cmp
mov
add
stos
dec
dec
ss
insl
ficoms
inc
add
pop
inc
or
pop
sarl
add
enter
xchg
mov
incl
roll
adc
mov
dec
jge
inc
jecxz
jno
pop
mov
lods
xlat
add
daa
aad
jge
xor
mov
arpl
or
mov
add
add
inc
pop
test
or
add
fdiv
mov
cmpsl
sbb
nop
add
jge
add
jb
mov
mov
imul
rolb
mov
add
xor
mov
cmc
mov
not
lcall
mov
xor
add
xor
cld
lret
push
add
mov
jmp
es
dec
add
cmpsb
pop
test
sbb
add
mov
add
pop
jl
pop
out
sub
mov
mov
add
add
mov
stos
dec
inc
cmp
pop
or
shll
stos
fs
rcll
xor
mov
push
stos
adc
add
xlat
mov
mov
xor
jne
bound
mov
cli
mov
add
push
stos
imull
mov
and
and
or
push
jle
fs
add
jo
mov
cmp
or
adc
add
imul
add
sub
cmc
mov
iret
inc
nop
add
mov
aas
lcall
mov
mov
push
addb
dec
movsl
out
jbe
mov
test
test
enter
std
into
mov
cmp
mov
sbb
pop
sbb
cli
fsubrs
add
pop
cmp
mov
ret
je
repnz
jecxz
dec
sti
jns
mov
dec
xlat
push
adc
mov
xchg
rolb
mov
add
add
jnp
addb
stos
repnz
add
dec
jne
fstps
pop
cltd
outsl
mov
cmpsl
xchg
daa
jns
push
cwtl
xor
jo
mov
pop
and
mov
rcll
mov
cli
inc
add
dec
or
mov
mov
and
mov
sbb
aaa
sub
lock
cs
add
fnstsw
cltd
pop
ret
icebp
fidivrl
fildl
pusha
add
int3
xchg
add
mov
push
add
xor
add
repnz
lea
lds
lcall
dec
add
push
mov
xchg
and
add
push
add
add
add
addr16
mov
push
xchg
xchg
notb
add
add
mov
es
sbb
add
pop
jg
leave
inc
add
lcall
mov
bswap
dec
popa
aas
xchg
jge
sub
sub
add
adc
add
mov
cmp
push
cmp
xor
xchg
jns
add
xor
xor
cwtl
inc
imul
pop
addb
mov
adc
imul
flds
inc
add
aad
test
fwait
mov
add
or
pop
and
jp
cmp
mov
aam
xchg
movsl
outsb
repnz
xchg
add
or
add
lea
jg
xchg
popf
test
mov
mov
mov
fwait
lds
scas
jl
fldl
add
fadds
fdivrl
inc
push
bound
mov
int
cli
push
cmp
or
cmp
movsb
loopne
mov
aad
test
xor
loope
bound
mov
fdivrs
int3
pop
out
adc
lret
jge
ja
add
mov
mov
insb
sub
add
repnz
loope
xchg
rcrl
mov
mov
add
push
clc
cmpsb
add
mov
sub
cli
cmpsl
xlat
and
mov
in
jmp
mov
push
pop
mov
mov
cmp
loope
or
clc
cmpsb
mov
xor
add
adc
leave
jb
mov
inc
push
in
popa
xchg
add
es
push
in
mov
push
insl
jb
mov
bound
mov
fwait
daa
xchg
mov
aam
cltd
mov
pop
shll
mov
add
mov
push
sbb
add
add
cmpl
dec
stos
in
cmpsl
dec
adc
mov
lods
int3
scas
cmp
lret
xor
or
mov
push
add
cld
mov
add
mov
mov
cmp
jl,pn
jo
mov
repnz
sub
sbb
xchg
push
fimull
mov
add
add
fxtract
or
mov
add
add
mov
test
dec
hlt
jle
pop
test
inc
inc
add
add
mov
add
add
dec
add
movsl
dec
mov
ror
loope
dec
mov
or
jnp
sub
pop
sbb
add
and
mov
aaa
test
hlt
loop
mov
push
push
insb
repz
add
xchg
shll
push
pop
scas
cltd
cmc
enter
mov
inc
inc
loopne
mov
std
push
jl
adc
mov
call
mov
data16
frstor
fildl
mov
jns
fldl
xchg
in
lret
jns
fwait
pop
jae
jle
enter
mov
inc
addb
mov
pop
loopne
mov
frstor
int
dec
mov
xlat
lods
aad
push
adc
inc
mov
add
loopne
mov
enter
fildl
int3
mov
cmp
out
add
sub
lcall
add
dec
lea
xchg
mov
fwait
hlt
mov
add
inc
lret
inc
push
and
ret
add
outsb
push
inc
add
leave
xor
sahf
push
add
mov
mov
leave
sub
lret
mov
insl
jnp
push
out
test
add
xchg
mov
mov
mov
test
aaa
sbb
aaa
in
inc
fs
in
push
insb
out
into
icebp
test
xchg
rolb
mov
rolb
js
mov
mov
adc
mov
mov
mov
add
mov
cmp
add
dec
cmp
mov
inc
add
pop
lods
sarl
jmp
cmc
sub
lods
fs
adc
mov
lret
cmp
mov
inc
js
mov
lret
cmp
add
inc
xor
jge
scas
inc
sbb
pop
rolb
or
outsb
jmp
pop
push
das
es
dec
popa
xor
xchg
jmp
lahf
gs
cld
stos
sub
sub
shll
mov
mov
fnstenv
push
add
add
sbb
pop
jl
pop
mov
or
aas
je
mov
mov
add
push
fisubl
fimuls
pop
jae
pop
cwtl
xchg
daa
jbe
mov
xor
mov
add
mov
mov
push
cmp
add
stos
lea
add
daa
mov
imul
add
adc
xor
mov
push
add
mov
mov
sub
cmp
xlat
inc
add
add
dec
mov
cmp
inc
push
add
jnp
ret
push
dec
daa
xchg
add
jge
xor
adc
mov
add
cmp
pop
push
inc
add
adc
mov
add
mov
inc
add
mov
lahf
adc
push
cmpsl
mov
add
mov
notl
aam
mov
inc
mov
lds
push
add
push
in
out
pusha
add
dec
pop
hlt
dec
jg
lret
pop
adc
mov
add
lods
shrl
add
cmp
lret
xlat
xchg
add
add
dec
lods
push
loope
add
std
data16
mov
xor
data16
mov
loope
dec
adc
mov
add
fldl2e
and
mov
leave
push
scas
enter
sbb
mov
add
add
xor
inc
mov
mov
add
xchg
add
mov
addb
icebp
aam
aas
inc
fmulp
pop
xor
mov
mov
add
roll
lcall
int3
out
dec
and
pop
pop
call
jb
mov
adc
add
xchg
in
lcall
stos
dec
jg
cld
jo
mov
mov
cmp
adc
add
mov
fildll
jecxz
xchg
xchg
add
sbb
fmull
xor
push
xchg
lock
jae
psubsb
loopne
mov
xor
ss
mov
jae
inc
add
test
jp
pop
mov
adc
mov
stc
sub
fistpl
icebp
cmp
popf
hlt
and
mov
cmpsb
adc
pop
pop
cwtl
mov
jns
adc
mov
cmp
es
add
mov
xlat
stos
pop
hlt
sbb
fists
pop
dec
out
add
xor
mov
loop
mov
jp
hlt
jne
push
jno
pushf
mov
push
xchg
add
push
pop
or
es
outsb
jnp
lret
dec
nop
add
push
add
movsl
push
lahf
daa
dec
stos
mov
rorl
jmp
dec
mov
loope
mov
lea
popa
mov
mov
mov
jp
ss
popf
pop
in
push
add
out
roll
mov
jmp
sti
shll
je
adc
adc
cmp
mov
xchg
mov
inc
pop
or
mov
mov
lock
add
lret
mov
push
push
or
jl
push
add
mov
jne
aaa
jmp
add
push
mov
int
mov
jecxz
mov
add
add
jo
mov
sub
sar
mov
inc
add
jbe
push
cwtl
xchg
and
sbb
arpl
lds
sub
out
add
mov
jno
push
icebp
ds
cltd
aam
xchg
inc
ret
fadd
add
push
sub
add
mov
xor
mov
mov
mov
mov
mov
sub
push
sbb
mov
imul
subl
addb
ljmp
adcl
push
das
add
mov
add
mov
addl
shll
add
mov
jle
popf
cld
fnstcw
addr16
and
dec
xorl
adc
sbb
push
sub
fdivrs
sub
dec
mov
ret
xor
mov
popa
daa
sbb
pop
xlat
cmpsl
push
rolb
mov
outsl
adc
or
rolb
jno
sbb
enter
mov
not
in
idivb
std
mov
dec
push
mov
mov
mov
or
sbb
add
adc
add
sub
add
xor
decb
add
cmpl
dec
add
mov
enter
fucomip
in
sbb
vmaxpd
sub
popf
repnz
out
jge
add
add
mov
add
xor
mov
jbe
lea
leave
out
add
daa
aas
pop
outsb
scas
ljmp
scas
daa
clc
mov
mov
imul
xchg
lahf
scas
fucomp
addr16
add
adc
mov
mov
cmp
lock
mov
add
jle
je
push
cmpsl
dec
arpl
push
sahf
stos
push
imul
inc
lods
outsl
aas
xchg
or
out
sahf
jne
test
iret
sbb
out
push
adc
mov
dec
push
push
ja
mov
insb
and
mov
repnz
jle
lret
sub
outsb
aad
push
add
add
movb
mov
cmp
rolb
mov
sub
inc
inc
cltd
push
inc
hlt
mov
mov
mov
xchg
and
mov
add
cmc
adc
mov
loop
mov
fdivrl
mov
lods
hlt
orl
push
cmpsb
inc
add
sbb
fwait
jmp
push
out
or
adc
cltd
daa
rolb
mov
or
xchg
stc
cmpsl
popf
xchg
add
add
mov
loopne
mov
adc
mov
push
mov
mov
test
cmpl
ja
scas
push
or
stos
xchg
lret
adc
xchg
add
es
push
adc
jbe
outsl
fs
addb
sbb
daa
nop
add
jg
add
dec
fadds
stc
cld
jge
jmp
and
mov
cmp
mov
add
jbe
pop
or
inc
add
add
or
aad
js
aad
add
ret
push
fildl
roll
daa
xor
mov
add
add
add
lods
fldt
xlat
and
mov
movntq
add
push
xor
loope
pop
jae
sbb
add
pop
and
mov
movl
add
mov
jg
inc
jns
lret
sahf
mov
mov
sbb
add
sub
mov
out
cmpsb
mov
add
dec
pop
repnz
add
insb
cmp
jnp
shll
add
inc
test
icebp
sbb
and
mov
jae
inc
add
lods
pop
pop
dec
xor
sahf
mov
mov
addb
sti
out
fisttpll
add
cli
add
stos
pushl
mov
mov
mov
stos
mov
adc
mov
shll
mov
aam
add
cmp
add
add
data16
loope
inc
sbb
in
mov
addb
scas
ja
mov
mov
sub
pusha
add
jo
mov
add
cli
lea
jbe
test
mov
add
jmp
lods
addr16
pusha
add
stos
dec
lahf
pop
aad
nop
add
pop
gs
sub
add
dec
pop
into
sub
addb
lret
mov
lea
outsb
cli
adc
mov
push
mov
rolb
mov
mov
int
add
aas
outsl
push
rolb
mov
add
cmp
mov
mov
das
jmp
hlt
inc
int
bound
mov
mov
cmpl
jae
std
pushf
sbb
push
scas
fdivr
add
mov
inc
add
in
sub
rsm
rolb
mov
clc
addr16
push
add
fldt
xor
jnp
xchg
out
std
into
insb
fsubl
add
jge
pop
stc
gs
orl
mov
add
push
fidivrl
mov
movsl
adc
mov
mov
loope
inc
loopne
mov
mov
jns
xchg
add
xchg
aad
inc
mov
mov
cmp
add
popa
and
mov
lods
addb
add
mov
addl
mov
stos
imul
movsb
pop
ja
fildll
cmc
fdivrs
mov
inc
add
add
in
sub
or
add
add
mov
push
lods
dec
cs
test
mov
xchg
pop
int3
fstpt
add
cwtl
pop
adc
mov
adc
js
in
aaa
aad
add
test
mov
jno
sti
fstpt
nop
add
insb
dec
cmp
push
add
fs
aaa
in
imul
aad
mov
and
mov
in
inc
push
outsl
mov
movsl
pop
push
fs
ljmp
push
add
add
insb
mull
repnz
mov
icebp
sbb
test
addr16
cmpsb
fiadds
push
rsm
xor
cmp
inc
in
sub
add
mov
loop
mov
add
mov
jmp
push
mov
into
jo
mov
aad
out
inc
mov
mov
mov
add
mov
loop
mov
mov
addb
pop
rolb
mov
cli
gs
dec
lcall
js
add
dec
cmpsl
pop
inc
lds
jg
dec
jo
mov
lods
inc
sbb
mov
mov
in
mov
add
mov
xor
mov
xchg
dec
inc
jne
rolb
mov
lret
mov
test
ret
xchg
mov
add
pushf
jp
add
fmull
jmp
lret
addb
arpl
das
mov
inc
insb
lods
dec
jp
fcoml
mov
outsl
and
lods
push
out
add
mov
mov
add
pop
ja
call
dec
add
add
addb
cmp
lret
dec
inc
imul
add
add
mov
fld
aam
jbe
add
sbb
or
cld
jecxz
push
or
jae
mov
enter
jl
loopne
mov
pop
xchg
jo
mov
aaa
cmp
sbb
clc
dec
daa
pop
cwtl
out
int3
movsl
pop
aas
dec
inc
fsubrp
movsl
push
add
add
push
inc
je
shll
pop
jp
add
mov
mov
cmp
int3
into
cmp
xor
add
add
scas
dec
cmpsb
pop
flds
mov
mov
mov
xchg
add
iret
push
pop
mov
xchg
add
mov
adc
mov
icebp
adc
mov
inc
add
jmp
mov
push
popa
and
out
outsl
mov
icebp
push
mov
xchg
xchg
add
mov
sti
loope
cmp
rolb
xchg
add
testl
xchg
call
mov
leave
bound
mov
cmpsl
out
lret
pop
fdivl
cltd
push
dec
jbe
cmc
cmp
daa
movsb
and
inc
add
in
add
or
fists
test
cmpsb
mov
pop
test
and
out
sub
decb
add
addb
xor
sub
ret
and
push
add
lods
xchg
outsb
testl
fistpll
movsb
mov
lea
xchg
icebp
aad
push
test
cli
in
lret
sbb
imul
iret
mov
add
mov
stc
push
add
mov
mov
add
push
add
jl
insb
sbb
fs
les
in
sbb
xor
mul
add
jg
in
testl
add
cs
push
add
dec
dec
lock
cmc
daa
fwait
or
and
out
add
into
fnstcw
jmp
push
xor
mov
xchg
mov
mov
daa
push
ja
lcall
mov
in
aaa
xlat
dec
ds
out
pop
cmp
mov
in
sub
adc
mov
pop
and
mov
mov
dec
std
sbb
add
es
ljmp
into
xor
test
mov
push
add
leave
pop
rolb
mov
add
mov
lret
jno
leave
cli
sbb
and
mov
cmp
sbb
add
mov
sub
enter
mov
push
pop
cmp
cmc
jo
mov
add
adc
mov
dec
adc
lea
repz
cs
xor
add
mov
inc
push
add
mov
mov
add
sti
sub
std
adc
iret
adc
mov
addb
stos
mov
xchg
mov
mov
lret
add
push
in
adc
int3
dec
divl
sarl
call
xor
mov
int
push
xchg
cmc
fcmovb
test
adc
mov
jecxz
sbb
mov
pop
mov
sbb
mov
mov
jp
inc
fld
pop
xchg
xor
mov
sbb
inc
add
mov
rolb
mov
int3
push
push
inc
xchg
pop
cmp
dec
les
pop
pop
xchg
stos
std
fsubrs
inc
xchg
sar
lods
js
dec
dec
or
arpl
add
push
add
stc
cmp
adc
mov
repz
push
cs
add
mov
pop
cmp
adc
pop
lahf
clc
insb
mov
pop
sbb
xchg
rolb
mov
add
sub
fimuls
rcrl
je
sahf
aam
imul
or
or
rolb
mov
push
aaa
sbb
mov
add
mov
in
push
pop
lret
mov
mov
popa
scas
cld
rolb
mov
hlt
outsl
jecxz
jp
nop
add
push
add
and
jne
je
je
dec
pop
lods
sbb
test
inc
jo
mov
mov
jmp
push
and
mov
cmc
cmp
xchg
mov
subl
fiadds
popa
scas
in
rolb
out
cmp
xchg
outsl
jnp
mov
mov
sub
mov
add
pop
cld
adc
test
mov
ret
popa
inc
xor
mov
mov
stos
mov
aas
les
sub
mov
int3
enter
dec
movsb
gs
sbb
xor
mov
inc
add
mov
mov
mov
jbe
and
std
dec
jbe
xchg
add
ss
push
add
add
and
rcll
add
ja
lret
adc
lds
add
add
xchg
iret
pop
aaa
imul
cmp
lcall
mov
outsb
lcall
pop
into
sub
orl
std
hlt
dec
or
in
push
push
out
mov
mov
jae
add
add
add
pop
sahf
mov
mov
mov
fsincos
fwait
or
mov
cs
repnz
ret
cmpsb
push
mov
rolb
mov
mov
xor
add
mov
in
xor
jbe
scas
rolb
mov
mov
jae
out
call
rolb
mov
add
fwait
jge
add
shll
fucom
imul
push
add
add
xor
add
mov
mov
add
mov
adc
data16
add
dec
jecxz
rolb
mov
rorl
loope
es
add
bound
mov
stos
ljmp
pop
jb
mov
inc
add
scas
jo
mov
mov
push
sbb
pop
sbbl
adc
mov
mov
add
popf
xor
cmp
mov
lea
sti
fisttps
sbb
adc
dec
jl
add
sub
cwtl
mov
add
lods
mov
jp
adc
mov
fs
add
add
or
addb
jns
fstpt
ret
pop
std
dec
push
inc
mov
xchg
inc
add
jnp
push
xchg
mov
add
add
clc
outsl
movsl
arpl
or
repnz
lret
adc
mov
sahf
mov
add
mov
xlat
lret
mov
cld
lret
notb
in
push
push
add
mov
inc
loopne
mov
sub
arpl
aaa
push
or
insl
mov
mov
adc
jnp
add
mov
add
test
in
leave
cmp
mov
cmp
rolb
mov
sub
xchg
aad
add
mov
xchg
iret
mov
dec
into
sub
mov
xchg
ja
popa
cld
jae
dec
fadds
mov
inc
mov
loopne
mov
add
movsl
mov
bound
mov
js
push
cltd
or
int
ret
add
mov
dec
insb
jecxz,pt
pop
xlat
mov
mov
outsb
xchg
shll
add
cld
push
adc
inc
add
cltd
push
pop
mov
jo
mov
adc
xor
test
fsubp
add
loop
mov
scas
iret
inc
les
mov
out
mov
addr16
aaa
xchg
add
mov
xchg
lret
lock
cld
or
add
mov
fmull
sbb
cmp
nop
add
cmp
fldt
sbb
cli
mov
xchg
add
lcall
and
movsl
fs
iret
lods
pop
inc
adc
mov
addb
nop
jmp
sub
lret
aam
scas
cltd
push
sbb
fisubs
adc
adc
mov
mov
push
push
mov
push
push
and
mov
xchg
jae
nop
add
add
ja
xchg
add
adc
mov
push
or
mov
das
or
add
das
add
rolb
mov
add
mov
cmp
fldt
dec
sub
adc
mov
popf
mov
lcall
pop
pushw
xor
mov
add
icebp
xor
mov
xchg
hlt
into
inc
test
cmp
add
fistl
mov
imul
mov
mov
test
jbe
pop
cwtd
out
rolb
mov
xchg
mov
ds
testb
mov
mov
inc
pop
ret
int
push
stos
pushf
int
and
mov
in
fwait
les
lds
jno
sub
jmp
sbb
mov
and
mov
es
add
push
cmp
jo
mov
aam
xor
sub
int
addb
pop
jl
lahf
mov
mov
stos
jecxz
adc
rolb
mov
xor
mov
icebp
test
jmp
imul
jle
add
mov
jno
cli
push
les
dec
inc
in
incb
repnz
jno
test
xor
hlt
leave
daa
icebp
or
scas
adc
jge
xchg
adc
mov
addb
sti
mov
pop
xlat
in
scas
repnz
pop
lods
test
outsb
cmp
ret
repnz
xchg
jp
xchg
test
add
add
dec
aad
add
cli
out
sub
jae
add
add
leave
or
cmp
cmp
jo
mov
sub
inc
xchg
enter
mov
es
adc
mov
ss
sbb
add
insl
std
inc
negl
fists
mov
ret
or
push
mov
inc
add
mov
xchg
aam
pop
xor
imul
into
bound
mov
mov
mul
add
jg
pushf
xchg
pop
addb
or
sti
addb
fldl
rolb
push
mov
add
test
aam
mov
mov
jp
cmp
add
ds
mov
add
lret
icebp
in
aaa
jg
cmpsl
pop
mov
mov
xchg
sbb
stc
into
mov
fsubrl
mov
cmp
aam
fiaddl
cmpsl
icebp
adc
mov
mov
outsl
and
mov
iret
dec
jns
popf
jg
and
movsl
push
xchg
dec
sub
loop
mov
cmp
lret
dec
xlat
xchg
add
stos
aad
mov
pushf
push
cmp
jge
scas
xor
data16
add
sbb
pop
sub
dec
mov
fidivl
lods
jb
mov
add
int
pushf
movsl
out
in
in
push
mov
add
int3
mov
stos
iret
mov
pop
pop
pop
stc
jge
xchg
push
fadds
sub
add
pop
shll
mov
mov
dec
daa
add
mov
aad
add
mov
jno
cmpsb
mov
add
cmp
mov
mov
aam
scas
xor
add
imul
jg
daa
ds
dec
push
sbb
adc
call
mov
add
cwtl
lock
and
mov
mov
add
xchg
mov
addb
jmp
or
stos
aam
adc
jge
and
into
fisubl
mov
dec
push
and
push
test
mov
icebp
imul
pop
pop
repnz
outsb
cmpsl
out
push
adc
imul
stc
dec
push
or
dec
int
xchg
jl
aad
std
xchg
incl
push
add
or
cvtps2pd
push
ss
rcll
push
mov
cmp
or
scas
popa
insb
cld
xor
mov
xchg
add
mov
add
add
fwait
xchg
jg
push
fdivp
gs
add
mov
mov
inc
add
std
inc
mov
mov
push
sbb
push
or
add
mov
lcall
sub
fsts
add
sbb
maskmovq
divl
pop
xchg
jmp
mov
push
inc
add
jl
or
unpckhps
and
add
mov
sahf
xchg
aad
or
out
jecxz
pop
jnp
or
or
mov
aad
fcomps
sbb
bound
mov
mov
add
fwait
aaa
or
push
das
and
and
sbb
pop
lea
mov
ljmp
jg
aad
leave
iret
out
add
dec
loopne
mov
cmp
xchg
add
add
add
mov
push
xchg
rorl
mov
jge
mov
arpl
cmp
cmp
xchg
add
je
nop
add
add
cmovs
call
insb
adc
mov
or
jle
fsubrl
push
in
stc
pop
mov
add
xchg
sub
in
movsl
nop
add
sbb
and
mov
jp
adc
push
call
jns,pn
stos
fidivs
xor
addb
pop
popa
addb
inc
sub
inc
rolb
lcall
lock
add
mov
pushf
mov
jl
das
aaa
js
faddl
push
mulb
add
mov
mov
add
sbb
xor
mov
pop
mov
popa
das
fiaddl
jae
cmpsb
dec
mov
mov
frstor
data16
in
jmp
push
cs
dec
cld
test
mov
add
mov
outsl
push
pusha
add
inc
ret
addb
fisttpll
add
mov
fldl
sub
aad
movsl
xchg
cwtl
jge
pop
outsb
mov
mov
pop
push
add
push
cmp
shll
mov
sub
fldl
repz
dec
xor
mov
addb
lret
or
addb
aas
out
iret
adc
cs
xor
jle
add
mov
sbb
cmpsl
cli
divps
cs
daa
jno
into
fsubl
fs
pop
mov
jl
pop
loope
in
mov
hlt
xor
mov
es
int
aad
add
mov
mov
xor
mov
cmpsl
dec
or
mov
aad
xor
mov
mov
fdivrs
gs
rcl
stc
xchg
add
test
add
sahf
sub
mov
adc
mov
int3
loop
mov
dec
in
sar
dec
xor
mov
leave
mov
or
popa
xchg
fldt
imul
push
mov
mov
rolb
mov
cmp
mov
fstpt
divl
and
stos
movsl
cmp
add
not
add
mov
mov
stos
jnp
out
enter
mov
cs
sub
pop
in
jbe
cmp
movsl
xchg
jne
jae
enter
mov
mov
mov
cmp
xchg
frstor
into
imul
sub
cs
mov
stc
pop
mov
and
dec
pop
clc
and
mov
jbe
negb
cmpsb
into
test
ffree
xor
inc
add
inc
add
mov
mov
push
add
mov
add
mov
in
int3
rolb
mov
add
add
mov
xchg
add
sti
sub
shr
test
cwtl
push
inc
sub
or
ret
dec
dec
and
addb
mov
add
mov
jbe
jg
sub
mov
mov
mov
addr16
lret
fisubs
xchg
add
into
pop
out
cld
xor
mov
mov
imul
outsb
pop
data16
jb
mov
xchg
add
std
or
inc
rolb
mov
subl
mov
mov
xchg
lret
push
addb
cltd
addr16
adc
mov
add
add
xchg
add
sbb
mov
mov
mov
mov
sbb
cwtl
sub
pop
aad
pushf
repnz
hlt
comiss
mov
stos
ret
mov
ds
xchg
xor
ret
icebp
ljmp
repnz
lods
icebp
push
mov
and
cmpsl
sub
mov
add
fs
add
popa
sub
add
add
mov
inc
add
lock
fldenv
ljmp
xlat
sub
mov
push
sub
xchg
pop
sub
jb
mov
mov
pushl
mov
mov
std
pop
cmpsb
addr16
sbb
add
mulb
mov
add
sbb
inc
jb
mov
mov
outsb
mov
nop
add
popa
pop
jge
rolb
mov
jbe
rolb
or
icebp
push
into
lea
and
jo
mov
fnstenv
lcall
inc
add
jbe
sbb
push
inc
or
addb
adc
mov
sub
add
mov
add
pop
imul
adc
loope
ja
dec
insl
fisttpl
sub
shll
icebp
rolb
mov
addb
push
int3
fmull
out
add
ja
xchg
fcmovnbe
add
xor
and
sub
add
jae
mov
push
cmp
dec
lds
or
xchg
call
xchg
adc
call
push
rcll
adc
mov
lds
aas
mov
pop
push
ljmp
and
push
jnp
pop
inc
add
mov
cmpsl
call
test
das
mov
xlat
mov
insb
test
outsb
pcmpeqw
add
pop
mov
or
add
popf
ds
jmp
pop
sub
sti
cmp
add
mov
xor
and
jno
in
inc
push
fs
arpl
inc
jecxz
mov
inc
lds
mov
in
sub
and
add
inc
adc
mov
ja
or
call
and
stos
and
mov
mov
sbb
add
mov
mov
mov
mov
gs
sbb
sub
das
mov
and
cmp
push
movl
in
das
pop
xor
pop
daa
jnp
and
jo
mov
movsl
mov
xchg
lock
mov
jo
mov
test
add
lds
push
sub
add
add
pop
sti
adc
mov
call
cmp
xor
push
cwtl
jp
add
jg
ret
negl
xchg
movsl
inc
cmpsl
add
mov
push
xchg
xchg
movl
sbb
mov
mov
dec
mov
mov
mov
push
add
inc
addb
fisubrs
push
sbb
mov
js
test
add
test
pop
ret
bound
mov
iret
xchg
lods
fsubrs
or
or
das
pop
popf
mov
add
mov
lds
mov
mov
mov
add
push
add
out
movsb
push
dec
sbb
mov
mov
push
fidivs
lcall
mov
add
add
mov
leave
mov
push
adc
mov
add
cmp
xchg
cltd
icebp
ss
dec
adc
mov
add
dec
stc
jnp
data16
mov
rolb
lret
mov
scas
mov
mov
dec
shll
mov
and
jne
pop
or
mov
mov
add
jno
xchg
push
mov
in
pop
sub
dec
std
frstor
sahf
ds
cltd
dec
mov
rolb
adc
in
add
fs
pusha
add
xchg
lret
cmp
add
push
movl
leave
loopne
mov
test
push
lds
lret
flds
aad
mov
sbb
and
mov
xor
out
xchg
add
mov
ja
or
mov
test
mov
inc
fiadds
and
mov
mov
adc
add
mov
sub
mov
cmp
pop
sbb
mov
call
xchg
add
lea
sbb
add
sahf
imul
dec
pop
in
cli
lret
xchg
or
je
inc
mov
aaa
xor
mov
aas
addb
push
movsl
push
xor
mov
cmp
add
insb
xchg
add
xchg
add
dec
test
je
add
call
push
setns
dec
mov
cwtl
into
jb
mov
rolb
mov
mov
add
pop
push
sub
std
sbb
add
add
sahf
inc
add
clc
out
adc
mov
jp
rolb
mov
mov
pop
lret
add
shrl
stc
sahf
js
add
test
lahf
push
rolb
mov
sbb
rolb
mov
add
mov
jge
xor
add
xchg
outsb
stos
fisttps
mov
in
lock
call
ret
mov
mov
mov
js
outsl
arpl
cmpsl
jecxz
push
dec
cmp
xor
sbb
xchg
jp
filds
mov
mov
out
clc
scas
in
xlat
add
test
jecxz
pop
shll
pop
pop
and
js
cmpsb
bound
mov
adc
xchg
rolb
jmp
xchg
add
test
mov
mov
add
mov
popf
fisubrl
bound
mov
cmp
and
mov
mov
mov
cmpsl
dec
sbb
insb
aam
add
movsb
in
push
fsubr
scas
mov
xchg
pop
mov
icebp
dec
into
pop
xor
mov
sbb
test
sub
and
clc
iret
push
mov
mov
adc
add
cs
push
add
mov
mov
mov
clc
sub
test
cmp
add
enter
test
pop
imul
aaa
and
cmp
arpl
add
repnz
xor
add
mov
xor
sub
add
mov
test
out
outsb
lds
das
jl
insl
cli
xchg
call
mov
add
ds
pop
push
dec
xchg
jmp
repnz
mov
mov
add
add
push
add
jnp
xchg
lret
scas
loop
mov
dec
out
add
lcall
daa
add
mov
push
sub
bound
mov
mov
mov
jne
les
push
cmp
stc
bound
mov
dec
or
pop
test
insl
aad
adc
mov
and
ljmp
add
in
sahf
out
add
mov
inc
call
ret
push
push
loopne
mov
adc
mov
mov
test
add
mov
hlt
xor
test
add
mov
mov
mov
addb
out
loop
mov
mov
aad
sbb
inc
jae
adc
xchg
and
mov
imul
iret
mov
cld
pop
test
mov
imul
push
and
mov
call
add
gs
add
into
jg
mov
cmpsl
dec
cmp
pop
popa
sbb
xchg
xor
mov
loop
mov
add
add
fldenv
add
mov
mov
mov
roll
mov
rolb
mov
mov
xor
mov
add
sub
push
add
add
pop
arpl
mov
add
pop
push
bound
mov
mov
add
fisttpll
add
mov
mov
mov
mov
call
mov
mov
jns
cmp
jp
leave
mov
mov
loop
mov
mov
enter
or
fcoms
movsb
insb
mov
imul
call
inc
mov
mov
xchg
lea
dec
outsl
mov
mov
fdivrl
jge
adc
mov
mov
popf
sti
jae
cltd
stos
ret
loopne
mov
pop
mov
jp
lret
in
rolb
mov
jl
idivb
push
push
scas
cmpsb
xor
mov
mov
add
inc
and
sbb
add
mov
fsubrs
sub
mov
mov
les
imul
xor
add
add
dec
sahf
cmpsl
pop
rolb
mov
push
ret
test
scas
fdivs
mov
push
sub
add
pushf
lret
sbb
cld
paddsb
jp
lock
inc
add
mov
jbe
repz
mov
addb
sub
mov
ds
mov
pushf
repz
add
mov
into
in
adc
ljmp
rolb
sbb
jle
outsb
adc
mov
push
popf
bound
mov
pop
mov
add
mov
add
mov
out
aas
lahf
inc
xor
mov
lds
add
mov
add
mov
add
jno,pn
jo
mov
jl
add
add
cmp
lret
pop
das
add
add
mov
mov
popa
fistl
xor
mov
dec
mov
imul
enter
mov
adc
add
mov
dec
cmp
in
fisttpll
test
cli
add
and
add
mov
mov
stos
fs
cwtl
cmp
pop
add
mov
cltd
shll
enter
nop
add
mov
enter
cmp
or
arpl
fisttpll
mov
aaa
mov
adc
add
mov
mov
int
test
mov
mov
add
push
add
add
out
aad
bound
mov
in
jp
rolb
mov
mov
add
shll
dec
cmc
mov
into
hlt
cmpsb
call
cmp
add
jp
aam
mov
addb
or
mov
mov
mulb
mov
mov
add
idivl
adc
add
fsubrl
mov
add
add
sbb
addb
insl
push
add
xor
mov
stos
or
inc
mov
mov
jge
inc
rolb
imul
pop
and
mov
add
sbb
jecxz
dec
arpl
add
sbb
mov
pop
jecxz
mov
fisubl
add
inc
add
cld
loope
sbb
jnp
rolb
lcall
add
mov
setg
sbb
mov
xchg
mov
add
addb
or
mov
add
gs
mov
not
add
addr16
insl
shll
dec
je
add
add
cs
or
insb
pushf
xor
insl
xlat
mov
mov
mov
lods
mov
add
inc
add
mov
lock
cmp
std
ret
mov
mov
add
mov
loope
add
mov
daa
pushf
xchg
push
add
pop
rolb
mov
roll
mov
add
sbb
dec
and
mov
test
pop
pop
jmp
pop
lahf
loop
mov
dec
push
shrl
es
ljmp
jno
fbld
dec
lods
cltd
sub
push
add
jne
and
cmp
inc
add
xor
inc
btc
mov
mov
inc
jmp
push
xlat
and
mov
mov
addr16
gs
test
add
push
add
shrl
sub
dec
inc
stc
stos
fwait
sub
or
inc
add
test
dec
xchg
jne
mov
push
inc
mov
mov
out
xchg
dec
movnti
add
test
cmp
and
mov
mov
cmp
into
stos
stos
lcall
and
mov
add
mov
add
push
mov
fnsetpm(287
in
inc
add
add
mov
add
pop
inc
add
add
and
mov
add
mov
cwtl
adc
pusha
add
roll
pop
out
enter
mov
pop
push
add
add
fdivs
jmp
push
mov
xchg
add
add
mov
adc
mov
add
mov
mov
mov
popf
es
xchg
push
xchg
add
imul
mov
add
mov
mov
sahf
add
icebp
xor
mov
add
add
mov
mov
mov
cltd
sbb
popa
and
cli
xor
dec
mov
into
pop
pop
dec
leave
mov
mov
dec
xor
mov
mov
das
pop
sarl
pop
fsubrl
jge
std
mov
test
sub
imulb
les
add
test
rolb
mov
add
sbb
insl
ret
mov
cld
shrl
mov
add
add
push
sbb
es
pop
push
sbb
xchg
mov
mov
movsl
xchg
add
add
addb
daa
xor
mov
add
sub
bound
mov
xchg
movsl
sbb
imul
mov
cmp
mov
mov
push
out
mov
inc
xor
mov
sbb
mov
pop
xchg
rolb
mov
mov
loop
mov
movsl
mov
iret
jo
mov
cmpsb
std
dec
rolb
mov
jecxz
xchg
pop
jns
xorl
push
out
stc
dec
xor
mov
test
arpl
jne
cli
int
add
add
add
or
mov
add
add
in
inc
mov
fwait
mov
mov
enter
mov
cmpl
mov
add
ja
ds
mov
inc
ret
in
stc
push
rolb
les
data16
adcl
aas
insb
std
fs
mov
leave
cmc
pop
lock
aad
shll
mov
add
lea
mov
push
test
outsl
fwait
jle
mov
add
adc
mov
add
add
inc
mov
add
add
rolb
popa
js
add
inc
rolb
mov
pop
negb
xlat
add
addb
repnz
cmpsl
enter
sbb
mov
je
rolb
mov
cmp
popf
pop
rolb
mov
out
add
mov
cwtl
orl
dec
xor
mov
add
test
add
add
or
rolb
mov
cmp
mov
xchg
xchg
loope
add
xchg
int3
dec
dec
push
add
sbb
es
sub
fidivrs
sub
stc
sub
mov
cmc
in
push
ret
call
mov
in
subl
add
in
scas
cmp
push
jge
or
push
mov
pushf
mov
fimuls
pop
in
dec
sub
add
mov
in
enter
xchg
loopne
mov
inc
add
mov
pop
inc
lods
es
and
mov
add
mov
pop
inc
and
fmuls
add
jbe
add
clc
ficompl
pop
imul
dec
xchg
popf
sub
stc
lret
enter
in
push
add
movsl
dec
adc
mov
dec
cmp
mov
cmpsb
lret
out
test
mov
nop
add
sbb
shll
mov
xchg
mov
dec
rolb
mov
les
mov
mov
xchg
dec
dec
es
mov
mov
add
mov
shll
sahf
out
mov
sbb
pop
ftst
mov
or
pop
mov
bound
mov
add
mov
fcom
mov
fstpl
test
xchg
jmp
cmp
add
dec
inc
in
cmpl
mov
ss
scas
cmp
add
cmpsb
loope
addb
lds
ret
inc
xchg
adc
mov
insl
lock
mov
push
mov
ret
imul
fsubp
xor
mov
ss
mov
push
movb
mov
add
dec
int3
das
cli
mov
test
add
or
outsb
mov
lea
mov
add
mov
xchg
je
addb
js
clc
scas
mov
ret
out
mov
sub
add
fcmovne
aaa
adc
out
rolb
mov
mov
push
sbb
mov
add
inc
jge
hlt
mov
jle
sub
in
popf
adc
mov
dec
into
sbb
dec
testb
inc
push
sti
or
push
add
mov
xor
rolb
mov
pop
sub
scas
sbb
or
inc
out
aad
add
jnp
add
imul
mov
and
mov
or
and
add
cmc
cli
in
pop
lret
xor
mov
add
mov
adc
mov
add
mov
jae
add
pop
xchg
cmp
js
fadd
loopne
mov
shll
add
mov
jecxz
mov
mov
sbb
ja
add
or
test
cltd
sbb
int
inc
or
inc
outsb
das
jno
nop
add
and
mov
jle
test
mov
ret
xchg
mov
jbe
adc
mov
adc
stc
or
xlat
cmpsl
and
mov
or
test
and
mov
and
mov
push
jo
mov
shll
mov
fsubr
xor
clc
vmovd
mov
dec
pusha
add
xchg
test
mov
dec
cmpsl
adc
add
sub
sar
inc
clc
outsb
cs
jbe
adc
lods
aas
or
mov
sub
pop
xchg
movsb
rolb
mov
adc
sub
mov
sbb
mov
xor
push
addb
scas
fcmove
rcrl
pusha
add
sub
pop
xchg
dec
cltd
out
xchg
fwait
pop
cwtl
arpl
scas
fwait
cwtl
xor
mov
add
mov
push
jmp
push
add
outsb
test
inc
cmp
setns
hlt
mov
imul
sub
inc
sbb
roll
pusha
add
add
mov
xor
xor
mov
std
pop
dec
fs
adc
add
or
adc
mov
jl
xor
mov
lods
push
cmp
test
mov
jns
pop
jno
add
mov
mov
adc
jecxz
xor
mov
push
call
add
add
mov
cmp
jle
mov
mov
in
add
inc
mov
daa
push
xchg
mov
in
addr16
pop
fs
lret
sti
cltd
ja
jg
push
gs
es
popf
add
push
dec
cmp
test
jne
lods
pusha
add
cmp
mov
imul
imul
mov
cs
or
push
xchg
jno
add
mov
mov
scas
repnz
mov
aad
fcomps
mov
int
loopne
mov
cmp
scas
mov
ja
add
mov
lods
adc
mov
jecxz
mov
adc
imul
mov
mov
inc
rcrl
pop
stos
jle
inc
add
fistps
adc
mov
mov
and
fs
cltd
out
rolb
mov
repnz
adc
jge
sbb
sub
and
mov
mov
pushf
test
and
cmpsb
in
mov
add
addr16
pushf
shll
mov
outsl
es
out
add
mov
fiaddl
out
mov
pop
jns
inc
xchg
out
jmp
sahf
jnp
add
push
xchg
add
jg
push
in
pop
neg
inc
add
popa
cmp
jecxz
outsb
lea
insb
mov
mov
dec
and
mov
add
mov
ret
ss
add
mov
and
andl
dec
pushf
add
aaa
hlt
sbb
stc
mov
xchg
add
mov
add
mov
gs
mov
loop
mov
int3
insb
cmp
adc
xchg
stc
or
fistpl
dec
push
add
xchg
inc
xchg
add
stos
mov
iret
popf
aaa
stc
dec
inc
rolb
mov
and
add
push
imul
or
mov
addl
iret
lods
inc
add
andl
aam
jo
mov
pop
sub
add
mov
pop
cmc
mov
push
cmp
dec
mov
mov
or
mov
jmp
pcmpeqd
cmc
filds
mov
mov
rcrl
and
add
pushf
jbe,pt
pop
sarl
sbb
push
xor
sub
add
mov
dec
fmull
out
iret
push
lahf
out
aad
rolb
mov
push
arpl
mov
sbb
rolb
mov
add
loope
xor
mov
mov
xor
push
or
pop
add
mov
mov
je
xor
cmpsl
mov
cmp
mov
mov
ss
cmpsb
inc
test
add
pop
push
and
mov
test
add
push
jne
add
lcall
bound
mov
out
add
add
mov
push
inc
add
cmp
ret
out
hlt
imul
test
add
jno
test
inc
inc
js
add
xchg
shll
add
sub
ljmp
jl
inc
push
cmc
rolb
mov
sub
push
out
add
mov
mov
push
inc
mov
pop
and
xchg
xor
mov
push
jbe
into
sub
addb
addb
test
mov
pusha
add
push
add
mov
add
add
cs
std
test
out
scas
jecxz
cmpsl
fcompl
subl
mov
xor
mov
jg
lret
neg
cmp
dec
int3
imul
add
es
push
fstps
pop
fdivl
mov
xlat
mov
js
fmul
aas
sahf
xchg
push
jnp
mov
add
pop
cmpsl
test
cwtl
cld
rorl
push
add
dec
mov
cmp
and
mov
sbb
mov
addr16
rolb
cmpsb
pop
movsb
push
add
push
inc
add
pop
cmpsl
out
loope
dec
lds
add
fstps
mov
pop
jbe
nop
add
lret
dec
inc
in
addr16
mov
rolb
mov
cmpsl
out
pop
rolb
mov
mov
popf
jle
dec
push
rolb
iret
icebp
dec
stos
mov
mov
mov
cltd
cltd
subl
add
mov
pop
movsb
shl
inc
shll
imul
roll
jmp
inc
add
stc
jno
jmp
add
add
mov
scas
rolb
divl
pop
cmp
add
rcl
out
outsl
loopne
mov
add
xchg
addb
inc
sub
mov
lret
sti
push
xchg
mov
mov
or
jo
mov
jl
xchg
pop
dec
cli
mov
push
mov
shrl
scas
dec
or
lds
or
inc
add
mov
fs
inc
inc
add
add
mov
add
repnz
movsl
dec
lea
enter
es
push
mov
jnp
add
jl
mov
imul
je
loop
mov
add
mov
loop
mov
mov
push
cld
addr16
arpl
sahf
or
push
test
and
xor
jle
xor
sub
rolb
mov
stos
bound
mov
add
aaa
out
push
stos
dec
les
std
adc
sbb
addr16
test
daa
mov
rolb
mov
add
fsts
cwtl
sub
mov
fs
enter
jno
xor
mov
les
into
rolb
mov
add
mov
mov
adc
mov
add
fwait
dec
jmp
add
mov
pop
das
jmp
jmp
fildl
adc
aas
jmp
cltd
data16
mov
outsl
xchg
mov
sub
scas
sti
xchg
mov
aaa
mov
add
loope
pop
in
fdivr
inc
add
cmp
scas
cmp
sub
cmp
mov
decb
popa
fsubrs
add
mov
add
inc
add
pop
mov
lds
add
mov
adc
mov
cli
imul
sub
mov
jg
inc
sub
add
xchg
aam
adc
imul
adcl
mov
add
je
fwait
js
mov
add
popf
inc
add
imul
jmp
xchg
mov
pop
out
test
test
mov
jne
adc
sub
fadd
add
lds
inc
iret
in
pop
pusha
add
mov
ja
add
adc
mov
mov
fldz
or
daa
rolb
mov
neg
mov
add
add
mov
jnp
add
dec
pop
popl
rolb
mov
cmp
dec
ret
call
or
mov
or
mov
push
ret
ds
mov
cmpsb
adc
jecxz
mov
sub
xchg
dec
lock
mov
and
mov
cli
dec
cmp
jp,pn
push
add
cld
jge
mov
dec
inc
and
xchg
inc
movsb
sbb
lods
sbb
sub
repnz
cmp
xor
pop
sbb
adc
sbb
xor
dec
ds
in
xchg
push
add
iret
and
mov
cmpps
jns
pop
inc
test
cld
lret
mov
mov
bound
mov
push
mov
out
pop
jmp
adc
mov
popf
xchg
adc
mov
in
adc
cmc
fwait
leave
movsl
jg
fs
loope
xor
mov
mov
xchg
dec
jno
aam
push
addb
out
cmp
add
std
pusha
add
dec
jge
jne
mov
xor
add
mov
inc
add
mov
mov
mov
push
add
iret
adc
mov
mov
in
mov
mov
jle
add
mov
add
jne
fcompl
inc
inc
add
movsl
and
aas
and
cltd
sub
xchg
rolb
mov
and
fildll
add
mov
mov
jbe
fiaddl
sti
insl
dec
xor
stc
push
add
cmc
in
inc
add
lods
popa
adc
mov
sbb
clc
push
add
mov
add
in
cmc
xor
mov
mov
pop
adc
add
mov
add
dec
or
mov
add
jl
repnz
jle
xor
aaa
clc
lahf
jp
add
movsl
js
dec
fcmovu
rolb
mov
or
mov
mov
add
adc
inc
and
leave
xchg
je
call
addb
mov
add
mov
xchg
movsl
cmp
in
jl
add
mov
jecxz
ljmp
sarl
add
mov
pop
ret
cmp
push
add
cmc
mov
xchg
cmp
add
adc
mov
push
cmp
mov
mov
add
push
jnp
imul
adc
das
push
pop
jae
into
xchg
add
movsb
fistl
pop
fwait
xchg
hlt
jge
inc
dec
and
mov
xor
or
lods
push
cmp
sub
cs
hlt
es
rolb
mov
xchg
cmp
xor
mov
repz
cmp
sbbl
add
in
scas
pop
cmp
lret
imul
pusha
add
or
sbb
jno
inc
add
inc
shl
outsl
jae
rcr
pop
ret
stos
mulb
lock
test
jmp
add
xchg
sbb
out
xchg
in
sbbl
into
rolb
mov
xor
sub
pop
jae
std
push
test
adc
inc
xor
cmp
add
sub
inc
vpaddusb
or
add
inc
iret
ret
xor
mov
add
push
add
mov
add
ljmp
call
movsl
sbb
popa
inc
sbb
pop
aas
mov
das
call
jnp
add
lods
addb
rorl
in
popa
jecxz
outsb
lcall
stos
js
adc
pushf
mov
insl
sbb
inc
addr16
adc
jbe
aas
loop
mov
shl
hlt
jp
aas
mov
mov
mov
mov
push
push
lods
push
loopne
mov
xchg
in
push
xor
mov
xchg
faddl
ret
or
xchg
add
add
inc
add
add
fs
add
push
add
add
sbb
add
push
movsl
xchg
jnp
cltd
cmp
xlat
cli
xchg
jne
adc
mov
lock
inc
lcall
loope
and
mov
add
das
or
push
jmp
mov
daa
or
outsb
jl
hlt
popl
add
jnp
insl
adc
add
repz
scas
je
add
nop
add
mov
pop
loope
dec
add
mov
cmpsl
dec
dec
scas
mov
sbb
or
scas
mov
mulb
add
jp
in
push
mov
add
fidivrl
add
xor
mov
xor
mov
and
mov
xchg
xchg
addb
jecxz
jl
mov
lods
cmp
inc
cmp
loope
xchg
into
and
jg
xor
sub
mov
dec
or
ds
icebp
fs
mov
sti
mov
mov
or
in
jne
mov
into
push
mov
and
daa
stos
or
loope
dec
dec
cmp
mov
xchg
test
icebp
dec
inc
sahf
orl
rolb
pop
adc
sub
add
mov
add
add
mov
fcoml
jns
mov
cmp
pop
imull
add
je
add
jae
out
rolb
mov
dec
cmp
add
or
add
mov
test
icebp
das
lea
leave
push
jnp
pop
sahf
mov
stc
lret
pop
insb
ds
pop
data16
stos
cld
sbb
jns
fldl
outsl
and
mov
loop
mov
mov
js
wrmsr
add
jle
push
rorl
test
jb
mov
leave
lea
cli
jne
push
popa
shl
test
jae
movsl
lcall
add
and
lret
xchg
jb
mov
je
jb
mov
dec
imul
sub
rcrl
push
push
std
out
sub
jbe
lods
jge
add
mov
add
xor
mov
jne
add
rcr
ret
fcmovu
dec
add
mov
mov
push
xor
and
lahf
xor
add
mov
ds
pop
and
mov
outsl
jns
mov
dec
pusha
add
mov
dec
mov
test
adc
mov
and
mov
mov
lret
add
inc
add
in
jae
out
in
or
adc
sbb
inc
sub
xchg
outsl
jecxz
add
loop
mov
mov
add
add
les
nop
add
pop
ds
add
add
inc
fistl
addb
mov
push
push
rcrl
fstps
aad
sbb
test
add
adc
add
adc
addl
fidivrs
add
mov
out
lods
daa
repz
and
mov
insb
cmp
test
mov
mov
add
outsb
dec
xchg
out
add
dec
cmp
push
fimull
lret
imul
push
xchg
dec
add
imul
add
in
jnp
jl
inc
lds
out
mov
cmp
xchg
int3
mov
daa
jge
xchg
mov
mov
enter
pop
ljmp
idivb
jge
mov
pop
xor
mov
roll
push
mov
add
fildl
push
movb
or
hlt
or
mov
add
js
pop
inc
popf
in
or
sbb
adc
mov
sbb
jle
ds
nop
add
aas
xorl
mov
pop
into
subl
push
addb
icebp
punpckldq
mov
call
pusha
add
cmp
fnsave
mov
mov
sbb
addr16
lock
and
add
mov
mov
mov
outsb
fiadds
mov
mov
add
popf
cmp
add
add
cld
pusha
add
lods
adc
mov
add
cmp
add
push
and
add
mov
pop
lea
int3
mov
push
push
mov
dec
es
mov
enter
add
pushf
xchg
and
or
push
add
adc
in
sbb
push
dec
jl
add
pusha
add
int
jle
dec
dec
int
add
jne
xchg
add
movsl
or
add
and
push
adc
mov
das
mov
pop
clc
adc
rolb
mov
add
adc
mov
cltd
sahf
add
dec
cwtl
rolb
mov
add
outsb
out
fwait
add
addb
fs
ds
int
add
inc
cli
int
push
ror
xor
add
add
adc
and
pop
mov
pop
xor
dec
mov
add
iret
es
xor
mov
pop
or
jge
mov
mov
repnz
dec
repnz
cmp
mov
fsub
inc
std
fwait
adc
add
jb
mov
add
add
mov
xor
mov
lret
inc
mov
xor
mov
add
dec
cwtl
cmc
fisttpl
dec
pop
pop
pop
xchg
decl
sub
lock
mov
add
movsl
push
add
pop
ljmp
inc
add
andps
in
pop
into
pop
sub
pop
out
int
sbb
test
test
jne
pop
inc
lds
push
push
inc
add
fldcw
mov
arpl
pusha
add
inc
add
cltd
dec
movl
dec
dec
in
imul
imul
lahf
jae
add
ret
jle
repnz
lods
adc
pop
divl
xchg
cmp
fstpt
pop
fnstcw
data16
ja
mov
and
mov
add
jae
add
push
pusha
add
jecxz
lcall
gs
adc
mov
icebp
xlat
mov
add
lret
sub
add
mov
add
push
jl
loopne
mov
mov
xor
test
jbe
mov
iret
decl
lea
add
mov
outsb
test
outsl
in
test
mov
xchg
out
fldlg2
or
add
ds
xor
mov
sub
bound
mov
sub
add
mov
add
es
jl
mov
lock
icebp
sbb
jbe
mov
xor
movsl
test
jbe
repz
clc
lods
in
push
jmp
add
mov
mov
movsb
dec
test
xor
mov
ljmp
and
mov
add
or
or
lods
mov
je
jno
jmp
push
add
inc
lock
add
imul
rolb
mov
movsl
and
lcall
or
or
iret
and
mov
add
fbstp
sub
add
sub
rolb
icebp
daa
leave
iret
mov
mov
pop
pop
push
sub
mov
popa
call
add
lock
pop
inc
inc
mov
add
and
mov
fidivl
jg
sar
xchg
iret
inc
mov
push
mov
lea
mov
sti
adc
lock
push
push
xor
mov
lock
add
mov
enter
mov
mov
sub
arpl
test
add
mov
fldcw
mov
mov
mov
add
add
add
mov
loopne
mov
ret
pop
pop
lods
je
leave
add
jbe
cs
mov
stos
fidivrl
es
lods
cltd
lock
jl
push
jecxz
outsl
mov
cltd
mov
fcoml
clc
pop
mul
add
add
push
or
rolb
les
dec
fmull
test
mov
cmp
add
xchg
jns
mov
mov
or
mov
or
mov
xlat
xchg
andl
dec
call
sub
into
cmc
push
fnsave
add
orl
test
test
mov
arpl
rolb
mov
int
xlat
movsl
rolb
mov
repz
cmp
stos
xchg
testb
popf
leave
insl
mov
jo
mov
scas
ffreep
or
adc
add
mov
push
fsub
jmp
pop
mov
mov
test
push
xor
decb
push
movsb
mov
jg
repnz
add
fildll
jmp
lret
adc
mov
add
lds
dec
std
jge
add
mov
call
repnz
push
hlt
sbb
push
xchg
pop
sbb
inc
pop
or
xor
cli
add
ss
inc
arpl
aam
int3
pushf
xchg
addl
clc
mov
inc
push
repz
pop
or
fistpll
add
push
jae
add
mov
dec
fistpll
mov
add
jmp
add
mov
dec
add
mov
dec
adc
mov
add
pop
rorl
int
mov
adc
pop
vmovntdq
inc
loope
xchg
jo
mov
mov
xor
jmp
addr16
add
imul
int3
jns
arpl
push
add
add
int
pop
hlt
pushf
je
fildl
add
add
addb
or
mov
add
iret
arpl
mov
mov
adc
les
mov
mov
into
xor
add
add
mov
repz
jnp
inc
xchg
imul
push
imul
push
in
add
cmp
jb
mov
inc
dec
adc
xchg
xchg
pop
int
add
add
dec
enter
mov
add
inc
fstpl
cs
mov
and
mov
mov
cmc
into
inc
mov
icebp
xor
in
adc
mov
mov
sub
mov
xlat
dec
js
push
add
pop
mov
add
jmp
dec
testb
mov
ja
fisubl
inc
add
pushf
imul
adc
jg
dec
stos
rep
arpl
cmp
jp
jg
faddp
add
loopne
mov
cmp
int
mov
dec
push
jg
add
lret
inc
pop
mov
das
out
outsb
in
sub
add
subl
loop
mov
xchg
xor
rolb
mov
repz
add
pop
jo
mov
mov
add
imul
iret
rolb
mov
lds
add
lock
mov
inc
mov
popa
add
popa
jp
add
int3
xor
mov
mov
mov
add
add
cmpsl
pop
and
push
mov
loopne
mov
movsl
fs
jmp
sub
shrl
mov
sbb
int
pop
lea
add
lods
inc
mov
mov
cltd
lret
mov
mov
lods
sub
add
je
add
push
add
mov
adc
mov
add
cmp
movsb
shll
rorl
les
add
outsb
dec
lock
pop
dec
inc
rolb
mov
add
loope
rolb
mov
imul
data16
mov
mov
daa
sub
in
and
mov
outsl
adc
push
add
jb
mov
fs
ret
lea
nop
add
add
jge
lcall
sbb
mov
dec
sbb
mov
and
mov
jp
fimuls
fs
fildl
pop
xlat
jl
out
adc
int3
ret
mov
dec
lcall
mov
add
sti
imul
dec
and
jae
test
cmp
das
sbb
int3
fiaddl
mull
or
in
iret
sbb
mov
push
out
inc
aaa
rolb
mov
mov
and
mov
push
das
sub
movb
add
mov
fldcw
mov
pop
aaa
insb
sub
loop
mov
add
rolb
mov
addl
mov
mov
xchg
or
lea
sti
dec
cmp
cmp
cmp
out
mov
mov
mov
inc
adc
mov
jg
add
mov
mov
mov
xor
lahf
in
xorl
add
add
rolb
mov
rolb
mov
mov
dec
hlt
xor
pop
dec
sahf
pop
movsl
inc
add
add
mov
add
mov
imul
mov
repz
jp
clc
pop
movsw
out
stc
outsb
push
jo
mov
repnz
out
mov
addr16
lock
es
gs
repz
mov
mov
push
test
xor
mov
and
addb
jbe
repz
mov
mov
pop
sbb
mov
xlat
inc
push
pop
xchg
add
push
enter
inc
mov
mov
mov
adc
rolb
push
add
loop
mov
fidivrl
jmp
in
push
add
mov
add
sub
xor
addl
mov
les
add
mov
and
ja
lcall
mov
xor
mov
adc
mov
mov
add
mov
add
add
pop
adc
out
mov
sub
add
pushf
sub
out
testl
sti
xchg
jmp
push
pop
lds
add
mov
mov
std
xor
mov
pushf
dec
popa
push
repz
or
add
pop
test
add
add
add
xchg
mov
cmpsb
adc
mov
mov
jge
cld
mov
mov
push
jno
cmp
fiaddl
jnp
iret
mov
addb
icebp
mov
add
lahf
and
mov
mov
add
mov
ret
imul
jmp
mov
sahf
movsb
int3
push
ljmp
mov
mov
adc
mov
jle
pop
sub
pop
std
mov
add
add
add
add
lret
adc
mov
fiadds
nop
add
scas
mov
mov
push
sbb
outsb
loope
aaa
incl
sub
xor
lret
jge
es
sub
rcrl
popa
dec
or
es
add
mov
mov
lods
aad
push
adc
add
jnp
adc
add
cld
xchg
popf
lret
addb
inc
loope
mov
jge
pop
sub
movsl
cli
fbstp
adc
adc
mov
xchg
or
mov
mov
mov
mov
sub
mov
mov
add
add
cli
push
adc
mov
pop
addb
icebp
pop
dec
xor
mov
ret
stc
fisubrl
dec
aaa
xchg
add
aaa
sbb
ret
xchg
push
inc
mov
mov
cmp
test
daa
sub
pop
loop
mov
mov
or
add
add
fsubrp
loope
mov
in
jle
sti
cli
cwtl
ret
jo
mov
xor
dec
xchg
stos
mov
and
addr16
cmp
add
test
sub
pop
sub
add
pop
lea
dec
or
mov
inc
loope
in
inc
jmp
mov
jae
xor
roll
jo
mov
mul
aaa
push
outsb
js
adc
mov
or
cli
push
cli
jnp
ss
leave
scas
ljmp
bound
mov
mov
add
xor
jbe
add
mov
and
cmpsl
sub
call
mov
add
push
lcall
push
add
or
sub
mov
icebp
or
cwtl
lds
and
mov
repnz
subl
in
add
mov
mov
mov
les
push
mov
mov
stos
sub
xchg
and
mov
mov
add
sti
and
mov
adc
mov
or
xchg
fsubl
mov
rolb
mov
aaa
xchg
mov
xchg
add
xor
mov
add
mov
roll
or
push
call
mov
adc
bound
mov
inc
inc
add
js
add
cmp
add
ret
in
add
mov
mov
jno
mov
add
mov
mov
add
add
test
pop
ret
aas
sub
mov
xchg
call
add
call
pop
cld
fstpt
dec
pop
clc
adc
inc
test
mov
bound
mov
add
dec
cmp
jg
dec
jge
push
ret
lock
mov
scas
cmp
jle
sbb
inc
fiadds
add
or
clc
fnstenv
mov
enter
mov
sahf
jbe
mov
bound
mov
pushf
jo
mov
mov
add
std
dec
fwait
rolb
mov
hlt
je
push
ljmp
mov
sbb
jo
mov
add
cmpl
pop
xchg
pop
mov
dec
mov
pop
sbb
jmp
xor
inc
jns
add
mov
dec
addb
pop
jae
jno
fildl
pop
xchg
add
rol
add
repnz
mov
mov
enter
add
hlt
jecxz
pop
add
shrl
test
cmp
mov
push
sahf
xchg
add
aaa
ret
lahf
data16
add
nop
add
flds
mov
shrl
lret
adc
mov
fists
mov
mov
or
cmpsl
std
push
mov
repnz
add
repnz
out
pop
scas
repnz
mov
in
sbb
add
leave
inc
fistpll
sbb
int
jne
and
dec
mov
je
mov
fs
gs
mov
add
inc
or
inc
cmp
mov
pop
lock
jl
or
ret
cld
loop
mov
stos
jmp
test
or
inc
add
sbb
jg
adc
jmp
sti
sub
cmpsb
pop
orl
jne
ficoml
mov
mov
test
sbb
jno
push
je
add
mov
add
add
popf
imul
sub
movsl
xchg
hlt
gs
divl
or
movsl
lds
clc
sbb
icebp
sbb
daa
push
pop
or
mov
xchg
movsb
sahf
cmp
xor
mov
push
xor
mov
mov
mov
xor
mov
lret
and
xor
stos
lea
or
pop
fistps
push
jno
vmovdqa
repz
add
mov
add
sbb
aaa
add
add
mov
add
cltd
lock
mov
inc
add
mov
pop
and
and
mov
adc
mov
inc
insl
mov
add
jl
mov
mov
cli
fcomip
mov
xchg
xchg
movl
data16
cmp
cmpsb
mov
mov
xchg
mov
or
dec
mov
add
mov
cmp
push
lret
mov
mov
add
dec
nop
add
iret
lcall
add
inc
add
push
add
mov
jg
nop
add
insb
inc
and
mov
push
cwtl
mov
pop
jge
add
aas
dec
test
add
rcrl
out
sub
add
pop
mov
or
out
addb
jae
jae
ljmp
cmp
das
xor
in
es
jecxz
cmp
lret
addb
rolb
movsb
mov
subl
pop
sub
addb
sub
ficoml
sub
add
test
ret
out
outsb
sti
ficoms
rolb
mov
xchg
dec
add
xor
mov
mov
mov
addr16
jmp
out
dec
add
aam
mov
or
movsl
fstpt
add
lahf
cmp
fsts
jno
mov
add
les
ja
cmp
add
scas
imul
cld
popf
mov
mov
sbb
add
add
pop
mov
mov
scas
fldt
inc
jle
outsb
sub
scas
lds
bound
mov
sub
pop
push
or
rolb
push
sub
ds
rolb
mov
shl
mov
adc
push
dec
jnp
sbb
es
pop
arpl
jnp
dec
and
test
jb
mov
add
cld
in
pop
add
fsubrs
add
jge
mov
repz
outsl
sbb
cmc
add
mov
sub
add
push
add
icebp
in
add
pop
jl
add
mov
call
jge
fcomps
mov
add
jl
rolb
out
test
adc
add
jnp
gs
cmp
lods
jmp
adc
and
fs
cmp
add
cmp
addb
cmp
mov
xchg
cmp
sti
sub
inc
pop
mov
add
popf
xchg
add
movsl
leave
shll
mov
mov
add
add
cmp
stos
mov
add
add
hlt
sbb
jno
or
pop
cmp
test
mov
mov
inc
jecxz
bound
mov
push
stos
into
push
pop
push
jmp
mov
mov
pop
ja
ja
jbe
pop
push
add
add
loope
adc
test
daa
rcll
aad
add
add
dec
test
pop
jno
jae
jns
add
sbb
push
cmp
mov
pop
cli
pop
je
add
dec
lods
pushf
lea
sbb
or
push
out
xchg
rolb
mov
mov
or
je
in
mov
dec
rolb
mov
loopne
mov
adc
mov
add
add
add
mov
sti
setnp
add
mov
inc
adc
xchg
jecxz
mov
add
cmp
sub
xor
cmp
mov
push
xor
mov
xor
mov
mov
mov
ds
adc
ss
xchg
add
push
add
inc
rolb
mov
add
sub
mov
jb
mov
add
incl
push
add
jg
xor
mov
mov
mov
ret
pushf
jp
movb
sub
movsb
jb
mov
xor
jg
cmpsl
xor
mov
sub
add
dec
push
iret
ja
xor
mov
jge
ss
jp
adc
sub
mov
je
add
mov
push
add
mov
sbb
xchg
pusha
add
mov
test
sbb
lret
sub
cli
sti
je
cmp
inc
and
div
add
add
or
adc
mov
add
sbb
ja
gs
ret
add
mul
push
stc
xchg
imul
adc
mov
rolb
mov
xchg
and
mov
mov
adc
popa
jecxz
movsl
addb
lahf
add
out
mov
mov
mov
add
pop
test
roll
mov
mov
pop
loopne
mov
std
bound
mov
lret
clc
or
mov
out
dec
jp
into
loopne
mov
mov
inc
das
jne
jle
ljmp
stc
pop
pop
push
lea
xor
cs
push
mov
int3
lcall
mov
push
add
icebp
push
pop
psubd
ds
lahf
mov
ds
cmp
add
xor
mov
add
rcr
or
enter
dec
push
adcl
mov
mov
cmc
xchg
add
push
xchg
js
push
loope
fs
int
xchg
leave
repnz
add
mov
cmp
add
sbb
inc
add
jne
add
jne
rcrl
rolb
mov
xor
sbb
mov
jno
lret
fwait
cmp
add
clc
movsl
and
xor
mov
dec
je
add
mov
dec
mov
sbb
add
ss
add
inc
jmp
xor
mov
inc
add
inc
add
das
repnz
mov
into
out
or
xor
mov
shll
aam
jge
mov
mov
mov
mov
loope
addr16
add
inc
pop
inc
jmp
mov
fsts
mov
add
add
in
notl
adc
adc
mov
mov
test
cmp
fidivrs
icebp
js
add
lahf
dec
movsl
fcom
scas
push
add
cld
cmpsb
in
mov
push
and
push
loopne
mov
add
xchg
adc
mov
ret
data16
mov
mov
add
std
sbb
push
xor
add
mov
outsb
cmp
xor
mov
out
sub
cmpsb
xchg
add
and
mov
add
mov
add
mov
addb
test
add
cmpsl
or
add
out
outsb
mov
jl
mov
add
add
mov
mov
mov
mov
ja
in
out
pop
in
call
mov
adc
inc
adc
mov
add
mov
mov
stos
mov
xchg
push
loope
cli
xchg
mov
mov
add
mov
and
mov
mov
mov
bound
mov
mov
mov
add
pop
add
mov
pop
sbb
mov
mov
popa
imul
in
cwtl
xor
mov
add
clc
sbb
ret
pushf
add
jo
mov
gs
movsb
stos
jg
jl
mov
lahf
adc
add
dec
xor
jb
mov
aaa
imul
clc
push
in
das
clc
mov
mov
add
ret
das
js
inc
add
test
add
cmc
adc
add
loop
mov
ret
jg
shll
in
jb
mov
outsl
rorl
cmp
pop
add
pop
je
lock
add
add
mov
mov
mov
mov
mov
cmp
dec
sbb
add
clc
addb
in
lods
rcll
out
enter
mov
mov
mov
repnz
addb
stc
shrd
sub
cmpsb
xor
jmp
bound
mov
ss
add
add
mov
mov
add
mov
sub
inc
loopne
mov
mov
dec
mov
call
add
add
push
loop
mov
sub
add
mov
dec
hlt
jbe
xchg
push
mov
out
push
sbb
ret
cmpsb
pop
mov
insb
aad
inc
xchg
mov
xor
fisttpl
adc
stos
jle
addb
fucomi
in
pop
inc
rcll
das
push
mov
pop
push
lcall
and
filds
mov
and
mov
add
mov
mov
mov
or
add
pushf
sub
add
mov
dec
lods
adc
mov
popa
xor
mov
rolb
mov
add
xor
mov
add
add
push
add
xchg
das
xlat
and
out
clc
arpl
cmp
mov
adc
add
repnz
clc
pop
popa
cmpsl
popa
mov
mov
mov
cld
xchg
or
xchg
xchg
pop
cmp
mov
mov
mov
jle
xchg
inc
or
sbb
repz
rolb
mov
or
insb
jp
xchg
jecxz
shrl
jo
mov
mov
sbb
cmp
das
into
cmovns
jo
mov
push
mov
movsl
ja
add
pop
test
cld
adc
mov
add
rcl
jns
inc
add
sbb
xor
jb
mov
iret
orl
add
mov
add
xchg
inc
fwait
cwtl
sub
iret
ds
fwait
bound
mov
stos
or
add
mov
add
or
mov
cmp
sub
mov
pop
pop
leave
mov
out
sahf
inc
fwait
adc
ficoml
ds
and
add
push
inc
cli
insl
mov
add
int
add
mov
sub
and
add
mov
lods
ret
nop
add
imulb
insb
xchg
hlt
insl
outsb
push
cmp
xor
outsb
pop
faddl
mov
cmp
add
imull
cmpsl
xchg
dec
nop
add
pushf
xchg
or
movsb
jnp
dec
add
lods
test
pop
filds
add
cltd
cmp
add
pop
cwtl
fdivr
jno
mov
sbb
push
pop
sub
push
ficoml
in
sub
mov
adc
push
popl
mov
insb
add
push
and
sti
mov
xor
ficompl
add
loope
pop
pop
insl
adc
aam
cmp
add
mov
insl
mov
add
adc
or
inc
add
push
push
mov
add
push
xchg
and
mov
ss
pop
cltd
outsl
fistpll
sti
sbb
dec
mov
fcomip
rolb
lods
fwait
xchg
out
push
add
cmpsb
fstpt
add
mov
imul
inc
sub
fidivs
leave
push
jbe
insl
jb
mov
les
mov
mov
or
into
fwait
mov
mov
mov
mov
cmpsl
and
xchg
adc
dec
jl
xchg
fstl
push
adc
mov
pop
add
mov
aad
cmpsl
adc
js
pop
pop
cmovns
or
insb
decl
adc
cli
mov
mov
mov
add
mov
xchg
cli
mov
mov
or
lods
sub
nop
add
mov
popa
test
add
add
add
imul
mov
cmpl
xor
mov
add
inc
mov
mov
jge
or
and
mov
outsb
mov
mov
in
mov
mov
lods
dec
sub
movswl
xlat
mov
cltd
or
rolb
mov
std
and
mov
daa
push
mov
sub
sbb
aam
dec
and
out
mov
or
rolb
mov
inc
mov
inc
sahf
jne
std
in
in
scas
cmpsl
and
or
popf
mov
add
cmpsb
lret
aas
call
sub
rcll
inc
ret
mov
adc
mov
add
cmp
add
pop
rcll
mov
jno
inc
xor
mov
stos
pusha
add
add
add
mov
lods
inc
mov
cmpsb
jle
push
push
add
add
add
inc
add
rolb
pushf
fstpl
rolb
mov
es
fsubs
add
add
or
lret
pop
sub
add
mov
jb
mov
aad
testl
into
mov
adc
jmp
xor
sbb
mov
ficoml
adc
mov
add
shll
in
jnp
add
add
mov
fcomi
mov
push
int
test
loopne
mov
adc
add
add
jne
xor
mov
imul
push
lods
lods
add
mov
push
pop
xor
add
mov
mov
add
add
mov
mov
stos
dec
in
adc
mov
add
mov
or
lahf
mov
fisttps
adc
lods
mov
rcrl
pop
call
sldt
mov
and
cli
sahf
lds
inc
xor
xlat
cmp
push
and
mov
add
fsts
add
add
xor
mov
add
ja
mov
dec
cltd
icebp
ljmp
mov
add
jmp
sub
rcrl
add
mov
fwait
outsl
cltd
or
enter
arpl
out
push
cmp
cmp
shll
mov
fistpll
in
xchg
add
mov
push
xor
mov
out
clc
into
ss
cmc
test
sbb
add
add
inc
aad
or
push
jg
sbb
xor
mov
add
sahf
mov
sbb
out
fdivrl
pushf
or
jno
outsb
mov
out
jae
add
xchg
jns
hlt
mov
or
push
call
pop
push
fcmovnb
add
ljmp
jbe
imul
mov
inc
pop
insl
movsl
push
xchg
dec
sbb
aad
fsts
add
add
je
push
lods
fdivs
je
sahf
test
add
cs
lods
insb
and
push
add
push
hlt
push
sub
add
or
cmp
or
pop
stos
outsl
repnz
or
push
out
add
inc
add
rolb
mov
inc
jno
in
jbe
lods
hlt
jbe
xchg
push
xchg
add
push
mov
mov
imul
rolb
mov
and
add
pushf
ret
mov
outsb
pop
out
data16
mov
scas
pop
lea
outsb
imul
leave
dec
movsb
sub
adc
mov
add
pop
rolb
cwtl
adc
jge
aaa
je
loopne
mov
add
add
shr
push
sbb
xchg
xchg
add
rcl
subl
xor
cmp
fwait
arpl
inc
mov
stos
sub
testb
sub
jae
xchg
pop
outsb
xchg
add
or
add
pusha
add
cmpsl
dec
jbe
jne
jl
mov
add
mov
xchg
negb
mov
sbb
movsl
xchg
jecxz
es
xchg
mov
add
xchg
mov
stos
push
push
cwtl
mov
pop
or
addb
cmpsl
fmuls
mov
mov
xchg
add
imulb
divb
mov
scas
push
leave
fdivr
ret
pop
int3
or
push
add
stos
dec
adc
mov
xor
add
aam
aaa
cltd
sbb
sub
add
add
jns
add
jns
pusha
add
js
adc
in
cmc
aas
fistpl
cmpsb
nop
add
sbb
cmp
fisubs
xor
add
nop
add
out
insl
or
adc
jo
mov
pop
fists
out
clc
ficoms
inc
jns
addb
cmpsb
xor
out
pop
out
call
add
cmpsb
push
sbb
add
loop
mov
push
mov
fildl
out
inc
add
jp
je
add
movl
addl
xchg
aam
out
aas
aaa
mov
push
and
int
loop
mov
add
outsb
scas
in
sbb
test
add
xchg
add
adc
mov
push
shll
mov
pop
mov
nop
add
lret
inc
dec
call
mov
js
add
add
xchg
cltd
or
push
fnstsw
sub
xchg
adc
jbe
jle
xor
clc
scas
repz
mov
adc
jle
mov
test
add
pop
xchg
adc
mov
jle
xchg
mov
testl
pop
test
add
add
es
mov
arpl
cmc
ja
hlt
jbe
add
add
mov
xchg
test
pop
push
add
jl
mov
or
test
add
sbb
fs
jnp
jecxz
push
dec
cld
fstpl
add
mov
add
scas
add
out
mov
mov
push
add
cmp
add
mov
mov
js
mov
rolb
mov
xlat
mov
loopne
mov
jns
sub
adc
dec
add
mov
mov
push
push
jp
xor
mov
scas
fisttpl
rolb
mov
lea
add
mov
inc
add
push
sub
test
jg
js
sbb
icebp
lret
cwtl
cmp
mov
addr16
add
mov
push
xor
lods
sbb
scas
sti
mov
roll
add
int
mov
push
fwait
sbb
cmp
sub
out
add
mov
xchg
mov
faddl
mov
cld
in
push
loope
movsb
sub
test
in
mov
and
pop
dec
aad
aas
into
cltd
mov
testb
out
xchg
xchg
add
add
add
cmp
lahf
hlt
rcrl
cli
inc
sarl
add
testl
mov
mov
add
mov
xorl
xchg
xchg
lret
mov
inc
mov
call
mov
add
xchg
add
mov
mov
sbb
mov
movsb
fistps
jl
out
bound
mov
int
push
add
sbb
xchg
add
lds
int3
inc
outsl
bound
mov
add
add
mov
fs
xor
push
jnp
add
loop
mov
sahf
push
inc
mov
in
cltd
add
mov
or
dec
and
mov
pop
in
add
adc
mov
int
lcall
stos
mov
jno
shl
add
aad
sub
and
insb
inc
daa
adc
mov
loopne
mov
in
add
dec
cmp
test
cmc
outsb
jnp
mov
add
pop
test
pop
sbb
or
jb
mov
add
push
add
and
xchg
iret
arpl
jbe
fcoml
pusha
add
add
mov
xchg
mov
jecxz
mov
iret
xor
add
sbb
adc
sbb
cmp
insb
outsl
or
add
sti
xchg
add
in
frstor
insb
or
add
ss
mov
inc
mov
add
inc
loop
mov
mov
mov
xor
hlt
push
pop
decl
pop
int
ljmp
cwtl
push
ret
push
add
stos
lods
ja
sti
pop
mov
imul
sahf
and
insl
lds
xchg
rolb
mov
nop
add
inc
add
add
pushf
and
mov
mov
ja
xlat
jns
sub
add
leave
testb
andl
cwtl
fwait
push
sbbl
in
dec
mov
or
dec
imul
push
add
and
mov
add
testl
xchg
add
adc
mov
cltd
cwtl
pusha
add
ja
psubw
loopne
mov
add
or
addb
in
inc
stos
jp
push
addb
dec
mov
add
add
mov
mov
mov
add
sti
adc
movsb
stos
ds
push
rolb
mov
pop
ljmp
out
jne
mov
add
push
std
outsb
roll
insb
add
mov
mov
fcoml
add
ja
jmp
mov
fisttpl
int3
mov
add
mov
movsl
icebp
jno
sub
add
ds
push
scas
jno
push
jbe
adc
mov
pop
loop
mov
add
add
mov
jbe
insl
outsb
pop
mov
test
or
addb
mov
test
popf
sbb
cmp
fsubrs
lret
xor
add
pop
add
mov
mov
adc
iret
jne
mov
mov
cmp
loop
mov
movsb
ljmp
mov
cmp
lret
lods
cmp
add
leave
xchg
bound
mov
lods
pop
fs
adc
sbb
es
mov
push
clc
xchg
ret
test
dec
xor
add
adc
add
add
lcall
popa
adc
add
lret
insl
sbb
jo
mov
pop
out
add
rcrl
dec
mov
add
add
mov
inc
and
mov
mov
mov
repz
aad
xchg
dec
sbb
add
dec
sub
adc
repz
and
mov
out
popf
or
adc
mov
cltd
jmp
movsb
push
add
flds
mov
mov
mov
add
fneni(8087
add
fdiv
pop
loop
mov
xor
mov
lods
push
xor
cli
mov
sahf
shll
mov
sbb
mov
xchg
cmp
movsb
repz
aas
add
cmp
lret
out
xor
adc
add
loope
xlat
popa
add
loope
or
mov
mov
mov
sahf
cmp
shll
cltd
mov
ja
mov
xchg
xor
mov
js
jecxz
inc
mov
gs
out
stos
sub
mov
in
aaa
mov
adc
ljmp
aaa
lret
pop
jns
loop
mov
dec
rolb
pushw
in
jl
sbb
addb
jp
dec
add
mov
add
xchg
add
fucomip
repz
repnz
insb
adc
mov
push
adc
sarl
aas
xchg
push
cmp
pop
cld
mov
icebp
push
cs
repz
adc
inc
add
icebp
push
mov
ret
and
mov
lods
lahf
iret
hlt
mov
mulb
add
pop
fwait
ret
dec
adc
fnsave
popa
or
xlat
mov
lods
imul
add
add
mov
dec
data16
aam
add
sub
or
mov
add
or
js
add
mov
jg
leave
cmp
cli
mov
and
mov
add
jle
push
pop
jp
sub
push
aad
inc
add
push
dec
test
adc
add
lret
or
mov
mov
add
in
cmp
int3
ds
mov
mov
movsl
outsb
xlat
mov
mov
and
jae
mov
popf
js
mov
add
cltd
cmp
add
xchg
in
in
imul
add
rol
inc
add
pop
inc
aam
pop
pusha
add
xchg
mov
mov
sahf
hlt
repnz
mov
or
mov
sbb
imul
inc
aad
addl
mov
loopne
mov
add
mov
xchg
sbb
mov
pop
jnp
gs
addb
int3
fwait
add
inc
add
movsb
push
jl
add
add
mov
mov
jge
adc
mov
rolb
dec
std
push
push
out
cwtl
fdivrs
movsl
and
mov
mov
mov
xor
dec
jecxz
rolb
mov
inc
or
mov
and
mov
int
mov
pop
mov
ds
mov
xchg
scas
es
pop
jg
jns
adc
pop
or
push
mov
push
icebp
call
mov
loope
lret
jg
adc
mov
pop
push
sbb
push
inc
or
lods
in
mov
and
mov
mov
add
add
inc
fwait
push
inc
lret
add
lods
pop
outsb
add
nop
add
dec
pop
push
xor
mov
pop
and
mov
dec
add
xor
out
mov
sbb
subl
push
add
xchg
add
jnp
push
sub
negb
inc
add
in
sub
add
mov
out
lods
sbb
aad
add
mov
adc
mov
mov
or
mov
cld
cmp
test
xor
test
aad
add
hlt
pop
xor
mov
add
mov
xchg
add
inc
xlat
fdivrs
inc
pop
in
in
sbb
and
mov
aad
popa
das
dec
cwtl
mov
inc
inc
add
mov
cltd
jl
or
lock
aas
inc
add
push
jle
leave
outsl
repnz
pop
xor
test
data16
mov
pop
mov
push
shrl
mov
and
cmpsb
setl
add
mov
addb
adc
test
add
dec
and
mov
dec
xchg
push
add
mov
in
mov
add
push
mov
call
test
add
sub
dec
sbb
mov
leave
lcall
add
in
jne
push
or
clc
pushf
mov
sbb
das
push
xchg
add
push
clc
sub
jo
mov
mov
add
popa
out
lods
pop
daa
jle
mov
add
fldcw
pushf
dec
aam
insl
xor
mov
or
dec
push
aad
mov
iret
cltd
jne
js
add
add
mov
rcll
fidivrl
mov
mov
cmp
dec
or
adc
outsb
fbstp
sub
addb
stos
mov
mov
jne
ljmp
cs
mov
jmp
mov
add
add
mov
rol
test
mov
dec
shrl
inc
sub
out
sub
mov
rolb
pop
cltd
sub
in
xchg
add
leave
jg
lock
out
add
aad
add
mov
fwait
mov
add
add
xor
mov
dec
mov
scas
and
add
mov
add
sahf
mov
xchg
pop
fistl
add
jp
sbb
out
xchg
jbe
test
jge
rcl
mov
mov
cmp
repnz
mov
pop
or
add
push
pop
push
pushf
daa
repnz
loope
jnp
aad
sub
pop
testb
call
in
cltd
aaa
addb
dec
int
add
mov
pop
jecxz
xchg
xchg
pop
jae
push
jb
mov
cmpsl
hlt
pop
and
push
popl
xchg
mov
rolb
ret
sbb
mov
mov
xrelease
ss
xchg
int
fmuls
push
insl
repnz
add
loop
mov
rolb
mov
xchg
repnz
add
lock
add
jo
mov
pop
add
mov
lock
push
and
add
push
inc
ret
pop
jge
add
int
adc
lret
mov
inc
shrl
shll
mov
add
loopne
mov
adc
out
mov
fimuls
and
push
xlat
cmp
add
push
mov
jbe
add
cli
imul
add
out
daa
insl
fdivrs
mov
xor
mov
aad
fwait
out
jae
daa
cmp
push
add
jge
inc
fwait
mov
mul
add
cmc
inc
shl
push
mov
ja
push
pop
pop
push
imul
int3
xchg
ret
lock
mov
mov
cs
icebp
sti
cmp
mov
jl
jecxz
hlt
push
sub
pop
imul
push
and
lret
mov
mov
add
adc
or
or
and
mov
add
popf
mov
push
add
in
das
mov
push
out
stc
and
xchg
jo
mov
xchg
pop
pop
mov
add
mov
push
add
dec
adc
out
out
mov
or
fstps
mov
jne
ret
lahf
mov
insl
pop
push
cmp
jno
mov
fwait
cs
mov
int
or
sbb
add
pop
mov
mov
loope
add
out
push
add
dec
jne
and
mov
xchg
ss
add
loope
dec
dec
push
add
mov
push
frstor
mov
add
inc
movsb
daa
adc
mov
mov
stos
push
shrl
mov
add
pop
insb
pop
mov
add
addl
xchg
ss
lea
cmp
or
cmp
imul
imul
xchg
lret
mov
add
cmp
int
push
or
mov
rolb
mov
das
push
add
jl
add
je
call
mov
and
mov
lret
fwait
mov
aad
das
scas
push
add
mov
add
jg
shll
sub
pop
xor
movb
daa
rolb
mov
add
xchg
loop
mov
addb
loopne
mov
xchg
dec
test
inc
sbb
add
mov
imul
add
xchg
push
xor
mov
mov
push
adc
sti
movsl
push
add
stc
cmpsl
inc
ret
jae
mov
or
cld
fistpll
xchg
das
xchg
sbb
add
lret
push
add
add
and
mov
and
add
mov
scas
aad
adc
add
or
sbb
dec
clc
cmc
cmpsl
push
popf
xchg
in
dec
xlat
sub
push
add
mov
inc
in
leave
pusha
add
mov
int3
sahf
mov
sti
cmp
mull
mov
ficoms
aas
mov
outsb
xchg
jne
lret
pop
mov
xor
sbb
sub
dec
mov
xchg
xchg
xor
mov
aaa
pop
xor
or
pop
cmp
repz
jno
dec
out
fdivrl
out
lds
xchg
movsl
dec
fmull
aam
jl
pop
out
popa
ds
lock
and
pop
dec
rorl
xor
mov
add
or
add
stos
mov
mov
xchg
int
push
add
and
mov
inc
sti
jne
clc
mov
fidivs
push
int3
dec
jl
sub
add
dec
lcall
adc
add
xor
aas
in
add
pop
lea
mov
xor
mov
add
jl
cmpsb
xor
mov
addb
cmp
in
jg
inc
add
dec
in
or
add
hlt
sbb
scas
scas
cmp
faddp
adc
xchg
or
adc
mov
cmp
mov
rcr
or
add
add
imul
test
jl
inc
sti
scas
pop
mov
call
mov
lret
add
add
mov
add
loopne
mov
add
mov
mov
lahf
xchg
test
add
call
and
mov
add
add
aaa
sbb
mov
mov
jp
add
add
scas
pop
sbb
jl
jmp
repnz
lock
add
popf
or
xor
mov
hlt
lds
fisubl
dec
dec
xchg
icebp
popa
xchg
es
add
pop
adc
mov
pop
pop
fsubr
pop
fs
xchg
mov
add
add
mov
rolb
mov
lock
pop
cmp
addr16
fidivrl
add
inc
xchg
xor
add
and
mov
loopne
mov
in
mov
add
jg
add
and
mov
add
mov
add
cmp
cs
jb
mov
mov
test
adc
dec
in
adc
dec
popa
fistl
cmp
jl
add
inc
je
aam
fcomps
add
mov
es
lcall
ss
pusha
add
dec
push
loop
mov
jbe
mov
add
and
cwtl
sbb
out
aaa
outsl
nop
add
iret
fadds
push
add
outsl
and
lds
cmp
mov
cmc
mov
lcall
std
loope
mov
rolb
mov
mov
xchg
add
push
push
xchg
iret
xor
cmp
dec
icebp
int3
scas
repnz
xor
popl
rolb
mov
mov
mov
push
add
fnstenv
icebp
adc
incb
mov
or
sarl
dec
sahf
mov
add
jmp
cmp
lahf
sbb
add
pop
addr16
repnz
ss
mov
adc
push
add
lock
push
jns
cmpsl
movhps
in
test
adc
push
cli
mov
repnz
rolb
pusha
add
addr16
in
jno
int3
lcall
mov
test
pop
data16
scas
inc
cwtl
fmulp
inc
lods
and
mov
xor
mov
mov
mov
push
test
stc
daa
rolb
mov
es
sbb
adc
sbb
lret
insl
rolb
mov
xor
out
add
lcall
add
movsb
pop
inc
mov
fadd
add
or
cmpsb
cmp
retw
cmp
add
out
in
mov
mov
xchg
pusha
add
daa
fisttpl
pop
or
mov
mov
add
mov
jp
jae
sbb
jne
stos
xchg
fisubl
xlat
frstor
mov
mov
mov
enter
test
fstpt
dec
imul
add
adc
xor
mov
lock
mov
xchg
js
push
in
jmp
push
push
add
add
mov
aam
sbb
jmp
das
jne
xor
mov
imul
add
pop
ss
xor
mov
xlat
repnz
push
xchg
add
jne
add
js
jno
add
inc
add
mov
or
flds
add
sub
arpl
add
sbb
mov
mov
add
mov
mov
xor
mov
sbbl
sub
mov
mov
insl
push
inc
inc
out
inc
pop
sbbl
sbbl
mov
or
push
cltd
xlat
xchg
out
cs
ret
inc
stos
out
out
mov
sbb
adc
mov
popa
fisubl
mov
pop
mov
xor
mov
cmp
mov
mov
inc
jb
mov
bound
mov
xchg
fisubl
enter
add
push
cmp
clc
jle
addb
cld
jbe
add
add
in
jg
ja
xchg
mov
aad
jbe
sti
stc
and
mov
popf
pop
pop
inc
jecxz
push
dec
sbb
sbb
mov
rolb
mov
outsl
pusha
add
das
mov
test
aaa
gs
mov
add
add
ss
mov
fidivs
mov
sub
mov
jmp
aam
mov
int3
call
pop
pop
jne
jle
fidivs
outsb
fucom
and
mov
mov
xor
mov
iret
xchg
add
or
loop
mov
mov
jno
jbe
cmp
jl
add
bound
mov
and
mov
adc
and
add
and
mov
cmp
int
dec
int3
inc
insb
pop
pop
mov
add
fistl
mov
add
add
mov
add
add
iret
mov
outsl
inc
cmpsl
rolb
mov
nop
add
mov
mov
fwait
cmp
add
and
push
dec
dec
xor
mov
mov
roll
jbe
add
add
js
lods
icebp
sti
mov
mov
aad
iret
loope
loopne
mov
fsts
jge,pt
sub
jp
sub
movsb
imul
sub
add
mov
imul
mov
adcl
xor
mov
mov
jge,pn
scas
mov
jns
xor
or
mov
mov
mov
scas
jmp
icebp
adc
dec
add
add
dec
mov
mov
rolb
mov
xchg
push
outsb
sbb
mov
add
or
add
loopne
mov
mov
mov
mov
jl
lret
cwtl
mov
test
inc
push
push
fisubl
in
call
mov
dec
pop
aas
mov
mov
dec
fs
add
shll
add
cwtl
xor
add
mov
mov
xor
mov
dec
and
jmp
add
pop
add
insl
fisubrs
mov
mov
lods
imul
cmpsb
add
mov
lahf
inc
add
jp
sahf
inc
and
ret
add
cmp
dec
inc
add
popf
or
je
add
inc
dec
clc
xchg
push
loopne
mov
iret
dec
mov
mov
and
mov
push
push
loopne
mov
sahf
out
fiadds
sbb
ret
sahf
mov
stos
and
mov
fsubrs
lahf
jbe
insb
jns
inc
fnstsw
sbb
cmp
jbe
push
lock
mov
or
xor
cld
aam
dec
cmp
xor
mov
mov
jmp
repz
data16
cld
push
jl
jo
mov
rolb
inc
aam
jbe
leave
sub
mov
push
jne
inc
mov
lock
adc
stos
data16
mov
into
dec
sbb
jmp
lcall
push
dec
dec
xor
mov
rol
xchg
sub
out
pop
and
mov
xchg
push
out
add
test
pop
push
add
push
out
fldenv
mov
lahf
push
scas
and
add
inc
call
es
xor
xor
mov
lods
and
inc
add
negl
out
xor
insl
jae
or
add
mov
in
lock
mov
aas
addr16
nop
add
add
pop
pop
xor
mov
mov
lret
mov
push
js
cmc
je
out
xchg
add
jge
popf
pusha
add
in
or
mov
add
in
inc
pop
pusha
add
mov
lea
out
sbb
xchg
inc
add
lahf
cmp
xchg
cmp
mov
or
push
xorl
sbb
sub
test
cmp
ljmp
test
rolb
mov
pop
or
add
add
cmp
test
add
pop
add
or
push
adc
mov
adc
or
jb
mov
aaa
rolb
mov
adc
lcall
imul
dec
mov
mov
mov
arpl
xor
mov
mov
dec
into
add
mov
cmp
repnz
mov
mov
into
mov
push
mov
add
sbb
mov
mov
inc
add
mov
rolb
mov
adc
bound
mov
mov
stc
gs
and
js
stc
mov
out
sub
lds
mov
mov
mov
mov
or
idivb
scas
icebp
mov
jb
mov
popf
lret
insl
loop
mov
adc
mov
sub
add
mov
add
jl
mov
add
sub
cli
cmp
pop
wbinvd
sahf
or
push
add
mov
push
inc
test
popf
pop
hlt
mov
mov
mul
add
sbb
fildll
addb
jne
cmpsb
mov
mov
push
int3
nop
add
aaa
std
ss
mov
xchg
pop
pushf
imul
int3
loopne
mov
and
decb
pop
inc
pop
cmp
add
inc
pop
jbe
pop
mov
fistps
pop
out
inc
push
inc
jge,pn
mov
and
mov
add
stos
sarl
and
mov
negl
sbbl
add
mov
mov
mov
mov
mov
into
sarl
jne
cmp
or
insb
mov
dec
sbb
jns
inc
imul
mov
jbe
sti
sti
pop
cmc
xchg
mov
sbb
test
jmp
add
sbb
mov
pop
xor
pushf
icebp
dec
pop
in
xchg
add
dec
mov
pop
enter
mov
dec
test
push
sti
jae
add
in
psllq
dec
testl
mov
cld
lods
icebp
scas
sbb
adc
mov
inc
xchg
lcall
add
xor
fwait
sbb
jle
test
les
xchg
add
push
mov
add
popl
mov
mov
xchg
clc
je
inc
cs
loope
inc
add
inc
popf
stc
sub
xor
mov
or
rolb
cmp
repnz
xchg
imulb
call
sbb
add
and
icebp
inc
je
mov
mov
jg
iret
mov
lcall
mov
cmpsb
sbb
and
mov
xchg
add
pcmpeqd
psubusb
in
icebp
jge
xchg
add
mov
add
mov
inc
or
or
rolb
push
sbb
ds
add
hlt
xchg
jns
add
addb
ja
push
mov
jae
aas
cwtl
and
pop
mov
jge
or
inc
add
ret
sti
lock
or
add
fwait
inc
jl
push
push
sbb
dec
fistpl
xchg
cwtl
inc
add
or
jno
add
add
xchg
add
pop
mov
jne,pn
aas
dec
pop
fdivr
pop
repz
mov
mov
hlt
mov
daa
pop
test
or
ret
gs
lcall
or
addb
imul
mov
fisttpl
dec
enter
and
mov
icebp
dec
xlat
dec
cld
or
sbb
mov
add
and
add
bound
mov
add
push
lock
add
add
out
xchg
cs
stos
and
cmp
jb
mov
push
stc
stos
mov
shll
pop
xchg
or
add
cwtl
sub
add
mov
std
pop
sbb
cmp
or
mov
mov
setle
aaa
or
push
xchg
out
enter
insb
outsb
add
mov
add
and
mov
add
add
mov
sbb
sahf
xor
mov
test
mov
add
mov
jmp
int3
mov
mov
lret
pushf
jo
mov
mov
push
cmc
or
outsl
aam
mov
mov
mov
add
jl
adc
inc
add
cmc
mov
imul
test
loopne
mov
mov
lahf
cmc
clc
out
inc
call
out
jmp
push
cmc
addb
fstl
add
mov
mov
sub
pop
mulb
adc
fisubl
add
cs
sbb
lods
test
add
popf
mov
pop
inc
add
add
stc
or
jmp
addb
sbb
add
aaa
jb
mov
fisttps
sbb
rolb
cmp
mov
dec
jno
jo
mov
fnstsw
push
fs
cltd
iret
rolb
mov
and
mov
add
setb
mov
mov
in
push
push
jg
mov
gs
add
xlat
mov
out
testb
mov
nop
add
cltd
xchg
lret
mov
rolb
mov
fistpll
xchg
stos
mov
in
dec
ror
popf
pop
push
or
add
and
xor
mov
mov
mov
dec
mov
add
dec
cmp
jecxz
push
mov
std
dec
scas
cmc
out
and
mov
insl
or
dec
pop
inc
lret
flds
iret
or
shrl
int3
mov
jle
and
mov
bound
mov
test
mov
and
sbb
lea
std
sahf
add
testl
out
aaa
stos
xlat
mov
mov
add
scas
xchg
int
mov
xchg
add
fists
leave
movb
dec
sti
dec
cwtl
jo
mov
add
jbe
jp
pop
loopne
mov
jnp
mov
add
rcrl
sub
call
scas
and
add
xor
push
mov
xchg
frstor
mov
mov
fs
push
pop
and
mov
ds
adc
insl
pop
add
mov
xchg
jo
mov
cmp
mov
rolb
mov
mov
mov
out
xchg
lcall
add
sub
mov
mov
mov
mov
mov
repnz
pop
adc
mov
add
and
mov
add
fwait
iret
shrl
xchg
add
mov
mov
add
pop
jns
scas
jns
daa
and
add
add
pop
jno
xlat
dec
mulb
sub
imul
xchg
cmp
push
aad
movsb
lcall
in
les
ds
sbb
jbe
jge
add
mov
data16
aas
jns
xchg
xchg
pop
mov
les
gs
mov
sbb
pop
jmp
cltd
mov
popf
xchg
pop
test
and
mov
add
xlat
jmp
ficomps
lcall
das
addb
ror
add
ljmp
dec
fdivl
ds
int3
sbb
out
add
push
mov
pop
aad
scas
mov
add
or
lcall
mov
test
xchg
adc
jmp
pop
fsts
jo
mov
add
mov
stos
dec
inc
lods
push
idivl
and
and
xchg
add
hlt
fidivrl
sbb
xchg
add
cmpsl
or
cmp
push
sub
aaa
loope
mov
inc
daa
enter
ficomps
add
push
and
mov
add
xchg
ja
cltd
jns
inc
jmp
jge
int3
leave
mov
in
cmp
das
cmp
pop
scas
push
add
or
add
add
xchg
mov
push
add
lcall
orl
mov
sub
add
add
add
in
test
add
adc
xor
mov
add
out
or
push
add
add
je
inc
mov
cmp
insl
lea
push
dec
lock
and
mov
add
add
addb
adc
inc
stos
pushf
fst
add
mov
or
cltd
nop
add
xchg
data16
xchg
in
insl
ja
imulb
xor
cltd
cmpsl
int
mov
out
fcmove
sahf
dec
sti
mov
xor
mov
lds
cmc
mov
mov
adc
adc
mov
aam
add
jnp
adc
nop
add
mov
pop
fldenv
add
icebp
popf
cmp
cmpsb
sub
ja
add
lods
std
rolb
push
std
popf
sub
insb
notb
mov
les
xchg
xchg
xlat
aaa
inc
fdivs
and
in
bound
mov
scas
inc
sbb
mov
aam
mov
mov
and
mov
movsb
inc
int3
sbb
pop
cli
mov
fs
push
add
jge
aaa
pushf
std
add
mov
mov
add
sahf
xor
xchg
mov
mov
mov
mov
fmuls
dec
and
mov
jecxz
adc
repnz
aam
adc
fsqrt
orl
push
add
add
rolb
mov
scas
lret
pop
xchg
push
xor
movsl
cmp
xchg
add
mov
mov
cmp
aam
movsl
inc
add
add
in
dec
fstp
rcrl
push
cmp
adc
mov
dec
add
outsb
out
sub
js
jo
mov
dec
push
inc
mov
mov
jne
add
insb
xor
mov
pop
lret
push
add
add
mov
xor
mov
dec
loope
stos
scas
mov
fwait
pushf
out
in
pop
jg
leave
cs
rorl
mov
mov
data16
mov
xchg
add
ret
sbb
pop
fnstcw
out
jne
roll
test
xor
mov
jne
dec
js
push
add
mov
inc
mov
icebp
mov
mov
mov
mov
out
scas
je
add
lods
sbb
add
pop
jle
mov
icebp
pop
in
pop
push
adc
sbb
data16
mov
fistpll
mov
pusha
add
xor
fucomi
xor
sbb
lods
flds
mov
add
xchg
cmpsb
cmc
xorl
mov
movsl
int
imul
pusha
add
pop
insb
push
add
add
sbb
inc
cmp
adc
int3
movsb
cmp
pop
xchg
adc
mov
or
pop
pop
cs
adc
mov
xchg
xchg
dec
push
cmpsb
or
in
bound
mov
or
call
xchg
add
push
lret
sbb
add
pop
sahf
pop
mov
test
sti
push
mov
jl
movsb
cmpsb
xor
add
dec
mov
mov
mov
in
xlat
gs
enter
fchs
add
mov
inc
xchg
dec
in
add
mov
dec
mov
in
aas
sub
jmp
add
mov
movsb
and
mov
fs
add
fucomp
movsl
insb
rolb
mov
es
mov
mov
scas
dec
rolb
repnz
dec
or
or
push
in
ss
mov
nop
add
mov
adc
mov
iret
xchg
testb
imul
dec
icebp
push
int
aaa
enter
mov
in
xlat
das
cmp
mov
lock
hlt
push
mov
outsb
imul
cli
cli
or
ret
scas
and
mov
add
loope
cs
ret
jecxz
sub
inc
cmp
pcmpgtb
sarl
cld
push
xlat
lret
fidivl
mov
push
stos
jne
cmp
cltd
testl
cmpsl
cwtl
mov
cmp
push
add
mov
jne
sub
movl
mov
sbb
loop
mov
divl
std
push
adc
cmp
int
in
insb
inc
jmp
sub
add
xchg
repnz
adc
mov
mov
out
lcall
mov
jecxz
ficoms
hlt
loope
add
or
mov
sahf
push
mov
add
mov
add
fwait
sub
cmpl
dec
mov
add
lret
enter
add
in
test
pop
push
sbb
mov
rep
push
and
dec
xor
mov
add
movsb
xchg
data16
fdivrl
inc
add
mov
les
xchg
jne
dec
adc
jge
jg
addb
pop
jmp
add
ljmp
ja
mov
scas
out
dec
mov
in
jg
mov
add
mov
mov
add
pop
or
mov
add
mov
add
mov
imul
test
notb
aas
or
js
jbe
push
lret
add
xor
mov
cmp
add
push
xor
add
inc
sbb
jb
mov
mov
add
cwtl
and
mov
in
add
fnstenv
jg
adc
mov
ds
lea
outsb
pop
and
lods
or
pusha
add
call
xlat
leave
jae
mov
push
out
pop
pop
push
mov
gs
fnsave
addb
repz
mov
mov
mov
cmpsb
add
loope
fisubs
roll
sbb
jne
ret
or
mov
add
xchg
add
scas
inc
jae
add
mov
add
subl
fildll
mov
xchg
and
mov
add
mov
loopne
mov
es
orl
adc
xor
imul
xor
mov
mov
cmp
jp
sbb
pop
ljmp
mov
aam
add
mov
ss
ss
flds
mov
mov
add
je
out
pop
xor
sbb
cmp
adc
sti
jnp
push
or
stc
adc
mov
xor
add
mov
push
inc
inc
add
jle
bound
mov
add
xor
mov
out
adc
and
pop
imul
and
mov
pop
notl
out
pop
dec
xchg
aas
xor
mov
ret
add
add
lds
repz
inc
add
cli
adc
rcrl
inc
popa
cmp
add
inc
sub
les
sbb
das
loop
mov
xchg
xchg
test
pop
inc
push
fcom
add
jmp
jmp
popa
mov
mov
mov
in
push
add
scas
outsl
and
mov
jmp
add
xlat
adc
add
inc
add
test
mov
setl
cmp
fs
sub
xchg
rcr
push
les
sahf
aas
nop
add
ljmp
ret
xchg
dec
pop
pop
add
mov
add
push
scas
jge
mov
sbb
call
add
es
into
addb
int
mov
mov
stos
jb
mov
add
insb
cmp
jbe
add
mov
imul
xlat
sbb
lods
mov
aaa
pushf
pop
mov
xor
mov
enter
inc
arpl
mov
sahf
xor
into
or
mov
rolb
mov
add
cwtl
fwait
addb
gs
ja
or
add
lcall
mov
scas
fimull
or
add
bound
mov
pop
lcall
mov
mov
sbb
mov
addl
cwtl
xor
jae
push
add
ljmp
jo
mov
and
add
pop
or
popa
push
cmc
cmp
jb
mov
mov
mov
fdiv
add
mov
add
jnp
pop
popf
fwait
andl
xor
pop
loop
mov
mov
mov
jnp
sbb
sbb
das
dec
in
test
inc
les
add
test
fsub
adc
mov
mov
repnz
xchg
mov
xor
jnp
rolb
mov
and
mov
xchg
mov
daa
and
mov
and
xchg
add
push
add
xchg
shr
jbe
add
mov
dec
add
mov
cmpsb
pop
sub
push
ja
pop
fwait
test
loopne
mov
inc
add
mov
add
push
inc
inc
loopne
mov
loopne
mov
inc
add
mov
lret
jnp
add
daa
sbb
mov
pop
dec
je,pt
xor
mov
das
pop
mov
mov
add
jle
ret
push
pushl
jae
inc
gs
clc
scas
icebp
sarl
mov
movsl
js
cmp
fs
mov
jnp
mov
mov
inc
ret
mov
loope
mov
fidivl
add
fsubrl
sbb
sub
dec
add
jns
mov
hlt
inc
in
inc
sbb
jb
mov
xor
cmp
jb
mov
mov
push
jge
movsl
shl
pop
pop
and
mov
add
popf
inc
lds
adc
adc
and
mov
pop
cmp
lods
pop
test
mov
sbb
nop
add
jno
pushf
mov
pop
mov
add
mov
dec
sbbl
mov
arpl
pop
lahf
ljmp
mov
cmp
fs
add
and
add
mov
jbe
add
imulb
lock
add
adc
cmpsb
fnstcw
lret
les
outsl
push
xchg
push
mov
sub
ret
pushf
arpl
bound
mov
lods
sahf
iret
cmp
add
cmp
add
mov
and
mov
or
inc
push
add
dec
ja
add
mov
cwtl
test
insb
popl
adc
mov
out
inc
and
pop
mov
xchg
add
push
rolb
mov
pop
mov
inc
cld
and
add
mov
iret
mov
cmpsb
sbb
and
mov
lds
xchg
jnp
lret
jne
mov
mov
push
sub
sub
ret
adc
int
rolb
pusha
add
dec
and
outsb
dec
call
push
fildll
mov
jno
arpl
mov
cmpsl
inc
addb
sub
frstor
and
out
push
or
ja
ret
rolb
mov
or
jl
sbb
mov
mov
sbb
cld
push
cmpl
out
pop
and
add
dec
ret
negl
and
fmuls
add
mov
xor
sbb
sti
xor
mov
add
fisubs
mov
stos
push
jno
fsub
int
cmp
mov
push
adc
add
xor
aas
rolb
pusha
add
hlt
mov
stc
mov
daa
imul
je
cli
cmp
add
add
or
add
call
lods
mov
pop
push
pop
es
inc
jbe
cmp
adc
mov
lret
mov
cli
imul
sbb
out
add
pop
or
repz
push
add
push
imul
mov
and
add
ret
mov
sbb
jp
xchg
lods
adc
add
fcmovbe
sbb
xor
xor
mov
sub
rolb
cmc
ljmp
push
xor
jl
pop
insb
rcrl
rolb
mov
gs
mul
call
cmp
cmc
sbb
idivl
sub
mov
ficoml
mov
and
mov
addb
sub
mov
cmp
sbb
dec
xor
mov
cli
pop
cmp
mov
add
add
xchg
add
jg
mov
out
push
add
sub
decb
add
push
add
fdivrs
dec
push
test
cld
leave
jl
es
loopne
mov
cmp
mov
das
xchg
ror
lods
int
shrl
adc
out
jnp
pop
fadds
data16
sar
mov
retw
pop
in
sub
dec
ja
add
cld
jo
mov
fiadds
sbb
cmp
add
scas
and
and
sub
add
xor
psubb
stc
sub
out
add
pop
enter
mov
dec
loop
mov
pop
sub
mov
shll
add
add
cmp
and
add
notl
mov
iret
out
mov
mov
and
mov
in
dec
lret
dec
mov
sbb
add
sub
or
sub
add
mov
pop
push
aaa
test
outsl
push
repnz
jg
pop
stc
and
cmp
mov
pop
fcoms
add
xor
add
cmc
jecxz
sub
adc
insb
mov
xor
mov
addb
mov
flds
add
mov
jle
mov
js
add
mov
outsl
push
adc
mov
rolb
xor
cli
and
repnz
add
mov
add
mov
xchg
stos
inc
add
mov
repnz
jmp
dec
cmp
add
sbb
and
cmovbe
add
mov
outsl
ds
xchg
inc
daa
cmc
push
and
mov
push
add
add
lds
and
add
mov
setae
add
mov
test
mov
mov
and
mov
mov
stos
jb
mov
loope
daa
mov
cwtl
outsb
jb
mov
arpl
add
sub
and
scas
iret
stos
leave
push
out
lahf
and
add
jecxz
aaa
lcall
movsl
jns
or
fs
cmp
adc
mov
pop
adc
mov
mov
adc
mov
std
push
add
add
xlat
sub
pop
icebp
int
ret
add
mov
add
roll
xchg
jns
sub
popf
enter
lret
cmpsb
jo
mov
in
jbe
cmp
mov
add
scas
cmpsl
icebp
ljmp
add
in
mov
push
mov
popf
sub
clc
push
imul
ss
pop
int3
fisttpll
add
or
mov
cltd
mov
popa
outsl
sub
jmp
mov
push
int3
test
adc
mov
cmc
mov
sub
lahf
pop
and
mov
add
mov
mov
jle
mov
push
cmpsb
idivl
fs
leave
xlat
test
xchg
fldl2t
fdivp
test
inc
inc
dec
pop
push
gs
push
jp
inc
sahf
leave
mov
mov
add
sbb
pop
jmp
icebp
xor
loop
mov
cmp
jnp
sub
or
sub
loop
mov
add
sbb
dec
fsubl
xchg
add
movsb
mov
shll
mov
mov
sbb
loope
mov
addb
in
add
es
xlat
in
loop
mov
xor
mov
loope
xchg
jne
nop
add
push
add
add
repnz
adc
and
insl
leave
gs
xchg
sub
or
gs
and
mov
fwait
rcll
mov
fsubs
mov
jmp
jns
add
add
mov
mov
div
popf
addl
mov
inc
add
mov
mov
add
mov
mov
pop
mov
inc
test
pop
inc
push
add
clc
xchg
les
xor
push
add
dec
cli
adc
lret
mov
add
push
add
mov
add
lahf
push
cli
push
call
iret
adc
into
adc
mov
jne
mov
divb
rolb
mov
sbb
movsb
dec
and
push
mov
add
lock
imul
lahf
stc
jl
loope
add
icebp
adc
mov
add
add
