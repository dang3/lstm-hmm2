add
add
fs
cs
mov
nop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
sbb
popf
popf
popf
popf
popf
popf
popf
popf
popf
out
out
out
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
pop
pop
pop
pop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmp
nop
adc
adc
adc
adc
adc
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
fmul
into
into
into
into
into
into
into
into
into
into
into
into
into
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
nop
nop
nop
nop
nop
nop
ds
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
aaa
aaa
aaa
aaa
aaa
aaa
aaa
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
or
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
and
and
and
and
and
and
and
and
and
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
addb
addb
addb
addb
addb
push
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jns
jns
jns
jns
jns
jns
jns
jns
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popf
popf
popf
popf
popf
popf
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
sub
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
test
test
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
ja
ja
ja
ja
ja
ja
ja
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
mov
mov
mov
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
in
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
pop
pop
pop
pop
pop
pop
pop
pop
sub
sub
sub
sub
sub
movsl
movsl
movsl
movsl
movsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
fldcw
sub
sub
sub
sub
sub
sub
sub
cwtl
cwtl
cwtl
cwtl
cwtl
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
rol
rol
rol
stos
stos
stos
stos
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
call
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
data16
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
nop
nop
loopne
lods
lods
lods
lods
lods
lods
mov
mov
mov
xor
xor
xor
nop
nop
mov
mov
mov
nop
std
std
std
add
add
add
add
add
jp
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
fnstenv
ss
ss
ss
cs
cs
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
nop
nop
nop
nop
nop
nop
nop
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmp
cmp
cmp
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
inc
inc
inc
inc
inc
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
or
or
or
or
or
or
or
or
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
stos
stos
stos
stos
stos
stos
stos
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
repnz
mov
mov
mov
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
mov
mov
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
repz
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
xchg
xchg
xchg
xchg
xchg
xchg
xchg
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
vpunpckhqdq
insl
insl
insl
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
add
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
ss
ss
ss
aad
aad
aad
aad
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
pop
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
sbb
sbb
sbb
sbb
sbb
sbb
sbb
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cs
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
pop
pop
pop
pop
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
pop
pop
pop
pop
pop
lcall
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
test
lret
lret
lret
lret
lret
cmp
addl
addl
addl
arpl
arpl
arpl
arpl
arpl
mov
mov
xlat
xlat
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sti
cmp
cmp
cmp
cmp
jp
jp
jp
mov
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
ficoml
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
xor
xor
xor
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
dec
dec
dec
dec
dec
addl
addl
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
icebp
icebp
icebp
icebp
icebp
mov
mov
mov
mov
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
mov
mov
mov
adc
adc
adc
aas
aas
aas
aas
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
bound
bound
bound
bound
bound
bound
bound
bound
bound
inc
inc
inc
lcall
nop
nop
nop
nop
nop
nop
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
sbb
sbb
sbb
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
or
or
or
or
or
or
or
or
or
or
or
or
and
and
and
and
and
and
and
and
and
and
and
and
and
and
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
add
lea
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
enter
enter
enter
enter
enter
enter
enter
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
jbe
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
sbb
sbb
sbb
sbb
sbb
mov
mov
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
nop
nop
nop
nop
nop
nop
nop
nop
nop
or
or
nop
nop
nop
nop
nop
nop
nop
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
daa
daa
daa
daa
daa
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
sub
sub
sub
sub
sub
sub
sub
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
and
and
and
and
and
and
and
and
inc
inc
inc
inc
inc
inc
faddl
add
add
add
add
add
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
addb
subb
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
test
test
test
fstp
fstp
frstor
gs
gs
test
div
div
div
div
div
div
div
div
mulb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
loopne
loopne
loopne
loopne
loopne
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
in
in
in
in
in
in
in
in
in
in
addr16
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
rcl
rcl
rcl
rcl
rcl
rcl
rclb
mov
mov
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
and
and
and
and
and
and
and
and
and
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
test
pop
pop
pop
pop
pop
pop
cltd
lret
lret
lret
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
jecxz
jecxz
jecxz
push
push
push
push
push
push
push
push
push
push
push
push
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
out
sbb
sbb
sbb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
addb
addb
addb
addb
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
das
das
das
das
das
das
das
das
das
nop
nop
nop
nop
nop
nop
nop
nop
nop
add
add
add
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
adc
adc
adc
adc
adc
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
jae
jae
jae
jae
jae
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
aam
aam
aam
aam
aam
aam
aam
aam
clc
clc
clc
clc
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
das
das
das
das
das
das
das
das
das
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fdivrs
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lcall
lcall
lcall
mov
lea
lea
lea
xchg
xchg
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
out
out
xlat
xlat
dec
dec
in
in
in
in
in
in
in
in
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
fstp
fstp
fstp
fstp
fstp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmp
cmp
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
les
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
fcmovnu
fcmovnu
fcmovnu
fcmovnu
pop
ficoms
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
sbb
mov
mov
mov
mov
rol
rol
rol
rol
rol
rol
nop
adc
adc
adc
lret
lret
lret
lret
lret
rol
rol
rol
nop
nop
nop
nop
nop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
jnp
jnp
jnp
jnp
jnp
jnp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
addl
addl
inc
inc
inc
inc
inc
inc
inc
inc
inc
pop
jp
jp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
dec
dec
dec
dec
dec
iret
iret
iret
iret
iret
iret
iret
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
fists
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
arpl
arpl
arpl
arpl
arpl
arpl
arpl
dec
dec
dec
dec
dec
dec
dec
dec
dec
or
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
sbb
sbb
sbb
add
add
jg
jg
jg
jg
jg
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
loope
loope
loope
loope
loope
loope
loope
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
or
or
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adcb
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
in
in
in
in
in
nop
nop
nop
nop
nop
nop
nop
push
push
push
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
nop
nop
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
pfcmpge
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
sub
nop
nop
nop
nop
nop
nop
nop
data16
mov
mov
mov
mov
mov
mov
mov
mov
mov
decl
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
and
and
and
and
and
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
mov
mov
mov
mov
mov
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fildl
add
add
add
add
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
xchg
xchg
xchg
xchg
xchg
xchg
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
mov
mov
mov
mov
mov
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
xor
xor
xor
xor
xor
xor
xor
xor
xor
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
es
es
nop
nop
nop
nop
nop
nop
mov
mov
mov
jb
or
or
or
or
or
or
or
or
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
push
push
push
push
push
push
push
push
imul
imul
imul
and
and
and
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
and
in
in
in
in
in
in
in
in
in
in
in
in
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
add
add
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sbb
sbb
sbb
sbb
sbb
sbb
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pushf
pushf
pushf
rcl
rcl
rcl
rorl
push
push
push
push
push
push
push
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
fs
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
adc
adc
adc
adc
adc
adc
adc
adc
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
daa
daa
daa
daa
daa
daa
daa
daa
daa
nop
nop
popa
popa
enter
enter
enter
enter
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
inc
inc
movsb
movsb
movsb
movsb
movsb
movsb
movsb
mov
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
arpl
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
mov
mov
mov
mov
mov
mov
pop
pop
pop
ljmp
ljmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
adc
adc
adc
adc
adc
adc
adc
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
mov
mov
mov
mov
pop
pop
pop
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
cmp
cmp
cmp
cmp
cmp
cmp
cmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
or
mov
xlat
xlat
outsb
add
mov
add
jns
iret
cmp
sub
pop
aam
add
jbe
in
lret
outsb
add
add
bound
cltd
subl
jmp
or
loopne
inc
mov
cli
pop
push
scas
add
push
stc
pop
cmp
clc
scas
add
inc
add
mov
add
andl
add
out
mov
add
pop
add
add
add
fists
outsb
add
sub
inc
add
in
cmp
popf
cwtl
loopne
add
add
add
sarb
add
cmc
mov
add
xor
scas
leave
cmp
adcb
add
add
add
jbe
xchg
add
add
or
add
add
add
and
jns
fldl
add
daa
fucomp
cmp
out
cmpsb
pop
push
mov
adc
jmp
into
or
xor
imul
fiadds
add
xchg
lahf
mulb
add
out
add
popa
mov
idivb
add
aam
add
ljmp
mov
pop
filds
pop
mov
dec
add
lret
adcb
jbe
shll
sub
mov
add
aaa
and
cmpl
mov
add
dec
add
add
notb
leave
adc
stc
test
xchg
xchg
dec
lahf
add
mov
add
add
adc
xchg
stc
mov
xchg
or
cmpsl
mov
add
push
add
push
and
jecxz
add
cmp
inc
or
push
add
mov
sbb
icebp
push
fbld
test
add
int
rcrb
jnp
add
add
arpl
pushf
je
je
xchg
push
sbb
fsubl
add
lock
mov
mov
xchg
push
loope
xor
mov
add
mov
add
add
dec
add
add
jg
jbe
mov
inc
lcall
push
add
cmp
notb
mov
adc
add
pop
xor
lock
add
push
push
push
add
sub
inc
movsb
fisttpll
cmp
lret
mov
push
add
stos
add
add
xchg
xchg
aam
add
leave
pusha
add
add
add
push
add
adc
sub
xor
sbb
inc
add
pop
sub
shrb
andl
jne
pop
add
addr16
jbe
cld
xchg
scas
xchg
aam
add
add
mov
add
rdmsr
add
add
mov
sbb
xor
in
enter
jg
jp
sub
stos
fwait
rcl
mov
in
and
add
xchg
mov
add
insl
hlt
sub
test
add
mov
add
adc
cmp
cmp
add
aaa
in
jle
pop
jl
xor
imul
cmpsb
bound
lret
cmc
push
add
cmpb
add
pusha
add
aaa
adc
arpl
jge
in
mov
mov
add
ljmp
add
loope
cltd
loope
inc
add
in
jb
mov
pushf
jne
shll
aaa
mov
adc
lea
out
add
fstpt
add
pop
mov
mov
mov
add
clc
mov
add
add
push
out
add
nop
neg
bnd
add
lds
or
divl
jne
mov
add
cmp
stos
mov
cltd
and
mov
out
sbb
inc
fstpt
pusha
add
loopne
scas
clc
subb
imul
imul
add
ret
and
mov
push
jle
xchg
sub
cmp
mov
lret
jp
in
popf
notl
shlb
lods
arpl
out
fstl
push
add
cmp
hlt
inc
lcall
add
add
cld
and
es
scas
adc
add
xor
add
mov
mov
mov
sbb
mov
sub
fimull
outsl
or
add
xor
add
popf
xchg
add
or
in
stos
mov
in
les
add
add
hlt
xor
mov
rcll
dec
inc
jl
outsb
add
lahf
xor
test
add
clc
in
xchg
or
sbb
xchg
movsl
add
add
add
pop
add
in
dec
add
add
mov
mov
jl
clc
add
cmc
sub
push
xor
push
add
pop
push
add
ret
outsb
add
aam
add
and
les
add
add
lahf
mov
jne
dec
sub
jge
fwait
pop
nop
jg
cmp
add
nop
ret
add
add
xlat
xor
jmp
out
or
xlat
ss
int
add
dec
jecxz
mov
loope
add
add
sub
lods
dec
cmp
adc
inc
and
sbb
fidivrl
inc
add
dec
add
outsb
add
mov
mov
add
popf
shrb
add
ficompl
jmp
add
add
fucomip
mov
xorb
add
cmp
push
add
dec
add
daa
inc
xchg
jae
mov
cmp
ljmp
add
stc
or
and
xor
loopne
inc
add
in
push
add
add
inc
add
jl
jle
sbb
ret
add
sub
xlat
orl
xor
lds
iret
xchg
sbb
lahf
inc
add
in
or
xchg
pop
insb
add
fdivs
or
jnp
add
sbb
andl
jae
sub
push
cli
xchg
cmp
add
mov
insl
pop
dec
jmp
cmc
xchg
lods
pop
xchg
push
add
pop
add
lcall
add
add
jl
mov
add
pusha
add
and
movsb
xchg
scas
cmpl
dec
icebp
inc
mov
add
add
or
aaa
lods
pop
sbb
fistpll
sub
xor
add
js
or
add
ja
cltd
lea
sub
add
popf
jmp
js
lods
repnz
add
add
cld
lcall
cwtl
or
add
mov
add
add
mov
add
push
add
pop
xor
xchg
sbb
add
add
push
add
lods
and
dec
add
lods
cmp
sbb
add
push
add
cwtl
cmpsl
mov
aas
xchg
add
mov
xor
lahf
ss
xlat
sub
fucomi
repnz
out
mov
lods
push
add
test
cli
sub
out
sbb
mov
add
mov
test
cmp
xchg
repz
out
call
add
movsl
repnz
sbb
stos
adc
push
add
add
add
xor
mov
add
push
and
ds
mov
push
mov
mov
xor
or
test
aas
jo
inc
add
or
aaa
jge
out
addr16
dec
mov
mov
cwtl
lods
mov
inc
aaa
fadds
ret
imul
pop
xor
cmc
or
jae
test
push
add
repnz
add
sub
jns
push
add
lret
enter
rorl
lds
add
inc
add
or
mov
push
add
das
sbb
add
dec
stos
int3
cmp
dec
lahf
clc
mov
add
jecxz
add
add
lcall
or
les
add
add
mov
icebp
mov
leave
jle
mov
mov
mov
scas
hlt
imul
jp
xchg
add
add
add
add
in
pushf
jns
fildll
add
xchg
inc
xor
add
push
add
add
add
adc
orb
add
add
data16
xchg
jnp
add
sbb
dec
add
lret
stos
pop
mov
popf
xchg
add
mov
push
add
xchg
xchg
inc
cmpsb
les
cltd
loopne
inc
outsb
add
sbb
repz
mov
jmp
addb
jl
pop
lret
jb
je
repnz
add
popa
add
add
mov
add
jp
xor
add
jbe
subb
add
test
add
fmulp
sbb
shrl
push
add
add
adc
dec
add
add
cmp
int3
pop
aam
adc
push
add
movsl
iret
mov
cmp
pop
add
movsl
adc
add
push
add
add
add
jg
xchg
ror
icebp
jl
adc
xor
out
add
mov
inc
enter
pop
add
mov
scas
sub
into
push
add
add
push
add
push
add
add
add
repnz
mov
in
xchg
ret
inc
sbb
iret
mov
sbb
cld
push
add
pusha
add
add
jp
mov
add
sti
ret
pushf
popf
stc
sti
cmpsb
cmpsb
lea
imul
mov
add
add
push
in
adc
scas
scas
or
mov
add
mov
sbb
jno
jbe
dec
lock
add
mov
add
aam
loopne
std
pop
add
insl
in
pop
add
push
mov
add
mov
mov
loop
cli
mov
sbb
gs
mov
lea
mov
add
data16
lock
pop
testl
add
test
aam
inc
aam
add
cmpsl
pop
inc
add
inc
pop
add
add
xchg
popa
push
dec
mov
cld
pop
in
sar
sub
add
data16
add
stos
out
and
add
mov
rol
xlat
stos
xor
popf
or
mov
xchg
dec
add
inc
dec
data16
add
pop
mov
sbb
push
add
mov
cltd
mov
fs
pop
add
dec
pop
add
mov
mov
add
loope
arpl
mov
push
mov
adc
add
fcmove
hlt
test
add
push
add
add
scas
mov
ja
mov
sbb
out
hlt
sbbb
js
lds
add
adc
add
data16
cwtl
mov
adc
imul
add
out
mov
add
or
xlat
ja
add
push
sbb
add
lahf
push
lock
sub
dec
add
fsubrs
fidivrl
add
add
pop
add
add
adc
add
pop
add
rcrl
add
inc
add
sub
mov
mov
mov
in
test
or
inc
jbe
push
add
popa
push
xor
mov
add
jmp
es
sbbb
ja
out
sbb
mov
mov
sub
sub
lea
jg
xor
popa
push
cmp
jnp
cmp
xor
add
pop
add
add
jge
inc
add
mov
mov
and
add
sbbb
pop
add
rcr
inc
add
popf
leave
push
add
push
add
shrl
add
add
xchg
int3
cmp
pushf
mov
add
add
add
adc
jl
mov
mov
jae
data16
aad
hlt
or
daa
or
daa
dec
add
and
and
enter
push
cmc
pop
xchg
arpl
add
shll
xchg
sti
xor
mov
iret
sbb
pop
cmp
add
sti
cmp
sub
sub
inc
cmp
jae
add
addr16
movsl
dec
add
or
dec
jne
push
add
add
xor
std
add
lcall
add
stc
loopne
add
dec
flds
fwait
inc
add
pop
dec
mov
sti
scas
scas
insb
add
add
cmp
add
add
aad
jge
imul
add
add
xchg
daa
add
add
pop
jb
pusha
add
inc
lock
cmp
pusha
add
add
ds
sub
jge
add
or
repnz
jmp
inc
mov
cmp
and
add
and
jbe
mov
mov
scas
cmp
push
add
cli
add
lods
mov
add
negl
pop
jne
push
add
dec
add
mov
add
data16
sbb
dec
add
pop
sahf
dec
add
add
mov
sbb
xor
mov
stos
test
and
push
add
add
inc
loopne
jne
add
add
add
in
ds
stos
cmp
mov
xor
in
add
mov
leave
inc
add
pop
fsubrl
add
lret
add
add
mov
mov
add
mov
adc
test
add
sbb
xchg
inc
enter
xchg
cmpsb
ror
add
int
xor
sub
je
outsb
add
je
mov
subl
aam
subb
and
pop
movsl
push
add
sbb
pusha
add
add
mov
rcll
xor
int
xchg
jae
stos
jnp
sahf
std
call
sbb
and
adcl
ja
add
and
scas
adc
mov
call
xchg
mov
mov
xchg
movsb
addr16
test
ja
shr
add
les
add
sti
inc
mov
mov
mov
add
adc
pop
adc
push
mov
add
pop
push
add
cmovnp
xor
aaa
dec
push
add
xor
addl
jns
fwait
mov
jb
sbb
xchg
sub
jle
cmpsb
ret
out
mov
or
aas
and
int
shrl
repz
xlat
sbb
pop
add
daa
jge
or
mov
dec
add
mov
add
sub
iret
push
call
adc
fidivrs
add
fiaddl
mov
out
lods
into
in
mov
ficoml
lds
sbb
ja
push
add
pop
rcr
and
ret
add
pop
mov
adc
testl
mov
xchg
cs
popf
jmp
sub
fisttpll
add
imul
lods
xchg
dec
int
sbb
jno
adc
jle
adc
out
adc
dec
leave
mov
imull
jg
sti
andl
mov
add
pop
or
setge
jo
arpl
xor
mov
hlt
pop
add
shll
lret
test
sub
flds
inc
add
mov
ja
xchg
cld
xor
sbb
gs
lods
add
and
xor
in
jl
stc
lret
inc
loop
add
aam
add
lods
mov
add
cmpsb
cwtl
lds
popl
shlb
add
addb
sub
pop
add
jno
mov
outsl
mov
inc
stos
push
in
xchg
inc
into
jb
cmp
xchg
in
jns
jnp
loopne
add
insb
add
stos
outsl
mov
xchg
shlb
fildl
setl
mov
clc
popa
loopne
inc
pushf
inc
add
add
data16
aad
lret
imul
xchg
and
mov
and
js
jb
push
add
add
sub
inc
adc
mov
rorb
xchg
shl
mov
add
enter
add
data16
add
inc
add
jl
dec
add
or
inc
xchg
scas
xchg
test
mov
xorb
call
mov
pop
xor
idiv
mov
dec
add
inc
aas
sbb
imul
cld
stos
dec
add
mov
push
add
test
orl
popf
pushf
shll
int3
mov
jae
and
mov
pop
add
bound
inc
add
in
imul
xchg
cmp
inc
xchg
mov
imul
add
sbb
sub
cmpsb
mov
add
sub
dec
add
cltd
mov
xor
loopne
xchg
inc
add
add
mov
add
mov
add
bnd
sub
add
dec
ret
add
sub
inc
jno
and
insl
mov
loopne
sbb
ljmp
sub
out
push
data16
fcompl
jb
push
add
mov
add
add
add
pushf
jne
xor
lret
xor
mov
sti
push
out
out
mov
outsl
push
add
add
add
leave
inc
add
test
add
inc
lods
sub
ja
pop
add
pop
add
out
stos
mov
add
push
jmp
jmp
add
call
mov
dec
add
inc
jbe
in
inc
imul
mov
dec
add
push
ds
rclb
sub
imull
add
jae
daa
sbb
sub
in
add
add
iret
jo
call
jmp
popf
jge
addb
add
add
mov
add
data16
add
push
add
xor
subl
push
add
sbb
push
fidivrl
mov
js
pop
mov
mov
fmuls
add
out
add
sbb
in
add
adc
add
mov
movsl
or
jae
popf
push
add
clc
mov
xchg
inc
add
pushf
cmpsb
lock
jecxz
add
idivl
mov
xchg
popa
sub
cltd
mov
add
add
inc
fldt
cld
mov
sub
jo
fstl
mov
add
add
subl
add
push
xchg
add
cli
jo
add
or
dec
add
jmp
ja
lret
mov
add
mov
das
mov
or
push
popa
in
stc
mov
jbe
xor
cmp
lock
nop
lds
add
sub
cmp
pop
mov
je
mov
mov
jl
addr16
add
xor
push
push
mov
stos
push
add
xor
push
add
or
cmp
add
aam
add
inc
add
sti
xor
cli
lcall
push
add
add
dec
add
jb
rcr
xchg
add
add
out
mov
in
data16
int3
or
xchg
ja
pop
add
imulb
add
dec
cmp
scas
mov
cmp
add
popa
lds
daa
shrl
in
jl
mov
outsl
ja
xchg
ficoms
cltd
and
fldcw
xor
ret
mov
stc
bound
pusha
add
push
add
mov
jecxz
or
lahf
sbb
push
add
js
and
push
add
popa
pop
aam
fmull
add
aam
add
mov
xor
or
sub
sbb
nop
push
mov
add
add
mov
mov
sbb
cmpsl
into
cmpsb
xchg
femms
add
add
add
sbb
loop
add
add
nop
outsb
add
add
add
dec
inc
add
sub
data16
push
jmp
gs
add
scas
jb
mov
cmp
dec
xchg
loopne
aam
iret
add
or
shlb
mov
addl
add
nop
cli
xor
insl
scas
and
xlat
or
cwtl
bound
sti
sbb
adc
lea
dec
out
and
sti
shl
dec
add
xchg
push
add
inc
mov
adc
or
and
pop
fldt
cmpsb
ja
add
pop
add
adc
fldl
out
add
addr16
add
jne
lahf
arpl
add
out
into
imul
xor
jns
movsb
mov
pop
add
arpl
and
stos
and
lret
jp
lahf
cmc
fsubrs
push
add
arpl
mov
std
aas
idivb
and
cltd
int
push
aam
js
or
insl
xchg
rclb
mov
add
jns
add
int
enter
filds
scas
outsb
add
fidivs
sub
add
dec
movsb
add
add
std
aam
clc
pop
lods
cmovge
and
cmp
add
pop
repz
add
add
add
jle
fwait
sub
pop
add
add
test
xor
loope
add
jle
lret
pop
movsb
pop
add
add
push
les
aam
loope
add
mov
xor
or
jne
rcl
and
xchg
add
add
add
add
jbe
aam
add
or
lret
movsl
dec
jb
shlb
sub
or
in
mov
xchg
outsl
inc
cmpsb
and
iret
in
sahf
mov
xchg
push
add
or
xor
sahf
push
add
aam
add
insl
shrl
sahf
push
add
add
xorb
sbb
add
or
popa
lret
add
jle
adc
mov
sbb
add
xor
fcoms
add
decb
add
add
out
scas
inc
add
push
add
cmp
jg
add
add
in
fimull
jo
xchg
jmp
add
jnp
push
dec
add
add
lahf
inc
add
bound
pop
rolb
add
sarl
into
xchg
jo
mov
add
push
add
sbb
add
jl
sti
rcrb
pop
inc
sahf
sbb
xorl
xchg
inc
add
mov
add
or
push
add
add
add
je
test
add
add
add
add
xchg
aam
pushf
loope
xor
add
test
imulb
cmc
add
lods
jmp
add
rolb
jne
in
add
add
dec
fistpl
or
mov
push
mov
add
add
push
ljmp
add
loop
add
sahf
in
rorb
xor
mov
lods
rolb
xchg
add
adc
add
add
add
dec
add
add
mov
fdiv
jmp
pop
add
inc
add
sbb
add
cmpl
add
sbb
xchg
mov
cmp
and
add
push
add
pop
add
add
filds
push
add
stos
inc
add
pop
stc
jnp
xchg
xchg
cmp
add
test
cmp
mov
pop
out
add
addr16
mov
mov
sub
movl
lea
cld
push
andl
call
sub
add
and
mov
mov
and
test
je
mov
push
push
cld
call
test
cld
jne
mov
add
push
push
push
push
call
test
jne
xor
push
ret
lea
andl
push
push
push
push
push
push
call
push
cmp
lea
jne
movzbl
or
pop
mov
add
not
cld
xor
test
jne
call
ret
stc
mov
jmp
cmp
mov
add
ret
mov
mov
mov
inc
or
lea
lea
add
add
shr
lock
sub
and
je
push
mov
jne
sub
jl
ror
push
leave
js
int3
and
adc
dec
add
dec
add
cmp
cmc
push
add
jp
lcall
mov
add
insl
js
pop
sub
lret
sub
mov
mov
in
orl
add
add
pop
add
aad
xchg
stos
rcl
scas
adc
jnp
add
jae
or
add
pop
test
cmc
mov
adc
lret
insl
add
add
xchg
setle
or
dec
add
int
xor
sbbl
adc
and
mov
aam
add
add
fnstenv
add
aas
aaa
lock
adc
cmp
adc
jmp
in
dec
mov
pop
xor
cmp
mov
stc
pop
rorl
push
add
add
dec
push
sub
inc
cmpsl
testb
add
ss
lods
or
cld
push
add
pop
mov
add
cmp
fdivrs
or
mov
sub
mov
add
pop
lret
add
pop
loop
add
mov
mov
jns
add
jno
inc
das
je
mov
xchg
add
shll
nop
sti
add
insl
jne
mov
add
addr16
pushl
push
add
jecxz
sbb
in
sub
add
loopne
sub
add
cli
mov
add
add
pop
add
pop
add
jnp
add
add
add
xor
scas
pop
sbb
data16
out
lods
cwtl
add
dec
add
pop
icebp
sub
xor
scas
mov
cmp
aam
push
add
adc
js
imulb
add
add
add
lret
jmp
mov
add
adc
pop
add
add
push
fnstsw
xchg
aam
add
jl
dec
shrb
add
add
sub
repz
outsb
add
scas
repz
lods
pop
out
and
push
add
cli
cmp
jecxz
add
add
mov
inc
in
fcomi
adc
mov
fdiv
jb
stos
jecxz
add
aaa
cmpl
inc
add
pop
js
out
add
push
add
shll
add
add
cmp
dec
add
insl
jge
enter
mov
xchg
add
add
fistpll
and
push
add
mov
add
cmpsl
out
adc
dec
add
add
lcall
add
popf
scas
inc
jge
or
mov
mov
rcll
add
loopne
add
fidivrs
fwait
mov
push
add
data16
leave
jmp
lret
test
add
mov
aad
lahf
movsb
jb
mov
les
insb
add
add
sbb
lds
fwait
jne
add
call
add
data16
rolb
mov
add
mov
pop
add
sub
sbb
add
add
mov
xchg
scas
and
popf
mov
push
add
cli
push
loopne
and
add
or
add
add
cmp
cmp
add
jge
and
jle
ja
add
test
mov
push
add
cmp
test
mov
adc
aad
inc
jge
leave
sbb
insl
std
pop
shll
cld
jge
insl
add
arpl
pop
stc
push
gs
mov
inc
push
add
add
aas
dec
add
add
pop
add
enter
xchg
inc
lds
add
add
push
add
bound
mov
cmp
test
inc
add
push
add
push
pop
add
push
add
pop
test
pop
and
push
add
jle
sarb
add
add
sahf
mov
lret
jb
daa
arpl
inc
cmp
and
sub
pop
rdseed
paddq
or
pop
add
add
mov
sub
repnz
mov
icebp
ret
mov
std
sti
pop
add
pop
add
pop
ficomps
push
add
add
and
push
add
add
aas
pushf
fistps
decl
add
inc
add
repz
divb
cmp
arpl
and
inc
add
in
adc
ret
pusha
add
adc
fsts
ja
mov
cmp
mulps
cld
in
dec
lahf
insl
std
adc
xchg
dec
mov
add
or
xor
push
add
je
ja
sub
sbb
pop
add
js
push
pop
add
mov
add
data16
dec
add
fistpll
add
aaa
cmpsl
mov
or
pop
add
clc
push
dec
add
add
jo
mov
sbb
adc
xchg
gs
pop
lahf
pop
out
add
add
sub
aas
loope
sbbl
add
inc
add
pop
add
stos
jb
cmp
out
stos
inc
add
js
hlt
add
add
cmp
pop
loop
add
add
jb
jge
push
arpl
dec
ljmp
and
inc
xchg
add
cmp
aaa
popa
xor
add
and
xchg
pop
repnz
add
add
repz
xor
imul
fidivs
add
add
add
in
xchg
inc
test
add
sbb
add
movsl
pop
lret
sub
mov
add
mov
int3
scas
mov
gs
mov
in
pop
ds
je
mov
add
inc
sub
dec
add
inc
add
jl
les
add
fbld
test
aas
cmp
insb
add
add
or
or
adc
push
add
add
fdivs
fwait
push
adc
mov
cmp
outsb
add
push
add
imul
test
out
jle
nop
lret
fisttps
pop
in
pop
sub
add
add
sbb
add
add
pop
push
add
sub
add
push
add
jg
jae
add
jne
arpl
pop
out
adc
imul
jge
add
push
add
add
hlt
pop
jne
add
jae
xchg
shr
add
add
dec
add
in
jae
mov
sub
scas
cmp
sar
out
inc
add
add
jecxz
push
add
add
mov
add
mov
popl
xchg
dec
add
das
mov
push
push
add
inc
rorb
fmuls
ds
inc
dec
add
push
mov
and
push
jg
add
sbb
mov
jne
rcrl
add
fwait
repnz
lcall
lods
test
add
cmp
and
ljmp
sub
jmp
push
push
add
ret
dec
add
dec
add
repnz
pop
add
push
dec
push
add
mov
add
add
adc
addr16
mov
popf
stos
jae
inc
int3
mov
scas
testb
adc
mov
xchg
xchg
hlt
data16
sbb
rcrb
add
std
mov
out
add
sbb
add
cltd
sub
rclb
push
add
mov
sbb
je
or
inc
add
inc
push
add
xchg
inc
add
in
push
pop
fs
pusha
add
pop
loop
add
add
sbb
pop
add
cmp
insl
ljmp
add
leave
jo
imul
rcrb
repnz
cmp
adc
or
int3
xchg
rolb
xchg
call
in
inc
daa
and
outsb
add
mov
add
les
xlat
dec
add
stos
mov
xchg
data16
inc
mov
clc
mov
add
push
add
xor
ret
fs
iret
fnstsw
add
add
xor
rolb
std
lock
ljmp
push
adcb
hlt
loop
push
add
mov
pushf
mov
test
and
jl
mov
movsl
idivb
and
pop
xchg
adcl
add
cmp
lcall
sub
pop
add
add
aas
movsb
cmp
jb
jle
cmp
clc
jecxz
add
lret
hlt
or
fldl
lcall
fstpl
jmp
in
mov
xchg
mov
add
add
and
clc
ret
cltd
xor
inc
add
outsb
add
outsb
add
xchg
js
ss
push
add
popf
dec
mov
in
add
add
inc
add
inc
outsb
add
mov
add
dec
add
lods
in
jle
inc
out
stos
inc
add
sahf
xor
mov
and
add
add
out
push
add
lds
add
ret
pop
or
popf
xchg
jg
test
inc
dec
add
adc
sub
add
mov
call
adc
inc
push
add
and
and
cmpsl
mov
xor
sbb
pop
pop
mov
xor
aam
enter
add
mov
add
pop
and
cli
and
pop
mov
or
faddl
out
adc
and
jb
hlt
inc
jg
or
xchg
push
or
cmpsb
mov
ret
imul
add
and
jno
jle
mov
orb
jg
loop
mov
add
sub
inc
add
add
test
mov
add
inc
add
mov
push
add
dec
fucomp
xchg
sbb
shll
ret
or
rcrb
add
lcall
and
scas
xor
lea
add
in
push
or
jge
call
jmp
lret
add
add
inc
add
add
movsb
in
in
dec
add
inc
add
adc
push
add
fdivr
aas
and
xor
scas
add
stc
rorl
xchg
pushf
mov
pop
jno
add
lock
add
sub
sbb
sbb
push
add
sbb
xchg
lods
mov
int3
add
or
jo
gs
popa
sbb
add
add
cmp
in
lock
bound
dec
cwtl
lahf
add
adc
add
add
lea
or
repnz
cmpl
add
add
sbb
fdivrl
add
repz
mov
sti
lea
jmp
dec
add
add
add
mov
add
add
cmp
mov
pop
mov
add
push
add
cmpsb
ja
push
add
add
scas
jecxz
sarl
add
add
scas
shll
add
add
xor
xchg
push
jnp
shr
add
add
add
add
ror
xchg
sbb
jne
data16
fimull
mov
add
sub
add
add
add
popf
aam
add
add
cwtl
pushl
add
fisttps
push
add
xchg
rcll
add
and
mov
or
dec
add
add
fdivrp
inc
insl
or
push
mov
add
add
sub
jp
mov
cmp
andl
add
ret
hlt
aas
test
jl
adc
add
mov
testb
pop
add
push
add
add
add
jo
cli
in
add
jg
dec
sahf
scas
fsubrl
add
fmul
cmp
data16
add
add
mov
cld
loopne
pop
add
xchg
mov
add
add
loop
in
loope
test
add
mov
sub
sub
repz
imul
dec
pop
data16
cmp
add
sub
add
test
stos
ret
mov
popa
ret
adcb
in
loope
mov
lea
xor
insl
in
insb
add
push
jno
add
pop
int3
xchg
add
mov
in
outsl
fldl
aad
push
rcrl
mov
lcall
lods
jmp
mov
fidivrs
imul
paddsb
shlb
add
mov
mov
clc
sahf
loope
aaa
ret
test
push
add
jo
xchg
movsl
sti
pop
xor
push
add
adc
call
add
and
add
lds
add
push
add
add
add
out
add
jle
mov
push
iret
xor
add
lahf
cmpsl
xor
cld
mov
add
add
push
test
add
add
rcrb
jnp
push
insb
add
cwtl
rcrb
popa
push
sbb
push
dec
add
mov
pop
add
lods
call
dec
add
cmpsl
les
dec
jmp
insl
loop
add
inc
pushf
mov
mov
outsl
xchg
xchg
sbb
ficompl
jb
push
ficompl
aad
cmp
inc
sub
add
or
mov
add
notb
fldl
add
add
out
daa
clc
adc
insl
clc
loopne
mov
outsl
lods
into
or
orb
lods
jno
mov
add
xor
fiadds
or
in
add
push
add
jl
mov
divb
add
add
add
loope
call
aaa
iret
loopne
add
test
jno
sbb
dec
add
dec
sub
aam
mov
pusha
add
pop
add
dec
bound
xchg
fcmove
sub
or
cwtl
nop
pop
fldenv
add
cmp
add
dec
cmpsb
sub
mov
lahf
xor
push
add
add
add
add
add
add
jo
and
adc
mov
push
push
sub
jae
shrl
add
add
push
add
add
jp
push
add
dec
daa
xor
jno
add
fxch
push
inc
add
repnz
sbb
jne
in
mov
add
add
es
movsb
push
fwait
mov
push
clc
repnz
nop
nop
jae
fiaddl
insl
nop
add
shrl
push
mov
leave
nop
jmp
incl
mov
pop
movsb
xchg
je
clc
repnz
nop
nop
jae
pop
imul
cmp
clc
repnz
nop
nop
jae
add
add
inc
aas
lea
push
mov
xchg
ret
add
and
jno
and
clc
repnz
nop
nop
jae
orl
aaa
add
cld
nop
nop
jae
add
add
xchg
and
add
mov
add
clc
repnz
nop
nop
jae
add
add
sub
fucomi
mov
clc
repnz
nop
nop
jae
xchg
add
sub
pop
mov
xchg
ret
or
arpl
or
pop
fiaddl
test
cmp
add
repnz
nop
nop
jae
add
pushf
add
vpsubsb
repnz
nop
nop
jae
nop
addl
mov
call
mov
inc
add
and
nop
add
xor
add
xorl
clc
repnz
nop
nop
jae
jl
add
les
test
pop
add
clc
repnz
nop
nop
jae
dec
add
add
add
sbb
mov
call
inc
add
dec
add
add
cmpsl
decl
add
clc
repnz
nop
nop
jae
add
dec
add
add
add
sub
nop
push
mov
leave
nop
jmp
add
add
les
push
mov
leave
nop
jmp
dec
add
dec
insl
add
clc
repnz
nop
nop
jae
jl
inc
push
add
add
add
jmp
lds
add
mov
add
add
jmp
repnz
nop
nop
jae
dec
and
add
xchg
cmpsl
mov
clc
repnz
nop
nop
jae
add
xchg
stos
nop
push
mov
leave
nop
jmp
sbb
in
dec
sbb
insl
or
inc
add
inc
add
fwait
push
push
mov
xchg
ret
dec
add
mov
and
xchg
clc
repnz
nop
nop
jae
nop
add
add
add
pop
add
push
mov
xchg
ret
xchg
sbb
in
add
push
mov
xchg
ret
in
add
add
insl
add
add
add
push
mov
leave
nop
jmp
adc
add
jb
sbb
and
nop
push
mov
leave
nop
jmp
sbb
add
add
add
repnz
nop
nop
jae
add
and
faddl
repnz
mov
clc
repnz
nop
nop
jae
pop
xchg
clc
add
incb
inc
add
dec
add
mov
clc
repnz
nop
nop
jae
jb
mov
int
test
and
add
repnz
nop
nop
jae
out
cmpsl
and
add
add
cmp
cld
nop
nop
jae
and
add
add
fpatan
movsl
clc
repnz
nop
nop
jae
xchg
add
out
pop
lock
push
mov
leave
nop
jmp
clc
xchg
and
add
add
clc
mov
jl
clc
repnz
nop
nop
jae
and
dec
mov
repnz
nop
nop
jae
add
sbb
out
add
imul
mov
mov
nop
push
mov
leave
nop
jmp
aaa
add
nop
jb
mov
rep
nop
push
mov
leave
nop
jmp
add
add
add
sbb
fwait
add
push
mov
xchg
ret
cmpsl
add
add
aad
faddl
pushf
rcll
nop
nop
jae
add
icebp
mov
add
and
xchg
ret
lds
icebp
dec
add
add
adc
repnz
nop
nop
jae
sbb
decb
fsubrl
mov
pop
push
mov
xchg
ret
fsubr
out
bound
sbb
add
push
add
clc
repnz
nop
nop
jae
add
add
clc
repnz
nop
nop
jae
add
fsubl
adc
dec
add
pop
clc
repnz
nop
nop
jae
xchg
and
xor
pop
xor
or
outsb
add
add
push
mov
xchg
ret
pop
in
andl
sub
push
push
push
mov
xchg
ret
adc
sbb
and
nop
adc
dec
testl
add
icebp
incb
add
pushf
fsubrl
add
ja
nop
push
mov
leave
nop
jmp
add
add
jae
and
pop
test
xchg
ret
and
add
jno
clc
repnz
nop
nop
jae
jge
add
xor
xor
pop
add
push
mov
xchg
ret
add
dec
add
xchg
xor
add
jge
dec
adc
repnz
nop
nop
jae
clc
lds
fwait
movzwl
clc
repnz
nop
nop
jae
add
fiaddl
add
xchg
call
clc
repnz
nop
nop
jae
faddl
pop
sbb
jae
les
clc
repnz
nop
nop
jae
fiaddl
and
add
sbb
shr
nop
push
mov
leave
nop
jmp
in
add
nop
pop
add
and
mov
xchg
ret
pop
xchg
add
mov
add
add
add
pop
clc
repnz
nop
nop
jae
add
xchg
pop
cmp
add
mulps
repnz
nop
nop
jae
in
add
fimull
idiv
repnz
nop
nop
jae
aad
add
nop
adc
add
sbb
clc
repnz
nop
nop
jae
fiaddl
add
fiaddl
in
insb
add
add
push
push
mov
xchg
ret
add
dec
pop
add
mov
inc
and
nop
push
mov
leave
nop
jmp
dec
add
dec
and
jge
add
pop
clc
repnz
nop
nop
jae
aaa
add
mov
add
add
add
adcl
cld
nop
nop
jae
pop
nop
add
mov
out
fdivp
push
add
dec
nop
push
mov
leave
nop
jmp
out
and
incl
add
or
and
in
leave
nop
jmp
add
jb
pushf
mov
add
repnz
nop
nop
jae
and
fidivrl
ret
leave
clc
repnz
nop
nop
jae
mov
inc
aaa
add
call
shlb
jne
push
mov
xchg
ret
decl
add
add
add
add
repnz
nop
nop
jae
add
add
call
sbb
and
repnz
nop
nop
jae
and
out
add
nop
add
mov
fistpl
clc
repnz
nop
nop
jae
add
add
cmp
add
push
mov
leave
nop
jmp
add
insl
add
cmpsl
adc
lcall
add
add
mov
push
mov
xchg
ret
add
lcall
cmp
addl
adc
push
mov
leave
nop
jmp
fsubrl
xchg
xor
pop
add
sub
fildl
ret
push
mov
xchg
ret
add
xchg
nop
add
dec
add
mov
mov
clc
repnz
nop
nop
jae
add
adc
out
add
ja
jo
nop
push
mov
leave
nop
jmp
add
in
pop
pop
add
daa
call
nop
push
mov
leave
nop
jmp
xchg
pop
add
add
mov
nop
nop
jae
dec
add
arpl
add
pushl
push
mov
xchg
ret
adc
inc
pop
aaa
xchg
mov
test
push
mov
leave
nop
jmp
clc
add
sbb
in
push
mov
xchg
ret
imul
in
inc
or
add
pop
addl
cmp
ret
add
adc
add
add
add
addl
jmp
mov
lds
clc
repz
clc
repnz
nop
nop
jae
adc
inc
mov
push
mov
xchg
ret
adc
jl
inc
pushf
add
rclb
nop
jmp
add
nop
cmpsl
nop
add
mov
cld
nop
nop
jae
lds
dec
add
xchg
push
add
cmp
nop
push
mov
leave
nop
jmp
imul
jge
add
nop
nop
jae
and
add
add
add
add
add
clc
repnz
nop
nop
jae
dec
add
or
add
int
nop
push
mov
leave
nop
jmp
fidivrl
inc
aaa
add
nop
add
fidivl
fistpl
push
mov
xchg
ret
add
add
aaa
cmp
adc
pop
clc
repnz
nop
nop
jae
dec
add
in
pop
fstl
repnz
nop
nop
jae
jge
add
andl
mov
mov
xchg
ret
aaa
aad
adc
arpl
and
sbb
or
add
sarb
clc
repnz
nop
nop
jae
imul
add
in
adc
jecxz
sar
cld
nop
nop
jae
or
clc
add
sbb
add
repnz
nop
nop
jae
add
inc
xor
add
inc
add
ret
dec
cmp
repnz
nop
nop
jae
push
dec
insl
nop
add
add
mov
clc
repnz
nop
nop
jae
add
fcompl
je
clc
repnz
nop
nop
jae
add
test
adc
cld
nop
nop
jae
add
cmp
stc
push
clc
repnz
nop
nop
jae
icebp
sbb
add
add
add
pop
mov
clc
repnz
nop
nop
jae
xchg
add
nop
xchg
adc
cld
les
mov
xchg
ret
and
inc
jl
pop
xchg
arpl
push
nop
push
mov
leave
nop
jmp
add
mov
sbb
add
pushf
inc
add
fiaddl
jb
jb
add
jl
not
push
mov
xchg
ret
add
aad
add
add
add
cmp
push
add
push
mov
xchg
ret
add
incb
add
add
xchg
nop
push
mov
leave
nop
jmp
or
ss
ficompl
nop
nop
jae
add
nop
add
add
mov
nop
push
mov
leave
nop
jmp
adc
add
cmpsl
add
xor
mov
cmp
xchg
mov
leave
nop
jmp
mov
insl
movsb
sbb
push
notl
push
mov
xchg
ret
inc
xchg
sbb
add
dec
into
pop
push
clc
repnz
nop
nop
jae
inc
pop
adc
add
dec
add
dec
adc
cmpsl
push
nop
push
mov
leave
nop
jmp
add
add
xor
aad
imul
pop
or
repnz
nop
nop
jae
add
cmpsl
nop
pop
arpl
mov
cld
nop
nop
jae
add
add
add
push
clc
repnz
nop
nop
jae
and
jge
add
in
add
sbb
imul
cmp
add
clc
repnz
nop
nop
jae
add
insl
mov
inc
sub
nop
popf
inc
add
add
and
icebp
add
add
clc
repnz
nop
nop
jae
and
mov
or
repnz
nop
nop
jae
add
add
adc
add
js
add
xchg
xchg
fcompl
dec
push
mov
add
add
pop
leave
add
into
jp
mov
xor
nop
push
mov
leave
nop
jmp
add
add
bound
sbb
jge
roll
repnz
nop
nop
jae
add
add
dec
add
push
mov
xchg
ret
clc
icebp
cmpsl
add
add
add
rcrb
add
pushl
clc
repnz
nop
nop
jae
add
add
arpl
nop
mov
fwait
clc
repnz
nop
nop
jae
add
jge
jb
add
dec
add
repnz
nop
nop
jae
imul
inc
in
in
xchg
add
je
pop
clc
repnz
nop
nop
jae
add
pop
add
add
add
loop
add
push
mov
xchg
ret
arpl
arpl
add
icebp
add
jmp
cmp
ret
add
mov
sbb
lods
push
push
mov
xchg
ret
add
add
and
aad
mov
sar
cld
nop
nop
jae
sbb
sbb
jge
add
ficoml
clc
repnz
nop
nop
jae
add
mov
add
dec
add
movl
add
insl
jge
add
pop
out
movsb
repz
push
mov
xchg
ret
or
add
add
add
sbb
repnz
nop
nop
jae
add
add
call
clc
repnz
nop
nop
jae
nop
aaa
nop
add
add
arpl
nop
push
mov
leave
nop
jmp
nop
xor
add
dec
mov
inc
sbb
repnz
nop
nop
jae
add
add
sbb
cli
clc
repnz
nop
nop
jae
add
add
cmp
repnz
nop
nop
jae
add
fisubl
pop
inc
std
push
push
mov
xchg
ret
add
add
xchg
cmpsl
add
incb
dec
mov
push
add
clc
repnz
nop
nop
jae
add
pop
mov
repnz
nop
nop
jae
add
add
add
movsb
add
jb
xchg
fld1
clc
repnz
nop
nop
jae
add
add
add
pushf
add
aad
cmpl
cld
nop
nop
jae
clc
add
mov
shl
repnz
clc
repnz
nop
nop
jae
adc
mov
xchg
ret
add
mov
dec
jge
repz
add
add
cmpsl
cmp
nop
add
add
jl
mov
repnz
nop
nop
jae
and
add
add
aaa
add
xchg
nop
nop
jae
aaa
add
or
add
add
cwtl
insl
add
clc
repnz
nop
nop
jae
add
incb
adc
add
jnp
add
dec
mov
xchg
ret
add
nop
aaa
faddl
icebp
add
in
leave
nop
jmp
adc
add
add
add
add
add
add
ret
sbb
nop
jae
imul
cmpsl
add
popa
shl
push
mov
xchg
ret
add
add
sbb
in
leave
nop
jmp
pop
nop
add
pop
add
add
and
clc
repnz
nop
nop
jae
add
and
aaa
movsb
nop
mov
add
add
nop
push
mov
leave
nop
jmp
xor
faddl
xchg
nop
pop
nop
in
push
clc
repnz
nop
nop
jae
ficoml
mov
mov
clc
repnz
nop
nop
jae
inc
add
add
nop
ficoml
in
repnz
clc
repnz
nop
nop
jae
add
add
dec
nop
sbb
in
leave
nop
jmp
add
add
add
pushf
mov
out
out
clc
call
nop
jmp
add
dec
add
lret
test
repnz
nop
nop
jae
in
nop
add
add
int3
clc
repnz
nop
nop
jae
sbb
add
aaa
add
jmp
mov
xchg
ret
and
add
pushf
jno
nop
push
mov
leave
nop
jmp
pop
cmp
dec
addl
xchg
and
test
add
clc
repnz
nop
nop
jae
add
das
out
call
nop
jmp
add
nop
fsubl
pop
add
add
repnz
nop
nop
jae
aaa
lds
adc
pop
clc
repnz
nop
nop
jae
xchg
add
add
and
push
xchg
fsubl
nop
nop
jae
jb
add
add
add
pop
add
cld
nop
nop
jae
add
nop
and
add
add
mov
push
mov
xchg
ret
add
add
add
and
add
clc
repnz
nop
nop
jae
mov
nop
mov
push
mov
xchg
ret
add
add
nop
add
add
in
sahf
das
mov
clc
repnz
nop
nop
jae
add
add
add
pop
push
clc
repnz
nop
nop
jae
inc
add
cmpsl
bound
inc
mov
clc
repnz
nop
nop
jae
sbb
nop
clc
add
jl
cmc
xor
clc
repnz
nop
nop
jae
jmp
add
pushf
add
decb
and
mov
leave
nop
jmp
add
incl
and
add
cmp
popf
shl
clc
repnz
nop
nop
jae
lds
add
xor
clc
repnz
nop
nop
jae
add
and
add
add
push
clc
repnz
nop
nop
jae
push
dec
add
aaa
add
aad
push
add
insl
add
clc
repnz
nop
nop
jae
and
fiaddl
add
loope
clc
repnz
nop
nop
jae
add
add
add
dec
and
ds
popa
nop
push
mov
leave
nop
jmp
add
add
add
add
fdivrl
add
add
clc
repnz
nop
nop
jae
and
and
add
mov
clc
repnz
nop
nop
jae
out
sbb
adc
xchg
inc
xor
test
add
add
add
ljmp
test
clc
repnz
nop
nop
jae
add
cmpsl
add
addl
xchg
ret
clc
add
sbb
mov
cmpsl
add
int
pop
jae
repnz
nop
nop
jae
adc
add
imul
nop
nop
jae
aad
add
add
add
clc
repnz
nop
nop
jae
add
add
mov
xchg
ret
add
push
add
insl
add
xor
cmp
repnz
nop
nop
jae
add
add
add
out
in
jg
dec
imul
nop
jae
add
mov
push
nop
push
mov
leave
nop
jmp
pop
add
aad
arpl
add
add
add
repnz
nop
nop
jae
mov
and
inc
push
nop
push
mov
leave
nop
jmp
nop
add
out
add
jge
in
and
mov
xchg
ret
sbb
nop
add
aaa
jl
add
add
and
fsubrp
sbb
js
clc
repnz
nop
nop
jae
add
add
add
inc
lds
in
leave
nop
jmp
nop
aaa
nop
incb
xchg
add
add
xchg
inc
pop
push
mov
xchg
ret
add
imul
xchg
mov
cmp
push
mov
leave
nop
jmp
cmpsl
jb
mov
or
roll
cwtl
inc
add
add
add
xchg
add
int3
cltd
call
clc
repnz
nop
nop
jae
xchg
add
mov
clc
repnz
nop
nop
jae
add
inc
nop
incl
add
bound
je
add
add
inc
add
mov
add
clc
repnz
nop
nop
jae
insl
add
add
adc
arpl
clc
repnz
nop
nop
jae
in
add
and
clc
repnz
nop
nop
jae
add
inc
add
mov
bound
and
nop
push
mov
leave
nop
jmp
add
xchg
sbb
cmp
mov
pop
add
add
push
mov
xchg
ret
insl
add
pop
cmp
cmp
repnz
nop
nop
jae
jge
add
daa
mov
clc
repnz
nop
nop
jae
mov
cmp
sbb
cmp
mov
xchg
ret
in
add
xchg
add
add
add
call
nop
jae
sbb
add
pop
pop
add
jl
jmp
add
add
and
imul
add
add
add
out
inc
add
and
push
mov
leave
nop
jmp
addl
sbb
mov
mov
leave
nop
jmp
jge
add
jge
in
push
add
mov
cld
nop
nop
jae
add
mov
add
cs
lds
popf
clc
repnz
nop
nop
jae
add
jb
cmc
push
push
mov
xchg
ret
sbb
and
fcompl
pop
pop
in
push
push
push
mov
xchg
ret
sbb
inc
xchg
insl
pop
decb
and
cmpsb
adc
add
clc
repnz
nop
nop
jae
cmpsl
add
add
in
add
add
add
and
imul
jl
je
clc
repnz
nop
nop
jae
add
add
cmpl
nop
nop
jae
xchg
add
add
jecxz
inc
and
repnz
nop
nop
jae
adc
and
mov
mov
xchg
ret
add
aaa
sbb
sub
nop
push
mov
leave
nop
jmp
add
in
add
mov
push
mov
xchg
ret
dec
add
add
dec
add
add
loopne
movmskps
repnz
nop
nop
jae
add
xor
add
add
clc
repnz
nop
nop
jae
add
add
and
add
sbb
jb
push
repnz
nop
nop
jae
add
add
call
inc
add
in
add
mov
add
inc
add
fwait
push
mov
xchg
ret
add
dec
add
add
xchg
or
adc
repnz
nop
nop
jae
mov
xchg
nop
aad
xchg
pushl
clc
repnz
nop
nop
jae
sbb
add
add
mov
adc
repnz
nop
nop
jae
xor
add
aad
add
clc
repnz
nop
nop
jae
add
add
mov
mov
mov
data16
add
movsb
add
add
out
xchg
fnstsw
clc
repnz
nop
nop
jae
icebp
sbb
lds
repnz
nop
nop
jae
add
dec
add
add
movsb
sbb
leave
nop
jmp
mov
sbb
add
add
clc
push
mov
xchg
ret
imul
add
add
and
in
aas
je
clc
repnz
nop
nop
jae
inc
add
add
mov
aaa
push
push
mov
xchg
ret
inc
cmp
add
adc
jecxz
dec
cld
clc
repnz
nop
nop
jae
aaa
bound
add
cld
nop
nop
jae
xchg
insl
xor
in
cmpsl
aaa
cmp
pop
add
add
nop
jmp
add
clc
arpl
ret
test
nop
push
mov
leave
nop
jmp
add
add
aaa
add
aad
xchg
jbe
add
push
clc
repnz
nop
nop
jae
and
nop
nop
add
pushf
xchg
add
clc
repnz
nop
nop
jae
dec
mov
add
cld
nop
nop
jae
add
add
add
icebp
inc
dec
es
repnz
nop
nop
jae
add
imul
mov
mov
xchg
ret
add
out
mov
out
mov
repnz
nop
nop
jae
sbb
add
daa
add
nop
push
mov
leave
nop
jmp
add
sbb
inc
jmp
jne
nop
push
mov
leave
nop
jmp
in
add
dec
mov
inc
add
or
mov
leave
nop
jmp
add
xchg
nop
dec
jb
add
cld
nop
push
mov
leave
nop
jmp
inc
add
xchg
add
xor
clc
repnz
nop
nop
jae
jl
cmp
bound
movsb
add
pop
add
clc
repnz
nop
nop
jae
mov
xchg
in
add
cmpl
nop
push
mov
leave
nop
jmp
insl
xchg
insl
add
or
pop
mov
push
mov
xchg
ret
imul
inc
dec
push
mov
xchg
ret
dec
nop
sbb
sbb
out
push
add
clc
repnz
nop
nop
jae
add
add
pop
and
aaa
add
add
repnz
nop
nop
jae
xchg
and
add
icebp
add
cld
nop
nop
jae
jb
and
add
add
add
add
add
jl
add
pop
cmp
push
add
mov
js
mov
cld
nop
nop
jae
inc
aad
and
addl
push
mov
leave
nop
jmp
dec
sbb
add
add
clc
add
lods
jb
sbb
sbb
push
mov
leave
nop
jmp
and
inc
dec
mov
jb
insl
add
clc
repnz
nop
nop
jae
xchg
add
add
cmp
div
nop
push
mov
leave
nop
jmp
sbb
inc
add
xor
add
push
add
push
mov
xchg
ret
add
clc
inc
pop
faddl
aad
add
mov
and
repnz
nop
nop
jae
add
jge
add
aas
push
mov
xchg
ret
add
in
add
add
lea
push
mov
xchg
ret
cmp
mov
add
add
add
add
fcoml
aaa
add
and
addl
sti
nop
push
mov
leave
nop
jmp
add
fiaddl
faddl
cmpsl
mov
xor
push
mov
xchg
ret
add
incl
aaa
add
pop
pop
pop
push
mov
xchg
ret
incb
and
jb
ficoml
and
dec
jle
add
add
in
mov
imul
add
xchg
jbe
sub
test
add
add
nop
nop
jae
add
inc
pop
aaa
cmp
add
push
mov
xchg
ret
cmpsl
nop
add
add
add
clc
repnz
nop
nop
jae
add
jl
add
mov
push
mov
xchg
ret
add
aad
xchg
add
push
add
or
mov
leave
nop
jmp
pop
add
add
add
icebp
sub
nop
push
mov
leave
nop
jmp
inc
icebp
jb
add
rorl
add
repnz
nop
nop
jae
arpl
add
out
cmp
nop
push
mov
leave
nop
jmp
add
and
and
xor
repnz
nop
nop
jae
imul
add
add
cmpsl
sbb
pusha
clc
repnz
nop
nop
jae
inc
and
fiaddl
add
arpl
repnz
nop
nop
jae
add
add
add
cmp
dec
sub
xor
and
add
add
add
push
sbb
mov
repnz
nop
nop
jae
aaa
add
aaa
and
bound
add
xchg
in
leave
nop
jmp
add
add
clc
repnz
nop
nop
jae
mov
add
out
add
add
leave
mov
push
mov
xchg
ret
add
in
add
push
push
fdivl
cld
nop
nop
jae
adc
jl
fiaddl
and
negb
call
nop
jmp
add
add
add
jno
repz
repnz
nop
nop
jae
add
add
xchg
mov
push
push
mov
xchg
ret
mov
add
add
in
jl
mov
nop
push
mov
leave
nop
jmp
incl
in
in
xchg
add
clc
repnz
nop
nop
jae
and
add
and
add
add
mov
xchg
ret
in
inc
add
mov
repnz
nop
nop
jae
sbb
add
jl
add
pop
add
popa
add
push
mov
xchg
ret
add
nop
in
cld
sbb
repnz
nop
nop
jae
add
mov
or
add
xor
clc
repnz
nop
nop
jae
add
inc
add
cmp
nop
push
mov
leave
nop
jmp
mov
add
clc
repnz
nop
nop
jae
sbb
add
and
add
add
clc
repnz
nop
nop
jae
nop
fsubl
vdivsd
nop
jmp
sbb
xchg
or
xor
adc
add
add
xchg
and
or
in
bound
lods
pop
clc
repnz
nop
nop
jae
adc
add
mov
and
add
mov
clc
repnz
nop
nop
jae
and
add
dec
mov
sar
cld
nop
nop
jae
faddl
add
add
add
inc
jb
clc
repnz
nop
nop
jae
pushf
add
aaa
add
add
clc
repnz
nop
nop
jae
in
add
add
add
jge
mov
nop
push
mov
leave
nop
jmp
add
pushf
inc
inc
jle
mov
add
adc
repnz
nop
nop
jae
mov
aad
add
dec
dec
stc
rep
clc
repnz
nop
nop
jae
fcoml
add
add
sub
mov
clc
push
mov
xchg
ret
add
incb
fiaddl
decl
add
fwait
push
mov
xchg
ret
xchg
add
push
add
add
inc
arpl
clc
repnz
nop
nop
jae
add
out
add
sbb
add
nop
jmp
imul
in
push
add
add
push
clc
repnz
nop
nop
jae
mov
jl
mov
clc
repnz
nop
nop
jae
add
incb
add
add
cld
nop
nop
jae
in
cmpsl
add
inc
insl
add
add
push
mov
add
xor
mov
mov
jo
add
mov
mov
add
repnz
nop
nop
jae
add
add
arpl
add
pop
clc
repnz
nop
nop
jae
and
add
nop
or
je
add
add
pop
jl
aaa
add
add
push
mov
clc
repnz
nop
nop
jae
pop
add
add
push
mov
xchg
ret
arpl
add
add
add
fwait
push
mov
xchg
ret
icebp
add
or
clc
add
pop
clc
repnz
nop
nop
jae
mov
add
clc
or
fdivp
pop
push
mov
xchg
ret
push
add
sbb
xchg
lds
add
or
xchg
cwtl
inc
add
add
dec
add
mov
clc
repnz
nop
nop
jae
add
add
add
mov
add
pop
clc
repnz
nop
nop
jae
mov
and
dec
add
cli
fwait
push
mov
add
mov
jmp
add
sti
jmp
add
lds
add
add
add
clc
add
push
clc
test
cld
nop
nop
jae
pop
add
or
add
sbb
mov
leave
nop
jmp
inc
sbb
fmull
add
nop
nop
jae
add
add
inc
out
pop
jmp
add
add
mov
add
add
repnz
nop
nop
jae
lds
xchg
jge
in
add
clc
repnz
nop
nop
jae
inc
jl
add
add
add
add
icebp
clc
repnz
nop
nop
jae
add
add
mov
and
cld
nop
nop
jae
fimull
dec
add
fisubl
pop
xchg
clc
repnz
nop
nop
jae
add
add
add
add
adc
nop
nop
jae
movsb
add
add
and
adc
xor
push
add
add
nop
push
mov
leave
nop
jmp
nop
jl
xchg
add
xor
add
jne
clc
repnz
nop
nop
jae
add
faddl
add
sbb
popa
mov
clc
repnz
nop
nop
jae
lds
add
incb
sbb
pop
add
nop
push
mov
leave
nop
jmp
dec
add
jge
push
push
clc
repnz
nop
nop
jae
fiaddl
movsb
clc
pushf
inc
nop
add
dec
add
jne
dec
and
push
mov
xchg
ret
in
faddl
faddl
nop
arpl
cld
nop
nop
jae
add
adc
add
incb
nop
loope
rclb
test
xchg
ret
mov
sbb
adc
push
mov
leave
nop
jmp
dec
sbb
movsb
lea
jbe
clc
repnz
nop
nop
jae
nop
add
add
add
mov
mov
push
mov
xchg
ret
add
dec
in
insl
add
add
add
or
add
clc
repnz
nop
nop
jae
add
aaa
out
add
xchg
add
push
mov
xchg
ret
add
arpl
mov
jbe
clc
repnz
nop
nop
jae
mov
bound
cld
nop
nop
jae
mov
add
add
add
add
fistpl
clc
repnz
nop
nop
jae
and
nop
add
add
or
nop
jmp
aaa
add
xchg
mov
push
clc
repnz
nop
nop
jae
incl
mov
pop
xchg
subl
repnz
nop
nop
jae
dec
add
add
push
lds
push
add
mov
leave
nop
jmp
pop
and
incb
inc
bound
nop
dec
add
mov
clc
repnz
nop
nop
jae
add
add
xchg
faddl
jmp
mov
leave
nop
jmp
dec
jge
add
inc
jge
icebp
test
iret
or
nop
jae
add
nop
and
add
add
adc
push
mov
xchg
ret
and
add
add
jle
cmpsl
mov
push
mov
xchg
ret
add
add
mov
xchg
ret
sbb
mov
add
push
mov
xchg
ret
adc
add
add
add
inc
add
add
stos
mov
roll
push
mov
leave
nop
jmp
add
adc
add
or
repnz
nop
nop
jae
adc
orl
mov
push
inc
sub
add
mov
xchg
sbb
adc
nop
jae
or
add
add
or
add
repnz
nop
nop
jae
add
add
xchg
mov
pop
sub
repnz
nop
nop
jae
add
nop
push
mov
leave
nop
jmp
inc
add
movsb
fmull
add
add
stos
mov
adc
loope
repnz
nop
nop
jae
bound
fidivl
arpl
xorb
mov
or
clc
repnz
nop
nop
jae
add
add
nop
jb
or
sbb
mov
leave
nop
jmp
dec
add
movsb
add
and
sarb
add
mov
xchg
ret
or
mov
mov
and
clc
repnz
nop
nop
jae
or
nop
dec
add
icebp
add
clc
repnz
nop
nop
jae
jl
add
and
pushf
loop
cld
push
mov
xchg
ret
add
xchg
add
imul
adc
nop
nop
jae
add
mov
push
clc
repnz
nop
nop
jae
add
add
add
dec
clc
jl
pop
add
add
adc
repnz
nop
nop
jae
add
add
fdivl
mov
leave
nop
jmp
jb
clc
sbb
nop
pop
bound
add
or
faddl
mov
jl
or
add
mov
mov
xchg
ret
add
fiaddl
add
add
add
push
clc
repnz
nop
nop
jae
add
out
add
in
add
add
add
testl
cmp
ret
add
add
add
add
imul
cld
nop
nop
jae
add
ficompl
push
and
arpl
add
dec
inc
ficompl
clc
repnz
nop
nop
jae
add
xchg
dec
adc
add
aaa
add
add
sbb
clc
repnz
nop
nop
jae
sbb
add
add
fistpl
nop
push
mov
leave
nop
jmp
add
and
jmp
add
clc
repnz
nop
nop
jae
addl
je
clc
repnz
nop
nop
jae
and
add
lds
jmp
push
mov
xchg
ret
add
pop
add
add
imul
pop
and
clc
repnz
nop
nop
jae
add
out
sbb
dec
mov
xchg
ret
xchg
add
add
xor
fiaddl
inc
dec
jne
clc
repnz
nop
nop
jae
fcoml
add
jle
mov
add
movsl
pop
push
mov
xchg
ret
add
imul
add
test
fcomps
pop
add
jmp
in
leave
nop
jmp
and
sbb
add
leave
push
clc
repnz
nop
nop
jae
fiaddl
add
cmp
mov
xor
jns
inc
add
add
add
add
push
clc
repnz
nop
nop
jae
add
add
dec
fiaddl
dec
add
jl
inc
add
add
in
pop
jl
nop
faddl
in
mov
clc
repnz
nop
nop
jae
pushf
add
add
add
add
clc
repnz
nop
nop
jae
lds
add
nop
push
mov
leave
nop
jmp
sbb
add
imul
pushl
nop
push
mov
leave
nop
jmp
in
or
add
jb
rcl
mov
push
mov
xchg
ret
nop
add
incb
insl
add
add
clc
repnz
nop
nop
jae
add
pop
lcall
mov
push
clc
repnz
nop
nop
jae
add
or
inc
sbb
repnz
nop
nop
jae
add
arpl
add
add
and
jle
test
or
clc
repnz
nop
nop
jae
nop
add
add
add
mov
mov
leave
nop
jmp
pushf
pushf
in
add
mov
push
lods
push
mov
xchg
ret
arpl
add
pop
mov
add
repnz
nop
nop
jae
add
faddl
add
add
xchg
orl
call
nop
jmp
add
fisubl
xor
movl
jae
add
and
insl
and
adc
add
nop
nop
jae
mov
add
add
mov
clc
repnz
nop
nop
jae
jge
add
nop
add
cltd
xchg
clc
repnz
nop
nop
jae
nop
add
add
pop
add
add
add
add
cmpsl
jmp
dec
sbb
add
jb
add
inc
add
in
lds
add
jecxz
clc
repnz
nop
nop
jae
adc
and
add
add
add
leave
push
clc
repnz
nop
nop
jae
sbb
mov
xor
add
clc
repnz
nop
nop
jae
or
dec
add
inc
nop
and
add
add
mov
xchg
ret
cmpsl
jb
arpl
jb
xor
cmp
push
loopne
mov
xchg
ret
movsb
add
add
inc
in
and
add
clc
repnz
nop
nop
jae
clc
pop
cmpl
push
mov
leave
nop
jmp
push
jmp
dec
jge
fiaddl
movsb
bound
xchg
xor
cld
nop
nop
jae
inc
pop
sbb
dec
add
add
add
mov
xchg
ret
cmpsl
adc
add
or
decl
cmp
cld
nop
nop
jae
add
adc
add
mov
xchg
ret
faddl
or
add
add
add
mov
xchg
ret
add
inc
dec
add
lds
add
clc
repnz
nop
nop
jae
add
and
xorl
add
movsb
or
add
repnz
nop
nop
jae
push
sbb
nop
mov
add
nop
jmp
add
add
add
scas
mov
fdivr
repnz
nop
nop
jae
or
dec
mov
imul
inc
addr16
add
add
lds
mov
fwait
lss
clc
repnz
nop
nop
jae
lds
add
mov
xchg
ret
xor
nop
adc
bound
dec
add
mov
xchg
ret
inc
dec
and
ss
icebp
lds
add
call
clc
repnz
nop
nop
jae
add
imul
xor
mov
fld1
clc
repnz
nop
nop
jae
icebp
andl
pop
mov
clc
repnz
nop
nop
jae
or
add
add
inc
push
nop
push
mov
leave
nop
jmp
add
add
fisubl
add
or
cld
nop
nop
jae
add
add
add
out
in
add
repnz
nop
nop
jae
add
add
dec
fcoml
sbb
repnz
nop
nop
jae
inc
xchg
add
dec
nop
add
inc
fwait
clc
repnz
nop
nop
jae
and
add
dec
add
lds
dec
test
nop
nop
jae
add
imul
and
nop
push
mov
leave
nop
jmp
add
lcall
jecxz
test
add
clc
repnz
nop
nop
jae
fcompl
xchg
icebp
fdivl
push
mov
xchg
ret
jge
add
add
add
add
or
repnz
nop
nop
jae
inc
and
arpl
add
push
mov
xchg
ret
sbb
add
add
mov
push
mov
xchg
ret
addl
dec
xchg
add
movsl
mov
nop
push
mov
leave
nop
jmp
in
mov
dec
add
add
add
call
clc
repnz
nop
nop
jae
and
add
test
clc
repnz
nop
nop
jae
xchg
and
add
or
sahf
fisubrl
clc
repnz
nop
nop
jae
mov
and
aad
nop
inc
add
add
out
and
push
mov
xchg
ret
add
faddl
add
mov
nop
push
mov
leave
nop
jmp
and
dec
add
add
add
push
add
add
fld1
nop
push
mov
leave
nop
jmp
or
dec
dec
xchg
lds
nop
nop
jae
add
or
mov
jge
clc
repnz
nop
nop
jae
mov
add
imul
aam
pop
clc
repnz
nop
nop
jae
inc
add
incb
jl
rol
add
add
clc
repnz
nop
nop
jae
add
arpl
adc
adc
cld
nop
nop
jae
add
add
fcoml
sub
push
mov
xchg
ret
inc
nop
add
mov
out
fistpl
clc
repnz
nop
nop
jae
bound
xchg
add
add
add
push
clc
repnz
nop
nop
jae
adc
dec
add
add
mov
clc
repnz
nop
nop
jae
add
add
inc
xor
dec
add
addl
nop
nop
jae
faddl
add
push
add
cmp
pop
add
pop
clc
repnz
nop
nop
jae
add
and
in
add
out
pop
insl
push
clc
repnz
nop
nop
jae
add
and
sbb
add
adc
nop
push
mov
leave
nop
jmp
out
add
add
add
and
test
add
mov
leave
nop
jmp
add
add
add
mov
enter
nop
nop
jae
in
faddl
faddl
imul
add
mov
xchg
ret
dec
aaa
aad
add
inc
add
stos
mov
sbb
push
mov
leave
nop
jmp
add
and
inc
clc
repnz
nop
nop
jae
add
nop
add
add
ljmp
cld
nop
nop
jae
push
sbb
add
jb
dec
sub
clc
repnz
nop
nop
jae
add
inc
add
lahf
push
nop
push
mov
leave
nop
jmp
nop
add
jl
mov
jmp
add
add
in
add
fcompl
movsb
imul
out
clc
repnz
nop
nop
jae
add
dec
or
in
fistpl
clc
repnz
nop
nop
jae
inc
incb
or
pop
add
clc
repnz
nop
nop
jae
add
inc
add
jb
add
push
nop
push
mov
leave
nop
jmp
add
jb
add
add
fwait
xchg
xchg
nop
push
mov
leave
nop
jmp
cmpsl
add
add
pop
jne
clc
repnz
nop
nop
jae
addl
dec
add
test
cld
nop
nop
jae
add
add
pop
incb
sbb
push
cmp
imul
and
or
add
ss
add
add
in
leave
nop
jmp
xchg
add
out
jl
cmp
add
mov
clc
repnz
nop
nop
jae
add
add
scas
xor
mov
leave
nop
jmp
out
cmp
xchg
out
fsubl
jne
clc
repnz
nop
nop
jae
dec
fiaddl
jb
jbe
in
fpatan
stos
clc
repnz
nop
nop
jae
add
add
nop
or
add
and
repnz
nop
nop
jae
and
insl
pushf
adc
or
or
popa
mov
nop
push
mov
leave
nop
jmp
addl
incl
sub
fld1
jmp
add
add
aaa
movsb
mov
fisubl
add
nop
adc
add
adc
in
mov
nop
nop
jae
add
icebp
lds
mov
add
aas
int
clc
repnz
nop
nop
jae
adcl
xchg
clc
repnz
nop
nop
jae
inc
mov
mov
add
or
repnz
nop
nop
jae
add
ss
dec
add
and
pusha
add
mov
and
addl
dec
add
nop
add
repnz
nop
nop
jae
or
ficoml
add
add
pop
add
call
clc
repnz
nop
nop
jae
bound
add
and
push
popa
nop
push
mov
leave
nop
jmp
pop
add
insl
xchg
add
add
in
ret
mov
clc
repnz
nop
nop
jae
nop
cmp
faddl
add
in
orl
andl
incl
add
add
incb
add
mov
clc
repnz
nop
nop
jae
sbb
jb
incl
fiaddl
add
nop
nop
jae
add
dec
aaa
add
add
clc
repnz
nop
nop
jae
add
add
inc
or
out
sub
pcmpgtd
push
mov
leave
nop
jmp
add
imul
xchg
push
add
cld
nop
nop
jae
pushf
mov
inc
add
mov
clc
repnz
nop
nop
jae
add
inc
push
add
and
add
test
nop
nop
jae
add
ss
inc
nop
faddl
stc
xor
clc
repnz
nop
nop
jae
add
push
adc
pop
clc
repnz
nop
nop
jae
mov
inc
add
inc
dec
movsb
add
dec
nop
push
mov
leave
nop
jmp
inc
add
add
inc
add
add
add
pop
add
xchg
arpl
icebp
add
add
jb
ds
dec
add
jne
push
mov
xchg
ret
faddl
add
add
xor
clc
repnz
nop
nop
jae
add
clc
imul
add
add
add
jmp
nop
jae
aad
bound
pop
sbb
out
add
add
fld1
clc
repnz
nop
nop
jae
movsb
faddl
movsb
cmp
jge
lds
mov
clc
repnz
nop
nop
jae
add
pop
add
jge
clc
repnz
nop
nop
jae
cmpsl
pop
add
nop
add
jmp
in
leave
nop
jmp
add
add
or
dec
push
xor
push
clc
repnz
nop
nop
jae
clc
clc
fdivr
pop
imul
add
pop
jmp
call
add
imul
add
dec
ret
add
clc
repnz
nop
nop
jae
add
add
add
fucomip
aam
ljmp
bound
xchg
add
lds
or
shrb
clc
repnz
nop
nop
jae
add
add
sbb
mov
push
mov
xchg
ret
add
pop
inc
add
ficoml
add
shlb
test
nop
push
mov
leave
nop
jmp
bound
add
addl
int
pop
jae
repnz
nop
nop
jae
lds
in
in
pop
add
testl
repnz
nop
nop
jae
add
add
icebp
jge
mov
add
repnz
nop
nop
jae
add
push
sbb
sbb
adc
repnz
nop
nop
jae
nop
or
sbb
aaa
inc
xor
clc
repnz
nop
nop
jae
add
cmpsl
add
add
clc
repnz
nop
nop
jae
ficoml
add
in
fwait
clc
repnz
nop
nop
jae
add
and
add
scas
popf
push
push
mov
xchg
ret
adc
add
add
sub
cld
nop
nop
jae
add
adc
inc
imul
dec
push
push
mov
xchg
ret
and
add
add
aaa
add
nop
add
mov
clc
repnz
nop
nop
jae
xchg
add
jb
xor
test
nop
push
mov
leave
nop
jmp
sbb
add
cltd
movzwl
clc
repnz
nop
nop
jae
in
add
fistpl
push
mov
xchg
ret
in
add
or
xor
and
nop
nop
jae
add
add
add
popl
nop
push
mov
leave
nop
jmp
add
movsb
pushf
add
repnz
nop
nop
jae
add
add
jge
add
add
add
outsl
loopne
mov
xchg
ret
add
lds
in
jmp
add
lods
clc
repnz
nop
nop
jae
add
mov
pop
jbe
lds
repnz
nop
nop
jae
and
movsb
inc
dec
add
add
or
repnz
nop
nop
jae
add
add
and
mov
les
cmpsl
sbb
movsb
jl
jl
clc
add
add
add
fiaddl
arpl
xchg
mov
clc
repnz
nop
nop
jae
add
add
movsb
add
test
nop
push
mov
leave
nop
jmp
movsb
addl
add
sbb
fisttpll
add
nop
jmp
cmp
add
xor
jp
sahf
inc
add
shr
push
mov
xchg
ret
add
add
shr
add
nop
push
mov
leave
nop
jmp
add
or
add
push
mov
xchg
ret
decl
sbb
and
add
movzwl
clc
repnz
nop
nop
jae
dec
add
add
aaa
xchg
jo
and
imul
add
add
add
add
ret
jne
clc
repnz
nop
nop
jae
add
add
add
fld1
push
mov
xchg
ret
add
add
xchg
add
push
mov
leave
nop
jmp
and
add
add
and
pop
mov
clc
repnz
nop
nop
jae
dec
or
nop
xchg
dec
mov
clc
repnz
nop
nop
jae
nop
adc
add
ret
push
mov
xchg
ret
adc
dec
arpl
add
jnp
nop
push
mov
leave
nop
jmp
add
nop
cmpsl
add
add
add
sbb
clc
repnz
nop
nop
jae
add
xchg
cmpsl
fisubl
add
clc
repnz
nop
nop
jae
movsb
imul
add
add
js
dec
mov
clc
repnz
nop
nop
jae
add
mov
cmpsl
add
clc
repnz
nop
nop
jae
pop
add
push
add
nop
push
mov
leave
nop
jmp
add
add
add
lock
add
clc
repnz
nop
nop
jae
add
adc
sbb
and
jecxz
clc
repnz
nop
nop
jae
pop
and
add
sbb
push
clc
repnz
nop
nop
jae
nop
add
dec
add
add
mov
clc
repnz
nop
nop
jae
inc
and
in
in
inc
movsl
push
clc
repnz
nop
nop
jae
jge
add
add
add
add
xor
clc
repnz
nop
nop
jae
add
add
pushf
incb
adc
sub
repnz
nop
nop
jae
add
inc
add
jge
sbb
fdivrl
pop
add
cld
nop
nop
jae
add
imul
imul
out
mov
push
mov
xchg
ret
inc
xchg
add
pushf
dec
add
dec
mov
push
mov
xchg
ret
add
add
xchg
add
aad
cmp
nop
push
mov
leave
nop
jmp
add
and
insl
cmp
lods
mov
clc
repnz
nop
nop
jae
movsb
incb
and
or
clc
repnz
nop
nop
jae
xchg
adc
add
add
dec
repnz
nop
nop
jae
add
dec
add
loop
clc
repnz
nop
nop
jae
add
sbb
dec
nop
cmpb
add
out
jbe
add
inc
clc
incb
icebp
in
add
rorb
add
nop
push
mov
leave
nop
jmp
add
add
dec
out
mov
clc
repnz
nop
nop
jae
aaa
bound
and
xchg
cmp
outsl
push
push
mov
xchg
ret
add
add
pop
and
add
clc
repnz
nop
nop
jae
adc
lds
add
nop
mov
pause
push
mov
leave
nop
jmp
add
add
adc
cld
nop
nop
jae
faddl
and
and
pop
fiaddl
add
inc
add
add
push
nop
inc
add
add
add
add
dec
dec
add
jne
nop
push
mov
leave
nop
jmp
and
add
adc
add
clc
repnz
nop
nop
jae
add
add
adc
repnz
nop
nop
jae
mov
add
nop
nop
or
jge
clc
repnz
nop
nop
jae
add
add
add
jb
mov
clc
repnz
nop
nop
jae
and
inc
decb
pop
fimull
add
cld
or
in
leave
nop
jmp
lds
xchg
out
push
mov
push
clc
repnz
nop
nop
jae
xchg
sbb
add
pushf
add
xor
add
repnz
nop
nop
jae
movsb
add
jl
add
add
add
add
or
repnz
nop
nop
jae
subl
movsb
dec
xor
clc
repnz
nop
nop
jae
add
dec
add
mov
mov
push
clc
repnz
nop
nop
jae
nop
out
adcl
nop
jae
aaa
pushf
pop
add
cmpsl
jb
gs
clc
repnz
nop
nop
jae
imul
iret
inc
push
mov
xchg
ret
inc
add
adc
add
jb
adc
pop
push
mov
add
inc
add
mov
loope
fninit
cmp
int
add
imul
add
aas
std
scas
xorl
data16
dec
add
jp
and
and
mov
bound
sub
das
dec
pop
add
add
jb
sbb
popa
arpl
cmp
add
sbb
rclb
aaa
xchg
cld
xchg
jge
xchg
ja
add
and
ret
test
mov
lret
pop
mov
or
xchg
data16
outsl
mov
adc
add
cwtl
sub
mov
dec
add
push
add
or
jge
add
fld1
push
add
sbb
bswap
mov
push
add
sarb
xchg
dec
add
jno
out
add
test
add
mov
add
inc
or
pop
imul
or
xchg
sub
sub
mov
add
cmp
pop
sahf
mov
sbb
movb
add
leave
and
in
test
add
lock
leave
stos
xor
fldt
sbb
outsl
cmpb
cmpb
loope
add
add
sub
add
add
adc
or
decb
stos
pusha
add
add
hlt
xor
imul
sbbl
add
add
lahf
mov
mov
add
and
imul
in
push
fnstcw
add
aas
mov
add
xchg
jle
ss
pop
enter
mov
pop
add
sub
push
pushf
popa
pop
out
repnz
fdivrl
push
add
cmpb
adc
in
jo
mov
cmp
aaa
mov
add
sbb
mov
add
data16
add
psubd
mov
add
roll
add
mov
xor
mov
fsts
pusha
add
add
mov
dec
repnz
pusha
add
in
shrl
sub
scas
xchg
pop
jae
add
add
cmp
pop
add
push
add
mov
cltd
sub
add
les
xlat
add
imul
mov
imul
imul
bound
lea
add
pop
xchg
iret
sti
sbb
adc
data16
loop
add
add
outsl
push
sti
clc
dec
add
ficompl
js
lds
or
add
add
imul
xchg
cmpsb
fadds
fcmove
sub
jo
mull
add
xchg
add
cld
fsubrl
stos
sbb
add
sbb
add
pop
add
inc
add
add
into
push
mov
aad
add
rcr
fwait
hlt
sar
andb
xchg
int3
stos
inc
add
adc
push
mov
pusha
add
dec
add
add
fidivs
xchg
mov
lods
inc
add
aaa
push
add
mov
cmp
movsb
adc
ljmp
sbb
sub
add
inc
mov
dec
add
xor
mov
add
rorb
cmp
cmpsb
add
push
add
push
xlat
inc
add
rcr
add
stc
mov
cmp
clc
mov
add
mov
xlat
adc
cmp
lods
sub
push
add
rcrl
rorl
add
mov
add
cli
ja
add
stc
add
add
add
dec
clc
clc
mov
add
mov
add
add
ja
and
sbb
fstpl
cld
lods
scas
adc
add
outsl
and
xor
int
insl
pop
push
cli
push
add
xchg
xorb
vdivpd
sub
adc
xor
lods
ret
incb
daa
jae
push
add
add
popa
ds
int
add
out
and
mov
aas
and
adc
test
add
sub
pop
mov
cmp
decl
add
sbb
add
in
xchg
subl
add
sbb
clc
mov
add
add
xor
add
sub
das
and
movsl
std
fldt
add
icebp
pop
add
scas
je
sub
out
mov
loopne
loop
aam
add
sbb
popf
cmp
or
xor
lods
out
add
and
add
sti
and
dec
add
test
and
out
or
lcall
or
xchg
sbb
adc
out
add
mov
sub
adc
add
pop
add
add
in
sub
cmpsl
jbe
xchg
or
sub
mov
cmp
add
cmc
test
push
jbe
jbe
addl
pushf
rolb
add
add
add
in
dec
add
push
add
add
sbb
and
add
sbb
push
add
add
or
jb
jmp
mov
loope
cld
fdivrp
mov
mov
sbb
and
and
fidivrs
add
add
std
sub
jne
add
cld
popf
jmp
stc
push
add
inc
add
sbb
rcll
leave
sbb
lods
jbe
dec
mov
add
add
add
add
in
mov
add
jbe
add
add
add
jae
add
mov
dec
inc
sbb
pop
out
xlat
add
add
cmpsb
sub
mov
inc
and
outsl
pop
add
popa
enter
mov
call
dec
add
lcall
add
xchg
sahf
sbb
test
add
scas
mov
add
pusha
add
jge
inc
add
lret
inc
add
jl
out
mov
cs
mov
dec
add
pop
add
cmc
loope
mov
and
sahf
adc
imul
arpl
lea
add
lods
scas
xchg
add
out
mov
add
add
cmpsl
stc
mov
cmc
movsb
addl
mov
add
jmp
cmp
ja
add
scas
push
add
xor
jmp
add
add
sbb
pop
add
jp
inc
add
inc
add
add
dec
sub
or
shl
out
mov
add
mov
jge
add
lea
add
rcrl
test
add
dec
add
shll
lcall
pop
add
push
add
add
sub
cli
sbb
orps
rcrb
and
add
cwtl
push
std
dec
lock
add
dec
add
cs
mov
fisttps
add
pop
negb
add
in
clc
xlat
int
sarb
adcb
add
mull
add
xchg
pop
add
adc
add
sahf
pushl
mov
popa
mov
jne
add
jp
add
dec
mov
cmp
test
xlat
call
push
xor
mov
add
into
fwait
mov
add
mov
nop
adcl
mov
divb
mov
add
mov
lock
cmp
jb
push
ficoms
push
call
cmpsb
and
aam
adc
pop
add
inc
push
add
add
mov
add
insl
push
add
sub
inc
push
sbb
cltd
lds
add
enter
dec
add
and
cmp
cli
lahf
jnp
mov
and
sahf
pop
in
or
jg
ja
ljmp
mov
cmp
xchg
adc
inc
add
shrb
rol
into
sub
add
pop
dec
add
mov
add
mov
cmpsb
adc
sub
add
push
add
and
xchg
or
or
adc
lea
cli
test
cmp
pop
repnz
sbb
aaa
lea
jmp
mov
add
push
mov
add
data16
add
stos
mov
or
pop
pop
sahf
loope
add
enter
add
je
cld
les
pop
pop
xchg
pop
add
aaa
jmp
push
add
inc
xchg
add
sub
add
mov
imull
nop
les
loope
add
ljmp
bound
test
dec
in
adc
mov
pop
or
xlat
add
add
jo
negl
sbb
jl
mov
lods
add
and
cltd
cmp
mov
adc
bound
fnstenv
add
jle
add
and
push
add
inc
outsl
xchg
and
add
adcb
call
push
add
add
add
add
add
sub
rol
movsl
sbb
not
add
call
xor
inc
mov
jg
inc
add
add
lock
add
pop
mov
cmp
jp
pop
jmp
push
add
jp
jno
imull
dec
enter
add
add
push
add
xor
xchg
cmp
out
xchg
jae
add
inc
jmp
imul
aaa
fisubrs
rolb
add
jg
test
add
hlt
pushf
pop
hlt
std
adc
je
sbb
push
add
pop
rcr
outsl
lds
blsfill
in
push
add
psraw
mov
addr16
jns
jns
mov
add
dec
add
dec
add
ds
xchg
mov
sub
push
sbb
fisttpl
push
add
aad
ret
ss
push
xchg
add
in
or
inc
add
js
cs
pop
add
add
add
dec
jns
add
xchg
sub
ret
sbb
insl
test
pop
in
test
lret
or
rolb
outsl
mov
jp
fiadds
bound
negb
ljmp
add
jbe
dec
push
sbb
popa
sbb
sarb
add
jno
lcall
mov
je
sbb
add
sbb
pop
add
movsl
ret
sar
add
shll
push
xchg
test
xchg
push
dec
add
adc
stos
gs
push
add
mov
add
fwait
add
pop
lea
add
lret
addr16
add
add
mov
add
xorl
add
add
add
cld
sbb
cmp
jns
xchg
sbb
out
ficoml
dec
mov
int3
inc
add
xor
imul
stc
fmull
cmp
push
lods
jae
aam
mov
or
mov
push
add
gs
mov
pop
sahf
xor
out
add
pop
cmpsb
sti
cmp
push
outsb
add
or
inc
cmp
adc
stos
xchg
inc
sbb
and
add
xchg
xlat
jecxz
ja
mulb
clc
mov
add
dec
in
test
inc
add
ret
adc
scas
shr
pop
fbstp
fiadds
add
add
mov
add
lock
mov
add
inc
mov
add
xor
xor
inc
add
push
add
pop
in
lcall
jmp
dec
loop
int
mov
lods
mov
daa
bound
jno
add
pusha
add
cmp
fcompl
lret
sti
xchg
addr16
pop
test
mov
sahf
repnz
imul
jns
repz
jb
xchg
ja
loope
ja
add
enter
fnstenv
jmp
jne
add
mov
dec
add
add
add
jge
mov
imul
pop
scas
mull
lret
jb
fsubp
and
jae
or
pop
cmp
maskmovq
mull
mov
pop
add
add
xchg
xchg
fisubrl
add
fisttpl
add
jbe
popa
adc
mov
in
xchg
xchg
stos
ficoms
jmp
sub
mov
mov
pop
add
add
jg
add
loopew
dec
pop
add
lods
scas
call
mov
adc
das
add
adc
add
cmpsl
aad
xchg
enter
push
add
pop
add
icebp
inc
out
lret
shll
sti
and
mov
xor
inc
add
inc
mov
add
inc
cwtl
mov
add
add
push
add
sbb
or
pop
sub
popf
pop
add
mov
add
fistps
repz
adc
jbe
cmp
jecxz
mov
cltd
mov
mov
cmp
push
testb
cmp
add
sub
add
bound
mov
std
sbb
ret
lea
stc
jne
add
pop
repnz
jns
cmp
add
add
and
fiaddl
clc
cmpsl
pushl
add
out
movsb
mov
push
add
jle
in
jg
jmp
adc
enter
outsl
orl
add
add
xor
sbb
test
fcomip
fcomi
int
add
fwait
leave
jmp
je
bound
movsb
jnp
andl
hlt
lea
in
je
ret
pop
add
mov
add
jbe
stos
dec
add
pop
add
cltd
mov
stos
xchg
pop
add
add
call
mov
repz
add
into
loop
scas
mov
notb
jle
cmpl
xchg
jp
leave
mov
sub
or
or
or
jns
add
sbb
int3
mov
add
arpl
je
movsb
add
mulps
shll
and
mov
ret
push
lods
cmp
mov
adc
fdivs
int
push
lret
mov
mov
mov
xlat
shll
dec
in
add
lods
push
add
and
lret
dec
add
daa
icebp
aaa
ljmp
outsl
mov
pushf
adc
dec
std
jns
add
rcl
and
out
add
fisttpl
js
in
lret
lods
xor
js
mov
mov
add
push
add
mov
xchg
push
add
adc
mov
mov
add
push
add
add
mov
mov
mov
cmp
stc
sub
out
out
and
cltd
cld
mov
cmp
xlat
cmp
inc
and
jb
ret
mov
jo
pop
add
out
iret
out
pop
and
test
add
rcll
push
rcrl
add
movsl
pop
insb
add
add
sti
dec
mov
xchg
lahf
addr16
add
lcall
adc
shlb
add
add
mov
add
or
jo
sub
add
add
xlat
pop
imul
std
cmpsl
sbb
iret
and
clc
lcall
add
xor
mov
lock
sbb
and
fadds
add
add
add
add
mov
xchg
lahf
mov
scas
or
out
add
push
call
test
out
aad
stos
movsl
dec
add
aas
sub
inc
add
push
lods
in
les
loope
adc
aad
push
inc
add
push
comiss
push
fnsave
mov
aam
adc
pop
js
jbe
sub
dec
arpl
inc
add
fdiv
jnp
add
push
sub
xchg
iret
lock
or
lea
add
fnstcw
add
sbb
out
int
cmp
adc
loopne
and
cli
cmpsb
lods
mov
adc
add
stos
dec
outsb
add
xchg
add
add
xor
in
add
or
jo
push
add
jne
lahf
sub
mov
mov
je
nop
jmp
inc
add
stc
jmp
stc
jae
jns
ja
add
add
add
test
or
pusha
add
movups
jp
fsubrl
addr16
add
mov
dec
add
sahf
leave
jge
add
add
add
add
ljmp
lret
mov
fidivrl
add
mov
or
lea
nop
adc
mov
in
mov
pop
add
into
roll
clc
dec
mov
sub
pop
push
shlb
scas
shlb
sbb
pop
stos
je
pop
add
sahf
pop
mov
add
je
sub
push
and
mov
dec
add
push
pop
add
movsl
mov
pop
add
sahf
cmc
mov
adc
add
inc
mov
out
and
jo
jae
add
pop
add
push
xor
or
repnz
js
ljmp
add
mov
pop
add
mov
adc
add
cli
pushf
add
cltd
ret
insb
add
mov
pop
cmpsb
js
cmp
add
mov
mov
add
jno
loope
sbb
dec
and
xchg
stos
jl
push
add
pop
xchg
add
int3
xorb
jno
cmp
adc
push
add
xor
add
fwait
push
add
fsubs
ret
sarb
add
adc
xorb
test
insl
add
adc
push
add
dec
insl
add
add
adc
xlat
jo
scas
sbb
add
int3
or
movsl
cmp
add
add
add
or
mov
ss
mov
das
pop
popf
nop
add
add
add
pop
mulb
jp
scas
icebp
data16
mov
add
cmp
pop
dec
add
mov
add
push
add
mov
add
push
fnstsw
insl
sbb
xchg
push
add
add
add
xchg
rcrl
xor
lock
xchg
push
add
add
or
xor
adc
lods
int3
xor
add
rclb
outsl
dec
data16
add
push
add
add
add
jns
add
shlb
add
imul
stos
in
add
popa
mov
push
add
mov
push
add
add
cltd
xor
mov
leave
jnp
or
sbb
scas
xchg
rcr
add
add
adc
test
add
ret
fcmove
lods
imul
add
out
test
sub
cmp
push
add
aam
add
add
mov
add
add
add
jne
mov
xchg
adc
pop
add
mov
inc
out
add
imul
mov
fwait
xor
add
int
fs
call
add
sarl
fimuls
sarl
add
add
arpl
lret
xchg
loopne
add
add
mov
add
or
add
add
add
pop
sbb
cmp
push
cmp
stc
mov
cmpsl
sti
push
add
mov
movsl
mov
pop
lahf
cli
dec
add
test
sti
stos
push
add
js
orl
in
and
je
stc
scas
add
cmpsb
dec
add
add
add
leave
xor
ret
add
sbbl
mov
add
mov
jns
add
dec
add
add
dec
add
inc
add
push
out
fdivrs
add
push
push
loopne
add
xor
fisttpl
aaa
in
pop
add
inc
inc
dec
fsub
cmp
push
inc
inc
lods
add
add
add
mov
dec
add
add
aaa
ljmp
add
insl
jbe
loop
sbb
jno
xchg
popa
imul
data16
dec
or
jae
add
add
and
push
add
roll
addr16
add
add
jo
adc
sahf
shlb
cmp
jo
cld
jp
xor
or
fdivr
imul
out
scas
out
xchg
or
xor
scas
out
in
aas
shlb
pop
cmp
out
add
add
in
mov
in
add
add
adc
add
dec
add
push
jge
mov
push
add
add
jmp
stos
mov
add
xor
add
xor
inc
sar
add
add
add
das
out
std
lea
sub
ds
push
add
insb
add
add
add
out
out
or
mov
popf
test
insl
mov
add
add
inc
push
push
test
xor
add
cltd
mov
flds
jb
cmpsl
sub
das
subl
outsl
mov
add
add
xor
lret
in
movsb
jmp
add
mov
mov
cmpsl
or
xor
pop
push
add
push
sbb
repz
and
int
cmpsl
pop
jecxz
push
add
add
ret
jmp
jge
add
cmp
dec
add
pop
push
add
imul
andb
xchg
push
popa
lret
nop
add
adc
stc
shlb
mov
cld
jl
xchg
inc
inc
and
lods
les
inc
add
lock
leave
insb
add
inc
add
lods
add
add
ja
jle
movsl
xchg
jge
fcoms
lods
movsl
in
add
jo
inc
add
add
mov
or
cmp
test
add
mov
add
jmp
add
adc
test
inc
aam
cmp
iret
add
bound
sbb
xchg
cltd
add
fidivl
pop
add
js
and
movsb
jge
mov
jmp
sbb
sbb
add
mov
add
xchg
daa
test
add
add
ror
mov
xor
mov
add
add
and
jnp
and
fwait
mov
lahf
fistpll
mov
mov
leave
loope
add
cmp
dec
add
lret
popa
xchg
mov
and
shll
jns
add
xchg
sbb
imul
add
cmp
push
add
pop
add
shl
add
sbb
leave
aam
lods
ds
sub
int3
inc
pop
stos
scas
pop
int
mov
dec
add
sbb
add
and
mov
jb
gs
add
jbe
mov
add
lods
inc
add
mov
lret
add
cwtl
cmpsb
sub
and
lods
arpl
in
add
push
jae
cmc
pushf
mov
rcll
dec
js
aas
or
cmovns
push
add
mov
mov
add
add
cmp
enter
mov
jmp
dec
add
outsl
pushf
fimull
add
idivb
hlt
xchg
add
lcall
scas
aam
repnz
data16
pop
adc
dec
arpl
inc
add
sbb
or
mov
add
shlb
je
and
pop
ljmp
add
xchg
mov
mov
inc
fsubs
orb
jl
fldl
dec
push
add
add
ret
rclb
or
cmpsl
ret
add
jge
mov
add
adc
dec
add
cmp
or
scas
mov
pusha
add
or
imul
fmull
out
test
fbld
dec
add
rcl
lret
mov
xchg
jno
imul
adc
add
add
and
add
cli
cmp
inc
pop
cwtl
lahf
clc
rol
ja
add
add
jo
mov
xchg
incl
pop
add
in
shrl
mov
push
pop
add
add
xchg
fistl
cltd
adc
in
movb
add
cmp
xchg
int3
jl
bound
push
add
push
add
sbb
or
push
add
add
out
add
shrl
mov
cmp
pop
popl
fsubs
mov
jne
mov
add
bnd
dec
cld
or
inc
pop
test
xor
dec
add
out
fisubrl
cmpsl
cmp
dec
add
add
arpl
push
add
sti
xor
add
lret
mov
lods
in
das
and
js
push
add
dec
add
call
inc
or
mov
xorl
das
das
out
mov
shll
in
push
push
add
xchg
sar
cmc
mov
sbb
je
cmp
pop
enter
popa
jnp
xor
mov
add
add
lcall
add
stos
mov
dec
add
nop
push
push
add
ret
int3
adc
add
and
add
hlt
mov
popf
and
std
ficoml
add
or
add
xor
test
pusha
add
lret
inc
add
xchg
jle
adc
add
pop
add
xchg
test
cld
cmc
leave
test
outsb
add
pushf
xor
sahf
and
add
sub
inc
add
jle
cmp
dec
add
jbe
pop
or
rclb
xchg
stos
in
mov
jg
sbbl
lea
subl
add
add
inc
add
sbb
pushf
and
xchg
loope
jecxz
pop
add
jbe
inc
add
lock
push
add
cmp
cmp
mov
xchg
movq
fmull
cmpsb
cmpsl
rclb
add
dec
add
add
sar
fistpl
cmp
in
popa
and
and
iret
mov
cmpsb
sub
mov
mov
add
mov
add
add
sbb
lea
mov
ljmp
add
jge
in
add
movsl
mov
add
add
add
add
mov
pop
aad
jne
cmp
cmpsb
push
add
add
push
add
mov
add
sub
fdivr
xchg
cmpb
cmp
add
aaa
sub
mov
add
push
add
add
and
add
mov
and
cmpsl
dec
dec
fdivrp
testb
jp
jnp
jecxz
pop
jo
popa
daa
cmp
sub
test
push
add
mov
mov
add
pop
add
xchg
jmp
sub
and
xchg
scas
push
add
lcall
push
aaa
jae
add
jns
popf
movsl
out
fsubs
add
add
add
adc
outsb
add
add
pop
add
sahf
cmp
sub
and
xor
add
dec
add
mov
add
sub
ret
jge
in
dec
add
das
iret
or
div
call
xchg
sti
test
andb
fistps
add
push
push
add
dec
add
icebp
outsb
add
aaa
xchg
fnstsw
jb
lret
and
xchg
push
cmpb
xchg
dec
je
lds
push
add
popf
add
inc
pusha
add
sbb
pop
add
shrl
xor
push
jno
cld
pop
fucomi
pop
add
mov
add
std
pop
add
mov
add
add
inc
inc
add
add
cmp
sub
icebp
cmpsb
popa
fcoml
jmp
nop
jo
je
ffreep
xchg
add
repz
rcrl
add
cmp
in
sub
xor
cmp
sbb
rcr
lea
mov
add
jns
or
cmp
fiaddl
add
add
add
loop
add
data16
rclb
add
inc
cmp
aam
mov
adc
and
insl
xor
fwait
and
je
sti
cwtl
sub
mov
jnp
add
push
add
out
adc
add
pop
add
lret
ljmp
xchg
push
add
add
add
cltd
mov
add
cmp
add
add
xchg
push
add
add
inc
add
add
add
add
add
data16
add
test
add
add
add
push
add
mov
sbb
push
loopne
add
mov
xor
push
add
add
add
push
add
add
or
mov
dec
add
sarl
mov
mov
jbe
repnz
mov
in
jne
add
add
pusha
add
push
pop
add
push
add
icebp
push
add
out
jg
pop
dec
pop
add
into
adc
shlb
xchg
adc
aad
push
add
data16
lds
add
outsb
add
add
mov
fadds
add
movsl
clc
inc
out
leave
cmpsb
push
add
js
or
in
mov
or
push
sub
add
je
or
loop
add
pop
mov
add
or
xchg
jbe
int
dec
cmp
xchg
mov
add
lret
cmc
cmp
fldenv
jecxz
push
imull
add
xchg
xor
dec
sub
mov
lods
ret
test
sub
dec
add
mov
pop
add
mov
add
add
loopne
adc
daa
subb
imull
mov
add
mov
fwait
lret
xor
push
add
add
add
repnz
repnz
popf
xchg
adc
pop
jge
add
jb
add
popf
mov
and
push
add
into
fsubs
add
shlb
sub
test
pop
movl
push
pushf
cwtl
push
add
add
hlt
out
add
fdivl
out
push
add
mov
xchg
lods
out
cmpsb
add
add
test
lea
int3
mov
mov
sub
scas
add
add
or
outsl
sub
mov
daa
add
xor
add
pop
add
add
xchg
test
add
xchg
sub
in
add
int
pop
add
fsubl
add
xchg
sahf
xchg
sub
add
add
add
lods
xchg
mov
add
add
add
and
inc
add
test
add
xchg
mov
in
cmp
mov
iret
cld
mov
push
add
pop
add
add
loop
f2xm1
or
out
add
mov
je
and
dec
add
add
std
xor
fwait
xchg
xlat
and
test
fnstcw
in
pushl
add
test
aaa
icebp
ja
pop
add
addr16
add
dec
add
jno
fisubrs
mov
push
add
aas
jno
add
or
test
or
sub
xlat
push
add
push
push
add
xor
add
movb
cltd
mov
add
dec
add
xchg
inc
add
into
test
add
ja
adc
mov
xorb
mov
add
popa
test
mov
add
add
cmp
scas
lcall
mov
ds
mov
int3
mov
cmp
sub
add
cmp
jmp
out
outsl
add
stc
mov
idiv
and
jg
jp
rcrb
pop
mov
iret
test
cmp
in
out
sbb
jge
ret
adc
add
mov
in
lret
dec
add
jmp
lret
add
add
add
adc
add
add
add
fildll
cmp
cli
xchg
sub
shrb
add
adc
add
pusha
add
fwait
mov
add
aas
add
add
lret
push
int
gs
popf
cmp
push
cmpsl
cmp
xchg
fyl2xp1
or
stc
mov
add
pop
add
movsb
pop
out
mov
nop
mov
push
add
popa
call
aad
mov
pushf
dec
fcmovnbe
jmp
ljmp
lock
and
pusha
add
loopne
and
das
xor
rclb
das
pop
mov
pop
add
call
push
mov
add
or
xchg
and
inc
add
add
imul
bound
test
addr16
pop
add
sarb
cmp
add
cmpsl
add
test
inc
add
dec
add
add
mov
das
ja
pop
nop
inc
add
rcr
sbbl
pushf
cld
leave
repnz
ss
sbb
jae
popa
xchg
mov
add
add
adcb
scas
sbb
fistpll
and
fdivl
movl
imull
add
add
add
xor
ja
stc
cmp
push
add
fsub
outsl
orl
add
push
sub
cmc
push
add
in
xor
lods
rcrl
add
cwtl
inc
add
jo
dec
add
dec
add
add
lcall
outsl
outsl
lods
jmp
inc
add
pop
add
add
jnp
xor
add
mov
arpl
cmp
and
add
mov
add
mov
add
mov
clc
sub
cmp
xchg
fldl
add
insb
add
push
add
add
or
dec
jb
fldcw
scas
add
sbb
lret
mov
cmpsb
cmp
push
add
pop
or
std
jno
in
lea
jecxz
hlt
add
bound
xchg
rcrb
divl
mov
nop
jl
out
mov
add
add
mov
inc
add
add
jno
push
add
adc
add
add
add
sub
dec
sahf
push
cmpsb
shrl
into
in
push
add
cmp
ljmp
inc
adc
add
add
pop
mov
adc
pushf
push
add
data16
fidivrl
mov
pop
add
jbe
xchg
lret
icebp
mov
lock
push
add
add
insb
add
jno
sub
pop
ret
inc
sub
icebp
adc
add
add
jle
xor
add
add
lret
stc
push
lods
shl
push
add
jae
adc
cld
out
and
popf
xchg
mov
je
lds
add
sbb
icebp
xchg
cld
jmp
stos
or
bound
push
add
jge
add
outsb
add
add
add
pop
std
or
divl
repnz
dec
jbe
insb
add
add
test
lods
cmpsl
in
pop
add
cmc
mov
push
add
add
add
insl
mov
gs
add
add
out
adc
push
add
jae
outsb
add
add
add
add
mov
cmpsb
aad
inc
add
cld
outsb
add
in
add
lds
add
cmp
and
inc
add
call
mov
mov
cmp
insl
mov
push
add
xor
lret
bound
mov
js
shrl
pop
fisttps
lea
dec
ljmp
test
sbb
mov
cmp
jl
iret
movsl
stos
test
lahf
push
add
add
adc
push
add
mov
das
clc
lock
fstpt
std
push
jns
andl
and
and
aad
push
add
push
add
cld
mov
add
fidivs
shll
add
add
movsb
cmc
jnp
add
out
xor
js
fbld
leave
insb
add
add
push
add
daa
inc
add
ret
sahf
mov
rcll
sub
pop
add
cmp
mov
inc
pop
push
xchg
hlt
lahf
jo
aas
out
in
jge
dec
add
add
xchg
xchg
loopne
addr16
mov
mov
add
pop
add
repz
add
into
mov
icebp
scas
ret
cltd
mov
rolb
add
push
add
add
add
dec
mov
adc
push
add
adc
mov
add
subb
or
mov
test
sar
jle
add
adc
cmp
jmp
popa
addb
add
cmpsl
arpl
loopne
push
pop
ljmp
xor
add
add
add
mov
jmp
mov
pmullw
lds
and
pop
add
andl
adc
cmp
cltd
sub
cmpsl
in
mov
add
data16
add
into
add
int
shll
add
xor
cmp
out
add
or
add
mov
or
outsb
add
add
lret
add
add
add
dec
add
push
pusha
add
adc
and
inc
push
outsl
imul
add
lcall
stos
ret
dec
out
jnp
jecxz
jb
fs
test
add
or
add
or
add
cmc
loopne
in
pop
add
inc
add
mov
add
push
in
xor
outsb
add
add
pop
test
outsb
add
add
rcrb
mov
xor
aas
and
mov
jnp
lea
adc
push
add
jmp
ljmp
jo
fdivr
jp
mov
fdivrs
pop
mov
pop
add
add
setae
lret
add
sbb
sbbl
jb
xchg
cmp
cmpsl
in
mov
xor
js
push
sub
or
das
mov
pop
add
jno
xor
jo
jp
pop
arpl
rsqrtps
dec
add
xor
sbb
add
xchg
test
inc
add
mov
into
std
mov
jns
jb
test
mov
inc
adc
loope
pop
add
movsl
imul
inc
jo
xchg
fisubrs
and
test
cltd
cmp
cmpsb
push
mov
fcmovb
mov
add
leave
add
add
jb
cmp
add
add
mov
add
idivl
mov
imul
cmpsb
inc
xchg
je
hlt
add
clc
inc
add
add
and
mov
jbe
int
dec
add
movsb
shr
mov
jg
int
cmpl
jmp
cld
ret
pushf
addr16
or
jb
mov
add
in
push
add
xchg
addr16
add
inc
sahf
popa
lret
xchg
add
call
add
add
iret
ja
push
cmp
jo
loope
cs
mov
add
inc
add
add
xchg
gs
add
sub
int3
dec
add
xor
mov
add
iret
push
add
dec
stc
shlb
and
jb
sbb
iret
mov
int
dec
add
add
mov
test
ficoms
mov
add
add
shll
clc
pop
sbb
mov
out
mov
mov
jo
lret
out
add
jne
xchg
and
ror
cld
or
mov
jmp
repnz
leave
fs
sbb
stos
movl
std
add
add
adc
add
mov
movsb
fnstsw
lds
movsl
push
jno
add
inc
add
aaa
scas
mov
mov
popf
cmp
cltd
mov
sbb
jo
aas
outsl
pop
jl
push
add
out
add
add
jge
add
je
xchg
xchg
mov
or
add
mov
adc
push
add
aaa
loopne
jmp
add
cmc
jnp
pop
add
mov
mov
push
movsb
and
aas
cli
cmp
arpl
cld
sbb
inc
add
cmpb
add
aad
subl
mov
pop
lods
pop
or
stc
lods
out
fmuls
xchg
mov
les
xchg
push
add
je
cmp
repz
pop
in
lahf
or
shrl
jne
xchg
sbb
and
cld
jb
or
cltd
mov
push
fcompl
mov
push
add
mov
add
add
cmp
xor
add
sub
ficoms
jmp
jae
add
add
fwait
rcrb
xor
dec
enter
mov
inc
cld
or
pop
add
test
push
add
push
std
rcrl
add
leave
stos
aad
sbb
icebp
or
push
add
ror
divb
ret
shl
xor
mov
inc
xor
lods
shlb
add
add
mov
pop
add
or
dec
add
repnz
jae
add
mov
inc
add
inc
xor
push
add
imul
add
test
add
add
lcall
dec
add
lcall
popa
cmp
cmp
sbb
or
inc
test
adc
push
add
mov
push
mov
cli
lods
in
add
mov
iret
xchg
fmuls
xchg
pop
repz
add
fwait
aad
pop
add
lcall
leave
fisubrs
mov
add
into
test
mov
dec
add
add
jp
xor
neg
and
add
sbb
push
add
cmp
aaa
outsl
sbb
lds
mov
jne
add
imul
mov
lcall
movsl
add
stos
add
enter
add
stos
aad
add
add
testl
add
lret
add
mov
xlat
xlat
add
xchg
dec
mov
push
lds
add
cld
xchg
scas
pop
adc
pop
add
imul
add
jbe
leave
pop
cmc
ds
pop
add
add
add
xchg
aam
test
add
inc
test
mov
push
jns
cltd
lods
aaa
or
subl
add
je
xor
movsl
les
dec
add
xor
lret
push
add
lds
add
add
lahf
mov
arpl
add
ja
js
mov
add
adc
sbb
lods
mov
sbb
sub
adc
fstpt
add
adc
fdivrl
cld
push
loope
or
inc
fsubp
mov
adc
add
aad
add
add
pop
cmp
dec
decb
jno
add
push
add
lret
sub
cld
adc
jne
arpl
dec
push
add
les
js
insl
in
cltd
push
movsl
jne
fstl
add
stc
fwait
outsl
cmp
and
add
inc
push
cmp
gs
adcb
jno
push
add
sbb
add
jnp
adc
gs
out
adc
dec
add
add
fadds
stos
addr16
xorb
mov
in
jmp
aad
outsb
add
or
push
pop
bound
add
repz
mov
push
add
popa
add
mov
mov
mov
and
test
add
jmp
pop
add
xor
popf
mov
inc
add
add
mov
add
pop
mov
fmul
into
call
xchg
lahf
movsl
addb
lret
repz
and
xor
testb
add
stc
popf
stos
fwait
loopne
or
jp
xor
bound
inc
dec
cmpb
ret
out
push
sub
bound
js
pushl
inc
push
loop
xchg
add
cwtl
out
pop
xor
mov
sbb
sub
add
add
mov
or
scas
xchg
jns
xor
and
int3
xchg
jae
imul
hlt
pushf
push
add
sbb
mov
call
loop
roll
into
ret
add
imul
mov
sti
jo
inc
add
add
adc
lsl
jl
iret
sti
sbb
inc
mov
jecxz
pushf
pop
mov
xchg
jmp
mov
in
add
add
jmp
sahf
cmp
and
add
add
ret
int
mov
sti
lahf
jmp
lea
call
or
jns
inc
add
cmp
cld
jne
add
sahf
add
add
xor
adc
aaa
mov
add
enter
and
lcall
cmp
xor
push
mov
add
inc
add
add
mov
rol
into
pop
pop
ljmp
inc
xor
jle
jge
movsb
add
mov
push
fs
push
mov
add
sub
add
add
jbe
push
add
xchg
mov
mov
add
scas
test
and
pop
rorb
jnp
lods
sub
flds
pop
add
cmc
out
clc
mov
add
xchg
or
add
mov
pop
insl
scas
cmp
mov
add
add
mov
jno
add
xchg
fldt
call
pop
add
jne
mov
fnstenv
lahf
enter
add
sahf
test
xchg
add
loope
data16
iret
jge
sub
push
adc
push
add
pusha
add
add
mov
leave
cmp
adc
aas
mov
loop
mov
subb
in
sub
repnz
out
imulb
sub
dec
lea
and
icebp
aam
add
add
add
or
popf
dec
pusha
add
dec
or
add
add
sub
sahf
xchg
and
shll
hlt
jae
sub
pop
add
sbbb
mov
fdivs
addr16
and
call
popa
push
cli
lret
orl
add
movsl
roll
and
or
xchg
add
push
add
add
std
add
push
add
jle
lcall
mov
dec
add
mov
sbb
or
aas
jno
cmp
mov
movsb
fsubrl
pop
add
fwait
andb
rcll
xchg
pop
cmc
movsb
cmpsb
mov
data16
lahf
lret
push
in
std
push
add
inc
jecxz
add
mov
sub
push
add
add
add
push
mov
add
jp
cld
into
inc
inc
lret
add
xor
add
sbb
imull
add
sub
pop
call
push
add
out
ja
fcmovnbe
out
lret
enter
push
add
pop
inc
add
add
jg
xor
jge
add
pop
fidivrs
lret
lret
test
pop
ret
lcall
pop
dec
add
call
add
lret
add
inc
shr
add
jnp
lahf
mov
stc
shlb
xor
daa
xor
pop
sti
sbb
xchg
jmp
mov
adc
dec
repnz
loop
icebp
hlt
andl
push
add
cmp
clc
in
dec
sar
into
out
and
int
ja
add
out
sbb
jnp
inc
stos
xor
arpl
add
jecxz
add
add
imul
stos
xor
add
mov
pop
adc
js
inc
add
inc
pop
lret
sub
inc
loope
hlt
enter
add
scas
and
fadd
add
add
sbb
pop
add
outsb
add
sahf
jae
add
push
add
ljmp
loop
in
inc
add
ret
mov
and
add
add
add
lahf
cmp
sub
jle
mov
mov
pop
add
test
mov
xorps
xlat
sbb
add
pop
fdivl
hlt
scas
aam
push
fsubrs
imul
add
sub
cmpsl
mov
sub
leave
push
ja
xlat
sub
add
call
pop
add
in
push
add
mull
xor
push
add
or
add
add
xor
imul
mov
rorl
push
add
push
shr
hlt
fdivrl
push
add
cmp
add
inc
fimull
aaa
xchg
push
add
dec
add
arpl
push
add
cmp
push
add
add
push
add
mov
adc
xlat
or
int3
and
add
clc
sbb
js
sbb
cmp
add
mov
ja
out
add
int3
mov
sbb
dec
add
xor
add
das
xor
popa
pop
das
mov
out
outsb
add
repz
add
mov
add
add
cwtl
push
add
pop
lods
test
or
add
cld
icebp
scas
ret
add
add
add
add
jns
movups
mov
jl
jns
dec
add
fsts
add
into
outsl
stos
jnp
imul
or
fildl
push
add
sub
leave
loope
pop
and
mov
mov
add
add
sbb
mov
add
add
add
push
add
inc
jecxz
add
pop
lcall
loop
cmpsb
movlps
xlat
push
push
jnp
add
call
je
fwait
loop
add
add
cmp
or
lods
and
jo
imul
push
add
adc
mov
movsl
and
add
enter
adcl
and
or
add
shlb
call
xlat
adc
cmp
add
fistps
cmp
stc
popf
sti
mov
add
xorb
jnp
jo
es
or
sbb
pop
jg
or
popa
js
pop
dec
pop
pop
inc
add
dec
add
mov
add
mov
adc
aaa
rcl
rorb
add
pop
inc
add
fmuls
mov
bnd
xchg
inc
arpl
mov
scas
push
loope
add
xor
jl
inc
add
cmp
das
pusha
add
sbb
rcrb
data16
add
add
loope
add
ret
and
mov
add
cli
jecxz
add
mov
add
add
scas
int
add
les
adc
in
pop
cmp
mov
iret
push
dec
int
add
in
pushf
bound
cmp
add
add
out
cmp
add
imul
fdivl
add
ss
outsb
add
or
sbb
into
jecxz
xchg
jns
je
pusha
add
pushf
push
add
pop
add
in
cmp
test
xchg
loope
das
out
mov
add
sbb
nopl
add
jne
pusha
add
add
mov
sbb
push
cltd
out
movsb
push
add
jnp
add
mov
add
push
add
fnstenv
push
add
add
xchg
sub
push
add
shl
test
add
dec
inc
sub
push
scas
popa
outsb
add
repnz
push
pop
mov
leave
fldenv
lds
add
mov
pop
add
push
cmp
lret
mov
mov
add
sbb
shll
jle
dec
add
sub
clc
jno
fdivs
add
cltd
ja
fimull
inc
add
insl
icebp
cli
pushf
ffree
test
mov
add
add
shrb
add
xchg
cltd
dec
cltd
lret
dec
add
dec
add
pop
lods
xor
add
add
xor
cmp
sub
call
xlat
dec
cmpsl
dec
xchg
cmc
dec
cmpsb
inc
mov
add
jl
pop
xchg
test
push
add
inc
jg
jg
add
enter
add
div
mov
mov
movsl
test
enter
fidivrs
cld
mov
add
adc
add
add
ret
gs
inc
add
inc
cmp
sub
add
scas
fidivrs
stc
pop
sbb
jmp
lods
je
adc
mov
mov
rorl
xchg
std
mov
cmp
arpl
inc
add
mov
add
sbbl
popf
or
subb
ljmp
add
bound
pop
add
pop
xchg
hlt
loopne
adc
inc
inc
add
lea
fcmovb
dec
gs
add
xchg
ja
pop
sbb
mov
popf
xchg
aaa
sub
fwait
add
stos
jle
mov
add
scas
xchg
test
addr16
enter
add
jecxz
adc
xchg
mov
add
xchg
or
jae
dec
popf
and
icebp
and
sub
jne
mull
xor
mov
rcrl
addr16
add
mov
jge
add
adc
add
rorb
mov
addl
adc
int
je
mov
or
add
add
sti
xor
mov
xchg
iret
les
into
imull
fstl
add
and
xchg
push
add
add
mov
inc
add
add
mov
pop
add
scas
pusha
add
dec
mov
jbe
sti
add
ja
xor
ret
outsl
hlt
mov
imul
cmpsb
stc
mov
sbbb
push
add
mov
pop
add
or
imul
dec
pushf
ret
fistl
int
cmp
pushf
jae
add
add
add
mov
push
mov
testl
push
stos
xchg
sbb
and
fcomps
add
pop
add
in
add
xlat
or
add
jb
test
leave
jl
test
add
dec
add
sub
mov
sub
stos
jnp
add
mov
add
push
add
test
bound
pop
loopne
addr16
add
stos
fwait
pop
cmp
dec
cmp
mov
add
cmc
in
jl
aas
add
or
add
add
sub
icebp
bound
ret
xlat
push
add
add
dec
add
pop
cld
xlat
ficomps
add
inc
add
fsts
jecxz
and
xlat
sub
pop
push
xchg
je
out
push
add
xchg
add
bound
mov
clc
jne
add
movsb
or
test
add
aaa
or
scas
sahf
jp
pop
add
sub
jbe
cld
xchg
dec
xchg
push
add
add
push
add
add
popa
ficompl
add
add
out
jo
and
sahf
ljmp
add
push
xor
push
add
stc
mov
add
jge
add
pop
or
add
test
add
shlb
add
dec
mov
pop
add
mov
dec
pop
add
adc
push
add
ds
into
lahf
leave
jp
lea
ficomps
movq
and
sub
repz
incl
mov
sub
push
lods
bound
fsubl
push
push
push
sub
scas
aaa
add
fwait
hlt
sbb
add
add
out
dec
loope
mov
add
inc
add
xor
push
push
xchg
add
mov
add
sub
cmpsb
mov
jl
icebp
mov
mov
add
adc
lock
add
add
inc
add
fcoms
add
jecxz
add
out
sub
cld
les
xchg
add
popa
xlat
outsl
cmp
add
das
dec
ja
inc
adc
jmp
bound
dec
add
add
aas
adc
add
jge
scas
int
cli
lret
arpl
cmp
data16
add
cwtl
pop
inc
jne
popa
adc
leave
mov
mov
dec
call
xchg
fcmovu
sarl
addr16
push
sbb
es
out
imul
div
dec
mov
aam
push
mov
add
add
inc
add
mov
std
outsl
mov
mov
lock
mov
xchg
add
xchg
adc
xchg
dec
add
jecxz
mov
add
or
jecxz
and
incl
xchg
or
cmpsl
jmp
sub
lods
mov
add
add
adc
lds
add
pop
mov
add
call
fisttps
je
mov
fwait
sbb
push
out
add
push
adcl
cmp
jnp
int
je
pop
jmp
call
test
ficoms
add
inc
add
dec
clc
sarl
pop
sub
cltd
iret
pop
out
cmp
xchg
add
add
pushf
dec
add
add
jl
lcall
loop
int3
mov
das
cmp
xor
testb
add
cld
sbb
push
add
add
add
cmp
sub
and
inc
xchg
roll
add
insl
jo
repz
mov
or
into
jae
dec
push
scas
cmp
sub
daa
cld
xchg
hlt
out
out
jno
or
add
add
cmpsl
addr16
lea
int3
add
leave
iret
pop
add
inc
add
fcompl
add
call
shl
pop
xchg
dec
push
add
clc
mov
inc
add
lods
in
hlt
insl
ja
add
and
adc
add
cmc
cmp
sbb
xor
addr16
clc
repnz
add
ret
cmpsb
pop
in
out
add
loope
add
adc
add
popf
iret
loop
add
enter
add
push
add
xor
lds
sbb
mov
mov
push
out
cmp
hlt
lcall
out
cli
push
loope
add
sbb
testb
addb
fiaddl
out
lds
or
pusha
add
int
ret
add
pusha
add
sub
add
mov
pop
add
add
dec
add
jmp
testb
bound
add
mov
seta
add
in
mov
add
push
add
popf
sub
push
xchg
add
xchg
repz
in
inc
add
add
mov
add
rorb
sub
push
and
mov
xchg
jbe
xor
pop
add
and
sub
jp
negb
into
dec
add
mov
out
inc
add
add
xor
jp
add
and
jae
in
jp
aas
dec
mov
adc
clc
or
loop
add
mov
loope
add
add
sbb
mov
lds
imul
xchg
dec
sub
sub
and
jb
cmc
pop
pop
add
pushf
cmpsb
stos
mov
in
enter
dec
ret
xor
and
add
fwait
sub
jmp
or
push
add
xor
je
sbb
push
xchg
arpl
jo
mov
inc
sbb
cmp
test
mov
dec
add
nop
hlt
xchg
adc
add
stos
arpl
push
xchg
or
push
add
inc
clc
call
and
data16
mov
add
in
pop
add
jnp
pusha
add
fmulp
repz
jl
lcall
insl
cmpsb
insb
add
push
add
adc
or
and
pop
in
aas
jae
lods
rcl
stos
insl
loope
jp
cmp
mov
add
add
add
and
shl
mov
cli
xor
xchg
ret
ljmp
sbb
sub
call
and
movsb
mov
pop
add
push
add
add
add
add
xchg
imul
int3
outsb
add
add
add
ja
add
cwtl
dec
add
add
mov
sahf
dec
add
cmc
loop
add
pop
add
add
add
insb
add
or
add
add
add
mov
add
add
jne
shrl
gs
add
inc
jno
sarl
test
inc
or
hlt
mov
data16
add
mov
data16
sbb
data16
movups
roll
inc
add
outsb
add
add
add
data16
dec
add
add
sub
loopne
std
pop
jae
add
data16
in
sub
lods
jne
lock
mov
data16
inc
add
jg
xchg
lods
fsubl
add
add
ljmp
jae
inc
add
lock
add
dec
cmc
das
decl
data16
inc
add
and
add
add
js
add
add
pop
add
lret
jl
push
add
add
xchg
lret
rolb
lret
mov
jbe
jnp
ret
sub
add
add
add
add
xor
jns
jb
xchg
je
movsl
call
aas
inc
dec
add
xchg
aas
xchg
mov
push
add
fsubrs
add
nop
test
add
lahf
add
sarl
movsl
pushf
sub
push
add
fnstenv
in
or
add
xchg
repnz
cmp
mov
pop
sub
or
loop
stos
sub
lock
movsl
cmc
pop
shll
add
and
mov
adc
mov
andb
test
mov
orb
data16
mov
lcall
addr16
xchg
ret
lahf
ror
dec
inc
add
or
loop
add
divl
mov
add
das
cmp
sti
and
cmp
fsubl
aad
iret
in
lods
mov
add
add
mov
add
test
push
add
xor
pop
mov
add
test
jmp
add
add
test
das
pop
add
pop
add
sub
insb
add
add
add
lahf
add
inc
mov
lcall
add
add
xchg
in
sub
popa
xchg
dec
add
xchg
shlb
add
sti
mov
mov
movsl
pop
push
sbb
outsl
in
lea
xchg
xchg
push
fbstp
add
cs
push
add
add
inc
add
and
push
add
pusha
add
add
xlat
sbb
xchg
hlt
gs
nop
or
add
fidivl
sub
and
imul
add
add
add
les
add
int3
je
insl
loope
loope
in
daa
mov
roll
cmp
jmp
inc
add
daa
and
jg
mov
jno
aad
adc
addr16
add
and
mov
jo
cmpsb
adc
sbb
add
mov
push
stos
jmp
add
outsb
add
push
pushf
enter
xor
in
sub
add
sbb
jbe
cmp
push
jg
jno
mov
xchg
icebp
movsb
negl
jg
cli
aam
daa
mov
test
ljmp
xchg
xor
inc
mov
js
jns
inc
inc
data16
add
sbb
daa
jnp
add
aaa
sub
add
add
rorl
jb
fmull
add
shrd
movsl
xchg
les
add
mov
add
shr
and
or
loope
add
stos
inc
add
and
fstps
cmc
cmpsl
mov
call
push
imul
xor
movl
fisttpll
in
stos
cmp
movsb
test
add
xchg
jecxz
adc
mov
push
sbb
fstl
lret
stc
pop
add
xor
dec
negb
add
mov
add
mov
cli
push
inc
imul
add
vcvtsi2sdl
cmp
mov
dec
idiv
mov
and
add
cmp
xchg
jl
movsl
scas
jo
fbld
mov
call
add
add
add
cmp
mov
or
jnp
lahf
dec
add
mov
add
add
outsb
add
hlt
daa
or
mov
fwait
mov
mov
ficompl
test
sbb
jp
in
sub
mov
adc
push
add
add
mov
add
add
es
push
sbb
add
xchg
add
fadds
add
push
add
mov
mov
adc
inc
add
lret
leave
adc
inc
gs
clc
push
add
lods
cld
sub
sahf
mov
xor
inc
add
scas
push
add
xchg
iret
push
xchg
hlt
cmp
out
mov
add
add
in
lock
inc
add
push
repnz
in
cmpsb
xor
bound
mov
add
fcmovne
cmp
data16
fnstsw
push
fstl
inc
add
sub
add
add
add
cmp
dec
add
mov
jno
cld
push
xchg
fnsave
add
xlat
aam
xchg
jne
dec
add
inc
add
movsb
xor
mov
add
nop
mov
add
sub
or
inc
lock
xchg
jno
add
mov
push
xorb
les
and
add
xor
std
cld
ret
inc
add
add
push
add
pop
or
add
hlt
pop
dec
add
dec
add
loop
mov
xlat
mov
rcrb
int
add
jmp
imul
mov
xchg
out
in
ja
cmp
inc
push
xor
in
sbb
or
dec
xor
pop
call
pusha
add
test
aad
jno
orb
add
movsb
push
add
loopne
addb
popa
je
xchg
and
test
push
add
add
xchg
xor
cwtl
movsl
mov
mov
add
sti
add
mov
mov
inc
add
add
test
add
add
jns
xor
cmp
pop
add
add
and
add
add
fstl
add
les
inc
sub
loop
mov
jl
push
add
and
add
lret
add
dec
add
lods
add
pop
add
add
add
fisubs
add
xor
jns
xchg
pop
dec
inc
add
out
fdivr
fnstcw
add
add
add
pop
jmp
inc
and
pop
add
daa
les
add
xor
xchg
or
stos
clc
lock
add
stc
std
pop
add
sub
cmp
lahf
lret
sub
cld
sbb
xor
mov
mov
je
lret
jg
dec
pop
cwtl
lea
add
inc
cwtl
lret
sbb
push
add
add
test
sub
push
add
enter
sahf
data16
fdivs
lret
mov
add
loope
mov
sahf
cld
pop
add
xor
add
and
les
out
imul
aas
xchg
lods
aas
ss
fnsave
inc
add
dec
add
out
xchg
fbld
mov
popa
push
add
dec
add
out
cltd
lret
shlb
push
data16
adc
ljmp
add
aaa
jecxz
shlb
mov
add
add
cmc
xchg
insl
pop
add
add
hlt
aas
xchg
mov
mov
dec
add
pop
cld
jae
cmp
push
add
insl
sub
fimuls
xchg
cmp
pop
cs
pop
lret
add
out
cli
inc
or
repnz
cmp
jp
and
mov
push
mov
int
fadd
push
add
and
es
add
clc
and
xchg
pop
add
in
or
or
pop
mov
ja
add
lret
movsbl
decl
push
add
jecxz
out
nop
popa
aad
push
subl
jmp
push
lods
lret
and
ja
sbb
addr16
data16
add
add
add
jb
pop
ret
cmp
out
inc
pushf
lea
pop
push
push
add
add
add
sub
daa
pop
arpl
fisubs
sub
outsb
add
add
add
add
cmp
and
add
data16
push
out
hlt
outsl
dec
pop
aas
and
cmc
push
add
and
sti
sbb
imul
iret
sbb
push
add
dec
mov
leave
xor
in
dec
add
jne
mov
dec
jl
stos
mov
add
sbb
xor
lret
sarb
idiv
shll
or
add
xchg
std
sub
add
emms
jnp
mov
push
add
or
sub
shlb
push
add
imul
add
sub
adc
cmp
into
popa
int3
sbb
sub
pusha
add
cmp
jg
fcoml
addr16
pop
add
int
and
std
xchg
or
mov
jl
push
add
add
std
add
out
sub
aam
add
add
popf
imul
add
jno
add
cltd
bound
mov
lea
imulb
mov
add
clc
fbstp
mov
mov
jg
jne
inc
add
in
jae
add
add
mov
jl
out
cmp
pop
cmp
or
pop
add
loope
add
stos
shl
mov
dec
add
std
push
add
enter
addr16
jo
rcll
add
adc
dec
add
and
in
dec
add
loopne
and
rcrl
shrl
add
mov
add
cmpsb
bound
bound
sub
into
lock
das
jle
enter
lods
cld
data16
xchg
jae
and
xor
fnstenv
movb
or
pushf
mov
add
pop
out
add
add
add
mov
sub
and
mov
data16
adc
mov
mov
in
xchg
mov
lock
cld
pusha
add
mov
add
lea
add
stos
int
add
xchg
sbb
fdivrs
add
nop
pop
add
repz
push
pop
add
jne
insb
add
out
daa
sub
movsb
inc
mov
inc
xchg
lea
nop
iret
lahf
jns
add
xor
push
fadds
mov
cmp
mov
add
dec
stos
insb
add
mov
es
mov
je
xchg
cltd
lods
ljmp
mov
add
push
add
jne
je
push
jp
xchg
adc
fs
mov
pop
add
arpl
call
add
leave
dec
add
add
cmp
in
cmp
cmp
adcb
fmul
add
shll
shrb
inc
add
jno
inc
and
add
popf
pushf
lret
incb
inc
insl
push
add
filds
mov
add
add
dec
add
push
and
cld
pop
sub
je
add
add
aam
aam
stos
pop
add
in
jne
or
pushl
sub
and
imul
pop
add
cld
pop
arpl
lock
aaa
sub
out
xor
pop
cmp
xlat
pushf
push
add
add
pop
add
pop
sub
or
adc
out
es
lock
mov
psubb
clc
leave
call
add
mov
sub
in
dec
add
jmp
adc
jecxz
sarl
decb
jae
add
add
cld
cmp
sbbb
xchg
cwtl
out
xchg
xchg
jl
push
add
xchg
hlt
jle
ljmp
repz
mov
add
cmp
lods
in
ret
add
add
inc
dec
add
xchg
adcl
xor
push
add
dec
add
repnz
push
add
cmpsl
push
adc
out
xor
pusha
add
mov
fists
aaa
dec
add
xchg
pop
loope
jb
cmp
mov
leave
dec
add
add
mov
sarl
add
movsl
sub
loopne
add
cli
aas
add
sahf
mov
data16
dec
mov
xchg
lcall
sbb
pop
add
adc
add
mov
xor
sbbl
mov
push
add
add
push
lods
outsb
add
jl
cltd
out
je
pop
add
inc
add
out
mov
add
inc
add
lcall
adc
xchg
and
push
add
add
aaa
loopne
push
jno
add
dec
shr
mov
rcll
movsl
les
add
fildl
add
cmp
pop
add
in
push
icebp
ret
aaa
add
cmpsb
test
add
popf
inc
add
std
push
stos
in
mov
popf
nop
mov
mov
and
add
andl
sub
pushf
xlat
sbb
shlb
fldt
jp
or
mov
adc
fcmovb
push
add
pop
add
or
inc
popa
xorb
insl
mov
mov
jno
push
xchg
cmp
cli
insl
cli
outsb
add
mov
xchg
xchg
movsb
xchg
mov
add
lret
sbb
xor
call
mov
sbb
imul
inc
add
inc
imull
add
mov
inc
and
in
push
xor
repz
data16
mov
add
fwait
sub
mov
popf
sbb
sbb
add
test
mov
adc
popf
inc
add
out
add
mov
add
data16
add
cmpsl
cmpb
rcl
aas
push
das
cli
cmpsb
in
add
sbb
pop
add
js
idivl
pop
testl
add
popa
and
fsubrl
add
add
ret
out
add
mov
add
pop
add
add
nop
popf
lock
push
cmp
pop
dec
inc
andb
call
in
mov
clc
xor
fldt
jb
jmp
add
or
dec
fidivs
add
mov
add
ljmp
add
sub
jecxz
pushl
add
je
push
add
lods
shlb
add
xchg
adc
in
add
nop
xor
or
leave
nop
je
jmp
icebp
pop
add
xchg
mov
lods
and
mov
aad
insl
incb
mov
inc
sub
add
loope
stos
pop
add
dec
add
lods
mov
mov
fucom
mov
mov
inc
add
add
push
add
in
pop
scas
jmp
push
add
add
xchg
hlt
dec
push
add
mov
mov
inc
add
test
cmpsl
pop
jns
outsb
add
repnz
add
add
shlb
add
sub
cwtl
dec
dec
aam
add
or
add
pop
add
mov
or
push
add
loopne
add
sbb
push
add
add
lods
adc
loope
jae
push
add
je
cmp
mov
sbb
int
add
stos
sub
mov
fldenv
sarl
out
add
push
sbb
ret
int
mov
add
popa
xlat
inc
add
add
inc
add
mov
add
leave
add
fistpll
out
les
jo
cmp
test
push
pop
jmp
pusha
add
add
enter
bound
push
add
pop
call
movsb
fdivrs
add
add
inc
add
mov
test
mov
test
push
iret
inc
add
mov
shrb
pushl
add
cmpb
add
les
inc
add
inc
jo
add
pop
add
fwait
mov
add
stc
das
xor
xchg
xchg
add
add
mov
sub
pop
pop
add
add
sbb
sub
out
xchg
dec
add
lea
inc
add
fwait
pop
or
adcb
cmpsl
xchg
sbb
fcomps
xchg
xor
arpl
add
xorb
jmp
add
mov
ret
jne
jno
and
mov
sbb
testb
les
addr16
shll
add
push
add
add
add
jle
adc
and
pop
out
add
xchg
test
out
jno
sub
inc
add
sub
add
in
inc
movsl
push
adcl
push
mov
aad
add
add
negl
insl
push
add
or
lahf
mov
cmp
loop
add
jns
jnp
out
mov
add
add
add
aam
or
loopne
cmp
mov
push
add
sbb
xor
cmp
push
repz
out
add
add
inc
lret
test
mov
pop
or
add
out
mov
cmp
inc
add
sub
cmpsb
lea
add
hlt
adc
cmc
mov
mov
add
add
or
shll
lea
dec
add
int3
mov
loop
pop
add
add
add
xor
cltd
into
cmp
decl
add
out
xchg
out
rcrl
ss
mov
pusha
add
mov
add
add
xchg
movsl
cltd
add
fsubr
pop
add
push
cmp
add
adc
pop
dec
xor
xchg
push
call
iret
test
dec
add
pushf
pop
data16
add
andl
add
inc
mov
jne
pop
add
aas
insl
fistpll
add
inc
fistpl
add
iret
sahf
xchg
stos
push
fadds
lods
or
add
or
push
cmpsb
mov
add
add
add
pop
or
push
add
ja
add
icebp
data16
or
in
xchg
cmp
mov
int3
dec
mov
shrl
mov
add
pushf
lea
add
xchg
mov
push
add
aad
stos
lock
or
call
add
and
int3
add
in
mov
ljmp
add
subb
mov
ret
lods
pop
add
das
jnp
out
add
or
xor
add
xchg
pusha
add
imul
jp
cwtl
sub
and
bound
xor
push
add
push
push
add
xor
mov
sbb
add
jno
pop
pushf
scas
inc
sub
add
add
sub
int
int
out
push
add
jg
add
push
add
dec
jae
add
add
pop
mov
ljmp
insb
add
or
fldt
push
add
add
add
adc
mov
sbb
add
push
bound
dec
push
add
pop
aaa
pop
add
add
xchg
arpl
add
mov
lcall
add
mov
add
push
add
test
outsl
lods
lret
add
lret
add
nop
lret
das
fnsetpm(287
fiadds
xchg
or
pop
stos
pop
add
push
out
ret
negb
push
mov
lock
push
add
test
aam
repnz
icebp
cmp
icebp
imul
jg
add
mov
add
aas
sbbl
dec
jo
popa
and
loop
inc
div
adc
adc
js
mov
pusha
add
xor
out
sbb
cmp
dec
add
xor
xchg
lock
nop
push
cmp
sbb
add
adc
cmovg
xchg
leave
hlt
lods
int3
dec
mov
addb
mov
sub
popa
pop
add
in
or
popf
sar
fmul
pop
add
add
push
add
dec
insl
les
adc
add
sbb
add
mov
mov
xchg
imul
bound
jmp
add
les
add
push
add
push
add
or
xor
xchg
xchg
xor
dec
add
aam
aam
sub
add
add
xor
rolb
or
insl
mov
out
imul
xchg
push
add
add
pop
xlat
insl
inc
add
add
adc
xchg
add
cld
cmp
sub
xchg
adc
add
dec
inc
inc
add
mov
pop
add
or
mov
add
pop
push
add
add
add
mov
fistpll
jle
shll
sub
add
add
add
addr16
clc
dec
and
push
add
jge
loope
add
jo
cmc
rol
in
or
mov
add
sbb
inc
add
add
add
cld
cmp
cmp
sub
in
add
loopne
cld
mov
inc
push
push
add
js
jecxz
add
push
add
les
xor
push
add
add
clc
cmp
add
push
add
add
aam
add
inc
add
mov
jae
cld
inc
add
add
mov
hlt
cmp
andb
mov
mov
sbb
dec
adc
pop
push
xchg
xorl
add
out
mov
mov
pop
rolb
adc
movups
fstpt
add
mov
jp
dec
add
adc
xor
ret
in
out
fwait
mov
adc
cwtl
dec
add
add
inc
jge
add
call
xchg
sbb
sahf
jmp
add
add
or
std
push
mov
notb
or
add
xchg
mov
aaa
lods
ds
call
icebp
or
mov
add
jmp
loopne
xor
add
int
mov
mov
shll
fists
add
leave
sar
push
add
or
jmp
add
pop
pop
adc
cmp
add
adc
mov
push
add
jge
lret
mov
add
xchg
movsl
xchg
add
cmp
subl
xchg
call
test
sbbb
inc
mov
xor
call
cld
fcomps
lahf
ljmp
dec
add
adc
mov
pop
add
add
add
sub
nop
leave
add
add
popa
rcll
add
mov
add
xor
cmpsb
les
add
mov
add
add
mul
cmp
pop
sbb
jno
lahf
xchg
add
daa
sbb
pop
xchg
xchg
xchg
negb
shrd
loope
lret
pop
add
scas
sahf
push
scas
pop
add
mov
loopne
fldt
ret
adc
add
ja
test
cli
bound
and
xchg
push
jns
jl
or
pop
jbe
lret
inc
icebp
inc
loopne
xor
div
leave
adc
mov
mov
or
add
add
icebp
stc
test
add
cwtl
xchg
push
add
add
insb
add
lods
cmp
pop
add
add
das
sbb
inc
add
add
rcl
in
add
mov
iret
lods
xchg
add
test
subl
add
add
imul
in
lea
add
add
lds
xchg
mov
loop
dec
jl
cltd
dec
mov
fisubl
pop
mov
add
sbb
in
dec
shr
fwait
sub
leave
lret
sarb
add
mov
adc
pop
add
xor
and
and
push
mov
imul
stos
mov
push
add
cmc
clflush
outsl
das
inc
add
daa
std
imul
push
pop
insb
add
add
mov
add
fldt
mov
inc
add
inc
add
lods
ret
inc
add
xor
mov
sbb
loop
dec
add
add
dec
add
insb
add
int3
hlt
add
inc
add
stc
cmp
jbe
jg
cmp
das
sub
push
fcomip
pop
mov
jge
aam
jge
add
add
add
scas
jae
push
add
xchg
ficoml
push
add
mov
xor
sbb
iret
loope
in
xor
sub
sbb
sbbb
add
pusha
add
add
add
mov
pushf
pop
add
mov
add
jnp
add
lds
ljmp
lahf
mov
add
aam
movsl
enter
stos
jmp
ret
in
add
xchg
add
add
leave
or
fnsave
mov
scas
ja
add
inc
push
add
add
xchg
xchg
or
inc
add
add
mov
or
repnz
insb
add
cs
mov
fstpl
push
push
hlt
out
inc
sub
mov
sarb
xchg
jne
test
jecxz
jne
shlb
add
scas
jp
std
xor
lods
mov
fisttpll
mov
cmpsl
in
lahf
add
xor
xlat
xchg
adc
sub
loope
cmp
dec
mov
add
add
add
xchg
mov
add
xchg
fistps
xor
je
int3
inc
add
adc
pop
add
dec
push
add
add
cmp
pop
lcall
lcall
add
jle
lock
pusha
add
add
lea
pop
aad
aam
add
rolb
push
push
add
scas
hlt
fwait
sub
hlt
inc
inc
add
adc
cltd
mov
fcomps
add
ret
xlat
push
add
add
add
add
sahf
icebp
scas
dec
lret
jp
and
push
add
add
dec
add
cmp
xchg
and
clc
movsb
xor
insb
add
cmpsb
repz
push
add
int
mov
test
icebp
ret
mov
push
xchg
into
jb
mov
idivb
and
add
pop
add
popa
js
pop
rcll
mov
leave
int
add
push
add
add
mov
add
add
add
add
std
mov
jmp
or
jle
cmp
adc
mov
sti
test
in
and
out
faddl
lock
dec
add
xchg
adc
jo
scas
int
inc
lret
adc
fdivrl
pop
or
xchg
hlt
or
cmpsl
and
int3
sub
xor
clc
js
sbb
lods
popf
repnz
jne
and
je
pop
add
shll
sbb
mov
cmc
arpl
jne
movsb
sbb
xchg
add
daa
mov
add
shrb
add
gs
pop
mov
add
add
insb
add
push
add
scas
test
leave
pop
mov
adc
inc
add
sbb
js
or
faddl
je
jecxz
add
jae
repz
mov
pop
add
jecxz
add
add
add
sbb
ljmp
add
inc
add
add
fisttpll
loopne
pop
add
add
mov
fmull
add
mov
add
jge
xor
and
mov
pusha
add
inc
add
add
lods
push
add
sbbb
or
add
decl
inc
add
add
cmpsl
jl
pushf
data16
add
sub
mov
cmp
sbb
pop
ja
add
mov
es
loopne
add
add
pop
add
add
and
xchg
inc
iret
add
repnz
arpl
sbb
inc
insl
xor
in
mov
inc
mov
xor
fidivrs
insl
les
and
add
add
lahf
gs
fcompl
cmp
insl
aaa
insl
in
cmpsl
mov
add
add
add
cmpsb
subb
data16
adc
arpl
jge
outsl
xchg
je
movzbl
stos
cld
pop
add
mov
inc
dec
inc
add
in
pop
inc
add
and
loop
push
add
mov
mulb
mov
nop
and
jnp
add
add
shlb
sbb
sub
popf
out
cmp
dec
add
jg
pop
pushf
lcall
in
pop
add
sub
and
add
in
sarb
add
loope
cltd
adc
sbb
data16
sbb
cmpsl
dec
add
add
sub
sarl
pop
add
dec
cmp
xchg
movsl
fwait
mov
xchg
test
adc
scas
adc
mov
add
or
aaa
insb
add
filds
int
orb
xlat
pop
add
add
dec
je
adc
mov
cmc
outsb
add
repnz
sbb
mov
mov
adcl
pop
aaa
add
fucomp
sbb
andb
inc
test
frstor
hlt
out
add
gs
mov
adc
xchg
fstpt
add
ror
push
or
and
rorl
js
mov
dec
scas
and
gs
fucom
mov
add
xchg
aad
test
add
pop
lea
dec
push
push
add
push
add
fimuls
movsb
scas
je
and
and
and
adc
adc
add
add
xchg
cmpsl
lea
mov
mov
add
sbb
push
sbb
mov
pop
ret
mov
mov
mov
add
add
lcall
testb
aas
jge
imul
xlat
popa
pop
sub
push
and
xchg
aas
mov
inc
sub
popf
push
inc
shll
push
lcall
or
xchg
lret
leave
and
push
lret
or
in
and
mov
sahf
xor
imul
or
sarb
lods
push
add
arpl
jnp
add
lret
lds
lcall
add
or
pop
add
add
pop
add
add
add
add
jmp
adc
xor
jbe
rcrb
jo
test
add
out
xchg
jecxz
nop
adc
mov
jno
mov
add
sub
xchg
inc
cmp
mov
ja
mov
and
lds
add
nop
jmp
mov
mov
sarb
add
push
mov
jecxz
add
and
mov
push
add
pop
test
add
cmp
add
divl
add
inc
cmpsl
sub
shll
jmp
xchg
or
push
add
add
add
dec
add
imul
jne
add
notb
fwait
sbb
loope
add
jp
lcall
inc
dec
add
notb
xchg
stos
js
dec
add
cmpsb
lcall
je
call
add
jbe
sahf
xor
jg
add
add
stc
add
cmpsl
jo
flds
add
adcb
nop
testb
add
jmp
add
sub
mov
cmp
in
scas
adc
out
add
repz
mov
add
mov
test
pop
lock
add
in
xor
jg
add
lock
add
mov
lahf
xorps
loope
add
add
add
movq
jl
inc
add
into
stos
add
je
scas
aam
stc
mov
add
add
mov
and
std
lea
add
lods
fistpll
jbe
addr16
jg
insb
add
repz
idivl
add
push
cli
ja
add
add
push
cli
cmp
add
adc
ret
pop
les
out
cmpsl
cltd
cmp
add
xchg
add
add
sarb
mov
add
mov
push
mov
gs
out
sbb
jae
in
add
mov
add
mov
adc
dec
add
add
mov
cli
in
scas
test
sub
jl
mov
add
add
pusha
add
lock
add
add
fdiv
dec
add
mov
xorl
outsl
sbb
and
insl
in
add
sahf
mov
mov
xor
pop
outsb
add
push
add
inc
xchg
fcoms
add
xor
adc
mov
in
mov
add
xchg
or
pop
pop
add
add
ret
outsb
add
and
pop
cmp
inc
push
daa
xchg
jb
add
sbb
fcoml
dec
add
lods
stc
rcll
mov
adc
mov
mov
add
rcrb
jg
stc
int3
rcll
sti
add
adc
sarl
mov
fmulp
dec
add
add
lods
xchg
xchg
jns
sub
cmp
daa
jmp
shrb
fisubrs
out
ljmp
and
sti
aam
shr
arpl
je
mov
inc
add
adc
adc
mov
sub
add
mov
mov
jns
add
add
sbb
mov
pop
dec
xor
stos
dec
popf
cmc
xor
sti
gs
fisubl
sbb
je
shrl
mov
mov
add
add
in
add
or
scas
repz
inc
jno
add
xchg
adc
xor
add
inc
fdivl
sub
pop
mov
cmpb
cli
cli
inc
enter
add
xchg
stos
into
mov
ret
cmc
sahf
xor
outsl
sub
add
add
adc
jmp
jns
jb
fcomps
mov
clc
jae
out
add
data16
insb
add
dec
dec
add
xchg
jp
push
add
dec
add
add
xchg
arpl
mov
mov
dec
add
add
adc
cmp
cmpsb
unpckhps
ljmp
ret
out
fsub
subl
or
int3
mov
jg
std
aaa
stos
adc
add
push
push
add
xor
int
add
inc
add
repz
mov
or
out
sub
repz
jge
cmp
add
push
leave
jl
and
push
add
cwtl
icebp
jb
cmc
pop
jns
add
xchg
add
mov
loop
cmp
adc
pop
add
out
add
bound
lds
sub
jp
popa
sti
and
int
std
sbb
add
iret
rorl
add
cld
inc
add
dec
add
inc
add
add
incb
lods
cmp
add
and
xchg
js
popa
mov
xlat
int3
pop
add
mov
cltd
cmp
and
shll
add
xchg
iret
mov
add
dec
add
add
add
xchg
int3
or
cltd
or
insb
add
add
add
mov
pop
add
aam
xchg
lret
add
mov
add
cmp
add
cmp
out
cmp
push
add
add
mov
jmp
add
mov
add
add
jle
mov
push
add
add
insb
add
push
add
mov
xchg
add
jmp
xchg
outsb
add
add
icebp
xor
mov
add
add
inc
mov
ljmp
lret
inc
ret
add
sub
push
out
addr16
fldcw
dec
dec
repnz
sub
pushf
fwait
in
inc
add
push
add
js
and
rorl
negl
pop
sub
repz
sahf
mov
mov
add
mov
ret
scas
cwtl
int3
add
add
sahf
push
add
cmpsb
pop
cld
lds
aam
add
nop
adc
add
add
add
jno
clc
ret
jl
cltd
or
les
subl
add
jb
sub
add
adc
sub
add
add
add
inc
cmc
daa
fwait
dec
pop
mov
add
imul
js
loope
jb
mov
dec
add
or
mov
xor
loope
sti
sub
js
aaa
sub
dec
popf
xchg
add
fsubrs
cmp
stos
push
add
sub
push
add
xchg
test
mov
add
add
bound
iret
jae
cmp
sbb
inc
pop
add
pop
add
add
mov
roll
aam
lods
push
add
jp
pop
add
adc
pusha
add
and
jmp
xor
pop
scas
loope
repz
sub
sub
outsl
xchg
fwait
stc
sbb
andl
dec
push
add
sbb
add
into
pop
add
mov
add
icebp
nop
fsubp
fisubrl
pop
inc
add
sbb
add
add
inc
dec
add
mov
cmp
add
jns
add
mov
mov
add
mov
push
data16
imul
lahf
call
dec
add
add
lret
push
jg
les
dec
cli
inc
add
add
add
daa
nop
enter
sbbl
xor
add
pop
mov
add
stos
ret
xchg
sub
stc
or
sub
fnsave
add
add
jb
jbe
xchg
vpsllq
xchg
add
jns
fsubp
inc
into
mov
add
cmp
jno
inc
mov
add
stos
stc
lds
lods
dec
mov
stos
test
add
sub
scas
push
add
lcall
insl
fs
xchg
shrl
add
fimull
test
add
xchg
pusha
add
xchg
mov
jecxz
jp
loope
add
pop
add
add
add
add
pop
push
add
push
inc
outsl
lret
pop
and
std
cmc
mov
push
add
bound
outsl
imul
repnz
pusha
add
movb
add
or
xchg
sub
jecxz
lret
fcomps
adc
add
push
add
je
pop
add
testl
loope
int
cmpsb
jno
fists
cltd
cld
loopne
add
and
sahf
pop
mov
add
and
hlt
push
jo
cli
xor
or
mov
add
fstps
call
imul
dec
xchg
add
call
add
add
data16
loopne
add
inc
add
add
xchg
jge
add
pop
aaa
pop
loopne
mov
push
sbb
or
into
jp
mov
pop
into
js
xchg
add
sub
push
add
sbb
lods
pop
xor
bound
rclb
add
add
lahf
fsts
adc
pop
sbb
sub
iret
pop
fcomps
add
mov
xchg
enter
add
add
push
add
add
lds
imul
cs
push
xchg
ja
add
add
ja
je
test
mov
add
sbb
in
xchg
pusha
add
xchg
ror
fisttpll
jp
mov
call
jns
enter
cltd
and
sbb
jne
repnz
or
js
or
movl
pop
push
mov
pop
add
add
push
fmul
sub
hlt
dec
mov
add
mov
pop
add
add
jmp
fbstp
cmp
out
leave
nop
lret
int
jg
cmp
add
mov
in
addr16
xchg
mov
add
xchg
add
push
loope
adc
or
movsb
mov
hlt
dec
jecxz
jmp
push
mov
add
aaa
and
mov
pop
add
fmuls
int
movsb
cmp
lds
fnstcw
stos
jbe
into
fcmovu
or
add
out
inc
jne
mov
mov
dec
test
cmp
lods
div
stos
lahf
dec
add
add
add
add
in
cwtl
push
add
add
stc
fucomi
mov
ficomps
mov
and
and
rcr
jae
or
scas
inc
add
add
data16
lods
dec
add
inc
add
dec
add
add
lock
std
push
add
jmp
pop
pop
jb
mov
add
adc
loope
push
inc
add
sbb
stos
sbb
mov
and
cmp
pop
insl
inc
add
add
dec
arpl
mov
add
das
cmpsb
stos
daa
xorl
add
add
sbb
inc
add
mov
mov
add
xor
movsl
por
outsl
fwait
cltd
xor
push
add
add
jne
sub
cmpsl
mov
cmpsl
in
mov
add
outsb
add
mov
stc
pop
add
in
cmp
lods
daa
mov
lods
jnp
xchg
xchg
dec
add
mov
mov
icebp
add
pop
add
movsl
aam
or
xlat
jge
add
inc
dec
add
xchg
ret
xchg
shrl
jl
cmp
lods
jo
pop
add
add
gs
jnp
push
add
or
sbb
dec
add
lods
sub
add
mov
ds
cmp
lret
lea
popa
cltd
pop
add
mov
add
inc
les
scas
loop
jo
push
test
mov
sbb
mov
out
add
cli
and
add
sub
sahf
rcll
sbb
dec
les
add
mov
mov
inc
add
shll
jle
and
dec
add
pop
add
aaa
rcl
sub
cmp
rorb
cltd
fld
push
mov
mov
hlt
cmc
les
push
lods
in
xchg
xor
xlat
mov
enter
add
xchg
in
pop
fucom
jo
sub
jle
pop
add
jle
ljmp
popa
mov
xchg
sarb
dec
add
add
inc
add
call
fistpl
add
mov
shlb
sahf
aam
iret
in
push
add
add
xchg
add
fdivrl
mov
fisubrs
add
push
mov
add
mov
add
xchg
jp
and
pusha
add
xchg
lds
lods
dec
add
shrl
pop
add
fmuls
fstps
add
add
add
add
outsb
add
shrb
sub
hlt
ds
in
roll
or
add
xor
push
add
addr16
xor
xchg
fbld
or
pop
add
enter
int3
addr16
scas
negb
add
add
arpl
inc
add
xor
cmpsl
repz
dec
add
mov
pop
add
add
and
jnp
loope
xor
negb
fstpt
add
jg
aas
sub
pop
add
sti
jnp
sub
mov
shl
add
aaa
add
scas
ret
mov
push
add
mov
sbb
xor
pop
pushf
mov
add
add
adc
jb
pop
mov
pop
je
push
cli
ret
pop
popf
cmp
jmp
cmp
cmc
mov
fdivrs
mov
xchg
pop
add
in
aaa
hlt
loope
mov
cmp
add
daa
pushf
pop
orb
add
jmp
insb
add
add
add
aas
hlt
inc
add
aaa
dec
or
push
out
mov
pop
imul
mov
add
add
hlt
cltd
adc
dec
add
cltd
aas
add
or
imul
add
or
rcrl
mov
dec
add
nop
cld
mov
mov
ffree
mov
daa
les
add
xchg
cmc
out
or
add
push
int3
int
add
mov
mov
mov
mov
cld
icebp
lcall
insl
xchg
adc
add
add
inc
add
adc
jp
scas
push
add
add
les
sbb
scas
sbb
inc
dec
push
add
jle
sbb
dec
adc
adc
gs
add
adc
sub
jg
fidivl
add
jae
js
cmpsb
mov
iret
jnp
add
mov
and
pop
call
int
pop
shrb
add
xchg
mov
add
and
orb
aaa
pop
add
add
mov
cmc
inc
add
push
adc
dec
stos
pop
data16
add
add
add
pusha
add
add
xchg
arpl
or
scas
dec
add
bound
outsl
dec
dec
xchg
push
pop
xor
in
nop
pop
add
add
and
xor
mov
sbb
jmp
add
and
xorb
xchg
out
add
jae
lods
pop
add
and
pop
add
sbb
out
and
xchg
push
add
xor
test
pusha
add
mov
xchg
pop
add
outsb
add
inc
add
mov
jp
mov
mov
xchg
pop
add
stc
ret
stc
stos
mov
inc
add
adc
std
data16
and
sbb
sahf
and
enter
repnz
std
lcall
out
xlat
xchg
mov
add
je
mov
jb
dec
cmp
rcll
jne
add
outsl
xlat
and
sub
adc
add
add
xchg
cmp
xchg
clc
and
out
repz
adc
and
mov
xchg
sub
in
in
pusha
add
dec
add
xchg
stos
inc
inc
mov
cmp
add
wbinvd
movsl
push
inc
lds
in
mov
jg
addb
jle
call
mov
inc
pusha
add
addb
pop
add
add
add
add
inc
mov
fdivs
cmp
jmp
add
rcrl
adc
out
jg
mov
bound
fs
jns
and
sub
mov
xchg
mov
cmp
ljmp
add
add
add
add
jb
or
ret
xabort
pop
sar
jo
test
add
jns
loopne
flds
fistpll
cmp
shlb
add
add
fcom
inc
add
add
pusha
add
sbb
insl
pop
add
pop
mov
add
mov
add
dec
popl
add
daa
cltd
jg
mov
add
fcoml
add
or
cwtl
pop
mov
test
adc
mov
repnz
mov
add
imul
add
inc
add
push
fwait
in
add
addl
jb
inc
add
push
scas
push
outsb
add
lods
test
fdivrl
add
adc
flds
std
les
add
add
xchg
out
inc
add
lods
mov
add
inc
insl
cmp
ljmp
and
data16
add
adc
cmpsl
add
cli
ljmp
rorb
and
mov
mov
stos
or
cmpl
add
xchg
in
jmp
inc
add
call
or
or
sub
dec
add
fdivl
mov
add
ficompl
add
add
lock
rorl
mov
jl
mov
mov
push
popa
pop
cs
adc
enter
arpl
dec
xlat
pop
in
aaa
out
add
movsb
shlb
add
add
int
rcrb
mov
add
pop
add
add
out
mov
stos
lods
jns
hlt
push
scas
push
jmp
add
jbe
cltd
mov
or
and
mov
cld
enter
jns
push
jg
add
pop
das
shlb
lock
jb
clc
ret
xchg
into
or
adc
cld
and
mov
xor
gs
clc
add
cmp
jmp
push
add
mov
push
mov
add
mov
std
cli
mov
in
add
sub
add
sarl
pop
add
inc
push
add
add
inc
add
fisubs
mov
in
push
add
dec
test
aam
sub
cmp
sbb
lret
js
lret
push
add
add
add
jnp
add
add
popa
cmpsb
pushf
push
repnz
sub
jae
js
roll
push
add
cmpsl
pop
in
mov
out
jle
or
and
mov
jo
xchg
je
push
add
add
jecxz
mov
std
adc
jne
repnz
lcall
xchg
cmp
push
fcompl
out
stos
or
fnstcw
xchg
mov
add
add
shl
lock
mov
adc
por
in
add
mov
add
iret
or
dec
dec
cli
lods
orl
add
push
add
mov
push
add
cld
jno
add
mov
dec
add
xor
or
aam
mov
repnz
inc
add
add
mov
rol
icebp
inc
add
xchg
cmp
adc
jmp
cmpsl
and
xor
sbb
out
add
mov
pop
xchg
scas
xor
dec
mov
jle
cmp
jno
xchg
add
add
lret
dec
add
sub
test
xchg
iret
int
xchg
sub
push
add
add
loop
xor
mov
add
call
add
sbb
jns
push
arpl
aas
sub
add
imulb
testb
sub
jecxz
add
stos
add
add
fwait
pusha
add
in
add
add
or
sarl
adc
add
jns
pop
add
adc
insb
add
sbb
popf
out
xor
clc
std
xchg
sbb
scas
pop
cmpsl
cmpsb
cld
imul
outsl
inc
add
jnp
pop
jp
jno
fwait
mov
add
add
int3
es
inc
jge
pop
pop
inc
mov
pop
add
push
add
decb
jae
insb
add
ja
add
add
add
add
add
outsb
add
jl
mov
loope
jnp
add
int
add
add
rcrb
int3
ret
xor
sub
cmc
loopne
aam
add
adcb
add
add
in
nop
cmp
add
call
pop
add
mov
add
loopne
add
add
out
mov
inc
add
and
add
dec
add
add
jns
inc
add
push
add
mov
sub
test
add
loop
add
out
adc
cmp
mov
push
jg
addl
add
add
add
sti
add
dec
add
movsl
sbb
bound
cmpsb
dec
add
xchg
push
sub
mov
cwtl
jnp
add
out
jmp
push
add
sub
xchg
add
mov
or
add
cmp
xor
roll
add
aaa
and
xchg
xchg
add
dec
add
lea
mov
jae
loope
cld
cmp
lret
xor
repz
add
mov
in
sbb
nop
xor
xchg
add
adc
test
sahf
pop
add
add
fistpll
fisttps
dec
add
cmp
or
cmp
push
xchg
int3
popa
out
xchg
cmpsl
push
add
pop
push
mov
add
lret
mov
movsb
sarl
fsubrs
add
add
insl
mov
pop
fwait
xor
inc
add
sbb
shrb
add
and
test
aad
xchg
sub
test
or
jl
addr16
jl
loopne
mov
add
mov
add
add
push
add
jbe
jecxz
add
mov
jbe
sub
add
cmp
in
imul
add
insb
add
jmp
dec
add
pop
add
sub
popa
xchg
mov
sti
int
cltd
int3
scas
mov
movq
clc
add
jmp
add
mov
sbb
idivl
sbb
shlb
add
add
mov
mov
incl
jo
cmp
xchg
mov
lods
push
add
in
hlt
xchg
loopne
lock
xchg
pop
sub
xchg
inc
add
mov
adc
xor
sub
pop
cmc
jle
pop
push
add
dec
jl
lock
mov
dec
mov
add
xchg
cwtl
dec
out
incl
add
fsubs
add
add
add
cs
enter
jns
add
add
xor
xor
push
add
or
inc
jne
cs
add
push
shll
adc
gs
xor
add
adcl
pop
add
movntps
and
add
add
add
xor
push
xchg
or
or
mov
sub
sbb
pop
add
pop
cltd
add
out
or
push
add
in
lret
xlat
das
add
stos
adc
add
movsl
hlt
push
add
cld
movsl
je
adcb
sbb
loopne
add
and
lds
cli
push
add
mov
add
das
scas
inc
add
lock
mov
mov
pop
sub
pop
cld
iret
stos
or
or
mov
add
pmaxsw
and
xor
mov
add
mov
pop
add
add
xchg
das
test
add
test
add
sahf
negl
cmp
sub
add
add
enter
add
mov
adc
imul
fdivrs
add
aam
mov
mov
push
add
xor
fs
lock
push
add
cmp
bound
push
mov
mov
cmp
and
shrl
add
pop
add
movsb
xorb
adcl
into
ret
imull
fstl
mov
add
add
in
xchg
xor
jg
scas
loopne
add
add
adc
inc
add
pop
inc
inc
add
leave
jb
inc
add
add
out
je
xchg
cmp
inc
andl
xchg
xor
adc
push
add
xor
aas
jmp
stc
inc
add
mov
hlt
mov
dec
xlat
pushf
xor
push
addr16
mov
das
idiv
add
bound
xchg
mov
pop
pusha
add
sbb
add
mov
jno
add
push
add
add
add
push
add
rcll
fs
lcall
ret
loopne
add
mov
xchg
adc
add
add
dec
jno
inc
mov
push
add
cmp
lret
dec
xor
push
push
add
mov
sub
in
stc
adc
mov
pusha
add
in
add
daa
pop
ja
imul
cmp
inc
add
mov
out
add
into
mov
xor
mov
lcall
add
push
add
cmp
sbb
daa
push
int
jne
mov
xlat
sbb
sub
pop
add
fxam
pusha
add
mov
mov
add
into
jp
jg
ja
pop
adc
das
gs
add
push
add
add
add
movsb
rolb
fnstenv
add
xor
dec
mov
into
neg
mov
add
mov
lcall
ljmp
sub
or
cltd
ss
negl
cmp
stos
outsl
xchg
jo
adc
outsl
jl
sbb
in
mov
sarl
jg
cltd
add
rclb
mov
in
imul
dec
add
add
add
lock
add
lcall
add
dec
in
int3
call
jge
in
lret
xor
mov
mov
sbb
mov
adc
sbb
add
add
add
xor
mov
leave
in
fsubrl
dec
or
aas
pusha
add
psubb
add
pop
mov
push
les
add
mov
mov
add
jle
je
sbb
or
sbb
push
add
add
add
jle
ljmp
xor
jne
pop
mov
mov
stos
sub
add
js
add
call
push
add
inc
add
and
jb
movsl
add
xor
loopne
movsb
fildll
xor
sbb
pop
xchg
pushf
mov
pop
shrb
add
sub
inc
mov
add
sub
xchg
js
sub
add
xchg
push
pop
jp
imul
daa
aam
add
add
add
add
push
iret
and
inc
add
lock
add
add
jns
add
pop
xchg
insb
add
push
add
loope
inc
add
xchg
pop
cltd
pop
adcl
push
add
in
add
je
jbe
scas
imul
jbe
stos
aaa
push
call
stos
cmp
xor
punpckhwd
jnp
jl
in
push
add
add
jne
mov
add
add
mov
testl
add
ss
lea
scas
jo
cmpsb
ret
add
ficoms
add
xor
insl
je
add
cwtl
adc
sub
fdiv
mov
gs
cmpb
add
lahf
fdivl
add
jae
addr16
mov
dec
add
push
add
sahf
adc
push
add
stos
test
xchg
ja
jg
or
add
add
mov
add
shl
nop
push
add
rolb
enter
pop
daa
enter
xchg
push
add
ljmp
push
cmp
jns
add
cmp
add
cld
test
lods
mov
jmp
int
decl
rolb
xchg
hlt
mov
sub
add
mov
lcall
mov
in
mov
add
aaa
sbb
xor
sbb
mov
add
push
add
fcmovb
inc
add
or
sub
arpl
outsb
add
dec
lcall
mov
add
or
test
mov
inc
enter
iret
test
add
popa
mov
lcall
jl
xlat
sub
xlat
leave
xor
adc
add
add
out
jg
inc
jmp
mov
push
xchg
add
popf
dec
add
add
test
add
add
add
shlb
notb
xchg
pusha
add
add
add
popa
push
add
daa
test
and
iret
jae
sub
mov
es
insl
xlat
jl
outsb
add
and
dec
jg
add
jmp
shr
out
popf
arpl
pop
add
add
add
add
bound
xor
cmp
jmp
add
add
add
lret
push
add
sbb
sbb
add
mov
test
cld
push
add
inc
add
add
add
add
scas
dec
call
cmp
add
test
cld
adc
jge
add
loope
add
sub
fsts
add
push
add
add
rol
daa
daa
inc
pop
lahf
push
add
cwtl
mov
aad
add
aaa
arpl
sub
lods
icebp
cmp
mov
add
push
fadd
cli
mov
lcall
xorl
xchg
cmp
repz
xor
or
jbe
in
xor
lock
mov
ret
movsl
inc
fwait
cmovno
add
push
shll
jns
mov
xchg
cmp
jecxz
ja
pxor
nop
add
ja
xchg
add
icebp
xchg
push
lods
and
push
add
sub
bound
adc
lahf
push
add
hlt
cwtl
xchg
into
pop
add
cltd
push
xor
push
dec
add
sub
dec
mov
mov
add
add
std
push
add
add
andl
cwtl
mov
mov
jmp
jg
dec
add
add
add
inc
add
out
test
mov
cltd
mov
xor
fiadds
mov
cmp
lds
jge
gs
jge
adc
outsl
inc
add
pop
add
lea
lock
xchg
add
shll
add
movsl
jno
xor
mov
lret
xchg
sbb
add
inc
cmp
mov
push
add
mov
pop
xchg
loopne
add
cmpsb
jmp
mov
loop
iret
push
add
xchg
nop
lea
jb
xlat
pop
js
and
sub
movsb
add
add
or
pop
add
add
sti
and
add
mov
mov
fdiv
sbb
push
add
pop
fldlg2
pop
lods
mov
push
add
mov
and
push
add
sbb
mov
testl
iret
js
mov
add
mov
add
xor
inc
or
std
ljmp
mov
inc
imulb
jge
cmp
push
mov
dec
add
add
push
add
add
orl
das
jle
je
mov
cmp
ljmp
add
push
cmp
sbb
lods
or
push
add
test
add
add
pushf
ljmp
xchg
divb
jo
mov
aad
jb
imul
add
into
test
lods
mov
cld
popa
lahf
stc
sub
stc
loop
adc
dec
popa
sti
lock
popf
mov
xchg
fiaddl
je
push
add
pop
xor
testb
push
add
lods
sbb
xchg
outsb
add
out
xchg
loope
add
fnstcw
add
jle
or
xor
push
add
call
xor
push
add
mov
data16
sbb
cltd
mov
lds
push
add
std
sub
test
xor
xor
jge
insl
pusha
add
push
add
cmp
nop
enter
or
or
cmp
cmp
jns
add
mov
xchg
test
add
mov
add
add
rcl
xchg
lret
ret
sub
add
repnz
adc
mov
jbe
sahf
aad
add
cltd
pop
add
pop
or
addr16
add
jns
add
lcall
add
add
inc
xchg
xchg
lret
icebp
mov
add
pop
add
add
mov
in
add
pop
add
jnp
xlat
and
inc
ja
into
add
add
scas
outsl
lods
sahf
inc
add
in
and
les
lret
jnp
pop
mov
repz
cmp
mov
xor
add
add
or
xchg
or
leave
out
mov
cmpsb
mov
data16
sub
leave
daa
dec
aam
aad
imul
add
pop
add
outsb
add
xor
inc
cmpsb
outsb
add
add
mov
ficoms
repnz
add
and
lcall
xchg
arpl
rcll
mov
add
add
sti
shrl
jns
clc
jg
lahf
pop
dec
pop
add
outsb
add
and
pop
add
jge
arpl
add
mov
pop
push
add
jg
add
sub
gs
add
pop
icebp
pop
add
sbb
pop
add
dec
add
fistl
arpl
lcall
add
out
sub
add
dec
add
sar
fldenv
pop
das
cltd
jle
xor
imul
or
cmp
mov
imul
mov
push
add
sbb
push
xchg
data16
imul
push
cmp
xor
fsubrs
xor
addr16
jno
cmc
imul
in
test
add
add
add
push
add
insb
add
cmp
add
js
sti
add
pop
add
adc
push
add
add
movsb
push
pop
sbb
or
cli
js
pop
add
stc
xchg
xor
add
add
outsl
push
add
jns
add
add
outsb
add
in
push
add
or
nop
inc
arpl
mov
add
mov
jle
out
mov
mov
orl
xlat
push
jb
pushf
fsts
add
add
adc
xor
adc
and
lds
decb
mov
fisubrl
add
xchg
add
sahf
inc
add
jp
jbe
xor
aas
mov
mov
insl
stos
call
add
shrl
add
ljmp
add
add
cld
adc
pusha
add
daa
fmuls
add
jle
xlat
pop
and
mov
add
not
push
and
sub
push
add
jae
add
add
jle
sub
hlt
test
sbb
scas
xchg
sub
xchg
xor
fxam
dec
add
cmp
cmp
nop
jns
test
jg
add
add
add
mov
add
out
fwait
xchg
push
adc
push
add
add
mov
add
dec
add
cmp
inc
add
add
lret
push
add
lods
scas
ja
ds
cmp
test
dec
movsl
xchg
outsl
cmp
adc
out
mov
fmull
add
cmpl
add
add
xchg
push
add
xchg
cmpsl
dec
dec
add
add
fistpll
add
cmpsl
pop
add
cld
sti
imul
punpckhdq
out
jl
in
aad
das
add
add
push
add
add
adc
arpl
inc
or
jne
fisttpl
add
test
sahf
scas
call
xchg
std
add
imul
arpl
dec
in
xorb
add
mov
add
jmp
sbb
cmpxchg
sbb
xor
add
add
test
xlat
nop
xor
mov
in
jo
shlb
rorl
add
xor
movsl
push
add
mov
cmpsb
inc
xor
les
div
inc
int3
push
add
add
dec
add
pop
out
add
insl
adc
clc
add
or
lret
cmp
fstpl
add
add
xor
jmp
add
inc
hlt
mov
pop
xchg
call
xchg
and
add
add
inc
add
dec
add
pop
add
aas
sbb
cmp
xlat
mov
xchg
jp
sub
add
add
add
pop
in
cmp
lcall
pop
in
ja
rcl
lcall
push
add
adc
scas
and
imul
fadds
sbb
dec
ja
add
add
push
add
add
idivl
add
and
xchg
sbb
mov
stos
mov
call
adc
add
xchg
xchg
and
pop
call
inc
stos
pop
add
pop
push
into
sbb
sub
dec
add
testb
mov
add
or
mov
js
adc
or
in
push
pop
daa
iret
lret
sarb
add
icebp
pop
cmp
push
add
add
jns
add
mov
add
sbb
xchg
jo
fldcw
add
dec
sub
mov
repnz
sbbb
in
add
add
add
mov
sbb
loope
cld
jl
xor
push
add
hlt
mov
and
mov
insl
nop
pop
add
lods
inc
in
jbe
adc
push
es
cmp
out
mov
dec
fidivrs
movsb
push
mov
testl
je
push
fsubrs
and
inc
pop
scas
xchg
fildll
add
into
mov
repz
add
or
lea
add
dec
loope
lods
and
test
dec
loop
and
movsb
in
mov
mov
sbb
pop
gs
cmpsb
sti
jge
dec
add
xchg
push
mov
iret
js
or
xorl
add
cmp
insl
xchg
mov
add
jae
repz
sahf
in
push
add
jnp
xchg
add
lods
or
inc
sub
mov
add
mov
add
jp
adc
jbe
adc
push
or
adc
cmpsl
mov
fdivs
pop
xchg
fwait
jnp
hlt
xor
outsl
mov
addr16
iret
movsl
jno
push
add
pusha
add
dec
lods
or
sub
jl
ror
pop
inc
mov
mov
loopne
sub
dec
insl
inc
cmp
mov
pop
add
out
jp
jge
add
dec
add
je
xor
push
add
icebp
sbb
imul
fisttpl
fdivs
pop
jb
mov
sti
push
sbb
movl
xlat
pop
rcrl
add
push
jge
add
add
push
daa
mov
jns
jno
jg
sbb
pop
in
dec
add
inc
lods
cmp
les
xchg
lret
mov
imul
adc
xchg
add
jge
add
sub
add
push
add
scas
mov
jecxz
add
repnz
jno
mov
std
lahf
add
ret
mov
or
push
pushf
jae
xor
add
pop
xchg
cmc
xor
sub
cmp
daa
out
push
add
arpl
add
push
loopne
add
mov
cmp
push
add
fisttpl
jl
xchg
xchg
cmp
insl
in
add
cmc
mov
fwait
jle
jns
add
add
mov
inc
subl
add
ljmp
add
popf
dec
mov
mov
lea
mov
pop
jne
divl
xchg
push
add
and
add
jecxz
sub
pusha
add
clc
ret
jp
icebp
es
notb
scas
not
push
fstpt
icebp
jnp
insb
add
add
mov
add
add
movsl
aad
dec
inc
add
add
sbb
out
pop
into
push
out
add
xchg
out
bound
add
xchg
inc
int3
daa
lcall
mov
pcmpgtw
xchg
arpl
fwait
push
insl
xor
jo
mov
stos
das
loope
ljmp
mov
add
loop
xchg
out
mov
movsl
cltd
cmp
mov
lahf
rcll
imul
xchg
xchg
or
data16
inc
add
push
add
cmp
push
pop
mov
ret
sahf
inc
pop
cli
icebp
out
add
aaa
lret
shrb
fwait
push
shlb
loope
add
jbe
mov
cmp
push
add
mov
pop
jae
add
loope
pop
add
or
loope
test
add
or
aam
push
in
popa
fcoms
xor
add
xchg
std
push
add
push
cld
sbb
sbb
adc
lock
push
add
push
add
mov
add
mov
movsl
in
add
dec
jecxz
jo
pop
add
cmp
inc
add
jae
add
loope
add
dec
adc
inc
repz
push
mov
notb
mov
or
ljmp
into
sti
xor
dec
add
mov
notl
add
mov
fisubrl
add
xchg
pop
daa
in
dec
add
add
mov
mov
xchg
adc
je
je
mov
lds
add
add
sbb
aam
inc
inc
add
mov
mov
push
ret
sti
mov
add
push
add
mov
push
call
jns
add
xchg
dec
in
push
mov
or
dec
sahf
pop
outsb
add
xor
add
add
mov
imul
mov
filds
add
hlt
xchg
rclb
rcrb
mov
add
xchg
popa
inc
add
sbb
push
add
push
cli
arpl
imul
add
add
add
add
inc
add
sub
rcrl
sbb
add
in
jecxz
movsb
cmp
xlat
insl
adc
call
xchg
and
ds
leave
js
iret
leave
sbb
fcomps
nop
ljmp
rcr
mov
adc
pop
push
add
cmpsl
int3
imul
push
xchg
or
pushf
lahf
cmpsb
xor
add
cmc
pop
add
mov
pop
xchg
cmp
and
popf
andl
add
pop
add
adc
push
add
add
and
xchg
das
push
add
add
add
loop
add
sub
jp
data16
sub
fldt
add
mov
xchg
leave
bound
dec
adc
add
xor
mov
add
adcl
fisubrl
jnp
add
mov
sub
fld
lret
in
call
add
pop
and
out
test
and
nop
mov
add
inc
add
mov
ljmp
js
addr16
dec
push
add
inc
add
into
mov
mov
shll
ljmp
push
add
inc
fwait
incl
add
and
test
jle
mov
push
add
out
jmp
in
scas
xchg
push
sub
pop
sti
bound
icebp
add
cltd
xchg
mov
jg
sti
add
rcr
lcall
fucom
push
add
add
jg
pop
jmp
add
mov
outsl
cmp
pop
insl
cmp
dec
add
es
push
add
shrl
inc
add
inc
add
xor
mov
add
jecxz
push
adcl
sbb
mov
add
loope
loopne
pop
add
add
sub
jne
pop
stc
jge
sbb
roll
ret
push
xchg
add
pop
ja
add
add
mov
sub
pop
fdivrs
out
fiadds
sub
add
out
insb
add
lcall
add
add
int
pop
fwait
adc
adc
mov
push
add
lock
pop
cli
dec
add
or
sbbl
je
enter
data16
add
add
mov
add
push
add
jne
push
sahf
cwtl
pop
add
add
mov
arpl
add
into
imul
mov
add
mov
push
add
dec
nop
lods
or
add
bnd
add
sbb
sbb
sbb
stc
imul
test
jnp
add
jae
add
repz
lods
test
fnstsw
add
data16
add
mov
add
aas
sarb
fisttpl
repz
inc
add
test
jnp
add
add
add
add
pop
pop
mov
adc
push
add
push
add
adc
pop
inc
xor
inc
and
inc
add
add
imul
add
add
xchg
and
rolb
lds
shr
add
cli
jle
stos
inc
out
pusha
add
mov
add
add
stc
imul
add
pop
add
mov
inc
add
add
rcl
pop
add
jg
add
jo
test
and
sti
cwtl
and
jp
test
jo
out
pop
add
addl
add
add
inc
sahf
loop
packsswb
mov
add
push
add
add
add
add
and
lea
sbb
fimuls
cmp
pop
dec
or
inc
lret
jg
cwtl
sti
dec
add
push
add
les
sbb
cmp
mov
jge
jb
jb
cmp
sub
inc
out
or
add
ret
push
inc
add
add
cltd
push
add
mov
add
rorl
adc
add
popf
and
add
cwtl
rolb
dec
fiaddl
add
jbe
jge
or
lds
out
add
in
clc
loopne
adc
cmc
leave
inc
sub
push
add
call
adc
and
mov
add
nop
and
mov
push
add
pop
cmp
add
inc
dec
add
jnp
popf
add
mov
fisttpl
lds
fisubrs
add
adc
loop
aad
sbb
cmc
outsl
xchg
xor
gs
mov
add
add
dec
add
call
push
add
rcrb
push
add
add
in
outsl
jb
icebp
test
add
jecxz
add
jecxz
add
scas
cmp
mov
nop
cmpsl
lea
fsubr
mov
out
add
xor
add
add
pop
add
rorl
stos
in
add
and
add
out
xor
stos
mov
ret
jae
ret
push
or
or
shll
add
add
dec
add
add
inc
add
imul
xor
or
jns
add
cltd
sub
mov
push
mov
aas
or
divl
jmp
mov
xchg
cmp
hlt
mov
mov
xchg
imul
out
pop
add
in
push
add
add
int3
in
add
data16
mov
add
mov
imul
adc
pusha
add
add
add
subl
cmc
xor
je
mov
dec
daa
mov
add
add
dec
and
movsb
sti
rcl
adc
xchg
adc
add
xor
inc
mov
and
adc
xor
sti
mov
or
push
add
add
les
lds
pusha
add
mov
add
ret
push
add
push
adc
push
inc
dec
cwtl
sub
stc
sub
add
add
pop
add
rcrl
and
add
add
xlat
mov
mov
xor
add
std
aaa
data16
sbb
add
mov
jbe
dec
add
add
add
ret
arpl
mov
push
scas
or
mov
cmp
add
rcrl
sub
lahf
and
dec
xor
inc
pop
jecxz
and
cmp
xchg
inc
inc
add
add
add
out
or
fmuls
mov
add
subb
mov
out
mov
push
movsb
add
in
add
in
inc
jmp
add
out
add
add
sub
test
aaa
xor
add
xchg
shlb
add
and
xchg
jbe
das
pop
add
enter
jne
mov
add
add
out
xor
lods
push
jb
cmp
fwait
sub
clc
mov
mov
sub
jg
sbb
aam
xor
lea
out
fisttps
call
nop
lea
and
add
pop
roll
jbe
jmp
inc
add
mov
mov
jge
add
jecxz
push
cmp
cltd
aad
xlat
jnp
add
pop
add
dec
xchg
outsb
add
add
xor
loope
xor
sub
ja
mov
out
add
iret
std
das
arpl
rclb
fistpll
cs
insl
ds
test
shr
leave
lahf
pop
out
pop
add
xchg
or
loope
push
dec
je
aad
add
or
pop
add
ficoms
inc
add
add
dec
add
pushf
mov
sub
sbb
add
mov
dec
push
add
data16
aaa
push
add
add
add
add
push
cmpsl
or
imul
stos
pop
test
out
out
inc
scas
cmc
outsl
xchg
or
aaa
pop
add
stos
xor
xor
enter
or
jle
and
aad
add
add
test
loopne
add
add
mov
cltd
jb
loopne
sti
jle
xchg
inc
add
cmp
add
mov
dec
xor
lods
movsl
mov
daa
add
add
js
xchg
out
lret
xor
add
push
fidivrl
out
push
add
add
cli
ret
cltd
dec
add
mov
sti
scas
mov
andl
add
outsb
add
xchg
mov
or
cmp
add
loope
sahf
cmpsb
mov
ljmp
in
popl
jbe
dec
aad
sub
fcoml
lret
into
adc
xchg
xchg
or
sub
pop
decb
mov
lret
pcmpgtb
fwait
xor
gs
das
sub
fnstcw
out
imulb
movsl
movsl
push
add
sbbl
inc
xorb
mov
add
popf
pop
add
out
add
cmp
insb
add
cmpsl
bound
into
out
fwait
push
or
dec
add
pop
add
jle
pushf
test
add
aam
add
test
xor
shrb
add
movsl
mov
xchg
sbbl
add
xor
add
lods
aad
push
add
add
dec
cld
cmp
mov
mov
mov
lock
pop
add
lods
int
jne
mov
aad
or
dec
push
add
into
jmp
add
add
xor
pop
add
jge
push
add
add
add
add
add
mov
xor
xor
adc
stc
cli
mov
mov
mov
pop
add
jp
daa
stc
xchg
xchg
pop
mov
addr16
xor
sub
pop
aad
sbb
mov
add
add
rorl
add
mov
lds
aad
insl
sarb
aaa
push
enter
inc
cltd
inc
add
add
adc
jae
add
ret
jmp
pushf
in
xchg
out
arpl
mov
push
xchg
add
ss
sbb
pusha
add
lds
je
into
jo
mov
add
ljmp
add
imul
mov
sub
inc
dec
sti
mov
lods
cltd
cwtl
loope
push
jae
add
jmp
push
fiaddl
pop
mov
outsl
jno
add
iret
lcall
imul
clc
negb
add
stos
or
xchg
cltd
ja
aam
add
xchg
xchg
mov
add
loop
add
dec
add
ja
push
add
add
test
pop
add
adc
xchg
push
add
add
adcl
lahf
rolb
das
mov
add
cmp
and
fistpll
mov
mov
lods
fisttps
and
lcall
inc
add
dec
adc
sub
test
test
lock
add
add
imul
fistpl
jo
mov
cli
in
inc
add
xor
add
dec
add
add
jbe
and
lods
lods
add
div
push
add
cmp
cli
dec
pop
mov
adc
inc
push
add
add
aam
repnz
data16
add
fdivs
nop
xor
lret
dec
add
vcvtpd2dq
in
xor
sti
lea
or
aad
imul
lock
jmp
lahf
mov
add
ja
cmp
add
jg
gs
pop
and
ljmp
cli
push
add
sahf
lret
and
outsl
pop
sar
and
add
add
sahf
sub
or
add
add
adc
stc
pop
sub
pop
add
add
pusha
add
popa
xchg
xchg
add
add
leave
mov
jg
adc
inc
add
mov
das
in
out
add
add
lods
mov
test
fisubs
pop
inc
add
sbb
mov
jecxz
mov
add
lea
lods
jb
out
add
stos
enter
push
add
or
add
aam
into
mov
out
inc
jo
data16
out
cmp
xor
pop
fiaddl
add
loop
add
int3
xorb
data16
add
add
in
repnz
aaa
in
xor
sub
push
add
add
mov
add
mov
add
add
popa
mov
sub
and
cmpsb
jb
fwait
dec
xchg
sub
xchg
add
mov
shlb
add
add
or
xor
fimuls
xchg
dec
push
add
repz
ljmp
add
add
repz
lret
and
jae
add
rclb
sarb
pop
add
mov
add
idivb
mov
add
fdivrs
cmp
nop
sysret
div
dec
and
fldcw
test
leave
add
inc
sbb
out
add
popa
adc
ljmp
xchg
sbb
into
les
add
add
pop
add
sub
icebp
inc
repz
mov
mov
fisttps
ljmp
pop
add
cmpsl
test
pop
add
je
clc
lea
mov
pop
add
add
xchg
stc
add
mov
push
aaa
stos
ficoml
add
lods
addr16
sbbl
inc
sbb
add
pop
pop
mov
or
fcompl
aas
pop
add
sbb
cmp
mov
repnz
and
jb
lahf
mov
mov
adc
out
and
mov
sbb
in
and
cli
js
adc
mov
int3
aaa
mov
add
mov
push
test
dec
add
out
in
mov
add
add
sub
outsl
inc
movsl
cwtl
inc
inc
add
jo
mov
jns
sbb
sbb
call
insl
jge
pop
add
int
add
add
add
dec
lea
mov
add
dec
xor
aam
and
xchg
pop
add
or
cli
out
sub
mov
add
add
push
ret
out
xchg
jle
inc
leave
jmp
and
xor
lret
inc
add
add
pop
add
add
repnz
adc
mov
pop
enter
add
push
add
fwait
sti
jl
lds
push
add
mov
cltd
enter
out
inc
and
insl
int
inc
add
add
xchg
pop
or
pop
and
add
cmpsl
int
add
sbb
jae
add
add
push
adc
dec
add
sub
fbld
cmp
mov
mov
add
pop
ffreep
ja
mov
add
add
mov
dec
push
inc
add
xlat
dec
add
add
imul
int
or
xor
and
pcmpgtw
outsl
mov
push
add
add
add
pop
out
repz
mov
imul
push
add
hlt
pop
add
jg
push
add
push
nop
cmp
inc
dec
or
add
and
aam
and
or
xor
adc
shrl
mov
xchg
fnstsw
push
mov
inc
inc
add
mov
fwait
mulb
push
add
add
cmpl
xor
add
add
hlt
and
mull
pushf
xchg
add
or
inc
int3
dec
add
add
add
out
clc
pop
add
add
mov
outsl
mov
add
inc
add
dec
add
loopne
add
aaa
in
mov
ljmp
add
pop
ret
cltd
fldl2e
rclb
mov
mov
inc
loop
in
enter
add
in
insl
test
add
out
add
jle
push
xor
dec
add
out
rorl
jmp
push
add
xor
cwtl
je
sub
xor
fst
subb
mov
push
add
ror
add
add
push
add
out
scas
or
xchg
sub
and
mov
xor
xchg
mov
arpl
xor
popa
and
dec
add
pushf
das
lret
dec
dec
add
mov
rcr
xchg
data16
fdivs
mov
int
add
inc
add
add
add
pop
sbb
mov
add
je
mov
cmp
cmp
fsubrs
scas
mov
notb
xor
data16
int
xlat
fcomps
add
pop
jb
push
add
pop
inc
inc
add
pop
inc
add
sahf
sti
cmc
daa
push
js
add
cmp
add
add
sbb
push
add
or
add
das
sub
add
lods
notl
add
cmpl
adc
out
aad
add
xchg
arpl
in
pusha
add
imul
add
iret
mov
gs
and
ja
cmp
test
lea
jg
cs
movsl
adc
loope
add
or
sub
add
add
add
sbb
xor
ja
add
adc
nop
xorl
mov
xchg
stos
sbb
idivb
inc
leave
cmp
adc
in
mov
mov
add
lret
cmp
outsl
xchg
lret
out
les
pop
sbb
sub
push
data16
push
xchg
cmp
push
out
add
or
scas
mov
add
pop
add
pop
xor
aaa
or
add
mov
nop
or
mov
and
xor
xor
and
rorb
lods
andl
add
add
add
inc
add
add
add
add
sub
cmc
and
sbb
cwtl
adc
mov
enter
iret
fsubrl
add
repnz
mov
add
lock
add
xchg
movsb
iret
xchg
xor
add
sbb
mov
in
cmp
add
out
outsb
add
enter
mov
insb
add
nop
add
stos
repz
push
inc
mov
pop
push
add
cmp
add
cwtl
pop
ficomps
sbb
iret
and
outsb
add
add
add
pop
imul
add
add
aaa
pop
add
cmc
mov
xchg
lds
add
bound
pop
add
add
sahf
ss
aaa
fldt
dec
sbb
jp
in
cld
jo
mov
fldcw
imul
inc
scas
fiadds
xchg
addr16
add
xor
add
add
ret
out
add
pavgw
aas
out
arpl
or
xchg
popf
cmp
dec
add
xor
add
mov
sbb
mov
and
or
pop
add
add
mov
xchg
in
cmp
repz
lea
add
into
lods
aas
loopne
add
mov
into
push
das
sub
stos
std
xlat
adc
ss
cld
mov
mul
lcall
add
stos
pop
sahf
popf
add
mov
bound
sbb
orb
mull
jns
or
dec
pop
inc
add
and
out
add
add
dec
or
cmpsl
xchg
inc
ja
add
cmp
push
add
add
add
add
add
add
movswl
ljmp
int
dec
xor
dec
adc
add
lret
mov
add
iret
pusha
add
and
sbb
dec
add
mov
dec
inc
add
add
aam
or
daa
jg
add
lcall
jnp
pop
push
add
xor
add
and
add
aas
inc
lods
mov
or
cmc
xchg
cmp
enter
mov
xor
fldl
test
add
mov
add
jmp
repz
xor
test
add
test
add
add
add
add
mov
fldt
add
sti
lret
mov
cld
jne
add
xor
add
add
sub
xlat
or
sub
fdivrl
push
and
xor
cmpsb
jle
sub
cmp
pop
aad
outsb
add
xchg
bound
sbb
or
test
push
cmp
inc
add
in
jb
stos
and
add
clc
add
pop
add
and
add
dec
add
add
add
add
dec
add
jne
cltd
adc
jge
je
testb
cltd
pushf
sbb
jmp
add
add
add
ss
adc
repz
fnsave
cmp
mov
push
les
aad
add
add
fwait
add
add
add
add
popl
jmp
add
fstpt
cmp
je
sub
cmp
add
int3
cmp
sbb
repz
fwait
ror
jmp
add
inc
add
lock
add
xorb
add
xor
xor
or
sub
push
add
dec
add
add
sbb
add
add
jecxz
mov
std
jbe
fstpt
mov
add
aaa
cmp
add
lods
insb
add
hlt
ffree
out
scas
add
sbb
pushf
cwtl
iret
cmp
dec
out
inc
add
cwtl
imul
mov
add
mov
add
fldl
add
aad
mov
bound
into
xchg
loop
les
test
xor
add
add
aas
dec
clc
inc
add
add
add
jge
jae
or
inc
movsb
mov
add
mov
xor
test
sbbl
cltd
sbb
sub
loop
dec
pop
shrl
popf
mov
push
add
jae
add
push
add
or
sbb
dec
ss
jge
push
push
add
inc
mov
sti
fisttps
add
shll
icebp
mov
testl
push
add
add
xor
sti
shll
add
test
xor
stc
stc
add
pop
mov
mov
add
test
cmpsl
insl
cltd
inc
add
int
add
add
sbb
xchg
ja
cmp
imul
insl
loop
mov
dec
add
gs
sub
mov
add
or
add
int
ljmp
xor
popf
out
movsl
mov
pop
push
add
out
out
lea
add
add
add
add
movsb
punpckhbw
repz
ljmp
xchg
mov
ret
cld
mov
pop
rcll
add
or
mov
add
insb
add
adc
add
mov
pop
adc
add
gs
mov
lahf
pop
stos
mov
sarb
cmpsb
dec
adc
add
out
fmulp
add
cmpsl
je
adc
inc
push
add
sub
ret
add
adc
cmp
addr16
loopne
sbb
ret
and
add
shll
out
mov
mov
add
dec
add
mov
shll
mov
push
add
sti
inc
lods
xor
pop
cmp
and
and
push
xor
push
mov
addr16
fidivrl
cmp
jbe
popa
mov
stos
sbb
fdivs
mov
add
inc
cld
repnz
cmp
repz
test
mov
and
push
xor
inc
mov
repz
inc
add
icebp
jae
add
ud1
add
add
mov
sbb
and
sub
orb
add
cmp
add
push
add
cmp
push
add
mov
fisubrs
add
sbbl
or
hlt
int3
mov
jmp
or
lds
pop
cmp
jnp
inc
insb
add
push
add
enter
add
mov
add
or
dec
adc
repz
add
popa
popa
inc
add
cmpsl
xor
pop
pop
add
mov
stos
and
fnstenv
fidivrl
data16
sub
jne
mov
into
add
inc
int
add
add
pop
dec
add
pop
add
inc
add
scas
mov
xor
mov
test
add
fwait
add
add
add
push
add
negl
cmp
xchg
lock
sar
cmp
or
mov
add
js
into
dec
xchg
rorb
mov
ret
adc
pop
add
jle
clc
cmp
mov
lret
xor
inc
popa
iret
addl
lret
push
mov
sbb
test
mov
mov
add
les
fsts
add
mov
lods
clc
add
add
add
mov
sub
push
pop
add
jo
insl
jge
neg
add
add
lret
pushf
mov
sti
xor
cld
test
push
add
roll
cmp
imul
jl
test
push
add
out
or
icebp
jge
add
sub
aaa
popf
rcl
dec
add
add
enter
sub
data16
cld
xor
aad
iret
insl
test
push
int
xor
decb
jecxz
pop
mov
or
clc
add
cmp
sub
mov
add
jl
xor
ret
lock
add
add
mov
jno
pop
jecxz
test
jl
push
add
clc
mov
push
add
pop
add
jg
add
movsl
fwait
mov
mov
scas
fildl
icebp
dec
rcrl
jecxz
add
add
pop
mov
push
add
add
add
push
mov
mov
xor
add
inc
add
jae
add
push
add
adc
jle
pop
push
add
ja
dec
call
xor
add
loopne
add
xchg
jg
pop
aam
push
add
pop
add
ja
cmp
add
in
imul
mov
jmp
mov
dec
add
add
idivb
cwtl
adc
adc
lods
mov
and
fmull
add
addr16
push
add
popf
lods
sub
push
add
add
jecxz
outsl
mov
pop
dec
add
cli
jo
push
add
pop
add
add
dec
add
clc
ret
js
push
add
inc
add
popa
xor
adc
mov
xchg
jge
pop
jbe
sub
cmp
add
into
inc
add
jbe
loopne
add
xor
inc
add
mov
pop
and
lret
enter
xor
mov
fwait
lock
sbb
sub
clc
int3
and
mov
jns
mov
imul
add
push
add
andl
movsb
mov
jge
mov
add
in
add
push
add
jp
ret
lret
mov
pop
add
add
cmc
mov
inc
push
data16
dec
xor
and
or
sti
jle
test
test
add
push
stc
loope
in
jge
mov
xor
fdivl
add
add
movsb
aad
scas
push
add
add
nop
adc
push
add
gs
out
cmp
mov
add
xor
add
and
fnsave
add
adc
add
pop
daa
adc
add
subl
add
fnstenv
cltd
fwait
dec
call
fisttpll
add
add
imul
add
cmpsb
mulb
add
int3
and
pop
sbb
mov
fists
jnp
jae
add
aaa
gs
shrl
inc
add
or
into
cli
outsl
hlt
mov
jecxz
dec
add
jae
push
leave
insb
add
inc
mov
add
fwait
xchg
jl
mov
out
loop
push
cmp
xchg
jno
dec
add
mov
dec
sub
adc
dec
add
inc
add
dec
add
add
sub
sbb
xchg
sbb
push
add
add
add
add
or
ja
adc
mov
data16
add
int3
cmp
xor
sub
and
add
xchg
sub
enter
xchg
sub
arpl
add
inc
shrb
add
jle
mov
je
push
add
dec
add
add
push
mov
imul
or
add
add
jp
loopne
add
lods
sub
add
add
and
add
jle
xchg
in
jp
out
add
cmpsl
adc
int3
outsb
add
je
aas
jmp
mov
lds
add
imul
add
push
add
add
loop
and
and
xor
lret
es
cltd
or
adc
mov
test
add
das
insb
add
mov
mov
ret
pop
add
add
add
add
inc
add
push
cmpsl
pop
xchg
arpl
push
int3
push
fisttpl
popa
outsl
xor
jg
push
pop
fwait
dec
gs
cmpsl
mov
insl
mov
add
call
test
leave
std
xor
inc
cmp
imul
mov
incl
mov
jmp
stos
dec
movsl
xor
inc
add
push
mov
fisttpl
jmp
loopne
add
mov
sub
jns
dec
add
add
scas
sbb
fs
xor
mov
add
add
scas
add
testl
xchg
call
lret
add
imul
add
add
stos
dec
rcll
mov
js
test
repz
clc
and
xorl
fwait
inc
mov
add
mov
inc
sbb
add
outsl
in
sti
les
add
mov
jns
cmpsl
mov
add
sub
push
add
nop
out
sarl
sub
inc
adc
jbe
mov
adc
icebp
mov
sbb
pushl
add
jecxz
faddl
add
lret
ja
add
add
mov
add
pop
add
add
add
push
pop
cs
mov
sbb
nop
and
sbb
test
or
push
add
shlb
jo
testl
sub
push
in
add
jle
clc
adc
test
shlb
shlb
cmp
add
ss
mov
sub
bound
dec
mov
pop
mov
cmp
add
repnz
add
loopne
fwait
int3
and
inc
mov
add
add
push
add
dec
and
orb
push
add
xchg
mov
inc
add
jle
or
lods
sub
jp
mov
fst
lahf
add
add
imul
add
lock
jnp
add
or
add
cmp
add
push
add
push
das
add
mov
pusha
add
cmp
sbb
fcom
xorl
add
mov
add
jmp
sti
mov
xchg
adc
ficomps
push
sub
test
pop
xchg
add
xchg
xor
call
mov
movsb
mov
inc
add
mov
xlat
ret
push
add
push
call
call
xchg
sbb
inc
add
loope
out
jnp
add
cld
cmpsl
fcmovnb
lods
in
or
jnp
add
repz
cmovs
xchg
movsb
push
add
clc
daa
pushf
dec
add
jns
add
pop
add
aas
mov
add
popa
loope
lret
int
fmuls
add
mov
rcr
mov
mov
add
pop
jnp
sub
stc
jl
lock
dec
jns
out
cltd
inc
add
or
lret
mov
cmp
out
outsl
pop
popa
mov
add
jnp
add
jmp
add
add
mov
mov
decb
xor
add
addl
insb
add
or
inc
add
add
xchg
and
lea
xor
das
cwtl
sbb
frstor
push
push
add
lds
loopne
pop
add
add
add
add
repnz
adc
shlb
mov
pop
add
sbb
push
add
mov
add
inc
faddl
ss
cmp
push
in
or
inc
add
mov
cmpsb
add
add
add
and
pop
add
pusha
add
add
jg
lds
inc
aam
call
add
insl
jl
clc
or
daa
add
ljmp
stc
jmp
adc
and
stos
outsb
add
xchg
xor
test
cmc
dec
mov
pop
push
add
arpl
push
add
mov
mov
sub
hlt
stos
adc
push
add
iret
leave
pushf
cmp
inc
and
mov
add
lods
lahf
and
movsl
add
icebp
fld
cmpsb
ljmp
stc
ret
mov
or
fadds
add
jae
xor
push
ret
lods
les
data16
dec
add
add
ret
mov
out
adc
pushf
decl
aas
mov
sub
aad
xlat
push
add
xchg
xchg
add
add
adc
dec
add
loope
and
push
add
jmp
cltd
xorl
and
jne
je
xchg
sub
inc
dec
add
mov
add
cmpsb
push
cltd
inc
add
add
cltd
out
adc
outsl
loope
out
stos
idivl
add
and
add
jle
xor
test
sub
add
sbb
cmp
sub
push
mov
sahf
cmc
insl
out
mov
add
jecxz
or
inc
add
enter
lods
push
mov
rclb
add
add
add
lcall
add
add
add
sub
inc
add
bound
add
pop
add
btrl
add
dec
add
outsl
pop
bound
mov
mov
add
dec
add
add
nop
dec
mov
data16
xchg
bound
mov
movsl
push
add
cmp
and
add
adc
clc
movsl
sbb
add
adc
or
call
xchg
sub
add
jae
add
xor
sbb
add
add
mul
test
test
stos
mov
cmpsl
sahf
faddl
add
test
aas
loop
negb
add
add
addr16
add
cmp
xor
shll
add
mov
pop
in
inc
add
bound
nop
sbb
add
add
add
add
add
subb
add
push
mov
cmp
mov
insb
add
dec
add
leave
xchg
data16
leave
in
pop
and
test
add
xchg
mov
insb
add
adc
repnz
mov
or
pop
pop
add
add
or
inc
add
lahf
lods
adc
mov
mov
ficoms
or
xor
xchg
pop
add
adc
add
jmp
fldcw
sti
shl
sbb
lahf
imul
add
add
and
add
insl
pop
sub
mov
fwait
jge
add
xor
push
add
in
jae
cmc
nop
pop
pop
cmpsb
ret
dec
add
inc
data16
jns
out
lds
daa
mov
add
add
add
add
pop
add
mov
iret
mov
dec
addb
aam
sbb
dec
add
push
add
jp
sub
pop
sbb
xor
lock
dec
add
add
or
imul
jge
or
rcl
xor
aad
push
add
adc
insl
sti
jbe
dec
add
xor
add
xchg
mov
loop
jge
add
sarl
nop
mov
add
adcb
ret
lock
lcall
pop
cmp
xor
jb
movl
add
sti
dec
test
add
shll
je
jno
push
add
add
mov
add
mov
cwtl
cmpsl
ljmp
imul
add
jecxz
add
xchg
mov
mov
push
add
add
mov
sub
cmp
cwtl
inc
xchg
insl
call
sbb
pop
loope
add
add
xchg
loopne
insb
add
cmc
pop
mov
add
adc
pop
mov
cwtl
add
mov
cmpb
jnp
pop
add
mov
insl
popf
aad
add
or
sub
cmp
lret
xchg
sahf
pop
adc
add
cmpsl
mov
adc
mov
scas
imul
cmp
rolb
push
loopne
cmp
ja
pop
add
int
sub
in
cmc
in
rorl
inc
add
out
rcl
xchg
add
hlt
test
jecxz
xlat
mov
add
xchg
mov
mov
ret
pushf
movsl
pop
sbb
sbb
das
add
add
pop
add
iret
in
fsts
inc
xchg
pop
mov
jbe
or
add
push
add
out
stos
sub
mov
xor
lret
addb
sbb
imul
push
push
add
out
add
jb
mov
pushf
jb
mov
mov
shll
rcll
sahf
xor
cmp
add
fdivl
jnp
add
inc
add
ljmp
into
loop
lods
ds
orb
add
enter
add
and
setge
fistl
in
and
add
add
add
fstpl
add
in
mov
add
mov
popa
orl
xor
mov
lret
addr16
jge
or
push
add
jae
ficompl
inc
add
add
pop
nop
int3
mov
lods
lcall
sarb
push
add
adc
add
add
pop
pushf
dec
pop
add
mov
shll
nop
push
add
ret
insl
push
add
add
push
add
jge
pop
add
lret
out
push
les
mov
add
push
add
aaa
movsb
dec
cmpsl
imul
movsl
ret
gs
mov
add
add
add
insb
add
and
les
jmp
jae
inc
loope
sbb
cmpsl
inc
sti
daa
or
mov
inc
movsb
and
inc
insb
add
xor
sarl
adc
cwtl
movsb
jle
dec
add
pop
add
subb
add
inc
fwait
or
stc
add
dec
add
jge
add
cvttps2pi
subl
out
imulb
dec
add
nop
test
add
mov
or
add
mov
jae
pop
scas
xchg
and
aaa
hlt
adc
lahf
mov
fldcw
cltd
or
inc
add
add
or
xchg
loope
adc
jmp
add
in
or
loope
push
loope
adc
or
lcall
fiaddl
add
add
xchg
adc
xorb
jp
cli
je
ficoml
cmp
clc
and
mov
cs
add
add
xlat
or
add
mov
jmp
or
loopne
add
add
sbb
and
push
add
add
xchg
pop
add
ret
cmc
mov
outsl
add
lret
sub
scas
dec
and
mov
and
testl
push
outsl
hlt
out
stc
fstps
addr16
cli
das
add
loop
mov
and
pop
xchg
roll
cmp
sub
mov
pop
out
add
xchg
add
test
add
daa
mov
add
cmp
push
add
or
popa
ret
add
push
add
sub
test
lods
inc
cmp
add
lahf
divb
add
inc
xor
fdiv
push
sbb
jle
push
add
add
mov
add
sbb
stos
dec
add
xchg
leave
daa
popa
ljmp
into
lcall
inc
add
add
dec
mov
mov
pusha
add
dec
cmp
popf
mov
mov
add
arpl
add
inc
mov
add
add
lcall
aas
imul
dec
mov
add
jp
dec
aaa
dec
jg
sub
xchg
pop
add
repz
jge
add
lret
inc
xchg
test
ljmp
add
add
push
add
jecxz
out
jl
mov
mov
pop
mov
add
sbb
pusha
add
gs
add
mov
push
add
add
add
idivb
adc
add
out
add
or
push
inc
add
add
xchg
cmp
call
sarl
push
add
add
roll
add
or
jbe
sbb
pop
inc
add
xchg
sub
sub
out
add
pop
testb
mov
push
add
cmpsl
addb
add
movsb
ret
rorl
les
add
add
sbb
popf
int
je
inc
and
or
in
divb
add
xchg
mov
inc
lret
push
add
icebp
jmp
mov
das
inc
add
adc
mov
add
mov
jmp
out
scas
or
in
add
xchg
add
push
lret
mov
adc
pushf
adc
add
add
inc
jmp
sub
andb
or
outsb
add
mov
add
cwtl
xchg
shlb
pop
cwtl
mov
add
sub
sbb
imul
js
mov
jmp
add
or
movsl
repz
in
add
stos
pop
popf
jnp
add
add
push
stc
or
in
add
cli
mov
and
or
add
jns
dec
mov
inc
add
add
push
add
adc
or
and
mov
xor
pop
or
pop
add
add
add
push
add
call
mull
icebp
ljmp
insb
add
sti
loop
test
add
add
xchg
mov
repz
imull
add
lea
add
add
add
add
js
dec
dec
add
mov
add
add
add
add
inc
add
movsl
addr16
sub
push
repz
add
ds
fdivrl
add
mov
add
dec
xor
and
add
outsl
mov
cmp
ret
cmp
push
bound
sarl
enter
xor
adc
pusha
add
les
mov
add
lods
mov
insl
lods
or
popf
call
lahf
jl
fimuls
dec
add
scas
add
shl
fimull
mov
add
xchg
repnz
add
rolb
in
inc
add
add
add
or
add
sub
jecxz
int
dec
add
rcl
and
les
add
and
mov
mov
add
jns
add
mov
out
mov
add
jmp
add
add
loopne
int
aaa
xor
mov
lret
adc
mov
and
loopne
jns
shll
add
ror
add
add
add
test
add
jg
iret
dec
add
nop
adc
mov
add
add
outsl
xchg
cmp
add
add
xchg
push
in
in
je
and
clc
lds
mov
sbb
and
or
loope
dec
fsubrs
add
add
pushf
inc
jecxz
notb
mov
push
add
std
dec
add
add
mov
mov
jmp
add
icebp
bound
lret
inc
or
xor
and
bound
aas
lock
lcall
into
repz
stos
dec
add
dec
add
inc
cwtl
pop
lcall
dec
add
and
das
sub
sub
in
mov
dec
subb
or
pop
or
dec
cs
sub
add
cmp
mov
add
jo
iret
sub
hlt
test
add
jb
or
inc
add
adc
push
add
add
pop
outsb
add
ret
stos
aad
test
push
add
lea
sub
dec
add
xor
push
pop
mov
add
inc
add
add
imul
add
xor
adc
scas
xorl
rcl
mov
test
jle
inc
scas
shlb
dec
add
add
test
mov
jecxz
pop
push
cmp
sahf
adc
lds
add
mov
add
add
xchg
mov
mov
mov
std
and
add
cmp
lock
addr16
lcall
jl
shl
jle
inc
add
adc
lds
mov
pop
add
mov
test
add
add
in
xchg
ror
mov
cmpsl
jb
les
dec
add
mov
mov
lahf
arpl
add
mov
loop
ss
mov
add
add
add
aaa
mov
xchg
adc
add
add
cmp
pop
add
add
xor
clc
pop
pop
add
add
addr16
fisubs
int
inc
cli
pop
add
mov
enter
mov
mov
cmp
addl
sub
dec
add
add
add
mov
cmp
pop
xor
dec
mov
cmc
adc
leave
imul
xor
add
add
add
sahf
cld
nop
test
mov
cmp
clc
inc
add
mulb
mov
sub
cld
scas
dec
call
enter
fistl
mov
add
add
fucomi
push
dec
add
pushf
mov
sub
add
addr16
cli
xchg
jns
add
mov
add
les
add
shr
dec
jb
je
xchg
pop
add
scas
add
or
loopne
scas
xor
add
add
rclb
cmp
add
test
dec
jne
add
xor
lret
lret
sub
and
icebp
cld
popf
imul
or
sub
add
mov
jo
and
test
fstps
push
sti
xorl
add
push
add
jle
fimuls
jmp
add
add
add
ror
lret
daa
popa
or
xchg
aam
aam
mov
add
aaa
push
add
test
inc
add
mov
lea
adc
jp
sahf
int3
das
push
add
test
cmp
sahf
hlt
sub
rol
add
xchg
adc
inc
add
add
add
xchg
adc
fwait
adc
std
mov
add
push
lcall
sub
xchg
movsb
mov
stos
and
inc
add
test
add
in
je
sbb
add
add
add
add
add
sub
or
repz
add
and
jbe
fwait
push
add
lods
jb
movsl
push
add
push
xor
jg
cmp
add
pop
add
mov
jne
fcoml
inc
mov
add
add
dec
add
adc
out
call
add
jmp
dec
add
ljmp
mov
add
xor
outsl
inc
add
mov
cmp
insl
sub
in
std
dec
add
sub
mov
xlat
cmp
add
negb
data16
mov
dec
int
lds
push
je
out
sbb
decb
in
in
repz
add
pop
add
add
or
xor
add
movsb
into
jecxz
xor
fisttpll
mov
and
aam
add
xchg
bound
and
scas
and
mov
sahf
test
outsb
add
jp
stos
mov
inc
sbbl
push
push
xor
jb
insb
add
jle
jmp
aam
add
in
clc
mov
insl
or
jo
movsl
and
xor
outsb
add
cli
jo
push
add
add
mov
mov
add
mov
or
xchg
aam
sahf
iret
cld
rcrb
mov
jb
pop
or
movsb
jne
add
int
mov
jo
enter
dec
push
popf
or
xor
fwait
aaa
icebp
sbb
sub
nop
out
push
add
test
sbb
cmp
add
movsl
cs
push
pop
daa
dec
add
add
cltd
shl
lcall
dec
add
shrl
mov
in
sub
mov
cmp
mov
std
push
jecxz
mov
mov
das
xchg
inc
addr16
mov
mov
movl
push
add
es
dec
das
jno
add
or
gs
push
add
push
filds
xchg
movsl
adc
push
jmp
sbb
pop
add
cmc
add
add
fucomi
jp
negb
stos
loopne
insl
xor
adc
add
mov
or
icebp
movsl
mov
jg
lcall
or
aas
push
add
test
icebp
cmp
dec
push
add
add
jb
or
cmp
negl
sbb
inc
add
fdivs
mov
pop
cld
jg
repnz
add
add
cmp
push
add
add
add
js
fs
add
add
add
add
cmp
daa
in
xlat
loop
inc
jo
jnp
push
cmc
jmp
addl
out
lret
rcrl
add
cld
xchg
mov
cli
push
sbbl
lods
add
push
add
int
and
or
notl
add
jecxz
add
sub
add
popf
or
and
mov
mov
imul
mov
lea
add
add
lods
or
shlb
add
insl
in
pusha
add
add
xchg
pop
scas
mov
jbe
jne
xchg
mov
adc
and
andl
mov
pop
push
nop
gs
in
add
inc
add
add
stos
jmp
jmp
xchg
and
sbb
aad
loop
mov
test
imull
add
popf
pop
cs
push
scas
inc
jecxz
testl
jb
sub
cmpsl
pop
out
cmp
dec
or
cmp
add
add
scas
mov
xor
add
mov
or
ret
xor
fnstcw
or
lock
ret
lahf
mov
cmp
inc
add
loope
data16
push
add
add
add
int
dec
push
mov
mov
add
push
add
add
mov
add
push
add
and
add
add
ljmp
xor
add
fnstsw
and
adc
addr16
aas
cmp
add
bound
and
xor
scas
loop
scas
sbb
add
mov
add
add
add
sbb
add
or
sbb
in
fdivs
cmp
mov
mov
add
push
add
lahf
xchg
out
mov
lock
add
inc
out
add
add
pop
out
inc
mov
add
and
mov
xchg
out
addr16
push
add
scas
inc
sub
fcmove
add
aas
add
test
aas
jmp
xchg
mov
add
hlt
call
cli
jge
add
add
pop
add
cmp
insb
add
in
rcrb
add
add
add
add
add
add
xchg
arpl
aad
add
add
add
add
adc
mov
add
dec
add
pop
das
call
add
push
add
ret
jl
pop
sbb
add
sub
cmp
stos
add
in
xor
pusha
add
insl
icebp
jmp
dec
add
add
jnp
jle
scas
mov
push
mov
xchg
xchg
scas
xchg
mov
ret
jb
or
jg
add
cs
inc
add
out
cmp
xchg
jp
lahf
repz
mov
add
out
add
add
sbb
dec
add
cli
fsts
add
dec
fcompl
xchg
add
in
inc
add
xchg
dec
ret
jne
add
push
xor
pop
add
inc
add
add
sub
orl
and
mov
pop
addr16
add
cmp
xchg
push
add
pop
inc
xchg
xor
mov
add
add
out
add
sub
js
xchg
hlt
cmc
mov
add
push
cmp
push
dec
jae
f2xm1
inc
sbb
lahf
cmp
out
lcall
cmpsl
inc
lea
mov
mov
sub
movsb
pop
data16
xchg
lcall
out
mov
add
shrl
sub
add
push
add
add
sbb
adc
fs
add
mov
scas
out
lahf
pop
add
dec
xchg
cmp
pop
xlat
push
add
add
int
xor
sub
aas
aad
add
push
add
dec
xchg
rcrb
stos
sti
fnstenv
cmp
and
push
imul
dec
add
cli
pusha
add
mov
lret
lea
out
xor
fsubl
mov
rolb
add
add
add
mov
add
and
in
gs
sub
rorb
xor
push
push
add
sub
movsb
push
add
xor
inc
jmp
mov
std
and
mov
add
rorb
rcr
sbb
icebp
gs
add
data16
mov
pusha
add
faddl
std
loope
xchg
sbb
pop
loope
add
sub
sub
scas
fsts
mov
enter
fbstp
jno
add
add
loopne
and
or
movsl
jae
add
mov
add
push
add
icebp
jecxz
ja
add
out
cmp
iret
test
dec
pop
aaa
push
add
lea
add
cmpsb
testl
in
inc
int
add
hlt
pop
out
test
jne
pop
loop
sbbb
clc
pop
add
add
add
pusha
add
xchg
dec
add
push
negb
sbb
loopne
movsl
test
lods
ja
inc
add
add
mov
add
sub
dec
adcb
call
insb
add
sahf
pusha
add
inc
xchg
icebp
mov
add
fwait
cmp
add
xchg
mov
push
add
inc
addr16
add
add
jo
into
fcom
lds
lea
in
jg
imulb
add
call
add
mov
fcomps
add
frstor
mov
add
fdivrp
or
sub
lret
add
inc
add
add
mov
pop
pop
inc
gs
jnp
add
mov
xor
jmp
add
add
add
daa
sbb
mov
add
cmpsl
mov
sbb
jl
mov
in
int
in
lahf
dec
hlt
insb
add
test
mov
ficompl
and
add
add
add
xchg
popa
in
test
sub
dec
je
cmp
or
ret
sbb
arpl
rorb
adc
icebp
arpl
sarb
dec
add
xor
mov
add
mov
dec
add
add
ret
enter
test
gs
add
add
loope
xor
repnz
das
sub
xchg
sbb
mov
or
dec
add
add
mov
mov
adc
mov
adc
inc
fidivrl
sar
mov
adc
dec
add
mov
mov
mov
pushf
jbe
push
push
add
movsl
cmp
adc
add
adc
fwait
mov
pop
push
add
inc
lahf
xor
add
add
add
scas
mov
orl
cmpsl
jle
gs
nop
aaa
icebp
cmp
cmp
mov
add
adcb
sbbb
or
fidivrl
jge
sbb
add
lds
jb
in
dec
ret
add
insl
stos
pop
add
or
int3
xchg
jge
add
pop
aam
add
nop
orl
xlat
mov
jp
in
mov
mov
movsb
and
lahf
mov
mov
call
jb
inc
add
clc
bound
jne
vmovntpd
aam
fwait
rcl
setae
fmull
pop
pop
sbb
int3
push
push
add
je
mov
add
adc
xor
scas
adc
mov
mov
repnz
add
je
mov
push
add
add
adc
add
lcall
jmp
add
mull
pop
cmp
and
add
xchg
sbb
push
add
pop
fwait
jp
lret
fwait
ret
push
mov
daa
fisttpl
and
add
jae
add
lahf
fcmovnb
xchg
and
dec
mov
xchg
mov
pop
add
xchg
loope
ffree
xor
add
add
push
cmp
stos
sub
repnz
je
orl
repz
mov
add
add
add
popf
dec
nop
jno
out
add
mov
xor
add
add
out
cmpsb
ret
cld
test
adc
iret
jmp
add
adcb
lret
in
ljmp
fmull
xor
stos
and
mov
add
inc
add
ret
test
lea
push
add
data16
loop
adc
add
xchg
mov
add
pop
push
mov
adc
or
push
cli
push
add
mov
and
int3
das
or
xor
rorb
add
cwtl
aas
mov
add
pusha
add
int
dec
add
xor
sbb
cli
cmp
jo
push
add
sbb
adc
add
test
mov
pop
pop
mov
add
sahf
add
add
add
movsb
add
sub
xor
mov
sbb
andb
fistl
mov
push
add
or
or
je
shrb
add
push
add
add
mov
mov
cmpsl
mov
std
negl
add
add
jecxz
push
add
test
mov
in
fnsave
in
repz
je
mov
and
je
mov
test
lods
pop
sub
adc
dec
add
fdivrs
add
pop
add
dec
lods
dec
add
add
add
add
add
loopne
push
add
inc
add
add
mov
cmp
sbbb
call
sbb
cli
or
push
add
jle
jo
inc
stos
jae
mov
push
mov
cmovne
add
xor
push
add
ret
lret
je
add
add
add
mov
mov
mov
orl
mov
roll
add
and
cmpsl
nop
fistpll
int3
rcr
lds
inc
add
xor
pop
pop
dec
add
cmpsb
jo
sbb
mov
lock
inc
aam
add
xor
scas
sub
outsl
cmc
pop
add
gs
xor
faddp
lcall
rcl
cmc
orb
idivb
add
sahf
add
rcr
pop
sahf
pop
add
xchg
in
lret
add
add
or
sub
jbe
xchg
jmp
add
out
xor
cmp
fcoms
add
add
test
mov
lahf
and
xchg
pop
jle
insl
scas
xchg
add
loope
pop
cmc
inc
add
pop
add
inc
pop
mov
imul
data16
add
add
add
repnz
pusha
add
push
add
insb
add
jp
inc
add
push
mov
shl
mov
xchg
or
add
jge
in
lods
leave
cli
pop
popf
jne
add
add
lds
add
mov
add
dec
mov
and
inc
jg
jp
pushf
mov
add
sub
and
mov
inc
add
rolb
sti
pop
add
sub
add
les
xor
pop
add
lahf
test
add
daa
sub
lahf
jne
ret
mov
js
dec
add
add
add
add
lds
sub
imul
test
add
mov
inc
add
cmp
stos
jns
hlt
pop
add
add
shrb
das
fwait
jp
inc
shl
lcall
outsb
add
mov
add
and
pushf
or
adc
pop
add
xchg
mov
add
xor
xchg
cmp
add
dec
add
add
fbld
add
ljmp
outsl
adc
mov
insb
add
cmpsb
add
into
bound
adc
adc
enter
add
test
jno
add
iret
add
mov
into
pop
into
sub
out
test
add
lcall
or
cltd
mov
scas
sbb
add
sahf
jnp
sahf
das
sub
aam
add
add
js
jb
jmp
int3
xchg
and
and
mov
add
dec
mov
xchg
or
add
and
rclb
cwtl
icebp
and
sahf
or
les
push
add
add
push
add
dec
xor
add
add
lods
loopne
lret
mov
add
in
movsl
or
add
in
addr16
add
clc
popf
icebp
mov
jnp
add
xchg
mov
es
pop
xor
jns
fcomip
push
in
push
add
insl
popf
mov
pop
add
std
out
sub
cmc
jnp
add
push
add
and
dec
add
in
pop
shlb
add
mov
cmp
cld
clc
push
add
insl
inc
and
jecxz
add
mov
add
xor
add
mov
scas
cmp
jns
add
sti
scas
hlt
xchg
arpl
jnp
mov
push
add
add
add
mov
dec
jecxz
jmp
imul
data16
sbb
fisubl
xchg
sbb
add
insb
add
sbb
rcll
dec
adc
add
add
faddp
push
add
add
arpl
add
jle
rcrl
outsb
add
sahf
hlt
aas
pop
add
sub
fidivrl
add
add
push
add
scas
mov
in
and
lret
add
xor
ret
pop
shrl
mov
daa
les
add
add
scas
xor
mov
add
mov
pop
and
adc
fwait
xchg
xchg
pop
orl
add
in
push
mov
add
adc
add
xor
add
add
dec
fdivrs
add
and
add
or
inc
add
add
mov
jl
add
cmp
add
add
and
xchg
pop
pushf
add
add
mov
mov
scas
call
add
pop
add
mov
fisubrl
fcmovu
fiaddl
xchg
add
sbb
lahf
dec
fisttpll
xchg
xor
jo
sub
clc
push
add
fiadds
fisubrl
inc
add
mov
test
add
pop
jp
mov
add
lock
mov
add
xchg
btc
add
adc
negb
jecxz
pop
rcrl
mov
jnp
sbb
pop
add
lods
push
add
dec
add
aas
test
xor
sbb
sarb
mov
and
dec
enter
sahf
sbb
mov
pop
mov
sbb
out
in
call
pop
fnsave
add
test
jne
add
add
add
cld
mov
js
repz
xor
mov
mov
add
test
push
add
dec
imul
jg
fdivrs
cmp
orb
add
add
mov
mov
rol
shll
add
cmp
pop
add
lret
sub
add
add
scas
push
add
inc
add
sub
dec
add
add
xchg
inc
ret
data16
sub
or
cmc
flds
fisttpll
int3
push
add
orb
add
inc
add
cmp
and
mov
adc
lret
in
add
dec
sbb
ficomps
xchg
cli
xor
out
sbb
out
push
add
dec
add
fisubrl
into
data16
add
add
pop
out
jae
iret
lret
xchg
insl
push
add
pop
add
cmp
imul
or
inc
add
ds
push
repz
add
inc
fsubrl
and
cmp
popl
icebp
push
add
divl
add
add
mov
fcom
mov
insl
outsb
add
cmc
xchg
test
test
mov
jae
sub
and
pop
daa
in
sti
lahf
mov
add
xchg
or
xor
add
pop
jecxz
push
add
add
cmp
movsb
dec
add
pop
jb
pop
pop
add
add
add
add
hlt
adc
xlat
scas
mov
add
add
add
pop
ss
add
add
xor
mov
push
inc
add
inc
aam
dec
add
add
jno
jae
mov
jno
or
mov
hlt
mov
lss
vpand
cmp
push
add
add
add
cmpsb
add
mov
insl
mov
lret
popa
sbb
mov
add
icebp
jp
and
ljmp
mov
std
jmp
xlat
in
inc
or
fwait
xchg
ljmp
pop
add
popf
int3
mov
lret
fdivs
jg
das
jmp
add
or
pop
aaa
mov
fisubrl
scas
in
sub
dec
xchg
cmp
fidivrl
mov
daa
xor
ret
loope
add
outsb
add
test
mov
enter
add
dec
imul
fistpl
test
adc
push
add
shll
add
add
xchg
mov
js
mov
aad
lcall
clc
out
add
aas
lock
xor
xchg
mov
dec
xchg
ljmp
cmpsb
mov
add
gs
pcmpeqb
fidivrl
cmp
xlat
loopne
xchg
sub
add
sahf
add
add
add
push
add
add
add
add
arpl
cmpl
mov
inc
andb
mov
add
jbe
repz
jb
mov
add
add
jb
movb
gs
add
aad
scas
adc
mov
out
add
sarl
add
add
xor
cmp
clc
sub
mov
clc
repz
mov
xchg
push
add
xlat
inc
add
add
lret
cmc
je
cmp
and
sub
push
mov
xrelease
jbe
das
adc
fisubrl
cwtl
rolb
in
add
stc
mov
add
xchg
add
cmp
jno
xor
pop
insb
add
fcompl
leave
bound
iret
mov
imul
add
jae
xchg
dec
add
adc
sti
fisubl
mov
add
and
fwait
pop
sub
xor
xchg
sub
add
push
add
scas
xor
pop
vsubss
add
int3
test
ret
inc
add
add
and
dec
add
jle
addb
cmp
add
push
aas
bnd
inc
add
out
scas
adc
add
sbb
adc
add
mov
sti
hlt
ret
ljmp
add
and
lods
cmp
fcmovbe
jecxz
cld
mov
popa
mov
add
push
add
dec
add
xchg
pop
shll
sbb
add
cmp
pushf
sbb
pusha
add
arpl
push
add
lods
js
mov
nop
mov
inc
shlb
mov
dec
cwtl
test
addr16
mov
jle
stos
add
lods
add
out
movsb
es
fsubrs
add
add
add
dec
adc
jle
stc
call
xor
add
inc
xchg
xchg
aaa
imul
add
sub
out
fldcw
sub
cmc
add
lock
mov
or
stos
or
or
or
and
xor
mov
bound
data16
pop
and
scas
sub
add
hlt
int3
hlt
lahf
enter
add
add
add
sahf
dec
add
sahf
fistpl
add
inc
add
fisubs
add
lret
add
add
push
jg
mov
add
andb
add
push
lock
push
in
pop
add
xor
or
inc
pop
mov
out
add
sub
repz
push
add
mov
add
add
add
lea
add
add
add
out
add
stc
movb
add
sbb
mov
jle
icebp
clc
call
add
xor
popf
or
mov
add
mov
je
out
add
add
in
jecxz
add
add
mov
add
pop
add
outsl
ja
add
addr16
or
mov
adc
movsl
push
repz
and
sub
scas
das
movsb
out
adc
push
add
cli
push
add
fldl2t
sbb
and
stc
xchg
push
jg
nop
dec
add
add
cmpb
push
mov
add
xchg
test
fdivrp
int3
pushf
faddl
xor
adc
fisubrs
movsb
pop
aad
add
sbbl
add
nop
adc
jb
mov
xchg
add
add
cmp
test
sar
rcll
rcrb
mov
pushf
in
rol
jle
push
add
push
add
shl
popa
enter
test
mov
xchg
gs
lods
or
pop
add
inc
add
and
into
pop
adc
push
rclb
inc
add
loop
add
add
fnstsw
pop
std
idiv
je
push
pop
add
add
je
lcall
add
xchg
mul
push
add
push
add
icebp
dec
or
adc
adc
adc
jg
add
les
add
or
subb
xor
js
fsubrl
adc
sub
xor
rol
cli
push
add
mov
xchg
ret
imul
daa
lret
add
add
add
stc
pop
add
sbb
add
xchg
leave
test
add
inc
add
js
gs
rclb
outsl
pop
add
negl
jge
sbb
ja
add
add
pop
add
add
xchg
repnz
or
add
cmpb
xchg
add
stos
and
dec
add
push
add
imul
lock
imul
mov
scas
cmp
mov
repnz
pusha
add
test
out
sahf
notl
add
add
sub
fmuls
fsub
xlat
add
push
add
out
sbb
outsb
add
mov
add
push
clc
mov
movsb
sbb
cmc
icebp
pop
add
push
xor
out
jb
mov
pushf
push
add
add
dec
arpl
scas
pop
sarl
add
jecxz
addb
mov
aam
loopne
sub
mov
push
add
pusha
add
cli
mov
add
adc
dec
test
push
pop
cmp
push
add
pusha
add
insb
add
in
jbe
iret
movsl
iret
lds
add
mov
add
cmpsb
out
xchg
adc
ret
or
jno
mov
add
push
jmp
jo
jecxz
add
add
sbb
mov
add
xor
dec
add
push
add
push
push
int
out
cmp
add
add
mov
enter
xchg
dec
add
iret
pop
add
loopne
pusha
add
adc
mov
adc
add
and
bound
push
add
add
lahf
fdiv
xchg
add
xor
push
add
test
inc
add
xchg
push
cltd
rol
cmp
outsl
stc
xchg
add
add
add
add
lock
or
xchg
repnz
hlt
xorb
sub
ret
mov
cld
mov
add
sbb
push
add
add
mov
cmp
push
add
add
sbb
sub
pop
divl
negb
or
sbb
inc
dec
add
push
add
xchg
imul
add
add
add
and
mov
adc
add
mov
pop
pop
adc
adc
stos
in
rcll
aaa
call
and
xor
cmpsl
mov
lea
addr16
pop
push
xorl
or
adc
add
inc
mov
add
add
ret
bound
insb
add
sub
dec
cmc
nop
aad
stos
lret
xor
data16
and
push
cmp
sbb
out
or
add
in
in
js
adc
out
pop
add
mov
mov
pop
stos
dec
inc
clc
lods
loope
add
pop
xchg
sub
ljmp
add
dec
add
add
rcll
imul
arpl
pop
mov
pop
aam
add
add
lahf
int3
inc
add
fcoml
test
icebp
shl
ljmp
add
xor
sub
lods
roll
push
rcll
add
mov
dec
or
pop
pop
movsb
mov
and
pop
scas
lock
add
shlb
add
insb
add
xchg
xchg
je
push
add
aam
loope
sub
out
test
dec
mov
cmc
insl
js
fwait
pusha
add
cmpsb
pop
std
and
inc
add
push
push
clc
add
fwait
lahf
jecxz
pop
add
add
jae
pushf
push
add
ret
movsb
xor
repnz
add
jbe
bound
iret
insl
ficompl
push
sub
jno
add
add
aad
and
test
mov
sub
add
imul
add
popa
sub
clc
cmp
add
cli
push
add
push
add
cmp
mov
add
and
test
xchg
ds
push
add
add
xor
or
push
add
pusha
add
clc
add
daa
add
sbb
lret
add
lcall
pusha
add
add
xchg
and
sbb
sbb
jo
ret
movsl
icebp
jle
add
mov
add
push
add
rcrb
lea
inc
add
cwtl
push
add
pop
fwait
imul
and
mov
jge
out
sbb
ljmp
leave
inc
add
incl
pop
push
add
fdivs
pop
add
adc
pop
xor
xchg
testb
jbe
or
shll
pop
les
dec
add
mov
add
sarl
adc
sub
sub
outsb
add
pushf
fnstsw
add
insb
add
fnsave
sub
push
add
mov
or
daa
pop
add
add
ja
dec
dec
fucomi
adc
cmpb
push
imul
dec
aaa
std
lock
ret
in
jno
add
repz
add
mov
outsb
add
dec
and
test
bound
xchg
jo
out
pop
sub
js
push
add
inc
into
sbb
add
leave
pop
mov
push
out
sbb
ja
add
or
mov
das
xor
insb
add
jecxz
add
add
in
ljmp
test
mov
cmp
or
sub
fs
nop
jbe
inc
dec
add
pop
stos
in
adc
jae
cmp
cmp
sub
mov
add
fistl
push
mov
mov
adc
dec
add
repnz
fisubs
gs
add
sbb
paddusb
and
sbb
jg
shl
test
scas
insb
add
mov
dec
add
mov
xchg
rcrl
add
add
xchg
or
test
out
pusha
add
jnp
jl
sbb
shlb
add
add
fistl
scas
sti
jbe
sub
xor
add
jmp
add
jg
push
add
jmp
and
aas
inc
out
out
inc
add
inc
add
mov
ret
clc
jne
add
stc
fisubrl
clc
stc
aam
lahf
cmovns
or
cwtl
jge
or
mov
stos
mov
nop
test
bnd
add
icebp
and
imul
out
add
push
sbb
out
push
add
add
inc
and
lock
add
xchg
test
popa
cmp
lds
xchg
fwait
aas
and
add
jnp
roll
add
and
stos
pand
xchg
sub
pop
xchg
mov
dec
add
dec
add
inc
add
and
and
mov
mov
je
jne
mov
push
add
mov
adc
loope
jbe
xchg
add
add
add
add
stos
xchg
cmp
test
push
add
lahf
imul
sbb
mov
fistpll
add
stos
fisubrs
xor
jae
add
fwait
lock
add
mov
mov
mov
mov
add
shlb
add
jg
add
mov
add
add
add
cmp
std
daa
insb
add
add
xor
jl
icebp
xchg
test
fnstcw
mov
pop
add
pusha
add
pop
xlat
dec
add
jge
xlat
jns
add
add
add
jge
xlat
sbb
adc
add
dec
add
daa
mov
add
adc
and
push
push
add
dec
mov
add
ret
test
test
add
add
inc
sub
dec
bound
jae
add
cmp
vpandn
add
jne
std
push
add
ret
jbe
jp
fstpl
inc
add
add
icebp
mov
or
test
dec
stos
fadd
or
add
add
add
test
insb
add
add
xor
jo
jo
pusha
add
test
jp
sbb
cmpsb
testb
and
jecxz
cli
mov
sub
xchg
fisubrl
add
js
add
add
in
aaa
push
cmpsb
idivl
push
push
add
jae
xor
das
mov
lret
push
add
out
add
fwait
sub
jbe
pop
fcomps
mov
call
fcoms
lock
add
add
daa
mov
mov
fbstp
add
add
push
loopne
testl
add
add
pop
pop
aad
sub
add
add
cwtl
cltd
ljmp
add
in
push
add
sub
scas
leave
imul
dec
add
testl
jg
out
add
cmp
fisubs
sbb
das
pop
add
inc
add
sub
ds
mov
jp
mov
cltd
leave
jg
lea
push
add
add
add
mov
push
add
add
mov
add
cld
dec
add
sbb
xchg
sub
lock
add
sub
push
out
mov
shrb
test
lret
fbld
add
add
cmp
add
stos
push
add
add
mov
mov
test
popf
and
push
add
add
outsl
insl
pop
fldenv
mov
add
add
add
add
shr
add
dec
or
aad
popa
push
add
inc
add
pop
add
xchg
add
add
gs
imul
hlt
mov
dec
add
add
loope
scas
lret
mov
in
mov
aam
adc
add
xor
jae
add
add
adc
cmp
push
cmp
fdivrp
inc
stos
hlt
xlat
es
dec
jo
repnz
outsl
fisttpl
add
add
pop
dec
jae
inc
add
int3
dec
lahf
sub
pop
in
push
mov
xchg
push
sub
add
add
loope
cmp
adc
jbe
jmp
in
loope
add
jno
add
push
add
xlat
int3
mov
fldcw
mov
popa
push
add
sbb
mov
loop
add
imul
loope
cmpsl
sub
std
dec
imul
push
mov
pop
iret
inc
outsl
mov
dec
add
outsl
push
add
imul
xor
dec
pop
add
inc
sub
mov
add
inc
xchg
push
outsl
test
mov
sbb
repnz
adc
repz
push
add
mov
or
xor
sbb
pop
movsl
insl
fmulp
jl
fwait
mov
lods
xor
mov
jp
sub
add
lods
or
stos
stos
lock
test
add
out
mov
jns
gs
lret
dec
inc
add
imul
mov
mov
add
sbb
fs
xchg
pop
xchg
xchg
rorl
mov
test
arpl
pop
imul
ret
add
iret
inc
cs
inc
add
pop
add
inc
add
adc
sub
hlt
stos
mov
inc
mov
add
cwtl
dec
xor
xor
pop
add
xchg
and
mov
pushf
mov
lret
jno
mov
and
jbe
cmp
mov
dec
lret
inc
lea
add
add
mov
adc
loope
popf
lret
push
add
shlb
add
nop
mov
loopne
idiv
fldenv
jbe
pop
add
and
int
add
mov
loopne
dec
repz
or
mov
add
mov
push
adc
and
xchg
sbb
jmp
inc
add
add
dec
add
pop
add
inc
add
push
pop
mov
leave
imul
sub
int
lahf
xchg
sub
or
ja
pop
cmp
icebp
test
jno
xorl
add
add
sub
sbb
inc
inc
sub
sbb
and
xlat
rorb
daa
hlt
mov
pushf
mov
add
das
movl
hlt
dec
add
clc
cwtl
fdivp
sub
inc
add
adc
cmp
icebp
roll
movsb
jae
mov
add
lods
pop
sub
mov
cmp
or
xchg
add
add
cwtl
add
jnp
int
add
add
push
add
insl
push
add
mov
jmp
mov
xor
xchg
mov
pop
cmpsb
pop
enter
lea
add
test
add
add
add
mov
add
pop
loop
mov
sbb
dec
test
add
mov
add
add
push
add
rcl
add
test
or
aam
add
inc
add
inc
add
add
inc
addr16
or
pop
add
or
enter
jno
add
sbb
enter
add
scas
jl
pop
cld
lret
outsl
lcall
sbb
mov
xchg
add
add
add
sbb
push
mov
lods
outsb
add
sbb
add
add
icebp
push
add
call
cs
push
add
mov
add
adc
mov
rolb
adc
add
mov
out
stc
lea
dec
sahf
imul
add
xlat
mov
popa
arpl
add
mov
lahf
sbb
stc
int3
stc
ret
or
mov
push
add
add
pop
cld
xor
push
add
add
add
outsl
stos
repnz
popf
inc
add
add
inc
negb
inc
ljmp
and
push
out
jbe
xor
add
mov
lock
pop
js
sti
jae
leave
lea
add
add
data16
sbb
adc
add
shlb
add
pop
mov
sbb
xchg
int3
popa
pop
add
add
jp
scas
inc
das
xchg
push
add
in
mov
test
movsb
mov
into
mov
cmc
out
mov
add
add
stos
xchg
add
xchg
cmp
fstl
loopne
imul
add
add
lds
lret
cmpsl
popf
idiv
test
pop
add
andb
stc
inc
ret
aam
xchg
sub
js
icebp
dec
fcomps
dec
add
lret
pop
add
sbb
inc
push
add
mov
push
add
add
xor
add
jnp
in
cltd
and
jo
mov
mov
pop
jne
add
aaa
imul
add
dec
add
insl
xor
or
add
ret
aas
inc
out
cmpsb
jge
add
add
insb
add
mov
pusha
add
add
add
add
ret
out
clc
int
add
clc
call
call
inc
cmp
enter
loopne
add
add
mov
sti
add
inc
add
add
add
add
cmp
add
jno
cmp
add
mov
add
orb
add
jle
test
cmp
jle
stc
xchg
lock
mov
in
ljmp
add
inc
pop
and
add
add
mov
mov
out
test
leave
pop
add
xchg
mov
shrb
imul
adc
shr
ret
push
shrb
add
in
pop
add
add
add
and
add
repnz
mov
add
add
or
inc
das
incl
or
ret
push
add
mov
cmpb
push
add
add
add
imul
mov
aam
pushf
outsb
add
sbb
inc
push
int3
and
push
add
add
lods
mov
fldl2e
push
mov
push
add
sub
add
add
vpshuflw
fwait
xor
leave
sbb
xor
test
pop
icebp
mov
and
inc
in
sub
call
fistl
sub
test
jo
xor
jmp
sbb
lea
test
add
push
add
add
pop
xor
je
ja
xchg
sahf
repnz
add
sbb
and
xor
fiadds
and
insl
mov
add
les
inc
leave
in
in
add
dec
aaa
or
cmp
arpl
pop
mov
stos
shll
add
xchg
in
add
aam
lret
pop
add
xchg
aas
data16
dec
add
out
add
xchg
sahf
xor
sbb
pop
add
out
add
xor
pop
add
add
into
mov
add
add
fimull
adc
in
sar
add
xor
ret
cmc
pop
push
add
add
inc
push
add
add
jg
or
mov
cmp
mov
add
leave
pop
add
ja
add
inc
add
loope
in
add
int3
arpl
xchg
mov
add
or
lock
add
mov
mov
add
add
ja
sbb
add
mov
sti
xor
out
xchg
add
and
xchg
inc
dec
test
mov
insl
push
add
push
add
aaa
mov
xor
in
bsf
jle
or
ror
in
jae
ror
xchg
fistpll
cmp
scas
shl
jecxz
jo
inc
mov
dec
add
int3
sahf
add
jl
pop
add
cmpsl
adc
push
add
xorb
adc
add
push
add
aaa
mov
add
adc
shll
add
push
aas
xchg
mov
add
std
je
or
cli
mov
add
inc
cmpb
int
dec
add
cmpsl
inc
push
add
push
add
aas
cli
push
add
or
addb
xchg
push
add
xchg
fdivrl
push
fisubs
add
add
lret
out
test
int3
add
movsl
or
xlat
mov
add
iret
mov
add
imull
add
in
mov
testl
sub
ljmp
inc
add
add
jg
push
add
sbb
add
dec
in
push
add
sub
xchg
or
fwait
mov
or
pop
add
sub
jne
add
push
add
jb
sti
sub
mov
cmp
in
js
adc
inc
add
xchg
roll
pop
insl
loope
neg
fcomps
mov
xor
jns
add
int3
adc
add
fsubrl
mov
adc
cmc
or
daa
and
pusha
add
add
out
mov
add
push
add
enter
mov
xor
daa
shlb
repz
cmp
add
add
inc
add
daa
mov
test
je
xchg
mov
popa
lret
lock
dec
and
stc
test
ljmp
inc
add
cvtps2pd
push
add
xchg
test
decb
add
jns
std
insl
addr16
aad
add
fimuls
add
out
sub
jge
sbb
xchg
popa
cld
fbstp
add
mov
mov
loop
out
xchg
pop
jnp
test
repz
lods
inc
clc
out
cmp
lock
add
aad
add
add
int
add
or
cli
cmp
decl
lds
add
add
lock
inc
pop
add
add
add
or
mov
add
add
add
mov
shr
gs
imul
les
add
push
add
jb
sbb
fcoml
xchg
xor
iret
clc
cmp
or
pushf
inc
xchg
clc
mov
call
jle
cmp
jle
xor
mov
add
movsb
rclb
mov
inc
add
add
pop
add
mov
add
data16
add
fldl2t
jecxz
add
addr16
mov
add
add
inc
loopne
dec
mov
aas
js
sbb
mov
or
mov
das
popf
rolb
add
roll
daa
push
add
mov
lods
insl
aam
add
sahf
xchg
sub
dec
add
add
add
int3
int
sub
mov
sub
add
sub
shrb
xchg
pop
daa
call
xrstor
jae
sub
pusha
add
add
repz
hlt
rcll
add
sub
add
push
popf
clc
xchg
mov
sti
test
lds
dec
add
cmp
gs
add
mov
lret
jecxz
jg
jnp
or
push
sub
add
add
push
add
sarb
mov
pushf
xor
dec
insl
pop
add
mov
mov
or
add
push
insl
jo
lcall
pop
imul
cli
in
add
sub
xchg
repnz
popa
rclb
xchg
adc
insb
add
add
int
ffree
or
enter
xor
xchg
div
shlb
mov
lahf
add
imul
add
mov
mov
call
repz
out
push
add
fwait
add
add
push
add
inc
add
cmp
jg
adc
cwtl
test
loop
add
pop
add
mov
add
int
jmp
sbb
add
call
add
mov
data16
scas
or
in
popa
and
data16
dec
add
xor
sarb
ficoml
xor
cltd
push
add
mov
add
mov
mov
ja
hlt
aas
test
add
mov
and
inc
add
pop
psubsw
add
add
lea
xor
out
loopne
cmp
xor
dec
add
cld
pop
add
and
out
inc
add
jbe
insl
insb
add
insl
inc
xchg
sti
lahf
pushf
je
inc
add
jae
cld
add
rcrl
add
mov
add
add
pop
sbb
or
mov
push
pop
in
jecxz
and
inc
rol
push
jl
dec
in
pusha
add
add
out
push
add
add
cmp
inc
in
mov
add
lret
add
add
xor
lock
push
leave
lahf
cmp
xor
imul
mov
fstl
iret
xchg
cmp
cld
sub
aam
test
aas
fisubl
int3
add
aaa
and
sub
fisttpl
adc
sub
mov
add
aas
in
stc
sub
mov
add
cmp
lods
outsb
add
and
ret
mov
add
jo
outsb
add
sub
add
jp
cld
mov
mov
xor
das
fidivl
hlt
into
adcb
aaa
and
test
into
jbe
add
roll
cmpsb
add
cmp
push
add
out
out
mov
xor
pcmpeqb
rolb
out
xor
mov
and
lds
bound
das
aaa
int
push
dec
imul
rolb
stc
pop
add
sti
fnstenv
add
add
add
add
jae
add
mov
inc
add
sbb
out
sub
mov
jnp
out
xchg
pop
add
fcmovb
adc
add
dec
enter
add
mov
stos
inc
add
fmull
xchg
sub
add
fadds
add
mov
or
fdivs
out
mov
add
sahf
fwait
add
test
sub
int
add
mov
pop
aaa
fiaddl
add
sub
push
add
add
sahf
lret
adc
js
call
jmp
iret
pop
loop
add
mov
lcall
enter
cmp
sbb
add
gs
or
jns
shlb
cmp
repnz
xchg
sbb
push
aaa
icebp
add
push
mov
cmc
js
xor
sub
add
loope
stos
xlat
xlat
or
icebp
clc
fadd
sbb
cmp
add
aam
jae
stos
into
ja
add
mov
mov
add
insl
lods
pop
adcb
add
dec
add
popf
out
in
pop
add
and
aad
add
add
xor
mov
pop
add
pop
enter
add
jge
dec
add
inc
stos
jo
stos
or
lock
add
aaa
daa
aaa
or
add
add
sti
iret
xchg
xchg
hlt
and
dec
add
jge
mov
add
or
dec
add
and
lcall
xchg
iret
ret
push
add
stos
aad
jl
inc
pusha
add
xchg
movl
aad
add
aam
add
insb
add
add
add
push
ljmp
mov
sti
ret
test
add
jle
arpl
das
data16
add
push
add
test
rcrl
fdiv
cli
jno
mov
cmpsl
mov
and
jle
insb
add
jp
lock
pop
repz
insl
and
out
push
xchg
mov
and
arpl
add
pop
jmp
arpl
and
dec
ret
stos
add
je
mov
jmp
add
or
lcall
xor
push
add
pop
iret
std
xlat
pop
outsl
mov
shl
cmp
out
push
add
add
aas
cmpsb
sahf
jecxz
pop
add
in
add
dec
mov
add
push
add
xchg
sbb
sbb
pop
add
add
inc
add
jne
inc
add
fimull
push
add
lods
test
sub
add
mov
add
mov
out
push
add
cmp
add
mov
add
dec
add
xor
xchg
sub
push
pusha
add
add
xor
fdiv
xor
add
mov
add
insl
add
add
adc
rcl
mov
frstor
sti
mov
add
daa
xchg
add
out
movsl
dec
add
fisubs
mov
out
xor
pop
add
or
out
add
add
mov
sahf
cwtl
inc
xor
adc
lahf
repz
push
test
lret
mov
or
or
push
add
loope
adc
add
aad
mov
inc
add
mov
add
cli
mov
xor
inc
sarb
mov
adcl
add
mov
loopne
add
mov
loop
or
lahf
mov
add
or
enter
and
mov
mov
add
out
push
add
add
jne
mov
dec
inc
add
pop
push
cltd
mov
add
add
or
pop
add
pop
xchg
lret
test
add
inc
mov
cwtl
insb
add
movsb
jecxz
add
sub
add
mov
add
mov
add
mov
mov
add
lret
add
sbb
push
add
xchg
fsubp
mov
and
das
pop
and
test
in
mov
add
pop
add
push
add
aaa
adc
fdivrl
movsl
sbb
push
add
add
subb
add
lods
mov
lds
adc
cmc
loop
xor
rolb
add
shl
push
add
stos
and
test
cld
push
jbe
call
sahf
dec
mov
add
add
out
imul
add
add
pop
rcrl
aad
add
loopne
add
add
add
cmp
jbe
sahf
xor
mov
rcl
mov
arpl
insb
add
inc
add
xor
dec
mov
rorl
dec
add
sarb
or
imul
push
xor
jno
add
sub
and
js
bound
jb
dec
add
lods
xor
cmp
jnp
pop
add
add
or
jo
jbe
cmp
mov
jge
add
add
aad
and
pop
cmp
jge
add
add
adc
loopne
dec
add
jp
cltd
test
mov
cmp
incb
adc
lcall
add
cmp
push
mov
sub
cs
out
xchg
insb
add
ja
pusha
add
jl
repnz
mov
lods
jle
cli
push
add
mov
add
add
cmpl
xchg
fldenv
add
fcompl
rcrb
jns
enter
add
add
mov
data16
inc
add
add
mov
jns
ficompl
popl
daa
aaa
mov
popf
fstp
mov
test
sbb
ret
xchg
ficoms
mov
add
add
xchg
test
mov
add
add
rcr
jge
add
add
cmpb
aam
lret
sti
rolb
pop
clc
lods
or
outsl
andb
mov
fstpt
add
add
neg
daa
outsb
add
inc
add
call
sub
test
xor
xchg
mov
add
add
enter
add
jae
or
addr16
xor
mov
add
arpl
outsl
mov
ja
lea
add
pop
jle
mov
mov
incb
add
xchg
mov
sbb
push
mov
rolb
jbe
movb
add
xchg
leave
xor
daa
out
or
movsl
xor
daa
jmp
pop
push
cmpsl
clc
dec
add
push
es
inc
add
dec
add
pusha
add
ja
in
lret
mov
je
lret
in
arpl
mov
pusha
add
inc
outsb
add
call
or
add
outsb
add
movsb
aaa
in
xchg
pusha
add
add
icebp
xchg
out
loop
push
cli
fwait
in
arpl
add
jecxz
mov
scas
in
or
mov
or
mov
push
add
xchg
dec
add
leave
xchg
stc
outsl
push
add
add
lods
addr16
jecxz
das
adc
cld
inc
jmp
pushf
mov
mov
test
pop
and
faddp
add
add
add
add
mov
mov
mov
inc
add
add
fstps
sbb
lds
js
xchg
pushf
clc
push
jne
xchg
and
je
frstor
mov
pusha
add
and
pusha
add
addr16
mov
out
fdiv
or
adc
je
push
add
and
dec
add
adc
push
add
test
test
mov
sbb
lret
enter
icebp
push
add
cmc
push
lods
xor
add
mov
jns
add
jns
adc
jne
add
xchg
add
loopne
add
pop
mov
sti
mov
out
sub
jbe
push
add
inc
decb
roll
inc
lahf
dec
add
mov
add
xor
or
and
mov
push
add
add
inc
movsl
shlb
aad
ds
shlb
scas
xchg
jg
pop
add
add
xor
jno
subb
push
add
xchg
xor
xor
aas
adc
add
popl
dec
add
add
inc
add
mov
add
lods
psrld
sbb
or
add
push
gs
cltd
cmp
xchg
mov
add
cmp
movsl
pop
add
fisubl
push
add
add
inc
add
adc
add
je
insl
jo
scas
jecxz
lods
pop
inc
add
xchg
sub
movsl
cmp
scas
jp
xor
leave
sbb
int
add
pop
test
test
test
mov
cmp
cmp
add
push
iret
mov
mov
outsl
ficoms
add
push
push
fcmovu
std
xor
xchg
mov
addr16
lahf
xor
xchg
pop
add
add
lods
mov
add
inc
or
dec
add
mov
mov
pop
inc
jp
fmull
inc
div
outsl
jge
dec
add
and
negb
sub
popa
and
popa
mov
insl
cmp
pop
add
jne
cmpsl
adcl
jne
jg
add
adc
sub
ljmp
cmp
xor
or
and
xchg
aam
dec
add
pop
jno
mov
add
nop
sahf
mov
add
jno
fwait
mov
addl
sub
lds
add
movsb
sub
jae
jbe
jbe
mov
mov
xor
test
add
add
shll
pop
inc
jae
shrl
add
mov
add
mov
lahf
mov
fsubp
jns
add
leave
jmp
scas
adc
or
enter
lret
out
fnstenv
mov
notl
adc
mov
pop
testl
add
mov
cs
dec
add
sub
cwtl
cmp
sbb
add
fsubs
add
add
fstpt
add
mov
mov
cmp
mov
repnz
push
add
aaa
les
pop
popa
jge
icebp
jbe
push
sbb
xlat
jbe
jae
lret
insb
add
add
test
jne
add
push
add
rol
out
add
sbb
cmp
call
mov
aam
pop
dec
add
add
add
cmp
inc
add
add
xchg
inc
add
add
sub
pop
movsb
add
dec
xchg
sub
add
lods
popf
fidivs
int3
cmp
dec
and
js
cli
mov
mov
shl
test
int3
inc
add
add
add
cmc
jnp
jne
inc
add
lcall
mov
jnp
cmc
test
or
mov
add
add
add
sbbl
test
add
inc
add
add
add
pop
lahf
add
clc
adc
sub
je
pushl
pop
sub
or
insb
add
shlb
sub
mov
ljmp
or
fimull
out
add
and
xchg
in
into
outsl
int
mov
popa
mov
out
out
add
repz
add
sub
fisttps
add
pop
mov
jnp
jae
js
mov
cmc
mov
sbb
in
add
inc
add
std
sti
enter
add
ficoms
cltd
or
pop
repnz
adc
xchg
cmp
cmp
sarl
lods
cmpsb
and
pusha
add
add
push
add
add
sbb
pop
add
cld
movb
fildl
stc
push
add
add
jle
pop
jbe
jecxz
call
mov
jmp
adc
aas
pop
js
in
fnstsw
cmp
scas
xchg
mov
adc
add
call
mov
stos
ds
aam
add
push
add
and
testb
adc
push
add
jno
cli
test
out
add
negb
xor
daa
mov
mov
repz
add
fsubp
push
add
cli
loope
sub
loope
add
jg
fwait
test
mov
and
test
mov
ljmp
out
popf
lret
lock
mov
adc
out
fildll
popa
push
cmp
in
push
add
shl
add
add
pop
aas
cld
pop
add
add
mov
dec
push
mov
adc
stos
and
and
insl
lahf
aad
add
mov
dec
jge
add
push
add
rcll
fsubs
add
xchg
push
add
cmp
fcomps
add
or
push
dec
add
and
sub
roll
lods
xor
inc
add
std
mov
inc
xchg
adc
stc
insl
or
in
mov
add
das
mov
movsb
loope
repnz
cwtl
int
add
push
add
jecxz
add
add
test
add
pop
add
or
pop
add
cltd
je
insb
add
push
xchg
inc
cld
pop
enter
mov
push
add
inc
adcb
jle
pop
add
rolb
add
add
pop
mov
repz
jp
enter
ja
popf
aaa
xchg
push
add
ja
out
dec
add
jae
xor
and
gs
out
sti
fmull
sti
int3
sub
call
pop
into
arpl
xchg
insl
ret
or
add
clc
pushf
imul
add
and
int3
pop
add
xchg
adc
pop
add
je
cmp
loopne
inc
xorb
sbb
sub
mov
pop
push
add
dec
out
mov
push
add
nop
aas
int3
fisttpl
orl
ljmp
lods
cmpsb
jae
xor
std
xchg
mov
add
pop
mov
add
or
mov
sub
loop
sub
ficomps
ss
das
mov
add
call
lea
add
push
arpl
mov
add
dec
add
or
xchg
xor
add
and
mov
xchg
xlat
jno
add
pop
in
fadds
add
add
xor
adc
mov
outsl
les
popa
add
add
les
adcb
pop
add
add
mov
mov
push
add
add
jle
add
push
sbb
adc
sbb
popf
xor
add
out
mov
add
add
pop
cmp
stos
mov
add
js
add
inc
scas
adc
mov
add
jl
shlb
add
out
ret
loope
mov
push
add
add
lds
and
inc
into
cmp
mov
add
sub
or
mov
and
pop
dec
xor
data16
add
idiv
sbb
inc
add
add
add
cmp
dec
add
add
cmp
sti
cmp
jns
add
mov
cmp
aad
add
add
adc
mov
in
dec
add
add
dec
lahf
aam
add
mov
xor
push
lods
mov
add
add
xchg
std
and
add
imul
jmp
arpl
add
cmpsl
push
pop
jne
cmpsl
ja
xor
add
xchg
mov
pop
cwtl
data16
dec
add
adc
xchg
xor
pop
push
add
jle
add
add
mov
mov
lret
add
and
inc
add
xorl
lahf
in
call
iret
out
and
leave
imul
add
add
push
add
bound
pusha
add
enter
or
add
lods
jmp
popf
and
or
aam
and
or
mov
add
aaa
arpl
lret
bound
add
mov
add
or
mov
dec
popf
mov
inc
add
add
mov
jle
aam
mov
add
cmpsb
aam
mov
xlat
mov
add
and
imul
out
js
push
add
mov
movsl
mov
pusha
add
test
add
mov
mov
mov
cmc
gs
shlb
cmc
in
sub
and
inc
in
je
pushf
push
add
cmc
cmp
xchg
push
add
add
fnsave
jle
or
test
add
add
mov
lret
insb
add
mov
adc
inc
add
add
aaa
cmovbe
push
push
pop
mov
add
add
out
std
mov
fistpll
add
or
sbb
lods
inc
add
rcr
adc
adc
pop
inc
add
cmp
roll
insl
cmp
into
sub
cltd
imul
jge
add
pop
out
repz
jb
inc
dec
push
hlt
pop
stc
lcall
jae
cli
jle
subb
add
cmp
add
xchg
insb
add
inc
jge
in
mov
push
add
dec
add
add
mov
add
add
dec
add
mov
add
sub
add
add
testb
jecxz
pop
repnz
insl
jb
aad
jb
xor
loopne
sbb
jg
add
lea
add
stc
and
stos
mov
insb
add
gs
add
ljmp
jecxz
inc
add
add
pop
add
mov
stc
mov
mov
je
rcll
lret
inc
add
sbb
add
stc
fsubrl
add
rol
bound
jnp
add
add
in
aaa
cmp
mov
pop
add
xor
or
adc
and
add
add
std
sarl
lods
sub
mov
add
int
dec
add
lahf
or
add
movsl
pop
add
rcrb
add
cld
mov
roll
cmpsl
mov
mov
add
fwait
and
sub
mov
xchg
imul
add
add
movsb
mov
add
lret
sub
repnz
add
ret
push
add
sub
jmp
std
cmpsl
mov
add
push
add
push
lds
add
int3
in
mov
push
add
out
stc
lret
dec
and
gs
repnz
out
add
je
sbb
inc
add
cmp
bound
adc
cmp
arpl
dec
add
fdivrs
sbb
pop
add
add
int3
or
jp
dec
add
das
sbb
cs
cmp
sub
repnz
add
adc
add
xor
cmc
jne
add
sub
lahf
lock
mov
add
add
cmc
fcoms
add
test
add
add
daa
gs
stos
in
adc
cwtl
jo
mov
and
add
add
cltd
adc
pop
add
add
mov
pop
sub
mov
std
adc
sarb
rolb
stc
push
add
movsl
rol
mov
add
icebp
test
mov
add
add
roll
add
add
add
rcrb
add
pop
add
insl
in
frstor
out
flds
inc
add
add
add
cli
in
scas
addr16
xor
add
add
xchg
test
das
ret
inc
add
flds
cmp
mov
and
sahf
cmp
add
dec
add
fimuls
add
pop
add
aam
mov
jns
sub
inc
add
dec
add
into
xor
or
outsl
push
test
and
mov
out
mov
subb
add
add
sub
and
adc
adc
nop
dec
nop
jmp
add
add
xorb
add
add
std
mov
add
insb
add
aas
mov
sub
jmp
data16
add
pop
adc
xchg
dec
add
movsl
sub
add
das
xor
add
mov
sbb
sub
cmp
lret
xor
pop
hlt
clc
and
in
mov
add
mov
xchg
pop
push
add
jge
shrb
and
movsl
pushf
stos
pop
add
pusha
add
fidivrs
js
sbb
push
mov
pop
or
cwtl
gs
add
or
add
mov
add
push
add
lock
inc
add
inc
or
xchg
and
add
ret
add
add
pop
add
pop
and
addr16
or
jle
dec
sub
aaa
xchg
dec
daa
pop
push
test
sub
mov
movsl
sub
mov
mov
xchg
jo
stos
pop
add
shrb
add
push
add
addr16
loopne
add
mov
add
add
mov
pop
sub
loope
add
pop
add
add
popf
orl
out
and
je
loop
test
add
movsl
mov
add
xchg
add
add
cmp
stc
pusha
add
add
add
jmp
scas
sub
adc
ficoml
aad
mov
and
sub
add
nop
jne
add
xchg
pop
lret
lock
xchg
lret
add
mov
enter
push
daa
leave
hlt
jg
fwait
xchg
add
and
add
add
add
fwait
popf
jge
sbbl
iret
push
jno
add
cmpsb
cld
outsb
add
add
out
mov
lret
hlt
lahf
mov
add
xor
mov
mov
cmp
hlt
sub
movsb
jecxz
add
repz
add
jns
cmpsb
cmpsl
xchg
or
mov
jle
jne
add
enter
dec
xor
xorb
add
jb
push
add
test
add
cmp
adc
inc
add
insb
add
pop
inc
iret
mov
and
push
repnz
add
lods
les
mov
inc
add
add
dec
add
ret
add
cmp
cmp
fldenv
sar
sbb
push
ljmp
add
add
push
add
cmp
pop
hlt
lcall
and
adc
repz
add
or
xor
cwtl
xchg
adc
add
xchg
push
add
jl
jecxz
inc
xchg
dec
add
jmp
cmp
mov
adc
add
push
add
hlt
das
pop
nop
enter
clc
lds
pop
add
jnp
xlat
fsubl
mov
in
add
jns
scas
repz
sbb
in
arpl
addr16
add
arpl
add
mov
mov
xchg
mov
adc
push
add
cli
sbb
and
mov
add
mov
repnz
ds
mov
sahf
adc
fstpt
negb
add
jns
xorl
fs
mov
cmp
add
add
sub
add
mov
add
push
add
std
adc
scas
sbb
adc
jp
mov
inc
add
mov
cmpsb
and
mov
add
inc
lcall
dec
out
pop
add
cmp
loope
sbb
inc
add
sbb
pop
xchg
in
out
or
add
add
dec
add
scas
xchg
mov
jbe
inc
push
add
negl
dec
add
add
add
movsb
ret
inc
add
mov
enter
add
mov
add
std
imul
inc
add
add
add
mov
pop
mov
add
aam
shl
test
in
add
mov
repz
leave
lods
inc
add
mov
add
movsb
push
add
lds
mov
push
lahf
jb
jb
mov
xchg
int
add
and
sbbb
mul
adc
add
popf
insl
aad
dec
outsl
loopne
push
add
lahf
sub
push
add
cmp
pop
sarl
call
ror
ret
cmpsl
push
in
add
mov
dec
sub
inc
add
add
push
fdivl
cmc
fisttps
add
pop
sub
mov
sub
push
stos
push
and
jno
in
or
and
adc
xchg
or
mov
add
dec
ljmp
cmpsb
call
jle
in
in
jno
aad
aam
pop
add
mov
adc
xchg
push
add
jecxz
jae
and
adcl
push
hlt
and
mov
outsl
xor
or
or
push
add
in
pop
and
pop
mov
test
add
pop
fdivs
pop
push
add
rcr
sahf
cli
add
add
inc
add
sub
adc
jmp
insb
add
or
dec
pop
add
add
cltd
mov
data16
add
lret
dec
add
add
shr
adc
dec
add
dec
pop
psubq
add
inc
add
xchg
in
cmp
fwait
divb
dec
data16
shld
in
or
push
add
test
sbb
out
sbb
and
add
add
inc
xor
xchg
pop
das
adc
xchg
pop
add
add
fmulp
outsb
add
jge
or
inc
add
fildl
add
add
add
icebp
mov
pop
pop
aad
aaa
mov
push
add
movsl
mov
iret
data16
add
orb
add
add
movsb
out
jae
push
mov
out
mov
mov
add
add
add
add
lret
in
clc
call
mov
or
data16
jle
xor
adc
push
add
add
cltd
push
test
jge
ret
cmp
je
mov
add
mov
add
jb
fcoml
lock
add
fdiv
xlat
cvtdq2ps
add
lahf
mov
mov
jne
or
mov
or
pop
pushf
add
add
test
add
add
add
jl
inc
add
out
int3
mov
test
fcmove
xchg
add
sbb
nop
scas
mov
aas
leave
jg
xchg
xor
inc
fistps
mov
lea
add
mov
insb
add
fisubl
add
add
orl
add
jge
repz
cmp
mov
mov
inc
add
push
dec
add
inc
setb
inc
pushf
iret
call
adc
call
add
sub
pop
fbstp
cmp
add
add
add
cmp
dec
add
andl
lods
enter
insb
add
pop
mov
in
xlat
cmpsl
mov
add
loop
sub
mov
add
xor
movsb
or
mov
mov
in
jbe
cld
lods
mov
rorl
mov
add
add
add
outsl
aam
sbb
je
fistl
adc
enter
jle
mov
ret
bound
test
ror
andb
leave
lret
mov
shlb
inc
add
sbb
fdivs
rcrb
add
xchg
loop
add
mov
and
add
stos
cld
ret
lcall
sbb
add
mov
mov
mov
add
or
popa
push
aam
inc
add
rcll
shlb
leave
daa
fbstp
push
add
pushf
xchg
stc
js
incl
pop
or
inc
add
and
ds
mov
cmp
add
out
mov
xor
xor
cmc
ljmp
dec
add
add
push
sbb
cmp
cli
add
sahf
add
add
xchg
adc
push
add
ffreep
out
xor
stc
jbe
aam
lahf
rcrl
mov
add
mov
leave
jp
push
add
or
in
shrl
push
add
cltd
scas
mov
add
bound
push
aad
mov
fldenv
lock
jp
add
lret
add
push
cmpsl
gs
addl
add
dec
inc
add
xchg
add
cmpsl
in
add
add
add
shl
add
pushf
xor
cmpsl
enter
cld
dec
aad
push
add
movsl
push
pop
add
add
js
icebp
push
sbb
pop
outsb
add
lods
testl
out
sub
mov
ja
sbb
or
add
cwtl
arpl
insl
shlb
xor
add
mov
int3
movsl
pop
aas
xor
adc
or
inc
add
add
mov
std
add
cmpsl
js
xchg
mov
push
loope
mov
jmp
add
and
jns
stc
xchg
cld
inc
add
adc
mov
cmp
imul
inc
add
imulb
cmp
cmp
scas
lods
gs
inc
add
jl
push
fsubl
aas
leave
xchg
dec
add
das
xchg
mov
ror
add
sub
jecxz
add
int
add
push
stos
lret
imul
add
add
repz
imul
mov
add
sub
call
xchg
dec
imul
sub
insl
push
add
add
adc
test
add
dec
dec
mov
mov
pop
xlat
xchg
pop
add
adc
add
add
pop
ret
call
add
sbb
add
je
inc
add
fdivrs
cld
add
js
mov
or
mov
fbld
add
into
push
sub
or
imul
outsb
add
cmpsb
mov
xor
inc
and
add
pushf
in
pusha
add
mov
jb
pop
add
test
add
add
mov
jmp
fwait
cmp
dec
add
add
insb
add
sahf
xchg
jns
add
ljmp
fadds
push
push
add
aaa
out
adc
loope
push
add
bound
je
fcomip
xlat
aas
pop
out
xchg
insb
add
add
jp
adc
inc
add
jge
movsb
inc
add
data16
add
jg
sbb
sbb
inc
mov
mov
pop
add
and
rorb
sub
jp
cltd
jmp
push
jno
add
push
add
add
fidivl
cmp
push
add
or
jns
xor
iret
nop
push
daa
sub
mov
int3
cmp
and
add
add
sub
in
mov
lods
movsb
pushf
mov
add
ret
sbb
das
fwait
dec
addr16
dec
pop
push
mov
clc
imul
and
add
add
adc
add
add
inc
add
mov
leave
xor
popa
adc
or
sub
adc
sbb
fcmovne
and
fwait
int3
push
es
inc
pushf
and
jl
push
add
das
xor
ret
add
cmp
add
add
mov
test
xchg
add
ror
mov
xchg
mov
add
mov
xchg
lock
dec
add
dec
add
lds
lods
sbb
add
mov
stos
imul
mov
add
mov
xor
shrb
mov
dec
std
push
add
out
ret
mov
add
xchg
add
add
imul
insb
add
lods
outsb
add
ja
lcall
into
repz
add
inc
add
mov
imul
lock
add
in
fisttpl
arpl
pop
add
mov
add
pop
add
fldcw
xchg
popa
das
inc
rcrl
push
add
out
inc
add
mov
popf
in
mov
mov
add
mov
add
fimull
imul
lahf
add
mov
jecxz
movaps
scas
jle
push
add
add
push
add
in
pop
fstpl
add
xchg
cmp
add
add
bound
mov
mov
out
inc
add
cmp
addr16
popf
inc
add
int
add
jg
xchg
mov
add
add
out
insl
lods
xchg
mov
add
add
push
add
incl
add
sub
daa
scas
fstpt
dec
push
add
adc
or
mov
ret
cmp
pushf
aas
cli
push
add
fwait
insb
add
or
add
push
add
ret
or
mov
add
repz
sbb
add
sub
jg
jecxz
jnp
add
cmp
cmp
push
cli
and
cmp
push
orl
xchg
sahf
pop
movsb
js
and
add
add
adc
add
add
andl
add
fldcw
add
movsb
mov
or
dec
add
add
dec
xor
pop
add
iret
inc
add
mov
or
cmc
cmp
add
mov
dec
add
inc
add
jae
add
add
nop
mov
dec
add
push
add
repz
add
add
dec
add
fsubrs
lock
stos
jmp
add
mov
mov
pop
add
mov
dec
pop
add
nop
bound
cmpl
shlb
mov
mov
mov
add
mull
adc
test
fisttps
sub
add
loope
dec
add
pop
xchg
fldenv
add
mov
mov
add
fbld
and
rolb
cld
fisubs
or
movsb
push
add
add
jecxz
add
add
add
decb
add
and
jge
xor
int3
dec
aad
and
ja
je
subl
add
std
popf
mov
mov
mov
enter
js
inc
add
or
out
aam
cmp
cwtl
cmpsl
aaa
mov
or
test
mov
cwtl
push
add
in
lods
mov
stos
loop
sub
push
add
movsl
fcmovu
ds
mov
subl
neg
pop
add
pop
sub
jecxz
inc
inc
call
int
add
nop
cmp
add
in
lret
xchg
pop
push
js
sbb
out
or
fdivp
xchg
add
xor
in
cmp
inc
push
add
adc
sbb
cwtl
pop
add
ss
xor
mov
scas
push
add
add
cmpsl
scas
mov
sbb
inc
add
add
lahf
lds
add
mov
ja
clc
pushf
icebp
inc
dec
xchg
aam
rclb
add
cmpsb
sbb
jmp
inc
add
enter
push
add
mov
add
fisubl
sti
scas
daa
sbb
pop
pop
mov
pop
add
lock
mov
jne
add
adc
sarl
add
pusha
add
or
mov
jl
out
jge
nop
dec
add
mov
xchg
fcoml
or
movsb
mov
mov
add
xchg
lahf
enter
jns
icebp
in
or
add
test
cmpsb
lods
mov
cmpsb
push
data16
pop
out
cwtl
xor
fistps
aam
jle
out
adc
jo
lret
xlat
adcl
jnp
popa
jno
adc
jnp
mov
mov
adc
add
sbbl
lcall
fidivl
mov
add
fucomip
add
add
add
and
jg
push
add
dec
frstor
rclb
mov
fs
aam
mov
mov
add
std
lock
mov
cli
push
push
add
mov
pop
sbb
add
arpl
lahf
inc
or
sbb
cli
sarb
jnp
mov
test
int3
add
pop
mov
fisttps
dec
add
outsb
add
mov
out
jb
cmp
sub
and
std
aas
add
add
popf
lret
dec
add
insb
add
add
jle
adc
xor
std
aas
add
add
dec
add
and
scas
call
rcll
fwait
add
add
cmp
cld
enter
cltd
xchg
add
add
inc
add
add
cmp
xor
and
mov
inc
add
mov
adc
push
into
jle
or
das
xchg
xchg
test
add
add
stos
or
adc
inc
add
add
sbb
fnstsw
dec
jb
pushf
adc
sbb
repz
push
add
cmp
mov
mov
popa
mov
repz
add
add
mov
dec
add
add
dec
pop
push
add
imul
add
jmp
pop
add
add
mov
add
xchg
jg
aas
outsl
sub
push
add
add
cmp
aam
movb
mov
lcall
imul
add
pop
mov
test
add
jnp
add
cltd
mov
add
sbb
clc
mov
ret
inc
lods
pop
lods
or
dec
jp
ret
cmc
xchg
push
add
add
out
mov
sti
jg
add
test
add
mov
rorb
cmp
pop
ret
jb
or
out
lret
roll
add
add
pop
add
pushf
popf
lahf
xor
jne
adc
xor
andb
inc
jge
sub
lcall
lcall
xor
add
out
out
add
cwtl
sahf
pop
add
adc
lods
popf
mov
cmp
imul
cld
adc
xchg
mov
add
jle
scas
dec
add
out
xchg
repnz
test
adcb
mov
jmp
mov
add
add
hlt
ja
test
idivl
dec
test
test
jecxz
mov
mov
popa
push
xchg
mov
add
pop
add
add
add
out
lock
and
pusha
add
mov
bound
js
mov
fistpll
mov
stos
std
ja
fwait
sub
push
add
lahf
jecxz
mov
cmpsl
push
add
push
add
cmpsl
gs
add
lods
push
pop
sahf
xchg
add
jb
cmc
pusha
add
shlb
dec
cmpsl
mov
pushl
push
add
fstpl
add
inc
jl
ljmp
mov
fistl
add
add
rcrb
add
mov
add
fisubrl
dec
add
add
leave
pop
inc
add
and
lods
mov
mov
add
xchg
add
add
xchg
out
aaa
sbb
mov
sahf
lahf
lods
xor
inc
jecxz
je
and
mov
or
inc
add
add
xchg
inc
add
inc
add
mov
shl
jne
cmpsb
cs
lcall
lcall
add
xchg
add
add
addr16
fmull
and
test
and
mov
idivl
add
add
add
add
mov
push
add
shlb
jo
lcall
add
xchg
movhps
add
add
mov
rorb
add
push
dec
add
aaa
out
add
jns
out
stos
pop
mov
xchg
daa
jae
stos
std
inc
add
mov
add
movsl
jnp
test
jno
scas
sbb
push
add
inc
add
js
rolb
out
js
jno
idivl
movsb
add
mov
testb
inc
add
add
mov
adc
js
jb
adc
popf
repz
iret
and
xchg
jbe
mov
dec
arpl
pop
add
jg
or
xor
js
mov
add
add
pop
jg
add
stos
add
add
add
add
insb
add
add
cld
inc
loope
ret
push
add
data16
testb
mov
sub
add
mov
add
push
das
jb
stc
cmp
adc
mov
aad
add
inc
mov
pop
mov
add
inc
add
add
jl
mov
pop
jge
sub
xor
add
jg
jp
stos
inc
mov
je
in
stc
aas
xchg
out
int
pop
cmp
cmpsl
loopne
movsb
fs
std
mov
and
imul
inc
add
out
repnz
xchg
jecxz
inc
cmp
lret
add
mov
jg
pushf
shlb
mov
xchg
push
add
push
add
or
adc
add
hlt
lret
sbb
mov
mov
add
testb
fldl2t
dec
add
add
xchg
jo
cltd
imulb
ljmp
jg
fsts
add
add
add
mov
add
lcall
cmp
pushf
cmp
mov
das
xchg
mov
test
add
add
add
add
cmp
xchg
add
cltd
shrb
add
cmp
out
iret
ret
je
adc
out
add
add
loopne
add
call
xor
add
xchg
pop
add
push
add
addr16
add
lahf
mov
xchg
xor
add
add
add
mov
pop
mov
repz
scas
int
roll
sbb
cli
xchg
add
lret
shrl
add
daa
cmc
mov
in
adc
add
add
hlt
aas
outsb
add
mov
add
lahf
out
adc
stos
jecxz
jb
js
jmp
add
sub
add
mov
add
pop
add
add
shll
sbbl
push
add
mov
dec
sti
xlat
insl
int3
in
jecxz
jg
push
add
aad
add
ja
mov
push
add
adc
rcrb
scas
push
add
mov
add
mov
add
jae
jmp
push
add
add
add
data16
or
mov
push
add
add
out
fcomps
add
jb
enter
aas
sti
adc
mov
int
sbb
jbe
jl
mov
mov
xchg
dec
add
push
add
add
mov
push
add
xchg
lret
xchg
sbb
sbb
fwait
or
bound
sbb
jle
lret
scas
scas
sub
out
aaa
and
lret
push
add
cmp
test
add
cmp
loope
xchg
rcl
sahf
sub
stos
pushf
rcrl
in
cmc
xchg
gs
push
add
ret
stc
xor
cmp
add
iret
data16
add
test
mov
add
and
mov
xchg
into
cld
cmp
notb
add
outsl
inc
scas
scas
clc
xor
add
push
add
subl
xchg
hlt
push
add
mov
and
cltd
shl
xlat
cmp
xor
subl
lds
add
inc
add
adc
dec
shll
adc
mov
cmp
aad
jmp
cmp
movsb
xchg
and
inc
add
mov
insb
add
out
inc
add
sub
lock
scas
out
hlt
jg
dec
xor
fnstenv
add
add
inc
xchg
mov
add
add
sub
add
arpl
dec
insb
add
add
cmp
pushf
dec
add
add
jmp
daa
test
les
push
je
mov
je
xor
add
add
add
dec
add
cmpb
push
add
pop
add
rcr
lret
push
add
cmc
xor
ret
jno
add
xor
pop
add
pop
mov
test
jns
sbb
cmp
xchg
in
mov
leave
jg
add
mov
mov
movsb
add
in
adc
inc
add
add
add
add
stos
loope
add
add
add
add
push
add
add
jo
add
mov
inc
test
rclb
js
scas
cli
mov
mov
aaa
lahf
jge
aaa
cmpsl
jne
ret
dec
jae
xchg
pop
dec
add
push
add
shll
add
ror
add
xor
push
add
xchg
les
dec
add
mov
ljmp
into
add
add
add
inc
add
ficompl
xchg
adc
mov
and
mov
jbe
mov
or
push
movsl
pop
add
add
movsb
cld
and
mov
add
jl
xchg
sub
dec
add
stc
das
ja
dec
xlat
sub
pop
enter
jb
das
mov
add
int3
add
jbe
mov
imul
push
add
xchg
add
fdivr
fcompl
inc
push
ja
js
inc
loopne
add
shll
gs
dec
pop
add
pop
sbb
add
add
xor
adc
mov
out
addb
add
or
pop
add
jne
add
xlat
aaa
cmp
mov
bnd
add
and
dec
add
xor
jmp
mov
movsl
add
and
add
scas
rcrl
sbb
or
idiv
lea
nop
cmpsl
mov
push
jo
dec
add
mov
inc
add
lds
add
insl
cmp
sbb
pusha
add
add
jne
cs
push
add
xchg
jno
add
and
jno
roll
fsubrp
mov
cld
dec
add
add
add
insb
add
jp
jb
bound
ljmp
pop
fnstsw
pop
add
add
xor
add
fdivrs
mov
xor
and
leave
lahf
push
adc
in
test
xchg
aas
cltd
push
mov
add
add
jge
mov
add
adc
js
fistl
xor
das
cmp
loope
cmc
dec
add
add
sbb
popa
cmp
xor
pop
add
je
call
push
add
aam
add
push
mov
dec
mov
addr16
add
or
adc
out
add
cmp
sub
add
aaa
leave
ja
scas
or
sub
mov
add
add
ljmp
add
pop
aaa
mov
push
pop
cmovp
mov
jge
mov
add
insb
add
add
dec
into
sbb
cld
in
mov
movsl
xor
xor
xor
roll
addb
aas
dec
add
jo
adc
fistl
repnz
cmpb
rcll
add
pop
xor
push
add
daa
hlt
mov
repnz
andps
imul
add
outsl
add
dec
add
bound
inc
subl
dec
add
push
add
add
xor
sbb
add
jno
adc
sbb
movsb
mov
icebp
jne
orl
add
scas
fidivrs
jl
jmp
add
mov
xchg
test
stos
bound
xchg
xor
xchg
sbb
cmp
adc
mov
jno
add
das
loopne
shrl
je
inc
js
aad
add
mov
xor
add
bound
jg
imul
inc
dec
bound
add
add
add
add
cmp
and
or
pop
pop
add
fists
add
mov
add
jb
dec
add
std
test
add
jl
cmp
fldt
out
add
add
push
sub
dec
add
xchg
aas
sub
ror
mov
add
popa
cmp
negl
add
jae
add
push
add
mov
xchg
mov
add
add
dec
add
bound
push
loope
add
stc
jb
in
insb
add
add
dec
add
sahf
or
stc
mov
add
shll
add
or
jle
jge
test
inc
add
add
push
add
add
and
out
lea
add
cmp
add
notl
mov
add
xor
add
jg
jge
add
lods
scas
add
add
xchg
sub
jle
cwtl
xchg
xchg
dec
add
ret
fld
push
add
sti
add
mov
pop
add
fmul
push
add
push
add
add
add
xchg
xchg
xchg
sbbl
test
or
fstp
aaa
out
sub
add
leave
mov
stc
movb
hlt
std
int3
xchg
add
out
fdivr
push
fwait
cmpsl
mov
add
fdivs
pusha
add
add
aam
pop
add
je
push
add
add
scas
imul
xor
push
add
mov
add
or
aad
pop
sbb
add
loopne
pop
sub
test
xor
leave
in
dec
jnp
aad
add
adc
hlt
aam
lret
add
inc
add
inc
dec
add
insb
add
int3
cmc
out
add
adc
and
xchg
pusha
add
add
loope
or
lret
mov
and
mov
aaa
pusha
add
or
test
add
add
nop
jge
xchg
push
cmp
pop
jp
xor
sbb
add
sahf
fistl
add
cld
mov
int3
jp
xor
xchg
loope
cmp
sbb
push
add
mov
daa
pop
add
cmp
mov
push
xlat
adc
xchg
fbld
sbb
mov
sti
and
mov
dec
add
adc
addr16
mov
nop
aas
jmp
cmp
dec
add
jno
add
adc
cmp
add
sbb
mov
add
add
jns
mov
dec
add
mov
ja
loopne
repnz
add
add
dec
add
sub
mov
cmp
sarb
add
mov
add
cmp
pop
add
add
into
jne
inc
test
add
mov
and
xor
movsl
xlat
into
bound
repz
orb
jae
inc
mov
enter
icebp
jne
test
fistpl
mov
ret
mov
and
add
add
dec
add
pop
add
loopw
lods
dec
add
add
add
pop
mov
mov
fdivr
fidivl
adcl
add
add
mov
sub
xchg
mov
jno
mov
add
add
add
mov
jne
loopne
add
pop
or
dec
int
jns
insb
add
add
stc
push
mov
ret
incb
add
add
jle
aad
add
movsb
inc
sbb
xor
add
add
add
add
stc
xlat
loopne
add
fisubrl
add
sbb
rorb
stos
lds
add
inc
shr
stos
jnp
pop
sub
test
add
add
mov
inc
addr16
pop
add
test
bnd
add
lods
stos
test
add
add
mov
int
inc
add
mov
int
mov
pop
add
add
add
push
add
out
mov
addr16
stc
lock
pop
xchg
movsb
lds
clc
divb
add
add
add
rcll
test
bound
sbb
add
mov
xchg
lods
xor
out
mov
add
out
add
inc
sbbl
mov
xchg
cltd
cs
mov
jle
and
add
popf
lahf
xlat
lcall
add
add
aam
add
dec
jp
mov
into
and
daa
and
add
add
jns
add
sbb
push
aaa
push
inc
mov
push
add
add
xor
lods
cli
sub
push
add
add
add
add
jecxz
std
pop
mov
addr16
add
cmp
inc
or
add
adc
add
xchg
rcll
gs
pop
add
adcb
pop
into
mov
pop
add
cmp
outsb
add
loop
mov
test
shr
stc
mov
add
add
push
add
mov
push
pop
repz
int
ljmp
add
add
sbb
stc
popf
xchg
andb
js
bound
xor
sub
insl
push
add
dec
add
add
xchg
sub
push
inc
mov
add
and
add
add
scas
ja
les
jns
add
and
shll
mov
add
push
add
xor
add
je
cmpl
mov
add
ljmp
add
neg
insl
mov
cmpsb
cmp
int3
mov
sbb
adc
outsl
cmpsb
and
inc
shll
sbb
add
inc
push
add
popa
lahf
inc
add
add
add
ljmp
je
dec
clc
cli
shll
rcll
mov
stc
push
in
inc
add
add
sub
mov
daa
out
cmpsb
xchg
cmpsl
shr
sbb
imul
dec
add
sub
leave
adcl
call
daa
and
add
and
xchg
jne
stc
jne
cmp
ja
fldenv
add
scas
dec
pushf
add
std
inc
add
or
mov
addb
push
add
add
add
arpl
cmp
sbb
add
add
outsb
add
mov
out
and
or
jb
jge
add
lcall
pop
push
add
std
clc
and
out
das
xchg
add
movsl
bound
inc
sahf
ret
cmpsl
fiaddl
loopne
add
add
jp
xchg
inc
adc
mul
call
inc
pop
add
add
mov
mov
add
add
xchg
pushf
inc
dec
add
add
test
sub
sub
in
loope
mov
cwtl
cmpsl
mov
and
int
add
add
cwtl
add
add
or
imul
add
jno
xchg
inc
add
fdivrs
icebp
rclb
add
sub
mov
add
sub
ljmp
movsb
icebp
dec
add
add
add
or
xor
rcr
pusha
add
sahf
xchg
mov
cs
shrb
and
add
leave
push
pop
test
dec
test
movsb
aaa
jp
push
add
add
iret
jo
cmp
ljmp
out
clc
lea
test
sub
fstl
sbb
mov
add
add
add
mov
add
add
jp
sbb
mov
add
mov
aad
add
add
add
add
add
add
add
cmp
xor
inc
add
pop
icebp
lea
loopne
arpl
mov
test
das
pop
sub
or
fistl
pop
xchg
leave
scas
bound
sbbl
sahf
jo
sub
call
add
nop
pop
add
leave
data16
adc
cmp
ret
or
inc
inc
inc
add
cmp
bound
pop
sbb
hlt
leave
and
add
add
add
adc
cmpsb
psubsb
fsubs
imul
jae
rolb
daa
dec
add
add
jg
add
int3
inc
add
subb
push
add
pop
add
or
in
xchg
iret
mov
pusha
add
xchg
add
fdiv
repnz
dec
xchg
data16
ret
or
jnp
lods
std
int
add
lret
xchg
cmp
add
imul
ljmp
or
shll
int3
loop
sub
aas
pop
add
into
push
add
ret
iret
jnp
stc
and
jle
popa
mov
add
xchg
sub
in
inc
push
add
dec
jl
inc
add
push
add
add
xor
pop
push
add
push
shll
add
xchg
mov
dec
add
pop
add
popf
and
adc
out
inc
add
pop
add
jp
sub
cmp
scas
or
add
adc
cmpl
add
out
lcall
movsb
sub
dec
add
shll
and
push
add
add
fcmovu
call
fldenv
pop
add
mov
ret
scas
jo
jns
mov
scas
add
jbe
mov
rclb
dec
add
add
sarb
push
add
or
mov
imul
or
icebp
push
aas
inc
add
add
xchg
jecxz
add
scas
clc
das
insb
add
icebp
test
pushl
add
or
cmp
add
fcmovu
mov
roll
inc
mov
jge
cwtl
cld
mov
mov
or
add
loope
subl
lcall
les
scas
jp
mov
or
mov
add
aad
add
lods
mov
add
imul
adc
add
dec
add
stc
clc
rorb
std
xorb
gs
inc
add
cmpb
lods
xlat
xchg
dec
stos
adc
popa
sbb
inc
add
inc
add
and
leave
cli
push
add
sub
addr16
add
adc
sub
add
ljmp
push
add
adc
jle
and
lods
mov
add
testb
pop
dec
add
fbld
add
test
add
add
add
mov
gs
xor
fsubrs
mov
out
mov
sub
sbb
popf
dec
add
pop
filds
mov
int3
sahf
sbb
mov
inc
xchg
push
xchg
push
add
mov
xlat
cli
sub
inc
add
mov
add
add
js
cmp
sub
fcmovnu
sub
mov
fdivs
add
pop
mov
adc
xchg
test
in
outsb
add
cmpsl
pop
add
push
add
add
sbb
push
add
add
push
xor
adc
arpl
add
dec
icebp
mov
xlat
leave
jns
add
dec
add
cli
dec
add
add
add
movsl
mov
inc
add
and
js
add
sahf
pop
add
add
cwtl
xchg
daa
xor
in
add
add
je
mov
sub
push
add
mov
add
decb
add
cmpsl
ja
add
ficoms
dec
xor
inc
dec
mov
push
in
or
and
push
add
out
add
mov
fisttps
add
add
jbe
pop
mov
fwait
mov
push
dec
add
mov
jo
int3
push
add
mov
mov
mov
add
leave
ss
xor
aaa
mov
call
add
or
mov
stos
test
add
loopne
adc
xchg
jle
add
dec
xchg
int
push
add
lahf
sti
rolb
shrb
lds
mov
jg
shll
add
jge
sbb
add
pop
nop
insb
add
fidivrs
add
pop
cmp
mov
add
pushf
lock
sbb
addb
mov
xchg
cmc
imul
push
add
dec
jle
iret
ret
aad
add
lahf
out
add
mov
inc
add
mov
lcall
add
imull
cwtl
leave
dec
lret
add
push
add
stos
test
orb
sbb
and
push
add
mov
jle
ret
lods
dec
add
add
adc
xchg
jl
jl
lret
iret
mov
push
popa
pop
imul
lret
adc
mov
sub
push
sub
fidivs
sarl
scas
or
add
pop
pop
dec
dec
cmp
xor
lock
mov
fadds
rorb
add
fninit
mov
adc
cli
pop
cld
mov
add
mov
add
add
lods
cmc
pop
add
das
mov
add
jecxz
pop
imul
cld
imul
fcoml
out
xorl
sahf
pop
nop
add
add
js
jle
or
mov
add
add
add
mov
fwait
sub
repnz
add
add
mov
add
pushf
pop
add
leave
hlt
sub
rcl
jo
test
or
cmp
sub
add
add
add
xor
sub
xlat
mov
fdivr
and
fistpl
jnp
int3
aas
out
fcomip
repz
data16
cli
fxch
push
mov
and
lret
lcall
mov
add
add
adc
add
adc
add
dec
add
je
jb
xchg
icebp
mov
mov
and
mov
jns
sahf
mov
push
add
daa
jb
dec
inc
add
cs
pop
adc
xor
sbb
add
lret
arpl
xor
stos
lcall
add
inc
mov
push
add
fidivrl
rcrl
add
xor
mov
mov
add
mov
sbb
iret
mov
jae
inc
fisubs
add
xchg
testb
test
add
loope
jecxz
add
or
add
adc
cmc
mov
add
inc
add
dec
add
paddq
cld
or
sub
int
sbb
ror
mov
inc
add
jmp
add
adc
bnd
shlb
add
add
add
inc
add
dec
pop
inc
add
push
add
flds
push
add
mov
and
add
cltd
mov
xchg
lock
mov
add
jmp
add
bound
jecxz
out
lea
push
dec
add
movsb
dec
add
inc
add
push
add
add
out
test
xchg
fadds
cmpsl
jl
sbb
add
outsl
aam
mov
add
xchg
lds
dec
sbb
pop
jbe
pop
add
cmp
inc
or
add
add
add
leave
mov
and
add
add
add
hlt
cmp
sub
clc
lahf
bound
adc
xchg
cmp
and
mov
dec
add
imul
add
stos
aad
add
add
mov
insb
add
inc
mov
add
adc
mov
add
add
icebp
rorb
and
add
call
sub
mov
add
sbb
lret
aam
fsubr
sbb
mov
add
mov
fcmovb
hlt
mov
pop
add
jnp
bound
stos
xchg
xchg
pop
out
and
push
add
add
in
jecxz
add
pop
rolb
jbe
sub
or
push
add
or
jae
add
iret
dec
add
or
imul
cld
nop
in
and
out
mov
xor
insl
jbe
pop
push
add
pop
arpl
or
dec
in
sub
dec
add
sbb
xor
add
xchg
mov
pop
inc
gs
negl
add
out
into
cmpsl
xchg
jae
ss
pop
add
jp
push
add
xor
mov
jl
xor
faddl
jb
xchg
cmp
bound
idivb
sub
cmp
add
add
popf
pop
add
fiadds
mov
mulb
add
cmovge
add
sub
fwait
adcb
aam
int
arpl
mov
or
inc
xor
xchg
scas
mov
lahf
xchg
nop
dec
jl
pop
scas
sti
push
add
rcrl
xor
mov
mov
ds
add
daa
and
add
add
add
imul
popa
jo
cmp
cmp
xor
scas
popf
push
add
cmp
mov
mov
push
in
loope
add
inc
out
pop
add
add
int
sub
mov
add
add
jno
adc
sbb
xchg
and
fsubs
add
cs
xchg
mov
add
add
add
pop
xchg
push
cmpsl
xor
data16
or
xor
pop
and
hlt
adc
adc
add
adcl
adc
mov
arpl
add
add
jo
test
jle
push
jno
aam
rcrl
cmpsb
or
jnp
add
add
add
pusha
add
aam
out
addr16
add
add
mov
int
xchg
js
adc
popa
push
xor
or
stos
cli
mov
ret
rcr
popa
sub
mov
pop
add
into
fwait
loope
add
jge
mov
dec
into
mov
pop
add
flds
add
outsb
add
stos
or
xchg
lcall
add
xchg
stc
sub
push
add
push
add
add
cmp
add
cmp
nop
push
add
xchg
add
jp
test
push
add
popa
push
add
popf
aas
dec
pop
fstl
loope
scas
pop
dec
scas
dec
add
adcl
inc
add
sbb
adc
test
insl
and
stos
je
or
out
jns
add
lods
fdivrl
push
add
add
add
mov
test
movsl
aad
inc
add
data16
insl
ret
dec
insb
add
sbb
movsb
or
sub
xchg
clc
mov
add
fwait
and
add
mov
mov
sub
add
js
js
pop
add
dec
add
test
nop
data16
cmp
mov
add
sbb
jle
mov
dec
fptan
fwait
xchg
gs
jb
push
add
icebp
ja
pop
lds
add
dec
add
jle
repz
dec
popl
mov
push
add
insl
shrb
movsl
and
sub
test
nop
cmp
lcall
mov
add
in
imul
push
add
hlt
mov
xchg
test
sahf
repnz
add
add
jecxz
add
sbb
repz
sti
and
cmp
ret
add
movsl
loopne
fsubrs
add
ss
adc
lret
add
and
add
scas
push
or
popa
ficomps
cwtl
jo
mov
in
in
mov
jb
dec
add
push
add
mov
add
out
mov
insl
mov
mov
out
insb
add
jmp
sbb
lret
jle
and
and
lea
jmp
into
cs
aas
mov
add
fidivs
mov
xlat
mov
add
add
adc
mov
sub
testl
js
pop
add
sahf
mov
push
add
mov
add
lahf
cwtl
jp
inc
add
or
add
fisubrl
push
add
sub
cli
loopne
jmp
add
dec
clc
sub
bound
inc
add
pop
loop
jae
add
mov
add
cmp
jae
add
fmull
js
sub
stos
inc
sub
call
xor
add
and
inc
add
mov
aam
and
lds
lods
pop
out
add
jecxz
push
clc
pop
pop
add
scas
mov
cltd
hlt
jmp
add
mov
in
pusha
add
mov
lahf
mov
clc
imul
mov
mov
stos
jl
add
lods
cmp
inc
inc
cmpl
push
xchg
push
add
pop
out
pop
shrl
mov
add
iret
arpl
add
pop
add
cmp
dec
add
push
add
ja
add
sbb
add
push
daa
dec
std
popf
sub
push
inc
push
mov
sub
add
ja
dec
add
add
dec
add
or
add
mov
sbb
mov
stos
sub
xor
add
in
and
adc
add
add
movsl
push
add
add
add
cli
jo
sub
outsl
les
cld
sti
mov
or
mov
subl
pop
add
repz
inc
add
sub
stc
int
cmp
mov
push
add
aas
xchg
inc
add
cld
rol
sar
clc
push
add
mov
dec
decb
jo
idivb
adc
add
mov
add
in
addr16
ret
add
mov
arpl
add
dec
pushf
addl
mov
es
mov
lahf
jge
push
add
mov
adc
add
loope
adc
dec
inc
mov
test
add
add
mov
cmp
mov
bnd
arpl
dec
add
mov
add
add
add
orl
cld
push
stos
cmp
fsub
sub
mov
add
and
sarb
add
add
xchg
xchg
jmp
lock
add
dec
xlat
or
add
clc
jmp
js
shll
add
outsb
add
or
fildll
enter
cmpsb
fldenv
dec
ret
sub
adc
mov
arpl
addr16
cltd
cmp
mov
add
and
xor
fidivrs
add
sahf
jb
adc
push
jne
xchg
sub
test
xor
stos
fcoml
add
aad
sbb
mov
add
sbb
lods
cli
leave
inc
add
dec
add
scas
cmp
pop
add
mov
lds
subl
add
add
mov
sub
jge
outsb
add
add
lods
stos
int3
pushf
mov
add
jae
call
add
mov
inc
mov
fcmovnu
cmp
add
clc
in
out
push
add
aaa
jne
add
pop
loop
and
add
sub
lret
in
xor
push
cmp
pop
aam
sub
add
pop
xor
xchg
cmp
add
or
push
add
mov
test
add
add
mulb
add
lret
lods
xchg
imul
pcmpgtw
imull
add
imul
test
add
add
xchg
pop
add
sti
pop
cltd
mov
xor
ds
je
lret
jmp
adcb
shl
loopne
sahf
mov
add
loopne
xchg
aam
flds
add
add
cmpsb
push
add
xchg
popa
xchg
orl
rcrb
lods
push
mov
sub
call
sbb
jl
xchg
dec
add
test
xor
mov
and
imull
pop
mov
pop
int3
or
pop
add
xchg
cmp
jne
mov
add
add
add
les
pop
jecxz
push
outsl
lret
add
mov
fwait
or
mov
add
jbe
sub
dec
add
in
xor
dec
add
repz
push
add
inc
add
push
add
add
xchg
push
add
mov
cltd
lret
mov
lods
xor
cli
shlb
scas
and
push
add
sbb
cmc
sub
add
xor
jae
and
xchg
xor
hlt
mov
cmpl
test
add
outsb
add
add
sbb
adc
cmp
andb
pop
add
add
popf
mov
add
and
sub
fadds
sti
mov
lret
or
mov
fiaddl
insb
add
lahf
xchg
sub
sub
scas
sarl
push
and
movsl
fisttpll
jne
popa
fldl
repz
in
jns
add
cmp
cmpsl
lcall
cmpsb
cmp
lret
adc
iret
pop
add
loop
mov
add
es
mov
jle
repz
and
mov
in
xor
xchg
pop
dec
add
notb
fidivrl
bound
movsb
js
mov
add
add
mov
loop
xchg
mov
add
pop
pop
add
aad
stc
test
sbb
mov
ds
loopne
scas
iret
pop
sub
adc
add
add
das
mov
jo
cmp
fwait
dec
add
add
data16
add
stc
loope
jl
addr16
adc
inc
xor
and
arpl
xchg
sbb
jmp
lahf
test
xor
icebp
outsb
add
into
mov
add
incl
mov
add
xchg
stc
cmpsl
inc
add
sarb
add
push
add
je
jae
jo
mov
lods
mov
add
mov
add
aad
xchg
das
pop
mov
imul
ret
push
cld
fdivrs
add
inc
add
fmuls
push
add
iret
add
dec
xchg
mov
and
sbb
add
adc
inc
pop
gs
stos
and
test
push
aaa
insb
add
add
lods
fstpt
mov
popf
aad
push
add
xor
add
lds
mov
mov
mov
add
dec
add
cltd
pop
add
and
inc
jnp
cmp
test
add
mov
in
mov
mov
add
cmp
icebp
mov
add
aam
pop
add
push
sti
jp
sbb
jg
shll
xor
mov
push
add
xchg
test
add
test
sub
xchg
imul
cmp
dec
add
pop
add
push
into
sbb
add
pop
and
jb
pop
add
push
add
popf
cmpsl
inc
mov
shlb
adc
push
movsl
insb
add
popa
into
cmpsb
lret
mov
cmp
push
add
test
pop
filds
shll
xlat
cmp
jmp
add
adc
ret
push
xorb
stos
lods
scas
popa
ret
loop
add
xor
fildl
add
mov
add
test
sub
mov
add
aaa
xchg
xchg
popf
leave
xchg
dec
aas
mov
xor
fwait
stos
mov
or
mov
popa
jb
adc
mov
push
add
movsl
mov
push
jl
pop
xor
xlat
jns
negl
jp
dec
add
lret
cmp
xor
lcall
movsl
mov
adcl
test
daa
jnp
xor
hlt
mov
adc
in
jmp
add
insl
mov
add
jg
add
sub
mov
add
pop
add
mov
add
cli
add
data16
pop
add
mov
hlt
dec
add
add
sub
pop
mov
jnp
inc
fwait
mov
daa
and
loop
mov
add
mov
xlat
mov
push
add
data16
gs
push
mov
jp
call
stos
outsb
add
mov
inc
mov
stc
mov
or
fwait
hlt
push
push
add
repz
push
add
add
das
es
jne
xchg
adc
ret
iret
int3
lods
test
add
add
cs
add
mov
sbb
add
or
ljmp
arpl
add
add
add
lea
inc
add
icebp
aas
cmp
xchg
cmc
into
gs
push
pusha
add
mov
mov
add
sbb
lds
cmp
test
lods
mov
pop
add
hlt
xchg
popa
cmpsb
sbb
data16
add
xchg
out
xchg
inc
xchg
add
or
enter
mov
adc
add
inc
add
add
xchg
sub
rorb
dec
add
scas
das
cmpsb
popf
xchg
mov
jo
jl
push
add
add
mov
add
mov
add
add
xor
in
xchg
add
out
scas
xchg
sbb
add
pushf
inc
add
enter
push
add
add
int3
sub
outsl
fsubrl
mov
add
mov
jecxz
sbb
fsubrs
clc
add
add
pop
add
imul
aam
and
add
xchg
or
fnstsw
add
add
rorl
add
xorl
push
pushf
inc
add
mov
add
xor
sbb
add
out
add
push
add
cltd
or
in
xor
cli
sbb
dec
insl
ret
daa
and
sti
mov
sbb
mov
add
add
add
jge
negb
add
fnstcw
add
add
rol
js
ret
adc
in
lahf
cs
mov
xor
or
outsl
add
shlb
js
xor
int3
dec
xor
xorl
xor
ret
pop
cmc
icebp
cmc
xchg
mov
xchg
insb
add
jb
and
sbb
push
add
dec
add
adc
add
mov
mov
sbb
xor
dec
aam
mov
add
xchg
dec
mov
add
pop
add
in
jp
pusha
add
add
xchg
sbb
sti
push
imul
dec
loop
add
add
lock
push
sub
xorb
scas
mov
add
mov
out
xlat
mov
mov
mov
add
sti
repz
lds
add
lahf
xchg
pop
pusha
add
and
xor
cmc
sub
in
enter
sbb
inc
dec
add
sub
jg
movsb
mov
dec
push
ffreep
sub
iret
stc
negb
add
out
mul
in
add
push
add
mov
add
or
xor
jnp
add
add
mov
mov
mov
ss
scas
hlt
insb
add
push
cmp
clc
je
in
int3
lds
add
add
test
mov
add
push
add
fldenv
add
mov
das
push
add
mov
scas
daa
outsl
stos
adc
add
add
push
add
pusha
add
mov
call
add
cmp
or
add
andb
loop
adc
mov
mov
sbb
ja
add
add
add
inc
add
add
mov
movb
add
jne
rclb
int
inc
sarb
add
popf
test
mov
lret
movsb
in
out
cli
cmp
ret
popf
in
add
mov
dec
push
xchg
xor
les
add
add
std
lret
hlt
mov
xchg
push
mov
pop
bound
mov
mov
add
mov
add
mov
mov
fcomi
dec
add
clc
cwtl
inc
add
dec
add
add
call
bound
sub
lods
xchg
ljmp
pushl
add
jb
adc
dec
mov
mov
sub
imul
or
jb
add
cmp
mov
shr
cwtl
cmp
or
sbb
mov
add
bound
push
add
add
add
add
jl
in
inc
popa
push
add
add
stc
dec
xchg
lret
aaa
mov
cmp
push
fsub
jle
jns
cltd
dec
mov
sub
mov
dec
mov
push
test
xor
jno
mov
push
add
add
jg
movsl
or
fistps
pop
add
addr16
mov
or
and
lahf
xchg
jne
or
xchg
loope
add
negb
mov
add
mov
add
add
aas
in
sbb
lret
mov
push
add
add
cmp
add
jnp
int3
xor
cmp
xor
add
add
xor
test
in
and
add
fbstp
pop
stos
xchg
add
jae
jb
mov
fmul
or
inc
add
and
arpl
dec
add
cwtl
orb
fisubrs
sub
pop
loopne
cld
sbb
sbb
jbe
and
cli
test
enter
mov
xchg
xchg
cltd
sub
and
cmp
inc
pop
jle
in
pop
xor
add
add
push
add
xchg
add
dec
add
scas
scas
lret
mov
dec
push
mov
imull
int
add
xchg
add
add
inc
dec
add
add
add
ljmp
cs
sahf
adc
and
add
jno
add
mov
data16
pop
xchg
push
add
add
std
les
or
sub
into
xorb
test
add
into
jmp
push
add
les
jns
pop
shrb
add
bnd
mov
pop
adc
and
pop
pop
add
add
push
jg
sti
js
les
add
popa
cmp
mov
add
das
lahf
sbb
xchg
lea
add
mov
xchg
out
mov
cmp
sub
push
add
gs
jns
add
xchg
jmp
push
mov
add
aad
xchg
jns
xlat
or
add
fstps
or
pop
jns
add
sub
shrl
and
or
add
mov
add
iret
mov
push
call
adc
push
test
insb
add
lcall
push
push
add
add
mov
into
inc
add
movsl
sub
dec
lret
fldl
in
add
add
les
insb
add
inc
adc
lcall
mov
dec
add
adc
sub
addl
stc
xor
bound
mov
mov
sub
dec
mov
cltd
pminsw
sbb
sub
add
sarl
pop
add
call
add
dec
add
clc
and
loope
dec
add
popa
mov
mov
add
outsl
adc
stc
out
jmp
jne
outsl
loope
pop
insb
add
jb
adc
mov
inc
or
adc
lds
jno
add
add
mov
add
jne
ret
popa
out
mov
dec
add
xor
push
add
sbb
lods
inc
add
aaa
lds
add
orb
add
cli
add
outsb
add
rol
outsl
fwait
sub
or
jne
xor
sub
shl
mov
add
mulb
push
add
mov
mov
dec
mov
insl
imul
int
pop
pop
inc
add
add
sarb
cld
imul
std
mov
mov
inc
mov
sub
add
in
push
add
inc
mov
add
push
aam
pop
cmp
add
xchg
mov
pop
add
jl
lods
out
dec
dec
add
add
xchg
lret
fiadds
mov
clc
and
add
aas
sbb
mov
pusha
add
push
add
add
ret
or
aas
xchg
imul
aam
call
test
add
cmp
adc
adc
pop
add
push
add
add
outsb
add
out
adc
movsl
lcall
je
negl
add
add
nop
mov
add
mov
stc
fiadds
add
cwtl
mov
ljmp
pop
in
rclb
add
adcb
and
cld
xchg
add
add
xchg
mov
and
inc
add
add
js
movsl
mov
mov
inc
lahf
lret
add
adc
lds
data16
inc
je
push
dec
dec
test
aad
into
jmp
jne
pop
outsb
add
or
icebp
stc
inc
xchg
cmp
lret
ret
jecxz
data16
outsl
insl
loopne
xchg
mov
mov
daa
mov
jo
sbb
mov
js
inc
add
inc
add
mov
push
sub
mov
push
add
out
insl
notl
push
add
add
jbe
pop
sti
roll
in
mov
icebp
dec
add
pushf
cmpsl
pop
mov
mov
xor
call
lds
adc
lock
xchg
xor
loope
jle
movsb
fcompl
jbe
enter
pop
add
xchg
popa
inc
add
mov
fldenv
push
in
sub
in
add
mov
repz
add
xchg
leave
push
add
addb
imul
popa
rcll
arpl
fdivr
mov
popf
sbb
push
add
out
mov
mulb
xor
in
sahf
dec
movsl
adc
pop
out
xchg
mov
sub
sti
cs
or
mov
out
add
xor
int
add
rcll
mov
add
pop
pop
add
add
pop
cmpsl
cmpsl
xchg
ds
or
sub
add
insl
adc
mov
rclb
mov
ds
in
lock
out
adc
jp
mov
add
add
add
add
add
mov
xchg
xchg
stos
mov
add
int
lret
xor
add
aas
xchg
jo
ret
push
add
sub
call
lret
push
push
add
add
add
jns
mov
inc
loope
dec
add
jge
or
stos
jae
and
popa
sbb
push
add
pop
out
add
addb
push
jno
mov
fbld
cmp
inc
add
jge
add
add
add
stos
cmpsb
mov
stos
push
jo
stos
xor
xchg
fcmove
loope
aas
xchg
pop
add
clc
adc
orb
xchg
mov
pop
js
or
aas
insb
add
pop
ja
dec
add
in
add
popa
dec
andb
ja
add
cmp
jle
lcall
add
push
add
ljmp
mov
lods
pusha
add
jno
sub
es
jns
push
add
dec
adc
inc
add
add
out
and
mov
clc
insb
add
mov
add
out
sbb
add
add
in
add
imull
or
mov
add
test
mov
sahf
pop
out
add
sti
inc
add
in
lahf
xchg
or
xor
call
mov
mov
data16
repnz
jle
loope
js
xor
mov
jns
add
bound
insb
add
dec
popa
jl
repz
je
out
or
daa
xchg
jle
mov
add
lods
cmp
mov
pop
fldl
cwtl
arpl
test
mov
mov
sbb
addr16
dec
add
mov
out
push
add
add
add
jno
inc
add
adc
xor
dec
add
out
jbe
xchg
lds
mov
dec
sub
and
lods
add
xchg
push
push
add
mov
add
mov
push
add
sbbl
adc
insb
add
sub
mov
inc
add
aas
xchg
cmp
fdivr
in
scas
push
add
inc
mov
adc
add
inc
cmp
rcll
inc
mov
add
or
mov
fcmovbe
subb
inc
add
add
add
push
add
inc
add
add
fistpl
jno
add
enter
add
xor
add
add
stc
jno
dec
add
add
adc
cmp
inc
push
adc
push
add
push
adc
push
add
add
fwait
sbb
or
push
mov
fbstp
lret
lahf
fwait
shll
pop
add
pop
sub
mov
lret
add
lret
mov
xchg
flds
int3
inc
add
xor
or
xor
jb
fisubl
add
jne
xchg
sub
movsl
jno
icebp
sub
mov
jb
or
lret
repnz
fcompl
add
add
sub
into
xor
cmc
cwtl
adc
add
pop
mov
mov
fwait
push
cwtl
sub
fwait
or
add
mov
jmp
push
sub
add
pop
add
xchg
add
fbld
mov
leave
cmpb
fcoms
add
add
add
loopne
add
mov
dec
add
repz
lret
sbb
add
mov
stc
aam
out
dec
add
jecxz
jbe
push
add
add
arpl
out
sbb
rcrb
adc
add
and
ljmp
lret
add
insb
add
fldt
add
push
pop
xor
test
and
rcrb
add
pop
and
dec
add
stos
cmp
aas
cmp
and
mov
fsubl
add
and
insb
add
add
mov
add
add
jg
dec
ffree
cmp
xor
fidivrl
mov
mov
add
movsl
dec
add
stc
loop
xor
mov
adc
lcall
adc
xor
test
dec
add
add
mov
push
add
mov
add
out
mov
mov
xchg
fmuls
add
add
add
adc
dec
add
add
test
call
add
and
push
add
add
add
js
inc
add
data16
jae
outsb
add
add
inc
add
inc
jge
add
or
inc
add
mov
popf
xchg
mov
popl
insb
add
mov
in
pusha
add
faddl
add
push
add
add
pushf
cmove
dec
add
add
hlt
ljmp
or
fidivl
jo
jb
mov
lret
adc
fiadds
xor
insb
add
add
cltd
inc
add
jae
shll
dec
add
xlat
jmp
inc
add
add
test
jl
add
test
add
jo
lcall
mov
add
add
aas
jnp
sub
sub
xor
jl
xor
pop
xchg
lret
add
sbb
add
cmp
push
add
add
jl
stos
xchg
xor
sbb
pop
add
add
pop
lods
xchg
into
xchg
lahf
ljmp
fisubrl
sub
inc
add
cmp
add
push
add
add
add
lcall
add
push
or
into
sub
add
add
lret
mov
lahf
xor
scas
data16
insb
add
add
decl
call
push
or
insl
sub
mov
mov
jno
arpl
and
incb
pop
aam
add
adc
in
push
add
add
jle
add
mov
dec
pop
push
add
mov
pop
add
mov
add
aaa
loope
add
out
decb
popf
push
add
add
inc
add
lock
mov
pusha
add
jle
lods
sbb
stos
iret
add
adcl
add
push
arpl
aaa
or
mov
cs
cmp
push
add
dec
add
add
mov
stos
jle
addl
loope
sub
neg
or
pop
xor
xor
jno
add
inc
add
xlat
push
je
cmp
ret
mov
negb
nop
lods
sub
les
aam
add
add
data16
jns
mov
add
outsl
pop
add
les
add
scas
cwtl
aam
push
add
add
enter
add
daa
mov
ffreep
loope
jecxz
je
mov
add
dec
and
mov
or
xchg
add
test
out
add
push
lret
mov
jb
movl
and
clc
xor
jnp
add
fwait
popl
mov
xchg
call
outsb
add
add
add
add
imul
add
add
addr16
add
mov
loope
sarb
add
insb
add
sub
ljmp
add
or
add
movsb
lds
add
js
adc
leave
pop
push
cmp
lods
ljmp
fdivr
mov
cmp
add
add
dec
add
add
sub
and
add
inc
add
xor
mov
ret
add
sub
cmp
mov
nop
mov
add
in
push
push
add
add
sbb
add
bound
mov
jae
add
idivl
in
and
mov
jmp
or
and
add
sub
add
sbb
frstor
xor
inc
add
ret
je
push
add
xor
fwait
lret
ljmp
jecxz
pop
dec
ds
cmc
sbb
sub
mov
add
dec
les
in
mov
xorl
add
add
push
add
cltd
stc
jl
out
add
andl
gs
and
imul
pop
out
adc
add
mov
add
addr16
inc
add
and
jo
xchg
push
add
add
fbstp
ljmp
sub
into
pop
dec
add
jbe
add
add
ret
jmp
incb
inc
inc
add
add
jnp
add
les
inc
push
add
add
scas
loop
cltd
outsb
add
into
cmc
and
jmp
movsl
push
xchg
jle
dec
pop
add
add
add
add
mov
arpl
sbb
movsl
ficoml
mov
add
add
add
das
ljmp
fidivs
in
add
popf
das
in
iret
add
fstpt
cmpb
add
jns
add
xor
mov
add
add
test
add
add
and
pop
repnz
pop
bts
clc
xchg
fisubrs
out
stos
cmp
mov
xor
test
ret
cmp
test
inc
add
inc
imul
scas
js
pop
mov
mov
add
and
add
add
and
or
add
je
inc
add
add
dec
jns
shll
insb
add
sbb
push
add
add
mov
xchg
fistps
sbb
jbe
clc
push
lea
jne
call
mov
daa
insl
out
mov
add
cs
push
add
add
xchg
lods
daa
add
pushf
mov
data16
sbb
jle
aaa
stos
jno
xchg
add
leave
mov
add
out
pop
andb
mov
in
cmp
mov
dec
add
add
incb
add
inc
add
flds
cmp
xchg
lds
push
inc
add
add
jge
add
mov
add
sar
div
push
add
pop
loop
add
loopne
or
jp
in
fs
std
jb
add
xor
push
xor
dec
xchg
push
add
push
add
shrb
mov
call
add
pop
add
add
add
lock
pop
xor
add
add
dec
add
and
jbe
jmp
jne
mov
ds
out
scas
mov
add
sub
and
jns
push
add
pop
add
out
push
cmc
sti
mov
add
push
add
mov
daa
mov
xchg
mov
push
add
cmpsb
adc
test
add
mov
add
ucomiss
push
add
and
push
add
add
and
jg
aad
add
pop
add
jge
clc
mov
sti
out
add
int3
jmp
add
pop
sbbb
add
ret
add
push
add
add
add
dec
ficoml
xor
in
cwtl
sub
scas
test
das
or
add
loopne
add
add
add
add
mov
fstl
inc
sbbl
mov
add
or
pop
add
cmp
into
and
adc
data16
movsb
ret
dec
mov
add
lods
mov
cmp
mov
dec
add
inc
cld
lcall
mov
xchg
cmp
cmpsl
mov
ret
pop
add
mov
pop
add
ret
add
fisubl
enter
call
fistl
insb
add
add
xchg
or
repnz
mov
inc
add
fs
sub
sub
in
adc
jbe
adc
leave
sbb
add
add
into
aaa
and
inc
jne
push
add
add
clc
pop
jecxz
std
aas
jg
add
shlb
xor
lcall
add
add
add
xchg
add
dec
xor
jg
add
rcl
adc
jae
lcall
push
add
mov
dec
repz
mov
out
push
jge
add
inc
add
pop
mov
cltd
push
add
mov
cwtl
fists
add
je
xor
ja
or
sub
add
cmp
cmp
cmp
or
or
xchg
add
aad
daa
mov
sbb
in
rorb
cmp
or
add
jnp
shll
add
lea
std
imul
out
mov
aam
mov
fdivl
add
hlt
pop
push
jne
add
mov
ja
add
and
jge
stos
xor
cmp
imul
fisubrl
sub
add
add
add
and
adc
rep
mov
add
lds
and
xchg
inc
add
add
sbb
xor
shll
cmp
pushl
gs
add
add
add
std
jmp
add
dec
add
xchg
jge
add
addl
mov
imul
sbb
imull
jae
jp
dec
add
jp
mov
xor
jp
and
outsb
add
push
add
and
iret
cli
add
add
in
add
and
addl
fldenv
inc
in
add
rorb
ffree
negl
xor
add
hlt
out
test
clc
mov
add
mov
or
sbb
adc
scas
mov
xchg
cld
idivl
movsb
mov
lock
movl
cli
bound
jecxz
add
insl
pop
sbb
add
lret
pop
add
and
cld
mov
dec
add
std
outsb
add
inc
add
adc
jp
xlat
xchg
pop
fdivs
or
movsl
fwait
mov
in
std
pop
cmp
in
pop
add
xchg
jne
add
add
leave
sbb
push
add
add
add
add
fists
adc
rorb
loope
push
add
repnz
xchg
xor
vmovq
aam
xor
cmpsb
arpl
sub
inc
les
add
add
add
push
xor
mov
adc
push
or
mov
sarl
subl
sub
inc
add
test
add
popf
fcmovbe
incl
xchg
xlat
jae
add
cmp
std
stos
mov
decl
add
mov
sbb
cltd
jae
sbb
add
add
dec
add
add
add
js
aam
aas
in
sbb
add
and
lea
adc
dec
add
add
cs
pushf
pop
add
add
leave
prefetchnta
aad
add
add
shll
iret
or
int3
jge
add
movb
sahf
jb
out
sub
ret
push
hlt
push
hlt
stc
in
sub
sti
popa
test
mov
outsb
add
mov
add
imul
add
sahf
inc
add
add
cmc
jbe
pusha
add
nop
mov
adc
outsb
add
add
add
les
into
push
pushf
mov
add
out
xor
pop
xchg
xchg
les
add
xchg
lcall
add
aad
add
mov
adc
bound
jmp
mov
orb
stc
jae
xchg
xor
arpl
lea
sub
add
push
fimull
add
jp
cmp
ds
dec
sbb
test
data16
mov
sub
sub
add
mov
cmpsl
gs
push
add
sbb
add
add
mov
loopne
jno
add
add
add
cld
outsl
add
add
add
inc
push
pop
js
dec
push
scas
int3
in
push
add
xchg
mov
jno
mov
jno
xlat
dec
int
lods
orb
add
rolb
dec
add
add
push
add
and
add
push
add
add
jge
jb
call
movsl
mov
add
add
outsl
in
jb
mov
mov
cmp
hlt
inc
aaa
inc
add
test
fiaddl
sbb
fs
rep
or
outsl
stos
aaa
rcrb
inc
dec
add
cmp
loopne
inc
add
add
pop
xor
cmpsl
push
add
cmp
fsubl
fnstenv
add
imul
add
in
sahf
fists
add
and
dec
popa
mov
je
xor
add
or
ds
insl
add
adc
jnp
loop
js
adc
jbe
push
add
xchg
add
mov
in
or
cwtl
dec
jmp
add
dec
add
xor
in
add
rorb
adc
pusha
add
pop
add
es
into
jl
jecxz
or
repnz
hlt
dec
add
add
and
jno
mov
bound
call
pop
add
add
mov
cmc
xor
push
xor
lahf
outsb
add
add
mov
xchg
sbb
adc
fcoml
push
add
add
pop
fdivrs
aas
xor
icebp
out
sbb
and
mov
data16
xchg
lods
or
mov
sub
pop
inc
add
shll
or
mov
add
mov
jmp
jbe
mov
add
add
mov
push
add
fwait
mov
in
add
mov
pop
add
jno
xchg
pushf
xchg
minps
add
aaa
sbb
pop
test
push
add
pop
lods
or
movsl
adc
jecxz
adc
add
out
cltd
mov
add
push
add
and
and
inc
push
icebp
add
xor
sub
dec
push
add
daa
adc
sub
dec
pop
mov
jp
pop
add
sbb
adc
pop
gs
push
inc
jae
add
dec
add
test
add
xorb
ljmp
shl
add
add
dec
mov
pushf
add
inc
add
and
repnz
pop
add
mov
fs
xlat
jne
cmpsl
pop
add
mov
lcall
jge
pop
add
xchg
fdivl
add
lahf
inc
add
sub
xchg
repnz
add
mov
push
mov
pop
add
ja
fld1
or
add
xchg
add
add
push
xor
xor
cmp
pop
cmp
in
iret
cwtl
push
sbb
mov
push
add
rolb
gs
sbb
dec
add
add
fdivrl
aad
xchg
fucomip
enter
bts
not
bound
mov
add
test
movsl
pop
add
sbb
cmp
add
add
add
add
lret
repz
ds
mov
arpl
mov
mov
ljmp
sti
pop
inc
dec
push
stos
test
xchg
and
into
and
mov
add
popa
xchg
jp
pop
jb
xor
lcall
add
jns
rcrl
sub
jl
or
mov
push
add
add
jno
cwtl
icebp
mov
icebp
aas
arpl
jle
mov
jl
lds
add
add
sbb
add
lret
mov
pop
int3
xchg
insl
jbe
xor
aaa
xchg
add
add
add
xchg
xor
push
add
add
inc
add
fdivrp
push
add
add
adc
icebp
xchg
jns
ret
lret
sub
js
jb
outsb
add
shr
add
ret
jl
dec
or
notb
adc
push
add
xorl
xchg
dec
add
sbb
das
dec
cld
xor
cld
rol
add
add
adc
add
add
cmp
add
cmp
add
sbbl
xlat
repnz
cmp
add
pop
jmp
movb
inc
in
stos
dec
jecxz
add
jmp
sahf
xlat
and
jns
aad
imull
jns
cmpsb
psllw
icebp
orl
xchg
cli
daa
jno
pop
data16
add
add
mov
ret
inc
icebp
scas
sar
lret
sub
jg
add
scas
dec
add
lcall
pop
xchg
aaa
aas
sbb
das
jo
xchg
adcl
add
std
push
cwtl
mov
add
fdivrp
mov
mov
xor
lods
in
pop
jns
loop
xchg
in
mov
add
add
inc
add
adc
enter
ljmp
repz
subl
add
mov
int
add
push
add
xchg
pop
insb
add
sub
jae
sbb
pop
add
dec
add
add
add
sarb
add
sub
inc
inc
roll
add
add
add
mov
push
add
pop
add
add
int3
cwtl
add
cmpsb
cmp
cmp
adc
jbe
mov
cmp
lahf
nop
sub
into
aad
lds
mov
outsl
mov
lret
and
cmpsb
sbb
nop
int3
fstps
add
ljmp
hlt
and
mov
loope
insb
add
add
pushf
cmp
pop
cli
xor
shl
add
or
shrl
add
push
add
add
outsl
test
andb
sub
jmp
cmp
mov
add
cwtl
cmp
test
add
outsb
add
add
sub
js
addr16
divl
add
add
push
add
cmp
xor
sbb
cmpsl
cmp
push
add
add
add
lahf
stos
movq
stc
push
in
test
or
sbb
add
ja
cli
je
je
popf
xor
ja
icebp
in
add
and
mov
inc
add
pop
mov
jg
leave
outsb
add
add
rorl
cwtl
ret
in
ss
mov
jp
inc
mov
dec
add
in
xor
inc
jb
arpl
insl
mov
add
or
add
outsl
pop
add
daa
pop
add
add
add
mov
pushf
add
mov
add
sub
pop
js
test
mov
imul
add
stc
fcomip
pop
pop
add
pusha
add
fwait
sahf
test
daa
add
add
adc
jae
dec
scas
mov
or
popf
stc
push
add
jae
movsb
ret
add
daa
mov
push
pop
rol
call
add
xchg
or
das
fisubl
cmp
les
aaa
out
notb
add
add
in
sbb
cli
xchg
xchg
mov
xor
push
add
add
into
dec
add
mov
in
mov
popa
pop
add
decl
add
mov
add
add
pop
stc
push
or
xchg
jl
dec
add
or
popf
insb
add
or
xchg
and
fpatan
into
std
jne
add
sub
mov
add
add
mov
mov
sbb
and
adc
nop
sbb
loopne
je
inc
add
add
pop
dec
or
mov
lahf
add
add
insl
mov
call
add
xchg
das
iret
sub
adc
lods
mov
mov
add
bound
jp
out
mov
pushf
lods
dec
mov
mov
xor
inc
add
out
pop
decl
cli
adc
push
add
shll
dec
xor
xchg
movsl
adcl
mov
add
add
jb
andl
sbb
xchg
xchg
add
and
fbstp
adcl
xchg
mov
aaa
test
or
mov
sti
mov
adc
adc
add
add
sahf
and
test
jb
daa
or
push
add
or
adc
pop
add
das
adc
sarb
cmpsb
mov
add
add
add
lods
jp
push
add
pop
add
cltd
mulb
push
add
add
add
imul
int3
outsb
add
leave
pop
inc
nop
pop
fadd
gs
xlat
jl
add
pusha
add
jl
lods
outsb
add
mov
lret
fstl
scas
lret
pusha
add
xor
add
xor
rcrl
loope
dec
orl
add
xchg
or
mov
sub
add
orl
mov
ficompl
add
loope
add
sarb
add
cmp
or
or
pop
add
aas
and
aad
and
iret
ret
add
pushf
jo
cmp
xlat
repnz
das
xchg
test
fsincos
les
push
subb
xchg
push
cmp
iret
pop
jb
lods
xor
pop
pop
add
pop
cmpsb
stc
jmp
test
lret
sahf
push
add
add
xor
jne
xchg
mov
add
cmpsb
hlt
xchg
loopne
mov
scas
mov
popf
jecxz
add
pop
jb
stos
cmp
inc
add
inc
add
or
cmpsb
sub
nop
xchg
xor
add
add
cmc
fdivs
add
mov
push
push
jne
mov
mov
xor
xor
or
bsr
call
xor
lock
int
mov
mov
lret
lahf
push
add
sbb
xor
stc
xchg
add
insb
add
fimull
cmp
xchg
jmp
add
add
mov
pop
push
pop
add
xchg
sub
shl
das
lea
gs
pop
ror
add
add
mov
add
iret
and
lods
sbb
int3
or
imul
add
fcoms
aas
subl
cmpsb
push
add
shrl
sub
xchg
cmp
outsb
add
jbe
jne
jnp
rolb
sub
addr16
into
lock
mov
sbb
add
add
in
call
xchg
lds
and
popa
lahf
add
adc
imul
andl
mov
add
or
pop
add
mov
add
cwtl
adc
adc
mov
add
pextrw
insl
xlat
mov
scas
mov
icebp
mov
add
bound
bnd
test
push
mov
and
add
divb
aas
sbb
mov
sbb
fdivl
add
add
and
add
shl
add
popa
fs
dec
cmp
adc
mov
xchg
jne
add
add
icebp
mov
pushf
popa
or
cmp
sti
aas
loop
add
sbb
sbb
sbb
sbb
popf
add
incl
pop
add
or
push
add
cmpsl
adc
add
data16
icebp
push
add
add
fwait
push
imul
xchg
addr16
add
repnz
std
mov
aaa
shll
idivb
sbb
in
add
xchg
sbb
xor
fcoms
pop
pop
mov
cmpsl
test
test
sbb
in
add
fwait
pop
dec
add
dec
add
xlat
add
cmp
xorb
movsl
insl
in
test
add
fisttps
out
xchg
jle
test
inc
add
add
or
adc
inc
add
add
in
mov
add
sub
fldcw
jg
add
adc
loopne
add
push
and
orl
sbb
adc
add
or
fwait
cmpsb
rcrl
or
pop
add
push
add
mov
jno
add
add
cmp
adc
jg
cmp
popf
aad
lahf
xchg
xchg
clc
pop
out
and
loopne
add
outsb
add
adc
add
add
mov
lea
and
add
dec
sahf
push
mov
jmp
fadds
mov
adc
jns
testb
ret
out
sarl
arpl
call
cmpsb
sti
sbb
jnp
mov
pop
dec
add
ja
add
add
mov
inc
sti
pop
aas
xchg
xor
push
mov
mov
add
outsl
xor
cltd
bound
les
and
bound
cltd
pop
jge
xlat
iret
pop
mov
fs
add
out
clc
das
inc
add
mov
mov
cmp
xchg
add
aam
fdivrl
push
add
fcoml
mov
data16
nop
add
mov
stos
sbb
les
stos
xchg
movhps
and
xabort
xchg
sub
sbb
pop
add
adc
dec
pop
add
dec
add
mov
xlat
push
add
xchg
add
add
push
add
adcl
js
xor
cmp
add
adc
mov
flds
cmp
in
jbe
pop
add
xor
hlt
aas
or
xor
add
dec
add
sbb
in
cmp
and
push
add
pop
cmp
fadds
add
or
ror
repnz
arpl
add
lcall
mov
out
imul
stos
arpl
mov
cmc
and
mov
xor
add
cmp
inc
add
add
add
ja
add
fstl
test
out
std
stc
ret
pop
popf
xchg
gs
adc
add
test
push
add
adc
aaa
fnsave
add
xor
sub
add
add
pop
add
sbb
nop
mov
or
xchg
mov
bound
aam
lcall
pusha
add
scas
adc
cmp
push
cli
icebp
sbb
add
xchg
mov
mov
mov
pop
mov
pop
add
in
imul
cmpsl
pusha
add
insl
jns
out
inc
add
das
xchg
add
mov
into
lcall
sub
mov
mov
add
call
add
cmc
mov
adc
lods
cmpb
pop
mov
add
add
cmp
dec
add
lods
pop
add
add
or
push
add
add
es
mov
jg
add
out
add
filds
add
sub
xchg
call
lock
add
add
mov
stc
sub
ret
sub
jge
add
lea
xchg
xchg
scas
lahf
dec
add
std
mov
cli
mov
sbb
jg
push
add
aad
scas
mov
int3
sub
test
add
add
add
mov
lret
pop
adc
leave
js
jnp
or
xor
in
xchg
push
add
push
dec
outsl
addr16
add
and
das
push
add
pop
mov
and
add
inc
decl
add
add
push
dec
add
enter
jmp
inc
add
add
in
add
movsb
inc
add
add
cmp
hlt
mov
inc
aaa
jmp
mov
add
int
pusha
add
out
and
pop
add
ljmp
jnp
add
pop
add
add
cmp
or
aam
xor
lock
xchg
pop
add
push
xor
add
mov
insl
adc
repnz
add
xchg
dec
add
fiaddl
in
jno
imul
add
or
mov
and
add
popf
or
ffree
std
push
add
jle
xchg
stos
dec
iret
negb
add
test
lret
fcoml
add
add
or
movsl
subb
add
es
pop
arpl
add
add
popa
out
pop
imul
mov
add
dec
push
add
jge
add
add
add
in
mov
cmp
ljmp
mov
sbb
in
jae
pop
shl
push
inc
mov
mov
insb
add
pop
sahf
aas
dec
icebp
add
mov
enter
aaa
loop
add
add
xchg
lds
mov
push
add
add
pop
add
add
cmp
add
cmpsl
cmp
shll
add
add
push
shlb
add
aad
jle
ljmp
xorb
inc
sti
mov
popf
jbe
ficomps
add
jl
pop
add
xchg
lods
pop
sub
lds
fsubr
js
inc
add
sbb
sahf
push
push
scas
shll
stos
fdivs
add
add
sbb
push
add
add
add
xchg
loop
in
and
cltd
adc
pop
inc
sub
mov
pop
add
and
cld
outsl
adc
mov
xchg
outsb
add
icebp
rol
add
sub
push
adc
add
fisubrl
xor
jb
mov
sti
in
rclb
or
iret
icebp
movsl
mov
jl
xor
add
decb
mov
push
add
jnp
popa
daa
mov
or
pop
add
lcall
xchg
ret
xchg
push
adc
add
or
les
fdivs
sub
pop
mov
in
jbe
fstps
add
xchg
sub
lds
mov
add
cld
sub
mov
add
mov
mov
mov
add
fidivs
add
add
sub
bnd
dec
addr16
add
adc
sub
xchg
insl
pop
add
cmp
in
add
dec
xchg
dec
hlt
or
insb
add
xchg
subb
add
pop
lret
add
mov
insb
add
add
mov
jge
movsb
inc
add
popa
pusha
add
mov
and
add
jb
repnz
fwait
std
flds
add
cwtl
mov
add
sbb
mov
dec
int3
cmp
dec
add
add
add
insl
jne
es
stc
lods
pop
or
xor
and
xor
push
add
sbb
rclb
dec
lds
sbbl
xlat
mov
and
mov
outsb
add
add
add
test
lock
js
inc
add
nop
out
inc
add
add
xor
in
enter
dec
add
add
dec
data16
add
add
fimull
lock
add
ret
iret
fwait
enter
pop
add
xor
jne
jae
add
loope
add
add
dec
or
sti
iret
inc
sub
dec
add
add
add
insl
sub
cmp
jl
jle
jg
insb
add
add
mov
fstpt
mov
dec
add
add
mov
add
add
add
lds
and
icebp
movsb
cltd
insb
add
and
fdivrs
add
adc
xchg
stc
add
or
in
inc
add
push
add
and
inc
jg
mov
loop
mov
ret
sarb
pop
xlat
cld
in
add
insb
add
pop
mov
mov
jo
mov
add
push
add
data16
ja
pushf
in
xchg
lea
add
add
xchg
fstl
fisttpl
add
jo
fsts
add
faddl
jmp
push
mov
sbb
cs
adc
out
js
sbb
mov
add
add
in
pop
mov
mov
add
cwtl
pusha
add
add
add
inc
add
bound
add
cli
push
hlt
cmp
pop
lods
sub
add
add
inc
add
add
push
add
inc
add
add
cwtl
add
cmpsb
js
jle
movsl
orb
add
movsb
rcr
gs
pop
imul
std
bound
test
adc
insb
add
in
cmc
lods
in
je
arpl
add
mov
add
pushf
jo
push
add
adc
test
adc
fisubl
push
add
sbb
add
imul
fldenv
add
icebp
repz
add
leave
mov
test
pop
in
subl
sub
outsb
add
xchg
mov
imulb
xor
mov
sbb
rclb
lea
mov
xchg
out
adc
sbb
add
add
jecxz
fldcw
add
mov
out
mov
xchg
push
add
pop
add
ds
and
jmp
cmp
jae
cmovp
push
iret
pop
add
jmp
and
pop
push
add
dec
adcb
lds
push
add
push
push
ret
scas
out
jb
das
ss
push
add
ficoml
jo
test
mov
add
lcall
add
jb
dec
fistpll
xchg
mov
scas
cmp
xchg
or
out
and
fbstp
rcll
or
adc
cmp
call
add
push
cld
scas
xchg
cmp
mov
dec
add
mov
inc
add
mov
cmp
pop
add
jb
adc
push
or
sbb
sahf
cmpb
jo
xor
or
pop
add
mov
and
mov
cli
ficomps
in
xor
inc
add
pusha
add
clc
out
adc
movsb
cmp
pop
pop
or
add
inc
add
add
sub
mov
add
lods
or
data16
repz
add
cmp
cmp
ja
add
cmpsb
mov
add
mov
test
or
or
and
mov
inc
dec
notb
add
cmp
test
movsl
fiadds
cli
xlat
jge
add
add
add
jg
mov
shll
add
xchg
lea
and
mov
and
mov
add
add
add
push
add
rolb
dec
sbb
hlt
adc
ror
and
xchg
clc
movsl
repz
test
loop
addr16
cmp
push
add
enter
add
pop
ficompl
loop
add
add
add
mov
jns
add
dec
add
outsb
add
and
xor
sub
add
add
mov
adc
cmp
enter
out
outsl
mov
je
mov
add
add
sbb
add
faddl
add
inc
inc
adc
les
vcvtsi2ssl
jge
xor
add
outsl
mov
add
mov
jle
push
cmp
or
bound
inc
test
pop
sbb
pop
dec
dec
scas
popl
mov
gs
add
call
add
mov
dec
les
mov
xor
inc
push
add
pop
adc
xchg
mov
ljmp
jns
add
push
shl
push
add
add
inc
add
pop
jo
cmp
mov
into
cmpl
add
inc
add
dec
add
mov
in
mov
fcompl
adc
push
fwait
daa
daa
mov
pop
sbb
add
out
jnp
cmpsl
icebp
test
in
jnp
mov
add
inc
fwait
hlt
sub
out
scas
xor
das
fstpl
push
add
pop
cltd
sub
add
movb
imul
add
scas
dec
add
add
sub
add
add
dec
cmpl
add
jmp
js
in
imul
adc
clc
mov
flds
lcall
add
add
jmp
add
add
add
add
add
dec
sbb
sbb
lods
xchg
or
jecxz
imul
loope
inc
add
test
add
add
movsl
int3
xor
ret
inc
inc
add
add
nop
xchg
jp
das
imul
adc
pop
add
roll
or
pushf
aad
out
pop
stos
xchg
add
add
cmp
push
add
add
mov
in
xchg
arpl
dec
lar
cmp
mov
add
add
mov
lea
rcrb
sbb
pop
xchg
pusha
add
dec
add
jbe
mov
cwtl
jecxz
add
fwait
add
add
add
pop
addr16
outsl
test
pop
add
mov
add
pop
addr16
data16
mov
pop
add
jecxz
mov
pop
jne
add
pop
stos
scas
imul
add
iret
lahf
jo
jmp
add
xor
out
leave
xor
int
jae
jmp
into
fsubs
mov
inc
xor
xchg
inc
pushf
dec
add
pop
add
loope
std
cltd
out
or
data16
js
repnz
mov
sti
sub
aad
shlb
xchg
lods
and
sbb
pop
lds
or
add
scas
sbb
iret
int
lahf
xor
and
dec
add
add
push
add
addb
add
mov
inc
pushl
std
push
xchg
inc
add
imul
mov
mov
cmpsl
jmp
imul
add
pop
lahf
fisubl
add
test
xchg
stos
das
mov
add
and
inc
add
sub
xchg
loop
imul
cmp
pmulhuw
adcb
jne
imul
sti
aad
arpl
dec
lahf
call
shl
fld
cmpsl
scas
js
xor
idiv
push
add
cmp
and
jp
cmp
add
lcall
fstl
add
add
xor
out
int
add
mov
mov
arpl
daa
mov
mov
lds
add
bound
xchg
arpl
movsb
sub
pop
jle
pop
sub
cmpsl
cld
imul
sub
add
shlb
lods
mov
insl
push
add
mov
imul
add
add
adc
ret
add
jnp
cmpl
iret
je
mov
dec
mov
rcl
in
mov
call
jne
leave
fldenv
pop
or
out
cli
mov
imull
add
xchg
iret
scas
inc
add
xchg
mov
add
sub
jmp
add
mov
outsl
sarb
sub
rclb
popa
add
stos
jle
mov
ja
add
addr16
and
aad
mov
or
xchg
or
gs
add
fsub
in
ret
icebp
mull
cmp
ljmp
add
jno
xor
adc
repnz
jmp
repz
add
or
in
add
add
add
pushf
sub
int3
inc
push
out
mov
add
sarb
add
jmp
sbb
aam
add
mov
std
pop
imul
sub
in
xchg
adc
add
rcll
test
add
das
adc
in
add
add
inc
mov
xor
mov
int3
movsb
imul
add
lds
arpl
mov
xor
add
mov
negl
add
addb
push
push
add
jne
call
rcrl
push
and
data16
hlt
sbb
xor
mov
add
push
pop
aaa
fsubs
jne
sub
negl
add
mov
add
mov
add
test
pop
filds
add
add
test
test
sarb
loop
mov
adc
adc
ljmp
in
pop
orb
add
and
mov
in
jmp
aam
iret
jg
add
out
cmpsb
push
and
mov
add
fwait
clc
adc
jae
add
shrb
dec
add
lods
sti
adc
add
add
mov
mov
out
les
add
lret
or
ret
ret
add
fcmovu
cwtl
cmpsl
or
sub
xchg
cmp
inc
sub
pop
add
jns
hlt
cmp
fisubrl
add
test
sbb
out
addr16
push
add
add
mov
push
fstps
push
add
mov
fidivrl
dec
push
add
cmpsb
dec
add
test
pushf
cmp
sbb
lods
xchg
aad
adc
dec
add
imul
add
push
out
cmp
mov
lahf
test
add
das
jp
adc
leave
mov
cmpsl
xchg
jmp
cmp
in
xchg
popf
mov
add
ficomps
js
sub
jo
cmp
clc
lods
push
add
mov
push
add
add
aas
push
dec
add
add
ljmp
cwtl
int3
and
das
sbb
lods
xchg
mov
adc
pop
insl
sub
xlat
sub
add
mov
inc
out
adc
sti
iret
sbb
inc
mov
popf
cmp
cmpl
add
mov
fists
sub
cmp
mov
add
and
sub
add
mov
add
dec
push
add
push
add
in
add
jno
mov
andl
popa
cld
mov
cmp
inc
add
cmp
imul
sub
mov
addl
sarb
outsl
das
mov
fmuls
fnclex
mov
pop
add
add
pop
adc
adc
pop
add
xor
pop
add
std
mov
add
mov
inc
add
adc
sarb
add
jmp
addr16
dec
test
push
faddl
cmpl
add
imul
push
cli
stos
pop
add
fisttpll
sub
add
xchg
orl
fcompl
scas
fucom
push
add
add
add
sub
into
pop
xor
add
add
pushf
adc
push
adc
jle
pop
iret
xor
jle
iret
jns
push
mov
add
xchg
xchg
cmp
cmp
adc
inc
rcrb
cmp
bound
hlt
mov
popf
sub
xchg
adc
jl
ljmp
mov
loopne
cmp
testl
mov
popa
jb
cmp
jge
ljmp
add
dec
xor
xor
jnp
aad
and
lahf
pop
mov
das
xor
fs
jle
in
mov
add
mov
cld
cmpsl
stos
dec
pop
add
add
lret
mov
add
out
in
push
movsl
pop
add
add
xor
dec
lret
mov
xor
ror
out
lods
inc
push
or
shlb
mov
clc
decl
jecxz
jo
cld
jae
dec
adc
push
add
add
pop
mov
lret
dec
outsl
xchg
sub
adc
addb
test
adc
out
shlb
xor
cmp
mov
xor
add
adc
mov
jo
mov
jmp
add
xchg
xor
cmp
idivb
push
add
cmpb
lea
int
pusha
add
mov
or
fmull
ret
and
or
xor
js
xchg
inc
add
arpl
sub
push
add
sbb
add
add
mov
add
inc
das
dec
hlt
in
add
ficomps
add
xor
cmp
and
insb
add
shll
mov
add
jo
push
add
xchg
xchg
dec
lcall
lods
mov
aaa
inc
add
sahf
inc
add
stos
rcr
lods
sbb
adcb
jae
lret
lock
dec
mov
and
lods
dec
mov
mov
xor
or
enter
mov
add
ret
pop
xchg
mov
call
add
repz
lret
dec
push
test
sbb
scas
mov
sar
add
add
enter
xor
xchg
repnz
mov
inc
add
mov
inc
fisubrs
ja
inc
add
mov
cli
cmp
out
stos
add
and
aas
push
add
add
inc
mov
adc
pop
sub
clc
stos
lgs
sub
imul
add
mov
popa
aaa
insb
add
int3
pop
data16
loopne
xor
xor
pusha
add
cmpsl
test
add
cmpsl
in
jmp
lds
stos
jae
sub
sbb
add
xor
sub
out
push
add
add
data16
outsb
add
add
jne
add
xchg
fisttps
hlt
test
mov
push
mov
add
adc
daa
pop
bound
aam
leave
mov
imul
add
add
add
add
add
jl
xor
dec
add
scas
lret
insb
add
add
sub
shlb
ret
xlat
mov
dec
add
jne
push
xor
rcl
loope
in
add
sbb
adc
popa
xchg
test
add
add
and
sub
into
pop
cmp
sbb
add
xchg
or
adc
sub
jp
push
cltd
lahf
or
pop
push
mov
mov
dec
and
jp
test
add
fwait
push
add
or
jg
add
add
jg
xor
shlb
hlt
cmc
xchg
sub
imul
add
add
pop
add
mov
xor
test
shll
ficoml
add
subb
ja
ja
adc
add
add
and
cmpsb
mov
add
mov
add
add
xor
mov
xchg
push
add
and
mov
xchg
push
add
std
xchg
inc
mov
add
add
out
lret
frstor
bound
xchg
lret
dec
jg
dec
add
and
add
add
jnp
add
push
shlb
push
sub
sti
pop
aas
mov
daa
and
mov
push
mov
rorb
nop
inc
jp
push
fabs
js
test
cmp
pop
add
mov
cld
jle
xor
add
or
lahf
and
cmp
xchg
add
add
dec
jmp
adc
inc
add
xor
aad
lock
aad
pop
mov
clc
push
add
lods
clc
jb
cmp
push
add
pop
add
xchg
movsb
xchg
cli
adc
sarb
sbbb
add
push
add
inc
add
aam
add
xor
stc
stc
sub
push
add
cmpsl
js
faddp
cmp
add
mov
inc
ja
push
cwtl
sub
nop
sarl
add
enter
orl
or
add
add
add
fisubl
rcll
packsswb
mull
sub
or
and
insb
add
stos
push
add
add
iret
sahf
jmp
add
lock
addr16
add
xchg
lods
les
bound
lcall
add
and
mov
dec
add
lcall
js
int3
adc
rcrb
rclb
xchg
int
add
add
ja
dec
add
fistps
enter
add
lods
stos
cmp
add
jns
add
mov
xchg
xchg
loopne
push
ljmp
pop
add
add
jbe
jge
add
and
add
sbb
push
je
inc
pop
inc
add
mov
lret
adc
add
push
cmpsl
jge
or
and
lcall
add
loop
add
mov
aas
adc
mov
mov
fsub
jne
loope
add
loopne
pop
rorb
sar
adc
sahf
sbb
sbb
sub
stc
add
add
aam
cmp
mov
add
cmp
add
outsl
mov
into
cmp
test
jb
imul
jb
and
repnz
jno
inc
add
add
add
aam
add
xchg
mov
lret
adc
add
add
inc
add
and
xor
js
dec
adc
adc
dec
mov
cwtl
pop
arpl
adc
pop
sbb
fsts
add
arpl
mulps
jbe
and
xlat
push
add
add
add
sub
arpl
xchg
js
je
xchg
jmp
mov
mov
roll
add
cmpsl
push
add
sbb
in
push
add
jb
das
inc
xchg
rol
repnz
mov
add
add
cltd
add
call
add
add
sub
aas
orl
add
add
add
je
xor
jg
mov
add
sub
dec
dec
add
repnz
add
add
mov
add
sbb
jg
gs
lods
and
add
shlb
adc
jbe
jbe
lods
aas
cmp
test
jnp
repnz
or
sub
xor
cmp
and
add
lds
adc
in
das
out
faddp
pushl
add
lret
frstor
add
sub
add
pop
jne
ret
mov
repnz
inc
mov
jp
pop
sbb
xchg
mov
or
sub
inc
add
add
and
in
xor
movsb
fidivl
adc
in
pushf
in
mov
and
int3
sbb
xor
mov
push
add
fcoms
add
aam
add
jnp
add
aas
lods
lret
mov
add
add
add
push
adc
jbe
je
cmpb
add
inc
add
add
aas
das
dec
add
fdivl
nop
gs
adc
sti
sbb
jecxz
out
out
add
imul
add
push
mov
mov
dec
add
mov
pop
jne
xchg
test
add
stc
arpl
add
add
dec
add
pop
lods
cld
sub
lcall
xor
xchg
dec
jp
stos
jno
sarl
lock
add
add
add
add
int3
mov
cltd
cmp
movsb
cs
pusha
add
outsb
add
dec
dec
add
dec
hlt
cli
mov
xor
popa
xchg
and
jne
aam
and
inc
add
inc
add
cld
mov
ja
add
inc
nop
sub
adc
mov
push
add
out
xor
leave
shlb
inc
add
jg
scas
in
dec
cmc
fnstsw
adc
jns
and
imul
pop
add
clc
and
pop
mov
mov
and
repnz
int3
pop
out
add
inc
add
push
add
add
adc
or
jnp
add
inc
add
rcrl
call
add
dec
add
sbb
add
sahf
cmpsl
bound
shl
lea
add
in
cltd
out
jo
pop
xchg
ficompl
sbb
out
in
ret
inc
add
add
cmp
inc
add
add
nop
mov
adcl
testb
xor
fnsave
add
add
sbb
add
push
and
in
add
das
add
dec
add
enter
repnz
xor
add
pop
jle
loopne
jl
aas
add
sbb
add
sub
add
xchg
jae
andl
add
dec
add
inc
ret
add
or
rcl
jb
add
cmc
pushf
push
xchg
div
inc
add
xor
add
add
push
add
dec
add
and
lea
or
hlt
std
inc
add
or
pop
jne
cltd
cld
repz
pop
add
inc
mov
xchg
enter
pusha
add
xchg
andb
inc
mov
movsl
shll
mov
aad
push
add
fsubrs
add
cmp
fcmovne
inc
add
pop
add
punpckldq
jns
lret
xor
mov
add
jne
pusha
add
call
push
test
add
mov
imul
add
fisubs
push
pop
fcmove
lcall
add
add
cmp
loop
mov
add
call
popf
repz
add
mov
into
xchg
pop
add
add
adc
cmpl
inc
repz
test
mov
cmp
adc
mov
ret
add
add
cltd
cmp
cmpsb
inc
pop
add
add
add
fists
add
add
in
outsb
add
xor
enter
add
leave
mov
mov
push
add
xchg
mov
add
dec
xchg
pushf
mov
xchg
jge
mov
add
adc
push
inc
add
icebp
jo
xchg
add
dec
mov
mov
pop
rorb
add
out
add
xchg
push
add
dec
icebp
xchg
js
inc
stc
outsb
add
into
inc
pop
add
add
jns
xchg
sbb
pushf
jb
fiaddl
mov
imul
stos
and
stos
mov
dec
inc
xchg
fidivrs
add
adc
mov
sbb
add
jge
mov
add
stos
push
add
mov
xchg
sbb
lret
add
sub
popf
cmp
icebp
adc
mov
cmc
push
add
and
add
dec
out
fiaddl
ret
add
add
inc
lahf
adc
xchg
ret
popa
xchg
test
dec
sahf
or
repnz
popf
mov
rolb
mov
add
push
add
mov
add
xor
add
mov
add
das
lods
xor
add
dec
push
mov
add
pop
xor
inc
mov
xchg
lea
add
push
add
das
pop
sahf
dec
add
ljmp
add
adc
jo
testl
nop
cmp
cmpsb
call
in
divl
or
add
pop
dec
hlt
fstpt
add
add
push
add
mov
mov
add
popf
jl
or
add
adc
or
test
mov
fistl
mov
adc
mov
add
add
int3
nop
push
push
add
orl
iret
aam
ret
or
out
push
test
fisubl
add
imul
out
loop
add
cmpps
imul
add
add
inc
out
bnd
xchg
mov
jge
mov
add
pop
add
cmp
xchg
sub
mov
sti
lods
rcr
inc
add
cltd
add
push
add
push
aaa
stos
or
add
out
adc
add
push
add
dec
sub
cmp
popf
imul
push
and
lcall
push
add
add
push
add
mov
adc
add
add
