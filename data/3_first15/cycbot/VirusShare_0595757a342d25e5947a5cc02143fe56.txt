cli
loope
in
loop
in
call
loop
push
out
in
call
loop
loope
in
in
in
call
loop
mov
in
in
jecxz
in
in
in
jecxz
in
out
in
call
loop
ss
in
jecxz
in
jecxz
in
loope
in
out
in
call
loop
jmp
in
in
out
in
in
in
in
in
out
in
jecxz
in
loop
in
jmp
loop
ret
loope
in
loope
in
out
in
in
in
jecxz
in
jecxz
in
loope
in
loop
in
out
in
in
in
in
in
in
in
jmp
loop
push
out
in
loope
in
loop
in
out
in
out
in
call
loop
stos
out
in
loop
in
out
in
jecxz
in
out
in
in
in
loop
in
in
in
jecxz
in
loop
in
in
in
loop
in
jmp
loop
xchg
out
in
in
in
out
in
out
in
loop
in
jmp
loop
dec
out
in
out
in
in
in
jecxz
in
loop
in
jecxz
in
out
in
in
in
loop
in
out
in
out
in
in
in
loop
in
loop
in
jecxz
in
out
in
out
in
out
in
out
in
loop
in
loop
in
in
in
out
in
call
loop
xchg
loop
fwait
in
in
in
in
out
in
call
loop
inc
jecxz
in
call
loop
lods
jecxz
in
jmp
loop
aam
loop
imul
in
call
loop
loope
in
out
in
out
in
in
in
out
in
out
in
in
in
in
in
call
loop
data16
in
in
in
out
in
loope
in
in
in
out
in
call
loop
lahf
jecxz
in
out
in
jecxz
in
in
in
call
loop
inc
loop
in
out
in
in
in
out
in
out
in
call
loop
std
jecxz
in
loope
in
out
in
jecxz
in
in
in
in
in
in
in
out
in
out
in
jecxz
in
loop
in
in
in
loop
in
out
in
jecxz
in
loope
in
in
in
jecxz
in
jmp
loop
xchg
in
in
out
in
loop
in
in
in
out
in
out
in
out
in
out
in
in
in
in
in
in
in
out
in
in
in
jecxz
in
jecxz
in
loop
in
out
in
in
in
out
in
jecxz
in
loope
in
in
in
loope
in
loope
in
jecxz
in
call
loop
hlt
in
in
in
in
loope
in
jecxz
in
loop
in
out
in
in
in
loope
in
out
in
in
in
out
in
jecxz
in
loope
in
call
loop
sub
loop
pop
out
in
loop
in
call
loop
in
in
in
in
out
in
jecxz
in
call
loop
ftst
loop
pop
loop
in
out
in
jmp
loop
ja
loop
out
jecxz
in
in
in
in
in
loop
in
in
in
in
in
out
in
in
in
in
in
out
in
out
in
out
in
jecxz
in
out
in
call
loop
loop
in
out
in
loop
in
out
in
call
loop
ss
in
in
in
jecxz
in
in
in
out
in
jmp
loop
cmc
out
in
jecxz
in
loop
in
in
in
out
in
out
in
call
loop
aas
in
in
loop
in
loope
in
loop
in
call
loop
pop
out
in
jmp
loop
add
loop
cld
jecxz
in
jecxz
in
out
in
jmp
loop
test
loop
repnz
in
jecxz
in
out
in
out
in
loop
in
in
in
in
in
in
in
in
in
out
in
in
in
loop
in
call
loop
fucom
loop
repnz
in
jecxz
in
call
loop
inc
jmp
loop
shl
in
in
in
jecxz
in
out
in
in
in
in
in
call
loop
repz
loop
repz
in
out
in
call
loop
and
jmp
loop
lods
in
in
out
in
loop
in
loop
in
out
in
loope
in
loope
in
out
in
jecxz
in
call
loop
adc
loop
dec
out
in
in
in
loop
in
out
in
jecxz
in
call
loop
xchg
loop
mov
loop
in
loope
in
in
in
call
loop
sahf
in
in
jecxz
in
jmp
loop
inc
jecxz
in
out
in
loop
in
out
in
loope
in
loop
in
jmp
loop
and
loop
pop
in
in
loop
in
jecxz
in
out
in
call
loop
ljmp
in
in
in
call
loop
jecxz
in
out
in
in
in
loop
in
loope
in
in
in
jecxz
in
in
in
loop
in
jecxz
in
out
in
jmp
loop
loopw
in
in
in
jecxz
in
loope
in
in
in
jecxz
in
out
in
out
in
loop
in
loope
in
call
loop
mov
out
in
in
in
call
loop
sbb
loop
lcall
in
in
in
loope
in
loop
in
loop
in
out
in
in
in
jecxz
in
loope
in
loop
in
in
in
out
in
out
in
loop
in
call
loop
adc
loop
cmp
loop
or
loop
ds
in
in
in
out
in
out
in
loop
in
out
in
loop
in
out
in
out
in
out
in
out
in
out
in
out
in
jecxz
in
in
in
jmp
loop
call
loop
aaa
out
in
out
in
call
loop
insl
in
in
out
in
call
loop
out
loop
cmpsl
in
in
in
in
out
in
call
loop
jb
loop
lods
call
loop
mul
loop
lret
call
loop
and
loop
movsl
jecxz
in
loope
in
in
in
out
in
loope
in
in
in
loope
in
in
in
loop
in
in
in
out
in
loope
in
loop
in
loop
in
out
in
out
in
out
in
in
in
jecxz
in
loope
in
jmp
loop
cmp
loop
jge
loop
cmp
loop
mov
loop
mov
jecxz
in
out
in
loope
in
jecxz
in
out
in
out
in
jecxz
in
call
loop
das
in
in
jmp
loop
push
out
in
loop
in
call
loop
mov
loop
push
in
in
loope
in
call
loop
es
in
in
in
call
loop
vpsrad
js
loop
fsub
loop
add
loop
xchg
out
in
out
in
call
loop
js
loop
enter
cs
in
in
in
out
in
out
in
call
loop
jge
loop
push
in
in
jecxz
in
in
in
call
loop
jbe
loop
inc
jecxz
in
in
in
jecxz
in
out
in
loope
in
out
in
in
in
in
in
jecxz
in
call
loop
jmp
in
in
loope
in
jecxz
in
loope
in
in
in
loop
in
out
in
in
in
loop
in
in
in
in
in
out
in
jecxz
in
in
in
out
in
jecxz
in
out
in
out
in
in
in
out
in
in
in
in
in
out
in
jecxz
in
in
in
in
in
call
loop
mov
loop
xchg
loop
daa
in
in
out
in
loop
in
loop
in
jecxz
in
call
loop
add
loop
mov
loop
mov
loop
xor
loop
cmp
loop
leave
out
in
in
in
out
in
jecxz
in
jecxz
in
jecxz
in
in
in
out
in
loop
in
call
loop
push
out
in
loope
in
loope
in
call
loop
mov
loop
pop
in
in
loop
in
out
in
in
in
jecxz
in
in
in
call
loop
adc
loop
popf
out
in
in
in
loope
in
out
in
in
in
out
in
out
in
out
in
loop
in
in
in
loope
in
out
in
in
in
loope
in
call
loop
pop
out
in
in
in
in
in
loop
in
out
in
call
loop
into
in
in
jecxz
in
loop
in
in
in
in
in
out
in
jecxz
in
out
in
in
in
out
in
call
loop
push
jecxz
in
out
in
jecxz
in
call
loop
in
loop
movsl
in
in
jmp
loop
cmp
loop
sbb
loop
in
call
loop
mov
in
in
jecxz
in
out
in
in
in
loop
in
out
in
out
in
call
loop
pop
jecxz
in
loop
in
loop
in
loop
in
out
in
in
in
loop
in
loop
in
call
loop
aas
loop
in
loope
in
in
in
loope
in
jmp
loop
popf
in
in
in
in
loop
in
loope
in
in
in
loop
in
out
in
in
in
jecxz
in
loop
in
loope
in
loop
in
in
in
in
in
in
in
jecxz
in
out
in
in
in
out
in
in
in
in
in
jecxz
in
loope
in
call
loop
mov
loop
in
out
in
out
in
jecxz
in
in
in
out
in
loop
in
jecxz
in
jecxz
in
loop
in
call
loop
fucomip
loop
hlt
call
loop
in
loop
popa
out
in
loop
in
out
in
out
in
out
in
loop
in
out
in
out
in
out
in
in
in
in
in
in
in
jecxz
in
loop
in
in
in
in
in
out
in
call
loop
out
out
in
loop
in
call
loop
mov
loop
add
loop
mov
loop
dec
in
in
loop
in
call
loop
lret
loope
in
out
in
jecxz
in
loope
in
out
in
loope
in
loop
in
jecxz
in
loop
in
in
in
out
in
call
loop
arpl
loop
dec
call
loop
pop
call
loop
jle
loop
mov
loop
in
loope
in
out
in
call
loop
adc
out
in
jecxz
in
out
in
out
in
in
in
in
in
in
in
out
in
jecxz
in
loope
in
jecxz
in
in
in
in
in
in
in
in
in
jecxz
in
in
in
loope
in
in
in
in
in
in
in
out
in
out
in
call
loop
xchg
out
in
out
in
loop
in
loope
in
in
in
out
in
in
in
call
loop
ja
loop
inc
in
in
loope
in
loop
in
call
loop
sub
loop
loop
in
out
in
loop
in
jmp
loop
or
loop
pop
call
loop
shr
loop
mov
loop
in
out
in
in
in
out
in
loop
in
jmp
loop
ret
loop
in
in
in
out
in
loop
in
out
in
loop
in
jecxz
in
in
in
call
loop
and
loope
in
out
in
in
in
jecxz
in
jmp
loop
mov
loop
cld
loop
in
call
loop
stos
loop
in
out
in
out
in
loope
in
in
in
in
in
out
in
in
in
out
in
call
loop
das
loop
in
jecxz
in
loope
in
in
in
call
loop
mov
out
in
loope
in
in
in
in
in
loope
in
call
loop
xor
loop
aad
loop
cmpsl
call
loop
gs
in
loop
in
out
in
out
in
loop
in
loope
in
in
in
in
in
out
in
call
loop
outsb
jecxz
in
in
in
call
loop
fsubp
loop
int3
out
in
loope
in
loop
in
in
in
out
in
jecxz
in
call
loop
scas
loope
in
loope
in
out
in
loop
in
jecxz
in
loope
in
out
in
loope
in
in
in
out
in
loope
in
loope
in
out
in
out
in
out
in
in
in
loope
in
in
in
call
loop
jg
loop
stos
call
loop
stos
in
in
loope
in
in
in
out
in
loop
in
out
in
loope
in
loop
in
loope
in
out
in
call
loop
test
loop
shl
in
jecxz
in
jecxz
in
call
loop
mov
loop
loop
dec
out
in
out
in
out
in
out
in
loop
in
in
in
in
in
loope
in
in
in
out
in
loope
in
loop
in
out
in
in
in
out
in
in
in
in
in
out
in
out
in
loop
in
out
in
loop
in
out
in
in
in
out
in
in
in
loop
in
in
in
jecxz
in
in
in
loope
in
loop
in
in
in
loope
in
loop
in
call
loop
mul
loop
push
loop
ljmp
in
out
in
in
in
call
loop
and
loop
mov
loop
in
jmp
loop
inc
jecxz
in
out
in
loope
in
out
in
call
loop
loop
and
loop
aas
out
in
in
in
call
loop
push
out
in
out
in
jmp
loop
push
jecxz
in
in
in
in
in
call
loop
sbb
loop
cmpsl
loop
in
in
in
jecxz
in
in
in
out
in
loop
in
loope
in
in
in
loop
in
in
in
jecxz
in
call
loop
shl
loop
xor
loop
xchg
loop
in
in
in
call
loop
sbb
loop
lret
in
in
in
jmp
loop
sbb
loop
and
loop
mov
out
in
in
in
in
in
jmp
loop
lcall
in
out
in
in
in
call
loop
xor
loop
mov
in
in
jecxz
in
jmp
loop
shl
loop
lret
in
loop
in
loop
in
loope
in
out
in
out
in
jecxz
in
in
in
loop
in
in
in
call
loop
sahf
out
in
jecxz
in
call
loop
enter
lock
in
loop
in
out
in
out
in
loope
in
out
in
in
in
loope
in
in
in
in
in
loop
in
loop
in
call
loop
arpl
loop
call
call
loop
and
loop
outsl
call
loop
imul
in
out
in
out
in
out
in
in
in
out
in
loope
in
jecxz
in
jecxz
in
out
in
loope
in
call
loop
mov
loop
adc
loop
pop
in
in
out
in
out
in
call
loop
xor
loop
pop
call
loop
sbb
loop
das
call
loop
jb
loop
call
jecxz
in
out
in
out
in
out
in
out
in
in
in
loope
in
jecxz
in
out
in
jmp
loop
xor
loop
shr
loop
repnz
in
in
in
loop
in
loope
in
out
in
jmp
loop
inc
in
in
loope
in
in
in
loop
in
loop
in
call
loop
fucomp
loop
aas
in
in
loop
in
jecxz
in
jmp
loop
loop,pn
in
in
in
out
in
in
in
out
in
in
in
in
in
out
in
jecxz
in
jecxz
in
jecxz
in
in
in
jecxz
in
loope
in
call
loop
sub
loop
repz
in
loop
in
in
in
call
loop
pop
out
in
out
in
out
in
in
in
call
loop
pusha
in
in
loope
in
loope
in
out
in
call
loop
dec
in
in
loope
in
out
in
loop
in
jmp
loop
pop
in
in
loope
in
jecxz
in
out
in
loop
in
loope
in
loop
in
jecxz
in
in
in
loop
in
loop
in
in
in
in
in
in
in
loope
in
loope
in
out
in
out
in
jecxz
in
in
in
out
in
out
in
loop
in
jecxz
in
out
in
in
in
in
in
loop
in
in
in
loope
in
loop
in
out
in
loop
in
call
loop
push
in
in
jecxz
in
call
loop
sub
out
in
out
in
out
in
jecxz
in
jecxz
in
call
loop
push
out
in
in
in
in
in
jecxz
in
call
loop
outsb
out
in
loope
in
jecxz
in
call
loop
pop
out
in
loop
in
jecxz
in
out
in
call
loop
add
loop
call
loop
aam
loop
jle
loop
push
out
in
out
in
jecxz
in
in
in
call
loop
gs
in
in
in
out
in
in
in
out
in
loope
in
out
in
in
in
jmp
loop
dec
out
in
out
in
out
in
loope
in
in
in
jecxz
in
loope
in
out
in
out
in
jecxz
in
jecxz
in
in
in
call
loop
loope
loop
loop
ja
loop
aas
out
in
loop
in
in
in
in
in
call
loop
and
loop
and
loop
sub
loop
jcxz
in
jecxz
in
jecxz
in
call
loop
xor
loop
inc
in
in
call
loop
dec
jmp
loop
ss
in
loop
in
call
loop
pop
loop
in
loop
in
out
in
call
loop
test
loop
mov
loop
cltd
in
in
in
in
out
in
call
loop
push
out
in
in
in
jecxz
in
loop
in
in
in
in
in
jecxz
in
in
in
loop
in
loope
in
in
in
call
loop
pop
out
in
call
loop
nop
loope
in
jecxz
in
out
in
call
loop
and
in
jmp
loop
in
in
in
in
jecxz
in
loope
in
out
in
call
loop
sub
loop
dec
jmp
loop
add
loop
inc
out
in
out
in
out
in
out
in
loop
in
in
in
call
loop
test
loop
mov
loop
repnz
in
out
in
call
loop
aad
loop
pop
in
in
jecxz
in
call
loop
jecxz,pn
in
call
loop
stos
out
in
in
in
out
in
loop
in
loope
in
jecxz
in
out
in
in
in
in
in
in
in
jecxz
in
in
in
loope
in
call
loop
shl
loop
push
out
in
jecxz
in
in
in
jecxz
in
loop
in
out
in
loope
in
in
in
call
loop
jge
loop
pop
out
in
jecxz
in
call
loop
xor
loop
ds
loop
dec
jmp
loop
sbb
loop
ss
loop
pop
call
loop
mov
loop
jo
loop
movsb
loop
in
out
in
jecxz
in
loop
in
in
in
call
loop
fnsetpm(287
loop
inc
call
loop
push
in
in
in
in
out
in
out
in
loope
in
call
loop
jns
loop
ss
loop
pop
jecxz
in
out
in
in
in
call
loop
sbb
loop
pop
loope
in
jecxz
in
out
in
out
in
loop
in
jecxz
in
loop
in
call
loop
ds
in
out
in
out
in
out
in
in
in
out
in
in
in
in
in
loop
in
jmp
loop
int
loop
out
loop
mov
loop
xor
loop
and
loop
xchg
loop
in
loop
in
loope
in
jmp
loop
loop
add
loop
or
out
in
loop
in
call
loop
loope
loop
add
loop
test
jecxz
in
call
loop
adc
loop
and
loop
push
in
in
jecxz
in
jecxz
in
out
in
xor
sti
cmpsb
add
xchg
fstp
jecxz
dec
fadd
add
in
adc
mov
das
mov
adc
ljmp
mov
cltd
or
cli
ja
movl
jmp
mov
data16
jge
add
mov
call
add
js
xchg
pop
and
jne
add
sub
add
pop
add
arpl
decl
call
add
mov
add
add
pop
jbe
imul
add
and
fdivrs
addl
add
loopne
scas
or
add
add
sbb
inc
add
cmp
imul
adc
push
jo
pushl
inc
add
lret
bnd
out
icebp
shrb
stc
or
aad
leave
xchg
jecxz
lods
bound
cmp
add
jp
js
inc
add
int
add
add
jmp
add
add
jge
pop
adc
add
add
push
add
push
add
xchg
jbe
imul
push
add
ss
repz
call
data16
stc
mov
test
mov
movhps
in
insb
lret
cmp
add
or
add
jbe
insb
jle
mov
dec
shrb
add
pop
movl
cmpsb
add
add
icebp
sub
xor
and
push
fcoms
jnp
arpl
stc
jp
mov
inc
add
loope
mov
inc
add
dec
mov
add
addl
mov
add
loope
pop
dec
inc
add
cmpsb
add
jnp
pop
imul
aad
leave
add
out
adc
inc
add
mov
add
ja
add
loop
push
lcall
cwtl
rorb
outsb
aam
rcrb
push
pop
and
ljmp
add
call
and
call
xor
into
lods
jmp
add
xchg
push
add
push
add
lds
mov
and
call
add
js
cltd
aaa
pop
pushf
xor
call
add
jo
jnp
add
int3
sbb
iret
dec
and
lcall
popa
add
popa
add
mov
add
mov
cs
les
lahf
in
movl
psllq
and
cmp
add
mov
jl
mov
aaa
and
ljmp
jp
adc
ficoms
sbb
pusha
add
data16
or
and
jmp
aam
or
in
and
add
lcall
xor
pushl
jp
dec
sub
add
ror
gs
add
movl
mov
ja
xchg
addb
cmp
add
fsubrs
pusha
add
hlt
and
hlt
fbstp
add
stos
or
add
xchg
mov
add
addl
int3
out
mov
lcall
add
ja
add
mov
arpl
ljmp
jge
mov
sti
adc
incl
mov
addb
rolb
fnstenv
sub
add
fldcw
add
or
ljmp
or
add
push
xor
add
shlb
jp
xchg
mov
sti
push
add
ret
add
cmc
xor
ljmp
jg
add
mov
ljmp
push
lods
xlat
cltd
or
mov
push
push
add
int
enter
adc
incl
les
lods
jbe
scas
or
fistps
std
cmpsl
add
test
mov
imul
jnp
xlat
out
sbb
decl
add
ljmp
xchg
jge
add
sub
add
inc
add
adc
add
sbb
movb
sub
incb
add
inc
add
add
into
js
addl
add
push
pop
and
call
fsubrl
add
sbb
jmp
xchg
shll
mov
jmp
out
push
mov
pop
push
add
movsl
add
stc
je
push
cmpsb
add
add
mov
push
add
fwait
xchg
pop
xchg
pop
push
rolb
adc
incl
add
xchg
shlb
add
add
sub
inc
add
jo
dec
pop
addb
adc
imul
add
inc
add
mov
loope
cwtl
jno
decl
lret
add
jmp
add
ficompl
insb
dec
pop
and
mov
add
popa
add
out
mov
or
jl
add
xor
add
cld
int3
int3
negl
arpl
pushl
sub
add
jp
out
popa
add
xchg
ja
add
add
add
cmc
pop
or
add
sbb
add
jne
jb
call
xchg
int3
test
mov
aam
add
add
pushl
push
add
add
test
add
fsub
add
cmpsb
add
add
aas
mov
int
xchg
addl
add
mov
add
or
fstl
add
cs
add
add
xor
insl
mov
add
repnz
mov
mov
add
pop
add
add
mov
add
hlt
dec
mov
pop
mov
jne
jecxz
jbe
mov
addb
add
test
std
popf
add
pushl
dec
pusha
add
out
imul
add
imul
bound
decl
addl
add
pop
xchg
sbb
push
add
sub
add
int
add
add
or
jno
incl
popa
add
sbb
or
ja
xor
jmp
add
lret
jecxz
mov
mov
dec
call
repnz
ret
cmpsb
add
mov
add
cmpsb
add
or
jae
incl
decl
sbb
jmp
jmp
call
pop
xor
ljmp
and
decl
data16
ret
jecxz
xchg
shll
mov
sbb
add
dec
into
jp
leave
movsb
add
add
clc
pop
xlat
bound
push
jmp
scas
hlt
repnz
popa
add
mov
fdivl
xchg
addl
hlt
imulb
xor
decl
push
lock
add
out
rolb
and
fisubs
adc
inc
add
mov
add
popf
sbb
fnstenv
loopne
out
aaa
cmc
inc
add
add
pushl
scas
cmp
push
add
sub
out
xchg
mov
sahf
push
das
pushf
pop
int
add
add
cli
adc
incl
jmp
sbb
daa
add
push
pop
and
pushl
add
iret
xchg
movsl
add
add
pop
add
sbb
mov
cmp
sub
or
call
fsubrl
js
mov
add
mov
inc
add
add
mov
ds
sbb
add
add
add
add
dec
repz
push
rolb
decl
add
mov
xor
incl
mov
enter
test
stc
sbb
rolb
movl
cmpsl
add
add
push
add
cld
out
dec
mov
icebp
or
pop
fimuls
test
negb
inc
add
mov
bound
call
mov
mov
add
decl
addl
or
xchg
pop
xor
sub
addb
sub
data16
sub
and
ljmp
addl
sbb
lods
push
stos
fisttpll
jecxz
addb
add
mov
xor
inc
add
add
fbstp
call
jmp
je
stos
loope
lret
push
add
call
inc
add
add
adc
incl
add
add
call
loopne
insb
push
movsl
add
add
ljmp
loopne
push
popf
repnz
jbe
xchg
into
scas
movl
add
add
or
add
popa
add
and
jmp
add
pushl
add
mov
dec
ror
ds
adc
in
mov
out
in
xchg
pop
xchg
popa
add
repnz
add
in
push
cmp
pop
divl
add
imul
dec
adc
decl
pop
ret
add
add
sub
sub
popa
add
pop
std
push
add
loopne
jmp
cli
sub
mov
mov
add
pop
jecxz
fistpl
mov
jmp
cmp
call
popl
add
popa
add
jmp
add
dec
cmp
pop
xchg
pusha
add
popa
add
cmp
roll
or
dec
xor
loopne
jmp
add
add
sub
add
inc
add
lods
je
add
int
add
add
popf
insl
jg
mov
fdivl
leave
inc
add
decl
cli
push
dec
sbb
add
repnz
sbb
mov
fistpl
push
add
mov
insb
push
lock
das
lret
pushf
cmc
dec
cmp
add
cwtl
mov
enter
add
add
enter
test
xchg
sbb
jmp
mov
inc
add
add
push
out
push
add
xor
incl
cmp
or
or
adc
ret
add
sbb
add
jle
adc
jge
pop
push
xchg
outsb
xor
fisttps
dec
imull
fisttps
xchg
push
xor
call
test
cld
add
add
add
sub
add
xor
decl
test
pop
les
out
aam
roll
rcrl
imul
movsl
add
sbb
push
add
movl
add
daa
add
push
add
pushf
sbb
add
or
add
add
ljmp
add
sbb
insb
les
push
add
adc
add
jmp
add
mov
xlat
adc
fcoms
add
decl
stos
roll
lods
and
call
add
je
or
loop
xor
inc
add
add
sub
xor
decl
and
add
loope
sti
sub
jmp
dec
ja
push
cs
out
jp
add
cmp
stc
repz
std
xchg
dec
pop
sub
cmp
add
xchg
add
add
xor
pop
pop
sbb
cmp
mov
mov
mov
stos
and
ljmp
xchg
arpl
jmp
jl
int
mov
or
add
jl
inc
add
push
add
int3
xlat
and
pushl
add
imul
push
add
test
add
and
jg
pop
sbb
push
add
dec
cmpsb
add
mov
ds
cmpsb
add
add
aas
add
add
aaa
sbb
inc
add
or
add
or
into
add
lcall
mov
out
and
shlb
add
push
fcoml
rolb
call
aas
jns,pt
add
mov
add
mov
xrelease
bound
pushl
stos
je
lds
aam
add
icebp
std
xor
add
mov
add
or
pushl
aam
lahf
leave
pusha
add
mov
inc
add
pop
xor
jmp
add
mov
les
sub
addb
push
cmpsl
add
leave
insl
mov
int3
mov
add
add
cmp
and
incl
fcomps
add
add
sub
mov
add
sbb
jge
jns
adc
jg
add
in
cmpsl
add
decl
add
stc
adc
add
add
stos
lret
lcall
xchg
add
ja
hlt
xchg
shll
push
add
scas
and
dec
xchg
pop
idivl
faddl
add
add
and
add
decl
add
aad
add
shr
mov
add
cmp
push
ljmp
sbb
sar
xchg
iret
add
ljmp
add
sarb
sub
addb
dec
sqrtps
call
add
je
jns
lods
jbe
jge
add
sbb
add
push
add
add
inc
add
pop
les
xchg
mov
add
inc
add
mov
add
testl
add
push
data16
gs
add
fistpl
push
sub
data16
push
add
or
add
pop
push
nopl
sbb
pop
arpl
call
add
incl
pop
sbb
test
xchg
xor
lods
mov
lret
addb
push
lds
es
sbb
push
add
mov
add
push
std
adc
mov
add
mov
mov
bound
push
fistpll
test
add
pop
fidivs
add
stos
cs
add
sbb
cs
sti
push
add
roll
add
jnp
push
add
xlat
scas
addb
add
xor
clc
mov
es
je
pop
in
xchg
push
icebp
mov
ljmp
jecxz
jno
decl
idivl
add
out
xchg
loope
ljmp
repz
aaa
in
int3
scas
pop
lret
add
mov
jmp
mov
add
fcoms
pop
jo
jmp
add
push
mov
notl
outsb
and
call
xor
ljmp
cmp
les
mov
add
ja
add
mov
pop
mov
pop
mov
add
imul
add
xor
decl
push
inc
add
add
mov
add
cltd
and
jno
mov
addl
lea
out
dec
call
jno
mov
add
lea
lock
int3
jne
add
sahf
jg
sub
add
cmp
lods
jecxz
xchg
xchg
cmc
ficomps
das
mov
add
add
xchg
lods
popf
adc
decl
sti
ficoms
ljmp
add
xor
call
jge
je
dec
xchg
jl
xor
lds
ja
lods
pop
inc
add
and
fildll
add
out
push
jno
call
inc
add
stos
and
push
add
clc
mov
and
fisttps
jl
test
sti
mov
add
mov
popa
add
outsb
fmull
xchg
xchg
dec
aaa
inc
add
mov
test
out
popf
aas
sarb
push
add
add
add
dec
divb
push
nop
pop
add
test
notb
inc
add
mov
lahf
imull
add
or
jnp
add
sub
test
dec
mov
pop
sbb
fwait
in
or
mov
add
stc
in
in
rolb
jp
lods
movl
clc
test
cmp
add
sub
fwait
sub
add
cmp
rclb
in
sub
push
push
push
call
test
jne
push
push
call
test
jne
mov
lea
push
push
push
push
call
push
call
xchg
cld
lea
sub
mov
lock
lea
lock
ret
decl
xor
aam
add
gs
or
push
xchg
dec
das
mov
inc
add
and
ljmp
sbb
add
divl
add
add
movl
pop
hlt
add
jg
jae
ljmp
cmpsb
add
hlt
inc
add
pop
mov
lret
jb
fbld
add
cmp
xchg
and
aam
add
movb
add
adc
incl
into
insb
or
movsb
add
repnz
fnstsw
lahf
shlb
int
dec
fwait
mov
lods
les
dec
push
cld
enter
and
fidivl
popa
add
jmp
add
push
mov
inc
add
jno
incl
lods
das
divl
lcall
hlt
dec
insl
mov
push
add
push
ffree
add
cmp
cmp
add
lret
out
sahf
mov
sub
incb
jmp
in
lods
inc
add
ret
add
add
repnz
mov
mov
add
leave
push
add
cli
insl
add
ljmp
fcompl
in
stc
aam
out
movsl
add
test
les
outsb
dec
hlt
insb
and
inc
add
movsl
add
add
sti
pop
xchg
adc
push
add
push
add
dec
ljmp
add
dec
addb
or
addb
bound
fimull
movsl
add
add
inc
add
sub
cli
in
jo
inc
add
add
cltd
lds
fdiv
dec
push
cld
sti
mov
sldt
ljmp
bound
incl
dec
jecxz
xchg
pop
adc
fimuls
add
int3
pusha
add
cmp
xchg
stos
inc
add
add
incl
add
outsb
lods
push
negb
mov
imul
add
and
jmp
add
out
dec
in
movl
cmp
add
inc
add
add
ret
add
pusha
add
es
add
add
fcoms
call
add
repz
sbb
add
add
add
daa
add
sub
cmp
add
push
or
add
cmp
call
mov
addb
add
out
pop
xor
incl
jmp
add
scas
iret
scas
dec
pop
jmp
or
mov
add
movsl
add
fcomp
pop
cmp
aam
mov
fsubrl
lret
nop
pop
sbb
mov
sub
cmp
rcrb
adc
decl
and
decl
mov
cmpsb
add
mov
cs
js
adc
push
sub
sbb
sbb
pop
rorl
add
add
pop
jmp
xor
push
mov
mov
sbb
addl
jmp
add
stc
adc
cmp
cmp
lock
cmp
inc
add
movl
add
add
incl
add
xchg
ds
add
insb
jbe
clc
xchg
xchg
data16
je
repz
mov
incl
lcall
add
sbb
add
add
shll
add
jp
rolb
aad
dec
mov
push
and
outsb
mov
add
add
add
add
aaa
ds
pop
shl
add
push
addb
add
cmpsl
add
pushl
jmp
add
mov
addl
cmp
sub
add
repnz
add
and
lcall
sarl
mov
xor
add
add
dec
xor
decl
nop
mov
dec
push
mov
nop
arpl
push
or
imul
addl
add
xor
lcall
lcall
add
sbb
pushl
push
outsl
jl
or
jmp
jp
or
fnstcw
jbe
or
add
incl
call
xchg
push
adc
xor
sub
addb
add
stos
xchg
js
add
jg
inc
add
sahf
test
or
pop
jne
ss
or
add
dec
xchg
rorl
and
decl
xchg
in
shll
inc
add
xchg
in
add
call
add
cmp
fsub
add
test
jle
out
incl
pop
cmpsl
add
jge
lea
ljmp
add
int3
inc
add
scas
mov
fdivs
add
add
roll
add
dec
js
call
mov
jecxz
addb
add
ret
add
dec
int
and
mov
sub
adc
cmp
fcomi
jb
pushl
addl
add
icebp
pop
aam
jmp
add
incl
cmp
mov
add
add
or
add
jmp
cmp
push
out
jmp
incl
push
adc
fcoml
inc
add
add
add
scas
aaa
into
sub
add
xor
call
mov
jl
mov
add
call
iret
lods
dec
lds
push
push
mov
fistps
inc
add
xchg
movb
popf
xlat
adc
jl
lds
ds
lds
into
mov
inc
add
filds
add
mov
add
lock
xor
incl
add
imul
addl
add
mov
mov
shl
add
pop
jnp
cld
loop
repnz
pushf
movl
push
mov
xor
dec
mov
mov
add
pop
jecxz
call
shll
pop
mov
adc
fldenv
sbb
repz
add
in
and
jge
push
add
mov
popa
add
jae
ljmp
add
fucom
add
in
daa
add
jecxz
decb
sbb
sub
sbb
cli
cmpsl
add
int
inc
add
add
fdivrs
add
fistpll
add
jmp
imul
clc
repnz
mov
lret
or
jno
call
es
dec
ds
lret
outsb
dec
jle
pushf
int3
sbb
add
jbe
or
outsl
out
jl
add
mov
cmpsb
add
lock
add
incl
pushl
jmp
add
enter
sub
aam
adc
incl
add
or
adc
pushl
add
leave
ljmp
inc
add
push
mov
and
jmp
add
push
inc
add
jge
pop
add
lret
mov
clc
fdivrs
pop
or
popa
add
push
add
jle
stc
or
jg
cltd
mov
sti
adc
mov
pushl
add
xlat
in
xchg
mov
popa
add
mov
add
adc
shll
add
or
enter
shrl
jl
add
addr16
add
add
add
cltd
aaa
mov
add
popf
test
ljmp
add
cmp
inc
add
mov
je
mov
add
add
in
push
xchg
aad
add
bound
decl
inc
add
mov
mov
push
fwait
mov
add
add
add
aam
add
iret
repnz
add
add
mov
addb
cmpsb
add
ret
lret
scas
adc
ljmp
cmp
dec
dec
jb
push
pop
ja
fsubrs
rcll
add
nop
cmp
lcall
or
aaa
dec
mov
add
add
insb
repnz
add
add
movl
lret
ljmp
shl
cmp
add
out
push
add
pop
popf
mov
add
sti
out
sbb
lea
adc
outsb
mov
add
add
and
lcall
add
stc
add
decl
rorb
pop
test
je
add
dec
dec
xchg
mov
inc
add
sub
dec
cld
stc
xor
decl
mov
add
dec
cmp
add
jnp
in
push
mov
add
or
add
and
jmp
add
push
pop
push
add
push
and
decl
xchg
movsb
add
lods
mov
pop
stos
roll
test
fstpt
cmp
mov
call
je
inc
add
lahf
or
fsubrl
pop
movsl
add
lock
int
inc
add
adc
call
add
out
jns
and
call
jmp
call
add
add
cmc
jnp
add
mov
adc
cli
jo
incl
add
stc
inc
add
fnsave
jmp
js
xchg
add
les
mov
add
push
jp
add
sbb
sbb
and
decl
leave
rol
add
movsl
add
stos
clc
push
add
leave
pop
pusha
add
jns
roll
sub
add
jbe
add
pop
mov
sahf
adc
pushl
adc
incl
add
pop
pop
out
stc
push
lea
add
mov
add
addb
pop
push
add
mov
loopne
mov
jo
incl
lods
add
cmp
mov
mov
xor
jmp
add
shl
add
mov
add
jl
add
mov
adc
decl
cld
cltd
call
insl
sbb
pushl
pushl
mov
and
inc
add
add
fs
loope
pop
or
imul
and
add
das
repnz
incl
inc
add
add
add
mov
add
in
test
jmp
add
mov
sub
test
and
call
cmp
jae
call
add
jecxz
mulb
add
and
pushl
incl
fisttps
push
add
pop
sbb
hlt
jne
imul
inc
add
fcompl
mov
sahf
sub
pop
mov
fsts
test
ret
add
fnsave
addl
lret
les
jne
popa
add
ljmp
add
inc
add
fnstenv
add
outsb
lods
les
lods
inc
add
jg
fwait
dec
dec
and
ljmp
mov
into
into
inc
add
into
pop
mov
add
inc
add
add
mov
pop
mov
add
cmovp
pushl
xor
lcall
add
add
roll
xchg
or
dec
or
mov
es
add
add
pop
mov
iret
jb
decl
jecxz
addb
add
addl
cmp
outsl
adc
fadds
ret
add
add
daa
add
add
fbstp
cmc
movb
in
je
add
aam
add
add
sub
jp
mov
repz
aaa
icebp
inc
add
jno
jmp
nop
lods
lea
add
lahf
loope
inc
add
xchg
addl
add
add
add
add
add
incl
arpl
inc
add
add
imul
jmp
ljmp
inc
add
push
xlat
sbb
add
jmp
add
add
inc
add
addb
add
inc
add
aaa
cmp
dec
jb
incl
sbb
add
call
add
addl
add
add
add
jns
aas
test
add
pop
adc
call
and
aas
dec
dec
pop
pop
add
add
xchg
aad
jne
dec
fisttps
mov
pushl
pushl
add
dec
mov
mov
add
add
pop
pop
loop
push
add
add
add
mov
jbe
add
add
call
fsts
loopne
in
pop
sub
lock
test
div
sbb
pop
lret
in
aad
sub
fwait
push
add
xor
xchg
inc
add
sbb
mov
dec
jge
loop
bnd
add
sbb
je
test
xor
lcall
stc
jns
idivl
mov
add
add
test
pop
repnz
sub
add
mov
or
add
cmc
cvtdq2ps
add
cmp
call
insl
ds
dec
mov
lcall
inc
add
pop
leave
jnp
in
in
sub
add
test
dec
cs
jle
dec
cltd
mov
decl
adc
push
sti
push
xor
xlat
adc
call
testl
add
rclb
add
mov
add
push
pop
mov
cltd
jmp
cmp
add
daa
add
add
movsb
add
lret
call
test
add
pop
add
add
or
stc
aad
sbb
inc
add
pop
xor
dec
test
mov
xchg
outsl
adc
mov
arpl
ljmp
mov
add
add
decl
inc
add
inc
add
xchg
into
pop
loope
loope
push
add
decl
fisubl
cmp
insb
jno
decl
cmpsl
add
out
js
cmp
add
popf
out
jge,pt
js
add
lret
dec
jl
gs
add
add
jp
cld
inc
add
lahf
xor
decl
addl
jae
mov
add
les
mov
into
fs
roll
mov
pop
pusha
add
inc
add
movsl
add
add
and
push
add
mov
mov
add
sbb
add
add
decl
cmp
repnz
gs
hlt
test
pop
jl
pop
jo
jmp
in
lahf
and
aas
dec
pushf
icebp
cmp
add
add
incl
add
sub
add
mov
shrl
movnti
out
push
add
mov
jbe
add
aas
mov
add
mov
add
insb
js
decl
pusha
add
add
add
out
xor
sti
mov
lods
dec
fldcw
fistps
mov
sti
add
jb
jmp
jmp
add
test
xchg
sbb
jecxz
jnp
add
pusha
add
mov
add
aaa
adc
jmp
popa
add
repnz
push
add
xchg
in
lock
test
fnstcw
add
insb
aas
pop
jl
in
roll
push
inc
add
add
jne
add
lret
inc
add
cs
add
addl
popf
ljmp
ljmp
loope
idiv
decl
dec
add
lret
mov
add
mov
add
cld
std
mov
cmp
add
imul
add
shlb
or
add
xchg
add
xchg
scas
ret
add
sbb
push
bound
decl
push
add
cmp
xchg
ljmp
add
je
push
add
cwtl
outsb
xchg
xor
add
xchg
jo
fcompl
dec
dec
sub
add
push
out
xchg
cld
sub
add
bound
std
inc
add
bound
jmp
jno
inc
add
add
cwtl
mov
add
add
sbb
pop
sti
daa
add
inc
add
ljmp
outsl
loope
aaa
in
cltd
push
bound
jmp
clc
pop
push
add
js
data16
add
add
push
push
add
cmp
nop
out
jb
jmp
sub
xor
int
movsl
add
push
or
add
mov
cltd
mov
arpl
pushl
add
xchg
add
shl
add
rolb
add
add
lds
adc
jmp
fmull
inc
add
in
jge
push
add
out
cli
mov
sti
data16
add
adc
dec
jl
test
jbe
jo
push
cmp
test
loop
movl
sti
mov
mov
nop
movsb
add
cmpsl
add
test
mov
pop
or
mov
insb
mov
mov
adc
jmp
jmp
add
xchg
lret
add
add
lcall
outsb
arpl
decl
hlt
pop
inc
add
add
mov
mov
mov
add
movl
ljmp
stc
xchg
or
cli
dec
mov
add
mov
jge
imul
ret
add
int
sub
jmp
incl
add
imul
cli
fstpl
add
cwtl
mov
pop
add
aam
add
decl
pop
add
incl
add
int
add
add
arpl
pushl
add
and
jmp
add
sbb
mov
hlt
mov
mov
pusha
add
rolb
jle
cmp
decl
int
add
ret
add
add
cmc
mov
shlb
sti
add
addb
rorb
dec
add
jmp
inc
add
push
add
addb
sub
xor
jmp
add
add
push
nop
inc
add
push
add
es
add
fisttps
adc
add
add
add
xchg
bound
jmp
push
add
outsl
cs
lret
lcall
xchg
adc
decl
xchg
ljmp
lret
pop
add
add
call
adc
push
outsl
movl
jmp
mov
lcall
add
roll
dec
scas
jmp
add
mov
add
gs
add
add
push
loope
pop
push
out
sti
mov
movsl
add
leave
addl
add
pop
imul
outsb
xor
lcall
loopne
hlt
dec
mov
add
sbb
add
test
out
cwtl
adc
decl
and
add
sbb
add
movl
imul
pushf
ja
inc
add
addl
mov
incl
add
arpl
pushl
add
lock
lds
test
pop
mov
jns
adc
decl
jmp
add
mov
daa
add
pop
mov
or
lea
or
arpl
decl
jle
push
cld
loop
test
inc
add
pop
cmp
add
mov
test
mov
sti
mov
add
inc
add
jmp
add
cmp
jae
decl
add
dec
aas
adc
jmp
jbe
stos
sbb
ljmp
jne
jo
pushl
add
cmp
add
add
addb
xchg
adc
inc
add
pop
xor
decl
lret
pop
add
decl
fnsave
decl
popf
xor
ljmp
mov
sbb
and
inc
add
add
jne
add
lock
mov
in
xor
cs
add
add
pushf
dec
out
jl
add
mov
xor
push
jo
ljmp
ljmp
add
insb
aam
loope
mull
add
or
call
sahf
push
add
ds
das
pop
sbb
add
mov
add
push
add
push
and
divl
sti
mov
cmp
add
lds
jno
call
mov
jp
cmp
inc
add
jecxz
aam
jecxz
decl
sbb
push
add
mov
decl
mov
add
out
xchg
add
mov
les
pop
push
jmp
add
inc
add
cmp
sahf
push
push
adc
call
mov
ljmp
pop
pop
add
movl
adc
int3
int3
add
shrl
ljmp
sub
in
push
add
mov
add
xor
jmp
je
add
push
push
add
mov
add
stc
aad
aas
mov
addl
add
pushl
sub
add
rol
add
pop
cmp
adc
sti
xchg
add
add
mov
add
pushl
add
data16
ret
add
flds
incl
add
add
jmp
add
jae
call
mov
add
xor
cmp
aaa
add
xchg
add
pushl
out
sub
add
enter
dec
add
dec
jge,pt
incl
decl
add
jmp
lock
jnp
add
data16
out
scas
and
call
pop
cmpsb
add
jmp
add
dec
cwtl
pop
fsubrl
lds
mov
outsl
ret
add
and
jg
jae
ljmp
test
mov
add
push
add
mov
hlt
out
lock
fildl
jmp
data16
je,pt
push
add
ret
add
add
push
dec
mov
decl
fbld
cmpsb
add
add
cmpsl
add
push
add
je
add
dec
enter
add
insl
or
push
xor
ljmp
mov
add
cld
ja
lds
addl
imul
cli
add
jno
call
add
mov
xlat
xchg
mov
and
incl
add
daa
add
cmp
add
and
lcall
push
add
add
pushf
inc
add
ss
add
dec
sub
jle
mov
dec
movl
add
call
incl
cmovns
push
add
inc
add
popa
add
imul
push
pushl
or
add
mov
mov
loope
inc
add
inc
add
stos
inc
add
mov
add
xchg
xor
jmp
add
add
movsb
add
repz
pop
pop
mov
lret
lods
enter
ss
out
outsb
cmp
add
lret
and
add
decl
or
cmp
dec
outsl
ds
add
call
add
pop
data16
cld
jns
jmp
mov
je
and
incl
mov
fwait
add
xchg
into
mov
add
sub
add
push
cmp
add
jnp
lods
fmull
popa
add
lds
pop
xor
mov
pop
fst
mov
inc
add
add
test
inc
add
data16
mov
add
out
mov
decl
lret
or
add
dec
sbb
add
add
pop
or
int
stos
mov
test
dec
int
add
sbb
mov
xor
call
cmp
sbb
push
fiaddl
add
push
lock
incl
mov
cltd
pop
ljmp
pop
outsb
xor
add
add
incl
add
pop
add
in
xchg
jo
call
in
cmc
xchg
or
mov
das
pop
fdivr
int
pop
and
jmp
loope
popa
add
pop
and
call
mov
jbe
xchg
repz
stc
outsb
mov
cmp
pop
ret
push
add
incl
movl
add
add
repz
add
xor
lcall
imul
fsts
incl
add
mov
lahf
nop
or
ljmp
ss
test
mov
add
adc
pushl
add
push
dec
cmp
imul
bnd
add
scas
sub
add
test
add
in
out
fs
sub
add
push
jmp
add
adc
incl
in
push
cmp
jae
mov
add
add
add
outsb
lea
mov
push
stos
mov
add
add
mov
push
mov
incl
pushl
stos
jb
pushl
sub
or
mov
ucomiss
cmc
xor
fldcw
jle
lret
add
jmp
cmp
inc
add
loopne
adc
jmp
add
jl
loope
dec
arpl
decl
mov
add
nop
stc
sbb
add
cpuid
add
add
xchg
repnz
je
fsubrl
je
mov
mov
add
add
inc
add
filds
pushl
push
fdivrs
mov
pop
xchg
sbb
cmpsl
add
aas
inc
add
movsl
add
add
cmp
jmp
inc
add
add
out
pop
add
and
ljmp
add
lds
decb
testl
push
add
fincstp
add
add
push
mov
add
cld
add
dec
sbb
mov
or
jecxz
inc
add
out
jge
add
add
mov
pusha
add
add
jle
add
pop
inc
add
fsubr
pop
xor
add
lahf
mov
sub
add
mov
test
clc
cmp
bound
call
xor
call
mov
cmpsb
add
add
xchg
push
add
js
sub
and
ljmp
xor
lcall
add
addb
outsb
or
rolb
or
dec
mov
pop
mov
add
roll
add
add
shl
lods
repz
add
loopne
adc
pushl
add
inc
add
pop
in
test
mov
add
xor
ljmp
xchg
in
pushf
inc
add
inc
add
cs
push
add
sbb
sti
inc
add
mov
add
cli
mov
add
jp
clc
pushf
or
inc
add
jmp
add
pop
jl
add
push
mov
xchg
call
add
aam
push
stc
xchg
lea
add
inc
add
imul
cmpsb
add
add
add
int
add
repz
lods
sbb
add
or
add
pusha
add
sbb
mov
dec
outsb
push
add
lods
sub
xchg
movl
std
rorb
sbb
dec
mov
add
test
lret
ret
add
and
lcall
fimull
add
pop
cltd
cmp
loopne
aam
add
outsl
xchg
sar
lods
dec
mov
ds
jo
decl
mov
inc
add
and
jg
add
add
loop
outsb
mov
icebp
mov
add
std
dec
das
jb
call
rolb
inc
add
add
lds
xor
decl
add
or
add
enter
aam
sbb
add
jg
arpl
incl
mov
dec
mov
push
add
dec
jg
add
scas
sub
xchg
arpl
mov
cli
mov
popa
add
scas
insb
dec
or
add
xchg
loopne
dec
sbb
add
pushl
add
loopne
arpl
xor
call
js
add
shlb
add
jno
incl
jl
add
adc
incl
add
mov
pop
dec
mov
ja
xor
lcall
cmp
jp
push
pushf
fcmovu
test
fistps
dec
xchg
mov
add
dec
xchg
lahf
add
decl
sub
pop
pop
and
jmp
ljmp
lret
mov
add
add
jbe
add
add
dec
dec
mov
mov
add
cld
insb
fnstsw
add
add
add
incl
out
aas
ffree
add
push
add
jne
add
lcall
addl
pop
jae
call
incl
add
add
roll
daa
add
push
movsb
add
incl
call
filds
lcall
add
ss
into
sti
push
add
cltd
nop
int
add
dec
rolb
inc
add
add
insb
cmpsb
add
int3
and
add
dec
insb
out
pop
add
cmpsb
add
fbstp
test
pop
adc
rorb
xor
incl
add
add
loope
hlt
push
add
imul
sub
xchg
sub
add
push
pop
int3
add
aad
add
addb
xchg
pop
rolb
inc
add
add
and
call
add
jmp
mov
decl
add
sarb
dec
insb
les
ss
add
push
jmp
mov
shl
add
fistps
push
ljmp
incl
add
das
jnp
inc
add
xor
incl
mov
out
arpl
cld
pop
lds
mov
add
mov
add
xor
lcall
xor
add
dec
inc
add
test
add
xchg
cli
pusha
add
cltd
roll
lock
xchg
lahf
xor
add
or
ljmp
add
iret
xchg
or
out
dec
aaa
mov
push
mov
incl
test
push
pop
sub
stos
sub
shrl
add
clc
inc
add
into
popf
sub
jmp
call
mov
add
mov
or
sar
addb
data16
cmp
leave
sub
mov
je
cmp
or
scas
xchg
lds
divb
ljmp
lret
incl
or
add
jl
add
addb
push
ret
add
lea
or
add
or
lock
adc
inc
add
ljmp
xchg
push
shlb
add
add
cmp
add
xor
jge
add
xchg
dec
test
inc
add
sbb
mov
daa
add
push
movsl
add
add
jecxz
cmp
sbb
add
mov
or
int
push
add
mov
mov
xchg
sti
cmovo
lcall
jae
ljmp
ret
lock
xor
dec
mov
incl
js
ss
ret
add
add
pop
add
mov
push
add
xchg
loop
and
cmp
dec
adc
call
lds
out
inc
add
lahf
pop
fnsave
add
inc
add
mov
les
pop
out
rclb
roll
add
cmp
add
ljmp
xlat
jb
call
add
lcall
push
add
sbb
add
and
mov
pop
mov
out
cmp
add
loop
imul
dec
jl
dec
push
add
aad
in
nop
mov
add
or
cmp
and
in
push
jp
add
add
add
ret
add
pushl
dec
dec
int
push
add
xchg
nop
ljmp
inc
add
add
incl
add
inc
add
jle
and
rol
add
xchg
pop
add
xchg
and
add
addr16
add
lcall
jmp
pop
std
add
push
sbb
imul
jb
jmp
add
inc
add
or
add
add
add
cmp
add
jno
call
mov
rolb
or
fwait
lahf
dec
pop
pusha
add
xor
call
ljmp
push
or
hlt
popf
fcmovne
add
mov
clc
and
jmp
out
or
xchg
stc
js
xor
cmp
push
mov
cmp
inc
add
fs
push
xor
in
sub
push
add
inc
add
adc
jnp
mov
dec
push
icebp
xor
call
pushf
addb
add
in
push
addb
add
jns
lcall
in
imulb
test
jbe
add
inc
add
in
dec
outsl
js
push
pop
adc
ds
je
cmp
sub
sub
add
jl
add
stos
mov
push
mov
fnstcw
call
push
add
scas
lcall
les
sub
add
push
popa
add
jecxz
dec
je
stos
mov
and
cmpsb
add
add
add
adc
inc
add
cmp
jle
ds
add
cmpsl
add
jl
lea
fidivrs
lods
adc
decl
jp
add
arpl
lcall
jmp
xor
ljmp
adc
push
xchg
pop
xchg
jae
lcall
lods
jae
lcall
movb
mov
jmp
add
push
cmp
cmp
sub
add
add
xchg
addb
popa
add
mov
add
call
daa
add
dec
lret
dec
push
push
add
incl
jecxz
adc
call
jnp
add
add
cmp
fucomi
fcoms
add
pop
adc
lcall
mov
ljmp
arpl
jnp
add
sub
hlt
sub
mov
decl
dec
dec
popf
sahf
xlat
incl
mov
add
jbe
adc
lcall
loop
int
out
jle
dec
cs
jns
add
xor
mov
and
jmp
add
pop
pop
jo
decl
popa
add
add
cltd
ljmp
in
push
add
cs
add
add
dec
cmp
pop
jl
sub
add
rolb
mov
add
mov
sub
push
pop
clc
dec
or
shrb
rcrl
add
iret
rcrl
fidivrs
add
sbb
add
push
lock
bound
fiaddl
mov
xchg
arpl
mov
bnd
call
aas
cmp
out
jae
ljmp
add
lcall
pop
xchg
dec
xchg
lods
lods
pop
icebp
icebp
dec
and
cmp
cmp
xor
out
lea
fdivrs
add
add
jmp
add
movb
add
cwtl
fwait
movl
iret
inc
add
test
or
test
incl
addb
addl
push
add
mov
cli
lods
insl
sahf
push
add
xor
call
xchg
movb
insb
add
jmp
mov
push
add
or
fimuls
out
rcll
pushl
add
int
add
pop
add
outsb
out
cwtl
add
mov
js
adc
lcall
add
xchg
mov
push
add
lcall
adc
fildll
lods
arpl
decl
imull
lock
ljmp
add
adc
jmp
nop
mov
adc
incl
add
mov
movb
mov
out
fisubs
pop
in
repz
mov
sub
imul
popa
add
add
add
lcall
dec
pop
lret
add
or
lods
dec
push
add
cmp
hlt
les
outsl
imul
add
rolb
mov
cmp
imulb
enter
add
add
std
push
mov
dec
pop
loop
xchg
pop
ret
add
loop
sbb
imul
xchg
movl
addl
add
add
sarb
lea
mov
sub
pushl
push
add
aam
leave
sbb
aaa
test
push
push
add
xor
add
xchg
roll
dec
sbb
sub
add
std
inc
add
popa
add
xchg
cmpsb
add
add
fsubl
add
mov
out
rolb
pushl
add
cwtl
insl
and
add
repz
or
mov
mov
jmp
mov
add
add
incl
add
inc
add
fsubrl
add
addl
xor
incl
ret
lods
xor
incl
call
ljmp
mov
nop
stos
lret
ds
das
out
sbb
jno
lcall
inc
add
sahf
pop
notl
cmp
add
mov
scas
clc
div
movl
jo
inc
add
decl
mov
add
lcall
cmp
add
dec
ffreep
add
data16
add
mov
add
mov
add
add
out
movsl
add
cmp
mov
push
rolb
add
lcall
cmc
out
in
addb
lret
sub
add
aad
pop
push
add
test
out
or
pop
jbe
or
loope
or
add
jle
mov
xchg
repnz
scas
ja
cmp
add
aaa
popf
outsb
outsl
test
adc
push
mov
ja
add
add
mov
cld
movsl
add
add
jne
mov
mov
out
cmc
or
add
add
jg
lahf
adc
out
jno
pushl
push
stc
jle
add
xchg
adc
add
inc
add
add
xor
inc
add
push
push
add
and
jmp
push
scas
cmp
push
mov
nop
lock
mov
call
add
add
cmc
int
std
movb
jp
sub
or
add
add
jne
addb
add
hlt
push
test
add
fisttps
add
imul
ds
add
decl
ror
mulb
sbb
add
mov
add
movb
cmp
xlat
pop
cmpsb
add
loop
add
mov
outsl
fsubrl
cmp
cmp
mov
add
es
xor
sti
test
outsb
and
ljmp
mov
add
mov
movl
ljmp
test
add
lods
add
decl
inc
add
jno
std
nop
jno
ljmp
add
js
xchg
ljmp
lret
push
fwait
push
add
mov
repz
push
push
mov
ljmp
shrb
dec
pushf
sbb
and
and
lret
fstps
inc
add
ds
inc
add
incl
jae
cld
mov
xor
cmp
pop
dec
fisubrl
add
dec
dec
pop
inc
add
inc
add
adc
decl
add
pushl
decl
outsb
js
mov
add
add
test
int
add
mov
push
add
in
sbb
mov
add
pop
push
add
out
ja
add
outsl
or
inc
add
xchg
roll
dec
sbb
pop
mov
addb
int3
jbe
add
xchg
adc
ljmp
add
cld
pop
jns
jmp
add
sub
mov
push
fdivrs
push
push
mull
or
mov
add
pop
add
ljmp
xor
lock
dec
pop
sti
mov
ret
cs
rorb
or
add
outsb
int3
lods
adc
ljmp
add
push
xor
incl
hlt
lods
rolb
rorb
add
mov
mov
mov
aad
push
idivl
xor
call
push
mov
mov
xchg
js
cltd
jnp
arpl
mov
xor
and
lcall
add
inc
add
test
adc
incl
sbb
scas
mov
in
and
fsts
add
call
add
outsl
dec
dec
not
mov
cld
push
push
dec
push
pop
jp
xor
out
push
addb
add
jmp
add
inc
add
pop
xchg
mov
sub
add
ret
xchg
addb
fsub
add
inc
add
mov
or
pop
mov
in
aas
insb
sub
jl
inc
add
in
inc
add
mov
push
pop
add
add
out
add
jmp
add
sub
jmp
add
cltd
aad
add
or
jae
jmp
add
int
xchg
add
jmp
lcall
add
jmp
shlb
clc
adc
add
inc
add
xchg
inc
add
shll
incl
incl
push
add
scas
xor
add
decl
jmp
dec
das
cmp
mov
addb
push
add
jecxz
addl
nop
dec
mov
sbb
inc
add
cmp
sbb
mov
fistps
jno
decl
rclb
add
add
ljmp
sub
inc
add
stos
cmp
ljmp
stos
or
mov
add
jns
add
add
jge
addr16
sub
add
add
lahf
adc
mov
add
or
add
mov
add
add
add
adc
dec
jne
add
add
add
ljmp
adc
lcall
decl
aad
add
jle
or
add
jmp
dec
mov
push
mov
inc
add
add
or
aaa
mov
add
outsl
adc
add
jne
add
imul
add
fdiv
mov
add
push
test
add
lahf
enter
rorl
jbe
lock
cmp
add
jmp
add
add
add
sarl
jns
outsb
je
lods
dec
pop
xchg
and
decl
dec
ss
add
pushl
pushl
push
add
movl
add
sub
stc
mov
add
ret
ret
add
xchg
mov
sti
mov
add
pop
sub
fcompl
add
dec
ja
testb
add
fwait
or
ljmp
sub
xor
inc
add
push
add
movl
testl
in
sti
sbb
jmp
add
inc
add
cmp
cmp
sbb
mov
add
decl
cmpsb
add
mov
aaa
addl
cmpsl
add
add
sarb
ret
mov
jno
decl
push
add
sti
popa
add
sti
sub
xor
dec
xchg
add
xlat
icebp
arpl
lcall
arpl
lcall
xchg
adc
dec
lcall
add
imul
add
jne
adc
and
mov
scas
movsl
add
add
add
dec
inc
add
incl
add
lock
or
add
negl
arpl
decl
push
insb
nop
lret
jle
out
fs
add
out
pop
or
push
add
jmp
out
addl
aam
add
add
mov
add
popf
int
leave
shll
jp
pusha
add
fsub
add
cmp
add
mov
jecxz
pop
mov
jecxz
xchg
inc
add
sti
and
jb
jmp
popa
add
dec
test
call
inc
add
and
lcall
dec
xlat
mov
cmp
add
call
add
jns
add
in
inc
add
mov
jnp
add
add
mov
add
mov
hlt
lods
data16
cmp
ror
xor
pushl
aad
add
add
sbb
pushl
in
movb
fbld
push
fsubrl
jp
mov
add
addb
add
add
inc
add
mov
jecxz
cmp
pop
sbb
mov
add
add
add
in
xor
add
ret
add
add
sti
ss
rclb
imul
loopne
inc
add
add
sbb
add
add
add
stc
push
add
cmp
cmp
in
and
lcall
add
daa
add
daa
add
push
inc
add
and
call
fcom
js
aas
pop
jecxz
cmp
addb
and
mov
add
add
test
inc
add
add
ljmp
fisttps
lret
add
cli
xor
pushl
fisubrl
enter
pop
sti
lret
xor
cmp
mov
mov
inc
add
inc
add
pop
pop
add
decl
add
loopne
inc
add
or
roll
stc
outsb
push
add
call
test
xchg
stos
jns
aaa
cmp
add
in
icebp
xor
rcr
pop
pop
movsl
add
cmp
mov
movsl
add
cld
out
sbb
mov
out
sub
arpl
dec
sti
and
push
add
ja
add
add
incl
add
test
fildll
lcall
jmp
popf
iret
roll
stos
mov
xor
add
pop
mov
mov
add
call
pop
stos
test
js
add
inc
add
pop
addb
mov
dec
ljmp
outsb
aad
sub
addb
mov
dec
sti
leave
movl
out
and
pushl
add
sub
ja
repz
xchg
sbb
add
inc
add
call
out
mov
add
call
movb
dec
mov
add
push
add
mov
test
sbb
add
sbb
sbb
aam
stos
leave
adc
pushl
imul
popa
add
jp
xchg
mov
ss
sbb
int3
sbb
xchg
ljmp
add
add
jae
lcall
mov
add
mov
loope
outsl
jnp
nop
movl
call
add
add
sti
out
dec
addb
pop
jmp
add
push
in
in
mov
cwtl
mov
inc
add
jo
inc
add
aas
daa
add
decl
stos
inc
add
lods
push
dec
sti
push
dec
lcall
xchg
inc
add
add
mov
add
inc
add
dec
roll
and
incl
add
int3
aas
jae
call
pushl
movb
add
enter
shrl
call
add
cmp
push
add
sarb
mov
call
call
adc
popf
xchg
adc
call
fwait
jmp
ljmp
add
xchg
jge
ret
add
das
sbb
add
inc
add
push
rol
add
mov
aaa
push
add
dec
inc
add
scas
ret
mov
add
xchg
mov
add
adc
add
incl
jmp
fisubs
add
mov
add
stc
aad
add
xchg
mov
lock
mov
inc
add
adc
clc
push
add
addl
add
xor
push
xchg
cmc
mov
xchg
or
adc
add
mov
sub
or
xchg
cmp
add
add
adc
jle
add
mov
cltd
push
jns
aad
or
movl
lret
ss
jl
jge
xchg
bound
jmp
add
insb
pop
pop
fwait
and
call
lret
jae
decl
xchg
movsl
add
add
jae
jmp
decl
repnz
push
mov
or
adc
out
insl
jecxz
shrb
add
inc
add
out
mov
push
mov
bound
jmp
jno
lcall
fsubl
jmp
dec
shlb
add
in
cli
add
push
and
shl
movl
add
das
std
repz
in
mov
add
or
add
dec
shll
add
lods
xlat
jmp
std
test
dec
in
mulb
rep
or
sub
das
inc
add
inc
add
add
mov
add
call
cld
lahf
cmc
mov
cmc
inc
add
sub
repz
add
add
pushl
stos
sub
stc
addl
rol
add
dec
pop
add
mov
fistl
xchg
mov
cld
fsubs
add
add
call
add
fsubrp
addb
add
mov
xacquire
lret
add
jbe
fnsave
sub
dec
jecxz
sub
jg
arpl
lcall
add
lcall
pop
out
add
add
ret
jmp
add
scas
add
in
push
add
and
jmp
add
lcall
mov
add
sub
xor
call
inc
add
add
js
push
adc
lds
outsb
jle
addb
add
ljmp
sbb
add
mov
push
inc
add
add
pop
add
add
xchg
xchg
sub
test
mull
add
mov
jp
add
pushf
sbb
adc
decl
add
ret
add
adc
in
jle
cmp
pushl
stc
add
inc
add
mov
inc
add
or
mov
movsb
add
mov
jmp
push
lods
enter
inc
add
add
jmp
xchg
push
add
pop
pusha
add
ret
add
add
and
incl
popl
lret
add
add
add
incl
jmp
jmp
add
add
mov
popa
add
jecxz
jno
decl
add
dec
jl
add
xor
call
ljmp
ljmp
das
imulb
add
xchg
loope
jns
pop
jae
decl
mov
pushf
cli
repz
pop
dec
sub
pop
pop
and
decl
jbe
add
add
test
add
addps
add
dec
jae
call
add
enter
ss
insb
es
pop
cmc
adc
ds
stc
mov
fucomi
dec
std
jmp
mov
dec
pushf
cmp
rolb
out
dec
mov
incl
fsub
add
call
add
notl
mov
mov
mov
add
jl
jp
iret
and
cli
movl
jbe
lea
jmp
aas
sbb
fidivrl
add
enter
addb
add
inc
add
test
add
mov
add
addl
js
add
loop
data16
add
cltd
movb
ss
and
push
inc
add
fsubrl
sub
push
add
ja
add
jmp
mov
mov
lods
add
ljmp
call
add
add
inc
add
add
ljmp
mov
in
mov
mov
pusha
add
lds
pop
and
add
pop
lds
push
add
bound
jmp
add
inc
add
out
in
jne
add
sahf
and
incl
and
pushl
cltd
fdivrs
dec
mov
sahf
js
lea
add
imul
inc
add
jecxz
ss
add
and
jmp
add
jb
pushl
into
mov
mull
and
ljmp
add
pop
fildl
mov
pop
addl
mov
add
add
adc
js
mov
mov
add
movsb
add
sbb
loope
pusha
add
nop
outsl
or
popf
ret
add
fmuls
push
push
test
inc
add
call
dec
mov
neg
hlt
fdivrs
push
xchg
pop
add
insl
out
push
add
add
lock
mov
jmp
decl
add
add
xchg
xor
js
jo
lcall
fs
push
add
sub
jne
add
shll
decl
push
shll
jmp
add
adc
decl
push
roll
ficoms
add
mov
lret
lea
add
dec
jb
jmp
lea
call
sbb
add
addb
add
jge
addb
add
mov
decl
mov
mov
add
pushl
jl
cmp
and
mov
or
add
addb
pop
add
add
je
add
push
or
das
jg
nop
dec
xlat
mov
xchg
push
mov
add
clc
jg
add
mov
dec
lcall
incb
dec
mov
inc
add
mov
mov
add
push
jl
sbb
add
dec
sub
add
add
inc
add
sbb
outsb
push
add
dec
inc
add
call
shlb
add
cli
mov
add
inc
add
decl
inc
add
divl
add
sbb
add
inc
add
xor
jns
add
pushl
adc
ljmp
xlat
mov
daa
add
test
lahf
mov
add
add
add
add
add
imul
add
in
movb
and
ljmp
add
add
jns
adc
lcall
and
push
add
push
push
add
jae
ljmp
add
lret
cmp
in
fisttpll
push
das
pop
mov
cmp
xor
decl
add
mull
cwtl
xor
decl
clc
sti
stos
arpl
jmp
sarb
mov
adc
decl
jo
ds
dec
dec
cmp
add
pop
add
add
ljmp
add
cmp
rcrl
adc
out
pop
aam
imul
push
lret
test
push
mov
mov
add
add
aas
mov
add
movb
addl
imul
add
in
jmp
addl
and
jmp
insb
cld
gs
inc
add
and
call
pushf
or
xchg
sti
fisubl
call
insb
push
mulb
add
repnz
addl
add
xchg
add
add
add
arpl
incl
mov
add
jmp
int3
and
cmp
ja
lret
jp
lcall
call
jnp
push
add
pop
int3
sahf
add
mov
call
lods
repnz
cmpsl
add
cmc
arpl
decl
push
add
add
jp
add
pop
hlt
fldcw
jmp
or
addb
jmp
jns
nop
bound
ljmp
incl
cmp
decl
pop
lods
loopne
out
and
decl
adc
pushl
jbe
and
ljmp
ja
mov
cld
int
add
add
mov
rcll
decl
add
inc
add
scas
roll
add
call
xchg
inc
add
movl
add
dec
iret
imul
add
pushl
xor
lcall
jns
add
add
adc
mov
add
push
add
jmp
lcall
leave
ret
add
ljmp
scas
mov
push
or
mov
xor
pushl
add
xchg
rolb
movsl
add
mov
call
je
jle
call
or
fldcw
cli
jmp
aad
add
and
lret
out
sbb
add
outsb
cwtl
sub
cmp
ljmp
and
ljmp
mov
jnp
adc
ljmp
add
ljmp
addr16
add
dec
js
jecxz
rorb
pop
xor
mov
into
xor
add
jp
cltd
ret
add
add
nop
mov
mov
add
aas
dec
inc
add
mov
pop
push
push
add
lcall
add
and
stos
nop
xchg
xchg
cmp
xor
call
sub
add
sbb
add
jg
cmpsb
add
add
add
repz
add
or
sbb
add
decl
add
loop
xor
inc
add
add
lods
call
pop
inc
add
outsl
mov
add
outsb
out
inc
add
mov
aad
pushf
xchg
aaa
repz
cmp
outsl
adc
incl
lcall
push
repz
add
add
add
js
add
add
xlat
xor
pushl
add
add
dec
fsubs
add
pusha
add
add
add
out
push
add
xor
ljmp
mov
add
push
add
mov
push
in
add
add
mov
lock
inc
add
lret
add
add
sti
xchg
stos
jns
mov
adc
mov
fwait
sub
cmp
inc
add
add
cwtl
ja
add
out
jle
push
add
sbb
pop
and
outsl
adc
jmp
ljmp
fwait
push
lock
add
dec
push
ds
mov
mov
and
inc
add
rolb
in
mov
xchg
push
dec
and
pushl
movl
fimull
inc
add
mov
addb
rolb
push
pushf
dec
sarl
dec
lahf
pop
push
add
and
incl
pop
pop
lahf
nop
add
call
inc
add
xchg
xchg
in
fwait
adc
cmp
mov
mov
xchg
shl
add
xchg
xchg
inc
add
adc
popa
add
and
cmp
lods
cmp
add
jmp
add
xchg
daa
add
pop
rolb
adc
add
jmp
jnp
mov
add
mov
out
cmc
roll
out
jmp
mov
ss
add
mov
inc
add
cltd
jne
xor
incl
call
decl
add
ljmp
add
mov
js
mov
roll
scas
jl
add
mov
jl
mov
add
xchg
cltd
xchg
xchg
sub
add
pop
aam
add
push
into
fsubrs
je
ja
jb
decl
lods
push
loopne
cwtl
iret
inc
add
add
mov
jmp
jmp
cmp
out
jge
adc
dec
dec
outsb
test
scas
lock
ds
ret
or
les
mov
add
leave
and
decl
add
pop
stos
bnd
bswap
sbb
add
mov
stos
fsts
adc
ljmp
loop
iret
movsl
add
add
ds
add
add
add
push
stos
aas
xchg
jle
inc
add
add
add
fildl
stc
xor
xchg
pop
data16
mov
test
or
and
cmp
inc
add
mov
push
mov
add
inc
add
push
push
add
dec
mov
mov
out
mov
add
out
pop
pop
das
int
pop
sbb
add
lcall
roll
je,pt
scas
fisttps
add
add
and
incl
add
call
lahf
nop
scas
ret
add
inc
add
pop
add
add
sub
add
jmp
add
add
movsl
add
sbb
add
sbb
adc
cmp
sti
adc
incl
adc
add
incl
add
sbb
add
add
mov
pop
add
cmpsb
add
add
add
mov
add
sar
adc
sti
jns
xchg
mov
add
ja
xchg
hlt
adc
dec
xchg
jmp
cmp
add
xchg
push
ds
add
aaa
sub
add
add
aas
push
adc
dec
cmp
outsb
cmp
push
jb
pushl
ljmp
cmp
pop
fildll
mov
adc
lcall
add
add
and
push
or
add
scas
and
out
insl
sub
jge
sub
dec
movsb
add
push
inc
add
int
add
mov
test
add
loope
inc
add
mov
lea
add
jne
pop
push
int
repz
adc
push
add
call
add
sub
add
cltd
push
add
add
ret
add
test
and
fsubrs
add
jecxz
xchg
pushf
sbb
ret
add
mov
xchg
xchg
daa
add
mov
push
add
das
or
mov
pop
aas
xor
jg
aam
addb
or
or
mov
pop
mov
xor
jmp
add
add
pushl
add
add
add
ss
push
add
pushl
mov
sbb
xlat
dec
sbb
add
push
pop
call
mov
add
mov
mov
add
addl
push
mov
mulb
add
push
add
addb
sbb
add
jmp
sbb
xor
decl
dec
jns
inc
add
mov
popf
sbb
sahf
out
mov
push
add
jp
and
push
lds
cmp
push
add
xor
cmc
repz
or
add
pushl
add
mov
add
into
inc
add
add
cmp
add
push
add
addb
ret
dec
push
add
xlat
addb
in
lds
and
jmp
add
mov
add
xchg
dec
insl
pop
sub
push
sbb
add
ffreep
add
leave
pusha
add
ds
push
add
or
add
call
sub
clc
mov
add
stc
movb
ret
rolb
in
movb
shrb
ret
add
roll
mov
stc
add
decl
add
and
jmp
add
jnp
add
pop
outsl
or
xchg
mov
add
add
or
add
add
xor
cld
mov
pushl
add
ret
xchg
xchg
sub
add
sbb
mov
pushf
mov
call
hlt
data16
cltd
cmp
fiaddl
ljmp
je
add
je
add
cmp
flds
pushl
xor
add
fwait
xor
call
xchg
ds
nop
mov
add
sbb
sbb
hlt
notl
add
add
decl
and
ljmp
or
mov
mov
xchg
ficoms
cmp
test
adc
jmp
adc
lcall
fiaddl
jmp
add
loopne
jae
jmp
ljmp
add
add
mov
add
add
mov
in
std
fs
pop
scas
xchg
xor
call
and
call
lods
xchg
inc
add
add
dec
icebp
sahf
test
add
mov
inc
add
add
pushl
xchg
dec
enter
test
test
xchg
cmp
in
or
or
inc
add
push
push
sub
add
mov
jecxz
and
jg
push
mov
add
in
xor
jns
lds
jae
sbb
call
add
inc
add
or
sahf
push
add
adc
decl
sub
cwtl
mov
and
lcall
add
test
loope
call
fstl
add
les
xor
push
inc
add
adc
ljmp
dec
push
and
lcall
push
add
pop
jbe
data16
add
jp
add
add
incl
add
inc
add
mov
fwait
sbb
add
add
call
imul
aaa
roll
dec
movb
add
sbb
jno
dec
addl
push
add
addb
frstor
mov
addl
dec
test
cld
mov
add
out
pop
xchg
pop
push
faddl
call
in
out
scas
push
cmp
cmp
lret
and
incl
add
push
add
incl
call
sarb
mov
add
add
fnstsw
add
call
add
nop
addb
into
negl
jo
cmp
add
mov
sbb
pop
test
mov
add
dec
cmp
pushl
jnp
pop
add
das
addl
add
adc
lcall
add
push
fsubl
xchg
outsl
or
repnz
jbe
add
add
jb
pushl
js
cwtl
or
add
sub
add
add
add
add
lcall
negl
add
and
decl
add
incl
cli
and
ret
sub
add
inc
add
pop
sub
add
mov
addb
aaa
add
mov
sub
dec
cmp
jmp
add
pop
stos
fwait
jne
add
xchg
pop
pushf
dec
add
jbe
stc
lods
insb
adc
incl
add
popl
call
add
daa
add
sbb
lret
add
shrb
ret
ret
add
cwtl
jle
xchg
call
lds
ror
jge
add
addb
fstpt
add
add
jbe
add
ljmp
xchg
leave
and
std
sbb
dec
movsb
add
incl
and
jmp
add
addl
fists
pushl
ds
stos
into
mov
bound
ljmp
scas
jbe
insb
jno
aas
adc
jmp
mov
add
lcall
adc
and
lcall
cmp
pushf
xchg
inc
add
cltd
pop
addl
sbb
test
jno
call
adc
jp
idivl
add
and
dec
mov
add
push
loope
out
xor
sbb
pop
adc
cmp
dec
roll
and
pop
mov
xor
decl
jbe
or
cmp
incl
sub
add
ljmp
enter
add
adc
jmp
incl
or
pop
pop
mov
fscale
adc
ljmp
cmp
incl
dec
jo
call
cmc
enter
pusha
add
int3
loop
mov
add
or
add
mov
pusha
add
fsubr
mov
adc
call
incl
stc
ret
add
jecxz
call
add
decl
xchg
xchg
cwtl
sbb
push
ret
add
push
insb
ficompl
call
add
lock
mov
clc
das
xor
pushl
add
or
pop
add
in
pop
dec
add
dec
sbb
mov
xor
ljmp
adc
add
enter
jmp
pop
xor
jmp
add
and
add
leave
das
and
xor
ljmp
out
hlt
call
inc
add
stc
mov
cmpsl
add
add
cmp
cli
mov
xor
lcall
adc
jmp
adc
xor
dec
dec
rcrl
adc
jmp
dec
jge
sub
movsl
add
add
mov
add
cld
test
lock
repnz
add
add
sub
or
inc
add
cwtl
in
xchg
fbld
add
xor
inc
add
adc
add
jg
add
ffreep
add
sbb
movsb
add
mov
mov
add
or
add
add
mov
xchg
sub
add
or
addl
mov
lods
lea
mov
pop
xor
decl
decl
jno
mov
add
jp
jle
lea
dec
divb
add
movl
add
aam
and
ljmp
add
loopne
adc
adc
add
mov
jae
ljmp
add
sub
add
mov
add
xchg
dec
xchg
or
add
ljmp
inc
add
ljmp
ljmp
mov
jno
pushl
lcall
aad
add
in
ret
add
adc
dec
data16
add
aaa
addr16
pusha
add
cmp
cmp
mov
stc
mov
repnz
mov
cmc
adc
js
fisubrl
add
decl
movl
dec
faddl
add
test
jo
jmp
add
movb
add
add
add
cmp
add
add
ljmp
cli
mov
add
pop
cmc
test
push
add
inc
add
push
cmp
decl
adc
call
add
and
out
push
add
or
xchg
sub
mov
xchg
loop
sbb
mov
call
jb
pushl
inc
add
je
add
adc
sti
jbe
addb
add
lret
aaa
nop
testb
add
jge
add
in
xor
cmp
in
cmpsb
add
jne
lods
fdivs
adc
decl
push
add
les
imul
or
inc
add
decl
add
and
call
jmp
clc
test
fcomip
mov
add
ljmp
and
jmp
add
add
and
decl
or
leave
movb
or
lods
lds
inc
add
add
into
mov
add
xchg
je
cmp
add
out
sbb
sub
or
cmp
push
push
add
adc
push
addl
lret
movl
add
inc
add
add
add
inc
add
lods
add
mov
add
adc
jmp
mov
test
jno
ljmp
call
add
add
shrl
jmp
add
sbb
add
inc
add
test
add
mov
add
cmp
dec
inc
add
sub
add
pushl
call
mov
inc
add
and
ljmp
test
call
xchg
icebp
push
xor
mov
add
popf
addb
xor
jp
add
cltd
add
pushl
ljmp
pop
repnz
sbb
mov
mov
shll
jne
add
and
mov
push
rclb
add
daa
add
aad
add
add
mov
add
xchg
xchg
jns
jns
jmp
fildll
add
cli
loop
sbb
pushl
add
ljmp
clc
inc
add
add
fistpl
add
mov
test
lret
add
divb
add
xchg
push
mov
movb
add
dec
in
les
dec
mov
jb
jmp
jmp
add
add
push
and
cmp
sahf
iret
sub
jmp
sti
aas
adc
mov
add
jmp
add
inc
add
ljmp
mov
pushl
mov
dec
test
pop
sahf
inc
add
rcrb
rolb
jmp
testl
and
fiadds
fmulp
rolb
add
mov
mov
ljmp
data16
or
sub
lods
inc
add
xor
cli
mov
arpl
pushl
add
xchg
inc
add
fcmovbe
ret
add
add
add
mov
add
xchg
repz
popf
xor
add
shlb
clc
jmp
adc
inc
add
mov
xchg
pop
loope
movsb
add
add
xchg
icebp
sub
pop
imulb
add
hlt
loop
pop
and
lcall
sbb
add
loopne
js
imul
add
sbb
stos
jo
call
std
xchg
hlt
push
add
xchg
xlat
inc
add
adc
mov
je
pop
add
add
arpl
ljmp
xchg
divb
lcall
xchg
xchg
pop
or
mov
xchg
push
add
movsl
add
add
ljmp
adc
pushl
decl
sbb
pop
fdivrp
push
test
bound
jmp
decl
xlat
sbb
add
push
add
dec
data16
sub
imul
add
xor
incl
add
add
push
movsb
add
add
inc
add
movsl
add
call
pop
fwait
pcmpgtb
cmp
add
sub
or
cmc
and
decl
inc
add
pop
sub
inc
add
fdivs
incl
add
or
adc
decl
int3
sti
or
add
fwait
bound
call
mov
repnz
inc
add
add
clc
xor
ffreep
add
cmp
dec
pop
mov
add
popa
add
push
imul
hlt
je
dec
cmp
loop
in
loopne
cwtl
jle
lahf
adc
add
repz
add
hlt
pop
into
jnp
sbb
aas
pop
ds
popa
add
lahf
sub
add
sbb
xchg
ja
xchg
insl
push
jmp
test
sub
addb
add
sti
cmp
repnz
push
add
pop
pop
or
fwait
sbb
add
mov
repnz
add
movl
or
stos
flds
add
xchg
int3
add
call
pushl
jb
incl
incl
sbb
add
jo
call
xchg
shrb
stos
sti
push
shll
jmp
add
out
std
jecxz
mov
sahf
js
add
push
add
mov
add
xor
inc
add
aad
int3
sub
add
adc
add
add
cmp
adc
call
cmp
add
pop
add
or
leave
daa
add
jmp
add
jmp
add
inc
add
sbb
mov
add
add
add
push
add
data16
loopne
fadds
call
ljmp
repnz
lcall
int
cmp
test
fimuls
int3
pop
repz
add
add
cmp
add
loopne
scas
mov
add
in
inc
add
jmp
cwtl
xor
out
loopne
cmc
cmp
loop
test
adc
out
movsb
add
inc
add
sahf
in
scas
inc
add
xchg
pop
add
loope
adc
add
scas
inc
add
mov
cli
js
add
aaa
mov
and
inc
add
add
xor
faddl
jns
add
daa
add
sti
pop
dec
sub
fadd
add
add
jge
mov
sahf
sbb
testb
add
sub
icebp
inc
add
movl
test
decb
call
data16
lcall
sub
pushl
sub
insb
pop
stos
mov
adc
decl
mov
add
push
add
inc
add
xchg
lods
aaa
js
add
add
ljmp
add
mov
add
add
cmp
enter
mov
bound
call
incl
add
jae
push
or
xchg
pop
pop
mov
add
data16
add
jmp
xchg
cmpsl
add
add
jno
jmp
push
mov
jg
jecxz
fsubl
jmp
and
decl
sub
and
add
mov
inc
add
mov
cmpsb
add
add
pushl
add
cmp
and
lcall
adc
jmp
pusha
add
jecxz
inc
add
add
push
add
in
stos
jmp
add
cmp
stos
push
xchg
adc
ljmp
push
mov
in
in
repnz
mov
add
sub
rolb
out
and
fxtract
xchg
mov
inc
add
add
mov
pop
xor
push
jge
in
arpl
decl
add
add
xor
ljmp
pop
sbb
loop
xchg
xchg
mov
add
jbe
loopne
popf
fildl
out
jne
add
push
add
leave
enter
bound
incl
aam
add
jmp
add
cs
sub
add
jno
decl
dec
mov
das
popf
push
add
add
add
jno
call
stc
cmp
add
pop
mov
jnp
add
add
sbb
add
cmc
fmuls
add
incl
pushl
add
push
add
jp
add
lds
pop
fstl
addl
fsts
add
adc
decl
arpl
call
and
xor
incl
lret
add
jmp
xor
ljmp
adc
addl
ss
sub
add
pop
xor
incl
add
add
jmp
add
cmp
add
add
movl
daa
add
stos
adc
pushl
jl
dec
dec
cltd
or
push
add
inc
add
shr
fnstcw
addb
hlt
cli
dec
sub
add
dec
and
lcall
mov
add
mov
push
addr16
lods
jmp
movsb
add
mov
cli
ficompl
inc
add
dec
enter
jge
lahf
cmc
out
jne
call
add
call
add
ljmp
sub
int3
mov
push
jo
jmp
call
enter
pushl
in
test
xchg
pop
ds
add
inc
add
cmp
lds
out
inc
add
inc
add
in
xchg
in
jns
addl
sub
add
jmp
movl
rolb
add
xor
aam
sbb
js
push
cwtl
push
add
push
mov
sahf
stos
cwtl
outsl
shll
mov
shrb
movl
loop
mov
add
pop
xor
test
add
ljmp
inc
add
push
jmp
mov
mov
pop
xchg
push
add
add
add
ds
das
stc
repnz
add
push
pop
dec
popa
add
ret
jmp
call
das
sbb
jg
sbb
test
add
ret
add
push
pop
jmp
add
jae
pushf
adc
add
mov
dec
repnz
mov
mov
imul
add
cmp
mull
in
push
add
pop
cmpsl
add
lods
into
mov
sbb
xor
incl
roll
mov
ljmp
mov
incl
add
lcall
sbb
jne
and
ljmp
les
aas
sub
movsl
add
mov
pop
adc
jmp
add
add
mov
jl
add
cmp
add
add
add
add
xchg
lods
imul
inc
add
lds
push
jle
add
sub
add
add
xor
ljmp
push
add
mov
notl
add
push
add
add
lods
xchg
cmp
add
mov
std
xor
call
add
ss
mov
call
add
test
scas
and
mov
push
add
ljmp
daa
add
add
call
adc
lcall
lea
ja
xor
jmp
inc
add
pop
sub
add
mov
ljmp
lea
add
mov
sarl
dec
cmp
xchg
xor
jmp
add
inc
add
pop
jb
lcall
hlt
push
add
loopne
out
repnz
add
mov
cmc
mov
rcll
mov
insb
xchg
std
mov
add
mov
push
daa
add
add
inc
add
push
adc
dec
jae
pushl
inc
add
popf
cmp
add
add
popf
push
cmpsl
add
push
add
cmp
add
jo
incl
fistpl
add
adc
ljmp
and
lcall
add
ret
fistl
fistpl
add
mov
out
dec
aam
add
decb
add
jns
push
add
dec
add
incl
add
lds
mov
mov
lds
mov
fmull
mov
call
pop
test
inc
add
add
dec
pop
add
sti
cmpsb
add
add
add
add
push
add
dec
inc
add
add
inc
add
sarl
ds
add
mov
inc
add
into
mov
fistpl
add
add
stos
dec
cld
or
out
movl
add
pop
pop
add
add
push
jnp
cmp
jg
pop
cmc
inc
add
add
add
mov
int
add
inc
add
insb
xor
ja
negl
lahf
fsubrs
add
push
jo
mov
popf
push
cmp
add
in
int
into
jl
ja
add
add
cmp
adc
decl
add
add
scas
sbb
rolb
add
xchg
test
mov
add
jp
add
rol
add
aam
jb
jns
sbb
lcall
mov
call
add
ds
add
ljmp
add
xchg
push
add
ss
add
mov
call
add
add
icebp
and
lcall
shlb
imul
lds
dec
lcall
test
cmp
inc
add
push
add
add
in
and
mov
add
mov
jmp
add
decl
into
push
add
add
int
mov
mov
mov
dec
scas
or
stos
rolb
rorb
decl
jmp
push
pop
jbe
add
rcrl
outsb
add
call
mov
dec
cmp
notb
sti
xchg
or
add
mov
mov
add
and
decl
dec
clc
and
lcall
fsubrs
jo
lcall
add
inc
add
stc
lods
pop
cmp
decl
mov
pop
jg
xor
call
add
and
incl
add
sub
add
scas
pop
test
dec
test
fdiv
xchg
dec
popf
fidivrs
sbb
add
add
jmp
cmp
add
ljmp
repz
arpl
inc
add
adc
icebp
inc
add
call
add
add
and
call
add
or
ss
mov
sahf
gs
dec
xchg
out
les
dec
dec
or
mov
test
lret
mov
jo
dec
mov
add
lds
push
add
in
xor
call
call
add
and
mov
add
jle
jge
inc
add
testb
test
push
add
movb
mov
and
decl
add
xor
mov
out
divl
or
add
int
dec
jno
jmp
jmp
decl
stos
cs
dec
out
addb
add
jo
lcall
fbld
dec
rcll
push
mov
ljmp
push
add
jg
add
and
dec
scas
enter
incl
jmp
incl
cmpsb
add
int3
adc
push
inc
add
xor
call
hlt
adc
lcall
push
inc
add
jg
cmp
jge
add
hlt
push
js
add
adc
repnz
clc
les
cmpsl
add
add
xchg
push
add
cmp
inc
add
ja
test
sahf
dec
inc
add
cmp
incl
add
pop
fldt
add
mov
scas
gs
add
add
stos
jp
add
add
incl
add
lods
add
call
add
mov
call
pushl
add
addb
and
ljmp
push
popa
add
add
lcall
add
jbe
add
add
pop
add
add
cmp
decl
in
ja
inc
add
test
xchg
leave
mov
add
fwait
cmp
repz
arpl
call
fwait
nop
cmp
shll
push
sub
cwtl
mulb
call
add
pop
push
leave
test
lea
add
push
add
test
push
add
addb
add
das
imul
jmp
add
mov
add
leave
roll
add
xor
jmp
add
sbb
call
mov
add
leave
pop
loopne
sti
pop
cmpsl
add
popf
addl
js
inc
add
add
movl
leave
lahf
xor
add
add
je
add
inc
add
icebp
jno,pn
call
dec
inc
add
rcr
jecxz
push
add
add
imul
add
pop
cld
cltd
std
movsb
add
add
mov
dec
scas
xchg
int
out
add
jmp
call
fwait
data16
cmpsl
add
inc
add
cwtl
add
jl
pop
outsl
leave
push
inc
add
or
xlat
daa
add
add
cmp
add
add
test
dec
addr16
in
or
cli
ss
pop
adc
incl
add
xchg
cmp
add
xor
decl
scas
mov
ret
add
jecxz
jne
dec
pushl
mov
stos
xchg
je
xor
ljmp
and
call
hlt
xor
decl
add
add
iret
test
shrb
add
push
sarb
xchg
add
pop
imul
sbb
cmp
add
sarl
adc
cmp
add
daa
add
test
jmp
sub
bound
pushl
add
outsl
adc
incl
inc
add
loopne
pop
pusha
add
or
add
sbb
in
lods
and
incl
test
dec
aad
rolb
pusha
add
rolb
add
cmp
cld
hlt
out
mov
js
cmp
mov
mov
ljmp
arpl
fsts
add
test
lcall
daa
add
add
decl
dec
lds
les
hlt
dec
call
mov
incl
add
loopne
mov
add
and
incl
add
cmp
ja
mov
movsl
add
add
mov
add
mov
mov
jl
push
jle
cmp
in
fs
add
incl
fists
add
outsl
xchg
adc
call
ja
mov
hlt
int
and
call
out
adc
add
add
leave
and
inc
add
das
lods
rol
add
shrb
inc
add
stos
leave
ss
repnz
add
add
out
outsb
mov
aas
mov
test
sub
add
adc
jmp
add
add
or
in
movb
addl
pop
mov
lcall
outsl
push
iret
xor
add
add
sbb
and
push
add
call
add
js
or
add
xchg
addl
popa
add
jp
add
inc
add
xchg
and
loopne
pop
rolb
iret
js
in
mov
add
ljmp
add
decl
add
push
std
pop
mov
add
mov
int
add
daa
add
mov
jae
incl
add
inc
add
jae
ljmp
xchg
inc
add
mov
add
push
or
xchg
addb
xor
pushl
cld
inc
add
pop
lods
pop
sub
dec
and
dec
xchg
mov
add
cld
mov
add
addb
add
insl
cmp
add
ret
add
lcall
leave
xchg
enter
xor
pushl
xchg
and
arpl
sti
cmp
int3
and
incl
add
cli
cmpsb
add
add
sbb
add
dec
in
and
inc
add
pop
lret
add
xchg
mov
add
decl
add
add
mov
adc
decl
and
js
add
inc
add
add
decl
add
dec
mov
sub
decl
mov
lock
lcall
add
out
xor
mov
arpl
mov
push
add
push
mov
cmp
and
ljmp
shlb
xor
lcall
fisubrl
add
mov
sbb
les
into
push
roll
jmp
inc
add
pushl
outsl
cli
and
lds
js
lcall
add
cvtdq2ps
and
incl
add
xor
lcall
or
mov
fldenv
add
cmp
loop
dec
bound
jmp
fsubrl
xchg
sub
nop
jmp
testl
mov
mov
xchg
ret
push
jecxz
add
push
data16
ljmp
nop
jmp
lods
xor
dec
add
add
push
stc
mov
nop
jmp
add
add
pusha
push
add
add
enter
dec
cmp
mov
add
pop
add
jle
add
mov
in
push
push
mov
xchg
ret
add
nop
jmp
add
ss
add
push
nop
jmp
add
incb
add
aam
mov
nop
jmp
mov
add
add
testl
nop
jmp
add
enter
adc
add
add
sub
mov
push
mov
xchg
ret
sub
idivb
jbe
nop
jmp
popa
lcall
add
lcall
add
add
or
add
dec
imul
add
and
or
nop
jmp
decb
cmp
add
and
nop
jmp
enter
add
mov
nop
jmp
add
pop
mov
add
scas
inc
add
add
pop
pop
push
mov
xchg
ret
dec
and
xchg
mov
cltd
inc
add
add
out
jb
ljmp
pop
add
mov
add
push
push
mov
xchg
ret
or
rorb
and
nop
jmp
add
ljmp
add
pop
add
add
jmp
add
mov
add
mov
nop
jmp
jg
add
pop
pop
push
mov
xchg
ret
pop
add
pop
lds
rorb
andb
ret
lcall
jmp
mov
xor
fcmovnu
add
add
nop
jmp
fadds
add
add
mov
out
mov
nop
jmp
stc
fldl
add
nop
jmp
fisttps
add
push
push
and
cmp
jmp
xchg
lahf
loop
lahf
mov
add
cmpl
nop
jmp
add
add
lret
or
add
nop
jmp
add
and
jmp
xor
or
add
push
mov
addr16
pop
mov
add
dec
call
imull
jmp
add
add
xor
sub
nop
jmp
jle
loop
add
shl
out
ret
add
nop
jmp
push
add
add
add
push
nop
jmp
les
add
add
loope
js
rclb
add
add
cmp
incl
or
jmp
xor
fisubrl
or
jmp
lods
add
add
stc
mov
add
add
add
lahf
push
nop
jmp
push
ficoml
dec
mov
nop
jmp
out
add
and
out
xor
mov
nop
jmp
pop
dec
pop
add
mov
add
xlat
lds
std
xchg
nop
jmp
popa
add
add
add
add
cld
jmp
testl
idivl
push
mov
xchg
ret
or
add
xchg
and
incl
pop
mov
nop
jmp
out
add
rorl
mov
cmp
add
pop
cmp
test
jp
add
add
nop
jmp
xor
mov
pop
add
add
clc
add
add
and
lcall
or
add
add
add
incb
cmpl
stc
add
enter
and
sbb
nop
jmp
push
fildl
add
add
mov
add
aam
aam
imul
nop
jmp
add
add
add
aam
mov
nop
jmp
clc
add
out
add
clc
push
jae
jmp
add
add
pop
nop
jmp
add
add
mov
jmp
int3
lahf
sub
add
pop
push
add
jg
add
add
push
jmp
add
add
mov
adc
add
add
out
sbb
nop
jmp
add
jmp
lahf
add
add
cmp
add
nop
jmp
lahf
add
pop
add
add
into
xor
nop
jmp
add
add
add
nop
jmp
add
pop
add
ja
mov
nop
jmp
pop
add
clc
jg
lods
mov
nop
jmp
add
negl
inc
add
add
call
add
cmp
push
mov
xchg
ret
add
add
mov
jmp
add
or
add
enter
add
test
fstl
in
cmp
add
jecxz
add
add
add
div
nop
jmp
fisttpl
dec
add
add
dec
mov
nop
jmp
add
add
sub
nop
jmp
add
inc
add
dec
jne
nop
jmp
lods
add
mov
mov
call
nop
jmp
clc
jle
add
and
add
add
add
add
dec
push
mov
xchg
ret
sub
add
add
test
jmp
add
jmp
add
cmpsb
add
add
pop
xlat
inc
add
inc
adc
add
mov
add
lcall
ljmp
lcall
lahf
xor
nop
jmp
add
add
add
ret
inc
add
ficoms
jmp
add
fisttps
jo
ljmp
mov
nop
jmp
fadds
test
sub
sbb
and
add
das
je
nop
jmp
cmpsl
fistl
cmp
mov
xchg
ret
add
add
notl
add
add
sub
add
lcall
jmp
add
xchg
add
xchg
add
lcall
leave
nop
jmp
clc
add
add
jo
lods
lea
nop
jmp
enter
or
add
nop
jmp
jg
mov
mov
test
add
nop
jmp
add
pop
cmpsl
add
mov
rclb
add
lahf
add
mov
add
cli
nop
jmp
mov
add
out
add
ds
nop
jmp
pop
add
add
add
mov
xchg
ret
push
pop
jnp
dec
cmp
jmp
pop
xor
out
loopne
loop
data16
adc
lods
lea
or
movb
mov
nop
jmp
xor
test
sbb
add
add
sub
push
add
nop
jmp
add
cmp
jmp
lods
lea
xor
jnp
add
int3
add
lods
aam
daa
add
add
rcl
xchg
jno
jmp
add
and
add
add
add
lcall
lret
mov
add
add
lods
nop
jmp
or
pop
jo
stc
or
mov
nop
jmp
add
add
add
sub
rclb
mov
and
mov
int
pop
jae
jmp
dec
loop
push
aaa
pushf
add
nop
jmp
lahf
add
add
nop
jmp
lahf
and
add
lret
cmpl
nop
jmp
mov
add
nop
jmp
add
fsubr
icebp
or
insl
pop
add
or
nop
jmp
add
jo
or
add
add
mov
nop
jmp
or
add
add
jmp
add
or
add
mov
jmp
stc
cmp
pop
add
mov
fiadds
pause
jmp
loop
add
xchg
call
jmp
add
add
popa
test
popl
nop
jmp
add
fildll
sub
add
enter
add
fisubrl
jmp
jo
mov
mov
xchg
fimuls
scas
enter
stc
incl
clc
mov
pop
add
nop
jmp
mov
add
jecxz
stos
push
nop
jmp
add
add
lods
mov
nop
jmp
add
add
cld
and
nop
jmp
add
fcmovnu
add
lods
cs
nop
jmp
add
add
or
fdivrs
rep
nop
jmp
out
add
out
lods
push
mov
xchg
ret
add
notb
out
mov
and
enter
iret
pushl
nop
jmp
imull
add
or
push
mov
add
out
pop
cwtl
int3
add
add
add
add
add
jnp
nop
jmp
or
cmp
add
add
nop
jmp
dec
add
add
inc
add
test
test
xor
frstor
add
call
mov
test
jmp
push
xor
add
add
lea
nop
jmp
add
lods
fldl
or
sbb
add
sub
add
xchg
add
nop
jmp
rolb
jo
push
add
mov
movsb
nop
jmp
add
add
adc
cmp
test
incl
or
add
jmp
addl
add
add
ljmp
call
nop
jmp
lods
xchg
sub
cmpsl
add
mov
nop
jmp
fildl
add
or
add
sub
stc
stos
inc
add
add
add
add
inc
dec
loop
ret
add
push
lods
add
and
push
fnstsw
lock
mov
xchg
ret
int3
add
lock
add
popf
mov
nop
jmp
push
add
add
sbb
add
add
add
xchg
jne
out
bound
jle
nop
jmp
or
add
rol
add
add
outsl
arpl
add
add
mov
dec
pop
push
mov
xchg
ret
fs
cmp
push
mov
xchg
ret
xchg
stc
pop
mov
add
add
add
add
jp
push
mov
xchg
ret
add
add
push
data16
mov
nop
jmp
xor
idivl
add
nop
jmp
fadds
xchg
add
pushl
add
xor
jmp
add
fcoml
jmp
mul
mov
imul
and
jmp
jg
add
or
sub
mov
add
jmp
mov
mov
or
mov
mov
add
push
mov
xchg
ret
jecxz
js
push
or
add
dec
add
sub
add
or
add
pop
out
add
push
add
adc
mov
nop
jmp
add
imul
cmc
pushl
add
mov
call
nop
jmp
or
ss
add
add
inc
add
add
lock
jmp
jmp
mov
stc
pop
push
mov
xchg
ret
add
dec
add
and
lcall
call
nop
jmp
add
or
jmp
add
loop
sub
and
dec
add
nop
jmp
add
and
jo
inc
add
cmpl
nop
jmp
add
add
sahf
push
push
mov
xchg
ret
cmp
add
shr
push
nop
jmp
loope
out
add
or
push
call
nop
jmp
add
add
cltd
jecxz
jge
add
add
add
call
nop
jmp
jle
popa
fcmovnb
add
cwtl
test
nop
jmp
jecxz
fidivl
inc
jnp
nop
jmp
add
xor
add
dec
dec
and
lcall
pause
jmp
add
pop
add
push
idiv
call
pushl
jecxz
pop
or
outsl
mov
and
jg
jns
inc
loopne
jmp
lcall
jno
jmp
loop
mov
xchg
ret
xor
lods
int
nop
jmp
add
add
addl
in
shll
mov
nop
jmp
lods
add
dec
jle
add
addl
add
nop
jmp
push
mov
mov
add
incl
add
movb
xchg
fistpll
nop
jmp
subl
add
enter
add
add
inc
jmp
adc
add
add
add
not
push
mov
xchg
ret
loope
add
add
movzwl
nop
jmp
sub
ss
cld
or
add
add
or
jne
nop
jmp
pop
filds
int3
rep
nop
jmp
add
jg
stc
xchg
add
cmp
jmp
or
add
add
add
add
nop
jmp
loop
or
inc
add
add
ss
or
add
dec
mov
nop
jmp
add
add
sbb
jmp
pop
pop
push
rolb
pop
xchg
decl
mov
xchg
ret
add
add
or
add
add
add
lahf
push
push
mov
xchg
ret
add
add
add
inc
add
pop
add
nop
jmp
push
add
pop
hlt
lcall
nop
jmp
add
jo
add
fiaddl
mov
xchg
ret
mov
clc
add
push
or
add
add
out
lods
ss
decl
nop
jmp
cmpsl
add
add
jo
add
pusha
add
jo
cmp
or
add
mov
movsb
nop
jmp
add
rclb
add
inc
add
xchg
cmpl
cmp
or
add
nop
jmp
add
rorb
mov
nop
jmp
and
lahf
push
inc
add
gs
subl
push
mov
xchg
ret
mov
mov
push
mov
xchg
ret
add
jne
add
push
out
dec
mov
nop
jmp
les
add
je
sub
incl
xchg
add
and
mov
nop
jmp
add
dec
push
nop
jmp
cmpsl
add
add
add
shr
nop
jmp
enter
incb
push
test
out
add
lret
nop
jmp
xor
add
jmp
xchg
add
xor
add
insb
push
nop
jmp
cmp
fidivrl
add
add
cmc
clc
jmp
nop
jmp
add
sub
call
xchg
add
and
jmp
add
add
dec
mov
nop
jmp
mov
stc
pop
stos
mov
nop
jmp
or
clc
stc
and
call
add
add
mov
add
jmp
and
adc
iret
dec
nop
jmp
pop
ss
add
add
rolb
jmp
add
add
add
add
and
push
mov
xchg
ret
cmp
nop
jmp
add
add
and
sub
add
mov
jge
incl
add
filds
xchg
add
call
nop
jmp
add
filds
jecxz
movsl
add
add
mov
push
mov
xchg
ret
cmp
mov
mov
add
add
ss
nop
jmp
add
or
add
cmp
add
mov
adc
ret
nop
jmp
add
rcl
xor
add
add
in
cmpsl
add
add
nop
jmp
add
loop
and
nop
jmp
mov
mov
add
jmp
add
rolb
in
add
add
inc
cwtl
push
mov
jmp
add
add
ret
add
fdiv
stos
nop
jmp
add
add
fs
jl
cmc
add
add
ljmp
add
add
add
out
add
add
push
push
mov
xchg
ret
add
int3
jle
mov
nop
jmp
add
sbb
inc
ficompl
add
movsl
add
test
jmp
jecxz
stos
mov
nop
jmp
add
push
xchg
loop
add
call
add
add
movsl
add
nop
jmp
add
mov
loop
add
mov
jmp
add
add
jp
fcoms
incl
add
push
jecxz
add
jl
nop
jmp
addl
sbb
cmp
add
add
mov
sub
incl
lea
add
add
ret
push
mov
xchg
ret
add
call
nop
jmp
stc
add
jo
mov
push
mov
xchg
ret
popa
data16
add
mov
add
nop
jmp
and
clc
lods
add
add
jmp
lods
jg
lcall
nop
jmp
xor
mov
inc
add
and
jmp
jmp
nop
jmp
add
add
stc
lea
mov
add
mov
fidivrl
sub
add
add
enter
mov
cmp
add
pusha
ret
add
add
push
jmp
add
sub
add
cld
idiv
call
incl
popa
lods
std
mov
nop
jmp
add
les
adc
jmp
add
sub
xor
xlat
lods
movswl
nop
jmp
add
and
add
pop
nop
jmp
lea
filds
add
aas
add
nop
jmp
add
sbb
nop
jmp
add
add
inc
add
test
test
scas
ret
nop
jmp
out
int3
loope
add
add
xor
call
mov
nop
jmp
add
pop
add
jmp
add
add
hlt
std
push
mov
add
add
add
cli
test
add
shll
call
push
mov
xchg
ret
add
out
dec
les
nop
jmp
pop
add
test
add
nop
jmp
jo
fstpl
nop
jmp
out
sub
add
add
or
mov
xchg
ret
add
fisttpll
hlt
cmpsl
inc
add
add
out
push
add
aas
jne
nop
jmp
cmp
int3
cmc
mov
jge
nop
jmp
add
pop
add
out
add
cwtl
movzwl
nop
jmp
dec
xor
add
daa
add
push
nop
jmp
rolb
add
add
cld
pop
nop
jmp
add
loop
add
popa
jne
nop
jmp
or
adc
nop
jmp
add
pop
add
scas
xor
nop
jmp
add
jg
mov
nop
jmp
filds
add
add
mov
mov
jecxz
mov
add
push
js
mov
xchg
ret
jecxz
push
add
mov
nop
jmp
sub
andl
push
mov
xchg
ret
add
dec
xor
jne
nop
jmp
cmpsl
out
add
mov
nop
jmp
add
fistps
push
cmc
call
jmp
lcall
ss
bound
incl
jmp
pushl
enter
shr
jmp
pop
cmpsl
ss
dec
shll
in
call
nop
jmp
jecxz
xchg
divl
mov
call
lock
incl
add
add
rolb
add
push
mov
xchg
ret
int3
or
ljmp
nop
jmp
fdivs
pushl
add
mov
popf
mov
nop
jmp
add
add
fsubr
call
mov
add
add
mov
add
add
decb
push
mov
xchg
ret
add
add
fs
add
cmp
clc
push
mov
xchg
ret
add
add
push
nop
jmp
sub
add
jecxz
jg
and
lcall
push
nop
jmp
pop
push
jle
mov
out
and
add
add
pushl
jmp
add
inc
nop
jmp
jg
add
loope
add
popf
inc
add
xor
test
pop
add
nop
jmp
lea
cmpsl
jg
ret
nop
jmp
add
fcom
je
push
nop
jmp
mov
add
ds
nop
jmp
add
jle
stc
icebp
pusha
add
rep
push
mov
xchg
ret
push
add
mov
xchg
ret
add
mov
nop
jmp
add
sub
add
xchg
cmpsl
add
pop
push
mov
xchg
ret
add
add
pusha
nop
jmp
add
add
push
and
xchg
adc
decl
js
jmp
add
add
dec
mov
nop
jmp
dec
mov
add
sub
pop
and
jmp
loop
add
fldl
outsb
mov
nop
jmp
add
clc
aaa
lea
mov
xchg
ret
lea
nop
jmp
or
add
add
addb
add
inc
add
mov
nop
jmp
mov
add
add
nop
jmp
cmpsl
add
or
mov
adc
jmp
add
add
stc
dec
mov
nop
jmp
pop
fldl
andl
in
ljmp
add
add
int3
mov
cmc
clc
xor
push
mov
xchg
ret
add
inc
add
call
nop
jmp
add
add
popa
nop
jmp
mov
add
xor
call
add
xor
add
or
add
popa
xchg
add
pop
push
mov
inc
ja
jns
push
mov
sub
add
popf
mov
push
mov
xchg
ret
or
stos
add
push
mov
xchg
ret
add
rolb
add
nop
jmp
push
mov
add
add
add
nop
jmp
mov
add
xor
add
or
add
incl
add
and
fstp
pushl
nop
jmp
add
add
add
jmp
sub
sub
add
add
push
nop
jmp
pop
xor
add
and
call
nop
jmp
add
int3
stc
add
add
pause
jmp
cmp
add
add
out
add
adc
decl
shrb
xor
add
nop
jmp
add
add
fildl
jg
nop
jmp
add
pop
push
push
mov
xchg
ret
add
add
data16
add
lret
xor
nop
jmp
add
add
loop
nop
jmp
add
add
les
jge
inc
or
incl
add
loop
dec
rolb
add
mov
push
mov
xchg
ret
neg
sbb
hlt
sti
call
push
loop
jge
in
call
incl
add
xlat
mov
ret
nop
jmp
or
add
imul
push
mov
add
add
jb,pt
nop
jmp
add
pop
add
nop
jmp
fadds
xor
in
call
nop
jmp
add
or
data16
jmp
add
add
loope
rcl
mov
movsl
jmp
incl
jecxz
loope
add
nop
jmp
add
loop
add
add
jne
dec
mov
nop
jmp
add
add
add
imul
clc
incl
add
cmp
jmp
mov
and
cmpsl
add
sti
push
mov
xchg
ret
lahf
push
add
push
cmpsb
add
nop
jmp
fildl
fistl
add
stos
push
push
mov
xchg
ret
add
or
ret
add
mov
ss
xchg
and
sub
icebp
push
add
add
nop
jmp
jle
clc
idivl
je
add
mov
xchg
ret
add
xor
cmp
jmp
add
push
add
add
nop
jmp
add
add
add
pop
movb
push
push
mov
xchg
ret
add
add
sbb
add
nop
jmp
lods
mov
clc
sub
xor
jmp
add
push
mov
xchg
ret
cmp
nop
jmp
mov
cmpsl
fbstp
inc
add
jne
add
stos
push
nop
jmp
pop
add
fstpt
clc
nop
jmp
add
mov
add
add
lea
jns
dec
cmp
jmp
pop
xor
add
sbb
mov
and
add
inc
nop
jmp
add
stc
add
add
sub
in
add
add
add
add
ljmp
add
nop
jmp
mov
add
cmp
add
sub
in
inc
dec
add
outsb
dec
add
pop
pop
push
mov
xchg
ret
lods
lcall
gs
incl
fadds
add
add
push
lahf
mov
nop
jmp
add
add
lcall
mov
xchg
ret
or
jg
nop
jmp
add
pop
pop
pop
fisttps
lcall
incl
loope
int3
xchg
push
sbb
jmp
clc
lods
add
add
add
rolb
cmp
jmp
xchg
stc
les
jecxz
add
add
mov
mov
and
fldl
loop
roll
push
push
hlt
lret
nop
jmp
add
add
not
pop
mov
nop
jmp
jo
lods
add
add
ljmp
jmp
stc
enter
add
cmp
nop
jmp
add
movsb
add
mov
jmp
add
dec
testl
add
xor
addl
nop
jmp
lahf
enter
add
das
idiv
decl
add
add
lods
jne
nop
jmp
enter
pusha
push
mov
xchg
ret
out
add
add
and
nop
jmp
add
lea
push
mov
xchg
ret
add
sub
call
lcall
call
nop
jmp
or
test
push
add
nop
jmp
ficompl
pop
add
jne
nop
jmp
cmp
add
inc
nop
jmp
jle
add
loop
lea
jmp
enter
clc
add
pushl
int3
call
nop
jmp
add
fidivrl
jne
nop
jmp
int3
add
push
push
mov
xchg
ret
add
lods
loop
add
nop
jmp
add
incb
add
add
add
add
je
cmp
nop
jmp
add
out
ror
add
nop
jmp
fcoms
lahf
fldt
add
add
jmp
loop
add
mov
nop
jmp
pop
fdivrs
xor
nop
jmp
add
stc
lahf
jo
sub
cmp
nop
jmp
xor
jle
add
add
addb
add
add
and
add
cmpw
nop
jmp
pop
xchg
add
test
jmp
add
popa
jle
add
add
add
gs
lea
nop
jmp
or
add
mov
add
add
push
out
mov
nop
jmp
divl
add
add
add
out
add
jne
subl
push
mov
xchg
ret
pop
popf
push
nop
jmp
add
out
add
add
add
nop
jmp
clc
add
jecxz
add
call
jmp
add
nop
jmp
add
sub
nop
jmp
loop
add
and
in
add
nop
jmp
pop
pop
add
push
mov
xchg
ret
mov
jb
jmp
add
stos
mov
nop
jmp
add
add
nop
imulb
add
nop
jmp
add
or
jmp
add
add
add
testl
aam
add
jle
mov
call
incl
cmp
sub
push
mov
xchg
ret
mov
mov
shr
nop
jmp
add
clc
add
fbstp
add
add
incl
add
mov
in
push
mov
add
add
fimull
lea
add
nop
jmp
int3
jecxz
pop
popa
mov
loope
mov
push
mov
xchg
ret
add
add
push
mov
xchg
ret
or
add
or
jmp
fistpll
stc
mov
xor
nop
jmp
lods
jg
add
add
dec
dec
nop
jmp
jg
add
rolb
add
nop
jmp
push
jo
add
mov
addl
push
push
mov
xchg
ret
mov
test
nop
jmp
add
mov
pop
push
mov
xchg
ret
stc
add
add
mov
nop
jmp
add
add
push
mov
xchg
ret
add
dec
push
mov
inc
ds
and
sub
cmc
add
add
push
out
mov
jmp
jg
add
add
dec
fadds
das
inc
nop
jmp
add
add
adcb
enter
inc
add
xchg
xchg
aad
call
nop
jmp
pop
add
mov
addb
mov
nop
jmp
add
add
rclb
mov
nop
jmp
pop
push
out
add
add
nop
jmp
out
add
add
pop
add
call
incl
cmp
jmp
add
add
inc
add
add
incl
sub
nop
jmp
add
add
sub
add
incl
add
and
jmp
add
add
filds
xchg
mov
push
mov
xchg
ret
jle
add
push
nop
jmp
xchg
xor
enter
sub
in
mov
add
add
repnz
add
fsubrs
nop
jmp
enter
or
add
adc
jmp
add
add
mov
xchg
ret
enter
add
add
nop
jmp
lea
pop
push
je
adc
pushl
jmp
add
pop
mov
mov
ret
add
call
mov
mov
xchg
ret
enter
rolb
mov
nop
jmp
add
cmp
repz
mov
xchg
ret
int3
add
pop
movzwl
nop
jmp
out
add
add
lods
jmp
nop
jmp
cmp
enter
mov
jmp
fidivrl
add
addb
add
pop
mov
jmp
add
add
cmp
nop
jmp
add
push
clc
add
add
pop
nop
jmp
add
add
mov
movsl
add
mov
jbe
lahf
add
jp
pop
aaa
push
dec
and
nop
jmp
add
add
jecxz
add
add
nop
jmp
loop
add
mov
movb
mov
xchg
ret
push
add
xor
nop
jmp
add
push
add
push
nop
jmp
mov
add
lcall
nop
jmp
add
stc
jo
jg
cmp
mov
xchg
ret
xor
add
and
add
push
mov
xchg
ret
fimull
sti
nop
jmp
add
shr
add
add
enter
loop
pushl
add
stc
add
nop
jmp
pop
add
clc
jecxz
mov
mov
and
jg
push
add
dec
xchg
nop
jmp
or
mov
add
sub
pop
push
mov
xchg
ret
or
or
mov
call
incl
add
sbb
test
call
pushl
pop
pop
jne
nop
jmp
pop
add
xor
ljmp
nop
jmp
mov
add
jmp
nop
jmp
add
mov
push
add
pop
nop
jmp
or
mov
add
add
add
jmp
decl
push
mov
xchg
ret
and
add
stos
dec
push
mov
xchg
ret
enter
repz
nop
jmp
add
push
push
fwait
mov
nop
jmp
mov
add
add
nop
jmp
stc
lahf
add
add
add
dec
cmp
jmp
jle
loope
cwtl
push
push
mov
xchg
ret
add
xor
fwait
push
push
mov
xchg
ret
cmpsl
lods
add
sub
cmp
cmp
cmp
jmp
add
add
clc
jle
add
lea
push
mov
xchg
ret
push
enter
add
pushl
add
nop
jmp
add
mull
pop
xchg
nop
jmp
mov
add
int3
cld
add
push
mov
xchg
ret
mov
jae
jmp
jb
call
pushl
stc
or
jmp
fcmovne
xchg
add
mov
shl
nop
jmp
popa
add
add
dec
xor
nop
jmp
les
leave
dec
nop
jmp
add
out
add
sub
mov
jp
jle
sub
cmp
mov
nop
jmp
add
jp
dec
and
nop
jmp
add
loope
lcall
or
cmp
push
mov
ret
add
add
cs
mov
scas
add
xor
or
cli
addl
add
xor
nop
jmp
add
add
or
clc
xchg
ret
add
add
nop
jmp
add
add
add
push
mov
xchg
ret
add
pusha
add
fimuls
incl
add
pop
les
add
call
incl
jmp
add
push
nop
jmp
add
add
add
push
nop
jmp
jecxz
add
dec
jmp
nop
jmp
add
add
push
add
pusha
add
jo
call
sub
lea
cli
daa
jb
mov
ret
add
jmp
add
add
add
inc
add
nop
jmp
cmp
push
add
xor
push
mov
xchg
ret
add
add
sahf
push
nop
jmp
jg
jecxz
add
fidivl
mov
xchg
ret
xor
dec
cmp
decl
add
int3
add
out
clc
fiaddl
lea
xchg
cmp
mov
mov
xchg
ret
add
fmuls
jmp
lea
add
sub
je
nop
jmp
add
les
cmp
jmp
add
loop
add
sub
sub
push
mov
xchg
ret
cmp
sbb
incl
cmp
add
push
mov
loope
add
mov
add
lcall
add
xchg
je
or
mov
add
xchg
cmp
push
lret
test
mov
sbb
jbe
xor
cmp
rolb
into
pop
rolb
aas
mov
jmp
mov
dec
jge
test
add
jg
add
add
inc
add
pushl
out
mov
pushl
pushl
xor
incl
ss
push
add
add
push
sub
test
insb
dec
sub
sub
add
movb
and
call
or
addb
add
sbb
pop
push
add
scas
mov
fldenv
add
mov
push
je
js
roll
test
add
jbe
lds
xor
call
jmp
ljmp
add
fstpl
add
pushl
call
add
add
xor
lcall
add
shlb
pop
outsb
test
rolb
pop
adc
pushl
lret
mov
pop
jae
mov
or
add
add
dec
xchg
mov
jge
xchg
pushl
add
scas
lret
pop
push
roll
lcall
push
add
jo
inc
add
add
xchg
inc
add
repz
adc
call
iret
cmp
addl
mov
lahf
inc
add
cmp
cmpsl
add
add
sbb
push
dec
popf
cmp
jp
call
ds
add
pop
sbb
add
call
cs
add
sbb
sbb
add
sbb
sbb
sbb
add
fildll
cvttps2pi
add
add
mov
pop
adc
jp
add
adc
add
pop
icebp
pop
xchg
mov
les
imul
sbb
add
movsl
add
jmp
je
popa
add
insl
adc
jge
add
mov
lret
add
pop
aam
add
sub
mov
add
xchg
inc
add
adc
decl
add
adc
dec
adc
cmp
add
decl
push
add
add
mov
addl
mov
rcrl
mov
pushl
movl
data16
mov
addb
jb
sti
test
add
mov
add
in
lods
shlb
add
faddp
add
jmp
add
add
add
add
jb
dec
sub
and
lcall
add
incl
add
icebp
pop
sub
gs
add
add
stc
pop
push
xchg
mov
mov
aam
add
ljmp
add
xchg
movl
cmp
jecxz
or
add
add
je
sub
call
les
int
add
pushl
add
fisttpll
aam
add
aas
addb
scas
fs
pushf
mov
add
jbe
ret
add
divps
add
pop
pop
jp
aam
xchg
pop
add
sub
int3
or
xchg
mov
add
xchg
out
mov
add
aaa
cld
imul
inc
add
movsb
add
xchg
addl
sbb
lcall
and
jmp
clc
adc
decl
add
adc
jmp
decl
add
or
add
pop
add
mov
pusha
add
mov
or
add
pop
add
add
repz
enter
cmc
and
xor
jmp
add
add
add
addl
add
adc
lcall
pop
in
out
cmp
sbb
addl
bound
incl
mov
add
clc
cmp
add
push
add
les
push
sub
mov
stos
mov
fisubrs
leave
int3
inc
add
add
imul
inc
add
mov
add
jnp
mov
add
fisubl
data16
mov
out
js
cmp
inc
add
sbb
movl
leave
xchg
rorl
sub
movl
add
int3
pop
push
xadd
inc
add
mov
push
add
addr16
cld
pop
rorb
add
decl
jmp
xchg
push
cmp
cwtl
aas
mov
or
add
fbstp
add
test
cltd
jb
ljmp
add
ja
inc
add
arpl
jmp
add
add
jmp
cld
jno
ljmp
enter
outsl
hlt
mov
dec
or
add
pushl
add
xlat
jbe
add
fcom
scas
add
and
ljmp
mov
jmp
add
addl
pop
fwait
jo
ljmp
repz
sbb
adc
decl
inc
add
dec
movb
add
mov
adc
ljmp
scas
push
and
cli
sub
stos
jbe
sbb
insl
and
test
xchg
pop
pushf
xchg
push
ljmp
sbb
mov
ficomps
decb
pushf
dec
addl
sbb
inc
add
test
inc
add
add
jmp
xchg
inc
add
outsb
sbb
mov
push
jle
add
pop
cli
mov
movl
sarl
fwait
and
decl
repz
divb
add
xchg
mov
repz
or
jnp
xchg
inc
add
fdivl
add
lcall
jbe
xchg
cmp
push
ret
add
inc
add
mov
add
add
jae
call
mov
cmpsb
add
pop
lret
dec
add
dec
ficomps
add
roll
sti
xchg
pop
add
jmp
call
push
add
and
ror
cmp
call
dec
xchg
mov
scas
movl
sarb
pop
and
incl
add
test
add
ret
iret
inc
add
add
add
and
decl
jmp
add
dec
jge
mov
stos
stos
and
push
ss
fsubp
add
aad
jp
addr16
and
push
in
data16
decl
pop
call
inc
add
inc
add
pushl
jp
lret
jecxz
cld
cwtl
sbb
ljmp
add
out
shrl
sbb
dec
push
movl
pushf
inc
add
mov
add
fists
inc
add
insl
lods
mov
add
imul
add
cwtl
aam
sub
add
dec
cmp
sahf
mov
loopne
or
add
pushl
jle
pop
fisttpl
add
push
add
dec
xchg
mov
inc
add
and
call
ljmp
add
loopne
stos
les
inc
add
add
mov
add
add
dec
mov
xor
jl
add
mov
je
rcrl
jge
add
outsl
aaa
movsb
add
add
ret
addr16
xchg
lcall
add
jae
decl
adc
addl
dec
mov
loope
dec
pop
out
les
xchg
repz
cltd
push
inc
add
test
jecxz
dec
mov
stc
sub
test
out
mov
mov
xchg
popf
fsubrl
stos
sub
add
add
in
stos
out
mov
cmp
fdivs
add
shrl
cmpsl
add
xor
cmp
xchg
sahf
in
ds
push
into
jle
dec
dec
adc
decl
cmp
add
add
xor
pushl
jnp
je
xchg
fnsave
xchg
aam
clc
jb
pushl
add
sub
add
add
add
add
add
add
sbb
add
adc
js
add
mov
pop
add
imul
push
xchg
push
add
pushl
pushl
jle
xchg
int3
pop
adc
leave
sub
scas
mov
add
inc
add
add
std
hlt
xchg
xchg
sbb
jbe
test
nop
out
adc
decl
add
decl
or
adc
decl
outsb
call
out
pop
ja
push
and
lcall
xlat
pop
stos
stos
int3
loope
mov
sti
push
add
incl
in
addl
add
scas
fnsave
incl
mov
jle
add
call
into
mov
ljmp
rolb
add
jp
add
adc
pushl
add
mov
sub
or
add
add
lcall
test
or
cltd
rolb
add
xchg
bound
inc
add
inc
add
mov
xchg
jns
add
scas
stc
dec
call
dec
addb
push
add
popa
add
cli
repz
pop
adc
mov
data16
push
mov
mov
add
push
imul
add
add
mov
add
pop
fcom
push
cmp
mov
hlt
lods
push
fidivl
add
add
jmp
or
add
iret
or
pop
push
add
call
lcall
decl
pop
ss
adc
add
push
mov
test
add
lds
sub
add
jmp
addl
and
cli
jns
xlat
popf
sahf
aas
lock
roll
fisttpll
pop
fdivrs
add
std
hlt
sub
add
sti
mov
add
xchg
mov
addb
add
xchg
inc
add
jmp
add
add
jnp
and
incl
add
add
add
test
and
jmp
add
fstl
add
xor
pop
pop
or
add
loope
push
data16
rorb
std
mov
add
lds
out
lods
pop
add
add
add
mov
add
xchg
mov
out
pop
sub
movsb
add
jns
add
ljmp
mov
push
add
jnp
in
sub
add
test
cs
add
jge
add
pushl
cmc
hlt
pop
cs
or
inc
add
sar
insl
jns
add
inc
add
add
jae
incl
add
inc
add
sbb
fsubrp
mov
add
xor
pushl
je
mov
add
add
ljmp
xor
lcall
fildll
sub
mov
mov
add
dec
adc
add
mov
inc
add
adc
jmp
xor
decl
add
mov
popa
add
adc
pushl
in
or
add
jne
add
add
pop
add
dec
jp
push
xor
jge
add
jecxz
aam
fimull
lcall
pop
mov
pop
xor
push
inc
add
mov
add
lods
jl
add
mov
add
call
add
stc
jbe
leave
pop
ret
add
dec
add
add
xor
leave
add
dec
fdivl
fadd
add
movsb
add
lret
push
add
shll
stos
jecxz
jge
imul
repz
sub
test
jle
sbb
add
movsbl
sub
inc
add
cmp
inc
add
data16
add
pop
mov
mov
jg
add
add
addl
insb
mov
xchg
mov
add
xchg
add
pushl
decl
mov
inc
add
push
add
imul
push
add
adc
dec
ljmp
push
jmp
add
test
pop
xchg
mov
jmp
add
rcl
pop
incb
incl
add
jg
mov
cwtl
sbb
fcomi
jb
lcall
fs
scas
sub
xchg
arpl
incl
jbe
roll
clc
mov
add
cmp
mov
dec
addl
into
fidivs
mov
decl
add
push
leave
mov
and
mov
adc
push
and
incl
pop
test
jg
add
mov
ds
push
lret
sub
add
push
loop
sbb
movsb
add
lcall
cltd
ja
repnz
add
mov
jmp
add
cmpsl
add
add
add
lret
sbb
imul
or
loop
sub
stos
aad
add
ret
add
add
add
clc
imul
pushl
decl
inc
add
add
imul
add
add
lret
sbb
iret
jg
push
dec
jo
jmp
add
dec
jne
jle
add
add
inc
add
add
stc
adc
call
mov
pushf
push
add
jg
add
les
cli
int3
cmp
push
dec
adc
mov
push
add
inc
add
push
int
imulb
jg
jle
xchg
sub
cltd
cmp
mov
add
scas
sbb
pop
mov
pusha
add
insb
daa
add
xchg
push
add
arpl
call
add
dec
movb
pushf
lock
add
and
lcall
mov
add
add
add
mov
dec
out
xor
jmp
add
addl
in
std
xchg
lock
sbb
add
add
xchg
jae
call
pop
adc
sub
add
add
push
push
dec
push
movsb
add
add
jmp
inc
add
push
add
mov
or
pop
add
rolb
add
fdivl
leave
or
std
repnz
add
cmp
stc
pop
fdivl
cli
roll
test
xchg
dec
mov
lods
push
add
cmp
aam
testl
jmp
add
mov
ljmp
add
jmp
add
sbb
arpl
incl
xor
mov
ficomps
movl
add
xchg
roll
add
notb
dec
adc
mov
dec
cltd
dec
int3
icebp
popf
clc
aas
roll
bound
decl
and
lcall
scas
jp
jp
cmp
dec
push
add
rolb
inc
add
push
lds
test
in
loop
movsl
add
adc
jae
pushl
xor
cmp
pop
xchg
stos
jl
add
cmp
out
mov
iret
mov
movb
add
in
mov
add
inc
add
ss
xor
xchg
mov
and
movsl
add
pushl
add
ja
int
inc
add
lcall
pop
jecxz
cmp
add
add
or
push
loop
aaa
test
icebp
dec
out
loopne
jl
pop
xchg
push
add
iret
cld
inc
add
repnz
cmc
mov
add
popf
das
in
mov
dec
pop
sub
add
mov
rolb
add
test
mov
std
sub
add
pop
add
add
movsl
add
mov
dec
shll
cli
jb
inc
add
add
dec
in
pop
cmp
add
cmp
add
lds
ret
jnp
add
outsl
fdivr
or
incl
shr
fistl
les
loop
cmc
and
out
jp
sub
test
ja
xchg
loop
xor
decl
add
out
sub
add
add
push
add
fucomi
rolb
ljmp
dec
mov
push
add
pop
cltd
repnz
push
add
sarb
call
add
add
add
decl
lds
or
jb
cmp
mov
add
arpl
ljmp
lahf
pop
add
add
add
aas
cmpsb
add
jnp
ja
inc
add
ficomps
mov
add
mov
add
imul
fcomps
addl
ret
add
mov
pop
or
and
sbb
mov
add
adc
dec
test
das
roll
loop
addb
ja
add
add
out
jecxz
and
mov
add
add
out
ss
loop
adc
add
adc
pushl
add
push
lcall
add
sti
jae
jmp
add
add
add
decl
insl
rcll
add
out
dec
sub
pushf
xchg
in
jae
call
add
inc
add
stc
pop
or
incl
loopne
dec
int
sub
sbb
imul
daa
add
xchg
dec
fisttps
mov
cwtl
jecxz
roll
add
test
add
imul
sbb
dec
nop
and
push
push
add
mov
lods
sub
lcall
add
ret
add
pop
add
mov
mov
add
sbb
add
jb
pushl
add
xor
inc
add
addl
mulb
cmp
aas
or
fdivrl
test
add
cmp
cmp
and
lcall
pop
jnp
pusha
add
jae
decl
mov
addb
add
je
and
ljmp
inc
add
add
add
jge
scas
mov
add
push
xchg
pop
mov
dec
xchg
xor
pushl
add
loop
into
adc
call
js
sbb
push
jbe
add
jae
inc
add
add
out
addl
addb
shrl
dec
jns
adc
inc
add
xchg
jle
add
xor
incl
decl
add
js
sub
dec
mov
add
mov
add
push
psrlw
add
adc
add
jb
ljmp
mov
add
int
icebp
test
add
add
cwtl
push
add
mov
add
call
aam
repnz
add
add
mov
add
decl
aad
enter
fstp
je
jns
add
add
icebp
sub
lds
js
sub
cwtl
xchg
xor
aam
or
jge
add
inc
add
cld
ret
add
insb
std
adc
ljmp
add
decl
ja
add
rolb
add
icebp
mov
sbb
inc
add
mov
add
out
ljmp
lcall
rolb
movb
add
enter
in
mov
add
xchg
divl
add
jg
aaa
in
mov
inc
add
aaa
push
cwtl
jb
lcall
inc
add
call
cld
rolb
fbstp
inc
add
inc
add
xchg
xor
pushl
dec
mov
call
add
xlat
jge
jb
fistpll
add
stc
popa
add
dec
mov
add
fldenv
ljmp
imulb
add
rorb
add
repz
jmp
outsl
push
ljmp
stos
dec
scas
xor
add
stos
aam
push
add
lds
add
add
push
add
into
fstp
pop
popf
adc
ljmp
or
add
movb
and
lcall
mov
xor
lcall
ljmp
in
lock
movb
iret
insb
or
add
add
fnstcw
lds
sbb
cmp
call
inc
add
incl
add
xchg
in
popf
add
push
add
mov
add
call
add
scas
pop
roll
mov
add
out
ret
fwait
out
inc
add
dec
in
jecxz
sub
js
add
add
push
bt
sub
popf
loop
jp
add
xchg
inc
add
mov
in
fnstsw
push
pop
out
adc
pop
out
test
cs
push
sbb
cmp
outsb
cmp
jmp
nop
scas
outsl
mov
scas
dec
fcompl
xor
inc
add
sub
pop
leave
push
inc
add
push
xlat
aad
add
xchg
sbb
lcall
cld
xchg
push
push
add
lret
iret
daa
add
add
hlt
arpl
decb
add
adc
fldt
mov
les
push
jle
loop
jg
add
add
xchg
pushf
adc
loopne
addl
add
mov
add
push
or
ds
mov
pop
test
add
ret
add
sbb
jmp
push
add
hlt
fdivrs
push
je
std
push
add
add
adc
lcall
lahf
rclb
xor
cmp
addb
dec
xor
in
dec
enter
pop
ja
pusha
add
or
rolb
add
shl
mov
adc
ljmp
add
add
insb
xor
xlat
inc
add
sub
sbb
ljmp
icebp
push
jnp
xor
and
addl
sub
add
xor
dec
adc
dec
ficompl
call
movb
pop
inc
add
cmc
and
mov
enter
mov
add
test
push
add
fsubs
call
add
push
shll
decl
push
add
das
lret
dec
xchg
pop
sub
add
add
push
add
popf
lcall
xchg
and
push
movsb
add
xchg
adc
pushl
add
xchg
mov
adc
decl
das
push
jnp
mov
add
adc
incl
call
pushl
loopne
pop
pop
adc
add
cmc
sti
pop
add
add
aaa
add
cmp
add
add
xchg
push
int3
sub
stc
clc
or
mov
mov
mov
xor
pushl
loope
movl
daa
add
scas
addl
xchg
lahf
shll
addl
bound
ljmp
cmp
pop
lock
jmp
decl
cltd
cmc
sub
and
lcall
adc
jmp
add
pop
mov
jg
add
inc
add
jo
incl
addb
pop
and
ljmp
insb
out
jge
add
mov
add
pop
test
lcall
add
add
cmp
add
aas
out
test
ret
sar
rorl
in
xchg
xchg
sub
add
incl
xchg
pop
int3
movb
jno
lcall
cmp
repnz
dec
sub
push
cmp
mov
push
mov
hlt
add
pushl
int
xchg
push
add
mov
ja
add
push
add
fs
or
jae
call
insl
fcoml
cltd
sbb
cmp
fcoms
mov
mov
imul
mov
add
cmpsb
add
add
addb
add
insl
and
in
add
ljmp
inc
add
inc
add
push
stos
or
push
add
mov
dec
mov
mov
add
cmpsl
add
add
pop
mov
pop
dec
pop
addl
add
add
sub
jg
loop
dec
stos
sub
dec
test
in
hlt
stos
mov
sub
inc
add
pusha
add
add
cmpsl
add
push
add
xor
dec
lods
inc
add
add
xchg
fdivrl
movsl
add
imull
push
add
and
incl
jmp
incl
add
mov
iret
mov
xchg
lcall
add
add
mov
add
jno
lcall
xchg
dec
add
aad
add
sbb
incl
add
xor
ljmp
adc
ljmp
dec
ja
add
jmp
dec
js
cltd
mov
pop
movsl
add
popa
add
mov
add
cmp
les
imul
mov
jne
lods
arpl
decl
push
adc
decl
leave
insb
cmp
push
mov
popf
fcmovnbe
dec
data16
test
mov
jmp
mov
push
add
movsb
add
mov
lods
sub
xchg
and
or
mov
xchg
xchg
cs
xor
call
cmp
inc
add
add
fdivrl
mov
add
jmp
add
les
mov
add
add
lcall
dec
bound
incl
call
add
lret
addr16
mov
add
pusha
add
mov
sub
push
push
mov
add
add
add
pushl
add
mov
and
mov
sub
shr
push
movb
add
test
lahf
out
add
addl
addr16
in
jbe
shld
sbb
inc
add
add
call
push
add
pop
xor
push
icebp
pop
aas
lods
stos
in
arpl
push
sbb
or
call
add
dec
or
pushl
add
clc
outsb
idivl
jne
add
add
call
lea
xor
incl
pop
outsb
add
mov
addb
addl
stos
add
in
testb
lods
in
pop
dec
into
sbb
pushl
decl
test
in
cmc
stos
mov
adc
movb
or
jg
add
jmp
out
xchg
push
add
add
cld
sahf
xchg
or
mov
lcall
jmp
add
push
add
ljmp
sub
in
daa
add
pop
popf
lods
cmp
dec
and
stc
jne
mov
pushl
add
sub
add
addb
add
lcall
ffreep
add
pop
outsb
and
ljmp
mov
ljmp
add
jecxz
pop
outsl
xor
add
insl
xchg
adc
incl
add
jne
addl
lret
push
insb
mov
into
add
ret
add
incl
add
mov
ret
cmp
mov
add
add
cmp
lcall
push
add
jmp
xchg
ret
add
imul
add
add
lret
cmp
add
sbb
jmp
test
jo
decl
adc
inc
add
add
mov
add
inc
add
cli
jl
add
jg
test
out
add
mov
and
cmp
sahf
mov
add
stos
leave
fidivl
add
sbb
add
cld
ret
adc
add
rcll
xchg
popa
add
fwait
ds
cmovnp
les
iret
aam
add
out
icebp
inc
add
inc
add
mov
incl
out
jb
lcall
repnz
pop
add
add
xchg
inc
add
lods
loope
jbe
add
push
cmp
push
out
fimuls
adc
add
add
dec
xchg
mov
add
jmp
add
insl
inc
add
imul
or
xchg
and
scas
lea
shll
add
fistpl
incl
icebp
push
imul
add
divl
cmp
jae
pushl
add
pop
pop
jle
movsl
add
add
mov
add
data16
decl
mov
lds
repnz
add
lea
jmp
xchg
ss
inc
add
popa
add
stc
mov
sub
add
add
adc
add
dec
inc
add
out
test
dec
lods
addb
out
pop
cmp
add
ja
add
add
jg
add
inc
add
add
jp
mov
jnp
add
incl
add
xor
mov
adc
pushl
ljmp
mov
scas
roll
loop
or
add
or
call
add
sbb
addl
add
mov
add
or
sahf
rolb
dec
aad
xchg
mov
add
in
std
clc
lret
add
decl
cmpsb
add
adc
decl
stos
pop
fidivrs
add
test
xchg
add
stc
push
out
rclb
add
mov
cmc
loop
pop
movsl
add
and
call
add
imul
mov
int
imul
add
sbb
fdivr
test
add
sti
fcoms
icebp
mov
add
pop
add
add
inc
add
jge
or
dec
inc
add
incl
add
nop
fldt
add
lcall
out
icebp
loope
roll
cs
fldl
add
loop
dec
dec
mov
add
fcoml
add
mov
xchg
arpl
lcall
push
add
jge
mov
fcomp
arpl
incl
add
std
cmpsl
add
out
mov
add
addb
sub
dec
dec
push
add
xor
call
in
mov
add
call
mov
add
jno
incl
hlt
pop
dec
cltd
sbb
add
js
add
and
decl
das
das
int3
add
bound
mov
hlt
lock
or
clc
dec
xchg
stc
imul
sbb
push
dec
xor
ljmp
and
call
fisttpll
jmp
add
pushl
add
mov
add
incl
add
jne
mov
add
lahf
cmp
adc
ljmp
or
loope
push
add
mov
jbe
dec
xchg
call
inc
add
add
mov
add
push
add
jp
add
les
std
roll
add
mov
add
xchg
cmc
and
pop
neg
in
sbb
sub
lds
cltd
stc
cwtl
xchg
mov
add
add
add
inc
add
cmp
push
add
mov
add
pop
lods
mov
xchg
dec
in
adc
decl
addb
add
add
push
add
cmc
push
add
test
jne
add
push
addl
add
push
add
mov
inc
add
add
jnp
sbb
add
mov
in
mov
jmp
add
ljmp
add
lcall
stos
xor
call
add
jnp
in
sbb
add
or
add
sbb
cmpsl
add
add
inc
add
in
test
jns
jbe
push
push
lret
mov
hlt
sbb
decl
push
add
dec
lods
sbb
rol
add
add
adc
mov
das
insl
in
enter
ss
loope
shrl
mov
add
cmp
add
stos
je
push
addb
add
leave
adc
loope
dec
xchg
push
add
dec
mov
lock
ljmp
pop
pop
add
movsb
add
add
shlb
add
xchg
xchg
cld
jne
sbb
inc
add
sbb
add
sub
lods
push
cli
jbe
add
push
jne
add
xchg
lahf
dec
stos
pop
push
loopne
jb
call
jnp
add
add
add
xor
cli
pop
cmpsl
add
dec
add
jmp
add
add
comiss
sahf
cli
lret
sbb
cmp
fisttps
aam
add
insl
mov
int3
loopne
and
decl
pop
cmp
add
stos
sbb
mov
add
rcrb
insl
negb
pushl
loop
repz
pushf
negl
mov
scas
out
testl
push
add
in
mov
and
decl
movb
add
lcall
add
ret
in
cld
jno
lcall
or
adc
inc
add
insb
mov
cmp
xchg
sub
add
push
add
add
jmp
mov
add
add
mov
push
loopne
inc
add
jbe,pn
add
add
jns
adc
pushl
incl
push
add
ficoml
add
inc
add
imul
clc
popa
add
jne
add
sbb
addl
bound
decl
add
leave
sarb
sbb
lcall
test
lds
add
add
testb
or
xchg
les
shll
add
xor
call
int
add
addb
pushf
fstp
addb
add
inc
add
call
add
fisubrs
lods
push
jecxz
in
outsb
mov
add
movsl
add
repz
addb
aam
daa
add
mov
add
test
call
fisubs
add
stc
xchg
sbb
add
rclb
roll
xor
jg
add
rcrb
movl
or
add
aas
arpl
jmp
les
sbb
sbb
add
pop
inc
add
add
ret
add
popa
add
or
add
sbb
push
int
pop
adc
mov
or
add
ljmp
sbb
push
popf
daa
add
add
and
lds
xor
imul
add
lods
xchg
roll
insb
cmp
pop
pushf
dec
jne
repz
pop
decl
cltd
mov
cmc
out
jg
cmp
sub
add
push
iret
pop
xor
xor
inc
add
xchg
insb
popf
inc
add
ja
push
sbb
and
jmp
add
mov
test
lock
add
add
adc
add
addb
add
out
xchg
xor
call
iret
iret
pop
mov
add
xchg
shr
mov
enter
ss
ljmp
test
lret
and
in
aaa
bound
jmp
add
stos
sbb
fimuls
test
loopne
mov
add
add
mov
add
test
add
sbb
add
add
es
add
add
add
dec
test
sub
add
mov
sub
ljmp
add
movb
aad
add
add
sahf
ljmp
addb
sbb
add
fcompl
int
cmc
add
incl
xor
jmp
add
xor
icebp
mov
jmp
imul
aam
roll
add
jb
ljmp
test
and
pushl
adc
mov
mov
add
cmp
ret
loope
push
cwtl
lds
stos
fsubrs
add
mov
int
or
add
lods
pop
mov
cltd
dec
js
cmp
xchg
mov
daa
add
add
inc
add
mov
pop
in
jo
lcall
add
mov
adc
mov
fildll
inc
add
push
add
jl
dec
mov
xor
jge
enter
addl
add
sbb
xchg
sub
in
add
pushl
jle
add
test
add
repnz
add
jne
add
sub
nop
push
popa
add
pop
add
nop
mov
int3
xor
decl
add
xlat
inc
add
jmp
add
add
outsb
xchg
push
xchg
sub
mov
lods
ret
push
add
pusha
add
xchg
movb
mov
repnz
stos
shrl
pop
or
add
or
pop
jnp
and
in
lods
xor
add
xchg
mov
lcall
add
or
adc
pushl
jp
inc
add
add
add
cmpsl
add
int
add
pop
out
jae
pushl
add
decl
es
add
dec
fidivl
add
xor
adc
jmp
pop
ja
fcoml
out
arpl
call
add
mov
add
inc
add
popa
add
pop
inc
add
mov
xchg
test
sar
cmpsb
add
call
dec
sbb
cmp
arpl
cli
add
into
dec
inc
add
mov
pop
dec
test
loop
mov
pop
add
and
jmp
add
jl
add
add
jle
add
mov
pop
add
jle
data16
aad
mov
fistpll
sbb
add
xchg
lahf
mov
sti
push
add
and
ljmp
sbb
add
std
sbb
roll
add
inc
add
lods
xchg
fwait
cwtl
adc
add
sbb
jno
add
das
adc
out
mov
add
add
nop
push
mov
or
push
movntps
sub
add
adc
cmp
ds
movsb
add
jmp
add
addb
add
add
add
mov
add
pop
in
or
add
inc
add
addb
adc
inc
add
xchg
dec
stos
or
add
cld
cmp
add
inc
add
dec
int3
xor
jo
out
stos
js
scas
loopne
out
xchg
repnz
dec
in
mov
pop
sbb
lret
test
xchg
fisubrs
fs
mov
cs
pop
hlt
rcrl
push
adc
call
add
sahf
xchg
xchg
mov
push
adc
lcall
pop
add
mov
add
dec
mov
scas
adc
add
test
and
decl
sbb
add
or
push
fmull
mov
lcall
add
decl
add
notl
add
mov
xor
incl
and
call
mov
mov
add
add
jmp
add
add
pop
and
dec
cltd
xor
incl
add
dec
js
add
dec
insb
pop
sbb
add
lcall
cwtl
jnp
movl
add
dec
repz
pushf
push
add
add
lcall
or
add
xchg
inc
add
add
pop
jns
add
cmp
dec
es
push
add
push
jnp
add
pushl
aas
ret
add
xchg
shll
fildll
lahf
mov
push
push
add
xchg
ret
add
dec
enter
out
add
decl
add
add
lret
add
cs
int
rcrb
adc
lcall
add
add
add
imul
mov
bnd
dec
addb
or
lcall
ss
adc
decl
cmp
add
pop
sbb
ljmp
adc
pushl
add
mov
add
jnp
add
in
inc
add
xchg
xor
push
in
adc
add
xchg
bound
call
jb
jmp
pushf
jecxz
outsb
sahf
pop
out
and
test
adc
decl
add
loopne
idivb
sub
sub
add
mov
out
or
add
cmc
mov
push
pusha
add
std
xor
pushl
jp
bound
ds
or
sub
mov
inc
add
and
fsub
add
add
pop
xchg
add
out
adc
mov
rcrb
call
ljmp
inc
add
aam
sub
adc
dec
pusha
add
outsl
jae
incl
stc
cwtl
cmpsl
add
xchg
lods
cmp
add
push
add
inc
add
add
xchg
insb
lods
int
add
pop
add
add
mov
out
xor
push
mov
imul
adc
decl
add
add
movsl
add
mov
push
push
add
mov
enter
and
xchg
inc
add
cmp
popf
jle
add
push
add
add
add
dec
in
mov
jns,pt
jecxz
stos
mov
addl
add
and
push
popl
push
jb
jmp
add
sub
cmp
les
push
add
bound
ljmp
ret
jnp
jp
fdiv
test
pop
lret
add
xchg
lds
jle
sbb
fldt
ds
mov
push
negl
loopne
xchg
mov
add
cmp
add
xlat
ljmp
test
xor
dec
imul
and
decl
pop
mov
mov
add
test
test
cmp
push
roll
add
aam
add
pop
fcoml
or
and
fmul
test
incl
call
popa
add
cmp
jo
incl
incl
add
dec
xor
add
mov
lahf
out
xchg
cmp
decl
ljmp
or
inc
add
cmpsl
add
ljmp
test
ret
add
cmpsl
add
mov
and
jmp
add
sbb
add
inc
add
je
addl
lock
push
jl
mov
je
add
int3
mov
add
movsb
add
sub
mov
add
fisttpl
frstor
add
push
add
adc
decl
daa
add
add
mov
fiaddl
add
decl
sbb
add
push
add
into
xor
jmp
add
in
or
pop
and
ljmp
pop
loop
mov
ficoms
add
add
add
jmp
jmp
ljmp
lds
inc
add
push
add
cmp
rolb
add
addl
fiadds
jp
mov
xchg
popf
pop
xchg
dec
cmc
in
ret
add
xchg
adc
lcall
stos
dec
enter
std
mov
add
in
fdivl
ljmp
decl
movb
adc
lcall
xchg
jg
sub
add
lcall
add
push
scas
movl
lds
mov
dec
push
and
pushl
mov
lcall
add
xchg
imul
dec
stos
xlat
jns
add
jae
jb,pt
ljmp
into
cli
scas
pushf
data16
pushl
leave
movsl
add
inc
add
add
add
mov
add
add
add
pop
pushf
repz
out
nop
inc
add
xchg
dec
into
lret
add
lea
mov
xchg
inc
add
and
jmp
add
loop
or
inc
add
mov
or
inc
add
add
mov
ljmp
add
pusha
add
sub
push
add
aaa
insl
push
cli
adc
incl
aas
jns
add
cmp
and
lret
incl
add
inc
add
stc
jp
add
add
jne
mov
add
mull
jmp
add
cmp
pop
lret
pop
cld
inc
add
add
mov
mov
add
sub
push
add
push
ds
aas
mov
fstl
call
dec
je
out
pop
add
jmp
incl
xor
jmp
decl
push
scas
lret
sbb
lcall
add
sbb
add
xchg
jns
into
add
push
add
and
call
xor
pushl
jns
sar
scas
negl
aaa
testb
mov
add
repz
sbb
fidivs
add
std
jg
add
int3
sub
hlt
push
dec
xor
decl
add
addb
bound
push
ret
add
ret
xchg
icebp
xchg
repz
add
sub
ljmp
data16
add
and
sbb
faddl
add
test
popf
cmp
or
sti
addb
add
sub
leave
into
divb
add
sub
adc
jmp
add
cwtl
sarb
iret
and
lcall
sbb
jae
jmp
add
inc
add
test
rcrb
outsl
push
add
test
add
fwait
xchg
add
pushl
pushl
call
es
add
add
rol
add
add
roll
push
add
inc
add
jmp
add
push
sub
add
add
mov
add
jmp
jmp
add
int
sbb
add
push
call
jnp
test
frstor
push
xchg
and
dec
xchg
lcall
xor
xchg
jp
pop
add
pop
roll
add
popf
jb
lcall
add
push
sbb
insl
mov
negl
xchg
push
addl
add
mov
add
test
scas
push
lahf
in
sbb
int
add
roll
fs
add
push
push
insl
imul
add
lea
pop
xchg
icebp
sbb
add
je
sbb
push
daa
add
jmp
fiadds
jns
out
stc
cltd
ficomps
push
nop
testb
jg
outsl
arpl
cmp
add
add
ljmp
mov
add
add
mov
or
push
push
add
mov
and
pop
das
mov
pop
cwtl
sub
xchg
lret
rcl
fidivrs
xchg
xchg
movsb
add
out
jb
decl
adc
jmp
addl
pop
add
ljmp
mov
rorl
loop
mov
add
mov
sub
std
xor
jmp
add
les
adc
jmp
add
lahf
pop
xchg
add
cmpsl
add
sub
inc
add
popa
add
cmp
mov
or
dec
add
fcoms
push
lods
lds
push
add
push
add
and
ss
or
lcall
xchg
data16
testb
cmp
add
sbb
addb
or
add
jmp
or
add
add
push
jecxz
ficomps
mov
mov
xchg
mov
into
iret
xor
inc
add
popa
add
fcompl
add
lea
imul
inc
add
mov
xchg
enter
mov
sar
pop
in
pop
cli
mov
pop
sbb
repz
test
out
fmulp
cmpsl
add
incl
ljmp
in
add
incl
add
add
push
dec
pop
enter
jmp
add
mov
xor
fcmovnb
add
ret
add
adc
inc
add
ljmp
add
scas
ret
add
add
adc
incl
add
pop
fcomps
pop
ret
add
add
std
addr16
add
add
xor
pushl
out
jmp
inc
add
test
ret
add
cwtl
mov
push
pop
xchg
test
and
ret
add
add
das
jbe
int3
scas
or
ret
add
jmp
jge
sbb
ret
add
mov
jns
jle
add
leave
add
add
incl
pushl
fmul
into
test
fcompl
mov
out
sahf
in
mov
mov
add
add
insb
mov
xchg
or
add
inc
add
mov
add
roll
xchg
arpl
incl
add
xlat
leave
cld
pop
lea
and
sbb
add
aas
sbb
cmc
filds
add
sub
add
jno
pushl
add
xor
inc
add
addb
add
add
lcall
movsb
add
repnz
adc
lcall
ds
jp
xor
call
jns
mov
cltd
adc
call
arpl
cmp
add
jp
jo
jmp
call
faddl
test
inc
add
inc
add
es
inc
add
pcmpeqw
and
mov
add
add
and
mov
je
aas
dec
mov
lret
mov
mov
icebp
jo
ljmp
dec
pop
dec
stos
movb
and
lcall
cmp
lcall
fwait
inc
add
int3
and
decl
push
test
sub
outsl
pop
repz
jnp
in
in
loope
icebp
shlb
add
imulb
add
add
mov
mov
add
dec
pop
loop
lods
outsl
addl
xor
add
loopne
mov
cwtl
ss
add
lcall
icebp
jp
add
add
call
ljmp
incl
add
add
fisubl
jmp
ljmp
add
flds
add
push
decl
sub
movsl
add
sub
push
add
roll
mov
rcll
sub
mov
leave
or
push
add
add
jns
add
in
sbb
add
hlt
mov
add
adc
decl
mov
add
add
jge
push
sub
in
addb
add
cwtl
aam
add
dec
dec
jb
pushl
call
sub
add
aad
data16
add
inc
add
icebp
lock
bound
in
dec
add
dec
jmp
push
pop
popa
add
xchg
addb
mov
decl
add
hlt
dec
jo
incl
in
mov
fcomp
sti
push
add
mov
fisttpll
mov
data16
add
inc
add
jb
jmp
addl
sbb
inc
add
pushf
test
fsubl
decl
test
xchg
inc
add
inc
add
pushf
mov
xchg
addb
add
inc
add
filds
add
scas
xchg
jle
sub
mov
dec
div
or
mov
dec
xchg
addl
add
in
cs
add
add
add
hlt
inc
add
dec
ret
and
pushl
add
or
or
add
add
pop
cltd
in
inc
add
add
ja
out
out
cmpsb
add
sbb
cmp
decl
fiadds
add
addl
in
addl
mov
push
add
push
add
xchg
pusha
add
out
jns
dec
mov
add
jno
jmp
dec
mov
dec
lret
or
mov
ljmp
fisubl
fwait
mov
add
add
add
pop
xchg
out
loope
insl
xor
ljmp
mov
pop
pop
cmpsl
add
rolb
lea
adc
decl
xchg
and
incl
xor
call
pushl
in
push
add
loopne
shll
add
dec
repz
add
add
jg
imul
sub
add
push
add
movb
sub
add
add
add
dec
movsl
add
in
xor
add
mov
jns
add
add
mov
add
outsb
sahf
aaa
mov
pop
outsl
xor
insb
movl
adc
decl
add
add
das
cli
aad
imul
sbb
dec
pop
pop
push
jge
aas
cld
sbb
dec
add
mov
aad
dec
cltd
cmp
bound
fsubs
add
xchg
mov
adc
add
add
divl
jmp
rolb
sub
fidivrl
fsubs
int
add
les
mov
and
decl
and
incl
call
decl
dec
pop
add
scas
push
mov
pop
leave
xlat
lods
fsubr
cltd
aad
movb
shlb
cmpsb
add
test
fwait
roll
add
mov
add
loopne
gs
ja
mov
pushl
add
inc
add
rcll
pushf
push
decb
add
mov
decl
into
xchg
in
sub
incl
jle
inc
add
xor
call
dec
out
adc
jmp
add
outsb
pop
xor
fdivs
out
or
addb
add
add
repz
mov
call
test
cmp
insb
pusha
add
outsl
sti
shrb
incl
stos
shll
sar
cmp
daa
add
addb
mov
cmc
dec
push
add
jg
daa
add
jns
sbb
stc
test
sbb
add
movb
sbb
addb
enter
shll
dec
test
std
add
out
ljmp
jne
xor
pushl
movl
in
cwtl
add
xor
sbb
adc
ljmp
decb
inc
add
out
test
icebp
and
fidivrs
add
test
add
lcall
push
hlt
testb
inc
add
js
cmpsb
add
sub
add
cmpsb
add
out
faddl
ds
add
ficoml
das
cmpsb
add
xor
ljmp
addl
xchg
cmp
add
in
mov
inc
add
aad
cmp
xor
aas
cmp
fucom
add
fisttps
dec
xor
jmp
add
xchg
cmp
add
mov
mov
ret
add
mov
cld
mov
add
jg
add
push
out
pop
int3
inc
add
repnz
lds
push
push
add
sbb
aam
add
movl
cltd
out
scas
xchg
add
xchg
sub
add
xchg
push
pusha
add
data16
in
sbb
mov
cmp
lods
pop
aad
addl
lret
loop
xchg
cmp
lods
movsl
add
popa
add
mov
sub
jle
shlb
add
fstpl
sbb
mov
gs
int
add
imul
add
mov
mov
movsl
add
add
sbb
call
add
imul
hlt
in
data16
loope
push
in
fwait
js
mov
test
dec
inc
add
popf
and
call
out
das
stos
jg
jb
lcall
and
decl
jge
add
add
ret
add
fwait
mov
stos
shrb
fbstp
add
roll
add
sub
pushl
fsubp
add
ja
add
or
add
in
mov
add
xor
jp
es
lods
inc
add
pusha
add
clc
clc
imul
add
ljmp
mov
xchg
pop
mov
add
adc
call
xchg
lods
dec
ret
sub
add
addl
xchg
mov
add
mov
sub
add
add
popa
add
lods
and
addl
add
movsl
add
xor
decl
mov
call
add
push
add
mov
ljmp
jnp
xchg
loopne
scas
sub
push
les
aas
cmp
out
jmp
mov
add
add
or
sahf
ret
add
lea
or
add
mov
jo
pushl
add
dec
add
call
pushl
add
add
ds
add
clc
add
decl
out
call
and
pushl
pop
xchg
mov
hlt
pop
add
sahf
insb
push
and
test
mov
mov
loope
pop
rolb
add
mov
add
movb
push
and
dec
scas
flds
add
dec
push
add
mov
arpl
decl
leave
fistpll
pop
mov
call
add
push
fldenv
xor
call
add
jle
xchg
mov
fisttpll
add
mov
gs
pop
imul
sub
mov
call
add
insb
lret
add
dec
cmp
xor
ljmp
sbb
mov
outsb
or
fsin
add
pop
inc
add
add
mov
addb
popf
insl
lock
cmp
out
outsl
push
add
sbb
add
push
or
add
ror
dec
in
roll
add
add
leave
mov
cmp
sub
add
mov
sbb
inc
add
mov
scas
lods
imul
les
jle
aas
cmp
call
pop
jbe
scas
push
adc
add
add
and
call
add
test
lret
pushl
push
add
add
push
add
add
inc
add
lock
out
sbb
addl
add
xor
ljmp
out
pop
sub
testb
test
sbb
popa
add
xor
pushl
add
ja
add
mov
dec
out
dec
xchg
pop
push
add
sub
push
inc
add
push
add
push
add
loop
push
add
fistl
add
jmp
add
add
xor
and
fcompl
ret
add
add
add
jmp
add
das
ss
mov
add
xchg
imul
jecxz
femms
sbb
add
test
aam
add
mov
les
ror
pop
in
jp
in
pop
imulb
adc
push
dec
adc
fwait
inc
add
add
push
jp
aad
or
sub
dec
outsl
fnstsw
test
stc
int
mov
inc
add
mov
add
add
lret
and
arpl
decl
add
int3
add
mov
movl
lcall
loop
mov
xor
jmp
add
push
mov
jbe
xlat
inc
add
les
pusha
add
imul
add
add
les
std
pop
stos
jmp
das
notl
jmp
and
pop
inc
add
sbb
dec
cmp
rcl
icebp
cmp
xchg
inc
add
fldcw
add
dec
cmc
mov
add
stc
repnz
imul
add
call
cs
xor
jns
popa
add
les
out
pop
ljmp
mov
add
lea
outsl
push
add
out
sbb
xor
incl
xor
sbb
call
xchg
int
cmp
arpl
jmp
incl
fdivl
je
lret
jo
call
add
jg
add
mov
add
outsb
inc
add
mov
xor
jmp
add
in
popl
mov
ds
sbb
lret
mov
add
xor
incl
push
inc
add
pop
adc
pushl
insl
push
pop
adc
jns
fisttpll
push
ja
mov
mov
xor
decl
or
add
test
push
add
stos
stos
dec
pushf
mov
clc
fildl
call
fldt
add
imul
jp
cli
inc
add
add
lahf
idivb
mov
je
push
aaa
pop
je
sub
cmp
shll
std
pushf
imul
pop
cmc
addb
shl
loop
scas
push
xor
stos
mov
add
bt
shl
add
add
or
add
ljmp
sub
add
mov
jmp
sti
xor
mov
leave
fmulp
stos
dec
test
call
jecxz
mov
fsubr
pop
jb
call
aad
and
lcall
sbb
dec
leave
add
mov
insl
dec
dec
xchg
cltd
sahf
push
inc
add
sub
scas
cmpsb
add
sbb
jno
ljmp
lcall
mov
add
pop
adc
test
cld
mov
fnop
sub
push
push
popf
mov
iret
in
test
add
add
xchg
sahf
xchg
push
add
mulb
xor
mov
push
sub
or
dec
imul
push
les
jne
lahf
push
adc
lcall
dec
push
add
shrb
enter
xor
call
add
add
add
push
mov
imul
add
xor
incl
dec
or
out
mov
cld
sbb
add
ljmp
in
cmp
sub
pushl
cmp
add
incl
add
add
lds
pop
xchg
popa
add
not
into
fldcw
dec
scas
adc
ljmp
add
pop
popf
push
add
jb
pushl
push
loope
insl
jnp
xor
ja
jg
xchg
xchg
jmp
add
inc
add
idivb
add
fiaddl
inc
add
shrl
dec
mov
add
cmp
popf
add
or
clc
fistpll
pusha
add
inc
add
cmp
add
or
mov
cmp
sti
cmp
mov
add
push
add
add
addr16
add
push
loope
lcall
aas
push
repz
aad
add
xchg
roll
dec
jl
ljmp
mov
in
jae
call
inc
add
add
inc
add
mov
sahf
in
ss
xor
cmp
add
int
cmp
addl
mov
push
aam
add
adc
call
call
add
outsb
addb
adc
dec
sub
adc
inc
add
insl
ret
add
cmpsl
add
add
add
add
add
add
or
movl
in
sbb
incl
add
mov
add
cli
decb
rclb
add
push
push
addr16
add
incl
nop
sbb
pusha
add
stos
mov
mov
into
clc
cwtl
mov
add
cltd
stc
imul
mov
cmp
adc
lcall
dec
out
ja
cwtl
data16
pop
mov
add
xchg
lds
or
mov
incb
add
movsb
add
incl
cmc
mov
addl
out
cmpsl
add
mov
add
push
rol
add
ja
add
add
inc
add
mov
insb
shll
fstpl
push
add
cmp
add
cmpsb
add
inc
add
jg
fisubrl
cmpsb
add
addl
add
add
push
sub
add
in
stos
fnsave
ret
add
pop
ret
add
adc
incl
add
add
addl
pop
push
jo
ljmp
sbb
or
cmp
jle
inc
add
sbb
cmp
add
jno
fnstcw
rcl
aam
xchg
inc
add
xor
ljmp
add
cmp
fstpl
push
addl
or
add
add
xor
fwait
aam
cmpsb
add
jle
inc
add
in
cmp
jnp
inc
add
xor
dec
xchg
push
add
mov
jp
inc
add
pop
add
popf
cmp
jmp
xchg
fdivrl
push
push
ret
xor
dec
cwtl
ret
add
pop
es
addl
call
cmpsb
add
call
add
cmpsl
add
push
mov
movsl
add
dec
mov
call
add
fisttps
add
insl
dec
jmp
out
arpl
jp
mov
and
sbb
and
jmp
add
mov
mov
add
loope
push
or
add
mov
add
add
data16
int3
pop
xchg
roll
out
fstps
in
cltd
mov
or
jmp
dec
les
inc
add
add
int3
xlat
mov
adc
dec
push
addl
mov
jle
addl
sbb
xor
out
mov
add
push
push
inc
add
call
lods
dec
les
dec
cld
ljmp
insl
test
push
mov
lock
add
out
or
fnstenv
incl
add
mov
xor
call
call
sub
add
ds
loopne
out
push
add
mov
xchg
popf
add
cld
hlt
call
add
les
sti
and
lcall
pushf
into
xchg
add
call
xor
decl
cmp
incl
add
add
decl
push
stc
mov
add
call
add
lock
cs
add
inc
add
lret
push
add
cli
sub
pusha
add
xchg
sub
add
out
clc
mov
add
fcomps
fisubl
inc
add
add
sbb
ljmp
jns
loopne
cli
xor
incl
add
add
lcall
push
or
add
loopne
push
add
xchg
mov
fxch
mov
xchg
push
cmp
add
lahf
add
sbb
lcall
dec
fwait
inc
add
mov
movsl
add
in
adc
add
js
add
rorb
popf
inc
add
xor
decl
add
in
lds
jno
jmp
push
add
and
incl
mov
add
mov
test
or
add
add
push
add
movsl
add
dec
mov
add
dec
xchg
shr
mov
add
movb
mov
addl
lcall
das
mov
jmp
add
add
sbb
xacquire
dec
in
pop
push
add
aad
add
mov
add
add
lcall
adc
cmp
add
pop
dec
negb
add
ljmp
jae
fidivrs
add
add
add
or
lcall
inc
add
inc
add
push
add
add
sub
sti
inc
add
pushl
pusha
add
pop
xchg
sbb
jmp
push
push
inc
add
and
call
inc
add
cltd
xor
call
mov
insb
xor
jmp
add
add
sbb
add
mov
call
out
xchg
and
jmp
inc
add
inc
add
push
mov
fwait
inc
add
mov
in
mov
imul
add
xlat
inc
add
ffree
add
push
add
movl
jmp
mov
add
inc
add
scas
xchg
dec
insl
out
das
outsb
jae
jp
in
push
add
bound
call
push
dec
mov
mov
jmp
xchg
clc
mov
pop
cli
les
and
cld
iret
pop
add
enter
add
in
ret
add
add
and
jmp
incl
push
mov
or
add
add
dec
mov
loopne
or
mov
add
leave
pop
xchg
ret
pop
mov
adc
jnp
mov
pop
add
add
xchg
cs
cltd
mov
mov
push
mov
das
call
mov
add
add
cmpsl
add
addb
xor
add
xor
call
aad
or
add
xor
jl
fistl
test
insl
ljmp
dec
ds
xor
jmp
pushl
add
fwait
lahf
fldcw
ret
add
rolb
jg
fildl
lcall
xchg
imul
adc
insb
push
add
lcall
add
mov
xchg
push
pop
scas
xor
and
and
incl
dec
mov
add
lods
xchg
dec
xchg
lret
or
sbb
ljmp
in
test
add
sbb
add
xor
addb
repz
mov
sub
popf
sbb
add
sbb
shrb
cltd
jno
call
decl
ljmp
lea
dec
nop
addl
sbb
dec
fs
test
mov
ficoml
cmp
mov
add
mov
imul
add
add
add
dec
cld
pop
add
rolb
add
add
xchg
pop
add
ljmp
add
mov
add
push
xor
decl
test
dec
adc
add
addb
dec
sub
add
inc
add
call
add
dec
fldt
inc
add
dec
lahf
pop
cmc
popa
add
scas
daa
add
add
push
add
add
leave
hlt
cmp
add
add
mov
sub
xchg
jl
add
js
mov
sub
nop
loopne
addl
xchg
push
add
sub
add
or
add
cmp
add
push
push
dec
mov
inc
add
add
jge
push
inc
add
jle
add
mov
add
call
pushl
ss
add
outsl
je
add
int
add
cmp
add
pop
addb
add
adc
push
loope
pop
pop
bound
call
push
inc
add
add
stos
or
shl
movsl
add
push
mov
push
add
js
add
jge
lods
ljmp
cmp
xor
lcall
or
add
mov
add
lods
arpl
incl
add
push
test
repz
pop
add
add
mov
test
jne
add
add
sbb
add
mov
call
in
scas
stos
jge
aas
xor
lcall
cmpsb
add
add
aam
pop
rolb
add
add
sub
fisttpl
arpl
ljmp
cmp
outsb
push
xchg
mov
pop
jno
call
add
out
and
incl
sub
ljmp
or
jbe
push
add
cmp
add
cwtl
enter
sarl
add
cmp
add
movsb
add
incl
xor
incl
add
pop
inc
add
std
lcall
lcall
add
fnsave
std
push
dec
ror
cmpsl
add
lcall
sbb
jns
sub
call
out
gs
add
add
gs
addl
incl
out
dec
scas
test
pusha
add
cmc
xor
lcall
xchg
movswl
dec
sahf
sub
loope
popa
add
lret
xchg
push
add
fldenv
add
pusha
add
xchg
popa
add
or
outsb
push
ret
add
out
sar
mov
add
push
add
sbb
lret
loop
xchg
test
add
lcall
scas
mov
movsl
add
xor
pushl
call
pop
dec
push
add
lcall
in
pop
stc
jae
call
add
add
addl
add
and
ljmp
mulb
add
rolb
mov
aam
xchg
xor
ljmp
push
roll
adc
mull
fbstp
add
push
add
imul
addl
pop
xlat
dec
test
repnz
addl
sbb
ljmp
push
add
jne
cmp
add
jg
jb
call
adc
add
and
push
dec
jge
lds
ret
add
add
mov
insl
and
lcall
fwait
adc
dec
and
inc
add
sbb
add
cmp
add
pop
push
and
sbb
push
xor
gs
push
add
aaa
mov
decl
shrb
jb
jmp
add
adc
pushl
add
scas
jl
movsl
add
add
cmc
jp
add
add
mov
movl
call
add
scas
push
and
call
int3
incb
in
pop
jg
add
jl,pn
add
add
add
lcall
fs
sahf
ds
insb
dec
mov
add
xchg
fcompl
pmulhw
lret
enter
shlb
ljmp
xchg
add
das
xchg
aas
cli
cmp
mov
add
xor
incl
add
jmp
add
add
roll
mov
cmp
add
jge
add
fnsave
add
in
leave
cwtl
jge
icebp
repz
add
ljmp
add
lds
fbld
xor
incl
rolb
je
xchg
punpcklwd
call
add
pop
addl
cmc
lea
add
add
out
mov
mov
add
arpl
incl
ljmp
xor
add
xchg
aam
popf
ja
add
mov
jae
incl
add
jecxz
sbb
cld
es
das
xchg
js
add
addl
inc
add
sti
mov
lock
add
or
add
mov
ficoml
ljmp
dec
pop
adc
incl
fmuls
sbb
test
add
inc
add
scas
xor
pushl
jmp
add
xor
call
and
jmp
outsl
cld
ss
and
ljmp
iret
mov
dec
cltd
add
add
fcomip
pop
hlt
mov
adc
lcall
and
xchg
inc
add
add
and
jns
xchg
sub
mov
xlat
add
sub
out
pop
cmp
add
xchg
sahf
xor
lcall
and
call
add
lcall
movb
add
sbb
data16
add
lahf
jle
mov
xchg
push
rol
add
add
inc
add
cli
lcall
jbe
add
add
lcall
mov
fldcw
pop
movb
dec
or
add
add
ret
add
loope
and
jmp
add
imul
or
add
add
daa
add
jge
stos
mov
push
or
sub
loopne
xor
sti
ret
add
add
dec
mov
add
add
push
xchg
inc
add
cld
adc
incl
mov
int3
jo
push
push
add
xchg
cltd
or
mov
mov
pop
pop
leave
addl
add
mov
lahf
add
jl
add
mov
in
fmuls
or
add
pushl
and
dec
aam
out
shrb
mov
lds
fsub
add
add
fimuls
lods
into
and
push
into
out
mov
pop
loope
mov
movb
add
and
js
clc
fsubl
add
add
popa
add
jl
mov
insb
clc
or
and
dec
or
popa
add
xchg
dec
mov
xchg
push
cmp
lahf
sub
fimull
add
and
js
xor
pushl
add
and
pushl
call
mov
daa
add
add
add
add
incl
aad
add
mov
jae
fidivs
cmp
xor
call
add
loope
mulb
lcall
mov
pushl
outsl
out
out
adc
fidivs
jo
js
add
or
in
fstpl
addb
sub
add
add
ljmp
pop
jns
add
divl
add
mov
cltd
decb
push
add
xor
jmp
add
mov
add
adc
xor
call
or
add
in
pop
add
mov
cmc
insb
std
push
add
fisubrl
jecxz
loop
or
xlat
and
lahf
inc
add
test
and
jle
fisubrs
sbb
add
arpl
call
movl
jecxz
testb
xchg
jbe
in
xchg
jmp
add
in
mov
bound
ljmp
nop
rcr
inc
add
mov
cmp
ljmp
and
add
fsts
add
popf
or
jmp
push
jns
pop
sbb
add
das
rorb
add
inc
add
adc
ljmp
push
pop
push
leave
push
and
push
fisttpll
cmc
xchg
sbb
mov
daa
add
lods
int3
aam
jo
decl
idivl
dec
stos
mov
arpl
call
call
sub
fistpl
add
nop
jbe
add
mov
into
xchg
fnstsw
add
jns
sbb
and
pushl
mov
and
incl
jmp
add
xchg
pmaxsw
add
addl
sbb
add
notl
add
pushl
xchg
pop
and
pushl
add
mov
ficoms
and
lods
sarb
rclb
add
jge
xchg
sub
xchg
lds
pop
mov
adc
decl
add
lret
xor
decl
les
scas
sbb
test
cmp
add
cmp
add
add
fldlg2
fists
inc
add
std
pop
mov
xchg
ret
add
mov
push
add
and
jns
mov
add
jmp
add
pushl
add
jo
mov
add
test
add
lods
cmp
dec
arpl
lcall
or
push
sbb
add
jp
lahf
movb
wrmsr
add
dec
jbe
add
push
add
cmc
je
add
pusha
add
jbe
add
decl
fisubrl
aaa
mov
sub
fstl
add
cs
mov
sub
add
add
inc
add
je
lcall
sub
add
decl
mov
fsubrs
outsl
mov
icebp
and
decl
mov
rcrl
and
pop
movb
add
xchg
mov
mov
and
push
push
add
dec
daa
add
add
xor
xor
int
add
clc
sti
add
pushl
add
xlat
cmp
and
call
lcall
jg
sbb
jo
decl
jb
call
add
xchg
mov
pop
inc
add
xchg
cmp
pushf
push
add
mov
cmp
mov
add
xchg
in
loopne
outsb
ss
adc
decl
mov
xchg
loope
jnp
xchg
mov
test
imul
mov
sbb
das
push
add
into
lret
lcall
add
ljmp
fcomi
fwait
sub
nop
add
decl
fwait
mov
add
pushl
add
dec
push
mov
push
cmc
loopne
lret
fxch
iret
mov
add
adc
jmp
decl
into
call
push
push
add
push
mov
add
add
xchg
mov
xchg
addb
dec
xchg
sbb
add
loop
mov
add
cmp
pop
mov
xchg
lret
addl
add
push
add
or
add
aad
cmp
addl
lcall
mov
mov
shr
dec
mov
add
pushl
dec
or
add
add
repz
jno
in
bound
push
mov
dec
in
pushf
data16
mov
add
divl
add
jo
dec
jno
dec
addl
ficompl
sub
xor
cli
push
add
sbb
add
fisubrl
sub
loop
fidivrl
mov
sarl
add
add
cmp
add
js
ffree
add
pop
cwtl
fucomip
insb
push
push
add
xchg
into
mov
insl
sti
ja
add
roll
add
add
jbe
inc
add
jo
jmp
add
add
sub
addb
fdiv
sbb
add
loopne
mov
jmp
push
sbb
stc
stc
and
lcall
loop
inc
add
call
and
std
pop
fildl
sbb
mov
inc
add
mov
mov
mov
push
enter
and
ljmp
xchg
mov
add
mov
jmp
mov
add
jbe
add
jns
add
add
js
xchg
sbb
lods
cmp
and
jns
aaa
jo
fbstp
mov
add
ss
add
jle
adc
lcall
enter
or
add
js
pop
bound
call
out
dec
in
mov
push
stos
or
lcall
movsb
add
add
mov
add
popa
add
movsb
add
ljmp
repz
sti
dec
xor
jp
xchg
mov
add
inc
add
sti
fbstp
call
add
cmp
add
gs
add
bound
incl
add
pop
rcr
xchg
iret
inc
add
mov
add
out
jo
ljmp
rclb
mov
add
mul
add
and
lcall
or
add
dec
xor
decl
repnz
in
sbb
add
fldl
adc
jbe
add
xchg
push
add
xor
lret
jae
aas
addl
add
or
call
or
mov
add
stos
ret
add
mov
adc
pushl
lcall
jnp
pop
xchg
inc
add
adc
push
sbb
into
fistpl
lcall
inc
add
mov
add
add
add
insb
shr
shll
mov
repnz
lcall
mov
iret
pop
fbstp
add
ja
and
jmp
add
add
add
incl
add
leave
shrb
inc
add
inc
add
je
add
add
and
jmp
lea
add
add
ds
adc
or
movsb
add
addl
add
cmp
add
jns
call
add
filds
add
lcall
les
stos
scas
inc
add
sbb
sub
add
xor
cmp
out
addb
mov
add
out
mov
fcompl
fidivrs
add
adc
add
dec
xchg
in
pcmpeqb
loopne
cmc
test
sbb
add
or
pop
stos
and
lcall
add
icebp
mov
add
out
movsl
add
add
repz
js
popf
xchg
or
loopne
and
mov
sbb
add
testl
add
cmpsb
add
adc
pushl
add
ljmp
xchg
rolb
insb
mov
add
sti
dec
pop
sbb
in
addb
test
xchg
cmp
sub
mov
add
call
out
aas
iret
mov
test
inc
add
sub
icebp
in
jae
incl
add
inc
add
les
xchg
add
jne
add
push
add
notl
fsubs
add
les
add
mov
in
xchg
cmp
outsl
popf
push
add
test
add
stos
pop
dec
aas
inc
add
mov
roll
inc
add
movl
mov
push
xlat
mov
jne
inc
add
sub
add
pushf
ss
push
movb
popa
add
pusha
add
cmp
lcall
add
add
loopne
jae
jmp
add
nop
add
mov
ret
add
rolb
lcall
jg
push
pop
ss
lahf
addl
dec
and
incl
ljmp
or
dec
addl
mov
stos
add
mov
inc
add
je
ret
add
je
xchg
jg
jae
fcompp
fidivrs
cltd
xchg
sbb
outsb
das
addb
add
dec
cs
xchg
mov
add
add
add
jle
push
imul
adc
push
int
cltd
or
data16
addl
cld
pop
pop
add
decb
ljmp
xchg
leave
loope
lea
pop
ljmp
call
add
push
or
sbb
insl
std
pop
je
add
push
dec
cmp
lods
js
fcoml
add
jl
add
addl
jo
decl
pop
sbb
lcall
mov
jb
jmp
cmp
call
add
ljmp
jecxz
push
add
rolb
mov
fisubrl
cld
jbe
push
mov
test
lock
pop
inc
add
add
test
loop
and
incl
dec
lret
push
xor
call
add
mov
add
leave
out
divl
incl
xchg
scas
out
mov
sti
stos
imull
mov
add
pushl
add
jp
add
adc
ljmp
xchg
cwtl
push
add
popa
add
push
add
and
arpl
cmp
in
iret
cwtl
jmp
cli
and
decl
cltd
fidivs
add
aam
int
adc
jmp
addb
add
fst
xchg
xchg
push
add
xchg
push
add
jg
nop
inc
add
nop
pushf
loopne
cmpsb
add
jae
cli
pop
xchg
negb
icebp
sbb
pushl
add
add
in
inc
add
jmp
xor
lcall
push
sub
add
aaa
sbb
or
rorl
addl
add
jae
call
in
add
sbb
add
adc
in
and
jp
add
mov
xor
jmp
add
adc
inc
add
lret
dec
jbe
aaa
sbb
mov
push
cmp
mov
daa
add
mov
add
xchg
jbe
push
jo
incl
add
pop
lock
jmp
add
pushf
aas
imul
aaa
cs
inc
add
out
add
adc
xchg
adc
decl
lret
movb
add
add
adc
sbb
ds
add
add
add
pop
push
add
inc
add
sub
sub
add
fidivrl
lcall
dec
or
add
incl
add
mov
add
jnp
add
xchg
sahf
adc
sbb
pop
adc
ficoms
dec
inc
add
scas
aam
xchg
cmp
data16
xchg
mov
add
add
out
inc
add
mov
mov
ds
int
mov
insl
cmp
jg
mov
push
add
or
add
out
fcoml
ljmp
sub
xchg
cmc
mov
add
add
pop
inc
add
mov
add
stos
mov
dec
out
add
cmp
pushl
adc
add
decl
xchg
lret
cmp
mov
add
scas
icebp
pop
add
add
into
out
or
add
ret
add
clc
and
jmp
pop
call
aad
xchg
and
ljmp
jmp
add
sbb
outsb
dec
xlat
mov
dec
mov
int3
jmp
dec
adc
rolb
mov
scas
movb
add
add
add
add
fsubrl
push
inc
add
pop
add
jmp
aas
aam
test
sub
add
lcall
es
out
scas
mov
add
in
repz
jl
add
jmp
add
fsub
add
test
jae
inc
add
movb
ljmp
lods
and
cmp
arpl
push
add
ljmp
sbb
mov
mov
jno
incl
roll
push
add
lea
pushl
shlb
lods
stos
mov
add
addb
pushf
dec
xchg
out
test
jl
scas
fadd
add
sub
pop
rolb
add
add
jmp
lret
mov
push
ja
push
add
dec
lcall
incl
dec
out
pusha
add
in
dec
lahf
cmp
rolb
jnp
pop
rolb
add
mov
inc
add
mov
movl
or
push
inc
add
add
xchg
test
pop
jle
sahf
clc
imul
or
push
sub
add
push
int
xchg
roll
dec
movb
pusha
add
js
add
add
fsts
inc
add
ljmp
aad
add
add
and
lcall
ss
rorl
jne
xchg
cmpsl
add
add
lods
push
push
mov
pop
pop
mov
add
ds
call
push
adc
fsubr
enter
mov
add
mov
mov
add
push
xchg
ljmp
enter
addb
add
cld
sti
jp
add
in
in
jge
mov
xor
incl
sub
mov
or
add
rolb
add
or
aas
addl
scas
fcomip
popa
add
pushf
jge
movb
repnz
mov
add
xor
add
xchg
movb
repnz
xor
lcall
add
push
les
add
testb
leave
pop
dec
jo
cli
mov
add
sub
jns
lds
jmp
add
mov
add
jae
push
negb
dec
hlt
fs
add
xor
xor
jmp
add
add
sti
test
add
out
cmc
mull
add
fbstp
mov
xlat
push
mov
add
aas
pop
cs
dec
xchg
or
lcall
frstor
add
ficoml
add
out
lods
repz
mov
inc
add
data16
mov
lret
ljmp
movsl
add
sub
add
push
add
decl
shrb
clc
rolb
pushl
and
call
dec
sub
js
add
add
add
jmp
xchg
pop
les
and
aas
cmpsl
add
add
nop
mov
cmpsb
add
add
add
jno
lcall
mov
mov
xchg
lock
mov
dec
push
fstps
add
add
aas
add
call
push
add
ja
pop
adc
call
add
xor
decl
add
dec
scas
es
add
scas
loope
pop
push
and
ljmp
and
idivb
and
pop
sub
movsl
add
adc
jmp
xor
add
dec
and
jmp
add
and
ljmp
movb
mov
add
rorl
test
repnz
add
jne
rclb
jne
fstl
add
mov
add
test
push
enter
clc
lret
cmp
inc
add
call
and
mov
mov
pop
out
imul
addl
add
mov
push
add
mov
add
call
add
xor
pop
push
add
insl
xchg
mov
add
add
mov
in
fists
add
add
mov
arpl
decl
lahf
push
fsubrp
rorl
add
or
add
pop
jg
je
add
rcr
push
inc
add
inc
add
adc
jmp
std
insb
push
enter
movl
or
sbb
add
xlat
pushf
into
jle
add
icebp
mov
mov
clc
outsb
rolb
outsl
pop
loop
sub
push
icebp
cmp
sbb
add
test
lods
xchg
fisubs
add
ljmp
pushl
cmp
rcr
pushf
scas
std
push
out
pop
pop
pop
pop
add
call
add
mov
dec
jne
popf
mov
jmp
add
adc
add
jbe
jb
js
lds
jl
jle
jno
js
leave
xlat
adc
lcall
sbb
in
lods
add
ljmp
test
les
int
add
pop
lds
sbb
scas
imul
add
into
insb
push
dec
and
ljmp
imul
aas
cld
enter
mov
add
testb
cltd
dec
cmp
add
add
inc
add
outsb
sti
xor
add
dec
dec
and
inc
add
mov
add
mov
ljmp
xchg
lahf
repnz
jp
add
adc
incl
add
add
add
sub
call
sub
add
ficomps
add
add
push
sbb
add
mov
mov
add
mov
dec
roll
xor
adc
decl
add
pop
inc
add
and
push
notl
add
lret
iret
stc
rcrl
push
pop
mov
leave
sub
int
add
in
ljmp
pop
xor
incl
addb
dec
sub
jns
add
add
mov
mov
add
mov
add
add
roll
lods
xchg
adc
inc
add
call
pushl
test
mov
inc
add
jl
out
movsb
add
mov
stos
scas
pop
jecxz
add
pushl
push
add
or
lods
and
decl
sahf
enter
push
mov
push
loope
mov
lret
add
add
adc
dec
fwait
jmp
xchg
mov
dec
or
je
mov
add
add
movl
loope
jmp
add
sub
test
push
add
mov
lods
add
incl
add
imul
js
rclb
jmp
add
imull
jns,pn
add
test
je
hlt
in
das
mov
movsb
add
add
inc
add
push
xor
call
add
movb
cmp
mov
add
add
mov
jmp
jo
pushl
add
ficomps
cmp
out
xchg
repnz
add
mov
mov
jle
mov
mov
sbb
dec
iret
mov
mov
push
jnp
aad
mov
jl
sub
add
push
add
call
add
push
add
ljmp
mov
rorl
push
add
adc
jmp
filds
decl
out
aas
jg
stc
and
incl
cmc
push
jmp
call
add
add
addl
add
or
push
negl
out
xor
incl
call
xchg
push
pop
add
xchg
adc
ljmp
cmp
mov
jno
decl
mov
add
addr16
icebp
outsl
mov
mov
jo
jmp
add
hlt
movl
sbb
cs
add
fwait
mov
add
add
add
jl
sub
or
cmp
add
out
xchg
add
decl
add
jmp
adc
pushl
insl
pop
add
decl
push
sbb
mov
ljmp
push
add
lds
pushf
xor
call
mov
jle
add
add
es
dec
pop
inc
add
add
call
jmp
lods
dec
in
fxch
lret
std
pop
loop
xchg
mov
rcr
pop
mov
addb
cmp
add
add
hlt
imul
add
xor
lcall
push
mov
push
adc
cmp
adc
call
inc
add
add
add
xor
jmp
add
mov
decl
add
in
fisttps
add
jle
mov
add
in
aad
inc
add
mov
add
lds
aaa
xor
inc
add
add
enter
mov
add
xor
jmp
add
repz
add
or
inc
add
push
add
in
push
xchg
xor
incl
add
add
stc
and
decl
pushf
fmuls
and
stos
mov
cmpsl
add
add
add
add
mov
jns
add
mov
add
jmp
add
and
call
or
out
mov
mov
add
adc
decl
add
negb
add
add
add
idiv
mov
ljmp
cmp
add
sub
add
jb
lcall
outsl
mov
sbb
push
pop
add
ljmp
add
xor
add
js
pop
mov
add
in
js
pop
sub
and
or
sub
and
ljmp
mov
add
add
aad
add
jmp
add
dec
dec
fdivp
cmc
cmp
add
rolb
rolb
push
movsl
add
pop
push
call
sub
int3
std
and
js
movl
lcall
aaa
movb
bnd
add
push
add
inc
add
cwtl
mov
add
out
push
mov
add
add
inc
add
mov
mov
add
pop
add
out
mov
add
push
mov
cmp
add
lods
jg
add
add
fxch
add
push
add
insl
xor
add
rolb
push
lret
add
mov
int
sub
sbb
add
les
js
sti
add
dec
mov
add
in
movsl
add
add
inc
add
add
add
dec
movhps
add
add
adc
cmp
loope
xchg
lock
iret
xlat
jbe
add
out
push
add
add
sbb
add
bound
pushl
add
add
add
insb
sbb
pop
fsubrl
add
nop
lods
sti
xchg
mov
outsb
add
jne
int3
addb
jmp
outsb
push
dec
out
incb
mov
loopne
dec
jo
call
imul
sbb
jbe
addl
into
sti
mov
pop
sbb
and
cmp
sbb
add
in
push
add
imul
jb
call
jmp
sahf
addb
add
ljmp
add
daa
add
int3
mov
scas
sbb
sub
add
repnz
add
and
ljmp
clc
daa
add
xchg
xor
incl
add
dec
stos
push
add
cmp
test
addr16
clc
mov
sub
add
pop
add
add
test
hlt
add
add
stc
dec
pushf
in
mov
add
ljmp
add
cmp
add
add
sbb
and
decl
pop
mov
sahf
decl
add
add
mov
push
add
test
mov
decl
cld
jge
ret
add
cmp
add
movb
pop
arpl
cmp
aas
sahf
lahf
loope
mov
ljmp
add
std
or
add
mov
add
ljmp
call
popa
add
cs
jns
add
repnz
jne
add
cmp
add
rolb
lret
xchg
lock
addl
lahf
sub
popa
add
popa
add
jae
push
sbb
scas
and
push
movb
add
add
add
je
sbb
sbb
addl
aam
pop
or
ljmp
cmpsb
add
jo
call
lcall
cmp
in
pop
xlat
mov
movsl
add
pop
rolb
xchg
mov
add
test
ljmp
imul
add
mov
and
add
nop
cmp
rolb
addl
test
add
add
mov
and
adc
filds
add
movsl
add
add
cmpsb
add
pushl
incb
fistl
pushl
call
idivb
mov
jge
out
mov
loope
xor
call
outsb
push
outsb
xchg
mov
mov
lret
int3
sbb
ss
ljmp
add
call
pushl
xor
add
push
mov
add
pushf
mov
inc
add
add
roll
jmp
mov
jmp
pushl
xchg
dec
sub
add
call
xor
incl
lea
mov
outsb
mov
daa
add
jmp
call
ret
add
lds
out
shlb
add
jmp
or
add
add
and
push
xor
add
sub
incb
add
idivl
js
xor
call
or
les
cli
sbb
add
inc
add
add
dec
and
aam
scas
ljmp
mov
das
pop
ret
add
add
mov
add
pop
or
xchg
sbb
inc
add
sahf
adc
jle
mov
add
jne
das
aam
bound
push
in
loope
adc
cmp
sbb
fimull
add
dec
sti
jge
add
lds
mov
mov
jg
stos
sub
aad
add
test
bound
in
insl
sub
lods
negl
inc
add
jg
add
cmpsb
add
push
insl
push
add
inc
add
push
mov
add
push
add
std
or
sbb
add
jecxz
fdivrs
aam
add
add
mov
bound
ljmp
push
add
fwait
mov
xchg
addb
cmpsb
add
sub
sbb
push
add
in
flds
add
add
add
cmp
lds
lea
jmp
add
cmp
push
add
das
out
mov
add
push
sti
cmc
mov
pop
imul
inc
add
add
lcall
repz
xchg
jbe
add
sbb
lret
add
lcall
fcoml
add
int3
or
add
adc
lcall
pop
test
xchg
int3
push
push
add
adc
stc
in
xor
decl
add
daa
add
lahf
das
shrb
pusha
add
pop
das
jns
pushf
pop
xor
popa
add
mov
add
mov
movl
jle
cmp
fisttpl
cld
dec
xchg
adc
ljmp
add
xchg
cvtps2pd
push
inc
add
out
lea
pop
cmc
sbb
les
lcall
dec
pop
pop
stos
stos
adc
imulb
ljmp
add
mov
hlt
test
mov
add
jg
jno
pushl
add
jl
xchg
bound
lcall
pop
stos
movl
aaa
dec
repnz
add
sub
add
mov
rolb
jecxz
out
inc
add
add
push
mov
add
movb
add
imul
mov
push
xlat
nop
or
add
aad
cmp
add
sub
out
std
push
lods
add
dec
push
addb
xchg
les
repnz
cmp
add
add
add
push
and
pop
std
lcall
adc
call
add
lock
arpl
lcall
and
incl
decl
mov
sbb
mov
out
call
xchg
arpl
cli
xchg
pop
sbb
add
outsl
add
inc
add
add
push
sub
fistps
lods
cmpsb
add
fsubrs
and
mov
add
mov
cmp
add
decl
lods
cmp
stc
loope
data16
cmp
add
add
sub
test
outsb
pop
mov
add
fs
mov
jmp
sub
add
add
movb
addr16
lret
jl
sub
add
lods
ud0
pop
repnz
xor
inc
add
add
jns
movsb
add
add
adc
push
xchg
adc
mov
stc
outsl
aam
lret
adc
call
movl
aam
dec
je
cmp
fbstp
push
add
push
add
push
add
add
pop
add
pop
bound
lcall
popf
pop
in
and
incl
decl
test
pop
push
add
pop
fnstcw
or
add
ljmp
dec
add
add
and
cmp
mov
push
add
xchg
pushf
call
fabs
add
in
pop
xor
jl
push
out
fdivl
rcrb
add
xchg
add
xchg
mov
decl
stc
ds
das
or
enter
std
push
stos
sbb
add
xchg
fisttpl
repz
pop
and
ljmp
mov
add
push
cli
adc
incl
mov
bound
fdivrl
loopne
mov
mov
add
lret
jecxz
adc
jmp
out
nop
repnz
sbb
pop
xchg
test
fisubs
je
movb
mov
add
decl
into
xor
decl
mov
add
ja
add
add
xchg
adc
pop
mov
sub
call
in
cwtl
cmp
add
movl
add
jmp
stos
out
cwtl
addl
xchg
sbb
add
push
add
xchg
repz
int3
jmp
add
call
mov
in
pop
dec
jle
add
add
add
fldt
add
push
imul
decl
push
push
jns
add
out
adc
decl
rcll
shl
sub
add
addb
dec
xchg
cld
jle
jecxz
outsb
or
and
push
inc
add
add
mov
fbld
add
data16
jno
inc
add
add
jl
fwait
ret
xchg
or
add
add
push
xchg
xor
lcall
negl
test
ljmp
fwait
stc
sub
add
ljmp
mov
mov
add
cmc
push
add
jnp
add
out
es
rolb
add
sti
fstpl
inc
add
bound
pushl
add
popa
add
cmp
dec
stos
loop
lds
xlat
imul
push
xchg
pop
iret
hlt
and
xchg
add
xchg
cmp
int3
dec
loop
clc
ret
add
xchg
inc
add
xchg
pop
movb
inc
add
xchg
add
and
decl
add
aam
in
lret
add
jmp
add
int3
rolb
add
pop
std
ljmp
or
pop
mov
and
call
add
lods
inc
add
push
add
add
inc
add
pop
add
jmp
cmpsl
add
add
movsb
add
add
lcall
add
popa
add
jge
add
jae
pushl
sbb
je
add
add
and
enter
jo
inc
add
add
xchg
jle
add
mov
lods
jo
ljmp
add
xor
jmp
ljmp
jg
jae
call
cmp
data16
out
les
jmp
add
add
pop
xchg
aam
movl
add
bound
decl
push
fwait
sub
add
mov
cmp
and
decl
push
aad
add
pop
push
ret
add
in
mov
jg
add
add
add
ja
cmp
add
xor
ljmp
lea
pushf
sbb
ljmp
add
mov
adc
ljmp
add
ss
jb
call
push
add
dec
rolb
mov
leave
mov
mov
add
pop
repz
sbb
pop
add
cmp
pop
movb
add
add
pop
push
add
mov
add
popa
add
neg
inc
add
scas
lahf
push
add
mov
in
pop
push
mov
jmp
add
and
mov
into
loope
mov
sub
add
jmp
lcall
fisubrs
mov
pop
xchg
push
add
cmpsl
add
add
mov
add
or
sti
cmpsl
add
mov
cmp
add
push
add
push
add
stos
clc
add
incl
add
sbb
add
add
fwait
std
sahf
add
mov
aas
jo
dec
cmc
mov
add
adc
mov
add
sti
pop
sbb
add
jae
call
push
add
movsb
add
jle
mov
stc
adc
nop
jmp
add
rolb
push
cmp
pushf
fdivs
call
addl
sub
mov
add
xor
call
xor
fistps
or
lods
shlb
aas
jge
xchg
movb
add
nop
jno
decl
pop
ret
add
push
lea
add
movb
popf
pop
leave
add
stos
cmp
xchg
jne
add
jmp
add
call
ljmp
int3
cmp
push
add
jge
sarb
movsb
add
jne
inc
add
frstor
add
inc
add
mov
pop
xlat
mov
add
dec
jmp
cmp
hlt
xchg
stos
rcll
add
push
add
add
test
xor
cmp
add
adc
or
add
sub
mov
add
and
je
pushf
cld
xor
jmp
incl
add
jnp
movsb
add
dec
into
mov
add
add
add
xchg
gs
imul
incl
incl
in
xor
jmp
add
sub
add
mov
add
decl
sti
rolb
adc
pop
cmp
add
pop
add
call
jno
pushl
add
stos
int
mov
pushl
aad
mov
insb
dec
dec
data16
push
aad
mov
adc
push
jae
lcall
roll
add
mov
add
out
sub
push
mov
add
jge
fstps
roll
cmp
jge
ljmp
and
xchg
or
aam
jl
cmc
mov
jmp
add
add
add
add
push
pop
jecxz
sahf
movsb
add
jnp
xchg
pusha
add
cmp
pop
pushf
das
dec
movsb
add
or
add
mov
pushl
pop
add
out
push
sub
add
test
add
adc
add
add
dec
test
mov
jns
lcall
mov
popf
jp
add
call
add
add
sbb
mov
adc
lcall
add
iret
cwtl
adc
add
pop
mov
add
add
scas
rolb
je
xchg
imul
dec
inc
add
in
sub
add
add
dec
jnp
add
lret
push
add
xchg
sbb
imul
lcall
inc
add
inc
add
push
ret
inc
add
dec
add
loopne
mov
inc
add
add
pop
rolb
push
dec
sub
xor
add
mov
add
push
dec
dec
xor
jmp
movl
pusha
add
imul
add
lods
push
imul
int
xchg
addb
jnp
in
push
and
inc
add
int3
jno
decl
divl
add
and
incl
incl
inc
add
data16
push
scas
fisubrl
lods
pop
mov
je
xadd
ret
add
add
jae
decl
cmp
add
incl
add
add
sti
in
cs
ret
add
lahf
outsb
mov
inc
add
push
imul
cmp
xor
add
movb
add
enter
add
xchg
adc
jle
add
lods
push
xor
adc
scas
sbb
add
fdivrl
ret
add
pop
adc
jecxz
mov
insl
loop
lret
aas
mov
and
loop
jg
pop
addl
jl
aad
scas
push
add
mov
jo
pushl
pop
cmc
les
inc
add
cmpsb
add
add
lods
or
add
mov
push
mov
add
inc
add
add
rolb
jbe
pop
add
add
add
xor
push
push
and
mov
mov
call
add
test
mov
jge
adc
call
lods
lahf
mov
add
pop
inc
add
jae
call
push
ja
add
lcall
scas
lds
or
add
jp
bound
call
pop
pop
add
loope
add
call
cmp
push
add
lcall
lcall
mov
arpl
call
add
dec
adc
push
daa
add
mov
stos
jmp
dec
cld
and
fdivl
cmp
and
sbb
push
add
lahf
insb
aam
push
add
outsl
push
add
mov
imul
add
in
pushf
push
lret
incl
add
jmp
mov
mov
pushf
push
add
xchg
cs
add
mov
hlt
xchg
fld
add
aam
addb
inc
add
jmp
add
jb
lcall
cli
cld
cmp
dec
jle
add
inc
add
loopne
aaa
mov
add
jnp
mov
ja
loop
out
test
add
and
pushl
add
jo
incl
mov
lcall
fsubs
mov
call
add
fnsave
pop
sbb
add
mov
jge
loop
inc
add
add
cmp
jge
and
imul
out
xor
jmp
out
mov
mov
xchg
pop
add
into
fnstcw
js
jo
ljmp
dec
loop
xchg
and
incl
fisttps
fs
mov
imul
lock
outsb
mov
scas
bound
inc
add
sub
cld
lea
decl
adc
jle
mov
add
add
mov
fucomp
jecxz
cmp
xchg
cltd
test
push
mov
pusha
add
xchg
jns
push
add
or
add
cmpsb
add
add
je
xchg
fmull
sub
imul
mov
add
jecxz
dec
jo
push
mov
pop
jbe
adc
adc
jg
pop
push
sti
sbb
sub
decl
stc
or
add
or
add
jno
fdiv
jne
add
sti
jb
ljmp
insb
inc
add
aad
add
jb
call
out
mov
pop
pop
sbb
add
add
testl
cmp
ljmp
add
movb
add
add
push
add
add
cmp
ret
add
jo
lcall
pop
add
push
add
add
push
and
inc
add
pop
cli
movb
add
addb
iret
jb
call
mov
push
cmc
mov
fstps
ja
add
mov
add
add
decl
cwtl
add
ljmp
roll
call
incl
addl
rorl
imul
add
movb
pop
fnsave
lcall
and
ljmp
fimull
add
test
fmuls
adc
call
xlat
mov
jg
add
pushf
iret
xor
incl
jmp
add
fucomp
lock
cltd
xlat
pop
add
sbb
add
lahf
inc
add
test
dec
stos
xlat
addl
add
jle
add
cmpsb
add
add
neg
mov
lock
inc
add
mov
adc
repnz
mov
dec
push
mov
aaa
and
movb
add
pushl
jp
xor
test
mov
loopne
aas
test
jg
adc
test
add
jmp
add
lods
push
add
mov
and
lcall
pushl
add
add
hlt
jns
mov
add
inc
add
cmp
dec
clc
pop
mov
aad
mov
xlat
add
out
inc
add
jno
incl
incl
ror
xor
jmp
jno
dec
cld
lret
lods
dec
cmp
test
add
add
outsl
jns
aaa
das
je
add
sub
sub
xor
dec
aaa
jo
incl
inc
add
add
cmp
divl
jmp
add
mov
popf
mov
mov
insl
js
add
mov
cmp
add
ljmp
mov
sbb
add
mov
decl
add
push
pop
add
dec
arpl
call
inc
add
add
jmp
cli
xchg
fsts
add
jne
and
xor
call
sbb
add
lcall
sub
add
dec
push
add
and
call
dec
sbb
add
testb
push
push
add
pushf
ljmp
add
pop
loopne
shrb
shlb
pushl
xor
jmp
add
lcall
mov
mov
and
push
inc
add
pushl
aad
cmpsl
add
xchg
inc
add
ret
add
add
xchg
adc
std
mov
js
add
aas
cmc
xchg
push
add
xor
call
call
push
pop
jge
add
jnp
add
add
jmp
pushl
jg
add
or
add
add
and
call
call
add
shl
sub
call
pop
dec
mov
add
lcall
movb
add
mov
push
mov
movsl
add
ret
add
out
out
addl
push
add
roll
add
cltd
mov
add
daa
add
loop
inc
add
or
add
xor
incl
add
test
popf
pop
test
enter
mov
fs
adc
incl
popf
or
cmpsl
add
push
add
pop
out
mov
add
mov
loopne
sti
das
loop
sbb
add
add
and
ljmp
mov
and
jmp
mov
add
jno
incl
adc
ljmp
ret
add
add
mov
add
test
das
repnz
iret
push
mov
lahf
icebp
and
lcall
iret
fwait
push
or
add
and
call
push
das
pop
outsl
lds
mov
add
pop
pop
hlt
addb
add
xor
dec
and
call
add
lahf
xor
mov
xor
incl
lcall
call
add
mov
pop
add
push
add
lds
or
addb
add
and
ljmp
push
add
loope
and
jmp
jnp
sbb
add
xchg
outsl
addl
jmp
cs
add
dec
jecxz
stos
inc
add
push
xchg
pop
lret
and
decl
add
mov
icebp
popf
dec
out
bound
inc
add
add
movsb
add
sbb
push
nop
inc
add
cmp
add
mov
add
mov
jns
js
imul
adc
in
adc
sbb
mov
add
sub
addb
add
inc
add
add
bnd
rcr
data16
sete
int
fistl
data16
pop
cmpsl
add
add
movl
sub
stos
dec
jl
jbe
loop
xor
addl
inc
add
scas
push
add
pusha
add
ret
add
movl
lahf
fcoml
add
jmp
dec
cmpsb
add
ja
test
add
xchg
scas
pop
loope
pop
add
push
jl
add
add
stos
xchg
lock
int3
dec
pop
jmp
mov
daa
add
jp
or
sbb
add
dec
add
test
cmp
sbb
lock
add
out
or
jo
jle
add
scas
jg
sbb
pop
add
sti
inc
add
xchg
add
decl
add
fwait
lret
jmp
add
mov
bound
decl
add
fcom
push
push
xchg
in
push
add
xchg
sub
cmpsl
add
stos
adc
call
lcall
pushl
decl
jmp
add
loopne
mov
cmp
movsb
add
sbb
loop
sub
add
xchg
inc
add
add
adc
push
incl
jmp
or
pop
movl
movsl
add
cwtl
mov
mov
rcll
pushl
add
xor
pushl
adc
pusha
add
inc
add
add
movb
les
push
pushf
arpl
fsubl
add
roll
add
add
mov
dec
push
lcall
add
push
add
cli
dec
add
ljmp
add
add
add
mov
mov
add
jbe
inc
add
adc
incl
xor
aam
mov
xchg
xor
jmp
add
decl
push
mov
add
jmp
add
loope
cmp
add
pushl
decl
clc
movb
add
push
add
mov
jp
and
ljmp
add
dec
addl
test
mov
out
lret
inc
add
aam
movsl
add
aaa
and
mov
call
pop
pop
and
std
cmc
push
or
leave
inc
add
add
arpl
dec
addl
aad
inc
add
add
sub
add
mov
add
lret
cwtl
mov
add
ljmp
add
add
hlt
jecxz
rcll
stos
sub
inc
add
mov
in
lahf
aam
add
outsl
addb
add
xchg
enter
add
add
add
mov
mov
popa
add
cmpsl
add
add
push
sub
test
hlt
jmp
movsb
add
in
out
mov
mov
or
ret
add
sti
aad
adc
call
add
jo
inc
add
jnp
and
jmp
add
inc
add
mov
popa
add
mov
fcomip
out
test
sbb
loopne
pop
int3
repnz
jmp
jbe
enter
or
and
insb
mov
fstps
push
add
lahf
jmp
add
std
jb
incl
loopne
insb
dec
inc
add
dec
jge
movsl
add
lcall
add
lock
daa
add
add
xchg
ds
cld
clc
js
add
and
ljmp
jbe
int
into
push
clc
movsl
add
outsl
mov
add
popf
mov
add
outsl
pusha
add
cs
push
sub
into
sbb
fistpll
add
incl
add
lcall
jns
xchg
mov
add
incl
mov
std
mov
dec
inc
add
xchg
idivb
aam
add
inc
add
add
cltd
jae
js
add
push
cld
pop
ljmp
cwtl
fisubrs
add
iret
imul
add
cmp
add
mov
jo
incl
add
bound
lcall
dec
dec
push
aam
add
add
mov
add
dec
mov
pop
add
add
xchg
pushf
or
int3
add
add
add
in
test
out
jne
add
ret
push
add
mov
movsl
add
cltd
addb
pop
xchg
std
test
push
movb
add
add
out
mov
adc
pushl
push
pop
sbb
add
clc
cmp
push
imul
add
add
add
std
or
add
adc
lcall
movsl
add
add
lods
xchg
int
push
add
sub
add
inc
add
lods
lea
push
xchg
add
add
sahf
mov
jno
jmp
cmp
bt
adc
push
mov
add
ret
add
add
sub
scas
jae
jmp
add
jge
rep
add
int3
mov
sub
dec
sahf
jl
jle
pop
in
outsb
inc
add
mov
mov
add
or
add
add
ljmp
and
incl
add
push
icebp
add
add
sbb
iret
scas
xor
add
cmpsb
add
add
call
add
sub
add
adc
decl
sub
adc
push
in
pushf
outsl
call
adc
lcall
or
push
pop
add
fbstp
add
mov
add
add
cmp
add
fmulp
dec
roll
addb
add
lcall
add
inc
add
adc
decl
sbb
add
add
lods
addb
jmp
inc
add
mov
and
jmp
mov
add
ror
addb
add
int
adc
lcall
aam
xchg
sub
add
cmc
push
cmpsb
add
rolb
int3
inc
add
add
call
mov
add
xor
mov
lret
add
mov
pop
xor
jle
loope
sub
xchg
jmp
lds
pop
push
test
jo
call
dec
xor
call
sbb
add
or
add
xor
pushl
or
je
add
ljmp
fldt
pop
xchg
sub
add
add
add
add
inc
add
add
pop
add
mov
pop
adc
push
in
mov
inc
add
lcall
xchg
ret
add
add
hlt
xchg
imul
add
lods
xchg
sbb
movl
jns
js
lret
bound
lcall
dec
shrb
push
incl
arpl
cmp
pushf
scas
fcmovu
xor
mov
imul
dec
adc
int
mov
add
cli
sahf
mov
sub
add
sub
mov
stos
sti
sub
add
push
add
prefetchwt1
or
add
sti
add
ljmp
out
cmp
add
popa
add
xchg
push
push
add
inc
add
mov
inc
add
enter
cmp
dec
je
add
sti
dec
in
sahf
jmp
shlb
xor
pop
sub
add
test
push
mov
mov
repz
aaa
jnp
add
push
add
add
xor
dec
cmp
fs
dec
addb
add
and
mov
lds
sti
nop
test
mov
outsb
out
ss
ljmp
lcall
jg
mov
add
add
cmp
incl
mov
cwtl
data16
cs
add
mov
cmp
add
add
mov
add
xchg
fisttpll
jmp
cmp
incl
add
imul
add
mov
cmp
and
repz
data16
xor
dec
inc
add
mov
aas
loopne
push
add
mov
mov
add
add
incl
add
add
incl
fdivrl
push
add
push
sti
popa
add
sbb
pop
repnz
imul
inc
add
add
das
or
out
jo
decl
decb
mov
dec
outsb
lock
daa
add
loop
popf
pop
push
add
pop
sub
test
add
call
fistps
decl
add
jge
add
add
inc
add
scas
out
insl
in
stos
xchg
addl
add
sbb
lret
push
inc
add
or
decl
jne
lret
mov
mov
test
pop
dec
pop
cmc
ljmp
xchg
repz
jg
add
js
add
sahf
addl
addb
fwait
sbb
imul
pop
xchg
call
pop
add
push
cmpsl
add
xchg
mov
add
sbb
mov
add
add
adc
decl
mov
add
add
jb
lcall
daa
add
lods
xchg
xor
ljmp
roll
add
inc
add
leave
fnclex
add
lods
mov
add
inc
add
aaa
or
xor
jmp
add
add
add
push
add
data16
add
out
jmp
lock
and
jp
xor
jmp
add
adc
ljmp
mov
add
sub
roll
test
add
add
cli
and
cld
xchg
mov
cmp
stos
push
add
int
fwait
or
add
loope
or
jle
bound
incl
add
loop
adc
ljmp
mov
ljmp
jecxz
insl
stc
xchg
repz
popa
add
movsl
add
shl
add
jae
pushl
sub
pushf
iret
lcall
mov
add
cmp
testb
dec
cmp
sbb
je
add
push
iret
mov
cmpsb
add
dec
and
decl
addb
add
loope
dec
mov
ds
add
fldcw
fmuls
adc
clc
jl
jg
add
jmp
jp
xor
inc
add
jmp
test
push
add
add
pcmpeqd
cwtl
dec
mov
add
sub
jns
mov
add
or
leave
stos
cmp
rolb
add
lcall
add
dec
add
push
dec
mov
rclb
add
popf
fisttpl
scas
das
rolb
mov
add
add
pushl
dec
cmp
hlt
fmulp
cld
cmc
mov
add
cld
into
sbb
add
mov
mov
nop
popa
add
es
and
dec
bound
jmp
add
outsl
sub
add
insb
and
pop
iret
out
sbb
add
push
inc
add
pop
imul
cs
addl
ds
popf
ss
jmp
add
mov
test
or
imul
lcall
add
sbb
add
sti
mov
add
movb
add
fldl2e
add
pop
inc
add
inc
add
call
jo
decl
mov
pushl
add
sbb
add
xor
or
mov
inc
add
dec
xlat
out
pop
leave
and
incl
add
imul
add
mov
popa
add
or
fcmovb
add
jge
add
add
outsb
lods
mov
mov
in
rcr
ss
stc
lods
push
outsl
leave
cmpsb
add
add
pushl
and
decl
repz
jno
call
mov
jae
push
and
ljmp
add
cs
xchg
loop
mov
add
ljmp
inc
add
insb
xor
ljmp
leave
sbb
add
out
mov
cmp
add
inc
add
mov
decl
mov
icebp
stos
pop
and
aas
or
add
addl
cli
scas
push
lret
jmp
add
add
int
aaa
outsb
loop
or
xchg
or
daa
add
add
mov
pop
insl
shll
add
cmp
add
jmp
add
push
add
mov
insl
xor
movsb
add
jne
roll
cmpsl
add
add
add
insl
lods
mov
add
addl
push
add
lret
pushl
xchg
mov
cltd
std
mov
inc
add
add
movsb
add
add
insb
mov
fcomps
cmp
add
std
movsb
add
add
add
addl
xchg
sub
xchg
idivb
add
add
leave
jl
dec
ljmp
fisubrl
pusha
add
lock
js
fsub
add
push
add
stos
pusha
add
pusha
add
mov
add
mov
or
sub
cmp
mov
fstl
pop
and
add
add
dec
and
call
aas
imul
add
xchg
or
pop
fisttps
add
or
add
push
lock
mov
xchg
outsl
adc
incl
decl
push
add
pop
loopne
faddl
fwait
sub
sub
jmp
aad
add
iret
push
add
movb
lods
in
lock
and
incl
addb
aad
scas
lret
inc
add
pop
push
nop
out
mov
or
rcrb
mov
adc
jnp
add
movsl
add
movsl
add
ljmp
bound
call
cmc
add
add
add
xor
decl
pusha
add
adc
ljmp
pop
add
add
out
jno
call
cmpsl
add
dec
inc
add
stos
ficomps
into
jb
decl
jge
popa
add
test
cmp
add
rolb
add
push
test
add
xor
decl
add
add
jmp
add
add
add
add
mov
xor
pushl
add
adc
incl
dec
in
jnp
and
out
push
jecxz
pushf
testb
cmp
ljmp
mov
sub
fwait
pop
mov
mov
in
jmp
stc
in
dec
je
das
dec
sbb
outsb
cmp
jmp
fmull
push
sbb
add
pop
push
push
and
lcall
add
mov
popf
sahf
call
fisttpl
xor
incl
decl
test
inc
add
clc
cmp
xor
ljmp
push
iret
cmp
in
mov
add
add
xchg
jp
shl
add
add
add
add
sub
ljmp
cmp
sbb
mov
push
add
lret
dec
mov
dec
insb
jno
jmp
xor
incl
add
test
loop
pop
fnstcw
push
hlt
xor
ljmp
xchg
or
daa
add
cmp
add
mov
popf
cmp
add
add
clc
add
dec
movl
jae
ljmp
in
add
cmp
mov
mov
add
jge
add
sbb
xchg
mov
out
add
sbb
xchg
push
cmpsl
add
das
mov
pop
xchg
push
mov
add
pop
mov
nop
stos
mov
add
add
add
nop
cld
cmpsl
add
add
cs
inc
add
add
decl
xchg
arpl
ljmp
inc
add
rorb
mov
push
movb
add
jno
ljmp
scas
mov
pushl
adc
inc
add
add
mov
lods
sbb
aaa
pop
int3
ret
add
add
arpl
lcall
push
sti
mov
sbb
pushl
add
push
push
add
and
incl
add
fdivr
out
outsb
movl
add
dec
cwtl
arpl
cli
jl
or
and
sbb
aas
pop
jb
call
cld
int3
mov
xor
add
dec
xchg
mov
pop
xchg
scas
test
add
into
xlat
cs
pop
lahf
sub
movl
mov
push
xor
ljmp
mov
add
pushl
add
push
cmpsb
add
add
add
and
cmp
add
fdivl
popa
add
sbb
add
add
decl
jns
cmp
ret
add
out
lea
add
xchg
out
mov
idiv
movl
out
loope
cmp
push
add
mov
movl
add
and
call
test
faddl
call
cmp
call
add
movl
mov
pop
addl
dec
add
mov
xchg
cmp
pop
inc
add
test
jmp
add
decl
repz
add
test
or
in
or
jo
std
int
add
jne
push
dec
lods
movb
add
add
add
in
ficomps
add
bound
decl
add
lcall
push
xlat
push
add
addl
or
xchg
mov
cmp
add
mov
ret
add
lds
fbld
xchg
mov
xchg
enter
sub
ljmp
add
xchg
mov
add
sbb
mov
sti
test
clc
xchg
lds
repnz
mov
jbe
mov
addl
add
fwait
dec
inc
add
shl
add
negb
into
inc
add
add
pop
and
pop
xor
dec
fbld
pushl
fstps
addl
add
push
sbb
add
jno
incl
xchg
dec
cld
push
imul
mov
pop
pushf
cltd
fwait
jecxz
dec
adc
mov
add
std
test
add
or
pop
pop
push
add
add
test
mov
add
dec
repz
and
push
daa
add
mov
mull
jns
inc
add
xchg
sbb
and
decl
add
sbb
lcall
icebp
or
add
adc
add
ds
sbb
jmp
call
rolb
add
adc
movl
add
mov
in
rolb
pushf
pop
in
xchg
mov
add
addb
mov
ret
dec
addl
mov
aas
pop
fisubrl
jnp
pop
leave
push
lds
push
add
mov
aaa
arpl
ljmp
cmpsl
add
add
jge
enter
test
fnstcw
adc
call
incl
add
addl
ja
add
push
add
sti
sub
repz
movsb
add
mov
lea
add
xchg
cltd
addb
add
stos
push
add
cmpsb
add
add
leave
pop
push
add
arpl
incl
add
inc
add
movsb
add
add
sub
add
add
add
fmul
mov
cmc
cltd
mov
or
xchg
or
mov
add
sub
fimull
sbb
xor
lcall
dec
push
add
and
incl
add
test
shll
sbb
lcall
cmp
icebp
iret
jnp
mov
movl
add
cmpsl
add
pop
outsl
movl
aas
pusha
add
icebp
add
add
xor
pushl
addl
das
mov
sti
push
mov
in
punpckldq
jmp
add
sti
push
add
add
mov
add
xchg
loopne
add
mov
xchg
pop
mov
addb
add
inc
add
int3
push
xchg
pop
push
movl
adc
add
add
aam
jg
fists
incl
add
bound
decl
mov
addb
add
pop
out
dec
loope
cli
int
pop
mov
xor
ss
cld
mov
add
add
mov
dec
cmp
sbb
fwait
inc
add
addb
mov
add
pop
incb
ljmp
dec
insb
fldcw
cmp
incl
add
scas
dec
pusha
add
roll
push
cld
xor
call
movb
cmp
add
in
rolb
loop
xchg
mov
add
and
jg
cmp
daa
add
add
loop
pop
sbb
aas
lds
xchg
aam
add
add
fdivrs
out
repz
imul
add
add
pop
mov
dec
dec
sub
mov
jg
add
sub
decl
inc
add
cld
dec
scas
cmp
add
fldcw
mov
divl
and
push
in
les
cmc
xor
lcall
add
pushl
mov
mov
insb
rorl
push
add
xchg
test
cld
pop
pop
cmp
add
lods
daa
add
sbb
push
add
out
push
add
push
add
mov
lcall
loope
adc
inc
add
xor
ljmp
int
and
jmp
fisubrs
pop
xchg
or
lret
cmc
mov
add
fistpl
push
add
call
mov
sub
add
cmp
inc
add
ja
xchg
and
cmp
cmp
adc
ljmp
insl
xchg
pop
mov
jnp
scas
adc
cmp
add
in
push
add
out
shrl
mov
add
add
inc
add
add
lds
inc
add
mov
insl
fists
add
call
cmp
add
data16
in
fwait
mov
dec
push
out
mov
adc
addl
cmp
out
or
mov
mov
xor
jmp
add
aas
mov
add
mov
sbb
mov
jbe
fwait
add
add
mov
add
push
cmc
cmpsb
add
xlat
ljmp
ljmp
add
lods
loope
stos
cwtl
jne
dec
push
add
cmp
hlt
pushf
iret
mov
mov
add
lods
push
loop
lods
cmp
fldcw
int3
insb
ja
addb
lret
aad
jge
fisttps
add
flds
add
mov
add
pop
add
movsl
add
pushl
sar
mov
aas
sbb
sub
add
xchg
daa
add
add
pushl
decl
js
mulb
lea
mov
les
addl
jl
ja
add
adc
mov
add
mov
hlt
adc
incl
push
mov
decl
add
jns
iret
bound
ljmp
imul
shl
add
push
add
neg
popf
xchg
lea
mov
add
mov
inc
add
in
add
jmp
decl
stc
inc
add
in
rcrl
popl
add
xchg
cwtl
leave
sbb
pop
jno
add
test
add
dec
movb
xchg
cld
pop
jno
decl
ja
add
imul
ds
add
xchg
mov
sarl
add
jns
add
add
add
cld
sti
flds
out
int
add
ljmp
pop
sub
add
addb
add
hlt
inc
add
dec
jns
out
dec
fdivr
and
and
incl
jno
pushl
test
adc
cmp
add
sub
in
test
out
bound
jmp
incl
ljmp
jle
inc
add
sbb
mov
je
add
and
jmp
add
ret
add
repz
add
in
pop
push
xor
push
push
push
lahf
mov
aas
div
pop
mov
xchg
dec
mov
add
add
inc
add
inc
add
stos
aas
or
add
pop
outsb
mov
push
add
cmp
add
popf
shl
add
decl
add
jae
call
add
dec
inc
add
ljmp
add
or
add
sar
and
pushl
add
pusha
add
xchg
loope
loopne
push
add
pop
jge
lods
pop
sub
fldl
add
cmpsb
add
sub
add
sbb
decb
add
jnp
notl
add
divl
lds
adc
decl
cs
rorl
add
add
pushl
add
ret
add
out
push
mov
test
into
ret
add
xor
incl
add
arpl
jmp
incl
add
imul
add
add
movsb
add
add
icebp
mov
dec
test
jp
adc
ljmp
aaa
cli
repz
add
dec
push
insb
xchg
mov
or
decl
mov
rolb
push
xchg
mov
enter
add
fisubrl
bnd
incl
add
insl
inc
add
add
add
dec
and
pushl
add
add
mov
pop
mov
add
add
scas
add
add
movl
and
jg
add
in
sub
add
out
lds
and
and
decl
call
decl
sbb
push
mull
push
add
dec
xor
add
notb
adc
imul
rolb
test
cltd
pop
inc
add
push
int
add
in
outsl
add
add
mov
mov
iret
cmpsl
add
ret
add
incl
add
addl
imull
add
xlat
and
lcall
mov
jmp
add
fildl
dec
cmp
sbb
add
cmc
jmp
aaa
cmc
repnz
jge
pop
add
incl
add
incl
call
insb
jl
cmp
add
and
mov
test
jbe
mov
add
push
push
stc
les
test
idivb
add
fdivrl
jno
jmp
popf
cmpsb
add
add
stos
faddl
jnp
in
add
inc
add
pop
addr16
insl
jb
pushl
lcall
mov
xor
incl
add
scas
movb
push
mov
push
add
sub
xor
jmp
in
out
or
jne
add
add
or
mov
rolb
add
jne
test
movb
add
lods
popf
cltd
data16
add
cs
sub
mov
mov
enter
filds
add
aaa
cs
imul
cmp
cmc
int
jge
cli
sub
dec
pushf
mov
inc
add
mov
mov
add
into
enter
add
xor
ljmp
lods
xchg
leave
pop
mov
add
bound
lcall
popf
out
jmp
or
add
lock
call
call
jmp
add
add
cltd
xchg
outsb
clc
jno
cmp
lods
lock
add
loopne
inc
add
sahf
add
decl
call
mov
aas
mov
ljmp
add
add
jbe
add
xor
add
jecxz
lods
fimuls
jb
jg
add
sbb
cmc
addb
add
sub
jecxz
or
add
les
adc
mov
xchg
int3
jge
addl
js
add
cmc
jge
shrl
jl
add
cli
add
pop
mov
pushf
pop
das
jnp
add
jb
incl
in
cld
mov
add
xor
lock
jg
xor
push
je
arpl
incl
add
test
fstpl
clc
lods
aam
dec
add
ljmp
mov
ret
mov
out
cmp
call
add
fdivrl
sub
add
or
mov
mov
add
cmp
add
mov
rcll
pushl
lcall
data16
into
js
aas
pushf
clc
pop
nop
xchg
pop
insl
scas
addb
add
mov
imul
aas
xor
jmp
call
or
add
jp
add
jne
cs
mulb
add
mov
enter
call
adc
jmp
add
push
inc
add
and
jmp
add
add
addb
mov
jbe
cmpsb
add
add
sahf
bound
decl
mov
addr16
add
add
push
push
loop
pop
dec
jecxz
adc
add
cs
out
pop
xor
pushl
das
push
add
add
and
jmp
sbb
add
sbb
add
jge
push
add
lods
push
pop
hlt
mov
add
add
adc
lcall
fistps
jnp
add
mov
mov
add
addb
lods
cmp
mov
stos
repz
call
push
add
add
add
xchg
call
aas
je
add
adc
ljmp
aas
lock
xor
lcall
divb
jmp
lcall
mov
sbb
pop
mov
pusha
add
dec
xchg
inc
add
out
and
cmc
xor
ljmp
int3
dec
mov
add
inc
add
sub
add
sahf
mov
push
rorb
xchg
xor
out
pop
ret
add
jns
cmp
push
mov
add
incl
incl
call
call
add
out
rolb
test
nop
daa
add
add
adc
pushl
inc
add
incl
xchg
loop
rcrb
sub
add
dec
jmp
fcomi
push
mov
int
repz
outsb
dec
loop
je
xchg
xchg
push
add
addb
add
fsubr
jmp
test
jne
xchg
pop
sub
inc
add
iret
fists
add
aam
push
add
cmp
jne
add
cmp
les
or
add
add
add
pushl
cmp
pop
mov
add
adc
call
xor
cld
lahf
xlat
in
xchg
inc
add
jl
add
add
pushl
mov
decl
outsl
mov
xor
jmp
add
std
pop
cli
test
icebp
sbb
inc
add
add
jecxz
xchg
and
pop
ret
add
jge
mov
stos
add
pushl
leave
inc
add
add
adc
sti
test
mov
xor
call
pushf
negl
test
imul
push
cmp
cmp
add
incl
mov
call
add
xchg
icebp
pop
add
mov
add
std
mov
mov
or
nop
test
data16
lret
xor
jmp
lds
rorl
divb
ljmp
add
scas
fcomps
faddp
add
add
add
add
ret
push
js
mov
mov
sub
add
call
mov
lcall
add
push
mov
cs
and
pop
in
sub
add
add
call
jle
add
fcomps
insb
push
add
mov
dec
sub
negb
repnz
xchg
pop
test
add
clc
insb
adc
incl
in
xchg
aas
mov
movl
sub
insl
xchg
jmp
add
inc
add
cmp
in
xchg
cs
mov
sbb
jmp
add
or
dec
addl
mov
movl
cmp
add
inc
add
in
mov
cmp
add
push
add
pop
arpl
ljmp
sub
add
ret
add
add
dec
lahf
add
dec
inc
add
fildl
jae
dec
pop
popf
cwtl
add
inc
add
mov
mov
push
add
add
pop
and
decl
addr16
pusha
add
sub
call
push
add
aaa
outsb
jno
push
mov
incl
add
dec
adc
dec
fdivr
in
fildl
loope
jecxz
mov
add
decl
ss
ss
push
repnz
call
add
add
icebp
imulb
ret
mov
xchg
jge
add
push
add
mov
adc
push
cmp
fdiv
jnp
add
push
add
lods
jo
jmp
jns
add
call
add
sub
pop
dec
enter
add
or
cmp
xlat
jno
jmp
add
je
add
mov
cmp
add
add
add
and
mov
add
add
lock
ljmp
arpl
jmp
add
jmp
add
daa
add
stos
ljmp
dec
xchg
mov
test
cmpsl
add
push
add
mov
dec
and
incl
and
call
lcall
inc
add
addl
ret
xchg
jg
add
jne
add
out
pushf
cmp
addl
and
pushl
jmp
add
push
pop
cmpsb
add
jno
decl
adc
push
fcoms
ljmp
out
add
add
push
push
pop
in
notb
sahf
mov
add
add
decl
int3
inc
add
fstl
sub
adc
out
jns
add
cmpsb
add
les
aam
add
lahf
xchg
jp
sarb
out
cmp
add
cmp
ret
pop
add
push
shll
add
lods
push
push
mov
add
jmp
add
inc
add
push
sub
lahf
or
into
mov
add
add
cmp
call
call
add
daa
add
sahf
xchg
lahf
fisttps
dec
dec
mov
inc
add
xor
dec
data16
add
add
add
pop
mov
or
add
add
xlat
in
and
call
lcall
add
dec
movl
addl
test
pop
xor
inc
add
jge
add
addb
addb
jnp
mov
xchg
cmp
icebp
movsl
add
push
or
mov
mov
sub
pop
jle
add
mov
ret
add
test
scas
jnp
xor
fadd
add
mov
add
outsl
lret
fwait
call
outsb
roll
push
int3
pop
push
add
fisubrl
add
iret
pop
push
add
rolb
dec
psllw
imul
add
int
ror
jg
and
decl
leave
jo
lcall
add
data16
add
imul
mov
add
mov
add
bound
incl
mov
add
push
mov
cwtl
dec
lods
nop
roll
add
add
push
add
mov
push
ffreep
add
stc
sub
push
add
xchg
adc
push
ljmp
mov
add
cmp
inc
add
add
add
add
xchg
or
sbb
ja
or
mov
add
jmp
add
add
lods
outsl
xor
incl
add
mov
ja
add
xchg
mov
scas
jo
lcall
clc
lea
xchg
adc
jmp
add
pop
or
idivl
add
mov
test
bts
les
xor
decl
dec
lods
popf
xchg
add
mov
add
add
insl
sub
add
pushl
pop
add
add
add
jae
call
add
aam
stc
pop
mov
xchg
js
add
add
addl
aas
xchg
push
add
cmpsb
add
pushl
inc
add
ret
add
add
add
incl
mov
add
mov
cmc
cmc
inc
add
adc
jbe
add
inc
add
lcall
loope
sub
dec
mul
add
ljmp
stos
jp
push
out
lea
sahf
sbb
add
sub
add
repnz
add
add
cmp
fdivrp
fbstp
xchg
cwtl
bnd
add
addl
add
lret
dec
int
repnz
and
call
add
inc
add
add
lods
negb
je
add
addl
sub
add
ljmp
lock
cmp
add
popf
mov
add
fstpt
push
sbb
repz
sbb
add
data16
add
add
adc
decl
roll
add
movsb
add
call
ljmp
aas
popf
cmp
add
movl
lcall
lods
rolb
int
addl
push
add
cltd
or
ds
jecxz
jmp
add
in
mov
dec
movb
add
aas
xchg
aas
cmpsb
add
add
add
add
incl
add
adc
lcall
mov
addl
sbb
inc
add
daa
add
add
out
push
add
add
call
mov
push
aas
cmp
stos
fdiv
jle
add
add
outsb
add
add
stos
clc
push
out
add
cmp
dec
dec
xchg
loope
call
bound
lcall
fwait
jns
add
data16
pop
or
aam
dec
in
arpl
incl
incl
adc
call
pushl
add
call
add
cmp
or
xchg
into
xor
call
mov
add
jnp
mov
adc
pushl
jle
dec
scas
or
or
frstpm(287
add
add
add
fiadds
js
add
sbb
add
add
pushl
mov
add
adc
pushl
inc
add
bound
pushl
call
mov
addl
in
popa
add
cwtl
dec
popf
ret
add
ljmp
add
add
add
out
or
add
push
add
in
inc
add
cmp
lahf
xchg
push
jo
in
lds
mov
dec
scas
arpl
lcall
cwtl
dec
sti
bound
ljmp
cmp
clc
or
jne
add
add
adc
add
jle
pushf
mov
add
mov
decl
in
jo
call
aas
loop
sub
mov
ja
add
sub
cmp
add
call
mov
movl
ja
add
add
add
int3
jl
ret
add
lods
sub
and
incl
mov
add
outsb
mov
ljmp
cld
ret
add
push
js
add
fmull
aas
inc
add
mov
and
scas
and
popf
dec
mov
push
add
ret
add
aaa
xchg
mov
sbb
lock
stc
inc
add
in
xchg
stc
aas
test
je
pop
imul
decl
add
adc
jmp
into
cmpsl
add
cmp
add
arpl
in
mov
scas
daa
add
mov
call
mov
dec
lock
loope
std
in
add
ljmp
call
add
add
call
addl
adc
add
dec
jle
add
add
xchg
cmpsl
add
incl
xchg
mov
add
inc
add
jb
jmp
add
fldenv
incl
add
add
add
add
add
add
push
xchg
in
jecxz
lods
in
testb
lds
xchg
jae
call
test
fisubrs
bound
cli
xor
add
xchg
or
add
add
add
inc
add
push
add
mov
add
sub
add
or
incl
add
lahf
ror
mov
roll
jae
pushl
add
cmp
mov
out
aas
outsb
out
imul
fistpll
arpl
pushl
mov
add
inc
add
add
xor
call
outsl
mov
mov
push
add
lcall
inc
add
adc
lcall
fwait
or
cmpsb
add
add
mov
scas
das
movsl
add
inc
add
out
mov
mov
add
decl
adc
ljmp
inc
add
dec
mov
add
jp
out
mov
push
add
in
repz
lret
nop
and
call
add
leave
js
cmp
popf
mov
add
mov
mov
xchg
call
lods
push
add
mov
pop
adc
decl
mov
in
mov
add
add
add
jg
or
xchg
loopne
sti
movl
add
pushl
add
mov
shl
add
mov
sbb
data16
add
add
stos
sbb
ds
cmc
xor
jmp
add
cltd
xor
ljmp
add
add
aad
in
addl
pop
inc
add
pop
dec
ret
add
lret
mov
add
arpl
push
mov
add
add
and
flds
push
sub
adc
ja
add
movsb
add
add
push
add
add
das
hlt
addb
jg
add
das
adc
incl
out
mov
loopne
sub
fstpt
dec
test
pop
dec
pop
arpl
call
jno
lcall
movl
jecxz
frstor
add
dec
clc
adc
aaa
ja
add
mov
sbb
add
lcall
and
fildll
inc
add
addb
jg
mov
xchg
pop
mov
add
dec
movsb
add
cmp
fwait
ds
adc
pushl
add
lods
repz
xchg
pop
jno
call
ljmp
inc
add
nop
xchg
stc
add
ljmp
mov
add
fdivs
add
test
test
adc
scas
mov
push
pusha
add
test
add
xor
imul
mov
add
mov
xor
jmp
add
ljmp
das
push
stos
sbb
adc
into
lret
fsubr
jmp
push
hlt
jle
fdivrs
outsl
leave
icebp
cmp
stc
push
in
out
stos
sarb
inc
add
dec
fldl
mov
push
stos
pop
xor
inc
add
add
add
pop
mov
add
add
loop
addb
add
pop
sahf
and
sub
and
pushf
scas
in
repz
add
inc
add
pushl
fildll
add
sub
decl
jbe
add
add
add
je
int3
cmpsl
add
pushl
mov
mov
dec
and
jmp
add
add
push
dec
mov
add
add
add
in
mov
cmpsb
add
sub
add
cmp
std
ficoml
pushl
jl
add
lea
add
jp
xor
pushl
add
dec
mov
add
sub
push
add
ljmp
pop
lahf
jle
pop
les
cmp
icebp
mov
test
dec
xchg
arpl
lcall
fstp
lahf
push
add
in
popa
add
cld
adc
ljmp
xchg
lods
lret
add
rcrl
not
lds
test
xor
lcall
add
jne
mov
out
or
add
jmp
add
pusha
add
xor
incl
aaa
mov
add
loope
add
mov
adc
jp
daa
add
add
lcall
pushl
add
jmp
mov
fsubrp
mov
arpl
call
push
add
pop
add
pushl
lret
inc
add
add
aad
xor
xchg
add
in
sub
add
int
mov
add
pop
add
xor
adc
call
int
fprem1
push
add
outsb
ret
add
xchg
cmp
nop
add
call
imul
jmp
add
dec
jmp
mov
aaa
mov
add
xor
decl
or
xor
pushl
xor
call
cmpsb
add
jb
jmp
add
add
incl
sub
add
add
ds
mov
add
sbb
add
inc
add
fsubrs
mov
add
cmc
push
into
cmpsl
add
add
out
inc
add
dec
mov
add
mov
xor
incl
pop
xor
decl
fwait
les
mov
lea
mov
lret
pop
int3
cmp
cmp
add
test
aaa
cmp
movntq
outsb
sbb
add
in
addl
push
ljmp
inc
add
xor
inc
add
adc
addl
cmp
add
roll
add
shrb
add
inc
add
pop
push
fbld
decl
add
cmp
dec
mov
add
out
pop
add
call
lcall
add
mov
fisubrs
add
add
repz
add
and
xchg
pop
pop
in
inc
add
inc
add
add
fcmovnbe
pusha
add
and
incl
add
test
dec
out
xchg
inc
add
rolb
pop
add
call
xor
jmp
add
into
sahf
jecxz
dec
lods
bound
call
add
std
or
mov
sti
xchg
dec
push
add
test
adc
add
jno
lcall
shlb
inc
add
movsb
add
ljmp
cmp
ret
add
add
cli
rclb
xor
jmp
decl
call
jmp
add
mov
cmpsb
add
mov
add
leave
cltd
fucomi
movb
lock
push
mov
fmull
scas
xlat
sbb
mov
ljmp
pushl
movl
je
add
add
add
add
ljmp
mov
xchg
jns
leave
in
dec
xor
jmp
push
push
add
dec
add
jmp
add
ret
add
cmp
pop
add
lcall
add
add
add
add
jae
call
cmp
lret
shl
sahf
xor
push
pop
jmp
dec
mov
add
mov
add
mov
pushl
mov
pop
sub
jmp
pop
pop
das
mov
adc
add
add
mulb
ret
add
test
and
dec
mov
jmp
xchg
sbb
sub
icebp
lret
or
adc
lcall
mov
ret
add
add
movsb
add
add
lods
add
add
rclb
mov
incl
add
mov
nop
jge
add
or
push
add
mov
add
mov
or
add
push
dec
test
icebp
in
mov
push
add
mov
add
addr16
add
pushl
dec
addb
dec
lods
ror
and
ljmp
pop
fimull
and
inc
add
add
jp
add
push
add
cmp
out
rol
add
inc
add
cli
and
lcall
lods
lret
popa
add
or
test
add
iret
int3
push
lock
xchg
mov
add
lahf
cmp
insb
push
sub
xchg
iret
xchg
mov
out
jae
call
nop
or
add
aaa
in
enter
adc
dec
or
mov
add
bound
call
jnp
jle
je
adc
call
call
add
call
sub
inc
add
push
repnz
ss
jl
adc
test
arpl
ljmp
mov
add
in
dec
aas
push
add
dec
sub
divb
mov
data16
inc
add
add
sbb
jbe
cmp
add
ja
push
cmp
dec
movsb
add
clc
sbb
add
mov
adc
mov
cld
dec
mov
add
xchg
pop
aad
add
fiaddl
pushl
idivb
fisubs
cmc
dec
cmp
mov
cmp
push
add
or
pop
pop
sub
add
push
ss
add
fwait
testb
in
mov
xchg
or
jo
dec
xor
fldcw
add
add
outsb
cwtl
mov
movl
out
mov
pushl
inc
add
mov
jmp
and
inc
add
mov
ss
push
out
cs
dec
pop
mov
mov
dec
push
jne
add
push
add
adc
ljmp
jl
adc
pushl
lcall
aaa
loope
dec
dec
in
inc
add
cmp
pop
lea
add
lcall
sub
in
inc
add
lcall
popa
add
sbb
fisttpll
repnz
pop
mov
add
add
add
add
call
js
ret
add
dec
int3
push
mov
out
aaa
sti
push
add
out
mov
or
test
add
push
add
add
rorl
stc
arpl
call
rolb
xor
jmp
add
cmpsb
add
data16
fcoms
add
daa
add
pop
fwait
mov
add
mov
add
push
mov
incl
add
dec
clc
mov
add
push
sti
in
dec
or
add
clc
dec
mov
in
adc
loop
fwait
lret
lret
sub
dec
nop
scas
add
jne
addb
add
scas
test
fcomi
addl
sub
mov
xchg
jl
hlt
xor
out
movsl
add
cmpsl
add
mov
fdiv
test
scas
jo
clc
or
gs
cld
jge
push
decl
sti
int
test
call
add
add
lcall
pop
loope
push
mov
hlt
leave
push
inc
add
add
imul
aad
add
add
rcrb
sub
aad
pop
icebp
pop
dec
mov
add
add
cmp
add
mov
dec
icebp
cs
push
dec
or
add
add
add
sbb
mov
clc
cmpsl
add
into
push
add
lahf
movsb
add
insb
sbb
and
mov
add
push
add
inc
add
lods
leave
adc
jp
pop
addb
add
pusha
add
push
add
jl
jecxz
outsb
scas
push
add
add
shrb
add
add
adc
incl
call
incl
add
add
incl
push
rolb
sahf
daa
add
inc
add
xchg
cmpsb
add
sub
push
push
add
aad
add
loope
sahf
mov
into
and
call
call
add
movl
jl
add
lahf
addl
inc
add
add
aaa
or
pop
faddp
add
mov
test
xchg
stc
cmpsl
add
jge
mov
roll
add
leave
in
cltd
int
adc
mov
add
jg
add
stos
fcompl
inc
add
lcall
std
dec
xor
rcrb
aaa
dec
xor
ljmp
out
mov
mov
imul
add
test
add
hlt
or
mull
stc
pop
jle
cmp
add
out
or
incl
fwait
dec
and
mov
jl
cmp
decl
mov
xor
pushl
add
add
xor
ljmp
call
push
add
pop
dec
and
call
add
addb
enter
dec
or
mov
movsb
add
xchg
push
add
add
add
mov
xchg
sbb
pop
xchg
cmp
add
add
or
loopne
leave
scas
fbstp
add
mov
add
jno
lcall
sub
lret
add
add
cltd
add
add
push
sti
enter
push
insb
push
mov
stos
pop
sahf
xchg
sbb
add
add
decl
cmc
fnstcw
ljmp
mov
pop
cmpsb
add
add
shr
push
add
add
or
add
push
das
aam
mov
add
add
mov
pushl
jmp
test
ljmp
jp
add
leave
jno
cli
lret
fisubs
lcall
xchg
inc
add
pop
into
xor
lcall
add
decl
aam
add
testb
mov
mov
add
jmp
decl
push
mov
add
jmp
add
cmc
mov
dec
dec
insl
mov
cli
js
xchg
outsb
xlat
and
fistps
mov
loopne
xor
sti
in
into
jl
add
insl
leave
xor
add
push
add
jmp
add
add
push
daa
add
add
sub
add
add
imul
lcall
ja
pusha
add
sub
roll
pop
scas
mov
cmp
popa
add
testb
jmp
mov
mov
add
xor
pushl
sbb
mov
push
add
filds
fidivs
incl
add
dec
add
push
jp
and
test
sbb
jb
inc
add
jge
stos
mov
xor
mov
pushf
cmp
add
add
dec
nop
movsb
add
add
jle
and
incl
sbb
xchg
loopne
lock
add
pop
nop
or
adc
mov
lahf
add
std
xchg
rolb
add
popa
add
add
fnstsw
mov
fcoml
cwtl
mov
in
sbb
mov
xchg
daa
add
add
add
fadds
shll
lcall
add
cwtl
mov
call
shlb
lret
inc
add
sti
inc
add
add
xchg
jnp
add
and
lcall
addb
add
in
push
imul
int3
push
or
add
mov
and
aad
add
add
add
add
and
dec
jg
mov
jbe
inc
add
insb
inc
add
pop
iret
mov
aaa
inc
add
jmp
add
cld
adc
add
mov
add
and
jecxz
pop
adc
add
inc
add
call
xor
push
lahf
mov
add
push
imul
movb
xchg
fwait
and
xchg
movsl
add
mov
mov
add
lock
xor
push
jp
stc
xchg
dec
pop
jle
add
add
aaa
mov
jae
incl
add
nop
repnz
pop
lret
pop
inc
add
add
jmp
add
sbb
decl
sti
and
jmp
add
mov
clc
aas
mov
add
addl
add
mov
add
aaa
lds
enter
iret
xchg
xchg
scas
addb
lcall
add
fistl
daa
add
cmp
adc
cli
imul
mov
add
adc
incl
add
mov
pushl
jl
add
sub
sub
adc
decl
hlt
add
and
out
imul
outsl
daa
add
add
mov
jle
pop
testl
fsubs
lcall
add
add
jmp
add
mov
jns
mov
add
ljmp
fisubs
icebp
inc
add
jmp
xchg
je
push
add
sbb
mov
xor
jmp
decl
repz
mov
pushl
dec
int3
addb
popa
add
cs
mov
add
add
pop
xor
push
mov
xor
lcall
stos
push
test
push
jle
add
pop
cld
outsl
cmpsb
add
add
call
pushl
add
or
cli
jno
lcall
jno
clc
popf
and
jmp
xchg
dec
into
cmp
mov
mov
pop
cmpsb
add
lcall
cmp
jb
pushl
lcall
add
rolb
add
push
add
mov
sbb
pop
jmp
popf
xchg
jns
inc
add
hlt
xor
decl
or
movl
mov
jp
add
xchg
xor
aaa
pop
movsb
add
push
cs
add
push
add
iret
lahf
jbe
or
add
sbb
lods
aam
add
data16
add
jmp
iret
xor
incl
in
dec
insl
pop
ret
add
mov
add
aas
xchg
xor
fbstp
les
fmulp
pop
xchg
cmp
outsb
aam
add
fldt
jp
fadds
add
out
add
cld
in
imulb
sbb
mov
rclb
lret
or
ficomps
cltd
loope
stos
inc
add
push
shl
popa
add
aaa
mov
dec
outsl
aam
adc
jmp
cmpsb
add
ljmp
xchg
sarb
xor
cltd
lods
in
push
add
addl
add
ljmp
xor
lcall
into
xor
add
aad
add
fildl
lcall
lock
fisubs
call
dec
mov
add
ja
dec
push
fnstsw
add
xchg
and
clc
xor
decl
pop
mov
arpl
js
mov
cld
inc
add
add
incl
jmp
add
add
add
pop
add
dec
xchg
mov
add
add
add
mov
jg
sbb
incb
add
push
adc
loop
scas
lock
addl
bound
ljmp
jle
mov
jo
ljmp
data16
cltd
jp
add
mov
in
lds
rolb
xor
call
dec
lcall
out
test
jbe
xchg
pop
cmp
cmp
sbb
jmp
push
lds
cmpsb
add
pop
mov
rolb
jle
jnp
adc
mov
add
mov
add
add
roll
adc
js
jnp
push
add
ljmp
stos
jne
dec
call
nop
jae
add
mov
add
add
decl
test
xchg
mov
add
inc
add
mov
add
pusha
add
push
add
data16
aas
and
mov
js
add
sub
sbb
pushf
pop
mov
xchg
xor
pushl
mov
xor
decl
test
mov
sbb
incl
ljmp
sti
rcrl
add
add
hlt
xchg
iret
add
add
in
data16
rolb
add
sbb
add
mov
add
mov
rsqrtps
mov
in
mov
xlat
sbb
ljmp
dec
jne
nop
popa
add
or
pop
cmpsl
add
pop
dec
stos
sahf
mov
aas
ljmp
add
mov
add
add
xor
decl
add
add
and
jge
add
lods
pushf
inc
add
cltd
and
out
mov
or
add
inc
add
cld
insl
sub
out
add
xor
call
pushl
test
add
add
inc
add
push
dec
ds
mov
adc
add
cld
push
add
mov
out
inc
add
add
xor
add
add
cmove
xchg
fwait
shll
add
add
lcall
adc
jmp
call
ret
dec
xchg
push
idivb
repnz
jmp
sub
outsb
int
add
movsb
add
and
aas
fs
inc
add
loopne
sbb
ficoms
add
push
fsubr
cmpsl
add
adc
call
inc
add
les
lea
add
ljmp
imul
pop
jno
push
add
add
sub
call
movl
pushl
stos
sbb
add
cmove
lcall
add
add
cmp
push
add
mov
add
das
movl
push
data16
add
add
outsl
add
mov
fistl
std
and
mov
fiadds
add
mov
sub
add
add
add
add
incl
add
dec
jbe
mov
jnp
xchg
inc
add
lret
fistpll
cmp
add
add
imul
add
dec
in
incb
add
mov
mov
call
pushl
incl
xchg
adc
add
add
add
add
push
mov
jle
add
mov
add
gs
pop
fnsave
add
sbb
add
add
sahf
ja
xor
ljmp
add
enter
sbb
xlat
jnp
imul
add
jecxz
push
cld
leave
add
fidivs
ljmp
xor
inc
add
add
fldt
pop
jb
ljmp
out
pop
enter
roll
dec
leave
sbb
and
mov
sub
outsb
jo
ljmp
xchg
cwtl
sub
add
xchg
adc
popa
add
pop
push
jns
xchg
add
mov
add
aam
add
inc
add
dec
fdivr
or
aaa
aam
ficoms
add
pushf
push
cmpsb
add
incl
mov
pop
data16
ja
add
loop
cmc
push
repz
sbb
mov
pop
out
loope
push
fisubs
add
and
sbb
int
xchg
cwtl
sbb
add
add
fistl
xchg
push
mov
add
add
jmp
add
outsb
clc
cld
int3
std
xlat
pop
cmovb
incl
inc
add
add
sub
int
dec
xchg
xlat
loopne
add
dec
addl
dec
adc
inc
add
les
ret
add
xacquire
std
cltd
add
les
inc
add
data16
incl
add
insl
ljmp
add
cmp
xor
pushl
call
rclb
mov
add
mov
mov
icebp
or
call
add
adc
and
call
test
xor
pushl
add
pop
int
add
incl
push
sbb
int3
outsb
adc
in
inc
add
mov
repz
mov
cmp
negb
xchg
insb
xchg
dec
test
and
xchg
cmp
pop
cwtl
cmp
add
in
xchg
dec
rolb
mov
cld
add
jmp
ljmp
adc
pushl
mov
out
pop
repz
sub
add
loope
mov
idivb
mov
fcomps
sbb
cmp
mov
add
lcall
shll
call
leave
xchg
test
add
add
or
add
fcomip
addl
or
pushl
mov
jb
cmp
add
cmp
decl
mov
addb
add
xchg
sbb
lcall
push
add
ljmp
call
ljmp
rolb
scas
in
pop
add
aaa
lods
inc
add
ds
pop
cld
movsl
add
add
ljmp
add
test
add
push
mov
pop
mov
iret
imul
add
add
sbb
in
repz
add
into
mov
js
mov
std
out
fmul
aam
movl
add
add
mov
decl
iret
cmpsl
add
add
cmp
ljmp
push
add
jecxz
rolb
add
add
mov
mov
lret
daa
add
loopne
pushf
push
push
xor
xchg
push
test
push
lcall
lcall
mov
in
mov
stos
clc
sub
add
dec
xlat
add
cli
sub
add
push
add
in
mov
add
iret
xor
jmp
add
into
pop
add
pushf
push
pop
xchg
dec
call
add
add
call
or
mov
leave
bnd
jl
push
leave
xor
jmp
add
addl
sbb
jb
pushl
dec
adc
mov
xor
pushl
lcall
bound
dec
repnz
pop
addb
inc
add
mov
aaa
mov
jns
jb
ljmp
cmp
add
inc
add
out
mov
sbb
mov
add
inc
add
xchg
pop
mov
out
aad
add
add
add
add
and
incl
add
sub
mov
add
inc
add
sar
pop
cmp
add
push
push
out
pop
cld
or
add
incl
add
and
pop
je
add
aas
cmp
in
mov
sub
push
dec
xor
insb
pop
inc
add
add
jmp
mov
fisubs
ret
add
add
or
add
mov
add
push
and
add
mov
add
inc
add
in
sbb
incl
add
test
push
add
rep
jo
decl
test
outsb
cmpsl
add
and
clc
or
fstl
bound
lcall
ja
add
jo
jmp
incl
stc
and
jmp
add
sbb
xchg
aaa
pop
sbb
push
add
xchg
mov
test
xchg
pop
push
add
rolb
push
add
setno
test
push
sbb
add
enter
and
ljmp
add
jb
pushl
pop
push
add
shl
pop
add
or
and
pushl
incl
add
cmp
enter
call
es
mov
divps
add
rcll
outsb
loope
pop
xor
push
sub
lcall
addr16
add
fisttpl
sbb
add
mov
lcall
add
movl
add
cmp
cltd
xchg
pop
or
je
jbe
and
ljmp
inc
add
imul
test
add
lcall
add
mov
in
mov
add
mov
jecxz
sub
movsb
add
repnz
inc
add
xor
incl
into
sub
add
insl
inc
add
xchg
jae
decl
add
sbb
add
cmc
inc
add
jmp
into
in
xor
decl
ret
add
outsl
sub
lcall
scas
test
add
jo
ljmp
inc
add
int
pop
inc
add
cmpsl
add
jmp
fidivs
cmp
mov
push
add
adc
call
add
out
push
xor
ljmp
add
dec
push
add
add
push
inc
add
add
add
fwait
or
cmp
cld
xor
adc
call
xlat
mov
add
pushl
data16
inc
add
pop
in
ds
adc
jno
fucomip
pop
data16
add
stc
dec
addb
or
lds
or
push
addl
add
loope
sub
loope
les
add
mov
mov
movb
add
dec
dec
inc
add
outsb
cmp
fsts
jecxz
pop
aas
outsb
xchg
cli
or
add
in
push
jl
add
add
xlat
and
jmp
cmp
sub
jno
call
add
mov
add
push
push
add
cmp
jp
dec
mov
cmpsb
add
jno
decl
add
add
add
ljmp
ficompl
xchg
iret
cld
es
out
cli
add
lcall
loopne
mov
cld
jmp
add
mov
fiadds
ljmp
mov
cli
add
and
call
lods
xor
add
roll
add
add
add
and
call
jg
pop
fisttpll
jo
decl
push
add
aad
in
roll
add
iret
and
lcall
dec
push
mov
js
out
aas
adc
ljmp
movsb
add
jmp
icebp
sub
add
fnstenv
dec
movb
add
decl
add
add
incl
lcall
add
mov
add
arpl
jg
add
add
mov
imul
add
add
decl
cltd
test
frstor
add
jmp
roll
add
ficoml
mov
add
int3
ss
dec
icebp
loope
mov
add
pop
or
decl
pop
fildl
add
add
pushl
add
adc
ljmp
add
aam
inc
add
add
dec
adc
mov
cltd
repz
push
add
mov
add
add
add
repnz
add
iret
and
add
das
cmp
pop
and
lcall
add
and
lcall
and
inc
add
add
mov
popa
add
dec
je
add
add
push
add
cmp
cmc
repnz
incl
lcall
in
xchg
fsubrp
jb
call
lcall
add
cmp
test
push
mov
fwait
adc
jmp
loopne
shll
add
add
outsb
cltd
inc
add
add
cmp
dec
jns
add
adc
add
add
cmp
mov
add
pop
cmpsb
add
add
add
add
add
jg
xor
pushl
sbb
movnti
test
xchg
addl
add
mov
pop
push
add
rolb
push
jecxz
inc
add
xor
ljmp
mov
add
add
pop
popf
and
jmp
cwtl
jle
inc
add
enter
in
repz
add
lcall
leave
fisttpll
add
call
sub
add
cld
addb
push
lock
add
lcall
pop
jp
add
jmp
dec
out
popf
pop
outsl
sbb
incl
scas
into
add
rcr
xor
aad
aam
pop
add
add
sbb
mov
add
shll
icebp
cmc
or
xchg
out
sub
lods
scas
test
dec
lret
push
lea
add
popa
add
xchg
out
in
inc
add
fwait
ja
add
push
fld
add
lcall
xchg
popa
add
out
jb
call
ljmp
lcall
scas
es
lods
xor
call
outsl
jmp
xchg
lods
lcall
lock
or
add
jle
movl
add
push
add
xor
or
add
mov
fisubl
add
jb
incl
add
or
add
xor
inc
add
add
movl
inc
add
lcall
into
adc
call
decl
inc
add
push
add
and
mov
mov
jo
lcall
dec
pop
push
add
and
add
add
add
repnz
mov
lds
cmp
mov
dec
addl
add
add
pop
add
inc
add
add
add
mov
add
push
lods
mov
test
push
pop
mov
jne
loop
notb
lahf
addl
insl
mov
jae
pushl
ds
mov
add
mov
inc
add
dec
adc
mov
add
cs
xchg
pop
repnz
out
or
lods
cwtl
addb
add
jp
hlt
jp
sti
lds
lds
sti
aad
add
or
add
add
sbb
add
aas
lock
push
add
push
les
inc
add
mov
or
rolb
decl
daa
add
jecxz
pop
add
imul
add
nop
arpl
pushl
sbb
cmp
scas
stc
fcmovbe
push
add
mov
int3
cmp
jnp
jns
xor
call
ljmp
add
add
decl
sbb
add
cmpsl
add
xor
call
add
lret
fisttpl
adc
pop
adc
int3
aaa
mov
insb
dec
loop
aam
mov
adc
pusha
add
fstl
sbb
add
add
add
xlat
lcall
add
add
cmc
jae
jmp
add
add
jp
les
and
stos
out
ret
add
call
add
ljmp
jmp
movb
popf
sbb
push
out
jle
stos
test
mov
ret
xor
jmp
in
inc
add
sbb
outsb
xchg
fisubs
lods
shl
add
sub
stos
jne
movl
xlat
and
jmp
test
pop
jns
add
addb
iret
lock
xor
incl
and
push
push
xchg
pusha
add
dec
leave
push
add
ss
cmp
decl
rcl
ss
xor
call
and
jmp
add
int3
adc
pushl
add
add
in
iret
jbe
pop
stos
cwtl
rolb
add
lcall
ret
add
call
pushl
push
and
cld
data16
clc
cmp
dec
pushf
xor
incl
sbb
add
add
and
jmp
addl
repz
flds
add
pop
insb
aam
add
je
testl
pop
jbe
jo
decl
stos
out
addb
jl
add
xchg
mov
out
inc
add
pop
mov
repz
pushl
call
roll
add
or
fldt
add
mov
in
xchg
dec
mov
sub
inc
add
push
inc
add
jbe
shrl
add
aaa
or
fnstcw
push
add
add
add
fidivrl
cmp
pop
jp
sub
add
int
xchg
imul
jge
xchg
lret
xor
jmp
add
add
add
or
outsb
add
ljmp
aad
iret
cmp
dec
arpl
pushl
lcall
test
fcom
loop
add
incl
add
mov
jge
jno
call
cld
add
fnstenv
mov
add
mov
jmp
pusha
add
sub
add
addl
jecxz
das
ljmp
aas
adc
fst
jmp
add
pop
add
rolb
push
pop
push
add
jae
jmp
add
xlat
idivl
or
lcall
test
stos
or
int3
bound
pushl
test
cmp
add
push
add
add
add
dec
ret
insb
int
ret
addl
sbb
and
out
jbe
jmp
cmp
mov
movb
add
rolb
ja
mov
leave
xor
push
inc
add
jmp
push
lcall
fwait
ret
addl
add
addb
adc
decl
pusha
add
rcr
out
dec
repnz
decl
pop
add
cmp
int3
cld
pop
xor
out
push
jo
jle
add
inc
add
add
add
pushl
jnp
sahf
dec
mov
bound
fidivrs
ja
add
or
aas
adc
add
pop
outsl
jo
incl
jge
add
add
ret
add
and
push
js
ljmp
add
jo
jmp
add
cmp
pop
pop
push
pop
fdivp
jmp
or
repz
xchg
cmp
dec
mov
push
gs
add
pop
mov
add
jno
call
mov
and
ljmp
icebp
xchg
fiaddl
scas
jns
xchg
stos
leave
sahf
stos
mov
xchg
adc
add
adc
inc
add
add
add
add
add
cld
sub
add
inc
add
jmp
add
add
dec
xchg
jl
repz
mov
dec
jmp
add
lret
jle
add
cmp
add
and
mov
ljmp
in
jno
inc
add
add
outsb
in
dec
pop
mov
scas
addb
add
scas
clc
pop
add
roll
xor
add
outsl
cs
notl
lcall
inc
add
stc
cmp
sbb
add
mov
add
add
mov
addl
add
ljmp
xor
mov
sub
addb
add
inc
add
adc
dec
lods
sub
psubusb
test
cmp
add
aad
add
jns
cmp
or
roll
in
sbb
lods
cwtl
aad
mov
add
mov
add
add
add
jmp
add
outsb
int3
mov
add
decl
add
outsb
push
add
aad
add
push
add
mov
jmp
or
call
xor
sub
pop
cmp
scas
mov
mov
mov
add
pushl
add
add
cwtl
xor
call
add
incl
addb
out
cmc
xchg
xchg
loopne
sub
push
add
add
add
mov
bound
call
mov
add
movsl
add
mov
add
repnz
imul
call
cld
out
adc
lcall
add
sbb
inc
add
and
dec
repnz
arpl
jmp
sub
jnp
sbb
add
add
sub
loop
call
add
add
jmp
dec
mov
add
mov
movsl
add
add
loopne
jecxz
mov
add
xor
inc
add
mov
daa
add
icebp
mov
add
sbb
clc
xchg
test
push
add
ret
scas
xchg
add
test
push
add
mov
in
loop
test
xchg
push
adc
push
adc
sahf
cmp
mov
add
mov
add
std
insb
push
mov
jge
out
pop
jnp
arpl
mov
dec
xchg
notl
push
add
dec
xor
incl
incl
out
repz
incl
xor
add
cmp
add
cmp
sub
add
int
add
idivl
cmc
fdivr
imul
fimuls
add
inc
add
add
add
leave
out
mov
in
aas
jl
add
mov
add
pop
xlat
movsl
add
mov
mov
pop
and
jmp
add
jle
lahf
xor
mov
add
pop
outsl
xchg
xor
incl
add
add
mov
add
sbb
xchg
pop
movsb
add
sti
adc
decl
adc
pushl
sbb
push
cltd
pop
jb
mov
je
push
add
pop
add
add
aam
add
add
add
add
mov
rcrb
popf
cmp
mov
scas
cltd
mov
dec
mov
jns
sub
sub
ljmp
roll
add
lds
pop
mov
add
dec
addb
pop
stc
xchg
fisttpll
ss
jno
decl
add
inc
add
sub
outsb
lock
inc
add
jmp
rolb
add
addl
push
inc
add
mov
scas
push
add
xchg
je
fnstenv
xchg
jle
add
insl
and
mov
and
incl
aam
call
jmp
add
inc
add
inc
add
mov
idivl
push
add
rcrb
sbb
add
cld
inc
add
incl
xor
decl
dec
mov
loop
dec
xchg
imul
xchg
lcall
loopne
data16
add
add
add
mov
add
mov
mov
pusha
add
pushf
mov
push
pushl
pop
loopne
add
rcl
imul
add
add
xchg
in
inc
add
jmp
xchg
movl
xchg
push
add
add
add
icebp
pop
add
add
int
add
test
mov
cli
sub
mov
sbb
sbb
add
add
mov
addb
sub
push
add
decl
lcall
lret
bound
in
scas
sub
mov
push
inc
add
mov
add
add
pushf
sub
pusha
add
jno
mov
jno
pushl
jge
jl
je
add
popf
fidivs
add
add
cltd
and
pop
push
add
and
incl
add
scas
mov
jg
fnstsw
fstpt
mov
add
sub
or
add
test
add
stos
mov
add
push
add
jno
jmp
stc
xor
lahf
and
jmp
bound
call
add
push
add
mov
pop
adc
fxch
mov
aas
push
add
stos
mov
cmp
jmp
idivl
add
add
mov
ret
data16
out
ja
fldl2t
xchg
loop
push
fstpl
push
add
movsl
add
push
dec
push
leave
popa
add
in
int
ret
add
cmc
jl
pop
xor
call
mov
add
add
add
pop
jb
mov
inc
add
add
mov
lcall
int3
addl
add
jbe
xchg
es
bound
lcall
call
mov
nop
sbb
fdivrl
add
mov
add
mov
add
and
push
cmp
enter
add
dec
mov
lea
add
jmp
test
xor
ficompl
cmc
adc
call
add
xor
call
aad
mov
add
lcall
mov
add
mov
or
fcom
movl
imul
add
icebp
fsubrs
adc
add
add
into
out
pop
add
add
add
stos
mov
add
jp
mov
cmp
lea
jmp
add
enter
add
add
test
add
nop
xchg
sub
add
add
cmp
or
stc
aas
addb
pop
dec
repz
add
shl
mull
pushl
call
add
xchg
ds
pop
add
jmp
add
xor
add
loop
in
push
ret
add
adc
add
cmc
adc
lcall
jae
ljmp
arpl
push
ljmp
add
push
sti
in
xchg
sbb
cmpsb
add
movsl
add
add
call
push
popf
lods
test
rorb
xchg
push
jmp
add
jge
aaa
lods
lods
arpl
jmp
add
add
fdivrp
rcl
add
add
rol
add
add
cmp
adc
push
mov
cmp
decl
mov
imul
inc
add
add
roll
fists
push
or
aam
mov
call
arpl
pushl
add
push
ljmp
add
getsec
and
incl
pop
leave
test
movl
daa
add
add
incb
add
add
sub
add
call
add
push
add
mov
add
inc
add
addb
add
rcr
pop
sar
sti
add
sub
push
add
call
add
mov
rol
add
add
in
mov
add
out
in
call
sub
aaa
jp
add
fdivrs
add
dec
nop
test
test
add
add
or
add
add
adc
stc
xor
sub
scas
movsl
add
clc
inc
add
inc
add
add
call
jb
incl
add
test
pop
jmp
nop
dec
ret
add
add
ret
add
jnp
mov
mov
add
pop
hlt
dec
adc
call
mov
lea
jo
incl
push
mov
push
add
mov
xor
inc
add
ss
wrmsr
add
inc
add
add
xchg
cld
jnp
ljmp
adc
jmp
scas
add
cmp
mov
lds
cmp
add
xchg
jb
call
jp
cmp
jp
lcall
add
fs
pop
push
add
add
call
add
dec
sub
xchg
jns
ja
xor
add
cmp
pop
pop
push
stc
fcmovnu
pop
xor
decl
cltd
bnd
stos
fmul
fisubrs
add
movb
add
jb
ljmp
ljmp
xor
add
cmp
cltd
stos
filds
add
push
mov
and
leave
imul
dec
cmp
add
cmp
rolb
pop
test
xchg
adc
aas
xor
add
pushf
pop
inc
add
cltd
xor
decl
sbb
add
add
iret
jg
inc
add
cmp
iret
in
dec
pushf
lahf
aaa
add
incl
add
nop
rol
add
inc
add
add
out
and
decl
or
add
add
movsl
add
lahf
sti
mov
jle
outsb
int
stos
mov
pushl
add
pop
add
pop
lds
sahf
cmp
ret
mov
add
fldt
xor
add
xor
cmp
dec
imul
ljmp
add
decl
add
add
cwtl
call
push
jecxz
or
dec
mov
add
mov
aaa
xchg
hlt
in
push
add
fdivrs
add
jae
decl
add
incl
and
int3
vmread
stos
add
lcall
inc
add
xlat
inc
add
cmc
mov
add
add
mov
add
add
decl
ljmp
lahf
mov
add
dec
sub
imul
pusha
add
inc
add
sbb
add
add
jmp
rcrb
pop
pushf
imul
jne
add
sti
jecxz
sub
add
in
adc
add
call
incl
ljmp
lret
mov
popa
add
mov
pushl
add
jo
pushl
call
jl
and
pushl
push
loope
add
ljmp
or
fidivl
das
mov
add
fsubrl
add
lcall
xor
xchg
pop
add
or
add
mov
add
jp
jle
fsubs
jge
add
mov
icebp
clc
imul
popa
add
jle
das
add
dec
in
push
add
add
lcall
add
or
push
popf
stos
sbb
add
test
pusha
add
mov
pop
push
add
out
cmp
xchg
adc
popf
pop
push
std
outsl
or
push
inc
add
sub
dec
popf
cmpsb
add
cs
stos
cmp
inc
add
lcall
xor
push
ss
jb
call
rolb
xor
pushl
rolb
in
fiaddl
call
add
xor
ljmp
add
decl
add
add
jmp
add
das
adc
decl
ljmp
aaa
call
add
add
add
cmc
ja
stc
mov
add
mov
add
push
add
add
pop
mov
pop
mov
hlt
add
call
add
add
sbb
and
mov
dec
push
xlat
mov
cmp
jbe
jl
add
push
add
ficoms
add
inc
add
fcomip
jmp
pop
xchg
je
push
add
roll
add
add
fisttpl
arpl
call
add
jae
ljmp
sbb
incl
xor
roll
add
mov
mov
jmp
add
pushf
cmc
data16
cmp
lret
cmp
aad
outsb
sahf
add
addl
sarl
xor
call
jmp
add
popa
add
cmp
push
insl
pushf
mov
out
out
nop
add
ja
add
incl
add
add
aas
sub
outsb
jp
mov
add
mov
add
incl
nop
test
adc
add
cmp
mov
dec
fisubl
incl
add
mov
movsb
add
or
sub
outsl
test
add
jp
mov
lods
inc
add
sub
out
push
xchg
pushl
inc
add
jo
dec
dec
inc
add
ds
push
pop
sbb
add
add
jns
jp
inc
add
push
into
out
loop
clc
jb
jmp
jnp
add
lea
inc
add
in
mov
mov
add
repz
add
fnstsw
push
test
stos
or
mov
add
add
sbb
add
push
dec
adc
inc
add
add
stos
outsb
jmp
in
ja
sub
movb
xchg
mov
mov
dec
aaa
sub
rolb
dec
xor
dec
mov
decl
data16
add
jmp
add
add
add
fdivl
add
push
xchg
addb
add
cli
fisttps
test
mov
loope
add
decl
sbb
add
jb
lcall
rep
adc
lcall
imul
xchg
and
lcall
dec
sti
xchg
mov
shll
pop
out
adc
call
insb
inc
add
int
jo
lcall
jl
add
dec
movsb
add
push
cmpsl
add
sub
add
ret
add
push
lcall
add
push
and
lcall
push
out
cmp
lcall
push
add
xor
call
cmc
rolb
and
mov
dec
movsl
add
xchg
repnz
aad
inc
add
cmpsb
add
pushf
fimull
mov
add
fidivl
ror
stos
pushl
loope
ret
add
xor
jmp
add
out
cmpsb
add
into
adc
push
inc
add
scas
sub
jg
int
roll
xor
test
lret
push
sub
fmuls
push
add
mov
in
sub
dec
pop
add
loop
out
sub
lret
aam
adc
in
pop
rcll
add
outsl
adc
add
push
lock
add
inc
add
add
add
add
stc
out
cmp
jne
add
sub
pop
dec
adc
jmp
add
jno
lcall
add
xor
jge
dec
pop
movl
and
and
sub
jl
xchg
addb
dec
test
xlat
icebp
stc
jo
push
jge
pop
sbb
add
add
sbb
dec
je
ja
pusha
add
mov
add
dec
stos
divb
inc
add
mov
mov
add
xor
lcall
xchg
push
bound
lcall
pop
add
pop
mov
add
lcall
and
jmp
add
incl
addb
add
pop
dec
pop
add
push
add
movb
cmpsl
add
arpl
ljmp
fmulp
adc
incl
add
xor
call
jmp
aaa
mov
jle
adc
lcall
ss
out
lahf
cmp
ljmp
nop
push
dec
sbb
bound
incl
mov
add
cmc
pop
daa
add
bound
dec
mov
call
add
test
add
les
cmpsl
add
idivb
add
jnp
add
or
jl
sub
adc
add
add
stos
lds
and
decl
stc
pop
add
daa
add
push
add
es
test
add
cwtl
ret
add
je
add
js
add
dec
or
ja
mov
outsl
push
add
xor
jnp
add
or
add
incl
add
sbb
mov
push
add
jbe
add
push
sub
inc
add
cmp
fadd
add
add
push
pop
imul
add
xchg
imul
in
or
dec
test
add
xchg
fistps
add
add
ljmp
mov
insb
push
add
dec
adc
pushl
add
jmp
add
xchg
hlt
aam
fisubrl
sbb
jae
lcall
scas
xlat
lea
add
dec
divl
add
sub
ret
add
sarb
xchg
adc
call
scas
xchg
jbe
add
ret
dec
add
and
pushl
call
add
lods
inc
add
xchg
xor
cmp
add
loope
pop
inc
add
testb
add
pushl
lcall
adc
ljmp
xchg
or
add
xchg
test
fadds
out
sub
insb
in
aas
mov
add
mov
mov
add
push
add
jbe
pop
pop
pusha
add
push
fiaddl
in
imul
adc
decl
dec
adc
pop
lret
es
jmp
call
pusha
add
lods
dec
xchg
rclb
call
call
ljmp
dec
stos
cmc
sarl
dec
stos
or
sarb
xchg
fnstsw
mov
mov
lods
dec
mov
add
sub
add
add
and
sub
test
pop
mov
add
or
in
jecxz
push
add
ret
add
xchg
outsl
arpl
lcall
lcall
inc
add
add
add
sub
add
add
jmp
dec
dec
jg
lcall
mov
daa
add
add
je
add
inc
add
jno
dec
mov
mov
jmp
add
jnp
jbe
add
mov
dec
lods
adc
or
nop
xlat
pop
add
mov
add
cmpsl
add
add
incl
ret
mov
sbb
add
test
mov
clc
and
ljmp
mov
add
pushl
push
add
addl
fists
stos
sbb
add
or
add
inc
add
incl
mov
outsb
mov
sbb
cwtl
call
icebp
lock
test
ljmp
data16
fcomps
pushl
mov
fiadds
add
xchg
dec
aas
loopne
enter
ret
aas
mov
mov
ffree
add
adc
decl
push
ljmp
hlt
add
add
ret
add
add
outsl
ljmp
dec
sahf
popa
add
movl
cmpsl
add
add
call
jb
jmp
add
mov
xor
incl
xchg
push
aaa
popf
sub
jmp
add
jge
dec
hlt
in
sbb
daa
add
sub
add
dec
add
xor
mov
pop
add
cmpsb
add
loope
lret
xor
xchg
test
fdiv
push
add
outsl
loopne
addl
add
lea
add
and
incl
jmp
ljmp
lret
dec
and
add
mov
fmuls
add
jle
push
jecxz
mov
daa
add
scas
push
push
cmp
xchg
adc
inc
add
mov
lods
iret
xor
jmp
add
dec
mov
add
xchg
add
incl
dec
mov
sub
add
mov
icebp
dec
sub
cmc
mov
cmp
imul
call
pop
cmc
mov
lds
xchg
iret
add
inc
add
xor
add
adc
lcall
vpmacssww
arpl
push
icebp
cmp
inc
add
movsb
add
push
add
jle
add
xchg
xor
add
nop
jl
insb
pop
sub
cltd
shll
add
pop
push
add
mov
pop
push
addl
add
add
adc
mov
sub
add
addl
sbb
add
imul
mov
or
add
aad
add
add
xchg
addb
mov
pop
and
imul
pop
jbe
add
pop
add
pushl
popa
add
into
xchg
faddl
pop
mov
setb
call
xchg
addl
fmuls
out
stos
jmp
jg
pushf
rolb
add
jns
add
call
add
in
stos
leave
pop
push
dec
addb
jl
rcll
push
fcoml
cli
std
sub
add
ljmp
pop
add
cmc
mov
addb
push
add
add
add
pop
jns
mov
adc
add
mov
fwait
in
addb
push
mov
jecxz
frstor
add
add
ljmp
lret
sahf
dec
hlt
repnz
add
call
add
arpl
jmp
add
movb
add
xchg
push
lods
imul
add
pop
mov
add
les
mov
cmp
decl
and
pushl
mov
sahf
xor
hlt
cwtl
out
mov
pop
xchg
bound
incl
mov
in
mov
add
pop
xor
jmp
pop
test
jle
inc
add
mov
add
add
xchg
movsb
add
pop
lahf
sbb
gs
mov
xor
dec
push
xor
call
popf
movb
add
adc
incl
sbb
jnp
shl
add
mov
sub
push
lcall
add
mov
jge
add
add
pop
aas
mov
in
movsl
add
add
push
add
loope
xchg
sqrtps
call
push
sub
fcoms
loope
inc
add
sub
add
xchg
jbe
xor
pushl
add
stos
push
pop
fwait
outsb
jl
fcoml
jecxz
and
jmp
add
mov
decl
xchg
imul
mov
mov
add
decl
add
loop
in
jne
push
push
lea
add
add
cwtl
add
add
incl
jle
add
outsb
mov
movsb
add
insl
loopne
and
lcall
xor
lcall
cmp
call
add
xchg
or
jle
stos
or
add
bound
lcall
cs
lods
xchg
pop
adc
incl
add
add
cmp
add
cs
add
mov
add
repnz
add
add
mov
sub
xchg
fldt
inc
add
push
add
xchg
sarb
mov
mov
push
js
nop
adc
call
data16
loop
add
add
dec
jb
lcall
addl
add
in
inc
add
add
push
repz
inc
add
cmpsl
add
jge
stos
add
decl
push
inc
add
call
dec
test
nop
sti
lods
jns
xor
cmp
mov
aam
roll
add
pop
iret
jg
add
dec
int
sub
hlt
push
add
adc
dec
mov
inc
add
clc
dec
shrb
mov
test
daa
add
iret
outsl
sbb
add
popa
add
pushf
jg
and
pushl
sbb
cmpsl
add
add
push
xor
lcall
add
mov
add
or
or
cmp
adc
ljmp
movsl
add
add
test
mov
std
pop
dec
gs
ja
xchg
push
dec
ret
xchg
movsb
add
add
sub
jle
shl
add
sub
into
outsl
add
jmp
mov
movsb
add
call
mov
sbb
outsb
cmp
push
push
add
ja
cmp
or
mov
stc
addb
add
add
add
adc
add
cmp
decl
mov
jo
jmp
add
pop
gs
das
sbb
add
cmc
mov
int
jno
lcall
inc
add
aad
aas
mov
fstps
inc
add
add
push
arpl
jmp
call
pushl
decl
arpl
incl
pop
lret
mov
testb
ljmp
test
inc
add
leave
ret
inc
add
stos
or
aas
inc
add
or
mov
or
xchg
push
mov
adc
mov
fwait
aam
int
add
add
lret
pop
das
in
test
repz
cmp
push
and
xchg
push
add
xchg
and
lcall
xor
mov
push
add
ds
das
jno
call
cli
sub
add
mov
sbb
add
push
add
jmp
add
fwait
out
dec
xchg
mov
add
mov
add
aad
add
lods
add
decl
add
pop
scas
addl
fcmove
cli
mov
sbb
hlt
mov
add
xor
add
add
test
mov
add
stc
imulb
inc
add
lcall
notb
roll
add
jg
in
jmp
push
add
jae
lcall
add
adc
mov
repnz
call
ljmp
add
addb
in
jl
and
add
imul
movb
add
out
push
push
out
addl
js
inc
add
xor
incl
mov
jmp
add
adc
decl
add
in
mov
das
or
pusha
add
inc
add
xchg
mov
xor
pushl
scas
sub
pushl
decl
add
movsb
add
fstpt
sub
loope
or
add
sti
mov
add
out
lea
jecxz
fwait
xor
jg
add
insl
adc
scas
rclb
loope
es
loop
jbe
inc
add
mov
mov
cmp
roll
test
data16
add
mov
out
xchg
push
mov
jmp
es
add
cmp
movsb
add
into
bound
jmp
call
dec
pop
add
lock
add
pop
pop
add
cs
dec
dec
add
mov
ret
add
add
addb
add
jmp
and
add
mov
test
or
add
incl
ljmp
rdtsc
add
fldenv
add
xchg
addl
das
aam
sub
fists
add
std
mov
add
add
adc
daa
add
add
mov
push
lods
mov
pop
mov
add
in
daa
add
inc
add
jmp
add
data16
jns
test
push
or
add
jmp
add
int3
dec
push
dec
cmovne
sbb
add
add
fnstsw
out
and
pushl
pushl
adc
in
test
in
stc
mov
in
mov
and
jmp
pop
repz
add
jns
movb
test
push
inc
add
sbb
decl
add
fiaddl
add
mov
lock
add
add
incl
or
decl
push
sub
mov
into
and
add
stos
mov
add
dec
xor
pop
jne
lods
enter
mov
jg
add
cmp
push
add
daa
add
outsl
mov
add
inc
add
mov
sub
test
out
nop
mov
xchg
fstpt
addb
ljmp
xchg
xchg
push
add
mov
pop
push
mov
call
call
jg
mov
jo
call
outsb
fbld
push
mov
js
add
jle
adc
cmp
popa
add
mov
jg
int3
lods
dec
jl
cmp
add
xchg
dec
mov
add
decl
loope
int3
and
add
cmp
pop
rolb
mov
add
add
mov
in
arpl
decl
add
rorl
je
push
add
dec
addb
add
add
pop
jbe
add
movl
mov
add
add
jmp
add
add
insb
popa
add
xchg
push
aad
add
mov
mov
notl
cmp
add
jmp
add
fstl
add
stc
stc
and
jnp
add
dec
push
dec
add
lcall
test
cmpsl
add
fdivl
mov
cmpsb
add
lcall
cmp
push
adc
add
repz
and
mov
add
cmp
add
call
out
sub
add
xor
add
add
xor
into
xchg
xor
lcall
inc
add
jge
xor
fdivr
call
ljmp
add
aad
add
mov
in
enter
push
add
sbb
nop
or
lods
mov
jge
add
out
pushf
jmp
aas
xor
xor
pusha
add
dec
jb
jmp
add
out
mov
add
fmull
add
out
out
push
cmpsl
add
pop
pop
sub
mov
mov
add
jmp
test
out
dec
ret
add
out
pusha
add
rolb
scas
addb
add
fldenv
ret
add
push
xor
incl
inc
add
add
push
cwtl
fsubr
sar
jmp
nop
loopne
lods
out
mov
enter
jge
movl
dec
test
mov
and
pushl
adc
inc
add
sub
xchg
and
cmp
xor
incl
leave
jbe
lcall
push
add
movsb
add
add
stc
jae
ljmp
dec
repnz
add
popa
add
movsl
add
adc
dec
ds
add
add
pushl
cltd
push
xchg
mov
pushl
incl
pop
pop
xchg
xchg
mov
nop
pushf
out
dec
push
cld
ljmp
add
lcall
aad
add
add
add
movl
add
push
decl
add
clc
adc
pushl
je
or
add
add
push
out
cmp
fwait
mov
bound
lcall
fnsave
jg
add
add
add
push
fisubl
stc
addl
cmpsl
add
jae
lcall
push
add
dec
mov
inc
add
lds
cmp
int3
add
loope
leave
sub
dec
xor
in
sub
push
sbb
ficompl
add
cld
addl
jo
lcall
add
cmp
push
add
add
add
lods
and
mov
fldcw
roll
push
add
add
pop
jge
imul
or
add
xchg
xor
inc
add
call
call
push
add
fmull
imul
add
jmp
es
cmpsb
add
add
mov
repnz
add
lret
add
add
ja
add
aad
movl
pop
out
jle
add
push
mov
daa
add
push
pop
or
sub
or
pusha
add
adc
jmp
ds
loopne
mov
mov
add
sbb
dec
mov
cmpsb
add
shrb
mov
test
mov
add
push
and
jmp
add
add
mov
add
jmp
add
push
xor
pushl
add
dec
adc
ljmp
js
addl
add
lods
mov
cmc
mov
add
sbb
add
jo
ljmp
dec
pop
leave
inc
add
mov
inc
add
lods
lret
into
lcall
ljmp
sub
dec
leave
fwait
dec
push
sub
jmp
pop
cld
and
call
add
call
add
add
mov
add
mov
int3
mov
popf
xor
ljmp
addb
add
incl
es
xchg
jmp
inc
add
and
mov
add
or
xor
movsl
add
add
pop
and
decl
jmp
add
sbb
add
add
xchg
test
xchg
dec
out
push
jecxz
fninit
add
repz
call
decl
add
sbb
or
mov
lcall
add
ret
add
pop
mov
inc
add
add
imulb
dec
aad
add
mov
add
aas
sbb
add
movb
add
inc
add
movsl
add
shl
add
add
addr16
push
and
push
add
call
lcall
lcall
add
cs
xor
add
dec
lret
popf
push
mov
adc
lcall
xor
inc
add
add
cwtl
movl
or
pop
add
add
xchg
jnp
sub
test
push
add
xchg
data16
cmpsb
add
add
push
les
cmp
imul
lds
mov
sub
add
inc
add
roll
xor
ljmp
notl
pop
dec
notb
arpl
call
mov
add
add
test
add
jl
push
or
incl
add
into
movsl
add
sub
enter
repz
ret
add
jmp
add
enter
pop
sub
scas
push
add
int
xchg
movsb
add
add
inc
add
add
add
cmp
or
jnp
add
jmp
test
add
add
sub
pushf
mov
addl
adc
call
decl
aaa
test
mov
in
clc
mov
cmp
lahf
sbb
xor
cmp
fadds
add
add
sarb
add
in
out
js
add
add
xor
dec
leave
push
add
ljmp
push
outsl
or
pop
sbb
add
mov
xor
ljmp
out
jmp
add
jmp
and
fisubrl
add
pop
in
movsb
add
xchg
pop
adc
lcall
add
add
and
ja
and
jmp
aas
hlt
addb
add
xchg
rolb
push
and
add
scas
sbb
inc
add
sub
add
rolb
add
xchg
xlat
stc
mov
add
ljmp
notb
rolb
add
js
std
push
add
lahf
mov
add
add
mull
add
outsl
and
decl
add
mov
sbb
lock
mov
add
jge
add
xor
inc
add
loop
outsb
imul
add
aam
add
add
add
xchg
sti
or
pushl
jmp
dec
ljmp
addl
ljmp
pushf
lds
aaa
mov
stos
sbb
xlat
loop
mov
add
add
add
popa
add
sub
pushf
aas
cld
mov
pop
jmp
mov
add
repnz
test
mov
add
rolb
ja
add
mov
sub
outsl
shlb
add
xchg
movsb
add
out
ror
repnz
add
inc
add
xchg
mov
add
pop
sub
sbb
sarb
add
mulb
adc
call
loopne
jmp
pop
sbb
xlat
fstpl
sub
add
sbb
push
add
addl
ficoms
test
push
add
je
fdiv
inc
add
push
add
mov
add
mov
push
add
sbb
lcall
inc
add
push
pushl
add
xchg
mov
add
xor
jmp
add
add
add
sub
add
call
xchg
jp
xchg
arpl
decl
add
arpl
jg
ja
test
jl
ss
daa
add
add
add
add
push
add
jmp
jno
push
shll
add
xchg
out
sub
jo
incl
lcall
jmp
add
sar
fcmove
cmp
leave
movsl
add
add
or
fildl
jmp
call
movsl
add
add
and
cmp
add
add
mov
add
out
jbe
add
ljmp
lds
rclb
add
mov
add
add
xchg
cmp
nop
mov
push
add
call
bound
call
rolb
add
in
pushf
add
call
roll
loopne
and
fnstcw
jmp
pop
imul
add
stos
in
pop
repz
pop
ljmp
cld
movsl
add
frstor
add
add
add
pop
pshufw
ds
mov
dec
lds
push
dec
cmp
popf
xchg
sub
add
jmp
add
test
jmp
mov
sbb
add
test
data16
add
sbb
add
lods
out
xchg
mov
add
pop
mov
adc
dec
pop
les
movl
add
xchg
cwtl
sbb
ds
sti
mov
add
ss
add
adc
call
cs
arpl
mov
add
inc
add
add
pop
scas
repz
dec
add
push
push
add
outsb
mov
jbe
add
addb
pop
call
inc
add
sbb
fmul
lcall
xchg
ljmp
inc
add
or
addl
sbb
sub
mov
js
or
das
pop
mov
add
movsl
add
dec
mov
mov
dec
or
add
fs
sbb
data16
cmc
lcall
mov
add
popf
mov
incl
call
add
ffreep
add
js
fdivl
ja
aad
add
add
push
add
loopne
pop
push
sahf
rolb
xor
pushl
add
fadds
add
xor
pop
roll
aam
pop
movsb
add
add
add
jmp
add
ficoms
ljmp
in
outsl
outsb
cmp
add
daa
add
push
cli
pop
and
decl
sbb
push
lods
jge
dec
cmp
adc
jmp
add
push
cli
push
insb
dec
addl
add
inc
add
add
mov
mov
cmp
add
add
add
iret
je
fcom
sbb
sub
ljmp
add
je
addl
dec
mov
add
sbb
add
adc
pushl
add
push
xlat
movsl
add
out
pop
sahf
shll
call
mov
jge
in
es
movd
add
test
shrl
addb
and
dec
and
pushl
jg
add
and
incl
test
add
push
inc
add
fmuls
jmp
add
mov
xlat
sarl
mov
mov
push
rolb
add
pusha
add
pop
and
incl
icebp
scas
fldl
add
mov
jmp
add
pop
std
popa
add
mov
sub
hlt
or
add
inc
add
add
jbe
mov
add
ret
add
enter
call
jle
add
add
mov
pusha
add
jge
hlt
cmp
addl
add
ret
add
mov
or
test
mov
ja
push
test
jbe
or
dec
mov
and
jmp
lcall
mov
xchg
mov
addl
add
add
add
rolb
mov
pop
add
add
sub
add
call
mov
lock
mov
xchg
mov
decl
cli
sbb
add
add
jnp
test
fisubrl
fstpl
dec
clc
mov
sbb
lcall
mov
or
xchg
mov
pop
dec
pop
fstpt
add
jne
outsb
int3
sti
push
add
imul
insb
pop
sbb
scas
adc
jmp
jnp
cmp
add
sbb
add
add
ljmp
cltd
pop
sub
xor
jg
add
sbb
out
jae
pushl
add
dec
cs
push
aad
mov
sub
sarl
jnp
fdivl
mov
add
addl
stos
lea
xchg
ret
add
cmc
mov
add
mov
xchg
push
jle
sub
push
int
je
add
add
in
test
out
jbe
loopne
cwtl
sub
mov
add
push
dec
pusha
add
jle
stos
jg
lods
divb
pushf
add
add
pushl
movb
jnp
mov
add
test
add
xchg
loop
and
jle
push
sub
add
or
add
cmp
loopne
add
decb
dec
inc
add
dec
fnstcw
pop
adc
call
sbb
jmp
mov
add
inc
add
out
push
and
jmp
enter
sub
add
add
call
lea
int3
mov
add
mov
cmp
pop
mov
je
call
xchg
dec
movl
outsb
mov
loop
inc
add
in
adc
incl
add
fnstsw
xor
call
fstpl
gs
add
stos
js
add
add
add
sub
lret
add
jns
filds
test
cwtl
and
ljmp
fldt
and
test
add
lcall
add
add
fxch
lds
xchg
mov
inc
add
add
popf
inc
add
dec
jmp
inc
add
pusha
add
jno
ljmp
mov
roll
int3
cmp
dec
push
xchg
pop
push
add
lret
out
and
hlt
shlb
add
insb
in
lret
pushl
add
mov
mov
icebp
aas
inc
add
les
and
jmp
add
pushf
cmp
js
add
add
add
ljmp
int
add
addl
inc
add
mov
mov
add
fimuls
fwait
sub
mull
imul
outsl
mov
cmp
xchg
sub
adc
xor
inc
add
and
dec
jp
pop
adc
mov
out
inc
add
outsb
cmp
push
add
pop
xor
fsubrl
add
ljmp
fcoml
add
adc
call
add
dec
xchg
cs
fistl
decl
jo
dec
into
into
mov
mov
add
push
add
cmp
movsl
add
out
dec
aad
lods
mov
add
add
les
and
add
pop
xchg
lods
pusha
add
pop
add
outsl
pop
lcall
daa
add
add
push
add
push
add
roll
add
push
add
lret
jo
cmp
add
push
xor
aaa
or
add
add
ret
add
add
add
imul
lcall
mov
jno
lcall
sbb
dec
cmpsb
add
sub
pushl
pusha
add
lcall
sbb
add
push
add
shrb
push
push
add
mov
aas
mov
inc
add
inc
add
xor
jmp
and
lcall
mov
enter
add
sub
mov
add
incl
call
divl
xchg
fstps
imul
out
xchg
dec
insl
cltd
ljmp
ljmp
xor
jmp
add
hlt
daa
add
add
pop
in
in
add
add
jb
jmp
add
add
mov
hlt
ret
add
add
add
call
push
repz
mov
add
cwtl
jmp
pop
add
leave
and
decl
add
ljmp
xchg
int
lcall
sbb
add
bound
decl
add
add
sahf
addb
add
loopne
out
xchg
imul
add
popl
lcall
inc
add
out
aaa
jae
lcall
movsl
add
add
add
inc
add
in
test
adc
mov
add
push
mov
pop
add
dec
movb
bound
jmp
add
cmpsb
add
push
add
and
inc
add
mov
inc
add
stc
ss
cmpsl
add
aaa
in
cmp
add
add
cmc
fwait
and
push
aam
add
add
lock
aas
push
add
les
ret
add
and
decl
or
add
out
lock
jmp
add
push
jle
bound
call
insl
test
jmp
add
fdiv
addb
mov
and
ljmp
leave
xchg
adc
jmp
or
inc
add
lea
cmp
fdivr
jnp
mov
add
push
or
add
dec
push
add
sbb
add
jns
add
mov
add
incl
pushl
decl
add
dec
mov
in
pop
clc
sbb
add
cltd
fchs
add
add
hlt
std
xchg
loopne
xlat
movl
addb
add
jae
pushl
jno
jl
add
xchg
mov
add
es
sub
mov
daa
add
dec
in
aam
add
add
pop
xchg
std
stc
sbb
outsb
xchg
jae
sub
add
out
sti
aaa
enter
add
mov
xchg
mov
inc
add
mov
sbb
sbb
xchg
add
pushl
and
fwait
mov
mov
add
loope
in
sbb
je
xchg
xor
jle
les
jl
jno
jmp
add
add
cmc
in
test
and
jmp
add
mov
add
call
lcall
js
mov
jl
roll
idiv
inc
add
cmc
xchg
add
add
xor
lcall
add
and
pushl
add
ja
add
jg
add
xor
jmp
add
movsl
add
add
add
push
add
jmp
add
repz
xchg
sub
sbb
add
decl
sub
pop
ds
mov
add
shrb
addb
adc
aas
fwait
pop
cwtl
add
jnp
or
add
cli
mov
imul
ds
add
adc
push
adc
lcall
mov
jns
add
add
jge
add
and
lcall
add
inc
add
push
inc
add
xor
mov
hlt
jnp
add
add
jnp
arpl
jnp
mov
add
ja
push
add
jmp
add
dec
ret
outsb
addb
movsl
add
add
addb
add
adc
add
bound
inc
add
mov
jae
pushl
add
jns
add
bound
pushl
daa
add
add
cld
mov
out
addb
pop
xor
pushl
add
iret
fisttpll
mov
bound
decl
add
add
sub
add
add
decl
idivl
fcomp
sub
mov
addb
mov
add
add
ss
jmp
add
sub
sti
pop
add
add
cld
lret
adc
fcoms
add
ss
add
stos
fcmovu
adc
lcall
push
add
mov
add
jmp
add
add
adc
add
or
add
xchg
les
mov
cltd
or
xlat
cwtl
push
jl
in
and
decl
sbb
xchg
xor
jmp
add
add
jge
mov
add
inc
add
pop
mov
push
add
xor
call
add
sbb
push
add
mov
int
ss
fisubl
movsl
add
and
add
test
paddb
add
cmp
inc
add
inc
add
add
int3
pop
addl
add
mov
test
ss
push
xchg
test
sub
rorl
push
test
mov
adc
incl
add
lahf
into
daa
add
inc
add
add
stc
add
ljmp
test
shll
add
ljmp
in
out
or
lcall
sub
stc
sbb
adc
decl
add
pop
int3
outsb
and
sti
xor
cmp
ret
add
and
push
sahf
xchg
push
add
push
data16
xchg
int3
nop
aaa
ljmp
jmp
lcall
cmp
push
sbb
pop
adc
decl
push
add
std
jo
decl
add
loop
bound
ljmp
push
sub
pop
insb
outsb
call
call
rolb
addl
and
call
inc
add
test
and
lcall
push
add
call
add
clc
pop
jno
decl
in
add
lcall
mov
mov
lcall
mov
cmc
icebp
sbb
fists
add
xchg
dec
cwtl
icebp
ja
add
add
add
sub
pop
addb
add
pop
insb
loope
adc
incl
add
add
stos
iret
scas
ret
add
add
jno
pushl
add
xor
adc
fisttps
push
add
sbb
xchg
fcoml
add
mov
add
lcall
pushl
mov
ja
lds
push
add
xchg
cmp
add
jle
sahf
add
popa
add
popa
add
fnstsw
add
jne
dec
roll
sbb
pushl
cmp
sti
xchg
push
add
add
sub
pop
add
add
and
jmp
add
shrb
or
scas
ss
addl
xchg
push
and
add
je
mov
jne
add
sub
add
adc
decl
add
inc
add
or
fwait
jg
add
mov
mov
xor
decl
test
xor
in
mov
rorl
addb
add
jbe
inc
add
sub
clc
in
pop
imull
repnz
ds
mov
xchg
fsts
clc
ret
enter
mov
loopne
leave
in
ds
xchg
xchg
inc
add
hlt
test
sbb
add
jae
call
pushl
add
cmc
sbb
mov
call
xchg
rclb
dec
mov
add
cmc
je
rolb
add
push
add
inc
add
sub
add
xor
pushl
pusha
add
and
lcall
add
pop
inc
add
add
dec
icebp
or
lcall
aam
add
mov
lods
xchg
sbb
adc
xchg
imul
adc
incl
add
cmp
add
imulb
mov
and
incl
or
call
xor
incl
mov
add
add
movb
pop
outsl
xchg
fs
xchg
jno
decl
ficoms
add
fwait
dec
or
or
icebp
add
fidivrs
push
mov
or
das
push
add
add
add
scas
jo
jmp
add
test
sbb
add
xchg
fldcw
sub
mov
sub
scas
pop
jbe
jecxz
sub
out
mov
adc
mov
enter
lds
cmc
cmp
mov
push
fiaddl
xchg
mov
add
mov
addb
cwtl
xchg
sbb
add
push
pop
fwait
je
enter
push
add
mov
outsb
lahf
std
xchg
xchg
lahf
addl
add
push
addb
fisttps
add
add
add
jno
fsts
das
dec
fildll
add
inc
add
push
lock
add
js
push
and
call
incl
add
add
xor
cld
add
decl
xor
call
add
and
inc
add
aam
pop
dec
sbb
out
cmpsl
add
mov
movsb
add
les
mov
add
jge
addb
add
add
inc
add
sbb
in
jne
sbb
pusha
add
add
inc
add
lret
or
lock
repnz
add
jle
in
jo
call
movsl
add
add
inc
add
pop
imul
sbb
cmp
pop
mov
and
sar
xchg
jl
add
cmp
ljmp
ret
add
sub
add
pop
popf
cmpsl
add
add
pop
add
jbe
test
idivl
push
and
movsl
add
add
mov
jo
decl
or
xchg
jp
adc
call
jmp
add
decl
jle
mov
imul
add
jg
add
data16
ficomps
adc
push
or
add
out
pop
jle
add
add
fdivrs
jge
add
push
add
jge
mov
add
dec
jne
add
adc
mov
mov
movsb
add
inc
add
stos
mov
add
or
add
jae
call
add
sbb
cmpsl
add
pop
add
jecxz
hlt
jmp
jecxz
dec
js
sti
xor
fsubl
cmp
jmp
leave
ss
ljmp
mov
mov
add
rorb
add
xor
call
add
and
lds
push
add
mov
roll
add
dec
out
aaa
or
add
fsts
jno
call
hlt
add
add
mov
add
add
adc
push
dec
clc
cmp
inc
add
add
inc
add
iret
pop
pop
movb
mov
add
in
xchg
pop
push
add
add
add
mov
add
dec
add
call
out
xor
lcall
test
in
outsl
adc
add
inc
add
inc
add
add
push
adc
ljmp
cmp
les
mov
or
add
mov
lds
dec
adc
lcall
mov
add
outsb
sahf
out
add
data16
add
add
adc
push
out
inc
add
xor
inc
add
jle
or
test
mov
and
ljmp
pushl
add
in
jmp
loop
movsl
add
and
mov
and
pushl
add
mov
add
add
std
scas
icebp
mov
add
movl
add
dec
addl
cmp
mov
ds
jge
dec
cmp
addl
sbb
adc
mov
mov
add
add
mov
add
in
push
mov
add
add
cmpsl
add
add
push
nop
in
fdivr
stc
addl
xchg
gs
xor
add
jecxz
pop
mov
jnp
aad
xchg
addl
out
lods
mov
pmullw
add
xlat
test
adc
incl
xlat
sar
in
inc
add
add
add
push
test
add
mov
fisubrl
xor
inc
add
add
jb
ljmp
mov
add
add
xor
jmp
ret
cmp
add
in
je
add
testb
add
xchg
xor
lcall
pop
inc
add
add
packssdw
mov
inc
add
into
xchg
test
aad
add
pushl
call
lahf
mov
add
test
call
or
add
add
mov
dec
push
add
push
add
sub
add
imulb
test
cmp
xchg
imul
pop
add
jmp
add
add
call
add
lds
mov
and
jne
lret
add
ss
shrl
stc
loope
dec
pop
add
cltd
test
idiv
rol
add
decl
add
mov
incl
decl
lret
mov
add
and
fistpll
cltd
mov
push
addb
popa
add
test
jp
mov
incl
add
mov
add
addb
add
add
mov
add
add
testl
jmp
add
xchg
test
mov
mov
add
jmp
scas
pushf
movl
aad
pushf
xlat
lret
add
add
int3
push
sbb
sbb
add
add
inc
add
dec
nop
insl
scas
mov
pop
mov
add
add
daa
add
mov
nop
cmp
mov
idivl
pop
xchg
pop
fidivs
arpl
jmp
icebp
inc
add
add
dec
lock
fcom
mov
xchg
lahf
mov
fcomps
dec
insb
mov
sub
mov
add
dec
lea
push
jecxz
jnp
fists
pop
sti
das
mov
mov
add
rolb
add
pop
xchg
push
add
add
incl
jmp
add
add
inc
add
addr16
rcr
test
pop
and
lcall
jge
xchg
mov
jge
mov
add
add
add
ja
hlt
imulb
mov
movb
add
sahf
pop
jecxz
aas
push
add
in
data16
scas
jbe
fnstenv
mov
add
add
shl
and
and
jnp
add
flds
lock
mov
add
inc
add
xchg
je
add
mov
jo
jmp
dec
bound
jmp
add
add
pop
cmp
cmp
pop
xor
decl
add
addb
add
inc
add
mov
test
pop
outsl
arpl
jmp
xchg
add
fists
add
inc
add
pop
dec
sahf
rclb
aaa
movsb
add
popf
addb
lret
pushf
and
jo
ljmp
xchg
mov
int3
jno
pushl
and
popa
add
arpl
cmp
push
add
iret
mov
push
lcall
test
or
add
add
sub
popa
add
movl
mov
xor
lcall
dec
addl
add
neg
mov
mov
fisubl
aad
cwtl
enter
add
inc
add
xchg
stos
cld
mov
xlat
mov
add
xchg
sbb
add
pop
clc
out
stos
fildll
jno
decl
xor
incl
mov
cmp
pop
and
mov
decl
sti
ds
sub
ret
push
js
sub
add
repz
add
add
hlt
out
movl
xchg
out
xchg
pop
add
cld
dec
pop
ds
cwtl
pop
movsl
add
add
out
repz
sub
incl
add
dec
dec
sub
add
jl
scas
cli
mov
lcall
xor
decl
movb
add
sub
inc
add
movb
sub
ss
add
add
movb
lock
cmpsb
add
movsb
add
pushl
outsb
xor
lcall
jmp
add
add
stc
repz
cld
fcmovne
mov
movb
add
dec
cmpsl
add
xor
ljmp
cmp
cwtl
out
rolb
repnz
sbb
add
es
push
or
add
cli
pop
loopne
in
outsb
sub
add
or
incl
add
std
insl
int
add
push
add
test
inc
add
mov
or
fstps
jb
jmp
add
jae
lcall
je
xchg
push
cmpsb
add
nop
loopne
sub
inc
add
testb
aas
jbe
js
add
jno
jmp
add
movsb
add
add
stos
mov
push
jnp
hlt
xchg
jb
call
add
xchg
addl
add
add
sub
fcmovne
addb
mov
add
dec
cmc
loopne
sbb
incl
xchg
xor
inc
add
add
decl
sbb
sbb
add
dec
jnp
dec
sbb
jl
cmpsl
add
data16
sub
adc
fistpl
roll
popa
add
or
sub
add
mov
sbb
repz
das
push
add
xchg
aaa
bound
pushl
incl
call
jmp
add
and
ljmp
lea
ljmp
add
js
pop
out
cmp
pop
les
jl
inc
add
fsubrs
jns
xchg
adc
cmp
sets
mov
dec
sub
int
xor
pushl
call
ljmp
inc
add
add
add
outsb
xor
bound
decl
mov
add
add
xchg
pop
addb
add
fisttps
mov
push
add
or
xchg
into
sub
mov
add
hlt
add
out
loope
es
add
int
add
add
add
cmpsb
add
das
jecxz
fbstp
in
inc
add
in
mov
inc
add
ja
add
cld
out
aam
add
inc
add
sti
or
stos
pop
or
incl
push
cmp
incl
call
clc
jns
in
out
les
fadds
jmp
call
sbb
mov
in
insb
aam
cmp
jns
fmuls
xchg
punpckhbw
add
arpl
call
jg
inc
add
jmp
add
addl
xor
incl
incl
xchg
lds
lret
adc
fistpl
out
ss
mov
pop
ds
mov
add
mov
pop
sahf
adc
add
add
add
inc
add
out
xlat
lods
mov
add
test
addl
add
out
cmp
cmp
je
dec
add
addl
ficoml
pop
inc
add
add
mov
xchg
jle
add
xor
call
out
mov
push
push
xor
cmp
and
jmp
add
dec
mov
add
jmp
add
ret
and
pushl
cmpsl
add
jecxz
sahf
mov
and
pushl
add
fldl2t
mov
push
add
add
in
pop
loope
call
icebp
neg
clc
shl
daa
add
xor
lcall
stos
mov
add
cld
je
and
jmp
add
add
imull
push
ret
add
mov
mov
leave
rorl
stos
inc
add
add
scas
lcall
add
push
adc
mov
xchg
popa
add
in
addb
insl
mov
out
data16
add
mov
out
sub
aam
cmp
add
mov
sub
add
outsl
mov
lods
faddl
add
in
mov
loop
xchg
pusha
add
cltd
sub
add
dec
les
fdivrp
outsl
rorl
inc
add
cmpsl
add
add
mov
add
sbb
ret
add
dec
lods
arpl
lcall
nop
js
inc
add
out
dec
scas
aas
pusha
add
pop
stos
pop
xchg
inc
add
jno
push
cs
add
or
out
jl
jmp
add
call
dec
cmp
cmpsb
add
jno
decl
add
aam
add
dec
in
aad
add
add
leave
jle
lcall
add
pop
pop
dec
jno
decl
fildl
add
addb
pop
add
add
mov
add
xor
lcall
dec
or
lods
xchg
lods
dec
inc
add
push
sub
cmp
xchg
fdivrl
scas
mov
bound
fstps
add
add
cltd
insb
js
fisttpll
jns
add
sar
fidivs
int3
test
sbb
dec
inc
add
add
add
add
dec
and
in
fdivs
jmp
test
xchg
imul
jnp
inc
add
pop
addl
add
jge
add
imul
je
add
cs
mov
nop
sbb
xor
jnp
enter
into
sub
add
add
push
and
jmp
lods
mov
cmp
xchg
cli
and
in
movsl
add
ljmp
mov
adc
ljmp
inc
add
outsl
in
push
push
add
nop
push
add
aaa
shl
cld
out
insb
test
add
stc
std
jl
push
scas
or
cmpsl
add
sub
add
pop
mov
cmpsb
add
dec
sbb
sbb
mov
jae
jmp
mov
test
xchg
sub
ljmp
and
inc
add
add
gs
add
add
movb
add
pop
add
xor
call
testl
aam
add
iret
ret
add
push
movsb
add
rolb
fnstcw
std
cmc
data16
adc
decl
add
xchg
sub
add
add
add
call
mov
mov
fidivrl
add
jecxz
scas
lahf
popf
das
lret
mov
add
or
push
add
xchg
mov
add
cmp
test
loop
jle
add
xchg
leave
js
add
sbb
jmp
lea
jnp
roll
mov
test
jno
lcall
insb
add
fnstcw
push
add
push
pusha
add
jbe
mov
add
mov
add
call
add
jmp
xchg
mov
add
cli
xlat
insb
jnp
add
jge
mov
mov
add
fwait
rcr
jbe
idivl
ljmp
inc
add
in
push
add
decl
mov
aad
movl
lret
fisttpl
stc
aam
mov
add
or
jge
mov
mov
xchg
mov
cli
addl
pop
loop
lods
nop
ss
imul
mov
add
leave
addb
aaa
dec
rol
add
add
sub
sahf
imul
lcall
xchg
jmp
add
or
test
jnp
cltd
cmp
push
scas
daa
add
movsl
add
jmp
add
enter
testl
jnp
daa
add
bswap
and
in
push
add
icebp
test
in
push
add
in
and
mov
pop
lret
adc
mov
sub
dec
push
add
cmpsb
add
add
lret
icebp
sti
movsl
add
daa
add
cli
mov
ret
dec
imul
in
insl
mov
dec
adc
cltd
lret
cmp
cmp
inc
add
add
jo
dec
fsubrs
add
movsl
add
cmpsb
add
movsb
add
lahf
cwtl
push
add
dec
adc
fsub
add
sbb
loop
cmp
push
jae
lcall
jle
add
add
bound
ljmp
outsb
scas
cmp
add
lds
std
sub
addb
add
add
and
pushl
cmp
add
push
add
addb
leave
popf
fiaddl
incl
call
or
cmp
add
and
mov
add
insl
fndisi(8087
add
add
add
sub
jmp
jno
jmp
add
clc
js
jb
lcall
std
xor
lcall
jp
je
xchg
cli
push
add
and
jmp
fs
adc
call
xchg
dec
movl
add
adc
inc
add
ljmp
movsb
add
add
pop
add
loopne
pop
dec
jle
mov
jg
pop
test
sbb
dec
pop
dec
mov
add
fildl
fdivr
cli
jg
addl
iret
fmul
push
add
or
add
xchg
insl
push
rorb
add
ds
add
sbb
nop
js
push
mov
add
addb
jns
leave
add
push
int
push
add
add
add
inc
add
mov
loopne
sbb
cmp
inc
add
add
call
ret
add
add
ljmp
add
add
and
dec
fidivl
jmp
add
jl
add
mov
inc
add
pushf
in
inc
add
lcall
lcall
mov
sbb
dec
cmp
mov
out
stos
lock
pushl
add
add
cmpsb
add
out
bound
lcall
loop
xchg
ds
add
movsb
add
add
inc
add
fisubl
mov
ljmp
lock
ss
bound
pushl
pop
aam
fsubr
push
push
add
mov
out
or
ja
sub
inc
add
jg
mov
ljmp
add
add
xor
call
push
add
clc
xor
mov
ljmp
fisubrl
fidivs
outsl
sub
or
mov
push
mov
mov
add
jge
and
mov
int3
arpl
call
mov
inc
add
filds
jmp
sbb
stos
mov
pop
mov
mov
push
data16
xor
decl
dec
popa
add
das
sbb
out
adc
add
inc
add
notl
add
pushf
inc
add
and
lcall
aad
add
shll
add
add
inc
add
push
add
jno
pushl
add
cs
or
cwtl
push
add
movsb
add
mov
add
xor
jmp
pop
or
repz
push
xchg
cmc
add
sbb
incl
add
mov
xor
lcall
sbb
add
add
mov
add
add
test
push
dec
mov
push
mulb
jmp
add
loop
in
and
decl
enter
mov
rcrl
add
cld
movb
movb
add
lods
xchg
repz
add
and
or
add
repnz
in
leave
push
add
out
and
je
imul
loopne
cld
xchg
addb
mov
add
xor
xchg
pop
jg
mov
jb
dec
fsub
add
add
pusha
add
pop
push
add
xor
dec
pop
mov
mov
outsl
xor
incl
fstpt
jae
ljmp
and
call
jno
mov
add
add
arpl
cmp
aam
cmc
daa
add
aas
imul
mov
sbb
ret
jnp
and
adc
decl
add
mov
jg
test
pop
and
ljmp
add
arpl
decl
out
mov
add
xor
ljmp
lret
add
add
inc
add
or
addl
add
xchg
jb
mov
pop
mov
call
mov
add
stos
dec
testb
add
adc
incl
add
lea
add
fdivl
dec
je
add
jmp
int
mov
jecxz
scas
jge
add
cltd
mov
repnz
lds
adc
call
imul
fildll
cmp
mov
addr16
std
dec
lret
and
call
mov
push
dec
rorb
ret
add
mov
test
lcall
ds
add
sbb
dec
dec
xor
add
sub
into
sub
add
lcall
xchg
mov
movl
xchg
ds
add
add
push
add
cmc
cmc
jbe
mov
add
jecxz
pop
mov
add
sbb
and
ficoml
push
jne
scas
mov
cmp
add
xor
pushl
add
inc
add
lea
add
sbb
mov
add
out
dec
js
in
mul
add
mov
inc
add
ja
add
mov
sbb
in
mov
fwait
imul
fwait
jge
pusha
add
jb
ljmp
jle
mov
fucomi
loope
or
into
fsubl
push
sti
aad
fistps
adc
sub
push
ret
add
push
mov
sub
jmp
add
xchg
lret
sub
aaa
test
add
push
add
lea
pop
js
add
jo
incl
add
add
addl
add
xor
inc
add
imul
lcall
shrl
add
data16
mov
add
cmp
add
add
imul
mov
add
add
mov
sub
int3
sub
outsl
inc
add
popf
jmp
add
int3
xchg
xchg
xor
cmp
add
popf
popa
add
addl
xlat
cwtl
cmp
fidivs
add
xchg
fmull
adc
jmp
add
adc
dec
pop
insl
cmpsl
add
add
jge
xchg
addb
loop
mov
mov
das
xor
call
push
add
pushl
mov
add
dec
aaa
push
add
lahf
inc
add
push
add
sbb
add
add
pushl
inc
add
add
mov
mov
jge
add
clc
in
cwtl
cmp
add
cmp
jne
fdivr
push
jns
sbb
add
mov
fwait
int
ds
add
xchg
ret
adc
jmp
add
mov
add
mov
dec
lcall
add
and
pusha
add
sbb
pop
movl
xchg
or
add
xor
add
aad
addb
lcall
add
cmp
jmp
jmp
add
add
call
add
jg
int3
movsb
add
add
aad
add
in
adc
nop
jbe
mov
inc
add
add
inc
add
add
xchg
dec
or
add
loope
add
add
lcall
jmp
add
inc
add
out
mov
mov
add
add
mov
arpl
call
mov
xor
add
xchg
arpl
jmp
add
mov
dec
in
and
add
push
jg
add
lret
cmc
ret
add
add
push
lds
xchg
mov
add
test
dec
leave
xchg
out
mov
leave
shlb
add
jno
decl
pushl
add
or
cmp
mov
hlt
repz
jns
je
add
out
push
add
fwait
out
adc
call
addl
xor
add
popa
add
jnp
jmp
xor
call
add
jo
decl
addl
loope
mov
or
xor
jnp
call
xor
mov
mul
add
into
pop
inc
add
jle
sbb
inc
add
inc
add
or
add
add
pop
outsb
and
adc
sbb
bound
call
cmp
fcmovnu
cmp
mov
cs
jg
imul
xor
fwait
lods
addb
add
outsl
adc
mov
and
pushl
and
cmp
out
push
add
mov
js
dec
dec
fnstenv
add
inc
add
pop
into
add
pushl
add
inc
add
incl
mov
add
add
cmpsb
add
lds
imul
add
mov
add
add
add
inc
add
and
jle
mov
jmp
fdivs
incb
add
adc
fimull
fwait
adc
lcall
in
bound
jmp
add
add
and
dec
fsubs
pop
add
lcall
add
or
cmp
call
sub
or
add
out
insb
pusha
add
cmp
jg
movb
lock
pushl
add
addl
lcall
xchg
fdivs
add
dec
ljmp
add
pop
and
test
stos
sub
roll
dec
iret
and
jns
add
jmp
add
ficoms
push
out
sub
add
jecxz
repnz
paddq
enter
add
inc
add
lahf
mov
mov
mov
in
faddl
mov
into
mov
pop
mov
pop
mov
add
or
add
or
push
add
addl
mov
sti
xchg
cmp
add
add
add
leave
or
cmp
inc
add
and
ljmp
inc
add
xor
push
out
pushf
ret
add
add
mov
jno
pushl
add
scas
sub
call
cmp
add
mov
add
fwait
lret
pop
outsb
sub
add
push
sub
jbe
sub
add
add
add
decb
pop
push
add
adc
incl
add
adc
lcall
rolb
mov
add
test
add
scas
sub
push
add
dec
movl
add
rcrl
fcoms
inc
add
stc
xor
dec
push
xor
sti
xor
or
push
lds
push
mov
xor
incl
jae
ljmp
cmp
lcall
adc
inc
add
arpl
lcall
add
push
add
in
sub
add
sbb
fildl
decl
arpl
lcall
addb
add
inc
add
pop
pop
mov
add
dec
lods
inc
add
mov
add
add
lods
fucomp
or
mov
insl
scas
push
pop
int3
mov
cmp
jmp
int
add
and
pushl
add
scas
out
push
xor
decl
mov
push
adc
pushl
adc
push
daa
add
add
incl
or
popa
add
bound
ljmp
mov
mov
add
std
mov
add
pop
movsb
add
xchg
aas
xchg
adc
ljmp
xchg
mov
aam
add
pusha
add
sarl
add
add
dec
aas
jno
incl
add
cltd
lret
data16
pop
add
add
add
add
sbb
addl
jecxz
addl
push
add
flds
out
cmp
ret
enter
add
xchg
aad
add
add
mov
cli
into
add
jp
addl
out
imul
ja
add
add
xchg
jo
call
call
add
add
jns
data16
stos
pop
jbe
sbb
dec
mov
ss
out
xor
ja
outsb
add
inc
add
jmp
add
xor
add
mov
add
test
rep
push
addl
out
mov
add
add
and
pushl
sbb
add
faddl
clc
dec
imul
push
in
sub
scas
in
mov
lcall
insb
fistpll
add
ljmp
pop
insb
and
ljmp
frndint
stos
ljmp
jmp
add
scas
pop
addb
mov
outsl
push
add
add
push
add
jecxz
add
cltd
push
pop
scas
add
dec
and
ljmp
cwtl
add
ss
fists
add
faddl
jmp
int3
outsl
add
addb
add
shlb
cmc
mov
repnz
jp
movb
pop
xor
pushl
add
lods
adc
addb
xchg
jle
push
add
clc
mov
xor
jb
pushl
add
popa
add
jecxz
cmp
mov
jmp
add
ja
add
bswap
dec
in
mov
add
inc
add
xchg
xor
pushl
ljmp
int3
jecxz
mov
add
sub
jmp
add
negb
add
add
add
test
push
add
adc
in
jge
pop
adc
cltd
int
cltd
fidivl
add
imulb
fldenv
or
add
pop
xor
fcompl
add
xchg
iret
lcall
adc
add
xor
incl
inc
add
ljmp
sahf
mov
cwtl
rolb
add
add
popa
add
cmp
outsl
pop
aam
jo
inc
add
add
push
add
add
mov
add
imul
add
fldenv
pop
add
call
xchg
in
cmpsb
add
dec
hlt
xchg
aaa
in
push
xchg
lahf
cmp
cmpsb
add
add
inc
add
add
ljmp
in
xchg
and
call
and
jmp
add
cmp
add
jp
add
and
inc
add
cmp
data16
in
icebp
jmp
cltd
inc
add
add
in
jnp
add
add
cmp
decl
dec
add
scas
xchg
loop
ja
icebp
mov
out
mov
add
stc
pop
mov
daa
add
icebp
sbb
xor
lcall
add
stc
cmp
popl
xchg
ret
add
add
add
cmpsb
add
add
mov
add
cmp
dec
rorb
dec
out
push
add
mov
add
mov
mov
add
xchg
out
imul
jae
fbstp
add
repnz
push
add
or
cmp
pop
test
add
pop
mov
add
or
add
add
pop
add
incl
add
aas
sub
call
inc
add
pop
add
add
add
inc
add
lock
jbe
add
leave
mov
mov
add
push
out
jl
mov
sub
xchg
hlt
fwait
or
mov
push
and
movb
and
ljmp
add
mov
or
add
lcall
mov
out
adc
dec
scas
mov
add
add
push
inc
add
add
enter
jmp
lcall
push
add
inc
add
lea
dec
lret
cmp
fwait
lea
in
cli
and
call
pushl
and
call
sbb
ljmp
push
jno
mov
or
add
outsb
fcomps
pop
pop
add
mov
in
shrl
add
ljmp
mov
roll
insb
mov
add
adc
ljmp
or
out
xchg
add
aas
or
ja
aas
or
roll
xchg
xor
xor
jno
dec
adc
fisttpl
call
fucomp
cmp
jae
jmp
add
mov
mov
add
movb
inc
add
xor
call
pop
out
xor
decl
add
jg
or
scas
sub
lods
and
incl
add
add
bound
inc
add
or
cmp
bound
lcall
incl
add
std
dec
xchg
adc
mov
pop
in
mov
dec
push
jmp
imul
and
call
stos
in
jnp
add
inc
add
bound
incl
add
lret
sti
in
ret
cmp
add
lea
call
or
add
adc
insl
lds
push
das
repz
ljmp
mov
add
insb
lcall
ja
adc
lcall
mov
push
add
popa
add
ret
jg
add
dec
or
out
sub
shll
call
sub
add
addl
dec
ret
add
ss
add
insb
and
inc
add
lcall
add
arpl
incl
sar
adc
jmp
add
jle
into
sbb
mov
add
xchg
inc
add
xchg
add
ljmp
mov
fs
aam
dec
test
push
adc
push
loopne
pop
cmp
dec
xor
jo
lcall
add
add
loope
mov
add
call
aad
das
ljmp
mov
add
add
scas
add
mov
add
in
test
lahf
movl
push
add
fsts
add
push
add
repz
add
ljmp
pop
push
add
add
imul
add
push
add
lds
sbb
je
add
sbb
mov
decl
add
cmp
pop
xor
call
js
daa
add
add
mov
imul
add
movb
add
test
jecxz
popa
add
les
pop
movsl
add
jmp
jne
xchg
cli
push
add
ja
mov
push
insb
hlt
stc
in
aam
les
stos
shlb
pushl
push
sbb
and
addb
add
imul
inc
add
mov
lret
nop
push
add
ss
mov
mov
outsb
repnz
lcall
decl
xchg
inc
add
xor
pushl
pushf
out
mov
add
adc
decl
cs
mov
idiv
jb
incl
add
ret
add
mov
das
les
push
mov
pop
sub
sub
iret
movl
addb
bnd
cmpsl
add
cmp
fs
std
inc
add
icebp
into
dec
testl
jne
lods
bound
ljmp
lods
cmp
scas
xor
mov
add
add
xor
ljmp
add
pop
jecxz
iret
push
add
or
add
mov
mov
xchg
push
add
test
mov
sahf
or
add
pusha
add
pusha
add
mov
add
stos
mov
repz
lcall
hlt
xchg
dec
in
mov
imul
add
xor
imul
add
inc
add
cmpsb
add
loopne
inc
add
out
sub
add
aad
pop
aam
cwtl
mov
add
add
jns
add
add
nop
lds
push
add
roll
cmpsl
add
add
idivl
add
xor
jmp
add
in
ret
add
sar
lret
lods
into
mov
imulb
cmpsb
add
int3
mov
xchg
pop
les
jmp
mov
add
ret
add
mov
add
add
mov
add
movsb
add
add
daa
add
mov
xchg
stos
pop
in
lea
xchg
js
add
jle
cwtl
pop
jg
or
int3
ds
push
call
mov
add
sub
mov
add
lcall
icebp
sahf
xor
add
xchg
in
sbb
add
filds
push
add
pushl
ljmp
sub
movb
add
roll
nop
mov
cmp
add
rolb
add
push
les
rcrl
in
mov
in
add
add
add
pop
add
or
add
ljmp
ljmp
addl
outsb
sbb
add
or
pop
ss
add
mov
decl
testb
add
inc
add
add
adc
jmp
add
xor
call
icebp
mov
decl
out
push
add
jg
add
iret
cmp
call
add
std
movl
add
mov
xchg
xchg
insb
mov
mov
loop
sub
add
aaa
std
dec
push
cmp
add
aam
pop
dec
push
add
movsl
add
add
push
and
decl
add
add
lret
cmp
mov
roll
add
test
add
jae
jl
ret
add
mov
push
add
sbb
jp
push
clc
mov
popl
add
xor
in
add
mov
push
lods
clc
adc
incl
add
push
dec
mov
mov
movsl
add
pop
fnstenv
cmp
lods
scas
mov
aad
add
ret
add
addl
add
adc
jmp
in
pushf
dec
xor
incl
add
sbb
add
out
or
sub
outsb
incl
je
outsl
call
cld
push
add
dec
jecxz
push
nop
dec
pop
fists
pushl
lcall
cmp
inc
add
add
stos
sub
push
push
add
fstl
push
jmp
xchg
sub
xor
incl
add
add
out
std
mov
fidivs
fnsave
mov
dec
push
add
dec
hlt
push
add
data16
add
mov
pop
jl
add
add
adc
cli
ret
add
mov
add
add
fildl
lea
add
cmc
cmp
sub
add
js
add
add
addl
adc
ljmp
adc
push
pop
mov
push
mov
jmp
add
mov
add
rolb
add
cmp
mov
add
jecxz
xchg
xor
add
roll
add
add
lcall
mov
add
stos
outsl
xor
cmp
push
jo
ljmp
int3
in
jno
lcall
jae
ljmp
ljmp
enter
mov
xchg
add
mov
loop
dec
jae
mov
fmuls
roll
or
add
add
call
stc
stos
cmp
dec
aam
jmp
add
add
and
fsts
add
and
out
push
add
inc
add
add
mov
addl
ljmp
fwait
dec
lock
pushl
mov
incl
mov
mov
dec
mov
call
lea
decl
add
js
sub
add
imul
enter
add
lcall
pop
or
jne
in
test
movsb
add
adc
aad
sub
scas
ljmp
add
leave
sub
add
add
call
cmp
jg
add
jp
mov
push
xchg
imul
ljmp
mov
add
out
mov
mov
rcr
or
mov
cmp
dec
mov
xor
pushl
and
call
fistpll
es
jmp
jecxz
call
fists
nop
sbb
jp
aam
add
add
stos
aad
add
xor
incl
pop
mov
add
push
les
sub
fcom
push
dec
imul
pushl
add
push
add
repnz
fmuls
dec
or
add
add
jmp
or
add
push
add
adc
outsb
sbb
add
add
push
mov
xchg
jo
pushl
add
repnz
inc
add
push
mov
sub
imul
pushf
pushf
or
cmp
push
pop
mov
xor
add
adc
fnclex
add
xchg
lahf
mov
add
cmpsl
add
and
pushl
lcall
inc
add
xchg
scas
sub
fisubs
add
sti
push
push
add
add
add
add
stc
pop
into
mov
in
mov
cli
jle
cmp
popa
add
jp
fbld
fldcw
mov
add
inc
add
add
push
ror
pop
pop
cmp
movb
cmp
in
or
mov
aaa
jno
ljmp
imul
dec
cmp
jne
lahf
inc
add
or
adc
lcall
add
lea
fnstcw
add
mov
mov
add
pusha
add
xchg
insl
mov
pushl
add
not
jge
lahf
lock
xchg
movl
and
lcall
add
xchg
shll
decl
xchg
mov
add
mov
add
stos
xlat
and
cmpsb
add
rolb
jl
add
aad
enter
add
add
add
icebp
mov
sbb
dec
rcl
mov
shrl
add
add
out
sahf
cmp
add
test
pop
movb
cmp
add
sahf
inc
add
mov
rclb
imul
call
lcall
jns
add
addl
cmc
xchg
inc
add
jg
add
jecxz
roll
add
decl
add
pop
rcll
mov
pushf
push
sub
nop
xchg
call
add
mov
add
pop
mov
add
into
movsl
add
nop
cmpsl
add
jge
and
jmp
mov
repz
add
inc
add
inc
add
adc
decl
out
mov
test
fwait
pop
add
jb
pushl
add
and
dec
out
mov
xchg
xchg
or
mov
loope
fstpt
clc
movb
fs
mov
jne
add
pushl
in
test
adc
lcall
inc
add
incl
decl
sub
xor
mov
add
add
push
mov
addl
add
add
jbe
jo
decl
jg
add
jecxz
push
in
adc
and
ljmp
jns
add
add
lcall
add
data16
jp
inc
add
inc
add
std
add
repnz
rolb
push
xchg
add
ljmp
shl
add
add
lahf
cmc
scas
jle
dec
test
lahf
movsb
add
add
mov
addb
add
cwtl
int
cmc
das
arpl
incl
add
add
push
pop
ret
add
xor
adc
jg
or
insl
adc
jmp
mov
repz
add
pop
xchg
cwtl
or
add
xor
jmp
incl
jno
jmp
int3
test
fbld
add
insl
dec
inc
add
jns
add
leave
jmp
xchg
xchg
sub
add
insb
sarl
dec
inc
add
dec
addb
in
aam
add
sbb
add
add
addl
add
add
icebp
jo
call
in
sarl
inc
add
cmp
add
add
add
pop
ljmp
push
rol
add
add
jo
decl
xor
pushl
add
aam
add
add
lea
lahf
addl
xchg
jg
or
inc
add
cmpsl
add
dec
and
std
jle
add
and
add
add
mov
lock
xchg
add
lcall
mov
call
adc
inc
add
add
add
inc
add
xchg
xor
cmp
mov
incl
outsl
xor
decl
add
incl
lcall
sub
dec
sbb
add
fistps
add
jmp
mov
hlt
and
call
cmpsb
add
xor
mov
std
mov
add
ffreep
add
and
pushl
jns
add
jmp
addb
data16
add
std
sub
pop
add
paddw
add
mov
mov
addr16
add
add
xchg
jl
add
jne
jae
inc
add
fistpll
mov
push
add
movsb
add
mov
add
add
mov
mov
mov
mov
add
ss
xchg
fisttps
pop
arpl
jmp
jg
add
mov
data16
int3
pop
popa
add
add
ljmp
add
mov
movl
into
cmp
cmpsb
add
sub
ret
add
inc
add
add
mov
mov
imul
fdivrs
jg
sub
pop
xchg
dec
add
std
add
mov
mov
mov
add
sub
in
cmp
add
pop
test
das
test
aad
sbb
dec
or
addl
add
fldl
mov
pop
int3
mov
inc
add
movsb
add
leave
sub
jecxz
cmp
add
add
call
ret
add
mov
jmp
inc
add
repz
add
xchg
out
sti
jns
add
ljmp
pop
movb
add
ret
out
dec
add
and
inc
add
add
add
aaa
mov
incl
iret
and
adc
dec
test
bound
ficoml
call
add
adc
fsubrs
stc
mov
repz
lahf
add
incl
add
fimuls
mov
add
rolb
add
add
ror
pop
xchg
jl
add
dec
push
add
movsb
add
roll
jno
inc
add
lcall
xchg
lret
mov
add
add
push
add
out
pop
add
fwait
jecxz
outsl
fdivl
add
icebp
sbb
les
jno
jmp
les
out
push
add
fwait
and
call
jmp
add
into
xchg
incl
add
cmp
mov
fstpl
adc
push
or
jge
dec
popf
fcoms
pop
loopne
cmp
add
add
pop
and
cmp
jecxz
cmp
add
bound
call
das
out
rolb
add
incl
and
add
sbb
bound
fnstcw
add
sbb
add
add
ljmp
add
jmp
add
jg
add
add
mov
sub
add
mov
sahf
iret
int
dec
enter
jno
incl
add
add
pop
fisubl
decl
adc
ljmp
insb
jnp
ret
add
js
add
dec
das
add
add
pushl
add
ja
cltd
mov
sti
add
jmp
add
sub
in
jae
call
cli
mov
jnp
xor
add
adc
je
add
pop
enter
ficomps
add
fdivl
ljmp
mov
movb
or
add
movb
add
mov
lods
inc
add
add
shr
iret
lock
pusha
add
jno
jmp
add
out
xchg
aaa
xchg
fld
add
add
and
add
cmp
mov
cmp
add
add
mov
adc
decl
dec
cmp
bound
pushl
lcall
jle
pop
pop
add
add
xor
ljmp
stos
push
add
faddl
cmp
add
clc
loopne
push
add
daa
add
push
add
pop
inc
add
add
loope
mov
stc
add
decl
add
cmpsb
add
ss
inc
add
adc
jmp
xor
add
inc
add
sub
data16
add
push
add
fmuls
mov
add
sub
add
jl
add
pop
call
xor
push
mov
add
dec
push
pop
fstps
lods
addb
add
cmpsb
add
add
xor
incl
add
pushf
adc
decl
test
cwtl
push
std
sti
insb
mov
lods
addb
and
jmp
add
xchg
mov
inc
add
fisubl
addl
popa
add
into
jle
rcl
jns
add
xchg
aam
mov
add
movsl
add
lcall
stc
movl
mov
pusha
add
mov
hlt
jmp
pusha
add
addb
test
decb
add
ret
add
cmp
scas
push
in
and
je
push
movsb
add
mov
cmp
and
decl
cmp
sti
lret
fists
mov
add
push
add
pop
xor
call
add
mov
cld
cmc
mov
pop
xlat
mov
ds
pop
adc
ljmp
xchg
into
addl
scas
in
mov
add
movsb
add
add
decl
ds
sub
add
data16
add
test
pop
lea
mov
mov
add
leave
sub
add
call
aam
mov
shl
les
call
repz
aam
add
loopne
push
add
addl
pop
add
xor
push
or
ljmp
std
mov
js
push
out
sahf
jne
mov
xor
call
add
scas
dec
inc
add
xchg
lods
push
xor
ja
and
push
add
les
dec
add
push
xchg
int
mov
add
imul
jp
mov
sub
sub
sub
or
sahf
xchg
idivl
out
sbb
sbb
xchg
data16
dec
mov
mov
mov
add
mov
out
and
roll
cld
dec
or
lods
xlat
sti
leave
dec
lcall
pop
xchg
in
sub
add
sbb
adc
clc
sub
call
adc
or
add
addb
add
mov
add
sahf
xchg
mov
ficoml
mov
add
pop
mov
ficompl
sub
jp
xchg
addb
negl
add
mov
xchg
jno
ljmp
in
mov
inc
add
xchg
jecxz
popa
add
test
insb
mov
add
add
out
mov
xchg
mov
ljmp
xchg
cltd
mov
add
lret
loope
out
into
cmp
add
repz
adc
call
mov
lcall
add
pushl
add
jmp
push
fadd
add
mov
add
push
xchg
cmp
in
leave
xchg
lcall
fidivrs
add
jae
decl
jo
lcall
call
cli
dec
adc
incl
add
jge
xchg
cmp
pushl
jbe
imulb
pop
addb
add
lcall
add
add
loopne
aam
sbb
std
cmp
dec
xchg
dec
jne
add
mov
jns
insl
jle
repz
add
and
inc
add
fldcw
popa
add
pusha
add
aas
push
sbb
pushl
mov
add
fnsave
add
fstpt
sub
jge
mov
xchg
push
les
cli
arpl
pushl
add
pop
add
add
pop
add
xchg
bound
call
add
mov
inc
add
in
arpl
call
addl
push
outsl
xchg
call
add
movsl
add
mov
nop
push
sbb
insb
and
decl
imul
mov
int
pop
inc
add
jmp
movl
add
lahf
mov
decl
fwait
mov
jmp
mov
add
jb
jmp
add
stos
int
add
sbb
add
mov
add
inc
add
test
cmp
add
push
add
loopne
xchg
or
sti
testb
lods
fimull
xchg
mov
add
imul
addl
aaa
pop
jno
ljmp
fbld
movl
or
aas
addb
add
sub
in
pop
xchg
mov
lods
mov
add
xor
jmp
sub
decl
add
mov
mov
add
add
add
int3
mov
add
add
and
dec
pop
cli
cli
mov
add
pop
adc
pushl
ljmp
pushf
iret
addl
or
add
or
decl
insl
insl
cmpsl
add
bound
pushl
loope
jae
jmp
cltd
xor
call
and
lcall
lcall
cmp
mov
add
out
sub
xor
mov
test
ljmp
add
dec
movsl
add
addl
add
inc
add
add
add
sbb
add
ret
add
and
jmp
add
mov
addb
fs
pop
aad
add
icebp
jb
call
add
jne
add
stos
xor
add
dec
cmpsb
add
cmp
push
in
in
out
dec
jnp
test
movsl
add
rcrl
out
jbe
cmp
add
pushl
add
fistl
add
sub
jns
inc
add
add
out
xchg
jmp
add
out
add
add
add
add
sbb
jae
jmp
add
sbb
jbe
mov
bound
call
je
mov
lahf
adc
js
in
push
add
aam
mov
add
xchg
mov
lcall
in
into
xlat
mov
add
sub
add
sarb
pop
aaa
xchg
cmp
add
lret
cmp
js
add
cmc
hlt
out
lahf
cmc
bound
pushl
or
ljmp
pop
cmp
pusha
add
mov
add
add
inc
add
stos
aaa
mov
sub
add
movl
add
cmpsb
add
fs
ljmp
or
cmc
xchg
test
mov
cmp
mov
ret
mov
add
add
sbb
mov
lahf
inc
add
daa
add
push
data16
add
lret
popf
mov
decb
xor
cmp
xor
call
and
imul
add
add
rolb
add
mov
in
shrb
add
sub
add
push
cltd
jns
addb
add
mov
pop
lret
call
add
lds
repz
add
add
mov
fucomi
int3
or
add
jbe
adc
call
add
cltd
mov
fcoms
pusha
add
dec
xchg
mov
loope
push
add
mov
in
lret
insb
ret
add
add
out
mov
in
nop
pop
ds
ss
xchg
cmp
add
popa
add
addb
mov
repz
loope
inc
add
add
jno
jmp
add
nop
mov
call
jb
pushl
out
mov
add
incl
ljmp
mov
mov
add
add
xchg
lods
xchg
lods
xor
call
add
add
mov
add
insl
mov
call
aas
imull
add
cwtl
lret
sbb
jo
jmp
xchg
addl
sti
addb
add
add
add
loope
or
rolb
pop
call
jge
add
add
add
jbe
add
add
xchg
inc
add
sbb
inc
add
sub
pop
push
dec
or
add
add
add
mov
or
push
adc
cmp
addb
add
roll
mov
add
pop
mov
inc
add
push
add
in
popa
add
or
out
insb
lcall
xor
fcompl
sahf
int3
mov
add
sbb
arpl
call
xchg
repnz
cmp
mov
or
das
repz
lahf
ljmp
ret
add
add
in
imul
jmp
sbb
cltd
xor
ficoms
sahf
mov
scas
ja
add
pushl
or
int3
test
add
mov
loopne
xchg
mov
jns
add
dec
mov
and
jmp
add
inc
add
push
mov
xchg
mov
lret
pop
xchg
sub
add
add
and
pushl
ret
add
cmp
or
push
dec
stc
cmc
sbb
add
ficompl
aad
test
dec
mov
add
mov
xchg
add
call
add
add
int3
in
cmovs
jmp
incl
push
add
into
lock
add
sbb
fcmovbe
jo
clc
jl
daa
add
fwait
out
pop
and
flds
add
cmp
xchg
push
in
lock
pop
mov
jg
outsb
imul
dec
mov
popa
add
enter
add
add
pop
js
out
stos
sbb
jg
add
movq
pop
mov
cmp
add
clc
stos
fcoml
addb
add
add
add
cmpsl
add
das
pop
sahf
ret
add
cli
inc
add
adc
add
add
adc
ljmp
stc
popf
repnz
mov
add
jnp
add
mov
decl
inc
add
add
add
scas
mov
add
add
sar
aad
mov
jns
mov
cwtl
add
jmp
popf
dec
ss
movsl
add
aad
cmc
ljmp
add
mov
jbe
loopne
cwtl
daa
add
add
jmp
add
call
cmp
int
add
add
fistpll
inc
add
pushf
das
testl
dec
or
call
mov
add
add
add
and
ljmp
jne
jae
dec
mov
out
mov
add
pop
out
out
mov
fbstp
add
movl
lahf
add
imul
cmpsb
add
add
add
or
xor
jmp
add
cmp
int
test
sti
bound
call
jg
pop
inc
add
dec
data16
add
or
jae
ljmp
inc
add
or
mov
add
iret
ret
add
jge
add
dec
dec
rolb
in
filds
fmull
movsl
add
add
or
inc
add
add
mov
iret
xor
decl
push
add
add
add
add
into
cmp
add
lcall
add
icebp
xor
pop
inc
add
add
add
in
pop
ret
add
add
int3
sbb
mov
sub
jl
test
or
movb
imul
rcrb
addb
mov
pop
test
cmpsl
add
sub
lcall
add
movb
add
add
sarl
ljmp
add
dec
sub
pop
jecxz
mov
aad
adc
inc
add
add
push
add
push
push
dec
clc
jp
add
ljmp
jge
add
je
add
les
push
or
add
addb
push
test
ljmp
pop
and
jmp
add
rolb
add
add
incl
incl
mov
call
jl
add
add
xchg
rolb
add
lcall
stos
jl
mov
inc
add
add
jl
add
fldcw
sub
decl
rolb
lods
push
add
dec
adc
fsubs
add
sbb
sahf
stc
or
pop
lods
push
in
or
add
pop
shrl
add
cmpsl
add
add
jns
cli
xlat
stos
mov
push
add
jae
pushl
incl
movb
cmp
add
sahf
mov
aaa
or
in
imul
add
add
rep
outsb
add
add
jnp
jno
jmp
mov
mov
add
add
adc
sbb
or
jmp
je
fstp
in
mov
add
add
add
add
ja
add
pop
and
inc
add
add
shll
mov
jecxz
insl
ja
sub
ljmp
sbb
pop
arpl
decl
jmp
sub
add
add
incl
lahf
mov
mov
add
cmp
jmp
add
lea
cmc
fildl
push
add
mov
out
ds
popf
jne
or
add
add
repz
add
ljmp
add
das
daa
add
fcmovu
jnp
mov
push
fwait
cmc
adc
mov
add
les
test
out
rolb
into
adc
ljmp
cmp
into
add
call
add
stos
push
add
mov
nop
scas
roll
adc
incl
push
jnp
movb
add
data16
add
inc
add
gs
jmp
add
adc
inc
add
ja
popa
add
pushf
popa
add
sbb
xchg
push
daa
add
popa
add
out
test
psubusw
add
add
add
mov
push
sub
add
push
adc
lcall
rolb
fcomp
add
pop
pop
insb
pusha
add
jg
cs
data16
clc
addl
js
add
sub
adc
ficoms
lcall
add
movsb
add
add
add
test
loope
cmp
mov
pop
add
out
and
jmp
fwait
push
cmp
pop
dec
sbb
aad
push
sub
add
int
cmp
add
notb
add
pop
xchg
add
fsub
add
add
pop
enter
les
sub
add
incl
add
pushf
pop
lcall
pop
addl
insb
jp
lds
pushl
inc
add
mov
add
push
lock
add
call
lods
xchg
xchg
test
or
lcall
gs
jbe
add
xchg
push
out
data16
add
cld
imull
dec
push
dec
xor
add
stc
ret
ds
jns
stos
adc
loop
cmp
add
decl
add
inc
add
aad
add
cmp
add
adc
pushl
call
mov
inc
add
add
cld
rcl
add
lcall
shlb
push
add
and
mov
mov
pop
push
add
xor
decb
xor
add
insl
arpl
ljmp
push
and
inc
add
movb
add
lcall
inc
add
imul
jmp
add
dec
inc
add
daa
add
leave
mov
add
inc
add
xchg
lahf
test
ja
add
pop
sti
aas
loopne
lds
mov
jno
inc
add
add
iret
loope
test
lods
sub
fdivl
jmp
data16
sahf
sbb
add
loope
add
jmp
dec
les
sbb
add
add
add
clc
mov
cli
lea
cmc
repnz
xlat
fwait
pop
movsb
add
add
int3
xchg
mov
in
xchg
cli
mov
add
out
clc
divb
add
add
add
call
xor
pushl
add
add
xchg
aad
add
jae
decl
add
out
stc
jge
add
mov
inc
add
mov
sbb
insl
cmp
mov
mov
lahf
imul
shl
xor
push
add
xchg
into
or
out
push
mov
add
mov
jecxz
cmp
add
add
add
add
test
test
add
out
mull
add
test
arpl
pushl
dec
add
and
out
int3
movsb
add
fildl
jmp
lret
aad
add
add
add
mov
xchg
or
add
jo
jmp
add
xchg
shl
in
inc
add
and
dec
mov
jmp
push
pop
sub
insl
enter
in
sub
cmpsb
add
adc
filds
mov
push
add
adc
pushl
ljmp
add
or
xchg
jmp
pop
in
sbb
das
jbe
pop
stos
in
and
jnp
out
sbb
add
xor
addl
xchg
movsb
add
mov
insb
lds
fimull
add
aam
xchg
les
lods
mov
inc
add
add
ljmp
xchg
push
add
cmp
jnp
aaa
lds
les
pop
notl
sti
or
xchg
jae
call
jl
scas
push
adc
mov
lret
add
add
jle
add
cltd
or
addl
xchg
enter
add
ljmp
sbb
int
stc
xor
incl
add
jno
mov
pushl
add
ds
sub
call
test
cmp
push
ret
add
add
cmp
jecxz
sbb
cmp
std
jge
or
add
lcall
imul
add
sbb
push
out
lods
xor
decl
cmp
add
add
jo
dec
pop
les
out
cmp
int
add
add
sub
movsl
add
mov
add
sub
bnd
fistpll
sbb
xor
pushl
add
or
add
xor
ljmp
jno
jmp
add
xor
pop
inc
add
out
push
pop
push
jl
jl
add
xchg
rclb
ljmp
inc
add
aas
xor
add
loopne
inc
add
repnz
ljmp
mov
add
jmp
add
cmp
cld
out
fstpl
add
add
add
add
aad
sub
dec
mov
roll
add
pushf
cmc
mov
add
inc
add
add
mov
add
js
mov
push
dec
comiss
mov
movsb
add
and
adc
lcall
pop
xchg
mov
mov
add
xchg
std
sub
testl
test
pop
rolb
pop
cwtl
xchg
addl
sub
loope
and
mov
stos
bound
dec
pop
add
pop
sarl
or
add
cmp
mov
add
test
pop
push
xor
push
add
lea
push
add
insl
fldenv
incl
add
addl
add
jnp
mov
mov
mov
in
addb
lods
in
test
sub
xchg
addb
mov
arpl
call
call
add
negl
sbb
incl
mov
add
lea
fldl
cmp
cmp
dec
les
cli
js
add
ljmp
cmp
ret
mov
xchg
push
imul
add
jne
pop
add
mov
lock
add
xchg
int3
test
add
pop
lods
daa
add
inc
add
xor
mov
std
js
add
lahf
iret
mov
das
fsub
add
jle
mov
cwtl
jle
idiv
and
das
daa
add
mov
xchg
pop
and
pushl
pushl
fists
lcall
cmp
pop
xor
mov
lahf
xchg
jl
add
test
add
add
addb
push
xor
lcall
xchg
fcoms
mov
add
dec
add
pop
xchg
rolb
add
add
jnp
add
xor
lcall
add
sti
fsub
add
jno
pushl
mov
imul
mov
pop
push
add
call
iret
cmp
jns
test
xchg
cmp
and
dec
jns
add
add
aad
mov
insl
adc
mov
add
call
mov
add
dec
and
jmp
decl
add
lods
mov
add
push
pushl
call
hlt
dec
cli
lods
ljmp
jge
ret
add
add
mov
fdivrs
scas
push
outsb
mov
add
lds
stos
pop
or
fiadds
decb
data16
aam
inc
add
arpl
flds
add
add
or
sub
and
jmp
push
data16
push
add
fmul
xchg
fisubrs
sbb
add
xchg
cwtl
jg
addb
inc
add
ds
mov
adc
pushl
add
call
cld
mov
pop
push
aas
jge
out
pop
sarl
repz
xchg
popf
dec
cmpsl
add
sahf
mov
ror
sbb
add
fadds
add
addb
cmp
lea
cmp
add
js
sti
inc
add
stos
mov
dec
bound
jmp
add
ss
movb
pusha
add
inc
add
cmpsb
add
add
cmp
xchg
lahf
dec
ret
add
add
cmp
mov
add
mov
std
add
call
add
imul
push
clc
adc
lcall
add
add
add
loop
pop
push
add
xchg
scas
dec
je
call
add
xchg
repz
add
add
pushf
or
sbb
incl
jmp
jmp
xchg
lret
test
or
in
ror
and
mov
xor
repz
and
incl
add
add
arpl
fsub
add
jge
rcrl
ret
add
or
and
movsl
add
add
mov
jbe
add
sbb
addl
add
mov
add
jae
incl
imul
in
test
add
cli
mov
push
in
out
push
xchg
shll
test
or
jne
or
mov
add
out
jp
movb
imul
jo
decl
out
std
ret
add
add
add
sub
add
sbb
and
lods
add
jmp
pushl
in
stc
xor
call
add
push
mov
loope,pt
pop
add
add
cmp
les
loop
xchg
push
and
ficompl
add
add
mov
pop
icebp
je
jne
push
mov
div
fistpl
add
add
mov
cmpsb
add
inc
add
decl
out
enter
add
inc
add
in
mov
lock
lcall
popf
lea
add
mov
popa
add
idiv
mov
addb
sbb
add
cmc
adc
ljmp
fmulp
xchg
inc
add
mov
and
add
inc
add
and
ret
add
dec
mov
sbb
add
je
and
jmp
xor
fbld
add
and
ds
aaa
ljmp
call
jae
fadd
add
xchg
cmp
add
add
sbb
add
les
lahf
pop
cmp
clc
inc
add
cs
xchg
lcall
add
imul
sbb
js
hlt
push
add
push
inc
add
addl
roll
addl
add
add
add
out
add
or
xor
dec
test
lods
pop
pop
add
cmpsb
add
add
pop
fwait
rcl
repz
clc
addb
mov
imul
test
rorl
add
dec
imul
push
mov
add
popa
add
xchg
sbb
jl
xor
stos
imul
add
xchg
add
dec
add
lcall
movl
out
testb
push
inc
add
mov
stos
xlat
add
stc
icebp
cmp
and
rolb
shlb
add
xor
mov
clc
scas
inc
add
add
jno
call
add
into
cld
mov
add
std
inc
add
pop
addb
cltd
inc
add
add
sub
pop
add
hlt
xor
lcall
mov
stc
jno
ljmp
jp
add
cmp
sahf
cmp
add
sahf
add
je
in
adc
lcall
add
ret
add
jne
inc
add
pop
cs
loop
ljmp
test
sbb
popa
add
push
cli
mov
dec
movb
lds
ret
add
sbb
push
pop
mov
test
add
test
add
sbb
add
mov
jb
jmp
add
fiadds
cmp
insb
outsb
cmp
add
loope
ja
add
push
push
outsb
sub
pop
add
inc
add
xor
jns
add
lahf
adc
jp
cmc
jmp
add
xor
incl
xchg
ret
add
add
add
leave
push
add
cmc
addb
add
fadds
add
jmp
and
out
stc
adc
mov
movsb
add
movl
jnp
scas
sub
push
arpl
pushl
add
pushf
or
add
adc
ljmp
fcmovbe
sub
mov
jnp
mov
mov
insl
push
add
sbb
test
adc
inc
add
push
fcomip
clc
fnstenv
mov
ret
add
jecxz
jecxz,pn
jg
add
lahf
jle
add
inc
add
or
push
and
decl
mov
loop
xchg
pusha
add
jb
mov
rcll
add
aas
int3
push
add
out
mov
pushl
lea
jbe
add
jle
push
add
dec
or
and
pushl
add
mov
mov
add
pop
jecxz
in
pushf
scas
cwtl
loopne
pop
nop
adc
or
movl
pop
add
popa
add
adc
jl
jne
cmp
pushl
lcall
xor
call
mov
addl
mulb
test
stc
fcoms
test
add
out
test
mov
add
pop
mov
mov
fcmovbe
leave
addl
movl
add
lods
addl
jg
xchg
or
add
add
add
insl
mov
xchg
in
mov
mov
add
add
jecxz
push
insl
repnz
fidivrs
mov
fbld
add
cmp
dec
mov
nop
push
outsl
adc
dec
push
add
add
ljmp
addb
dec
sbb
cmp
jmp
add
mov
pop
fcmovu
fsubrl
js
mov
das
mov
add
push
add
mov
add
add
jne
lahf
add
jmp
cmc
ret
add
add
sti
les
push
add
inc
add
addl
aam
addl
add
and
add
ret
add
adc
adc
xlat
test
cli
push
lahf
cmpsl
add
add
lahf
jmp
xchg
mov
jo
incl
lcall
add
ds
inc
add
add
add
xchg
loop
xchg
in
fld
add
add
jnp
add
xor
mov
add
nop
addb
adc
jmp
add
pop
aad
fdivl
add
sub
add
adc
lcall
jne
xor
pop
jg
add
in
xchg
xor
cli
pop
roll
and
lcall
ljmp
loope
mov
add
add
mov
add
incl
add
dec
imul
test
lds
mov
add
jl
add
sbb
movb
dec
and
sub
add
push
push
or
sub
xchg
dec
mov
mov
add
add
jl
push
icebp
adc
sub
aaa
lahf
mov
call
jnp
or
and
incl
incl
decl
add
xor
aas
jl
add
inc
add
cs
jmp
add
and
clc
pop
mov
add
data16
mov
sbb
xchg
mov
mov
ds
add
ljmp
add
add
jle
pop
push
or
subps
mov
add
cmc
test
mov
add
xchg
adc
mov
xor
add
sahf
mov
dec
ljmp
outsl
add
mov
dec
mov
add
rclb
pop
pop
clc
jmp
add
pop
push
add
lds
stos
xor
lcall
jo
push
dec
lcall
addl
add
mov
add
nop
imul
add
fistl
add
rcrb
inc
add
add
inc
add
cwtl
push
movsb
add
dec
in
mov
cmp
pushl
pop
mov
dec
lock
add
add
add
dec
and
ljmp
pushl
and
lcall
stos
sbb
movl
arpl
call
add
mov
add
push
lret
mov
cmp
add
add
addb
add
add
add
xchg
mov
add
add
pushl
inc
add
bound
incl
sti
sti
xor
pushl
add
lea
addl
sub
movsb
add
mov
add
add
cli
cmp
fists
addl
addb
repnz
decl
scas
add
and
jmp
adc
incl
ret
add
adc
jp
push
je
shr
adc
jmp
xchg
and
pushl
push
add
inc
add
std
or
add
add
add
lcall
daa
add
add
cld
shll
nop
jg
add
call
dec
dec
jno
jmp
add
pop
aas
adc
mov
add
jmp
movsl
add
mov
iret
addl
inc
add
popf
stos
mov
add
es
add
mov
pop
add
mov
lods
xchg
push
add
std
xor
out
loope
clc
adc
jmp
add
adc
jmp
jle
add
in
sub
push
xchg
nop
and
roll
add
add
add
xchg
jl
push
add
and
std
sbb
jns
mov
add
add
in
loop
add
lea
ds
in
cmp
sbb
inc
add
add
cld
or
add
repnz
adc
lods
jb
incl
cmpsl
add
add
dec
and
pushl
repnz
jmp
add
add
call
mov
call
mov
add
addb
fcoml
dec
sub
sti
or
cltd
and
decl
out
mov
add
mov
js
add
jo
ljmp
into
loopne
pop
add
add
icebp
mov
and
lcall
mov
or
mov
ljmp
loop
push
add
pop
adc
jmp
incl
pushl
lret
adc
mov
mull
decl
add
add
push
jecxz
pop
mov
and
mov
mov
pop
push
push
add
pop
ljmp
add
pushl
add
add
add
cwtl
sub
cld
loopne
cmp
add
cmc
add
aas
sbb
add
leave
dec
xchg
out
xchg
xor
jmp
add
cmp
add
movsl
add
adc
test
mov
cmp
mov
add
add
data16
mov
je
scas
cwtl
add
jmp
add
add
int3
push
outsl
cmc
dec
incl
jp
add
psubb
stos
mov
lcall
jb
incb
insl
rolb
mov
pop
pop
add
or
inc
add
dec
lret
aaa
inc
add
add
xor
sbb
repz
addl
jecxz
lock
int3
fistpl
pop
mov
sbb
lcall
in
les
push
dec
adc
jmp
add
add
sub
or
ljmp
pushf
mov
add
add
add
pop
add
add
mov
mov
pop
lods
push
add
add
add
push
lock
incl
add
jo
ljmp
add
cmp
xrelease
and
call
xor
dec
xchg
pop
test
rolb
add
adc
decl
repz
fucomip
loop
aam
out
clc
push
add
jae
jmp
add
call
add
xor
sub
sahf
insl
mov
decl
add
fists
add
ljmp
int
pop
stos
ficompl
out
test
sub
add
mov
sbb
call
adc
mov
adc
cmpsb
add
add
jmp
add
add
test
and
push
pop
sub
add
lcall
push
inc
add
pop
jbe
add
xor
jmp
xor
jmp
daa
add
jbe
cmpsb
add
add
dec
pop
mov
imul
add
loopne
lcall
idivb
mov
add
fistl
data16
sti
inc
add
add
jne
xchg
popf
pop
ja
mov
or
add
pop
sub
lods
cmp
add
test
outsl
stos
xchg
jp
push
add
add
inc
add
inc
add
add
push
sbb
add
xchg
add
ljmp
add
into
push
add
add
mov
call
test
mov
dec
cmpsb
add
pushf
mov
jae
jmp
add
add
jp
xchg
add
dec
in
icebp
ret
add
mov
xor
call
cmp
add
mov
add
mov
and
daa
add
rolb
add
sub
xchg
fcomps
mov
add
cmpsb
add
add
add
incl
hlt
clc
mov
add
scas
inc
add
or
sti
add
call
add
iret
jmp
add
add
add
or
add
mov
aad
add
test
add
lcall
add
sbb
bnd
pushl
add
pop
push
rcrb
iret
adc
pushl
add
movb
loop
imul
pop
sub
pusha
add
mov
add
add
mov
sbb
ret
add
js
mov
pop
test
outsb
imul
enter
jmp
add
int3
xchg
imul
ret
push
xchg
std
insb
cmp
mov
jmp
add
test
xor
decl
mov
mov
jns
and
incl
add
or
sub
decl
mov
pop
cwtl
mov
sbb
add
mov
add
xchg
lret
add
and
ljmp
ret
add
cmp
sub
add
rolb
cli
jae
pushl
decl
pushl
test
dec
mov
add
add
ljmp
add
pop
add
fwait
dec
pushf
and
mov
jbe
ret
mov
add
sbb
and
incl
and
incl
adc
jl
add
sub
add
cmp
decl
mov
repnz
jmp
jb
decl
das
nop
dec
jecxz
push
out
insl
daa
add
mov
addl
mov
add
out
lcall
je
out
jp
add
icebp
enter
insb
inc
add
jp
adc
call
fidivl
add
dec
aaa
sub
jbe
push
xor
inc
add
cmp
mov
or
add
pushf
insl
pop
pop
xchg
test
int3
lds
arpl
lcall
stc
and
jmp
add
incl
add
jmp
add
add
popf
adc
pushl
cld
inc
add
addb
add
add
into
cmp
add
add
inc
add
add
ja
add
stos
jge
fisubrl
add
add
add
cmp
ljmp
add
ljmp
lahf
iret
and
jmp
stc
hlt
not
mov
dec
outsb
popf
cmp
addb
inc
add
add
fcoml
add
lock
add
iret
add
mov
add
movb
cmp
add
mov
add
add
jmp
sbb
aas
or
les
je
sub
ja
add
jno
call
rorl
or
adc
jg
add
add
ret
add
add
sub
add
in
or
push
int
repnz
aad
lods
into
sub
jg
out
scas
addl
add
sti
or
push
jg
or
lahf
jnp
sub
cmpsl
add
xor
sub
fbstp
out
popa
add
std
pusha
add
jp
add
cltd
push
push
add
mov
stos
arpl
jmp
add
movsb
add
int3
aam
xchg
or
movb
add
insb
jl
fisubrs
jl
nop
xor
push
add
mov
add
inc
add
mov
push
add
rorl
loope
sbb
mov
add
inc
add
add
jmp
add
mov
adc
incl
xor
add
and
mov
mov
loop
push
stos
out
and
xor
lcall
add
add
decl
fcmovne
push
movb
lcall
clc
iret
scas
outsb
cmc
push
add
jmp
add
jnp
enter
ja
mov
movsl
add
add
xchg
mov
inc
add
movb
mov
mov
inc
add
mov
bound
jmp
jmp
jmp
cld
mov
add
out
in
fimuls
dec
mov
add
add
add
mov
mov
jge
xor
lcall
pop
cli
inc
add
or
movsl
add
pushl
inc
add
add
jnp
mov
add
mov
jmp
add
lods
aaa
cld
mov
add
add
daa
add
decl
xchg
sub
pop
adc
shll
add
repnz
sub
mov
add
dec
je
pop
mov
add
jmp
add
ret
push
add
aas
jge
fcoms
add
push
add
jl
js
loop
fcoml
add
jmp
add
add
popf
sbb
jg
add
add
add
cmp
ljmp
mov
scas
push
icebp
pop
roll
in
mov
mul
add
call
adc
pushl
test
cmp
push
and
add
ljmp
imul
mov
mov
push
pop
fs
sub
add
aas
mov
add
lods
add
pop
add
mov
add
add
mov
test
in
xchg
and
add
mov
loopne
iret
enter
scas
cwtl
dec
push
add
mov
jg
call
ds
inc
add
aam
add
add
dec
and
mov
inc
add
js
les
lods
clc
js
add
adc
call
pop
push
add
aaa
lods
sbb
add
add
add
sub
xchg
aas
out
dec
arpl
incl
mov
and
jmp
mov
add
inc
add
mov
addb
xor
xchg
dec
mov
add
mov
add
cmpsb
add
add
push
xor
jg
mov
add
jns
jp
fdivrs
mov
decl
test
inc
add
repz
aaa
cld
leave
hlt
add
mov
aad
add
sbb
add
mov
jmp
test
add
movl
pop
pop
inc
add
push
testb
decl
jnp
ljmp
add
mov
xor
pushl
aas
cmc
ljmp
xchg
punpckhdq
push
mov
cltd
test
add
mov
jb
pushl
add
movsl
add
std
push
jp
mov
xchg
pop
or
add
cmp
add
dec
and
les
dec
lcall
mov
add
lock
mov
mov
add
aaa
jle
ret
add
push
add
inc
add
jmp
dec
mov
addb
jnp
sub
add
add
add
sub
add
addb
mov
bound
jmp
add
pop
push
add
sti
fwait
add
jmp
daa
add
xlat
std
fstl
add
mul
add
stos
push
sbb
pushf
cmp
repnz
jge
mov
add
lods
stc
mov
sub
fyl2x
mov
inc
add
jmp
add
push
movb
ret
add
int3
popa
add
int
jae
cmp
in
add
add
testl
mov
out
stc
stos
push
pusha
add
xor
push
add
push
xchg
add
inc
add
add
test
mov
cmp
or
add
push
lods
adc
mov
add
add
sahf
ds
add
mov
jmp
add
adc
add
ljmp
arpl
inc
add
push
int
add
rcll
into
daa
add
dec
inc
add
add
jp
adc
jmp
popa
add
jns
jmp
push
add
sbb
add
push
pop
mov
mov
jbe
addb
ret
insl
daa
add
sbb
faddp
add
jmp
dec
mov
xchg
outsb
or
into
fmull
mov
add
pop
inc
add
xchg
test
sbb
out
jnp
xor
pushl
add
fistpll
inc
add
pop
daa
add
add
add
mov
push
sub
test
mov
xchg
mov
add
mov
push
mov
xor
pushl
insl
and
lcall
and
call
clc
popa
add
push
mov
sub
add
ljmp
imul
stos
movl
decl
add
add
jmp
jmp
dec
hlt
rolb
inc
add
lcall
mov
add
int3
mov
push
lock
fcomps
lret
mov
lds
adc
decl
fsubs
add
adc
inc
add
add
cs
add
fdivrl
ljmp
sbb
xchg
push
add
sub
add
jg
test
popf
hlt
addl
add
adc
incl
jmp
add
sub
add
mov
and
lcall
mov
lret
pop
or
hlt
lret
or
mov
mov
test
adc
pushl
add
xchg
nop
ljmp
mov
outsb
popf
lcall
jnp
mov
dec
mov
inc
add
cmp
movsb
add
jl
shr
loope
lods
mov
xchg
sbb
mov
pop
out
mov
ljmp
inc
add
movsb
add
add
push
jb
call
dec
loope
pop
or
cmpsb
add
jl
shll
fsubrl
out
cmp
call
in
fsub
add
addl
add
mov
add
and
jnp
mov
dec
cwtl
mov
and
decl
add
repz
jmp
addb
jecxz
cmpsb
add
add
xchg
mov
add
xchg
fistpll
mov
jp
add
adc
psubq
mov
add
mov
adc
decl
insb
stos
fwait
push
add
stc
push
outsl
dec
popf
add
dec
jae
incl
lcall
loopne
mov
mov
add
ret
pop
fs
push
mov
add
bound
jmp
mov
cmp
repnz
add
add
add
sbb
and
incl
add
test
scas
imul
addb
add
sahf
xchg
test
mov
add
mov
xchg
jmp
pop
mov
sub
add
lret
sbb
out
bound
lcall
or
xchg
mov
call
add
add
pop
mov
add
jmp
sub
ljmp
aaa
push
add
add
pushl
ret
add
add
jecxz
pop
dec
mov
ret
daa
add
lds
or
add
cmp
jb
cld
js
movsb
add
add
add
incl
call
add
in
and
mov
fidivrs
lods
xor
decl
add
cmp
add
add
add
push
scas
pushf
sbb
ret
add
out
push
add
add
push
bound
push
push
sahf
sub
call
mov
add
add
inc
add
and
popf
loop
push
scas
outsl
lahf
mov
cld
lcall
jle
add
int
cmp
add
clc
stos
ljmp
icebp
mov
call
add
and
decl
and
jg
add
pop
pop
xor
cmp
sub
add
dec
or
add
pop
in
mov
cwtl
das
in
jbe
adc
push
jge
cltd
inc
add
call
inc
add
add
jmp
incl
mov
xlat
mov
leave
adc
push
lods
divl
add
lds
xor
pushl
jns
add
xor
cli
es
pop
pop
add
push
push
lods
sbb
fildl
add
add
add
call
cli
movl
add
js
jns
jle
add
push
sti
push
scas
iret
jnp
add
fcompl
add
add
xor
incl
dec
cmp
add
cld
xchg
add
mov
jmp
jmp
add
cs
hlt
fisttps
add
incl
das
test
add
cltd
scas
aam
xor
lcall
mov
mov
ljmp
mov
mov
mov
xchg
jle
add
push
push
push
fdivrs
les
cmc
inc
add
insb
out
pop
test
add
jmp
add
jle
in
test
xor
lcall
inc
add
jl
mov
imul
add
enter
bound
jmp
lcall
cld
push
add
or
xchg
fdiv
push
ljmp
adc
loopne
or
add
add
pop
xor
jmp
stos
dec
movsb
add
lods
ja
sub
sub
add
sub
add
mov
jle
sbb
mov
add
add
jg
push
push
or
in
outsl
jae
incl
leave
or
add
bound
pushl
mov
add
xor
jmp
jmp
jmp
in
rolb
and
ljmp
mov
add
arpl
cmp
cld
imul
adc
mov
ret
add
mov
add
decl
mov
clc
sub
inc
add
popa
add
cli
inc
add
fbstp
das
xor
call
push
sahf
and
jle
mov
fisttpll
jmp
mov
add
add
mov
stos
lahf
sub
aam
stos
sbb
add
cmpsl
add
mov
add
ret
pop
mov
cmpsb
add
add
sbb
dec
jg
add
je
add
add
incl
add
add
dec
mov
ds
repz
and
jle
add
pushl
add
nop
sbb
xchg
jp
add
xor
int
add
add
cmp
stc
lea
add
add
movl
cltd
inc
add
jne
dec
addl
cmpsl
add
push
add
adc
call
add
movsl
add
lcall
rolb
fistl
pusha
add
jnp
add
add
ljmp
add
incl
nop
add
roll
cli
imulb
inc
add
pop
mov
insb
jle
ljmp
addl
les
jae
ljmp
add
mov
insl
inc
add
sti
mov
mov
jmp
mov
lcall
pusha
add
lods
clc
lods
adc
call
dec
jo
inc
add
lret
incl
add
jmp
add
add
push
add
xor
incl
lcall
pop
in
cwtl
sbb
mov
lret
sub
fistpl
add
ret
imul
cmp
add
mov
dec
popl
add
and
call
or
jmp
decl
xlat
and
inc
add
xchg
add
pushl
addl
pushl
and
add
lcall
repz
mov
xchg
pop
pushf
mov
movb
sub
add
lds
fwait
cld
push
cmp
fmuls
add
stos
and
fmul
inc
add
mov
jae
incl
add
out
xchg
xor
push
dec
scas
hlt
pop
add
arpl
lcall
add
aas
jge
dec
push
add
pop
in
xchg
dec
sub
ljmp
sub
push
mov
cmp
add
loope
jl
das
sbb
insb
rcrl
add
filds
call
mov
sub
add
add
mov
dec
xor
or
mov
ret
add
repz
add
fistpl
sbb
xor
and
aas
scas
arpl
incl
ret
add
dec
cli
rcl
ret
and
call
xor
pushl
sahf
jne
dec
xchg
mov
fstpt
out
and
dec
dec
add
lcall
add
mov
dec
lahf
mov
add
add
pushl
clc
popa
add
jge
add
aad
xchg
popf
les
aam
js
add
jmp
add
add
jmp
mov
dec
mov
mov
loop
sbb
loope
in
xor
repnz
cltd
or
adc
mov
add
inc
add
add
sbb
pop
lcall
add
adc
jmp
add
mov
ret
addr16
stos
bound
jmp
clc
add
decl
jae
push
lret
stos
data16
add
fnstsw
xor
clc
sti
inc
add
push
add
cltd
inc
add
sti
outsl
cltd
lret
les
add
data16
dec
out
xor
cli
addl
or
add
dec
mov
add
jle
lret
in
sub
add
xor
incl
push
add
pop
lret
or
add
and
incl
call
add
ljmp
push
loop
xor
decl
js
add
cmpsl
add
add
sub
add
sbb
decl
mov
mov
movsb
add
add
dec
int
add
add
mov
dec
jmp
add
jp
mov
mov
dec
cmp
push
add
inc
add
pop
push
cwtl
mov
addb
push
pushf
add
ret
add
and
mov
mov
add
add
add
adc
clc
dec
icebp
outsl
test
add
sti
nop
pop
add
stos
push
test
pop
in
xchg
inc
add
add
add
mov
mov
bound
jmp
add
add
roll
lcall
mov
add
in
xor
arpl
ljmp
lods
or
jmp
jle
movl
daa
add
roll
inc
add
xor
cmp
add
xchg
inc
add
mov
mov
jo
fadds
decl
dec
pop
je
mov
jmp
clc
inc
add
in
jo
lcall
add
push
add
dec
pushf
mov
test
pop
cmp
add
or
imul
data16
addl
jb
ljmp
pop
loop
pop
test
sbb
lcall
add
aad
mov
int3
lock
add
rcll
add
add
push
mov
sub
add
sbb
sub
add
mov
sub
mov
mov
push
pop
inc
add
cmc
test
loop
pop
mov
jmp
add
or
add
shll
cld
xchg
mov
push
add
mov
push
add
mov
or
call
mov
and
add
add
jbe,pn
inc
add
add
sbb
ljmp
fadd
add
add
call
ret
popf
cs
loope
ja
movsb
add
lcall
mov
add
fildl
decl
mov
insb
rcrb
adc
incl
push
pop
add
pushl
js
jg
add
mov
rclb
movq
add
mov
cmp
add
cwtl
mov
xor
push
jne
dec
cs
movl
lock
push
add
arpl
call
call
aaa
sbb
push
sbb
add
pushl
stc
pop
je
add
mov
add
out
add
push
lods
loop
push
mov
push
xchg
and
jmp
add
stos
cld
pop
fwait
pushf
and
incl
add
mov
ret
add
arpl
mov
push
rcl
add
push
pop
add
call
rep
xchg
lret
add
fld
add
add
sbb
add
add
lock
or
or
std
in
out
dec
out
pop
add
push
add
scas
notb
jge
mov
cmp
sub
pushl
add
fstl
clc
xchg
add
in
pop
cmp
add
call
lahf
lea
add
add
ljmp
add
imul
xchg
xchg
movsl
add
xor
stos
mov
sub
add
add
pop
jl
add
lcall
add
decl
add
movb
add
add
lahf
add
imul
cli
insb
push
add
adc
decl
mov
add
fmul
sub
lret
dec
mov
add
lods
mov
sbb
mov
add
sbb
dec
adc
mov
xchg
mov
add
lcall
dec
jnp
and
push
add
xchg
lods
testl
add
add
add
pop
gs
cmp
push
add
mov
icebp
rolb
add
popa
add
jnp
add
xor
decl
inc
add
adc
stc
mov
icebp
push
add
xor
jmp
add
add
scas
xor
pushl
ja
jo
decl
mov
ja
lret
mov
jno
dec
push
add
aas
pop
and
mov
add
add
lcall
hlt
std
sbb
mov
add
imul
cmc
pop
xchg
aam
inc
add
popf
test
lcall
call
cmp
daa
add
sbb
popf
cmp
sub
lret
mov
cmp
add
add
add
adc
pushl
jmp
add
daa
add
jp
add
decl
xchg
icebp
dec
xor
decl
cmp
add
jns
pop
sub
add
add
adc
pushl
add
xchg
popf
ret
cli
movsl
add
sub
pop
add
cwtl
add
add
out
popf
rol
add
add
push
pop
add
cmp
cmp
dec
in
sbb
add
xchg
inc
add
sbb
add
cmp
dec
movsb
add
add
add
add
iret
fmull
add
xchg
cld
xlat
out
enter
bound
pushl
call
cmp
icebp
sub
add
jmp
call
xchg
sbb
push
add
call
out
xorps
cmp
add
not
fwait
rorl
cmp
cmpsl
add
sbb
std
addl
add
dec
push
add
stc
and
clc
aam
add
shrl
sbb
cs
add
xchg
imul
add
fcmovnu
pop
stos
aad
data16
add
icebp
jge
add
add
sbb
mov
lock
mov
cmp
int3
mov
cmc
adc
add
lcall
add
decl
adc
incl
push
cmp
adc
aas
push
xor
stc
mov
incl
rolb
dec
mov
jmp
ss
add
call
add
add
jmp
add
add
add
fisubl
mov
lcall
xchg
mov
add
jmp
jmp
cld
mov
dec
mov
add
cmp
inc
add
cld
pop
mov
add
lcall
lret
mov
add
neg
cmp
add
out
jae
lcall
jbe
add
out
daa
add
add
stc
rolb
ficoms
push
add
loopne
cltd
ja
add
cli
dec
xor
mov
mov
ret
add
iret
add
imul
and
incl
jmp
xor
sub
xor
and
add
incl
jmp
incl
add
cmp
jmp
rolb
add
add
or
or
jl
sub
add
outsb
clc
dec
roll
add
add
add
fisubrs
adc
call
add
pop
push
and
dec
inc
add
xor
add
add
cmp
add
add
outsl
xor
push
add
push
add
inc
add
sbb
push
xchg
jmp
adc
add
jo
stc
nop
clc
movsb
add
fdivrp
cmp
dec
lcall
add
and
decl
cli
jae
in
add
add
lahf
add
std
mov
lcall
add
aaa
jmp
add
fstps
add
inc
add
add
fsubrs
lret
outsb
and
decl
call
sahf
and
pushl
and
pushl
cmp
mov
jnp
xor
out
or
add
xchg
jns
push
add
mov
xor
decl
add
aam
xchg
mov
jmp
add
xchg
push
xor
decl
out
jnp
pop
call
pop
and
leave
xchg
jmp
add
mov
pop
jae
decl
add
out
jg
testl
add
jo
jmp
add
ret
adc
add
mov
add
inc
add
fimull
mov
loope
or
add
cwtl
ja
add
mov
and
dec
xchg
cmpsl
add
push
add
mov
xor
decl
adc
add
jmp
add
and
fdivrp
pop
je
jae
incl
mov
mov
daa
add
sahf
add
decl
add
push
mov
add
ljmp
movsl
add
shrb
xlat
pop
add
mov
add
mov
stc
movsl
add
add
ljmp
roll
jo
jmp
lret
sub
addl
decl
xor
fld
add
mov
lret
add
cmp
add
cmp
fmul
pop
jg
add
decl
pusha
add
lods
pop
nop
add
and
js
dec
nop
popa
add
movl
add
stc
dec
xor
call
int
inc
add
inc
add
test
sbb
pushf
cmp
dec
aad
xlat
lea
fidivrl
add
add
das
dec
pop
push
add
call
xchg
addb
add
in
hlt
ljmp
lcall
lea
add
adc
add
addb
ds
sub
lcall
inc
add
call
adc
incl
add
add
or
add
add
fst
pop
ret
add
mov
in
int3
sti
jg
fadds
cli
sub
imul
add
lds
jecxz
xor
incl
rcr
ss
cmp
add
add
dec
inc
add
scas
mov
call
jmp
push
mov
cmp
add
add
repz
add
mov
add
sub
addl
mov
add
xchg
mov
add
add
adc
in
imull
cld
jb
fsubs
sbb
movb
add
add
movl
incl
dec
das
cmp
lahf
ljmp
pop
inc
add
add
enter
add
xor
fisttpll
xlat
mov
and
push
imul
add
dec
lahf
dec
sub
mov
repnz
repnz
out
push
mov
and
jmp
xchg
add
jp
movb
add
push
jb
pushl
jnp
sbb
roll
cmc
sbb
push
add
add
jmp
add
pop
pop
movl
sub
xchg
movsb
add
dec
fdivl
inc
add
movl
cmp
add
sbb
jp
movl
movsl
add
outsb
aaa
idivb
jbe
inc
add
ss
mov
mov
outsb
mov
xor
lcall
cmp
add
into
js
fprem1
pop
in
jnp
iret
push
stos
ljmp
movsb
add
incl
add
lods
lock
in
pop
push
add
cltd
addb
push
add
inc
add
add
cmp
loop
out
add
movb
push
pop
xchg
rclb
incl
add
add
add
add
jmp
jmp
decl
add
xor
ljmp
mov
add
add
insb
cld
lock
mov
xchg
jl
mov
push
add
les
add
incb
sahf
sahf
ljmp
lods
sbb
add
xchg
jge
add
add
jno
jmp
insb
pop
fbstp
xor
lcall
mov
roll
cmpsl
add
aas
scas
cli
sub
jp
out
dec
mov
jge
add
push
add
jg
das
lahf
insb
lock
adc
fistpl
add
nop
cli
pop
iret
sbb
jmp
mov
add
add
add
fsubrp
aas
popl
movsb
add
je
icebp
inc
add
mov
xchg
and
add
jbe
add
add
sti
mov
decl
dec
addb
dec
addb
pop
add
adc
incl
mov
cs
pusha
add
or
and
enter
jp
pop
adc
pushl
add
lcall
add
add
hlt
insb
pop
ret
add
add
mov
xchg
rcrl
sub
outsb
aas
pushf
cli
mov
lods
sbb
arpl
lcall
add
jg
push
add
jecxz
pop
notb
add
mov
add
push
add
cmp
mov
aad
add
xchg
inc
add
mov
jle
add
lcall
mov
lock
or
jo
fldenv
cmc
jle
add
xchg
and
incl
push
fnstcw
sbb
addl
add
cmp
cli
xor
decl
adc
dec
and
call
sub
incl
add
shrl
add
push
add
loop
jecxz
push
add
xchg
sbb
add
jno
decl
add
and
imul
mov
jge
pusha
add
loopne
cwtl
pop
pop
add
sub
test
xor
lcall
je
jae
jp
out
test
sahf
ja
add
xor
ljmp
mov
leave
testb
addb
inc
add
pop
pop
das
or
mov
addb
jo
fdivrp
dec
out
loope
pusha
add
out
push
jne
mov
add
sub
add
add
js
add
pop
add
aaa
das
xchg
ret
add
aas
cmpsb
add
fists
ljmp
cs
xor
add
mov
push
ficoml
ljmp
shrb
push
add
roll
add
add
pushl
add
ret
add
test
daa
add
xor
dec
aam
add
aam
add
add
sbb
add
data16
sbb
add
pop
icebp
insl
mov
add
addl
mov
cld
pop
push
lret
mov
fisttps
xor
jnp
aas
fcoms
pushl
incl
add
jnp
add
aaa
mov
fldenv
scas
cld
arpl
cmp
add
clc
jmp
add
stos
mov
jge
daa
add
add
push
fdivl
add
mov
stc
jg
add
dec
pop
sahf
add
inc
add
in
jno
jmp
add
push
add
test
lret
lea
incl
inc
add
dec
lods
data16
shll
ljmp
scas
addb
ret
add
add
add
mov
add
dec
push
xchg
cmp
pusha
add
add
std
pop
hlt
mov
mov
jnp
outsl
test
pop
in
mov
lcall
add
je
sbb
add
jl
add
fcmove
pop
push
add
jns
cmp
addr16
and
ljmp
aas
push
inc
add
xchg
sahf
roll
add
add
stos
or
out
out
cmp
dec
daa
add
add
add
xor
sbb
push
add
and
jmp
add
adc
call
jo
or
int3
or
add
nop
test
shlb
add
popf
pop
add
sbb
push
inc
add
add
push
add
lds
pop
fistps
xchg
adc
call
xlat
adc
je
add
add
jecxz
adc
sbb
adc
and
call
add
mov
negl
movsl
add
dec
daa
add
int3
xchg
sbb
add
roll
add
popa
add
lret
imul
mov
add
add
cmp
loope
and
roll
and
incl
add
loopne
add
decl
add
in
cmp
stos
loopne
mov
cmp
xchg
jo
dec
mov
add
add
addl
add
xchg
add
add
jmp
add
add
fnsetpm(287
add
das
push
daa
add
daa
add
rolb
add
icebp
popa
add
stos
mov
mov
stos
lcall
add
pop
adc
movb
scas
push
stc
adc
das
data16
test
or
add
add
push
mov
pop
sti
or
adc
mov
clc
inc
add
ficoml
decl
xchg
pop
movb
lea
and
rcll
add
mov
push
add
add
sbb
imul
movl
add
testb
mov
add
xchg
inc
add
xchg
popf
xor
decl
xchg
rolb
add
in
sbb
adc
adc
jmp
jle
inc
add
jg
cmpsl
add
inc
add
pop
popf
addl
addl
inc
add
pusha
add
mov
popa
add
adc
cmp
imul
add
add
shl
add
mov
ds
into
jo
cmp
mov
add
add
add
dec
mov
add
sbb
setns
jp
add
push
add
lock
add
cmc
scas
adc
call
movb
add
jge
hlt
xor
incl
aam
push
add
inc
add
add
lock
mov
jae
call
add
xchg
dec
add
call
add
and
lahf
cs
xchg
mov
add
push
paddsw
add
mov
xchg
xchg
shrd
xchg
data16
add
sub
in
stos
ljmp
add
add
add
sti
pop
addb
aas
push
add
add
ljmp
jmp
sbb
adc
jnp
ljmp
outsl
das
loop
movsb
add
decl
scas
add
dec
adc
decl
cli
pushf
mov
add
add
or
mov
cli
pop
and
jbe
and
decl
cli
add
pushl
add
into
insl
aad
popf
data16
add
jb
call
sbb
jle
ljmp
scas
shll
add
insl
dec
ljmp
test
push
add
lods
pop
aas
dec
in
out
shl
add
ds
inc
add
adc
push
cmpsb
add
add
daa
add
mov
add
jl
repz
decl
inc
add
cmp
jge
inc
add
out
adc
jmp
add
lcall
add
dec
xchg
xor
ljmp
add
sbb
repz
jmp
add
or
add
add
addb
add
add
aaa
and
cli
mov
lret
out
mov
add
dec
jae
push
in
jl
enter
or
xor
add
mov
add
add
push
add
jg
add
sbb
aam
add
xor
dec
aas
pushf
fdivs
add
out
xor
mov
pop
stos
sbb
pop
mov
adc
decl
jle
mov
ds
leave
iret
pop
ret
fwait
imul
pushl
pmullw
pop
pop
roll
aad
cli
inc
add
incl
lods
or
add
add
decl
insl
loop
inc
add
icebp
jbe
sti
lcall
xor
incl
xor
ljmp
loop
ds
add
nop
and
cmp
inc
add
lock
mov
pop
add
add
mov
or
pop
in
jne
add
sti
add
sbb
js
scas
mov
pop
inc
add
add
sarl
cmpsl
add
lds
bsf
pop
popa
add
sub
add
cmp
jns
mov
out
test
mov
jl
rorl
shrl
add
xchg
dec
sub
and
call
dec
jno
jp
data16
add
jae
ljmp
js
jmp
insl
test
dec
rolb
jp
add
add
ds
cld
xchg
insl
lret
add
out
xor
jmp
add
popf
ds
test
jecxz
loopne
shlb
add
fsubrs
add
xchg
inc
add
int3
pop
fldenv
push
add
dec
and
pushl
add
call
mov
ja
push
inc
add
shlb
daa
add
outsb
dec
xor
lcall
xchg
fidivs
push
insl
push
mov
add
add
pusha
add
mov
mov
ljmp
add
add
dec
mov
add
add
js
dec
add
add
add
mov
mov
sti
out
dec
adc
lcall
add
int3
int
cmc
adc
lods
aam
arpl
stos
sbb
add
push
stc
xor
ljmp
cmpsl
add
out
push
jae
decl
sbb
add
outsb
push
add
adc
ljmp
jb
call
call
xchg
sub
add
and
decl
add
es
add
mov
add
push
add
sub
enter
pop
xchg
adc
call
nop
and
ljmp
and
push
pop
mov
sub
add
dec
xlat
je
add
pop
dec
push
add
xor
ljmp
push
sbb
add
mov
add
loopne
in
push
add
add
in
pushf
pop
or
rorb
cmp
jb
push
stos
dec
fstpl
add
add
and
incl
lcall
add
imul
xor
pushl
add
dec
xchg
insl
xor
jg
add
fdivr
mov
add
fs
add
mov
dec
scas
sbb
aam
add
incl
add
hlt
cmp
add
call
and
inc
add
in
inc
add
lcall
roll
add
sbb
ljmp
push
sub
mov
insb
push
pop
cmp
je
add
add
add
popf
jbe
add
mov
push
push
movb
jne
push
fadd
add
jmp
xor
incl
jbe
or
push
stc
pop
out
or
ret
push
add
enter
add
ljmp
add
and
and
jmp
add
shll
sub
push
add
and
push
cmp
test
add
inc
add
daa
add
xchg
psubusw
sti
enter
add
bound
pushl
add
out
push
add
mov
add
push
cld
push
add
movb
std
pop
jg
add
lds
enter
mulb
add
adc
incl
add
ljmp
jbe
addb
cmp
mov
lahf
sub
xchg
jbe
push
add
cmp
cmp
push
mov
ljmp
movl
dec
push
push
mov
imul
jmp
push
add
inc
add
popf
pop
dec
pop
inc
add
cmp
jle
add
add
ljmp
pop
and
and
call
dec
xor
cli
cmc
push
add
jge
add
js
pop
jnp
add
add
and
lcall
add
mov
or
add
and
pop
mov
test
add
jge
and
ljmp
ja
dec
outsl
push
inc
add
push
pop
inc
add
jnp
adc
add
out
mov
add
leave
add
mov
out
and
pop
scas
push
pop
in
popl
add
dec
xchg
pop
test
mov
cli
arpl
ljmp
and
pushl
add
mov
pop
push
cmpsb
add
sbb
xchg
lret
test
addb
and
push
add
adc
inc
add
movb
or
mov
jmp
add
add
int3
adc
ficomps
inc
add
in
dec
cmpsb
add
les
frstor
test
mov
sbb
imul
testl
add
inc
add
and
jmp
add
std
jle
ret
add
xchg
in
dec
sub
push
xchg
mov
and
add
mov
call
add
dec
sbb
popa
add
or
stc
jbe,pn
iret
mov
inc
add
jge
and
add
adc
lcall
ljmp
add
pushl
imul
dec
mov
movsl
add
repnz
rclb
mov
add
les
dec
dec
xchg
xchg
insl
push
add
push
add
jbe
add
add
add
add
repnz
cmp
add
fsubr
lods
movl
aaa
stos
sub
popl
call
call
add
mov
add
mov
dec
inc
add
ret
add
mov
call
repz
roll
ljmp
divl
pusha
add
out
imul
add
add
inc
add
outsl
cmp
add
jmp
add
fmul
rolb
add
call
adc
decl
or
mov
dec
jge
mov
fisttps
add
pop
or
push
sbb
cmp
add
push
pop
cmp
mov
mov
out
or
jae
inc
add
rolb
add
add
mov
negb
add
add
sbb
enter
add
mov
add
and
ljmp
jle
add
add
add
adc
lcall
xchg
in
outsb
inc
add
scas
sbb
stos
scas
popf
test
or
into
stos
adc
add
mov
dec
cmp
add
pushl
jmp
mov
xor
decl
add
add
add
lret
fwait
mov
movsb
add
in
mov
pop
push
add
jbe
iret
lcall
pop
adc
jmp
add
add
insl
loopne
daa
add
lcall
or
das
push
adc
incl
jmp
add
adc
decl
ljmp
loope
mov
add
out
test
ljmp
mov
push
add
lcall
xchg
out
lock
in
jp
into
shr
adc
jmp
add
sbb
jl
add
roll
add
jno
call
aad
outsl
addb
xchg
jne
add
add
jge
ret
push
add
cmp
xchg
jecxz
add
add
arpl
incl
add
add
movb
imul
add
or
xor
inc
add
and
dec
out
shll
cmpsl
add
aaa
xchg
mov
test
loopne
imul
xor
in
and
incl
add
push
add
jae
fldt
dec
dec
mov
add
add
mov
inc
add
xor
ds
out
mov
inc
add
decl
sbb
add
pop
add
and
lcall
lods
movb
add
cmp
xchg
jae
dec
roll
add
jmp
int
and
lcall
xchg
adc
stc
xor
decl
mov
add
xchg
inc
add
jae
call
add
das
outsl
xor
call
push
add
cld
stc
add
ljmp
jmp
call
add
popa
add
sahf
dec
and
ljmp
ficomps
adc
ljmp
mov
sbb
mov
dec
test
pop
add
add
sub
add
mov
rolb
xor
ficoml
xlat
imul
outsb
or
and
ljmp
add
pushf
push
add
xor
decl
jl
movl
dec
mov
pop
lea
xchg
adc
jmp
nop
ror
inc
add
add
add
ret
add
addb
and
pop
sti
jns
add
mov
add
pushl
add
push
jecxz
jnp
xor
incl
insb
mov
add
aaa
sbb
mov
sbb
pusha
add
inc
add
add
aam
add
ja
xchg
jb
call
dec
das
insb
mov
mov
jp
add
jo
push
mov
add
in
loopne
mov
cli
addr16
add
aas
dec
cmp
add
xchg
mov
fidivl
out
inc
add
les
repz
pop
jae
jmp
incl
add
mov
xchg
sub
add
test
mov
out
jbe
in
addb
add
add
js
sbb
fsub
add
mov
sti
test
into
mov
add
decl
cmp
loop
sbb
dec
leave
dec
std
mov
decl
xchg
add
add
test
mov
push
inc
add
movsl
add
add
pop
add
pop
mov
movsl
add
inc
add
fs
mov
or
and
incl
add
add
jmp
mov
push
addb
test
push
add
call
add
addl
movsl
add
imul
neg
pop
add
mov
pop
ds
fmul
cltd
call
aam
add
in
cmp
repz
add
out
imul
addb
add
jg
lret
aam
add
add
push
aam
add
rclb
jnp
add
add
int
fidivrl
lods
out
pop
push
adc
add
insl
jnp
icebp
mov
xor
jbe
xchg
stos
les
push
jle
pop
lea
test
lea
xor
jmp
incl
cmc
mov
fidivs
enter
movsl
add
pop
fmull
add
cmp
add
dec
mov
scas
sub
test
test
stos
and
lcall
pop
aam
add
das
xchg
xor
incl
add
out
pop
add
ret
add
aam
shll
incl
add
addb
add
add
add
repnz
incl
xor
out
adc
call
inc
add
outsb
add
addl
add
add
les
mov
inc
add
add
arpl
decl
pop
mov
pop
aam
inc
add
leave
loope
xor
add
repnz
mov
incl
lcall
bound
lcall
add
push
jns
ret
add
pop
std
pop
mov
jo
decl
push
add
add
add
cld
cmp
add
add
jecxz
xchg
cld
mov
and
push
arpl
call
je
and
pushl
movsb
add
add
inc
add
xchg
dec
mov
outsb
dec
movl
jl
add
aad
add
dec
in
add
add
ljmp
addl
add
mov
add
mov
lods
mov
add
add
add
add
mov
add
fadds
add
outsl
inc
add
and
call
add
fwait
dec
inc
add
clc
xchg
jno
call
add
out
push
dec
insl
xor
lcall
aad
add
jp
mov
incl
hlt
int
pusha
add
adc
call
lcall
dec
adc
decl
ret
adc
lcall
add
cmp
lcall
cmp
rcrb
popa
add
scas
adc
call
movsb
add
add
rolb
xor
out
shrb
or
insb
pop
push
roll
aaa
aaa
idivb
into
pop
pusha
add
inc
add
data16
mov
sub
imul
add
call
in
iret
nop
jbe
cmp
add
and
lcall
iret
faddl
push
rcrl
in
cld
test
sahf
sahf
sbb
loopne
sub
mov
iret
or
adc
add
lods
sbb
push
std
mov
test
ficoms
add
ljmp
jp
add
mov
scas
and
lcall
addb
add
push
into
cli
repnz
add
stos
out
lcall
fisubrl
hlt
add
test
mov
jecxz
dec
roll
add
xchg
hlt
push
add
aam
mov
imul
dec
push
mov
push
bound
jg
add
add
call
and
ljmp
add
addb
dec
mov
mov
xor
adc
pushl
add
and
call
decl
cli
dec
push
pop
push
insb
aad
js
xchg
in
adc
decl
in
and
pushl
das
stos
adc
decl
ret
add
push
add
add
xlat
lss
cmp
xchg
add
cmp
jp
push
outsl
inc
add
insl
out
fmull
enter
add
loopne
pop
adc
pushl
rolb
push
add
xchg
dec
add
mov
add
xlat
leave
out
cmp
push
rolb
add
into
xchg
sbb
add
jns
add
decl
pop
add
testb
pop
faddp
add
or
adc
call
scas
data16
add
xlat
cmpsl
add
xchg
loopne
aad
insb
sbb
push
movsl
add
mov
test
jge
push
dec
cmp
push
lds
pusha
add
fwait
aad
add
mov
mov
add
lcall
addb
sub
jbe
push
add
or
xchg
jno
decl
sub
lahf
fwait
adc
incl
lock
add
not
loopne
pop
ret
mov
add
push
lds
pusha
add
pop
js
add
mov
arpl
call
rcrl
std
lret
jno
jmp
mov
mov
or
pop
lods
and
lcall
or
add
call
in
push
add
aad
clc
add
pushf
loop
dec
lds
in
ja
add
fdivp
pop
pushf
mov
add
mov
ljmp
decl
mov
stos
add
add
in
pop
add
pop
adc
cli
cmp
add
sahf
pusha
add
in
bound
mov
add
incl
outsb
push
mov
add
adc
pushl
dec
sub
add
add
add
incl
add
in
pop
adc
jmp
add
mov
mov
add
xor
xor
jmp
add
lret
sub
ds
insl
adc
pop
imul
add
mov
add
loope
sahf
push
addb
add
loop
cmp
dec
mov
mov
add
loope
jne
imul
sbb
and
decl
pop
mov
cmp
add
testb
mov
cltd
addb
test
cld
fpatan
pop
inc
add
mov
mov
add
dec
outsl
add
adc
mov
add
addl
add
jo
mov
sbb
add
lahf
cld
out
cmp
or
ljmp
imul
movb
mov
loop
push
add
add
pop
addb
into
cmp
mov
add
xchg
lea
add
stos
pop
jp
scas
or
jge
add
stos
roll
addl
push
sahf
stc
push
add
jle
addl
in
jns
add
gs
aad
add
xchg
dec
rolb
dec
arpl
call
add
or
sahf
dec
out
push
rorl
add
imul
sbb
jnp
add
jmp
xor
jmp
add
lcall
add
incl
call
lcall
xchg
in
imull
add
add
out
ljmp
add
idivb
add
lcall
add
mov
adc
call
add
imul
jle
xchg
xchg
xlat
nop
mov
add
pop
mov
add
outsb
add
cmp
cwtl
jecxz
sar
xor
dec
adc
mov
add
and
call
into
cmpsb
add
or
add
dec
sub
pusha
add
add
pushl
test
fcoml
add
xchg
out
mov
fwait
popa
add
pop
in
je
data16
jo
inc
add
outsl
ja
jmp
add
mov
out
imul
add
add
add
add
shl
add
add
add
dec
in
shll
add
push
pop
stos
lret
push
add
test
sub
fistpll
jb
incl
add
enter
xchg
into
shrb
push
stc
into
jg
mov
cmp
mov
add
and
dec
rol
add
add
add
add
jge
inc
add
add
pop
add
add
lods
mov
pop
addb
add
or
add
dec
roll
xor
dec
jnp
pop
mov
ror
leave
add
pop
cmp
mov
jb
mov
add
and
inc
add
rorb
add
loopne
aam
aad
jo
inc
add
add
neg
xchg
xor
ljmp
movl
fidivrl
xor
jg
add
add
pop
pusha
add
dec
xor
add
add
pop
loop
sbb
jecxz
loopne
jle
cwtl
adc
daa
add
sti
or
push
jl
add
inc
add
sarb
add
add
fdivl
pop
sub
insl
out
jno
ds
outsl
pop
add
in
jnp
fiaddl
add
repz
jmp
aaa
fisttpl
add
inc
add
loop
outsl
popa
add
js
add
incl
add
or
add
push
mov
push
add
jnp
jae
mov
popa
add
fdivs
add
lret
scas
xchg
roll
mov
lret
add
xor
call
add
add
mov
or
loopne
cmp
add
daa
add
xor
inc
add
js
rolb
sub
add
add
cltd
sub
xchg
cwtl
rcrl
lcall
insb
mov
lods
pop
icebp
mov
test
push
add
jecxz
xchg
push
jbe
sub
xchg
repnz
jmp
add
addb
or
add
or
jo
inc
add
add
ljmp
lods
mov
add
dec
pop
hlt
pop
in
cmp
push
jnp
add
ljmp
add
jae
incl
add
push
pusha
add
pop
scas
lock
popf
into
or
add
add
int3
test
mov
iret
mov
outsl
insb
outsb
xchg
ret
daa
add
bound
decl
add
add
aad
add
pop
loope
and
decl
movsl
add
add
and
or
or
adc
inc
add
or
sbb
add
movsl
add
and
pushl
add
lahf
lds
pop
in
cmp
ja
pop
push
dec
mov
lods
mov
xchg
lret
movb
dec
xchg
mov
add
add
push
ja
add
ljmp
add
add
add
adc
bound
lcall
add
cwtl
aaa
lods
testl
add
jnp
es
imul
dec
cltd
push
add
sbb
lret
sti
js
les
scas
mov
add
jns
add
incl
add
ljmp
push
add
add
cs
inc
add
test
imul
movb
add
roll
jg
or
jmp
add
stos
dec
xchg
les
inc
add
call
push
add
add
inc
add
rcrl
add
and
inc
add
loopne
add
call
add
jmp
call
addl
les
sub
or
push
add
or
pop
xchg
stc
jbe
add
fists
in
xor
incl
ds
pushl
add
push
add
xor
out
cli
movsb
add
add
jp
xchg
mov
ret
cld
popa
add
ds
add
add
add
sahf
lret
jnp
add
setnp
imul
add
cmp
popa
add
jb
pushl
call
and
pushl
stc
fldl
movnti
out
jl
add
pop
and
dec
jo
dec
insb
rorl
add
jmp
int
rolb
mov
add
leave
daa
add
add
idiv
add
add
lret
dec
jo
push
inc
add
dec
addb
add
sahf
or
add
sti
fs
loopne
xchg
and
call
call
ja
add
add
repnz
movsb
add
add
lods
fnstsw
add
mov
cli
lahf
or
add
lods
jg
pusha
add
xlat
ja
loop
inc
add
clc
inc
add
add
dec
int3
bswap
cmpsb
add
pop
or
sub
add
mov
xor
add
test
jo
lcall
pop
sub
pop
mov
or
add
add
pushl
xchg
mov
outsl
leave
dec
clc
xchg
pop
rclb
add
pop
pop
pop
push
add
lcall
xchg
or
xor
jmp
add
xchg
hlt
sbb
insb
mov
jmp
popf
icebp
popl
xor
fiaddl
mov
and
call
sbb
pushl
and
mov
add
xchg
outsl
fidivl
scas
mov
add
cmp
add
test
sub
add
add
cwtl
and
add
roll
test
lods
out
sahf
and
insl
push
loope
and
call
enter
out
outsl
push
add
add
add
xchg
addb
add
add
negl
testb
push
add
negb
js
cli
xchg
adc
in
fwait
jae
incl
add
lods
nop
xchg
loope
jns
adc
decl
add
aas
or
mov
xor
mov
or
imul
pushf
ljmp
mov
jg
test
lret
push
add
in
mov
jb
pushl
add
pop
or
add
xchg
xchg
sbb
call
jmp
add
add
jnp
or
xchg
scas
pop
aaa
xchg
fwait
roll
add
enter
pop
cmp
jae
mov
inc
add
add
adc
jmp
jmp
xchg
daa
add
add
addb
jmp
add
movl
mov
sub
add
fnstenv
pop
inc
add
push
push
movsl
add
mov
add
sbb
add
xchg
push
add
inc
add
and
out
pop
dec
addl
add
xor
incl
cld
pop
sub
out
sbb
ret
add
push
dec
jns
or
add
xchg
mov
daa
add
imul
add
jecxz
and
incl
scas
jge
add
test
add
mov
mov
add
or
add
add
inc
add
mov
fiadds
sbb
xchg
xchg
xchg
fwait
scas
inc
add
int
add
sbb
test
lcall
aad
jbe
push
add
jg
insl
scas
mov
or
mov
ljmp
inc
add
lock
in
sub
mov
lret
dec
fwait
inc
add
jmp
add
loop
xchg
jg
add
xor
incl
add
add
jge
loope
adc
insb
rol
add
dec
fisttpll
clc
and
ljmp
add
add
dec
mov
add
add
xor
decb
jae
lcall
jbe
or
lods
mov
add
scas
mov
mov
mov
mov
ud0
insl
adc
ljmp
xchg
loopne
jle
nop
addl
out
lea
call
out
addl
add
push
stos
cmp
data16
outsb
jns
data16
data16
add
lds
lds
fs
sbb
imul
ljmp
testl
incl
pop
inc
add
jne
pop
call
add
fidivl
jo
incl
pop
mov
add
and
call
aam
add
sbb
mov
scas
xchg
int
insb
jne
addl
add
mov
imul
mov
add
push
cmp
mov
jae
push
inc
add
add
int
inc
add
loopne
xchg
loope
lock
jbe
sbb
jnp
aad
add
dec
mov
les
adc
or
call
cwtl
jecxz
in
int3
arpl
incl
gs
or
incl
decl
add
dec
push
add
neg
adc
push
inc
add
outsl
lods
and
call
jecxz
sbb
mov
mov
add
adc
call
decl
add
jo
pushl
popf
xor
sbb
lods
jae
jmp
add
xor
push
mov
adc
inc
add
inc
add
jmp
out
cmpsb
add
add
add
add
mov
cmp
add
call
in
mov
push
cmp
incl
dec
mov
outsl
cmpsb
add
cmpsb
add
add
dec
adc
lcall
out
movl
pop
aam
mov
add
in
xlat
or
add
inc
add
sub
ds
dec
das
clc
add
lcall
adc
dec
adc
inc
add
pop
in
xchg
sub
pop
sbb
fcoms
jmp
add
cmp
test
jmp
decl
inc
add
dec
or
add
add
inc
add
dec
mov
loop
cwtl
push
add
jg
testb
and
addl
mov
add
stc
dec
scas
and
call
out
sbb
cmp
add
mov
add
mov
movsl
add
paddq
pop
les
sub
add
sbb
shrb
add
dec
and
lcall
add
out
add
stos
rolb
addb
inc
add
pop
jg
js
dec
jo
ljmp
call
jbe
add
add
bnd
mov
rclb
add
xchg
outsb
lds
mov
repz
xor
incl
add
mov
mov
adc
pop
lea
cwtl
addl
add
add
dec
push
add
xchg
push
pop
cmpsb
add
add
std
cli
pop
mov
add
jb
ljmp
pushl
mov
inc
add
mov
pop
loopne
fwait
roll
loopne
outsb
mov
add
inc
add
out
dec
push
out
fbld
add
fldl
add
cmp
mov
outsb
add
add
jg
add
call
add
fmull
adc
popf
lcall
mov
mov
add
add
cs
jle
add
pop
arpl
incl
enter
and
dec
push
add
or
add
hlt
inc
add
or
push
mov
sbb
sub
mov
add
add
cmp
mov
repnz
scas
mov
sbb
push
add
add
test
add
nop
inc
add
mov
add
sub
out
push
add
ret
add
add
xchg
and
jmp
ljmp
add
int
add
lcall
push
adc
mov
repnz
out
sbb
add
mov
aam
repnz
je
into
sub
adc
pushl
insl
dec
xchg
add
outsb
pop
push
add
loope
testl
cmpsl
add
xchg
sbb
mull
add
in
sbb
call
adc
push
add
pusha
add
sahf
movsl
add
add
jge
repnz
scas
rcrl
out
lret
xchg
js
add
jg
add
add
jmp
jne
sbb
mov
add
cld
lahf
bound
call
add
outsl
or
dec
ss
mov
jae
lcall
test
mov
js
fldcw
mov
mov
lea
rolb
add
inc
add
popa
add
fnstcw
inc
add
add
aad
jle
dec
cmp
adc
call
add
mov
add
add
in
inc
add
mov
add
sti
roll
jle
xchg
cmp
pop
addb
add
data16
add
mov
xchg
call
movl
call
jmp
mov
rcl
jbe
addb
outsl
rorb
jo
call
inc
add
mov
imul
sbb
fnstsw
add
popa
add
mov
mov
inc
add
xchg
and
jae
pushl
jo
cld
inc
add
mov
aas
sub
lock
pop
ds
scas
adc
cmp
add
cmp
lods
mov
sti
loopne
xchg
mov
dec
daa
add
add
lock
roll
addb
int
arpl
pushl
add
xchg
fmuls
mov
add
cli
push
add
ud0
jnp
mov
mov
jne
add
add
scas
in
adc
lcall
sub
das
adc
add
dec
pop
jb
incl
jge
movsb
add
sbb
roll
xchg
in
pop
sub
jmp
push
add
in
xchg
mov
adc
add
xlat
ss
add
jmp
std
movl
push
add
test
int3
rcrl
jns
jnp
insl
xor
decl
add
xchg
mov
mov
and
pop
or
xchg
das
mov
std
mov
add
icebp
jb
jmp
add
push
add
push
imul
fmul
sbb
add
movl
or
sbb
add
lods
cmc
and
jmp
add
mov
sub
xchg
in
cmp
add
out
movb
add
call
add
add
add
pop
add
jmp
add
daa
add
push
sahf
cli
loope
ss
addl
push
pop
sbb
clc
add
push
jns
lret
in
mov
add
add
xor
incl
cltd
int
sub
add
movsl
add
jmp
add
pop
rolb
leave
cmp
add
add
incl
add
xor
push
daa
add
jno
mov
lret
xor
add
nop
dec
xchg
pop
xor
and
fnsave
inc
add
inc
add
add
add
add
pinsrw
add
or
add
and
pushl
movsl
add
ljmp
dec
test
dec
cmp
lahf
mov
fdivrs
cmp
and
jmp
add
std
jo
jmp
add
add
imul
sahf
mov
je
add
push
pop
repnz
std
sahf
bound
jmp
roll
add
adc
cmp
out
shr
addb
adc
aam
loopne
inc
add
decl
inc
add
out
or
add
leave
jecxz
cs
addb
cld
push
test
pop
add
add
cltd
movsb
add
xor
or
add
movl
and
add
xor
or
dec
inc
add
add
lcall
lcall
add
sub
mov
xor
fwait
mov
cli
pop
mov
add
add
std
add
fcom
jl
add
aad
add
add
daa
add
cltd
xchg
or
add
adc
ljmp
cwtl
cli
fcoml
pushl
sti
cmp
sub
pop
or
sbb
jecxz
push
add
push
jns
insl
in
or
add
mov
pushl
shlb
add
push
test
add
push
ja
cmp
push
push
add
imul
add
add
lock
and
add
add
add
xchg
movl
loopne
mov
add
xchg
lods
jge
add
call
mov
scas
xor
incl
add
decl
xchg
inc
add
add
jmp
insb
popf
clc
sub
notb
jmp
add
xchg
inc
add
in
test
cmc
xor
xchg
pop
add
jecxz
push
pop
mov
insb
mov
and
incl
add
jbe
add
add
pop
leave
jo
dec
popl
add
movsb
add
add
shrl
lcall
lret
scas
mov
dec
addl
mov
lock
add
jle
mov
add
jmp
add
cwtl
mov
roll
pop
out
rolb
iret
or
lret
sbb
add
mov
add
add
test
sbb
jae
call
call
pushl
jmp
add
add
cmc
xlat
jge
sub
sbb
add
add
mov
unpckhps
loope
outsb
aas
mov
bound
dec
pop
add
add
jmp
add
rcll
add
pop
sbb
add
mov
pop
pop
sub
pushl
add
and
inc
add
dec
fdivs
add
out
dec
mov
add
add
pop
push
lret
pusha
add
pop
repnz
iret
fisubl
into
xchg
call
lods
mov
push
add
pushl
pushl
clc
out
adc
dec
sub
add
sbb
or
and
ljmp
shlb
add
push
add
rolb
add
and
ljmp
pop
pop
movsl
add
or
movb
popa
add
add
ljmp
lods
jmp
add
jl
movsl
add
out
jno
in
sbb
arpl
inc
add
add
inc
add
sar
cs
pop
ds
add
out
out
addl
lods
sub
fldl
fmuls
scas
dec
xlat
pop
pop
add
add
int
push
bound
pushl
xor
incl
add
cmp
push
sub
xchg
cmpsb
add
xor
pushl
add
or
lds
insb
add
jbe
iret
mov
mov
add
mov
add
lcall
pop
lret
shrb
add
popf
push
add
pop
lahf
inc
add
ret
jl
repnz
in
ficoml
sub
xchg
and
ljmp
sahf
pop
lea
ljmp
add
decl
mov
push
add
repnz
movb
add
mov
insl
addl
add
add
mov
addl
add
push
add
cmc
test
add
add
add
jle
nop
roll
and
sahf
pop
and
ljmp
out
stos
sub
outsl
sbb
add
push
xchg
add
dec
pop
add
repz
xlat
or
add
fidivrl
add
leave
popa
add
daa
add
lahf
enter
jmp
pop
cmp
add
dec
movl
daa
add
in
inc
add
incl
add
ss
add
insb
push
sbb
jecxz
pop
adc
decl
add
push
outsb
lods
sbb
jmp
add
pusha
add
and
jmp
add
or
aaa
dec
mov
add
add
cmpsb
add
sub
add
loop
repz
daa
add
add
icebp
js
add
add
imull
jmp
or
movsb
add
bound
ljmp
add
daa
add
int3
add
in
loope
aaa
fdiv
xchg
jb
stos
xor
call
fsubr
push
hlt
jmp
sub
stos
and
jmp
inc
add
sub
add
pop
pushf
mov
or
add
fisttpl
jmp
add
cwtl
iret
mov
xchg
aaa
dec
pop
fdivrl
loop
shll
out
dec
bound
incl
push
cmp
or
add
repz
int
add
movb
add
shr
mov
jmp
ja
add
mov
add
ljmp
repnz
sub
movsl
add
add
add
jle
add
in
mov
add
insl
and
pushl
xor
lcall
popf
aad
jb
jmp
add
add
and
call
incl
add
and
and
lcall
add
or
jno
jmp
add
adc
push
sahf
xlat
mov
jmp
jmp
add
cmc
int
add
scas
aas
movsl
add
add
adc
push
xor
movl
addl
adc
call
mov
aam
daa
add
sti
roll
push
add
or
movb
xchg
jg
test
push
add
mov
decl
add
pop
pop
dec
add
jmp
add
fbld
sbb
shrl
roll
add
mov
add
add
push
movsb
add
cmc
cltd
pop
dec
stc
push
add
fidivs
add
sbb
clc
movl
add
and
push
inc
add
hlt
sbb
fxtract
stos
aam
add
lcall
jmp
add
dec
idiv
sbb
add
pop
inc
add
jmp
ljmp
xchg
or
add
cmp
out
shrb
adc
ljmp
mov
add
popa
add
sub
les
inc
add
fwait
and
xor
ljmp
repz
xchg
inc
add
frstor
aam
inc
add
lea
pop
add
addl
add
inc
add
rolb
dec
mov
jo
decl
iret
rorl
cmp
out
pop
add
push
stos
add
pushl
lcall
pushl
jp
sub
mov
add
ja
add
add
xor
decl
inc
add
push
add
inc
add
arpl
call
xrstor
lcall
mov
sahf
loopne
fsubs
add
and
dec
outsb
cmpsl
add
and
adc
lcall
add
dec
pop
sti
push
add
add
add
roll
add
inc
add
call
ljmp
cwtl
add
and
pushl
cmpsl
add
add
sbb
addb
les
sub
add
fcomps
jno
ljmp
push
cmp
call
mov
add
or
jb
jg
add
add
pop
push
push
add
add
inc
add
adc
pushl
call
add
rcl
les
ret
add
add
call
seto
dec
adc
add
ljmp
out
loope
sahf
sbb
sbb
add
std
and
dec
pop
repz
clc
fstps
sub
idiv
das
xchg
and
out
add
cld
push
mov
decl
mov
jmp
add
add
xor
jmp
pushl
dec
insl
xchg
inc
add
insb
xlat
dec
xor
pushl
lcall
jo
incl
das
jno
aas
out
push
add
add
ds
lods
inc
add
add
push
add
bound
decl
movsb
add
adc
incl
daa
add
icebp
roll
jnp
test
sbb
add
or
inc
add
sti
add
add
mov
xchg
push
add
arpl
incl
add
fmul
and
decl
bound
ljmp
inc
add
or
mov
lock
aad
xor
inc
add
add
mov
into
lods
pushf
add
call
add
pop
sbb
mov
push
jl
add
jecxz
jae
cmp
mov
cmp
inc
add
ljmp
add
inc
add
das
push
and
incl
mov
or
or
dec
and
decl
xchg
jbe
add
fwait
stos
out
leave
cmpsl
add
sbb
fwait
dec
clc
notb
jo
incl
mov
add
xor
std
repz
stc
mov
mov
add
lods
call
mov
and
add
call
add
cli
das
lahf
stc
sbb
sbb
push
push
insb
pop
popa
add
jnp
inc
add
test
negb
add
addl
add
and
pushl
add
mov
add
dec
cmp
addl
aas
imul
scas
sbb
inc
add
jle
incb
decl
mov
add
or
fildll
xchg
cld
mov
out
or
add
xchg
lahf
mov
loop
sahf
and
dec
dec
push
mov
mov
add
cmpsl
add
add
xchg
jecxz
mov
in
arpl
ljmp
pop
mov
or
addl
add
push
add
add
add
add
movsl
add
and
add
add
add
jne
add
add
add
pop
add
leave
pop
mov
int3
int3
ret
add
repnz
add
fildl
add
lret
add
push
add
pop
hlt
mov
rolb
add
xchg
je
pusha
add
push
add
mov
and
addl
push
mov
add
incl
jo
in
rcr
scas
lcall
xchg
inc
add
adc
sbb
jbe
fldt
and
frstor
insl
adc
decl
pushl
add
xchg
push
clc
test
add
sbb
pop
xchg
add
decl
mov
add
lods
adc
pop
test
out
xor
lcall
sbb
add
ret
add
add
and
dec
push
add
sbb
add
decl
and
add
cmp
add
cmpsb
add
mov
add
add
enter
fldcw
add
repz
jnp
repnz
add
call
and
pop
xchg
daa
add
enter
ljmp
pusha
add
inc
add
adc
add
aas
aaa
dec
out
leave
popa
add
add
cld
pop
imul
xor
xor
jmp
add
push
jg
add
jl
add
jmp
mov
push
cwtl
mov
dec
dec
adc
pushl
mov
out
sub
pop
cmp
add
stos
aad
pusha
add
adc
cmp
sbb
adc
incl
xchg
adc
sub
add
push
test
pop
js
adc
ljmp
add
bound
jmp
call
add
mov
add
fisubs
iret
push
add
sbb
arpl
pushl
ja
data16
mov
push
add
jbe
cmp
lock
lret
jecxz
adc
ljmp
xchg
mov
mov
push
add
data16
stos
xor
aas
cmp
sbb
push
add
pop
movb
xor
jo
jmp
inc
add
xchg
mov
cmpsb
add
aam
aam
or
mov
call
into
jno
call
add
xor
cmp
call
add
add
loope
and
lcall
sbb
lcall
cmp
mov
add
mov
pop
add
sti
mov
scas
and
call
add
iret
sub
add
xchg
mov
call
notl
std
mov
fldcw
addb
mov
xor
insl
add
add
popf
cmp
push
sbb
mov
cmp
and
pushl
sti
mov
pop
das
cmp
jecxz
sti
jae
jmp
les
addl
add
xchg
push
push
add
and
lcall
addl
mull
add
add
cmp
jmp
repnz
rorb
rolb
imul
add
int3
jle
lcall
imul
addl
pop
gs
incl
sti
add
ljmp
add
in
mov
or
add
add
rorb
adc
add
sahf
add
ljmp
xchg
lahf
and
jmp
add
addb
shrl
movl
add
lret
add
outsl
cmp
insl
or
add
movsb
add
inc
add
cli
mov
add
add
mov
pop
sbb
les
loopne
mov
dec
jle
test
push
xchg
cmp
xchg
aam
sti
lods
das
bound
ljmp
call
roll
movsl
add
sbb
add
xor
ret
clc
lret
add
clc
dec
dec
pushf
jb
incl
add
into
popf
into
and
jmp
ljmp
pmaddwd
add
fcomps
mov
ja
add
daa
add
ret
add
sarl
movsl
add
and
call
in
test
push
inc
add
pop
ljmp
add
add
add
jne
push
cltd
ret
add
add
into
mov
add
add
jle
inc
add
and
ljmp
add
out
popa
add
xor
mov
add
dec
cmp
jmp
shrb
mov
add
add
jmp
pop
cmpsl
add
add
add
jecxz
imul
add
xchg
mov
mov
add
add
ret
add
xor
jae
cli
cmp
add
xor
inc
add
add
call
add
shll
inc
add
lea
ficompl
dec
sbb
or
jmp
inc
add
cs
mov
hlt
bound
jmp
add
add
jbe
add
incl
add
addl
std
sbb
imul
add
in
pop
mov
movsl
add
mov
stos
outsl
mov
add
lret
iret
push
add
mov
test
add
add
leave
sub
in
pop
add
xchg
jb
pushl
loope
mov
inc
add
mov
jnp
add
out
test
add
mov
add
cmc
add
dec
dec
clc
pop
push
pushl
aad
add
sub
loopne
or
loop
xchg
add
leave
push
add
jno
decl
mov
push
roll
aas
nop
outsl
in
mov
addr16
and
cmp
add
xchg
and
incl
popa
add
jecxz
pop
xchg
pop
and
decl
mov
std
xchg
inc
add
dec
or
mov
es
add
mov
arpl
inc
add
jmp
or
add
insl
fucomi
cmp
add
cmp
add
fnstenv
add
hlt
dec
xchg
adc
in
cmp
push
es
imul
out
nop
xor
clc
ja
add
stc
xor
lcall
add
pusha
add
jo
inc
add
add
sbb
aam
cs
adc
mov
cmpsb
add
xchg
imul
ljmp
inc
add
and
call
incl
lcall
cmp
inc
add
arpl
call
dec
pop
xor
ljmp
or
sbb
jne
add
push
sub
add
test
lcall
add
pop
add
call
xchg
lds
and
add
jbe
add
adc
jmp
cmp
out
add
sub
add
addb
add
add
add
jp
mov
mov
sbb
insb
dec
ja
add
add
mov
or
push
iret
pop
aam
pop
add
incl
pushf
xchg
stos
jge
jne
lods
sbb
adc
pushl
add
push
xchg
pop
repz
mov
dec
add
jo
ljmp
mov
testb
push
add
cmc
adc
call
decl
add
add
pushl
mov
add
adc
call
add
adc
add
into
push
adc
lods
xchg
lds
repnz
xchg
sub
sub
mov
negb
test
fidivrs
sbb
jmp
xchg
xchg
xchg
inc
add
cmp
add
das
icebp
stos
addb
add
cld
test
aas
sub
push
add
lcall
out
lahf
jp
notl
mov
add
add
cmp
fiaddl
add
fsubrp
or
add
cmpsb
add
lcall
ret
sub
add
xlat
jnp
lods
xor
inc
add
add
scas
cmp
pop
fsubrl
cli
push
add
addl
shlb
cmp
movl
add
out
out
out
imul
add
dec
cmp
mov
pop
gs
fistl
bound
call
pushl
in
jo
push
xchg
and
call
xor
add
movl
idivl
add
jl
add
mov
popa
add
addb
aad
add
pop
sbb
add
add
adc
fadds
sbb
xchg
imul
cmp
mov
cs
and
out
inc
add
and
add
lcall
add
push
cmpsl
add
test
xor
incl
mov
lods
xchg
sub
add
mov
mov
add
fwait
jge
decl
ret
scas
push
inc
add
movl
pushl
iret
inc
add
mov
repz
ljmp
xor
out
aaa
inc
add
jnp
add
ljmp
inc
add
mov
repz
bnd
add
add
or
inc
add
cmp
repnz
add
cld
cwtl
movb
add
inc
add
push
add
insl
fcomps
push
add
pop
add
mov
fcoms
ficomps
pop
mov
das
insb
inc
add
mov
add
sar
dec
lret
add
repz
inc
add
loopne
add
jns
pusha
add
or
inc
add
das
outsl
mov
inc
add
dec
xchg
pop
add
int
inc
add
push
add
fbld
dec
or
loope
adc
add
add
call
in
insb
inc
add
loope
jle
cmp
call
shr
es
scas
je
jo
call
xor
pushl
add
mov
enter
fwait
pop
adc
call
add
pusha
add
aas
xor
call
sbb
adc
cmp
or
push
add
xor
add
rolb
add
mov
add
add
decl
add
add
dec
pop
push
add
cmp
pushf
mov
jnp
add
arpl
decl
jmp
dec
cmp
add
adc
jnp
jmp
add
inc
add
add
add
decl
add
mov
mov
inc
add
in
shlb
add
movb
sub
lods
jl
sub
loop
pusha
add
pop
testl
add
cmp
add
lock
add
addl
add
push
add
stc
xchg
jo
pushl
add
enter
lahf
xchg
jl
sti
jb
call
mov
add
xchg
push
add
movsl
add
xchg
mov
dec
add
add
movl
adc
mov
push
add
xor
decl
lcall
add
add
xor
ljmp
and
outsl
push
popa
add
mov
add
enter
add
sbb
data16
inc
add
xchg
jno
inc
add
add
bound
call
jmp
add
mov
mull
lcall
xchg
xor
inc
add
scas
cwtl
cmp
loopne
jge
adc
cmc
jbe
cmc
push
aad
add
incl
call
xchg
mov
sub
jp,pn
mov
lret
add
jle
jge
add
add
ret
add
add
xchg
pushf
pop
add
stos
hlt
push
loope
pop
jmp
lcall
mov
add
dec
aad
push
add
imul
scas
mov
jge
stos
pop
iret
data16
mov
add
add
mov
test
jge
add
lock
jnp
ss
jbe
or
add
xchg
adc
inc
add
dec
fsubl
lcall
in
ds
mov
lods
xor
ljmp
shlb
add
xchg
add
add
call
add
pop
dec
push
int3
push
mov
pop
rolb
add
in
pop
add
popf
leave
sahf
mov
cmp
or
pop
out
dec
or
leave
xor
xchg
jle
xchg
sub
out
imul
scas
inc
add
adc
decl
add
lds
add
add
hlt
cmp
add
fisubs
mov
in
sbb
sti
cmpsl
add
and
jmp
loop
icebp
test
cmpsl
add
add
inc
add
add
add
or
cltd
cli
xchg
mov
add
mov
jb
stc
inc
add
xor
ljmp
lods
adc
push
cmp
sub
fdivl
inc
add
sbb
fisubrl
add
dec
rol
add
push
or
jp
jmp
mov
dec
add
add
decl
add
inc
add
sub
add
pop
add
iret
cs
add
add
mov
add
add
push
leave
inc
add
mov
mov
out
repz
decl
sub
inc
add
add
push
xor
ss
jo
mov
enter
mov
add
xchg
cmp
add
inc
add
ljmp
dec
pop
lret
into
mov
mov
inc
add
inc
add
int3
pop
cmp
jg
das
dec
mov
add
and
decl
iret
jmp
mov
and
in
test
xlat
in
lock
jmp
add
sbb
jge
popl
add
iret
and
lcall
add
decl
arpl
jmp
pop
loope
aaa
lods
out
insl
push
xor
pop
mov
push
add
jmp
and
call
mov
or
jbe
add
mov
sbb
ss
imul
mov
mov
add
push
add
add
fadds
ljmp
jg
out
addl
xchg
adc
xchg
sbb
mov
jmp
out
daa
add
mov
je
cld
sub
mov
cmp
repnz
add
data16
add
inc
add
cmpsl
add
int
xchg
dec
push
in
test
repnz
pushl
add
stc
mov
movb
into
mov
inc
add
add
movb
add
in
jmp
movsl
add
jle
add
std
or
xchg
inc
add
jmp
add
push
scas
ret
add
popf
mov
lea
stos
sub
add
mov
repnz
add
mov
and
pushl
add
add
incl
mov
popf
stos
cmp
add
add
add
int
push
mov
jmp
jecxz
lret
sti
mov
sbb
mov
add
add
ja
add
mov
fsubs
addr16
add
dec
dec
mov
xchg
daa
add
xchg
shrl
addb
add
loopne
add
clc
aaa
lret
scas
add
jl
push
add
mov
popa
add
add
cltd
mov
add
lcall
push
add
jecxz
or
dec
scas
icebp
sahf
mov
add
or
xor
incl
add
pusha
add
push
bound
jmp
add
bound
fdivrs
jns
add
ljmp
pop
add
cmp
xchg
test
mov
inc
add
pop
lock
fstl
je
cmpxchg
sbb
add
pusha
add
fstps
add
lds
scas
ljmp
add
inc
add
add
addl
add
ljmp
shlb
sbb
dec
or
pop
inc
add
mov
jne
add
add
xor
pushl
inc
add
shll
js
lcall
add
add
add
dec
jp
adc
jmp
pop
sub
mov
xchg
sbb
sub
jp
adc
icebp
out
ja
enter
jae
call
jb
aas
inc
add
dec
jae
jg
add
pop
add
cmpsb
add
add
add
add
pop
cmp
add
popa
add
or
add
repz
xchg
add
rol
add
pop
add
jl
jae
mov
or
add
out
mov
pop
mov
inc
add
pop
sbb
inc
add
cltd
ljmp
add
add
out
movsl
add
xor
in
addb
jg
clc
stos
sahf
std
adc
dec
cmpsl
add
bound
incl
popa
add
sub
roll
loopne
enter
movaps
cltd
roll
add
jp
add
inc
add
out
roll
inc
add
and
pushl
add
testl
lcall
jl
pop
cld
insb
pop
add
pushl
cmc
dec
inc
add
dec
dec
fwait
push
addl
adc
stc
into
mov
or
add
fwait
ja
rol
add
pop
add
add
int3
push
add
and
lcall
add
loope
push
add
sti
pop
movsb
add
sbb
outsb
loop
xchg
mov
lret
daa
add
add
sub
popf
movl
add
inc
add
cltd
cmp
mov
and
aas
sub
iret
outsl
addl
xor
incl
add
neg
int
add
cmp
add
in
jle
add
push
repz
decl
into
push
clc
repnz
sub
ret
icebp
adc
push
add
add
jle
add
pushl
incl
mov
or
add
imul
add
mov
addb
hlt
cmpsl
add
add
rolb
add
or
mov
add
inc
add
dec
mov
lods
lcall
cmc
cmp
pushl
sbb
or
mov
xchg
add
lcall
add
scas
adc
jmp
adc
pushl
clc
sbb
jo
lcall
xchg
test
sti
rolb
sbb
add
dec
push
add
pop
add
mov
or
jb
pushl
loopne
push
add
lods
stos
test
push
add
out
mov
loopne
and
lcall
ja
movb
stc
in
push
jbe
sub
add
and
ljmp
sbb
push
or
lods
out
or
cmp
add
add
inc
add
xchg
insl
xor
cmp
mov
or
add
movl
xor
mov
push
dec
pop
fldenv
add
mov
mov
add
sub
or
inc
add
and
mov
addl
add
call
add
das
sub
lods
push
lods
xchg
iret
fxam
add
add
cmp
dec
mov
vpshld
pop
lcall
add
add
adc
call
and
pushl
add
xchg
insl
out
imulb
sub
stc
addl
push
fmulp
mov
adc
jns
fwait
ss
cmpsl
add
add
add
arpl
jle
mull
call
mov
lahf
mull
call
sbb
push
pop
add
sbb
add
adc
jl
add
xchg
add
jle
jbe
add
jne
add
mov
add
jl
and
lcall
pushf
inc
add
int3
js
add
inc
add
shll
add
addb
add
add
add
pushl
add
incl
add
test
add
lods
fstpt
add
repnz
das
mov
add
push
test
dec
jns
add
add
aas
xchg
jl
lods
enter
add
xor
push
add
xor
insl
roll
add
add
add
add
ljmp
je
mov
mov
push
lock
xchg
fwait
sti
shl
pop
sti
cmpsl
add
fisubrl
rcrb
xchg
pop
sbb
je
pop
out
data16
arpl
incl
add
add
pop
inc
add
sub
pop
loope
cmp
pop
pop
add
add
cmp
sbb
movb
mov
adc
lcall
imul
sub
cmpsb
add
add
fisttps
add
cmp
xchg
push
add
imul
data16
data16
dec
repz
add
add
popa
add
sub
roll
fwait
cli
pop
pop
pop
scas
dec
mov
xor
pop
out
adc
jp
test
filds
cld
call
loop
jo
jmp
mov
lcall
add
movsl
add
call
dec
and
jmp
add
add
and
jmp
jne
mov
push
aad
add
cmp
add
negl
dec
nop
adc
lcall
out
push
add
inc
add
movsl
add
add
fisttpll
in
cmp
loope
cltd
imulb
call
in
dec
or
add
mov
cld
fdivl
add
push
push
data16
push
add
push
add
adc
les
dec
sti
mov
fldt
add
add
daa
add
add
daa
add
add
sub
add
add
aam
cltd
mov
insl
xor
incl
lahf
inc
add
loop
adc
incl
inc
add
add
add
icebp
mov
mov
add
cmp
add
mov
call
add
mov
xchg
jae
dec
loop
mov
add
addl
add
add
add
pop
les
push
mov
add
scas
je
inc
add
loopne
mov
lock
mov
les
mov
add
fnstcw
cmp
add
stos
jae
call
jns
movb
mov
repz
dec
jne
rclb
inc
add
mov
aam
in
lods
notb
add
add
fimuls
loopne
xor
fiadds
xor
cmpsl
add
test
in
push
cli
mov
add
add
inc
add
push
mov
add
xor
ljmp
add
aad
mov
pop
bound
call
loope
or
add
sub
push
hlt
xchg
cltd
test
ficoms
pop
mov
add
pop
out
pop
mov
pushl
call
adc
jmp
add
iret
sub
push
add
addb
add
mov
rep
nop
add
call
push
add
push
test
add
icebp
jle
add
sub
mov
call
cmp
popf
cmp
fidivl
adc
lcall
add
aas
push
add
pmullw
call
jb
lcall
push
in
daa
add
adc
pushl
add
inc
add
add
pop
cli
aam
add
inc
add
gs
add
sub
add
add
add
addb
jge
inc
add
shll
decl
mov
stc
dec
xor
dec
and
decl
add
movb
add
out
icebp
add
das
aas
push
xchg
jle
xchg
daa
add
add
push
outsl
jne
pop
ret
add
push
addb
cmpsb
add
mov
lea
loop
pushf
fnstsw
inc
add
inc
add
adc
add
dec
lret
jns
roll
sahf
jecxz
push
add
pop
mov
pop
jg
rcrb
decl
fwait
jne
pop
mov
jecxz
adc
cli
add
add
xchg
cmp
jmp
add
add
dec
nop
mov
loopne
jp
xchg
aas
jle
cltd
sbb
add
aaa
enter
jno
ljmp
movsb
add
add
test
sti
popf
in
dec
push
add
xchg
xchg
jne
add
ror
sub
incl
lcall
push
sbb
sub
jb
push
lret
add
nop
adc
jmp
lcall
add
sti
and
jnp
or
add
jg
add
mov
ss
ss
add
xor
dec
mov
lock
addb
add
add
jg
add
dec
pop
inc
add
add
add
dec
pop
cs
mov
add
movsb
add
mov
add
fwait
or
cmp
add
add
add
xor
out
xchg
ljmp
call
pop
call
ss
mov
out
data16
loopne
inc
add
mov
add
add
sti
daa
add
into
iret
popf
ljmp
stos
out
sbb
nop
scas
jns
cs
add
decl
add
xlat
lahf
js
sti
mov
sar
mov
fld
add
add
into
fadds
add
popa
add
sub
and
cmp
rolb
incb
add
popf
je
add
out
shrb
into
pop
inc
add
lods
fwait
mov
mov
rcrl
pop
push
cmp
add
jl
test
jne
hlt
divl
addb
lcall
loopne
xchg
stos
loop
jl
std
mov
sbb
add
aas
imul
incl
outsl
inc
add
xchg
les
dec
icebp
movsl
add
and
jmp
in
loopne
and
addb
rorl
mov
push
add
in
pop
jmp
add
insl
es
add
add
add
inc
add
inc
add
fidivl
aam
add
mov
jle
inc
add
inc
add
mov
in
push
add
pop
movzwl
jmp
add
frstor
add
sub
cmp
iret
movb
mov
mov
jg
mov
mov
add
ficoms
add
movsl
add
cmp
add
pop
lds
jg
add
xor
push
push
and
rcl
aam
xchg
cmpsl
add
add
je
add
add
call
shrl
ljmp
push
in
lret
add
xchg
add
lcall
lods
pushf
xor
bound
decl
leave
lods
inc
add
aas
out
std
push
mov
int
pop
hlt
fchs
add
lock
into
sahf
inc
add
push
add
pop
cli
lea
add
sahf
cld
mov
xchg
mov
or
add
add
jmp
add
xchg
lods
and
std
adc
call
mov
ss
add
paddsb
add
jbe
lods
cmc
addl
test
sbb
add
add
jp
sub
add
icebp
movl
xchg
xor
or
dec
mov
add
call
es
loop
out
mov
push
jo
jmp
arpl
aas
dec
lea
push
call
jl
add
xor
add
call
add
xor
lcall
data16
add
add
in
cmp
test
inc
add
push
loop
or
push
add
mov
rolb
add
add
add
add
outsb
sub
add
jb
mov
pop
pop
add
cltd
cmp
add
sub
cmpsb
add
mov
and
decl
jg
sub
add
aaa
movsl
add
jmp
cltd
jns
notl
lcall
nop
pop
popl
aaa
int3
mov
test
add
add
add
insb
adc
add
test
inc
add
add
mov
loopne
dec
sbb
bound
inc
add
add
cmpsl
add
mov
addl
add
push
add
repnz
into
fsubrs
pop
add
mov
test
or
jmp
and
mov
add
pushl
std
cmc
fnsave
dec
lods
add
cmp
out
xor
dec
cmp
add
push
shl
add
mov
add
lret
inc
add
xchg
push
pop
jg
add
add
lret
out
xchg
mov
add
xchg
or
in
ret
push
add
ficoml
sti
mov
ljmp
fistpl
jg
inc
add
pop
addb
add
popf
sbb
cld
mov
add
lahf
inc
add
frstor
add
dec
inc
add
in
dec
roll
call
xchg
fnstcw
fcomps
in
inc
add
jle
add
add
aam
sub
xchg
arpl
call
pushl
pop
loop
inc
add
add
add
add
mov
mov
add
push
lods
es
or
add
push
add
jnp
jp
add
add
add
dec
mov
movb
jns
mov
pop
push
addl
inc
add
inc
add
and
sub
out
mov
lds
clc
stos
fmul
xor
lcall
jns
push
jb
decl
add
daa
add
jne
add
in
adc
jb
jmp
add
adc
mov
cltd
cmp
add
pop
or
add
and
inc
add
cmc
mov
lea
add
iret
insb
or
adc
add
xchg
dec
clc
scas
jnp
dec
push
or
xchg
and
daa
add
add
add
fists
add
into
clc
jmp
add
les
bound
aas
dec
jne
and
inc
add
sub
lds
aas
addl
add
lcall
shlb
dec
or
popf
roll
add
add
or
xchg
sahf
push
aam
clc
mov
add
add
test
add
lods
cmc
xchg
lret
add
add
mov
fidivrs
loope
outsl
out
incl
decl
add
rcl
jecxz
stc
call
lcall
add
push
add
cmp
inc
add
inc
add
add
jnp
add
fcompl
movb
add
mov
addb
int
adc
add
cli
mov
in
dec
lds
cmp
jg
add
mov
fdiv
pop
pop
adc
pushl
pop
mov
add
incl
add
mov
sub
jle
add
in
mov
xor
jmp
in
fwait
repz
jmp
lcall
lock
lcall
outsb
insb
jecxz
and
ljmp
call
fldl
add
popf
mov
cltd
ficomps
or
enter
mov
xchg
ljmp
sub
lods
in
sbb
jge
mov
mov
int3
not
daa
add
add
sbb
mov
cmp
add
pushf
cmp
mov
add
iret
pop
add
mov
dec
addb
add
add
cmp
xchg
jno
fcomps
add
fdivrp
ret
add
pop
test
mov
cmp
mov
mov
sahf
cmpsl
add
mov
pushl
icebp
pop
test
mov
repnz
nop
popa
add
leave
pushf
popf
les
stos
dec
rorb
pop
xor
and
add
out
icebp
adc
pushl
mov
add
add
add
ret
add
lret
sub
mov
add
incl
jns
out
jge
addl
test
pinsrw
add
fisubl
mov
lock
cwtl
jecxz
jg
add
add
add
jmp
addl
add
rcll
add
fmul
lods
xor
mov
mov
imul
add
pop
adc
incl
add
int3
mov
add
jmp
add
mov
add
add
inc
add
enter
add
push
add
jb
decl
call
push
add
and
lcall
fstpt
lcall
mov
cmp
add
jecxz
mov
add
dec
addb
add
add
and
pushl
push
add
imulb
sbb
fstl
dec
inc
add
aad
add
je
add
mov
mov
add
add
out
jb
call
cli
pop
add
add
pop
mov
lock
add
adc
add
add
bound
call
add
sbb
aad
sbb
add
add
loop
data16
imul
add
mov
cwtl
cmp
scas
popf
mov
add
ficoms
lcall
out
mov
add
push
cs
mov
xor
add
roll
call
call
lahf
xchg
add
lods
js
pop
mov
daa
add
movb
inc
add
jns
add
loope
out
mov
add
add
xor
add
and
fcompl
cmp
add
pop
adc
call
pushl
add
pop
pushl
add
cli
out
xor
ljmp
mov
push
mulb
mov
sub
add
decl
add
pop
out
inc
add
std
xor
add
mov
push
xchg
cmpsb
add
testl
add
push
pushf
dec
xlat
les
mov
xor
call
add
push
add
test
xor
call
fisttpll
pop
adc
inc
add
cmc
fidivrl
ss
push
inc
add
add
iret
into
aad
add
and
pushl
add
pop
int3
jne
add
mov
movl
add
jae
decl
mov
cmp
add
or
add
out
movb
add
push
adc
call
out
addl
das
rcrb
bound
incl
add
inc
add
push
add
call
nop
push
stos
lcall
add
and
or
add
jge
mov
add
cld
adc
pushl
xor
add
decl
push
push
inc
add
add
add
mov
pop
cmp
lds
movl
add
fstl
jmp
mov
add
dec
or
mov
push
add
adc
cmp
pop
scas
shll
add
cmpsl
add
ljmp
or
and
decl
add
loope
mov
add
dec
and
jmp
add
pop
mov
cli
iret
lret
pop
add
cmp
and
das
mov
cltd
movl
xchg
mov
movlps
jmp
scas
lods
insl
or
add
add
testl
pop
jmp
scas
jae
lcall
loop
mov
add
inc
add
cmp
out
dec
ficoml
pop
pop
out
inc
add
rolb
decl
xlat
imul
roll
add
mov
push
add
in
gs
movsb
add
sub
fiadds
add
jns
mov
pop
ljmp
pop
jae
jmp
mov
pop
addl
ljmp
push
icebp
adc
inc
add
dec
das
and
push
push
add
scas
push
add
adc
fstps
fistl
add
in
clc
mov
inc
add
stos
in
shrb
cld
fcoms
incl
add
ret
add
sbb
add
push
add
ret
add
add
inc
add
in
push
cli
loop
jae
lcall
jp
fcoml
add
aam
in
or
dec
call
jmp
lcall
xchg
mov
xchg
addl
ds
add
jle
add
dec
dec
inc
add
lret
pushl
pusha
add
mov
add
pop
movsb
add
test
xchg
or
call
cmp
je
mov
cmp
add
fistpl
or
in
repnz
add
sbb
xor
add
adc
jg
xor
add
sbb
cli
daa
add
cmp
mov
jmp
jg
add
out
pop
insb
rorl
add
add
nop
cs
addb
add
add
ret
das
push
ret
add
push
push
add
sbb
out
cs
pop
sbb
in
adc
jmp
add
add
scas
sub
jl
bsf
stc
ret
add
jmp
inc
add
scas
dec
stos
xor
call
jmp
incl
add
imul
popa
add
cmpsl
add
lods
jnp
add
inc
add
ss
test
mov
add
pop
notl
add
xlat
dec
xchg
scas
adc
ljmp
and
jmp
pushl
lret
js
sub
data16
add
fstpl
nop
push
addl
roll
or
add
out
addb
add
add
push
add
addb
scas
add
lcall
aaa
and
jmp
ss
outsb
mov
jns
jne
xor
jmp
mov
adc
call
inc
add
or
add
push
rolb
sbb
inc
add
xor
call
push
mov
xchg
and
call
and
incl
add
jl
or
sbb
jle
iret
loope
dec
repz
add
pop
and
pop
sub
add
call
jmp
adc
mov
lock
inc
add
mov
adc
add
add
mov
add
jg
addb
add
cmpsl
add
lock
add
test
pop
pusha
add
xchg
push
cltd
test
add
mov
cmc
cwtl
xchg
lcall
aaa
sbb
push
repz
out
mov
or
sti
call
push
je
xor
decl
inc
add
push
leave
adc
in
cs
fsubrs
xchg
in
nop
roll
stos
push
lods
das
cwtl
movb
add
inc
add
int
add
in
out
addb
add
stos
rorl
mov
add
add
call
cwtl
add
rolb
add
push
add
and
lcall
and
call
inc
add
push
mov
clc
jno
call
add
pop
add
add
rolb
loop
mul
add
adc
dec
lahf
lret
sbb
pushl
add
add
sti
mov
pushf
push
add
push
add
imul
rolb
add
add
add
sub
adc
ret
add
je
push
add
pop
xchg
add
incl
mov
add
add
mov
shrb
or
inc
add
add
fisttps
jns
mov
movl
popa
add
xchg
cmp
pop
xchg
pop
mov
mov
push
sbb
or
inc
add
cltd
add
decl
jg
add
pushl
dec
jo
mov
add
jb
decl
gs
add
add
enter
ret
add
fdivr
je
pop
fcomps
add
adc
jmp
add
sub
loope
gs
fdivrp
lds
nop
data16
movsl
add
sub
add
push
leave
push
in
cld
jl
jbe
daa
add
add
and
call
add
mov
add
add
push
negb
add
lret
add
lcall
lahf
mov
dec
repz
fcompl
xchg
sbb
incl
add
imul
push
add
cli
cmpsb
add
add
addb
fcomi
xor
add
jmp
add
in
and
incl
in
sub
fldenv
dec
rolb
mov
add
add
push
inc
add
xor
ljmp
iret
cltd
inc
add
cmp
call
add
add
jb
pushl
mov
add
sahf
jecxz
popf
cmp
movb
add
loope
icebp
movsl
add
ljmp
or
repnz
add
insl
data16
add
push
leave
xchg
sbb
inc
add
cwtl
sahf
cmpsb
add
add
fdivrp
data16
and
jmp
add
cmp
jo
out
incl
jge
mov
xchg
les
mov
add
dec
add
rolb
adc
dec
ret
cs
xor
jmp
add
add
jmp
add
fdivrl
fcomps
add
sub
adc
incl
add
sub
lahf
push
add
mov
jmp
push
add
stos
push
cmc
inc
add
out
jle
add
add
mov
mov
and
inc
add
xor
decl
roll
mov
add
add
cmp
add
pop
pusha
add
mov
inc
add
mov
jno
ljmp
mov
or
jo
jmp
add
add
xlat
inc
add
inc
add
or
dec
leave
movb
and
jle
out
add
sub
add
add
xchg
test
add
pop
add
cmp
xchg
pop
shlb
jg
add
xchg
enter
cli
and
call
incl
lcall
cmp
mov
and
adc
add
lods
roll
add
jae
call
incl
notl
lcall
jl
sub
mov
add
icebp
and
xor
mov
push
xchg
adc
jmp
add
hlt
lods
rolb
cmpsb
add
mov
mov
adc
decl
cwtl
add
addl
test
add
push
pop
sub
iret
and
lcall
inc
add
dec
mov
jb
mov
mov
add
inc
add
leave
mov
pop
pop
sbb
add
or
int3
cwtl
in
daa
add
add
add
dec
lcall
js
xor
lcall
jmp
mov
and
cmp
decl
inc
add
and
pushl
jmp
loop
pop
sub
add
add
push
xchg
mov
into
stos
test
les
movsl
add
pop
adc
jmp
shrb
add
shlb
lcall
xchg
and
ljmp
leave
pop
into
cmp
das
loop
in
movl
add
mov
add
push
and
pushl
loop
jne
mov
push
jp
and
decl
jmp
pop
push
sbb
mov
or
das
add
ljmp
push
and
add
add
mov
add
outsb
ret
add
sahf
jo
jmp
add
test
repnz
jns
push
inc
add
lods
rolb
add
dec
daa
add
add
xchg
mov
mov
sbb
pushf
enter
add
pop
loop
stos
xor
mov
push
jg
add
call
add
mov
mov
add
add
pop
sub
add
mov
lcall
cmp
jl
add
add
sub
ja
push
add
xchg
jo
ljmp
jns
pop
std
adc
incl
add
rolb
and
mov
inc
add
movl
pushl
call
add
hlt
add
ljmp
dec
pop
mov
popf
lret
test
cld
mov
add
ljmp
in
add
dec
mov
add
lea
add
mov
shrd
push
call
loop,pt
mov
add
dec
fisubrs
mov
lahf
mov
dec
sbb
ja
mov
les
jecxz
cmpsb
add
add
addl
lahf
sbb
sbb
js
sbb
out
mov
dec
push
jmp
add
dec
jnp
sti
pop
xchg
dec
xchg
xlat
and
ljmp
pop
je
push
add
xor
inc
add
cmp
movb
aaa
or
jno
lcall
add
out
mov
pop
dec
repnz
push
add
das
xlat
add
enter
jmp
pop
push
add
pushf
mov
mov
xor
jmp
add
add
decl
add
loope
loop
dec
ret
pop
fwait
pop
add
add
mov
inc
add
mov
jecxz
mov
add
sub
mov
incl
test
inc
add
jle
push
add
sbb
add
js
add
jl
fwait
addb
add
faddp
add
dec
dec
ficomps
mov
mov
sub
push
add
dec
lret
pusha
add
popa
add
movsl
add
mov
adc
ljmp
inc
add
mov
dec
js
mov
movb
add
push
add
repz
lcall
pushl
add
roll
mov
add
add
lret
addl
repnz
add
fwait
mov
in
or
dec
pop
add
mov
inc
add
pop
and
lcall
enter
mov
mov
lcall
stos
sub
or
ljmp
add
add
bnd
inc
add
decl
scas
xchg
outsl
incl
jg
xchg
in
jecxz
lea
lcall
outsb
sti
sbb
jmp
or
add
fldl
shr
bound
lcall
pop
mov
xchg
fsubl
add
and
incl
add
add
lret
imul
add
add
add
ljmp
jbe
push
add
lea
add
add
cmc
call
lret
add
add
sti
mov
imul
push
add
sub
add
cmc
add
mov
add
add
add
add
dec
add
jmp
add
add
xchg
rcrl
movsb
add
inc
add
sub
add
imul
insl
stos
addl
mov
add
bound
pushl
addb
jmp
add
outsl
imul
cs
push
add
pop
addr16
xor
add
add
add
test
mov
ficoms
add
loop
scas
add
sete
ljmp
in
dec
mov
mov
std
mov
mov
mov
inc
add
jecxz
les
insl
mov
xlat
stos
pop
pop
fnsave
add
nop
xor
add
pushl
call
cmp
xchg
arpl
ljmp
addb
inc
add
add
add
push
ja
sbb
mov
cwtl
pop
sbb
add
and
ljmp
add
xchg
push
add
cmpsb
add
or
cmp
add
call
sub
enter
and
int
add
movl
add
aas
dec
mov
cmp
cmp
mov
add
icebp
jmp
dec
add
lahf
call
out
adc
mov
add
gs
icebp
mov
dec
xchg
dec
int
jmp
incl
pop
dec
fs
and
pushl
fstpt
mov
add
js
add
dec
pop
push
mov
js
xchg
sub
les
cmpsb
add
inc
add
add
out
add
add
jg
add
adc
add
jbe
cs
std
or
repz
push
xor
js
inc
add
ja
push
add
rolb
call
add
or
add
and
lcall
cltd
dec
pop
inc
add
adc
addb
add
ljmp
add
add
add
scas
test
push
add
mov
add
cmp
xchg
jnp
add
cmp
fsubl
daa
add
add
movsb
add
add
and
incl
pushl
add
push
add
add
call
cmc
cli
leave
lds
and
or
addb
add
adc
jmp
decl
and
add
add
decl
mov
add
push
dec
pop
dec
push
mov
jge
sub
and
inc
add
xchg
test
add
add
scas
jmp
add
mov
fwait
mov
add
xchg
xor
ljmp
add
adc
dec
or
add
jae
call
cwtl
pop
popa
add
inc
add
arpl
jmp
add
add
incl
add
dec
or
sbb
mov
sub
rcrl
test
push
out
das
fdivrl
mov
xor
xchg
jno
jmp
pop
in
fists
mov
add
cmp
pusha
add
scas
jp
push
add
icebp
push
in
inc
add
inc
add
push
cs
mov
adc
call
add
adc
ljmp
dec
jo
jmp
ds
and
decl
inc
add
ja
add
add
push
popf
sbb
add
xor
add
add
xchg
mov
add
ss
add
sbb
add
push
or
add
add
add
add
fistpll
adc
add
add
add
in
cli
sar
data16
add
sar
into
fxch
out
push
data16
repz
mov
add
and
out
xchg
xchg
jae
jge
sub
sub
popf
add
aad
add
mov
cmc
sbb
fsub
add
lcall
add
out
push
add
add
cli
sub
add
mov
stc
adc
add
push
pop
out
lret
and
jmp
add
loop
jns
mov
mov
mov
add
inc
add
add
negb
mov
movb
add
sbb
dec
fldcw
add
movl
add
cmp
rcll
add
jmp
js
addb
add
idivl
add
inc
add
enter
fdivs
aas
push
add
add
sub
fsts
add
sbb
mov
mov
decl
add
add
pop
inc
add
iret
and
jle
das
sub
add
jmp
incl
xor
jmp
jmp
add
roll
ret
sub
push
repnz
ljmp
clc
fdivs
add
ljmp
add
mov
sbb
fadds
xchg
repz
add
or
cmpsb
add
ret
add
add
popf
mov
push
jbe
daa
add
dec
cmp
xchg
ja
add
loop
xchg
pop
test
dec
xchg
leave
je
jns
and
sub
lea
int3
cmpps
push
xchg
cmpsb
add
or
lcall
mov
mov
roll
sbb
xor
dec
xchg
aas
and
inc
add
js
push
add
stos
cld
sub
add
sbb
insb
lcall
enter
add
add
dec
and
pushl
xchg
hlt
daa
add
add
add
in
je
add
or
xchg
popf
test
pop
xchg
addb
outsl
jne
dec
pop
fistps
cmpsb
add
mov
scas
sub
add
push
push
fcmovbe
aad
and
jmp
jbe
xor
pushl
add
sub
mov
cmp
test
add
lcall
icebp
jno
jmp
jp
add
movsl
add
push
add
out
mov
add
call
sbb
add
or
add
jbe
add
adc
pushl
dec
mov
adc
jmp
lods
ret
repnz
adc
int3
xor
jle
add
add
jmp
add
add
jg
inc
add
adc
ds
mov
std
cmpsl
add
bound
decl
jge
add
add
mov
decl
xor
add
dec
xor
incl
rcrl
jg
repnz
add
add
add
jno
call
push
add
fbstp
sbb
add
mov
cmp
ds
pop
out
pop
fwait
lds
out
mov
addl
add
add
ljmp
pop
mov
fwait
cmp
push
sbb
sub
xor
incl
or
in
jmp
and
decl
mov
cmp
add
cmp
add
mov
add
lret
outsb
sbb
push
jg
roll
pop
pop
add
decl
enter
leave
fmull
dec
xchg
dec
out
cld
pop
add
incl
add
decl
pop
popa
add
or
add
jno
incl
sbb
xlat
push
ss
xchg
cmp
in
jne
ret
add
cmp
add
mov
mov
rolb
pushf
sub
add
add
mov
rolb
sub
mov
mov
add
fidivl
sub
out
jle
add
out
mov
xchg
add
push
add
mov
push
xchg
inc
add
add
call
std
rolb
lds
jecxz
sub
add
add
inc
add
xchg
cmpsb
add
lods
or
mov
xor
pushl
add
sbb
pop
dec
jae
incl
insb
cwtl
mov
mov
add
movsl
add
lods
test
add
ret
dec
inc
add
add
add
add
add
ljmp
push
clc
mov
fstps
pushl
popa
add
jns
add
push
add
imul
push
add
jbe
add
sub
add
lcall
movl
scas
inc
add
incl
pushl
fistps
jle
xlat
sub
add
ret
add
add
scas
add
ljmp
test
add
pusha
add
mov
out
cmpsb
add
decl
xchg
xlat
or
cmp
xor
ljmp
cmp
push
add
js
add
add
xchg
inc
add
adc
mov
push
add
roll
add
xor
dec
cmp
pop
iret
jmp
cmc
xor
dec
scas
pushf
dec
mov
add
cmpsl
add
push
add
pop
stos
mov
pop
inc
add
xor
incl
mov
decl
add
pop
dec
sar
test
add
push
fdivl
test
nop
adc
add
add
ljmp
lcall
and
jmp
add
jno
jmp
lcall
xchg
mov
and
call
lcall
add
ficompl
add
xor
decl
inc
add
jecxz
add
call
and
jmp
add
add
push
add
lret
aam
mov
scas
xchg
push
fnstenv
add
imul
int
add
xor
sub
incl
add
and
call
das
pushf
push
add
inc
add
sbb
neg
pop
add
adc
stc
or
inc
add
add
movsl
add
cmp
data16
es
xchg
xchg
sarl
or
add
jmp
incl
jns
adc
add
iret
ret
add
add
call
sbb
jecxz
push
cmc
clc
lods
movb
or
push
leave
cmp
add
mov
cmp
add
cwtl
repnz
inc
add
test
xchg
repnz
mov
or
test
cltd
inc
add
push
leave
addb
insb
loopne
mov
add
ljmp
decl
add
inc
add
test
movsb
add
jp
and
push
add
lods
daa
add
std
cmpsl
add
fidivrl
mov
add
dec
rolb
inc
add
mov
xchg
mov
mov
fbld
out
outsb
fwait
mov
pusha
add
ficompl
or
int
mov
adc
ljmp
add
push
je
movb
shll
add
stc
out
fidivrl
xchg
repz
lcall
inc
add
loopne
out
into
mov
xor
mov
cli
hlt
loop
test
or
add
test
add
cmp
addr16
ret
shrl
jmp
add
add
les
add
add
pop
push
cmp
add
push
inc
add
outsl
int
arpl
incl
add
repnz
cwtl
jae
in
inc
add
and
dec
add
add
stos
add
cmp
and
decl
mov
add
xor
jmp
jno
out
inc
add
or
add
add
shlb
jmp
mov
xor
call
test
mov
movb
roll
add
cmp
jmp
pushl
fsubrs
decl
test
data16
bound
ljmp
jl
push
add
insl
push
in
out
pop
roll
out
loopne
aad
jno
inc
add
negl
sub
popa
add
pop
jmp
add
lcall
xchg
stc
ret
out
adc
call
jno
incl
decl
mov
cld
xor
add
out
sbb
inc
add
mov
xchg
jl
add
push
cmp
add
loope
add
jnp
add
add
jmp
dec
dec
jge
adc
jmp
dec
lret
add
or
mov
push
addr16
add
cmp
add
cli
movb
lea
cmp
add
das
pop
movsl
add
sub
add
rol
add
add
mov
sub
add
add
decl
insl
inc
add
mov
leave
sbb
pop
add
add
cmpsb
add
add
popa
add
push
loopne
lret
cmp
jno
jmp
add
test
mov
add
xchg
ja
incb
add
add
bound
call
and
decl
fxch
adc
int3
add
jmp
push
add
jp
addl
icebp
jne
dec
push
in
cmpsb
add
enter
or
enter
cmp
popf
add
ss
add
or
add
pushl
mov
push
add
sbb
aaa
das
es
jb
incl
add
call
sbb
enter
add
insb
loope
mov
add
dec
leave
adc
aas
in
pop
and
mov
adc
insl
push
add
add
incl
add
add
cvtdq2ps
mov
popf
sub
add
push
push
push
mov
mov
add
add
cmp
icebp
and
call
in
enter
std
movb
add
add
sahf
sets
mov
inc
add
xchg
mov
add
add
js
add
xchg
nop
into
mov
adc
std
scas
sahf
loope
cmc
mov
add
movl
jne
aaa
jecxz
pusha
add
aad
mov
inc
add
mov
add
push
add
cli
sahf
jp
jge
push
add
incb
imul
add
adc
add
add
out
dec
arpl
call
dec
push
pop
mov
call
call
data16
cmp
dec
mov
cmp
jb
lcall
adc
call
mov
lret
inc
add
leave
mov
xor
cmp
js
xchg
mov
or
xor
jmp
add
mov
add
pop
add
leave
add
xlat
pop
hlt
fwait
ljmp
jmp
add
fdivrl
lcall
out
fmull
add
ror
cwtl
cli
dec
aas
cmp
rcll
add
pop
loopne
dec
clc
int
addr16
test
add
out
push
pop
sbb
add
outsb
int
add
aaa
jl
shlb
add
add
enter
lcall
rcr
aam
add
inc
add
mov
mov
add
pop
in
jp
mov
jbe
adc
fidivl
psrlw
call
add
add
dec
movsb
add
in
jno
jmp
add
in
std
loope
push
popa
add
sub
or
add
cmp
mov
add
mov
out
add
incl
mov
add
add
or
cmp
lahf
jle
icebp
fcompl
inc
add
pop
add
pushl
roll
add
hlt
mov
inc
add
incl
incl
add
sub
daa
add
sbb
int
cmp
add
loope
nop
xchg
loop
fsubr
push
test
test
add
xor
pushl
add
dec
movsl
add
add
jmp
test
jo
jmp
xor
pop
loope
pop
stc
out
fcoml
xchg
stc
fwait
stos
push
mov
pop
dec
shll
decl
sbb
add
mov
mov
jbe
push
add
dec
ret
add
mov
sahf
xor
push
push
lds
lods
mov
aaa
mov
sub
mov
dec
sar
test
add
je
lock
jns
inc
add
addl
and
cmp
mov
inc
add
xor
decl
out
mov
test
add
hlt
sub
jns
leave
lea
sbb
ret
clc
xor
push
rorb
xrelease
push
add
sbb
mov
stc
jae
call
lock
add
dec
sub
bound
lcall
add
sbb
add
push
stc
test
aad
mov
mov
add
add
mov
xchg
mov
stos
inc
add
insl
dec
cmp
cmp
push
adc
push
inc
add
pop
mov
add
sub
push
fucom
add
ljmp
jb
incl
jns
ficoms
cmpsl
add
add
adc
ljmp
fwait
push
jb
jmp
call
jne
add
jecxz
or
add
insb
jns
in
or
add
adc
call
add
push
nop
je
vmwrite
add
and
ljmp
jmp
incl
bound
incl
pushl
cmp
mov
std
hlt
cli
movsb
add
jo
ljmp
xor
decl
stc
repz
add
adc
or
xchg
or
adc
ljmp
xchg
xchg
shlb
add
ljmp
shll
js
push
xchg
sub
add
data16
add
or
int3
out
and
xor
lcall
add
scas
addl
into
xor
jmp
add
pop
mov
push
pop
sub
jmp
test
pop
sbb
and
lcall
jmp
add
add
add
cmpsl
add
cmp
add
push
add
mov
add
xlat
test
mov
inc
add
push
add
int3
cmpsb
add
addl
cmc
dec
xchg
out
mov
add
pop
and
ljmp
aas
divb
jmp
call
je
xchg
xchg
je
push
aam
pop
jg
add
add
mov
cltd
mov
add
bound
jmp
add
add
add
jmp
add
arpl
jnp
add
sub
mov
add
push
sub
call
insb
cmpsl
add
add
ret
add
addr16
pop
les
testl
rolb
add
mov
fsubl
call
add
mov
xchg
cmp
hlt
idivl
add
call
add
push
mov
add
xchg
or
lahf
dec
add
mov
sub
add
test
mov
pop
leave
xchg
out
cld
xchg
and
jmp
inc
add
add
in
out
into
lods
or
scas
jecxz
cmp
call
pop
pusha
add
pop
mov
addb
pop
test
pop
cmp
add
jo
cmp
das
addl
ss
cmpsb
add
push
lds
imul
outsl
xor
mov
inc
add
lcall
es
add
lock
fwait
test
inc
add
add
mov
cmp
movl
add
add
iret
mov
add
lret
movl
cmp
xor
decl
movsb
add
add
add
add
jnp
aaa
jne
loopne
shrl
add
pusha
add
pop
add
add
aas
and
sti
push
add
packuswb
int
out
jnp
loope
addb
lds
aam
add
test
aad
and
lcall
add
jns
add
mov
add
roll
stos
arpl
call
nop
jle
add
and
pushl
call
shll
mov
addl
mov
add
call
ljmp
inc
add
lods
test
mov
repz
mov
mov
shl
or
add
incl
shll
mov
add
or
add
and
and
call
lcall
cmp
pushl
add
add
mov
add
dec
pop
add
test
rcll
add
dec
test
push
add
mov
add
mov
pop
enter
add
add
add
sbb
push
ss
push
add
pushl
addb
mov
xor
fnsave
fstl
lcall
add
add
jmp
add
filds
pop
out
add
mov
add
ds
lret
addb
sti
and
sbb
adc
call
test
or
xor
add
add
enter
repz
cmp
mov
inc
add
inc
add
bound
incl
and
mov
jle
addl
lret
or
add
pop
mov
add
aam
jl
mov
fiadds
add
pop
fwait
in
jae
lcall
popf
movsl
add
pushl
add
add
adc
add
roll
add
sbb
add
fidivs
add
lock
faddp
add
fmull
repnz
mov
jl
push
add
add
add
sub
add
ds
loopne
lret
cs
movsl
add
ror
pop
mov
add
xlat
sub
add
sbb
jnp
addb
add
fisttps
in
into
mov
decl
lea
add
or
add
inc
add
jns
push
aad
add
fimuls
pop
ficompl
jbe
jl
pushf
xchg
inc
add
pop
and
jmp
stos
lock
mov
add
add
imul
je
add
fdiv
and
decl
in
stos
inc
add
pop
adc
lahf
or
loopne
xor
lcall
add
pop
add
lcall
jbe
add
decl
add
inc
add
cmp
inc
add
ljmp
lret
or
add
enter
adc
pusha
add
inc
add
and
call
sub
test
adc
jmp
call
xchg
mov
add
mov
mov
adc
call
scas
imul
lods
fistl
ret
je
mov
add
sbb
cmpsb
add
mov
add
add
add
add
add
je
xchg
lds
into
xchg
roll
add
jp
pop
mov
add
or
in
lret
cmpsl
add
add
sbb
add
data16
add
sbb
add
mov
dec
adc
add
sbb
idivl
mov
pop
push
add
adc
incl
clc
decl
scas
mov
inc
add
adc
add
imul
add
addb
mov
xor
lcall
fdivr
scas
ds
jmp
adc
xchg
inc
add
mov
mov
testb
add
add
mov
jp
mov
jmp
into
into
adc
in
ret
add
cli
movsb
add
sbb
xchg
mov
jp
cmpsb
add
addr16
add
ret
add
pop
notl
mov
js
or
lcall
sbb
sbb
push
sub
add
mov
and
jmp
incl
or
add
add
ficoms
add
add
call
add
clc
inc
add
jno
incl
add
mov
add
incl
sti
dec
in
add
push
mov
mov
pop
add
add
cmp
outsb
stos
mov
sbb
add
mov
aam
add
add
pop
lea
push
sub
inc
add
add
cwtl
nop
sbb
push
add
roll
notl
call
add
inc
add
in
mov
stos
ljmp
std
in
pop
push
pusha
add
cli
push
mov
call
add
sti
je
pop
xor
add
mov
cld
jbe
add
out
addb
add
and
mov
popa
add
loopne
bound
jmp
loopne
in
cmp
cmpsb
add
add
outsl
inc
add
ss
faddl
mov
stos
loop
int3
xor
call
add
mov
add
movsl
add
sahf
mov
add
add
inc
add
stos
jb
decl
xor
dec
mov
loopne
outsl
daa
add
notb
add
mov
fs
xor
repnz
or
jno
call
add
test
inc
add
popf
fdivrp
xchg
cmp
test
jbe
add
mov
add
add
in
jnp
adc
push
ja
rcr
fwait
mov
xchg
aad
inc
add
icebp
or
add
dec
mov
rcrl
sbb
test
add
and
lcall
mov
out
test
out
lds
xlat
daa
add
decl
mov
mov
add
add
mov
add
xlat
or
jno
ljmp
cpuid
add
add
jo
pushl
idivl
mov
add
add
movsl
add
push
add
inc
add
add
jg
mov
addl
add
mov
pop
and
mov
add
adc
incl
add
dec
ljmp
xlat
jecxz
leave
mov
add
jmp
add
mov
dec
mov
mov
sti
clc
or
dec
add
sbb
add
leave
or
jg
add
das
xchg
xor
jl
mov
sbb
and
push
lcall
cmp
lods
cmp
add
jbe
fs
xchg
cli
pop
sub
add
loop
pop
push
jno
inc
add
xchg
dec
cmp
add
add
notl
add
mov
add
add
out
cmp
add
xchg
mov
add
add
in
mov
pop
mov
add
or
movl
add
add
add
scas
pop
jecxz
xor
pushl
add
inc
add
push
mov
add
or
call
iret
je
xor
incl
lds
repz
movsb
add
fcomps
das
inc
add
movb
pushf
movb
add
ret
or
incl
add
jecxz
add
jmp
add
pop
inc
add
js
leave
lret
add
xchg
adc
ljmp
mov
dec
addb
ljmp
sbb
inc
add
mov
cli
cltd
mov
add
add
in
rorb
and
mov
add
sub
add
inc
add
cmp
dec
and
fwait
jecxz
push
add
sbb
repnz
and
ret
add
loope
adc
incl
inc
add
mov
jmp
add
call
stos
add
cmp
rolb
add
jmp
add
cmp
lahf
cmc
mov
add
adc
call
add
movsl
add
add
stos
pop
add
movb
pop
mov
add
je
inc
add
add
add
mov
repz
movl
mov
mov
cmc
into
and
lcall
add
add
sub
idivb
inc
add
in
sub
dec
scas
outsl
xor
lcall
sub
add
pushf
enter
mov
add
push
lret
lahf
mulb
add
cmp
inc
add
add
movl
dec
arpl
sti
add
inc
add
mov
add
decl
add
addl
add
or
pusha
add
aam
add
and
decl
adc
adc
incl
ljmp
stc
orps
add
sti
add
adc
call
mov
xchg
fbstp
cmp
lea
decl
jmp
cltd
les
sar
xor
push
jae
incl
dec
jnp,pt
add
ljmp
add
add
push
int3
mov
imul
clc
or
addb
loop
dec
test
add
add
pop
cmp
jmp
js
xor
and
incl
add
push
add
bnd
incl
shrl
add
push
sub
and
jmp
add
imul
pop
popa
add
aad
add
add
add
arpl
inc
add
pushl
pushl
cmp
add
imul
pop
dec
insb
dec
add
add
add
add
mov
add
lcall
pop
icebp
fisttpl
and
push
jmp
nop
mov
sbb
push
lahf
jo
call
call
lods
xchg
cmpsl
add
inc
add
add
lret
addl
setl
add
add
lahf
mov
scas
lret
pop
add
add
dec
push
add
xor
lcall
movsl
add
add
into
or
mov
jg
mov
add
call
add
push
arpl
pushl
decl
in
mov
sbb
add
ljmp
add
lcall
mov
add
fadd
add
mov
ja
add
cmpxchg
add
jg
jnp
aas
xchg
fstl
in
xor
add
add
lods
cmp
mov
out
lock
push
imul
arpl
fnstenv
incl
add
outsl
mov
add
and
jmp
incl
pop
add
inc
add
or
in
data16
mov
bnd
xor
add
xchg
jp
add
pop
imul
jl
cwtl
cmp
add
inc
add
inc
add
add
add
mov
sub
add
roll
push
add
lock
decl
in
js
add
pushl
xlat
pop
jns
add
jne
add
push
mov
test
sub
push
iret
imul
add
or
sbb
add
test
add
dec
mov
mov
scas
roll
add
stos
inc
add
arpl
lcall
mov
decl
push
add
repz
fsubrl
pop
add
sub
add
add
jg
sub
test
ds
inc
add
xchg
sbb
xor
jmp
lock
dec
repz
or
dec
xchg
daa
add
add
xchg
cmpsb
add
add
jmp
imul
fnstenv
out
in
outsl
sub
das
les
mov
gs
cmc
add
incl
aam
add
out
jae
mov
jbe
add
jecxz
popa
add
pop
adc
jmp
add
mov
test
mov
mov
adc
decl
jno
push
fisubrl
ljmp
add
or
add
loopne
addb
mov
ret
inc
add
cmp
aaa
cmp
out
push
add
xchg
shll
mov
test
into
add
pushl
ljmp
and
ljmp
or
cmpsl
add
add
in
jo
call
imul
cmp
mov
add
enter
cmp
add
adc
jmp
add
add
add
incl
xor
pushl
add
ficompl
add
add
fimull
aas
jns
push
add
cs
add
sub
in
rcl
or
lret
popa
add
das
idivb
movl
sub
cmp
mov
add
adc
mov
or
pop
scas
pop
sbb
add
xchg
dec
jo
incl
or
add
inc
add
adc
add
adc
add
mov
loopne
insl
push
add
or
or
decl
add
add
mov
incl
or
add
xor
add
call
ljmp
mov
stos
or
shrl
bound
push
movsl
add
add
add
lret
add
scas
push
add
adc
sbb
add
sub
pushl
pushl
add
loop
cs
add
fwait
jne
add
adc
pop
mov
ljmp
fst
inc
add
xchg
sahf
lock
call
sub
jae
ljmp
adc
incl
add
jp
or
ljmp
mov
jge
add
inc
add
ds
cltd
xlat
ja
icebp
out
inc
add
add
mov
add
out
leave
add
sbb
add
