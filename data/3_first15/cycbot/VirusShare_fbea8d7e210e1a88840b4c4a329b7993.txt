jp
in
dec
mov
and
ret
les
lods
lahf
pop
mov
shll
cwtl
or
cmove
push
mov
mov
lahf
and
mov
sbb
sub
pop
les
sbb
fnstenv
add
mov
adc
mov
mov
lahf
jno
mov
xlat
sbb
push
add
lahf
fsubrp
dec
movsl
test
or
rorl
rcl
inc
add
xchg
jl
nop
add
mov
or
cli
and
xchg
addb
mov
mov
mov
jge
xchg
and
jae
push
lods
or
imul
movsl
test
add
sub
je
mov
sbb
push
cwtl
and
xor
jns
cmpsb
xchg
add
aaa
cmpsl
lods
inc
inc
add
mov
pop
nop
add
movsl
sbb
add
mov
sub
mov
add
and
add
ret
fisttps
and
repz
test
repz
or
bound
mov
inc
rcrl
xchg
mov
lds
gs
push
inc
fwait
std
dec
cmp
das
xor
mov
mov
imull
dec
test
repz
dec
test
jae
movsb
repnz
xor
pop
xor
stc
or
loope
sbb
xor
mov
mov
sar
ljmp
add
jno
dec
stos
jecxz
jl
pop
add
mov
xor
add
sahf
movsl
sbb
fcmovnbe
lods
dec
out
add
push
fwait
add
mov
mov
mov
dec
ja
and
aas
es
sub
add
and
mov
hlt
gs
cmp
sub
lret
sub
push
lods
loop
mov
mov
scas
icebp
movsl
addr16
lods
pop
sbb
add
add
add
mov
cmc
adc
in
into
outsl
sub
mov
adc
mov
movb
addb
mov
sub
sbb
add
test
add
fwait
pop
lods
xchg
sbb
lds
xchg
xor
mov
mov
xchg
or
adc
mov
inc
lret
add
add
fldenv
add
xlat
adc
repz
mov
outsb
xor
add
mov
push
cmp
add
mov
push
sbb
xchg
call
mov
rorl
xchg
in
std
mov
mov
add
mov
mov
cmp
push
add
clc
xchg
add
and
mov
add
cmc
xchg
or
popf
adc
mov
cmp
mov
jmp
add
mov
out
xchg
xchg
or
add
add
ljmp
xlat
insl
pop
cld
mov
push
add
add
mov
loopne
mov
enter
bound
mov
add
rolb
mov
ljmp
inc
add
xchg
loope
das
dec
lock
jne
shll
dec
mov
xor
add
negl
pop
cmp
add
ret
jle
and
mov
adc
push
aam
mov
dec
dec
filds
sub
push
lcall
test
add
jge
adc
mov
cmp
add
mov
lcall
mov
xchg
jns
jg
mov
adc
rolb
mov
fistl
aaa
push
stos
popa
jl
in
add
push
sub
das
aam
pop
bound
mov
xor
mov
xchg
test
mov
adc
aam
out
aad
add
mov
pop
adc
fsubr
fldl
sbb
add
add
push
sahf
xor
mov
push
popa
or
add
leave
dec
pop
fsts
cld
push
and
mov
pop
jno
cli
pop
adc
xor
mov
mov
mov
shl
cli
je
fldcw
scas
jno
and
push
or
enter
pop
addb
mov
and
out
leave
adc
add
inc
push
mov
mov
add
gs
int3
xor
mov
cmp
mov
mov
jge
sub
ss
lea
add
mov
lock
add
fs
mov
jb
mov
inc
xchg
aas
test
jmp
add
ficomps
inc
fs
add
lods
das
add
mov
mov
add
mov
add
sbb
add
add
lock
mov
lret
xorl
xlat
adcl
mov
xchg
loop
mov
push
pop
mov
mov
lret
lods
inc
push
or
adc
mov
mov
jmp
push
jge
inc
popa
fsubl
cmc
mov
out
hlt
pop
lds
jns
add
mov
movswl
xchg
ds
lahf
mov
add
aam
push
add
add
inc
clc
jo
mov
enter
mov
std
cmpl
sub
je
cmc
jae
dec
or
dec
xchg
add
in
add
ds
lock
cmp
addl
mov
cmp
loop
mov
fmuls
xlat
addb
into
sbb
movsl
adc
dec
int3
icebp
sbb
in
mov
into
stos
cwtl
mov
mov
fsubrl
lds
add
mov
rolb
mov
mov
xchg
ret
cmpsb
xchg
sti
and
mov
sbb
popa
inc
or
movsb
movsb
enter
insb
push
cs
out
push
sbb
add
mov
jecxz
dec
stos
adc
mov
or
add
jecxz
movsb
add
and
loop
mov
insl
xchg
add
stc
test
in
dec
repz
mov
adcl
dec
aad
add
add
repnz
push
out
cwtl
jge
adc
mov
mov
mov
test
push
cmpl
cwtl
popa
add
add
idivb
lods
call
mov
add
mov
add
cmp
sub
daa
in
lret
sahf
xchg
dec
and
inc
stc
sub
cmc
clc
dec
lret
sahf
jnp
dec
xor
mov
mov
xor
fdivl
push
imul
addb
add
imul
cli
mov
js
into
push
add
lds
fistl
add
int3
mov
jbe
stos
dec
popa
push
add
cwtl
lret
cmp
pushf
jmp
cmp
addr16
mov
enter
adc
mov
dec
push
cmp
sahf
jg
inc
add
add
add
stos
cmp
mov
mov
insb
mov
cmpsl
mov
pop
iretw
or
add
add
in
into
pop
test
sub
fwait
adc
push
mov
add
inc
stc
scas
cmp
int3
daa
inc
ljmp
out
sahf
and
out
call
adc
outsb
jae
pop
add
repz
std
fs
sub
xchg
test
xchg
push
les
push
gs
aaa
mov
mov
gs
mov
loopne
mov
push
ret
xchg
add
sub
ret
test
pop
push
movsl
mov
or
daa
movsl
inc
add
and
add
jl
sti
inc
add
add
add
sub
mov
decb
insl
add
push
mov
scas
fisubl
inc
cltd
push
fcmovne
mov
add
dec
cmp
es
push
dec
and
sub
dec
repz
in
mov
sbb
cmp
leave
jne
add
mov
add
mov
rolb
mov
push
push
hlt
push
jp
test
int3
movsl
push
outsl
add
repnz
mov
stos
pop
adc
xchg
mov
call
sbb
pop
fwait
or
push
push
mov
jle
out
daa
sbb
mov
iret
mov
add
mov
add
mov
add
cld
add
push
mov
inc
es
add
add
sub
add
mov
lahf
dec
xchg
pop
or
mov
sub
mov
mov
dec
ss
inc
cli
scas
and
add
dec
push
jg
mov
add
add
add
aas
jne
add
push
add
push
fisttpll
dec
stc
std
mov
mov
adc
mov
or
add
int3
in
sub
add
aam
add
mov
rorl
sahf
mov
and
repnz
mov
cmp
ds
bound
mov
cs
addb
sbb
div
add
jno
repz
fnstsw
sbb
repnz
add
test
pop
jg
fidivs
mov
sbb
xchg
add
mov
jle
daa
xchg
add
inc
adc
sbb
jg
pop
addb
addb
add
add
jecxz
insl
shll
ljmp
clc
lea
add
mov
add
and
mov
mov
dec
push
stos
es
mov
ficoml
add
add
mov
sbb
pop
leave
scas
xchg
outsb
push
add
faddp
rolb
mov
hlt
icebp
push
add
mov
add
lea
dec
cmc
xor
mov
add
xchg
rolb
mov
sti
cmc
jne
addb
int3
cld
pop
clc
out
add
mov
arpl
pop
test
xchg
xchg
add
pop
ljmp
call
add
pop
pushf
dec
jp
add
adc
mov
add
mov
das
mov
mov
ficomps
aad
sub
jbe
mov
sahf
gs
mov
pop
xor
inc
ret
lcall
or
mov
add
sub
push
lock
mov
xlat
push
add
jae
in
aas
loope
xchg
sub
in
sbb
out
add
or
push
movsb
jo
mov
jecxz
add
add
add
mov
xchg
lea
cwtl
add
mov
divl
mov
mov
mov
mov
dec
mov
add
mov
xor
mov
or
mov
or
xchg
ss
add
pop
scas
xchg
popf
loop
mov
repnz
mov
add
or
gs
cltd
fcmove
ret
or
dec
push
add
jne
stos
outsb
mov
dec
test
insl
push
add
rolb
mov
mov
mov
add
std
ret
cmp
in
add
les
repnz
jge
pop
sbb
ja
mov
and
mov
xchg
ss
inc
add
insl
loope
sar
add
add
dec
call
or
int3
movsb
xchg
xchg
inc
jnp
lods
fldt
or
add
cmpsb
xor
mov
cltd
jp
push
out
and
test
push
call
loop
mov
mov
jmp
xor
add
push
das
or
out
rolb
mulb
xor
loopne
mov
jno
dec
xor
nop
add
sub
jmp
sbb
push
sub
inc
add
mov
outsb
je
mov
jnp
inc
add
pop
in
int
mov
cmp
cmp
xor
jmp
lret
mov
out
out
push
add
addb
mov
add
add
icebp
cmpsb
adc
mov
push
rolb
mov
fstpt
scas
mov
mov
xchg
fimull
xchg
add
add
push
lods
or
xchg
and
add
mov
stc
jl
js
add
add
add
mov
cld
cs
mov
enter
mov
mov
add
mov
addb
or
push
cld
inc
add
mov
add
mov
add
push
mov
bound
mov
aam
add
popa
daa
cmp
stc
test
pop
xchg
push
jmp
addr16
push
push
out
arpl
cld
jmp
cs
pop
or
xchg
mov
xchg
icebp
cmpsb
pop
cmp
in
dec
jge
adc
inc
add
mov
mov
push
cmp
adc
mov
int3
sub
in
sub
sub
push
push
push
push
push
push
cld
call
sub
es
movzbl
cmp
ss
push
push
call
mov
cmp
je
es
lea
cs
sub
mov
push
es
call
test
jne
jmp
leave
push
es
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
nop
lea
lea
sub
add
mov
sub
sub
push
pop
push
je
jmp
add
add
mov
imul
notl
jno
add
mov
jmp
fcomps
push
mov
push
add
cmp
mov
outsl
adc
dec
pop
inc
or
jns
fisttpl
aas
mov
mov
stos
dec
pushf
scas
hlt
sbb
mov
add
js
addb
in
pop
ret
aam
data16
mov
in
icebp
hlt
repnz
into
cmpl
add
mov
pop
sbb
add
stos
or
daa
xor
mov
mov
mov
dec
push
inc
outsl
xor
fsubrl
add
jecxz
mov
jb
mov
add
pop
xor
mov
and
adc
add
mov
sahf
pop
addb
mov
or
testl
jnp
jae
in
and
mov
sub
add
insb
loopne
mov
das
movsl
int3
jne
push
add
ds
out
push
sti
out
pop
and
aam
sbb
inc
dec
loop
mov
xchg
mov
pop
aam
and
lcall
mov
aas
mov
add
cmp
test
add
mov
inc
loopne
mov
dec
mov
push
ds
test
jae
jge
stc
mov
mov
bound
mov
mov
add
loop
mov
add
sbb
and
lods
dec
test
add
mov
jecxz
nop
add
loopne
mov
fwait
roll
mov
sub
out
mov
mov
inc
fisubrl
mov
les
inc
pop
mov
stos
sub
cmp
rolb
push
stos
aad
jge
lds
mov
inc
or
add
stc
dec
adc
insb
movsl
int3
call
xor
outsl
pushf
fidivrl
stos
enter
pusha
add
inc
add
mov
and
cs
jb
mov
loopne
mov
aaa
ret
addb
enter
add
add
xchg
add
xchg
xchg
pop
push
test
add
jge
mov
ljmp
add
inc
xchg
inc
add
and
pop
fidivl
fsubr
stos
adc
mov
les
cli
add
lock
test
lock
cmpsb
xor
rolb
mov
inc
imul
mov
add
fstl
add
adc
lods
mov
cli
and
mov
pop
test
out
rolb
addr16
push
cmp
jle
icebp
and
je
sub
add
cli
xchg
dec
push
add
scas
test
xchg
add
inc
cmpsb
and
sti
cmp
mov
mov
sahf
mov
pop
mov
sub
in
push
adc
int3
icebp
aaa
clc
push
stos
inc
cmpsl
push
adc
add
mov
cmpsl
xchg
push
andl
rcrl
ja
out
nop
add
add
int
add
les
mov
fcoml
jp
shll
stc
xchg
hlt
loope
les
imul
adc
mov
jp
das
aaa
and
add
add
mov
cmp
nop
add
sbb
jmp
pop
imul
addr16
jbe
add
mov
add
mov
sub
outsl
arpl
mov
loop
mov
repz
and
mov
sbb
add
test
cli
mov
xor
mov
movb
inc
mov
push
push
movsl
pusha
add
fbld
mov
push
das
dec
dec
inc
sub
push
je
mov
jns
mov
or
mov
ds
addb
dec
popf
addb
dec
decb
jp
add
mov
in
xchg
popa
aad
scas
movsb
adc
ljmp
inc
xchg
lds
fstps
cmpl
mov
aad
push
xor
mov
add
pop
xchg
pop
inc
add
mov
add
mov
sahf
fstps
outsb
jp
sbb
cmovl
adc
mov
das
sti
cmp
stos
xchg
repz
jmp
int
inc
add
mov
inc
add
lahf
lock
lret
push
add
inc
addb
cmp
fcmovnu
dec
mov
add
add
lcall
aas
pop
xor
jg
mov
sbb
hlt
in
cmc
stos
sub
in
mov
insb
mov
mov
mov
test
jne
lock
mov
sub
xchg
push
cmp
nop
add
mov
add
push
mov
xchg
pop
insb
les
add
pop
mov
jns
mov
in
aas
pop
test
push
sti
add
mov
mov
enter
pop
cld
mov
mov
fcmovb
xchg
add
insl
ficoml
add
or
or
pop
mov
push
add
bound
mov
pusha
add
mov
out
push
add
inc
mov
adc
xlat
in
add
xchg
adc
mov
into
iret
mov
mov
xchg
cmc
mov
xor
addb
insb
or
add
add
mov
pop
add
add
out
jnp
xor
mov
push
push
call
add
mov
add
inc
ss
pop
aam
pop
jbe
stos
aam
dec
inc
mov
sbb
lcall
or
mov
imulb
jo
mov
sarl
lds
cmp
push
xchg
jbe
push
push
sub
aaa
jo
mov
adc
test
addr16
add
stc
or
call
je
cli
or
add
add
mov
add
das
stos
dec
mov
ret
mov
addr16
clc
mov
enter
out
jbe
add
rcll
or
in
add
mov
adc
rol
jns
and
xor
sub
cmpl
lcall
xchg
add
add
std
loop
mov
add
add
mov
add
imul
jo
mov
fiadds
mov
xor
mov
add
mov
add
jp
lret
sbbl
cmp
icebp
cmp
mov
add
mov
jmp
hlt
or
mov
fs
notb
mov
mov
sub
xchg
scas
call
movsb
ja
dec
jge
mov
mov
dec
jb
mov
inc
cmp
dec
bound
mov
jp
jne
fwait
lcall
mov
mov
add
mov
test
fdivrp
adc
rolb
mov
shrl
or
push
mov
jg
test
lea
add
insb
pop
mov
mov
add
iret
mov
mov
dec
sarl
mov
cmp
jno
add
mov
cmp
jge
std
outsl
sub
push
push
imul
ja
jge
dec
addr16
outsb
popa
ret
xchg
jae
shll
and
pushf
repz
and
and
or
jge
pop
je
mov
mov
mov
sub
push
add
dec
repz
fdivp
mov
mov
in
inc
mov
or
add
clc
in
pop
sub
xor
lret
sbb
rol
add
and
cmc
fidivs
mov
add
arpl
add
rol
dec
test
add
mov
mov
push
add
push
jg
inc
cmc
push
cs
and
mov
sbb
lods
clc
mov
add
testb
add
sub
adc
movsb
jo
mov
mov
inc
ja
add
aam
ficompl
int3
ja
add
cltd
cld
in
inc
shll
mov
divl
mov
adc
mov
sbb
add
xor
int3
dec
rolb
mov
add
clc
mov
lods
push
sbb
add
fnstsw
call
mov
scas
out
mov
xchg
ss
push
push
push
popf
imul
hlt
push
add
mov
cmp
lcall
push
rolb
mov
adc
or
xchg
imul
mov
push
add
adc
mov
lds
lcall
scas
out
cmp
cmp
roll
repnz
add
jp
jns
adc
mov
inc
and
push
add
cmpsl
jle
ret
das
cmpsb
loop
mov
pop
lcall
push
arpl
in
lahf
mov
mov
sub
decb
int
jmp
add
popf
ss
sbb
fcomp
or
mov
add
sti
ja
arpl
add
ja
rolb
mov
add
andl
mov
add
inc
fidivrs
jg
ja
enter
mov
add
mov
mov
dec
cltd
cmp
add
mov
mov
xchg
inc
lea
dec
aam
fsts
mov
loopne
mov
das
iret
mov
dec
dec
and
mov
in
lea
xchg
mov
flds
mov
xchg
jo
mov
mov
rcll
jle
imul
mov
popf
shll
mov
add
int3
mov
inc
adc
mov
cs
pushf
lods
xchg
inc
add
cli
xchg
mov
int
and
mov
adc
mov
add
sbb
mov
mov
and
mov
lret
adc
test
scas
and
mov
jl
pop
test
bound
mov
add
add
mov
das
cltd
pop
pop
xor
cltd
lock
cld
int
pop
data16
repz
sbb
adc
mov
push
add
ds
aas
test
leave
and
mov
sbb
xchg
les
addb
stos
pop
rolb
xchg
mov
add
rolb
jle
hlt
repz
mov
fsts
xor
mov
xchg
testl
add
add
rorl
fisubs
mov
mov
add
cltd
addb
andl
mov
fidivl
mov
out
and
mov
pop
leave
push
jge
sbb
outsl
mov
imul
imul
add
sub
add
rcrw
or
fucomip
popa
stos
dec
imulb
bound
mov
shll
mov
stc
rcrl
dec
inc
mov
loope
stc
jle
pop
dec
ret
mov
into
lock
in
jecxz
adc
enter
mov
add
push
pop
flds
sbb
rcrl
sbb
mov
add
fisttpll
add
mov
jne
cs
lret
imull
lea
ljmp
test
mov
dec
xor
pop
stos
mov
hlt
data16
xchg
add
add
xlat
push
add
aas
loope
clc
in
xor
mov
inc
cld
mov
add
add
adc
mov
addb
fpatan
popf
and
ror
pcmpgtd
jg
push
cmp
jmp
in
into
pop
push
mov
add
add
mov
xchg
pop
xchg
popf
ljmp
adc
mov
dec
repnz
add
aam
loop
mov
cmp
faddp
jae
xor
xor
push
vmovd
sub
sbb
mov
addb
lea
add
mov
cmc
lods
mov
enter
push
add
into
xchg
jle
jns
out
add
mov
add
fisubrl
jp
out
test
mov
out
push
imul
mov
add
add
mov
add
adc
mov
cmp
mov
add
mov
adc
add
loope
cmpsl
xchg
aas
push
lcall
bound
mov
outsl
movsb
outsl
mov
xchg
add
inc
add
std
mov
mov
inc
stos
imul
pop
or
mov
je
or
cmpsl
mov
jp
mov
add
cmp
movb
and
dec
xor
xchg
rolb
mov
adc
add
and
mov
inc
add
jns
addb
jnp
cmp
test
add
jo
mov
inc
scas
dec
rcr
out
lcall
xor
sbb
mov
mov
mov
hlt
inc
clc
inc
sub
mov
sahf
sub
in
call
mov
add
pop
xchg
sbb
icebp
and
cld
ret
ret
dec
incb
jne
add
in
scas
stos
pushf
cld
outsb
fucomp
or
push
mov
rsm
fistps
into
nop
add
outsl
jmp
test
mov
mov
in
fwait
mov
add
mov
dec
adc
mov
cltd
xorw
adc
mov
inc
add
pop
cmpsl
insl
jp
xchg
sub
or
xor
cmp
add
mov
stos
mov
lret
outsl
add
pop
or
mov
sub
add
mov
add
test
mov
dec
outsb
pop
xchg
les
test
mov
add
add
inc
dec
adc
mov
add
addb
rolb
inc
jecxz
xchg
mov
mov
mov
inc
add
xlat
cmp
jnp
out
jle
mov
insl
test
outsb
push
add
xor
push
mov
cmp
jg
ss
adc
mov
xchg
sub
mov
mov
in
addb
in
inc
addb
leave
xchg
lahf
inc
cs
int
pop
lods
cmc
xor
sub
add
sub
jg
mov
rolb
mov
out
mov
mov
inc
sub
dec
out
push
lret
jl
loope
lcall
test
lea
loope
movsl
and
bound
mov
xchg
xor
jns
add
mov
outsb
es
scas
repnz
push
add
loopne
mov
mov
add
jp
jns
pushf
inc
xchg
lcall
mov
mov
sahf
jnp
cmpsb
push
lock
lds
mov
push
add
mov
das
cs
mov
mov
add
cmp
add
aad
aas
adc
mov
add
pop
add
push
mov
mov
add
adc
mov
mov
outsb
jne
scas
inc
xchg
les
jge
mov
inc
jno
fbld
out
mov
aad
pop
in
jne
aad
sbb
add
inc
push
mov
jbe
or
ss
enter
jl
add
mov
jne
pop
addb
fstpt
dec
out
insb
jne
out
lods
pop
push
incb
and
mov
or
add
xchg
jbe
mov
pop
pop
xchg
cmpsb
or
fistpl
jecxz
add
push
jge
cmp
mov
es
jmp
cmc
stos
mov
add
mov
mov
or
mov
mov
fdivrl
nop
add
push
add
add
cmc
xchg
cmp
sti
stos
jae
jne
add
aad
add
cmc
ret
leave
and
inc
jl
cmp
adc
mov
sahf
out
add
mov
pop
scas
enter
mov
add
mov
push
push
mov
sahf
push
sbb
lahf
out
test
int3
cmp
add
ljmp
je
jge
xchg
add
mov
scas
sbb
and
lods
or
xchg
inc
add
popa
push
repnz
add
add
ret
pop
sti
sahf
ret
mov
jl
sahf
lea
cmc
in
cmp
fucomi
jb
mov
in
cmp
push
xlat
push
js
mov
mov
pop
cmpsb
imul
mov
inc
aam
dec
pop
aam
aad
rcr
xor
mov
addb
pop
and
xor
pushf
jno
cmp
add
mov
add
mov
dec
xlat
loop
mov
aad
std
pop
loope
inc
popf
xor
pushf
adc
sub
mov
add
or
sub
outsb
jbe
negb
add
mov
add
addb
cmp
and
aad
iret
lret
inc
xchg
dec
sub
stos
or
add
or
mov
mov
add
loope
sahf
inc
repz
add
mov
push
add
mov
mov
mov
mov
sti
push
les
inc
sbb
push
add
ficoml
pushf
mov
add
sbb
sub
movsl
mov
mov
add
out
jae
add
dec
out
xor
insl
push
pop
fidivrs
test
bound
mov
stos
imul
cmp
scas
rolb
sbb
mov
sub
pop
das
mov
pop
hlt
jmp
pop
cmp
pop
insw
cltd
cwtl
idiv
imul
out
in
add
xlat
rorl
sub
push
cmpsb
mov
xor
cltd
cmp
push
add
pop
xchg
mov
add
cmpsl
adcl
cmp
adc
movsl
dec
negl
add
push
sbb
ds
mov
xor
out
andl
add
push
pop
clc
or
add
xchg
rolb
xchg
inc
ja
fwait
dec
pop
inc
fcmovnbe
in
mov
mov
imul
test
cmp
inc
les
jl
mov
sbb
popf
shll
orl
mov
cmpsl
lahf
or
ds
rolb
mov
movsl
cmp
into
push
add
mov
test
rorl
push
loop
mov
fwait
push
sbb
mull
ret
mov
jbe
jno
stos
add
ja
addb
icebp
in
dec
jno
jnp
or
xor
mov
lret
gs
add
add
cmpsl
aam
add
push
add
xchg
iret
mov
inc
fs
int
std
negl
outsl
jg
ret
hlt
stos
jecxz
mov
jne
mov
mov
adc
or
push
cs
cmp
fdivs
add
sbb
mov
add
jecxz
push
push
jp
add
sbb
out
lret
pop
jbe
fcmovne
mov
data16
movsl
mov
call
mov
sbb
outsb
mov
addr16
sbb
mov
adc
add
mov
pop
cwtl
adc
mov
mov
rorl
stos
add
or
or
rcrl
insb
jne
bound
mov
test
push
std
add
adc
hlt
inc
adc
sub
add
add
sbb
call
mov
in
pop
lds
repnz
cwtl
hlt
mov
and
or
icebp
out
lea
cmp
lods
arpl
dec
cmovno
add
adc
mov
mov
iret
mov
add
push
fwait
lcall
cmp
push
loop
mov
jle
add
push
lds
pop
cmpsb
mov
push
pop
cmp
sbb
insb
jle
or
repz
dec
xchg
mov
dec
lea
incl
add
add
push
add
inc
fwait
mov
add
mov
aad
add
mov
add
popa
dec
sub
push
jmp
xor
mov
mov
add
addl
mov
add
pop
jbe
sbb
mov
dec
push
mov
mov
popa
nop
add
add
push
add
add
mov
mov
ds
sub
dec
inc
push
add
mov
daa
sub
or
or
pop
ljmp
mov
in
repz
fnstenv
add
fwait
xchg
push
add
and
fdivs
fstps
mov
inc
pop
sub
cmp
mov
les
loop
mov
jae
add
mov
pushf
mov
imul
adcl
insb
aam
rolb
mov
push
pop
fwait
inc
add
add
mov
push
mov
pop
xor
mov
cmp
pusha
add
mov
push
or
add
movb
xchg
add
fs
cmp
inc
add
add
mov
add
out
loop
mov
xchg
mov
xchg
outsl
pop
or
iret
pop
add
sub
rolb
mov
mov
pop
call
push
cltd
jge
test
std
xchg
mov
xchg
imul
rcrl
push
scas
xchg
leave
push
add
push
add
add
push
loopne
mov
add
sbb
fwait
inc
pop
xor
jne
add
add
out
add
stc
or
mov
and
mov
mov
sub
xor
lds
sub
mov
mov
mov
mov
mov
and
mov
test
aam
les
jg
pop
xchg
add
mov
add
add
test
test
lods
adc
popf
jno
cmp
add
and
mov
mov
iret
cmp
jb
mov
mov
rolb
mov
mov
shll
stos
xchg
lea
fcoms
add
cmp
rolb
cmpsb
les
add
sub
mov
ljmp
lds
or
popf
js
stos
pop
sbb
cmc
push
add
mov
pop
xchg
mov
cmp
xchg
dec
push
add
fldcw
cmp
sub
push
add
add
add
mov
mov
imul
out
pop
adc
mov
je
rolb
mov
scas
shrl
sub
mov
pusha
add
js
add
scas
xchg
aas
sub
inc
add
and
mov
loop
mov
mov
mov
sub
add
rolb
mov
cwtl
cwtl
ja
xor
add
mov
pusha
add
test
ss
or
sub
mov
inc
add
mov
stos
fistps
pushf
outsb
push
ret
xchg
add
mov
aas
scas
inc
dec
pop
std
insl
mov
jb
mov
add
mov
inc
xchg
cltd
cmp
inc
aam
fsubs
cmp
into
negl
mov
cmp
setle
mov
sub
add
mov
rolb
mov
push
cmp
xchg
xchg
push
sub
adc
nop
add
shll
mov
add
ret
jg
pop
in
stos
fisubrl
xchg
xchg
add
mov
adcl
mov
inc
add
inc
add
in
xchg
xchg
in
rolb
mov
ficoml
mov
mov
add
add
mov
or
add
jl
dec
push
push
bound
mov
dec
add
sub
sub
aas
mov
mov
xchg
inc
sbb
adc
mov
insb
dec
mov
std
jbe
cmp
or
add
inc
lds
sub
rcll
bound
mov
add
inc
add
repz
rolb
xor
xor
mov
add
add
adc
aaa
stos
in
xor
mov
push
lods
adc
or
adc
mov
leave
jge
je
imul
rolb
mov
in
cltd
pop
int
inc
dec
pop
int
add
jecxz
das
mov
pop
pop
aam
or
popa
xor
mov
enter
mov
add
enter
or
sbb
mov
mov
repz
leave
sub
mov
roll
and
mov
xchg
mov
mov
sub
or
mov
mov
outsl
mov
jae
add
fists
inc
roll
test
add
add
mov
cmpsl
out
les
mov
mov
ss
js
addb
int
aaa
loop
mov
add
cmp
add
mov
stos
lret
imul
add
cmp
xchg
mov
les
sub
sahf
loope
pop
and
mov
scas
sahf
in
cld
add
mov
pop
sbb
mov
mov
cmp
mov
add
mov
mov
dec
xchg
add
mov
ss
xchg
data16
or
nop
add
mov
dec
or
popa
ret
cmp
jmp
add
inc
mov
mov
fidivs
arpl
in
jp
into
je
aaa
rolb
mov
ja
out
in
jno
xor
mov
ds
stos
pop
hlt
dec
mov
test
xor
add
popa
fwait
dec
mov
jno
loope
add
enter
loop
mov
dec
out
mov
mov
les
add
mov
jmp
ret
and
out
mov
cmp
add
add
add
aam
jmp
out
cmp
hlt
addb
dec
data16
add
in
add
add
stos
xchg
lea
cmp
add
mov
mov
mov
pop
push
jg
add
jmp
or
repnz
adc
mov
mov
add
clc
mov
pop
das
test
sub
xchg
test
leave
leave
addb
das
dec
testb
notb
push
add
sbb
into
mov
cmpl
add
pop
inc
enter
mov
repz
push
add
fildl
mov
xor
add
mov
add
mov
lods
xchg
popa
pusha
add
mov
mov
insl
cmp
mov
mov
inc
mov
dec
fldt
lcall
add
mov
daa
lahf
adc
mov
mov
sti
repz
push
sbb
mov
aas
scas
mov
mov
add
sub
dec
outsb
mov
mov
sub
xchg
call
mov
sbb
rolb
mov
icebp
xchg
or
sbb
mov
sbb
jo
mov
mov
stos
cmpsb
or
jns
add
cltd
jns
xor
mov
sbb
test
sbb
pop
stos
popf
inc
pop
inc
xor
mov
jg
dec
test
add
dec
inc
popf
sub
dec
adc
sub
add
clc
rcrl
fidivrl
outsb
jb
mov
ja
ficoml
jae
fnstsw
fsubl
dec
jns
mov
addb
pop
inc
push
cmc
inc
mov
mov
lods
jae,pt
call
mov
mov
nop
add
pop
dec
lock
add
jo
mov
repnz
test
mov
dec
jmp
sahf
int3
insl
dec
clc
cld
pop
out
icebp
insb
jle
add
lods
add
int3
pop
mov
mov
in
sub
das
sbb
iret
out
mov
outsl
adc
aas
push
mov
fildl
insb
cs
mov
mov
adc
add
mov
imul
or
mov
add
mov
adc
mov
xlat
not
add
push
inc
stos
pusha
add
in
jl
jno
mov
add
xchg
inc
add
fldl
aaa
xchg
pusha
add
add
mov
test
add
je
add
test
inc
pop
push
add
add
pop
xchg
insb
inc
dec
mov
lcall
ret
mov
ljmp
push
lods
stos
sbb
cld
inc
xorl
sub
int
pusha
add
mov
mov
cmp
xchg
rcrl
push
dec
sub
popa
lods
loopne
mov
leave
cltd
sbb
ds
mov
push
daa
xchg
adc
icebp
mov
ds
daa
in
addb
aaa
mov
int3
cli
mov
int3
push
add
add
loopne
mov
cmpsb
xchg
dec
mov
add
xchg
jno
xchg
daa
out
scas
xchg
pop
jnp
daa
int3
out
fsubp
lds
mov
add
and
loop
mov
add
adc
jecxz
adc
mov
insl
jo
mov
adc
mov
add
add
loopne
mov
jb
mov
bound
mov
dec
and
mov
adc
mov
jbe
xor
mov
fnsave
jns
and
mov
pop
test
add
add
pop
int3
mov
mov
add
add
mov
xor
mov
popf
hlt
push
add
mov
dec
jp
outsb
and
movsb
xchg
loop
mov
xchg
add
fcmovnu
xor
mov
fsubrs
fldt
sbb
divb
addb
pop
inc
adc
mov
mov
lcall
in
add
lret
push
adc
cmp
push
aaa
dec
sti
pop
mov
popf
mov
test
push
jne
pop
ret
sbb
and
stos
test
mov
movsl
push
out
or
mov
and
mov
add
into
je
out
jbe
pop
mov
sbb
lcall
xchg
inc
stos
in
push
es
inc
add
mov
add
xchg
xor
sarl
decb
and
sub
jge
xlat
sub
xorl
fisttpl
sbb
adc
mov
push
adc
mov
out
fadds
cwtl
adc
mov
dec
pop
aas
mov
mov
in
addl
pop
sahf
mov
loopne
mov
popa
xchg
mov
mov
mov
cmp
push
mov
cs
add
xchg
xchg
aas
popa
in
std
adc
mov
imul
sti
out
add
mov
jae
mov
push
adc
xchg
cltd
mov
and
mov
fdivrs
and
ja
out
adc
gs
mov
inc
outsb
imul
dec
dec
sub
notl
add
mov
movb
ss
mov
outsl
xchg
cs
lret
add
xchg
mov
mov
cmpsb
jle
add
mov
add
mov
fs
xor
mov
cld
push
adc
mov
jno
shll
rolb
adc
sub
add
fists
add
sbb
jmp
aad
inc
add
cmpsb
loopne
mov
pop
adc
lahf
dec
xor
mov
cli
daa
out
je
jle
jmp
push
push
cmpsb
push
cmp
addb
sahf
sub
xor
add
mov
cmp
orl
and
mov
mov
cmpsl
ljmp
into
sti
out
jmp
add
divb
add
sub
xlat
push
mov
pop
iret
loopne
mov
add
mov
push
or
mov
push
push
repnz
add
pusha
add
jp
test
cmp
addb
add
xor
jne
ds
jnp
fldcw
jbe
sub
pop
aas
add
mov
lret
xor
add
mov
xchg
movsl
mov
or
insb
repnz
sbb
mov
add
or
and
mov
push
pop
mov
mov
and
scas
insb
arpl
out
iret
movsb
lea
data16
mov
cmp
mov
push
sahf
sbb
mov
bound
mov
mov
lret
cli
bound
mov
add
mov
mov
aad
mov
mov
dec
rolb
rolb
mov
repnz
add
xchg
loope
sahf
in
aam
aam
outsl
aaa
inc
add
adc
add
add
and
mov
arpl
mov
add
scas
jo
mov
cld
mov
in
roll
mov
jg
loopne
mov
add
or
mov
adc
mov
psrlq
test
inc
dec
xor
add
push
lods
push
mov
adc
jae
sbb
and
mov
test
out
cld
dec
mov
jns
cld
jns
test
jne
or
add
add
faddl
dec
pusha
add
push
sbb
sub
pop
insl
add
jle
mov
insl
push
fnsave
les
jns
add
mov
mov
popa
pusha
add
inc
fcoms
into
movsb
mov
fwait
loop
mov
add
mov
loopne
mov
mov
dec
cld
inc
add
pop
in
cltd
dec
or
into
jle
cmp
sti
pushf
xchg
pop
pop
inc
lods
fsubp
test
loopne
mov
mov
fcoml
addr16
mov
mov
loope
mov
mov
imul
xor
mov
push
sbb
add
neg
cmp
dec
ret
cmp
cwtl
in
add
fdivr
jl
push
jle
push
add
xchg
cld
or
fildll
clc
aaa
jae
rolb
mov
or
jnp
push
bound
mov
in
popa
mov
sub
out
push
or
and
jp
sbb
lods
pop
call
add
add
or
dec
add
mov
cmpsl
sbb
push
add
cltd
lods
or
push
dec
mov
gs
mov
xor
adc
mov
pop
jecxz
daa
jne
mov
mov
xlat
mov
sub
add
fdiv
call
scas
adc
cli
loop
mov
and
adc
test
pop
inc
test
mov
mov
arpl
sti
scas
inc
lods
rcll
add
mov
adc
sbb
test
pop
cld
imull
scas
popa
and
dec
push
and
mov
movsb
mov
je
lock
jbe
bsf
out
xchg
aas
sbb
xchg
addr16
xchg
call
and
mov
cli
loop
mov
stc
in
movsb
mov
scas
ja
xchg
cmp
or
push
mov
jbe
aaa
cmp
mov
jne
adc
clc
pop
daa
cmp
out
xchg
out
ljmp
pop
dec
inc
add
rolb
mov
add
add
imul
add
add
imul
mov
add
or
add
sub
or
adc
mov
stos
push
dec
pusha
add
dec
test
and
mov
mov
mov
mov
mov
push
xchg
add
add
mov
in
pusha
add
cltd
and
inc
inc
in
and
mov
dec
movsl
adc
movsb
dec
int
fldt
js
inc
inc
or
fmull
add
add
mov
or
pop
rolb
mov
add
lock
add
and
mov
popa
outsl
es
jp
fbstp
movsl
jge
or
add
icebp
mov
call
or
insl
sub
sti
fnstsw
adc
pushl
cmp
lahf
and
mov
mov
mov
add
xor
mov
adc
scas
cmp
popa
cli
cltd
ret
shll
stos
mov
mov
lock
popf
mov
add
popf
jne
jp
push
push
xchg
push
mov
addr16
cs
int
rolb
mov
add
mov
inc
jo
mov
mov
add
and
mov
add
les
mov
mov
ja
and
mov
push
add
fstps
xchg
mov
mov
popa
jl
dec
bound
mov
push
repz
xor
mov
mov
aad
mov
add
add
jl
add
sbb
mov
mov
cwtl
or
in
rolb
mov
cmp
sbb
add
mov
insb
gs
add
inc
das
mov
fneni(8087
add
mull
inc
adc
add
inc
test
dec
jl
add
pop
jnp
notl
add
mov
outsb
test
adc
pop
loopne
mov
mov
mov
add
dec
pop
ja
adc
mov
jbe,pt
ja
rorl
daa
fwait
icebp
ja
loopne
mov
out
je
cmp
mov
pop
divl
mov
lock
push
mov
xchg
repz
ss
addr16
add
xchg
insl
sub
add
add
out
xor
mov
and
out
lret
imul
mov
enter
movsl
adc
add
add
sti
pop
xor
xchg
adc
mov
mov
dec
or
divb
xor
push
loop
mov
sbb
mov
aas
addr16
shll
xchg
out
leave
inc
add
and
mov
add
mov
popf
lods
push
aad
ficoms
rcll
add
xor
add
add
jbe
out
sbb
add
fmull
sub
jns
push
in
pop
insb
cmp
stc
lods
push
jmp
stos
fdivs
and
test
add
xchg
xor
mov
xor
mov
cmp
add
sub
add
xchg
stos
xchg
pop
sbb
arpl
jg
mov
inc
lret
test
xchg
orl
pop
rolb
mov
add
mov
imul
lods
das
dec
mov
add
hlt
pop
std
std
bound
mov
cmpsb
adc
enter
mov
xchg
pop
jl
jnp
ficomps
lahf
mov
mov
add
jnp
jno
add
out
and
lock
push
dec
dec
cmp
repz
and
mov
jno
rcrl
add
add
mov
xchg
imul
popa
dec
and
add
into
adc
mov
ret
adc
mov
mov
xchg
add
aas
jae
pop
icebp
inc
pop
mov
mov
pusha
add
mov
mov
jbe
mov
insl
mov
mov
jns
sti
mov
add
mov
add
add
lods
aad
mov
imul
aad
idivb
xchg
inc
sbb
xchg
out
xchg
pop
cmp
add
movsb
sub
cli
inc
xor
mov
or
add
out
jae
add
enter
inc
inc
pop
pop
sub
mov
mov
lock
xchg
icebp
inc
ljmp
pop
and
dec
xchg
jmp
mov
mov
push
imul
push
fcoml
popf
and
xchg
sbb
mov
sub
xor
mov
add
mov
mov
pop
cmp
add
xlat
sti
add
sub
sub
cmpsb
fisubl
orl
fdiv
aam
add
xor
mov
loopne
mov
cmp
cmpsb
ja
mov
lea
xor
or
std
leave
loope
jne
add
add
dec
adc
mov
inc
add
mov
test
add
ja
xchg
mov
add
xchg
push
jne
push
add
out
push
jecxz
adc
cmp
int
add
mov
into
rolb
mov
pop
mov
mov
in
sub
aas
test
xchg
mov
adc
mov
in
gs
xchg
mov
push
loopne
mov
push
add
mov
xor
sub
add
roll
add
pop
fstps
jae
mov
jmp
sbb
mov
cmp
aad
mov
lea
lret
ret
fstl
mov
std
pop
xchg
add
cwtl
stc
cmp
add
sbb
add
mov
fwait
sub
add
jno
sbb
jbe
icebp
addl
xchg
sub
sahf
popf
mov
mov
outsb
cld
stos
xor
mov
jmp
in
stos
inc
mov
xchg
sub
movl
jne
shll
imul
gs
mov
add
cmp
pusha
add
cmpsb
outsb
fdivs
leave
stc
fdivs
push
ret
shll
xor
cmpsb
rolb
mov
fisubrl
add
mov
dec
addb
lret
or
aas
out
xor
addb
mov
loope
adc
inc
in
test
cmp
pop
addb
inc
add
movsb
test
ret
cmp
or
jnp
add
ret
and
icebp
sbb
je
ret
test
mov
xlat
sub
add
mov
mov
cmc
in
push
int
add
push
addb
or
push
dec
sub
lret
aam
inc
inc
sub
lds
sbb
add
jg
sub
dec
pop
mov
pop
add
mov
scas
addb
jmp
add
mov
cltd
adc
subps
loopne
mov
add
sbb
mov
into
pop
xor
mov
mov
mov
add
outsl
dec
fxch
stos
xchg
mov
popa
in
idivl
sbb
inc
es
add
adc
scas
pop
adc
shll
mov
out
xchg
inc
add
sbb
jnp
in
add
mov
pop
mov
lcall
fisttpll
add
int
movsl
add
mov
xor
popa
jl
and
add
das
dec
jg
popa
das
ja
testl
ret
jl
aam
out
dec
cmp
mov
cli
cmpsl
jecxz
rolb
rolb
inc
rsqrtps
mov
ljmp
mov
fistpl
and
add
sbb
faddl
add
xor
fnstsw
push
add
mov
push
lahf
enter
mov
out
dec
ds
lods
add
rolb
mov
jns
int3
cmp
adc
mov
add
jmp
xchg
das
sbb
es
sahf
loope
push
rolb
mov
and
addb
iret
dec
push
add
adc
mov
loope
adc
mov
out
mov
mov
mov
add
lods
js
out
sub
jmp
stos
in
push
cwtl
hlt
fnstenv
call
mov
dec
fs
xchg
sti
jns
adc
hlt
jp
pop
fiaddl
pushf
out
pushf
cwtl
xchg
push
ret
or
repz
aad
inc
lds
ja
xchg
mov
mov
pop
lcall
mov
lods
jne
jbe
inc
add
or
mov
cmp
or
testb
outsl
push
icebp
pop
push
out
popf
cli
add
cmc
arpl
addr16
add
add
mov
mov
add
mov
pusha
add
arpl
mov
mov
mov
mov
push
push
push
ja
into
or
xchg
jb
mov
sub
mov
js
add
xlat
aad
insl
addb
xor
mov
push
in
dec
mov
sub
inc
dec
mov
dec
adc
jbe
int
add
xchg
xchg
outsb
mov
dec
rolb
mov
pop
fdivs
add
mov
mov
je
xchg
push
add
stc
inc
das
adc
mov
mov
mov
add
add
mov
mov
jo
mov
jl
iret
aaa
aaa
mov
mov
mov
inc
inc
add
fidivl
mov
xchg
pushf
sbb
mov
pop
f2xm1
add
cmp
add
cmpsl
mov
repnz
xchg
add
xchg
adc
scas
dec
xor
mov
xor
add
xor
mov
fldl
pop
sub
mov
jae
pop
out
jno
add
xchg
gs
lret
leave
dec
int3
repnz
jno
es
add
out
faddp
add
push
add
xchg
lods
cwtl
cmp
in
jae
mov
mov
idivb
inc
popa
dec
xorl
jge
jno
xor
scas
and
mov
dec
jno
and
loop
mov
lock
dec
cmp
cltd
ret
test
inc
cmp
ret
addb
mov
dec
ja
add
imulb
mov
mov
mov
inc
es
add
add
pop
sbb
repnz
pusha
add
dec
daa
mov
subl
and
mov
cmpl
mov
out
rolb
mov
lods
fnstsw
aam
dec
inc
subl
push
call
aaa
jbe
aas
push
xchg
rolb
mov
sbb
outsb
pmulhw
sub
xor
inc
xchg
insb
shll
mov
aaa
adc
or
lret
inc
add
add
adc
mov
lods
rolb
mov
jge
lea
add
cld
mov
jp
aaa
add
jl
ds
add
cmp
test
mov
add
mov
mov
push
mov
add
lret
test
jno
jo
mov
test
into
sahf
addb
cmp
add
addb
ds
pop
mov
add
fimull
iret
js
fwait
daa
mov
je
add
adc
mov
inc
jecxz
mov
mov
mov
jae
pop
insl
jge
jo
mov
mov
and
mov
nop
add
and
add
lods
pop
jle
enter
jbe
xchg
stos
cmp
push
in
movsl
push
inc
add
in
pop
adc
add
mov
mov
mov
pop
test
loopne
mov
out
rcrl
add
mov
lahf
fwait
mov
jne
mull
cmp
push
bound
mov
cmc
addr16
add
add
addr16
add
sbb
std
xchg
out
ret
icebp
push
pop
push
imul
sahf
sbb
add
cmpsl
jo
mov
add
add
inc
add
push
mov
pop
mov
sbb
jnp
xor
jl
add
xor
xor
push
dec
adc
popl
xor
mov
mov
fwait
imul
pop
xchg
add
fisttpll
loop
mov
mov
mov
dec
adc
mov
dec
mov
daa
jo
mov
mov
adcl
mov
adc
and
cmp
sbb
in
cmp
cs
ljmp
sub
cltd
xchg
ja
add
pusha
add
cli
push
add
sar
lds
clc
hlt
leave
jecxz
addb
push
cld
out
int
cs
mov
push
pushf
mov
add
xor
mov
aaa
cmc
push
add
mov
mov
mov
nop
add
xor
jbe
lea
and
xchg
push
iret
scas
push
sahf
xor
mov
ror
jg
add
repnz
push
ss
pop
sub
out
rcrl
out
push
addl
push
scas
xchg
add
mov
cmp
psubb
sti
frndint
xchg
jno
cmp
rolb
mov
add
add
pushf
or
cmp
add
inc
add
mov
add
and
mov
ror
jmp
mov
aaa
test
vmovss
jecxz
or
sti
repnz
push
rcrl
lahf
xchg
popf
std
ss
cld
pop
adc
leave
or
xchg
add
add
aad
xor
les
dec
mov
mov
add
notl
pop
popf
mov
jle
out
dec
jno
add
gs
cmp
out
cmp
test
add
jns
and
testl
pop
gs
fisubrl
mov
mov
or
jo
mov
setne
inc
jecxz
cmp
rolb
mov
add
aad
ret
mov
js
push
lds
jno
add
aas
add
add
outsl
sbb
in
fwait
scas
sbb
mov
rolb
mov
mov
rcrl
scas
sub
mov
mov
mov
mov
jbe
add
mov
xchg
test
mov
add
xor
mov
xchg
and
push
add
adc
jne
pop
inc
add
rolb
or
mov
add
and
mov
loopne
mov
push
dec
call
add
sub
repz
cltd
adc
mov
mov
add
add
add
add
mov
mov
fnsave
mov
repz
addb
out
mov
add
adc
xor
mov
fidivrs
sarl
and
std
mov
mov
add
mov
pop
mov
mov
mov
mov
add
dec
xor
mov
mov
lret
sbb
test
mov
mov
inc
in
mov
cmp
sbb
movsl
addr16
test
add
mov
jb
mov
add
scas
dec
xchg
imul
adc
fstl
je
shll
add
aam
jmp
add
aad
push
add
and
loop
mov
add
mov
popa
mov
and
frstor
pop
lock
or
pop
aas
adc
loop
mov
add
cmc
mov
ret
xchg
add
pop
ja
add
inc
add
xchg
push
jecxz
mov
mov
stos
rolb
mov
pop
mov
icebp
push
or
fmulp
mulb
add
cmp
inc
inc
add
dec
mulb
pop
stc
dec
imul
cmpsl
addb
xchg
mov
sti
daa
fwait
push
add
into
in
adc
mov
mov
adc
sbb
jmp
test
mov
xor
pop
mov
mov
lret
jb
mov
add
mov
stos
sbb
cmpsb
and
mov
cmc
and
mov
add
add
mov
inc
call
xchg
add
and
add
test
sub
rolb
mov
mov
ffreep
or
mov
or
lea
jae
mov
add
sbb
add
sti
xchg
icebp
dec
jns
addb
dec
enter
push
add
jne
inc
adc
cld
jge
mov
jecxz
mov
add
in
cmc
adcl
xchg
mov
aas
jecxz
xchg
add
lods
out
imul
mov
add
pop
das
jnp
jno
cwtl
xchg
out
out
dec
xor
and
mov
outsl
ret
dec
popf
test
add
jecxz
push
inc
push
cmpsl
pop
and
xchg
mov
mov
repnz
dec
addb
test
and
mov
jecxz
loopne
mov
adc
insl
fildll
mov
mov
inc
xchg
sti
mov
xlat
adc
out
cs
jle
mov
lcall
fs
in
call
dec
jno
or
or
jno
mov
pop
pop
add
into
mov
mov
inc
add
je
inc
add
xchg
mov
mov
repnz
push
xor
inc
dec
out
add
cld
es
std
dec
daa
push
add
jo
mov
repnz
add
add
mov
les
jnp
cmp
rolb
inc
push
imul
mov
addr16
push
fiadds
mov
jbe
lods
loope
mov
add
sbb
test
add
dec
xchg
hlt
lods
fwait
enter
jle
pop
or
call
mov
rorl
xor
mov
lods
cmc
mov
cmpsl
lret
cwtl
shld
push
rolb
mov
pop
xlat
mov
xchg
cmp
pop
fldenv
mov
add
push
add
mov
add
add
scas
ljmp
mov
add
mov
rolb
mov
movq
int3
leave
movsb
cmpsb
bound
mov
mov
add
xor
mov
push
pop
dec
adc
mov
jns
pop
jo
mov
popa
out
cmp
jle
cmp
stc
fwait
mov
xchg
pop
enter
out
aas
pusha
add
popf
pop
mov
data16
add
sub
cltd
mov
loope
fs
leave
mov
int3
repz
outsb
fdivs
repnz
push
clc
dec
jmp
add
mov
add
cmc
push
cmp
mov
pop
add
mov
fwait
push
add
pop
xchg
mov
jge
push
xor
add
mov
jnp
sahf
mov
mov
inc
in
ja
and
push
add
mov
out
popa
push
jmp
lea
xchg
add
arpl
sarl
and
dec
inc
ret
push
add
jno
loopne
mov
add
insl
jbe
jnp
lods
mov
cld
mov
xor
mov
dec
mov
pop
mov
xor
mov
jo
mov
cmp
inc
mov
std
push
jo,pt
mov
add
jg
and
les
mov
mov
fisttps
rolb
mov
add
and
mov
sbb
sti
ljmp
notl
enter
mov
xchg
add
xlat
leave
add
mov
pop
idiv
nop
add
out
pop
xlat
mov
rolb
add
add
mov
mov
sbbl
pop
and
inc
out
fsubs
test
pop
dec
adc
add
add
cmp
enter
jecxz
cmpsb
cmp
push
xor
pop
or
notb
add
mov
aas
mov
mov
jo
mov
cmp
adc
mov
jl
mulb
pop
push
test
jae
in
xchg
in
jo
mov
mov
nop
add
lds
outsb
dec
outsb
lods
mov
fcomps
pop
mov
and
cmpsl
sti
jbe
pop
lret
rorl
ret
xchg
inc
jl
jecxz
and
cmpsl
push
cmovno
mov
add
ljmp
cmpsb
popf
xor
xchg
mov
jno
fildll
add
add
ljmp
je
pop
addr16
test
push
mov
je
adc
mov
push
xor
repnz
mov
je
test
mov
add
lock
insl
enter
pop
push
lods
push
jmp
push
add
sahf
mov
outsl
adc
pop
out
push
mov
cmpsl
repnz
mov
push
add
scas
aaa
popa
lret
jb
mov
imul
movsb
pop
jns
xrelease
sbb
scas
and
add
add
iret
cli
mov
add
repz
dec
in
mov
out
xor
mov
dec
adc
jno
inc
add
std
pusha
add
xor
mov
adc
pop
repnz
popa
push
int3
mov
mov
inc
insb
mov
aaa
mov
mov
and
daa
je
aad
adc
insb
pop
mov
das
lea
inc
add
loopne
mov
aaa
jnp
and
add
adc
mov
push
add
push
xchg
add
mov
add
dec
lds
ja
and
test
add
loopne
mov
lcall
cmp
adc
rcll
mov
jae
push
int3
imul
pop
movsb
or
lods
mov
popa
inc
add
add
inc
jl
add
test
pop
xchg
mov
mov
mov
jns
mov
and
mov
add
scas
gs
jge
mov
add
add
mov
pop
jle
pop
adcw
jbe
jnp
pop
rolb
mov
pop
enter
jae
fucomip
inc
lea
push
aam
out
pop
and
mov
sub
jns
outsb
or
in
and
or
repz
xor
adc
fcoms
pop
pop
data16
lcall
xchg
mov
out
add
das
lret
sti
test
or
add
sbb
push
jp
test
cmp
mov
and
lock
xchg
outsb
in
pop
sti
lds
add
fs
lcall
cmp
les
repz
adc
mov
dec
mov
dec
xchg
mov
add
addb
cmp
or
cmp
pop
xor
push
jle
push
or
std
ret
mov
mov
mov
sahf
daa
xchg
mov
popl
mov
fs
aaa
test
add
fdivrl
push
js
add
inc
sbb
out
test
mov
cld
hlt
les
cltd
cmp
add
xlat
ret
hlt
in
cmp
das
lret
cltd
or
xchg
mov
mov
cmp
into
test
movsb
loopne
mov
lods
outsb
sub
adc
scas
cmp
add
mov
test
add
sub
cmp
add
dec
mov
pop
mov
lock
dec
xor
cmp
rolb
in
mov
cmp
movsl
mov
rorl
inc
sub
insb
mov
jns
gs
xchg
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
outsb
fidivrs
inc
inc
call
lret
cmp
rolb
mov
cmc
cmc
or
pop
sarl
add
rolb
dec
fwait
or
cmp
scas
pop
xchg
mov
int3
jmp
jl
pop
inc
sahf
pop
movsl
sbb
mov
or
std
repz
mov
push
rorl
add
ss
mov
test
int3
repz
addb
xchg
add
jb
mov
add
lcall
dec
hlt
or
mov
arpl
mov
dec
hlt
xchg
add
clc
jecxz
xor
enter
mov
testb
inc
add
add
add
fwait
push
mov
cmpsl
mov
mov
scas
jmp
or
cmp
inc
or
in
and
push
inc
add
mov
mov
mov
sbb
mov
sbb
add
fidivl
or
adc
std
or
out
sub
add
add
mov
or
mov
imul
pop
sub
scas
xchg
adc
add
ret
addb
push
add
mov
mov
pushf
outsb
jmp
mov
aad
mov
fiadds
xor
pop
mov
punpckhbw
hlt
add
imul
cmc
and
sub
add
push
add
sub
xor
mov
imul
xor
mov
mov
dec
ss
loop
mov
shl
adc
pop
jne
jo
mov
pop
addb
push
mov
adc
mov
fildll
dec
push
repz
cld
push
add
loop
mov
je
pop
leave
sub
xchg
add
sub
add
cmp
aad
add
cwtl
ret
bound
mov
test
cmpsl
jae
and
jg
mov
add
decb
add
dec
lock
jle
add
lods
loopne
mov
add
les
or
sub
xchg
outsb
mov
xchg
and
add
add
shll
inc
fnstenv
add
dec
cmp
fucomp
movsb
cmove
orl
sbb
mov
push
insl
inc
lret
idivb
pop
mov
mov
ss
add
inc
push
add
xor
mov
add
add
mov
daa
stc
movsl
ret
outsb
dec
xchg
cmpsb
cld
pop
call
lahf
sub
addb
loopne
mov
stc
mov
js
jne
incl
dec
dec
dec
test
sahf
data16
mov
add
mov
mov
push
add
push
bound
mov
add
cmp
and
in
dec
shll
xchg
mov
add
dec
push
add
mov
mov
test
add
mov
inc
sub
jmp
push
mov
lock
push
add
and
mov
ja
out
mov
aam
fnsave
jne
fldcw
les
push
stos
je
inc
xchg
add
aam
fwait
mov
adc
mov
and
in
outsb
test
pop
mov
add
sbb
daa
fistpl
mov
push
sub
mov
mov
cmp
adc
mov
aas
push
add
iret
adc
add
jo
mov
mov
cmp
test
mov
add
mov
jne
insb
dec
stos
mov
add
pop
in
fidivrl
jnp
das
loope
push
loop
mov
cs
add
mov
sbb
jl
sar
out
imul
sub
inc
add
dec
jb
mov
loope
adc
jnp
das
jg
push
jecxz
pop
lea
movsb
xchg
pop
int3
ljmp
sub
xchg
je
fadd
les
dec
aaa
arpl
jo
mov
inc
add
cmp
popa
push
fwait
jl
add
clc
imulb
jecxz
mov
sbb
inc
fsubr
cmp
aas
mov
mov
pop
cltd
shrl
jecxz
add
add
rolb
mov
mov
push
inc
ljmp
xor
vmwrite
adc
mov
mov
leavew
test
push
cmc
movsb
jbe
inc
loop
mov
jmp
push
add
add
mov
in
cmp
add
xchg
test
adc
mov
adc
jmp
mov
shll
pop
mov
cmpsl
mov
mov
dec
lret
pop
push
bound
mov
mov
movsb
loop
mov
sub
add
les
inc
and
aad
in
add
repnz
pop
stos
sub
add
sub
negb
push
mov
or
aas
mov
sbb
add
aad
gs
fcompl
pop
testl
je
adc
sbb
and
repz
fisubrl
pop
and
cld
lea
xchg
add
mov
mov
bound
mov
pop
adc
fwait
jle
mov
test
jmp
xchg
dec
cmovg
gs
jle
pushl
insl
xor
add
scas
pop
adcl
in
xchg
push
mov
add
mov
mov
mov
push
sbb
mov
push
addb
jns
add
cmc
xor
mov
xchg
sbb
mov
jl
bound
mov
icebp
dec
std
add
cmp
push
in
fwait
sti
out
dec
into
mov
jecxz
add
add
mov
out
js
shll
test
test
stos
int3
test
add
add
cmc
outsb
or
dec
lds
add
arpl
add
dec
test
adc
mov
mov
punpckhdq
mov
mov
mov
mov
lea
aas
cmpsl
mov
add
aas
xchg
dec
jecxz
add
dec
xor
mov
mov
mov
imul
xchg
mov
add
cmp
je
sub
adc
ret
inc
add
pop
mov
xor
mov
inc
aam
insl
mov
jge
sbb
pop
cli
outsl
loopne
mov
scas
mov
fdivrl
pop
enter
movsl
addb
inc
scas
dec
mov
mov
dec
mov
add
mov
daa
jne
mov
int3
les
mov
mov
pop
jmp
add
inc
add
mov
aad
std
rolb
mov
ss
ds
mov
mov
sub
sbb
push
pushf
movsb
xchg
adc
mov
add
int
das
fiaddl
add
add
stos
inc
add
fadds
fimuls
in
pop
jb
mov
pushw
loopne
mov
shrl
xor
ret
xor
mov
ret
ficoms
arpl
movl
mov
shll
xor
imull
jns
sbb
lcall
xchg
repz
mov
rolb
mov
mov
push
dec
adc
in
jmp
mov
add
jae
lock
push
popw
test
fisttpl
lock
popf
insb
add
push
or
lods
add
xchg
cmp
add
repz
jp
adc
xchg
xor
push
int3
popf
fldenv
jo
mov
add
add
cwtl
sbb
dec
jo
mov
mov
push
movb
ja
and
ja
mulb
es
addb
mov
das
mov
notb
add
movsb
add
frstor
jmp
jns
in
mov
mov
ficoms
and
adc
mov
es
rolb
and
xchg
pop
addb
pop
cmc
out
push
je
xchg
mov
add
xor
mov
lahf
sub
mov
mov
dec
or
in
jns
mov
mov
cmp
mov
mov
add
repz
and
mov
dec
incb
xchg
test
enter
add
dec
rolb
pop
mov
add
shll
mov
and
xchg
js
xor
ljmp
add
bound
mov
in
push
adc
mov
mov
movsb
aam
aaa
dec
push
cli
jmp
sbb
fsubp
add
mov
mov
loopne
mov
scas
pop
or
arpl
mov
fcoms
push
mov
adc
dec
pop
aad
lock
daa
int3
xchg
popf
adc
push
adc
add
test
cmc
adc
push
add
add
mov
fldl
divb
add
sub
add
lret
add
xlat
mov
mov
imul
insb
out
xor
in
adcl
nop
add
rolb
mov
jbe
jge
add
les
dec
cmpsb
dec
xlat
pushf
push
out
push
mov
aad
movsl
jb
mov
loope
add
syscall
mov
add
dec
dec
push
add
push
mov
lods
cmpsb
stos
sub
inc
inc
fbstp
xlat
loopne
mov
std
aad
add
or
jo
mov
in
xchg
fmul
xor
mov
inc
xchg
cmp
je
scas
test
sbb
xor
cli
mov
add
movsb
pop
rolb
mov
jp
std
gs
sub
push
mov
or
or
outsl
sub
add
mov
cwtl
je
cmp
add
imul
outsl
mov
mov
imul
cwtl
sti
xor
mov
or
add
adc
ds
xchg
mov
xchg
add
movsl
add
jle
lret
push
xchg
je
pop
cld
rolb
mov
add
lods
call
add
sarl
add
test
push
mov
mov
aad
jae
lea
sub
enter
xchg
add
add
scas
sbb
inc
sub
mov
movsb
mov
lahf
in
lahf
pusha
add
pop
jnp
add
negl
int3
mov
pop
dec
inc
xor
add
sub
sbb
jge
nop
add
pushf
mov
icebp
test
jns
add
sbbl
mov
push
add
mov
mov
mov
mov
stc
cmpsl
stc
adc
out
sub
add
dec
dec
jge
dec
addb
pusha
add
jecxz
out
mov
mov
loopne
mov
cld
or
jb
mov
idivl
push
iret
and
negl
in
xor
add
fstp
setge
mov
pusha
add
add
mov
stos
cmc
lods
rolb
mov
mov
mov
flds
sbb
and
daa
mov
and
sub
mov
fnsave
push
add
add
sub
add
out
daa
dec
fcomps
daa
sbb
lcall
mov
add
and
mov
rolb
cmp
mov
add
mov
sub
inc
rolw
mov
mov
inc
push
ja
jbe
into
aad
cmp
int3
xor
lds
mov
out
insl
popf
jne
movsb
loope
add
mov
jl
xchg
add
and
add
add
pop
pushf
imul
mov
fiaddl
mov
jp
lds
repz
aaa
mov
pop
adc
pop
lcall
fsubp
xor
notb
add
add
scas
popf
sub
and
mov
fucomp
lods
clc
mov
sbb
mov
mov
js
insb
hlt
bound
mov
add
jp
cmpsb
inc
clc
sub
sbb
cs
jns
or
add
jg
in
addr16
xchg
add
cmp
and
mov
mov
mov
loope
inc
mov
cmp
push
jp
fstl
add
add
jecxz
mov
pop
repnz
mov
pushf
lea
push
dec
cmp
popa
outsl
test
in
icebp
pop
pop
jb
mov
jno
jb
mov
add
gs
push
punpckhdq
mov
jae
push
adc
add
jge
test
out
mov
add
fmull
fidivrl
mov
cmp
mov
adc
mov
cld
jp
inc
scas
sub
je
pop
inc
mov
push
jbe
loope
icebp
mov
mov
add
add
mov
add
xlat
jb
mov
call
and
in
cltd
mov
rolb
mov
push
or
fildl
pusha
add
mov
mov
mov
and
aad
mov
in
mov
add
in
push
mov
add
mov
jge
jmp
rolb
mov
pop
lahf
dec
popa
mov
loop
mov
jae,pn
mov
ja
xchg
add
mov
and
cmpsb
and
sbb
shrl
cmp
push
int
and
mov
mov
pop
mov
adcl
adc
mov
mov
lods
pusha
add
add
scas
sti
mov
add
sub
loop
mov
mov
mov
xchg
add
aam
ret
dec
enter
repz
sub
popl
jmp
test
add
scas
xchg
mov
jge
cmpsb
dec
fucom
fidivrs
mov
lds
fwait
lds
jbe
outsl
mov
mov
lahf
jmp
cltd
cmp
adc
mov
in
clc
dec
jmp
add
mov
cmp
add
mov
rolb
sbb
sbb
ljmp
add
adc
mov
jg
cltd
fwait
adc
mov
leave
cmp
out
ja
rolb
mov
fsts
js
sub
sbb
push
movb
and
pusha
add
add
mov
cmp
push
jbe
add
aas
pusha
add
rolb
mov
gs
mov
outsl
dec
je
sbb
mov
out
in
pop
int
jecxz
add
fscale
repz
mov
shll
xor
stos
in
std
and
mov
dec
arpl
mov
add
adc
mov
add
push
rcrl
add
mov
mov
jl
pop
ds
xor
popf
clc
lahf
dec
inc
jp
inc
add
add
insl
pop
sub
int
das
pop
scas
test
add
test
in
popa
adc
mov
addb
mov
mov
xchg
add
outsl
fs
out
xor
adc
adc
lret
mov
push
lds
popf
testb
add
leave
ljmp
push
test
or
mov
mov
dec
mul
xor
mov
and
mov
push
movsl
and
mov
and
cs
jnp
jo
mov
push
dec
add
loop
mov
rdrand
fldl
loopne
mov
mul
iret
mov
rolb
mov
out
add
add
add
mov
xchg
out
mov
mov
lahf
andps
add
mov
mov
and
lret
or
dec
cmc
sbb
cli
mov
mov
add
fistl
mov
mov
mov
in
out
iret
mov
jns
mov
jmp
adc
inc
addb
js
or
add
loopne
mov
add
mov
fists
adc
rolb
mov
mov
mov
mov
fisttpll
xchg
sbb
xlat
imul
aam
icebp
mov
push
jne
xbegin
cmp
cmp
adc
push
icebp
cmp
sahf
sahf
push
hlt
push
jle
inc
pushf
and
xchg
dec
sub
dec
cwtl
or
xor
sbb
mov
popa
call
loop
mov
iret
push
mov
xor
jae
mov
leave
inc
jg
in
jmp
fs
inc
cmc
push
pushf
dec
mov
mov
dec
nop
add
call
addb
sbb
das
je
or
fnstcw
rcl
pop
icebp
test
sbb
inc
lds
pusha
add
test
xchg
cmp
push
mov
mov
mov
mov
dec
in
clc
or
out
mov
fsubrs
add
lret
ja
sbb
pushf
pop
js
cmc
mov
mov
add
inc
add
in
ss
push
jne
sbb
mov
mov
or
add
add
mov
add
add
roll
in
pop
and
cli
fwait
cmp
xchg
add
cmpl
mov
mov
inc
test
mov
jle
adc
insb
sbb
sbb
mov
xor
mov
mov
push
sub
sbb
outsb
iret
sub
pushl
mul
jmp
mov
mov
add
mov
cmp
jne
inc
insb
mov
add
add
mov
lahf
and
lods
mov
dec
pop
jecxz
mov
jmp
push
jne
sti
pop
enter
push
aaa
pop
lret
aad
out
xchg
fidivl
adc
mov
xchg
jae
add
adc
mov
addb
jl
icebp
iret
xor
mov
add
jne
ljmp
scas
push
inc
rorl
sbb
es
push
add
add
rep
push
push
pop
clc
and
std
clc
mov
andps
js
insl
inc
add
and
mov
frstor
cmpsl
dec
pop
push
icebp
sahf
in
pushf
mov
xchg
loope
add
mov
add
push
and
mov
push
dec
sbb
pushf
enter
jb
mov
dec
insl
adc
mov
and
mov
add
in
push
iret
aad
lods
test
add
fldt
arpl
addb
stc
xor
mov
add
shl
add
dec
mov
divb
in
mov
loopne
mov
add
push
cmp
cmovs
int
imul
hlt
and
mov
inc
add
fistpll
ja
stos
xor
mov
cs
xchg
sub
leave
bound
mov
scas
rcll
out
scas
icebp
fisttps
sarl
fincstp
test
fbstp
imul
add
add
gs
xor
mov
subl
hlt
xbegin
and
mov
sti
jle
in
add
mov
add
icebp
fldcw
dec
lcall
loop
mov
movb
sub
push
mov
add
addb
flds
dec
jp
sbb
in
cmpsl
jae
push
add
mov
es
filds
push
add
mov
add
mov
xchg
inc
mov
mov
add
jp
rolb
mov
in
mov
xchg
insb
lods
adc
xchg
int
test
add
add
push
add
xchg
sub
xchg
add
daa
xchg
lods
jl
sbb
cli
test
add
xor
pop
and
sbb
ret
jo
mov
and
sub
mov
addb
ficoms
sahf
inc
add
and
sub
jno
push
add
mov
xlat
cmc
test
outsl
out
lret
std
inc
in
lret
lods
jl
in
int3
sub
cmp
sbb
scas
loop
mov
nop
add
mov
push
pop
pop
lds
jecxz
and
inc
xor
mov
roll
adc
lock
adc
cmp
and
mov
mov
mov
loope
fcomp
lahf
daa
xchg
dec
adc
sahf
xor
cltd
cld
dec
scas
dec
mov
cs
jb
mov
sti
outsl
inc
xor
fldt
sub
lcall
cwtl
push
vmwrite
cli
rep
push
inc
jno
imul
push
call
dec
out
push
ljmp
mov
insb
int3
push
mov
inc
add
fistpl
mov
je
add
in
cmp
pop
xor
mov
out
aad
mov
add
add
mov
popa
and
pop
test
mov
or
out
dec
aaa
pop
loope
jl
push
push
jmp
add
cmp
mov
sub
jb
mov
cmp
out
sahf
pop
mov
jne
out
pop
push
ret
mov
sbb
pop
outsl
mov
add
mov
mov
add
mov
mov
cwtl
mov
add
clc
repnz
nop
cld
jae
add
jle
stc
mov
clc
repnz
nop
cld
jae
in
scas
sub
mov
push
clc
repnz
nop
cld
jae
push
push
fstpt
dec
fsts
mov
xchg
ret
dec
mov
cmp
iret
enter
mov
nop
cld
jae
add
add
inc
mov
clc
repnz
nop
cld
jae
popl
and
clc
repnz
nop
cld
jae
add
add
jecxz
add
clc
repnz
nop
cld
jae
add
add
dec
cmp
repnz
nop
cld
jae
ret
inc
iret
mov
add
add
push
mov
xchg
ret
push
add
loope
cmpsl
imul
nop
nop
cld
jae
and
xor
sub
add
or
inc
add
add
add
cmp
repnz
nop
cld
jae
scas
add
xchg
add
clc
repnz
nop
cld
jae
inc
add
add
cmp
sub
add
add
repnz
nop
cld
jae
push
add
pop
push
mov
nop
leave
jmp
add
add
add
add
mov
add
push
mov
xchg
ret
fldl
add
add
xor
push
mov
xchg
ret
xchg
into
add
in
scas
fisubrl
jne
je
repnz
nop
cld
jae
stos
add
add
rep
push
mov
xchg
ret
add
scas
add
pusha
clc
repnz
nop
cld
jae
inc
mov
add
sbb
dec
daa
add
add
fwait
xchg
scas
add
movsb
add
shrd
fdivr
inc
add
iret
loop
fwait
add
jne
push
mov
nop
leave
jmp
add
add
xchg
and
adc
mov
nop
leave
jmp
fwait
add
gs
add
test
adc
add
in
nop
leave
jmp
add
sub
shll
add
clc
repnz
nop
cld
jae
cmp
add
ljmp
nop
cld
jae
push
add
aam
add
add
in
nop
leave
jmp
add
dec
and
mov
movzwl
clc
repnz
nop
cld
jae
in
add
add
add
add
push
clc
repnz
nop
cld
jae
std
sbb
add
inc
in
mov
clc
repnz
nop
cld
jae
add
add
in
mov
repnz
nop
cld
jae
enter
add
add
add
mov
popf
clc
repnz
nop
cld
jae
add
cmp
clc
repnz
nop
cld
jae
test
push
clc
repnz
nop
cld
jae
sbb
push
pop
and
gs
test
push
mov
nop
leave
jmp
add
sub
add
push
aas
inc
push
mov
xchg
ret
stos
std
add
add
loop
add
clc
repnz
nop
cld
jae
enter
dec
add
and
clc
repnz
nop
cld
jae
sub
add
mov
mov
push
mov
nop
leave
jmp
into
movsl
and
add
movsb
and
mov
repnz
nop
cld
jae
arpl
mov
mov
xchg
ret
ret
and
add
and
add
clc
repnz
nop
cld
jae
push
add
repnz
nop
cld
jae
xchg
add
movsb
add
adc
add
clc
repnz
nop
cld
jae
xchg
inc
ret
push
add
fisttpl
add
clc
repnz
nop
cld
jae
arpl
fadds
xchg
or
clc
repnz
nop
cld
jae
fs
jle
add
xchg
int3
sub
clc
repnz
nop
cld
jae
loopne
push
std
add
add
mov
clc
repnz
nop
cld
jae
xchg
inc
add
cmp
test
add
in
into
faddl
pop
mov
pusha
dec
pop
mov
add
test
movsl
mov
mov
repnz
nop
cld
jae
add
add
xchg
scas
add
push
mov
xchg
ret
add
stos
xor
jp
test
add
push
mov
nop
leave
jmp
and
and
daa
xlat
inc
add
add
fs
add
nop
cld
jae
movsb
loop
into
inc
ret
into
pop
mov
clc
repnz
nop
cld
jae
pop
add
cmp
mov
push
mov
nop
leave
jmp
add
add
arpl
push
add
repnz
nop
cld
jae
sbb
stos
add
add
jmp
testb
cmp
ret
dec
add
ret
scas
sbb
je
clc
repnz
nop
cld
jae
xor
inc
add
clc
repnz
nop
cld
jae
shll
add
mov
clc
repnz
nop
cld
jae
ss
mov
push
mov
xchg
ret
add
mov
push
loop
sub
dec
adc
repnz
nop
cld
jae
and
fsubrs
call
push
mov
nop
leave
jmp
enter
add
add
clc
repnz
nop
cld
jae
add
dec
pop
leave
rep
clc
repnz
nop
cld
jae
mov
and
add
xchg
into
je
push
mov
nop
leave
jmp
add
or
movsb
clc
repnz
nop
cld
jae
add
add
add
xor
mov
pusha
clc
repnz
nop
cld
jae
add
lea
inc
gs
cmp
jb
inc
add
inc
push
iret
lea
xchg
int
aas
adc
in
nop
leave
jmp
add
add
add
nop
nop
cld
jae
fs
fs
xchg
fisttps
xlat
testb
cmp
ret
add
inc
add
add
stos
push
mov
xchg
ret
add
add
xor
mov
or
nop
nop
cld
jae
cmp
dec
add
xor
mov
repnz
nop
cld
jae
and
cmp
mov
clc
repnz
nop
cld
jae
add
add
add
push
mov
pop
mov
add
imul
sbb
dec
mov
clc
repnz
nop
cld
jae
fildl
add
ss
jg
inc
in
push
mov
xchg
ret
add
xchg
xchg
stos
sub
iret
or
cld
jae
add
add
scas
repnz
push
mov
xchg
ret
loop
push
add
xchg
add
in
nop
leave
jmp
add
add
mov
movzwl
clc
repnz
nop
cld
jae
and
enter
repnz
nop
cld
jae
add
add
clc
repnz
nop
cld
jae
add
add
mov
mov
inc
add
add
mov
inc
jle
dec
pop
clc
repnz
nop
cld
jae
add
add
add
add
negl
mov
xchg
ret
add
arpl
mov
or
popa
add
repnz
nop
cld
jae
roll
shll
add
pop
mov
push
mov
xchg
ret
add
inc
add
xchg
pop
inc
add
mov
mov
shr
push
mov
nop
leave
jmp
iret
fildl
mov
add
mov
mov
nop
nop
cld
jae
add
add
add
xchg
push
add
enter
adc
inc
add
fadds
add
es
xchg
sbb
or
add
loop
std
sub
add
mov
mov
add
add
add
add
push
mov
nop
leave
jmp
dec
lea
sbb
push
mov
imul
add
lret
or
aam
and
clc
repnz
nop
cld
jae
add
xchg
add
mov
push
mov
xchg
ret
xchg
idiv
add
clc
repnz
nop
cld
jae
fnsave
aad
adc
mov
add
lret
roll
xchg
ret
scas
add
add
xchg
scas
inc
add
out
ret
push
mov
nop
leave
jmp
mov
mov
push
mov
xchg
ret
add
add
xor
leave
pusha
clc
repnz
nop
cld
jae
add
sub
xor
in
jmp
mov
inc
add
sub
mov
clc
repnz
nop
cld
jae
add
push
sub
out
add
and
iret
sti
jae
into
jb
clc
repnz
nop
cld
jae
add
add
test
add
clc
repnz
nop
cld
jae
and
mov
clc
repnz
nop
cld
jae
cmp
xchg
push
mov
xor
insl
add
add
jg
push
jno
outsb
add
inc
jg
add
push
mov
xchg
ret
add
add
mov
clc
repnz
nop
cld
jae
mov
add
clc
repnz
nop
cld
jae
into
fs
xchg
jne
clc
repnz
nop
cld
jae
dec
inc
dec
and
mov
sbb
add
add
fcmove
mov
test
add
clc
repnz
nop
cld
jae
xchg
test
pop
mov
push
mov
xchg
ret
add
add
fcmovne
jmp
add
add
movsl
add
add
leave
push
mov
nop
leave
jmp
add
push
and
add
add
mov
push
mov
nop
leave
jmp
movsb
add
test
adc
daa
add
add
rcrl
add
scas
sub
in
add
add
add
roll
add
add
add
mov
outsl
stos
clc
repnz
nop
cld
jae
fadds
add
and
in
aad
pop
push
mov
xchg
ret
mov
jle
add
data16
add
cmpl
push
mov
nop
leave
jmp
add
add
add
cmp
mov
xchg
ret
movsb
add
add
xchg
add
add
clc
repnz
nop
cld
jae
add
add
xchg
inc
cmp
pop
and
repnz
nop
cld
jae
data16
mov
push
mov
xchg
ret
add
test
and
push
int3
add
push
mov
xchg
ret
add
scas
xchg
nop
nop
cld
jae
add
add
js
sti
push
mov
nop
leave
jmp
enter
add
ljmp
cld
jae
fildl
into
sbb
sar
repnz
nop
cld
jae
add
stos
scas
add
sti
mov
push
clc
repnz
nop
cld
jae
add
xchg
xchg
pop
clc
repnz
nop
cld
jae
add
inc
rorl
add
fwait
pop
push
mov
insl
js
push
add
push
add
mov
clc
repnz
nop
cld
jae
sbb
fmuls
pop
mov
push
mov
nop
leave
jmp
test
clc
repnz
nop
cld
jae
cmp
xchg
iret
add
inc
clc
repnz
nop
cld
jae
add
scas
add
add
and
mov
push
mov
xchg
ret
cmp
sub
into
inc
mov
clc
repnz
nop
cld
jae
dec
add
loop
popaw
mov
clc
repnz
nop
cld
jae
add
push
rol
mov
clc
repnz
nop
cld
jae
add
fs
inc
roll
xchg
mov
flds
xchg
ret
add
pop
add
in
add
cmp
nop
cld
jae
xchg
add
add
fadds
nop
nop
cld
jae
add
add
add
mov
push
mov
xchg
ret
and
movsb
sti
add
fwait
mov
pushf
add
push
mov
nop
leave
jmp
data16
add
into
in
and
bound
mov
add
cmp
inc
add
into
add
add
jle
nop
push
mov
xchg
ret
lea
loop
add
je
clc
repnz
nop
cld
jae
dec
add
mov
nop
leave
jmp
test
xchg
mov
push
mov
nop
leave
jmp
add
cmp
repnz
nop
cld
jae
mov
mov
roll
rcll
mov
repnz
nop
cld
jae
sti
add
loop
add
jne
clc
repnz
nop
cld
jae
add
std
sub
add
add
enter
stos
into
add
clc
repnz
nop
cld
jae
xchg
dec
push
add
add
push
push
push
mov
xchg
ret
das
sub
add
xorl
cld
jae
add
std
add
add
jmp
jp
push
mov
nop
leave
jmp
sti
data16
cmc
cmp
in
nop
leave
jmp
mov
add
int
test
hlt
clc
repnz
nop
cld
jae
add
add
repnz
nop
cld
jae
add
movsl
dec
add
clc
shl
push
mov
nop
leave
jmp
mov
sbb
inc
and
subl
jae
add
add
mov
lea
push
mov
xchg
ret
sbb
arpl
stos
inc
stos
sub
popa
clc
repnz
nop
cld
jae
cmp
movsl
add
enter
clc
repnz
nop
cld
jae
dec
xchg
movsb
add
add
mov
push
mov
nop
leave
jmp
add
add
add
cmp
mov
xchg
ret
add
add
fldl
pop
sub
clc
repnz
nop
cld
jae
dec
gs
ret
insb
add
clc
repnz
nop
cld
jae
in
inc
add
add
movb
outsb
cmc
inc
add
xchg
mov
pusha
push
mov
xchg
ret
cmp
add
dec
test
pop
push
mov
xchg
ret
add
add
mov
mov
clc
repnz
nop
cld
jae
shll
das
mov
in
push
clc
repnz
nop
cld
jae
sbb
pop
clc
repnz
nop
cld
jae
loopne
add
add
add
clc
push
clc
repnz
nop
cld
jae
add
xor
add
push
cmc
inc
add
stos
add
loopne
mov
push
mov
xchg
ret
add
stos
add
and
xchg
or
mov
xchg
ret
push
xchg
add
add
fcomp
and
clc
repnz
nop
cld
jae
add
dec
mov
add
in
pop
push
mov
nop
leave
jmp
xchg
cmp
add
repnz
add
test
inc
add
int3
mov
clc
repnz
nop
cld
jae
add
add
call
in
nop
leave
jmp
add
add
add
popa
add
mov
xchg
ret
scas
add
ret
add
xor
mov
mov
clc
repnz
nop
cld
jae
enter
mov
sub
inc
add
push
add
add
xor
mov
nop
cld
jae
add
inc
add
pushl
push
mov
nop
leave
jmp
add
add
cmp
dec
pop
push
mov
nop
leave
jmp
loop
add
add
fldl
add
mov
nop
cld
jae
add
add
xchg
xchg
pushf
add
push
mov
xchg
ret
dec
add
add
sbb
push
mov
xchg
ret
add
add
test
add
clc
repnz
nop
cld
jae
shl
add
add
iret
jne
push
mov
nop
leave
jmp
data16
mov
xchg
ret
sbb
add
xchg
add
xchg
out
clc
repnz
nop
cld
jae
and
add
test
mov
clc
repnz
nop
cld
jae
mov
add
push
add
add
clc
repnz
nop
cld
jae
xchg
loopne
nop
add
in
nop
leave
jmp
lea
sti
ret
fildl
add
je
clc
repnz
nop
cld
jae
movsl
pop
add
and
push
mov
xchg
ret
add
add
and
mov
and
clc
repnz
nop
cld
jae
add
add
add
clc
repnz
nop
cld
jae
push
sbb
roll
mov
nop
nop
cld
jae
sarl
ss
and
mov
ja
sub
mov
nop
leave
jmp
scas
sti
add
scas
add
push
loopne
repnz
nop
cld
jae
add
rep
add
clc
repnz
nop
cld
jae
push
cmp
add
enter
mov
clc
repnz
nop
cld
jae
sub
roll
iret
mov
je
clc
repnz
nop
cld
jae
sbb
add
add
repnz
nop
cld
jae
test
add
mov
sub
repnz
nop
cld
jae
add
add
dec
add
xchg
add
add
push
mov
nop
leave
jmp
xchg
jle
add
dec
in
mov
clc
repnz
nop
cld
jae
movsb
sbb
add
add
mov
scas
call
and
mov
add
push
add
add
add
clc
repnz
nop
cld
jae
push
add
mov
enter
nop
nop
cld
jae
movsl
cmp
fs
pop
enter
repnz
nop
cld
jae
add
dec
add
cmpw
push
mov
nop
leave
jmp
add
sub
fldenv
arpl
mov
nop
leave
jmp
add
inc
sti
das
frstor
repnz
nop
cld
jae
add
add
incb
nop
leave
jmp
arpl
popl
xchg
add
fisttpl
nop
cld
jae
xchg
sbb
add
lea
add
push
mov
nop
leave
jmp
mov
add
shr
jmp
ljmp
add
add
mov
int3
push
clc
repnz
nop
cld
jae
push
add
add
scas
and
or
clc
repnz
nop
cld
jae
add
mov
pusha
clc
repnz
nop
cld
jae
add
add
clc
repnz
nop
cld
jae
arpl
add
aam
cmp
push
mov
nop
leave
jmp
ret
inc
push
push
xchg
add
fnstsw
mov
push
mov
xchg
ret
stos
add
sbb
enter
rclb
out
inc
add
sbb
add
add
idiv
repnz
nop
cld
jae
add
add
push
clc
repnz
nop
cld
jae
add
pop
xchg
xchg
mov
push
clc
repnz
nop
cld
jae
lea
das
mov
xchg
iret
aam
mov
clc
repnz
nop
cld
jae
into
add
add
jle
add
push
mov
nop
leave
jmp
data16
add
push
mov
jmp
into
jle
add
ret
add
sbb
fstpt
clc
repnz
nop
cld
jae
add
push
mov
nop
leave
jmp
add
add
rolb
mov
add
nop
nop
cld
jae
fucom
cmp
add
sub
or
repnz
nop
cld
jae
mov
cmp
repnz
nop
cld
jae
add
add
push
mov
xchg
ret
iret
and
push
add
sbb
xchg
inc
push
adc
clc
repnz
nop
cld
jae
xchg
mov
push
add
add
repnz
nop
cld
jae
fwait
enter
faddl
nop
nop
cld
jae
add
add
add
jo
mov
add
push
mov
xchg
ret
inc
xchg
xchg
push
nop
cld
jae
dec
dec
add
push
movsl
cmp
add
mov
outsl
popa
fs
mov
nop
leave
jmp
cmp
dec
add
lret
push
mov
nop
leave
jmp
pop
add
mov
push
and
repnz
nop
cld
jae
add
cmp
add
add
xchg
repnz
nop
cld
jae
and
add
scas
inc
scas
mov
push
mov
xchg
ret
stos
add
push
fcoms
mov
nop
leave
jmp
inc
inc
fmuls
roll
add
les
push
mov
nop
leave
jmp
roll
test
cmp
sub
add
cltd
in
add
cmp
mov
ret
push
cld
mov
clc
repnz
nop
cld
jae
add
add
jne
clc
repnz
nop
cld
jae
add
fs
push
jmp
call
push
add
in
add
add
add
mov
add
nop
nop
cld
jae
fdivrs
add
ficoml
repnz
nop
cld
jae
mov
add
add
push
clc
repnz
nop
cld
jae
add
add
stos
fs
testl
push
mov
xchg
ret
add
add
jnp
mov
sub
in
nop
leave
jmp
and
add
clc
repnz
nop
cld
jae
iret
inc
pop
cmp
and
xor
push
mov
nop
leave
jmp
sbb
add
mov
push
mov
xchg
ret
sbb
add
add
fwait
loop
mov
imul
nop
nop
cld
jae
and
add
cld
inc
add
add
add
dec
add
mov
nop
leave
jmp
xchg
add
mov
push
mov
nop
leave
jmp
arpl
add
sub
test
repnz
nop
cld
jae
add
add
mov
jmp
add
cmp
cmp
stos
inc
sti
and
lds
xabort
nop
nop
cld
jae
ret
add
call
nop
nop
cld
jae
add
fildl
add
int
mov
clc
repnz
nop
cld
jae
arpl
mov
clc
repnz
nop
cld
jae
loop
add
enter
clc
repnz
nop
cld
jae
inc
add
xchg
test
or
jne
push
mov
xchg
ret
add
jle
iret
and
popf
push
mov
rolb
add
cmp
add
inc
add
sbb
mov
clc
repnz
nop
cld
jae
das
das
ret
cmp
add
ja
inc
add
dec
and
add
mov
add
push
mov
xchg
ret
stos
add
add
add
xchg
clc
repnz
nop
cld
jae
loop
add
inc
push
add
pushf
and
push
mov
xchg
ret
add
enter
xor
mov
repnz
nop
cld
jae
cmp
add
xchg
add
mov
popa
add
mov
xchg
ret
push
add
add
scas
enter
movsb
pop
mov
clc
repnz
nop
cld
jae
enter
inc
mov
mov
and
clc
repnz
nop
cld
jae
add
inc
sti
add
jle
pop
add
add
repnz
nop
cld
jae
add
add
cmpsl
cmp
clc
repnz
nop
cld
jae
and
movsl
jmp
les
push
mov
nop
leave
jmp
push
arpl
sbb
rclb
xor
inc
add
add
fildl
add
into
lods
sub
clc
repnz
nop
cld
jae
xchg
add
pop
mov
push
mov
nop
leave
jmp
cmp
sti
add
lods
push
mov
xchg
ret
and
add
add
shrb
mov
xchg
ret
xor
add
nop
nop
cld
jae
frstor
xor
insb
jne
clc
repnz
nop
cld
jae
loopne
add
mov
push
mov
nop
leave
jmp
add
add
and
test
add
nop
nop
cld
jae
loopne
sub
cmc
mov
add
clc
repnz
nop
cld
jae
inc
mov
fiadds
nop
nop
cld
jae
stos
inc
sbb
enter
mov
nop
leave
jmp
mov
add
dec
cmp
add
push
mov
add
add
lahf
sarl
out
call
cmp
nop
nop
cld
jae
add
cmp
ret
dec
call
push
mov
nop
leave
jmp
add
add
pop
push
mov
xchg
ret
add
add
inc
jle
fimull
nop
nop
cld
jae
inc
add
add
out
fsubs
add
add
add
add
add
dec
inc
stos
rol
push
mov
nop
leave
jmp
add
add
and
inc
push
in
not
push
mov
xchg
ret
add
add
frstor
inc
add
mov
pop
clc
repnz
nop
cld
jae
movsb
cmp
add
add
ret
add
dec
add
std
xchg
inc
push
gs
dec
xor
mov
push
clc
repnz
nop
cld
jae
in
loopne
mov
inc
call
cld
jae
add
add
xchg
add
add
in
clc
repnz
nop
cld
jae
xchg
inc
hlt
jecxz
cmpl
repnz
nop
cld
jae
xchg
add
add
add
clc
repnz
nop
cld
jae
cmp
and
push
mov
xchg
ret
add
add
mov
clc
repnz
nop
cld
jae
xor
and
or
xor
add
clc
repnz
nop
cld
jae
movsb
enter
mov
nop
leave
jmp
jle
dec
fsubs
add
sti
rep
clc
repnz
nop
cld
jae
add
test
push
mov
xchg
ret
stos
xchg
xor
add
fwait
mov
clc
repnz
nop
cld
jae
and
add
imul
clc
repnz
nop
cld
jae
das
add
add
add
mov
clc
repnz
nop
cld
jae
sbb
fadds
add
mov
add
nop
nop
cld
jae
add
add
add
mov
pop
cmp
push
mov
nop
leave
jmp
roll
gs
add
add
sti
add
clc
repnz
nop
cld
jae
xchg
inc
mov
stos
mov
dec
cmp
repnz
nop
cld
jae
test
scas
inc
loope
pushl
push
mov
xchg
ret
and
xchg
mov
push
fldl
add
add
inc
add
movsb
xchg
add
incl
push
mov
nop
leave
jmp
add
add
loopne
adc
mov
mov
nop
leave
jmp
cmp
ret
inc
fisubl
mov
nop
leave
jmp
stos
shll
add
int
cld
or
nop
leave
jmp
mov
loop
push
push
mov
xchg
ret
and
add
dec
adc
jg
inc
add
add
addb
in
add
clc
repnz
nop
cld
jae
add
inc
pop
pop
add
add
or
add
repnz
nop
cld
jae
add
push
mov
xchg
ret
data16
add
iret
mov
push
mov
xchg
ret
xchg
xchg
loop
add
pop
add
push
mov
xchg
ret
sub
add
and
clc
repnz
nop
cld
jae
add
cmp
decl
nop
leave
jmp
add
add
outsl
ret
clc
repnz
nop
cld
jae
fildl
add
add
add
repnz
nop
cld
jae
fadds
add
sarl
fcoms
jnp
inc
add
xor
add
rolb
dec
pop
clc
repnz
nop
cld
jae
xchg
test
stos
or
pmuludq
clc
repnz
nop
cld
jae
add
add
repnz
nop
cld
jae
add
data16
lea
push
mov
nop
leave
jmp
add
add
in
enter
repnz
nop
cld
jae
iret
add
sub
add
or
repnz
nop
cld
jae
xor
add
andl
mov
mov
bound
mov
leave
clc
repnz
nop
cld
jae
fistl
inc
cmp
push
cmpl
jmp
add
fs
mov
clc
repnz
nop
cld
jae
add
das
icebp
or
test
loop
clc
repnz
nop
cld
jae
add
cmp
call
push
mov
nop
leave
jmp
add
sub
add
repnz
add
ss
add
scas
mov
clc
repnz
nop
cld
jae
add
push
mov
xchg
ret
add
pop
sbb
inc
inc
add
in
test
sbb
cld
jae
arpl
dec
or
repnz
nop
cld
jae
add
cmp
add
mov
nop
leave
jmp
add
add
dec
iret
push
push
mov
nop
leave
jmp
in
sti
stos
add
sub
nop
cld
jae
push
add
push
pushf
div
push
mov
nop
leave
jmp
add
add
aas
je
clc
repnz
nop
cld
jae
add
add
dec
imul
cld
jae
add
sbb
mov
mov
add
add
mov
clc
repnz
nop
cld
jae
add
push
cmp
add
ljmp
nop
cld
jae
enter
xchg
lods
push
push
mov
xchg
ret
add
add
add
stos
add
xor
mov
xor
clc
repnz
nop
cld
jae
jle
xchg
mov
clc
repnz
nop
cld
jae
add
add
inc
adc
repnz
nop
cld
jae
loop
fldt
test
add
repnz
nop
cld
jae
fwait
sbb
mov
adc
clc
repnz
nop
cld
jae
add
add
bound
mov
xor
push
mov
nop
leave
jmp
cmp
add
adc
call
clc
repnz
nop
cld
jae
fnsave
mov
clc
repnz
nop
cld
jae
das
and
mov
movzwl
push
mov
nop
leave
jmp
add
fmuls
push
inc
cmp
adc
cmp
add
add
lea
movsb
add
sub
nop
nop
cld
jae
jle
data16
add
scas
add
clc
repnz
nop
cld
jae
ss
add
add
add
sahf
pop
push
mov
nop
leave
jmp
add
add
add
clc
repnz
nop
cld
jae
xchg
add
sarl
ss
clc
repnz
nop
cld
jae
add
data16
enter
add
clc
repnz
nop
cld
jae
fildl
add
mov
xchg
ret
fldt
pop
das
ljmp
nop
cld
jae
add
cmp
ss
mov
nop
leave
jmp
mov
fwait
xchg
dec
es
clc
repnz
nop
cld
jae
dec
mov
xor
pop
mov
clc
repnz
nop
cld
jae
inc
fildl
add
mov
cmpsb
mov
nop
leave
jmp
add
inc
xchg
add
das
add
cmpl
push
mov
nop
leave
jmp
add
add
add
or
inc
add
cmp
in
xchg
add
nop
nop
cld
jae
in
xchg
jo
mov
je
clc
repnz
nop
cld
jae
add
cmp
add
repnz
nop
cld
jae
add
and
cmp
add
pusha
add
jmp
add
add
xchg
pop
add
clc
repnz
nop
cld
jae
mov
add
add
inc
adc
mov
nop
leave
jmp
roll
add
xchg
pop
push
mov
nop
leave
jmp
sti
add
test
add
clc
repnz
nop
cld
jae
iret
sbb
ss
xor
pop
clc
repnz
nop
cld
jae
movsl
std
sti
cmp
xchg
push
mov
clc
repnz
nop
cld
jae
test
add
mov
push
mov
xchg
ret
push
mov
add
mov
push
mov
xchg
ret
enter
add
xchg
push
push
mov
nop
leave
jmp
add
mov
add
gs
loop
clc
repnz
nop
cld
jae
mov
scas
add
or
clc
repnz
nop
cld
jae
into
add
xor
ret
push
mov
nop
leave
jmp
fildl
fwait
inc
std
push
add
mov
clc
repnz
nop
cld
jae
add
add
inc
mov
mov
jmp
inc
iret
mov
mov
fadds
add
add
call
in
nop
leave
jmp
loop
add
out
clc
repnz
nop
cld
jae
add
add
mov
clc
repnz
nop
cld
jae
stos
mov
mov
pop
push
mov
nop
leave
jmp
add
mov
add
clc
repnz
nop
cld
jae
add
add
add
add
mov
push
mov
nop
leave
jmp
fdivrs
cmp
add
call
in
nop
leave
jmp
inc
add
ret
loop
pusha
add
mov
dec
add
clc
repnz
nop
cld
jae
stos
add
mov
push
mov
xchg
ret
enter
xchg
mov
push
mov
nop
leave
jmp
inc
add
mov
imul
jmp
arpl
add
and
push
push
mov
nop
leave
jmp
roll
into
scas
add
mov
ficoms
in
nop
leave
jmp
sti
ss
ret
and
cltd
push
push
mov
xchg
ret
add
and
mov
add
clc
repnz
nop
cld
jae
arpl
fwait
jle
fdivrs
dec
push
mov
nop
leave
jmp
add
add
scas
sahf
pusha
clc
repnz
nop
cld
jae
inc
test
std
fnsave
std
clc
repnz
nop
cld
jae
add
stos
jle
loop
push
mov
xchg
ret
stos
in
and
mov
clc
repnz
nop
cld
jae
add
add
mov
xchg
ret
add
add
inc
aas
add
clc
repnz
nop
cld
jae
push
add
add
enter
nop
cld
jae
add
and
loopne
inc
add
mov
xchg
ret
push
mov
mov
adc
add
clc
repnz
nop
cld
jae
add
add
inc
add
lea
push
mov
xchg
ret
mov
add
cmp
repnz
nop
cld
jae
fsubrs
xchg
add
repnz
nop
cld
jae
add
ss
add
mov
nop
leave
jmp
into
add
dec
add
add
icebp
adc
mov
dec
push
mov
nop
leave
jmp
add
arpl
add
add
xchg
add
and
mov
mov
clc
repnz
nop
cld
jae
xchg
movsl
add
hlt
push
mov
loope
push
sbb
add
repnz
nop
cld
jae
add
ljmp
jae
xor
add
repz
mov
xchg
ret
add
add
add
lea
ret
jnp
push
mov
xchg
ret
add
shll
push
add
add
cld
jae
add
iret
add
add
in
nop
leave
jmp
enter
add
inc
add
mov
push
push
mov
xchg
ret
add
enter
test
push
mov
xchg
ret
sti
gs
add
push
clc
repnz
nop
cld
jae
inc
cmp
cmp
add
movsl
mov
mov
push
mov
nop
leave
jmp
xchg
in
repnz
mov
xchg
ret
stos
add
mov
xchg
add
pop
xor
clc
repnz
nop
cld
jae
das
fadds
stos
push
add
jge
jl
xor
in
nop
leave
jmp
add
add
roll
rolb
push
mov
nop
leave
jmp
into
add
xor
add
add
leave
jmp
loopne
add
rolb
mov
adc
lea
clc
repnz
nop
cld
jae
cmp
add
add
jne
nop
nop
cld
jae
fldl
das
add
pop
xor
push
mov
xchg
ret
xchg
arpl
and
add
mov
xchg
ret
cmp
and
fadds
add
repnz
nop
cld
jae
fwait
add
nop
cld
jae
jle
xchg
sub
add
clc
repnz
nop
cld
jae
add
into
fwait
loopne
sti
out
push
push
mov
nop
leave
jmp
xchg
add
dec
cmp
add
pop
jmp
add
loop
sbb
in
loopne
add
push
push
mov
nop
leave
jmp
mov
add
add
add
repnz
nop
cld
jae
loopne
pop
add
add
mov
mov
repnz
nop
cld
jae
loopne
mov
xchg
popa
nop
add
push
mov
xchg
ret
sarl
add
xchg
je
clc
repnz
nop
cld
jae
xor
add
push
mov
nop
leave
jmp
dec
iret
dec
dec
add
add
cmp
push
mov
xchg
ret
inc
inc
xchg
arpl
add
test
push
mov
nop
leave
jmp
loopne
add
movsb
sti
fwait
adc
mov
nop
cld
jae
add
mov
dec
push
mov
xchg
ret
add
shll
scas
add
test
push
mov
xchg
ret
movsl
add
ss
add
int
pop
jae
mov
nop
leave
jmp
sti
and
mov
xor
repnz
nop
cld
jae
into
inc
add
add
xor
push
mov
xchg
ret
std
add
xchg
loop
add
addr16
nop
nop
cld
jae
add
add
movsl
xchg
inc
add
sbb
rcll
in
add
mov
lea
in
cmp
push
pop
push
clc
repnz
nop
cld
jae
movsb
into
add
add
fldl
cmp
mov
jl
inc
jle
push
push
stos
add
add
cmc
adc
mov
adc
cmp
ret
and
add
sub
movsb
clc
repnz
nop
cld
jae
scas
add
frstor
add
clc
repnz
nop
cld
jae
stos
add
add
sar
nop
nop
cld
jae
cmp
add
add
add
clc
repnz
nop
cld
jae
xchg
xchg
and
xchg
push
mov
nop
leave
jmp
and
std
add
iret
shl
clc
repnz
nop
cld
jae
arpl
add
mov
add
clc
repnz
nop
cld
jae
mov
jg
push
mov
xchg
ret
add
dec
add
add
add
dec
mov
push
mov
xchg
ret
pop
in
cmp
add
dec
mov
push
mov
nop
leave
jmp
roll
rolb
mov
loopne
mov
push
push
mov
xchg
ret
add
add
and
mov
clc
repnz
nop
cld
jae
add
add
dec
add
push
push
mov
xchg
ret
sti
add
add
add
pop
push
clc
repnz
nop
cld
jae
fs
lea
add
push
mov
xchg
ret
add
push
add
inc
push
mov
xchg
ret
movsb
xchg
add
xchg
scas
cmpsb
cmp
test
add
nop
nop
cld
jae
add
push
mov
xchg
ret
add
add
cmp
add
lods
mov
clc
repnz
nop
cld
jae
add
add
fsubrs
push
clc
repnz
nop
cld
jae
scas
add
sbb
test
cmp
repnz
nop
cld
jae
in
add
clc
repnz
nop
cld
jae
add
add
mov
incl
xchg
ret
inc
fadds
dec
add
add
and
clc
repnz
nop
cld
jae
add
add
mov
int
ss
repnz
nop
cld
jae
arpl
and
cmpsb
mov
push
mov
add
push
add
rorl
xlat
cld
mov
clc
repnz
nop
cld
jae
add
push
add
add
add
push
mov
xchg
ret
sti
inc
xchg
add
fs
nop
nop
cld
jae
add
popl
into
add
sbb
jne
push
mov
nop
leave
jmp
push
add
dec
pop
clc
repnz
nop
cld
jae
add
xor
add
repz
repnz
nop
cld
jae
push
fdivrs
mov
add
mov
xchg
ret
xchg
into
xchg
push
clc
repnz
nop
cld
jae
std
add
arpl
pop
test
add
clc
repnz
nop
cld
jae
popl
add
inc
add
add
push
mov
nop
leave
jmp
add
inc
into
leave
push
mov
add
imul
mov
jp
add
add
fists
addb
jbe
push
cmp
adc
add
repnz
nop
cld
jae
scas
cmp
inc
sarl
nop
cld
jae
stos
mov
xchg
loop
sbb
clc
repnz
nop
cld
jae
add
scas
mov
repnz
nop
cld
jae
add
fmuls
add
aaa
pop
mov
clc
repnz
nop
cld
jae
add
add
mov
clc
repnz
nop
cld
jae
add
add
ficoms
in
jne
sbb
in
lcall
add
add
sbb
repz
repnz
nop
cld
jae
add
movsb
mov
adc
mov
add
push
mov
nop
leave
jmp
add
add
add
add
mov
mov
rcr
ljmp
xchg
add
sub
lea
add
add
add
jmp
nop
cld
jae
push
add
movsb
inc
add
add
add
ljmp
cld
jae
enter
add
repnz
nop
cld
jae
in
cmp
enter
add
sbb
repnz
nop
cld
jae
add
jbe
push
mov
dec
sahf
add
add
scas
add
incl
stos
outsb
hlt
add
push
push
mov
xchg
ret
test
add
scas
fstl
mov
xchg
ret
lea
inc
xchg
add
xor
in
nop
leave
jmp
cmp
xchg
scas
sub
add
push
mov
nop
leave
jmp
mov
add
into
ret
pop
push
mov
add
test
add
cmp
sbb
push
xchg
lods
into
lcall
nop
cld
jae
add
add
mov
clc
repnz
nop
cld
jae
scas
add
cs
clc
repnz
nop
cld
jae
fldl
sti
fldcw
fs
insb
clc
repnz
nop
cld
jae
xchg
fs
movzwl
jmp
incl
xchg
movsl
add
lods
mov
push
mov
xchg
ret
xchg
add
pop
call
clc
repnz
nop
cld
jae
add
inc
xchg
lock
push
mov
xchg
ret
add
lea
fwait
std
push
rolb
mov
mov
clc
repnz
nop
cld
jae
add
add
loope
clc
repnz
nop
cld
jae
xchg
add
add
clc
repnz
nop
cld
jae
add
add
add
mov
xchg
ret
lea
add
mov
clc
repnz
nop
cld
jae
and
into
sub
nop
nop
cld
jae
movsb
add
gs
loop
addb
mov
popl
clc
repnz
nop
cld
jae
iret
xor
push
clc
repnz
nop
cld
jae
add
add
xchg
and
and
repnz
nop
cld
jae
loop
push
inc
scas
enter
movb
mov
xchg
ret
xchg
enter
add
push
mov
add
sbbl
out
sahf
add
jle
add
repnz
nop
cld
jae
and
andl
dec
sar
clc
repnz
nop
cld
jae
stos
das
lea
repnz
nop
cld
jae
mov
add
inc
add
add
in
nop
leave
jmp
xchg
arpl
add
loopne
stos
dec
xor
xor
add
clc
repnz
nop
cld
jae
inc
fistl
sarl
mov
xchg
ret
add
xchg
adc
mov
nop
cld
jae
data16
movsb
gs
fldl
jmp
inc
and
repnz
nop
cld
jae
std
xchg
popl
push
cmp
sti
clc
repnz
nop
cld
jae
add
add
jne
push
mov
nop
leave
jmp
add
jle
mov
clc
repnz
nop
cld
jae
xchg
mov
xor
sub
mov
xchg
ret
xchg
iret
add
add
add
add
mov
clc
repnz
nop
cld
jae
add
and
clc
repnz
nop
cld
jae
xchg
movsb
add
inc
add
aad
add
clc
repnz
nop
cld
jae
popl
and
movsb
imul
nop
leave
jmp
add
call
clc
repnz
nop
cld
jae
mov
add
and
push
mov
xchg
ret
and
mov
mov
nop
nop
cld
jae
add
movsl
enter
pop
push
mov
xchg
ret
xchg
add
add
les
pop
push
mov
nop
leave
jmp
mov
inc
cmp
mov
divl
add
add
add
xchg
das
cmpl
add
or
and
mov
jl
mov
out
mov
mov
mov
or
pop
jge
adc
add
add
aad
stc
loope
popa
mov
fstp
rolb
js
dec
inc
add
pop
cmp
ret
mov
add
imul
jnp
jp
inc
push
rolb
mov
add
cmp
mov
add
mov
pop
addb
xor
mov
mov
aas
ds
data16
mov
fwait
orl
and
int3
stos
out
add
add
add
xchg
cmpsl
inc
lcall
xchg
fsubrl
iret
and
sub
test
sahf
inc
popa
inc
inc
adc
mov
mov
mov
mov
mov
add
daa
or
mov
xchg
cltd
sbb
scas
and
cmp
clc
xchg
aad
pop
test
test
inc
cli
push
loopne
mov
mov
shr
call
nop
add
mov
inc
add
jo
mov
fisubrs
mov
add
add
mov
add
mov
addb
out
stc
fsub
inc
nop
add
jo
mov
and
add
loopne
mov
add
adc
mov
push
fimull
cmp
mov
inc
jo
mov
notl
sub
or
xor
mov
scas
mov
push
xchg
dec
xchg
std
sbb
mov
lret
add
in
push
inc
cmp
mov
sub
inc
cmp
add
mov
mov
adc
add
outsb
sti
clc
mov
add
scas
and
mov
mov
or
movsl
mov
lret
add
push
push
jbe
subl
sbbl
add
movsb
inc
test
push
push
addl
loopne
mov
or
filds
mov
pushf
scas
lock
out
into
push
out
add
add
mov
xchg
fs
insl
cmp
mov
repnz
inc
xchg
xlat
ficomps
int3
mov
add
add
xchg
push
sbb
arpl
sub
fcoms
mov
mov
frstor
mov
andps
xchg
inc
popa
movsb
and
bound
mov
mov
mov
pop
or
xor
addr16
ret
rolb
arpl
add
pop
xchg
jbe,pt
xchg
aad
add
addr16
dec
rolb
mov
mov
addb
inc
lock
jbe
jno
fisttpl
push
sti
popf
push
insb
pop
ret
arpl
lock
vprotb
mov
or
pop
dec
push
mov
and
xor
mov
mov
aam
add
icebp
mov
jae
int
pop
imul
std
jmp
pop
ja
lret
pop
ds
add
clc
cli
adc
dec
lret
push
jb
mov
add
mov
xchg
push
add
fistl
in
loope
jbe
jmp
jecxz
pop
cltd
push
mov
mov
jns
pop
loop
mov
xlat
xor
push
add
rolb
rolb
mov
add
cwtl
add
mov
jp
lahf
outsb
mov
add
mov
xchg
mov
mov
add
out
sbb
add
mov
add
clc
jl
pop
orl
jp
sub
mov
push
loope
ja
dec
call
movb
in
push
test
call
mov
jge
mov
add
mov
cwtl
dec
aad
cmp
roll
push
aaa
mov
add
jg
xchg
jl
sti
test
jne
outsb
xchg
push
add
sti
jecxz
mov
mov
mov
mov
dec
stos
mov
xchg
mov
aad
add
xlat
rolb
mov
fsubl
rolb
mov
dec
pop
js
imul
adc
mov
jg
add
inc
jo
mov
or
jl
push
lock
jb
mov
dec
sbb
sub
xchg
jns
add
or
not
es
bound
mov
fwait
adc
lock
add
pusha
add
or
aas
and
clc
ja
add
push
and
add
lea
lahf
mov
add
fistps
xor
mov
mov
xchg
stc
or
add
rolb
mov
pop
arpl
cli
sbb
imul
lock
pushf
repnz
sbb
daa
push
mov
pop
jno
icebp
add
push
mov
mov
mov
inc
add
push
punpckldq
mov
jecxz
les
mov
popf
jns
push
adc
mov
ljmp
mov
mov
sub
push
pop
gs
addb
icebp
pop
call
sbb
fisttpl
into
rorl
addb
pop
adc
add
out
dec
lods
jbe
add
xor
push
loop
mov
sbb
sbb
icebp
das
addr16
fwait
call
push
out
pop
sub
mov
add
mov
dec
pop
call
fadds
lahf
sbb
call
js
xor
mov
mov
repnz
in
push
lret
movsb
xchg
xor
pop
mov
orl
sub
xor
mov
or
adc
mov
std
mov
addb
popf
cmp
movsl
add
xor
mov
outsl
pop
cmp
in
mov
adc
arpl
add
adc
gs
push
iret
dec
cmp
cmc
push
add
mov
or
adc
add
xor
daa
adc
mov
in
mov
jnp
outsl
cmpsb
add
mov
lock
add
add
xor
and
test
add
cli
adc
xor
outsb
sbb
addb
pop
push
call
aad
mov
xchg
add
sbb
xor
es
test
and
push
add
addb
fwait
sub
cmp
mov
pop
mov
int3
xor
add
sbb
or
jle
add
aam
out
pop
cmp
xchg
xor
mov
inc
pop
push
neg
xchg
dec
mov
ljmp
imul
movsl
repz
cmp
into
dec
inc
add
lods
and
scas
xor
jo
mov
pop
mov
cmp
int
icebp
jp
enter
xchg
ficompl
mov
mov
and
mov
mov
mov
mov
mov
sbb
mov
and
fcomip
lret
fwait
js
sbb
xor
mov
push
push
sbbl
popa
xor
pop
dec
aaa
xor
mov
jb
mov
leave
fistps
lock
push
push
add
stos
fnstenv
mov
pop
jle
cmp
mov
pop
enter
mov
jb
mov
clc
shrl
repnz
or
and
mov
xchg
dec
mov
mov
mov
add
mov
ret
bound
mov
inc
add
cmp
push
das
push
add
or
aam
lahf
jge
cs
jbe
add
add
add
add
mov
mov
xchg
jns
jl
repnz
ljmp
or
icebp
and
flds
and
xor
mov
ja
mov
dec
mov
inc
jg
cli
jge
insb
clc
cmp
mov
cmp
test
fsubr
push
inc
add
mov
mov
xchg
scas
or
dec
jle
dec
jne
lret
or
add
mov
cli
pop
add
in
add
mov
sbb
jmp
lods
insb
lret
mov
add
add
ljmp
xchg
jle
popf
iret
xor
mov
fisttpll
loopne
mov
sbb
inc
outsb
pop
inc
or
adc
mov
enter
xlat
or
ljmp
push
mov
mov
das
sbb
mov
push
arpl
jbe
imul
decb
mov
fisubrl
mov
mov
adc
jle
inc
lahf
loope
fldl
mov
mov
loop
mov
jb
mov
mov
mov
clc
jnp
scas
mov
mov
out
mov
dec
or
fs
sahf
inc
add
add
aad
xchg
lahf
mov
fmuls
push
mov
aas
or
add
rolb
mov
xor
mov
test
mov
xchg
jge
add
int
test
mov
cli
dec
js
ss
repz
aad
cs
repnz
and
mov
insb
test
cltd
sbb
lods
addb
sub
out
cmp
add
mov
and
fimull
inc
sub
xchg
imul
push
add
jb,pn
mov
lock
cwtl
nop
add
mov
sti
lret
mov
xchg
dec
fs
mov
orl
mov
add
ja
pusha
add
sbb
mov
lret
or
jae
add
nop
and
mov
cmpsl
lods
bound
mov
add
add
adc
adc
mov
mov
gs
or
mov
lea
mov
adc
insl
and
add
in
pop
inc
add
cmp
xor
adcl
add
or
repz
xchg
or
or
test
or
fsubl
popw
lahf
mov
lea
andl
mov
or
insl
cltd
push
mov
mov
cmp
or
or
push
daa
add
mov
lds
jl
in
jge
adc
mov
jl
mov
cmp
jg
cmp
add
push
hlt
out
mov
mov
sbb
std
out
jmp
cmp
in
jne
push
lahf
test
mov
push
mov
cmp
sbb
xchg
inc
add
push
lret
stc
push
or
xor
fcomps
stc
dec
popf
cld
das
fistps
and
mov
mov
and
clc
push
mov
pop
push
iret
in
sahf
and
mov
add
es
xlat
mov
mov
jns
add
pop
mov
cmp
mov
mov
mov
mov
mov
sub
add
or
ss
arpl
pop
test
add
mov
lcall
addb
lcall
mov
xor
mov
daa
mov
mov
sbb
push
add
fsqrt
cmp
and
mov
add
mov
pop
pop
xor
out
add
add
and
mov
and
mov
rolb
rolb
fisttpll
jmp
ja
int3
scas
pop
xchg
test
xchg
mov
sub
cmp
int
repnz
mov
inc
je
add
bound
mov
mov
cltd
das
std
push
cmpsl
pop
pop
push
gs
repz
inc
jecxz
or
mov
mov
xchg
adc
addb
movsl
data16
mov
mov
lds
mov
out
ret
push
adc
mov
sub
sbb
inc
fldl
dec
cld
add
adc
sarl
out
jg
add
sub
notb
sub
out
add
inc
mov
mov
outsb
nop
add
mov
fstpt
and
fsubs
mov
gs
stos
aaa
fiaddl
mov
test
shl
outsb
movsb
lahf
fdiv
add
cmp
inc
xor
xchg
addb
push
cld
mov
add
stc
int
xlat
jae
in
test
add
jmp
fcmovnb
xchg
push
add
pop
in
jb
mov
pop
stos
movb
out
dec
sub
mov
icebp
push
mov
add
addr16
adc
jl
add
loop
mov
popa
std
lods
iret
xchg
adc
mov
push
jns
add
xchg
push
sub
pop
xor
or
cli
jmp
jb
mov
mov
dec
loopne
mov
lock
adc
aas
sbb
mov
mov
call
mov
mov
add
into
push
add
mov
add
mov
jecxz
pop
mov
shll
sub
adc
mov
fwait
stos
mov
movsl
scas
sub
xchg
ja
xchg
into
fldenv
ljmp
jle
dec
lahf
scas
lods
lods
mov
mov
out
add
add
cmp
ret
push
mov
pop
mov
push
ljmp
lock
mov
in
rolb
mov
mov
mov
fs
ljmp
add
or
insb
pop
aad
mov
outsl
leave
sub
xor
pop
imul
add
add
add
mov
mov
nop
add
add
es
or
arpl
fmuls
sbb
jg
xchg
cmp
in
cld
fcmovnu
fmuls
jns
add
mov
loop
mov
ficomps
xor
adc
jg
cmp
add
insl
popa
xchg
add
dec
and
adc
xchg
cli
and
add
push
frstor
adc
cmpl
pusha
add
add
test
icebp
fwait
add
add
lcall
xor
mov
cmp
jae
push
inc
push
add
cwtl
aas
pop
fs
scas
mov
mov
inc
dec
inc
adc
add
push
push
aad
dec
and
mov
jg
out
and
pop
in
imul
add
pop
mov
fs
add
mov
mov
add
rolb
mov
adc
dec
dec
pop
fists
dec
lock
mov
pop
test
popf
dec
lahf
inc
adc
mov
mov
add
add
mov
ret
pushf
daa
pop
ljmp
xlat
dec
jmp
test
mov
mov
insl
je
push
fildl
mov
mov
sub
leave
and
lods
pop
add
jne
ret
syscall
jg
sbb
cmp
xchg
add
xor
bound
mov
push
lret
mov
testl
mov
aaa
jmp
xorl
mov
mov
mov
dec
ljmp
ret
inc
cmp
ret
xor
push
sahf
mov
mov
sbb
pop
sbb
add
icebp
in
lods
ja
fldenv
mov
mov
add
sub
add
lods
dec
movsl
xchg
push
mov
add
inc
addb
sbb
mov
sbbl
int3
int
add
push
icebp
and
cmpsb
je
stos
mov
daa
sub
xor
cmp
aaa
das
popa
xor
mov
sub
dec
and
pop
scas
adc
mov
mov
icebp
mov
lea
add
lcall
nop
add
sbb
cmp
cmc
ljmp
add
xchg
pushf
imul
add
sub
jg
add
fisubl
sbb
aad
lods
mul
jnp
push
dec
mov
mov
mov
pusha
add
add
push
test
xor
pop
push
cs
xchg
fiadds
jae
mov
mov
add
cmp
add
add
xor
mov
add
pop
sbb
xlat
xchg
cmpsl
je
inc
aam
and
mov
sahf
pop
loop
mov
ret
jge
push
pushl
fidivs
add
and
add
mulb
mov
pop
loope
cmp
push
xlat
in
mov
es
jecxz
add
mov
and
mov
pop
xchg
mov
or
lret
lret
lods
std
pop
bound
mov
sub
pop
fwait
mov
fdivrs
add
cmp
adc
add
sbb
and
mov
jae
push
pop
inc
leave
rcll
add
xor
mov
mov
mov
add
inc
lcall
and
pushf
mov
mov
add
pop
pop
push
mov
add
in
or
sbb
add
sbb
mov
shl
mov
add
xchg
add
add
add
add
mov
mov
sub
sbb
sbbl
pop
movl
ljmp
imul
push
add
fimull
das
je
jp
mov
ljmp
inc
and
mov
xchg
add
mov
sbb
mov
xor
ja
add
nop
add
add
xchg
add
add
add
and
add
sbbl
mov
add
cmc
dec
jno
sahf
jne
and
mov
jge
push
ljmp
add
add
mov
jmp
jae
pop
and
mov
push
imul
add
mov
mov
add
jne
add
mov
mov
and
mov
jno
mov
in
loop
mov
add
test
icebp
pop
ret
or
addb
fs
mov
and
mov
adc
mov
mov
mov
and
in
mov
jnp
fldenv
mov
jbe
into
adc
mov
add
pop
stos
or
sbb
and
add
imul
cli
sub
dec
ds
in
add
mov
mov
pop
mov
arpl
rolb
mov
add
mov
fbstp
mov
mov
add
in
cwtl
add
add
add
push
insl
lea
std
pop
je
mov
add
jge
mul
out
mov
mov
xor
and
mov
mov
pop
fcoml
sahf
insb
dec
inc
add
add
mov
jnp
aam
xor
loop
mov
lcall
dec
sub
push
jb
mov
xchg
int
add
mov
fs
popf
adc
mov
inc
add
es
negl
cwtl
xchg
jp
add
xlat
pop
jmp
add
pop
xchg
push
xor
mov
pop
data16
cld
mov
loope
or
lret
mov
pop
pop
inc
add
mov
add
sbb
add
sub
aas
add
sbb
xchg
push
add
mov
pop
and
or
pop
xlat
dec
adc
out
in
iret
hlt
add
mov
mov
push
cmp
add
loopne
mov
daa
dec
xchg
aas
mov
mov
dec
pop
mov
add
jle
push
inc
aaa
popa
mov
into
jp
and
and
mov
popf
addb
and
pop
imul
mov
enter
mov
js
push
sbb
pop
dec
add
mov
popa
mov
inc
hlt
and
out
stos
cmp
cmp
sbb
xchg
sub
jb
mov
loop
mov
mov
pop
cmp
pop
dec
push
addb
loop
mov
or
dec
aad
push
scas
movb
mov
shrl
sti
ret
pop
xchg
test
fildll
mov
out
xchg
add
pop
cmc
xorl
add
lea
pushf
sub
add
pop
fisubrs
pop
push
adc
and
xlat
out
addr16
lcall
push
pop
or
notb
mov
lds
add
jb
mov
sti
mov
fs
mov
mov
sbb
xor
lods
aad
inc
sti
in
add
add
stc
sub
mov
jns
jo
mov
mov
cwtl
inc
add
xor
clc
lcall
mov
incl
rcrl
lret
aas
ret
jo
mov
inc
and
outsl
cltd
aad
dec
enter
xchg
add
add
aaa
jmp
cmpsl
dec
jnp
inc
cmp
pop
lock
cld
pop
das
inc
xor
mov
ret
flds
jne
popf
adc
sub
add
lods
add
push
mov
ja
jl
xchg
iret
in
stos
jmp
nop
add
lahf
xor
mov
add
xchg
add
outsl
lahf
push
dec
das
dec
lea
jbe
mov
fcompl
divl
aaa
imul
or
xchg
call
jmp
loopne
mov
add
sub
ret
arpl
add
cmp
add
sbb
jo
mov
push
out
icebp
xor
mov
pop
popa
cli
sbb
add
adc
cld
lods
subl
add
add
mov
add
lods
sub
add
movsl
jl
in
icebp
mov
add
das
pop
adc
dec
outsl
and
repnz
xor
and
mov
mov
mov
add
cmc
sub
ficoms
js,pt
sub
dec
in
jnp
test
inc
mov
jno
add
call
jmp
scas
jl
cmp
icebp
inc
add
lds
add
add
push
imul
cmp
insb
jl
and
dec
cmp
mov
mov
add
mov
fndisi(8087
pop
aas
dec
xor
mov
xchg
add
adc
add
jo
mov
stos
dec
sub
ficoml
xor
dec
push
int
add
scas
fwait
push
push
or
fdivrl
addr16
out
mull
jecxz
jo
mov
add
mov
in
movsb
cmp
mov
mov
cmp
int3
cmc
loop
mov
pop
push
mov
push
popa
jnp
jnp
jno
xchg
loope
add
mov
mov
sbb
mov
in
add
add
xlat
addr16
jmp
lods
cltd
push
and
addr16
xchg
add
es
mov
mov
mov
mov
leave
rcrl
mov
add
mov
add
rolb
mov
out
sbb
xchg
mov
lods
mov
icebp
fdivrs
jb
mov
adc
mov
arpl
jae,pt
add
aam
xchg
lea
fsubr
jae
add
mov
jmp
sub
mov
add
xor
add
addb
cltd
pop
psadbw
rolb
mov
cmp
jg
add
jmp
inc
pop
mov
add
out
int
jns
push
and
mov
test
test
jl
pop
lahf
addb
addb
lret
push
jl
jns
cmp
sbb
push
jl
dec
imul
bound
mov
js
cmp
push
push
push
add
insb
fldt
out
and
mov
mov
popf
xchg
mov
add
mov
inc
add
add
mov
cmpsl
pop
or
dec
xchg
sahf
imul
add
sti
fimuls
xor
mov
je
fstps
imul
mov
add
fld
sti
out
cmp
movb
xor
ss
loope
add
dec
pop
adc
mov
mov
mov
add
sarl
sub
hlt
lods
leave
pop
jl
pop
jecxz
mov
add
mov
inc
add
xchg
add
mov
rcrl
arpl
mov
pop
xor
outsb
mov
mov
inc
testb
add
pop
ss
add
or
cs
cmp
popa
shrl
lods
repnz
add
mov
sarl
gs
enter
add
sbb
add
jnp
add
cmc
daa
sahf
stc
jg
addl
xor
mov
sahf
stos
shll
mov
push
lret
mov
add
adc
ss
out
inc
pop
pushf
lahf
ret
cltd
pop
pop
addb
lcall
add
sbb
mov
sbb
mov
mov
mov
cwtl
adc
pop
and
mov
add
mov
les
dec
lret
add
outsl
sbb
sbb
adc
push
mov
fwait
or
das
push
xor
mov
push
mov
ja
leave
sbb
repnz
sub
lods
mov
add
movsl
adc
fs
das
cs
call
cmpsl
mov
xor
das
jae
or
mov
and
cltd
loope
and
mov
xor
push
das
add
ret
sahf
push
jecxz
cmp
mov
push
loop
mov
add
pop
or
cmp
and
sub
repz
data16
std
sbb
sub
add
fst
lea
aad
ds
add
mov
rolb
mov
or
sbb
icebp
ja
inc
mov
pop
xchg
jne
or
das
sub
mov
mov
test
or
pusha
add
enter
xor
mov
aaa
je
mov
adc
mov
arpl
add
mov
fcoml
jl
push
xor
add
hlt
test
add
mov
push
std
test
mov
and
mov
fisttpll
jge
push
aad
sbb
jnp
and
sahf
adc
mov
lret
inc
add
xchg
xor
mov
aad
cmovnp
jmp
fcmovnb
add
cmp
add
push
sbb
xor
imul
inc
add
pop
hlt
rolb
mov
movsb
ljmp
inc
jne
add
mov
mov
push
movb
jns
test
or
das
push
mov
xor
ret
sub
xchg
ljmp
sub
mov
out
ds
and
ja
mov
xchg
fistps
cmp
mov
test
mov
inc
add
popl
repnz
add
xor
mov
lret
leave
jmp
call
mov
cli
pop
adc
push
add
sbb
es
cltd
pop
insl
outsb
mov
push
add
sbb
test
xchg
insb
or
popf
mov
xor
mov
or
movsl
inc
add
and
pop
dec
push
pop
idivl
and
dec
mov
or
test
mov
loop
mov
sbb
add
or
push
mov
movsl
dec
cmp
push
ret
call
fiadds
ds
rolb
stc
aam
mov
aas
cwtl
cmpl
sub
decb
sub
loope
xor
mov
ffree
call
add
loop
mov
cmp
jge
cs
imul
test
add
add
mov
add
enter
add
sbb
js
mov
mov
lea
push
add
hlt
cmp
dec
hlt
and
add
and
xor
mov
and
and
mov
add
out
in
dec
or
orl
loope
cmp
sbb
push
jnp
mov
test
fcompl
fs
cmp
sub
std
sbb
sub
jno
jl
out
insl
inc
sub
xor
or
fucomi
movsb
movsl
lret
fstpl
add
mov
fldcw
ss
add
inc
add
lock
popf
adc
mov
popf
xlat
dec
in
pop
orl
inc
and
xchg
add
mov
add
pushf
call
cmove
stos
lds
cmp
pop
xchg
filds
sahf
jp
add
mov
adc
mov
xor
pop
stos
cmpsb
add
shll
add
rcll
mov
cmp
adc
leave
jl
mov
sahf
sbb
add
or
mov
mov
in
lods
xchg
dec
rolb
mov
arpl
pusha
add
stos
mov
addl
add
pusha
add
addb
int3
jno
lods
adc
mov
insl
xor
outsl
loope
ja
cmp
mov
jecxz
test
ficomps
in
add
pop
and
lahf
out
ljmp
or
xchg
enter
in
pop
in
jne
les
xor
imul
outsl
sbb
rorl
and
push
lret
add
loopne
mov
push
aaa
fldt
mov
in
fwait
pop
cli
outsb
xlat
int3
and
mov
shll
add
push
push
stc
xchg
scas
test
lock
mov
mov
adc
mov
xor
das
sub
dec
out
aad
dec
pop
push
imul
mov
add
dec
imul
lods
out
jns
mov
mov
mov
cmp
aaa
in
fwait
cmp
rolb
mov
aaa
movsl
cmp
fld
pop
addb
insb
out
add
in
pop
jge
add
addb
cmp
test
add
and
or
mov
mov
inc
addr16
inc
in
xor
mov
fldl
pop
pop
dec
sbb
addb
rolb
mov
mov
mov
mov
shll
mov
imul
scas
addb
imul
mov
lock
jmp
push
fstl
xchg
and
stos
leave
bound
mov
daa
push
add
dec
jmp
dec
mov
add
addr16
add
mov
add
mov
mov
sahf
xchg
call
xorl
pop
mov
mov
add
cmc
pushf
in
push
movsb
ljmp
mov
cmp
rolb
mov
or
pop
loop
mov
fucomip
push
bound
mov
pop
repnz
or
in
jge
icebp
inc
add
xchg
ljmp
divb
addb
pop
mov
add
lcall
push
push
insl
fdivl
pop
push
dec
mov
das
sub
sti
xchg
xchg
jecxz
jbe
xor
xor
mov
inc
loopne
mov
add
je
push
add
jle
mov
sbb
sub
mov
mov
adc
push
xchg
rolb
mov
add
les
ljmp
pop
rolb
dec
test
mov
mov
daa
adc
jns
inc
sub
dec
jmp
mov
xor
push
in
sbb
cmp
sub
outsb
cltd
fdivr
mov
mov
lret
outsb
push
decb
imulb
mov
add
test
lods
in
push
and
mov
xchg
dec
xor
add
dec
jle
dec
mov
cmpsl
arpl
mov
add
jp
or
cli
mov
jl
fildl
xor
dec
add
xchg
nop
add
mov
push
insb
std
lret
or
imul
out
test
mov
or
js
inc
add
mov
add
add
cli
pop
sub
gs
sbb
mov
add
pushf
xor
add
cwtl
hlt
setle
pop
addb
mov
ja,pt
nop
add
xchg
popf
mov
inc
out
pushf
sbb
das
ud2
test
sub
add
add
cli
stos
jp
bound
mov
xor
mov
loopne
mov
inc
add
sub
sub
les
pop
and
insl
and
imul
cld
fwait
mov
mov
add
push
cmp
mov
add
mov
psubd
jnp
hlt
iret
jb
mov
pop
inc
add
mov
scas
dec
sub
cmpsl
add
mov
clc
inc
data16
movsl
mov
repz
or
add
pmaddwd
mov
lods
jae
pop
incl
mov
xchg
cwtl
fisubs
or
cmp
enter
xor
xchg
xchg
cmp
pop
add
xor
mov
cmp
bound
mov
insb
xchg
cmp
pop
mov
fisubl
mov
cltd
jae
add
mov
xchg
xchg
data16
push
add
jb
mov
call
repz
xchg
push
add
enter
iret
loopne
mov
jo
mov
addb
cmp
sbb
add
sub
out
xlat
mov
add
jae
addb
dec
xchg
mov
mov
add
arpl
xor
mov
cmp
daa
jecxz
mov
cmp
ds
fsubr
je
push
add
leave
inc
mov
stc
push
push
les
rolb
mov
add
mov
popa
cli
and
mov
or
add
add
push
add
loop
mov
mov
xchg
imul
add
adc
mov
push
outsl
sti
or
lret
push
add
xchg
mov
mov
mov
inc
add
mov
mov
movsb
in
or
sbb
ds
ljmp
movsb
mov
dec
scas
push
movsb
adc
loop
mov
fwait
mov
add
je
sub
mov
mov
pushf
iret
repz
in
scas
sub
cmp
add
loope
rolb
mov
scas
mov
mov
je
insb
pop
cmp
fldcw
mov
jnp
loope
orl
imul
insb
sbb
add
xchg
ror
xor
mov
inc
add
mov
enter
outsb
sbb
sub
adc
mov
pop
rolb
or
add
add
add
out
mov
adc
xor
mov
rolb
testl
mov
andl
jmp
mov
sti
rolb
mov
addb
out
and
mov
sahf
dec
addr16
adc
mov
icebp
or
bound
mov
mov
and
xchg
int3
jg
push
stos
pop
aam
loope
add
mov
cmp
mov
aas
aad
add
xor
pushf
adc
mov
ficoml
lcall
mov
xor
mov
xchg
jge
fs
lret
mov
les
cwtl
jmp
into
xchg
stc
jmp
stos
jp
add
into
sbb
fbstp
js
aaa
xlat
push
testb
push
add
addl
add
push
mov
mov
test
add
sbb
out
xchg
enter
mov
add
aam
mov
or
mov
sbb
sub
jae
lcall
fldcw
imul
ss
outsb
popa
pop
lock
stc
test
pop
xchg
sahf
mov
daa
fdivrs
lods
add
imul
sbb
mov
and
mov
test
scas
in
inc
int3
ds
mov
add
xor
mov
stos
les
lock
jmp
sbb
icebp
pusha
add
adc
insl
loope
aaa
pop
xor
mov
rolb
mov
mov
aaa
scas
sub
stos
mov
mov
add
testl
pop
xchg
jns
add
xchg
iret
imul
dec
int
sbb
mov
add
lods
cmp
cld
sub
les
mov
mov
mov
lea
sbb
stos
addr16
call
stos
cmp
test
add
std
mov
push
sub
out
pushf
cwtl
std
push
dec
mov
mov
add
jecxz
add
mov
or
call
call
clc
inc
jns
fisttps
mov
add
inc
pop
pop
or
cltd
repnz
mov
mov
add
shll
push
add
add
aaa
dec
in
xchg
and
movsb
inc
rolb
mov
add
cltd
test
jp
loopne
mov
lods
imul
push
mov
push
rolb
and
cltd
fs
push
ficoml
xchg
add
add
cmc
jmp
pop
fisubs
mov
jb
mov
mov
scas
push
and
mov
cmpsl
lea
inc
in
cwtl
aas
mov
add
add
mov
aaa
pusha
add
lret
les
push
push
add
mov
imul
sbb
pop
inc
or
inc
pop
and
mov
into
mov
xchg
add
mov
loopne
mov
mov
push
fadds
add
out
mov
and
xchg
jbe
pop
out
cmp
inc
pusha
add
pusha
add
cmp
jne
dec
adc
or
push
mov
fstps
movsl
pop
aas
jne
incl
rolb
mov
mov
add
dec
push
rolb
in
adc
mov
cmp
or
xor
test
xchg
pop
rolb
dec
mov
push
mov
add
roll
js
inc
sbb
ret
into
negl
mov
adc
sbb
mov
loope
xchg
pop
jo
mov
gs
xor
jg
inc
add
mov
mov
cmp
jmp
addr16
sbb
aas
cmp
add
add
mov
adc
add
xchg
add
mov
add
test
ds
dec
dec
lret
push
add
dec
sti
jbe
add
lret
out
hlt
fwait
pop
mov
mov
add
add
movsb
adc
cmp
mov
adc
push
jmp
rolb
mov
and
mov
mov
mov
std
int3
repnz
push
add
cs
mov
jg
xorl
sub
repz
call
add
rcll
dec
jno
fstl
mov
gs
mov
out
jmp
xchg
add
mov
jp
lock
mov
add
lret
dec
sub
fincstp
pop
in
jo
mov
xor
push
aam
pop
pushf
aaa
and
mov
add
add
addb
push
add
es
inc
push
add
pop
mov
fidivrl
xor
mov
add
mov
jg
sbb
push
add
adc
addr16
bound
mov
mov
dec
add
mov
xchg
outsb
hlt
leave
xchg
add
mov
push
mov
fdivs
mov
fs
call
inc
add
dec
xchg
movsl
add
mov
pop
mov
rep
aad
push
xchg
rol
add
inc
pop
fwait
adc
mov
int
cmp
jnp
xchg
fwait
lock
adc
test
stc
push
fstpt
clc
ficomps
cld
addr16
jnp
xchg
lea
sbb
jmp
shrl
cmc
test
dec
inc
rcl
inc
add
in
cmc
xchg
aam
stos
inc
xor
movsb
repz
xchg
add
push
pop
and
dec
push
out
shll
sbb
add
dec
stos
fs
push
jp
cltd
adc
sub
adc
movsl
mov
sub
lock
xlat
push
add
add
inc
sub
fidivrs
hlt
cmp
push
test
ds
add
cmc
adc
cli
into
pop
cmc
popa
xchg
mov
add
mov
add
js
in
adc
cmp
push
jno
fs
pop
aaa
or
add
lret
inc
add
ret
mov
insb
js
add
mov
adc
add
jo
mov
push
xchg
ljmp
ss
mov
lcall
add
add
hlt
js
push
ljmp
fistps
and
cwtl
mov
sbb
add
mov
hlt
leave
pushl
fbld
inc
inc
add
mov
sbb
add
popa
add
adc
mov
add
add
cli
fldcw
popa
push
push
aam
sbb
cs
repz
mov
and
icebp
loopne
mov
and
mov
test
dec
sub
test
mov
cltd
imul
mov
decb
gs
xlat
mov
push
enter
leave
ss
add
dec
mov
pop
xchg
inc
xor
mov
push
cld
mov
mov
mov
fcoml
sbb
add
subl
sub
sub
aam
xchg
jecxz
jno
jmp
jle
enter
mov
add
add
cmpsl
xchg
add
movsb
addb
js
lahf
jae
fcmovnu
into
mov
add
mov
fmulp
ss
xlat
jo
mov
add
mov
mov
mov
lea
notl
xor
inc
adcl
mov
dec
iret
rolb
mov
das
leave
addb
fcmovne
and
mov
inc
sbb
rolb
jno
add
sub
xlat
rolb
mov
add
mov
rcl
add
mov
cli
xchg
jp
fistpl
out
cmpsl
pusha
add
mov
lds
add
xchg
pop
inc
add
jge
ret
jne
stos
mov
fists
cs
add
jae
shll
dec
int3
sub
incb
add
mov
add
lahf
mov
jno
cmpsl
pusha
add
mov
in
add
js
add
pop
or
stc
test
pop
outsl
push
popa
push
inc
pop
pop
lods
arpl
imul
loopne
mov
add
adc
add
inc
cmp
jae
add
cli
lds
mov
ja
cmp
push
add
xchg
xchg
add
mov
mov
pop
imul
mov
mov
lods
lret
push
add
arpl
outsl
movsl
ret
das
mov
push
enter
jbe
add
mov
mov
xchg
mov
movsl
sbb
lret
movsb
adc
mov
imul
test
repnz
pop
mov
or
mov
add
mov
add
out
loopne
mov
insl
lret
lret
fs
pop
das
scas
mov
add
icebp
aaa
fadds
xchg
aad
cmp
sbb
add
jns
pop
mov
in
imul
sbb
dec
out
ficoml
xor
mov
fisubrl
repz
xor
mov
loop
mov
sub
dec
lcall
adc
and
mov
aas
cmp
or
sti
data16
out
insl
mov
dec
imulb
int
rolb
mov
insl
xor
add
mov
add
sbb
add
jle
mov
in
rcll
enter
add
mov
mov
pop
cltd
ficoml
mov
subl
into
xor
add
mov
scas
leave
or
call
add
xchg
mov
jecxz
adc
testb
or
popf
cltd
xchg
xchg
out
jp
add
into
lods
cmp
and
mov
dec
jns
mov
call
add
lods
xor
into
pop
adc
test
shll
jg
ss
lret
rolb
pop
adc
add
rolb
mov
aaa
xchg
pop
imul
sbb
add
repnz
ret
fimull
enter
add
and
mov
dec
pop
sbb
out
lods
mov
cmovne
cwtl
jnp
sub
fistps
jp
or
out
sub
sub
js
cmp
adc
push
mov
jg
adc
stos
mov
iret
sbb
out
lret
int3
repz
ljmp
push
mov
test
jg
and
icebp
or
jne
test
add
mov
cmpsb
lret
or
out
xlat
sahf
add
jmp
fwait
jne
push
add
add
aam
in
xor
mov
cld
mov
and
mov
add
mov
in
lea
and
mov
loope
lods
test
add
testl
add
or
add
cmp
pop
fldt
outsb
push
mov
nop
add
mov
addb
jmp
add
mov
rorl
add
xorl
stc
push
add
mov
inc
scas
mov
adc
mov
hlt
imulb
add
cmc
cmc
int3
or
stc
out
scas
hlt
outsb
ljmp
sub
dec
mov
sbb
xor
add
rcrl
mov
addb
sbb
inc
add
xchg
test
mov
push
mov
aas
in
adc
mov
notb
cmpsb
pop
mov
cmc
xchg
pop
add
mov
xchg
int
mov
lret
ret
and
push
jmp
push
lret
cmc
and
add
mov
add
mov
sti
sbb
in
add
mov
or
fildll
sub
mov
mov
add
add
imul
pop
push
sbb
jl
add
fcmovnu
sbb
jl
xor
mov
push
cmp
jns
jecxz
inc
jbe
xor
mov
in
imull
push
mov
in
push
add
nop
add
push
and
mov
xchg
add
push
dec
cmp
pop
push
lahf
xchg
repz
and
add
popf
gs
andl
mov
packuswb
in
aaa
push
mov
mov
xchg
add
stos
xchg
add
mov
pop
xchg
scas
cwtl
in
movsl
mov
mov
jne
add
mov
add
or
add
mov
ficomps
adc
mov
rolb
mov
out
cs
fldenv
mull
aam
hlt
jg
or
inc
add
add
fistl
sub
jnp
add
mov
mov
out
fbstp
jl
add
jo
mov
movsl
lods
aaa
xchg
leave
test
inc
pop
hlt
fwait
jecxz
stos
xor
lods
jecxz
sbb
loop
mov
fwait
int
cld
icebp
notl
sbb
add
std
xchg
push
push
test
sahf
xor
lds
add
mov
in
push
add
mov
xchg
sti
rolb
sbb
pop
popa
or
xor
mov
stos
mov
pop
adc
xchg
push
movsb
arpl
int3
push
jae
add
pop
jae
shl
mov
push
push
mov
mov
cmp
push
leave
fimuls
stos
addr16
ja
add
xor
mov
adc
cmp
dec
daa
jbe
mov
dec
mov
and
jmp
xor
xor
mov
add
js
add
add
out
sarl
cltd
cli
xor
cmc
push
out
sub
stos
xchg
adc
leave
rolb
mov
mov
fxch
sahf
mov
mov
jae
jp
mov
mov
add
mov
aam
or
push
cld
sar
addr16
add
mov
cmp
and
stos
xor
push
add
lods
test
or
mov
mov
cltd
push
cwtl
mov
mov
mov
add
xor
adc
mov
int
imul
add
add
enter
fiaddl
mull
pop
mov
add
dec
inc
inc
arpl
dec
cmp
out
insl
cmp
cmp
sbb
hlt
pusha
add
mov
mov
in
cmp
dec
xchg
jl
mov
xchg
add
sbb
adc
mov
add
pop
cwtl
ja
lret
mov
fistpll
mov
enter
test
nop
add
iret
push
xchg
cwtl
pop
int3
jae
aaa
pop
xchg
or
jg
add
inc
add
mov
inc
add
mov
add
shr
lret
xlat
push
push
mov
inc
jg
jns
cmpsl
mov
push
pop
pop
andl
jbe
or
int
in
outsl
sti
idivl
movsl
fildl
mov
mov
lret
rcll
jno
rolb
mov
nop
add
mov
and
inc
add
xlat
in
dec
jns
out
cmpsl
das
sub
nop
add
mov
push
jb
mov
insb
pop
sbb
jne
cli
dec
mov
out
movb
sub
call
jp
cmp
pusha
add
addb
insb
sub
pushf
cmp
pop
inc
nop
add
rcll
lea
mov
outsl
std
xor
inc
ds
cmp
add
sahf
adcl
mov
cmpl
lret
sub
cmp
xchg
adc
aaa
aas
std
cmp
outsb
mov
fldl
xorl
jmp
cmp
test
out
out
push
xor
add
ljmp
adc
mov
dec
pop
xor
or
add
pushf
rolb
sbb
daa
in
rolb
xor
push
int
or
test
xchg
add
inc
ss
lock
xor
mov
push
jl
add
add
add
scas
lret
or
mov
lcall
addr16
lods
js
sbb
popf
es
push
add
mov
xchg
add
jp
add
push
add
mov
aam
aaa
mov
mov
mov
and
xor
stos
sub
daa
in
call
mov
xchg
mov
dec
test
pop
jno
aad
or
outsb
stc
int
sub
cwtl
mov
add
sub
xor
mov
cmp
subl
fistl
mov
mov
sbb
test
imul
push
in
rolb
mov
add
enter
inc
and
mov
outsb
and
ljmp
mov
add
mov
mov
add
ja
stc
mov
es
daa
jmp
add
jmp
fsubrs
add
rolb
mov
pop
cmp
in
pop
cmpsb
push
xor
xor
mov
inc
add
mov
mov
lahf
addb
mov
mov
add
jno
xor
dec
jge
sbb
repz
mov
fs
iret
lock
out
jae
lock
mov
dec
das
pop
ss
mov
inc
push
push
lea
mov
mov
add
add
jb
mov
sub
and
mov
add
mov
add
push
add
scas
repz
in
mov
adc
fs
or
out
push
rolb
mov
test
push
cli
stc
inc
add
int
add
cli
pop
sub
outsb
in
arpl
add
test
add
dec
inc
mov
ret
xchg
lret
sti
jge
cli
mov
mov
add
xchg
dec
or
jle
pop
test
pop
push
adcl
push
add
mov
bound
mov
inc
mov
mov
negl
daa
mov
push
popl
ja
pop
lods
jl,pt
cmp
add
dec
xchg
dec
sbb
out
mov
mov
add
mov
aaa
sub
gs
mov
inc
ds
cmc
push
cmp
cmc
dec
mov
iret
call
add
xor
add
aaa
or
cmpsb
addb
xchg
test
fwait
clc
insl
adc
push
push
inc
sub
out
pushf
push
rolb
mov
add
add
add
cmp
call
add
icebp
std
mov
call
mov
sbb
xchg
add
add
mov
sarl
mov
inc
add
sbb
enter
add
cmc
pop
fildl
add
jg
jnp
clc
mov
ds
addr16
orl
push
sahf
das
adc
inc
std
adc
add
sbb
movsb
lahf
call
add
add
data16
and
mov
imul
aad
or
push
sub
add
add
iret
pop
flds
lods
in
jns
add
jge
leave
cwtl
pop
mov
mov
inc
add
das
ret
sbb
aad
pushf
mov
mov
mov
push
push
lds
mov
das
je
add
lcall
dec
pop
out
jae
aas
dec
mov
mov
dec
es
push
push
arpl
std
scas
cli
push
adc
mov
adc
insb
or
mov
sub
cltd
hlt
testb
rolb
push
add
add
mov
stos
mov
decl
push
bound
mov
push
or
push
mov
mov
orl
adcl
mov
add
aas
adc
add
push
push
jecxz
int
test
and
mov
std
test
stos
movsb
push
push
sbb
mov
add
mov
test
jp
add
xor
mov
mov
mov
and
mov
pop
cmp
mov
xor
push
push
cmp
jg
add
jbe
mov
test
ficoml
scas
rep
cmp
sub
cwtl
arpl
pop
in
add
ret
pop
nop
add
add
repz
add
mov
les
lock
xchg
add
movsl
loopne
mov
jmp
mov
mov
or
mov
mov
sbb
movsl
pop
jg
add
mov
pop
addr16
popa
lahf
pop
fwait
dec
push
es
sub
mov
inc
js
repnz
ja
xor
mov
xchg
ss
arpl
fildll
mov
mov
add
cmc
xor
mov
xor
mov
add
lret
xlat
push
add
mov
lods
test
xor
mov
mov
int3
pop
inc
hlt
outsl
mov
in
push
add
stc
arpl
mov
add
mov
inc
add
push
pop
lcall
rolb
mov
add
or
mov
sahf
push
add
mov
clc
fwait
lods
mov
fnstcw
sub
mov
test
je
in
inc
add
test
xchg
add
std
pushf
jno
nop
add
mov
add
mov
gs
sbb
loope
sahf
cwtl
inc
out
sar
xor
adc
mov
push
in
pop
jbe
add
jb
mov
xor
lret
dec
addb
pop
call
je
test
pop
lahf
je
scas
xchg
lret
gs
push
mov
add
sub
jnp
pop
lcall
or
repnz
xor
cmp
leave
mov
mov
mov
aam
gs
mov
add
imul
jo
mov
add
mov
add
scas
jb
mov
push
sub
add
push
add
mov
mov
inc
add
imul
out
daa
pop
stos
ljmp
mov
push
out
jge
mov
mov
mov
xor
leave
ljmp
cmc
movsb
mov
jmp
mov
mov
push
mov
sbb
add
mov
dec
lret
lcall
cmp
add
insb
dec
and
cmp
imul
jae
test
loope
roll
inc
pop
rep
outsb
mov
lds
scas
mov
jne
push
adc
sahf
divb
outsl
stos
mov
mov
repz
data16
fnsave
in
enter
cmp
ret
lahf
xchg
addr16
push
xlat
xor
mov
adc
lret
adc
mov
mov
mov
lret
bound
mov
sbb
mov
push
add
mov
push
jae
add
jns
xchg
fwait
imul
jns
sub
pop
cmc
push
pop
xchg
fwait
stos
dec
gs
ret
fiaddl
jne
lret
stos
dec
fisubs
popa
push
mov
xchg
cmpsl
jno
mov
jge
add
je
push
xchg
inc
add
push
and
mov
mov
mov
push
add
sbb
pop
pop
or
movsb
and
xorl
fcoml
xchg
xchg
add
mov
iret
pop
out
int3
arpl
arpl
jns
sub
push
pop
loop
mov
add
add
sub
add
dec
aas
mov
add
mov
aaa
loopne
mov
lock
add
jmp
dec
movsl
mov
rolb
rolb
mov
mov
cmp
outsl
std
pop
jge
add
out
dec
adc
mov
sti
add
inc
test
add
and
adc
add
push
cmc
test
add
rolb
mov
xor
sub
mov
mov
loopne
mov
cs
add
jo
mov
add
jle
jp
pop
sbb
dec
jno
cmp
outsl
mov
adc
push
out
push
add
cmp
mov
mov
sub
or
mov
rol
mov
aaa
xchg
add
icebp
dec
jecxz
xor
mov
popf
mov
out
loop
mov
dec
out
or
sub
in
int
add
repnz
pop
push
test
sub
add
sbb
xchg
mov
mov
and
scas
mov
cmc
in
cmpsl
adc
mov
mov
add
mov
pop
sbb
adc
mov
sti
and
mov
scas
fsubrs
mov
loopne
mov
xor
mov
or
es
mov
add
mov
xchg
add
rolb
mov
dec
push
mov
call
mov
add
mov
js
adc
push
mov
rolb
add
pop
repz
or
add
gs
xchg
cmp
sbb
fwait
rolb
mov
pop
shrl
push
stc
or
add
sbb
popf
das
cmp
lods
jl
pushf
or
mov
add
mov
addb
gs
mov
mov
add
aas
jmp
cmp
sbb
mov
lods
pop
dec
fdivp
cmpsl
test
add
call
aas
gs
gs
inc
add
stos
sahf
pop
cmp
pop
insl
sub
add
dec
adc
mov
add
add
mov
jne
pop
mov
add
mov
in
mov
movsb
loop
mov
fnstenv
incl
inc
inc
mov
sbb
add
shll
and
in
xlat
and
mov
mov
xor
mov
dec
adc
cmp
jae
popf
lret
sahf
or
ficoms
mov
mov
add
add
sub
insb
pop
insb
loope
arpl
add
mov
mov
fildll
into
test
cs
and
add
mov
out
fs
movsl
jmp
jne
add
enter
shll
add
jmp
idiv
cwtl
or
movsb
pop
add
add
lahf
mov
stos
dec
repz
ss
lcall
pop
cli
or
repnz
ret
std
or
inc
enter
popa
add
mov
fisubrs
sub
add
xor
add
or
mov
add
pop
scas
xchg
add
xor
add
push
adc
mov
dec
repnz
enter
sbb
add
aas
dec
ret
scas
mov
mov
pop
pop
push
repnz
add
xchg
mov
imul
add
mov
add
adc
add
or
scas
push
es
xor
mov
add
or
jbe
and
mov
dec
das
mov
add
mov
cs
mov
fimull
mov
push
ficomps
pop
add
pushf
sub
adc
add
xchg
add
mov
gs
add
jg
xchg
pop
loope
and
mov
jecxz
sbb
push
hlt
xchg
fs
mov
pusha
add
mov
mov
push
pop
jmp
sbb
push
inc
pop
mov
add
es
test
sub
loopne
mov
add
mov
cmp
mov
loop
mov
pushf
xchg
pop
adc
add
mov
nop
add
mov
push
jb
mov
push
push
add
push
and
inc
test
xchg
leave
lahf
cwtl
xchg
mov
push
adc
add
cmpsb
mov
inc
lahf
sub
or
adc
mov
mov
sbb
in
xchg
jbe
add
bound
mov
add
lcall
pop
xchg
mov
adc
ud0
add
add
cmp
add
sbb
add
test
inc
mov
adc
pop
sti
mov
add
into
mov
test
inc
out
jb
mov
mov
jo
mov
push
lahf
pop
icebp
inc
push
add
lcall
add
mov
stos
popa
inc
jns
insl
sbb
pusha
add
xchg
divl
cmpsb
xchg
jno
mov
mov
stc
divb
imul
cmpsb
lret
or
or
stos
jge
cs
pop
jg
adc
mov
dec
jl
pop
add
mov
add
loopne
mov
std
leave
popa
imul
xor
ja
xchg
out
jb
mov
add
xchg
cmp
jne
dec
push
add
xchg
scas
sbb
mov
add
js
push
sbb
out
les
mov
add
js
lea
add
jne
fidivrl
push
add
dec
cltd
outsl
and
mov
inc
mov
in
imul
ja
pop
jns
arpl
adc
mov
mov
test
jge
mov
jo
mov
jl
adc
push
adc
mov
arpl
rep
xor
mov
xor
rcll
aam
mov
int3
xchg
dec
xchg
mov
add
mov
mov
jmp
ljmp
pop
fwait
pop
movsl
push
cmp
add
ljmp
popf
pop
inc
fsts
mov
cmp
inc
data16
adc
mov
scas
push
add
add
mov
add
inc
and
mov
arpl
jg
fs
add
ljmp
push
jno
mov
fnstsw
nop
add
pop
pop
lds
mov
add
push
jge
lds
push
add
out
aad
push
ror
xlat
dec
fildll
mov
add
push
std
inc
push
fmull
jmp
mov
mov
mov
js
sti
jnp
or
mov
or
mov
popa
xchg
mov
add
dec
mov
add
jb
mov
add
dec
jno
add
stc
loop
mov
add
out
negb
mov
mov
add
ret
pop
mov
mov
add
add
cltd
out
mov
and
add
mov
addb
out
and
leave
bound
mov
dec
aas
mov
fbstp
mov
xchg
out
jns
mov
adc
sbbl
pop
cltd
push
xchg
js
add
ret
jmp
add
scas
rolb
ret
push
push
mov
xchg
jnp
cli
jp
mov
dec
cmp
pushf
mov
and
repnz
loop
mov
mov
add
add
and
dec
out
mov
mov
mov
jo
mov
cmp
mov
add
mov
sahf
fldt
stos
xchg
and
pop
popl
mov
xor
std
jge
div
into
notl
mov
lahf
mov
mov
xchg
xor
mov
inc
cwtl
xchg
lahf
xchg
add
xchg
jge
mov
mov
insb
jmp
cltd
shll
jge
out
in
mov
mov
fmuls
mov
test
cmp
xchg
aaa
addl
ret
dec
jae
push
xchg
mov
out
rolb
mov
pop
nop
add
popa
add
xor
dec
out
rorl
or
repz
xchg
xor
add
push
adc
add
add
pop
jmp
inc
lods
mov
add
pop
int
add
jb
mov
scas
and
daa
sbb
dec
xor
add
popf
scas
sahf
jb
mov
jg
test
pop
xlat
into
das
roll
add
cld
cmpsl
xchg
push
cltd
nop
add
add
mov
mov
cs
pop
jecxz
mov
mov
xor
mov
cwtl
dec
outsl
cltd
mov
scas
jg
pop
push
cmc
push
pop
hlt
insl
sub
add
add
push
jle
je
push
jp
add
inc
sbb
add
pop
xchg
sbb
jge,pt
jmp
iret
inc
movsl
adc
inc
add
add
add
or
addb
xor
aam
out
movsl
aam
dec
or
lcall
mov
aam
push
jp
aas
ds
xorl
xor
sub
push
and
std
imul
sbbl
jle
cmpsl
iret
mov
sbb
dec
xlat
add
cmp
scas
fadds
push
addb
dec
gs
fmuls
das
sbb
sub
loopne
mov
adc
mov
add
mov
push
scas
mov
insl
mov
adc
or
mov
mov
xor
add
mov
mov
aas
cwtl
jbe
stos
lea
mov
inc
add
or
add
sub
mov
mov
mov
mov
loope
add
jo
mov
mov
add
jne
out
xchg
fdivl
add
cmp
mov
sub
add
mov
in
mov
adc
push
mov
faddl
mov
inc
add
add
js
inc
dec
xor
pop
push
fldcw
or
inc
mov
pop
add
add
mov
add
rolb
mov
pop
scas
and
pop
divb
mov
in
jg
les
rol
mov
mov
mov
mov
jp
xchg
and
mov
sub
cmp
mov
mov
sub
dec
xchg
divl
and
pop
and
mov
ss
xlat
arpl
add
mov
fnstenv
push
shl
add
iret
out
mov
sbb
fucomip
mov
fldcw
jge
ret
xchg
inc
bound
mov
add
add
hlt
jo
mov
in
sarl
icebp
jo
mov
push
push
jg
sbb
add
mov
enter
jne
add
xlat
pop
gs
adc
rolb
xchg
xchg
cltd
push
add
arpl
push
pushf
xor
sub
cwtl
mov
and
cli
xlat
jb
mov
mov
mov
pop
dec
cltd
jbe
out
lret
mov
push
test
mov
ss
aaa
ja
data16
aam
push
mov
fisttps
aam
fsubrp
and
mov
fxch
adc
xor
add
xchg
sahf
sbb
mov
push
in
movsl
mov
in
into
pop
fwait
into
inc
add
cwtl
out
mov
xchg
add
mov
jnp
in
in
faddl
mov
add
add
fsubrs
xchg
push
and
inc
or
mov
push
sbb
mov
popa
inc
add
outsb
mov
dec
xchg
mov
add
jmp
push
jge
xchg
mov
add
pop
mov
mov
mov
adc
mov
pop
dec
jg
jge
rolb
mov
or
pusha
add
mov
add
pop
and
sahf
lcall
add
mov
mov
add
sbb
mov
xchg
mov
add
mov
cmp
add
mov
mov
mov
fcompl
jg
push
pop
inc
stos
in
fs
sub
push
and
in
sahf
mov
aaa
fwait
sbb
mov
add
jp
and
jbe
sbb
mov
mov
add
ficoml
rolb
mov
cmp
in
test
jns
xchg
add
mov
add
sbb
int3
iret
out
add
push
rolb
mov
push
push
mov
fcmovnb
dec
dec
inc
adc
mov
js
add
stc
inc
mov
int3
mov
pop
mov
mov
adc
mov
mov
fisttpl
stos
lahf
dec
jmp
insb
push
add
jge
aad
movb
xchg
gs
ja
jb
mov
jne
std
in
hlt
adc
mov
dec
xchg
cwtl
sub
mov
mov
jb
mov
inc
jnp
push
out
push
add
cmp
std
fiaddl
xor
fnsave
test
add
dec
sbb
mov
sbb
mov
mov
add
test
es
jle
jg
add
mov
in
xor
pop
ds
pop
mov
mov
jp
pop
decb
arpl
add
cwtl
bound
mov
clc
sbb
lret
jo
mov
into
testb
iret
mov
xor
mov
rolb
mov
mov
fistpll
mov
adc
mov
dec
cmc
or
fstps
es
scas
xchg
decl
pop
mov
mov
add
sbb
xchg
push
xchg
jle
xchg
jno
add
mov
mov
lds
mov
addb
mov
in
pop
push
pushf
andl
mov
pop
mov
adc
mov
stc
aam
je
leave
pop
add
mov
mov
addb
rol
adc
out
inc
adc
mov
push
inc
pop
inc
lea
mov
dec
pop
xor
stos
push
jle
mov
add
out
mov
mov
repnz
add
sub
inc
incb
dec
mov
mov
addb
in
mov
repnz
das
loope
icebp
mov
int3
insb
movsb
popa
lahf
cmp
cmp
aam
call
aam
jp
lahf
jge
popf
lcall
push
inc
pushf
pop
add
shr
and
add
pushf
aas
xchg
mov
add
mov
cmpsl
dec
mov
push
popa
int3
mov
repz
inc
inc
das
cltd
cld
fucomi
out
inc
xor
jge
sub
js
or
sub
mov
pop
jl
add
daa
outsb
xor
mov
out
movsb
sub
sahf
mov
nop
add
sbbl
ds
mov
fsub
add
inc
add
lock
stos
ret
outsl
sbb
ljmp
pop
xchg
push
in
sub
mov
pop
stos
and
mov
mov
addb
adc
dec
lret
fsubs
mov
loope
inc
add
arpl
movsl
iret
adc
push
add
add
mov
ret
dec
push
in
push
inc
add
insb
add
mov
dec
cmp
sti
sbb
outsb
mov
add
add
mov
mov
mov
mov
addb
adc
loop
mov
mov
es
cmpsl
mov
jl
into
rorl
inc
add
test
add
dec
mov
test
test
pop
mov
jp
pop
ret
xor
mov
add
push
das
mov
loopne
mov
add
mov
aad
push
add
aas
lds
pop
movsb
fimuls
in
std
mov
dec
push
add
adc
mov
lock
mov
adc
out
pop
loop
mov
hlt
insb
push
test
push
push
std
xchg
jae
mov
jno
xchg
andl
iret
icebp
adc
jle
inc
out
loopne
mov
add
movsl
addb
lcall
mov
add
push
add
add
loop
mov
add
push
add
mov
sbb
push
add
ret
out
mov
jne
ret
add
mov
add
js
mov
mov
testb
int
mov
scas
mov
push
sub
push
clc
iret
mov
push
add
adc
add
mov
pop
inc
add
adc
rolb
mov
xchg
adc
mov
pop
sbb
in
jge
nop
add
and
mov
add
sbb
outsl
adc
dec
subl
push
pmuludq
ret
sub
inc
sbb
dec
or
mov
cmp
mov
mov
and
mov
xchg
add
mov
dec
cmp
add
push
pop
addr16
add
cwtl
jnp
out
jbe
repnz
jno
adc
mov
in
mov
jmp
mov
addb
xchg
mov
xor
push
cmpsl
adcl
sbb
dec
cltd
lret
icebp
jb
mov
dec
pop
cmp
xchg
push
mov
add
add
push
fwait
inc
nop
add
mov
int
xchg
inc
add
push
add
adc
aas
and
loop
mov
mov
addb
and
jg
lret
je
adc
mov
add
in
jl
add
pusha
add
mov
mov
sub
addb
cmp
mov
sbb
mov
mov
cwtl
aad
push
imul
mov
xchg
loope
mov
adc
mov
adc
mov
mov
ja
insb
rolb
mov
cmpl
call
xchg
in
icebp
jb
mov
add
fwait
mov
repnz
mov
std
std
mov
pop
notb
jns
data16
adc
sarl
int
rolb
lcall
push
xlat
jo
mov
xor
sub
sbb
mov
xchg
jecxz
repnz
push
add
clc
mov
ret
ret
adcl
push
mov
rolb
pop
add
push
add
mov
add
pop
pop
shll
or
adc
mov
cltd
inc
add
iret
sub
fimuls
adc
pushf
and
mov
xchg
mov
out
lea
xchg
scas
sbb
pop
push
mov
aam
sbb
xchg
push
add
add
inc
add
rcll
stos
cmp
movsl
repz
sbb
push
lock
add
cmp
rolb
mov
xchg
push
mov
movsb
cli
xchg
sahf
xor
repz
pushf
fwait
jl
mov
mov
push
mov
fsubs
js
add
rolb
mov
add
cmpsl
fcompl
pop
sbb
mov
mov
add
mov
mov
in
xchg
imul
add
push
add
fldenv
ja
add
dec
inc
push
mov
mov
mov
mov
inc
pusha
add
loop
mov
fidivrl
xor
add
add
xchg
mov
cmp
in
pop
scas
push
fdivrs
add
into
cmpsb
push
add
lods
in
add
loope
add
testb
ja
rolb
js
mov
mov
inc
add
enter
sub
pushl
ss
cwtl
stos
fwait
imul
fdivs
xor
sub
add
mov
add
rolb
mov
xchg
add
rolb
mov
out
cmpsb
orl
rolb
mov
lcall
mov
xor
add
insl
out
arpl
add
cwtl
leave
and
add
add
fdiv
add
sbb
mov
xchg
mov
sbb
add
mov
mov
dec
insl
jnp
cmpsb
add
mov
lock
mov
mov
pop
scas
loopne
mov
mov
jb
mov
filds
sub
jmp
add
aas
nop
add
fldenv
subl
addb
and
mov
stc
test
jg
jmp
stos
or
add
mov
jns
and
aaa
adc
mov
jle
mov
mov
add
outsl
lahf
xchg
add
mov
insb
imull
lret
outsb
ret
cmp
mov
lods
lret
je
add
and
es
fmull
and
xor
cmp
add
adc
jne
stc
mov
jne
sub
adc
filds
addb
out
pop
jmp
mov
mov
test
jb
mov
mov
mov
xor
mov
sti
fdivrl
repnz
jg
inc
mov
int
add
dec
push
add
mov
add
jmp
adc
outsl
mov
leave
out
fs
fisttpll
sub
or
mov
add
and
movsl
inc
add
xchg
rolb
xorl
xor
dec
pop
jl
insb
jmp
cmp
int
insb
xlat
adc
mov
and
mov
add
in
call
pop
inc
jae
and
test
popf
addps
rolb
xlat
push
movsb
imul
mov
add
push
cmpsb
punpckldq
mov
inc
add
outsl
jp
sbb
jo
mov
cli
imul
add
mov
std
adc
jl
sti
loop
mov
add
lods
iret
in
bound
mov
lcall
cli
mov
test
mov
mov
pop
cmc
sbb
nop
add
add
fadd
lahf
stc
mov
mov
stos
jb
mov
xor
mov
sarl
mov
add
mov
loop
mov
xor
jge
push
jnp
stos
mov
test
cmpsb
dec
stos
call
or
xchg
ret
sti
xchg
add
es
xchg
das
push
add
mov
jne
mov
pop
cmpsl
ja
js
stc
mov
mov
cltd
test
pop
test
add
gs
lahf
xchg
adc
add
nop
add
and
dec
jb
mov
push
or
test
dec
out
or
lcall
add
popa
sbb
add
push
add
int
add
mov
lock
pushf
mov
add
xor
adc
sahf
out
pop
sbb
lret
mov
adc
sub
and
das
xlat
xor
mov
inc
add
adc
mov
mov
add
add
xchg
mov
add
in
jge
jge
mov
push
jle
cmp
mov
xor
sub
filds
dec
sub
cmp
test
add
add
add
mov
shll
pop
adc
sub
mov
xchg
in
loope
add
mov
cmp
xor
mov
jge
adc
xchg
xchg
xchg
sub
push
je
mov
mov
add
jae
adc
xchg
jne
jl
imul
cmp
ss
mov
cmp
cs
lds
add
xor
mov
popf
aam
lds
or
add
mov
jle
add
test
add
dec
fsqrt
rol
add
xlat
mov
addr16
push
je
add
stos
out
push
push
icebp
xchg
add
ret
out
rolb
mov
add
mov
mov
xchg
scas
cltd
je
mov
imul
mov
sbb
sub
hlt
ja
add
rolb
mov
jae
adc
mov
out
movsb
js
add
in
stc
xchg
lahf
and
mov
xor
mov
mov
add
add
addr16
addb
sbb
or
xchg
out
mov
jmp
add
mov
mov
sbb
sub
add
loopne
mov
ret
push
out
mov
push
ja
add
jne
dec
repz
cli
lahf
test
repnz
push
popf
cmp
arpl
add
xchg
clc
dec
push
add
fdivl
add
or
mov
pop
aad
pop
ret
ljmp
dec
jge
test
jl
out
sbbl
dec
push
rolb
mov
je
sub
dec
push
loope
xchg
in
cmp
test
out
mov
xor
inc
add
sahf
lret
out
pop
sub
add
add
cmp
mov
xchg
inc
popa
cmp
pop
inc
mov
mov
imul
push
fisttpl
or
imul
mov
lock
es
jmp
pop
xchg
mov
add
xor
jbe
pop
sub
dec
pushf
je
cmp
add
add
mov
test
sbb
notb
addb
push
out
int
add
mov
mov
sti
sbb
add
inc
or
stos
hlt
lahf
mov
add
mov
aad
pop
push
pop
jnp
inc
leave
std
push
inc
add
add
and
mov
sub
mov
or
mov
dec
mov
mov
into
jns
scas
rep
lret
adc
pop
in
imul
popa
sub
or
inc
add
sub
addr16
lods
imul
mov
mov
inc
add
rcrl
lods
dec
out
push
and
das
insb
sbb
add
pop
push
add
cmp
add
fiadds
mov
arpl
ja
test
pusha
add
mov
aam
into
pushw
xor
cmp
add
es
mov
jns
and
in
mov
fwait
mov
add
mov
add
ds
add
nop
add
cmp
notl
sbb
cld
sahf
mov
or
mov
lock
lods
mov
ja
and
rolb
mov
push
in
xor
mov
pop
int3
pop
enter
adc
inc
add
scas
out
mov
lret
or
or
jecxz
add
mov
add
sbb
cmp
out
ss
dec
add
or
add
pop
add
mulb
xchg
fmul
cmp
lods
enter
clc
into
xchg
mov
pop
fstpt
pop
idiv
cltd
jo
mov
add
addr16
sbb
es
xlat
pop
mov
mov
add
daa
or
pop
jae
or
and
mov
mov
add
xchg
movsl
ds
mov
mov
mov
mov
jo
mov
daa
cmp
jmp
lds
in
cmpsl
push
push
or
rolb
add
mov
mov
sbb
addb
data16
sub
es
sbb
mov
xchg
add
cmp
cmp
jge
orl
xchg
fnstenv
jne
insl
jb
mov
mov
dec
jne
sti
loope
fcoml
sub
mov
mov
add
sbb
push
add
mov
add
mov
mov
add
mov
popf
int3
ds
push
mov
mov
xchg
stos
es
inc
and
adc
add
repz
adc
cmpsl
adc
mov
mov
mov
mov
inc
inc
je
jmp
stc
jnp
repnz
add
movsl
gs
xorl
add
sarl
int3
dec
and
xchg
add
je
imul
negl
in
pusha
add
mov
xchg
jns
cmp
adc
jnp
pop
shll
add
dec
push
adc
add
inc
shl
add
je
bound
mov
fcmovne
inc
jecxz
add
pop
cmp
add
ja
loopne
mov
mov
aaa
jecxz
into
js
mov
mov
pop
lock
in
repz
cmp
xchg
add
or
or
xor
mov
pop
loope
pop
push
js
cs
add
or
push
icebp
jecxz
out
test
fs
sub
mov
mov
pushf
jmp
add
add
xor
test
adc
mov
or
dec
jne
pusha
add
add
pop
xor
rolb
mov
add
mov
mov
xrelease
add
pop
and
callw
jbe
inc
add
add
xchg
or
rol
fdivr
pop
stc
inc
xor
jmp
xorl
cli
or
xlat
jns
push
adc
mov
lcall
push
int
add
mov
add
mov
into
loop
mov
xchg
bound
mov
jp
clc
sbb
pop
fcoms
mov
add
in
test
lret
mov
inc
add
mov
in
cltd
leave
xorl
ja
loopne
mov
push
inc
add
push
lret
add
mov
sub
mov
out
cmpsb
addb
out
push
test
add
scas
jno
add
sbb
xchg
jbe
test
xlat
ficoml
mov
mov
xor
je
mov
daa
loope
popl
add
ret
fidivs
fidivs
add
mov
scas
jae
sbb
sub
daa
sbb
testl
les
lods
adc
mov
leave
aas
fstpt
mov
push
add
mov
add
xor
jno
jmp
pop
addr16
lret
inc
sub
sbb
or
or
add
xchg
ret
add
stc
sub
push
repnz
mov
xchg
sbb
inc
ja
mov
lret
mov
cmpsl
xor
sbb
push
add
ds
fldcw
int
jns
rolb
leave
lret
dec
test
mov
mov
mov
cltd
mov
mov
je
cltd
adc
mov
add
push
dec
dec
repnz
add
mov
cmpsl
aaa
imul
dec
outsl
cmpsl
scas
jne
push
enter
push
add
mov
loopne
mov
mov
xor
jg
sub
repnz
mov
mov
adc
mov
xlat
pop
jge
mov
mov
jg
out
jmp
inc
divb
iret
lods
fcoml
into
cmp
mov
mov
iret
in
addr16
push
inc
add
add
cmp
mov
sbb
sbb
out
and
sub
inc
sbb
mov
out
loope,pn
push
aas
rolb
mov
andl
lock
mov
mov
mov
mov
inc
mov
add
mov
push
popa
lods
mov
xchg
add
pop
mov
add
inc
xchg
pop
push
call
mov
mov
lods
jecxz
push
add
dec
ds
mov
add
mov
mov
fsubs
mov
mov
and
and
xlat
ljmp
adc
mov
pop
mov
mov
xchg
and
add
add
inc
mov
mov
inc
add
fiadds
add
movsl
push
or
mov
xchg
fmuls
cltd
mov
add
xor
mov
or
inc
add
jno
cmp
scas
mov
mov
test
add
cmc
push
mov
lret
mov
jo
mov
decl
test
cmc
imul
mov
add
sub
or
inc
stos
jge
mov
lcall
insl
and
scas
add
mov
xor
mov
push
mov
add
inc
repnz
add
mov
mov
add
or
pusha
add
mov
test
or
fst
add
daa
and
or
push
cmp
jnp
add
hlt
int3
mov
stos
scas
sti
in
dec
push
jg
add
mov
arpl
mov
add
es
sub
mov
stos
int3
sbb
mov
adc
mov
cmp
shrl
mov
inc
add
out
add
stos
int
lcall
push
rolb
mov
add
jne
push
sbb
imul
xor
sub
sub
push
add
aaa
or
cmp
jae
lret
ja
addb
int
bound
mov
pop
jge
les
add
dec
xlat
push
and
mov
aam
or
mov
add
jmp
add
mov
jl
dec
cmpsl
imul
jno
fdivrl
test
mov
rolb
mov
iret
dec
out
js
addb
imul
pop
dec
xchg
fs
cmp
dec
inc
fwait
mov
pop
and
das
inc
add
mov
mov
gs
data16
pop
ljmp
loop
mov
je
xchg
sub
mov
xor
mov
push
insl
cmp
push
cmp
add
mov
pop
sahf
push
ds
mov
dec
outsb
in
inc
mov
inc
add
call
inc
add
mov
push
add
sbb
rolb
adc
sbb
mov
imul
inc
hlt
loope
add
mov
dec
jne
jmp
add
cwtl
pop
and
mov
add
inc
add
push
out
add
clc
xchg
stos
fsts
push
add
mov
lret
push
dec
pop
or
nop
add
sub
sti
loope
add
mov
sub
insl
xor
cwtl
lods
push
xchg
outsb
repnz
mov
add
add
out
ss
add
insl
cmc
xor
mov
mov
mov
in
sub
mov
and
dec
xor
sub
in
in
cli
jle
xlat
aas
sbb
je
xor
out
mov
mov
fbld
out
fstl
cmp
adc
pop
fisttps
and
mov
cli
push
add
xchg
xor
mov
dec
movsl
cs
addb
mov
fnstenv
mov
xor
push
push
xchg
add
mov
and
sub
outsb
add
cwtl
or
ret
push
lods
xchg
and
mov
jecxz
incl
pop
or
and
mov
mov
xor
les
push
enter
sub
mov
jbe
inc
shll
add
inc
pop
jns
cmp
int
test
cmc
pop
pop
inc
add
jae
jne
add
ret
mov
add
add
mov
adc
mov
adc
push
jp
mov
add
add
pushf
lods
mov
mov
mov
sahf
out
imul
sbb
icebp
lret
repnz
popa
push
jno
dec
lea
mov
je
jecxz
dec
mov
mov
cmp
mov
lret
xor
add
or
dec
lods
jg
movsl
mov
adc
mov
pop
add
add
adc
and
into
icebp
jmp
sbb
test
lahf
arpl
mov
test
xor
push
add
das
bound
mov
add
mov
mov
dec
iret
sub
add
adc
shll
add
mov
mov
mov
mov
mov
repnz
lahf
shll
dec
inc
add
lods
mov
test
add
jo
mov
add
mov
mov
int3
adc
pop
add
test
enter
mov
xchg
mov
or
sub
dec
subl
jne
xchg
out
jb
mov
cmp
add
sub
dec
mov
inc
je
add
jo
mov
and
pop
rolb
mov
push
add
ds
add
test
and
mov
fistpll
cli
cmp
test
xchg
inc
mov
mov
xlat
sub
mov
mov
push
popa
xchg
ljmp
gs
dec
lds
mov
mov
lret
add
xchg
fiaddl
shrl
inc
mov
cmp
push
addl
push
add
cli
fimuls
mov
push
daa
scas
sbb
repz
mov
sbb
jbe
add
lcall
push
add
cmp
sbbl
aaa
mov
jns
out
mov
add
jns
push
lods
mov
or
scas
mov
mov
push
cmpsl
fnstenv
shll
int
cmp
and
incl
add
add
and
mov
out
jbe
add
scas
stos
mov
insl
mov
fidivrl
iret
sbb
cltd
xchg
fisttpl
ret
mov
daa
push
mov
jb
mov
push
cmc
out
push
push
mov
rolb
mov
out
or
xor
push
pop
popf
push
cmp
in
add
mov
rolb
mov
mov
jp
push
jbe
sbb
pop
icebp
es
push
pusha
add
inc
xchg
mov
mov
add
mov
mov
jecxz
les
hlt
int3
decl
imulb
push
inc
aaa
pushf
leave
test
lods
mov
mov
jl
add
mov
sub
and
and
jns
mov
pop
pop
cli
std
xor
mov
add
add
mov
addb
push
lock
xchg
lsl
mov
push
add
mov
adc
mov
test
scas
mov
add
mov
mov
loop
mov
add
ret
sbb
outsl
into
addr16
xchg
and
add
push
mov
dec
inc
rcr
adc
mov
add
rcll
enter
and
js
test
fwait
push
lret
clc
insl
dec
leave
sahf
cmpsl
fdivl
je
push
mov
mov
mov
jp
add
mov
add
add
add
cltd
push
loop
mov
mov
sbb
or
ret
je
cli
mov
in
popf
daa
movsb
mov
mov
lret
rcrl
test
aad
xchg
xchg
dec
pop
fldl
mov
add
mov
jge
add
xchg
ret
mov
loopne
mov
pop
in
fcomps
mov
jl
addr16
out
sbb
mov
int3
mull
clc
mov
outsl
js
push
lds
xchg
lods
dec
cmp
add
mov
add
mov
xor
mov
mov
push
cltd
loope
dec
int3
fisubrs
add
push
cmpsb
sbb
push
xor
mov
pusha
add
test
mov
addb
dec
sbb
popa
cmp
xlat
push
decb
add
adc
mov
xor
mov
movsb
lock
insb
fadds
sbb
dec
inc
jmp
clc
jle
ds
cmp
sub
mov
add
pop
xchg
mov
xor
add
sbb
push
pop
lret
ficoml
xchg
dec
xchg
xor
push
imul
ds
add
in
repnz
mov
enter
sub
mov
push
mov
std
scas
jp
xchg
movsl
test
jae
jg
add
add
xchg
pop
bound
mov
xor
imul
mov
ficoms
push
jnp
sub
add
cltd
pop
and
repz
mov
loopne
mov
xchg
push
add
inc
inc
add
shll
mov
das
jp
and
jnp
fnstenv
mov
add
mov
outsb
cmc
fdiv
das
pusha
add
dec
jbe
ja
mov
pop
mov
call
push
mov
mov
fucom
add
mov
push
lcall
mov
mov
les
add
dec
out
arpl
movsl
jnp
and
cmp
adcl
xor
mov
inc
out
jns
jge
mov
pop
sbb
insb
add
mov
cltd
bound
mov
aas
js
sbb
sub
out
mov
outsb
hlt
out
cmp
lea
mov
cmp
pushf
push
or
sub
lds
add
ja
push
jbe
mov
mov
adc
mov
mov
add
adc
mov
rolb
mov
mov
aas
adc
push
insl
cmp
out
or
pop
add
add
add
outsl
jns
pop
stos
pushf
aaa
jecxz
add
add
test
add
add
lret
clc
cltd
in
je
mov
sbb
add
mov
add
loope
add
faddl
add
ret
test
mov
mov
add
cli
xor
mov
jnp
mov
mov
out
push
push
add
cmp
imul
enter
jno
mov
lahf
jmp
cwtl
insb
rolb
push
push
imul
fdivr
scas
test
cmpsl
inc
repnz
scas
sub
daa
inc
push
add
fcompl
adc
add
mov
cld
sub
mov
imul
dec
not
hlt
adc
enter
dec
dec
shll
sub
out
jae
jo
mov
stc
test
test
stos
mov
pop
pop
push
cmpl
jo
mov
push
lcall
and
test
inc
test
popa
jmp
sbb
sub
pop
jg
jl
insl
cwtl
ds
mov
mov
mov
lahf
or
mov
jle
out
outsl
pusha
add
mov
add
fdivl
pop
add
jo
mov
mov
jl
xchg
push
mov
mov
mov
mov
sbb
pushf
mov
int3
bound
mov
lods
int
add
mov
rolb
mov
stos
bound
mov
sbb
inc
xchg
imul
roll
out
out
jno
rolb
mov
xchg
add
xor
bound
mov
popf
cmpsb
int3
cld
push
add
out
inc
call
cli
stos
add
mov
mov
mov
int3
jae
repz
imul
inc
mov
in
icebp
pushf
sbb
mov
lds
xchg
rolb
adc
add
outsb
dec
push
xchg
mov
ljmp
add
imul
mov
or
jmp
sub
add
mov
fmull
das
xchg
add
and
mov
mov
cwtl
sbb
push
stc
push
cli
dec
push
das
push
out
adc
mov
or
adc
loopne
mov
xor
lds
add
mov
jo
mov
sbb
outsl
pop
mov
adc
inc
add
add
push
add
xchg
mov
mov
jae
add
xchg
je
lock
add
sbb
mov
cmp
adc
mov
bound
mov
js
cmovg
cld
xor
jno
repz
jg
fldl
mov
add
jnp
jo
mov
gs
int3
or
inc
or
sub
jl
dec
xchg
add
sahf
xchg
add
xchg
jb
mov
mov
add
xchg
mov
or
sbb
pop
and
clc
cmp
lret
cmpsl
in
pop
pop
outsl
loope
jg
xchg
fldl
out
inc
je
add
addr16
pop
push
jbe
mov
inc
adc
adc
sbb
pop
ret
int3
cli
aas
add
nop
add
add
mov
add
and
pop
pop
fistl
xchg
dec
add
mov
in
int3
test
adc
lods
outsb
adc
pop
call
xor
mov
adc
mov
lahf
add
mov
add
add
mov
inc
add
add
jl
ljmp
push
xchg
fsts
adc
adc
mov
mov
add
push
cs
mov
test
movsb
lcall
add
and
cmpsb
aad
push
or
add
iret
xchg
insl
in
mov
add
pop
aas
hlt
es
ja
jno
inc
push
aas
sbb
mov
mov
add
sub
dec
sub
push
xchg
out
cmpsb
outsb
and
add
dec
lcall
mov
and
test
nop
add
js
clc
jl
add
mov
lds
jb
mov
jne
scas
out
cs
push
lods
fnstenv
cld
lahf
mov
into
mov
int3
inc
and
mov
xor
mov
cmp
mov
popf
jns
pop
add
loop
mov
movsb
int
stos
loop
mov
ja
dec
sahf
sub
inc
add
les
sbb
sbb
sbb
fneni(8087
add
mov
mov
fistps
out
loop
mov
adc
add
mov
dec
ffreep
je
ljmp
fdivl
add
lcall
es
mov
mov
lea
jmp
addb
mov
jbe
add
mov
outsb
rolb
dec
lods
mov
mov
popf
xchg
scas
cltd
push
movsb
repnz
pushl
mov
adc
rolb
outsb
addb
pop
je
clc
jecxz
xor
mov
rcrl
clc
data16
and
mov
scas
std
fwait
mov
add
mov
sub
add
imul
in
imul
idivl
mov
mov
insl
mov
mov
cld
xor
shr
or
dec
pop
or
mov
push
mov
ficompl
jno
inc
or
test
aad
cmp
lods
dec
lcall
fbld
add
and
xor
fisttpl
pushf
test
ds
pushf
and
test
push
adc
add
mov
aad
jmp
rolb
je
mov
inc
jno
sub
xor
mov
push
arpl
cltd
add
mov
dec
fidivl
lcall
or
mov
mov
in
addb
pop
in
add
add
pop
push
mov
push
mov
int
loope
icebp
jg
les
dec
inc
and
mov
mov
mov
add
out
push
dec
cmp
jno
sbb
sti
and
mov
adc
mov
mov
lds
shll
pop
inc
decl
movsl
insl
pop
cmpsl
adc
idivl
fisttpll
add
and
loope
xchg
push
std
fsubrs
dec
xor
mov
mov
rolb
and
cmp
lock
bound
mov
inc
stc
mov
or
xor
cmpsb
inc
ja
hlt
or
std
sbb
stos
add
add
insb
lea
or
imul
add
pop
xchg
add
std
shl
mov
fsub
xor
mov
and
mov
shrl
xor
mov
sub
fcmovnbe
add
push
add
jle
add
mov
dec
mov
loop
mov
fstpl
xor
insb
add
mov
push
in
add
mov
mov
sbb
mov
add
add
aaa
push
push
inc
push
jmp
daa
sti
test
and
add
inc
add
sbb
lea
cli
sbb
add
lahf
cwtl
inc
out
xlat
cmp
add
lock
aad
jb
mov
js
es
jb
mov
loopne
mov
frstor
jmp
mov
jp
movsb
xor
mov
inc
add
jo
mov
insl
mov
cmp
sbb
jmp
mov
pop
call
mov
fs
adcl
mov
lods
mov
movsl
mov
clc
out
sbb
loop
mov
ss
or
inc
outsl
dec
push
and
out
repz
mov
icebp
ficomps
push
call
mov
mov
or
jl
add
mov
xchg
int
add
sub
pushf
fimuls
cmp
dec
push
in
ffree
cmp
mov
dec
dec
xchg
add
testb
mov
fcmovu
add
mov
add
clc
iret
cmpsl
in
xchg
sbb
sub
pop
int
lds
cltd
mov
mov
xchg
add
addr16
sahf
xchg
add
add
jbe
inc
sub
test
xchg
mov
fidivl
popa
test
add
cmp
leave
mov
inc
hlt
aam
inc
add
add
clc
outsl
test
divl
mov
mov
mov
xlat
xor
nop
add
mov
sbb
scas
xor
idiv
push
jb
mov
add
mov
sbb
add
sahf
add
mov
push
and
inc
mov
test
add
mov
out
inc
cmp
test
and
adc
fcompl
push
cs
outsl
mov
cmp
mov
xlat
rolb
mov
cltd
fistl
ss
insw
jle
lods
adc
add
sbb
add
enter
mov
rolb
sbb
mov
push
add
and
adc
cwtl
sub
mov
dec
hlt
push
mov
jnp
test
push
cli
lret
cwtl
push
add
lret
xchg
fldl
add
movsl
loope
dec
aaa
popa
inc
xchg
add
jl
add
mov
jo
mov
jge
call
jg
imul
jbe
add
xchg
jmp
enter
cmp
jae
sbb
in
mov
xchg
push
mov
cmc
or
add
fldcw
shll
into
das
or
jbe,pt
cmpsb
adc
in
arpl
mov
movups
push
xchg
cmc
into
lret
pushf
icebp
ljmp
stos
iret
adc
mov
mov
mov
add
cmp
lcall
add
mov
pop
mov
insl
bound
mov
scas
and
mov
ja
sahf
fucomi
jmp
xchg
push
jne
mov
mov
and
or
leave
test
add
cmp
pop
les
call
add
xchg
add
add
test
out
cmp
xor
add
shr
xchg
dec
lods
test
lods
or
inc
in
sub
mov
mov
negl
mov
push
nop
add
add
nop
add
ljmp
fmulp
sub
pop
mov
xchg
das
inc
add
push
imul
dec
inc
leave
adc
ud1
mov
mov
mov
xchg
and
inc
stc
jle
gs
popa
fbld
das
jno
dec
push
daa
loopne
mov
lcall
cmpsb
jbe
bound
mov
add
mov
mov
add
and
mov
fistpl
sti
popf
mov
mov
insl
cld
lods
cmp
mov
bound
mov
mov
mov
push
add
mov
mov
scas
jecxz
btc
mov
mov
jl
fwait
inc
andl
addl
test
add
and
mov
movsl
bound
mov
lcall
add
add
fcoml
mov
xchg
jo
mov
sbb
mov
sbb
bound
mov
in
aam
mov
iret
enter
mov
cmpsb
adc
mov
lock
push
xor
jge
lds
add
ds
scas
mov
rcll
mov
sbb
sbb
jne
mov
adc
pop
inc
insb
mov
add
add
mov
mov
shrl
add
mov
iret
mov
mov
pop
int
xchg
stos
jg
ficoml
iret
in
push
popa
lods
mov
cmp
movsl
mov
movsb
mov
shl
fdivs
inc
cmpsb
pushf
pop
int
add
in
or
inc
xchg
adc
mov
pop
dec
xor
or
mov
add
je
xchg
insb
sti
sbb
pop
data16
push
fnstenv
scas
ja
inc
add
in
dec
mov
dec
xor
xor
mov
lds
ljmp
xchg
mov
pop
xchg
filds
sbb
ret
call
add
adc
add
jne
testb
std
stos
ljmp
pop
mov
pop
test
pop
push
movsb
cmp
outsl
lea
add
fnstcw
mov
mov
aaa
sbb
fisttpll
fmull
inc
les
js
aam
inc
mov
inc
xchg
cmp
in
jo
mov
jg
xchg
pop
jg
lods
jns
insl
or
es
cmp
lcall
xor
add
add
pop
inc
add
sub
pop
ret
dec
mov
dec
sbb
out
ja
into
mov
fdivrl
add
loopne
mov
fwait
int3
sti
mov
inc
lret
sub
cmp
xor
add
sti
jno
lds
mov
xchg
xor
addb
cmp
add
mov
addb
or
ja
add
divb
jmp
repnz
mov
mov
sarl
ficoms
mov
pusha
add
icebp
pop
sti
pop
loopne
mov
cmp
lods
enter
rcrl
in
cli
sarl
addr16
loopne
mov
imul
adc
mov
lret
cmp
mov
mov
lahf
xchg
mov
sub
mov
mov
ja
stc
xchg
add
mov
pop
sti
push
add
jge
add
xchg
add
lcall
mov
xchg
add
add
cmp
bound
mov
in
push
inc
xchg
jle
mov
mov
sti
pop
addb
lahf
xchg
push
repnz
jb
mov
inc
lods
ljmp
repnz
mov
out
fucom
jo
mov
add
rolb
lods
push
add
mov
add
scas
lret
inc
ljmp
fsubrp
xor
mov
add
je
mov
add
add
int3
xchg
jmp
and
sbb
sub
insb
leave
movsb
bound
mov
mov
mov
and
loope
cmp
movsl
and
frstor
add
add
mov
mov
jmp
jae
add
adc
mov
add
jmp
stc
or
push
pop
jne
leave
cmpsl
clc
pop
mov
rolb
mov
or
and
mov
jo
mov
pop
cmc
and
mov
add
sarl
dec
jbe
xlat
mov
ret
cmp
les
inc
fdivs
pop
iret
push
stos
imul
test
mov
lods
popa
outsl
ret
xchg
cmpsb
jmp
add
sbb
sub
fnstsw
call
add
jne
push
xchg
adc
mov
push
stc
inc
add
mov
pop
lock
ja
add
xor
mov
sahf
cmpsl
cmp
xor
cmpsl
hlt
xchg
dec
add
fidivrs
cmp
adc
mov
add
pop
add
mov
ljmp
jne
mov
mov
add
sahf
imull
pusha
add
push
add
jno
mov
ja
lcall
repz
add
mov
adc
pop
mov
fsubl
pop
negl
aam
add
cmc
cmp
add
pop
int3
mov
rolb
mov
in
inc
sbbl
cmp
popf
jmp
add
mov
fists
mov
inc
movsb
leave
dec
cli
in
mov
add
lock
or
loopne
mov
jecxz
xor
cmpsl
dec
inc
xchg
lret
sbb
inc
pop
push
imul
push
imul
mov
in
adc
add
lds
cmp
ret
lcall
mov
cwtl
loopne
mov
incl
fcomps
push
pop
xchg
lea
mov
in
daa
inc
aas
outsl
stos
or
cmp
addb
repnz
frstor
pop
jg
or
scas
or
add
push
add
mov
xor
addb
insb
jne
aad
aaa
cmp
fistps
lods
add
inc
dec
adc
outsl
sub
add
push
mov
sub
xchg
inc
inc
xor
mov
bound
mov
icebp
mov
pop
mov
rolb
mov
mov
jg
inc
mov
add
mov
lea
xchg
add
sub
inc
unpckhps
mov
mov
sahf
in
scas
push
adc
repz
add
add
cmpsl
mov
addb
movsl
mov
mov
stos
lahf
je
mov
mov
mov
fcompl
aas
enter
cmp
scas
outsb
sti
int3
aam
add
add
cld
lds
inc
xchg
addb
andl
cmpsb
mov
sbb
or
mov
dec
lods
dec
shll
sahf
inc
xchg
fwait
arpl
adc
aad
push
outsb
jecxz
nop
add
scas
and
sbb
loop
mov
add
sub
in
jg
mov
mov
add
daa
jmp
popf
pop
pop
daa
cwtl
sub
jbe
dec
jecxz
push
add
test
cmp
lock
inc
xchg
add
mov
dec
push
push
outsb
jo
mov
push
loopne
mov
mov
daa
push
pushl
xor
int
push
add
fmulp
loope
lret
mov
dec
and
add
mov
cmp
mov
sbb
add
mov
jp
daa
inc
add
loopne
mov
into
add
sarl
cltd
pop
mov
mov
dec
push
dec
mov
push
add
lea
mov
mov
fcomi
mov
ss
push
inc
filds
sbb
xchg
mov
add
sub
mov
test
xorl
bound
mov
jbe
sti
sub
in
mov
pop
test
dec
lds
sub
lods
pushf
lods
jns
out
fsts
iret
adc
mov
lret
jb
mov
dec
jns
add
add
inc
insb
pop
jecxz
add
hlt
sbb
mov
mov
mov
xor
xchg
add
add
jno
jle
fisttpl
movl
adc
or
jno
bound
mov
inc
pushf
mov
sub
or
pushf
aaa
lea
les
mov
xlat
gs
dec
push
push
sti
pop
adc
outsl
aaa
fnsave
xchg
or
push
mov
mov
jae
sub
dec
xor
add
mov
pop
int3
stos
mov
fdivs
mov
xor
xchg
add
std
xor
jle
mov
add
sub
ljmp
jp
fs
or
inc
add
jle
js
xchg
or
mov
gs
xchg
mov
mov
in
xor
mov
add
xchg
or
add
add
sbb
jge
cs
nop
add
cmpsb
addb
aas
xor
add
lods
shll
aam
fcomps
pop
push
jg
push
bound
mov
add
stos
or
push
fwait
shl
add
cmp
add
add
cmc
not
add
mov
add
lea
inc
add
pop
in
jae
dec
xor
mov
push
xchg
mov
sbb
arpl
sbb
dec
std
sbb
mov
xchg
and
add
mov
int
cltd
ret
or
or
aad
in
roll
imul
mov
mov
or
testl
pop
ret
push
pop
adc
xor
jle
fincstp
jg
mov
mov
imul
add
dec
stc
mov
add
xchg
and
cmpsb
in
std
mov
je,pt
into
ss
inc
add
into
test
test
add
xchg
pop
call
cmpsl
out
inc
adc
mov
push
push
add
and
add
push
adc
mov
dec
js
fs
jnp
cli
fwait
push
mov
push
add
add
cmp
and
add
jp
decl
jo
mov
mov
pop
hlt
jns
xchg
dec
out
add
cmp
add
pop
scas
addb
add
mov
sub
mov
push
sub
sbb
add
loopne
mov
lods
lods
or
mov
in
cltd
or
dec
push
stos
sahf
pusha
add
cmpsl
mov
lcall
add
mov
add
mov
mov
out
add
push
sub
jae
outsl
bound
mov
jns
jae
add
jns
jp
movsl
jle
add
es
adc
add
cmc
rolb
mov
mov
adc
aas
pusha
add
insl
imul
jae
lret
push
add
mov
push
push
mov
lds
xchg
mov
pop
popf
fucomi
pcmpgtw
pushf
out
add
sub
mov
mov
in
cli
fildll
mov
or
xor
nop
add
add
xor
mov
add
fistl
mov
test
fs
push
jno
cmp
mov
sbb
in
in
cmp
std
and
mov
je
fsubrs
mov
es
add
mov
mov
dec
test
mov
int3
mov
bound
mov
pop
loop
mov
fldt
pop
jbe
rolb
mov
bound
mov
in
adc
inc
add
das
test
xchg
pop
out
mov
xchg
xor
aas
rcll
add
sbb
out
aad
jmp
inc
add
push
popa
sub
filds
cmp
and
mov
add
mov
out
loop
mov
pop
into
ljmp
cmp
les
mov
frstor
add
cmp
int3
lahf
rolb
mov
popf
dec
lcall
push
jge
mov
nop
add
mov
sbb
lods
and
lods
insl
daa
inc
add
fldl
pop
sub
pop
into
lds
addl
repz
mov
and
mov
sbb
add
lea
add
mov
mov
mov
push
mov
pop
sub
add
sub
add
mov
sub
mov
mov
lret
scas
iret
addb
rolb
mov
xchg
dec
jle
out
addr16
inc
test
dec
imulb
gs
push
out
inc
jl
and
in
push
arpl
mov
mov
inc
prefetchw
ficoml
add
lds
push
pop
sbb
inc
add
push
push
add
jp
daa
daa
push
xchg
inc
cwtl
test
sub
dec
dec
lret
pop
push
add
cmp
mov
mov
or
pop
add
xor
adc
nop
add
xchg
mov
mov
and
insl
std
jle
add
add
cld
mov
inc
push
cmp
xchg
cmp
add
pushf
inc
adc
mov
mov
add
add
mov
xchg
aas
or
mov
pushf
js
fisubrs
or
data16
jo
mov
cs
lods
inc
js
mov
add
adc
add
add
jle
add
inc
or
in
push
mov
pop
dec
rcll
leave
mov
mov
pop
movsb
mov
push
mov
pusha
add
add
push
adc
fisubrs
cmc
adc
sub
add
mov
mov
cmp
pushf
pop
push
add
clc
cmp
popa
pusha
add
stc
fdiv
ds
mov
out
jmp
in
addr16
mov
xor
mov
add
ljmp
mov
jae
mov
cmpl
cmp
sbb
xchg
sbb
add
or
add
scas
filds
iret
pop
pop
repnz
sub
nop
add
adc
mov
rolb
cmp
and
mov
insb
pop
cmp
sbb
inc
add
fsubl
add
mov
mov
mov
mov
jnp
rorl
aad
ror
inc
sub
mov
dec
fidivl
call
repz
stc
jle
repnz
inc
mov
fbstp
adcl
jnp
jb
mov
scas
pop
cli
cmp
dec
add
mov
add
lds
mov
push
dec
xor
or
test
mov
xchg
add
mov
sub
roll
mov
adc
hlt
add
inc
mov
lcall
leave
movsb
inc
add
int3
outsb
push
repz
inc
mov
add
push
sbb
fnstsw
pop
not
add
mov
add
mov
jnp
jne
add
js
adc
sbb
add
inc
push
jmp
push
cmpsb
dec
pop
ljmp
sub
xchg
test
push
add
mov
add
sub
mull
cmp
push
sbb
mov
mov
fcomip
rolb
mov
in
pusha
add
cli
sti
sub
add
fucom
sub
ja
rorl
je
jg
add
add
jo
mov
shr
dec
hlt
xchg
pop
lahf
adc
js
xor
pop
rolb
bound
mov
mov
inc
icebp
dec
clc
add
add
inc
ja
mov
loopne
mov
lret
repz
mov
lahf
movsl
addb
fwait
push
add
mov
test
jae
inc
or
inc
add
mov
icebp
stos
rep
add
mov
pop
dec
adc
mov
loopne
mov
inc
mov
addb
icebp
fistl
sbb
aam
add
add
cmp
bound
mov
add
sbb
cmpsl
not
push
jae
add
js
push
jb
mov
inc
cmpsl
sbb
lock
rolb
mov
roll
dec
ret
test
dec
mov
add
push
jmp
add
push
aad
das
pop
mov
sbb
movsb
test
test
hlt
hlt
xchg
out
cltd
push
mulb
mov
into
arpl
add
mov
sbb
add
mov
clc
xchg
mov
add
jle
cli
jb
mov
add
call
jb
mov
push
mov
mull
movsb
or
pop
xor
jecxz
mov
lea
pop
js
add
imul
add
iret
and
frstor
mov
movsb
mov
mov
test
inc
lahf
push
pop
stc
mov
mov
mov
mov
dec
pop
gs
mov
rcrl
lods
enter
shrl
cmc
sbb
mov
pop
ljmp
inc
add
xor
mov
mov
add
popf
lahf
sub
cltd
inc
pushf
pop
cmp
dec
cmp
mov
mov
xchg
mov
add
jg
mov
pop
test
add
xchg
mov
lods
scas
scas
sbb
mov
scas
push
sti
int3
push
and
mov
push
push
in
cltd
inc
and
fsubrl
jmp
adc
mov
in
add
rorl
mov
inc
add
add
sbb
and
mov
mov
adc
sub
addr16
int
jge
mov
mov
xor
mov
add
mov
sub
cmp
push
inc
xchg
add
cld
out
rep
mov
scas
es
inc
add
movsb
cli
jl
dec
test
or
sbb
cmp
jb
mov
add
nop
add
pushf
mov
lret
stos
daa
push
int
cmp
xor
mov
xchg
mov
pop
and
or
xchg
adc
hlt
sbb
daa
loop
mov
mov
jnp
lahf
rcll
add
mov
mov
mov
aas
test
dec
or
xor
popl
mov
mov
mov
outsl
mov
mov
in
fstl
mov
mov
or
mov
cmp
xor
mov
add
jo
mov
pop
les
fs
add
ss
loope
je
mov
lea
mov
add
sub
sbb
push
add
dec
adc
mov
jae
mov
fcomp
leave
push
mov
ss
mov
cli
mov
addr16
mov
rcll
sub
xor
mov
jg
scas
inc
push
cmp
and
mov
addb
mov
es
movsb
mov
mov
fcompl
adc
mov
mov
jmp
mov
mov
add
iret
pop
out
dec
pop
push
and
mov
pop
mov
mov
add
mov
mov
ja
clc
xchg
lods
insl
repnz
xchg
push
add
mull
mov
out
xor
mov
outsb
pushf
mov
inc
lcall
add
adc
mov
xchg
or
popf
rcrl
sbb
sbb
dec
sbb
ret
lea
add
pop
cmp
mov
cmp
cmpsl
mov
cs
pop
pushf
and
mov
add
dec
or
add
pop
loop
mov
mov
xor
mov
leave
mov
call
add
add
add
call
add
fisubrs
dec
aam
pop
enter
and
fisttpll
fwait
stc
jle
dec
adc
mov
loop
mov
cmp
pop
xor
insl
out
push
xchg
mov
jno
add
xor
push
jp
test
test
add
pop
mov
pop
mov
inc
add
xor
xor
mov
ss
add
jmp
sbb
iret
xchg
add
fs
add
xchg
push
cli
mov
add
mov
add
fdivs
loop
mov
cmp
pop
jne
push
negb
mov
mov
icebp
cmpsb
gs
lds
fildll
add
add
fwait
lods
scas
mov
in
inc
add
int
add
jne
jl
iret
sti
int
add
mov
lcall
popa
stc
dec
call
lcall
jne
mov
insb
cli
pop
jnp
mov
lcall
sub
call
and
mov
add
mov
cs
push
jbe
stos
or
xchg
sahf
outsl
xchg
mov
add
cmpsb
filds
addr16
fisubl
mov
mov
rolb
xchg
add
rolb
mov
add
notb
dec
lret
arpl
cmp
mov
add
or
push
add
mov
add
mov
mov
mov
imul
pop
mov
jmp
in
sub
sub
sub
add
out
sbb
add
daa
dec
push
lcall
xchg
dec
xchg
lahf
dec
add
mov
mov
jl,pn
jno
mov
inc
mov
les
rolb
sbb
add
outsb
pushf
push
add
xchg
cwtl
adc
repnz
dec
inc
xchg
add
fcoml
cmpsl
jecxz
xor
test
add
jnp
test
ret
bound
mov
lcall
repz
fcomp
lret
dec
js
and
mov
sbb
xchg
xchg
add
mov
cmp
bound
mov
es
icebp
sub
xchg
lahf
xchg
add
aas
adc
mov
dec
pusha
add
bound
mov
xor
mov
pushf
adc
mov
push
stos
cmp
outsb
pop
xor
jns
aaa
jmp
mov
lods
pop
jbe
sahf
outsl
dec
dec
or
fldl
mov
sbb
out
stc
dec
xor
or
push
add
cmpsl
stc
cwtl
jge
xor
mov
mov
add
fistps
ret
mov
add
mov
or
cmp
mov
cmp
call
xchg
add
add
mov
add
int3
mov
dec
insl
push
out
pop
pop
aam
outsb
mov
mov
lcall
mov
add
lret
addb
sbb
cmc
inc
int
out
mov
ljmp
xchg
gs
add
sarl
mov
jg
mov
add
add
or
nop
add
add
jb
mov
lods
push
mov
add
mov
add
mov
add
mov
cmp
mov
mov
aas
and
mov
movsl
fisttpl
adc
sbb
mov
and
add
jp
sub
mov
cmpsl
xor
mov
rolb
mov
lock
add
addr16
xchg
arpl
add
adc
mov
cmp
jb
mov
push
add
mov
add
and
mov
xorl
xchg
pop
js
add
mov
add
rolb
lods
and
add
mov
int
push
push
push
jl
mov
fcmovnbe
add
jge
test
adc
jl
lods
ret
popaw
mov
popa
or
add
call
jmp
push
dec
push
test
push
es
or
mov
mov
add
sub
or
inc
das
cmp
ljmp
cmp
add
cmp
cltd
rorl
dec
test
cmc
ja
jle
stos
push
add
scas
and
scas
pop
mov
aas
sub
pusha
add
mov
add
mov
imul
clc
fisubs
out
and
xchg
or
cs
roll
xchg
inc
mov
and
mov
pushf
jo
mov
inc
add
stos
mov
cmpsl
or
cwtl
mov
ret
fldcw
add
mov
push
mov
sbb
add
and
push
mov
int3
loopne
mov
fdivr
inc
and
adc
mov
add
fldenv
add
scas
xchg
pop
iret
mov
sub
add
outsb
fnsave
imul
cmp
stos
addb
jge
xchg
fs
adc
mov
mov
rolb
mov
sub
cld
sub
mov
xor
mov
lods
xlat
mov
loope
mov
movsl
and
mov
fs
mov
in
pop
jbe
jge
mov
lods
fdivrs
test
pop
stos
mov
cmp
imul
push
hlt
scas
adc
mov
testl
pop
stos
xor
dec
xchg
mov
inc
sub
xchg
loopne
mov
cwtl
adc
mov
inc
mov
xchg
ljmp
movsb
xchg
mov
mov
mov
mov
xchg
xor
mov
mov
sti
mov
fwait
xlat
inc
sahf
ret
push
in
dec
rolb
mov
enter
jecxz
icebp
mov
out
call
or
mov
add
jp
add
daa
call
mov
aaa
out
add
test
dec
mov
push
jl
and
mov
jmp
push
in
les
enter
add
mov
add
aas
jns
add
mov
sbb
rolb
in
aaa
in
push
cmp
mov
in
popf
jp
jne
fwait
in
pushf
mov
cmpsl
gs
mov
movsl
xchg
push
sub
sti
mov
mov
stos
add
push
add
dec
mov
mov
jo
mov
add
pop
roll
cwtl
adc
mov
lea
repnz
cmp
jecxz
lret
scas
add
add
sub
mov
daa
outsb
ljmp
sub
mov
jnp
add
mov
push
cmp
mov
orl
mov
dec
fistpll
jle
fbld
add
mov
adc
lahf
jge
iret
sahf
pushf
mov
fcomps
scas
popf
lods
cmpsb
insl
cltd
and
mov
xchg
add
call
mov
pop
inc
jp
push
mov
cmpsb
mov
pop
dec
cmp
push
add
cmp
jge
rolb
mov
add
mov
and
xor
mov
xchg
add
mov
fsubrs
aam
popa
fstpl
dec
push
ss
sub
rol
add
xor
add
cmp
rolb
mov
add
aaa
repnz
cwtl
mov
or
std
add
inc
add
mov
lret
mov
ja
addb
push
pop
movsl
movsb
push
add
fcmovu
ret
sub
jmp
sbb
add
cmp
ja
xor
mov
inc
add
mov
mov
mov
adc
mov
pusha
add
xchg
dec
or
test
mov
add
lds
xchg
call
dec
in
hlt
xlat
xor
adc
movsb
pop
push
xor
mov
push
add
push
ret
xchg
sub
dec
aas
mov
xchg
sbb
push
jno
add
insl
mov
div
add
add
add
or
test
ss
popa
sbb
arpl
mov
mov
and
mov
jmp
mov
mov
pop
push
call
ss
or
insb
add
pop
mov
mov
addb
jne
shll
add
leave
out
jae
add
mov
xchg
add
fisubrs
mov
mov
rolb
mov
xor
or
xchg
inc
add
mov
adc
int3
sbb
pushf
popl
mov
stos
scas
out
arpl
ficoml
add
add
xor
cwtl
jno
inc
add
push
and
mov
fisubrl
pusha
add
jnp
jb
mov
sub
sub
ds
jge
jae
stos
out
push
insl
pop
ljmp
mov
jo
xor
mov
lods
sarl
lods
or
pop
imul
pop
dec
popa
dec
lea
pushf
or
xor
add
out
addb
and
mov
lods
mov
add
cmp
in
repz
xor
mov
adc
mov
mov
or
insb
outsb
pop
jno
sub
inc
lock
mov
xchg
bound
mov
into
and
lahf
leave
aaa
stc
sub
xchg
cmp
add
push
out
call
mov
xchg
mov
lds
push
sti
xchg
jne
add
jmp
and
jo
mov
loop
mov
xor
ss
push
cmp
out
jg
pop
mov
mov
in
add
ljmp
mov
add
insl
jbe
jae
mov
mov
sbbl
inc
mov
mov
inc
add
add
mov
cmc
nop
add
xor
jg
xchg
jnp
and
outsb
xor
mov
lret
or
dec
int
movsl
jmp
mov
pushf
repz
ret
std
fimuls
adc
mov
dec
xor
mov
push
imul
or
pop
into
pop
bound
mov
lret
mov
mov
jbe
inc
pop
adc
add
mov
add
add
mov
adc
mov
mov
inc
insl
sub
add
xchg
sbb
shrl
loop
mov
push
pop
dec
out
outsl
adc
sbb
mov
movb
mov
jmp
faddl
movsb
iret
sub
cmp
and
mov
xor
mov
adc
mov
add
das
cmp
add
insb
fisttpll
add
add
or
push
add
outsl
lods
push
lcall
ja
mov
mov
lea
ljmp
add
push
jbe
jle
idivb
inc
ret
notb
mov
sub
aaa
mov
aam
add
rolb
mov
ss
bound
mov
mov
mov
add
sub
clc
inc
and
imul
mov
leave
jle
adc
xchg
add
mov
les
fcmovne
xchg
clc
inc
xor
add
mov
add
ja
loop
mov
insl
lahf
push
mov
mov
out
into
mov
add
add
sub
je
bound
mov
mov
pusha
add
ror
outsb
jb
mov
pop
out
dec
out
out
lret
sbb
add
addb
pop
jno
add
lods
std
ss
jnp
lret
inc
sbb
popa
inc
add
xchg
xchg
xchg
mov
add
mov
mov
lret
ret
sub
hlt
xlat
dec
or
movsb
popf
popf
xor
mov
add
mov
pop
push
cs
roll
xor
mov
mov
mov
es
lret
outsl
ljmp
pop
lea
adc
mov
jbe
or
mov
add
push
sbb
enter
in
mov
movsb
ret
imul
call
jnp
divb
add
xor
addb
jg
jmp
xor
mov
orl
insl
aad
rolb
movsl
bound
mov
ss
and
jns
dec
test
popf
mov
jmp
rcr
inc
lret
lds
scas
aad
hlt
test
cs
xchg
xchg
and
pop
jmp
add
cmp
divl
out
cli
xchg
jcxz
addr16
daa
cli
ljmp
add
mov
loop
mov
add
inc
fadd
add
fsubs
insl
loope
add
repnz
ret
sbb
mov
enter
adc
outsb
das
sbb
pop
dec
push
or
add
dec
pop
jno
add
fidivrl
jno
jns
ja
cmp
sbb
adc
mov
mov
aam
push
push
and
mov
inc
mov
or
js
sub
sub
lock
lret
sbb
aaa
clc
xchg
lea
add
cli
rolb
ss
add
and
cmpsb
lods
cmpl
xchg
add
dec
mov
add
sub
add
cmc
aad
fcmovnbe
add
add
data16
add
xor
ds
cmc
outsl
ret
dec
popf
pop
xor
mov
jg
mov
mov
push
fdivl
add
mov
add
add
mov
add
mov
shll
add
xchg
mov
movsb
je
add
mov
adc
add
add
mov
jns
ret
xchg
jmp
in
cld
sub
mov
outsb
jb
mov
or
or
mov
cltd
mov
push
jmp
das
or
mov
xor
fcmovne
data16
loop
mov
inc
dec
cmp
add
mov
and
xor
mov
add
add
add
out
stos
out
mov
mov
ficoml
add
push
add
and
add
mov
xchg
add
xor
mov
sar
push
mov
mov
add
dec
cmc
repnz
xchg
lret
and
add
jmp
add
lahf
scas
jmp
xor
mov
pop
aas
in
mov
loopne
mov
in
mov
push
jmp
rolb
mov
bound
mov
andl
and
mov
in
mov
add
int3
das
cmp
scas
leave
sahf
aam
inc
adc
mov
pop
jo
mov
push
test
sub
mov
inc
add
adc
mov
in
das
and
enter
mov
xchg
stc
mov
mov
add
mov
jae
lret
pop
es
add
into
sti
push
ds
adc
mov
add
inc
out
cli
sub
fs
pop
addr16
and
mov
fsubr
mov
add
add
movsb
in
cmpsl
and
inc
je
add
les
xchg
inc
add
iret
inc
clc
cmp
mov
push
add
push
add
sbb
arpl
pop
or
outsb
clc
ja
das
dec
add
mov
mov
add
mov
cltd
sbb
test
pop
xchg
rorl
xlat
lea
mov
loope
pop
stc
jmp
add
mov
int3
mov
xchg
mov
and
lea
add
sub
add
ret
mov
aaa
iret
push
fidivl
rolb
sbb
add
jns
mov
rolb
mov
addb
fcmovb
jns
arpl
or
jo
mov
mov
sub
adc
ds
xlat
xor
pop
ds
pop
xor
mov
add
add
mov
add
add
xor
je
xor
mov
xchg
std
add
fsts
mov
pmaxub
mov
jmp
pop
cltd
xor
mov
or
loopne
mov
dec
movsb
pop
pop
iret
add
inc
js
cmp
loope
fs
push
push
in
aad
jmp
push
or
inc
xchg
add
mov
lahf
inc
add
add
pusha
add
lret
add
mov
xchg
imul
pop
lods
fists
mov
push
gs
push
add
movsb
loop
mov
mov
xchg
and
cmp
icebp
int3
jo
mov
mov
mov
push
test
add
or
imul
leave
dec
sbb
mov
xor
or
std
in
cmovbe
loopne
mov
add
inc
lea
xchg
mov
dec
arpl
and
mov
mov
out
lock
xchg
add
imul
xor
mov
lret
pop
insl
push
add
rcrl
test
or
ret
fidivrs
leave
ja
mov
add
jo
mov
cli
jl
push
enter
xor
mov
mov
mov
mov
decl
daa
push
and
mov
add
sbb
inc
dec
leave
addl
sub
dec
dec
add
mov
cmp
repz
add
and
mov
fs
push
inc
add
enter
movsl
call
add
push
dec
hlt
add
mov
jl
mov
mov
sbb
jbe
xchg
mov
mov
insb
inc
jle
call
sbb
dec
pop
inc
jl
incl
lock
or
pusha
add
int
sbb
and
mov
popa
insb
pushf
or
adc
mov
dec
popa
iret
mov
lret
and
arpl
scas
cmc
push
push
add
add
outsb
clc
int3
xchg
add
add
cwtl
adc
in
sbb
out
sub
loopne
mov
pushl
jmp
insl
int
repnz
xor
mov
push
aaa
sahf
out
lods
addb
inc
mov
pop
aaa
addb
or
mov
push
sqrtps
mov
mov
sub
loopne
mov
pop
test
bound
mov
fadds
sub
test
add
add
dec
enter
mov
add
loopne
mov
in
repnz
adc
mov
aas
add
mov
adc
mov
mov
or
pop
xchg
add
movsl
andl
xor
mov
mov
xor
jns
inc
mov
jns
cmp
insl
sbb
push
inc
add
jle
add
cmp
dec
in
mov
add
cmp
pop
push
cmp
add
das
xchg
or
cmc
mov
mov
add
ds
xor
mov
adc
mov
pushf
mov
add
adc
add
fidivl
int3
mov
mov
lahf
das
inc
add
and
adc
enter
jno
leave
xchg
xchg
pop
pop
dec
je
into
xchg
dec
and
mov
or
es
add
inc
xor
add
repnz
add
ret
mov
icebp
lods
push
adc
push
or
pop
cs
scas
dec
dec
xchg
call
nop
add
jg
mov
out
add
push
add
jo
mov
movsb
sahf
jmp
fbstp
nop
add
mov
nop
add
aad
add
jbe
add
jns
xchg
add
mov
pop
mov
jne
push
lahf
sbb
jne
ret
fdivrl
add
cmp
add
pushl
sbb
les
sbb
js
inc
addl
and
add
mov
cli
mov
fisubl
test
stos
aam
adc
mov
mov
pop
dec
addr16
ficoms
push
into
xor
bound
mov
add
mov
sbb
cmp
pop
push
pop
jno
cli
js
jno
cmp
sbb
mov
xlat
adc
pop
insl
and
mov
add
outsb
lret
popf
jae
roll
mov
mov
fisttps
fcoms
mov
add
sarl
dec
insl
and
imul
lds
dec
scas
cmc
arpl
and
xor
mov
add
ja
pop
adcl
lds
aas
mov
inc
add
add
mov
pop
mov
jb
mov
add
shr
leave
fdivrp
in
int3
sub
das
orl
fbstp
popf
push
movsb
inc
addb
push
lds
cmovp
out
jno
add
inc
sub
shll
add
fst
inc
push
xchg
test
add
add
xlat
sbb
mov
sub
stos
inc
lds
dec
push
push
sbb
add
push
rcl
xor
mov
or
mov
mov
jg
imul
push
sub
ret
leave
add
mov
xor
sbb
into
sysenter
mov
mov
mov
add
mov
xor
mov
dec
cltd
xor
mov
leave
lcall
mov
mov
sti
icebp
mov
cmp
in
into
mov
add
lock
mov
ja
test
dec
cmp
fcoml
pop
pop
stos
mov
jo
mov
sub
mov
xor
or
jnp
pop
sbb
add
pop
jae
rolb
jecxz
inc
mov
in
jg
jnp
or
addb
cmpsb
loopne
mov
xor
addb
out
jle
test
mov
add
push
xchg
js
in
ds
inc
inc
or
add
push
ja
pop
cmp
arpl
lea
scas
push
out
movsb
ja
add
iret
jo
mov
neg
dec
push
mov
xchg
jecxz
cli
push
popa
or
mov
sub
push
rolb
out
lock
sbb
popa
adc
mov
loopne
mov
and
mov
add
aad
adc
fnstsw
add
rolb
sub
and
sub
add
pop
movsl
and
inc
add
js
shll
pop
aad
add
mov
bound
mov
adc
mov
mov
hlt
loopne
mov
add
adc
mov
dec
lret
mov
add
jg
mov
mov
mov
and
mov
mov
add
and
cmp
enter
jne
mov
cmp
add
xchg
adc
pop
xchg
pushf
mov
push
scas
lcall
add
les
loope
push
aad
insl
out
xor
js
inc
xchg
lret
xor
cmp
jge
add
cld
push
popf
loopne
mov
push
cli
dec
fdivrs
add
popa
loop
mov
ja
add
mov
mov
xor
cld
fs
mov
imul
mov
mov
mov
mov
sahf
push
lret
pop
out
pop
in
xor
mov
add
lcall
add
mov
jmp
add
and
mov
add
pop
jne
add
test
add
mov
jns
and
mov
mov
int
mov
ret
or
cmp
add
ss
add
xorl
mov
into
fidivrs
inc
dec
mov
inc
add
xchg
add
jb
mov
xchg
and
adc
sahf
cwtl
rcrl
aas
and
das
jecxz
roll
addr16
cmc
cmp
cmp
stc
mov
es
add
mov
pop
pop
jle
inc
add
push
in
in
pop
xor
add
rolb
mov
cmp
or
pushf
sbb
daa
pop
outsl
sub
push
jno,pt
or
add
sub
mov
adc
pop
sbb
in
mov
push
incb
add
xchg
leave
jmp
mov
int
xchg
and
add
pop
cltd
xor
mov
mov
cmp
or
push
scas
mov
mov
push
fs
aas
sbb
mov
sub
out
xchg
pop
mov
cmp
inc
arpl
scas
ja
lea
inc
add
test
sbb
add
or
outsb
cmpsb
push
call
push
movsl
sar
scas
mov
mov
arpl
cmp
gs
out
ja
int
xchg
mov
add
push
mov
ret
pop
sbb
push
movsb
push
jae
mov
dec
dec
repnz
pop
push
add
mov
aam
scas
sbb
xor
call
xchg
add
mov
mov
ja
cltd
push
leave
movsb
cmpsl
jp
mov
mov
dec
leave
outsb
mov
mov
push
mov
dec
mov
mov
add
mov
add
add
sub
cwtl
imul
mov
mov
add
mov
mov
adc
mov
cli
fiaddl
mov
mov
dec
clc
cwtl
push
fwait
pop
scas
push
xor
mov
lds
add
mov
lret
xor
mov
or
jae
leave
inc
add
cmp
ljmp
add
add
mov
add
xchg
mov
add
enter
add
add
pop
ljmp
pop
sub
sbb
cmp
adc
add
in
mov
mov
push
int
or
add
add
enter
xchg
or
adc
test
add
inc
cld
sub
mov
cmp
mov
add
stc
push
lahf
test
xor
mov
xchg
add
mov
add
add
pop
cltd
jbe
inc
add
mov
mov
add
pop
push
outsb
mov
pop
mov
xor
add
in
add
outsb
movsb
rcl
push
hlt
fdivs
add
add
dec
xor
add
jo
mov
icebp
pushf
movl
add
mov
loop
mov
out
pop
fs
pop
sub
pushl
push
add
mov
cmpsb
inc
dec
jo
mov
adc
mov
push
leave
xor
mov
inc
add
jmp
movsb
sub
pop
aam
add
scas
les
mov
mov
loop
mov
mov
lcall
mov
jg
pop
mov
jbe
pop
jbe
mov
inc
push
out
add
mov
mov
mov
mov
add
je
pop
cltd
add
mov
or
add
rolb
mov
cmpps
inc
add
and
mov
add
bswap
aas
mov
mov
adcl
lods
or
repz
mov
test
test
mov
insl
popa
mov
add
js
nop
add
mov
outsl
sti
add
or
daa
addb
aam
rolb
mov
std
sub
repnz
ret
inc
sub
ret
mov
lods
inc
lret
dec
in
or
dec
cmp
pop
inc
test
xorl
xchg
sub
bound
mov
jecxz
pop
and
mov
xchg
movsb
sub
clc
or
out
aas
test
add
add
jle
add
mov
dec
es
lods
lret
rolb
mov
and
gs
mov
stos
es
addr16
and
mov
add
dec
stos
rolb
incb
aad
cmp
mov
add
inc
add
mov
mov
data16
mull
add
mov
mov
mov
adc
maxps
mov
add
mov
imul
bound
mov
je
nop
add
cmp
enter
add
add
push
add
mov
xchg
lea
ds
pushf
mov
lods
push
add
out
add
lret
add
pop
xchg
pop
xor
pop
dec
dec
push
mov
fwait
iret
mov
jp
xchg
fwait
inc
add
les
das
cmpsb
xchg
int
mov
ljmp
push
pop
cmp
push
mov
sub
mov
ja
cmpsb
aas
in
add
jnp
pushf
push
testb
fdivrl
inc
add
pop
lds
push
mov
inc
mov
mov
rolb
mov
ljmp
add
mov
mov
test
xchg
lcall
rorl
aas
andl
add
rolb
mov
mov
push
lock
push
cwtl
cmp
add
repnz
loopne
mov
jne
popa
inc
daa
or
mov
sldt
mov
cmpl
in
add
inc
cmpsb
sbb
sbb
sahf
mov
hlt
and
mov
rolb
mov
jmp
jne
les
ljmp
cmp
cmpsb
scas
sti
out
add
shrl
push
cmp
cmpsb
lods
or
ret
mov
hlt
fsubrl
xor
cld
ds
add
pop
push
sbb
inc
add
xor
rolb
cmp
call
lret
mov
leave
lret
pop
lea
inc
inc
in
add
sub
add
sub
mov
sub
add
push
adc
mov
add
dec
add
mov
ret
out
fidivs
mov
add
add
xchg
dec
clc
mov
mov
cmp
rolb
jl
fdivs
bound
mov
add
fistps
push
lret
push
ficompl
pop
jecxz
mov
mov
fldcw
push
clc
int3
lock
into
sbb
and
mov
pusha
add
lods
sbb
add
mov
je
das
and
add
jmp
mov
mov
icebp
sub
shll
insb
ds
test
test
xchg
movsb
std
sbb
mov
scas
mov
mov
xchg
icebp
in
and
lods
xchg
jno
adc
push
in
shrl
mov
mov
add
jns
movsb
loope
iret
mov
loop
mov
jno
push
add
fldenv
push
pop
arpl
push
rolb
mov
add
mov
inc
add
sbb
cmpsb
inc
push
adc
mov
mov
jo
mov
add
mov
jno
sbb
dec
mov
pop
and
mov
add
mov
fwait
cwtl
mov
es
push
add
add
add
movb
dec
and
xchg
jns
cmp
sbb
mov
rolb
inc
dec
mov
aam
push
add
push
call
pop
adc
ja
addb
leave
rolb
mov
mov
add
mov
mov
movsl
xchg
dec
subl
mov
lock
in
mov
inc
sar
lods
test
mov
mov
and
cwtl
adc
mov
aas
push
jl
mov
mov
aaa
negl
cwtl
adc
ja
sbb
add
push
in
daa
xor
ret
ss
and
mov
adc
leave
int
add
mov
mov
dec
inc
push
ljmp
loopne
mov
jnp
pop
packuswb
js
lods
outsb
mov
add
ds
fisubl
adc
add
mov
rcll
pop
fwait
pusha
add
jl
ret
add
mov
mov
dec
rorl
xor
mov
add
std
insl
add
add
add
fldenv
mov
cs
and
add
add
add
adc
mov
push
cmp
push
add
ljmpw
inc
out
fldenv
add
sub
mov
std
mov
mov
adc
mov
fildl
fwait
xchg
in
add
mov
pop
push
or
sub
lcall
xlat
sti
cmpsb
inc
add
cld
or
pop
das
pop
jae
lods
jg
cmp
mov
mov
mov
sbb
mov
notb
loopne
mov
ja
add
mov
push
inc
add
mov
jnp
sub
xor
add
mov
mov
std
sub
mov
xor
aas
arpl
nop
add
sbb
or
mov
repnz
add
mov
lahf
fs
negb
mov
or
jp
ss
jp
js
mov
dec
xor
sbbl
add
mov
adc
mov
testb
add
mov
add
bound
mov
mov
mov
mov
lret
push
out
loop
mov
xchg
add
add
inc
xchg
pop
push
jo
mov
sahf
pop
jo
mov
nop
add
repnz
push
sub
mov
mov
sahf
jae
mov
jns
push
jno
add
mov
outsl
aad
or
fiaddl
repz
mov
mov
and
outsl
iret
jne
sub
iret
int
rolb
adc
add
loope
rcrl
ficoml
push
sbb
insb
mov
push
outsl
lds
and
xor
add
push
rolb
mov
popa
es
xchg
add
mov
movsb
je
xchg
xor
pop
pop
out
aas
out
test
mov
mov
test
shl
mov
leave
xlat
jle
xchg
fwait
icebp
repz
add
mov
mov
sub
out
data16
cltd
cmpsl
xor
xor
aaa
out
daa
pop
imul
mov
adc
ja
popf
aaa
iret
cmpsl
adc
mov
sub
add
ucomiss
push
jnp
addb
cmp
mov
aam
daa
fbstp
rcrl
sbb
or
popa
fisubrs
mov
aas
test
mov
dec
add
lret
aaa
mov
xchg
popf
adc
mov
add
pop
test
bound
mov
push
int3
mov
add
xor
xor
adc
pop
in
mov
ds
sbb
add
jbe
insl
movsl
jbe
dec
dec
mov
add
add
ja
add
aam
outsb
int3
pop
test
lock
add
dec
pop
pusha
add
sbb
add
inc
push
mov
mov
add
movsb
cmc
addb
and
sbb
or
xchg
sub
mov
out
test
add
jbe
inc
add
add
xor
mov
add
idiv
jge
and
jecxz
cmp
jl
add
gs
mov
cmp
mov
push
sarl
and
add
mov
jl
add
mov
inc
ret
hlt
popf
in
jmp
jbe
jno
mov
ffreep
xor
add
mov
pusha
add
call
lods
leave
mov
scas
mov
and
push
cmp
xchg
dec
mov
adc
mov
add
pop
cmp
add
sbb
sbb
mov
les
jb
mov
loopne
mov
mov
add
cmpsl
negl
xor
call
outsb
jp
ds
out
sub
inc
add
es
push
int3
pop
and
mov
cmpsb
clc
std
add
mov
jl
sbb
ret
cmc
pop
sbb
lea
je
jge
dec
mov
outsl
dec
jns
cmp
mov
mov
iret
scas
xchg
addb
insb
mov
sub
dec
xchg
add
pop
ljmp
les
add
out
add
dec
fldt
jmp
pop
jge
adc
mov
dec
mov
xchg
add
add
jge
mov
dec
in
pushf
nop
add
add
mov
dec
mov
lret
pop
jb
mov
pop
addr16
stos
push
lds
xor
add
jns
jb
mov
arpl
sbb
stc
sahf
icebp
push
add
adc
add
or
xlat
addb
add
bound
mov
jo
mov
hlt
pop
push
loope
js
addr16
das
sbb
ret
mov
dec
mov
rcl
xchg
outsb
mov
mov
add
bound
mov
mov
repnz
pop
push
daa
push
add
mov
das
sahf
lods
xor
call
dec
rorl
add
fldt
mov
jne
or
scas
adc
rolb
inc
cli
stos
xchg
stos
into
push
add
mov
and
fstpl
setbe
test
push
add
lea
repnz
imul
xchg
aad
inc
stos
push
leave
adcl
adc
mov
push
inc
sub
lea
lahf
shll
xlat
xchg
sub
dec
add
imul
sub
mov
in
icebp
fnsave
and
fdivrs
fiadds
add
fsubs
imul
push
adc
mov
sub
mov
imul
add
mov
add
imul
ja
jle
adc
mov
and
mov
into
mov
xchg
jb
mov
mov
rolb
xor
addb
ds
or
jle
dec
into
mov
and
push
std
mov
add
inc
mov
test
push
add
dec
add
gs
out
fstl
andnps
mov
flds
mov
into
test
incb
mov
clc
pop
rolb
mov
or
jl
add
xchg
adc
ljmp
add
add
xor
pop
inc
add
add
mov
mov
in
std
lahf
jl
add
add
out
repnz
add
add
jg
fisttpll
jle
mov
xchg
fisubl
push
push
add
std
cmp
and
sub
lea
jge
mov
mov
out
popf
aas
nop
add
clc
pop
int3
mov
add
imul
inc
add
add
dec
xchg
xor
mov
and
pop
int3
sbb
test
daa
xor
add
push
lret
lcall
mov
mov
mov
sub
add
jb
mov
jae
sbbl
repz
pop
jge
mov
aas
sbb
inc
xor
sbb
leave
mov
add
rolb
mov
mov
add
icebp
cmpsb
call
sbb
push
dec
lret
aad
push
cmp
rolb
mov
sbb
outsb
ljmp
adc
mov
int3
push
mov
mov
mov
pop
jb
mov
add
add
leave
add
add
add
