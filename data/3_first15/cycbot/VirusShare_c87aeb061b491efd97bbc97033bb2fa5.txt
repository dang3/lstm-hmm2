sbb
dec
addb
mov
ds
jae
bound
mov
add
jno
mov
nop
add
mov
dec
mov
xlat
jne
icebp
sbb
mov
cmp
pop
and
adc
mov
add
sbb
jl
test
or
dec
push
adc
mov
add
mov
push
rorl
or
std
ret
jb
mov
int3
push
xchg
add
mov
insl
sub
pushf
repz
inc
clc
daa
insb
xchg
push
push
add
mov
mov
mov
mov
adc
xor
mov
lahf
cmpl
push
mov
sbb
mov
lds
insb
out
and
add
or
mov
dec
adc
xchg
sub
stos
out
xchg
push
push
add
jg
lds
ficoml
sti
lock
xor
mov
add
mov
push
add
sub
rolb
ret
xchg
fisubrl
insb
sbb
bound
mov
cmc
es
fidivrl
xor
icebp
and
mov
addb
pop
das
inc
fnsave
es
scas
pop
and
add
mov
dec
jl
in
rolb
hlt
imul
push
add
mov
leave
lods
outsl
addb
jnp
arpl
sub
fidivrs
lods
div
mov
sar
xor
mov
inc
int
add
iret
int
cli
testb
jne
mov
jne
jae
and
mov
dec
jae
and
enter
add
mov
imul
mov
push
jbe
add
in
fs
enter
in
cwtl
pop
push
lods
pop
jae
pop
fcomip
sub
insb
sub
std
fwait
mov
jnp
cmc
popa
ss
adc
mov
sbb
add
test
mov
aam
sub
add
mov
add
mov
addb
pop
jae
pop
mov
lahf
jae
rcrl
jae
cld
adc
roll
add
out
mov
mov
push
rolb
ret
dec
cs
mov
test
mov
mov
xlat
jg
lods
sbb
addb
jmp
in
ret
lods
and
sahf
call
sub
add
xchg
xor
aam
add
mov
lock
jae
into
dec
ficomps
pop
xchg
add
or
add
mov
mov
mov
lods
scas
push
push
mov
mov
jne
xchg
sbb
xor
mov
sbb
sub
add
pop
mov
xor
out
adc
mov
je
jno
add
push
add
mov
jne
pop
and
mov
in
scas
xchg
add
push
mov
lret
add
or
cmpsl
fisubrl
sbb
jecxz
sbb
loop
mov
inc
add
pop
and
mov
pop
addb
inc
fstpt
lock
sbb
and
sbb
imul
inc
mov
add
mov
gs
mov
mov
mov
imul
fstpl
add
fsubrs
sbb
xor
dec
test
add
popf
jmp
jle
mov
cmp
mov
mov
pop
xchg
cmpl
or
mov
mov
jb
mov
and
mov
xchg
add
jp
jbe
fdivr
jo
mov
mov
mov
xlat
push
adc
mov
pop
stc
mov
mov
aaa
pusha
add
add
cmp
mov
ss
pop
xor
mov
test
add
mov
mov
jecxz
pop
pop
lea
xor
fcompl
mov
imul
into
call
add
bound
mov
add
scas
scas
sub
inc
add
dec
push
imull
mov
loope
clc
mov
pop
xchg
xchg
sub
pop
jne
subl
pop
xchg
inc
cli
dec
and
add
and
jmp
scas
jmp
in
addb
stc
in
mov
jmp
push
cmp
daa
dec
cmp
pop
rol
movsb
and
mov
pusha
add
in
jne
jns
sub
js
jae
addb
xchg
lcall
cs
loope
mov
add
rolb
mov
mov
push
add
insl
and
mov
mov
xchg
xor
push
dec
pop
xchg
test
pushf
jg
sarl
mov
daa
negl
adc
testl
iret
sbb
popf
add
sub
add
mov
add
jecxz
leave
add
jnp
add
enter
and
sub
or
stos
fs
add
jne
xchg
mov
lds
xchg
adc
dec
xchg
add
fisttps
add
fstps
mov
je
cltd
rolb
mov
add
add
repz
jns
dec
test
sbb
movsb
xchg
int3
loopne
mov
movsb
mov
add
sahf
jbe
add
mov
das
dec
add
mov
jecxz
add
lock
add
call
adc
fsubs
mov
clc
insb
dec
or
sub
mov
icebp
insl
arpl
mov
add
xchg
add
std
xor
xchg
lret
mov
push
adc
push
mov
add
out
int3
fsts
fldl
add
xchg
clc
scas
nop
add
hlt
sub
js
cltd
push
sbb
scas
adc
mov
mov
add
mov
mov
std
push
mov
jl
into
nop
add
sub
ljmp
push
js
add
repnz
sbb
mov
mov
sub
filds
xchg
and
mov
push
pop
xor
mov
add
add
xor
mov
xchg
andl
das
in
inc
mov
int
xchg
mov
mov
out
inc
add
xor
mov
and
mov
mov
add
sbb
push
fistpl
test
inc
add
aam
and
mov
mov
add
stos
adc
fcmovnbe
sbb
push
cmpsl
jnp
fimuls
lods
jle
sbb
lods
pop
addr16
les
push
add
mov
ret
xor
sub
mov
gs
jbe
add
mov
add
sbb
jl
sub
js
push
stos
cmp
pop
jno
jg
inc
add
mov
lods
fdivr
rcrl
pusha
add
stos
imul
push
push
sub
iret
mov
xlat
call
pusha
add
addb
push
add
adc
mov
mov
out
jp
movsb
and
mov
adc
je
and
mov
jecxz
cmp
dec
or
add
insl
mov
and
jno
add
pop
lds
imul
jne
push
jmp
add
add
push
mov
nop
add
test
push
add
leave
es
popa
push
cmp
push
add
nop
add
lods
pop
movsb
adc
cmp
daa
lret
push
rolb
mov
addb
jno
inc
xor
mov
mov
sbb
sub
and
mov
mov
into
and
mov
loopne
mov
lods
into
and
cmp
mov
mov
mov
mul
cmp
inc
and
out
nop
add
test
add
add
test
sbb
adc
lea
xor
cmp
jnp
cmp
in
push
push
std
rolb
loopne
mov
dec
mov
jb
mov
cli
add
sbb
mov
outsb
jae
insl
sbb
xor
dec
pop
addb
lds
sub
mov
jge
xchg
xlat
int3
mov
sbb
xchg
add
sarl
scas
outsl
push
xchg
xchg
jg
ret
outsl
aad
fidivrl
outsl
dec
push
pop
cmc
mov
pop
insb
pop
es
addb
mov
jmp
loope
sbb
dec
cmpsb
lahf
xchg
mov
fmuls
pop
mov
hlt
loopne
mov
faddl
add
mov
add
mov
sub
mov
int
inc
xchg
and
pop
dec
pusha
add
pop
lods
mov
sbb
ss
in
jns
sahf
sub
cmp
gs
mov
mov
mov
fldt
ja
ds
inc
xchg
add
loope
add
mov
cli
cwtl
push
out
lods
cmp
add
pop
push
or
cmp
xlat
cwtl
sub
sub
add
add
mov
sub
push
add
add
mov
add
ss
in
stc
inc
insl
js
popf
cmpsl
cmpsb
imul
and
add
pop
pop
and
mov
push
dec
push
pop
push
in
jg
imull
push
add
xchg
add
mov
out
or
add
push
add
into
mov
mov
pushf
sub
call
int
pop
dec
pop
incb
pop
sbb
mov
cs
xlat
pop
xor
add
cmp
xor
mov
sbb
inc
or
scas
xchg
adc
loopne
mov
lods
mov
mov
sti
mov
add
test
mov
mov
mov
aad
add
mov
lods
xor
mov
jecxz
decb
bound
mov
les
rolb
mov
jecxz
push
cmp
or
addr16
pop
mov
bound
mov
fimuls
stos
enter
push
mov
sub
push
push
push
push
push
push
cld
call
sub
es
movzbl
cmp
ss
push
push
call
mov
cmp
je
es
lea
cs
sub
mov
push
es
call
test
jne
jmp
leave
push
es
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
nop
lea
lea
sub
add
mov
sub
sub
push
pop
push
je
jmp
add
add
mov
and
jp
aam
dec
mov
and
mov
mov
in
jbe
jp
pop
cmp
mov
leave
bound
mov
clc
aas
mov
or
cld
adc
pop
mov
mov
addb
or
rolb
mov
mov
add
add
out
pop
mov
mov
xchg
add
call
popa
or
mov
jp
out
out
xor
mov
aam
xchg
lahf
add
mov
mov
mov
mov
outsb
lea
sbb
xor
mov
xor
stos
cwtl
jmp
addb
sub
add
fiaddl
ficomps
loopne
mov
jmp
sbb
xchg
sbb
mov
add
push
sbb
sbb
inc
add
xchg
mov
add
mov
out
imul
xchg
cmp
fsubs
add
jnp
xchg
mov
mov
mov
cmpsl
add
andps
xor
repz
mov
sbb
adc
fiaddl
test
cld
fcmove
rolb
mov
lea
mov
add
mov
leave
mov
mov
addb
nop
add
jne
mov
mov
pop
mov
mov
fiadds
mov
mov
rolb
in
fists
mov
sbb
scas
or
mov
mov
fcmovb
stos
lods
xchg
jecxz
xchg
cmp
add
mov
mov
add
mov
mov
ds
rol
or
popa
sub
scas
cld
into
push
add
aas
xor
repz
dec
addb
add
cmp
mov
add
sbb
mov
jmp
adc
frstor
mov
pop
adcl
lods
and
inc
ficoml
mov
outsl
xor
mov
not
aam
inc
pop
adc
aas
nop
add
push
das
xchg
fwait
inc
sarl
xchg
aaa
js
pop
push
xorl
mov
sbb
mov
xchg
pop
sub
gs
xor
dec
repnz
fisubl
jne
xor
mov
add
xlat
dec
or
adc
leave
scas
insb
dec
mov
imul
xor
mov
jnp
pop
jecxz
add
dec
rolb
mov
xor
mov
jb
mov
rolb
mov
nop
add
pop
mov
addr16
add
stc
add
xor
mov
add
mov
into
dec
mov
call
mov
sbb
jbe
pop
or
dec
insl
mov
mov
mov
cltd
rcll
mov
xor
mov
pop
mov
add
jns
das
int
push
lods
add
lock
mov
add
popa
pushf
ret
repnz
cmp
xchg
xchg
es
mov
sub
inc
push
add
jge
push
xor
add
cld
dec
addb
jbe
nop
add
adc
inc
dec
xchg
add
jmp
call
add
mov
mov
push
push
ja
sbb
lock
mov
add
cmc
xchg
mov
lret
sub
mov
addb
ja
dec
ja
add
inc
add
add
mov
lods
fidivrs
add
mov
pop
pop
icebp
xchg
jecxz
jbe
scas
aam
je
fmulp
testl
mov
mov
sub
lock
mov
iret
add
push
mov
negl
sbb
ja
test
repz
or
pop
addb
xchg
lret
mov
add
arpl
out
xor
mov
jo
mov
iret
xchg
add
sub
int
push
push
add
add
lds
adc
and
ja
aad
cs
enter
mov
cmpsb
mov
xlat
jnp
add
mov
hlt
fsubl
jmp
mov
or
add
mov
sbb
adc
inc
add
mov
jmp
mov
mov
mov
adc
dec
rolb
jg
pop
inc
add
popf
xchg
add
enter
add
sbb
mov
cmpsl
int3
js
inc
cmp
lahf
mov
add
xor
mov
mov
add
and
mov
add
in
add
add
sbb
jne
int
or
sbb
add
sti
incl
std
movsb
sub
add
mov
mov
adc
add
add
mov
pop
sub
xor
mov
mov
pop
mov
imul
cmp
scas
ret
addb
inc
mov
daa
add
push
pusha
add
add
xchg
les
or
outsb
cmpsb
cli
sub
xor
mov
mov
mov
pop
xchg
rolb
mov
lock
add
adc
add
jne
cmp
addr16
or
mov
jmp
mov
add
mov
add
aaa
cwtl
out
fcmovu
pop
lea
pusha
add
sti
lods
push
inc
xlat
pop
bound
mov
imul
icebp
mov
xor
mov
sbb
shrl
add
ret
mov
mov
mov
add
inc
add
add
mov
stos
adc
xor
adc
xlat
inc
add
mov
jmp
pop
sbb
xchg
add
pusha
add
popa
inc
add
add
repz
inc
ds
imull
sbb
loop
mov
sbb
lret
adc
cli
jne
push
xchg
inc
add
sbb
or
jp
fldl
loope
inc
add
and
lcall
mov
in
jbe
out
stos
mov
xor
mov
into
out
xor
cld
mov
mov
fwait
xor
mov
addb
dec
adc
jae
arpl
mov
mov
dec
add
mov
icebp
push
inc
pop
dec
cmp
xchg
cmpsl
xlat
pop
pop
cmp
mov
add
mov
int
cmpl
jno
movsl
out
ljmp
xlat
stos
repnz
imul
mov
cmp
fisubs
mov
mov
mov
test
mov
fistpll
mov
cwtl
aad
add
mov
cmp
mov
mov
mov
add
mov
fiaddl
aad
fwait
mov
jg
testl
ret
arpl
add
mov
pop
xor
pop
shll
stc
jne
stc
jmp
jecxz
add
in
int3
lds
aas
test
add
add
mov
add
mov
and
add
popa
inc
add
movsb
jo
mov
sbb
lods
dec
stc
nop
add
imul
dec
in
mov
mov
add
adc
aad
pop
pop
jnp
into
mov
ljmp
mov
pop
xchg
sbb
mov
mov
pop
mov
and
add
add
ret
into
sub
rolb
mov
mov
cmp
fsts
mov
add
inc
ja
sahf
dec
push
test
jg
fiaddl
std
cld
inc
xor
jne
add
add
xlat
sbb
mov
push
add
add
imul
mov
nop
add
loopne
mov
and
xchg
mov
cltd
in
adc
mov
mov
in
dec
mov
add
push
lods
insl
inc
cmp
outsb
push
pop
mov
xchg
add
mov
leave
insl
movsl
push
repz
cmc
and
mov
out
inc
pop
mov
mov
add
mov
cld
test
adc
mov
add
mov
add
fstp
mov
mov
jno
jae
daa
inc
add
pop
xchg
ljmp
adc
roll
add
loopne
mov
xor
mov
fadds
mov
pop
dec
nop
add
xor
mov
popa
into
fcomps
lahf
daa
in
lret
jg
sbb
push
addb
mov
mov
jne
or
into
mov
or
outsl
js
sti
push
xor
gs
rolb
mov
xor
mov
inc
add
repz
test
jge
mov
mov
push
mov
aam
pop
or
mov
ret
aas
mov
je
jl
fisttpll
movsb
hlt
and
mov
mov
int3
iret
or
add
lods
jp
add
fldenv
sarl
rolb
mov
push
add
fldt
adc
cmp
out
scas
rolb
mov
add
cmp
add
mov
repnz
add
lcall
xlat
ljmp
and
clc
lahf
out
insb
inc
add
xchg
mov
cmp
mov
ficompl
xchg
mov
jmp
add
add
mov
into
scas
lods
pop
cli
adc
dec
rep
pop
add
add
lods
pop
out
inc
cmp
aam
push
cmp
xor
mov
mov
sbb
push
adc
mov
leave
or
daa
ret
sbb
ja
loope
ljmp
clc
xchg
mov
sbb
add
ret
lds
adc
aam
in
ret
mov
inc
scas
xlat
pop
mov
mov
mov
add
add
fcmovnbe
add
xor
mov
mov
xor
mov
incb
mov
inc
push
ss
mov
jb
mov
ret
imul
lods
inc
clc
adc
jg
mov
sti
mov
add
adcl
add
scas
pop
push
add
fs
xor
mov
loop
mov
xlat
xchg
lea
jg
pop
dec
bound
mov
sub
add
test
out
cmp
mov
lea
ret
add
test
lods
push
xchg
adc
sbb
andl
mov
dec
daa
lds
push
enter
sbb
test
add
sbb
lods
inc
add
mov
mov
rolb
mov
psubq
arpl
add
adc
jmp
fadd
loopne
mov
sbb
cmp
icebp
dec
jge
inc
and
add
mov
stc
sub
mov
icebp
ja
add
lret
sbb
add
pop
xor
mov
pop
les
dec
adc
jg
mov
fldt
aas
pop
sahf
lods
jg
or
adc
sarl
ret
ret
adc
das
mov
imul
stos
cs
xlat
fcmovnbe
or
add
mov
popf
mov
in
adc
mov
scas
int
insl
jg
dec
sub
cmp
leave
inc
fisttpl
clc
jp
aas
adc
movsl
inc
sub
out
cli
dec
push
outsb
jno
mov
jns
cli
jmp
xor
cmp
add
inc
add
cli
fnsave
icebp
mov
add
addb
cmp
add
stos
sub
xchg
push
lods
push
rolb
mov
popa
imul
cwtl
adc
mov
push
js
jnp
add
mov
add
xchg
jecxz
stc
rolb
leave
or
addl
sarl
inc
mov
lahf
lock
in
stc
test
or
jnp
sbb
adc
mov
jl
add
inc
mov
jl
fildl
mov
daa
out
js
lret
xchg
push
out
jge
inc
push
jmp
and
mov
xchg
adc
ret
or
push
stc
xchg
add
mov
xchg
add
in
or
add
in
addl
add
in
mov
lea
cmp
scas
mov
add
bound
mov
or
cltd
mov
andl
cmpsl
push
lods
pusha
add
cmp
out
std
push
add
int
sbb
push
xor
adc
mov
or
inc
add
insb
movsl
fdivrl
test
and
jae
jae
rolb
rcll
in
test
inc
testl
mov
mov
mov
mov
mov
mov
sahf
dec
into
add
mov
mov
mov
scas
int3
and
mov
jmp
mov
push
add
mov
pop
xchg
ret
fiadds
mov
test
mov
add
add
sti
push
gs
das
cmp
cmp
das
imul
sub
les
mov
mov
dec
cmc
mov
add
mov
insb
mov
sti
jg
fcmovbe
add
adc
mov
insl
scas
into
bound
mov
xor
ljmp
addl
rorl
add
push
add
add
stos
adc
mov
sub
add
inc
add
icebp
xlat
mov
scas
xor
rcll
loopne
mov
leave
es
jp
push
into
in
test
xor
add
mov
and
aas
adc
mov
mov
mov
pop
popf
fisubrs
mov
fptan
add
mov
add
add
add
cmp
mull
mov
dec
sub
add
mov
add
gs
xchg
adc
mov
add
add
mov
rolb
mov
mov
mov
ja
jno
mov
ljmp
fsubs
inc
mov
cltd
push
sub
add
addb
int3
lods
jo
mov
movsl
sbb
inc
add
mov
mov
lcall
sahf
movsb
xchg
int3
push
stos
js
jle
stos
xchg
test
test
add
cwtl
jns
call
scas
lahf
add
mov
jae
add
jbe
add
jno
xchg
jno
int
popf
pop
mov
add
neg
jb
mov
dec
rolb
mov
idivb
jns
and
out
pop
sub
cmc
adc
fsubr
fwait
adc
test
add
mov
fisubs
add
push
cltd
pop
lcall
aas
rcrl
jno
ds
add
aaa
sbb
mov
int3
xchg
setne
sub
decl
mov
in
mov
outsb
in
mov
xchg
jo
mov
lret
mov
mov
test
mov
aaa
xor
inc
pop
sub
add
mov
in
xor
mov
fildl
mov
xchg
jo
mov
dec
or
popa
aaa
xchg
stos
out
inc
add
stc
insb
xor
mov
xor
xor
outsb
mov
es
add
stos
jmp
nop
add
xor
add
pop
in
mov
in
jmp
test
adc
and
imull
sahf
int3
into
xchg
loope
into
dec
jl
adc
fs
enter
lods
shll
mov
sbb
mov
mov
loope
mov
add
pop
fisttpl
jl
sbb
js
ljmp
inc
jae
mov
sub
stos
mov
sti
jg
push
sbb
add
out
int
sub
int
js
loope
cmpsl
xchg
add
lods
and
add
ds
ljmp
and
jb
mov
pop
add
mov
add
lahf
stc
jmp
test
mov
dec
cmpsl
nop
add
pop
ret
mov
cmpsb
dec
or
add
xchg
add
or
cwtl
lods
mov
jle
add
inc
fisttpll
adc
mov
stos
mov
iret
push
int3
add
mov
negl
cld
pop
int3
or
dec
xlat
arpl
dec
xchg
mov
mov
push
adc
scas
iret
in
fcmovbe
lods
pop
xor
mov
decl
push
add
cmp
jl
js
mov
add
inc
sub
add
ret
jecxz
imul
loop
mov
fcmovbe
mov
xchg
sub
add
je
and
mov
mov
add
pushf
int3
adc
lods
imul
mov
into
aad
cli
push
add
lock
mov
xchg
stc
xchg
mov
add
data16
mov
out
add
mov
add
add
add
push
jg
in
outsb
jg
adc
push
mov
stos
movsb
pop
dec
sbb
mov
cmp
xor
mov
mov
rolb
mov
mov
insl
mov
loope
push
adc
mov
add
mov
dec
aaa
dec
mov
fdivr
xchg
mov
xor
mov
cwtl
mov
dec
aaa
stos
icebp
mov
lahf
jg
mov
mov
mov
rolb
inc
outsb
mov
mov
sub
flds
add
pop
and
or
stc
mov
add
mov
lahf
rolb
mov
add
and
add
mov
add
adc
in
gs
in
rolb
sub
and
mov
jge
dec
dec
arpl
rolb
add
mov
iret
xor
sub
mov
leave
pop
out
in
adc
jmp
sbb
rolb
mov
xchg
push
int
addr16
test
idivl
sti
cmc
scas
cmp
or
and
rolb
out
dec
xchg
add
mov
fsqrt
sub
ja
fisttps
loope
lahf
add
nop
add
mov
pushf
inc
repz
push
inc
arpl
push
mov
dec
xchg
loope
outsl
sarl
add
mov
sbb
repnz
add
mov
and
ss
dec
xchg
add
or
sahf
shll
mov
push
sbb
mov
push
cld
sbb
mov
mov
and
mov
pop
outsl
es
dec
pop
roll
add
fidivrs
or
mov
or
add
pop
xchg
add
jb
mov
jo
mov
mov
fsubrp
adc
mov
mov
lea
lahf
and
mov
inc
adc
adc
sub
jne
mov
xor
sbb
pop
emms
mov
cli
call
cli
jg
push
add
pop
push
add
addb
addb
iret
outsb
mov
mov
aas
push
add
loope
cmp
cmp
push
and
pop
cmp
add
add
mov
iret
ljmp
jb
mov
in
jmp
test
pop
inc
add
pusha
add
cwtl
lods
stos
mov
cmp
test
mov
push
inc
mov
mov
add
sbb
mov
mov
jo
mov
xor
mov
int
add
hlt
and
popf
xchg
call
add
mov
jge
stos
push
xchg
stos
push
clc
out
mov
sub
add
add
addb
push
add
add
add
aaa
enter
aam
jle
cmp
aaa
lea
add
mov
pop
movsl
loop
mov
fcompl
mov
sbb
mov
pop
mov
je
xchg
lcall
mov
daa
mov
or
push
add
mov
jecxz
add
enter
iret
adc
ret
rolb
mov
bound
mov
dec
pop
mov
inc
sub
call
add
mov
mov
fcoms
js
sub
sarl
add
add
jge
insb
xchg
xchg
outsb
negl
pop
push
add
mov
lahf
jl
or
sub
hlt
pop
or
sbb
add
mov
movsb
mov
hlt
out
add
inc
nop
add
mov
pop
addl
repz
cltd
xor
mov
adc
jl
iret
and
mov
lock
or
mov
int
mov
pop
inc
sub
popf
jbe
jnp
addr16
mov
xor
mov
or
jg
sub
in
mov
mov
add
mov
mov
add
mov
mov
sub
mov
add
add
xchg
pushf
or
or
add
sbb
dec
mov
mov
movsl
inc
jecxz
add
mov
and
inc
aam
pop
movsb
popa
fsubp
sub
incb
mov
sub
and
mov
sub
add
inc
add
std
iret
add
mov
cmc
mov
in
or
lret
inc
lock
les
test
popa
ds
push
sub
or
jns
xchg
add
cmp
push
or
aas
int
scas
sarl
add
mov
hlt
in
inc
outsl
xchg
in
addb
dec
out
mov
cmpsl
test
add
mov
les
dec
lds
add
fbstp
add
popa
and
add
mov
mov
out
repz
push
dec
es
add
mov
outsl
pop
imul
inc
clc
std
ss
dec
adc
and
lret
xchg
or
ljmp
cmpsl
and
mov
sub
mov
test
lcall
cmp
movsb
push
jnp
out
sub
mov
stos
cltd
movsl
mov
popa
insb
popf
sti
addr16
jne
leave
lock
add
test
rcrl
xchg
add
sbb
sbb
sbb
push
mov
mov
lods
sub
and
pop
outsl
fdivr
rolb
mov
rolb
mov
imulb
dec
xchg
add
cs
jne
sub
pop
rolb
sbb
or
jns
push
add
loopne
mov
sub
mov
cmp
add
jbe
popf
and
mov
jnp
mov
push
adc
gs
add
add
ds
add
xchg
adc
mov
push
nop
add
mov
jg
out
scas
fs
add
ja
cld
or
dec
roll
or
push
add
js
mov
xor
fisttps
je
add
cltd
inc
aam
adc
sbb
in
lret
mov
in
scas
stc
popa
scas
hlt
xchg
loopne
mov
mov
test
add
mov
mov
add
add
add
insb
fstl
mov
sub
add
xor
xchg
add
adc
mov
mov
jb
mov
in
push
push
cmc
or
outsl
dec
lods
xor
sub
testl
sbb
add
sub
push
lahf
ja
add
mov
mov
add
mov
push
dec
insl
dec
orl
xchg
dec
or
mov
add
xchg
mov
fildll
push
fimull
mov
sub
pop
cmp
pop
sbb
fsubrp
clc
sbb
push
lods
loope
add
es
mov
mov
leave
mov
mov
aas
inc
popa
cwtl
or
cmp
push
mov
add
mov
mov
mov
inc
mov
mov
pusha
add
or
mov
sahf
pop
sub
add
jp
mov
out
sbb
push
add
mov
ret
mov
mov
mov
inc
dec
aaa
push
jmp
scas
cmc
cwtl
xchg
adc
dec
add
loope
in
lcall
mov
jne
call
sbb
add
mov
in
push
int3
xor
call
orl
add
fnstenv
mov
ret
xor
mov
loopne
mov
sbb
rolb
mov
and
mov
loope
cltd
shll
sub
movsb
xchg
adc
faddp
test
mov
add
mov
xor
mov
ret
inc
sub
mov
mov
cltd
dec
or
pop
test
sahf
mov
jb
mov
mov
das
or
les
add
xor
mov
add
mov
dec
xchg
stc
dec
mov
loope
pop
xchg
add
mov
pop
and
test
in
sbb
cmc
dec
bound
mov
sti
loopne
mov
arpl
enter
repnz
mov
les
cmpsb
jg
cli
clc
ror
mov
lock
into
pop
div
mov
mov
loopne
mov
mov
sbb
add
xchg
sarl
fsts
add
in
pop
add
in
jb
mov
xchg
call
push
pop
jbe
mov
std
popa
fildl
lea
xor
mov
add
cld
add
add
inc
ss
add
rolb
mov
push
movsl
mov
add
mov
out
cmp
add
fwait
pusha
add
add
inc
sbb
or
add
scas
int
mov
repz
mov
and
mov
int
add
inc
add
mov
fildl
int3
hlt
cmc
test
dec
pop
xchg
rolb
mov
dec
push
or
xchg
cmp
inc
add
pushf
mov
add
popf
fwait
aaa
mov
add
cs
add
cld
sub
inc
mov
jnp
xor
push
push
dec
sbb
loopne
mov
rolb
mov
cltd
addr16
add
std
roll
sahf
or
cmp
add
jecxz
or
add
adc
mov
push
shll
mov
sub
repz
insl
adc
addb
or
add
mov
xor
addb
arpl
pushf
xchg
jmp
or
jne
add
mov
arpl
or
rcll
add
mov
mov
imul
push
in
rorl
mov
mov
xlat
mov
into
loopne
mov
or
es
in
int
cld
adc
adc
daa
into
adc
cmp
push
outsb
xor
int3
loop
mov
loope
add
mov
or
add
add
scas
insb
jmp
and
insb
and
fcoml
add
xor
add
adc
mov
gs
xor
xchg
sub
leave
sahf
mov
mov
test
mov
mov
and
dec
addb
add
mov
lock
fcomip
fwait
jmp
add
fucompp
sahf
push
ret
sbb
clc
sub
add
add
xchg
xor
dec
push
add
stc
dec
lret
iret
sbb
push
stos
xchg
out
add
rolb
mov
pop
xchg
or
xor
std
add
mov
shrl
mov
push
or
cli
loopne
mov
imul
fldln2
xor
mov
sahf
mov
add
mov
aas
clc
pop
pop
push
pop
inc
push
stos
movsb
jae
sub
mov
pop
bound
mov
repnz
sbb
xlat
dec
lret
dec
and
mov
jno
pop
rcrl
aas
inc
lret
mov
dec
and
add
pop
cmc
mov
mov
add
mov
mov
rolb
mov
xor
int
and
mov
insb
movsb
repnz
imul
pop
mov
cmp
cmp
lds
add
push
jo
mov
out
mov
arpl
add
add
mov
push
cmp
xor
out
loope
negb
test
cltd
and
imul
adc
aam
dec
fisubs
pop
fsubr
inc
out
pop
mov
mov
add
mov
or
add
add
pop
mov
sbb
mov
and
nop
add
xor
gs
rolb
cld
repnz
ja
xlat
mov
push
sahf
je
pop
pmullw
movsl
adc
pop
jge
sub
jecxz
add
gs
mov
add
add
clc
jb
mov
add
frstor
cmc
mov
popf
push
mov
add
daa
fcomps
pop
in
mov
mov
fwait
mov
mov
or
add
mov
mov
jne
jns
xlat
adc
mov
add
push
jns,pn
pop
adc
jo
mov
pop
rolb
mov
cld
push
xchg
add
mov
add
jo
mov
or
push
add
dec
jle
adc
add
jnp
fwait
add
cmp
out
in
xor
add
aad
lret
jb
mov
inc
mov
jecxz
ret
mov
mov
push
add
rolb
mov
mov
cmp
mov
pop
out
add
jb
mov
loopne
mov
testl
mov
lock
push
sub
and
or
sub
outsl
mov
addb
scas
pop
insl
pop
notb
cltd
orl
subl
iret
gs
mov
insb
in
test
mov
enter
adc
arpl
icebp
jbe
jbe
pushl
add
mov
xchg
cld
jnp
test
jmp
js
xchg
inc
sub
inc
mov
mov
inc
add
add
cmpsb
push
pushf
dec
in
dec
adc
mov
repz
push
add
es
sub
test
addb
adc
mov
dec
ja
rcrl
popf
sahf
xchg
mov
xor
mov
jno
fs
ds
add
sub
jmp
mov
add
vphaddubq
mov
xchg
je
or
mov
mov
add
mov
lret
or
daa
jne
pop
scas
pop
loope
lods
xchg
push
fwait
addr16
add
mov
adc
mov
imul
mov
mov
cmp
xchg
shrl
aam
into
fmull
xorl
cwtl
int3
cwtl
lcall
push
xchg
outsb
inc
or
pop
outsl
and
mov
jno
or
xor
mov
bound
mov
pop
mov
inc
cmp
jae
fwait
neg
outsl
mov
es
mov
xor
lahf
and
push
add
add
add
mov
cmpsl
cmp
push
pop
jle
les
inc
xlat
daa
and
mov
cmp
in
fcmovu
divb
sbb
cmc
fsubs
add
imul
xchg
test
add
mov
divb
jge
and
push
sarl
add
js
in
gs
jmp
ljmp
shrl
sub
mov
popa
sbb
push
and
add
cli
gs
cltd
lcall
mov
mov
xchg
pop
ret
mov
push
inc
push
push
mov
out
push
mov
idivl
push
adc
mov
add
xor
jge
pop
sbb
out
add
mov
ret
imul
fildll
add
push
ret
popl
add
mov
test
add
ret
lahf
pop
and
cli
xor
idiv
nop
add
and
es
jle
add
mov
not
add
pop
mov
add
das
outsl
inc
push
rolb
mov
add
arpl
jge
lods
stos
mov
test
add
data16
mov
push
add
push
lods
sub
aad
pop
imul
mov
add
push
icebp
movsb
imul
test
mov
cmp
es
add
add
leave
cmp
aam
xchg
xor
mov
mov
mov
aas
push
lods
jl
xchg
iret
mov
test
mov
add
add
xor
push
imul
adcl
inc
add
lock
cmpsl
jns
add
add
stos
lods
sbb
jno,pn
add
add
fs
mov
cmp
rorl
xor
lock
jecxz
xchg
adc
sub
cmp
add
leave
push
adc
mov
mov
pop
dec
xchg
fldcw
aam
lret
jg
fsubrl
les
xor
sbb
dec
jp
sub
test
push
dec
dec
lods
mov
add
int
add
fnstenv
add
add
mov
add
mov
setge
or
jmp
or
ret
sahf
lcall
xchg
enter
mov
mov
iret
jmp
dec
mov
add
mov
ret
xchg
jae
mov
outsb
xlat
divb
xchg
insl
mov
add
push
add
or
imul
cmp
add
enter
fdivl
pushf
arpl
mov
mov
scas
ss
clc
cltd
inc
add
dec
jecxz
repz
in
add
mov
fs
mov
mov
test
xchg
add
add
add
mov
faddl
mov
sbb
xchg
xchg
addb
and
push
mov
es
cmpsl
jo
mov
mov
lock
fs
sbb
pop
lret
dec
inc
add
add
jge
stos
xchg
mov
cs
aas
xor
mov
mov
cmpl
push
or
inc
add
mov
mov
add
jg
mov
mov
mov
mov
xchg
in
repnz
add
add
inc
ret
negb
jno
mov
fadds
je
repnz
mov
nop
add
jo
mov
je
add
dec
iret
xor
pop
movsb
mov
mov
rolb
mov
sbb
mov
push
jp
add
xorl
xchg
jo
mov
mov
test
add
xchg
imul
push
add
mov
gs
add
add
test
rolb
mov
sbb
into
xlat
repz
out
sbb
add
or
lock
sub
mov
add
cmp
shll
psubusb
bound
mov
out
andl
mov
jo
mov
add
adc
add
inc
xlat
inc
into
push
xchg
xchg
xchg
mov
outsb
jae
ret
icebp
inc
add
push
add
push
pop
mov
scas
ss
test
adc
cmp
movsb
add
stos
in
dec
sub
inc
lret
mov
dec
ljmp
xchg
adcl
push
push
or
add
shll
mov
sbb
repz
mov
aaa
push
icebp
add
pop
lock
ss
xor
mov
pop
popa
cmc
jno
stos
xor
inc
add
adc
mov
roll
cmp
add
add
in
push
jg
pop
mov
mov
aam
sub
dec
out
out
pusha
add
pop
adc
jmp
and
mov
mov
cmpsl
cmpsb
xor
sbb
pushf
dec
inc
incl
mov
xlat
jmp
lret
ljmp
sub
pxor
or
pop
inc
loopne
mov
mov
mov
stos
add
mov
sub
and
test
stc
sub
mov
movsb
xchg
dec
clc
mov
pop
xchg
add
shl
mov
mov
sub
add
mov
lods
aam
das
adc
rolb
mov
sahf
in
dec
imul
mov
shl
mov
cmp
in
and
orl
xor
mov
out
dec
pmullw
jp
insb
cmp
mov
adc
add
and
mov
icebp
cmpsl
pop
jg
mov
fwait
push
lock
mov
addb
jl
xchg
es
idivl
stos
inc
cmpsb
gs
jge
xchg
mov
mov
imul
test
jp
stc
es
cmc
jmp
inc
add
jg
add
lret
mov
adc
mov
add
movsl
je
int3
xor
mov
sub
insb
inc
jno
aam
rorl
push
rolb
mov
pop
jg
repnz
out
add
mov
mov
adc
mov
shll
or
out
ret
xor
add
add
jl
adc
or
xchg
ss
add
jl
add
mov
movsb
jl
popa
js
add
out
cmpsb
sti
inc
jecxz
add
xchg
divl
dec
mov
push
mov
add
mov
enter
fcmove
jg
shll
pusha
add
mov
mov
and
mov
push
shll
adc
jb
mov
or
inc
mov
mov
inc
lods
jge
test
add
mov
int3
sub
add
dec
stos
jne
or
xchg
add
ret
js
add
jae
iret
push
mov
jmp
and
mov
packssdw
xchg
pop
pushf
lcall
mov
dec
inc
and
add
push
mov
call
or
fmull
cld
jl
mov
clc
gs
in
fsubs
fs
fidivrl
add
in
push
arpl
add
jno
and
mov
aas
mov
jb
mov
add
stos
cmp
add
repnz
add
mov
add
add
push
add
testl
mov
gs
mov
sbb
add
bound
mov
sub
add
sub
in
and
jecxz
lods
mov
fldl
add
cmp
jmp
add
loopne
mov
mov
lahf
and
mov
push
jle
push
add
mov
add
dec
addr16
mov
sub
lea
mov
jb
mov
leave
adc
mov
and
xchg
sti
hlt
jecxz
stos
stos
test
nop
add
jb
mov
adc
mov
add
or
les
sbb
and
inc
inc
xchg
jl
push
xor
shl
pop
fimull
add
add
enter
jo
mov
xchg
jl
mov
push
rcrl
adc
add
sbb
cmpsl
lcall
or
inc
add
mov
addb
dec
popa
xlat
sub
in
enterw
xor
mov
or
psubsw
push
pop
sbb
loop
mov
cltd
jp
add
add
jl
pop
adcl
cld
popa
fists
mov
jno
daa
cmp
add
add
jge
cmpsb
push
fbstp
ss
add
jmp
into
scas
imul
add
jp
push
add
xchg
mov
sub
xchg
sbb
mov
mov
loop
mov
push
mov
mov
pop
pushf
movsl
fdivl
addb
mov
jge
jmp
pushf
cmp
testb
jno
add
sub
mov
ds
sbb
push
idivb
mov
and
and
inc
add
movsl
inc
add
add
lret
gs
outsb
mov
inc
add
adc
mov
aaa
out
xor
mov
add
dec
cmp
mov
in
add
and
mov
fdivr
or
ret
stc
fstp
std
jns
out
xor
mov
test
mov
testb
jo
mov
adc
das
xchg
pop
fstpl
rolb
addb
add
xchg
or
mov
cmp
pusha
add
inc
movsl
hlt
cmpsb
jge
fwait
popl
add
hlt
test
push
jg
push
push
add
ja
hlt
mov
mov
lods
out
or
mov
push
out
testl
mov
mov
outsl
out
ds
sub
add
sahf
icebp
scas
cli
add
pop
cs
add
sbb
sbb
loopne
mov
xchg
and
cmpsb
adc
inc
pop
les
out
add
test
adc
mov
shll
add
mov
ja
push
into
scas
lock
shll
mov
push
and
mov
add
push
fildll
dec
dec
push
or
sub
je
ret
sub
test
xchg
adc
jns
ret
xor
insb
sbb
hlt
dec
cmp
mov
sbb
movsl
xor
sub
pop
dec
mov
mov
add
mov
std
gs
push
jne
shll
mov
dec
dec
push
cmpsl
cmp
psrlw
push
jbe
jg
jne
dec
xchg
les
pop
fists
mov
sbb
mov
sbb
jb
mov
rolb
mov
xor
add
adc
pop
in
cltd
xor
sub
pop
pop
cmpsl
and
sbb
inc
add
mov
in
dec
popf
adc
negb
add
xchg
fisubrl
fbld
pop
mov
xor
les
dec
pop
mov
jg
das
jns
xor
mov
popf
es
mov
adc
mov
fbstp
jno
add
inc
aam
loopne
mov
adc
add
pop
mov
add
stos
jne
sahf
xchg
add
insb
rolb
test
add
insb
je
adc
add
cmp
test
fildll
stos
xor
fst
add
stos
mov
scas
ret
mov
lods
sub
pop
js
dec
cmpl
xor
mov
cmp
or
js
xor
fwait
loope
lds
sub
cmp
add
idivb
lds
cmp
loop
mov
pop
and
mov
xchg
mov
fwait
sbb
arpl
xchg
add
sbb
jno
push
add
mov
inc
mov
dec
sbb
mov
add
add
cmp
lret
xlat
and
mov
jmp
xchg
pop
test
sar
repz
seto
mov
mov
sub
insb
repz
xor
cmc
cmpsl
js
add
ss
cmp
jae
rolb
mov
mov
adc
add
add
add
add
arpl
add
scas
lcall
or
cmp
inc
xchg
push
lahf
arpl
mov
int3
mov
test
add
lahf
add
mov
add
add
movsl
jne
out
and
sub
out
add
addb
push
add
mov
push
cmpsl
lock
call
mov
jmp
pop
fsubp
add
icebp
es
ss
or
jae
mov
sbb
mov
push
rolb
mov
stc
out
test
mov
xlat
call
or
mov
mov
flds
add
jne
ja
popf
adc
jb
mov
mov
add
add
mov
mov
jle
lcall
cli
lahf
mov
add
negl
adc
mov
out
push
jno
push
ss
out
stc
cltd
mov
xor
mov
aas
mov
cmp
jecxz
add
pop
popf
pop
aas
push
scas
push
add
dec
stc
into
xchg
push
add
push
out
mov
gs
dec
popf
out
mov
xchg
add
xchg
imul
fimull
push
add
ret
arpl
insb
xchg
fdivr
xor
mov
es
cmp
mov
add
mov
pop
sub
jns
test
xor
std
or
test
orl
outsl
or
or
lods
jmp
ljmp
cwtl
repz
pop
inc
add
and
mov
dec
shrl
add
jg
push
lock
pop
push
and
mov
aam
pop
xor
mov
and
mov
pop
cmp
movsl
sub
rol
sbb
jo
mov
add
fwait
into
xchg
add
mov
xlat
in
or
xlat
sahf
ljmp
sub
mov
cld
xor
mov
add
inc
add
scas
sub
inc
movsb
sti
push
add
cmc
inc
add
inc
div
jp
add
mov
pop
mov
mov
xlat
bound
mov
add
lock
mov
cs
rolb
mov
mov
icebp
shll
es
mov
jg
nop
add
add
jmp
ss
xchg
addb
fildll
xchg
and
jne
fs
repnz
cmpsl
push
push
sub
int3
movsl
repnz
mov
add
ljmp
mov
pusha
add
sbb
and
je
and
mov
and
mov
cmp
mov
mov
add
sti
inc
cmpsb
sbb
or
jb
mov
sti
fmuls
add
mov
lods
scas
lcall
xchg
mov
cli
add
mov
xchg
roll
sub
jmp
push
int
cli
fmulp
push
psrlw
addb
es
pop
cmp
pop
sbb
sbb
movsl
sub
mov
in
int
in
mov
pusha
add
cmp
and
add
fstps
xlat
enter
iret
not
mov
pop
cmpsb
jnp
icebp
mov
loopw
mov
sbb
add
mov
cli
test
add
add
test
push
xlat
inc
movsb
out
sbb
add
in
jno
adc
adc
jge
insl
and
arpl
xor
sbb
es
add
into
leave
pop
add
add
les
add
pop
push
shll
mov
add
push
xchg
sahf
cmp
es
popf
dec
jecxz
pop
rolb
lods
mov
mov
mov
ljmp
aaa
les
add
aam
sub
pop
push
mov
sub
pop
rolb
mov
cmp
test
jo
mov
in
sbb
push
add
and
repz
add
jbe
mov
fiaddl
mov
out
mov
movsl
sbb
inc
add
icebp
cmp
adc
aam
cli
add
mov
fmuls
xchg
add
mov
addr16
jecxz
mov
popf
xchg
xor
movb
mov
dec
rolb
mov
ret
out
xchg
sbb
add
mov
xor
mov
lods
psraw
add
mov
mov
adc
stc
cmp
shll
pop
sub
add
lds
mov
addb
bound
mov
push
add
out
mov
sub
mov
inc
out
fldcw
lods
aaa
popf
dec
std
fdivl
push
sbb
jle
sbb
inc
inc
inc
xchg
rcll
and
add
add
imul
add
cmp
arpl
add
mov
mov
mov
mov
adc
mov
push
into
sub
dec
dec
pop
mov
out
add
mov
cld
pusha
add
add
out
outsl
rorl
repnz
adc
mov
subl
jne
push
add
or
push
sahf
cmp
pop
inc
inc
fsubr
cmp
rolb
mov
nop
add
jmp
mov
add
mov
mov
cmp
sahf
push
push
and
sbb
add
push
lahf
sbb
adc
mov
inc
add
lcall
stos
xchg
loope
add
das
adc
push
xor
imul
dec
movsb
popf
mov
mov
mov
mov
out
das
int
push
mov
lods
in
push
mov
add
negb
stc
pop
mov
xor
mov
dec
dec
test
clc
loop
mov
addb
je
sti
mov
add
fcoml
add
add
in
mov
ret
sbb
cld
sub
inc
call
mov
repnz
dec
repnz
pop
sbb
add
mov
mov
mov
add
mov
inc
dec
adcl
mulb
add
inc
sub
or
add
mov
lahf
aas
iret
sahf
cmpsb
cld
rolb
mov
nop
add
bound
mov
jle
stc
inc
xor
ja
jo
mov
push
idivl
or
inc
push
cmpsl
mov
test
mov
mov
nop
add
int
dec
jg
das
pop
and
and
add
mov
mov
mov
lds
sub
pop
insb
push
addb
test
add
jnp
jo
mov
jne
push
aam
aad
sahf
lds
add
add
rcrl
nop
add
pushf
inc
out
int
add
adc
iret
and
add
cpuid
add
push
imul
mov
lret
dec
xchg
int
mov
addb
movsl
cmp
mov
mov
sub
mov
cmpsb
pop
mov
mov
lret
pop
lods
pop
icebp
xchg
jno
add
and
mov
push
leave
push
sub
xor
sub
mov
add
push
add
xchg
xchg
push
mov
mov
inc
xchg
add
popf
lcall
or
add
sbbl
test
mov
mov
mov
fwait
arpl
fucom
into
xchg
and
outsb
outsb
aaa
inc
add
bound
mov
call
sub
jmp
dec
cmc
rorl
bound
mov
add
gs
out
push
mov
lret
and
push
add
mov
les
lock
mov
add
sub
test
rolb
fsubl
lahf
dec
das
cwtl
push
dec
or
push
add
xchg
out
inc
add
xchg
lods
push
add
and
stos
add
mov
pop
pop
daa
jg
ljmp
mov
mov
jne
jmp
data16
sti
xlat
jnp
sbb
into
pusha
add
jl
inc
stos
out
leave
sub
adc
out
sbb
inc
add
dec
mov
cs
push
scas
ret
test
add
add
mov
mov
mov
scas
xchg
scas
mov
mov
sub
add
sub
ss
and
add
jbe
mov
mov
sbb
test
mov
mov
jne
push
in
mov
in
or
sahf
scas
sub
jns
add
jns
add
or
jmp
add
pusha
add
or
lock
mov
fsubrp
insb
movsl
inc
cmp
add
lea
cmpl
and
mov
add
mov
cmp
inc
add
push
add
adc
jmp
push
nop
add
std
aaa
adc
jmp
mov
add
dec
fadds
fs
add
mov
leave
cmc
xor
test
sub
lock
pop
in
or
clc
mov
lea
mov
mov
or
adc
add
stos
mov
mov
jle
fdivrl
repnz
push
or
cmpsl
xor
add
jmp
lret
lods
xchg
jmp
add
add
cmp
adc
mov
mov
jl
push
xchg
pop
addb
mov
shr
aad
or
repz
cld
cmp
js
mov
je
jae
jbe
cli
dec
push
sub
xor
test
mov
or
add
daa
loop
mov
adc
adc
jg
mov
cmp
add
insl
mov
cld
les
aad
xchg
ljmp
call
add
enter
cwtl
fwait
jne
decl
add
out
out
int3
push
fisubrs
mov
xor
lds
mov
add
xor
xor
mov
add
mov
imul
std
fisubrl
mov
cmp
add
fldt
and
mov
sbb
mov
mov
add
inc
add
ja
mov
add
mov
ss
mov
iret
es
push
pop
cld
jno
ror
inc
xor
mov
dec
adc
sbb
mov
mov
sbb
xchg
xor
pop
iret
fildl
add
int
pop
sub
sbb
mov
sbb
xchg
addb
ret
jg
or
add
stos
testb
add
jmp
aas
cltd
cld
lods
dec
xor
mov
cmpsb
cli
push
inc
sbb
add
in
pop
lods
in
jns
lock
cltd
mov
xchg
out
test
sbb
add
aaa
sahf
fisttpll
cmp
out
lahf
cli
adc
mov
or
add
xchg
add
mov
xor
notb
add
jbe
arpl
and
mov
add
mov
lods
lahf
sub
sbb
sbb
aaa
push
psubq
xchg
rolb
mov
mov
repnz
and
mov
add
mov
cltd
jp
das
pop
in
pop
rolb
mov
das
or
xchg
cmpsl
cld
mov
rorl
add
add
add
clc
cltd
int
xchg
add
push
pop
ljmp
and
add
mov
scas
mov
loope
lret
test
cmpsb
sahf
mov
mov
outsl
push
outsl
lods
adc
lea
fbstp
mov
int3
pop
push
int
and
ljmp
mov
jmp
mov
add
movsb
mov
add
cs
dec
stos
pop
cwtl
call
dec
unpcklps
js
jnp
push
add
mov
movsl
xchg
push
cmpsb
push
pop
push
mov
lock
jl
mov
jnp
add
ss
mov
add
adc
mov
mov
add
mov
add
cmp
mov
repz
cmpsb
mov
adc
mov
mov
cs
jle
pop
rolb
push
rolb
mov
mov
addb
pop
sub
fdivrl
pop
dec
out
push
add
jmp
mov
mov
xor
dec
ljmp
mov
dec
push
pushf
push
je
inc
jno
pcmpgtw
mov
iret
xchg
fisubs
mov
mov
outsl
mov
add
icebp
aam
adc
mov
inc
add
movsl
push
lds
add
jnp
mov
int
callw
add
push
jmp
adc
testb
fwait
inc
pop
and
sbb
insl
pop
jns
mov
mov
loopne
mov
pop
inc
data16
mov
mov
jle
add
lahf
je
sub
pop
loop
mov
add
mov
mov
test
addb
mov
add
add
sbb
mov
jbe
loope
ret
push
add
in
es
mov
ret
lock
and
sub
pop
je
popa
jmp
jmp
and
decl
loopne
mov
sub
addb
jae
lods
pop
fisubrs
inc
repz
mov
in
lods
mov
or
pushf
xor
add
sub
add
sbb
jbe
push
mov
aas
sub
add
sub
add
add
mov
subl
pop
or
add
mov
xchg
sbb
adc
mov
xlat
jne
xchg
pop
jmp
dec
sbb
in
fwait
out
pop
mov
repz
xor
mov
pop
fwait
ror
into
les
push
cmp
cmp
add
adcl
mov
add
dec
movsl
jae
add
add
and
mov
sbb
sub
jno
xor
mov
add
adc
loope
movsb
icebp
pop
push
leave
and
mov
fsts
cwtl
adc
mov
cs
aas
and
mov
jecxz
fistps
cmp
dec
in
cmp
bound
mov
add
sbb
nop
add
adc
mov
mov
es
add
adcl
or
out
nop
add
pop
scas
out
dec
aad
fs
fnstenv
xor
mov
pop
xchg
inc
pop
mov
jge
cli
ret
add
push
xor
adcl
xlat
dec
jo
mov
scas
lcall
add
sbb
fimuls
dec
decb
rolb
xorl
add
out
mov
or
inc
sub
add
add
repnz
popa
fwait
add
mov
movb
add
movsl
ds
pop
int
jle
jg
add
mov
mov
mov
in
and
mov
int3
mov
movsl
imul
invd
dec
les
mov
ljmp
shl
pushf
bound
mov
add
gs
xor
push
das
mov
mov
loopne
mov
mov
dec
cli
fdivrs
inc
add
mov
mov
jno
fwait
adc
mov
cmp
add
repnz
fiaddl
push
cmpsl
lcall
dec
xchg
icebp
repnz
and
mov
add
mov
int
add
lea
mov
mov
xor
mov
add
add
mov
xor
mov
ret
push
add
add
inc
push
pop
addb
or
test
jmp
add
jp
jle
and
add
push
xor
mov
push
or
xchg
cli
mov
mov
pushf
push
dec
sub
push
add
add
sbbl
xor
mov
or
mov
and
es
or
pop
mov
out
inc
sbb
rolb
mov
push
xchg
cltd
jle
push
test
sub
mov
mov
imul
push
rolb
mov
pop
test
ret
in
xorl
mov
adc
mov
cmp
loopne
mov
add
fdivl
mov
test
mov
dec
or
repz
js
rolb
mov
in
cmp
cmpsb
loope
xlat
int3
aad
pop
pop
mov
dec
pop
sub
pop
hlt
and
push
mov
add
loop
mov
add
dec
fcomps
jl
cmp
mov
in
hlt
add
dec
jg
mov
cmp
xor
add
mov
add
movsb
push
pop
mov
arpl
sbb
add
add
mov
add
xchg
lret
sub
jo
mov
mov
mov
inc
add
inc
and
mov
add
sub
js
in
xchg
sub
xlat
jae
add
push
mov
xchg
add
pop
push
pusha
add
pop
nop
add
out
xlat
stos
call
and
mov
fcmovnbe
or
xchg
pop
add
dec
test
in
jl
dec
shll
mov
pop
addb
or
add
mov
xchg
xchg
int3
das
sub
call
add
cmpsl
std
or
pusha
add
mov
pop
icebp
sub
ljmp
dec
dec
ja
push
in
add
mov
mov
xchg
test
shrl
pop
pop
xor
mov
add
mov
das
xor
mov
clc
js
push
add
outsl
test
into
aad
xchg
add
and
dec
push
cmpsl
cmpsb
fbstp
pusha
add
rolb
mov
sub
test
mov
dec
inc
push
add
ljmp
cmp
stc
fidivl
mov
push
and
mov
xchg
add
pop
out
mov
push
sub
jmp
add
jle
loope,pt
add
popa
jl
pusha
add
pop
mov
insl
lods
repnz
inc
add
mov
xor
dec
push
push
inc
stos
cmp
jb
mov
sbb
jae
xchg
gs
mov
xchg
sub
or
repz
lcall
xor
mov
out
or
int
add
pop
push
sub
stc
cmp
mov
movsl
ja
pop
xchg
ja
add
cmp
testl
out
jo
mov
sbb
out
sub
add
adc
imul
fcomps
add
cmp
inc
xchg
add
mov
xlat
xor
mov
push
add
mov
push
scas
or
jmp
add
xor
mov
cmc
movsb
mov
scas
ds
jno
add
outsb
andl
dec
jnp
shrl
and
cmc
and
mov
imul
or
popa
adc
loop
mov
xor
jnp
popa
testb
outsb
dec
inc
fidivrs
add
add
jnp
ss
xchg
add
mov
in
cmc
stos
loop
mov
add
cmc
mov
mov
fwait
ds
aas
jl
add
shll
in
jbe
inc
enter
lcall
and
jmp
repnz
test
xorl
rolb
jae
bound
mov
xor
mov
add
mov
daa
and
mov
mov
cmpsb
mov
xchg
fcmovnb
dec
test
jno
popf
adc
mov
stc
cmpsl
int
add
add
push
or
loope
pop
rcrl
test
in
cmc
inc
add
mov
js
cmp
dec
enter
xchg
js
inc
loop
mov
in
or
add
sub
jmpw
das
pop
sub
mov
lret
push
and
mov
xor
inc
clc
mov
dec
pop
sahf
push
add
adc
mov
mov
pop
call
jmp
mov
out
rolb
mov
cmpsl
pop
pusha
add
mov
mov
pop
in
mov
mov
ds
fbld
or
lahf
icebp
jl
add
mov
mov
incb
push
fcomip
add
add
lcall
jne
addb
rorl
mov
pop
int3
test
movsb
adc
or
in
dec
and
lcall
cmp
add
stc
jl
jl
xchg
xchg
mov
jge
push
add
lahf
or
add
mov
xchg
xor
mov
lods
pop
lock
es
scas
cld
dec
pop
mov
mov
mov
cltd
mov
jp
or
mov
add
add
mov
or
mov
js
jg
pop
out
insl
add
movl
add
mov
mov
mov
mov
mov
addr16
add
adc
out
mov
push
add
mov
insl
clc
xchg
scas
sbb
ret
stos
xchg
call
mov
add
out
adc
push
movsl
fprem1
inc
jae
nop
add
push
out
add
push
jl
or
int3
inc
pop
sbb
xchg
inc
add
repnz
add
test
stos
iret
or
pop
xchg
inc
rolb
mov
pop
or
in
xor
filds
mov
pop
sbb
or
adc
add
lds
add
adc
mov
lcall
aad
fistl
in
cmp
mov
push
mov
xor
mov
jp
add
outsb
push
data16
add
mov
mov
sbb
movsl
add
mov
imul
lock
cmp
cmpsl
xchg
mov
add
test
lea
insb
lcall
add
sub
add
jne
enter
mov
add
mov
mov
mov
int3
mov
cmp
add
add
add
shr
mov
mov
xchg
add
int3
pop
dec
rolb
sbb
mov
ljmp
sarl
rcrl
mov
add
add
test
mov
inc
add
pushf
pop
mov
sub
sahf
clc
cmp
dec
call
mov
mov
mov
test
lds
add
lea
dec
jbe
loop
mov
push
enter
mov
jecxz
std
js
inc
popa
inc
movsb
inc
sub
fstl
repnz
mov
push
add
mov
add
add
cmp
dec
lahf
test
jecxz
add
mov
add
outsl
xor
mov
mov
mov
fsubp
dec
in
movsl
jle
lcall
cmp
add
xchg
add
cmp
movsl
jle
and
mov
or
add
out
jmp
addb
push
add
add
pop
data16
in
sub
pop
cmpsl
or
mov
cmp
adc
movb
mov
add
xor
adc
mov
lea
mov
add
xor
adc
mov
xor
mov
add
pusha
add
add
mov
notl
inc
xor
xchg
ffreep
das
enter
and
shll
dec
push
mov
mov
ret
mov
xchg
dec
adc
hlt
cmp
daa
js
xchg
mov
out
inc
cltd
gs
push
pop
pop
mov
dec
inc
add
outsl
mov
xchg
scas
pop
mov
mov
gs
xor
arpl
push
stos
jle
or
jbe
push
pop
mov
and
fistpll
rorl
repnz
mov
mov
cmp
xlat
je
add
outsb
fcomi
add
jno
sub
ffree
test
add
push
add
xor
inc
ret
imul
add
jl
lods
mov
sbb
xor
mov
test
pop
outsl
jle
mov
add
mov
mov
adc
push
cmp
mov
add
add
arpl
in
imul
addb
ret
cmp
add
adc
mov
add
mov
ss
es
sub
fists
cmpsb
js
add
notb
pop
inc
add
add
cmp
lods
push
das
mov
sbb
imul
stos
int3
data16
mov
loope
js
sti
cmp
or
loop
mov
mov
jne,pt
xchg
leave
mov
add
mov
mov
pop
xchg
int3
pop
ret
and
mov
sbb
mov
cmp
jbe
push
ljmp
push
mov
mov
mov
inc
and
inc
jmp
dec
xor
mov
mov
mov
add
xor
mov
rolb
mov
pop
mov
jae
inc
sbb
lret
mov
pop
mov
cmpsl
dec
cmc
aas
sbb
testl
push
cltd
pop
cli
pop
inc
fsubrl
scas
sti
stos
lods
loopne
mov
mov
mov
pop
fstpl
addb
je
stos
adc
mov
dec
adc
mov
js
add
pop
jmp
push
mov
jle
mov
mov
stos
push
adc
mov
inc
clc
rcrl
daa
xchg
les
adc
mov
fwait
insl
or
push
aas
cmp
add
sub
and
iret
add
bound
mov
push
aaa
inc
adc
add
xchg
cmp
add
add
loope
popf
jecxz
pop
dec
call
pop
add
sbb
mov
test
ljmp
pop
gs
pushf
cmp
adc
dec
and
mov
fdiv
std
fisttpl
push
aaa
sbb
xchg
sbb
jl
mull
mov
fwait
stc
mov
std
cmpsl
test
rolb
mov
push
push
je
test
add
pop
hlt
daa
cmp
adc
popf
pop
lcall
stos
movsl
xchg
in
out
or
dec
mov
add
mov
cmc
ljmp
push
out
out
jae
push
pop
push
icebp
adc
mov
jnp
and
or
mov
push
movsb
inc
dec
ss
lahf
es
pop
pop
movsl
ss
dec
jmp
test
add
mov
xchg
out
jae
faddl
mov
in
lcall
pop
jp
add
je
popf
loopne
mov
xor
mov
and
mov
cwtl
fdivr
loopne
mov
mov
bound
mov
push
sbb
inc
insl
rolb
mov
js
lea
and
dec
cmpsl
outsl
cmpsb
js
add
mov
sub
push
icebp
sub
outsl
xlat
stos
and
mov
push
xor
jno
stc
adc
mov
mov
push
add
sar
lcall
pop
ljmp
mov
mov
out
pop
cmp
add
pop
push
or
mov
pop
rolb
mov
mov
fdivrl
push
sahf
fsubs
sub
add
mov
or
mov
lret
std
cmpsl
or
add
push
adc
mov
ret
test
add
add
jge
add
popf
push
push
add
xchg
popl
mov
clc
mov
add
iret
lods
jns
jle
push
xchg
sarl
push
scas
js
add
test
mov
mov
cmpsl
movd
mov
add
ss
mov
add
mov
rolb
mov
xor
dec
rol
lods
sbb
inc
and
add
lods
cmc
push
test
fwait
scas
div
add
dec
rolb
mov
and
mov
xchg
mov
inc
sub
mov
js
neg
pop
bound
mov
neg
gs
gs
mov
movsl
andl
lds
rolb
mov
cmc
mov
mov
stos
and
cli
hlt
adc
mov
lock
ja
xchg
sub
ret
push
stc
repz
loopne
mov
repz
pop
mov
adc
mov
addb
inc
add
mov
popa
fistpl
jne
cld
out
fsubp
add
lds
lret
xlat
jae
add
or
mov
mov
pushf
xor
mov
xchg
test
ret
adc
mov
je
jbe
mov
shl
add
add
ret
ja
ret
adc
pushf
js
pop
popa
mull
pop
ret
in
push
shl
mov
mov
fdivp
push
stc
sbb
jnp
xor
cmpsb
loopne
mov
out
sti
pop
pop
pop
outsb
cltd
enter
cmpl
movsb
rolb
mov
cltd
sub
addb
imul
mov
mov
mov
inc
cmpsb
stc
xchg
add
mov
add
mov
in
popf
fiadds
in
or
mov
push
mov
xor
mov
add
add
inc
jo
mov
push
mov
jnp
add
arpl
in
aaa
outsl
sbb
or
or
mov
popa
push
add
mov
mov
push
add
rolb
das
jns
cmpsb
add
mov
movb
out
aam
dec
lds
sub
mov
xchg
int3
xchg
adc
int
mov
mov
jmp
lret
dec
lods
dec
and
lret
cmc
dec
in
leave
scas
lret
leave
js
dec
dec
xor
mov
adc
das
stc
inc
subl
jne
mov
jge
xor
mov
into
bound
mov
mov
xor
movb
mov
mov
adc
sahf
les
or
mov
mov
dec
hlt
lea
repz
add
mov
sub
add
inc
add
xchg
pop
push
add
ja
stos
mov
ds
in
add
jne
sub
xlat
ret
lods
rolb
mov
add
mov
mov
aas
repnz
incl
cli
cltd
xlat
lods
dec
jae
jae
add
out
lods
jbe
in
mov
lret
or
mov
mov
ret
lret
sbb
jge
or
jb
mov
test
dec
push
inc
lods
mov
push
stc
or
jp
add
add
mov
mov
mov
mov
dec
cld
ja
push
or
mov
add
mov
into
adc
mov
jne
loopne
mov
sub
jge
cwtl
in
lods
push
out
sti
jle
sbb
dec
movsb
loope
push
sbb
sbb
mov
in
rolb
mov
push
mov
jp
adc
stc
test
mov
lea
sbb
dec
imul
pop
leave
adc
lods
int3
cwtl
adc
mov
or
sahf
repz
inc
aas
daa
js
dec
push
dec
nop
add
add
mov
ret
cmp
loop
mov
push
es
nop
add
mov
mov
sub
add
imul
sbb
lea
sub
push
lods
push
xor
mov
lahf
std
add
add
add
cmp
into
xchg
sbbl
xchg
bound
mov
jbe
jne,pt
popa
cmpsb
scas
cmpsb
inc
jno
cmp
jp
out
sub
cmpsb
pop
mov
lods
mov
mov
nop
add
add
out
add
mov
add
mov
fistpl
xor
mov
ja
dec
fs
call
lods
add
mov
or
jle
mov
in
aam
clc
sti
xor
mov
psrlw
nop
add
xchg
add
sub
out
adc
mov
fsubs
sbb
addr16
add
add
sbb
add
and
mov
outsb
xchg
push
cmpsl
mov
mov
push
into
xchg
add
mov
enter
out
cmp
add
mov
cs
stos
push
and
add
rcrl
inc
test
inc
mov
inc
or
mov
loopne,pn
mov
dec
mov
mov
sub
shrl
add
mov
cli
stos
jb
mov
int3
ljmp
or
add
popf
movsb
xor
mov
push
jo
mov
add
add
movsl
dec
into
push
sahf
mov
mov
add
lahf
out
movsl
xor
mov
enter
add
mov
push
lcall
jge
xor
jo
mov
add
popf
addb
add
add
xchg
in
pop
stc
xchg
and
mov
pop
nop
add
mov
js
lcall
jl
into
dec
and
in
ftst
loope
fcmovne
cmp
movsb
ret
cmc
je
leave
mov
out
xor
mov
push
fmull
xlat
inc
imull
pop
and
dec
sub
dec
adc
mov
fnop
add
mov
xchg
repz
movl
xchg
push
rolb
ja
mov
add
ljmp
in
jg
add
lahf
ret
lea
inc
add
mov
add
sub
jmp
cli
stos
jbe
inc
stos
mov
in
push
fs
inc
test
and
mov
gs
in
xchg
add
inc
mov
push
dec
sbb
add
out
movsb
inc
sbb
cltd
in
ret
mov
or
mov
pushf
cwtl
rolb
mov
shrl
cld
test
ljmp
aas
lods
pop
mov
xchg
inc
ret
cld
or
dec
and
mov
add
mov
pop
add
mov
push
push
push
add
mov
ds
xor
add
xchg
jns
pushf
adc
mov
cmp
push
ret
push
in
pop
lret
mov
mov
pop
mov
fs
jno
jecxz
imul
repnz
xor
mov
add
add
ja
data16
in
mulb
add
xchg
push
and
outsl
insb
into
into
test
loop
mov
add
fisubl
mov
dec
hlt
cmp
std
mov
out
data16
mov
mulb
pmaxub
inc
bound
mov
mov
sbb
in
or
mov
in
jp
dec
nop
add
cmpsl
sub
in
fs
popf
mov
add
mov
add
and
mov
add
mov
mov
and
mov
les
adc
scas
scas
lret
fcompl
push
pop
or
add
push
aaa
mov
jecxz
fldcw
mov
mov
cli
mov
rolb
mov
add
inc
in
mov
ret
mov
xlat
je
add
in
sub
add
add
add
add
mov
fstps
in
mov
jno
xlat
xchg
add
rolb
xor
adc
aam
mov
mov
push
jp
rorl
test
mov
mov
sub
push
in
outsl
mov
hlt
push
sahf
sbb
jle
lea
push
mov
insb
addb
inc
and
fcoml
mov
mov
add
push
jno
mov
das
pop
loope
inc
add
out
into
scas
jo
mov
sbb
mov
xor
and
cmpsl
xchg
jg
pushf
and
mov
add
outsb
sbb
mov
scas
aad
push
aaa
cmp
add
daa
cli
xor
pusha
add
push
mov
pop
xor
mov
add
inc
call
ds
sub
inc
lret
mov
mov
sahf
mov
add
cmp
addb
sub
xchg
jb
mov
outsb
test
es
and
mov
jmp
sub
aas
and
jb
mov
add
aad
aam
dec
bound
mov
nop
add
dec
lfs
cld
stc
pushf
mov
mov
jmp
push
add
into
mov
mov
out
xchg
or
call
or
sysenter
jae
dec
icebp
inc
add
mov
pop
movnti
xchg
into
mov
clc
repnz
nop
cld
jae
aam
add
sbb
add
repnz
nop
cld
jae
add
int3
adc
mov
xchg
ret
push
push
sbb
cmp
testb
nop
leave
jmp
add
sbb
dec
and
scas
dec
std
xchg
clc
repnz
nop
cld
jae
add
dec
inc
lods
test
push
mov
xchg
ret
add
cmp
testb
call
clc
repnz
nop
cld
jae
add
inc
add
push
mov
xchg
ret
add
inc
inc
add
add
xor
nop
cld
jae
add
sbb
xor
nop
nop
cld
jae
dec
add
jbe
add
dec
adc
mov
call
clc
repnz
nop
cld
jae
add
out
sbb
cld
jae
add
add
test
push
mov
nop
leave
jmp
add
add
mov
pop
cmp
repnz
nop
cld
jae
add
mov
push
push
mov
xchg
ret
xor
add
add
sbb
push
mov
xchg
ret
cmp
testb
add
shr
clc
repnz
nop
cld
jae
dec
call
jnp
stos
clc
repnz
nop
cld
jae
add
add
add
dec
cmp
repnz
nop
cld
jae
data16
sbb
add
repnz
nop
cld
jae
fs
xor
mov
clc
repnz
nop
cld
jae
cmpsl
cs
insb
add
mov
jb
or
add
xchg
add
dec
jmp
cs
test
add
or
scas
add
add
push
mov
nop
leave
jmp
add
sbb
add
dec
mov
mov
sub
repnz
nop
cld
jae
add
add
nop
nop
cld
jae
add
add
dec
add
jno
add
clc
repnz
nop
cld
jae
outsb
or
sub
mov
nop
nop
cld
jae
insb
add
mov
mov
push
mov
xchg
ret
dec
add
add
push
loop
cwtl
add
clc
repnz
nop
cld
jae
add
mov
clc
repnz
nop
cld
jae
or
shl
add
mov
mov
clc
repnz
nop
cld
jae
add
push
inc
push
mov
nop
leave
jmp
gs
add
adc
mov
repnz
nop
cld
jae
inc
add
pop
add
push
repnz
add
clc
repnz
nop
cld
jae
sbb
add
add
sub
repnz
nop
cld
jae
add
das
jne
clc
repnz
nop
cld
jae
mov
test
push
mov
nop
leave
jmp
add
sbb
add
inc
add
add
add
add
out
add
push
mov
xchg
ret
testb
xor
add
repz
test
add
clc
repnz
nop
cld
jae
add
xchg
arpl
pop
clc
repnz
nop
cld
jae
or
add
xchg
inc
or
inc
or
nop
nop
cld
jae
cs
sbb
xchg
and
add
repnz
nop
cld
jae
dec
addb
testl
mov
add
cli
jecxz
jne
aam
pushl
push
mov
xchg
ret
cmpsl
sbb
pop
fistl
mov
nop
leave
jmp
dec
mov
xor
xchg
movsl
shll
add
mov
xchg
ret
add
dec
aam
fwait
push
cld
mov
clc
repnz
nop
cld
jae
add
inc
add
gs
call
push
mov
nop
leave
jmp
add
ljmp
or
nop
nop
cld
jae
add
add
inc
adc
mov
sub
clc
repnz
nop
cld
jae
insb
int3
add
arpl
pop
xchg
loop
mov
test
adc
add
in
nop
leave
jmp
data16
xchg
loope
xorl
push
mov
nop
leave
jmp
add
jbe
jmp
fs
fnclex
add
fildl
push
mov
in
movzwl
clc
repnz
nop
cld
jae
push
xor
bound
inc
add
cmp
repnz
nop
cld
jae
or
add
add
sub
clc
repnz
nop
cld
jae
sbb
ljmp
subl
push
mov
xchg
ret
cmp
add
add
out
mov
mov
nop
leave
jmp
ljmp
mov
mov
clc
repnz
nop
cld
jae
add
add
add
xor
clc
repnz
nop
cld
jae
add
and
add
clc
repnz
nop
cld
jae
add
xchg
int3
add
aam
jno
push
add
mov
nop
leave
jmp
xchg
add
dec
aam
sbb
and
repnz
nop
cld
jae
and
add
mov
nop
nop
cld
jae
sbb
add
sbb
mov
nop
leave
jmp
addr16
add
mov
push
mov
xchg
ret
add
dec
rolb
xchg
add
mov
push
mov
xchg
ret
jl
xchg
add
add
cmpsl
rcll
push
mov
nop
leave
jmp
or
cmpsl
aam
add
test
nop
nop
cld
jae
cmpsl
fildl
sti
add
push
mov
xchg
ret
add
inc
loop
add
add
movsl
clc
repnz
nop
cld
jae
scas
add
inc
jl
test
mov
nop
leave
jmp
add
jp
xchg
dec
cs
add
add
inc
add
or
add
add
ljmp
repnz
nop
cld
jae
xchg
add
and
nop
leave
jmp
mov
add
or
pop
push
add
dec
add
sbb
test
pop
xchg
into
add
add
inc
inc
mov
nop
cld
jae
push
outsb
push
fwait
gs
or
rclb
in
nop
leave
jmp
add
mov
push
add
mov
mov
clc
repnz
nop
cld
jae
push
push
lret
mov
push
mov
xchg
ret
add
inc
add
add
and
add
repnz
nop
cld
jae
add
inc
mov
add
push
mov
xchg
ret
add
outsb
mov
jg
mov
adc
repnz
nop
cld
jae
add
add
fwait
daa
mov
clc
repnz
nop
cld
jae
add
or
jp
add
dec
xor
clc
repnz
nop
cld
jae
jl
dec
add
mov
xchg
ret
cmp
jp
add
add
sub
mov
inc
add
add
or
or
mov
clc
repnz
nop
cld
jae
fildl
add
or
mov
test
add
clc
repnz
nop
cld
jae
ljmp
out
clc
clc
repnz
nop
cld
jae
int3
cmpsl
xchg
sbb
in
nop
leave
jmp
add
dec
orb
jp
inc
clc
repnz
nop
cld
jae
jbe
xchg
add
add
dec
mov
add
clc
repnz
nop
cld
jae
dec
add
inc
xor
mov
repnz
nop
cld
jae
sbb
add
dec
add
dec
clc
repnz
nop
cld
jae
testl
add
xchg
dec
mov
clc
repnz
nop
cld
jae
add
xor
xchg
add
inc
adc
mov
rol
push
mov
xchg
ret
add
add
cmpsl
xchg
sbb
mov
clc
repnz
nop
cld
jae
jp
add
cs
mov
add
add
add
add
pop
incb
xchg
arpl
or
clc
repnz
nop
cld
jae
add
add
add
add
push
mov
nop
leave
jmp
add
add
add
mov
push
push
mov
nop
leave
jmp
add
or
xor
push
mov
xchg
ret
add
ds
rolb
add
cld
or
nop
leave
jmp
addb
add
add
add
repnz
nop
cld
jae
add
dec
add
xor
mov
je
clc
repnz
nop
cld
jae
call
jne
clc
repnz
nop
cld
jae
mov
sar
nop
nop
cld
jae
add
add
add
mov
xchg
ret
cmpsl
add
add
gs
rolb
gs
mov
push
clc
repnz
nop
cld
jae
call
add
aaa
push
mov
clc
repnz
nop
cld
jae
sbb
mov
add
clc
repnz
nop
cld
jae
add
xor
mov
xchg
ret
mov
add
mov
add
clc
repnz
nop
cld
jae
add
mov
jl
out
clc
repnz
nop
cld
jae
add
add
add
ljmp
repnz
nop
cld
jae
inc
add
add
nop
cld
jae
push
fwait
add
or
xchg
xorb
push
mov
xchg
ret
add
add
add
cmp
mov
nop
leave
jmp
addb
add
add
add
nop
nop
cld
jae
add
add
add
push
add
mov
nop
leave
jmp
jp
add
xchg
add
incb
popa
repz
add
add
add
fsts
repnz
nop
cld
jae
push
xor
test
cmp
test
add
clc
repnz
nop
cld
jae
or
hlt
gs
mov
push
clc
repnz
nop
cld
jae
xor
xor
pusha
add
clc
repnz
nop
cld
jae
inc
add
push
add
clc
repnz
nop
cld
jae
xchg
add
sbb
rclb
icebp
inc
add
add
add
mov
clc
repnz
nop
cld
jae
outsb
add
mov
add
lea
cwtl
roll
xchg
ret
add
pop
add
add
fldl
add
inc
add
add
ljmp
jg
jno
clc
repnz
nop
cld
jae
add
testl
push
mov
nop
leave
jmp
aam
imulb
cmp
nop
nop
cld
jae
test
sbb
jne
clc
repnz
nop
cld
jae
xor
fwait
stos
push
mov
xchg
ret
call
xchg
dec
add
and
mov
push
nop
nop
cld
jae
testb
add
dec
cmpsl
jns
movsb
clc
repnz
nop
cld
jae
push
add
cmpsl
add
and
inc
inc
add
repnz
nop
cld
jae
add
add
pop
push
clc
repnz
nop
cld
jae
divb
add
mov
or
nop
nop
cld
jae
add
pop
xor
mov
push
mov
xchg
ret
bound
xor
add
mov
nop
leave
jmp
add
or
mov
pop
add
clc
repnz
nop
cld
jae
xor
mov
jecxz
add
imull
add
push
or
nop
leave
jmp
jbe
add
fwait
mov
nop
cld
jae
mov
add
add
mov
clc
repnz
nop
cld
jae
testb
xchg
ret
sti
push
clc
repnz
nop
cld
jae
add
add
xchg
add
insb
push
push
mov
xchg
ret
jbe
add
dec
or
bound
jg
push
mov
xchg
ret
add
fisttpl
ficoml
in
add
std
add
dec
add
inc
add
add
sbb
repnz
nop
cld
jae
sbb
add
add
mov
nop
nop
cld
jae
test
loop
sub
nop
nop
cld
jae
add
mov
add
incb
xchg
ret
add
call
add
sbb
mov
xchg
ret
push
aam
std
dec
loop
inc
test
xor
push
mov
xchg
ret
add
add
and
mov
add
scas
std
inc
add
add
add
add
mov
dec
push
clc
repnz
nop
cld
jae
add
add
testl
jp
jbe
push
mov
nop
leave
jmp
testl
mov
in
test
add
sbb
add
sbb
add
shrl
repnz
nop
cld
jae
add
add
add
jp
test
cmp
idiv
repnz
nop
cld
jae
cmpsl
add
add
add
repnz
nop
cld
jae
testb
xchg
lds
xor
mov
cmpw
jmp
add
loop
xor
mov
add
sub
repnz
nop
cld
jae
mov
add
jne
clc
repnz
nop
cld
jae
add
add
or
clc
repnz
nop
cld
jae
add
sbb
add
add
xor
add
clc
repnz
nop
cld
jae
bound
xor
mov
add
repnz
nop
cld
jae
xor
add
in
div
push
mov
nop
leave
jmp
call
add
jp
push
mov
xchg
ret
add
or
add
mov
push
mov
nop
leave
jmp
std
add
cs
push
mov
xchg
ret
add
imull
add
addb
ret
cld
cmpw
push
mov
nop
leave
jmp
add
cmpsl
push
aam
push
push
mov
nop
leave
jmp
add
add
xchg
cmp
repnz
nop
cld
jae
add
add
add
popa
add
repnz
nop
cld
jae
addb
add
popa
clc
repnz
nop
cld
jae
or
add
add
add
sbb
clc
repnz
nop
cld
jae
outsb
mov
add
gs
add
aam
dec
mulb
add
cmp
mov
cmp
push
mov
nop
leave
jmp
testb
add
xor
jmp
fucomp
loop
bound
scas
add
add
add
mov
jecxz
jle
add
out
add
add
fs
mov
clc
repnz
nop
cld
jae
add
std
mov
test
nop
cld
jae
add
add
mov
repnz
nop
cld
jae
add
ljmp
xor
add
clc
repnz
nop
cld
jae
gs
sub
nop
nop
cld
jae
add
mov
dec
add
push
clc
repnz
nop
cld
jae
add
adc
sub
clc
repnz
nop
cld
jae
add
inc
xchg
loop
push
mov
nop
leave
jmp
inc
sbbb
xchg
add
clc
repnz
nop
cld
jae
add
add
sbb
pop
testb
cmp
ret
pop
cmp
add
add
jmp
mov
xchg
ret
inc
testb
fwait
bound
push
xchg
mov
push
incl
xchg
ret
and
add
call
inc
lock
repnz
nop
cld
jae
xchg
or
add
jl
mov
clc
repnz
nop
cld
jae
add
or
aad
or
popa
add
mov
xchg
ret
or
mulb
add
add
mov
nop
leave
jmp
add
add
add
add
mov
push
mov
xchg
ret
xchg
and
add
add
ret
rolb
mov
mov
clc
repnz
nop
cld
jae
add
add
add
push
mov
xchg
ret
sbb
std
insb
add
add
add
repnz
nop
cld
jae
xor
cmpsl
std
pusha
clc
repnz
nop
cld
jae
shlb
push
add
add
xor
clc
repnz
nop
cld
jae
jp
add
in
nop
leave
jmp
fwait
mov
add
push
rcll
into
add
push
mov
xchg
ret
add
xchg
add
add
mov
push
push
mov
nop
leave
jmp
sbb
add
add
pop
clc
repnz
nop
cld
jae
or
cmpsl
rolb
mov
push
push
mov
xchg
ret
xchg
push
bound
or
shr
clc
repnz
nop
cld
jae
add
add
add
and
imul
nop
nop
cld
jae
fnstsw
fs
aas
add
clc
repnz
nop
cld
jae
insb
addr16
testb
add
mov
push
mov
xchg
ret
add
xchg
add
lret
clc
repnz
nop
cld
jae
addr16
add
add
add
mov
push
mov
nop
leave
jmp
add
add
ret
lcall
xor
fnsave
testb
push
daa
and
mov
pop
push
mov
xchg
ret
shl
xchg
add
add
data16
sub
clc
repnz
nop
cld
jae
dec
add
lahf
inc
push
mov
xchg
ret
add
ljmp
cs
clc
repnz
nop
cld
jae
add
addr16
mov
xchg
ret
add
addr16
dec
push
add
clc
repnz
nop
cld
jae
add
add
ds
clc
repnz
nop
cld
jae
div
add
push
xor
mov
push
mov
xchg
ret
add
inc
outsb
add
clc
repnz
nop
cld
jae
add
inc
add
jnp
dec
add
mov
xchg
ret
add
add
test
push
mov
xchg
ret
add
mov
add
orb
add
add
clc
repnz
nop
cld
jae
ds
test
and
add
in
nop
leave
jmp
bound
insb
inc
fstps
repnz
nop
cld
jae
add
xor
add
mov
mov
clc
repnz
nop
cld
jae
orb
cmp
nop
nop
cld
jae
sbb
mov
add
mov
repnz
nop
cld
jae
gs
fildl
add
in
nop
leave
jmp
add
and
mov
and
repnz
nop
cld
jae
scas
int3
add
and
movsb
pop
push
clc
repnz
nop
cld
jae
add
xchg
add
mov
nop
leave
jmp
and
add
cmpsl
fs
xchg
add
nop
cld
jae
jp
add
push
cmpsl
add
add
jmp
add
add
aam
cmpsl
cmpsl
xchg
add
add
mov
clc
repnz
nop
cld
jae
xchg
add
add
cs
arpl
jge
clc
repnz
nop
cld
jae
inc
fildl
add
pusha
add
mov
mov
jmp
call
xor
std
add
or
cld
jae
inc
xor
add
nop
nop
cld
jae
add
add
add
add
jo
mov
xor
push
mov
nop
leave
jmp
mov
add
mov
mul
cmpsl
xor
fldl2t
add
ljmp
scas
add
std
and
add
xchg
mulb
mov
push
mov
nop
leave
jmp
dec
or
push
pop
add
or
mov
xchg
ret
add
pop
std
dec
xor
cmp
in
push
sarb
clc
orb
incb
lock
inc
add
push
cmp
xor
mov
clc
repnz
nop
cld
jae
idivb
call
clc
repnz
nop
cld
jae
add
testl
cld
jae
add
or
add
test
jne
push
mov
nop
leave
jmp
add
add
and
dec
push
mov
nop
leave
jmp
rolb
cmp
and
add
jbe
mov
push
mov
nop
leave
jmp
or
rolb
mov
das
mov
clc
repnz
nop
cld
jae
cmp
sbb
sub
mov
nop
leave
jmp
and
xor
add
inc
add
mov
mov
nop
cld
jae
xor
add
inc
xor
mov
add
mov
nop
leave
jmp
add
xor
push
push
push
mov
xchg
ret
xchg
testl
loop
add
mov
nop
leave
jmp
cmpsl
xor
cmpsl
mov
sub
nop
cld
jae
add
cmpsl
add
add
dec
dec
pusha
clc
repnz
nop
cld
jae
sbb
and
push
mov
nop
leave
jmp
add
add
mov
mov
clc
repnz
nop
cld
jae
add
add
add
stos
jne
push
mov
nop
leave
jmp
cmpsl
cmpsl
addb
pop
clc
repnz
nop
cld
jae
add
add
add
loop
iret
je
clc
repnz
nop
cld
jae
and
add
mov
inc
icebp
mov
nop
cld
jae
add
std
push
add
cmp
push
jmp
jle
clc
repnz
nop
cld
jae
xchg
add
addr16
inc
mov
mov
push
clc
repnz
nop
cld
jae
add
int3
add
add
adc
clc
repnz
nop
cld
jae
insb
add
add
nop
nop
cld
jae
inc
add
mov
add
clc
repnz
nop
cld
jae
cmpsl
xchg
imulb
pop
arpl
push
push
mov
xchg
ret
xor
add
ret
test
dec
sub
repnz
nop
cld
jae
add
add
add
xchg
add
clc
repnz
nop
cld
jae
add
add
inc
sub
repnz
nop
cld
jae
int3
fnstsw
xor
and
add
push
mov
nop
leave
jmp
add
xchg
jl
dec
add
xlat
xor
pop
clc
repnz
nop
cld
jae
cmp
xchg
call
lret
or
inc
add
fldl
testb
rorb
in
inc
add
int3
add
add
add
aam
add
jg
push
mov
nop
leave
jmp
add
pusha
add
mov
xchg
ret
add
add
fstl
mov
nop
nop
cld
jae
dec
fwait
inc
dec
add
testb
clc
repnz
nop
cld
jae
add
xor
xor
mov
push
mov
nop
leave
jmp
add
pop
call
cmpsl
and
mov
add
push
mov
nop
leave
jmp
add
cmp
rolb
mov
clc
repnz
nop
cld
jae
jl
inc
dec
add
mov
push
mov
nop
leave
jmp
insb
add
pusha
add
clc
repnz
nop
cld
jae
add
or
push
push
mov
xchg
ret
loop
jp
insb
add
idivb
jb
mov
add
jmp
and
data16
sbb
add
xor
clc
repnz
nop
cld
jae
add
bound
nop
nop
cld
jae
add
sbb
lret
mov
xchg
ret
add
testb
mov
jl
sbb
repnz
nop
cld
jae
add
ss
movb
mov
nop
leave
jmp
cmp
add
fisttpl
add
nop
cld
jae
add
add
scas
pop
push
mov
nop
leave
jmp
add
add
loop
add
add
clc
repnz
nop
cld
jae
xchg
cmpsl
mov
add
mov
nop
leave
jmp
add
bound
jp
data16
popa
bound
mov
movzwl
clc
repnz
nop
cld
jae
add
in
nop
leave
jmp
pop
cmpsl
add
mov
rolb
mov
add
push
mov
nop
leave
jmp
push
div
sbb
clc
repnz
nop
cld
jae
sbb
or
push
add
call
clc
repnz
nop
cld
jae
add
rolb
inc
add
add
clc
repnz
nop
cld
jae
add
bound
add
add
clc
repnz
nop
cld
jae
cmpsl
add
cmp
add
inc
outsb
jb
clc
repnz
nop
cld
jae
add
push
mov
xchg
ret
and
add
not
rcrl
idiv
repnz
nop
cld
jae
or
xchg
not
clc
repnz
nop
cld
jae
add
fnstsw
push
mov
nop
leave
jmp
testb
std
jbe
shll
mov
out
xor
push
mov
xchg
ret
outsb
and
push
sbb
nop
cld
jae
or
jp
jl
dec
cmp
mov
nop
leave
jmp
or
test
jns
push
mov
xchg
ret
and
and
insw
pop
clc
repnz
nop
cld
jae
add
add
pusha
add
repnz
nop
cld
jae
add
add
cmp
add
xchg
lock
clc
repnz
nop
cld
jae
cmp
dec
add
dec
imul
cld
jae
ljmp
aam
cmpsb
push
add
adc
repnz
nop
cld
jae
sbb
int3
cmpsl
cmp
gs
repnz
nop
cld
jae
fs
call
clc
repnz
nop
cld
jae
add
repz
repnz
nop
cld
jae
call
add
fsubr
cli
or
add
repnz
nop
cld
jae
sbb
cmp
or
movsb
push
mov
xchg
ret
dec
add
add
add
add
mov
clc
repnz
nop
cld
jae
xchg
sbb
les
xchg
sldt
push
mov
nop
leave
jmp
ds
dec
dec
add
add
clc
repnz
nop
cld
jae
add
add
insb
sub
push
mov
nop
leave
jmp
add
div
inc
add
xor
repnz
nop
cld
jae
div
add
add
add
mov
clc
repnz
nop
cld
jae
cmp
and
mov
adc
repnz
nop
cld
jae
mov
add
sbbl
add
push
mov
nop
leave
jmp
neg
jp
xor
jne
clc
repnz
nop
cld
jae
xchg
and
repnz
nop
cld
jae
add
add
sbb
decb
nop
cld
jae
add
add
dec
jbe
pushl
push
mov
xchg
ret
add
addr16
nop
cld
jae
cmpsl
xor
fs
push
mov
nop
leave
jmp
testb
add
add
scas
dec
add
push
mov
xchg
ret
add
pop
add
or
nop
cld
jae
fistl
add
add
outsl
popa
fs
repnz
nop
cld
jae
or
sti
clc
repnz
nop
cld
jae
int3
add
sbb
cmpsl
xchg
imull
jae
repnz
nop
cld
jae
add
testb
in
nop
leave
jmp
add
bound
pop
cmpsl
xor
mov
add
repnz
nop
cld
jae
ljmp
nop
nop
cld
jae
add
insl
cmpl
push
mov
nop
leave
jmp
pop
add
add
xor
je
push
mov
nop
leave
jmp
xor
xor
push
mov
xchg
ret
add
scas
add
fwait
outsb
lds
nop
leave
jmp
or
dec
add
dec
xor
mov
push
mov
jno
flds
push
test
add
loopne
add
lea
mov
clc
repnz
nop
cld
jae
add
fildl
dec
lea
clc
repnz
nop
cld
jae
cmpsl
pop
or
aam
fistl
repnz
nop
cld
jae
pop
inc
xor
jp
add
add
repnz
nop
cld
jae
add
xor
adc
repnz
nop
cld
jae
int3
add
add
push
mov
nop
leave
jmp
add
call
inc
idivb
repnz
nop
cld
jae
dec
notl
push
mov
mov
push
dec
ja
push
add
mov
add
mov
push
push
mov
xchg
ret
xchg
add
add
add
add
and
cmpl
push
mov
nop
leave
jmp
mov
insl
push
clc
repnz
nop
cld
jae
pop
fwait
ljmp
adc
mov
push
mov
xchg
ret
dec
cmpsl
data16
dec
add
push
mov
xchg
ret
fildl
ljmp
jne
clc
repnz
nop
cld
jae
and
dec
add
xor
pushf
add
xchg
ret
add
mov
ja
test
push
mov
nop
leave
jmp
add
inc
inc
inc
jb
mov
dec
cmp
repnz
nop
cld
jae
cmp
jbe
cmp
xor
cltd
pop
clc
repnz
nop
cld
jae
test
testb
pop
sub
clc
repnz
nop
cld
jae
add
add
cmp
sbb
popa
add
repnz
nop
cld
jae
add
add
add
push
mov
nop
leave
jmp
add
push
xor
ds
add
cmp
push
mov
nop
leave
jmp
sbb
add
and
repnz
nop
cld
jae
aam
jp
int3
add
clc
repnz
nop
cld
jae
add
jbe,pn
add
repz
clc
repnz
nop
cld
jae
add
mov
push
mov
nop
leave
jmp
add
cld
mov
clc
repnz
nop
cld
jae
test
adc
repnz
nop
cld
jae
add
xor
lods
push
mov
xchg
ret
fildl
testl
add
mov
add
movzwl
clc
repnz
nop
cld
jae
add
add
add
mov
mov
xchg
ret
xchg
add
and
push
add
mov
clc
repnz
nop
cld
jae
xor
cmp
push
mov
nop
leave
jmp
mov
add
add
shr
clc
repnz
nop
cld
jae
add
test
push
mov
push
mov
nop
leave
jmp
push
add
lahf
mov
clc
repnz
nop
cld
jae
fs
clc
repnz
nop
cld
jae
fwait
add
fs
push
push
mov
nop
leave
jmp
xor
outsb
mulb
xor
subl
push
mov
xchg
ret
add
add
add
data16
clc
push
mov
xchg
ret
add
mov
push
mov
nop
leave
jmp
add
add
and
xor
jmp
repnz
nop
cld
jae
add
cs
xchg
nop
nop
cld
jae
adc
add
inc
loop
int
cmpl
jmp
or
sbb
jl
and
ljmp
ret
outsb
add
inc
dec
rolb
mov
inc
adc
mov
xchg
ret
add
add
cmpsl
test
je
push
mov
nop
leave
jmp
add
or
cmp
repnz
nop
cld
jae
add
add
add
clc
repnz
nop
cld
jae
add
add
add
mov
clc
repnz
nop
cld
jae
add
and
mov
add
push
mov
xchg
ret
cmp
std
add
call
mov
add
mov
nop
leave
jmp
jl
add
add
mov
add
clc
repnz
nop
cld
jae
add
loop
dec
add
clc
repnz
nop
cld
jae
add
addb
pop
push
clc
repnz
nop
cld
jae
mov
shlb
xor
ror
clc
repnz
nop
cld
jae
push
fisttpll
std
add
pop
rep
clc
repnz
nop
cld
jae
add
neg
add
push
int3
push
mov
add
add
xchg
jg
add
jl
push
js
fxch
push
ret
test
leave
push
mov
xchg
ret
sbb
fildl
jbe,pt
add
call
dec
scas
testb
test
cmpsl
add
rolb
mov
movb
mov
xchg
ret
add
test
call
mov
xchg
ret
mov
add
add
repnz
nop
cld
jae
cmp
add
add
xor
clc
repnz
nop
cld
jae
or
xchg
xchg
xor
mov
add
clc
repnz
nop
cld
jae
add
add
ljmp
loop
clc
repnz
nop
cld
jae
add
sbb
xchg
pop
rep
clc
repnz
nop
cld
jae
add
add
push
add
dec
add
clc
repnz
nop
cld
jae
push
mov
ds
in
mov
push
mov
xchg
ret
scas
jp
or
add
push
clc
repnz
nop
cld
jae
sbb
cmpsb
out
add
push
mov
xchg
ret
inc
add
add
add
push
clc
repnz
nop
cld
jae
add
subb
adc
cld
jae
xor
push
clc
repnz
nop
cld
jae
not
add
add
inc
xchg
mov
mov
loope
repnz
nop
cld
jae
dec
testb
add
rep
mov
clc
repnz
nop
cld
jae
add
data16
sub
nop
cld
jae
add
cmp
mov
push
mov
xchg
ret
add
aam
mov
repnz
nop
cld
jae
call
dec
jge
rclb
incb
xchg
ret
add
add
add
add
nop
nop
cld
jae
cmp
addb
add
mov
clc
repnz
nop
cld
jae
add
add
arpl
les
mov
xchg
ret
or
add
in
jmp
dec
fildl
add
add
add
xor
or
mov
nop
cld
jae
add
cmpsl
scas
dec
add
dec
cmp
in
nop
leave
jmp
add
xor
add
push
clc
repnz
nop
cld
jae
add
cmp
add
add
add
or
nop
cld
jae
add
bound
fiadds
nop
nop
cld
jae
add
add
mov
repnz
nop
cld
jae
add
jbe
add
xor
repz
repnz
nop
cld
jae
mov
add
jl
mov
pop
ret
add
bound
add
xchg
xchg
add
add
add
rolb
or
test
pop
add
push
mov
nop
leave
jmp
add
mov
and
mov
repnz
nop
cld
jae
insb
bound
or
xchg
out
add
push
mov
nop
leave
jmp
insb
add
add
add
push
mov
xchg
ret
ljmp
mov
mov
incl
xor
add
mov
push
or
mov
nop
leave
jmp
jl
testb
xor
repnz
nop
cld
jae
pop
sbb
fwait
push
neg
mov
clc
repnz
nop
cld
jae
cmpsl
dec
add
add
pushl
sar
nop
nop
cld
jae
add
add
add
test
sbb
repnz
nop
cld
jae
add
jnp
cwtl
std
clc
repnz
nop
cld
jae
add
push
mov
inc
add
add
inc
sub
push
pop
bound
int3
enter
clc
repnz
nop
cld
jae
push
and
loop
xor
cmp
push
std
clc
repnz
nop
cld
jae
jl
sbb
dec
mov
clc
repnz
nop
cld
jae
push
call
bound
jmp
lcall
add
add
testb
add
sbb
mov
clc
repnz
nop
cld
jae
inc
aam
add
test
add
clc
repnz
nop
cld
jae
add
pop
aaa
in
add
jmp
clc
repnz
nop
cld
jae
add
inc
scas
call
clc
repnz
nop
cld
jae
and
mulb
push
mov
nop
leave
jmp
sbb
std
outsb
pop
add
push
mov
nop
leave
jmp
dec
sbb
scas
add
jnp
test
clc
repnz
nop
cld
jae
add
add
mov
adc
mov
mov
clc
repnz
nop
cld
jae
mov
clc
repnz
nop
cld
jae
outsb
test
add
add
clc
repnz
nop
cld
jae
add
loop
push
push
out
mov
push
mov
nop
leave
jmp
mov
dec
insb
movsl
imul
cld
jae
fldt
or
and
nop
nop
cld
jae
add
or
add
addr16
and
push
mov
xchg
ret
mulb
dec
add
add
mov
repnz
nop
cld
jae
dec
add
out
std
add
push
mov
nop
leave
jmp
loop
sbb
xor
sbb
push
clc
repnz
nop
cld
jae
add
mulb
dec
cmp
ja
outsb
je
repnz
nop
cld
jae
add
or
adc
mov
fisttpll
nop
nop
cld
jae
dec
cs
mov
push
js
mov
xchg
ret
cmp
sbb
pop
add
add
clc
repnz
nop
cld
jae
add
add
add
cmpl
push
mov
xchg
ret
ljmp
pusha
push
mov
xchg
ret
xor
jbe
add
cmp
clc
repnz
nop
cld
jae
sbb
add
rolb
add
cs
clc
repnz
nop
cld
jae
mov
add
fisttpl
add
push
mov
xchg
ret
data16
fwait
dec
add
dec
sub
clc
repnz
nop
cld
jae
add
xchg
cmpsl
addb
jne
add
jl
xor
test
inc
add
sbb
mov
repnz
nop
cld
jae
cmp
add
mov
push
clc
repnz
nop
cld
jae
test
add
add
add
out
xchg
push
mov
xchg
ret
gs
add
add
add
out
push
mov
add
add
add
mov
adc
cltd
push
push
mov
xchg
ret
divb
add
add
mov
mov
call
clc
repnz
nop
cld
jae
xchg
outsb
cmp
pop
push
mov
add
jle
pop
inc
add
add
out
sbb
mov
clc
repnz
nop
cld
jae
sbb
arpl
mov
sbbl
clc
repnz
nop
cld
jae
add
add
cmp
dec
mov
clc
repnz
nop
cld
jae
add
mov
add
lret
push
mov
xchg
ret
fs
add
inc
gs
pop
rep
push
mov
xchg
ret
add
cmp
add
cltd
push
push
mov
xchg
ret
dec
mov
add
push
jno
dec
mov
push
mov
nop
leave
jmp
mov
sbb
xor
popa
add
repnz
nop
cld
jae
add
add
or
loopne
push
mov
nop
leave
jmp
testl
add
mov
nop
leave
jmp
int3
add
sbb
mov
lea
push
mov
nop
leave
jmp
xorb
bound
mov
dec
cmp
push
add
pop
add
add
dec
or
test
add
in
nop
leave
jmp
add
add
call
dec
adc
in
nop
leave
jmp
add
and
cmpl
push
mov
nop
leave
jmp
insb
add
int3
add
add
add
testb
xor
add
inc
lock
and
and
push
mov
xchg
ret
sbb
outsb
loop
push
data16
push
add
in
nop
leave
jmp
add
testl
repnz
nop
cld
jae
push
add
inc
or
call
clc
repnz
nop
cld
jae
dec
cmpsl
push
pop
jb
mov
pushl
clc
repnz
nop
cld
jae
sbb
add
imul
andl
jmp
pop
add
ljmp
clc
repnz
nop
cld
jae
add
int3
add
mov
repnz
nop
cld
jae
or
call
push
mov
nop
leave
jmp
dec
dec
jp
add
outsb
mov
mov
xchg
ret
add
inc
add
addr16
sahf
mov
clc
repnz
nop
cld
jae
add
int3
add
mov
push
mov
nop
leave
jmp
or
add
cmp
repnz
nop
cld
jae
add
add
add
fsubrs
clc
repnz
nop
cld
jae
add
add
add
add
clc
repnz
nop
cld
jae
negb
push
mov
es
fiaddl
xor
sbb
cli
test
add
add
push
mov
nop
leave
jmp
add
dec
add
cmpsl
add
int
pop
jae
repnz
nop
cld
jae
addb
imulb
dec
cmp
repnz
nop
cld
jae
insb
add
aam
xor
repnz
nop
cld
jae
cmp
add
add
popf
add
clc
repnz
nop
cld
jae
xor
pop
add
mov
in
testl
push
mov
nop
leave
jmp
data16
cmp
push
mov
nop
leave
jmp
add
dec
add
test
nop
cld
jae
xor
add
cmp
xchg
add
push
clc
repnz
nop
cld
jae
add
add
cwtl
movswl
clc
repnz
nop
cld
jae
add
add
data16
les
clc
repnz
nop
cld
jae
add
push
int3
and
rolb
mov
adc
add
clc
repnz
nop
cld
jae
add
dec
xchg
fdivr
clc
repnz
nop
cld
jae
add
sbb
addb
cli
pop
push
mov
xchg
ret
or
add
push
mov
xchg
ret
add
add
add
add
jo
mov
imul
push
mov
nop
leave
jmp
add
add
or
add
add
repnz
nop
cld
jae
testb
push
mov
xchg
ret
add
push
outsb
inc
into
lea
push
mov
nop
leave
jmp
add
or
test
sub
test
repnz
nop
cld
jae
sbb
dec
lea
clc
repnz
nop
cld
jae
add
add
jbe
jp
inc
call
leave
jmp
add
add
test
repnz
nop
cld
jae
add
repz
incl
jbe
add
add
sbb
add
add
clc
repnz
nop
cld
jae
add
xchg
add
mov
gs
push
push
mov
xchg
ret
xchg
mov
sbb
add
add
push
jbe
xor
clc
repnz
nop
cld
jae
gs
add
inc
dec
mov
repnz
nop
cld
jae
add
xchg
add
add
nop
leave
jmp
add
add
add
jb
push
mov
xchg
ret
mov
add
bound
imul
mov
xchg
ret
xchg
std
testl
add
cwtl
push
clc
repnz
nop
cld
jae
dec
int3
add
add
add
rolb
ljmp
jae
add
add
or
mov
xor
add
clc
repnz
nop
cld
jae
xchg
add
inc
push
mov
xchg
ret
add
gs
add
clc
repnz
nop
cld
jae
cmp
mov
call
jmp
addb
fs
add
xor
xor
mov
clc
repnz
nop
cld
jae
add
addb
xchg
mov
nop
nop
cld
jae
jl
std
add
push
clc
repnz
nop
cld
jae
add
fs
add
push
push
mov
xchg
ret
add
add
xor
add
add
xchg
mov
push
or
add
inc
add
add
xchg
add
push
push
mov
xchg
ret
add
adcb
add
clc
repnz
nop
cld
jae
add
add
and
mov
xor
clc
repnz
nop
cld
jae
std
add
andl
mov
clc
repnz
nop
cld
jae
addr16
sbb
sub
repnz
nop
cld
jae
xchg
add
add
add
add
clc
repnz
nop
cld
jae
xor
add
mov
add
add
add
mov
xchg
ret
cmp
notb
mov
pop
push
or
clc
repnz
nop
cld
jae
jp
inc
jecxz
sub
jmp
cld
jae
jbe,pt
add
call
test
clc
repnz
nop
cld
jae
add
dec
jmp
test
clc
repnz
nop
cld
jae
xchg
scas
mov
xchg
pop
mov
push
mov
nop
leave
jmp
xor
add
add
mov
xchg
ret
cs
dec
add
test
repnz
nop
cld
jae
or
jbe
add
add
push
mov
nop
leave
jmp
cmp
addr16
arpl
add
repnz
nop
cld
jae
add
add
ds
clc
repnz
nop
cld
jae
sbb
add
add
cmp
xor
add
push
mov
nop
leave
jmp
dec
sbb
push
clc
repnz
nop
cld
jae
xor
add
add
mov
mov
push
mov
xchg
ret
call
mulb
sbb
in
cmp
dec
add
jecxz
test
fdivrl
add
xchg
aad
rolb
clc
push
dec
mov
inc
fistpll
jmp
lock
inc
cmp
mov
in
cmp
mov
dec
xor
mov
add
mov
add
testb
mov
mov
jno
or
xor
push
clc
jp
sbbl
ror
mov
push
cmp
mov
cld
fwait
ret
lret
add
popa
add
sbb
add
pusha
add
sbb
mov
sbb
add
pop
jg
das
xlat
sbb
test
int
pop
outsl
movsl
fisubl
adc
sarl
mov
or
or
loopne
mov
and
leave
decb
mov
mov
stos
cmp
add
cmpsb
ret
xchg
mov
mov
xor
aas
mov
mov
ds
add
mov
out
inc
cmp
idivl
rorl
add
sub
add
cmpsl
and
mov
notb
add
add
pop
pop
xchg
push
inc
inc
mov
jecxz
ret
inc
jnp
mov
add
lahf
add
adc
mov
mov
fidivl
add
mov
repz
mov
add
ds
xlat
adc
mov
add
add
mov
icebp
xchg
or
mov
in
loopne
mov
pop
in
ss
and
int3
aas
addr16
lods
fnstenv
and
mov
or
and
mov
pop
in
in
mov
mov
jp
mov
test
out
add
lcall
mov
sbb
xor
clc
ficoms
inc
outsl
pinsrw
out
push
add
adc
mov
out
mov
fcoms
stc
dec
mov
jns
minps
mov
aad
mov
jecxz
int3
sub
imul
stos
mov
or
add
mov
add
cli
push
ja
outsl
push
fimull
ret
push
cli
imul
pop
cmpsl
movsl
aas
aad
lea
das
push
cmc
data16
add
mov
mov
or
pushf
sub
into
nop
add
adc
mov
mov
rolb
flds
sub
mov
mov
mov
inc
add
jmp
xchg
in
divl
pop
ret
ret
mov
insb
xchg
xlat
fwait
xchg
mov
or
stos
mov
mov
jl
loope
inc
push
ss
cmpsb
bound
mov
repz
in
das
dec
inc
lds
int
stos
lret
and
mov
aam
push
add
dec
push
addb
push
xor
mov
mov
mov
shll
sahf
cli
shl
inc
add
addb
jmp
mov
lock
imul
or
pop
mov
mov
into
fcomp
rolb
mov
mov
lcall
mov
repnz
rcrl
rolb
mov
in
mov
sbb
lret
clc
rcr
mov
mov
mov
jb
mov
testl
aad
je
jmp
fisubl
mov
sti
mov
mov
pop
mov
andl
xchg
test
in
or
xor
mov
icebp
pop
data16
mov
out
mov
push
xor
inc
test
push
add
add
mov
jno
push
outsb
dec
das
xor
lock
adc
ljmp
pop
iret
ljmp
add
mov
mov
add
mov
mov
out
mov
fisubrs
fstl
push
inc
stos
cmc
and
push
add
hlt
mov
insb
clc
imul
mov
mov
ss
dec
fcmovb
fnstcw
cli
lds
sbb
cmp
sbbl
je
out
jecxz
pop
rolb
push
add
insb
fistpll
cli
imul
or
pop
and
mov
sbb
mov
cltd
pop
inc
add
xchg
or
cmp
add
xchg
sbb
and
mov
xchg
out
popa
jae
das
xor
and
mov
rolb
mov
add
mov
jb
mov
aas
push
jno
xchg
lahf
and
add
popf
outsb
or
pop
aad
lock
out
les
xchg
add
adc
mov
call
cmc
aas
in
mov
enter
scas
add
ss
cwtl
mov
leave
ds
sub
mov
add
mov
sbb
stc
negl
jmp
imul
lods
xchg
into
lretw
fdivs
daa
faddl
clc
ret
fwait
xor
mov
leave
jecxz
fcompl
mov
mov
push
add
mov
or
arpl
jns
jmp
or
clc
and
mov
insl
mov
mov
add
and
sub
clc
xor
fwait
mov
stos
push
add
and
add
push
sahf
aaa
push
leave
aaa
jo
mov
stos
push
xchg
cmp
lahf
data16
nop
add
xchg
add
sub
add
rolb
pop
push
bound
mov
inc
xor
call
push
mov
stos
jnp
jne
pushl
mov
mov
loopne
mov
cld
popa
xchg
xchg
xchg
adc
add
sub
mov
mov
add
out
rorl
push
add
fdiv
pop
pop
sub
cwtl
dec
and
mov
add
cmpl
add
pusha
add
add
pushf
mov
fistpl
insb
fldenv
sbb
jo
mov
sub
add
add
or
cs
inc
daa
and
mov
mov
into
fs
push
xchg
lcall
and
mov
int
pop
enter
mov
pop
into
aas
jl
call
shll
out
or
mov
sub
add
jp
jo
mov
cmc
and
mov
mov
pop
std
push
sub
in
popf
int3
nop
add
xchg
mov
cmp
mov
inc
add
inc
dec
xor
mov
outsb
or
iret
sub
add
inc
cmp
jp
mov
mov
rolb
mov
jecxz
adc
add
push
aad
cmpsb
insl
mov
sbb
clc
movsb
and
mov
mov
push
mov
inc
add
jo
mov
ljmp
jo
mov
mov
repnz
addb
outsb
popa
xor
mov
ret
push
aam
xor
je
outsb
mov
xchg
add
push
mov
aad
fidivs
dec
xchg
jo
mov
xchg
add
mov
mov
into
or
out
int
dec
arpl
or
imul
mov
mov
add
sub
xor
add
add
jge
xor
push
mov
out
int
sub
jge
add
movsb
add
ret
cli
add
xor
sbb
std
movsl
addb
pop
mov
sti
mov
inc
aam
add
rorl
cmpsb
pushf
push
imul
ss
sbb
mov
mov
popa
xor
push
cli
aaa
mov
add
mov
mov
add
repz
dec
add
add
bswap
fcmovnu
xlat
mov
lea
mov
add
punpcklwd
push
add
or
xchg
xor
shrl
mov
xchg
jl
mov
cli
and
stos
add
jp
add
enter
sahf
outsb
cli
cmpsl
arpl
shrd
jae
xchg
or
cmp
xchg
enter
mov
mov
add
jnp
add
mov
lods
movsl
push
pop
mov
inc
gs
adc
mov
in
lods
lds
mov
fcmovnu
mov
mov
and
push
push
in
cmp
stos
loopne
mov
add
int3
or
jp
std
cmp
mov
add
jle
add
adc
insl
not
add
xor
mov
add
divb
push
push
add
push
pop
bound
mov
mov
mov
add
lock
call
mov
lock
mov
cmp
lea
fmul
add
lds
addb
sub
add
in
call
inc
sysret
mov
mov
sub
add
out
mov
cmp
addb
inc
lods
sahf
repz
pop
dec
inc
add
mov
add
push
mov
add
add
mov
fbstp
fstpl
jle
ja
add
add
rolb
mov
daa
jle
add
push
addl
add
ja
xlat
negl
loopne
mov
xchg
stc
shr
cltd
lcall
nop
add
rolb
mov
cmp
pop
popa
push
ret
push
add
xor
mov
frstor
add
or
inc
dec
mov
mov
fnstcw
sbb
dec
fadds
mov
movsb
pushf
sub
mov
insl
jg
fs
add
jmp
and
mov
mov
mov
fstpt
ret
jnp
push
dec
cmpsb
rolb
mov
cltd
adc
in
out
fisttps
mov
jp
sub
push
push
mov
loope
jp
add
push
add
adc
mov
pop
scas
ficomps
mov
hlt
mov
cmp
xor
loop
mov
pop
push
xchg
fcmovne
std
mov
mov
rolb
pop
jmp
mov
enter
mov
lret
mov
faddl
mov
sbb
aas
pop
movsl
cmp
loope
add
sahf
dec
sbb
ja
mov
mov
add
xchg
fcomps
push
jmp
jl
xchg
stos
ficoml
int
add
mov
movsb
xlat
ss
or
repz
add
pop
adc
mov
mov
or
pop
xor
add
cmp
add
push
lds
mov
or
add
add
add
xor
mov
jp
add
stos
pmaxub
add
add
pusha
add
jg
add
test
push
push
jbe
mov
aaa
fnstenv
mov
pop
push
push
addr16
sbb
xchg
add
addb
cwtl
pop
scas
mov
lods
fsub
jo
mov
add
add
cmp
push
rolb
pop
ret
int
add
jge
jns
shll
mov
cli
mov
push
dec
cwtl
add
mov
add
lcall
dec
movl
sbb
lcall
hlt
fdivl
jnp
imul
add
jg
add
fsubr
pop
jmp
jp
push
lea
add
jge
test
add
mov
or
sbb
mov
mov
and
mov
call
dec
xchg
xchg
mov
outsb
adc
jle
repnz
mov
out
jbe
and
test
into
fiaddl
mov
xchg
call
cmp
add
popa
pushf
mov
mov
adc
mov
add
mov
lods
sti
test
popf
lcall
jle
cmp
mov
lcall
mov
loopne
mov
inc
adc
mov
add
mov
aad
mov
add
mov
jae
cmc
lods
xchg
mov
add
add
dec
push
sbb
push
aam
and
cs
mov
sbb
xchg
lds
add
outsb
out
mov
out
jg
add
adc
adc
nop
add
ficompl
pop
mov
mov
mov
add
in
mov
add
mov
cmp
add
mov
fidivrs
pop
sbb
xbegin
add
sub
mov
fsubr
fcomp
inc
add
and
mov
js
sub
xchg
andl
mov
cs
into
push
out
hlt
jns
mov
push
push
popa
pushf
mov
xchg
add
xchg
add
add
add
pop
cmp
or
cltd
cmp
add
mov
pushf
imul
icebp
inc
scas
pop
dec
adc
xchg
push
jbe
lcall
mov
add
ret
add
dec
sti
add
mov
ret
movsl
mov
mov
mov
mov
lret
cmp
xor
rolb
adc
or
ret
or
add
das
push
jnp
xor
mov
add
mov
ret
jmp
clc
xchg
pop
stos
lret
sti
cltd
test
outsl
xchg
and
dec
imul
out
cmp
popa
sbb
push
add
pop
pusha
add
ret
pop
mov
aas
je
setbe
xchg
popa
std
outsl
xor
clc
mov
or
adc
mov
nop
add
xor
sbb
adc
mov
mov
aas
rolb
mov
mov
shrl
mov
mov
aad
scas
cmp
xchg
jnp
xor
mov
iret
int3
push
insl
stos
inc
rcll
add
push
ds
cmp
imul
imul
push
add
add
dec
divb
mov
pop
push
outsb
loopne
mov
or
jmp
dec
fiaddl
dec
in
shrl
mov
icebp
lds
lds
add
jb
mov
add
xor
mov
mov
rolb
mov
jb
mov
add
lds
sbb
adc
sahf
ja
in
ds
xchg
lods
setp
mov
pop
rcll
outsb
repz
test
ja
ja
add
mov
mov
inc
push
xor
push
add
test
add
add
lea
bound
mov
inc
bound
mov
cmp
data16
ret
dec
sarl
push
in
add
fsubrs
aas
int
ja
imulb
sbb
cmp
add
jecxz
xrelease
fwait
cmp
mov
mov
add
add
jnp
pop
jmp
jno
push
add
add
jmp
add
rolb
mov
imul
jns
add
mov
ljmp
cmpsl
movsl
rolb
aas
jl
fs
inc
inc
sbb
push
add
mov
mov
add
add
add
mov
or
mov
sahf
sbb
mov
pusha
add
pop
lock
mov
in
xchg
add
mov
jnp
loopne
mov
in
xchg
not
add
jle
mov
sub
mov
add
or
jg
pop
xchg
inc
inc
std
fldl
add
xor
test
out
or
mov
fisttpll
add
pop
ds
add
fdivrs
and
mov
xchg
add
mov
mov
push
int3
daa
inc
scas
les
pop
aam
test
pop
sbb
addb
mov
pop
mov
loop
mov
add
lods
ret
adc
mov
ja
add
rolb
mov
nop
add
mov
add
add
and
mov
dec
aaa
xor
pop
fs
and
pop
pop
movsb
or
xlat
les
push
inc
ficomps
and
out
mov
addb
or
push
aas
jle
push
pop
mov
rcr
adc
mov
mov
mov
xlat
xor
xchg
scas
dec
jns
out
mov
mov
ja
xor
mov
push
pushf
or
mov
mov
aad
jecxz
mov
add
add
mov
add
lds
sub
mov
mov
add
cmp
fiaddl
lods
mov
addb
imul
mov
push
push
ds
jae
jcxz
sbb
jno
pop
mov
not
add
push
push
mov
add
aam
add
addr16
add
adc
adc
fdivp
fbld
mov
mov
adc
int
push
xlat
repz
add
mov
mov
add
int3
sbb
mov
addb
sbb
cmpsl
addb
sti
inc
sub
add
jns
aaa
jnp
loop
mov
add
add
inc
mov
lahf
arpl
mov
jl
jo
mov
nop
add
add
popf
fimuls
notl
or
add
mov
fs
xchg
leave
or
sahf
sub
and
repnz
loop
mov
add
xor
sub
jecxz
mov
or
add
loope
add
mov
mov
mov
mov
mov
cmp
lahf
sbb
sbb
out
jne
add
mov
add
fcmovbe
in
inc
jle
add
mov
data16
mov
mov
xor
mov
popa
shll
add
dec
andl
add
int
out
movsl
cmp
mov
jne
jo
mov
out
fstpl
add
dec
mov
insb
cmp
mov
mov
xchg
sub
mov
xchg
int3
dec
repnz
lahf
xchg
rolb
mov
or
sub
in
test
jmp
or
mov
push
imul
mov
lret
dec
imull
fnstsw
rolb
mov
inc
jnp
lock
pop
add
mov
add
and
cmp
pop
rolb
scas
push
xchg
imul
add
jecxz
daa
popa
pop
dec
mov
scas
nop
add
jb,pt
mov
add
divl
sbb
add
flds
add
mov
pop
js
aad
in
jae
add
add
xchg
dec
loopne
mov
aaa
test
sbbl
pop
popa
push
add
pop
pop
test
mov
push
es
mov
ficompl
lds
or
mov
cld
and
mov
idiv
push
movsl
jg
xchg
xchg
xor
mov
enter
out
sbb
add
adc
lcall
ja
insb
icebp
into
filds
mov
inc
push
add
shr
pop
rolb
mov
pop
mov
outsb
cmc
fnstcw
repz
movsb
into
mov
mov
add
mov
inc
cld
es
test
dec
sti
add
mov
stos
iret
fwait
and
sub
and
stc
jne
add
jmp
jo
mov
std
dec
adc
mov
aam
adc
leave
xchg
stos
xor
mov
mov
das
in
mov
add
or
adc
mov
mov
enter
inc
push
sub
add
push
dec
push
add
test
add
inc
cmp
mov
or
out
in
jo
mov
int3
sbb
mov
mov
stc
sbb
jmp
cmp
xchg
aam
add
xor
fistl
into
dec
jae
add
pop
cs
rolb
mov
add
pop
mov
ds
dec
xor
mov
inc
iret
clc
xor
mov
xor
mov
mov
add
bound
mov
add
imul
xchg
adc
fmull
jae
xor
mov
lock
adc
mov
pop
push
mov
dec
xchg
mov
out
lods
jg
fwait
rolb
mov
test
into
pop
cld
xchg
add
xchg
add
fwait
push
cld
and
push
lods
nop
add
add
mov
dec
sbb
add
add
jno
pop
fwait
xor
xchg
js
leave
cli
mov
mov
mov
sub
stos
rcrl
ja
movsl
rcll
add
mov
adc
xchg
mov
arpl
rolb
mov
add
jbe
add
ljmp
mov
out
testl
push
push
fs
mov
fnsave
dec
sub
cli
pop
int3
push
sbbl
loopne
mov
das
add
or
add
add
mov
testl
adc
mov
cmpsl
or
in
xor
mov
stc
jae
push
pop
out
gs
mov
notl
cs
or
mov
loope
je
xchg
add
mov
pop
jle
jg
fs
and
add
push
je
xlat
shll
add
in
adc
xchg
cmp
pop
xor
cmp
ret
outsl
pop
adc
mov
jbe
test
loopne
mov
xor
pop
sub
xchg
outsl
add
mov
add
mov
jp
add
add
mov
push
jmp
sarl
push
add
mov
stc
lahf
xor
mov
jo
mov
pop
sahf
dec
sub
decb
enter
xor
adc
adc
cltd
mov
pop
insb
lods
inc
add
add
mov
xor
fs
stc
mov
int3
arpl
add
imul
jns
out
je
movsl
les
daa
cmp
pop
iret
pop
leave
fcomp
js
decl
in
jnp
cli
add
mov
mov
add
lock
pop
xchg
insl
mov
sub
push
add
test
inc
cmpsl
cmc
mull
or
mov
xlat
mov
push
add
fisttpl
xchg
lods
push
ret
mov
mov
mov
mov
pop
cld
fsubr
mov
mov
jnp
xor
pop
lods
test
pop
loopne
mov
mov
xlat
xchg
add
mov
bound
mov
xchg
cltd
loop
mov
mov
xchg
out
cmpsl
inc
add
and
out
add
jbe
adc
mov
mov
push
hlt
fnsave
mov
push
test
add
test
minps
or
push
rolb
mov
std
movsb
push
lret
jge
les
mov
mov
add
add
data16
sub
mov
jbe
inc
add
add
push
push
mov
add
dec
pop
addb
inc
add
fistps
pop
add
mov
mov
out
sub
push
loope
ss
stc
jae
fwait
sbb
sub
fstps
xchg
mov
mov
ret
cmp
or
stos
mov
adc
mov
mov
mov
repz
cwtl
sbb
loopne
mov
dec
rorl
sbb
fwait
dec
mov
adc
and
lcall
lock
adc
insb
lock
mov
jbe
mov
mov
adc
pop
mov
jmp
into
xor
iret
std
das
sbb
mov
adc
mov
adc
add
or
int3
pop
in
int3
dec
in
jno
cmp
push
jae
xlat
in
or
cmp
scas
and
mov
cld
cmc
lcall
stos
loop
mov
out
out
out
or
xchg
lahf
iret
test
addb
mov
cmp
out
shll
add
incl
jmp
add
aas
test
jecxz
push
sahf
add
add
dec
test
xchg
testl
std
mov
addb
push
rolb
incb
push
add
sub
arpl
mov
jbe
addb
mov
insb
mov
lahf
arpl
fwait
lcall
push
faddl
jle
jecxz
test
adc
mov
insl
mov
sti
andl
add
mov
dec
mov
add
xor
mov
ret
int
loope
sbb
inc
fs
lea
ret
or
repz
jnp
and
xchg
int
pop
setae
push
push
popf
sbb
mov
or
add
mov
mov
add
inc
add
push
jbe
add
mov
dec
push
adc
add
push
je
push
jecxz
mov
push
add
mov
mov
fs
arpl
mov
push
jbe
fmull
or
adc
xor
mov
cmp
dec
push
ret
push
movsb
imul
add
mov
add
mov
bound
mov
lcall
out
add
cmp
add
cld
xchg
stos
outsl
addb
scas
push
add
mov
negl
mov
cmp
mov
sbb
ret
and
mov
or
push
flds
and
dec
mov
mov
notb
mov
dec
fdivp
add
xor
mov
add
aam
test
adcl
data16
mov
fsubs
fldt
cltd
es
mov
add
scas
movsb
or
sahf
pop
mov
xchg
insl
movsl
fsubs
int3
xchg
push
loop
mov
or
or
outsl
out
mov
mov
mov
les
xor
mov
cmp
dec
push
push
movsb
mul
push
sahf
das
pop
loope
daa
das
jae
repz
mov
pop
xor
pusha
add
mov
insl
xchg
push
sub
movsl
mov
sub
add
mov
jae
clc
rcl
add
aas
mov
add
dec
cmp
lds
add
aad
repnz
std
pop
out
ljmp
add
add
cmp
mov
sbb
stos
popf
push
fdivrs
mov
div
add
mov
lret
add
sbb
les
mov
neg
dec
out
pusha
add
pushf
push
fsubl
gs
daa
jb
mov
dec
sahf
jecxz
jmp
add
adc
stos
or
add
addl
outsl
fwait
into
das
push
loope
push
fistl
add
and
mov
and
cli
sub
xchg
in
outsb
hlt
jae
ljmp
or
lods
fdivl
sbb
add
inc
push
iret
outsl
arpl
mov
mov
mov
sub
fimuls
mov
xchg
out
mov
rol
mov
in
out
push
dec
pusha
add
repz
push
add
iret
fcomps
jb
mov
sbbl
lahf
mov
xor
add
and
xchg
or
std
lret
fiaddl
cmpsl
mov
inc
add
hlt
leave
xor
mov
push
mov
pusha
add
popl
mov
push
inc
js
notb
and
addr16
out
es
jo
mov
arpl
pop
dec
das
cmp
add
incl
xor
rcll
stos
add
mov
and
scas
mov
pop
cmp
mov
mov
rolb
mov
jnp
add
ss
mov
add
ret
xchg
xchg
add
mov
push
pop
mov
in
adc
sub
or
xor
mov
rolb
fucomp
ds
and
mov
add
mov
fidivl
adc
mov
cmp
jb
mov
aad
cmp
sbb
add
inc
or
inc
lock
push
add
outsl
stc
daa
lock
sbb
or
jl
sbb
push
loope
and
mov
lods
fs
jne
pop
sub
outsl
lret
jnp
movsl
stc
push
jmp
stc
bound
mov
and
mov
dec
jns
cmpsb
push
inc
imul
jg
mov
add
add
cmp
repz
fiaddl
addb
rolb
inc
lret
hlt
scas
aad
adc
addb
xchg
adc
mov
cltd
or
pusha
add
mov
xchg
mov
add
mov
mov
pop
mov
insb
jl
fcoml
lods
aad
mov
mov
std
leave
pop
in
sub
push
add
rolb
mov
pop
cmpsl
sbb
lahf
mov
xor
punpckhdq
hlt
cli
dec
outsb
mov
xchg
lock
mov
jmp
xchg
or
mov
push
pop
movsl
adc
add
mov
push
mov
xor
jp
lret
add
adc
add
jns
xchg
scas
jle
add
addl
scas
imul
out
add
jno
mov
add
adc
mov
ljmp
js
repnz
and
cmp
out
shl
mov
loop
mov
jp
ficomps
or
enter
divl
scas
test
scas
call
jmp
mov
outsb
lahf
mov
mov
lods
sub
ds
fmull
push
xchg
inc
push
call
sub
add
mov
movsl
xor
pop
cmpsl
jns
jnp
andl
cltd
lea
add
aam
mov
push
roll
out
fcmovu
inc
call
fs
xchg
mov
jp
in
repnz
lods
and
or
cmp
add
add
sbb
mov
add
mov
jl
jb
mov
adc
mov
mov
mov
mov
int3
push
pop
pop
or
sub
popf
movsb
sub
stos
popf
xchg
add
inc
outsb
cmp
lahf
aas
inc
int3
and
test
add
mov
nop
add
add
ss
shll
add
js
popa
mov
dec
fildll
dec
mov
xor
rcr
xor
out
jmp
mov
stc
outsl
ljmp
jl
sbbl
popa
mov
and
les
jl
insb
pop
inc
mov
add
aas
jnp
lahf
in
xor
js
add
int3
jae
icebp
dec
pop
test
lret
or
mov
add
mov
mov
popf
dec
push
lds
mov
add
lret
mov
mov
loop
mov
aaa
jp
xchg
int3
push
mov
rcll
push
hlt
loopne
mov
xchg
sub
dec
jno
xchg
pushf
cmovle
adc
adc
adc
in
andl
lds
fdivrl
sub
and
insb
jle
mov
mov
adc
adc
mov
dec
std
mov
add
loope
add
rolb
mov
jns
test
sub
push
sbb
je
inc
pop
xor
imul
cltd
push
xor
inc
adc
mov
arpl
pop
fmuls
movsl
push
add
mov
add
jge
add
xor
mov
stos
add
addb
cmc
jmp
stos
fwait
sub
mov
mov
mov
mov
outsl
icebp
adc
mov
rolb
in
fsubrs
ss
add
xchg
sbb
jle
enter
mov
jnp
in
out
push
add
fstps
lret
mov
add
push
loop
mov
mov
cmc
in
addb
jge
mov
fists
mov
add
mov
dec
sub
pop
jns
mov
xor
mov
pop
adc
das
pushf
dec
jl
imul
fcompl
and
mov
mov
jle
add
movsb
jns
add
add
loope
pop
stos
stc
dec
cli
sbbl
push
mov
adc
mov
push
jne
dec
xor
push
cmp
sub
add
add
mov
mov
mov
cli
push
xor
cmc
bound
mov
inc
add
mov
add
outsb
xchg
scas
inc
add
aaa
dec
das
shl
add
and
mov
add
add
out
inc
add
es
add
jnp
int3
or
adc
push
jae
xchg
mov
jnp
add
mov
add
cmpsl
test
int
xor
leave
fistps
cwtl
cmpsb
repnz
or
lahf
or
cmp
mov
dec
inc
xchg
add
add
cmp
dec
xchg
lods
lret
pushl
add
push
and
adcl
ficoms
les
daa
jb
mov
stos
inc
add
add
xor
and
test
add
rolb
mov
dec
dec
mov
pop
mov
xor
stc
jns
pop
lods
lea
loop
mov
mov
jnp
or
xchg
xor
mov
mov
add
jo
mov
mov
cmp
add
add
mov
and
icebp
bound
mov
arpl
fsubl
fidivl
and
mov
add
mov
mov
enter
shl
mov
ljmp
lock
mov
dec
jns
movsl
setbe
adc
mov
sahf
pop
fwait
mov
pop
inc
push
loopne
mov
cmpsb
xor
in
bound
mov
adc
rolb
mov
in
clc
test
stos
or
popa
lds
rol
mov
add
pushf
pop
cmp
sahf
in
addb
inc
pop
push
sahf
sarl
mov
js
insl
dec
adc
mov
dec
add
rcll
mov
add
test
testl
jo
mov
addr16
jb
mov
add
sbb
sbb
mov
add
mov
insb
addl
add
pushf
mov
add
mov
mov
mov
pushf
add
add
sbb
jnp
lods
inc
xor
lea
jno
mov
add
cmp
add
push
jnp
mov
add
add
out
sub
mov
add
inc
insb
mov
xor
mov
mov
cmc
out
stos
xor
mov
cmpsb
int
out
jmp
out
mov
mov
mov
stos
sub
xchg
add
xchg
ds
sbb
dec
nop
add
mov
pop
adc
mov
add
and
mov
add
icebp
mov
add
add
xor
mov
testb
add
int
jae
ret
stc
lock
mov
jmp
rolb
mov
stos
ret
dec
cmpsl
sbb
in
arpl
loopne
mov
inc
es
jp
pop
loopne
mov
mov
lcall
jecxz
add
mov
add
cmp
add
add
inc
xchg
rolb
mov
repnz
clc
aam
add
jg
add
je
sub
outsb
mov
call
jmp
ds
push
add
adc
aas
out
or
movsl
pop
sub
loopne
mov
add
dec
mov
pop
mov
add
adc
lock
add
dec
cmpsb
mov
jecxz
pop
andl
mov
add
mov
add
cmp
subl
jb
mov
mov
daa
pusha
add
and
mov
lahf
xor
mov
mov
mov
cwtl
fstl
pop
push
add
lea
lcall
pop
push
lea
jb
mov
jae
movb
cli
and
mov
add
test
loopne
mov
xor
scas
into
xor
add
or
mov
push
scas
aaa
mov
add
pop
add
mov
loope
in
mov
mov
mov
rolb
mov
insb
lcall
and
ja
add
or
hlt
dec
out
push
sbb
add
mov
js
fcom
add
jle
add
adc
mov
add
pop
jp
add
mov
out
push
sub
mov
das
xchg
dec
gs
fs
sbb
movsl
jecxz
add
add
mov
xchg
jl
add
lds
add
cmc
repnz
shll
dec
mov
addl
sub
outsl
out
loope
pop
push
ret
jp
add
xchg
dec
aam
aas
or
sub
std
sbb
and
jnp
push
add
inc
add
jne
cltd
push
push
xor
mov
ds
nop
add
or
xor
mov
add
dec
lahf
jle
outsl
push
sub
add
mov
call
subl
mov
mov
dec
lahf
fdivrl
adc
push
add
mov
mov
mov
das
sbb
or
adc
jnp
enter
push
add
test
xchg
negl
out
filds
movsb
repz
into
and
jge
xor
mov
mov
add
dec
in
cwtl
fcoms
pushf
add
mov
movsb
push
insl
mov
outsl
fldt
outsb
push
and
pop
das
jne
in
movsb
fabs
mov
sub
mov
adc
clc
mov
ret
dec
fsts
mov
cmp
mov
push
push
jmp
cmp
add
insl
rol
ja
sbb
rolb
pop
popf
imul
jnp
out
add
jno
cmp
jno
rolb
push
aaa
neg
sub
call
add
mov
mov
or
add
add
mov
mov
cltd
adc
jae
nop
add
bound
mov
cmp
fldl
add
inc
add
push
fwait
test
test
add
jmp
int
adc
mov
dec
mov
pop
mov
mov
add
bound
mov
dec
addb
jl
mov
ret
stos
inc
xor
xchg
dec
rolb
mov
pop
scas
sbbl
pop
inc
add
cmp
mov
mov
mov
cmpsb
pop
lods
ret
lcall
mov
add
mov
inc
js
sahf
outsl
adc
cmp
add
shll
or
mov
popf
xchg
add
add
repnz
add
mov
pusha
add
mov
mov
lahf
imul
lock
sub
mov
jbe
fidivs
in
mov
mov
call
mov
sbb
repnz
rolb
je
mov
dec
xor
lea
leave
fwait
ss
add
lcall
mov
mov
shr
cmc
cmp
adc
movsl
sub
and
jne
and
in
arpl
inc
lock
aaa
jmp
push
sbb
pop
push
adc
mov
and
add
mov
mov
call
sbb
and
mov
add
mov
hlt
in
jb
mov
in
xor
mov
jb
mov
add
insb
in
push
jg
test
lds
add
das
adc
mov
xor
sbb
mov
add
add
mov
sub
add
gs
push
adc
sub
lret
add
rcr
pop
pop
in
js
add
sub
mov
data16
aam
icebp
mov
ljmp
rolb
aas
push
out
mov
mov
ja
add
mov
or
sub
mov
jb
mov
aas
rolb
sahf
push
outsb
cmp
mov
leave
sbb
xchg
out
add
mov
dec
adc
ljmp
add
sbb
clc
ret
push
add
mov
leave
mov
in
push
adc
mov
pusha
add
mov
lret
mov
loope
repz
test
cmp
in
sahf
adc
mov
mov
sbb
inc
adc
mov
imulb
jae
add
bound
mov
xor
int
mov
loop
mov
cmpsl
xor
mov
ljmp
cmp
jne
mov
push
out
cmp
scas
lahf
jge
out
daa
jnp
mov
xor
addb
fdivp
add
clc
mov
rcrl
cmp
out
fnstenv
inc
std
outsb
inc
pop
lods
sbb
rolb
mov
dec
dec
cmpsb
aad
add
js
mov
add
mov
clc
push
add
stc
adc
mov
cli
and
cltd
rolb
mov
ljmp
iret
in
ds
bound
mov
je
jg
dec
js
aam
add
sub
xor
mov
dec
mov
mov
xchg
lcall
loope
add
ret
lahf
cld
mov
mov
add
cli
popf
pop
rcll
xlat
add
sbb
dec
movsb
int
jne
add
cmp
sti
testl
adc
add
mov
in
xchg
adc
int3
pop
jbe
add
xor
cmc
in
std
aas
mov
leave
imul
and
daa
scas
adc
add
mov
mov
insl
jb
mov
into
pop
es
ja
mov
mov
sbb
add
insl
xchg
xor
add
mov
repnz
adc
cmp
hlt
mov
add
lret
adc
mov
push
push
inc
add
add
ja
sbb
or
mov
outsb
push
fidivs
mov
stos
lret
cmp
cltd
lock
jmp
inc
push
add
push
or
mov
cmp
out
pop
mov
hlt
mov
dec
mov
xor
jb
mov
arpl
movsb
sub
add
divl
mov
jmp
mov
test
inc
divl
mov
mov
lock
sahf
cmp
add
out
mov
cmpxchg
mov
inc
pop
nop
add
adc
mov
es
jns
or
out
xchg
sbb
mov
adc
mov
pop
add
lods
pop
sub
mov
js
add
scas
cmpsb
std
int
jecxz
cltd
inc
mov
xchg
fyl2x
mov
dec
xor
mov
push
out
push
fcmovb
pop
add
mov
test
push
jecxz
mov
sub
shll
fwait
fs
xchg
mov
sbb
sub
fnstsw
iret
int
add
and
mov
aad
dec
jne
inc
add
jo
mov
jnp
cmpsl
leave
fldcw
jp
add
int3
sbb
in
add
cmp
stc
pop
fisubl
cmpsl
aad
das
xchg
cmp
push
stc
inc
insb
ror
xor
loop
mov
ret
lcall
dec
test
mov
js
out
stos
push
add
push
sub
lret
inc
add
cmp
out
push
gs
clc
test
dec
les
loop
mov
daa
mov
cmp
add
pop
xchg
push
sub
int
fdivr
out
push
mov
sbb
lea
test
cmpsl
popl
dec
loop
mov
dec
in
mov
pop
jp
fnstsw
int
adc
jbe
add
add
inc
sbb
dec
ret
loopne
mov
mov
je
sti
testl
jo
mov
das
and
mov
mov
lret
sti
pop
jns
add
add
add
inc
fmull
out
cmc
adc
adc
mov
or
cmc
cmp
push
mov
insb
ljmp
mov
pop
aam
and
xor
jle
clc
sub
call
loop
mov
mov
add
pop
out
mov
mov
xchg
sbb
daa
insb
xor
mov
lods
les
stos
int3
sahf
jl
ud2
cmc
mov
mov
mov
fcompl
mov
mov
add
out
ja
rolb
mov
mov
iret
mov
or
jle
or
push
adc
mov
ret
into
into
scas
les
repz
sbb
sbb
mov
pop
lret
and
mov
lock
add
loop
mov
repnz
xor
add
jno
call
add
addr16
pop
xor
mov
inc
dec
subl
mov
push
xchg
xchg
ljmp
mov
js
xlat
loopne
mov
mov
add
cwtl
push
xchg
js
lret
mov
into
test
bound
mov
inc
cmp
insl
inc
pop
int
int3
jae
movsl
loop
mov
mov
mov
out
add
rolb
outsb
fbld
dec
fwait
xor
add
cli
mov
dec
xor
add
fldl
popf
xchg
test
mov
cmp
and
mov
mov
leave
fisttpl
sti
xchg
mov
mov
xchg
mov
xor
push
or
add
mov
js
lods
sbb
mov
and
cmp
sbb
insb
iret
add
gs
push
je
fisubs
add
addr16
out
add
loope
scas
sbb
mov
push
outsl
gs
pop
pop
and
fnstcw
cmp
cli
jg
add
mov
mov
mov
mov
or
mov
jge
movsl
cwtl
daa
push
or
push
repz
loope
cmpsl
xchg
xlat
mov
rolb
mov
adc
inc
pop
xor
mov
nop
add
dec
mov
add
mov
mov
ljmp
fdivp
scas
mov
add
mov
add
pop
and
xchg
fcmovne
push
daa
push
outsb
in
shl
sbb
fdiv
add
mov
adc
je
int3
out
jno
cmp
into
mov
push
add
cmp
mov
imul
aas
xchg
insb
cmp
mov
and
divl
mov
adc
mov
or
loope
inc
stos
addb
jecxz
mov
dec
or
es
addb
vprotd
jnp
mov
xorl
jmp
enter
mov
jle
imul
mov
lahf
cmp
add
loop
mov
outsb
sub
sbb
or
pop
movsl
push
adc
mov
add
add
aad
xchg
jecxz
xchg
scas
jns
jno
xchg
pop
adc
cmp
xor
mov
mov
mov
mov
or
mov
lods
shll
add
loope
ss
mov
cmc
std
rolb
pop
rolb
mov
xor
push
decb
push
cltd
pop
push
mov
leave
xchg
jne
sub
fstpl
imull
negb
add
fsubrl
test
and
mov
insb
xchg
jns
je
outsl
cmp
ljmp
cmp
ret
xchg
lods
scas
mov
cmpl
inc
add
add
dec
ja
dec
jmp
add
fistps
add
add
sahf
mov
out
pop
push
scas
decl
xor
mov
push
add
sub
sbbl
mov
mov
test
into
jg
or
mov
add
in
cmp
scas
cmpsb
cld
mov
sbb
xchg
mov
into
out
mov
inc
enter
out
pushf
push
jmp
shll
iret
push
push
lods
lret
mov
mov
insl
add
add
aaa
mov
cmpsl
inc
add
repnz
outsl
clc
dec
inc
shll
cld
in
outsb
adc
add
mov
xor
mov
or
fistpll
aad
int3
mov
pop
jnp
sbb
adc
je
mov
sbb
dec
rdtsc
mov
add
add
sahf
cmp
sub
pushf
pushf
pop
xchg
jecxz
cmp
add
out
mov
mov
cmp
add
mov
dec
add
or
imul
iret
mov
fbld
lods
mov
and
ja
push
movsb
or
add
add
lods
cmp
outsl
outsb
jne
mov
mov
loope
int
in
sbb
mov
pusha
add
mov
xchg
mov
out
add
aam
sti
cltd
mov
out
xchg
repz
xor
pushf
push
jno
stos
scas
popl
mov
cli
jno
add
jo
mov
add
addl
dec
cmpsb
pop
je
mov
rep
mov
adc
push
cmp
outsl
push
stc
mov
mov
subl
mov
push
xchg
or
push
clc
imul
das
gs
fldt
or
cmp
cwtl
push
push
fdivrs
xchg
je
outsb
pusha
add
add
rcll
addb
cld
inc
in
aaa
mov
repz
mov
or
imul
ret
test
push
inc
call
and
addb
lods
out
test
enter
mov
movsl
in
movsb
xchg
jnp
add
mov
jne
cmp
cmp
out
add
inc
mov
call
hlt
jne
add
mov
fisubrs
add
nop
add
mov
and
mov
xor
mov
dec
mov
push
mov
lahf
push
add
adc
add
mov
das
push
add
shl
ja
cmpsb
scas
dec
loopne
mov
pop
in
mov
arpl
dec
mov
pop
cltd
mov
pop
adc
mov
sbbl
dec
inc
xchg
cld
pushf
fnsave
inc
add
add
cmp
mov
gs
outsl
cmp
add
fs
dec
jbe
mov
push
mov
lret
int
add
sahf
adc
add
push
inc
fldenv
mov
jecxz
int3
push
or
ficoml
xchg
icebp
mov
scas
jno
lahf
push
jns
pop
xor
mov
adc
mov
or
outsl
mov
aad
pusha
add
loope,pn
das
xlat
push
add
cmp
add
pop
push
ret
jnp
mov
sub
jno
sbb
fwait
push
add
aam
add
add
cltd
int3
xchg
cli
idivl
cld
std
mov
loopne
mov
add
jns
xchg
mov
mov
insl
aas
add
ss
mov
jge
add
imul
lea
jbe
lods
sti
inc
add
in
loope
add
dec
addb
je
adc
pop
out
push
cmc
in
fisubrl
fcomps
fldt
add
jecxz
dec
je
lds
add
push
inc
add
hlt
ficomps
je
mov
je
call
mov
das
jmp
addr16
jl
rolb
dec
test
test
add
cmp
mov
and
fisubl
loop
mov
push
lahf
pop
mov
lds
mov
insb
addr16
cmpsl
ljmp
daa
sub
jl
stc
or
cmp
mov
cmpsb
push
cmc
repz
cmc
push
popa
nopl
add
mov
mov
std
pop
mov
inc
dec
push
int3
stc
iret
dec
insb
add
xlat
ja
jae
ds
arpl
out
scas
int
popf
cmp
loope
add
pop
xchg
out
mov
xchg
test
xor
add
test
add
adc
mov
push
jle
mov
das
push
add
mov
xchg
andl
mov
cmpsl
add
lods
inc
and
mov
bound
mov
test
sar
lods
and
ret
ljmp
push
adc
mov
sbb
mov
fildl
stos
or
push
add
push
sub
mov
add
fmul
mov
add
dec
faddl
enter
or
add
leave
xchg
cmpl
mov
add
mov
and
xchg
cli
jo
mov
and
add
pop
cli
and
sub
jp
dec
mov
cmp
inc
fnstsw
add
mov
popa
sbb
add
ja
imul
lods
mov
adc
test
push
inc
push
ljmp
xor
fsubp
out
pop
xchg
mov
cmp
insb
push
stos
outsb
incl
xchg
add
cld
xlat
adc
sahf
dec
inc
jno
lods
fdivrl
adc
xchg
add
addb
inc
mov
fld
scas
cmp
ss
mov
test
mov
stos
lea
es
xor
fidivrs
adc
adc
cmc
mov
inc
add
testl
insl
imul
daa
addr16
test
cmp
add
add
ss
cli
mov
sub
push
add
mov
inc
add
leave
aaa
lods
xchg
popa
xchg
mov
pop
cmc
mov
pop
fldl
jne
dec
enter
mov
push
add
nop
add
xchg
movsl
pop
insb
mov
leave
mov
push
pop
jne
push
dec
sbb
movsl
outsb
popa
testb
jo
mov
add
pop
jae
aad
call
outsl
mov
out
cmp
add
add
or
mov
mov
cmpsb
push
add
cmpsb
adc
add
js
add
inc
add
add
push
jmp
sbb
ss
mov
jnp
scas
rorl
sbb
mov
push
push
jecxz
sub
out
mov
push
repz
add
lahf
insb
mov
mov
xor
adc
mov
lea
in
imulb
frstor
sbb
add
add
cmp
mov
add
inc
int
dec
insl
adc
and
mov
dec
cmp
dec
dec
mov
xor
inc
or
push
and
mov
mov
and
mov
bound
mov
roll
lahf
rcll
add
call
fcoms
test
repnz
add
stos
ss
pop
stos
pop
dec
clc
mov
add
mov
push
fildl
notl
jmp
xchg
add
cmp
lds
jmp
loope
add
cwtl
ret
dec
test
sbb
pop
jns
test
arpl
inc
xor
mov
in
jns
add
je
push
std
aaa
mov
mov
cmp
mov
test
icebp
sbb
add
cmpsl
imul
mov
ljmp
subl
adc
sbb
mov
mov
push
cmp
xchg
sub
xchg
add
mov
or
mov
adc
sbb
sub
mov
jl
aas
mov
xchg
cmpsl
mov
and
jge
xchg
icebp
mulb
and
add
add
out
inc
ficoms
pusha
add
pop
xchg
cltd
test
mov
xor
mov
xor
add
adc
add
or
inc
testb
add
leave
push
out
add
mov
sti
test
sub
cs
ss
sub
mov
mov
notl
add
lods
add
arpl
xchg
jbe
mov
add
movb
fsubrl
loop
mov
mov
jnp
mov
jbe
aad
in
clc
push
popf
mov
adc
and
in
adc
test
je
add
lret
mov
add
stc
rolb
mov
sbb
test
movsb
movsl
pusha
add
pop
xor
inc
adc
lds
mov
sbb
mov
mov
lock
mov
fdivl
addb
adc
pop
jl
mov
mov
rolb
mov
in
dec
js
or
mov
jno
add
mov
xchg
fdivs
sub
push
lods
xchg
push
pop
outsb
ud1
add
sub
into
iret
mov
xchg
jb
mov
mov
add
in
repz
leave
sbb
sub
dec
jb
mov
iret
mov
lret
ljmp
mov
fwait
pop
sub
imul
insl
mov
inc
add
add
mov
push
ja
xchg
hlt
div
add
mov
sbb
or
cld
dec
jno
dec
cwtl
sbb
add
mov
add
jp
mov
xchg
addb
push
xor
mov
roll
push
lods
gs
and
aaa
cli
dec
adc
mov
xchg
add
movsl
imul
movb
mov
ja
add
sahf
and
mov
mov
inc
add
xlat
pop
pusha
add
pop
or
push
scas
flds
xor
mov
inc
push
cld
push
lcall
adc
mov
mov
adc
imul
lahf
and
mov
lods
mov
mov
or
add
lahf
push
add
mov
jecxz
bound
mov
mov
lds
mov
mov
add
mov
je
push
add
test
add
jno
jmp
lds
mov
jle
sbb
jle
add
nop
add
mov
mov
cmc
data16
sub
inc
push
push
lds
mov
add
idivl
mov
pop
dec
in
fidivrs
cs
pop
pop
jecxz
add
lods
push
pushw
xchg
xchg
add
xor
mov
mov
add
jne
xor
inc
add
mov
push
adc
mov
ss
subl
mov
cmp
and
mov
test
aam
sbb
xchg
add
lods
lds
mov
mov
jmp
add
mov
lcall
push
add
xchg
add
sbb
lret
ljmp
add
add
cld
call
sub
add
fidivrl
mov
aaa
pminub
fnstsw
xor
mov
pusha
add
dec
and
push
mov
mov
fidivrs
hlt
pop
jmp
mov
xor
int3
shrl
leave
outsb
pop
out
clc
jecxz
cmc
push
adc
mov
pop
mov
mov
jns
push
mov
jp
sahf
jbe
sbb
mov
fstpt
add
mov
mov
fistpl
popf
test
mov
insb
dec
lahf
int3
pop
jae
xchg
repnz
push
sub
in
fcmovu
ljmp
inc
sbb
hlt
mov
test
add
divl
push
jle
xchg
push
inc
add
in
outsb
cmp
add
xor
mov
xor
mov
mov
add
out
lds
dec
aad
hlt
mov
xor
mov
xchg
xor
and
inc
fs
int3
loope
add
mov
jle
insl
fsubrl
rol
add
push
cmpsl
inc
jmp
repnz
fisubrl
filds
stos
sub
adc
add
aad
sbb
mov
add
xor
mov
scas
gs
push
outsb
push
nop
add
test
sub
outsb
pop
inc
out
test
mov
popf
jmp
mov
xchg
pusha
add
add
add
gs
sub
leave
mov
add
mov
push
enter
popa
mov
arpl
add
out
or
mulb
fdivl
pmuludq
out
dec
lock
outsb
repnz
subl
dec
stos
add
mov
and
jno
mov
daa
out
cmp
add
cli
cmp
add
mov
pop
mov
iret
cmp
dec
cmpsl
lcall
pop
pop
inc
int3
xchg
test
decl
add
add
aam
std
fisttps
push
add
push
push
mov
xchg
aam
addb
pop
lds
popa
adc
mov
mov
outsb
mov
movq
xchg
fiadds
adc
sbb
jl
mov
and
mov
repnz
xchg
sub
jno
xchg
out
xchg
adc
mov
add
inc
inc
sub
xor
pop
aad
rolb
mov
xor
mov
add
push
leave
lods
test
xor
mov
add
push
push
add
out
leave
movsl
adc
into
mov
mov
mov
rorl
repnz
mov
cmp
lods
cmpsl
iret
xchg
outsb
rolb
mov
rolb
mov
jle
lret
jne
movsl
jge
ja
popa
gs
test
sbb
jae
xor
mov
add
mov
flds
mov
aaa
jp
mov
xor
mov
aam
sub
cmpsb
mov
adc
jb
mov
insb
jge
add
outsl
setg
mov
and
sbb
adc
lock
sub
pop
scas
add
mov
fimuls
push
add
das
or
or
mov
mov
sub
fwait
std
add
addb
movsb
out
inc
add
outsl
addb
pop
pushf
orl
das
fwait
xchg
shl
xor
or
mov
jb
mov
mov
add
sub
add
mov
sahf
xor
mov
jl
adc
mov
add
mov
inc
xor
insb
mov
mov
add
out
iret
mov
lret
mov
cmp
mov
out
clc
or
xchg
lock
loope
icebp
mov
arpl
mov
add
aas
insb
loopne
mov
xchg
sti
ftst
jecxz
loope
push
jge
xchg
pop
dec
sbb
pop
cmp
jmp
daa
jae
repnz
dec
mov
pusha
add
adc
mov
sub
mov
dec
lcall
add
mov
imul
xor
lods
outsl
add
mov
pop
loopne
mov
add
lea
inc
es
mov
arpl
rolb
mov
cld
add
adc
mov
testb
xor
or
js
add
or
mov
add
aam
hlt
adc
rolb
mov
jbe
call
lret
lods
mov
sbb
add
mov
xchg
sub
xor
mov
or
imul
add
in
stos
xchg
cli
xchg
test
cmp
sbbl
dec
jmp
sbb
add
mov
shll
inc
add
add
ffree
add
dec
in
flds
add
cmc
and
mov
lea
jp
add
add
fucomi
mov
mov
icebp
imul
or
movsl
aad
fwait
imul
jno
add
gs
aam
add
inc
lret
add
mov
adc
jg
xchg
sub
pushf
mov
pop
pop
icebp
cwtl
out
add
pushf
test
inc
add
cmp
fcmovb
add
sbb
jecxz
add
in
or
mov
movsb
test
add
outsl
mov
mov
mov
pop
jno
jbe
test
add
cltd
mov
xor
push
cmp
xchg
add
cmpsb
jne
push
cmp
cmc
cwtl
dec
jmp
test
add
and
mov
pop
pop
mov
xchg
mov
test
add
add
fsubr
roll
mov
add
int
add
mov
and
mov
mov
add
cmc
fidivs
pushf
cwtl
jg
push
rolb
addb
sub
cmpsb
sbb
pushf
dec
pusha
add
mov
cmp
push
add
ss
add
mov
push
inc
popa
loopne
mov
mov
mov
movsl
inc
sub
stos
push
bound
mov
pushl
add
add
add
lea
aaa
xchg
mov
inc
add
mov
add
pop
hlt
mov
mov
rcrl
mov
lret
stos
push
test
iret
fisubrs
push
add
repnz
mov
add
sti
int
sub
lahf
mull
mov
iret
cmc
dec
mov
sti
or
add
or
ficoml
mov
rcrl
add
mov
mov
add
jmp
inc
add
outsb
or
mov
mov
mov
aad
lea
repnz
and
mov
mov
push
mov
call
or
icebp
push
negl
insl
clc
adc
bndstx
sbb
icebp
lret
add
mov
addr16
pop
mov
push
cmc
xchg
in
cmp
sbb
xchg
xchg
xchg
popa
mov
sbb
stc
test
push
add
adc
lods
add
int3
pushf
pop
xor
movsl
sbbl
add
inc
test
es
xchg
mov
push
jno
sbb
pop
cltd
daa
or
js
into
xchg
xchg
add
scas
xchg
mov
shl
aas
out
sub
push
cs
dec
test
cli
inc
jp
mov
add
jo
mov
bound
mov
mov
pop
in
mov
and
mov
add
cmp
mov
mov
add
add
and
push
or
push
aad
add
aam
aas
dec
daa
mov
push
mov
les
add
inc
mov
pop
add
mov
push
or
add
dec
and
dec
xchg
pop
add
xchg
into
and
push
add
ret
movzbl
stos
mov
mov
or
mov
test
add
add
add
add
or
popf
testb
fsub
ret
bound
mov
arpl
push
xchg
enter
mov
or
repnz
aas
mov
mov
mov
mov
inc
adc
mov
addr16
icebp
mov
xchg
mov
mov
movsl
les
add
clc
xor
add
add
add
add
or
pop
xchg
push
mov
inc
inc
mov
add
inc
aaa
in
notb
xor
mov
icebp
es
iret
mov
ljmp
mov
xor
mov
daa
push
add
adc
jle
mov
mov
data16
xor
add
sbb
fmul
sub
aas
popl
add
add
mov
mov
xchg
in
cmpsb
cmp
add
or
add
ficompl
mov
leave
push
cmp
adc
aaa
stos
dec
mov
jnp
xor
mov
add
add
adc
dec
mov
ror
imul
mov
outsb
imul
mov
mov
arpl
sbb
lock
jmp
pop
stc
into
pushf
push
add
cmc
repz
cs
mov
inc
imul
mov
test
push
outsl
jmp
daa
push
push
push
jne
fistl
inc
movsl
mov
mov
imul
add
aas
arpl
xor
add
mov
std
cmp
and
sub
inc
jo
mov
xor
mov
add
fidivrl
or
mov
in
notl
push
xchg
jl
cwtl
add
mov
add
jno
iret
dec
mov
mov
xor
adc
mov
cli
ljmp
mov
adc
ret
pop
add
mov
pop
or
aad
int3
xchg
add
mov
scas
push
addr16
jns
insl
dec
cmp
stos
mov
xlat
push
cli
xor
xchg
lea
fwait
cmp
scas
sbb
xlat
mov
scas
adc
mov
mov
add
scas
les
push
add
pop
addr16
add
xlat
mov
sub
filds
mov
lret
imul
add
ss
or
push
loope
add
mov
mov
repnz
enter
mov
or
int3
jne
lods
loopne
mov
xchg
ret
jle
add
add
stos
mov
lods
and
mov
mov
rorl
xchg
ja
xor
in
sahf
xchg
xchg
mov
fiadds
add
jbe
lret
inc
clc
inc
adc
and
mov
pop
sub
mov
and
adc
mov
and
mov
mov
fadd
call
mov
mov
mov
aad
push
addb
inc
fsubr
mov
add
sub
addb
xchg
add
add
mov
pop
pop
or
out
add
and
jl
inc
jnp
jb
mov
add
xchg
repnz
shl
dec
in
push
lea
pushf
jp
push
repnz
mov
aam
add
lcall
push
imul
inc
adc
lret
ss
xor
and
into
jge
add
fldlg2
mov
dec
jmp
faddl
sub
cli
addr16
arpl
jae
and
jb
mov
and
xor
add
push
rolb
mov
je
xor
mov
mov
cmp
repnz
add
push
pop
mov
push
les
jb
mov
pop
cltd
shld
add
aaa
sahf
mov
adc
mov
repz
daa
ljmp
pop
mov
jmp
jo
mov
mov
das
std
lcall
js
mov
notb
push
repz
ficoml
lahf
sub
scas
into
out
push
daa
pop
loopne
mov
jb
mov
movsl
sbb
fmulp
imull
test
or
mov
cwtl
or
pushf
pop
movsb
xchg
mov
test
and
outsl
in
test
rolb
mov
push
dec
inc
movsb
sub
xchg
cli
sub
dec
push
aam
dec
sbb
jae
add
test
jb
mov
xchg
or
lret
dec
pop
data16
inc
int3
mov
add
sbb
add
mov
rcrl
rolb
adc
mov
clc
add
mov
sahf
repz
insb
das
push
add
insb
push
mov
mov
add
push
add
ret
rolb
mov
hlt
dec
xchg
test
sub
mov
es
jnp
pushf
jle
aaa
insl
iret
pop
out
inc
add
in
add
mov
add
addb
outsl
jns
add
mov
jno
push
add
fdivrl
pop
enter
aad
clc
mov
mov
sbb
add
sub
addb
push
ds
adc
mov
test
mov
pop
xchg
daa
jne
repnz
in
test
push
loop
mov
inc
insl
out
mov
add
xor
mov
dec
push
mov
mov
rolb
out
in
push
jo
mov
add
das
mov
lds
add
adc
lods
or
sub
add
loop
mov
test
mov
xchg
and
push
and
addb
jo
mov
add
dec
test
inc
repz
add
add
add
mov
mov
push
pop
jb
mov
div
add
rcrl
movsb
push
mov
inc
in
push
iret
insl
addb
es
out
add
mov
add
mov
mov
add
mov
add
add
movsl
mov
in
les
int3
addr16
mov
adc
mov
shr
lret
jae
or
rorl
rolb
mov
repnz
mov
pop
pop
xchg
xchg
mov
ja
mov
sbb
and
std
mov
or
jb
mov
cs
mov
cltd
jge
shrl
rcll
mov
pusha
add
and
sbb
lods
pop
das
insl
lahf
push
addb
xor
sub
mov
add
add
pop
xchg
or
stos
sti
addb
rcrl
xor
es
mov
mov
sub
push
or
xchg
mov
pop
dec
ljmp
sub
mull
and
mov
add
sbb
cwtl
pop
xlat
rolb
mov
push
bound
mov
mov
mov
rcll
mov
xlat
and
or
xor
inc
mov
add
inc
add
dec
cmp
cli
pop
movl
dec
sbb
push
add
jmp
aam
mov
stos
or
cmp
xchg
pop
mov
das
push
add
mov
cmp
or
mov
inc
sub
fcmovnbe
sbb
mov
gs
push
aad
call
xchg
pop
repz
add
jmp
inc
and
mov
push
add
xchg
out
hlt
sbb
fwait
push
sub
add
jp
add
mov
test
mov
add
add
add
ficomps
mov
add
dec
ss
test
scas
je
mov
loop
mov
xor
push
rolb
mov
mov
mov
and
add
loope
push
dec
imul
cmp
out
cmpsb
xlat
scas
jg
lahf
and
mov
addb
dec
inc
add
jmp
and
mov
mov
dec
jge
jbe
es
stc
movsb
ret
fisttpll
pop
aam
cwtl
pop
pop
arpl
lea
insb
out
push
pop
fisttps
cmc
insl
clc
push
icebp
pop
push
clc
testl
mov
mov
movsl
lds
or
scas
and
pop
sub
rolb
sahf
stos
adc
sahf
cmp
dec
stos
test
pop
arpl
or
sub
xchg
sub
das
aas
test
mov
mov
add
or
push
pop
rolb
ficoms
mov
mov
xor
push
aam
test
out
std
inc
call
mov
xchg
sbb
pusha
add
jg
faddl
add
in
ret
mov
mov
jnp
cld
jno
sti
repz
rolb
mov
jge
lods
aaa
arpl
ds
or
adc
rcr
lahf
sub
lcall
outsl
out
in
ficomps
je
mov
mov
stos
shll
sub
add
add
mov
pusha
add
push
iret
xchg
ds
iret
stos
pop
pop
dec
test
mov
std
push
add
mov
dec
lock
mov
sub
add
add
dec
or
xchg
js
mov
mov
addr16
test
cmpsl
ror
and
sub
sub
mov
lret
mov
pop
dec
daa
mov
out
sti
fldenv
bts
aad
mov
add
add
jne
xlat
push
movsb
xchg
ss
xchg
ds
add
mov
lahf
mov
push
add
mov
bound
mov
push
sub
addb
push
pop
psubw
cli
inc
fnstsw
cwtl
sbb
add
mov
xor
cwtl
ret
mov
call
sti
fistpll
sti
loopne
mov
and
jo
mov
push
add
rolb
sub
xchg
inc
add
jns
lahf
pop
cmpsl
xchg
add
mov
adc
xchg
loop
mov
imul
add
add
push
add
add
cmpl
sub
aaa
add
test
inc
rolb
mov
mov
arpl
cmp
add
adc
add
mov
add
imulb
mov
dec
inc
in
sbb
lret
test
pop
jns
cld
aaa
push
inc
add
add
out
scas
addb
popa
sub
mov
fdiv
enter
mov
cmpsl
call
mov
mov
faddl
andl
add
mov
loope
add
in
add
dec
mov
mov
mov
js
and
add
pop
cmp
sub
int
in
in
jl
push
ljmp
pop
jmp
mov
cmp
xor
xor
mov
xchg
cmpsl
mov
mov
lds
add
pop
inc
add
add
push
or
arpl
add
outsb
pop
sbb
pop
addb
jne
int
xchg
mov
nop
add
mov
repz
cmc
inc
add
leave
call
mov
in
push
mov
push
xor
mov
mov
add
jae
sbb
adc
mov
add
mov
push
add
mov
aas
pop
cmp
dec
mov
add
lcall
push
rorl
pop
fwait
jmp
jbe
xchg
and
add
and
ficoml
fldl
add
or
pop
pop
pop
lret
cmp
add
pop
in
pop
fiaddl
add
sahf
cmp
sbb
addb
cwtl
push
sbb
or
add
ret
sti
mov
test
addb
es
incl
push
and
jb
mov
fsubrl
add
push
or
cmp
lahf
sub
mov
cmc
test
xor
aaa
mov
adc
mov
mov
dec
push
xor
mov
pop
push
loopne
mov
out
mov
icebp
xor
mov
add
sahf
leave
adc
int3
adc
mov
or
divl
pop
mov
mov
mov
imul
cs
dec
mov
add
cmc
cmpsl
cmpsl
and
mov
xchg
pop
cltd
jbe
scas
addb
pop
in
ss
repz
int3
jo
mov
jne
add
inc
xor
aaa
push
xchg
dec
insl
mov
add
push
mov
ficoms
inc
inc
add
pop
rolb
outsl
mov
jmp
jge
add
xor
mov
push
add
add
rorl
cmc
mov
inc
hlt
bound
mov
pushf
pop
mov
sti
xchg
mov
jns
imulb
in
nop
add
leave
leave
aad
adc
mov
lahf
push
jp
pop
mov
lahf
inc
outsb
jno
pop
jle
mov
mov
enter
mov
jge
xchg
pop
sub
xchg
pop
out
repnz
ljmp
ret
or
inc
sub
mov
lea
fnstenv
outsl
js
inc
jbe
rolb
push
insb
jno
mov
add
mov
mov
mulb
pusha
add
pop
pop
ret
xbegin
pop
aaa
addb
test
add
add
jmp
push
add
cmpsb
cmpsb
in
add
ja
mov
xchg
cltd
mov
mov
bound
mov
sahf
push
aaa
cmpsl
push
jle
aam
sbb
push
adc
mov
icebp
aad
push
push
push
jne
arpl
and
sub
and
mov
jo
mov
xor
mov
icebp
popf
push
xchg
fadd
add
add
mov
stos
pop
mov
repz
jns
push
xor
add
lret
repnz
lahf
add
stos
movsl
pop
jnp
lret
icebp
in
cmp
repz
inc
adc
sti
mov
outsb
lret
mov
in
into
jo
mov
popl
daa
sub
sbb
test
ficoms
xrelease
cltd
outsb
scas
mov
xchg
push
add
or
add
addb
xor
adc
mov
mov
js
call
mov
add
mov
ficoml
add
add
add
fs
mov
rolb
mov
mov
sbb
cli
insb
dec
fiaddl
mov
pop
mov
mov
outsl
mov
xchg
push
cmc
inc
add
ljmp
add
sub
mov
push
lock
mov
iret
sti
cs
das
mov
jmp
or
rolb
xor
mov
inc
lock
rcr
test
add
or
ljmp
scas
jecxz
add
shll
and
mov
cmp
mov
dec
jo
mov
inc
aaa
pop
fcmovne
dec
mov
and
lods
mov
dec
aaa
frstor
add
mov
cmp
cmp
rolb
mov
insb
repnz
dec
mov
call
cmpsb
mov
aad
pop
xor
mov
inc
lds
and
lea
lods
xlat
push
inc
jmp
mov
push
outsl
push
pop
sub
sub
pop
inc
or
mov
mov
inc
pop
cmpsb
xor
mov
adc
data16
add
arpl
add
sbb
lds
xor
pusha
add
cmp
inc
add
mov
push
test
add
std
xchg
add
jp
pop
sbb
xor
mov
lret
dec
cmc
mov
int3
out
test
mov
pop
inc
sub
add
mov
mov
mov
daa
hlt
aam
pop
fists
add
jno
sbb
add
je
add
mov
loopne
mov
shrl
shl
adc
mov
cmpsl
xchg
mov
add
mov
mov
arpl
data16
pop
adc
mov
mov
mov
leave
sbb
nop
add
or
lahf
pop
out
xchg
out
add
add
fcoms
mov
push
add
xor
add
add
mov
mov
fcom
out
hlt
mov
xchg
jmp
cmp
je
xchg
mov
mov
sub
ds
push
aam
pop
aad
push
add
fs
add
add
ds
or
and
add
mov
xlat
fnsave
add
pop
sarl
aam
adc
mov
or
je
inc
iret
inc
add
mov
or
add
push
jmp
sub
adcl
fs
inc
push
sbb
push
je
inc
xor
mov
add
pusha
add
xchg
add
mov
pop
int
test
jg
add
mov
inc
idiv
ret
addl
cwtl
das
out
push
sahf
fs
mov
out
jle
enter
add
mov
mov
or
negl
in
icebp
cmp
rorl
add
add
xor
mov
mov
adc
mov
add
mov
insl
insb
mov
bound
mov
add
rolb
mov
scas
out
sahf
pop
movsl
leave
mov
daa
and
lahf
cld
cmp
jl
add
aam
cltd
lret
cmp
jno
es
addb
add
mov
mov
sub
mov
mov
loop
mov
add
out
rolb
mov
mov
rolb
mov
ljmp
or
rcll
mov
arpl
add
adc
add
fcoms
dec
rorl
cmp
sbb
nop
add
add
sbb
scas
jle
mov
ret
cmp
scas
xor
mov
jp
mov
je
rorl
xchg
rorl
nop
add
inc
add
jecxz
mov
sub
test
pop
pop
rolb
rolb
mov
or
cli
cwtl
pop
jecxz
into
xchg
inc
add
ljmp
adc
mov
aas
sub
sti
syscall
cmc
lods
flds
sub
add
call
mov
inc
flds
add
mov
jnp
dec
push
cs
mov
push
add
mov
sbb
dec
cmp
xchg
xchg
pop
imul
cltd
cltd
stos
icebp
dec
cwtl
addb
inc
enter
fwait
mov
mov
fisttps
cs
mov
mov
push
sbb
mov
test
jnp
mov
sub
xor
loopne
mov
add
mov
or
mov
add
mov
adc
inc
mov
loopne
mov
sub
add
inc
mov
inc
pop
push
add
dec
mov
xor
mov
mov
mov
in
add
fsubrs
or
jae
push
add
mov
xchg
add
insb
jge
mov
mov
mov
inc
cmpsl
std
mov
mov
ret
cwtl
cmp
mov
mov
aaa
mov
mov
in
jmp
rcll
jbe
mov
cmpsl
mov
sbb
mov
adc
sbb
dec
xchg
fisttpl
loop
mov
mov
mov
mov
add
sub
addb
xor
mov
pop
push
fildl
push
mov
mov
ret
lods
insl
dec
rolb
mov
adc
inc
sti
adc
xor
mov
clc
rolb
movsl
mov
aam
addb
dec
dec
mov
xchg
stos
and
jns
push
dec
movsb
mov
sub
jl
popf
outsl
fimull
roll
push
mov
fcom
add
dec
pop
out
push
pop
xor
std
outsl
mov
lock
mov
popf
dec
out
and
add
add
or
pushl
add
bound
mov
inc
ds
cmp
ds
jp
inc
flds
add
sub
jg
hlt
xchg
int3
shr
adc
mov
xor
out
outsb
in
imul
pop
cmp
test
fdivl
mov
sub
add
lret
pop
ljmp
or
inc
mov
scas
pop
cmp
dec
xchg
or
xor
mov
icebp
xlat
sbb
dec
lods
cmp
inc
and
rcll
mov
sub
mov
mov
xchg
jno
pusha
add
idivb
pop
ss
stc
rolb
mov
es
push
std
xor
mov
mov
xchg
inc
or
add
cmpl
and
cmp
in
xchg
mov
sti
jbe
ljmp
cmc
fsubr
ds
mov
xchg
pop
mov
pop
add
mov
dec
or
push
jns
push
adc
fcompl
sub
push
add
popf
and
push
popa
lret
sub
mov
mov
ja
sub
xadd
stc
xlat
pop
push
add
in
pop
sub
imul
mov
sahf
or
out
lret
shll
mov
gs
add
dec
mov
mov
xor
pop
sahf
jbe
push
mov
pop
mov
jle
mov
mov
arpl
mov
mov
fstpt
add
xor
cltd
mov
mov
and
inc
pop
xor
mov
adc
bound
mov
cmp
pop
push
dec
pop
xchg
rolb
in
push
add
pop
rolb
mov
in
add
cmpsb
and
mov
and
mov
daa
mov
xchg
mov
mov
mov
add
add
cld
cmp
add
lea
repnz
or
mov
adc
pop
pop
push
out
stos
pop
xor
clc
loopne
mov
sti
jg
xchg
add
mov
test
or
mov
and
push
jp
xor
mov
mov
pop
add
mov
jno
loope
add
xchg
pop
inc
push
jecxz
iret
cmpsl
addb
pop
pop
xchg
rolb
mov
add
lret
xor
mov
xlat
xchg
and
mov
mov
jg
xchg
add
or
das
lcall
adc
mov
xchg
fldt
inc
add
push
add
mov
xchg
push
or
add
out
add
mov
add
mov
mov
mov
mov
shll
and
mov
popf
pop
outsb
jae
push
jo
mov
add
push
jmp
lahf
xchg
mov
xor
mov
mov
push
rol
add
cmpsb
mov
js
mov
fnstenv
adc
mov
dec
xor
fisubs
lods
jns
rcrl
mov
add
dec
mov
movsl
pop
fs
je
push
add
lahf
pusha
add
mov
adc
mov
add
xlat
int
push
adc
mov
add
cmp
clc
adc
xchg
fldl
lock
and
mov
mov
cmp
mov
fdiv
cmp
sbb
mov
add
js
fists
mov
add
mov
out
sub
add
rolb
call
add
mov
jbe
fldt
adc
mov
mov
outsb
adc
add
adc
mov
leave
ds
xor
and
mov
adc
mov
push
mov
fcompl
add
sbb
mov
and
cmpsb
push
add
nop
add
or
pop
inc
add
add
xchg
add
mov
mov
jnp
push
je
or
jns
mov
mov
and
mov
incl
arpl
or
roll
loop
mov
jne
jnp
stos
lret
xor
mov
mov
lret
orl
add
call
add
mov
mov
mov
pop
in
cmp
mov
dec
or
mov
fisubrs
sbb
mov
out
notl
push
call
mov
popf
addb
xchg
shll
rcrl
pop
sub
pop
movb
add
inc
add
mov
sbb
mov
and
in
sub
add
mov
mov
mov
adc
addb
fsubl
add
pop
xchg
jns
shll
stos
fcomp
add
sub
dec
out
add
add
push
sbb
in
and
mov
add
cmp
inc
lret
sbb
dec
xchg
and
jle
pop
dec
mov
or
add
fdivrl
ljmp
mov
mov
mov
add
out
push
xor
dec
mov
push
scas
xor
test
inc
sahf
inc
rolb
mov
in
gs
stc
es
loope
leave
cmp
ds
stc
sub
xlat
pop
mov
jp
add
pop
ret
mov
mov
push
loope
mov
in
xchg
les
jbe
sbb
es
jmp
push
mov
in
and
sahf
dec
lahf
stc
les
jg
mov
insb
sub
push
add
mov
and
lret
push
cmp
or
lea
test
sbb
ds
sub
mov
mov
jo
mov
sbb
adc
jne
scas
repnz
aam
faddp
jle
icebp
popa
les
add
xor
cmp
leave
js
mov
mov
inc
add
mov
adc
aaa
mov
outsb
repnz
mov
outsb
fimuls
ja
push
add
xchg
nop
add
add
add
addr16
call
es
lcall
mov
xchg
cld
jmp
push
test
clc
xchg
xchg
daa
imul
sub
cmp
sub
push
xchg
addb
int3
jns
add
pop
jp
call
sub
out
xor
mov
js
dec
xchg
in
cli
pop
push
je
btr
cmpsl
adc
mov
jmp
mov
add
mov
mov
add
cmpsb
or
add
shr
add
rolb
incb
pop
mov
mov
loopne
mov
xchg
push
xchg
add
sbb
cmp
add
mov
fildll
add
out
sub
rcll
jle
pop
and
and
add
iret
inc
loope
pop
xchg
add
mov
movsl
jne
out
mov
add
cmp
aas
lods
pop
sbb
je
es
mov
clc
sub
xor
mov
push
pop
xor
mov
popa
or
hlt
pop
aas
adc
mov
hlt
mov
mov
aas
fwait
cmp
mov
lea
adc
mov
push
cwtl
adc
mov
sahf
pushf
adc
in
mov
fs
mov
adc
lcall
mov
add
scas
lods
push
xor
mov
push
xchg
add
xchg
cmp
jnp
or
es
add
mov
icebp
cltd
movsb
pop
cmc
je
sbb
sub
cmp
add
lret
fwait
sub
or
mov
mov
xchg
ficoml
cli
loope
add
into
mov
add
mov
fcmovb
pop
subl
scas
cwtl
lret
lret
roll
aad
pop
cmc
and
mov
test
jmp
sbbl
fildl
dec
cmpsb
mov
mov
mov
cmp
pop
pop
addr16
stos
popf
mov
add
add
adc
mov
in
mov
mov
xor
inc
xor
rolb
mov
mov
test
vpmulhuw
add
popa
jecxz
add
je
xchg
int3
iret
and
sbb
cmc
in
push
sarl
add
add
jns
xchg
stos
add
mov
or
pop
add
lea
maskmovq
cmpsb
mov
add
in
add
nop
add
mov
cmp
ds
scas
popl
ficompl
jp
repz
mov
stc
jp
add
xchg
cld
lods
add
mov
addb
fucomi
std
fimull
fldt
xchg
add
insl
test
addb
daa
rorl
and
mov
imull
jo
mov
mov
add
pop
aam
lret
sbb
incl
and
and
loopne
mov
pop
sub
fimull
push
add
mov
add
mov
aam
lods
push
add
pop
lods
add
xchg
mov
mov
dec
inc
call
fstps
inc
mov
jp
insb
add
add
mov
in
in
jmp
dec
xchg
add
mov
add
cmpsb
out
add
leave
mov
jecxz
fchs
add
iret
mov
mov
jg
mov
sub
xor
mov
ds
xchg
dec
and
sub
shll
add
pop
test
push
adc
mov
mov
xchg
add
lret
sbb
mov
add
nop
add
ss
and
add
xor
icebp
dec
xchg
xchg
add
add
scas
mov
sbb
xor
test
jl
lods
xor
mov
inc
pop
and
mov
mov
xchg
add
lcall
jmp
add
popf
xchg
dec
lcall
gs
mov
add
into
lcall
push
xor
pushf
lahf
pop
push
scas
test
xchg
add
mov
ds
push
and
mov
in
movsl
stc
popf
cmpsl
jmp
cmpl
lcall
dec
sbb
mov
pop
comiss
icebp
call
aas
xchg
add
imul
mov
add
cltd
loopne
mov
adc
mov
hlt
movsb
mov
loopne
mov
sbb
lock
ret
and
and
push
jmp
js
scas
fsubrs
dec
nop
add
fmull
sbb
cmp
sbb
test
jbe
push
js
dec
push
inc
hlt
push
ss
cmp
add
mov
rolb
push
dec
ret
dec
push
cmp
mov
or
cwtl
and
mov
cmpsl
incb
call
add
mov
mov
in
add
dec
daa
imul
aam
scas
mov
sti
xchg
addr16
out
pop
xchg
das
icebp
adc
pop
xor
stos
cli
imul
dec
aam
stc
and
add
jae
arpl
clc
jmp
sti
sbb
dec
jae
cli
call
ret
lahf
rolb
imul
fs
in
inc
out
out
ret
insl
xchg
add
add
in
add
mov
mov
xor
subl
mov
add
mov
xchg
pushf
in
inc
scas
mov
pop
push
repnz
and
mov
fwait
xchg
push
les
mov
dec
icebp
pop
ljmp
push
mov
and
mov
jg
add
jle
add
adc
in
jmp
pop
nop
add
repnz
cmpsl
fsubs
push
lds
or
jmp
stc
pop
sbb
ret
mov
adc
lret
adc
dec
lock
jmp
add
aad
adc
rorl
iret
cmp
mov
sbb
jge
inc
or
repz
mov
sbb
mov
popf
jae
mov
mov
dec
adc
jge
rolb
mov
add
mov
enter
jl
push
add
inc
add
out
jge
pop
pop
fwait
mov
add
inc
cmpsb
nop
add
nop
add
and
push
sbb
cli
jns
add
mov
mov
adc
mov
in
lret
jl
sub
test
mov
pushf
jmp
fs
dec
icebp
jle
or
pop
add
jb
mov
jl
add
cld
jnp
popa
sub
dec
iret
mov
cmpsl
sub
push
lret
fwait
push
push
out
shrl
jecxz
out
repz
adc
mov
mov
mov
fnstenv
int
rolb
mov
jmp
jbe
int3
mov
rolb
mov
inc
sahf
xlat
push
add
xchg
bound
mov
fidivl
sub
and
mov
inc
daa
jo
mov
add
pop
mov
push
sub
push
jp
mov
sbb
add
and
adc
mov
mov
add
push
push
add
out
sahf
push
outsl
ss
cli
addb
out
push
icebp
mov
pop
ss
test
test
enter
add
xchg
xchg
mov
mov
cmp
add
fstp
jno
push
add
sub
jecxz
rcll
fstps
jno
out
and
add
mov
pop
sahf
rolb
rcrl
mov
outsl
pop
call
xchg
roll
add
push
mov
mov
add
addb
out
inc
mov
cld
insl
adc
test
add
cli
movb
add
and
mov
mov
ror
addb
daa
adc
ljmp
jle
xchg
or
add
inc
ror
push
add
and
mov
push
dec
adc
mov
lcall
adc
mov
cmp
rolb
mov
jmp
popf
stos
sbb
add
push
add
repz
and
out
popa
push
orl
jne
add
xchg
out
stos
sti
cmp
mov
jge
movsl
pop
fistpl
push
add
mov
mov
jp
sub
adc
pop
mov
mov
mov
xchg
dec
notl
dec
std
insl
std
clc
int3
mov
mov
mov
movsl
and
lods
test
adc
cmpsb
sbb
mov
add
je
add
mov
enter
mov
add
pop
test
dec
push
add
push
add
mov
mov
mov
add
mov
cli
and
mov
dec
xor
mov
ljmp
add
pop
dec
addb
mov
fcomi
stos
into
sbb
mov
or
mov
xchg
add
orl
mov
in
scas
inc
pusha
add
lea
sub
jecxz
add
add
pop
push
mov
loopne
mov
call
into
inc
add
mov
mov
mov
add
pop
mov
lds
cmp
mov
inc
add
adc
push
aaa
xchg
add
out
or
mov
cmpsl
jg
push
push
out
and
mov
adc
mov
jns
sub
jle
ds
add
ja
lcall
push
add
push
add
sbb
rorl
ljmp
jbe
ljmp
xchg
add
cmc
adc
mov
jo
mov
xchg
add
ficoml
mov
jo
mov
pop
pop
mov
loopne
mov
mov
mov
push
loop
mov
add
add
shll
cmpl
int
xor
add
stc
and
aam
in
mov
inc
add
add
xor
pop
push
call
add
hlt
aad
outsl
pop
cwtl
mov
stos
in
lea
div
rolb
mov
bndldx
cld
mov
pop
pusha
add
mov
mov
ficoms
je
push
cs
xchg
xchg
ss
mov
push
loop
mov
jae
jnp
aas
and
mov
push
add
sbb
rolb
sbb
out
pop
shl
mov
fistl
aaa
clc
je
jno
dec
lods
fimull
push
xor
lods
xor
jmp
add
nop
add
mov
add
or
jl
lods
add
ss
ret
into
cmp
mov
mull
mov
fsubrs
stos
adc
mov
add
mov
add
add
xor
mov
xor
mov
mov
add
and
sbb
mov
mov
mov
ja
addr16
jmp
dec
inc
lock
mov
xchg
hlt
push
sti
daa
xor
rolb
popw
adc
loope
add
add
mov
dec
or
shll
xchg
sbb
out
mov
add
dec
mov
add
adc
mov
or
dec
repnz
jl
jmp
outsl
xchg
push
mov
mov
add
lods
mov
dec
aam
mov
sbb
scas
fadds
insl
pushf
sbb
or
add
jb
mov
jl
lds
push
outsb
lahf
hlt
pop
sub
add
test
sub
fiadds
cltd
add
mov
add
push
das
out
aas
pop
rorl
push
sub
mov
xor
mov
add
ret
rcrl
add
add
insl
or
xor
mov
jle
mov
sahf
fisttpl
and
pushf
add
in
mov
pop
repz
arpl
mov
sbb
dec
mov
jnp
loopne
mov
aad
dec
addl
stc
fidivl
out
add
sbb
mov
ror
mov
or
pop
jle
addr16
or
mov
test
mov
mov
mov
xchg
add
add
ja
pop
int3
add
xchg
add
mov
xchg
mov
gs
adc
mov
add
stos
adc
push
nop
add
fcompl
add
pop
imul
call
add
add
mov
push
add
mov
cwtl
leave
test
popf
insl
add
mov
fists
lods
shll
xchg
add
insb
xchg
pop
leave
cmp
mov
pop
mov
add
dec
outsl
pop
xor
adc
mov
dec
or
nop
add
add
imul
into
mov
std
mov
jnp
xor
stos
and
mov
cli
push
add
jp
push
pushf
outsb
inc
repnz
sbb
mov
imul
addb
or
lcall
pop
daa
mull
xor
mov
stos
les
mov
imul
dec
jle
dec
and
mov
push
testb
out
mov
mov
iret
ja
pop
mov
imul
pop
test
mov
sbb
pop
imul
fdivrs
out
int
sub
mov
inc
add
xchg
lods
jmpw
mov
test
add
mov
or
add
mov
cmp
addb
mov
mov
loope
aad
cmp
sbb
aaa
push
outsb
sub
add
jg
aaa
jg
jmp
arpl
sub
jecxz
int
mov
sti
sbb
add
bound
mov
fwait
push
jo
mov
sbb
addb
jecxz
push
fldt
push
mov
fcmovu
or
add
mov
cmpsb
xchg
add
add
add
test
mov
cld
pop
pop
addb
dec
test
sbb
fxch
jbe
add
xchg
test
xchg
add
cmp
sbb
orps
lods
testl
push
mov
lods
das
jecxz
mov
mov
sti
or
mov
lds
xchg
add
out
add
pop
imul
mov
pop
nop
add
cmpsb
and
mov
mov
in
imul
scas
cmpsl
sbb
xor
call
jmp
xor
mov
rolb
mov
test
pop
sbb
not
sub
mov
add
lock
push
aad
mov
mov
mov
add
dec
mov
inc
add
add
xlat
add
mov
jp
push
mov
mov
mov
mov
jmp
daa
lret
push
add
add
add
adc
mov
xor
xchg
add
xchg
push
xor
cmp
pop
lret
imul
mov
leave
aaa
xchg
push
add
rcll
add
adc
add
addb
imull
mov
cmpsb
mov
xchg
pminsw
sahf
push
lret
mov
bound
mov
xor
mov
ret
pop
call
cmpsb
jne
add
cmc
in
jo
mov
add
mov
aas
xorl
pop
push
rolb
jmp
lret
mov
lea
mov
test
add
mov
xchg
add
pop
mov
mov
imul
xchg
cmp
fistl
dec
push
cltd
jmp
add
neg
adc
or
scas
nop
add
test
add
add
mov
and
mov
jnp
push
sbb
fidivrl
in
nop
add
or
mov
mov
add
adc
stc
test
fs
hlt
mov
sbb
subl
mov
add
add
mov
dec
imul
movsb
dec
jge
pop
sti
pop
adc
mov
mov
pop
inc
insl
adc
mov
mov
adc
mov
iret
insl
movsb
test
add
xchg
xchg
out
in
daa
dec
sub
pop
inc
lcall
add
sbb
dec
sbb
fidivs
mov
gs
cmpsb
mov
repz
or
fs
fwait
or
push
adc
mov
add
test
sbb
jnp
loop
mov
stc
lds
xor
int
inc
add
xlat
lcall
out
pop
dec
pop
loope
jl
inc
cmpsb
inc
sbb
or
fwait
jg
addb
xchg
xor
push
or
add
pushf
inc
mov
add
popa
movsb
testl
mov
add
or
add
sbb
mov
or
add
mov
add
sub
mov
add
sbb
repz
push
mov
aaa
mov
fistpll
mov
mov
dec
aam
add
pop
push
cmp
ficoms
lcall
adc
or
testl
jge
pand
stos
negb
add
ds
mov
mov
push
test
push
fdivr
jg
mov
mov
or
add
insb
test
orl
add
stc
jae
popf
push
jp
mov
es
movsl
int
push
scas
daa
dec
clc
dec
roll
add
pop
mov
adc
aas
sub
dec
add
mov
adc
mov
mov
mov
shll
addb
push
cwtl
xchg
or
scas
mov
add
jge
fsts
repnz
pop
cmp
into
fldcw
into
jge
pop
daa
mov
inc
lea
add
enter
xchg
sbb
add
sti
push
cld
lret
mov
add
or
jmp
or
pop
ret
or
and
pop
scas
jp
leave
aam
out
add
xchg
lcall
les
roll
add
jge
add
push
js
inc
add
inc
add
push
mov
add
movsb
test
add
cmpsl
and
mov
pusha
add
cwtl
rep
call
mov
xchg
movsl
aad
xchg
ja
scas
push
push
push
sub
ret
pop
lods
hlt
je
pop
mov
mov
filds
scas
pop
mov
fimuls
xorl
push
xchg
fsubl
push
mov
add
jb
mov
pop
cmp
and
or
insb
dec
clc
ja
push
xchg
inc
add
ljmp
popa
xchg
mov
or
pop
and
mov
pop
fisttpll
data16
mov
icebp
lock
add
dec
out
out
inc
pop
out
jae
sbb
cmp
add
jge
dec
int3
repnz
mov
dec
xor
or
dec
cmp
adc
mov
and
add
lock
arpl
pop
dec
or
add
pop
enter
addr16
add
jecxz
std
jecxz
scas
into
in
dec
sahf
lods
cmp
mov
pop
ljmp
xchg
or
mov
mov
loopne
mov
inc
and
add
inc
out
inc
xchg
jle
int
dec
jo
mov
test
add
mov
mov
mov
js
das
push
mov
add
mov
jecxz
pop
ret
push
add
imul
fwait
pop
dec
pop
test
add
or
int3
outsl
rorl
movsl
adc
and
mov
sahf
push
ds
pop
add
xor
cmp
ficomps
xor
mov
or
pop
sbb
mov
xchg
pop
jp
cmpsl
jecxz
test
pop
inc
add
inc
add
add
mov
in
ss
mov
lret
add
mov
mov
add
add
cmc
jg
xlat
dec
pop
dec
aam
fwait
pop
popf
xor
mov
shrl
fidivrl
sbb
add
add
mov
mov
pop
fdivrl
outsb
icebp
cli
stos
stc
sbb
add
push
fbstp
push
add
aad
jp
cmpsl
or
jmp
dec
sub
mov
jno
add
rcpps
jne
add
mov
add
add
arpl
fistpl
rolb
mov
imul
mov
leave
jle
mov
pop
push
xchg
dec
insb
sbb
fmuls
xchg
addr16
outsb
loope
xor
aas
loope
out
loop
mov
mov
mov
rolb
jns
xchg
bound
mov
repz
test
daa
hlt
nop
add
or
add
mov
pop
adc
mov
test
icebp
jb
mov
push
add
and
xor
fildll
sbb
add
mov
and
neg
jne
cmp
cmp
sahf
addr16
gs
or
push
add
bound
mov
clc
dec
mov
add
cmc
and
mov
push
add
movsb
add
outsl
jge
inc
push
fists
pop
add
add
push
dec
aam
fmulp
cli
jns
popa
mov
hlt
mov
push
iret
sub
sbb
add
push
push
addb
pusha
add
cmpsl
cli
sbb
dec
scas
popa
and
mov
sub
mov
flds
mov
adc
mov
mov
ljmp
or
out
pop
hlt
add
xchg
dec
addb
mov
mov
mov
pop
testl
pop
mov
nop
add
movsb
test
add
sbbl
adc
xchg
add
mov
out
inc
push
push
xor
push
aas
jle
lods
cmp
add
bound
mov
add
mov
add
das
cmp
je
mov
pop
sahf
add
add
mov
cwtl
dec
insb
rolb
mov
mov
mov
out
movsl
or
add
xchg
sbb
sbb
sub
push
add
rolb
mov
mov
mov
mov
inc
or
rorl
ljmp
fldl
rolb
mov
mov
mov
lret
mov
mov
movsl
icebp
cmovae
mov
mov
add
loopne
mov
xor
mov
test
add
cs
repnz
or
mov
mov
add
ds
fstps
mov
jmp
push
xor
mov
and
lods
loop
mov
mov
sbb
xor
mov
fisubl
cli
push
add
or
pop
or
push
fucomp
pop
xchg
or
imul
out
pop
mov
add
xor
mov
lods
mov
lret
and
mov
add
std
jne
xchg
and
jge
out
and
push
icebp
mov
add
rolb
inc
into
sti
jl
sub
adc
mov
gs
fs
or
inc
add
mov
movd
ret
push
int3
xchg
rolb
mov
add
and
add
hlt
in
push
cmpsl
dec
pand
add
xor
mov
dec
cmp
ljmp
add
mov
mov
dec
fnstcw
flds
adc
or
imul
rolb
mov
mov
je
mov
dec
dec
mov
and
mov
xchg
add
inc
jle
testl
lea
mov
mov
add
mov
mov
mov
cmpsl
mov
sub
mov
jne
add
mov
addr16
mov
cli
lods
sbb
sub
mov
sub
add
or
pop
cmp
mov
mov
pusha
add
mov
jmp
adc
mov
cmp
add
pushf
push
gs
xchg
sar
cltd
in
or
dec
sub
fmull
dec
cs
xchg
xchg
sub
inc
rorl
mov
xchg
ja
adc
mov
jl
jge
in
push
cs
add
push
in
or
add
push
ljmp
mov
mov
shll
add
cwtl
or
add
add
movsb
dec
insw
pop
mov
iret
mov
js
lret
mov
scas
inc
add
mov
inc
test
addb
mov
jl
sbbl
or
dec
inc
fidivrs
push
mov
mov
xchg
cmpsl
pop
mov
inc
cmp
mov
add
xchg
sbb
aaa
sub
pop
mov
add
mov
loopne
mov
clc
leave
orl
imul
lahf
out
mov
mov
add
scas
mov
adc
addb
adc
mov
add
mov
adc
loopne
mov
add
sub
sbb
jg
add
mov
popl
mov
adc
inc
in
stos
and
push
or
scas
mov
imul
and
mov
lret
mov
pop
cmpsb
orl
add
mov
fadd
rolb
mov
lret
mov
add
fdivl
stos
cs
xor
mov
adc
inc
into
cmpsl
adc
addl
adc
mov
mov
mov
test
mov
rolb
mov
fsubr
xchg
iret
cmp
out
addb
push
scas
push
test
hlt
insb
mov
dec
and
mov
pop
push
add
div
xor
mov
adc
mov
lods
mov
mov
pop
imul
lods
loope
add
stos
dec
pusha
add
push
pop
je
in
leave
push
lods
push
setp
aad
mov
and
adc
les
repnz
mov
rolb
and
mov
mov
push
add
jg
adc
leave
xor
mov
stos
loope
jnp,pn
cmpsl
push
adc
jns
mov
mov
mov
out
ja
les
add
mul
mov
inc
adc
das
dec
pop
rolb
mov
add
cmc
mov
add
ss
add
movsb
mov
mov
add
dec
loop
mov
add
jae
xchg
test
push
mov
popa
mov
out
pop
jmp
push
inc
addl
pop
jne
mov
and
push
out
push
ret
out
mov
mov
add
fnstenv
xchg
add
push
iret
mov
dec
es
add
mov
add
mov
arpl
int3
inc
add
imul
or
xchg
rolb
mov
add
arpl
scas
addb
push
xchg
idivl
jbe
jno
mov
adc
push
popa
push
jmp
mov
addb
xchg
push
into
outsl
mov
mov
aas
lcall
mov
mov
or
ja
imul
sbb
arpl
add
mov
push
add
aaa
in
enter
adc
mov
out
lret
xor
mov
cmpsb
dec
jb
mov
add
jo
mov
fdivs
mov
jmp
inc
out
jle
mov
in
mov
lock
mov
cmp
add
add
pop
lods
aas
dec
jno
add
sbb
add
xchg
push
add
dec
push
push
sub
push
nop
add
stc
inc
addl
cmp
or
in
nop
add
pop
into
cmp
mov
sbb
push
mov
mov
mov
mov
push
pop
sti
add
mov
inc
daa
or
inc
jmp
pop
notl
sbb
jl
jns
add
jo
mov
hlt
cwtl
ljmp
pop
lret
cmp
fmull
add
mov
shrl
add
push
mov
push
add
mov
mov
insb
push
lcall
inc
out
jle
stc
jne,pn
xchg
gs
inc
add
jbe
addr16
sbb
das
outsb
lret
int3
jbe
into
cmpl
add
lret
mov
mov
addb
add
jne
add
sbb
popa
enter
inc
les
ljmp
mov
mov
sbb
pop
dec
ja
in
call
fsts
lcall
mov
add
les
sub
xchg
add
push
cltd
xlat
js
fs
nop
add
add
or
popf
out
clc
orl
mov
and
lret
outsb
pop
cmpsb
inc
add
cld
jne
jle
push
or
pushf
xchg
int3
loop
mov
add
mov
movsb
dec
sub
or
add
push
xor
fistps
mov
mov
outsl
in
test
sub
test
dec
lods
icebp
lcall
imul
int3
stc
aad
add
add
sbb
iret
sbb
insl
outsb
sbb
add
and
ret
sub
mov
push
or
inc
add
bound
mov
mov
mov
add
or
add
mov
lret
xor
cmp
add
pop
test
add
add
sub
lods
or
test
out
pop
ja
gs
iret
daa
mov
mov
push
mov
xor
bound
mov
adc
sbbl
cld
xchg
push
inc
movsb
call
add
cmc
add
mov
loope
mov
inc
add
xchg
insb
in
incl
mov
or
scas
xor
test
lds
dec
jnp
jnp
sbb
add
adc
add
sbb
xor
dec
dec
mov
cmpsl
sbb
push
scas
xchg
mov
mov
sbb
lea
xchg
out
xchg
or
cmp
push
sub
ljmp
in
mov
mov
add
movsl
pop
push
add
lds
mov
xchg
inc
mov
enter
add
ds
repnz
mov
sub
add
adc
push
xchg
and
mov
addb
popf
dec
mov
xor
in
cmp
nop
add
imul
xchg
add
add
mov
cmpsl
inc
loope
test
fucom
test
sub
mov
mov
into
lods
add
icebp
ljmp
inc
add
jp
imul
add
incb
add
and
mov
sbb
add
xor
sbb
jp
test
cmp
loopne
mov
inc
in
mov
fwait
sbb
and
pop
jl
aad
jecxz
das
jnp
insb
into
ret
jecxz
int3
decb
and
in
fildl
filds
jecxz
test
add
add
add
sub
dec
inc
outsl
or
and
lock
xchg
add
or
inc
mov
data16
add
aaa
fsubrs
add
or
add
add
movsl
loop
mov
or
adc
mov
and
inc
add
rolb
mov
addb
jo
mov
add
add
fwait
es
cs
jle,pn
cli
lods
mov
cmp
sbb
mov
cmp
and
mov
add
mov
or
add
or
rolb
mov
add
insl
xchg
rolb
mov
mov
add
loope
dec
addb
wbinvd
div
add
loopne
mov
and
stos
and
imul
add
idivb
cmc
lahf
pop
sti
sbb
loopne
mov
cmp
cmp
in
or
aam
adc
jnp
mov
add
add
mov
adc
jns
and
out
cmpsl
or
roll
sbb
dec
mov
sbb
ss
mov
outsl
aas
gs
mov
xlat
sub
and
bound
mov
fildl
or
mov
enter
repnz
mov
test
mov
mov
fnstenv
sub
je
mul
jp
movsl
mov
mov
and
mov
mov
std
sbb
lods
inc
cld
pushf
mov
loop
mov
mov
xchg
dec
addr16
mov
lea
out
dec
cld
ja
xchg
shll
ja
cmp
or
dec
bound
mov
add
pop
test
mov
jp
mov
push
jp
fnstsw
dec
mov
mov
pop
push
aaa
loopne
mov
and
mov
add
icebp
mov
stos
aam
loop
mov
push
nop
add
das
xchg
loop
mov
or
push
mov
and
add
mov
dec
inc
lods
lret
insb
push
test
add
add
xchg
mov
mov
fistpl
jne
add
add
js
iret
sub
add
xchg
iret
mov
mov
ss
add
ret
add
push
rolb
daa
jae
es
add
add
push
add
jns
popf
stc
mov
mov
pop
adc
mov
mov
mov
repz
add
push
add
nop
add
sub
inc
push
add
mov
and
cmp
add
mov
jecxz
lods
push
scas
mov
xchg
inc
data16
xchg
xchg
sbb
jge
mov
pop
pushf
cld
and
mov
mov
mov
add
dec
mov
test
inc
add
and
xlat
sbb
add
mov
roll
add
add
sbb
push
add
mov
insl
in
icebp
dec
add
addl
mov
mov
push
lds
mov
je
and
mov
add
mov
mov
cwtl
icebp
jg
repz
or
and
add
addb
sbb
outsb
mov
add
loopne
mov
or
xchg
stos
pop
call
push
sbb
mov
mov
rolb
mov
in
pushf
leave
push
shrl
sbb
addb
inc
out
out
add
aad
jnp
mov
mov
inc
and
jbe
mov
outsb
pop
mov
mov
cmp
sbb
mov
mov
xchg
leave
jle
aaa
fs
mov
xchg
jecxz
lods
ret
stos
mov
push
test
mov
mov
add
mov
add
jns
pop
aad
clc
iret
and
mov
mov
add
push
jae
sbb
ret
dec
or
cmp
add
call
lahf
inc
aas
ret
sub
rolb
dec
lret
fldt
rolb
out
jge
fidivs
add
aad
adc
mov
rcll
pop
mov
jb
mov
repz
fdivrl
cmp
cmp
xor
mov
mov
shll
mov
cmp
xor
add
mov
lods
fcomip
cmp
mov
cld
mov
pop
popf
add
mov
mov
ret
sub
iret
xchg
lar
mov
in
adc
mov
add
add
std
jle
mov
adc
add
js
ret
iret
outsb
cmp
iret
test
add
mov
add
mov
popa
outsl
aas
and
mov
mov
mov
imul
adc
mov
jle
and
push
add
jne
mov
mov
call
fistpll
outsb
jbe
inc
std
dec
cmp
gs
inc
jo
mov
popa
inc
add
jecxz
aam
and
out
cltd
mov
pop
and
mov
and
cmpsl
mov
mov
add
lahf
push
sahf
xchg
bound
mov
lds
out
pop
mov
lock
pop
imull
add
movsb
pop
mov
sbb
dec
mov
add
mov
data16
dec
dec
negb
sbb
out
inc
push
repz
mov
fnstenv
push
loop
mov
xchg
lods
sub
mov
sub
dec
jns
outsb
cwtl
aas
insl
js
and
add
xchg
clc
add
mov
ljmp
sub
mov
imul
jae
mov
lock
icebp
push
add
stos
sbb
dec
cmp
fs
das
popf
dec
sub
and
mov
mov
ljmp
dec
sub
add
mov
insb
fucomip
mov
add
mov
jae
push
mov
add
insb
mov
mov
repz
lds
sub
add
push
pusha
add
aam
xchg
mov
inc
cmp
sar
sub
dec
pop
mov
add
int3
pusha
add
jno
add
jae
mov
mov
dec
inc
xlat
dec
inc
cs
fucomp
xor
xorl
insl
adc
jnp
sub
xchg
dec
ret
add
rolb
test
add
add
mov
push
je
leave
ss
ss
add
loope
jl
adc
xchg
add
cmc
sub
jp
popa
adc
mov
stos
mov
inc
push
adc
add
insb
or
dec
fdivs
add
add
enter
aaa
adc
mov
int
xor
mov
adc
ds
and
add
mov
in
xchg
mov
add
into
ja
cmp
test
mov
mov
je
addb
jb
mov
icebp
pop
imul
jmp
push
into
mov
popa
add
mov
test
xor
mov
fsubrl
es
fiaddl
add
