add
mov
add
sbb
incb
add
sbbl
mov
cmc
sbb
xor
das
in
int
add
xor
int
add
cmp
xor
cmp
xor
dec
mov
jbe
cs
xor
dec
gs
adc
jp
add
rolb
or
xor
xchg
ss
scas
inc
add
xor
jmp
int
mov
or
jmp
ja
sbb
xor
add
out
clc
testb
pop
xchg
mov
jecxz
lods
jge
add
add
cmp
movb
js
xchg
and
shll
add
jno
push
pop
idiv
jb
test
ficoms
add
push
pop
movb
mov
and
mov
out
push
add
ret
jp
add
mov
mov
cld
test
xchg
pop
mov
jnp
pop
fadds
test
fcoms
pop
addr16
add
add
inc
add
ljmp
push
adc
imul
xor
aaa
dec
mov
stos
inc
adc
arpl
jmp
pmuludq
subl
xchg
sub
add
cltd
adc
or
das
xorl
or
dec
add
jo
xchg
jmp
jns
enter
fadds
clc
inc
add
fiadds
xor
cwtl
loope
add
sbb
jle
dec
sbb
and
jo
sbb
lods
pop
in
sbb
pop
cld
clc
xchg
mov
jle
in
mov
xor
dec
stos
mov
sbb
jecxz
fstpt
mov
fwait
stos
or
add
pop
push
sbb
imul
dec
jne
jp
mov
or
mov
dec
mov
add
bound
rol
jns
dec
mov
add
xchg
mov
outsl
inc
add
enter
add
add
pop
fsubs
add
add
add
loopne
loop
int
add
enter
das
cmp
add
enter
addb
lcall
pop
cmp
add
call
cltd
sub
rorl
dec
gs
int3
ret
fcomps
xchg
or
sbb
jl
cwtl
sbb
add
mov
addb
cwtl
js
mov
dec
jp
xchg
add
jge
popa
rorl
lahf
sub
add
mov
es
sub
arpl
bound
std
loope
lret
insl
cmp
push
pop
sar
xchg
imulb
sbb
bound
jae
push
hlt
or
ljmp
stc
in
cmp
popa
add
fs
and
adc
xor
adc
xchg
shlb
arpl
xlat
cmp
add
addl
mov
add
addl
mov
orw
mov
and
div
xchg
inc
add
fidivs
insb
imul
sub
fisubs
cld
fcomip
mov
into
rclb
pop
bnd
lods
push
cmp
jge
out
push
mov
push
arpl
cmc
fbstp
add
inc
xchg
mov
sub
gs
xor
sub
repz
sahf
in
mov
add
movb
loope
add
enter
movb
ret
ret
orl
add
dec
or
cmp
inc
jnp
hlt
popa
mov
push
pop
jp
enter
mov
pop
in
cli
repnz
cld
cltd
sbb
and
inc
rolb
clc
enterw
outsb
adc
cli
sbb
xchg
stc
adc
pusha
add
dec
or
pop
popa
xchg
xor
movsb
repz
mov
add
cmp
scas
leave
push
add
and
add
push
push
test
push
shl
data16
fucomip
adc
push
bound
outsl
xchg
aam
test
loope
cli
fwait
movsl
out
cld
mov
aad
jo
and
push
fildl
and
loop
add
movb
jne
add
inc
lds
or
mov
sbb
ja
pop
or
or
test
inc
add
add
pop
bound
aam
and
jge
jecxz
leave
push
fsubs
mov
add
cmp
push
add
inc
add
sti
lret
movsl
pop
mov
add
sub
lahf
cmp
mov
aad
inc
mov
mov
ret
add
xchg
in
sub
shl
insb
dec
addb
iret
dec
outsl
data16
inc
add
lret
addb
add
lods
shr
xchg
add
jnp
lret
test
pop
sbb
add
imul
add
aad
mov
nop
in
loope
pop
push
hlt
jbe
int
lods
das
and
sub
mov
test
pop
cld
out
addl
nop
pop
fdivr
imull
mov
push
push
pop
pusha
add
xor
push
push
add
rorl
rolb
jge
ret
inc
cmp
gs
add
xor
repz
ljmp
mov
add
xor
imul
aam
shll
test
into
mov
sub
fdivrl
mov
push
outsb
les
sbb
arpl
movl
jl
xlat
stos
aam
xchg
hlt
stos
rclb
push
add
push
cli
xor
pushf
das
inc
add
ret
add
xchg
jns
mov
add
cmc
mov
mov
mov
sub
mov
out
xchg
ja
sbb
movsb
push
je
cld
mov
push
fwait
lcall
or
sub
push
out
jl
push
sti
add
mov
ret
adc
mov
aad
mov
mov
jl
pop
pop
xor
mov
iret
sub
incb
cwtl
pusha
add
or
lock
into
jl
mov
add
pop
les
mov
jne
nop
lahf
movsl
cmp
pusha
add
cwtl
add
jne
gs
mov
xchg
aaa
sub
dec
push
push
pusha
add
sbb
repz
enter
pop
subl
pop
daa
mov
push
repz
xchg
hlt
jne
in
or
out
xor
pop
insb
ss
inc
add
repnz
cmpl
cmc
popa
fisubs
scas
add
push
add
pusha
add
inc
add
push
inc
in
add
jo
xchg
lds
push
pop
int
cli
pop
push
sbb
mov
cmpsl
and
test
add
icebp
loop
pusha
add
pop
mov
int3
cltd
mov
fidivl
mov
mov
les
mov
fs
scas
mov
call
scas
push
fsts
mov
add
int
movb
inc
add
cmp
jmp
testl
or
inc
sbb
cltd
insb
ret
data16
pop
into
ds
jbe
sbb
pop
xchg
xchg
insl
hlt
inc
add
fistps
cmp
sub
clc
xor
sbb
mov
xor
add
lcall
orl
add
adc
aad
data16
push
mov
sub
push
push
push
cld
call
sub
mov
imul
es
ss
lea
push
push
push
call
cmp
je
mov
lea
push
push
es
ds
push
jmp
icebp
cmc
nop
cs
lea
mov
or
and
or
xchg
lea
sub
xacquire
pop
add
mov
cs
push
push
lret
jmp
add
add
and
nop
loope
mov
mov
aas
push
push
cmp
xor
add
or
fbld
insl
pop
xor
pop
pop
loop
inc
jbe
lret
inc
add
jns
aaa
ja
add
add
cld
cmp
cmp
loope
das
sub
xchg
cmpsl
mov
jmp
stos
cld
lcall
das
sahf
pop
les
and
push
dec
and
ret
shlb
pop
mov
repnz
push
es
lcall
dec
or
add
add
add
mov
lahf
cmp
shlb
pusha
add
out
jne
fwait
std
add
popa
ret
loopne
mov
pop
shlb
out
gs
outsl
out
pop
lea
push
mov
pop
adc
enter
pop
out
jb
repnz
das
shl
add
mov
add
xchg
pop
dec
sub
out
pop
nop
inc
movb
mov
pushf
sbb
cmp
lahf
push
inc
and
inc
add
fwait
movsl
fistpl
sbb
shll
mov
inc
add
call
adc
int
sub
negl
sub
mov
mov
arpl
int
and
dec
push
test
outsl
outsl
clc
cmp
pushf
fidivl
or
addb
int
fldenv
add
mov
movsl
push
inc
push
outsb
leave
add
xor
add
push
es
data16
mov
jp
inc
add
add
jbe
pop
pop
out
or
cltd
popf
push
mov
adc
jnp
insb
shr
jo
jg
or
sbb
lret
fnstenv
add
mov
movsl
int
sbb
add
jne
mov
push
mov
lcall
fwait
inc
add
fcompl
movsb
mov
jle
sahf
dec
bound
aaa
mov
mov
stos
aam
mov
xchg
or
aam
sbb
lahf
cmp
cmp
jle
add
add
insl
xchg
pop
addb
xchg
xchg
ja
fistps
push
jmp
movsl
nop
adc
ror
bndldx
add
sbb
mov
rcll
push
loope
xor
test
push
add
out
dec
jns
loope
add
cmpsb
xlat
mov
aaa
xchg
cld
aam
adc
add
cmp
sarl
add
aam
mov
mov
sub
dec
pop
lret
aaa
dec
cmp
lret
mov
xor
cwtl
out
sbb
sub
dec
push
jo
push
lret
and
jmp
mov
std
in
rcll
add
and
mov
sub
test
jmp
push
addb
es
fiaddl
arpl
add
mov
mov
bound
shll
adc
add
add
inc
in
add
jbe
jo
ss
add
lods
and
je
dec
int3
push
add
add
insl
ljmp
sub
mov
addb
mov
stos
lcall
cmc
inc
mov
xchg
jecxz
in
or
not
push
fidivs
pop
iret
jge
dec
imul
fs
pop
imul
adc
es
movsb
out
add
adc
fucom
xchg
fs
inc
adc
dec
orl
sub
scas
leave
pusha
add
mov
adc
mov
pop
add
add
in
sub
out
mov
xor
mov
adc
loop
loop
jle
mulb
add
jge
xchg
inc
pusha
add
add
movsl
cmp
xchg
js
js
out
shll
xlat
pop
or
decl
dec
popa
mov
aam
add
imul
bound
fisubl
xchg
nop
bound
pop
jle
rolb
cmp
into
stc
movb
jg
mov
or
cwtl
fbld
xlat
mov
lods
xchg
mov
mov
sbb
and
sub
jp
ret
stos
push
dec
and
cltd
adc
mov
jae
add
add
jno
add
jp
xor
repz
cmc
adc
pushf
sub
add
inc
lret
xchg
pusha
add
iret
shlb
icebp
stos
cs
cwtl
popf
popf
fs
cs
jmp
mov
cmp
cwtl
repz
mov
and
jge
pop
dec
test
adc
loope
daa
mov
mov
mov
stos
aaa
xchg
sub
les
push
cmp
cld
dec
cwtl
inc
sub
repz
adc
ret
add
mov
insl
jl
add
add
add
mov
add
sub
out
sbb
jne
adc
fcomps
movsl
stos
mov
sub
pop
jmp
out
add
xchg
mov
data16
cmp
gs
out
jno
stos
inc
add
push
pop
pop
add
cwtl
nop
cmp
icebp
roll
xchg
cmp
or
adc
out
sbb
addb
xor
dec
sbb
pop
and
inc
add
je
in
fwait
aaa
sbb
popl
popa
xor
je
fadd
add
mov
fcomip
mov
call
scas
add
popf
add
add
xchg
xchg
mov
ficompl
and
lret
std
loop
add
push
sub
cwtl
dec
shlb
enter
pop
dec
jge
aad
std
mov
jmp
shr
add
fcoml
fcmovbe
loopne
testl
jb
cmp
adc
mov
mov
test
xor
push
mov
and
mov
jge
iret
stos
inc
add
mov
cmc
dec
push
push
inc
add
pop
pop
xchg
out
inc
add
adc
ret
mov
inc
add
mov
in
cltd
out
mov
call
movsb
stc
dec
hlt
inc
add
xor
mov
and
xchg
mov
jp
xchg
iret
xchg
pop
loop
jp
push
jno
repz
jns,pn
pop
ja
outsl
mov
dec
xor
js
push
mov
sbb
mov
les
ja
or
or
cmp
imul
fxch
xor
movsl
mov
and
fdivrs
mov
sub
fcoms
es
out
sbb
pushf
lret
and
jge
fadds
mov
push
cwtl
fwait
cmp
rclb
popa
pop
testl
xchg
daa
popa
pop
push
imull
mov
lret
dec
jge
lds
sub
cmc
mov
or
add
mov
add
lcall
movsb
and
ss
jnp
bound
mov
arpl
rcl
movsl
sbb
and
les
divl
adc
jns
push
insl
sbb
dec
cwtl
xchg
push
mov
add
jp
lea
add
inc
xor
jae
pop
jae
in
or
adc
add
pop
mov
inc
add
add
mov
or
in
jne
push
ficomps
out
cmp
mov
int3
fiadds
xchg
or
cs
movsl
popf
stos
jb
add
fists
movsl
add
pop
add
nop
in
pop
insl
add
xchg
pop
pop
xchg
insb
add
pop
and
into
mov
xor
addb
lods
xchg
push
xor
xchg
cmp
jmp
sbb
add
scas
neg
xchg
dec
push
cmp
add
lret
jbe
add
xor
negb
dec
sub
xchg
aaa
mov
in
sarb
jecxz
sub
ljmp
popf
push
loope
hlt
jbe
jecxz
dec
adc
inc
daa
dec
jo
mov
add
mov
adc
add
iret
xchg
lods
loope
mov
add
fdiv
dec
inc
lock
sahf
jge
clc
daa
rcll
add
sub
shll
add
sahf
pop
and
outsl
mov
pop
gs
sub
scas
lcall
stos
rolb
lods
xor
add
arpl
pop
aam
hlt
shrb
decl
xchg
sub
enter
repnz
sub
inc
add
push
xor
sarl
test
icebp
push
cwtl
mov
clc
jg
add
mov
addb
test
in
add
or
inc
add
cmc
arpl
add
stos
jns
jno
jp
push
lods
cwtl
adc
loop
xchg
pop
pusha
add
cmp
fldcw
push
xor
mov
sub
dec
adc
push
ret
or
mov
pop
lcall
mov
lock
int
repz
mov
les
sahf
jo
fbstp
cli
mov
or
add
mov
mov
cmpsb
push
jno
repnz
add
sub
insl
jb
push
out
add
cmp
mov
imul
sbb
shl
out
add
or
into
adc
lods
xor
jne
rclb
js
je
cs
cmpsb
sbb
or
add
inc
add
sub
and
cs
push
lcall
into
cmpsl
pop
sbb
and
sub
lods
mov
test
ret
add
fdivp
scas
cmp
test
in
das
out
dec
dec
js
dec
mov
inc
add
pop
xchg
daa
notb
stos
andl
jne
push
jmp
ja
cmp
dec
pop
out
insl
cwtl
addb
gs
mov
loopne
stc
mov
out
enter
xchg
adc
dec
mov
es
xchg
outsb
pop
add
inc
add
ja
xchg
das
cmp
popf
test
or
out
add
push
sub
or
xor
add
lret
or
mov
or
xchg
add
sbb
mov
inc
xchg
xor
add
cmpsl
lret
push
jae
dec
inc
or
bound
cltd
cmp
add
add
je
pop
std
ret
add
mov
pop
inc
add
jle
adc
insl
addr16
add
pop
enter
popf
lds
pop
jge
adc
stos
shl
fnstcw
pop
ret
xchg
jmp
adc
add
std
in
aam
or
or
mov
mov
fmull
jle
mov
push
add
test
mov
repnz
and
ret
mov
sbb
out
pop
pop
adc
stc
adc
fwait
bound
pop
jno
add
enter
scas
pop
nop
mov
add
mov
add
xchg
in
sub
add
lds
imul
xor
push
rcll
sbb
adc
mov
sbb
dec
icebp
test
xchg
push
inc
mov
hlt
pop
and
cli
movb
sarl
das
je
fisubs
call
xor
fwait
or
push
aad
loope
repz
xlat
ret
dec
lods
popf
pop
dec
addb
and
add
mov
xlat
fisubs
lods
lea
shr
mov
call
and
aad
cwtl
pop
adc
test
mov
xor
sbb
dec
call
add
lock
mov
jl
push
sbb
loope
inc
add
gs
sbb
push
ret
rcll
mov
out
sub
lock
pop
push
das
dec
push
cs
sub
add
stc
push
mov
mov
push
add
xchg
in
js
and
sub
mov
popf
xor
push
push
lret
mov
out
jg
cwtl
in
sti
or
sub
add
daa
loop
nop
pop
icebp
cmp
or
addb
movnti
push
push
xchg
sbb
ss
xchg
pushf
sub
mov
and
call
add
cmpsl
adc
outsl
addb
jbe
mov
inc
add
hlt
movsl
mov
mov
js
or
add
stos
hlt
call
jbe
sbb
scas
inc
mov
sub
out
mov
repnz
sar
xchg
test
call
pusha
add
jb
dec
cmpsb
dec
pop
mov
mov
shll
add
cmpsl
enter
mov
out
pusha
add
repnz
or
and
out
loopne
inc
add
add
scas
pop
jbe
fwait
imul
nop
test
mov
push
outsl
cld
mov
add
cmc
sub
jb
lds
fcoms
add
pop
push
call
dec
sbb
pop
jmp
pop
cmp
sbb
inc
add
xchg
lret
ficoml
ret
shl
inc
add
pop
add
dec
in
popa
fdivp
fisubs
add
mov
cmp
cmpsb
test
loopne
push
sub
in
add
xor
sbb
adc
lret
outsb
sub
jae
pusha
add
xchg
out
movsb
push
int3
inc
add
add
pushl
pop
cli
addb
cmp
ds
add
fcoms
ja
scas
cmc
insb
cld
jns
or
fstpl
imul
addr16
add
outsb
or
add
in
dec
popa
mov
add
add
das
push
add
add
rolb
add
or
fdivrl
sbb
inc
jnp
jle
lahf
test
jecxz
pop
dec
add
pop
in
sbb
iret
mov
pop
adc
pop
push
cmpsb
pop
aad
insb
adc
ret
cmp
pop
lds
push
add
fiaddl
sub
mov
lock
sbb
mov
or
dec
mov
adc
push
bound
xchg
psrlq
jge
fwait
adc
or
in
sub
and
sub
insb
fsubs
movsb
jmp
aas
pop
add
fldenv
pop
sbb
add
or
ds
jne
mov
fisubl
pushf
push
repnz
fnstsw
fbstp
sbb
sbbl
scas
inc
mov
sbb
add
add
inc
add
mov
dec
outsb
ljmp
add
mulb
stos
mov
xor
push
addr16
pop
or
pop
shrl
mov
fidivl
insb
int3
inc
add
add
mov
test
add
add
shll
add
xchg
sbb
xchg
or
mov
dec
lcall
lcall
xor
mov
jge
aam
jg
and
cs
cmp
inc
add
mov
mov
push
pushf
mov
mov
push
dec
lret
pushf
in
out
movb
aaa
je
mov
repnz
mov
mov
popf
movb
cs
insl
and
add
pusha
add
xor
frstor
adc
cmp
dec
or
je
jns
inc
mov
jg
mov
jg
and
daa
movsl
lods
dec
arpl
mov
pop
xchg
scas
push
movsl
lds
ss
sarl
outsb
add
pop
and
ds
mov
mov
cmp
push
movsl
adc
scas
sub
dec
mov
das
jge
push
and
clc
je
out
mov
lcall
add
or
cmc
push
sub
lods
jb
add
dec
addb
push
sbb
add
adc
inc
das
mov
scas
sti
fbld
pop
idivl
rorl
xlat
and
outsl
sti
sub
sub
add
in
shrl
jne
sub
jmp
add
movsb
adc
mov
rcl
or
pop
div
sub
mov
add
mov
lods
xchg
fucomi
ljmp
dec
push
push
cltd
adc
sbb
add
mov
push
push
adc
or
add
repnz
add
xchg
lret
mov
mov
cltd
mov
add
jno
sti
pop
lods
aad
push
sbb
psllq
xchg
pusha
add
add
mov
xchg
sbb
jae
je
push
in
pop
mov
cmp
movb
popa
test
in
xor
lds
inc
mov
push
sbb
test
and
stos
and
nop
dec
jmp
push
lcall
add
call
pop
jae
shrb
add
das
test
in
mov
xor
mov
ret
mov
add
push
add
imul
xchg
nop
frstor
or
cmp
add
mov
sub
mov
rcrb
leave
mov
fstpt
xor
addb
into
inc
add
mov
out
xor
sub
adc
jae
sbb
cmc
mov
into
xlat
fiadds
jne
jno
fistpll
mov
add
or
mov
int3
test
jbe
mov
sbb
xchg
mov
and
xchg
sahf
inc
add
push
repnz
cmp
ret
insb
lcall
cmc
lods
xlat
sub
cmp
mov
push
in
cwtl
lret
in
inc
xchg
jp
cs
xchg
mov
sbb
cmp
shll
aaa
sbb
out
or
rclb
cmpsl
or
fcmovne
fstl
adc
roll
popa
cmp
inc
add
pop
lods
out
jns
xor
add
insl
ja
cli
and
outsl
mov
mov
sbb
repnz
push
pop
add
adc
mov
scas
mov
add
sbb
mov
inc
add
or
jg
addb
adc
gs
cli
fs
fsubrl
das
xchg
mov
cmp
cs
add
and
dec
xchg
std
mov
add
jg
mov
add
scas
cmp
loop
cwtl
add
cwtl
aam
fsubp
rcll
daa
sbb
inc
push
add
mov
push
fnstcw
js
xchg
sbb
int
stos
ret
xor
inc
xor
xor
add
lds
sbb
lods
insb
mulb
out
mov
mov
out
lahf
leave
dec
int
adc
mov
cltd
fisubrs
and
out
add
mov
add
lret
mov
xchg
clc
jecxz
add
in
cmp
pop
call
sub
decb
or
xchg
flds
insl
push
add
xchg
sbb
addl
call
imul
jo
mov
xor
lock
or
cmp
mov
sar
sbb
in
push
add
das
lea
or
dec
sub
add
loopne
jae
popa
repz
adc
jge
sbb
add
sub
add
in
test
lcall
in
clc
adc
add
pop
ret
mov
add
add
add
jl
test
sbb
imul
add
add
mov
xchg
shl
adc
fbstp
cltd
adc
dec
arpl
es
data16
xchg
adc
xor
movsl
lea
fistl
fwait
pop
dec
push
xor
cmp
dec
out
sti
daa
js
pop
push
aam
jbe
gs
ret
push
or
inc
add
ljmp
lods
stc
xor
in
iret
hlt
inc
add
sahf
cltd
jbe
rolb
fldlg2
inc
inc
add
xor
pop
into
adc
loop
mov
mov
sbb
ja
ficomps
pop
cmpsl
jbe
mov
inc
mov
add
loopne
sahf
adc
add
inc
cltd
push
lahf
cld
mov
xlat
jle
dec
outsl
pop
xchg
add
xchg
xor
loop
cs
sub
push
inc
push
mov
dec
add
mov
jmp
dec
add
inc
or
cmpsb
fisttps
jge
add
aas
test
jno
lock
insb
mov
pop
jmp
mov
mov
cmp
mov
in
push
jge
repz
arpl
rcl
hlt
lods
les
pop
aad
dec
jp
push
mov
jns
movb
add
jbe
pop
push
mov
sub
add
add
xchg
idivl
lock
and
rolb
push
mov
dec
pop
leave
dec
dec
xor
mov
xor
inc
loop
out
add
mov
pop
addb
mov
add
sub
and
fstp
jle
mov
lret
test
les
jmp
pop
in
and
idiv
test
push
mov
in
push
adc
mov
push
into
sub
test
push
fsubr
adc
add
xchg
mov
shrb
jnp
negl
imul
rolb
xlat
sbb
push
fists
dec
jb
in
jle
xchg
xchg
insl
aaa
inc
cmp
xor
mov
mov
mov
push
mov
or
xor
dec
mov
jg
jno
shrl
jb
out
flds
add
cmpsl
mov
pop
sarl
add
lret
ret
and
rcrl
fcmovnb
adc
addr16
inc
xor
push
fs
cwtl
jae
nop
adc
mov
imul
add
add
pop
insl
mov
sahf
loop
hlt
inc
movb
pushf
mov
scas
adc
add
pop
inc
int
cld
mov
add
aaa
mov
inc
cwtl
mov
add
mov
cli
cmp
jp
test
pop
mov
push
inc
add
pusha
add
jg
out
pushf
insl
xor
or
aad
push
les
ret
adc
mov
cwtl
ss
mov
jmp
call
push
repz
int3
fst
mov
mov
xor
cmovb
movsb
cwtl
popf
js
xchg
mov
scas
mov
sub
add
iret
push
sub
add
mov
jmp
add
jnp
imul
dec
in
lret
jae
mov
gs
push
dec
xchg
jbe
jae
and
pop
jnp
lahf
mov
lret
ret
add
adc
or
sbb
and
sbb
pop
mov
mov
or
dec
push
jnp
ds
xchg
inc
les
loope
mov
mov
pop
pop
pop
leave
jne
xor
sbb
mov
stc
loope
add
je
add
in
and
mov
xchg
loope
lods
add
cmpsb
pop
fnstsw
xchg
pusha
add
adc
sbb
lea
lahf
or
adc
andl
xor
add
ljmp
popf
mov
arpl
inc
add
mov
inc
add
cld
add
jge
push
rolb
jo
rcll
add
inc
add
inc
add
loopne
or
add
jmp
xor
xchg
mov
int3
les
nop
jne
mov
sahf
mov
dec
cmc
and
mov
lods
insb
adc
inc
idiv
je
loopne
pop
adc
cwtl
adc
jecxz
call
adc
std
push
mov
push
add
outsb
repz
popl
mov
jae
or
mov
jge
sub
loopne
das
xchg
xchg
in
pushf
divb
repz
js
dec
jg
sbb
mov
sub
add
bound
adc
jge
lcall
xor
cmp
jo
xchg
test
inc
xlat
and
push
mov
xlat
fdivr
jne
movsl
out
xchg
outsl
mov
sub
cmp
data16
rorb
bound
addb
fbld
xchg
adc
adc
jle
xor
cs
cmp
adc
or
xchg
into
or
in
cmp
lods
loope
test
or
sub
lea
jbe
cmp
or
inc
add
mov
int3
sbb
out
inc
add
or
lods
rolb
dec
mov
xchg
xchg
ret
es
mov
imul
cmp
mov
inc
add
test
rorl
gs
add
or
std
div
sbb
sub
xlat
and
add
loopne
pop
mov
sbb
sarl
in
cmp
dec
or
mov
mov
jae
fwait
lods
jnp
test
pop
bnd
add
jmp
add
pop
and
fisttps
cmpsb
loopne
test
and
pop
push
fs
push
ss
dec
les
dec
adc
xchg
jnp
mov
dec
inc
add
cwtl
ret
lret
fcompl
mov
popf
dec
xor
je
add
mov
popf
popa
xchg
mov
movl
das
int3
cmp
add
push
mov
mov
mov
repnz
cmpsb
or
std
out
repz
cmp
addb
add
icebp
enter
and
insl
dec
js
lahf
mov
lock
mov
shll
insb
dec
pop
cmpsb
and
xor
xchg
and
sbb
push
stos
xchg
mov
add
aas
dec
das
mov
loope
xchg
mov
insl
or
add
dec
xor
add
mov
add
and
add
xor
xchg
cmc
inc
add
mov
outsb
repnz
pop
jg
mov
aaa
out
movsl
pop
loop
xchg
jb
add
cli
mov
sbb
insl
pop
push
and
ret
aas
pop
mov
loopne
or
sahf
push
fwait
xor
pushf
xor
in
push
sub
adcl
add
jae
cmpsl
outsb
jmp
je
mov
jg
mov
lea
imul
add
sub
mov
add
dec
push
test
mov
dec
xchg
loopne
pop
mov
sbbl
out
popa
lret
int3
or
xlat
cli
outsb
pop
cmp
mov
push
shrb
add
add
lods
add
add
lock
stos
decl
lds
jge
ret
out
xor
xchg
sub
add
xchg
pop
pop
sti
add
lahf
addb
or
pop
hlt
add
sbb
xchg
push
rolb
add
jbe
or
dec
dec
rolb
loop
dec
bound
mov
out
enter
cld
lods
imul
fstpl
popl
rolb
call
xchg
push
sub
es
ljmp
mov
addb
in
call
sti
adc
xor
mov
repz
enter
int3
cmp
jge
and
pop
scas
pusha
add
sub
insb
movsb
not
sub
test
push
imull
ja
adc
mov
mov
push
add
pop
call
loopne
jp
pop
jle
add
fisttps
push
lcall
call
mov
fldcw
sub
inc
lock
cwtl
test
inc
add
mov
push
sti
push
xchg
nop
cltd
sub
xchg
cld
push
pusha
add
jb
add
das
pushf
push
mov
jecxz
fiadds
mov
push
lods
xchg
xor
rolb
movb
data16
add
add
mov
mov
xor
add
add
movsb
ljmp
lods
lahf
outsl
push
add
sub
xor
aad
subl
inc
add
push
adc
aaa
or
leave
rcrl
sahf
jns
popl
add
ret
mov
dec
sbb
xchg
les
cwtl
test
cwtl
cmp
je
xor
inc
lea
xchg
xor
into
mov
jl
inc
add
xchg
insl
dec
xor
cmp
popf
ja
imul
mov
add
cmpsl
icebp
sbb
add
add
sbb
js
add
imul
je
jbe
jmp
cmp
add
cmp
sbb
push
xor
xor
inc
add
mul
add
mov
jle
inc
add
add
pop
fdivs
lds
dec
cltd
and
jno
popl
mov
push
test
add
xor
add
call
jp
add
push
jmp
xor
and
lcall
add
sub
rorb
push
mov
cld
jne
mov
mov
jmp
mov
sti
clc
cmp
insb
dec
in
add
js
xchg
lds
add
sbb
jno
pop
pusha
add
add
pop
jb
xor
add
ja
rclb
movb
je
inc
add
mov
push
ss
orl
inc
add
loopne
xor
dec
adc
xor
pop
call
popa
push
data16
add
scas
mov
inc
add
and
cltd
ja
movsb
jle
mov
add
or
fbstp
adc
add
sub
das
les
push
push
add
jns
mov
enter
mov
ret
mov
mov
call
ja
inc
adc
inc
add
aas
test
pop
stc
sbb
push
add
mov
add
inc
daa
inc
add
adc
add
xor
sbb
xlat
mov
pop
jno
or
movsl
dec
stc
jo
divb
subl
mov
push
mov
cltd
mov
sub
add
push
add
stos
add
loope
fmull
fistps
adc
popf
inc
inc
add
fimull
fcom
popa
inc
jg
icebp
test
and
jno
push
xchg
push
fdivl
repz
mov
dec
jl
add
and
xchg
and
and
adc
add
xor
aam
pop
inc
add
push
fldl
daa
pop
pop
push
fsubs
inc
mov
xlat
adc
ljmp
push
sbb
sti
ficoml
fnstcw
ret
jb
add
xor
cwtl
inc
add
in
add
repz
mov
ret
inc
repnz
jno
out
cmp
fidivrl
test
inc
lods
push
in
inc
lret
dec
fidivs
add
or
adc
jbe
add
mov
and
jl
mov
pop
mov
add
dec
sub
add
push
add
mov
add
mov
fwait
push
mov
dec
mov
push
adc
and
add
jp
and
add
push
bound
cmpsl
das
out
jp
mov
mov
push
pop
addb
xorl
xlat
jmp
and
add
pushf
pop
das
in
das
outsl
test
repnz
pop
push
rorl
dec
out
pop
sub
push
cmp
push
push
mov
icebp
das
es
adc
mov
inc
jg
cmp
lret
data16
pop
sahf
mov
mov
mov
ja
imul
inc
add
push
add
out
test
sub
in
cltd
std
rolb
repnz
and
xor
and
rorl
sbb
daa
and
int
aaa
out
adc
mov
dec
insb
scas
or
push
mov
lds
repnz
outsb
rcrb
pop
decb
cld
mov
add
mov
push
jp
fs
clc
dec
dec
pop
test
inc
add
dec
pop
xchg
jge
mov
push
test
jge
dec
mov
add
mov
into
lea
addb
add
outsb
inc
add
sub
cltd
xlat
ror
inc
into
pop
mov
xchg
jge
aam
scas
push
sub
neg
sub
sub
add
cld
push
insl
mov
iret
gs
add
sbb
stc
ret
push
in
imul
xor
repz
xchg
mov
ljmp
add
push
add
add
in
push
mov
mov
add
pop
fwait
movsl
mov
adc
data16
or
and
mov
push
rolb
add
dec
xchg
mov
xor
lret
test
add
fdivs
jae
or
xchg
mov
mov
add
add
imul
add
insl
cmp
aam
add
aam
jo
add
inc
ficompl
out
cmp
and
xor
inc
add
in
jmp
ret
lods
sti
mov
or
in
cltd
adc
test
int3
rolb
xchg
sbb
xor
imull
add
mov
dec
mov
test
pop
adc
add
cld
inc
add
pop
arpl
pop
sub
vpcmpgtd
rolb
sbb
cmp
das
inc
add
push
xchg
nop
adc
mov
bound
push
inc
add
ret
pop
mov
pop
std
mull
fs
fildl
test
adc
gs
bound
iret
loopne
and
cltd
sbb
insb
ret
arpl
arpl
pop
gs
inc
add
add
inc
add
sbb
ljmp
push
add
add
mull
cld
gs
dec
cs
adc
mov
bound
orl
sarb
fnstsw
pop
and
fidivl
and
repnz
fs
adc
add
jecxz
mov
or
push
push
mov
pop
imul
jge
pusha
add
rorb
xchg
popf
rolb
pop
repz
cmp
stos
addb
lcall
mov
out
pop
sub
add
adc
lock
dec
mov
clc
js
bound
fcoms
insb
ret
adc
imul
daa
jmp
add
dec
mov
outsl
scas
imul
add
add
jno
cli
sbb
add
rclb
fsin
push
xchg
adc
mov
scas
adc
aad
call
add
add
sar
jo
add
ret
add
ret
icebp
sbb
ror
loopne
jecxz
mov
add
loope
push
xchg
mov
pop
sbb
and
cmp
dec
pop
jmp
repz
testb
mov
xor
cmp
sbb
add
nop
daa
aaa
and
daa
pop
sub
sub
sbb
dec
lds
out
cwtl
movsb
dec
dec
xchg
stos
sub
sbb
jg
sbb
stos
rolb
dec
stc
test
push
enter
xchg
out
add
gs
add
dec
inc
repz
loop
add
cld
pop
xlat
pop
mov
mov
icebp
lea
dec
scas
cwtl
mov
out
push
das
inc
es
dec
cmp
ljmp
testb
cwtl
mov
fsts
jmp
pop
or
mov
push
cmp
pop
rolb
sbb
aam
sub
mov
jecxz
rorl
dec
jo
lds
push
add
or
sub
movb
imul
push
mov
bound
cmp
and
loope
jbe
push
mov
cmpsl
xor
add
mov
test
mov
cs
sbb
sbb
add
int3
out
cltd
into
inc
add
arpl
jmp
push
bound
sub
rcrl
pop
idivl
pop
xchg
sbb
iret
pop
xor
add
jl
push
add
int
xor
mov
xchg
mov
inc
in
jo
push
pop
pop
add
lea
mov
repnz
lods
pop
xor
repnz
xchg
movb
lock
jle
ljmp
xchg
outsb
cmp
add
mov
dec
loope
or
jno,pn
xchg
adc
jo
xchg
test
cmp
mov
lods
add
dec
pop
push
sbb
sub
test
jb
movsl
push
and
jno
cmp
cmpsb
jae
aas
es
adc
mov
mov
fs
fs
scas
jno
mov
push
cli
and
icebp
or
mov
imul
ret
add
push
jns
loope
mov
stos
mov
fsubl
enter
mov
daa
sub
pop
cmpsl
testl
jno
movsl
xor
out
in
lahf
adc
loope
les
outsl
insb
jge
loop
leave
push
insl
adc
add
stc
adc
mov
clc
xchg
dec
sbb
jl
je
scas
lcall
in
test
add
loope
cmc
push
add
clc
insb
xchg
xor
es
xor
xor
addb
in
ss
into
dec
adc
pop
leave
hlt
or
add
mov
adc
jbe
add
push
mov
mov
pop
push
jbe
add
shll
fsub
sbb
adc
cmc
ror
std
mov
mov
sub
adc
sbb
inc
lods
mov
iret
lret
pop
std
jl
sub
sub
int3
xor
mov
inc
add
add
mov
add
mov
enter
ds
mov
lcall
cmp
and
add
add
cmp
push
mov
pop
movb
rcll
shr
pop
setb
jmp
sub
mov
sahf
cmpsl
loope
inc
add
mov
mov
arpl
daa
push
ljmp
cmp
inc
lea
arpl
test
push
fiadds
sbb
sbb
mov
movsb
cmp
mov
mov
adc
mov
add
jb
mov
push
in
push
mov
add
add
cmp
xor
aas
xchg
call
cltd
adc
ss
push
fsts
jge
cltd
dec
cwtl
leave
sub
adc
movnti
add
aad
inc
mov
pop
jl
int
push
leave
jmp
lcall
xchg
add
outsl
test
cwtl
sbb
sbb
fsubp
mov
icebp
jmp
cmp
push
fidivl
ds
fstp
fistps
cwtl
popa
jo
movb
and
andl
sbb
inc
add
dec
insb
push
sbb
movsl
push
pop
mov
lods
add
xorps
and
fisubrs
call
stos
iret
fcompl
or
or
pop
sarl
loope
and
or
add
ss
and
lock
or
scas
jp
inc
add
into
bound
mov
rcrb
inc
add
dec
int
fimull
popf
or
flds
ffreep
add
push
jns
add
cwtl
mov
sub
call
jp
push
inc
pop
adc
push
mov
stc
test
les
add
add
lds
jmp
inc
adc
in
add
sub
sbbl
cli
dec
fsubl
addr16
adc
repz
add
adc
mov
jns
bound
icebp
mov
mov
in
aad
or
mov
jno
mov
repz
imul
pop
mov
add
shll
mov
push
mov
enter
popa
nop
sahf
cmp
and
into
aam
jg
movsl
jne
pushf
imul
orl
mov
adc
cwtl
mov
test
movsl
int3
lock
sub
lahf
or
icebp
jle
sub
leave
mov
out
or
les
loopne
adc
test
adc
mov
mov
cmp
xlat
int3
addb
add
mov
and
scas
mov
jno
add
daa
movsb
test
add
dec
pop
test
sbb
leave
in
aas
xchg
das
jo
mov
loope
jge
in
push
dec
and
dec
scas
sti
adc
sub
fcmovu
sahf
pop
out
fimull
insb
stc
mov
xor
push
add
jb
pop
out
sbb
pushf
out
out
mov
push
in
add
and
ret
mov
mov
std
mov
inc
imulb
mov
leave
and
addb
pop
and
imul
ret
movsl
or
xor
inc
add
add
out
test
xchg
jns
add
xchg
or
mov
adc
daa
jecxz
int
jl
dec
xor
leave
jge
and
dec
and
in
cmpl
and
add
mov
in
imul
xchg
mov
shrb
loope
aas
sti
addb
pop
repnz
mov
mov
cmp
push
add
add
push
mov
xor
dec
pop
cmp
in
add
cmpsl
imul
inc
xchg
xlat
inc
add
andl
mov
test
rolb
mov
lcall
mov
sbb
add
fisubl
add
pop
or
lahf
outsl
dec
inc
pusha
add
lret
arpl
stos
add
mov
mov
fxch
cmp
add
cld
movb
cmc
mov
mov
xchg
out
stos
adc
adc
or
aaa
insl
in
out
cltd
push
sbb
mov
cmp
add
fisubs
add
xchg
mov
jl
addr16
sbb
lcall
sbb
or
jge
dec
leave
popa
mov
push
mov
cmp
xlat
ud1
add
sub
cmc
ret
push
scas
xchg
dec
les
fists
xchg
pop
aad
jp
fsubl
adc
shl
jge
mov
les
mov
jb
fwait
push
shlb
mov
mov
mov
pop
inc
out
divl
inc
or
cmp
jnp
movb
inc
aad
sub
aaa
aam
jb
popa
gs
mov
adcl
mov
aaa
int
add
pop
jle
inc
mov
inc
add
cmp
add
out
mov
out
mov
shll
int
bound
aad
xchg
pop
xor
add
imul
sub
in
inc
add
loope
cmp
xor
cmpl
daa
adc
lods
movsb
neg
lea
add
stos
pop
mov
enter
sbb
add
adc
xchg
hlt
xchg
fwait
sti
rcrb
out
ja
add
int3
jge
pop
mov
mov
sub
addr16
pop
mov
lds
addb
add
push
cmc
lret
fwait
das
xchg
and
out
fcoms
pushf
imul
xchg
cmpsb
push
je
ret
mov
leave
insb
dec
sbb
cmp
add
add
std
adc
jg
push
cmp
dec
js
ss
jg
mov
insl
sbb
popa
xor
sbb
cmc
arpl
mov
loope
pop
mov
mov
mov
mov
lods
cmpsb
push
jle
add
ret
add
sub
sbb
ja
dec
jmp
mov
mov
fabs
dec
in
out
out
push
push
add
in
outsl
imul
jae
mov
ss
cmp
lds
imul
and
push
xchg
sahf
sub
mov
push
mov
arpl
test
mov
outsb
cmp
dec
mov
push
sbb
pop
add
cmp
ds
cmp
adc
lock
dec
cmp
or
pop
push
push
leave
jmp
sub
adc
mov
sti
enter
dec
mov
stos
imul
in
imul
add
andl
cltd
dec
jle
jnp
mov
pop
adc
call
outsb
push
dec
cwtl
int
xchg
push
xchg
in
loopne
pop
aad
lret
add
mov
out
and
loop
or
jge
test
movsl
lret
pop
xor
and
outsl
pop
mull
push
or
jnp
ljmp
add
not
mov
dec
in
mov
out
jno
std
imulb
addb
outsl
and
add
or
out
pop
clc
sti
add
rolb
nop
mov
lahf
cmpsb
pop
movsl
dec
cli
add
inc
add
lret
loope
mov
add
jo
mov
push
dec
in
out
or
leave
in
mov
inc
cmc
fildl
outsb
int
xlat
scas
xlat
mov
add
lds
add
dec
xchg
pop
cmp
add
or
shlb
addb
in
leavew
imul
and
jb
xchg
dec
cwtl
sahf
xlat
mov
cld
stos
pop
jnp
mov
js
inc
add
mov
push
adc
push
shlb
in
lock
add
shll
sub
adc
and
jmp
push
push
jge
in
lods
dec
mov
mov
add
add
pop
jg
in
sbb
jl
in
clc
xlat
or
ret
and
les
inc
adc
lahf
shl
xchg
xor
nop
sahf
cwtl
lods
pop
add
icebp
loop
out
xor
es
int3
outsl
cs
and
xor
push
test
add
or
pop
inc
jbe
fmuls
mov
adc
or
jmp
in
mov
and
add
addb
add
mov
add
into
pop
and
xlat
pusha
add
dec
test
push
add
movsl
lea
jp
add
in
adc
dec
das
mov
adc
mov
and
test
jno
mov
mov
cmp
mov
add
popa
popa
nop
add
les
add
bound
push
gs
pop
cmc
cmpsl
enter
addr16
imul
pop
fiaddl
and
test
cmp
lret
negb
push
push
xor
add
rcrl
cmp
dec
and
movb
gs
out
dec
icebp
inc
add
and
clc
cmp
mov
jge
jmp
movsb
dec
add
jmp
cmp
js
lock
popa
xor
mov
add
add
jbe
and
frstor
into
test
out
loope
adc
lods
push
add
add
add
mov
jge
movsb
fscale
cs
fcoms
jae
add
lret
clc
push
add
stos
int
or
jmp
or
clc
stc
push
jbe
pop
add
sub
dec
jb
pop
mov
push
add
stos
mov
mov
lret
filds
push
cmp
clc
sbb
shl
repz
add
and
lcall
add
out
icebp
iret
adc
pop
add
cmp
stc
pop
outsb
add
push
cmpsl
pop
adc
in
mov
add
mov
pop
mov
sub
inc
rcl
inc
scas
add
test
rclb
or
add
je
or
popa
frndint
or
jle
pop
mov
add
cmp
fwait
jno
sub
add
cs
lea
pusha
add
gs
and
inc
add
push
add
mov
add
xchg
les
cld
add
imul
nop
loope
jl
out
cmp
add
pop
call
lods
lea
es
cld
dec
add
repnz
sbb
les
mov
jb
movsb
cmp
fisttps
hlt
popf
xchg
xor
and
add
mov
sub
mov
add
and
into
sbb
enter
addb
ret
testb
xlat
fwait
pop
outsl
push
adc
sub
sahf
push
pop
jg
lcall
pop
sub
js
jecxz
ja
pop
adc
add
mov
cli
scas
xchg
lods
repnz
jbe
les
cltd
loopne
jnp
fwait
repz
push
cmpl
push
lock
lahf
jmp
dec
jno
cmp
aad
mov
mov
push
addb
sub
inc
inc
inc
add
ret
orl
stc
push
mov
cmpsb
push
scas
sbb
adc
pushf
xchg
insb
push
les
cmp
mov
add
in
insl
mov
movsb
push
xor
xchg
jmp
pop
aas
aad
int
and
pushf
and
pop
sub
mov
call
fcom
sahf
loopne
outsl
inc
add
sub
fildl
add
xchg
inc
jns
cltd
sbb
pop
movsl
cmp
inc
add
leave
ret
cld
sbb
adc
or
sub
dec
adc
pusha
add
fstps
push
pop
dec
dec
nop
loopne
pop
lret
aaa
ss
or
sbb
mov
movb
xor
mov
cmpsl
cltd
addb
push
rcll
test
adc
scas
mov
ljmp
ja
fldt
jle
arpl
add
stc
push
loopne
dec
mov
lds
xchg
std
emms
sub
cli
mov
mov
adc
bound
jmp
mov
mov
mov
add
daa
lods
xor
jle
mov
push
test
sub
xchg
adc
pop
mov
xor
cs
out
lods
call
test
jne
add
cmp
jecxz
add
cmp
rolb
insb
mov
nop
movsb
xor
clc
rcll
inc
add
xchg
outsl
jle
sbb
adc
je
mov
mov
out
push
fstpl
xchg
cld
in
pushf
daa
push
xor
jae
aas
push
mov
cmp
mov
or
mov
xchg
dec
push
clc
add
cmpsb
adc
loope
xchg
cmpsb
pop
fdivs
add
push
jns
idivl
dec
and
fidivrs
lea
adc
adc
adc
imull
xor
lret
rolb
mov
mov
cltd
add
pop
add
jno
std
insl
xchg
mov
test
inc
add
mov
add
pushf
adc
and
inc
add
mov
scas
pop
inc
push
scas
lret
inc
popa
xlat
imul
or
dec
inc
add
mov
mov
pushf
jnp
arpl
mov
push
mov
jnp
jno
add
cmc
adc
test
lcall
jbe
mov
mov
int
mov
add
mov
jns
lahf
pop
or
in
out
mov
mov
push
pop
packsswb
add
fstpt
mov
add
mov
inc
add
add
outsb
lds
outsb
mov
ljmp
stos
add
call
jl
sbb
push
fists
ss
std
jns
mov
add
xchg
into
jae
add
ljmp
add
xor
addb
and
loop
mov
and
xchg
fwait
and
outsb
add
nop
lret
pop
jno
pusha
add
add
cmp
mov
pop
fcomip
dec
xchg
mov
addr16
mov
or
mov
xor
ss
out
sarb
add
mov
dec
popa
ret
mov
add
dec
push
or
aas
and
iret
jno
popf
mov
sbb
add
hlt
mov
add
scas
cmp
inc
add
mov
sti
cld
out
jb
or
dec
loope
push
ja
jnp
add
xchg
iret
xchg
inc
add
lcall
pop
push
mov
rclb
fwait
adc
movsb
inc
add
jmp
xor
aad
cmp
leave
shlb
int3
jns
ja
add
cwtl
jbe
addb
pop
das
pop
or
daa
mov
add
mov
imul
jle
adc
adc
dec
ret
inc
add
add
std
mov
gs
int
push
fnstsw
arpl
fstpt
mov
mov
pop
shlb
and
pop
fstpl
and
mov
rcr
inc
add
jnp
les
callw
adcl
jge
out
not
adc
push
xacquire
add
pop
in
ficoml
cmp
mov
addb
cmp
jmp
test
stos
cs
jns
aam
jg
insb
jno
inc
add
xor
inc
add
mov
mov
repnz
les
fildll
push
xchg
repz
sub
add
gs
dec
out
imul
lods
shl
add
pop
push
lds
mov
mov
add
or
rcll
sbb
stos
pop
test
pop
mov
cmp
add
repz
test
mov
add
dec
mov
and
lea
inc
mov
add
add
pop
adc
jne
inc
adc
cmp
xchg
ret
in
sub
addb
and
sbb
sub
dec
sub
xchg
mov
or
sbb
push
gs
mov
push
jmp
gs
pop
jae
test
rolb
call
addb
mov
add
out
add
push
in
or
push
pop
pop
arpl
call
jecxz
lret
das
movb
and
test
int3
daa
xor
pop
mov
add
add
test
mov
sahf
test
rcrl
add
in
cmp
ss
pop
add
loope
add
addb
iret
call
sbb
xchg
or
roll
cltd
mov
nop
sub
fistpl
add
sub
ljmp
mov
shll
js
jo
add
cmp
add
or
inc
mov
jge
xchg
inc
cmc
pop
mov
mov
lcall
pop
dec
jbe
das
loop
pop
jno
inc
add
inc
add
aaa
mov
xor
cmp
or
add
sarb
mov
in
leave
adc
fidivs
mov
ds
in
addb
push
pop
pop
pop
jle
jnp
sbb
mov
sti
in
sbb
cmp
popl
add
or
ficoml
testb
sub
jae
fnsave
sbb
xchg
jno
mov
pop
or
mov
dec
outsb
fldcw
sub
sub
xchg
mov
repz
sahf
mov
xor
loopne
aas
test
addb
mov
lahf
js
test
mov
mov
mov
subl
addb
mov
jp
repnz
in
mov
mulb
mov
mov
jg
in
add
into
mov
aam
imul
shll
andl
cmp
lods
cmp
arpl
pushf
mov
das
in
add
adc
in
mov
jns
mov
add
dec
and
pop
mov
ds
pop
push
sbb
scas
sbb
outsl
aam
pushf
pop
nop
imul
movsl
sub
adc
push
stos
cs
gs
sbb
push
mov
lods
daa
pushf
mov
addl
adc
add
xor
cmp
arpl
add
add
arpl
ss
push
inc
aaa
repnz
test
dec
mov
sbb
add
add
fnstcw
adc
add
adc
add
mov
cmpsl
cltd
and
imul
fwait
push
mov
add
and
addb
push
test
mov
bound
in
mov
pusha
add
jp,pn
cmp
sub
mov
inc
add
adc
adc
pusha
add
mov
pop
mov
imul
xchg
and
pop
insb
xchg
movsl
sub
push
fwait
ja
pop
addr16
dec
sti
loope,pn
leave
repnz
sbb
cmc
push
sub
push
pop
xchg
mov
mov
add
int3
addb
data16
inc
xchg
push
stos
inc
add
mov
movsl
fadds
inc
add
icebp
adc
lret
fildl
mov
inc
add
lds
jno
and
outsb
psubsb
sub
push
adc
stos
lcall
jle
icebp
outsb
mov
or
pop
pop
xchg
sbb
add
xchg
sub
jbe
lcall
push
stc
lods
add
loopne
xchg
push
push
mov
cmp
inc
scas
adcl
mov
out
adc
dec
or
add
lods
adc
push
lret
sub
inc
ljmp
add
jbe
int
shll
jno
or
or
jns
call
iret
vmaxss
push
stc
enter
icebp
add
xadd
mov
cmp
push
fisubrs
cmp
mov
shrb
mov
push
mov
and
cmp
add
lock
or
add
ficompl
das
xchg
sbb
inc
pop
jne
jge
dec
sbb
add
add
pop
jno
add
push
mov
xchg
out
or
clc
sbb
dec
jb
adc
outsb
mov
jl
in
mov
xchg
mov
dec
jbe
add
and
sub
mov
int
clc
call
add
imul
scas
xor
sbb
mov
fs
add
scas
mov
in
or
dec
and
lcall
leave
out
int3
jp
xchg
mov
add
dec
xor
daa
sub
nop
loopne
clc
mov
pop
iret
movsb
add
cwtl
sub
popa
enter
sub
push
lret
pop
or
jl
add
mov
mov
or
lods
inc
add
addb
add
xor
sbb
xchg
and
jne
decl
cwtd
loopne
pop
arpl
int3
andl
in
mov
xchg
div
mov
mov
test
loopne
mov
inc
add
cwtl
enter
push
ja
pop
aaa
cmp
es
xchg
sbb
push
movsb
lock
out
jle
xchg
push
mov
mov
xchg
sub
dec
call
mov
out
dec
pushf
push
sbb
lods
xor
sbb
rorb
push
jge
dec
mov
push
fdivl
sub
stc
and
pop
out
jmp
fucomip
sub
je
add
sbb
fimull
jmp
push
loope
xchg
stos
popf
add
xor
add
add
mov
mov
outsb
pop
xchg
pop
sti
shrb
sti
mov
gs
test
rolb
addl
add
xor
cmp
cmp
lods
and
into
insb
hlt
nop
dec
push
dec
mov
mov
test
jge
add
mov
push
int3
fwait
add
lcall
jg
inc
add
popf
sbb
xchg
cmp
faddp
add
mov
pushf
into
das
outsb
cmc
cmp
test
out
out
pop
cmpsl
fsts
dec
cmpsb
xlat
jmp
pushf
cmp
stos
push
mov
adc
std
fwait
and
shll
rcll
and
lods
sbb
mov
imul
pop
icebp
jb
ljmp
cmp
lcall
mov
push
xlat
adc
and
jp
and
lret
lret
mov
test
push
outsb
push
xchg
xchg
mov
mov
jp
jb
mov
jmp
cmp
add
data16
dec
test
out
sahf
sub
push
add
add
cmp
fsubrp
es
fidivs
cmp
sub
cmp
add
addb
jb
pop
int
fcoms
fisttpl
add
adc
xchg
push
mov
inc
addb
insl
cmp
or
mov
shrb
sbb
imul
lret
out
rcr
lret
xor
ja
and
mov
mov
mov
cli
sbb
add
xchg
shrb
scas
jle
movsl
addr16
mov
mov
testb
xor
es
movsb
jp
push
push
fs
xlat
xchg
push
mov
push
leave
pop
or
xchg
dec
and
sub
sysenter
out
and
rcrl
or
xchg
fcmovne
gs
adc
mov
add
mov
xor
add
mov
xchg
jno
repnz
push
sub
dec
push
les
cs
sbb
adc
mov
movb
add
fisubrl
pop
pop
xchg
jae
sbb
dec
daa
hlt
and
add
and
iret
rolb
jg
scas
call
stos
jnp
or
inc
stos
lods
jp
push
test
xor
push
add
cmp
lret
add
rcrl
jp
pop
dec
dec
out
rol
ja
push
add
popf
jge
cmpsl
sub
add
xchg
pop
cli
iret
fiaddl
sbb
pop
push
stc
xchg
enter
fwait
dec
outsb
cmpsb
xor
call
xchg
jle
out
sub
dec
mov
push
dec
out
jle
mov
rcll
lcall
inc
add
clc
xchg
ficompl
jae
lcall
add
pop
fiadds
add
add
les
pop
test
mov
xor
xchg
test
andl
lock
mov
push
cs
je
dec
stos
mov
rolb
pushf
lahf
data16
lods
addr16
mov
mov
push
inc
add
addb
add
add
sub
scas
mov
xchg
add
add
add
sbb
sbb
nop
nop
jp
bnd
sub
mov
jmp
adc
aas
sbb
addr16
lret
jle
jmp
movsb
add
data16
cmp
jge
jle
orl
cmp
int3
xor
sub
jl
and
lret
adc
jl
imul
addb
mov
inc
add
js
jno
loope
out
sarb
lret
mov
fs
pop
popf
xchg
cvtpi2ps
aad
out
fsubl
gs
xor
jge
stos
mov
loope
lret
insb
mov
sti
rolb
dec
xor
mov
lea
call
scas
mov
cmp
pop
or
sub
arpl
mov
push
data16
mov
xor
aad
sbb
inc
negl
pop
inc
cmp
lret
enter
or
inc
add
movsl
notb
test
out
mov
push
rcl
push
add
js
fistpll
sbb
inc
test
cs
cmp
inc
add
mov
scas
pop
in
icebp
scas
cld
mov
mov
or
add
lcall
xchg
xor
cmp
xor
pop
inc
add
in
sub
pop
mov
mov
cwtl
dec
mov
adc
mov
mov
xchg
adcl
in
daa
jmp
cmp
lahf
xchg
sahf
scas
or
xchg
lret
jmp
mov
movb
push
fwait
out
sbb
iret
pop
xor
lea
push
pop
lock
leave
popf
data16
fstps
shrl
stc
addr16
push
and
or
outsb
mov
jnp
pop
out
out
xchg
movsl
add
cmpsb
jns
sub
outsl
pop
addr16
pop
in
cmc
dec
xlat
pop
mov
aad
in
mov
push
loop
fnsave
sahf
scas
cwtl
orl
or
add
jnp
push
test
sbb
loop
cmp
arpl
add
xor
es
jg
xchg
push
sbb
pusha
add
outsb
push
and
add
addb
mov
lret
jo
sti
push
xor
es
stc
push
pop
pop
popa
sub
cltd
je
arpl
outsb
daa
scas
lock
jmp
mov
xor
push
aaa
daa
xchg
ss
cltd
lcall
icebp
lret
fistl
pusha
add
test
or
leave
dec
pushf
mov
cmpsb
call
jno
xor
mov
xchg
cmpsl
cmp
sub
push
xchg
shll
cmp
stos
adc
daa
test
add
into
mov
gs
adcl
icebp
mov
dec
or
or
push
enter
cmp
aad
add
add
push
dec
cmp
xchg
movsb
test
mov
ljmp
imul
lret
cmp
mov
sbb
add
test
iret
push
jl
js
addb
add
das
dec
outsb
jl
ds
mov
jnp
movb
add
notl
xchg
pop
ljmp
and
or
leave
xor
push
adc
xor
jnp
dec
data16
int3
inc
add
add
pop
inc
inc
add
movb
add
int
fucom
xchg
xor
fisubrs
push
mov
push
ds
push
jb
push
fdivr
insl
mov
or
pop
or
iret
or
std
cwtl
dec
out
or
das
or
cmp
pop
dec
pop
inc
add
aam
jb
outsl
sub
mov
push
or
xor
add
loopne
roll
pop
xor
les
imul
and
lret
rol
add
add
test
xorl
sbbl
xchg
test
mov
dec
test
dec
jmp
xor
add
xchg
pop
int3
std
xchg
push
cs
xchg
lods
lcall
jne
mov
movsb
push
jp
dec
adc
in
xchg
sbb
and
xchg
push
repz
movsb
jecxz
add
imul
pop
ret
add
hlt
test
fsts
mov
pop
std
xchg
fisttpl
das
inc
ja
push
stc
dec
sbb
add
sbb
mov
mov
add
add
repz
push
mov
add
xor
sub
xchg
inc
pop
hlt
mov
xor
add
pop
insl
cmp
dec
mov
jne
cwtl
adc
call
out
outsb
jno
and
pop
bound
cmp
mov
add
push
pop
mov
shrl
add
jp
jno
add
sbb
jbe
cmc
and
je
xor
push
jno
test
xchg
ljmp
js
popw
movb
fistpll
loopne
in
xor
add
loop
adc
loopne
add
cmp
xchg
ljmp
cmpsl
cli
lret
pop
push
push
xchg
sub
jg
add
jno
movsb
mov
nop
sti
mov
rolb
fiaddl
fistl
add
add
add
cmpsb
insl
fnsave
xor
or
sbb
orps
push
jp
mov
stc
mov
dec
pop
mov
mov
insb
inc
add
jecxz
mov
mov
mov
add
add
je
adc
outsb
inc
add
pop
arpl
fadd
mov
lods
xor
leave
sub
add
cmpsb
sti
mov
dec
std
push
mov
mov
into
push
jge
data16
test
out
cli
xor
xchg
push
push
incb
push
arpl
xchg
xor
inc
add
repz
cmc
nop
add
movb
inc
ret
loope
fwait
xlat
lods
fld
lock
icebp
fwait
push
out
push
loop
out
dec
lds
stos
add
mov
mov
divb
xchg
sub
jmp
sti
jge
addb
stc
sahf
sti
jg
xor
xchg
pop
push
push
fwait
push
jb
dec
shrb
mov
inc
divb
xor
std
mull
fisttps
int
sbb
inc
mov
aas
mov
ffreep
add
jle
add
jbe
xchg
xchg
les
or
adc
sbb
or
cmp
fimull
fwait
cwtl
push
adc
je
clc
stos
js
clc
filds
add
and
add
bound
insb
dec
repz
mov
dec
add
mov
nop
in
ljmp
popf
stc
gs
movsl
xchg
mov
and
xchg
dec
jae
mov
repnz
add
jae
jns
xchg
dec
leave
pop
ss
add
es
js
jnp
add
sahf
mov
dec
les
cltd
leave
mov
stos
jmp
dec
shlb
mov
cmp
sbb
jae
pop
xchg
int3
jno
ja
jg
push
enter
ja
imull
push
sbb
sub
int
or
jae
icebp
dec
add
mov
push
add
push
xchg
adc
sbb
and
out
loop
lret
cmc
xchg
cs
push
sbbl
shll
pusha
add
movsb
push
add
pop
fsubrp
orl
mov
int3
add
movsl
pop
adc
or
add
add
xchg
or
loopne
imul
movsb
pop
xchg
lret
ds
dec
mov
push
fadds
add
scas
mov
jae
sub
adc
cli
aas
test
adc
add
inc
add
jmp
addb
sub
icebp
and
xchg
push
enter
sub
add
in
dec
xchg
dec
mov
aas
rep
inc
iret
lock
hlt
dec
arpl
test
add
jmp
mov
xlat
inc
inc
add
shrd
inc
add
add
lods
sub
add
addb
adc
mov
stos
ret
add
add
hlt
xorl
leave
mov
addb
icebp
mov
jae
into
into
and
cmp
and
fiaddl
in
inc
add
adc
mov
pop
in
mov
lock
or
cwtl
enter
adc
and
inc
mov
mov
mov
push
push
or
call
test
daa
cmp
jl
in
or
xchg
pushf
pop
faddl
add
cmpsl
push
adc
out
adc
add
addl
cmp
cmp
out
lahf
xlat
pop
jp
add
mov
pop
sub
lcallw
sbb
add
ja
sbb
add
aad
xchg
or
inc
add
lock
cld
bound
in
enter
sbbl
pop
fimull
mov
leave
pop
cmpsl
sub
pushf
insl
mov
repnz
andl
add
and
iret
mov
add
pop
hlt
push
insb
inc
add
cltd
xchg
adc
mov
adcl
rolb
fdivr
popw
dec
xor
test
fbld
stc
pop
shll
add
and
xchg
push
bound
push
ret
add
adc
or
outsl
and
mov
mov
ficomps
sub
imull
mov
aaa
xor
sub
sti
lret
sbb
aaa
and
setno
push
testb
pop
clc
scas
xchg
cmpsl
aas
test
push
add
cli
sbb
lahf
mov
add
jno
cmp
dec
inc
add
add
and
or
mov
cmp
lea
add
in
xchg
mov
dec
iret
inc
dec
rcrl
mov
mov
or
jns
cmp
aad
repz
cmc
daa
dec
in
pop
xchg
ss
ss
adc
xlat
loop
mov
jge
incl
fisttps
cmpsb
hlt
mov
push
in
push
mov
or
add
ret
loopne
pushf
pusha
add
add
clc
cmp
adc
mov
add
add
add
fwait
sub
lahf
loopne
prefetch
inc
add
sbb
jnp
adc
lock
add
nop
push
add
roll
add
nop
xchg
iret
xchg
mov
jns
test
xchg
pusha
add
mov
mov
push
add
push
or
add
js
aad
shlb
pop
je
pop
in
ds
jnp
pop
out
jo
aas
outsb
imul
int3
aam
mov
pop
sbb
fstpl
jmp
and
push
and
es
aam
addb
shrb
insb
les
xchg
lods
pop
outsl
dec
push
je
in
into
or
pop
sbb
test
adc
scas
iret
out
stc
mov
cltd
icebp
jns
jb
cltd
les
insl
dec
das
mov
jno
repz
test
mov
mov
stc
xor
pop
jmp
add
enter
paddq
std
and
add
or
ja
aas
inc
add
aad
outsb
and
push
inc
add
mov
aam
or
fdivr
mov
and
push
push
js
cmp
cmp
inc
scas
aaa
ja
pusha
add
jne
ljmp
push
fmull
enter
jo
test
cld
mov
js
addb
mov
push
loope
addb
jo
fdivr
jecxz
repz
dec
cld
pop
push
or
test
push
xor
push
sub
push
lea
add
cmc
jg
into
out
jmp
repnz
shl
jo
sbb
add
ljmp
mov
cltd
push
xchg
pop
add
cld
dec
jno
bswap
std
stc
ficomps
fwait
and
jmp
addb
add
add
rcr
lock
jae
add
cmpsl
mov
dec
pop
ljmp
fbstp
loopne
fcomps
sbb
adc
fwait
jg
cmp
js
adc
xchg
mov
add
fisubs
fidivl
arpl
mov
add
sti
inc
movsl
push
add
push
mov
mov
cltd
movb
add
mov
aad
mov
test
fcoml
mov
ret
loope
rol
pop
lret
repz
stc
inc
xchg
sbb
movsl
xlat
mov
aaa
xchg
sub
cmp
and
cmp
xor
add
pop
inc
add
jp
ja
shrl
cltd
shlb
pop
bound
stos
push
bound
ret
xchg
push
lods
loope
add
mov
mov
inc
add
cmp
xchg
daa
xor
pusha
add
add
popl
aam
sbb
cmp
push
push
add
stos
mov
ljmp
cmp
or
add
sub
dec
pop
fists
ret
ljmp
stos
add
adc
fisubrs
push
je
add
lods
loop
enter
xchg
adc
rolb
and
loopne
add
hlt
ds
pushf
movsl
fildll
lret
ret
sbb
cmp
mov
les
push
int
mov
testl
test
add
sub
fsub
int
inc
fidivl
daa
ja
inc
enter
mov
fimuls
fistpl
inc
add
ja
hlt
rclb
nop
mov
mov
cmpsl
dec
test
xchg
fld
add
sub
inc
loop
xchg
jno
sub
xor
pop
sub
cs
or
aad
enter
sahf
lret
dec
popa
outsl
cltd
cli
sub
or
add
cli
addr16
test
popa
scas
jbe
sbb
cwtl
xchg
in
sub
fnstenv
loopne
ja
dec
movntq
dec
xor
les
outsl
fildll
mov
test
iret
mov
xor
pop
pop
nop
mov
mov
cli
loop
dec
aas
push
adc
pop
int
rolb
jp
sbb
mov
add
cmp
cli
mov
pushf
popa
mov
mov
cvtps2pi
jecxz
bound
push
ret
mov
add
addl
es
xor
dec
shll
call
call
in
sbb
push
addb
movb
sbb
cmp
xchg
xchg
dec
lret
lret
mov
push
pop
sub
imul
jns
out
adc
add
mov
inc
inc
je
sbb
jg
add
sbb
leave
or
xor
add
xchg
push
add
shl
pop
xchg
test
sub
movw
cmpsl
push
sub
aam
mov
ret
insl
sahf
xor
fcmovnb
and
fs
and
mov
pop
fwait
sub
dec
mov
mov
xor
xchg
push
xchg
and
push
addb
mov
arpl
xor
mov
icebp
mov
add
mov
mov
sub
insl
data16
pop
jno
cmp
aaa
jb
hlt
lahf
cmp
cltd
mov
pop
cmc
xchg
push
mov
jl
test
mov
jns
jo
outsb
lret
and
push
fwait
popa
pop
add
shlb
fsts
cmp
fs
ret
cmp
int3
sub
and
xor
push
xor
in
push
mov
pop
test
pop
xchg
xchg
mov
sbb
testl
mov
int
hlt
int3
rolb
add
and
add
in
mov
ret
lods
cmpl
pop
les
xor
jnp
leave
xchg
lret
adc
pop
push
les
lods
scas
dec
inc
xor
fisttps
js
mov
pop
and
ret
inc
inc
xchg
test
ss
jnp
cmpsb
xchg
rcl
test
outsl
out
pop
sbb
aaa
jl
test
js
add
jmp
inc
pushf
push
dec
outsl
iret
xor
inc
mov
fbstp
iret
lret
stos
pop
call
jmp
or
pushf
jns
push
ret
sbb
add
cmp
data16
sub
add
mov
mov
out
cltd
sahf
into
inc
add
mov
xchg
outsb
pushf
fwait
pop
pop
shrb
sarb
pop
inc
insb
ret
out
dec
push
jne
test
add
les
out
popf
loop
lret
fsubl
movsb
fwait
imul
jg
je
jns
push
roll
add
xor
cmpsb
imul
shll
inc
add
pushf
and
adc
cmp
insb
pop
sbb
inc
add
inc
mov
shrl
push
inc
add
popf
fs
xor
dec
jbe
ret
cmp
add
add
les
out
inc
add
je
add
xor
out
push
je
xchg
cltd
sbb
cmp
fdivl
jae
int
outsb
mov
out
sub
test
lahf
push
fs
iret
fisubs
add
pushw
in
cmpsl
aaa
and
mov
sub
add
inc
lahf
push
leave
pop
push
xchg
push
xchg
adc
enter
not
cli
iret
insl
addr16
add
mov
and
push
lds
fs
mov
add
rol
add
rcll
addb
cmp
jb
cmpsb
shll
adc
mov
push
xchg
xchg
out
pusha
add
push
fisttpll
std
lahf
push
mov
cmpsb
ljmp
fs
jp
xchg
xchg
movsl
mov
loope
xor
test
fmul
mov
jno
out
jle
fists
mov
mov
or
in
nop
mov
std
cmpsb
push
cmp
es
inc
add
push
or
push
add
jl
dec
xchg
jecxz
enter
add
add
pop
aam
add
pop
fcmovb
and
lods
jl
jne
jmp
mov
jae
and
popa
pop
inc
add
xchg
mov
daa
jns
sbb
xchg
jg
adc
sub
in
pop
divl
sub
adc
int3
jo
xor
pop
fcmovu
or
mov
pop
add
jne
mov
lods
sbb
add
cmp
addr16
add
cmp
dec
std
cmp
cmp
push
mov
orps
and
fisubl
and
sbb
repz
push
add
inc
aam
addr16
dec
movb
aas
shll
xor
cmp
outsb
or
add
mov
add
xchg
mov
dec
cmp
push
pop
lods
mov
in
xchg
mov
or
lret
adc
add
movsb
and
test
dec
xchg
addl
aaa
mov
mov
push
dec
aam
adc
lock
push
rolb
icebp
sbb
aaa
mov
and
cmpsl
movsb
sub
add
xlat
js
fwait
and
icebp
subl
add
sbb
mov
jle
pop
inc
add
test
pop
jnp
popa
sbb
and
pop
push
out
mov
fs
aas
mov
orl
movsl
jns
sbb
push
add
add
push
jne
dec
mov
inc
adc
push
iret
and
ret
sub
add
cmp
add
push
mov
adc
push
fdivrs
xor
data16
push
inc
cld
lahf
int
into
out
mov
inc
dec
sub
inc
xchg
lds
xor
sub
sub
add
mov
mov
and
arpl
push
xor
arpl
add
adc
stc
test
pop
inc
imul
mov
add
hlt
xor
incl
jle
and
adc
rorl
movb
in
mov
push
add
push
push
incb
add
xchg
xor
add
jge
xchg
test
mov
stos
popf
dec
push
push
insl
jb
rclb
xor
add
pop
in
imul
pop
pop
shll
inc
add
jecxz
sbb
inc
add
or
xchg
or
jae
dec
mov
cmp
adc
popf
dec
test
popl
psrlw
lret
les
add
lret
dec
test
sub
xchg
mov
addb
sbb
mov
add
sub
xor
dec
aaa
ss
mov
cli
outsb
movsl
mov
addr16
sahf
or
mov
xor
lods
aad
push
or
sbb
sub
subl
and
add
add
push
aaa
sbb
xchg
aas
xchg
sub
mov
stos
mov
add
add
scas
push
lret
sub
and
jno
inc
add
rolb
dec
out
dec
pop
xchg
mov
imul
arpl
mov
negb
addb
jno
ret
sbb
xor
int
dec
lcall
addr16
push
and
mov
out
push
clc
and
fnsave
fistpll
add
lods
mov
and
aam
xchg
cwtl
add
insb
mov
test
pop
mov
insb
loopne
loopne
or
rol
add
daa
test
xor
inc
sahf
sahf
xchg
push
roll
loopne
inc
add
fisubl
inc
sub
out
fwait
and
mov
outsl
mov
gs
jmp
sbb
out
dec
adc
fmul
inc
add
mov
addb
insl
daa
jne
sbb
xchg
push
add
test
add
sub
xchg
lcall
fadds
push
or
cltd
mov
add
dec
cmp
popa
jmp
sbb
repz
and
sahf
es
pop
sti
addb
call
adc
push
push
loopne
pusha
add
ja
lret
dec
jae
mov
mov
stos
push
cmp
jno
xchg
xor
imulb
test
loop
cmp
add
add
push
gs
pop
and
xor
xchg
mov
addb
pushf
sub
out
xchg
add
imul
xchg
jge
mov
mov
mov
push
ja
cmp
pop
ret
ljmp
xchg
mov
sti
in
inc
xor
mov
and
cmpsl
bound
arpl
add
stos
jp
jae
xchg
xor
addb
pop
and
cmp
cmc
cmp
jg
hlt
or
add
movsb
gs
inc
add
fldenv
add
add
and
cmp
sti
cwtl
icebp
and
jmp
loope
add
add
test
or
add
ds
enter
add
jg
fsubrs
xchg
jno
xlat
cmp
add
mov
paddusw
push
imul
nop
and
dec
loope
shll
add
rcrb
mov
mov
dec
ret
fucomp
sub
lret
jne
jg
ficoms
sbb
mov
xor
xor
add
hlt
cmp
lret
fildll
sahf
mov
add
xchg
xor
or
fwait
std
push
addb
stos
in
lods
jl
xchg
mov
jg
dec
push
add
jmp
cmp
add
mov
inc
add
arpl
rcr
push
and
inc
add
ljmp
das
vmwrite
mov
adc
pop
test
push
out
pop
add
xchg
stos
in
fldenv
call
lahf
xor
daa
inc
fdivs
in
pop
push
bound
pusha
add
mov
and
push
add
test
pop
xchg
sbb
pushf
sub
add
inc
add
out
pop
pop
inc
in
cmp
adc
idivl
ljmp
lcall
addr16
mov
je
fs
push
mov
jo
jmp
pop
enter
mov
mov
jno
or
popa
sub
add
mov
push
or
add
xchg
fimull
push
and
dec
mov
pop
xchg
insb
sbb
inc
add
xchg
dec
insl
cmpsb
shld
imul
loopne
addr16
or
add
jg
movb
js
lock
dec
cld
cmp
push
das
cmp
xchg
xchg
popa
mov
jbe
add
roll
and
aaa
out
jp
inc
add
jno
add
mov
cmp
add
sub
xchg
push
out
sbb
add
pop
or
pop
sub
sbb
addb
dec
mov
and
fistl
movsb
mov
cltd
mov
add
and
ss
bound
cwtl
insl
mov
mov
scas
pop
aad
add
movsb
jne
test
scas
or
push
xchg
mov
cmp
sbb
jb
and
or
ret
lret
cli
jae
jge
add
clc
mov
int
scas
jle
stos
fisubrs
aas
mov
sahf
jmp
xlat
loope
push
aaa
and
out
arpl
cmp
popf
add
inc
add
sbb
lock
pop
mov
mov
inc
or
pusha
add
xchg
pusha
add
add
add
add
pop
mov
inc
jne
cmc
xchg
scas
in
xor
push
ljmp
std
out
hlt
ror
pusha
add
add
pop
jbe
cltd
cs
add
int3
sub
insb
sub
stos
mov
dec
and
stos
clc
stos
xor
pop
int
pop
xor
out
mov
add
adc
incb
xchg
cmp
sbb
mov
cltd
mov
rol
add
pop
fsubrp
in
mov
sub
inc
adc
push
mov
push
and
mov
shl
out
jmp
add
insl
push
add
shll
arpl
pop
addb
cmc
outsb
xor
pop
push
mov
push
or
mov
mov
arpl
daa
addb
xor
test
and
fisttps
aas
adc
mov
sti
xor
mov
stc
jb
add
pop
add
push
push
mov
xchg
ret
test
adc
add
add
sbbb
add
add
add
mov
mov
nop
jmp
add
add
add
xor
lea
jb
add
mov
cmp
out
stc
jb
add
cmpsl
testl
test
add
add
jb
add
ljmp
mov
xchg
ret
lret
cmpsl
add
mov
jb
add
add
test
xor
push
mov
xchg
ret
add
divl
sub
nop
jmp
std
popl
inc
add
mov
add
jb
mov
incb
add
inc
add
push
add
insb
stc
jb
add
add
dec
cmp
nop
jmp
cmpsl
incb
popf
add
jb
ja
jl
insl
je
stc
jb
add
push
jle
and
jb
pop
test
jnp
sub
stc
jb
out
movsl
add
push
push
shrb
pop
push
add
test
add
add
xchg
negl
ret
stc
jb
loopne
out
and
mov
add
jb
add
add
mov
jb
add
sub
and
add
lahf
test
cmpb
incl
add
aam
add
inc
add
add
add
call
sbb
add
add
xchg
das
loopne
add
mov
stc
jb
add
addl
cmc
lock
add
stc
jb
int3
xchg
popf
inc
inc
nop
addb
push
test
mov
mov
stc
jb
inc
add
add
stc
mov
stc
jb
ljmp
push
mov
xchg
ret
add
out
nop
pop
mov
stc
jb
push
imul
outsb
add
add
gs
std
cmpsl
add
add
cmpb
add
sub
icebp
push
add
add
jge
push
mov
xchg
ret
add
adc
add
mov
xchg
ret
sbb
add
push
push
mov
xchg
ret
add
jnp
inc
rolb
push
stc
jb
add
gs
xor
stc
jb
imul
add
scas
cmpl
nop
jmp
mov
xor
out
es
and
push
mov
xchg
ret
add
mov
xchg
ret
sub
test
std
lcall
aad
add
add
add
stc
jb
add
add
jnp
enter
mov
xchg
ret
jnp
jp
lret
mov
stc
jb
cmpsl
and
push
stc
jb
add
movsl
sub
mov
stc
jb
lahf
add
out
clc
stc
jb
test
or
jb
sbb
adc
dec
add
jb
add
adc
dec
stc
jb
idiv
add
sbb
add
add
push
mov
xchg
ret
lret
push
imul
xchg
ret
add
push
pop
mov
nop
jmp
and
jp
push
loope
add
add
mov
add
stc
jb
ja
add
dec
lea
nop
jmp
add
push
and
jg
add
mov
inc
add
and
test
test
mov
push
mov
xchg
ret
xor
add
and
mov
test
sub
rcll
loop
add
ja
cmpsl
inc
add
add
jmp
stc
jb
adc
add
stc
jb
sub
ljmp
out
movswl
stc
jb
jl
fs
mov
add
push
add
xchg
ret
mov
add
mov
cmp
nop
jmp
add
xor
mov
pop
nop
jmp
xor
add
add
lahf
add
add
add
xchg
les
lods
push
stc
jb
add
aad
sbb
popf
sbb
mov
mov
xchg
ret
ja
dec
mov
stc
jb
add
cmp
jb
das
add
add
std
jmp
andb
add
sub
add
ja
add
mov
push
mov
xchg
ret
add
add
or
sti
pushl
div
stc
jb
add
incl
jge
stc
jb
add
out
decl
push
mov
xchg
ret
add
add
and
jb
add
fs
adc
lret
stc
jb
mov
mov
and
sub
push
mov
xchg
ret
cmpsl
add
add
fnstcw
nop
jmp
sbb
add
icebp
outsl
nop
nop
jmp
sbb
loope
add
imul
jg
stc
jb
out
add
add
idivl
push
stc
jb
incb
add
out
movsb
xchg
ret
fmuls
mov
push
nop
jmp
add
add
or
mov
stc
jb
out
jl
add
call
stc
jb
test
movsl
lret
in
mov
stc
jb
add
add
ljmp
add
add
or
xor
sub
mov
stc
jb
add
js
stc
jb
add
xor
add
repz
jb
xchg
add
add
imul
mov
add
stc
jb
or
movsl
add
in
mov
stc
jb
sbb
jnp
fstl
rep
nop
jmp
add
add
test
pop
shr
nop
jmp
out
add
cwtl
mov
stc
jb
add
movsl
add
add
mov
stc
jb
push
ja
add
test
add
stc
jb
or
add
add
or
add
jb
int3
jl
fmuls
xor
inc
add
das
add
int
pop
jae
jb
add
cmpsl
add
pop
push
mov
xchg
ret
add
sub
add
mov
xchg
ret
test
mov
stc
jb
jp
mov
lret
test
add
add
out
sahf
xor
stc
jb
mov
add
or
cmpb
std
add
add
mov
stc
jb
add
add
out
add
add
stc
jb
pop
add
jns
stc
jb
ljmp
loope
jmp
stc
jb
cmpsl
xor
int3
cmp
add
nop
jmp
add
imul
test
add
add
test
lret
stc
jb
xchg
sub
adc
lods
push
mov
xchg
ret
push
sbb
sub
xchg
cmpsb
cmp
test
sti
call
add
imul
mov
add
jb
lret
test
addb
add
xchg
gs
jl
or
daa
or
jb
xor
imul
dec
add
stc
jb
sbb
adc
hlt
jno
dec
push
mov
xchg
ret
push
cmpsl
popl
add
jb
inc
inc
add
data16
push
pop
stc
jb
add
sbb
int3
ja
add
add
pusha
add
and
subl
add
fnsave
or
inc
nop
jmp
mov
test
add
jb
add
popf
lret
ljmp
jb
popf
inc
mov
insl
addl
add
jb
ljmp
iret
or
add
or
add
incb
lock
mov
stc
jb
jl
add
sbb
ljmp
pushl
jp
ljmp
popa
add
jb
ja
ja
test
sub
repz
add
add
mov
mov
add
add
add
add
add
add
xor
stc
jb
test
mov
fiadds
xchg
ret
add
movsl
ljmp
add
add
add
push
add
jb
test
test
xchg
rolb
inc
add
xor
add
stc
jb
add
repnz
pop
push
mov
xchg
ret
add
add
mov
cmp
outsl
nop
jmp
add
xor
jl
pop
shr
stc
jb
add
mov
xchg
repnz
xor
nop
jmp
add
add
int3
add
pop
or
nop
jmp
inc
add
roll
test
ljmp
movsl
mov
test
add
in
testb
cmp
ret
movsl
add
add
shl
mov
nop
jmp
add
nop
incl
dec
cmp
jb
aad
add
gs
rolb
out
push
stc
jb
fs
xor
add
jbe
add
push
mov
xchg
ret
or
ljmp
insb
cld
incl
add
pop
aam
dec
nop
jmp
add
xor
push
inc
cmpsl
add
or
add
add
xchg
add
call
stc
jb
add
add
cli
les
stc
jb
add
popf
addb
add
jb
add
add
add
push
mov
xchg
ret
pop
add
popl
lds
test
nop
jmp
add
add
js
or
add
aad
add
ret
stc
jb
test
add
sub
stc
jb
movsl
add
add
sbb
pop
std
mov
nop
jmp
or
or
ljmp
mov
xchg
ret
add
ljmp
add
pop
ss
mov
cmpb
aad
add
pop
jmp
nop
jmp
add
add
add
je
add
nop
jmp
pop
gs
cmpl
mov
xchg
ret
aam
add
jb
inc
add
mov
xchg
ret
xor
fwait
rep
push
mov
xchg
ret
add
xchg
scas
mov
stc
jb
add
add
or
mov
insb
stc
jb
or
notl
leave
je
stc
jb
add
sbb
add
mov
nop
jmp
add
movsl
add
sub
push
mov
xchg
ret
add
sbb
pop
call
stc
jb
add
xor
mov
and
jb
icebp
add
add
and
stc
jb
cmpsl
ja
adc
inc
or
jb
add
add
add
pop
jge
test
idiv
stc
jb
cmpsl
adc
mov
jb
mov
sar
xorb
add
xor
add
cmp
jb
add
int3
inc
ret
cmc
pushf
stos
stc
jb
add
cmpsl
ljmp
mov
stc
jb
xor
add
push
push
mov
xchg
ret
add
incb
xor
sbb
fnsetpm(287
inc
add
mov
int3
xor
stc
jb
add
push
add
add
push
mov
xchg
ret
das
push
push
add
mov
mov
xchg
ret
jl
add
xchg
push
stc
jb
add
add
adc
jle
stc
jb
push
add
mov
stc
jb
add
ljmp
pop
add
insl
add
stc
jb
pop
out
add
add
arpl
push
or
sar
xor
add
add
add
int3
xor
repnz
push
add
add
test
add
add
add
add
not
sbb
add
movsb
std
stc
jb
add
mov
add
xchg
jge
jno
add
mov
stc
jb
test
mov
push
stc
jb
xchg
add
cmpsl
push
add
mov
popa
stc
jb
popf
add
add
inc
add
stc
jb
test
add
inc
ja
mov
stc
jb
xor
push
sub
ljmp
add
adc
ror
stc
jb
inc
push
test
ja
call
add
stc
jb
ljmp
insl
fs
jb
test
add
sbb
add
add
sub
add
sbb
ss
jmp
test
mov
dec
shr
stc
jb
loopne
xor
lret
add
stc
jb
add
add
decl
stc
jb
jnp
add
int3
aas
mov
stc
jb
sub
test
push
mov
xchg
ret
add
add
add
div
nop
jmp
or
and
add
test
push
push
mov
xchg
ret
fidivrs
stc
jb
add
mov
stc
jb
add
add
add
scas
enter
jle
mov
test
stc
lock
add
inc
int3
ljmp
cmc
add
add
test
mov
test
nop
jmp
das
add
add
ja
add
add
stc
jb
incb
xor
test
add
stc
jb
add
add
push
cwtl
call
nop
jmp
sub
sti
dec
nop
jmp
add
add
sub
add
lcall
inc
add
add
add
movsl
cld
dec
push
mov
xchg
ret
add
fnstsw
in
test
cld
lods
stos
ficompl
lahf
jmp
andb
cmpsl
testl
inc
popf
push
push
mov
xchg
ret
std
add
add
add
xchg
ljmp
add
xchg
xor
jb
add
xchg
add
repnz
mov
nop
jmp
add
mov
aas
add
nop
jmp
add
add
into
pop
push
mov
xchg
ret
test
aam
push
fcoml
jmp
or
adc
jl
loop
push
mov
xchg
ret
push
add
sub
jge
nop
jmp
sbb
imull
add
sbb
loop
add
inc
test
xchg
dec
xor
stc
jb
das
sbb
das
imul
xor
nop
jmp
test
xor
call
and
add
add
idiv
stc
jb
xor
add
jp
push
mov
xchg
ret
jp
test
sub
inc
add
adcb
add
add
mull
mov
jae
inc
add
add
nop
sarl
sbbb
add
add
jl
lahf
xor
nop
jmp
push
add
add
add
stc
jb
add
add
sub
xor
add
stc
jb
add
or
jns
add
and
inc
add
add
push
nop
jmp
add
add
notl
add
jmp
stc
jb
inc
add
add
test
add
stc
jb
cmpsl
inc
add
sbb
bound
add
add
add
add
out
pop
nop
jmp
mov
sbb
test
pusha
stc
stc
jb
imul
nop
jmp
add
add
xchg
in
test
mov
stc
jb
gs
sub
add
jb
xor
push
jnp
sbb
mov
stc
jb
ja
add
push
test
xor
adc
ret
push
mov
push
mov
and
add
jg
mov
push
push
mov
xchg
ret
add
in
mov
stc
jb
add
add
test
jb
ja
aam
or
jb
xor
xor
add
mov
jb
add
jge
mov
stc
jb
xor
push
mov
out
jne
mov
jnp
add
and
nop
jmp
test
imul
nop
jmp
add
add
jecxz
adc
push
adc
add
add
add
insl
add
add
push
push
mov
xchg
ret
lahf
movsl
add
add
pop
mov
stc
jb
add
add
xor
pushl
add
add
sub
in
xor
add
push
jmp
mov
xchg
ret
add
pop
xor
pusha
stc
jb
adc
incb
add
and
mov
stc
jb
push
cmpsl
add
mov
xchg
ret
jp
cmpsl
sub
add
stc
jb
add
nop
jmp
add
ja
loope
fst
cld
push
stc
jb
pop
int3
add
imul
nop
jmp
std
xchg
add
and
add
push
stc
jb
add
std
insl
push
mov
add
stc
jb
ja
add
add
inc
add
rep
push
mov
xchg
ret
add
push
mov
xchg
ret
test
ljmp
repnz
stc
jb
imul
stc
jb
add
add
mov
stc
jb
add
add
mov
pushl
push
mov
xchg
ret
add
jb
jp
add
sbb
add
pop
nop
jmp
add
test
lahf
dec
call
stc
jb
ljmp
popa
add
mov
xchg
ret
jp
add
jmp
call
addl
sbb
sar
jb
add
test
mov
push
mov
xchg
ret
test
add
push
stc
jb
inc
add
ja
call
stc
jb
jp
test
ret
mov
push
mov
xchg
ret
jp
test
sar
addb
incl
cmpsl
jl
imul
add
add
add
jb
push
or
sub
add
fs
inc
repnz
jp
test
insl
rol
stos
add
stc
jb
add
dec
mov
stc
jb
xor
das
push
pop
jbe
xchg
nop
jmp
add
test
popf
jl
mov
push
mov
xchg
ret
add
add
sar
cmpb
incl
add
loopne
add
adc
pop
lea
stc
jb
add
and
add
jns
nop
jmp
pop
add
ja
add
pop
stc
jb
add
jl
add
adc
add
add
jne
nop
jmp
add
jnp
cmpsl
mov
jb
loope
add
add
int3
iret
push
mov
scas
in
add
add
outsl
jge
jne
stc
jb
lret
sbb
mov
xchg
incl
xor
std
testl
test
call
add
test
cld
stos
push
mov
xchg
ret
add
add
cwtl
shr
stc
jb
add
ja
add
add
add
jb
adc
popl
stc
jb
test
add
add
fs
mov
stc
jb
add
add
xor
popa
stc
jb
xchg
add
testl
add
jb
push
dec
add
xor
sarb
stc
jb
mov
imul
stc
jb
add
aam
push
nop
jmp
add
add
loope
decb
scas
ret
nop
jmp
add
xchg
insl
add
das
add
stc
jb
aam
test
adc
mov
stc
jb
inc
cmpsl
add
test
jbe
stc
jb
out
aam
stos
cmpw
stc
jb
mov
add
xchg
stc
jb
popf
cmpsl
add
das
call
push
mov
xchg
ret
add
or
mov
add
incl
add
testl
mov
xchg
ret
xor
push
add
stc
jb
or
add
add
xor
jmp
add
sub
or
jb
testl
scas
inc
nop
jmp
sub
add
and
popl
add
mov
ljmp
push
das
test
nop
jmp
insl
std
insl
pop
lahf
pop
add
stc
jb
add
ljmp
in
mov
xchg
ret
test
add
mov
nop
jmp
add
add
add
add
stc
jb
jnp
add
push
popf
mov
stc
jb
add
add
add
and
adc
add
incb
lret
ja
add
pop
add
stc
jb
ljmp
dec
add
stc
jb
xchg
lret
test
add
xor
add
jmp
ljmp
mov
jb
add
add
test
outsb
jmp
nop
jmp
add
popf
cmpsl
xor
sub
incl
insl
add
lcall
pushl
add
stc
jb
xor
add
add
cld
push
mov
test
add
add
add
inc
leave
pop
push
mov
xchg
ret
cmpsl
imul
lock
mov
xchg
ret
test
add
add
add
add
push
out
addb
add
push
mov
xchg
ret
xor
mov
mov
xchg
ret
add
add
fisttpll
in
incl
xor
mov
add
xorb
add
ja
xor
cmpsl
or
jb
adc
add
iret
mov
push
mov
xchg
ret
push
add
sti
inc
nop
jmp
sub
add
xor
test
imul
and
stc
jb
jl
std
add
dec
push
nop
jmp
add
add
xor
stc
jb
testl
imul
imul
add
jb
add
imul
add
add
add
pusha
push
mov
xchg
ret
das
add
add
je
add
jb
push
das
add
iret
lea
nop
jmp
add
test
pop
push
mov
xchg
ret
xor
popl
pop
or
add
xor
or
push
test
or
stc
jb
mov
ret
mov
xchg
ret
incb
popl
xchg
inc
add
inc
in
add
stc
jb
add
test
mov
subb
add
div
add
mov
movsb
sbb
mov
xchg
ret
add
lahf
addb
push
nop
jmp
jl
add
add
mov
add
add
jne
push
mov
xchg
ret
add
add
stc
jb
test
ljmp
test
stc
jb
add
insl
mov
jb
int3
inc
jl
add
sbb
addb
xor
std
add
cmpsl
testb
stc
jb
aad
add
add
andb
jnp
insl
add
add
loope
pop
stc
jb
test
xor
xchg
test
stc
jb
inc
icebp
pop
sbb
mov
rep
stc
jb
das
cmpsl
jl
add
sub
xor
add
sub
mov
stc
jb
push
popf
add
nop
jmp
xchg
mov
add
imul
in
pushl
add
jnp
jmp
stc
jb
add
mov
rorb
push
stc
jb
xor
add
add
pusha
add
add
mov
stc
jb
test
out
mov
nop
jmp
add
add
movsl
ja
bound
mov
stc
jb
jnp
ljmp
add
dec
je
stc
jb
cmpsl
add
sbb
jb
push
xor
add
add
testl
stc
jb
not
addl
stc
jb
das
and
pop
jp
jle
add
add
xor
jnp
imul
add
test
inc
add
movsl
and
mov
push
nop
jmp
add
loopne
inc
test
addl
dec
or
jb
add
add
sbb
icebp
mov
fwait
add
nop
jmp
icebp
add
xor
lcall
incl
test
ja
add
int3
popl
mov
inc
add
ljmp
push
mov
xchg
ret
push
add
inc
add
add
ljmp
add
add
insl
add
push
ljmp
add
ja
aam
jmp
stc
jb
add
das
mov
add
nop
jmp
std
xor
pop
add
or
add
adc
jb
add
test
jl
ljmp
decl
test
stc
jb
add
test
int3
or
inc
add
add
mov
xor
nop
jmp
icebp
mov
test
nop
jmp
add
push
out
add
rcrb
stc
jb
imul
push
adcb
sub
xchg
xchg
mov
push
stc
jb
add
add
imul
mov
data16
incl
aam
addl
popa
add
jb
mov
add
push
imul
sub
incl
push
incb
out
and
push
mov
xchg
ret
mov
add
shrb
mov
xchg
ret
add
mov
push
mov
xchg
ret
test
nop
jmp
add
inc
ja
loope
add
jmp
xorb
std
add
add
movb
dec
mov
push
mov
xchg
ret
jp
add
sar
add
xor
test
test
jb
int3
add
add
mov
stc
jb
sbb
add
inc
loopne
jb
mov
push
mov
or
add
add
fst
jg
ljmp
addb
mov
add
sub
repz
jb
add
add
adc
stos
jmp
stc
jb
add
or
stc
jb
add
aad
cmpsl
add
add
lahf
add
stc
jb
add
add
test
stc
jb
icebp
add
mov
add
stos
and
nop
jmp
icebp
add
add
add
mov
jb
add
add
lret
psubd
decl
add
ljmp
call
add
xchg
aam
sub
jmp
add
loope
or
fucomp
xor
out
stc
jb
movsl
lahf
add
movsb
stc
jb
add
push
loope
fs
add
push
stc
jb
add
fs
or
stc
jb
loope
aam
mov
push
mov
xchg
ret
and
mov
stc
jb
loope
add
test
stc
jb
add
jmp
sub
add
stos
add
stc
jb
notl
add
subl
nop
jmp
loopne
add
add
jmp
mov
adc
jb
add
incb
sub
mov
stc
jb
test
add
add
dec
jmp
nop
jmp
xchg
add
add
push
add
inc
add
bnd
cmpsl
add
or
or
test
add
add
jb
test
xor
call
push
mov
xchg
ret
xor
and
push
mov
xchg
ret
add
push
lcall
ljmp
inc
add
sub
mov
push
stc
jb
add
mov
cmpsl
xor
popa
stc
jb
add
cmpsl
sub
cmp
jmp
pop
test
test
dec
cmp
jb
and
push
add
stc
xor
stc
jb
add
add
stc
jb
add
add
testl
in
stc
jb
xchg
adc
lods
push
mov
xchg
ret
das
cmpsl
xor
mov
stc
jb
add
fnsave
push
stc
jb
cmpsl
add
add
dec
test
nop
jmp
add
mov
fs
mov
xor
add
nop
jmp
sub
test
add
cmpsb
icebp
inc
add
push
jl
mov
stc
jb
add
add
incl
out
add
jb
add
add
int3
lret
sub
mov
xchg
ret
add
add
test
mov
sbb
ljmp
and
jnp
add
fsubrl
stc
jb
add
test
cmpsl
add
rorl
pop
push
mov
xchg
ret
push
icebp
add
xchg
and
inc
add
sub
movsb
add
add
add
stc
jb
add
xor
rcrl
ljmp
add
add
mov
nop
jmp
add
add
cmpsl
xchg
ret
or
test
cmp
ret
add
add
nop
jmp
or
add
test
loope
lock
mov
xchg
ret
add
add
mov
inc
add
add
add
scas
testl
nop
jmp
inc
int3
add
imul
outsb
cld
pushl
add
sbbb
add
stc
jb
ljmp
test
jmp
aam
aad
pop
dec
push
mov
xchg
ret
add
mov
sub
stc
jb
fldl
out
add
stc
jb
add
add
stc
jb
add
add
popl
fimuls
data16
dec
xor
add
add
dec
add
stc
jb
xor
add
push
mov
xchg
ret
mov
add
cmpsb
lret
nop
jmp
add
add
or
push
lods
push
push
mov
xchg
ret
add
iret
mov
push
mov
xchg
ret
mov
add
test
jb
xor
dec
push
stc
jb
add
sbb
add
add
movzwl
nop
jmp
push
std
add
popl
decb
andb
pushl
add
add
push
mov
push
mov
xchg
ret
lret
add
pop
mov
stc
jb
sbb
imull
int3
add
ud1
or
stc
jb
ljmp
jmp
test
add
icebp
movsb
js
popa
add
jb
jp
cmpsl
loope
ja
add
aaa
je
pop
stc
jb
insl
jp
test
movsl
add
stc
jb
out
xorl
jmp
stc
jb
add
and
nop
jmp
push
xor
sbb
sbb
popa
add
mov
xchg
ret
mov
aam
call
jb
add
add
popl
xlat
push
add
nop
jmp
imul
mov
add
mov
stos
mov
add
cmp
stc
jb
add
add
loopne
mov
add
jg
nop
jmp
sbb
add
add
popa
push
mov
xchg
ret
xor
addr16
and
orb
test
dec
outsl
popa
fs
jmp
subl
jne
stc
jb
test
add
cmpl
nop
jmp
xchg
add
add
add
stc
jb
test
icebp
inc
ljmp
adcb
lcall
add
xor
and
jmp
add
push
ljmp
lret
mov
stc
jb
xor
mov
add
movzwl
stc
jb
add
pop
nop
jmp
add
mov
add
xor
stc
jb
or
sbb
repz
add
add
add
jb
sbb
inc
out
add
add
jl
xor
loop
inc
add
xor
xchg
stc
jb
xchg
add
add
sub
stc
jb
add
xchg
incb
add
test
stc
jb
mov
sub
mov
stc
jb
add
pop
mov
stc
jb
test
out
test
jb
push
jnp
add
add
jl
sbb
jb
xchg
add
lret
aam
shl
stc
jb
sub
add
testb
mov
and
jb
xor
pop
mov
stc
jb
add
insl
sbb
ja
pop
add
stc
jb
aam
add
add
or
mov
xchg
ret
or
add
pmulhuw
call
ljmp
pause
jmp
cmpsl
sub
popf
imull
add
mov
stc
jb
add
aad
add
mov
push
mov
xchg
ret
add
add
clc
push
mov
xchg
ret
inc
add
jnp
mov
and
incl
std
jl
das
add
push
stc
jb
aam
add
add
mov
stc
jb
xor
xor
icebp
and
mov
stc
jb
incb
cmpsl
test
and
stc
jb
add
lret
add
push
mov
xchg
ret
add
loop
stc
jb
test
xor
push
mov
xchg
ret
add
in
ret
popf
mov
stc
jb
add
std
add
sub
xlat
cltd
add
nop
jmp
das
int3
add
dec
or
pushl
das
lret
add
jne
nop
jmp
sub
add
mov
stc
jb
aad
or
stc
jb
mov
sbb
jmp
push
sbb
add
add
test
stc
jb
test
jnp
dec
push
push
mov
xchg
ret
add
test
incl
mov
xchg
ret
add
popf
mov
cwtl
mov
stc
jb
ja
aam
outsl
mov
push
mov
xchg
ret
ljmp
dec
imul
incl
notl
add
stc
jb
add
test
out
imul
stc
jb
jnp
pop
xchg
fs
jecxz
nop
les
jl
jle
stc
jb
std
add
add
cmpsl
jno
mov
push
mov
xchg
ret
jnp
or
arpl
fwait
add
stc
jb
xor
add
push
mov
nop
je
pop
mov
stc
jb
jp
cmpsl
mov
and
dec
xor
push
mov
xchg
ret
test
ja
sbb
in
add
rclb
dec
ret
addb
add
pushf
out
add
les
adcl
jp
loop
imul
pop
jbe
and
xor
and
in
inc
add
mov
xchg
sub
negb
dec
ret
cmc
jae
insl
xor
std
jg
ret
xchg
cld
dec
xchg
cmp
movsb
xor
pop
jmp
rolb
inc
lcall
jo
pop
je
call
sbb
inc
add
les
mov
mov
mov
cs
add
xorl
ror
lcall
add
adc
jbe
mov
mov
enter
cmc
mov
or
xchg
cmp
cmpsb
xorl
dec
cmp
in
push
imul
mov
jno
cmovb
stos
cmp
inc
add
xchg
mov
add
inc
add
aas
sbb
enter
je
or
lcall
lods
dec
jnp
iret
icebp
or
jae
add
scas
stos
mov
sub
add
inc
add
xchg
pop
push
adc
test
jo
xlat
call
xor
sbb
adc
dec
sbb
popa
aam
dec
dec
pushf
and
xor
imul
mov
adc
add
mov
dec
add
cmp
mov
pusha
add
inc
imul
stos
aaa
xchg
mov
push
xor
arpl
insb
stos
push
jne
arpl
xor
loopne
pop
or
jle
sar
cli
inc
fs
xchg
pop
push
popf
mov
lea
repz
add
jge
enter
and
popl
cmc
push
addr16
mov
mov
ret
mov
push
xlat
pop
lds
pop
in
ljmp
add
xchg
mov
ljmp
mov
mov
mov
mov
lods
repz
icebp
sbb
push
xchg
loop
dec
iret
jno
cmc
divl
cmp
jg
rol
aam
cmp
lahf
movsl
pushf
dec
mov
push
scas
sbb
pushf
int
mov
mov
add
pop
cmpsl
cmp
insb
inc
add
js
jl
nop
jg
jnp
and
adc
cmp
pop
pop
mov
daa
addb
add
add
ljmp
rclb
sub
add
pop
pop
outsl
into
cmp
add
test
adc
mov
out
sti
mov
repnz
cmpsl
shll
xor
scas
pop
loopne
ja
add
fdivr
div
sbb
jle
test
lea
xor
cwtl
stos
movb
pop
and
cld
in
arpl
cld
jle
pop
dec
iret
imul
fdivl
push
dec
adc
dec
sbb
setno
inc
add
aad
loop
and
mov
ljmp
call
fs
sub
test
dec
stos
sbb
mov
push
add
add
xchg
jmp
popa
stos
jge
add
out
icebp
push
add
mov
push
pop
push
mov
aam
adc
imul
dec
scas
lods
cld
sub
out
push
add
aaa
xchg
jp
es
add
cli
lcall
dec
in
dec
arpl
push
jg
or
int3
sbb
cld
and
mov
add
or
out
cltd
addb
adcl
mov
add
movsb
xchg
jo
mov
div
cltd
add
push
in
pop
popf
pop
dec
addb
mov
cwtl
in
adc
xchg
ret
add
scas
mov
jns
mov
adcl
loop
inc
jns
cld
lret
movb
add
mov
add
nop
neg
dec
and
and
mov
shrl
das
fiaddl
insb
dec
cmp
repz
pop
fmull
jle
es
sbb
fwait
leave
bound
movb
mov
cmp
or
add
dec
add
push
push
js
shlb
mov
inc
arpl
stc
jb
dec
ret
mov
mov
xchg
enter
iret
loopne
pop
dec
pop
repz
test
push
aam
sub
push
loope
addb
add
sbb
stos
jno
dec
jae
jmp
arpl
data16
ror
sbb
or
arpl
out
test
push
sbb
repnz
lods
aas
dec
aad
adc
add
mov
mov
or
imul
adc
sub
pop
and
sti
pop
mov
push
add
lcall
jmp
add
dec
iret
out
lcall
cmp
ds
stc
mov
sahf
add
sbb
adc
pop
dec
cs
xchg
jno
cmp
cmp
push
jb
dec
jae
jp
add
add
mov
movsb
dec
imul
pop
inc
add
bound
push
faddl
add
mov
adc
stos
cmp
lds
add
dec
movsb
dec
jne
mov
sub
add
stos
cld
mov
adc
mov
mov
clc
add
aad
cmp
leave
jo
cmp
shlb
bnd
cmp
dec
xchg
push
adc
and
cmp
xchg
mov
lret
mov
les
lods
dec
daa
push
add
or
add
bound
push
mov
sbb
lsl
addb
add
pop
sahf
daa
addb
fs
cmp
push
add
hlt
mov
in
sub
push
add
bound
js
dec
je
cmp
lods
cmp
sub
and
nop
fbstp
jno
and
jl
out
mov
add
xchg
in
mov
add
mov
adc
int3
repnz
dec
das
lea
mov
enter
cld
jg
add
add
pop
rolb
cmp
sti
aaa
xlat
rcr
and
adc
loop
repz
es
test
sbb
movsb
popa
int
jmp
add
sti
push
and
push
lea
cmpsb
mov
pop
mov
enter
mov
or
jb
cld
repz
and
cmovs
adc
jae
cltd
dec
mov
push
inc
push
rorl
je
addb
xor
push
pop
add
and
xchg
push
stos
add
pop
mov
and
and
push
inc
add
test
js
int3
cmp
mov
mov
clc
bound
mov
pushf
out
push
xchg
jl
pop
stc
popf
mov
xorl
xchg
movsl
aad
add
rclb
scas
test
pop
out
xlat
xor
add
push
cmp
fsub
aaa
jl
xor
mov
xchg
push
cwtl
int3
lahf
loope
xchg
jmp
sahf
movsl
xchg
mov
stos
int3
inc
mov
pop
push
fistl
or
hlt
adc
les
mov
lret
stc
bound
addb
into
in
adc
sub
lods
addr16
ja
add
sbb
out
jg
add
pop
and
fiadds
add
shll
add
enter
pop
cmp
cwtl
gs
mov
inc
iret
test
cmp
or
hlt
xor
popa
adc
add
mov
mov
inc
add
dec
or
popa
sub
sub
in
mov
ret
das
and
mov
dec
push
or
and
icebp
fstpt
pop
jo
jne
je
xor
out
xchg
or
or
add
dec
dec
rcrl
movb
mov
push
add
add
stos
add
in
ja
insl
lret
sahf
push
xor
dec
repnz
push
movb
dec
lds
pop
rorb
inc
dec
aad
push
xchg
jmp
sbb
add
add
pop
push
sbb
addb
push
push
ja
and
xchg
xor
dec
fnsave
hlt
insl
dec
add
push
scas
pop
mov
movb
push
nop
call
aad
jae
movsb
sahf
or
mov
push
mov
add
pop
lods
xchg
inc
add
add
jecxz
jmp
dec
xor
movsl
das
icebp
ret
fidivl
pop
das
inc
movb
lock
dec
sbb
notb
iret
addb
add
outsl
inc
cmc
jecxz
add
inc
add
pop
repnz
bound
inc
add
cmc
mov
cli
push
lcall
ljmp
popf
inc
add
addb
mov
add
inc
add
jnp
add
jo
outsb
hlt
pop
mov
lcall
inc
add
cmpsl
jo
pop
adcl
ljmp
mov
addr16
pop
inc
add
add
jo
pop
jns
mov
int3
inc
pop
mov
popf
test
cmpsl
sub
push
xor
jmp
sahf
dec
xlat
imul
lea
stc
mov
scas
mov
fcoml
movb
mov
mov
cld
in
in
ja
push
push
rolb
fidivl
inc
add
test
fs
or
incb
add
cmp
gs
dec
mov
pusha
add
ja
loope
cmp
jne
jmp
and
adc
mov
ret
scas
shrl
push
fildl
outsl
add
mov
inc
add
ljmp
icebp
pushf
repz
out
pop
pop
enter
dec
adc
mov
xor
pop
and
fildll
pop
inc
adc
mov
sbb
adc
add
adc
push
xchg
cmpsl
xchg
pop
lcall
movb
loope
jno
mov
cld
add
inc
ljmp
and
or
sbb
xlat
stos
adc
xor
int3
sbb
shrb
inc
and
mov
adc
fldcw
incl
mov
or
mov
mov
loope
and
dec
sub
xor
jbe,pt
cs
ss
mov
rolb
cmp
jg
and
jns
xor
inc
push
scas
rolb
inc
pop
lods
push
cmp
or
add
ror
xor
dec
gs
dec
in
sbb
add
loope
jl
fsubrs
pop
xchg
mov
into
push
pop
stc
les
push
mov
dec
pop
mov
adc
push
cmp
or
clc
sbb
push
mov
mov
movlhps
or
mov
add
roll
outsl
push
adc
add
imul
lods
div
les
and
mov
ret
and
test
gs
stos
mov
fwait
dec
pushf
cltd
imul
stos
jb
or
cmp
ljmp
nop
rolb
xchg
dec
aad
sbb
fimull
mov
xchg
call
repz
imul
cs
bound
mov
out
jp
sbb
repz
jp
int3
sahf
dec
mov
test
lret
cmc
jecxz
mov
sbb
mov
or
add
cmpsb
mov
add
cmp
cmpsb
cltd
mov
sub
daa
and
jle
or
jmp
arpl
mov
scas
scas
cmpsl
lods
scas
pop
mov
cmp
add
test
xor
scas
inc
outsb
cmp
push
push
clc
or
dec
xor
clc
xchg
mov
push
loop
mov
mov
dec
add
mov
test
add
incl
rcll
cmp
xchg
ljmp
jecxz
lret
stc
out
mov
loop
sbb
add
pushf
xchg
inc
sbb
pop
and
adc
mov
out
add
jnp
add
psubsb
xor
ds
mov
xor
push
add
cmp
xor
ret
jne
mov
int3
or
es
xchg
cs
nop
lds
dec
inc
hlt
adc
jecxz
xor
mov
pop
xor
mov
or
pushf
inc
imul
sub
xor
mov
cmp
pop
test
add
and
mov
iret
push
mov
mov
mov
add
sti
mov
inc
add
jge
push
jl
push
sub
fwait
sub
ja
daa
clc
test
push
int
adc
xchg
or
fcomp
and
mov
hlt
cmp
push
xchg
les
loope
movsl
outsl
xchg
std
clc
inc
add
cld
add
jnp
xchg
lds
sti
lret
insl
lds
idivl
or
pop
jle
mov
and
aas
mov
add
jno
sahf
inc
add
xchg
add
js
icebp
idivb
dec
mov
mov
add
adc
movb
ja
out
cmpsb
rolb
fdivl
mov
inc
add
pusha
add
push
jge
repz
pop
mov
sti
aaa
pop
sbb
imul
mov
das
subl
xor
cmp
mov
dec
or
jae
lret
scas
pop
mov
add
inc
add
dec
cmpsl
fidivs
mov
add
add
add
sbb
push
add
xor
ja
inc
add
mov
ds
cs
mov
enter
cltd
mov
xchg
testl
fisubs
int
in
in
cmp
xor
in
mov
and
rolb
cmp
xor
or
pop
int
mov
jb
insl
movb
add
imul
mov
std
jb
mov
push
cmp
daa
dec
xor
and
sbb
stos
add
add
lock
repnz
xchg
jmp
ret
aam
iret
or
and
fadd
add
xchg
mov
test
addb
outsl
pop
dec
movl
sbb
outsl
inc
movb
insl
lret
ja
pop
cmp
or
jne
and
fs
sbb
stc
pushf
in
adc
fnstenv
sbb
and
mov
pop
aad
aas
mov
aad
loope
jge
mov
add
daa
xchg
roll
push
mov
mov
jne
add
sbb
dec
iret
dec
sarb
idivb
dec
mov
pop
stos
cmp
lahf
and
sub
cmpsb
xor
xor
fs
popf
mov
arpl
rolb
pop
iret
mov
mov
mov
ds
jnp
rolb
icebp
sub
dec
or
lods
mov
add
sbb
sub
pop
push
cmp
push
jns
xor
pop
mov
and
add
push
or
xchg
out
dec
addb
add
shl
push
xor
ffreep
add
jge
or
and
or
jno
fimuls
jmp
add
lds
fidivrl
mov
sub
mov
data16
outsl
in
addr16
mov
push
repnz
mov
push
imul
jmp
mov
add
loope
inc
add
cli
sahf
jno
mov
cs
rcrl
stos
aam
out
pop
jnp
js
lcall
fbstp
shlb
or
test
in
ja
jno
int
imul
rolb
dec
adc
dec
sub
mov
imul
pop
ljmp
fabs
jb
add
lds
cld
call
daa
and
xorl
add
or
sti
lods
pop
jecxz
scas
mov
ss
adc
idiv
ds
inc
cli
xchg
mov
test
add
ficoml
insb
add
dec
out
jle
ret
fs
dec
sarl
pusha
add
sti
sbb
iret
std
mov
sbb
xchg
inc
mov
add
jne
mov
lret
add
fildll
arpl
add
test
mov
jbe
sub
insb
test
and
js
movsl
insb
cmpsl
push
add
scas
or
icebp
sbb
add
aaa
in
or
js
lds
adc
lods
xchg
imul
call
sbb
jp
mov
enter
icebp
mov
aas
and
movsb
das
cmp
addb
loope
add
push
mov
mov
mov
add
pop
sti
jno
sbb
jbe
inc
adc
mov
iret
int3
cmp
jp
cwtl
mov
jno
push
xchg
jl
xchg
sub
pop
rcr
ss
dec
pop
call
mov
push
cmp
mov
add
pop
dec
mov
sbb
add
or
inc
add
movsl
or
addr16
or
ja
add
adc
mov
and
loopne
mov
mov
jmp
js
add
jmp
bound
xchg
scas
lahf
test
sbb
ret
add
adc
movsl
push
fmull
add
popa
repnz
add
and
add
jb
out
sahf
mov
add
mov
sbb
addb
outsl
add
sub
add
addr16
dec
lds
add
mov
fcoml
iret
xchg
sbb
or
insl
aas
mov
add
push
sub
add
dec
stos
ret
insl
sti
mov
cmpsb
or
lcall
mov
dec
push
mov
iret
out
and
dec
or
pushf
adc
inc
add
mov
pop
adc
add
insl
inc
dec
jb
xor
xchg
xlat
push
movl
mov
shll
mov
fldl
mov
adc
jp
fbstp
mov
ja
ret
in
adc
out
inc
add
mov
pop
aam
sub
sub
notl
add
mov
xchg
push
push
sbb
adc
mov
xchg
push
in
ja
mov
dec
das
fistps
dec
dec
int3
adc
xchg
xor
or
cmp
das
std
sub
add
in
add
mov
and
xchg
and
jno
ljmp
sub
addb
inc
mov
mov
sbb
in
and
sti
cmp
in
mov
shr
mov
psrad
fidivl
lock
fucomi
mov
mov
enter
mov
and
pop
flds
addb
popf
jmp
xchg
es
dec
fwait
int3
mov
loopne
mov
jmp
and
add
mov
push
test
mov
cmc
lahf
scas
xor
adc
mov
hlt
cmpsb
push
sbb
cld
jg
inc
add
mov
es
dec
arpl
imul
add
mov
bnd
pop
cmp
cmpsb
dec
iret
cmp
aas
addb
int3
jno
aad
pop
push
mov
cmp
ret
add
add
add
xor
sbb
jno
and
cltd
add
lahf
ss
mov
xchg
xor
xchg
lods
bound
push
imul
or
pop
cmc
add
mov
sbb
pop
push
loop
add
aad
out
add
add
loope
popf
lcall
add
push
sbb
and
out
orl
pop
sub
jnp
jb
imul
pop
aad
inc
sahf
xchg
gs
mov
paddusw
sub
pop
clc
leave
movsb
pop
mov
mov
cmpsl
jns
rcrl
lea
leave
sbb
loopne
xchg
pop
cs
add
pushf
mov
inc
mov
mulb
jo
ret
xchg
and
movsl
adc
imul
xor
cli
clc
fmuls
mov
outsb
sbb
lcall
fidivrs
sbb
sbb
add
stos
cmp
mov
je
mov
add
mov
mov
push
sbb
mov
mov
xor
cs
push
cmpsb
sub
xor
add
add
xor
outsl
testl
lret
mov
sti
inc
ret
cmp
push
xor
adc
xor
lods
in
cmpsl
inc
add
add
loop
fcomps
dec
mov
sbb
jbe
int3
aaa
push
add
sbb
xchg
add
sbb
sbb
sbb
jle
sti
cmpsb
mov
add
dec
ljmp
int3
push
mov
mov
ss
add
xorl
rcrb
or
push
push
pop
mov
lods
push
gs
pop
in
into
mov
xor
jbe
sub
rcr
into
pop
aaa
test
out
mov
or
call
aas
lret
mov
push
call
push
int
rolb
sub
movsl
mov
cwtl
lret
pop
dec
sbb
add
or
lds
add
test
mov
js
outsb
enter
mov
jo
add
cmovnp
sub
add
add
in
push
mov
test
xchg
sub
icebp
pusha
add
xchg
pop
stos
call
repz
jge
call
mov
addb
push
and
enter
add
mov
mov
mov
xlat
xchg
dec
dec
addr16
das
jg
add
or
ss
adc
add
add
insb
push
nop
jno
jns
and
push
scas
dec
mov
pop
shll
push
xor
or
jmp
pop
sbb
add
mov
xchg
inc
add
xchg
sbb
push
fidivs
test
cmp
add
leave
insb
xor
jnp
sti
js
stc
test
add
mov
add
stos
cmpsb
xorl
lahf
xchg
add
push
inc
inc
add
jae
sahf
rolb
mov
jns
sahf
cmp
dec
push
mov
add
add
dec
lahf
mov
dec
repz
insb
xor
cmc
mov
into
outsl
inc
sbb
subl
call
add
dec
ja
outsl
repz
and
lahf
das
xchg
adc
pop
and
rorl
dec
push
cmp
mov
jle
push
and
mov
add
movb
repnz
notl
jle
into
mov
cmp
cmp
sti
test
add
pop
popa
jg
jl
dec
and
jp
jmp
ret
sub
xchg
pushf
in
mov
mov
sub
inc
add
or
pop
stc
or
mov
out
sub
test
add
ficoml
xor
push
jno
xchg
adc
add
andl
lods
mov
jmp
testb
mov
cltd
out
movsb
inc
add
pop
orl
jae
pop
roll
iret
pusha
add
jl
jns
movsl
call
or
enter
xor
xchg
fidivrs
push
mov
xchg
mov
insb
pop
and
or
dec
dec
sbb
cmp
movb
cli
xchg
neg
mov
lods
mov
pop
push
mov
movsb
jns
mov
add
loop
add
jnp
sbb
add
call
shl
pop
push
mov
add
dec
jne
lds
dec
mov
cli
add
addr16
jmp
fadd
add
push
out
ret
xchg
add
lds
jne
fidivl
movb
neg
jecxz
sub
or
gs
aaa
aad
adc
jno
push
mov
sbb
add
push
rcll
add
cwtl
jge
jae
add
rorb
lds
lahf
loopne
gs
dec
aad
lahf
repz
lret
dec
stos
xor
cmp
pop
orl
sbb
jp
push
out
jns
inc
add
call
jae
sub
add
or
cltd
mov
jge
or
add
cmc
shll
and
add
rorl
mov
movsl
addb
jbe
leave
lods
sahf
aad
dec
dec
out
xchg
jmp
scas
add
test
sbb
rol
xchg
popa
and
dec
cmpsl
fwait
scas
scas
cmp
xor
mov
ret
jl
rolb
push
test
push
insl
das
jnp
xchg
xchg
lds
fsubl
adc
cwtl
es
in
jecxz
std
add
mov
fs
sub
loopne
jo
pop
and
enter
lods
mul
addb
in
jnp
aaa
add
and
icebp
mov
int3
adc
lds
pop
insl
or
inc
lock
ret
mov
sub
cmp
xchg
inc
add
pop
cltd
cmp
adc
pop
cmp
out
fs
fwait
mov
add
add
mov
repz
lds
push
fnclex
xchg
lcall
mov
call
lods
cli
xor
add
push
std
xor
fincstp
xor
cs
pop
xchg
mov
xchg
dec
fsubs
pop
fsts
leave
mov
fwait
push
add
es
bnd
add
hlt
shr
xor
and
pushf
adc
fucomp
push
push
add
cld
xchg
es
mov
add
scas
push
or
aaa
addb
dec
call
in
or
push
das
lock
inc
add
stos
data16
rorb
aad
imul
add
inc
dec
iret
bound
mov
xorl
addr16
scas
lret
inc
stc
movsb
cmpsl
jbe
add
mov
arpl
in
and
sahf
xchg
inc
add
fsubrl
ret
sub
jae
add
inc
inc
add
xchg
add
push
loope
push
jg
mov
sub
cmp
int3
push
sub
lods
gs
mov
add
std
rolb
jg
call
adc
add
adc
test
adc
fdivrs
mov
sahf
jb
ffree
add
pop
gs
mov
adc
daa
xchg
mov
repz
jo
ja
mov
lcall
mov
scas
jge
push
dec
jns
cli
icebp
cmpsb
outsb
movsb
xor
mov
icebp
sbb
sub
cmp
inc
aas
imul
imul
ret
loop
dec
mov
lcall
js
repnz
pop
dec
sbb
and
lods
dec
in
sahf
jp
mov
xor
leave
pushf
ret
pop
inc
in
cmpsb
fdivr
lods
adc
or
jnp
rol
add
jmp
xchg
add
add
mov
fistps
out
xchg
xchg
pop
insl
das
xchg
pop
push
or
jnp
rolb
and
lds
aaa
mov
dec
test
loop
test
aaa
fcmove
imul
push
add
pop
push
jne
add
mov
scas
inc
aas
xchg
inc
mov
jle
nop
and
push
add
push
repz
dec
mov
and
ret
pop
addb
push
xor
push
dec
inc
add
out
push
addb
out
mov
insb
icebp
loopne
insl
push
lds
xacquire
and
std
sub
add
add
nop
push
dec
out
pop
fs
pop
dec
or
clc
dec
ds
cwtl
push
add
inc
or
mov
jne
jp
in
rcrl
insb
jbe
jecxz
cld
xor
in
jg
pushf
dec
and
insb
test
mov
ljmp
enter
scas
fs
rorl
lcall
cmp
aaa
adc
xor
adcl
push
xor
insb
mov
jmp
add
popa
out
push
sbb
jp
pushf
add
sahf
pop
pop
int3
cmp
loop
pop
push
jo
and
cli
not
add
shl
test
xchg
mov
pop
adc
pop
pop
mov
js
or
rolb
icebp
jp
out
cmpsl
xchg
add
into
sbb
jle
popf
jns
xlat
loop
xlat
popf
int
nop
mov
test
enter
stos
out
jb
outsl
imul
test
xor
mov
das
and
mov
inc
add
add
jae
inc
or
sbb
or
push
mov
shll
push
cld
call
jecxz
fcomp
call
inc
push
subl
ret
rcrl
dec
mov
std
xor
gs
jo
in
sbb
imul
add
add
pop
imul
adc
mov
mov
lret
mov
inc
push
jbe
pop
add
push
out
and
fadd
add
dec
cmp
testl
push
add
roll
and
dec
mov
testb
mov
jmp
jno
movsl
out
add
cmp
gs
mov
adc
aad
lods
outsl
or
mov
paddusb
sbb
ja
loopne
js
push
cmp
test
push
push
setp
pop
jp
mov
sbb
or
loope
push
cmp
addb
jecxz
jne
icebp
or
jns
push
mov
imull
pusha
add
mov
mov
inc
add
mov
int
or
jb
cltd
and
add
lds
dec
inc
enter
int
imul
shll
dec
addb
fcmovb
shr
mov
ss
add
das
xchg
or
pop
dec
fidivrl
cltd
cmc
bound
jmp
outsl
jbe
sarl
scas
adc
addb
popf
cwtl
push
jmp
insl
fisubl
push
push
cmp
push
mov
add
adc
push
push
mov
add
lods
push
inc
add
mov
es
ffree
ljmp
xor
cmp
add
jno
pop
shrl
scas
mov
jmp
add
ja
jecxz
hlt
fwait
loope
rcrb
jg
iret
lret
push
out
inc
rcl
jecxz
add
jg
xorl
cmc
cmp
push
enter
jmp
jne
pop
insb
fbstp
cmp
add
pop
cmc
pop
add
push
xchg
daa
add
ljmp
fstps
nop
pop
sbb
mov
mov
lock
aad
mov
and
dec
adc
rcll
out
add
int
add
hlt
xchg
rorb
add
aas
xchg
mov
sub
repnz
xchg
movsl
icebp
cmp
xchg
push
add
add
int
bound
xchg
addr16
cmp
pop
mov
mov
lods
dec
in
dec
mov
bound
cltd
lds
push
mov
dec
daa
sbb
cs
fsubrl
fwait
mov
lcall
not
jo
cld
jns
xor
add
pusha
add
push
fisubs
lods
mov
add
add
add
dec
pop
sub
shrl
or
enter
imul
pop
stos
mov
int3
or
fldcw
lret
aam
in
mov
add
nop
mov
add
add
aad
mov
cmp
test
or
adc
jmp
js
push
test
bound
xor
fcoms
fdivrl
pop
ljmp
adc
bound
inc
add
scas
jo
mov
mov
into
out
cmc
sbb
mov
lock
xor
push
add
push
test
xlat
pop
add
and
or
sahf
cmp
in
jge
rolb
sahf
jae
jge
bound
fs
xchg
adc
lahf
xlat
sarl
push
cmp
in
movsb
mov
xchg
rolb
jg
add
adc
mov
pusha
add
and
add
or
xlat
lea
mov
mov
ret
xor
mov
ficompl
add
sahf
pop
pop
sub
xchg
mov
ds
es
daa
ret
add
and
jb
pop
mov
je
out
cmp
cld
sbb
testb
add
pop
adc
or
lret
in
pop
aas
or
les
fwait
sbb
pop
leave
stc
dec
pop
int
inc
jns
movsl
mov
int3
xor
jmp
lcall
mov
adc
ljmp
popl
sub
data16
pop
push
mov
addr16
add
inc
scas
push
push
xlat
xchg
rolb
add
mov
addb
add
jge
jge
les
insb
addb
test
jne
add
and
inc
add
mov
and
into
pushf
ds
shlb
add
add
dec
aam
pop
popf
test
bound
xor
mov
jmp
adc
sbb
xchg
andl
inc
imul
je
les
lods
shr
xchg
jne
jbe
sbb
jl
testl
jb
jb
and
scas
push
call
sbb
cmc
fcmovne
pop
ret
mov
mov
mov
add
mov
add
mov
enter
daa
fidivrs
addr16
or
fstpt
sbb
loope
fldenv
add
mov
lods
sbb
add
out
lea
bound
dec
push
and
mov
in
imul
sub
repnz
add
jns
jno
mov
lods
jp
sbb
mov
xlat
lahf
mov
mov
xchg
filds
jmp
fldcw
stos
lcall
xchg
outsl
jnp
mov
loope
dec
push
out
add
cltd
jmp
je
push
sbb
loope
clc
dec
xor
call
mov
mov
aad
arpl
out
icebp
bound
push
insb
push
xor
mov
mov
adc
mov
add
push
jle
add
enter
in
sub
insl
lods
xchg
fnstcw
insl
rolb
jl
lcall
xchg
mov
mov
cmp
dec
test
call
dec
incb
stos
dec
xchg
cmp
popf
push
lret
cmove
ds
inc
stos
out
lods
ret
das
testb
add
les
pop
fsubr
aas
sbb
out
mov
popf
sub
add
rol
add
into
push
mov
dec
out
cmc
shlb
add
daa
sbb
and
cmc
gs
jo
mov
or
testl
movsl
fiadds
jle
add
mov
push
scas
out
nop
cltd
mov
xor
or
outsl
inc
add
and
mov
cmpsb
sahf
mov
and
bound
mov
adc
cld
push
add
movb
cwtl
scas
testl
lea
mov
mov
sub
ret
arpl
inc
dec
leave
pop
fstl
pop
push
aad
mov
aas
out
in
dec
sub
dec
stos
or
imul
dec
adc
inc
hlt
push
fstl
in
add
or
jno
add
inc
add
ret
add
bound
sbb
push
rolb
popa
xchg
lock
in
pop
in
daa
add
inc
add
loopne
dec
mov
fdivp
ds
addl
mov
xorl
push
in
in
xor
mov
pop
call
xor
add
jno
mov
mov
pop
jo
dec
push
mov
es
insb
xor
outsl
push
movsl
mov
nop
stos
insl
aaa
test
aad
mov
jle
cmp
inc
push
cmp
push
mov
dec
mov
push
insl
cltd
xchg
test
add
and
hlt
in
pop
pop
test
iret
in
cld
mov
test
addb
rolb
lods
and
mov
cli
and
ret
insb
mov
pop
cmp
lcall
add
jbe
add
loopne
out
xchg
adc
adc
pop
or
adc
in
test
or
stc
add
pop
xlat
ljmp
add
and
xor
jo
lret
cmp
test
cld
repnz
add
rolb
or
repnz
int3
arpl
add
dec
adc
inc
add
xchg
out
jae
dec
fwait
xor
xor
cmpsb
pop
dec
outsl
or
ret
fmul
inc
add
movsl
fs
movb
jle
push
mov
test
js
scas
lods
lahf
test
mov
cwtl
dec
xlat
xor
insb
jno
notl
in
test
out
ret
lahf
seto
mov
mov
add
push
sbb
stc
movsl
mov
stos
cwtl
fstl
mov
xchg
dec
loopne
fs
pusha
add
shll
mov
pushf
cmp
xor
idivl
add
test
out
push
xchg
pop
dec
xor
js
or
add
cmp
and
jo
add
hlt
xchg
xlat
cmp
sub
test
in
add
add
add
mov
sbb
adc
mov
mov
mov
mov
sub
sub
ret
outsl
pop
repz
mov
cmp
clc
or
test
daa
dec
jne
repz
movb
daa
jp
xlat
and
jb
mov
jp
xchg
int
in
lock
int3
pop
sub
push
add
mov
add
jmp
add
movsb
loopne
push
fisttpl
lret
jb
add
sub
add
repz
mov
test
sub
push
fsubl
push
popf
mov
add
ja
add
jns
sarl
cmc
movb
mov
rolb
mov
xchg
cltd
bound
sbb
push
dec
inc
add
push
rcrb
mov
xor
add
dec
push
add
gs
pusha
add
add
fs
roll
scas
push
cmc
push
add
mov
in
and
out
mov
add
sti
mov
inc
add
mov
inc
add
int3
inc
jb
dec
adc
cmpsl
lods
mov
sub
sarb
jg
mov
inc
add
test
dec
movsb
adc
mov
scas
jp
sarl
mov
pop
xchg
outsb
out
pop
aam
adc
dec
xchg
mov
jno
add
add
xor
jne
aas
jmp
dec
test
dec
xlat
test
add
pop
subl
out
popa
lret
push
lds
addl
inc
add
rorl
lds
imull
mov
jmp
inc
push
adc
imul
movb
cmp
jmp
into
dec
cmp
mulb
inc
add
adc
ds
jo
std
mov
leave
pop
fs
adc
sub
mov
add
stos
inc
cwtl
scas
inc
outsl
int
jl
dec
xor
in
in
xor
mov
ljmp
iret
mov
push
enter
xor
das
pop
ret
xchg
aaa
hlt
cmp
mov
cmovg
fistl
mov
sbb
and
cmp
pop
les
fstps
lcall
xchg
mov
test
test
mov
xchg
lret
and
push
mov
out
jecxz
andl
pop
rolb
scas
test
mov
push
mov
mov
stc
xor
icebp
xchg
pop
cwtl
mov
or
push
push
push
xlat
mov
neg
clc
mov
pop
movsl
popf
mov
aam
add
out
mulb
lcall
xchg
xchg
or
sub
lods
daa
aaa
adc
adc
add
cmp
rcrl
sbb
sbb
pop
sub
out
nop
clc
cli
loopne
add
arpl
mov
mov
xorl
and
adc
add
pop
inc
add
shlb
add
pop
pop
sub
scas
loop
inc
add
jg
add
les
fisttps
add
jae
outsb
repnz
lahf
iret
test
xor
imul
jecxz
push
sbb
loop
push
add
mov
sbb
mov
icebp
push
dec
and
scas
icebp
inc
arpl
repz
or
and
dec
sub
mov
aas
jno
push
push
lret
call
aad
xor
jo
popl
add
push
fdivrl
movsl
fs
aas
sbb
repz
mov
xor
xor
movl
add
mov
mov
and
test
out
add
jg
pop
push
lret
loop
loope
call
add
mov
insb
inc
jecxz
sub
jmp
inc
out
xchg
lea
in
adc
into
es
add
roll
add
aas
mov
call
xor
fwait
mov
or
mov
push
fidivl
and
mov
mov
sub
divl
and
in
cs
push
jbe
out
aam
fs
or
stc
out
mov
aaa
loopne
out
dec
pop
outsl
push
mov
mov
mov
jnp
push
mov
int3
imul
and
cmp
rorb
add
xchg
lret
lahf
or
incb
mov
xor
test
sbb
mull
xchg
rorl
pusha
add
fidivs
add
add
std
popa
and
fs
xchg
loop
test
fistl
sti
mov
cltd
jge
jns
movb
bound
dec
or
insl
jp
pop
jo
pusha
add
and
and
in
and
std
inc
push
aaa
int
mull
add
add
hlt
cmc
enter
add
dec
aas
cmp
andl
pushaw
add
push
pop
jnp
and
jb
loopne
sti
pop
pop
jl
fistpl
dec
pop
adc
add
xchg
xlat
in
rcrb
mov
mov
movsb
sti
push
jno
gs
mov
add
les
in
jo
addb
cli
jnp
testb
add
mov
bound
mov
add
inc
add
iret
dec
or
cmpsb
mov
push
mov
addb
aas
xor
shlb
cmpsb
insb
sbb
sbb
add
and
aad
cmp
fistpll
pop
or
push
lock
cs
insl
cmp
js
adc
sub
scas
insl
pushf
sub
xchg
push
add
sbb
jnp
or
mov
icebp
jmp
push
fstl
lret
cmpsb
pop
add
xchg
scas
idivl
add
jnp
mov
je
shll
lcall
jl
iret
fadd
cmp
std
add
cmpsb
movsl
pop
push
pop
mov
std
sarl
mov
mov
rolb
loop
scas
push
data16
inc
loope
cmp
outsl
and
outsb
mov
add
sub
xor
inc
push
mov
shrb
mov
lcall
rsm
hlt
xchg
xlat
push
mull
or
lods
and
inc
mov
inc
add
push
add
inc
add
mov
push
test
scas
push
sub
mov
pusha
add
or
movsb
fwait
mov
ret
pop
aaa
jmp
mov
lea
ss
movsl
xchg
xor
or
call
movsb
xor
aam
add
fbld
add
xchg
sbb
je
dec
cmp
rorb
inc
imul
and
jns
sbb
imul
inc
cmpsb
pop
add
push
fidivl
icebp
dec
pusha
add
mov
sub
cli
bound
jg
cmp
add
insb
mov
clc
ret
sub
sar
clc
mov
pop
and
pop
jbe,pt
pop
pop
popf
lods
xor
outsb
cmpsl
neg
jbe
sbb
dec
xchg
test
inc
stos
or
push
mov
or
or
lahf
popa
xor
jmp
rolb
cmovg
subl
les
mov
imul
add
cmpsb
adc
rolb
pop
inc
add
push
pop
call
push
fisttps
add
ficompl
std
and
pushf
mov
dec
adc
nop
jo
jae
out
add
cmp
dec
lcall
sti
cmp
loope
jle
sti
or
hlt
hlt
ret
subl
popf
data16
sub
add
dec
add
push
insl
push
sbb
pop
mov
xor
in
mov
call
fs
push
add
dec
adc
fwait
or
cmp
add
movsl
mov
int
xor
jbe
std
sub
mov
jnp
dec
les
cmc
scas
imul
repnz
xlat
jb
lods
pop
push
jg
cmpsl
into
pop
push
popf
mov
add
jbe
add
xor
daa
sub
rcll
or
xchg
sbb
fldenv
rol
add
xchg
dec
mov
fistl
xchg
cltd
aas
pop
mov
fldt
stc
popa
movb
add
shll
fwait
mov
addb
loop
addb
mov
mov
mov
lahf
movb
mov
loop
loopne
rcrl
inc
add
pusha
add
jmp
lret
xor
sub
sbb
pop
xor
mov
push
push
inc
adc
aam
inc
into
add
add
inc
push
rolb
adc
lahf
int
popa
sarb
xor
iret
mov
adc
pop
out
iret
aad
xchg
xor
and
stc
data16
pop
mov
sahf
addb
dec
daa
add
addb
or
pop
add
xchg
cmp
lahf
es
repnz
dec
iret
dec
mov
loop
xlat
xchg
int
cmp
push
adc
stc
xchg
pop
mov
sub
mov
xchg
das
jp
mov
sbb
imul
rolb
sti
jo
jmp
data16
push
bound
sti
outsb
iret
mov
cli
dec
mov
add
jmp
in
mov
or
add
cld
addb
out
in
js
push
pop
inc
add
inc
push
sbb
outsl
pop
repz
fsts
dec
jb
xor
add
mov
mov
inc
adc
cmp
push
loop
push
sarl
roll
mov
ret
cmp
aaa
adc
shrl
add
jle
add
xchg
test
test
inc
das
and
in
movsl
dec
test
int3
xor
mov
shll
xchg
jbe
mov
and
movb
sub
add
out
fwait
scas
daa
movb
sbb
mov
je
imul
nop
fadd
sbb
iret
icebp
lret
push
mov
fnstcw
jnp
jg
mov
fsubl
movb
add
cmpsl
push
shlb
add
mov
rcll
loope
bound
flds
adc
js
push
push
imul
or
ljmp
lea
cs
shrb
stos
dec
or
push
cwtl
cmp
jb
stc
shrb
mov
jle
adc
stc
std
and
popf
ficompl
mov
xor
add
testb
push
movsb
push
mov
mov
cmpl
cmp
and
cmpsb
mov
sti
addb
mov
in
out
jecxz
add
out
sub
inc
arpl
adc
sbb
adc
add
cmpl
jae
addb
stc
stc
push
je
cs
xchg
xchg
in
imul
dec
movsl
data16
aas
sbb
cmp
jb
lds
dec
repz
pop
ret
add
add
shl
loope
repz
adc
jl
push
imul
sub
pop
jge
fwait
dec
mov
mov
push
sbb
mov
std
addb
xchg
sbb
xlat
inc
jns
or
or
add
pushf
mov
mov
js
in
scas
pop
mov
mov
inc
add
add
add
test
ljmp
add
das
and
and
int3
insl
inc
lock
in
mov
xchg
sub
in
rep
pop
sbb
jmp
add
in
cmp
out
mov
movsl
out
in
mov
pop
push
sbb
nop
adc
add
out
mov
mov
fstpt
out
stos
jbe
jmp
lock
push
push
sbb
pop
inc
sbb
cmp
sub
sbb
or
push
pop
sbb
cmc
push
mov
xor
test
add
mov
test
mov
clc
adc
add
push
xor
mov
mov
inc
adc
mov
xchg
jb
sahf
neg
mov
decl
mov
enter
dec
and
shlb
lret
xor
out
sub
sbb
call
xor
jge
int3
out
jmp
add
roll
les
sbb
inc
add
fcompl
add
inc
add
inc
push
call
loop
mov
ret
outsb
xor
push
repnz
or
add
bound
push
inc
add
les
icebp
aad
or
testb
out
test
gs
and
push
test
stos
mov
addb
adc
pusha
add
scas
jo
lahf
add
icebp
fwait
cmc
and
add
scas
xchg
push
test
jns
add
nop
pop
out
cltd
sarb
and
stos
mull
pusha
add
loope
rolb
xchg
std
cmp
mov
out
test
sahf
enter
mov
addr16
fisttpll
and
pop
push
add
test
xchg
clc
xor
pop
data16
jb
add
aas
inc
add
or
adc
mov
mov
scas
jmp
jae
xor
mov
into
inc
xor
hlt
xchg
das
or
adc
outsb
adc
mov
add
adc
cld
xchg
sub
jg
in
mov
bound
repnz
jmp
fbstp
and
lahf
mull
clc
and
loope
add
test
movsl
outsb
sahf
mov
xorl
sbb
ficoms
push
xor
xchg
aaa
xor
sbb
add
sbb
xchg
mov
dec
lock
imul
jmp
mov
cltd
loope
push
push
push
aam
add
int
xchg
jg
fisttps
shl
rcl
fmuls
fdivr
into
inc
add
xchg
and
xor
add
test
push
cmp
imul
int3
out
lds
stc
xor
daa
xor
fidivs
into
or
ds
push
ds
sbb
inc
cmp
add
sub
cmp
pop
xchg
mov
pushf
test
mov
enter
xor
addb
push
xchg
and
or
mov
aam
iret
scas
fisubrl
mov
push
inc
add
mov
add
nop
dec
push
mov
jg
in
sarl
add
or
incl
rcll
inc
add
repnz
jp
xchg
repz
add
mov
jno
mov
sub
rorb
test
bound
and
inc
cmpsl
sbb
push
mov
rolb
xchg
pop
addr16
sub
cltd
or
call
addb
add
mov
cmp
movsb
mov
jecxz
jo
jmp
jo
daa
pop
pop
mov
jg
bound
nop
gs
cli
in
adc
pop
js
mov
inc
add
inc
jns
add
repnz
addb
data16
lahf
movhps
in
inc
add
aas
mov
imul
add
xor
add
ficompl
filds
add
add
out
adc
sub
ss
in
add
stos
add
nop
mov
fcoml
adc
mov
jb
xor
test
out
adc
fcoml
cli
gs
xchg
ljmp
push
adc
es
pushf
mov
sbb
nop
inc
add
mov
pop
cwtl
movb
add
pop
xlat
es
loope
test
push
lret
pop
dec
fidivs
mov
ret
movsl
sub
adc
cmpsl
lds
mul
out
outsb
loop
push
add
imul
dec
mov
mov
lahf
push
fidivs
jl
mov
mov
pop
push
xchg
mov
scas
ja
cld
out
mov
add
lret
mov
lods
or
jp
xchg
test
jl
lcall
ljmp
push
shrl
cmp
fisubrs
adc
movhps
add
and
mov
inc
add
mov
add
lahf
sahf
mov
add
mov
out
lret
insl
xchg
jle
insl
outsb
push
adc
out
mov
insl
cmp
adc
add
lahf
or
cmp
adc
inc
add
sbb
js
add
daa
push
daa
clc
scas
std
xor
test
or
add
jecxz
sub
and
cmp
shr
les
jp
xor
adc
push
ds
ret
bound
xor
shrb
jo
cmp
add
std
cmp
shlb
mov
or
jge
pop
repz
mov
bound
push
pop
rolb
jne
fwait
div
fstps
popa
rep
adc
ficompl
and
enter
decb
xchg
push
insl
and
adc
sub
push
add
fcmovb
add
and
mov
inc
add
mov
out
fcomi
pop
add
cwtl
daa
jae
aam
push
dec
xor
bound
xchg
and
push
pushf
cmp
add
stc
fstps
mov
sub
scas
dec
stc
mov
test
mov
std
inc
fiaddl
lods
push
inc
add
adc
pop
inc
adc
rcr
push
nop
addb
decb
add
add
fdivs
addb
mov
addb
jle
mov
stos
in
or
push
jb
out
jmp
daa
cmp
mov
aaa
xor
lods
test
xchg
sahf
mov
inc
mov
or
int
and
sarl
mov
outsl
movsb
scas
cs
ja
cmc
add
ror
cmp
sahf
or
sti
mov
iret
sub
les
mov
pusha
add
js
pop
lret
loopne
add
mov
in
pushf
out
fs
xchg
add
inc
add
lea
insl
mov
add
jmp
add
push
in
pop
jg
and
jo
int3
int3
into
or
lds
in
dec
fisubl
jae
add
gs
add
repz
sbb
movb
inc
add
aam
xchg
push
mov
cmp
into
xor
imul
add
pop
cs
and
addb
or
cmp
dec
into
inc
add
cmp
fldlg2
or
add
out
xchg
or
movsl
push
add
jg
dec
sub
inc
add
and
hlt
cli
mov
or
inc
add
pop
sarl
and
roll
iret
mov
fimull
mov
cmc
aad
clc
les
or
mov
les
icebp
insb
sub
outsl
mov
aad
add
push
cmp
stos
mov
in
cmp
mov
dec
mov
inc
add
jb
mov
sbb
dec
cli
cmp
xchg
mov
pop
in
or
pop
test
stos
xor
mov
push
push
mov
inc
xchg
mov
shlb
fucomip
adc
mov
int3
jl
in
push
mov
cltd
and
dec
fisubl
add
xchg
inc
jge
call
add
jbe
or
jl
out
fistpl
and
push
inc
and
addb
jbe
add
pop
pop
dec
pop
gs
push
mov
push
loop
nop
popa
push
ja
inc
add
repz
inc
int
sbb
mov
inc
out
hlt
jecxz
aam
cwtl
call
fcomi
jmp
add
push
fsubp
es
incb
add
or
mov
addb
mov
stc
das
xor
lds
cmp
jae
scas
stos
xor
xchg
cld
in
movsb
repnz
xchg
xchg
pop
sub
xchg
imul
sbb
iret
or
in
and
pop
xchg
cmpsl
stos
cltd
lea
inc
fcmove
jno
add
daa
jp
out
pop
cs
xorl
sbb
jmp
dec
addb
pop
sbb
out
mov
xchg
test
pop
fisttpll
push
xlat
test
jne
data16
sub
jo
loopw
cmp
push
xor
jbe
les
shlb
mov
add
cltd
ficoml
clc
pop
xchg
shll
imull
add
adc
ds
ja
shlb
fdivrl
addb
jecxz
pop
rol
add
outsl
pop
hlt
nop
nop
stos
mov
add
inc
add
ljmp
xchg
cmp
xor
sti
push
pop
xchg
xchg
sub
xchg
insb
jns
or
pop
cmp
push
fisubs
jl
dec
adc
add
test
ret
je
jge
push
add
cwtl
daa
cmp
xchg
int
rcl
shrl
mov
call
je
sbb
inc
aas
adc
aam
jmp
pop
sub
inc
add
mov
and
dec
call
sbb
pop
or
dec
fld
add
ja
cmp
mov
and
rclb
loopne
mov
dec
dec
fs
loope
pop
cltd
fldenv
sbb
xchg
or
push
pop
jp
pop
cmc
out
and
lcall
add
sbb
or
xor
out
mov
xor
add
js
mov
push
aad
aam
lea
cwtl
sbb
mov
es
pusha
add
add
push
incb
out
jl
cmp
dec
xchg
movsl
add
sbb
add
movsl
out
lods
sub
loope
inc
dec
xchg
movsl
mov
mov
adc
inc
add
shlb
mov
adc
flds
mov
pop
mov
pop
xchg
jmp
add
inc
fsub
jg
iret
sbb
sub
lods
pop
sarb
xor
ror
insl
pop
xor
adc
daa
xor
lret
push
adcl
jne
mov
push
lret
fsubrs
mov
sbb
addr16
dec
cmp
in
in
and
int
inc
pop
cmp
add
mov
sub
sub
xor
add
add
icebp
scas
push
xchg
in
push
fists
xchg
dec
popw
sbb
iret
push
outsb
or
repnz
dec
xchg
sbb
fwait
mov
loop
mov
mov
add
shrb
mov
cmp
push
mov
mov
inc
add
add
or
jb
insl
ds
jge
add
sub
test
addb
or
add
rcrb
add
xor
xor
es
dec
icebp
aaa
sbb
dec
loope
dec
and
inc
add
test
inc
mov
xor
cld
or
movsl
adc
and
add
pop
aas
cli
mov
adc
push
mov
into
pop
daa
rcrl
int
push
inc
pop
into
testb
jo
js
fidivl
mov
xchg
js
imulb
cld
or
or
ficoml
in
adc
inc
add
jl
add
jns
cli
rolb
jge
dec
adc
fists
xchg
mov
clc
and
mov
aaa
push
add
add
cmp
dec
jge
adc
lods
insl
pop
lods
into
dec
int
mov
bound
roll
lea
or
mov
call
es
sub
call
cmp
mov
add
xchg
lahf
adc
jo
inc
jmp
daa
cs
inc
gs
mov
out
dec
clc
push
out
movsb
xchg
cmpsb
or
mov
jae
xor
sub
pop
xchg
in
cmp
hlt
dec
arpl
add
sti
pop
call
icebp
push
mov
xchg
cld
mov
push
xlat
mov
sbb
sti
inc
add
xchg
js
dec
mov
jp
fistps
add
or
sahf
xor
insb
or
adc
les
mov
jge
ds
add
add
scas
bound
sbb
movsl
shlb
add
cltd
in
or
add
lret
pusha
add
pop
std
arpl
and
cmp
adc
add
adc
xlat
pop
sub
adc
inc
xor
mov
clc
fcmovnbe
cwtl
ja
add
mov
sbb
gs
aad
add
or
dec
cmpsb
ret
loope
lods
push
inc
mov
mov
or
cld
stc
loopne
cs
xor
insl
jae
inc
add
int3
xchg
hlt
loop
icebp
lds
dec
fwait
out
out
mov
sub
xor
jmp
aad
vcvtdq2pd
test
call
pop
xchg
enter
cli
insl
mov
fcoms
xlat
xchg
js
fs
fisubrl
int
jl
les
leave
sub
ficompl
rcrl
mov
cmp
adc
pop
push
lock
out
sti
rorl
sub
roll
or
nop
xchg
fld
ds
fdivl
xor
inc
shl
lods
iret
sub
js
xorps
out
sbb
push
sub
bound
xchg
aas
fdivrp
pop
incb
mul
das
sbb
cs
add
jecxz
icebp
dec
lock
jae
cmpps
pop
imul
sti
out
roll
add
adc
sub
mov
out
loop
sbb
popa
push
cmp
pusha
add
fstps
ja
xchg
test
call
push
shll
movb
adc
mov
lret
lcall
rcrl
add
mov
daa
pop
shlb
aad
xchg
adc
lahf
or
add
mov
inc
leave
dec
test
lret
xor
inc
add
sub
in
jno
bound
sbb
inc
test
pop
mov
add
inc
mov
add
xchg
std
dec
call
add
mov
and
push
pop
push
out
add
add
and
pop
push
or
orl
mov
and
cmp
pop
rcrb
and
clc
mov
xor
enter
add
pop
mov
jns
mov
adc
cmp
adc
add
sbb
lds
scas
fcmovu
shrb
xlat
pusha
add
add
adc
push
fwait
arpl
xor
adc
mov
pop
bound
ret
daa
mov
mov
push
mov
movsb
rcrb
repnz
mov
aad
stos
lods
sti
cs
cltd
enter
leave
inc
lret
leave
sbb
stos
pop
fstpl
mov
mov
and
addb
scas
inc
add
arpl
lahf
stos
in
call
les
push
fisubrl
mov
adc
addb
sbb
xchg
xlat
bnd
adc
hlt
and
sbb
imul
sbb
lret
lea
mulb
subl
or
add
cmpsb
fidivl
rclb
mulb
ret
pop
inc
mov
push
sub
sbb
mov
ss
add
mov
xlat
xchg
test
incl
add
repnz
outsl
push
test
adc
ret
xchg
ljmp
xor
fdivl
lret
add
adc
clc
outsb
mov
inc
cli
mov
scas
into
xchg
mov
or
inc
add
repnz
add
test
rolb
add
push
add
clc
sbb
add
add
mov
es
pop
into
xchg
in
in
dec
jns
addb
or
xchg
or
add
in
je
dec
inc
add
add
lret
das
mov
xor
fistpll
cwtl
sbb
sarb
adc
jp
and
mov
adc
xchg
or
mov
mov
and
mov
sahf
das
pop
dec
ja
jecxz
and
adc
xor
test
xchg
arpl
sub
adc
mov
fucomi
and
add
mov
adc
push
into
push
dec
mov
cwtl
mov
mov
out
arpl
lcall
mov
xor
mov
mov
cltd
cld
in
pop
adc
add
adc
mov
xchg
cmp
jnp
int
push
mov
icebp
add
xor
sub
lret
pop
adc
ljmp
fcoml
test
mov
les
ja
mov
test
int
out
loopne
and
mov
or
add
jbe
dec
mov
push
jbe
add
sub
pop
add
pop
xchg
lods
scas
test
ficoml
lcall
mov
xchg
test
out
pop
inc
lock
sbb
les
addr16
and
popa
sbb
fmul
imul
sub
sbb
pop
xor
addr16
add
fxch
insb
cmc
or
cltd
stc
repnz
clc
lds
stos
icebp
cld
dec
cmc
mov
and
xor
scas
pop
cs
aad
movsl
and
test
nop
cmpl
push
cmp
mov
adc
lahf
mov
adc
xchg
sub
push
xchg
sub
sub
or
int3
aaa
sub
pop
sub
imul
mov
sti
lcall
ret
loopne
cs
lock
out
mov
mov
aaa
mull
movsl
dec
loope
leave
xchg
daa
jbe
in
aas
or
out
xor
push
ret
int3
js
push
add
fimull
ljmpw
inc
add
xor
jl
scas
repz
sbb
xchg
cmc
stos
mov
push
or
js
mov
aas
in
mov
add
xchg
add
add
jo
ja
add
add
adc
aam
mov
jge
cmp
das
clc
xchg
sub
jle
or
repz
mov
repnz
bound
out
out
mov
jnp
sarb
push
movsl
mov
ret
add
inc
outsb
jns
push
mov
add
sub
in
stc
push
shl
jg
mov
sub
mov
dec
mov
outsl
cmp
push
arpl
xchg
sbb
push
inc
add
adc
aaa
adc
addr16
sub
sub
shll
data16
out
pop
movl
or
push
xchg
jbe
sub
insl
cmc
mov
cmp
jbe
pop
inc
add
push
in
xchg
xchg
out
inc
ja
add
push
les
out
dec
push
adc
icebp
mov
movsl
pusha
add
lods
ficomps
dec
std
mov
dec
mov
push
dec
mov
add
xor
addb
push
testb
bswap
add
xchg
and
inc
add
dec
push
ret
mov
sarl
jge
int
add
adc
jns
mov
add
or
out
or
push
lret
xlat
mov
add
ret
inc
add
jne
gs
mov
xchg
pop
out
xlat
jmp
jne
or
stc
fistps
or
add
inc
arpl
addb
jbe
add
pop
in
mov
loopne
mov
sub
add
push
jmp
mov
cmpsb
int
pop
in
sti
mov
push
scas
loop
popf
mov
add
imul
stos
dec
add
pop
inc
jbe
cmpsl
and
push
add
push
add
adc
and
push
mov
ficoml
pop
shll
mov
jns
or
ss
addr16
mov
imul
mov
je
add
mov
add
out
xor
mov
and
pusha
add
or
sbb
scas
dec
addr16
inc
add
jo
lds
in
jecxz
repnz
cwtl
int
add
add
add
push
add
jg
adc
jnp
add
les
jo
push
lock
push
mov
pop
ja
sub
les
push
cltd
ret
outsl
push
imul
sbb
inc
sub
sbbl
or
sub
loopne
adc
jg
mov
je
push
out
jne
mov
push
mov
mov
cmp
lahf
ret
xchg
sub
add
xchg
xchg
fstps
pop
and
or
push
push
popa
loopne
aas
add
aaa
push
stos
xchg
xchg
es
repnz
jp
insb
or
pop
push
xor
xor
pop
fisttpll
xor
xchg
outsl
adc
jbe
push
test
aad
test
mov
jle
cs
add
sahf
call
popf
sti
in
add
adc
push
cmp
add
sub
pop
dec
xor
leave
pusha
add
sbb
dec
and
mov
mov
insb
js
xchg
outsl
mov
sahf
adc
daa
pop
mov
sbb
add
or
jmp
js
adc
push
lods
jge
outsl
divl
das
imul
mov
cmp
mov
add
stos
xchg
lock
add
mov
sti
imul
push
add
inc
add
sahf
out
stos
add
jae
and
ss
pop
jp
das
inc
add
mov
out
rolb
fnsave
pop
sarl
insb
jp
cmp
es
dec
aaa
ja
addb
add
or
jno
bound
ljmp
pop
dec
pop
out
jle
jbe
add
jl
cmp
inc
in
loope
add
adc
loope
int3
xor
lea
sbb
jle
popf
mov
pushf
arpl
cwtl
cmp
mov
rorb
cmc
stos
cmpsl
fsubrs
cmc
into
out
xlat
dec
xadd
jnp
je
in
add
and
das
inc
add
pusha
add
adc
les
bound
push
pushf
ja
daa
pop
mov
add
gs
jo
ljmp
xchg
mov
push
add
aaa
add
xor
loope
mov
fsubrl
jno
inc
add
loop
jp
mov
add
dec
call
addr16
xchg
lahf
adc
and
pop
roll
cli
ja
loope
cli
xchg
ret
ret
adc
popf
bound
xchg
push
or
push
test
jnp
scas
lea
in
imul
inc
jge
int3
jno
xchg
xchg
xor
test
push
notb
daa
jle
insb
in
testl
sub
sub
mov
andl
jg
sahf
inc
add
push
push
add
xor
add
add
insl
and
mov
xchg
and
inc
add
mov
adc
fstpl
xchg
pusha
add
cwtl
fistps
push
xchg
push
stos
cltd
int
add
lods
out
icebp
push
xlat
cmp
adc
mov
and
mov
adc
out
pop
pop
cmpsl
pop
adc
pop
cmp
lcall
out
or
mov
add
or
xchg
fs
fistps
fbstp
jecxz
add
in
mov
std
outsb
sbb
call
ds
push
stos
ljmp
js
mov
push
pop
out
addb
or
jae
das
addb
loop
mov
mov
push
sbb
mov
psubb
sti
add
xchg
jg
add
mov
gs
mov
inc
add
and
mov
sbb
rcrl
dec
mov
filds
add
xchg
pop
ficoml
and
mov
test
jge
jmp
and
out
and
add
xchg
mov
push
lret
andl
movb
and
lods
adc
mov
lahf
arpl
jne
adc
rolb
cmpsb
cmpsl
int3
xchg
pop
popa
rcrl
pusha
add
aas
insl
bound
out
pop
jb
enter
xchg
sub
ret
add
cwtl
das
xchg
shl
jns
and
add
mov
and
aaa
dec
stos
sahf
dec
inc
push
and
dec
bound
push
imul
jae
xor
dec
push
ss
mov
xlat
mov
add
lret
push
mov
adc
cld
cwtl
jnp
xor
pop
daa
test
pop
xchg
les
stos
out
and
dec
xchg
int
push
mov
fcmovb
lret
dec
push
dec
bound
repz
xchg
addb
sub
pusha
add
mov
pop
and
push
mov
add
add
or
rolb
xchg
adc
outsl
cmpsl
leave
inc
add
mov
stc
sub
and
arpl
add
in
lahf
and
dec
lods
mov
stc
pop
fs
and
sub
add
sub
add
arpl
divl
ret
cmp
daa
addb
push
roll
imul
push
stc
adc
lret
add
sbb
hlt
mov
mov
sbb
pop
repz
jmp
xchg
sbb
jbe
enter
xor
xor
or
movb
mov
cld
enter
imul
add
cld
or
movsl
rol
add
add
push
test
pop
sbb
add
add
pop
movsl
xchg
mov
xchg
dec
adc
cltd
sbb
dec
fisubrl
pop
sti
dec
fistpll
pop
testl
xchg
mov
jmp
dec
xchg
popf
imul
cmpsl
pop
add
cmpsb
pop
pop
xor
dec
cmp
cmp
adc
add
cmp
inc
enter
rolb
loope
sub
mov
out
andl
sub
add
or
mov
sbb
arpl
mov
out
jecxz
cmp
xor
es
pop
mov
out
sbb
fisubrl
movsl
rolb
and
incl
dec
aam
push
add
scas
pop
stos
xor
gs
pop
push
mov
cltd
bound
out
add
pushl
inc
add
or
int3
xchg
inc
push
push
xor
push
aaa
std
and
or
cmp
and
add
dec
xor
loopne
out
movsl
cmp
imul
sub
add
pop
clc
addr16
lahf
icebp
lods
mov
push
sub
inc
add
sbb
jmp
xor
out
pushf
sar
push
or
aas
roll
shlb
mov
jge
add
shlb
add
shl
sub
or
xor
loop
xor
pop
mov
sahf
ret
mov
add
ja
add
outsb
mov
pop
ja
jecxz
subl
adc
jb
in
xor
add
hlt
out
fidivs
pop
imul
jo
loop
add
out
mov
rcll
out
imul
lret
jle
inc
jne
add
orl
std
push
jnp
movsl
push
push
in
inc
add
cwtl
cli
bound
dec
xor
clc
jmp
push
ja
add
or
ljmp
inc
add
jp
test
dec
lcall
ret
fimull
push
pop
and
pop
clc
push
lods
leave
jle
push
pop
out
xor
cli
and
imul
aad
mov
jp
fmull
xchg
call
adc
icebp
fmull
clc
stc
pop
clc
push
xor
cs
inc
add
cmp
adc
out
or
loop
sbb
pop
jl,pn
adc
sub
shll
movb
lcall
inc
add
add
jge
pop
fiaddl
xor
out
movsb
mov
sahf
xchg
fs
xchg
or
jo
xchg
insl
pop
mov
shrl
scas
pusha
add
nop
ret
out
loope
test
loopne
lret
insl
inc
add
int
mov
into
fs
stos
idivl
push
add
cli
in
pop
mov
repz
sbb
inc
push
fnstsw
mov
mov
dec
aad
mov
inc
and
lahf
sbb
mov
xchg
iret
jo
mov
cmp
adc
xor
cmp
addl
push
adc
or
in
or
scas
sbb
jno
add
inc
int3
add
test
into
stc
addr16
repnz
repz
xchg
xchg
push
or
add
pop
shl
movsl
push
stc
jnp
push
cli
cmp
mov
mov
ficomps
fisttpll
and
sbb
scas
mov
notl
inc
add
in
add
xor
sbbl
les
mov
imul
mov
repnz
pop
das
pop
dec
aas
scas
or
inc
add
mov
add
add
add
adc
sub
aas
mov
add
movsl
cwtl
scas
fs
aam
cmp
inc
add
out
int
dec
sbb
jle
and
sti
push
xor
add
mov
push
lretw
cltd
faddl
push
ljmp
stos
fisubrl
add
aam
cmpsl
pop
jecxz
outsb
bound
cmp
add
or
mov
xor
add
popa
data16
jl
mov
in
ss
imul
add
adc
insb
cs
sti
bound
and
stc
sti
dec
repnz
xchg
mov
cmpsl
jge
lods
inc
add
push
add
lock
bound
insl
inc
add
push
nopl
mov
ds
fstpt
iret
dec
xchg
adc
mov
cmp
add
jge
iret
lds
mov
mov
out
fdivrs
cmp
mov
add
pusha
add
stos
or
movsl
pop
jmp
inc
push
push
lret
ret
xor
inc
jbe
add
sbb
inc
aad
jp
push
bnd
insl
mov
sub
push
fcompl
mov
addb
iret
mov
aad
add
add
fildll
shrl
jns
add
ljmp
pop
pop
insl
out
pop
ret
outsb
rcl
aaa
adc
jae
xchg
das
fidivs
leave
sbb
sub
add
cs
or
movl
pop
or
add
pop
sub
add
addr16
jg
leave
dec
jp
dec
pop
jp
out
push
or
mov
sbb
add
inc
add
sbb
jns
js
add
bound
outsl
dec
das
sub
dec
rcrl
cmp
ret
xor
jno
aas
data16
shrb
loopne
and
xchg
adc
pop
xchg
inc
add
out
in
stos
out
nop
pop
test
jno
add
lahf
push
scas
xor
jecxz
popa
xchg
adc
add
xchg
push
jb
aam
push
mov
xchg
dec
xor
xor
sub
dec
xchg
or
or
or
push
adc
inc
mov
pop
mov
loop
cmp
out
out
call
cld
mov
jbe
mov
jnp
lock
in
xchg
pop
int
mov
dec
mov
std
or
mov
iret
ret
addb
leave
mov
fistps
mov
stos
xor
jns
xchg
jns
pop
jmp
addb
out
xchg
fsub
xchg
push
and
in
inc
add
jne
testl
mov
xchg
repz
iret
outsl
ficompl
xchg
pop
xorl
jbe
mov
movsb
movb
popa
aas
cmp
and
mov
push
nop
sar
lods
fwait
movsb
sti
iret
push
add
je
pushf
add
ret
fnstcw
sbb
add
mov
add
aas
cmp
jecxz
add
std
add
xchg
fs
add
mov
cwtl
movsb
pop
std
or
stos
jns
pop
movb
cmp
fs
xor
push
add
xchg
incl
add
aas
xor
bound
ja
inc
add
add
negb
into
inc
pop
sub
mov
jo
sarb
dec
xchg
mov
aad
inc
add
add
fnsave
jge
cmc
leave
push
xor
jns
leave
jmp
lret
icebp
cmp
mov
mov
mov
test
icebp
jo
mov
inc
mov
jge
dec
mov
jne
sbb
and
pushf
les
xchg
xchg
mov
call
push
into
add
in
push
add
int
or
ret
add
dec
sbb
sarl
inc
add
ss
mov
les
mov
out
js
or
ja
xor
das
in
ror
push
add
cli
aaa
cmpsl
add
cmpsl
mov
insl
xlat
xor
mov
adc
scas
loopne
sti
dec
xor
jecxz
loopne
add
mov
add
cs
mov
cmpsl
jnp
int
out
mov
pop
ds
popf
adc
push
les
ficompl
call
xor
rolb
dec
cs
hlt
mov
mov
test
std
shrl
dec
pushf
test
lret
cmpsb
icebp
sub
inc
add
ret
mov
xchg
inc
add
push
mov
add
mov
subl
stc
icebp
in
cmp
or
addb
xchg
cmp
jno
adc
je
sub
scas
jmp
mov
es
pusha
add
add
cli
jl
mov
insb
push
scas
cmp
addr16
add
sahf
dec
pop
push
jns
stos
aad
add
jg
loopne
add
jbe
int
cld
imul
lret
dec
inc
mov
fisttpl
insb
addb
lcall
rcr
xchg
aas
in
add
mov
cmpsl
inc
dec
pop
mov
mov
push
aaa
in
aam
add
fcomps
shll
add
adc
mov
and
data16
fucomip
repz
add
mov
sbb
aaa
mov
ja
cmp
cvtpi2ps
mov
pop
and
fstl
dec
imul
inc
mov
cs
mov
lahf
push
and
fiaddl
add
clc
call
sbb
pop
xor
vpshlq
xchg
adc
arpl
sbb
sbb
clc
mov
add
stc
out
pusha
add
jl
int3
dec
cs
in
sbb
adc
dec
stc
mov
ss
imul
faddl
and
fcom
xor
movsb
mov
and
mov
rcll
aad
add
mov
outsb
leave
ror
std
mov
les
inc
add
cld
ret
mov
add
cmp
and
inc
test
add
pop
mov
shrl
in
or
pop
xor
fsubs
pop
push
int3
mov
add
or
push
js
add
fsubs
lods
mov
out
nop
sub
rorb
mov
in
repz
rolb
fwait
in
frstor
push
shlb
xchg
out
mov
jecxz
addb
cld
in
push
add
add
dec
xchg
cwtl
adc
xor
xchg
xchg
imul
add
dec
addb
dec
fwait
jle
dec
dec
mov
popa
push
sahf
xchg
lcall
sub
add
mov
arpl
xchg
push
mov
add
sub
out
movb
push
in
mov
xchg
aaa
pop
jo
mov
add
movl
les
mov
ret
out
test
push
sbb
mov
inc
add
loope
lods
xor
lods
xor
and
sbb
xor
aad
in
fmuls
pminsw
lret
add
add
shlb
fnstenv
movb
xchg
add
pop
bound
add
xchg
fnsave
pop
cmc
and
js
lods
add
jecxz
sarb
gs
gs
les
mov
aas
jmp
cwtl
add
dec
dec
push
out
test
loope
fidivs
push
ds
mov
adc
je
int
cld
out
mov
ja
cmc
cmp
xor
sti
icebp
scas
stos
push
sahf
pusha
add
mov
imul
jne
pop
pop
pusha
add
cmpsl
in
hlt
xacquire
mov
sub
dec
repnz
test
scas
jo
add
test
mov
xchg
lods
inc
fcomi
mov
sub
loope
and
dec
scas
cmc
push
fnsave
addl
xchg
es
pop
sub
bound
jl
jg
adc
add
xchg
mov
xor
mov
or
xor
add
inc
add
cmpsl
mov
add
or
test
sbb
mov
dec
addr16
or
mov
add
rolb
push
sbb
mov
xchg
dec
scas
dec
iret
fistl
rclb
cltd
xor
xchg
or
lods
push
call
xlat
pop
lahf
and
mov
int
sahf
test
insl
jecxz
test
jns
in
dec
rolb
add
int3
mov
lretw
inc
imul
sbb
xor
sti
mov
xchg
pusha
add
mov
add
pop
shll
add
dec
insl
jno,pn
cld
add
shrl
xchg
pop
push
xchg
hlt
clc
mov
xchg
jl
outsl
mov
mov
cmc
xchg
or
cwtl
push
es
ds
mov
cmp
pop
sub
notb
mov
jns
or
sarl
inc
fstl
and
aaa
je
arpl
lods
out
sbb
adc
adc
add
add
add
hlt
bound
popa
dec
mov
mov
adc
stos
lret
dec
mov
ret
ss
and
sti
pop
out
push
inc
mov
pop
iret
or
adc
arpl
pusha
add
arpl
nop
push
add
insl
dec
cmp
or
cs
adc
xchg
mov
fidivrl
dec
loopne
out
insb
paddsw
or
mov
shlb
pop
jl
and
sahf
in
scas
cmp
arpl
push
add
push
mov
inc
imul
sbb
mov
fdivrs
je
pushf
addb
out
lock
add
mov
sub
test
rolb
in
arpl
jp
sti
dec
movsl
push
mov
xchg
add
loope
paddq
stos
jle
cmpsb
cmp
or
sbb
add
clc
add
cld
pop
sbb
in
int3
pop
lods
jge
in
ljmp
cwtl
adc
in
push
push
add
rcrb
ss
fwait
adc
in
add
addb
add
movsl
mov
push
fucomp
movsl
testb
mov
sub
xchg
movb
hlt
filds
stos
fucomip
int3
mov
cs
pop
in
lret
mov
movb
add
cmp
pop
nop
arpl
add
mov
jp
lret
les
orl
outsb
repnz
aaa
jmp
ret
push
into
sti
out
pop
mov
out
lcall
movsl
xchg
clc
push
je
add
imul
xor
pop
ret
inc
add
pop
pop
mov
mov
and
dec
das
pop
and
fwait
mov
in
cmp
js
add
xchg
test
pushf
add
mov
mov
or
shlb
movsb
xor
mov
daa
enter
add
sub
pop
mov
add
jno
ljmp
jno
shl
jae
movsl
mov
inc
sbb
jge
add
xor
out
push
lahf
insb
mov
aad
add
pop
mov
sub
mov
aaa
mov
fs
or
fxch
das
jmp
sub
imul
lahf
fsubrl
pusha
add
pop
ss
movsb
es
mov
fiadds
insb
jmp
add
and
add
fnstcw
or
mov
mov
loope
repnz
into
add
repz
fsubrp
popf
nop
fbstp
mov
and
mov
sub
inc
movsl
lock
outsb
mov
out
jnp
fmul
out
add
mov
lret
pop
cmpsb
add
xlat
xor
add
push
jecxz
add
enter
push
mov
dec
das
jecxz
add
loopne
xor
mov
test
mov
xchg
fisubrs
add
fwait
pop
loop
fimull
sub
js
mov
xor
push
std
ret
push
outsl
iret
sar
push
cld
lahf
jl
add
in
pop
mov
inc
test
lods
jae
cld
mov
add
icebp
jno
dec
scas
mov
ss
mov
mov
cltd
mov
test
nop
jp
push
lods
incb
cwtl
push
mov
xor
out
add
jmp
cli
dec
addr16
add
int
add
pop
negb
rolb
add
push
add
cwtl
mov
movsb
ret
inc
xlat
enter
cmp
mov
sub
adc
cmp
xor
test
psubsw
pop
inc
or
fdivs
mull
std
pop
or
inc
add
push
mov
add
add
cmp
mov
sbb
clc
ja
enter
cmpsb
pop
enter
add
imul
push
ud1
jbe
add
add
cmp
add
add
add
mov
pushl
inc
mov
arpl
jno
shl
daa
or
ds
mov
dec
and
xor
jmp
lret
mov
cld
mov
mov
push
or
int
add
adc
adc
pop
cwtl
jae
repz
and
leave
adcl
stos
xchg
add
xchg
enter
push
pop
cltd
add
cld
in
adc
popf
cmp
adc
push
inc
out
sbb
xchg
pop
push
sub
addb
xor
std
pop
sti
out
cld
add
or
xchg
or
jbe
cltd
in
or
mov
sbb
je
popa
sbb
xor
shrl
push
and
test
xor
pop
aaa
rcrb
popa
cwtl
rcll
xchg
mov
arpl
mov
lret
sti
xchg
xchg
ret
fistpl
sbb
or
fmull
mov
jnp
inc
add
sbb
cmc
mov
jmp
xchg
mov
add
or
js
stos
adc
je
stos
clc
movsl
rolb
add
aad
mov
xor
stos
in
add
adc
mov
clc
push
sbb
lea
test
jle
mov
add
mov
jmp
out
xor
mov
inc
dec
repnz
lds
orl
add
popa
nop
nop
mov
cmpsl
mov
inc
add
scas
or
hlt
sbb
mov
cwtl
push
stc
fists
push
ljmp
rolb
fs
scas
jbe
pop
push
sbb
pop
inc
xchg
pop
addr16
das
mov
inc
adc
add
pop
int3
mov
inc
adc
movb
or
ret
adc
push
and
call
xchg
xor
mov
out
adc
mov
mov
hlt
pop
and
repz
loop
dec
xor
jl
mov
cmp
add
mov
addb
cltd
aam
sub
inc
insl
or
es
cs
pop
int
mov
mov
sar
mov
adc
rcrl
lret
push
dec
aad
sub
icebp
fdiv
mov
addl
bound
xor
dec
bound
enter
sub
sbb
arpl
xchg
mov
popf
cmp
xchg
mov
rorb
cmovle
testb
push
or
inc
add
sub
add
dec
jmp
xor
mov
scas
lea
xor
pop
sub
and
jb
jge
mov
nop
leave
dec
ljmp
mov
out
dec
sub
add
daa
dec
insb
push
addr16
or
rcrl
dec
test
ljmp
gs
mov
aas
xchg
dec
hlt
ja
enter
lods
and
int
shll
inc
pop
xlat
adc
adc
adc
cs
jmp
cmp
ja
aad
aad
das
xchg
fdivs
int
xor
xchg
inc
add
fcmove
sar
xlat
push
aaa
ss
mov
inc
add
mov
xchg
hlt
scas
mov
and
sti
popf
notb
or
xorl
and
push
pop
sub
add
add
mov
loope
sub
adc
mov
sti
mov
enter
jecxz
imulb
lret
in
rcr
mov
add
cmp
ret
dec
test
add
pop
pop
fmull
push
addb
lcall
fisttps
xor
sbb
and
xor
popf
cli
sbb
add
push
movsb
add
xchg
adc
and
stos
rorb
daa
cmp
mov
push
das
jmp
pop
test
or
fmull
filds
mov
leave
lahf
movsb
jle
les
sarb
push
jp
vpandn
aaa
push
xor
ja
scas
aaa
shr
das
and
xchg
jmp
sbb
xchg
je
sar
stos
cltd
cmp
jl
aaa
das
cs
push
dec
arpl
mov
and
aam
add
cltd
cmpsl
mov
and
sub
fnstcw
movb
fsubl
movb
mov
xor
add
dec
lea
mov
mov
push
pop
movsb
adc
push
mov
mov
lea
xor
mov
dec
lahf
das
mov
and
arpl
dec
iret
popa
jecxz
inc
add
out
rcrl
sub
mov
das
jg
cwtl
mov
and
lret
or
and
push
xchg
mov
ficomps
push
repnz
test
lea
xchg
add
xor
int
lock
movsl
int
sub
bound
cmc
pop
movsl
sti
test
xor
faddp
add
add
jmp
inc
add
out
sti
in
aad
mov
arpl
sbb
movsb
ja
adc
clc
sarb
add
add
mov
cmp
lcall
pop
in
iret
mov
test
sub
sub
or
mov
or
adc
jmp
sub
and
mov
adc
cltd
or
dec
fdivl
aas
int3
aam
xlat
xorl
cwtl
out
mov
sub
hlt
inc
add
test
addb
add
pop
or
test
push
xor
mov
stc
mov
hlt
cmp
add
xor
mov
rorl
out
movsb
sti
sbb
or
outsl
xchg
daa
and
fs
imull
aaa
or
das
out
push
std
leave
out
addb
ret
call
or
xchg
mov
add
insb
test
out
xlat
pop
adc
and
push
enter
fists
icebp
push
fsubl
sbb
jns
xor
stos
add
cmpsb
push
cmc
push
inc
add
add
add
add
sbb
addb
mov
xchg
jno
mov
cmp
into
push
adc
jge
mov
call
lods
aaa
sbb
mov
incl
mov
push
outsb
leave
popf
int3
aam
cmc
bound
das
fimull
push
mov
dec
jle
lcall
cmp
xchg
out
sub
out
loop
arpl
out
repnz
popa
adc
rolb
mov
add
pop
idivb
jmp
adc
sti
pop
sbb
aad
das
inc
add
daa
sbb
mov
cld
push
push
movb
push
outsl
frstor
jns
mov
test
rol
roll
rcrl
mov
ds
into
sbb
push
notb
push
xor
in
add
push
into
and
sub
add
sbb
mov
pushf
out
sbb
enter
movsl
rcrb
clc
shll
xchg
icebp
mov
imull
arpl
jp
std
push
jo
and
add
or
and
adc
testl
jmp
stos
inc
cvttps2pi
push
add
enter
dec
bound
jne
push
sub
pushf
ret
add
loop
movb
insl
shll
add
mov
aas
les
ss
mov
add
add
pop
pop
sbb
jge
mov
loop
add
sub
mov
add
add
outsb
fistl
fnstsw
mov
es
int3
sbb
add
imul
jae
add
fcmovnbe
movsb
data16
adc
ds
sbb
adc
outsl
es
xchg
jo
fs
loopne
xor
mov
ja
jle
ss
nop
outsl
lea
in
cltd
jo
push
mov
js
arpl
jle
inc
add
dec
outsb
inc
lcall
pusha
add
std
loopne
add
sub
fs
cwtl
js
jmp
add
add
aaa
jg
add
mov
addl
sbb
mov
outsb
into
rcr
push
sti
push
loop
testb
add
dec
addr16
sti
loope
js
scas
into
pop
int3
cmp
js
add
loope
rorl
test
in
cmpsl
pop
ss
xchg
sbb
call
cwtl
imulb
std
jns
add
mov
out
mov
cli
fistps
add
addb
test
sbb
push
sub
int
mov
jbe
xchg
or
lds
dec
rcll
sbb
cmp
pop
jle
mov
push
and
and
je
loope
push
push
jno
jmp
stos
or
fildll
stos
push
sub
mov
add
jb
sahf
xchg
xor
in
mov
decl
enter
mov
out
sbb
fisttpl
push
add
add
aad
xorl
fisubs
fisubrs
adc
fdivr
mov
ficoms
cli
aas
ret
cmpsb
sbb
and
scas
dec
icebp
les
sti
std
push
inc
mov
add
addb
or
neg
cwtl
sti
dec
lahf
pop
in
push
xor
jne
xchg
jb
outsl
sbb
push
mov
pop
mov
dec
out
mov
mov
sub
inc
cmp
insl
mov
gs
xchg
lret
test
mov
inc
leave
mov
sbb
mov
xchg
pop
mov
pop
ret
sub
xchg
test
jb
imul
test
jae
inc
add
daa
cmp
inc
add
xor
imul
ja
pop
cmp
pop
das
ja
fxch
dec
xlat
push
pop
pop
in
push
push
lahf
pop
xchg
cld
jmp
mov
mov
mov
push
ss
pusha
add
test
ret
add
jbe
std
cltd
jmp
xchg
push
mov
leave
mov
jns
mov
enter
js
faddl
scas
add
push
or
adc
pop
mov
data16
addb
and
imul
iret
test
into
mov
call
fstps
jne
inc
in
pop
jmp
daa
out
pop
call
packuswb
pop
jl
mov
out
gs
pop
ret
lock
or
mov
and
and
in
insb
sbb
jle
mov
sbb
gs
or
insl
sbb
and
and
mov
mov
xor
cmpsl
repnz
pusha
add
aaa
xchg
enter
sub
lods
inc
add
hlt
sarl
push
shrl
mov
adc
stos
mov
fmuls
testb
arpl
test
add
mov
add
push
lock
sahf
cmpsb
rorb
mov
mov
pop
cltd
iret
mov
popa
movsb
add
inc
add
pop
incb
mov
xchg
and
mov
mov
arpl
int3
scas
sahf
sub
jg
pop
data16
fldt
pop
mov
int3
cmpsl
bound
inc
mov
sbb
add
sahf
dec
je
aaa
inc
add
out
subl
addb
gs
cwtl
add
push
shll
sub
pop
sbb
and
lea
mov
add
xor
iret
adc
pop
test
fcoml
push
push
mov
imul
add
push
lods
pop
push
ret
jmp
je
push
outsb
int
pop
push
stos
test
fcompl
out
and
add
mov
mov
xor
mov
xor
imul
in
decb
movsb
xchg
cmp
mov
ja
add
in
jne
add
jp
and
add
andl
insl
jecxz
sub
loope
test
repnz
adc
add
cld
pop
int3
mov
cmp
add
mov
mov
add
repz
ljmp
sub
pusha
add
mov
push
push
es
pop
adc
pop
push
add
or
mov
mov
add
add
cwtl
push
iret
sub
sub
xchg
sbb
push
fistpl
add
ficoml
pushf
cwtl
and
add
dec
xor
addr16
inc
add
outsl
ja
cltd
mov
or
loop
ficomps
nop
pushf
sbb
movsb
ficomps
shll
add
jmp
repz
outsb
pop
push
jnp
jns
and
int
add
push
imul
dec
ficoms
or
imul
add
pop
bnd
inc
add
sbb
jno
aaa
mov
adc
rolb
or
ret
pop
lret
pushf
fcoml
push
lret
fcoml
rolb
mov
jle
in
cli
jns
test
cmp
add
sub
or
lods
add
out
pushf
inc
mov
test
add
jmp
add
in
addb
loope
sub
mov
out
xchg
ret
outsb
mov
add
stos
mov
cmc
nop
jle
xchg
enter
push
sbb
push
aam
out
mov
and
addb
in
test
cmc
loop
loop
add
dec
js
cmpl
in
cld
pop
push
fldl
xor
adc
aad
mov
ja
fidivrs
push
lods
or
rolb
jbe
mov
outsl
mov
dec
out
nop
ficoms
dec
test
lret
mov
rorl
sahf
mov
int3
fisttps
or
rorl
ja
mov
mov
dec
popf
mov
movsb
xlat
mov
mov
movb
mov
lret
add
jmp
dec
fdivrp
cli
data16
cmpsl
ljmp
je
mov
lcall
jbe
dec
mov
ss
push
inc
add
std
jo
jae
lret
fucomi
pop
pop
sbb
xor
addr16
sbb
add
push
es
push
and
scas
xlat
scas
jge
push
jp
rolb
xor
sti
in
mov
pop
sub
in
jmp
add
xor
pop
cmc
gs
pop
ljmp
jo
enter
bound
test
xor
push
xchg
fs
inc
push
xchg
lret
lods
sub
jne
pop
push
xchg
or
jno
sub
pop
add
dec
jbe
shl
dec
jmp
push
lahf
dec
xchg
jb
hlt
outsb
movsb
pushf
lods
sbb
jecxz
int
xor
mov
add
repz
xchg
test
enter
scas
mov
mov
in
mov
in
sti
dec
push
or
adc
push
loopne
test
mov
outsl
add
dec
jge
cmpsl
push
sub
xor
mov
mov
add
call
out
aaa
xchg
pop
addb
add
dec
psubsw
addr16
and
push
jg
ljmp
push
jo
ss
lcall
jns
add
les
rolb
in
jge
in
mov
lahf
outsl
fisubs
add
movsl
dec
movb
pop
jge
out
ljmp
add
rcl
or
push
ja
test
mov
xchg
mov
jg
int
scas
arpl
std
mov
mov
ss
mov
icebp
cmp
js
cmc
mov
test
in
mov
arpl
in
cmp
push
add
pop
push
mov
mov
cmc
in
cmp
fisubl
add
jbe
lcall
enter
dec
ret
fdivrl
addb
xchg
enter
xchg
imul
loopne
leave
fsts
xor
outsb
mov
mov
outsl
addr16
inc
add
dec
lret
jecxz
xor
adc
add
xor
cmp
or
punpcklbw
test
insl
xor
mov
xchg
movsb
insb
nop
sub
mov
movsl
out
cli
rol
add
das
xchg
mov
movsb
lret
jns
pop
sub
ds
test
push
add
add
mov
push
dec
aas
push
pop
iret
mov
push
int
jmp
lcall
push
insb
xor
add
mov
aad
sbb
addb
rolb
push
test
mov
out
sub
andl
add
mov
inc
add
sbb
push
add
into
mov
and
mov
xor
sub
push
add
ljmp
cmpsl
lret
mov
adc
xacquire
push
mov
mov
out
pop
add
dec
cmp
cmp
dec
arpl
and
loop
dec
mov
and
notl
pushf
gs
sub
sub
out
and
or
jo
nop
out
rcrl
cwtl
mov
pop
push
outsl
xor
adc
div
adc
in
aas
mov
inc
add
cs
and
dec
mov
pop
adc
add
lahf
addb
push
clc
push
push
mov
negl
gs
push
xchg
sbb
rcll
sub
hlt
mov
xor
dec
push
mov
sbb
int3
pop
les
jl
and
add
inc
enter
icebp
cmp
add
mov
add
dec
push
sbb
insl
adc
and
lock
rolb
inc
xorl
inc
dec
pop
sub
add
jl
ljmp
sub
dec
mov
push
add
sub
jnp
add
xchg
pop
dec
jo
outsl
mov
fsubrs
xor
add
add
jl
sbb
push
and
cmp
jg
xchg
jle
js
add
add
push
pushf
xchg
popf
fwait
dec
push
imul
push
arpl
fucomi
inc
adc
and
mov
adc
scas
mov
mov
xchg
mov
sbb
add
adc
mov
int3
inc
dec
xor
add
lea
lds
js
dec
movsl
or
mov
sbb
call
pusha
add
xor
lret
test
sahf
cmp
jl
movb
inc
add
inc
add
add
pop
inc
ret
lea
enter
pop
lea
or
mov
mov
cmp
push
add
push
add
fcom
or
mov
mov
imul
cs
rcrb
jb
jo
xchg
adc
rolb
lea
in
mov
in
out
push
push
inc
xor
mov
out
add
add
xor
add
leave
mov
test
push
inc
ss
mov
scas
and
ljmp
bound
loopne
inc
add
int3
bound
lret
add
pop
mov
sub
repnz
cmp
addb
fadds
or
inc
popa
and
jp
add
lret
add
push
lahf
push
sbb
sbbl
insb
nop
subl
push
shll
sbb
repz
jbe
add
cmp
aas
sahf
stc
dec
ret
push
xor
mov
test
jo
out
xchg
outsl
pop
inc
add
pop
jbe
push
arpl
daa
sbb
mov
sbb
movsb
xchg
or
aaa
and
add
xor
xchg
adc
jne
loop
add
add
rolb
aad
bound
loope
ja
movsl
in
mov
push
mov
xor
add
add
add
roll
mov
jb
add
fistps
shr
lcall
cmove
aam
push
inc
lahf
dec
dec
inc
movsb
scas
xor
add
in
dec
call
jmp
add
add
cmc
insl
ja
fstps
inc
lcall
add
pop
add
loop
loopne
and
jg
rorb
cmp
insb
pop
aad
push
add
sbbl
jb
sub
xor
into
arpl
push
scas
test
sbb
mov
or
add
pop
dec
in
notb
lret
daa
xchg
sub
aam
push
out
stos
push
das
dec
push
fwait
or
imul
out
adc
push
add
out
jb
jecxz
clc
roll
xchg
loop
xchg
fwait
mov
imul
jg
mov
dec
or
rcrl
lock
jb
pop
sbb
loop
dec
cmp
pop
rolb
add
test
cmp
repnz
movb
sub
xchg
ljmp
dec
imul
mov
movsl
adc
add
mov
je
dec
inc
add
test
repnz
add
fs
push
sbb
icebp
fs
lret
push
push
mov
rcrb
jno
cmp
sar
fmuls
mov
jne
test
pushf
popf
rorb
or
fisubrl
adc
sub
loope
and
cwtl
dec
jo
aaa
mov
nop
or
lods
sub
ficoms
mov
xchg
mov
cld
jecxz
fsubrl
fmull
outsl
popf
or
or
ss
cmc
add
adc
test
in
std
outsl
dec
mov
mov
stos
bound
xchg
cli
das
adc
repnz
mov
mov
add
xchg
xor
sti
add
xchg
addb
in
test
xor
jb
jbe
jmp
pop
out
mov
jne
imul
add
sarl
add
add
js
sbb
xchg
jle
stos
js
xchg
ss
nop
pop
push
jg
stos
movsl
mov
jl
inc
addr16
dec
cmpsb
add
mov
ss
rorl
test
mov
sbb
pusha
add
lret
pushl
add
mov
add
sbb
jno
inc
pop
mov
hlt
sbb
imul
into
aaa
jmp
cmp
lret
push
or
push
jo
ljmp
push
mov
jnp
pop
std
mov
add
movsb
das
add
xchg
xlat
jmp
jl
cld
cmp
push
repz
dec
cmp
or
into
jbe
mov
cmp
in
jno
lahf
add
leave
popf
cwtl
addb
stc
addr16
pop
adc
xchg
jno
pop
xor
jle
jnp
or
mov
mov
mov
sub
shll
or
pop
movsl
mov
cmc
movsb
dec
jae
test
sub
and
mov
mov
add
add
pop
and
stos
push
rcr
mov
xor
insl
rcr
or
xor
and
lea
cli
pop
aaa
aad
addb
outsl
je
xchg
push
pop
mov
dec
pop
pop
push
dec
fsubrl
out
mov
icebp
add
aam
xor
push
push
rolb
andl
xchg
fs
jl
jg
add
push
xor
imul
loope
rorl
cmc
lcall
add
loopne
add
outsl
cmc
push
sbb
notb
popa
call
add
sbb
add
in
add
lea
pushf
shll
addb
push
jnp
dec
sti
in
std
or
movsl
repz
jns
mov
and
push
add
add
cmp
repz
xor
jo
push
imul
add
add
ja
jmp
loope
sahf
stc
in
out
or
jae
int
stc
xor
mov
jg
sti
les
inc
enter
cmp
add
xchg
loopne
mov
add
mov
cmp
cmp
sarl
cld
rolb
data16
in
push
push
adc
pop
cmc
lcall
mov
std
movsl
dec
lods
sysret
push
cmp
lock
loop
xor
pusha
add
or
icebp
ret
testl
int3
faddl
jecxz,pn
push
add
insl
pop
pop
xchg
jb
add
add
ja
add
lret
nop
call
fidivrs
repnz
mov
sub
xchg
test
jo
sti
arpl
addb
fistpl
ret
pop
shll
xchg
rcr
or
out
add
jno
fstl
xchg
sub
xor
add
jecxz
test
xor
aad
loopne
inc
inc
add
inc
add
lods
sbbl
cmp
mov
sbb
dec
nop
inc
add
lock
add
pop
xorl
fwait
inc
mov
push
add
stos
mov
push
cld
push
lock
adc
add
cs
les
adc
sbb
pop
sbb
fs
mov
cld
add
bound
xor
adc
icebp
or
push
push
mov
xchg
mov
add
adc
data16
jmp
das
cmp
jo
add
test
in
lods
sti
push
leave
iret
in
pop
cs
pop
sbb
loopne
inc
push
add
das
xor
cmp
loopne
xchg
xchg
sub
addr16
cmpsb
sub
int3
xchg
sbb
inc
add
cmp
mov
jae
mov
imul
test
loope
dec
mov
enter
mov
int3
mov
iret
movb
sbb
add
fs
mov
and
movsb
or
mov
dec
xor
inc
stos
addl
fimull
mov
fnstenv
cmpsb
bound
dec
adc
sub
mov
xor
push
ret
movsl
adc
pop
mov
pop
ljmp
add
les
xor
outsb
cmp
mov
fcoms
in
dec
cmp
insl
mov
insb
leave
sbb
jge
outsl
das
popf
insl
stc
lahf
xor
add
mov
popa
cli
fnstsw
add
jmp
insb
push
jecxz
and
xchg
cmpsb
lock
cwtl
sbb
pop
shlb
pop
jecxz
btc
lods
add
cmp
add
fstl
xchg
ja
test
push
fcoms
sbb
mov
xor
cli
mov
jae
fisubrl
daa
fistl
scas
add
pop
repz
and
sbb
aad
inc
shlb
loopne
imul
scas
or
inc
add
sub
mov
aaa
movb
aad
pop
add
cmp
das
lods
mov
add
fldenv
nopl
xchg
fwait
mov
aam
into
fwait
xor
int3
dec
shll
pop
stos
push
fstpt
scas
fidivrs
push
xchg
rolb
dec
fs
add
icebp
sbb
fwait
add
out
add
add
dec
mov
in
pop
inc
push
inc
add
cs
imul
icebp
add
xor
mov
dec
bound
jl
inc
add
pop
prefetcht2
sub
pop
loop
js
pop
lock
insb
js
ret
divl
insl
and
std
or
test
addb
jnp
mov
sbb
aas
sub
jle
and
insl
cwtl
fmull
or
mov
daa
out
cmp
inc
add
jge
movb
and
and
add
and
mov
lea
or
lods
adc
fdivrl
xchg
mov
cmpsl
pop
sbb
arpl
ret
into
mov
inc
add
add
test
daa
mov
add
adc
add
daa
jbe
push
test
jne
fwait
icebp
jp
into
scas
mov
xlat
dec
addb
fnstsw
arpl
icebp
push
je
fnstenv
ret
push
jg
mov
sub
xchg
lret
add
add
in
ret
loopne
dec
sub
add
cmp
add
js
add
movb
add
and
sahf
scas
sub
dec
mov
std
cmp
jno
leave
cmp
jmp
frstor
add
sarl
in
adc
fnstenv
xchg
jnp
adc
sub
imull
xor
add
out
pop
jb
lret
xlat
jae
scas
iret
fstpt
ss
out
div
addr16
sbb
inc
add
push
jnp
mov
std
or
inc
add
sti
cmp
pusha
add
push
xchg
in
aad
out
push
gs
ss
test
test
lods
lret
int
dec
testb
xchg
pop
sbb
cmp
pop
lock
add
push
add
es
push
jle
add
pop
cmp
addb
sbb
daa
and
dec
sub
push
iret
daa
lret
inc
add
pop
out
outsl
pop
pushf
fs
xor
add
pop
adc
add
mov
fsubl
lcall
xlat
lods
sbb
and
inc
add
add
add
mov
mov
add
ret
push
sarl
mov
add
cmp
xchg
pop
aam
push
negb
xor
rolb
cltd
or
dec
push
and
pop
int
xchg
xchg
outsl
dec
jns
pop
sbb
pop
lds
mov
pop
and
ja
jl
out
int3
enter
cltd
icebp
jb
mov
leave
cmp
iret
jno
cmp
int
sbb
lock
adc
cld
ljmp
mov
cli
push
adc
scas
jae
addr16
pop
adc
lahf
inc
add
sti
mov
jb
push
mov
lods
dec
iret
fsubrs
jmp
aaa
inc
add
aaa
or
add
in
add
mov
sub
shll
inc
add
xchg
loopne
lods
xorl
pop
sbb
add
cwtl
or
inc
add
ret
dec
sarb
jb
es
rolb
loope,pt
mov
jbe
mov
push
sbb
les
shr
add
ret
adc
xchg
fadds
sub
pop
aas
xchg
mov
clc
push
ds
hlt
mov
mov
in
rolb
rcrl
pop
pusha
add
jns
mov
inc
add
mov
pop
xor
aas
movsb
mov
cltd
popf
cmp
push
jmp
mov
out
ret
int
mov
mov
jmp
xor
movsb
and
cltd
mov
mov
subl
add
xchg
dec
inc
add
in
push
inc
jecxz
sbb
jno
sub
pushf
aam
jmp
add
notl
sub
jo
jg
aam
ljmp
mov
add
aas
out
les
xchg
mov
mov
fst
sub
add
lret
scas
repz
jno
mov
and
mov
add
movsl
mov
clc
ud1
in
test
addb
lret
clc
int
add
enter
xchg
jns
push
enter
mov
mov
sub
in
jno
mov
rcll
inc
add
shl
add
pop
stc
hlt
lret
sti
xlat
lea
or
test
dec
push
mov
sti
jo
pop
std
push
add
insb
imul
or
leave
xlat
jne
call
test
adc
aaa
cmp
maxps
cmpl
inc
dec
arpl
jno
clc
ljmp
xchg
or
in
dec
pop
jmp
sbb
rol
add
pop
out
dec
push
mov
movb
pop
lcall
mov
push
mov
mov
dec
jg
push
push
add
leave
or
inc
add
lds
or
mov
aad
and
jmp
jbe
jno
jg
popa
dec
pop
inc
les
int
nop
imul
sahf
jbe
in
pop
inc
add
sbb
call
inc
fisubrs
scas
andl
mov
pop
push
dec
push
adc
xchg
jp
test
adc
outsb
int3
scas
fwait
int3
mov
mov
daa
clc
sbb
movsl
int
sarb
ret
jle
sub
add
and
xchg
insb
fistl
xor
scas
aam
jnp
mov
jnp
fsubrl
cmc
dec
test
or
insb
mov
mov
jo
xchg
andl
popf
leave
ljmp
cmc
mov
sbb
inc
xchg
mov
cmc
in
adc
add
add
pop
cs
mov
jnp
aas
fsub
xchg
mov
adc
inc
icebp
mov
xchg
cmp
push
out
imul
movb
and
es
fdivr
rolb
cwtl
xchg
dec
jno
and
mov
fstps
into
xchg
sbb
jmp
clc
mov
jecxz
and
loope
sub
adc
add
shrl
stos
rorl
fnstenv
add
add
jbe
fsubrp
pop
inc
add
cwtl
iret
sbb
add
add
inc
add
sub
lea
lock
jb
sbbl
mov
ljmp
popf
roll
mov
arpl
mov
and
aam
sbb
sahf
or
add
fmulp
or
dec
ljmp
jmp
scas
sahf
pop
push
mov
cmp
push
lock
push
fnstcw
pop
lret
add
shlb
addb
imul
fnstenv
inc
add
stos
dec
negl
inc
lds
cmpsl
jmp
sbb
jmp
cmp
adc
cmp
cmp
sbb
add
daa
dec
fwait
sahf
pusha
add
es
in
pushf
or
sub
or
inc
add
testb
push
sbb
sbb
or
add
or
fcmovbe
dec
xchg
cmp
mov
add
inc
add
pop
cmp
add
inc
pop
aad
xchg
loope
inc
bound
inc
add
fs
sbb
xor
fisubrl
push
std
sub
lea
add
addb
pop
push
lahf
add
scas
jle
arpl
mov
es
dec
gs
ds
xor
add
xchg
je
mov
add
sub
je
in
pop
push
jns
add
inc
add
xchg
mov
add
mov
jo
pop
pusha
add
pop
xor
ds
loopne
xchg
or
add
mov
icebp
fcmovnbe
clc
dec
and
add
sub
pusha
add
movb
sbb
dec
or
in
add
jmp
in
das
pop
std
movb
aas
gs
xchg
xor
sbb
pop
add
lcall
or
push
jle
push
adc
loop
jmp
negl
add
imul
mov
xchg
mov
lret
add
inc
add
jecxz
adc
xchg
sub
ds
imul
imul
cmp
or
inc
add
push
mov
ds
add
outsl
adc
cmp
outsl
dec
in
inc
icebp
je,pn
pushf
mov
xor
add
pop
insb
sub
push
frstor
pushf
dec
icebp
add
sub
adc
add
aaa
push
add
add
cmp
shll
sbb
pop
xchg
sbb
mov
neg
rorl
adc
repz
jl
xor
push
xor
fnsave
jge
jae
js
popa
outsl
xor
xchg
lcall
add
loope
xor
mov
adc
je
pop
mov
add
sahf
ss
mov
xchg
dec
or
es
push
or
ficompl
outsl
jae
ljmp
push
ret
in
pop
add
cli
test
fstps
cmpsl
dec
aad
ja
sub
xchg
pusha
add
pop
lea
jp
sbb
jecxz
jne
in
xor
rcrb
add
adc
mov
lods
xor
sub
cmp
in
movb
add
add
lock
fdivrs
cmpsb
pop
outsl
jns
jbe
or
jp
call
cs
push
clc
sahf
cmc
cli
in
xor
cmp
bound
ds
pop
inc
adc
into
rorb
add
mov
cmp
add
fisubs
or
pop
mov
fidivrl
push
into
push
push
inc
add
adc
jp
add
sbb
push
dec
mov
inc
adc
out
mov
adc
movb
aam
sub
add
adc
imul
push
fnstenv
mov
lods
repnz
loop
lret
and
std
pop
lods
and
test
mov
testl
insb
popa
stc
lods
or
add
rorb
push
xchg
sub
sub
sbb
pusha
add
adc
adc
add
adc
sbb
and
pop
mov
rcr
and
pop
daa
inc
add
les
cltd
in
add
pusha
add
pop
xor
or
xchg
notl
and
sbb
and
outsl
clc
xchg
sub
xor
or
icebp
ja
adc
imul
cmpsl
hlt
repnz
cmp
xor
add
adc
imul
bound
decb
xor
sbb
or
in
adc
add
les
xchg
cmp
add
lods
fisubs
clc
xor
adc
daa
dec
sbb
mov
xchg
inc
add
xor
call
fwait
xchg
cmpsb
lret
rolb
lods
loope
and
aas
fcmovbe
loop
xor
fs
mov
into
andl
jns
inc
jbe
cmpsl
mov
sbb
cld
fiaddl
repnz
or
rol
jge
jno
cli
pop
popa
jo
xlat
pop
adc
pop
arpl
clc
jl
dec
or
mov
imul
jp
push
aad
or
mov
and
mov
and
ljmp
jae
mov
gs
test
insb
mov
inc
sahf
out
xlat
pop
scas
scas
cwtl
outsl
sub
sub
push
fsubr
jmp
add
shrb
jmp
pop
fwait
mov
gs
push
or
push
ret
cltd
or
addl
arpl
ds
push
shrl
lret
mov
mov
or
addb
ds
mov
in
cmp
arpl
scas
mov
jg
dec
jmp
adc
dec
mov
pusha
add
add
adc
mov
jae
test
add
or
fists
jl
push
lcall
in
mov
pop
loop
sub
test
call
add
sbb
fldenv
xor
cmp
or
int3
fistps
lret
sti
cmp
dec
dec
outsb
fstp
lock
dec
or
bound
jo
add
mov
push
pop
insb
push
add
mov
adc
mov
arpl
or
jae
add
pop
add
cwtl
sub
add
xor
add
push
std
mov
out
xchg
mov
sub
mov
lea
cmp
xchg
lahf
add
lcall
mov
add
shll
popa
lds
inc
add
lock
loop
loop
add
pop
popf
inc
mull
test
jbe
add
xor
cmp
nop
jmp
cmpsb
mov
insb
addb
jmp
aaa
or
cmp
sub
push
inc
add
adc
add
add
push
testl
out
loope
or
xchg
jno
sbb
xchg
cs
enter
push
inc
outsb
xchg
inc
add
xchg
in
stos
dec
xchg
dec
mov
lea
movsl
jg
ficompl
jno
xchg
push
mov
add
and
jb
pop
push
jge
cmp
ss
aam
mov
mov
mov
loopne
orl
pop
jns
in
adc
dec
adc
mov
xchg
add
fcompl
movsl
mov
add
pop
sbb
std
daa
mov
cli
test
or
jecxz
adc
mov
cmc
das
fsub
add
mov
mov
mov
add
adc
mov
push
add
and
pop
cld
dec
fs
loop
add
add
cmp
out
int3
rcll
jne
nop
and
lods
pop
stos
cmpsb
cmp
dec
arpl
xor
scas
repnz
add
xlat
in
mov
add
or
in
add
and
and
loopne
cmp
out
ja
or
adc
xlat
add
inc
movsl
mov
xchg
test
mov
repnz
aam
bound
outsb
xchg
and
lods
loop
add
inc
dec
mov
lcall
lfs
add
daa
jp
fsts
mov
xor
ret
rcrb
mov
inc
add
add
ss
sub
icebp
xor
addb
lods
stc
fwait
pop
enter
push
add
std
cli
mov
icebp
dec
cmp
cmpsb
push
lock
mov
push
outsb
cmp
stos
hlt
inc
add
cmpsb
dec
mov
mov
outsl
xor
jo
addr16
scas
rorl
add
pop
in
cwtl
shrb
add
pop
gs
sub
jge
jecxz
icebp
xchg
cwtl
lods
popl
push
fldcw
xchg
call
jecxz
adcl
lea
out
fwait
shl
inc
sbb
mov
imul
mov
mov
das
push
xor
sub
test
mov
jmp
inc
cmp
jle
or
xor
inc
add
lea
xor
loopne
es
fchs
rolb
push
clc
jnp
int
jo
mov
outsl
cmpsl
lock
fdivl
int3
lahf
push
arpl
mov
js
inc
add
out
scas
popf
jnp
dec
loope,pt
add
add
and
jmp
sbb
aas
push
add
push
shrb
add
mov
mov
adc
xchg
pop
fistps
add
imul
push
dec
loop
int3
jle
call
clc
fs
scas
or
lods
jecxz
das
pop
test
test
sbb
push
jecxz
mov
xlat
jno
addb
jl
add
aad
daa
mov
push
add
fstpt
adc
lock
repz
pop
push
xor
mov
lds
add
jecxz
loope
ds
or
mov
cs
sub
xchg
xlat
in
ffree
add
jg
jg
icebp
ds
cmp
rcrl
divl
fnsave
popa
repnz
scas
cmpsb
lds
test
jmp
js
push
les
ss
fidivrl
push
inc
stos
or
dec
loop
shll
into
jge
dec
adc
loop
dec
adc
adc
scas
into
pop
movsb
stos
loope
loope
jbe
add
add
xchg
or
add
cmpsb
lcall
add
sbb
adc
push
add
add
mov
dec
test
scas
xor
jg
lock
xchg
shlb
sbb
ja
add
jns
add
out
add
repnz
stos
fwait
xor
into
mov
out
mov
inc
in
clc
movsl
mov
fidivrl
cwtl
cmc
jl
pop
inc
fstl
ss
das
push
mov
mov
test
jne
adc
daa
inc
mov
mov
movntq
mov
std
jmp
insb
mov
movb
into
sub
jns
loope
mov
or
push
pop
mov
mov
cmp
add
mov
pop
scas
lret
rolb
lret
mov
mov
mov
xchg
xchg
mov
iret
es
mov
fdivrs
mov
sti
or
aad
fdivrp
fidivrl
addr16
daa
xchg
fnstsw
js
cmp
fstpt
nop
xchg
push
mov
xor
movb
push
ret
mov
add
repz
mov
mov
inc
add
pusha
add
loop
std
lods
fisttpll
xor
icebp
mov
add
sbb
jp
pop
mov
mov
aam
add
cmp
int
les
xchg
xor
add
add
mov
or
adc
xchg
repnz
push
and
add
xchg
insb
jp
xor
cmp
jbe
repz
add
rorl
aas
ficompl
lods
push
jp
cltd
faddp
add
in
rcll
sbbl
sub
mov
sub
or
loopne
cwtl
or
fisttps
add
adc
das
and
mov
inc
mov
int3
push
add
shr
sub
out
adc
jo
mov
movb
jo
add
xchg
push
mov
mov
pxor
mov
arpl
mov
add
push
rol
aam
jle
inc
add
sub
dec
ja
sbb
ret
fcomps
out
loop
jne
in
es
add
or
pop
or
cmp
in
addb
mov
mov
cwtl
sub
push
add
xor
pusha
add
sbb
sbb
cmpsl
stc
dec
daa
mov
and
or
mov
scas
mov
iret
jno
and
daa
adc
add
jbe
add
je
jecxz
pop
jp
jns
add
cltd
lock
cmp
je
jecxz
sub
add
jl
mov
lret
fwait
sahf
push
movsb
sbb
add
add
dec
test
into
cmpsl
int3
addr16
sbb
inc
in
in
pop
or
test
pop
stos
mov
pop
lds
test
fsubl
add
std
inc
xlat
inc
add
add
xor
mov
sub
lods
pop
push
lock
sbb
sbb
addr16
mov
cs
das
lods
addr16
mov
dec
outsb
add
lret
add
fdivl
ret
lock
add
add
jae
ljmp
xchg
jecxz
enter
and
cmp
mov
fsubrs
adc
cltd
sub
ret
pushf
sub
lea
and
sbb
out
stc
jnp
dec
mov
push
popf
iret
arpl
xchg
pop
int
xor
pushf
outsb
dec
subl
add
in
daa
std
stos
sahf
cs
jae
in
cld
pop
xchg
sbb
sub
into
xlat
std
jno
aaa
fisubrs
addb
pop
cs
lods
cmp
movb
or
movsl
push
xchg
fwait
in
idivb
mov
test
and
fs
imul
add
jmp
mov
stc
xchg
psubw
add
bound
xor
mov
pop
pusha
add
dec
xchg
mov
movb
cmpsl
mov
sahf
imull
push
inc
add
adc
outsb
sub
push
jge
push
and
es
adc
pushf
cmp
add
mov
and
xchg
sarl
shr
xchg
sbb
mov
dec
sti
add
outsl
in
mov
dec
push
add
sti
adc
mov
mull
sbb
mov
les
out
data16
in
addr16
add
sub
dec
out
sbb
sbb
inc
mov
xchg
mov
or
lcall
mov
add
pop
inc
add
cmp
clc
add
std
lock
aam
pop
push
add
mov
clc
lea
icebp
sti
pop
jnp
pop
aam
lock
insb
mov
leave
fdivl
gs
decl
or
or
iret
push
and
cmp
les
enter
lret
mov
cwtl
inc
add
dec
xor
cmp
out
adc
lcall
push
push
sub
xor
fildll
ret
sbb
outsl
or
jne
je
push
pop
mov
push
add
xor
add
push
jp
add
xchg
or
inc
cmp
add
fs
jae
xchg
sbb
ds
sbb
addr16
xchg
aad
mov
std
jl
cmp
or
enter
mov
xchg
je
iret
sub
hlt
mov
inc
add
leave
and
and
repz
out
idivl
add
in
lret
mov
adc
icebp
or
jge
rorb
xchg
push
sbb
xorl
or
mov
dec
mov
outsb
rolb
add
sub
add
sbb
aas
push
or
cs
lret
dec
sub
cmp
orl
nop
inc
jb
inc
add
pusha
add
in
mov
addr16
in
mov
pop
test
add
add
or
mov
das
fwait
push
mov
inc
or
stos
cmp
pop
ret
jae
in
adc
sbbl
xchg
scas
lods
std
lea
mov
add
lea
int
ret
add
adc
mov
sbb
jle
inc
and
push
test
sbb
iret
sbb
movb
loop
out
mov
lds
aad
jl
inc
in
push
addb
jmp
aaa
pushf
lret
mov
cmp
cmpsl
sarb
adc
call
int
negb
dec
scas
les
mov
mov
fisubl
add
sbb
inc
add
add
add
lret
std
pop
mov
jl
push
lcall
fistpll
cmp
xor
add
cmpsl
mov
addr16
add
push
push
jae
dec
xchg
jne
imul
popf
popf
sub
jb
sub
outsl
fnstcw
push
add
push
loope
fcomps
mov
xchg
bound
repz
pop
cwtl
fwait
out
ja
xchg
test
inc
mov
add
je
push
inc
add
pop
cmpsl
pop
mov
fisubl
pop
xchg
mov
lret
scas
jno
insl
xor
lds
or
pop
xor
out
test
cli
xchg
mov
jle
push
shl
imul
mov
lret
mov
arpl
mov
pop
insb
pop
mov
lods
inc
add
rcrl
mov
push
loopne
shlb
addb
pop
sbb
repnz
stc
cli
add
out
push
into
stc
xor
sub
fimull
stos
xchg
add
lret
std
xor
xchg
and
sub
imul
stc
cmp
or
xchg
mov
insb
and
outsb
mov
jne
jecxz
js
inc
cs
xchg
addr16
cltd
mov
add
pop
mov
adc
xchg
or
cli
jns
sub
mov
shll
addb
mov
je
mov
test
in
repz
into
ja
test
mov
inc
inc
stc
pop
and
inc
add
das
ljmp
mov
sbb
mov
push
es
in
push
ds
movsb
int
add
mov
cwtl
push
testl
testl
je
addb
mov
push
test
push
push
inc
add
cwtl
sub
xchg
aas
in
call
add
call
inc
add
mov
pusha
add
push
sbb
pop
xor
iret
inc
add
inc
scas
pop
out
xor
mov
jne
fs
xchg
lock
push
sti
push
stc
and
add
movsl
inc
add
sub
pop
gs
loope
xchg
testb
mov
test
lods
push
push
adc
inc
add
push
mov
inc
add
insl
dec
mov
cli
into
push
jne
dec
jae
loop
aaa
push
inc
add
mov
xchg
and
sub
sbb
loope
xchg
rolb
adc
dec
mov
inc
cmpsl
mov
test
push
movsb
cltd
mov
test
pop
cld
mov
xchg
imul
add
add
add
pop
pop
stos
jbe
add
test
insb
pop
ss
add
cs
jbe
test
xor
push
test
insb
test
jmp
enter
add
lock
cmp
shl
iret
push
pop
or
pop
out
jb
xchg
clc
inc
add
call
lock
xor
nop
dec
adc
fwait
ret
movsb
sarl
mov
rorl
push
xor
push
mov
ljmp
jno
into
pop
rorb
idivb
mov
pusha
add
push
jb
lea
dec
push
dec
dec
jb
add
stos
sub
aas
pop
imul
aaa
lahf
rclb
cmp
aad
sbb
ja
iret
pop
xlat
rolb
jnp
add
mov
pop
jnp
mov
xchg
pushf
ret
out
pop
xorl
add
inc
jg
sarb
pop
cmp
mov
mov
arpl
imul
fisubrs
mov
add
pop
mov
push
push
add
and
mov
dec
ds
in
sarl
jl,pt
movb
push
mov
scas
fldl
add
push
add
xchg
jnp
enter
pop
mov
test
or
jg
fildll
sub
fidivl
jmp
dec
int3
je
shlb
fucomp
test
add
test
shll
js
stos
adc
inc
add
sbb
cmpsl
and
or
inc
add
xchg
rorb
call
fcoms
rolb
ljmp
lret
add
jecxz
sbb
es
inc
test
jne
sbb
xchg
adc
push
jmp
movsb
out
movsl
sahf
sbb
cli
jge
cli
push
or
shl
daa
aaa
pop
xor
inc
cltd
push
lods
mov
fwait
inc
add
aaa
js
pop
xchg
rcrb
rcll
inc
add
lret
jb
jno
sbb
aas
push
les
rorb
mov
sub
cld
clc
inc
add
lcall
pop
pushf
aas
cwtl
push
loopne
cld
jns
add
jae
and
mov
dec
xorl
and
xchg
int
xor
dec
rcll
loope
rolb
xor
xor
loopne
stos
fists
aas
lods
and
data16
or
dec
ds
cmpsb
dec
push
mov
ret
sub
xchg
mov
and
aam
das
outsl
daa
cmc
ds
xchg
aad
xchg
pop
xchg
fadds
inc
add
imull
or
mov
enter
test
pop
add
mov
add
cmp
pop
imul
add
add
pop
push
nop
mov
add
addb
jns
dec
pop
fldl
push
push
xor
arpl
and
xchg
addb
or
jnp
xor
cmc
dec
mov
jg
lock
rolb
inc
add
daa
cmp
pusha
add
clc
xchg
rcrl
inc
add
xchg
or
pop
loopne
div
inc
dec
insb
dec
int3
add
add
mov
insb
mov
inc
dec
adc
andps
adc
add
pop
repnz
add
shlb
cmp
ficomps
pop
jmp
lods
sub
out
jg
push
push
pop
sub
cmpsl
jecxz
rcl
pop
repnz
lretw
addr16
lods
fistpll
out
push
dec
gs
add
xchg
addl
outsb
fidivrl
js
scas
jae
mov
dec
loop
dec
inc
out
outsb
mov
pop
dec
push
sub
adc
imul
xchg
js
ds
jmp
test
xchg
dec
sbb
and
dec
adc
lret
push
arpl
push
jecxz
xor
daa
loopne
loop
enter
fldz
pop
pop
push
mov
pushf
int
jno
jl
add
jmp
test
pop
in
add
sub
push
pop
xor
xchg
mov
lea
dec
jb
add
into
dec
stos
inc
ficompl
popf
or
loopne
add
or
pop
aam
leave
inc
sahf
cmp
xchg
sub
mov
insl
les
outsl
pop
and
sbb
and
lea
xor
push
stos
dec
repnz
mov
out
xchg
adc
and
add
mov
inc
add
add
gs
mov
mov
cwtl
insl
movsb
testl
fidivrs
js
pop
outsb
jae
jmp
call
sbb
es
sbb
adc
cltd
in
fcoms
mov
add
push
jp
sub
add
push
in
mov
and
ds
lret
cmpsl
mov
add
add
or
sahf
jns
call
sub
add
add
xchg
das
in
test
pop
rorb
mov
movsl
sbb
fisubl
fiaddl
add
outsl
pop
ficomps
adc
cmc
mov
mov
and
mov
mov
pop
lea
ljmp
inc
add
in
add
push
inc
add
jl
push
dec
mov
add
sbb
clc
pop
cmpsl
inc
add
mov
add
add
pop
or
mov
xor
jne
decl
mov
inc
add
ja
call
mov
xchg
movsb
push
test
push
and
xor
in
std
inc
cmc
addb
add
loop
jno
sbb
cmp
lahf
xor
mov
mov
jno
ds
pop
decl
jp
push
xchg
xchg
outsb
loop
mov
aas
pop
scas
mov
and
inc
and
pusha
add
or
or
sub
cmp
pop
sti
jmp
lret
mov
repnz
inc
add
insb
insl
lods
adc
dec
pop
sub
add
sub
outsb
cmp
roll
