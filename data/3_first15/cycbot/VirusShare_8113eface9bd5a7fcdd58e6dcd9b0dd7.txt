mov
xchg
add
enter
mov
mov
add
adc
icebp
into
xlat
mov
sbb
xor
in
movsb
add
adc
add
cmpsb
add
or
mov
adc
repnz
gs
add
loope
add
js
clc
fstpl
add
add
add
mov
dec
mov
add
mov
pop
out
cwtl
dec
adc
add
push
add
mull
cli
add
mov
cmc
cltd
xor
pusha
add
xchg
test
mov
imul
mov
jecxz
add
add
inc
test
daa
in
mov
xor
add
or
loope
pop
out
movsb
add
adc
fstps
mov
xchg
outsb
fnsave
inc
add
add
fnstenv
add
push
add
jecxz
add
scas
mov
mov
add
cmp
add
mov
hlt
add
jne
ffreep
sbb
rorl
rolb
add
add
add
ja
cmpsl
gs
rolb
mov
add
mov
add
mov
mov
fwait
roll
add
jmp
stos
cld
ret
sbb
add
or
add
add
fcomip
add
inc
add
cs
daa
sbb
out
mov
jnp
fnstsw
jbe
push
inc
mov
xchg
adc
mov
add
ret
push
add
cs
push
inc
add
sbb
arpl
stos
sarl
lahf
pop
call
push
add
add
lock
mov
push
add
xchg
add
push
add
inc
jle
mov
data16
add
add
xor
rolb
xchg
add
insb
add
bound
mov
lret
inc
pop
fmull
popf
mov
mov
or
aad
aas
imul
add
std
adcl
mov
sbb
in
jnp
push
add
add
xchg
sub
add
inc
add
or
fucomp
cmp
dec
jmp
in
sub
lahf
mov
lret
bound
mov
add
add
mov
ret
add
mov
add
sbb
push
add
out
pusha
add
jle
add
add
pop
jecxz
insl
test
add
dec
inc
add
iret
push
mov
inc
xor
add
adc
mov
or
add
mov
pop
or
mov
add
dec
xchg
add
add
add
pop
cs
push
and
mov
add
push
repnz
mov
test
jb
test
pusha
add
xchg
push
add
xchg
add
xor
mov
clc
rolb
jp
pop
out
mov
jl
add
out
cs
add
add
mov
clc
jmp
push
cmp
mov
xchg
and
mov
loope
or
call
test
ds
pop
pop
in
add
enter
add
add
scas
xor
or
add
jg
fdivrs
movb
dec
insl
adc
mov
dec
loopne
mov
outsl
dec
out
add
add
loope
or
mov
and
add
push
pop
push
add
cmpl
add
imul
xchg
sbb
les
cmp
and
mov
mov
hlt
add
es
add
inc
inc
dec
jmp
mov
sub
push
push
push
cld
call
sub
mov
cs
movzbl
cmp
ss
lea
push
lea
push
lea
push
lea
push
push
call
cmp
je
es
lea
es
cs
es
call
test
jne
jmp
push
lret
icebp
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
lea
lea
sub
add
mov
sub
sub
push
pop
push
je
jmp
add
add
dec
sti
dec
pop
xchg
mov
test
js
pop
lgdtl
cmp
add
jno
mov
dec
nop
add
add
mov
popa
mov
jno
jae
imull
lea
cld
dec
inc
call
push
lods
adc
cmp
add
xchg
data16
movsb
add
add
movb
xchg
int
add
pop
sub
mov
mov
cmp
add
add
ds
icebp
adc
push
cmp
xchg
test
or
into
jno
xchg
jae
std
out
add
sbb
repz
loope
push
add
scas
ror
leave
pop
mov
push
lods
or
stos
jbe
mov
add
cmp
mov
add
leave
int
xor
add
ret
stos
mov
pop
mov
icebp
ljmp
jns
mov
mov
push
add
dec
sti
adc
std
daa
xor
rolb
mov
adc
add
addr16
enter
xchg
add
xchg
add
add
pop
add
pop
xchg
add
aad
int3
xor
cld
mov
mov
mov
ret
add
out
sub
cmpsb
add
add
mov
mov
inc
jl
add
in
mov
xchg
inc
jle
jg
add
xchg
add
inc
add
mov
add
add
adc
add
stos
jo
and
mov
rcrl
add
mov
and
daa
cwtl
dec
xor
movsb
add
add
ret
dec
filds
sti
xchg
mov
mov
add
out
test
or
jge
outsb
clc
add
mov
add
add
gs
push
or
add
add
mov
sub
push
adc
or
and
lods
ljmp
add
dec
out
addb
sub
fistpll
add
add
add
add
sahf
jecxz
add
fidivrl
xor
add
ret
and
mov
ljmp
add
jo
inc
add
sub
jecxz
add
int3
dec
std
popa
ljmp
mov
sar
add
sbb
popf
pop
out
xor
fsubs
add
add
add
aad
add
cmp
mov
add
ss
add
lcall
mov
mov
hlt
add
xor
jecxz
add
loopne
into
push
mov
sub
lret
inc
sti
mov
pop
add
sub
inc
add
addb
jo
icebp
enter
add
mov
lahf
dec
sbb
pop
in
loop
mov
add
sub
xlat
or
pop
addl
cli
ja
mov
test
add
add
outsb
cmp
movsl
cs
add
adc
pushf
fstps
fnsave
adc
add
push
add
int
sbb
int3
add
mov
add
cmpsb
add
mov
xchg
and
or
sbb
out
xchg
add
add
inc
lret
ficomps
mov
add
mov
fnstsw
sub
shrl
add
add
add
sub
cmpsl
jecxz
mov
mov
add
mov
std
iret
dec
xchg
rolb
add
pusha
add
add
add
xor
and
lret
movb
and
add
aas
push
sahf
xchg
add
jne
add
add
int
add
cmp
aaa
jmp
cmp
aaa
rolb
mov
add
pop
cld
lods
lds
mov
add
adcl
sar
push
add
add
add
mov
xlat
dec
popf
jmp
jno
ds
arpl
cmpsl
in
jo
mov
mov
ljmp
jge
xlat
and
lock
add
add
add
inc
dec
jmp
add
cmpl
xor
sbb
lds
mov
xchg
add
rolb
add
out
hlt
add
addb
imul
loop
imul
mov
or
add
mov
flds
stos
sub
push
cwtl
xor
and
mov
or
mov
add
pop
push
inc
imul
and
mov
psubd
add
adc
ja
and
add
push
xchg
setne
adc
sbb
xchg
dec
inc
mov
sub
in
out
sub
ret
out
sub
cmp
cmp
sbb
pusha
add
jnp
or
lods
sbb
add
adc
add
or
sub
add
aam
add
movsb
add
add
xchg
add
testb
add
in
fwait
dec
std
sbb
loop
int
add
add
popa
add
cs
mov
or
sub
pushf
cmp
rolb
add
addb
add
addb
add
add
pop
xchg
add
enter
add
xchg
add
rolb
ret
test
pop
popf
add
mov
jmp
add
mov
inc
fisttpl
mov
jg
add
jle
call
sbb
push
add
xchg
add
out
adcl
xchg
pop
jne
inc
add
push
inc
add
and
mov
ret
jp
insb
sub
mov
cltd
movsb
add
add
test
lds
jmp
add
inc
add
mov
add
lods
cmp
cmpsl
push
add
adc
lret
add
jecxz
dec
push
and
xlat
cmp
lcall
or
jle
xor
cld
aad
cmpsl
adc
add
add
add
pop
mov
cmp
icebp
add
pop
and
cltd
mov
add
push
add
dec
bound
mov
add
add
push
add
add
add
sub
call
add
or
add
cmp
in
push
add
cmp
pop
xchg
mov
jmp
fisubs
or
add
sbb
add
out
pop
mov
pusha
add
push
add
pop
xchg
add
es
inc
add
jae
add
mov
in
mov
mov
add
incl
enter
test
add
add
sti
das
je
mov
add
push
mov
xchg
sahf
add
cmp
add
inc
cmp
pop
pop
std
aad
pusha
add
fnsave
add
sbb
add
add
add
sahf
fidivs
add
outsb
sub
push
dec
mov
push
inc
add
add
mov
mov
repz
mov
add
dec
sbb
addr16
sub
mov
jge
add
add
and
mov
add
cmp
leave
sub
add
pop
jp
add
cli
int
add
push
add
divl
addb
inc
add
add
add
stc
add
push
pop
rolb
jp
add
add
sub
fwait
lret
ret
leave
rolb
add
pop
insb
jb
rolb
mov
sub
and
add
orl
add
add
add
data16
jmp
add
lcall
add
pop
dec
into
mov
sar
jecxz
mov
jnp
test
xchg
xchg
add
out
mov
dec
ret
loop
dec
cld
mov
mov
inc
adc
rolb
mov
mov
pop
mov
push
addb
xchg
out
dec
outsl
push
sar
dec
push
add
sbb
adc
fcoml
test
test
or
lret
sub
add
add
sbb
push
add
add
mov
lods
pop
pop
dec
stc
cli
sqrtps
ljmp
sarl
push
add
stos
fbstp
std
jnp
and
mov
add
pop
addb
add
test
add
mov
and
mov
dec
xchg
and
sbb
loope
add
cmp
push
add
pop
insl
jp
add
add
mov
add
mov
lret
addb
add
add
add
add
xchg
add
jb
push
adc
sub
dec
add
pop
or
add
fmull
int3
popf
imul
aas
mov
sahf
dec
movb
ret
insl
inc
pushf
fwait
push
or
add
mov
adc
stc
insl
test
add
popl
into
je
pop
add
mov
add
testb
dec
js
mov
inc
add
cmpsl
cmpl
icebp
mov
adc
add
aas
imul
outsl
in
loope
cmp
mov
lods
mov
sti
sbb
into
fmull
pop
hlt
add
je
push
add
jl
mov
add
jbe
mov
adcl
add
fnstcw
push
enter
shl
ror
mov
das
idivl
xchg
add
inc
jno
add
xchg
ficomps
xor
jns
pop
add
sbb
mov
add
scas
bound
mov
push
cmp
xor
mov
add
pop
adc
push
nop
add
cmpsl
and
sbb
repnz
in
jp
lock
pop
and
mov
inc
add
repnz
fwait
in
loop
xchg
movb
or
fsubrs
test
xorl
dec
js
add
add
add
add
pop
lods
call
mov
outsb
xchg
sbb
sub
xor
jg
add
mov
ret
gs
jecxz
push
add
lret
out
les
fwait
inc
les
aad
or
clc
mov
add
addb
cltd
scas
sbb
jae
insl
inc
add
jbe
dec
xlat
lret
scas
ffree
push
add
arpl
add
and
test
testl
add
data16
repz
and
in
jmp
mov
mov
inc
xor
pop
data16
insl
xor
add
addb
daa
sti
leave
inc
dec
push
testb
out
insl
inc
add
stos
mov
data16
mov
mov
add
add
pop
xor
fdivl
mov
push
add
add
fnsave
push
add
fidivs
add
add
mull
xchg
add
inc
in
inc
add
mov
jge
daa
pop
rolb
inc
add
jle
scas
dec
fildl
shll
imul
cmp
stos
testl
lods
add
add
mov
fisubs
add
sahf
push
add
jo
xor
add
jl
add
leave
sti
add
mov
xchg
add
cmpsl
dec
sbb
add
int
add
dec
add
imul
xor
mov
pop
mov
inc
add
mov
nop
add
add
add
mov
addr16
add
mov
add
add
cmc
popa
adc
add
rcrl
push
add
xlat
mov
ret
popa
faddl
cmpsl
mov
adc
push
add
pop
ficoms
add
test
add
xor
test
xchg
add
adc
aad
fmull
cmp
dec
pushf
or
test
movsb
add
inc
add
mul
add
cmp
jnp
add
add
mov
addr16
repnz
mov
movsl
jmp
mov
mov
push
pop
rolb
xchg
adc
xor
fnstsw
inc
add
add
addr16
pusha
add
lret
add
testb
les
mov
pushf
add
mov
mov
xor
in
push
mov
mov
add
add
add
add
add
mov
movsb
add
cmp
jne
inc
add
stc
add
sbb
ret
insl
jno
add
mov
lds
add
add
cmpsb
add
jbe
jecxz
add
sub
or
cmpsb
add
add
xor
cmp
fcomps
mov
pop
lret
jmp
mov
add
call
data16
add
or
jo
jmp
lock
and
cmp
dec
adc
cld
add
mov
add
sbb
add
add
mov
sub
lds
sbb
jns
sahf
outsl
jp
cmp
les
sbb
clc
call
add
fwait
dec
push
jne
sub
add
mov
aad
add
and
add
cld
add
bound
mov
xchg
aam
dec
dec
cwtl
and
pusha
add
add
mov
jbe
rolb
add
lods
dec
popa
push
add
add
dec
jp
icebp
rolb
arpl
ljmp
adc
adc
clc
mov
add
cmpsb
add
dec
cmpsl
dec
or
xchg
add
add
bound
mov
in
jp
gs
xor
cld
ret
lock
mov
xchg
out
push
je
xchg
rorl
pop
aam
lods
hlt
add
pop
data16
mov
and
ret
inc
add
cmc
stos
ja
add
add
sti
sbb
adc
lret
mov
ds
add
cli
data16
adc
out
pop
les
pop
push
lods
mov
inc
dec
sub
add
pop
mov
mov
adc
sub
push
fdivrs
fmuls
add
add
push
add
add
mov
insb
pop
loop
mov
sahf
jbe
in
ret
test
mov
sbb
movl
add
out
add
add
fmull
outsb
lods
arpl
mov
fidivrl
add
xchg
add
add
jl
cmpsb
add
add
add
testb
add
add
mov
out
repnz
xor
enter
pop
test
jae
add
and
mov
ljmp
mov
push
mov
push
add
add
or
and
loopne
lahf
dec
addb
mov
test
add
in
inc
sbb
ret
or
addb
dec
jg
lock
stc
dec
call
in
fstl
add
sahf
xchg
cmpsb
add
push
mov
pop
fwait
rcll
das
outsb
xor
dec
enter
add
in
repz
repnz
bound
mov
mov
dec
rolb
rolb
sti
lcall
mov
lahf
jl
add
jmp
movb
mov
out
int
add
xchg
lahf
jnp
in
cld
ljmp
cmpsl
fists
xchg
addl
adcl
stos
popa
sbb
add
add
mov
scas
jne
mov
pop
sbb
add
dec
push
mov
xor
sbb
sbb
fcoms
adc
lods
idiv
or
jnp
xor
js
or
int
add
mov
sub
cmpl
sti
mov
loop
jne
add
add
insb
loopne
cmp
addb
xchg
fisubs
mov
addb
dec
leave
pop
add
push
add
jl
fs
loop
pop
or
cwtl
fisubs
mov
in
decb
insl
cmp
or
mov
add
ljmp
cli
les
xchg
add
push
cmp
ja
je
movsl
add
and
mov
bound
mov
ret
and
dec
inc
add
xchg
movb
mov
mov
fwait
pusha
add
std
ss
fxch
inc
add
add
cs
pop
insl
inc
jae
add
add
add
fmuls
pushf
mov
pushf
lcall
push
jg
cmp
mov
enter
cmpsl
xlat
icebp
ss
add
out
testl
pop
mov
outsb
jg
movb
mov
jae
clc
fsubrs
push
out
fdivs
add
cltd
in
in
add
jecxz
xchg
sub
add
cltd
inc
cvtps2pi
add
ja
movsb
add
add
mov
repz
dec
insb
shll
add
add
mov
add
mov
sbb
add
add
movb
push
add
lret
add
mov
add
add
push
add
sbb
cmp
sbb
repnz
mov
push
add
leave
and
dec
data16
ds
mov
mov
out
mov
add
jl
add
pop
add
inc
fistl
movsb
add
mov
jl
sbb
daa
lret
ret
add
jae
jnp
xor
sbb
push
inc
add
fiadds
mov
inc
add
add
adc
cld
loop
lock
rolb
cmp
add
add
mov
jo
clc
inc
and
and
mov
adc
mov
enter
inc
cmp
aam
int
fstpt
testl
mov
add
je
movsb
add
xchg
cmp
add
cmp
gs
fcomip
add
xor
sbb
cmp
and
add
ja
xor
inc
xchg
add
fsubr
mov
add
add
enter
mov
hlt
add
ret
jne
loop
and
cmp
popa
mov
xchg
adc
int3
fldcw
sub
add
imul
add
add
int3
mov
push
add
lret
sub
test
mov
mov
jno
add
loop
ljmp
push
adc
test
fdivl
xchg
daa
jecxz
jns
xchg
sub
add
add
add
insb
cmp
mov
in
in
adcl
add
push
add
and
mov
add
cmp
sub
enter
mov
add
add
or
shll
cmp
mov
shll
cmpsb
add
add
roll
mov
cmp
rolb
sub
adc
cmp
lret
nop
add
mov
add
add
out
icebp
push
arpl
cmpsl
bound
mov
xchg
pop
sbb
lods
cwtl
push
add
add
inc
add
leave
push
add
add
add
add
add
add
jecxz
add
add
add
add
pop
add
sub
mov
add
clc
pop
das
pop
lock
add
add
add
lret
push
jbe
inc
add
add
add
push
add
add
loop
sub
cmp
add
add
inc
add
addl
rolb
push
add
sub
lock
pop
repz
rolb
mov
fsubrs
jno
cld
pop
bound
mov
fisubrl
jp
dec
fsubrs
lock
add
add
mov
jle
mov
in
hlt
add
enter
add
add
and
jb
js
add
addr16
sbb
ljmp
dec
lcall
movsl
int3
addr16
jl
xchg
add
notl
add
add
bound
mov
repz
movsb
add
add
add
and
ljmp
add
dec
cmpsb
add
push
add
bound
mov
add
out
mov
pop
je
js
add
cmp
sbb
add
addb
cmp
mov
add
mov
adc
fmul
popf
sbb
add
and
aad
add
ljmp
mov
movsl
push
fldenv
add
mov
add
add
add
add
pop
sub
je
mov
pop
cli
xchg
add
js
add
pop
aaa
scas
negl
mov
add
xor
add
adc
in
jo
incb
fcoms
add
outsl
aad
add
adc
pop
dec
sub
add
add
inc
mov
add
aas
data16
sub
roll
cmp
add
add
mov
add
mov
add
or
mov
ljmp
iret
cmc
icebp
pop
push
jmp
clc
inc
inc
add
mov
rolb
addr16
call
push
gs
fwait
ret
pop
mov
add
je
pop
add
inc
loopne
xchg
rolb
dec
mov
data16
sbb
add
cmp
add
push
add
xor
mov
add
xchg
add
push
add
add
add
test
xchg
and
mov
outsb
scas
add
adc
enter
inc
add
rolb
mov
push
add
add
jp
jbe
mov
stos
lea
clc
sbb
rcl
pop
imul
mov
add
push
add
inc
add
mov
and
rcrl
enter
out
and
dec
fdivs
add
cmp
sub
test
jl
cmp
xor
mov
pop
ret
fwait
cld
dec
xor
xchg
insb
les
sbb
pop
add
mov
cmc
enter
add
cld
movb
cmpsl
pop
in
imul
rolb
inc
adc
cmp
movb
add
add
clc
mov
fnstsw
pusha
add
subl
xchg
jae
add
dec
jnp
xchg
add
add
add
daa
add
mov
add
stos
cmp
lods
sbb
sub
and
mov
mov
mov
test
lret
iret
into
push
cwtl
mov
repnz
add
rolb
push
add
add
repnz
ljmp
popa
cmp
adc
cmp
add
dec
xor
add
cmp
add
stos
in
push
addb
and
mov
mov
add
sub
push
add
xchg
add
cs
add
jmp
in
daa
sti
je
adc
add
fidivrs
mov
call
inc
and
mov
repz
mov
rolb
cmp
sub
call
or
iret
jnp
add
push
add
daa
or
add
sbb
add
pop
jg
out
inc
add
sbb
aad
mov
or
xchg
scas
sahf
das
into
aas
add
adc
xchg
add
in
mov
sbb
aam
add
dec
stc
add
out
loope
add
movb
add
pop
inc
add
add
ljmp
cs
or
dec
xlat
adc
add
rolb
add
adc
lahf
dec
or
adc
std
imul
inc
pusha
add
or
add
xchg
dec
roll
movsb
add
xor
fdivs
cli
insb
int
add
int3
ds
jbe
mov
les
jmp
sti
cmp
mov
add
mov
mov
hlt
add
fnstenv
lahf
test
inc
adcl
add
xchg
repz
mov
add
addb
xchg
add
or
add
add
add
add
jnp
jp
inc
cmc
rcrl
cs
cltd
and
mov
inc
addb
push
add
add
std
push
add
mov
inc
push
add
push
jle
popf
stos
mov
add
insb
push
jne
mov
and
mov
mov
popf
movsb
add
ja
dec
mov
add
int
pop
lahf
into
jle
mov
jp
push
stos
clc
clc
lock
xchg
pop
jbe
aas
jo
and
push
add
aad
add
or
and
cmpsl
ret
jae
add
push
sub
push
add
add
add
add
xchg
add
aas
cmp
mov
in
cmc
sbb
push
dec
push
rolb
mov
dec
inc
lahf
add
jg
inc
inc
pop
xor
mov
jo
inc
lahf
or
cmp
out
or
fidivrs
les
fsubl
push
and
add
scas
or
rolb
out
imul
cmp
adc
sbb
loope
add
mov
sbb
hlt
add
js
add
add
jnp
add
dec
mov
mov
and
add
xchg
out
cmpsl
ljmp
push
mov
dec
sbb
pop
das
repnz
add
add
mov
mov
std
dec
push
or
das
call
pusha
add
add
mov
icebp
aas
int
push
mov
add
push
jb
xor
fwait
xchg
add
add
add
test
xor
pop
dec
test
lods
adc
push
idivl
jmp
add
cmp
add
xor
cs
cmp
insl
add
aam
insl
mov
aam
adc
jbe
scas
repnz
fwait
add
mov
ret
add
add
sbb
add
stos
pop
mov
jne
aad
aas
pop
or
jbe
mov
or
lock
cmc
mov
add
adc
imul
out
and
adc
hlt
add
jg
imul
add
add
cmpsl
mov
push
ljmp
pop
leave
inc
xchg
hlt
add
sbb
leave
and
cld
lea
add
pop
or
add
jmp
lock
cltd
cmp
add
popa
xchg
loop
pop
dec
or
inc
add
testb
inc
data16
call
add
jle
mov
imul
add
scas
mov
mov
add
inc
push
add
sbb
scas
dec
add
outsl
out
mov
add
xor
add
cltd
dec
mov
pushf
nop
add
add
mov
xchg
add
adc
xor
imul
pop
ljmp
test
repz
mov
mov
add
add
mov
int
adcl
xchg
add
pop
data16
add
add
mov
mov
xchg
jb
mov
add
mov
add
push
add
loop
pop
add
add
data16
imul
adc
icebp
mov
movsb
add
and
mov
add
pop
push
jns
add
mov
test
out
sbb
insl
cmpsb
add
add
addb
pop
pop
or
inc
xchg
inc
cwtl
jle
sub
cwtl
mov
add
mov
aaa
mov
add
mov
vpaddb
xor
ljmp
stc
or
xchg
add
add
incb
mov
adc
clc
repnz
add
cmp
add
fadds
add
push
add
sub
add
add
and
rolb
xchg
add
ss
add
add
mov
stos
or
inc
add
mov
or
ficomps
sbb
mov
ja
add
dec
push
mov
pop
cmp
cmp
add
or
cmp
loop
sbb
fabs
and
mov
add
test
jns
add
lret
and
int
rcrl
test
js
ret
daa
jle
or
add
mov
into
sbb
add
xchg
sbb
mov
add
sub
add
add
push
add
out
in
std
pushf
sub
push
add
add
xchg
je
mov
mov
xchg
mov
insb
movsb
add
add
sahf
test
add
sti
jns
add
add
add
daa
into
add
add
movb
lcall
mov
movsb
add
mov
add
mov
add
ret
cmpl
fisubrs
or
mov
add
ret
inc
fcomip
add
decb
jae,pn
mov
cld
inc
add
sbb
ret
scas
adc
inc
popf
outsl
push
subl
pop
pushf
push
out
sbb
add
outsb
mov
push
mov
jo
or
jmp
jns
mov
decl
sti
lods
dec
mov
jbe
jo
lods
xchg
adc
xchg
add
add
add
add
add
add
add
das
add
lcall
add
and
add
neg
mov
bound
mov
data16
add
jmp
add
test
inc
in
mov
add
add
add
sbb
pop
or
push
add
pop
jp
cld
adc
xorl
mov
jno
repz
xchg
and
jg
jge
test
ljmp
add
addb
add
inc
sbb
std
add
dec
and
out
cld
cld
and
insb
outsb
lret
sti
mov
add
cmp
pop
scas
lahf
hlt
add
testl
ret
sbb
adc
mov
addr16
and
mov
int
add
mov
add
add
add
sbb
add
or
add
mov
data16
jnp
xor
sahf
xchg
mov
mov
mov
add
daa
add
or
add
mov
and
nop
add
jbe
jo
mov
je
push
in
push
aaa
in
cmpsl
rolb
inc
add
push
add
stc
cld
xlat
cwtl
adc
xchg
inc
add
inc
add
push
arpl
push
add
cs
ret
pop
into
mov
fistpl
loopne
addb
mov
ljmp
or
lret
pop
or
pop
add
std
push
add
mov
fucomip
push
add
push
add
fldt
loope
adc
jo
mov
idiv
mov
add
push
or
mov
adc
in
sbb
add
add
or
mov
stos
int3
mov
push
add
mov
cmp
rolb
xlat
add
aas
lahf
mov
add
icebp
mov
out
xor
add
add
movb
cli
xor
push
add
jg
add
lcall
pop
std
jae
sub
dec
mov
mov
jmp
call
negl
cmpsl
das
or
arpl
testl
jmp
jecxz
add
add
jns
aaa
pushl
ret
sarl
add
nop
add
lret
lock
incl
ja
daa
fldenv
mov
outsl
repz
add
jno
shrl
add
fldlg2
cmp
add
fadds
xchg
or
add
call
add
pop
xor
sahf
inc
add
add
add
sbb
sub
and
push
jnp
arpl
paddq
inc
add
rcrl
pop
filds
les
mov
je
testb
mov
add
add
mov
mov
push
add
cmp
mov
pop
fstl
cmpsl
and
mov
imul
pop
mov
mov
popf
dec
clc
data16
cmc
sub
pop
xor
adc
addr16
inc
add
fcomps
mov
add
scas
dec
xchg
mov
inc
fisubl
mov
add
xor
lahf
fcmovne
dec
or
xor
or
in
mov
rolb
jb
insl
pushf
lea
gs
sbb
add
fsubrs
inc
add
add
lods
inc
add
fstps
imul
add
in
mov
xchg
dec
sub
inc
xor
adc
pushf
ficomps
lods
stos
sbb
jae
lahf
test
xchg
add
add
mov
pop
les
repz
cltd
movsb
add
push
scas
insb
xchg
mov
fistl
js
pop
mov
add
sbb
add
xchg
cmc
pop
pop
mov
rolb
imul
repz
inc
add
rolb
lea
jp
or
add
mov
jecxz
add
std
lods
movsl
loop
outsb
aaa
pop
inc
add
mov
add
or
add
mov
mov
add
cmp
adc
jns
and
mov
mov
mov
cltd
xor
and
xchg
add
cltd
test
add
add
add
cli
rolb
popf
rolb
scas
and
mov
rolb
inc
std
jae
push
add
out
rolb
cmp
push
sahf
lock
lret
mov
xchg
or
xchg
sub
rolb
lcall
jge
int3
lock
push
add
testb
add
sub
or
lahf
rolb
xchg
add
add
add
add
fists
rcrl
adc
repnz
rorl
dec
xlat
hlt
add
fwait
rolb
cmp
push
aad
add
add
push
add
jb
adc
push
add
pop
lcall
loope
pop
pop
and
mov
mov
add
add
sbb
fwait
dec
xchg
jns
add
test
mov
add
xchg
jno
addr16
add
popf
dec
pushf
mov
add
insb
in
je
dec
xor
or
lcall
add
add
out
aad
push
add
jl
xchg
inc
cmp
popa
or
xchg
scas
imul
popf
ljmp
jge
add
pop
sub
aaa
int
movb
pop
cwtl
inc
push
sti
loopne
push
add
push
cmp
cwtl
jg
add
push
add
add
ret
sbb
xor
ljmp
mov
add
fwait
insl
sub
mov
lcall
ljmp
clc
mov
notl
add
jg
lret
xor
pop
aad
xchg
add
testb
cmpsl
cmp
pop
pop
mov
add
add
xor
push
add
in
cld
jo
and
mov
enter
add
add
sti
or
add
gs
add
add
and
pop
mov
mov
add
add
mov
pop
add
test
add
jne
ret
jae
add
mov
sub
push
cmpsl
dec
xchg
pop
jp
xor
mov
sub
xor
mov
in
mov
outsl
testb
pop
push
add
push
out
xor
adc
nop
add
add
subl
add
dec
cmp
add
stc
cltd
addb
cmp
in
mov
add
mov
test
call
push
cmp
add
push
sub
push
add
add
repnz
add
or
add
xchg
add
jecxz
add
mov
push
add
or
xor
mov
mov
pop
jg
inc
movsb
add
add
add
mov
aaa
hlt
add
dec
inc
int
mov
fdivr
testb
lret
mov
inc
add
call
clc
push
shll
dec
lret
mov
add
jp
add
add
add
add
je
inc
add
mov
add
add
add
lcall
xchg
sub
aas
sub
and
scas
cld
or
jmp
mov
cmp
dec
xlat
das
xchg
int3
mov
lcall
add
std
lods
aas
mov
out
dec
jle
add
add
add
nop
add
push
add
out
pusha
add
add
ljmp
push
inc
cmp
inc
add
and
mov
add
mov
jmp
and
jb
jle
xchg
add
sahf
adc
xchg
add
xchg
or
lcall
jl
mov
add
mov
jbe
insb
fadds
inc
add
call
test
add
mov
dec
pop
iret
xorl
repnz
mov
and
and
mov
add
add
dec
dec
push
pop
dec
mov
rorl
sbb
dec
sub
fidivrl
leave
mov
sbb
add
shrl
jl
add
sahf
movb
add
mov
sbb
mov
jle
adcl
add
mov
add
or
add
xchg
cmc
cmpsb
add
pushf
add
mov
call
add
lods
mov
stos
iret
push
gs
add
mov
add
add
mov
add
lock
xor
paddusb
add
jnp
cmpsb
add
pop
iret
mov
gs
mov
xchg
push
add
add
js
jmp
pusha
add
add
pop
int3
add
push
add
xor
add
add
and
lock
ret
xchg
jmp
add
add
add
cmp
ss
sub
jnp
add
add
add
mov
add
ja
mov
test
movsl
je
mov
xchg
add
sti
stos
repz
add
sti
push
add
sbb
add
push
or
stos
jmp
add
add
add
ja
push
push
roll
push
and
aam
or
insb
xchg
inc
add
cmp
or
xor
inc
add
movb
roll
push
add
mov
jo
add
mov
sbb
or
mov
add
fists
and
mov
fsubs
mov
dec
in
add
fucomp
mov
loop
xchg
mov
add
add
push
add
popf
sbb
inc
add
shll
sbb
jns
add
test
stc
sub
pop
mov
and
mov
add
jne
lret
xor
add
inc
mov
mov
mov
xchg
and
mov
add
dec
mov
arpl
cmp
imul
pop
in
stos
into
rolb
mov
add
add
mov
movsl
les
jl
jbe
push
add
xor
sbbl
dec
pop
jmp
cwtl
movl
and
add
add
into
mov
mov
inc
add
xchg
add
pop
adc
addr16
and
add
add
add
cmp
int
xchg
add
mov
add
mov
xchg
outsl
imul
or
ja
mov
add
sahf
inc
sbb
cmp
ret
push
xchg
je
jmp
mov
add
cmpsb
add
jnp
pop
adc
mov
icebp
testb
xchg
lahf
testb
idiv
arpl
aas
xchg
add
addb
out
cld
and
sub
add
es
add
fcmovne
in
movb
testb
cmp
dec
mov
pop
sbb
add
loopne
enter
imul
ficomps
bound
mov
add
cmp
or
push
add
add
sub
neg
adc
leave
jnp
add
add
mov
push
repnz
movsl
pop
rolb
loope
xchg
mov
mov
mov
pop
outsb
lahf
movb
add
add
inc
add
mov
or
mov
fldt
lea
aaa
add
pop
push
cld
jbe
int3
mov
mov
xor
or
add
push
add
jns
mov
inc
add
std
push
add
rolb
add
cltd
fsub
dec
jle
adc
stos
jle
lds
add
mov
test
pop
pop
jne
push
rcr
in
sub
add
das
mov
add
add
xchg
add
pop
inc
add
xor
pop
je
sbb
sbb
insl
push
add
mov
test
mov
out
shl
lea
mov
add
mov
movsl
cli
in
inc
popf
les
das
sbb
add
rcrl
repz
popa
pop
notl
push
adc
jmp
cmp
mov
add
bound
mov
adc
dec
mov
xor
mov
pop
dec
mov
addr16
inc
mov
lea
adc
lds
mov
in
out
movsl
pop
jge
mov
jg
rolb
adc
repz
xor
cmp
or
addb
mov
inc
push
add
mov
add
mov
mov
dec
stos
mov
pop
or
jge
add
add
mov
mov
push
xchg
push
aas
mov
sub
pop
cmp
and
mov
or
pop
mov
add
clc
data16
out
inc
adc
and
xchg
inc
jnp
pop
mov
mov
add
icebp
cmp
cmp
jl
add
sub
add
add
mov
add
bound
mov
mov
add
hlt
add
imul
sub
sbb
add
xor
movl
add
add
push
add
add
add
xchg
aas
xchg
add
add
cmp
jb
xor
fisubrl
mov
repz
fsub
dec
add
call
data16
add
sbb
rolb
loopne
xor
jno
or
mov
in
fsts
adc
add
add
add
add
movsb
add
nop
add
lds
cmp
add
roll
add
add
call
mov
jg
add
sahf
jnp
add
testb
addb
add
scas
addb
add
fsubl
xchg
add
mov
incb
inc
add
sub
dec
mov
mov
push
add
and
mov
ljmp
adc
adc
and
movl
inc
out
and
lock
xor
ficompl
mov
pop
clc
fs
add
add
jmp
or
xchg
sbb
jb,pn
outsb
cmp
add
xchg
sbb
out
mov
add
test
icebp
cmp
dec
pop
mov
mov
push
add
ror
cs
dec
incb
popf
xor
add
add
add
pop
pop
mov
add
inc
add
add
mov
xchg
add
sti
mov
and
xchg
out
and
or
pop
aas
aad
add
add
push
add
les
in
fstpl
inc
xchg
negl
stc
lret
cmpsl
or
mov
js
lcall
cltd
mov
popf
jmp
push
push
push
add
jg
mov
mov
mov
jge
add
cli
mov
xchg
int3
icebp
sbb
add
mov
fistps
jo
addb
add
add
xor
push
data16
sbb
adc
mov
in
mov
mov
add
add
data16
cmp
lock
pop
cmp
inc
sub
add
mov
mov
add
add
mov
jne
js
add
add
add
data16
cmp
cmp
and
and
shll
test
push
add
scas
movl
les
in
mov
out
add
add
add
add
mov
add
hlt
add
pop
cmc
scas
lods
hlt
add
mov
sub
add
clc
cmp
pop
cmp
add
adc
jo
stos
add
mov
int
stc
test
lock
int
xor
pop
mov
bound
mov
je
or
or
add
push
loopne
aas
add
mov
add
fwait
cmpsl
jecxz
jl
jbe
lock
lds
mov
lods
outsb
mov
add
add
dec
sub
cmpsl
popf
push
add
cmpsl
cmp
add
sti
je
mov
add
inc
loopne
and
pop
dec
rolb
pop
popf
mov
xchg
outsb
mov
xchg
add
push
add
push
pop
jg
add
cmpsl
daa
fildll
mov
xor
in
aaa
sub
je
push
add
add
mov
dec
ds
xchg
data16
xor
inc
pop
push
xchg
add
xchg
inc
add
add
rcll
add
pop
jmp
out
pop
xchg
add
mov
add
or
mov
add
nop
add
jns
pop
mov
ret
jb
sub
add
pop
repnz
add
add
add
add
andl
data16
mov
insb
dec
fistpll
pop
bound
mov
or
cwtl
dec
push
lcall
add
cmpsl
pop
sub
ja
pusha
add
or
dec
inc
jo
sahf
or
add
mov
mov
lahf
dec
and
orl
mov
inc
mov
pop
xor
inc
add
lock
scas
add
mov
cltd
or
add
add
cs
popa
mov
cmp
add
int3
adc
add
mov
cli
xor
scas
sub
add
push
xlat
xor
pop
into
xchg
add
sub
mov
mov
add
jp
xor
mov
dec
ja
add
add
pop
push
add
sar
dec
pop
mov
mov
into
lea
cmpsb
add
xchg
add
push
sbb
addr16
lret
mov
stos
imull
les
mov
arpl
ds
add
or
add
lds
das
inc
add
pop
push
popf
dec
adc
ret
out
or
add
add
jno
movsb
add
in
cmpsb
add
mov
add
mov
lods
jle
daa
inc
add
xlat
add
jle
xchg
add
adc
mov
adc
jns
repnz
lea
and
mov
cli
addr16
mov
rolb
jo
aas
cmp
and
mov
or
dec
jne
mov
sub
xor
ret
fnstenv
movb
inc
add
leave
sub
jne
mov
mov
add
sub
and
mov
add
pop
xchg
lcall
pop
inc
add
adc
add
pop
sub
pop
inc
jnp
pop
pop
xchg
add
jnp
add
daa
and
mov
pop
aam
dec
add
mov
and
inc
add
ud0
push
add
mov
xchg
sbb
push
add
mov
xrelease
sub
add
imul
cmp
dec
and
jnp
add
inc
cld
mov
imull
cli
pop
dec
xlat
data16
add
repnz
pop
cmpsl
cmp
clc
aam
mov
pop
xchg
xchg
add
ss
add
add
add
ffree
stc
aas
loopne
cmc
rolb
shll
push
loop
push
add
xor
mov
sbb
pop
jo
fsubs
dec
mov
add
mov
add
hlt
add
js,pt
add
clc
xor
cltd
mov
cmpsb
add
and
mov
mov
push
sbb
push
add
fnstcw
add
jecxz
int3
fistps
cmpsb
add
jge
add
pop
cmp
add
add
add
mov
test
jge
add
add
adc
add
stc
insl
jmp
cmp
add
mov
outsl
movsb
add
mov
xchg
sub
push
add
xchg
test
out
xor
add
jge
xlat
lods
or
pop
cli
mov
add
mov
js
add
mov
add
xor
movsb
add
or
add
into
mov
dec
aaa
cmp
lea
imul
mov
imul
add
add
lock
jbe
stos
dec
rolb
add
mov
pop
mov
dec
out
addb
xor
pop
jg
sub
sbb
iret
loopne
frstor
popa
shl
dec
jl
test
pop
cmp
mov
add
test
call
add
add
test
les
test
test
push
add
add
lea
lret
cmp
gs
call
shl
add
add
jo
rolb
fwait
ljmp
add
fwait
add
ret
out
and
jl
addb
add
and
add
dec
jmp
loopne
cs
add
add
push
out
adc
add
rolb
xlat
mov
xor
pop
sub
aad
jns,pn
add
add
mov
pop
ret
add
mov
xor
and
jb
cmc
inc
fldenv
jl
sbb
out
pop
jo
mov
jno
add
mov
add
add
sbb
mov
push
push
add
add
ret
fcmovbe
lea
popf
loope
jg
sub
add
inc
add
mov
xchg
sbb
cmpl
add
cmp
test
add
out
fdivl
xlat
mov
out
data16
lret
xor
xor
mov
aaa
xchg
mov
add
add
imul
add
adc
mov
mov
add
cmp
dec
add
mov
xor
cwtl
or
add
cmp
push
add
addb
add
mov
sub
cwtl
adc
cltd
testb
jge
pushf
mov
pop
sub
daa
pop
jp
test
xchg
add
dec
and
sbb
mov
sub
add
mov
hlt
add
adc
inc
add
add
inc
xchg
add
jg
add
fisubs
mov
fwait
xchg
add
add
add
mov
jl
add
insl
pop
in
xor
imul
xor
add
inc
add
push
in
sti
scas
inc
add
add
add
mov
in
js
into
xor
sbb
jecxz
push
add
mov
adc
and
sbb
mov
repnz
add
add
add
push
lods
cli
nop
add
lahf
sub
sbb
xchg
add
sub
push
int3
xor
stos
mov
lods
adc
mov
add
pusha
add
cmpsb
add
sub
add
add
jnp
add
mov
dec
rolb
pop
or
sub
add
and
and
add
loope
mov
out
dec
inc
inc
pop
cwtl
addb
add
dec
enter
add
add
add
mov
jecxz
sub
cltd
add
add
add
test
mov
imul
stos
out
repnz
jne
jmp
xor
add
add
popf
adc
xor
push
testb
add
push
add
pop
lcall
dec
and
ljmp
add
mov
sub
add
xor
jbe
mov
mov
xor
shll
jbe
mov
pop
js
das
in
add
xchg
lcall
repnz
fstl
iret
jnp
cmp
in
shr
frstpm(287
stos
imul
add
add
xlat
bound
mov
mov
fmuls
adc
dec
push
add
addb
push
mov
add
inc
add
jo
push
add
add
fwait
clc
test
xor
add
mov
add
shr
cmp
add
mov
lods
insl
cmp
pusha
add
add
aas
clc
xchg
dec
cmp
add
in
mov
and
mov
in
jne
jb
push
mov
add
add
cmpsl
dec
or
dec
mov
les
ss
adc
add
pop
je
cli
inc
add
imul
pop
mov
lds
mov
stos
jns
add
je
push
scas
lea
stc
dec
mov
mov
sbb
add
dec
and
mov
arpl
dec
cltd
enter
push
xchg
add
lds
inc
mov
out
mov
mov
add
add
stos
xorl
xchg
add
add
daa
cmpsl
xor
sbb
lods
adc
add
add
add
repnz
push
add
push
add
insl
sbb
add
out
dec
xchg
add
mov
pop
es
add
inc
add
push
sub
pop
rolb
add
repz
incl
add
sub
inc
mov
data16
mov
add
add
pop
xchg
add
add
add
mov
movsb
add
add
ret
icebp
int3
and
mov
loopne
ss
enter
jmp
mov
ret
sbb
stc
js
repz
leave
out
or
jo
and
mov
add
mov
pop
movsl
or
add
lds
movsb
add
cld
outsl
jp
test
add
add
mov
push
or
and
fadd
cs
add
add
or
add
jmp
push
sbb
or
mov
inc
add
add
add
addb
dec
xchg
scas
jns
cmpsl
and
outsb
jp
repz
je
outsl
and
and
add
mov
cmp
and
mov
rolb
jg
lcall
mov
pop
enter
add
mov
add
add
add
jnp
in
mov
add
mov
cmc
dec
mov
insb
ret
dec
mov
adc
mov
adc
scas
lahf
add
xlat
xchg
mov
add
pop
add
mov
push
add
test
mull
test
adc
lcall
jb
pusha
add
mov
fldz
inc
add
xchg
sar
or
mov
mov
mov
rcl
add
sbb
push
out
lods
jns
mov
cmp
sub
xchg
add
push
mov
add
xor
clc
mov
xchg
add
xchg
add
xchg
dec
dec
rolb
cmpsb
add
xor
sub
mov
enter
sub
lahf
adc
nop
add
add
mov
jbe
lret
mov
cltd
jns
or
add
mov
insb
add
adc
xor
inc
add
rolb
scas
sub
dec
push
sar
mov
jne
out
push
int
xor
mov
cmp
or
lcall
rolb
mov
data16
sub
add
add
ljmp
add
mov
scas
popl
add
inc
add
add
add
jo
and
mov
add
outsl
pop
hlt
add
adc
pop
aas
pop
fxam
loope
cmc
data16
add
fimull
test
int3
jnp
jb
outsb
addr16
add
iret
or
add
lods
ret
xor
mov
lret
popa
dec
stos
cmc
js
popf
in
add
inc
jge
adc
add
add
add
and
mov
add
and
jmp
pop
rcll
cltd
inc
aaa
add
pop
jge,pt
lret
xchg
into
mov
add
movsb
add
hlt
add
jbe
jecxz
lahf
flds
mov
jns
jp,pn
cs
pop
dec
push
sti
fimuls
out
mov
xchg
xlat
xchg
add
popf
mov
iret
pop
add
jecxz
bound
mov
and
mov
cmp
sbb
mov
hlt
add
or
add
xchg
inc
xor
movb
loop
jnp
add
xchg
jns
add
xchg
cmc
testl
dec
jecxz
add
push
add
mov
fistpll
add
dec
rolb
add
mov
add
add
lcall
push
lret
inc
add
mov
iret
stos
push
xchg
add
enter
and
mov
clc
ficomps
add
add
mov
add
add
add
adc
jecxz
dec
fbstp
jnp
rcll
xor
sbb
add
add
push
add
addb
pop
jb
adc
or
fisttpl
inc
add
aam
xor
cmp
insb
xor
in
leave
fstpl
scas
rolb
sbb
out
ror
lods
lds
sbb
dec
xor
add
add
jecxz
insb
adc
test
scas
inc
add
inc
add
scas
add
push
add
jo
xchg
xchg
insb
xor
pushf
aas
jne
xor
scas
jns
icebp
xchg
add
add
jb
out
mov
add
lcall
ret
xor
iret
add
addb
ficompl
test
ret
jae
add
add
sbb
cli
clc
push
xor
test
rolb
and
loop
repz
xor
mov
and
xchg
push
add
jbe
test
add
adc
adc
std
push
add
add
add
bound
mov
and
mov
add
add
push
clc
mov
sub
pop
jg
add
mov
add
xor
add
pop
mov
ljmp
mov
add
dec
mov
ficomps
fnstcw
sbb
add
addr16
add
add
push
inc
inc
add
add
and
add
add
add
jg
mov
jno
lock
sbb
mov
imul
add
aas
and
pop
push
nop
add
bound
mov
add
and
push
jb
push
cmp
add
mov
cmp
add
sbb
xor
sysenter
add
das
adcl
inc
fldl
adc
mov
fildll
push
add
cmp
cltd
subl
sbb
or
mov
mov
addb
add
sub
or
and
mov
add
pop
cmp
js
push
add
dec
sub
jnp
pop
push
inc
int
add
add
adc
mov
add
movsb
add
xor
lret
dec
fistpll
adc
xchg
add
add
mov
mov
push
cmp
mov
jmp
jnp
pop
pushf
cld
popa
loopne
fimuls
add
mov
xchg
add
inc
add
scas
mov
mov
add
add
dec
je
dec
xchg
js
dec
inc
add
add
add
rolb
add
stos
add
xchg
add
mov
or
add
push
pop
sbb
mov
add
sbb
adc
add
add
add
or
aaa
dec
sbb
add
add
inc
add
xor
sbb
and
mov
stc
mov
inc
xor
loop
or
add
cmp
push
add
pusha
add
lret
testb
mov
lods
jbe
mov
add
inc
add
add
add
data16
les
add
stos
cmp
add
lea
inc
outsb
sub
or
mov
add
je
aas
and
add
in
jge
and
sbb
lods
push
add
jbe
cmpsl
mov
jg
sub
mov
lahf
dec
testb
xchg
xor
add
fsubl
arpl
in
mov
aad
add
jg
or
hlt
add
test
add
add
mov
add
add
sbb
lahf
mov
scas
pop
push
add
test
neg
xor
mov
cli
loopne
push
leave
js
out
lea
outsb
or
add
test
add
add
js
add
push
add
add
add
add
add
ret
xchg
call
add
ret
sbb
xchg
push
sub
and
pop
mov
and
mov
lea
add
sub
jno
sbb
cmp
lock
sbb
mov
pushf
mov
dec
push
scas
add
mov
icebp
sub
add
bound
mov
add
add
cmpsl
loopne
movsl
faddp
dec
leave
out
in
sbb
mov
add
out
xor
addb
cmp
add
loopne
fisttps
sub
sti
mov
add
add
add
adc
sub
mov
add
add
add
xor
push
add
inc
add
movsl
push
add
mov
inc
add
sub
movb
fnstsw
add
add
mov
sub
cmp
sub
test
mov
add
fistpl
sbb
sub
add
into
mov
movb
insl
cmp
add
fcmovb
add
std
push
jle
aam
adc
xlat
lods
adcl
pop
ljmp
jge
rolb
cs
loopne
test
icebp
imul
adc
imul
add
and
mov
fwait
insb
sub
add
add
xchg
add
in
or
dec
out
mov
adc
mov
les
push
clc
xchg
mov
dec
jl
add
add
js
jp
icebp
inc
sub
mov
mov
adc
xchg
add
xchg
int
add
sbb
fbld
loopne
and
sbb
imul
jge
int
lock
xor
das
loope
pop
out
cmc
dec
addr16
pop
les
xor
hlt
add
push
add
ljmp
sub
add
xchg
add
add
mov
adc
lret
das
sbb
push
add
add
js
sbb
inc
dec
in
loop
loop
insl
aaa
and
jne
add
add
dec
xchg
aam
std
pushf
xchg
dec
test
popa
ja
fisubrl
aaa
sub
sub
or
add
xor
mov
add
add
add
add
arpl
add
add
mov
add
sbb
adc
mov
mov
clc
adc
mov
fmull
dec
testb
and
mov
xchg
add
and
xor
cmp
cmp
add
mov
add
push
add
add
mov
daa
mov
xchg
movsb
add
add
add
decb
jb
testb
add
push
adc
push
lock
add
and
mov
add
xchg
dec
dec
push
add
or
add
fsub
add
add
outsb
loope
xor
movsb
add
add
dec
jne
and
mov
mov
dec
or
aas
fldenv
in
xchg
add
add
mov
add
test
mov
add
mov
jecxz
adc
adc
push
add
es
loopne
inc
add
and
ljmp
push
ljmp
push
sti
imul
icebp
test
jno
add
add
in
aaa
iret
icebp
xchg
pop
stos
and
mov
faddl
add
xor
pop
mov
add
add
sbb
add
insb
jp
lcall
push
lock
sub
add
into
sbb
dec
les
ljmp
add
lret
loop
bound
mov
std
insb
inc
cs
add
mov
sub
add
std
push
add
mov
fstpt
add
add
cmp
push
jns
je
ds
adc
push
mov
pusha
add
mov
xchg
add
pop
jnp
add
add
add
mov
add
add
add
data16
dec
sbb
push
mov
jnp
add
arpl
cltd
enter
in
push
pushf
adc
rcrl
hlt
add
add
sti
and
mov
or
add
ret
add
int
ljmp
jecxz
mov
push
mov
cmp
jb
ss
adc
das
add
add
add
test
add
add
add
add
mov
pop
lds
repnz
push
add
add
mov
add
push
add
out
and
add
dec
and
mov
and
fisttpll
ficoml
sbb
sub
sub
xlat
inc
addb
add
add
inc
sub
pop
adc
sbb
in
aam
testb
jne
add
mov
popa
mull
sti
mov
pop
in
cmp
shl
add
add
aad
add
inc
add
push
add
sub
add
cmpsb
add
mov
push
jae
cld
aam
in
or
add
push
loope
add
dec
cmp
xor
push
jae
add
movb
cmp
add
add
out
ja
rolb
icebp
inc
jl
add
stos
jmp
inc
jecxz
cld
sub
jae
add
jno
add
push
add
add
add
add
cmp
or
jg
add
add
sbb
inc
rolb
jno
jno
xor
cmc
iret
sbb
adc
fsubrs
jge
add
cmp
stos
loopne
pop
clc
mov
dec
push
add
stc
and
movsb
add
inc
add
in
dec
adc
adc
add
add
stos
mov
in
add
jo
mov
add
lods
sub
add
imul
push
add
mov
push
add
stc
inc
imul
xchg
add
sbb
cwtl
jbe
jo
repz
cmp
imul
lret
jp
add
add
mov
push
int
pop
mov
les
xor
ret
fcoms
lret
mov
add
xor
add
scas
adc
jns
or
ffreep
add
add
mov
sbb
fmuls
xchg
add
add
int
add
lret
jmp
pop
int
ficomps
dec
xor
cltd
or
add
cs
add
add
ds
add
mov
add
mov
aad
ljmp
dec
jne
xchg
dec
imul
add
jmp
leave
sbb
pushf
lcall
gs
notl
mov
dec
in
movlps
and
pop
inc
add
mov
or
mov
popf
lock
or
xchg
inc
pop
insb
sub
daa
mov
and
add
call
test
add
mov
add
inc
add
scas
dec
jb
lds
roll
xor
add
jmp
add
movsb
add
add
daa
or
je
mov
add
stos
xchg
dec
xchg
lcall
in
cmp
add
add
fisttps
push
add
mov
pop
jno
push
test
popf
insl
popa
or
add
mov
jg
enter
add
add
lds
arpl
add
push
add
pop
rorl
push
xchg
add
add
movsb
add
push
ficoml
pop
jmp
js
add
add
cltd
sub
add
movb
cld
push
add
loopne
fnstcw
add
cmp
sub
pcmpgtw
in
add
jle
adc
add
sub
add
mov
pop
nop
add
push
add
add
mov
add
mov
ret
mov
fwait
repz
add
cmp
shll
rolb
push
pop
lcall
or
insb
push
sub
dec
out
dec
jnp
pop
arpl
cmp
push
add
add
push
add
addb
cmp
add
sub
rolb
xchg
mov
add
mov
js
je
pop
fisubs
sbb
cmp
sub
add
cmpsb
add
add
add
subl
add
add
xchg
imul
add
in
mov
outsl
lods
pop
or
scas
mov
push
jno
xlat
and
pop
sbb
test
mov
add
subl
sbb
fmull
popa
test
rolb
insb
xchg
outsl
mov
mov
enter
addr16
adc
fwait
and
add
dec
lcall
adc
xlat
cmpsl
xor
mov
movntps
add
jmp
incb
inc
add
mov
test
lods
jmp
add
mov
push
adc
add
and
fstps
push
add
insb
mov
jecxz
add
cmp
rol
sbb
pop
roll
add
lea
out
pop
les
hlt
add
add
add
in
push
add
mov
add
je
push
and
mov
enter
push
add
pop
fwait
sbb
into
data16
pop
lods
dec
or
or
sahf
fadd
add
add
lea
mov
xchg
imul
mov
rolb
movsl
push
popl
xchg
jmp
imul
inc
and
xor
fists
mov
pop
cmp
pushf
rolb
lret
mov
enter
cld
cld
cwtl
push
add
mov
push
add
mov
xlat
add
sbb
sub
shrl
inc
sbb
les
in
aaa
mov
imul
add
add
test
ss
mov
sbb
ja
mov
push
add
enter
add
jg
dec
les
xchg
add
ret
mov
popa
out
sub
lods
inc
add
dec
dec
movsb
add
sub
fnstenv
xchg
sbb
rolb
dec
in
sub
dec
mov
lods
sahf
movsl
adc
daa
jne
aaa
test
loop
xchg
add
gs
aaa
fstpt
loop
add
mov
add
cmp
cld
scas
dec
hlt
add
or
cli
or
add
sub
faddl
call
ss
add
add
mov
leave
pop
xchg
mov
xor
mov
adc
cmpsl
out
mov
jl
imul
movb
repnz
outsl
sbb
add
add
or
pop
dec
divl
int
stos
pusha
add
jp
icebp
in
aam
push
mov
inc
add
mov
or
lea
enter
add
add
mov
cltd
les
and
mov
mov
pop
cli
pop
fmuls
aas
cmp
xor
popf
jmp
add
test
xor
add
add
add
mov
cmp
mov
add
add
add
stos
push
add
addb
mov
jge
dec
in
loopne
mov
cwtl
push
push
add
add
add
dec
or
pop
fimuls
add
mov
ja
jnp
or
pop
jge
cltd
adc
dec
add
mov
lret
cmpsl
ret
lahf
adc
stc
lcall
xchg
add
mov
addb
add
mov
test
aaa
dec
mov
add
add
add
cmp
ficoml
mov
add
add
fmull
lahf
mov
jmp
cmp
pop
rcrl
jl
jnp
add
sub
xchg
push
jne
test
dec
int3
mov
inc
add
add
dec
xchg
add
mov
mov
push
dec
sub
js
insb
fidivrl
mov
hlt
add
add
add
xchg
add
mov
add
lahf
and
mov
cmp
add
in
add
daa
and
in
sbb
add
call
popf
sub
rolb
outsl
pusha
add
add
add
jo
sbb
adc
mov
and
mov
jmp
add
in
or
add
or
add
pop
call
push
hlt
add
add
add
mov
std
pop
pop
pop
adcl
in
cltd
jle
add
movsb
add
jmp
add
mov
pop
inc
add
add
je
jbe
inc
add
daa
xor
add
jg
sti
lret
popf
fcmove
insb
mov
xlat
test
jnp
pusha
add
pop
add
inc
add
xlat
pop
push
cmp
mov
mov
mov
insb
pop
popa
mov
fiaddl
add
push
xchg
xchg
add
sbb
shl
add
add
addb
fdiv
mov
mov
dec
inc
add
cmc
mov
cmp
xor
sti
fsubr
xchg
add
add
aad
add
add
add
add
test
outsb
addb
testb
sar
push
sub
repnz
add
add
add
popa
arpl
mov
popf
pop
cmp
insb
mov
cmp
add
mov
jns
dec
sbb
push
add
fsubrl
lds
cld
pusha
add
add
fsubrs
sub
jl
add
add
add
ds
add
orl
into
pop
sub
movsl
lret
mov
imul
outsl
mov
shll
mov
call
test
hlt
add
dec
loope
add
add
add
add
and
rolb
dec
jecxz
ret
push
inc
jecxz
push
jmp
mov
lods
out
xchg
or
mov
repz
xor
addl
add
push
dec
hlt
add
ljmp
cmp
or
nop
add
aad
pushf
test
add
jmp
adc
lret
in
lret
add
fidivl
sub
xchg
mov
mov
xlat
imul
mov
dec
jne,pn
aad
and
mov
cmpsl
add
add
mov
xchg
add
xchg
add
daa
mov
or
xor
cmp
cmc
push
add
mov
addb
add
jbe
test
rolb
es
lret
lock
pop
aam
jmp
jp
jo
pop
push
xor
arpl
jbe
je
xor
jmp
jo
inc
add
mov
xchg
pop
sbb
cmp
sub
add
lods
in
xlat
das
xchg
lret
adc
pop
shr
add
hlt
add
ret
loope
into
movsl
cwtl
enter
lahf
mov
enter
test
mov
add
cmc
mov
call
sub
lods
mov
add
jb
adc
hlt
add
xchg
add
jg
xor
std
cwtl
dec
loopne
sbb
sub
push
jns
in
mov
push
cmp
add
add
shr
mov
fnsave
add
add
jmp
pop
rol
xchg
add
mov
add
add
mov
or
jne
add
stos
lock
pop
sbb
ret
clc
mov
sbb
daa
jns
cmp
out
lea
sti
ficoms
sub
dec
clc
shr
and
mov
xchg
and
mov
enter
stos
cmpsl
xchg
jp
sti
sbb
jbe
and
popf
xor
add
imul
mov
add
sbb
add
mov
lahf
aad
and
rolb
cld
lock
jo
repnz
mov
aas
ja
add
pop
test
mov
add
sbb
add
pop
data16
mov
pop
mov
and
jg
add
icebp
mov
inc
pop
fildl
add
jge
add
push
add
testb
xchg
add
add
adc
rolb
add
fmulp
cs
lret
ret
or
clc
or
ja
sub
cmp
es
add
lret
addr16
inc
add
push
add
jg
mov
daa
xchg
es
mov
mov
xchg
jb
mov
imul
cmpsl
mov
popf
daa
neg
xchg
rolb
cmpsl
fwait
mov
dec
dec
mov
mov
add
mov
add
jmp
add
insb
push
arpl
push
aaa
iret
fisubl
cmp
push
lret
push
fwait
inc
add
rolb
pushf
mov
push
dec
jae
out
lods
mov
sub
mov
addb
testb
add
lcall
sub
addr16
mov
scas
fildll
test
stos
sbb
jnp
xchg
icebp
std
hlt
add
pop
stos
mov
jmp
add
inc
add
mov
aas
mov
lcall
sbb
test
repz
lahf
xchg
mov
pop
sbbl
xchg
add
or
add
add
sub
add
and
repz
cmpsl
clc
out
push
add
mov
enter
add
adc
push
gs
sbb
bound
mov
add
outsl
sub
jl
mov
xor
mov
pusha
add
mov
add
add
ds
add
pop
stc
daa
imul
add
call
mov
adc
repz
repz
jl
push
xchg
add
jne
cmp
cmp
lock
mov
mov
add
mov
mov
xor
add
add
add
mov
jno
or
add
adc
daa
hlt
add
add
idivl
aam
shll
push
add
sub
xchg
add
pop
and
mov
loopne
hlt
add
jmp
and
mov
mov
jns
or
mov
addb
js
add
add
scas
int
add
add
add
add
dec
fcoml
ljmp
inc
add
repnz
dec
adc
jge
jnp
jno
bound
mov
lret
add
jp
fwait
andl
addb
cld
sub
ret
std
add
dec
or
jnp
add
movsl
sbb
int3
ret
ret
imul
jb
cmp
add
aaa
cmp
sub
sbb
jb
inc
add
jg
jmp
add
rolb
rorl
xchg
add
add
mov
ljmp
sub
xchg
add
mov
push
xchg
cmp
push
add
out
add
cmc
xchg
add
movsb
add
add
or
mov
add
or
loop
popa
xor
rolb
rorl
xor
jmp
add
outsl
out
add
lock
and
add
leave
add
pop
push
add
shll
clc
add
mov
add
add
mov
inc
adc
lret
hlt
add
and
fisubs
pushf
mov
jo
out
dec
mov
dec
pop
cmc
clc
jbe
scas
and
dec
and
mov
add
push
sub
movsl
pop
cmc
inc
aam
rolb
lahf
add
popf
pop
mov
add
adc
bound
mov
mov
neg
loopne
dec
xchg
add
das
mov
sbb
inc
add
loop
testb
add
cmpsl
scas
aam
dec
cmpsl
jg
cli
cmpsl
jge
jp
or
add
lcall
pusha
add
mov
push
out
add
rolb
insb
ret
xor
xchg
jno
inc
je
push
add
add
push
mov
mov
or
test
insl
jge
mov
jg
not
add
add
dec
fwait
xor
lods
pop
xchg
pop
and
xchg
mov
add
and
cli
push
add
in
xchg
add
add
add
addb
add
in
add
adc
add
adc
data16
add
sub
mov
push
add
xor
scas
sub
pop
pop
adc
push
sub
sbb
imul
add
mov
je
lods
mov
add
shll
inc
add
or
jg
mov
add
outsl
and
mov
dec
pop
cmp
fld1
in
idiv
popf
sbb
pop
addr16
add
add
mov
scas
pop
mov
testb
pop
in
pop
mov
add
pop
fisttps
arpl
add
add
movb
add
push
jae
add
icebp
mov
int
add
pusha
add
add
push
add
cli
push
and
add
pusha
add
lahf
mov
add
add
add
inc
add
add
lds
add
xchg
sub
out
add
jmp
add
add
xchg
rcrl
add
pop
push
add
adc
aas
mov
inc
xor
mov
pop
xchg
out
test
mov
scas
aas
push
add
cmp
arpl
hlt
add
or
add
or
lea
pop
dec
push
add
lret
mov
xor
add
faddl
cmpl
out
test
add
ret
ljmp
add
pop
sbb
jle
js
pusha
add
and
shr
or
or
sub
add
add
add
dec
sbb
sbb
xchg
add
in
cmc
or
pop
inc
aaa
jb
pop
add
xchg
add
rcrl
cmp
insl
mov
nop
add
add
sti
mov
lret
inc
add
mov
add
scas
pop
cmp
xorl
add
push
add
es
add
xor
fcompl
xor
daa
addr16
popf
aam
sub
add
cmp
lcall
jno
dec
adcl
add
jo
mov
dec
fistpl
add
pop
mov
clc
repnz
jae
add
inc
lret
xor
push
mov
xchg
ret
add
jmp
push
push
mov
xchg
ret
add
add
pop
add
inc
clc
repnz
jae
add
mov
add
adc
xor
adc
ret
add
ja
inc
add
imul
imul
add
repnz
jae
in
pop
sub
add
repnz
jae
add
lods
scas
xchg
add
shl
clc
repnz
jae
push
jo
push
clc
repnz
jae
roll
lcall
dec
push
fwait
cld
nop
jmp
lret
sarl
inc
push
add
fwait
cld
nop
jmp
roll
mov
imul
add
cmp
repnz
jae
pop
add
cmpsb
mov
popl
or
nop
jmp
push
add
cmp
add
add
push
push
mov
xchg
ret
mov
scas
mov
in
add
jne
add
add
leave
pop
clc
repnz
jae
add
jmp
fldl
add
add
jae
sti
add
add
mov
xchg
ret
add
add
mov
clc
repnz
jae
cmp
mov
clc
repnz
jae
add
inc
mov
jb
clc
repnz
jae
inc
push
push
arpl
test
add
or
add
add
and
mov
scas
and
push
mov
xchg
ret
add
add
clc
repnz
jae
add
add
jp
add
mov
fwait
cld
nop
jmp
add
add
add
mov
xor
xchg
sbb
jae
cmpsb
add
jmp
add
rep
clc
repnz
jae
cmp
add
pop
add
and
dec
mov
clc
repnz
jae
add
jmp
mov
inc
push
mov
xchg
ret
testb
add
add
out
cmpl
fwait
cld
nop
jmp
add
add
sti
mov
je
inc
movb
sub
clc
repnz
jae
add
add
add
arpl
cld
nop
jmp
jmp
popf
mov
clc
repnz
jae
test
mov
push
mov
xchg
ret
xor
add
dec
dec
mov
clc
repnz
jae
sti
add
mov
clc
repnz
jae
add
adc
leave
xchg
fwait
cld
nop
jmp
add
popa
jmp
add
clc
repnz
jae
jmp
rorl
add
xor
repnz
jae
lret
sbb
add
jne
push
mov
xchg
ret
imul
add
push
push
mov
xchg
ret
add
in
dec
mov
fwait
cld
nop
jmp
data16
add
and
mov
clc
repnz
jae
lods
xor
imul
inc
xor
clc
repnz
jae
in
add
cmp
repnz
jae
imul
inc
add
cmp
cld
nop
jmp
add
and
pop
add
add
clc
repnz
jae
add
add
add
cld
nop
jmp
clc
add
jne
jp
push
clc
repnz
jae
add
fnsave
decl
clc
repnz
jae
inc
lcall
repz
repnz
jae
popa
jmp
add
add
inc
clc
repnz
jae
add
add
push
repnz
jae
cmp
mov
fldl
sti
adc
mov
nop
jae
pop
add
add
mov
adc
cld
nop
jmp
xor
jo
fucomp
mov
clc
repnz
jae
add
sbb
add
pop
cmp
fwait
cld
nop
jmp
add
add
es
lods
push
mov
xchg
ret
add
pop
add
add
jl
test
repnz
jae
jae
add
mov
push
mov
xchg
ret
add
pop
add
jae
add
clc
repnz
jae
mov
divb
aas
mov
push
mov
xchg
ret
add
pop
popa
jo
and
push
mov
xchg
ret
add
mov
test
add
clc
repnz
jae
add
pop
cli
push
clc
repnz
jae
push
add
push
mov
xchg
ret
add
jle
dec
cmp
adc
add
repnz
jae
in
lods
imul
xchg
ret
push
movb
add
sbb
roll
xchg
ret
jne
xor
add
add
scas
popl
fwait
cld
nop
jmp
jo
idiv
dec
mov
dec
cmp
repnz
jae
scas
or
lcall
inc
cmpsl
scas
cmp
push
mov
xchg
ret
mov
lret
add
nop
jmp
add
clc
add
or
jbe
clc
repnz
jae
add
jmp
add
push
mov
xchg
ret
lods
add
add
cmp
in
lret
add
clc
imul
sbb
out
jb
jnp
xor
add
clc
repnz
jae
pop
scas
pop
in
or
test
cld
nop
jmp
add
add
inc
add
nop
jae
adc
add
add
fadds
nop
jae
popa
notb
push
add
mov
inc
pusha
add
and
nop
jae
loop
and
mov
clc
repnz
jae
ror
add
add
repnz
jae
add
cmp
add
sbb
add
add
mov
fwait
cld
nop
jmp
add
fmuls
test
add
clc
repnz
jae
jb
rcr
les
repnz
jae
jp
jp
add
mov
xchg
ret
mov
scas
push
add
pusha
add
fwait
cld
nop
jmp
push
inc
add
nop
jae
add
add
add
imul
clc
repnz
jae
add
cmpsb
add
cli
incl
data16
shll
popl
xor
or
cld
nop
jmp
mov
scas
pop
mov
clc
repnz
jae
push
sbb
add
pop
fwait
cld
nop
jmp
add
add
mov
jle
push
mov
xchg
ret
pop
add
jmp
add
add
pop
add
lret
pop
popa
mov
popa
add
repnz
jae
mov
add
add
add
clc
repnz
jae
add
or
pop
inc
add
inc
add
add
add
add
xchg
outsl
push
push
mov
xchg
ret
add
push
add
inc
adc
repnz
jae
popa
add
add
lret
xchg
add
add
mov
clc
repnz
jae
add
cmpsb
add
xchg
add
nop
jae
pop
add
lods
mov
push
add
fwait
cld
nop
jmp
add
add
add
popa
xchg
add
repnz
jae
add
add
pop
add
cmp
sbb
add
clc
repnz
jae
add
aaa
cmp
movb
mov
xchg
ret
je
add
add
repnz
jae
jo
mov
add
fwait
cld
nop
jmp
or
or
pop
lretw
stc
push
clc
repnz
jae
jne
scas
roll
testb
xor
fwait
cld
nop
jmp
sbb
add
xor
lea
push
mov
xchg
ret
pop
jle
and
inc
add
mov
gs
repnz
jae
push
add
jp
or
add
clc
repnz
jae
lcall
clc
repnz
jae
sbb
popl
and
add
add
clc
repnz
jae
add
add
jb
or
clc
repnz
jae
add
or
add
add
add
repnz
jae
add
jle
jne
mov
jmp
jmp
and
cmpsb
jne
add
mov
clc
repnz
jae
mov
and
mov
add
push
clc
repnz
jae
add
push
sbb
add
and
push
mov
xchg
ret
in
pop
add
add
push
clc
repnz
jae
loop,pn
add
scas
cs
inc
sldt
clc
repnz
jae
pop
add
lret
add
xchg
clc
repnz
jae
xor
add
mov
je
clc
repnz
jae
push
call
clc
repnz
jae
add
lea
fwait
cld
nop
jmp
mov
xor
adc
add
add
repnz
add
push
mov
xchg
ret
add
inc
scas
and
dec
je
clc
repnz
jae
imul
clc
repnz
jae
and
test
div
clc
repnz
jae
sbb
clc
and
clc
repnz
jae
mov
xor
dec
sbb
cmpsl
add
add
icebp
movsb
add
pop
std
not
clc
repnz
jae
inc
jmp
scas
jo
add
call
clc
repnz
jae
add
clc
repnz
jae
scas
or
add
push
add
dec
add
clc
repnz
jae
pop
add
pop
lcall
add
add
add
clc
repnz
jae
push
and
shl
xor
mov
jmp
add
add
mov
fwait
push
fwait
cld
nop
jmp
jne
add
add
mov
imul
and
add
add
add
ja
push
fwait
cld
nop
jmp
add
shr
pop
dec
fwait
cld
nop
jmp
add
adc
insl
push
push
mov
xchg
ret
add
and
pop
mov
push
mov
xchg
ret
add
add
add
stc
clc
repnz
jae
add
add
popl
cli
mov
clc
repnz
jae
jmp
add
xor
pop
add
fwait
cld
nop
jmp
pop
jp
add
pop
add
add
adc
nop
jae
or
add
int3
add
fwait
cld
nop
jmp
je
add
popa
add
add
and
lock
test
sbb
add
repnz
jae
add
loop
pushl
clc
repnz
jae
add
add
add
push
add
lods
rep
clc
repnz
jae
mov
push
add
je
xor
adc
clc
repnz
jae
mov
loop
sbb
mov
inc
add
lcall
movsb
clc
repnz
jae
add
add
add
mov
add
clc
repnz
jae
roll
add
jle
mov
add
cld
nop
jmp
add
add
inc
data16
jae
and
clc
repnz
jae
or
mov
add
add
add
push
mov
xchg
ret
mov
loop
add
push
mov
xchg
ret
add
add
add
xor
or
add
repnz
jae
add
inc
xor
cmp
repnz
jae
and
mov
pop
sbb
mov
adc
repnz
jae
loop
jo
inc
test
and
mov
mov
jmp
rcrl
and
add
scas
add
or
mov
xor
fimull
scas
lret
xchg
ret
add
add
inc
sbb
fwait
cld
nop
jmp
and
or
add
loope
add
jp
add
pop
cmp
test
inc
add
add
add
test
xor
clc
repnz
jae
divb
in
and
lea
push
mov
xchg
ret
add
fnsave
adc
add
into
inc
add
scas
jo
or
mov
add
idiv
incl
add
add
mov
mov
clc
repnz
jae
dec
xor
loop
incb
scas
out
add
add
and
add
add
add
add
mov
clc
repnz
jae
add
xor
add
jae
jne
clc
repnz
jae
scas
lret
mov
add
addl
add
mov
add
push
add
sbb
inc
add
add
jb
lret
cmp
lret
nop
jmp
add
adc
movb
pushl
clc
repnz
jae
add
lcall
add
adc
add
add
add
jb
pop
add
clc
repnz
jae
add
mov
xchg
repnz
jae
add
pushf
xor
push
mov
xchg
ret
add
add
mov
cld
nop
jmp
dec
or
add
and
push
clc
repnz
jae
cmp
add
fstp
jae
mov
pop
fwait
cld
nop
jmp
in
xor
add
or
dec
mov
fwait
cld
nop
jmp
add
add
add
nop
jae
cmpsb
lret
data16
add
adc
pop
push
mov
xchg
ret
add
lcall
or
inc
add
loop
add
add
mov
adc
repnz
jae
mov
mov
test
cld
nop
jmp
add
jne
pop
clc
repnz
jae
add
jp
pop
add
add
mov
scas
push
clc
repnz
jae
mov
scas
pop
sbb
add
add
push
push
mov
xchg
ret
add
add
lret
lcall
or
add
and
mov
jne
es
clc
repnz
jae
add
mov
xchg
ret
add
add
add
xlat
dec
mov
clc
repnz
jae
add
add
or
inc
add
sar
scas
scas
roll
add
clc
repnz
jae
popl
add
add
test
repnz
repnz
jae
mov
add
add
mov
add
popa
clc
repnz
jae
add
inc
add
jmp
stos
mov
fwait
cld
nop
jmp
mov
add
mov
push
sbb
add
repnz
jae
add
inc
add
push
fwait
imul
clc
repnz
jae
in
add
jb
outsl
call
clc
repnz
jae
and
mov
clc
repnz
jae
je
roll
add
clc
repnz
jae
shrw
add
repnz
jae
je
add
mov
clc
repnz
jae
add
xor
scas
pusha
add
aas
dec
push
mov
xchg
ret
or
add
push
add
in
adc
rolb
dec
mov
clc
repnz
jae
add
lcall
sbb
add
repnz
jae
jo
cs
test
add
clc
repnz
jae
imul
add
jae
add
add
add
clc
add
dec
add
add
add
dec
outsl
popa
fs
repnz
jae
pop
jp
clc
int3
push
clc
repnz
jae
add
mov
pop
jmp
add
add
push
mov
xchg
ret
add
add
clc
repnz
jae
mov
add
int3
mov
clc
repnz
jae
jmp
outsl
push
clc
repnz
jae
xor
jle
not
add
add
jmp
lret
sbb
fldl
and
clc
repnz
jae
and
mov
push
add
fwait
cld
nop
jmp
scas
add
add
add
cmpsl
xchg
arpl
repz
mov
xchg
ret
pop
or
add
add
mov
and
clc
repnz
jae
add
add
mov
mov
sub
loop
clc
repnz
jae
add
mov
nop
jae
sbb
add
add
scas
mov
clc
repnz
jae
sbb
jmp
jae
mov
add
mov
add
js
repnz
jae
add
mov
outsl
lret
inc
add
add
mov
mov
clc
repnz
jae
add
add
pusha
add
add
repnz
jae
pop
add
cmpsb
push
cld
nop
jmp
data16
and
add
add
insl
push
clc
repnz
jae
roll
add
mov
mov
mov
xchg
ret
imul
mov
clc
repnz
jae
add
add
add
xchg
mov
jmp
add
jle
sti
scas
add
repnz
add
mov
clc
repnz
jae
add
imul
push
mov
xchg
ret
mov
jb
xchg
mov
push
fwait
cld
nop
jmp
add
add
pop
fisttpll
add
repnz
jae
add
add
push
fldenv
repnz
jae
add
lods
add
or
add
pop
clc
repnz
jae
add
jle
popa
sti
add
adc
inc
clc
repnz
jae
jmp
push
scas
jmp
nop
jae
add
je
add
mov
clc
repnz
jae
jle
imul
inc
add
mov
clc
repnz
jae
jle
rorl
or
jmp
fldl
add
in
pop
and
repnz
jae
add
insb
mov
clc
repnz
jae
jb
adc
adc
sar
repnz
jae
scas
or
add
dec
xor
lea
nop
jae
roll
push
add
out
out
clc
clc
repnz
jae
and
and
repnz
jae
pop
pop
not
add
sti
test
fwait
cld
nop
jmp
popa
add
push
call
clc
repnz
jae
pop
add
jg
clc
repnz
jae
add
cmpsb
fimull
test
stc
clc
repnz
jae
jb
add
clc
repnz
jae
jmp
push
sbb
repnz
jae
xor
mov
call
and
or
pop
scas
add
pushl
push
mov
xchg
ret
and
je
xor
cwtl
pop
push
mov
xchg
ret
add
sbb
add
add
clc
repnz
jae
add
lret
and
mov
cmpsl
sub
cld
nop
jmp
sbb
add
add
cmp
and
mov
push
add
mov
jmp
je
xor
clc
mov
or
and
pop
mov
clc
repnz
jae
add
and
data16
outsl
add
clc
repnz
jae
add
add
and
pop
test
test
push
mov
xchg
ret
jb
add
push
dec
add
mov
add
decl
pop
xor
clc
repnz
jae
and
mov
add
je
add
push
fwait
cld
nop
jmp
ror
rcrw
add
add
ja
movsl
inc
cmp
mov
xchg
ret
add
add
push
mov
xchg
ret
popa
add
mov
add
clc
repnz
jae
add
cs
ret
clc
repnz
jae
add
add
or
add
mov
mov
xchg
ret
fldl
add
frstor
push
jne
mov
fwait
cld
nop
jmp
push
add
negb
add
add
clc
repnz
jae
add
dec
and
clc
repnz
jae
add
mov
pop
clc
repnz
jae
push
in
dec
cmpsl
cmp
je
repnz
jae
add
push
repnz
jae
mov
mov
lret
sub
clc
repnz
jae
add
mov
and
fwait
cld
nop
jmp
add
cmpsb
cmp
add
add
mov
clc
repnz
jae
negb
ljmp
cld
nop
jmp
add
pop
add
nop
jmp
mov
jae
jp
add
rcll
mov
nop
add
jmp
add
add
add
or
je
add
nop
jae
add
add
sbb
or
add
mov
clc
repnz
jae
add
add
fwait
cld
nop
jmp
add
scas
in
add
sbb
pop
jmp
add
add
scas
add
add
add
add
clc
repnz
jae
mov
mov
clc
repnz
jae
adc
mov
jo
fwait
cld
nop
jmp
testb
imul
test
cld
nop
jmp
add
add
xchg
cmpsb
add
pop
mov
clc
repnz
jae
jp
ds
mov
inc
popf
add
add
add
add
or
jl
inc
add
add
je
or
nop
jae
loop
in
add
jmp
add
scas
add
add
aaa
cmp
repnz
jae
pop
add
jp
mov
push
mov
xchg
ret
roll
add
add
mov
clc
repnz
jae
popl
imul
add
repnz
jae
cmp
add
sti
je
daa
xor
fistpl
cld
nop
jmp
add
jp
add
push
fs
repnz
jae
jb
and
add
cld
nop
jmp
add
add
add
add
lret
add
mov
cmp
ret
jmp
add
loope
in
imul
clc
repnz
jae
adc
fisttpll
fwait
cld
nop
jmp
lcall
add
mov
dec
adc
add
repnz
jae
add
mov
sub
repnz
jae
add
inc
add
add
add
clc
repnz
jae
cmpsb
add
add
pop
or
inc
mov
add
clc
repnz
jae
xor
xor
in
xor
push
mov
xchg
ret
mov
push
rcll
in
xchg
add
add
adc
repnz
jae
mov
notb
add
clc
repnz
jae
add
add
movb
repnz
jae
add
inc
out
push
mov
stos
add
jge
leave
sub
sbb
mov
clc
repnz
jae
fldl
add
cmp
fwait
cld
nop
jmp
add
add
add
dec
sub
repnz
jae
mov
add
jne
clc
repnz
jae
pop
add
add
jmp
rorl
fcmovbe
inc
add
add
lret
xlat
inc
movsb
add
pusha
fwait
cld
nop
jmp
mov
add
jle
add
in
incl
mov
add
xchg
add
lea
clc
repnz
jae
pop
add
add
xor
fwait
cld
nop
jmp
mov
pop
jno
add
clc
repnz
jae
sti
jmp
jg
stos
fwait
cld
nop
jmp
in
inc
data16
and
add
test
inc
add
add
lods
add
sbb
dec
cmp
repnz
jae
sti
add
jae
dec
jmp
add
pop
add
add
add
fnsave
scas
movzwl
clc
repnz
jae
scas
add
add
in
add
nop
jae
lods
clc
add
cltd
lods
clc
repnz
jae
lret
pop
add
popa
add
jmp
add
pop
cmpsb
xor
cs
mov
push
clc
repnz
jae
sti
add
popa
add
adc
clc
repnz
jae
mov
adc
mov
clc
repnz
jae
add
fldl
sbb
add
inc
adc
repnz
jae
dec
in
adc
iret
or
inc
add
loop
and
lods
push
mov
xchg
ret
jb
add
xor
add
or
dec
clc
dec
inc
fwait
cld
nop
jmp
jae
jle
mov
clc
repnz
jae
frstor
add
or
sti
fwait
cld
nop
jmp
scas
jle
add
push
shll
push
clc
repnz
jae
fldl
add
lea
cld
nop
jmp
lods
mov
push
rcrb
call
lret
adc
rep
clc
repnz
jae
imul
fwait
cld
nop
jmp
add
or
sti
push
clc
repnz
jae
idivb
add
add
jmp
nop
jmp
add
jle
add
add
mov
repnz
jae
pop
add
repnz
jae
jp
lcall
stc
subl
push
mov
xchg
ret
add
jmp
pop
clc
repnz
jae
mov
frstor
add
jne
add
inc
push
mov
xchg
leave
add
mov
fwait
cld
nop
jmp
add
lret
jnp
push
mov
xchg
ret
lret
add
add
add
mov
xchg
ret
add
mov
jne
push
push
mov
xchg
ret
lcall
mov
mov
xchg
ret
add
add
push
add
cwtl
mov
push
mov
xchg
ret
testb
add
adc
repnz
jae
add
add
add
push
mov
xchg
ret
push
add
shll
add
push
clc
repnz
jae
pop
add
add
add
mov
clc
repnz
jae
loop
add
add
add
jae
repnz
jae
add
clc
lcall
nop
jae
mov
add
data16
add
add
out
incl
or
add
add
mov
clc
repnz
jae
push
lcall
inc
xlat
hlt
add
fwait
push
fwait
cld
nop
jmp
add
mov
fwait
cld
nop
jmp
jo
xor
add
and
movsb
add
xor
clc
repnz
jae
adc
popa
clc
repnz
jae
add
mov
sub
clc
repnz
jae
mov
add
imul
clc
repnz
jae
jle
shll
push
or
adcl
mov
add
add
push
mov
add
add
lds
add
incb
pop
psubsb
add
clc
repnz
jae
mov
add
add
mov
clc
repnz
jae
add
add
and
clc
repnz
jae
dec
pop
add
add
jp
je
mov
nop
jmp
add
loop
add
add
call
add
add
repnz
jae
lret
add
clc
repnz
jae
add
add
pop
push
mov
xchg
ret
push
push
add
add
idiv
call
add
imul
and
ljmp
xor
mov
add
clc
repnz
jae
testb
and
push
cld
add
fwait
cld
nop
jmp
and
add
add
add
add
mov
clc
repnz
jae
add
and
std
clc
repnz
jae
mov
jno
sub
clc
repnz
jae
mov
rcll
xchg
jbe
inc
aaa
inc
imul
or
add
add
add
add
add
shrl
inc
add
inc
jp
inc
xor
add
push
mov
xchg
ret
add
add
fisubs
repnz
jae
add
or
cmpsb
and
or
mov
add
popa
add
mov
xchg
ret
pop
xor
inc
and
repnz
jae
add
xchg
repnz
movzwl
fwait
cld
nop
jmp
xor
add
mov
add
pop
mov
clc
repnz
jae
clc
mov
push
aad
add
repnz
jae
cmpsb
cmpsb
inc
add
sbb
nop
jae
add
fldl
add
clc
repnz
jae
imul
or
push
or
fwait
cld
nop
jmp
add
add
add
mov
sub
push
movl
add
imul
cld
nop
jmp
add
add
add
mov
dec
in
mov
add
add
mov
test
add
clc
repnz
jae
cmp
add
sar
nop
jae
inc
dec
jmp
and
jmp
test
fwait
cld
nop
jmp
add
add
mov
repnz
jae
lods
jmp
add
clc
repnz
jae
push
mov
js
cmp
fwait
cld
nop
jmp
mov
add
add
and
fwait
cld
nop
jmp
imul
add
ret
clc
repnz
jae
or
add
mov
jae
add
add
add
add
add
repnz
jae
mov
jne
clc
repnz
jae
dec
roll
or
loopne
mov
jae
add
in
inc
jne
in
mov
repnz
jae
lods
add
loop
data16
push
add
pop
and
inc
adc
cld
nop
jmp
sti
add
mov
add
add
iret
int
add
add
pop
negb
mov
xchg
ret
lret
adc
cmp
repnz
jae
add
push
push
mov
nop
jae
jp
add
add
dec
and
jnp
nop
jae
and
or
fwait
cld
nop
jmp
jmp
fldl
jle
push
lods
jne
clc
repnz
jae
add
or
pop
clc
repnz
jae
add
add
add
cmpsb
add
fwait
cld
nop
jmp
scas
adc
imul
clc
repnz
jae
popa
jae
add
push
rolb
add
mov
add
add
cs
clc
repnz
jae
mov
scas
mov
add
mov
inc
add
jle
idivb
dec
push
clc
repnz
jae
add
in
and
fmuls
test
add
add
repnz
jae
lcall
repnz
jae
add
pop
pop
add
pop
mov
add
mov
push
mov
xchg
ret
lret
data16
add
je
clc
repnz
jae
add
add
push
clc
repnz
jae
add
add
sub
nop
jae
sti
cmpsb
add
add
call
clc
repnz
jae
add
popa
add
add
repnz
jae
add
add
add
repnz
jae
jmp
add
repnz
jae
add
mov
scas
jo
dec
fwait
mov
clc
repnz
jae
mov
add
push
clc
repnz
jae
push
add
scas
pop
push
push
mov
xchg
ret
or
push
add
cmp
mov
push
mov
xchg
ret
add
fldl
dec
jmp
mov
mulb
add
repz
aam
inc
add
and
add
rep
clc
repnz
jae
add
rol
jp
and
push
mov
xchg
ret
jae
add
add
push
fwait
cld
nop
jmp
scas
jmp
fnstsw
inc
lds
add
jne
clc
repnz
jae
add
add
loop
mov
mov
add
add
add
clc
push
mov
xchg
ret
pop
data16
jmp
push
clc
repnz
jae
mov
add
add
jo
out
add
lods
add
clc
repnz
jae
add
sti
scas
pop
add
jge
clc
repnz
jae
jne
mov
rolb
movsl
mov
cmp
repnz
jae
push
cmpsb
mov
add
push
mov
xchg
ret
add
xor
add
clc
repnz
jae
add
mov
repnz
jae
popa
shrl
jne
add
mov
clc
repnz
jae
add
daa
sbb
jae
dec
lret
clc
jo
mov
add
dec
add
add
add
and
cmp
jb
clc
repnz
jae
mov
mov
inc
roll
xchg
ret
jo
jo
mov
add
fwait
cld
nop
jmp
add
add
mov
push
mov
xchg
ret
add
add
add
adc
push
add
jmp
add
add
pop
add
add
push
mov
cwtl
in
clc
mov
jae
call
add
pop
ret
or
loop
cld
nop
jmp
mov
add
pop
jmp
lcall
stc
incl
xor
lods
flds
nop
jae
pop
pop
inc
lret
add
inc
add
test
fwait
cld
nop
jmp
pop
add
pop
data16
clc
repnz
jae
add
add
add
cmpsl
add
add
repnz
jae
divb
test
repnz
jae
push
popa
add
repnz
jae
add
mov
mov
clc
repnz
jae
add
xor
add
clc
repnz
jae
xor
loop
add
cmp
repnz
jae
mov
popa
scas
add
lcall
clc
repnz
jae
add
xor
out
inc
add
scas
push
or
repnz
jae
add
pop
jp
cmc
jbe
ret
fwait
push
clc
repnz
jae
and
add
repnz
jae
push
add
mov
fwait
cld
nop
jmp
lret
add
add
clc
repnz
jae
loop
pop
jne
pop
add
clc
repnz
jae
add
mov
add
xchg
add
test
add
rcl
inc
add
clc
pop
add
add
or
jae
add
add
repnz
jae
mov
jb
push
jmp
dec
add
repnz
jae
add
popa
clc
add
add
clc
repnz
jae
jmp
dec
mov
add
inc
enter
cmp
ret
add
pop
mov
jecxz
and
fwait
cld
nop
jmp
popa
and
loop
popa
add
add
repnz
jae
dec
scas
je
mov
pop
add
mov
fwait
cld
nop
jmp
add
add
adcl
add
add
push
fwait
cld
nop
jmp
adc
je
push
fwait
cld
nop
jmp
mov
jle
lcall
cld
nop
jmp
adc
add
dec
pusha
push
mov
xchg
ret
dec
inc
add
push
popa
pusha
add
mov
xchg
ret
add
cmp
cld
nop
jmp
push
cmpsb
pop
mov
and
push
mov
xchg
ret
jo
push
movb
add
clc
repnz
jae
push
push
mov
xchg
ret
loop
add
add
fwait
cld
nop
jmp
shrl
and
cmpsb
push
loope
repnz
jae
lods
cmpsb
mov
addb
push
mov
jecxz
jae
push
cmc
add
and
xchg
push
clc
ret
mov
nop
jae
in
jae
lods
scas
and
clc
repnz
jae
add
roll
mov
add
add
add
imul
clc
lcall
add
push
add
add
and
push
std
mov
clc
repnz
jae
push
add
push
mov
xchg
ret
push
mov
decl
push
mov
xchg
ret
add
add
cmp
add
ss
clc
repnz
jae
pop
add
jmp
pop
add
add
and
in
add
xabort
nop
jae
add
mov
sub
inc
add
imulb
add
cld
nop
jmp
mov
add
sbb
dec
add
repnz
jae
add
mov
add
nop
jae
mov
loop
add
add
clc
repnz
jae
lret
add
cmp
test
lock
clc
repnz
jae
inc
add
jg
xchg
clc
repnz
jae
add
pop
push
mov
xchg
ret
add
add
pop
and
mov
repnz
jae
cmpsb
adc
mov
fwait
cld
nop
jmp
add
add
repnz
jae
add
mov
clc
repnz
jae
xor
add
sbb
dec
cmp
repnz
jae
mov
cs
fwait
cld
nop
jmp
fldl
frstor
lret
cmpl
fwait
cld
nop
jmp
add
dec
push
push
mov
xchg
ret
add
mov
adc
lret
push
clc
repnz
jae
add
mov
mov
mov
clc
repnz
jae
add
popf
push
push
mov
xchg
ret
add
add
inc
ja
add
and
fwait
cld
nop
jmp
in
roll
jae
popa
faddp
add
add
add
rcl
mov
addr16
arpl
pop
push
mov
xchg
ret
loop
inc
fstpl
add
add
fwait
cld
nop
jmp
divb
or
ret
mov
lcall
idiv
decl
add
lcall
nop
jmp
add
add
add
fisubs
xor
add
clc
repnz
jae
mov
xchg
add
cmpsb
add
lods
pop
push
mov
xchg
ret
sti
and
pop
add
lret
mov
clc
repnz
jae
add
add
add
push
mov
xchg
ret
add
stc
pop
clc
repnz
jae
add
scas
lret
add
decl
push
mov
xchg
ret
mov
xor
add
shll
cmp
cld
nop
jmp
add
dec
scas
add
clc
lea
fwait
cld
nop
jmp
scas
pop
add
add
call
clc
repnz
jae
jle
in
cwtl
mov
clc
repnz
jae
jb
add
jno
clc
repnz
jae
lcall
xchg
clc
repnz
jae
or
add
and
add
add
add
add
fwait
cld
nop
jmp
adc
stos
mov
clc
repnz
jae
add
lcall
add
repnz
jae
add
mov
add
fwait
cld
nop
jmp
add
push
add
push
clc
repnz
jae
mov
add
test
lcall
stc
incl
lcall
clc
repnz
jae
add
mov
movb
add
jmp
add
or
add
mov
push
and
adc
jl
jge
clc
repnz
jae
add
jp
mov
mov
repnz
jae
push
mov
mov
clc
repnz
jae
add
lods
add
add
push
fwait
cld
nop
jmp
lcall
pop
jo
lea
clc
repnz
jae
loop
mov
scas
and
ret
and
push
mov
xchg
ret
jmp
push
jae
mov
mov
add
insl
mov
push
mov
xchg
ret
jb
xor
add
mov
xchg
ret
add
add
cmpsb
roll
xchg
ret
jb
popa
loop
add
rolb
xchg
lods
push
clc
repnz
jae
and
jle
sub
rolb
xchg
ret
fnstsw
add
movb
jge
inc
add
add
add
sbb
cmp
incl
scas
push
add
clc
dec
add
push
mov
xchg
ret
add
push
clc
repnz
jae
add
jo
add
mov
lcall
clc
decl
sbb
clc
repnz
jae
and
and
mov
xchg
ret
shll
push
pushf
push
mov
or
lock
add
fucomip
lock
fidivl
test
rolb
mov
adc
icebp
adc
popf
cmpsb
add
cmp
add
add
add
test
hlt
add
add
push
add
mov
mov
das
bound
mov
add
xchg
add
add
pop
ret
mov
xor
aam
iret
sub
mov
fld
add
icebp
cs
mov
scas
jmp
lods
imull
add
fnstcw
jge
add
lea
cmpsb
add
sub
xchg
add
add
into
and
mov
dec
xor
inc
add
inc
add
lahf
jp
add
add
add
lahf
dec
cmpsb
add
loopne
mov
out
jp
dec
lret
jb
jno
pop
or
pusha
add
sbb
add
add
add
mov
sub
mov
cld
push
add
push
dec
ljmp
adc
xchg
mov
imul
data16
jae
and
lret
mov
add
add
jne
dec
push
lock
dec
xor
data16
add
int3
call
jecxz
push
lods
jo
xchg
mov
repz
mov
mov
gs
out
lods
pop
add
mov
add
outsl
stos
adc
inc
add
loop
add
mov
and
jle
xor
sub
add
cmp
xchg
cmpsl
arpl
xchg
add
lock
and
cli
jle
xchg
add
test
stc
ret
lds
mov
mov
stos
and
mov
mov
insl
mov
add
add
jle
lcall
pop
cli
dec
mov
xchg
push
add
push
xor
pop
arpl
add
cmp
lret
cwtl
test
lea
cli
add
mov
add
rcll
mov
clc
or
dec
xor
sub
add
mov
inc
jo
cmpsl
dec
jge
mov
add
or
cmp
mov
stos
std
imul
add
xchg
popf
imul
mov
add
testb
sub
add
mov
movb
add
int3
rolb
xchg
add
icebp
enter
sbb
sarl
jae
add
addb
add
add
add
mov
outsb
jb
out
add
lods
fsubrs
cmp
cmp
pusha
add
and
mov
mov
mov
loopne
mov
add
orps
loope
xor
sahf
int3
popa
inc
add
fiadds
fwait
das
movb
xor
add
or
add
pop
sub
lret
xor
cld
fdivrl
fs
fidivl
add
push
add
arpl
fstps
ret
xlat
sub
xchg
add
jns
add
sti
jo
add
fincstp
jae
mov
add
jns,pn
add
fwait
add
stc
lcall
dec
fsubr
inc
cmp
pop
dec
incb
mov
ds
loopne
pushf
or
xorl
cmp
inc
jo
sbb
cltd
jmp
mov
call
xor
jle
imul
sahf
mov
pop
fcos
insb
jo
ret
inc
add
lea
mov
sub
ss
jbe
mov
add
mov
push
les
push
add
out
push
shll
add
xor
testl
add
divl
mov
add
out
mov
out
add
mov
test
sub
mov
add
adc
push
inc
sbb
ret
addb
add
and
mov
int
inc
pop
or
add
jbe
adc
mov
jo
dec
xchg
add
rolb
or
add
lahf
loop
rol
out
push
fsincos
out
daa
lea
into
les
test
fldt
movb
jae
add
rolb
dec
dec
clc
test
jmp
mov
dec
bound
mov
xchg
xchg
cs
clc
mov
mov
sbb
cltd
xor
sbb
imul
testb
mov
xchg
add
add
add
call
xchg
add
and
push
add
leave
scas
cmp
add
loopne
clc
clc
or
and
in
mov
pop
or
add
add
sbb
or
dec
add
adc
add
or
imul
pop
inc
add
pop
cli
push
ret
aaa
jmp
mov
add
xor
mov
cmc
add
mov
push
mov
push
add
stc
add
add
add
mov
mov
pop
push
add
cld
mov
ret
les
xchg
jecxz
inc
add
adc
push
add
pop
add
add
add
inc
add
dec
xor
test
add
out
in
lds
out
add
mov
sbb
push
mov
mov
or
add
mov
push
push
add
jne
mov
add
or
add
mov
stos
shll
or
mov
nop
add
fwait
shrl
and
mov
add
cltd
leave
dec
int
mov
cmpsl
inc
cmpsb
add
mov
mov
add
add
mov
movb
loope
stos
lahf
lea
movb
les
push
pop
test
add
mov
sbb
sbbl
mov
pop
out
pop
gs
in
frstor
add
push
add
jns
xor
and
mov
xor
mov
data16
add
xor
add
add
fstpl
add
mov
jnp
push
mov
pop
call
adc
movb
push
add
add
add
xor
push
jmp
cmpsl
push
add
push
add
or
adc
dec
jno
dec
lcall
add
add
mov
add
out
in
test
call
jle
cmpsb
add
int
stos
movb
pusha
add
mov
aas
adc
into
xchg
jno
add
mov
cmp
repz
lock
loopne
jp
sbb
add
mov
add
mov
call
add
add
addb
and
lock
add
mov
orl
and
test
js
pusha
add
ret
add
cltd
mov
and
mov
push
and
add
pop
lock
stos
test
fimull
add
mov
or
hlt
add
add
add
add
movsl
inc
add
add
shll
inc
add
mov
jecxz
lret
mov
jb
mov
mov
rolb
push
dec
sub
sbb
test
mov
push
add
fisttps
test
add
popf
test
ror
add
sub
add
mov
daa
pop
pop
imul
push
add
lock
pop
andl
add
add
add
call
add
jle
fsts
pop
int
mov
pop
into
sbb
mov
and
out
iret
fs
add
add
adc
add
add
out
jle
add
sbb
pusha
add
inc
add
mov
lea
mov
dec
je
xchg
add
xchg
add
sub
add
outsl
push
push
sbb
add
les
arpl
out
pop
jnp
mov
sub
add
ret
aam
lret
push
mov
mov
pop
inc
inc
add
push
dec
sbb
add
rcr
mov
cld
mov
mov
push
or
addb
jns
push
add
call
pop
add
add
add
mov
add
lcall
fldt
dec
pop
test
xor
add
popf
mov
inc
add
and
aam
leave
sub
mov
add
andl
bound
mov
int
add
adc
adc
test
add
add
push
adc
mov
cmp
in
insl
sbb
in
mov
fidivrs
add
shrl
test
add
mov
cmp
cld
scas
pop
ret
xor
notl
add
insb
test
les
dec
icebp
out
loope
and
addb
add
dec
test
cli
hlt
add
fsub
xor
jl
add
rolb
call
add
lret
les
jle
adc
or
adcl
xchg
add
dec
nop
add
mov
pop
mov
add
add
mov
hlt
add
fwait
ret
out
lcall
rolb
addb
jns
mov
jecxz
sub
clc
outsl
dec
xchg
or
sbb
aaa
push
add
add
add
test
out
in
or
mov
add
xchg
mov
or
add
gs
add
xchg
dec
mov
addb
mov
push
add
stos
push
add
shrl
mov
add
add
add
hlt
add
xor
add
and
mov
add
mov
sbb
movsl
add
mov
arpl
add
xchg
fdivrl
test
fildl
lds
lcall
rolb
xor
push
add
mov
rorl
sahf
adc
icebp
movb
add
add
adc
mov
jle
add
mov
mov
loop
jo
sbb
mov
add
add
add
in
jno
mov
int3
dec
gs
movb
ljmp
pop
stc
add
ret
mov
add
add
pop
and
ret
pushf
pop
mov
add
add
sub
add
in
add
sbb
outsb
push
add
xchg
add
add
pop
repz
pop
sub
test
and
loope
push
add
add
mov
mov
inc
add
jecxz
jecxz
out
sub
pop
in
test
mov
stos
ret
add
add
add
and
mov
insl
fsubl
daa
and
hlt
add
mov
daa
inc
add
repz
sub
ret
add
add
pop
add
mov
dec
mov
adc
xor
mov
ficoms
add
add
rolb
add
adcl
mov
inc
and
inc
add
fidivl
dec
cmp
push
add
cmpsl
icebp
dec
stos
orl
movsl
in
add
add
gs
dec
or
add
insb
out
push
add
rolb
xor
push
add
mov
jmp
mov
in
iret
pop
aam
mov
out
cltd
dec
addb
addb
out
mov
pop
std
adc
stc
sbb
decl
dec
lock
fstl
add
sub
add
cmpsl
popa
aas
int3
mov
mov
dec
into
arpl
add
xor
add
add
mov
loopne
xor
cltd
xchg
fsubrl
fdiv
add
push
ljmp
push
add
mov
testb
dec
leave
int3
in
and
sbb
add
mov
testl
rcrl
add
mov
in
cmp
bound
mov
add
cmp
mov
iret
mov
add
enter
nop
add
lea
add
mov
inc
xchg
jl
add
add
add
outsb
in
xor
and
aam
mov
repz
add
add
add
lret
loop
fst
add
call
jp
mov
fists
add
xor
in
scas
mov
add
xchg
add
jecxz
add
gs
cmpl
adc
xchg
add
cmp
sub
add
cmp
or
add
out
addb
out
sbb
gs
add
mov
movsb
add
inc
add
push
sub
dec
adc
adc
daa
jo
xchg
add
rolb
sub
xchg
dec
in
das
icebp
or
xchg
add
mov
inc
add
xor
aad
dec
xor
out
add
pop
inc
inc
pop
xchg
adc
fdivrs
mov
dec
loope
add
sbb
and
pusha
add
movsl
lcall
out
mov
ja
mov
or
icebp
or
add
xor
mov
orl
add
fisubs
mov
out
movb
mov
inc
add
int3
leave
push
xor
xchg
push
pop
cmc
ds
mov
add
add
add
lods
push
pop
or
testb
add
add
xrelease
je
mov
jg
sbb
add
mov
sbb
add
add
dec
cli
enter
and
mov
addl
popf
int3
add
std
addb
mov
push
arpl
mov
add
testl
add
sbb
sbb
aaa
rcr
loop
adc
jg
std
mov
add
push
add
add
jns
scas
arpl
add
add
std
outsl
xor
lret
loop
jne
lock
fdivrl
fiaddl
xor
and
mov
xchg
mov
hlt
add
data16
mov
add
add
add
add
mov
cmp
push
movsl
ljmp
aas
dec
ljmp
add
mov
inc
scas
cmpsb
add
iret
std
push
loopne
sbb
hlt
add
imul
add
add
mov
sub
cmp
clc
jge
add
inc
add
push
sub
add
pop
rolb
add
sub
jb
addb
lcall
add
add
mov
addb
mov
stos
sbb
mov
add
in
jbe
push
add
enter
cmp
add
out
dec
je
mov
ret
push
add
add
push
out
mov
shll
cltd
fildll
or
les
xor
aam
mov
adc
aas
inc
add
or
add
add
add
xchg
add
inc
pop
insb
mov
mov
pusha
add
mov
add
pop
xchg
or
add
xor
bound
mov
add
lea
mov
pop
fimull
mov
add
vmovdqu
arpl
cmc
mov
or
mov
mov
sub
cmpsb
add
push
pop
jb
iret
leave
in
cmp
push
cwtl
hlt
add
push
add
add
testb
push
add
add
add
call
jmp
add
xchg
leave
shll
jo
push
sahf
out
in
out
aas
out
add
nop
add
add
add
jbe
adc
add
add
movsl
fnstsw
sbb
fmull
xlat
lds
xchg
add
mov
xchg
xlat
jmp
data16
enter
xchg
mov
add
jae
or
hlt
add
adc
pop
or
jb,pt
push
insl
repz
add
bound
mov
add
mov
scas
mov
lret
dec
bsr
and
and
mov
add
cmc
jle
scas
sub
add
push
xor
arpl
cld
aad
cwtl
test
pop
push
push
add
lahf
int
sub
je
push
add
in
and
mov
cmpsb
add
xlat
dec
arpl
add
add
mov
in
stos
sub
add
xchg
adc
std
or
pop
cmp
or
xor
xchg
in
jmp
in
pop
adc
and
xchg
add
add
cmp
sbb
add
add
sub
cmpsl
jge
add
adc
scas
inc
add
xchg
inc
add
mov
mov
sbb
sub
stc
pop
repz
cmp
popa
int3
xchg
mov
xchg
push
out
call
nop
add
push
add
cmp
out
scas
ja
lods
das
out
outsb
lcall
pop
jns
daa
jbe
cmpsl
outsb
sub
dec
mov
enter
add
push
subl
add
add
add
stos
fsubs
cmp
enter
add
mov
mov
inc
add
push
add
add
push
add
add
fcompl
mov
add
call
icebp
mov
sbb
inc
add
nop
add
cmc
je
test
cmp
rolb
popf
xchg
xchg
frstpm(287
and
add
addb
popa
cmp
mov
pop
add
mov
pop
jle
bound
mov
aam
push
add
in
pop
std
das
sub
add
in
sub
das
cmp
lahf
push
lds
shll
sbb
mov
les
add
mov
sub
add
das
inc
xchg
add
add
aaa
les
loop
mov
push
add
inc
add
add
add
inc
add
lods
xor
fstpl
add
cmp
arpl
iret
ljmp
add
mov
pusha
add
add
jl
cmp
inc
test
add
dec
fwait
sbb
xor
add
mov
add
jmp
pusha
add
fimull
and
add
add
mov
data16
repnz
loopne
sti
test
add
xchg
add
add
add
icebp
mov
loopne
iret
stos
cwtl
sbb
mov
aam
mov
repnz
add
add
jne
adc
mov
sub
mov
fiadds
ficompl
icebp
rolb
jg
xor
or
adc
cmp
add
add
sub
int
dec
mov
aam
and
lds
add
mov
fisttps
call
cmp
add
sub
subl
mov
aad
comiss
or
add
adc
sub
test
testb
add
je
ret
jne
add
mov
cmp
nop
add
mov
js
add
pop
fadds
stc
add
add
and
mov
imul
sub
scas
add
rolb
cmp
add
mov
loope
add
cmp
loope
add
pop
jecxz
jecxz
into
fdivr
cmp
stos
rolb
sahf
cltd
out
mov
add
rolb
xchg
test
dec
rolb
add
or
add
push
add
add
add
jbe
or
add
add
add
adc
or
mov
ret
aad
sbb
inc
add
add
lret
jne
xchg
add
loope
add
pop
lea
js
in
or
xor
jae
mov
jae
mov
adc
add
aad
push
add
mov
add
add
cs
add
dec
scas
pushf
jmp
les
leave
dec
jae
add
mov
pop
cmp
lods
pop
in
shll
rolb
push
add
sub
add
jb
addr16
loope
add
pop
popa
xlat
and
mov
add
xlat
push
add
ja
add
xor
or
aad
add
add
add
test
xor
out
sbb
roll
adc
popa
mov
mov
testb
fs
add
xchg
fisubs
sub
add
add
jne
stos
pop
xchg
ja
add
mov
loope
xor
mov
fstps
or
or
clc
iret
pop
push
mov
mov
addb
lret
inc
add
imul
or
add
add
adc
add
mov
adc
xchg
rolb
mov
rolb
and
mov
add
cmpsb
add
in
pop
roll
cmc
inc
push
add
pushf
addb
add
test
mov
add
nop
add
cmpsl
icebp
cmpl
sti
xchg
add
mov
pop
mov
in
push
add
shl
pop
loop
pop
in
inc
jp
lret
pusha
add
add
and
add
cmp
jbe
outsb
fdivr
je
xchg
jno
add
mov
mov
mov
pusha
add
add
js
inc
add
adc
mov
imul
mov
pop
pop
es
add
addb
push
add
add
add
icebp
xchg
shll
lds
xchg
add
add
mov
ljmp
sahf
cmp
js
iret
ljmp
push
add
add
or
cmp
cmpsl
je
call
jg
jge
add
xor
clc
jle
cmp
add
mov
pushf
cwtl
cwtl
aad
fadds
mov
mov
movb
jo
addb
and
cmp
enter
mov
push
add
add
inc
add
mov
push
add
add
mov
pop
imull
or
add
mov
add
cmp
pop
cmp
repz
fidivl
add
lahf
hlt
add
andl
das
js
testb
addb
add
iret
add
into
leave
pop
jmp
fdivrl
mov
push
add
add
in
or
popf
imul
mov
xor
mov
ret
xchg
test
add
sbb
rolb
sbb
add
sub
add
fiadds
sbb
and
mov
add
jle
popf
rorl
jae
add
outsl
je
adc
in
fstl
sub
aas
test
jl
pusha
add
or
movb
stc
mov
add
dec
inc
outsl
sbb
and
cltd
call
cwtl
jnp
rolb
add
sub
or
fsubs
sub
add
add
mov
int3
call
jmp
push
movsl
pusha
add
scas
or
sbb
mov
shll
jl
add
add
add
insl
jl
sarl
add
add
fdivl
dec
mov
popf
sbb
cli
lds
cli
mov
inc
add
add
jbe
mov
jmp
inc
add
ds
stos
jp
adc
test
add
add
aad
add
leave
fdivl
add
testb
scas
scas
cmc
sub
add
insb
out
and
add
add
pop
and
mov
jl
add
rolb
push
add
add
mov
add
jp
xor
aad
sub
mov
daa
mov
add
rolb
mov
add
add
xor
data16
add
ja
cmp
repnz
add
add
add
add
loope
mov
fimull
pop
add
mov
fldenv
sub
sbb
add
add
add
cmpl
add
cmpsl
cld
and
mov
mov
lahf
dec
sub
xlat
lods
fldcw
cmpsl
push
adc
mov
jle
roll
movsb
add
add
int3
sti
inc
add
add
mov
test
mov
cli
ret
jns
add
add
test
movb
jbe
mov
mov
jmp
xorl
lock
jp
sbb
mov
insl
cmpsl
int3
cltd
iret
das
leave
or
jg
lret
inc
mov
call
add
add
dec
pop
lds
in
cs
push
cltd
push
mov
or
add
inc
das
cmp
sub
mov
ja
nop
add
add
push
add
adc
sub
lods
or
add
add
dec
pop
cmpsl
jae
out
add
add
lods
lock
push
out
xor
add
add
jbe
ret
rol
add
add
movl
aas
xchg
jge
sbb
push
jmp
inc
add
mov
fbstp
push
adc
repz
add
repnz
dec
jl
push
add
or
loope
push
in
fsubl
xchg
add
add
add
fcomip
add
sub
add
push
add
or
pop
jbe
cmp
int
add
mov
add
pop
fldenv
sbb
mov
lock
add
stos
mov
test
inc
add
gs
mov
fstps
mov
add
add
mov
inc
add
f2xm1
add
push
add
adc
sub
sub
arpl
bswap
pop
stos
and
add
lret
and
add
pop
into
lret
fnsave
cli
dec
jg
jg
push
add
push
mov
add
add
xchg
aad
lea
jo
mul
repz
mov
mov
add
mov
add
iret
xchg
xchg
add
faddl
pop
adc
or
mov
or
fistl
adc
add
or
pop
jecxz
add
inc
add
add
adc
ret
pop
xor
popf
hlt
add
add
stos
bound
mov
clc
jo
and
mov
jo
mov
add
mov
popa
leave
push
jae
add
dec
imul
jno
cmp
add
mov
mov
fldt
sahf
test
lret
add
out
jmp
add
call
loopne
and
mov
add
imul
mov
lahf
pop
jl
add
xchg
jns
cmc
insb
popf
aas
gs
je
mov
add
pusha
add
jae
sbb
shll
data16
lret
xchg
add
aas
sbb
add
add
jecxz
jle
in
xor
dec
cmovo
mov
pop
stos
mov
popf
icebp
test
add
addr16
and
aas
push
mov
test
movsl
out
dec
pop
data16
adc
add
dec
dec
sub
xchg
and
hlt
add
add
cmp
jns
add
mov
cmc
or
addb
add
lret
mov
pop
or
add
add
xor
dec
jg
push
adc
ja
subl
add
out
lret
add
adc
fcmovnu
inc
add
add
sbb
add
clc
dec
cmp
add
add
add
push
add
add
push
or
mov
push
add
add
add
dec
xor
dec
int3
popa
daa
lret
jno
push
add
pop
sub
add
cmpsl
rcll
icebp
ljmp
mov
inc
add
enter
add
ljmp
sbb
xchg
into
rol
jle
add
push
add
imul
add
fsubr
imul
cmc
adc
xchg
mov
pop
dec
loopne
into
mov
dec
pop
aam
dec
stc
mov
pop
cmp
out
add
mov
add
mov
stc
ficompl
popf
daa
mov
add
dec
scas
add
cmp
add
xchg
jbe
push
add
add
movsb
add
pop
mov
in
sub
add
xor
jmp
sbb
repz
xchg
add
or
and
jecxz
pop
iret
pop
xor
push
in
dec
cli
mov
mov
mov
rolb
lcall
daa
jl
add
add
add
int3
jmp
rolb
sahf
pop
mov
add
inc
repnz
rolb
add
pop
cmpsl
int
outsb
movsl
shl
test
push
add
call
mov
loop
fmull
adc
adc
add
add
test
dec
cld
filds
pop
mov
add
add
add
mov
movsb
add
xchg
sbbl
mov
xchg
decb
dec
movsl
xchg
add
mov
jae
ljmp
add
add
add
hlt
add
mov
repnz
mov
mov
mov
mov
cmp
add
mov
add
pop
in
dec
popa
dec
mov
or
lods
push
loop
loop
xchg
add
push
xchg
push
rolb
imull
int3
sub
pop
xor
jl
add
add
push
add
add
push
add
movsb
add
xchg
add
loop
sbb
add
add
bound
mov
repnz
inc
pop
jae
add
or
add
add
add
mov
mov
stos
mov
fstpl
in
sbb
push
add
enter
push
add
sbb
jae
xchg
dec
mov
insb
cwtl
and
mov
lret
add
insl
push
add
pop
mul
add
out
neg
pop
loopne
xchg
and
mov
cs
push
add
xor
add
mov
adc
je
xor
add
add
outsb
xor
mov
add
push
loopne
jg
push
sub
add
lret
cmc
stc
sub
call
add
inc
jge
add
adc
fcomps
add
add
lock
sbb
aas
mov
jno
add
add
fsubrs
mov
add
icebp
pop
fisttps
mov
add
mov
cwtl
xchg
xchg
xchg
fldl
daa
ja
pop
jae
adc
aas
lret
int3
push
add
inc
insl
iret
loopne
out
rcll
add
cmc
add
or
imul
inc
ret
jno
in
movb
add
gs
add
pusha
add
add
jo
xor
push
inc
lock
add
dec
das
scas
mov
inc
adc
mov
add
mov
popa
xchg
push
add
jmp
or
add
add
mov
add
lods
add
xchg
add
add
mov
add
sub
dec
sbbl
xchg
ljmp
inc
int
add
mov
pop
sbb
mov
stos
jmp
mov
inc
add
add
add
adc
add
add
push
add
je
sbb
add
cmpsb
add
xlat
jb
mov
test
popa
inc
add
arpl
jo
pop
dec
loope
add
add
mov
fwait
jno
push
add
add
xchg
add
outsb
test
stos
enter
roll
sub
add
addr16
repnz
addr16
add
add
add
mov
jne
push
dec
adc
call
mov
dec
jl
add
cmp
rolb
inc
add
xchg
icebp
ljmp
add
in
cwtl
fsubl
bound
mov
add
add
addb
add
mov
add
jg
lret
lods
sbbl
jo
setl
add
add
daa
jmp
popa
jg
pop
add
add
or
das
push
add
add
add
add
add
jge
add
add
adc
pop
stos
lret
outsb
leave
push
add
rorl
roll
xor
or
stos
sbb
stc
nop
add
or
out
mov
xchg
add
sub
add
add
popa
rcll
pop
fwait
push
dec
or
mov
inc
loop
xchg
adc
addb
add
push
add
das
insl
mov
cmp
add
xchg
adc
ja
aaa
in
repnz
add
insb
rcll
add
cmp
int
add
ljmp
sbb
in
shll
ret
lahf
mov
faddl
add
add
mov
mov
mov
inc
add
xchg
add
and
testb
outsb
adc
mov
mov
fwait
lcall
out
fwait
cmp
sbb
jle
and
mov
repnz
ds
inc
add
push
add
add
add
in
add
push
add
add
add
add
cld
xchg
sti
pop
push
xor
lcall
lock
sub
stc
mov
cmp
lods
adc
cmp
add
add
pop
aam
mull
add
add
rolb
bound
mov
fstpl
inc
add
add
mov
ret
nop
add
fwait
aas
testb
inc
add
add
fisttpl
jl
dec
jmp
jo
xchg
push
add
sarl
xorl
push
add
add
jnp
mov
pushf
pusha
add
lods
push
add
sti
add
movsl
test
and
push
add
add
nop
add
ret
jge
cmp
sub
bound
mov
push
add
mov
add
mov
add
mov
add
sar
in
mov
xor
test
sbb
push
add
jno
add
add
or
add
add
dec
notl
fwait
aas
bound
mov
out
clc
rolb
pop
loopne
mov
add
add
sbb
add
jmp
push
add
add
add
notl
fisttpl
adc
sar
xchg
jae
fists
fisttpl
cmp
xchg
ror
xor
arpl
stos
dec
mov
add
add
add
push
sbb
add
pop
xchg
add
test
mov
fstl
cmp
mov
sbb
repnz
mov
test
shll
insb
xchg
add
mov
add
out
add
daa
inc
add
xchg
add
rolb
test
pop
testb
add
addb
in
popf
movb
fsubs
add
add
call
add
data16
xchg
stc
repnz
add
mov
push
add
add
cltd
sub
mov
mov
decl
adc
mov
addb
xor
add
add
dec
mull
xchg
out
sbb
enter
pop
insb
sub
add
xor
insb
inc
add
fwait
addr16
add
and
adc
stc
add
mov
pop
mov
mov
add
mov
loope
scas
or
rcl
add
add
add
add
imul
rolb
add
add
loope
add
rolb
xor
out
cmp
add
add
sbb
add
mov
add
jecxz
pusha
add
std
int
add
loop
scas
adc
out
add
add
add
inc
adc
inc
add
add
out
sub
xor
and
mov
and
xlat
test
rolb
stc
xor
sub
je
push
add
add
mov
add
out
mov
add
add
add
or
mov
pop
xchg
stos
frstpm(287
loop
dec
cmp
add
cmp
in
mov
mov
pop
in
ret
mov
leave
pop
cmpsl
cmp
xchg
add
add
fcmovnbe
add
movsl
jl
or
and
pop
add
add
adc
pushf
pop
data16
inc
add
lods
inc
sbb
mov
sub
mov
jb
lds
rol
add
mov
lret
hlt
add
push
inc
add
loop
bound
mov
cmp
sbb
sti
add
mov
mov
add
mov
sub
std
ret
lahf
jb
insl
rcll
repz
add
adc
bound
mov
add
sub
add
outsb
std
in
mov
add
movsl
or
mov
add
push
repz
add
sahf
mov
add
test
mov
subl
add
ljmp
add
in
rolb
push
pop
pop
jnp
mov
mov
push
add
add
adc
add
in
sub
push
push
jo
lods
inc
dec
jle
add
scas
or
stc
inc
add
ds
add
pop
xor
and
test
inc
and
movsl
inc
add
xor
dec
cli
mov
add
std
aas
lret
movsl
std
cs
add
add
add
sbb
insb
test
dec
jne
cltd
in
add
add
int
in
mov
pop
fnstenv
add
sub
add
add
push
add
jb
stos
data16
add
add
call
jnp
add
pop
cltd
popf
mov
mov
add
mov
adc
push
loopne
dec
gs
add
das
addb
or
hlt
add
insl
cmp
add
frstor
add
sbb
add
outsl
inc
faddl
cmp
mov
add
add
xor
lret
cmp
jnp
add
mov
cmp
bound
mov
fadds
cli
jge
mov
scas
xchg
jae
add
mov
add
add
xchg
add
add
adc
add
xchg
orl
add
add
mov
lods
mov
lea
add
xchg
scas
out
inc
add
pusha
add
add
add
cs
add
addr16
add
add
mov
or
mov
cmp
pushf
dec
out
sbb
cmpl
cmp
xchg
cmp
rol
or
cmpsl
adc
call
dec
pop
insb
inc
sub
xchg
add
mov
add
jno
pop
outsl
incb
outsb
mov
test
addb
mov
movsl
repz
adc
add
jg
mov
mov
sbb
add
mov
push
add
add
add
sbb
pop
cltd
add
mov
mov
testl
xchg
add
add
mov
vpaddw
adc
xor
add
int3
mov
fstpl
sub
sahf
adc
add
dec
mov
shl
int
sbb
incb
inc
inc
adc
mov
add
add
xor
loopne
iret
lods
xor
shl
cmp
push
push
add
and
and
add
sub
cmp
int3
psrlw
mov
lret
loop
fwait
aad
add
movsl
scas
sarl
in
and
mov
pop
xchg
push
mov
add
loopne
adc
push
add
add
add
add
cs
cs
testb
add
je
hlt
add
rolb
cltd
clc
loop
xor
sbb
add
jae
scas
lods
push
add
rcll
add
mov
outsl
xchg
add
add
test
sbb
xchg
ret
adc
add
icebp
add
mov
add
push
and
jnp
push
add
add
data16
out
in
in
add
aam
movsl
daa
xchg
add
add
mov
aad
stos
ret
push
add
bound
mov
inc
out
pop
sub
mov
mov
mov
pop
movsb
add
mov
ljmp
add
fwait
ret
or
xchg
stos
std
outsl
into
lret
sti
stos
out
icebp
flds
push
adc
data16
or
add
sbb
ret
stc
jl
push
add
rolb
mov
lea
mov
jmp
movsb
add
shll
cmp
mov
lret
and
push
pusha
add
add
pop
gs
mov
xor
adc
xchg
enter
test
jp
xor
ljmp
rolb
or
add
add
add
lret
in
add
sub
add
or
sub
ficoms
ljmp
out
cwtl
int3
loopne
cs
xchg
add
leave
leave
aad
add
nop
add
and
add
add
add
jp
add
das
adc
scas
add
mov
pop
je
loopne
mov
jae
pop
loope
add
imul
ret
add
add
mov
and
mov
jno
and
jecxz
mov
je
and
mov
sbb
add
fisttps
lods
dec
sbb
sbb
add
sarl
push
leave
and
mov
push
fwait
arpl
add
or
fmuls
add
in
cli
sbb
add
mov
add
add
add
xor
mov
or
jnp
xor
mov
adc
add
add
aas
jo
jge
js
add
mov
mov
sbb
add
add
dec
pop
adc
adc
mov
ja
add
mov
sbb
into
or
iret
and
mov
add
mov
aaa
mov
jle
sbb
mov
jp
cltd
or
add
int
pop
cmp
sub
add
jns
iret
js,pn
icebp
cmp
in
addb
testb
xor
stos
add
add
mov
add
aas
xorl
rolb
out
pop
jbe
lds
test
xchg
push
clc
mov
add
out
enter
push
add
mov
jnp
add
pusha
add
add
add
lret
mov
or
add
insb
out
inc
jg
cmp
mov
add
int
add
jmp
jmp
cmp
inc
push
mov
adc
inc
add
add
jle
mov
testb
cmp
add
add
add
mov
inc
ret
lods
add
mov
add
test
test
pop
stos
lock
push
add
sbb
dec
popa
or
jmp
mov
jp
leave
inc
out
pushf
pusha
add
push
loop
enter
add
fadds
add
mov
loope
js
mull
mov
cmpsb
add
add
lcall
sub
sub
add
addb
shrl
daa
xchg
mov
dec
pop
ret
push
fistpl
push
dec
test
mov
xchg
add
mov
lea
and
mov
xor
fstl
lods
and
mov
xchg
std
push
push
shll
add
mov
adc
sub
add
addb
add
mov
push
add
mov
fcoml
add
out
data16
sbb
jp
adc
dec
in
adc
add
or
add
daa
mov
adc
pop
xor
pop
out
pop
rcll
mov
pop
imul
mov
icebp
enter
adc
fistps
jmp
mov
push
loopne
add
xor
sub
arpl
hlt
add
sub
outsl
lahf
lds
imul
add
pushf
xor
pop
mov
mov
add
push
push
cmpl
add
call
add
data16
jb
mov
mov
stc
jg
adc
stc
add
mov
and
mov
and
test
add
mov
pop
sbb
add
addb
add
xchg
mov
add
ss
cmp
lds
ss
add
clc
movsl
test
imul
inc
add
add
rolb
pop
pop
pop
adc
jns
add
sahf
xlat
xchg
add
icebp
add
jb
pop
rcll
loope
add
xor
cwtl
jle
sti
xchg
or
in
dec
cmp
add
int3
shll
cmp
add
imul
jecxz
lods
xchg
test
pop
add
add
mov
cmp
inc
cmp
add
add
daa
mov
add
sbb
bound
mov
ja
pop
pop
add
dec
push
mov
pop
dec
and
cmp
push
add
sub
jmp
out
lret
or
adc
push
in
dec
adc
add
pop
stos
out
loop
pop
inc
push
add
add
clc
mov
push
add
in
push
in
inc
lret
xchg
pop
push
out
movsb
add
pushf
add
fs
lock
icebp
mov
push
add
xchg
insb
sub
add
mov
lea
adc
sbb
fsubs
pusha
add
or
cmp
add
add
add
dec
lahf
mov
xchg
or
jmp
out
enter
in
mov
add
movups
addb
add
popa
dec
fists
add
pop
in
add
std
sbb
pop
mov
add
mov
scas
pop
jno
sbb
cltd
fists
add
cmpsl
pop
hlt
add
shll
lock
sub
or
sbb
mov
add
cmpsl
rcr
jmp
dec
mov
fbstp
daa
cmpxchg
pop
shrl
xor
sbb
aas
xor
ret
into
out
cmp
popf
pop
mov
add
add
pop
push
xchg
push
daa
jne
lods
inc
add
jns
adc
jecxz
add
xlat
rolb
lret
addr16
fimull
add
sbb
push
add
mov
mov
mov
sub
adc
in
add
subl
int3
int3
rolb
xchg
add
add
lock
xor
pop
pop
jmp
add
sbb
scas
insl
xchg
add
add
mov
dec
xchg
add
jecxz
add
mov
ret
les
aaa
add
mov
jge
add
test
mov
movb
jp
add
inc
outsb
pop
in
cli
xor
das
cwtl
movb
dec
out
inc
add
add
add
add
das
inc
xchg
rcrl
dec
pop
push
aaa
test
push
add
out
jcxz
add
jecxz
add
jno
add
rolb
aaa
xorl
add
pusha
add
jge
jg
add
pop
jbe
xor
leave
ja
add
lcall
add
add
mov
mov
addb
add
push
add
div
add
mov
cmp
and
or
adc
push
add
sbb
das
jb
pop
imul
add
inc
push
add
aaa
sub
push
add
cld
xor
sub
add
add
rolb
lret
inc
add
jne
jbe
call
insl
dec
filds
add
dec
mov
cmp
ret
nop
add
fnsave
ds
in
cmp
add
add
mov
xor
adc
add
pop
sti
lods
popa
mov
movsb
add
mov
add
add
addl
dec
dec
dec
cmovb
mov
mov
add
add
cmpsl
jbe
or
mov
push
ljmp
add
add
add
iret
repz
fidivl
add
adc
std
test
loopne
fldt
xchg
add
add
test
pop
pop
or
bound
mov
fiadds
add
mov
jne
imul
rolb
movsb
add
mov
mov
lods
gs
insb
cmpsl
inc
add
loope
data16
rolb
add
jp
xchg
leave
aas
out
cmp
add
cmp
insb
or
add
int
hlt
add
adc
movsl
sbb
pop
cmp
gs
scas
cli
and
int
aaa
adc
add
add
add
sub
add
movsl
fcompl
inc
dec
sahf
cmpsb
add
sbb
and
add
add
mov
add
add
leave
add
dec
push
add
add
int3
addr16
push
loop
adc
popf
movhps
jge
add
nop
add
add
dec
push
push
add
fwait
mov
jae
add
add
adc
out
add
les
addb
int3
adc
xor
add
enter
mov
mov
mov
lods
pop
testl
mov
and
add
add
out
add
rolb
mov
add
jno
jnp
scas
ja
add
roll
add
mov
sbb
add
inc
add
roll
jns
pop
mov
dec
jb
inc
dec
in
jno
add
out
cld
loopne
jo
test
scas
xor
cmp
jge
jbe
mov
inc
inc
add
add
mov
je
mov
aaa
sbb
add
pop
mov
add
dec
cmp
mov
xor
push
add
adc
sub
add
add
fldl
add
mov
imul
loopne
scas
add
sbb
bound
mov
add
push
and
xor
or
add
cli
movl
addl
cmp
push
add
scas
stos
daa
mov
fistps
fmul
pop
inc
add
jge
cmp
add
push
fwait
xchg
mov
add
add
arpl
add
pop
add
add
cld
shll
cmp
add
add
add
out
inc
xor
mov
add
add
sbb
add
adc
out
adc
repnz
add
xor
lahf
addr16
jl
add
and
mov
jae
pop
sub
int3
movb
cmp
mov
mov
dec
sub
andl
clc
mov
sub
push
adc
add
mov
add
out
repz
adc
fists
add
repz
mov
cmp
popa
jl
cmc
push
out
push
mov
mov
out
mov
jp
cmp
stos
inc
add
and
shll
add
insb
frstor
add
addb
aad
cwtl
fwait
in
push
add
stos
ds
pusha
add
cmp
add
test
xchg
stc
jge
imul
mov
data16
add
push
add
hlt
add
xor
cmpsl
and
mov
ret
jmp
icebp
cmpsb
add
add
dec
jne
loope
and
mov
popf
into
std
sub
add
movsl
fcoml
lcall
in
add
add
adc
inc
push
add
sub
xor
xchg
daa
sub
hlt
add
mov
add
add
aam
int
mov
sub
jl
add
mov
or
cmp
stc
popf
fdivrl
xor
and
mov
add
insb
cli
inc
add
test
enter
testl
inc
add
in
cmp
fcomi
daa
jns
add
xor
jl
aad
add
add
add
mov
cmp
push
add
add
mov
mov
jmp
mov
repnz
mov
out
popf
or
add
and
add
or
pop
lea
ja
inc
lea
xorl
jbe
mov
add
pushf
imul
push
add
fsts
add
add
loopne
bswap
bound
mov
int3
jnp
add
add
enter
dec
mov
js
iret
and
imul
add
fimull
add
add
mov
repz
xchg
outsl
ljmp
jmp
add
out
ja
adc
shr
ja
add
push
in
in
xor
add
adc
movsl
out
decb
insl
jne
add
xchg
add
popf
iret
push
fdivrs
icebp
mov
pop
push
add
fcmovb
xor
test
mov
jbe
add
std
je
daa
pop
fld
add
sub
add
lods
imul
add
sbb
leave
popf
sbb
add
xchg
inc
add
xor
ljmp
jb
js
inc
add
movsl
loope
add
adc
add
addr16
jb
out
sarl
push
mov
les
pop
sbb
lea
hlt
add
es
xchg
outsl
cmc
int
sub
add
mov
add
push
add
lock
sbb
outsb
mov
daa
xchg
aas
push
test
pop
mov
aad
pop
mov
mov
ds
popa
and
mov
add
add
cmp
loope
sub
or
iret
jae
test
rolb
add
inc
add
push
jns
pusha
add
pop
add
add
jecxz
add
adc
jecxz
add
jns
mov
test
xchg
add
add
add
add
in
adc
mov
mov
add
into
push
add
loop
add
xchg
add
push
out
add
clc
movsl
stos
add
jbe
jmp
add
xor
mov
mov
bound
mov
test
dec
pop
out
sbb
jno
add
popf
stos
add
popf
xor
add
stc
out
add
push
out
inc
add
add
data16
hlt
add
fcomps
test
mov
xorl
into
xor
in
cmpsl
sub
je
lcall
pop
jb
xchg
stos
loopne
add
mov
add
pop
lahf
xchg
and
or
mov
inc
add
add
mov
push
add
add
and
mov
add
pop
xor
mov
ljmp
fsts
jbe
push
add
add
mov
pushf
adc
inc
add
add
and
mov
add
jl
add
add
sub
add
movsb
add
add
add
xchg
add
add
add
in
add
push
adc
add
insl
sti
mov
dec
dec
fistpl
cmp
scas
imul
and
daa
repz
jo
adc
mov
lds
jbe
ret
stos
add
jb
mov
add
add
pop
inc
add
cmp
aas
or
rolb
pop
loopne
insb
mov
add
add
add
xor
rcl
add
addb
ljmp
mov
imul
mov
add
mov
add
mov
mov
mov
adc
and
cmpsl
pusha
add
enter
fxch
xor
xor
stos
js
add
add
add
mov
xchg
mov
mov
add
dec
add
mov
in
filds
add
mov
push
int3
sbbl
push
stos
test
ret
add
add
testb
call
das
fdivs
push
mov
xchg
add
add
dec
leave
add
dec
or
jns
repnz
stc
rolb
sbb
data16
push
imul
aad
add
inc
add
imul
and
out
cmpsl
sub
fwait
xor
addb
add
adc
add
cmp
add
or
add
add
mov
add
fcoml
sti
jns
add
push
jns
dec
repz
pop
movb
dec
mov
aad
fcomp
outsb
adc
jno
lahf
adc
lds
or
repz
add
gs
addb
cmp
mov
xor
ficoms
mov
ja
add
rolb
mov
add
hlt
add
add
addr16
add
sahf
leave
sti
mov
insl
cmp
data16
cmp
setg
dec
mov
mov
lret
pop
adc
cwtl
loopne
test
out
cld
ret
adc
xchg
add
add
mov
push
add
push
add
mov
add
ljmp
add
mov
push
add
out
mov
and
push
jmp
xor
sbb
add
dec
aas
nop
add
add
popf
cmp
sub
fdivs
fdivl
pop
push
or
add
loopne
mov
and
dec
push
add
add
mov
push
add
add
add
pusha
add
push
add
and
mov
lcall
iret
stos
addr16
jb
sub
jecxz
test
loop
loopne
mov
ss
add
mov
adc
jg
adc
jle
inc
addl
test
cltd
jbe
pop
jg
add
addb
inc
add
inc
add
sarl
add
cmp
cwtl
sbb
jmp
add
pusha
add
repnz
add
add
addb
and
sbb
xchg
lods
pusha
add
cmpsb
add
pop
shr
mov
add
sbb
in
cltd
out
mov
test
add
arpl
fnstcw
dec
ljmp
movsb
add
pop
aas
sub
dec
mov
add
arpl
loop
stos
jg
aam
movsb
add
xchg
jp
add
movb
fadds
add
sub
mov
push
add
add
add
mov
mov
mov
mov
mov
fimull
add
imul
mov
add
into
je
faddl
mov
jmp
add
add
data16
add
aam
adc
add
repnz
or
xchg
cmc
xchg
add
test
cvtps2pi
add
add
add
jl
ja
add
addb
push
add
sbb
mov
add
loopne
insl
adc
imul
test
inc
jbe
loope
scas
sarl
inc
jg
add
adc
push
add
xlat
stos
int
in
mov
lds
lret
mov
add
rolb
cmc
jp
test
add
add
jno
insl
mov
add
add
aad
lods
arpl
xchg
jmp
add
add
in
cltd
jns
mov
sub
mov
hlt
add
xor
cmp
push
fidivrl
fwait
cmp
add
ja
inc
add
ds
gs
ret
mov
cmpsl
data16
mov
add
add
mov
lea
jl
add
add
or
mov
mov
mov
mov
dec
jbe
loopne
jp
add
xor
push
add
fadds
mov
and
stc
in
sub
ret
les
lds
add
in
pop
cmpsb
add
add
jo
outsl
or
add
add
out
stos
fcompl
add
add
fnstenv
add
fistl
add
hlt
add
sub
push
add
test
lock
pushf
sti
inc
add
add
add
mov
outsl
stos
out
cmpsb
add
mov
add
mov
adc
add
mov
add
add
add
xchg
sbb
fsubr
std
inc
pop
sbb
add
inc
fs
xchg
push
add
add
ljmp
or
add
add
insb
inc
add
das
mov
add
cmc
and
push
add
insl
and
mov
xchg
and
mov
or
add
add
sub
sbb
fstl
xor
hlt
add
pop
popa
lock
out
xor
add
rcrl
popf
adc
addb
xchg
mov
sbb
add
loop
add
add
add
std
repz
xor
cmp
add
pop
les
inc
fidivs
and
js
jmp
leave
icebp
or
jmp
imul
pop
xchg
lcall
insl
cmpsl
jo
fcompl
xchg
add
bound
mov
add
inc
add
jge
aaa
cwtl
testb
hlt
add
dec
fcomps
mov
add
mov
jg
add
mov
iret
jle
add
add
add
mov
nop
add
mov
loopne
scas
push
add
outsl
xchg
add
sbb
push
lcall
loopne
xor
jno
test
cltd
xchg
add
push
add
jno
mov
mov
add
mov
add
jns
mov
and
sbb
call
inc
or
jmp
testb
push
outsb
sbb
insb
or
add
add
add
add
pop
push
jmp
cltd
jne
dec
inc
add
add
xchg
add
add
outsb
mov
add
mov
sub
fildl
xchg
mov
add
mov
or
push
add
jno
add
push
sub
in
in
xchg
xchg
in
add
adc
lcall
aaa
clc
mov
cmp
aaa
cmp
mov
gs
push
add
addb
add
sbb
jl,pn
or
shrl
adc
add
add
add
xchg
add
cmp
add
push
add
js
add
add
inc
aas
inc
add
add
insb
adc
ror
add
inc
stos
cmp
pop
dec
aad
mov
add
add
shr
pop
lcall
and
mov
add
add
inc
add
jg
mov
pop
or
add
add
and
mov
mov
int3
xor
fidivrl
das
insl
mov
jns
imul
cmpsb
add
enter
or
xor
adc
push
ljmp
cltd
push
jg
add
push
add
adc
jns
testb
add
add
repnz
push
testb
js
jecxz
mov
fisttps
jmp
lods
arpl
add
pop
lret
xchg
scas
xor
add
mov
ret
lcall
ds
out
dec
lahf
movsb
add
testb
fistps
xchg
insb
ret
add
push
add
add
add
mov
sbb
xor
or
and
dec
mov
add
movb
and
mov
add
jnp
push
mov
cs
insl
push
xor
outsl
mov
add
and
mov
pop
loop
sbb
dec
mov
sub
insb
push
add
add
add
mov
add
mov
inc
add
leave
outsl
pop
mov
hlt
add
sub
mov
mov
sbb
out
pop
ds
inc
jge
inc
jnp
out
and
mov
sub
lds
jl
mov
int
leave
jae
cwtl
iret
je
cmp
dec
push
dec
adc
nop
add
imul
fwait
sub
add
in
dec
jge
popf
lea
push
add
mov
mov
addb
add
cmp
add
jge
and
shll
add
push
add
push
add
popf
sahf
stc
jle
add
push
mov
movsb
add
js
push
push
xor
sub
mov
nop
add
add
popf
jnp
add
test
ret
lods
push
add
add
and
mov
sarl
enter
aam
add
mov
cli
add
xor
sbb
rolb
add
iret
push
fcoml
and
enter
push
ja
add
arpl
add
add
mov
add
xchg
xor
sbb
sbb
mov
lods
inc
mov
sar
mov
testb
xchg
mov
add
lahf
fisubs
or
add
scas
mov
fs
in
mov
push
add
bound
mov
addb
cld
cmp
push
stc
leave
int
sbb
lret
add
jnp
add
jb
aad
add
adc
mov
loope
xor
push
push
add
shll
xchg
add
and
mov
add
faddp
sti
and
mov
je
mov
push
test
adc
icebp
test
xchg
or
icebp
mov
add
sub
std
std
scas
fistl
rolb
mov
add
mov
mov
sbb
add
jg
loopne
addr16
or
add
xor
andl
ret
pop
mov
clc
mov
or
jnp
arpl
add
mov
js
addb
push
jne
int3
push
pop
adc
add
sbb
jl
add
inc
add
das
lds
mov
ficompl
cmc
push
mov
ja
loop
sub
mov
ds
das
mov
add
or
jge
add
lods
push
inc
add
rorl
xchg
add
mov
dec
and
inc
add
add
repnz
add
jl
jbe
adc
call
xchg
add
push
add
adc
add
mov
dec
inc
add
lods
xchg
in
pop
jg
sub
xchg
add
adc
add
repz
cmc
in
push
add
sarl
mov
sbb
adc
jnp
pop
sub
jno
into
add
inc
dec
mov
lods
inc
mov
mov
mov
sub
mov
add
pop
jg
push
add
insb
and
or
add
dec
dec
ja
add
test
cwtl
and
mov
loop
shrl
out
mov
call
testb
adc
inc
add
adc
dec
jp
add
add
mov
mov
sub
addb
add
arpl
popa
xor
jb
xchg
rolb
rolb
xchg
xor
mov
adc
jecxz
jmp
icebp
inc
push
mov
movsl
xor
scas
test
je
js
cs
sub
add
sub
testb
add
add
or
pop
or
pop
mov
pusha
add
xor
inc
sub
add
add
add
leave
jle
dec
int
rolb
addl
mov
mov
mov
jecxz
adc
dec
pop
or
add
add
in
jmp
popf
and
insb
stos
int
imul
dec
int
jnp
pop
enter
jne
pop
jnp
mov
add
push
add
icebp
cmp
add
clc
rolb
add
add
mov
jnp
add
add
pop
aas
outsb
call
add
ljmp
cmp
cli
add
dec
movb
add
add
pop
adc
adc
jl
les
sub
mov
popa
lahf
adc
adc
mov
add
mov
movsb
add
mov
xchg
add
ljmp
adc
jle
mov
scas
pushf
inc
add
pop
ror
das
dec
mov
cmp
shrl
add
lret
and
loopne
stos
addl
add
cmpsl
mov
adc
and
mov
xorl
add
pop
daa
movb
pop
rolb
cmp
testl
loopne
pop
xchg
add
mov
mov
add
sub
add
add
add
or
add
test
adc
dec
test
aas
xor
enter
out
mov
rolb
mov
out
mov
data16
push
movsl
lods
les
movsl
testb
push
add
je
inc
cmp
lret
stos
fists
outsb
adc
fimuls
xor
add
daa
cmp
mov
testb
add
daa
cmp
movsb
add
dec
aam
jb
push
add
movsl
mov
push
je
fucomip
mov
or
pop
dec
shrl
and
movb
mov
xlat
lock
ficompl
test
add
add
xchg
add
inc
add
enter
into
popf
stos
movsl
mov
mov
add
sub
gs
add
pusha
add
sub
jmp
add
add
rorl
pop
outsl
cmc
lods
push
dec
sbb
aaa
mov
inc
add
fisttpll
add
mov
pop
pop
push
add
sbb
shll
add
test
mov
ljmp
dec
lahf
pusha
add
je
sub
add
and
in
icebp
and
add
add
inc
mov
and
rolb
xchg
add
dec
int3
xchg
out
inc
add
adc
test
cmp
xchg
mov
js
add
add
push
inc
add
cmc
call
add
hlt
add
mov
bound
mov
jbe
sbb
fbld
add
testb
pop
repnz
cwtl
popa
lds
mov
jnp
and
lds
stos
xor
mov
jo
insl
jns
out
dec
xor
jl
add
xchg
add
cmp
mov
dec
cltd
rorl
sub
pop
mov
xchg
add
int
xchg
adc
ror
cmp
mov
cltd
xlat
mov
lock
aaa
sbb
lock
jb
inc
add
sbb
xor
enter
push
add
xchg
ds
lock
xor
add
js
mov
cltd
add
cs
bound
mov
adc
imul
add
jge
and
shll
pop
inc
pop
sbb
add
out
mov
add
in
pop
mov
jmp
sbb
add
sub
mov
inc
fnsave
add
imul
cld
push
add
or
inc
mov
test
adc
aad
sub
testb
enter
notl
loopne
testb
add
add
fwait
push
mov
pop
mov
outsb
sti
jge
je
jl
pop
and
rolb
inc
add
adc
mov
mov
or
cmp
fnsave
into
xor
and
mov
inc
add
paddw
jnp
add
mov
add
add
pop
subl
lods
addb
add
mov
in
or
jmp
add
xchg
dec
pop
addb
or
lahf
cwtl
jbe
jne
ja
add
das
das
and
xchg
add
cmp
mov
imul
int
shrl
insl
xchg
add
inc
jns
cmp
cltd
fsubrs
rolb
adc
add
jb
jle
jne
add
sub
pop
rolb
jae
imul
add
jb
pop
fnstenv
out
sub
add
add
mov
addb
push
add
add
add
movsb
add
in
loope
add
add
mov
cs
xchg
aad
add
addr16
xchg
ds
add
adc
mov
pop
xchg
jmp
add
add
rolb
mov
push
add
push
add
cmp
mov
add
pop
repnz
imul
add
mov
rolb
sub
in
dec
test
inc
add
mov
in
pop
jle
out
mov
cmpsb
add
add
mov
fstpt
add
add
push
add
add
in
dec
rolb
sub
mov
sbb
arpl
and
outsb
cmp
das
or
rolb
repnz
clc
aad
test
call
cli
sbb
pop
addb
add
add
or
pop
das
jno
shll
add
add
mov
add
add
mov
aas
inc
lcall
cwtl
pop
rolb
add
adc
sub
mov
jmp
lret
call
stos
clc
jne
sbb
ret
add
mov
movsb
add
or
or
jp
fsubl
add
mov
adc
dec
movsb
add
add
stos
rolb
sub
pusha
add
jp
subps
nop
add
xrelease
add
or
nop
add
add
cmp
jmp
cmpsl
call
dec
and
mov
mov
loop
inc
add
add
mov
lds
je
test
aam
and
mov
mov
xlat
mov
add
or
add
add
jge
pop
sbb
out
push
push
bound
mov
add
loop
dec
mov
mov
add
inc
arpl
frstor
xchg
inc
add
outsl
add
mov
rolb
cmpsl
push
aam
jno
add
add
mov
add
and
mov
movsb
add
fmuls
xcrypt-cbc
cmpsl
push
aam
test
insl
ds
jnp
js
jbe
dec
aad
jnp
push
add
outsl
add
inc
into
sub
dec
popa
addr16
mov
add
jp
loopne
outsb
or
mov
dec
movsb
add
jmp
inc
add
enter
cld
lods
push
aaa
rcrl
fisubrl
inc
mov
mov
insl
movsb
add
dec
les
movsb
add
popf
xchg
inc
dec
popf
addr16
jecxz
inc
add
add
cli
jo
add
mov
mov
pop
stc
cmpsb
add
test
mov
add
add
push
add
arpl
mov
or
popf
mov
add
cli
dec
jle
dec
mov
pop
mov
push
lcall
xor
add
shrl
mov
mov
das
setne
lcall
add
cld
mov
sub
addb
xchg
cmp
pop
sub
pop
addb
add
xchg
add
add
je
push
add
jne
add
push
push
sub
dec
dec
or
add
fs
daa
adc
sub
add
cmp
mov
mov
jnp
xchg
ficoms
fidivrl
mov
xor
add
add
das
in
push
add
or
std
and
mov
push
add
mov
ljmp
mov
mov
or
xchg
add
scas
jmp
sti
sbb
add
add
mov
add
or
inc
movsb
add
add
out
mov
jg
xchg
and
mov
movsl
sub
add
dec
rolb
mov
push
add
add
xchg
hlt
add
add
das
lcall
dec
pop
push
and
mov
std
lds
mov
or
mov
mov
dec
xor
pop
pop
cmpsl
cmp
add
test
mov
add
fld
add
movsb
add
jg
mov
xor
daa
inc
and
mov
cld
int
mov
add
push
add
add
aaa
stos
call
les
push
push
xchg
inc
xchg
cmp
hlt
add
cmpsl
mov
adc
int3
mov
add
xchg
nop
add
inc
add
jo
movsb
add
adc
or
andl
adc
push
cmp
add
add
stos
sbb
leave
dec
and
inc
add
inc
pop
data16
push
add
pop
pusha
add
push
data16
inc
add
jae
out
out
xchg
add
mov
mov
andl
ret
jno
pop
xrelease
jecxz
or
pop
movsb
add
sub
outsb
mov
bound
mov
xor
jmp
rolb
jo
inc
add
insb
sub
push
mov
push
and
push
sub
push
xor
rcl
dec
ljmp
hlt
add
push
add
add
and
inc
push
add
in
push
add
out
push
sbb
mov
addl
add
popl
add
lret
out
bound
mov
add
mov
pop
sbb
or
in
add
inc
add
jo
enter
xor
mov
dec
out
cmc
mov
into
add
mov
jle
push
add
xchg
mov
mov
mov
inc
add
cmp
mov
fsubs
add
add
dec
lock
jecxz
add
cmp
enter
scas
jp
add
xchg
mov
ret
addl
add
cli
and
mov
xor
nop
add
pop
lcall
pop
jnp
xor
insl
pop
and
add
mov
add
mov
lret
addb
je
dec
fcmovne
lods
pop
xchg
add
fcmovu
push
xor
cwtl
pusha
add
xchg
add
push
add
dec
out
movsl
cmpsb
add
es
repnz
xchg
pop
aas
adc
testb
add
lret
add
pushf
cli
adc
jmp
add
lahf
mov
pushf
add
or
pusha
add
add
inc
jmp
add
xor
fwait
stos
data16
add
inc
bswap
sub
xor
ss
add
popf
push
add
push
jae
add
inc
add
and
int3
or
add
fsubrl
ret
mov
sub
xchg
add
xor
mov
pop
imul
call
xchg
repz
aad
enter
and
mov
push
insl
push
push
add
add
cld
data16
test
daa
nop
add
mov
fwait
push
and
das
push
jb
sbb
inc
add
int
dec
push
or
icebp
popa
mov
repnz
aad
push
add
xchg
pushf
out
ret
repz
fisubl
add
xchg
subl
add
das
aas
lea
add
hlt
add
pop
cmc
xor
add
jo
and
fwait
mov
add
add
add
add
jge
mov
jle
jmp
testb
jns
repz
lea
and
mov
cmp
add
sbb
adc
sbb
add
mov
and
mov
aas
cmp
pop
mov
mov
daa
mov
std
mov
cli
rcrl
mov
sti
and
mov
fnsave
leave
pop
fcmovne
pusha
add
xchg
add
add
add
mov
add
add
add
sub
jp
dec
addb
add
sub
sub
sub
roll
sbb
stos
fdivs
inc
add
mov
xchg
push
cmp
add
pop
mov
and
fsubs
add
push
lock
add
repnz
jp
dec
dec
xlat
jle
push
data16
clc
inc
aad
dec
lds
rorl
sbb
mov
add
sub
pop
jns
scas
into
mov
int
and
test
sub
push
add
rolb
pop
lods
cmpsl
add
mov
add
push
xorps
inc
add
add
mov
lods
pop
lock
jne
loope
xor
add
sub
cmp
loop
pop
mov
pop
cmp
add
mov
inc
jbe
mov
add
aad
xchg
add
mov
add
pop
cmc
jne
daa
loope
mov
sub
push
and
mov
add
add
add
stos
popf
jne
add
dec
jnp
mov
in
and
mov
mov
add
add
pop
xor
sub
sti
addb
mov
add
and
mov
mov
add
xor
scas
jne
add
jmp
addb
add
mov
adc
movsb
add
jp
jbe
mov
add
cmp
sbb
mov
dec
add
mov
insl
adc
mov
and
mov
jae
cmp
push
add
add
add
push
cmp
mov
dec
sub
xchg
jae
jp
add
out
into
mov
mov
testb
push
or
addb
add
push
add
add
in
xchg
add
mov
adc
movb
xchg
add
mov
cmp
add
dec
add
add
jae
test
mov
inc
add
mov
pop
sbb
add
xchg
adc
pop
cld
pop
sub
ret
mov
cwtl
xor
add
sub
mov
add
mov
mov
out
loopne
adc
arpl
add
push
stos
add
mov
inc
adc
pop
jg
add
adc
add
add
sbb
add
push
jo
out
jl
add
xchg
jo
inc
add
add
add
cwtl
popa
pop
aas
sbbl
cmc
adc
adc
cmp
dec
sub
mov
loopne
and
mov
std
mov
mov
or
addb
inc
add
mov
addb
nop
add
dec
mov
add
add
mov
popf
js
pop
inc
mov
or
add
testb
fmul
adc
rolb
jne
add
rcl
sti
xor
in
shl
add
xchg
push
rolb
test
enter
jle
das
pop
je
adc
cmp
add
add
es
add
add
add
add
jge
or
pusha
add
mov
add
mov
rolb
xchg
mov
or
xchg
add
add
or
xor
movb
test
add
add
clc
cmp
aaa
pusha
add
add
add
add
add
sbb
arpl
xor
test
cmp
push
lock
push
add
add
jl
add
add
add
mov
sub
pop
cltd
dec
fstpl
mov
repnz
add
clc
push
pushf
lret
test
adc
dec
push
add
data16
xchg
add
mov
aad
add
mov
adc
and
dec
or
insl
add
pop
or
add
add
or
sub
pop
sub
sub
cmpsl
std
xor
call
ljmp
pop
dec
push
inc
add
popl
add
in
pop
sub
into
push
mov
add
dec
pop
xchg
pop
pushf
por
loop
in
inc
push
add
mov
add
or
add
push
aam
div
add
sub
dec
adc
enter
lock
add
pop
std
dec
out
in
pop
int
adc
mov
push
add
in
out
dec
sub
cmc
xor
out
ja
rolb
out
or
rolb
xor
push
add
fcmovnb
add
add
cwtl
rolb
addr16
test
cmp
shl
add
fiaddl
addb
gs
leave
inc
add
add
cmpl
ds
addb
add
mov
mov
add
fsts
push
add
xchg
nop
add
add
inc
or
mov
add
mov
mov
cmp
add
mov
in
add
lcall
add
add
ljmp
imul
outsb
lcall
orl
add
add
add
sbbl
add
lock
mov
sahf
push
add
xchg
add
add
daa
jge
cmp
inc
add
add
inc
add
add
mov
cmp
and
rolb
movb
cmp
xor
imul
inc
test
xor
cmp
jge
loope
pop
add
add
int
test
fmuls
jns
add
add
add
movb
adc
or
jp
les
jb
cmpsb
add
or
add
add
inc
add
add
jo
pop
adc
clc
adc
scas
push
cmp
add
xor
pop
xor
inc
mov
add
lods
push
iret
jge
mov
pop
sbb
cmpsl
insl
dec
add
mov
pushl
add
add
add
add
sti
pop
popa
sbb
aaa
test
add
scas
iret
push
insl
add
add
std
xlat
push
add
add
inc
add
add
cmp
out
mov
xchg
comiss
xchg
outsl
loope
and
rolb
sbb
iret
addr16
sub
pop
add
dec
or
cmc
ds
add
addb
add
or
dec
push
addr16
mov
js
adc
xchg
int3
scas
dec
lcall
or
and
add
leave
xor
jns
jge
push
adc
add
cmp
mov
jmp
pop
imul
mov
in
inc
jne
xchg
ljmp
jnp
add
pop
dec
mov
pop
mov
inc
add
mov
loopne
ja
loopne
mov
xchg
add
pop
mov
lds
add
inc
insl
mov
push
add
add
lcall
mov
test
adc
sbb
mov
add
mov
jg
sub
je
stc
mov
add
adc
adc
mov
pop
pop
mov
and
mov
adc
aad
add
cmpsl
and
addr16
add
push
xchg
mov
loop
pop
pop
mov
add
ret
je
dec
push
push
add
ret
mov
das
jmp
loop
out
add
movb
add
add
push
add
and
imul
xchg
loope
scas
rep
lods
push
push
jmp
add
and
in
iret
stc
and
shrl
push
add
xchg
add
loope
add
add
jns
fiadds
add
add
addb
int
cmpl
add
adc
dec
cld
repnz
mov
xchg
adc
xor
push
add
add
add
pop
add
sbb
xchg
add
push
cmp
add
js
add
adc
xchg
add
in
add
sub
mov
add
add
subl
test
jbe
cmpl
sti
in
fisubrl
stos
push
xor
jl
and
jle
cld
inc
add
xchg
pop
lock
ret
cmp
mov
mov
outsb
jns
rolb
mov
xchg
add
mov
int3
ret
sbb
cmp
mov
ljmp
push
inc
sub
add
imul
inc
add
add
xor
xchg
add
push
push
add
add
stc
adc
fimuls
jbe
add
enter
leave
or
sahf
push
popf
push
push
add
leave
or
ds
add
fsubp
sbb
add
add
testb
repz
pop
mov
add
mov
add
out
fwait
inc
sbb
out
jl
dec
movl
add
imul
pushf
pop
jb
jo
mov
fs
pop
xchg
pop
push
sar
add
push
add
add
cmp
iret
xchg
sbbl
mov
and
inc
xor
push
add
fisttpll
inc
push
add
add
insb
jmp
add
testb
in
xor
adc
mov
mov
push
mov
add
add
add
add
and
mov
ljmp
mov
dec
lcall
cmp
add
mov
xchg
mov
sub
mov
or
add
mov
fwait
mov
movsb
add
cmc
lahf
bound
mov
sub
mov
cwtl
adc
mov
cmpsb
add
add
jecxz
add
mov
add
xor
mov
cwtl
sub
adc
loope
xchg
mov
dec
xor
mov
add
pop
sbb
add
les
jg
pusha
add
adc
nop
add
push
adc
les
das
daa
mov
dec
test
add
sub
xchg
mov
xchg
add
adc
mov
loope
mov
hlt
add
mov
adc
xchg
ljmp
aad
add
cmpsb
add
add
add
add
jge
adc
in
and
test
insl
pop
ds
add
rorl
xor
inc
add
lret
add
fsubp
add
push
add
daa
and
cli
inc
add
add
push
mov
sbb
pushl
jae
add
inc
add
inc
add
add
and
adc
popa
mov
adc
and
dec
in
xor
cmpsb
add
mov
inc
fidivs
add
mov
mov
or
add
add
add
nop
add
push
popf
inc
lret
movsb
add
inc
add
xrstor
mov
in
or
adc
xor
fwait
lods
mov
push
mov
add
add
loope
add
add
and
rcr
lret
out
add
mov
daa
push
add
add
add
jno
mov
fstpl
push
jmp
add
rolb
jo
mov
aam
add
mov
add
mov
add
adc
jne
gs
fldenv
inc
or
and
in
sub
add
and
mov
add
movsb
add
xor
inc
add
mov
bound
mov
add
cmp
add
push
add
sub
push
add
pop
shr
xchg
add
cli
lret
lahf
mov
mov
add
cmp
mov
mov
push
add
mov
adc
add
add
mov
mov
pushf
add
mov
mov
daa
loop
mov
loopne
in
icebp
inc
add
montmul
cmpsb
add
mov
add
mov
lcall
jae
stos
hlt
add
dec
fmuls
in
into
stos
imul
or
lea
add
mov
aam
mov
add
out
je
leave
jne
dec
iret
cmp
mov
or
loope
lret
je
cld
ret
stc
mov
outsl
mov
aas
jo
xchg
not
add
dec
roll
add
cmp
add
mov
add
mov
adc
push
add
pop
sahf
pop
int
inc
fisttps
gs
and
xchg
add
sahf
dec
lret
mov
add
mov
add
add
pop
movsb
add
popa
movb
add
and
add
stc
lods
fsubrp
pop
out
aas
clc
dec
inc
movsl
lea
pop
jecxz
add
mov
repz
jbe
mov
pop
and
add
pop
es
enter
jmp
add
jl
add
inc
sub
add
add
enter
dec
pusha
add
push
xchg
lahf
in
add
add
add
add
xor
cmp
add
movsl
push
lods
cmp
sub
mov
ja
mov
lock
xchg
movb
xchg
movb
add
add
add
add
jne
mov
adc
popl
add
add
jg
add
mov
add
adc
add
mov
js
and
in
mov
add
or
or
into
push
inc
add
rolb
mov
adc
push
add
fst
add
add
aam
lret
lock
add
scas
addb
data16
jmp
movsl
or
add
cld
testb
dec
jnp
add
lods
mov
jno
add
dec
cmp
pop
movsl
bound
mov
in
add
adc
rolb
aaa
ss
push
add
add
icebp
adc
rolb
xchg
add
dec
adc
out
add
cmp
add
add
lods
aam
push
add
jns
sub
cltd
xor
lahf
data16
lahf
incl
popa
pusha
add
adc
add
and
jne
jp
cmc
add
cmp
push
or
add
and
push
mov
sarl
xchg
sub
add
inc
mov
shrl
add
outsb
and
cmp
enter
std
sbb
daa
outsl
push
mov
add
cld
jle
xor
mov
ds
lret
test
icebp
lods
mov
rolb
loop
or
xchg
add
mov
cwtl
cld
add
jae
inc
add
call
out
add
stos
mov
jb
into
jp
add
xchg
add
sbb
inc
add
xchg
add
cmp
pusha
add
add
dec
je
imul
sbb
push
add
mov
push
out
loope
aad
sbb
rolb
add
mov
add
in
movaps
mov
push
add
jae
add
add
imul
xchg
imul
sbb
mov
add
sub
pop
pminub
add
insl
in
add
mov
pop
sub
addb
cmc
in
sub
add
lea
les
sldt
mov
test
test
or
add
push
add
sbb
lock
sub
push
add
mov
jmp
lds
dec
je
insl
ds
dec
dec
inc
add
push
jnp
pop
in
lret
mov
xchg
cmp
add
orl
testb
add
jge
pusha
add
imul
adc
imul
xchg
jle
inc
cmp
addb
add
add
add
fildl
mov
jne
fcomi
fldl
and
mov
cmpsb
add
mov
in
rolb
add
inc
add
cmp
int3
sbb
into
hlt
add
pop
das
mov
movsb
add
add
add
int3
jl
add
add
mov
push
ficoml
add
sti
scas
loopne
jp
xlat
or
add
add
arpl
add
js
add
pusha
add
aaa
mov
xor
enter
add
add
add
pushf
cmpl
jp
push
add
add
add
cmpsl
xchg
pop
cmp
mov
add
add
add
adc
addb
push
add
gs
inc
add
push
add
mov
fmuls
jg
add
add
jle
ret
insl
jecxz
insb
pop
stc
daa
lahf
sub
xorl
dec
ja
std
das
call
add
push
add
sbb
cmp
aam
mov
mov
call
xor
addb
xchg
fisttpl
xlat
cmpsb
add
add
lods
out
adc
int
mov
lahf
jb
xor
sbb
add
add
add
inc
add
xchg
jl
jns
add
ret
xchg
add
imul
add
mov
jmp
arpl
and
in
ds
cmp
int3
cmpsl
outsl
jmp
mov
data16
loope
add
xchg
add
jb
fcoml
add
adc
in
add
in
fldenv
add
or
mov
add
xchg
add
sbb
adc
push
lods
adc
fwait
imul
imul
add
in
in
xchg
add
add
push
cmpsl
xor
pop
in
xor
mov
pushl
icebp
jbe
and
add
add
or
in
dec
jno
cmp
insl
je
dec
jno
mov
add
into
outsb
in
out
popf
or
pushf
jae
add
sahf
dec
dec
addl
frstor
xchg
and
add
lock
outsl
fstpl
pusha
add
ficoml
lea
inc
lret
ja
cmpsb
add
sub
mov
add
push
out
push
add
scas
push
add
add
cli
xor
push
add
add
push
rolb
fsubr
and
mov
mov
imul
pop
movsl
fcoml
fcompl
add
and
cmpsl
cmp
fnstcw
add
mov
jecxz
add
stc
dec
jns
cwtl
lret
fwait
into
jmp
pop
add
mov
add
add
pop
cmp
add
rsqrtps
lods
into
cwtl
shl
inc
add
mov
add
int3
xchg
cmp
mov
add
push
fiadds
and
in
push
cmpl
pop
xlat
push
add
lcall
mov
rolb
mov
xchg
mov
mov
add
ret
loopne
movsl
jae
ja
add
add
int
lret
cld
addr16
jmp
in
push
mov
cld
pop
sbb
psubusb
add
cwtl
jp
add
add
add
idiv
ret
add
add
and
add
inc
add
jg
inc
jnp
repz
add
add
mov
sbbl
or
fistpll
outsb
clc
dec
or
fiaddl
cmp
add
or
xchg
sbb
cmpsb
add
add
ds
out
add
mov
testb
add
lret
inc
add
jmp
push
lea
push
gs
xchg
jle
inc
and
mov
add
add
ja
add
in
out
xor
loop
adc
adc
xchg
pop
sub
xchg
mov
jnp
xor
addb
enter
sub
fildl
jmp
pop
icebp
cmpsb
add
mov
sub
out
fimuls
add
jecxz
aas
pushf
sti
jnp
push
inc
add
andl
pop
push
lea
scas
jg
out
iret
ret
fwait
pop
loope
scas
fucomip
dec
mov
or
ret
pushf
sbb
stos
movb
daa
adc
add
add
mov
mov
lcall
cmp
sti
cmp
pop
test
fcompl
xor
dec
rolb
add
inc
add
aam
fbld
inc
add
add
add
daa
in
out
fldl2t
aas
xor
add
add
add
jg
je
mov
add
dec
imul
pop
orl
sub
add
adc
ret
repnz
pop
lret
aad
mov
cld
jl
fucomi
jle
xor
das
push
scas
divl
aas
fistl
mov
sub
je
aas
insb
jle
add
ja
add
xchg
add
pop
clc
jne
or
shll
out
inc
cltd
mov
add
stc
clc
sbb
jl,pn
int3
mov
add
andl
adc
jl
add
dec
fdivrp
xchg
sbb
add
pop
sub
add
insl
sbb
or
insb
int
xor
inc
add
outsl
sahf
adc
or
add
add
add
add
sbb
sbb
add
add
inc
or
add
add
add
imul
add
mov
ret
xchg
cmp
loopne
and
dec
mov
fwait
ds
add
add
add
push
add
sub
stos
incb
fsub
add
jg
shrl
fstp
jns
cmp
or
les
and
cltd
out
sub
add
sbb
roll
xor
mov
cmpsl
push
add
lcall
pop
insl
test
add
or
loopne
rolb
add
mov
popa
dec
lods
pop
jge
leave
inc
add
add
add
int
fisubl
xor
jb
aam
or
xchg
add
push
add
outsb
jl
movb
outsl
push
add
cmp
add
fwait
ja
add
adc
mov
lds
mov
testb
add
add
mov
add
and
rorl
adc
add
push
adc
mov
subl
mov
mov
scas
mov
cmp
ja
add
add
cld
pop
mov
add
mov
xchg
mov
clc
repnz
add
jl
add
test
jecxz
and
or
in
fldcw
sti
andl
mov
rolb
in
inc
add
jno
pusha
add
add
xor
dec
fnstsw
jp
dec
movsl
mov
add
adc
sbb
jno
mov
inc
add
and
add
stos
std
inc
push
add
add
outsl
sub
testb
add
add
repnz
mov
push
add
add
add
adc
cmp
lods
inc
add
add
adc
push
add
mov
mov
nop
add
mov
mov
lahf
pop
fistpll
js
push
and
mov
sbbl
mov
push
enter
sub
mov
add
mov
push
add
repnz
arpl
movb
pop
xchg
add
jmp
lret
xchg
add
dec
sti
hlt
add
add
bound
mov
fdivrl
repz
sub
out
popa
fsubl
les
bound
mov
lods
cli
addb
out
test
ret
std
outsl
decb
xor
cmp
add
push
xchg
pop
jecxz
addb
xor
mov
mov
add
xchg
pop
pusha
add
add
add
cmc
jnp
bound
mov
add
xor
insl
push
add
repnz
lahf
push
stos
roll
mov
jmp
insb
xchg
add
add
int3
popf
and
cs
jbe
hlt
add
gs
xor
scas
inc
add
in
pand
movsl
ljmp
add
jns
imul
mov
add
dec
push
adc
mov
add
mov
cli
icebp
scas
cmpsb
add
cmp
and
mov
dec
push
add
ljmp
iret
jp
add
and
fidivs
cmp
popa
outsl
pop
adc
push
jmp
jmp
add
mov
mov
mov
ja
add
pop
add
sbb
sub
add
mov
or
or
jb
loopne
adc
inc
add
add
movb
inc
add
cmp
dec
or
iret
mov
lcall
cwtl
adc
add
addr16
dec
pop
add
mov
cltd
mov
mov
mov
addb
lahf
mov
insb
push
add
push
add
add
roll
add
cmc
adc
pop
loop
cmc
hlt
add
push
inc
add
aas
xchg
ficomps
add
add
push
mov
add
add
inc
add
or
add
lock
inc
add
or
add
pop
xchg
cmp
mov
inc
in
mov
mov
add
sbb
add
sahf
addl
add
addb
inc
add
jge
inc
add
add
push
add
call
add
mov
add
push
add
mov
xchg
sbb
add
add
out
jg
lret
mov
mov
and
cmp
dec
mov
fstps
jle
add
aam
call
mov
data16
jmp
add
add
add
lods
les
das
jo
inc
add
push
add
add
mov
or
das
push
popf
repz
sbb
add
pop
pop
mov
add
cmc
testb
add
pop
clc
inc
imul
add
add
popa
loope
ds
push
addb
add
and
rolb
jp
xor
xor
sub
jae
mov
out
movsb
add
cmc
inc
add
or
imul
addb
mov
pop
push
in
iret
fiaddl
popf
pop
inc
push
pop
xchg
push
cmp
add
add
push
xor
test
inc
add
ret
xor
dec
ds
addr16
push
add
iret
xchg
add
pop
add
mov
add
incl
data16
add
inc
inc
and
mov
xlat
mov
add
add
ljmp
add
adc
mov
add
xchg
add
add
push
out
test
and
mov
bound
mov
addr16
add
rcrl
cwtl
pop
jmp
testb
xchg
add
inc
repz
lahf
jae
pop
movsl
mov
add
mov
dec
mov
leave
out
imul
dec
lods
push
inc
mov
int3
std
sub
pop
mov
imul
xchg
xchg
inc
xor
mov
aaa
lahf
push
and
mov
add
add
and
fsub
outsl
push
jnp
xchg
mov
push
add
test
add
add
bound
mov
out
rolb
xor
cli
cwtl
fistl
cmp
add
add
mov
add
inc
pusha
add
add
add
xchg
add
add
sti
lods
call
lret
rolb
add
cs
js
add
mov
add
pop
fistps
cltd
push
outsl
push
dec
inc
add
add
pushf
test
add
and
mov
or
add
xchg
push
add
mov
push
or
in
xchg
add
add
in
jg
add
add
xchg
sbb
or
add
pop
ret
mov
mov
inc
add
adc
add
xor
add
pop
in
xchg
push
jg
cmp
add
add
mov
add
xor
adcl
pop
js
loopne
cs
add
hlt
add
fistpl
lock
push
mov
imul
add
add
cmp
mov
add
outsl
sub
mov
add
or
add
sbb
add
decb
mov
add
add
jns
jmp
lahf
shll
add
mov
mov
xchg
add
add
and
mov
cmp
cmp
xor
in
enter
faddp
mov
dec
push
add
out
sub
push
int
mov
add
xlat
jno
add
scas
rolb
inc
add
fiaddl
add
arpl
xor
add
fsts
mov
cltd
popa
arpl
iret
dec
out
jge
and
add
sahf
cmpsb
add
add
push
lds
jmp
outsb
fildl
mov
add
je
int3
add
sub
pop
out
ljmp
add
add
add
add
pop
jno
ret
movsb
add
add
mov
add
aaa
sar
nop
add
imul
sub
std
and
pop
push
hlt
add
add
add
mov
std
sub
jp
add
fnstcw
dec
mov
dec
out
xchg
mov
add
inc
nop
add
add
add
test
mov
call
cmp
ljmp
test
inc
mov
je
iret
addb
push
in
cmp
add
mov
cmpsb
add
cmp
add
cmp
inc
sub
shll
add
xor
and
or
add
add
aam
push
int3
and
testb
jg
add
fnsave
repz
clc
xchg
add
jae
repnz
add
add
sub
popa
inc
add
rolb
push
out
add
jge
cmp
fldcw
aaa
xchg
mov
mov
and
mov
xchg
gs
mov
pop
push
add
add
lret
mov
add
xchg
mov
test
add
xor
add
ds
jns
add
addb
push
inc
add
fisttpll
fcmove
fsubp
add
mov
add
arpl
inc
add
cmp
mov
push
xchg
into
inc
add
add
addb
add
and
mov
test
stos
cmp
movsl
movsl
xor
fsubs
add
mov
add
jle
out
movsl
lcall
mov
push
cmp
add
vpcmpeqd
and
fidivl
addb
aam
mov
int
mov
loope
mov
ja
adc
cld
mov
mov
pop
adc
loopne
and
add
bound
mov
add
dec
orl
test
clc
sub
sbb
jns
cmp
call
mov
add
add
dec
fdivs
push
mov
add
jnp
rolb
jl
mov
sbb
stc
cmp
cmp
popf
add
imul
add
dec
repnz
hlt
add
aas
push
xchg
inc
lcall
je
pop
mov
insl
dec
mov
out
sbb
add
out
sub
jno
and
cmp
add
add
add
cmp
roll
lea
adc
movsb
add
dec
pop
pop
add
pushf
fidivs
insb
xor
push
mov
pop
jb
test
mov
aaa
and
cli
testb
ret
pushf
push
adc
adc
jb
jg
jmp
and
int
fldcw
mov
sbb
push
add
add
add
add
xchg
fstl
lea
loope
sbb
movb
pushf
call
daa
mov
or
xchg
cld
dec
nop
mov
add
add
mov
mov
add
and
mov
rol
add
add
mov
adc
mov
adc
je
daa
int
lret
test
add
sbb
add
or
add
pop
jnp
movsl
mov
and
mov
rolb
xchg
add
add
in
cmp
in
and
gs
cli
mov
dec
inc
add
pop
jb
stos
pop
aam
jnp
mov
dec
ss
cld
pop
in
daa
rolb
mov
mov
mov
xor
je
jl
addb
shll
push
add
xchg
add
add
jbe
mov
xor
push
add
test
les
mov
shll
in
mov
ffreep
movsb
add
lret
jns
dec
sub
pop
sub
bound
mov
cmp
lods
hlt
add
add
dec
addb
stos
sub
movsl
mov
inc
add
pushf
inc
subl
jae
movb
push
inc
add
or
sub
sbb
xchg
in
xchg
scas
push
dec
fs
jp
xor
lds
add
popl
addl
arpl
int3
addr16
imul
stos
and
mov
addb
add
add
mov
into
cs
push
add
xchg
add
cs
jno
jge
fsubs
add
fdivs
adc
cmp
cltd
adc
clc
adc
add
call
pop
iret
mov
icebp
jae
mov
add
sarl
movsb
add
inc
cmpsb
add
pusha
add
int3
mov
xorl
and
mov
push
add
rolb
add
mov
cli
inc
add
add
add
inc
stc
rolb
es
push
jbe
leave
test
mov
imul
add
addb
jnp
in
xor
cmp
adc
xchg
inc
add
add
dec
unpckhps
icebp
lea
cmp
add
inc
insl
std
scas
xchg
clc
mov
inc
mov
add
add
inc
add
movb
add
xchg
lds
and
mov
lods
hlt
add
and
pop
jo
popa
sub
mov
imul
and
mov
test
add
add
pop
xchg
mov
mov
push
add
cltd
sub
enter
lods
addr16
addb
add
testl
addr16
test
or
dec
les
push
add
add
or
addr16
add
idivl
data16
dec
push
add
repnz
and
mov
mov
add
push
add
daa
push
add
add
gs
add
inc
add
imul
pop
push
add
out
inc
add
xchg
dec
pop
in
add
sbb
movsb
add
cmpsl
stos
pop
popa
les
mov
jmp
jae
int3
sbb
outsb
and
mov
mov
mov
sbb
add
xchg
js
or
lock
add
add
add
dec
jp
dec
testb
xlat
les
push
add
add
lret
popa
test
add
cmp
out
out
int
sti
das
lods
das
jecxz
lret
inc
aad
add
add
push
mov
stc
fdivr
dec
dec
aaa
xchg
add
sbb
add
add
inc
add
sub
xchg
mov
xchg
les
int3
mov
add
jns
add
xchg
and
movsl
inc
out
or
gs
popf
movsb
add
imul
in
lods
or
je
and
mov
sbb
mov
pop
xchg
add
add
sbb
out
mov
mov
inc
add
add
pop
jb
data16
outsl
mov
add
mov
pop
mov
dec
stos
jno
jnp
push
add
add
scas
outsb
push
testb
pop
cmpsb
add
add
lods
add
fisubrs
cltd
mov
xor
add
iret
aas
hlt
add
cmpsb
add
or
adc
ja
jns
lret
adc
dec
push
lahf
and
cwtl
dec
into
fisttpl
ret
pop
push
mov
add
inc
add
mov
rolb
stos
jge,pt
mov
push
add
sub
add
mov
mov
jg
adc
jle
mov
shll
push
add
daa
add
or
add
in
cs
pop
out
cmp
xlat
mov
dec
cmp
mov
mov
in
fiadds
xor
in
mov
repz
mov
mov
add
testb
rolb
mov
inc
add
inc
dec
daa
mov
test
add
add
add
push
add
mov
xor
fisttpl
xor
cwtl
test
scas
and
add
add
pop
push
add
add
add
add
pop
popa
sub
push
inc
loopne
or
mov
cmp
aaa
mov
int3
pusha
add
add
adc
dec
das
mov
popa
mov
fsubrs
push
add
mov
xor
pop
mov
push
addb
cmp
cs
mov
ficoms
sub
add
jne
push
add
sahf
inc
sub
rcl
movsb
add
pop
mov
movsb
add
add
mov
icebp
fcmovb
add
fwait
cltd
and
mov
add
repnz
mov
add
insl
stc
jno
jae
inc
add
dec
ljmp
add
mov
loope
xchg
or
lds
fwait
js
adc
cmp
lds
add
xchg
sahf
push
add
add
pop
ret
dec
mov
mov
int
stos
ret
add
or
data16
arpl
add
add
ds
add
mov
add
aam
cmp
add
add
add
add
dec
sbb
gs
xchg
add
scas
addl
sti
add
add
sub
xchg
cld
lods
out
add
add
testb
add
rcrl
paddsb
addr16
xchg
lcall
sub
in
or
add
inc
add
jle
testl
add
pop
inc
rolb
cmp
xor
fmull
push
movb
or
add
mov
sbb
add
test
ss
add
nop
add
add
inc
add
aaa
pop
sbb
inc
push
mov
cmpsl
dec
cmp
add
push
push
add
add
scas
push
add
clc
pop
ret
int3
fdiv
push
mov
mov
adc
into
bound
mov
sub
das
or
popf
and
out
adc
cmp
dec
xchg
add
ljmp
mov
sbb
mov
lds
xchg
xlat
add
mov
imul
scas
dec
push
add
jno
add
movsb
add
add
arpl
sbb
add
and
je
jbe
cmp
sbb
inc
add
add
add
jmp
pop
inc
xor
add
lock
pop
out
or
sbb
imul
mov
add
xchg
add
pop
and
sub
addb
add
add
push
lock
cwtl
insl
pop
jo
js
jnp
pop
jp
mov
add
add
add
mov
mov
mov
sub
pop
scas
jl
sahf
icebp
les
addb
lcall
push
scas
xor
testb
jecxz
add
cmp
add
mov
mov
dec
cmp
jle
add
pop
add
add
in
aas
pop
adc
jne
xchg
add
aam
jp
nop
add
stos
pop
adc
dec
mov
xchg
mov
inc
rolb
adc
ja
fsub
add
lea
in
add
push
add
add
jns
add
testb
inc
cmp
cmp
dec
sbb
add
add
add
aaa
fcomi
add
or
cmp
jb
dec
mov
mov
jle
add
add
cltd
add
out
cmc
jb
orl
mov
add
sub
sbb
dec
sub
pusha
add
les
pusha
add
push
cld
xchg
and
jne
jg
add
add
add
sbb
push
imul
das
pusha
add
std
aad
movsl
in
sbb
and
xchg
lahf
pushf
pop
pop
adc
add
xchg
insb
xrelease
add
add
add
mov
dec
cmc
scas
add
test
jo
fistpll
adc
enter
cltd
fisttps
pop
outsl
popl
adc
ret
push
jg
add
out
adc
addb
or
jle
jg
dec
addb
inc
adc
push
add
mov
add
pop
inc
jb
pop
jb
pop
add
mov
add
add
cmp
pop
cmpsb
add
mov
or
add
sbb
jmp
pop
dec
xor
out
push
add
add
sbb
add
add
inc
add
add
add
sub
or
xor
shl
add
rolb
dec
add
addb
add
pop
fwait
popf
into
test
mov
sbb
mov
int
add
or
mov
sbb
mov
scas
and
mov
addb
out
mov
add
outsl
btr
repnz
mov
sbb
arpl
aas
add
daa
add
dec
xor
mov
outsb
pop
dec
dec
loop
pop
mov
sbb
add
int
add
add
lds
outsl
aaa
mov
add
dec
hlt
add
inc
add
les
roll
xor
dec
add
add
and
arpl
xchg
add
cmp
aaa
xchg
fimull
repnz
fiadds
xchg
add
scas
mov
rcll
sub
push
stc
sbb
add
add
add
rolb
pop
jmp
add
dec
inc
test
call
xchg
lahf
inc
cmc
dec
pop
lods
enter
add
movsl
xchg
arpl
cmp
addb
add
aas
rolb
jg
ficomps
adc
jle
jmp
add
push
add
add
pop
dec
inc
dec
add
lret
gs
push
adc
mov
mov
push
add
jmp
loopne
jmp
leave
test
cmc
test
fs
add
add
outsl
lods
push
sub
jmp
jle
add
add
sub
js
rolb
pop
pusha
add
inc
dec
jp
je
pop
fildl
ds
sbb
add
testb
movb
adc
loop
in
cmp
ljmp
add
scas
inc
add
jl
inc
or
aas
inc
add
mov
sbb
mov
in
mov
cltd
jp
add
popf
cmc
std
xchg
add
add
add
lds
inc
test
and
mov
add
mov
mov
add
shll
inc
push
push
iret
mov
movb
add
dec
fistpll
leave
and
or
fnsave
cltd
mov
add
add
inc
jecxz
add
fstp
add
mov
add
add
shrl
add
fs
xor
sbb
lret
pop
test
clc
sti
pop
jecxz
add
add
inc
add
add
sub
add
hlt
add
mov
psllq
pop
cld
ror
mov
roll
pushf
inc
add
cwtl
leave
data16
mov
aas
shll
std
testl
mov
out
xor
rolb
pop
adc
xchg
add
ret
addb
addr16
adc
mov
push
add
leave
pop
and
mov
add
inc
mov
fisubrl
add
icebp
xchg
test
les
mov
xchg
sbb
icebp
dec
add
lahf
cld
inc
add
add
aam
sub
js
mov
adc
xchg
add
and
xor
adc
addb
int
add
out
mov
lds
mov
add
scas
addr16
mov
xchg
mov
mov
and
scas
scas
in
add
add
mov
add
fs
xor
fldt
adc
fisubrs
jae
add
add
add
xor
or
pusha
add
add
out
mov
mov
sub
xchg
addl
das
dec
xlat
or
addb
inc
add
ss
rolb
adc
push
orl
pusha
add
int
mov
adc
inc
add
cmpsb
add
lret
cmp
lcall
add
inc
outsb
movsb
add
cmp
dec
inc
std
cmp
negl
add
pop
adc
bound
mov
mov
push
add
aas
pusha
add
push
add
pop
sub
add
mov
push
add
add
or
cmc
adc
sub
dec
xor
adc
iret
stos
fidivl
in
dec
cmp
sahf
ss
add
and
xor
add
lods
push
repz
movb
add
add
jge
add
add
add
popa
sti
mov
in
push
add
call
mov
pop
sub
sti
push
nop
add
add
lock
pop
call
fdivrs
push
in
add
cltd
xor
sub
sbb
clc
loop
rolb
add
mov
jae
fisttpl
inc
lret
data16
imul
push
add
lock
shll
lods
mov
mov
add
pop
inc
add
and
loopne
mov
pop
push
add
add
add
lds
push
rolb
pop
mov
add
mov
mov
jae
sub
add
mov
xor
pop
sbb
add
pop
jo
cmp
loop,pn
pop
hlt
add
inc
add
jns
stc
aad
jne
adc
add
shl
mov
stos
sub
mov
inc
ret
inc
sub
sbb
out
and
ds
iret
mov
sbb
rolb
aad
or
pop
push
add
sahf
push
fisttpl
aad
sub
add
mov
cmp
mov
rolb
add
leave
std
sbb
sub
add
enter
repnz
or
sub
fmuls
dec
sub
loop
ds
mov
adc
xchg
cmp
mov
or
mull
add
mov
xchg
add
fwait
pop
stos
cmp
mov
sub
hlt
add
adc
dec
lcall
fildl
add
xchg
icebp
xchg
add
sub
add
test
out
adc
leave
add
in
push
lahf
jge
cli
sahf
xlat
movb
add
aas
mov
add
and
sbb
dec
data16
lea
popa
xchg
add
rolb
mov
idivl
scas
divl
jb
adc
aam
std
mov
add
add
add
inc
push
in
add
add
xchg
adc
sti
leave
dec
dec
ja
jg
add
push
add
add
in
xlat
insl
loope
add
mov
bound
mov
insl
imul
loop
mov
xchg
add
ljmp
mov
ds
fstl
add
add
xchg
add
popl
adc
jae
add
add
sbb
mov
out
sub
fs
or
xchg
add
fldcw
enter
xchg
mov
add
scas
cld
jnp
adc
push
jmp
mov
jmp
xchg
add
dec
xor
sbb
or
andl
and
imul
repnz
movsl
or
aam
mov
lcall
addb
ret
fwait
push
adc
add
fisttpll
movsb
add
stos
adc
gs
pop
movb
fstpt
mov
add
addb
sbb
add
sahf
inc
add
add
insl
add
add
sub
xchg
aad
out
and
add
mov
inc
add
out
loopne
sub
mov
jo
xor
in
jecxz
cmpsl
sub
add
jnp
adc
pop
cli
rolb
insb
dec
xor
xchg
jge
ljmp
pop
movsb
add
outsb
and
mov
lahf
ja
xlat
push
ljmp
mov
xchg
pop
cmpsb
add
sub
add
add
mov
pop
int
in
frstor
mov
outsl
cltd
testb
dec
inc
add
add
add
sub
add
add
add
cld
into
and
fidivs
xor
stos
hlt
add
add
loope
shll
pop
add
mov
rorl
xchg
add
add
add
xchg
add
xchg
popa
call
mov
sti
push
add
cmp
xchg
insb
add
aam
dec
outsb
push
mov
lea
inc
movb
imul
mov
mov
add
imul
sbb
xchg
pop
movsb
add
rolb
jnp
data16
lcall
and
loope
jle
sbb
add
dec
sbb
adc
push
add
scas
push
add
mov
xchg
jb
mov
adc
popa
pop
gs
addb
add
add
push
aad
xchg
add
push
ret
rolb
mov
nop
add
inc
add
sub
cmp
popf
inc
add
rolb
scas
stos
popa
pop
ljmp
lods
rolb
jmp
add
sarl
push
adc
sahf
or
add
lds
add
repz
xchg
add
add
jbe
fmull
inc
test
add
add
xor
rcl
cmp
mov
lds
add
pop
mov
pushf
rcrl
pop
scas
mov
add
add
addb
or
xchg
add
push
add
decl
mov
ret
add
add
add
add
add
pushf
mov
stc
and
mov
add
push
add
mov
cld
sbbl
add
dec
loopne
and
mov
cmp
add
add
arpl
add
mov
xor
add
mov
dec
jno
pop
out
mov
add
lcall
bound
mov
sti
inc
mov
mov
add
inc
push
add
pop
mov
stos
mov
add
sbb
xor
add
mov
add
add
mov
xor
add
adc
arpl
fidivrs
lcall
add
xor
add
enter
lret
push
jle
add
outsb
cmp
push
add
scas
push
cmpsb
add
push
jno
jns
xchg
testb
add
pop
push
cli
xchg
add
cmp
add
mov
mov
add
add
popa
xchg
add
mov
in
add
add
add
add
pushf
cmpsb
add
jo
jp
rolb
add
sub
add
dec
jl
adc
lcall
addb
add
mov
add
push
mov
add
mov
xor
and
xor
cld
ss
sbb
add
les
dec
aas
add
mov
sub
add
pop
add
stos
dec
cmp
inc
cmc
clc
jne
add
pop
or
mov
xor
inc
add
add
int3
xchg
les
jo
cwtl
push
sub
xor
add
mov
jl
add
xor
aaa
inc
add
clc
inc
add
pushf
int3
dec
aad
insb
cmp
in
testl
lods
mov
push
add
stc
in
pop
mov
imul
loope
mov
js
push
add
add
mov
sbb
add
jle
mov
add
int
dec
pop
insl
test
add
inc
add
add
jg
and
mov
add
pop
out
bound
mov
and
mov
inc
sbb
in
fcoml
mov
mov
pop
movsl
hlt
add
rorl
sbbl
add
cmc
mov
mov
fistpl
mov
jg
add
fcoml
data16
push
outsb
sub
dec
push
push
add
subl
scas
mov
add
mov
add
add
xor
enter
jg
fists
loop
cli
cmp
mov
xor
das
sbb
lcall
jp
jae
add
add
add
roll
mov
rolb
addb
add
cld
nop
add
sbb
add
mov
cmpsb
add
add
lret
in
mov
bound
mov
inc
add
mov
popf
sub
cli
out
movb
mov
sahf
add
mov
stos
sbb
insb
addr16
add
mov
lcall
ljmp
add
frstor
sbb
arpl
add
sbb
xor
add
add
add
rolb
mov
add
add
lods
leave
movsb
add
dec
lods
push
add
add
or
sub
mov
xor
add
mov
add
adc
add
outsb
enter
pop
adc
in
jb
scas
and
mov
pop
add
add
mov
icebp
pop
enter
sub
stos
or
sub
add
addb
mov
sahf
adc
pop
cld
pop
jnp
shrl
call
clc
pop
push
je
sub
int
inc
add
outsl
push
imul
add
add
jnp
add
mov
aam
stos
aam
into
xchg
cmp
scas
jns
pop
jmp
xor
cs
lret
lcall
mov
push
clc
mov
out
or
add
inc
add
pop
or
and
push
or
adc
clc
jge
inc
xchg
add
out
popf
out
in
pop
or
add
add
add
cltd
push
stos
cmp
add
mov
and
aam
push
mov
jmp
push
or
add
in
repz
aad
cwtl
aam
mov
add
add
add
add
add
fistps
add
add
add
add
les
inc
add
add
pop
dec
mov
or
jp
jo
pop
ja
add
add
ja
add
add
sbb
out
add
mov
lcall
adc
jl
sbb
add
imul
cmc
jns
xchg
add
mov
add
mov
xchg
fsts
pop
hlt
add
add
add
mov
add
leave
sbb
or
push
pushf
loopne
aad
add
add
xor
dec
rcrl
add
add
mov
sub
push
jb
js
add
lock
mov
add
aam
push
pop
inc
add
mov
je
je
fwait
addb
testb
rolb
sarl
inc
add
add
add
xchg
cmp
sbb
sbb
stos
sbb
push
mov
js
jp
imul
inc
jne
incb
mov
cmpsb
add
add
cld
dec
sub
add
call
add
xchg
data16
add
mov
push
add
add
add
push
add
sub
in
cld
insb
in
mov
push
inc
add
and
mov
pop
inc
add
rolb
lods
les
pop
loop
lock
jns
out
rolb
mov
mov
addb
add
xchg
pop
pop
push
add
add
add
cltd
fcompl
movsb
add
std
addb
pop
dec
jge
ds
stos
xor
pop
xor
fcomps
or
adc
arpl
test
aas
xor
lods
inc
add
and
mov
add
add
add
add
sub
lods
sub
loopne
sbb
or
sub
xor
decl
in
addb
add
test
add
add
sbb
out
inc
xchg
add
lcall
add
mov
add
xor
test
lds
ja
imul
out
add
inc
xor
cld
sbb
aaa
add
fists
add
loopne
fwait
aaa
mov
inc
add
notl
add
imul
add
add
add
dec
cltd
push
add
or
pop
sub
add
jg
add
push
xor
sub
or
inc
add
dec
cld
scas
jecxz
pop
jg
add
insb
or
add
inc
add
fidivrs
ja
loop
sbb
add
xchg
aas
adc
push
add
xchg
sbb
push
add
add
mov
out
shrl
sub
jne
add
add
add
movsb
add
dec
lds
ds
mov
add
and
cmc
xor
lret
xchg
add
inc
add
sti
addb
dec
cmp
insl
push
popf
loopne
cmpsl
cmc
sbb
add
or
add
mov
sbb
mov
dec
ja
inc
add
mov
dec
dec
mov
add
jl
out
inc
cmp
hlt
add
add
in
addb
add
clc
arpl
add
sbb
xor
lods
outsb
mov
pop
cli
pop
loopne
lcall
mov
push
sub
and
adc
bound
mov
mov
mov
cmp
cli
xor
cwtl
scas
mov
add
int
jbe
mov
add
mov
or
leave
bound
mov
in
mov
sub
dec
adc
and
inc
cltd
cs
icebp
in
int
add
cltd
dec
add
xchg
psllq
xchg
add
inc
ja
lods
adc
mov
sti
rorl
cmpl
mov
out
adc
cwtl
fs
or
testb
add
out
in
push
add
push
sbbl
outsl
rolb
jmp
add
rorl
cmpsb
add
popf
fbstp
sub
add
stos
pop
push
add
fcomip
add
cmc
sbb
adc
pop
sbb
add
and
mov
lds
out
pop
sbb
popf
pslld
insb
fdivr
jno
add
mov
add
inc
add
push
add
add
add
add
add
xchg
add
mov
add
add
aad
cmovo
mov
das
in
push
dec
adc
cmpsl
rolb
and
ja
cmp
cmp
ljmp
xor
dec
movb
mov
add
dec
dec
outsb
mov
push
push
fwait
jae
dec
mov
add
popa
fwait
pop
push
or
call
add
mov
add
outsl
mov
addb
push
add
insb
inc
add
or
mov
pop
fwait
add
dec
push
in
xor
subl
add
mov
inc
add
mov
add
pop
mov
jle
cmp
enter
jns
mov
add
cmp
push
add
xchg
add
in
mov
aad
or
push
add
loope
out
push
add
js
dec
adc
enter
sbb
testb
jns
add
sub
jno
add
and
pop
arpl
sub
icebp
pusha
add
pop
cmp
add
cld
je
sbb
mov
testb
xchg
mov
add
pop
je
aas
pop
inc
cs
movsl
popf
add
jno
int
pop
ljmp
stc
push
fmul
scas
int
add
addb
add
cmp
hlt
add
mov
mov
xchg
stos
xchg
mov
in
nop
add
pop
comiss
mov
imull
jge
xor
add
insb
push
pop
popa
or
inc
add
mov
add
push
out
cmp
add
add
mov
and
mov
je
xor
cmpsl
push
rcrl
js
dec
mov
inc
add
testb
pop
insl
xor
sbb
ficomps
and
mov
add
add
add
add
jno
pop
xor
dec
push
add
sti
shr
ds
add
add
push
add
add
add
mov
daa
xor
fisubrl
mov
dec
mov
rcll
lret
js
add
fwait
mov
pop
das
adc
mov
inc
adcl
inc
add
add
add
cltd
push
add
lahf
ja
add
jl
lret
pop
icebp
repz
xchg
dec
adc
ds
xchg
xchg
add
sub
bound
mov
fbstp
test
shll
push
add
add
jb
push
sbb
dec
sbb
mov
test
xlat
xor
jae
negl
cmp
and
add
add
lret
cwtl
imul
insb
adc
add
push
mov
xor
es
add
fiaddl
loop
ds
add
hlt
add
add
cmpsb
add
into
daa
in
add
lods
ret
lock
add
add
mov
or
sbb
cmpsb
add
arpl
ds
add
add
sbb
daa
loopne
pop
sub
lds
xlat
or
add
add
or
mov
lahf
rolb
sub
or
cmpsb
add
inc
add
adc
cs
cmp
add
and
add
inc
add
push
add
adc
cmpsl
add
add
add
lahf
jge
jno
mov
push
rolb
xlat
mov
add
jno
cltd
sahf
jl
xor
jle
sahf
mov
ret
pop
push
xchg
xlat
mov
mov
cmc
jbe
stos
dec
imul
pushf
jbe
sub
ret
jns
test
add
cmpsb
add
add
sub
mov
addb
jg
sub
test
mov
add
mov
add
and
into
add
add
pop
cwtl
push
pushf
in
cmp
sub
aam
lahf
popa
push
add
setb
mov
xor
pop
mov
cwtl
aaa
bound
mov
repnz
add
int3
clc
insl
xchg
add
std
inc
cmc
jne
rcrl
xchg
dec
cmpsl
sahf
sub
and
pcmpgtd
ret
sbb
add
nop
add
inc
push
test
add
mov
adc
push
add
inc
ret
mov
add
push
inc
add
scas
mov
xor
dec
inc
add
jb
mov
pop
loopne
or
testl
sbb
add
lahf
jae
std
sbb
lcall
add
push
add
cld
leave
inc
mov
add
add
dec
ja
add
mov
add
in
lahf
mull
add
jo
xchg
add
ret
lock
add
dec
or
jmp
mov
add
test
jnp
push
fwait
xchg
out
cmp
sub
mov
add
lahf
jge
lds
jecxz
add
xchg
ret
mov
add
lret
js
add
add
add
mov
or
push
mov
add
add
add
add
jecxz
data16
stos
push
in
sub
or
push
add
mov
outsl
inc
add
test
stos
pop
roll
lods
mov
loope
stos
ret
insb
cmp
mov
or
and
mov
push
add
push
add
add
adc
xchg
add
mov
int3
movsl
addb
adc
outsl
mov
add
add
add
add
add
sahf
mov
lcall
add
jp
add
add
inc
add
and
mov
in
mov
xchg
add
mov
mov
add
add
jmp
jp
adc
movsb
add
repnz
cmp
add
stc
sub
cwtl
mov
add
xor
add
xchg
add
add
call
xor
sub
sub
sub
xchg
mov
jg
jle
xor
lods
mov
pusha
add
outsl
les
mov
inc
add
add
mov
add
push
push
add
addb
je
xchg
add
push
xor
imul
pcmpeqw
xchg
add
jnp
fs
mov
out
xor
testb
lods
repz
push
rolb
call
push
mov
add
inc
add
stos
cli
push
out
xlat
sbb
pop
int
aas
leave
push
ficoml
addb
push
cwtl
push
and
inc
into
adc
cmpsl
jne
insl
xchg
add
add
add
add
add
sbb
in
push
add
and
mov
mov
pop
imul
cmp
add
jns
add
cmp
add
jns
dec
pushf
pop
dec
inc
add
testb
adc
xchg
mov
add
add
imul
or
push
pop
dec
lret
sub
add
mov
lods
addr16
push
out
mov
lods
scas
test
test
ds
adc
cmp
add
jl
add
testb
mov
lods
inc
add
movsl
lods
sbb
or
add
subl
jl
add
sbb
stos
jae
add
sti
and
fdivrl
imul
add
lret
add
add
xchg
outsb
or
test
pop
les
in
jne
lods
notl
add
adc
ret
testb
mov
mov
lcall
add
sub
imul
cmp
add
mov
fidivl
sti
out
and
mov
jp
pop
arpl
adc
aaa
addb
js
dec
mov
orl
sub
or
imul
push
add
add
sbb
dec
mov
mov
sbb
add
add
dec
popa
stos
cmpsl
call
idivl
cvtps2pd
or
inc
add
les
dec
das
push
sub
jbe
jmp
in
sarl
mov
loop
push
out
inc
add
mov
dec
mov
mov
inc
aas
push
in
pop
in
shrl
add
into
shl
sbb
cmpsb
add
imul
pop
lods
iret
add
mov
add
or
sti
mov
push
xchg
add
mov
outsl
and
mov
femms
pop
into
mull
add
add
movsl
loope
and
add
popf
imul
pop
push
cmpsl
xchg
add
add
scas
pop
int
aaa
out
sub
add
add
xchg
loop
pop
hlt
add
outsb
shll
jne
add
add
add
add
pop
sbb
sub
xchg
add
add
add
add
inc
add
data16
xchg
mov
add
sub
mov
push
add
ret
inc
add
mov
icebp
aad
add
add
add
mov
enter
jb
inc
add
testb
add
js
pop
shl
insb
add
add
add
add
jae
add
dec
dec
xchg
add
and
mov
jne
add
add
addb
fpatan
movb
mov
jp
stos
imul
adc
add
add
enter
mov
stos
addb
aaa
inc
add
cld
mov
add
add
cli
icebp
imul
mov
loop
cmp
mov
add
inc
mov
and
ds
xchg
add
rolb
push
or
out
xchg
pop
push
add
add
movsb
add
xchg
leave
cmp
add
push
dec
sub
ret
rolb
imul
mov
add
cmc
pop
adc
les
aam
jne
add
add
or
add
fucomp
jge
add
lahf
or
dec
xor
xor
scas
mov
lret
sbb
xchg
push
xor
jle
mov
loopne
pop
hlt
add
outsb
sub
add
dec
push
push
mov
or
test
push
add
dec
jo
sub
mov
icebp
hlt
add
add
or
sub
add
sbb
add
add
or
inc
inc
add
add
cmp
add
je
push
add
push
add
sahf
dec
movsl
jb
add
pop
ljmp
ljmp
sub
out
xchg
add
clc
sbb
add
add
cmp
nop
add
cmp
add
ret
adc
and
dec
xchg
nop
add
pop
icebp
mull
aaa
iret
mov
sbbl
dec
rolb
pop
dec
imul
xchg
movsl
sub
cmp
add
movb
and
mov
sbb
push
add
ja
and
mov
sahf
push
add
out
ret
add
add
add
in
add
nop
add
add
and
mov
ja
mov
inc
add
mov
add
add
mov
mov
adc
test
int3
je
lret
cmp
paddq
adc
mov
mov
add
or
cld
xor
icebp
sti
les
sub
scas
dec
cmp
mov
add
dec
cmp
add
fwait
sub
cwtl
mov
cmc
and
cmp
push
mov
aaa
pop
imul
or
push
add
adc
repnz
addb
dec
call
cmpsb
add
add
test
hlt
add
add
pop
sub
pop
add
cmp
push
fisubrs
or
add
add
dec
cmpsl
xor
rolb
or
lret
add
mov
aad
sub
add
pop
test
pop
daa
pushl
mov
scas
mov
sbb
push
jnp
stos
movsb
add
lahf
jo
outsb
pusha
add
ljmp
inc
add
test
add
mov
decl
push
and
inc
add
out
and
xchg
add
jno
mov
add
cmpsb
add
out
fimull
add
sub
add
add
add
jecxz
mov
add
add
and
mov
sub
add
sub
sbb
fwait
inc
data16
scas
dec
mov
add
add
add
leave
adc
scas
aas
mov
movsb
add
cli
ljmp
jns
hlt
add
add
add
ljmp
mov
movsb
add
ja
dec
xchg
std
scas
cltd
mov
arpl
push
add
add
and
or
aad
xor
xchg
mov
mov
inc
mov
aaa
mov
add
jae
movsl
movsl
jmp
movsl
jnp
push
add
add
and
cltd
mov
jbe
adc
add
stc
cld
std
and
ret
add
dec
loop
lods
into
add
add
and
push
add
cli
adc
add
cmpsb
add
pop
adc
xchg
xchg
xor
mov
out
stos
bound
mov
sub
int
inc
inc
add
cmp
rcrl
lea
xchg
add
clc
sub
or
loop
add
mov
out
das
inc
add
jle
add
cmp
ja
ret
add
jae
repz
daa
inc
add
fwait
addr16
jg
add
mov
lods
sub
add
dec
and
mov
add
inc
add
icebp
dec
stc
icebp
mov
add
add
push
add
hlt
add
add
stos
fs
jae
jne
fsubrl
rolb
add
and
mov
jl
push
add
or
ret
jmp
add
mov
mov
add
addr16
mov
xchg
jnp
push
mov
lods
sbb
movb
add
add
add
jns
add
jmp
add
add
aaa
xchg
pop
push
add
lea
fstpl
icebp
outsl
je
cmp
jl
sub
add
or
cli
rolb
add
xchg
lods
push
lret
mov
rolb
repnz
adc
mov
lret
add
add
and
dec
out
add
push
cmp
cmp
or
rorl
lock
loope
in
xchg
mov
add
add
mov
sub
jne
xchg
sbb
lock
pop
push
add
cmp
add
push
add
int
repz
cmp
fistl
add
add
mov
add
out
loope
loop
jo
je
enter
add
mov
cmpsl
mov
das
rolb
mov
add
insb
mov
sahf
int
test
jae
rcll
pop
xchg
jno
mov
mov
add
add
push
add
test
add
dec
dec
jg
test
add
add
mov
aam
bound
mov
pop
push
fstps
add
in
xchg
addb
aam
das
dec
imul
lea
leave
dec
psubusw
mov
add
add
jl
add
pop
outsb
cmp
pop
mov
cmp
and
out
lret
add
rolb
enter
xchg
adc
bound
mov
add
add
add
add
cmc
adc
jg
add
loop
jg
shl
lcall
mov
xchg
les
mov
dec
movb
push
add
or
add
rolb
roll
ret
adc
lds
add
or
mov
add
mov
lods
sub
sbb
add
aad
jge
add
add
pop
jo
push
xchg
add
lods
rolb
jmp
add
pop
or
adc
arpl
flds
push
aad
test
add
sub
dec
mov
add
fidivl
mov
test
hlt
add
lods
jle
fildl
in
sub
mov
jns
addb
mov
xchg
add
cmpsb
add
add
add
popf
inc
mov
rcrl
jmp
cmp
jns
add
add
loopne
les
jg
sub
loopne
call
ret
xchg
cmp
add
lds
cmp
add
add
pop
jno
add
add
imul
cmp
leave
stos
rolb
out
scas
arpl
std
adc
call
fsts
add
adc
sbb
add
fcoml
pop
data16
add
add
xchg
pusha
add
xor
and
add
mov
clc
cwtl
push
add
add
add
or
add
jge
add
mov
loope
pop
sarl
mov
add
test
add
add
mov
add
addr16
fstps
jmp
lret
jge
pop
fistl
add
push
add
add
add
dec
sbb
jmp
dec
repnz
sub
mov
push
xchg
jnp
cs
mov
sbb
add
and
adc
pop
xor
jecxz
pop
popf
lahf
fsubrp
lret
add
ja
addb
fisubs
mov
in
push
add
add
aas
gs
ror
add
movsb
add
xchg
xchg
add
add
and
jns
negl
in
in
and
loopne
mov
nop
add
or
jne
rolb
sbb
add
aad
inc
add
xlat
push
icebp
inc
in
push
jb
aam
cs
add
lea
push
add
mov
add
data16
add
test
add
pop
xchg
cmp
add
imull
les
out
adc
pop
lret
movsl
push
mov
pop
sbb
dec
jecxz
fisubrs
mov
jge
mov
test
add
add
or
ja
pop
rolb
sti
std
xor
and
mov
out
clc
test
adc
cld
jecxz
xlat
repz
cmc
jbe
jl
add
insl
addr16
mov
add
mov
mov
loopne
cmp
or
enter
rolb
sar
lods
mov
jge
add
jge
pusha
add
bound
mov
add
sti
mov
in
jle
jnp
xor
add
inc
add
add
dec
mov
ret
das
imull
int3
push
mov
repnz
cmp
add
add
aaa
xor
xchg
add
aas
les
push
out
mov
into
mov
inc
inc
add
cld
inc
push
add
sbb
add
cmp
mov
ficoms
fidivrs
mov
js
addb
add
add
loop
int
mov
mov
ljmp
add
call
push
add
push
add
add
or
ret
cmp
addb
lods
je
jge
add
add
push
pop
in
mov
lahf
test
mov
lock
add
mov
add
and
jp
or
ss
sarl
add
fdivs
mov
arpl
add
add
pop
loop
andl
into
inc
dec
fdivrs
sub
jge
test
mov
add
pop
addl
testl
stos
int3
pop
sbb
push
mull
add
cmpsl
mov
out
mov
pop
xchg
mov
cmpsl
ret
aad
int
insb
inc
add
stc
or
xor
fmul
fiadds
popa
int
add
mov
add
or
adc
das
js
add
add
pop
jl
adc
inc
add
cmpsb
add
adc
jmp
jo
sub
lret
mov
insb
mov
mov
xor
push
rcll
cmpsb
add
stc
sbb
pop
addr16
cmp
xor
adc
sub
cld
scas
cmp
out
or
add
gs
add
scas
daa
jne
bound
mov
add
mov
push
add
push
add
dec
das
pop
adc
outsl
aad
cs
dec
movb
std
jmp
insl
mov
jno
popa
xor
pop
inc
add
in
hlt
add
add
and
mov
xor
mov
clc
je
rolb
loop
add
add
sbbl
add
adc
ljmp
jmp
mov
mov
aas
mov
out
pop
jno
add
frstor
enter
add
mov
xor
pop
mov
mov
add
add
arpl
add
xor
mov
mov
push
int3
jo
cmpl
jo
stos
outsb
adc
aam
out
imull
das
fcmove
xor
add
fld
add
add
push
add
hlt
add
mov
fimuls
xlat
cli
pop
pop
jle
fs
add
add
lret
fdivr
cmp
ljmp
in
pop
xor
nop
add
jmp
addr16
push
adc
mov
jno
call
fdivr
iret
das
sti
test
jo
pop
sub
mov
mov
hlt
add
loopne
movb
mov
add
int3
mov
jo
rolb
push
xor
jnp
xchg
add
or
inc
insl
jg
add
mov
jle
and
jmp
sub
test
movsl
push
rcll
std
testb
push
add
cwtl
dec
lret
or
xchg
add
mov
add
add
add
dec
jno
add
add
in
mov
jae
add
pop
adc
xor
add
jno
inc
add
ret
and
mov
mov
pop
cmc
test
add
scas
mov
push
call
insl
lods
jbe
and
mov
xlat
movsb
add
xchg
scas
sbb
add
and
mov
ficompl
lods
lds
loop
addb
dec
nop
add
mov
xchg
mov
inc
add
lock
in
clc
clc
jg
test
rolb
aam
test
outsb
es
add
add
daa
ds
push
mov
and
lods
mov
inc
pop
push
push
add
loopne
mov
adc
mov
int
cli
add
xor
cs
cltd
xor
loop
xchg
test
add
cwtl
arpl
add
add
adc
lahf
inc
add
mov
add
add
xchg
xor
add
add
es
xchg
add
mov
data16
nop
add
loope
add
lcall
add
push
add
adc
sbb
cmp
repnz
add
add
add
push
notl
pop
movsb
add
outsb
stc
int3
mov
add
mov
cmp
push
add
add
rolb
test
orl
adc
or
in
add
sub
int
rolb
xor
mov
add
xor
sti
add
add
jle
cs
add
cld
mov
aas
sti
lock
mov
aaa
and
lock
add
inc
add
mov
add
fwait
cmc
jnp
mov
add
xor
repnz
imul
movb
push
sub
dec
jae
jp
addr16
add
add
daa
jno
pop
dec
mov
mov
cltd
fdivr
cmp
mov
mov
sub
push
add
add
mov
rolb
add
add
ret
sub
test
xchg
inc
push
xor
xlat
loop
testb
mov
add
add
and
xor
xor
lods
add
mov
lea
mov
sbb
out
mov
test
add
lock
add
xchg
cmp
xor
add
mov
in
lods
out
inc
add
aam
push
xchg
pop
daa
cmp
add
test
clc
loope
push
cmp
xor
add
popa
addb
add
add
push
int3
mov
sbb
nop
add
stc
out
addb
add
and
mov
mov
push
outsl
or
pop
xchg
add
rolb
mov
add
not
add
ljmp
icebp
lahf
sbb
push
add
je
add
add
mov
or
cmc
xor
in
lcall
mov
bound
mov
add
xchg
add
mov
and
mov
or
sbb
sub
add
sub
add
add
int
data16
mov
cltd
sahf
sti
sahf
jae
or
add
cmp
push
and
inc
movsl
mov
outsl
sbb
add
add
add
js
add
add
jl
pop
stc
dec
dec
sub
lahf
ja
add
into
push
add
pop
jp
fdivrs
filds
add
cwtl
lods
shr
leave
dec
imul
jae
lea
mov
stos
xor
mov
add
add
jge
pop
xchg
lret
dec
add
mov
sub
fwait
xor
fpatan
decb
sbb
add
fisttpl
add
cwtl
cmp
add
mov
gs
ret
rolb
addb
std
inc
add
push
add
or
push
iret
push
add
jb
subl
add
dec
and
cmp
mov
cmp
gs
fadds
pusha
add
mov
rolb
loopne
jne
and
mov
sub
addb
or
popf
adc
imul
mov
sbb
js
fldt
dec
iret
cmc
sub
int
add
add
sub
and
fs
add
mov
add
add
mov
add
mov
stc
mov
testb
add
sub
outsl
mov
dec
lea
push
add
add
add
stos
aam
movsb
add
lods
mov
mov
movb
or
movsl
iret
jl
or
mov
add
mov
or
hlt
add
call
fucomi
addb
add
add
add
ret
mov
loope
inc
sub
jo
cltd
push
push
js
out
mov
fucom
add
repz
ljmp
out
into
sub
sub
push
repz
push
in
punpckhdq
ret
int3
cmp
lock
add
add
add
scas
xchg
adcl
push
add
or
push
sbb
mov
sahf
popa
pop
adc
jns
stos
stc
jmp
adc
add
xor
mov
cmc
sub
push
add
push
add
adc
push
outsl
pushf
das
and
and
dec
cmpsl
jbe
cmp
cli
ds
push
add
xor
add
xchg
jns
inc
insl
xchg
add
enter
mov
add
dec
imul
movsl
mov
lret
mov
mov
dec
sbb
and
xchg
mov
out
stos
add
mov
mov
xchg
or
out
jno
jns
inc
add
add
loop
add
movsl
sub
xchg
add
jbe
in
xchg
cmc
push
jae
push
add
xchg
push
add
inc
cmp
stos
lock
mov
cmpsb
add
sbb
stos
add
mov
mov
push
add
and
incl
add
add
pop
cld
mov
lret
jns
ljmp
out
lods
ds
ret
test
sbb
data16
add
cmp
add
mov
data16
or
hlt
add
dec
inc
add
xchg
add
mov
test
add
adc
mov
push
add
in
add
xchg
outsl
push
inc
mov
push
inc
mov
jns
ss
add
mov
clc
sbb
lods
pop
push
mov
insb
push
shl
push
fbstp
add
loopne
out
pop
and
mov
mov
fld
mov
popa
scas
xchg
xchg
add
fnop
add
add
das
sbb
shll
les
fmuls
inc
add
outsb
mov
pop
rol
mov
add
cmc
outsb
scas
mov
add
push
xor
and
mov
insb
cmc
cli
push
mov
mov
add
pop
je
jbe
or
add
jg
xchg
jb
mov
mov
mov
lret
outsl
dec
aas
mov
pop
dec
lds
add
