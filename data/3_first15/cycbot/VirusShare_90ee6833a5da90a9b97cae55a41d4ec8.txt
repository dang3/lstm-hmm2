xchg
in
dec
out
movsl
fwait
lock
pop
insl
adc
cmp
jg
add
sbb
bound
mov
shl
mov
add
add
add
xorl
mov
mov
add
dec
or
add
mov
add
loop
mov
insl
aam
and
mov
cmp
xchg
notl
add
pop
andl
add
cmp
mov
adc
rolb
mul
sbb
add
jno
add
test
sub
lods
jle
sahf
out
sub
jo
mov
sahf
test
cmp
rcll
add
sub
enter
mov
pand
dec
push
shll
add
es
leave
jo
mov
jg
lock
mov
inc
popf
push
add
sbb
test
sbb
add
jns
adc
mov
cwtl
and
out
stc
mov
add
call
popf
jge
gs
hlt
enter
inc
add
xchg
dec
ja
insb
jp
fcoms
mov
pop
addl
loop
mov
jle
lock
mov
mov
add
pop
sbb
addb
rcrl
mulb
inc
jno
std
aam
add
gs
std
inc
add
dec
inc
loop
mov
mov
inc
add
add
or
and
adc
mov
repnz
imul
inc
pop
out
add
mov
pop
scas
int3
rolb
mov
add
outsb
es
cmp
cld
int
add
mov
sti
xor
dec
and
mov
pop
negb
pop
sti
xchg
dec
mov
push
add
xchg
in
add
ljmp
outsb
push
add
std
iret
jno
mov
push
dec
cmc
jo
mov
add
add
mov
mov
mov
jge
test
push
push
add
frstors
pop
popa
pusha
add
mov
pop
addr16
call
hlt
es
add
mov
rorl
jg
add
mov
add
insb
ss
ffree
and
scas
jno
adc
mov
xchg
adc
mov
xchg
movsb
decb
xor
in
sub
clc
sub
mov
add
add
loop
mov
gs
add
mov
mov
popa
xchg
xor
mov
inc
cmp
int3
dec
and
pop
insl
leave
aas
in
push
jb
mov
mov
sbb
pusha
add
xchg
push
adc
mov
adc
mov
add
mov
loop
mov
sahf
sbb
gs
rolb
mov
lods
sbb
add
je
jo
mov
imul
loopne
mov
add
sub
repz
mov
push
jb
mov
inc
jns
nop
add
mov
pop
push
enter
mov
pop
enter
insl
shll
mov
clc
sti
jnp
jae
dec
push
add
add
fimull
rolb
mov
outsb
xchg
add
inc
and
mov
lds
add
pusha
add
add
add
mov
jg
js
mov
cwtl
adc
mov
or
and
and
mov
add
cmp
jecxz
cmpsl
or
movsl
stc
ret
ret
std
dec
and
adc
jbe
fs
cmc
fs
xchg
cltd
mov
sub
and
mov
add
out
add
mov
clc
sbb
add
mov
ds
in
push
stc
rolb
mov
xchg
xchg
rorl
loope
add
nop
add
ss
sbb
mov
add
sbb
loope
mov
add
sub
inc
xor
mov
movsl
stos
jb
mov
mov
arpl
pusha
add
mov
or
rolb
mov
cwtl
mov
dec
fcmovne
clc
jnp
add
fucom
sbbl
inc
add
pop
loopne
mov
xchg
and
mov
mov
out
push
popf
imulb
aaa
or
add
mov
add
add
stos
xlat
add
mov
cmp
dec
dec
loope
iret
or
leave
ja
add
jle
lds
add
mov
jle
xchg
add
add
push
add
movsb
or
cmp
outsl
adc
pop
jbe
mov
mov
loop
mov
mov
add
cmp
mov
mov
xchg
lock
add
mov
mov
popa
lcall
insb
rolb
mov
add
add
mov
adc
mov
add
xchg
add
adcl
dec
mov
mov
mov
sbbl
mov
jbe
xchg
add
lock
repnz
fwait
cmp
std
add
rolb
mov
xchg
nop
add
mov
and
mov
shl
mov
xchg
inc
cwtl
adc
scas
int3
loop
mov
sub
jno
ret
sub
add
cmpl
std
push
mov
mov
xor
mov
add
add
add
mov
mov
mov
pushf
xchg
cmp
inc
fwait
sub
addr16
jo
mov
test
add
cmp
mov
pop
ja
pop
mov
sahf
movl
popa
in
adc
sbb
out
rolb
mov
add
add
add
or
add
dec
xchg
movb
dec
or
add
add
mov
and
pop
es
icebp
popa
add
test
mov
pop
sub
fldt
fisubrl
pop
jne
dec
mov
popf
es
cmpsl
adc
mov
js
mov
daa
push
add
xchg
or
jp
sbb
add
add
pop
je
int3
add
mov
xchg
or
add
mov
mov
lcall
cli
scas
into
lea
lret
in
push
iret
aas
push
add
iret
lret
aam
mov
cmp
sahf
sub
mov
mov
mov
lds
out
pop
loopne
mov
jge
add
push
les
mov
push
add
pop
fbstp
mov
outsb
inc
add
mov
pop
pop
cmp
pop
scas
out
int
aas
mov
std
mov
add
cwtl
int
xchg
loop
mov
mov
jg
ljmp
fistl
jae
xchg
rolb
jle
pop
lret
xchg
cmp
outsl
add
inc
add
mov
enter
xchg
sub
mov
add
jns
xchg
add
mov
mov
add
out
daa
pop
je
mov
fs
inc
xchg
jecxz
add
ss
cltd
out
icebp
fisttpl
cmp
hlt
inc
add
popf
sub
add
jns
add
xor
mov
movsb
jb
mov
add
cmpsl
inc
add
in
cld
lcall
xor
int3
pop
push
jl
dec
fstpl
lahf
xor
mov
add
in
mov
fwait
pop
mov
sub
cltd
sub
mov
mov
sbb
and
mov
add
in
bound
mov
into
js
and
mov
test
sbb
cmp
dec
xor
mov
add
fldt
andl
inc
xor
mov
lret
aas
mov
add
gs
stos
xor
xchg
xor
add
rorb
inc
popf
test
xchg
in
sub
push
push
push
push
push
push
cld
call
sub
es
movzbl
cmp
ss
push
push
call
mov
cmp
je
es
lea
cs
sub
mov
push
es
call
test
jne
jmp
leave
push
es
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
nop
lea
lea
sub
add
mov
sub
sub
push
pop
push
je
jmp
add
add
je
movsl
or
pop
fldenv
add
push
mov
dec
leave
fldt
add
ljmp
sub
mov
cmpl
aam
and
cmp
add
push
andl
fnsave
add
jmp
mov
inc
add
sbb
repnz
mov
or
xchg
mov
mov
dec
push
pop
sub
rolb
mov
es
pusha
add
mov
add
inc
dec
ret
addb
ret
sub
stos
mov
add
add
jg
push
xor
cmp
rolb
or
xchg
add
mov
push
loopne
mov
push
mov
insb
cmp
xlat
popf
stos
xor
out
or
cltd
push
push
popl
arpl
mov
jns
mov
cs
jb
mov
inc
mov
add
jle
xchg
pop
jg
es
add
dec
push
pop
mov
jb
mov
push
flds
pop
enter
pusha
add
add
jle
xchg
or
or
mov
mov
xor
cs
mov
aam
mov
cmp
pushf
loope
movsl
out
in
add
sub
ret
jne
lods
scas
jae
outsb
mov
add
mov
popa
iret
mov
sbb
and
mov
and
mov
scas
fwait
adc
lahf
repz
sbb
push
and
lahf
stos
jae
push
clc
lret
ds
push
add
mov
jle
mov
add
mov
mov
or
fmul
dec
fldt
sub
incb
add
mov
jl
xor
lahf
mov
cmpsb
sub
mov
std
and
mov
idivl
movsb
push
and
push
add
add
mov
movsb
cmpsb
mov
lahf
and
mov
add
fsubl
jmp
pop
fnsave
repz
jp
mov
aaa
cmp
ss
cwtl
cmp
ljmp
loopne
mov
jno
pushf
in
sbb
jl
dec
cmp
mov
mov
fisttps
add
mov
mov
add
adc
cmp
ret
aas
cmp
and
add
lahf
xchg
add
mov
fidivrs
mov
or
add
andl
or
addb
movsb
aaa
or
cmpsl
jle
adc
jae
lods
mov
xor
mov
inc
cmpsb
rolb
mov
dec
and
aaa
push
dec
jnp
or
cltd
arpl
addb
cli
out
les
add
add
pand
sbb
outsl
rolb
mov
pop
pop
out
jle
mov
aas
arpl
fadds
sub
mov
add
add
push
test
inc
movl
xor
mov
add
dec
test
jne
xchg
xchg
gs
in
jns
inc
loopne
mov
cli
outsl
sbb
mov
add
addb
pop
lods
mov
and
test
aas
mov
cwtl
test
dec
pop
xor
movsl
dec
pushf
pop
imul
rolb
insb
mov
jne
ss
xor
mov
call
iret
sub
pop
data16
dec
in
lret
sbb
push
and
stos
repz
push
add
fucomp
dec
fwait
rcr
xor
mov
push
repnz
mov
sbb
jmp
mov
push
dec
insl
adc
leave
pop
mov
or
lret
push
nop
add
sbb
daa
rolb
mov
xchg
lods
jns
adc
mov
idiv
into
out
jno
das
imul
add
jmp
inc
roll
lahf
jne
movsl
lret
orl
stc
xchg
inc
add
pusha
add
jae
dec
jmp
aam
add
stos
out
imul
mov
cli
xchg
call
jbe
xor
mov
mov
and
add
adc
mov
fiadds
add
mov
jle
jmp
repnz
mov
add
mov
or
lahf
sub
add
push
sub
icebp
inc
jmp
inc
add
or
mov
add
sub
add
mov
mov
or
jp
cmp
movsl
lcall
das
mov
fninit
xchg
and
fsts
fcmovnb
inc
loop
mov
push
scas
stos
xor
sbb
xor
test
lret
xchg
in
add
sbb
mov
jle
addr16
push
xchg
jmp
test
dec
pushf
sbb
cmc
lods
fst
imul
sub
cwtl
pop
rcrl
add
sti
stos
push
or
add
xchg
mov
lock
mov
cmpsb
dec
dec
aam
aam
lods
lods
mov
mov
cmpsb
outsl
arpl
and
mov
add
and
xchg
mov
jmp
rolb
mov
jp
in
shrl
lcall
sbb
mov
inc
xor
lcall
mov
hlt
push
jae
cmp
sub
adc
add
mov
fdivrl
int
es
mov
mov
and
scas
inc
iret
adc
mov
ret
bound
mov
test
add
test
in
sahf
mov
or
dec
mov
add
js
addb
or
in
or
mov
lahf
hlt
add
xlat
sub
mov
and
mov
add
lret
shll
mull
lret
cmp
ja
xor
mov
dec
rolb
mov
mov
add
add
sahf
fstp
jmp
pop
and
add
loope
or
or
xor
mov
add
mov
ss
add
les
dec
incl
inc
lods
mov
aam
imul
lcall
adc
mov
ss
jge
cmp
mov
test
repz
int3
xchg
fldenv
mov
add
aam
sahf
adc
mov
mov
add
dec
ja
jne
js
push
test
fdivrs
movl
mov
add
mov
sub
mov
fidivs
mov
add
je
ljmp
add
ret
mov
jbe
cmc
ficoms
mov
pop
test
movsl
fsub
add
leave
jmp
stc
xor
mov
mov
jnp
or
jmp
and
mov
stos
rolb
mov
ret
inc
and
mov
jo
mov
mov
rolb
inc
cmc
sbb
mov
adc
mov
sahf
nop
add
mov
dec
xchg
xlat
mov
jb
mov
sub
xor
xchg
das
inc
xor
mov
mov
jecxz
call
shrl
mov
jecxz
or
fisttps
cltd
mov
add
cltd
jo
mov
dec
mov
pop
jp
sub
mov
jge
add
push
add
adc
mov
lock
jecxz
cmp
sbb
stc
test
xchg
mov
mov
add
push
fmuls
add
mov
inc
add
cmpsl
mov
add
scas
fwait
inc
or
sbb
inc
xchg
mov
mov
fsubr
vsqrtps
out
push
sbb
outsb
gs
pop
loopne
mov
mov
cmp
fcoml
xor
mov
push
add
sti
fstp
mov
rolb
mov
mov
xor
mov
add
pop
jne
add
or
mov
clc
jns
sti
scas
lock
xor
popf
pop
or
sbb
add
jns
and
pop
fisubrl
jp
inc
xchg
cmp
adc
mov
dec
cld
adc
add
mov
pop
add
push
xchg
sbb
push
add
data16
mov
sub
repz
jns
add
cwtl
inc
add
add
mov
mov
adc
mov
mov
xchg
addb
clc
adc
add
xchg
mov
fwait
lds
lods
sarl
xlat
sbb
push
push
add
mov
mov
inc
aas
jo
mov
push
add
add
pop
cmpsb
xor
push
aam
jg
cli
and
imul
mov
mov
xor
mov
stc
clc
imul
push
add
xor
aam
pop
sti
jae
add
add
inc
in
xchg
sub
mov
cwtl
pop
pusha
add
aam
mov
pop
mov
in
xor
stos
add
mov
add
mov
mov
cltd
fbld
mov
add
add
add
mov
jo
mov
add
sub
je
xorl
inc
aaa
daa
push
test
cwtl
fsubrl
leave
pop
mov
mov
mov
add
scas
jae
pop
aad
repnz
adc
jmp
inc
in
add
outsl
jl
adc
movsl
out
add
cltd
cmpsl
sbb
add
mov
add
mov
inc
add
addb
jl
push
adc
mov
add
add
pop
jno
imul
ds
xchg
mov
dec
adc
add
mov
mov
sahf
xchg
lret
sahf
icebp
push
stos
push
bound
mov
movl
std
or
cwtl
test
add
mov
pusha
add
test
xor
xchg
fisubrl
mov
test
subl
je
or
scas
adc
mov
aam
pop
nop
add
scas
jo
mov
mov
sbb
ret
cli
stos
jae
sub
add
jecxz
add
test
mov
mov
jno
rolb
mov
jbe
cmp
add
and
mov
add
test
push
add
mov
jns
lcall
rcrl
sub
mov
xor
mov
adc
mov
arpl
out
sbb
pushf
int3
imul
test
push
add
sub
cli
or
pop
add
lds
fwait
and
fnstcw
add
fsubl
mov
add
cmp
inc
rolb
mov
push
aam
fimuls
xchg
ret
inc
add
cs
mov
mov
decl
insl
aas
inc
hlt
mov
mov
cmp
jecxz
push
aas
lret
das
aaa
insb
loope
outsb
cs
lret
insb
dec
cmp
add
add
xchg
and
movsb
xor
popa
xor
mov
or
data16
lods
cli
xor
add
rolb
rolb
mov
dec
xor
mov
lea
sub
xchg
mov
test
fnstcw
pop
xchg
insl
dec
imul
mov
hlt
inc
add
push
add
cmp
inc
xor
mov
lock
or
cmp
mov
push
int3
jmp
ljmp
mov
add
jmp
add
jl
add
adc
test
dec
inc
add
int3
adc
inc
faddl
add
sbb
xchg
sub
shll
dec
insl
js
add
add
add
sbb
add
mov
test
iret
cwtl
loope
mov
xor
lret
sub
cwtl
xor
mov
rolb
or
mov
add
fwait
fwait
icebp
rolb
mov
add
add
adc
mov
add
push
je
pop
mov
jne
cmc
jp
push
push
sbb
jbe
rolb
mov
cmp
lds
xor
mov
add
mov
jmp
add
push
inc
xor
rolb
mov
add
pop
jno
frstor
pop
inc
add
bound
mov
adc
scas
pop
negl
mov
mov
mov
pop
fldt
scas
xor
mov
jb
mov
sahf
adc
mov
or
flds
adc
xlat
hlt
outsb
mov
mov
mov
push
out
push
mov
mov
xchg
inc
aad
sbb
add
pop
cltd
popf
sarl
mov
jmp
in
add
add
test
cmp
mov
add
mov
and
push
add
add
mov
and
repz
add
and
mov
mov
fsubrl
add
insl
ret
out
sbb
imul
stc
sub
jmp
push
out
jmp
repnz
mov
int
sbb
inc
add
inc
popa
outsl
inc
push
mov
inc
xchg
les
add
add
mov
dec
push
aam
mov
xor
pusha
add
mov
into
addb
add
mov
cmp
std
jp
sub
adc
and
cmc
addr16
nop
add
addr16
loop
mov
xor
aad
sbb
add
mov
fcom
subl
std
cmp
loope
pop
insl
adc
fdiv
movsb
jo
mov
push
mov
sub
addr16
imul
add
insl
pop
cmp
icebp
jnp
cmpsl
mov
push
add
cmp
and
push
add
add
mov
sbb
mov
icebp
hlt
cmpsb
icebp
arpl
pop
mov
mov
sar
cmpsl
or
add
pop
dec
sub
mov
call
ret
jno
lahf
dec
dec
dec
test
popa
push
fnstcw
stos
pop
cmp
mov
push
and
mov
add
test
or
xor
mov
dec
mov
and
or
mov
scas
or
mov
dec
in
mov
imul
jl
movsl
pushf
mov
std
clc
adc
in
jmp
and
aas
fisubrl
xchg
xchg
sbb
sbb
mov
push
movsb
xor
mov
mov
sub
insb
lret
sub
cmp
mov
lods
cltd
scas
aas
xor
rolb
mov
iret
or
repz
sbb
insb
push
add
jnp
add
mov
add
mov
gs
add
mov
or
pop
fisttpll
pop
fs
lock
jne
add
add
cmp
add
mov
rolb
fs
pop
mov
mov
add
cs
movsl
add
dec
in
inc
das
jne
mov
lods
xlat
push
push
aam
sbb
push
push
popf
stos
imul
jno
push
cmp
pushf
ret
lahf
xchg
add
pop
jbe
mov
pop
rolb
mov
xor
popa
adc
sbb
out
pop
loop
mov
xchg
lock
mov
imul
mov
jne
jo
mov
add
sbb
add
add
mov
into
pop
mov
xchg
lods
and
test
xor
sub
test
push
lods
adc
push
repnz
push
mov
add
or
gs
add
and
add
add
shl
xchg
jmp
addb
mov
loopne
mov
xchg
fwait
repnz
mov
mov
and
mov
dec
popa
and
add
sub
add
add
xor
xchg
je
pop
add
mov
ds
mov
dec
dec
out
or
fimuls
flds
xor
add
frstor
cmp
or
test
je
cli
imul
cmpsl
clc
sar
hlt
add
cmp
push
dec
pop
scas
repz
xor
and
xchg
js
int
adc
add
adc
jno
testl
inc
add
and
inc
and
add
fiaddl
cli
sbb
xor
mov
stos
stos
fisubrs
lret
jae
stos
or
sub
ret
mov
inc
xorl
mov
scas
adc
jecxz
cmp
repz
pop
sbb
xchg
add
mov
or
insl
icebp
sahf
sub
mov
mov
sub
add
mov
rcll
add
add
add
hlt
fdivrl
add
mov
jmp
jmp
xchg
dec
xchg
ret
lods
cmp
xlat
out
roll
add
jl
in
lods
inc
out
adc
jnp
addr16
mov
mov
mov
les
fwait
jge
push
dec
jmp
add
xor
hlt
jp
add
les
jns
cmp
mov
cmp
call
in
mov
mov
outsl
sub
mov
pop
addb
lods
addb
pop
jo
mov
mov
popf
rolb
jae
adc
mov
pop
dec
and
mov
pop
in
add
or
add
add
lret
push
add
inc
add
cmp
mov
cltd
or
stc
ficoms
cmp
push
mov
xchg
arpl
jne
out
and
mov
add
or
add
arpl
push
fsubrl
sahf
jecxz
fbstp
addb
inc
roll
fcoml
add
mov
icebp
loopne
mov
mov
mov
adc
cmc
add
add
insl
mov
scas
cwtl
pop
lds
add
mov
aaa
or
ret
mov
iret
xor
mov
xor
inc
xchg
xor
dec
dec
dec
sti
sub
add
aas
out
jns
pop
aad
push
adc
ds
repnz
xchg
or
inc
inc
add
adc
outsl
dec
jno
or
lock
arpl
fwait
and
mov
ret
rorl
mov
pusha
add
xor
jo
mov
jbe
add
mov
mov
mov
outsl
gs
pop
into
fwait
mov
adc
mov
stc
les
add
lods
out
repz
add
fistl
in
repz
sahf
lds
push
add
cmp
mov
into
movsb
pop
sbb
add
imul
push
sub
sub
xchg
fs
aad
add
pop
ret
pop
mov
jno
dec
ds
jl
das
mov
push
into
mov
out
icebp
add
fsts
arpl
mov
mov
add
xchg
pop
stos
dec
xor
add
push
add
lahf
test
adc
dec
ficoms
push
cmpsl
mov
mov
add
add
sub
je
cmp
add
test
or
sbb
or
js
inc
imul
adc
push
cmp
add
fisubl
mov
test
rcll
in
xor
mov
mov
fs
xlat
push
sub
sti
sbb
sub
cld
ljmp
dec
mov
mov
add
add
adc
mov
cwtl
mov
sbb
outsl
sbb
int3
inc
inc
or
shl
add
mov
add
xor
jae
add
mov
rolb
mov
push
pop
sub
add
add
ficoms
les
xlat
push
jbe
or
push
std
aas
dec
loop
mov
fcmove
add
jno
cmpsb
inc
jnp
push
arpl
mov
jmp
add
mov
mov
lcall
push
ret
mov
dec
pop
lods
ss
test
sub
and
add
test
add
or
push
loope
aas
and
mov
out
jbe
mov
add
rolb
mov
add
dec
pop
mov
mov
or
ds
lods
repnz
pop
inc
mov
jmp
unpckhps
popa
or
and
push
ret
push
add
lret
inc
sub
lret
call
movsl
adc
fcompl
repz
dec
push
and
mov
arpl
dec
push
xor
mov
push
add
mov
sub
mov
mov
test
inc
in
aaa
or
jge
loope
push
add
or
add
mov
testl
add
mov
in
fsubs
jnp
push
add
mov
ss
inc
stos
cmp
add
pop
lea
ss
lds
sub
add
add
insb
dec
and
or
inc
xor
mov
aad
xor
add
hlt
sbb
mov
or
xchg
and
mov
jmp
xor
push
sbb
add
push
push
adc
sbb
cld
fsubrs
fists
lahf
in
jo
mov
add
out
mov
jmp
cltd
test
rolb
mov
pop
out
add
inc
push
sub
out
add
mov
mov
adc
add
mov
pushl
fldt
dec
mov
jle
pop
repz
aam
gs
add
push
lods
or
mov
or
push
add
xchg
adc
aaa
addr16
jae
dec
add
or
imul
outsb
jge
inc
add
mov
pop
adc
fwait
push
lret
loop
mov
sub
xlat
outsl
stos
in
jp
mov
or
add
int
cmp
add
push
test
add
cmp
stc
movsb
mov
add
mov
mov
loope
adc
cld
fs
push
outsb
jle
ljmp
jg
outsb
nop
add
pop
dec
mov
gs
jno
sub
std
std
xlat
addb
dec
xor
mov
sub
push
rolb
mov
and
add
add
imul
gs
add
cmp
jle
or
add
cmpsb
jmp
mov
mov
cmc
sub
dec
repnz
dec
test
aaa
std
add
or
scas
iret
repz
push
xchg
imul
pop
cltd
push
cmpsb
cmp
add
test
adcl
push
add
mov
inc
add
rcrl
add
adc
mov
icebp
sub
add
lods
xor
mov
add
mov
dec
loope
ja
dec
sbb
add
dec
or
aaa
int3
sbb
idiv
fildl
mov
in
inc
add
xchg
out
pop
icebp
repnz
iret
lds
mov
mov
jb
mov
cmp
imul
outsl
aaa
pop
lods
lock
add
add
pop
pop
and
les
xlat
or
sbb
add
insb
jb
mov
xchg
pop
cmp
out
add
sub
gs
pop
mov
mov
pop
cmpsl
pop
xchg
add
cmc
subps
inc
add
inc
popf
int3
push
insb
cmp
cmp
cmp
int
jb
mov
xor
roll
add
imul
push
daa
push
sub
data16
mov
data16
mov
xor
mov
mov
sahf
and
int
sti
lock
js
mov
xor
add
mov
mov
inc
insl
lret
xor
pop
addb
adc
sbb
sbb
dec
es
mov
sub
add
push
fstl
or
scas
bound
mov
xor
mov
push
add
pop
out
jne,pt
jne
test
mov
pop
cmp
mov
add
stos
clc
clc
inc
popa
or
dec
mov
aad
add
mov
in
or
ds
ds
add
mov
or
lahf
inc
pop
and
cmp
push
and
mov
nop
add
ret
repnz
add
xor
lea
xchg
arpl
xchg
mov
fadd
sar
or
push
sbb
lret
lea
popf
push
push
add
add
mov
lods
adc
pop
or
xchg
add
add
into
xchg
movsl
scas
mov
mov
mov
mull
add
out
pushf
lcall
jae
add
pop
dec
sti
popa
fstpt
movsl
jmp
imul
mov
test
pop
outsl
sub
adc
lret
pusha
add
xchg
push
add
int
add
cmc
inc
test
addb
mov
das
out
lock
lahf
icebp
pop
add
mov
xor
jge
subl
inc
lret
lret
call
cmp
mov
sbbl
mov
lds
dec
cltd
js
add
pop
imul
faddl
mov
jae
pop
in
out
adc
add
mov
aam
xor
mov
nop
add
mov
jnp
xchg
mov
jmp
push
mov
or
cmp
cmp
push
lods
mov
hlt
gs
xchg
add
rolb
mov
mov
test
add
push
pop
add
mov
xor
add
mov
mov
pop
ljmp
or
movb
icebp
jmp
mov
fadds
test
mov
jo
mov
jge
test
shll
mov
xchg
popf
fmuls
rcrl
aad
jl
cmp
addb
ret
xchg
loopw
mov
or
repz
cmp
lret
or
fistps
mov
mov
mov
mov
add
cmp
pushw
cmpsl
insb
and
pop
cmp
mov
ss
das
mov
movsb
xchg
add
and
mov
sub
mov
pop
sarl
rolb
mov
dec
cmp
ret
leave
add
adc
mov
xchg
ret
popa
jo
mov
mov
mov
xor
movsb
call
fcomps
xlat
inc
add
lds
add
adc
jl
add
sbb
and
xor
leave
dec
mov
pop
or
xor
rolb
mov
add
loope
or
xchg
xchg
fcomp
fldl
mov
mov
adc
pop
mov
jg
mov
sbb
rolb
mov
add
sub
xor
sbb
dec
scas
mov
mov
cmc
adc
sbb
sub
ljmp
pusha
add
aad
and
mov
mov
aad
pop
xchg
pop
into
repnz
adc
mov
sub
add
setg
xchg
int
or
inc
add
out
movsb
xor
add
add
jae
inc
pop
push
pop
js
and
mov
mov
mov
xor
mov
and
lret
rolb
mov
inc
mov
negl
bound
mov
mov
mov
jmp
jo
mov
xor
add
sub
inc
add
mov
repnz
rolb
mov
add
mov
add
aam
jno
fidivs
ficomps
mov
inc
add
mov
mov
aas
das
push
and
fcoms
add
int
es
jecxz
in
adc
mov
test
jno
scas
dec
sbb
mov
mov
repnz
xchg
jg
leave
nop
add
sub
out
cmp
mov
add
fldt
or
pop
rolb
and
mov
sbb
add
mov
push
sbb
pop
sub
add
or
add
mov
add
addr16
mov
test
test
leave
arpl
adc
add
mov
mov
mov
ret
call
dec
ljmp
add
mov
inc
or
in
pop
sbb
add
and
add
test
sbb
sti
lcall
gs
fstpt
jge
ror
pushf
cmp
add
xlat
fdivrp
and
dec
ret
int3
jl
lcall
or
add
adc
nop
add
repz
fcoml
add
enter
add
pushf
rolb
mov
mov
bndstx
loopne
mov
add
loopne
mov
imul
jp
decl
popf
jg
add
xor
mov
mov
out
add
cmp
arpl
mov
mov
insb
lods
jecxz
mov
popf
loop
mov
mov
and
add
pop
xor
mov
push
add
or
or
mov
sbb
dec
pop
movsl
jo
mov
add
movsl
addb
lds
jbe
cld
arpl
mov
cmp
mov
xor
xor
mov
dec
hlt
inc
daa
adc
mov
or
movsb
and
mov
aad
pop
add
imul
rolb
mov
and
cltd
div
outsb
cmp
popa
f2xm1
add
pop
mov
fisttpl
mov
sbb
mov
out
aam
test
arpl
sub
rolb
mov
aas
sub
and
ljmp
xchg
push
sub
pop
in
imul
enter
add
jg
push
push
push
ds
cmpsl
mov
dec
test
xchg
adc
add
sub
sub
dec
jecxz
icebp
mulb
mov
jp
mov
flds
add
fwait
xor
mov
mov
xchg
cld
int
clc
xor
mov
mov
push
sahf
mov
pop
xor
add
add
add
cmp
add
mov
jle
movnti
loopne
mov
mov
cmp
jp
rcrl
mov
enter
mov
aad
and
idiv
test
inc
add
jge
push
inc
call
mov
push
inc
jne
sub
add
fwait
cmp
lods
scas
rcl
add
idiv
aaa
mov
push
ds
test
jle
xor
bound
mov
add
sbbl
or
sub
mov
add
mov
test
add
xor
mov
mov
repnz
mov
scas
push
add
add
mov
push
popa
test
dec
inc
out
jbe
in
out
mov
and
mov
dec
nop
add
add
add
ja
xor
mov
inc
arpl
adc
fnstcw
mov
add
pop
icebp
bound
mov
popa
mov
add
mov
pop
sbb
or
jp
and
cli
repnz
js
lods
mov
jnp
jg
mov
xor
sub
ja
test
sub
mov
mov
inc
add
repz
mov
add
fisubrl
iret
dec
push
and
rolb
push
add
cld
hlt
scas
out
cmp
push
add
in
push
cwtl
push
adc
mov
cmp
xchg
inc
insb
pushf
cmpsb
sbb
add
loopne
mov
repz
idivl
or
into
lretw
and
add
mov
mov
and
mov
adc
jae
cmp
add
mov
mov
sahf
xchg
add
push
xchg
add
add
jecxz
add
mov
mov
mov
jb
mov
lods
out
mov
test
rolb
mov
xchg
dec
push
add
and
cwtl
call
jns
stos
add
mov
add
scas
cmp
call
fstpl
cmp
in
add
nop
add
mov
add
ja
inc
sbb
inc
jbe
xor
add
mov
lds
out
aad
icebp
adc
mov
shll
fcompl
rolb
mov
mull
xchg
mov
add
dec
je
test
imul
and
std
into
jno
add
sti
testb
add
mov
inc
ds
icebp
jo
mov
js
xchg
mov
mov
add
inc
add
mov
jle
std
daa
hlt
cs
dec
jb
mov
dec
add
mov
cmpsb
jge
pop
jmp
fstpl
adc
mov
out
rolb
mov
cmc
pop
and
add
jmp
lock
jmp
add
imulb
sub
test
xchg
add
mov
mov
xor
fldl
push
in
xabort
push
inc
add
rolb
mov
add
adcl
add
mov
lcall
and
cmovnp
pop
ss
add
mov
add
rcl
outsl
dec
jb
mov
fdiv
add
mov
xor
add
les
stc
mov
inc
hlt
dec
sbb
inc
aam
sbb
into
imul
mov
mov
jno
mov
arpl
mov
rolb
mov
rolb
mov
not
add
add
cmp
bound
mov
add
push
add
mov
sbb
dec
lahf
movsb
pushf
in
mov
es
fwait
jecxz
js
test
mov
stc
dec
in
xchg
popa
aad
mov
or
mov
cmp
mov
adc
mov
mov
lahf
ret
sub
jno
les
data16
fcoml
mov
mov
sub
scas
mov
add
inc
add
out
cmc
rolb
mov
mov
xchg
xchg
mov
popa
in
fisttpll
add
rolb
mov
inc
add
out
bound
mov
inc
mov
add
add
rolb
mov
sbb
add
mov
mov
mov
mov
loop
mov
cmp
cmp
jo
mov
mov
add
adc
mov
jbe
cld
dec
loop
mov
mov
ja
add
add
enter
addb
out
xchg
fwait
add
add
xor
mov
sbb
out
and
mov
adc
mov
sub
add
fmuls
neg
hlt
imul
cmpsl
pop
negb
lcall
mov
arpl
pop
into
adc
and
mov
mov
sub
mov
mov
pop
ja
mov
repz
das
mov
mov
add
mov
mov
add
jl
das
cmpsl
aad
push
aas
test
ret
push
pop
rolb
and
inc
in
mov
adc
shrl
push
mov
mov
xchg
sti
jl
push
add
in
mov
lock
repz
or
fisttpl
mov
mov
add
popf
cwtl
cwtl
mov
pop
mov
jmp
jns
dec
xchg
add
es
push
std
jmp
ljmp
jo
mov
adc
sbb
adc
mov
jns
add
mov
out
push
cmp
inc
test
popa
pop
out
lcall
mov
fmul
mov
fldl
add
xchg
ret
test
or
xchg
test
add
add
push
adc
add
add
mov
jg
imul
imul
or
add
cmp
data16
rolb
xchg
pop
sarl
es
mov
add
add
add
lcall
mov
addb
add
xchg
xchg
add
sub
cmpsl
out
dec
push
ja
fwait
call
sahf
mov
add
insb
jle
mov
repnz
add
shll
mov
mov
mov
mov
add
je
daa
icebp
xchg
mov
or
mov
or
mov
push
inc
add
adc
jb
mov
mov
loope
inc
add
xchg
and
mov
adc
mov
add
mov
xchg
cmp
test
mov
inc
fdivs
mov
cmp
add
lret
add
ds
xchg
xchg
test
inc
popa
fwait
cmp
mov
cmpsl
aaa
je
pop
push
or
lods
add
mov
adc
mov
add
test
dec
mov
mov
mov
repnz
add
mov
mov
cli
call
or
addb
cmp
adc
mov
xchg
jnp
aaa
scas
punpckhdq
or
add
mov
test
mov
out
mov
add
out
fisubrs
fwait
lods
mov
mov
aas
cmp
enter
aaa
mov
call
add
add
mov
cmp
addb
pop
iret
xor
call
fdivl
sbb
movsl
jae
aaa
mov
lahf
xor
divb
test
sub
pushf
lock
add
jl
add
scas
pop
add
mov
cmp
jge
pushf
mov
xchg
fnstcw
mov
sub
imul
sbb
mov
dec
push
or
add
mov
cmp
sub
sub
xchg
mov
lods
enter
push
add
fadds
mov
sbb
push
mov
and
test
jne
sbb
pop
popa
jns
adc
fistpll
add
add
cwtl
dec
mov
std
jno
dec
fstl
jge
rcl
cmp
add
mov
xchg
jo
mov
push
sti
and
rolb
mov
xor
mov
fisubrs
add
mov
add
mov
add
cmp
pop
orl
stc
mov
arpl
adc
sahf
fwait
add
mov
sub
sub
sbbl
inc
in
mov
mov
mov
mov
cli
mov
rolb
mov
xchg
adc
mov
or
add
fsubr
adc
nop
add
fld
sbb
les
add
cmp
test
cmpsb
push
pop
rolb
mov
push
cmpsb
push
add
push
jge
scas
test
sbb
and
lock
or
mov
mov
add
je
push
cs
xlat
add
add
add
mov
push
les
add
add
mov
add
ds
outsl
jns
push
xor
sbb
jp
mov
test
out
shrl
jae
xor
mov
sti
mov
adc
mov
out
mov
mov
mov
adc
add
adc
mov
aas
repz
or
movsb
lea
dec
inc
dec
rcll
push
xor
outsb
mov
mov
push
add
push
cmp
rcll
movlps
mov
add
pop
cmp
das
xlat
pop
ds
scas
orl
cmp
and
or
mov
je
sub
push
fsubl
mov
scas
add
mov
xchg
jecxz
aad
add
arpl
test
jnp
adc
bsf
jbe
xor
adc
adc
add
mov
shl
add
cmpsl
movsb
ds
add
iret
inc
or
add
aas
test
sbb
add
rcrl
push
xchg
jl
jne
xor
pop
mov
mov
pop
mov
inc
xchg
xor
mov
add
bound
mov
pop
testl
mov
jmp
idivl
pop
enter
lods
push
test
sahf
mov
outsl
pop
pavgw
addl
mov
jno
inc
into
or
pop
cmp
mov
scas
inc
add
or
mov
mov
add
mov
insl
pop
out
sti
rolb
mov
data16
jo
mov
aam
push
js
add
mov
dec
mov
jns
jge
add
add
cmp
mov
pop
xor
mov
fdivrs
sbb
frstor
push
add
test
push
scas
jl
lahf
addb
fdivr
push
daa
and
push
cmp
mov
mov
popa
xor
add
imul
sub
xchg
out
out
push
add
stos
lods
jge
repnz
jns
int3
lcall
roll
and
hlt
push
aaa
jns
test
pop
add
daa
mov
mov
sub
mov
bound
mov
add
adc
imul
add
push
pop
jge
xchg
sub
add
cltd
push
pop
repz
mov
push
cs
fnstcw
sbb
cmp
add
add
outsb
pop
add
cmp
in
push
or
mov
sbb
lahf
stos
add
mov
mov
xor
mov
mov
mov
enter
sbb
repz
leave
movsb
jo
mov
test
inc
add
call
jl
ficompl
add
add
and
mov
mov
add
push
fmul
in
lods
push
xchg
add
mov
sbb
outsl
scas
and
mov
sub
mov
or
add
lahf
pop
cmp
movsl
jmp
in
sbb
arpl
data16
mov
psraw
xchg
add
in
aaa
mov
sub
ficoml
stos
movsl
add
adc
pop
shrl
push
add
mov
pop
stc
out
mov
xchg
dec
push
addl
mov
mov
outsl
nop
adc
aaa
das
in
add
pcmpeqw
add
xchg
pop
push
mov
in
jnp
bound
mov
and
test
sbb
data16
adc
mov
jmp
sub
int
pop
xchg
add
mov
add
sbb
add
xchg
test
push
sub
stos
pop
jp
add
pop
loope
in
addl
mov
push
push
jl
insb
mov
insb
or
xor
push
out
sub
jmp
lods
in
test
out
inc
adc
xlat
call
jae
jmp
mov
xlat
lret
mov
es
mov
fmull
xchg
adc
lret
mov
mov
call
mov
push
addb
fiaddl
mov
jns
jecxz
iret
fidivrs
add
jb
mov
inc
fimuls
into
cmp
imul
mov
add
lret
xchg
push
fwait
push
js
add
movl
push
pushf
rolb
mov
inc
add
ret
fiadds
add
cmc
push
add
in
and
aad
idivb
pop
push
xor
mov
add
mov
cld
jo
mov
pop
pop
stos
mov
fnstcw
fistpll
pop
in
das
inc
mov
lcall
cmc
outsb
test
jle
aam
jnp
mov
mov
mov
mov
add
jno
aad
push
add
jecxz
sub
jmp
jns
xchg
add
mov
mov
icebp
stc
adc
add
mov
add
mov
push
push
jbe
in
mov
adc
mov
push
mov
cli
xor
mov
pushf
xchg
shr
dec
out
out
add
or
mov
xchg
addb
sub
loope
jnp
addr16
pop
inc
add
add
mov
dec
pop
out
out
cmc
push
jp
add
add
jmp
xchg
mov
cmp
mov
jnp,pn
jbe
push
mov
mov
add
push
dec
xor
mov
lea
fcoms
add
std
sti
cmc
loopne
mov
push
popl
add
inc
and
adc
mov
pushf
xor
scas
cmc
lods
cli
adc
mov
or
imul
jae
pop
xor
and
aad
add
push
rolb
push
in
inc
xchg
nop
add
lds
mov
xchg
jb
mov
cmp
mov
mov
popf
add
add
mov
out
fdivs
iret
xor
filds
mov
and
add
out
push
add
cmp
popa
inc
stc
testb
out
imul
add
cmpsb
sbb
or
repz
and
mov
add
fnstcw
ljmp
add
xchg
mov
aas
cmpsb
divb
loop
mov
push
add
xor
les
mov
adc
mov
imul
lods
rolb
mov
cltd
jmp
pop
and
hlt
clc
mov
dec
xor
mov
xchg
lret
les
add
sbb
out
scas
testl
sti
in
sub
mov
sbb
enter
adc
in
sbb
sub
in
inc
rcll
add
add
mov
cmp
mov
sbb
or
ret
mov
cmp
lods
shll
mov
shll
add
rolb
mov
push
add
shrl
xchg
mov
test
sti
test
xlat
cwtl
in
fistl
mov
out
ret
sbb
add
jae
sbb
mov
push
test
dec
sub
add
ret
jp
cmp
add
fwait
xchg
test
mov
mov
mov
or
mov
mov
xor
mov
mov
aad
aam
cmc
xlat
movsb
cs
mov
mov
mov
xor
add
rolb
mov
in
push
sarl
jns
mov
aaa
and
add
dec
push
dec
sbb
xor
mov
push
inc
scas
xor
jp
popf
sti
xchg
fs
add
fsubs
jl
sub
lret
addb
stc
jnp
in
lret
push
add
jecxz
pop
imul
add
push
push
dec
inc
add
dec
mov
loope
add
push
sub
loope
aaa
add
mov
cli
mov
add
add
xchg
cmpsl
loop
mov
adc
mov
add
mov
cmpsb
pop
adc
push
add
fadd
push
loope
add
jae
mov
stos
cmc
mov
mov
and
push
and
loop
mov
pop
xchg
sbb
cmpsb
lahf
pop
and
mov
add
mov
dec
xor
mov
add
add
cwtl
popa
repnz
xor
or
push
add
xor
mov
add
mov
pushf
mov
pusha
add
add
movsb
and
mov
sub
sbb
dec
rolb
mov
add
repnz
xchg
push
sbb
fstpl
push
sbb
mov
sbb
push
jbe
sub
sub
ret
imul
mov
mov
stos
pop
mov
and
mov
add
lods
out
leave
lds
jb
mov
adc
mov
ljmp
push
sub
stos
std
in
je
and
inc
js
jmp
call
adc
push
sub
add
dec
jl
add
notl
mov
sti
jmp
icebp
cmp
sahf
in
mov
out
insb
pop
sbb
nop
add
sub
fwait
mov
lcall
inc
fcomp
jne
pop
mov
jp
add
out
dec
int
test
testb
fcomps
test
push
cmpsb
adc
mov
add
bound
mov
add
sahf
mov
mov
mov
push
lret
das
push
js
dec
pop
push
add
mov
stc
cmp
push
rolb
mov
clc
inc
or
and
mov
add
call
clc
lods
aaa
gs
inc
add
rolb
mov
lret
sub
jno
jecxz
push
add
dec
xor
pop
mov
jns
add
add
dec
dec
test
loop
mov
jbe
add
pop
loope
push
add
sti
fcmovb
add
add
xchg
aad
addb
cmp
cmp
sbb
inc
inc
add
jecxz
jbe
add
out
dec
sub
add
lret
mov
add
ficompl
mov
mov
add
add
mov
lds
rorl
mov
push
ja
add
stos
inc
jecxz
mov
mov
mov
stos
insl
jnp
jp
add
mov
adc
js
out
outsb
into
jns
add
add
mov
and
mov
jbe
jle
cmc
xchg
lods
xchg
add
sbb
pushf
adc
add
push
jbe
clc
lock
movl
les
cmp
mov
pop
test
xchg
xchg
mov
sub
ret
in
add
aad
inc
das
xchg
and
mov
jmp
dec
xchg
ret
in
xor
mov
or
in
or
jle
or
scas
mov
cmp
mov
mov
outsb
movsl
int3
insl
mov
jecxz
add
test
add
outsb
movsb
push
sub
sbb
jae
and
pusha
add
push
add
orl
daa
inc
mov
add
push
call
rolb
jbe
into
xchg
xchg
or
into
and
cmp
divl
add
inc
push
add
in
nop
add
add
lock
daa
lret
leave
push
out
sarl
stc
mov
add
rcrl
or
cmp
imul
xor
mov
arpl
pop
xchg
add
mov
pop
adc
jge
loop
mov
dec
lock
and
or
add
fisubrs
imul
mov
ret
mov
orl
adc
mov
add
add
fiadds
or
mov
aam
js
add
cmp
cmp
je
jl
lea
mov
inc
sti
mov
add
popf
push
add
xor
mov
add
add
jnp
divb
mov
bound
mov
sbb
add
jb
mov
cmp
cs
cmpsb
push
sub
add
jle
add
aam
addb
sbb
imul
inc
ss
xchg
jp
jno
sub
mov
add
or
das
mov
cmp
add
jno
shrl
test
je
add
stos
ljmp
add
xchg
mov
popf
call
mov
stc
xor
stc
xchg
mov
pusha
add
add
cltd
sbb
or
and
mov
loope
push
es
iret
mov
push
add
pop
push
sahf
mov
mov
sbb
or
jp
add
lcall
mov
idivb
mov
add
xchg
add
cli
into
cmp
stos
and
mov
inc
xchg
add
add
mov
add
in
jno
lods
pop
into
rolb
mov
mov
mov
inc
sbb
int
cmp
xor
stos
cwtl
mov
add
mov
xor
mov
mov
cli
rolb
test
jb
mov
int
adc
inc
dec
popf
or
test
in
insl
jl
mov
mov
mov
bound
mov
sub
fmuls
call
push
add
outsb
mov
imul
push
add
movsl
outsb
rolb
dec
add
push
push
add
js
test
mov
mov
mov
push
shrl
mov
jbe
push
lods
push
push
pop
and
lods
pop
into
iret
test
mov
jle
add
mov
add
add
fiaddl
dec
sarl
sub
add
inc
mov
push
sahf
sbb
mov
movsl
mov
jno
hlt
adc
add
add
adc
xor
xchg
dec
int3
stos
or
add
sbb
fistps
ljmp
loope
inc
cmp
xor
mov
in
add
dec
addb
divb
add
mov
mov
pop
add
ds
ljmp
shll
mov
adc
cmp
pushf
outsb
inc
add
add
add
add
lahf
mov
cmp
mov
mov
pop
mov
mov
xchg
or
in
inc
and
lods
xchg
insl
stos
inc
add
xchg
mov
push
mov
add
add
stos
push
lcall
jp
adc
mov
cld
cmp
insb
jg
push
cmpsl
rolb
mov
int3
pop
sbb
mov
xchg
and
mov
into
push
fidivrs
mov
mov
mov
rolb
mov
mov
rcll
repnz
mov
jmp
leave
xorl
add
push
or
lea
fs
xchg
cli
data16
push
mov
cld
push
aas
xor
mov
pop
cmpsl
rcpps
aam
and
mov
jl
mov
push
jle
sub
scas
push
adc
mov
call
jge
ja
jp
add
stc
xchg
add
popf
stos
pop
rolb
mov
jne
mov
mov
mov
sbb
scas
add
add
gs
int
sub
add
push
add
rcll
mov
add
mov
dec
push
add
sub
in
cwtl
jns
cmp
mov
pushf
cwtl
in
mov
lea
pop
call
cmp
cmp
mov
mov
scas
das
add
add
push
jge
aam
fbld
dec
fistl
add
sarl
lock
xchg
mov
add
or
pop
xor
mov
mov
clc
and
mov
roll
mov
add
ljmp
jno
dec
lods
push
mov
out
push
add
xchg
test
insb
xor
sbb
sub
xor
mov
add
mov
xchg
cmp
dec
sub
cmpsb
dec
mov
mov
cmpsl
in
inc
sbb
int3
adc
ret
pop
sti
cmp
out
dec
cmp
xchg
pshufw
dec
push
imul
add
stos
mov
and
add
add
vpcmpeqd
pop
daa
xor
mov
stos
adc
addb
cvtdq2ps
mov
jns
jb
mov
add
add
mov
das
inc
add
add
xor
dec
cltd
inc
jo
mov
mov
add
cmp
sbb
cmc
push
add
loope
mov
stc
jnp
lds
push
xchg
add
and
pop
outsb
sbb
cmpsl
pop
jno
notb
mov
mov
fldcw
sbb
jle
inc
cmp
add
mov
outsb
cmp
rolb
into
mov
dec
pop
adc
cmpsl
push
inc
add
mov
mov
mov
jmp
mov
ljmp
cs
test
outsl
mov
jmp
mov
mov
lret
add
inc
pop
cli
pushf
push
inc
mov
pop
mov
push
or
push
and
fdivs
add
test
pop
mov
mov
add
and
mov
mov
pop
fistl
cmc
xchg
data16
into
inc
clc
movsl
pusha
add
addb
push
aaa
cmc
sbb
add
jae
add
in
add
xchg
sbb
pop
in
hlt
rolb
mov
xor
idivl
ja
jnp
or
iret
xor
mov
mov
mov
dec
ljmp
push
sarl
mov
pusha
add
repnz
mov
add
mov
mov
sbb
add
daa
adc
mov
filds
test
out
mov
inc
iret
scas
cmp
xchg
cmp
or
cli
imul
mov
add
mov
jbe
add
add
cmp
scas
push
push
add
or
fimull
push
pop
dec
dec
fwait
sar
insl
jbe
cld
jae
ljmp
clc
in
xchg
add
mov
insl
cld
lds
xor
push
xchg
stos
cmpsl
fcompl
inc
loope
add
mov
mov
fwait
iret
arpl
add
in
xchg
mov
mov
stc
xchg
mov
testb
addb
push
stos
ds
add
jnp
xchg
out
pop
pop
add
mov
jecxz
push
pop
or
xor
add
xchg
insl
jecxz
sub
mov
add
mov
add
insl
dec
mov
inc
push
mov
push
add
add
xchg
pop
push
std
sbb
mov
mov
add
mov
lret
fidivrl
pop
lea
fs
out
in
cli
mov
mov
add
add
mov
fucomp
mov
mov
mov
jp
adcl
mov
push
or
mov
data16
add
mov
sub
adc
xchg
mov
int3
xchg
or
fstps
imul
add
fcomps
mov
lods
add
pop
pop
jno
push
jge
sti
rolb
xchg
popa
ja
jecxz
popf
pushf
popa
jp
ja
inc
mov
add
mov
ret
cld
bound
mov
add
dec
push
in
jo
mov
lret
mov
add
movsl
pusha
add
rolb
inc
call
sbb
add
outsl
jle
insb
imul
add
mov
dec
inc
imul
stos
adc
cmp
push
ret
mov
scas
aaa
insb
fstpl
mov
lret
xor
mov
add
mov
aas
lock
bound
mov
jnp
sbb
mov
mov
in
cmp
add
js
mov
mov
cltd
cmp
aaa
mov
mov
dec
fsubrs
imul
pushf
outsl
iret
lods
into
popf
sub
mov
mov
sti
insl
fucomp
push
xorl
mov
xor
cmc
lods
cmp
push
pop
jnp
inc
cmp
inc
or
dec
lods
push
scas
mov
mov
sti
stos
mov
fs
pop
cmp
push
sbb
sbb
add
lret
or
dec
in
xor
jae
inc
ud1
add
popa
sub
test
cli
xor
mov
cs
xchg
arpl
mov
jecxz
or
shrl
mov
inc
add
pop
imul
jmp
and
mov
sub
cmpsl
mov
add
adc
imul
xchg
in
shrl
lret
mov
mov
mov
xor
loope
addr16
and
mov
hlt
hlt
inc
add
fs
cli
xchg
add
add
add
pop
test
clc
test
pop
popf
jns
ja
dec
cmp
xor
mov
dec
adc
lret
mov
hlt
xor
add
mov
es
hlt
push
add
mov
adc
add
jmp
test
int3
xor
mov
add
add
mov
jo
mov
add
mov
mov
lods
dec
mov
insl
add
xchg
les
movsl
and
mov
ds
shll
repz
dec
push
add
pop
pop
cmp
fdecstp
repnz
mov
aam
sahf
mov
lahf
rolb
mov
add
mov
add
mov
pop
push
add
add
xchg
das
mov
jne
add
mov
aam
js
jno
add
push
add
orl
cmp
cmc
mov
cmp
jle
mov
mov
sub
mov
xorl
je
sar
push
pop
inc
scas
jp
xor
addl
sbbl
mov
sbb
and
cmp
sub
mov
lods
arpl
jge
add
pop
xlat
aas
in
sub
pushl
outsl
repnz
lds
pop
testl
push
push
fsubrl
sbb
in
rolb
mov
mov
mov
or
add
jbe
imul
addb
fs
into
lcall
fsubs
mov
iret
outsl
les
cli
xchg
add
imul
add
popf
push
jl
xor
outsb
xlat
dec
negl
push
dec
push
pop
fstl
rolb
mov
add
sbb
jl
cltd
xchg
stc
dec
test
popl
pusha
add
leave
out
in
neg
xchg
mov
xchg
add
add
push
push
and
mov
vpmullw
sbb
mov
pop
jmp
add
mov
add
cmp
faddl
jae
iret
pop
pusha
add
lret
mov
dec
loopne
mov
add
xor
mov
mov
outsb
in
push
mov
mov
xchg
add
inc
add
push
shll
ljmp
mov
cs
repz
push
add
add
sahf
jl
and
xor
nop
add
push
adc
add
mov
cld
dec
lods
xor
mov
or
imul
mov
mov
sub
jo
mov
in
lahf
mov
mov
pop
je
mov
fidivrl
xchg
fldl
fcmovb
jae
pop
inc
les
call
mov
clc
fnstenv
cli
dec
sub
add
mov
std
inc
addb
add
aas
add
mov
add
rolb
mov
addb
add
add
sub
xor
aam
sub
mov
and
fimuls
sbb
cli
ret
mov
adc
sbb
add
hlt
das
xchg
prefetchwt1
add
mov
in
jb
mov
add
sti
lcall
inc
mov
add
add
lods
imul
pop
xlat
xchg
aas
jp
xchg
mov
mov
cli
lods
repnz
xor
fcoml
inc
and
mov
jmp
mov
out
add
mov
fldcw
add
cmp
mov
leave
xchg
xor
mov
cmc
sub
mov
mov
loopne
mov
pusha
add
cmp
rep
hlt
test
sbb
mov
xor
xchg
add
mov
dec
lods
xor
sbb
icebp
nop
add
lea
sbb
test
fisubs
add
sahf
push
add
xor
mov
mov
xlat
cmc
mov
movsl
xchg
add
pop
rcrl
inc
std
push
push
dec
dec
lret
movsl
mov
out
pop
jnp
push
add
repnz
xor
xchg
outsl
xlat
nop
add
jmp
adc
pop
lahf
adc
mov
mov
addb
cmp
mov
add
add
lds
pop
jg
xor
arpl
add
add
mov
mov
and
mov
xor
mov
add
cmpsl
stos
out
std
arpl
mov
pop
stos
or
jmp
dec
arpl
sbb
add
test
pop
jge
pop
cmpsb
leave
jmp
adc
adc
mov
pop
lods
dec
sbb
insb
rolb
mov
xchg
pop
add
loope
mov
dec
add
add
lret
movsb
dec
sti
mov
popa
and
mov
int
subl
inc
lock
cmp
sub
mov
movsb
aad
nop
add
outsl
scas
std
sub
jecxz
les
mov
rol
sub
add
add
mov
mov
jge
adc
mov
testl
cmp
xor
mov
call
or
xchg
inc
add
add
xor
pop
in
jns
jb
mov
push
adc
sub
add
push
add
push
xchg
pop
rcrl
std
notb
inc
cmp
inc
add
call
shrl
cmc
xor
inc
jg
cmp
add
mov
gs
push
add
enter
push
cwtl
cltd
inc
add
jecxz
push
leavew
pop
or
add
add
insb
push
add
xchg
sti
cmp
jle
int
push
loope
cmp
add
adc
add
leave
sub
sbb
mov
adc
sbb
repnz
dec
push
add
add
mov
mov
enter
mov
mov
inc
mov
ret
bound
mov
or
cli
icebp
daa
mov
and
ret
stos
aam
dec
movsl
sub
mov
or
xor
ljmp
clc
cmp
xchg
jae
cmp
fldl
pop
lcall
mov
add
jbe
adc
fistpll
push
add
fcom
pop
ss
sub
cli
or
fldenv
mov
dec
hlt
add
mov
mov
scas
repnz
xor
mov
adc
test
add
sbb
push
dec
adc
mov
les
sub
lds
mov
and
mov
xchg
push
or
lods
jno
lock
lods
ljmp
mov
frstor
mov
and
dec
dec
mov
sahf
or
mov
push
add
negl
jne
popf
mov
cld
outsb
je
or
add
sbb
mov
mov
mov
mov
mov
cs
add
mov
jns
jns
iretw
mov
ret
addb
cltd
mov
inc
cmc
xchg
scas
add
mov
sub
jl
dec
daa
add
xchg
daa
jno
add
xchg
std
ljmp
int3
sti
stos
lea
mov
out
cs
mov
sub
sbb
add
add
mov
add
jno
outsb
std
cs
mov
xchg
push
or
lret
in
ret
or
enter
mov
lret
add
ds
jecxz
and
shr
imul
mov
adc
shl
inc
inc
icebp
or
mov
cld
out
jge
add
mov
mov
sbb
fcomi
bound
mov
incl
movb
jle
xor
mov
xchg
dec
xor
mov
insb
mov
pop
test
add
add
mov
add
jae
call
adc
mov
xchg
xor
and
mov
test
jge
sub
in
sub
loopne
mov
ficomps
jecxz
push
les
stos
sbb
imul
fidivrl
mov
and
out
add
xchg
mov
sbb
sbb
fcom
nop
add
and
addb
outsl
addb
lcall
cmpl
mov
mov
or
outsb
fsubrp
jb
mov
add
cmp
mov
lret
mov
xor
mov
push
push
pop
movsb
xchg
cltd
repnz
imul
lret
aam
popa
iret
cmp
add
inc
in
pop
xchg
fs
xchg
jmp
sub
fs
pop
js
add
mov
sbb
add
pusha
add
lods
or
fdivl
add
mov
add
and
fwait
dec
in
xchg
rolb
cwtl
popa
movsl
cwtl
sub
xor
mov
mov
popf
jns
sub
fstps
sbb
movsb
cli
jae
add
into
inc
push
movsb
mov
rolb
mov
dec
je
xchg
rolb
mov
cmpsl
test
into
roll
mov
jns
insb
or
mov
mov
xchg
mov
inc
add
aas
xchg
pop
or
add
mov
push
pushf
jo
mov
xlat
loopne
mov
add
mov
clc
addr16
repnz
fadd
push
inc
inc
xor
sub
in
add
mov
mov
dec
loop
mov
pop
jae
pop
pop
jl
xor
inc
fdiv
add
sbb
push
add
ror
ficompl
xchg
push
ljmp
push
add
inc
in
inc
hlt
dec
add
mov
je
fimuls
mov
popa
dec
testl
add
inc
add
ja
addb
filds
mov
decl
mov
dec
jg
and
mov
mov
rorl
xor
mov
mov
add
jno
cmpsb
jbe
rcrl
dec
rolb
outsb
jl
mov
in
add
xchg
mov
into
data16
add
add
mov
sbb
inc
or
mov
mov
add
add
add
mov
mov
jp
inc
jp
sub
popa
test
push
lea
movsb
adc
lcall
add
and
out
mov
mov
add
out
rolb
inc
add
add
pop
out
lret
xor
mov
xor
leavew
xor
jl
outsl
xchg
add
rolb
mov
ja
test
cltd
test
xor
mov
popa
repz
repz
add
dec
jae
add
mov
lret
addb
xchg
enter
push
mov
cmp
add
add
add
mov
mov
mov
jnp
xor
mov
fmuls
fldcw
andl
add
mov
popa
inc
mov
mov
das
popf
mov
push
les
mov
add
jp
test
aas
scas
jecxz
xchg
add
mov
pop
cld
pop
or
imul
popa
xor
add
pop
rorl
mov
jae
jb
mov
mov
mov
sbb
sbb
add
test
xchg
inc
cmpsl
bound
mov
test
add
adc
or
add
xchg
lods
int
sub
das
mov
mov
fs
mov
push
mov
add
fadd
add
push
mov
inc
add
cmp
jb
mov
pop
inc
xor
mov
sub
int3
mov
pop
cmc
and
sarl
cmp
stos
mov
addb
psubsw
jne
fcomps
mov
jae
jnp
push
mov
jnp
sbb
add
dec
fwait
inc
dec
cmp
addr16
aaa
in
push
out
xchg
jle
jmp
add
mov
xor
cmp
sbb
inc
int
add
iret
je
nop
add
mov
sahf
pop
les
lret
insb
inc
jb
mov
adc
sub
addr16
mov
mov
add
loopne
mov
in
and
cwtl
mov
icebp
mov
add
pop
mov
xchg
mov
xchg
add
adc
mov
add
insl
mov
mov
add
aas
cmpsb
mov
es
sub
add
sahf
lds
push
int
ds
arpl
roll
mov
fwait
mov
sub
in
nop
add
sbb
mov
mov
push
rsqrtps
mov
test
mov
int
insb
pop
movsl
and
jo
mov
lahf
mov
ret
scas
lcall
hlt
imulb
fisttpl
xor
test
in
jne
movsl
sub
pop
ja
sti
sub
mov
iret
inc
or
xchg
push
imul
add
js
addr16
gs
mov
in
insb
or
add
nop
add
psrad
mov
add
jl
mov
add
dec
push
stos
scas
lret
call
cmc
mov
aam
pop
sarl
bound
mov
or
and
inc
sbb
stc
in
pop
mov
add
mov
add
mov
add
jne
jmp
ss
add
add
xor
and
mov
arpl
add
mov
dec
mov
addb
sub
ljmp
sahf
mul
sti
std
mov
sub
add
jmp
pop
addl
fisttpll
adc
movsl
filds
adc
mov
add
mov
adc
mov
or
jg
add
enter
add
rolb
mov
cmp
add
and
push
jbe
add
push
mov
push
add
jns
xor
mov
push
outsb
fnstcw
lock
adc
movsl
lods
jb
mov
test
or
out
push
add
add
ss
dec
es
or
flds
pop
mov
dec
push
add
mov
add
add
sbb
loope
mov
mov
jge
clc
in
add
aam
insb
test
push
insl
lcall
add
mov
jbe
aam
lds
mov
test
sti
lods
pop
xchg
and
jle
push
std
incl
into
std
mov
cmpsb
mov
mov
mov
and
inc
repnz
mov
sbb
cmp
test
add
push
jle
add
sub
mov
inc
outsb
mov
xchg
add
pop
adc
mov
mov
add
add
xor
mov
add
mov
mov
loop
mov
xchg
mov
cld
mov
mov
xlat
adc
mov
inc
lret
mov
pop
movsb
add
sbb
add
add
addl
add
test
xor
mov
push
leave
dec
insb
outsl
lcall
mov
mov
sahf
leave
cmpsb
push
mov
adc
mov
mov
add
push
add
mov
mov
jmp
add
cmp
push
cmp
jne
lods
or
cmp
sbb
pop
stc
mov
xchg
jle
add
inc
xchg
or
add
mov
mov
jge
jno
cld
add
stos
ret
add
mov
dec
mov
lods
mov
std
xchg
adc
mov
arpl
mov
mov
inc
xor
pop
adc
add
mov
out
rcrl
or
sub
push
mov
add
cltd
dec
cmp
pushf
scas
mov
push
add
inc
add
in
mov
mov
mov
fs
lcall
ret
xchg
inc
add
add
adc
out
outsb
fisubrs
in
or
mov
mov
daa
inc
rolb
mov
add
addb
mov
mov
int3
xchg
add
mov
dec
sbb
inc
fldl2e
cmp
and
jmp
andl
pop
inc
mov
dec
lcall
mov
jns
mov
addb
fsubrs
xor
loope
test
add
fadds
int
arpl
cmpsl
out
jecxz
into
push
lods
mov
popa
push
enter
add
inc
loopne
mov
sub
jnp
repz
rcll
and
mov
sbbl
xchg
add
xchg
mov
fistpll
out
pop
hlt
enter
pop
mov
inc
lock
add
adc
mov
repz
xor
fsubp
jo
mov
jmp
in
xchg
sub
inc
pushf
fisttpll
sub
aaa
sbb
loope
pop
mov
cmp
add
addb
sbb
mov
lret
lcall
mov
mov
cltd
loope
jno
add
jmp
inc
add
icebp
mov
mov
add
xchg
stos
and
pop
push
and
mov
add
xchg
jecxz
xor
es
mov
mov
test
mov
cmp
pop
mov
jbe
arpl
add
out
push
je
int
add
mov
in
addb
xchg
push
cmpsb
mov
pop
jle
insl
jb
mov
fxch
mov
aas
xchg
rcll
add
inc
sbb
cmpsl
fwait
ljmp
stos
or
aam
pop
loope
add
cmp
mov
add
cwtl
iret
lea
pop
and
mov
xor
mov
shll
sbb
push
adc
mov
roll
add
lods
push
leave
dec
fs
add
lods
mov
std
or
xchg
movb
and
insb
add
mov
insl
fucomp
adc
mov
hlt
jge
xor
mov
rcrl
jb
mov
mov
pop
pop
in
aad
jmp
imul
jge
xor
dec
lds
aaa
scas
or
inc
push
mov
insl
insl
outsl
pop
test
sub
add
sbb
inc
outsb
loop
mov
je
pop
addb
sbb
icebp
icebp
clc
addb
mov
icebp
roll
add
ss
pop
or
pop
xor
sbb
cmpsl
ja
jmp
lret
addb
mov
add
mov
in
movsb
jo
mov
and
pop
mov
hlt
icebp
pop
std
pop
jecxz
mov
xchg
mov
add
rcll
add
jp
cmc
hlt
mov
popa
addb
xor
mov
lcall
sub
xor
mov
mov
mov
adc
mov
add
stos
js
pop
push
push
add
mov
movsl
mov
push
lock
add
add
sub
add
mov
pop
test
add
add
mov
ret
lcall
add
add
mov
sbb
movsl
mov
lods
mov
out
push
inc
push
push
je
cli
and
aad
add
push
outsl
call
stos
cmp
pop
inc
mov
adc
mov
inc
add
das
pop
loope
xchg
push
clc
pop
jp
add
push
xchg
add
icebp
jge
fs
push
pusha
add
addb
sub
or
push
leave
jb
mov
stos
xor
mov
mov
and
mov
pop
cmc
inc
add
inc
lea
add
mov
mov
mov
xchg
in
les
mov
mov
mov
add
adc
imul
xor
mov
clc
repnz
nop
cld
jae
loopne
add
pop
mov
clc
repnz
nop
cld
jae
cmp
jnp
mov
add
add
test
add
pop
clc
repnz
nop
cld
jae
add
jne
push
inc
mov
fmull
nop
nop
cld
jae
add
popa
add
add
mov
clc
repnz
nop
cld
jae
mov
add
mov
push
mov
nop
leave
jmp
add
loop
add
repnz
nop
cld
jae
add
inc
add
dec
add
in
push
clc
repnz
nop
cld
jae
pop
stos
push
leave
in
add
add
add
clc
repnz
nop
cld
jae
add
arpl
mull
mov
mov
clc
repnz
nop
cld
jae
or
add
arpl
add
mov
xchg
ret
or
imul
xlat
add
je
ds
add
sub
add
das
add
clc
repnz
nop
cld
jae
or
mov
test
adc
add
repnz
nop
cld
jae
mov
pop
xchg
and
or
add
repnz
nop
cld
jae
fiadds
out
jne
call
clc
repnz
nop
cld
jae
testb
add
mov
clc
repnz
nop
cld
jae
int3
add
add
add
sbb
movsb
clc
repnz
nop
cld
jae
cmp
add
cmp
push
mov
nop
leave
jmp
add
or
test
sldt
push
mov
nop
leave
jmp
pop
leave
add
inc
and
clc
repnz
nop
cld
jae
xor
mov
nop
nop
cld
jae
inc
push
dec
add
stos
pop
add
clc
repnz
nop
cld
jae
loopne
loopne
xor
jae
add
push
mov
icebp
jge
addl
add
fs
add
cmp
push
clc
repnz
nop
cld
jae
iret
add
add
pop
cmpsb
inc
testb
cld
jae
roll
or
pop
and
cmp
lret
clc
repnz
nop
cld
jae
testl
or
sar
repnz
nop
cld
jae
add
add
add
push
mov
xchg
ret
sub
sub
add
add
xor
add
clc
repnz
nop
cld
jae
add
pop
and
clc
repnz
nop
cld
jae
add
jg
or
nop
add
pusha
push
mov
xchg
ret
popa
jg
add
pop
pop
add
inc
mov
nop
nop
cld
jae
pop
add
clc
add
mov
dec
or
repnz
nop
cld
jae
jne
mov
adc
mov
add
andl
nop
cld
jae
add
xor
push
mov
xchg
ret
pop
add
sub
push
push
mov
xchg
ret
add
pop
add
jp
lret
clc
repnz
nop
cld
jae
add
add
add
arpl
inc
add
dec
leave
mov
add
inc
rolb
mov
mov
clc
repnz
nop
cld
jae
add
leave
add
popa
arpl
test
push
mov
nop
leave
jmp
add
add
addl
loopne
add
mov
xchg
ret
cmp
add
add
add
clc
repnz
nop
cld
jae
mov
inc
add
xor
stos
pusha
push
mov
xchg
ret
add
add
add
inc
dec
mov
clc
repnz
nop
cld
jae
add
add
push
int3
and
mov
xchg
ret
pop
add
out
inc
stos
arpl
pop
jne
clc
repnz
nop
cld
jae
shll
ss
add
pop
clc
repnz
nop
cld
jae
inc
add
cmp
add
push
mov
nop
leave
jmp
mov
sbb
xlat
test
in
push
clc
repnz
nop
cld
jae
add
cmp
pop
push
and
cmp
repnz
nop
cld
jae
out
pop
inc
ja
mov
int3
mov
clc
repnz
nop
cld
jae
stos
add
or
add
clc
repnz
nop
cld
jae
xor
cmp
mov
clc
repnz
nop
cld
jae
cmp
ficomps
fiadds
dec
test
idiv
repnz
nop
cld
jae
mov
add
or
sar
nop
nop
cld
jae
cmp
add
push
mov
xchg
ret
pop
xor
stos
add
in
test
inc
add
add
stos
add
daa
jg
test
add
clc
repnz
nop
cld
jae
add
loop
push
mov
xchg
ret
les
stos
popa
inc
add
dec
push
push
mov
xchg
ret
or
add
test
add
clc
repnz
nop
cld
jae
add
or
aaa
mov
clc
repnz
nop
cld
jae
add
ljmp
nop
cld
jae
xor
add
pop
dec
mov
push
mov
nop
leave
jmp
add
mov
xor
mov
in
nop
leave
jmp
add
leave
add
test
add
sub
in
nop
leave
jmp
testl
testl
mov
nop
leave
jmp
out
pop
in
add
add
dec
lea
push
mov
xchg
ret
gs
inc
fimuls
test
add
clc
repnz
nop
cld
jae
add
ret
popa
mov
clc
repnz
nop
cld
jae
add
add
add
mul
jns
leave
sub
in
nop
leave
jmp
leave
gs
inc
add
cmp
nop
leave
jmp
add
pop
mov
add
lock
repnz
nop
cld
jae
add
add
pop
add
mov
clc
repnz
nop
cld
jae
add
add
jne
push
mov
nop
leave
jmp
add
mov
xchg
cmp
icebp
inc
add
add
cmp
add
add
mov
push
mov
nop
leave
jmp
test
or
push
mov
xchg
ret
fsubp
xor
inc
add
gs
das
push
clc
repnz
nop
cld
jae
xor
push
add
sti
iret
inc
add
push
add
loopne
leave
add
push
push
mov
nop
leave
jmp
ja
add
add
add
mov
clc
repnz
nop
cld
jae
cmp
add
or
nop
nop
cld
jae
pop
add
add
jne
add
or
nop
lret
inc
add
jg
add
cmp
insl
inc
push
mov
xchg
ret
xor
add
add
mov
sar
repnz
nop
cld
jae
add
add
add
sub
nop
leave
jmp
add
mov
jnp
nop
cld
jae
add
add
sub
add
sbb
arpl
mov
nop
leave
jmp
inc
add
mov
nop
nop
cld
jae
negb
xor
clc
repnz
nop
cld
jae
add
stos
add
sub
pop
mov
push
mov
nop
leave
jmp
add
add
inc
mov
into
inc
add
add
add
mov
clc
repnz
nop
cld
jae
push
add
loop
xor
mov
nop
leave
jmp
add
add
test
mov
clc
repnz
nop
cld
jae
push
add
cmp
mov
mov
clc
repnz
nop
cld
jae
push
divb
mov
push
mov
nop
leave
jmp
add
pop
add
add
add
clc
repnz
nop
cld
jae
iret
add
sbb
in
nop
leave
jmp
notl
add
imul
add
push
mov
xchg
ret
cmp
add
add
int
push
mov
xchg
ret
or
mov
or
jbe
add
or
repnz
nop
cld
jae
leave
popa
inc
imul
pusha
add
add
in
nop
leave
jmp
add
add
add
dec
add
nop
cld
jae
add
add
add
test
sub
add
repnz
nop
cld
jae
push
add
cltd
push
push
mov
xchg
ret
add
loop
leave
and
push
mov
xchg
ret
les
add
sbb
mov
clc
repnz
nop
cld
jae
inc
xor
les
hlt
lods
mov
push
mov
xchg
ret
push
add
add
inc
sub
add
inc
add
add
in
add
jne
and
repnz
nop
cld
jae
sub
dec
mov
push
clc
repnz
nop
cld
jae
add
out
add
iret
stos
ss
push
clc
repnz
nop
cld
jae
add
or
add
push
mov
nop
leave
jmp
add
add
add
or
add
xor
add
clc
repnz
nop
cld
jae
add
mov
mov
push
mov
nop
leave
jmp
add
cmp
add
add
loopne
mov
es
push
mov
nop
leave
jmp
push
add
adc
repnz
nop
cld
jae
add
les
iret
cmp
nop
nop
cld
jae
leave
add
push
add
ja
push
push
mov
xchg
ret
add
add
and
add
icebp
and
mov
stos
clc
repnz
nop
cld
jae
cmp
add
sti
movzwl
push
mov
nop
leave
jmp
arpl
add
add
mov
push
mov
nop
leave
jmp
push
mov
mov
add
clc
repnz
nop
cld
jae
pop
dec
les
add
mov
clc
repnz
nop
cld
jae
out
add
add
sub
mov
nop
leave
jmp
add
leave
add
stos
dec
pop
rep
push
mov
nop
leave
jmp
add
push
add
popa
inc
loopne
mov
mov
in
nop
leave
jmp
cmp
add
add
jne
push
subl
clc
repnz
nop
cld
jae
add
add
add
jge
clc
repnz
nop
cld
jae
add
dec
add
add
nop
cld
jae
push
fiadds
add
fisttpl
incl
add
mov
add
divl
mov
xor
clc
repnz
nop
cld
jae
arpl
fiadds
add
mov
xchg
ret
clc
add
add
sub
push
mov
xchg
ret
add
clc
dec
and
out
add
nop
nop
cld
jae
roll
mov
clc
repnz
nop
cld
jae
inc
mov
mov
mov
push
mov
nop
leave
jmp
add
push
add
and
clc
repnz
nop
cld
jae
jg
clc
mov
add
jmp
pop
add
add
xor
inc
pop
add
les
clc
repnz
nop
cld
jae
pop
mov
add
sbb
add
clc
repnz
nop
cld
jae
mov
fdivp
and
mov
add
bound
repnz
nop
cld
jae
addl
or
scas
push
clc
repnz
nop
cld
jae
inc
add
iret
add
clc
scas
sub
clc
repnz
nop
cld
jae
add
cmp
push
mov
nop
leave
jmp
inc
inc
arpl
in
inc
lret
xor
push
mov
nop
leave
jmp
mov
xor
gs
int3
loop
mov
cmp
mov
and
add
in
nop
leave
jmp
add
ja
jl
loopne
clc
repnz
nop
cld
jae
add
inc
add
cmp
and
push
mov
xchg
ret
add
test
mov
mov
inc
add
add
roll
clc
repnz
nop
cld
jae
cmp
push
test
in
and
repnz
nop
cld
jae
add
loopne
add
loope
inc
add
test
les
pop
mov
jecxz
mov
clc
repnz
nop
cld
jae
leave
mov
sub
push
out
inc
add
add
add
add
add
clc
repnz
nop
cld
jae
inc
and
add
push
mov
xchg
ret
add
add
sbb
mov
icebp
push
mov
nop
leave
jmp
add
add
add
decl
nop
nop
cld
jae
add
cmp
add
clc
repnz
nop
cld
jae
push
test
negb
add
add
repnz
nop
cld
jae
add
add
add
repnz
nop
cld
jae
loop
sub
shr
fisubl
mov
nop
leave
jmp
inc
or
cmp
insb
nop
push
mov
xchg
ret
mov
arpl
pop
addl
add
xor
push
mov
xchg
ret
push
test
add
arpl
add
xchg
push
mov
nop
leave
jmp
mov
cmp
add
mov
mov
repnz
nop
cld
jae
jne
add
add
add
clc
inc
add
add
add
inc
int3
add
clc
repnz
nop
cld
jae
add
add
add
add
clc
repnz
nop
cld
jae
pop
and
adc
mov
xchg
ret
add
imul
cmp
sar
repnz
nop
cld
jae
add
or
popl
clc
repnz
nop
cld
jae
add
aaa
dec
rol
clc
repnz
nop
cld
jae
leave
and
std
push
push
mov
xchg
ret
inc
add
add
popa
mov
clc
repnz
nop
cld
jae
add
inc
int3
in
pop
testl
jae
add
sbbl
repnz
nop
cld
jae
stos
add
loop
arpl
sbb
add
repnz
nop
cld
jae
inc
mov
mov
repnz
nop
cld
jae
pop
add
mov
jne
clc
repnz
nop
cld
jae
iret
push
sub
add
jg
clc
repnz
nop
cld
jae
or
push
inc
add
dec
adc
repnz
nop
cld
jae
push
sub
inc
arpl
mov
push
mov
xchg
ret
add
jne
sbb
stos
roll
nop
nop
cld
jae
add
add
add
mov
mov
mov
incl
pop
add
add
call
movb
jns
jbe
and
push
mov
xchg
ret
add
add
mov
clc
repnz
nop
cld
jae
inc
fiadds
clc
repnz
nop
cld
jae
add
leave
add
dec
movsl
mov
in
nop
leave
jmp
add
add
divb
in
push
clc
repnz
nop
cld
jae
rorl
push
pop
sbb
cmp
jg
clc
repnz
nop
cld
jae
cmp
add
push
push
add
popa
or
and
add
sbb
add
repnz
nop
cld
jae
push
add
add
and
push
fs
repnz
nop
cld
jae
out
add
lahf
xor
clc
repnz
nop
cld
jae
iret
add
push
add
addb
and
mov
in
nop
leave
jmp
in
mov
iret
add
add
or
shl
clc
repnz
nop
cld
jae
xor
lahf
push
push
mov
xchg
ret
push
add
push
mov
add
mov
clc
repnz
nop
cld
jae
add
leave
add
add
mov
push
clc
repnz
nop
cld
jae
leave
or
push
push
fcomps
repnz
nop
cld
jae
sbb
mov
and
add
in
nop
leave
jmp
add
add
inc
nop
add
push
mov
nop
leave
jmp
dec
and
jne
leave
push
clc
repnz
nop
cld
jae
and
add
add
add
clc
clc
repnz
nop
cld
jae
stos
jg
inc
add
add
gs
pop
push
mov
nop
leave
jmp
add
inc
add
add
inc
sbb
nop
cld
jae
add
dec
test
mov
add
add
add
in
mov
cmc
cld
add
push
mov
nop
leave
jmp
inc
add
add
jne
push
inc
add
mov
xchg
ret
add
pop
jne
cmp
lea
repnz
nop
cld
jae
imul
inc
add
add
sub
clc
repnz
nop
cld
jae
push
imul
lcall
add
clc
popa
les
jne
add
arpl
add
push
clc
repnz
nop
cld
jae
add
mov
jne
clc
repnz
nop
cld
jae
mov
out
leave
add
jecxz
xor
push
mov
xchg
ret
roll
arpl
cmp
mov
clc
repnz
nop
cld
jae
push
sbb
inc
and
mov
nop
cld
jae
add
stos
imul
push
add
add
in
nop
leave
jmp
int3
mov
imul
xchg
inc
js
and
clc
repnz
nop
cld
jae
jg
ja
scas
add
push
mov
xchg
ret
popa
testb
add
test
clc
repnz
nop
cld
jae
inc
in
gs
add
add
adc
mov
xchg
ret
leave
add
xor
add
push
add
add
push
mov
nop
leave
jmp
add
pop
mov
add
movb
add
clc
repnz
nop
cld
jae
add
add
icebp
pop
add
push
mov
nop
leave
jmp
add
add
fs
insb
push
mov
nop
leave
jmp
add
jne
cmp
repnz
nop
cld
jae
popa
add
add
add
add
call
clc
repnz
nop
cld
jae
add
push
inc
mov
add
clc
repnz
nop
cld
jae
add
add
add
push
mov
xchg
ret
iret
jne
xor
jmp
mov
xchg
ret
mov
add
push
clc
repnz
nop
cld
jae
xlat
inc
add
inc
add
push
movsb
add
push
mov
nop
leave
jmp
cmp
andl
enter
mov
nop
leave
jmp
add
push
add
inc
add
and
sub
mov
nop
leave
jmp
add
add
dec
add
mov
add
add
clc
repnz
nop
cld
jae
add
ret
clc
repnz
nop
cld
jae
add
pop
add
pop
and
clc
repnz
nop
cld
jae
add
add
add
add
push
mov
xchg
ret
cmp
mov
in
add
mov
xchg
ret
pop
add
mov
out
push
mov
cmp
push
mov
nop
leave
jmp
jne
mov
dec
mov
clc
repnz
nop
cld
jae
iret
mov
popa
xor
clc
repnz
nop
cld
jae
add
mov
add
in
mov
dec
lea
push
mov
nop
leave
jmp
dec
sub
add
test
cli
clc
repnz
nop
cld
jae
mov
test
add
xor
add
push
mov
nop
leave
jmp
add
mov
add
clc
repnz
nop
cld
jae
ja
add
cmp
into
pop
clc
repnz
nop
cld
jae
test
mov
add
pop
clc
repnz
nop
cld
jae
dec
gs
pop
add
dec
add
mov
clc
repnz
nop
cld
jae
testl
mov
mov
negl
push
mov
nop
leave
jmp
add
add
add
add
push
mov
nop
nop
cld
jae
and
add
sbb
nop
nop
cld
jae
push
add
add
xchg
push
mov
xchg
ret
add
add
xor
sub
sub
add
or
add
dec
sub
xchg
cli
inc
add
add
addl
mov
xchg
clc
repnz
nop
cld
jae
mov
sub
push
mov
xchg
ret
arpl
add
xor
add
nop
nop
cld
jae
or
add
inc
jmp
call
in
nop
leave
jmp
mov
mov
add
pop
cmp
mov
xchg
ret
stos
mov
mov
rolb
mov
add
push
mov
nop
leave
jmp
dec
int3
add
add
int
movb
mov
xchg
ret
mov
pop
xor
mov
jmp
add
mov
sub
dec
sbb
out
loop
mov
scas
dec
push
mov
nop
leave
jmp
add
or
inc
add
insb
pop
clc
repnz
nop
cld
jae
push
add
gs
sub
sbb
fdivr
inc
add
popa
xor
test
movsb
push
mov
nop
leave
jmp
clc
add
add
add
sub
mov
nop
leave
jmp
inc
push
add
add
mov
sbb
inc
add
inc
add
stos
add
aad
pop
js
clc
repnz
nop
cld
jae
imul
sbb
out
in
pop
xchg
add
or
in
nop
leave
jmp
loopne
or
in
shr
clc
repnz
nop
cld
jae
xor
iret
arpl
je
clc
repnz
nop
cld
jae
or
inc
sbb
fsqrt
inc
add
pop
add
arpl
add
mov
clc
repnz
nop
cld
jae
fidivrs
cmp
add
push
mov
xchg
ret
add
add
add
jnp
or
in
nop
leave
jmp
mov
add
add
daa
jb
mov
gs
mov
clc
repnz
nop
cld
jae
leave
in
push
cmp
ret
pop
push
mov
cwtl
or
add
add
sub
add
add
push
test
clc
repnz
nop
cld
jae
add
add
add
jns
ret
repnz
nop
cld
jae
xor
add
je
clc
repnz
nop
cld
jae
ja
les
lcall
leave
jmp
mov
add
mov
add
clc
repnz
nop
cld
jae
add
mov
add
add
lea
push
mov
nop
leave
jmp
add
add
or
add
clc
repnz
nop
cld
jae
add
in
add
add
pusha
push
mov
nop
leave
jmp
add
add
add
push
mov
into
in
add
add
ret
jnp
add
xchg
cltd
push
clc
repnz
nop
cld
jae
or
shrl
mov
clc
repnz
nop
cld
jae
inc
add
gs
inc
popf
pusha
clc
repnz
nop
cld
jae
dec
pop
cmp
add
sub
push
mov
xchg
ret
or
add
mov
clc
repnz
nop
cld
jae
loop
dec
mov
xlat
add
shl
push
mov
xchg
ret
push
push
add
push
testl
cld
jae
push
add
push
call
repnz
nop
cld
jae
add
add
add
add
clc
repnz
nop
cld
jae
add
add
add
add
clc
repnz
nop
cld
jae
add
sub
xlat
push
negb
in
nop
leave
jmp
add
imul
or
out
pop
push
mov
xchg
ret
add
add
push
add
clc
repnz
nop
cld
jae
in
leave
out
in
int3
inc
add
insl
imul
push
mov
nop
leave
jmp
add
add
sbbl
and
ss
clc
repnz
nop
cld
jae
add
pop
jl
sar
repnz
nop
cld
jae
add
out
stos
add
loop
push
clc
repnz
nop
cld
jae
jg
add
xor
mov
pop
mov
clc
repnz
nop
cld
jae
push
pop
inc
in
mov
clc
repnz
nop
cld
jae
inc
in
fdivrl
clc
repnz
nop
cld
jae
add
add
push
mov
xchg
ret
add
clc
push
add
mov
jb
mov
test
cmp
jae
add
add
mov
mov
add
xor
inc
add
xchg
mov
movzwl
clc
repnz
nop
cld
jae
roll
imul
stos
push
mov
xchg
ret
mov
add
or
add
jbe
xchg
push
mov
xchg
ret
fisubs
clc
or
push
push
clc
repnz
nop
cld
jae
iret
mov
mov
pop
add
push
mov
nop
leave
jmp
leave
or
add
pop
clc
repnz
nop
cld
jae
add
ja
pop
pop
cmp
add
mov
nop
leave
jmp
add
add
clc
out
in
adc
repz
mov
div
pushf
push
clc
repnz
nop
cld
jae
xor
xor
clc
repnz
nop
cld
jae
in
inc
add
andl
clc
repnz
nop
cld
jae
add
add
inc
add
clc
repnz
nop
cld
jae
push
loopne
add
xchg
and
cmpl
in
nop
leave
jmp
add
add
inc
dec
jmp
add
add
add
clc
xlat
add
add
mov
push
mov
xchg
ret
add
pop
out
mul
add
mov
push
mov
xchg
ret
mov
add
add
call
clc
repnz
nop
cld
jae
sbb
clc
repnz
nop
cld
jae
addl
push
add
and
clc
repnz
nop
cld
jae
mov
ja
push
push
mov
xchg
ret
stos
in
add
imulb
mov
clc
repnz
nop
cld
jae
cmp
push
clc
repnz
nop
cld
jae
pop
inc
add
mov
push
clc
repnz
nop
cld
jae
sub
clc
test
jg
clc
repnz
nop
cld
jae
add
or
add
jmp
pop
inc
dec
dec
add
cmp
loop
inc
push
or
test
add
clc
repnz
nop
cld
jae
testl
jecxz
and
mov
push
mov
xchg
ret
inc
or
push
aas
mov
clc
repnz
nop
cld
jae
or
add
jnp
outsb
and
repnz
nop
cld
jae
cmp
add
out
pop
aam
pop
push
push
mov
xchg
ret
add
mov
add
push
popa
and
bound
mov
addr16
and
xchg
cmpsb
inc
int3
mov
push
mov
xchg
ret
add
add
add
imul
jmp
nop
leave
jmp
add
sub
add
in
popf
add
clc
repnz
nop
cld
jae
or
add
add
clc
repnz
nop
cld
jae
add
mov
pop
out
insb
mov
push
mov
xchg
ret
add
pop
mov
jo
mov
add
clc
repnz
nop
cld
jae
or
or
andl
nop
cld
jae
loopne
add
and
push
mov
nop
leave
jmp
jg
add
pop
add
rolb
mov
mov
clc
repnz
nop
cld
jae
add
xor
mov
das
mov
clc
repnz
nop
cld
jae
add
cli
pop
push
mov
xchg
ret
clc
add
or
or
popa
push
mov
nop
leave
jmp
add
add
cmp
nop
nop
cld
jae
in
arpl
iret
add
add
clc
repnz
nop
cld
jae
add
pop
ja
insl
mov
clc
repnz
nop
cld
jae
sarl
add
iret
pop
jmp
mov
add
mov
inc
add
testl
mov
mov
nop
nop
cld
jae
xlat
inc
add
ja
add
lock
add
add
repnz
nop
cld
jae
pop
out
add
mov
les
jmp
pop
add
and
mov
in
js
test
hlt
clc
repnz
nop
cld
jae
arpl
lock
clc
repnz
nop
cld
jae
testl
mov
clc
repnz
nop
cld
jae
mov
in
int3
or
adc
repnz
nop
cld
jae
cmp
add
add
clc
repnz
nop
cld
jae
push
add
inc
mov
sub
clc
repnz
nop
cld
jae
ja
add
cmp
dec
jne
push
mov
nop
leave
jmp
cmp
add
mov
clc
repnz
nop
cld
jae
add
in
add
inc
add
test
ljmp
cld
jae
in
inc
fs
push
clc
repnz
nop
cld
jae
in
mov
test
icebp
clc
repnz
nop
cld
jae
add
pop
clc
repnz
nop
cld
jae
add
add
stos
mov
add
rolb
int3
call
clc
repnz
nop
cld
jae
popa
mov
loopne
mov
clc
repnz
nop
cld
jae
mov
inc
sub
popf
clc
repnz
nop
cld
jae
xor
inc
xchg
inc
jb
mov
mov
mov
push
mov
xchg
ret
les
pop
add
add
pop
mov
xchg
lahf
add
cmp
sti
inc
fdivrl
xchg
add
add
mov
xchg
ret
fiadds
add
loopne
push
xlat
mov
stc
mov
push
mov
nop
leave
jmp
add
add
sub
aad
inc
add
add
add
add
or
push
mov
nop
leave
jmp
cmp
inc
add
clc
repnz
nop
cld
jae
popa
add
loop
xchg
insb
push
push
mov
xchg
ret
mull
or
cmp
add
clc
repnz
nop
cld
jae
clc
popa
loopne
push
add
jmp
inc
mov
divb
add
loopne
push
jnp
mov
adc
mov
nop
leave
jmp
sbb
pop
add
pop
push
mov
nop
leave
jmp
mov
add
dec
mov
xchg
cmpsl
into
jmp
xor
leave
add
add
add
add
flds
in
nop
leave
jmp
sub
push
add
push
mov
xchg
ret
add
add
add
add
push
mov
xchg
ret
add
add
mov
push
mov
xchg
ret
add
mov
add
sub
add
push
mov
nop
leave
jmp
out
add
add
popa
add
mov
in
nop
leave
jmp
mov
mov
push
mov
xchg
ret
clc
inc
leave
stos
add
add
mov
mov
clc
repnz
nop
cld
jae
add
add
les
sub
clc
repnz
nop
cld
jae
loopne
add
int3
inc
add
add
push
mov
nop
leave
jmp
pop
test
popa
clc
and
clc
repnz
nop
cld
jae
add
inc
add
or
repnz
nop
cld
jae
add
add
add
popa
add
adc
test
push
or
add
pop
xor
mov
cmp
inc
add
add
cmp
dec
add
movzwl
clc
repnz
nop
cld
jae
add
and
addb
pop
cld
push
mov
xchg
ret
test
mov
add
repnz
add
ficomps
out
add
add
pop
push
mov
xchg
ret
add
or
add
clc
repnz
nop
cld
jae
add
mov
mov
xchg
ret
add
sub
iret
mov
push
mov
nop
leave
jmp
dec
cmp
mov
mov
fstl
in
add
add
add
jno
repz
push
daa
ja
fisttpll
nop
nop
cld
jae
add
stos
addl
repnz
nop
cld
jae
push
add
add
xchg
shrl
push
mov
nop
leave
jmp
ja
pop
add
push
clc
repnz
nop
cld
jae
mov
leave
add
add
pusha
add
repnz
nop
cld
jae
add
add
das
call
clc
repnz
nop
cld
jae
xlat
pop
xor
loop
clc
repnz
nop
cld
jae
add
jg
add
jle
push
mov
xchg
ret
imul
add
popa
pop
xor
clc
repnz
nop
cld
jae
and
add
pop
call
clc
repnz
nop
cld
jae
popa
mov
mov
push
push
jne
inc
add
add
sbb
loop
mov
fs
inc
add
add
add
push
add
ljmp
leave
jmp
dec
mov
mov
clc
repnz
nop
cld
jae
add
sub
mov
aam
mov
clc
repnz
nop
cld
jae
add
add
loopne
movzwl
clc
repnz
nop
cld
jae
add
push
push
cmp
pushl
mov
add
add
add
inc
add
popa
add
cmpl
push
mov
nop
leave
jmp
add
loopne
sti
push
clc
repnz
nop
cld
jae
add
add
add
fisttpll
nop
cld
jae
add
add
sub
push
add
clc
repnz
nop
cld
jae
dec
add
loop
mov
into
lea
clc
repnz
nop
cld
jae
add
add
cmp
ret
stos
lea
push
mov
nop
leave
jmp
pop
add
add
add
lea
clc
repnz
nop
cld
jae
add
add
add
ret
sbb
cld
jae
push
add
daa
add
xor
add
roll
or
add
add
inc
add
add
add
add
mov
nop
leave
jmp
les
stos
cmp
jne
xor
in
nop
leave
jmp
cmp
out
dec
add
add
push
mov
xchg
ret
add
add
arpl
inc
add
aaa
sub
test
add
add
repnz
nop
cld
jae
xor
push
mov
xchg
ret
add
add
inc
pop
add
dec
cmp
repnz
nop
cld
jae
add
push
add
movsb
push
mov
nop
leave
jmp
add
push
add
push
mov
xchg
ret
add
inc
add
in
cmp
outsl
push
push
mov
nop
leave
jmp
add
or
or
nop
nop
cld
jae
xlat
int3
add
add
add
add
in
nop
leave
jmp
pop
add
inc
push
jle
push
mov
xchg
ret
arpl
add
sbb
cmp
add
repnz
nop
cld
jae
inc
mov
inc
add
sti
add
push
mov
nop
leave
jmp
mov
add
adc
pop
push
mov
nop
leave
jmp
add
or
arpl
add
mov
lret
inc
add
mov
mov
xor
mov
sbb
mov
xchg
ret
add
add
mov
mov
sarl
clc
repnz
nop
cld
jae
add
ret
adc
in
and
add
mov
add
push
pop
add
test
mov
add
push
mov
xchg
ret
inc
inc
add
add
inc
add
movsl
rorb
incb
xor
movb
cmp
mov
add
push
mov
nop
leave
jmp
arpl
cltd
add
push
mov
xchg
ret
or
leave
jne
add
mov
clc
repnz
nop
cld
jae
inc
add
add
test
cld
call
in
nop
leave
jmp
loopne
add
fwait
mov
push
mov
xchg
ret
add
arpl
or
add
repnz
nop
cld
jae
out
dec
cmp
outsl
arpl
add
repnz
nop
cld
jae
mov
call
clc
repnz
nop
cld
jae
add
in
jmp
nop
cld
jae
mov
xor
push
add
push
mov
nop
leave
jmp
out
cmp
mov
push
sbb
repnz
nop
cld
jae
sub
mov
inc
add
cmovns
cs
add
add
fiadds
dec
sbb
mov
add
pop
add
add
repnz
nop
cld
jae
push
add
add
add
in
nop
leave
jmp
mov
lods
mov
push
mov
xchg
ret
dec
add
pop
add
add
mov
nop
cld
jae
test
add
movsl
and
clc
repnz
nop
cld
jae
add
cmp
add
jns
ss
repnz
nop
cld
jae
mov
les
mov
sbb
daa
pushf
mov
clc
repnz
nop
cld
jae
inc
mov
xor
sbb
clc
repnz
nop
cld
jae
add
loop
in
outsl
push
clc
repnz
nop
cld
jae
shll
add
mov
and
mov
div
clc
repnz
nop
cld
jae
add
xlat
add
add
hlt
dec
and
clc
repnz
nop
cld
jae
test
sbb
clc
rolb
mov
rolb
mov
pusha
clc
repnz
nop
cld
jae
push
sbb
add
mov
test
clc
repnz
nop
cld
jae
cmp
push
push
add
push
mov
nop
leave
jmp
add
adcl
add
push
mov
nop
leave
jmp
add
jg
les
dec
mov
repnz
nop
cld
jae
pop
jg
mov
push
mov
xchg
ret
add
add
add
add
test
push
push
mov
xchg
ret
mov
testb
jg
add
add
clc
repnz
nop
cld
jae
and
add
jne
clc
repnz
nop
cld
jae
in
or
movl
cmp
in
nop
leave
jmp
sub
sbb
sub
push
rolb
mov
clc
repnz
nop
cld
jae
or
add
or
icebp
or
in
nop
leave
jmp
or
inc
add
add
mov
clc
repnz
nop
cld
jae
add
jns
add
mov
cmp
ret
add
add
mov
push
clc
repnz
nop
cld
jae
add
add
add
mov
nop
leave
jmp
popa
mov
dec
pusha
add
and
clc
repnz
nop
cld
jae
add
jne
clc
repnz
nop
cld
jae
add
add
mov
add
clc
repnz
nop
cld
jae
add
push
clc
xor
mov
push
mov
nop
leave
jmp
push
inc
or
add
push
add
and
mov
mov
movb
repnz
nop
cld
jae
add
in
push
mov
jle
add
cmp
cmp
ret
or
xlat
add
leave
inc
in
add
nop
nop
cld
jae
pop
add
add
clc
arpl
mov
xchg
ret
cmp
inc
jg
rorl
mov
call
clc
repnz
nop
cld
jae
stos
pop
add
push
push
clc
repnz
nop
cld
jae
inc
inc
in
add
add
clc
repnz
nop
cld
jae
add
iret
add
les
clc
repnz
nop
cld
jae
add
add
pop
stos
clc
repnz
nop
cld
jae
in
add
add
addr16
shr
push
mov
nop
leave
jmp
add
cmp
dec
push
push
mov
xchg
ret
dec
inc
add
leave
leave
sbb
sub
clc
repnz
nop
cld
jae
sbb
sbb
add
addb
ljmp
add
mov
add
xor
ja
clc
repnz
nop
cld
jae
add
mov
push
clc
repnz
nop
cld
jae
leave
or
lods
clc
repnz
nop
cld
jae
push
add
dec
in
add
or
mov
jns
and
jecxz
xchg
or
out
fwait
sub
enter
nop
cld
jae
add
or
and
mov
sahf
mov
clc
repnz
nop
cld
jae
add
inc
and
push
clc
repnz
nop
cld
jae
add
add
pop
inc
mov
mov
ret
clc
repnz
nop
cld
jae
add
loop
dec
sub
jmp
add
add
add
pop
pop
add
mov
push
mov
xchg
ret
add
sub
roll
mov
push
mov
nop
leave
jmp
arpl
add
repnz
nop
cld
jae
jne
dec
add
add
loopne
sub
jmp
add
add
xlat
add
int3
sbb
stos
in
cmp
mulb
sti
push
push
mov
xchg
ret
or
add
cmp
add
mov
nop
leave
jmp
add
add
add
nop
nop
cld
jae
add
testb
add
jne
rcll
jbe
lret
or
cld
jae
mov
xchg
fadds
mov
xchg
ret
arpl
in
or
add
mov
inc
add
in
add
add
stc
clc
repnz
nop
cld
jae
pop
pop
loopne
add
xlat
inc
out
xor
clc
repnz
nop
cld
jae
add
pop
add
mov
repnz
mov
xchg
ret
add
add
add
push
add
sahf
cwtl
out
xor
shll
test
add
in
es
decl
mov
xchg
ret
add
add
cmp
mov
repnz
nop
cld
jae
add
xor
push
clc
repnz
nop
cld
jae
add
add
add
add
sbb
repnz
nop
cld
jae
add
add
pop
mov
repnz
nop
cld
jae
popa
leave
popa
inc
mov
add
loop
mov
mov
clc
repnz
nop
cld
jae
mov
mov
clc
repnz
nop
cld
jae
mov
cmp
and
inc
add
sub
int3
inc
or
mov
nop
leave
jmp
add
inc
inc
add
add
xlat
inc
fimuls
mov
nop
leave
jmp
stos
test
and
mov
mov
clc
repnz
nop
cld
jae
popa
testb
mov
mov
nop
leave
jmp
add
sub
push
mov
nop
leave
jmp
or
add
or
sbb
pop
call
in
nop
leave
jmp
loopne
mov
add
push
mov
nop
leave
jmp
add
ja
idivb
pop
pushl
clc
repnz
nop
cld
jae
add
jne
mov
or
add
add
repnz
nop
cld
jae
add
stos
push
push
mov
xchg
ret
add
push
jg
cmp
popa
mov
push
clc
repnz
nop
cld
jae
add
stos
or
add
xor
mov
mov
ja
mov
clc
repnz
nop
cld
jae
mulb
inc
and
push
mov
nop
leave
jmp
xlat
inc
orl
add
add
in
nop
leave
jmp
loopne
add
or
push
mov
or
add
add
add
add
cmpsl
in
icebp
xchg
add
mov
xchg
ret
add
add
fdivr
clc
repnz
nop
cld
jae
andl
mov
clc
repnz
nop
cld
jae
inc
sbb
nop
nop
cld
jae
mov
pop
and
or
clc
repnz
nop
cld
jae
pop
add
pop
add
push
mov
nop
leave
jmp
mov
popa
inc
mov
popa
add
repnz
nop
cld
jae
leave
add
add
clc
repnz
nop
cld
jae
add
add
add
push
mov
nop
leave
jmp
add
xlat
add
testl
adc
repnz
nop
cld
jae
inc
popa
add
or
cld
dec
push
mov
xchg
ret
add
testb
add
leave
imul
movzwl
push
mov
xchg
ret
add
jg
pop
or
repnz
nop
cld
jae
add
inc
add
add
clc
repnz
nop
cld
jae
clc
jg
add
add
outsb
call
push
mov
nop
leave
jmp
add
pop
sub
pop
add
push
mov
nop
leave
jmp
add
push
or
pop
add
clc
repnz
nop
cld
jae
shl
popa
add
jp
mov
fdivrs
scas
add
sub
inc
add
repnz
mov
nop
leave
jmp
add
add
and
movl
jae
sbb
xor
mov
push
mov
xchg
ret
pop
imull
add
testl
jae
stos
xor
add
cmp
arpl
mov
clc
repnz
nop
cld
jae
add
arpl
or
clc
repnz
nop
cld
jae
or
call
clc
repnz
nop
cld
jae
dec
add
loop
jne
clc
repnz
nop
cld
jae
add
add
dec
add
mov
nop
leave
jmp
iret
add
add
int3
add
adc
push
mov
nop
leave
jmp
imul
xchg
pop
jmp
clc
repnz
nop
cld
jae
leave
or
mov
jl
clc
repnz
nop
cld
jae
inc
loop
sbb
add
repz
movzwl
clc
repnz
nop
cld
jae
inc
add
ja
add
shrl
repnz
nop
cld
jae
add
mov
add
test
push
mov
nop
leave
jmp
iret
inc
inc
xlat
add
mov
jg
mov
add
add
add
notl
jmp
add
mov
cwtl
fnstenv
add
repnz
les
xchg
bound
mov
ret
fisubrl
mov
mov
loope
xchg
jg
ljmp
mov
sub
imul
fwait
hlt
xchg
mov
and
mov
ja
and
add
mov
repnz
or
mov
add
pop
fnstenv
das
mov
pushf
stc
popl
mov
movhps
ljmp
add
xlat
add
dec
xchg
out
jns
ja
jne
lds
in
addr16
jbe
jg
mov
add
pop
pusha
add
add
pop
lds
push
add
push
mov
pusha
add
pop
popf
out
push
loope
push
int
add
mov
ja
mov
aad
push
pop
dec
ds
add
add
in
mov
sbb
push
cmp
stc
into
sub
mov
jp
sbb
add
jmp
cmp
daa
stos
mov
push
aad
dec
mov
mov
xor
mov
adc
mov
sub
adc
mov
orl
jle
in
cld
pushf
je
and
mov
lea
add
addb
xchg
test
inc
xchg
in
inc
cltd
jmp
mov
add
pushf
dec
adc
loop
mov
pusha
add
dec
cli
and
add
stos
scas
add
mov
call
add
and
add
and
add
das
lods
cli
pop
and
fiadds
nop
add
mov
scas
out
dec
xchg
push
push
inc
inc
jne
add
add
cltd
adc
enter
fadds
add
add
inc
cmp
in
movsl
adc
push
dec
test
jmp
adc
mov
arpl
iret
mov
mov
insl
movb
rcrl
lcall
mov
cs
and
push
jecxz
add
mov
aaa
adc
mov
mov
cltd
mov
cwtl
adc
cwtl
sbb
xchg
or
push
out
jae
cmc
sub
sbb
mov
std
xchg
bound
mov
add
sti
cwtl
lock
out
and
mov
sbb
inc
add
dec
call
mov
es
mov
dec
mov
xchg
cmp
sub
cmp
xchg
push
rorl
add
jns
add
mov
add
add
xor
mov
repnz
data16
jg
xchg
adc
add
stos
clc
xor
mov
add
mov
mov
pushl
mov
add
xor
add
cmp
sub
add
vmread
mov
add
add
add
pop
adc
mov
pop
insl
add
mov
push
sbb
iret
jl
add
jnp
test
stc
ret
mov
dec
loope
das
adc
xchg
mov
movsl
xchg
sbb
mov
push
dec
push
add
mov
add
mov
mov
adc
je
mov
mov
add
stos
inc
add
outsl
daa
cmp
mov
lock
std
dec
fcmovnu
pop
movsl
aad
push
inc
push
ds
in
in
mov
aad
xor
mov
insb
xlat
pusha
add
xor
mov
inc
cmp
mov
mov
sarl
js
add
xchg
add
or
popa
addr16
sub
mov
data16
and
jne
daa
rorl
jecxz
inc
js
pop
mov
outsl
jb
mov
mov
mov
enter
add
mov
and
jns
push
lahf
xchg
xlat
je
es
inc
push
add
add
push
cmpsb
jl
add
hlt
mov
add
rolb
cmpsb
pushf
jne
pop
pop
div
add
push
mov
jo
mov
mov
xchg
inc
xchg
cmp
push
add
cmp
rolb
mov
mov
add
dec
push
xchg
outsb
nop
add
and
outsl
out
sub
dec
jno
fdivs
mov
pop
jecxz
dec
jle
orl
add
mov
add
mov
lods
mov
fdivl
lock
cmp
lock
fildl
pop
je
pop
mov
test
cmp
pop
add
and
loopne
mov
popf
lds
mov
add
add
and
mov
xchg
lea
xor
xor
sti
xor
mov
lods
cmp
add
mov
and
sti
mov
lea
cmp
leave
aaa
cltd
jnp
xchg
add
mov
add
mov
ja
in
inc
cmp
es
stos
sbb
xor
push
add
mov
jno
icebp
push
mov
cmp
or
jp
shrl
jg
add
xor
mov
movsl
loop
mov
xor
pop
dec
sbb
jp
andl
add
push
add
adc
xor
mov
or
sub
mulb
add
fs
test
add
add
jmp
pusha
add
xchg
push
fcoml
mov
cmovs
dec
sbb
bound
mov
add
sti
lock
push
add
cmc
lock
data16
loop
mov
bound
mov
and
add
add
mov
sbb
inc
and
mov
add
mov
add
leave
rolb
mov
jecxz
lock
mov
mov
and
mov
push
mov
mov
notb
add
dec
jecxz
xchg
addb
jo
mov
out
jae
mov
psubb
in
xor
mov
lock
loope
cmc
int3
test
mov
imul
jge
imul
push
mov
ret
imul
mov
mov
sbb
mov
cmp
aaa
aas
scas
enter
divb
adc
add
xor
enter
pop
adc
gs
xchg
add
jb
mov
xchg
add
iret
mov
mov
dec
sub
adc
mov
lret
xchg
out
ds
mov
mov
and
lods
adcl
pop
add
adc
fdivrl
mov
xchg
pop
xchg
mov
or
mov
subl
xchg
xor
jle
jnp
out
add
push
out
fistps
test
xchg
and
sti
imul
adc
call
cmp
into
pop
dec
mov
lods
leave
fisttps
add
mov
into
pop
ss
add
mov
iret
lcall
pop
or
xor
mov
ja
xchg
es
fmuls
xlat
outsl
fisubrs
mov
or
inc
iret
xchg
jg
mov
and
std
and
mov
lret
lock
mov
dec
hlt
lret
rolb
mov
imul
int
mov
sbb
filds
mov
pop
enter
pushf
inc
mov
add
mov
test
out
clc
sbbl
sub
inc
pop
cmc
fcomps
rolb
mov
xor
in
lods
into
sub
repnz
mov
cli
xchg
xchg
cmc
stc
negb
mov
lret
addb
push
adc
mov
pop
shr
clc
mov
mov
add
xchg
pop
arpl
add
adc
xor
add
fldt
in
in
cltd
testl
add
mov
dec
stc
mov
lret
mov
jmp
xchg
add
add
add
pop
mov
add
rolb
mov
mov
add
dec
mov
ret
inc
add
add
movsl
dec
xor
mov
dec
jb
mov
leave
pop
add
sub
cmp
fwait
addb
fisubs
pop
arpl
mov
lods
sub
ja
mov
popa
repz
add
mov
clc
std
and
push
add
insl
addb
xchg
loopne
mov
add
test
cmp
rolb
or
mov
mov
sahf
jge
mov
cmc
push
and
mov
jmp
xchg
sub
add
test
ljmp
jmp
add
ja
mov
and
jmp
addb
inc
call
movsl
flds
mov
cmp
test
xor
mov
sub
bound
mov
jp
in
xchg
xlat
and
mov
adc
jmp
and
sub
dec
jns
inc
add
cltd
pop
orl
xchg
aad
movsl
xor
enter
stos
xorl
and
clc
mov
scas
dec
jmp
mov
lea
inc
sbb
test
xor
test
and
mov
in
imul
call
in
mov
pop
xchg
mov
mov
mov
loopne
mov
add
add
roll
cs
popf
pop
sub
xor
ja
add
mov
push
mov
mov
cli
popa
mov
fwait
xchg
stc
insb
mov
jnp
push
jmp
add
xor
cmp
jg
adc
mov
sub
jae
cli
jb
mov
test
add
add
rolb
mov
adc
stos
mov
mov
mov
pop
adc
mov
and
out
pop
inc
push
int
add
lods
push
add
daa
xchg
adcl
pop
mov
add
test
mov
hlt
addb
sub
add
add
add
xor
mov
movsb
push
cmp
xlat
xchg
add
pop
adc
add
fmuls
xor
pop
dec
call
fmull
xor
mov
movsb
call
mov
nop
add
mov
int
add
rolb
mov
inc
sti
lods
or
jmp
loope
sti
mov
xor
std
add
stc
push
dec
fdivl
jle
dec
cmc
xor
dec
push
push
icebp
mov
or
add
dec
mov
mov
cmc
mov
fmull
sub
in
incb
push
add
add
sbb
add
mov
add
add
jae
out
inc
lcall
add
mov
add
enter
mov
add
mov
mov
adc
lcall
and
mov
sbb
mov
add
fisubs
add
test
jno
or
cld
testb
imul
cmpsl
data16
add
mov
pop
stos
add
and
mov
cltd
loopne
mov
sti
dec
bound
mov
push
add
mov
int3
mov
iret
inc
push
and
add
sbb
cli
fidivl
lock
sub
pop
stos
dec
fiaddl
fidivrl
pop
mov
movsb
popf
mov
lea
add
jp
fidivrl
add
cmp
mov
mov
pop
adc
mov
aaa
data16
mov
add
mov
add
sbb
xchg
daa
inc
xor
mov
jae
aaa
add
jmp
pop
dec
xchg
xchg
jp
add
add
es
pop
in
aas
addr16
inc
sti
enter
in
xchg
mov
mov
sbb
cmp
mov
cmp
aas
lods
ja
lea
inc
sub
push
lods
dec
push
call
cltd
stc
jg
mov
mov
insb
adc
add
rolb
outsl
mov
out
xor
or
or
jae
add
dec
lcall
xchg
inc
outsl
roll
push
jns
in
mov
int3
sub
or
add
lds
nop
add
pop
movsl
sub
add
mov
jns
mov
in
mov
adc
mov
jnp
js
inc
mov
jle
mov
lods
pop
dec
stos
push
loope
adc
dec
ja
add
jmp
sub
mov
add
adc
rolb
outsl
sub
add
mov
inc
scas
sub
lret
add
addr16
mov
std
push
imulb
mov
pop
incb
cli
add
mov
ret
cmp
stc
lret
dec
dec
ss
jbe
mov
pop
push
push
hlt
xchg
lds
add
mov
out
jb
mov
push
push
and
add
imul
pushf
ds
ret
popa
and
mov
add
mov
dec
mov
leave
jno
mov
stos
add
mov
push
movsb
js
in
cmp
dec
test
sbb
mov
add
xor
inc
dec
sub
arpl
rcl
sbb
add
jnp
add
in
cmpsb
mov
or
mov
mov
mov
add
es
mov
pmaxub
je
add
lods
lcall
mov
jle
add
imul
sub
mov
xor
test
add
mov
lods
rolb
mov
add
rolb
mov
pop
jge
add
in
push
lcall
jb
mov
add
sub
pusha
add
mov
inc
add
add
testb
add
add
pop
aaa
daa
xchg
dec
pop
pop
sub
lret
ljmp
out
out
xchg
adc
dec
cmp
lock
lods
sub
or
outsb
clc
adc
call
push
out
call
enter
add
xchg
add
mov
mov
pop
push
rolb
xor
les
add
or
or
push
sbb
add
jg
add
push
push
mov
int
psraw
cwtl
call
cmpsb
inc
in
pushf
xlat
xor
adc
add
push
pushl
mov
add
mov
inc
ja
add
jl
push
add
add
jmp
inc
sbb
incb
les
out
pop
es
mov
mov
jg
add
out
aam
pop
cmpsb
mov
jns
aas
mov
subl
std
test
dec
xor
data16
ficoms
cmp
mov
cmc
lods
or
mov
or
add
add
mov
leave
or
cmp
out
xor
mov
mov
inc
add
xchg
dec
lods
pop
mov
add
mov
or
inc
add
rcrl
es
sbb
mov
add
pop
subl
insb
icebp
idivb
jns
lret
add
push
jno
pop
cmp
add
mov
dec
mov
add
mov
jg
roll
and
sbb
add
add
jle
arpl
icebp
jbe
add
push
and
mov
mov
cmp
rcll
pop
cmp
xchg
add
add
xchg
fistl
rcrl
lods
jle
mov
push
repnz
aas
push
dec
mov
xchg
pop
std
cmp
add
lcall
dec
xchg
repnz
cmp
push
mov
call
add
hlt
dec
add
inc
pop
push
mov
add
into
hlt
fstpl
das
test
enter
mov
roll
mov
dec
bound
mov
lock
and
jp
cmp
outsb
sub
adc
add
add
mov
mov
in
sahf
imul
add
push
xlat
sbb
lret
add
push
inc
lcall
mov
clc
sub
lods
mov
xchg
dec
aad
mov
push
lods
lods
xchg
add
inc
out
xchg
mov
mov
mov
sbb
rolb
mov
cli
hlt
xchg
jae
push
xchg
xor
mov
jl
add
jg
mov
inc
mov
mov
add
int
fsts
mov
push
cmp
insb
fdivp
mov
fnstsw
stos
fs
into
scas
inc
xchg
adcl
add
jmp
xlat
loope
push
fmul
ljmp
mov
das
aaa
rolb
mov
jmp
push
or
sub
into
xor
pop
rolb
mov
inc
add
xchg
stos
out
icebp
xor
push
in
xchg
stos
lock
mov
rorl
mov
mov
add
add
lahf
xchg
rol
outsl
jp
cmpsl
dec
xchg
mov
mov
cmp
in
mov
into
push
jmp
push
pop
or
jne
xchg
adc
jecxz
mov
xchg
pop
ficomps
jle
add
jne
add
add
mov
lock
mov
mov
mov
rolb
mov
pop
mov
dec
out
jecxz
push
imul
test
mov
movsl
mov
xor
mov
int
jg
fstpl
pop
aaa
into
leave
addr16
out
mov
mov
add
loop
mov
shll
add
cwtl
scas
xor
iret
add
cmp
xchg
ret
ja
xor
mov
mov
inc
aam
dec
add
mov
push
dec
adc
and
mov
cmpsb
int3
xor
add
ret
dec
fsts
shr
cmp
sbb
cmp
mov
mov
mov
add
add
pusha
add
cmp
mov
sti
xor
mov
add
add
add
mov
js
xorl
mov
les
push
fnstcw
aas
nop
add
mov
adc
mov
js
and
pop
iret
push
loop
mov
inc
pop
xorl
sbb
add
imulb
add
mov
leave
ret
fcmovnb
nop
add
mov
icebp
mov
imul
add
xor
mov
mov
xor
mov
movsb
or
push
add
and
dec
test
add
jae
stos
add
mov
mov
sbb
lret
inc
add
bound
mov
gs
sbb
or
data16
out
cli
leave
add
pop
sbb
lea
adc
data16
inc
add
add
add
shrl
inc
into
mov
push
ss
add
bound
mov
mov
sub
add
pop
mov
mov
mov
addb
mov
mov
mov
sbb
add
mov
popa
cwtl
sub
aad
lahf
xor
jb
mov
mov
addb
sub
add
movsb
pop
in
add
push
add
add
call
mov
add
and
mov
dec
sbb
imul
add
mov
add
push
sbb
add
and
mov
aaa
xchg
inc
inc
mov
out
mov
add
mov
push
add
negb
add
add
cmpsl
ret
sub
add
sbb
out
add
push
mov
add
test
jo
mov
mov
sti
push
jge
push
add
add
mov
cmp
sbb
mov
pop
inc
sub
add
mov
leave
or
mov
add
mov
xchg
pop
imul
mov
sti
push
pusha
add
or
dec
lret
and
add
fsubr
or
addb
jb
mov
scas
loop
mov
mov
fs
test
inc
daa
fisubl
mov
adcl
mov
outsb
aas
jle
fdivrs
and
mov
cmp
repnz
sti
popf
xlat
es
outsl
and
mov
pop
in
mov
lods
repz
push
jbe
outsl
in
sbb
enter
adc
cmp
or
dec
mov
add
cmp
mov
je
mov
mov
add
mov
mov
add
rolb
mov
add
mov
xchg
jns
mov
test
jp
push
dec
jo
mov
mov
mov
add
cmp
stc
aad
outsl
stos
dec
pop
dec
and
mov
sahf
imull
inc
add
mov
iret
mov
jl
in
jne
or
sbb
inc
hlt
mov
stos
inc
test
fwait
jae
add
or
add
dec
pop
add
mov
mov
jno
and
add
out
sub
in
cmpsb
lret
int
add
pop
xor
push
mov
cwtl
pop
mov
mov
mov
rcrl
lods
mov
add
mov
xor
mov
mov
aas
cmpsl
in
mov
dec
imul
mov
mov
add
and
mov
test
mov
xor
mov
mov
xor
aam
xchg
mov
mov
push
pushf
cmc
aad
add
inc
inc
test
add
xchg
pop
push
mov
jge
jp
adc
add
sbb
mov
xor
mov
add
nop
add
mov
add
pop
dec
adc
addb
sahf
cmp
out
pop
pop
xchg
movsb
mov
mov
repnz
dec
dec
push
jbe
pop
in
cmpsl
or
cmp
add
mov
pop
xchg
cmp
add
test
pushl
cwtl
outsl
aas
sbbl
stos
and
mov
and
test
je
and
xchg
ljmp
ret
inc
fmul
testl
mov
fisubrs
push
mov
and
add
ds
add
mov
xor
mov
jp
jmp
pop
popl
mov
cli
xor
mov
fldcw
gs
or
add
loop
mov
int3
jl
rol
pop
pop
mov
add
out
add
imul
mov
or
pop
imulb
or
mov
cmp
imul
mov
arpl
add
daa
or
sahf
into
sub
cmpsl
and
mov
add
jns
neg
jecxz
add
xchg
add
into
int
outsl
iret
sub
cmp
std
or
add
fs
add
xor
sub
pushf
ret
insl
mov
add
jns
les
test
adc
sbb
imul
loop
mov
les
mov
push
das
int
hlt
or
popa
mov
jbe
push
dec
xchg
std
imul
lods
cmp
push
or
repz
fldenv
add
or
sub
cmp
inc
add
mov
pop
in
cmp
mov
pop
jp
adc
and
xlat
add
or
xchg
inc
repnz
pop
outsb
mov
add
sub
leave
push
aaa
popa
and
cltd
lods
out
js
faddl
jle
aaa
adcl
mov
adc
add
mov
add
leave
jmp
jge
or
loope
and
mov
mov
stos
test
pop
mov
add
data16
jo
mov
scas
xchg
jae
add
lock
mov
xchg
mov
mov
mov
addr16
insb
int3
leave
cmp
call
push
ss
lcall
inc
popa
mov
gs
xchg
add
das
test
dec
push
or
add
mov
mov
xchg
je
xorl
inc
xlat
in
mov
mov
cltd
mov
push
je
mov
test
add
fistps
sbb
and
repnz
daa
jae
jno
cld
xchg
add
int
push
and
add
and
or
lahf
repnz
mov
in
adc
mov
pop
cli
xchg
loope
mov
je
add
add
out
std
or
mov
movsl
gs
or
ss
jle
adc
mov
rolb
mov
add
cwtl
sbb
add
mov
popa
addb
jp
cmp
adc
ds
out
adc
mov
adc
mov
adc
mov
dec
dec
mov
sub
mov
sub
pop
ret
adc
mov
add
in
xor
ds
rolb
mov
push
pop
inc
push
inc
push
mov
mov
inc
mov
out
inc
and
pop
cmp
add
mov
inc
add
sub
addb
push
scas
add
cmc
aaa
mov
mov
inc
push
lock
push
shll
add
mov
shrl
repnz
sti
call
pop
mov
inc
das
mov
fistl
mov
arpl
lods
add
mov
insl
push
add
pop
inc
nop
add
mov
mov
div
add
inc
sbb
lods
pop
loope
adc
mov
in
subl
cltd
jp
mov
movsl
sub
sbb
gs
aam
rolb
mov
cmp
add
jno
xor
rolb
mov
xor
xchg
mov
mov
mov
fisttpll
lahf
sti
pusha
add
fisubs
jae
pop
pusha
add
jno
outsb
imul
mov
add
mov
mov
fs
push
jp
dec
addb
lret
pop
add
and
mov
fstpt
daa
addb
mov
test
movl
dec
mov
add
mov
data16
mov
xchg
add
push
addb
cmpsl
cmp
add
push
sbb
dec
xor
mov
loopne
mov
test
mov
jbe
xchg
add
out
inc
fstpl
mov
loope
movsb
imull
dec
pop
mov
fprem1
lea
adc
mov
addb
ds
int
pop
jg
repnz
inc
aas
cs
leave
cs
jae
faddl
fbld
mov
pop
xor
mov
addb
pop
shll
jmp
repnz
pop
jnp
out
sub
in
inc
add
mov
scas
add
addr16
add
clc
xchg
stc
je
adc
scas
int3
scas
inc
push
pop
mov
mov
es
fdivs
loopne
mov
cld
fmull
lret
sbbl
xor
lea
flds
mov
mov
stos
cld
in
ss
xor
mov
nop
add
and
add
clc
insb
and
mov
pop
or
add
lea
fcompl
pop
mov
mov
mov
mov
mov
rolb
push
scas
xor
out
sbb
dec
es
stos
lret
scas
dec
cmpsl
jp
mov
repz
es
roll
mov
cli
pop
jne
ds
add
add
jo
mov
fimuls
pop
imul
outsl
jno
push
add
pusha
add
pop
js
or
jo
mov
mov
lret
and
dec
repnz
stc
sbb
bound
mov
adc
pop
xchg
insl
mov
fmull
push
mov
adc
add
add
add
mov
movsl
cmp
xor
mov
xchg
outsb
jnp
add
mov
push
push
jle
add
outsb
push
stos
sub
mov
pop
xchg
inc
icebp
sete
andl
dec
mov
inc
mov
or
out
mov
mov
out
jp
xchg
lahf
andl
or
add
rolb
fdivl
cmp
stos
test
call
and
mov
xor
inc
add
mov
rolb
mov
lods
sub
aam
jns
add
pop
xchg
sub
movsl
fisubrs
cmp
mov
xor
add
test
fisttps
mov
mov
in
nop
add
shll
add
pop
adc
or
mov
and
mov
jnp
sub
xchg
sbb
add
mov
pop
bound
mov
lea
cld
dec
cltd
and
mov
sub
mov
sti
aam
daa
inc
xchg
mov
out
add
xchg
sbb
xor
add
add
mov
test
aad
push
icebp
sbb
jno
movsb
push
add
rolb
inc
xchg
dec
shrl
pusha
add
cmp
mov
jo
mov
jmp
sahf
scas
xchg
loop
mov
cltd
insl
je
xchg
push
adc
jmp
add
mov
and
xchg
add
je
push
adc
popa
out
in
gs
add
add
dec
jo
mov
sbb
push
scas
sbb
add
cmpl
xchg
add
scas
mov
add
sub
inc
cmc
daa
dec
aaa
adc
mov
mov
add
clc
add
mov
outsb
inc
add
shll
add
mov
mov
push
ror
mov
mov
daa
popf
inc
add
mov
ljmp
stc
push
sub
rolb
mov
addb
xchg
loop
mov
mov
inc
in
cmp
fidivrl
fstl
inc
addr16
sub
test
aas
jb
mov
sbb
push
sarl
test
es
add
mov
xor
dec
aam
test
out
out
push
xor
mov
maskmovq
notl
add
xlat
inc
add
and
jecxz
daa
testl
imul
js
push
insb
rolb
jp
xchg
xchg
mov
icebp
sub
pop
or
add
mov
mov
jo
mov
lock
adc
bsf
fs
adc
fisttps
add
add
inc
orl
sub
add
mov
mov
ror
xor
mov
jl
sti
insb
testb
in
cmpsl
and
add
sahf
fcomps
dec
or
lcall
out
mov
mov
cmp
xor
mov
icebp
mov
xchg
aas
out
addb
and
add
hlt
jge
arpl
cmp
xchg
pop
or
mov
out
jge
inc
addr16
iret
dec
sub
jge
push
aaa
add
add
and
mov
out
xchg
mov
mov
aad
decl
les
loope
out
out
pop
gs
sbb
nop
add
popa
push
mov
dec
out
fstp
nop
add
sbb
ja
add
add
inc
push
or
mov
cmp
mov
testl
add
divl
fwait
xchg
jae
xchg
mov
es
add
mov
and
mov
popf
adc
cmp
push
dec
pop
mov
add
movsb
loop
mov
les
push
dec
movsl
mov
mov
mov
xor
mov
ljmp
in
ret
fildl
dec
stos
ret
inc
add
push
jecxz
or
or
jo
mov
inc
add
dec
cs
cld
scas
fimuls
pop
mov
int
out
pop
adc
mov
mov
sub
enter
cmp
push
addr16
push
add
ficompl
sbb
clc
rolb
mov
push
jo
mov
clc
ret
arpl
aaa
mov
push
mov
mov
sbb
mov
pop
fsubl
cmc
nop
add
mov
xchg
popf
stos
lahf
mov
xor
add
mov
inc
jae
rolb
mov
sbb
add
cwtl
movsb
stos
sub
jecxz
xchg
in
pop
mov
mov
mov
dec
jns
in
leave
cwtl
mov
mov
add
stc
sub
aam
add
ret
add
pop
adc
mov
and
mov
mov
push
adc
add
mov
sub
mov
clc
test
pop
sbb
lds
cmp
rcll
inc
add
jl
das
sti
ret
dec
add
mov
adc
inc
pop
cli
shl
addb
push
lcall
cmp
outsb
or
ret
into
mov
mov
or
movsl
xchg
add
or
in
fcomip
mov
dec
iret
in
push
xor
mov
add
lock
and
or
cli
outsb
mov
ss
jmp
add
mov
dec
test
mov
mov
icebp
jecxz
je,pn
sub
sahf
rolb
mov
add
in
and
jge
test
repz
hlt
jmp
push
jb
mov
cltd
dec
js
pop
in
cmp
push
sub
out
stos
mov
adc
add
mov
pop
xor
mov
dec
and
test
pop
insb
pop
xor
sub
lock
insb
int
sub
pop
pop
in
fs
mov
add
mov
test
rolb
mov
mov
mov
xchg
int
popa
add
or
add
add
xchg
mov
dec
hlt
and
rolb
pop
frstor
mov
jle
adc
mov
into
xor
mov
push
and
mov
pop
and
add
mov
popf
pop
jl
add
mov
test
xor
jle
movsb
jno
sbb
add
das
rolb
mov
stc
mov
mov
sbb
add
mov
inc
pop
push
mov
lea
xchg
xlat
into
stc
or
das
leave
dec
mov
stc
dec
mov
int
mov
jmp
punpcklwd
add
mov
rolb
mov
push
push
pop
xor
mov
nopl
mov
mov
pop
and
dec
das
ffree
repz
addr16
ljmp
mov
xor
in
in
aam
ljmp
mov
inc
add
mov
lret
pop
push
mov
enter
add
jns
or
xor
fs
addl
popf
popa
dec
dec
loope
rolb
mov
lock
dec
pop
rolb
or
mov
stos
in
sbb
ret
pop
pop
jecxz
dec
dec
lcall
add
add
addl
add
jecxz
sarl
out
nop
add
addr16
call
cmp
dec
mov
mov
lock
bound
mov
add
dec
push
enter
jmp
stos
jo
mov
js
test
cmp
repnz
push
in
or
test
xchg
in
jmp
gs
fcoml
xchg
test
test
bound
mov
xchg
out
dec
cmpl
adc
fsubl
movsl
and
mov
in
add
popa
sti
int3
lea
or
loopne
mov
xchg
ja
popf
out
inc
add
mov
jae
pop
sub
aas
fnstsw
sahf
jp
das
jmp
test
imul
sbb
xchg
jp
jmp
add
movsb
dec
js
xchg
pop
data16
negb
rolb
mov
stc
lret
popa
les
push
sub
mov
jle
mov
jne
or
jmp
add
addb
lds
daa
xchg
jnp
xor
mov
add
mov
out
or
add
mov
mov
loopne
mov
add
mov
hlt
dec
lock
add
mov
xchg
adc
xlat
nop
add
aas
insb
bound
mov
push
add
ja
hlt
cmp
add
push
add
mov
inc
scas
rcll
mov
jne
add
pop
xor
mov
ret
push
cmc
test
test
add
sbb
push
add
mov
cli
pop
pop
out
xchg
std
sub
jno
pop
push
lea
add
stos
int
imul
add
add
pop
leave
push
jl
int3
mov
dec
mov
or
add
inc
dec
out
dec
sti
jo
mov
leave
xchg
or
pop
mov
mov
outsl
and
mov
gs
loopne
mov
stos
adc
shrd
mov
mov
pop
je
arpl
mov
add
in
std
vcmppd
sbb
int3
cs
jbe
ss
add
hlt
outsb
xor
mov
add
xchg
xchg
rolb
inc
inc
add
jb
mov
push
add
dec
cmp
sbb
add
int3
pop
lock
pusha
add
add
jae
inc
jbe
rolb
mov
rolb
mov
lea
push
mov
add
imul
jmp
add
adc
sbb
add
add
lcall
scas
jo
mov
pop
mov
mov
add
rolb
jmp
fwait
test
aaa
test
and
int
sbb
or
jns
add
and
mov
ljmp
sbb
adc
jns
add
push
add
jg
push
data16
add
mov
sahf
cmc
push
fwait
repnz
insl
dec
dec
lock
lea
syscall
add
nop
add
andl
and
push
and
mov
hlt
mov
leave
add
ficoms
dec
add
mov
add
mov
mov
adc
into
cmp
ficomps
sub
mov
arpl
mov
add
rol
mov
inc
mov
and
mov
ss
sbb
addb
clc
out
in
push
add
or
rep
ja
mov
push
ret
jo
mov
rolb
mov
outsb
mov
rolb
mov
sub
rolb
mov
add
mov
jnp
repnz
int
dec
or
loop
mov
pop
xchg
cmp
inc
cmpl
fwait
stos
xchg
sub
xchg
add
mov
je
in
and
sub
mov
sub
cmpsb
call
pop
std
mov
dec
out
add
add
add
add
cmpsl
cmpsb
ror
shll
dec
repnz
lods
push
push
xor
mov
push
xor
mov
xchg
xchg
push
push
orl
mov
or
fstpt
add
add
add
cmp
lods
or
xor
pop
fwait
xchg
mov
jnp
inc
xor
mov
dec
jns
adc
mov
xor
leave
outsb
jno
mov
jae
test
mov
add
pop
cmp
adc
mov
xchg
mov
out
and
mov
lea
xor
mov
loop
mov
mov
add
add
mov
jo
mov
jp
adc
mov
daa
ja
push
xchg
add
xchg
dec
cmp
add
push
adc
sub
add
movsl
fs
loop
mov
rolb
mull
mov
jno
mov
out
xchg
xchg
pop
movsb
pop
neg
sbb
sahf
pusha
add
mov
mov
pop
push
add
arpl
push
mov
clc
xchg
and
scas
rorl
mov
push
add
cmp
cmp
ret
aad
add
filds
mov
xchg
stos
test
adc
mov
loop
mov
mov
inc
cmp
or
cmpsl
sahf
adc
mov
add
test
or
pushf
xlat
adc
push
mov
lods
gs
fwait
movsl
jmp
movsb
dec
fdivrs
and
les
sbb
test
fcoml
mov
add
add
in
int
std
jge
cmp
add
cltd
mov
xchg
and
add
mov
fcmovbe
add
ret
fsubrl
inc
adc
mov
mov
pop
pop
popa
lret
rolb
mov
jmp
mov
xchg
into
rolb
mov
mov
xor
mov
push
dec
stos
push
in
add
push
cmpsb
insl
push
scas
fisubrl
mov
push
shll
mov
adc
mov
mov
xlat
xorl
adc
adc
mov
add
mov
add
mov
or
mov
mov
mov
inc
addl
add
pop
add
mov
popl
add
add
mov
lock
xor
push
shll
pop
into
and
push
repz
add
call
push
cmp
and
cmp
add
pop
lret
pop
loop
mov
add
xchg
addb
push
adc
mov
add
dec
inc
int
dec
sbb
in
mov
aam
mov
in
movsb
push
sbb
add
mov
testl
test
cmp
add
or
int
stc
sbb
dec
rolb
mov
or
mov
add
add
mov
and
mov
fstpt
or
sub
xchg
add
adc
pop
in
data16
push
add
push
jge
add
push
add
add
jo
mov
mov
vpsraw
jp
cmp
add
mov
stc
cs
pop
xchg
cmp
and
add
add
mov
or
mov
test
ret
dec
in
aaa
aas
test
push
pop
inc
add
add
das
sbb
add
fisubl
out
pop
or
and
divl
in
jae
add
mov
in
addb
leave
mov
sbb
loop
mov
push
mov
add
add
rolb
sub
int3
pop
mov
repnz
cmc
xlat
mov
sbb
sti
mov
pop
aam
push
sahf
addb
or
cmp
out
xchg
push
movb
mov
mov
add
add
add
sub
cmp
sahf
xchg
pop
add
jl
and
add
add
roll
outsl
mov
ljmp
mov
mov
push
repnz
pusha
add
add
add
mov
mov
mov
jno
add
pop
inc
scas
inc
or
and
jmp
stos
test
xchg
add
mov
pop
or
mov
shll
add
es
lock
mov
push
inc
lock
mov
add
outsb
rolb
mov
adc
mov
jnp
and
xchg
imul
push
movsl
mov
cmp
icebp
lods
pop
push
add
mov
rorl
push
lock
xchg
test
add
or
out
and
mov
mov
add
mov
xor
mov
add
lock
and
mov
jge
or
ja
push
loop
mov
icebp
xor
mov
xchg
push
add
sbb
out
dec
cltd
pop
sbb
mov
popf
jl
jp
add
insb
jo
mov
jle
bound
mov
or
rolb
mov
int3
mov
inc
add
push
add
add
lods
push
jmp
cmp
mov
ds
daa
test
shll
add
xlat
adc
mov
pop
push
add
add
cmp
ret
push
add
jnp
inc
add
add
jg
lea
jnp
int
inc
cld
xchg
add
fimuls
mov
insb
hlt
faddl
xchg
dec
pop
lret
mov
sarl
mov
mov
adc
ret
jp
add
adc
add
mov
mov
llwpcb
mov
add
cmp
jl
add
dec
push
nop
add
lret
int
movsb
fldl
mov
mov
pop
ret
in
push
add
mov
mov
out
ds
and
mov
popa
jno
dec
push
mov
ja
add
hlt
jo
mov
mov
mov
int3
jns
inc
les
fadds
sub
add
lret
sbb
movsl
sub
cmpsb
leave
add
mov
mov
aaa
lcall
hlt
das
or
scas
pop
pop
outsl
insl
sti
xchg
jbe
adc
add
add
mov
lahf
cmpsb
pop
sbb
out
mov
add
cmp
xchg
sbb
std
fwait
popa
aaa
cmc
pop
sbb
dec
in
pushf
pop
xor
mov
add
sub
roll
adc
mov
pop
sbb
fdivrs
mov
or
je
cmp
iret
stc
hlt
cs
add
pushf
inc
add
add
xchg
or
add
sbb
sbb
stc
jnp
or
jo
mov
push
add
xchg
imul
push
add
es
add
add
push
mov
ja
add
inc
cmp
and
mov
hlt
pop
add
sub
outsl
rcrl
mov
add
or
jl
mov
les
jecxz
test
imul
out
jl
xchg
mov
shll
add
arpl
dec
aad
mov
xor
xor
mov
jno
cmp
add
outsb
pop
lock
mov
lea
push
pop
xor
pop
mov
arpl
cmp
mov
shrl
dec
lcall
push
xor
mov
add
fdivrl
mov
add
mov
mov
rolb
js
cmp
or
add
mov
lret
mov
adc
lods
dec
fldcw
inc
xor
outsb
iret
and
mov
aas
je
jns
sub
jo
mov
sbb
and
push
popf
cmp
xchg
lret
test
int
push
fdivrl
mov
stc
xchg
pushf
adc
mov
lock
push
or
cmc
movsb
negl
icebp
mov
xchg
sub
mov
loopne
mov
pusha
add
out
ret
xor
mov
incl
sub
repz
out
jno
pusha
add
int
insb
pop
ret
inc
ljmp
xchg
add
addr16
xchg
jne
add
lahf
js
mov
adc
mov
mov
push
repz
xchg
mov
mov
repz
push
add
mov
mov
add
ficompl
xor
add
mov
add
outsl
pusha
add
pop
jl
in
inc
sbb
dec
ljmp
int
ja
mov
inc
je
add
mov
out
iret
xchg
add
dec
fmull
jne
xor
inc
nop
add
dec
lea
add
cld
push
cs
inc
es
push
addb
test
add
and
pop
movzwl
fcoml
cwtl
cmp
add
stc
xchg
mov
add
movsb
int
cli
pop
inc
add
outsb
stos
adc
lcall
pusha
add
cmc
dec
push
push
cld
sub
fsubr
pop
fdivrs
lahf
jmp
mov
hlt
jns
jl
adc
mov
into
arpl
sbb
add
adc
test
add
pop
divb
cs
je
dec
fnstenv
mov
adc
mov
add
ret
pop
test
xor
sahf
loopne
mov
jmp
pop
push
xor
fwait
vpunpckhqdq
xchg
sbb
nop
add
mov
mov
add
sub
ja
inc
or
pop
cmp
vmread
fwait
and
sub
xchg
add
or
mov
jle
lock
mov
mov
cmp
ja
mov
outsl
enter
add
add
dec
xor
mov
cmp
clc
dec
and
popa
cmc
fsts
add
addb
sbb
sub
in
mov
repnz
mov
cmp
lods
dec
mov
sbb
push
add
mov
out
mov
lcall
add
add
mov
add
ret
push
push
add
mov
fs
mov
mov
mov
mov
sbb
add
pop
inc
mov
mov
dec
xchg
mov
xchg
pop
mov
les
loopne
mov
and
mov
cmp
mov
mov
icebp
cli
push
popf
pop
loopne
mov
cltd
xor
mov
fwait
mov
iret
adc
xchg
xor
push
mov
mov
ljmp
hlt
les
add
dec
fdivl
xchg
es
mov
loop
mov
mov
mov
mov
xor
movups
sarl
addb
add
fmull
sti
mov
mov
mov
inc
sub
imul
add
test
add
cmpsb
lret
arpl
das
inc
pop
lock
adc
dec
cmp
add
jnp
mov
pop
jl
xor
mov
call
xchg
mov
add
and
js
into
addb
hlt
mov
mov
inc
sub
shll
add
add
mov
push
sub
add
mul
js
add
mov
stos
mov
jno
add
push
add
lods
repz
add
add
mov
lret
je
arpl
add
push
jg
add
mov
jg
mov
sbb
adc
mov
mov
mov
divb
mov
jb
mov
add
divl
add
lahf
and
mov
mov
idiv
movsb
out
or
sbb
rolb
mov
popf
cmpl
ficoml
push
lea
daa
or
inc
push
rcll
mov
xchg
rcrl
cmp
add
int3
addr16
xor
movsb
pop
pop
out
adc
mov
add
cmp
loopne
mov
sti
inc
inc
add
pop
imul
mov
mov
sti
loopne
mov
out
inc
rolb
mov
lret
das
pusha
add
jp
dec
call
add
js
and
jns
dec
jg
push
enter
xchg
mov
fsubl
add
ret
lret
fists
leave
cli
add
mov
push
dec
xor
add
repnz
add
mov
mov
cmp
pop
inc
push
add
mov
aas
hlt
adc
mov
lcall
addl
mov
jg
les
adc
mov
mov
mov
test
adc
mov
std
sbb
add
mov
adc
mov
cmp
push
fstpl
jp
xchg
mov
loope
clc
jne
loope
pop
addr16
pop
pushf
pop
cmp
cmp
clc
mov
sbb
repz
push
push
in
call
add
dec
xorl
lret
jo
mov
lock
sbb
mov
lret
outsl
cltd
and
mov
cld
into
mov
rcr
xor
xor
mov
mov
cmp
imul
out
mov
in
pop
fsub
mov
fadds
je
or
mov
jno
inc
and
dec
or
nop
add
inc
add
add
inc
sbb
xchg
sbb
es
add
inc
add
add
sbb
addr16
add
loopne
mov
std
push
sbb
jge
call
into
and
out
dec
cwtl
xlat
jmp
mov
out
mov
add
mov
inc
in
test
add
mov
cmpsl
roll
add
pop
lcall
push
xor
mov
add
mov
add
sub
outsl
mov
mov
add
leave
push
add
std
ljmp
insb
lods
sbb
mov
loope
xlat
inc
lahf
scas
add
mov
mov
or
inc
add
clc
arpl
out
les
mov
xor
or
mov
add
and
mov
lock
dec
adc
loope
jl
mov
into
out
jl
or
dec
jecxz
push
loop
mov
iret
js
outsl
loopne
mov
push
or
mov
cmc
xor
in
mov
jbe
mov
rep
sahf
xor
lcall
daa
sbb
mov
add
mov
pop
fistpl
loope
add
and
add
dec
jl
push
add
pop
mov
cmp
addb
nop/reserved
gs
add
fldt
dec
jns
in
das
xor
es
jbe
sbb
or
add
call
add
mov
or
inc
loopne
mov
out
pop
out
es
movsb
stos
xchg
lret
mov
int
clc
inc
loop
mov
sub
int
sti
loop
mov
mov
xchg
add
add
movsl
cmp
add
mov
aam
xor
cmp
hlt
adc
mov
mov
add
add
xlat
pop
xchg
sbb
pop
scas
dec
mov
xchg
mov
add
cmpsl
mov
sub
cs
add
mov
pop
sbb
push
dec
mov
mov
jp
add
stc
arpl
pop
jmp
dec
pop
fidivl
dec
jecxz
pop
jnp
mov
sub
fimuls
push
pop
movsl
movsb
sbb
push
ret
insb
push
mov
mov
fcmovnbe
lret
mov
add
jnp
push
and
je
pop
push
sub
insb
mov
mulb
add
gs
bound
mov
dec
clc
inc
rolb
mov
mov
sbb
add
cmc
popa
mov
jno
jmp
ret
sbb
add
fmull
sbb
es
xor
inc
sahf
pop
xorl
adc
push
lea
outsl
outsl
lahf
ret
mov
add
leave
int
addb
push
inc
add
scas
jecxz
xor
jmp
jb
mov
add
pop
or
mov
mov
mull
inc
inc
cmp
repz
stc
dec
mov
mov
push
jl
inc
loope
adc
xchg
add
cltd
or
lds
cmp
pop
inc
cmp
ds
daa
ja
rolb
pop
push
jle
int3
popf
out
add
mov
mov
cs
or
xchg
sbb
sbb
xchg
add
lods
pop
addr16
adcl
outsl
adc
mov
test
insb
push
mov
push
add
add
add
addb
cmc
inc
sbb
dec
mov
fcmovnb
mov
mov
aam
xchg
mov
sub
jnp
clc
sub
add
mov
pop
mov
push
add
sarl
add
mov
scas
sbb
pusha
add
outsb
sbb
add
add
or
fs
or
jp
repnz
add
add
lea
mov
out
rorl
leave
and
mov
add
sbb
outsl
sbb
push
push
or
inc
je
xchg
sbb
add
and
movsl
les
mov
incl
cmc
mov
andl
shll
pushf
xor
pusha
add
add
inc
cs
rolb
mov
add
add
xor
sbb
mov
mov
mov
add
in
hlt
push
jns
inc
push
add
push
add
dec
imul
add
popa
xchg
dec
add
outsl
xlat
push
push
add
mov
repnz
mov
popf
add
add
jle
pop
addr16
jmp
sbb
mov
les
push
leave
xor
test
pop
repnz
sub
add
inc
jl
mov
adc
mov
dec
jnp
fsubrs
mov
xor
mov
arpl
adc
mov
push
jnp
mov
ds
add
inc
add
sub
or
jmp
xchg
push
xchg
lret
mov
pusha
add
leave
test
idivl
pop
dec
in
xchg
add
jae
cmp
add
in
jl
add
or
dec
sahf
stos
aaa
mov
mov
jno
add
loop
mov
add
insl
jnp
ss
mov
callw
aaa
push
cltd
ret
call
scas
rolb
mov
popf
ret
cwtl
adc
orl
test
lods
popf
push
jge
jl
mov
in
or
lahf
xchg
add
mov
ljmp
cs
stos
loope
stos
aad
mov
xchg
push
fsts
jg
dec
inc
outsl
xchg
pop
insb
sub
push
mov
add
ret
pop
mov
xor
pop
in
ja
push
sbb
in
aas
popf
cwtl
inc
add
sub
inc
inc
leave
clc
jmp
inc
add
fistpll
dec
push
add
jl
add
enter
fiaddl
faddp
inc
and
mov
jp
lea
add
add
pfrsqrt
clc
out
dec
iret
push
sbb
mov
aaa
mov
xchg
add
sidtl
xlat
loope
repnz
sbb
loope
aas
push
or
popa
inc
testb
pop
sub
push
clc
mov
dec
icebp
in
sbb
cmp
enter
movsb
ss
adc
mov
and
inc
add
or
mov
add
add
add
push
cmpsb
notl
mov
mov
orl
ds
cltd
lahf
fwait
pop
sub
movsb
dec
jo
mov
out
fs
out
inc
pop
xorl
push
mov
xchg
add
lock
mov
xchg
cld
lcall
idivb
lods
xor
add
adc
es
cltd
jl
inc
add
jbe
add
inc
imulb
outsb
daa
push
rcrl
insl
mov
out
int3
repz
dec
xor
mov
fcmovnbe
add
mov
imul
cmp
enter
add
add
or
lds
add
pop
cli
or
xchg
nop
add
add
dec
loope
lods
pop
jecxz
lock
ljmp
dec
jno
rolb
mov
popa
xor
lods
dec
adc
mov
adc
test
out
mov
mov
mov
add
insb
cmp
push
iret
rolb
push
negb
loopne
mov
lahf
pop
call
cmp
sub
cltd
clc
mov
hlt
fst
or
adc
add
pop
shrl
add
inc
add
js
mov
mov
inc
test
add
or
mov
jp
cmp
cwtl
out
add
loopne
mov
dec
dec
sub
and
ds
leave
mov
scas
das
in
adc
test
fidivs
mov
jge
js
xchg
or
test
push
lds
mov
lret
pushf
movsl
cmp
mov
pop
jge
add
cltd
addb
pusha
add
jl
sub
jo
mov
mov
mov
add
fdivp
inc
dec
testl
adc
sub
add
mov
inc
xlat
lret
mov
lock
out
shll
daa
fwait
aam
in
add
xor
mov
mov
inc
dec
mov
adc
movl
sbb
inc
iret
pop
xchg
push
or
loopne
mov
add
pushf
or
popf
mov
add
mov
add
dec
xchg
push
add
mov
outsl
push
iret
or
dec
xchg
aas
sbb
or
add
add
push
add
xorps
jne
js
outsb
test
cmp
mov
mov
adc
mov
in
sbb
or
punpcklbw
mov
stos
xchg
push
loope
enter
cmp
adc
mov
roll
add
add
js
xor
xor
cmp
push
add
mov
mov
mov
add
daa
icebp
sbb
or
out
xchg
stos
int
pop
aad
sbb
jmp
pop
rcr
int3
test
add
aam
jns
and
fwait
and
add
flds
jecxz
mov
and
mov
popa
icebp
fstl
call
add
add
pop
ss
lods
inc
add
mov
mov
xchg
leave
sub
fdivs
cmp
ss
add
mov
sub
add
or
push
adc
incb
mov
add
popa
pop
mov
pop
aaa
cltd
testl
pop
out
cmp
lahf
stc
fnstenv
mov
lret
rolb
mov
mov
test
leave
inc
xchg
add
mov
add
cmp
dec
inc
adc
adc
leave
push
fmuls
cs
mov
xor
mov
jo
mov
add
sets
test
ss
loope
cwtl
sub
mov
mov
daa
jns
and
addb
xorl
mov
cltd
pop
sahf
add
inc
add
pop
jle
sub
pop
mov
mov
cmp
jmp
push
mov
clc
adc
cmp
and
mov
imul
movsb
addb
dec
or
sub
lock
add
add
mov
cmp
add
pop
popl
pop
in
push
sbb
mov
jg
fdivrl
jo
mov
dec
push
or
loop
mov
in
mov
outsb
loopne
mov
movsb
push
push
fiadds
ret
jmp
insb
or
sahf
out
mov
add
and
or
call
ret
outsl
fsubl
adc
or
testb
xchg
add
dec
dec
add
mov
popf
jmp
outsl
movsl
and
xchg
dec
scas
cmp
add
add
mov
rolb
mov
mov
inc
xchg
inc
dec
mulb
add
and
mov
mov
inc
out
adc
add
mov
pop
cmc
jmp
add
jle
leave
lahf
mov
in
xchg
adc
add
movsl
add
mov
negl
cwtl
pop
cmp
add
pop
pop
popf
repz
add
movsb
in
les
xchg
jbe
add
inc
cmpsb
fsubrl
mov
mov
jnp
iret
sub
jge
push
mov
mov
scas
dec
lea
pop
adc
mov
dec
jae
pop
push
inc
push
dec
mov
testl
sbb
dec
dec
int
or
add
and
mov
ljmp
mov
lock
mov
inc
add
cmc
inc
add
pop
ds
inc
loopne
mov
add
loope
je
aam
sbb
add
add
ljmp
add
inc
mov
lock
xchg
sub
add
mov
xor
jg
out
fidivl
mov
addb
mov
popa
sbb
mov
popl
mov
pop
and
xor
fwait
mov
mov
add
test
rolb
mov
cmp
mov
data16
mov
push
jmp
add
mov
in
js,pn
ljmp
outsl
xchg
push
add
add
out
pop
push
add
imul
fbld
add
stos
sti
repz
and
mov
sbb
add
jmp
pop
stos
out
fadd
pop
std
aaa
mov
inc
test
add
mov
popf
test
cmp
mov
sub
loopne
mov
adc
xchg
pop
jne
push
rorl
add
mov
ljmp
fimull
mov
andnps
mov
mov
jne
stc
dec
int3
sbbl
add
loopne
mov
add
jmp
fsubrs
and
mov
pop
sub
push
gs
add
inc
add
cwtl
int
add
inc
sbb
imul
mov
fisubs
cmpsb
das
adc
add
add
mov
lods
sub
push
adc
test
mov
call
jo
mov
loope
sub
insl
repz
jb
mov
push
cmp
add
push
call
add
addr16
xor
mov
movsl
stos
mov
mov
push
dec
sbb
mov
sbb
add
mov
and
mov
fidivrl
add
mov
sub
mov
add
xor
mov
add
jl
add
int
rolb
imul
jmp
mov
ja
sbb
stos
xor
jo
mov
push
aam
lret
bound
mov
mov
push
cmp
lds
mov
push
ja
addb
in
or
push
ds
test
aaa
xor
stos
or
cmp
pushf
xchg
cmp
icebp
shrl
inc
in
inc
or
jge
mov
xchg
mov
rolb
loop
mov
mov
pop
push
fwait
stos
or
add
mov
xor
testl
cwtl
mov
sbb
int
xor
mov
add
aad
mov
mov
adc
ret
and
mov
mov
mov
mov
sti
mov
popf
push
add
xlat
out
inc
mov
sbb
inc
dec
inc
add
add
push
adc
rorl
jae
test
int3
cmp
pushf
xlat
push
xchg
test
add
insb
cs
fmul
adc
mov
daa
lea
mov
xchg
push
out
pop
ja
aas
fistps
sbb
mov
mul
dec
mov
push
ljmp
add
int
repnz
push
cmc
enter
aad
xor
fstps
add
lods
xchg
adc
call
lret
push
or
and
mov
movsb
into
fcomp
cmp
data16
jmp
bound
mov
add
xchg
add
add
mov
imul
jmp
push
add
jg
fsubrl
mov
mov
cli
cmc
cli
enter
and
mov
lods
inc
stos
addr16
xchg
cmp
pop
rolb
and
ret
sub
mov
cmp
ret
cmp
lret
mov
jo
mov
js
lds
ljmp
icebp
addb
jg
add
adc
mov
add
adc
shrl
pusha
add
cmp
mov
sub
addb
iret
test
mov
lods
adc
adc
inc
add
dec
test
and
add
add
in
add
mov
mov
mov
add
jno
dec
cmc
pop
ljmp
lret
int3
outsb
push
lret
push
mov
mov
mov
inc
std
lea
adc
mov
pop
std
jg
iret
lds
lret
fwait
adc
pop
pop
pop
test
pusha
add
mov
insb
imull
and
mov
aam
add
push
pop
test
lock
outsl
cmc
adc
mov
rolb
mov
add
sahf
fidivrl
adc
mov
xchg
fnstcw
jne
fstpl
jae
add
ljmp
jmp
jnp
sbb
lret
addb
shl
add
and
mov
in
aas
mov
std
dec
and
mov
lea
mov
mov
aad
and
aas
lods
int3
je
pop
sub
out
mov
ds
add
add
sub
mov
and
dec
orl
sarl
mov
or
pop
xor
add
add
in
test
xchg
pop
out
addr16
inc
into
jo
mov
cmp
dec
push
sbb
cli
pop
push
popa
call
imul
add
add
loope
aas
add
mov
lea
inc
cmp
and
mov
xchg
mov
add
xor
push
add
sti
pop
push
dec
cmc
sub
hlt
xchg
repz
pop
or
ret
mov
sbb
add
cmpsb
cmpsl
xchg
imul
mov
aas
cmp
rolb
adc
mov
aam
insb
pop
mov
sbb
add
add
add
mov
mov
sub
add
add
mov
add
pop
mov
add
loope
cwtl
jmp
popf
push
add
mov
push
clc
add
mov
and
cld
sahf
xchg
xchg
cli
inc
add
xchg
ljmp
add
popf
adc
inc
imul
mov
in
insl
movups
mov
mov
add
cmp
cmc
out
mov
ret
sti
jg
fdivs
adc
mov
subl
rcll
add
mov
mov
scas
sub
in
jl
mov
subl
out
xor
mov
add
push
push
add
cs
add
shl
into
leave
inc
add
push
sub
push
in
aad
dec
xor
add
popa
cltd
int
jmp
loope
dec
push
imul
iret
push
test
mov
adc
fimuls
fldt
xor
scas
imul
mov
xlat
es
mov
sbb
es
mov
es
mov
xor
pop
pop
add
mov
xor
cs
rolb
and
insl
insl
jnp
data16
mov
out
outsl
mov
add
dec
mov
add
mov
add
call
cli
rorl
ret
sub
pop
icebp
ljmp
push
pop
xchg
add
mov
sahf
lock
aaa
je
adc
ljmp
add
outsl
es
movsb
leave
xchg
mov
mov
jnp
lea
insl
test
push
or
out
in
adc
xlat
fsubr
notb
jbe
stos
scas
mov
mov
cmc
fs
inc
add
sbb
rorl
add
fisubrl
jbe
jp
and
lock
cmp
add
mov
enter
mov
aas
out
inc
jge
adc
mov
add
mov
mov
jnp
nop
add
push
sbb
xchg
scas
mov
add
mov
push
mov
mov
loope
jecxz
or
mov
mov
mov
ret
insb
inc
mov
mov
mov
or
mov
cmp
fcmovu
dec
pop
cwtl
lcall
mov
mov
loop
mov
add
add
jbe
dec
sti
pop
xlat
sub
ja
push
add
out
loop
mov
add
add
dec
adc
cmp
pop
push
add
int
idivb
mov
lea
add
mov
jecxz
jle
rolb
mov
jne
ret
aas
adc
add
add
sub
insb
sub
and
push
inc
add
push
outsl
movsb
pop
pop
and
mov
xor
les
out
int
fwait
out
xchg
push
add
jecxz
jb
mov
add
mov
mov
add
jg
pop
loope
xchg
ror
jnp
add
das
push
add
mov
pop
push
rolb
mov
adc
mov
add
mov
lret
add
stc
in
mov
add
cltd
out
outsl
push
add
test
mov
mov
mov
push
test
inc
add
mov
mov
shll
sbb
jbe
jecxz
fdecstp
bound
mov
add
fwait
mov
xchg
pop
out
pop
lcall
add
test
lret
roll
lods
lods
fdivl
xor
insl
push
add
mov
sub
and
add
mov
lahf
jae
sahf
mov
or
add
mov
mov
mov
or
mov
stc
pop
push
scas
insl
pop
jg
cmc
test
push
jnp
mov
mov
aas
cmp
pop
xor
mov
sub
sub
rorl
out
add
test
mov
mov
nop
add
push
cli
into
enter
int
add
sbb
xchg
imul
pop
push
add
mov
mov
mov
xor
mov
add
test
jno,pt
jecxz
jb
mov
add
scas
loop
mov
and
ds
addb
dec
sub
icebp
push
pop
jnp
adc
mov
loop
mov
mov
xchg
sub
scas
fistl
mov
test
cmp
lret
mov
add
mov
add
add
mov
int3
mov
add
aaa
or
add
ja
lret
jge
cmpsl
test
scas
loope
stos
hlt
sub
push
add
add
pop
jbe
jbe
outsl
dec
hlt
xchg
rolb
inc
add
mov
and
mov
mov
xor
mov
jae
dec
jbe
js
pop
int3
scas
add
mov
call
jns
les
insb
mov
inc
dec
je
jl
outsl
xor
in
sub
das
push
fiaddl
nop
add
sub
popf
jle
inc
add
mov
lea
aas
push
jecxz
lods
pop
cmp
mov
sub
dec
jp
stc
dec
pop
fnstsw
fsts
lcall
jp
das
icebp
je
add
rolb
mov
std
shll
cltd
inc
push
add
clc
ret
or
inc
add
add
mov
mov
xchg
popa
mov
cs
push
stos
mov
fidivrl
fwait
pop
cwtl
iret
sbb
push
add
add
div
xchg
aas
xchg
cli
out
cld
dec
rolb
add
loope
cmp
mov
stos
mov
lea
add
push
jb
mov
in
add
std
lods
in
add
jne
or
mov
mov
loope
jmp
lock
jb
mov
mov
mov
adc
add
cld
ljmp
mov
je
mov
shll
mov
sub
pushf
gs
jb
mov
ds
jmp
movsb
inc
in
inc
add
add
repz
jae
ljmp
stc
in
mov
mov
xchg
inc
add
insb
repz
pusha
add
mov
lds
pop
push
or
rolb
insl
inc
add
xchg
test
cwtl
addb
cli
mov
jno
xor
sub
jge
mov
stos
test
or
repz
mov
sbb
aaa
hlt
and
mov
jl
or
xor
or
push
mov
in
add
add
cmc
inc
add
lret
ja
pop
mov
mov
pop
pop
out
mov
mov
rolb
mov
or
sub
add
addr16
rol
bound
mov
call
push
in
and
mov
mov
data16
push
mov
test
mov
pop
outsb
lea
mov
add
mov
sub
add
add
and
xchg
cmp
es
xlat
sbb
in
adc
mov
inc
pusha
add
stc
push
ljmp
out
lods
cld
inc
add
dec
xor
add
mov
mov
mov
mov
mov
add
mov
mov
pop
jae
add
lcall
fs
shll
jns
xor
pop
insb
repnz
mov
aad
add
bound
mov
sub
mov
mov
das
jp
outsb
lds
mov
nop
add
das
mov
rcrl
pop
es
mov
jecxz
add
mov
aas
ds
sbb
dec
rolb
sbb
hlt
pop
incl
mov
clc
dec
movsb
lcall
add
lcall
shl
sbb
dec
shll
inc
or
jns
add
addl
mov
or
dec
dec
sahf
fists
jb
mov
jo
mov
push
decb
movsl
mov
add
outsb
das
jbe
cmp
sub
sahf
add
push
or
stc
sbb
and
mov
fs
pop
gs
jge
push
sbb
add
adc
xor
mov
push
cmc
adc
cmp
lret
adc
mov
push
int3
pop
loope
sbb
and
mov
sbb
out
scas
mov
test
mov
add
push
add
popl
cli
mov
mov
mov
addr16
mov
pop
stos
pop
adc
dec
cmp
xchg
adc
stc
pop
push
les
insl
dec
inc
push
mov
popf
data16
sbb
movsb
pop
out
lcall
mov
hlt
pusha
add
push
jl
cmp
add
mov
out
rcr
add
mov
repnz
ja,pn
inc
add
rcr
xlat
adc
add
dec
xchg
cwtl
ds
xor
es
sbb
sub
jno
add
inc
xlat
rcll
push
add
adc
mov
ss
mov
jmp
add
xor
in
push
dec
inc
ds
jnp
fstpl
push
jle
cmc
aad
inc
push
or
add
jmp
add
sbb
sbb
jno
cltd
jmp
sub
clc
cmpsb
dec
cmovg
push
in
and
ja
rolb
mov
pusha
add
sbb
and
add
imul
fwait
adc
movsl
bound
mov
gs
mov
xor
mov
mov
loope,pn
int
adc
mov
jp
add
add
pop
popf
neg
sub
cld
movsb
rol
dec
loop
mov
call
ja
int3
fisubrl
loop
mov
xchg
add
add
mov
cmp
cmp
add
and
mov
rcl
mov
pop
arpl
xlat
xor
cwtl
mov
sub
cmp
mov
mov
add
loop
mov
sbb
je
xor
mov
jle
mull
mov
fneni(8087
add
add
dec
imulb
jno
cltd
push
mov
rorl
add
cmp
xchg
jbe
adc
jae
outsb
jmp
add
ret
lea
sbb
movsl
mov
or
cmp
dec
out
rolb
inc
lock
mov
jl
insl
je
mov
add
rorl
cmp
mov
and
mov
add
sub
add
mov
arpl
ja
jb
mov
xchg
sub
mov
out
cmp
mov
inc
sub
clc
mov
mov
dec
arpl
cmp
aaa
or
mov
je
je
push
stc
dec
addl
sub
pop
aam
lcall
add
ret
enter
rolb
mov
add
dec
js
add
xchg
rolb
mov
xchg
out
inc
lahf
out
arpl
inc
lds
push
sbb
and
pop
cmpsl
mov
inc
rolb
mov
add
push
ret
dec
sub
pusha
add
add
mov
out
xchg
add
mov
mov
xchg
add
and
dec
push
cltd
and
repz
cmp
adc
and
outsb
ficompl
adc
daa
scas
xchg
nop
add
mov
jl
stc
mov
loop
mov
mov
add
ss
cmp
imulb
add
mov
inc
sbb
or
mov
mov
fwait
adcl
pop
xor
mov
cli
mov
xchg
and
mov
rolb
mov
inc
sbb
fisubs
aaa
js
add
and
popf
rorl
pop
testb
jae
add
lcall
int3
das
lret
jmp
mov
mov
jo
mov
add
js
add
mov
mov
in
add
mov
sti
sbb
push
push
add
movhps
sub
fcoms
icebp
add
mov
mov
add
lods
push
sub
push
xor
add
loop
mov
sub
mov
popa
lret
mull
sub
mov
shrl
sahf
push
or
mov
fistpl
dec
mov
add
add
mov
leave
dec
mov
mov
in
sbb
or
and
out
and
mov
lret
test
sub
or
fistps
add
mov
iret
push
aam
into
les
mov
fdivl
sub
add
push
outsb
js
rol
mov
xchg
fiadds
sub
es
mov
add
sub
add
mov
pop
jns
les
in
mov
push
or
loopne
mov
xor
mov
mov
stos
add
mov
mov
add
cmp
add
int3
xor
mov
xchg
mov
out
cmp
add
and
mov
add
test
sarl
adc
add
rolb
push
jne
cmp
faddp
add
mov
add
mov
add
xchg
fucomp
enter
sbb
mov
cmc
loopne
mov
or
pop
xor
mov
and
ja
pop
and
mov
mov
adcl
mov
call
loopne
mov
mov
mov
scas
dec
or
mov
dec
and
call
out
pop
cmp
popa
outsb
or
aas
or
lahf
cltd
push
add
jge
cli
sbb
adc
mov
add
mov
outsb
sub
loopne
mov
dec
and
mov
lret
mov
inc
and
inc
enter
stos
pop
notb
leave
aas
outsb
jle
xchg
mov
jo
mov
cli
jne
sub
mov
aaa
hlt
insb
pop
xchg
scas
xor
fistpl
enter
add
add
lret
loope
mov
mov
add
jae
sub
jecxz
adc
mov
into
in
sbb
xlat
sub
add
and
inc
jns
testb
es
or
cmp
mov
out
mov
aaa
sub
movsl
ret
adc
push
mov
lea
ret
dec
xor
mov
outsb
int
fstps
mov
add
rolb
mov
arpl
std
lea
arpl
add
jmp
call
out
sbb
add
adc
xor
mov
pushf
sbb
icebp
popa
clc
and
mov
push
jge
add
ja
inc
out
cmp
lret
sahf
push
aad
int
add
mov
xchg
jmp
xchg
add
sbb
scas
dec
rolb
clc
push
data16
sti
inc
test
mov
mov
mov
mov
popf
ljmp
mov
cs
into
mov
sbb
jo
mov
fidivrs
adc
arpl
mov
inc
test
sti
cmp
add
pop
mov
shll
add
add
lret
dec
mov
mov
add
add
or
mov
cwtl
adc
mov
mov
cmp
inc
scas
mov
int3
int3
dec
xchg
add
idiv
sub
fiadds
imul
inc
incl
stos
xchg
inc
ljmp
ja
inc
jle
push
sbb
mov
add
loop
mov
outsl
inc
add
add
adc
xor
mov
out
sbb
dec
divb
pop
sub
ret
add
mov
repnz
xchg
or
add
mov
or
add
int3
jbe
lea
mov
addb
xchg
add
in
sbb
imul
je
mov
or
dec
mov
mov
insl
outsb
mov
insl
mov
add
and
dec
jne
sahf
fists
dec
or
leave
scas
cmp
xchg
inc
adc
mov
adc
pop
call
stos
mov
sub
mov
cmpsl
imulb
ds
xchg
or
mov
add
add
jp
data16
cmpsb
cmp
push
add
mov
aaa
jns
loopne
mov
out
sbb
cmp
jno
mov
dec
cmpsb
push
fldenv
outsb
subl
out
push
mov
mov
fbstp
push
inc
add
mov
and
mov
mov
je
stos
jo
mov
add
push
add
mov
jae
loopne
mov
fidivrl
rolb
mov
pop
push
mov
jmp
add
in
jns
cmc
mov
in
test
add
jae
mov
xchg
aad
jne
cmp
addl
mov
leave
out
sbb
mov
sbb
mov
add
mov
insl
je
mov
push
das
push
lods
mov
add
dec
loop
mov
mov
je
stc
mov
out
pop
jnp
jb
mov
mov
out
inc
xchg
cmp
imul
pop
jns
jo
mov
add
mov
mov
add
cs
test
mov
push
in
add
mov
pop
orl
adc
xchg
scas
pop
xor
mov
mov
jp
xor
popa
cmp
and
mov
jne,pn
movsl
mov
xchg
js
movsl
inc
add
adc
mov
movsl
add
add
mov
sub
add
jl,pn
add
xor
mov
xchg
mov
cmp
in
xchg
add
ljmp
iret
fbld
mov
repz
push
xor
push
dec
push
inc
jmp
mov
jbe
and
mov
in
mov
mov
pop
int
jbe
add
mov
rolb
mov
aaa
mov
dec
sbb
add
mov
pop
or
pop
sub
adc
mov
add
add
jne
mov
jne
inc
add
and
add
scas
loope
push
push
into
jb
mov
xchg
add
add
or
pusha
add
popl
fsubrs
data16
pop
sti
jo
mov
mov
add
push
fisubl
or
mov
negb
mov
sbb
add
pop
or
mov
add
dec
pushf
dec
ret
push
rolb
mov
popf
fistpl
imul
push
add
sbb
add
lahf
in
fucompp
fiadds
add
and
mov
xchg
pop
ficompl
push
test
fwait
or
add
xchg
add
cld
out
push
add
mov
add
add
push
inc
sub
add
mov
add
sub
xchg
xchg
adc
mov
jl
push
or
pop
jno
push
jge
bound
mov
pop
rolb
mov
bound
mov
add
test
add
mov
sub
lret
es
fnsave
call
push
push
sub
add
movsl
mov
mov
xor
mov
xlat
sub
jmp
add
mov
sbb
data16
mov
add
mov
fnsave
mov
or
add
jg
pushf
pop
push
xchg
ficoms
mov
jecxz
add
mov
xchg
test
sbb
shll
add
into
mov
mov
add
popf
out
pop
daa
dec
pop
sub
cmp
out
inc
mov
jl
add
jb
mov
inc
popf
xor
mov
add
pop
int
push
or
icebp
rorl
lea
pop
int3
lods
add
add
add
push
rolb
mov
ja
dec
push
je
daa
in
add
xchg
es
adc
mov
addb
das
pusha
add
xchg
pop
stos
jnp
fwait
dec
daa
adc
mov
mov
add
add
jb
mov
es
mov
add
add
lds
xchg
or
cmp
loopne
mov
xor
cld
out
jbe
fwait
mov
add
mov
sub
inc
lahf
jns
jne
aas
cmpsl
mov
jns
push
out
hlt
add
mov
jo
mov
jp
or
sbb
pop
add
cmp
pusha
add
mov
shrl
xchg
add
jb
mov
sbb
add
mov
pop
lods
mov
mov
popa
xor
add
out
lods
loope
adc
mov
add
push
lret
stos
nop
add
cmpsb
test
xchg
in
and
add
mov
shll
pop
inc
mov
add
mov
jmp
inc
ljmp
add
add
mov
sbb
cli
sbb
add
mov
lds
test
std
test
or
push
jmp
loopne
mov
sbb
inc
add
cld
js
mov
daa
pop
jne
in
mov
cmp
test
add
push
cmpsb
std
frstor
mov
cli
push
add
jle
xlat
std
adc
mov
mov
jbe
and
and
mov
dec
stos
cs
dec
mov
xchg
add
mov
add
adc
add
insb
jnp
push
push
out
es
scas
js
pop
aad
jne
mov
mov
xor
mov
les
inc
add
cmp
add
add
sub
fiadds
mov
jle
ds
cmp
add
add
fsts
pop
mov
xor
mov
lret
stos
les
and
cmpsb
cmp
movsl
lea
or
frstor
add
add
pop
testl
add
xchg
add
add
xor
mov
outsl
push
subl
pop
adc
mov
xchg
jb
mov
and
mov
mov
sbb
mov
xchg
jl
gs
pop
dec
das
mov
add
pop
sbb
mov
sub
call
mov
roll
add
dec
out
mov
add
sub
jmp
addb
xchg
inc
add
pop
or
enter
cmc
je
push
fildll
test
add
mov
imul
xchg
pop
add
xchg
ds
lea
gs
repnz
in
and
mov
test
fwait
adc
mov
jns
fisttpll
mov
dec
adc
mov
sbb
push
adc
mov
loope
sbb
addb
jo
mov
out
mov
mov
popf
adc
mov
je
mov
mov
lcall
mov
add
jns
add
iret
rolb
mov
mov
jg
lods
push
pusha
add
scas
push
mov
xor
jle
dec
inc
adc
nop
add
push
cs
ficompl
in
sbb
sbb
outsl
ficoml
ret
faddl
scas
pusha
add
add
repz
std
push
add
cmc
lahf
movl
jno
mov
mov
add
sub
add
test
mov
aam
mov
out
out
aad
and
mov
icebp
xchg
rolb
fidivrl
or
add
pusha
add
in
add
push
add
cmp
mov
aad
add
mov
mov
rolb
xor
and
test
sub
loop
mov
into
out
push
add
icebp
addl
in
add
add
mov
xchg
sub
js
add
jmp
mov
loope
stc
mov
jno
lahf
xchg
mov
scas
sti
push
add
adc
push
jl
mov
bound
mov
and
mov
inc
adcl
sarl
dec
mov
incl
gs
xchg
or
sbb
jmp
inc
add
inc
out
scas
decl
es
inc
rolb
mov
pop
rolb
ficompl
hlt
popf
sub
out
mov
jp
jne
out
dec
jo
mov
movb
mov
lea
add
fldl
in
mov
add
mov
mov
mov
rolb
movsb
iret
lcall
shl
add
cmc
ds
jb
mov
add
dec
jmp
push
out
imul
hlt
sub
jecxz
out
mov
add
cmp
mov
stos
and
mov
mov
push
xor
jo
mov
cmpl
and
imul
add
inc
aaa
into
pop
fwait
push
das
adc
pop
ljmp
mov
or
jg
addb
add
mov
les
jmp
cmp
add
ja
stos
cmc
push
arpl
dec
xchg
adc
mov
sub
std
roll
in
ljmp
mov
rcl
add
cmc
dec
sub
pop
pop
add
mov
or
inc
fists
lock
shll
pop
outsl
or
add
xor
mov
mov
int3
addb
pusha
add
cmp
add
or
lcall
sahf
shl
xchg
mov
cmp
xchg
bound
mov
mov
pop
scas
add
aaa
arpl
aam
add
fimuls
add
jl
xlat
outsl
scas
out
add
add
adc
add
inc
xor
mov
repz
push
sbb
in
mov
loope
rorl
shrl
lret
rdtsc
pop
jns
lret
mov
adcl
rcll
loope
lds
xor
loope
test
lret
xor
mov
dec
mov
and
mov
or
add
cmp
cmp
outsl
mov
addb
stos
insb
mov
mov
mov
fstps
add
jb
mov
call
lds
lahf
push
and
push
add
hlt
imul
bound
mov
in
cwtl
xchg
xchg
mov
repnz
add
loop
mov
mov
add
xor
mov
mov
sub
scas
rolb
mov
push
xchg
sub
jne
pop
jmp
je
jecxz
pop
insb
sub
xor
mov
mov
jb
mov
test
add
sbb
push
push
sub
ljmp
scas
xor
add
add
jbe
jmp
adc
add
xchg
testl
popa
inc
add
push
bound
mov
jns
addb
jbe
push
xchg
shll
xchg
nop
add
and
cwtl
and
pop
sahf
and
mov
ss
inc
icebp
inc
mov
mov
cmp
out
add
add
jb
mov
mov
js
push
dec
rolb
mov
test
repz
xor
add
fs
out
pusha
add
cs
lahf
inc
cmp
add
pop
test
jno
je
aaa
fstps
movsl
jns
add
and
lret
aam
enter
or
add
mov
add
out
xchg
add
in
lret
sbb
dec
sub
push
mov
mov
adc
mov
add
mov
mov
mov
andl
and
jno
xchg
inc
add
push
aad
stos
cmp
insl
inc
or
aaa
sbb
add
leave
sbb
add
push
test
sub
mov
jecxz
add
gs
pusha
add
loope
iret
push
jb
mov
pop
pop
jge
add
inc
jno
fsubl
cs
fcoml
add
test
add
lret
inc
add
leave
adc
push
add
xor
push
dec
inc
addb
mov
mov
dec
adc
mov
in
lret
call
and
xchg
sti
les
popa
jp
xor
mov
std
inc
xor
and
mov
inc
rolb
mov
rolb
mov
mov
push
mov
mov
mov
pop
imul
add
jns
sbb
js
add
sti
out
mov
rorl
je
mov
mov
adc
mov
xchg
pop
jecxz
sbb
rolb
aad
stos
popa
ja
xchg
add
xor
idiv
mov
mov
xor
mov
mov
sub
xchg
jae
adc
scas
data16
mov
int3
jl
das
pop
rolb
mov
xchg
push
call
mov
cmp
or
sbb
sub
jne
addb
inc
jmp
cmp
mov
addb
jns
and
mov
mov
lahf
andl
pop
inc
jp
out
movsb
push
fsts
add
mov
add
push
scas
movsl
xor
xchg
jne
int
js
aaa
jae
jno
ss
pushf
cmc
addb
mov
pushf
addb
adc
aad
loope
cld
pop
test
ljmp
cmp
outsb
sub
fistl
ja
or
mov
cltd
adc
movsb
rolb
mov
mov
sub
mov
add
mov
mov
int3
subl
enter
pop
clc
inc
pop
add
jb
mov
cmp
icebp
xchg
call
cmp
into
xor
push
scas
into
sbb
add
les
jae
adc
add
add
mov
add
pop
addr16
sub
sub
or
add
jl
add
mov
cli
jecxz
fidivrl
jo
mov
add
add
push
mov
and
stos
sbbl
mov
mov
enter
jo
mov
in
mov
inc
add
rcl
add
mov
add
mov
ret
xchg
add
mov
bound
mov
xor
call
je
aaa
and
mov
add
mov
mov
push
or
mov
xchg
add
xor
out
mov
out
add
mov
add
lods
js
jl
or
inc
add
sub
mov
jge
imul
stos
and
mov
repnz
ficoml
add
xchg
lcall
ret
jg
adc
xor
dec
out
push
xchg
mov
daa
jg
push
xchg
mov
mov
mov
add
inc
mov
or
push
jmp
clc
jp
dec
xor
mov
add
sub
pushf
push
movsl
mov
xchg
sbb
add
jns
sub
mov
add
iret
cltd
lret
mov
je
or
add
dec
ds
test
cli
add
mov
repz
push
cmp
inc
test
inc
add
add
es
mov
lods
cmpsb
push
bound
mov
repz
mov
mov
add
mov
fldt
pop
inc
push
xchg
js
mov
add
add
stos
jp
fnstenv
cwtl
cmp
xchg
adc
ds
add
ja
repz
inc
xchg
add
fbld
adc
add
or
add
push
jmp
push
xor
fwait
cmp
mov
sbb
add
mov
add
pop
inc
add
inc
add
add
lcall
mov
loop
mov
pushf
out
std
sbb
sbb
mov
mov
mov
loop,pt
mov
in
mov
leave
or
add
fxam
out
andl
faddl
mov
mov
lret
sub
dec
push
fiaddl
imul
cmp
mov
fildl
mov
add
pop
mov
adc
mov
adc
movsl
jae
pop
fcmovnu
dec
sub
stc
mov
aam
mov
mov
call
push
mov
js
icebp
cmp
fst
add
pop
addb
sub
jb
mov
notb
ds
fwait
mov
add
add
push
les
idivl
mov
jno
das
and
mov
add
or
mov
xchg
add
mov
add
pop
pop
clc
and
mov
mov
adc
mov
ret
xchg
mov
out
sahf
inc
and
mov
add
enter
sub
sub
sub
mov
subl
push
dec
notl
or
std
call
and
mov
add
aaa
adc
jno
fsubrl
lods
dec
cmp
add
int3
popf
pop
loope
mov
repz
cli
pop
lock
mov
mov
gs
add
xchg
sub
dec
mov
dec
bound
mov
bound
mov
mov
add
fwait
xchg
stos
pop
inc
adc
nop
add
cmp
jg
add
cs
mov
push
insl
int3
inc
add
movsb
pop
mov
lahf
pop
pop
in
jb
mov
xor
js
mov
mov
add
cli
cmp
cld
mov
mov
sbb
add
adc
mov
sti
cwtl
add
jb
mov
add
inc
add
mov
testb
and
add
add
inc
adc
mov
mov
imul
push
dec
cltd
in
addb
mov
push
sbb
movsl
push
mov
mov
test
pop
mov
adc
scas
in
imul
mov
mov
push
add
mov
fdivl
or
das
mov
jle
jbe
dec
push
xlat
pop
dec
pop
lret
or
je
add
ja
mul
cmpsb
cmpsb
jb
mov
mov
mov
xor
pop
sub
idivl
mov
pushf
mov
divb
mov
add
cltd
jae
lods
cmp
sbb
push
jecxz
imul
mov
xchg
pop
ret
repz
cmp
ret
icebp
clc
aaa
or
mov
mov
mov
mov
fsubs
pop
ret
addb
cld
ljmp
add
pop
dec
ds
jae
inc
add
pop
ret
dec
out
jle
add
je
add
mov
add
pop
es
sbb
mov
les
and
dec
clc
pop
xor
mov
mov
jg
cmp
push
fcmovu
pop
cmp
imul
add
adc
mov
aas
in
fisubl
call
sub
add
addb
cld
pop
cmp
add
pop
mov
mov
mov
gs
or
add
add
add
cs
rorl
data16
aad
adc
add
cmp
je
push
insl
sarl
sahf
or
adc
mov
out
jmp
sbb
add
or
push
pop
push
sti
in
mov
mov
mov
add
mov
ficoml
or
or
enter
fucomp
loopne
mov
roll
add
mov
outsb
sbb
jbe
pop
sbb
jno
add
mov
jb
mov
or
cld
addb
aas
mov
mov
mov
dec
rolb
mov
and
mov
icebp
test
sub
dec
or
sub
add
addb
push
inc
scas
sahf
mov
add
jg
mov
add
mov
sbb
and
pop
dec
int3
out
add
pop
add
aas
push
add
bound
mov
testl
mov
fwait
or
push
and
mov
rolb
mov
add
scas
out
xorl
in
mov
add
negb
xor
mov
pushf
movl
push
inc
repz
mov
sahf
jbe
stos
xor
add
jns
addb
fwait
mov
enter
in
add
add
and
dec
jmp
add
add
cmp
jmp
add
mul
sub
es
dec
mov
addb
sub
add
mov
and
mov
push
movsb
pop
mov
add
inc
ds
pop
cmc
mov
fstpl
sub
and
mov
jle
fwait
pop
pop
and
add
jb
mov
nop
add
mov
mov
jg
insl
cwtl
scas
cmp
lock
jle
push
or
add
scas
gs
push
xchg
repz
add
das
cmc
stos
pop
ret
mov
mov
add
add
sahf
dec
les
insl
inc
vmovd
ret
cmp
les
mov
mov
in
pop
push
loopne
mov
add
sbb
push
out
jg
jbe
sbb
mov
add
fsubs
pop
fbstp
pop
push
push
mov
add
mov
sub
jae
sbb
sbb
add
mov
and
loopne
mov
int
cmpsb
lahf
mov
loop
mov
test
jo
mov
mov
outsb
mulb
rolb
lods
dec
cmpsb
xchg
add
sub
rcrl
push
mov
lea
loopne
mov
pop
mov
cltd
insb
or
loop
mov
add
and
lahf
and
mov
leave
rolb
mov
insl
dec
nop
add
cmc
rolb
mov
pop
jns
dec
or
add
push
sub
jno
aam
mov
jne
pop
push
xchg
dec
push
lds
gs
int3
scas
std
in
adc
mov
jg
dec
sbb
imul
andl
imul
inc
in
dec
jnp
stos
adc
add
inc
add
cltd
jl
pushf
adc
mov
mov
push
dec
pop
cmc
mov
lds
loope
mov
mov
jl
mov
mov
or
pushf
or
pop
lock
jbe
add
mov
push
loopne
mov
mov
push
bound
mov
push
dec
or
scas
pop
inc
cmp
add
imul
add
inc
es
jge
add
icebp
subl
bound
mov
add
cs
xor
cmp
jo
mov
add
mov
sub
sub
or
mov
mov
insb
mov
mov
mov
mov
inc
ret
mov
sti
daa
mov
mov
pusha
add
add
inc
add
ss
call
mov
shll
mov
icebp
into
in
data16
in
enter
xchg
cli
sub
sub
jge
lods
xchg
or
scas
xor
mov
cmp
add
add
mov
pop
out
mov
sub
hlt
pop
mov
mov
add
mov
roll
lods
mov
rolb
pop
testb
xor
test
mov
mov
push
lcall
adc
push
add
jns
idivb
mov
bound
mov
mov
mov
mov
pop
ret
je
pop
push
mov
inc
and
add
adcl
mov
mov
mov
mov
add
xlat
test
mov
add
dec
jmp
mov
xchg
xchg
add
sbb
jecxz
fucomip
or
mov
fwait
cmc
sbb
aaa
popa
cmp
mov
cmpsl
fucomip
pop
clc
dec
push
push
xor
add
add
mov
test
add
lock
rolb
cli
push
add
pop
ja
pop
mov
fadds
mov
add
mov
mov
dec
mov
dec
hlt
rolb
mov
mov
out
movsl
movsl
mov
mov
add
inc
not
rcl
mov
in
mov
test
lods
sbb
mov
sub
aaa
push
xor
mov
lds
leave
out
xchg
mov
or
add
pop
outsl
pop
outsl
int
loopne
mov
inc
addr16
data16
lret
push
add
add
mov
dec
pop
mov
mov
in
add
mov
mov
aam
or
pop
and
jle
add
cmp
jmp
out
push
ret
sub
push
pushf
divb
jbe
aas
enter
adc
mov
add
in
and
mov
add
cmp
leave
cld
stc
xchg
add
ljmp
mov
pop
add
inc
add
daa
cs
out
inc
add
hlt
mov
sbb
add
fcmovnb
add
add
mov
ss
scas
jnp
mov
mov
xchg
add
xchg
inc
leave
sarl
loop
mov
call
mov
popa
out
fldt
jne
mov
xor
mov
mov
rorl
push
jbe
fwait
adc
mov
bound
mov
push
lret
data16
loope
imul
in
stos
stos
ljmp
inc
test
adc
add
fistl
mov
pop
add
xlat
fildll
and
mov
aam
cmc
lcall
mov
xor
mov
cwtl
jmp
cmp
aaa
xor
mov
xchg
not
rolb
aas
fptan
add
out
lahf
repz
stos
lret
je
sub
pop
lea
add
mov
xchg
adc
add
mov
lea
scas
ffreep
lock
movsl
cmp
rclw
add
mov
push
adc
pop
xor
inc
pop
mov
rcll
add
scas
inc
in
hlt
mov
out
push
out
stos
or
mov
aad
psubw
push
push
xchg
add
mov
in
pusha
add
inc
add
mov
lock
cmc
mov
push
mov
les
add
mov
lock
clc
sbb
add
mov
ds
mov
add
mov
pop
test
and
adc
xlat
xchg
add
push
xchg
inc
pop
pop
mov
aad
or
arpl
push
jge
or
and
mov
add
imul
dec
push
cmp
push
add
pop
lahf
ljmp
or
shll
dec
gs
stos
popa
nop
add
adc
push
cs
adc
mov
add
dec
fnstenv
add
clc
adc
add
fisubrl
push
dec
cmp
add
add
scas
xlat
gs
mov
xor
pushf
add
add
jecxz
and
mov
mov
xor
dec
mov
cwtl
lods
xor
addb
push
add
addr16
cmpsl
cmc
sbb
aad
xchg
or
inc
test
outsl
dec
mov
xchg
add
mov
push
mov
mov
pop
insl
int
jnp
sub
mov
sbb
call
call
xor
mov
nop
add
push
sub
fwait
cmp
mov
jmp
add
xor
mov
mov
cmp
add
mov
and
mov
aad
add
jo
mov
pop
int
stos
jmp
inc
dec
lahf
push
mov
or
add
call
ret
or
aad
jae
psubb
std
mov
aam
aam
add
nop
add
or
fdivl
add
sahf
jg
out
cmc
and
rolb
mov
mov
fimull
xor
dec
arpl
stc
inc
pop
lods
jo
mov
cs
outsb
fs
pop
loop
mov
sti
add
push
cmp
lock
lock
add
push
jle
das
addb
cmpl
pop
addb
push
mov
adc
repnz
jp
insb
push
insb
loope
push
or
inc
adc
mov
sub
and
add
add
add
add
mov
movsl
bound
mov
inc
sub
add
xor
add
xor
aad
mov
pop
cli
add
mov
mov
xor
mov
or
add
pushf
dec
daa
iret
mov
add
aaa
mov
insl
xchg
add
sub
mov
mov
fwait
cmp
xor
xchg
inc
cmpsb
dec
mov
add
mov
mov
mov
add
pop
fwait
pop
sub
stos
dec
mov
mov
mov
rsqrtps
mov
lods
lcall
aad
adc
test
push
add
icebp
xor
mov
sbb
push
das
push
add
push
mov
mov
mov
mov
sub
inc
xor
mov
sub
inc
dec
rolb
mov
in
adc
mov
cmpsl
mov
mov
mov
mov
adc
mov
jbe
fidivrl
scas
test
add
and
mov
mov
out
push
add
and
mov
dec
pop
lods
mov
sahf
loopne
mov
mov
aaa
out
adc
mov
cs
add
dec
aam
dec
enter
rcll
sahf
xchg
xchg
xchg
pop
movsb
dec
int3
cmc
jge
fnstcw
setl
mov
rolb
mov
pop
fildl
aas
test
inc
add
inc
cmp
stos
cmp
adc
mov
pop
test
sahf
pop
std
repz
mov
jno
ljmp
test
sbb
add
lea
cmp
mov
shl
push
add
mov
jecxz
cmp
jge
inc
add
fs
ret
fdiv
pop
jmp
je
add
in
test
jb
mov
hlt
sahf
movsl
aaa
sbb
jns,pt
in
dec
jbe
and
out
pop
or
or
fs
mov
mov
mov
adc
sub
add
dec
shll
mov
sub
push
mov
pushf
mov
xchg
decl
sub
rolb
mov
dec
xor
inc
pop
jg
add
hlt
adc
into
shll
push
mov
pop
stos
in
add
jl
out
xor
mov
aam
add
dec
repz
add
movsl
cltd
test
mov
mov
fnstcw
rolb
mov
xor
add
mov
adc
out
pop
add
jnp
pop
jle
add
push
test
gs
mov
inc
xchg
sub
pushf
mov
leave
in
dec
and
mov
inc
inc
xchg
or
leave
xor
mov
xchg
add
add
add
mov
loope
add
or
mov
push
aaa
xor
and
mov
sub
std
add
ficompl
sbb
adc
push
mov
fstps
and
xor
je
dec
lods
add
mov
jmp
iret
lret
test
or
add
add
loope
and
mov
add
popf
mov
in
mov
add
cmp
mov
mov
push
aam
rolb
xor
mov
imul
andl
mov
push
stos
jge
jmp
in
sub
mov
add
insb
gs
add
jl
test
push
rcrl
fisttpll
mov
xchg
or
jecxz
push
xchg
add
mov
mov
lods
fisubs
rolb
out
cld
jp
add
xor
mov
ja
mov
mov
or
cmp
mov
movsb
or
popf
push
ja
add
out
dec
pop
or
dec
pop
push
inc
fsubrs
cs
jmp
dec
lds
imul
mov
and
stos
hlt
sub
cmp
xchg
add
mov
loop
mov
add
add
push
rolb
es
test
xchg
add
mov
xchg
pop
lock
aaa
imul
hlt
mov
add
add
xchg
add
clc
lods
xchg
xor
mov
rolb
mov
add
aas
mov
mov
fisttpll
add
in
pop
leave
pop
sbb
mov
sbb
mov
sub
in
aam
add
enter
mov
inc
decl
mov
jle
dec
sub
sti
rolb
mov
jnp
out
mov
xlat
js
inc
add
mov
xchg
xchg
jno
jne
jns
aaa
rolb
mov
add
add
sbb
pop
jbe
adc
mov
push
mov
mov
ljmp
inc
add
push
sahf
lods
stos
mov
insb
bound
mov
pop
ja
loope
adc
fimull
add
loop
mov
add
mov
ds
inc
stos
addb
xchg
add
pop
jge
ret
gs
sub
push
cmp
ficomps
arpl
add
mov
je
pop
or
jle
and
prefetch
xor
push
lret
xchg
push
and
fisubrs
lcall
ss
in
rolb
mov
cmp
pop
xchg
dec
sub
cmp
xchg
adc
pop
mov
add
mov
add
add
insb
aad
mov
mov
arpl
mov
mov
jge
add
and
inc
jae
push
das
sbb
mov
cmp
cs
fstps
sbb
in
jo
mov
dec
push
push
stc
mov
mov
add
mov
fstl
stc
adc
mov
fnclex
add
add
add
push
imul
out
push
mov
pushf
mov
mov
push
cmc
aaa
shll
jo
mov
mov
inc
xchg
jp
cmp
mov
outsl
stc
sub
add
pop
jno
int
mov
test
std
insl
div
add
add
dec
and
mov
icebp
sti
mov
mov
add
fistl
pop
int
das
xor
out
mov
mov
mov
addb
adc
mov
add
in
mov
inc
in
dec
lock
xlat
and
sbbl
mov
xchg
addr16
sub
stc
fs
dec
aas
jl
sub
pop
data16
xchg
add
scas
mov
sbbl
hlt
xor
mov
jnp
lahf
int3
inc
add
mov
add
sbb
cmc
cli
and
cs
sub
mov
push
jecxz
ljmp
mov
int3
cmpsl
shrl
add
test
jecxz
sti
push
movsb
jl
repnz
and
add
xchg
push
pop
addb
pop
insb
jmp
add
fcmovb
add
mov
add
pop
dec
insb
jmp
sub
hlt
ljmp
and
ljmp
stc
inc
adcl
mov
mov
repz
mov
dec
mov
xor
or
hlt
adc
mov
hlt
xchg
ret
jecxz
dec
cmp
wbinvd
stc
cli
push
sbb
mov
xor
cmpl
in
mov
push
add
sbb
mov
push
ja
jne
mov
xor
mov
sbb
pushf
std
sbb
mov
outsl
out
out
add
mov
inc
addb
push
add
js
push
fildl
rorl
scas
inc
mov
mov
pop
in
shll
sub
dec
sbb
pop
outsl
loopne
mov
test
ja
xor
mov
imulb
nop
add
enter
jb
mov
rcll
int
fisttps
pop
ret
lret
pop
fcomip
add
out
nop
add
pop
aam
add
cmp
jo
mov
add
clc
xor
clc
ret
pop
stos
arpl
insl
popa
rcr
lock
movsl
test
add
mov
sub
dec
sarl
enter
add
or
mov
push
mov
std
leave
ja
xlat
out
mov
lcall
lods
mov
or
inc
lods
hlt
mov
dec
cmc
xor
popf
or
sub
aas
fld
nop
add
xorl
mov
add
mov
call
or
inc
aas
jp
add
repz
lret
in
nop
add
popa
movsl
jbe
dec
test
pop
mov
sub
add
push
add
sub
pop
mov
lock
add
add
add
bound
mov
cmp
fcoml
call
lock
in
sahf
enter
out
mov
cli
data16
jle
sti
loop
mov
enter
sbb
or
mov
shll
xor
add
add
add
addb
jae
test
dec
push
mov
mov
leave
shll
inc
repz
add
mov
add
add
xchg
ret
xor
jne
cli
jecxz
notb
add
setnp
fstl
add
mov
mov
das
jp
fmuls
dec
sub
aas
stc
jne
mov
mov
lahf
adc
dec
jle
jmp
mov
dec
pushf
lahf
push
xchg
add
orl
andl
mov
popf
sbb
add
jl
inc
pop
hlt
add
popa
ja
add
ss
mov
mov
pop
movsl
fisttpl
outsl
int
call
imul
inc
rolb
cmc
je
xchg
inc
adc
xchg
out
and
mov
mov
hlt
mov
pusha
add
pop
or
mov
push
mov
addb
push
pop
mov
pop
sbb
add
and
sbb
xchg
mov
push
dec
push
bound
mov
mov
int3
icebp
add
rolb
mov
testb
rcll
or
mov
in
or
dec
push
add
add
add
clc
gs
mov
arpl
loope
clc
cmp
ret
jmp
lods
hlt
lahf
test
mov
add
inc
fwait
inc
add
mov
add
add
mov
leave
push
xchg
add
mov
ja
mov
add
daa
imul
js
add
add
jle
rolb
mov
enter
pusha
add
mov
std
in
jnp
clc
rolb
fisubrl
leave
mov
lods
and
sub
add
add
or
add
add
iret
in
cmp
and
mov
daa
mov
jb
mov
mov
pusha
add
out
mov
mov
inc
and
mov
add
add
mov
fwait
test
repnz
adc
add
out
cmp
sti
xchg
add
or
in
and
add
mov
dec
inc
push
aad
roll
mov
sbb
arpl
mov
addb
xor
gs
add
mov
imul
aad
cltd
out
enter
wbinvd
scas
shll
xor
aaa
loop
mov
jmp
mov
sbb
xchg
lret
mov
jo
mov
xor
jns
rolb
mov
xchg
push
sti
add
mov
inc
lret
push
lds
xor
sub
adc
add
mov
or
aaa
mov
test
add
neg
mov
mov
movb
inc
add
aad
add
push
or
add
or
call
add
mov
xchg
rolb
cmp
mov
add
mov
lahf
sahf
lods
mov
mov
fsub
lahf
pop
testl
jo
mov
das
cs
addb
pop
sbb
add
cmp
mov
mov
daa
mov
rcr
pmaxub
movsl
cmp
cmc
leave
das
adc
lret
mov
aaa
xor
mov
pop
cmpl
sub
scas
jbe
cmp
enter
ja
mov
xchg
jbe
comiss
sbb
mov
mov
test
ret
jns
add
loope
or
or
mov
repz
mov
mov
stos
mov
add
xor
mov
add
mov
dec
pop
xor
mov
rolb
mov
scas
jae
mov
mov
or
jns
push
addl
rolb
call
mov
push
pop
dec
pop
sub
loope
add
mull
mov
add
mov
sti
daa
and
mov
pop
inc
add
rolb
xchg
insl
test
add
addr16
rolb
mov
push
sbb
js
mov
imul
jle
inc
inc
or
cmp
mov
jl
add
mov
addb
outsl
mov
xchg
xor
mov
mov
je
outsl
xor
sub
add
inc
add
mov
mov
pop
mov
add
fistps
cmpsl
rolb
inc
and
fimull
lods
sub
mov
mov
js
mov
cmp
xlat
mov
lock
pop
jno
push
xor
mov
nop
add
pop
pop
movsl
stos
pop
add
add
mov
xchg
lret
repz
popf
sbb
sbb
movsl
testb
lock
mov
hlt
js
ss
add
lea
aaa
jge
adc
add
mov
insl
test
test
ljmp
dec
sbb
adc
push
test
add
test
idivl
push
add
add
or
fs
popa
cmpsl
pop
ret
das
push
addl
mov
int3
sub
enter
mov
cmp
pop
xlat
out
mov
sarl
loop
mov
push
dec
cltd
sbb
push
cmp
pop
enter
sub
push
pop
andl
add
mov
fstpl
pop
xchg
xchg
mov
out
add
add
mov
adc
mov
mov
xchg
test
cmp
jle
inc
inc
bound
mov
rolb
hlt
sbb
sahf
add
jns
out
pmaxsw
and
mov
mov
mov
ja
jne
cld
leave
jb
mov
das
int
add
aas
in
lds
dec
xchg
scas
mov
cmp
xor
jnp
mov
enter
sub
or
sbb
mov
adc
mov
mov
sbb
xor
mov
and
mov
pop
dec
and
mov
jp
adc
xchg
inc
mov
dec
loopne
mov
cmc
sbb
push
jg
dec
inc
add
pop
ja
or
notb
sub
sarl
ficomps
int3
pusha
add
jl
pushf
adcl
adc
imul
push
enter
adcl
fadds
and
cmp
push
xor
mov
pop
cmpsb
fwait
addb
push
ljmp
int
sahf
mov
jmp
cmp
cmpsb
inc
xor
mov
xor
mov
test
inc
movsb
negl
scas
xor
sub
or
add
mov
lret
mov
mov
and
scas
imul
mov
add
or
fwait
add
iret
cmp
push
xchg
inc
sub
test
cltd
push
lds
ljmp
movl
test
ja
mov
aad
push
and
mov
xor
pop
jne
cmpsb
adc
xor
rolb
mov
mov
mov
jne
add
mov
dec
or
jo
mov
xor
mov
xchg
add
dec
xchg
cld
pop
fisubl
push
push
add
mov
rolb
dec
stos
jae
test
cld
mov
das
mov
mov
lret
push
and
lret
or
sub
das
xchg
icebp
jp
daa
addb
mov
cmp
leave
mov
mov
pop
int3
je
add
inc
imul
add
mov
std
fildll
pop
adc
aad
mov
add
add
add
mov
test
xchg
fnstcw
int3
sub
enter
jecxz
xor
mov
or
mov
pop
addb
daa
lret
mov
fbld
dec
xchg
mulb
les
rorl
mov
sbb
xor
xor
and
or
ljmp
rolb
mov
mov
add
sub
cmp
sbb
cmp
hlt
pusha
add
sub
xchg
mov
add
sub
cmp
mov
popl
add
mov
add
mov
mov
mov
or
out
outsl
mov
mov
mov
int
stc
addb
sbb
mov
aaa
xchg
popa
enter
mov
cmpsb
stos
je
mov
mov
mov
nop
add
mov
gs
bound
mov
cmp
repz
mov
fmulp
mov
mov
inc
add
sbb
in
xchg
std
js
ja
sub
mov
sub
mov
push
add
add
xorl
pop
pop
dec
sub
add
pop
daa
movsb
sbb
iret
out
mov
or
jmp
pop
popa
cltd
int3
xor
add
test
andl
loopne
mov
add
xchg
and
shll
add
add
cmp
lods
or
add
inc
setl
cmp
and
test
inc
xor
mov
sahf
adc
mov
rcll
orl
mov
add
lcall
mov
nop
add
adcl
adc
ss
xor
add
dec
lcall
and
mov
mov
cltd
mov
mov
nop
add
jo
mov
pop
mov
mov
add
jp
mov
add
mov
push
pop
lods
lds
pusha
add
add
pushf
testl
nop
add
mov
pop
ret
dec
mov
mov
iret
jo
mov
jns
push
in
cli
push
add
jns,pt
adc
movsl
in
fs
add
stc
jg
add
sub
xchg
jle
cmpsl
pushf
push
dec
inc
xchg
xor
add
lcall
inc
add
mov
mov
add
jle
mov
jae
add
call
mov
add
cmp
addr16
xor
lret
out
pop
xor
xchg
lods
adc
push
dec
mov
jle
push
add
push
addb
stc
pop
repz
cmp
inc
addb
xor
mov
add
add
mov
imull
into
in
dec
jmp
lahf
addb
rolb
mov
mov
jmp
scas
lret
push
repnz
lds
mov
cwtl
out
pop
jo
mov
mov
mov
aam
dec
xchg
addb
mov
mov
dec
or
mov
mov
gs
add
add
addb
push
test
mov
mov
fists
jne,pt
jbe
loop
mov
dec
rolb
mov
test
and
idivb
adc
aad
aas
push
enter
add
leave
mov
mov
cmc
rolb
repnz
mov
icebp
repz
inc
dec
jne
jg
inc
negl
fmulp
sub
pop
push
cmp
add
add
mov
mov
jecxz
push
jle
and
nop
add
lods
sub
mov
jecxz
dec
test
add
stos
dec
fcoml
add
rolb
jb
mov
pusha
add
loope
add
or
mov
dec
cmpsb
pop
pushw
pop
cmp
addb
mov
lds
dec
call
mov
lret
aaa
lahf
xchg
jecxz
pusha
add
cmp
push
pop
sbb
lods
in
adc
mov
add
add
outsb
dec
mov
repz
inc
mov
mov
sub
aam
test
push
int3
movsl
jecxz
sbb
addb
cmp
imul
pushf
xor
pop
sti
add
mov
mov
add
loope
sbb
add
add
js
sbb
dec
lret
sbb
mov
mov
mov
inc
js
call
pop
xor
call
daa
daa
fstpt
enter
jno
sub
ret
dec
adc
lods
fwait
jb
mov
mov
push
rolb
pop
mov
cli
lods
or
add
sbb
jmp
or
add
add
sahf
lret
mov
inc
add
ljmp
rolb
mov
add
add
cmpsl
jmp
push
mov
loope
and
mov
fs
jno
lock
sub
add
mov
xor
mov
xor
dec
mov
mov
or
cmp
mov
mov
xchg
add
sti
xchg
or
mov
mov
das
stc
loopne
mov
mov
mov
mov
add
xchg
inc
sub
xor
lea
sarl
fs
pop
out
mov
add
rolb
jns
mov
add
add
cmpsb
push
mov
mov
mov
mov
jns
dec
pop
sub
fmul
fisubrl
xchg
out
xlat
lods
pop
cwtl
xchg
test
and
or
movsl
int3
aam
cwtl
imul
outsl
sti
sti
lcall
sbb
cmp
cmp
sbb
push
add
sbb
add
mov
mov
adc
xor
rolb
inc
jo
mov
add
in
pusha
add
nop
add
pop
pop
cli
cmp
test
mov
testb
mov
add
mov
f2xm1
add
sub
lds
mov
icebp
lcall
in
pushf
insb
mov
add
mov
daa
jp
mov
addb
add
jne
pop
jl
fiadds
pop
add
add
mov
mov
pop
xor
add
push
fnstcw
das
scas
adc
add
or
and
add
js
imul
mov
loop
mov
add
or
or
xchg
sbb
or
add
ficomps
into
jo
mov
mov
xlat
pop
out
xor
mov
out
inc
add
aaa
loope
xor
in
fldt
lahf
sub
add
sub
sub
mov
lds
mov
cmp
add
ret
sbb
inc
icebp
movsb
inc
add
fwait
imul
pop
and
fstps
jl
sbb
pop
clc
test
popa
pusha
add
addr16
fwait
scas
lret
gs
mov
add
mov
pop
jbe
add
arpl
jb
mov
sarl
add
pop
scas
xorl
sti
int3
test
mov
jb
mov
insl
fcoms
in
sti
xlat
cmp
xchg
scas
scas
mov
and
enter
nop
add
insb
or
adc
mov
push
cli
mov
or
sbb
aaa
dec
pop
cmpsb
inc
in
into
out
imul
mov
cmp
mov
loopne
mov
add
mov
int
xchg
sub
out
leave
out
add
jmp
sbb
ds
cmp
push
fs
in
lea
mov
add
add
and
mov
or
mov
test
es
repz
sar
lds
cmp
mov
mov
add
sbb
jb
mov
mov
rolb
mov
xchg
add
push
outsl
lods
inc
xchg
mov
mov
sbb
stos
mov
push
add
pop
jnp
out
iret
rolb
mov
xor
or
mov
mov
insb
dec
sahf
insl
jno
inc
stc
adc
pop
push
xchg
in
add
in
nop
add
rorl
and
mov
jae
add
sbb
mov
inc
dec
jne
rcrl
cwtl
jns
add
out
enter
xchg
cld
dec
xor
mov
xor
adc
mov
aas
push
or
add
xlat
mov
sub
add
add
mov
lds
or
mov
add
pop
cmp
add
and
mov
mov
and
and
push
add
test
xor
mov
add
xchg
xor
mov
int3
push
or
mov
or
mov
push
sbb
in
fwait
pop
sub
icebp
das
pop
add
mov
jnp
popl
add
and
mov
and
mov
xor
add
mov
shr
sub
push
add
add
ret
mov
hlt
lds
add
dec
hlt
pop
inc
add
add
jl
add
mov
scas
ss
sbbl
xchg
add
pop
cmp
mov
add
pop
jmp
sub
add
ljmp
lds
jg
or
mov
cmp
inc
push
out
pop
cltd
ds
jmp
add
addb
jecxz
std
cmc
ret
aas
cmc
out
leave
and
loopne
mov
inc
add
mov
xor
ja
cmp
add
and
add
js
repz
xlat
and
add
jmp
nop
add
sbb
fistl
test
sti
add
call
fsub
or
insl
bound
mov
sbb
loope
sub
mov
andl
pusha
add
ficoms
pop
outsb
inc
jle
add
jo
mov
popf
psubsw
add
out
xchg
add
in
push
add
clc
inc
push
inc
add
inc
int
cltd
jbe
js
outsb
inc
cmpsb
test
add
outsl
call
sbb
js
add
mov
sbb
add
add
mov
add
movsl
in
fcmovnu
mov
mov
int3
adc
add
jb
mov
cmp
add
sbb
and
and
loope
test
mull
cmp
mov
flds
add
or
sahf
pop
ss
notb
adc
mov
pop
addb
repnz
in
pop
idiv
jg
pop
rolb
sub
cwtl
xchg
data16
add
mov
jo
mov
sbb
mov
mov
rolb
mov
in
mov
loop
mov
mov
mov
push
xor
popf
and
sbb
xchg
cmp
push
and
inc
add
adc
push
inc
repz
mov
cmpl
lock
add
add
jo
mov
mov
add
out
leave
inc
jp
add
xchg
popf
xor
fcmovbe
cmp
add
icebp
repz
test
add
ss
xor
sbb
std
mov
test
imul
cmp
xor
dec
loope
cld
dec
popa
ljmp
xchg
pop
or
jo
mov
addb
pushf
mov
cmp
mov
sbb
pop
mov
std
aas
fs
fnstenv
mov
add
mov
sbb
out
mov
fwait
add
mov
ds
dec
mov
enter
add
jbe
enter
dec
pop
nop
add
add
sbb
adc
mov
push
pop
push
inc
lahf
add
add
rol
fistps
add
mov
mov
mov
push
push
enter
cmp
mov
mov
aad
addb
dec
repnz
xchg
out
pusha
add
jp
mov
dec
movsl
or
cmp
add
std
or
xor
js
enter
test
insb
jnp
hlt
aam
jp
add
mov
dec
xchg
mov
fidivs
sub
add
cmp
add
push
in
xor
add
or
orl
and
out
push
add
add
xchg
push
jb
mov
mov
add
fdivl
push
jmp
adc
mov
fs
jb
mov
cmpsb
or
sub
push
jb
mov
add
lret
mov
mov
mov
sub
fisubrl
notb
sub
scas
out
cmp
add
sbb
add
bound
mov
pop
je
add
add
jle
jae
mov
add
mov
push
ljmp
inc
sti
jae
cmp
add
add
xchg
mov
push
add
mov
add
stos
jns
xor
jbe
data16
mov
pop
jl
jecxz
add
add
mov
jg
inc
cmpsb
pop
fcoms
dec
mov
or
adc
test
test
lods
sub
dec
add
jl
sbb
or
lret
ret
sub
push
inc
add
mov
mov
mov
mov
push
sub
sub
aas
mov
fchs
add
mov
add
lcall
mov
enter
mov
add
int
outsb
sbb
add
fstpt
out
xor
mov
xchg
xor
xchg
lock
add
out
enter
mov
mov
add
mov
dec
xchg
fcomp
enter
add
mov
mov
aad
jns
or
add
add
out
mov
xchg
jecxz
add
jle
shr
in
push
mov
in
jle
and
and
pop
pop
enter
sub
rolb
mov
mov
mov
add
sub
add
add
xadd
mov
ficompl
inc
popf
or
int3
aaa
bound
mov
sbb
clc
test
mov
dec
add
cmp
repz
mov
jnp
aad
cmp
into
jge
pop
enter
test
jbe
cmp
adc
mov
outsl
je
mov
dec
cmp
dec
cmp
data16
cltd
sub
bound
mov
inc
ret
xchg
jbe
pop
cmp
lock
aas
fists
add
cmpsb
sub
mov
mov
add
pmullw
jle
sbb
aaa
cmc
sub
add
xchg
add
insb
push
add
mov
mov
dec
sub
stos
xchg
sub
xor
jecxz
jb
mov
mov
add
pusha
add
mov
push
aad
cltd
pop
jo
mov
jnp
lret
xor
mov
mov
xor
add
inc
xchg
int3
das
and
fsubl
xchg
shrl
jl
inc
sub
push
int3
sti
push
call
repz
mov
and
xorl
ret
das
xor
mov
jnp
adc
mov
les
ret
rolb
mov
mov
iret
pusha
add
pop
xchg
rcrl
add
mov
or
push
repnz
jae
cmp
jl
dec
jb
mov
in
push
push
gs
outsb
jbe
test
addb
or
mov
pop
fdivrp
add
mov
mov
and
add
cltd
inc
mov
es
adc
dec
and
pop
mov
push
adc
mov
xchg
fidivs
or
int3
cmp
test
int3
xor
mov
mov
daa
lret
cmp
jns
jns
cmc
inc
ljmp
rolb
das
je
add
xchg
addb
ds
mov
or
mov
popf
sahf
fidivrl
add
sahf
ljmp
stc
pop
popa
cltd
jp
dec
push
cwtl
mov
dec
or
mov
inc
dec
sub
xor
mov
mov
add
dec
push
popf
push
pushf
sub
add
jp
pop
sarl
add
dec
xor
or
sbb
mov
mov
inc
cmpsl
dec
cs
dec
loope
add
cmp
clc
stc
sbb
add
pop
iret
jnp
addr16
arpl
cmp
bound
mov
popa
mov
jae
pop
push
movsb
mov
rolb
mov
add
adc
mov
js,pn
loope
outsb
mov
xor
or
incb
lahf
pushf
dec
dec
mov
mov
mov
rolb
mov
sbb
cmp
popa
mov
lahf
in
dec
xchg
mov
out
cmp
or
or
add
cmpsb
dec
lea
push
push
lahf
sbb
add
sbb
jg
nop
add
sub
push
lea
js
mov
xor
mov
mov
push
rolb
mov
bound
mov
cmc
cmpsl
and
rolb
mov
loopne
mov
roll
mov
sub
mov
mov
mov
nop
add
loope
cmc
inc
adc
add
push
pop
push
cld
mov
mov
outsb
dec
imul
add
add
