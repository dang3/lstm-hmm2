aad
fimull
inc
mov
add
subl
mov
jge
adc
rolb
add
and
in
add
mov
mov
hlt
add
adc
push
add
sub
dec
pop
sbb
add
pushf
dec
adc
pop
movsl
pusha
add
popf
mov
dec
rorl
js
jns
sub
add
je
popf
cld
dec
mov
inc
and
and
mov
add
sbb
add
add
test
sti
xchg
add
add
sub
add
push
or
add
cmpsb
add
add
adc
loopw
jbe
inc
and
mov
add
imul
jb
pusha
add
rolb
loope
add
add
not
stos
and
mov
add
add
pop
out
cmp
sbb
add
ud2
sbbl
push
add
add
in
xor
sarl
aad
movb
add
sbb
add
dec
jno
in
test
aaa
mov
cmp
add
ret
adc
jnp
cmp
ja
cmpsl
add
mov
pop
out
loop
lcall
in
xor
sti
mov
pop
pop
les
outsl
sti
cltd
jbe
push
fnclex
add
add
js
or
mov
add
add
mov
stos
ds
mov
add
add
add
out
mov
add
cwtl
dec
out
add
mov
xchg
mov
jmp
mov
pop
push
add
or
cmp
cmpsl
lahf
cmp
aaa
mov
lds
mov
or
les
rolb
jg
out
add
pop
fnstsw
push
out
pop
jmp
add
add
add
or
mov
add
add
mov
push
cmpsb
add
out
jne
arpl
add
xchg
lods
dec
pop
xchg
add
add
add
mov
add
xchg
push
test
test
dec
and
mov
add
sbb
cmp
pop
les
clc
pop
dec
movsb
add
or
les
adc
or
mov
addb
jl
arpl
and
mov
movsb
add
mov
aaa
ds
jbe
into
xor
add
add
add
add
jmp
clc
mov
lds
rolb
pop
int3
into
int3
pop
dec
daa
icebp
sub
lods
inc
add
mov
stos
mov
add
jnp
add
or
add
mov
fstpt
cmpsb
add
stos
ljmp
xchg
add
sahf
pop
jnp
add
add
sbb
and
mov
les
sbb
jp
or
add
inc
and
mov
xchg
add
mov
add
fwait
and
jl
sti
outsl
aas
mov
add
fidivl
loop
inc
xlat
xor
nop
add
mov
cltd
in
cli
les
arpl
sub
mov
add
and
rorl
loopne
or
mov
mov
mov
dec
repnz
adc
push
mov
mov
xor
sbb
add
add
inc
add
aas
add
int3
movb
sbb
add
add
add
daa
data16
out
adc
pop
dec
imul
lret
cmp
movb
add
sarl
mov
dec
testb
loopne
jle
js
stos
jnp
add
adc
ja
add
fcomi
add
scas
das
stc
ds
imul
lret
add
add
xor
jae
mov
and
add
mov
jecxz
cmp
push
xchg
add
add
lods
loop
jns
call
movsl
and
stos
hlt
add
add
jp
add
mov
add
or
and
add
iret
mov
add
and
add
xor
mov
adc
out
call
arpl
scas
mov
loopne
mul
add
lds
add
inc
add
push
out
jno
bound
mov
add
dec
xchg
mov
jnp
add
push
dec
xchg
arpl
add
test
mov
fdivrs
cmp
lods
rolb
roll
outsl
jmp
imul
daa
rolb
data16
les
iret
fwait
mov
push
mov
nop
add
xchg
dec
sub
mov
rolb
add
and
mov
add
jae
sub
add
aas
xlat
cwtl
imul
out
mov
lahf
inc
pop
push
scas
aaa
pop
adc
leave
jae
sub
push
sub
add
add
mov
add
and
mov
add
sub
lock
stos
sub
sub
addb
add
add
xchg
add
hlt
add
add
leave
jbe
jnp
mov
add
jno
mov
sbb
repnz
add
repz
fildll
jns
push
mov
sub
push
push
push
cld
call
sub
mov
cs
movzbl
cmp
ss
lea
push
lea
push
lea
push
lea
push
push
call
cmp
je
es
lea
es
cs
es
call
test
jne
jmp
push
lret
icebp
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
lea
lea
sub
add
mov
sub
sub
push
pop
push
je
jmp
add
add
rolb
fstl
xchg
add
insb
and
movsl
push
add
outsb
out
loop
mov
mov
add
jbe
iret
in
push
divl
add
xchg
add
bound
mov
or
data16
add
loope
repz
sbb
psadbw
imul
jmp
aas
out
rolb
cmp
add
ds
mov
inc
add
mov
dec
aaa
cld
xchg
cmp
loop
call
xchg
add
add
adc
aad
outsl
pop
and
leave
movb
fmuls
or
add
les
leave
xchg
aaa
mov
add
clc
imul
cmp
and
mov
add
add
add
inc
add
stos
cs
adc
jb
dec
push
add
xchg
xchg
fucomip
insl
inc
add
mov
cwtl
jl
lcall
add
add
mov
ret
mov
cltd
dec
daa
sbb
mov
add
sub
mov
add
xor
jg
adc
add
pop
icebp
and
mov
mov
outsb
add
mov
push
add
ret
in
push
add
outsl
movsl
cmpsl
shrl
sbb
aas
rolb
ljmp
push
add
dec
and
mov
lcall
add
add
sti
mov
jge
ucomiss
mov
push
add
data16
add
repnz
faddl
or
xor
lahf
adc
xor
add
cmp
fwait
mov
add
add
add
jo
inc
das
test
or
add
cmp
jae
add
add
inc
pushf
fstps
data16
sbb
outsb
daa
negl
adc
sub
popa
inc
add
dec
addb
add
jnp
xchg
add
and
mov
add
stc
push
add
aam
jl
adc
adc
sub
gs
ret
mov
loop
adc
mov
sbb
and
aaa
push
add
addr16
jo
mov
dec
pop
iret
inc
add
jns
adc
pop
fbld
xor
cmp
stos
dec
in
or
into
inc
add
in
mov
mov
add
je
xor
add
add
lock
pop
xlat
vmovdqu
push
jg
dec
ret
adc
lcall
addb
add
cmp
pop
hlt
add
popa
sbb
cmpsb
add
mov
inc
scas
inc
jbe
mov
inc
mov
stos
cmp
add
mov
add
ds
cwtl
icebp
mov
jge
add
inc
add
dec
mov
pop
push
add
fldt
jne
xchg
add
add
iret
adc
addb
imul
push
add
pop
mov
inc
shl
add
mov
popf
testl
add
cmpsl
cs
sub
cwtl
ja
daa
mov
mov
jmp
les
pop
outsl
adc
push
add
add
aam
or
enter
mov
adc
mov
push
adc
pop
mov
popa
add
mov
inc
sub
add
arpl
addb
clc
frstor
push
scas
jae
add
cs
dec
popf
pop
dec
mov
fsubs
xchg
add
insb
movsb
add
mov
nop
add
sub
imul
inc
add
mov
jo
fsubr
jl
add
jmp
add
mov
cmp
cmc
push
add
rol
out
leave
sbb
pop
sti
cltd
jecxz
out
add
cmc
lcall
cmpsb
add
add
xchg
sub
call
out
sub
mov
add
les
out
dec
into
cwtl
daa
dec
jl
jp
jo
rolb
xor
gs
lret
ja
repnz
add
inc
add
add
and
rcrl
add
iret
mov
add
mov
and
ljmp
push
adc
and
loopne
xchg
mov
cmpsb
add
sub
movsl
repnz
add
push
add
or
rolb
push
mov
inc
add
add
add
pusha
add
aaa
mov
lret
xchg
rolb
outsl
add
add
mov
add
add
int3
push
add
std
popf
mov
fsts
sub
add
insl
mov
cmp
or
add
pop
or
mov
je
or
add
mov
jmp
add
mov
add
icebp
sti
adc
aas
inc
addr16
and
pop
pop
and
mov
push
add
dec
sar
sub
add
lods
mov
mov
imul
stos
add
add
xor
call
popf
mov
mov
add
aad
add
add
sbb
iret
out
scas
cmp
mov
add
mov
push
add
cmp
out
add
mov
add
loop
lds
jl
lds
mov
add
add
clc
inc
pop
call
dec
data16
arpl
add
adcl
mov
adc
add
pop
lret
into
or
add
mov
xchg
adc
fisubrl
dec
test
add
add
out
stos
mov
icebp
mov
push
and
sub
add
lret
stc
add
mov
add
jmp
test
ficoml
mov
and
add
bound
mov
add
ds
xor
jmp
add
push
add
mov
pop
xchg
fwait
cmpsl
fldcw
add
mov
icebp
mov
icebp
or
jg
xorl
push
add
cmc
mov
jp
mov
addl
or
daa
mov
xor
dec
jbe
mov
inc
jne
add
add
add
push
jbe
in
mov
add
dec
arpl
add
add
add
sub
mov
scas
out
jge
adc
push
add
stc
jne
cltd
jo
xchg
add
movsl
lods
mov
xchg
jp
add
push
add
insl
push
add
rcrl
add
add
loopne
inc
sub
add
mov
add
pop
mov
and
push
add
pop
iret
adc
or
addr16
add
aad
add
push
add
lods
xor
add
push
pop
int
loopne
xchg
repnz
and
mov
stos
or
out
ljmp
push
add
or
dec
loopne
adc
rcr
push
add
adc
stos
jmp
bound
mov
and
lcall
jne
add
mov
push
add
aas
jne
mov
loope
rolb
xor
jnp
sub
jmp
mov
dec
jns
or
push
and
jl
add
pop
adc
scas
fcmovnu
sbb
fdivl
add
mov
adc
fistl
add
add
add
mov
add
add
mov
mov
add
fnstcw
inc
add
add
cwtl
fcmovnu
lea
add
push
mov
add
lock
add
add
fcomip
add
add
fwait
test
pop
dec
xchg
insb
add
mov
testl
nop
add
xchg
add
mov
out
add
add
fstpl
lds
pop
jg
add
mov
cmp
push
add
ret
rorl
mov
or
add
dec
rcrl
add
add
sub
fwait
daa
je
pop
fldt
push
add
sub
and
jo
fucomip
js
add
out
aaa
lods
xchg
ljmp
pop
sarl
daa
pop
or
mov
add
das
addr16
pop
out
rolb
cmp
ret
lret
mov
push
add
add
push
add
sbb
add
daa
fcomps
data16
add
cmp
clc
mov
imul
cmp
ljmp
loop
jecxz
add
mov
inc
bound
mov
push
addr16
xor
icebp
out
or
mov
add
mov
xchg
xor
cld
mov
popf
push
add
enter
rorl
and
mov
repnz
ljmp
sti
mov
rorl
outsb
inc
add
testb
insb
scas
out
ja
rolb
hlt
add
push
add
cld
data16
mov
adc
sbb
add
inc
add
mov
add
shll
sbb
jbe
into
push
add
adc
jg
lea
cmp
and
add
add
stos
xchg
dec
insb
pop
rolb
add
add
xor
adc
mov
inc
add
jmp
pop
fstps
iret
stos
scas
sub
or
xchg
and
dec
out
cld
cwtl
aas
sub
lods
add
movb
add
inc
add
add
jmp
add
out
inc
add
into
sub
inc
jo
mov
cmpsb
add
cmp
mov
push
add
mov
adc
outsb
jae
fisubrs
or
push
add
jno
sub
nop
add
mov
mov
fisubrs
push
jbe
xchg
add
fdivs
mov
add
lcall
cmpsb
add
xchg
add
mov
and
xor
and
xchg
dec
mov
and
add
add
dec
dec
and
cmp
add
ss
jge
cld
sahf
sub
push
shl
add
mov
add
cmpsb
add
neg
xchg
add
add
or
adc
add
mov
mov
or
adc
jecxz
ja
cs
cmp
pop
leave
pop
fcoms
addr16
lret
sbb
mov
push
add
add
add
push
xchg
add
pop
jmp
add
mov
push
cltd
rorl
add
hlt
add
push
fcmovnu
rcrl
in
mov
scas
mov
aaa
push
enter
add
mov
adc
add
mov
and
nop
add
add
in
sub
mov
fbld
add
aas
int
icebp
push
add
pushf
mov
das
insl
lods
lock
mov
sbb
add
push
add
adc
fwait
jae
add
repz
pop
data16
add
mov
inc
add
add
out
add
add
add
add
jg
icebp
ds
inc
push
add
cltd
hlt
add
push
add
xor
cmp
test
in
xchg
add
mov
pusha
add
loope
add
push
out
sub
add
add
js
out
and
inc
add
dec
push
add
lds
mov
call
test
testl
mov
dec
cmpsb
add
ljmp
pop
jns
add
mov
pop
nop
add
xchg
add
pop
cltd
inc
mov
std
sub
cmc
test
out
mov
or
mov
cmpsb
add
lock
add
add
cli
dec
jnp
fcmovb
push
mov
mov
mov
insb
add
stc
mov
xchg
push
add
fiaddl
and
mov
jno
call
rolb
mov
pushf
push
ljmp
ret
movsl
sub
rolb
push
add
sub
add
cmc
adc
xor
mov
movsb
add
aad
mov
add
cmp
sub
je
testb
mov
pop
out
mov
pop
push
add
add
jno
ja
push
mov
add
sbb
add
fstps
add
out
inc
cmpsb
add
addb
sbb
jl
pop
rolb
popf
push
add
add
xor
test
mov
push
add
xchg
insl
aam
lods
arpl
dec
out
inc
add
inc
cmp
scas
jl
add
lcall
add
jo
jns
rolb
std
inc
add
rolb
mov
add
add
in
add
mov
aas
ss
mov
cmpsl
mov
add
mov
add
in
insl
add
adc
lahf
or
add
stc
int3
aad
add
add
es
pusha
add
xchg
add
imul
mov
test
lret
mov
hlt
add
and
xchg
sub
add
std
push
add
lods
adc
inc
daa
cmpsl
mov
into
mov
add
movsl
mov
mov
out
mov
out
xchg
xlat
dec
fucomip
inc
add
inc
sub
iret
test
add
jmp
add
sub
add
or
add
mov
insl
testb
inc
in
int3
xchg
je
jle
ds
pop
adcl
dec
movsl
xor
add
loop
stos
lcall
add
add
mov
xchg
daa
push
add
push
add
xchg
add
popf
mov
sbb
repnz
add
mov
mov
add
add
mov
add
icebp
stc
cmc
jns
mov
mov
leave
bound
mov
mov
in
push
add
add
inc
imul
add
push
add
mov
mov
xchg
push
add
popf
mov
fisubl
nop
add
add
fsubrs
sbb
lods
add
adc
push
jecxz
rolb
sbb
repnz
inc
inc
das
cmp
movsb
add
add
inc
add
shll
and
lods
pop
jp
pop
mov
test
fucom
adc
jo
xchg
add
add
add
add
add
fdiv
add
inc
add
imul
cmp
daa
dec
adc
iret
addb
add
add
data16
push
fwait
das
rolb
lods
inc
dec
or
push
sub
add
inc
ds
repnz
cld
rolb
ss
pop
or
jno
sub
pop
out
outsl
add
testb
add
add
add
imul
mov
adc
pop
push
add
pop
les
sbb
add
add
and
xchg
out
cs
cmp
sub
add
pop
cmp
add
mov
sar
out
add
mov
add
add
add
sbb
add
in
xchg
add
add
add
add
sbb
ja
nop
add
add
add
inc
in
add
lret
jle
mov
cmpsl
xchg
add
inc
mov
and
fwait
daa
add
arpl
test
cmpl
mov
jns
mov
add
and
sub
aaa
xchg
mov
je
push
pop
xor
ljmp
xor
lods
add
popa
adc
or
aaa
imul
pop
cli
aam
in
sub
mov
xchg
push
add
pop
xor
addb
mov
or
inc
add
mov
icebp
or
movb
add
insb
or
imul
out
sahf
jo
repz
and
mov
or
add
mov
add
jmp
add
pop
cmp
jmp
add
add
adc
jo
add
or
add
add
mov
js
js
adc
push
add
or
aas
push
call
lret
jmp
add
enter
movsl
mov
inc
add
xchg
add
pop
ja
sub
add
add
aas
aad
fwait
lods
jmp
dec
or
xchg
lods
pop
inc
add
mov
add
or
faddl
xchg
es
push
adc
mov
jb
btc
mov
lods
cli
cmpsl
mov
xor
ret
dec
ja
jge
jnp
push
xchg
adc
js
sub
je
bound
mov
add
add
add
xchg
add
add
add
push
jb
testb
jmp
mov
sub
mov
push
add
sbb
add
cli
daa
gs
adc
add
add
scas
push
add
lods
pop
popa
mov
add
sbb
jp
jnp
sub
sbb
add
add
shr
add
xor
cmp
loope
add
sti
int
test
movb
pop
lcall
rolb
sub
or
adc
bound
mov
lahf
popl
mov
mov
inc
add
std
ret
add
push
and
sbb
jmp
mov
mov
pusha
add
inc
les
aas
stos
mov
cs
gs
inc
inc
add
dec
insl
push
add
add
pop
mov
jp
jle
pop
push
and
mov
pop
or
cmpsb
add
mov
testb
add
cmpsb
add
dec
out
hlt
add
add
and
mov
add
add
mov
cmp
sub
add
add
cmp
add
add
add
mov
sbb
outsl
fs
add
lahf
das
mov
jp
dec
clc
xor
cmp
xor
das
lahf
das
addb
sbb
mov
in
dec
mov
xchg
add
dec
xor
sbb
xorl
rolb
addb
add
js
popf
aam
add
add
das
rorl
pusha
add
into
hlt
add
aaa
jne
add
lahf
pop
xchg
scas
ljmp
add
add
add
test
movl
pop
jb
xor
add
mov
sub
sahf
aad
jle
add
andl
in
add
mov
dec
outsl
data16
jae
ret
add
mov
addb
rolb
loope
adc
or
jle
cmp
push
add
mov
stc
xchg
ljmp
mov
mov
stc
sub
add
dec
jmp
add
js
add
pop
sbb
add
add
push
in
mov
gs
scas
push
add
mov
pop
jb
xor
pop
mov
add
jae
mov
add
cmp
add
add
fisubrs
pop
xor
add
add
lea
add
add
xchg
add
ret
imul
fmulp
rolb
and
add
add
mov
add
cmpsl
les
lods
pop
arpl
jns
mov
bound
mov
mov
sub
je
in
dec
dec
mov
add
enter
jne
xlat
xlat
xlat
call
lods
ficoml
pusha
add
add
lret
xorl
xor
add
add
adc
add
add
mov
add
add
mov
xchg
add
cmp
jmp
add
add
add
add
gs
mov
andl
jns
inc
add
add
sub
cmc
dec
mov
scas
mov
adc
bound
mov
add
jae
dec
loop
xor
dec
add
mov
clc
mov
sbb
push
mov
daa
nop
add
mov
add
add
insl
dec
scas
out
pop
outsl
test
inc
add
xor
filds
add
testb
xor
sbb
xor
add
sub
jo
pop
push
testb
add
mov
repnz
mov
movl
pop
xchg
add
add
add
mov
icebp
jg
int3
insb
loope
imul
je
fwait
mov
sub
out
add
cmp
jns
jle
mov
jno
cmp
fimull
push
lcall
int3
out
clc
and
out
jo
sub
gs
mov
dec
pop
mov
std
rolb
movsl
xor
adc
xchg
add
imul
mov
push
add
mov
fisubl
add
sbb
add
push
add
inc
add
mov
add
repnz
add
add
cmpsl
dec
fbstp
add
ret
inc
add
idivl
jnp
push
add
or
je
clc
dec
inc
add
in
xchg
cmc
punpckldq
mov
test
test
decl
add
or
add
ja
pop
pop
cwtl
rolb
add
add
mov
lcall
push
pop
jno
jmp
add
inc
test
cld
mov
lea
mov
loopne
jmp
add
mov
lcall
cmp
and
mov
and
cwtl
xor
leave
mov
jne
shrl
mov
cmp
sahf
mov
pop
xchg
add
add
lahf
cs
in
ja
add
mov
insl
rcll
rcll
and
add
mov
add
add
xchg
outsl
inc
pop
or
adc
dec
ds
jmp
dec
or
add
dec
inc
add
test
clc
aad
ja
add
add
mov
sbb
jno
add
inc
add
push
dec
add
add
in
sti
scas
cmpsb
add
add
js
mov
mov
add
sbb
addb
add
lock
sbb
push
pop
sub
adc
dec
or
add
je
inc
lods
sahf
xchg
subl
jbe
push
add
ss
xchg
add
pop
fcmovb
add
cmc
pop
adc
or
pop
jle
popf
and
mov
roll
mov
xor
gs
std
out
or
dec
addb
add
add
add
add
rolb
jg
dec
cltd
mov
mov
mov
test
cltd
or
pop
out
cmp
adc
addb
or
add
mov
cwtl
mov
out
testb
imul
out
add
push
add
add
addb
add
jmp
add
adc
ljmp
addr16
jmp
add
or
pop
sbb
add
inc
sub
inc
ret
xor
and
xchg
jmp
xchg
and
mov
cmp
sti
int
add
hlt
add
or
add
aad
add
xchg
xchg
out
lds
jp
lret
shrl
sbb
add
mov
add
daa
inc
add
add
dec
push
sar
inc
push
fsubrs
mov
popf
fdiv
add
add
sbb
sti
adc
cltd
mov
add
add
rolb
add
out
loop
cltd
push
jns
mov
test
rolb
jnp
mov
add
add
stc
pop
xor
mov
sbb
add
fcomps
add
add
add
in
ja
xchg
adc
loop
in
or
into
push
fmul
xor
nop
add
hlt
add
push
outsl
pop
pop
fwait
mov
sbb
data16
js
add
adc
dec
and
add
add
push
push
das
add
jo
pop
addb
add
xor
mov
xor
mov
xchg
rolb
and
add
add
xor
push
add
and
adc
xchg
in
mov
add
mov
fidivrl
sub
aad
push
aam
pop
adcl
add
dec
sahf
bound
mov
cwtl
loop
daa
mov
lock
loope
dec
aas
inc
add
xor
hlt
add
add
or
add
jp
cmp
inc
dec
loop
pop
sbb
scas
cmc
arpl
adc
jno
add
jne
xchg
mov
pop
sahf
in
xor
imul
push
hlt
add
into
rolb
xchg
sarl
jle
dec
leave
and
mov
adc
adc
bound
mov
aad
add
lahf
push
add
add
call
mov
lea
dec
xor
pop
add
or
cwtl
fsts
and
and
popa
dec
mov
jne
cld
mov
mov
mov
negl
addl
sti
popa
or
push
add
mov
jbe
xchg
inc
lods
xor
sbb
xor
adc
or
addb
add
in
xor
add
sub
add
add
add
hlt
add
inc
arpl
pop
stos
lock
add
sub
lahf
addr16
jg
fcoml
addl
lods
ss
pop
pop
xor
faddp
dec
push
addb
add
lret
adc
fnstsw
add
and
push
add
in
das
mov
sahf
jecxz
out
xchg
add
addr16
xlat
pop
outsb
lahf
mov
gs
add
mov
add
add
and
in
test
adc
or
jns
mov
xchg
in
sbb
and
mov
js
add
add
jo
xor
movlps
test
or
add
in
std
insl
sub
fwait
leave
sti
add
or
push
add
add
scas
sub
js
add
inc
add
icebp
dec
xor
add
cld
sbb
aaa
scas
xor
mov
push
add
dec
sbb
dec
enter
mov
jp
rolb
mov
add
add
jns
int
into
test
lds
add
mov
jb
pop
mov
out
gs
jmp
cli
movsl
push
ror
js
bound
mov
add
cmp
or
add
push
int3
xor
mov
add
dec
inc
add
bound
mov
or
jmp
xor
ja
leave
pop
jae
add
add
pop
ljmp
or
mov
test
add
add
push
inc
add
add
pop
mov
mov
add
xor
mov
add
pop
sbb
lea
aam
mov
adc
add
mov
outsl
pop
dec
pop
add
xchg
inc
aas
in
adcl
mov
mov
sbb
push
in
lods
mov
add
xor
lock
fimull
xlat
mov
lock
mov
inc
test
das
jp
add
loope
addl
mov
mov
pop
ficoms
lds
cmpsl
test
insl
jo
inc
add
add
add
add
pop
push
icebp
xor
js
add
pop
push
add
add
xor
add
jle
add
repnz
std
sub
mov
add
addb
faddl
sub
jecxz
mov
dec
sbb
data16
add
sahf
aam
jbe
icebp
xchg
add
add
roll
mov
add
loope
add
sti
xchg
xchg
add
out
add
add
rolb
notl
rol
add
mov
add
mov
push
add
loopne
push
adc
add
or
add
sub
mov
add
fidivrl
add
sbb
and
test
data16
mov
cmp
add
int3
inc
add
pop
sbb
add
mov
inc
add
inc
jle
add
add
test
lahf
xchg
add
sub
mov
pop
xor
xchg
aam
out
fdivs
xchg
pop
xchg
add
add
add
outsl
adc
adc
and
shrl
dec
movb
sub
sbb
cli
lods
or
filds
add
loope
cmpsb
add
dec
mov
popf
jns
add
insl
ja
jge
cmp
add
adc
pop
mov
add
pop
sbb
cmp
outsb
hlt
add
lret
sti
dec
adc
cmp
sahf
sbb
aas
push
add
push
add
or
add
add
add
ja
pushf
mov
jo
sbb
add
mov
sub
pop
add
push
add
outsb
ret
cmp
add
add
loopne
pop
icebp
mov
add
iret
dec
lret
jl
mov
dec
and
add
sub
test
mov
add
jnp
mov
cwtl
cmp
add
add
testb
add
add
sub
fidivs
fwait
add
ficomps
add
dec
cmc
movb
pop
push
add
fidivs
fcompl
mov
push
push
add
mov
add
pop
fwait
and
mov
or
xchg
cwtl
sti
bound
mov
arpl
add
mov
dec
mov
mov
int3
jb
xchg
mov
jb
inc
mov
ljmp
aam
lods
inc
pusha
add
add
lret
mov
add
addb
xchg
xor
cltd
adc
pop
push
add
mov
jg
les
and
mov
movb
aas
call
add
push
add
xor
add
add
cmp
movzwl
pop
cs
pop
int3
in
addb
fwait
movsb
add
je
addr16
cs
jne
addb
lods
getsec
in
xor
sub
stc
pop
mov
sub
add
lods
sbb
add
adcl
add
bound
mov
push
add
add
push
hlt
add
into
dec
je
adc
push
add
leave
pop
repnz
arpl
xor
xchg
add
mov
mov
repnz
lods
leave
xchg
add
push
call
notl
jns
add
pushf
popf
pop
mov
cs
ds
ret
nop
add
add
and
sbb
mov
cmc
pop
add
mov
mov
call
or
dec
push
mov
es
out
mov
mov
shll
adc
addb
add
sbb
fadds
jb
push
add
pop
xchg
add
call
add
add
enter
dec
ret
add
mov
rolb
rcl
stos
psubsw
or
sub
dec
adc
add
int3
sbb
add
insl
push
jmp
add
movb
add
sbbl
and
lock
mov
pop
lds
add
add
popf
cmp
or
add
cmp
pop
push
add
addr16
add
mov
or
add
add
mov
xor
cmp
int
add
xor
std
mov
dec
or
mov
nop
add
jbe
push
add
add
inc
mov
cmc
jne
jge
jns
add
int
fwait
out
add
mov
and
mov
xchg
mov
or
mov
arpl
cmp
enter
add
xchg
add
add
cmpsl
jmp
mov
cmp
pop
mov
add
mov
add
xor
cmpsl
ds
lock
mov
sub
addb
add
add
jg
sti
out
enter
mov
gs
rolb
pop
pop
ret
lds
add
push
add
push
add
jno
aas
cmp
movsl
testb
add
add
and
cmp
xor
sub
mov
cwtl
fstps
add
addb
sti
jmp
call
add
add
mov
rolb
stc
int3
testb
mov
add
add
add
cmpsl
xor
add
xor
xchg
arpl
dec
xlat
jno
scas
lcall
jae
jecxz
mov
insl
scas
gs
jl
mov
testl
xchg
lds
cmp
or
push
add
testb
ja
dec
mov
mov
cmpsl
xor
ret
movsb
add
add
sub
cmp
nop
add
add
xor
aas
dec
fnstcw
adc
sbb
fmul
fiaddl
add
mov
inc
add
jns
mov
orl
fst
jg
imul
into
faddl
add
icebp
jp
add
jg
std
jp
in
test
add
cmp
cmp
aaa
and
xor
adc
gs
add
mov
add
inc
dec
inc
add
out
pop
xchg
push
adc
add
mov
add
and
adc
lds
push
add
jmp
mov
imul
into
adc
sub
arpl
add
or
add
addb
add
add
add
push
cmpsl
jno
push
add
ret
dec
push
add
mov
inc
jno
add
pusha
add
sbb
push
add
pop
cmp
cmp
imul
add
fstps
push
xchg
add
mov
xchg
cmpsl
imul
inc
add
pusha
add
xor
mov
inc
pusha
add
shl
add
add
push
in
push
add
jge
add
lock
jo
cmp
add
sub
add
add
add
add
jg
add
push
insb
pop
mov
sahf
push
add
bound
mov
add
sub
add
mov
cmpsl
insb
mov
mov
push
pop
ljmp
lahf
add
xchg
andl
scas
mov
jnp
mov
mov
dec
sub
sub
sbb
add
pop
push
mov
dec
lahf
cmp
enter
jl
scas
out
fsubrs
add
clc
add
mov
sbb
out
sbb
inc
add
add
mov
notl
les
mov
jb
jge
add
sub
mov
cmc
call
add
test
pusha
add
out
aas
in
push
xor
add
scas
data16
add
test
lods
mov
sbb
adc
stc
mov
add
std
addb
sub
loopne
ret
repz
dec
icebp
jle
add
push
add
in
cmc
imul
adc
dec
add
mov
add
test
inc
add
add
fsubrp
and
mov
push
shll
out
inc
inc
add
enter
in
xchg
add
add
test
inc
stos
ret
add
mov
and
das
and
mov
jne
rcrl
andl
add
mov
mov
inc
add
and
mov
fnstsw
xchg
adc
add
add
add
add
mov
lods
mov
add
in
pop
fistpl
clc
inc
add
push
mov
add
clc
cmc
pushf
mov
mull
add
fwait
cmp
add
mov
lods
popf
sbb
cmc
lds
add
push
add
popa
cmp
adc
cmpsb
add
lock
add
add
decl
fadds
add
stc
jle
popf
rolb
or
inc
add
cmpsl
push
add
test
mov
add
add
inc
test
mov
dec
or
push
xchg
add
jp
add
clc
sbb
cmp
aad
add
add
sub
jno
add
jge
xor
faddl
add
insb
jno
xchg
add
fcmovnb
cmp
cmpsl
into
adc
std
call
add
repz
add
dec
push
addb
add
insb
ret
cmp
popa
repnz
pop
data16
cmc
std
xor
div
mov
add
mov
lods
ret
mov
push
add
add
add
add
dec
xchg
rcr
cwtl
inc
jp
data16
call
arpl
dec
stc
push
push
fwait
mov
fidivs
pusha
add
sahf
jmp
pop
outsl
mov
cld
fwait
sbb
fs
scas
add
add
cwtl
fxtract
add
push
add
add
xor
mov
cmpsl
sub
in
loop
test
add
add
cmp
mov
mov
pop
stos
shll
add
ficoml
cmpsb
add
sub
add
sbb
add
daa
int3
inc
mov
mov
add
or
mov
cmc
mov
fs
and
sub
outsb
jmp
add
add
mov
add
jb
push
add
mov
xchg
add
out
pop
pop
dec
sbb
add
lret
lock
sahf
cmp
fwait
rolb
rolb
imull
mov
adc
into
jmp
add
add
mov
mov
add
sub
and
jns
push
add
les
pop
jae
add
add
and
inc
jle
movsl
movb
add
mov
mov
cmp
push
add
iret
dec
jp
out
ret
mov
push
pop
ficompl
pusha
add
mov
mov
mov
pop
and
mov
add
xor
cmpsb
add
enter
mov
rolb
jb
add
xchg
mov
push
add
push
add
fldcw
adc
mov
dec
stos
pop
push
inc
add
js
sub
addr16
das
insb
pushf
inc
add
scas
pop
pusha
add
add
or
xor
and
movsl
mov
inc
jo
add
mov
add
aam
pop
int3
jae
add
jecxz
dec
sub
add
add
inc
add
popl
ffree
test
mov
sbb
mov
and
add
add
lret
or
jmp
nop
add
mov
cld
popf
test
pop
icebp
mov
imull
cmp
xchg
cli
jl
inc
int
xor
mov
mov
rcll
add
test
sub
xchg
add
mov
rolb
add
les
cli
scas
sub
add
mov
stc
or
add
int
add
mov
add
dec
je
cld
mov
lea
out
test
add
push
adc
prefetchwt1
add
scas
das
movb
sub
mov
or
add
mov
and
loopne
jo
add
jo
xchg
js
add
stos
jo
xchg
aad
data16
jbe
mov
push
xor
addb
stos
add
fwait
mov
add
and
ss
add
pop
push
addb
pusha
add
or
mov
xchg
ret
test
mov
push
add
sbb
mov
adc
je
aaa
xor
mov
ds
mov
jg
loope
dec
dec
and
add
push
push
add
add
and
sarl
add
mov
add
xchg
fsubs
ret
add
jno
pop
insl
mov
dec
stos
mov
cltd
lods
sub
mov
loope
ja
stc
sub
cli
cmp
pop
cmpsb
add
stos
mov
add
mov
adc
stos
or
mov
add
sub
jb
push
clc
loop
xchg
add
js
jnp
add
cli
adc
pop
xchg
aam
loop
xor
dec
xlat
or
fcmovbe
add
pushf
jns
dec
add
mov
hlt
add
ja
mov
add
mov
stc
subl
add
addb
das
imul
movsl
fcomip
sahf
arpl
test
movsb
add
in
pop
mov
pop
int3
push
xchg
inc
rolb
fnstenv
xor
add
xor
aas
sub
jl
jnp
xor
and
mov
cwtl
push
push
add
mov
xchg
inc
add
popa
cmp
rolb
push
add
inc
xchg
adc
and
mov
pop
or
add
aas
adc
dec
add
xchg
add
mov
ds
and
mov
lds
sbb
fnstsw
test
add
xchg
dec
xchg
pop
sar
pushf
add
movsb
add
or
mov
jle
iret
movsb
add
add
add
mov
add
push
ficoms
pop
add
pop
sub
push
add
std
fistpl
add
int3
int3
fistpll
in
mov
mov
xchg
mov
add
into
rolb
dec
stos
imul
mov
add
aam
les
inc
mov
rolb
cli
out
flds
mov
repnz
add
mov
aam
push
add
aas
xor
pop
dec
loopne
dec
cmp
add
add
or
add
pop
loop
out
xchg
daa
jb
mov
lcall
testb
testb
ret
add
aas
daa
jecxz
jbe
push
mov
pushf
ret
and
mov
add
lds
add
add
clc
and
mov
and
iret
icebp
cmp
mov
movsb
add
add
mov
push
pop
shll
add
dec
ljmp
push
add
inc
add
lods
gs
adc
ret
add
add
mov
fsubl
add
repz
cmpsb
add
sub
jns
add
xchg
add
mov
dec
cmp
pop
mov
sbbl
xor
sub
int3
sub
mov
push
add
push
and
mov
xchg
add
dec
xchg
add
mov
xlat
iret
mov
and
mov
mov
fisubrl
xchg
inc
add
dec
ljmp
dec
das
mov
sub
jnp
xor
cmpsl
add
mov
in
add
loopne
dec
mov
out
cld
dec
cwtl
or
add
int3
loopne
arpl
lcall
mov
add
int3
sbb
add
add
jnp
dec
in
pop
int
faddp
add
pusha
add
ret
test
aas
int3
orl
mov
jge
pop
add
mov
sub
jno
dec
fdivrl
jae
xlat
jmp
adc
jge
dec
pusha
add
or
cld
jae
out
cmp
pop
iret
mov
repnz
and
adc
out
test
into
cmp
adc
data16
js
pushf
mov
rolb
aam
push
mov
out
cmp
inc
loop
push
add
cmp
add
sbb
push
ficomps
cmp
sbb
testb
add
mov
add
mov
sbb
add
add
insb
xor
jnp
add
or
cmpsb
add
out
dec
xor
sub
inc
add
add
or
mov
das
adc
mov
add
cwtl
push
add
mov
jno
sti
push
add
add
mov
mov
add
add
js
out
rolb
dec
fstpt
aad
fwait
or
add
inc
jle
add
push
pusha
add
mov
fiadds
out
sbb
cmpsb
add
lcall
push
sub
push
add
add
outsb
inc
add
test
dec
cwtl
cmpsl
mov
mov
jns
fldenv
popf
sbb
jae
add
add
popl
add
pop
mov
rolb
int3
pop
repnz
and
rolb
std
pop
sahf
movsb
add
cld
jmp
sbb
cmp
add
jge
bswap
imul
add
mov
dec
icebp
or
int
mov
jno
scas
add
pop
addb
and
or
lret
add
mov
add
and
mov
testb
stos
pop
mov
pushf
ds
add
mov
pushl
lods
lahf
pop
test
or
add
ret
xor
mov
hlt
add
pop
xchg
add
jae
xor
repz
add
add
inc
jae
add
rcl
push
xchg
fcoml
lret
test
cmp
rcrl
jns
adc
dec
aaa
int3
lret
cmp
add
inc
add
add
push
add
or
add
mov
icebp
fsubr
and
mov
out
adc
aas
addb
jno
pop
add
sahf
add
jl
or
test
add
add
sbb
push
imul
add
sti
test
icebp
pop
xor
mov
mov
cmp
add
lock
pop
mov
loopne
pop
lds
cmp
add
shll
stos
mov
add
addr16
test
negl
dec
xchg
mov
leave
sbb
arpl
adc
pop
sub
add
daa
mov
add
fcmovu
icebp
sbb
pop
lds
fdivp
xor
add
daa
dec
lods
push
movsb
add
rolb
andl
fldt
dec
mov
push
add
loop
dec
popf
mov
jecxz
push
and
sbb
test
cmp
xchg
add
add
add
push
add
fwait
cwtl
push
adc
add
dec
inc
xchg
lods
jbe
pop
test
add
rolb
add
loopne
inc
sub
fistpll
cld
jge
xchg
add
or
dec
mov
push
in
and
sbb
fsts
add
mov
pop
cmpsb
add
push
push
xchg
xor
add
mov
add
pop
mov
push
add
in
add
cltd
nopl
add
sub
add
mov
add
mov
mov
sub
scas
inc
fdivp
add
add
add
test
addr16
add
test
lret
jne
hlt
add
mov
add
add
jno
add
mov
addr16
lret
dec
popa
fsubs
icebp
aas
test
mov
fldcw
add
add
popa
dec
xchg
xchg
pop
icebp
hlt
add
repz
mov
mov
aad
lds
add
push
fcomps
rolb
inc
or
mov
cmc
jg
add
in
jno
int3
in
push
add
xchg
add
inc
add
adc
add
xor
ret
addr16
jmp
scas
test
fwait
popa
xlat
lds
add
add
pop
ds
dec
into
mov
add
sbb
add
add
nop
add
add
push
add
add
mov
or
mov
loopne
ret
mov
lods
xor
testb
xlat
mov
add
jnp
and
mov
dec
pop
arpl
xor
add
mov
fwait
add
xlat
insb
fsubrl
xor
or
mov
rolb
xor
xchg
add
mov
jns
add
xchg
dec
dec
ljmp
adc
fistps
xor
or
add
dec
adc
aaa
cld
xlat
xor
call
std
add
stos
push
dec
fwait
dec
int3
add
add
and
mov
add
add
loop
lods
inc
pop
push
add
cmp
js
call
add
jg
mov
xchg
sbb
addl
lret
jmp
cltd
xchg
xchg
add
add
out
cwtl
jo
adc
in
int3
jmp
inc
xchg
cmpsb
add
orl
add
xor
jo
loope
and
mov
lret
push
test
lret
pop
test
mov
jmp
outsb
test
imul
add
data16
int3
pop
xchg
nop
add
out
push
mov
xor
inc
add
add
mov
pop
cs
scas
xor
int3
pop
push
push
push
xchg
add
icebp
loopne
jns
push
ljmp
sbb
xor
cld
pop
cmp
mov
add
adc
lock
insl
inc
add
fwait
inc
jecxz
add
repz
fwait
divl
int
add
mov
xchg
mov
scas
sahf
pop
notl
sub
add
repnz
jno
xchg
mov
imul
add
dec
rcll
and
arpl
enter
sbb
xchg
add
addb
and
add
add
movsl
test
js
add
xchg
mov
pop
pop
or
add
insl
mov
iret
sbb
add
add
cmp
mov
jbe
mov
mov
xchg
add
pop
inc
stos
cli
outsb
lret
and
mov
in
mov
leave
sub
ljmp
pushf
ret
add
pop
cmc
ret
add
add
mov
add
push
adc
iret
xor
pop
roll
adc
xchg
aaa
mov
dec
sbb
ljmp
movsl
test
cwtl
paddd
add
popf
rolb
test
leave
xor
sbb
movsb
add
mov
adc
sbb
mov
xchg
add
aas
mov
add
and
mov
fsubrs
in
or
in
xor
add
stc
xchg
add
add
jmp
add
add
add
dec
add
stos
jmp
mov
add
mov
jns
add
add
fildl
mov
add
cmp
dec
jbe
test
pushf
inc
add
sub
add
add
add
inc
add
enter
popf
jns
outsb
sub
lret
jns
add
lock
push
add
gs
mov
add
jmp
pop
daa
aaa
dec
ficomps
jne
dec
fstpl
cmpsl
mov
mov
add
add
fisubs
aam
imul
add
jnp
pop
mov
add
add
fsubp
add
add
mov
push
add
add
add
add
cmp
icebp
mov
scas
ret
cmp
inc
test
cmp
mov
push
mov
fsubrl
mov
mov
xchg
add
inc
add
add
stc
push
add
dec
leave
xlat
add
jno
mov
pop
in
inc
add
inc
add
xchg
add
mov
jb
int3
cmp
out
arpl
por
add
add
xlat
sbb
adc
push
pop
jecxz
push
add
mov
or
add
add
bound
mov
jmp
add
bound
mov
adc
ljmp
lods
sbbl
fdivp
add
add
add
add
fsubs
add
dec
stos
cmp
mov
or
add
mov
movsl
mov
or
scas
dec
or
add
add
pop
sub
sub
pushf
xor
jmp
rcll
shl
and
or
loop
adc
jle
and
push
aaa
sub
add
sbb
lods
js
mov
jle
mov
cmp
add
pop
dec
cmc
mov
je
mov
pop
push
add
add
jecxz
shrl
push
xchg
repz
dec
enter
push
int3
sub
mov
mov
in
cwtl
xchg
add
iret
nop
add
inc
aas
xchg
dec
pop
mov
add
popa
inc
subl
pushf
out
test
rolb
pop
add
sbb
add
loop
int3
cld
sub
add
ja
add
add
add
add
lret
add
add
xchg
pop
das
sub
in
add
mov
inc
test
or
push
dec
loope
add
add
push
popf
aaa
das
mov
jns
jae
pushf
jb
imul
add
movsl
testb
popa
xchg
dec
sahf
stos
jmp
scas
mov
mov
into
test
movsl
jbe
dec
aam
cli
in
cmpsl
sbb
jmp
add
dec
test
xchg
add
jl
inc
cmp
jle
imull
pop
mov
dec
mov
jne
add
xchg
add
jo
inc
add
add
add
add
mov
lret
scas
es
jle
movsb
add
lahf
stc
ja
add
xlat
jns
pop
mov
jecxz
pop
popa
add
mov
mov
mov
mov
aaa
mov
jnp
and
and
mov
lds
aas
lea
add
in
or
add
mov
add
add
dec
test
pop
fs
add
data16
dec
pusha
add
add
add
aaa
pop
pop
cmp
mov
add
pop
orl
sbb
add
xor
jno
and
mov
add
mov
add
add
cmp
push
sub
or
sbb
enter
rorl
scas
mov
add
mov
add
add
add
mov
add
adc
das
pop
daa
js
add
add
add
das
inc
sbb
sbb
jns
add
add
add
inc
popf
cmp
add
rorl
stos
push
jno
in
or
add
pop
add
mov
add
sbb
or
out
es
add
pop
in
mov
lret
loop
cwtl
cmp
mov
addb
push
add
jg
lods
add
mov
inc
test
pop
xchg
rolb
dec
sub
jnp
int3
iret
or
sbb
add
add
add
mov
inc
add
add
testb
add
add
cmpl
adc
xchg
sub
dec
rolb
push
jae
call
mov
cltd
pop
cmpsb
add
pop
data16
and
stos
lock
in
rol
add
mov
jns
jge
inc
add
add
mov
sbb
mov
les
adc
add
ret
pop
xchg
jo
scas
pushf
pop
testb
xchg
clc
out
pop
jecxz
add
mov
mov
add
push
addr16
lea
in
mov
or
push
add
les
xor
xchg
add
cmc
lds
pop
mov
add
out
push
add
lret
xchg
add
add
add
addb
mov
add
ja
into
jge
xchg
cmpsl
sbb
int3
test
jo
ja
ljmp
aas
cmc
nopl
sbb
jne
add
inc
jecxz
xchg
jl
jne
add
mov
or
gs
add
cli
clc
lcall
xchg
add
fcmovbe
add
fbld
add
add
test
pop
dec
loope
mov
stos
cmpsb
add
dec
adc
mov
add
ret
popa
cs
addb
lock
jbe
mov
jecxz
call
add
add
lds
add
add
popa
inc
add
xchg
add
sub
mov
add
add
xor
jmp
pmaxsw
add
add
scas
aad
into
test
movsb
add
mov
add
add
xor
enter
cmp
ljmp
addr16
pop
add
push
add
in
lock
jbe
push
add
add
and
sbb
xor
daa
xor
insl
int
lods
repnz
add
pop
imul
mov
sbb
mov
mov
add
pop
stos
cs
pop
fwait
pop
pop
loopne
std
xor
jge
mov
add
scas
mov
adc
addb
mov
add
xchg
pushf
jo
test
imul
mov
rolb
out
fimull
adc
rolb
je
lahf
and
ret
xchg
add
les
les
push
add
add
pop
pop
ja
push
add
push
add
add
add
add
mov
mov
rcr
cmp
add
ljmp
call
iret
jbe
gs
add
pop
in
adc
fdivs
add
mov
ret
and
mov
sbb
pusha
add
mov
pop
jecxz
jg
ljmp
repnz
sub
testb
mov
loopne
jge
add
jge
add
jp
adc
rolb
and
mov
hlt
add
add
mov
rolb
add
adc
inc
xchg
add
add
mov
imul
lock
jne
insl
out
push
add
push
lcall
addb
stc
cmpsl
testb
mov
inc
push
imul
add
sub
mov
add
mov
add
outsb
jg
std
xlat
movsb
add
pop
mov
movsl
outsl
xchg
add
mov
or
ja
pop
ds
push
add
out
movsb
add
push
add
aas
stos
and
inc
fs
mov
addr16
jae
add
cmpsb
add
pop
push
pop
les
std
mov
mov
jne,pt
ljmp
data16
in
fsubp
add
push
add
jl
add
frstor
add
cmp
mov
add
add
mov
sbb
add
add
xor
sbb
lcall
cmp
or
mov
jb
add
mov
in
push
add
mov
pop
xchg
movsl
mov
add
gs
cwtl
fidivrs
add
iret
push
adc
and
pop
lahf
loope
arpl
mov
add
cmc
mov
add
mov
fstp
testl
jmp
push
sub
add
jbe
mov
out
lods
xchg
call
add
add
scas
xchg
cmpsb
add
add
mov
add
stc
ljmp
cli
sub
push
les
mov
data16
or
cmc
dec
jae
sub
push
cmc
inc
cmp
ret
add
mov
push
add
aas
mov
cmp
jmp
or
push
add
add
stc
cmp
add
loop
cmp
test
mov
sbb
mov
nop
add
dec
sub
push
add
mov
pop
sbb
outsb
add
inc
out
cwtl
xor
add
add
adc
lcall
add
add
add
ret
sbb
push
inc
js
add
ret
mov
pusha
add
xchg
mov
adc
dec
cmp
fwait
xor
pop
lret
mov
daa
mull
pop
mov
inc
lea
decl
pop
mov
fistpl
inc
mov
sub
insl
jmp
xchg
add
add
inc
add
aas
stc
mov
lea
jl
add
outsb
jno
sub
mov
add
add
xchg
add
add
push
add
add
add
add
cwtl
jp
add
inc
add
mov
push
add
add
add
pop
pop
rolb
push
inc
test
mov
fstl
add
outsb
jb
sub
outsb
adc
shl
add
rolb
adc
ret
out
sbb
add
sub
xchg
add
and
mov
fwait
cs
add
pop
mov
add
sti
pusha
add
pop
movsb
add
mov
add
rolb
mov
mov
inc
cltd
mov
dec
add
les
cmp
adc
hlt
add
pop
adc
in
lret
inc
dec
mov
lods
sbb
scas
bound
mov
and
mov
or
xchg
rolb
add
add
and
mov
add
add
mov
loop
mov
in
mov
stc
addb
add
daa
out
jge
int
jge
sti
dec
mov
xchg
push
lahf
pop
xor
inc
add
add
xchg
imul
fsubrl
mov
cmp
das
mov
dec
insb
inc
adc
jb
xadd
imul
cmpl
sahf
jb
pop
xchg
mov
add
add
sahf
mov
add
dec
shll
adc
movsl
fimull
mov
add
addb
add
add
add
add
aas
sub
sbb
pop
aaa
mov
add
addb
fmull
int3
add
mov
sub
lcall
in
insl
pop
cltd
jae
add
addr16
adc
shll
jbe
xchg
add
cs
jb
mov
testb
sbb
xchg
add
add
out
stos
cwtl
jns
add
insl
xchg
jo
aam
sub
add
inc
mov
lret
iret
pop
pop
jne
movsl
mov
mov
sbb
add
inc
add
ljmp
xchg
loop
xchg
add
add
mov
add
idivl
cld
push
sbb
test
cltd
nop
add
loop
xchg
bound
mov
add
rolb
jp
and
add
in
mov
testb
in
add
add
adc
testb
inc
add
add
fldt
add
lret
shl
inc
add
cmp
add
inc
add
pop
mov
sbb
xchg
pop
pop
cld
mov
add
cltd
and
mov
cmpsl
arpl
push
mov
cmp
leave
xor
mov
mov
add
xchg
iret
dec
mov
pop
addb
mov
popf
pusha
add
mov
inc
pop
jg
xchg
cmp
jg
imull
add
add
mov
les
pop
or
sbb
add
add
mov
fisttpl
push
add
rolb
xchg
add
mov
test
pop
push
pop
ffree
rolb
stos
sahf
repnz
jae
outsb
push
add
mov
add
and
mov
add
ljmp
mov
mov
and
add
es
in
movb
ret
xorl
or
mov
ja
inc
das
jp
add
pop
pop
pusha
add
add
imul
add
mov
or
sbb
push
pusha
add
jno
add
pop
imul
in
popa
addb
add
pop
mov
pop
decl
ja
add
cmp
sahf
xchg
mov
add
add
push
dec
adc
add
add
xor
push
add
add
mov
inc
fnstcw
or
ds
mov
mov
add
push
bound
mov
out
xchg
add
dec
insb
pop
inc
mov
loopne
pop
xchg
and
xor
add
cmp
push
call
mov
pop
clc
sub
add
add
pop
lock
add
mov
add
add
mov
test
adcl
add
add
and
ret
in
insb
xor
push
push
add
fldt
adc
jle
leave
xor
push
add
pop
inc
add
nop
add
loopne
ficoms
mov
jae
das
add
cmp
jo
cmp
sti
cs
nop
add
add
and
mov
dec
testb
dec
ljmp
call
adc
xchg
add
mov
popa
push
add
insl
je
fistps
lods
dec
into
jnp
xchg
add
call
add
push
add
push
add
adc
aaa
addb
add
test
xchg
rolb
stos
testb
add
pop
in
jae
out
dec
movsl
aad
test
aam
jmp
add
fdecstp
add
jne,pn
sahf
jge
sub
mov
pushf
cmpsl
xchg
add
lods
sub
dec
test
test
ljmp
inc
add
jns
testb
add
push
mov
jb
repnz
fs
test
push
dec
inc
add
dec
xor
or
mov
add
and
mov
arpl
jns
scas
add
inc
add
test
scas
mov
or
rolb
add
add
icebp
repnz
cmp
cmpsl
and
add
lahf
cmp
shll
add
add
add
and
add
push
ret
ljmp
dec
cmpsl
cwtl
out
add
lods
ficompl
fistps
imul
aad
add
cmp
add
inc
movsl
jns
lods
mov
push
add
mov
add
jmp
add
add
push
push
add
mov
add
les
das
aas
iret
imul
sub
stc
rorl
lods
aad
out
cld
and
mov
add
add
xor
add
mov
add
call
adc
pop
cmc
sub
mov
xor
push
jmp
jecxz
jae
repnz
add
add
das
mov
enter
aam
daa
dec
mov
mov
add
lods
xchg
add
cmp
les
sbb
leave
jbe
add
lock
aad
imul
adc
inc
add
aad
jp
rolb
scas
mov
inc
add
stos
stos
icebp
rcll
outsb
add
in
mov
int3
jp
add
mov
add
add
es
dec
or
fwait
lret
or
movb
mov
lahf
pop
xchg
mov
lret
add
add
add
insl
pop
cmpsb
add
cmc
xor
add
add
repz
cmc
add
mov
add
dec
adc
xchg
mov
sub
xor
add
mov
negl
bound
mov
dec
mov
xchg
inc
add
mov
aad
xchg
add
movb
inc
add
or
mov
fxch
mov
xchg
add
fwait
es
adc
dec
mov
data16
push
add
add
add
data16
iret
add
add
adc
add
jmp
add
mov
insb
mov
push
iret
inc
add
add
dec
mov
add
add
add
fnsave
aas
jmp
stos
fisubl
dec
sbb
rolb
or
lret
insb
je
insb
movsb
add
pop
movlps
in
xchg
or
add
jmp
movb
add
imull
mov
and
jo
cs
sub
movsb
add
pop
adc
ret
pop
sbb
scas
adc
mov
fldcw
ds
add
sarl
inc
filds
add
inc
lock
pop
std
repz
insb
repnz
cltd
ljmp
mov
loope
cmpsb
add
lea
add
add
pop
add
add
add
sbb
xor
xchg
fs
scas
in
xchg
add
cmp
add
add
add
add
add
arpl
add
adc
lock
rolb
mov
pushf
leave
in
rolb
cli
call
add
add
add
add
std
outsl
cli
push
add
stc
add
mov
mov
nop
add
loope
xor
mov
out
cmpsl
cmp
mov
push
jp
pop
mov
add
dec
xchg
daa
jns
inc
add
adc
adc
pop
out
sub
cmp
addr16
xchg
mov
push
sub
xor
inc
add
imul
sub
jbe
leave
pop
add
xor
sahf
dec
inc
add
and
in
push
orl
mov
mov
xor
dec
into
mov
add
add
mov
xor
dec
adc
cmp
push
add
inc
add
add
and
mov
ficomps
mov
xor
mov
xor
jne
xchg
test
sub
into
aam
jecxz
add
add
xlat
pop
mov
sbb
ds
cmpl
fs
add
bound
mov
jp
push
add
adcl
fidivl
mov
sarl
gs
lods
je
cld
cs
pop
push
and
call
add
daa
lock
xchg
cltd
mov
ret
xlat
sub
lret
add
add
mov
ss
add
add
add
push
test
cltd
roll
add
or
add
rcrl
mov
xchg
mov
sub
cmp
xchg
clc
movsb
add
xchg
pushf
sub
dec
add
outsb
adc
rcrl
add
add
mov
jp
lahf
xchg
mov
dec
fbstp
add
mov
loop
mov
inc
add
add
inc
jnp
jp
sub
adc
mov
aam
push
push
add
add
sub
pusha
add
loopne
stc
jecxz
add
lret
iret
enter
jle
cmp
fwait
outsb
or
mov
sbb
fcmovnu
inc
add
aaa
dec
push
daa
push
add
xor
add
inc
add
iret
add
push
add
cltd
and
mov
add
add
cltd
in
imul
mov
add
aaa
scas
mov
inc
add
add
cmp
sub
sbb
pop
loop,pn
in
sti
in
dec
sub
push
add
add
out
mov
jae
add
loop
cmp
push
add
lds
add
add
cld
test
fdivrp
sbb
je
repnz
sbb
outsl
inc
add
add
adcl
add
add
rolb
xchg
sbb
movsl
cltd
aaa
pop
test
pop
sbb
add
add
xchg
add
fstpt
fstp
hlt
add
mov
rolb
cmp
hlt
add
ficompl
add
mov
arpl
sub
pop
and
add
loopne
test
das
movsb
add
sub
push
jp
std
stc
dec
add
mov
jg
dec
test
gs
mov
mov
pop
cli
lret
das
imul
fcompl
add
mov
rolb
ljmp
enter
test
cli
call
cltd
cmp
in
arpl
in
cmp
stos
mov
add
cld
aam
adc
ret
outsl
dec
mov
notl
das
hlt
add
add
data16
and
xor
adc
add
pop
mov
add
add
push
adc
mov
jne
in
pop
adc
and
shll
jae
xor
cld
scas
inc
add
lods
lret
shrl
xchg
out
sub
cmp
rolb
addl
addb
fdivl
lcall
sub
in
shll
and
mov
add
push
rolb
add
fmuls
add
add
add
aaa
xchg
rcr
fwait
imul
incl
add
jnp
js
add
add
inc
add
popa
outsb
bound
mov
imul
mov
add
stos
dec
rolb
fdivl
dec
push
add
dec
gs
dec
js
subl
push
add
adc
push
mov
add
roll
mov
add
leave
shll
fld
pop
nop
add
roll
shll
add
cmp
add
imul
add
xor
add
xor
lret
cmc
xor
or
push
sbb
mov
js
xor
add
loope
mov
add
rolb
sbb
push
outsb
jecxz
add
add
xchg
mov
push
cmp
xchg
add
add
add
les
sar
jo
sbb
pop
inc
add
add
shll
fiaddl
xchg
xchg
jbe
xor
loop
loope
lea
add
fidivrl
lds
mov
cwtl
sbb
add
mov
and
mov
add
mov
pusha
add
add
lahf
pop
xor
movsb
add
ja
jecxz
push
add
adc
add
add
leave
push
icebp
repnz
add
ja
ret
les
jb
in
pop
or
loope
iret
push
add
mov
dec
testb
add
add
scas
out
add
xchg
add
mov
add
rolb
mov
hlt
add
pusha
add
fstps
push
add
cmp
push
add
mov
stc
insb
movsb
add
lods
or
add
iret
mov
add
outsb
dec
mov
mov
add
add
add
scas
aas
add
push
jp
xor
rolb
test
cltd
xchg
sbb
push
inc
insb
je
je
sub
dec
hlt
add
insb
mov
stc
cld
out
out
or
add
inc
jle
add
dec
mov
add
push
add
and
mov
add
add
mov
inc
jne
fdivrs
outsl
jno
xor
in
pop
sub
inc
add
sbb
outsb
rolb
arpl
mov
mov
add
bound
mov
std
dec
cwtl
mov
push
insb
fwait
mov
or
push
add
add
add
cs
arpl
add
inc
add
xor
mov
in
sbbl
push
add
mov
mov
and
mov
add
add
cltd
mov
jb
mov
cmpsl
mov
das
mov
rolb
push
aas
rolb
jge
in
insb
and
add
dec
addb
add
xchg
aas
call
pushl
xor
stos
pop
ds
add
add
cmc
cmp
push
add
add
dec
popa
lods
mov
adc
sti
jle
add
add
pop
add
call
bswap
addr16
add
sub
shll
fcomp
stc
or
add
xchg
out
xchg
test
add
mov
addb
adc
lods
jno
add
pop
mov
xchg
mov
call
rolb
jnp
add
push
add
add
add
mov
in
mov
arpl
sti
sbb
jle
jne
pop
adc
sub
add
or
or
add
add
add
add
rolb
test
shl
add
inc
and
pop
add
testb
ret
add
mov
add
dec
push
clc
ljmp
push
add
pop
inc
cmp
inc
add
iret
fldcw
add
or
sub
insl
cmp
scas
xrelease
add
je
in
out
rolb
jp
outsl
xchg
ret
add
mov
adc
dec
mov
add
rolb
mov
aam
mov
fwait
inc
pop
push
jl
movb
add
in
imul
repz
sbb
xchg
add
add
shll
arpl
add
add
cmp
push
sub
add
dec
shll
add
add
cmp
enter
das
inc
movb
aad
cltd
leave
out
push
add
inc
push
shrl
and
in
loopne
dec
pop
movb
dec
dec
xchg
and
or
mov
jae
add
ret
add
add
or
mov
in
sub
ljmp
jmp
add
mov
adc
add
add
or
mov
mov
ljmp
add
loope
lods
pop
xchg
dec
sahf
push
add
push
outsl
add
mov
add
mov
cwtl
adc
xor
pop
stos
hlt
add
xchg
mov
add
aas
pusha
add
xor
adc
add
mov
mov
mov
mov
add
pop
pop
add
lret
call
add
stos
adc
add
adc
or
mov
push
cltd
add
mov
jns
sub
imul
mov
divl
push
movsb
add
cs
adc
add
jle
push
add
in
inc
add
pop
sahf
sbb
dec
inc
add
repnz
aas
pop
jl
insl
lods
push
imull
imul
pop
movsl
xlat
mov
add
loopne
ja
xchg
lahf
sarl
or
xchg
push
add
add
cli
mov
jmp
add
jecxz
add
fwait
mov
pusha
add
xor
xchg
inc
add
jmp
add
test
jno
imul
add
mov
push
cmp
sti
loopne
hlt
add
xchg
test
add
add
sbb
add
mov
out
das
pusha
add
add
or
and
out
fists
aaa
dec
push
in
pop
mov
and
int
add
add
add
leave
push
add
inc
add
inc
in
test
add
ficomps
ljmp
add
imul
nop
add
xchg
pop
add
sbb
add
jmp
add
inc
add
add
into
mov
sti
xchg
inc
imul
mov
pop
dec
cmp
add
add
cmp
jno
and
mov
add
iret
inc
stos
test
or
mov
pop
sub
inc
out
xchg
mov
add
mov
add
mov
aas
lahf
ret
imul
insl
testb
xor
cmp
fmull
out
dec
mov
add
loopne
and
cmp
dec
imul
add
int
add
mov
cmp
loopne
add
mov
add
or
adcl
rcl
add
dec
sbb
fldt
add
fstpl
sub
fwait
jecxz
rorl
mov
add
lock
shll
add
cmpsl
loop
adc
cltd
fisttps
flds
mov
popf
inc
add
sub
addb
sub
enter
mov
jmp
pop
out
push
add
mov
aas
xchg
mov
outsb
jbe
movsb
add
push
add
xchg
jnp
mov
fildl
add
jnp
out
jg
mov
push
add
add
xchg
into
lret
and
shll
fisubrl
cmp
mov
add
add
imul
add
out
int
adc
jecxz
dec
dec
and
push
add
add
add
adc
add
bts
mov
add
mov
sbb
jne
push
add
add
pop
or
sti
ljmp
enter
add
movsl
jnp
add
enter
mov
stos
movl
fmull
add
fdivl
mov
add
pop
pop
jmp
add
int3
push
fistl
data16
add
add
xchg
add
and
ret
sahf
pop
push
push
add
push
add
jge
add
add
add
cli
loopne
mov
add
mov
pushf
jbe
push
add
add
mov
inc
mov
push
andl
call
mov
add
pop
jecxz
cld
add
iret
scas
les
repnz
pop
sbb
mov
jae
dec
and
jo
test
int
stos
xchg
add
mov
inc
in
ud2
sub
push
in
out
add
cmc
ss
repnz
mov
cmp
pop
push
add
mov
leave
adc
stc
or
negl
nop
add
and
mov
js
adc
push
add
add
sbb
add
test
xchg
add
and
mov
push
adc
int3
out
mov
mov
rcrl
pop
movb
mov
add
cli
pop
push
add
push
add
jg
aaa
jb
popa
dec
xchg
pop
adc
xchg
add
add
add
mov
int3
sbb
movb
popf
sub
xchg
add
cmpsb
add
push
in
cs
mov
or
mov
iret
addb
add
add
mov
push
mov
clc
jmp
xchg
add
add
mov
add
add
in
leave
pop
insl
icebp
xorl
sbb
insb
sbb
add
xchg
sub
add
inc
jns
add
mov
adc
xchg
add
xchg
jno
mov
add
mov
mov
hlt
add
mov
cld
call
cs
xlat
loope
out
pop
shrl
outsb
inc
add
jnp
add
jbe
mov
cmp
fistpll
push
add
jg
adc
cli
es
add
pop
push
jmp
lret
ficoms
add
insb
sub
data16
lahf
mov
xchg
add
inc
add
push
xchg
sbb
ljmp
jb
inc
jnp
add
mov
mov
xchg
add
sub
scas
fistpll
add
mov
test
or
xchg
addb
xchg
sahf
arpl
mov
int
cli
int
mov
iret
arpl
ja
imul
pop
or
add
mov
add
orl
add
std
push
inc
xor
insb
jmp
or
add
leave
ret
outsb
xchg
add
or
push
movb
adcl
rolb
in
xchg
add
ja
xor
pop
testb
xlat
sti
cmp
add
or
add
add
mov
add
jp
xchg
popa
dec
cwtl
sub
xchg
jecxz
push
addb
add
adc
or
imul
adc
popa
scas
dec
xchg
lea
xchg
add
add
fldt
imul
dec
pop
aas
push
fadd
in
daa
mov
xchg
hlt
add
cmpsb
add
leave
ja
repnz
out
or
dec
mov
data16
add
imul
sbb
in
adc
push
jl
inc
add
mov
add
inc
inc
add
cmpsl
outsb
jle
inc
clc
repnz
mov
outsl
data16
add
inc
cmp
pop
imul
dec
pop
cmp
add
les
inc
add
cmp
movb
movsl
scas
scas
mov
aas
fistpl
jp
add
cmp
add
adc
mov
cmp
add
lahf
push
pop
in
mov
lcall
mov
test
add
mov
mov
push
add
xchg
cmp
add
movsb
add
xchg
movb
push
ret
fnstcw
jle
pop
inc
pop
cmp
sub
mov
add
push
xlat
movntps
xchg
adc
xchg
add
push
jo
rolb
xchg
add
fists
add
sub
lret
dec
mov
push
lods
in
or
add
test
add
pushf
mov
imul
push
call
inc
add
push
add
lods
data16
loopne
test
fmul
incb
mov
ds
add
xchg
mov
add
mov
cmp
iret
lea
add
je
mov
jp
jle
out
push
add
cmp
add
add
add
mov
jmp
add
rcrl
rolb
xor
cltd
adc
sbb
call
mov
xchg
jl
push
add
add
add
popa
xor
mov
cltd
cmp
cmp
jns
add
cmp
add
add
stc
hlt
add
add
add
add
sahf
mov
clc
repnz
jae
dec
push
or
push
clc
repnz
jae
add
push
add
in
mov
push
clc
repnz
jae
add
add
add
xchg
les
lods
add
clc
repnz
jae
push
adc
add
mov
popf
mov
fwait
cld
nop
jmp
add
inc
pop
rcrl
jo
ds
clc
repnz
jae
add
add
add
dec
cmp
repnz
jae
push
aaa
cmp
test
fwait
cld
nop
jmp
add
popl
mov
clc
repnz
jae
add
add
add
popf
cmp
jae
jmp
add
add
push
fwait
cld
nop
jmp
add
or
add
mov
ds
clc
repnz
jae
xchg
add
mov
push
add
fisttpl
test
push
add
clc
repnz
jae
add
push
hlt
add
call
fwait
cld
nop
jmp
and
mov
mov
pop
pop
clc
repnz
jae
mov
mov
add
add
add
xor
clc
repnz
jae
sub
add
enter
nop
jae
add
add
lcall
cmpl
add
add
test
push
mov
xchg
ret
mov
add
sub
ljmp
ret
add
in
movsl
and
add
clc
repnz
jae
or
dec
popl
add
xor
lods
mov
fwait
cld
nop
jmp
mov
and
adcl
mov
clc
repnz
jae
add
pop
add
mov
clc
repnz
jae
add
mov
add
mov
cld
nop
jmp
mov
in
push
or
stos
mov
clc
repnz
jae
add
mov
pop
add
add
repnz
jae
inc
mov
test
push
mov
xchg
ret
add
inc
add
cmpsb
pushf
push
fwait
cld
nop
jmp
add
or
xchg
add
add
test
repnz
jae
aaa
sub
movsl
loop
jmp
popa
add
mov
xchg
ret
and
aaa
mov
dec
add
clc
repnz
jae
add
add
add
clc
repnz
jae
mov
pop
add
mov
nop
jae
add
add
inc
pop
sub
mov
fwait
cld
nop
jmp
mov
add
cmp
test
adc
add
repnz
jae
add
add
mov
jg
inc
add
add
add
mov
add
fwait
cld
nop
jmp
or
mov
push
flds
xchg
ret
add
add
add
jae
add
add
add
imul
push
add
sub
add
mov
nop
jae
add
jbe
add
and
sub
mov
xchg
ret
movl
add
add
adc
repnz
jae
add
fiadds
mov
add
sub
clc
repnz
jae
dec
add
sub
push
clc
repnz
jae
push
add
add
imul
sub
repnz
jae
mov
add
imul
jae
mov
add
inc
jecxz
jb
fwait
cld
nop
jmp
aaa
cmp
add
pusha
add
pop
add
fwait
cld
nop
jmp
aas
pusha
add
add
mov
clc
repnz
jae
add
add
jmp
mov
repnz
jae
mov
add
clc
repnz
jae
pop
add
cmp
cmpsb
add
add
sub
clc
repnz
jae
add
cmp
cltd
fadds
cld
nop
jmp
push
add
add
jmp
repnz
jae
ffreep
mov
pcmpgtd
jg
clc
repnz
jae
les
add
clc
repnz
jae
add
mov
add
repnz
jae
cltd
and
push
mov
rcrb
and
add
cltd
cmp
inc
cmpsb
add
or
nop
jmp
roll
sub
add
xchg
mov
clc
repnz
jae
add
add
add
mov
clc
repnz
jae
add
rol
mov
add
inc
jbe
cltd
push
fisubs
add
add
nop
jmp
aaa
add
add
pusha
add
inc
jno
jmp
sar
mov
popf
mov
add
add
pusha
add
nop
jae
push
push
add
inc
add
insl
push
push
mov
xchg
ret
in
pop
ljmp
shll
push
mov
xchg
ret
pusha
shrl
popf
add
subl
aaa
mov
add
jmp
push
push
mov
xchg
ret
add
pop
add
aaa
leave
jne
clc
repnz
jae
sub
inc
xor
test
or
nop
jae
adc
fiadds
cmp
pop
add
clc
repnz
jae
jp
add
pop
imul
repnz
jae
rcll
add
jae
add
les
fbstp
fisubs
mov
push
mov
xchg
ret
dec
add
mov
add
add
lock
add
adc
repnz
jae
add
mov
clc
repnz
jae
cmp
or
mov
sbb
les
add
clc
repnz
jae
jmp
add
dec
push
fwait
cld
nop
jmp
add
add
add
mov
push
mov
xchg
ret
and
jp
cmp
stos
ret
clc
repnz
jae
in
addl
mov
push
clc
repnz
jae
popl
movl
ret
add
leave
fwait
cld
nop
jmp
add
dec
add
add
add
mov
clc
repnz
jae
cmp
cmpsb
add
inc
add
add
clc
repnz
jae
xchg
add
and
add
repnz
jae
aaa
in
add
mov
clc
repnz
jae
add
add
test
in
pop
clc
repnz
jae
add
inc
inc
in
add
mov
repnz
jae
add
mov
and
imul
in
add
add
clc
repnz
jae
aas
add
addb
add
mov
clc
repnz
jae
add
pop
sub
add
dec
sub
clc
repnz
jae
add
in
inc
fistpl
mov
xchg
ret
add
add
aas
mov
clc
repnz
jae
and
add
xchg
jmp
not
push
mov
xchg
ret
add
imul
push
clc
repnz
jae
roll
mov
push
and
mov
nop
jmp
cmp
add
mov
clc
repnz
jae
or
and
repnz
jae
pop
pop
pop
add
or
clc
repnz
jae
add
inc
add
clc
repnz
jae
fbstp
add
add
jb
mov
cmp
std
lcall
or
repnz
jae
add
jmp
test
lcall
adc
add
cmp
popa
add
mov
xchg
ret
mov
add
aaa
inc
daa
xor
insb
xchg
clc
repnz
jae
add
mov
add
add
jecxz
add
add
and
push
or
nop
jae
stc
add
test
nop
jmp
pusha
add
add
xchg
or
add
in
push
add
add
in
add
and
mov
xchg
ret
add
inc
mov
popa
clc
repnz
jae
push
add
cmp
in
cltd
dec
add
push
mov
xchg
ret
and
in
and
add
fwait
cld
nop
jmp
add
adc
adc
mov
fs
push
clc
repnz
jae
add
add
inc
add
or
add
cmp
movl
add
push
clc
repnz
jae
add
add
cltd
dec
clc
repnz
jae
rorl
andl
test
mov
push
mov
xchg
ret
shrl
pusha
sub
nop
jmp
cmp
add
sub
add
mov
ds
clc
repnz
jae
add
push
clc
repnz
jae
adc
ljmp
add
data16
repnz
jae
add
add
jns
repnz
jae
push
add
mov
popf
inc
loopne
rolb
jb
sbb
popa
roll
xchg
ret
popf
mov
add
cltd
pushl
clc
repnz
jae
mov
iret
dec
push
clc
repnz
jae
or
and
iret
add
nop
jae
add
add
iret
add
pop
xchg
add
outsb
xchg
fwait
cld
nop
jmp
add
add
add
mov
push
mov
xchg
ret
add
add
adc
notl
nop
jae
push
add
or
sub
jae
add
inc
push
add
pop
mov
clc
repnz
jae
jmp
pop
or
add
cld
incl
mov
clc
repnz
jae
add
add
add
nop
jmp
mov
cmp
push
or
test
add
repnz
jae
add
add
xor
clc
repnz
jae
add
push
sbb
add
or
add
add
mov
clc
repnz
jae
or
mov
adc
xor
cmp
ret
ljmp
inc
testb
mov
clc
repnz
jae
fiadds
xchg
and
mov
clc
repnz
jae
adc
add
and
repnz
jae
add
push
add
in
das
add
clc
repnz
jae
mov
push
and
mov
imul
clc
repnz
jae
push
pop
pop
sub
add
add
add
repnz
jae
mov
test
fwait
cld
nop
jmp
movsl
popf
add
jne
clc
repnz
jae
add
aas
lock
dec
fwait
cld
nop
jmp
popf
add
pop
iret
mov
add
add
mov
clc
repnz
jae
in
and
clc
repnz
jae
imul
call
clc
repnz
jae
mov
mov
shl
clc
repnz
jae
add
add
add
jp
popa
add
mov
xchg
ret
pop
push
les
mov
add
repnz
jae
or
add
mov
cmp
push
mov
xchg
ret
add
cmp
add
repnz
jae
add
add
add
add
jmp
push
inc
add
mov
add
sbb
je
inc
add
cmp
add
mov
add
clc
repnz
jae
add
pop
incl
nop
jae
imul
push
mov
fwait
cld
nop
jmp
in
add
and
jmp
add
clc
repnz
jae
add
mov
fwait
cld
nop
jmp
add
add
add
mov
jecxz
add
add
fcoms
mov
xchg
ret
add
mov
jp
add
fildl
dec
cmp
repnz
jae
add
add
add
outsb
push
mov
push
add
add
add
aaa
sahf
scas
push
mov
or
clc
repnz
jae
add
aaa
shll
add
add
add
xchg
add
add
mov
inc
add
xorl
cld
nop
jmp
add
popl
mov
clc
repnz
jae
add
add
in
add
add
sbb
repnz
jae
add
je
clc
repnz
jae
xchg
push
inc
mov
ret
clc
repnz
jae
mov
add
movsl
add
add
add
mov
adc
rdpmc
sar
nop
jae
mov
pop
in
fimuls
sub
repnz
jae
add
add
pop
sbb
add
repnz
jae
pop
add
cli
je
clc
repnz
jae
iret
push
push
mov
clc
repnz
jae
add
add
stos
add
clc
repnz
jae
imul
cmpsb
dec
and
fwait
cld
nop
jmp
rcrl
cmp
mov
jbe
ljmp
add
xchg
add
ljmp
cld
nop
jmp
addl
inc
cmp
repnz
jae
add
add
add
add
pusha
clc
repnz
jae
add
add
movzwl
fwait
cld
nop
jmp
mov
sub
push
mov
xchg
ret
in
jbe
les
cmpsb
orl
nop
jae
add
add
add
inc
add
add
and
xchg
add
and
add
clc
repnz
jae
add
mov
std
pop
clc
repnz
jae
les
popf
add
jae
add
filds
mov
add
call
clc
repnz
jae
add
lea
clc
repnz
jae
test
decb
add
repnz
jae
mov
mov
rep
fwait
cld
nop
jmp
in
or
pusha
pop
add
mov
clc
repnz
jae
aas
add
adc
sub
repnz
jae
push
add
inc
and
jecxz
add
clc
repnz
jae
imul
arpl
add
clc
repnz
jae
add
inc
pop
mov
clc
repnz
jae
add
dec
add
repnz
jae
ljmp
add
fwait
pop
push
loope
repnz
jae
mov
mov
push
mov
xchg
ret
jmp
xchg
sbb
jae
and
add
sub
add
lret
call
clc
repnz
jae
sub
cmp
add
push
mov
add
inc
mov
out
mov
pop
add
sub
ds
nop
jae
sub
inc
sbb
jne
clc
repnz
jae
iret
cmp
jmp
xor
cmpsl
sbb
repnz
jae
and
xchg
mov
xchg
nop
add
cmpsl
sldt
clc
repnz
jae
inc
add
les
clc
repnz
jae
movsl
sub
push
aaa
iret
cmp
mov
push
mov
xchg
ret
inc
mov
jp
ja
outsb
je
repnz
jae
add
add
jecxz
ret
clc
repnz
jae
add
inc
inc
add
aas
adc
out
lcall
mov
dec
mov
fwait
cld
nop
jmp
mov
mov
push
rol
add
popa
add
repnz
jae
cmp
push
jbe
add
clc
repnz
jae
add
das
push
clc
repnz
jae
inc
pop
mov
in
add
mov
clc
repnz
jae
inc
addl
inc
lret
and
repnz
jae
add
roll
inc
insl
mov
push
mov
xchg
ret
rol
add
mov
adc
jno
add
ljmp
cld
nop
jmp
cmp
add
mov
fwait
cld
nop
jmp
add
popf
add
mov
mov
add
mov
xchg
ret
add
add
mov
clc
repnz
jae
add
popl
pop
add
orl
and
cmpsb
ljmp
test
add
fwait
cld
nop
jmp
add
push
and
cmp
test
lcall
or
add
mov
adc
rep
clc
repnz
jae
add
in
cmp
movsb
add
push
push
mov
xchg
ret
cmp
iret
add
rcll
mov
clc
repnz
jae
add
add
add
pop
pop
clc
repnz
jae
add
filds
add
and
clc
repnz
jae
push
add
add
or
pop
push
mov
xchg
ret
in
add
add
adc
jmp
pop
sub
xchg
mov
push
clc
repnz
jae
mov
add
pop
les
pop
test
inc
fwait
cld
nop
jmp
add
add
and
mov
clc
repnz
jae
add
add
dec
sub
in
inc
add
add
add
mov
popa
add
cld
nop
jmp
mov
add
mov
add
jae
push
add
add
mov
add
repnz
jae
cmp
add
add
push
add
or
clc
repnz
jae
filds
xchg
add
xchg
ljmp
subl
pushl
add
repnz
jae
cmpsb
add
test
fwait
cld
nop
jmp
and
push
add
popa
add
mov
xchg
ret
mov
in
push
mov
clc
repnz
jae
add
ljmp
add
jne
clc
repnz
jae
popl
add
adc
or
repnz
jae
add
add
nop
jmp
inc
add
inc
add
mov
in
pop
pop
clc
repnz
jae
add
pop
pop
mov
add
int
sti
fwait
cld
nop
jmp
add
add
cwtl
mov
clc
repnz
jae
add
repz
repnz
jae
inc
jp
add
mov
mov
roll
add
cs
jns
add
insl
add
add
clc
repnz
jae
add
les
push
mov
xchg
ret
add
mov
mov
fwait
cld
nop
jmp
add
add
lock
sub
nop
jmp
add
mov
xor
jbe
fwait
cld
nop
jmp
add
add
add
add
add
push
mov
xchg
ret
add
aad
add
inc
call
adcl
add
jmp
sub
add
add
repnz
jae
pop
cmpsb
push
sub
lret
inc
add
mov
mov
add
and
or
repnz
jae
pusha
add
xchg
add
add
jmp
jmp
sub
add
mov
shl
push
mov
xchg
ret
and
add
add
repnz
jae
add
inc
add
mov
xchg
ret
add
add
mov
cld
nop
jmp
mov
mov
add
clc
jmp
clc
repnz
jae
cltd
add
les
push
sbb
nop
jae
add
add
add
add
cld
nop
jmp
inc
mov
cltd
add
jg
push
mov
xchg
ret
pop
jbe
add
add
push
add
seta
repnz
jmp
add
ljmp
sbb
add
fwait
cld
nop
jmp
adc
add
in
lret
stos
add
add
add
jo
add
lea
push
mov
xchg
ret
mov
add
push
mov
xchg
ret
add
add
add
mov
fwait
cld
nop
jmp
add
add
or
repnz
jae
add
ljmp
add
add
in
lcall
add
add
fs
inc
roll
add
insl
mov
clc
repnz
jae
add
add
popa
cmpsl
mov
jae
add
jp
xchg
add
or
nop
jae
aaa
cmpsb
add
add
inc
add
add
pop
add
add
inc
push
mov
xchg
ret
add
add
in
add
mov
add
add
mov
jp
add
in
lock
clc
repnz
jae
inc
pop
iret
or
xor
out
adc
sqrtps
stos
fldl
xchg
ret
jp
push
add
xchg
add
mov
xchg
ret
iret
push
add
mov
test
fwait
cld
nop
jmp
in
jp
cmp
cmp
movsb
add
mov
clc
repnz
jae
mov
shll
xchg
clc
repnz
jae
and
popf
add
sub
add
call
clc
repnz
jae
inc
add
add
les
add
adc
push
clc
repnz
jae
and
add
repnz
jae
imul
mov
push
clc
repnz
jae
and
pop
mov
add
clc
repnz
jae
test
add
jp
add
clc
repnz
jae
pop
xorl
jp
inc
add
mov
fwait
cld
nop
jmp
movsl
cmpsb
pop
push
add
js
out
out
clc
lcall
pushl
sub
jae
aaa
xchg
add
mov
add
ja
and
clc
repnz
jae
test
add
clc
repnz
jae
mov
add
aad
in
pop
clc
repnz
jae
add
add
add
add
jmp
in
add
fiadds
and
gs
or
sti
clc
repnz
jae
fistps
add
sub
add
clc
repnz
jae
add
add
mov
mov
mov
xchg
ret
cmp
dec
add
loop
scas
mov
clc
repnz
jae
add
add
add
or
mov
jmp
add
ror
jmp
sbb
nop
jmp
pop
add
add
mov
adc
lret
fwait
cld
nop
jmp
push
or
mov
out
jne
fwait
cld
nop
jmp
xchg
add
cmp
mov
push
mov
xchg
ret
in
add
add
loop
push
mov
xchg
ret
cmp
cmpl
mov
sub
fcmovnb
inc
add
ljmp
mov
xchg
ret
add
pop
rep
clc
repnz
jae
sarl
push
ja
cmpl
fwait
cld
nop
jmp
add
ljmp
clc
repnz
jae
inc
aaa
add
pop
pop
and
lods
clc
repnz
jae
add
add
push
xor
clc
repnz
jae
aaa
push
aas
mov
add
movsb
push
mov
xchg
ret
add
add
and
inc
clc
repnz
jae
xchg
inc
inc
add
add
cmp
xchg
cli
xor
clc
repnz
jae
mov
xchg
sub
repnz
jae
inc
cmpsb
add
mov
xor
and
add
clc
repnz
jae
imul
inc
addb
pop
clc
repnz
jae
pop
jp
aaa
in
mov
repnz
jae
add
xchg
mov
and
add
inc
adc
repnz
jae
add
pusha
add
add
cld
nop
jmp
add
roll
mov
pushf
push
push
mov
xchg
ret
add
jmp
inc
and
push
mov
xchg
ret
xchg
inc
add
xchg
push
add
jne
clc
repnz
jae
sub
in
ljmp
jae
add
add
iret
in
jge
clc
repnz
jae
add
jmp
adc
jo
adc
mov
fwait
cld
nop
jmp
add
push
add
add
add
push
mov
xchg
ret
ljmp
int3
add
clc
repnz
jae
iret
sub
jnp
clc
repnz
jae
fisubs
pop
inc
add
pusha
cmpsb
sahf
push
clc
repnz
jae
add
in
add
inc
pop
push
push
mov
xchg
ret
jbe
inc
add
and
add
nop
jae
add
add
movsl
mov
add
mov
nop
jmp
jp
sub
dec
jmp
sar
mov
xchg
ret
push
sub
cmpsb
add
clc
repnz
jae
jp
add
add
add
call
clc
repnz
jae
add
push
add
aad
add
clc
repnz
jae
aaa
filds
push
add
data16
ja
lcall
out
cmp
mov
add
clc
repnz
jae
jp
add
mov
or
fs
repnz
jae
add
add
sbb
repnz
jae
or
addl
sub
mov
repnz
jae
dec
aaa
mov
ficomps
fwait
cld
nop
jmp
mov
add
cmp
sbb
test
clc
repnz
jae
shr
add
clc
push
mov
xchg
ret
xchg
mov
sbb
lret
fwait
cld
nop
jmp
add
sub
add
mov
outsb
push
mov
add
xor
jg
add
sbb
popa
jecxz
call
clc
repnz
jae
roll
shll
adc
add
repnz
jae
add
inc
repz
add
data16
add
pushf
push
push
mov
xchg
ret
inc
add
add
add
pop
add
clc
repnz
jae
inc
push
add
add
push
mov
xchg
ret
add
add
xor
mov
clc
repnz
jae
add
inc
or
rorl
mov
xchg
ret
in
sub
jbe
push
clc
repnz
jae
push
stc
mov
add
add
add
clc
repnz
jae
add
mov
cld
nop
jmp
add
shll
add
jae
add
sub
add
mov
stos
and
fwait
cld
nop
jmp
pop
jp
sub
or
repnz
jae
add
pop
add
add
mov
jbe
movsb
add
nop
jmp
add
add
in
push
or
push
mov
xor
add
clc
repnz
jae
pusha
cltd
lock
repnz
jae
add
in
add
cmp
fwait
cld
nop
jmp
add
add
or
jo
fwait
cld
nop
jmp
in
add
mov
rorl
dec
add
repnz
jae
inc
add
in
inc
les
pop
fwait
cld
nop
jmp
add
and
cmpsb
dec
mov
mov
add
add
repnz
jae
add
repnz
jae
test
add
je
clc
repnz
jae
add
add
adcl
ljmp
jnp
push
mov
xchg
ret
add
add
pop
inc
sarl
mov
xchg
ret
in
cmp
add
scas
jne
clc
repnz
jae
add
xchg
popf
xor
push
mov
xchg
ret
or
in
popf
aas
fidivrs
lret
inc
add
add
les
jns
clc
clc
repnz
jae
mov
fildll
mov
loope
add
add
add
add
mov
add
incb
hlt
sti
in
arpl
jle
add
add
push
push
mov
xchg
ret
test
aaa
sahf
mov
fwait
cld
nop
jmp
and
cmpsb
leave
xor
fwait
cld
nop
jmp
jp
and
sbb
add
in
incl
add
add
add
jmp
push
add
inc
mov
fiadds
ljmp
add
clc
repnz
jae
iret
add
jmp
push
add
pop
clc
repnz
jae
aas
add
add
mov
clc
repnz
jae
les
or
pop
xchg
add
add
clc
repnz
jae
cmp
add
sub
sar
nop
jae
add
mov
movsl
push
and
add
add
add
clc
repnz
jae
add
add
xor
movb
xorl
clc
repnz
jae
mov
add
push
push
mov
xchg
ret
add
add
jae
clc
repnz
jae
push
and
push
add
or
sar
nop
jae
add
xlat
mov
icebp
clc
repnz
jae
mov
add
movsb
add
add
xor
push
add
jnp
aad
add
mov
ret
add
jae
in
or
sub
addl
pushf
mov
push
mov
xchg
ret
test
xor
movb
add
mov
clc
repnz
jae
add
movl
mov
fwait
cld
nop
jmp
mov
pop
cmp
repnz
jae
add
mov
push
movsl
test
test
clc
repnz
jae
inc
stc
stc
loop
mov
xor
clc
repnz
jae
cmpsb
add
push
cmpsb
add
clc
repnz
jae
stc
add
cmp
mov
fwait
cld
nop
jmp
add
in
popl
add
push
call
repnz
jae
movl
std
mov
clc
repnz
jae
dec
xchg
add
sahf
push
fwait
cld
nop
jmp
dec
iret
sub
add
xchg
clc
repnz
jae
ljmp
xchg
add
sbb
jns
inc
add
mov
pushl
fwait
cld
nop
jmp
cmp
roll
add
add
repz
movsl
ficomps
cld
nop
jmp
add
add
add
mov
mov
clc
repnz
jae
add
mov
or
movsb
clc
repnz
jae
mov
and
bound
mov
add
repz
clc
repnz
jae
add
add
and
mov
xchg
ret
fiadds
inc
fisubrs
add
repnz
jae
popl
movsl
push
ljmp
nop
jmp
mov
add
out
lea
clc
repnz
jae
add
jmp
inc
sub
repnz
jae
test
cmp
rep
push
mov
xchg
ret
add
add
inc
fiadds
fmull
jae
add
add
xor
fwait
cld
nop
jmp
add
inc
add
jae
add
mov
jnp
inc
and
clc
repnz
jae
xchg
add
cmp
add
cwtl
add
fwait
cld
nop
jmp
xchg
inc
add
xchg
add
loope
add
nop
jae
addl
add
add
out
jmp
sub
aaa
add
movsl
add
cltd
mov
and
push
mov
xchg
ret
les
inc
add
out
pushl
fwait
cld
nop
jmp
in
xchg
sub
or
add
add
inc
add
mov
fildl
cld
nop
jmp
add
mov
add
xchg
or
fisttpll
mov
adc
repnz
jae
pop
mov
xchg
add
mov
fwait
cld
nop
jmp
addl
or
in
mov
xchg
add
clc
repnz
jae
roll
and
sub
mov
push
mov
xchg
ret
or
add
add
add
clc
repnz
jae
xchg
mov
mov
ror
push
mov
xchg
ret
mov
fldl
xor
inc
add
aaa
cmpsb
add
jmp
repnz
jae
add
add
dec
or
repnz
jae
add
push
roll
jg
dec
add
repnz
jae
inc
add
pop
add
mov
nop
jae
add
movsl
in
mov
add
add
fwait
cld
nop
jmp
add
sub
mov
add
clc
repnz
jae
add
add
sub
push
popl
clc
repnz
jae
add
mov
fidivs
xor
fwait
cld
nop
jmp
inc
jp
inc
inc
pop
mov
push
mov
xchg
ret
aaa
add
add
punpckhdq
repnz
jae
pop
in
add
or
mov
insl
add
clc
repnz
jae
add
add
and
aad
add
ljmp
roll
adc
adc
add
fmull
test
out
clc
repnz
jae
cltd
inc
add
mov
push
mov
xchg
ret
aas
add
imul
leave
ljmp
add
add
add
dec
clc
repnz
jae
fimuls
popf
cli
mov
fwait
cld
nop
jmp
add
add
stos
push
fwait
cld
nop
jmp
jp
add
rorl
nop
jmp
in
inc
add
mov
clc
repnz
jae
fiadds
pop
or
mov
cld
nop
jmp
mov
sub
test
and
clc
repnz
jae
stc
pusha
in
mov
mov
fwait
cld
nop
jmp
add
inc
movl
push
mov
jge
cld
push
xchg
add
add
pop
jle
add
repnz
push
or
repnz
jae
imul
pop
je
clc
repnz
jae
add
mov
add
mov
jnp
clc
repnz
jae
xchg
mov
add
scas
add
clc
repnz
jae
add
add
cmp
sub
sti
fwait
cld
nop
jmp
add
inc
add
add
mov
fwait
cld
nop
jmp
add
xchg
add
movl
adc
repnz
jae
add
mov
movsl
xor
dec
jne
fwait
cld
nop
jmp
pop
cmp
clc
repnz
jae
in
add
add
clc
repnz
jae
add
add
pop
add
nop
jae
cmp
add
add
nop
jae
add
add
add
add
iret
push
clc
repnz
jae
add
add
add
in
add
movsb
add
cld
nop
jmp
add
mov
or
cmpl
nop
jmp
add
add
cli
inc
clc
repnz
jae
popl
in
dec
mov
add
mov
repnz
jae
add
add
push
mov
add
int
mov
add
add
add
mov
inc
jno
or
clc
repnz
jae
in
cmp
add
cltd
mov
lcall
icebp
pushl
push
push
mov
xchg
ret
and
sub
in
in
das
dec
clc
repnz
jae
mov
add
add
mov
repnz
jae
movl
add
cmp
clc
repnz
jae
add
add
cmp
add
cli
jne
clc
repnz
jae
or
add
sub
push
mov
xchg
ret
sub
add
pushf
push
mov
pop
lahf
repnz
sub
movsb
add
or
jl
sbb
repnz
jae
add
add
push
fwait
cld
nop
jmp
cmp
add
sub
add
inc
shr
mov
add
add
add
push
add
mov
add
add
add
test
clc
repnz
jae
add
mov
movswl
clc
repnz
jae
cltd
push
add
xchg
out
mov
nop
jae
roll
in
add
stc
push
inc
adc
fwait
cld
nop
jmp
add
movsl
or
add
test
jae
dec
fbstp
in
push
add
andl
jae
add
addl
call
clc
repnz
jae
pop
cmp
in
lds
lcall
idiv
incl
inc
add
mov
clc
repnz
jae
sub
mov
clc
repnz
jae
add
jecxz
pusha
clc
repnz
jae
add
jp
les
sbb
pop
lcall
loope
in
pop
sub
mov
add
mov
popa
add
repnz
jae
add
push
xchg
pop
mov
mov
push
mov
xchg
ret
push
les
add
push
clc
repnz
jae
inc
add
mov
lret
mov
add
repnz
jae
inc
les
lret
sub
repnz
jae
stc
add
mov
dec
add
repnz
jae
mov
add
push
mov
xchg
ret
and
add
add
push
clc
repnz
jae
sub
sub
std
into
inc
add
add
inc
pusha
mov
add
nop
jae
inc
mov
jecxz
jmp
and
les
mov
add
add
jae
add
add
add
test
fwait
cld
nop
jmp
add
mov
cmp
jae
add
aaa
mov
add
dec
rep
clc
repnz
jae
adc
inc
add
jecxz
add
push
mov
xchg
ret
sub
add
mov
mov
xchg
ret
push
add
ljmp
clc
repnz
jae
pop
mov
popf
add
clc
repnz
jae
add
cmp
push
add
push
fisttpl
nop
jae
and
adc
in
insl
pusha
push
mov
xchg
ret
pusha
add
add
add
pop
push
fwait
cld
nop
jmp
dec
add
add
xchg
add
cli
cmp
fwait
cld
nop
jmp
add
push
in
add
mov
repnz
jae
add
aaa
add
add
mov
adc
repnz
jae
inc
jbe
fisubrs
sub
repnz
jae
iret
add
sub
test
jecxz
add
add
adc
mov
jae
clc
repnz
jae
jbe
cmp
cld
je
fwait
cld
nop
jmp
aaa
and
mov
push
mov
out
add
lret
sbb
add
cmovns
sub
subl
clc
repnz
jae
movsl
sub
or
cltd
push
clc
repnz
jae
add
dec
add
rcrl
cld
nop
jmp
adc
popf
push
dec
aaa
add
mov
call
clc
repnz
jae
mov
and
xor
add
ret
push
mov
xchg
ret
mov
les
add
aas
mov
popa
add
repnz
jae
imul
sbb
jae
add
add
sub
or
js
fwait
cld
nop
jmp
or
add
add
add
inc
sub
jae
add
add
les
cmp
fistl
mov
xchg
ret
imul
mov
cld
or
jmp
push
add
add
add
je
clc
repnz
jae
cmpsb
mov
and
repnz
jae
les
pop
mov
push
push
mov
xchg
ret
stc
fisubs
mov
nop
jmp
mov
iret
add
mov
push
mov
xchg
ret
add
add
inc
add
dec
add
push
mov
xchg
ret
in
xchg
pusha
cmp
dec
roll
xchg
ret
test
xchg
add
cld
nop
jmp
stc
rol
add
popl
aas
mov
push
mov
xchg
ret
add
add
add
fiaddl
xchg
ret
filds
push
add
mov
in
pop
push
push
mov
xchg
ret
ficomps
mov
add
js
test
out
clc
repnz
jae
jp
add
add
insb
jne
fwait
cld
nop
jmp
pop
add
add
mov
clc
repnz
jae
add
add
ficomps
mov
nop
jae
add
add
in
add
mov
mov
push
mov
xchg
ret
rorl
mov
nop
jae
fisubrs
iret
add
push
clc
repnz
jae
add
add
add
add
mov
push
mov
xchg
ret
sub
add
stc
add
in
push
add
dec
movl
and
add
lock
cld
nop
jmp
add
aaa
add
add
lcall
repnz
jae
add
mov
add
push
fidivrs
clc
repnz
jae
xchg
addl
xlat
and
clc
repnz
jae
mov
add
add
incl
sub
dec
cltd
add
jmp
inc
cmp
inc
repnz
add
mov
add
add
add
mov
xchg
ret
mov
fmuls
mov
push
fwait
cld
nop
jmp
fucomip
and
test
push
mov
xchg
ret
iret
inc
movl
mov
add
push
clc
repnz
jae
jmp
add
xchg
adc
xchg
fwait
cld
nop
jmp
add
mov
add
iret
shll
imull
xor
clc
repnz
jae
fidivs
mov
add
push
clc
repnz
jae
add
mov
add
jne
scas
bound
pop
add
add
sub
jp
lea
or
push
add
outsb
out
mov
aam
jo
jl
or
xor
cmc
sub
emms
mov
pusha
add
add
adc
and
test
lods
xchg
inc
sbb
imul
add
adc
cmp
sbb
cmp
mov
cltd
pop
imul
sti
addb
add
data16
inc
fistps
push
add
sbb
and
add
out
call
sbb
adc
push
add
cld
leave
shrl
mov
pop
xor
inc
add
icebp
or
xor
inc
add
add
add
add
push
add
cli
sbb
dec
sbb
xor
adc
add
mov
pop
mov
push
dec
cmpsl
pop
adc
in
out
and
je
scas
adc
cmp
sbb
mov
ljmp
sub
sub
pop
scas
sbb
pop
mov
loope
movsb
add
add
faddl
cld
adc
add
inc
enter
add
call
sbb
add
stc
mov
add
add
mov
jmp
sbb
sub
push
das
mov
push
add
add
mov
adc
and
add
lds
cmp
or
sti
dec
lock
fstl
test
sub
movb
xor
repnz
in
xchg
add
into
cmp
sub
jbe
mov
xor
pusha
add
aaa
movsl
mov
mov
sub
out
mov
leave
lea
xor
enter
add
pop
les
inc
add
jne
xchg
push
add
dec
sub
add
dec
cmpsb
add
decb
add
add
mov
bound
mov
add
add
dec
mov
pop
jns
mov
enter
mov
fistpl
jo
dec
jg
or
push
or
add
add
out
fwait
out
popa
data16
rolb
xchg
push
cmp
movsb
add
adc
add
mov
jbe
les
cmp
insb
or
pop
push
xor
inc
add
add
add
jnp
add
dec
in
push
stos
add
cmpsl
cltd
mov
dec
inc
ljmp
xor
pop
fwait
rcll
fmuls
add
xor
mov
scas
or
mov
mov
xchg
add
add
add
jbe
and
xor
lds
lds
add
xchg
or
mov
add
xchg
add
add
hlt
add
add
add
add
inc
adcl
add
add
imul
jle
rolb
cld
mov
lock
repnz
pop
fnsave
fstps
xchg
add
add
sub
or
rorl
clc
repz
jne
add
add
add
jns
add
or
jb
out
cli
push
stc
dec
test
add
sbb
add
fsubrl
jno
add
icebp
fidivrs
fiaddl
add
add
mov
add
fldt
cmp
jne
pop
in
add
add
mov
adc
pop
jbe
lods
or
psrlw
jge
inc
add
adc
jo
or
sbb
das
lret
dec
and
pop
stos
std
jmp
imul
mov
cmp
add
ficomps
out
pusha
add
bound
mov
adc
mov
xchg
add
mov
or
sbb
inc
add
jne
test
add
add
movb
mov
xor
stos
jno
out
sub
add
scas
lret
sub
add
mov
dec
and
mov
and
mov
lcall
add
sbb
adc
add
add
cmp
or
add
lock
xchg
add
sub
in
and
xor
mov
mov
mov
loop
xlat
pop
mov
xchg
out
aas
push
dec
test
mov
add
pop
in
insl
xor
movsb
add
jae
add
xchg
mov
add
xor
add
and
mov
mov
jecxz
add
cs
lods
lcall
or
add
add
add
jp
push
add
push
add
add
push
add
mov
xchg
add
cmpsb
add
aaa
add
add
cmp
push
mov
pop
les
jle
jbe
mov
ret
loopne
mov
mov
sub
inc
nop
add
test
add
je
push
mov
enter
in
ja
stos
cmp
rcrl
jecxz
and
mov
add
xchg
add
add
inc
pop
test
les
and
add
sbb
add
ficoms
inc
mov
cs
mov
mov
jecxz
add
or
push
adc
and
pop
bound
mov
loope
add
xchg
les
xchg
add
mov
xlat
or
push
add
add
add
add
add
inc
nop
add
add
pop
sub
pop
cli
fs
mov
push
cmp
mov
add
mov
mov
add
lahf
adc
xlat
insl
cmp
add
pop
inc
sbb
sbb
add
insl
mov
mov
add
mov
add
stos
jmp
cmp
mov
push
lahf
xchg
sar
mov
jg
js
clc
or
mov
jmp
and
mov
lock
and
mov
fwait
lahf
sahf
jle
add
add
add
jno
mov
addb
and
mov
cmp
jle
fistpll
jmp
mov
loopne
je
out
cwtl
test
lret
push
add
mov
sbb
out
fmuls
mov
pusha
add
mov
add
lret
adc
cwtl
or
cmc
rolb
sbb
add
add
sbb
inc
add
sbb
insb
adc
add
add
add
inc
add
jbe
xor
add
in
mov
sti
xchg
jns
add
xchg
dec
addb
push
add
cwtl
rolb
sbb
push
add
cmp
fstl
add
sahf
inc
xor
mov
in
add
ret
mov
loopne
cmp
std
jmp
jmp
add
mov
add
data16
jp
iret
xor
xor
push
add
add
add
add
fdivrl
xchg
outsl
adc
fcoml
xor
sahf
imul
pop
rol
lret
test
cld
lds
cmp
nop
add
adc
ljmp
xchg
lea
add
lahf
testb
aas
in
sti
push
add
xchg
add
mov
not
dec
add
sub
add
dec
les
aam
outsl
pop
stos
jo
loop
cwtl
dec
cmpsl
lahf
in
add
mov
push
push
jb
stc
push
movsl
add
movsb
add
dec
outsl
orl
add
add
je
ficomps
sbb
repnz
push
add
dec
xchg
add
mov
add
mov
mov
push
add
or
ret
sub
add
add
xchg
pop
inc
add
add
or
add
inc
add
dec
or
repnz
pop
fistpl
mov
test
push
add
add
xor
add
sub
xor
dec
data16
lods
mov
pop
cmp
push
add
cmp
add
in
sub
xlat
lahf
lds
js
add
xor
mov
je
jno
add
cs
add
les
fimull
in
sub
add
dec
add
mov
add
fwait
ljmp
dec
jg
add
add
mov
add
add
test
mov
mov
add
add
popf
out
mov
sbb
maskmovq
mull
push
jmp
add
scas
ret
or
addr16
add
in
pop
cmpsl
jl
mov
insb
xor
xchg
and
lods
and
aaa
cmp
adc
mov
add
xor
imul
cmp
add
mov
inc
add
sub
pushf
sbb
lock
stos
jb
xchg
add
addr16
add
test
add
cltd
mov
daa
out
shrl
cmpsl
xchg
in
lods
jb
xchg
out
xlat
or
out
push
add
jno
pusha
add
add
jbe
fsub
xor
add
loope
scas
push
sub
xor
fldt
mov
mov
dec
aas
cli
hlt
add
and
inc
jno
and
gs
pop
adc
xchg
das
out
imul
outsl
cmp
sbb
add
dec
pop
imul
lds
pusha
add
mov
add
fisttps
cmc
jnp
xlat
jg
add
pop
loop
fwait
adc
mov
lret
push
add
mov
add
je
ficoml
cmpsl
mov
mov
in
add
add
stos
jp
pusha
add
add
xor
pop
pop
cltd
popf
inc
adc
sbb
mov
add
idivl
add
adc
mov
xlat
jnp
add
jo
mov
imul
out
scas
outsl
movb
fidivrs
sub
add
fstps
push
notl
std
cmpsl
jno
pop
repz
cmp
adc
and
mov
add
scas
test
lret
test
pushf
dec
cmpsb
add
add
int
hlt
add
pop
out
nop
add
add
add
add
and
mov
add
sbb
add
test
loop
mov
add
rcl
xchg
push
or
rolb
sbb
add
popa
addb
jecxz
mov
sbb
int
add
add
jl
inc
mov
mov
cmpsb
add
sbb
in
cmp
xor
jbe
repnz
add
sub
fidivs
add
jge
add
movsl
push
ljmp
sbb
lcall
bound
mov
repz
cli
dec
or
mov
fiadds
add
ja
stos
jg
add
scas
push
mov
add
stos
jo
xchg
add
mov
add
mov
pop
in
and
xchg
in
jbe
jle
add
cmp
add
subl
add
lea
imull
pop
imul
mov
call
jb
add
mov
add
mov
mov
pop
stos
stos
sbb
add
xchg
fcomp
inc
add
int3
adc
fidivrl
jge
lcall
emms
add
or
add
loop
les
push
add
add
rolb
dec
adc
mov
add
test
loop
mov
ljmp
notl
jnp
dec
out
mov
xchg
pop
push
jae
pusha
add
and
inc
add
test
add
mov
mov
push
pusha
add
add
xor
mov
daa
testb
testb
movb
sub
xchg
outsl
xchg
add
add
add
add
fwait
jns
addr16
mov
xchg
inc
add
push
add
push
sub
or
add
add
mov
ret
xor
sbb
dec
mov
bound
mov
push
add
pop
cmp
xor
mov
jle
ljmp
test
xor
push
add
mov
pushf
push
add
movsl
push
out
add
mov
js
cmp
add
aas
test
add
add
xlat
movsb
add
mov
leave
cmp
mov
fnsave
add
add
or
imul
cwtl
or
loop
lret
cli
out
out
mov
jb
lods
xchg
add
out
aad
ds
stos
aaa
mov
inc
add
add
repz
addb
daa
stc
outsl
repnz
add
or
sti
loopne
xchg
insl
xchg
mov
sub
or
inc
scas
out
fcomps
loopne
cwtl
push
add
jne
add
mov
int
inc
add
dec
push
add
xchg
add
fwait
push
push
add
mov
pop
mov
add
nop
add
ret
cmp
addl
add
sbb
push
add
jl
push
into
sub
adcl
movsl
testb
push
fcomps
add
add
adc
out
sub
imul
ja
dec
repz
add
xchg
nop
add
add
lret
add
mov
xor
add
add
pop
push
add
das
ret
fidivs
jns
adc
pop
pop
sub
mov
mov
add
or
push
or
cmpsb
add
das
push
add
leave
out
sbb
movsl
addr16
cmp
int3
scas
mov
xor
adc
lcall
add
pop
push
std
pop
or
int3
loopne
sahf
add
xor
repnz
add
lcall
add
add
jmp
inc
add
jne
add
cld
rolb
cmp
mov
std
pop
shll
add
mov
mov
xchg
lds
push
and
test
xchg
das
inc
add
mov
movsl
add
add
add
mov
add
in
add
mov
jmp
xchg
add
mov
fistl
insl
and
testb
add
add
repnz
add
add
lret
pop
test
mov
ljmp
jo
ds
mov
dec
sbb
testb
add
bound
mov
pop
push
sub
mov
xchg
dec
int3
sub
inc
fildll
xchg
add
mov
sbb
je
mov
sbb
pop
lds
loope
inc
ret
cmc
imul
rolb
inc
rolb
mov
out
mov
test
push
test
insl
fwait
mov
sar
push
add
in
test
add
add
pusha
add
xchg
and
mov
int
icebp
call
push
addb
hlt
add
add
xchg
cmp
xor
loopne
mov
mov
ret
jne
mov
add
add
mov
je
xor
add
add
sub
push
xor
add
add
add
add
push
cmp
std
adc
add
inc
js
pop
push
add
add
loopne
push
cmovb
mov
add
jmp
popf
les
shl
add
sbb
data16
pop
add
cmpsl
fistpll
addb
pop
and
ret
add
das
and
sbb
loopne
add
loope
or
lret
addl
mov
push
fucomi
arpl
sbb
insb
sti
outsb
insl
lcall
stc
jg
int3
testb
inc
addr16
in
stc
sbb
push
add
inc
es
daa
in
pop
mov
scas
push
std
popa
pop
mov
mov
test
push
dec
aaa
test
out
mov
xor
inc
scas
daa
into
ret
cmp
lret
loop
aas
aam
aad
cmp
ds
je
add
add
or
add
mov
sarl
ret
cmp
pop
push
add
dec
iret
ds
add
adc
add
add
sub
cmpsl
lds
mov
mov
mov
leave
mov
addb
int3
ja
test
mov
adc
in
inc
push
add
lcall
add
int3
mov
fmuls
xlat
jl
int
rcl
add
add
add
cmp
add
and
fcomi
xchg
add
mov
mov
jae
add
inc
add
add
mov
cmp
add
dec
sahf
shll
mov
cmp
mov
std
mov
pop
pop
or
inc
cmpsb
add
call
int3
in
notl
pop
int
rolb
add
addb
xor
add
in
jbe
xor
push
das
mov
add
addr16
dec
adc
sub
cmpl
xor
fdivs
push
add
add
pop
mov
adc
lea
mov
add
add
data16
add
add
mov
adc
sub
add
inc
add
push
lahf
insb
sub
test
bound
mov
add
jae
jp
add
mov
dec
fdiv
add
dec
xor
fildl
bound
mov
add
jmp
mov
enter
adc
adc
daa
das
and
add
fnstsw
xchg
fsubs
jmp
sub
sbb
sub
mov
xchg
add
add
scas
aas
imul
push
add
fimull
add
inc
scas
cs
mov
add
pop
rolb
add
rolb
dec
aad
add
or
lcall
addb
push
mov
imul
add
add
cmp
dec
mov
add
sbb
mov
hlt
add
lock
nop
add
add
mov
add
loopne
movsb
add
into
push
add
xchg
in
add
ret
add
or
test
adc
xor
ss
mov
inc
add
decb
add
packuswb
or
jnp
add
dec
sbb
xor
jbe
inc
add
inc
add
jle
int
add
add
pop
sbb
dec
add
mov
rolb
movb
add
add
inc
pop
fnstenv
outsl
push
and
bound
mov
mov
out
mov
divl
push
sar
pop
or
movb
add
shl
add
add
push
add
and
mov
lock
mov
add
insl
cld
jbe
outsl
nop
add
add
testb
push
add
cmp
cmpsb
add
add
scas
scas
jmp
or
rolb
and
adc
jbe
in
divl
add
dec
add
push
fwait
sbb
pusha
add
add
jno
push
add
rolb
add
jle
imul
aas
and
aad
sahf
test
add
jno
dec
xchg
loop
test
cmp
jmp
xor
push
add
shl
add
add
fistpll
add
cmc
or
ljmp
pop
call
addb
bound
mov
or
mov
add
sahf
das
std
in
xor
stos
addb
cmp
cmp
add
mov
add
icebp
add
jecxz
lret
push
add
mov
push
dec
xchg
add
mov
inc
add
add
lods
mov
data16
push
cmp
add
mov
ret
mov
dec
int
lea
xor
add
movsb
add
pusha
add
pop
dec
and
mov
add
aaa
nop
add
fwait
mov
rolb
mov
and
lock
mov
add
gs
in
clc
cld
sub
outsb
and
xor
out
sbb
add
mov
call
add
mov
add
and
mov
push
add
inc
out
fdivr
clc
xor
jge
add
fsts
add
pop
cmp
outsb
and
xchg
add
fildll
test
inc
add
xlat
xchg
cmp
in
stc
daa
or
out
push
add
add
xchg
mov
push
lahf
inc
add
push
add
xchg
mov
mov
lcall
sub
cmp
lods
jmp
aaa
fnstsw
in
fwait
xor
popa
xchg
add
xchg
add
adc
mov
add
scas
xor
push
pop
mov
mov
add
lods
inc
aam
hlt
add
nop
add
xor
dec
dec
push
int
sub
sub
add
add
add
adcl
add
pop
add
add
adc
cli
das
clc
pop
lea
pop
clc
adc
ret
movsl
jae
and
mov
jae
add
out
push
addb
add
mov
mov
mov
add
add
out
push
add
jecxz
lods
enter
add
fidivrl
test
add
or
add
data16
daa
mov
inc
add
add
mov
iret
xchg
fucomp
outsl
push
and
mov
fiaddl
cmc
cmpsb
add
dec
test
inc
xlat
inc
add
add
add
icebp
cltd
in
pop
ljmp
rolb
mov
cmp
add
loope
pushf
bndstx
inc
add
stos
sarl
mov
mov
lods
ret
fstl
fsts
jne
pop
mov
repnz
cmp
ret
adc
mov
xor
daa
dec
pop
jg
mov
cld
sub
fisttpll
push
add
adc
jae
ds
jae
testl
add
cwtl
repnz
insb
inc
add
add
loop
xchg
add
shll
mov
popa
arpl
fidivrs
and
shll
adc
push
loop
dec
pop
pop
inc
add
push
popf
xchg
add
out
mov
repnz
dec
or
push
add
pusha
add
push
add
scas
scas
enter
mov
xchg
mov
pop
in
inc
add
push
cmp
adc
cmp
mov
shrl
in
fldt
inc
add
popa
mov
sub
clc
mov
push
add
pushf
pop
mov
push
pop
loop
pop
test
outsl
roll
add
add
fdivl
jg
enter
add
dec
or
add
std
add
test
pop
lret
and
sub
inc
popa
add
mov
movsl
sbb
pop
pop
lock
add
pushf
xor
out
dec
sbb
pushf
leave
xchg
xlat
xlat
movsb
add
jl
and
add
add
lret
fldt
add
add
add
negl
mov
and
mov
movb
add
mov
add
add
add
aad
mov
pop
jns
inc
xchg
add
xor
mov
sbb
add
pop
add
mov
push
add
xor
push
push
xchg
add
add
cmp
je
cmp
rolb
es
ljmp
add
and
mov
sbb
mov
add
add
add
sbb
mov
dec
lods
dec
xchg
add
and
add
sbb
add
add
nop
add
rolb
or
mov
mov
add
add
pop
mov
add
mov
js
add
xchg
add
add
lds
cmp
push
push
fistpl
mov
cmp
add
xor
push
add
jae
add
mov
dec
mov
add
mov
mov
jnp
inc
add
add
pop
imul
inc
add
pop
rolb
movb
orl
push
add
mov
jle
add
and
leave
aad
mov
xchg
fcoml
add
add
lods
mov
out
push
add
out
mov
and
mov
mov
add
dec
dec
stos
imul
push
add
mov
loopne
push
add
call
mov
sahf
add
data16
mov
popf
dec
cli
dec
or
loope
add
xchg
bound
mov
add
add
les
loop
and
xchg
push
add
dec
cwtl
or
aaa
cmp
xchg
add
add
add
leave
xchg
mov
and
mov
add
jmp
add
fwait
xor
xor
cmp
lods
xchg
pusha
add
push
add
ss
push
cmp
outsb
add
add
stos
mov
mov
add
inc
gs
mov
cltd
jp
aad
xor
push
push
sbb
lret
and
mov
add
or
push
add
movsl
adc
pop
nop
add
mov
sbb
add
insl
push
add
add
mov
mov
aas
fcomp
inc
mov
sbb
add
xchg
dec
ja
add
test
mov
insb
adc
pop
loope
add
and
push
add
add
add
add
xor
xor
push
idivl
xlat
mov
add
add
pop
sub
mov
mov
mov
pop
mov
push
add
pop
xor
add
cwtl
out
test
aas
rolb
popa
imul
je
js
add
add
dec
adc
jns
cwtl
jno
cld
push
jecxz
into
xchg
orl
push
iret
xchg
outsl
stc
xlat
cwtl
cli
jb
push
add
add
cmpsl
push
add
push
push
add
add
add
lock
push
add
pop
outsb
shll
sti
shl
jo
mov
pop
repz
pushl
add
leave
sar
dec
imul
mov
adc
ficomps
add
mov
mov
and
lock
insl
adc
adc
jbe
out
mov
add
push
add
das
push
add
adc
imull
add
xor
lods
mov
add
into
jl
sub
bound
mov
cmpsb
add
add
into
dec
push
jle
loopne
daa
inc
mov
mov
inc
fldl2t
outsb
cmp
push
jg
add
stos
adc
add
and
or
stc
push
add
lcall
push
add
mov
mov
rcrl
sub
movhps
imul
gs
push
lcall
pop
std
pop
jecxz
data16
and
add
adcl
or
mov
add
imull
pop
mov
rolb
test
sti
mov
addb
jb
inc
out
push
push
add
testb
add
adc
add
mov
adc
cmp
aaa
out
js
hlt
add
loope
add
cmp
add
sub
stos
lock
add
sbb
add
push
and
add
add
pushf
das
cmovbe
push
add
repnz
add
add
cmc
jp
add
or
ret
cmp
add
add
cmp
add
je
xor
cmpsb
add
add
xchg
pop
mov
inc
add
inc
add
rolb
xchg
add
lret
std
test
lds
add
add
cmpsl
aam
out
cmp
inc
add
add
pop
pop
mov
push
mov
xor
mov
mov
fnstcw
ret
add
mov
aas
imull
rolb
mov
add
add
add
add
mov
cmp
jmp
add
negl
int
call
std
mov
vmovsldup
or
bound
mov
or
pop
shr
add
mov
loopne
dec
int
add
bound
mov
add
add
adc
adc
out
pusha
add
pop
or
lret
jecxz
stc
std
frstpm(287
js
call
jno
inc
inc
add
push
add
adc
add
add
mov
add
and
imul
and
adcl
daa
lds
fsub
add
add
xor
movb
push
sbb
add
add
ffreep
add
clc
lock
add
dec
arpl
sub
addb
add
add
or
xchg
add
inc
add
negl
adc
jmp
add
push
add
mov
rolb
jns
cwtl
pop
inc
add
aas
sub
rolb
jge
scas
pop
xchg
mov
fwait
ljmp
loope
and
sti
stc
add
mov
mov
xchg
add
inc
add
popf
xlat
xlat
sbb
jnp
movsb
add
mov
add
ljmp
push
add
mov
scas
das
mov
setns
test
push
and
test
push
add
add
push
add
dec
lods
push
add
leave
mov
orl
mov
pop
add
fwait
mov
add
loop
leave
in
scas
arpl
add
mov
enter
arpl
add
push
mov
dec
mov
add
add
mov
push
sbb
cmp
bound
mov
add
sbb
testb
rolb
popf
or
scas
aas
les
pop
jl
call
dec
sti
stc
jl
add
lret
lea
mov
xchg
dec
fisubl
aas
jp
add
pop
jo
mov
lahf
adc
mov
gs
test
sub
add
cmp
fwait
mov
add
sub
add
ja
orl
aam
js
sub
loope
jns
sub
mov
or
aad
rolb
movsl
mull
add
imul
nop
add
cmp
addb
mov
into
mov
mov
daa
add
add
add
rolb
pop
push
cltd
mov
fs
lds
into
addb
push
js
mov
or
or
movsl
jecxz
add
testb
lcall
movntq
mov
xchg
pop
mov
mov
add
add
mov
les
sub
push
mov
jno
rolb
mov
jmp
push
add
aaa
cmp
scas
push
repnz
mov
pop
cwtl
imul
adc
xchg
add
jecxz
add
add
dec
and
jl
add
fstps
add
lahf
adc
cmc
sub
and
jae
add
fsubr
cmpsl
and
pop
adc
mov
mov
pop
inc
add
cmc
and
mov
movb
xor
dec
pusha
add
mov
insb
jns
pushl
add
jne
inc
add
fadd
loopne
fbstp
jnp
shll
sbb
insb
xor
and
mov
add
por
add
das
repnz
mov
test
pop
add
add
sub
nop
add
pop
inc
and
aas
mov
testb
data16
push
add
cwtl
push
mov
pusha
add
add
movsl
cmpsl
dec
dec
mov
movsb
add
mov
aad
pop
and
mov
mov
push
add
imul
pop
or
imul
inc
add
mov
mov
rcll
add
rolb
lea
js
fmull
push
cmp
add
add
mov
sbb
fmull
add
add
mov
add
add
fcompp
inc
add
add
mov
pop
pop
aaa
xchg
add
lods
mov
dec
std
cmp
test
loopne
mov
lods
and
mov
push
rolb
cs
add
xor
sbb
mov
inc
add
inc
add
add
mov
faddl
pop
pop
cmc
fldcw
lret
movb
test
pop
enter
dec
xchg
add
add
cmp
add
addl
inc
push
in
pop
cmp
add
sub
in
in
xor
add
ret
add
add
push
js
add
mov
mov
and
mov
je
test
push
add
fcomps
add
add
add
pushf
imul
bound
mov
add
nop
add
xchg
add
add
gs
mov
arpl
add
add
icebp
jle
inc
add
repz
adc
xor
add
mov
repnz
add
and
add
add
sub
into
xchg
add
int3
sub
in
into
ss
mov
mov
xor
jecxz
xchg
xchg
push
stc
xchg
addb
les
push
lahf
adc
movsl
rolb
mov
out
jae
cltd
lahf
icebp
and
mov
add
ds
inc
add
fsubrl
mov
mov
movsl
push
std
aam
fsubr
das
or
and
gs
add
push
movb
push
adc
add
inc
jns
pusha
add
jmp
xchg
and
add
add
push
mov
addr16
jo
stos
ds
and
data16
or
scas
jp
add
pop
jno
or
push
mov
add
add
adc
add
in
pop
xlat
jno
adc
imul
stos
adc
add
add
add
cmp
add
cwtl
or
sub
add
sbb
cmp
push
add
mov
ds
adc
out
mov
jae
jne
add
sub
inc
gs
and
mov
je
cmp
add
push
add
mov
cltd
and
mov
xorl
add
cld
xchg
and
add
add
add
lahf
push
add
add
add
cmc
add
add
add
mov
mov
push
add
add
mov
out
or
and
in
shrl
jg
sub
add
add
popa
jl
add
aam
push
add
jb,pt
inc
and
add
inc
add
int
outsb
add
add
jne
cmp
push
enter
add
or
jecxz
movsl
xor
add
sbb
add
add
shll
xorl
sbb
mov
mov
add
push
and
insb
mov
call
adc
sub
mov
stc
pop
stc
outsb
xlat
lods
sbb
mov
jge
add
rolb
fidivl
mov
add
outsl
inc
push
add
add
add
add
xchg
add
ret
test
adc
xlat
mov
fadds
dec
mov
rolb
add
or
mov
lock
loopne
jae
jp
mov
stos
aad
add
add
add
jb
addb
daa
push
mov
xchg
fisttpll
scas
int3
jbe
frstor
add
sbb
add
or
repz
addb
movsl
jl
add
mov
popa
out
mov
add
push
add
sub
rolb
jmp
xor
enter
loopnew
or
add
imull
add
mov
jae
add
sub
inc
out
and
mov
dec
clc
dec
add
add
mov
fwait
out
test
pop
xor
sub
mov
pop
sub
jne
add
push
or
loopne
pop
push
inc
cwtl
jmp
add
rolb
xlat
test
popf
cs
pop
xadd
inc
add
add
push
scas
inc
add
add
test
imul
sbb
push
lea
add
das
pop
aam
mov
add
mov
mov
movsl
lock
add
add
jl
iret
rolb
repz
ffree
mov
mov
cs
icebp
and
add
add
jg
mov
mov
xchg
je
movb
popa
ffreep
add
xor
add
mov
cmpsb
add
add
push
add
out
add
add
lcall
sbb
add
popf
lahf
jecxz
dec
cltd
rolb
inc
add
and
lods
push
add
add
loope
jle
mov
out
or
cmp
cmp
and
mov
add
add
add
jo
rolb
in
mov
xchg
add
jb
pop
lcall
ja
push
movsb
add
add
insl
adc
mov
jae
add
scas
pop
or
add
add
and
mov
mov
mov
aad
add
sub
add
ljmp
push
add
or
cmpsb
add
out
imul
ss
cvtdq2ps
xchg
add
add
or
pop
or
stos
push
mov
enter
jns
aam
inc
pop
enter
cld
fwait
mov
sub
jmp
xor
leave
addb
insb
inc
lcall
and
pushf
add
mov
lods
rolb
stc
repnz
jae
dec
sbb
adc
sbb
add
push
xchg
cmp
add
cmp
add
add
loope
cmp
xchg
add
sbb
mov
mov
add
leave
xor
push
add
add
add
mov
dec
rolb
arpl
fmull
xchg
add
call
add
add
cmove
xor
add
jl
add
add
sbb
add
mov
xchg
add
sub
add
add
xchg
sbb
mov
data16
cmp
fcomps
add
lods
jmp
add
add
inc
jne
lock
out
mov
add
out
clc
xchg
add
xchg
add
fiadds
ret
dec
lods
xchg
add
add
xor
mov
leave
push
add
fbld
mov
pop
testb
sbb
add
jb
mov
rcl
add
stos
cli
sbb
mov
bound
mov
mov
inc
jge
lds
stos
testb
add
xlat
test
nop
add
nop
inc
push
arpl
add
sub
ja
add
mov
jg
popa
test
shll
lret
jl
add
jp
fstps
mov
addb
aas
jae
mov
add
add
repnz
xor
out
push
movsb
add
clc
xchg
add
fstps
add
in
outsb
or
aas
data16
jecxz
repnz
dec
pop
fadd
sarl
add
jnp
in
lret
xchg
add
jbe
addb
lcall
in
add
movl
jg
sub
or
lds
sub
dec
jecxz
add
pusha
add
jno
add
mov
and
mov
dec
sbb
mov
add
add
call
add
add
daa
mov
loop
andl
mov
stc
les
outsl
pop
jno
popa
aam
lcall
inc
pop
inc
add
testb
repz
xchg
popf
enter
movb
sbb
repz
lds
add
add
xlat
cld
sbb
xor
cwtl
cli
add
mov
pop
mov
jle
add
xchg
les
in
out
xchg
gs
mov
in
mov
pop
mov
test
in
jb
pop
jge
or
sub
add
lcall
add
bound
mov
xchg
sbb
add
mov
and
filds
add
or
jbe
ss
add
adc
ret
rcrl
mov
add
add
add
testb
int3
dec
fnstsw
scas
add
stc
xchg
add
push
xchg
add
shll
add
ds
pop
ret
nop
add
push
add
mov
add
cmp
mov
testb
pop
add
mov
popf
js
fwait
inc
std
jae
add
sub
add
xchg
add
out
sub
cltd
aad
aas
out
stos
jecxz
add
movsb
add
ljmp
insl
push
add
push
add
add
add
push
push
mov
add
lock
test
data16
jge
xor
add
xchg
add
add
ja
add
add
push
fdivl
mov
mov
fistpll
add
add
add
mov
in
pop
bound
mov
inc
movsb
add
loope
mov
xlat
inc
add
xor
add
add
jg
adc
or
test
add
adc
add
inc
add
outsl
pop
xchg
out
outsl
jnp
add
stos
pop
iret
hlt
add
fists
add
mov
add
pop
cmp
fisubl
dec
test
pop
ljmp
das
leave
cmp
mov
sbb
add
mov
push
add
js
inc
add
movl
pop
push
add
negl
cwtl
jne
add
add
in
sbb
cmp
mov
add
add
xchg
and
add
into
jge
adc
popf
test
arpl
loope
cwtl
lahf
hlt
add
cmp
add
add
add
add
xchg
add
mov
daa
jmp
or
adc
lock
pop
cmpsl
mov
data16
mov
adc
pop
bound
mov
dec
fadds
addb
add
cli
and
loope
orl
add
subl
sub
inc
add
out
jg
addb
and
mov
add
sub
in
leave
nop
add
add
add
mov
jne
mov
push
add
add
add
or
js
pop
sub
add
xlat
pop
pop
mov
in
pushf
insl
lret
mov
aam
sub
add
xchg
add
add
arpl
add
lcall
add
dec
pusha
add
dec
ljmp
add
add
add
rolb
test
ja
inc
add
pushf
test
enter
sahf
test
popf
ficoml
pop
xchg
add
xchg
mov
inc
add
clc
das
arpl
int
rolb
add
mov
leave
cmp
xor
in
add
add
inc
add
in
and
jecxz
outsb
rol
add
test
cmp
mov
les
les
cmpsl
out
add
divl
xor
mov
pop
mov
add
add
bound
mov
add
add
mov
lret
push
inc
add
cmp
inc
xor
stos
sbb
mov
mov
push
add
aam
jp
add
adc
xlat
pop
out
int
dec
stos
testl
int
loope
add
mov
cmpsb
add
pop
je
mov
add
add
xchg
add
and
mov
dec
and
mov
add
add
pop
loop
sbb
add
add
add
xlat
push
add
sub
sbb
mov
pop
adc
fcomp
push
sub
push
aam
mov
sub
mov
add
add
pop
rolb
or
lret
repz
pop
xor
cwtl
sbb
add
add
add
cli
push
push
lds
int3
sbb
cmp
mov
insl
movl
fildll
lds
add
add
sbb
std
jle
jg
add
add
insb
call
shrl
add
testb
data16
icebp
xchg
je
xor
aas
in
aaa
jb
xor
lret
jnp
add
add
mov
ret
add
popf
mov
outsb
daa
rolb
add
xor
add
pop
lahf
sub
add
sbb
scas
out
fnsave
lock
add
mov
sub
mov
stos
adc
add
mov
add
add
les
or
xchg
aas
je
fbstp
jge
add
ja
add
add
in
int3
out
mov
cld
movsl
int3
stos
add
add
mov
mov
rolb
in
mov
add
dec
movsb
add
add
add
pop
rolb
push
sbbl
int3
sahf
inc
stc
lds
add
add
scas
push
add
cmp
das
push
sbb
cs
xchg
add
mov
fisttpll
pop
or
mov
iret
pop
ret
xchg
cmp
das
mov
push
fwait
inc
add
add
out
xchg
xor
mov
popa
cmp
push
push
mov
dec
cmp
addr16
add
aam
movsbl
shll
xchg
adc
ret
mov
mov
add
mov
and
adc
mov
sti
mov
mov
inc
add
das
or
jmp
add
add
push
add
mov
repz
add
add
add
pop
jge
adc
inc
add
cmpsl
testb
movb
aaa
dec
mov
xchg
add
push
add
sub
out
jge
loope
add
or
idivl
mov
test
add
add
add
lret
add
add
rolb
add
add
add
sbb
mov
imul
xor
mov
jns
adc
jns
dec
or
mov
add
fwait
leave
jg
add
xchg
add
and
das
stos
sti
jle
mov
in
pop
lret
cmp
add
add
ret
add
cltd
sbb
add
test
add
mov
push
add
add
add
ds
pop
les
aam
test
mov
cmpsb
add
jo
daa
in
rdmsr
add
xchg
adcl
cli
cs
mov
jle
sbb
add
add
dec
jae
xchg
das
in
add
outsl
mov
add
xchg
add
pop
mov
addb
bound
mov
mov
mov
nop
add
sbb
mov
nop
add
and
mov
add
arpl
inc
inc
add
loope
icebp
and
inc
add
add
or
add
and
xchg
add
lods
xchg
add
mov
add
icebp
add
mov
add
add
add
pop
pop
or
mov
movb
add
jae
add
add
in
dec
les
jle
fcmove
cmp
push
add
add
add
jmp
jge
add
mov
mov
aaa
pusha
add
mov
add
loopne
or
or
dec
lahf
jne
in
add
stos
and
bound
mov
imul
adc
sbbl
sub
jae
mov
movsb
add
arpl
and
clc
mov
push
add
stc
jmp
mov
test
xor
add
test
iret
test
add
pop
cmpsb
add
add
push
xchg
and
mov
add
add
add
addb
aad
add
xchg
ffreep
add
mov
push
and
rolb
addr16
add
and
mov
mov
outsl
lods
jmp
cmp
ficoml
call
add
shll
mov
bound
mov
jg
add
add
add
add
push
add
pop
fisttpl
lock
das
in
inc
jo
dec
sbb
add
cli
jb
inc
nop
add
mov
mov
popa
mov
nop
add
mov
and
insb
push
add
inc
scas
repz
ret
sbb
movsb
add
and
jmp
mov
data16
iret
mov
js
add
add
leave
cmpsb
add
cmpsb
add
add
sub
test
jo
xchg
add
mov
gs
jo
adc
add
add
jl
push
add
out
scas
sub
add
add
add
jge
inc
pop
xchg
mov
call
inc
add
jle
mov
add
add
add
aas
push
add
add
fwait
mov
rolb
add
out
add
jae
push
inc
mov
sbb
add
pop
jae
addb
loope
add
ret
xchg
mov
dec
pop
or
rcl
loope
add
mov
add
jbe
jns
dec
or
mov
sub
imul
jmp
dec
call
pop
mov
mov
mov
xchg
pop
addb
add
add
mov
push
add
dec
or
stc
cmp
add
add
add
shr
sbb
add
add
pop
pop
popf
call
and
and
mov
add
inc
add
repz
sub
mov
push
imul
and
fistpl
jae
add
mov
inc
add
dec
negl
scas
dec
ficoms
cmp
scas
jns
pop
mov
fnstenv
push
add
pop
in
mov
orl
repz
xchg
add
int3
xor
and
andl
add
rolb
in
pushl
add
jb
cmp
loopne
enter
test
xor
out
in
in
adc
add
add
testl
cmp
add
mov
xchg
add
mov
sub
add
xor
addb
add
mov
sub
aam
movb
in
add
or
or
inc
stc
inc
add
lea
add
mov
xchg
add
popf
mov
xor
test
sbb
xor
rolb
pop
mov
cwtl
rolb
xchg
add
add
mov
add
adc
dec
in
xchg
cmp
adc
push
add
rcr
sbb
subl
add
leave
mov
jne
add
sbb
push
add
int3
fwait
dec
test
pop
sub
hlt
add
add
mov
and
or
les
sub
mov
pop
pop
ljmp
and
mov
std
lahf
loop
mov
andl
addb
and
xchg
add
les
out
push
add
add
sub
dec
in
and
mov
clc
dec
push
cmpsb
add
cmp
adc
icebp
pop
xlat
cmp
jns
pusha
add
lret
sub
add
fs
add
cmp
add
sub
add
mov
out
inc
iret
sbb
push
add
stc
push
add
or
add
ror
ret
dec
adc
sub
add
cmc
pop
adc
sbb
inc
add
mov
add
jnp
out
mov
rolb
in
mov
test
pop
push
add
addl
add
add
lock
add
add
into
stos
out
adc
mov
adc
cs
and
add
cltd
cmp
pop
jns
or
data16
adc
add
lds
inc
add
adc
xchg
add
jge
out
push
test
es
mov
addb
push
adc
mov
add
adc
in
sub
add
add
cli
fisttpl
xchg
add
and
adc
in
cltd
mov
and
mov
mov
push
lcall
add
xchg
add
sbb
outsb
test
test
mov
fcomps
mov
xor
fists
jbe
rolb
add
fistpl
xor
jae
add
das
mov
mov
add
add
gs
jmp
add
add
mov
cmp
jo
cs
das
out
dec
aad
add
mov
add
aad
leave
stos
dec
gs
call
or
clc
clc
lcall
add
push
add
mov
xor
loopne
mov
add
lods
lds
jecxz
fcmovne
push
test
nop
add
std
mov
add
add
add
addb
adc
in
xchg
jle
xlat
jbe
sbb
es
add
rolb
add
dec
dec
push
xor
ss
add
add
mov
mov
insl
xlat
push
add
arpl
add
or
fstpt
cmc
jmp
push
add
dec
popf
stc
rolb
add
jle
add
data16
add
mov
out
jecxz
inc
dec
pop
push
and
add
addb
add
insb
icebp
sbb
add
xor
addl
adc
sub
add
lcall
add
cmpl
add
add
sub
outsb
rorl
add
or
movb
add
mov
cwtl
xchg
xchg
add
jecxz
clc
cmpsl
aaa
push
mov
call
sar
repz
lds
out
dec
push
cmp
call
lahf
mov
shl
push
popf
jmp
jmp
add
add
add
adc
sub
sbb
pop
push
add
mov
rolb
lret
inc
push
add
jmp
add
sbb
mov
ret
sbb
mov
mov
cmp
add
mov
pop
sbb
adc
push
add
add
pop
add
mov
add
cmp
add
add
pop
popf
mov
pop
in
lods
mov
add
dec
jno
push
out
add
add
add
adc
jg
xor
inc
add
jle
outsb
cwtl
pusha
add
push
mov
fimull
add
fisttps
push
add
iret
push
mov
icebp
xchg
add
mov
cmpsl
push
add
in
and
test
add
mov
rolb
sbb
mov
add
jge
jmp
lock
add
adc
cmpsl
call
fidivs
add
add
repnz
xlat
pop
jecxz
mov
lcall
add
arpl
jbe
pop
out
mov
pop
sbb
add
aad
stc
mov
call
xor
call
add
add
hlt
add
add
daa
xchg
pop
lods
mov
add
fsubr
xchg
add
hlt
add
loop
add
popa
mov
sub
push
add
add
push
outsb
dec
xchg
out
push
jne
add
add
mov
fldenv
jle
testb
loopne
lods
mov
cld
mov
mov
pop
cmpsl
test
mov
jnp
call
jnp
jl
and
lret
mov
or
add
add
imul
jb
loopne
in
and
add
dec
pop
or
jne
or
pop
data16
mov
mov
add
add
dec
cltd
adc
mov
add
jg
pop
in
dec
inc
add
add
icebp
popa
add
in
pop
cli
ret
dec
dec
cmpsl
in
imul
sub
ret
in
cwtl
stos
iret
mov
fnstcw
mov
js
push
nop
add
inc
add
nop
add
mov
add
cltd
adc
gs
xchg
add
sub
xor
leave
jns
jnp
sbb
add
push
addb
fldln2
testb
mov
jns
ja
add
outsl
outsl
mov
jl
sbb
int
xchg
lds
add
mov
add
mov
add
cmp
push
sbb
xchg
add
aas
rcrl
add
aaa
cld
or
add
loope
add
ret
jne
fistl
add
add
sti
lret
je
in
add
add
mov
add
jl
push
jns
xchg
sub
pop
sbb
add
add
dec
fnstcw
lret
imul
and
mov
mov
iret
data16
cmp
mov
lock
rolb
jg
push
mov
std
xchg
int
aaa
ja
int
dec
mov
pop
lret
lret
add
mov
sahf
jmp
arpl
cmp
mov
mov
add
cmpsb
add
add
add
lret
mov
jno
sub
xchg
add
and
add
add
inc
add
or
repz
decb
add
inc
add
mov
cmp
mov
divl
add
xor
imul
pop
push
movsb
add
fistpl
into
movsl
lock
add
add
add
ds
add
add
mov
add
cltd
pop
in
mov
leave
or
stc
repnz
push
add
add
jae
push
dec
enter
add
movsb
add
cmpsl
pushf
int3
and
or
dec
cmp
and
push
add
add
iret
lret
sub
mov
add
add
fmull
stc
mov
inc
add
sbb
add
mov
test
add
mov
int
ljmp
dec
roll
pusha
add
add
add
mov
sub
mov
add
add
pop
fistl
rep
adcl
addr16
cmc
pop
int
mov
mov
add
or
mov
out
clc
add
inc
mov
add
add
jns
add
add
leave
js
add
mov
jb
cmp
bound
mov
xor
hlt
add
add
mov
movd
jno
add
cmpsl
insl
sti
add
clc
mov
rolb
mov
add
mov
add
rolb
sub
add
mov
mov
add
inc
cmp
lods
dec
or
movsb
add
add
outsb
test
insb
imul
inc
add
add
test
add
fnstsw
add
pop
outsl
lcall
push
add
lahf
push
add
inc
adc
repz
pop
mov
movsl
mov
sahf
outsb
inc
add
add
lahf
mov
add
hlt
add
jp
insl
fisubl
mov
mov
ja
add
add
push
add
mov
add
inc
rorl
arpl
sub
and
mov
add
adc
adc
adc
aad
cmc
rolb
push
add
testl
or
mov
add
jge
fildll
lahf
in
jmp
fistl
add
mov
cmpsb
add
mov
push
fldcw
shl
xor
jnp
inc
add
mov
addb
add
add
add
adc
push
adc
pop
and
add
or
frstor
add
loopne
pop
push
add
push
rcrl
scas
pop
inc
rolb
mov
shll
add
lock
add
sbb
dec
mov
js
ljmp
add
enter
add
mov
out
cwtl
and
pop
mov
and
mov
add
mov
les
int
add
mov
pop
mov
add
mov
lret
rcll
sbb
lret
data16
test
push
add
add
add
add
mov
fimuls
cmp
jg
add
je
iret
inc
add
stmxcsr
scas
aas
sub
scas
jne
cmp
and
mov
xchg
add
add
js
cmp
mov
in
mov
mov
jg
in
ds
add
ss
int
add
fs
and
popa
add
test
test
jg
lds
scas
xchg
movsb
add
jnp
add
add
lcall
add
mov
add
rcll
jb
popa
arpl
add
xchg
addb
fildl
fistps
imul
xchg
fwait
icebp
fld
jo
push
int
lret
addb
xlat
jnp
aaa
and
add
sbb
outsl
loop
lea
sbb
lret
fwait
iret
xor
add
cmp
stos
std
psubd
dec
or
ljmp
xorl
jecxz
add
pop
bound
mov
add
push
cmpsb
add
add
add
addr16
icebp
aas
cmc
inc
pop
dec
inc
add
push
add
adc
xor
sbb
push
ret
add
into
sbb
mov
add
fstl
insb
std
das
push
pop
loopne
add
out
int
add
test
out
jmp
pop
mov
dec
xor
test
insl
sbb
jp
aam
les
rolb
mov
pop
sub
lcall
mov
subl
add
add
add
sbb
rolb
add
ret
mov
dec
pop
bound
mov
dec
push
add
add
jae
add
rolb
push
add
sbb
sub
add
mov
sub
add
and
loope
add
data16
arpl
add
add
mov
ljmp
cmp
testb
and
push
xchg
add
xor
add
js
inc
mov
add
sub
mov
add
push
outsl
mov
mov
inc
call
sar
add
add
jmp
imul
ret
out
loop
lret
pop
fmuls
arpl
das
pop
cli
mov
mov
add
je
repnz
add
jl
mov
add
add
mov
inc
shll
mov
mov
mov
pop
nop
add
lret
jecxz
in
sub
in
jg
add
push
add
test
add
mov
test
insl
add
mov
out
movsl
fsts
mov
xchg
addb
add
push
xchg
add
dec
insl
pop
xchg
lcall
add
adc
cmp
pop
lret
fnstenv
mov
data16
xchg
jo
xchg
add
push
add
pop
lahf
push
add
adc
in
push
pop
pop
mov
push
and
mov
nop
add
xor
xchg
add
add
add
cmpsl
jns
add
add
loop
lods
test
ljmp
rolb
mov
add
push
xchg
add
mov
add
iret
lret
rep
fxch
push
mov
add
popa
cmpsl
add
cli
and
mov
add
cmp
add
lods
aam
push
add
bound
mov
std
mov
or
add
insb
loop
mov
fwait
out
cmp
out
sub
out
add
add
inc
test
push
add
rcll
add
and
mov
add
mov
out
pop
clc
or
outsb
movsb
add
and
mov
out
dec
add
stc
in
push
popf
adc
rolb
cmp
bound
mov
rcll
mov
add
mov
mov
xlat
cmp
inc
add
xchg
xorl
add
add
enter
add
jnp
add
arpl
enter
add
lret
and
and
mov
cmc
in
inc
cwtl
jl
add
gs
rorl
insl
into
xor
pop
pop
fisttpl
lods
test
lret
push
cwtl
ja
mov
imul
xchg
add
ja
push
icebp
and
jge
jb
xchg
add
add
icebp
adc
xchg
scas
jp
add
add
sar
cvttps2pi
xor
mov
add
insl
push
xlat
aam
pop
add
xor
add
mov
add
xchg
jl
add
jne
enter
add
mov
mov
leave
in
lds
add
add
js
xor
push
add
add
jae
push
xchg
mov
add
sbb
test
cmp
andl
inc
cmp
ds
mov
add
std
xor
sub
cs
push
add
mov
or
add
loope
mov
add
in
movsl
loop
bt
push
and
cmpsl
iret
cmp
add
outsb
out
nopl
addb
add
out
into
aad
cmp
jl
add
add
pop
jbe
std
rolb
or
pusha
add
aaa
pusha
add
push
out
ljmp
das
xchg
fldcw
xor
sub
iret
insl
jle
fsubrl
mov
cmpsl
push
add
mov
jl
add
add
push
inc
rolb
test
lret
adc
in
insl
mov
int3
inc
mov
jp
add
xchg
push
mov
lahf
mov
dec
cmp
push
or
mov
add
cmp
mov
add
mov
ret
pop
loopne
cmp
and
sbb
aad
pop
decb
adc
push
add
mov
add
loope
js
xchg
je
adc
ljmp
add
push
add
inc
add
push
addb
jbe
inc
sbb
loopne
fs
scas
xchg
jnp
call
js
scas
cmp
add
cmpsb
add
lret
lcall
ss
push
add
and
and
add
in
push
add
mov
cmp
int
mul
add
mov
addb
mov
rolb
popa
lret
mov
adc
insl
addr16
in
sbb
dec
inc
add
mov
add
je
add
sub
add
sahf
or
add
rolb
adc
test
cwtl
cld
xchg
das
and
mov
rolb
add
out
or
fucomi
mov
add
jnp
xor
mov
mov
aad
add
add
pop
es
xchg
test
or
mov
fdivp
icebp
fwait
inc
mov
add
xchg
add
popf
je
mov
adc
dec
adc
rolb
dec
addb
jecxz
pushf
sbb
pop
xchg
add
test
add
jne
adc
mov
inc
fdivp
add
add
pop
out
add
xchg
xor
jp
jg
ret
add
cltd
lods
test
push
add
add
outsl
or
and
add
and
mov
add
mov
gs
inc
add
out
inc
add
sbb
add
add
add
adc
pop
fwait
stos
dec
addr16
das
sub
insb
sub
aas
xchg
xchg
add
add
scas
shll
sub
add
push
add
xchg
cmpsb
add
and
push
push
add
add
mov
ljmp
push
faddp
or
and
add
in
addb
add
dec
add
ret
jg
add
call
add
sub
add
mov
inc
mov
mov
dec
dec
jmp
inc
leave
outsl
cmp
add
mov
xchg
add
mov
stos
popf
mov
add
addr16
fwait
dec
pop
xchg
popf
add
add
adc
pop
lds
add
fistps
add
jb
mov
add
fnstenv
add
xor
inc
add
sbb
rolb
mov
add
push
add
adc
xchg
push
add
out
mov
fidivl
add
lock
or
adc
xor
add
add
mov
fisubl
pop
push
add
leave
xor
sub
jmp
in
and
jnp
xor
inc
adc
adc
push
add
fstps
add
outsb
jnp
or
imul
add
je
mov
lahf
jb
add
loopne
inc
xor
mov
aad
or
xchg
add
push
add
flds
add
iret
mov
cmp
or
movl
aaa
adc
mov
push
add
out
and
mov
loope
add
test
add
dec
xor
das
test
jp
add
ret
pop
mov
sbb
add
sub
jg
add
adc
cmc
das
xchg
jl
inc
dec
pop
sbb
xor
dec
divl
jo
pop
iret
and
mov
dec
movb
add
xor
inc
add
jne
repnz
mov
je
incb
in
sti
aam
movsb
add
add
test
sbb
mov
add
daa
sti
mov
addb
add
add
add
out
add
mov
add
mov
shll
add
add
add
repnz
add
rcll
adc
add
add
sbb
xor
sbb
add
adc
push
add
push
add
mov
add
mov
loop
dec
test
xor
fstp
push
fcompl
cmp
addb
cmpsb
add
jmp
mov
add
out
pusha
add
add
push
inc
push
add
lods
or
add
jno,pt
pop
sbb
fwait
fs
cmp
lret
insl
push
dec
cltd
mov
je
push
add
in
push
jle
pop
xchg
add
add
shll
add
add
mov
cwtl
xchg
out
push
bswap
jp
call
inc
add
pushf
pop
add
add
jle
xor
ret
mov
pop
push
popf
adc
sub
push
add
test
cltd
xlat
out
mov
mov
xlat
xlat
rcl
mov
inc
mov
sti
fwait
dec
out
xchg
add
cmc
add
insl
sbb
add
mov
ret
mov
mov
and
inc
leave
pop
xorl
xor
or
push
int3
insb
in
mov
das
popa
and
ljmp
pop
pushf
lahf
add
sub
add
in
push
jbe
mov
icebp
jle
or
sahf
mov
fistpl
daa
decb
push
loopne
cmp
mov
jns
add
dec
mov
add
add
add
add
mov
mov
jb
jns
ja
jno
rolb
add
adc
sub
bound
mov
mov
xor
push
pop
jnp
jmp
add
sub
nop
add
ss
add
mov
mov
add
das
mov
add
hlt
add
add
daa
push
add
jl
daa
inc
add
ljmp
sti
pop
cmp
add
mov
add
push
add
mov
cmp
addb
fcmove
adc
daa
arpl
je
arpl
inc
add
add
imul
mov
pop
and
add
lret
jne
add
loopne
pop
sub
or
add
mov
or
add
mov
out
cltd
adcl
xchg
pop
inc
add
and
pop
inc
add
iret
sbb
dec
add
push
xchg
add
int
mov
orl
add
push
add
sub
push
and
mov
add
into
mov
and
pushf
cld
pop
mov
push
add
inc
xchg
add
add
add
pusha
add
dec
xchg
and
add
cld
test
dec
jl
out
in
add
inc
add
repz
adc
out
and
sti
sbb
or
add
adc
mov
arpl
add
adc
in
bound
mov
repz
pop
stos
adc
mov
push
sub
lea
push
add
aam
aas
adc
inc
movsb
add
add
or
mov
dec
test
add
add
rolb
pop
call
fs
sub
ret
out
cmp
ret
push
add
loope
lock
into
shr
decb
mov
add
jb
cmp
add
add
add
add
fiaddl
insb
cltd
xor
pop
push
jnp
popf
loope
add
mov
push
add
add
add
mov
add
mov
jae
test
iret
outsl
inc
add
ljmp
dec
movsl
lahf
call
inc
add
and
mov
add
mov
stc
inc
add
sbb
add
aam
fcmovnu
sbb
push
add
addr16
adc
xor
cli
fisttpl
add
dec
dec
movb
jbe
dec
and
mov
add
add
mov
call
out
shr
cmp
push
lods
xor
cmp
repnz
test
lret
mov
mov
cmp
lcall
jo
dec
and
mov
cmp
add
ficomps
add
sbb
addl
lcall
test
xchg
in
mov
pandn
add
in
aam
hlt
add
mov
data16
pusha
add
rolb
bound
mov
push
add
iret
inc
jmp
add
enter
cli
cmc
push
add
xchg
xor
mov
imul
testb
sbb
shrl
inc
pusha
add
bound
mov
add
add
mov
mov
add
inc
lea
in
xchg
jnp
test
jbe
test
in
out
lret
mov
add
test
mov
add
add
mov
outsb
addb
loopne
js
add
add
in
arpl
push
add
inc
mov
add
add
int3
add
roll
testb
addb
add
xchg
add
push
fisttps
mov
xchg
pop
cld
mov
push
xchg
add
add
out
lret
push
add
mov
lds
dec
cmp
in
add
aad
add
iret
dec
push
mov
sbb
add
add
xor
sbb
inc
imul
add
add
arpl
cmp
add
mov
inc
add
cmp
incb
add
cmpsl
sti
imul
add
pop
rolb
mov
cli
push
add
add
fisubrl
addb
push
add
add
add
add
add
add
cmp
add
cltd
outsl
pop
in
cld
or
outsl
push
add
repnz
xor
add
pmulhuw
inc
dec
xor
add
adc
sbb
testl
pop
pop
inc
add
insb
sub
push
add
leave
adc
stos
xchg
std
stos
jae
aam
std
push
sub
mov
ljmp
add
in
sbb
inc
add
adc
aas
adc
add
add
pushl
add
mov
xchg
pop
adc
push
add
push
add
add
add
popa
fdivl
dec
es
add
add
mov
rol
adc
add
add
add
add
add
hlt
add
inc
add
in
mov
mov
add
mov
rolb
adc
fdivrs
add
add
add
xor
es
add
mov
cli
mov
cwtl
jbe
adc
inc
add
mov
dec
xchg
lret
adc
pushf
add
mov
mov
in
fistps
cmpsl
lcall
add
pop
adc
sub
addr16
adc
sub
repz
mov
inc
add
rcll
add
mov
mov
sub
mov
add
add
mov
cmc
xor
adc
cmpsl
sbb
adc
and
push
ss
add
add
test
mov
jmp
add
xchg
and
or
add
pop
rolb
xchg
testb
out
fcomps
mov
sub
adc
xor
add
add
xchg
add
push
add
add
data16
and
adc
test
lock
mov
in
sbb
add
add
pop
mov
sub
dec
jb
dec
ficomps
mov
mov
imul
lds
adc
cld
ss
mov
arpl
jmp
push
add
add
out
or
add
data16
pop
dec
mov
in
add
mov
pop
faddl
add
test
ja
add
scas
test
add
iret
xlat
mov
adc
rolb
mov
js
fidivs
mov
rcrl
addb
add
add
int3
lods
add
mov
push
add
lea
mov
add
add
repnz
jmp
cmp
add
ljmp
pop
xchg
sbb
add
push
add
fistpll
add
mov
add
mov
push
add
jno
add
mov
mov
add
add
jle
jge
mov
nop
add
and
mov
std
mov
add
out
shll
add
push
dec
mov
add
mov
aad
and
mov
mov
xor
add
mov
mov
add
pop
jae
xchg
add
sub
add
jmp
adc
pushf
dec
std
xor
stc
mov
adc
test
je
jne
repz
dec
mov
mov
cmp
outsl
add
data16
jecxz
iret
push
add
test
push
dec
loopne
out
pop
pop
jecxz
mov
cmp
xor
add
and
jle
add
add
mov
push
add
pop
push
xchg
add
or
mov
add
lods
lret
mov
pop
movsl
dec
movsb
add
loope
cmp
mov
add
mov
mov
add
adc
daa
addb
rolb
stos
std
imul
add
insb
jge
add
fiaddl
and
mov
add
lock
test
sbb
fimull
sti
sti
ret
loope
add
xchg
clc
fdivrs
add
mov
dec
mov
jb
mov
imul
add
mov
mov
push
pop
sbb
loope
add
and
push
add
add
add
sahf
icebp
and
mov
jmp
push
add
dec
jbe
jne
add
xchg
add
arpl
xor
dec
ja
rolb
lods
and
mov
add
sti
sbb
je
push
add
add
adc
mov
dec
scas
push
cmp
cmp
mov
add
insb
inc
add
addb
add
add
out
inc
add
add
rolb
bound
mov
and
call
mov
roll
dec
mov
rolb
adc
mov
add
mov
sbb
negl
mov
ljmp
jae
add
add
in
add
out
xor
loopne
les
loope
add
mov
mov
add
cmp
add
bound
mov
inc
je
jmp
into
pop
bound
mov
rolb
lret
add
out
mov
cmp
inc
add
rolb
fwait
mov
add
lret
les
dec
sbb
add
add
sbb
xor
mov
mov
add
add
jb
andl
add
add
mov
add
mov
mov
das
movb
mov
repz
mov
pusha
add
add
adc
in
addl
stc
js
push
mov
mov
add
lret
imul
xchg
test
clc
outsb
test
add
add
sti
test
mov
in
enter
mov
loope
call
push
enter
jmp
mov
out
add
mov
fcoms
test
movb
aaa
adc
push
add
mov
add
add
rolb
nop
add
mov
add
xor
sbb
mov
add
jmp
add
pop
add
inc
push
add
test
jg
les
push
push
stos
mov
mov
add
dec
mov
add
mov
add
add
add
fcoml
push
add
add
add
xchg
jge
and
and
aas
mov
and
dec
test
lock
orl
add
mov
lret
push
add
add
sub
imul
add
adc
dec
inc
add
sub
inc
and
mov
add
sub
or
stos
dec
inc
add
add
inc
aaa
lcall
data16
jge
cmp
push
add
std
jmp
add
xor
push
add
cmp
leave
cli
mov
add
xchg
jns
add
add
fyl2x
sbb
rcl
out
clc
and
add
add
add
in
in
lods
dec
cltd
xchg
call
cmpsl
fidivs
push
add
add
add
add
add
call
cmp
add
fcmovnbe
inc
mov
mov
fstps
push
add
add
cmp
mov
add
iret
sti
xchg
add
add
mov
mov
add
mov
add
addr16
lcall
inc
mov
sbb
mov
mov
stc
jl
repz
dec
fcoms
pop
lea
mov
imul
add
inc
add
xor
xchg
sub
mov
add
add
or
test
add
pop
sub
out
aas
push
xchg
dec
aaa
mov
enter
imul
xchg
add
xlat
stc
mov
push
xchg
or
aas
lahf
push
data16
and
ljmp
inc
dec
aaa
fldcw
lds
pop
jmp
add
jne
add
add
dec
or
add
fidivl
sub
add
or
sbb
or
add
dec
in
mov
add
xchg
fsts
jne
loope
lods
push
add
inc
push
fdivr
pop
fdivrl
add
inc
cmp
dec
loopne
xor
fistl
movb
fwait
cmp
repnz
gs
popf
addb
shr
cmpsl
push
fwait
addr16
leave
mov
nop
add
test
repnz
shll
stos
fistl
sbb
ss
add
or
add
add
aam
sbb
pop
push
addl
add
dec
add
je
adc
mov
xchg
stc
cltd
repz
daa
xchg
aam
leave
jbe
inc
add
cmp
xor
and
jns
dec
push
add
sbbl
xor
push
jae
mov
mov
jecxz
add
sbb
lds
add
mov
mov
gs
add
mov
in
pop
stos
nop
add
fcomps
dec
and
xchg
out
dec
std
or
xor
fldcw
jp
dec
inc
add
add
sbb
add
out
add
pop
push
add
sbb
or
mov
fxch
jg
int3
scas
bound
mov
cwtl
aaa
push
xor
scas
mov
xchg
test
add
pop
sub
cmp
int3
gs
cld
jl
cld
mov
dec
mov
add
add
mov
add
aam
add
mov
cltd
addb
stos
fisubs
jge
add
mov
cmc
jnp
add
xchg
add
add
dec
mov
push
add
mov
xchg
rolb
jg
lahf
ret
add
sub
add
cmp
in
mov
and
test
adc
clc
gs
rcrl
add
add
addb
sub
sub
addr16
pushf
js
add
jns
add
ljmp
mov
xor
xchg
ret
jno
mov
mov
popa
push
add
rep
das
mov
xchg
xlat
lret
inc
add
push
add
xchg
jg
loopne
lds
loop
jb
lret
lods
fsubr
leave
or
jle
decb
add
mov
lcall
xorl
add
xor
inc
add
bound
mov
and
mov
nop
add
mov
lret
cmp
in
sbbl
jge
add
adcl
mov
hlt
add
popa
data16
mov
add
add
pop
xlat
orl
jo
add
add
add
cmp
adcl
das
mov
outsl
cmp
mov
jb
popf
jno
mov
add
mov
test
and
nop
add
jp
call
add
jo
data16
jecxz
mov
in
mov
push
add
adcl
in
inc
add
add
lock
mov
dec
and
adc
mov
push
add
push
mov
add
sub
jg
mov
addb
fcmove
cltd
mov
add
lods
sub
push
add
test
loope
add
movb
add
pop
push
mov
push
fucomi
std
pop
lods
adc
xchg
push
sbb
addb
jbe
sti
push
add
fists
add
dec
push
add
rolb
imul
push
pop
mov
pusha
add
add
push
add
mov
out
jl
add
inc
mov
fdivrl
pusha
add
add
pop
imul
inc
add
fwait
lahf
mov
add
add
nop
add
testl
pop
ljmp
cmovae
aam
sbb
lock
add
add
add
add
pop
jmp
sti
in
bound
mov
add
jno
add
mov
sti
lret
mov
fisubl
pop
aam
xor
or
add
mov
add
add
jnp
add
bound
mov
mov
das
add
push
add
add
fwait
jb
jmp
mov
add
add
inc
dec
int3
clc
and
mov
clc
addr16
mov
in
and
jne
sbb
sbb
pushf
fisttpl
pop
add
add
push
inc
add
add
and
push
jno
pop
and
pop
aam
push
jno
cmc
popa
loopne
addb
add
cmpsb
add
add
add
or
add
add
loope
push
cwtl
cmp
add
les
lea
cmpsl
insb
add
mov
testb
add
sub
test
mov
pop
jg
cmp
add
add
xor
clc
rolb
jmp
adc
popa
lea
add
mov
testb
test
add
dec
inc
and
and
int3
jbe
sbb
add
rolb
hlt
add
cmp
mov
cwtl
and
add
mov
mov
add
in
rolb
outsl
mov
add
loopne
sbb
in
imul
mov
jne
loop
in
pop
push
add
mov
or
pushf
adc
int3
in
dec
das
mov
inc
js
inc
scas
jns
imul
mov
in
lods
in
xor
les
cmp
push
add
scas
loop
add
ds
aaa
iret
push
add
pop
rolb
or
xchg
add
les
ret
shll
jecxz
jo
xor
push
add
xorl
add
mov
xor
mov
pop
xchg
aas
mov
add
hlt
add
inc
xchg
add
add
pop
insl
add
mov
pop
cmp
rolb
lahf
cli
pop
adc
imul
inc
xor
push
movsl
mov
and
mov
movb
addb
lcall
adc
movb
push
mov
or
xor
push
add
loop
dec
cmc
push
cmp
inc
xor
inc
add
das
dec
insl
or
les
scas
repnz
rolb
into
test
iret
rolb
add
in
xor
and
add
add
push
xor
sbb
or
aaa
mov
dec
out
out
add
mov
add
lods
hlt
add
adc
add
mov
or
and
and
adc
aaa
and
add
movb
add
or
xchg
add
mov
stos
movsb
add
dec
movb
add
add
sahf
cs
adc
aad
outsl
addr16
add
lods
popa
movb
jecxz
int
mov
push
addb
push
sbb
xchg
xchg
mov
andl
sub
jge
leave
aas
push
cmp
mov
xor
jns
mov
loopne
mov
mov
fcoms
add
test
adc
cld
addb
lcall
mov
les
adc
add
xor
sti
negl
jns
dec
jg
nop
add
sbb
pop
scas
pop
andl
in
sti
lret
cmc
sbb
mov
jcxz
rolb
pushf
addb
lcall
add
mov
cli
js
add
pop
lods
je
fdivrl
dec
lcall
pop
das
ljmp
add
dec
ficompl
leave
loopne
rolb
add
add
test
cld
inc
cmp
mov
jb
pop
cmc
mov
adc
adc
icebp
pop
xor
int
push
add
add
pop
mov
fidivl
add
stc
dec
gs
sbb
bound
mov
add
popa
inc
add
mov
and
mov
or
cmp
mov
jg
cmpl
add
fsubs
mov
and
mov
out
mov
add
mov
jae
add
jae
add
das
or
pop
mov
add
test
add
jno
or
cmp
lods
push
add
mov
daa
lcall
aam
add
or
aad
cld
fldlg2
and
mov
pop
stc
aas
sub
add
push
push
movsl
out
sbb
add
ja
add
popf
sbb
add
add
push
adc
or
sahf
fcmovnu
pop
movsb
add
dec
rolb
xlat
dec
stc
fisubrs
scas
cmp
mov
add
add
sbb
imul
bound
mov
fildl
sarl
sahf
xor
mov
push
add
test
jecxz
imul
sbb
xor
pusha
add
mov
add
mov
cwtl
xchg
fsubrs
add
cmpsl
xchg
hlt
add
push
add
and
lret
gs
pop
sbb
push
add
xor
add
mov
xor
add
pop
mov
dec
xor
mov
inc
mov
scas
std
xor
push
xor
adc
popf
addb
mov
inc
rolb
ret
or
inc
test
mov
add
add
add
inc
add
xchg
mov
cltd
lahf
lods
test
xchg
add
mov
push
add
add
mov
pop
fisttpl
and
mov
ljmp
test
inc
jge
pop
movsb
add
add
mov
push
add
bound
mov
add
cmp
add
add
popa
nop
add
add
push
dec
repnz
js
cmc
push
add
jmp
mov
pop
in
std
outsl
lret
adc
add
mov
inc
add
add
add
or
in
cld
loop
les
mov
inc
add
add
add
add
add
mov
aas
mov
test
addb
ds
sbb
inc
pop
fisttps
cmp
add
add
push
data16
add
or
sub
add
mov
jne
mov
scas
ret
call
int3
pop
mov
and
sbb
sbb
movsb
add
jle
add
adc
jecxz
add
push
lods
jl
mov
in
pop
xchg
add
jne
sbb
add
push
add
loop
jne
add
xchg
add
add
add
dec
and
out
movsl
sbb
adc
pop
fidivl
icebp
jb
rolb
xchg
mov
inc
add
inc
mov
add
mov
pushf
push
not
xor
add
xorl
mov
orl
add
and
mov
jno
insl
jp
jne
jp
scas
ret
push
imul
add
pop
test
mov
push
add
add
mov
sbb
lods
xor
movb
outsb
arpl
inc
xchg
add
leave
pop
mov
push
inc
add
lcall
cmp
movsb
add
mov
in
aaa
xor
xlat
xchg
add
add
mov
add
addr16
pop
lahf
in
dec
cmovnp
add
push
mov
leave
mov
imul
pop
inc
repnz
loop
inc
add
and
js
cltd
push
add
jmp
add
loop
std
int3
mov
das
negl
out
add
add
xchg
mov
add
cmp
mov
xchg
add
in
mov
xlat
adc
inc
ret
add
dec
cs
in
arpl
add
add
ret
into
mov
push
add
or
enter
mov
add
adc
xchg
jge
nopl
xor
addb
cmp
mov
cwtl
sub
mov
pop
outsl
scas
daa
jg
add
add
aaa
pop
stos
sti
inc
add
add
mov
add
pushf
lret
ret
add
out
cmp
add
push
add
add
and
mov
sub
incb
jnp
add
push
add
rolb
clc
loop
mov
repnz
push
adc
sub
outsb
mov
jl,pn
xlat
fs
dec
popf
and
mov
sbb
xchg
enter
pop
out
je
cwtl
jmp
mov
mov
stos
add
ja
add
ret
adc
jbe
pop
data16
lods
ret
test
xor
movsb
add
hlt
add
addb
jl
repnz
das
stos
sub
mov
rcr
hlt
add
jb
rolb
push
push
add
xor
jecxz
xor
xor
std
int
add
stc
xchg
xlat
cld
mov
add
int3
cmp
add
shl
add
pop
xchg
add
add
nop
add
jl
add
add
std
les
add
movb
add
mov
sahf
sub
pushf
and
pop
aas
pusha
add
and
add
sbb
add
pop
dec
leave
test
in
out
das
xor
movb
mov
cmpsb
add
add
sub
lcall
dec
dec
fisubs
add
or
mov
std
inc
add
add
pushf
pop
lret
mov
and
mov
rolb
push
xor
mov
pop
add
sbb
jg
add
add
adc
mov
or
mov
jg
jb
add
add
pushf
xchg
add
cltd
lret
rcll
pop
inc
add
mov
testb
hlt
add
addb
push
add
ds
add
jmp
add
outsb
lret
mov
hlt
add
push
add
sub
sub
cmp
mov
lcall
jno
add
push
dec
cs
xor
add
xorl
add
mov
xchg
inc
insl
and
fcoml
inc
add
mov
add
add
cmp
mov
push
adc
add
push
mov
adc
insl
mov
lea
add
fcomp
jl
pop
test
add
pop
rcrl
fwait
aas
addb
int
pop
scas
lods
dec
inc
and
mov
mov
pop
jl
and
mov
stos
xchg
add
rolb
mov
add
pop
mov
add
sbbl
add
in
cmp
repz
aam
jecxz
ret
pop
popa
push
add
add
add
add
dec
mul
add
mov
cld
mov
ljmp
add
mov
add
cwtl
cmp
aad
add
enter
add
testb
adc
insb
push
iret
fisubrl
mov
mov
mov
pop
push
add
enter
jl
cs
sti
mov
aas
sub
aaa
mov
lea
add
mov
pop
mov
mov
rolb
fdivrp
nop
add
cld
pop
add
add
or
add
xor
loopne
ljmp
add
push
enter
add
mov
jp
cwtl
and
push
add
call
add
add
add
add
push
add
adc
jl
pop
dec
pop
pop
clc
pop
or
cmp
jo
add
pop
mov
adc
cmp
int3
mov
inc
add
cmp
test
jns
fadds
fistpl
pop
cmp
add
add
adc
movsl
adc
pop
mov
cltd
into
jmp
add
fidivl
mov
add
pop
ljmp
push
add
add
xchg
add
mov
xor
sbb
stos
pop
in
scas
push
jns
add
add
mov
add
and
xor
add
jge
iret
stos
fisttpll
mov
fdivl
ljmp
xor
movsb
add
adc
cmp
add
cmp
or
and
mov
mov
mov
mov
mov
faddl
and
dec
sbb
add
add
les
push
cmp
lock
add
js
add
jl
add
cmp
fdivs
add
xchg
aas
movl
in
test
mov
add
mov
cwtl
sbb
fistpll
add
hlt
add
iret
or
or
ljmp
add
fists
add
iret
add
mov
test
cli
push
add
add
out
int3
int
fwait
lods
mull
add
jae
dec
addb
std
dec
mov
jae
xchg
mov
push
add
fdivl
add
ja
adc
std
int
aaa
push
cmp
out
pop
leave
dec
das
out
add
loop
in
ds
mov
dec
lods
adc
xchg
mov
ja
clc
mov
or
add
push
addr16
pop
add
mov
push
dec
mov
mov
xlat
into
popa
popa
pop
repnz
jnp
in
mov
mov
les
inc
add
adc
adc
adc
mov
ret
add
dec
dec
push
mov
or
in
pop
pop
in
mov
rcll
xor
int3
aad
shll
add
int
enter
push
jnp
fcmovb
add
or
imul
scas
jge
test
add
add
push
fucomi
data16
or
aam
stos
sbb
add
sub
cmp
sub
popa
pop
ret
push
lock
adc
jecxz
add
push
add
mov
and
mov
fwait
push
cmp
add
inc
test
add
add
mov
cmp
lods
adc
cmp
cmp
int3
jno
add
add
add
rorl
mov
movsb
add
mov
add
mov
orl
add
daa
or
add
add
mov
mov
in
push
clc
ffreep
add
push
in
push
add
mov
add
inc
add
rolb
cmp
dec
loop
or
jbe
stos
dec
add
pop
movsl
dec
inc
add
add
adc
mov
xchg
add
mov
loopne
adc
enter
add
add
sbb
in
and
mov
and
push
and
push
add
mov
mov
pop
dec
movsb
add
add
mov
dec
xor
addb
add
add
ds
add
add
push
add
jp
leave
cmp
sub
pop
pop
loopne
rolb
xchg
add
loop
call
loope
add
adc
add
add
sbb
rolb
dec
pop
aad
add
mov
add
cmp
sti
cld
pushl
stos
ret
add
add
pushf
push
add
mov
loope
pushf
test
add
mov
xchg
sahf
pusha
add
movsb
add
add
add
pop
fwait
inc
add
iret
ja
xchg
add
sub
std
daa
xor
jecxz
sub
loop
pop
in
sbb
add
movsl
movb
leave
lret
jl
mov
lahf
jg
aad
add
movsb
add
xor
pop
ror
rolb
push
addb
push
addb
add
add
sbb
or
dec
inc
add
add
test
test
and
lahf
push
add
add
fsubrs
add
inc
add
cmp
add
clc
out
sbb
ret
add
add
or
cmpsb
add
jns
add
add
add
in
add
pop
mov
add
mov
test
push
add
add
dec
je
in
adc
repnz
mov
pop
mov
stc
cltd
push
add
data16
bound
mov
and
mov
add
add
scas
cs
push
add
add
mov
add
add
or
pop
mov
dec
cli
enter
les
jbe
fcmovu
push
or
and
or
and
mov
push
add
test
roll
mov
out
jl
rolb
movb
and
or
add
mov
popl
inc
add
movsl
push
add
addb
xchg
cs
test
stos
les
pop
push
mov
xchg
add
add
dec
imul
lea
add
pusha
add
add
mov
outsl
sub
cmp
push
add
cmpsl
fisttpll
ret
cli
ljmp
mov
adc
scas
mov
cmp
xor
and
pop
movb
jp
jp
add
add
bound
mov
scas
cmpsl
ljmp
or
aam
in
aam
jnp
add
mov
movb
add
gs
test
cs
push
popa
into
push
and
mov
jmp
fsts
add
mov
loop
cmpsb
add
out
das
ret
sbb
add
sti
mov
clc
jge
pop
xlat
repnz
add
cmpsl
scas
cmpsl
lock
add
add
or
jnp
lods
and
xchg
xchg
add
jno
mov
pop
pop
adc
rcrl
add
mov
add
icebp
stos
mov
fdivs
add
std
sahf
and
icebp
sub
loope
add
add
mov
lea
ret
in
xor
jo
in
push
xchg
lahf
xchg
add
add
in
clc
iret
data16
jmp
frstor
sub
repz
hlt
add
push
and
add
cmc
fildll
stos
or
inc
add
lahf
mov
imul
jnp
add
add
mov
testb
add
add
add
icebp
and
mov
mov
jl
add
fwait
mov
and
mov
rolb
push
add
aas
stos
psrlw
add
add
andl
add
add
ds
lret
add
fdiv
insb
or
add
mov
add
call
gs
pop
or
add
addb
add
mov
xor
add
inc
mov
movsl
lods
pop
scas
pop
add
iret
jne
add
mov
call
add
xor
and
mov
add
jg
inc
add
mov
aam
mov
leave
js
sub
add
lods
fwait
into
jb
xor
adc
ljmp
add
add
pusha
add
add
add
add
rolb
add
sbb
fwait
adc
mov
pop
xor
aaa
inc
test
jbe
es
sbb
or
add
add
daa
adc
jns
in
scas
imul
mov
lret
add
add
lret
mov
cmp
or
add
pop
dec
rolb
mov
jecxz
add
add
add
rolb
dec
aam
jnp
inc
add
lret
dec
add
ret
mov
add
dec
sbb
mov
jp
inc
add
fdivrp
dec
adc
xchg
add
or
std
push
add
pop
or
mov
xchg
add
fwait
pop
daa
loope
add
add
and
mov
cwtl
nop
add
xchg
jmp
push
lods
bound
mov
xor
sahf
hlt
add
outsl
lods
mov
push
add
adc
pop
jge
add
add
add
fcmove
push
add
sub
add
mov
mov
nop
add
add
mov
roll
add
sub
clc
test
mov
cwtl
pop
testb
xor
cmp
fldenv
int3
lods
jb
jne
jge
psubsb
sbb
call
or
add
mov
les
sub
mov
add
into
mov
xchg
add
sahf
dec
push
add
add
iret
xor
dec
lahf
adc
or
xor
add
add
mov
or
add
int
jmp
push
add
aaa
push
add
cld
mov
popf
xchg
pop
and
imul
iret
cmc
dec
add
sub
push
add
add
scas
sub
sbb
add
add
dec
fnsave
add
add
fldl
loop
xchg
xchg
add
iret
icebp
rolb
add
jns
sub
xchg
add
add
lret
or
test
dec
add
repnz
loopne
mov
nop
add
add
adc
mov
add
hlt
add
pop
in
add
add
or
ljmp
mov
add
add
pop
cli
mov
cmp
xor
mov
add
sbb
pop
adc
aad
add
idivl
adc
mov
out
sub
xchg
cmp
add
shll
cmpsb
add
pop
js
notl
adc
sbb
repnz
add
js
add
jmp
sbb
pop
int
add
xchg
add
adc
cmpsl
sub
mov
clc
or
out
jno
xchg
in
add
xor
gs
mov
add
inc
or
add
gs
mov
or
cmp
sbb
pop
and
add
sbb
in
ss
sbb
xchg
add
je
jo
add
pop
test
enter
jge
add
lcall
add
or
pop
jae
mov
mov
inc
add
and
mov
jo
nop
add
and
add
cmp
add
add
sub
sub
dec
fwait
icebp
mov
out
mov
add
add
add
jge
add
add
push
sti
out
add
add
icebp
lods
add
push
mov
outsb
cltd
or
add
sub
add
or
in
pop
sti
pusha
add
cmpsl
mov
add
mov
add
xorl
jb
add
ja
xor
daa
jge
mov
into
adcl
or
scas
pusha
add
packuswb
movntq
call
call
fwait
jl
add
jae
add
add
imul
movsl
and
mov
les
call
je
fdivrp
add
xchg
pop
sub
add
add
mov
or
sub
xchg
notl
lods
sahf
jge
push
xchg
add
xor
cmp
sbb
add
add
add
test
add
push
add
stos
add
push
add
or
nop
add
roll
pop
fnsave
add
fmul
push
add
mov
and
bound
mov
add
or
jnp
int
mov
stos
sbb
out
or
add
add
in
rolb
push
add
add
out
mov
aas
and
mov
and
mov
data16
add
or
daa
int
rolb
fdivrs
lret
rolb
ret
sub
add
cmc
push
jecxz
add
add
rcll
sbb
movsb
add
jnp
add
lods
mov
jne
idivl
push
sub
mov
addb
xchg
add
add
add
inc
add
mov
jp
add
add
sub
add
mov
add
int3
adc
inc
push
add
add
rolb
xchg
data16
add
rolb
testb
mov
cmp
das
sarl
dec
jl
stos
push
and
mov
repz
int3
addb
add
dec
xchg
add
popf
outsl
test
add
testb
scas
mov
add
das
or
adc
xor
push
imul
mov
dec
and
cwtl
mov
out
imul
cmc
pop
sub
push
jl
movb
fstpt
cltd
fisubrl
rolb
add
add
in
add
movb
add
cmp
cmovo
mov
clc
jno
push
add
jmp
xlat
cwtl
sub
sub
test
mov
jne
hlt
add
jo
jns
loope
call
and
outsl
pop
sub
addr16
test
int
lods
sahf
jmp
add
add
add
sub
sub
mov
adc
out
pop
popa
xor
loopne
add
mov
jb
ja
cwtl
mov
add
popa
and
add
add
icebp
lret
rolb
iret
roll
add
push
add
aas
enter
clc
cmc
fimull
add
add
cmp
rolb
xchg
fmul
in
cmc
xchg
xchg
add
add
stos
outsl
and
sub
pop
bound
mov
and
inc
add
adc
repz
movsb
add
into
int
add
cmpsb
add
add
jg
inc
add
dec
inc
add
xor
or
pusha
add
add
add
jae
jb
lds
push
pop
push
pop
lcall
lret
sub
sub
nop
add
lods
add
stos
test
fimuls
seto
pop
aaa
cmp
add
clc
dec
leave
or
out
mov
add
mov
add
add
dec
out
push
call
cmp
add
inc
xor
jg
add
rcll
push
add
fwait
loop
jns
xchg
fidivl
inc
add
add
add
sahf
adc
imul
mov
sbb
adc
sbb
cltd
xor
add
out
into
sbb
jbe
insb
in
or
movb
cmpsl
mov
in
jns
cmp
sub
stos
cmp
xchg
or
cld
hlt
add
addb
add
add
cmp
add
push
jns
testl
add
addr16
add
or
fldcw
test
and
mov
mov
inc
fidivrl
add
or
hlt
add
jbe
xchg
add
pop
adc
imul
or
add
inc
add
add
pop
jmp
lods
add
jmp
add
add
add
add
add
add
pop
or
rolb
adc
add
xchg
insb
mov
add
lds
mov
add
add
in
xchg
pop
mov
or
mov
aam
pop
insl
sub
scas
icebp
sub
dec
xchg
add
inc
add
xchg
pop
cmp
jp
xchg
mov
add
lcall
add
jmp
ds
add
dec
sti
xlat
sti
sbb
lds
rol
je
pop
hlt
add
fstpl
dec
xor
mov
cmp
filds
lods
add
add
mov
add
add
push
xchg
cmc
mov
icebp
daa
xchg
add
add
add
or
out
add
mov
add
addr16
in
mov
std
xlat
pushl
fidivrs
xor
pop
in
jno
imul
mov
jmp
push
add
addb
aam
add
push
add
add
mov
jecxz
movb
jg
mov
sub
mov
mov
inc
xlat
xchg
aad
ljmp
or
add
add
pop
stos
imul
lock
lods
mov
stc
lea
repz
add
fistpl
and
movsb
add
add
add
fwait
decl
iret
xrelease
add
dec
and
scas
adc
ret
and
mov
mov
add
push
add
filds
pushf
adc
setle
ljmp
cmp
add
jne
sbb
dec
fadds
add
add
out
xchg
pop
dec
fwait
xor
pop
mov
test
add
add
mov
add
jns
andl
xor
dec
out
or
push
mov
jle
pop
les
pop
js
addb
cmp
dec
jne
rolb
lea
fisubl
add
add
sbb
jge
jbe
aad
clc
test
loopne
fmul
jmp
inc
add
add
adc
outsb
dec
xor
jae
fsubrs
add
mov
dec
fldcw
adc
fisttpll
or
bound
mov
add
rolb
sub
mov
sub
fadds
popf
add
js
mov
in
adc
add
add
or
add
add
add
pop
mov
in
pushf
xor
out
shr
add
test
in
mov
mov
mov
jecxz
jns
scas
add
mov
test
test
lret
in
test
add
dec
sbb
cld
insb
into
out
xlat
mov
sub
adc
add
add
inc
xor
mov
movb
add
push
dec
mov
jns
jo
repnz
xor
dec
fmulp
push
add
add
jns
xchg
fldt
pushf
jecxz
dec
push
add
add
mov
dec
stos
pop
in
divl
movsl
xor
add
out
xlat
pushf
lcall
push
add
addr16
mov
add
xchg
fcmovnu
ret
add
out
aas
sbb
mov
add
ret
cmp
add
and
testb
mov
mov
add
or
add
mov
add
add
jmp
dec
mov
add
pop
out
sub
mov
xchg
pop
xor
out
xchg
xchg
pop
in
push
add
repnz
rolb
test
out
inc
add
add
fwait
mov
add
xchg
xlat
test
dec
add
mov
add
inc
daa
into
mov
jo
push
dec
inc
add
orl
pusha
add
imul
enter
add
fmul
ljmp
call
arpl
add
cmp
xor
push
daa
sbb
lahf
cmpsl
push
in
rolb
rolb
xchg
cmp
dec
ja
add
add
test
add
fdivrl
or
add
outsl
in
insb
xor
sub
jg
add
fistpll
adc
pop
xchg
cs
jp
pop
loopne
add
add
adc
mov
pop
mov
add
mov
xor
movb
outsl
outsb
mov
mov
call
jge
dec
ljmp
outsb
outsl
push
add
enter
push
add
mov
mov
jne
addr16
jmp
sub
iret
in
add
or
add
pop
jge
adc
mov
add
xor
add
add
add
xor
mov
add
add
mov
mov
sbb
out
push
add
mov
sub
mov
cmp
fwait
cmpsl
fsubs
cmp
cltd
push
add
sbb
mov
mov
pop
pushf
hlt
add
ret
inc
add
mov
fdivl
add
cmpsb
add
outsb
lret
or
inc
rolb
out
sbb
add
add
jae
add
sbb
mov
add
lea
rolb
xchg
les
sar
push
sub
xchg
jecxz
push
add
jns
pop
and
mov
cld
mov
add
adcl
lahf
dec
iret
cli
fimuls
mov
push
add
imul
add
adc
out
xlat
adc
jns
add
iret
in
clc
pop
push
add
xor
inc
adc
inc
add
pop
pop
xor
cmp
lods
sub
jge
lahf
ret
mov
arpl
inc
add
mov
pop
scas
xchg
or
add
push
add
pushf
and
add
add
push
add
inc
mov
out
insl
push
add
add
pop
mov
add
xchg
cmp
pop
je
add
mov
xchg
insl
mov
mov
add
cmpsl
fadds
mov
je
pop
inc
add
gs
dec
jg
add
cmp
stos
das
mov
ja
add
push
add
pusha
add
decb
add
mov
addr16
test
mov
push
sbb
in
push
add
add
add
pop
fnsave
les
jbe
jno
add
cmp
push
add
add
mov
and
mov
push
add
mov
fdivs
call
in
pop
and
mov
arpl
test
mov
add
in
jp
add
add
push
add
jp
add
adc
add
rolb
adc
xchg
add
and
mov
mov
sbb
xlat
rcll
push
add
lret
fidivrs
test
xchg
inc
add
mov
add
mov
mov
ljmp
add
cwtl
mov
xchg
or
and
mov
loop
insl
outsb
imul
pop
xchg
lcall
add
lea
push
lock
xchg
cmp
pop
rcrl
mov
daa
test
inc
jg
stos
push
xor
cmp
sbb
mov
lcall
add
pop
jmp
add
cmpsb
add
in
inc
add
add
lret
sub
mov
in
dec
dec
test
push
add
add
fcmovnb
add
add
add
cli
nop
add
jo
mov
cmpsl
mov
push
pop
test
test
mov
mov
cmp
add
xor
add
jle
add
and
lahf
flds
mov
pop
out
pop
cmp
sbb
mov
and
mov
add
jae
and
icebp
stos
sbb
xchg
jbe
add
add
sahf
setb
inc
add
fiaddl
dec
imul
add
pusha
add
ljmp
aad
push
pop
out
repnz
add
test
mov
cmpsb
add
mov
pop
jg
add
cld
in
xchg
jb
fsub
sub
scas
push
repz
add
mov
mov
jb
sbb
xor
scas
sub
psubb
mov
roll
jo
rolb
mov
insb
rolb
mov
lods
icebp
sub
add
inc
add
out
add
inc
dec
jge
inc
add
dec
ds
inc
add
dec
dec
out
lods
mov
pop
push
add
add
add
add
nop
add
icebp
lds
xor
mov
push
add
mov
out
and
mov
jne
add
and
mov
push
add
mov
add
in
sbb
not
add
iret
aaa
int
movsl
mov
add
movsl
lahf
sub
jns
mov
add
cltd
sbb
gs
dec
pop
sahf
lea
add
pop
imull
in
jne
pop
repnz
jmp
mov
loope
repz
add
add
mov
push
add
inc
je
sbb
call
loope
imul
inc
stc
push
cmp
add
push
add
add
arpl
iret
sub
enter
jne
or
add
leave
into
xor
pop
xor
add
std
loop
insb
push
jp
ss
iret
pop
xchg
add
add
add
add
mov
sub
mov
loop
add
scas
push
add
inc
add
add
add
mov
adc
xor
add
add
stos
cli
mov
inc
add
add
sahf
push
fxch
pop
out
dec
addb
bound
mov
faddl
mov
loopne
add
mov
add
mov
stos
jns
add
dec
cltd
push
mov
filds
xor
dec
xlat
xchg
add
add
cmp
sub
aad
add
or
stos
loopne
sub
add
pop
push
add
add
xchg
add
lds
add
mov
pop
jo
rolb
push
add
aam
jl
pop
mov
add
pop
xor
cmpsb
add
push
push
add
insl
stos
mov
sbb
mov
add
mov
hlt
add
xchg
fld1
mov
cltd
in
ret
stc
mov
ficoms
add
out
lret
add
add
mov
add
cmc
inc
add
jge
add
test
in
and
fiadds
push
jne
cmpsb
add
out
dec
call
mov
shrl
sbb
jno
mov
adc
adc
js
xlat
or
add
pop
and
mov
pushl
add
dec
adcl
push
pop
adc
icebp
push
add
repnz
add
sarl
add
mov
or
out
push
fdivl
rolb
dec
mov
pop
sub
inc
int
pop
push
add
aas
loope
jne
add
add
addb
or
add
sbb
add
xchg
add
dec
adc
mov
inc
or
lea
xor
rolb
push
ljmp
scas
dec
xchg
pop
jnp
fidivs
add
cmp
lcall
inc
mov
fdivs
mov
test
jno
xlat
add
add
add
or
test
les
addb
subl
mov
add
add
dec
loope
or
xchg
add
cli
enter
call
lea
pushf
adc
rolb
push
or
pushf
xor
dec
mov
popa
mov
pop
pop
mov
jne,pt
xchg
je
outsb
or
ljmp
neg
sbbl
add
adc
dec
push
add
mov
add
and
fwait
pop
dec
sti
repz
stos
aad
movb
add
lods
sti
jmp
hlt
add
add
mov
ficoms
add
add
addr16
nop
add
rolb
dec
dec
insl
jno
add
dec
movsb
add
add
aaa
mov
add
inc
add
add
add
movsl
out
fdiv
add
add
cwtl
pop
push
push
and
mov
mov
inc
add
add
sbb
fstl
add
push
add
push
add
movb
faddl
popf
mov
add
push
mov
push
addl
cs
push
mov
jbe
add
add
add
add
mov
push
cmp
mov
xchg
add
dec
imul
addr16
xchg
inc
jge
pushf
cmp
mov
add
add
rep
inc
mov
add
mov
fimuls
add
bound
mov
mov
xchg
push
inc
jnp
xor
fldenv
mov
add
ds
ljmp
pusha
add
cmp
fdivs
rolb
add
mov
gs
pop
xchg
add
push
add
pop
mov
mov
inc
mov
fnstsw
sbb
in
lret
or
mov
out
test
loop
ja
jp
rolb
jno
popa
add
xchg
mov
push
add
adc
mov
cmp
hlt
add
fs
cld
mov
add
and
dec
mov
mov
mov
loop
aad
adc
out
sahf
mov
test
add
sub
mov
add
jp
or
add
cmp
ds
mov
pop
add
data16
add
or
lea
repnz
int
jbe
xor
pop
add
insl
stos
add
mov
jle
add
sahf
pop
mov
movsl
sbb
jp
mov
aas
mov
jle
add
jle
inc
add
lret
xor
push
add
jge
sbb
add
mov
sarl
add
rolb
lds
int3
mov
popf
xchg
add
cmp
addr16
add
add
sbb
add
inc
rolb
incl
pop
lock
sti
and
mov
add
xor
clc
arpl
aas
jmp
jbe
pop
mov
sub
add
cmp
xor
mov
add
mov
enter
mov
out
jnp
jns
stos
rolb
mov
add
shl
sbb
daa
dec
data16
sbb
addb
outsb
das
aaa
inc
add
jg
add
add
pop
mov
mov
dec
push
push
add
int
out
filds
add
xlat
in
sbb
ljmp
pop
pushf
sub
loop
iret
or
movb
lods
aad
mov
stc
scas
cmp
add
cmp
mov
add
rorl
in
cld
xchg
xchg
add
mov
add
dec
pop
dec
xlat
fcoms
loop
xchg
dec
cmpsl
xor
xchg
mov
nop
add
aaa
ficompl
sub
hlt
add
add
fisttpl
sbb
fstl
insl
mov
mov
jl
cmc
cmp
push
add
xlat
mov
stos
sub
add
push
rolb
mov
int
ja
add
pop
popa
popf
into
mov
add
pushf
cld
xchg
add
and
mov
mov
xor
jae
add
add
xor
add
in
cmp
inc
add
add
stc
inc
add
add
and
inc
add
xchg
add
dec
js
mov
cld
popa
mov
adc
sti
or
nop
add
arpl
pop
pop
cmp
ret
xchg
add
mov
add
and
mov
sub
add
add
into
inc
add
roll
add
out
and
add
adc
xchg
add
mov
addb
je
cmp
out
imul
jne
and
testb
add
push
lods
xchg
add
add
sbb
add
mov
sbb
popa
and
push
adc
in
ret
add
ds
addb
movb
addl
ret
add
dec
pop
add
xchg
jae
add
add
jb
add
cli
outsl
sub
movsb
add
add
rolb
roll
add
ret
in
xchg
push
andl
mov
cmpsb
add
xchg
sbb
jl
mov
rolb
fcmovne
daa
xchg
and
sbb
mov
arpl
lahf
mov
xchg
add
data16
or
or
add
jo
cmp
outsl
mov
into
sbb
mov
or
mov
stos
xchg
jge
int
cmpsl
mov
inc
arpl
addb
in
shll
jmp
shr
or
push
add
sbb
add
add
jno
inc
add
outsl
sub
cmp
inc
add
add
add
mov
rcll
orl
cld
js
jnp
push
add
pop
icebp
or
mov
xor
mov
add
add
add
clc
popa
dec
mov
add
sbb
mov
jb
mov
add
inc
add
or
dec
test
xchg
dec
inc
add
mov
je
add
mov
sbb
add
add
add
int
mov
jb
jae
jg
dec
sub
add
arpl
add
add
mov
ljmp
inc
add
lods
outsl
adc
fadds
add
pusha
add
add
push
jns
add
add
aaa
mov
out
mov
and
jnp
add
aad
push
add
scas
or
add
mov
sbb
or
jecxz
iret
aas
jmp
out
mov
sub
or
das
mov
cmp
bound
mov
testb
pop
push
add
dec
cs
add
adc
add
lods
mov
or
rolb
mov
fldl
add
rcrl
add
inc
xor
add
add
dec
dec
addb
add
jecxz
push
add
add
loop
xchg
xor
mov
xlat
imul
addb
add
lods
lods
and
mov
xor
addb
sbb
jbe
push
std
iret
repnz
dec
sbb
sti
iret
pop
cmp
divl
lds
lods
pop
xchg
mov
jle
inc
add
add
data16
inc
out
add
dec
repz
xchg
add
mov
pminub
add
mov
ljmp
add
add
jo
das
add
xor
in
push
jp
ret
add
mov
add
xchg
add
jne
add
rolb
out
out
inc
add
out
pusha
add
sbb
sub
loop
rolb
add
or
add
add
or
jno
add
aaa
mov
and
mov
adc
lods
fildll
inc
add
add
pop
add
das
into
inc
das
sbb
xchg
dec
jbe
mov
add
add
add
pusha
add
inc
mov
push
add
add
add
xchg
fisubrs
les
mov
add
mov
leave
push
pop
add
mov
push
push
add
arpl
into
xor
xlat
jo
rcrl
add
lret
mov
mov
add
xor
loope
aam
hlt
add
mov
add
push
add
add
add
loopne
pusha
add
jns
out
or
mov
xor
test
sub
add
cmp
add
add
pushf
aam
jg
add
add
add
add
and
mov
add
add
mov
repnz
int3
in
jge
sub
inc
rolb
or
add
add
scas
jo
dec
adc
add
rcr
or
add
push
add
add
xlat
repnz
lods
mov
add
add
mov
xchg
cli
arpl
loopne
mov
add
and
pop
sbb
xchg
pop
inc
lret
int
add
add
addb
test
inc
add
sub
add
stos
and
mov
add
add
stc
push
add
xchg
pop
mov
add
push
add
add
adc
mov
data16
xchg
jmp
push
dec
sub
sahf
xchg
sahf
outsl
call
cmpsl
push
add
rcl
pop
mov
add
jo
mov
or
je
pop
popa
add
mov
mov
mov
add
add
lds
add
add
movb
add
cltd
in
std
fwait
xchg
stos
cmp
mov
adc
scas
icebp
jae
sbb
mov
add
cmp
inc
scas
pop
insl
mov
aad
out
ds
mov
stos
or
stos
mov
daa
inc
add
mov
add
out
mov
add
mov
daa
test
push
add
add
dec
in
fstps
jl
jg
mov
add
in
adc
add
add
gs
or
add
mov
pushf
adc
shll
movlps
iret
cmp
icebp
xlat
jnp
add
cs
inc
dec
ja
mov
dec
adc
filds
fistps
inc
push
inc
add
jl,pn
cmp
jbe
xor
add
int3
mov
js
jno
adcl
jmp
jmp
insb
xor
add
fimull
rolb
mov
cmp
push
scas
and
mov
in
mov
add
dec
ret
sbb
sahf
or
push
add
mov
or
addr16
sbb
add
push
and
mov
sub
add
out
xchg
add
rolb
movzwl
add
mov
inc
mov
push
add
cmp
hlt
add
add
add
add
rcrl
test
cmp
xchg
add
adc
add
add
push
xor
lock
pop
mov
add
mov
dec
repnz
call
cmp
rol
ret
ljmp
cmpsb
add
add
jg
add
mov
add
push
add
icebp
adc
bound
mov
xchg
cmp
es
add
add
mov
jecxz
or
push
add
loopne
and
inc
add
enter
add
push
and
mov
fsubr
das
cmp
pop
jle
jnp
add
add
push
dec
out
dec
test
lret
push
pop
xchg
lods
mov
pop
aas
or
add
fs
pop
ficoml
test
dec
inc
add
xchg
add
rolb
cwtl
mov
aaa
sbb
loopne
mov
inc
add
pop
jns
add
mull
xchg
mov
repnz
cmp
add
add
lahf
inc
add
dec
aaa
pop
das
fwait
dec
adc
inc
add
rolb
movsb
add
adc
xchg
jno
add
lahf
lea
or
add
mov
add
add
add
xor
scas
pop
jo
insb
ficoms
ret
add
test
or
pop
addb
mov
mov
xor
lret
or
add
adc
pop
inc
add
mov
add
icebp
sbb
lsl
add
mov
add
stos
outsl
lods
sub
inc
add
add
or
sbb
xchg
xor
int
add
call
ficoms
popf
and
mov
fstps
sub
mov
mov
add
sbb
lds
adc
sub
add
frstor
add
dec
addr16
lret
je
stos
xlat
mov
pusha
add
add
je
push
mov
push
movsl
in
pop
mov
les
fidivs
cmpsl
pop
xchg
add
fcoml
daa
add
data16
add
add
inc
add
mov
pushf
cmp
xchg
add
lret
enter
inc
mov
mov
into
cmp
movsb
add
mov
and
push
xlat
cmp
popf
popf
fcoms
add
ret
scas
add
enter
rolb
pop
jge
add
jne
add
rolb
enter
call
fildl
jnp
xchg
add
test
faddl
aaa
sub
fsubrp
add
nop
add
add
int3
sbb
out
dec
adc
cmp
xchg
lcall
xchg
add
add
adc
cmp
adc
mov
inc
add
push
mov
pop
xor
fildll
fistpll
lcall
js
inc
fsubl
and
mov
sbb
add
in
pop
aad
add
add
jge
jmp
cli
orl
pop
or
lods
xchg
add
mov
add
pop
mov
add
mov
push
add
and
or
add
dec
pop
xchg
jb
pushf
jb
xchg
add
or
add
loope
and
mov
pop
pop
pop
fdivl
out
sahf
and
mov
add
into
add
mov
or
pop
out
repz
stos
cmpsl
addb
out
pop
push
rolb
test
mov
fnstenv
adc
and
mov
in
into
fwait
addb
add
add
stos
inc
insl
and
mov
cmp
add
lea
cmc
mov
dec
sbb
sti
dec
imul
rolb
add
add
add
mov
hlt
add
not
jno
popf
or
inc
add
icebp
cmp
pop
cli
and
mov
lods
insb
fnstcw
add
add
add
nop
add
imul
testb
add
les
and
mov
jg
je
in
pop
jg
add
rolb
xchg
xor
xor
dec
or
ds
add
add
jb
mov
lock
sub
jmp
dec
movb
add
or
add
add
add
rolb
movb
jnp
cmc
xor
cmpps
pop
in
jle
add
add
out
cltd
mov
repnz
add
add
push
add
xchg
add
popa
mul
aaa
fwait
pop
inc
add
mov
sub
cmp
inc
add
adc
sbb
adc
inc
add
sbb
mov
lea
call
push
add
inc
testb
aas
sbb
or
and
jge
dec
adc
fwait
cmp
jbe
test
test
mov
pop
imul
scas
jb
movsl
dec
push
add
add
addb
lret
add
lds
lret
fwait
pop
add
sub
inc
add
test
add
push
xchg
cmp
shll
add
out
arpl
mov
jno
adc
mov
imul
das
loop
lahf
shrl
add
cmp
pop
fnstsw
xor
mov
add
repz
add
lock
sti
in
pushf
pop
jp
add
add
pop
mov
cld
fwait
dec
and
mov
add
jb
xchg
sub
add
movsl
jne
jp
fisubrl
dec
push
add
cmp
add
lock
lock
add
add
sub
in
xchg
add
add
adc
jo
dec
xor
mov
or
add
out
aad
int3
shl
and
cs
fwait
je
test
add
add
fmul
jnp
scas
mov
add
push
add
sarl
jb
imul
add
add
clc
mov
addb
add
sti
in
inc
add
cs
push
add
fidivl
add
add
or
lret
xchg
add
lds
mov
rolb
add
mov
sti
sbb
add
add
and
ds
data16
add
mov
push
repz
insb
sbb
add
fists
jnp
imul
out
add
out
dec
call
add
ficompl
sbb
outsb
rolb
dec
inc
add
scas
push
mov
aaa
add
mov
add
xchg
push
lods
test
bound
mov
pusha
add
add
pop
dec
adc
insb
cwtl
mov
aam
in
pop
cmc
sbb
jns
add
add
cmc
dec
testb
mov
fucomi
jge
jl
mov
out
mov
xchg
pop
jae
bound
mov
ret
dec
and
xor
mov
repz
dec
out
sahf
insb
jb
dec
sub
mov
xor
dec
and
push
addb
dec
sbb
mov
bound
mov
add
lea
testb
fnstcw
add
cwtl
daa
aam
cld
sbb
add
cmp
mov
nop
add
add
test
jp
add
data16
inc
addr16
pop
popf
mov
mov
int3
pusha
add
lcall
add
cmp
scas
clc
inc
sub
add
sbb
sub
mov
bound
mov
out
push
add
mov
push
add
sbb
push
xor
iret
push
add
add
add
sti
xchg
add
or
testb
scas
mov
daa
pop
push
add
add
aam
xchg
dec
int
mov
loopne
push
add
add
xorl
cmp
sbb
daa
insl
push
add
andl
mov
push
add
sub
and
mov
add
mov
std
mov
add
cld
dec
pop
push
add
mov
cmp
jge
or
out
test
addr16
inc
in
testb
jno
jmp
inc
add
cld
add
mov
add
sbb
test
aam
stos
pop
pop
into
test
in
xchg
mov
inc
add
pop
add
mov
pop
decl
fdivs
add
scas
mov
add
ds
xor
cmp
xor
ret
push
add
mov
push
add
push
add
fstps
arpl
dec
out
pop
pinsrw
divl
add
push
add
adc
jno
testb
adc
pusha
add
lahf
jle
add
dec
insb
mov
pushf
ficoms
and
add
scas
jmp
adc
xchg
bound
mov
adc
cmp
add
add
xchg
add
add
add
nop
add
jl
add
mov
add
push
jns
in
and
add
xor
cli
aas
push
add
add
in
test
leave
stos
insb
lret
scas
or
mov
add
add
push
hlt
add
scas
cwtl
and
ret
add
dec
adc
sti
loop
or
aas
stos
mov
mov
cs
add
scas
push
add
fcomp
test
add
push
add
and
mov
inc
add
inc
add
sahf
popf
lret
mov
mov
leave
out
sbb
inc
add
mov
test
les
out
add
push
add
add
push
add
push
add
add
mov
lds
add
mov
pop
sbb
mov
iret
sbb
inc
int
js
hlt
add
fsubrs
in
sbb
or
lret
sbb
add
mov
jmp
gs
gs
ja
mov
xor
mov
jl
cmp
add
cmpl
add
fsubs
bound
mov
add
mov
scas
shrl
add
das
xchg
add
aam
add
out
add
push
add
sbb
pop
sbb
add
jg
push
add
orl
cmp
in
movb
inc
add
add
data16
in
or
inc
add
add
add
rolb
add
mov
dec
inc
inc
jb
outsb
les
bound
mov
cli
sbb
add
adc
xor
loop
mov
add
pop
cwtl
cld
sub
data16
out
pop
out
mov
stos
testl
addr16
sub
test
add
dec
pop
lods
jg
adc
add
or
push
rolb
mov
scas
mov
jl
pushf
sti
pop
lcall
and
pop
cmpsl
cmpsl
ljmp
add
add
rolb
loopne
and
mov
add
add
add
mov
add
and
mov
adcl
stc
sub
pop
ljmp
xchg
adc
jle
out
icebp
mov
add
or
xchg
ret
or
add
scas
push
add
stos
mov
push
das
sub
fisttpl
dec
fwait
xor
movb
add
gs
mov
mov
pop
lods
push
add
add
jno
inc
add
addr16
clc
mov
mov
addr16
xchg
pop
lds
add
imul
rolb
mov
mov
mov
mov
add
out
or
imul
pusha
add
inc
scas
pop
cmpsl
xchg
add
add
add
add
call
add
add
in
inc
imul
subl
add
pop
xor
lods
aad
int3
ljmp
add
imul
pop
pop
push
std
rolb
jbe
aam
test
push
fcomps
add
add
ja
lret
les
ljmp
jl
sbb
add
adc
or
loopne
push
add
adc
add
add
ja
data16
movsb
add
add
add
rolb
cmp
add
add
mov
or
movsb
add
imul
mov
add
fstp
sarl
aad
xchg
aaa
sbb
add
add
pushf
mov
pop
xchg
add
cltd
stos
mov
cmp
add
adc
divl
out
adc
aam
pop
bound
mov
add
add
dec
jp
add
add
add
mov
bound
mov
push
add
aad
in
lock
xor
mov
push
jae
adc
sbb
stos
jo
fst
fldt
lock
mov
push
popf
xchg
add
loopne
xor
xchg
add
sahf
ja
aaa
xor
aad
jmp
cmpsb
add
xchg
add
cmc
outsl
gs
clc
fists
add
out
stos
sub
inc
push
xchg
dec
popf
ljmp
add
fcoms
sbb
inc
jecxz
sar
xchg
rolb
pusha
add
movsb
add
add
testb
sbb
add
add
mov
fnstsw
jbe
lods
and
mov
adc
xor
out
call
sahf
mov
xor
mov
add
add
repz
add
mov
out
sbb
sub
xchg
ljmp
xchg
sbb
inc
add
xchg
mov
push
add
push
inc
add
imul
add
add
add
add
jae
fnsave
add
cmp
rolb
in
and
icebp
jo
in
push
cltd
add
adc
xchg
xchg
in
mov
cmpsl
inc
add
add
add
stos
fiadds
rolb
add
sbb
push
cltd
push
add
sbb
add
dec
in
inc
add
mov
add
add
stos
out
push
add
add
std
pop
aad
mov
stos
dec
push
dec
dec
cwtl
icebp
add
push
sub
add
mov
mov
rolb
add
mov
mov
adc
fwait
cmc
pop
xor
lahf
xchg
add
xchg
mov
js
loope
dec
mov
dec
loope
xchg
bound
mov
add
add
lahf
mov
ljmp
sub
movsl
out
add
add
mov
data16
lods
lahf
adc
lret
enter
jns
sub
adc
sub
mov
pop
out
cmp
inc
jp
xchg
sbb
data16
jns
add
xchg
lcall
mov
add
mov
lea
add
xchg
cmc
mov
cmp
int
add
fsub
add
add
aad
add
add
xchg
add
adc
mov
test
push
stos
lods
lods
adc
push
add
add
xchg
adc
jp
or
cmpsb
add
ljmp
rcll
cmc
test
fstpl
add
jmp
xchg
add
pop
mov
dec
jle
sbb
lds
jb
addb
inc
mov
push
ja
popa
cmpsb
add
push
add
add
adc
pop
dec
addl
imul
lcall
cmp
add
ss
sub
sub
int3
insb
push
cmp
push
add
data16
jle
je
sub
cmpsb
add
mov
cmp
ja
lahf
add
mov
in
sub
mov
mov
leave
rolb
out
aaa
and
mov
pop
test
int
cmp
fdivs
sub
out
imul
ds
inc
cmp
add
ficompl
out
push
add
daa
xchg
data16
jne
sbb
add
push
add
add
pop
loop
adc
and
mov
add
mov
inc
add
jl
add
add
cltd
loopne
add
cltd
push
insb
ret
add
add
icebp
iret
jae
add
add
lods
dec
aaa
and
and
int
fcomp
and
add
mov
add
add
les
les
repnz
sub
addl
orl
adc
test
add
add
add
mov
xchg
xor
movsl
push
add
jo
or
xor
mov
xor
add
les
lods
scas
mov
je
addb
dec
adc
jae
aas
loopne
fst
push
les
mov
add
add
pusha
add
add
add
push
add
add
mov
add
ret
add
lods
xchg
add
jne
sbb
fistl
add
jecxz
cmc
incb
dec
push
add
gs
pop
ja
add
mov
dec
inc
add
xchg
cmp
addl
dec
addb
mov
je
mov
mov
les
jo
mov
fisubrs
lods
push
add
adc
ds
bound
mov
movlps
sahf
dec
jge
imul
popa
sarl
push
add
add
add
or
add
add
sbb
push
icebp
mov
jecxz
sbb
fst
add
popl
add
mov
addb
mov
pop
dec
les
push
jmp
test
sbb
xchg
add
add
sahf
push
mov
pushf
xor
add
xor
add
repnz
mov
add
in
ja
add
adc
pop
pop
mov
imul
push
insb
cmp
mov
add
out
jb
arpl
addb
push
add
and
mov
mov
mov
fldenv
sbb
add
addb
hlt
add
add
out
jb
jmp
imul
add
dec
add
sbb
add
and
jae
sahf
add
mov
add
cmpsb
add
add
add
jno
out
fisubl
aam
subl
add
dec
lret
insb
add
add
pusha
add
repz
inc
movb
add
test
fstpt
fisubl
fcom
cmp
aas
or
inc
add
xor
das
xchg
ja
mov
out
add
add
add
mov
cmc
dec
jl
and
inc
add
mov
sub
cmpsb
add
mov
and
mov
xor
add
dec
cld
mov
cwtl
pop
imul
add
lret
fmull
and
mov
add
add
pop
jle
xchg
add
inc
add
mov
test
out
ljmp
leave
pop
insl
or
mov
add
xor
sldt
mov
dec
xor
mov
add
add
mov
mov
cld
dec
lods
js
stc
rolb
test
xor
jae
fwait
mov
testb
add
adc
dec
inc
aad
mov
jb
in
addb
add
std
and
push
loopne
lahf
cmp
add
push
add
pusha
add
add
jnp
mov
mov
mov
mov
mov
stos
pop
or
mov
ljmp
stos
cmp
xor
ljmp
inc
add
pusha
add
xor
arpl
ret
outsl
sti
fwait
jno
sbb
and
loope
add
cmpsl
inc
inc
push
mov
add
add
mov
mov
lods
jp
add
