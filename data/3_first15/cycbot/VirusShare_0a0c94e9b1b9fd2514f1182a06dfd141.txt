dec
cld
negb
stos
jmpw
cmp
xchg
mov
into
add
push
fadds
jmp
sbb
test
daa
inc
call
dec
mov
decl
fwait
mov
fcoms
add
ljmp
cmp
mov
in
xor
and
movsb
pushl
cmp
or
cmp
into
inc
decl
addr16
clc
aaa
sbb
mov
pop
sub
or
out
shr
lock
dec
xchg
mov
pop
ljmp
sbb
lret
incl
ljmp
scas
add
sar
push
and
xor
pushl
stos
inc
jmp
or
jmpw
leave
sbb
mov
sbb
mov
test
idivb
pushf
jno
push
mov
adc
add
pushl
cli
std
loope
sar
push
xor
pop
repz
incl
ljmp
xor
decl
test
push
mov
jmp
lcall
pushl
fucomp
ljmp
xchg
loopne
push
incl
ljmp
aaa
add
xor
stc
nop
or
jmp
jmp
mov
xchg
outsb
ds
pushl
and
cwtl
sbb
call
pushl
das
push
decl
jmp
jmp
decl
inc
jmp
fst
fstpl
data16
xchg
push
mov
sub
xor
call
and
jne
dec
push
call
test
je
movzbl
jmp
mov
add
mov
shr
push
push
addl
call
push
call
leave
ret
push
mov
cld
push
push
mov
lods
xor
mov
sub
add
mov
add
stos
xor
pop
pop
leave
ret
jmp
jmp
jmp
js
std
ja
aam
incl
pop
jle
pop
mov
xchg
adc
sar
mov
push
jmp
mov
mov
jne
ja
clc
cmp
incl
cs
ljmp
jbe
ljmp
jmp
pushl
fldcw
jmp
call
imul
inc
lcall
insb
pushf
mov
pushf
lock
pushf
test
mov
push
cld
cmp
mov
jmp
add
fadds
stc
stc
daa
decl
lcall
cmp
sub
adc
mov
add
xor
add
add
insl
in
mov
pushl
outsb
and
dec
aas
sar
movsb
incl
mov
lock
add
push
ret
add
cld
add
insb
cli
inc
jmp
push
fwait
int3
add
pop
lcall
inc
jmp
lcall
cmp
loopne
mov
pushl
jmp
mov
incl
int
ljmp
dec
pop
cwtl
scas
movsl
jmp
call
pop
xor
incl
decl
mov
lcall
inc
cli
testb
jmp
mov
incl
call
cmpsl
call
add
cmp
pop
jbe
cli
sti
fstpl
hlt
inc
incl
decl
xor
ds
mov
sarb
push
in
jl
jmp
push
jmp
call
imul
dec
xchg
nop
cmp
mov
sub
xor
into
xor
shr
or
add
add
or
pusha
call
hlt
ret
incl
incl
jmp
popf
test
divb
out
jno
push
enter
lcall
inc
call
iret
cwtl
lods
mov
or
incl
xchg
or
call
sar
dec
pop
mov
fsub
call
add
ljmp
clc
out
or
out
cmp
pop
cmp
and
jns
in
push
mov
sarl
arpl
inc
ljmp
decl
pop
cmp
test
cld
sbb
or
add
idivl
in
inc
dec
sar
pushl
mov
leave
enter
cmp
jmp
jmp
cmp
sti
push
adc
adc
inc
pushl
ljmp
lcall
lret
push
lock
loopne
stos
jle
jmp
cmp
push
inc
add
inc
lds
add
mov
pop
lret
mov
scas
iret
test
lock
jmp
ljmp
lcall
stos
push
jmp
in
mov
or
mov
sahf
jge
mov
call
cmp
nop
test
jecxz
jb
decl
int
pushl
out
sti
sbb
adc
std
icebp
mov
push
add
xor
rclb
fwait
pushf
xor
dec
iret
push
mov
sar
and
pop
cmpsl
ljmp
mov
loopne
test
sar
scas
mov
jmp
xor
push
jmp
cmp
add
cmp
mov
call
jmp
imul
mov
sbb
call
test
dec
cs
call
ljmp
jb
call
movsl
push
repnz
mov
ljmp
push
mov
jmp
mov
cld
add
jbe
sbb
cmp
push
test
cmp
pop
inc
dec
cmp
adc
add
jmp
stos
pop
pushl
and
inc
push
add
or
cmp
imull
xor
hlt
pop
js
adc
cmp
dec
cltd
jl
inc
lcall
das
daa
call
mov
mov
cmc
jnp,pt
pushl
jmp
add
add
ss
add
decl
or
sbb
inc
inc
add
jo
cmpsl
call
out
sbb
outsb
out
in
stos
mov
call
mov
cmp
lcall
call
jmp
cmp
ja
push
jmp
leave
sar
pop
dec
xchg
lahf
dec
fstl
sahf
or
pushl
or
pop
xchg
add
ds
xchg
pop
hlt
mulb
ror
call
aad
decl
sub
jmp
pop
mov
call
lods
jb
aaa
lea
inc
decl
inc
push
ret
add
add
pusha
call
test
sub
pushl
int3
popa
call
scas
cld
mov
push
mov
jmp
add
add
jo
jne
incb
ljmp
call
xchg
pop
mov
adc
call
enter
mov
scas
pop
fildl
inc
incl
pushf
sub
incl
shr
mov
add
add
add
jne
push
pop
sub
data16
call
lods
test
ljmp
test
sbb
aaa
mov
pop
mov
incl
pushl
mov
pop
lcall
ljmp
inc
jmp
lcall
outsb
pop
js
pop
jno
ljmp
xchg
jmp
call
inc
js
sahf
or
mov
mov
daa
incl
imul
pop
cld
decl
mov
dec
pushf
pop
mov
imull
incl
add
mov
add
add
dec
dec
imul
push
lods
ret
decl
and
jne
test
cmp
call
jno
cltd
cmp
cltd
sbb
jmp
add
cld
add
lcall
cltd
fwait
inc
push
repz
jne
mov
test
ljmp
jbe
pop
arpl
jo
jmp
pushl
clc
clc
cmp
call
jl
mov
out
cmp
mov
imul
loope
aaa
pop
cli
mov
jmp
stos
pop
pop
mov
pop
decl
data16
add
mov
cmp
add
ljmp
push
imul
push
lods
jnp
pop
inc
pushl
mov
in
loop
sbb
pop
jp
mov
xor
lcall
push
mov
ja
add
jnp
fsubl
jbe
cmp
mov
incl
call
call
jbe
decl
sar
or
push
xchg
inc
jmp
or
sub
cltd
jg
das
test
jge
push
mov
mov
mov
adc
cmc
push
sbb
add
add
add
mov
je
xchg
pop
jg
mov
xchg
mov
ljmp
push
inc
cli
adc
ljmp
test
fwait
decw
decl
pop
add
call
notb
pop
js
and
push
mov
fildl
fwait
test
cmp
mov
shl
lcall
push
mov
mov
mov
xlat
sub
ljmp
nop
ret
call
mov
pop
cmp
incw
push
ljmpw
mov
pushl
insb
push
popa
jmp
jo
push
cmp
add
daa
decl
call
push
loopne
mov
add
add
add
mov
pop
cltd
adc
lock
xchg
pop
xchg
xor
add
jmp
incl
cs
in
leave
push
fcoml
ljmp
fstps
mov
mov
lcall
cmp
dec
sub
push
stc
test
ljmp
in
insl
aas
call
cmp
sbb
push
add
add
add
and
in
inc
fcoml
and
sbb
jo
pop
mov
js
inc
call
adc
incl
pop
push
mov
add
add
add
push
out
add
jle
pushl
sbb
pushl
incl
call
lret
push
pushf
dec
push
push
jmp
lds
mov
mov
negl
pop
push
inc
enter
or
add
iret
fdivrp
inc
ljmp
rdtsc
jmp
ja
dec
adc
ljmp
cmpsl
ljmp
stos
arpl
mov
arpl
lods
out
pop
mov
pop
mov
add
add
add
call
jae
aaa
test
pop
add
add
cmp
add
outsl
pop
dec
iret
sub
inc
pushl
or
aam
xor
decl
jbe
mov
pushl
jmp
lcall
sbb
mov
inc
ljmp
xchg
out
cmp
stos
inc
jmp
sub
dec
mov
pop
out
int
incl
jnp
std
fidivl
scas
inc
decl
sar
call
mov
dec
adc
mov
xchg
jl
js
jmp
cmpsl
pushl
ret
insl
inc
ljmp
pusha
incl
call
dec
jl
adc
inc
call
ljmp
cmp
pushl
iret
test
nop
faddl
ljmp
incl
out
cmc
pop
das
mov
xchg
push
adc
dec
push
ret
add
cld
add
mov
addr16
jp
ljmp
xchg
leave
cmp
test
mov
add
decl
incb
add
xor
cli
mov
sbb
xor
xor
push
lods
shlb
lcall
repnz
fbld
mov
aam
cmp
movsl
incl
insl
fldt
dec
inc
incl
sub
pop
pushf
pop
mov
pop
jno
jg
pushl
sar
pop
sbb
test
pop
add
push
ret
incl
shl
test
sub
jecxz
dec
call
mov
cmpsl
ljmp
jmp
jmp
psrlw
movsl
call
xlat
cltd
sbb
ljmp
xchg
sbb
xlat
jl
lea
jmp
add
add
jmp
jmp
or
cs
dec
mov
incl
mov
fmull
inc
lcall
add
xor
jmp
call
dec
sar
stc
pop
adc
decl
inc
incl
lcall
push
add
addb
push
mov
and
or
sbb
add
add
fdivs
call
ja
enter
add
add
push
ret
add
mov
mov
jmp
or
jmp
mov
in
sbb
cmp
and
mov
add
cld
cmp
sbb
xor
push
dec
push
xlat
jae
decl
scas
enter
add
add
jne
jmp
mov
iret
pop
or
out
jns
testl
cwtl
testl
push
xor
jmp
add
add
inc
pop
or
in
xchg
and
incl
add
jmp
sbb
icebp
sbb
or
jnp
pop
dec
fldcw
insb
xchg
and
iret
cli
dec
imul
adc
jnp
ljmp
xchg
pop
enter
decl
sar
xchg
sbb
cli
in
stos
fidivrs
fchs
decl
cmp
imul
test
sub
js
pushl
adc
fcomp
mov
push
jbe
decl
call
push
movsl
decl
test
push
pushl
call
jno
out
sbb
cmp
dec
rcr
icebp
inc
incl
mov
lcall
insb
xor
add
scas
xchg
mov
inc
lcall
jl
or
push
js
or
jno
and
sbb
pushl
decl
mov
dec
add
add
inc
jmp
mov
sub
cld
pop
mov
and
imul
mov
pop
sbb
arpl
add
icebp
or
add
cmpsl
jmp
lcall
test
call
push
incl
fst
push
pop
in
inc
decl
mov
decl
test
sbb
fldt
in
mov
add
jne
call
iret
xchg
lods
into
mov
outsb
or
sub
mov
add
xor
push
in
jbe
adc
cmp
lock
add
cmpsl
fadds
call
mov
push
xor
jmp
add
push
fs
decb
push
icebp
jge
mov
jmp
add
mov
cmpsl
jae
mov
decl
outsl
xchg
mov
test
lock
pop
lcall
pushl
fs
aas
pop
jo
faddl
incl
adc
sahf
imul
mov
mov
daa
jmp
ljmp
jmp
loop
xlat
imul
adc
jg
sub
mov
jbe
add
cmpsl
jo
add
pop
pop
out
fs
call
jge
jmp
add
lds
out
ljmp
jg
sar
fidivs
adc
jae
cmp
movsb
dec
xchg
int
pop
inc
lcall
daa
jmp
jae
inc
fsubrs
repz
sbb
mov
jmp
jmp
add
sbb
sbb
xor
add
jmp
add
xor
ds
incl
sti
test
inc
sti
pop
inc
call
std
push
and
mov
inc
jmp
decl
std
dec
jmp
ljmp
jp
jmp
call
pushl
fstpt
or
mov
cmp
push
pop
fcoms
pop
sub
ljmp
adc
fcomp
lahf
repnz
adc
cmp
lods
mov
jmp
incl
pop
stc
ds
out
js
ret
sbb
jbe
das
out
mov
dec
aam
cwtl
inc
lcall
jns
in
cmp
sar
cmpsb
decl
push
in
push
mov
cmp
ljmpw
cli
adc
inc
out
inc
ljmp
jmp
inc
jmp
scas
dec
mov
inc
decl
incl
push
push
call
ljmp
decl
ljmp
nop
mov
movsb
fisubrs
sar
call
push
mov
push
jmp
inc
add
scas
jmp
push
mov
jmp
fadd
decl
push
lcall
xor
dec
inc
stc
shl
mov
outsb
sub
dec
or
dec
add
ljmp
pushl
sar
push
in
push
inc
add
jo
add
mov
call
push
jno
add
mov
add
clc
push
dec
or
pop
gs
mov
dec
leave
mov
stos
cmc
sbb
pushf
push
push
jno
sarl
pop
aam
jo
dec
jo
out
pusha
dec
enter
aam
mov
mov
cmp
sub
ljmp
xor
pushl
repnz
lcall
dec
inc
fcmovbe
inc
pushl
and
jo
fwait
xchg
push
jmp
lcall
pop
incl
push
imul
add
pop
loope
mov
and
or
mov
incl
dec
cmp
push
pop
popf
sbb
ja
lcall
sahf
pushf
je
ret
pushf
hlt
outsl
pop
or
out
cmp
pushl
jno
inc
mov
pop
rcll
lock
icebp
mov
arpl
cwtl
inc
incl
call
lahf
pop
mov
call
lcall
inc
dec
jge
inc
ficompl
call
in
mov
orl
imul
clc
push
test
cmp
lods
pop
clc
cmc
cmp
mov
jmp
mov
cmp
pop
jge
or
or
mov
aad
cmc
mov
cld
xchg
cld
jb
aam
mov
pop
scas
jecxz
adc
dec
in
xor
f2xm1
repz
mov
ljmp
mov
xchg
movsb
pushl
jne
cli
mov
mov
in
jmp
ja
lcall
lods
out
mov
lcall
call
lock
jge
jmp
cmpsl
inc
call
xchg
pop
pop
jge
pushl
pop
movsl
ljmp
incl
incl
pop
push
pushl
filds
fldenv
cmpsb
jmp
fucomp
in
xchg
cmpsb
sti
jg
jmp
push
cld
mov
mov
scas
dec
callw
xor
bound
add
jo
push
add
int
cmp
cmpsb
pushl
fstpl
ljmp
jmp
jmp
inc
lcall
call
pusha
jmp
xor
fsubr
pop
and
mov
pop
jg
aad
cmpsl
incl
jmp
jmp
jle
lcall
out
xor
insl
enter
mov
incl
push
push
cltd
xchg
xchg
call
jne
push
repz
mov
push
add
arpl
add
mov
mov
fisubl
std
insl
setns
xchg
jns
insl
adc
fmuls
aad
jno
inc
mov
pop
incl
ljmp
jge
xchg
add
lcall
jns
lcall
push
pop
popa
call
mov
add
add
add
add
mov
pushl
ret
pushl
roll
pop
dec
mov
call
mov
xchg
ljmp
cmp
cmp
insl
xchg
and
fldenv
addr16
jmp
push
wbinvd
mov
notb
mov
sahf
int
mov
ficoms
sbb
lcall
push
and
add
add
add
decl
jb
mov
sbb
xor
jmp
add
cmp
add
in
lcall
mov
lea
pop
sub
test
loopne
lea
and
cmp
inc
fidivrl
and
pop
dec
in
dec
call
inc
pushl
adc
jecxz
call
jmp
cmpsl
inc
gs
adc
in
ret
sarb
je
pop
ret
ljmp
repz
out
ljmp
mov
adc
or
pop
xor
add
inc
add
sar
ret
decl
in
pop
jmp
jmp
decl
jmp
adc
and
incl
incl
add
push
dec
mov
dec
jnp
in
jb
jns
pushl
enter
cmpsl
jmp
jmp
into
xlat
cmp
call
ljmp
std
or
mov
inc
jmp
enter
mov
jmp
xor
sub
lcall
dec
cmp
call
in
add
add
add
lds
and
test
sar
pusha
decl
jle
jae
ss
lcall
int
cmp
push
ret
add
cld
add
loop,pt
sahf
in
mov
xchg
push
mov
in
xlat
push
push
mov
sub
insb
icebp
lret
rclb
test
pusha
lcall
mov
push
jo
jae
add
decl
div
jmp
add
add
add
or
incl
xchg
movsl
jmp
call
cmp
cltd
add
decl
push
jnp
add
jmp
jo
cmpsl
mov
call
outsl
arpl
inc
pop
inc
add
add
loopne
adc
xchg
xor
cmp
jecxz
decl
test
add
push
ret
cmp
jp
outsl
mov
call
add
lret
aaa
out
in
das
dec
jnp
aam
mov
add
ds
shl
lcall
or
cmp
loop
jmp
cmpsl
decl
leave
loope
pushf
in
out
push
dec
xor
shlb
fcmovnbe
out
pop
sub
lcall
push
mov
and
jmp
pushf
jnp
mov
lcall
inc
decl
mov
imul
call
jmp
cwtl
popa
pushl
fisubl
in
push
inc
add
add
add
lods
push
je
jmp
lds
push
add
call
ljmp
cmc
push
push
insb
mov
idivb
ljmp
jmp
lds
cmpsl
mov
add
rolb
add
sti
push
add
lds
add
add
sub
jo
pop
jns
insb
add
sbb
in
jle
incl
jecxz
push
imul
pop
push
incl
jmp
call
mov
sub
inc
pushl
movsb
dec
lret
inc
jle
cmp
in
or
ret
sub
cltd
faddl
pop
or
arpl
cmp
mov
enter
int
imul
sub
or
and
cmp
stc
aas
or
push
jmp
add
jo
add
add
ljmp
add
incl
lcall
scas
lea
pop
iret
fcoml
inc
jmp
lods
ds
sbb
clc
cmp
add
add
lods
iret
lcall
decl
insl
add
call
cmp
add
ljmp
out
sbb
popf
push
mov
mov
icebp
lret
mov
cmpsl
ljmp
mov
add
incl
adc
ficompl
dec
mov
sbb
jmp
call
push
ret
add
add
push
ret
sub
iret
bndldx
test
inc
stc
mov
call
scas
in
sbb
ds
ss
mov
pushl
nop
cmp
or
dec
jp
aad
stos
in
xor
xor
jmp
add
cmp
fcomp
mov
jp
lcall
shll
jmp
inc
incl
insb
inc
insb
insb
jmp
add
adc
pusha
push
dec
aaa
lret
pop
sbb
mov
vmovsd
adc
lods
fucom
decl
pushf
mov
out
test
sti
sub
jmp
inc
lcall
sbb
call
cmp
mov
gs
sahf
mov
imul
in
add
pushl
jmp
jg
sub
mov
jl
fbld
inc
lcall
cmp
hlt
test
lock
jge,pn
jno
and
mov
arpl
mov
out
xchg
popf
adc
sti
or
int3
push
sub
xchg
pop
sbb
sldt
mov
add
call
fldz
mov
testb
mov
lcall
call
call
sub
mov
and
pop
mov
hlt
add
call
lret
mov
sbb
mov
push
ljmp
scas
sar
das
scas
sti
push
cmp
fwait
mov
pop
scas
clc
and
jmp
jmp
add
lcall
pop
dec
jp
fstpl
sbb
xchg
add
decl
dec
test
sub
dec
fcoms
int3
jno
fmuls
mov
sub
jo
push
call
test
in
jae
add
pushl
decl
fiaddl
cmp
jp
cmp
into
sub
cld
cltd
lock
cmp
jmp
repz
adc
fistpll
add
decl
add
cmpsl
cld
add
inc
and
jmp
jmp
call
mov
lock
cmp
mov
mov
mov
xor
cmp
jne
insl
call
test
add
mov
add
sub
dec
fmul
out
sub
inc
ljmp
std
adc
lea
call
dec
cmp
daa
mov
push
dec
lock
shrb
mov
mov
cmpsl
ljmp
mov
roll
movsb
ljmp
incl
xor
rolb
or
jl
jmp
pushl
cmp
sub
in
cmp
dec
push
push
inc
ljmp
push
dec
daa
jmp
insb
push
mov
aam
dec
add
incl
jmp
incl
incl
incl
ds
cmp
or
out
test
pop
fildl
ljmp
dec
imul
jmp
jo
fdivr
mov
mov
outsb
inc
lcall
xchg
lcall
push
add
add
out
aad
into
je
jae
mov
insb
jmp
cmp
mov
scas
xchg
lods
sbb
dec
xchg
imul
jmp
xor
pop
scas
ret
lcall
push
inc
mov
call
incl
incl
lcall
outsl
sbb
sub
adc
inc
decl
sub
pop
xchg
mov
fnsave
sub
sbb
pop
ljmp
fiaddl
mov
add
jmp
add
mov
push
or
mov
add
incl
adc
movzwl
jmp
add
add
adc
rcrb
and
dec
pushl
xchg
add
jl
push
loop
pushf
lret
add
jmp
incl
jmp
push
cld
mov
ja
dec
repnz
lcall
or
or
jmp
jmp
xor
jmp
call
push
jge
test
dec
iret
adc
pop
incl
jnp
jecxz
aaa
cltd
cli
in
lcall
gs
add
jne
add
add
test
decl
jp
adc
push
or
jmp
add
add
add
inc
pushl
in
jns
negb
sahf
dec
and
fstps
push
jmp
push
ret
add
incl
mov
fs
fiaddl
scas
sahf
mov
pop
jmp
add
add
call
hlt
pop
add
lcall
and
inc
decl
push
push
es
call
inc
jmp
mov
dec
dec
jb
jne
pop
decl
enter
mov
mov
pushl
incl
daa
cmp
xor
dec
inc
pushl
mov
cmp
push
mov
incl
push
lahf
cmp
stc
stos
xor
je
xchg
stos
jge
jmp
lcall
adc
mov
ja
jmp
push
cmp
jnp
shlb
sti
pop
out
sbb
ds
lcallw
ljmp
ljmp
call
ljmp
mov
dec
sbb
inc
add
cld
add
push
mov
mov
jmp
add
add
add
push
mov
insl
jecxz
cmpsb
jmp
xor
cmp
push
jbe
inc
jmp
incl
int
or
push
xor
sbb
repz
stc
adc
clc
fs
fdivrl
jp
adc
and
cmp
loop
xor
pop
cld
jae
lcall
ljmp
dec
das
movsl
pushl
jmp
incl
sbb
pushl
or
cmp
ljmp
aam
add
mov
cs
jmp
jge
pushl
lcall
add
jmp
add
add
inc
push
pop
outsl
xchg
cmc
in
shll
sbb
mov
cli
xor
jmp
mov
lcall
fidivl
clc
xchg
lret
mov
mov
inc
push
push
inc
call
jbe
dec
inc
push
lods
push
decl
jmp
add
push
add
sbb
xchg
inc
add
add
add
incl
cli
pop
add
lcall
enter
fcoml
jb
jmp
mov
pushl
decl
sbb
test
sbb
add
jbe
ljmp
sub
incl
add
xor
dec
mov
cmp
test
jmp
jmp
mov
rorb
push
ds
push
sbb
pushl
movsb
inc
fdivr
sti
and
stos
push
nop
dec
add
jmp
inc
add
lods
adc
aaa
into
aas
ds
das
add
add
cmp
add
dec
cltd
sub
push
fimuls
ljmp
lcall
sbb
dec
mov
gs
add
pop
mov
jns
call
adc
mov
sbb
test
shr
fs
add
add
add
cltd
outsb
insb
stos
cld
lret
dec
mov
sub
mov
pop
mov
adc
call
mov
cmp
repnz
xor
dec
lcall
dec
stc
add
ljmp
cli
mov
jle
jmp
jmp
adc
jg
add
mov
out
mov
or
aas
jecxz
and
decl
add
cld
cmp
add
loop
daa
call
daa
decl
or
and
call
sub
call
cmp
jmp
icebp
outsb
lods
cltd
push
ret
mov
mov
jo
pop
mov
aas
in
incl
mov
add
xchg
lods
incl
ljmp
lcall
xor
cmp
sahf
out
sahf
jle
dec
cli
dec
push
dec
mulb
jmp
add
add
add
call
fwait
sub
incl
inc
ds
ljmp
dec
xor
call
mov
das
or
or
ljmp
push
sbb
push
push
inc
add
add
add
add
fldt
ret
fbstp
push
xchg
jge
push
push
push
ret
cmpsl
fadds
mov
popf
cmp
call
loop
cmp
inc
ljmp
loop
xchg
arpl
sbb
or
push
ret
add
or
std
pushf
cmp
and
mov
enter
jns
lcall
jmp
and
mov
std
sbb
xor
inc
add
add
mov
add
loope
fs
ljmp
pushl
mov
test
call
dec
std
xchg
imul
xor
loop
cld
push
call
xlat
xor
in
push
loop
cltd
out
push
in
into
lods
fwait
add
dec
pop
repnz
cmp
jmp
push
add
mov
dec
repnz
mov
ljmp
jmp
ljmp
js
pushw
mov
outsb
or
cmpsl
cmp
cmpsl
ljmp
sbb
add
call
int
popf
cmpsl
ljmp
ljmp
stos
movsb
call
push
xor
jmp
add
add
mov
cmp
aas
in
dec
jne
call
ficomps
and
and
fsubs
pop
lret
in
dec
outsl
stc
push
or
loop
dec
movsl
sti
dec
cmp
jmp
fisttpll
cmp
pop
dec
sub
sti
xchg
fmull
pusha
jmp
call
adc
hlt
out
push
push
jmp
add
and
insl
jbe
inc
decl
add
ljmp
ja
add
push
ret
add
mov
mov
ret
lcall
cmp
imul
hlt
jp
cmovs
adc
xor
insb
inc
decl
cmpsb
cld
roll
jmp
mov
cmp
push
cmp
mov
jb
adc
aaa
mov
ds
leave
mov
push
xchg
ja
sub
inc
call
push
jbe
incl
sub
cmc
out
vunpcklps
incl
lcall
rclb
and
add
sbb
adc
add
ljmp
daa
call
ljmp
push
in
test
push
jge
jmp
fcoms
lret
aam
out
loopne
aas
cmp
pop
mov
lret
and
sub
call
notl
cmp
dec
sbb
cli
cmpsl
decl
add
jmp
pushl
call
repz
xchg
sbb
pushl
je
adc
add
incl
sub
pop
lcall
call
decl
insl
adc
lods
mov
mov
pushl
lcall
movsb
decl
pop
ds
inc
call
mov
push
sbb
add
add
call
or
call
adc
mov
inc
incl
adc
jmp
call
int
adc
fildl
sbb
lds
add
add
add
add
jmp
mov
repnz
hlt
es
cmp
hlt
xchg
push
push
adc
stos
mov
xlat
ret
dec
jmp
adc
ja
sbb
daa
cli
stc
addr16
xchg
sub
imul
imul
call
insb
cld
add
fildll
stos
in
sbb
and
rorl
loopne
mov
repz
xchg
xchg
jmp
dec
xchg
lret
mulb
inc
call
add
test
incl
cmp
cld
lds
daa
incl
pushl
mov
ljmp
add
dec
xor
dec
mov
mov
cmp
jno
jmp
xor
inc
call
cmp
call
mov
jno
test
pushl
xor
int3
jae
sbb
add
incl
mov
sbb
notl
ljmp
jmp
movsl
pushl
aas
faddl
decl
jmp
jo
add
loopne
mov
and
ret
incl
lcall
jb
aas
ret
fisttpll
call
incl
in
lcall
ror
cmpsl
decl
cmc
sub
dec
movsb
incl
mov
iret
sub
movsb
fsubs
incl
sub
cmp
faddl
mov
incb
and
fwait
popf
ss
clc
fildll
mov
mov
push
or
incl
ljmp
cmp
lcall
mov
mov
and
sub
add
decl
in
adc
pushl
stc
scas
sbb
jmp
add
fmuls
sbb
cli
sti
incl
add
add
add
in
mov
push
jne
push
ret
ret
mov
xor
push
adc
decl
pusha
jge,pt
mov
and
jb
aad
decl
mov
push
push
ret
add
notb
call
int3
xor
je
lcall
iret
call
ljmp
pop
add
decl
push
mov
mov
jmp
mov
add
pop
ss
ljmp
mov
xchg
inc
inc
add
add
call
push
cmp
mul
call
loopne
and
aas
cmp
fldcw
add
call
ss
dec
jns
jae
incl
and
arpl
jb
mov
in
sbb
inc
add
add
add
aas
std
xor
ja
mov
mov
ss
je
jnp
test
daa
ljmp
jmp
cld
fadds
add
cmp
outsb
mov
int
pushl
popf
jnp
push
xor
adc
xchg
aam
dec
scas
sub
stos
or
mov
incl
pushl
inc
call
inc
lcall
idivb
sar
xlat
mov
cmp
incl
jl
dec
std
scas
mov
mov
sub
decl
or
stos
xchg
add
ljmp
push
mov
jmp
fadds
jo
test
cmp
cltd
in
cmp
dec
and
xchg
sbb
hlt
jae
shrl
sti
nop
clc
mov
push
inc
add
add
add
sub
cmp
push
xchg
popa
ljmp
dec
mov
js
lods
decl
ljmp
test
and
push
push
pop
push
ret
fadds
add
call
daa
call
jmp
dec
cmp
or
push
xor
testb
out
mov
punpckhdq
mov
cmpsb
lcall
inc
decl
rcrl
xchg
fs
fiadds
dec
ret
pop
push
push
jmp
add
cld
add
push
adc
add
cmp
add
lcall
test
pushf
xor
rcl
and
xchg
ss
mov
es
cmp
fisubl
call
stc
or
ja
cmp
xchg
fists
add
add
add
inc
ljmp
pushl
arpl
and
scas
aad
jge
jmp
jmp
jmp
sub
decl
push
pushl
cmc
lahf
mov
cmp
cwtl
incl
fisttps
inc
pushl
decl
das
push
jecxz
pop
mov
insb
lcall
fnstcw
sbb
lret
push
mov
push
ret
cmp
mov
lcall
pushl
movsl
jmp
mov
sar
ljmp
in
mov
mov
sti
dec
inc
decl
jmp
clc
dec
out
or
js
jmp
call
call
and
mov
cwtl
jg
xlat
sar
mov
push
add
add
fadd
add
jge
mov
call
mov
test
push
loope
mov
ss
add
arpl
push
jge
lahf
out
pushf
pop
and
ror
out
jnp
cmp
fsts
xor
pop
icebp
pushf
push
jmp
fnstcw
inc
out
jp
insb
xchg
test
or
fnsave
jmp
and
adc
incw
mov
add
jmp
pop
inc
add
mov
cmp
add
jnp
mov
rcll
stc
push
cmp
inc
call
xor
call
cmp
mov
adc
call
cwtl
xchg
insb
cmp
sbb
lret
cmp
jmp
mov
add
push
mov
cmc
incl
add
add
mov
dec
in
int
call
jnp
inc
call
call
add
cmp
pushl
jbe
sub
push
lea
jmp
add
call
in
lret
call
xchg
pop
loop
mov
frstor
pop
push
dec
das
push
xor
sub
loopne
jae
lret
lcall
mov
dec
add
incl
sbb
sub
inc
lcall
lcall
decl
testb
jmp
fdivs
inc
jge
cmp
mov
or
pushl
mov
mov
aaa
push
add
mov
add
iret
mov
lret
jl
aaa
xlat
lret
sub
inc
jmp
add
add
add
repnz
xchg
jp
test
xchg
push
push
test
or
in
xchg
pushl
cld
sahf
xor
sti
mov
pop
or
loop
cmp
daa
jmp
loope
sbb
xchg
shl
incl
pop
push
push
jp
jmp
inc
pushl
mov
inc
add
inc
add
fsubs
lret
ljmp
ljmp
incl
stos
sbb
add
nop
push
and
test
leave
pop
mov
cltd
nop
in
test
and
push
aad
xchg
jmp
jmp
push
add
inc
pop
popa
pushl
add
call
jmp
daa
pushl
cli
clc
aam
movsl
ljmp
clc
jp
dec
pop
push
mov
call
aad
mov
sbb
xor
cld
movaps
or
cmpsl
pushl
mov
call
jge
leave
imul
cld
cli
cmp
pushf
mov
lea
push
sub
lret
lcall
into
sub
fimuls
das
clc
cli
and
sub
add
call
dec
negb
add
dec
lcall
xor
mov
dec
cmp
add
add
add
call
push
stc
cmp
outsb
xlat
mov
add
add
add
inc
xlat
jmp
or
add
add
cld
mov
add
sbb
lock
mov
jo
xor
cmc
and
ljmp
sar
idivl
push
mov
jno
jmp
inc
dec
rclb
mov
add
add
add
add
mov
pop
repnz
incl
or
incl
lcall
fistpl
hlt
jae
xor
test
lcall
mov
lcall
adc
icebp
mov
push
dec
loope
setbe
cs
incl
incl
cmp
cli
lock
xchg
cmc
bnd
pop
jmp
add
add
add
enter
xchg
xchg
xchg
test
fst
ss
adc
clc
push
pop
jo
ljmp
mov
sbb
pop
out
sub
loope
jbe
decl
mov
jmp
jmp
add
add
mov
adc
cmp
cli
sbb
or
jecxz
and
jo
push
sbb
in
add
or
jmp
pop
mov
push
add
fadds
add
add
push
call
inc
pushl
cld
jle
cmp
in
lea
repz
xor
into
push
xchg
mov
flds
addr16
clc
xor
push
mov
jmp
mov
add
and
aaa
push
sbb
add
jmp
incl
sub
and
mov
nopl
push
loopne
xchg
mov
ffreep
mov
in
lahf
inc
inc
jmp
add
add
add
jne
xlat
jae
rep
dec
pusha
pushl
pushf
xchg
mov
jo
in
icebp
or
sar
pushl
adc
xor
out
jb
test
push
cmp
int3
xchg
js
cmp
ljmp
fmuls
pushl
pop
jp
jecxz
insl
adc
dec
cmpsb
lcall
push
pop
push
dec
cmc
pop
jb
xchg
mov
decl
sbb
decl
data16
mov
cmpsl
lcall
jmp
adc
incl
push
fisubrs
lcall
dec
movsl
decl
decl
and
add
call
pushl
hlt
fwait
sbb
int3
mov
dec
inc
incl
jns
mov
xor
adc
push
mov
in
leave
je
add
decl
jge
push
add
jmp
add
in
dec
in
arpl
and
add
cs
aas
adc
out
xor
cld
or
rolb
add
xchg
or
ljmp
ret
add
add
imul
mov
add
add
call
divl
adc
stc
in
dec
xor
mov
fstps
fsubs
xor
pop
pop
jg
in
pop
sti
add
mov
popf
or
stos
mov
xchg
ja
mov
push
mov
sbb
adc
call
jmp
dec
cmp
or
adc
mov
mov
fistl
mov
lea
lcall
add
jnp
inc
dec
fisubrs
mov
ret
lcall
and
xor
adc
adc
leave
fucom
incl
pop
mov
xchg
and
ret
add
jmp
incl
push
arpl
popa
incl
decl
repz
incl
cmpsl
add
cmpsl
incl
ljmp
imul
ljmp
or
jmp
jmp
lcall
mov
mov
enter
sbb
loop
sbb
insb
sub
jmp
decl
repnz
shr
jmp
mov
add
cwtl
addr16
incl
pushl
fidivrs
xor
fcmovb
cld
mov
mov
jno
push
ljmp
movb
scas
aaa
add
add
add
pop
lret
or
fiadds
push
jo
pushl
ljmp
daa
incb
xor
mov
pop
stos
psubusb
xchg
nop
cmpsb
call
call
inc
sub
jmp
call
decl
incl
fldt
dec
xchg
cmpsl
decl
aas
rcl
std
iret
add
push
out
or
cmpsb
sti
cltd
cli
pop
cmp
pushl
in
add
lahf
orl
xchg
scas
xor
cmp
nop
outsl
inc
call
mov
sbb
xor
incl
jne
jne
sar
push
inc
jmp
std
jns
and
fldt
jo
jge
ret
mov
cmpsb
inc
lcall
lea
jmp
add
cmpsl
add
dec
push
dec
xlat
int
jmp
incl
call
pop
adc
push
mov
jmp
add
add
callw
test
mov
fldcw
sbb
add
jp
lcall
dec
insl
lods
jmp
pushl
jbe
xchg
or
mov
je
ret
jmp
iret
sarb
jmp
add
call
incl
mov
jmp
jmp
decl
xchg
ds
inc
call
lret
inc
jmp
xor
leave
call
pushf
mov
cs
cmp
incl
jmp
add
push
mov
incl
decl
jne
dec
ret
jns
decl
mov
sub
fsubs
xchg
push
xor
jmp
push
inc
add
add
lcall
incl
and
std
icebp
sub
add
faddl
dec
arpl
mov
ret
ljmp
call
int3
sbb
add
add
add
fisttpl
mov
ljmp
push
decl
pushl
pushl
push
in
jmpw
jle
jnp
push
inc
mov
push
in
incl
add
inc
stos
jle
dec
dec
loope
js
cs
sbb
incb
jmp
loope
ljmp
ds
loope
repz
inc
jmp
rep
xor
leave
test
outsl
cld
testl
and
xor
decl
decl
rolb
push
xor
push
lcall
test
in
adc
call
sbb
jne
jmp
add
call
jmp
adc
pushl
call
cmpsl
in
incl
add
jne
add
add
lret
mov
xor
cld
cmpsb
push
push
and
callw
and
add
push
mov
decl
fwait
icebp
mov
cmpsl
jmp
ljmp
or
pop
pop
loopne
daa
lcall
mov
adc
call
pop
mov
sbb
int
xchg
adc
incl
ds
jo
inc
pushl
mov
cwtl
pop
add
cmp
add
cld
jle
ljmp
push
cmpsb
jmp
dec
fists
mov
or
cmp
pushl
lock
xchg
outsb
inc
call
dec
add
jmp
incl
aad
incl
in
sar
pushl
dec
push
pop
cs
inc
pushl
fmuls
fiaddl
das
dec
dec
pop
jl
cmp
pop
dec
jo
jmp
cmp
and
lods
fnsave
sub
mov
ljmpw
enter
call
idivl
js
add
add
jmp
sub
mov
sar
jmp
push
decl
cld
loop
sub
ds
fsub
decl
pushl
mov
cmp
in
mov
pop
xor
data16
fsubr
out
pushl
lea
push
ret
add
jne
cmp
inc
sti
cs
std
pop
mov
decl
inc
jmp
dec
pop
lcall
inc
lcall
mov
push
sbb
xor
test
shrb
std
roll
fcomi
imul
xor
sbb
call
cmpps
fdivrs
pushf
outsb
mov
mov
daa
call
xlat
mov
or
xor
incl
sub
mov
sub
movsl
incl
mov
lcall
iret
fldcw
sbb
add
jmp
add
add
call
jmp
add
mov
or
fisubl
loop
sub
shr
mov
cmc
outsb
adc
jmp
inc
add
add
nop
sub
inc
call
ljmp
or
xor
pushl
ljmp
std
into
cltd
mov
inc
lcall
dec
stc
and
scas
rorl
add
jmp
mov
repnz
mov
push
decl
inc
incl
jp
test
xor
push
pop
jmp
lds
add
mov
sbb
jmp
mov
mov
inc
decl
loopne
mov
jp
scas
loop
jp
cli
cmc
inc
decl
xchg
pop
cmovs
js
cli
xchg
ficomps
pop
cli
or
sub
mov
adc
incl
mov
jmp
cld
mov
add
es
mov
ja
jge
dec
call
fstl
add
add
add
cmp
inc
call
jmp
xchg
mov
pop
aad
lcall
mov
pop
dec
aas
inc
ljmp
scas
xor
loopne
ror
sar
call
push
add
add
cmp
mov
sti
loop
lahf
push
cmp
lcall
sahf
shlb
call
test
jmp
loop
sbb
jmp
mov
sar
incl
cld
sbb
pushl
xor
jmp
ljmp
xchg
inc
lcall
lcall
dec
addr16
add
jne
cmpsl
cld
push
dec
int
mov
test
ljmp
sub
sar
pushl
test
xchg
cmpsl
jmp
ljmp
xor
inc
jmp
xor
mov
push
adc
popf
hlt
mov
sar
lcall
xchg
push
aam
rcrl
dec
jbe
cmp
push
ret
and
int
jno
sar
xlat
or
cwtl
xchg
popf
fmuls
adc
out
cltd
cmpsl
jp
xchg
sar
in
adc
cmpsb
jmp
inc
call
aam
sbb
ja
dec
mov
call
xchg
jno
stos
push
mov
and
decl
jmp
xchg
jmp
dec
mov
jmp
decl
out
dec
jl
mov
aam
dec
cmp
mov
test
ljmp
xchg
out
xchg
xor
cmp
jl
cmc
out
insl
sar
jmp
movsb
ljmp
ljmp
jne
test
incl
incl
adc
sar
fsubl
xchg
test
and
push
decl
add
call
loope
out
mov
ss
cmp
insl
cmpsl
incl
dec
mov
pop
leave
shrb
xchg
lods
sub
xchg
jb
scas
cld
nop
test
add
cmp
sbb
incl
lahf
dec
cmpsb
call
sbb
jmp
f2xm1
clc
iret
scas
imul
sbb
and
fmull
incl
ljmp
call
xchg
sub
arpl
pop
clc
xchg
rolb
aas
push
xor
pushl
xchg
mov
loopne
add
jmp
pushl
or
call
dec
xchg
sbb
test
pushl
in
test
add
add
add
add
dec
pop
pop
xor
repz
cmp
call
test
inc
push
jp
inc
lcall
mov
ret
jmp
xchg
push
cmp
jmp
add
jo
add
fmull
xor
mov
dec
aam
xor
jnp
pushl
dec
inc
mov
sub
inc
incl
incl
test
mov
jecxz
sti
xchg
or
fxch
add
pushl
iret
inc
call
iret
jl
jg
fmul
lcall
pop
mov
lods
xor
incl
das
cld
mov
and
sbb
inc
ljmp
inc
add
jmp
add
cmc
cmp
lcall
mov
xchg
out
mov
push
lcall
ljmp
cmp
sub
call
xchg
idivl
cmc
icebp
xchg
mov
mov
lcall
pop
jbe
lcall
dec
jbe
cmp
stos
or
fwait
daa
fisttpll
jo
adc
push
pop
ds
insl
cmp
pushl
jmp
incl
out
lcall
outsb
cmp
dec
lods
dec
pop
xchg
cmp
ljmp
dec
sahf
dec
fsubs
dec
cmp
jmp
decl
dec
imul
lods
out
test
pop
pop
add
decl
mov
cmpsb
fcomps
mov
or
sbb
pop
movsb
lcall
lea
inc
ljmp
cld
mov
fimuls
sbb
pushl
je
movsb
xchg
incl
daa
inc
add
add
add
sti
popa
jmp
jmp
fwait
in
mov
add
push
outsl
loope
fnsave
or
push
jbe
push
jmp
mov
jecxz
lock
popa
mov
pop
add
add
add
je
lcall
stos
mov
lret
mov
add
add
add
jne
jmp
cli
dec
push
mov
xor
jmp
clc
mov
incl
pushl
lcall
int
mov
aaa
hlt
lea
stos
mov
lcall
jmp
pop
sar
jmp
mov
and
test
cmp
xchg
sub
xor
ret
add
add
rcrb
sbb
pop
testb
xor
xchg
fstpt
push
incl
cmp
dec
fnsave
sub
or
ljmp
dec
movsb
stc
adc
xor
push
mov
sbb
jmp
stos
insl
inc
insb
mov
call
xor
enter
outsb
xor
fmuls
jmp
ljmp
in
cmp
and
ret
decl
xchg
movsl
lcall
push
sbb
lcall
popa
js
ljmp
dec
mov
incl
jmp
pop
adc
mov
or
aas
jmp
call
jns
incl
jmp
decl
cwtl
js
out
lock
lret
xchg
sar
pop
adc
pop
fdivp
add
call
dec
mov
rcrb
call
xchg
test
pop
mov
cmp
xchg
repnz
decl
or
mov
lcall
ds
jl
in
stos
mov
mov
lcall
cmp
cmc
cmp
incl
inc
fucomi
pop
sar
cmp
jnp
mov
cmp
cmp
sub
pushf
sar
ljmp
inc
incl
cmpsb
xor
ret
cmp
jne
push
cmp
jbe
aas
clc
shrl
sbb
xchg
xor
push
adc
jmp
jp
dec
or
std
and
cs
incl
call
lcall
out
dec
or
fwait
push
and
scas
push
and
mov
lods
and
xor
jmp
hlt
push
jns
lcall
and
outsl
mov
gs
push
jmp
lahf
repnz
pushl
sahf
mov
js
testb
add
cmp
fldt
cs
in
call
pop
jmp
fdivs
add
mov
dec
scas
and
xor
stc
pop
call
mulb
sub
stos
jmp
in
lcall
incl
sub
fcmovnu
aaa
jae
pop
lahf
aam
mov
pushl
ljmp
lcall
mov
decl
xor
pushl
or
jmp
add
test
jl
je
jns
cmp
cmp
fcoms
outsb
jmp
roll
add
mov
add
jmp
dec
test
and
aam
or
sarb
mov
xchg
add
cwtl
int
out
cmp
mov
push
loop
jb
decl
pop
and
cld
inc
decl
mov
lcall
add
incl
faddl
push
push
and
das
incl
mov
jmp
add
add
add
aaa
mov
jmp
cmp
dec
mov
cwtl
stos
sar
incl
cltd
inc
pushl
pushl
shr
lret
add
cmp
out
int
ljmp
push
fisttpl
sub
in
sti
insb
pavgb
xchg
dec
mov
das
mov
push
fstl
movsb
ljmp
push
call
or
iret
sub
lcall
mov
mov
in
fiadds
lods
jnp
nop
jb
fxch
std
xchg
outsb
shlb
testb
incl
daa
pushl
jle
mov
fsubp
call
call
sahf
inc
dec
add
call
add
jmp
js
incl
push
pop
adc
and
mulps
push
mov
decl
sbb
and
jmp
add
add
pushl
push
pop
mov
cli
pop
or
adc
fisubs
aaa
lcall
jne
pushl
push
pop
mov
push
xor
stc
pop
das
xchg
sub
and
pop
adc
lcall
test
fmull
xchg
scas
add
roll
pop
sub
jae
adc
cmpsb
call
dec
push
sar
jle
dec
sub
mov
cmpsb
outsl
inc
add
mov
add
cmp
cmpsl
call
and
push
add
add
jmp
lcall
ss
js
push
out
xor
movsb
push
adc
lock
decl
loop
sbb
in
xor
add
add
dec
icebp
mov
aas
sbb
incl
incl
es
sar
call
jle
or
negb
mov
cmp
test
mov
call
jmp
jo
add
or
push
add
jmp
xor
and
cmp
sbb
sub
rcrl
jge
pop
stos
outsl
notb
je
push
ret
adc
aad
call
sahf
or
ljmp
fldl
call
xchg
cmpsb
incl
pushl
push
ret
add
add
dec
cmpsb
jmp
lcall
pop
testl
pushl
adc
lcall
incl
sar
out
outsl
outsb
cwtl
push
pop
mov
mov
faddp
ljmp
push
cmp
pusha
ljmp
inc
call
and
dec
mov
add
decl
jl
cmp
push
jne
lcall
scas
ret
push
sahf
decl
call
cld
loope
push
add
stos
aas
mov
mov
lcall
jmp
sbb
sar
call
xchg
xchg
sti
adc
incl
jge
pop
jbe
decl
rorb
pop
jmp
lods
and
lret
ret
pop
jl
jmp
lcall
sub
call
xor
mov
ret
jmp
decl
cmp
push
inc
jmp
jo
and
jb
mov
push
ret
push
add
add
mov
incl
push
test
jg
lret
aam
insb
xchg
pop
push
sar
pop
push
aas
stc
cmp
lods
xchg
jl
call
inc
call
pop
daa
lcall
cs
mov
pushl
call
inc
dec
sub
out
push
mov
jmp
jmp
jmp
lcall
std
aas
xlat
popf
aad
jbe
add
jmp
sbb
xor
mov
into
or
jecxz
mov
xor
push
fistpl
cmp
add
jmp
mov
cld
adc
xor
mov
inc
add
push
fdivr
mov
sti
insl
decl
fcoml
pop
in
inc
pushl
dec
cli
jb
jns
incl
decl
lea
stc
loope
push
sbb
add
add
mov
sahf
cmpsb
jns
mov
push
imul
add
mov
sbb
or
pop
into
pushf
push
mov
jmp
add
mov
lcall
jmp
call
add
cmp
loop
mov
incl
imul
mov
sti
fistl
inc
call
jl
pushl
and
jmp
pushl
jp
push
or
out
adc
adc
pop
add
xchg
jge
dec
adc
ljmp
mov
call
mov
shlb
adc
test
adc
pop
inc
lcall
cmp
std
push
xchg
dec
xor
xor
cli
mov
lcall
jmp
ljmp
ficoms
dec
xchg
ljmpw
sahf
in
adc
adc
ljmp
ds
adc
xor
in
mov
mov
mov
push
ret
mov
xchg
push
imul
test
icebp
lea
sbb
call
jmp
add
out
adc
pop
pushl
imul
pop
sub
pushl
jns
jmp
movsb
dec
jmp
aaa
fistl
push
add
push
ret
or
in
sub
das
pop
mov
cmp
arpl
adc
jns
lcall
cmp
xchg
vaddsd
loope
imul
aas
callw
insb
cmp
sub
gs
cmp
call
shrl
cmp
or
jnp
clc
inc
lcall
add
jnp
add
mov
dec
sub
lret
sbb
add
int
dec
inc
pushl
xchg
or
jb
decl
aam
sub
je
push
ret
push
jnp
mov
call
cmp
lret
rcll
filds
add
add
add
cmpsl
cmp
aaa
ljmp
ja
dec
mov
inc
ljmp
shll
pop
stos
xchg
cli
jbe
imul
lcall
inc
pushl
push
ss
incl
int
pushl
fwait
jge
xchg
mov
pop
sub
jle
nop
jnp
cmpl
jmp
add
and
xchg
test
std
loope
inc
inc
incl
inc
cmp
js
call
inc
call
and
pop
add
call
frndint
sbb
pushl
cmp
add
jmp
cmpsl
jnp
mov
add
add
cmp
inc
add
xchg
lods
fbld
popf
push
lcall
in
jns
decl
ret
dec
dec
pop
add
jmp
dec
push
jmp
dec
out
pop
push
add
jo
add
push
add
cmp
ret
add
add
jne
pushf
popa
lcall
mov
insb
dec
call
aam
incl
mov
decl
std
cmp
jmp
dec
or
incl
jne
jmp
add
add
mov
pushl
dec
cmp
mov
cmc
std
stc
fdiv
jge
aas
in
xchg
nop
mov
cwtl
mov
cld
pop
scas
cmp
mov
int3
jle
decl
mov
jp
sar
ljmp
fstl
nop
lret
das
scas
ljmp
insl
inc
push
jmp
lcall
jp
xchg
and
icebp
das
mov
pop
push
mov
mov
jmp
sar
ljmp
push
cmp
sarb
xor
inc
call
inc
lcall
adc
stos
lret
jle
aaa
jg
xor
jno
or
push
push
ret
add
add
ja
aam
pop
mov
nop
fistps
call
jmp
add
jge
dec
jmp
push
add
cmp
test
call
loopne
popf
nop
in
fcmovnu
jg
xchg
jb
incl
push
stc
add
dec
xchg
xor
jmp
pushl
or
ss
enter
call
fstps
out
jmp
add
jns
add
add
add
add
sbb
ljmp
push
inc
lcall
xor
mov
inc
inc
call
xchg
std
insl
addr16
mov
xchg
in
add
cmp
decl
inc
call
cmp
lcall
into
sar
mov
jmp
add
jo
adc
ret
incl
fidivl
pop
or
xor
lcall
pop
push
pushf
ja
or
ljmp
jl
call
fcomip
jno
lea
lret
pushl
push
int
imul
jl
inc
jmp
ljmp
jg
pop
insl
sbb
cmp
cmc
and
pop
movsl
mov
fincstp
mov
or
dec
arpl
scas
adc
stos
fwait
or
jmp
mov
mov
mov
jmp
ss
pop
idiv
ds
aas
xchg
push
scas
repnz
mov
pop
movsl
dec
call
jns
dec
push
decl
xlat
mov
jmp
mov
enter
mov
js
mov
call
jmp
add
mov
jmp
loop
jmp
dec
int3
xor
pop
xchg
pop
lcall
inc
fnstcw
aaa
in
insl
stos
xor
or
lcall
and
xchg
stos
push
decl
stc
test
push
test
lcall
imul
push
aas
out
xchg
push
incl
call
sub
inc
call
xor
ret
jmp
add
add
add
jmp
cld
add
add
cmpsb
push
pushw
push
pusha
call
movsl
jmp
add
add
add
mov
aam
out
fdivs
aad
mov
out
imul
cmp
ljmp
cltd
mov
xor
ljmp
inc
lcall
in
mov
mov
sub
inc
lcall
nop
and
icebp
lahf
cwtl
mov
insb
sub
inc
lcall
sti
out
push
xchg
add
ljmp
jne
mov
jmp
lds
add
mov
ja
decl
xchg
adc
incl
fst
jno
push
jmp
incl
jge
mov
pushl
in
lret
push
sar
add
cmp
inc
decl
or
ss
inc
incl
aad
decl
test
or
add
fildl
cmp
ljmp
pop
leave
es
push
lcall
lret
out
aas
rclb
pop
pop
add
mov
mov
inc
ljmp
jp
lcall
jns
jmp
inc
incl
jecxz
jo
pushl
push
push
inc
add
inc
add
add
aad
mov
decl
add
dec
add
ljmp
inc
cmp
mov
mov
leave
jo
das
sub
ret
sub
leave
decw
mov
jnp
incl
incl
inc
call
push
jmp
cmpsl
cld
add
lcall
or
mov
cmp
mov
push
add
decl
out
push
dec
rcr
jmp
mov
add
add
mov
pushf
insb
leave
inc
incl
lcall
test
jmp
jmp
add
fnstenv
ds
jo
das
adc
fildll
lcall
inc
jmp
jmp
jle
call
push
cmpsb
jmp
mov
push
push
dec
push
ljmp
adc
mov
dec
cwtl
mov
cmp
sti
pcmpgtb
add
and
jmp
add
add
lahf
in
into
ja
imul
sbb
pop
into
mov
incl
fisubl
stos
pop
out
movsl
incl
mov
cmp
test
cmc
daa
je
adc
rol
decl
lahf
jmp
lea
jmp
mov
jo
jle
icebp
mov
mov
call
inc
jmp
and
mov
push
incl
lds
add
jne
lcall
ljmp
pushl
xchg
in
dec
jno
dec
mov
push
stos
daa
pushl
pop
daa
dec
push
pop
test
ja
push
lcall
loope
mov
push
aad
fidivs
xor
mov
loop
int
sub
dec
mov
arpl
add
call
repnz
call
or
and
add
outsb
clc
sarb
call
pushl
ficompl
in
cmc
stc
gs
sbb
adc
call
aad
lods
repz
int3
test
xchg
push
inc
decl
cmpsb
dec
xchg
cmp
aad
pop
pop
xchg
test
icebp
xor
call
pop
or
push
cli
sub
inc
pushl
jb
dec
pop
aas
jns
call
mov
call
sbb
in
pop
inc
lcall
dec
inc
lcall
pop
push
ret
cmp
add
fcomps
js
mov
ljmp
pushl
add
xor
mov
cmc
sub
test
push
dec
push
inc
pushl
incl
decl
bound
mov
add
add
add
lcall
xor
call
adc
push
cwtl
pop
aaa
cld
test
mov
add
add
jmp
add
add
ret
cmc
movsb
pushl
clc
xchg
inc
pushl
xchg
jno
xor
inc
jmp
add
add
mov
incl
cmp
pop
js
sub
decl
xchg
lret
outsb
pusha
ljmp
insl
mov
or
dec
int
inc
call
mov
push
mov
sahf
mov
dec
pusha
jmp
pop
call
pushl
imul
jb
pushl
jge
or
push
cmp
pop
xadd
decl
lods
mov
ljmp
push
inc
decl
mov
pop
mov
lret
cmp
lods
dec
xor
dec
inc
dec
xor
jp
cmp
std
push
push
pop
mov
fsubrl
cmp
jmp
lcall
js
neg
iret
inc
lcall
stc
mov
pushl
pop
clc
pop
inc
call
inc
decl
pushl
sub
and
scas
dec
jle
cmpsb
mov
out
clc
jl
push
pushl
dec
cmp
cmp
dec
push
repnz
decl
jns
notb
in
repz
int3
add
dec
sub
enter
sbb
cmc
sub
popf
adc
into
push
xchg
cmp
test
incl
dec
imul
jnp
mov
jbe
jmp
ljmp
adc
pop
lret
aaa
ja
lahf
xchg
jle
ret
aas
scas
fwait
cltd
mov
xchg
jno
lahf
xor
rcll
mov
jb
and
lret
call
lock
push
ret
mov
call
or
lcall
mov
sub
fyl2x
into
insl
lahf
pop
loope
adc
cwtl
adc
decl
add
sub
in
dec
adc
hlt
push
rclb
add
testb
incl
nop
cwtl
paddsb
mov
call
stos
shll
cmc
decl
cmp
and
pop
dec
sti
adc
jmp
aaa
dec
sbb
sbb
aam
or
pop
jbe
jmp
incl
in
xchg
ja
dec
test
mov
or
xor
inc
ds
cmp
jmp
jecxz
stc
ds
sbb
fnop
xchg
lahf
jmp
mov
ljmp
and
lcall
lret
arpl
ljmp
incl
add
inc
add
nop
lods
int
jmp
inc
lcall
mov
sub
fimull
sar
lods
scas
jb
jle
sub
mov
jmp
jmp
pushl
scas
js
fnstsw
cmp
jmp
decl
xchg
call
pushf
gs
add
inc
add
mov
je
pop
idivl
pop
inc
call
test
add
ljmp
pusha
lcall
popf
shrl
rol
dec
mov
add
pop
jno
out
jbe
jmp
pop
pop
fdivs
inc
fsubrl
loopne
test
mov
mov
fisttps
call
lret
jbe
call
mov
sub
or
insl
in
cmp
mov
call
mov
mov
lcall
decl
jmp
jmp
xor
int3
inc
ljmp
jg
mov
pop
cli
test
push
incl
mov
imul
call
pop
cltd
sbb
pop
add
sbb
incl
add
lock
incl
lcall
jnp
inc
std
and
iret
cwtl
fidivrl
cmp
dec
lea
test
sbb
test
lcall
lcall
std
in
fistpll
xchg
jbe
push
jmp
add
add
add
pop
popa
call
std
xor
out
in
adc
aaa
sub
pop
or
ss
and
mov
jmp
jmp
jmp
jl
push
incl
pushl
xchg
iret
jno
xchg
adc
mov
dec
test
sar
decl
fmuls
jmp
add
lahf
and
inc
pushl
inc
jmp
call
mov
js
xor
pushf
sub
gs
scas
lods
and
jmp
incl
xor
call
ds
lods
das
ret
decl
pop
cmp
dec
aas
test
stc
push
pop
jns
out
stos
adc
sub
lcall
xchg
and
add
jmp
call
adc
dec
adc
cmp
inc
pushl
cmc
xor
adc
cmpsb
jmp
cmp
sbb
incl
add
mov
ljmp
xor
fistps
test
adc
inc
lcall
pop
in
stos
out
addr16
cmp
cmpsl
ljmp
xchg
jle
decl
xor
pop
inc
incl
sbb
sbb
popa
insb
push
push
ret
add
xchg
pop
mov
movsl
jmp
decl
sbb
call
jmp
inc
add
cld
test
push
call
push
jmp
add
jecxz
mov
rcrl
push
jmp
mov
add
add
lcall
mov
in
in
aaa
test
call
cmpsl
jmp
push
fs
pushw
lcall
int
lcall
dec
mov
das
mov
cmp
and
mov
sbb
jmp
lcall
mov
insl
stos
lock
sub
call
aad
incl
jl
cli
insb
int
push
push
std
lods
jbe
movsb
jg
cmp
sbb
outsb
add
call
cmp
or
mov
pushl
cltd
dec
test
add
incl
cli
xor
pushl
je
jp
aad
sub
jns
pop
push
pop
sarb
mov
dec
into
idiv
pushf
cmp
mov
xchg
pop
xor
pushl
push
icebp
ret
pushl
stos
jg
mov
jmp
mov
add
test
hlt
cmp
fmull
xchg
sub
push
repz
mov
fs
jnp
sti
fsubl
sti
ds
xchg
imul
ret
jmp
jmp
mov
mov
inc
call
push
sbb
pushf
repz
inc
dec
cmp
adc
cmp
pop
insb
rcl
push
push
jmp
add
add
mov
out
pop
jns
inc
lcall
sbb
add
leave
mov
xchg
fwait
in
push
cld
lret
insb
out
movsl
jmp
decl
cwtl
test
ljmp
pushl
cmp
nop
xor
jmp
ljmp
xchg
pop
ljmp
xlat
mov
dec
sub
gs
mov
incl
jb
and
mov
xchg
callw
call
jmp
decl
dec
cs
xchg
shll
dec
loope
lods
jbe
cmp
dec
cmpsl
dec
adc
leave
and
pop
std
mov
dec
push
mov
incl
scas
push
and
ret
jmp
call
xor
pushl
incl
add
gs
mov
xchg
mov
mov
call
mov
and
lahf
je
cmp
xor
aad
decl
jmp
call
mov
roll
jge
push
jmpw
arpl
cs
xor
daa
dec
xlat
mov
cwtl
lods
ret
ljmp
call
sub
in
incl
add
sar
inc
call
inc
out
add
inc
pushl
lcall
mov
das
hlt
pop
into
outsl
daa
mov
pushf
inc
jmp
cmp
in
daa
jmp
lcall
leave
push
inc
fisubrl
or
mov
cmp
mov
cmp
pushl
sbb
dec
and
in
ljmpw
dec
decl
lret
test
add
push
ret
jbe
incl
decl
shlb
jg
ja
xchg
jmp
and
pop
sub
ljmp
mov
mov
add
add
cld
add
push
mov
cmc
stc
dec
push
add
incl
pop
fwait
std
outsb
cs
incl
ljmp
scas
out
sub
jb
pop
cmp
mov
inc
lcall
dec
inc
fcoml
sbb
sbb
repz
jmp
incl
mov
adc
add
cld
push
test
popa
call
push
and
aas
xlat
mov
mov
cmp
dec
jge
push
mov
sbb
pushl
push
inc
inc
add
add
add
imul
lcall
cld
xor
pushl
into
lcall
add
add
push
inc
add
add
stc
jmp
outsb
in
mov
pushl
mov
frstor
call
mov
xchg
push
lret
call
ss
push
jmp
add
cmpsl
inc
call
in
dec
das
andps
fcos
incl
add
add
movsb
mov
xlat
ja
xlat
sbb
test
jmp
add
roll
pop
xlat
enter
call
dec
pop
outsl
mov
int
jle
pop
inc
call
and
and
sub
xchg
jno
or
jae
imul
ja
jnp
dec
out
nop
jb
in
pop
lcall
sbb
sub
sbb
shr
push
aam
ljmp
scas
cmp
pushl
out
cmp
decl
sti
fsubp
call
cmp
aas
orps
xchg
pushf
shr
das
fidivl
incl
jmp
incl
xor
call
and
cwtl
pop
fstl
call
fisttps
shrl
test
or
or
dec
push
lcall
mov
incl
into
lods
jae
in
xor
leave
outsb
xchg
mov
jmp
push
mov
jmp
add
add
call
add
ljmp
decl
or
movsb
mov
dec
mov
push
ret
lds
add
cmpsl
push
pushl
jmp
xchg
cmc
adc
ss
das
sbb
cmp
add
cld
add
add
aam
sub
mov
dec
mov
adc
or
outsb
dec
dec
jmp
lret
jns
mov
jmp
mov
add
in
inc
call
cmp
mov
add
xchg
cmp
push
add
jmp
add
add
popf
cmp
incl
nop
fldcw
xchg
insb
lea
inc
incl
sub
adc
es
pushl
mov
cmpsb
incl
adc
add
and
cmpsl
dec
mov
aas
xor
aas
fwait
in
cltd
cltd
movsb
ljmp
outsb
jp
mov
jmp
dec
cmp
call
push
pushl
arpl
cld
jae
xchg
test
sti
sbb
mov
xor
je
fisubrl
cmp
lcall
sar
jmp
xor
jnp
dec
aad
jnp
call
mov
pushl
ljmp
mov
add
add
add
and
lcall
cmp
sub
jmp
decl
mov
lcall
nop
scas
cmp
test
mov
icebp
ljmp
fsubs
sub
adc
outsb
inc
decl
dec
push
arpl
jne
sbb
sbb
xor
ret
movsb
decl
call
or
lret
pop
pop
stc
adc
jmp
dec
adc
pop
ret
call
clc
push
push
push
in
mov
out
xor
sub
ljmp
add
lcall
add
mov
loop
rcr
xchg
ret
incl
out
test
leave
fs
jle
inc
lcall
sbb
call
xchg
or
sub
fcomp
out
inc
inc
jmp
ljmp
je
or
cld
mov
incl
enter
add
add
add
mov
mov
push
jmp
add
add
push
jmp
jne
add
add
in
aaa
push
jp
lcall
test
cmc
fwait
outsl
and
cmp
inc
cld
adc
cmp
dec
xor
add
add
jne
int
sahf
pop
push
jg
pop
ljmp
mov
jmp
call
outsl
jo
inc
jmp
push
cs
mov
decl
push
xchg
decl
test
aad
jmp
add
and
mov
call
xor
sti
cmp
mov
pushl
jno,pn
das
fwait
adc
lcall
scas
call
cmp
sub
or
sbb
mov
sbb
mov
mov
sub
add
mov
pushf
nop
cmpsb
call
icebp
xchg
repz
mov
ljmp
jne
xchg
and
dec
push
push
add
adc
cmp
dec
sub
decl
sub
jns
fisubrs
inc
ljmp
faddp
incl
push
mov
pop
xor
push
push
ret
add
add
add
pushl
xchg
rclb
push
push
fisubs
lcall
push
paddb
sbb
je
dec
pop
pop
inc
jg
outsb
add
jmp
xor
xlat
xchg
mov
lahf
fisubrl
jp
ljmp
xor
dec
pop
fsubrs
adc
mov
iret
pop
xor
decl
lods
add
ljmp
mov
insl
xchg
inc
add
add
popa
fistps
adc
aas
pop
dec
and
jbe
jmp
sti
mov
insb
lahf
xor
ljmp
loopne
out
je
cmp
scas
popa
ljmp
and
out
aad
push
jmp
add
mov
jmp
push
add
cld
aam
std
insb
pop
fcoml
insl
sub
je
push
mov
loope
icebp
call
jne
inc
decl
jmp
popa
pushl
xchg
push
push
or
ljmp
pushl
decl
xchg
fwait
cmp
in
mov
sbb
outsl
popa
fs
ret
add
fisttpl
fimuls
pushl
push
nop
ljmp
pop
incl
dec
stc
test
incl
cmpsb
ljmp
dec
idivl
loopne
hlt
adc
stc
mov
pushf
sti
mov
inc
add
add
add
add
cld
cmp
xlat
mov
inc
in
mov
add
fsubs
mov
push
adc
mov
cmp
incl
cmp
xchg
movsl
incl
dec
add
jp
call
pushl
in
loope
push
loopne
mov
push
in
add
out
sub
and
out
pusha
jmp
in
mov
sub
jbe
pop
jmp
add
add
call
movsb
ljmp
paddq
decl
out
idivb
or
fldl
pushl
ficoml
and
fistpll
pop
jne
pop
cmp
and
jnp
leave
cmp
clc
mov
push
inc
cld
stos
jno
enter
mov
push
cmp
fimuls
stos
sar
pop
movsl
decl
xor
jmp
add
add
add
incl
decl
lret
roll
cmp
nop
push
mov
xor
jmp
add
add
add
sbb
cmp
ljmp
sub
pop
pop
push
push
lcall
push
cs
xchg
cmpsb
call
inc
incl
or
pushl
pusha
cmp
mov
push
ret
add
lcall
jb
incl
inc
inc
inc
add
cmp
cmp
inc
lcall
ja
or
or
mov
dec
nop
outsl
mov
inc
call
lea
jmp
in
xlat
in
rorl
popf
xchg
popf
out
iret
sti
ret
ljmp
test
add
push
ret
aad
adc
push
push
mov
push
add
add
add
decl
and
mov
sbb
call
insl
sar
jnp
decl
stos
stos
cli
or
jmp
mov
testl
jmp
jo
mov
mov
dec
lock
cli
xchg
cmc
push
sbb
add
add
add
inc
jmp
jmp
and
stos
movsb
incl
lcall
cmc
xor
inc
jmp
and
sar
adc
dec
xchg
incb
xchg
sar
xchg
pop
decl
ljmp
in
dec
xchg
mov
decl
dec
xchg
xlat
incl
dec
pop
js
lcall
jmp
ljmp
in
sub
pusha
decl
jl
push
lea
pop
cmp
jne
scas
js
negb
std
xor
aam
lods
sbb
out
xchg
xor
lea
sti
pushl
jmp
call
cmc
mul
jmp
stc
xchg
scas
iret
cmp
pop
jne
add
jmp
lds
cmp
inc
decl
add
add
lds
add
add
pushl
push
jmp
enter
sarl
iret
test
xchg
cmp
mov
fidivs
lcall
jmp
jmp
fdivs
incl
lcall
and
dec
cmc
inc
call
xchg
popf
cmp
nop
sar
mov
jns
incl
dec
loopne
jae
decl
push
movswl
jmp
push
add
stos
and
and
jae
pop
sub
pop
dec
cmp
cmp
sub
jmp
cs
adc
lea
push
dec
jmp
cmp
add
jo
in
test
xchg
das
dec
add
ljmp
incb
pop
inc
dec
sahf
jne
jns
lcall
lcall
xlat
into
inc
ljmp
dec
test
in
sahf
push
lea
sbb
enter
cmc
xor
dec
inc
decl
and
jge
mov
rcrb
call
incl
sahf
pop
jge
pop
shlb
call
in
sbb
pop
call
sahf
in
ss
ljmp
ljmp
pushl
push
push
imul
imul
pop
mov
decl
dec
clc
dec
ficoms
adc
mov
sahf
or
and
in
sti
jbe
push
aaa
jecxz
xchg
das
into
pop
mov
bsr
scas
jle
sub
hlt
jo
ret
push
sub
movsb
push
jnp
out
jnp
in
je
pop
rorl
xor
mov
ret
push
add
add
add
mov
inc
lcall
inc
incl
mov
dec
jae
call
xor
incl
aaa
insb
decl
add
call
into
shlb
insl
int3
pop
nop
mov
add
fadds
add
cmp
fcomps
xchg
push
cld
in
sbb
and
push
pop
ljmp
adc
push
push
add
test
jecxz
clc
inc
call
xlat
fs
fistpll
aas
movsl
jmp
je
jmp
add
pop
jp
mov
hlt
rcrb
incl
add
call
mov
add
add
call
dec
pop
call
mov
daa
ljmp
sub
jmp
call
or
movsl
jmp
add
jecxz
push
cmp
cwtl
into
out
jmp
inc
incl
popf
cmp
sti
pop
aam
cltd
jmp
ljmp
fdivl
and
in
popf
pop
xchg
lahf
cmp
fcomp
sub
pop
cmp
jle
int
loop
cwtl
pop
jnp
decl
mov
ljmp
mov
arpl
fwait
cmp
jmp
cmp
clc
dec
lock
call
mov
pop
pushf
mov
and
jnp
ret
pushl
xlat
or
dec
add
decl
lea
mov
jmp
pushl
pop
popf
jl
mov
incl
jnp
aad
lcall
mov
call
ljmp
pop
or
insl
sbb
add
add
push
or
dec
push
mov
dec
popf
arpl
jg
xchg
jae
dec
je
lcall
daa
out
incl
add
fadd
mov
call
xchg
push
pop
das
jle
jbe
mov
fwait
outsl
stos
popa
ljmp
lcall
call
js
sar
lcall
xor
add
push
adc
inc
js
sub
lcall
cmp
daa
incl
dec
and
cmp
add
decl
call
pop
add
jmp
mov
jmp
in
dec
pop
in
sbb
dec
in
lock
inc
jnp
jb
push
push
in
xchg
sar
loop
hlt
fld
pushl
aaa
cmpsl
frstor
fwait
stos
xor
in
inc
jp
adc
cmpsb
decl
pop
push
jbe
clc
cmp
mov
mov
add
jmp
flds
hlt
jmp
fadd
mov
jmp
inc
call
or
sub
ficoms
cmpsb
incl
lcall
pop
jmp
mov
push
add
add
incl
jge
outsb
push
inc
incl
push
fstl
xor
dec
adc
add
jo
mov
test
call
fisttpl
pushl
test
cwtl
mov
fadd
lcall
pop
dec
jnp
lcall
inc
jmp
cmp
fists
dec
dec
fists
push
add
call
adc
mov
pushf
mov
ds
ljmp
or
jno
push
pushf
mov
jecxz
xchg
jb
cmp
xor
ljmp
cmp
mov
xor
sahf
adc
and
mov
jmp
lcall
jnp
sbb
push
ret
add
mov
cmp
jmp
push
fiadds
incl
decl
std
in
xchg
dec
pop
lcall
cli
mov
sub
stc
xchg
cmpsb
pushl
stc
xor
and
pop
enter
xchg
jae
insb
fstpl
adc
mov
lcall
mov
xchg
pop
sbb
incl
add
add
cli
not
repz
sbb
sar
call
sbb
stos
jmp
add
inc
add
xor
cmp
xchg
out
addr16
push
cmp
fldz
out
scas
pop
enter
mov
xor
xchg
dec
aam
iret
lret
jle
ds
push
in
mov
or
jl
cmp
jo
xchg
outsb
cmp
jmp
flds
mov
jle
inc
mov
call
mov
in
nop
pop
scas
imull
incl
push
pop
sub
lahf
cld
cmpsb
call
or
xchg
jae
fcompl
in
sbb
incl
js
xor
push
mov
push
ret
add
push
and
and
sub
call
adc
inc
add
add
add
add
push
rorl
stc
aas
xchg
inc
call
incl
call
mov
dec
fimull
std
sbb
and
stos
pop
adc
dec
cmp
stc
test
loop
jmp
dec
mov
outsb
in
cmp
or
call
xchg
mov
mov
mov
pushf
pop
shl
jmp
dec
dec
decl
loop
cmp
add
mov
mov
cmp
add
xchg
repz
stos
movsb
push
shlb
call
mov
aas
cmp
mov
push
idiv
xchg
rorb
xchg
incl
add
and
add
jmp
inc
call
pushl
mov
pushl
jbe
ljmp
mov
ret
adc
test
mov
std
cmp
push
jmp
add
add
lds
xchg
jmp
call
xchg
inc
jmp
decl
call
cmp
ljmp
push
jge
lcall
cmpsl
lcall
rorb
xor
xor
cmpsb
incl
mov
sub
js
pushl
mov
add
jmp
decl
in
jns
ljmp
mov
test
clc
or
adc
xor
jne
call
inc
call
inc
decl
sub
jae
decl
incl
pushl
xchg
lcall
add
pushl
jmpw
push
in
std
movsb
inc
add
add
add
jne
inc
lcall
gs
stc
add
pushl
incl
je
incl
lcall
mov
incl
add
add
pop
lret
adc
dec
shrl
inc
adc
or
cmp
cmp
repz
ljmp
dec
movsb
pushl
ljmp
test
call
call
leave
in
movsl
jmp
and
rorb
push
out
or
add
lcall
lds
sahf
mov
pushl
call
xchg
in
or
xlat
push
ljmp
adc
ret
jae
scas
mov
aas
cmpsl
jmp
call
pop
sbb
push
dec
in
mov
fisubrl
sub
and
test
xchg
cli
adc
cmpsb
call
outsb
int
pop
outsl
adc
loop
out
and
imul
dec
cmp
jns
call
xchg
push
or
mov
xor
adc
fisubrl
mov
sbb
pop
mov
incl
decl
decl
incl
call
pushl
push
loope
jbe
jg
mov
pushl
mov
stos
jb
ror
sub
pushf
jne
iret
jno
xlat
push
sbb
sbb
lcall
jne
inc
call
dec
or
mov
lock
dec
mov
lods
push
jns
push
movsl
ljmp
mov
push
lods
incl
add
add
clc
cmp
jmp
add
cld
add
add
popa
jmp
adc
jb
lret
call
in
repnz
lcall
sbb
test
pop
add
incl
jle
mov
jmp
add
add
mov
jecxz
fistpl
pushl
pushl
int3
movsb
jmp
adc
incl
sbb
cmp
incl
dec
dec
test
push
mov
call
sub
mov
dec
mov
call
adc
pop
ljmpw
cmp
call
ljmp
ja
repnz
adc
inc
decl
lcall
fcompl
push
decl
cmp
std
and
add
jmp
and
xchg
arpl
arpl
imull
or
add
incl
out
add
call
ss
rep
jmp
push
call
scas
in
out
in
je
jns
jl
inc
push
mov
call
or
cmp
imul
divl
pop
repz
call
mov
push
cmp
cmpsl
add
cmpsl
or
ja
add
jmp
add
mov
ljmp
add
jmp
mov
pop
mov
inc
ljmp
stos
mov
mov
mov
out
or
jmp
pushl
fwait
xor
push
mov
inc
call
call
mov
jmp
push
lret
or
jmp
mov
add
xchg
mov
lret
inc
cmp
fiaddl
fistpl
jns
fbld
incl
mov
loope
or
or
ds
gs
jmp
add
inc
jmp
cmp
xchg
pusha
decl
or
mov
jmp
add
add
call
cmp
test
into
ret
incl
sar
movsb
call
cmp
aam
sar
sbb
ret
mov
inc
incl
incl
adc
imul
push
incl
adc
or
xor
add
incl
mov
aam
fwait
mov
push
ret
add
cmp
push
mov
add
lds
jo
dec
xchg
sub
fidivs
jb
lcall
jge
cld
incw
lcall
push
nop
push
mov
shl
push
pushf
into
std
xlat
sub
jmp
js
push
add
jmp
add
add
add
repnz
xor
jo
decl
jo
jmp
stos
stos
mov
lcall
cld
outsb
inc
incl
pusha
call
cmp
shll
xchg
jmp
add
add
add
loope
mov
cmp
daa
decl
leave
call
lock
incl
mov
loope
pop
xchg
and
jmp
mov
jmp
jp
mov
jmp
add
negl
push
mov
cmc
push
sub
cli
cs
push
sbb
push
clc
mov
addr16
out
mov
into
cmp
jp
xor
sbb
inc
push
sbb
fwait
and
ds
xlat
ret
jmp
push
adc
add
add
pushl
ljmp
incl
ljmp
jae
mov
loope
xlat
push
mov
add
mov
sar
call
incl
jge
jmp
push
mov
cmpsl
test
decl
arpl
pop
pushl
push
push
jmp
add
inc
add
add
push
jmp
call
stos
push
jmp
add
cmpsl
xchg
cltd
cltd
mov
call
jno
incl
inc
add
add
xchg
dec
mov
xor
jl
popa
jmp
inc
lcall
js
jnp
or
call
mov
dec
ret
xchg
data16
cmp
mov
into
dec
cmp
je
push
ret
fisubs
cmp
dec
fidivrl
push
ret
add
add
decl
test
mov
jmp
mov
ljmp
sub
ret
add
dec
cmp
mov
rcl
or
js
out
ljmp
push
movaps
scas
repnz
cmc
fs
push
ret
incl
aaa
lret
std
leave
add
dec
push
push
push
sahf
scas
sub
dec
mov
adc
popf
testb
mov
jmp
fidivrl
pushl
mov
call
sub
jae
rclb
mov
push
loopne
push
mov
jmp
call
incl
sbb
pushl
test
sbb
pop
jmp
add
add
mov
adc
aad
stc
dec
sub
jb
decl
jp
cmp
cmp
incl
lcall
testb
push
lods
nop
pop
pushl
scas
mov
mov
jmp
aam
test
cltd
adc
pushl
std
pop
sbb
inc
decl
fiaddl
call
aaa
out
jmp
jp
test
jmp
call
pushl
add
pushl
repnz
lret
cli
push
ljmp
ljmp
jne
lcall
leave
xor
je
push
ret
ljmp
adc
xor
test
push
ret
add
add
ljmp
adc
jmp
cld
fadds
add
mov
sbb
jmp
cli
imul
sub
arpl
xchg
jb
jnp
dec
sbb
sbb
jmp
int
mov
ljmp
mov
sub
enter
dec
call
jb
add
xor
call
test
dec
jle
sbb
js
ja
lcall
stos
clc
mov
adc
in
fisttpll
jbe
pop
mov
fidivrl
pop
mov
shl
add
iret
test
sub
mov
ljmp
mov
adc
movsl
pushl
cmp
and
pushf
add
jg
cmp
add
out
push
js
cmp
call
decl
test
pop
ret
add
jmp
incl
pushl
pushl
in
sub
aas
xchg
add
in
ret
pushl
pop
sar
jns
mov
jmp
stc
and
fldcw
cmp
xchg
shl
push
push
mov
jmp
cld
add
mov
das
mov
push
sti
mov
mov
inc
add
cmp
add
popa
call
pusha
ljmp
push
push
cli
mov
jno
stos
cmp
in
icebp
je
jle
sbb
xchg
jmp
call
or
adc
addr16
das
stc
mov
je
jmp
test
xor
in
inc
dec
mov
clc
add
dec
sub
jne
call
dec
sti
jmp
sbb
decl
adc
jmp
cmp
incl
add
lcall
ljmp
decl
ljmp
cmc
pop
fmuls
fsts
pop
mov
add
cli
jno
sbb
in
and
mov
add
push
xchg
sbb
sar
mov
jns
dec
hlt
movsl
incl
sub
xchg
mov
call
cld
pop
pop
and
add
jmp
ljmp
jmp
jmp
jmp
fcmovbe
cmpsb
incl
aas
or
outsb
jp
movsl
lcall
add
jmp
inc
pushl
add
cmp
mov
mov
push
mov
ret
adc
xchg
mov
test
push
jns
jmp
lcall
divl
sahf
rcrb
and
sub
pop
or
mov
pushl
dec
adc
pop
pusha
push
cmp
or
mov
incl
push
xchg
cmp
mov
lret
jge
jecxz
popf
pop
pop
incw
xor
pop
push
test
call
into
test
cmp
inc
fcomip
cmp
ja
cs
inc
cmp
mov
ljmp
push
adc
cmp
pushl
icebp
pop
in
insl
pop
push
pop
call
lahf
scas
and
jmp
pushl
cmp
mov
lcall
call
jmp
add
add
mov
fimuls
ljmp
loope
mov
rcll
jae
cli
mov
pop
int3
cmpsl
cmp
sbb
lcall
test
mov
repz
jle
jecxz
ds
int
decl
call
cmpsl
incl
add
pop
out
in
ja
sub
mov
cmpsb
jmp
push
dec
mov
mov
mov
mov
pop
xor
mov
jmp
call
pop
jge
movsb
fstpl
inc
push
ret
add
jne
add
pcmpeqw
jnp
movsb
incl
jbe
fnstenv
mov
jmp
pop
aaa
cmc
iret
xchg
mov
call
cmp
sbb
push
push
mov
add
add
into
cmp
jecxz
mov
decl
or
incl
pusha
inc
call
movsb
pushl
cmc
pusha
pushl
stos
divb
xchg
imul
imul
adc
cmp
push
add
in
maxps
sar
sahf
pop
jne
cmc
lret
fucomip
pop
sub
jb
push
push
or
push
pop
clc
das
dec
pushl
ss
and
pusha
jmp
dec
dec
lcall
decl
cwtl
and
sti
inc
jmp
clc
es
ds
incl
jmp
mov
dec
and
dec
push
aam
dec
js
cld
jno
inc
inc
fmulp
cmpsl
jmp
push
add
decl
mov
fisubl
inc
lcall
cmp
jmp
add
cmp
mov
inc
incl
test
pushf
cld
enter
sar
lret
ja
out
sub
lcall
lcall
xor
jb
lcall
pop
jmp
add
add
add
aas
loopne
xchg
call
jnp
push
sub
repz
dec
fwait
push
add
inc
incl
push
cli
fldenv
push
and
ret
sar
pop
out
cwtl
mov
loope
nop
imul
call
mov
inc
lcall
imul
push
push
xchg
int
cmp
push
cltd
mov
xchg
jns
out
leave
or
adc
fwait
hlt
cld
mov
add
mov
call
call
add
cmpsl
add
lcall
std
mov
pop
cmp
push
jmp
add
fdivs
jge
cmp
sarb
xchg
or
xchg
cmc
mov
or
add
pushl
pushl
pusha
jmp
jo
mov
add
sbb
fsts
adc
cltd
mov
lcall
movsb
decl
jmp
call
mov
jmp
int3
xchg
aam
ret
or
xchg
push
stos
sbb
test
adc
add
dec
inc
add
or
xor
cmp
mov
adc
inc
decl
jns
sbb
ljmp
pop
stos
incw
stos
mov
dec
popa
jle
sbb
fistps
arpl
adc
lahf
push
adc
mov
ljmp
pushl
pop
pop
pusha
lcall
loope
jmpw
jmp
mov
mov
mov
incl
out
fmuls
fwait
dec
mov
fistps
ljmp
cs
call
xchg
mov
pop
fcomps
je
test
jno
inc
decl
add
ljmp
dec
jmp
add
inc
add
add
cld
cmp
and
stos
jno
incl
call
sub
push
incl
add
int3
add
decl
ljmp
loope
rclb
inc
decl
mov
mov
popf
mov
cmp
mov
dec
leave
inc
pushl
push
push
addr16
mov
adc
mov
push
mov
ljmp
mov
add
add
push
pop
inc
jmp
jmp
test
sub
mov
mov
sbb
push
lcall
push
xchg
and
repz
pop
mov
fiaddl
fcomps
leave
imul
into
xlat
lahf
jge
std
lret
sbb
jmp
fsubp
incl
add
lds
pushf
inc
jmp
cmp
lret
mov
dec
aad
cld
mov
add
push
adc
pushl
jp
incl
cmp
jmp
enter
jae
ljmp
mov
sbb
push
inc
lcall
aas
inc
decl
std
ds
call
or
or
call
jp
dec
int
xchg
ss
sarb
mov
jecxz
xor
shll
xor
xchg
sub
fs
pushl
jmp
cli
cmpsl
jmp
incl
jmp
dec
repnz
loop
xchg
loop
mov
fcomps
int
and
lcall
cmp
lock
je
fisttpl
sar
mov
jmp
add
inc
or
sub
cltd
jg
lock
inc
call
lcall
xor
push
ret
mov
add
adc
xor
inc
clc
mov
push
pop
in
xchg
pop
pop
aaa
out
int
out
cltd
mov
call
mov
decl
push
xchg
lret
hlt
push
leave
pop
push
cmpsl
loope
incl
cmp
fcoms
aaa
lcall
nop
int
das
push
fistl
incl
decl
js
pushl
pop
or
ljmp
or
ja
popl
jmp
xchg
mov
popa
ljmp
add
jmp
into
ds
movsl
incl
jo
ljmp
popf
fwait
rcrb
mov
jmp
cmp
add
mov
and
icebp
loop
cmc
sub
decl
xlat
fwait
xchg
cltd
jmp
out
xor
gs
cmp
mov
pop
ljmp
inc
pushl
or
decl
push
jmp
add
add
cmp
imul
loopne
push
add
jmp
add
add
cmp
and
jmp
jg
mov
cs
jp
and
test
and
aas
ret
mov
add
adc
int3
test
add
inc
inc
add
jmp
and
aam
jmp
jbe
imul
lcall
push
mov
or
jb
movl
pop
call
notl
xchg
dec
ljmp
incl
add
in
das
cmc
in
aaa
sti
cmp
nop
incl
addl
ja
lcall
xlat
mov
sub
ljmp
shr
adc
add
cmp
add
dec
and
daa
mov
incl
inc
inc
add
add
jmp
mov
or
jmp
sub
ret
pushl
rorl
frstor
ficoms
cld
seta
xchg
ljmp
mov
fadds
mov
dec
mul
incl
scas
scas
sbb
jmp
pop
jnp
jmp
add
ljmp
mov
push
adc
adc
repnz
inc
ljmp
incl
pop
push
pop
inc
lcall
ljmp
fistpll
ffreep
jmp
ds
push
ja
fistl
mov
sar
inc
lcall
movsb
push
lods
mov
mov
call
push
xchg
ljmp
jmp
add
dec
mov
sti
xchg
or
mov
mov
int3
mov
pushf
inc
fstpt
mov
jecxz
loopne
mov
xor
jmp
push
adc
call
test
rorl
ljmp
inc
call
stos
imul
lret
jbe
jo
and
int
xor
xor
push
lcall
stc
fucom
incl
push
adc
jp
addr16
fisubrl
outsl
push
pusha
jmp
imul
ljmp
cmp
call
fidivl
mov
sbb
jns
enter
ret
incl
call
popf
das
mov
lcall
jp
lcall
push
clc
xchg
int
cs
inc
jmp
jmp
lods
push
pushl
push
sbb
and
push
decl
shlb
sbb
je
arpl
push
das
pop
lock
test
incl
rcrl
loopne
adc
inc
std
call
push
popa
incl
mov
mov
pop
mov
xchg
jae
fsubl
mov
out
pop
sub
incl
jae
ljmp
jmp
lds
cmpsl
add
std
loop
sti
mul
call
push
xor
mov
ficompl
shl
push
ret
add
jne
xor
in
sbb
incl
lcall
pushl
cmp
mov
jmp
add
pushl
fcmovu
jae
test
mov
dec
jns
fsubl
jae
sub
cmp
sbb
mov
je
ljmp
push
jae
xor
sbb
jno
lea
call
decl
incl
jmp
incl
decl
cmp
xor
pusha
pushl
lcall
inc
pushl
fucomip
sbb
fwait
std
inc
jmp
dec
int3
jl
xor
mov
xor
jge
lcall
pop
lcall
in
inc
call
cmp
mov
call
mov
fldl
pushl
cmp
pushl
pushl
push
scas
mov
shlb
pushf
out
aaa
incl
pop
and
icebp
mov
incl
cmp
imul
call
adc
aad
add
add
add
out
mov
imul
jmp
add
push
mov
add
test
call
push
cmp
sahf
jns
ror
fildl
jmp
lcall
pusha
dec
jo
decl
mov
jmp
ljmp
into
mov
test
jmp
add
iret
cmp
dec
xor
mov
adc
cmp
cmp
add
jmp
ljmp
or
out
xor
xchg
lea
decl
and
mov
jmp
incl
cs
incl
incl
push
ret
fst
adc
add
decl
xchg
outsb
inc
ljmp
call
in
or
decl
int
jmp
jmp
incl
adc
sti
or
fcmove
or
lret
sbb
jbe
push
ret
push
push
mov
incl
outsl
aaa
stos
cmp
int
xchg
mov
lcall
jne
fimull
cmp
cmp
filds
mov
ror
jmp
mov
push
mov
dec
xchg
jns
xchg
add
dec
and
movsb
out
shrl
lret
lret
mov
mov
jmp
decl
pushl
mov
outsl
test
jecxz
and
in
dec
lods
sbb
lock
mov
cld
inc
push
add
inc
incb
and
test
imulb
int
inc
call
decl
hlt
inc
decl
movsb
jmp
add
add
add
mov
xor
lea
mov
in
pop
adc
jmp
call
pop
inc
call
scas
pushf
push
popf
sbb
jmp
ljmp
jmp
or
jb
js
xchg
fsubl
ljmp
leave
jmp
cmp
lds
add
jno
call
sub
push
pop
sar
sar
jmp
pushl
mov
stos
mov
dec
stc
dec
jo
movsl
pushl
cld
inc
call
jbe
decl
popa
pushl
je
shlb
add
fcmovne
icebp
pop
jo
lahf
inc
push
inc
decl
dec
pop
scas
and
jp
dec
stos
inc
call
outsl
adc
xchg
imul
sti
jno
dec
dec
repnz
incl
jns
push
dec
push
xchg
inc
lcall
xchg
fcomi
shrl
outsb
jbe
jge
popa
jmp
dec
pop
lcall
cmp
xchg
mov
cmp
push
pushf
nop
jp
lods
push
jnp
mov
decl
mov
pop
xchg
sub
ds
or
or
sub
pop
jmp
jmp
add
or
pushl
fistpl
mov
setbe
sub
sub
dec
push
xlat
xchg
aaa
ljmp
jmp
mov
lret
jmp
add
jne
add
xor
cmp
jns
or
xchg
psrlw
fldt
dec
xchg
push
aam
incl
add
add
inc
jg
mov
add
add
add
mov
cmp
in
xchg
in
in
jl
cld
lock
imul
lcall
mov
xchg
lods
sahf
xchg
and
mov
pop
cmp
push
add
out
outsl
std
shrl
cld
jmp
add
add
dec
sbb
jmp
fdivs
add
add
jmp
mov
add
icebp
mov
lret
jg
sub
fbld
call
lret
jo
jmp
lcall
sbb
clc
arpl
loop
dec
enter
sub
stos
inc
lcall
jmp
stc
mov
decl
ljmp
lcall
popf
enter
pop
decl
ljmp
test
aad
jmp
or
nop
pushf
daa
incl
cmc
leave
fcomps
sar
mov
scas
inc
lcall
cmp
idivb
push
je
call
cs
call
jmp
add
cmpsl
add
sar
lcall
xchg
call
decl
pop
and
lcall
incl
mov
push
cmp
add
in
test
cmpsb
ljmp
sti
mov
mov
sti
scas
inc
call
add
jp
lret
xchg
jmp
inc
inc
add
add
ljmp
push
ret
cld
add
mov
push
mov
fucomp
or
pop
jmp
dec
mov
lahf
and
loopne
dec
rcr
test
dec
mov
pop
or
aam
pushf
cmp
jg
int3
insl
js
adc
and
sahf
enter
or
loope
add
test
in
mov
decl
fdivr
add
call
ljmp
loopne
adc
ljmp
lcall
push
mov
add
or
pop
lahf
sti
dec
inc
pushl
mov
repnz
ss
adc
mov
in
faddp
mov
pushl
and
test
call
ja
xchg
ss
sbb
xor
pop
cs
and
mov
call
push
mov
inc
add
add
add
jbe
decl
add
lcall
in
loop
xor
or
popa
jmp
call
mov
incl
add
cld
test
mov
movsl
call
xchg
or
sbb
inc
inc
incl
add
add
lds
xchg
insb
push
loop
mov
mov
shrl
incl
jne
jmp
cmp
leave
cmp
cs
cs
popf
fadd
jmp
ss
jno
fwait
shll
outsb
daa
call
push
cmpsb
fcomi
jecxz
sub
sahf
jns
in
jb
dec
ljmp
lret
enter
decl
insb
inc
call
xor
incl
jne
ljmp
mov
ljmp
sbb
fistpl
sub
negb
rcrl
pushl
push
cmp
inc
push
out
cmpsb
call
dec
pop
adc
cli
mov
inc
incl
mov
inc
std
inc
ljmp
call
or
mov
push
push
fsubs
decl
mov
js
ljmp
pop
inc
push
cld
ret
pushl
dec
sub
pushl
cli
arpl
insl
cli
daa
push
cmp
dec
mov
clc
cmp
call
push
lods
pop
push
xchg
jmp
add
add
cmp
iret
cmp
test
ljmp
popf
inc
jmp
pop
xor
test
fiadds
stc
lcall
insb
mov
cmp
and
lret
cwtl
faddl
sub
call
sub
adc
in
push
inc
lcall
popf
and
pushl
imul
es
mov
cmp
sub
inc
ljmp
cltd
test
ja
push
dec
out
xchg
dec
and
jae
fidivs
add
ljmp
pop
pop
cmp
pop
mov
adc
inc
out
shll
incl
push
repz
mov
ja
ror
cmp
fisttps
xor
std
outsl
lahf
pop
icebp
or
movsl
ljmp
ljmp
dec
push
and
stos
test
repnz
xlat
inc
jmp
fadd
add
add
das
pop
jmp
fxtract
xchg
or
lcall
pop
dec
mov
mov
call
call
sbb
mov
inc
pushl
aad
adc
incl
rolb
add
add
iret
or
fldenv
pop
cmp
repz
mov
mov
rcl
decl
movsb
lcall
inc
cmp
and
add
push
push
es
mov
jmp
jmp
jo
add
push
add
jmp
fcomps
stc
fwait
sub
fiadds
and
sbb
clc
push
inc
add
add
add
add
fnstenv
cld
cmp
jmp
jbe
decl
enter
lcall
or
addr16
mov
testb
int
or
fnstcw
dec
xchg
xlat
jne
ljmp
lock
xchg
repz
ljmp
pop
decl
test
xor
incl
xchg
mov
jmp
xor
decw
cmp
dec
incl
jb
sbb
push
jmp
add
outsl
ja
jmp
jno
out
or
adc
insl
jbe
xchg
mov
jl
jmp
inc
mov
add
add
std
add
xor
inc
incl
inc
pop
callw
jge
shll
popa
incl
lcall
cmc
imul
or
xor
inc
pushl
incl
mov
pushf
pushl
or
loop
xor
test
push
shr
mov
xchg
mov
mov
stc
xor
out
ds
incl
or
xchg
scas
inc
call
and
in
nop
adc
movsl
decl
pushl
sar
dec
push
lods
popf
sbb
inc
add
add
fadds
pushl
mov
psubd
outsb
or
jp
sbb
cmp
add
hlt
push
popa
lcall
mov
decl
div
cld
or
decl
mov
cmp
leave
inc
jmp
xchg
inc
decl
dec
push
and
stc
addr16
mov
call
stc
jb
pusha
jmp
add
add
cld
adc
add
inc
jmp
lcall
fstpt
incl
add
add
fsubl
out
cmp
or
loope
mov
ljmp
sbb
repz
pop
fistps
push
push
ret
mov
add
mov
call
pushl
repz
call
dec
adc
call
adc
push
xchg
or
add
jmp
cld
add
cmp
cs
incl
dec
dec
jmp
dec
mov
jne
push
ret
jp
jg
vmread
int3
pushl
cmp
xchg
push
cmp
incl
pop
pusha
jge
ljmp
call
adc
pushl
aam
in
xchg
in
in
cltd
icebp
fcomip
ror
xor
sahf
jns
push
mov
movsl
push
xor
stos
push
call
pushl
call
incl
scas
dec
mov
fadds
mov
cmp
xchg
mov
xchg
mov
aad
mov
mov
add
sbb
add
out
mov
lret
iret
or
cmp
ret
call
cmp
je
into
xchg
aam
in
mov
scas
icebp
in
push
xchg
cld
mov
or
push
div
xor
cmp
loop
pop
outsb
popa
pushl
dec
cmp
shr
xchg
ljmp
push
or
lret
nop
dec
or
sti
pushf
dec
mov
scas
in
mov
xor
ljmp
ljmp
incl
jne
add
fmuls
clc
fistpll
popa
jmp
jmp
lcall
ret
mov
test
or
and
out
jae
scas
aad
xchg
cwtl
push
sbb
call
add
ljmp
lcall
popa
cmp
ljmp
dec
cmp
decl
mov
inc
decl
imul
xchg
mov
ljmp
xor
outsb
das
pop
mov
bswap
outsb
or
pop
sahf
ret
mov
decl
add
jo
add
test
movsb
call
pop
add
dec
incl
mov
mov
or
pushl
lcall
lcall
cmp
push
jne
jmp
add
dec
mov
xchg
jmp
incl
call
push
jp
ds
jl
incl
lea
call
inc
push
inc
out
sbb
inc
jmp
ficoms
cmp
call
jecxz
or
out
pcmpeqd
test
mov
push
pop
incl
fdivrs
and
inc
push
and
stos
mov
sahf
mov
xchg
inc
lcall
incl
jge
jo
jmp
pushl
xchg
out
stos
jg
jmp
cmp
iret
mov
icebp
fdivrl
lcall
mov
sub
inc
fidivrl
push
push
cs
call
fdivl
adc
cltd
lret
jle
push
cmp
or
xchg
aad
push
push
ret
add
add
mov
cmp
ja
mov
add
add
add
cld
add
pop
sub
mov
sbb
icebp
jmp
add
cmp
fnstcw
xlat
aaa
jno
inc
pushl
cli
push
mov
lcall
lock
pushl
sbb
mov
jecxz
cmp
and
xor
mov
xchg
inc
pushl
lcall
je
adc
push
mov
inc
ljmp
push
pop
jmp
cmp
add
lcall
outsb
mov
pop
jmp
add
sar
stos
leave
cmp
aad
fs
incl
jmp
add
add
jl
adc
je
pop
decl
pop
in
movsl
lcall
sbb
add
inc
call
shlb
leave
loope
mov
test
outsl
daa
std
icebp
scas
and
or
push
sub
popa
jmp
xchg
inc
pushl
pop
ss
dec
sub
cmp
and
sarb
xchg
add
add
lahf
inc
add
xor
out
jnp
fisttpl
ljmp
jg
cwtl
push
fwait
inc
lcall
inc
jmp
add
lds
or
cmp
pop
call
push
in
push
aaa
push
jmp
pushl
das
push
pop
mov
adc
push
loope
fsubrl
mov
mov
incl
add
push
adc
mov
ds
cmpsl
call
or
dec
cmp
std
mov
mov
decl
jmp
add
add
mov
ljmp
int
pop
pop
test
decl
xchg
mov
jg
mov
incl
sti
sti
cmpsb
jmp
cmp
mov
ficompl
sub
xchg
push
dec
out
mov
pushl
cmp
adc
inc
pushl
mov
adc
scas
or
jae
in
cmp
lcall
fsubs
call
inc
pushl
fsts
mov
scas
sbb
pushl
push
cwtl
call
push
sbb
jge
mov
sarl
mov
jmp
jns
mov
push
jmp
add
xor
cmpsb
lcall
inc
call
mov
sbb
test
mov
inc
cmp
jmp
ljmp
mov
inc
in
cmp
insl
sub
cmp
xchg
add
jmp
mov
mov
stos
mov
pop
out
xor
mov
xchg
in
or
icebp
in
cmp
pop
cli
test
pushf
ret
incl
pop
fucomip
sar
aas
push
cmp
push
mov
fstpt
arpl
lcall
pop
jmp
add
push
inc
call
sbb
mov
in
insb
push
cmp
sub
fcomps
inc
call
xor
pushl
out
mov
incl
fdivs
fsts
and
pop
pop
stc
push
xchg
dec
xor
ret
mov
lcall
negb
ljmp
test
movsl
call
xchg
inc
call
adc
pushl
in
and
mov
jnp
jmp
out
jbe
rcl
sbb
call
enter
out
stc
cmp
call
and
jmp
jo
incl
pop
push
xor
jns
scas
pop
sahf
out
cli
push
xchg
cmp
push
jmp
and
sub
xchg
or
pusha
call
incl
pop
cmp
test
add
arpl
jo
fsubrp
or
call
imul
cmp
add
add
jb
jmp
jnp
sub
cltd
jle
xchg
sbb
decl
mov
sbb
xchg
pop
into
inc
incl
incl
decl
sub
mov
fimull
lcall
push
mov
dec
ds
jno
idivb
mov
sub
incl
mov
add
repnz
jmp
mov
xor
aas
and
stc
stc
enter
or
mov
pop
fimull
dec
sub
xchg
in
lock
fnsave
mov
cmp
jmp
call
movsb
decl
jge
inc
incl
ljmp
pushl
decl
cmp
sub
cmp
ljmp
dec
mov
lea
inc
fnstcw
add
cld
mov
fadds
rcrl
add
jmp
call
inc
inc
lcall
jno,pt
and
arpl
add
inc
call
ss
insl
inc
push
mov
mov
jmp
call
fiaddl
arpl
imul
cmp
incl
dec
aaa
insb
push
sbb
add
call
das
xor
inc
dec
test
mov
xor
or
jmp
lcall
push
mov
or
pop
sub
add
int3
jg
jmp
out
jmp
dec
jp
mov
xor
ljmp
mov
sarb
dec
sbb
inc
jmp
sub
imul
lret
push
mov
test
jp
jmp
fidivrl
push
mov
push
inc
incl
jmp
lcall
xor
mov
jmp
outsb
mov
push
xor
pushl
cmp
cmp
cmc
xor
sar
lea
push
sub
add
inc
inc
jmp
jecxz
outsl
sbb
repz
pop
je
adc
decl
ljmp
nop
jmpw
incl
daa
incl
dec
ss
xchg
xchg
shll
leave
aaa
ljmp
in
cmp
inc
call
int
sar
ret
test
mov
stc
insb
lret
out
cmp
cli
and
mov
incl
and
mov
lcall
je
jmp
cmp
aas
femms
loope
mov
pop
mov
dec
shll
ret
pushl
std
adc
push
pop
fstpt
test
fnstsw
adc
incl
loope
insb
or
lods
or
es
pop
fstps
cmp
pop
dec
xchg
popa
push
inc
mov
mov
lret
fiadds
lcall
loop
or
fsub
cmp
add
mov
fcos
incl
lds
add
pop
push
aaa
inc
add
add
add
aaa
mov
dec
repz
pushl
lcall
xchg
inc
add
cmpsl
lds
add
test
jmp
fadds
xchg
mov
cmp
shll
lcall
push
decl
call
iret
sub
jecxz
dec
decl
repnz
sbb
stos
inc
decl
call
mov
and
mov
je
and
mov
cmpsb
decl
inc
push
adc
push
decl
call
jmp
add
add
ret
decl
xor
lods
jb
rorl
rorb
push
hlt
insb
cmpsb
pushl
movsb
pushl
imul
cmc
in
mov
and
adc
fnstenv
sbb
call
pop
dec
push
scas
cmp
dec
sbb
dec
add
decl
call
negl
mov
push
ret
add
mov
in
or
mov
ficoms
fcmovu
cltd
push
adc
lahf
mov
cmp
xchg
mov
mov
sarl
incl
add
add
pop
fmuls
js
push
sti
sbb
inc
inc
in
mov
rep
jmp
add
add
incl
into
mov
jne
add
mov
icebp
mov
push
arpl
sti
and
call
mov
gs
jo
mov
cmp
sbb
bound
ret
add
add
nop
pop
pusha
fstps
hlt
push
out
push
mov
aas
and
lret
cmp
push
popa
push
ret
jne
incl
pop
jmp
cli
test
cld
iret
mov
out
and
or
cmp
adc
incl
stc
ret
lcall
xchg
movsl
call
enter
xchg
fiadds
mov
adc
push
xchg
ja
sbb
or
in
push
or
ljmp
pop
mov
inc
pushl
call
push
cmp
and
adc
mov
dec
mov
fisttps
push
stos
pop
xchg
cwtl
mov
jg
push
cs
mov
and
dec
into
leave
lods
adc
je
lcall
inc
jmp
cmp
jl
or
pushl
adc
stos
call
jl
decl
dec
mov
and
sub
xchg
jmp
and
cltd
dec
or
dec
pop
push
fmull
mov
and
sbb
clc
ret
decl
mov
inc
pushl
push
stos
dec
aam
out
aaa
rcr
pop
push
lret
out
mov
jmp
test
dec
mov
or
push
mov
inc
call
and
repz
incl
or
add
dec
shll
pushl
call
xor
and
pop
pushf
aad
insl
pop
jge
push
incl
lcall
mov
add
sub
pop
push
loopne
pop
repnz
pop
ljmp
sahf
enter
jmp
decl
call
cmp
and
ret
ud0
mov
ficompl
incl
faddl
add
incb
push
jle
incl
sbb
lcall
insb
sub
jle
xchg
lea
popf
sarb
jmp
cli
and
jmp
stc
pop
xchg
out
lret
inc
jmp
incl
cld
ja
push
lret
incl
test
js
push
cmp
movsb
call
ja
addr16
jne
cmpsb
decl
add
cmp
lea
cmp
stc
lcall
aaa
dec
mov
mov
pushl
out
stos
adc
mov
jno
mov
incl
decl
cmp
pop
sbb
arpl
dec
mov
xchg
insl
fidivl
insb
ds
outsl
xchg
mov
inc
fdivrl
cmp
stc
cwtl
jns
incl
pop
mov
cmp
jg
pop
and
inc
clc
sbb
stos
adc
adc
pop
jo
pushl
sbb
adc
fisubrs
pop
mov
adc
inc
incl
fstpt
cmp
jmp
lcall
decl
sbb
lcall
jbe
aaa
xchg
jecxz
jmpw
pushl
aad
jg
ret
call
incl
shlb
test
mov
mov
fstl
add
push
pop
ja
jmp
mov
outsl
cmp
repz
xchg
dec
cld
in
js
adc
sbb
push
call
decl
jb
jmp
insb
xchg
jp
mov
repnz
mov
jg
mov
cmp
stos
es
in
loop
pop
add
pushl
jmp
lcall
call
aaa
push
xchg
gs
mov
push
dec
mov
adc
aas
mov
cmp
incl
jmp
ljmp
mov
mov
sbb
lods
loope
mov
add
cmp
push
call
jge
ljmp
xor
popa
ljmp
ljmp
incl
xchg
jns
inc
call
mov
mov
lret
pop
push
sar
xor
or
mov
xchg
aaa
fwait
int
inc
pushl
leave
cmp
jnp
decl
ds
push
lods
xchg
popf
mov
ficoml
jecxz
sbb
call
call
ja
xor
stos
ljmp
cli
add
jge
jno
inc
sti
mov
push
add
ljmp
ljmp
sub
stos
mov
pushf
lock
or
outsl
lock
out
pop
call
xchg
popf
mov
cld
fnsave
leave
cli
loopne
cmp
pop
lcall
out
idivb
lret
pop
adc
adc
shlb
and
xchg
out
inc
cmp
das
jge
jmp
call
jnp
jo
mov
stos
mov
jle
cmpsl
pushl
pop
or
ljmp
call
jmp
adc
pop
add
call
cmp
and
test
decl
jnp
fsubp
jmp
cmp
decl
jmp
lcall
pop
loop
incl
repz
xchg
lcall
xlat
repnz
out
sbb
push
dec
in
repz
pushl
pusha
push
repz
pop
jns
ss
fbstp
jmp
jle
inc
ljmp
xlat
push
push
add
decl
push
jmp
decl
test
inc
ljmp
loope
insl
push
push
je
mov
jmp
loope
cmp
jne
decl
jo
mov
ljmp
mov
pushl
pop
jne
jmp
ljmp
call
incl
xchg
dec
sti
mov
call
js
jnp
cmp
cli
push
mov
push
clc
xor
push
jecxz
daa
call
lcall
insb
and
aad
cmp
pushl
dec
in
popa
lcall
fsubrl
and
test
mov
aaa
pushf
loop
mov
incl
pushl
pushl
rorb
sbb
push
out
jmp
ficomps
sbb
inc
pushl
movsl
call
inc
incl
call
dec
add
jmp
mov
jp
push
std
add
incl
add
sar
rorb
ljmp
jmp
mov
iret
push
enter
loop
dec
and
or
cmp
add
jmp
mov
jmp
jecxz
pop
lcall
sbb
mov
push
sbb
frstor
push
adc
clc
mov
jecxz
jno
hlt
mov
call
clc
xchg
test
pop
pop
cltd
pusha
ljmp
daa
fstpl
lahf
shrl
incl
jmp
pop
and
pop
xchg
mov
incl
pushl
inc
decl
call
xchg
mov
repnz
addr16
ljmp
out
jmp
adc
ljmp
sbb
scas
and
sbb
dec
pop
mov
sbb
dec
or
decl
movsl
lcall
test
popa
push
test
dec
call
iret
mov
xchg
test
jns
aad
inc
mov
xchg
lcall
inc
ljmp
mov
sbb
je
cmp
jnp
lret
mov
add
in
or
sbb
jbe
decl
dec
pop
sub
ljmp
movsb
js
jmp
call
mov
icebp
jmp
into
call
setne
in
pop
insl
push
jmp
ret
jmp
push
jmp
jp
incl
test
push
cmp
js
into
add
pushl
sbb
and
outsb
inc
decl
insl
jge
outsl
testb
sub
cmp
ds
push
testb
shll
js
sar
dec
or
add
ljmp
aas
inc
decl
decl
std
cs
push
fildl
and
mov
notl
cmp
inc
cld
dec
push
mov
js
lahf
xor
ljmp
pop
lcall
ret
decl
pushl
cmp
aas
jg
incl
or
inc
call
outsb
xchg
push
call
lahf
mov
ljmp
mov
arpl
lods
pop
mov
js
lcall
call
mov
inc
incl
ljmp
insb
adc
out
rol
ljmp
jge
sbb
call
push
pop
pop
loop,pt
incl
popa
push
pop
in
xor
in
out
imul
mov
xor
add
cmpsl
jmp
lcall
mov
cli
mov
fdivr
or
mov
iret
push
scas
cmp
in
popa
mov
rcll
ljmp
insl
sbb
push
iret
xor
sbb
dec
pop
xchg
xor
popf
and
cmp
jmp
jmp
cli
sub
rcrl
gs
mov
lcall
mov
jmp
lcall
decl
mov
cmp
cmp
incl
dec
mov
add
test
sub
cmp
jmp
push
outsl
in
mov
jno
insl
push
mov
call
dec
xlat
or
lcall
fistps
cmp
lods
jo
push
xor
decl
sar
incl
in
inc
incl
xchg
sahf
in
test
dec
dec
xor
jge
sbb
cmp
cmp
ljmp
push
pop
test
fisttpll
lret
mov
fldenv
xchg
sbb
xor
stc
cmpsb
jmp
xor
call
cmp
mov
inc
js
lods
outsb
pop
loopne
popf
cli
or
ljmp
mov
sar
aaa
cmp
pop
sbb
loopne
xchg
jmpw
inc
lcall
ljmp
lods
out
rcrl
clc
cltd
xchg
in
dec
inc
decl
cld
pop
lret
je
jmp
call
repz
mov
jmp
sbb
xchg
jge
call
cmp
test
shll
roll
incl
decl
aas
emms
fstpt
fldcw
ret
pushl
push
and
test
call
mov
lret
or
decl
nop
scas
sub
inc
mov
adc
mov
daa
jmp
test
pop
ljmp
cmp
inc
pushl
pushl
jnp
popa
mov
jmp
jmp
std
test
sahf
test
xor
sti
fimull
mov
imul
sub
add
cmp
xor
incl
out
or
pushl
iret
add
add
lcall
pushf
test
add
decl
inc
jmp
push
mov
stc
mov
mov
dec
jg
jo
out
cmp
xchg
pop
lods
or
insl
ljmp
xchg
xor
cwtl
faddp
call
mov
ljmp
je
lcall
lods
out
adc
mov
jp
out
or
inc
incl
call
lock
mov
sbb
lret
dec
and
cmp
decl
cmpsl
push
lret
int
lcall
inc
pushl
and
push
sbb
shlb
lahf
sub
xor
iret
fiadds
frstor
mov
jae
pushl
cmp
push
or
imul
test
push
ret
lcall
mov
outsb
lret
call
push
cmp
push
add
pushl
mov
stos
cmp
sub
lock
mov
mov
ja
xchg
addr16
imul
dec
mov
stc
sub
arpl
out
out
mov
mov
lcall
in
pop
jmp
scas
adc
mov
cltd
imul
dec
adc
mov
decl
mov
sbb
fisubrl
mov
addr16
sub
lcall
cmp
call
int
add
pop
cmp
call
pop
mov
or
mov
lret
adc
fstl
pop
std
add
call
decl
mov
in
sub
movsl
pushl
stc
stos
jle
dec
push
push
inc
call
cwtl
jb
decl
jmp
lcall
mov
pushl
jp
dec
ja
ljmp
imul
or
lcall
cwtl
and
adc
jmp
cmp
aad
ja
jmp
jmp
push
xchg
std
call
leave
iret
jge
and
in
mov
ljmp
xor
lcall
cmp
popa
jmp
cmp
pop
sub
lret
out
aam
cs
notl
std
and
ret
daa
decl
add
mov
or
frstor
jmp
and
xor
pushl
sbb
push
sub
pop
arpl
sub
cmp
dec
ljmp
xor
mov
lcall
sub
incl
fcomps
adc
push
decl
sbb
jo
xor
dec
mov
js
decl
mov
decl
cmp
lcall
incl
clc
jbe
add
ljmp
loop
jp
cmp
push
ljmp
push
sub
jmp
pushf
insb
or
call
cmp
mov
std
enter
inc
inc
ljmp
sbb
mov
fdivs
pushl
dec
fldenv
incl
ljmp
cmc
dec
sysret
jmp
test
pop
jle
mov
lcall
cmp
xchg
dec
mov
jmp
pushl
cmp
xor
jmp
ljmp
cmp
sti
je
mov
mov
jmp
lods
loope
mov
int
jle
cld
leave
xchg
mov
out
dec
mov
ja
call
jmp
jmp
stos
mov
imul
gs
decl
nop
adc
fadds
push
mov
jmp
mov
lahf
push
incl
incl
js
lcall
mov
adc
call
cmp
push
mov
jp
incl
dec
pop
fwait
sbb
int
push
jl
pusha
jmp
jmp
inc
dec
mov
add
jnp
fcomps
hlt
push
xor
lcall
scas
inc
jmp
incl
ljmp
and
dec
jb
xchg
and
fsubs
xchg
call
jmp
or
pushl
adc
rorb
push
lahf
pop
hlt
cmp
mov
sbb
cld
call
jne
decl
jp
push
dec
fcomps
sar
sar
jae
inc
ljmp
inc
jmp
call
ljmp
js
mov
fdivl
sahf
pop
adc
mov
inc
inc
incl
call
sbb
sub
stos
mov
dec
pop
jno
jmp
call
test
cmp
mov
mov
dec
divl
jmp
jnp
mov
and
ljmp
fwait
rorb
mov
xor
es
out
fdivl
lcall
clc
push
pop
pushl
mov
fdivrs
ret
call
sbb
ret
cs
call
std
mov
pushf
ss
fdivp
inc
jmp
jb
mov
push
rolb
cmc
lea
xor
push
jo
jae
incl
lcall
sub
mov
jbe
mov
xchg
icebp
jb
push
jns
jmp
enter
stc
stos
sti
ja
call
push
sub
jp
push
scas
int3
jmp
push
cmp
ljmp
aaa
popa
pushl
imul
add
ljmp
test
clc
aam
fwait
pushf
gs
popf
adc
fsubr
cltd
dec
mov
adc
cmp
test
out
test
add
fstps
jl
ret
lcall
adc
hlt
mov
or
dec
into
loopne
and
adc
xchg
pop
ret
decl
mov
imul
incl
push
pushl
push
sbb
out
mov
pushl
call
je
js
sub
ljmp
cmpsb
jmp
mov
jns
outsl
jno
incl
add
pushl
test
mov
push
lcall
outsl
sbb
mov
pop
sub
mov
out
sti
pusha
dec
xchg
mov
call
fcoml
jo
cmp
push
mov
ja
incl
decl
ret
jmp
jae
pop
sub
movsl
aas
xor
fdivrs
sar
mov
push
push
add
call
ret
fadd
decl
or
or
hlt
adc
mov
aas
insb
pop
xlat
das
nop
or
pushl
test
push
hlt
sbb
push
xlat
cmp
fbld
fcmovne
cmpsb
call
mov
mov
out
sar
leave
shll
das
push
sub
incl
lcall
mov
mov
xchg
adc
outsl
xor
jmp
mov
dec
inc
dec
cmp
pop
xchg
mov
out
xor
pop
inc
decl
in
lcall
inc
incl
push
jns
mov
xlat
cmp
testb
dec
in
cmp
inc
ljmp
jg
shll
mov
dec
fnsave
pushl
push
dec
clc
inc
call
push
clc
add
pop
aas
jbe
cmp
adc
rol
lcall
decl
std
mov
dec
test
repz
dec
sbb
jmp
incl
xchg
pusha
jmp
dec
dec
mov
ljmp
ljmp
and
fcomps
mov
sub
add
pop
jo
test
loope
sub
jmp
pop
loopne
jg
enter
mov
add
call
or
imul
mov
cmp
aad
int
add
sub
push
sbb
sub
movsl
jmp
cmp
jb
repnz
call
push
xor
pushl
ficoms
nop
je
add
ljmp
mov
lcall
add
test
jle
incl
ret
decl
jle
dec
mov
in
push
or
in
mov
adc
inc
jl
push
sbb
aas
push
xchg
add
jmp
xor
aam
ljmp
addr16
cmp
push
stos
mov
iret
push
cs
jp
dec
add
pushl
xchg
rcll
ljmp
and
mov
jmp
movsb
mov
or
decl
dec
adc
mov
lcall
scas
push
sub
mov
ss
xchg
movsl
pushl
jmp
pop
decl
xor
jl
fldenv
pushl
aaa
dec
movups
call
mov
mov
ljmp
xchg
faddp
clc
lods
sbb
pushl
ds
pushl
call
ljmp
pushl
push
xor
lcall
shr
mov
call
push
lcall
inc
cmp
lcall
cmc
fidivrs
and
test
jle
push
cmp
pushl
cmpsb
dec
mov
or
lcall
add
mov
mov
call
push
loopne
ret
push
sub
ret
js
std
jbe
ljmp
enter
incl
pop
call
and
in
shlb
jl
out
mov
incl
lcall
add
faddl
mov
adc
out
mov
push
push
rorb
std
jmp
call
popf
outsb
or
incl
ret
incl
hlt
sti
mov
loope
sub
stc
jbe
sub
or
stc
mov
sar
xchg
inc
ljmp
inc
call
and
or
scas
ljmp
decl
and
dec
popf
scas
xchg
xor
jmp
jp
cmp
hlt
test
pushl
inc
decl
and
push
sbb
enter
add
jmp
push
clc
mov
sbb
out
sahf
shll
lcall
cltd
mov
mov
cmpsl
lcall
mov
sub
aas
push
repnz
pushl
call
jmp
pushl
call
loop
add
arpl
rclb
in
xor
cmc
nop
pop
call
sub
inc
decl
call
and
lahf
mov
dec
aas
push
lret
sbb
cmp
cwtl
jae
xchg
aaa
aad
lods
add
xchg
sbb
pusha
jmp
push
call
push
arpl
sbb
xor
enter
sub
out
ljmp
push
sar
call
jmp
jmp
or
icebp
add
push
push
ljmp
test
ljmp
call
jb,pt
rol
cmp
mov
decl
lea
jecxz
fsubrl
imull
enter
std
out
cmp
mov
into
xchg
sar
pop
js
stc
mov
mov
decl
jmp
clc
cmp
cs
pop
jp
mov
jmp
push
cmp
push
pop
dec
mov
rcrl
and
or
mov
repnz
in
mov
sbb
decl
cs
cmpsl
incl
fdivrl
decl
call
cmp
adc
sbb
lcall
dec
mov
pushl
mov
lcall
fidivrl
mov
xor
push
jae
add
incl
jg
cmp
xchg
jo
pop
into
dec
mov
jge
ljmp
cld
movsb
jmp
add
jmp
xor
clc
sbb
lret
mov
ljmp
mov
jle
adc
pusha
pushl
fildll
fstps
pop
jmp
dec
xchg
mov
or
ret
lcall
push
jecxz
inc
ljmp
stos
call
fcmovb
call
nop
cmpsl
ljmp
pushf
out
adc
mov
jmp
inc
lcall
ss
xor
mov
or
add
dec
push
inc
decl
and
aaa
call
pinsrw
fidivrl
xor
mov
mov
mov
incl
sub
dec
pop
addr16
jae
call
decl
test
inc
jmp
cld
lahf
cmc
daa
lcall
sbb
sbb
dec
jmp
mov
ljmp
pushl
cmp
add
pushl
lods
xor
call
sbb
insb
mov
into
and
sub
lcall
dec
inc
fadds
rorb
pushl
loopne
decb
decl
jne
pop
xor
cwtl
mov
cmp
cld
xchg
lods
and
cmp
ja
add
incl
push
sub
adc
hlt
xor
lcall
dec
dec
daa
push
mov
xchg
sbb
or
mov
je
decl
mov
enter
call
fiaddl
mov
lahf
pop
push
pushl
mov
std
push
jmp
mov
pushl
push
mov
lods
out
add
jmp
decl
decl
insl
in
xchg
push
lcall
fmul
mov
call
into
add
call
jne
lea
out
mov
push
sti
and
test
inc
call
mov
into
cmp
lods
or
inc
decl
pushf
cmpsb
pushl
and
loop
in
jns
pushl
inc
pushl
adc
test
inc
jmp
cli
sar
mov
adc
lcall
out
jne
cmp
decl
sar
aas
cmp
decl
inc
decl
dec
or
incl
pusha
jle
stc
rorb
xchg
dec
inc
lcall
movsb
pushl
cltd
mov
ljmp
pop
decl
xchg
cmp
add
fisubs
jmp
fsubs
ljmp
loope
je
ljmp
lahf
pop
cmp
mov
cmp
jmp
push
dec
jne
lcall
adc
jmp
jp
lret
mov
xchg
loop
loope
inc
decl
daa
incl
sub
mov
loop
inc
lcall
inc
ljmp
push
mov
lret
dec
push
sar
cwtl
sti
std
dec
xchg
dec
pop
fdivs
push
popa
jns
incl
lcall
shl
push
jno
cmp
popa
push
cmpsl
decl
arpl
ljmp
rorb
es
mov
notl
xchg
xchg
inc
ljmp
call
add
incl
daa
jmp
arpl
adc
xor
push
mov
flds
adc
in
call
arpl
sub
cmp
imul
or
dec
mov
in
es
movswl
inc
mov
pushl
lcall
imul
jnp
inc
decl
repz
mov
inc
decl
sarb
jmp
stc
insb
das
fimull
out
call
loop
pop
mov
cs
xchg
sub
cmp
mov
fwait
std
push
aam
insb
add
pushl
lahf
inc
mov
mov
jbe
mov
pop
dec
rcrl
and
fwait
scas
xor
or
mov
loopne
pop
divb
decl
push
pop
sbb
jmp
decl
call
push
mov
aad
das
sar
insb
adc
call
mov
cmp
lcall
inc
lcall
cli
sar
jl
icebp
inc
pushl
sbb
stos
push
pop
or
pushl
sub
mov
jle
out
out
popf
fxch
xchg
cltd
cs
xor
jg
lcall
add
pushl
call
pop
mov
jmp
jp
xor
mov
inc
decl
dec
sub
lcall
icebp
pop
jmp
mov
lcall
call
xor
mov
call
ljmp
jge
cltd
lahf
inc
pushl
xchg
and
leave
pop
mov
push
mov
das
mov
lcall
fisubs
incl
dec
gs
fistpll
js
out
insl
lret
adc
inc
lcall
mov
pop
lret
nop
and
adc
ror
jns
iret
or
out
push
arpl
incl
dec
mov
daa
fisttpl
pop
jno
inc
push
divb
pop
xor
mov
sub
repnz
jmp
call
repnz
cmp
pop
incl
push
scas
in
push
mov
test
stc
mov
jle
jo
int3
xlat
add
ljmp
repz
call
shlb
jg
jg
das
push
in
clc
imul
aam
and
cmp
jmp
push
sar
lcall
adc
sub
jg
incl
fdivp
xchg
das
cmpsl
mov
jmp
repnz
js
pushl
jmp
xor
outsb
lret
insl
pushf
xchg
or
jb
std
out
jo
lcall
clc
cmpsb
pushl
fildll
xchg
jmp
or
lcall
jae
in
test
xlat
lret
repnz
push
enter
xchg
enter
mov
decl
sti
lock
call
aas
dec
mov
sbb
shrl
jno
or
mov
cmp
in
cmpsb
incl
add
call
aas
xchg
ss
incl
fcompl
arpl
push
cwtl
and
js
fwait
inc
lcall
sbb
mov
push
pop
xchg
nop
js
jle
mov
jle
adc
call
mov
cmp
xlat
shll
lods
xchg
movsl
ljmp
dec
xchg
stos
cld
test
mov
xchg
mov
int3
mov
dec
sbb
imul
sbb
call
sub
pop
sub
xlat
inc
jmp
decl
xor
call
inc
pushl
push
or
cmp
movsb
js
pushf
mov
incl
std
mov
cli
push
test
fwait
and
pop
pop
add
lcall
repz
inc
pushl
push
test
lcall
mov
jne
call
xchg
add
ljmp
in
and
jecxz
xor
mov
jmp
imul
decl
add
decl
adc
call
inc
clc
in
cmp
push
in
adc
pop
in
sbb
insl
mulb
incl
push
sub
jmp
fstl
xor
ss
pop
sbb
inc
fcoms
and
pushf
dec
push
outsl
rcrl
arpl
mov
xor
jne
decl
add
jmp
repnz
sub
out
push
incl
mov
notb
mov
jns
jg
clc
imul
or
or
insl
imul
push
xor
dec
mov
sub
mov
imul
pop
xor
push
ljmp
dec
or
mov
mov
adc
arpl
jno
ljmp
xchg
and
imul
push
fimull
cli
fistpl
mov
callw
or
incl
dec
nop
out
xor
xor
adc
push
jge
filds
pushl
decb
sub
scas
stos
cmp
call
push
ds
ja
jp
outsb
int
mov
decl
dec
pusha
call
ds
js
pop
push
test
test
sub
decl
mov
popf
data16
out
adc
lret
add
fmull
lcall
sbb
incl
push
push
call
call
out
adc
pop
push
out
xor
inc
call
jp
stos
jmp
ljmp
mov
mov
ss
ljmp
mov
cmp
fstpl
pushl
hlt
pop
popf
or
addr16
jmp
jl
cmp
call
ljmp
sbb
inc
push
jb
mov
incl
jmp
inc
jmp
aas
int3
fidivl
shrb
mov
fdivs
lret
int3
inc
ljmp
test
ficoms
add
pushl
mov
decl
jmp
lcall
mov
sub
mov
enter
decl
push
loope
lock
mov
xchg
out
adc
push
cmp
js
decl
iret
arpl
and
mov
ljmp
mov
ljmp
mov
pushl
incl
ljmp
and
repz
ss
ljmp
jecxz
lcall
loopne
dec
mov
adc
cmp
ljmp
inc
mov
call
jmp
lahf
jae
dec
mov
call
mov
pusha
lcall
add
mov
inc
out
int3
add
incl
js
adc
push
cmp
ljmp
insl
dec
in
pop
insl
xchg
or
ret
ljmp
inc
ljmp
inc
incl
mov
inc
decl
sbb
arpl
test
lock
sar
repnz
scas
mov
out
xor
je
jmp
call
test
push
jg
push
lea
sti
or
jne
lock
lcall
lcall
outsb
push
jns
je
sti
xchg
sbb
or
push
push
push
lcallw
cmp
lret
jo
pop
in
jge
or
or
jmp
lcall
sar
lcall
testl
xor
push
cmp
sub
sbb
xchg
mov
jmp
incl
push
imul
fisubrs
jmp
dec
xchg
and
and
incl
call
mov
dec
mov
fisttpl
mov
sbb
rcll
std
decl
call
lods
jmp
cmp
gs
incl
outsb
xchg
and
ljmp
ljmp
and
pop
adc
imul
dec
call
and
lret
pop
mov
call
pop
mov
movsb
call
js
push
add
pushl
call
call
into
xor
incl
pushl
call
or
jmp
adc
inc
call
mov
sub
sub
stos
out
ljmp
cmp
in
add
lcall
dec
aas
adc
ja
incl
dec
es
loop
push
incl
fldcw
call
jle
cmp
add
pushl
fidivl
mov
decl
lcall
sub
xchg
jno
sti
sbb
aas
push
pushl
imul
out
dec
cmp
incl
lcall
aaa
insl
ret
cmp
decl
jmp
xchg
add
mov
jo
push
ss
sub
mov
jmp
ja
mov
xchg
xchg
out
cli
push
dec
popa
pushl
and
add
lcall
adc
dec
xor
add
pushl
iret
inc
ljmp
cs
hlt
call
outsb
lcall
adc
std
jbe
aam
stc
cli
xchg
mov
in
push
hlt
mov
jmp
decl
decl
imul
ljmp
sbb
pop
ljmp
lcall
cmp
push
incw
int
mov
cmc
sub
pushf
scas
in
sbb
loop
rcrb
or
stc
imul
lcall
xor
sar
movsb
pushl
add
ljmp
bnd
incl
enter
stc
in
and
nop
in
ret
pushl
mov
out
add
pushl
mov
ljmp
stc
jle
hlt
inc
jmp
mov
lods
cmp
xchg
lods
xor
mov
outsb
movsl
in
lret
rolb
call
or
adc
adc
push
xor
cmp
jmp
and
fsts
pop
dec
roll
inc
pushl
call
mov
lcall
mov
dec
add
cmp
loope
or
mov
sbb
cmp
ljmp
lahf
mov
cld
mov
lret
push
insl
in
fnstenv
sub
std
push
std
in
inc
mov
push
enter
dec
hlt
push
mov
lcall
pushl
mov
int3
jmp
pushl
push
lods
jl
or
pushl
ds
cmp
fmulp
dec
push
shl
push
ret
lcall
pushl
mov
hlt
jg
jmp
fimuls
mov
mov
pop
fmull
inc
decl
pushl
xchg
int3
das
jle
and
add
aas
in
lock
mov
stos
adc
and
scas
or
pop
inc
ljmp
dec
cltd
roll
push
cmpsl
call
cli
mov
jmp
or
lcall
or
pushl
out
repnz
sbb
addr16
ds
insl
ret
mov
push
clc
push
cmp
pop
call
mov
xchg
sti
xor
add
pushl
adc
outsl
imul
lret
lret
pop
scas
jmp
incl
incl
scas
decl
jno
decl
xchg
jnp
incl
cld
mov
pushl
push
frstor
fcomp
mov
call
xchg
cli
ficoms
in
int
jmp
mov
pushl
ljmp
ljmp
clc
adc
jno
sar
mov
jbe
cmp
movsb
decl
in
mov
out
outsb
daa
incl
call
dec
push
sbb
push
rcrb
out
fucomp
sub
movsl
pushl
dec
and
sub
out
popa
mov
pop
push
jne
std
sti
lcall
mov
rolb
push
inc
jns
test
ljmp
aas
and
in
int3
xchg
ljmp
dec
into
xchg
decw
dec
arpl
imulb
roll
lahf
js
out
stos
or
jmp
inc
pushl
js
in
out
add
decl
ljmp
mov
pusha
ljmp
xor
repnz
mov
pop
mov
sbb
je
stos
xchg
out
int3
in
pushf
sbb
addr16
clc
xchg
jge
sar
cmc
cmp
sub
imul
lock
insl
inc
lcall
loopne
sar
mov
dec
sub
mov
mov
jg
or
arpl
in
scas
adc
lcall
adc
movsb
call
jno
jp
mov
mov
pushl
dec
mov
mov
mov
aas
mov
mov
cmpsl
jmp
cmp
sar
icebp
mov
decl
arpl
lahf
out
add
decl
mov
xchg
jne
xor
mov
incl
decl
lcall
or
adc
ret
push
xchg
ja
std
xchg
jnp
cs
pop
xchg
stos
shl
mov
aaa
lock
jns
lcall
or
sbb
mov
jge
xor
std
imul
add
decl
in
push
inc
jmp
aam
decl
mov
cmp
in
jo
inc
decl
ljmp
cld
sbb
loopne
jecxz
mov
ljmp
leave
clc
mov
mov
fcmovne
sbb
cmp
push
xchg
dec
push
push
packsswb
fnstsw
ljmp
sbb
mov
mov
xchg
or
cmc
addr16
stc
sar
push
loop
adc
pushl
inc
call
imul
or
mov
xlat
iret
xchg
mov
and
pop
outsb
jbe
decl
mov
jmp
cmp
xchg
cmp
cwtl
fwait
mov
jmp
jmp
incl
int
jnp
cmc
outsl
lahf
add
fstl
jle
fs
push
adc
sub
xchg
sbb
dec
mov
jmp
lahf
fsubp
incl
daa
call
sahf
pop
mov
add
shll
xchg
mov
pushl
xchg
sar
inc
incl
xchg
pop
aam
adc
and
mov
ljmp
jge
mov
jmp
decl
ljmp
loope
jle
push
popf
pop
add
icebp
pop
das
dec
pop
sbb
cmp
aas
jnp
mov
incl
decl
xchg
fistpll
xchg
inc
pushl
pop
or
adc
stos
pop
dec
fildll
lcall
mov
mov
adc
pushl
rorb
ficoms
push
add
jmp
cmp
cmp
cmp
incl
and
adc
lock
add
pushl
stos
incl
cmp
call
test
mov
mov
mov
add
decl
outsl
jmp
pushf
pop
cltd
je
inc
lcall
inc
decl
xchg
call
or
push
inc
inc
incl
outsb
notl
cli
lcall
jp
or
call
dec
jae
test
pushl
fidivs
pushl
xchg
mov
ja
dec
xor
sahf
aad
jecxz
push
pop
cmp
inc
cmp
push
jecxz
jno
mov
or
mov
loopne
sbb
sar
dec
insl
or
mov
xchg
push
xchg
or
cmp
cmp
iret
cmpsl
lcall
jmp
popf
loopne
cmpsb
incl
jmp
xor
jae
loope
and
mov
pushl
in
test
clc
xor
lods
cs
lahf
mov
incw
pop
push
adc
cld
mov
ljmp
mov
popa
ljmp
call
xor
push
popf
fcoml
cwtl
xlat
in
out
sar
sbb
incl
call
es
xor
cmp
jmp
sub
cmp
pop
aad
pop
mov
jae
pushl
xchg
sub
cli
add
pushl
int3
sbb
mov
in
mov
add
ficoms
and
sbb
ljmp
fdivp
jbe,pt
add
call
lcall
decl
lcall
std
ja
mov
call
lcall
mov
xchg
popf
jmp
incl
add
ljmp
je
pop
loopne
jnp
call
mov
lods
dec
callw
decl
pushl
cmp
jmp
call
fldenv
clc
mov
sbb
cmp
decl
out
movsb
pushl
repz
decl
incl
push
scas
and
sahf
fwait
aas
shll
inc
jmp
pop
adc
push
in
lods
sbb
jns
inc
ljmp
inc
lcall
sub
cmp
in
mov
and
mov
fdivp
xchg
mov
mov
jmp
hlt
jbe
fisttpll
jmp
mov
enter
clc
ja
fwait
sahf
scas
aad
lret
pop
insb
dec
popa
cmp
jb
dec
push
mov
jmp
jmp
ss
cltd
aaa
mov
pop
mov
dec
out
setle
push
jp
sub
lcall
cmp
xchg
and
mov
ds
xchg
xchg
ljmp
mov
lret
push
stos
push
xor
ret
ficompl
xor
xchg
cmpsb
ljmp
sbb
pusha
jmp
in
or
aas
inc
push
inc
mov
or
repz
jmp
jmp
ljmp
imul
cmc
pcmpgtd
and
mov
push
mov
push
das
mov
push
repz
sbb
push
stos
jge
cmp
arpl
mov
pop
mov
sub
dec
cmpsl
incl
jmp
inc
call
in
sub
dec
ret
incl
jo
xor
jbe
ljmp
pop
inc
decl
cltd
das
rorb
fiadds
ljmp
inc
incl
push
jg
mov
inc
incl
ret
cmp
mov
push
fstpt
fbld
push
cmp
jl
add
call
incl
outsb
js
adc
out
inc
call
or
xchg
dec
in
xchg
ds
push
fstpl
cmp
ret
frstor
ljmp
sbb
jnp
inc
ljmp
int
xor
mov
loope
imul
nop
adc
decl
in
dec
jno
mov
mov
xor
lcall
xchg
nop
mov
in
push
inc
jmp
call
push
cmp
stos
xchg
outsl
sahf
test
inc
decl
stc
mov
decl
push
js
daa
aas
ds
cltd
adc
sbb
lcall
stos
fs
pop
mov
loopne
ret
ficoms
jmp
jmp
jp
in
adc
inc
jmp
jg
push
jne
mov
inc
inc
call
enter
js
imul
imul
iret
in
adc
mov
cmpsl
pushl
add
lcall
pushl
dec
xchg
outsb
add
mov
movsl
call
out
and
mov
pushl
decl
pushl
xchg
mov
sub
or
cmp
cli
in
dec
jp
js
lcall
jmp
incl
cwtl
pop
jecxz
inc
lcall
pop
cwtl
or
imull
sarb
decl
xchg
pop
mov
dec
popf
cmp
mov
sub
incl
fwait
mov
sub
jmp
mov
incl
das
push
jo
ss
mov
push
je
dec
cmp
decl
fwait
mov
or
decl
call
and
cs
jp
xlat
mov
adc
jle
jmp
inc
ljmp
push
jmp
popf
out
mov
idivl
xor
push
test
js
int3
sub
into
fcmove
mov
into
loope
push
call
popa
jmp
incl
aam
lcall
incl
pushl
pop
xchg
jne
inc
jmp
jb
outsb
mov
scas
add
jmp
call
pop
stos
cmp
mov
out
add
ljmp
jmp
lcall
ret
or
mov
decl
std
cli
cmp
or
mov
mov
mov
mov
incl
lcall
add
call
push
lods
aaa
jnp
test
cltd
lcallw
stc
test
cmp
pop
nop/reserved
jae
jae
sarb
ja
push
call
jmp
adc
and
test
lret
stc
hlt
jmp
pop
mov
adc
sbb
cmpsl
incl
out
mov
lcall
jecxz
pushf
or
mov
fcom
jp
push
ljmp
dec
sbb
repnz
adc
das
inc
jmp
adc
mov
inc
lcall
add
cld
add
decl
jns
xor
mov
fcompl
outsl
lret
add
cld
cld
int
call
loopne
mov
insl
shl
call
in
sar
incl
cmp
in
int3
add
incl
ljmp
inc
jmp
loop
inc
pushl
add
lcall
mov
call
hlt
lret
mov
pop
imul
ficompl
cmpsl
decl
xchg
cld
and
icebp
pop
pop
mull
push
push
repnz
fs
sti
sbb
push
push
push
dec
pop
enter
mov
testb
mov
mov
decl
ret
clc
scas
test
pushl
lea
jb
push
push
and
push
xlat
fcmovb
ljmp
out
dec
pop
jl
rcrb
cld
aad
testb
lcall
mov
adc
adc
push
or
push
outsb
popf
sub
add
xchg
xor
rep
movsl
jmp
insl
adc
cmp
inc
mov
ss
dec
or
sbb
decl
movsl
call
jmp
dec
mov
lcall
pop
ror
xchg
ret
adc
jmp
decl
popf
or
pushl
aad
cmc
sub
pop
decl
sbb
sub
jmp
jl
enter
call
cmp
sbb
adc
jns
inc
jmp
into
mov
decl
out
clc
push
stos
or
popa
jmp
decl
outsl
or
jb
push
or
cmp
paddusb
ret
push
adc
sbb
cmp
stos
loopne
enter
mov
sbb
mov
call
push
sub
fnstcw
dec
mov
outsl
and
test
and
add
cmp
mov
pusha
js
fidivs
outsb
mov
incl
pushl
lcall
cmpsl
jmp
mov
cli
dec
je
call
ss
outsb
stos
pusha
jmp
incl
out
shl
shll
fnstcw
pushf
std
mov
push
sbb
cmp
cmpsb
clc
push
lock
ljmp
ljmp
cmp
popa
incl
jg
push
pusha
decl
push
incl
lret
out
and
sub
addr16
jmp
test
decl
pop
jmp
or
sbb
pop
test
mov
pushl
ss
push
lcall
leave
movsl
incl
fmulp
je
jg
push
xor
into
xor
lea
jmp
push
icebp
xchg
jb
mov
jmp
mov
ljmp
mov
pop
nop
push
scas
lods
inc
call
dec
cmpsb
ljmp
push
mov
pop
lret
xchg
out
add
mov
mov
xchg
leave
nop
incl
pushl
pop
mov
incl
call
test
repnz
incl
decl
call
sbb
sbb
mov
out
mov
incl
popa
cmp
nop
add
ljmp
mov
pushl
cli
push
call
into
leave
mov
ja
into
adc
dec
in
std
pop
scas
and
aam
fsubr
cwtl
jae
cmp
lcall
lret
or
sub
or
and
leave
mov
cmp
incl
in
pop
cmpsb
dec
sar
dec
mov
lods
inc
pushl
mov
sub
flds
pushf
sub
out
sti
xor
mov
cli
jp
cmp
push
adc
call
xchg
sbb
in
mov
xchg
popa
incl
cwtl
rcl
jecxz
sub
incl
mov
cmp
jae
jmp
decl
push
lcall
mov
test
incl
ljmp
lcall
or
push
out
pop
mov
pop
or
mov
jmp
push
clc
inc
mov
sub
fwait
addr16
cld
cmp
pop
inc
jmp
incl
dec
dec
call
add
xchg
jmp
