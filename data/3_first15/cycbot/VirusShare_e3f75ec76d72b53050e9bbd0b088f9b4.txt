push
int
and
push
popa
outsb
sbb
punpcklbw
mov
in
jge
xchg
cmp
push
ds
and
popa
jno
add
push
pop
xor
rclb
daa
add
fiadds
imul
loope
mov
push
ja
add
add
int
je
dec
sahf
cmp
jae
repz
and
push
sbb
fcomp
mov
pusha
add
add
dec
jle
xchg
mov
imulb
jno
cmp
adc
add
jp
je
shr
jb
out
repz
aam
arpl
fdivrs
mov
lret
jl
and
jmp
sbb
sbb
add
dec
mov
ret
dec
je
adc
add
sbb
and
sarl
in
cmp
jp
imul
arpl
bound
ror
lret
rolb
pop
imul
dec
mov
pop
sti
repz
dec
jbe
push
add
es
mov
loopne
inc
add
popa
xor
mov
sub
in
inc
add
pushf
cmc
pop
outsb
adc
mov
jnp
cmp
or
fs
dec
cli
inc
mov
cmp
nop
sbb
lock
rcrl
insl
fmul
mov
adc
ljmp
popa
xor
push
jo
nop
jle
cltd
add
leave
or
add
insl
addb
dec
test
add
jl
add
mov
xchg
incb
nop
les
psrld
stos
xchg
xlat
adc
xchg
jae
dec
jmp
jbe
pop
imul
mov
insl
push
test
pop
int3
or
dec
lods
out
aas
mov
and
cmpsb
adc
rclb
push
sub
sub
pop
lods
fstl
shll
add
add
push
or
or
das
std
sbb
enter
or
push
mov
in
push
inc
add
filds
popa
dec
xchg
push
sti
movsl
mov
pushf
add
ret
sub
and
mov
out
mov
dec
or
add
jbe
ljmp
mov
sbb
je
into
in
addb
test
add
fdivrp
addb
dec
rclb
rcrl
mov
jle
mov
add
enter
ss
imul
mov
jae
jb
lds
mov
cmp
push
jmp
jmp
rolb
iret
xor
and
adc
test
mov
push
adc
rolb
and
mov
addb
ljmp
das
sbb
xorl
pusha
add
or
stos
cli
ret
shll
push
mov
mov
or
icebp
inc
jmp
or
mov
push
sbb
cmp
mov
cmpsb
cwtl
es
and
int
repz
or
adc
mov
dec
sub
cmpsl
cmpsb
movb
cltd
or
les
push
xchg
inc
add
fisttps
js
mov
shr
dec
push
loop
in
sbb
push
add
add
add
je
cwtl
xor
lret
popa
ds
add
je
cs
ret
sti
sahf
dec
cld
push
shrb
mov
jno
jo
not
mov
push
clc
out
mov
xor
repnz
mov
addr16
dec
or
mov
ja
mov
sbb
test
daa
call
adc
mov
add
push
outsb
sbb
test
dec
xchg
pop
pop
movsb
cwtl
inc
call
add
pushf
stos
les
pop
or
or
std
xchg
std
je
add
dec
test
adc
enter
jg
adc
pop
rcrl
movb
inc
add
out
sub
sbb
insb
imul
cwtl
lret
add
and
aad
push
lods
push
add
xchg
insb
adc
mov
add
fs
mov
stos
and
int3
nop
mov
jo
add
mov
lret
imul
jns
xor
std
out
leave
sti
test
add
repnz
mov
sbb
add
mov
lcall
cmp
ret
imul
xchg
xchg
xchg
add
ds
xor
data16
dec
push
xchg
push
pop
push
add
dec
call
popa
iret
js
inc
cld
push
or
inc
add
jae
mov
xchg
addb
sub
inc
mov
stos
pop
xor
inc
and
jo
arpl
add
into
adc
pop
and
xchg
lock
scas
jb
mov
or
sbb
popf
sbb
jae
es
adc
jecxz
outsb
in
ljmp
inc
jo
pop
js
xchg
add
into
jg
jb
xchg
hlt
and
std
sub
fstps
push
and
ret
pop
test
iret
add
into
push
mov
mov
and
add
call
add
jbe
insb
cmp
pop
mov
js
mov
inc
mov
popf
jecxz
xlat
mov
add
mov
movsl
pusha
add
pushf
and
rolb
cmc
jecxz
ds
pop
jmp
sbb
pop
inc
add
jae
add
imul
or
mov
adc
xor
jne
mov
stos
es
dec
rolb
es
mov
mov
bound
inc
dec
jo
fwait
or
xchg
xor
test
fcomp
jnp
jne
push
jg
add
add
dec
dec
mov
sbb
add
cmp
fldlg2
jne
jmp
mov
sbb
out
sub
jge
test
and
sbb
test
xchg
mov
inc
add
pop
add
xchg
repz
add
add
jo
test
bound
push
outsb
cltd
inc
jle
push
roll
lret
fstps
inc
shll
test
jg
mov
push
ja
inc
add
stc
addb
add
enter
and
push
les
lret
xor
xchg
leave
jp
into
in
stos
addb
add
int3
push
add
push
push
cmp
loope
xor
push
mov
mov
sub
add
loop
mov
lods
hlt
jge
and
mov
dec
jmp
mov
mov
and
sub
pop
jp
insl
mov
inc
fucomp
in
shll
cmp
add
mov
outsb
dec
outsb
rolb
aas
jo
pop
fcomps
ss
hlt
idiv
push
mov
add
pop
ja
sbb
js
loop
addb
jbe
mov
pop
xchg
mov
cli
adc
fwait
adc
in
mov
iret
aas
and
xchg
mov
mov
popa
mov
data16
imul
add
clc
dec
adc
add
stos
jmp
cld
sub
sbb
xor
pushl
add
test
jge
dec
sarl
dec
enter
lock
lcall
pop
add
push
insb
loope
xor
cltd
popa
sub
add
inc
add
and
add
add
inc
add
add
sub
push
sbb
xchg
outsb
dec
inc
movsl
inc
add
bound
in
jge
repz
ja
cmpsl
cltd
sub
sbb
mov
pop
lock
mov
add
je
stos
mov
mov
add
push
jae
in
jo
sbb
scas
cmpsl
inc
stos
mov
je
add
pop
sahf
add
jecxz
push
loope
cmp
call
dec
or
mov
mov
add
cmp
stos
sbb
and
idivb
push
sub
ja
scas
push
insl
fadds
add
inc
add
mov
inc
outsb
daa
dec
and
add
sub
add
mov
adc
jle
mov
aam
insl
movb
add
ret
movsb
mov
imul
rolb
ds
add
ja
mov
aad
cmp
inc
add
mov
insl
movq
dec
add
jb
add
mov
jo
setbe
push
add
jb
inc
jne
sub
mov
lcall
mov
add
push
jns
sbb
sbb
lods
cmpsl
pop
lcall
dec
icebp
loope
inc
add
adc
int3
int
and
aaa
cltd
dec
or
mov
lods
push
sti
push
scas
mull
aad
nop
xor
loop
push
dec
mov
mov
push
mov
not
xchg
push
movsl
pop
sbb
mov
cld
rolb
sahf
pop
imul
jl
aas
mov
outsl
int3
xor
mov
cmp
jecxz
adc
cwtl
aad
jno
sbb
faddl
xchg
adc
push
lret
or
rolb
mov
incb
add
xchg
mov
sbb
sti
enter
cmp
push
inc
cmpsb
mov
add
mov
and
imul
sarb
jle
add
adc
inc
add
pop
shlb
add
and
push
sub
add
inc
add
in
mov
test
mov
test
js
push
insl
ljmp
stos
xor
and
jno
xor
divb
insl
xchg
dec
mov
jmp
mov
sub
sti
imul
test
add
push
add
jae
movb
xchg
in
leave
xchg
inc
sub
shld
sbb
scas
sub
xor
xchg
clc
fsub
cld
push
xchg
mov
fcomps
mov
jmp
push
push
popf
cmp
xchg
repz
fwait
pop
dec
mov
push
add
mov
xchg
mov
xor
add
repz
popf
dec
iret
lahf
xor
shl
js
xchg
outsl
cmc
nop
lcall
mov
fildl
lret
xor
adc
pop
popf
insb
xor
mov
fldcw
inc
xor
add
inc
add
ljmp
push
data16
push
mov
dec
repz
jno
repz
inc
xor
sbb
in
imul
jnp
cmp
pusha
add
lea
int
hlt
int
jmp
cwtl
dec
fistpll
cli
and
outsb
pop
push
and
imul
sbb
shl
and
lcall
sub
push
push
push
cld
call
sub
mov
imul
es
ss
lea
push
push
push
call
cmp
je
es
lea
push
push
es
call
test
jne
jmp
icebp
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
lea
sub
xacquire
mov
sub
mov
cs
push
push
lret
jmp
add
add
sub
adc
popa
inc
add
add
xchg
mov
pop
mov
cmp
sbb
xchg
data16
xchg
xchg
mov
sahf
mov
les
pop
in
xchg
arpl
inc
add
xor
xor
les
pop
cwtl
subl
ja
jecxz
cmp
add
enter
inc
add
addb
std
stos
jo
or
mov
adc
or
cmc
pushw
adc
or
or
sbb
or
add
xor
rolb
add
lahf
mov
pop
out
outsl
ret
cmp
mov
push
rolb
push
daa
jp
cltd
add
sub
pop
ficoml
stos
inc
add
inc
idivl
je
into
xor
inc
les
outsl
jp
pop
addb
loope
gs
xor
lods
loop
and
ficoms
xor
add
jg
adc
add
mov
adc
or
ja
jbe
ret
push
mov
mov
add
push
iret
cld
cmpsb
jno
stos
dec
mov
add
add
cmp
push
mov
cli
out
js
mov
dec
test
and
cmp
movsb
add
ss
aaa
test
push
mov
xor
inc
and
rcl
movsb
inc
aam
cmc
dec
stos
xor
pop
or
xor
xor
push
inc
add
out
add
les
jo
js
push
cmp
jae
pop
cs
adc
xor
aaa
mov
mov
jno
push
dec
mov
add
or
insb
movb
add
lods
pop
scas
add
mov
mov
jmp
bound
pop
dec
aaa
ja
push
add
loop
sub
add
lds
insb
mov
std
nop
dec
sbb
pop
cmpsb
xor
rcl
add
hlt
cmpsb
jbe
pop
pop
jp
insb
xor
popa
loopne
xchg
loop
repz
and
sahf
add
outsb
enter
addr16
inc
add
stos
mov
pop
xchg
leave
scas
push
jno
lret
xchg
rolb
jne
fcompl
shll
add
add
add
and
sbb
wrmsr
push
movsb
icebp
repnz
and
out
rol
sbb
test
data16
ret
fisubl
leave
call
ja
inc
aam
mov
adcl
mov
push
lods
jp
fwait
out
scas
cmp
nop
repnz
add
daa
mov
sub
mov
out
add
inc
xchg
insl
sarb
pop
popf
xor
dec
icebp
jg
scas
dec
and
mov
mov
cmp
mov
les
add
bound
fildl
add
lea
cmp
mov
lock
rcll
jg
leave
ret
fwait
lods
loope
or
stc
xlat
push
arpl
adc
push
add
cwtl
inc
or
fisttpll
sub
addb
add
push
in
dec
leave
push
sbb
sahf
cmp
mov
xchg
cmp
loopne
stc
test
stc
jae
rcrl
dec
int
xor
cltd
enter
adc
add
sub
stos
or
rcrb
jmp
repnz
aaa
xchg
es
popa
xchg
insl
sbb
and
arpl
add
or
dec
xchg
movsb
mov
movl
imul
jae
fistpl
int3
inc
pushf
shrl
and
jae
fiadds
push
js
jnp
int
lret
inc
add
jmp
xlat
lods
push
sbb
mov
mov
loope
sub
xor
add
ljmp
add
xor
xor
and
cld
stos
inc
add
xor
in
in
cmpl
mov
mov
rolb
xchg
sub
dec
jl
push
add
lcall
xchg
out
push
test
mov
xchg
imul
outsb
cmp
mov
scas
int3
in
xor
in
aam
in
adc
mov
or
shl
imul
call
add
fsts
inc
add
fidivl
bound
ret
cltd
mov
adc
enter
mov
je
or
fmul
out
dec
test
inc
add
cli
sbb
stc
aad
or
mov
and
dec
ljmp
clc
lds
ds
stc
mov
repz
and
int3
pop
enter
rol
test
dec
movsb
jb
add
push
dec
push
pop
fidivrl
sub
in
addb
inc
adc
mov
aas
int
push
jecxz
or
and
loope
cmp
daa
dec
lcall
adc
das
jb
cmp
add
xor
add
dec
arpl
stos
mov
lcall
loop
jae
les
imul
pop
and
pop
aaa
out
cs
xor
data16
cltd
mov
ss
enter
cmp
outsl
jmp
adc
mov
push
mov
stos
sbb
add
jle
push
jnp
and
mov
xchg
jnp
lret
iret
ret
lret
in
es
movsb
jge
lods
repnz
loop
add
repz
repnz
gs
test
push
dec
pop
mov
xor
xor
inc
add
add
inc
jbe
repz
leave
mov
ja
ret
cld
mov
andl
in
lods
mov
jg
push
cmc
jno
mov
xchg
sti
add
jno
xchg
inc
dec
aas
pop
mov
loop
add
jne
jle
or
xor
ljmp
cmp
add
pop
lods
mov
mov
add
orl
lea
mov
into
mov
cmc
dec
sub
rorl
lcall
cmp
popf
daa
push
je
lahf
enter
add
add
jmp
and
sbb
add
repz
psubd
jbe
cmpsl
in
add
fistpl
xor
clc
into
pop
xor
int3
ret
mov
rolb
sbb
jne
cmp
add
popa
loope
je
int
push
or
inc
add
rcll
addb
repz
mov
aam
sbb
add
jg
dec
or
hlt
push
imul
xor
addb
inc
add
add
arpl
fidivrl
add
mov
add
mov
sbb
and
and
lock
sub
mov
dec
jl
push
sbb
sbb
shll
popa
mov
in
inc
jne
add
ret
test
pop
ljmp
jg
push
pop
dec
incl
jnp
add
lds
jg
push
push
jge
add
ror
mov
outsl
jg
pushf
push
jge
clc
test
es
ficoms
and
rcr
mov
jp
movsb
pop
out
add
add
mov
jp
loope
or
fisubrs
xor
and
into
pop
mov
fildll
add
add
cmpsl
pop
dec
outsb
dec
insb
inc
shrb
cmp
mov
push
out
popa
mov
cmp
ret
inc
add
out
jl
pop
jb
jmp
and
lahf
es
mov
pop
mov
inc
add
ret
rolb
inc
int
lock
mov
mov
repz
in
pushf
rolb
mov
xchg
sti
inc
enter
add
rolb
gs
fists
cmp
enter
cmpsb
push
hlt
hlt
sbb
fs
test
sbb
and
dec
aam
jae
and
mov
aam
jmp
popf
xchg
add
mov
mov
add
jmp
in
jb
and
or
repnz
jp
mov
pmaxub
pop
xlat
mov
mov
lock
leave
push
jl
jae
jmp
fwait
xchg
jecxz
sub
and
mov
popa
mov
mov
mov
in
nop
cmp
and
sub
xchg
jbe
mov
sub
dec
cli
jmp
adc
adc
add
dec
or
jns
dec
pop
lcall
add
add
out
and
add
push
mov
dec
push
cmp
add
out
add
add
repz
je
ja
pop
insl
rcrl
leave
xchg
inc
push
icebp
pop
dec
fincstp
or
add
and
popa
push
test
testl
add
jne
repz
mov
scas
hlt
lret
clc
test
dec
xor
inc
add
jno
pop
jae
cmp
and
xchg
add
adc
stos
push
imul
cmp
rol
add
movntps
in
add
sub
pop
add
mov
testl
add
mov
lods
stos
sahf
addb
mov
or
scas
test
or
jns
jmp
xchg
adc
mov
mov
mov
push
mov
je
push
push
mov
pop
sbb
ret
les
repnz
pop
mov
mov
imul
mulb
cmpsl
mov
mov
mov
repz
call
movb
leave
repz
add
inc
add
xchg
out
and
cmp
test
dec
mov
jge
push
je
ljmp
and
mov
push
sahf
push
xor
cmc
adc
add
lcall
rcr
or
add
loope
fbstp
jne
add
bound
jmp
xchg
scas
mov
inc
add
and
mov
call
scas
jae
testl
add
sbb
cmpsb
cwtl
lock
insl
sub
xchg
lret
cmp
add
mov
fisttpl
mov
lcall
movsb
ja
xchg
lods
sub
test
add
xor
lods
stos
pop
ret
aam
mov
inc
add
mov
cmp
mov
sbb
outsb
xchg
lods
sbb
or
test
ljmp
fwait
inc
add
inc
cmp
add
xchg
xor
add
aam
mov
cs
test
xchg
sub
mov
jg
jne
push
mov
jge
xchg
pushf
lahf
pop
insb
fsub
push
ja
inc
add
add
inc
jecxz,pt
mov
jge
xor
cmp
add
adc
mov
xchg
pop
sub
dec
mov
lret
cmp
cmp
mov
push
into
out
aas
dec
mov
in
hlt
jge
jge
adc
xor
fistpll
pop
cltd
mov
add
and
adc
bswap
xor
pop
jp
insl
sbb
jns
fsubrs
jp
add
shll
cmpsb
inc
ret
leave
loopne
sub
ret
js
mov
mov
push
xor
stos
imul
add
movsb
jmp
xor
jle
lret
insl
push
lret
insb
xchg
cwtl
fcom
mov
sub
xlat
mov
xor
push
rcrb
aas
xchg
sbb
push
int
data16
add
sbb
add
lds
lea
lds
jecxz
add
dec
jb
lret
add
push
fmuls
call
or
inc
inc
cmc
cmpsl
cmc
js
test
adc
outsl
inc
add
sbb
iret
mov
incb
lds
dec
jle
dec
adc
or
and
or
push
xor
ja
xchg
imul
mov
xrelease
addb
mov
push
repz
mov
and
out
pop
xchg
jecxz
mov
out
inc
add
aam
or
push
inc
add
stos
push
clc
inc
add
or
push
add
hlt
sub
stos
lea
add
lods
jl
ljmp
push
and
add
xchg
sub
or
xchg
and
lahf
add
add
jmp
addb
mov
lahf
addl
ja
push
outsl
push
imulb
shll
clc
rolb
cmp
lret
daa
imul
push
insl
imul
add
out
push
mov
pushf
fadds
jns
aaa
bound
mov
les
sub
push
push
cltd
out
adc
test
jne
sub
test
push
adc
sub
cmp
add
inc
or
sub
das
int3
loopne
shrb
imul
cld
and
adc
mov
xchg
pop
aaa
lret
add
pop
or
shll
ljmp
sbb
sbb
fcom
aam
mov
sarb
pop
pop
sbb
adc
aas
cmp
jb
push
test
ds
mov
fwait
pop
mov
push
xchg
aam
cmpsl
add
pop
mov
jno
cmpsb
les
and
iret
push
inc
add
ret
pusha
add
out
mov
mov
jge
pop
sub
je
cmp
pop
movsb
mov
std
nop
push
jnp
pop
dec
jnp
jge
pop
jo
fiadds
push
and
inc
cwtd
cmp
sahf
pushf
movb
inc
add
fidivl
or
aas
pop
jnp
test
pop
fwait
mov
mov
add
loope
cmp
adc
jmp
test
test
xchg
or
jnp
mov
ja
push
push
or
xor
add
sbb
or
stos
test
push
in
dec
shr
mov
in
data16
add
test
shlb
aam
aaa
sub
popl
add
ret
aas
enter
int
add
cmpsb
mov
cmpsb
sub
dec
jge
aaa
addb
and
xor
xlat
cmpsl
movsb
lret
je
sub
sub
daa
sbb
aas
cmp
pusha
add
pop
imul
fistpll
add
add
adc
pop
loopne
xchg
stos
int
mov
cli
sub
dec
jbe
add
mov
xchg
lds
add
add
loopne
or
or
xor
add
xor
inc
jmp
or
fwait
dec
popa
sbb
mov
add
dec
mov
aad
add
movsb
shll
pushf
mov
pop
jns
packssdw
mov
dec
test
xchg
ret
push
add
iret
test
bound
fistpll
xchg
xchg
inc
cmpsl
mov
jl
xor
add
rorl
movb
cmc
mov
xor
add
cwtl
es
fcomps
pushf
inc
add
test
aam
fistpl
xor
jle
xor
lcall
pop
jge
gs
aad
fidivrl
add
add
pusha
add
xchg
mov
add
fcoml
shll
out
push
sahf
mov
fwait
out
negb
xor
aad
in
lret
xor
pop
in
shlb
inc
rclb
inc
shl
test
mov
push
ret
jne
push
inc
add
es
xor
cmp
fbstp
push
fwait
in
pop
xchg
inc
add
or
dec
mov
pushw
push
les
lahf
dec
mov
pop
data16
fnstcw
push
cmc
mov
cwtl
leave
dec
mov
fistpl
jg
into
lods
outsl
and
rcl
inc
add
stos
jl
gs
push
mov
xchg
ds
in
sub
adc
jl
inc
arpl
add
std
mov
mov
cwtl
ss
sbb
mov
rolb
cmp
es
in
imul
push
add
insl
je
or
sahf
in
push
ret
mov
outsb
dec
push
addb
pop
or
push
mov
xor
mov
out
adc
cmp
add
mov
pushf
xor
inc
dec
jge
pop
cwtl
dec
or
cmp
push
add
pop
mov
cmp
sahf
lahf
test
xchg
sub
insl
add
adc
jg
dec
dec
mov
dec
es
add
mov
scas
push
sub
popf
sub
addb
negl
test
fidivs
insl
pusha
add
rorl
adc
cmp
imul
sub
and
cld
jne
movb
leave
leave
mov
in
negl
add
lcall
ret
sub
sbb
outsl
sub
cmc
sub
mov
scas
xchg
pop
loop
adc
pushf
repnz
sbb
inc
adc
dec
pop
inc
add
jmp
imul
ja
in
inc
lods
daa
cmp
sub
and
ja
out
gs
mov
mov
insb
mov
gs
add
int3
push
pop
insl
ret
mov
inc
or
adc
fcmovne
out
add
in
insb
xchg
sub
add
sbb
lea
rolb
add
adc
mov
add
mov
dec
test
outsl
loopne
xor
pop
inc
bound
add
inc
add
sbb
pop
and
xchg
popa
or
push
loope
mov
mov
outsb
dec
sub
sbb
jbe
sbb
xchg
addb
das
js
sbb
push
add
nop
in
sub
mov
xchg
mov
test
jo
out
dec
aam
das
leave
fdivl
mov
inc
outsl
gs
das
lret
aam
loop
add
cld
call
mov
filds
jb
movsl
inc
mov
dec
hlt
in
in
mov
or
scas
nop
aas
dec
jecxz
cmp
adc
add
pop
cmpsb
leave
lret
dec
mov
xlat
mov
fidivs
adc
bound
rolb
adc
movb
dec
imul
lret
pop
movb
lds
push
loop
cwtl
pop
xchg
in
xor
mov
test
loope
call
xor
sub
jnp
fmuls
xchg
fstl
mov
popa
xchg
scas
sti
adc
sub
adc
cmpsb
mov
outsb
pop
addb
add
mov
push
inc
sub
cmp
sub
xchg
mov
inc
add
push
lahf
ret
popf
jo
add
inc
js
sub
push
aad
or
add
loope
scas
sub
lahf
xchg
xchg
and
mull
es
add
add
call
outsb
jno
fcomps
ret
mov
into
stos
sbb
and
adc
push
call
xchg
mov
in
icebp
dec
push
sbb
fdivl
loop
inc
pusha
add
adc
lods
nop
add
ret
cmpsb
push
insl
lea
fwait
or
leave
imul
xchg
xor
leave
fimuls
les
outsb
or
jge
out
out
add
sub
in
fadds
leave
out
inc
add
cmp
sti
push
cmp
mov
push
lods
lret
jo
rol
stc
repnz
das
cmp
jge
add
mov
sahf
in
add
push
add
leave
push
call
out
add
xchg
add
xchg
es
sbb
dec
pop
imul
mov
das
dec
test
push
je
mov
test
rorb
sbb
movsb
pop
lret
lods
sub
mov
inc
add
cmpsl
popf
and
insl
hlt
mov
add
pop
inc
jnp
in
clc
aad
mov
sbb
rcrb
sbb
push
add
add
cmpsb
test
repz
fcoml
sub
addb
dec
cld
fcmovne
push
fiaddl
lea
addl
addb
add
push
push
and
adc
test
xchg
addb
int3
add
add
outsb
pusha
add
fs
clc
mov
add
popa
or
sti
cld
xor
xchg
aas
nop
stos
cmp
ljmp
mov
jecxz
fmull
addb
pop
rolb
addr16
ja
or
xchg
xlat
sbb
mov
lcall
mov
enter
fbstp
pushf
imulb
int
scas
mov
shll
sbb
xor
sahf
out
out
pop
jl
pushf
outsb
push
pop
push
mov
cs
leave
shl
faddp
add
hlt
cmp
add
add
sub
repnz
lcall
add
je
inc
je
aas
ret
cli
sbb
mov
lahf
sub
add
scas
sbb
adc
icebp
xchg
outsb
mov
lcall
pusha
add
cli
repz
and
mov
cs
sub
loopne
stc
and
int
jp
add
gs
mov
add
es
or
xor
cmp
loop
jae
pop
inc
add
add
xchg
mov
push
pop
jl
xlat
xchg
jo
sbb
pop
xchg
mov
cs
js
rep
xor
sbb
mov
mov
mov
mov
pop
cwtl
ret
inc
scas
mov
mov
aaa
hlt
xchg
cld
inc
jae
dec
cmpsb
ja
mov
mov
dec
cmp
mov
xchg
addr16
imul
or
sub
dec
enter
adc
jl
mov
cmc
xor
std
xchg
ss
xlat
fmulp
test
bound
push
nop
bound
inc
add
jno
rolb
stos
scas
cltd
add
push
aam
sub
xor
push
xchg
pushw
mov
movsl
dec
hlt
push
push
les
xchg
xchg
sub
dec
cli
add
add
mov
jno
push
mov
mov
call
repnz
mov
out
shrl
daa
lahf
fdivrp
mov
iret
out
test
shll
mov
insb
int3
jmp
stos
add
inc
add
and
inc
add
add
stos
jecxz
add
es
push
shll
push
addb
sub
add
shll
rorl
push
xchg
jne
call
mov
cmp
movsb
add
in
push
mov
subl
fldl
xor
add
xor
push
ja,pt
stos
sti
sahf
xchg
sub
popf
xor
push
jmp
or
stos
ss
jns
outsl
xchg
adc
sub
add
rcrl
cli
xchg
and
addb
test
dec
mov
sub
add
mov
mov
in
enter
fbld
push
adc
cmc
pusha
add
movb
das
pop
lret
jbe
add
add
xchg
movsb
or
repnz
scas
lods
push
icebp
aad
add
jno
xor
popf
or
iret
movsb
mov
mov
dec
cmp
push
movsb
mov
cli
es
lcall
in
cmp
pop
aaa
xor
int
or
movb
sbb
outsb
pop
or
mov
mov
fistpll
mov
mov
shll
les
ret
jp
movb
mov
jmp
jbe
add
imul
add
not
repz
addb
ljmp
sar
lods
xor
leave
sub
ljmp
stc
mov
xor
sbb
rolb
sub
xchg
pushf
inc
je
in
inc
mov
lods
pop
roll
sub
push
add
test
dec
ret
pusha
add
ror
scas
testb
and
ss
jno
jge
cltd
orl
loopne
mov
scas
lcall
dec
sub
popf
sbb
in
add
sti
lcall
js
outsb
inc
subl
and
mov
clc
andl
imul
out
push
test
fs
add
and
xchg
add
cmp
lahf
xchg
sbb
test
xchg
mov
scas
cmp
pusha
add
sahf
sbb
mov
movb
negb
imul
shr
stos
call
cli
mov
xchg
jbe
add
inc
enter
hlt
push
insl
in
jbe
dec
daa
rolb
add
call
jns
add
dec
sbb
adc
data16
sbb
clc
adc
and
loop
and
xchg
ret
pop
je
add
jb
mov
add
xchg
hlt
xor
test
ss
lods
adc
adc
pop
imul
add
sti
and
jge
push
addb
sahf
leave
lods
jns
mov
rolb
lods
xlat
xor
lods
lret
test
addb
mov
rcr
sahf
arpl
js
xchg
jnp
add
and
lret
sub
adc
add
add
std
sahf
mov
xlat
int3
push
mov
shrl
stc
mov
data16
and
testl
test
loop
addb
shl
mov
adc
cmp
mov
mov
cmp
mov
jp
cwtl
pop
in
and
and
sub
pop
jns
and
cmpsl
and
gs
add
ficompl
pop
push
cmp
insl
fisubrl
rcl
shll
add
sub
into
and
bound
mov
rolb
or
loope
cmpsl
iret
aam
xchg
jge
pop
push
dec
shlb
cmc
cmp
pop
pop
fisubs
add
iret
inc
add
cmp
in
cmp
cmp
dec
lds
cmp
iret
inc
add
mov
pushl
jmp
mov
rol
add
lcall
bound
mov
lret
xor
dec
stos
int
push
popa
rolb
in
scas
add
mov
daa
adc
minps
jo
sbb
add
mov
ret
sbb
clc
mov
arpl
dec
cs
popa
xchg
aas
adc
mov
add
dec
mov
and
popf
insl
gs
test
push
fildll
inc
sahf
xchg
mov
mov
test
adc
call
je
cmpsb
lahf
adc
sub
jge
inc
adc
lret
lahf
outsl
dec
fldcw
ss
add
inc
fs
xor
add
add
cmp
push
pop
movb
mov
in
test
xchg
jmp
cwtl
mov
xchg
int
dec
inc
pop
je
cwtl
in
xor
add
inc
inc
jecxz
fldt
insb
scas
stos
bound
sbb
or
mov
arpl
out
and
pusha
add
jg
inc
add
setns
outsl
mov
pushf
cs
shll
lahf
rolb
scas
pushf
les
push
dec
ret
andl
add
daa
int
fs
xor
push
mov
mov
xchg
divb
sbb
scas
add
stos
js
push
jp
addb
out
outsb
ds
xchg
das
or
mov
or
add
fwait
shlb
mov
add
mov
das
xor
pop
sbb
add
aad
or
data16
jle
push
hlt
sbb
dec
dec
and
ret
data16
cltd
jo
jnp
xchg
fdivrs
xor
addb
sbb
aaa
sub
add
mov
and
jne
pop
and
sbb
iret
addb
jb
repz
ljmp
adc
jo
mov
add
adc
or
add
mov
cmp
mov
add
imul
mov
mov
push
lods
jle
test
sub
add
dec
aaa
sbb
mul
repnz
jae
add
fcomi
xchg
add
add
cltd
sarl
clc
dec
mov
mov
scas
add
sbbl
lock
iret
and
dec
jae
pop
into
push
enter
add
add
cmp
int3
mov
jg
out
sbb
cmpsb
lahf
mov
cmp
or
cmp
icebp
sub
mov
imul
out
and
mov
in
add
add
fsubr
push
sarb
es
xchg
xchg
pop
pop
fnsave
lods
dec
mov
stc
jns
lock
pop
in
adc
push
dec
add
mov
inc
je
add
push
mov
dec
xor
popf
mov
mov
test
push
or
jmp
xchg
push
ja
lret
inc
mov
mov
add
pop
push
das
inc
add
test
cmp
fisubrs
jns
lds
sbb
push
gs
adc
cmp
add
or
add
stc
and
out
vmptrld
hlt
add
push
add
sbb
out
mov
sub
add
inc
fildll
inc
add
aas
xchg
outsl
inc
add
out
dec
sbb
enter
dec
out
pusha
add
add
popa
and
jp
or
mov
cmpsb
mov
add
cmc
push
aas
lcall
add
in
rolb
inc
mov
icebp
push
and
add
push
or
inc
add
xchg
ja
hlt
pop
or
jg
addb
add
or
xchg
xchg
mov
lods
mov
or
inc
add
cli
rep
movsl
sbb
or
add
movsb
mov
cmp
loope
adc
int
add
aad
cmp
push
mov
add
out
cmpl
add
data16
out
and
sti
jp
adc
repz
sbb
mov
add
scas
cmp
mov
or
or
mov
mov
sub
in
mov
xchg
imul
add
mov
pop
mov
sub
int3
adc
jns
dec
loope
mov
mov
int
adc
mov
ja
add
jae
dec
popf
sbb
mov
xor
xchg
lds
enter
pusha
add
add
xchg
add
dec
lahf
jbe
sbb
punpckldq
cmp
movsl
imul
cld
fisttpl
mov
and
ret
mul
addb
xchg
or
imul
jbe
out
pop
adc
scas
inc
into
mov
adc
sub
add
xor
popf
pop
xchg
adc
mov
pop
push
outsb
rcll
mov
int3
ret
or
neg
aam
jg
add
addb
mov
lds
add
add
cmp
and
xlat
repnz
addb
loopne
mov
je
int
add
jecxz
jle
movsl
mov
imul
les
pop
cwtl
inc
repnz
jb
test
rolb
shr
and
lahf
inc
add
add
jl
cmp
xchg
cmp
movsb
dec
add
test
xchg
ja
xchg
add
je
popa
test
loopne
jne
add
mov
adc
pop
and
imul
mov
pop
into
sahf
js
add
das
mov
lods
mov
or
cmpsl
adc
stos
call
int
jns
nop
push
lock
mov
xchg
adc
inc
add
addr16
add
lret
add
fdivs
lcall
push
daa
and
addb
das
sub
aam
mov
mull
insl
shll
shrl
add
inc
mov
add
cmp
repz
push
add
addb
ja
add
xorl
push
push
ja
mov
cmpsb
jnp
fists
in
add
imul
mov
push
jne
cli
popa
test
lods
icebp
fldenv
jno
mov
xchg
cmpsl
in
mov
mov
sub
mov
add
aam
adc
add
ret
rolb
lret
or
cmpsl
pop
cmp
mov
add
cmpsb
pop
xor
leave
xor
push
mov
lods
sub
stos
adc
mov
nop
sub
adc
int3
add
xchg
add
aas
lods
pop
int
add
add
mov
mov
jno
in
fucomip
mov
addr16
mov
outsb
in
inc
add
bsf
lret
clc
mov
jno
mov
push
dec
popf
jg
lock
xchg
jge
add
pusha
add
bound
fwait
sbb
dec
in
or
sbb
dec
lods
hlt
in
lock
or
sub
scas
and
aad
push
lcall
adc
jns
mov
scas
pusha
add
jno
lock
sub
aam
sub
cli
int
push
cmpsb
imul
stos
fldt
cmp
aad
push
jae
mov
add
jns
xor
add
fnstenv
enter
popa
and
out
js
daa
test
and
jne
dec
sub
add
push
test
in
mov
add
je
lods
ret
leave
leave
in
cli
xorl
add
outsl
in
or
arpl
addb
jmp
jo
push
inc
jbe
jne
push
lods
ret
pushf
mov
add
dec
push
jge
pop
aam
shl
jb
xchg
cmp
or
mov
scas
sbbl
sbb
cmp
push
jmp
jp
push
addb
push
mov
mov
movb
pushf
add
ret
or
add
jbe
pop
jnp
pop
pop
mov
add
xor
imul
pop
xchg
scas
inc
add
sbb
xchg
icebp
push
dec
pushf
jnp
push
leave
inc
test
mov
in
add
hlt
pop
stc
cmpsb
cmp
movsl
ja
and
and
addb
cmpsl
into
incb
or
mov
add
lds
rolb
test
inc
add
popa
test
repnz
push
and
les
push
mov
push
orl
addr16
dec
adc
adc
add
js
js
sarb
or
adc
cli
inc
jne
int3
arpl
adc
addb
pop
xchg
lcall
icebp
add
jae
cmp
mov
mov
and
push
loop
shll
mov
xchg
add
out
jne
mov
mov
mov
cmp
dec
in
xlat
inc
add
jecxz
jle
dec
or
test
jg
lods
rorl
loopne
xchg
sahf
aas
xchg
test
out
sub
add
xchg
jns
pop
jno
and
lea
sbbl
mov
je
push
add
xorl
repz
mov
in
int
sbb
mov
fucomp
push
add
sbb
mov
inc
add
jae
rcrl
out
fstl
pop
add
jns
add
adc
xor
in
and
aaa
sub
dec
movb
out
and
test
push
lods
addb
push
push
std
out
stos
mov
pop
add
sbb
cmp
add
stos
jno
xchg
sub
sub
sub
mov
out
mov
add
pushf
outsb
sbb
je
push
sub
pop
les
jle
mov
pop
push
popf
adc
decl
out
stos
and
jae
iret
xor
iret
std
xchg
or
or
dec
cltd
dec
sub
sub
and
push
movsl
mov
jmp
sbb
leave
xor
sti
repz
xchg
cmp
sub
add
add
jg
in
pop
rolb
jnp
add
enter
pop
mov
xchg
dec
mov
loop
ljmp
mov
sub
mov
sub
jno
js
lea
push
rolb
fs
add
cmp
fsub
xchg
loopne
imul
or
add
add
leave
lcall
mov
imul
fsubl
add
inc
add
add
or
enter
mov
xor
pushf
dec
cmp
add
jne
inc
add
add
add
dec
fiadds
xchg
or
push
rcll
adc
adc
pop
or
shrl
pop
push
add
and
and
dec
xrelease
xchg
addb
lods
pop
push
or
add
xchg
pop
repz
negb
arpl
pop
fyl2x
pop
dec
je
inc
add
lret
mov
inc
add
cmp
das
addb
jmp
pop
out
out
leave
ret
cmp
loope
and
mov
test
push
push
inc
call
mov
dec
xchg
aad
lcall
test
shll
ds
je
jp
mov
or
or
cmp
cmp
add
add
push
adc
mov
call
inc
imul
xchg
dec
in
outsb
dec
add
in
or
cmp
ffree
add
ds
lea
push
jp
add
pusha
add
sub
loopne
add
add
mov
mov
jo
ret
loop
xchg
mov
out
xchg
mov
insl
cmpsl
lods
jae
jno
imul
mov
add
cmp
lahf
add
mov
xor
lds
dec
and
les
dec
add
in
lods
mov
addb
stc
out
xor
filds
add
or
mov
inc
add
addb
pop
test
fsts
cwtl
fadd
fnsave
pop
mov
mulb
daa
push
or
add
mov
cmp
bound
cmpl
sub
addb
mov
mov
xchg
js
xor
add
adc
shrb
cmp
push
jbe
cmc
mov
or
in
loope
add
mov
xchg
rolb
movb
add
incb
add
fmulp
push
dec
jns
loop
fadds
xchg
push
cmp
cwtl
outsl
push
add
mov
fnsave
lea
stos
mov
jae
pop
aaa
mov
sbb
ds
add
xchg
repnz
pop
add
mov
fists
lret
insl
mov
fwait
test
shlb
add
stos
scas
pop
and
je
cmp
iret
data16
xchg
aaa
cmc
sub
bound
push
cmpsl
insl
jecxz
adc
addb
je
scas
jle
lret
adc
ja
add
push
add
xor
sahf
mov
nop
mov
mov
add
adc
mov
les
xor
add
xor
nop
pop
jl
pop
mov
dec
xchg
sbbl
add
sarl
fsubrl
push
cltd
jmp
int3
dec
jecxz
sub
add
jnp
imul
add
add
cmp
fcoml
leave
mov
mov
mov
sbb
pop
cmp
xor
add
decl
sub
mov
pop
dec
mov
nop
add
inc
cmpl
jnp
inc
jno
sub
cltd
enter
add
add
xor
inc
lcall
stos
dec
add
adc
dec
adc
jns
push
ret
add
addb
and
sbb
push
mov
call
xchg
pop
pop
inc
add
arpl
add
lods
sbb
pop
out
cmp
sbb
mov
in
adc
add
pop
sar
add
fstpl
xchg
sete
outsl
frstor
mov
loop
decw
scas
lea
cmp
push
and
or
mov
adc
xor
cmp
movb
ret
int3
adc
push
sbb
cmp
fmul
sbb
popf
mov
scas
cld
push
sahf
fyl2xp1
inc
add
shlb
add
sbb
das
cmp
xor
jmp
push
mov
and
stos
cmp
les
push
sub
mov
cltd
xchg
xor
jl
cmpsb
test
repnz
dec
mov
ss
je
ss
add
dec
hlt
std
dec
lods
mov
add
xor
out
mov
add
rcl
adc
fldcw
cmp
mulb
out
inc
add
add
pusha
add
cmc
sub
in
dec
adc
pop
insb
xchg
adc
cwtl
enter
mov
xchg
sbb
bound
cmp
ja
lods
jecxz
add
cli
sbb
push
in
outsl
and
imul
arpl
pop
jno
imul
mov
push
push
ret
sub
add
rolb
sbb
mov
inc
add
pop
fisttpl
pusha
add
bound
add
dec
mov
mov
xchg
inc
popf
jno
imull
repnz
jg
cwtl
aad
inc
push
je
fstp
hlt
inc
add
and
fwait
imul
pop
mov
rorl
xchg
inc
add
cmc
les
and
and
xchg
mov
or
dec
fwait
inc
lds
aaa
jmp
test
lcall
cmp
aaa
cld
and
cld
addb
push
xchg
inc
inc
rolb
cmp
adc
add
mov
xchg
xor
or
popf
out
pop
sub
call
fimull
add
je
and
repnz
add
add
iret
push
cmp
sub
out
adc
rcl
in
jmp
mov
add
jo
bound
or
mov
cld
add
lret
mov
sbb
and
jo
mov
and
inc
add
sbb
add
arpl
mov
cmp
mov
add
fxch
ja
js
xor
jo
mov
addb
icebp
dec
xorl
adc
in
negb
or
add
fcomps
lcall
add
and
hlt
bound
dec
ss
push
sbb
cli
pop
xchg
test
push
or
fcmove
xchg
jecxz
bound
cmp
addr16
lahf
xor
ljmp
mov
sub
push
xor
scas
mov
cmp
mov
jno
sbb
push
cs
mov
push
add
iret
fbstp
xor
xor
dec
push
test
es
cmc
popl
pop
addb
cmp
xchg
cwtl
xor
loope
imul
add
jmp
mov
ret
inc
add
popf
pop
jle
cwtl
push
loope
mov
daa
sahf
cmp
add
ds
pusha
add
mov
pop
or
xchg
mov
lea
push
aaa
adc
push
mov
mov
mov
dec
outsl
int3
pop
cmp
repz
mov
movsl
mov
out
repz
lods
push
add
xlat
cmp
sahf
or
in
jge
mov
into
aad
pop
mov
insl
inc
add
mov
xor
mov
lahf
cmp
shlb
dec
jl
into
out
sub
mov
stos
out
sub
out
jns
les
add
lcall
sub
lahf
lahf
fnstsw
mov
out
sbb
ja
mov
jmp
lds
lret
xor
jle
and
repnz
in
adc
subl
pop
xor
pop
scas
mov
hlt
xlat
sarl
addb
lret
mov
xchg
cs
push
cld
shll
icebp
test
push
scas
pop
pusha
add
stos
ret
popa
lods
jle
lods
push
pop
fscale
and
daa
sbb
int3
out
stc
cmp
add
add
inc
fwait
mov
test
addb
repz
test
aad
jecxz
mov
int3
sub
inc
jecxz
push
lret
out
sahf
sub
inc
ret
mov
add
test
jg
aas
stos
mov
gs
jle
popa
test
leave
ja
movb
add
inc
add
add
std
adc
aad
add
in
gs
or
addb
arpl
mov
outsl
stos
mov
pusha
add
push
push
rolb
mov
lods
ljmp
mov
shrb
loopne,pt
push
xor
push
cltd
orl
mov
push
add
add
mov
mov
pop
rcrl
mov
sub
sbb
mov
fs
fucomp
outsl
dec
gs
test
cvtps2pd
xor
ret
push
addb
add
ja
int3
cmpsb
xchg
xchg
lea
add
ds
test
adc
fsts
outsl
adc
add
arpl
rolb
icebp
lret
loop
rolb
or
add
dec
inc
add
mov
mov
lahf
insl
inc
add
ja
jbe
xchg
dec
hlt
cmp
leave
dec
test
or
add
addb
push
pop
dec
icebp
jge
aam
push
pinsrw
shlb
pushf
icebp
mov
add
and
call
xor
sub
stos
mov
xchg
clc
jnp
mov
sti
out
iret
sub
inc
add
jp
sub
pop
sbb
xchg
sbb
pop
lods
nop
or
aas
lret
test
and
mov
adc
mov
add
sahf
lods
pop
bound
movsb
mov
push
dec
add
outsb
out
push
jnp
int
add
and
leave
sti
orl
inc
add
inc
add
mov
mov
addr16
loopne
pop
fs
inc
add
cmp
std
push
fcomps
jp
inc
xchg
ja
push
lcall
fistpll
loopne
cli
push
loopne
jb
add
add
fidivrs
pop
mov
mov
nop
sbb
inc
push
mov
mov
push
popf
jg
add
hlt
iret
push
xorl
andl
sbb
dec
inc
jmp
pop
aas
cmp
mov
gs
xchg
add
test
jecxz
mov
mov
mov
adc
mov
push
sub
inc
cmc
clc
mov
push
mov
add
clc
sti
pop
fdivrl
data16
out
push
cmp
outsb
lods
sbb
push
cwtl
mov
push
in
scas
or
jmp
sub
lret
xchg
lret
pop
add
jecxz
jbe
cmp
ret
inc
add
les
jmp
outsl
cld
pop
in
es
les
sub
inc
add
inc
aam
repnz
mov
insb
xchg
sub
insb
fimuls
push
pop
fwait
cmp
les
test
cs
into
jns
sub
out
gs
addb
and
pop
hlt
xchg
mov
imul
add
pop
push
in
sbbl
pop
dec
popf
jecxz
sub
cmc
dec
sarl
inc
add
jae
and
iret
repz
mov
push
pop
int3
in
pop
push
xchg
gs
in
fidivl
push
jb
add
or
shrb
rcll
jnp
lds
xchg
mov
fisttps
add
movb
or
sbb
test
lcall
lcall
add
fistl
repz
xor
movb
popa
mov
add
mov
adc
addr16
iret
shlb
jnp
xor
jge
in
sarb
das
aad
sbb
popl
dec
pop
fs
mov
sub
sub
les
cmp
flds
fadds
stos
data16
mov
adc
sub
sti
cmp
out
push
and
addb
mov
dec
ret
sub
imul
cld
mov
outsb
cltd
inc
or
jae
inc
hlt
sub
add
sbb
add
mov
or
dec
pop
inc
dec
adc
or
add
push
push
rolb
add
adc
jo
cmp
in
lods
cs
ds
imul
xor
xor
jbe
sbb
jns
addb
pop
gs
fistps
jns
jae
or
pop
pop
clc
sub
jns
adc
cmpl
pop
jbe
add
or
push
imul
mov
mov
cmp
imul
mov
pop
jg
sbb
ja
ja
xor
popa
outsl
sbb
push
into
popa
add
leave
xchg
mov
sar
iret
cltd
jnp
pushl
stos
cmpsl
iret
jne
push
stos
xchg
dec
dec
push
inc
add
pop
xchg
pop
ret
in
mov
pushf
sbb
insb
jle
sbb
push
push
jns
aas
sahf
fistpl
jae
fcmovb
mov
loopne
add
and
add
add
mov
add
dec
les
int3
dec
lds
loopne
xchg
jo
dec
int
test
leave
or
push
loopne
int3
rcrl
fadds
add
xchg
inc
add
shrb
add
decl
test
outsb
lea
jmp
add
jle
and
pop
int
xchg
ret
add
fidivrs
insl
rolb
leave
and
add
imul
cwtl
in
sub
xchg
or
add
movsl
lock
xor
add
xor
sub
add
sahf
repnz
mov
push
adc
sbbl
jle
gs
lret
inc
dec
inc
dec
xor
jg
ret
lahf
cmp
xor
xchg
adc
mov
or
out
pop
sub
sbb
xor
push
out
lcall
push
add
mov
lea
push
push
pop
mov
and
movsl
call
push
sbb
outsb
fscale
leave
mov
fs
add
sub
push
cld
ret
addr16
add
lea
push
aad
mov
bound
cld
push
mov
add
imul
lcall
inc
and
call
add
in
js
mov
nop
xchg
enter
imul
pusha
add
into
fidivrl
popa
inc
add
lods
push
mov
iret
test
mov
ret
popf
pop
sub
xchg
xchg
jne
outsl
sub
jp
push
roll
imul
push
int
movsl
or
insb
xchg
ds
sbb
mov
mov
test
hlt
sub
and
jmp
es
popf
sbb
push
filds
faddl
pop
add
jl
add
test
cwtl
jp
or
sbb
fsubrl
dec
mov
mov
add
xor
fmulp
xchg
addr16
add
mov
adc
mov
inc
fneni(8087
jg
popa
xchg
fldenv
add
and
jle
enter
popf
xlat
sbb
dec
push
jle
cltd
mov
pop
or
push
repnz
or
xchg
mov
jp
xor
hlt
aaa
mov
loop
sbb
mov
add
cld
sbb
pop
test
mov
fs
push
or
mov
jne
adc
loop
mov
and
sub
cmp
inc
add
data16
xchg
dec
jnp
inc
add
fwait
xchg
out
addb
sbb
pop
mov
dec
jl
aad
or
mov
into
add
sbb
adc
in
outsb
test
push
add
adc
clc
add
cmp
fsts
pop
or
inc
pop
cmpsb
outsl
adc
jb
cmp
xchg
imul
inc
ds
hlt
das
push
mov
enter
es
push
and
adc
push
add
mov
xlat
popl
add
rcll
xchg
jge
ds
pop
clc
lock
xchg
inc
add
pop
jno
clc
cmp
int
push
mov
dec
je
mov
inc
add
sub
mov
outsb
pop
fcmovnu
xchg
push
repz
mov
lret
add
jmp
xchg
adc
add
dec
pop
scas
jo
jge
leave
sbb
and
clc
cmp
cmp
loopne
and
rcl
mov
fdivr
jecxz
cmp
lods
sbb
aas
loopne
xchg
mov
inc
add
sbb
mov
mov
out
sbb
sbb
sbb
add
inc
add
add
rcr
lods
pop
leave
cmp
shlb
int3
jle,pn
fistpll
xchg
fadds
ss
xchg
mov
cli
ljmp
dec
dec
leave
fcomip
jb
mov
add
pop
lret
sbbl
je
mov
inc
add
fnstcw
push
mov
mov
add
mov
shl
mov
xchg
mov
lods
lahf
adcl
xchg
negb
jp
xchg
outsl
imull
mov
jecxz
addr16
cs
jecxz
jnp
add
ja
stos
aam
scas
stos
pop
push
call
dec
mov
cs
outsl
in
inc
or
mov
les
jae
aam
add
clc
je
and
xlat
and
negl
cld
call
cmpsl
sbb
sahf
pop
out
pop
ret
inc
add
sti
movsb
xchg
jecxz
sbb
cmpsb
and
notl
inc
add
xchg
dec
test
pushl
js
jp
adc
pushf
or
fdivrl
scas
pop
neg
mov
pop
mov
rcrb
cmp
pushf
xor
xchg
push
insb
ljmp
mov
xchg
or
js
addb
push
mov
and
cmp
add
mov
into
cmpl
rorl
imul
loop
or
popl
insl
lods
sbb
bound
inc
mov
mov
cltd
int3
leave
cmp
adc
dec
cmp
fwait
mov
lea
inc
add
dec
xor
add
into
cmp
sub
aad
fcmovne
sbb
add
mov
push
push
lret
adc
dec
fmull
mov
repnz
addb
pop
cli
popf
xchg
push
aad
xor
cmp
adc
cld
test
in
mov
addr16
sbb
test
sbbl
mov
and
pop
in
mov
int
lahf
or
xchg
xchg
add
imul
push
and
imul
sub
add
lret
mov
addl
add
movsl
out
xchg
inc
stc
fldcw
imul
lret
out
add
jp
push
push
daa
mov
and
pop
imul
cwtl
cwtl
mov
xor
mov
gs
inc
jg
mov
repnz
negl
movsb
cltd
bound
push
lahf
jns
add
movsl
push
arpl
ja
xor
add
lods
and
dec
fsubrl
inc
fldl
cld
daa
daa
iret
add
aam
ret
and
add
xchg
movsl
mov
rsm
mov
addb
popa
lods
lcall
int
xlat
adc
mulb
adc
add
push
fidivrl
mov
jmp
pop
inc
xchg
xchg
outsl
add
dec
lock
mov
jmp
in
jb
in
and
dec
push
jae
sub
ficoms
add
xchg
lods
arpl
push
scas
xor
xlat
jno
jnp
cmp
mov
pop
outsl
cmp
adc
fsts
cmp
cmpl
fbstp
inc
add
int
xor
outsl
push
add
out
pop
pop
jo
add
mov
aam
shll
dec
int
add
lods
mov
sbbl
inc
add
jg
mov
movsb
adc
mov
xor
add
scas
add
push
lret
push
add
test
add
or
add
enter
repz
fadds
leave
mov
add
add
pop
and
lret
add
mov
mov
push
aaa
lea
in
lods
xlat
mov
mulps
push
mov
frstor
push
push
xor
ret
push
les
jg
es
mov
push
push
adc
sbb
ret
add
icebp
push
adc
add
adc
or
pop
in
pop
iret
test
jmp
aas
sub
out
pop
push
ja
xor
jmp
fs
sbb
sub
jg
neg
push
fists
push
shl
push
mov
mov
cmp
in
add
mov
mov
jp
add
add
add
xchg
adc
shlb
adc
sub
fisubrl
popl
inc
add
sahf
movb
push
scas
pop
lahf
xchg
shl
in
inc
movsb
outsl
fsubr
bound
mov
in
pop
cmp
das
movsl
inc
add
add
add
or
in
and
outsl
popa
mov
ret
fisttps
inc
add
sbb
push
repz
dec
jno
fs
mov
jecxz
es
mov
xor
pop
fildll
imul
ficoms
push
xor
jle
push
xor
or
fsubrs
xlat
fdivrs
out
sbb
pusha
add
lods
out
add
cmp
inc
add
divb
insl
and
add
negl
pop
nopl
ja
popl
aad
imul
jo
shrl
sub
add
push
mov
add
bound
pushf
adc
test
dec
sbb
xchg
icebp
pop
les
div
adc
xor
pusha
add
stos
fstp
mov
dec
add
mov
xchg
push
mov
fwait
out
pop
in
mov
add
imul
sub
das
bound
push
xchg
sub
das
mov
adc
aam
ret
inc
cld
leave
sub
pop
sbbl
lea
adc
mov
push
gs
cld
xor
ljmp
xchg
push
pop
adc
rclb
or
ss
add
mov
push
rorl
xchg
fwait
cli
scas
rolb
mov
addb
and
test
movsl
or
hlt
pop
xchg
popf
loope
pop
or
dec
dec
pop
es
xor
push
push
or
stos
push
in
jmp
inc
clc
in
cmpsb
stos
push
lods
out
call
dec
push
xor
aad
into
ficoms
stos
iret
and
lcall
dec
std
inc
add
add
xor
add
sarb
clc
ret
push
pushf
jns
adc
test
jno
add
xchg
jmp
mov
je
fistl
in
inc
add
ficompl
jle
dec
sarb
in
sbb
mov
add
das
negl
shlb
arpl
jne
mov
hlt
imul
jmp
shl
mov
push
cmp
mov
ret
dec
ds
into
imul
xor
jae
test
mov
loopne
mov
hlt
cmp
orps
push
add
in
test
add
adc
iret
mov
or
jns
in
add
loopne
add
push
add
push
divb
bound
into
test
xchg
dec
pop
pop
lcall
into
rolb
lock
lds
nop
xor
add
xchg
mov
iret
call
sbb
pop
js
pop
mov
sub
cltd
imul
shll
imul
sbb
mov
jmp
aad
pop
addb
mov
popa
daa
pushl
imul
dec
adc
mov
cmp
lods
push
out
or
jmp
repnz
scas
insb
lods
mov
outsb
add
mov
movsl
dec
movsl
xchg
adc
lods
dec
push
iret
hlt
jg
dec
lea
orl
add
jmp
lods
ss
jmp
mov
inc
call
popf
add
les
mov
inc
mov
outsb
inc
add
and
nop
mov
movsl
mov
pop
push
add
xchg
mov
dec
cwtl
pop
enter
jp
mov
inc
cs
add
pushf
loope
les
inc
js
and
sbb
sbb
cmp
fwait
adc
pop
gs
and
sub
add
jb
jge
jae
pop
sub
pop
push
add
mov
sbb
addr16
inc
repz
push
xchg
adc
mov
mov
lret
nop
mov
dec
jnp
imul
add
ljmp
and
std
dec
sub
sbb
mov
pushf
leave
outsl
insl
mov
decl
je
dec
ret
and
xchg
les
hlt
push
push
xor
mov
inc
pushf
adc
pushf
movsl
jns
fsubrs
cld
shll
xor
arpl
sbb
lea
imul
hlt
fidivs
sub
mov
sub
pop
jnp
fwait
stos
jbe
add
jle
call
inc
add
test
addb
mov
or
out
add
repz
rolb
inc
add
les
add
push
add
sub
inc
add
leave
or
popf
aas
sub
inc
out
in
stos
xchg
xchg
or
adc
xchg
js
les
bound
dec
cmpsb
mov
push
inc
pushf
and
scas
or
pop
pop
and
inc
cmp
out
xor
sbb
xchg
stc
or
push
out
fldenv
mov
mov
mov
fcmovb
les
sub
mov
fbstp
ds
movb
cmpsl
sbb
and
mov
mov
ljmp
mov
mov
hlt
mov
mov
dec
jns
test
mov
xchg
stos
movsl
sub
xchg
xchg
and
in
jns
jnp
fldl
test
js
xor
or
mov
sub
mov
leave
cwtl
fcomi
notl
mov
jecxz
dec
add
das
push
clc
cmp
cwtl
idivl
dec
out
pop
mov
jge
add
cvtps2pi
notl
negl
sub
and
inc
push
cmp
add
xor
rclb
add
mov
dec
jb
xor
test
ss
pusha
add
arpl
test
gs
lahf
mov
fbstp
pusha
add
popf
or
addb
push
jge
bound
ja
mov
iret
test
leave
mov
push
jge
sub
sub
pop
lcall
or
imul
cltd
jo
and
add
add
arpl
jecxz
out
je
mov
mov
sub
stos
pop
xor
sub
push
aas
imul
adc
pop
add
sbb
add
mov
into
mov
add
or
adc
push
dec
sti
jge
jae
lds
cmpsl
adcl
mov
jmp
mov
jbe
cli
fsubr
sbb
outsl
shll
xchg
jo
daa
jne
push
sbb
movb
outsb
adc
push
fdivrs
pop
lret
cmp
and
mov
jecxz
fstl
and
ja
int
inc
cs
add
js
push
ret
jl
add
cmp
loopne
pop
mov
add
imul
xchg
leave
pop
push
jl
add
lods
mov
jo
add
sahf
insb
sbb
das
jle
sub
mov
icebp
ja
push
add
sbb
xchg
push
insl
bound
ficompl
mov
push
xchg
sub
in
iret
lock
pop
inc
add
lret
inc
add
sbb
repz
data16
jp
loopne
lret
pusha
add
add
pop
push
add
push
add
test
xchg
in
es
push
movb
and
and
js
mov
inc
add
pop
push
xor
jne
cs
scas
and
out
fsubp
nop
or
movsl
es
mov
rorb
adc
mov
push
mov
add
cli
cmpsb
xor
push
jno
movsl
cld
mov
jb
xchg
xchg
mov
jl
xor
xor
out
cmovbe
lcall
ljmp
push
add
cmpsb
jmp
add
inc
hlt
cmp
xlat
fsub
fsts
mov
out
inc
adc
repnz
mov
push
xchg
adc
mov
movsb
mov
mov
sub
mov
add
aam
jge
mov
mov
add
xchg
repz
cwtl
icebp
pop
insl
xor
mov
add
dec
nop
xchg
push
add
dec
push
lock
mov
xchg
inc
cld
adc
push
loope
sbb
add
nop
xchg
imulb
add
addb
loop
arpl
or
lret
fdivs
das
push
pop
cmpsl
or
mov
addb
xor
jge
fs
xchg
xor
or
hlt
aaa
and
pop
jp
movb
fbstp
push
add
xchg
jno
jo
add
rol
fdivl
pushf
adc
mov
mov
outsb
stos
dec
xor
jno
xchg
data16
aad
repnz
fidivrs
test
les
fidivs
jb
dec
jle
stc
addl
push
add
adc
shll
lds
add
jl
xor
push
add
mov
rolb
sub
mov
icebp
adc
or
into
ss
pop
mov
add
add
pop
lods
xor
mov
and
add
js
fwait
scas
dec
lods
or
xchg
fwait
mov
pusha
add
outsl
hlt
and
test
call
mov
add
sarb
xor
mov
lock
dec
sahf
push
dec
pop
dec
idivb
fildl
sub
ljmp
adc
and
addr16
ljmp
and
addb
mov
roll
hlt
hlt
and
mov
mov
push
and
movb
add
cs
mov
loopne
jne
stc
pushf
jge
mov
jnp
lret
and
jb
aaa
mov
push
dec
sub
mov
sbb
int3
jb
add
aad
xchg
shrb
icebp
je
pop
inc
add
loope
mov
jle
ret
imull
xchg
inc
add
push
add
int3
movsb
insl
jl
rclb
mov
add
and
or
jno
push
outsb
mov
mov
fisubl
mov
rolb
out
aaa
push
pop
dec
sbb
stos
idivl
test
sub
push
test
lcall
jae
sahf
mov
cmp
loop
push
mov
push
or
out
inc
test
sbb
jae
pusha
add
out
fisubl
xor
in
repnz
xchg
out
mov
push
addr16
sub
and
or
jge
ja
xor
je
data16
xchg
movsb
dec
mov
les
pop
push
fmull
cmp
xchg
stc
jl
mov
stos
inc
adc
pop
push
cltd
cmp
jge
pop
dec
pop
mov
cli
add
addr16
dec
jl
or
mov
cmc
adc
jge
mov
mov
add
dec
lds
sbb
fstps
outsl
out
ss
popf
adc
push
pop
faddl
jbe
cmp
xchg
xor
add
sbb
jecxz
stos
sub
mov
and
lcall
mov
jmp
test
xor
into
cld
iret
and
fs
sbb
mov
add
xchg
mov
data16
fsubl
jae
push
int3
stc
movsl
xchg
repz
cmc
xchg
jmp
add
aad
and
imul
and
inc
add
pusha
add
lds
xor
adc
add
in
cmp
ficompl
stos
ret
add
scas
inc
movzwl
mov
sbb
jmp
ret
mov
jp
popf
iret
clc
dec
sbb
and
or
shl
loopne
test
enter
int3
push
and
jmp
int3
pop
inc
add
or
add
inc
loopne
scas
add
and
push
add
cmp
and
adc
pop
aam
inc
add
insb
xor
add
pop
mov
repz
add
xchg
addb
cmp
clc
or
mov
adc
add
test
stc
fbstp
test
lahf
ja
xor
mov
jbe
sbb
lods
or
dec
enter
mov
mov
ljmp
cmp
mov
and
or
xchg
adc
in
inc
add
bswap
dec
adc
outsl
data16
mov
rolb
pop
add
add
inc
add
fldenv
scas
pushf
pop
jl
hlt
enter
sbb
nop
in
test
lahf
jae
aad
add
adc
pop
leave
movsb
test
xchg
xchg
in
test
outsl
xchg
test
outsb
movb
xchg
bound
or
or
xor
jg
out
test
std
inc
xchg
movsb
or
and
and
hlt
mov
popa
mov
sbb
call
xchg
in
int3
jno
add
inc
add
add
xor
aas
fnsetpm(287
xchg
dec
stos
sub
sarl
dec
inc
lea
adc
inc
add
out
mov
mov
ljmp
fs
jg
push
enter
add
xchg
cmpsb
data16
jns
push
mov
add
test
sahf
std
incl
add
or
sbb
fsubrs
insb
leave
push
add
pop
cld
pop
jp
jne
mov
nop
loop
cmp
add
push
orl
and
push
xor
stos
bound
inc
add
popf
pop
out
lcall
lcall
dec
mov
out
mov
fimuls
and
cs
rcrl
clc
pop
dec
loop
or
sub
fimuls
inc
add
loope
fsts
jbe
test
add
add
lcall
jb
sbb
pusha
add
mov
or
dec
hlt
sub
add
mov
add
es
inc
add
mov
or
aaa
jns
push
push
and
xchg
cmp
mov
sub
xor
call
pop
xchg
add
add
jo
pop
aad
push
lods
pop
addb
add
inc
dec
or
sbbl
dec
je
mov
adc
aas
rcll
pop
fs
dec
adc
inc
add
adc
in
aad
cli
int3
ljmp
xor
mov
loope
add
aam
and
stc
sub
movb
xchg
lcall
subl
add
imul
fnsave
xor
lea
sub
dec
and
push
mov
push
in
sti
orl
and
add
mov
mov
and
jmp
daa
fcmovb
add
lcall
xchg
add
mov
push
push
mov
sbb
push
pop
arpl
jg
mov
add
add
mov
sub
ds
ret
pop
and
ss
mov
sbb
outsb
adc
jbe
add
cmc
int
inc
fs
cmp
push
sub
imul
jge
setne
xchg
in
add
add
or
adc
sti
divl
add
jle
jnp
es
shll
loope
dec
mov
nop
sub
xorl
sbb
ficoms
dec
mov
adc
pop
test
pop
es
xchg
adc
xchg
mov
dec
xchg
sti
ror
adc
movb
add
outsb
inc
add
bound
sub
xlat
rolb
ret
mov
add
test
pop
aaa
add
cmp
test
inc
sbb
leave
into
mov
add
ljmp
leave
inc
add
cwtl
out
add
xchg
enter
in
in
pop
lret
out
pop
outsb
notl
sub
or
insl
sbb
addr16
dec
mov
jne
jnp
data16
xchg
fcoms
sbb
gs
fldenv
sub
call
aad
sub
add
xchg
cmp
nop
int
mov
sbb
mov
add
rolb
push
sbb
add
neg
add
sub
clc
push
push
in
push
daa
push
addb
test
jge
mov
out
cmp
jae
aaa
fisubrl
push
insl
cli
adc
outsl
add
loopne
mov
adc
push
adc
mov
jnp
loope
popl
jbe
ret
popa
mov
push
pop
fs
dec
bound
pusha
add
in
clc
test
jge
out
popa
aaa
sbb
dec
test
lock
arpl
jo
orl
add
add
jnp
inc
add
push
mov
addb
xchg
dec
jo
loope
mov
add
shll
test
sub
outsl
xor
das
and
dec
sub
xlat
inc
add
mov
fdivrl
inc
add
mov
insb
aaa
xor
inc
inc
iret
xchg
xor
pusha
add
stc
pop
in
imul
add
jnp
test
lock
and
movsl
in
int3
push
or
add
outsb
gs
push
push
push
test
bound
cmc
gs
or
rorl
inc
add
inc
add
pushf
add
icebp
add
push
or
ret
jnp
lahf
mov
movb
add
cmp
cmp
jg
movsb
push
jl
aaa
sahf
push
pop
mov
iret
lds
fstps
ffree
repnz
add
add
push
in
pop
bnd
adc
xchg
jo
dec
and
inc
cmpsb
in
mov
scas
jno
push
add
test
cmpsb
inc
add
jne
mov
add
dec
sub
inc
add
movsl
jns
fidivs
inc
jmp
add
or
pop
addb
arpl
jno
add
fisttpl
sub
fsubs
jl
or
inc
pushfw
pop
jo
aaa
enter
mov
sub
lea
mov
sbb
movb
inc
rorb
mov
add
push
add
xchg
into
pop
cmp
mov
mov
add
sbb
ljmp
jg
pop
push
ja
daa
cmp
cli
mov
push
cmc
out
adc
data16
imulb
ja
and
les
decl
fstp
push
outsb
and
mov
mov
addb
int
xchg
punpckhbw
mov
insb
or
pop
rol
add
rep
push
int
xor
addb
in
rdmsr
xchg
mov
adc
andl
out
arpl
push
test
outsb
inc
add
js
jg
enter
mov
dec
test
jns
mov
test
dec
jg
inc
add
or
adc
cwtl
xchg
rolb
std
icebp
lahf
bound
packuswb
mulb
lcall
loopne
push
cmpsb
sbb
add
repz
pop
inc
mov
pop
test
pop
add
enter
jns
insl
lods
xor
push
loope
cmp
fdivrs
loop
add
inc
dec
push
dec
adc
mov
mul
adc
mov
rcll
add
shll
loop
push
lcall
push
jo
xor
mov
xor
lahf
jno
add
sub
sbb
in
jae
xchg
xchg
cmp
xchg
mov
pop
daa
test
cltd
les
sbb
es
mov
inc
add
add
cmp
out
add
push
and
add
repnz
jo
mov
cmp
cmp
test
movb
insb
xchg
aas
in
jmp
addb
popf
or
mov
dec
fwait
mov
pop
push
add
and
add
and
xchg
jp
lods
pusha
add
and
mov
pop
xor
inc
add
push
repz
dec
stc
test
add
and
xchg
pop
shl
xchg
sarl
lcall
mov
mov
faddl
add
add
shll
lahf
xor
add
movsb
xchg
aas
fiadds
popa
cmp
mov
decb
ret
fsubl
xor
push
cmp
ret
enter
scas
push
mov
and
je
rorl
add
ret
pushf
sti
push
hlt
dec
pop
mov
jmp
add
mov
sbb
cmp
add
mov
incl
mov
add
cmpsb
push
sub
scas
rcrb
out
sbb
inc
test
or
inc
add
outsb
cmp
loop
add
cld
std
arpl
std
push
sub
clc
adc
add
jb
jns
inc
add
xchg
in
pop
mov
and
dec
imul
adc
inc
mov
xor
outsl
lret
sti
cmp
es
sbb
and
leave
std
add
push
sbb
dec
cmp
std
movsb
out
xchg
sub
mov
add
mov
jo
jns
sub
add
js
push
push
sub
addb
mov
jno
xor
shr
and
add
outsb
jnp
stc
sbb
mov
movsb
mov
imul
pop
or
outsl
test
pop
adc
push
lea
cli
repnz
ret
addb
xor
mov
call
insb
ljmp
xlat
jl
add
scas
cmpl
add
idivl
scas
add
sub
testb
mov
cli
mov
add
xchg
das
stos
mov
jbe
add
out
inc
add
add
call
lock
mov
outsb
or
insl
sub
in
inc
add
sbb
icebp
bound
xchg
and
mov
mov
test
inc
add
mov
cmp
xchg
mov
mov
fstpl
cltd
testl
add
mov
xchg
jge
repz
fistpl
adc
add
loopne
xor
cmpl
mov
add
cmp
out
push
ror
fstpl
sub
mov
addb
sbb
jg
add
sti
mov
add
cmpsl
pop
js
sbb
les
testl
or
bound
les
xor
add
sbb
add
stc
out
and
call
cltd
addb
lds
push
pop
dec
fs
xchg
xor
addb
ja
sarl
mov
pop
mov
outsl
mov
movsl
jmp
mov
test
mov
add
jnp
dec
mov
or
pop
lret
mov
fs
movsb
cmp
cmp
cltd
loope
inc
xor
lock
es
mov
mov
stos
dec
nop
push
dec
loope
hlt
pop
scas
sub
rolb
arpl
jge
jbe
inc
loopne
cwtl
sbb
sar
jns
shr
dec
mov
fsubl
es
dec
mov
dec
ja
jae
mov
jge
aad
add
push
cli
sub
pop
fsubrl
add
cmp
xchg
push
add
test
and
mov
xlat
inc
add
int
add
dec
xchg
inc
sti
and
mov
filds
add
xlat
or
testl
jmp
popa
dec
jb
jae
dec
scas
sarl
jmp
push
mov
add
mov
lahf
insl
popa
or
add
add
jecxz
cwtl
push
fwait
mov
or
add
jbe
mov
inc
add
rolb
add
movsl
sahf
movsl
pushf
enter
pop
stos
inc
inc
add
ficoml
inc
add
lock
jp
cwtl
bound
addb
push
adc
inc
xor
mov
jecxz
add
inc
adc
mov
sub
and
addr16
or
mov
xor
dec
mov
xchg
inc
add
mov
loopne
push
pop
jmp
ljmp
adc
pusha
add
push
xchg
nopl
push
out
pop
mov
icebp
lret
aas
xchg
in
sbbl
add
or
jmp
repnz
adc
push
stos
insl
dec
test
inc
add
cmp
dec
jns
mov
dec
dec
lock
shlb
add
xchg
xor
pop
iret
lea
cwtl
adc
mov
pop
lahf
ret
mov
lahf
push
nop
push
push
sbb
adc
add
pop
mov
pop
cs
loope
loop,pn
sub
xchg
xor
scas
jbe
outsb
cmpsl
rcrb
jns
movsl
gs
testl
adc
lahf
dec
test
jp
inc
imul
xor
outsl
lret
adc
cwtl
fnstcw
ja
mov
pop
xlat
scas
mov
fnstcw
bound
negl
pop
outsb
mov
xchg
mov
add
ret
jg
outsl
pushf
xor
cmpsb
xchg
mov
loope
das
jp
insb
adc
fsubrp
and
mov
pop
dec
jmp
popf
call
jbe
insl
pop
dec
mov
iret
sub
push
adc
push
sbb
dec
jle
inc
mov
in
dec
movl
iret
sti
sub
jb
cmp
xchg
aas
pop
mov
add
rcrb
xchg
xchg
aas
cmpsl
sub
pusha
add
or
hlt
addr16
into
in
mov
jg
scas
fsubr
cltd
mov
lock
add
jecxz
mov
int
aad
jmp
hlt
enter
jb
pop
add
bnd
cmp
xor
add
xor
js
mov
rcll
add
add
mov
add
lods
sahf
cs
jns
adc
sbb
xchg
and
arpl
or
add
add
add
outsb
fldcw
stos
add
enter
adc
fwait
out
adc
mov
rcll
xchg
fadd
add
or
jno
les
fisttpll
int3
push
les
in
add
fisubs
js
and
xor
mov
loope
pop
xor
add
sub
cwtl
mov
sub
inc
add
sub
iret
push
dec
in
rorl
inc
add
add
lcall
faddl
jp
or
aas
iret
into
mov
stc
pop
pop
mov
cwtl
dec
sub
out
xchg
jmp
xchg
int
nop
inc
add
cwtl
fcompl
dec
insl
scas
aas
js
inc
add
inc
mov
push
mov
add
mov
test
jbe
repnz
add
push
ss
fbld
lea
add
xchg
pop
mov
add
daa
shrb
dec
xor
jle
jp
leave
rolb
mov
inc
sbb
insb
and
push
std
mov
cli
xchg
push
lods
xchg
jle
mov
repnz
fldenv
out
xor
xor
or
cmpsl
aad
add
std
movb
arpl
xchg
pop
dec
into
cwtl
dec
dec
pop
mov
pop
sbb
xchg
or
add
flds
insb
or
cmp
and
mov
out
rorb
pop
out
sbb
xchg
dec
mov
xor
js
push
cwtl
leave
mov
add
add
pop
pop
dec
sti
dec
in
cmp
and
sbb
bound
cwtl
push
movsb
sub
int3
fs
mov
divb
or
clc
rcr
dec
insb
push
push
push
push
jge
mov
xor
cmp
addr16
movb
dec
xor
cmc
cmc
sub
out
repz
add
hlt
loopne
xor
add
call
adc
jo
dec
push
fmull
cmp
les
dec
clc
scas
das
insb
stos
repz
out
add
sahf
inc
pop
loopne
mov
inc
fdivl
movl
add
inc
add
push
rorb
fnsave
mov
mov
add
ljmp
push
dec
stos
loope
lcall
popf
add
cld
jmp
dec
lret
scas
dec
lock
data16
push
adc
or
lret
clts
add
mov
cmp
add
mov
cli
xor
jecxz
mov
imul
bsr
jno
add
sbb
rcl
ret
adc
imul
lea
adc
add
and
loope
incb
adc
inc
add
xchg
xchg
cmpsl
out
add
loope
pop
loop
out
mov
push
xor
sbb
adc
push
cwtl
aas
hlt
scas
fucomi
push
in
mov
mov
add
nop
inc
add
ret
imul
jns
or
cmp
and
rolb
mov
mov
add
je
mov
sbb
xchg
push
cmova
mov
inc
add
int
mov
jp
or
pop
mov
xor
push
adc
ret
shlb
dec
je
popl
push
mov
add
into
shlb
test
mov
fisttps
stos
mov
xor
push
loop
inc
adc
leave
sbb
add
loopne
cmpsb
xchg
push
jp
inc
sahf
cli
pushf
xchg
rorl
mov
ret
ret
cmp
cmp
xchg
les
pop
pusha
add
in
add
jbe
lea
sbbl
mov
push
mov
out
add
jecxz
call
test
call
mov
out
sarb
push
andl
movsb
xor
leave
xchg
xchg
mov
sub
adc
rcl
add
push
adc
ss
out
ret
xlat
mov
adc
mov
push
inc
add
cmp
pop
fs
jl
mov
add
ljmp
in
arpl
add
pop
lds
add
mov
jne
xchg
sti
add
popl
movsl
xchg
sbb
ret
stos
pop
mov
push
add
ret
and
sbb
jle
bound
push
add
pop
pusha
add
fldenv
xchg
lret
scas
fs
test
faddl
imul
in
call
cwtl
orl
jo
aam
cwtl
push
movsl
mov
aas
xor
int
fmull
iret
push
stos
jmp
add
fwait
sub
cmpl
dec
mov
push
jae
and
mov
or
add
and
pop
mov
xchg
lods
ljmp
lret
fnstcw
xchg
out
jo
add
dec
cld
pop
and
lock
dec
sbb
testb
xchg
sbb
mov
cmpsl
dec
jo
adc
inc
xor
lock
into
pop
adc
mov
mov
xor
cmp
insl
pop
add
andl
lret
icebp
loopne
lea
mov
inc
mov
addr16
dec
and
mov
fcoml
imul
int3
inc
mov
pop
dec
pop
rcll
in
mov
jno
add
push
xor
lret
jns
int3
scas
lods
dec
bound
lret
mov
into
rcrb
cmp
mov
nop
xchg
hlt
add
mov
add
je
and
cmpl
add
add
adc
mov
stc
nop
es
add
movsb
mov
add
stc
nop
es
add
add
or
add
push
mov
xchg
ret
add
add
add
sub
add
mov
nop
es
lldt
add
es
add
add
add
jo
and
add
xchg
pop
mov
stc
nop
es
cmp
cmp
adc
rcll
outsb
test
nop
cld
nop
jmp
add
pop
add
and
outsl
dec
jne
nop
cld
nop
jmp
or
insl
je
add
push
mov
xchg
ret
inc
pop
loopne
jl
dec
nop
cld
nop
jmp
adc
add
push
xchg
or
nop
es
add
add
imul
inc
stc
nop
es
adc
sarl
inc
and
or
stc
nop
es
add
add
add
pop
push
push
mov
xchg
ret
xchg
movsl
and
adc
add
add
sub
add
add
inc
add
cmp
nop
cld
nop
jmp
add
add
add
push
push
mov
xchg
ret
add
add
add
test
add
stc
nop
es
and
or
pop
stc
nop
es
add
add
add
adc
aas
add
stc
nop
es
shll
add
add
es
add
insl
add
add
or
pop
and
add
nop
es
add
addl
mov
stc
nop
es
add
add
add
dec
and
stc
nop
es
add
add
ds
stc
nop
es
mov
insl
jb
adc
or
andl
jb
add
inc
inc
insb
mov
stc
nop
es
cmp
cld
push
mov
xchg
ret
add
roll
add
jmp
jb
inc
add
lret
xor
stc
nop
es
aad
outsl
cmp
add
nop
es
add
add
adc
inc
add
int3
ret
stc
nop
es
add
outsl
lret
add
aad
pop
inc
nop
cld
nop
jmp
aad
adc
mov
jne
push
mov
xchg
ret
jb
add
jb
dec
nop
cld
nop
jmp
cmp
adc
jb
mov
add
stc
nop
es
or
pop
mov
stc
nop
es
add
add
mov
movsb
add
xchg
ret
add
fsubrs
add
push
push
mov
xchg
ret
add
aad
cmp
sub
jb
add
xchg
xchg
adc
mov
stc
nop
es
add
pop
add
inc
add
cmp
jbe
inc
add
add
inc
add
add
stc
nop
es
pop
ds
movzwl
stc
nop
es
arpl
add
add
mov
stc
nop
es
enter
stc
nop
es
roll
add
pushf
push
push
mov
xchg
ret
add
ds
pusha
push
mov
xchg
ret
arpl
add
je
stc
nop
es
add
jb
add
rolb
add
insb
test
nop
cld
nop
jmp
add
jo
or
add
pop
stc
nop
es
add
mov
shrb
add
stc
nop
es
add
outsl
sbb
stc
nop
es
add
add
add
outsl
pop
movsl
mov
mov
xchg
ret
imul
add
and
push
mov
xchg
ret
add
imul
push
mov
xchg
ret
add
mov
lods
adc
add
pop
add
mov
add
push
imul
push
add
stc
nop
es
fadds
fdivrs
jne
stc
nop
es
loopne
outsl
add
add
xchg
push
mov
xchg
ret
aad
rcl
arpl
mov
jb
add
or
add
add
mov
xchg
ret
mov
jmp
add
stc
nop
es
add
add
rolb
ror
stc
nop
es
cmc
aas
or
shll
add
sahf
mov
stc
nop
es
add
add
or
addr16
mov
stc
nop
es
add
mov
popf
push
push
mov
xchg
ret
add
inc
adc
stc
nop
es
subl
roll
add
sti
mov
stc
nop
es
sbbl
inc
pop
es
pop
call
nop
cld
nop
jmp
and
xchg
inc
add
mov
stc
nop
es
adcl
inc
sub
inc
sbb
nop
es
aad
rorl
adcl
pop
push
stc
nop
es
add
add
mov
nop
cld
nop
jmp
add
mov
stc
nop
es
add
add
add
stc
nop
es
lret
add
pop
add
pop
cmp
outsb
loope
add
add
add
mov
add
push
mov
xchg
ret
cmc
add
add
add
cmp
inc
and
nop
es
mov
jl
add
repz
es
add
and
in
add
add
add
cmc
movsl
dec
xor
stc
nop
es
or
xchg
add
add
or
jmp
add
fs
nop
es
add
roll
adc
lods
add
nop
cld
nop
jmp
add
add
arpl
cmpsb
mov
mov
stc
nop
es
pop
add
add
nop
cld
nop
jmp
add
add
or
nop
cld
nop
jmp
add
ltr
fadds
push
out
add
add
or
enter
xor
stc
nop
es
lds
imul
push
mov
xchg
ret
rcll
add
lcall
or
xchg
ret
add
add
add
cmp
mov
xchg
ret
add
inc
pop
jp
movsb
push
mov
xchg
ret
add
mov
daa
fsubrs
stc
nop
es
add
cmp
mov
nop
cld
nop
jmp
add
cmp
shll
addr16
nop
cld
nop
jmp
aad
cmp
imul
rclb
mov
xchg
ret
add
outsl
or
add
shl
push
mov
xchg
ret
mov
add
mov
stc
nop
es
add
enter
mov
nop
jmp
fists
movsl
movsb
mov
popa
add
nop
es
pop
inc
add
add
nop
es
sub
fmuls
push
stc
nop
es
add
addl
add
mov
nop
cld
nop
jmp
add
add
out
ror
push
mov
xchg
ret
add
bswap
add
mov
add
add
dec
out
imul
sbb
add
add
add
add
ret
call
stc
nop
es
and
rcr
xchg
enter
push
clc
inc
add
lods
movsb
add
add
lds
add
push
lahf
mov
stc
nop
es
add
inc
adc
arpl
movswl
nop
cld
nop
jmp
add
inc
add
cmc
push
imul
es
add
sub
negl
cld
nop
jmp
add
jg
dec
cmp
nop
es
jo
arpl
add
pop
stc
nop
es
inc
aas
add
arpl
push
push
mov
xchg
ret
adc
add
inc
or
mov
stc
nop
es
add
add
and
add
roll
add
sbb
hlt
stc
inc
add
arpl
adcl
add
stc
nop
es
inc
insl
inc
add
xchg
push
clc
push
mov
xchg
ret
arpl
addl
jl
pusha
nop
cld
nop
jmp
add
sub
addl
pop
and
je
push
push
mov
xchg
ret
addl
or
add
andl
adc
add
jns
in
sbb
adc
hlt
add
mov
or
dec
cmp
cld
nop
jmp
mov
cmp
inc
mov
imul
add
add
nop
es
add
pop
dec
test
nop
cld
nop
jmp
lret
add
add
add
push
add
loopne
cld
nop
jmp
sub
pop
adc
sub
cld
nop
jmp
add
add
es
add
add
add
cmpl
nop
cld
nop
jmp
add
or
or
nop
es
add
fs
add
mov
stc
nop
es
imul
jb
inc
aad
addl
push
mov
xchg
ret
jb
inc
add
lea
stc
nop
es
loopne
pop
inc
add
mov
xchg
ret
add
add
add
fucomp
xchg
add
stc
nop
es
je
inc
mov
stc
stc
nop
es
enter
pop
nop
cld
nop
jmp
add
add
adc
xchg
or
sbb
es
roll
add
mov
xchg
ret
add
imul
jne
stc
nop
es
add
movsl
decb
call
and
roll
lds
lret
clc
mov
stc
nop
es
enter
cmp
pop
fucomi
jae
add
stc
nop
es
aas
movsb
roll
stos
push
mov
xchg
ret
add
sub
add
push
mov
xchg
ret
add
add
add
push
push
stc
nop
es
add
movsl
jo
mov
nop
es
add
roll
cmp
add
nop
es
add
add
aad
add
jmp
stc
nop
es
inc
add
out
and
push
stc
nop
es
adc
add
add
inc
xor
stc
nop
es
xchg
enter
push
subl
inc
add
adc
add
mov
stc
nop
es
enter
add
rcll
xor
add
nop
cld
nop
jmp
add
int3
scas
mov
push
mov
xchg
ret
add
inc
adc
mov
jb
add
add
arpl
pop
push
add
stc
nop
es
or
add
add
push
mov
xchg
ret
loopne
add
add
add
nop
es
or
add
add
add
mov
stc
nop
es
add
arpl
add
nop
es
add
movsb
iret
mov
push
mov
xchg
ret
add
js
dec
or
nop
es
add
aad
add
and
jmp
stc
nop
es
ds
add
lret
mov
stc
nop
es
add
add
add
call
stc
nop
es
cmp
je
adc
mov
rclb
loop
add
imul
push
inc
add
add
add
pop
xchg
sub
jne
stc
nop
es
lret
add
adc
and
inc
add
pop
add
add
mov
stc
nop
es
add
dec
nop
cld
nop
jmp
pop
pop
add
xchg
fisttpll
cmp
add
stc
nop
es
sub
cmc
incl
dec
cmp
nop
es
add
insl
shll
mov
xchg
ret
add
aas
cmp
add
stc
nop
es
lret
inc
sub
nop
jmp
add
jl
or
add
pop
out
xchg
nop
cld
nop
jmp
enter
aad
add
add
nop
es
sub
cmp
pop
add
mov
or
inc
add
add
add
lret
add
stc
nop
es
add
mov
sbb
nop
es
add
add
lret
lret
in
sti
mov
add
or
pushf
iret
add
sub
stc
nop
es
lds
pop
add
lret
lods
add
stc
nop
es
aas
mov
pop
les
aad
mov
stc
nop
es
add
add
add
loop
je
stc
nop
es
add
add
push
mov
xchg
ret
cmp
cmp
xor
nop
cld
nop
jmp
adc
aas
add
add
std
mov
push
mov
xchg
ret
add
add
mov
add
mov
xchg
ret
add
or
add
mov
xchg
ret
add
add
add
stc
nop
es
sub
sub
or
stc
nop
es
add
stos
mov
push
mov
xchg
ret
add
sub
std
mov
stc
nop
es
add
jb
popl
stc
nop
es
add
add
add
and
push
push
mov
xchg
ret
aas
add
pextrw
add
push
stc
nop
es
jo
add
add
add
sbb
es
pop
add
add
pop
push
stc
nop
es
lret
adc
arpl
int3
jne
stc
nop
es
add
pop
call
stc
nop
es
add
mov
sbb
mov
xchg
ret
enter
add
cmp
jg
stc
nop
es
add
cli
stc
nop
es
or
adc
jo
add
call
stc
nop
es
fbstp
xchg
jb
insl
add
filds
cmp
jl
test
stc
nop
es
sub
jo
dec
cmp
nop
cld
nop
jmp
add
insl
add
adc
add
sub
and
add
stc
nop
es
add
xchg
adc
nop
es
add
movsl
add
dec
div
stc
nop
es
inc
add
add
sub
cli
mov
stc
nop
es
add
mov
mov
push
mov
xchg
ret
add
xor
decl
push
mov
xchg
ret
add
inc
add
repnz
add
stc
nop
es
add
int3
add
roll
nop
es
inc
add
inc
add
pushf
mov
nop
cld
nop
jmp
add
add
lea
stc
nop
es
add
or
push
mov
xchg
ret
movsb
arpl
or
add
ljmp
ret
add
or
and
sub
subb
add
inc
aad
add
push
push
stc
nop
es
imul
movlps
nop
jmp
add
loopne
inc
add
in
xchg
or
jmp
roll
add
je
jl
jl
ret
stc
nop
es
addl
add
add
jo
add
cld
nop
jmp
filds
aas
int3
imul
jbe
stc
nop
es
sub
mov
fiaddl
es
movsl
add
add
lret
cmpsl
push
add
jmp
pop
push
add
add
add
adc
outsl
sahf
mov
nop
cld
nop
jmp
arpl
add
add
or
add
add
add
add
enter
pop
mov
stc
nop
es
movsl
add
adc
fidivrs
stc
nop
es
addl
fs
jne
stc
nop
es
mov
mov
stc
nop
es
arpl
push
push
mov
xchg
ret
movsl
add
add
dec
mov
stc
nop
es
mov
test
jmp
rcll
add
mov
stc
nop
es
add
pop
inc
xor
iret
push
stc
nop
es
add
movsl
insl
fcomip
adc
mov
push
mov
xchg
ret
jb
arpl
sub
cmpl
nop
cld
nop
jmp
add
je
add
in
jp
mov
fwait
call
add
cld
repz
insb
inc
stc
nop
es
add
aad
inc
xchg
add
cmp
nop
es
add
add
inc
cmpl
push
outsl
add
push
mov
xchg
ret
jb
ds
sub
cmpsb
sbb
in
inc
add
add
add
add
stc
nop
es
sub
or
sub
mov
inc
add
movsl
add
add
pop
push
mov
add
add
add
in
mov
push
mov
xchg
ret
sarl
xchg
aad
movzwl
stc
nop
es
add
add
je
adc
rep
stc
nop
es
insl
add
mov
add
jg
stc
nop
es
pop
mov
add
push
mov
sti
pop
maskmovq
mull
add
add
int
pusha
stc
nop
es
addl
add
sub
add
xchg
stos
cmpl
nop
cld
nop
jmp
adc
add
movsb
jns
sar
nop
es
add
inc
movsl
add
nop
es
add
pop
add
add
adc
nop
cld
nop
jmp
add
shl
roll
movsl
add
mov
stc
nop
es
or
add
add
inc
sub
pop
add
xchg
ret
lds
add
add
inc
add
mov
stc
nop
es
ror
inc
add
out
xor
push
mov
xchg
ret
add
shrl
pop
cwtl
add
stc
nop
es
rcrl
add
add
mov
nop
cld
nop
jmp
inc
addl
add
nop
es
mov
pop
lret
add
push
mov
xchg
ret
aas
arpl
add
lods
xor
stc
nop
es
lds
adc
or
adc
stc
nop
es
aad
lret
sub
adc
push
stc
nop
es
arpl
add
shr
stc
nop
es
aas
sub
xchg
add
aaa
cwtl
test
nop
cld
nop
jmp
adc
sub
push
mov
in
add
add
nop
es
add
inc
add
jmp
mov
xchg
ret
sub
add
push
mov
add
add
adcb
add
sub
add
add
es
add
add
or
jb
call
cmc
inc
add
insl
inc
add
add
mov
push
push
mov
xchg
ret
fmuls
adc
add
push
push
mov
xchg
ret
or
adc
fadds
add
orl
stc
nop
es
add
xor
inc
push
mov
xchg
ret
add
sub
stc
nop
es
add
add
adc
shl
stc
nop
es
arpl
add
lds
pop
push
stc
nop
es
lods
or
ds
add
mov
nop
cld
nop
jmp
add
arpl
add
add
dec
call
stc
nop
es
cmp
lcall
add
lods
mov
test
nop
es
fists
or
push
mov
xchg
ret
mov
add
cmp
add
nop
es
add
add
xchg
add
test
inc
add
add
add
cmpl
nop
jmp
add
aad
add
jb
roll
add
xchg
sub
nop
es
add
add
add
add
pop
adc
jg
inc
stc
nop
es
inc
add
loopne
add
and
nop
es
add
jb
add
add
mov
xchg
ret
add
cmc
aas
add
mov
es
sub
insl
arpl
call
cld
nop
jmp
adc
add
adc
add
dec
cmp
nop
es
add
shll
sbb
stc
nop
es
add
add
jmp
jb
add
add
insl
add
mov
mov
xchg
ret
add
mov
dec
clc
dec
inc
stc
nop
es
add
push
inc
int3
and
push
mov
xchg
ret
add
lods
add
mov
stc
nop
es
add
jb
add
mov
nop
cld
nop
jmp
rcl
add
add
ret
je
nop
cld
nop
jmp
add
add
add
stc
nop
es
cmp
adc
xor
add
nop
cld
nop
jmp
xchg
sub
shll
xchg
out
add
nop
cld
nop
jmp
add
sub
arpl
outsb
push
stc
nop
es
pop
and
arpl
add
jb
mov
enter
fsubrs
inc
push
mov
xchg
ret
movsl
add
add
add
pop
push
mov
xchg
ret
aad
pop
sub
iret
push
mov
add
ds
add
cmp
and
push
sub
add
add
add
arpl
loop
push
mov
xchg
ret
fistps
pop
sub
call
es
or
mov
inc
add
cmp
nop
cld
nop
jmp
add
jge
push
mov
xchg
ret
pop
add
mov
or
xchg
ret
aad
mov
outsl
push
nop
cld
nop
jmp
cmp
add
lret
dec
push
mov
xchg
ret
ds
sub
rclb
hlt
lcall
enter
add
pop
subl
push
mov
xchg
ret
add
je
sub
jb
orl
add
or
test
mov
nop
es
adc
inc
add
jnp
stc
nop
es
sub
add
insl
add
dec
push
push
mov
xchg
ret
mov
add
ror
lods
and
imul
es
add
add
stc
nop
es
mov
push
stc
nop
es
fadds
add
add
dec
or
add
nop
es
movsb
add
add
add
mov
stc
nop
es
mov
sbbl
stc
nop
es
enter
add
xchg
adc
sub
nop
cld
nop
jmp
add
add
nop
es
add
inc
add
add
pop
stc
nop
es
add
add
add
shr
stc
nop
es
add
add
adc
lcall
mov
xchg
ret
add
xchg
mov
in
cmp
nop
cld
nop
jmp
cmc
aas
add
lods
arpl
mov
fsubrs
subb
lds
pop
sti
push
nop
cld
nop
jmp
adc
jl
add
adc
add
push
stc
nop
es
add
or
jo
mov
lea
add
xchg
ret
add
xchg
rcrl
fiadds
xchg
ret
add
aas
inc
loopne
enter
cli
stc
nop
es
inc
adc
and
jnp
clc
stc
nop
es
adc
add
xchg
add
mov
add
add
add
and
jb
pop
addl
arpl
add
lods
nop
cld
nop
jmp
add
mov
jl
and
nop
cld
nop
jmp
cmp
cmp
add
add
loop
mov
stc
nop
es
or
add
xor
push
nop
cld
nop
jmp
add
aas
sldt
insl
jb
mov
nop
es
sldt
into
and
stc
nop
es
add
arpl
ror
cs
nop
cld
nop
jmp
enter
sub
mov
jno
mov
push
mov
xchg
ret
adc
loopne
add
not
jle
pop
stc
nop
es
jb
xchg
je
inc
sub
call
mov
xchg
ret
aad
inc
lods
add
stc
nop
es
roll
xchg
push
jno
call
jb
add
sub
add
out
out
clc
call
adc
add
jo
adc
and
cwtl
add
stc
nop
es
and
inc
inc
adc
or
test
sti
stc
nop
es
inc
inc
or
mov
cld
nop
jmp
movsb
add
addl
add
pushf
add
push
mov
xchg
ret
shld
add
nop
es
adc
add
add
mov
scas
push
stc
nop
es
add
inc
pop
outsl
movsb
add
push
mov
dec
fiadds
xchg
ret
or
sub
mov
addb
enter
stc
nop
es
loopne
and
adc
nop
es
add
aas
and
pop
add
nop
cld
nop
jmp
add
int3
add
mov
stc
nop
es
add
adc
insl
in
push
stc
nop
es
je
inc
add
add
stc
nop
es
inc
rcr
add
add
pop
inc
add
inc
add
add
data16
nop
es
sub
push
filds
jo
nop
cld
nop
jmp
add
adc
add
mov
mov
xchg
ret
add
add
add
nop
es
pop
add
aas
int3
cmp
out
add
nop
cld
nop
jmp
or
add
jb
adc
xor
nop
cld
nop
jmp
add
lea
stc
nop
es
enter
mov
add
mov
xchg
ret
inc
imul
pop
nop
cld
nop
jmp
cmp
ror
inc
sub
pusha
stc
nop
es
cmp
add
roll
arpl
je
stc
nop
es
add
jl
testl
nop
cld
nop
jmp
add
movsl
add
mov
stc
nop
es
add
add
add
mov
je
stc
nop
es
add
add
add
add
nop
es
add
jb
je
nop
cld
nop
jmp
add
pop
je
pop
push
mov
xchg
ret
lret
add
add
mov
stc
nop
es
cmp
cmp
add
nop
jmp
rorl
add
add
pop
repnz
push
stc
nop
es
add
add
ret
add
mov
nop
cld
nop
jmp
xchg
pop
inc
mov
add
stc
nop
es
add
mov
push
push
mov
xchg
ret
add
or
add
mov
insb
or
xchg
ret
add
pop
movsb
mov
pusha
add
push
ss
cmpl
cmp
add
ds
lret
fsubs
shr
stc
nop
es
add
mov
nop
cld
nop
jmp
sub
jg
stc
nop
es
add
add
filds
dec
adc
nop
es
mov
rol
add
je
stc
nop
es
add
mov
es
aas
add
pop
add
add
fcos
dec
sub
lcall
ret
add
pop
add
dec
mov
nop
cld
nop
jmp
lret
add
movsl
rcll
aas
add
cmp
nop
es
or
add
movsl
dec
push
nop
cld
nop
jmp
pop
add
add
inc
add
add
push
arpl
cmpb
jmp
addl
add
inc
add
popa
add
nop
es
roll
shrl
nop
add
xchg
ret
roll
inc
add
insl
jae
sub
stc
nop
es
movups
cwtl
mov
stc
nop
es
add
sub
lods
lea
stc
nop
es
jo
cmp
cmp
mov
stc
nop
es
add
enter
dec
add
cld
nop
jmp
outsl
lds
mov
add
scas
call
stc
nop
es
add
cmp
scas
and
stc
nop
es
add
add
push
movzwl
stc
nop
es
add
filds
and
push
mov
xchg
ret
add
add
fistpll
repnz
nop
es
enter
add
stc
nop
es
addl
add
filds
rcll
mov
nop
cld
nop
jmp
lods
add
sarl
push
es
lods
add
ds
adc
in
lret
ret
nop
cld
nop
jmp
add
subl
adc
pop
push
mov
xchg
ret
or
jl
add
lds
inc
add
lea
nop
cld
nop
jmp
arpl
lods
or
cwtl
push
stc
nop
es
je
lret
ds
sub
or
stc
nop
es
int3
jnp
cmpl
decl
subl
push
or
add
or
add
mov
roll
in
pop
stc
nop
es
add
mov
add
cmp
and
pushl
sar
nop
es
cmc
sub
pop
push
stc
nop
es
cmpl
add
add
stc
nop
es
or
mov
xor
inc
add
xchg
ret
add
sarl
add
or
nop
jmp
je
pop
add
add
inc
stc
nop
es
int3
adc
rol
mov
push
mov
xchg
ret
add
pop
into
push
stc
nop
es
cmp
mov
mov
mov
xchg
ret
shll
ror
mov
mov
stc
nop
es
add
add
add
mov
push
stc
nop
es
inc
pop
add
insl
popa
hlt
dec
mov
nop
cld
nop
jmp
add
lods
sub
xchg
movsb
cmp
popa
add
mov
xchg
ret
jl
movlps
push
divl
push
mov
add
mov
adc
jb
inc
add
out
add
jne
stc
nop
es
add
inc
mov
xlat
out
push
nop
cld
nop
jmp
roll
add
inc
pop
and
push
mov
xchg
ret
ror
inc
add
ret
mov
stc
nop
es
and
inc
aad
xchg
sub
mov
stc
nop
es
inc
ror
aad
mov
nop
es
add
outsl
aas
jl
xchg
mov
jmp
sub
add
add
lds
sub
nop
es
add
add
mov
add
stc
nop
es
add
mov
xchg
popa
les
xor
push
push
mov
xchg
ret
adc
add
sub
sbb
stc
nop
es
mov
add
xor
mov
stc
nop
es
roll
das
pop
stc
nop
es
imul
adc
dec
add
stc
nop
es
arpl
add
add
enter
hlt
call
icebp
incl
popa
stc
nop
es
and
movsl
add
mov
xor
xchg
andl
xchg
xlat
jnp
jb
add
add
arpl
jo
stc
nop
es
addl
movsb
cltd
push
stc
nop
es
add
add
and
mov
fsubr
add
stc
nop
es
add
mov
push
mov
xchg
ret
sub
add
add
stc
nop
es
add
sahf
push
stc
nop
es
jo
orl
add
addb
jne
stc
nop
es
add
jl
jle
add
add
cltd
out
inc
add
mov
pause
cld
nop
jmp
cmp
pop
cmp
mov
stc
nop
es
addl
add
add
pop
push
mov
xchg
ret
mov
inc
adc
xor
lea
push
mov
xchg
ret
add
add
cmpw
nop
cld
nop
jmp
add
add
mov
push
mov
xchg
ret
inc
add
add
ds
stc
nop
es
add
add
add
nopl
es
cmc
add
add
rorl
out
inc
add
ror
je
xchg
adc
add
ret
inc
enter
movsl
lds
int3
add
and
add
push
mov
jb
add
add
sbb
or
push
mov
xchg
ret
lods
fs
inc
push
mov
sub
nop
es
add
sub
roll
mov
stc
nop
es
add
add
mov
stc
nop
es
add
add
add
jae
mov
push
mov
xchg
ret
add
adc
add
mov
mov
xchg
ret
add
add
nop
cld
nop
jmp
arpl
add
and
stc
nop
es
adc
add
adc
add
stc
nop
es
adc
cmp
add
ret
stc
nop
es
pop
add
adc
adc
add
nop
cld
nop
jmp
add
jne
stc
nop
es
and
add
stc
nop
es
pop
fs
rep
push
mov
xchg
ret
shrl
add
xchg
pusha
add
es
add
enter
inc
add
push
stc
nop
es
loopne
add
lret
insb
add
stc
nop
es
arpl
add
lcall
es
pop
add
add
jge
andl
jb
sub
icebp
mov
popf
mov
stc
nop
es
add
add
add
cld
nop
jmp
arpl
or
add
call
stc
nop
es
add
sbb
es
add
or
add
popa
add
cld
nop
jmp
add
loopne
test
jne
push
mov
xchg
ret
fs
add
mov
xchg
ret
add
imul
fisttps
nop
jmp
add
andl
jae
mov
testl
add
add
add
decl
jmp
add
sub
add
jb
add
adc
add
and
stc
nop
es
add
add
add
push
mov
xchg
ret
aad
lds
add
fisttps
scas
enter
jmp
or
add
add
push
mov
xchg
ret
cmc
filds
pop
shll
je
stc
nop
es
lds
pop
sti
inc
add
sub
or
mov
dec
repnz
add
add
add
add
add
stc
nop
es
add
add
push
stc
nop
es
adc
arpl
inc
add
jb
popa
stc
nop
es
arpl
add
pop
sub
sbb
hlt
inc
add
add
sub
jmp
stc
nop
es
fists
movb
es
jb
enter
adc
and
pusha
push
mov
xchg
ret
add
movsb
sub
stc
nop
es
add
lds
andl
int
pop
jae
nop
es
cmp
fcomps
cmp
xor
add
nop
cld
nop
jmp
shrl
arpl
add
stc
nop
es
sub
iret
mov
stc
nop
es
cmp
or
add
mov
stc
nop
es
add
ud2
int3
add
nop
jmp
add
loopne
cmpl
add
pushf
xor
push
mov
xchg
ret
add
sub
and
loopne
mov
stc
nop
es
arpl
push
mov
jmp
and
add
adc
add
add
nop
es
je
outsl
movsb
int3
imul
stc
nop
es
adc
add
sub
stc
nop
es
ds
movsl
add
nop
jmp
mov
add
add
cs
nop
cld
nop
jmp
sub
jb
add
mov
nop
cld
nop
jmp
pop
inc
add
add
call
stc
nop
es
sub
jb
xor
nop
cld
nop
jmp
lds
je
inc
in
mov
push
mov
xchg
ret
andl
fs
movsb
stc
nop
es
addl
add
sarl
inc
push
not
inc
cmp
es
add
mov
add
nop
cld
nop
jmp
add
add
and
call
nop
cld
nop
jmp
add
inc
cmp
dec
cmp
cld
nop
jmp
addl
or
es
add
sub
lods
stc
nop
es
inc
mov
or
lret
cld
nop
jmp
add
add
add
add
jb
pop
mov
add
add
inc
jnp
sar
es
add
lds
add
dec
push
mov
xchg
ret
add
movsl
and
add
fdivrp
call
repnz
incl
add
mov
pop
push
mov
sbb
filds
xchg
add
add
nop
es
add
pop
adc
or
incl
jne
stc
nop
es
adc
arpl
lds
mov
sub
nop
es
add
add
stc
nop
es
add
pop
ljmp
nop
cld
nop
jmp
inc
xchg
lret
mov
nop
es
shrl
fwait
mov
stc
nop
es
add
jb
push
push
mov
xchg
ret
add
add
adc
xchg
dec
push
push
mov
xchg
ret
roll
add
cmp
add
test
nop
cld
nop
jmp
movsb
add
lds
add
repnz
jmp
stc
nop
es
adc
add
add
add
into
lea
push
mov
xchg
ret
insl
add
aad
subl
push
mov
xchg
ret
enter
ljmp
stc
nop
es
lret
mov
xor
push
push
mov
xchg
ret
fmul
cmp
add
push
sub
test
cld
nop
jmp
add
imul
add
push
stc
nop
es
xchg
add
sub
fwait
xor
nop
cld
nop
jmp
add
add
pop
stc
nop
es
add
lds
add
cmp
push
nop
jmp
aad
add
add
push
stc
nop
es
insl
movsb
invd
pop
add
add
call
stc
call
add
inc
add
mov
stc
nop
es
pop
xchg
add
add
jmp
add
movsb
add
pop
decl
es
add
outsl
je
aas
pop
add
stc
nop
es
imul
push
stc
nop
es
inc
imul
mov
add
cld
nop
jmp
sub
add
mov
stc
nop
es
verw
addl
jl
mov
ret
push
and
add
nop
addr16
add
out
jmp
lcall
ds
push
les
mov
movsl
jecxz
xchg
and
pusha
add
movl
xlat
sbb
pop
xor
test
js
stc
pop
sbbl
les
mov
out
push
fnstenv
adc
add
repz
add
rcrl
shll
pop
std
and
mov
aad
add
shr
clc
jle
addb
sbb
xchg
cmp
out
mov
loope
jmp
gs
and
loop
jge
es
cld
mov
or
ljmp
add
and
movsl
les
jp
sub
nop
repz
add
out
sbb
idivb
cltd
xchg
clc
jle
movsb
sub
icebp
arpl
xchg
mov
push
hlt
loop
dec
add
mov
pop
push
push
and
mov
jg
xor
das
test
addb
dec
into
rolb
inc
add
add
fs
sub
add
ret
sub
psrld
ficompl
add
jp
add
add
and
push
add
movsb
les
xchg
sub
add
add
fs
add
daa
int
aad
xor
addr16
aaa
lret
xor
adc
mov
scas
pusha
add
add
les
pop
out
sarl
push
inc
add
scas
ds
cmovno
bound
outsl
lcall
mov
jge
add
ja
stos
call
shll
scas
mov
add
mov
lcall
cmp
dec
scas
and
push
fcompl
xchg
mov
sub
sub
mov
cmp
not
mov
push
int3
push
ss
inc
add
sub
xchg
call
add
add
loope
movsl
stos
pushf
aam
cmp
or
add
movb
add
mov
adc
xor
addb
lret
insb
shrl
mov
add
add
add
pop
sti
mov
sbb
push
pop
sbb
clc
xor
and
mov
xor
cld
and
subl
adc
xchg
imul
clc
dec
mov
es
add
push
outsl
insl
jge
lahf
test
ds
aas
push
add
jb
add
out
aas
and
sbb
movb
adc
sub
and
or
mov
xchg
pop
outsl
daa
sti
flds
add
sub
mov
addb
jl
add
dec
push
mov
add
push
pop
fstp
push
and
sbb
sub
push
add
cld
sub
js
stc
mov
aaa
rcrl
sbb
add
je
xor
stc
and
mov
test
inc
add
add
mov
test
dec
dec
push
into
scas
test
adc
sbb
popl
sbb
clc
cmc
adc
enter
inc
xor
push
frstor
add
imul
popf
cmc
gs
sub
loop
push
icebp
bnd
mov
or
lock
bound
incb
dec
cmp
outsb
pop
dec
sbb
hlt
test
push
push
test
add
call
sub
pushw
add
add
xchg
jo
mov
push
aad
insl
ss
mov
inc
jg
dec
sbb
in
sub
xlat
xchg
rcr
lahf
imul
push
mov
add
add
incb
sub
lret
gs
out
stos
bound
mov
add
iret
repnz
xor
add
dec
adc
cwtl
mov
leave
xor
or
and
negl
arpl
fisubs
lret
mov
mov
nop
xor
jmp
xchg
and
outsl
movb
adc
stc
ljmp
mov
add
out
out
test
sbb
js
dec
adcl
in
aam
loopne
add
jmp
gs
pop
xchg
push
movsb
les
pop
xchg
mov
xor
pushf
adc
sub
lock
fiadds
jnp
xchg
insb
push
jae
sbb
lret
enter
dec
sahf
mov
xchg
inc
add
arpl
popf
and
ret
fidivrl
add
in
loopne
or
lock
dec
xor
dec
dec
iret
lret
mov
add
mov
pop
cli
cli
test
or
sbb
movsl
fdivr
dec
push
jp
jne
lock
decb
rcll
xchg
lret
sar
fdivrl
mov
add
mov
add
scas
inc
add
sub
stos
adc
mov
add
pop
add
xor
out
lret
push
fs
cmp
add
das
lret
mov
or
xlat
mov
dec
add
loopne
outsl
rcl
sbb
add
pop
fldenv
adc
cmp
stos
pop
fidivrl
adc
adc
xor
push
out
lds
mov
or
and
iret
sti
sti
push
adc
lock
pop
popf
insb
xchg
dec
or
arpl
pop
mov
outsl
mov
mov
push
call
fwait
xchg
aad
add
scas
mov
aad
lcall
hlt
lods
pop
add
out
lods
out
addr16
test
addr16
lret
hlt
sub
in
cld
sub
cmpsb
insb
push
cltd
jae
jo
add
sub
ljmp
push
test
out
add
xchg
pop
and
or
jo
sti
stos
sub
repnz
inc
push
dec
pop
addb
das
jnp
sbb
leave
fwait
cmp
fisubrl
pop
in
pop
int
mov
cli
stos
test
fs
inc
add
push
insb
adc
sar
dec
and
gs
cs
pop
stos
cwtl
cmp
mov
ljmp
test
repnz
xchg
pusha
add
pop
outsl
xchg
dec
in
mov
lea
das
stos
stc
xor
shlb
popa
aas
add
or
cmp
jmp
movsb
mov
rcll
repnz
lret
push
push
mov
out
or
cld
add
movl
push
and
push
adc
add
dec
sub
out
dec
sub
cmc
pop
mov
fnsave
add
pop
jno
das
mov
adc
mov
popa
dec
stos
sbb
addb
add
and
ds
add
jmp
add
aad
or
add
ljmp
and
pop
scas
int
scas
mov
lcall
mov
fcoms
push
out
xchg
in
les
sub
fnstenv
mov
popa
sbb
push
sub
ds
or
mov
shll
test
movb
mov
lods
lret
ret
test
and
js
cmpsl
xor
pop
add
inc
cmp
mov
mov
inc
cmp
push
arpl
test
mov
add
xor
cmp
xchg
push
xchg
add
repz
mov
dec
inc
in
je
inc
pop
sub
add
loopne
add
add
clc
outsb
sub
cmp
incl
add
jnp
ss
shlb
js
jne
add
adcl
repz
add
and
or
add
xor
sub
nop
xchg
rol
add
sub
pop
and
movsl
in
and
pusha
add
jl
mov
push
sbb
cli
mov
push
add
aam
lods
call
scas
leave
test
data16
mov
arpl
sbb
cwtl
test
std
dec
addb
push
popf
mov
jle
shll
inc
add
call
mov
int
mov
sbb
lock
pop
pusha
add
mov
add
xchg
cld
mov
sub
add
and
out
cmp
xor
push
xchg
arpl
add
aam
stos
in
mov
push
sahf
clc
andl
mov
dec
shll
xchg
sbb
negl
les
sub
adc
adc
xor
into
mov
or
stos
push
movb
add
mov
mov
dec
pop
outsb
cmp
gs
cmp
mov
xchg
sbb
out
sbb
aad
aam
inc
dec
pop
mov
mov
fwait
out
imul
ds
sbb
inc
add
sarl
mov
pop
or
xor
jns
xor
test
mov
out
imul
popa
inc
xchg
test
add
adc
lods
fdivrl
fiadds
pop
mov
add
mov
mov
fabs
pushf
inc
add
xchg
fmull
jmp
shlb
rolb
add
daa
or
test
popa
lock
imul
lea
addr16
addb
xchg
scas
add
mov
add
imul
pushl
add
popa
or
fs
ds
aas
or
mov
push
push
fildll
mov
pop
cmp
mov
jl
popf
iret
pop
les
sbb
push
add
cmpsl
cmpsb
jg
push
jge
xchg
cwtl
roll
add
mov
daa
mov
lea
sbb
inc
scas
xchg
push
pop
sarb
hlt
dec
mov
int3
ja
movb
sbb
add
xor
add
xchg
dec
inc
add
stc
sub
fwait
insl
es
add
out
cmp
pop
popf
addr16
and
sub
jb
jo
cwtl
cmp
lods
std
addb
jbe
lds
ss
popa
rcrl
imul
add
dec
addb
sub
xchg
fucomp
xor
incl
add
addb
rcll
jge
add
cltd
repnz
scas
daa
icebp
mov
in
and
sub
dec
lahf
push
in
imul
fldt
add
movsl
stos
push
enter
adc
movb
adc
rolb
add
shll
andl
jae
mov
pop
jmp
pop
movsl
cmp
add
aad
int3
ret
sub
mov
lods
jno
add
xor
xchg
xchg
data16
mov
mov
pop
pushf
xchg
push
test
sbb
out
in
jl
xchg
sub
add
sbb
inc
lds
add
mov
ljmp
add
mov
inc
arpl
stos
mov
push
add
inc
add
icebp
repnz
icebp
in
adc
dec
push
pop
jle
dec
neg
jg
aas
sahf
clc
jb
and
push
jmp
imulb
jge
pop
out
repnz
loop
cmp
movb
add
and
adcl
shll
fistpl
or
in
int3
cmp
dec
cmc
cwtl
mov
jb
popa
mov
cmp
cli
cld
cmpsl
dec
adc
add
sbb
push
add
addb
imul
dec
xchg
mov
fcompp
out
mov
cmp
outsb
ret
popf
rorl
mov
push
jmp
pop
xchg
add
mov
outsl
in
jns
test
leave
insb
ret
das
mov
add
or
mov
cmc
addb
push
das
jp
add
mov
cmc
cmp
jnp
or
cmp
cmp
inc
jmp
addb
add
sbb
add
xchg
add
jb
xchg
movsl
push
cmp
flds
add
add
push
mov
aas
je
out
dec
jns
or
mov
xchg
sbb
inc
jb
out
repnz
mov
sbb
outsb
xchg
jecxz,pn
mov
jmp
icebp
sbb
xor
sbb
aas
cmp
in
or
add
adc
movl
jbe
cmp
ljmp
movb
pop
adc
rcr
les
stos
bound
fdivl
pushf
sbb
push
cmp
rolb
push
mov
cwtl
add
rolb
addb
fs
xor
add
das
mov
sbb
lods
lret
ds
bound
addr16
nop
xor
js
add
and
xor
add
mov
pusha
add
lahf
mov
push
add
scas
rolb
xlat
mov
sub
popa
mov
loop
add
jbe
mov
in
add
fistpll
add
push
ret
sub
cmpsl
lcall
xor
notl
add
add
rolb
sub
xchg
lods
and
fistpl
xor
ja
popl
subl
negl
inc
add
jle
in
jp
cwtl
lds
push
inc
add
sbb
push
sub
dec
dec
push
addb
push
fcmovb
lret
adc
and
popf
enter
lahf
es
or
or
outsl
into
aam
divb
and
jmp
xor
xchg
dec
adc
inc
dec
mov
insl
sbb
mov
pop
popa
sub
jb
xor
jne
add
fs
mov
jnp
les
pop
cmc
dec
addb
scas
mov
xchg
aad
inc
add
jno
imull
push
scas
mov
push
ficomps
fstpl
sub
add
sbb
or
cmc
sbb
fisubrl
xchg
bound
cmpl
out
add
fwait
add
stos
lods
nop
das
mov
mov
iret
mov
scas
aaa
into
mov
jg
in
ficomps
add
int3
jno
daa
test
cmpsl
adc
shr
and
in
je
sbb
or
xor
enter
add
sub
cmp
pop
fcmovbe
imul
incb
iret
jge
add
pop
push
clc
adc
jb
loope
cwtl
je
in
daa
jl
test
fildll
mov
xchg
mov
add
inc
add
mov
push
fbstp
iret
aaa
mov
pop
cmp
sub
add
xor
or
add
push
jo
fs
push
or
aaa
mov
stos
test
pop
cmc
or
sub
adc
mov
xor
pushl
push
add
add
stos
aam
mov
aaa
es
and
out
ret
mov
ja
and
in
int3
scas
and
jno
cmc
cmp
add
adc
in
dec
pop
inc
xchg
shlb
add
mov
loope
pop
movsl
jle
push
cmc
cmp
dec
rcrb
xor
or
pop
and
mov
xor
fcoml
loopne
addb
sbb
mov
jl
mov
push
leave
mov
fbld
add
and
mov
or
mov
out
int3
mov
add
mov
mov
test
adc
add
mov
mov
and
bound
sbb
and
inc
add
pop
call
into
mov
and
and
mov
idiv
stos
ja
lods
and
dec
xchg
ret
mov
mov
jb
ficoms
lret
xchg
pusha
add
jae
cmc
std
jnp
pop
repnz
test
mov
add
push
cs
xchg
sub
repnz
imul
addb
jb
mov
lcall
xor
inc
add
add
inc
ds
daa
inc
mov
mov
xchg
cmp
daa
mov
jmp
fstpt
add
or
out
dec
loope
loope
or
and
xor
add
lret
lods
mov
jle
call
or
cltd
es
imul
rolb
lods
cmp
mov
xchg
jne
repz
and
in
jnp
add
jecxz
pop
inc
add
fs
jg
fnsave
test
xchg
bound
je
and
ss
adc
and
out
insb
movsl
mov
sti
rclb
and
push
les
mov
popa
movsl
loope
jnp
xor
jae
push
add
xor
adc
add
push
rcrl
fdivs
push
out
add
adc
sub
pop
jbe
insl
ja
mov
pushf
jnp
lock
rolb
push
dec
scas
push
jle
cwtl
iret
in
out
imul
add
lods
cmpsb
xor
mov
add
ret
mov
push
insl
pop
pop
pop
pop
cltd
dec
ja
hlt
ss
xchg
rolb
fnstenv
mov
pop
and
jg
and
sahf
add
add
imul
test
add
mov
add
int3
mov
and
data16
mov
mov
sbb
push
xor
je
sub
in
sbb
movsl
pop
cld
sbb
push
jb
aad
add
or
add
add
jno
xor
push
push
shlb
fcoml
mov
fwait
enter
cltd
sub
pushf
mov
std
movsl
xchg
or
pop
in
and
pop
pop
sbb
mov
mov
or
into
mov
dec
pusha
add
fidivrs
add
add
loopne
xor
insb
mov
aaa
inc
add
xor
add
lret
lret
pop
adc
cwtd
sbb
add
add
add
mov
les
insl
push
in
adc
sub
push
cmp
sbb
adc
mov
dec
loope
test
jb
xchg
mov
push
rolb
arpl
inc
icebp
push
jg
adc
aaa
xor
movsb
lcall
fcompl
mov
mov
negl
addb
les
jecxz
add
mov
lock
clc
jb
pmaxub
and
xor
add
add
lcall
jg
les
jbe
mov
popa
cmp
mov
pop
lods
test
pop
add
add
add
mov
mov
mov
cmpsl
stos
or
pop
les
dec
int
or
push
fs
sub
arpl
stos
cli
adc
inc
cwtl
mov
add
test
js
xor
dec
jbe
imul
scas
lret
dec
test
and
aad
xor
enter
cli
or
cmp
add
iret
push
in
sub
mov
mov
sahf
pop
jns
pop
outsl
dec
adc
mov
pop
cmp
ss
ja
cmp
out
xchg
and
add
push
pop
pop
sti
cmpsb
sbb
pop
sbb
pop
addb
insl
inc
add
mov
add
popa
adc
call
les
jp
inc
dec
xchg
aas
cwtl
jns
add
mov
push
mov
add
or
inc
add
std
cmp
mov
cmc
sbb
add
xor
or
add
andl
movb
in
xchg
sti
les
mov
xor
adc
jmp
jb
sbb
fwait
xchg
test
add
dec
aad
dec
test
xor
push
xchg
mov
mov
xor
xchg
jmp
push
push
jbe
sbb
loop
movl
jbe
push
jbe
sbb
inc
pushf
pop
mov
add
sbb
cmp
shrl
std
inc
popf
insl
cmp
fsubrl
test
daa
popf
arpl
cmp
cmp
dec
mov
mov
mov
add
int3
jns
mov
xor
dec
bound
movb
pop
hlt
push
and
jb
xor
inc
add
jne
insb
out
fsts
dec
jnp
test
mov
aam
sub
mov
bound
mov
stos
adc
sbb
xor
mov
fldt
jnp
mov
mov
add
push
mov
push
jbe
mov
push
sti
es
orl
add
sub
xlat
push
mov
repnz
jae
sbb
mov
inc
jae
push
push
dec
pop
popf
out
stos
and
out
and
sub
mov
fdivl
mulb
xchg
sub
out
jmp
test
add
push
bound
insl
movsl
out
lock
or
cmpsl
addb
add
cmp
iret
mov
cmpsl
mov
and
jno
xchg
jecxz
xchg
fisubrs
pop
xor
xor
jne
fistpl
sarl
sarl
mov
std
mov
push
sbb
push
cmp
mov
adc
xor
mov
xor
push
mov
push
or
out
xchg
xor
loopne
test
mov
xlat
cs
and
mov
lret
add
loop
int
bswap
xor
xor
mov
pop
in
mov
inc
push
addb
xchg
inc
es
loop
xchg
sarl
adc
adc
jae
leave
pop
test
sti
frstpm(287
mov
popa
pop
mov
outsb
mov
test
mov
sti
jb
aam
jns
stos
cltd
sbb
in
add
adc
push
add
icebp
dec
sub
das
aaa
pop
repz
fsts
add
lock
std
push
mov
inc
add
mov
jle
mov
pop
cmpsb
adc
inc
add
pop
stos
inc
jge
outsb
push
push
cmc
filds
xchg
lret
cmc
push
add
jmp
add
dec
or
addb
xchg
aad
mov
outsl
loope
xor
push
testb
mov
jae
inc
adc
sub
fsubl
out
popf
mov
addr16
cmp
pushf
push
or
mov
xor
add
sbb
sti
out
jno
mov
je
cli
nop
cmp
test
and
mov
sbb
lock
movsb
fucomp
mov
add
jle
adc
xlat
sub
lahf
out
jb
sahf
mov
add
and
stc
dec
mov
mov
jb
xchg
out
test
imul
adc
imul
movsb
cmp
out
add
push
fcoms
out
xchg
jo
adc
or
sub
pop
rcrb
jne
push
or
mov
enter
add
les
mov
lea
rolb
roll
jg
xchg
repz
sti
cmp
addr16
dec
jg
xchg
dec
je
mov
xchg
gs
je
cmp
add
jne
imul
pop
imul
idivl
scas
negl
xor
fldenv
mov
dec
enter
pop
push
and
mov
mov
inc
adc
pop
and
rcr
xchg
stos
push
mov
mov
sbb
shll
pusha
add
lods
arpl
js
mov
aas
loope
stos
ss
adc
xor
cmpsl
in
pop
addb
add
shrb
mov
add
cmp
xchg
adc
outsl
jge
adc
sarl
or
push
popf
in
push
xchg
fldl2t
jp
and
pop
icebp
test
inc
dec
subl
movb
mov
mov
pop
mov
mov
mov
and
jmp
addb
hlt
push
sub
icebp
jp
add
xchg
aam
xchg
icebp
push
negl
push
add
rcll
jg
xchg
sub
cwtl
test
mov
add
ds
shl
jne
testb
cld
in
loope
cmpsl
int3
lods
stc
mov
mov
push
push
add
and
ljmp
aas
push
jmp
and
fwait
nop
inc
add
mov
aad
cmp
je
movsl
adc
jno
mov
test
aam
xchg
jo
add
mov
xchg
test
jo
jge
inc
pop
out
inc
fidivl
pushf
jno
mov
call
lods
imul
add
rcrl
out
ja
inc
es
and
sub
add
sub
cwtl
mov
sub
jno
insl
or
lcall
jb
leave
adc
cmp
xchg
out
cmpsl
mov
dec
pop
mov
daa
sub
rolb
sub
ret
sub
insl
mov
cli
mov
add
add
dec
adc
jg
pop
pop
lcall
push
add
add
mov
inc
notl
pop
mov
repnz
in
outsb
jae
lret
sub
lods
call
xor
aam
xor
lds
arpl
shrl
mov
pop
push
hlt
lret
add
aam
add
xchg
or
lret
push
sub
lret
arpl
mov
xchg
call
int3
ja
rolb
jmp
paddd
fildll
push
push
inc
push
add
pop
adc
add
lret
inc
fisttpll
mov
fstp
sub
add
xchg
ret
cmp
adc
add
sub
inc
add
setb
push
les
mov
addb
mov
add
lret
fimuls
test
rolb
pushf
jae
adc
dec
int3
push
test
mov
pop
jns
xchg
sub
jl
push
jnp
cmpsl
cltd
pop
mov
fnstcw
test
add
add
cltd
fldenv
add
sub
push
stos
enter
add
pop
lea
aam
mov
xlat
push
adc
sub
cmp
xchg
push
mov
fwait
js
mov
imul
cwtl
pop
lods
push
iret
cli
mov
or
sub
mov
cmc
jb
loop
mov
shlb
sarl
lret
sbb
push
mov
rcr
pusha
add
enter
push
adc
cwtl
pop
pop
pushf
loop
shrl
addb
add
ret
hlt
xor
add
mov
lret
aaa
stos
jo
out
inc
add
jmp
sub
jmp
jbe
pop
in
mov
dec
das
xor
cli
mov
and
cmp
cltd
mov
ljmp
adc
pop
xchg
push
outsb
mov
sub
inc
xor
add
aad
cli
and
push
add
fldcw
ds
xorl
pop
movb
pop
add
int3
jg
rcl
ljmp
nop
out
push
mov
push
adc
lds
decl
and
clc
shrb
adc
jmp
jns
mov
stos
sti
or
xchg
ljmp
shll
cmc
mov
add
jns
pop
mov
stos
add
test
out
add
mov
jae
daa
add
or
sub
in
pop
fs
shlb
mov
adc
inc
aas
sub
pop
jbe
ds
xchg
aas
sub
mov
add
xor
pop
hlt
inc
add
sbb
lds
sldt
push
cmp
popa
xchg
cmp
or
sbb
sbb
test
mov
cli
inc
add
cmpsb
in
xchg
mov
push
mov
int
sarl
addb
stc
inc
xchg
mov
mov
sbb
jae
push
sbb
fldln2
jg
add
adc
ja
xchg
je
mov
or
mov
loope
jle
movsb
int
fidivl
mov
cmovge
int3
movb
rcrb
les
les
scas
jns
fbstp
cltd
xchg
mov
in
pushf
ja
nop
xor
into
outsb
dec
mov
jno
adc
or
lods
sbb
and
cmp
mov
jno
movsb
insb
mov
or
add
ret
out
push
mov
cmp
xlat
cmp
cwtl
ficoml
or
es
add
ljmp
shll
pop
incb
or
jnp
add
das
nop
nop
and
ljmp
add
repnz
cmpsb
test
stc
mov
add
jbe
xor
lcall
jnp
hlt
lcall
lock
mov
das
xchg
cmp
decb
shrl
shr
test
cmp
mov
jno
mov
lret
mov
add
adc
addr16
jb
ret
rcll
mov
ret
addb
ds
lea
outsb
inc
add
pushf
lcall
pop
adc
hlt
ret
out
dec
adc
or
pop
sti
out
iret
test
and
mov
sbb
lods
push
jmp
movb
addr16
and
mov
fimuls
cmp
addr16
jp
mov
sbb
jmp
cmp
scas
test
cmp
add
daa
sbb
push
test
imul
cmp
shrl
jo
add
sub
fisttps
out
push
add
rcrl
enter
jae
cmpsl
rcr
mov
clc
dec
cmp
jl
int3
movb
mov
jb
arpl
es
add
pop
pop
popf
addb
mov
and
and
ds
mov
inc
add
xchg
loop
pop
xchg
roll
xchg
dec
dec
mov
mov
clc
ds
push
out
outsl
imul
jge
fidivs
pop
sub
mov
dec
pop
mov
js
enter
push
sub
and
mov
cltd
outsl
adc
mov
js
aas
pop
or
add
push
int
in
jne
loopne
push
addb
je
ret
iret
xchg
add
popa
xor
push
int
and
lahf
aaa
sub
daa
adc
add
pop
out
int
push
cmpsb
lds
insl
ret
ret
add
pop
mov
jl
inc
add
fiaddl
in
ja
add
into
pop
hlt
jnp
sbb
mov
mov
es
inc
add
xchg
je
enter
add
sti
mov
dec
pop
lds
int
sbb
pusha
add
sub
lea
inc
sub
es
mov
arpl
push
fists
mov
aad
aam
push
add
jge
jle
sub
add
out
mov
in
in
popf
adc
xor
cwtl
or
les
lcall
pop
and
test
bound
sbbl
lret
clc
mov
add
out
pop
jp
repz
and
bound
mov
aad
add
sbb
mov
add
cmpsl
mov
pop
outsl
pop
push
add
sbb
sub
push
pop
sbb
in
push
ret
and
out
movsb
push
test
mov
movsb
xchg
shlb
rolb
sahf
mov
addr16
dec
adc
lock
push
or
mov
or
xor
sahf
cmpsl
gs
sub
lahf
arpl
fiadds
push
lock
xor
xlat
jp
imul
scas
mov
divl
mov
add
xor
pusha
add
add
inc
add
loope
and
in
xlat
push
not
cmp
add
jmp
add
add
outsb
bound
dec
mov
pop
jns
fdivl
or
jge
fwait
push
and
test
push
mov
loopne
leave
aam
push
int
popf
dec
addb
ss
jmp
ja
xorl
add
inc
xor
xor
inc
dec
in
outsl
jmp
sahf
popf
jg
push
aam
addb
jnp
add
out
outsl
ss
mov
ret
lret
and
pop
adc
and
or
lcall
add
add
cmp
jae
insl
adc
dec
lahf
mov
adc
out
sub
or
inc
add
push
add
mov
test
dec
sahf
pop
sti
mov
adc
jb
fidivl
imul
fstpt
leave
loope
push
add
mov
xchg
inc
add
pop
mov
push
xchg
loopne
sub
mov
mov
or
in
rcll
dec
out
add
jne
pop
xchg
inc
xor
bound
leave
repnz
push
das
mov
xchg
and
add
fists
lahf
dec
mov
push
mov
mov
xchg
mov
mov
les
xor
xchg
add
mov
repnz
fstpl
fidivrs
icebp
dec
pop
mov
mov
and
xor
cmp
pop
ret
cwtl
mov
add
xchg
popf
xchg
fdivs
outsb
add
outsl
shll
inc
add
mov
imul
add
gs
shl
sbb
and
popl
xor
mov
jae
adc
push
mov
js
movsb
xchg
js
ljmp
movb
roll
aam
leave
std
push
sbb
mov
outsl
xchg
loop
incb
jge
dec
outsb
bound
xchg
dec
addl
in
ficoml
je
decb
mov
and
or
xor
push
pop
cmc
out
jg
push
addr16
inc
lds
add
imulb
sub
add
movsl
xchg
jnp
lcall
sub
mov
mov
cmp
dec
jp
add
and
mov
jg
cmpsb
xor
ret
jp
pop
pop
lret
cmp
push
mov
or
dec
push
sbb
adc
aad
scas
sub
sbb
xchg
add
mov
cwtl
adc
sub
add
movsb
pop
ja
lods
hlt
pushf
lahf
scas
fsubl
add
movsl
dec
push
scas
sbb
jge
call
hlt
addb
shlb
pop
sub
adc
insl
aad
jle
fbld
dec
jns
lret
cmpsl
pop
jle
imul
daa
and
push
in
add
mov
enter
mov
and
popf
pop
lods
je
ss
inc
add
sbb
mov
jecxz
add
aas
lret
add
js
adcl
add
inc
xchg
ljmp
push
add
sbb
iret
lods
xchg
seta
mov
addb
push
scas
add
mov
mov
dec
lahf
sbb
sahf
in
sub
sbb
lock
xor
add
pushf
dec
dec
pop
leave
stos
out
test
in
push
xchg
cli
scas
stc
lahf
mov
mov
xor
lahf
jmp
sub
lcall
in
icebp
cld
mov
int
add
sbb
bound
push
pusha
add
lret
jbe
scas
nop
pop
xchg
into
mov
pop
cwtl
jmp
jno
add
lock
adc
ljmp
je
add
out
aas
mov
add
xchg
jbe
lahf
roll
loope
xlat
lea
dec
fdivrl
iret
movsl
call
testb
sbb
add
mov
add
pop
ss
mov
add
adc
adc
sub
dec
lahf
xor
pop
dec
add
sub
out
or
jge
imul
test
fldcw
cmp
inc
or
int
jo
fwait
mov
add
ds
jmp
add
add
lahf
call
inc
add
pop
iret
fldl
add
adc
and
imul
ss
pushf
mov
add
cli
int3
loopne
adc
push
jne
lea
cmp
push
mov
jae
stos
repz
mov
lret
inc
ljmp
jns
inc
add
jne
mov
aaa
push
add
mov
lods
add
cmp
stc
lds
mov
ficompl
jle
sbb
ja
xchg
loopne
je
mov
notl
add
imul
adc
xor
addb
dec
and
cmp
addb
inc
add
jns
imul
add
inc
jae
xchg
sahf
lret
xor
jmp
push
adc
popf
jl
outsl
add
rolb
lods
fwait
inc
add
je
sarl
pop
clc
fsubs
lods
xor
fwait
jge
je
add
and
mov
clc
paddd
je
popw
xchg
ljmp
aam
lea
mov
add
and
sub
bound
and
xchg
xor
mov
add
movb
std
push
dec
in
mov
jns
addb
lcall
mov
pop
loop
fistl
dec
push
popa
mov
inc
xchg
pop
sub
xchg
push
mov
xchg
lea
aam
mov
mov
out
jb
aas
xlat
addb
or
jo
mov
jo
insl
push
xchg
add
pop
pop
push
jmp
jb
imul
mov
push
mov
adc
add
sbb
sub
inc
loop
add
popf
popl
fs
add
dec
mov
enter
jp
sbb
lcall
add
jo
jbe
xchg
jmp
pusha
add
inc
lret
push
and
call
add
in
arpl
es
pop
fdivrs
add
addr16
aaa
movb
mov
stos
and
test
ret
dec
sbb
imul
je
aaa
pop
add
xor
jne
fwait
xlat
mov
add
xchg
pop
lahf
rorb
dec
push
ja
xorl
add
add
xor
push
daa
bound
xchg
push
cmpsb
aaa
pushf
mov
xchg
cmp
out
movl
sub
mov
mov
xchg
dec
push
add
add
stc
fsubrs
stc
dec
jmp
push
stos
repz
fiadds
jmp
xchg
addr16
pop
mov
dec
negl
xor
mov
mov
inc
pop
sbb
jl
in
xchg
sbb
cmp
rorl
jmp
mov
jg
add
add
add
or
inc
add
in
push
ficompl
das
add
mov
lret
add
add
or
in
aad
push
cld
dec
or
or
add
rorb
add
movsl
imul
loopne
fildll
icebp
xchg
pushf
scas
in
and
mov
add
add
in
outsl
imul
gs
cmp
xor
dec
dec
adc
xor
add
data16
adc
adc
loop
test
push
cs
xchg
lret
cwtl
into
push
adc
ret
sbb
add
adc
lock
sub
mov
jp
add
fmuls
ffree
push
inc
add
negl
roll
sub
lcall
cmp
mov
or
add
pop
dec
pop
fidivrs
add
in
rolb
dec
mov
push
mov
sbb
jl
jb
add
ljmp
and
popf
dec
out
push
mov
adc
mul
js
je
cmpsb
push
repnz
mov
sbb
or
in
adc
stc
cmp
shr
mov
mov
sub
mov
imul
lds
std
or
bound
outsb
xchg
fwait
repz
addr16
xor
push
mov
jns
fcmovne
cmc
inc
sbb
add
pusha
add
pop
jae
mov
jno
sbb
lods
mov
mov
add
test
xchg
js
ja
rorl
mov
push
sti
xchg
popf
adc
je
in
mul
pushf
enter
rolb
sub
movsl
cmpsl
mov
fsubs
imul
cli
andl
xchg
pop
pop
mov
cmp
push
or
cltd
mov
insb
push
add
cmp
les
ds
or
addb
cmc
rolb
lret
lock
add
lds
std
or
call
mov
add
jmp
xchg
push
test
mov
push
inc
add
je
add
mov
and
inc
add
jo
add
dec
xchg
cwtl
clc
adc
sbb
lcall
loop
cwtl
les
loopne
inc
add
stc
jbe
lret
rcr
lret
nop
in
add
add
add
xlat
movsb
add
xor
dec
call
pop
adc
sahf
and
les
lea
enter
ret
imul
jecxz
add
push
fidivrl
mov
int3
or
lock
outsl
jmp
xchg
dec
adc
mov
aaa
cmp
mov
jno
cmpsb
cmpsb
lock
insl
aam
es
popf
outsb
shrb
movb
pushf
dec
push
pop
push
ljmp
outsl
push
mov
imul
dec
in
lret
inc
add
xlat
movb
push
xor
out
addb
mov
adc
test
out
and
adc
ds
mov
arpl
arpl
es
cli
adc
jecxz
or
cwtl
add
cli
imul
xchg
outsb
mov
in
testb
aaa
andl
and
aaa
xchg
dec
shrl
inc
scas
into
ja
or
xchg
xchg
xor
loopne
cld
pop
inc
adc
roll
test
add
addb
xchg
jbe
daa
adc
adc
lahf
aas
mov
push
into
jnp
xchg
jge
add
enter
rolb
sub
mov
das
je
repnz
in
jmp
and
sbb
pop
pop
add
lea
mov
add
sbbl
pushf
stc
or
dec
xor
mov
call
mov
jns
add
mov
xor
pop
sub
mov
lcall
test
adc
push
and
xchg
mov
xchg
push
add
js
and
das
mov
ja
dec
push
cltd
imul
mov
mov
pop
sbb
lods
pop
sub
mov
xchg
int3
xchg
sbb
aad
mov
not
mov
mov
add
popa
push
pusha
add
insl
idivb
adc
scas
sub
sbb
xor
push
mov
jp
add
jp
in
outsb
leave
mov
jmp
mov
jg
pop
lds
lds
imul
fcoml
mov
cmp
jne
xchg
xchg
jg
push
adc
arpl
ds
imul
les
aaa
dec
mov
hlt
lcall
mov
lods
push
test
jnp
stc
bswap
rclb
bound
ret
and
cmp
add
movsl
loop
or
mov
loop
adc
pop
dec
rol
add
popf
lock
je
data16
in
xchg
aaa
cmpl
xchg
std
mov
repnz
pushf
jmp
scas
daa
xchg
leave
lret
loopne
test
enter
dec
mov
jecxz
nop
mov
add
out
jns
mov
cltd
pop
scas
add
loopne
mov
xor
adc
rclb
add
mov
sub
mov
push
mov
inc
add
cmp
and
out
pop
push
hlt
mov
mov
daa
fstpl
int3
jle
cmp
scas
or
mov
outsl
repnz
add
add
cmp
popa
std
arpl
xorl
xchg
xchg
cmp
fildll
jle
popf
cltd
or
jmp
cmp
dec
scas
or
shlb
or
add
pop
cmp
add
rol
std
dec
and
nop
jle
inc
add
in
lock
cmp
add
lods
add
mov
adc
cld
das
push
cld
sub
sbb
imul
mov
movsl
add
sbb
jne
stos
ret
mov
add
fcomi
subl
sbb
xor
and
pop
out
xchg
mov
lret
push
addr16
mov
pop
push
mov
cmpsb
mov
push
xchg
jne
xor
adc
jmp
lcall
or
xchg
test
pop
js
mov
lods
cmp
shlb
xchg
mov
cmp
fcomps
imul
and
push
adc
mov
cmovp
add
arpl
js
call
addr16
ss
add
xchg
repz
xchg
sub
or
jmp
lea
aas
xor
sub
mov
int3
mov
pop
dec
ret
addb
sub
jmp
adc
ror
mov
sbb
adc
and
xchg
mov
xchg
out
add
mov
mov
inc
add
jae
push
repz
or
xchg
sti
add
xchg
or
fwait
aas
addb
stos
sbb
add
add
cmpsb
add
cmpsb
inc
fsubl
push
shrl
mul
xor
mov
mov
jo
add
xchg
mov
jecxz
lea
fists
push
and
lea
mov
fwait
fucomip
scas
push
repz
and
mov
add
or
xor
ja
pop
loop
push
add
in
iret
lahf
dec
mov
dec
ja
imul
mov
add
jge
jo
sbb
mov
add
add
push
es
test
inc
add
cmovs
loope
push
or
xor
stc
jnp
outsl
roll
add
mov
xchg
or
sub
ds
add
push
out
mov
or
incb
in
pxor
aas
neg
jno
add
jno
inc
nop
sbb
bound
bound
js
push
add
dec
push
les
add
xchg
mov
imul
pop
fucomp
adc
add
pop
fidivrs
mov
fidivs
mov
jo
pop
test
adc
add
or
mov
addb
gs
dec
faddp
add
arpl
xor
adc
xor
jmp
psubq
fisttpl
and
jo
pop
and
sub
rolb
add
and
add
popa
sub
in
int
stos
adc
add
cmp
ss
jb
cmp
lods
inc
add
arpl
stc
xchg
shrb
pop
lock
or
sbb
add
fcoml
and
mov
call
scas
cmc
fucomp
jns
xor
mov
popa
jmp
bound
dec
lock
xor
or
les
xor
idivb
xchg
xor
rolb
jns
imul
mov
scas
inc
add
xor
dec
sbb
inc
add
out
lahf
popa
data16
push
movsl
fcmovbe
ja
cli
stos
and
in
out
nop
or
add
cli
pop
in
aas
clc
test
add
cmpl
cmc
xchg
xchg
fcompp
outsl
push
pop
out
jecxz
out
cmc
imul
lds
pop
in
and
fcoml
xchg
mov
out
or
mov
jmp
dec
adc
fisubl
stos
cld
adc
movb
adc
push
push
sub
push
addb
sarl
in
scas
pop
or
cmp
jbe
add
sarb
es
add
cmp
xlat
mov
and
pop
data16
mov
rolb
sahf
movsb
addl
xlat
inc
jbe
loopne
aam
xchg
shl
dec
xchg
cmpsb
int
xor
movsl
test
inc
add
add
sub
add
pop
sbb
xorl
pop
mov
sahf
fadds
pusha
add
mov
add
mov
jno
es
mov
cli
jo
cmp
loop
pop
inc
sub
push
fs
sbb
pop
lret
cmp
cmp
add
sbb
xor
sub
dec
es
push
add
sub
pop
icebp
xchg
scas
or
add
imul
sbb
pop
ret
pop
out
cli
arpl
add
arpl
mov
add
add
mov
nop
sub
imull
lds
lahf
inc
add
popa
push
scas
push
in
enter
rorl
cld
mov
adc
arpl
mov
add
jg
ljmp
iret
js
mov
jbe
pop
clc
xor
add
imul
xchg
mov
mov
pusha
add
aas
push
scas
xor
scas
lahf
rolb
add
and
into
fsubs
jbe
loope
cmpsl
in
jecxz
push
das
jns
jne
jbe
loopne
cmc
ror
fmull
and
jecxz
sub
add
mov
loop
repnz
clc
pop
dec
pop
inc
add
push
mov
addr16
btr
js
cld
mov
mov
xlat
sar
lahf
dec
pop
in
loopne
fsubrs
je
cmp
cs
sarl
mov
popf
mov
rolb
stos
aaa
mov
aam
add
decb
imul
cmp
xor
add
fbstp
pop
stos
dec
dec
test
cwtl
fwait
xchg
xchg
jne
imul
jns
addr16
lret
les
loope
jne
mov
jne
inc
movsl
addr16
dec
aaa
inc
add
scas
loopne
in
pusha
add
pushf
aam
mov
mov
dec
add
ficomps
xor
ds
add
dec
cmp
xchg
cmp
push
jnp
leave
std
lods
or
loopne
daa
dec
insb
push
xor
sub
divb
jb
add
pop
hlt
cmpsl
xlat
inc
add
sahf
sbb
test
add
rclb
arpl
lods
xor
imul
stos
sbb
lea
xchg
imul
xor
xor
xchg
inc
add
lods
inc
add
cwtl
call
lcall
jno
mov
xlat
sub
pop
pop
jge
jle
je
pop
js
adc
cmp
adc
fsubrs
hlt
jp
mov
cmp
add
stc
mov
hlt
adc
into
cwtl
iret
add
mov
push
inc
add
or
cmp
push
mov
repnz
add
mov
loopne
mov
sti
aam
mov
nop
jbe
add
je
push
mov
add
adc
sbb
outsb
sbb
add
fnsave
add
mov
add
and
mov
mov
push
outsl
xor
test
mov
add
pop
loop
add
mov
add
fsubs
mov
enter
dec
jmp
xor
mov
aad
sub
add
rolb
xchg
mov
out
cmp
les
ds
imul
or
xor
jb
loope
add
rorl
mov
sarb
and
fists
pushf
dec
push
dec
repz
pop
roll
mov
xchg
int3
inc
add
pop
xchg
cmp
push
xchg
fsubrs
sarl
call
xchg
adc
mov
data16
push
cwtl
rolb
cmc
pusha
add
test
mov
add
pop
mov
lret
dec
xor
rolb
dec
xchg
mov
xchg
fcoml
push
sti
lds
inc
add
movb
push
or
ret
pop
jno
add
addr16
insb
dec
push
push
mov
add
jl
mov
dec
push
inc
push
stos
push
es
sarl
ja
mov
scas
or
mov
add
push
add
jae
xchg
or
pop
inc
adc
add
cli
mov
add
arpl
push
in
cwtl
and
fwait
jo
xchg
lds
addb
mov
enter
imul
cmpsb
mov
add
fsubrs
scas
rcll
pop
in
add
popa
xchg
xchg
or
add
push
popf
dec
divl
adc
xchg
inc
insb
loopne
pop
dec
dec
mov
nop
mov
iret
fists
fistps
push
and
adc
rolb
push
mov
fisubrl
mov
mov
add
xor
les
jnp
rolb
push
ret
sbb
data16
jecxz
jne
popa
add
dec
lock
into
rorl
cmp
mov
push
ss
cmpsl
into
adc
rolb
movsl
jb
cmp
push
inc
inc
outsb
xchg
ret
ret
mov
fwait
add
inc
add
mov
add
cmp
rolb
pop
push
add
cltd
cs
in
mov
dec
aam
fsubrl
lret
aad
add
fcoms
aam
stos
es
aas
adc
or
sbb
add
jbe
push
adc
inc
add
xor
fldt
lods
scas
lret
pushf
xlat
sub
call
test
dec
ss
idivl
and
mov
mov
loop
loope
jmp
call
stos
pop
push
add
fidivs
pop
add
aaa
lods
add
xor
mov
or
cltd
xor
in
imull
dec
je
add
mov
add
shr
in
stos
or
test
jo
adc
addb
sbb
out
add
mov
pushf
loopne
add
xchg
mov
insl
dec
or
test
add
add
adc
adc
mov
cwtl
test
adc
mov
ds
inc
add
inc
mov
lock
add
lods
nop
dec
sarb
inc
scas
xor
in
lods
add
ret
loop
adc
sbb
xchg
xor
out
push
xor
sub
mov
cmpsb
push
jg
pop
ljmp
in
xchg
iret
lfs
jg
in
mov
xor
inc
fsts
sub
dec
xor
notb
ret
std
mov
cmc
jg
fwait
movsb
pop
fcomps
pop
aas
addb
adc
mov
lea
jg
add
inc
or
ret
add
movsb
sbb
flds
mov
xchg
sbb
cli
or
enter
add
loopne
js
add
hlt
cwtl
pop
mov
add
imul
jmp
fildll
xor
jno
xchg
sbb
pop
sub
loop
addb
xchg
dec
adc
call
cmp
test
and
adc
stc
adc
add
cmp
cltd
mov
xchg
cmc
jo
addb
in
mov
out
bound
jnp
cmp
scas
ficompl
rclb
add
or
sbb
cltd
xchg
insb
xchg
ret
adc
pop
mov
pop
nop
les
sub
insb
int3
adc
dec
dec
adc
push
and
cli
sar
ljmp
mov
jg
aam
dec
fadds
push
mov
in
lcall
add
add
inc
add
pop
ret
rol
add
ret
jbe
xchg
insb
dec
mov
xchg
dec
out
mov
test
movsl
mov
jo
mov
movsl
mov
pop
push
fcompl
inc
add
push
xor
inc
cmp
orl
stos
xchg
insl
add
sub
jae
add
ss
inc
mov
or
add
mov
das
fnstcw
aas
lea
hlt
fistl
cmpsb
sbb
jb
cmp
dec
fwait
pop
addb
add
ucomiss
das
aad
fildl
adc
or
and
es
lods
pusha
add
stc
fsubrs
add
cmpsb
jle
cs
adc
gs
add
sahf
stos
idivl
inc
dec
lock
sbb
add
mov
pop
out
xor
jns
adc
les
or
and
lret
cltd
sbb
xor
lret
lock
dec
scas
daa
xchg
mov
mov
mov
and
addb
outsb
cli
jecxz
inc
add
inc
xor
faddl
jb
insl
mov
adcl
data16
add
in
mov
add
movsl
aas
ljmp
ret
stos
sbb
mov
arpl
push
add
fisubs
add
mov
jl
mov
cmp
mov
int3
out
add
mov
mov
adc
fsub
lahf
pop
sub
pop
les
out
push
cmp
sub
push
add
jbe
add
scas
xchg
jae
adc
sub
sbb
jp
fsubrl
mov
mov
jnp
add
sbb
insb
mov
in
int
adc
and
movsb
xorl
fisttpl
mov
inc
add
test
lret
shll
cmpsb
sbb
or
jnp
add
add
xor
popf
or
imul
xchg
push
dec
xchg
and
shlb
std
mov
mov
test
mov
push
add
xor
addb
hlt
mov
scas
push
shrl
pop
mov
je
ret
jmp
xchg
jge
test
mov
cltd
lds
clc
mov
xor
xchg
inc
cmp
mov
cli
pop
loopne
lods
es
addr16
cmp
mov
outsb
pop
sbb
mov
mov
scas
jmp
mov
mov
call
insb
mov
lcall
dec
jmp
test
jns
int3
ljmp
add
mov
scas
cwtl
push
xor
and
popa
imul
jns
ror
daa
or
test
lods
xor
fstl
adc
push
lods
or
fcmovne
rcl
jl
add
mov
add
add
jne
out
pop
test
push
add
sarl
dec
push
xchg
cmp
add
adc
cltd
xor
lds
dec
add
add
cli
or
cs
sub
movsl
pop
mov
and
and
add
arpl
enter
lds
ss
xor
mov
shlb
ret
and
lahf
es
cmp
jo
push
mov
add
sbb
inc
add
test
out
jo
pop
cmp
inc
add
clc
movsb
cmp
cmp
loopne
push
ss
in
xchg
inc
add
ficoms
add
cltd
out
or
inc
subl
jle
stc
xor
add
adc
call
ss
xchg
int3
mov
add
jle
and
test
mov
dec
xchg
sub
lret
mov
xor
add
jge
ljmp
mov
inc
add
aad
mov
xor
lods
and
nop
movb
or
mov
pop
mov
lds
shlb
pop
icebp
in
mov
gs
pop
mov
jl
jecxz
push
pop
pushf
push
and
in
mov
pop
fiadds
jno
nop
sbb
sub
les
imul
outsl
les
pop
xor
and
or
pop
mov
iret
jle
rcrb
dec
add
mov
in
mov
sbb
fstpl
in
mov
sub
or
add
add
and
xor
mov
inc
or
pcmpeqw
mov
mov
std
loop
add
add
out
cld
movb
addb
sbb
sbb
jmp
mov
pop
and
dec
mov
lods
jbe
testb
xchg
scas
jnp
add
stos
inc
add
or
push
ja
add
jge
mov
imul
and
icebp
scas
xchg
mov
hlt
insl
inc
add
out
mov
sti
sti
popf
inc
pop
push
iret
incb
sahf
push
push
xchg
daa
xchg
or
sbb
cmpsb
jbe
add
xchg
mov
daa
xor
insb
push
or
mov
repz
pop
aad
mov
iret
dec
addb
mov
sahf
ja
xchg
cwtl
ds
cmp
add
sti
mov
jne
cmp
clc
arpl
mov
scas
test
rolb
ds
cmpsl
loop
jg
xchg
fs
out
adc
sub
or
cmp
and
popa
dec
nop
clc
mov
inc
sbb
mov
xchg
xor
cwtl
aad
clc
daa
mov
pop
cmpl
lret
mov
push
movb
insl
jl
sbb
push
jb
add
jb
mov
fisubs
lock
fs
add
repnz
lahf
adc
inc
outsb
div
repz
stc
sti
nop
mov
dec
xchg
test
scas
push
mov
mov
lcall
mov
mov
push
jecxz
dec
xchg
adc
cmpsl
add
into
cwtl
cltd
outsl
gs
gs
sub
rcl
mov
adcl
inc
ficomps
insl
mov
sub
xlat
lret
add
add
dec
aaa
fnsave
xchg
scas
sub
in
movb
les
daa
xor
dec
mov
adc
cmp
icebp
jge
adc
sub
enter
add
arpl
lods
xchg
add
testl
add
fdivrs
mov
cmp
pop
push
pop
dec
fimuls
dec
adc
jno
pop
bound
inc
add
adc
xchg
call
aad
scas
pop
addb
cltd
in
and
and
ret
pop
test
dec
out
mov
dec
stos
mov
add
and
fs
pop
fdivl
push
mov
add
fidivrl
dec
and
jb
cwtl
es
push
js
addb
add
lahf
lods
dec
mov
mov
mov
sti
xor
icebp
enter
scas
dec
pop
fistps
jmp
add
cltd
cs
xor
xor
orl
les
enter
bound
call
mov
rcrl
sub
pusha
add
pop
popa
addb
sub
mov
or
sub
hlt
jae
inc
add
pusha
add
mov
cmp
in
test
mov
les
pop
add
rolb
add
add
sub
out
sub
aaa
push
add
insl
mov
inc
add
pushf
lcall
mov
xchg
movsl
sub
lock
inc
add
stc
mov
out
inc
aas
rolb
mov
jl
jecxz
mov
lds
popf
int3
movsb
shlb
test
push
push
or
jns
es
icebp
cs
add
or
fsub
lret
rcrb
orl
gs
or
addb
lods
xor
lock
pop
xor
arpl
cltd
adc
sarb
push
mov
push
xorl
ja
in
xchg
jmp
xor
add
mov
xor
mov
push
mov
es
mov
mov
pop
mov
dec
push
movb
stos
cli
repz
inc
test
pop
in
add
mov
and
scas
test
icebp
mov
or
repz
xor
sbb
fsubr
jmp
rorl
stos
add
cmp
mov
out
pop
cld
push
jg
add
fwait
or
repnz
xchg
adc
xorl
cli
sub
pop
frstpm(287
lret
jg
dec
mov
add
dec
xor
imul
adc
mov
loope
add
mov
or
mov
push
bound
stc
add
sub
icebp
sub
rcll
push
sbb
pop
out
outsl
clc
insl
push
add
fs
pop
xor
xor
rorw
push
js
xor
jecxz
xchg
jg
push
clc
enter
push
imul
jae
js
fs
test
cmpsl
dec
xchg
sarb
adc
push
mov
push
loopne
push
dec
mov
dec
xor
mov
cvtdq2ps
add
inc
out
cmc
jge
sub
loope
mov
lea
or
add
ret
sbb
mov
outsl
push
test
cs
sub
pop
pop
add
bound
jl
pop
and
aam
and
jmp
mov
mov
gs
sub
add
jle
xchg
xchg
fists
cwtl
ljmp
lahf
stc
add
popf
push
and
int
lret
out
adc
fwait
push
mov
scas
and
pop
jecxz
popa
rcll
sub
js
add
movsb
adc
add
mov
xchg
sub
adc
push
inc
add
leave
hlt
cmp
std
mov
stos
jne
rolb
aaa
rolb
adc
lds
push
aad
adc
loopne
sbb
jmp
out
push
stc
sbb
pop
dec
shl
test
cmp
adc
mov
dec
and
cli
icebp
mov
int3
rolb
pop
cmpsb
sar
scas
mov
add
cli
dec
pusha
add
js
sub
fimuls
xor
lret
and
push
inc
mov
dec
or
mov
push
jno
js
lock
push
xchg
cmpsb
jb
test
pop
outsl
add
ret
cmp
pop
push
out
xor
fbstp
ds
clc
jb
pop
ss
add
into
jbe
sbb
cmp
fsub
xor
lods
addps
sub
add
iret
sahf
outsb
sti
ret
jle
cld
pop
and
ljmp
aam
mov
data16
lock
aam
pop
fwait
repz
dec
pop
popf
push
push
and
sbb
push
nop
mov
cmc
pop
mov
cmpsb
pop
jmp
inc
inc
add
push
and
add
add
add
adc
jb
enter
dec
sahf
into
addr16
push
addr16
cmp
lds
and
fs
mov
out
dec
adc
out
xchg
push
out
mov
mov
xor
shll
jne
push
add
push
addr16
add
pop
push
sbb
adc
jle
push
int3
das
dec
or
push
or
je
jl
push
mov
push
mov
mov
xorl
stos
dec
or
sub
add
fildl
je
cmpsl
repnz
mov
pop
or
jle
jbe
fists
enter
cmp
cs
nop
nop
xor
mov
or
or
sub
mov
mov
sbb
add
imul
sub
xchg
addb
rcl
jle
sub
rolb
pop
mov
push
jno,pn
repnz
pop
cltd
mov
les
loope
rcll
rcl
sahf
sub
aas
add
jne
xchg
add
das
mov
dec
ljmp
sub
mov
add
ss
jg
xor
sbb
pop
pop
nop
mov
jg
leave
std
cmp
cmp
mov
stos
mov
icebp
fcomps
jnp
shrb
mov
int3
or
ds
addb
les
shll
roll
popl
fists
sbb
sbb
out
inc
sub
les
movsl
xchg
outsb
fldl
mov
add
loop
repz
push
add
add
call
inc
jbe
dec
mov
out
push
dec
add
pop
adc
cmpsb
out
inc
push
addb
xchg
and
out
mov
lods
mov
jle
ljmp
sahf
mov
nop
loopne
and
sbb
xchg
xlat
scas
add
aaa
xchg
sti
cmpsb
dec
push
mov
jns
sarl
clc
enter
lock
add
cld
shll
pop
out
pop
push
divb
clc
dec
and
ja
ds
add
mov
add
pop
test
out
push
mov
xchg
jae
test
or
sub
xor
and
cmp
add
add
pusha
add
sarl
add
adc
cli
xchg
push
xchg
jmp
addl
xor
xchg
jmp
and
cmp
hlt
imulb
lcall
dec
bound
cmp
mov
jo
mov
add
add
insb
ds
int3
je
movsl
mov
fldt
lcall
imul
add
dec
bound
dec
das
andl
inc
add
fdivs
jg
add
lahf
lds
pop
jns
add
mov
sub
popf
push
add
dec
mov
lds
add
popf
fs
cmp
mov
jge
insb
addr16
mov
add
lret
rcll
aas
into
add
aam
out
pop
mov
pushf
and
mov
rolb
enter
imulb
lcall
xor
mov
inc
lret
push
xor
or
cmc
or
pop
lcall
pusha
add
add
fbstp
addb
xor
testl
in
pop
lods
fcoms
cmp
out
loope
cli
ret
cmp
cmp
std
ljmp
mov
add
mov
add
ds
adc
shrb
dec
testl
add
movb
scas
sbb
test
dec
leave
mov
std
mov
and
mov
xchg
add
sbb
insb
call
pop
es
add
add
add
sbb
outsl
ljmp
add
addb
jbe
push
jl
add
pop
sbb
push
aam
add
repz
cs
movsl
movb
cltd
negb
fwait
xchg
cmp
or
pop
rorl
fs
push
mov
pop
loope
ds
ret
gs
pop
addr16
fstpt
xor
popf
xchg
pop
fsubrl
lods
xor
xor
shll
mov
outsl
inc
add
in
addb
add
add
cli
cmp
jns
pop
sub
test
jae
or
mov
add
setb
add
add
clc
jecxz
ret
pop
jp
cmpsl
loope
cmc
pop
addr16
cs
outsb
jbe
testl
xor
inc
add
and
push
cmp
test
mov
jns
xchg
lahf
addb
push
outsb
inc
add
movsl
dec
cmp
addb
or
movsl
bound
fbstp
mov
jbe
lret
and
outsb
xchg
in
inc
jl
lcall
inc
imul
js
hlt
push
sub
pop
mov
or
fdivs
xchg
lods
adc
add
mul
mov
mov
cmp
add
push
sbb
inc
add
or
mov
int3
mov
in
adc
loopne
sbb
and
and
push
arpl
pop
stc
pop
lret
push
mov
jo
stc
subl
mov
aas
jle
push
cmp
negb
inc
ds
xlat
inc
add
add
sbb
out
insl
scas
movsb
pop
imul
push
push
jmp
mov
pop
leave
xor
adcl
push
cmp
scas
add
out
pop
inc
add
add
push
xchg
shlb
add
ljmp
loope
leave
jns
dec
jl
sub
add
dec
adc
or
xor
lret
or
jmp
jnp
addr16
stos
cltd
sub
cmp
add
js
mov
add
cmpl
dec
lcall
pushf
pop
sbb
mov
add
std
int
push
int
rorb
jnp
andl
cli
testl
push
push
jmp
add
mov
add
fadd
cmp
mov
stos
pop
xchg
cs
mov
test
ja
pop
into
pop
inc
and
sarl
fwait
sti
cli
jo
fsubs
cmp
test
loope
jae
xchg
xchg
lcall
addb
xchg
mov
and
ret
mov
jg
inc
add
addr16
mov
xlat
repnz
and
mov
fmul
xchg
push
popa
adc
add
push
cmc
addb
insb
adc
test
hlt
mov
sbb
sbb
lock
adc
lret
push
xor
pushl
cmp
iret
sbb
rorb
jnp
cmpsl
cwtl
mov
pop
adc
adc
add
mov
cmp
sub
add
sahf
and
push
add
mov
loope
add
les
jbe
cmc
addb
dec
push
mov
in
sub
cmp
pop
mov
add
insl
pop
pop
and
mov
xor
add
cli
jecxz
mov
or
add
enter
add
add
pusha
add
mov
lahf
mov
pop
xor
in
and
add
stos
push
add
add
push
cs
inc
add
push
jo
fstpt
cld
jle
add
add
sub
and
jno
ret
add
inc
add
add
imul
add
add
xor
mov
add
mov
mov
lock
sbb
pop
ret
addb
rorl
shll
adc
outsb
addb
icebp
in
xchg
inc
in
dec
mov
adc
push
xor
mov
fcmove
xchg
gs
xchg
fbstp
jg
and
push
dec
out
mov
xchg
fwait
mov
inc
add
mov
mov
add
in
aad
or
in
xchg
mov
add
outsl
jae
xor
add
add
add
mov
add
cld
shrl
add
mov
pop
dec
jnp
in
dec
jbe
repz
iret
or
negb
and
fdivr
push
push
jbe
pushf
popa
outsl
imul
in
movsb
cwtl
lds
add
add
sar
xor
dec
inc
add
cmp
stc
sub
enter
outsl
cmp
mov
sbb
xor
inc
add
push
insl
and
sti
mov
mov
movsl
fistps
cmp
lds
repnz
inc
inc
add
les
cwtl
xchg
cmpsl
ljmp
std
movb
inc
outsl
mov
push
xlat
push
add
dec
xchg
out
inc
imul
stc
shll
add
inc
add
jns
jmp
xchg
stos
mov
add
movb
push
std
ret
pop
inc
xchg
jge
pop
mov
xchg
pusha
add
mov
push
fidivrs
jp
gs
add
dec
push
add
fwait
sub
sqrtps
cmp
rcll
repz
inc
add
jae
push
add
cli
scas
mov
xlat
adc
fcomps
add
ficompl
or
push
dec
dec
jp
xor
rolb
aas
jecxz
pop
push
xor
in
adc
adc
jmp
add
push
adc
mov
aam
and
add
cmp
or
adc
js
scas
loope
div
pop
pusha
add
daa
xchg
dec
xchg
movsl
adc
addb
add
jnp
lret
push
add
jne
mov
lea
jle
mov
cmpsb
int
loopne
lahf
mov
movb
iret
insl
jbe
and
dec
cmp
test
add
loope
cmp
cmp
loopne
push
sbb
sar
pop
adc
sbb
mov
mov
mov
jp
mov
sahf
inc
jne
setl
sub
ret
test
sbb
divps
cli
or
xchg
test
add
aas
enter
adc
daa
sbb
std
test
popf
cmp
stos
push
les
fwait
pop
pushf
lea
mov
jb
or
xor
jne
xchg
insb
inc
add
movsb
ret
inc
add
add
pop
and
push
mov
rorl
pop
cmp
mov
push
mov
cwtl
hlt
lahf
xchg
decl
fimull
in
jnp
xchg
xor
xchg
inc
addl
mov
push
add
int
push
std
cmp
dec
mov
rorl
test
addb
inc
stos
lods
inc
add
loopne
push
adc
aas
sub
lods
lea
dec
ret
pop
sub
cltd
addr16
mov
add
add
mov
inc
add
arpl
mov
cli
fisttpll
lock
add
add
and
add
and
cmp
add
aam
cld
add
call
movsl
mov
or
add
hlt
popa
mov
xor
out
add
add
dec
imul
popf
xchg
sar
inc
add
mov
roll
mov
adc
cs
pusha
add
dec
xor
cwtl
sbb
cmpl
add
test
add
mov
lock
jmp
sbb
iret
arpl
add
int
lds
xchg
pop
xor
add
fisubrl
mov
inc
add
xchg
and
add
ljmp
subl
add
mov
lcall
rcrl
xor
push
add
mov
aad
fldcw
mov
pop
xchg
add
pop
xchg
stc
push
mov
inc
add
push
xchg
and
xchg
hlt
adc
add
mov
fmull
ljmp
cmp
mov
mov
mov
scas
repz
mov
pop
mov
xor
mov
out
mov
std
ror
sub
loopne
dec
mov
push
add
aam
push
lods
loope
add
or
mov
ficoms
nop
pop
insl
push
cmp
inc
add
data16
add
mov
adc
push
push
xchg
popa
mov
jns
add
or
and
adc
xor
add
mov
jb
lret
sbb
push
jl
iret
inc
add
sahf
fsubrp
scas
jno
xchg
aaa
sahf
fmulp
sbb
arpl
sbb
dec
aaa
pop
sbb
mov
bswap
dec
mov
data16
das
dec
inc
scas
movsb
inc
cmpsl
repz
popa
mov
inc
add
mov
fs
lahf
jbe
cmp
pop
dec
push
add
addb
and
popf
scas
cltd
cmp
call
clc
daa
lock
icebp
pop
sti
xor
adc
leave
add
inc
add
fsts
or
add
jae
push
push
adc
ja
sbb
into
sub
popa
test
xchg
cmp
adc
fidivs
out
cmp
repnz
push
inc
cmc
mov
and
das
xchg
int3
test
loop
push
je
insb
lret
js
add
add
push
jg
add
loop
add
xchg
call
pop
and
or
pop
nop
jecxz
xor
xchg
fst
cs
gs
hlt
lsl
xchg
push
cs
fldl
xchg
sub
decl
inc
loope
idivb
pop
jl
jno
pop
ret
repnz
test
mov
mov
sbb
adc
in
dec
sbb
add
pop
push
into
jl
fucom
dec
je
movsl
and
mov
add
les
mov
lcall
pop
inc
inc
add
add
addb
movb
fstl
test
xor
inc
cmpsb
out
pop
rclb
add
jg
enter
adc
sub
fstpl
out
dec
xor
and
mov
mov
adc
xchg
mov
sub
cmpsb
loope
or
push
xor
clc
ficoms
es
les
jnp
pop
cmp
mov
or
add
inc
cmc
test
cmpps
sbb
loope
sub
dec
mov
adc
loop
xor
lock
or
stc
inc
pop
pop
xor
cmp
mov
xchg
cli
ficoml
les
jmp
test
mov
add
cld
cmp
xor
jne
fisubrs
jl
mov
cld
and
xor
cmp
add
aas
aad
f2xm1
rcrb
push
pop
jo
aas
xor
mov
mov
jg
mov
clc
adc
mov
jo
lea
lds
pop
out
jno
xchg
jns
leave
mov
jecxz
imul
jo
mov
ficompl
xor
push
xor
add
imulb
xchg
xor
mov
add
test
ud0
mov
in
fdivrs
add
bound
inc
mov
lds
test
jl
add
in
in
cmpsl
ss
adc
in
jp
add
push
fisubrs
or
add
loopne
and
sub
push
push
hlt
mov
push
and
jmp
fsubl
adc
sahf
jbe
loope
bound
insb
xor
mov
add
jle
lret
dec
ret
xchg
and
mov
mov
mov
call
inc
nop
addr16
ja
lea
adc
dec
pop
inc
xor
aaa
adc
mov
cmc
ja
sbb
mov
push
nop
js
jnp
fisttpl
sti
mov
and
add
xchg
ja
mov
add
jle
test
mov
fsubrl
mov
xor
pop
shrb
sbbl
outsb
add
and
add
mov
cmpl
scas
add
mov
cmp
gs
push
jge
icebp
lods
ds
mov
add
adc
jno
addr16
or
sub
daa
iret
rcl
sti
pop
mov
xor
ror
popa
rcrl
cmp
sub
enter
lahf
and
dec
movsb
xor
push
and
add
xchg
pushf
lock
fiaddl
pop
jb
into
dec
push
dec
sarb
add
lods
out
push
stos
pop
mov
into
xchg
xor
test
or
mov
cmp
add
or
or
add
xchg
gs
mov
jge
test
jl
lods
call
and
js
hlt
cli
xchg
rorl
pop
xchg
xchg
cmc
inc
add
jbe
iret
mov
shrd
orl
lea
jno
mov
enter
pop
and
jns
cmp
aaa
jg
pop
daa
movsl
cs
add
cmp
xor
arpl
xor
add
pop
jae
add
test
bound
sbb
sbb
or
sub
shrb
imul
loop
jg
outsb
mov
mov
xchg
mov
push
addb
pop
into
xor
push
push
movb
add
mov
inc
fidivrs
inc
mov
pop
cltd
or
sbb
jg
rorb
out
dec
or
stos
and
adc
mov
push
outsl
push
movb
fsubl
push
test
in
rolb
jl
or
push
je
add
or
and
add
repnz
and
and
cmp
jp
jmp
push
js
add
xor
pop
cmp
push
push
xor
fwait
sub
loop
mov
pop
movsb
cmp
in
out
mov
add
clc
jg
and
cltd
shll
rolb
adc
push
pop
dec
movb
add
stos
jmp
ss
sbb
in
testb
sbb
or
adc
mov
add
aad
lods
pusha
add
imul
stos
pop
pop
pop
mov
mov
dec
sarl
jb
loop
dec
jmp
ret
shrl
fidivrl
mov
lahf
or
and
pop
ret
addr16
cmp
in
add
insb
and
fistps
sbb
or
add
mov
add
dec
xor
jge
cltd
xor
push
flds
fisubrl
sti
push
dec
mov
adc
cmc
cmp
scas
push
xor
hlt
aas
cmp
jae
rolb
mov
inc
vmovaps
add
jecxz
les
stos
adc
in
fnstenv
outsb
dec
scas
mov
inc
add
repz
scas
and
sbb
bound
mov
add
pop
adc
add
jne
movb
pushf
les
outsb
les
pop
jns
push
push
cmp
jb
out
xchg
mov
lcall
rolb
insb
clc
cmc
push
xchg
xor
inc
adc
cmp
and
leave
inc
sub
stc
scas
addb
sbb
leave
sub
icebp
in
clc
addb
xchg
jl
sbb
sahf
jne
inc
add
stc
push
push
add
popa
loope
add
xor
add
mov
popa
out
lock
cmpsb
sti
cmp
add
lret
mov
mov
jo
add
gs
notl
cmp
dec
push
roll
int
sahf
aam
mov
int
mov
frstor
add
shlb
pop
mov
fisubs
imul
in
add
mov
cmp
sahf
xchg
dec
movb
jg
sbbl
fsub
lahf
sub
test
pop
pop
add
fsubp
sub
jmp
add
adc
mov
ja
insb
daa
push
stc
movsb
mov
aad
push
add
repnz
push
jae
dec
lahf
icebp
and
dec
scas
cld
imul
pusha
add
pop
xchg
adc
or
test
xor
fisttps
sbb
stc
pushf
xor
push
mov
add
daa
and
pop
xor
dec
pop
mov
mov
add
inc
inc
adc
and
inc
add
and
push
sub
add
add
cmpsl
aas
cmp
add
mov
and
aad
xor
adc
add
lcall
mov
pop
jmp
pop
std
jb,pt
sub
sbb
jb
setge
and
or
inc
add
add
inc
mov
std
lahf
mov
mov
sahf
cmc
mov
sbb
mov
add
in
adc
test
ja
out
lret
bound
push
fwait
inc
add
add
add
cmc
dec
imul
mov
add
adc
je
push
icebp
xchg
ja
adc
sarl
pop
test
mov
movsl
sub
mov
inc
pop
mov
daa
leave
cli
cmc
pop
jecxz
call
mov
mov
add
movsb
mov
or
notb
aaa
lods
jb
or
mov
pop
je
test
add
add
lret
clc
je
lds
add
and
mov
push
leave
ret
or
lahf
lock
flds
add
jne
jns
mov
loop
xor
push
sbb
push
push
shlb
mov
jb
stc
jg
add
inc
add
or
lock
mov
cmp
in
mov
jae,pn
bound
fists
jnp
mov
mov
icebp
pop
ja
add
add
add
shl
mov
dec
add
pop
fmuls
enter
or
or
pop
add
std
push
js
sbbl
rorb
cmp
jl
xor
xor
out
aas
fbld
and
mov
and
jo
push
fwait
aaa
jnp
dec
xor
xor
xchg
adc
loopne
ja
clc
fwait
outsb
push
cmp
loopne
cld
rolb
sub
jns
lret
xchg
sub
adc
leave
jmp
lds
bound
mov
jo
or
xchg
adc
test
dec
fcomip
push
adc
sub
int
leave
push
push
push
gs
add
inc
add
pop
add
lods
sub
push
pop
mov
dec
clc
fcmovnb
add
inc
js
add
callw
repz
jne
imul
add
nop
mov
rorl
add
add
ja
xchg
and
addr16
xchg
decl
xlat
cwtl
mov
test
adc
mov
mov
sbb
dec
cmpsb
push
hlt
cmpsl
mov
lds
dec
sbb
aad
adc
add
mov
dec
pop
aad
push
imul
add
lds
mov
lds
pushf
cmpsl
sbb
data16
sbb
test
fistpll
fcmovnbe
ss
add
enter
sbb
incb
mov
push
leave
xchg
mov
sbb
or
out
stos
aam
mov
imul
add
test
jge
arpl
cmp
mov
test
xor
cmp
imul
imul
push
mov
sbb
popf
addb
inc
ljmp
shrl
movsl
out
jns
lahf
loope
xchg
loope
dec
movsl
xchg
xchg
das
sti
cli
addr16
mov
pop
loopne
dec
int
ficompl
out
addb
insl
lahf
mov
fsubr
idiv
pop
sti
sub
js
fiadds
jns
and
fidivrs
out
mov
adc
inc
adc
int3
sahf
jge
sti
mov
fisttpl
lods
adc
jno
addr16
mov
xchg
gs
mov
and
mov
jp
xchg
jne
in
cmpsb
int
push
push
pop
std
adc
pop
out
pop
fdivrs
xchg
pop
in
xchg
lcall
fistpll
pop
repz
pop
sub
lods
xchg
outsb
inc
aam
es
cmp
enter
popa
lods
pop
mov
jae
daa
cmp
lods
out
mov
out
stos
mov
inc
add
add
push
cmp
add
jge
add
test
push
loop
fildl
add
scas
sarl
jge
add
fimull
adcl
cmp
popl
cmpsb
and
or
push
or
mov
cwtl
or
add
cmp
jmp
pop
jl
inc
push
and
es
push
pop
adc
xchg
ret
daa
xchg
bswap
xchg
jg
push
pop
sub
rolb
cmp
push
ficompl
mov
dec
push
sbb
lods
add
lcall
test
mov
add
pop
addb
in
or
fmull
mov
test
ret
cmpsb
movsl
ds
push
xchg
pop
mov
and
movb
or
movsb
cmp
aad
pop
mov
loopne
inc
sbb
aaa
sahf
pop
mov
add
jmp
mov
mov
mov
or
ffreep
rol
add
and
add
mov
rcll
pop
jl
sbb
inc
rcl
mov
ret
movsl
fistpll
aad
fists
mov
mov
jo
or
xchg
inc
mov
dec
push
ret
mov
xor
jb
pop
xchg
aaa
mov
mov
divl
dec
iret
add
sarb
out
mov
adc
jge
push
cmp
nop
mov
pop
cmc
mov
add
test
cwtl
outsl
xor
clc
mov
fiadds
mov
hlt
mov
popa
fldl
das
or
add
rcr
cmp
ds
mov
fwait
mov
add
test
mov
cs
mov
pushf
in
inc
add
lds
stos
clc
sub
mov
adc
movsl
std
test
inc
lahf
movsl
xor
test
stc
xor
add
or
in
fwait
add
iret
push
ljmp
clc
inc
add
inc
add
les
arpl
inc
add
and
movsl
cltd
js
adc
pop
mov
sbb
bnd
mov
fcoms
insl
pop
test
jo
insl
in
add
push
gs
xchg
or
mov
lret
shrl
lods
or
xor
pop
popa
in
mov
jecxz
sbb
aam
leave
daa
inc
jo
std
ljmp
out
inc
aas
loope
aam
sub
mov
xlat
add
sbb
add
lret
jnp
push
adc
stos
sbb
jae
into
and
idiv
lods
inc
xor
out
movsl
lret
jg
call
mov
adc
lret
add
mov
push
into
sahf
test
mov
jae
xor
test
add
mov
xor
xor
dec
shrb
mov
insb
ret
add
int
std
add
mov
add
mov
adc
xor
test
add
clc
inc
add
mov
pop
dec
out
adc
fwait
mov
xor
int3
lds
xchg
add
js
cmc
add
dec
jns
ja
fidivrl
jmp
cli
or
into
test
sbb
jge
sub
dec
lds
pop
test
adc
xchg
dec
and
sahf
movsb
or
daa
mov
mov
popa
cmp
mov
shlb
mov
and
dec
jbe
ret
sti
add
nop
or
pop
enter
cmp
fcoml
adc
xor
adc
xchg
add
stc
xchg
and
add
mov
cmp
and
mov
mov
add
inc
in
mov
test
inc
add
not
fwait
push
or
adc
fcomip
adc
add
lods
std
test
lock
inc
add
mov
call
hlt
or
cmp
jns
pop
sub
roll
add
pop
aad
mov
pusha
add
test
or
dec
push
cmc
cmp
xlat
shr
shrb
inc
mov
pop
dec
cmpsb
sub
sub
add
and
mov
sbb
mov
stos
xor
sarl
mov
mov
inc
add
testb
mov
jno
xchg
lcall
in
pushf
sbb
pop
das
mov
rcr
in
popa
fisubl
add
mov
pusha
add
out
cmp
in
sbb
adc
xor
add
loope
or
mov
sub
mov
jne
add
notb
adc
popa
dec
scas
adc
iret
aas
or
jp
add
mov
addb
mov
dec
je
nop
cli
or
add
cmc
fstpl
into
test
mov
shll
test
dec
xchg
dec
cs
sarb
jl
add
add
sahf
icebp
lret
pusha
add
mov
fs
movsl
sahf
mov
fwait
into
in
aam
scas
mov
mov
push
add
dec
and
xchg
cmp
nop
xor
add
jmp
mov
ret
push
adc
insl
adc
jl
or
lea
popf
shll
outsb
test
imul
movsb
mov
bound
or
out
push
add
pop
mov
sarl
popf
ror
sub
lcall
push
pop
push
testl
stos
cld
pop
mov
jbe
pop
out
push
lret
xchg
out
mov
mov
cwtl
jge
sarb
xchg
ds
sbb
add
xchg
cmp
jnp
inc
add
shrl
pushf
repnz
sti
out
sbb
shll
movl
adc
xor
dec
push
fistl
insl
out
mov
add
add
in
mov
lret
cwtl
xchg
aam
sub
in
add
inc
push
push
mov
add
dec
add
and
scas
insb
xor
enter
or
and
ja
lcall
sbb
call
push
int3
push
mov
cmpsb
sbb
js
mov
add
in
mov
xchg
fnstenv
jb
aaa
out
rcll
pop
jbe
inc
add
data16
jecxz
push
push
push
out
repz
add
or
mov
add
enter
push
cmp
mov
mov
push
mov
dec
jae
add
cld
pop
cmp
inc
shlb
cwtl
test
xchg
popf
xor
push
lret
cmpsl
sbb
xchg
enter
add
or
mov
add
outsb
mov
arpl
adc
ja
sbb
cmpsb
aad
inc
push
xlat
jae
add
fs
and
ret
rolb
pushf
mov
xor
mov
xchg
push
xchg
daa
mov
movb
mov
xchg
das
mov
outsl
out
fcomp
mov
push
pop
pop
call
aam
add
movsl
lret
xor
xor
cld
jg
add
fdivl
clc
and
sbb
inc
call
push
into
xor
sar
fs
add
jmp
shll
fdivs
enter
xchg
mov
rcll
jge
icebp
lods
call
out
ljmp
sbb
cmc
aad
jns
dec
clc
call
jno
test
xchg
mov
xrelease
mov
les
loopne
clc
lret
add
test
addb
cwtl
fs
or
out
in
int
sub
sub
sahf
in
aad
outsl
lods
pop
aas
cmp
xchg
and
add
lret
hlt
or
add
add
pop
sarb
ret
mov
xchg
jle
or
addb
mov
pushf
push
mov
jp
jbe
add
fwait
or
jbe
cmp
inc
into
lds
test
mov
in
insl
dec
or
jecxz
cli
lds
add
mov
and
loope
fimuls
stos
jl
adc
sbb
mov
mov
add
jo
dec
icebp
pop
hlt
inc
mov
add
inc
add
mov
pushw
jne
pop
mov
mov
or
mov
ret
add
xchg
lahf
fsubrl
or
mov
rclb
or
xchg
arpl
push
pop
popf
and
push
inc
add
idivl
sub
cmp
mov
ret
dec
scas
dec
pop
adc
dec
push
adc
sbbl
mov
inc
add
inc
add
or
test
jl
subl
inc
mov
xor
out
add
dec
lds
mov
out
cmp
jmp
add
pop
jns
pop
add
adc
push
shll
add
xchg
sbbl
popf
lock
ljmp
rolb
mov
rcrl
dec
dec
out
mov
add
xor
mov
mov
xchg
jge
add
call
sub
and
inc
push
adc
movb
out
and
in
dec
test
cmc
aaa
cmc
dec
pop
add
mov
add
icebp
sub
hlt
mov
cmp
add
pushf
fwait
addr16
loop
xchg
pusha
add
ret
arpl
mov
cmpsb
shlb
push
cwtl
movsl
addb
sub
aam
je
rcl
iret
push
addb
outsl
addb
sbb
pop
in
add
in
es
repnz
jp
shll
mov
add
inc
cmp
cmc
rcll
out
mov
sub
mov
cmpl
shll
jp
dec
xchg
rolb
clc
mov
gs
sub
dec
movsl
pop
sub
sub
jmp
imull
mov
lock
aad
adc
movsl
xchg
aas
int3
jns
lock
push
in
push
sbb
ljmp
push
push
lahf
icebp
lods
jo
xor
test
mov
outsl
shll
pop
popf
fnsave
div
aaa
fnstcw
jp
jnp
daa
cmp
adc
mov
add
inc
cmp
int3
fbstp
xor
pop
out
cltd
aaa
pushf
lcall
insl
fmull
dec
mov
sbb
jp
je
loop
mov
push
cmp
bound
mov
or
repz
fidivrs
sub
stos
add
imul
cmpsb
push
das
pusha
add
jnp
js
sbb
scas
add
sub
mov
test
add
aaa
xor
loope
cmpsl
dec
lcall
mov
outsl
cmp
pop
and
pop
jo
and
xor
repz
fcmovnbe
jb
cmp
outsl
cmpl
ja
sub
enter
add
xchg
sbb
dec
mov
sub
add
xor
mov
mov
add
xor
bound
inc
or
add
mov
pop
mov
nop
in
in
jecxz
fnstsw
inc
add
inc
inc
add
and
icebp
dec
aam
add
jmp
xchg
movb
repnz
std
insl
add
sbb
mov
push
or
add
adc
out
cmpsl
pop
mov
add
scas
loopne
jp
imul
sub
cmp
imul
aad
cmp
xchg
test
arpl
in
cli
gs
popf
icebp
add
ja
jmp
add
and
aaa
jns
adc
leave
mov
mov
loopne
out
roll
aam
into
ja
pop
jmp
scas
push
iret
rorl
push
sub
cs
mov
jbe
add
pop
sub
lcall
adc
mov
jns
stos
jb
cmc
xor
mov
and
and
add
outsb
addr16
sub
mov
hlt
pushf
cli
push
adc
addb
mov
sarb
lret
lds
fidivrl
loope
xchg
pop
cli
xchg
movb
fildll
push
sub
mov
add
imul
xor
decl
fldl
add
push
pop
pop
or
cld
mov
mov
pop
loope
dec
xor
rolb
inc
add
add
call
mov
ret
sub
incl
mov
scas
out
or
std
mov
rolb
add
je
cmpsb
insl
inc
enter
jecxz
sti
dec
sub
ljmp
daa
insb
jecxz
xchg
test
rorl
and
enter
add
push
fwait
push
ret
movsb
xor
insb
insb
add
pop
test
pop
inc
add
sbb
inc
add
seta
shrl
enter
xchg
inc
bound
xchg
sub
in
cmp
js
add
insl
or
add
mov
jp
aas
movb
stos
jno
inc
xchg
test
or
rolb
pushf
inc
add
shl
stos
mov
in
imul
lcall
ds
xor
ret
lcall
add
xchg
mov
aas
in
mov
mov
mov
sub
mov
add
pop
in
nop
push
arpl
sbb
jne
pop
jl
data16
arpl
cmpsb
mov
xor
add
movsl
stos
lret
jecxz
sub
adc
xchg
sub
or
pop
popf
dec
dec
stos
sub
ds
fimull
das
xchg
xchg
or
add
adc
pop
bound
ss
jmp
add
inc
cmp
push
out
lds
or
sahf
rcll
sub
xchg
or
loop
in
xor
pop
mov
int
push
push
loop
stos
xor
test
xchg
push
aad
fdivrl
push
sar
std
cs
xlat
mov
cmp
movb
mov
dec
mov
call
push
inc
add
sub
jle
shlb
inc
add
fidivs
test
into
enter
xchg
mov
and
fcmovbe
out
inc
add
pop
mov
mull
insb
lret
dec
sbb
gs
aad
aam
cld
mov
mov
sti
and
adc
inc
add
jle
mov
data16
xor
add
stos
or
sti
inc
push
arpl
or
test
cmp
aaa
sbb
fidivs
mov
cmp
stos
xor
jne
add
add
insl
fstl
les
arpl
pop
fnstcw
clc
dec
aad
push
cmp
mov
xchg
movsl
movl
loopne
dec
or
std
mov
mov
scas
inc
inc
add
fs
jne
mov
cs
pop
inc
ret
lret
ffreep
adc
inc
fs
add
jl
inc
adc
cmp
pushf
jbe
jge
repnz
sbb
mov
add
sub
in
in
sub
mov
jmp
push
add
adc
push
push
mov
iret
int
and
popf
mov
psubusb
sbb
jecxz
mov
test
movsl
cld
lods
in
and
andl
mov
add
ficoml
gs
popa
into
cltd
mov
sbb
out
inc
bound
jnp
jo
mov
roll
rolb
sub
mov
lret
fbld
add
popl
stc
cmc
jo
pop
cmpsl
mov
ja,pt
jl
enter
sub
jmp
bound
inc
or
fidivs
push
mov
fistl
xor
add
stos
test
movsl
jne
lock
aad
jb
xlat
pextrw
ss
ss
xchg
pop
and
adc
add
insl
or
clc
pusha
add
push
add
push
arpl
pop
push
clc
inc
movb
jne
add
scas
out
js
adc
xor
shl
inc
popf
fld
add
mov
loope
bound
mov
jmp
cli
int
add
dec
pop
push
push
or
mov
bound
das
push
ja
xor
std
mov
cmp
add
scas
pop
sbb
aad
aaa
lret
test
cli
repz
or
loope
repz
arpl
je
jmp
push
or
jns
movsl
out
pop
jbe
in
sbb
and
lea
sbb
add
aas
cmp
dec
dec
or
gs
xor
jge
add
mov
scas
ret
or
mov
inc
add
nop
sub
xchg
fdivs
call
mov
mov
adc
inc
in
mov
std
pop
xchg
sub
loop
test
stos
cmpsl
xor
mov
push
in
into
jns
xchg
and
dec
jle
jg
dec
ljmp
mov
and
xlat
into
xlat
mov
or
or
ret
popa
arpl
mov
cmpsb
stos
into
enter
sbb
movb
add
mov
xor
imul
std
daa
scas
sub
mov
inc
test
add
xchg
and
mov
ss
arpl
cld
xor
fmuls
rcrl
rcrb
sub
add
sarl
sahf
push
push
dec
test
and
js
pop
push
push
push
inc
add
xchg
pop
cmp
lods
inc
add
jecxz
inc
in
lods
imul
cs
mov
jmp
sbb
out
jno
push
gs
aas
daa
push
inc
ljmp
rolb
rolb
add
clc
jge
ret
xchg
rcll
add
call
lret
add
add
mov
adc
mov
inc
add
std
lret
lcall
je
add
imul
jmp
add
fxtract
stc
pop
mov
pop
cwtl
js
pop
sarl
test
fucomp
shl
clc
sub
pop
add
or
inc
add
test
push
pop
fadd
add
sub
pushf
push
or
and
sarl
sar
push
add
cmp
add
cmp
add
xchg
inc
hlt
and
insb
insb
addr16
mov
stc
jmp
pop
jge
in
cmp
add
test
add
dec
mov
add
call
cltd
in
cmp
dec
pop
mov
les
imul
add
je
sbb
xlat
mov
test
fwait
movsl
cmpsb
or
das
jle
push
xor
or
lea
hlt
int3
pop
xchg
push
xchg
lods
outsl
ds
xchg
shll
stos
mov
jle
inc
add
jns
cmp
add
pop
out
jle
setle
pop
add
outsb
xchg
push
push
outsl
cmpsb
imul
fwait
loopne
inc
add
mov
sarl
sub
je
jp
cltd
and
test
mov
rclb
xchg
mov
repnz
add
addr16
shlb
xchg
mov
mov
std
pop
inc
add
out
mov
fisubs
or
push
push
pop
jo
test
pop
nop
out
mov
sub
sub
lcall
fsubr
cmc
popf
cli
mov
push
dec
jge
add
test
xor
cmp
xchg
xor
les
aam
add
and
jp
or
jne
add
insl
sub
sahf
xchg
lahf
push
bound
fwait
adc
add
sbb
or
add
lds
adc
out
add
rol
add
add
call
dec
fdivrl
mov
fdivrs
adc
add
out
jecxz
and
dec
fstpl
fidivs
decb
push
popf
enter
nop
push
add
xor
cmp
stos
inc
add
xor
or
stos
jbe
sub
loope,pn
ret
or
mov
adc
fldcw
pop
push
lcall
inc
add
idivb
ja
jecxz
test
sbb
mov
dec
iret
jb
mov
add
std
mov
or
sub
push
aam
cmp
add
mov
and
inc
add
mov
arpl
pop
imul
push
adc
jmp
outsl
xchg
add
cld
setp
mov
out
std
sarb
ret
mov
cmp
fwait
and
sbb
add
lcall
xchg
jecxz
mov
push
mov
or
inc
add
mov
test
jecxz
dec
and
add
imul
xor
imul
jb
out
sbb
add
and
inc
loopne
jl
nop
adc
adc
inc
movsl
addl
pop
mov
sbb
and
cmp
out
fwait
inc
lret
xor
or
lcall
je
cmc
shll
mov
sub
pop
jnp
xchg
sbb
dec
jg
dec
jnp
subl
jno
jl
out
movsl
int3
in
stc
icebp
push
pop
sub
fwait
js
inc
add
loope
popf
push
std
ja
mov
add
loopne
fnstcw
xor
repnz
dec
arpl
jnp
ss
push
insl
push
std
aad
cltd
cmpsl
jno
inc
bound
jle
dec
add
je
scas
push
sub
and
add
nop
mov
xlat
mov
js
adc
scas
js
cmpsb
fimuls
movb
icebp
mov
pop
mov
jo
mov
push
cltd
dec
in
call
jge
add
clc
pop
or
fldcw
mov
jns
add
lea
jne
lods
and
shrl
mov
loopne
fwait
js
sub
jl
sub
dec
pusha
add
cld
mov
sti
in
fbstp
push
push
jb
xchg
mov
add
in
test
adc
andl
ret
mov
pop
out
addb
sbb
xchg
les
mov
xchg
mov
jb
clc
jb
scas
int3
outsl
ret
mov
xor
cmp
mov
iret
mov
dec
call
test
insb
cmp
mov
mov
pushf
ja
inc
add
popf
mov
cmp
es
push
pop
lret
mov
mov
insl
lret
out
out
push
push
cmp
jno
daa
in
movsb
std
mov
cld
test
pushf
test
dec
or
lea
jno
rclb
cmp
movsb
gs
pusha
add
repz
pop
cli
ss
xchg
pop
aam
insb
add
adc
mov
cmc
leave
xchg
rcrb
rolb
in
cmc
xor
ret
push
xchg
clc
dec
lret
mov
dec
std
ljmp
inc
add
add
xor
inc
add
cmp
adc
ja
getsec
xor
add
add
bound
fwait
mov
add
jg
fcoml
int
add
inc
add
sbb
sarb
repnz
and
cmp
add
test
js
jbe
mov
jge
fsubp
mov
imul
or
add
and
add
popa
cs
scas
mov
sub
and
add
mov
mov
shrl
add
inc
add
xchg
jp
pop
nop
imulb
out
test
out
mov
daa
cmpsb
daa
fwait
pop
dec
jge
and
mov
fisttpl
pop
jp
test
push
adc
or
xor
cmpsl
rcll
jb
or
dec
pop
push
inc
test
nop
dec
in
cs
mov
dec
jb
xor
fstpl
mov
adc
adc
sbbl
aad
jbe
ficomps
in
pushf
lret
sub
sahf
sub
leave
jecxz
cmc
dec
sbb
xor
and
sbb
mov
add
xor
add
sahf
ficoms
pusha
add
testl
sti
cmp
pop
inc
nop
ds
mov
sahf
lahf
cs
rolb
inc
scas
xchg
jp
lock
push
loopne
add
add
add
aas
movsl
mov
xlat
lcall
inc
mov
insl
ja
add
jmp
lods
outsl
fnsetpm(287
sub
pop
xchg
mov
jb
repnz
fs
pusha
add
add
sbb
movsb
or
inc
cmpsb
sub
cmc
addr16
sub
mov
add
inc
bnd
mov
fidivs
cmpsl
push
add
push
sbb
jno
jne
cmp
pusha
add
push
lods
je
popa
cmp
out
xor
loop
cltd
mov
mov
mov
add
add
cli
and
cmpsb
jae
xor
jns
push
iret
arpl
xor
sbb
fcompl
and
mov
je
pusha
add
adc
loope
out
cmpsl
je
pop
xchg
mov
loope
mov
mov
xchg
ret
cwtl
cmp
mov
into
rolb
mov
pop
out
inc
cwtl
dec
pop
fcomps
jo
int3
adc
cmp
add
dec
and
push
sub
add
dec
ss
daa
xor
loop
adc
negb
xchg
xor
add
push
fwait
jno
push
jns
dec
mov
loopne
clc
and
into
jne
loope
jne
movsl
mov
lock
jbe
ret
mov
xchg
xchg
mov
push
or
cmpsl
mov
pushf
dec
xlat
icebp
or
and
lock
sub
jl
inc
add
adc
mov
imul
adc
addb
xor
push
in
outsb
dec
sub
mov
int
nop
cmp
pusha
add
push
shll
add
mov
mov
pop
mov
fcoms
aas
out
or
pop
push
movb
ficomps
jne
inc
add
cmp
jp
movsb
mov
pop
or
mov
scas
push
add
sub
add
in
popa
mov
jp
pop
sub
scas
shl
mov
push
scas
std
xchg
mov
sbb
adc
xchg
das
enter
or
jg
out
test
test
int3
jbe,pn
rolb
out
jae
mov
mov
mov
int
inc
push
cs
cli
xchg
sbb
popf
rcr
aas
insb
pop
inc
add
outsl
mov
add
cmpsl
lods
adc
mov
mov
mov
js
add
add
mov
cwtl
and
sub
adc
testl
add
xor
cltd
push
xchg
lahf
sbb
add
push
repz
jo
bound
sbb
out
inc
mov
add
in
cmc
mov
cmc
enter
lret
movsb
into
out
jp
inc
cmpsl
and
stc
ret
icebp
outsb
add
imul
cs
add
xor
jmp
adc
addr16
pushf
add
mov
pop
mov
or
push
aad
cli
lock
les
dec
cmp
lret
rcl
sub
testl
jl
or
mov
lods
cmc
inc
add
dec
mov
push
xchg
or
dec
cld
sbb
inc
add
xlat
cmp
sbb
gs
pop
mov
jo
or
adc
out
lea
fwait
pop
xchg
mov
cld
stc
rorl
add
lcall
pop
cmp
pop
mov
jmp
xor
in
mov
inc
add
add
ret
hlt
scas
push
add
lcall
das
push
sub
and
sahf
pop
ss
fimuls
int
add
pop
adc
cmpsb
mov
testl
popa
jbe
mov
push
loop
push
cmp
and
dec
and
mov
test
lea
xor
jb
fstpt
in
clc
mov
scas
or
add
push
inc
push
add
add
stos
movsb
jb
sub
dec
push
ret
push
xor
or
sbb
xor
fs
addb
push
loop
fisubrl
data16
pop
fucompp
mov
int3
xchg
jl
mov
add
lock
mov
loope
xchg
fisttps
jecxz
int3
add
push
and
popa
outsb
and
mov
mov
out
pop
cwtl
shrb
inc
add
insb
cwtl
test
cmp
mov
add
xor
or
lret
adc
jno
lret
fildl
and
add
icebp
jo
dec
xorl
nop
xor
outsl
test
push
add
pop
push
popf
xor
mov
or
lret
les
cwtl
sub
cmp
mov
mov
cmp
add
int3
or
call
add
push
dec
fiaddl
mov
or
loop
dec
jnp
mov
sbb
cld
das
cmp
jns
jb
movb
mov
or
test
stos
into
jge
mov
enter
cmp
popf
lret
inc
adc
xchg
popa
fnstsw
popf
popa
loop
add
xchg
movsl
fcom
ss
sub
add
add
adcl
bound
aas
dec
ret
add
lcall
sub
pop
mov
adc
jae
inc
jne
stos
addb
pop
test
cmp
jo
sbb
sub
test
xchg
mov
mov
mov
lea
lds
add
aas
popf
inc
cmp
mov
add
sbb
out
pop
push
mov
adc
sbb
add
or
inc
add
insb
ja
sub
mov
addb
mov
sahf
push
add
outsb
lahf
sub
leave
add
dec
call
lock
lds
loop
add
lods
sbb
cs
mov
fcomip
cltd
xor
xchg
test
pop
add
int
add
fnsave
push
lods
jb
es
out
gs
sub
dec
cmovae
cs
xchg
sub
cltd
lret
mov
inc
sub
nop
xor
adc
sbb
out
push
fs
fwait
out
pop
lcall
sub
outsb
sbb
outsb
cmp
das
xorl
enterw
and
adc
mov
jae
je
cmp
pop
in
cmpsl
jo
push
add
add
and
cmp
jns
gs
or
addb
mov
xor
rolb
xchg
dec
ret
xor
adc
mov
stc
adc
mov
dec
out
pop
push
cmp
movsl
ret
add
das
jne
add
lods
lret
fsts
mov
dec
cltd
pop
mov
add
out
je
outsb
jo
or
and
pop
lock
std
dec
mov
mov
add
mov
dec
pop
inc
add
andl
add
test
push
cld
nop
gs
and
mov
rorb
mov
addl
and
xor
mov
out
sbb
scas
lea
sub
pop
call
sahf
sbb
xlat
adc
mov
stc
repnz
addb
shrl
or
xor
xchg
movsb
cmp
push
lods
push
ds
add
xor
repz
fs
lcall
push
mov
add
jp
test
lods
in
aaa
pop
repz
lcall
dec
lahf
ljmpw
cld
repnz
xor
cmp
call
cmp
scas
call
add
lock
jnp
loopne
test
mov
pop
xchg
fldenv
fdivrl
jb
add
popf
adc
ds
add
dec
sbb
cli
lock
call
fnstcw
scas
lock
dec
add
dec
or
mov
dec
test
adc
add
std
in
imul
pushl
xchg
and
push
jecxz
hlt
ljmp
pushf
add
lret
ds
adc
imul
push
mov
rorl
call
jge
xchg
in
stos
pop
jae
rolb
lret
fcomp
mov
inc
add
mov
scas
fucom
cmc
lret
dec
jmp
aam
outsb
or
sbb
in
add
jns
sbb
or
sbb
xor
test
icebp
push
movsb
jns
cmp
mov
into
mov
add
and
push
mov
into
add
ljmp
ret
dec
loopne
add
mov
add
jns
push
lret
outsl
lahf
add
js
jmp
push
lock
rcrb
scas
fadds
test
xchg
or
dec
mov
cmp
xchg
mov
push
pop
jle
add
mov
or
test
lret
pusha
add
std
mov
add
sbb
add
jo
jle
mov
jbe
and
mov
cs
adc
neg
push
adc
cmp
push
inc
pop
xor
dec
lock
add
popa
mov
aaa
jmp
lret
movsl
mov
pop
inc
add
inc
cmc
mov
fbld
adc
lahf
xor
xor
pop
into
or
pop
xchg
icebp
xor
add
mov
mov
xchg
dec
push
daa
mov
add
inc
add
jle
out
jp
jg
mov
es
lea
mov
repnz
aam
daa
hlt
std
cmp
rolb
mov
xchg
sub
pop
popa
out
cs
sbb
outsb
jnp
lods
stc
insl
les
test
and
push
icebp
mov
mov
lods
cmp
sahf
mov
test
pop
xor
sub
add
cmp
in
xor
je
fwait
jle
cmp
loop
test
fldt
sbb
push
out
mov
loopne
insb
xchg
movsb
cmp
sub
mov
sahf
mov
inc
add
push
mov
adc
ljmp
clc
or
cmpsl
inc
add
dec
mov
aam
int
xchg
add
in
test
adc
aas
jl
orl
out
lods
push
dec
pop
add
int3
pusha
add
mov
mov
es
and
dec
adc
xorl
mov
ret
shlb
jge
and
shll
aad
mov
pop
or
movl
movsl
scas
bndldx
pop
sbb
aam
xor
lcall
push
mov
and
lret
xchg
gs
test
dec
enter
dec
fidivrs
lret
mul
or
stos
andnps
and
rolb
outsb
push
test
xor
push
pusha
add
mov
movsb
stc
dec
mov
pop
fistps
jbe
sar
call
mov
cmp
add
into
push
add
das
xchg
outsb
dec
jg
mov
add
testl
shrl
cli
rorb
jecxz
insl
mov
dec
jnp
aad
loop
imul
adc
mov
or
add
dec
pop
adc
hlt
sbb
inc
mov
addb
call
enter
xchg
out
sbb
sti
ja
movsl
int3
xchg
aam
add
sub
movsb
jp
nop
inc
push
or
jne
shll
stc
add
sub
mov
data16
bound
cmp
inc
and
jge
cmp
jnp
push
scas
push
les
pushf
pop
sbb
mov
js
cmpsb
push
pop
sub
dec
mov
cwtl
cmpsl
jb
cmp
push
or
pusha
add
jmp
sub
sbb
push
ficompl
add
stos
sahf
out
xchg
add
jl
jle
popf
mov
push
pop
fdivrs
add
and
mov
add
pushf
imul
mov
inc
add
and
faddl
pop
xchg
jg
mov
out
inc
dec
sbb
or
mov
fstl
mov
add
mov
mov
sbb
filds
mov
je
add
inc
pusha
add
aas
inc
ja
add
addb
push
and
xchg
jae
mov
jnp
or
add
push
je
insl
imul
aad
cmpsl
xchg
gs
mov
add
sbb
push
xchg
in
pop
add
jns
lock
cmp
vpand
push
arpl
inc
add
cmp
pop
cmc
xor
cmp
mov
inc
dec
mov
andl
and
add
add
push
push
repnz
jle
or
mov
add
adc
outsb
sbb
popf
sub
in
ret
dec
repz
lods
test
pusha
add
andl
or
sarl
cs
add
sbb
in
repnz
movsl
push
ret
lods
daa
arpl
movsl
negl
xchg
fwait
and
lcall
mov
shl
jnp
nop
sbb
imulb
incl
add
add
add
mov
add
in
out
insb
addl
cmp
push
es
pop
icebp
add
outsb
in
sub
imul
sti
test
inc
add
adc
mov
in
mov
inc
outsl
repz
push
gs
jb
jp
leave
sti
and
jecxz
sarb
lock
rcll
push
add
pop
jo
repz
xchg
pop
mov
xchg
imul
push
stos
sbb
sub
add
lahf
sti
mov
adc
add
push
dec
movsb
or
rolb
dec
cmp
add
ja
fwait
lahf
mov
dec
cmp
add
add
sbb
aaa
ss
add
stc
mov
icebp
js
mov
pop
xchg
mov
lea
scas
lret
aad
inc
add
test
cmp
push
or
dec
and
js
test
cmpl
cmpsl
enter
dec
popa
inc
xchg
rolb
aaa
in
nop
loope
test
scas
or
pop
inc
add
pop
inc
add
mov
ret
or
jb
mov
sub
stos
sub
adc
clc
js
int
sbb
and
mov
jb
add
and
dec
adc
lds
jl
clc
cs
and
aam
push
and
inc
or
pop
xor
add
insl
adc
push
icebp
negl
add
jbe
lods
mov
add
addb
xor
push
inc
sub
popa
xchg
out
mov
mov
dec
add
out
lret
add
xor
mov
lret
shlb
in
sbb
xlat
out
pushl
mov
cmp
lea
sub
or
or
mov
insl
call
jne
add
lret
je
xor
mov
fdivs
movl
pop
stos
mov
pop
push
jns
fnsave
add
cmp
mov
insl
ret
pop
add
pop
dec
push
test
fucomp
mov
mov
sbb
xchg
rcrl
out
rol
sub
and
push
add
repz
call
nop
add
dec
jno
pop
std
test
sub
test
nop
cmp
push
adc
loopne
je
add
add
sbb
insl
adc
icebp
sbb
add
gs
add
fs
ret
sbb
jns
cmc
mov
sbb
mov
into
cli
xchg
std
mov
sub
mov
push
in
adc
cld
or
in
sub
es
jno
adc
mov
fstpl
xchg
bound
fistpll
cmp
out
xchg
arpl
int
pushf
mov
lods
mov
imull
inc
jbe
add
stos
xor
sti
divb
inc
add
je
push
inc
mov
lock
add
push
dec
cmp
lahf
cmc
mov
out
mov
aaa
and
insl
cmp
adc
lcall
add
mov
aad
or
movsb
addb
push
sub
jl
xor
dec
mov
in
and
or
jle
add
add
or
xchg
fdivrs
xor
adc
cmp
fsubrl
movl
jb
sub
stos
lock
shlb
addr16
pop
or
cmc
out
cmp
mov
pop
push
pop
or
sub
insb
add
ss
into
aaa
pop
addb
enter
in
add
and
lock
or
imul
inc
fimull
sbb
dec
push
adc
outsb
jne
pop
mov
mov
es
mov
nop
sub
sbb
mov
ret
sub
arpl
sbb
hlt
cmp
push
es
push
mov
push
add
add
jb
lret
cmp
roll
add
xlat
xchg
fsts
jb
or
pop
push
outsb
mov
dec
addb
rolb
int
addb
into
std
fimuls
sbb
mov
add
in
outsb
stos
push
add
xrelease
fldenv
sar
iret
sub
push
test
shll
push
sbb
mov
add
add
icebp
je
aam
or
cmpsb
sti
lods
rolb
decb
add
push
test
rolb
mov
std
ret
mov
sbb
mov
push
ret
int3
cmc
clc
fmulp
in
test
sti
call
dec
add
jb
dec
mov
pop
addb
ja
stos
add
and
call
add
es
popa
xchg
dec
pop
int3
mov
in
pop
bound
mov
sbb
jp
out
std
loopne
mov
nop
hlt
rol
push
lods
jg
aad
dec
mov
or
add
in
jo
loop
loopne
jb
test
add
xor
cwtl
xlat
push
inc
cmp
lahf
and
ret
jnp
sbb
mov
xor
pop
ljmp
cmp
xlat
mov
icebp
pop
add
add
jo
mull
dec
cmp
fidivs
sbb
outsl
movsl
push
ja
sbb
addb
or
aaa
sti
pop
cld
aaa
xor
fldl2e
xlat
push
add
frstor
test
shrb
sub
inc
add
daa
popf
pop
add
ficoml
sub
xor
dec
adc
out
scas
mov
repnz
in
jno
insl
pop
gs
es
not
cmp
fimuls
ret
push
push
or
mov
or
mov
add
adc
int
addb
mov
stc
push
add
cmp
add
out
mov
popl
inc
out
and
dec
mov
adc
jbe
pop
les
xor
repz
xchg
adcl
sti
mov
jo
and
xor
or
insb
adc
sahf
mov
add
inc
lea
test
ret
add
pop
xchg
mov
rolb
in
fwait
pop
dec
mov
add
inc
inc
in
inc
add
add
pop
test
push
mov
data16
out
stos
or
out
addr16
jge
adc
es
inc
movb
iret
or
jb
in
pop
jns
lea
jmp
mov
sbb
aam
add
addb
repz
and
xchg
loope
mov
pop
popl
and
sub
sahf
test
add
push
pop
int3
test
mov
xor
movsb
into
push
push
pop
pusha
add
sub
adc
push
shrl
shlb
sbb
cmpsl
movsb
in
pop
mov
adc
stos
or
jo
fwait
mov
cmp
pop
sub
jle
ret
nop
mov
inc
add
mov
add
sbb
movsl
outsb
push
mov
jbe
add
mov
imul
add
jae
lds
pop
add
sub
jo
icebp
fdivrs
das
aad
pop
aaa
mov
xor
add
out
mov
xor
cmp
insb
test
pop
daa
adc
rcrl
arpl
pop
jbe
ds
outsb
push
dec
cmc
aaa
lods
loop
add
sahf
sbbl
mov
add
test
bound
test
mov
push
decb
mov
jecxz
mov
rorb
ljmp
add
test
mov
imull
ja
push
add
leave
add
mov
sbb
mov
cmp
lods
popf
lods
add
xchg
in
cmpsw
stc
adcl
add
push
ret
adc
outsl
mov
push
xor
xchg
cmp
movsl
and
add
loopne
inc
add
rcl
and
addb
mov
int3
fs
mov
add
jmp
dec
insb
push
add
add
loop
pushf
dec
mov
ret
sbb
ret
jbe
inc
mov
add
stc
mov
ret
add
jbe
aam
add
cwtl
popf
xlat
xor
add
movb
push
jb
call
mov
pop
mov
fldl
xchg
adc
jae
outsb
sbb
sub
cmp
push
xlat
pop
xchg
mulb
mov
push
pop
out
mov
jl
add
pop
int
mov
jmp
push
fdivrs
or
add
lock
dec
mov
ret
sarb
or
call
call
movsb
cltd
jecxz
inc
add
push
in
mov
adc
stos
mov
mov
lods
cmp
decb
fdivrs
sbb
mov
add
ret
sbb
inc
div
ret
adc
lds
add
addb
in
and
pop
and
in
lods
xor
push
xchg
inc
and
test
inc
add
inc
add
pop
cli
out
shl
ja
add
inc
add
sti
push
lret
lds
add
bound
scas
cmpsb
inc
sub
xrelease
lret
shrl
ja
mov
movsl
xor
movb
std
divl
pop
dec
loopne
sbb
les
or
sbb
push
jnp
jmp
in
les
andl
subl
pusha
add
fadds
push
mov
cmpsl
in
jg
scas
int
and
push
mov
aam
inc
add
sti
stos
or
sub
in
xor
loope
and
jl
xchg
jb
lahf
cmc
sub
sbbl
and
push
push
clc
jo
mov
pop
cli
mov
cmp
in
roll
loopne
add
pusha
add
bound
sbbl
add
xchg
inc
add
pop
imul
sub
push
mov
dec
push
or
xchg
mov
outsl
test
adc
cmp
jge
aaa
push
imul
shrl
jp
fwait
mov
ret
mov
popl
xor
addb
lea
pop
shll
add
xchg
jo
cmp
mov
push
pop
movb
cmp
cmpsb
imul
xor
rcrl
mov
cmp
xor
out
pushf
jnp
xchg
cltd
dec
pop
and
cli
xchg
jmp
enter
fsubs
and
sbb
add
pop
add
fsubr
mov
jecxz
sar
lcall
cmp
mov
rep
push
pop
jae
and
sub
sbb
add
xchg
push
add
add
int3
lahf
and
cmp
pop
mov
enter
daa
je
pushf
adc
stos
repz
pushf
fidivs
adc
pop
xor
mov
jl
test
cmc
sub
imul
addl
icebp
pushf
and
movsl
scas
inc
add
push
movsb
ret
or
add
adc
sub
dec
fdivrs
or
sbb
mov
add
sbb
into
dec
fistpl
xor
jae
mov
dec
adc
daa
add
pushf
iret
cmpsl
enter
fisttpl
outsl
bound
dec
inc
add
mov
popf
xchg
mov
icebp
jg
imul
lods
jp
add
cmp
sbb
js
in
push
int3
mov
push
lea
push
add
jbe
insb
mov
pmulhw
pop
inc
add
lea
stc
inc
shll
jns
and
fcoml
xchg
psllq
ret
cld
decl
data16
jp
loopne
add
data16
add
leave
or
cmp
pop
cmc
rol
loop
mov
add
cmp
mov
cmp
out
jl
fs
xor
sub
pop
dec
fdivs
jb
jae
dec
pop
sub
fcmovu
xor
aas
iret
movsb
test
add
