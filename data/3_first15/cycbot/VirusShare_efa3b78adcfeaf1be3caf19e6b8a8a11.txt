add
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
addr16
add
scas
scas
scas
scas
scas
scas
iret
iret
iret
iret
iret
iret
add
push
push
push
push
push
push
push
push
add
add
add
add
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
add
add
addr16
dec
dec
dec
add
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
add
add
add
mov
mov
mov
mov
mov
xchg
xchg
xchg
xchg
xchg
xchg
push
push
push
add
lret
scas
mov
mov
mov
mov
add
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
add
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lock
add
add
adc
adc
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
lahf
lahf
lahf
lahf
sldt
add
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
xor
xor
xor
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
push
push
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
addb
addb
add
add
xchg
xchg
xchg
mov
mov
mov
mov
mov
mov
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
add
add
push
push
push
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
rol
dec
dec
dec
dec
dec
dec
dec
dec
add
add
add
mov
mov
mov
mov
mov
add
add
pop
pop
pop
pop
pop
add
mov
add
add
test
test
add
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
fcmovu
fcmovu
fcmovu
fcmovu
fiaddl
add
loop
loop
loop
loop
loop
loop
loop
add
add
add
add
add
add
add
mov
add
add
call
call
add
add
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
add
sub
sub
sub
sub
sub
sub
cmp
add
add
add
push
push
push
push
push
push
push
push
push
push
push
jns
add
pop
pop
pop
pop
pop
sbb
sbb
sbb
sbb
test
add
add
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
mov
add
add
inc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
insb
insb
add
add
add
add
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
add
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
jae
jae
jae
jae
mov
mov
mov
mov
mov
mov
mov
add
xchg
xchg
xchg
cmp
cmp
cmp
cmp
mov
mov
mov
mov
ds
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
scas
scas
scas
scas
scas
scas
add
add
add
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
push
push
push
push
push
push
push
push
push
push
push
push
push
push
mov
mov
mov
add
add
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
add
mov
mov
mov
add
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
and
and
and
and
and
and
and
and
and
and
and
and
and
and
add
lret
lret
lret
lret
lret
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
mov
mov
jg
jg
jg
jg
jg
jg
jg
add
add
add
scas
scas
scas
jl
jl
jl
jl
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
into
into
into
into
into
into
into
into
into
into
add
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
imul
push
push
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
enter
enter
enter
enter
enter
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
add
fld1
call
call
rcl
rcl
rolb
add
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
rol
rol
rol
rol
rol
add
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
add
mov
add
lods
lods
add
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
add
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
or
or
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
add
add
incb
add
sti
sti
sti
sti
sti
add
mov
mov
add
jmp
out
out
add
pusha
pusha
pusha
pusha
add
add
add
add
movsb
movsb
mov
mov
add
add
xchg
jb
add
add
add
rcl
rolb
add
add
add
add
add
add
add
add
add
add
add
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
pop
pop
pop
pop
pop
pop
add
mov
add
aam
aam
aam
add
add
add
add
add
mov
mov
mov
mov
mov
mov
add
data16
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
adc
adc
adc
adc
adc
adc
adc
adc
adc
add
and
and
add
add
pop
pop
pop
pop
pop
pop
pop
pop
pop
add
addr16
stc
stc
add
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
add
in
in
in
in
in
in
in
in
add
add
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
add
xchg
add
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
add
ljmp
push
cmp
cmp
cmp
cmp
cmp
cmp
mov
mov
sub
sub
add
add
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
mov
mov
mov
mov
push
push
push
push
push
push
push
push
push
push
push
push
push
push
add
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
pop
pop
pop
pop
pop
pop
add
add
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
add
ret
ret
ret
ret
ret
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
add
mov
mov
rol
rol
rcrl
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
add
add
jb
jb
jb
add
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
test
test
add
mov
mov
mov
mov
add
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
add
add
scas
scas
scas
scas
scas
mov
mov
mov
mov
mov
mov
add
mov
mov
and
and
and
and
add
add
mov
mov
mov
or
or
or
or
or
or
or
or
or
or
or
add
add
add
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
mov
mov
mov
mov
mov
mov
add
or
or
or
or
or
or
or
or
add
icebp
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
jns
jns
jns
jns
jns
add
pinsrw
repnz
cmpsb
cmpsb
add
or
add
add
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
dec
dec
dec
dec
dec
dec
dec
dec
dec
cli
add
add
add
add
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
add
add
lret
lret
loopne
loopne
add
pop
pop
pop
pop
pop
and
and
and
and
and
and
and
and
and
and
and
and
test
test
test
test
mov
mov
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
add
roll
mov
mov
mov
mov
mov
add
add
add
add
add
mov
add
add
add
add
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
mov
pusha
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
add
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
out
out
out
out
out
out
out
out
out
add
addb
addb
addb
add
add
add
add
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
add
mov
mov
mov
int3
int3
int3
int3
int3
int3
int3
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
add
add
int
int
int
int
lods
lods
lods
lods
lods
lods
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
add
add
cmp
cmp
add
add
add
mov
mov
mov
popf
popf
popf
popf
popf
popf
popf
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
add
add
mov
mov
mov
mov
mov
mov
mov
mov
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
sbb
sbb
sbb
sub
sub
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
addr16
addr16
addr16
add
add
add
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
add
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
add
add
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
addb
add
add
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
add
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
bound
bound
bound
bound
bound
add
add
sldt
add
add
jno
jno
jno
jno
jno
add
add
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
rcl
rcl
rcl
roll
add
repnz
lds
xchg
xchg
dec
sub
sub
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
sahf
sahf
sahf
sahf
sahf
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
sbb
sbb
sbb
sbb
sbb
sbb
sbb
add
add
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
push
push
push
mov
mov
add
add
add
fs
add
mov
mov
mov
add
popl
ljmp
ljmp
ljmp
bound
add
add
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
add
out
out
out
out
out
mov
sahf
jno
andb
dec
jne
outsb
jae
add
pusha
pop
jo
jnp
out
and
movsb
inc
mov
ds
ss
aad
mov
sbb
clc
push
jnp
imul
daa
imul
inc
jb
add
ljmp
fidivs
lods
and
movsb
addb
test
psubusb
das
loop
xor
in
xchg
mov
mov
mov
sti
test
add
sbb
mov
sub
std
add
or
int3
dec
rol
std
and
mov
adcb
das
lret
in
mov
pop
out
push
xlat
mov
mov
sbb
jg
xlat
add
movsl
push
inc
push
pusha
and
rol
negl
repz
popf
stos
aas
inc
and
and
adc
dec
push
les
inc
fnstsw
rcrb
add
and
shlb
and
addb
or
push
xor
push
inc
or
xchg
inc
out
mov
inc
out
fiaddl
or
inc
xchg
cmp
inc
or
and
test
mov
sbb
pop
daa
sub
pslld
hlt
xor
in
aam
ljmp
pop
test
pop
pop
inc
xlat
mov
mov
rolb
mov
leave
mov
shlb
jo
out
popa
sub
ds
int
push
int
cld
sbb
mov
repz
loopne
mov
and
sbb
insl
or
loopne
mov
add
rclb
out
shl
rorb
mov
ror
mov
mov
cmpsb
loopne
lret
inc
outsb
jle
xor
adcl
mov
rorl
mov
add
add
inc
xchg
jl
movsl
cmp
movsb
and
icebp
xchg
sti
out
fldt
mov
dec
push
mov
sbbb
daa
out
sbb
outsb
repz
and
adc
dec
mov
out
and
sbb
fcoms
xor
push
sub
xchg
push
enter
adc
test
inc
dec
or
stc
mov
and
or
sub
push
and
fistpll
pusha
xchg
inc
inc
imul
sbb
add
ljmp
inc
inc
loopne
sahf
dec
ja
mov
scas
loopne
push
cs
rcrb
jns
shlb
out
mov
loopne
mov
push
lahf
rcrb
push
addl
jle
arpl
xchg
ljmp
jmp
or
fwait
pop
xor
fdivr
mov
push
out
add
movsb
and
scas
addb
xchg
addr16
inc
cmpb
xchg
mov
jb
aad
cmp
fwait
jg
and
insb
or
mov
movsb
inc
or
mov
mov
pusha
mov
outsb
jb
jle
aam
scas
loopne
imul
inc
adc
push
mov
inc
push
mov
add
push
cmc
pop
inc
bound
jb
pusha
pusha
xchg
loopne
scas
bound
mov
push
lahf
push
out
or
loopne
popf
out
outsb
pop
sarl
popf
mov
ds
pop
fnstcw
adc
adc
andb
cmp
xchg
loopne
fbld
lret
fidivl
or
add
sarl
fisttps
imulb
mov
loopne
jmp
mov
sub
rorb
add
and
pop
xchg
rolb
jnp
or
sar
push
rclb
dec
outsb
cli
rorl
test
or
addb
adc
inc
lret
fidivrs
bound
push
cmp
push
add
mov
jge
xor
pop
push
cmp
push
cli
mov
mov
mov
ja
push
in
cmp
mov
addb
pop
cld
stc
sbbl
or
sub
rcrl
or
xor
mov
push
add
sbb
mov
fcomps
addb
and
icebp
mov
lds
add
gs
rorb
jno
shlb
xor
leave
and
add
xorb
into
test
loopne
imul
xor
sub
and
je
or
cmpb
mov
sti
rorl
jl
rcr
pop
mov
xchg
mov
shlb
mov
adc
addb
loopne
adc
loop
pop
stos
and
add
add
or
test
inc
lock
sbb
divb
jae
or
test
orb
pusha
mov
mov
mov
mov
add
cli
mov
mov
loopne
mov
xchg
notl
ror
cmp
lods
jp
lret
mov
inc
pusha
adc
xor
dec
jno
sub
pusha
dec
and
mov
inc
js
test
and
lret
loopne
adc
xchg
xchg
test
mov
pop
dec
add
and
rcr
jb
in
daa
push
loop
fs
popa
inc
xor
add
lcall
shl
stc
pushf
push
in
xor
jns
push
mov
inc
mov
pusha
rcr
fcomp
dec
data16
rcl
add
int
fldenv
loopne
loopne
loop
daa
dec
mov
rolb
test
les
orl
mov
xor
jmp
mov
jg
xchg
das
adc
fwait
std
mov
repz
or
ljmp
loopne
jno
or
stos
movsb
add
and
test
loopne
addr16
je
mov
mov
fnsave
test
and
fldl
mov
in
mov
push
ss
shlb
mov
pusha
mulb
xorl
shrd
or
je
cld
nop
aad
fcompl
mov
shlb
cwtl
in
outsl
mov
lock
popf
add
rclb
mov
ror
test
inc
mov
pop
jl
and
daa
push
dec
aam
inc
inc
sbb
rolb
mov
xchg
negl
gs
and
loopne
hlt
cs
inc
adc
repz
xor
addb
push
mov
andb
adc
mov
pusha
push
loopne
add
addb
pop
dec
and
xchg
rol
xchg
dec
inc
arpl
sahf
xchg
push
popa
xchg
and
or
rolb
aas
mov
sbb
andb
dec
or
loopne
push
pop
push
shl
ret
fistps
sub
or
mov
lods
mov
jl
and
outsl
push
push
pusha
pop
xchg
fwait
sub
dec
push
lret
mov
shlb
rolb
pusha
push
add
add
jo
orl
in
ja
nop
nop
iret
std
pop
push
aas
sub
cmpb
sbb
stos
and
pop
dec
push
and
mov
mov
and
iret
and
fistps
mov
shl
out
mov
cli
push
or
loopne
mov
popa
insl
fnstenv
push
rcrl
fists
imul
sub
pusha
lock
inc
scas
xchg
xchg
push
push
push
pop
popf
inc
and
and
pop
inc
call
cmpsb
addb
add
aad
enter
cmp
adc
xadd
lcall
rcrl
addr16
popw
popa
andb
movsb
mov
lods
xor
fidivrl
pusha
aad
add
dec
push
add
and
arpl
pusha
add
loopne
pop
ret
shlb
repz
mov
iret
iret
adc
clc
cltd
pop
dec
inc
xchg
add
xor
or
inc
mov
mov
mov
mov
ficompl
xchg
fwait
lret
xchg
adc
rcrb
mov
and
andb
xor
andb
and
nop
jbe
jns
setno
fidivl
cmpsb
pusha
add
jns
loopne
or
push
dec
adc
call
addb
mov
sub
mov
or
inc
mov
ljmp
jg
jno
inc
jnp
sub
imul
loopne
rcll
ds
lods
xor
push
xor
lret
mov
dec
not
cmp
into
sub
shl
daa
pop
mov
loope
rcrb
xchg
adc
mov
jecxz
into
mov
jnp
aaa
outsl
or
and
and
test
loopne
aam
xchg
adc
pusha
das
faddl
pop
xor
push
sub
and
sbb
addb
mov
xchg
fstpt
mov
and
inc
mov
and
and
adcb
ret
add
cmp
mov
aaa
iret
in
sub
pusha
adc
inc
mov
and
jb
inc
and
fstps
mov
add
out
cmpsb
mov
fidivs
mov
dec
fsubs
ret
pusha
movsl
adc
xor
out
leave
pop
jle
jmp
test
test
inc
cmpsb
rolb
loopne
jbe
outsb
popf
jecxz
out
xchg
or
cmp
popf
shlb
divb
jnp
shlb
mov
inc
test
rcrb
loopne
mov
xlat
fisttpl
rcrb
fistpll
add
inc
mov
pop
scas
loopne
sbb
stc
call
loopne
ja
mov
pop
add
adc
cmp
shl
cmc
mov
andb
push
pop
dec
insl
pop
mov
mov
std
add
orb
addr16
jns
and
xchg
mov
pop
inc
out
mov
push
in
sub
popa
add
insl
cmp
shl
leave
lcall
jns
rcrl
add
cmp
mov
inc
push
mov
pusha
cmp
andl
cmp
cwtl
xchg
mov
imul
jl
aaa
pop
in
add
inc
add
loopne
inc
sti
ror
add
movsb
rolb
jp
js
mov
loopne
repz
je
add
jne
insl
ds
mov
adcl
add
inc
lods
mov
pusha
adcb
pusha
sar
sti
and
loopne
cltd
push
push
sbb
fmull
inc
mov
ret
adc
cltd
pop
lods
imul
mov
mov
push
fdivs
mov
sub
mov
ja
push
cld
mov
mov
inc
cmc
jmp
out
mov
movb
loopne
fcmovbe
mov
or
cmp
and
mov
jo
mov
mov
add
dec
dec
movsl
mov
in
mov
sub
push
cmc
sahf
xor
inc
add
shl
out
nop
adc
fbld
add
and
and
sbb
pushf
mov
or
inc
or
xor
inc
mov
xchg
mov
loopne
nop
and
ja
ja
pop
stc
push
outsb
inc
inc
adc
mov
push
mov
das
or
mov
shr
aad
shll
jmp
push
or
rol
out
pop
testl
ret
sub
inc
and
add
shl
movsl
stos
or
daa
aaa
sub
add
pop
lahf
jl
and
jl
cwtl
mov
pusha
pusha
and
dec
adc
dec
push
jle
inc
loopne
add
insb
push
shl
or
inc
cld
add
and
inc
loopne
movsb
add
fcompl
inc
gs
sahf
and
ficompl
cmpb
pop
lret
mov
jns
rol
pop
mov
dec
mov
cli
mov
mov
and
rolb
or
pusha
dec
or
shlb
out
loopne
pcmpeqw
stos
lret
jns
in
aaa
jmp
and
xor
daa
pushf
push
and
xchg
mov
lea
movsl
in
test
lods
add
das
js
gs
lret
movsl
std
pushf
cmpsb
add
xor
add
jge
mov
or
loopne
add
sti
int
push
fstps
xor
gs
call
push
fsubrp
or
rcrb
dec
inc
addb
rolb
and
adc
adc
shl
cmpsl
lock
ja
jns
mov
mov
fldt
dec
mov
popa
sbb
addl
jns
xchg
stc
fisttps
mulb
jns
pop
push
or
pusha
fwait
sub
insl
repz
mov
imul
and
jne
jo
add
mov
repz
insl
and
sub
cmpb
bound
and
xchg
inc
sbb
pop
movsb
and
cwtl
pop
arpl
unpckhps
jg
and
repz
sub
and
pusha
scas
add
and
repnz
fisubrl
xor
cmc
and
repz
or
loopne
sub
adc
mov
fisubrl
sbb
dec
cmpsb
addb
mov
pop
inc
pop
repz
rorb
mov
out
jge
movb
loopne
mov
and
jns
pop
cwtl
notl
into
mov
out
push
pop
pop
xchg
aam
cmpsl
adc
push
pop
stos
add
jl
lods
mov
lret
fucomp
addr16
cmp
fisttps
pusha
adcb
loopne
pop
mov
inc
mov
push
les
pusha
xor
push
xor
push
fwait
mov
inc
faddl
shll
jge
jae
inc
rclb
rol
repz
aaa
repz
sarb
lret
sahf
in
outsl
scas
inc
and
push
pusha
and
and
push
loopne
scas
mov
push
out
xor
addb
and
imul
cmpsl
les
pusha
icebp
inc
js
adc
cwtl
enter
push
adc
pop
cmpsl
leave
in
cmp
rorb
and
ja
mov
xchg
jb
pusha
sbb
cltd
dec
mov
pop
out
xorl
mov
shlb
inc
lret
jb
sub
inc
aad
sahf
sahf
shr
inc
nop
cld
xchg
test
aam
mov
in
sub
push
loopne
mov
add
clc
and
cmpsb
inc
and
pop
and
sbb
movsb
mov
cmc
mov
frndint
fsubrs
add
cmp
mov
jle
add
and
inc
ret
insb
fldt
enter
sahf
cmc
cmp
xchg
jle
inc
in
sbb
shlb
sbb
test
loopne
fsubrs
shlb
sbbb
and
push
cmpsb
rolb
rolb
pusha
pusha
fdivrp
nop
or
outsb
int3
xchg
mov
pusha
sub
loop
push
xlat
ds
and
rcll
test
out
outsl
sub
imul
add
dec
mov
add
xchg
jmp
push
and
popa
adc
lods
ret
popa
pop
jecxz
ljmp
addr16
iret
leave
and
mov
sbb
scas
xlat
lods
inc
inc
dec
push
lock
rolb
adcb
add
mov
es
inc
jo
dec
and
pop
or
mov
loopne
pop
loop
and
mov
jmp
and
loopne
cli
neg
adc
addb
push
pop
or
adc
cli
pop
ds
out
jecxz
jmp
cmp
sbb
push
add
mov
push
data16
stos
add
inc
pop
inc
stos
int3
mov
popf
dec
mov
jle
fimull
and
stos
addb
ss
stos
out
loopne
dec
mov
mov
dec
pop
and
inc
ret
mov
or
and
mov
xor
fldcw
scas
rolb
mov
repz
sarb
add
addb
ljmp
test
ret
dec
mov
or
int
push
inc
pusha
icebp
xchg
sub
mov
loopne
jnp
sub
pusha
sub
insl
pop
data16
inc
std
lods
add
adc
out
cwtl
lret
mov
rorl
lods
andb
data16
insb
jg
into
ja
push
push
cld
mov
add
push
push
push
push
push
push
call
sub
add
imul
lea
and
cmp
je
mov
push
push
bnd
cmp
jne
mov
add
push
push
push
push
call
test
jne
jmp
lea
movl
push
push
push
push
call
cmp
lea
jne
movzbl
or
pop
mov
not
imul
and
jne
call
loop
mov
mov
stc
notrack
sbb
mov
add
add
mov
mov
mov
inc
or
lea
lea
add
lea
add
sub
jmp
push
mov
jmp
sahf
jge
inc
int
jno
add
pop
bnd
je
leave
mov
nop
aaa
mov
sahf
push
ds
and
fimull
sub
and
and
and
cmc
or
lods
shlb
pop
jbe
jge
mov
inc
int
fisttpl
jb
pop
in
mov
dec
aas
push
int
gs
inc
or
or
push
pusha
fstpt
dec
stos
mov
push
jbe
loopne
mov
lahf
lods
inc
addb
loopne
jge
cld
imul
ror
and
repnz
rolb
jmp
andb
pop
jge
and
push
cmp
je
int
addb
jecxz
push
js
nop
in
dec
rclb
xchg
xchg
jns
xchg
add
scas
enter
lock
sbb
add
aaa
pop
pusha
ret
jb
scas
mul
jae
pop
fdivl
and
push
pushf
ss
and
dec
insl
cmp
shl
push
icebp
addb
lret
pusha
mov
das
push
xor
insb
in
aam
out
sbb
mov
out
stos
addb
or
sarb
rclb
aam
cmp
les
test
in
jnp
lret
ja
mov
ljmp
jge
sbb
enter
pop
adc
inc
or
sbb
pop
push
mov
stos
leave
ret
add
fcoms
adc
xor
shlb
jl
fs
mov
add
loopne
sbbl
pusha
mulb
and
or
mulb
mov
andl
shlb
popf
xchg
cmp
es
add
add
ss
xorb
inc
jbe
lods
add
test
mov
xchg
incl
add
adc
aad
jo
mov
repz
push
pushf
in
pop
xor
movl
add
jne
mov
enter
dec
clc
jo
mov
or
shrb
push
int3
mov
jl
pop
pop
mov
jmp
adc
push
jl
add
loopne
inc
loopne
incb
push
pop
or
pop
cltd
mov
mov
adc
xchg
pop
ljmp
icebp
sbb
imul
mov
hlt
sub
mov
xlat
addr16
push
andb
stos
pusha
shlb
das
int
and
add
jp
mov
scas
add
daa
mov
jg
js
or
repnz
out
pop
idivl
loopne
aas
sub
pusha
pusha
aas
jmp
loopne
sub
xorb
shlb
loopne
imul
das
add
loopne
addb
test
cwtl
test
rolb
mov
and
add
add
outsb
loop
decb
sbb
xor
or
add
ds
cwtl
cmpsb
and
pusha
adc
loopne
inc
mov
movsb
rolb
icebp
push
add
push
mov
mov
xchg
mov
rol
lcall
jo
nop
push
pusha
pusha
movsl
and
mov
insl
daa
sbb
inc
adc
jp
repz
xor
mov
xlat
dec
pop
mov
sbbb
xchg
ret
mov
inc
xchg
inc
shrb
inc
and
xor
push
mov
loopne
shlb
loopne
dec
sbb
loopne
imul
mov
aad
mov
xchg
sub
add
lahf
inc
faddl
add
in
or
add
jae
pop
push
add
push
ret
pop
xor
mov
ss
jp
mov
adc
ljmp
add
mov
rcrb
shrb
pop
mov
adc
sub
pop
iret
pop
jo
mov
xor
and
inc
loopne
inc
mov
lcall
inc
and
fs
out
dec
in
push
xor
cmp
adc
pop
repz
dec
movsl
int3
push
and
xchg
movsl
les
jmp
popa
jmp
mov
adc
mov
out
addl
or
add
lods
cmpsb
add
add
cmpsb
pusha
inc
jg
jp
daa
jns
and
loopne
pusha
subb
mov
xchg
sub
xor
aam
sub
pusha
xchg
mov
andb
sti
psubsb
ds
push
inc
mov
addb
pusha
mov
jbe
dec
test
out
pop
or
pop
imul
das
mov
xchg
enter
mov
int
pop
pop
push
andb
pop
cmp
jae
ret
pop
mov
jb
andl
fdivrp
push
and
push
push
mov
add
mov
sbb
xor
mov
andb
sub
and
and
stos
test
inc
aad
adc
es
shlb
add
stos
addb
cmpsl
shl
mov
mov
fwait
sbb
loopne
mov
or
dec
in
fadds
pop
lods
mov
mov
int3
mov
insb
add
and
pusha
rclb
pop
test
or
and
and
push
sbb
pop
mov
adc
neg
sub
mov
mov
adcb
pusha
js
popf
jmp
pop
add
and
sub
lods
rcrl
aaa
push
pop
ljmp
inc
mov
subb
jne
les
mov
mov
pop
pop
stos
inc
jns
pop
mov
jnp
int
or
add
shrb
gs
jl
addb
jns
lcall
or
xorb
dec
jecxz
outsl
scas
xchg
cmp
std
jbe
mov
mov
loopne
pusha
loopne
into
stc
mov
mov
jmp
rolb
mov
inc
mov
add
inc
cli
shr
push
je
stos
mov
mov
inc
rolb
roll
addb
mov
push
and
mov
scas
pusha
pusha
mov
and
adc
insb
das
or
xchg
jae
rcrl
pop
pop
pushf
adc
and
and
and
jne
mov
jmp
and
mov
push
xor
movsl
jl
push
mov
ja
cmc
sbb
push
mov
pusha
loopne
or
loopne
inc
fdivrl
aaa
add
add
out
push
or
test
stos
loopne
aad
stos
jmp
lods
pop
mov
repnz
pop
xchg
sub
rcr
aaa
sub
decb
sbb
xor
test
loop
push
cmp
das
das
decl
loopne
jmp
xor
add
fisubl
push
loopne
mov
daa
int
jge
mov
and
andb
mov
inc
xchg
mov
int
fcmovu
cmp
test
push
pop
push
in
mov
or
add
das
bound
incb
mov
test
mov
shlb
xor
xlat
clc
mov
pusha
ret
pop
dec
xor
pusha
mov
add
pusha
and
and
inc
pusha
loopne
imul
addb
adcl
push
mov
mov
inc
jmp
and
pop
or
and
xor
cs
gs
add
loopne
adc
sbb
push
cwtl
jnp
xor
jecxz
add
addb
test
mov
lods
cltd
repz
mov
mov
ss
adc
push
shl
mov
push
loopne
sub
lcall
sbb
movsl
sbb
adc
mov
aam
stos
fwait
leave
lcall
shlb
test
add
out
jnp
ret
popf
das
push
das
cmp
push
fistpl
mov
sbb
shl
inc
add
pop
xchg
add
icebp
xor
shlb
divl
out
jns
out
test
pusha
push
cld
xchg
test
pushf
inc
push
xchg
lcall
cmpsb
loopne
ret
adc
add
pop
mov
mov
sbb
stc
mov
mov
pop
adc
sub
test
add
add
andb
pop
xlat
les
pop
xchg
dec
out
inc
mov
mov
dec
shr
call
jg
mov
fnstenv
ret
rcrl
xor
into
add
jle
and
test
sbb
loopne
add
inc
pusha
jecxz
mov
repnz
mov
mov
add
pop
push
dec
sub
arpl
pusha
and
pusha
pusha
test
aaa
pop
arpl
push
ficompl
and
pusha
or
filds
mov
and
lret
fstpl
and
pusha
mov
mov
negl
clc
mov
add
pop
push
add
insb
fstps
dec
mov
sahf
fwait
or
and
nop
push
stc
jp
push
or
shlb
dec
movsl
loop
fdivrs
cmp
cmc
cmpsl
push
or
leave
add
loopne
test
movsl
insl
cmp
loopne
inc
movsl
sbb
sub
or
cmp
movsl
xor
in
cmpsl
adc
sbb
rolb
add
push
add
push
xor
lret
sub
loopne
adc
sahf
dec
mov
scas
jg
xor
and
loopne
hlt
cmpl
mov
mov
into
imul
and
cli
and
and
xchg
dec
pop
shlb
shr
je
push
pmulhw
or
out
aam
mov
loop
push
shlb
and
daa
add
lret
push
lods
mov
loopne
pop
pop
inc
sub
mov
pushl
and
dec
shlb
mov
add
push
push
cmc
jae
mov
mov
mov
loopne
loopne
mov
lea
sarl
pusha
inc
das
mov
lea
mov
add
fyl2xp1
mov
lea
push
inc
lret
rol
in
in
jmp
jle
or
sbbb
pop
and
sarb
mov
nop
or
pusha
rorl
mov
inc
scas
loopne
das
and
loopne
mov
xchg
test
add
pop
pop
push
pusha
sarb
lds
dec
xlat
sbb
mov
mov
jle
jb
jl
dec
and
or
dec
inc
out
imulb
or
addr16
add
mov
lahf
adc
cmp
insb
fmull
push
dec
sub
aad
pusha
add
cmp
inc
adc
pop
adc
je
andb
dec
cmp
xor
pop
popa
or
push
pop
movsl
fstpl
aaa
mov
mov
sub
xchg
rorb
push
push
and
pusha
cmpsb
and
pop
dec
mov
cmpsb
add
mov
fs
mov
mov
inc
loopne
cmpsb
add
add
pusha
daa
jbe
sbb
repz
inc
fpatan
sub
sar
hlt
aas
push
lret
xor
and
cmp
mov
and
push
pop
rclb
inc
imul
mov
jecxz
test
mov
shrb
arpl
mov
push
cmp
fistl
aam
inc
xorb
jecxz
call
loopne
lds
jecxz,pt
or
pusha
test
mov
imul
jecxz
lret
cmp
or
pusha
add
leave
icebp
std
mov
pop
mov
dec
adc
cwtl
or
mov
pop
lea
and
mov
call
or
and
add
mov
std
cmpsl
fs
movl
or
sbb
inc
xchg
insb
inc
pop
cmc
leave
mov
lahf
insl
mov
mov
add
int3
pop
fdivl
imul
mov
repnz
in
jns
dec
fisttpll
jno
push
pop
pop
cmp
pusha
loopne
xchg
cmp
test
inc
and
pusha
ljmp
mov
inc
mov
jns
mov
push
sbb
popa
push
shrb
adc
jbe
sbb
xor
subb
sarb
mov
cwtl
cltd
xchg
xlat
push
sarl
lcall
in
add
lods
or
inc
xchg
add
push
pushf
fnsave
leave
pop
jmp
cmpsb
pusha
loopne
jb
jmp
cli
lcall
mov
mov
adc
pusha
xchg
rorb
and
cmp
sahf
or
pusha
imul
dec
addb
mov
in
sbb
lahf
sbb
popa
fsts
icebp
xchg
mov
outsb
ret
jmp
fs
and
in
push
das
add
add
adc
fisttpll
xchg
push
pop
pop
sahf
mov
dec
push
inc
sub
inc
cwtl
rorb
ret
mov
mov
and
and
and
lcall
pop
mov
pop
lret
pusha
mov
jle
sbb
les
scas
pop
js
push
add
add
cmp
inc
pusha
stos
mov
and
loopne
ss
sahf
outsb
sbb
inc
mov
loopne
out
popa
nop
inc
jmp
inc
arpl
lahf
popf
cmpl
sub
dec
sub
cmpsl
push
idiv
sbb
icebp
outsl
cmp
mov
test
inc
and
xchg
aam
push
xor
push
addb
dec
mov
add
add
mov
andb
inc
imul
sti
rclb
xor
loope
fisubrs
add
push
hlt
popf
pop
dec
xchg
lret
or
loopne
inc
frstor
and
repnz
lods
mov
xor
or
inc
rol
xchg
jns
mov
mov
push
mov
or
add
insl
and
loopne
push
hlt
jno
fcoms
or
mov
pusha
shrb
and
inc
jnp
xor
bound
mov
adc
xlat
cmpsb
loopne
add
loopne
outsl
push
and
dec
andb
xchg
daa
xchg
cmp
jle
xor
pop
xchg
inc
enter
pusha
into
out
loope
cmp
xchg
push
imull
push
dec
mov
mov
nop
cld
jae
add
mov
inc
shr
scas
or
add
add
scas
mov
dec
jno
outsb
or
add
add
pop
movl
scas
in
cmp
and
mov
and
mov
xchg
ret
add
add
add
inc
jmp
add
push
add
add
add
add
clc
repnz
nop
cld
jae
sti
add
add
jo
push
nop
push
mov
leave
nop
jmp
movsb
add
jecxz
push
lret
in
clc
repnz
nop
cld
jae
add
xchg
or
nop
nop
cld
jae
add
adc
add
xor
or
fistl
pusha
inc
add
jecxz
mov
adc
repnz
nop
cld
jae
add
xor
add
stos
rolb
push
mov
xchg
ret
add
roll
add
mov
mov
test
mov
clc
repnz
nop
cld
jae
xchg
movsb
cwtl
add
or
pusha
sub
pusha
jo
int3
push
loopne
adc
xor
xchg
ret
das
mov
or
pop
pushl
push
mov
xchg
ret
stc
jo
add
adc
lods
loopne
icebp
decl
clc
repnz
nop
cld
jae
ja
or
sbb
jb
nop
push
mov
leave
nop
jmp
in
xchg
add
cmp
outsb
inc
add
sti
add
lret
add
add
sbbl
and
add
in
das
ficoms
inc
mov
and
repnz
nop
cld
jae
add
ret
add
xchg
addl
push
inc
push
add
in
add
lods
addb
jne
clc
repnz
nop
cld
jae
mov
add
fisttps
test
push
mov
leave
nop
jmp
lret
add
mov
mov
leave
nop
jmp
add
add
addb
filds
out
outsb
inc
add
cmpsb
mov
scas
mov
clc
repnz
nop
cld
jae
mov
add
rcrl
nop
nop
cld
jae
mov
add
add
mov
and
nop
push
mov
leave
nop
jmp
add
add
call
cld
jae
int3
xchg
add
add
add
add
repnz
nop
cld
jae
add
and
clc
repnz
nop
cld
jae
movsb
add
fistpl
mov
xchg
ret
add
adc
fiadds
xor
xchg
jae
push
mov
xchg
ret
scas
add
movsb
das
in
mov
fsubl
cwtl
ret
clc
repnz
nop
cld
jae
sti
add
and
adc
add
pop
inc
add
or
stc
push
in
add
loopne
mov
inc
sub
clc
repnz
nop
cld
jae
sti
sarl
adc
push
mov
leave
nop
jmp
fcoml
add
add
aad
push
mov
xchg
ret
push
adc
add
loope
test
repnz
nop
cld
jae
mov
mov
push
mov
xchg
ret
cmp
add
add
add
clc
repnz
nop
cld
jae
and
bound
adc
mov
cmpw
clc
repnz
nop
cld
jae
and
add
mov
cmpl
nop
push
mov
leave
nop
jmp
pop
cmpsb
in
sbb
jecxz
clc
repnz
nop
cld
jae
add
add
add
nop
jmp
add
add
test
rcrb
push
pop
push
mov
xchg
ret
add
sbb
add
add
add
push
mov
nop
nop
cld
jae
incl
add
pop
jmp
stc
mov
int3
add
add
add
andl
adc
nop
cld
jae
shll
add
mov
add
jle
clc
mov
inc
clc
repnz
nop
cld
jae
lret
dec
mov
pop
or
shl
push
mov
xchg
ret
add
roll
add
add
xchg
pop
mov
clc
repnz
nop
cld
jae
mov
add
clc
repnz
nop
cld
jae
add
aas
xor
mov
clc
repnz
nop
cld
jae
movsb
sti
add
xor
mov
pop
clc
repnz
nop
cld
jae
add
mov
push
aas
incl
push
mov
inc
in
mov
push
mov
xchg
ret
adc
add
add
mov
pop
push
mov
xchg
ret
adc
mul
push
add
daa
inc
clc
repnz
nop
cld
jae
dec
sti
aas
add
cwtl
add
leave
push
push
mov
xchg
ret
add
adc
add
mov
fisttpl
test
adc
nop
nop
cld
jae
add
dec
sti
rep
clc
repnz
nop
cld
jae
add
pop
cmp
mov
add
clc
repnz
nop
cld
jae
sti
add
add
push
clc
repnz
nop
cld
jae
add
add
mov
and
enter
mov
mov
adc
repnz
nop
cld
jae
add
clc
repnz
nop
cld
jae
add
add
add
pop
call
nop
jmp
faddl
stc
inc
mov
mov
push
mov
xchg
ret
add
add
mov
cmp
ret
in
add
xor
jo
sbb
pop
push
mov
scas
add
add
imul
mov
push
clc
repnz
nop
cld
jae
or
add
adc
add
lret
push
push
mov
xchg
ret
add
pop
idivb
add
add
push
clc
repnz
nop
cld
jae
cwtl
add
pop
push
mov
xchg
ret
add
int3
adc
hlt
xor
repnz
nop
cld
jae
jo
roll
int3
mov
adc
xchg
test
cmpl
push
mov
xchg
ret
add
sbb
xlat
push
clc
repnz
nop
cld
jae
or
add
pop
clc
repnz
nop
cld
jae
add
add
add
add
fistpl
clc
repnz
nop
cld
jae
add
add
add
mov
clc
repnz
nop
cld
jae
movl
inc
jp
nop
push
mov
leave
nop
jmp
add
push
push
mov
xchg
ret
push
inc
add
add
mov
leave
nop
jmp
lea
jecxz
cmpsb
and
cld
mov
push
mov
xchg
ret
adc
add
dec
enter
and
clc
repnz
nop
cld
jae
add
inc
mov
push
mov
xchg
ret
add
add
pop
add
pop
nop
push
mov
leave
nop
jmp
add
add
loopne
add
clc
push
mov
xchg
ret
push
add
sbb
fistpl
clc
repnz
nop
cld
jae
or
fcoml
jmp
add
xchg
mov
xchg
int3
add
mov
xor
repnz
nop
cld
jae
add
or
add
jb
mov
and
adc
popf
mov
clc
repnz
nop
cld
jae
push
add
add
sbb
inc
add
add
add
pop
push
mov
xor
clc
repnz
nop
cld
jae
add
in
lea
add
mov
push
clc
repnz
nop
cld
jae
add
inc
add
add
nop
push
mov
leave
nop
jmp
ja
adc
add
loop
push
mov
xchg
ret
xchg
inc
add
add
push
mov
leave
nop
jmp
add
lret
incl
pop
xor
lea
clc
repnz
nop
cld
jae
lret
dec
mov
mov
clc
repnz
nop
cld
jae
lea
cmpsb
pop
rorl
nop
nop
cld
jae
add
cmpsb
add
jecxz
xor
clc
repnz
nop
cld
jae
adc
mov
xchg
ret
push
push
add
xor
xor
add
sti
clc
repnz
nop
cld
jae
xor
add
xor
clc
repnz
nop
cld
jae
mov
mov
push
lahf
add
push
mov
xchg
ret
cmpsb
aas
movl
mov
clc
repnz
nop
cld
jae
mov
mov
add
push
cmpw
nop
push
mov
leave
nop
jmp
mov
jne
nop
push
mov
leave
nop
jmp
xchg
adc
jmp
push
sub
nop
jmp
inc
push
add
add
mov
jmp
nop
cld
jae
add
xchg
faddp
mov
nop
nop
cld
jae
mov
add
lea
mov
repnz
nop
cld
jae
add
adc
call
clc
repnz
nop
cld
jae
adc
jno
mov
adc
cmp
ret
add
add
cmpl
mov
nop
push
mov
leave
nop
jmp
add
pusha
sub
out
test
clc
repnz
nop
cld
jae
xchg
add
add
add
and
repz
mov
add
add
ja
add
add
cltd
push
push
mov
xchg
ret
adc
mov
in
adc
push
mov
xchg
ret
ja
add
add
add
repnz
nop
cld
jae
push
cmpsb
sbb
ja
add
aas
adc
nop
jmp
push
add
movswl
clc
repnz
nop
cld
jae
add
pop
clc
repnz
nop
cld
jae
xchg
push
dec
add
adc
scas
push
jle
pusha
clc
repnz
nop
cld
jae
add
add
add
add
mov
nop
push
mov
leave
nop
jmp
xor
add
adc
loopne
cmp
repz
nop
push
mov
leave
nop
jmp
add
add
add
enter
pop
fwait
clc
repnz
nop
cld
jae
mov
add
xor
push
mov
xchg
ret
add
add
add
add
bound
ret
clc
repnz
nop
cld
jae
add
mov
xchg
inc
cmp
mov
xchg
ret
push
mov
push
mov
add
repnz
nop
cld
jae
fsubrl
mov
clc
repnz
nop
cld
jae
add
mov
mov
sbb
add
pusha
ficomps
mov
leave
nop
jmp
aas
fsubrl
cld
xchg
in
dec
cmp
repnz
nop
cld
jae
add
mov
mov
xchg
ret
add
add
push
add
popf
test
push
mov
xchg
ret
add
add
orl
cld
jae
faddl
mov
mov
lret
add
add
loopne
add
clc
repnz
nop
cld
jae
jmp
sahf
or
add
in
leave
nop
jmp
push
adc
push
mov
push
mov
les
adc
add
mov
xorb
add
push
mov
xchg
ret
roll
int3
das
orl
icebp
xchg
clc
repnz
nop
cld
jae
mov
add
push
clc
repnz
nop
cld
jae
xchg
add
add
dec
clc
repnz
nop
cld
jae
pop
add
push
scas
fiadds
add
sbb
mov
push
mov
xchg
ret
cmp
jno
mov
popa
clc
repnz
nop
cld
jae
add
cmp
add
add
lock
movzwl
clc
repnz
nop
cld
jae
mov
sti
add
clc
shrb
fsubrp
mov
clc
repnz
nop
cld
jae
pushl
sbb
stos
clc
repnz
nop
cld
jae
add
add
in
push
push
mov
xchg
ret
add
add
aas
mov
add
fwait
movzwl
push
mov
xchg
ret
bound
mov
and
nop
nop
cld
jae
cmp
mov
mov
add
nop
jmp
add
adc
sti
push
in
pop
push
push
mov
xchg
ret
pop
mov
add
add
adc
add
repnz
nop
cld
jae
xchg
mov
clc
repnz
nop
cld
jae
add
push
and
add
push
loopne
add
clc
repnz
nop
cld
jae
add
add
add
in
leave
nop
jmp
testb
fcoml
add
xchg
in
clc
repnz
nop
cld
jae
add
mov
inc
adc
cmp
repnz
nop
cld
jae
add
int3
in
int
clc
repnz
nop
cld
jae
cmp
add
add
and
fistpl
push
mov
xchg
ret
mov
dec
adc
nop
cld
jae
add
push
mov
std
mov
nop
push
mov
leave
nop
jmp
ja
mov
call
nop
push
mov
leave
nop
jmp
add
add
rorl
nop
cld
jae
add
add
clc
dec
inc
clc
repnz
nop
cld
jae
and
or
lahf
pop
nop
push
mov
leave
nop
jmp
add
movb
pop
fsubrl
dec
nop
push
mov
leave
nop
jmp
add
push
add
jo
loopne,pn
cmpl
leave
nop
jmp
add
fcmovb
inc
shlb
mov
xchg
ret
add
add
sbb
clc
repnz
nop
cld
jae
cmpsb
add
jecxz
ja
sub
add
nop
jmp
adc
add
addb
sbb
sbb
add
clc
repnz
nop
cld
jae
fiadds
add
push
and
movsb
mov
loopne
add
repnz
nop
cld
jae
add
aas
add
jg
clc
repnz
nop
cld
jae
add
add
add
push
mov
clc
repnz
nop
cld
jae
jecxz
bound
pusha
push
fistpl
clc
repnz
nop
cld
jae
add
pop
add
int3
addr16
clc
repnz
nop
cld
jae
movsb
aas
add
ja
loopne
cmp
addb
ret
mov
add
inc
inc
pop
sbb
push
push
mov
xchg
ret
add
add
mov
das
pop
clc
repnz
nop
cld
jae
add
sbb
xchg
push
clc
repnz
nop
cld
jae
add
adcl
lea
in
int
clc
repnz
nop
cld
jae
pop
adc
add
add
xor
pop
shl
clc
repnz
nop
cld
jae
add
sbb
inc
push
add
clc
repnz
nop
cld
jae
das
add
je
clc
repnz
nop
cld
jae
add
add
repnz
nop
cld
jae
movsb
add
adc
xor
andb
clc
repnz
nop
cld
jae
sbb
divb
aad
clc
nop
push
mov
leave
nop
jmp
add
add
aad
enter
in
leave
nop
jmp
adc
mov
push
clc
repnz
nop
cld
jae
das
add
add
fs
fwait
clc
repnz
nop
cld
jae
add
add
add
add
icebp
lss
clc
repnz
nop
cld
jae
add
add
clc
repnz
nop
cld
jae
add
mov
repnz
nop
cld
jae
lea
add
add
lods
xor
clc
repnz
nop
cld
jae
push
cmpsb
add
mov
add
mov
mov
push
mov
xchg
ret
lea
cwtl
jecxz
faddl
add
nop
push
mov
leave
nop
jmp
aas
add
shll
repnz
nop
cld
jae
add
dec
add
add
pop
add
shr
clc
repnz
nop
cld
jae
and
add
pusha
loopne
xor
push
mov
xchg
ret
and
mov
testb
adc
inc
cmp
add
push
add
add
add
add
clc
repnz
nop
cld
jae
sti
add
jo
add
fistpl
clc
repnz
nop
cld
jae
adc
add
add
loopne
lods
mov
lret
shrb
cld
jae
add
fiadds
add
sbb
push
mov
xchg
ret
sbb
adc
mov
cmp
jae
repnz
nop
cld
jae
add
mov
incb
add
clc
repnz
nop
cld
jae
push
add
hlt
and
call
nop
jmp
mov
cmpsb
imul
nop
nop
cld
jae
xchg
roll
add
inc
andb
push
mov
xchg
ret
mov
add
or
sub
repnz
nop
cld
jae
xorl
add
mov
jle
mov
repnz
nop
cld
jae
mov
stc
add
pop
mov
or
and
add
add
pop
push
fistpl
nop
push
mov
leave
nop
jmp
sbb
lret
add
adc
repnz
nop
cld
jae
add
add
add
clc
repnz
nop
cld
jae
add
add
add
sbb
sub
leave
push
nop
push
mov
leave
nop
jmp
addl
roll
add
int3
inc
rep
clc
repnz
nop
cld
jae
push
ja
xor
adc
nop
cld
jae
mov
stc
add
clc
repnz
nop
cld
jae
add
jmp
add
add
nop
push
mov
leave
nop
jmp
add
add
inc
int3
xor
andb
cmp
repnz
nop
cld
jae
sbb
add
in
movsb
xchg
mov
nop
push
mov
leave
nop
jmp
mov
add
add
add
nop
cld
jae
or
lret
and
cmc
test
nop
push
mov
leave
nop
jmp
mov
add
mov
xchg
ret
adc
add
leave
and
nop
push
mov
leave
nop
jmp
add
mov
adc
repnz
nop
cld
jae
roll
add
mov
pop
ja
add
add
add
cwtl
push
cmpsb
or
nop
cld
jae
add
add
sub
mov
add
add
add
lret
sbb
push
clc
repnz
nop
cld
jae
scas
pop
add
add
fists
repnz
nop
cld
jae
jecxz
and
add
add
nop
push
mov
leave
nop
jmp
in
add
add
pop
inc
add
nop
push
mov
leave
nop
jmp
add
mov
add
add
repnz
nop
cld
jae
lea
add
flds
jp
inc
add
mov
and
xor
push
mov
xchg
ret
mov
add
das
bound
mov
repnz
nop
cld
jae
fcoml
add
das
mov
repnz
nop
cld
jae
lea
add
inc
loopne
pop
clc
repnz
nop
cld
jae
add
cmp
add
add
call
nop
push
mov
leave
nop
jmp
add
add
movsb
rolb
mov
mov
xchg
ret
add
add
sbb
gs
clc
repnz
nop
cld
jae
add
ljmp
add
in
add
push
clc
repnz
nop
cld
jae
add
sbb
or
jecxz
enter
call
repnz
nop
cld
jae
add
mov
adc
add
inc
call
clc
repnz
nop
cld
jae
and
add
jl
push
clc
repnz
nop
cld
jae
cmp
add
dec
add
adc
add
push
mov
xchg
ret
add
push
add
add
jl
jns
push
mov
xchg
ret
add
testb
lea
add
je
clc
repnz
nop
cld
jae
sbb
add
mov
leave
nop
jmp
adc
movb
rcrl
pop
add
clc
repnz
nop
cld
jae
add
cwtl
add
jecxz
inc
and
xor
clc
repnz
nop
cld
jae
add
movb
mov
clc
repnz
nop
cld
jae
push
adc
add
push
mov
leave
nop
jmp
movsb
mov
add
dec
jmp
dec
xchg
add
stc
pop
jo
add
js
shlb
mov
clc
repnz
nop
cld
jae
add
rorl
nop
nop
cld
jae
add
mov
mov
clc
repnz
nop
cld
jae
mov
add
mov
leave
nop
jmp
add
add
jno
test
and
xor
adcl
push
mov
leave
nop
jmp
mov
add
cmp
nop
nop
cld
jae
mov
clc
repnz
nop
cld
jae
add
add
add
pop
mov
push
mov
xchg
ret
dec
add
mov
call
clc
repnz
nop
cld
jae
mov
out
push
clc
repnz
nop
cld
jae
add
add
add
push
mov
xchg
ret
add
add
add
add
push
mov
xchg
ret
int3
add
mov
add
clc
repnz
nop
cld
jae
add
add
fcoml
out
out
clc
clc
repnz
nop
cld
jae
jno
add
mov
sarb
ret
sbb
cld
jae
pop
mov
mov
cmpsb
and
call
in
stos
inc
jo
add
add
inc
sub
mov
nop
push
mov
leave
nop
jmp
mov
incl
cmp
rorl
nop
cld
jae
aas
add
add
xchg
int
push
mov
xchg
ret
add
add
lea
pusha
loopne
mov
clc
repnz
nop
cld
jae
add
xchg
xchg
xor
lcall
nop
cld
jae
add
or
add
lret
add
clc
repnz
nop
cld
jae
add
jo
add
inc
xchg
jg
ficoms
nop
jmp
lret
int3
adc
scas
sti
pop
popa
mov
nop
push
mov
leave
nop
jmp
add
add
jo
mov
clc
repnz
nop
cld
jae
add
mov
add
loopne
push
mov
clc
repnz
nop
cld
jae
push
add
add
fdivrl
repnz
nop
cld
jae
add
dec
cmp
sub
push
mov
xchg
ret
xchg
add
lea
mov
add
in
leave
nop
jmp
add
fidivs
mov
mov
inc
int3
out
fld1
push
mov
xchg
ret
add
dec
inc
add
fsub
add
adc
clc
repnz
nop
cld
jae
add
add
lret
mov
sub
loopne
mov
clc
repnz
nop
cld
jae
pop
cwtl
adc
scas
add
pop
je
clc
repnz
nop
cld
jae
add
add
inc
mov
clc
repnz
nop
cld
jae
add
pop
add
bound
sbb
outsl
inc
add
add
add
sahf
addr16
clc
repnz
nop
cld
jae
scas
int3
mov
and
cltd
pop
clc
repnz
nop
cld
jae
add
add
add
inc
movl
xchg
ret
push
add
jo
add
push
pusha
or
xor
clc
repnz
nop
cld
jae
xchg
add
fimuls
add
push
mov
xchg
ret
add
add
cmpsb
add
repz
nop
push
mov
leave
nop
jmp
add
or
ret
fwait
push
mov
xchg
ret
push
movsb
lret
push
cwtl
add
idivb
inc
fildll
cld
jae
bound
mov
xor
add
test
push
add
clc
repnz
nop
cld
jae
jno
push
add
clc
repnz
nop
cld
jae
sbb
mov
je
clc
repnz
nop
cld
jae
ja
pop
or
and
xor
clc
repnz
nop
cld
jae
mov
add
or
pusha
sbb
loopne
js
shl
daa
imul
clc
repnz
nop
cld
jae
add
cmp
add
inc
cmpb
xor
repnz
nop
cld
jae
add
jb
stos
and
xchg
push
lea
xchg
ret
add
sti
lret
sub
xor
nop
cld
jae
add
scas
and
jbe
xchg
clc
repnz
nop
cld
jae
dec
add
add
add
ja
mov
push
mov
leave
nop
jmp
add
jo
mov
or
nop
jmp
add
add
mov
dec
cmp
repnz
nop
cld
jae
add
add
add
dec
ror
clc
repnz
nop
cld
jae
push
xchg
add
and
pop
fistpl
clc
repnz
nop
cld
jae
add
pop
xchg
add
nop
push
mov
leave
nop
jmp
sbb
add
imull
cli
clc
repnz
nop
cld
jae
add
add
xchg
xchg
mov
lea
clc
repnz
nop
cld
jae
add
movl
mov
clc
repnz
nop
cld
jae
add
nop
push
mov
leave
nop
jmp
add
add
das
das
add
add
nop
push
mov
leave
nop
jmp
mov
add
aaa
dec
clc
repnz
nop
cld
jae
add
in
add
idiv
add
ror
pop
push
mov
add
pop
imul
add
add
nop
push
mov
leave
nop
jmp
faddl
add
add
lea
clc
repnz
nop
cld
jae
add
int
clc
repnz
nop
cld
jae
jo
add
adc
add
add
clc
repnz
nop
cld
jae
pop
mov
add
and
jb
pushl
push
mov
xchg
ret
add
add
add
clc
hlt
js
pop
nop
push
mov
leave
nop
jmp
pop
add
add
add
int3
cmp
je
sub
repnz
nop
cld
jae
add
xchg
sbb
sbb
ret
add
add
adc
adc
cmpsb
mov
push
add
add
xor
push
mov
xchg
ret
add
stc
add
bound
adc
movzwl
nop
push
mov
leave
nop
jmp
aas
add
scas
add
jge
clc
repnz
nop
cld
jae
int3
mov
add
and
cwtl
js
pusha
loopne
push
push
mov
fisttps
nop
nop
cld
jae
add
das
adc
add
add
clc
repnz
nop
cld
jae
add
roll
add
sbb
add
add
add
cmp
scas
loopne
sbb
inc
fld1
push
mov
xchg
ret
movl
jno
das
pop
clc
repnz
nop
cld
jae
mov
add
adc
add
clc
repnz
nop
cld
jae
mov
negb
cltd
je
nop
push
mov
leave
nop
jmp
xor
lock
clc
repnz
nop
cld
jae
rcll
add
cmpl
jae
pop
add
shrb
add
nop
push
mov
leave
nop
jmp
push
xchg
mov
out
mov
nop
push
mov
leave
nop
jmp
dec
add
add
mov
call
inc
add
xchg
movsb
bound
adc
mov
clc
repnz
nop
cld
jae
ficomps
add
add
ja
clc
repnz
nop
cld
jae
add
cmpsb
xchg
xor
pop
and
mov
leave
nop
jmp
adc
mov
xor
push
imul
nop
push
mov
leave
nop
jmp
faddl
movsb
add
add
inc
loopne
pushl
push
mov
xchg
ret
add
push
xchg
push
nop
push
mov
leave
nop
jmp
movl
dec
add
jno
andl
nop
cld
jae
inc
or
add
jmp
clc
repnz
nop
cld
jae
add
and
push
push
clc
repnz
nop
cld
jae
mov
inc
add
das
push
clc
repnz
nop
cld
jae
add
movb
sti
mov
push
mov
clc
repnz
nop
cld
jae
add
sbb
lret
fld1
clc
repnz
nop
cld
jae
imulb
mov
rclb
repnz
nop
cld
jae
add
mov
add
jne
sar
nop
nop
cld
jae
cwtl
add
ds
or
inc
add
add
add
add
shlb
notl
nop
jmp
mulb
mov
xchg
ret
sti
add
sti
add
adc
pop
nop
push
mov
leave
nop
jmp
sbb
pop
add
xorl
clc
repnz
nop
cld
jae
mov
icebp
nop
push
mov
leave
nop
jmp
add
lret
add
bound
mov
clc
repnz
nop
cld
jae
mov
addl
shrb
push
mov
leave
nop
jmp
add
cmp
add
es
clc
repnz
nop
cld
jae
lea
add
jecxz
mov
mov
xchg
ret
add
jo
add
add
loope
jg
clc
repnz
nop
cld
jae
dec
faddl
cmp
add
pop
jae
repnz
nop
cld
jae
mov
clc
nop
push
mov
leave
nop
jmp
add
mov
add
add
nop
push
mov
leave
nop
jmp
jo
add
add
nop
nop
cld
jae
push
add
fcoml
push
push
mov
xchg
ret
add
add
cmpsb
sbb
movsl
cmp
nop
push
mov
leave
nop
jmp
add
cmpl
jns
add
clc
repnz
nop
cld
jae
add
and
enter
mov
xchg
ret
add
add
add
mulb
nop
nop
cld
jae
mov
add
add
push
mov
xchg
ret
or
add
add
add
push
clc
repnz
nop
cld
jae
aas
mov
jno
add
mov
add
clc
repnz
nop
cld
jae
add
add
pop
add
imul
clc
repnz
nop
cld
jae
negb
add
scas
pop
pushf
pop
pop
clc
repnz
nop
cld
jae
add
notb
push
xlat
add
nop
push
mov
leave
nop
jmp
add
cli
push
push
push
mov
xchg
ret
add
add
add
mov
or
mov
add
push
mov
leave
nop
jmp
mov
adc
mov
bound
shrl
push
mov
leave
nop
jmp
lret
pop
mov
movsb
rol
mov
clc
repnz
nop
cld
jae
mov
pop
mov
inc
pusha
jnp
ret
idiv
call
nop
jmp
stc
cmp
jnp
mov
nop
nop
cld
jae
int3
add
stc
add
adc
jl
add
aas
add
adc
add
pop
push
pop
push
mov
xchg
ret
add
add
sbb
shl
push
mov
xchg
ret
mov
cmp
add
repnz
nop
cld
jae
push
push
pop
fiadds
add
mov
xchg
ret
add
add
mov
xchg
ret
in
das
add
ficomps
add
dec
mov
insl
push
clc
repnz
nop
cld
jae
adc
add
xchg
inc
push
mov
xchg
ret
mov
lret
add
add
dec
icebp
mov
clc
repnz
nop
cld
jae
add
add
mov
test
pop
inc
add
add
incl
testb
add
xor
clc
repnz
nop
cld
jae
ja
xchg
xchg
push
pop
pop
push
mov
xchg
ret
cmp
jo
add
add
xchg
pop
clc
repnz
nop
cld
jae
xchg
cmp
push
xor
sti
or
repnz
nop
cld
jae
add
mov
clc
repnz
nop
cld
jae
add
add
add
nop
push
mov
leave
nop
jmp
add
pop
mov
jno
rcrb
iret
lcall
divb
bound
add
movl
inc
rolb
adc
repnz
nop
cld
jae
add
add
push
scas
mov
clc
repnz
nop
cld
jae
xchg
pop
aas
das
adc
es
dec
shr
clc
repnz
nop
cld
jae
add
add
cwtl
adc
test
nop
push
mov
leave
nop
jmp
add
xor
clc
repnz
nop
cld
jae
add
adc
add
push
mov
xchg
ret
add
roll
add
pop
pushf
jne
orl
add
nop
push
mov
leave
nop
jmp
mov
repz
mov
xchg
ret
cwtl
int3
scas
scas
pop
add
push
push
aaa
add
clc
repnz
nop
cld
jae
sti
pop
mov
rolb
loopne
jb
clc
repnz
nop
cld
jae
add
mov
xchg
ret
add
add
pop
add
adc
mov
call
push
mov
leave
nop
jmp
add
add
add
imul
loop
inc
push
cmpsb
adc
ja
scas
jne
nop
push
mov
leave
nop
jmp
and
mov
jp
inc
add
xor
mov
lret
add
push
mov
xchg
ret
lret
add
xchg
addl
ds
mulb
add
clc
repnz
nop
cld
jae
add
add
movsl
not
clc
repnz
nop
cld
jae
add
cwtl
and
and
in
mov
repnz
nop
cld
jae
sarl
add
mov
pop
lds
push
mov
xchg
ret
add
jecxz
jno
add
clc
repnz
nop
cld
jae
adc
add
adc
add
add
push
mov
xchg
ret
add
jo
add
jge
nop
push
mov
leave
nop
jmp
or
add
push
loopne
mov
xchg
ret
add
mov
sub
shlb
mov
xchg
ret
add
add
das
add
push
mov
xchg
ret
mov
pop
add
mov
repz
push
mov
xchg
ret
jmp
mov
nop
nop
cld
jae
int3
dec
add
movsb
and
and
mov
nop
push
mov
leave
nop
jmp
incl
and
add
add
push
nop
push
mov
leave
nop
jmp
jecxz
push
add
leave
nop
push
mov
leave
nop
jmp
jmp
add
push
mov
inc
addl
clc
repnz
nop
cld
jae
add
faddl
in
pop
jmp
dec
add
repnz
nop
cld
jae
int3
aas
xchg
add
dec
clc
stc
or
clc
repnz
nop
cld
jae
add
mov
adc
loope
xlat
or
add
repnz
nop
cld
jae
add
add
adc
repnz
nop
cld
jae
sbb
sbb
add
add
dec
mov
adc
clc
repnz
nop
cld
jae
xorl
loopne
push
sbb
jne
clc
repnz
nop
cld
jae
add
add
rep
clc
repnz
nop
cld
jae
and
add
pop
add
iret
add
nop
push
mov
leave
nop
jmp
add
faddl
add
loopne
ljmp
nop
nop
cld
jae
add
push
in
add
clc
repnz
nop
cld
jae
add
pop
out
and
clc
repnz
nop
cld
jae
add
int
idiv
clc
repnz
nop
cld
jae
add
add
fdivrl
push
push
mov
xchg
ret
add
ficomps
std
mov
nop
push
mov
leave
nop
jmp
add
add
add
add
repnz
nop
cld
jae
adc
sbb
faddl
loopne
out
mov
xor
add
bound
sarl
sub
add
clc
repnz
nop
cld
jae
add
aas
adc
add
and
mov
push
mov
xchg
ret
add
pop
adc
push
mov
inc
andb
loopne
push
nop
push
mov
leave
nop
jmp
mov
and
nop
nop
cld
jae
roll
add
pop
add
addb
repnz
nop
cld
jae
cmp
add
mov
adc
cs
adc
ds
pushl
clc
repnz
nop
cld
jae
xchg
xchg
add
je
loopne
sbb
mov
xchg
ret
add
int3
add
add
add
push
mov
xchg
ret
bound
or
add
xchg
mov
clc
repnz
nop
cld
jae
add
das
rorl
add
repnz
nop
cld
jae
add
mov
and
clc
repnz
nop
cld
jae
add
jl
inc
inc
int3
sub
rclb
and
shlb
clc
repnz
nop
cld
jae
push
inc
jecxz
or
nop
mov
rclb
jmp
inc
add
movsb
add
pop
pop
add
fs
cs
insb
clc
repnz
nop
cld
jae
add
add
int
push
mov
xchg
ret
add
xor
movsb
jo
add
imul
repnz
nop
cld
jae
add
add
add
or
repnz
nop
cld
jae
add
adc
ja
incl
add
xchg
mov
mov
rep
clc
repnz
nop
cld
jae
int3
pop
jno
pop
add
and
inc
jmp
dec
add
and
and
jo
add
testb
aas
dec
test
mov
xchg
ret
add
aas
mov
adc
nop
cld
jae
decl
mov
in
add
aas
gs
clc
repnz
nop
cld
jae
adc
pop
mov
ret
clc
repnz
nop
cld
jae
xchg
add
add
rorl
and
adc
add
add
ja
fistl
dec
pusha
inc
add
in
mov
mov
and
mov
clc
repnz
nop
cld
jae
bound
pop
bound
add
inc
in
repnz
nop
cld
jae
xor
add
xchg
stc
mov
add
repnz
nop
cld
jae
add
cmpl
nop
push
mov
leave
nop
jmp
add
or
nop
cld
jae
add
sti
sbb
in
bound
push
mov
xchg
ret
add
adc
stc
incl
aas
add
sbb
mov
push
mov
xchg
ret
add
jno
mov
out
repz
call
nop
jmp
pop
lea
sbb
loopne
jmp
ret
repnz
nop
cld
jae
xchg
faddl
pop
adc
rol
clc
repnz
nop
cld
jae
cwtl
push
add
mov
push
inc
orb
repnz
nop
cld
jae
add
das
add
add
je
add
roll
add
dec
mov
and
int3
imul
adc
repnz
nop
cld
jae
sti
mov
inc
mov
clc
repnz
nop
cld
jae
add
adc
repnz
nop
cld
jae
lret
add
add
push
inc
lods
push
mov
xchg
ret
add
mov
add
dec
repnz
add
push
mov
add
pop
xchg
pushf
mov
das
addr16
xlat
call
mov
add
add
xchg
add
cmp
mov
xchg
ret
add
add
mov
enter
sub
in
leave
nop
jmp
add
mov
fbstp
add
clc
repnz
nop
cld
jae
add
add
cwtl
add
fistpl
push
mov
xchg
ret
add
in
add
add
nop
nop
cld
jae
jecxz
add
add
dec
add
xorb
push
mov
clc
repnz
nop
cld
jae
xchg
movb
jno
data16
xor
nop
push
mov
leave
nop
jmp
add
bound
mov
sub
and
add
add
add
loope
push
mov
xchg
ret
mov
addl
add
iret
fwait
clc
repnz
nop
cld
jae
stc
ja
add
add
add
iret
pop
inc
add
mov
push
add
add
pusha
add
nop
push
mov
leave
nop
jmp
add
or
jb
call
clc
repnz
nop
cld
jae
jo
mov
inc
add
clc
repnz
nop
cld
jae
pop
add
cmp
add
repnz
nop
cld
jae
add
sbb
mov
addr16
push
mov
xchg
ret
xchg
sbb
ret
enter
clc
repnz
nop
cld
jae
add
add
add
add
clc
repnz
nop
cld
jae
add
add
cmpsb
add
dec
mov
nop
push
mov
leave
nop
jmp
add
add
add
pusha
pusha
ret
add
clc
repnz
nop
cld
jae
add
add
add
add
clc
repnz
nop
cld
jae
jno
add
add
clc
repnz
nop
cld
jae
cmp
xchg
aad
addb
add
repnz
nop
cld
jae
add
scas
fwait
test
nop
push
mov
leave
nop
jmp
add
add
push
je
add
clc
repnz
nop
cld
jae
stc
add
xchg
mov
clc
repnz
nop
cld
jae
add
mov
mov
mov
or
add
add
add
jo
sbb
lcall
clc
repnz
nop
cld
jae
inc
add
add
cwtl
faddl
and
jge
clc
repnz
nop
cld
jae
mov
mov
mov
clc
repnz
nop
cld
jae
pop
push
add
add
add
and
clc
repnz
nop
cld
jae
add
and
loopne
push
push
mov
xchg
ret
add
sti
cmpl
xbegin
jae
add
add
xchg
jo
jo
outsb
test
mov
xchg
ret
add
mov
xchg
mov
inc
nop
push
mov
leave
nop
jmp
jno
scas
fsubrp
arpl
push
mov
leave
nop
jmp
inc
add
cwtl
mov
inc
pop
cmc
push
push
mov
xchg
ret
cwtl
testb
mov
repnz
nop
cld
jae
and
add
pop
jge
call
cld
jae
add
or
mov
mov
clc
repnz
nop
cld
jae
add
enter
je
nop
push
mov
leave
nop
jmp
add
add
mov
push
mov
leave
nop
jmp
adc
add
adc
daa
shl
clc
repnz
nop
cld
jae
ja
sbb
mov
lea
mov
xchg
ret
aas
add
add
add
and
clc
repnz
nop
cld
jae
add
mov
add
inc
add
repnz
nop
cld
jae
add
push
clc
repnz
nop
cld
jae
ja
jno
sbb
add
adc
repnz
nop
cld
jae
add
add
nop
push
mov
leave
nop
jmp
add
ja
add
lret
insb
mov
push
nop
push
mov
leave
nop
jmp
add
add
or
add
fld1
nop
push
mov
leave
nop
jmp
add
add
loop
inc
add
pop
add
add
add
lahf
je
clc
repnz
nop
cld
jae
int3
adc
xchg
add
clc
repnz
nop
cld
jae
add
mov
test
push
mov
xchg
ret
adc
add
add
mov
fwait
mov
push
mov
xchg
ret
pop
xchg
pop
xor
jo
add
pop
push
mov
xchg
ret
sbb
push
movsb
add
pop
add
dec
mov
mov
leave
nop
jmp
jecxz
movl
popl
mov
leave
nop
jmp
add
add
mov
lods
and
clc
repnz
nop
cld
jae
jecxz
add
mov
mov
nop
nop
cld
jae
push
add
shll
mov
imul
cld
jae
add
lea
mov
cmpl
jae
aas
ja
and
sti
xor
push
mov
xchg
ret
and
call
xchg
jno
in
hlt
fcoml
inc
int3
sbb
jl
nop
push
mov
leave
nop
jmp
stc
add
dec
inc
cmp
dec
push
nop
push
mov
leave
nop
jmp
testb
add
xchg
mov
rcll
repnz
nop
cld
jae
xchg
add
bound
cmp
pop
clc
repnz
nop
cld
jae
add
add
or
cmpsb
add
clc
repnz
nop
cld
jae
pop
add
jo
add
notb
lods
push
mov
xchg
ret
add
lret
movl
mov
xchg
ret
push
push
sbb
int3
int3
lea
add
imul
clc
repnz
nop
cld
jae
pop
mov
adc
aam
not
clc
repnz
nop
cld
jae
add
sbb
repnz
nop
cld
jae
pop
add
add
push
mov
nop
push
mov
leave
nop
jmp
stc
add
lret
xor
clc
repnz
nop
cld
jae
mov
add
mov
cmpb
repnz
nop
cld
jae
add
cwtl
fidivs
aas
clc
repnz
nop
cld
jae
add
add
movsb
sbb
push
dec
clc
repnz
nop
cld
jae
add
xchg
pop
mov
push
mov
xchg
ret
add
add
fists
repnz
nop
cld
jae
cmpsb
mov
add
push
clc
repnz
nop
cld
jae
faddl
sbb
add
vpsubsw
push
mov
xchg
ret
cmp
bound
add
and
dec
cmp
repnz
nop
cld
jae
mov
pushl
nop
push
mov
leave
nop
jmp
movsb
add
int3
sbb
add
sbb
push
mov
leave
nop
jmp
add
add
nop
push
mov
leave
nop
jmp
add
add
add
dec
pop
clc
repnz
nop
cld
jae
add
add
testb
outsb
inc
push
mov
clc
repnz
nop
cld
jae
adc
add
add
clc
repnz
nop
cld
jae
mov
dec
and
push
mov
xchg
ret
add
mov
mov
clc
repnz
nop
cld
jae
add
inc
int3
add
rolb
rep
clc
repnz
nop
cld
jae
add
pop
add
add
push
add
clc
repnz
nop
cld
jae
dec
add
add
lods
mov
mov
xchg
ret
mov
or
rorl
mov
xchg
ret
add
pop
je
clc
repnz
nop
cld
jae
add
pop
add
clc
repnz
nop
cld
jae
movsb
lret
cwtl
add
add
clc
repnz
nop
cld
jae
scas
xchg
add
mov
add
repnz
nop
cld
jae
add
call
in
outsl
arpl
add
repnz
nop
cld
jae
add
push
mov
xchg
ret
add
or
cmpsb
adc
add
addb
nop
nop
cld
jae
add
mov
add
repnz
nop
cld
jae
adc
add
divb
add
repnz
nop
cld
jae
add
movsb
shlb
je
add
add
movsb
pop
mov
repz
mov
xchg
ret
ficomps
fcoml
das
mov
fcmovbe
mov
clc
repnz
nop
cld
jae
call
add
add
add
and
add
add
scas
add
xchg
mov
clc
repnz
nop
cld
jae
mov
cmp
leave
push
clc
repnz
nop
cld
jae
add
add
add
mov
xor
or
nop
cld
jae
add
add
dec
clc
repnz
nop
cld
jae
add
adc
xchg
mov
test
aam
clc
repnz
nop
cld
jae
add
in
push
mov
xchg
ret
add
adc
add
add
add
gs
clc
repnz
nop
cld
jae
adc
add
cmpsb
inc
inc
add
nop
nop
cld
jae
add
add
decl
test
clc
repnz
nop
cld
jae
add
add
mov
pop
add
repnz
nop
cld
jae
xchg
add
sbb
push
mov
xchg
ret
ja
add
add
clc
repnz
nop
cld
jae
add
ret
pop
push
mov
xchg
ret
add
mov
movsb
clc
into
lcall
pop
add
clc
repnz
nop
cld
jae
in
cwtl
jo
sbb
dec
lea
push
mov
xchg
ret
add
xchg
sbb
or
nop
nop
cld
jae
jno
add
and
pop
mov
clc
repnz
nop
cld
jae
mov
and
push
andb
mov
or
repnz
nop
cld
jae
add
add
movsb
mov
mov
pop
clc
repnz
nop
cld
jae
add
sbb
incl
add
push
clc
repnz
nop
cld
jae
dec
or
add
jecxz
hlt
sbbl
nop
nop
cld
jae
adc
pop
add
adc
enter
jp
clc
repnz
nop
cld
jae
xchg
movl
nop
nop
cld
jae
and
sbb
add
add
add
adcb
jmp
add
add
add
int3
add
add
jmp
clc
repnz
nop
cld
jae
incl
adc
add
nop
jmp
mov
add
aam
add
nop
push
mov
leave
nop
jmp
add
and
mov
add
add
cs
out
xchg
add
stos
add
popf
inc
cmpsl
cmp
arpl
pusha
shlb
loopne
in
or
xchg
loopne
mov
mov
test
jmp
or
sbb
adc
popa
jl
and
bnd
xor
lahf
pop
push
je
xor
bound
js
pop
das
push
pop
lahf
fstps
push
cmp
pop
imul
and
ret
inc
sub
pusha
xlat
mov
imul
dec
std
xchg
mov
jmp
jb
or
cmp
andnps
dec
mov
fdivl
sbb
addb
jns
add
inc
aam
repz
inc
and
or
inc
imul
outsl
mov
add
sub
addb
gs
mov
repnz
out
outsl
test
sbb
out
addr16
jg
or
rolb
shrl
data16
sbb
insl
out
or
shlb
addb
adc
adcb
rolb
jnp
int
sub
mov
out
mov
mov
lret
loop
mov
or
addr16
negb
loopne
icebp
mov
cmc
and
and
dec
jno
pusha
stc
subl
xchg
mov
loop
xchg
mov
dec
adc
add
inc
sbb
pop
stos
addb
adcb
add
orb
shl
pushaw
jg
addb
pop
mov
in
adc
sbb
scas
or
mov
out
daa
repnz
xchg
loopne
dec
jge
ficompl
jb
sbb
inc
insb
les
push
popa
push
and
shlb
xchg
leave
lds
mov
and
mov
hlt
int
sub
sbb
pop
or
add
add
jnp
fistpll
rol
aad
inc
adc
sub
dec
je
out
sahf
imul
mov
and
push
incb
pusha
pusha
push
mov
hlt
and
cmpb
mov
out
ret
std
cmp
jecxz
add
cld
jns
mov
shlb
mov
inc
jge
add
addb
jge
aaa
jg
je
add
sbbb
sbb
mov
inc
nop
bound
iret
rcr
or
and
add
sub
inc
inc
add
xchg
push
lds
mov
xchg
add
add
imul
dec
mov
add
mov
ret
nop
mov
and
imul
pusha
inc
in
or
pop
loope
les
mov
scas
mov
xchg
and
xchg
loopne
test
jecxz
rcrb
decl
pusha
add
cli
push
shl
push
add
and
dec
imul
push
and
out
out
xchg
shl
cltd
mov
mov
xchg
ja
or
cli
push
jmp
jg,pt
inc
mov
ljmp
icebp
xchg
into
pop
mov
imul
push
pop
dec
inc
and
mov
xor
dec
sub
pusha
icebp
out
mov
pushf
xchg
xor
ja
pusha
loopne
pusha
inc
sarb
test
enter
aas
mov
cmpb
inc
repnz
loop
loopne
add
pusha
cmc
adc
notl
inc
and
movsb
mov
loopne
arpl
and
fwait
inc
sub
andl
sub
mov
sbb
loopne
outsl
aaa
mov
pop
jge
push
fistl
sbb
dec
pop
in
inc
sub
sti
adcl
and
lea
cmp
xor
ficoms
les
addr16
shlb
pusha
loopne
inc
cmpsl
mov
in
out
mov
mov
pop
xorl
cmpsl
fs
repnz
sub
inc
out
pop
xchg
inc
xchg
adc
sub
shlb
mov
loopne
lock
pusha
and
and
jnp
scas
pusha
rclb
mov
loopne
int3
add
inc
call
sub
repnz
add
fisubrs
push
loopne
and
fs
push
sub
add
cmp
pop
pop
fisubrs
lods
mov
xor
sub
imul
inc
pusha
jo
mov
inc
loope
loopne
lods
mov
out
lret
sbb
push
inc
pusha
sub
cli
cltd
jb
pusha
and
sub
and
xchg
mov
cmp
into
pop
sbb
mov
mov
in
pop
push
pusha
pop
outsb
mov
cmpsl
scas
mov
outsl
mov
loopne
or
push
inc
fisubrs
add
and
jae
inc
pusha
xchg
mov
inc
loopne
ficomps
loopne
add
or
pusha
pop
pop
fistpll
jbe
fldt
add
jmp
shl
fmull
pop
js
icebp
mov
orb
xchg
xchg
cvtpi2ps
shlb
lock
push
xor
add
pop
mov
xchg
fwait
popa
js
and
mov
sti
shll
sahf
ja
in
cmp
xor
loopne
iret
imul
inc
cmp
cli
addb
mov
std
jge
sbb
push
mov
pusha
sub
loopne
jmp
subl
popf
cmp
xchg
imul
loop
mov
push
dec
fnstsw
and
mov
das
jmp
in
shlb
lret
sub
pusha
xor
xchg
test
cltd
inc
ss
loopne
in
sbb
daa
or
loopne
iret
or
jne
push
mov
inc
xchg
stos
mov
out
es
mov
mov
mov
and
pop
dec
mov
cmp
jns
cmc
js
mov
sti
and
aas
or
dec
dec
cwtl
push
gs
icebp
xchg
add
fadds
inc
dec
sub
aad
mov
vcmpnleps
andb
add
rcr
mov
mov
jl
addb
mov
repz
push
bound
mov
int3
in
push
mov
loopne
and
pusha
loopne
pop
inc
cwtl
shrl
mov
rcll
or
loopne
in
aaa
jne
cmp
addr16
inc
sbbb
arpl
or
lods
add
jb
loopne
push
in
mov
jns
stos
inc
rolb
xor
push
add
addb
add
pop
fnstenv
mov
add
inc
mov
adc
loopne
cmc
inc
negl
push
pop
or
sbbb
xchg
cmp
loopne
cmpsl
cmp
pop
repnz
nop
jl
pusha
mov
pop
test
mov
mov
mov
mov
xchg
cmp
js
adc
add
sbbb
jg
stos
addb
pusha
pusha
cmp
test
pusha
out
cmp
lods
jmp
mov
orb
icebp
adc
jno
cmp
push
xlat
sub
or
andb
push
jb
jne
data16
pusha
subb
xchg
adc
cmp
add
mov
adc
repnz
loopne
mov
mov
std
sbb
add
mov
mov
fcompl
test
add
and
push
inc
push
add
adc
popa
adc
lods
addb
and
lds
shll
mov
loopne
subl
mov
gs
xchg
push
adc
shrb
mov
cmc
sbb
test
fwait
insb
std
adc
push
cmp
adc
xrelease
mov
arpl
mov
xchg
sahf
sbb
cmp
fwait
pop
pusha
cmpsb
loopne
pop
mov
rcrb
das
or
leave
das
mov
add
jmp
insl
and
rorb
cmp
aad
aas
push
rolb
push
jnp
cmpsb
andb
adc
repnz
inc
mov
cmp
push
andb
jmp
popf
sub
aaa
clc
daa
jge
pop
add
sbbl
repz
push
outsb
test
ror
std
jle
sub
fwait
xlat
in
cwtl
cli
or
loopne
stos
vorps
dec
push
ss
mov
cmpsl
pop
xchg
sahf
push
shll
sti
push
mov
xor
inc
mov
outsl
call
shlb
add
xchg
lret
dec
dec
lds
and
pop
or
ss
and
leave
lahf
clc
mov
sbb
add
mov
and
inc
lret
leave
add
subl
ret
sysret
movsb
and
and
push
outsb
add
addb
push
pusha
inc
out
mov
dec
cmp
jnp
insl
pop
mov
loopne
addb
xor
pop
inc
mov
shlb
fwait
mov
inc
imul
adc
mov
ja
mov
stc
and
gs
in
push
push
mov
jp
pop
gs
stos
popf
in
push
mov
in
xchg
bound
inc
jne
cmpsl
mov
and
pop
out
sub
dec
jl
adc
and
inc
orb
addr16
mov
add
es
and
or
push
mov
mov
loopne
shlb
mov
fcmovnbe
pop
push
xsavec
dec
cmp
mov
mov
addb
ret
push
mov
das
orl
es
adc
jbe
fisttpl
loopne
add
rcrb
mov
mov
push
push
or
mov
add
or
cs
xorb
scas
outsl
pusha
cmp
or
pusha
sub
sub
cmpsl
mov
inc
out
fs
addb
or
mov
and
xchg
fabs
push
inc
mov
sbb
inc
pusha
call
fs
ss
movsb
mov
adc
add
adc
loopne
xchg
rolb
shlb
dec
mov
loopne
das
andl
mov
xchg
imul
out
or
inc
aad
mov
adc
add
and
js
lret
sub
add
or
sbb
jle
dec
ds
inc
jmp
mov
lahf
inc
xor
mov
push
rol
imul
sbbl
xchg
xor
inc
cmc
mov
ror
pusha
rcr
jae
mov
test
stos
fdivl
filds
or
loopne
lahf
xchg
mov
inc
xor
lret
add
loopne
loopne
mov
cmp
inc
mov
loopne
xchg
lret
std
xor
xchg
and
xor
cmpsl
mov
mov
mov
out
lcall
inc
mov
inc
sub
mov
decb
xor
mov
sub
out
ret
lret
and
mov
mov
int
rcrl
ror
jae
add
loopne
andb
mov
sbb
or
mov
pusha
mov
sbbb
add
push
inc
cwtl
mull
mov
clc
jbe
or
inc
adc
aad
and
loopne
rolb
insb
mov
insb
dec
inc
inc
mov
fstps
pop
add
lahf
lcall
sub
inc
jns
jg
or
and
and
and
xor
pop
push
rolb
daa
mov
xor
xor
jmp
cs
fsubrs
and
jecxz
sti
pop
push
roll
mov
jnp
rorl
and
ljmp
int
lds
mov
and
inc
call
jl
sbb
ljmp
xlat
int3
mov
inc
adc
adc
stos
inc
loopne
adc
push
add
add
and
repnz
and
pop
into
mov
and
outsl
adc
and
xchg
mov
or
stc
add
inc
jg
sub
and
push
cmpsb
rolb
push
push
push
loopne
dec
sub
insb
xor
pusha
inc
push
sub
ret
mov
pop
mov
popf
xchg
cmp
pushf
mov
mov
inc
dec
pop
enter
jb
fidivl
and
shlb
scas
iret
xchg
ljmp
pusha
cmp
enter
mov
jp
xor
imulb
andb
inc
leave
mov
cmpsb
andb
cmc
adc
std
adcl
jl
mov
sub
push
add
pusha
add
cld
xchg
sbb
rcrl
or
dec
mov
dec
hlt
pop
arpl
mov
jp
add
inc
into
mov
mov
xor
scas
sbb
mov
mov
mov
mov
out
pop
les
pop
mov
and
inc
ficompl
inc
das
out
cmp
aas
enter
sub
arpl
stos
aam
inc
imul
out
enter
jle
inc
sbb
loopne
andb
dec
lods
and
fbld
mov
pusha
fsubp
fwait
int3
in
pop
sub
inc
popa
mov
and
movsb
shlb
or
adc
mov
mov
sub
shlb
push
mov
push
jne
pusha
shlb
mov
popa
adc
add
pop
insb
dec
andl
lret
cmp
mov
push
aaa
mov
lods
in
sarb
jae
clc
xchg
add
inc
fsubrl
mov
xchg
mov
dec
sbb
popf
mov
add
xchg
xor
fsub
xor
add
dec
xor
dec
and
rolb
and
stc
jae
daa
sbb
int
push
test
pusha
aam
insl
shll
andb
js
pop
stos
inc
inc
mov
rcrl
in
pop
mov
adc
fcomps
or
push
inc
xor
dec
or
cmpsl
mov
pop
xchg
std
sbb
cmp
subb
rcrb
popf
mov
roll
outsb
cmp
cmpsb
add
xor
or
cmpb
mov
pushf
xchg
gs
addb
outsb
jle
inc
das
mov
pop
jnp
xor
and
rolb
rolb
rorl
shl
push
loopne
xchg
inc
cltd
lock
pop
mov
sub
adc
add
sarb
insl
dec
aad
inc
orb
loopne
mov
cmp
cmp
and
sub
rcrb
and
xorl
add
sub
call
sub
add
in
xchg
lods
loop
jae
mov
cmp
adc
test
mov
iret
repnz
sub
sbb
or
mov
adc
adc
cmc
imul
andb
jnp
push
call
stos
loope
ror
inc
mov
jp
mov
sbb
add
mov
mov
mov
les
orb
call
lahf
jbe
dec
pop
ds
inc
xchg
popa
pop
int
ss
inc
pusha
xor
dec
loopne
mov
data16
cmp
add
pusha
mov
andb
push
add
imul
sub
dec
sbbl
push
sub
nop
scas
inc
loop
fdivl
movsl
ljmp
call
inc
sub
and
inc
mov
fcmovnbe
je
shl
mov
fdivr
jno
cmpl
jmp
ret
out
inc
icebp
cmp
orl
sbb
and
movsl
dec
mov
sbb
clc
push
mov
pusha
loope
pop
ret
push
push
mov
mov
jbe
add
mov
and
scas
inc
outsl
and
xchg
or
repnz
mov
and
loop
js
nop
push
fadd
and
mov
add
ljmp
mov
lret
add
fcmovnb
adc
inc
cltd
call
xchg
mov
sub
mov
inc
insb
mov
xlat
int
andb
xchg
push
add
mov
in
add
mov
and
adc
shll
shll
adc
mov
outsl
out
xor
inc
sub
push
fnstenv
test
and
out
push
lea
pusha
and
xor
mov
push
fadds
push
inc
add
leave
test
pop
mov
add
mov
push
pop
cltd
std
sbb
pop
repnz
push
dec
xchg
jp
icebp
cmp
in
add
imul
push
outsb
pop
pop
mov
andb
repz
repnz
negb
call
inc
sub
sbbb
rolb
add
add
and
mov
js
mov
out
out
adc
mov
xchg
mov
add
and
pop
adc
repz
lahf
pop
mov
mov
add
add
add
lods
loopne
pop
pusha
xchg
enter
addb
jnp
xchg
pusha
sbb
sub
or
adcb
pusha
stos
jno
pop
add
pop
pcmpeqw
inc
clc
cmc
xchg
jo
dec
mov
inc
subl
test
pop
push
and
subb
jg
scas
lds
or
scas
or
pusha
outsl
imul
js
inc
loopne
xchg
mov
mov
das
sbb
inc
xchg
mov
xchg
cmp
pop
leave
stos
pusha
mov
and
imulb
and
cmp
rolb
mov
addb
pusha
out
push
inc
mov
and
push
cmc
enter
loopne
sub
add
adc
adc
xor
inc
loopne
jge
dec
shll
cmp
mov
daa
jne
cmp
lds
divb
shlb
sti
out
xor
outsl
inc
sti
xchg
adc
ret
xchg
fisttpll
push
xchg
in
adc
push
pop
inc
outsl
lret
add
inc
dec
jecxz
lcall
outsb
mov
popa
popl
repnz
sub
movsb
andb
ret
fistpll
add
pusha
loopne
mov
cmc
jb
enter
flds
addb
and
mov
scas
mov
or
repz
jp,pt
inc
sub
pusha
mov
cmp
dec
xchg
push
leave
xchg
jg
cwtl
mov
lret
add
rolb
rolb
ficompl
lahf
dec
fmull
aam
mov
and
shl
jl
leave
rolb
mov
and
pop
sbb
insl
inc
dec
adc
push
push
cmp
and
dec
hlt
push
dec
push
aad
jge
jnp
lea
push
add
scas
cmp
push
nop
push
sub
shl
pusha
mov
cmp
rorb
shl
jl
inc
movsb
mov
inc
add
or
pusha
cmp
ss
addb
add
imul
addb
mov
dec
mov
ja
lods
add
std
sbb
push
movb
fcoms
js
mov
xor
xchg
es
inc
mov
sbb
inc
inc
dec
fstps
iret
mov
lods
inc
shlb
rcr
js
push
or
sub
movsl
test
movsb
loopne
dec
sub
add
clc
xchg
iret
lds
inc
mov
adc
lcall
out
gs
andb
bound
cmpsl
jnp
movsb
and
icebp
jmp
pop
aad
out
arpl
mov
inc
les
test
ret
and
add
adc
inc
insb
pmulhw
mov
add
inc
lock
cmpsl
test
daa
mov
loopne
loopne
movsl
orl
ja
rol
pop
lret
leave
cmpsb
and
mov
pusha
and
lds
mov
cmp
pusha
rcr
add
add
test
stc
fisubl
mov
inc
mov
nop
dec
xor
mov
scas
loopne
cmp
mov
add
fucomip
xchg
xchg
mov
jb
test
loopne
call
bnd
and
and
xchg
lahf
das
test
lods
jns
mov
sbb
sbb
imul
xchg
in
mov
lahf
addr16
push
inc
mov
add
or
mov
dec
popa
xchg
lds
loopne
mov
pusha
arpl
push
push
frstor
mov
addb
shl
cmp
loopne
loope
lock
pusha
mov
pusha
loopne
les
mov
enter
inc
enter
scas
mov
xor
mov
loopne
das
mov
push
pusha
mov
ss
dec
sahf
dec
into
leave
ficoml
cmc
inc
pusha
jno
scas
rcpps
pushf
add
orb
adc
sar
mov
call
jecxz
cmp
rcrl
fldenv
mov
fisubrs
add
inc
cmp
mov
dec
and
adc
push
adc
lods
jp
insl
xlat
mov
subb
mov
sbb
popa
sbb
xchg
fstl
ds
test
rolb
andb
inc
mov
lahf
mov
sarl
mov
addb
add
lods
les
jmp
push
pop
iret
imul
cmp
xlat
movsb
shlb
fistpl
andb
sub
add
lcall
mov
out
insb
add
jb
add
lods
loopne
lods
inc
loopne
mov
add
and
fyl2xp1
xchg
push
xor
jns
xchg
and
pusha
sahf
outsb
lods
inc
in
and
rcl
loop
jns
aaa
pusha
out
in
movsl
ds
insl
addb
lds
stos
mov
stc
jae
sahf
test
shlb
test
loope
aam
fdivs
add
add
loop
leave
inc
shrl
dec
icebp
rclb
repz
pusha
mov
loopne
call
cmp
shl
add
dec
push
faddl
xor
test
shlb
loopne
or
pop
jns
outsb
mov
add
inc
pop
xor
lock
sbb
aad
xor
xchg
shlb
pusha
lods
rol
in
jle
outsl
fstl
jle
pop
inc
por
pusha
into
pusha
ds
mov
loopne
and
xchg
loope
mov
and
cmpsl
cltd
add
mov
iret
push
mov
aad
adc
dec
mov
imul
stos
pop
clc
mov
mov
mov
loopne
mov
lock
add
sahf
cld
stc
push
insb
mull
out
cmc
ficoml
in
and
or
loopne
inc
jbe
push
and
sbb
arpl
lods
inc
cmpsb
inc
mov
stos
idivb
mov
ss
sub
inc
xor
mov
push
pslld
cmp
cld
or
sbb
jo
mov
das
cli
aam
pop
stc
aaa
xchg
std
out
arpl
nop
ret
mov
punpcklbw
out
xor
mov
out
jns
sbb
cmp
push
adc
mov
inc
or
pusha
cmp
dec
push
fs
mov
push
adc
imul
xchg
int
cbtw
mov
cs
loopne
rolb
fisubl
repnz
jmp
fsubr
add
add
out
or
andb
cmpsl
pop
je
xchg
mov
test
mov
pop
out
push
cmc
addb
dec
fdivl
and
test
sbb
push
mov
add
push
mov
jae
xchg
and
rorb
adc
inc
or
loopne
ja
std
fsubrs
pusha
sbb
sub
shrb
push
and
into
and
inc
mov
aaa
cmpsb
mov
sub
push
andb
lods
loopne
push
je
shrb
insb
push
cmpsl
repnz
rolb
xchg
dec
xchg
push
pop
rol
divb
and
pusha
rclb
iret
fbld
mov
cmpsl
pop
fwait
in
cmp
mov
mov
and
loopne
int3
ss
jo
cwtl
add
rclb
dec
lea
jo
inc
sub
loop
cmp
in
dec
adc
xchg
mov
loope
mov
test
and
and
pusha
cmp
mov
mov
movsl
test
mov
out
iret
xchg
cmpxchg
leave
fistpll
and
pop
in
pusha
inc
jp
lock
aas
shrl
inc
xorb
insl
mov
dec
lock
or
mov
sub
lret
sub
shl
cmp
das
jg
jmp
add
dec
push
push
test
loopne
pop
mov
dec
test
loopne
xchg
mov
and
outsb
push
mov
mov
jae
jae
out
ret
addb
dec
push
mov
sbb
cmc
push
cmp
sub
loopne
adc
cmp
mov
mov
add
fimuls
inc
js
loopne
scas
jae
mov
adc
xchg
sub
jl
or
pusha
ror
sbb
mov
scas
loopne
mov
in
push
outsb
jmp
xor
in
xchg
mov
and
stos
andb
inc
subb
xor
xchg
enter
in
int
cltd
sahf
or
loopne
jae
inc
jbe
dec
out
ss
xchg
inc
pusha
fwait
dec
shr
adc
dec
fwait
mov
pop
loope
mov
addr16
mov
loopne
inc
xorl
lods
int
add
lock
ror
or
xchg
xchg
sbb
sahf
pop
cwtl
in
mov
mov
hlt
jecxz
test
cmp
mov
fnstsw
add
cmova
mov
shlb
fstps
mov
mov
and
jp
hlt
in
jne
jno
push
incl
and
mov
aaa
push
and
inc
test
sbb
xchg
mov
pop
and
sub
test
in
outsl
push
andb
jmp
loop
popa
lock
xchg
pop
xchg
mov
mov
mov
inc
pusha
cmp
and
into
wrmsr
rclb
mov
ja
xor
and
stos
shlb
add
out
test
movsb
loopne
stos
frstpm(287
jmp
test
dec
inc
mov
mov
pop
and
inc
pop
sub
inc
sbb
push
xor
and
push
dec
sub
pusha
leave
cmp
mov
daa
jp
mov
pusha
clc
outsb
ds
jg
mov
aaa
jmp
inc
inc
push
aam
cmc
decb
inc
inc
js
sub
mov
inc
push
adc
test
mov
loopne
xchg
push
mov
sub
cmpb
imul
mov
mov
iret
push
rolb
cmp
test
and
std
sbb
cwtl
lcall
pusha
rcl
aaa
sarl
xchg
jecxz
and
into
out
aad
cmp
std
pop
ror
mov
imul
loop
imul
jne
arpl
sbb
addr16
pop
iret
inc
jae
dec
push
inc
out
insb
mov
rcrb
jle
cmp
push
xchg
mov
mov
aas
int3
xor
xchg
cmp
pushf
push
mov
mov
dec
xchg
fldenv
sub
push
icebp
mov
or
add
push
and
pop
insl
pop
std
iret
jmp
mull
add
inc
adcl
jl
movb
adc
addb
cltd
ljmp
mov
lods
inc
pusha
mov
mov
and
inc
repnz
and
and
xchg
test
mov
sub
daa
popa
rcll
sub
ljmp
icebp
or
and
ret
fldl
loopne
popa
scas
imul
and
fldl
inc
add
int3
insb
add
jmp
lods
and
and
andb
loopne
inc
ja
xchg
ds
xchg
pop
add
and
inc
mov
mov
es
fldl
and
xlat
inc
ret
push
inc
rclb
dec
stc
mov
imul
fdivl
arpl
shlb
jb
mov
cmpsl
enter
cs
loopne
xchg
lock
bound
fcomp
sbb
addb
adc
cmp
pop
add
ja
pop
mul
xor
mov
mov
inc
clc
add
jnp
into
and
push
add
mov
loopne
push
fstpl
and
jne
rep
mov
shl
pop
pop
bound
loopne
in
xor
lret
inc
add
mov
jno
xchg
cmpsl
loop
add
add
push
aas
test
pop
pop
jo
xchg
add
loopne
sub
aas
cmp
cmp
mov
ret
push
xchg
adc
add
push
rol
and
mov
outsb
jns
fs
jp
inc
stos
jecxz
daa
jle
jl
fsts
cmpsl
cmc
cmp
cmp
mov
adc
ss
sbb
adc
loopne
mov
test
sub
pop
mov
arpl
repnz
jae
int3
or
loopne
cmpsl
add
mov
pusha
les
fisubl
divl
xchg
addb
fnstcw
cmp
frstor
adc
scas
movsb
pusha
and
mov
or
pop
int
jecxz
jo
inc
mov
mov
mov
addb
inc
jle
or
pusha
cmp
dec
pop
and
shlb
and
js
inc
add
orb
cmp
arpl
mov
jl
mov
jnp
inc
push
inc
les
call
loopne
out
or
add
test
pusha
lock
mov
jns
mov
dec
repz
rcrb
mov
mov
push
pop
stos
popa
push
xor
or
pusha
mov
or
xor
pop
sub
inc
pusha
rclb
and
inc
push
mov
add
mov
fs
loopne
les
cmp
in
xchg
loopne
and
and
lods
addb
add
sbb
into
idiv
outsl
add
add
out
lcall
shl
in
xor
imul
jle
sbb
icebp
in
jp
add
pusha
repz
adc
and
scas
test
inc
and
mov
xchg
pop
add
test
and
and
int3
enter
shlb
and
inc
test
mov
mov
dec
pop
aam
pop
jle
push
sbb
pushf
and
inc
xor
aas
cwtl
dec
inc
add
loopne
fucomi
pushf
movsb
rolb
mov
lahf
mov
fnstenv
sbb
popa
pop
bound
adc
mov
test
inc
xchg
pop
aam
sub
inc
jo
dec
mov
adc
cmpsb
and
pop
int
es
mov
shl
addr16
jno
push
lret
dec
push
loopne
pop
pop
outsb
idivb
cmp
shlb
adc
inc
pusha
sahf
xchg
xor
jno
scas
add
mov
inc
lahf
and
inc
repnz
jl
test
and
sub
push
push
daa
daa
lds
imul
jns
mov
add
lcall
jg
xchg
int
or
mov
xchg
push
loopne
push
enter
jge
push
fsubrp
sti
push
cltd
inc
pop
fmuls
or
cld
out
add
fscale
xchg
jne
mov
pushf
jne
lret
mov
and
incb
mov
ret
dec
ficomps
inc
subb
loopne
pop
testb
shlb
int3
mov
add
test
push
rorl
scas
mov
shlb
scas
shlb
mov
mov
bound
and
mull
jmp
adc
pop
or
repz
fucomi
loop
xor
and
or
push
divl
push
dec
push
xorl
ss
jae
jnp
add
cs
andb
dec
mov
sub
inc
sub
and
out
pop
test
fcmovne
jno
jp
loopne
in
jbe
mov
out
hlt
fs
sbb
into
repz
pusha
or
cli
adc
push
dec
movsl
xchg
loopne
pushf
lahf
test
loopne
divb
mov
andb
fwait
adc
addb
mov
jnp
mov
push
addb
addr16
and
in
inc
das
mov
movsb
pusha
inc
fsubrl
pushf
pop
dec
mov
push
and
loopne
andb
inc
push
mov
shl
xchg
in
or
and
lahf
pop
scas
fs
push
movsb
and
jge
add
addb
mov
rolb
fcoml
mov
push
jb
or
andb
mov
xchg
mov
push
cmp
fidivl
dec
popa
jno
mov
add
loopne
sub
mov
inc
icebp
or
sbbb
add
dec
mov
dec
jmp
outsb
inc
jne
mov
pop
into
rolb
adc
xor
and
rolb
aas
pop
mov
cltd
push
pusha
inc
dec
xchg
gs
cmp
mov
pusha
xor
pusha
shr
js
sub
stos
add
ljmp
add
gs
insl
lahf
andb
cmpl
and
fcomps
insb
pop
lahf
add
or
arpl
out
inc
ret
cmp
and
mov
mov
int
push
push
push
push
push
and
cmp
and
cmpsl
sbb
sub
add
outsl
add
loopne
rol
shl
mov
mov
mov
mov
jbe
out
mov
and
pusha
pop
add
add
loopne
sub
loopne
aas
lods
pusha
inc
sbb
xchg
cmp
dec
movsb
loopne
and
inc
sub
add
retw
hlt
pop
adc
fidivl
mov
push
mov
andb
loopne
fs
int
and
fstps
loopne
or
cmp
jp
push
cltd
mov
add
push
and
xchg
incl
and
xchg
int
push
mov
mov
ljmp
sti
push
xor
fadd
gs
cmp
pusha
rorb
and
sarb
pop
jmp
dec
ljmp
jns
mov
cmpsb
add
fsts
sub
inc
outsb
add
shl
sbb
and
sub
sbb
loop
sub
nop
dec
adc
sub
andb
rolb
mov
in
sbb
mov
and
and
jge
gs
stc
icebp
popa
xchg
and
xchg
cmp
sbb
pop
cwtl
jp
add
mull
pop
fs
mov
outsl
sbbl
pop
pop
icebp
jno
adc
addb
and
mov
insl
lret
jg
frstor
xchg
insl
adc
sub
scas
or
shl
movsb
loopne
mov
rcrb
scas
rolb
pop
sub
xchg
mov
pop
or
loopne
inc
imul
call
add
adcl
add
pop
pop
out
lahf
and
mov
jb
leave
cmc
pmaxub
imul
mov
xorb
into
dec
mov
iret
sub
dec
ljmp
ljmp
mov
add
mov
loopne
sahf
shlb
push
xchg
or
and
push
push
and
xor
shl
lods
mov
movsl
daa
test
xor
ja
cmc
test
sub
add
inc
xchg
jecxz
pop
sti
inc
ds
mov
mov
popa
inc
and
loope
pop
push
add
scas
addb
dec
sub
aas
mov
cmpsl
or
test
call
xchg
mov
mov
dec
lret
lods
and
imul
push
mov
fstpl
popf
gs
fstpt
rolb
mov
test
add
add
dec
pop
fwait
cld
lret
jbe
int3
ss
enter
stos
inc
loopne
inc
pop
shll
cmp
sahf
hlt
or
cmp
outsb
out
idivb
add
and
sbb
das
sub
inc
cmpsb
mov
xor
fdivs
push
lretw
mov
pop
xchg
push
pop
stos
mov
and
int3
popf
xor
in
jo
addb
dec
pop
cltd
outsl
sbb
out
int
mov
pusha
aad
inc
pop
fsts
aam
push
mov
add
sarb
fdivr
lahf
test
inc
mov
pop
call
or
lods
push
insb
arpl
cmp
andb
jle
rolb
aad
or
inc
andb
push
inc
pusha
adc
inc
dec
jb
pop
or
movsl
mov
xchg
int3
pop
add
pusha
xchg
pusha
adc
inc
popa
fisttpll
out
sbb
and
push
addb
dec
flds
mov
mov
and
shlb
not
pusha
inc
in
dec
push
fucomip
lea
dec
mov
cwtl
pop
jbe
or
mov
aas
inc
cmp
xchg
jmp
lods
inc
add
sub
mov
fbstp
fistpll
and
or
mov
cmp
out
lods
add
and
in
iret
sar
cmp
loopne,pn
dec
pop
and
xchg
add
mov
inc
xchg
mov
sbb
shl
push
jbe
lret
sub
orb
rolb
push
loopne
sub
enter
divb
inc
mov
mov
fbstp
or
cmpsl
xchg
insb
push
mov
into
aam
testb
pushf
inc
cmp
mov
mov
nop
imul
jo
outsl
outsb
ljmp
lds
mov
xchg
rolb
and
jo
js
push
rcrb
xor
mov
mov
pusha
pop
cmp
pusha
xorb
adc
mov
jbe
lock
inc
popf
popf
mov
cmpsl
fistpl
pop
mov
cmp
mov
xchg
cwtl
cmp
ror
jns
mov
pop
push
jg
or
notb
push
mov
pop
imul
mov
push
mov
xlat
cmpsl
pop
pop
icebp
mov
rol
mov
aaa
ljmp
adc
test
xchg
loop
test
outsl
jnp
mov
add
js
jge
clc
and
and
ds
out
es
add
mov
and
and
xorb
subb
lret
loop
pop
xlat
push
and
sub
stos
mov
and
aad
xor
jno
mov
mov
lret
pop
jge
roll
pusha
adc
dec
fdivrs
cltd
or
add
add
inc
ret
push
pusha
loopne
hlt
aaa
stos
fmull
inc
rcrb
mov
xchg
dec
mov
or
dec
adc
push
in
add
pusha
dec
pushf
setg
and
mov
mov
lahf
sub
and
xor
cmc
andb
pushf
xchg
fwait
in
hlt
nop
sbb
rolb
out
lods
rol
and
ljmp
loopne
inc
and
adc
loopne
or
loopne
sub
mov
rcrb
loopew
xor
push
inc
mov
addb
xlat
pop
dec
fwait
or
in
pop
mov
loopne
lcall
int3
mov
out
ja
and
repz
setg
ljmp
sub
roll
loopne
outsb
fnstsw
and
dec
paddsw
fsubrp
adc
mov
loopne
ret
popl
cltd
or
add
mov
mov
add
addl
mov
mov
rolb
aam
sahf
stos
mov
xor
mov
push
fsubrs
adc
adc
test
inc
xor
cmp
ss
and
lcall
inc
stos
and
and
loopne,pn
pop
iret
outsb
stos
pusha
add
orl
mov
sub
test
insb
cmpsb
addb
inc
in
jnp
js
add
out
pushf
mov
dec
sbb
mov
add
cs
and
jg
add
inc
pmaddwd
xor
xlat
sub
cmp
shrb
and
cmp
iret
xor
xor
icebp
hlt
xor
sub
xor
aaa
or
push
xor
shlb
leave
icebp
mulb
dec
arpl
xor
addb
inc
push
in
pop
push
xor
in
pop
push
jae
xchg
repz
out
sbb
mov
repnz
loop
fstpt
lret
fucom
jp
shr
mov
add
repnz
iret
sub
addr16
dec
call
push
or
add
out
mov
ret
in
lahf
mov
or
shlb
out
cwtl
lret
stc
xor
or
lods
inc
sbbb
stos
andb
mov
inc
les
dec
add
mov
adc
and
addb
sub
mov
push
rcrb
sbb
cwtl
lea
mov
and
jmp
inc
loopne
int
das
int3
pop
test
sub
inc
pusha
pop
cmp
jmp
xchg
adc
adc
jl
pushl
cmpl
push
fst
andb
movsb
pusha
add
adc
mov
push
add
mov
mov
add
inc
loopne
rcll
mov
mov
mov
rolb
insb
ret
lods
inc
xor
and
movsb
addb
mov
pusha
pusha
or
inc
and
arpl
push
dec
shld
shlb
mov
jo
sbb
loopne
loopne
loop
js
inc
rorb
mov
fisubrs
pusha
pusha
add
mov
popa
movsb
pusha
addb
in
sub
cld
pusha
mov
dec
insb
xor
shlb
lcall
push
pop
rcrb
and
push
pusha
mov
loopne
push
shrb
and
das
xor
add
mov
lds
ret
add
insb
push
xchg
ja
out
stc
add
xchg
iret
or
cmpb
addb
outsb
out
push
mov
cmc
jae
repz
clc
mov
lret
pop
jl
rolb
xor
xchg
cmpsb
and
bound
inc
fists
mov
addb
lcall
dec
xchg
pop
cld
mov
les
test
sub
xor
das
jg
repnz
mov
xor
loopne
pusha
lret
roll
mov
pop
arpl
cmp
shlb
mov
loopne
imul
scas
mov
dec
insb
dec
imulb
loopne
mov
subb
xchg
insl
sub
loopne
push
pusha
and
add
and
xchg
xor
lret
dec
push
lds
pushaw
fstl
inc
loopne
ret
mov
and
fwait
or
fidivrs
cmpl
mov
inc
iret
inc
shll
dec
or
mov
add
mov
loopne
inc
inc
jo
push
stos
loopne
and
shlb
loopne
in
cwtl
xchg
jecxz
outsb
in
add
inc
xor
mov
loopne
nop
sbb
out
shll
push
shl
movsl
adc
mov
xlat
mov
insl
push
sarl
pop
jp
ss
out
stos
add
dec
inc
lods
testl
in
xchg
std
ret
cmp
or
xchg
cltd
mov
push
cld
stos
insb
and
jmp
loopne
mov
xchg
mov
add
cmp
outsl
aam
adc
sub
pop
mov
and
adc
add
xlat
outsb
fisttps
fnstenv
jne
fsubl
dec
adc
loopne
bound
aaa
lret
scas
mov
mov
push
add
rolb
hlt
jmp
ja
aam
clc
insb
sub
into
xor
mov
inc
adc
fistpl
add
inc
adc
aad
and
pop
push
cmp
and
sbb
loopne
ret
dec
adc
mov
mov
pusha
pusha
data16
mov
jno
sub
lahf
jae
dec
push
mov
cmp
fldt
add
mov
xlat
loopne
mov
add
push
sub
mov
lds
push
and
jbe
mov
sbb
stos
out
rcrb
dec
mov
testl
adc
aaa
les
mov
jp
lret
lods
imul
ret
stos
leave
xchg
mov
insl
mov
push
mov
jl
dec
call
shlb
insb
xor
mov
loopne
out
je
jae
outsb
cmp
adc
and
out
push
scas
aas
fsubs
addb
adc
cs
mov
jle
and
mov
mov
divb
pop
dec
mov
aam
xchg
popa
imul
ror
imul
add
pusha
jnp
jb
xchg
mov
out
movsl
shlb
jno
inc
add
loopne
inc
sbb
pusha
and
insb
das
pop
mov
int3
sub
push
shlb
xor
sbb
loopne
addr16
cmp
jge
sub
cmp
addb
mov
sahf
mov
vmovups
mov
loopne
push
and
out
testl
mov
mov
xchg
inc
mov
pop
cmp
and
push
loopne
adc
jne
mov
bound
adc
push
cmpsb
rolb
les
mov
pusha
sbb
shlb
mov
shlb
repz
movsl
xor
ret
mov
pop
testl
rorb
pusha
loop
in
push
cld
sbb
lock
enter
xchg
pop
cmc
pop
adc
inc
push
cmp
iret
in
jle,pt
repnz
sub
mov
and
lds
ret
ret
repz
cmc
adc
mov
ds
movsl
push
sbb
adc
mov
in
int
and
mov
push
cmp
dec
adc
dec
idivb
or
jae
popf
test
xorb
test
std
loopne
leave
mov
pop
xor
int
mov
test
repz
dec
scas
aam
cltd
pop
lods
dec
imul
andb
aad
std
xor
push
xchg
adc
cwtl
lret
int
test
rolb
sbb
aam
add
or
adc
lea
data16
adc
adc
cmp
int3
jecxz
aas
xchg
cmpsb
add
inc
add
fwait
dec
dec
jmp
in
inc
rcr
popa
mov
in
sbb
pop
fsubl
out
fildl
pop
sti
cmpsb
mov
add
filds
mov
lcall
lcall
sahf
les
int
test
cmp
push
sahf
rcl
sbb
add
jno
std
dec
cmpsb
mov
sub
addr16
mov
cmc
xor
in
sbb
inc
cmp
xorb
sbb
and
sbbb
lods
mov
add
jl
mov
xchg
adc
mov
xchg
adc
sbb
cli
andb
or
and
loopne
dec
jmp
loopne
lds
inc
insl
test
stos
out
dec
push
pop
jmp
mov
mov
add
pusha
out
jbe
ret
pushl
int
stos
enter
scas
xchg
loopne
test
pusha
xchg
js
shlb
pop
sbb
decl
sub
loopne
inc
je
xchg
pop
mov
add
mov
outsl
scas
inc
mov
movsb
mov
fidivs
ljmp
cs
pusha
jmp
imul
dec
loope
mov
insb
outsl
jno
shl
xor
andb
lea
pop
push
sbb
xchg
cmp
lahf
cmc
jae
dec
lods
mov
inc
fidivs
loopne
pop
mov
pop
mov
adc
jmp
aaa
cwtl
pushf
sub
rorb
xor
pop
cmp
pusha
orb
shlb
and
lahf
es
mov
sub
inc
adc
and
add
andb
fsubrs
aam
lock
aaa
mov
inc
fbstp
add
inc
fwait
jg
and
push
sub
or
mov
fwait
test
and
pusha
and
xor
xchg
cmc
rorl
lods
inc
add
loopne
or
inc
xchg
shr
ret
pusha
and
pusha
pop
adc
sbbb
mov
add
and
sbb
stc
and
xchg
and
loopne
sub
mov
sub
imul
xorb
aas
mov
jbe
xor
mov
sub
outsl
addb
xchg
mov
lods
loopne
in
fldl
mov
addb
fs
mov
sbb
ja
iret
addb
test
pop
dec
cltd
insl
xor
pusha
sarb
movsb
and
mov
adc
into
bound
add
adcl
add
add
and
add
sub
shlb
sbb
loop
adc
loopne
dec
cmp
insb
pop
jnp
adc
icebp
in
lock
push
shl
loopne
pop
jmp
je
nop
add
sbb
xchg
jg
adc
testb
mov
sub
and
sahf
xchg
push
jle
rcrl
mov
and
shlb
dec
push
movsb
pusha
xorb
mov
mov
mov
xchg
lcall
pop
jge
outsb
or
push
aaa
jns
movl
dec
lahf
xchg
stc
ret
shr
cwtl
movsb
shlb
and
push
xchg
cmp
push
sarb
daa
popf
jmp
cmc
push
pushf
aas
mov
ret
ficoms
pop
inc
popa
fimuls
and
lea
scas
addb
shlb
arpl
loopne
shrb
aam
dec
jge
mov
sbb
loopne
mov
mov
mov
and
and
jnp
mov
mov
stos
ss
daa
push
int3
rcll
and
and
inc
mov
inc
loope
sahf
stos
mov
inc
add
add
shrl
stos
in
popf
dec
jo
popf
loop
mov
aas
sahf
lods
fisubrs
push
sbb
pusha
mov
sub
add
dec
cmpsb
loopne
dec
shlb
xchg
loop
lods
mov
pushf
movsl
loop
adc
pop
pop
jae
xlat
sub
add
mov
pusha
dec
data16
xor
aas
sub
fildl
cmp
cmp
add
sbbl
add
sarb
loopne
dec
in
lcall
jg
mov
std
arpl
xchg
lock
test
add
mov
sbb
shll
pushf
xchg
pushf
mov
fs
nop
les
add
push
xor
loopne
cs
add
pop
pop
add
stos
mov
rolb
pop
imul
sub
sub
loopne
and
and
call
add
loopne
popf
fistpll
add
call
dec
inc
ja
mov
rorl
test
lret
rcr
test
pcmpeqd
js
mov
and
pusha
mov
loopne
sub
jae
shl
inc
or
fstps
xchg
rcrb
xor
insl
jp
mov
xchg
in
push
adc
xor
mov
in
jg
pushf
icebp
push
add
daa
test
subb
fnstcw
sub
and
sbb
inc
mov
rolb
mov
inc
stos
jg
adc
shlb
jle
push
push
add
int
and
loopne
and
adc
fcomp
xor
or
xlat
cmpsb
rolb
mov
sti
sar
mov
mov
in
daa
iret
mov
loopne
mov
cmpb
pusha
mov
loopne
inc
and
daa
sti
andb
enter
cmp
adc
lret
xchg
pop
rcr
jae
push
test
inc
dec
sub
out
or
mov
aad
lret
scas
andb
sub
loopne
pop
and
in
rorb
add
loopne
pop
aam
in
mov
pusha
enter
lods
loopne
pop
roll
add
pusha
loopne
loopne
xchg
roll
xchg
push
popa
fists
dec
pop
xchg
test
pusha
mov
adc
pop
jb
push
xchg
mov
loopne
xchg
jle
int
jnp
enter
xor
xacquire
inc
push
out
sub
das
jg
push
arpl
add
mov
pusha
mov
adc
rcll
std
stc
hlt
inc
imul
inc
mov
mov
and
shlb
mov
repnz
testb
outsl
sub
xor
sar
and
pusha
pusha
mov
inc
loope
fdivrs
sbb
shlb
push
vunpcklps
in
adc
loopne
fstl
popa
pusha
test
jno
jnp
scas
loopne
mov
pop
add
and
scas
and
push
jl
add
mov
pusha
xlat
push
outsl
pop
dec
sbb
xchg
cli
push
dec
repnz
mov
andb
stos
and
in
ds
and
shrb
inc
sbb
and
mov
into
or
loopne
sub
cmpb
jl
lret
fsub
cmpsb
add
jge
mov
mov
popf
adc
sub
mov
lcall
fstpl
or
fists
lea
and
popf
xchg
jp
mov
sub
scas
shlb
aam
cli
scas
aas
out
push
xor
js
and
dec
cmc
push
and
sbb
cmp
mov
and
fldl
mov
test
or
popa
jp
enter
dec
fcomps
roll
mov
addb
inc
arpl
mov
fcoml
je
stc
ror
ficoms
dec
inc
mov
pop
hlt
and
xor
shlb
fstl
inc
pop
cltd
stos
test
rcrb
pop
jp
outsb
and
mov
push
cmp
add
cmpsl
add
cs
shlb
lcall
xor
je
stc
add
add
out
roll
pusha
cmpb
shlb
sahf
pop
ret
inc
pusha
and
jnp
jns
xchg
jae
mov
mov
add
jmp
repz
mov
repnz
mov
scas
pop
cmpsl
push
jae
xchg
sub
add
jbe
mov
mov
loopne
shrl
ja
loope
into
test
mov
sbb
xor
leave
mov
cmp
mov
fstps
mov
and
sub
movb
daa
arpl
inc
or
mov
and
mov
sbb
sahf
cmp
out
jl
jmp
mov
xor
in
jns
fstpl
int
jp
jmp
stc
mov
adc
addb
loopne
shlb
or
lock
or
and
stos
les
pop
push
test
mov
mov
enter
scas
andb
fstpl
xor
sbb
or
stos
pusha
shl
orl
mov
outsb
test
mov
outsl
mov
pusha
add
and
push
fistpll
mov
pushf
ds
cld
jle
push
rcll
mov
andb
adc
icebp
push
inc
lds
imul
jnp
popa
daa
pop
mov
lar
outsb
hlt
push
inc
cli
out
xor
and
aaa
xchg
jl
das
xchg
ss
xchg
aam
pop
insb
out
mov
adcl
pop
add
push
std
jno
in
loopne
shlb
arpl
in
cwtl
dec
pop
inc
addr16
loopne
clc
push
jo
mov
mov
rcl
add
pop
jae
aas
add
sub
andb
clc
cmp
addb
shlb
das
xor
enter
fs
xchg
int3
aas
pushf
inc
scas
inc
adc
data16
inc
mov
inc
mov
mov
fisubrl
sarb
mov
rcll
out
shll
sub
and
inc
in
daa
or
pop
mov
ret
and
cwtl
stc
mov
pushf
icebp
gs
mov
push
loope
jnp
xor
sub
inc
fucomi
add
inc
ret
or
adc
add
inc
shl
fldl
mov
data16
imulb
addb
mov
and
loopne
dec
or
loopne
inc
rcrb
aas
or
arpl
dec
mov
and
pop
jmp
mov
jl
fcmove
lahf
mov
dec
pop
push
aad
and
sahf
jg
sub
rorb
fcoms
ror
stos
shl
icebp
jb
add
xchg
xor
mov
loopne
mov
fdivl
notb
in
or
inc
add
icebp
mov
mov
lds
pusha
sbb
jnp
add
rcrl
filds
inc
mov
scas
add
cmp
xchg
sub
andb
dec
inc
mov
out
test
inc
and
push
fnstsw
fnstsw
mov
outsl
sti
cli
mov
xchg
int
cld
mov
mov
pop
push
add
adcl
adc
mov
aas
push
adc
xor
ror
inc
js
nop
jns
mov
movl
adc
cmpsl
xlat
data16
ficompl
sub
inc
int
mov
jae
sahf
mov
pusha
ret
cmc
cld
pop
mov
and
mov
outsl
adc
jmp
push
xor
mov
and
stos
add
stos
es
and
push
inc
pop
into
xchg
fbstp
pop
and
and
shlb
fldenv
cmc
and
mov
pushf
fsubl
pusha
inc
push
push
nop
ja
out
xchg
mov
addb
cmpsb
mov
lea
add
subb
mov
andb
pusha
add
shl
sbb
jae
mov
aas
pop
or
xor
stos
xor
loopne
in
movsl
push
dec
int
sub
rcrb
xchg
mov
es
sbb
pop
xor
mov
xchg
out
adc
shrb
nop
pushl
imul
fcompl
addb
insb
xor
jge
mov
and
inc
add
xor
mov
xor
in
rolb
ret
add
sbb
mov
add
mov
pop
fstpt
and
pop
push
mov
push
ficomps
and
and
loopne
mov
rolb
out
mov
cmpb
push
add
xchg
ret
dec
and
loopne
addb
sbb
add
pop
pop
cmp
pop
add
dec
out
inc
outsl
leave
div
jae
jle
jg
fcoml
mov
fdivs
outsb
imul
cmc
and
subb
sub
mov
sbb
push
pusha
iret
ret
cmp
shlb
add
and
inc
in
dec
xor
and
je
cmp
imul
add
jae
jo
push
xor
and
or
in
scas
add
pusha
and
sub
mov
mov
cmpl
movsl
jl
push
pusha
rolb
loop
add
xchg
mov
loopne
enter
sub
mov
xchg
sarb
sbb
icebp
test
lods
or
adcb
out
push
and
add
adc
movb
pusha
dec
mov
in
mov
fldcw
inc
inc
pop
jnp
mov
adc
dec
pop
imul
jg
adc
and
int
adcl
xchg
lret
pop
rep
and
xchg
jmp
out
xchg
stos
mov
iret
lea
repnz
pop
jno
adc
adc
loopne
nop
in
jmp
add
mov
add
push
loopne
mov
loopne
ja
push
dec
pop
aas
pop
sti
jmp
rcrb
ret
rcrl
out
shl
push
sub
in
loope
mov
mov
ret
clc
shll
dec
xchg
daa
sbb
xor
lods
inc
pusha
fildl
mov
inc
xor
mov
inc
mov
push
insb
lods
aam
aam
push
ja
push
adc
xor
scas
and
test
adc
pop
mov
push
jae
xchg
mov
jl
pop
fdivrl
stc
pop
dec
cltd
arpl
mov
sub
pusha
sbb
inc
ljmp
jae
pop
rcr
in
dec
and
inc
daa
push
je
sub
rorb
mov
mov
enter
xor
dec
in
mov
dec
mov
jp
rorb
fadds
loopne
push
xor
addb
rcl
dec
mov
in
mov
adc
inc
xor
js
or
in
mov
add
fldt
gs
dec
inc
rcrl
xchg
or
and
add
and
popf
test
pusha
fidivl
cwtl
mov
mov
popf
aaa
in
adc
cmpsl
and
mov
or
mov
arpl
mov
mov
sbb
pop
out
pusha
and
shlb
mov
adc
rolb
sarb
fadds
adc
mov
adc
cmp
jmp
pop
data16
pusha
mov
aaa
pop
shrl
cmpb
pause
rcrb
arpl
lret
mov
mov
sbb
add
inc
xchg
xchg
push
sahf
sbb
dec
jmp
add
dec
xlat
mov
test
or
rolb
loopne
cs
loopne
mov
rcll
loopne
addb
sti
int
mov
orb
scas
addb
mov
jne
sub
dec
mov
mov
mov
shr
bound
stos
bts
loopne
aaa
shl
nop
mov
push
cld
fld
jbe
popa
pop
jb
add
jae
outsl
push
jnp
xor
dec
jb
daa
das
cltd
imul
xchg
arpl
inc
pop
fdivl
inc
inc
mov
and
add
sub
fwait
ljmp
pusha
mov
std
mov
aam
or
lock
jmp
lret
rcrb
mov
addb
xor
mov
mov
loopne
insl
dec
fs
xchg
dec
pop
sbb
pusha
mov
loopne
daa
loopne
daa
lods
inc
mov
sub
add
mov
inc
pop
cmp
push
jns
mov
inc
dec
mov
jae
mov
test
mov
mov
inc
rorb
rcrb
popf
xor
pop
aam
add
add
dec
imul
push
jae
test
and
and
sti
adc
into
cmpsb
and
push
and
pop
and
add
jae
adc
jnp
lcall
inc
pusha
jle
aaa
insl
je
push
and
and
pusha
mov
inc
and
loopne
push
push
movsl
shrl
les
loopne
push
inc
mov
jnp
loopne
push
adc
pop
add
inc
mov
mov
push
xlat
adc
adc
mov
mov
out
xor
xorb
iret
cmpsl
shlb
lcall
popf
outsl
dec
mov
inc
push
popa
call
not
ficoms
or
pusha
mov
fldenv
div
push
les
adc
xor
mov
push
in
mov
dec
or
cli
xor
and
push
sub
rolb
pusha
mov
add
js
lahf
lret
dec
xchg
imul
in
xchg
imul
and
out
stos
addb
inc
out
fsubr
push
loopne
push
insl
paddsb
das
hlt
leave
jbe
mov
rorl
pusha
test
shlb
js
les
dec
inc
outsb
mov
inc
push
add
imul
pusha
mov
test
and
lds
push
mov
shlb
das
pop
aaa
adc
mov
inc
mov
inc
dec
leave
rclb
xchg
dec
jo
addb
es
mov
sbb
mov
ss
mov
cltd
dec
sub
sbb
ret
mov
mov
ss
shlb
xchg
inc
and
xchg
xlat
dec
jbe
hlt
lret
cmp
mov
push
adcl
cmp
jle
outsb
sar
xchg
and
inc
mov
xor
pusha
inc
cwtl
mov
cmc
xchg
je
sub
shlb
icebp
xor
sub
inc
or
and
inc
lock
pop
xor
mov
psubd
loope
add
stc
cmp
inc
and
pop
xor
mov
mov
cmovp
adc
xor
rorb
popf
shr
outsl
and
in
jmp
nopl
into
cmpsb
inc
sarb
adc
cmp
popf
cmc
jmp
lods
loopne
stos
and
ljmp
inc
add
add
push
aad
mov
lods
add
cmp
and
push
and
mov
test
decb
dec
je
je
out
idivl
sub
cmp
ljmp
das
mov
cmp
lret
into
test
pusha
cltd
add
test
call
add
inc
or
sbb
jno
push
sar
push
inc
and
xor
and
add
addb
lds
mov
ss
addb
loopne
shlb
adc
loopne
pushf
push
cwtl
ret
pop
mov
mov
mov
cmpsl
and
jecxz
xor
mov
rolb
sub
test
pusha
mov
xor
loopne
repz
dec
bound
push
xchg
fistpl
addb
add
or
xlat
shl
scas
mov
mov
cli
clc
hlt
dec
in
dec
and
and
mov
and
xchg
push
xchg
dec
push
jbe
pop
pop
mov
inc
pusha
cmp
push
cmp
ss
mov
cmp
and
or
loopne
xchg
pop
loopne
sub
sbb
add
addb
inc
and
mov
test
test
jnp
ds
jle
jle
pusha
and
pop
push
push
inc
cs
insb
xor
mov
rcr
or
negb
fisubl
ss
inc
pusha
cmc
jp
test
inc
js
ret
in
mov
and
xchg
jnp
and
addb
insl
xor
adc
rolb
cmpsb
mov
insb
imul
icebp
ss
andb
sbb
pusha
xorb
add
pusha
and
adc
stos
pusha
add
push
inc
test
rclb
es
loope
push
or
lcall
mov
inc
add
and
push
test
loopne
fcmovne
jmp
xchg
inc
data16
lret
clc
test
inc
loopne
and
mov
cmp
ja
mov
loopne
inc
lods
mov
add
cs
mov
shrb
rorb
add
adc
pushf
mov
mov
mov
sahf
or
mov
dec
sbb
and
cltd
fdivl
jns
sub
jbe
cld
jbe
les
mov
mov
push
enter
lret
add
lcall
push
rcll
scas
pusha
loopne
adc
nop
inc
inc
xor
pusha
inc
push
mov
jmp
and
imul
push
out
lock
leave
inc
shr
push
test
jns
mov
adc
mov
inc
add
add
xchg
in
lods
test
loopne
in
jl
fdivr
dec
push
mov
mov
jmp
and
idivl
mov
sbb
movsl
in
sbb
rolb
shll
pusha
and
xor
add
pop
mov
aam
cmp
lcall
neg
xchg
pop
jbe
sbb
xchg
shr
and
leave
clc
popf
imul
and
pop
jns
loopne
sbb
pop
movsl
movsl
frstor
test
bound
and
out
mov
loopne
andb
pop
pushf
jno
rolb
mov
jg
je
dec
mov
adc
mov
mov
out
loope
or
add
mov
pop
push
cmp
sbbb
shl
aam
mov
dec
ljmpw
outsb
push
dec
out
xchg
cli
jae
xor
adc
pop
sbb
andb
push
mov
lcall
stos
andb
out
outsb
push
inc
or
xchg
lret
lret
sub
add
lods
and
mov
xchg
push
cmp
ja
add
loopne
jle
and
mov
loopne
ja
pop
mov
jge
mov
mov
cmp
lahf
dec
sarl
hlt
stos
mov
int3
fildll
jno
addb
fdivp
jne
aad
mov
fwait
or
sub
sarl
aam
stos
add
pusha
add
das
jb
std
shll
and
mov
fsubrl
sbb
addb
mov
adc
and
jmp
dec
xor
lret
and
inc
icebp
cmpsb
mov
lods
jae
or
inc
cmp
pop
sahf
inc
decl
add
and
inc
pusha
dec
push
movsl
dec
loope
pop
jnp
push
pusha
andb
lea
ficomps
push
dec
sahf
arpl
and
or
jnp
mov
pop
cmpsl
mov
lcall
sub
add
cs
loopne
loopne
scas
sub
andb
xchg
push
rclb
add
jne
imul
mov
cmp
jnp
stos
add
nop
imul
mov
pusha
inc
out
jae
test
fs
ljmp
loopne
xor
les
pop
cmpsl
xchg
adc
jmp
aas
cld
push
adc
xchg
or
int3
ret
sbb
andb
loopnew
addb
dec
add
cwtl
push
cmpsb
and
pop
xchg
js
and
cwtl
jbe
push
shlb
notl
je
add
and
inc
ss
aas
push
adc
fstps
mov
lcall
add
sarl
testb
xor
outsl
sbb
shlb
andb
stos
andb
cltd
out
sahf
mov
pop
in
sti
cs
add
and
mov
fsubr
sbb
loope
or
hlt
mov
das
jae
jno
and
lods
testl
xor
lds
mov
out
cmpsl
inc
dec
jb
jb
je
mov
dec
pause
push
arpl
cltd
cmpsl
mov
cmpsb
add
jle
insb
xor
add
sbb
lds
shlb
and
adc
sbb
add
and
pusha
je
ja
adc
mov
inc
stos
inc
sbbb
js
stc
lea
mov
scas
shlb
fwait
or
popf
or
add
das
inc
cmpsb
mov
xor
jl
cmp
addb
mov
xchg
shr
insl
pop
pop
xorl
add
in
out
repnz
sbb
sbb
inc
adcb
sub
push
hlt
inc
jmp
mov
in
cmp
lea
fwait
outsb
lods
inc
pusha
jns
cltd
leave
aad
mov
sti
adc
dec
xchg
push
adc
out
out
idivl
add
pop
outsl
cld
push
and
adcb
sti
lods
adc
call
and
mov
mov
pop
and
mov
shl
add
mov
jle
scas
push
addb
inc
das
inc
lds
xor
addr16
outsl
notb
pop
stc
push
inc
sbb
mov
mov
repz
jae
loopne
jmp
push
out
mov
jne
into
hlt
stos
sahf
lods
scas
scas
and
popa
rolb
aas
mov
inc
sub
daa
pop
xor
or
rorb
mov
lds
add
stos
inc
mov
pop
cmp
and
inc
dec
fdivrl
jnp
pusha
mov
ja
mov
dec
insl
outsl
xchg
mov
addb
dec
fsubp
dec
inc
fdivrl
mov
andb
dec
das
test
loopne
pusha
mov
in
icebp
sub
pusha
or
pusha
cwtl
mov
mov
or
pop
push
shl
xor
or
push
outsb
popf
xchg
pushf
inc
cmp
pusha
es
and
imul
push
rol
and
stos
addb
mov
sbb
mov
in
icebp
insb
pusha
sbb
pop
mov
pusha
xchg
push
test
pop
repnz
add
imul
pusha
pusha
xor
cli
sbb
jmp
inc
mov
test
add
insb
adc
mov
xchg
nop
andl
cmpsb
shlb
jp
scas
leave
adc
pop
loope
inc
packuswb
outsb
js
ret
mov
outsb
sbb
pop
js
arpl
mov
test
popf
lods
addb
xor
jne
jbe
jo
jmp
mov
jns
popa
xchg
mov
loopne
js
mov
pop
pop
pop
fisttps
insb
mov
xchg
add
outsl
nop
mov
mov
xor
rep
pop
cld
out
jle
push
adc
fisubrl
inc
loopne
loope
adc
xchg
int
mov
lret
aad
rolb
nop
adc
negl
imul
pop
popf
adc
movsl
jb
mov
aam
loop
and
aad
xchg
sbb
fwait
daa
xor
insb
mov
test
test
xorb
inc
loop
divb
xor
lds
arpl
test
or
inc
cs
inc
xlat
dec
cld
into
jl
pusha
rol
xor
pop
repnz
loop
jle
add
leave
xchg
lret
aas
push
addr16
or
pop
or
sbb
pop
and
inc
ljmp
loopne
dec
hlt
sub
add
icebp
dec
xchg
mov
and
loopne
cmpsb
addb
cmp
sub
and
xchg
and
pusha
push
loopne
sbb
or
ja
inc
jno
lock
fcomi
dec
jae
rcll
out
stc
xchg
or
inc
and
pop
sub
shlb
jmp
fcmovnbe
les
in
xor
shrb
and
sub
orb
and
add
icebp
mov
mov
imul
push
je
addb
ret
arpl
sbb
andb
mov
addb
addb
push
nop
scas
and
cli
lock
shrl
jmp
inc
add
add
mov
daa
mov
xor
ja
daa
mov
bound
cmp
pusha
shrb
test
fidivrs
repz
and
mov
mov
shrb
adcb
inc
loopne
das
mov
xorb
ljmp
jae
popf
push
pushf
arpl
insl
add
and
out
sub
into
inc
in
fstpt
aaa
testb
xchg
xchg
nop
dec
push
adc
mov
cmp
mov
xorb
pop
lods
mov
push
loopne
je
mov
lods
and
sub
loopne
push
cltd
andl
cltd
mov
xchg
fcoml
out
jns
add
mov
jmp
in
and
inc
aaa
dec
icebp
repnz
add
sub
loopne
mov
and
jle
dec
sub
inc
jmp
add
repnz
pop
sbb
aad
mov
mov
mov
cmc
lret
mov
arpl
lods
lahf
push
add
add
pop
aas
cmp
add
pusha
pusha
or
jae
les
and
shrb
data16
fsts
into
cmpsl
inc
push
add
jns
pushf
cld
and
push
mov
mov
and
cmp
cmp
outsb
popf
and
shrb
sti
bound
inc
pusha
cmp
out
fucom
cli
ljmp
lcall
outsb
sub
and
and
lds
add
and
push
pop
add
xchg
push
test
inc
adc
dec
lods
rcrl
pusha
inc
daa
adc
push
inc
inc
push
xor
inc
ljmp
lret
stc
push
inc
pusha
pop
mov
test
shll
mov
pusha
inc
cltd
inc
mov
pusha
outsb
in
adc
add
push
mov
shlb
fnstsw
mov
mov
and
inc
sahf
jb
add
pusha
shlb
sub
loopne
xchg
mov
mov
add
and
inc
mov
outsb
negl
adc
negl
dec
cli
arpl
fdivrs
repz
movsl
leave
ja
ja
addb
loopne
jmp
and
or
add
mulb
pop
pop
nop
push
scas
shlb
add
sbb
sti
movsb
rolb
xor
test
mov
inc
mov
and
or
inc
push
xor
aad
add
pop
scas
add
pusha
or
inc
dec
stos
and
xchg
pop
push
iret
inc
ja
xor
int3
sbb
cmpsl
xchg
loopne
add
inc
and
jnp
xchg
xchg
mov
and
pop
adc
inc
loopne
or
aas
push
sbb
cwtl
push
and
mov
phaddw
push
or
stc
fcomps
push
cmp
int3
sub
loopne
inc
add
outsl
or
mov
into
pop
scas
into
inc
sub
shlb
and
mov
pusha
loopne
mov
add
pop
jb
lret
daa
sti
je
and
movsl
das
pop
mov
je
inc
scas
xchg
hlt
and
fwait
inc
sub
push
addb
pop
jge
push
mov
jbe
gs
xor
loopne
lret
inc
es
mov
cld
sub
add
and
push
pusha
pusha
cld
xchg
and
jns
inc
pop
pop
bound
lret
mov
dec
cltd
adc
push
xchg
fs
aas
pop
jg
jge
xlat
call
adcl
adc
bound
and
inc
shrl
movsb
andb
andb
cmp
xchg
fs
push
or
mov
iret
xor
popf
sub
push
mov
enter
loopne
jne
insb
or
pusha
iret
cmp
mov
cmc
in
jmp
pushf
arpl
andb
in
not
jnp
inc
das
sbb
xlat
adc
mov
in
lea
push
add
cmp
orl
inc
leave
jne
inc
sub
loopne
push
push
addb
cltd
clc
mov
jae
xchg
dec
cmp
mov
adc
nop
jae
or
addr16
and
test
in
pusha
loopne
dec
std
mov
sub
fcomps
xor
sub
lret
mov
add
jl
icebp
call
popa
stos
test
jae
mov
in
inc
loopne
imul
fcoml
push
cmp
cmp
fsubs
and
popa
sub
andb
push
pusha
rorb
mov
xchg
mov
push
pusha
xchg
add
pusha
popa
mov
addb
fwait
cmpsl
pop
pushf
test
insb
jo
hlt
sbb
mov
sbb
js
mov
nop
mov
lds
push
inc
push
and
shlb
fs
xchg
sbb
sub
subb
xlat
loop
inc
pusha
cmpsb
inc
rclb
adc
mov
add
shl
add
mov
cltd
xor
push
sub
mov
addb
pusha
inc
mov
mov
insl
xchg
jae
cli
aam
shll
inc
mov
loopne
push
push
out
dec
and
addb
outsl
imul
push
arpl
dec
xchg
mov
add
ss
add
mov
andb
add
lock
testb
test
rolb
inc
mov
xor
ja
jle
add
mov
ljmp
test
pusha
and
iret
sbb
shlb
mov
repnz
fldt
loopne
int
and
add
imul
clc
out
repz
fs
mov
adc
cmpl
add
add
pusha
push
push
inc
sub
mov
fsubs
inc
inc
xchg
lahf
xchg
lret
xchg
mov
pusha
add
pop
pushf
fnsave
rcrl
scas
pusha
add
inc
rclb
filds
stc
sti
das
test
mov
xchg
sbb
jg
int3
in
pusha
add
adc
push
cld
out
imul
roll
orb
call
fcmovu
les
enter
mov
repnz
or
cmc
sbb
xor
ret
or
orl
ljmp
jo
mulb
sub
mov
pusha
cmpb
std
cld
inc
push
jp
rolb
test
lahf
out
xchg
fimuls
inc
dec
leave
mov
or
and
out
loopne
shll
inc
lds
mov
pusha
js
sbb
out
adc
sbb
sub
inc
xchg
and
push
or
and
cltd
mov
sub
mov
cmpsb
and
andb
les
xlat
test
rol
ret
fldt
pop
stos
pusha
loopne
repz
push
fnsave
lds
pop
ret
dec
pushf
jge
cmp
in
outsb
repz
jge
loopne
push
inc
shlb
loope
xchg
shlb
repnz
shll
mov
call
into
xor
and
ret
xacquire
int
push
or
and
sub
mov
out
insl
in
out
mov
repz
and
mov
pop
xor
and
or
add
mov
or
sub
fldl
decl
loopne
cmovnp
mov
add
in
inc
inc
ja
repnz
dec
jmp
pop
dec
scas
add
movb
outsl
stos
out
inc
jle
mov
adc
inc
bound
inc
sbb
jnp
rolb
or
cmp
idiv
jl
rcr
add
inc
in
rorb
mov
nop
rol
popa
negl
push
out
and
push
push
pop
sbb
cmp
dec
pop
sbb
cmp
jae
mov
cmpsl
loop
sub
loopne
test
and
mov
dec
insb
rcll
scas
loopne
or
add
pusha
mov
mov
lods
add
ds
mov
sarb
and
mov
test
aad
enter
les
inc
ret
rcr
push
mov
dec
int
rcrl
out
loopne
stos
std
inc
aam
dec
mov
push
lods
int3
pop
pop
hlt
dec
and
add
sub
iret
cltd
addr16
divl
lods
loopne
loopne
pop
and
cli
jae
movsl
jbe
add
mov
out
and
lods
push
mov
add
rorl
mov
sahf
shll
fisttps
cli
rorb
test
push
rorb
out
pusha
shr
jo
rolb
or
loopne
add
adcb
add
xlat
test
xchg
push
stc
cltd
enter
sub
sub
ror
jbe
adc
lods
cltd
int3
ja
ljmp
fldl
rcrb
cmp
dec
mulb
lahf
sub
xor
fdivs
inc
arpl
cld
jne
and
loop
inc
inc
shll
inc
sbb
xchg
inc
movsb
and
pop
pop
adc
hlt
add
inc
inc
pop
test
add
andb
xor
sbb
and
loop
gs
push
mov
loopne
inc
mov
add
addr16
and
xchg
mov
rclb
and
and
pop
jno
mov
jge
jl
xor
pop
sub
cmpsb
pusha
pusha
jo
movsb
and
sub
and
pop
xchg
sub
sbb
std
pop
mov
addb
push
jnp
push
jg
dec
mov
dec
jl
lahf
cmp
aaa
int
mov
andb
clc
jl
lds
mov
lcall
or
and
shlb
and
dec
addr16
loopne
mov
jae
enter
jae
xchg
sahf
mov
mov
mov
and
faddl
inc
loopne
test
pusha
jl
dec
dec
data16
roll
outsb
rolb
div
push
pop
stos
inc
mov
aas
xor
mov
sbbl
movsl
push
inc
and
and
pushf
lcall
pop
mov
out
add
shr
sub
push
scas
cmpsl
pusha
mov
stc
mov
mov
xorb
inc
scas
shlb
sub
dec
repnz
dec
shl
jne
fidivs
dec
push
fwait
xchg
adc
loopne
aas
popa
mov
testl
dec
jno
test
add
call
lods
xlat
addb
imul
add
jmp
add
shlb
mov
sbb
bound
mov
imulb
ror
fcmovnb
js
daa
nop
cmc
or
out
pop
push
mov
and
add
add
xor
inc
mov
fwait
mov
cmp
xchg
mov
mov
pop
fisubl
bswap
lret
pusha
and
and
push
addl
sub
loop
in
aam
js
dec
pop
mov
lahf
inc
mov
xchg
mov
pop
ret
leave
add
shlb
pop
push
call
mov
imul
and
mov
popf
pop
push
popa
inc
mov
andl
add
pop
je
xchg
dec
mov
or
and
cmpsb
shl
mul
inc
xor
jo
jmp
add
mov
sub
inc
xor
into
jecxz
jcxz
add
sbb
out
lcall
adc
test
sbbb
mov
jne
dec
faddl
mov
pushf
adc
data16
out
repnz
dec
sbb
shrb
push
push
cmp
jne
clc
xchg
icebp
pop
mov
int
xlat
mov
inc
subl
mov
cmp
adc
pushf
jle
addr16
rolb
loope
insb
mov
inc
mov
add
mov
loopne
test
add
inc
movsb
shl
sbb
loopne
push
shl
xchg
int
mov
call
inc
rolb
pusha
pop
and
mov
cmp
xor
cli
jae
adc
aad
add
mov
push
es
pusha
ljmp
dec
mov
add
jb
jno
pop
xor
stos
or
mov
mov
mov
mov
movsl
xor
pushf
push
add
xchg
enter
jnp
mov
aaa
pop
loop
sub
outsb
push
andb
sbbl
mov
lret
pop
in
mov
cmp
insl
and
add
pusha
repz
std
fcomps
test
mov
fldcw
push
fnstenv
mov
push
mov
sub
adcb
push
lret
mov
les
inc
lcall
add
packuswb
pop
das
inc
pop
aaa
pop
jge
mov
je
loopne
xchg
setle
pusha
inc
in
test
mov
addb
int3
mov
shrb
xlat
push
and
shll
mov
xchg
and
mov
add
push
subl
add
add
dec
xor
push
mov
rolb
mov
add
inc
cmp
push
aad
pop
inc
push
sub
addb
xor
and
xchg
dec
das
negl
addb
mov
jle
aam
mov
push
andb
lods
and
push
loopne
dec
xchg
jno
or
pusha
dec
mov
out
pop
cmp
subl
pusha
adc
mov
sub
cmp
daa
push
pop
aad
mov
lcall
cmc
cmp
sahf
xor
or
inc
bound
loop
fimull
inc
out
notl
outsl
lcall
ljmp
imul
pusha
dec
cli
or
xchg
iret
and
subb
add
les
rolb
pusha
loopne
js
add
loopne
mov
push
push
sbb
loopne
gs
fbld
mov
push
mov
enter
mov
push
ja
sbb
data16
sbb
pop
push
shl
and
add
xchg
and
jns
fnstenv
bound
repz
loop
jecxz
repnz
mov
cmp
lret
adc
mov
and
and
dec
mov
fstpt
pop
dec
sbb
inc
ficompl
inc
roll
adc
scas
pusha
inc
movsl
lods
mov
incb
mov
jns
jp
pop
cmp
shlb
inc
and
int
inc
imul
mov
lock
aam
sub
mov
and
in
loope
loopne
and
xorb
nop
inc
sbb
cmpsl
movsb
add
mov
mov
inc
popa
test
fmuls
test
and
or
enter
aad
pop
adc
arpl
cmc
ret
mov
lret
ret
in
xchg
lea
xchg
stos
mov
or
mov
push
mov
andb
lret
and
sbbb
test
lret
lret
push
pusha
inc
lds
fsubrp
arpl
and
adc
rolb
xchg
and
ljmp
outsb
daa
add
leave
and
sbb
pusha
sbbb
dec
mov
mov
mov
inc
add
add
dec
jmp
push
mov
rolb
xor
inc
filds
loope
adc
insb
out
in
mov
outsl
cmp
lret
pusha
adc
cmp
imul
out
rorb
and
xor
mov
dec
lods
add
imulb
fcoms
rolb
sbb
and
inc
push
or
mov
out
ficoml
cmp
xor
adc
mov
jo
sbb
dec
lahf
lods
rolb
mov
or
mul
mov
mov
lds
cli
dec
mov
popa
pushf
stos
lret
dec
sbb
enter
xor
addb
jo
and
adc
fisttpll
and
je
pusha
idivl
jno
inc
adcb
pop
rolb
pusha
xchg
fnsave
xchg
or
fidivl
mov
and
sub
rcrl
ljmp
adc
mov
mov
pusha
lds
jae
enter
sub
sbb
jnp
adc
xchg
mov
rolb
cmpb
add
xor
fimuls
loopne
subl
push
repz
in
cmc
pop
cmp
jb
dec
mov
nop
xlat
pop
inc
mov
pusha
or
adc
ja
dec
sub
enter
and
add
stos
sub
push
shlb
popa
cmpsb
pusha
cmpb
pushf
loope
inc
outsb
addb
inc
inc
addr16
into
ret
mov
pop
jle
sbb
dec
mov
mov
pusha
shlb
mov
das
stos
ja
pusha
mov
cwtl
icebp
mov
or
add
sbb
lahf
ss
jl
cmp
sahf
mov
inc
loopne
adc
add
inc
inc
mov
loopne
ss
adc
andb
leave
mov
dec
mov
inc
mov
test
popa
jae
enter
pop
push
sahf
and
mov
or
mov
inc
or
ror
jecxz
pop
loope
sub
lahf
into
jno
mov
xor
xchg
or
inc
std
jl
ret
dec
lcall
test
loopne
and
xor
mov
shll
bound
sbb
xchg
lods
andb
mov
mov
jb
and
inc
pusha
pop
jl
lret
or
outsb
inc
fdivp
jle
xchg
push
roll
adc
xchg
insl
adc
xorb
loop
mov
subl
sub
rolb
inc
mov
aaa
fnstenv
pop
push
loopne
mov
pop
dec
in
jle
cmpl
mov
push
loopne
andb
mov
and
pop
in
cmp
shl
inc
add
add
dec
mov
call
test
int3
das
cmp
fildl
test
fcom
jbe
loopne
add
cmp
arpl
sbb
dec
iret
pop
cmp
mov
push
sbb
push
inc
loopne
sub
lock
adc
inc
stc
jge
mov
dec
add
andb
int
mov
shlb
pop
loope
inc
enter
push
mov
and
pop
mov
push
inc
pusha
push
pop
fldpi
push
pusha
rorb
cmp
shrb
and
pop
out
fstp
repnz
loopne
inc
rcrb
jno
cltd
ljmp
dec
out
push
shlb
pop
pushf
cmp
mov
loopne
mov
pusha
sti
sub
and
inc
rclb
adc
pushf
fs
push
fnstsw
loopne
push
dec
adc
outsl
push
xchg
pop
ret
push
fucom
lock
mov
jno
add
inc
mov
add
cs
pop
xchg
outsb
cltd
add
fwait
and
mov
inc
pop
push
insb
cs
sarb
inc
and
lahf
jg
je
jno
sub
inc
loop
pop
jnp
out
sbb
sahf
sbb
xchg
jae
cmp
sub
loopne
mov
cmp
pusha
inc
jo
pusha
loopne
ret
sub
stc
mov
sarl
mov
imul
pop
push
and
shl
js
mov
push
rcrl
movsl
mov
add
out
movsb
andb
add
in
addb
cmp
mov
xor
data16
add
jmp
sub
shll
not
mov
mov
mov
loopne
loop
popf
add
imul
and
rcrb
jb
repnz
rcr
fsubrl
test
mov
inc
pusha
xor
test
not
dec
jge
mov
add
pop
in
jne
xor
push
pusha
sub
add
inc
pop
push
push
ljmp
mov
nop
push
push
mov
leave
mov
scas
into
decb
inc
mov
sub
shlb
mov
lods
inc
mov
sbb
push
pusha
loopne
lret
lea
cli
ss
es
andb
pop
loop
ljmp
mov
jmp
lds
sbb
mul
out
movsl
push
jns
push
mov
rcr
cwtl
pushf
repz
pop
rorl
loopne
test
shlb
daa
pop
add
inc
sub
call
shlb
jge
jbe
xchg
lock
loopne
xor
andb
xor
inc
fucomip
jmp
lret
inc
notb
outsb
sub
and
subb
push
cld
popf
pop
jp
mov
pop
push
push
mov
add
and
sar
stos
inc
ds
mov
cmp
shlb
rcrb
nop
dec
fimull
push
addb
fdivrl
inc
sub
shlb
stos
xor
mov
out
add
cmp
daa
cld
cld
dec
or
mov
push
pop
push
ds
andl
inc
loop
sub
loopne
xor
inc
inc
nop
std
call
mov
nop
in
loopne
fidivl
adc
fimull
loopne
lods
addb
enter
pusha
cmpb
mov
jno
and
imul
or
pusha
lock
mov
and
cmp
addl
pusha
loopne
xchg
xor
mov
xchg
pop
inc
adc
lds
mov
mov
xor
in
sbb
jge
mov
mov
push
pusha
pusha
subl
push
sbb
add
repz
cmpsl
ja
add
movsb
and
in
jl
shlb
add
and
pusha
mov
nop
out
sub
shr
sbb
jl
mov
stos
inc
orb
fidivrs
jg
rolb
hlt
pop
and
push
sub
pop
cmpsb
inc
and
sub
rolb
inc
out
andb
and
inc
std
add
add
xlat
mov
addr16
sub
inc
push
adc
add
sbb
loopne
sub
and
sbb
aaa
test
je
sub
inc
mov
fsubrs
aas
lods
loope
push
pop
aas
cmp
jle
and
sarb
sub
cmpb
pop
adc
stos
cmc
popf
inc
in
inc
dec
inc
push
insb
mov
iret
lea
loop
sub
sub
and
enter
sar
sbb
dec
mov
stos
ret
in
gs
dec
adc
subb
mov
test
mov
fildll
dec
dec
pop
sbb
mov
insb
sbb
mul
inc
jl
ds
andb
stc
in
jg
mov
xchg
cmpsb
pusha
rclb
shlb
push
xor
push
push
mov
data16
in
inc
push
insl
cmp
and
jo
push
lret
ret
inc
outsl
mov
add
sub
xchg
outsl
xchg
mov
cmc
or
sahf
inc
test
andb
push
pusha
in
and
rol
and
popa
int
mov
mov
mov
movsl
ficoms
jecxz
lret
add
rorb
arpl
mov
test
mov
add
mov
mov
fcmovb
add
add
mov
add
mov
xorl
out
mov
fsubrs
aaa
mov
iret
jo
inc
pusha
add
cmp
pop
sarl
sti
es
loopne
mov
pusha
mov
pusha
add
fildll
pusha
mov
add
pusha
les
pushf
pop
cli
subl
push
mov
push
or
sbb
sub
jge
jns
inc
push
loopne
mov
push
pop
mov
adc
or
xchg
pop
popa
jl
mov
in
into
aaa
movl
loopne
mov
push
add
loopne
jne
pop
rcrb
rol
pop
add
xchg
dec
mov
or
pop
stc
jb
movl
push
cmpsl
dec
ds
lods
jle
and
push
lret
into
fldenv
jge
insl
xchg
iret
cmpsl
lahf
aaa
or
inc
adc
cwtl
cmp
xchg
jns
pop
pop
and
xchg
xchg
out
push
pushf
adc
xchg
sub
xchg
ljmp
andb
ss
jg
ss
adc
jb
add
leave
andb
daa
adc
pop
add
cmp
hlt
icebp
dec
or
adcb
jmp
call
mov
jge
add
mov
pusha
sbb
and
adc
scas
loopne
loopne
and
dec
cmc
jmp
add
xchg
imul
xor
add
shl
aas
lods
inc
mov
inc
jns
jae
cli
loop
xorl
les
mov
cmp
pusha
inc
xchg
dec
popa
lea
ja
mov
fs
mov
and
shrb
pusha
daa
cli
and
add
mov
jge
push
mov
int
mov
pusha
pusha
or
in
cltd
pusha
insb
addb
push
add
push
sbb
push
cli
push
inc
orb
fidivrl
jns
inc
inc
xchg
mov
dec
pop
iret
sti
sahf
cmp
divl
add
rcrb
cmp
lcall
out
lds
mov
mov
fsts
xchg
sub
std
roll
cmp
rcr
pusha
shl
stc
and
mov
add
ret
outsb
push
in
mov
sbbl
inc
and
and
push
test
cs
pusha
xchg
mov
sbb
in
push
jl
add
sub
andb
inc
xorb
mov
out
movsb
inc
pusha
ret
or
jl
les
xchg
cmpsl
mov
mov
loopne
push
sbb
and
and
mov
and
mov
shl
out
aas
xchg
test
xchg
inc
arpl
imul
adc
mov
loopne
test
mov
adc
arpl
je
ficoml
mov
xchg
cmp
push
add
add
scas
std
push
jbe
mov
mov
int
loopne,pn
push
add
add
pop
lret
loopne
hlt
daa
add
mov
lods
stos
bound
cmp
xchg
insb
sub
xchg
sarb
add
adc
and
js
movsb
shl
pusha
and
mov
and
pusha
adcb
mov
inc
andb
cmp
add
push
mov
pop
test
stc
es
sar
sub
inc
cmpb
mov
lahf
dec
inc
fimuls
iret
push
add
mov
push
add
fwait
daa
mov
add
sti
rolb
inc
loop
mov
popf
mov
in
je
mov
iret
push
dec
pop
xchg
ret
call
addb
test
inc
nop
mov
addr16
dec
enter
dec
pop
jg
adc
inc
and
imul
out
addr16
jle
inc
shl
out
cli
andb
das
and
xor
xor
jbe
movsl
cmp
push
mov
rolb
mov
dec
push
inc
mov
sbb
and
jmp
loope
and
ret
mov
rol
add
pop
or
xor
fnsave
cmp
inc
jnp
mov
fwait
lea
dec
jns
pushf
xchg
push
or
mov
ljmp
les
and
cmp
loopne
shll
mov
iret
jmp
loopne
rcrb
dec
addb
jno
inc
and
adc
xchg
scas
jmp
sbb
addb
inc
pusha
andb
dec
jle
sbb
sub
stos
clc
push
push
mov
loopne
sbb
cli
mov
add
aas
jl
fnstenv
or
sbb
inc
andb
and
shrb
and
and
pop
push
andb
xchg
sti
sbb
fs
shlb
fldcw
pusha
add
rclb
rolb
add
sbb
add
loopne
outsl
fwait
xchg
or
pusha
mov
call
movsb
rolb
sub
pusha
lods
mov
xor
pop
addr16
push
in
shlb
inc
mov
sbb
repnz
xchg
fnclex
int
popa
add
and
push
wbinvd
mov
cmp
arpl
inc
push
inc
and
xchg
cmpsb
add
outsl
sysenter
ror
jae
jns
sub
pop
movsb
and
insl
cmp
aad
inc
addb
shrl
sub
and
mov
andb
fildl
xchg
or
xchg
push
sbb
adc
lcall
int
and
sti
and
mov
mov
ret
or
and
cmp
inc
pusha
icebp
xchg
jle
mov
mov
popa
and
dec
and
jmp
dec
mov
rol
dec
xor
xchg
ja
pop
mov
mov
adc
cmpl
jle
pop
jbe
cld
cmpsl
add
loopne
mov
loopne
lahf
xchg
loop
mov
inc
jecxz
push
mov
rorl
inc
sbb
je
stos
and
repz
jns
sbb
jle
mov
and
add
ret
mov
jg
lds
push
lods
shlb
push
sub
push
jno
mov
movsl
shl
and
shrb
loopne
xchg
fsubrs
and
hlt
push
fmull
add
adc
fsubrl
outsl
in
and
les
in
xlat
fistps
pop
pushf
iret
daa
iret
les
dec
mov
or
and
loopne
mov
and
and
pusha
and
and
xchg
mov
shll
repnz
inc
enter
and
daa
bound
mov
rcl
inc
lods
ret
je
inc
and
pop
das
mov
sbb
mov
mov
movsb
inc
mov
sub
clc
inc
subb
sbb
push
and
cmpsb
andb
adc
loopne
pop
or
rcrb
cmp
into
jg
loopne
sub
mov
test
mov
nop
xchg
mov
pop
into
mov
orb
sbb
loope
andb
jae
push
in
adc
imull
add
and
inc
int3
cmc
movsb
rol
or
movsl
loopne
cwtl
mov
push
int3
loopne
insb
pushf
and
pusha
pop
clc
jns
mov
lcall
rolb
rclb
pusha
outsl
inc
loope
rcrb
lods
ds
cli
inc
aad
push
into
pop
inc
ret
dec
ss
jnp
or
inc
jae
clc
mov
ret
cmc
rorl
inc
lods
inc
pusha
sbb
jns
push
jl
lret
push
mov
push
rolb
or
push
jge
std
int3
mov
int
mov
pusha
mov
or
rcr
or
mov
pusha
repnz
cmpsl
stos
daa
xor
lret
pusha
rorb
sbb
xor
or
mov
shlb
shlb
sub
and
in
pusha
pusha
lahf
xor
addb
mov
and
pusha
das
iret
aam
xor
lock
lods
pusha
inc
dec
mov
enter
addb
mov
mov
loopne
push
inc
rcrb
mov
inc
xchg
dec
pop
jl
div
lods
rolb
and
pushf
dec
add
orb
popf
leave
cld
cwtl
sbb
add
pusha
test
add
pop
imul
sub
add
jae
loop
data16
pop
ja
mov
mov
jne
shlb
movsl
cmp
cli
sub
sarb
mov
or
mov
loopne
shlb
jns
mov
mov
mov
repnz
add
lock
int3
jle
mov
mov
test
and
adc
lahf
mov
movsb
loopne
adc
jmp
mov
fwait
mov
pop
lret
push
popa
jae
scas
mov
loope
push
bound
dec
inc
push
mov
jns
push
pusha
loopne
mov
inc
psrld
mov
push
adc
mov
loop
pop
dec
loopne
inc
adc
add
xchg
imul
imul
lods
adc
ss
mov
jnp
loope
sbb
popa
hlt
and
cltd
fdivrs
and
mov
xchg
xlat
mov
cs
pusha
mov
pop
cltd
sti
iret
jno
jecxz
rcll
aas
dec
and
or
test
lods
andb
mov
xchg
push
and
ret
inc
cmp
mov
mov
add
ficompl
nop
dec
jb
and
loopne
shlb
ss
in
mov
push
arpl
mov
xlat
push
xor
and
hlt
test
loopne
push
push
movsl
bound
or
sbb
andb
pop
movl
das
cmpsl
or
rolb
jg
and
and
add
and
push
adc
lcall
aaa
les
int
adc
data16
imul
jg
rolb
sub
pusha
add
loopne
sahf
lock
into
mov
inc
addb
sub
adc
repnz
xchg
inc
xor
and
pop
shr
frstor
loopne
test
shl
push
stos
addb
idiv
xor
and
and
cmpsb
add
mov
ret
fidivs
call
out
and
and
fsubr
out
data16
xor
je
and
pop
and
mov
sbb
cmp
andb
aam
sbb
pusha
rorb
rorl
fdivrl
rclb
hlt
cmp
and
mov
iret
xor
push
outsl
and
jno
mov
insl
jp
paddw
mov
popa
popf
jmp
lods
pop
sbb
std
dec
addb
sbb
fmull
jmp
shlb
arpl
add
inc
repz
xchg
pusha
add
dec
aad
cwtl
pop
imul
cwtl
not
dec
loop
pusha
test
rclb
dec
sti
mov
lods
loopne
sbb
push
stos
add
repnz
or
pusha
push
pusha
and
mov
pop
sub
test
pusha
arpl
lods
inc
mov
in
add
adc
xchg
into
mov
jle
add
mov
mov
shlb
pop
and
mov
mov
push
cld
sbb
mov
pusha
sub
mov
scas
loopne
lock
and
orb
andb
cmp
loope
and
les
pusha
dec
insl
cmp
jbe
lods
rolb
inc
lods
rol
lea
lds
jmp
ljmp
aam
and
pusha
mov
fsubrl
add
pop
in
mov
shrl
and
mov
loope
push
cmp
cmp
sbb
cmc
cmpsb
add
pop
push
pop
pop
mov
and
in
push
lds
mov
fdivs
scas
mov
dec
sub
and
push
and
in
mov
push
outsl
nop
in
or
add
shrl
addr16
stc
dec
inc
add
pusha
and
jg
and
loop
pop
loop
shld
stos
andb
and
mov
inc
inc
adcl
rolb
mov
mov
mov
push
jl
ljmp
fnstenv
flds
sub
and
pusha
jnp
mov
and
and
mov
jmp
pop
pop
xchg
push
pushf
adc
push
insl
jp
or
inc
test
fs
jns
shl
jns
push
xchg
jp
rolb
xor
fwait
in
ds
jne
xchg
outsb
and
pusha
test
inc
adc
scas
mov
loopne
fdivrp
lods
movsb
addb
adc
jge
fucomi
push
loopne
daa
sahf
repnz
loop
mov
shlb
call
push
cltd
jns
xchg
inc
adc
lcall
pop
aaa
push
mov
shlb
int
pop
paddb
call
rolb
pop
cmp
gs
mov
mov
and
icebp
bound
add
loope
gs
fnstsw
lds
addb
mov
or
andb
jno
cmp
add
fs
mov
neg
out
push
push
adc
adc
inc
sti
jns
pusha
mov
adc
inc
fisttpll
aaa
fwait
sbb
cmp
sbb
xor
cmp
mov
bound
insb
sbbl
rol
add
rol
les
data16
adc
sub
movsl
dec
test
and
push
xchg
sbb
inc
lods
add
stos
inc
adcb
and
ror
loopne
mov
jge
aam
clc
cli
mov
sub
mov
daa
mov
popa
cmp
pusha
and
in
ret
aam
cltd
xor
jg
and
adc
adc
and
ret
pop
arpl
les
lods
loopne
cmc
mov
dec
ret
mov
jp
xor
aas
bnd
and
adc
js
inc
mov
loopne
cld
jp
sbb
sbb
xorl
aas
ds
inc
add
push
addb
jnp
pop
pop
pop
push
imul
adc
mov
xchg
loopne,pn
pop
fsubrs
mov
inc
and
loopne
cmp
sub
das
adc
pusha
mov
xor
insb
fstl
lock
loopne
addb
sbb
push
xchg
testb
mov
fldl
and
add
outsl
push
xchg
in
pushw
sbb
jnp
rolb
pop
xchg
or
and
pop
and
pusha
jo
sub
loopne
ljmp
loopne
inc
adc
mov
and
pop
mov
mov
andb
dec
inc
cli
jp
in
aaa
enter
in
xchg
in
jb
pusha
and
cmp
fs
pusha
jge
jl
into
insb
mul
mov
sti
dec
aas
inc
iret
lds
stc
cmc
xchg
jge
daa
sbb
cmp
pop
and
andb
out
push
push
fwait
add
inc
mov
mov
addb
cmp
test
sbb
mov
in
mov
frstor
add
push
cld
mov
inc
jecxz
lahf
ja
mov
repnz
mov
push
fisttpll
add
loopne
push
xlat
aam
hlt
dec
xlat
sbb
mov
mov
mov
mov
stos
loopne
mov
in
cmp
hlt
and
fisttpl
inc
fists
or
jl
test
rcrb
imul
stos
addb
pusha
and
jb
mov
xor
sbbb
dec
sbb
pop
loopne
sbb
inc
sub
out
jno
xchg
das
pop
fisttps
sbb
lret
mov
addb
movq
add
mov
shl
into
fwait
loopne
dec
sbb
daa
lods
ret
imul
jbe
imul
xor
lods
mov
fdivrs
and
push
sbb
iret
and
cmc
push
in
mov
hlt
rclb
dec
mov
loopne
inc
pop
sub
and
pop
jae
xchg
lcall
push
fisubrl
add
inc
ret
xor
pop
nop
mov
push
and
leave
inc
jo
xchg
mov
aad
inc
mov
loope
rolb
inc
mov
add
in
dec
mov
enter
sub
leave
sbb
pop
xor
rolb
loopne
in
addb
add
cmpsb
add
daa
cwtl
push
scas
shlb
loop
notb
ret
inc
fsubs
pusha
outsb
negb
int
cwtl
or
ror
addb
and
pop
push
adc
add
js
cmc
fstps
mov
test
sar
mov
pop
or
jns
movb
inc
push
mov
sub
mov
aad
mov
lahf
xor
inc
inc
push
addb
rorb
cmpb
pusha
add
in
pop
stc
jp
jecxz
je
mov
sbb
loop
scas
loopne
mov
fcoms
bound
dec
das
mov
fadd
push
xor
lcall
pop
and
sbb
mov
add
and
mov
pop
mov
in
add
sub
addb
andb
aaa
cmp
loop
dec
adc
jg
mov
mov
push
lea
test
mov
ret
loopne
or
push
cmpsb
add
mov
inc
andb
jae
les
add
mov
subb
add
testb
loope
movsl
imul
enter
xlat
jle
cmp
loopne
jne
push
addb
pop
mov
addb
pop
and
loopne
fwait
cwtl
mov
cltd
dec
or
dec
push
and
loopne
arpl
add
cwtl
sarl
add
cli
pop
jae
adc
mov
xlat
xor
mov
and
and
mov
add
in
add
pop
push
adc
into
mov
aaa
ja
call
add
std
icebp
sbb
pusha
cmpb
jo
sbb
jbe
nop
sahf
jmp
fwait
inc
jge
jo
cli
mov
push
loopne,pn
pop
fwait
movl
loopne
lds
lods
shlb
js
lds
ja
addb
push
fdiv
pop
out
ret
outsl
xor
and
fiadds
push
loope
mov
fsubrl
jnp
jnp
push
adc
inc
xchg
jp
or
sbb
repnz
lods
pushf
int
and
adc
cmp
mov
pusha
add
out
adc
mov
inc
jae
ljmp
scas
and
inc
and
mov
push
sub
lods
sahf
adc
addb
pop
jle
je
add
int3
rcrb
dec
fildll
bound
loopne
xor
mov
sub
sub
xchg
dec
in
add
jns
mov
pusha
in
mov
add
push
sbb
mov
mov
or
outsl
push
add
cmc
pop
sub
xor
push
fbstp
mov
dec
xor
loopne
scas
sub
pop
loop
cltd
lods
loopne
mov
shrb
xor
push
pop
insl
jle
mov
mov
fistpll
rorb
andl
in
xchg
test
cmp
sub
ficoml
bound
sbb
fistpll
daa
mov
mov
pop
lea
cwtl
adc
pop
add
inc
pop
sti
jle
and
pusha
xchg
push
fldcw
hlt
xor
ja
cmp
cmp
sar
add
inc
pop
xorl
add
add
mov
add
inc
sbb
mov
fadds
andb
cmp
xlat
jp
adc
loopne
js
mov
add
sbb
repnz
pusha
lods
addr16
inc
mov
das
out
out
mov
adc
jns
cmpsl
sub
add
andb
enter
pop
add
push
pusha
and
dec
add
xor
cmc
jmp
cmp
sbb
std
jo
adc
fstpl
sbbb
add
and
and
adc
add
add
scas
pop
lods
adc
in
inc
cmp
mov
pusha
mov
or
stos
mov
sahf
jg
jbe
nop
sbb
imul
mov
cld
sub
pusha
stc
test
and
inc
andb
insl
or
loopne
inc
inc
xchg
aaa
or
mov
xor
fsubrs
inc
mov
shrl
inc
gs
subl
xor
inc
rcl
and
push
ret
mov
add
icebp
and
pusha
iret
or
cltd
addr16
sbb
sub
inc
jle
test
mov
aas
clc
jecxz
push
mov
outsl
dec
repnz
scas
pusha
inc
pop
ret
fiaddl
lea
sbb
jb
arpl
cmp
insl
rorl
aaa
push
mov
das
sbb
int
addl
orb
inc
hlt
lcall
or
add
loop
xor
add
je
flds
andb
out
jmp
ficompl
xor
add
nop
jae
dec
add
xor
rorb
loopne
stos
sti
ret
repnz
scas
and
add
in
arpl
test
sarb
mov
mov
mov
and
cmpsb
pusha
pusha
or
mov
push
or
mov
mov
xorb
shlb
loopne
xchg
out
les
jecxz
xor
mov
and
iret
or
rorb
outsl
aam
stos
shlb
stos
add
movsb
inc
add
fwait
mov
dec
and
add
mov
push
xor
mov
add
hlt
in
cltd
lea
rcr
and
pusha
add
push
cmc
sub
out
mov
hlt
cmp
movl
aas
and
add
add
pop
sub
mov
cmp
mov
inc
in
pop
xchg
adc
andb
sbb
and
or
test
loopne
sub
sub
iret
adc
jne
pop
shlb
cld
nop
push
mov
mov
xchg
test
add
adc
dec
lods
sbb
out
push
cmp
iret
add
test
cmpb
mov
mov
mov
add
insb
in
inc
and
inc
jbe
mov
and
sub
pusha
leave
inc
inc
stos
mov
rolb
or
jge
rol
ret
sub
mov
aam
fiaddl
loopne
and
loopne
mov
das
call
adc
aas
mov
aam
mov
and
test
jecxz
push
and
and
repz
jmp
mov
xchg
push
push
inc
add
ljmp
out
test
mov
pop
sub
cmp
push
sbb
mov
xchg
inc
les
and
insl
jl
test
nop
mov
pusha
movsl
sub
mov
inc
inc
dec
std
fwait
fwait
shr
into
push
cmp
mov
mov
cmp
addb
xchg
push
scas
or
pusha
sub
add
fiadds
sahf
mov
cmp
test
popa
int3
add
subb
or
mov
andb
ss
mov
cmp
sub
shl
icebp
insb
test
and
mov
data16
mov
pop
and
pusha
icebp
inc
push
inc
inc
out
jl
pop
rcl
lock
mov
aaa
inc
lock
loopne
or
and
and
loopne
cld
mov
loopne
retw
jl
aad
pop
xchg
sbb
mov
add
jmp
fdivrp
mov
lret
pusha
mov
call
xor
add
fbld
leave
and
inc
adc
sbb
mov
or
imul
repz
shl
ja
inc
xchg
mov
jb
inc
xchg
mov
fsubrs
roll
jo
test
dec
push
shll
int3
dec
cli
jnp
shl
sub
sbb
scas
mov
mov
and
xchg
or
loopne
or
rolb
push
fnstcw
add
add
mov
jae
xchg
ret
cmp
loopne
sbb
mov
xchg
pusha
dec
out
push
es
inc
cltd
lods
loopne
mov
pushf
out
or
inc
rclb
push
and
fcoms
pusha
add
fabs
inc
mov
push
cmpsb
rolb
jg
insl
and
and
mov
push
lock
je
add
or
ror
sub
mov
add
xor
addb
in
sub
loopne
jbe
sub
pusha
faddl
loopne
jmp
das
dec
xchg
push
shl
mov
insl
push
fistl
sub
dec
adc
sbb
jp
jnp
scas
and
push
shlb
xor
fdiv
test
add
push
xchg
hlt
aas
xchg
dec
outsb
ja
movsb
addb
ret
dec
fwait
xor
outsb
aaa
xor
add
mov
rclb
imul
rolb
mov
shr
pushl
inc
mov
imul
mov
inc
and
mov
xor
add
adc
add
jb
jg
mov
mov
shlb
jge
mov
stos
pop
cmpsl
aas
mov
push
cmp
stos
cmp
popa
outsb
and
loopne
in
mov
push
xor
xor
add
into
xchg
add
jmp
or
stc
fstl
and
pusha
pusha
hlt
lret
sub
stos
pusha
mov
andb
inc
push
and
inc
gs
jnp
sti
add
sbbb
jle
stc
cmpsl
inc
pop
ret
cmp
dec
arpl
imul
ds
push
sub
dec
jg
addb
gs
addb
std
mov
cmpb
add
popa
mov
cmp
test
repnz
add
mov
push
pop
stos
push
sub
mov
test
inc
mov
and
rclb
lcall
jbe
int
add
pusha
test
iret
rclb
mov
push
sub
loopne
or
lds
fists
and
jbe
std
jbe
je
rcrl
dec
shlb
inc
inc
ds
popa
inc
mov
mov
xorl
xor
mov
pop
bnd
inc
add
dec
arpl
aad
xchg
pop
cmc
pop
imul
mov
pusha
pushf
test
pop
dec
add
sub
inc
rorb
cld
mov
pushf
xor
xor
adc
cmp
push
movsb
mov
push
sti
xor
cmp
pop
in
and
icebp
sub
and
shrb
or
shlb
inc
cltd
add
push
and
mov
cmp
jns
imul
push
inc
inc
aaa
dec
sbbl
pop
popf
cld
jle
loopne
pop
cmp
add
in
xlat
xor
xchg
push
scas
mov
mov
pop
test
cmpsl
aam
lret
loopne
xchg
xlat
add
jle
add
inc
cmpsb
pusha
loopne
mov
inc
and
sbb
daa
add
in
xor
mov
scas
scas
loopne
jae
mov
mov
xchg
repz
sub
fsubl
sub
add
pusha
ljmp
add
adc
idivl
sti
mov
cld
aam
lret
cmpsb
inc
rcrb
pusha
and
push
pusha
adcb
xor
daa
xor
or
pusha
xchg
push
xchg
jnp
sarb
aad
jp
pushf
ficompl
add
push
mov
mov
cmp
pop
adc
and
cmp
sub
shll
into
add
clc
ret
xor
mov
je
jnp
mov
loopne
and
ds
inc
pusha
cltd
jnp
addb
mov
icebp
int3
pop
rcll
inc
mov
test
and
ret
fs
pop
mov
adc
pushf
mov
mov
shlb
jns
addb
in
mov
imul
scas
add
or
pusha
inc
cmp
adc
aas
pop
mov
push
ret
insb
cmp
push
out
pusha
int3
pop
es
and
mov
mov
pusha
add
push
fsubrl
mov
rolb
push
roll
push
fnstenv
jg
cmp
movsb
inc
and
loopne
imul
inc
std
lea
rcll
fidivrs
loopne
aad
sti
in
dec
or
pusha
adc
pusha
and
mov
loope
xor
add
icebp
and
lods
push
loop
mov
or
mov
fsubr
pushf
add
xor
inc
ss
jmp
mov
and
and
into
add
inc
shr
cmp
dec
mov
cmpsb
pusha
pusha
pusha
mov
imul
int
mov
repz
leave
inc
in
lods
andb
add
mov
subb
mov
adcl
not
imul
pop
inc
mov
into
mov
fidivl
cmc
mov
rol
and
andb
das
add
add
cmpsl
insl
add
shlb
mov
and
mov
xor
shl
mov
addb
sub
and
xor
jecxz
loopne
xlat
fisubrs
test
loopne
mov
cmp
das
ss
data16
clc
dec
jb
bound
imul
std
out
cltd
bound
loopne
xchg
and
lret
aaa
mov
pop
sub
int3
fsubs
push
and
mov
setne
imul
inc
sbb
gs
sub
mov
ljmp
adc
sbb
shll
pop
scas
das
push
adc
mov
inc
and
loopne
xchg
pop
mov
and
jnp
xlat
mov
loopne
hlt
push
lahf
xchg
daa
aaa
sub
aas
shll
stos
andb
dec
sahf
or
pop
inc
inc
adc
and
das
jp
xchg
add
xor
mov
orl
loopne
push
jp
push
add
adc
pusha
loopne
das
icebp
xlat
in
popa
adc
stc
jp
pusha
add
or
add
mov
mov
inc
cli
icebp
mov
inc
in
shl
pop
ja
xchg
jecxz
mov
add
adc
out
mov
test
push
aaa
shrl
mov
add
jno
push
and
fldl
loop
cltd
movsb
pusha
inc
inc
jnp
movsb
mov
out
or
and
dec
rcr
movsb
add
es
imul
inc
inc
leave
nop
push
fistl
push
std
lods
mov
mov
cwtl
imull
enter
mov
and
es
inc
lret
jg
shll
add
add
add
data16
and
dec
cmp
push
mov
cmp
rorb
das
out
pop
ret
mov
cmp
xchg
mov
push
in
imul
decb
and
add
iret
notl
insb
repz
push
arpl
dec
lahf
sub
add
lea
mov
pusha
mov
and
shr
daa
into
ds
and
sub
pop
xchg
or
mov
push
shlb
addb
cmp
add
rolb
dec
lods
lea
testl
enter
and
pusha
and
jne
lret
leave
sahf
xor
int
fucomip
push
mov
loopne
inc
dec
mov
fcompl
pop
test
shlb
add
cmp
cmpsl
lahf
mov
and
jno
loopne
lret
data16
aaa
pop
jecxz
xchg
aam
xchg
aaa
inc
les
fwait
lahf
inc
mov
add
xor
addr16
shlb
outsl
test
sbbb
mov
test
inc
sub
rorb
insl
mov
rcrb
fmull
inc
inc
pop
test
addb
add
ds
adc
es
adcb
mov
inc
pusha
mov
inc
jb
rol
enter
shrb
movsb
add
lahf
xor
jnp
div
mov
xchg
loopne
rol
mov
pusha
mov
jl
jne
mov
subb
and
addb
shrb
andb
mov
inc
jmp
fs
push
inc
sarb
xor
jo
mov
fadd
dec
and
rcrb
mov
aam
jns
cwtl
add
andb
xor
test
shl
sub
enter
xor
mov
andb
mov
loope
pusha
subb
in
retw
shlb
fildl
and
pop
and
mov
push
and
dec
std
add
in
rcll
bound
cmp
push
pop
xchg
hlt
push
ljmp
jbe
mov
xor
add
inc
and
add
adc
subb
pop
xchg
test
pusha
xor
and
adc
and
sub
inc
bound
cld
aaa
mov
add
push
pop
iret
out
stc
push
cld
add
xorl
repz
and
adc
or
ja
jae
rolb
inc
test
aas
imulb
inc
ss
push
xor
lods
pusha
rcl
popf
pop
jp
cmp
iret
xor
dec
scas
rolb
movsb
loopne
leave
rclb
adc
add
dec
sti
add
shlb
mov
inc
sbbb
mov
pusha
pusha
iret
out
inc
shll
inc
pushf
and
inc
xchg
xchg
mov
cmp
mov
dec
out
xor
pusha
and
loopne
je
inc
aam
jb
dec
jmp
pop
bound
nop
and
mov
mov
xor
movsl
pop
imul
cmp
aas
je
fdivl
sbb
mov
add
mov
add
subb
popf
sar
fists
or
out
inc
loopne
fnstsw
dec
jp
xor
and
cmp
or
fld
jno
adc
and
mov
mov
out
push
mov
loopne
mov
cmp
loopne
sahf
jmp
addb
shl
neg
dec
sub
and
lahf
jnp
inc
add
stos
add
insl
clc
pop
rorl
int3
sub
shl
lcall
aad
jne
mov
or
and
les
and
mov
sub
add
or
pop
test
andb
or
cmpb
mov
outsb
outsb
cld
mul
test
sbb
add
subb
icebp
jg
xor
or
and
outsb
jne
sahf
jo
addb
rcr
cmp
jno
cmpl
inc
ret
int
mov
pop
dec
push
xor
xor
jl
add
and
rclb
or
int
pop
sub
add
pusha
add
daa
hlt
scas
lret
stos
shl
daa
add
add
adc
ss
js
pop
jmp
ffreep
mov
inc
rolb
aam
inc
xchg
lds
loopne
mov
lret
add
xchg
cmp
aam
push
xlat
mov
inc
mov
dec
xor
jno
add
shlb
aam
pop
test
fsubl
ss
adc
pop
push
shlb
add
inc
or
xorb
mov
dec
imul
inc
cmp
mov
or
inc
and
imull
shlb
dec
and
pusha
and
or
mov
add
nop
push
pop
cmpsl
stos
cmovl
jecxz
cltd
inc
xor
loopne
xchg
mov
pushf
dec
inc
outsb
xor
mov
outsb
out
loopne
mov
enter
cmp
aam
inc
inc
int3
sti
ficomps
movsb
loopne
inc
pop
out
inc
lods
xchg
bound
adc
fisubl
rclb
in
push
sbb
lcall
rolb
test
in
jnp
jbe
xor
xor
pop
fistps
rolb
jb
xchg
cmpb
sarl
outsl
push
jno
push
cmpsb
rolb
xor
adc
aas
out
sti
stos
push
pmuludq
jmp
or
loopne
mov
jnp
inc
loopne
sub
dec
iret
sub
movsb
mov
add
pusha
rorb
jne,pt
add
mov
mov
adc
inc
nop
cmp
add
or
movsl
inc
push
ret
xchg
pop
mov
fsubp
xchg
cmp
mov
and
dec
sub
movsb
and
and
fwait
pushf
dec
mov
mov
inc
movsb
mov
cmc
dec
push
mov
pop
dec
xchg
popa
or
movsl
xchg
adc
movsb
rol
es
aaa
les
pop
jae
xchg
xchg
adc
rolb
andb
pusha
inc
and
out
push
jo
or
and
jg
jne
xor
push
outsb
jmp
mov
loopne
rolb
imul
mov
addb
and
sub
inc
scas
test
mov
flds
pop
push
dec
jb
mov
dec
mov
jnp
sbb
xchg
out
fcomp
and
rolb
shll
and
outsl
jne
movq
jno
and
pusha
mov
loop
addr16
cmp
cmpsl
in
fadd
lret
cmp
jnp
push
mov
pusha
and
cwtl
cwtl
pusha
nop
lret
inc
imul
rolb
jno
js
mov
mov
pop
jb
xlat
arpl
jmp
loopne
imul
jl
or
add
xor
sub
cmpb
in
loopne
push
cmp
adc
inc
inc
data16
mov
push
sbb
mov
mov
jecxz
or
xchg
jo
out
adc
adc
mov
dec
daa
lock
mov
subb
inc
icebp
xchg
cltd
cld
repnz
sbb
jmp
mov
pusha
clc
in
push
mov
xor
cli
fs
xor
popa
daa
movsb
inc
add
adc
aam
sbb
pusha
loopne
dec
ss
add
adcb
dec
fld
push
pushf
and
rolb
out
dec
stc
or
add
popa
or
mov
lds
jae
mov
test
inc
or
loopne
xor
mov
push
adc
mov
repnz
sbb
mov
aaa
lock
jns
pusha
and
mov
mov
inc
test
add
insb
aad
push
adc
addb
lods
addr16
rorb
pop
sub
ret
jp
in
out
mov
int3
mov
or
mov
arpl
xchg
clc
mov
stos
cmp
out
stos
inc
and
movsl
push
dec
dec
repnz
sbb
push
sbb
mov
fldenv
push
cmc
or
and
mov
fildl
xchg
add
push
mov
adc
mov
jp
xchg
repz
jne
sub
notl
sbb
loopne
lahf
stos
pusha
pusha
or
mov
and
rorb
push
mov
mov
ljmp
inc
adc
int
loopne
mov
fidivrl
mov
into
mov
sbb
xor
loopne
sbb
and
mov
stos
and
add
inc
xchg
rol
xor
jp
int
inc
xor
test
addb
cmpsb
addb
jne
and
loopne
mov
and
inc
test
dec
jle
dec
jmp
pop
mov
pusha
stos
loopne
ret
pusha
mov
addr16
test
mov
sbb
add
pusha
pusha
dec
idivl
stos
rolb
pusha
and
out
mov
aam
pop
loopne
pop
adc
add
dec
loope
lcall
mov
push
lret
push
fisubs
sub
pusha
add
outsl
mov
sahf
adc
mov
stos
inc
and
cmp
jecxz
test
inc
pusha
icebp
icebp
pop
in
add
mov
pusha
and
pusha
shrb
shlb
bound
dec
mov
and
lret
dec
sbb
fs
xchg
out
pop
mov
flds
xchg
cmpsl
ss
clc
cmp
aad
add
xchg
jbe
jo
lcall
mov
xchg
fildll
inc
mov
add
loopne
pusha
and
popa
dec
aas
mov
push
movb
add
rcrl
xlat
inc
adc
pushf
and
inc
add
add
loop
and
loopne
fistpll
mov
jne
mov
push
jns
fisttpll
or
ljmp
fs
add
lds
fstpl
andb
lret
pop
cmp
add
cli
loope
popa
dec
gs
rol
loopne
cmp
mov
and
pusha
loopne
xor
ljmp
sub
out
shl
jp
popf
aaa
lahf
ret
addb
cmc
fnstcw
hlt
xor
jge
add
adc
pusha
sub
cmpb
push
unpckhps
jae
mov
fmull
adc
call
neg
out
xchg
and
nop
bound
dec
out
movsb
rolb
mov
cwtl
mov
jp
repnz
mov
mov
sbb
mov
jecxz
iret
jo
je
and
js
scas
cmp
rolb
mov
dec
setp
dec
in
cwtl
mov
loopne
repnz
dec
enter
mov
push
addb
loopne
hlt
xchg
pop
popa
jb
data16
mov
pop
xchg
inc
fiadds
cmpsl
ficompl
fwait
cmp
mov
leavew
pop
pop
loop
and
inc
mov
loopne
shlb
jecxz
incb
add
shll
mov
inc
lret
pop
sub
ficoms
fisubrl
sbb
pop
scas
mov
test
cwtl
push
dec
fsubrp
mov
pop
push
bound
and
pop
fistl
out
loope
push
pusha
add
inc
add
adc
cmpl
iret
cmpsb
mov
jno
jbe
lea
pusha
sub
adc
call
cli
inc
pop
cli
adc
mov
cmc
pusha
mov
and
dec
movsb
pusha
loopne
mov
dec
repnz
and
pusha
dec
sbb
loop
and
enter
pop
sub
lds
sub
add
cwtl
aaa
std
mov
cmp
in
push
andb
xchg
pusha
or
stos
pusha
pusha
mov
and
shrb
mov
pop
cmpsb
andb
mov
aad
jmp
mov
and
iret
mov
mov
lods
mov
popf
mov
jae
jb
sub
cmpsb
pusha
and
hlt
in
mov
call
or
inc
adc
mov
andb
mov
mov
mov
add
pop
stos
pusha
sarb
cwtl
dec
mov
loopne
push
pop
mov
nop
pop
add
inc
xlat
and
sarb
out
xor
imul
shlb
popf
push
dec
mov
and
outsb
xor
pop
cmp
imul
or
push
out
or
ja
lods
push
std
lret
jmp
sub
rol
pusha
sbb
stos
and
add
aam
mov
pusha
sub
xor
pusha
rcrb
in
enter
fdivrl
shl
insl
or
imul
dec
jmp
into
fistpl
sbb
faddl
shlb
pop
cli
ffree
aad
dec
mov
add
push
pusha
mov
lds
and
aam
sbb
mov
adc
lock
ss
clc
xorl
ja
int
andb
ret
pop
outsl
pushl
pop
scas
inc
inc
xchg
mov
fs
fwait
mov
and
mov
pusha
aam
cmpsb
and
push
pop
xchg
dec
inc
in
and
std
pop
pushf
inc
or
sbb
popa
add
and
aam
mov
adc
ds
inc
cmp
andb
das
out
xor
pop
cld
inc
add
and
dec
repnz
jl
ljmp
dec
xchg
adc
test
loopne,pn
ljmp
fisubs
icebp
sbb
aaa
pop
clc
sub
addb
loopne
xor
mov
loopne
sbb
sbb
inc
jns
xor
lods
inc
addb
andb
mov
cmpsb
loopne
std
fsubr
sub
mov
pop
in
loope
ret
in
mov
pop
adc
mov
inc
mov
ret
jne
int
leave
icebp
lods
add
shll
pusha
fiaddl
mov
pusha
iret
aad
fwait
in
lods
test
inc
mov
inc
jle
pusha
sbbb
cld
adc
cmp
pusha
mov
stc
aad
fsubrl
sub
adcb
mov
add
add
mov
cltd
mov
addb
cmp
sub
cwtl
fincstp
mov
mov
cmp
push
rolb
mov
aas
in
mov
cmpb
iret
incl
add
subb
fisubl
add
mov
jb
adc
pop
push
dec
fwait
arpl
xchg
lea
sbbb
mov
mov
pusha
inc
push
and
in
push
aaa
sub
xlat
into
sti
test
cmpb
push
loop
xor
mov
icebp
jg
add
cmc
daa
inc
scas
and
and
cmpsb
inc
cmp
ja
mov
hlt
jo
and
fists
jo
mov
ja
shlb
mov
rol
mov
pusha
cwtl
mul
out
mov
sbb
out
xlat
cmp
stos
pusha
pusha
pop
push
pushf
sbb
inc
and
and
addb
or
and
adc
jle
test
and
dec
popa
stc
add
pusha
icebp
or
lods
mov
loopne
jmp
dec
mov
jb
cli
lcall
push
cmp
add
shrb
rol
loopne
cmp
mov
mov
in
dec
sbb
outsl
sub
pop
push
mov
mov
pusha
pushf
dec
sub
inc
jmp
push
add
and
xor
fwait
lock
call
fldl
mov
pusha
pusha
imul
add
int
pop
mov
frstpm(287
loope
push
popf
dec
lahf
cmp
ljmp
mov
adc
loopne
sbb
xor
add
addb
test
inc
inc
or
xchg
arpl
test
mov
lret
pop
dec
mov
adcb
jns
shlb
xchg
inc
pop
gs
jle
pop
xchg
cmpsb
addb
mov
loop
push
push
and
out
daa
stc
pop
fcoms
cld
jle
loopne
jmp
xchg
stc
xchg
push
clc
shlb
addb
out
movsb
rol
int3
lods
mov
loopne
jne
addl
and
lds
fucomp
mov
sbb
std
jp
mov
sbb
or
fldz
mov
int
mov
mov
cmpb
fnstcw
adc
xlat
inc
xor
lret
popa
out
sti
dec
scas
andb
inc
add
jno
add
xorb
mov
into
xchg
inc
out
aad
xorl
mov
out
inc
push
ret
mov
out
mov
mov
pusha
pusha
push
mov
jmp
jge
mov
shlb
pusha
adc
push
inc
add
pushf
sub
lock
rcr
movsl
inc
lret
arpl
inc
loopne
xor
andb
jns
movsb
mov
add
addb
dec
lea
mov
shr
je
lcall
data16
in
adc
jae
add
inc
dec
cli
repnz
and
push
add
mov
test
and
add
ret
loop
pusha
pusha
sti
xchg
pop
pop
loop
and
mov
push
xlat
jg
shlb
divb
mov
add
xor
out
fstps
add
mov
mov
ret
sbb
inc
jp
cmc
pop
fcmovbe
fs
insl
mov
stc
cmc
cmp
iret
ljmp
in
pop
add
movl
dec
add
pop
nop
inc
cmpsl
lahf
es
rcrb
loopne
and
loopne
adc
adcl
and
insb
or
iret
div
pop
imul
movsl
ljmp
leave
cld
cmpsb
add
outsb
pop
pop
dec
adc
fs
and
mov
outsb
movsl
sub
lcall
pop
sub
adc
aad
pop
outsl
adc
mov
add
dec
js
mov
xchg
mov
pusha
sub
push
addb
aaa
mov
dec
push
or
mov
and
ficoml
out
mov
add
lahf
pop
jge
rolb
divps
loopne
aaa
dec
push
xchg
and
mov
push
fcmovne
out
mov
mov
pop
xlat
or
pusha
jno
adcl
push
outsb
popf
or
pusha
add
and
js
jp
add
stos
addb
sbb
popf
jp
add
call
sti
push
mov
mov
inc
lods
pusha
and
inc
and
scas
cmpsb
mov
lods
lea
mov
jp
dec
dec
aad
and
popa
mov
dec
and
add
mov
data16
subb
andb
shlb
mov
sbb
pushf
std
insl
xor
mov
xchg
inc
pop
repnz
int
ret
lods
andb
or
adc
sbb
xchg
lcallw
test
xor
adcb
inc
inc
fnstsw
adc
loopne
adc
adc
aaa
in
movsl
adcl
inc
pop
mov
fnsave
loopne
mov
xchg
sub
nop
fdiv
movsl
stos
mov
pop
addr16
pushw
mov
jmp
inc
add
inc
dec
add
pusha
xchg
xchg
mov
push
and
jp
enter
mov
pusha
add
inc
aas
mov
pusha
mov
stc
push
sti
mov
push
jno
jl
in
mov
test
and
pusha
rorb
add
adcl
inc
loopne
jbe
addb
ret
add
std
test
shl
or
cli
out
cmp
sub
mov
and
and
dec
push
jo
sbb
inc
mov
cmovno
mov
fsubs
mov
mov
and
xorb
cmp
stc
out
jmp
int
xor
cmp
pop
gs
movsl
cwtl
inc
jns
std
pushf
addr16
xlat
pop
orl
sbbb
jg
pop
push
xchg
push
lds
jmp
inc
sbb
fcmovbe
repnz
xchg
or
adc
xchg
pop
shlb
pusha
mov
pop
fdivs
pop
scas
dec
mov
or
sbb
push
dec
mov
push
mov
int3
gs
hlt
sub
dec
or
add
sarb
subb
addl
and
inc
add
call
inc
mov
and
xchg
or
add
out
or
pusha
in
lahf
inc
cmp
jle
sbb
in
imul
jle
shlb
xchg
repz
jno
daa
loopne
mov
aaa
pop
jle
shlb
dec
sub
push
mov
push
loopne
mov
addb
inc
stc
jne
add
dec
call
xchg
stos
inc
subb
shlb
xchg
xor
pop
cmp
dec
add
adc
add
sbb
sbb
andb
or
and
shl
leave
test
fwait
loop
adcl
and
rcrb
lahf
xor
pusha
loopne
xchg
adc
imul
add
pop
mov
imul
mov
add
daa
inc
movsl
push
in
lods
loopne
sbb
adc
cmpsb
pusha
add
mov
cmc
pop
imul
lahf
pop
adc
add
sarb
xor
sbb
lret
mov
xor
movsb
pusha
and
add
test
add
lret
sldt
and
test
leave
mov
mov
and
mov
mov
mov
adc
dec
dec
mov
pop
stos
loopne
insl
mov
jno
repnz
mov
add
and
xor
cmp
rol
sarl
inc
sarb
pusha
into
add
pusha
inc
in
flds
popf
adc
cltd
dec
push
loopne
and
cwtl
lahf
mov
ret
pop
inc
ret
testb
push
pop
jns
pop
xor
adc
sub
push
test
xchg
shl
add
mov
outsb
hlt
push
mov
and
pop
and
pop
clc
push
insl
sbb
je,pt
idiv
in
test
add
paddb
add
popf
push
push
dec
mov
xor
subl
jae
sub
xchg
and
push
mov
sub
enter
nop
shl
mov
mov
cld
into
cmc
pop
xor
inc
sub
mov
xchg
fxsave
push
xchg
cmp
mov
rclb
mov
jmp
scas
pushf
mov
test
and
stc
push
xchg
xor
leave
xor
jecxz
and
jne
xchg
dec
xor
add
shlb
insb
ret
add
loopne
add
add
sbb
cltd
into
daa
shlb
in
daa
jp
add
ljmp
inc
dec
addr16
pop
int
pusha
lret
loopne
mov
push
fsubrs
shlb
lret
mov
loop
inc
mov
jnp
xlat
ret
push
cmp
in
push
movl
and
lahf
inc
cmp
cmpsl
cmp
inc
sar
mov
cs
cmpb
or
loopne
ret
inc
add
mov
mov
ja
dec
jbe
ljmp
or
dec
outsl
add
adc
mov
hlt
sub
shlb
mov
lea
outsb
loopne
mov
bound
rolb
jg
test
inc
das
mov
popa
adc
mov
push
inc
sbb
pusha
loopne
leave
daa
or
adcb
adc
mov
aad
out
fmulp
xchg
shr
cltd
or
cltd
mov
subb
pusha
push
mov
mov
pop
xor
mov
js
sti
punpckhbw
sbb
pop
xchg
jnp
pop
enter
ljmp
sub
cmpsl
cli
pushf
ret
loopne
and
cmp
mov
or
jl
les
pusha
pusha
pop
add
and
rcl
and
jno
add
mov
fistps
hlt
xor
out
jg
push
ljmp
mov
sub
pusha
bound
xor
stos
mov
loop
sub
add
outsl
mov
stc
ja,pt
shlb
rolb
jb
les
mov
inc
fcoml
push
push
and
orl
loopne
xchg
aas
daa
repnz
int3
jge
mov
inc
aam
cmpsl
aam
test
xor
mov
call
and
inc
add
test
pusha
loopne
pushf
push
mov
lcall
pop
cmp
pop
adcl
add
rcrb
addr16
stc
jp
jp
testb
clc
test
pusha
insb
mov
inc
pusha
or
sbbb
inc
cmp
jmp
rorl
loopne
inc
push
out
fs
pusha
out
add
sbb
loopne
jle
mov
imul
pop
xchg
ljmp
idivl
rorl
std
lods
adc
insl
shlb
iret
and
push
pop
or
xchg
fwait
mov
movsb
rolb
test
add
inc
add
loope
pushf
nop
in
loopne
icebp
aam
loope
mov
orb
data16
push
pop
jle
loopne
daa
cmp
xor
mov
mov
push
out
ja
mov
lods
scas
addb
mov
inc
jmp
lock
pusha
add
dec
add
mov
mov
mov
sbb
xchg
shlb
ds
or
and
mov
shlb
dec
push
pusha
pusha
mov
mov
sub
inc
movb
push
stc
mov
and
dec
outsb
and
mov
fldl
add
inc
sbb
loope
scas
pusha
loopne
pop
cmp
mov
addb
or
in
fisubrs
cmpsl
lock
mov
inc
aas
mov
fcmovne
mov
push
xchg
sbb
mov
div
pop
mov
inc
rorb
and
movsl
lret
mov
jl
and
rolb
xchg
add
loopne
ret
fiadds
enter
pusha
mov
sbb
mov
clc
push
jl
sub
std
insl
adc
icebp
jp
and
mov
inc
and
pusha
adc
push
loop
loopne
inc
mov
jg
mov
jp
add
stos
add
stos
addb
movsl
fcompl
out
pop
pusha
stc
movq
or
mov
add
loopne
dec
jp
stos
add
sub
pusha
shrb
and
jg
and
loopne
push
iret
sub
loopne
inc
int
loopne
and
pusha
iret
xor
stos
cwtl
ds
xchg
pop
cmc
push
adc
jne
fs
insl
fs
or
fwait
lea
pusha
dec
int
push
xchg
mov
aam
mov
lea
loopne
dec
xor
add
jnp
data16
ljmp
and
and
clc
jecxz
add
or
shlb
test
test
ret
push
push
mov
icebp
enter
add
mov
mov
imull
xchg
push
jg
mov
loopne
fisttpl
pusha
and
and
or
inc
stos
loopne
into
adc
cmpsl
sub
and
js
addr16
rcl
xchg
and
test
inc
xor
push
loope
rclb
scas
add
test
in
andl
mov
mov
enter
std
shlb
sbb
mov
in
cli
dec
into
call
into
out
aas
ret
cmpsl
ljmp
sub
pop
push
fsubr
add
add
inc
xor
fs
and
pop
aaa
dec
dec
cld
mov
xor
or
rcrb
in
jecxz
lcall
shr
test
sbb
imul
fwait
sarb
fcoml
mov
mov
fcoms
and
lock
inc
jle
pusha
adc
ljmp
xchg
and
add
push
rolb
in
and
push
cmp
add
out
stc
add
test
cmp
lds
ror
sbb
mov
movl
ficoms
movsb
pusha
and
and
enter
mov
mov
sbb
pop
out
xchg
cmp
or
and
mov
sub
or
mov
nop
imul
xlat
lret
xor
repnz
jb
and
add
and
add
test
pusha
or
pusha
push
and
pushf
jle
push
js
decb
fs
jbe
adc
inc
mov
adc
and
and
shlb
mov
mov
add
cs
pusha
dec
jmp
aas
mov
ret
add
lock
sub
shlb
retw
jnp
add
dec
sub
inc
clc
fisttpl
or
pusha
sbb
xchg
cmpsb
inc
loopne
xchg
incl
or
das
sub
loopne
pusha
inc
lds
repz
loop
push
rolb
jo
xchg
sbb
inc
rcr
cwtl
repz
mov
lea
lcall
dec
nop
popf
fldt
push
scas
push
and
imul
mov
sub
mov
daa
loop
sti
andb
inc
and
les
pusha
pusha
in
cmp
inc
movsl
rolb
shr
pop
in
iret
enter
or
shl
dec
jmp
adc
stc
jne
movsl
mov
lods
and
mov
movsl
push
test
test
pop
add
lods
and
xor
jle
imul
dec
mov
jg
xchg
and
test
mov
sahf
sub
push
inc
and
pushf
mov
mov
mov
mov
andb
push
dec
mov
xor
shrl
into
stos
mov
out
iret
addb
mov
push
mov
add
push
push
pop
outsl
xor
ss
jle
je
stos
and
add
and
insb
sub
in
push
rorl
dec
push
lds
aam
lds
sbb
and
mov
loop
push
sbbl
xor
inc
cwtl
xor
test
inc
stos
add
xchg
int
and
arpl
xchg
cmpsb
loopne
and
rolb
and
pop
mov
iret
mov
add
inc
add
pusha
addr16
dec
mov
pusha
or
dec
je
dec
stos
insl
cmp
inc
mov
stos
outsl
fstps
mov
fiadds
and
loopne
insl
repz
repz
adc
pop
icebp
xor
fldl
sub
fnstcw
push
add
je
loopne
sub
sub
mov
sbb
push
orl
mov
dec
jecxz
repnz
std
push
mov
pop
sbb
movsb
loopne
int3
aam
xor
jbe
shlb
sbb
cmp
loopne
aaa
std
fsubl
push
add
pop
outsb
ficomps
and
cli
repnz
sti
dec
mov
in
aad
jmp
and
pop
stc
inc
lcall
sbb
aas
pop
inc
mov
and
mov
mov
jmp
inc
lds
fwait
mov
lret
fcmovnu
push
loopne
add
mov
stos
out
add
out
lret
ss
arpl
sub
subl
ret
cmp
mov
mov
bound
mov
aaa
jns
dec
xchg
outsl
loopne
jmp
pop
xchg
mull
mov
shr
dec
or
jp
adc
imul
test
scas
mov
repnz
in
sub
mov
sub
and
mov
xor
add
mov
dec
lds
addr16
dec
std
iret
and
and
pop
jp
jbe
cld
loop
imul
rolb
gs
mov
pusha
shlb
sahf
mov
dec
das
add
fsubl
mov
sarb
inc
sub
push
inc
loopne
pop
aam
int3
idivl
cli
in
iret
gs
pop
stc
pop
mov
scas
loopne
repz
xorb
pusha
xchg
stc
jnp
jg
mov
mov
pusha
imul
pushf
arpl
pop
xchg
inc
imul
loopne
sub
pop
jle
lods
lds
pop
cmc
cmp
inc
adcb
and
inc
push
fdivrs
adc
int3
fidivrs
and
repz
mov
inc
pop
xchg
and
and
loope
mov
sbb
insl
das
push
sbb
shl
jne
xor
cmp
inc
pop
loope
loopne
and
and
in
rolb
inc
addb
dec
loop
and
add
clc
neg
mov
and
loop
std
imul
mov
int3
jbe
and
mov
inc
inc
xor
mov
mov
pusha
pusha
pop
pop
test
cmpb
std
scas
mov
jo
ss
loopne
xchg
push
add
pusha
std
sbb
and
add
cmpsb
inc
add
adc
dec
inc
popa
cmp
idiv
fidivl
cmp
inc
jl
fists
outsl
and
add
shlb
jo
jecxz
pop
jp
mov
add
and
and
fildll
mov
inc
pop
je
cwtl
outsl
bound
hlt
fcompl
lcall
insb
les
push
incb
daa
or
mov
inc
loopne
scas
pushf
icebp
fstpl
mov
aas
cmpsb
inc
loopne
andb
rol
adc
adc
shrb
or
xor
imul
sbbl
test
mov
push
mov
lock
pusha
int
roll
fwait
cmp
pop
addr16
lea
mov
or
mov
fwait
sbb
push
sub
test
sar
lds
loopne
test
aad
sbb
loop
push
sbb
ret
mov
add
jb
jl
and
cli
and
pusha
pop
or
add
pop
in
sub
adc
mov
xchg
inc
inc
xchg
repnz
inc
mov
subb
call
repnz
and
add
add
pusha
cmpb
push
rolb
mov
iret
cmp
ss
xchg
repnz
pop
imul
add
jb
adc
adcb
aam
loopne
inc
jmp
or
sbb
jno
jns
push
cmpsb
rolb
imulb
pop
xor
cmp
sbb
inc
rdtsc
pop
jb
fwait
lods
mov
sti
sbb
sti
or
and
add
loopne
and
adc
faddp
xchg
mov
ljmp
cmp
mov
inc
ret
inc
clc
dec
mov
xor
add
jo
sbb
add
add
andb
adc
incl
cltd
test
fwait
lods
shlb
loopne
fcompl
mov
add
cmpsb
and
adc
das
cmc
mov
pop
xchg
jg
movsl
mov
push
lcall
arpl
out
mov
call
adc
sub
sub
mov
jnp
cmp
andb
movhps
andb
cs
push
andb
and
out
push
and
dec
es
cmpsl
sbb
mov
ret
jle
arpl
ljmp
lds
push
movsb
mov
mov
add
mov
mov
aaa
and
xor
mov
mov
or
subb
pop
add
sbb
sbb
push
cmp
andb
insl
mov
loopne
rorl
pushw
shlb
pop
jle
pop
dec
std
mov
mov
cmp
jnp
and
loopne,pn
lret
xor
jne
pusha
aad
xchg
push
fld
mov
enter
mov
icebp
jmp
push
mov
cmc
mov
inc
loopne
cld
int
lcall
and
jo
add
xchg
arpl
addr16
sbb
xor
testl
popf
push
les
and
fsubrl
add
pop
cmp
loopne
jo
and
in
pusha
and
lret
call
scas
addb
mov
fiadds
pusha
and
popaw
fsubrs
mov
sti
adc
adc
mov
fcmovnbe
xor
mov
inc
xchg
pop
jo
inc
add
and
xor
mov
pushl
and
xchg
mov
test
jmp
out
dec
sbbl
adc
pop
or
bound
mov
cwtl
mov
push
or
rclb
xchg
lret
rcrb
inc
lods
and
mov
pusha
and
imul
test
inc
in
mov
add
mov
ss
dec
mov
jp
movsl
call
inc
loopne
mov
mov
bswap
lock
pusha
rclb
fimull
jge
jne
hlt
sbb
cs
mov
jp
addb
push
inc
sarb
loopne
push
push
cld
ret
cmp
and
inc
sahf
adc
sub
push
xchg
nop
ds
adc
add
pusha
loopne
mov
es
mov
pop
arpl
test
mov
xchg
stos
mov
xchg
movsl
lods
mov
pusha
and
sbb
cmpsb
addb
lret
rcr
xchg
movsl
cmp
mov
xchg
adc
dec
gs
mov
dec
sbb
xchg
dec
lahf
push
addb
jle
aaa
xorl
shlb
xor
jmp
jb
cs
dec
inc
xor
add
adc
movsl
inc
shl
xchg
fdivrl
mov
test
testb
ret
xor
loop
and
lods
inc
mov
and
inc
add
fidivs
nop
sub
pusha
pusha
push
aaa
es
push
inc
loopne
inc
mov
xor
sbb
pop
or
loopne
cmp
cmp
xchg
jb
push
adc
xchg
inc
mov
rcr
push
call
or
jae
inc
repnz
and
sub
loopne
gs
repz
sahf
sbb
shlb
xchg
xor
mov
push
push
decl
pusha
orb
mov
pusha
pusha
xor
out
jg
add
loop
scas
pusha
mov
push
shlb
rcrl
sti
xchg
movsb
and
mov
pop
call
mov
and
mov
pushf
jae
fistl
js
clc
shr
add
loopne
pop
loopne
loopne,pn
enter
imul
jl
cltd
out
add
adc
cmc
sti
je
das
mov
cmp
ret
xor
leave
insl
clc
sub
loopne
pusha
loopne
mov
jnp
lret
xchg
daa
lea
popw
sbb
add
adc
xchg
and
in
iret
jbe
outsb
insb
and
icebp
fs
jle
add
push
xchg
cmp
idiv
adc
vmread
jge
jg
mov
mov
imul
adc
icebp
mov
in
dec
push
add
xchg
cli
popa
cli
or
add
out
repz
mov
inc
imul
xchg
inc
andl
lret
adc
cmp
pop
xchg
or
shrb
xor
cmovg
mov
mov
je
xchg
jo
xchg
dec
mov
dec
es
xor
gs
add
outsl
xadd
aam
sti
pop
xchg
xor
adc
rolb
mov
mov
rcrb
arpl
and
xor
out
mov
icebp
push
movb
rclb
imul
adc
lods
xchg
notb
mov
enter
shlb
popa
gs
loopne,pn
dec
filds
xor
fsubl
pusha
rorb
sub
inc
xchg
sub
loopne
int
adc
mov
mov
lock
mov
add
inc
dec
inc
clc
mov
movsl
push
add
rcl
xor
notl
mov
call
pop
pop
pop
daa
cld
rol
adc
sub
push
cli
jl
jmp
cmc
mov
sahf
mov
subb
std
andb
dec
icebp
add
jmp
add
shlb
and
movsb
add
mov
stos
pusha
and
popf
sbb
fdiv
data16
fs
mov
imul
shl
test
mov
jg
inc
mov
push
stc
jbe
xlat
lcall
xchg
mov
andb
mov
xchg
lods
loop
inc
xorb
inc
and
or
add
jo
out
and
out
mov
lcall
or
loopne
pop
sub
loopne
lret
out
out
cmp
lock
cmp
xchg
jecxz
inc
dec
push
and
loopne
sub
pusha
ss
test
loopne
push
pusha
add
mov
cmp
cmp
and
inc
mov
and
add
mov
jb
in
pop
rol
bswap
xchg
rcrb
out
pop
sub
and
sbb
lock
jne
mov
popa
push
pusha
inc
rcr
sti
ja
insl
popa
mov
scas
andb
shlb
popf
daa
xchg
sub
pusha
clc
sub
push
aad
xchg
dec
mov
cltd
inc
cmovg
mov
add
mov
adc
ret
add
loope
mov
mov
mov
lock
cmp
cmp
add
dec
adc
das
mov
lock
out
or
inc
jne
iret
cwtl
mov
add
mov
pusha
mov
push
ljmp
fcoms
inc
jmp
jbe
or
popf
add
push
jo
sbb
iret
aas
and
mov
lret
and
inc
mov
outsb
es
mov
push
jo
test
xlat
dec
arpl
loopne
lcall
adc
hlt
adc
in
pop
jbe
push
pop
inc
mov
sub
mov
mov
addb
dec
shlb
add
pusha
aaa
pusha
mov
mov
out
cli
or
fnstenv
dec
jno
pop
in
aaa
adc
jne
rcr
jmp
addl
push
iret
inc
sbb
xor
mov
push
arpl
fnstenv
test
jle
loopne
call
adc
cmp
cmpsl
les
sbb
sbb
icebp
mov
xchg
add
inc
and
xor
fwait
dec
xchg
outsl
mov
jnp
mov
rolb
and
outsl
cmp
sub
loopne
adc
jmp
and
loopne
inc
cli
dec
mov
ds
or
adc
and
inc
repnz
es
push
mov
mov
cmp
add
shl
dec
lahf
sarb
insl
dec
cltd
shlb
andb
insl
mov
and
and
rcrb
add
pushf
mov
xchg
or
mov
and
fcmovb
in
addb
add
insb
sbb
jg
rolb
or
add
jle
and
adc
or
inc
sub
mov
addb
mov
in
jg
rolb
cltd
sbb
fidivrs
jl
stos
lods
addb
push
or
sbb
rolb
add
mov
lahf
aas
fwait
push
test
inc
adc
enter
or
mov
and
mov
cmp
loopne
sub
and
insb
push
jnp
inc
mov
scas
jb
sbb
ret
pop
inc
jae
lret
and
fidivl
lret
mov
ret
shlb
and
pusha
cmpsb
shlb
fcmovbe
ja
sbbl
popa
aad
lret
enter
add
and
iret
cs
push
out
jo
sub
or
cli
dec
shr
test
pusha
and
pusha
ret
addb
push
dec
into
loope
mov
push
shlb
and
pop
jo
std
dec
fwait
in
mov
ja
test
mov
mov
sub
repnz
mov
loopne
inc
addb
mov
inc
mov
je
xor
loopne
nop
roll
fucom
cmp
and
or
pusha
shll
cmpsb
loopne
mov
std
add
push
andb
out
out
sub
inc
subl
scas
loopne
loopw
push
and
mov
out
sbb
mov
and
inc
ljmp
jbe
lret
xor
lret
fdivl
cmp
adc
mov
inc
ret
jle
es
adc
ljmp
loopne
jp
insl
andb
mov
add
loopne
cmp
cwtl
cmpsb
andb
mov
inc
imul
lret
and
xchg
ficomps
add
sahf
add
xchg
xchg
popa
rorb
addr16
fs
or
mov
adc
jle
stc
aas
lahf
push
mov
jl
aam
popf
js
xchg
lds
pusha
addb
popa
pop
movsb
shl
jecxz
xchg
mov
pushf
xor
mov
lcall
push
inc
pushf
mov
pusha
xlat
mov
andb
clc
jl
mov
and
pop
mov
popa
cmp
loopne
shrb
sbb
sub
lods
mov
cmp
insl
mov
xchg
sub
add
xor
and
mov
pusha
push
mov
push
xchg
pushf
pop
or
cwtl
adc
add
mov
or
xchg
hlt
mov
dec
pop
stos
sub
sub
imul
cmpsl
xchg
pusha
subl
arpl
not
inc
xlat
mov
out
mov
or
dec
fldenv
shlb
stos
inc
pusha
push
stos
add
ret
inc
xorb
inc
test
les
and
push
cmp
ret
test
inc
xchg
dec
push
repz
sub
addl
loopne
xchg
test
add
add
andb
inc
push
mov
inc
dec
sub
mov
jae
fdivrp
adc
inc
inc
mov
int3
cmp
xchg
sbb
mov
pop
add
enter
repnz
xchg
cmpsl
test
pop
adc
inc
add
push
cs
and
enter
push
jg
js
push
xchg
loope
inc
mov
sahf
movsl
mov
jecxz
lcall
sub
push
mov
outsb
lret
push
lea
xor
adc
insl
popf
xchg
cmp
nop
fisubrl
and
jnp
loopne
mov
sbb
and
mov
fisubrs
mov
adc
jmp
mov
std
fdiv
aas
pop
sbb
fldenv
dec
sub
sub
cmp
and
xorb
mov
rolb
sub
repnz
out
pop
in
inc
and
cmpb
pop
inc
stc
jnp
mov
shll
xor
stos
inc
lret
test
inc
adc
inc
pusha
and
sbb
iret
push
imul
inc
pop
mov
mov
arpl
pop
out
xchg
ljmp
mov
mov
adcb
pop
lea
inc
mov
rcl
or
test
cs
clc
out
mov
rclb
out
cmp
lock
cmp
pusha
and
sub
and
out
xchg
jnp
gs
push
nop
es
rorb
mov
into
jecxz
cmpl
xor
dec
fdiv
mov
fs
pop
leave
sbb
in
fistps
sti
adc
loopne
jae
adc
add
dec
fadds
sub
jne
mov
addb
sbb
fdivrl
sub
pushf
cltd
xlat
lcall
mov
loopne
mov
addb
xor
pusha
mov
sub
in
jmp
in
push
xchg
sahf
xor
out
mov
repz
add
call
pusha
dec
ret
push
loop
in
sbb
subb
xchg
add
orb
push
pop
push
fstl
push
jae
jo
xor
lds
in
xor
inc
shlb
sarl
arpl
pusha
pusha
and
add
fcmovnbe
push
out
mov
mov
inc
jne
jl
sbb
fs
fs
ljmp
mov
shlb
rolb
and
push
push
lods
loopne
sti
cmp
cmc
insb
and
stc
jo
mov
call
dec
loopne
pop
xlat
loop
jae
push
jbe
push
cmp
mov
mov
pusha
push
andb
cmp
into
adc
inc
push
lcall
std
mov
and
fwait
dec
cmp
pop
xchg
add
aam
pop
dec
outsl
inc
adc
loopne
mov
fsubrs
pusha
inc
and
inc
rolb
loopne
inc
fwait
outsl
popa
lret
fidivl
jno
push
add
inc
mov
adc
insl
push
fistpll
test
cmp
pop
pop
mov
outsl
xor
rclb
das
add
xor
lea
shlb
pusha
inc
shlb
das
push
mov
add
jmp
or
add
pusha
shrb
pusha
mov
fsubr
mov
adc
jmp
dec
sti
inc
cmpsl
mov
movsl
sti
leave
lock
inc
aad
and
or
mov
loope
in
pop
and
addb
and
add
xor
test
xorb
sub
add
cmpsb
addb
push
lret
jp
insl
xor
cmp
xchg
leave
cmp
clc
imul
popa
sbb
add
ror
mov
into
cmp
inc
fs
addl
fcoml
jp
stc
sbb
ds
adcl
rolb
add
add
test
inc
pusha
inc
xchg
xor
fsubrs
xchg
dec
sbb
dec
leave
es
mov
addb
cmp
mov
rcll
lahf
xor
adc
mov
ficompl
shlb
mov
inc
xlat
jne
cmp
push
xchg
es
add
popf
sahf
xchg
mov
adc
xchg
sbb
scas
repz
dec
shll
cltd
mov
out
fdivrs
add
add
mov
insl
inc
and
cmp
stc
xchg
imul
mov
mov
pusha
sarb
xor
stos
mov
and
jp
fisttps
jno
inc
inc
bound
das
jp
mov
scas
xchg
mov
mov
inc
aaa
and
insb
push
push
and
add
adc
xor
cmc
jge
stos
into
push
sti
icebp
push
rolb
out
and
add
ljmp
or
std
movlps
mov
nop
add
pop
enter
cmc
push
mov
sbb
ja
or
xor
shlb
repnz
sub
rclb
add
pusha
mov
scas
addb
sbb
pop
inc
aam
inc
adc
data16
hlt
fidivs
or
or
inc
push
ss
lock
push
in
xchg
push
test
inc
shll
mov
adc
mov
dec
out
sbb
and
lods
push
mov
gs
mov
mov
inc
push
inc
stos
test
inc
and
decl
daa
addr16
scas
fisubl
add
adc
out
inc
adc
call
addr16
inc
mov
mov
insl
mov
test
shrl
and
rcrb
bound
pusha
and
mov
push
mov
and
shlb
push
iret
xchg
hlt
push
test
sbb
jge
xor
cli
aad
sbb
add
int
inc
loopne
shll
rcll
inc
jne
jnp
dec
sbb
daa
hlt
push
int
jg
and
iret
repz
lds
inc
addb
andb
pop
imul
jp
add
repz
and
andb
pusha
call
test
inc
adc
and
xchg
test
or
pop
int
cmp
jo
pop
sub
add
loope
jno
pop
bound
and
pop
in
jne
xchg
fs
add
mov
addb
mov
lret
stos
push
aaa
and
ret
loopne
inc
mov
xchg
mov
pop
sbb
stos
pusha
subb
out
cmp
sub
adcb
cli
push
rclb
cmp
jb
push
arpl
sarb
pop
cmp
and
jnp
dec
xchg
lds
jl
sbb
lcall
movsb
pusha
rorb
test
mov
in
push
jge
icebp
les
iret
frstor
sbbb
and
fisubs
inc
and
rorl
add
fnstenv
jge
movsl
add
rclb
xlat
push
add
pusha
fcmovnb
js
ljmp
jecxz
xor
scas
cmp
lahf
sbb
es
shl
lods
mov
into
mov
cmp
psrlq
pop
mov
mov
cmp
loopne
inc
iret
inc
out
fs
mov
repnz
jo
in
cmp
xchg
mov
xor
lods
cmp
pop
pop
notb
nop
pop
cmpsb
addb
and
sub
and
rol
mov
inc
out
mov
fwait
out
adc
and
mov
loopne
inc
cmc
jbe
fistpll
inc
pusha
or
and
stc
fwait
mov
jns
test
idiv
mov
sub
sbb
push
xchg
pop
icebp
fwait
xchg
pop
pop
loopne
mov
fisubrl
xlat
sahf
insl
fildl
inc
pusha
or
loopne
fcompl
loopne
cmp
inc
loope
aas
sub
jae
fdivs
cmpsl
cli
sbb
mov
adc
data16
and
push
push
xchg
shlb
xchg
sbb
xchg
addb
push
cmp
mov
andb
lods
test
pushf
mov
jp
add
cmpsl
xchg
xchg
sbb
mov
push
cmp
push
fwait
mov
add
mov
xor
flds
inc
pusha
rolb
add
movsl
das
imul
mov
shll
and
jecxz
jno
stos
mov
loop
negb
mov
aad
pusha
and
sub
pusha
icebp
cltd
cmp
dec
addr16
adc
fcoms
pop
decb
pusha
or
adc
imul
push
mov
jge
imul
push
roll
pusha
addb
pusha
jo
xor
inc
mov
ljmp
pusha
add
scas
inc
add
add
pushf
jnp
test
pop
das
jae
imul
shlb
add
addb
add
cmp
xchg
cwtl
mov
movsb
and
adc
inc
jb
adc
mov
add
das
cld
notb
or
inc
and
add
lods
and
and
xchg
inc
je
inc
loopne
mov
arpl
and
aad
mov
lahf
aas
fnsave
fwait
gs
xor
cmp
dec
cli
jns
push
xchg
rorl
aaa
pop
add
stos
add
add
mov
icebp
imul
adc
movsb
loopne
cmp
loopne
sti
call
mov
dec
dec
arpl
imul
jnp
sub
pop
fiaddl
mov
mov
cltd
xor
pusha
inc
xor
sbb
ret
mov
sub
add
mov
frstor
mov
pop
push
shrl
orl
lock
std
adc
addb
or
lods
mov
jnp
xchg
ret
mov
and
shlb
leave
push
lds
xchg
jbe
pop
int3
out
int
out
pop
sti
aad
mov
out
out
shrl
lods
loopne
rolb
adc
pop
or
inc
pop
xchg
shlb
or
mov
mov
add
and
movsb
inc
mov
mov
leave
repz
pop
loop
test
repnz
xchg
sub
and
pusha
xor
out
gs
mov
xchg
mov
cs
mov
sahf
sbb
outsl
xor
add
add
pusha
inc
xchg
pop
add
in
ja
add
add
jp
xchg
rcr
shlb
inc
test
inc
lea
addl
push
pop
jno
and
pop
add
and
inc
adc
jle
jecxz
sar
insl
lahf
xchg
push
or
loopne
push
xlat
mov
sti
mov
test
inc
or
mov
mov
loopne
mov
add
mov
inc
std
and
xorb
rcrb
add
xchg
cmc
mov
and
fs
xchg
mov
sahf
adc
push
jo
js
cltd
push
and
xchg
mov
adc
xor
dec
dec
popf
stos
rcl
mov
add
push
and
push
mov
jmp
inc
mov
or
and
adc
clc
and
sbb
cmp
mov
add
sub
lahf
jb
jb
lret
test
adc
pusha
push
mov
out
popa
add
pusha
and
or
jnp
addb
inc
shr
imul
xchg
ret
lds
inc
mov
int3
in
test
pusha
mov
and
loopne
ds
inc
repz
inc
mov
pusha
mov
cmp
inc
rcrb
cwtl
aas
and
ficompl
rorb
jl
outsl
int
sti
mov
inc
and
inc
adc
stos
or
subb
and
loopne
and
add
and
out
and
mov
notl
filds
loopne
xchg
std
pop
jno
add
loopne
hlt
ljmp
add
dec
xchg
outsl
fildl
and
sbb
add
push
pop
add
lcall
mov
or
enter
lock
xor
adc
insl
test
andb
shr
mov
imul
mov
loopne
add
jno
fdivp
filds
and
cmp
loopne
adc
inc
aas
int3
arpl
cmpb
xchg
mov
xor
push
mov
loopne
cmc
xchg
push
xchg
sub
mov
ficompl
add
stc
jns
lds
loopne
pop
lods
inc
pusha
jo
stos
inc
jno
pop
andb
xchg
pop
xor
add
or
shl
mov
cmp
add
nop
mov
push
ja
les
and
cmp
test
add
into
lods
int
add
cmp
and
sbb
pop
xchg
sub
loopne
call
icebp
fnsave
pop
mov
jle
int
mov
and
inc
and
mov
lods
loopne
jbe
sub
and
dec
and
add
gs
jge
lret
mov
cs
pushf
jae
jmp
mov
das
fdivrl
cli
jae
in
daa
sbb
dec
xchg
test
loopne
rcr
dec
mov
lds
adc
stos
cs
and
mov
mov
and
and
cltd
xor
shlb
mov
jle
loopne
cli
mov
mov
test
inc
nop
aad
sub
movsl
out
aas
out
jmp
scas
test
and
stc
mov
int3
arpl
jne
mov
out
mov
fldenv
rolb
mov
sub
ss
push
and
popa
jnp
adc
call
int
xchg
add
add
loopne
movsl
mov
int3
cmp
inc
pusha
mov
subb
leave
gs
mov
loopne
out
test
pusha
lcall
mov
in
inc
add
js
mov
imul
xlat
push
sbb
scas
mov
rclb
shl
ret
inc
fisubrs
ljmp
inc
sbb
scas
insl
fistpl
push
cli
sub
pusha
stc
mov
mov
adc
into
and
sbb
or
sub
sbbb
scas
rolb
addb
push
call
popf
ja
jle
sub
sub
mov
mov
lret
jbe
cvtps2pi
jne
pusha
add
and
mov
shlb
cld
fldt
clc
ss
pop
pop
addb
inc
inc
mov
andb
xchg
pop
jno
push
and
out
cmp
dec
sbb
pop
cmc
xchg
xchg
iret
jmp
cmp
gs
jns
or
cmp
mov
jecxz
shlb
pop
pop
out
out
xlat
mov
fmulp
inc
fs
stos
shlb
xchg
and
and
dec
inc
push
pop
sub
das
push
ret
xchg
mov
fistpl
push
add
into
mov
sub
and
loope
adc
mov
lcall
pop
dec
clc
ficomps
mov
bound
fwait
aad
test
inc
inc
add
xor
inc
and
inc
icebp
sub
or
or
add
push
cmpsb
pusha
mov
and
pusha
jp
loopne
pop
sub
pushf
fisttpl
shlb
pop
push
mov
insb
inc
mov
fwait
and
pop
jle
push
aaa
jne
test
mov
addr16
insl
int
jl
mov
roll
punpcklwd
sbb
ss
jnp
repnz
call
js
adc
sarb
jg
xchg
cmp
stos
add
addb
pusha
and
orl
mov
cld
adc
pusha
or
inc
push
and
add
add
pop
mov
aam
loopne
shrl
and
loopne
mov
push
push
push
imul
ss
and
filds
and
inc
bound
or
add
cmp
cmp
pop
and
lret
pusha
inc
mov
inc
and
arpl
mov
fisttpll
mov
addb
sti
or
sbb
mov
jb
mov
inc
rcrb
dec
xchg
xor
loopne
sbb
ror
adc
in
es
loopne
out
cmpsb
add
push
xchg
mov
inc
outsl
add
xchg
test
mov
xlat
aad
pusha
pusha
popa
call
dec
in
imul
addb
or
xor
shlb
cmp
addb
leave
jge
jns
arpl
xor
scas
add
inc
test
dec
icebp
inc
popa
int
and
mov
jp
test
lahf
xlat
and
js
out
push
mov
fsubs
mov
outsl
iret
mov
jecxz
jle
push
cli
lock
add
arpl
mov
mov
inc
cmp
cmpsb
loopne
loopne
insl
andb
and
in
test
imull
imul
aam
addr16
outsb
sbb
add
rorb
andb
andb
adc
icebp
xor
mov
xchg
add
pusha
and
mov
inc
loop
mov
lret
xor
rcrb
pop
cli
pusha
lret
xchg
mov
inc
adcb
mov
addb
add
mov
and
and
inc
stos
mov
inc
mov
andb
ds
dec
ficomps
scas
mov
jp
sbb
out
rcl
pusha
add
cmp
inc
push
addr16
addr16
call
sbb
rol
aad
mov
fidivs
call
xor
jle
jg
popa
push
mov
sti
adc
and
mov
mov
inc
and
insb
xor
sbb
mov
ljmp
addb
rcr
test
andb
and
int3
or
mov
and
clc
and
std
sti
jae
and
inc
cmp
jno
pusha
add
fcmove
xor
adc
mov
shlb
popf
aam
lods
jg
stos
and
repnz
jg
insl
pop
sar
xlat
ret
clc
in
jecxz
loopne
mov
push
push
add
addb
aas
jp
mov
fistps
insb
pushf
aas
cmp
addb
xchg
or
xorb
out
shlb
sub
pusha
arpl
mov
mov
jp
aaa
jns
or
pusha
adc
pop
add
cwtl
push
dec
test
imul
adc
push
mov
in
fadd
push
enter
sbbb
jp
dec
add
loopne
lahf
out
enter
adcb
mov
sbb
loopne
sbb
jae
mov
and
xor
jmp
inc
shlb
insl
mov
mov
and
xor
mov
jno
lods
pusha
and
inc
and
mov
cld
inc
sbb
sbb
cmp
jg
mov
enter
popf
mov
sbb
mov
andb
dec
inc
or
pusha
aas
int3
pop
fldl
push
inc
rorb
lea
add
sbb
lds
adc
sub
jge
pushf
fldcw
cmc
ret
test
inc
and
pusha
test
mov
jne
and
lcall
cld
clc
xchg
pop
into
or
pop
sbb
test
pusha
shlb
cmpl
push
addb
mov
inc
data16
sbb
and
pop
adc
cmc
mov
sahf
dec
add
loopne
stos
xor
test
rcrb
aaa
lahf
sbb
or
sub
clc
jne
sti
inc
cs
andb
iret
ret
xchg
je
nop
mov
jb
pusha
mov
inc
jns
add
and
sub
inc
insl
test
mov
mov
pusha
fwait
inc
pushf
push
lock
cmp
rorl
add
and
loopne
pop
xor
out
fs
in
cmp
test
addb
and
mov
and
aam
aam
pop
fnstcw
ja
mov
cltd
addb
lods
dec
push
cmc
pop
idivb
in
jno
jno
scas
loopne
cmp
jne
nop
adc
icebp
test
mov
fs
outsl
push
pop
pop
pop
jle
adc
mov
mov
je
dec
mov
scas
mov
stos
in
sbb
and
mov
cmp
and
inc
in
cmpl
aaa
dec
outsb
add
lock
mov
lahf
xor
push
out
adc
inc
pop
push
inc
and
sub
adc
sub
sbb
stos
or
and
dec
movsb
addb
insl
jnp
call
and
mov
shrb
incb
add
adc
mov
push
xchg
shlb
xor
and
fidivrl
and
add
cld
sub
pop
pop
mov
ja
test
icebp
cmp
adc
cltd
mov
cmp
fistpll
daa
in
jno
std
pop
movsb
loopne
lret
loopne
repz
enter
jecxz
cmpsb
and
sub
pop
xor
push
jbe
mov
pop
punpckhbw
sub
subb
sub
mov
pusha
mov
inc
mov
loopne
jne
xor
stos
mov
jecxz
jb
jbe
sbb
push
iret
ret
inc
mov
pusha
add
iret
sbb
push
pusha
and
xchg
xchg
sub
loopne
lods
aad
fstpt
push
cs
loopne
xchg
ror
lock
jle
lock
aaa
sub
loopne
mov
setg
repnz
or
insl
xchg
dec
jecxz
adc
loope
jmp
mov
mov
into
mov
int
stc
insb
nop
sbb
mov
mov
inc
cwtl
cli
jle
pusha
inc
fwait
mov
hlt
mov
jne
or
loopne
inc
into
dec
test
std
add
rorb
int3
test
shlb
add
movsb
add
lods
mov
cmpsl
xchg
jmp
inc
ret
lods
lret
subl
pop
scas
pop
ret
fwait
push
insb
xlat
lds
add
push
dec
cmp
addb
loopne
cmp
sub
addb
inc
rorb
rolb
mov
sub
mov
cmp
movsb
and
loopne,pn
in
mov
lock
jne
cwtl
xor
xchg
and
imul
setg
andnps
test
push
loopne
cmpsb
andb
stc
ret
mov
xchg
rcrb
les
mov
and
addb
sbb
pop
mulb
loop
push
shlb
inc
inc
jo
inc
cmpsl
lods
mov
outsb
mov
in
or
sub
pusha
push
out
inc
jnp
cmp
mov
xor
pusha
cmpb
aam
sbb
enter
add
aad
addl
cli
adc
sbb
xchg
xchg
adc
dec
clc
popf
arpl
loopne
lahf
jns
xor
pusha
cmpb
mov
sub
pop
les
lret
cmp
mov
push
or
push
cmp
outsb
mov
rorb
or
inc
push
dec
jo
cmp
lods
lea
imul
pushf
cmpsl
xor
add
sbb
fsub
dec
jno
je
loopne
jbe
jns
xchg
jg
fnstcw
cmp
or
inc
fsubrp
inc
xor
and
enter
fadd
das
inc
add
mov
mov
add
and
pusha
mov
add
and
mov
outsb
dec
stos
pusha
pop
into
xor
aam
add
mov
cwtl
adc
testl
and
dec
cmpsb
mov
and
xchg
mov
mov
mov
mov
sbb
fnstcw
shlb
cmp
xor
mov
arpl
loopne
inc
movsl
sbb
and
mov
sub
adc
icebp
push
push
inc
add
xchg
leave
xor
nop
jmp
movsb
and
xor
out
mov
and
add
mov
mov
je
addb
loopne
adc
adcl
mov
ljmp
push
lods
andb
scas
pusha
and
jp
cmp
sub
mov
lods
pusha
add
add
orb
sub
fcmovbe
push
rol
or
mov
sbb
ljmp
cmp
jmp
insb
repnz
pop
sarb
pushl
dec
adc
ret
mov
pusha
and
add
sti
loop
dec
lea
sbb
push
xor
dec
mov
jo
rol
bound
addb
sub
cmpb
xchg
fsubs
pop
add
gs
lret
jmp
daa
and
or
pusha
jb
clc
adc
repz
pushf
add
dec
fnstenv
fisubl
scas
xor
pusha
add
inc
push
rolb
sbb
xor
and
pusha
xchg
sbb
pop
jl
pop
xor
pusha
std
aas
jg
pusha
mov
push
xchg
or
jg
addl
cmp
les
add
repnz
sahf
pop
pop
push
shlb
sub
loopne
xchg
mov
push
out
add
push
lods
or
jbe
test
xorb
dec
dec
lret
jg
clc
push
dec
mov
incb
lahf
in
lea
loopne
std
mov
sub
loopne
cltd
cli
mov
sub
mov
or
inc
call
add
sub
and
rorl
mov
xor
ljmp
mov
rcrl
push
mov
pusha
and
dec
mov
ret
push
push
sub
xchg
sub
out
mov
dec
call
loopne
int3
or
dec
ficomps
andb
mov
pop
cmp
inc
and
push
sub
add
pop
inc
loopne
pusha
andb
pusha
addb
cmpb
mov
pop
lahf
jmp
push
pop
shrb
push
and
icebp
stos
ffree
and
out
sbb
mov
js
pop
mov
inc
inc
ret
out
out
push
movsl
mov
popa
jne
sbb
jae
inc
xor
not
aaa
inc
mov
ja
cmp
mov
js
push
insb
push
xor
lret
sti
mov
pop
dec
jbe
add
pusha
jle
pushf
outsb
xchg
jo
ja
loop
clc
or
and
bts
and
mov
ret
mov
xchg
pusha
shll
xchg
and
and
sti
in
adc
cs
and
js
test
and
loopne
inc
cmp
mov
mov
loopne
aaa
iret
pop
mov
andb
loopne
ss
ljmp
out
gs
and
mov
dec
dec
lret
inc
inc
jae
hlt
add
pusha
mov
inc
stc
inc
jecxz
jns
add
pushf
sbb
mov
and
and
jg
mov
dec
xchg
outsl
push
or
pop
jmp
xchg
imul
hlt
inc
aaa
shll
and
inc
sarb
in
inc
sarb
hlt
aas
sub
mov
int3
mov
lea
sbb
inc
insl
out
mov
push
test
and
dec
inc
xchg
or
jno
outsb
aaa
xor
cmpsl
lods
shlb
add
push
pusha
or
inc
inc
scas
rcrb
sarl
das
or
add
lahf
jg
add
andb
push
cmc
xor
dec
movsb
inc
pusha
jmp
mov
push
out
push
dec
mov
mov
and
inc
jb
xlat
jg
iret
in
adc
and
repnz
add
and
data16
loopne
jne
stos
add
dec
les
pushf
push
lea
loopne
hlt
stos
mov
test
das
cmp
xor
xchg
xor
pop
subl
in
mov
jns
shlb
mov
andb
jb
or
bound
inc
pop
aad
sbb
pushf
mov
add
mov
sbb
add
mov
push
mov
add
xchg
cmp
lods
and
mov
in
insb
lock
sarl
cmp
pusha
rorb
mov
push
das
dec
pop
cmp
in
ficoml
xchg
icebp
out
jnp
mov
outsb
out
mov
mov
mov
cmp
scas
mov
enter
fiadds
in
lods
pusha
loopne
inc
insb
jmp
movsl
cmp
adc
cwtl
call
pusha
add
loopne
idivb
push
jns
inc
dec
sbb
cmp
mov
pop
nop
frstpm(287
ret
adc
and
dec
pop
jle
xchg
adc
sub
rcll
or
sarb
dec
sbb
add
std
cmp
shlb
andb
mov
xor
mov
jl
xchg
iret
out
push
inc
loopne
xchg
pop
mov
shrl
and
pop
jns
jo
mov
popf
lods
mov
mov
add
pusha
xchg
adc
push
add
jecxz
addb
xchg
jns
stc
jecxz
aad
push
and
pop
xlat
xchg
out
aas
sar
dec
cmp
dec
jno
pop
sti
mov
xchg
shl
dec
jmp
jns
and
aas
not
jle
add
fs
andb
push
rorl
push
mov
cmp
mov
xorb
jl
dec
push
loop
or
daa
or
rcrb
pop
aam
push
and
pop
clc
std
loopne,pn
mov
aam
jle
ret
pushf
xchg
cmp
or
clc
fs
int3
jle,pt
mov
repnz
jge
loopne
sarb
das
cltd
bnd
xor
in
addb
sbb
mov
rorb
inc
push
ficompl
add
pop
and
mov
jle
and
pop
movsb
shlb
call
loope
cmpsb
loopne
ret
dec
and
inc
push
jo
cmp
pop
mov
out
shll
jb
add
adc
dec
add
in
push
imul
data16
sub
inc
test
dec
mov
negb
adcl
shrb
sbb
inc
loop
cli
aas
negb
loope
shlb
rolb
xchg
add
dec
add
dec
jb
shrl
mov
add
mov
rorl
and
and
sub
mov
xchg
xchg
pop
cld
pop
jbe
dec
cmpsb
inc
mov
dec
andb
stos
and
addb
and
mov
and
mov
lods
shlb
fwait
enter
mov
cmc
or
call
enter
cmc
jne
arpl
mov
inc
loopne
shlb
push
rolb
or
jb
adc
int3
add
mov
dec
lds
lods
add
push
mov
ja
inc
cli
jno
ja
jl
test
and
xchg
arpl
xchg
pop
outsl
sbb
jno
add
add
jp
movb
mov
repnz
outsl
pushf
enter
cli
ret
add
add
sub
and
sub
inc
in
mov
jb
test
and
test
loopne
lds
nop
std
xorl
fpatan
jns
sbb
and
notb
fwait
jl
ljmp
mov
je
mov
cli
lods
inc
add
mov
jo
pop
andb
mov
and
cmp
call
popf
push
test
popf
mov
mov
sbb
xlat
push
es
jno
ret
loopne
jo
and
pop
call
rcl
inc
and
movsb
add
lea
pusha
inc
xchg
push
inc
loopne
add
add
loopne
pop
andb
pop
sub
shl
fisttpll
rcrb
add
rolb
pushf
and
shrb
xchg
xchg
ljmp
or
rclb
sub
sbb
hlt
mov
add
xchg
xor
loopne
test
loopne
pop
and
andb
popf
mov
and
xchg
or
inc
xchg
in
inc
xchg
ret
mov
pop
ds
mov
jbe,pt
cmpsb
and
lods
loopne
stos
not
bound
cmpsb
add
adc
inc
mov
inc
movsb
shlb
in
fisubs
addr16
nop
popa
jge
push
adcl
sbb
out
inc
xchg
subb
inc
mov
dec
mov
mov
push
xchg
sbb
jno
jae
cmc
sbb
or
aas
call
adc
jo
out
inc
outsl
push
dec
xchg
jb
ja
sub
shlb
insl
cmp
aad
jns
faddl
shlb
aad
scas
mov
fs
jns
xchg
and
mov
adc
mov
fldcw
inc
mov
xchg
inc
andb
and
notb
mov
and
das
shrb
mov
inc
xor
mov
sbb
mov
gs
arpl
faddl
xor
mov
add
xor
nop
or
pop
shll
pusha
loopne
ret
out
cmc
push
dec
jl
test
add
js
repnz
cld
bound
pusha
inc
inc
mov
push
imul
xchg
xor
sbb
jae
lods
addr16
test
and
rorb
insl
inc
jg
cmp
inc
xor
test
add
cld
adc
cli
mov
cbtw
xchg
pop
adc
sub
movsb
add
test
sbbb
shl
pop
pop
fimuls
addb
aaa
lea
mov
stos
mov
fs
outsb
lret
or
lock
and
sbb
sti
add
cmp
or
and
push
aad
mov
inc
loopne
shl
or
inc
xlat
add
and
jg
addb
js
cmp
push
addb
fcoml
inc
xchg
pop
aam
cli
shl
imul
jp
in
sbb
pop
mov
rclb
inc
lcall
sbb
jge
inc
mov
inc
int
jmp
inc
sub
xorb
mov
push
and
and
inc
and
dec
adc
movsl
andb
rcl
imul
or
inc
mov
dec
cmp
andb
adc
and
mov
mov
and
dec
scas
add
mov
sbb
push
inc
rolb
scas
sbb
xor
mov
lcall
jo
ret
push
pop
push
push
lret
mov
out
addb
pop
mov
std
and
lret
mov
in
add
popa
jbe
cmpsb
add
ss
push
inc
pusha
insb
push
xchg
stc
xchg
xchg
lock
xor
adc
sub
loopne
adc
ret
sbb
mov
sub
loopne
mov
aam
sar
adc
into
aam
fildll
adc
popa
add
adc
aaa
cld
std
and
adc
shl
shll
jge
pusha
add
and
movsl
int3
and
movsb
addb
cmp
jb
adc
jbe
dec
icebp
push
xor
cld
and
pop
ret
jnp
loopne
add
rorb
adc
lret
jns
push
mov
jno
inc
insb
mov
sub
mov
inc
cwtl
in
pop
ljmp
sti
jg
push
inc
pop
stos
cmpsb
loopne
ret
pop
imul
inc
dec
addb
addr16
inc
addb
out
fistps
inc
loope
pusha
or
shl
arpl
fcom
in
push
jmp
push
and
ret
cmpsl
jg
jge
shlb
xor
movsl
std
push
mov
int3
inc
jge
xor
jo
les
addb
inc
pusha
nop
out
decb
mov
nop
add
jecxz
sbb
xor
ds
rolb
enter
add
jo
mov
pusha
and
movsb
pusha
sarb
xor
inc
add
mov
dec
jl
xor
mov
jne
addb
lods
mov
in
push
in
ror
cli
jb
hlt
aaa
push
xchg
dec
cmp
pusha
lret
adc
push
mov
icebp
pop
pop
mov
outsl
cwtl
scas
shr
cmovg
out
ret
xchg
mov
and
push
push
pop
mov
fstl
bnd
inc
push
xlat
arpl
outsb
push
sbb
cmp
mov
mov
movsl
cld
inc
test
jo
pusha
and
gs
and
xor
popf
les
test
add
into
inc
mov
ljmp
sub
and
add
loopne
mov
test
pusha
pusha
pop
pop
movsb
add
dec
mov
jbe
or
mov
insl
adc
shl
lods
inc
add
shrl
mov
loope
icebp
pushf
daa
sub
in
adc
out
sbb
xchg
shrl
push
xor
inc
or
sbb
dec
sbb
in
xchg
outsb
inc
xor
cmp
lds
stc
fdivrs
jo
lret
test
mov
and
test
xorb
rorb
pusha
fsubl
jecxz
mov
jo
loopne
xor
int
and
xchg
mov
push
test
rorb
mov
mov
lods
pusha
rol
xchg
inc
fiaddl
iret
adc
adc
cmpsb
add
ret
xchg
or
mov
std
cmpsb
loopne
out
out
enter
loopne
mov
inc
cmpsb
shl
cli
sub
mov
loopne
and
pusha
mov
pop
aam
adc
pusha
fstl
cmpsb
mov
add
jmp
push
inc
stos
andb
aam
sub
stos
add
sub
and
into
pop
add
or
mov
iret
je
pusha
cmpb
lcall
mov
aam
fcoml
and
nop
es
sar
rol
inc
ret
jno
xor
aam
mov
addb
mov
adc
in
xor
inc
mov
inc
shlb
push
cmp
adc
and
mov
test
shlb
mov
scas
lods
enter
mov
pop
sbb
lock
add
and
jp
call
jg
push
sub
shl
aas
daa
jae
and
les
mov
jp
rcll
sub
shl
xchg
pop
adc
mov
adc
cmp
mov
enter
cmp
pusha
xchg
adc
out
sub
sub
sti
mov
pusha
jne
pop
lahf
mov
cmp
scas
pop
mov
shlb
or
mov
xchg
push
pop
mov
shrb
andb
enter
push
pop
icebp
inc
add
loopne
movsl
jo
push
xchg
and
add
or
mov
inc
aad
jecxz
scas
mov
mov
aad
sub
ja
mov
push
ljmp
out
iret
ljmp
pusha
or
jb
jmp
fnsave
pop
sub
cmpsb
shlb
mov
aas
cmp
push
add
loopne
das
lret
xchg
outsl
cmpsb
mov
push
adc
add
rclb
push
sub
add
fwait
ljmp
and
lret
sub
addb
mov
cwtl
in
divb
mov
sub
loopne
scas
and
andb
dec
xor
and
loopne
mov
and
andb
xchg
fdiv
fldenv
shll
lea
sub
loop
jne
adc
push
andb
ja
adc
pop
mov
mov
addb
cmpsb
loopne
push
inc
shr
hlt
jmp
loopne
mov
and
lock
sub
pusha
imul
shlb
cltd
or
inc
pop
cld
fstps
jbe
mov
shlb
push
mov
add
jmp
scas
dec
xchg
add
mov
out
push
cmp
xchg
cmp
dec
xchg
sbbb
mov
pop
pop
jl
int3
lahf
jmp
add
stos
shlb
inc
mov
pop
push
adc
pusha
adc
cmc
fildl
mov
pop
mov
mov
loopne
bound
inc
and
mov
pusha
lret
in
neg
bound
fwait
pop
push
cmpsl
movsl
mov
ret
fnstsw
icebp
out
cmp
and
insb
push
sub
dec
sub
andb
loopne
mov
sbb
pusha
rorb
adc
add
inc
mov
and
and
out
bound
pop
in
xchg
ror
mov
popf
mov
inc
xor
mov
inc
mov
pop
mov
jmp
cmc
lret
stos
inc
sub
cmp
xchg
push
hlt
clc
aam
inc
lds
mov
add
shll
inc
xchg
and
xorb
and
adc
and
pusha
stc
jge
movl
or
mov
ror
sar
nop
xor
loopne
mov
and
shlb
dec
pop
aad
pusha
mov
loopne
push
rolb
and
cmp
clc
int3
mov
dec
pop
repnz
xchg
mov
and
pusha
pusha
hlt
push
and
inc
inc
lods
andb
mov
jp
adc
js
mov
movsl
inc
dec
cld
push
shlb
scas
inc
pusha
sbb
lock
hlt
dec
dec
dec
lcall
mov
lds
andb
cli
xor
rorl
fadds
pusha
add
popf
es
pusha
mov
outsl
mov
adc
andb
mov
lods
mov
pop
cmpsb
addb
push
sbb
add
xor
mov
aam
and
cmp
add
decb
pushf
gs
mov
cwtl
call
iret
loop
add
lahf
daa
xchg
rcl
fs
cli
sti
frstor
xor
popf
addr16
dec
xor
and
and
xchg
lods
movsl
mov
sbbb
out
loope
pop
cmp
adc
pop
add
shrl
xor
loopne
or
test
cmp
ljmp
loope
pop
pop
sbb
je
mov
addb
mov
jmp
into
daa
xor
fcomps
stos
clc
insb
inc
clc
inc
fistpll
ja
imul
adcl
cmp
dec
hlt
sub
mov
fisttpll
push
lds
xor
je
int3
add
mov
inc
jg
test
pop
iret
mov
sub
repz
filds
iret
mov
add
call
out
lret
and
andb
push
arpl
loop
dec
mov
sbb
andb
cmpl
or
inc
shll
and
pusha
inc
neg
cmp
aas
pop
lods
add
push
jg
inc
mov
aas
cmp
fsubl
ret
std
je
mov
lods
andb
orb
icebp
popl
mov
jecxz
ds
add
push
addr16
mov
inc
cmpsl
sahf
and
subl
push
ds
frstor
mov
shlb
inc
fistl
mov
scas
hlt
xor
aas
bound
scas
mov
jo
add
arpl
repz
sub
mov
mov
or
xor
andb
mov
cmp
clc
cmpsl
or
mov
mov
or
sar
negb
mov
adc
outsl
dec
sbb
addb
adc
inc
add
mov
orl
andb
inc
sbb
addb
imul
dec
xor
lea
sahf
lret
inc
test
and
les
lods
mov
adc
inc
jne
xor
and
sarb
push
into
loope
mov
sub
add
and
inc
dec
jne
mov
subb
in
push
lahf
push
call
sbb
dec
mov
mov
and
loopne
cltd
mov
out
adc
xor
sbb
dec
xchg
adc
mov
xchg
and
sbb
loopne,pn
repnz
mov
mov
fs
add
shlb
inc
enter
clc
cmp
mov
inc
mov
and
test
add
adc
out
mov
xchg
adc
bound
pusha
mov
addb
pop
movsl
mov
dec
fimuls
cmp
dec
inc
mov
in
jns
sub
shlb
andb
or
and
mov
aaa
dec
mov
xchg
mov
dec
rolb
les
int
addr16
shll
shlb
jp
lret
das
and
hlt
jg
pop
loop
les
ret
add
inc
loopne
je
leave
add
mov
sbb
sbb
push
sbb
ja
mov
mov
das
inc
pusha
or
jmp
add
xor
lock
and
xchg
insb
addb
sarb
mov
sbb
ss
xchg
addb
mov
sbb
ds
leave
pusha
jne
daa
sbb
pop
mov
add
repz
js
popa
add
mov
add
dec
lea
mov
dec
sub
mov
or
add
cld
push
push
jb
shlb
inc
and
mov
add
shlb
push
inc
pop
lret
pusha
loopne
andb
mov
js
adc
scas
cmp
loopne
adc
fisttpll
mov
imul
daa
inc
cmpsl
pop
inc
jp
adc
jmp
shl
xchg
mov
into
jo
push
stos
sub
inc
cmp
mov
push
pop
xchg
int
and
rorb
and
call
push
andb
cmc
aas
lea
add
fbld
or
rclb
sub
insl
in
jmp
stos
add
inc
loopne
and
fimuls
mov
mov
jmp
gs
mov
push
cmpsl
lea
popa
push
loopne
movsb
mov
jp
pusha
mov
test
cmpb
test
sti
mov
xchg
lock
stos
andb
fwait
lock
pop
or
and
sbb
adc
mov
jns
jecxz
testl
mov
loopne
decl
pop
sub
mov
push
andb
fcom
pushl
pop
gs
inc
std
add
xor
inc
inc
repz
pusha
insl
aas
in
push
jae
dec
jns
test
sub
pusha
out
loop
mov
shlb
mov
mov
shl
data16
outsb
push
add
sub
ds
stos
jnp
insl
fs
add
stos
addb
lock
or
mov
mov
enter
jnp
jge
popl
mov
sbb
fldl
jmp
out
mov
cwtl
push
or
pusha
roll
xorb
vcmpss
and
leave
mov
xchg
fs
ss
dec
into
push
add
pop
jle
jno
loope
inc
mov
inc
inc
sub
add
adc
fcmovnu
enter
push
ljmp
mov
into
mov
mov
cmc
xor
cmpsl
and
imul
pusha
push
hlt
int
pop
mov
andb
dec
lret
shlb
add
inc
icebp
in
lods
movsb
pusha
loopne
inc
jecxz
andb
andb
out
pop
dec
or
mov
test
add
rclb
aaa
rcll
scas
pusha
mov
xchg
fcmovb
dec
fidivrs
mov
repnz
mov
inc
mov
mov
jge
popa
movsl
lret
inc
cmp
mov
cs
and
hlt
pop
dec
sarl
stos
loopne
cmp
dec
inc
and
xor
test
inc
in
jge
jg
add
out
mov
xchg
cmpsl
jp
pop
inc
xchg
adcl
mov
rolb
rolb
out
mov
pop
jp
and
and
lds
addb
mov
inc
sub
ljmp
cmp
mov
sub
inc
mov
loop
stos
jbe
inc
sbbb
mov
lret
mov
cwtl
jae
sahf
stos
jns
pusha
mov
xchg
lret
orb
pusha
fwait
xor
rcll
add
std
xchg
lret
icebp
int
and
out
mov
orb
adcb
loopne
stos
inc
cmp
out
or
loopne
inc
mov
fldenv
std
rcl
loope
cwtl
mov
loopne
push
jge
dec
cmp
rcrb
jg
lret
ret
hlt
sbb
cmp
insl
or
xchg
dec
in
lahf
movsl
push
dec
nop
ljmp
mov
inc
dec
push
sbb
cmp
mov
jno
adc
scas
ret
push
adc
call
test
add
shl
pop
mov
jp
add
sub
mov
inc
push
idiv
mov
pusha
rorb
dec
ret
inc
cmp
pusha
adcb
mov
add
nop
dec
jbe
out
add
mov
mov
add
rclb
pusha
push
cmpsl
pop
dec
adc
out
inc
lahf
sub
and
std
movsb
loopne
add
mov
xchg
and
adc
enter
mov
loop
add
lock
test
inc
push
into
jb
in
cmc
pop
lahf
dec
add
loopne
das
pop
lods
pop
aam
loop
push
pop
inc
pop
fwait
sbb
add
lret
insb
xchg
push
pusha
loopne
add
xor
fimuls
mov
sbb
and
cmc
xchg
xor
mov
stos
pusha
mov
xor
arpl
pop
mov
inc
pusha
testb
cmpsb
pusha
add
andb
or
aad
xor
inc
sbbb
cmpl
lcall
pop
pop
or
sub
insb
mov
test
loopne
and
addb
and
sbbb
sarb
xchg
pop
fwait
or
and
and
loopne
cli
stc
pop
in
pop
jnp
arpl
sub
rcrb
pop
popa
inc
lea
pusha
sub
inc
icebp
pop
adc
ss
pop
idivl
adc
and
lock
jo
cmp
popa
add
mov
aam
add
sbb
test
pusha
bound
pusha
adcb
dec
loope
push
and
ret
ss
sbb
mov
out
test
jge
movsl
mov
inc
and
rcrb
pop
xor
out
push
repnz
push
dec
mov
jnp
and
out
mov
shlb
fs
push
inc
in
mov
mov
sti
adc
cmp
and
divl
mov
les
inc
je
dec
mov
imul
imul
pop
ja
scas
or
inc
adc
ret
push
out
cmp
push
pusha
and
xchg
fsubrs
out
cmp
ret
mov
loopne
cmpsb
inc
and
dec
cmp
or
test
subb
pop
fidivrl
xor
in
repz
mov
andb
scas
addb
jns
and
mov
mov
push
jp
nop
push
cmpsl
ror
pusha
mov
call
in
daa
lock
shlb
hlt
pop
add
inc
adc
mov
inc
clc
jl
das
jnp
and
rclb
mov
rolb
pop
or
xchg
add
adc
icebp
add
pop
dec
je
mov
subl
adc
fldcw
add
inc
cmp
inc
mov
mov
xchg
imul
rclb
pop
adc
fidivrl
mov
xor
sub
loopne
dec
popa
mov
pop
jo
pop
in
test
and
mov
add
in
or
and
or
mov
pop
sbb
shlb
add
cwtl
mov
and
out
mov
fnstenv
add
add
int3
cmp
movsl
inc
lock
lods
inc
xor
adc
dec
push
and
les
icebp
in
add
imul
sti
popa
cmp
jl
fcoms
xor
cmp
push
xlat
sbb
movsl
push
jne
repnz
addb
dec
fs
in
nop
lods
shlb
adc
sbb
mov
sbb
mov
popa
int3
into
sub
jnp
xchg
sub
or
mov
add
andb
stos
add
pop
inc
mov
dec
mov
mov
out
pusha
fs
daa
leave
or
jae
add
mov
andl
xchg
mov
repnz
or
outsb
cmpsb
loopne
mov
add
inc
popa
and
mov
sub
jge
pop
jmp
shl
ret
mov
loopne
ja
sbb
into
pop
fcmove
test
sbb
dec
mov
lds
pop
in
sahf
test
jge
push
mov
loopne
xchg
in
inc
in
or
push
pop
cmpsl
sarl
add
inc
pop
movsl
testb
cmp
dec
xchg
mov
loopne
fwait
xor
loopne
push
pusha
inc
mov
loopne
pusha
mov
rorl
stc
pop
fildll
mov
xchg
cld
adcl
cmp
mov
insb
lods
push
sbb
xchg
lret
add
pop
das
lahf
or
shlb
addb
pusha
shlb
jg
adcl
push
and
popf
or
pusha
and
push
push
shlb
pop
andl
fdivrl
lods
pusha
and
dec
lret
aam
out
movsl
imul
and
int3
insb
jge
push
outsb
xor
mov
push
or
add
pusha
and
dec
aas
loopne
shlb
addb
dec
stos
pop
data16
and
inc
mov
add
std
imul
stos
add
cmp
mov
es
add
cltd
mov
pop
dec
or
sbb
jecxz
sbb
in
stc
fs
xchg
sub
jne
mov
addb
xor
and
mov
or
and
cli
add
mov
pusha
add
mov
sub
add
pushf
jae
loopne
or
cmp
sub
sub
rcrb
add
inc
mov
mov
mov
jns
cltd
cmp
shlb
and
rorl
pusha
pop
sbb
testb
mov
sti
xchg
xor
xchg
in
sub
mov
add
xor
out
and
mov
xchg
adc
inc
adc
or
sub
sbbb
loopne
xor
aas
data16
fisttpl
rol
pop
popa
jmp
loopne
xor
mov
loopne
mov
jge
fcoms
add
repz
sti
cli
cld
int3
in
int3
in
andb
je
ljmp
add
push
out
addr16
imul
add
pusha
mov
sbb
pusha
and
andb
les
mov
push
mov
pusha
pusha
or
mov
xor
pusha
rclb
dec
push
inc
mov
jg
jb
xchg
adc
pop
leave
xchg
sahf
adc
pop
pop
aas
mov
push
inc
mov
jmp
mov
bswap
inc
stos
movsl
movsl
loop
fld
cmpsl
mov
ja
loopne
les
daa
cltd
jae
daa
xor
sbb
xlat
stos
sbb
cltd
int3
cmp
inc
and
out
jns
or
dec
out
xchg
decb
inc
cmpb
sub
dec
aaa
pop
sbb
and
movsl
test
dec
arpl
jbe
stos
add
add
test
ljmp
nop
pop
mov
cmpsl
cld
push
adc
loopne
xor
jmp
inc
addr16
bsr
mov
fcomp
jecxz
xchg
bound
and
rolb
aas
mov
pusha
inc
xlat
pop
mov
jb
fmull
add
mov
cmp
pusha
loopne
mov
xlat
mov
les
inc
and
dec
mov
add
nop
js
pushf
ljmp
lret
enter
shlb
mov
and
pushl
mov
adc
inc
xchg
fnstcw
fwait
sub
in
inc
mov
push
pusha
pusha
dec
in
inc
ja
adc
loopne
loopne
test
sbb
xchg
inc
pop
jle
ret
loopne
andb
mov
jp
inc
xor
fs
addb
xchg
pusha
adc
xor
push
mov
loopne
aam
fxch
add
addb
jp
cmc
test
sbbb
push
add
sbb
pop
or
mov
test
jne
and
sti
push
in
mov
add
mov
notb
in
stos
shlb
test
aas
xor
pusha
mov
and
insb
push
mov
push
cli
or
jb
push
out
dec
or
mov
jg
and
pop
int
add
inc
pop
cld
lods
mov
mov
fbld
cmp
xchg
stc
into
fstl
cmpl
dec
push
fidivrs
dec
mov
inc
cmpsb
addb
jb
mov
mov
add
mov
pusha
mov
pusha
inc
in
addb
shll
loopne
fwait
lret
in
jae
cmpsw
daa
dec
xchg
inc
addb
fsubl
sahf
cld
sbb
shlb
imul
pusha
sub
add
imul
mov
mov
add
lcall
and
inc
or
add
pusha
and
repnz
mov
jmp
xchg
mov
lock
stc
mov
xchg
jl
inc
lock
xchg
sbb
add
jo
outsl
hlt
loopne
inc
pusha
idivb
dec
lcall
insl
lcall
inc
mov
jb
push
mov
ret
and
loopne
arpl
adc
and
out
mov
xchg
js
test
add
lds
int
mov
mov
mov
xor
cld
lret
jae
add
cs
loopne
cmpsl
ss
mov
leave
mov
push
dec
int3
xchg
push
mov
sbb
pop
push
and
sub
dec
mov
sbb
push
inc
dec
loope
test
inc
jge
aam
dec
and
loopne
mov
pop
stc
cmpsl
ror
sub
mov
cmp
movsb
pusha
and
outsl
or
inc
push
mov
sub
xor
ret
rorl
sti
aam
aaa
jo
lods
pop
pop
in
dec
das
inc
shlb
push
pop
movd
sbb
inc
cmp
and
pusha
inc
add
fwait
ljmp
xor
sub
sbb
sub
int
mov
movsl
jbe
push
and
xchg
xchg
jb
mov
push
pusha
pusha
sbb
fsubp
ljmp
or
loope
mov
cmpsb
mov
pop
in
imul
add
loopne
push
aad
and
pusha
dec
pop
into
or
cli
mov
cmp
inc
adc
inc
inc
xchg
les
sbb
jg
icebp
arpl
inc
mov
enter
inc
or
add
testb
shlb
dec
xchg
mov
push
incb
mov
add
dec
aas
xchg
mov
lods
scas
loope
push
std
sbb
aas
fists
insl
pusha
jnp
pop
arpl
cmp
push
loopne
pop
or
andb
inc
cld
loop
xor
pushf
dec
or
loopne
fs
punpckhwd
mov
test
loopne
mov
add
shlb
mov
gs
mov
test
pusha
cwtl
pop
inc
jp
jns
inc
pusha
cld
mov
push
pop
push
out
add
cmp
cwtl
add
jne
sub
jp
aad
lods
loopne
sbb
dec
insb
add
loopne
jne
cmpsb
inc
and
out
fistpl
stos
sbb
pop
push
addb
cmp
fwait
mov
loopne
leave
mov
pusha
add
sarb
aas
ds
mov
inc
rcrl
insl
mov
jno
out
or
and
sub
leave
push
sub
js
mov
hlt
outsl
jecxz
cmp
mov
xchg
lret
out
shl
addl
push
andb
and
sahf
dec
mov
dec
xor
pop
dec
stos
pop
out
ja
add
or
out
xchg
mov
inc
call
aad
aam
xchg
shlb
adc
sbb
movb
or
ss
cmpsl
pop
mov
stos
gs
push
mov
stos
loopne
sub
loopne
mov
xorb
inc
inc
aad
cmpsl
sar
lods
pop
loopne
and
into
sahf
sub
aas
jns
xchg
mov
xchg
ret
int
sbb
test
mov
mov
mov
and
or
das
bound
add
inc
cmp
imul
scas
loopne
int3
inc
lock
rcll
sbb
outsb
jecxz
mov
push
fldt
pusha
sbbb
ds
jl
mov
mov
int
inc
and
fmuls
mov
mov
or
adcb
mov
push
jle
add
aad
mov
loopne
or
loopne
dec
out
mov
mov
loopne
or
test
rolb
lock
in
popa
mov
inc
cmp
add
addb
push
divb
fisubrs
xchg
inc
rcrb
and
and
rolb
loopne
mov
and
repz
xchg
or
push
mov
inc
fdivrl
xchg
add
mov
adcb
mov
fnstsw
sub
loopne
inc
inc
or
adc
jo
ljmp
mov
and
cmp
dec
and
xor
push
mull
pusha
and
and
cmpsl
sbb
jns
clc
inc
mov
andb
sahf
aam
lock
sub
pusha
std
add
pusha
xchg
pop
jle
leave
mov
loopne
cmp
pusha
in
sbb
and
mov
ss
and
push
daa
jle
cwtl
add
xor
jle
scas
pop
cltd
es
mov
loopne
push
dec
scas
outsl
fwait
ds
pop
cmp
cld
dec
and
rolb
mov
stc
sub
xchg
cmc
cmpl
rcr
bound
jg
dec
test
loop
cltd
push
rolb
leave
cmp
jns
test
xchg
stc
in
mov
xchg
adc
lret
mov
call
inc
fs
inc
mov
jbe
subl
shll
andb
andb
add
xor
test
loopne
sbb
jge
lret
pop
push
jmp
pusha
add
add
lahf
dec
jge,pt
nop
xchg
mov
xor
dec
and
cs
fwait
inc
cltd
mov
movsb
pusha
add
sti
cltd
mov
jno
lods
shl
mov
loopne
dec
sbb
scas
adc
out
add
or
push
popa
ja
dec
or
shlb
mov
lret
mov
jmp
rcrl
xchg
inc
call
loop
addb
mov
dec
cmp
inc
outsb
cli
mov
mov
mov
push
xchg
mov
jbe
mov
xchg
mov
push
and
outsl
stos
and
outsb
das
jl
jp
push
fimull
mov
jb
jle
test
inc
fldl
push
mov
dec
iret
out
push
pusha
add
ret
lret
stos
add
xorb
fsubrs
hlt
les
pop
mov
vmovaps
add
or
and
add
mov
andb
mov
and
imull
adcl
aas
shlb
jg
push
dec
shlb
mov
addb
add
call
mov
jbe
push
mov
mov
jmp
sbb
rclb
ja
pop
sbb
pop
cmp
inc
aaa
mov
test
lods
mov
mov
xchg
sbb
add
ja
sti
out
fnsave
popa
dec
loope
mov
cmp
shl
dec
adc
push
lods
jp
push
pop
daa
inc
jb
xchg
in
cltd
mov
nop
sub
inc
outsl
ret
cmp
inc
cmpsl
jo
xchg
pop
add
push
pop
mov
xor
test
add
and
mov
loopne
pop
xchg
stc
sahf
cld
inc
in
leave
pop
imul
inc
inc
inc
and
dec
mov
cs
loopne
roll
mov
lods
mov
in
push
pusha
push
mov
jo
inc
xchg
sbb
push
shlb
mov
inc
and
rolb
mov
andb
mov
cmp
daa
pop
rorb
inc
jge
movsb
addb
and
cmp
and
aam
mov
rolb
mov
dec
pop
bound
sbb
add
movsl
enter
xor
cmc
je
pusha
mov
and
pop
adc
push
mov
sti
ds
lods
repz
aam
mov
push
xchg
in
andb
sahf
adc
fs
and
push
push
dec
add
add
and
ror
add
jecxz
inc
inc
jge
jno
rolb
xchg
adcb
and
cli
gs
adc
rcll
jno
iret
dec
in
pop
inc
sub
dec
add
add
jbe
pop
mov
aam
fucompp
test
inc
popf
in
enter
sti
pop
ds
scas
pusha
rolb
jnp
pushf
aad
je
loopne,pn
inc
lea
pusha
inc
gs
jns
jp
rolb
leave
out
in
flds
popf
inc
inc
or
and
loopne
jb
negl
xchg
pop
movsb
pusha
rolb
jge
lods
rol
cld
push
pop
call
mov
stos
fsubr
jge
pusha
mov
mov
mov
mov
out
aas
xchg
jne
mov
push
add
mov
and
shlb
lods
lahf
adc
lods
addb
mov
movsb
loopne
sbbl
and
inc
inc
sbb
addb
push
andb
mov
inc
inc
shl
jecxz
sbb
mov
loopne
xchg
and
loopne
adc
or
ror
mov
xor
sub
and
das
xchg
xor
in
pop
fcomps
push
std
fildll
adc
adc
popa
mov
insl
fcomp
sarb
shlb
push
shll
cmp
add
pusha
cmp
aam
rolb
jg
pop
das
dec
fs
sti
push
pop
ja
sub
loopne
mov
cli
daa
mov
loopne
push
jns
loopne
sbb
push
shrb
xchg
or
loopne
pusha
mov
test
loopne
inc
pop
aas
sbb
stc
shrb
add
gs
xchg
cmp
jae
iret
fs
add
iret
popa
push
sub
sbb
shl
jge
xor
dec
mov
mov
imul
repz
sub
sub
jns
fbstp
inc
inc
mov
mov
add
fbstp
bound
aaa
jmp
fmull
andb
popf
sub
mov
sub
cli
iret
std
leave
xlat
arpl
pop
jge
add
out
mov
test
rcl
mov
inc
icebp
sub
mov
adc
fists
push
addb
pusha
push
pusha
inc
lret
mov
mov
jl
ja
push
imul
inc
rolb
or
sub
jl
shlb
paddusb
lods
loopne
dec
dec
adc
push
inc
push
cmp
arpl
into
sbb
cwtl
call
xlat
insb
mov
mov
jno
and
sahf
arpl
push
insl
outsl
stos
mov
icebp
and
add
pop
fisubrl
mov
adc
popf
sub
and
and
xlat
dec
subl
push
and
add
add
sub
lcall
movsl
mov
shl
add
movsl
mov
adc
lret
mov
dec
jb
insb
mov
mov
xchg
inc
loope
adcl
xchg
loopne
push
stos
jno
jnp
cmp
mov
data16
and
iret
xor
loopne
cmp
sti
cld
fcomps
stos
data16
and
cmpsl
mov
dec
lods
add
loop
add
enter
out
dec
ret
mov
sub
mov
jmp
xchg
jns
arpl
push
mov
add
and
pop
scas
fildl
inc
loopne
rolb
outsb
sbb
sahf
add
sbb
clc
mov
inc
daa
bound
and
push
jge
pusha
pusha
shll
push
es
out
out
nop
dec
mov
lcall
xchg
push
mov
inc
pushf
or
shrb
rcrb
and
fistps
cmpsl
std
fisubrl
and
lret
and
testb
mov
fcompl
xorl
in
loopne
lds
sti
in
aas
mov
lea
add
iret
fprem
mov
mov
mov
cmp
cmp
inc
mov
jecxz
mov
dec
and
loopne
push
arpl
test
add
push
xor
dec
lret
bound
out
jecxz
into
popa
inc
out
shlb
fs
loope
push
dec
fcmove
sub
loopne
outsl
mov
push
cmp
andb
pop
mov
jecxz
loop
loopne
and
cmp
mov
sbbl
outsl
andl
add
mov
sub
cmp
adc
int3
es
push
mov
xchg
pop
sub
push
aaa
dec
mov
adc
dec
add
add
shlb
pusha
add
sbb
lahf
mov
inc
jae
inc
std
sbb
xchg
push
pop
or
mov
loop
cmp
orb
add
shr
jge
mov
and
and
inc
andl
add
inc
scas
inc
inc
js
out
rorb
clc
xchg
movsb
add
xchg
jno
and
clc
dec
mov
lret
in
fs
cmc
test
loopne
dec
ss
sbb
cmp
jge
in
mov
xchg
in
ja
enter
inc
push
stos
out
mov
sub
mov
loopne
or
loopne
xor
xlat
jg
mov
pop
adc
je
add
mov
loop
mov
pusha
adc
imul
in
or
pusha
loopne
lret
adc
in
mov
pusha
popf
mov
jno
out
outsb
or
mov
jns,pt
das
jne
adc
push
jns
mov
dec
insl
fisubl
jg
loopne
cmp
mull
into
jg
rolb
xor
std
jo
in
popa
and
shl
loop
rolb
mov
shlb
icebp
jbe
jo
inc
loope
push
imul
shlb
xor
aam
cmp
cwtl
insb
xor
cmp
cmp
sahf
stc
aas
mov
loopne
or
pop
push
and
das
and
adc
jnp
lret
mov
jp
mov
and
rolb
mov
dec
add
pop
hlt
inc
out
add
lret
mov
addb
dec
cmpsb
and
in
pushf
or
inc
mov
adc
or
pop
jecxz
jl
mov
lahf
sbbl
pusha
call
xor
arpl
sub
or
add
and
and
xlat
xchg
adc
cmp
adc
scas
cli
mov
or
sbb
rolb
push
jno
dec
out
xchg
push
add
shrb
jle
in
fs
out
in
fadds
cltd
movsl
scas
and
stos
jge
cmp
xchg
xor
xor
sahf
sub
mov
lret
add
adc
fimuls
inc
cmp
dec
fiadds
and
mov
andb
dec
mov
mov
loop,pt
movsb
add
xchg
xchg
jle
mov
and
in
cmpsl
out
loopne
jp
push
add
add
in
adc
sbb
in
lahf
inc
or
mov
test
orb
xor
into
popf
adc
xchg
mov
insb
jne
push
pusha
loopne
mov
das
pusha
inc
in
fabs
stc
mov
sub
pusha
fdivl
xchg
insl
xchg
lds
or
inc
xchg
in
andl
mov
add
mov
lock
imul
out
mov
push
pushf
imul
mov
outsb
push
test
test
mov
fisubs
and
jns
loopne
test
pop
pop
out
out
push
rolb
mov
jle
sub
icebp
mov
pusha
jno
inc
shrb
loop
and
imul
inc
fsts
push
mov
in
imul
pusha
mov
cwtl
push
andb
andb
into
push
rol
push
push
imul
dec
das
sbb
inc
jecxz
scas
fimull
sti
pop
jge
test
pop
enter
sub
mov
outsb
jge
mov
stos
pusha
and
dec
sbb
mov
sub
and
inc
and
jmp
jae
mov
call
insl
adc
lcall
loopne
mov
enter
loopne,pn
arpl
mov
test
fadds
arpl
mov
lock
gs
pop
cmp
pusha
xchg
daa
adc
sahf
jp
mov
xchg
dec
adc
push
dec
sbb
add
shl
inc
dec
adc
and
fcmovbe
cli
mov
pusha
jne
xchg
addr16
mov
pop
mov
loopne
dec
in
int
adc
mov
ja
mov
dec
push
pusha
add
subb
or
imul
mov
pushf
push
imul
xlat
frstor
jmp
and
pusha
push
mov
int
test
pusha
in
pusha
orb
stc
test
lods
add
cmp
rorl
inc
xor
jle
lret
in
and
push
mov
sbb
mov
jne
push
movq
jne
pop
insb
jns
je
xchg
fcmovu
push
or
fs
mov
outsl
adc
jmp
ljmp
sub
in
inc
inc
inc
aas
xor
lahf
pop
push
and
jl
and
mov
mov
mov
fwait
ss
loop
inc
jecxz
icebp
push
stos
and
pop
test
inc
stos
andb
fwait
aam
pop
or
and
icebp
cmc
mov
push
dec
ficompl
mov
dec
and
and
cmc
sub
or
movsb
pusha
mov
xchg
mov
cmp
stc
push
cmp
cli
mov
sbb
add
and
jo
cmpsb
inc
subb
pusha
and
icebp
imul
scas
jmp
loopne
pop
dec
sub
mov
pop
and
mov
fildll
pop
insl
insb
xor
je
xchg
cmp
ljmp
popa
into
mov
pop
xchg
in
jl
shll
adc
movsb
pusha
add
incl
cmc
dec
cli
add
inc
add
pusha
and
inc
sbb
loopne
scas
andb
and
add
and
shrb
pop
or
mov
out
cmp
hlt
inc
jnp,pt
mov
add
inc
cmpl
adc
andb
jne
sub
pusha
xchg
test
push
test
and
rolb
icebp
jle
mov
mov
adc
fs
loopne
sbb
andb
mov
xchg
repz
pop
fs
pop
inc
ret
out
testl
or
mov
test
xchg
pop
xor
je
das
push
jno
cmpsb
shlb
in
js
and
loopne
pop
out
mov
jmp
jg
andb
mov
push
mov
add
jl
cmp
bound
and
andl
jle
sbb
mov
sub
pusha
imul
rcrb
aaa
in
bound
pop
jno
jb
mov
loop
stc
or
mov
jmp
cmp
and
shlb
addb
xor
mov
bound
rolb
insl
pusha
inc
adc
pop
bound
dec
xchg
cli
out
sbb
scas
inc
orb
insb
lods
loopne
add
xchg
add
addl
and
push
fisttpll
aaa
and
add
jmp
inc
add
cmovp
dec
push
addb
rclb
xor
loopne
mov
cmpsb
addb
mov
lahf
mov
mov
jg
inc
scas
addb
fs
xorb
pop
out
into
stos
or
shlb
dec
push
mov
enter
ja
ljmp
mov
rol
loopne
lret
push
jle
loopne
add
shlb
rclb
mov
xchg
call
and
mov
mov
and
adc
sub
das
mov
and
fdivrl
inc
dec
sbb
or
sub
outsb
addb
inc
sub
and
push
rcrb
sub
sbbb
inc
push
hlt
rorb
and
or
mov
shl
and
add
pop
je
das
adc
pusha
mov
sbb
fsubl
rolb
andb
andb
pusha
inc
lret
mov
rolb
push
mov
ljmp
add
push
leave
mov
push
mov
cmp
pop
jg
imul
test
in
fisubl
addb
cmc
aad
mov
not
int3
adc
mov
dec
pop
adc
inc
pop
inc
push
into
pop
mov
enter
pop
push
mov
add
mov
inc
mov
pop
rolb
in
mov
loopne
sub
pusha
pusha
mov
mov
arpl
loopne
jae
sub
jecxz
or
inc
jle
and
xlat
mov
and
mov
in
push
add
jno
mov
mov
jle
dec
jg
js
arpl
or
and
repz
pop
cmp
xor
xor
xlat
mov
pusha
pusha
xchg
inc
mov
mov
mov
add
sub
mov
ds
pusha
cmpsb
inc
mov
insb
xchg
fsubrs
repz
pop
in
xchg
xchg
mov
cmp
aas
xor
dec
loop
ss
jns
adc
imul
and
pusha
inc
sub
sbb
repnz
mov
rcrb
add
sub
add
negl
jae
sbb
dec
subl
pop
jmp
stos
shl
pusha
loopne
loop
or
mov
loopne
inc
lret
xor
sub
loopne
and
push
cld
cmpsb
addb
movsl
insl
mov
and
mov
push
push
dec
jb
cmp
jecxz
rol
lds
shl
lods
shl
cwtl
fdivrs
int
addb
jg
ds
icebp
push
nop
cld
sub
cmp
push
sti
sbb
outsl
cmp
add
fsubl
push
mov
in
stos
addb
pop
pushf
cltd
dec
jb
push
sbb
and
lahf
mov
dec
or
inc
sub
mov
loopne
and
jp
jle
pusha
pusha
add
adcb
and
pusha
push
add
loop
push
pop
data16
pusha
shl
xchg
aam
cmp
in
xor
pop
inc
jns
loop
cmp
inc
jbe
cmp
movsl
adc
mov
pushw
xor
test
andb
push
add
jbe
cmp
andb
out
fsts
mov
xchg
and
pusha
ret
inc
sub
add
hlt
int3
testl
jo
pusha
dec
and
mov
add
fisubl
push
rorb
xchg
sub
mov
rcrb
popf
fmuls
mov
pop
pop
sbb
push
cmp
jae
pop
mov
mov
adc
add
jmp
enter
test
loopne
das
shl
repz
dec
test
cmp
cltd
scas
add
ss
iret
lds
sub
fisttpl
ljmp
and
subl
test
shrb
xor
inc
add
inc
push
and
cmp
inc
js
adc
loopne
mov
adc
and
es
les
in
and
mov
je
sbb
ror
push
push
jae
pop
and
pusha
insb
pop
mov
pusha
pop
dec
xchg
or
pusha
pop
ret
cld
mov
mov
mov
sar
push
or
loopne
mov
mov
outsb
imul
sbb
pop
adcl
imul
mov
loopne
add
ja
and
pusha
call
sub
addb
ja
sti
pop
shll
movl
dec
lahf
out
add
pusha
mov
mov
dec
or
push
loopne
pop
cs
pusha
mov
aam
adc
push
into
sbb
lcall
lea
cmp
shlb
stos
jg
push
jno
loopne
sahf
cs
pusha
mov
fs
outsl
aam
add
sbb
add
ret
loopne
push
dec
pop
xor
pop
data16
or
and
and
or
loopne
push
mov
sbb
pop
push
rclb
adc
js
push
xchg
xor
aad
mov
int
cmp
pusha
mov
xlat
es
mov
shll
sti
jnp
loopne
jnp
aad
int
shll
lahf
lcall
insl
movsb
add
jmp
adc
pusha
outsb
add
cmp
jnp
shlb
daa
adc
pusha
rorb
push
inc
pop
mov
adc
mov
shl
lods
fidivrs
pop
dec
sahf
jecxz
ljmp
mov
sbb
dec
cmc
es
sbbb
out
jo
insb
push
rol
lahf
pop
sahf
adc
repz
jmp
add
cmpsb
inc
pusha
adc
addr16
cltd
stc
pop
shll
scas
pusha
pusha
test
push
lcall
xor
test
inc
inc
mov
sbbl
inc
pusha
mov
and
jnp
inc
add
mov
mov
push
mov
mov
subl
cli
movsb
and
adc
cli
sbb
xlat
lea
sahf
rcll
into
add
sbb
mov
mov
rcrb
mov
sbb
xchg
pusha
int3
jmp
pop
xchg
jge
pop
xchg
lock
scas
je
inc
xchg
scas
test
push
rol
out
mov
lcall
addb
je
fucomp
mov
test
add
pusha
pusha
addl
or
and
and
call
jmp
xor
add
jmp
mov
outsb
and
and
cwtl
fbld
xchg
lods
rcr
pusha
mov
and
orb
pop
int3
pushl
popl
sbb
popf
test
mov
push
aad
push
add
mov
add
add
and
loopne
mov
or
test
mov
test
mov
test
mov
mov
pushf
cmp
addr16
inc
stos
jae
std
out
add
push
sbb
sbb
loopne
jle
pop
adc
pop
lret
es
and
shrb
in
adcl
shlb
and
fsubl
mov
test
and
dec
ja
mov
sbb
dec
movsl
andb
pop
or
add
inc
and
cmpsb
pusha
loopne
mov
and
test
loopne
out
or
jecxz
add
std
fimuls
mov
cmpsl
pop
xchg
push
add
aad
in
push
xor
and
cmp
movsl
test
xorb
pusha
add
xchg
rorb
jns
je
addb
add
cmpsl
test
push
inc
cli
push
addr16
loopne
cli
decb
loopne
std
push
add
and
xchg
test
jo
dec
lods
loopne
test
and
add
mov
and
add
faddl
pusha
rorb
mov
pusha
mov
mov
mov
mov
in
aam
repz
shlb
fwait
dec
mov
pusha
int
pop
adc
or
pusha
repnz
add
add
push
das
in
jo
dec
adc
pop
adc
iret
shll
pusha
ds
shlb
push
lds
fisubrs
outsb
bound
fsubs
enter
inc
add
mov
or
lock
add
scas
add
aad
dec
sub
sub
inc
mov
je
rolb
bound
mov
inc
aam
loopne
jl
rclb
mov
pop
cltd
adc
adc
lcall
mov
jecxz
xor
inc
add
sbb
sbb
jb
js
out
insb
inc
das
lcall
sub
inc
pusha
cmpsl
inc
cmc
inc
xchg
inc
jno
aaa
enter
in
xchg
pop
xor
rcrl
loope
sahf
push
addr16
in
push
or
lret
cld
test
loopne
push
mov
and
cmp
and
stc
test
loopne
xchg
sbb
cmp
mov
and
out
outsl
lods
mov
addb
nop
xchg
test
into
or
sbb
and
lods
fsubs
test
or
sub
ds
inc
push
pop
adc
jbe
jp
gs
xlat
xor
mov
xorb
call
popa
xchg
sbb
sbb
xor
rorl
pop
sbb
xor
jge
add
mov
mov
add
stos
sbb
clc
pop
out
push
clc
mov
lock
mov
dec
mov
xchg
pop
adc
or
xchg
lods
ret
cmp
out
adc
loopne
mov
dec
adc
push
int3
dec
sub
inc
jp
xchg
js
ficomps
cmp
clc
mov
int
jbe
andb
mov
adc
inc
pop
xor
sbb
add
rolb
aam
add
inc
and
and
xlat
loop
fucom
adc
jne
dec
jo
inc
sarl
pushf
mov
sti
dec
adc
mov
test
sarb
cli
sbb
mov
outsl
rcrl
repnz
inc
mov
mov
jae
dec
cltd
and
das
lock
mov
je
mov
ljmp
mov
jns
push
mov
shll
test
in
imul
push
gs
imul
sub
or
clc
fcoms
ljmp
stos
rolb
push
jns
dec
outsb
scas
loopne
jno
ficomps
test
inc
sbb
fs
bound
loopne
enter
jbe
pop
rcr
mov
cltd
std
add
push
insl
pop
scas
inc
inc
outsb
dec
mov
add
daa
mov
xchg
loopne
xchg
inc
mov
pop
shlb
fdivrl
sbb
movaps
sahf
push
inc
adc
mov
pusha
orb
xor
mov
int
adc
mov
daa
iret
cmp
fidivl
daa
mov
push
mov
jg
rol
vmwrite
je
add
fucomi
lcall
ret
cmpl
sub
pop
push
sbb
repz
jge
sub
add
xor
and
fisubrs
add
iret
ret
cmp
pop
shld
notb
lret
dec
inc
add
pusha
lcall
mov
inc
pop
adc
movsl
jno
loopne
dec
push
pusha
and
mov
mov
inc
loopne
ja
mov
mov
lea
pusha
fs
cmpsl
lahf
pop
test
addb
adc
xlat
inc
adc
xchg
cmp
push
lds
iret
cmp
mov
inc
jmp
xchg
mov
xchg
neg
pop
sbbl
call
lahf
stos
repz
sbb
incl
inc
adc
push
neg
loop
jnp
xor
cmc
xchg
xchg
int
or
pop
mov
lods
pusha
add
inc
loope
dec
iret
jle
inc
or
std
int3
repz
add
dec
xlat
mov
sbb
shlb
sub
shlb
ror
lds
lret
jle
cmp
push
mov
cmp
imulb
movb
xor
stos
ljmp
add
pusha
loopne
mov
inc
nop
scas
lret
mov
adc
sbb
pusha
sahf
push
pushf
sarb
out
push
enter
mov
and
add
test
cmp
mov
mov
mov
and
sbb
cwtl
inc
mov
jb
lds
std
mov
add
in
addr16
push
fsubrp
push
stos
mov
std
int3
jg
loopne,pn
js
mov
and
xor
mov
shll
add
cmpsb
addb
mov
and
loopne
cmpsb
and
dec
jmp
sub
add
fcmovnu
data16
out
test
jbe
outsb
fdivrl
addb
mov
out
jp
outsb
cmp
mov
sarb
in
pop
popf
or
add
jbe
mov
test
stos
mov
adc
call
mov
cmp
outsl
inc
sbb
lret
jb
enter
mov
sub
clc
jecxz
scas
jnp
lcall
loop
mov
add
gs
shrb
in
xchg
dec
and
and
stos
in
lret
add
add
and
inc
andb
cmpsb
andb
fisubs
fisubrs
push
jae
push
loopne
lock
jmp
mov
loopne
pusha
loopne
mov
push
call
out
shll
sbb
cli
icebp
pusha
jb
in
mov
push
inc
inc
fsubs
dec
pop
nop
rcr
jae
sarb
aaa
inc
mov
js
xchg
mov
add
js
jmp
addb
test
pusha
rcrb
inc
dec
pop
inc
push
add
loopne,pn
jnp
and
fisubrl
and
jle
jge
and
out
pusha
sbbb
inc
fisttpll
xor
push
nop
bound
jp
sub
andb
add
jecxz
cmp
cld
push
mov
lds
pusha
aas
mov
jecxz
adc
stos
pusha
sarb
andb
jne
add
push
jl
fcoms
jae
scas
mov
in
addr16
push
sub
mov
jae
mov
xchg
in
sbb
dec
fimull
mov
cltd
in
idiv
sahf
fdivl
scas
sub
xchg
xor
jbe
fcmove
out
or
loopne
mov
lret
out
mov
mov
pusha
fwait
pop
xor
jne
inc
out
outsb
push
sub
adc
xor
jecxz
mov
mov
call
aaa
in
mov
adc
pop
sub
and
add
loopne
xchg
mov
cmp
addb
jne
push
pop
repnz
adc
aaa
and
arpl
js
xchg
or
add
push
mov
add
xor
add
fadds
lret
ja
mov
mov
cld
mov
push
mov
xor
loop
cwtl
add
nop
cmp
xchg
xor
xor
jp
jns
ds
sti
mov
movsb
loopne
aas
push
mov
inc
add
cmp
addb
pop
test
idivb
mov
add
mov
pusha
icebp
popf
in
fildl
and
stos
inc
rolb
inc
gs
notb
ljmp
outsb
lret
add
in
sub
scas
bound
and
add
jle
lea
ljmp
mov
lds
dec
je
push
ljmp
daa
xlat
dec
xchg
sbb
mov
test
and
sub
push
adc
mov
cmp
dec
or
loopne
jg
sub
rolb
mov
adc
fiaddl
dec
arpl
pusha
push
xor
test
mov
orb
mov
cmp
pop
bnd
int3
jecxz
test
in
xchg
mov
call
imul
test
adc
adc
mov
pop
es
mov
sub
jmp
pop
dec
inc
push
mov
and
mulb
cmp
jnp
pop
popf
mov
imul
shlb
pop
add
ljmp
push
dec
jo
xor
inc
inc
std
push
jne
imul
insb
outsl
jnp
xchg
lahf
inc
inc
dec
ja
.byte
.byte
mov
