cmpsb
loopne
mov
add
test
lret
push
add
aaa
push
jo
das
and
nop
add
jo
mov
add
mov
sahf
icebp
add
mov
dec
inc
add
stos
sti
sub
int3
push
add
les
scas
imul
add
mov
fstl
mov
add
add
out
add
add
dec
xor
adc
jns
call
sbb
mov
repnz
sbb
add
adc
xor
mov
or
add
into
leave
je
sbbl
stos
cmp
fcomip
add
test
add
mov
add
push
mov
outsl
mov
std
xor
aas
stc
push
hlt
add
mov
cmc
fsts
add
add
mov
add
add
loope
xchg
add
add
add
and
scas
xchg
add
dec
testl
pop
cmpsl
mov
push
add
add
add
test
add
icebp
dec
mov
ljmp
mov
pop
shll
mov
shll
fiadds
add
icebp
mov
or
movsl
add
add
jno
and
mov
xchg
mov
cwtl
enter
pusha
add
in
stos
jle
add
add
sub
addr16
outsl
sub
pushf
and
mov
pop
setp
add
fisubs
add
sbb
add
mov
jne
xor
inc
add
push
mov
add
sub
jge
jg
mov
cmp
mov
xchg
add
add
add
inc
dec
push
add
add
add
add
or
sub
cwtl
mov
pop
outsb
pop
jae
or
add
addr16
xor
add
addb
push
add
push
mov
add
add
inc
jecxz
lds
pop
push
popf
maxps
outsl
jl
fcomps
push
cli
add
lock
ja
jnp
push
add
xchg
sbb
cmc
jg
out
pop
cmpsl
add
in
push
add
jns
add
pop
cltd
jp
repz
mov
hlt
add
and
lods
xor
push
jbe
jmp
sbb
and
mov
xlat
push
testb
add
add
add
push
add
pop
inc
pop
cs
add
mov
inc
add
and
add
addr16
ret
add
add
add
adc
stos
sbb
jmp
sub
add
cmpsb
add
mov
fidivs
or
and
rolb
push
aas
cmp
test
inc
add
push
rolb
pop
loope
rolb
push
inc
add
push
mov
out
add
mov
xchg
sbb
xchg
mov
out
and
mov
sbb
push
push
add
scas
xchg
nop
add
outsl
add
push
add
inc
add
and
add
mov
out
pop
xchg
add
push
add
rolb
lock
push
push
add
sbb
in
add
rolb
rolb
rolb
hlt
add
add
or
xchg
aas
push
add
add
repnz
out
test
add
test
add
fcomi
add
add
xchg
scas
jl
frstor
push
add
add
into
pusha
add
add
test
hlt
add
add
jmp
or
add
inc
add
insl
fistpl
pusha
add
add
mov
test
dec
icebp
aaa
or
add
add
add
scas
xor
sub
cmovne
movb
daa
ret
sbb
jmp
dec
mov
sbb
mov
cmp
sub
add
cs
sbb
mov
add
mov
jecxz
and
inc
mov
leave
sub
cmp
pushf
push
add
lods
test
dec
fisubrl
pop
jge
mov
push
pop
stos
inc
adc
sbb
add
cwtl
adc
test
push
add
or
add
mov
mov
push
jnp
push
add
int3
xchg
mov
leave
push
imul
add
add
add
aas
std
dec
mov
xchg
lret
sbb
mov
dec
jae
xchg
les
iret
mov
jecxz
mov
out
add
add
mov
or
sub
add
xchg
nop
add
add
add
mov
mov
jb
cmp
inc
add
add
add
add
mov
mov
add
cmp
add
jecxz
ja
int3
scas
daa
pop
test
add
rolb
addb
dec
sbb
stos
ret
add
int3
add
pusha
add
call
add
cltd
lea
xor
push
std
and
xchg
add
mov
add
add
push
stc
arpl
subl
push
nop
add
jo
ds
pop
pop
pop
cmp
mov
push
add
clc
cld
xor
push
add
jle
add
orl
fisubl
gs
pop
mov
adc
lods
jecxz
jns
cmpsl
and
out
es
sbb
mov
add
into
sub
mov
shll
popf
sub
test
rcrl
sbb
aam
out
xchg
add
mov
lret
dec
jl
imul
add
add
add
jbe
mov
dec
cmp
add
add
lds
out
add
dec
sti
popf
fdivrs
add
sub
in
add
mov
xchg
add
scas
pop
adc
icebp
xchg
lods
cmp
inc
add
mov
push
add
xchg
int3
shrl
cld
in
addb
add
mov
movsb
add
loopne
sub
push
mov
inc
cltd
addb
pop
ret
inc
gs
inc
xchg
add
dec
repz
fwait
sbb
sub
outsb
xor
add
add
pop
mov
out
add
mov
ret
je
mov
jmp
add
mov
add
jge
movsl
mov
add
sub
loop
push
gs
rolb
xchg
add
add
cld
fiaddl
add
xor
or
add
add
mov
ds
filds
in
mov
xchg
add
int
adc
adc
inc
add
fsubrl
xor
jo
sbb
lahf
enter
pop
lea
xchg
mov
add
and
mov
pop
jns
add
push
add
add
mov
xor
add
hlt
add
repnz
leave
jg
pop
jo
add
add
add
fldenv
add
xor
in
mov
and
les
inc
add
or
adc
and
nop
add
jae
loope
das
xchg
inc
xchg
add
inc
add
rolb
or
je
or
push
add
jns
and
jg
adc
mov
cld
outsl
xchg
sbb
push
add
add
add
add
sbb
jno
dec
movsb
add
scas
daa
cli
pop
ja
xlat
pop
lock
xchg
pop
addb
mov
je
fbld
add
push
add
lret
inc
add
mov
adc
pushf
enter
add
add
outsl
pop
xor
mov
sahf
push
add
add
popf
or
fcmove
rolb
add
arpl
jp
add
ret
adc
xchg
das
mov
jbe
out
mov
out
sar
jecxz
add
add
mov
add
or
add
sub
pop
sub
jmp
jg
add
jne
add
add
jbe
cwtl
jnp
add
xor
mov
add
je
scas
in
mov
jg
push
js
rolb
mov
rcr
ja
inc
add
inc
add
add
cmpsb
add
xchg
cmpsb
add
ret
xchg
add
push
add
and
add
outsb
sarl
add
xchg
add
dec
cmc
jo
popf
sbb
mov
popa
dec
ds
fisubrs
xorl
pop
push
std
jmp
push
filds
cmpsl
data16
rolb
add
stos
xchg
add
rolb
mov
push
add
add
mov
add
mov
add
pop
arpl
sahf
xchg
ficomps
add
xchg
mov
add
fnstsw
add
add
cli
insb
les
mov
out
inc
lods
ljmp
dec
pop
xlat
decl
adc
outsb
jnp
push
testb
sub
xor
adc
add
pop
popa
data16
add
lcall
jmp
xchg
add
and
ficoml
add
push
add
arpl
mov
ror
pop
lret
add
add
or
sub
mov
inc
add
inc
add
cwtl
inc
add
add
stos
xchg
imul
add
cli
and
add
lea
ja
pushl
push
add
add
pop
or
add
xchg
enter
nop
add
mov
jnp
add
and
cmp
sbb
in
sub
xchg
sbb
mov
sub
push
push
push
cld
call
sub
mov
cs
movzbl
cmp
ss
push
push
push
call
cmp
je
es
lea
cs
cs
es
call
test
jne
jmp
push
lret
icebp
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
lea
lea
sub
add
mov
sub
sub
push
pop
push
je
jmp
add
add
call
fisubs
add
into
cmp
add
add
add
ficomps
add
shrl
lea
into
push
add
xor
mov
jae
pop
in
cmpsb
add
daa
jp
cmp
jle
inc
add
data16
sub
pop
insb
sahf
adc
or
addb
lret
xor
outsl
bound
mov
ficompl
in
loop
fmull
dec
add
sbb
and
mov
push
jp
sub
test
and
hlt
add
add
fidivrl
int
add
int
loop
mov
cwtl
mov
add
add
jmp
jecxz
fstps
dec
jge
popa
movsb
add
add
into
add
hlt
add
loope
xchg
stos
add
sbb
std
movsl
jo
pushf
xor
jae
fildl
rolb
mov
add
bound
mov
cmc
pop
arpl
pushf
stc
jmp
sbb
popl
add
out
jno
add
add
js
sub
adc
cli
pop
adc
adc
add
adc
test
inc
push
add
add
rolb
add
and
xchg
movsl
ret
popa
les
hlt
add
mov
add
aam
cmp
std
push
add
dec
out
dec
inc
add
add
jp
repnz
add
imul
out
inc
jmp
add
mov
add
scas
idiv
adc
testb
push
dec
cltd
imul
cmp
add
loope
aaa
inc
cltd
sub
sub
test
push
mov
jnp
aas
mov
cmp
add
add
cltd
add
addb
pop
and
ret
mov
mov
ret
bound
mov
ja
call
pop
push
nop
add
jle
add
jo
insl
inc
add
pop
leave
and
add
mov
scas
aam
jl
jmp
mov
popf
xor
test
aas
shrl
add
push
add
stos
xchg
mov
add
add
xchg
add
js
xor
push
add
addr16
adc
lods
outsl
lret
inc
and
int
pop
rolb
clc
testb
mov
mov
pop
insl
hlt
add
aad
test
mov
stos
rolb
xor
loope
add
or
mov
movb
enter
adc
xchg
add
adc
jecxz
icebp
jae
add
sbb
add
add
adc
cltd
insl
push
add
lock
stc
jbe
cld
sub
add
out
out
dec
and
int3
pusha
add
pop
mov
outsl
repnz
insb
addb
mov
adc
add
add
xor
and
mov
loopne
lret
push
add
aad
add
push
add
add
daa
lods
mov
rolb
fwait
testb
add
ja
repnz
test
mov
cmp
data16
xor
das
sub
dec
mov
or
add
xor
addb
fwait
mov
shr
jmp
loopne
fstps
clc
mov
jl
mov
add
add
xchg
imul
xchg
cld
adc
add
outsl
dec
mov
sbb
jo
addb
fwait
lea
clc
fistps
add
add
jno
add
add
add
jnp
add
inc
lds
add
mov
add
shr
insb
and
fistps
stc
pop
xor
add
mov
xor
stos
push
add
lcall
push
test
not
add
add
cmp
add
ret
push
add
add
je
testb
add
dec
sbb
add
fs
pop
pop
add
popa
xchg
stos
push
xchg
add
add
insb
lds
add
pop
jl
add
in
enter
icebp
mov
adc
push
adcl
fstpl
lret
fbstp
adc
addb
lret
daa
xchg
add
add
es
and
mov
mov
adc
cmp
xchg
sbb
push
add
add
xchg
inc
std
std
add
push
xchg
jo
push
add
in
jmp
lock
add
pop
push
pop
and
out
push
add
pop
jbe
jle
add
add
cmp
jb
addb
jnp
cwtl
movsb
add
cmpsl
cmp
push
add
add
in
popf
add
add
addr16
mov
das
sbb
xchg
dec
out
add
pop
pushf
and
mov
mov
aam
data16
in
add
ljmp
add
in
lret
mov
inc
lods
cmp
jb
jmp
sbb
add
nop
add
cld
aaa
lods
lock
cs
filds
add
cld
xor
mov
cmpsl
push
xchg
add
sbb
fmull
cmp
push
add
xchg
or
pop
mov
jo
movb
loop
sarl
sub
add
add
dec
push
jl
fxch
sbb
and
stc
mov
lcall
rolb
movb
fistl
jo
icebp
push
add
mov
jg,pt
aas
nop
add
add
aad
add
add
push
add
cmpsb
add
addb
ljmp
sub
add
add
mov
mov
sub
ret
aas
jmp
dec
xchg
and
test
mov
mov
push
add
add
stos
or
or
add
mov
test
fwait
sbb
cmpsl
movntps
fstps
insl
pusha
add
fisubrs
jae
add
fdiv
push
push
add
or
add
out
fsubr
rolb
mov
aas
fnsave
jo
test
les
into
mov
ja
imul
fmuls
rolb
add
ret
jb
mov
jnp
test
xchg
lock
jnp
add
add
add
cmpsb
add
mov
fst
std
scas
jge
and
pop
lret
xchg
add
lods
fsubs
add
mov
add
push
add
adc
jns
add
repz
enter
sbb
push
cli
mov
cmp
data16
add
hlt
add
add
mov
add
dec
aam
fisubl
sub
into
jne
sbb
mov
repz
scas
mov
arpl
mov
xchg
add
push
add
xor
add
rolb
popf
push
add
adc
pushl
mov
stos
into
addb
push
or
je
mov
mov
add
add
add
mov
and
mov
fldt
mov
stos
rcll
add
push
sbb
jo
jns
ja
sti
jge
sub
fprem
push
pushf
dec
xchg
rolb
arpl
cmp
stc
cs
inc
fdivs
jno
jne
pop
xor
mov
fcoms
scas
fmul
loopne
in
addb
arpl
add
dec
ljmp
mov
add
sahf
gs
xchg
ja
call
fidivrl
in
add
mov
aam
lds
rolb
xchg
lods
vprotb
jae
sbb
mov
cmp
add
and
rcl
loope
mov
dec
xchg
add
sbb
mov
add
sbb
fdiv
outsb
in
orl
add
add
mov
pmulhuw
cmp
add
mov
cli
jge
dec
jecxz
add
rcll
push
dec
dec
fs
add
add
add
inc
push
add
xor
aaa
sub
add
cld
dec
jge
loope
add
testb
add
cmp
pop
jae
hlt
add
add
add
mov
add
mov
cmp
mov
cmp
add
dec
push
pop
sub
fwait
inc
es
mov
pop
push
outsb
rolb
mov
bound
mov
add
mov
mov
ljmp
imull
sahf
mov
es
sti
xor
in
subl
jge
add
xor
jecxz
dec
dec
cmp
pop
push
add
gs
jo
add
mov
xchg
rolb
push
add
push
add
add
mov
add
rolb
sbb
xchg
arpl
das
lock
fwait
pop
sub
add
bound
mov
jae
adcl
push
add
jne
add
cltd
xchg
cmpsb
add
loop
repnz
mov
mov
jle
adc
mov
push
add
push
jp
ret
add
add
cmp
add
add
int
jbe
jle
push
int
add
int
sahf
js
in
rolb
sbb
jae
sbb
inc
add
add
lret
movsl
insb
into
xchg
div
lcall
pop
rolb
add
xor
add
or
andl
push
add
add
mov
outsl
inc
add
inc
cwtl
cmpsb
add
lock
add
add
mov
addb
add
add
adc
jge
stc
lods
add
push
add
or
add
mov
std
mov
cmpsb
add
push
add
in
push
add
sbb
push
add
jmp
add
sbbl
mov
mov
cmp
add
add
inc
add
and
xchg
sub
add
add
int
add
iret
fwait
insb
shrl
call
mov
mov
jmp
jae
shrl
add
fadds
inc
add
add
push
and
mov
add
sub
cmp
rolb
pop
out
out
jb
dec
ret
adc
or
sbb
addb
add
adc
mov
lods
testb
mov
add
cmpsl
add
jne
add
arpl
add
cwtl
mov
add
leave
lcall
int3
into
lcall
cmc
bound
mov
cmc
or
fs
pop
sub
jp
add
add
add
and
add
std
test
iret
mov
jb
push
add
xor
mov
sub
add
in
sbb
jmp
xor
mov
cmp
leave
jns
sub
push
sbb
or
add
loop
xchg
js
fstpt
das
xchg
add
jp
jp
out
loop
sub
mov
add
dec
xchg
mov
hlt
add
jmp
add
add
pop
dec
and
add
out
icebp
sbb
add
mov
mov
inc
add
sbb
mov
add
add
dec
mov
mov
insb
jbe
cmp
jo
and
bound
mov
jmp
loope
add
movsl
popa
mov
add
cmc
mov
rolb
cmp
add
inc
xchg
or
add
fadds
add
and
fwait
clc
inc
sbb
aam
push
add
js
addb
test
dec
adc
dec
mov
inc
add
jecxz
add
push
add
push
add
jae
pop
out
xchg
add
sbb
jecxz
add
add
add
and
mov
icebp
pop
mov
decb
inc
test
dec
sub
add
cs
aam
outsb
sahf
les
add
stc
data16
lods
lds
cltd
inc
add
loop
push
add
add
add
icebp
scas
mov
sahf
mov
and
loopne
les
test
mov
add
pop
ja
add
jb
jbe
stos
cmp
arpl
mov
outsl
mov
push
add
add
add
jo
aad
xchg
test
addr16
add
push
cmpsl
leave
lea
dec
sarl
push
and
mov
ror
sbb
pop
mov
add
sbb
cmp
test
add
mov
mov
jp
out
movsl
push
add
or
stos
repnz
add
jns
push
adc
stos
ret
dec
rolb
adc
lock
add
hlt
add
ficoml
jmp
dec
lret
stc
ror
sub
add
add
cli
sbb
push
add
push
add
add
cmc
fwait
push
push
aad
add
sbb
add
aaa
adc
mov
add
add
mov
sahf
pop
jl
jp
outsl
xor
add
push
and
mov
clc
xor
add
mov
add
mov
dec
or
sbb
pop
mov
adc
out
out
xchg
add
fildll
lods
adc
adc
pop
imul
je
lods
ja
add
adcl
add
jge
add
add
cwtl
pop
imul
mov
bound
mov
scas
icebp
fsts
add
or
popa
sub
jb
push
add
jo
arpl
jp
and
inc
add
mov
inc
add
add
cmpl
pop
or
add
add
roll
cwtl
ret
jl
xor
or
and
add
xchg
add
cmpsl
fadds
add
jle
pusha
add
mov
add
pop
outsb
loop
xchg
andl
mov
xchg
dec
inc
add
add
lods
outsl
inc
add
add
nop
add
push
fmull
pop
out
dec
and
push
add
stos
lret
add
add
and
or
addr16
test
ret
add
pop
fildl
add
pop
push
add
add
add
fwait
mov
rorl
add
mov
and
inc
das
add
adc
add
add
lret
cmp
test
pop
dec
pop
pop
aaa
xor
add
popf
shll
or
cltd
xor
mov
pop
je
incb
addb
addb
jp
sub
mov
lods
test
mov
test
icebp
addb
add
mov
data16
add
add
xchg
jecxz
add
sub
xchg
pop
sub
scas
xchg
push
or
std
dec
adc
inc
add
add
loop
imul
leave
inc
inc
ret
dec
ficomps
out
jmp
add
add
add
add
jmp
add
mov
lods
mov
add
add
pop
iret
xor
aam
pop
pop
hlt
add
adc
jno
add
add
jecxz
add
add
mov
mov
mov
mov
xchg
xor
in
pusha
add
sbb
xor
nop
add
add
pop
mov
fdivrl
lds
sbbl
dec
jo
testl
add
add
sub
add
xchg
out
cmpsb
add
jle
xchg
dec
les
mov
mov
outsb
imul
push
add
fwait
mov
sub
xchg
cli
dec
jge
add
sbb
clc
mov
fidivl
xchg
aaa
sub
add
add
jne
add
stc
fidivrl
inc
add
add
jae
jge
add
add
addb
test
xchg
rolb
test
mov
jnp
nop
add
mov
and
mov
sbb
cmp
mov
add
out
mov
cmc
push
int
fnstsw
or
add
push
add
add
mov
insl
mov
add
in
xor
inc
add
sub
jb
je
iret
inc
push
add
and
inc
add
inc
add
lret
mov
add
loop
out
cltd
mov
sbb
fistpl
shll
les
fucomp
js
and
mov
cmp
add
inc
xor
pop
inc
add
scas
cmpsb
add
add
test
scas
into
push
add
mov
push
add
jecxz
std
push
sub
add
sbb
add
jmp
jl
add
inc
add
aas
xlat
out
add
addb
in
xor
fisubrs
lahf
movsb
add
popf
test
addr16
pop
outsl
xchg
adc
fnstenv
les
clc
stos
jae
adc
add
in
jle
pop
xchg
add
pop
cwtl
scas
les
xor
pop
cli
addb
in
and
mov
sub
jne
jne
pop
lea
dec
jle
test
mov
add
or
cmpsb
add
jmp
ja
or
adc
inc
rolb
add
xchg
cld
mov
fdiv
add
add
add
and
inc
add
add
xchg
insb
jle
xor
jp
sti
pop
lock
add
jnp
or
out
push
add
adc
test
add
mov
add
je
mov
loop
loop
and
mov
pop
rolb
pushl
fcom
mov
mov
iret
dec
insb
dec
dec
mov
inc
mov
add
push
add
or
jns
dec
shrl
loopne
faddp
mov
mov
add
rcrl
mov
mov
test
pushf
mov
cmpsl
push
add
add
in
testb
add
xor
cld
mov
add
add
xor
dec
ret
fwait
jo
inc
add
add
daa
mov
mov
mov
and
mov
jo
lock
add
add
jae
add
mov
add
add
mov
pop
xor
stc
divl
mov
in
imul
cltd
out
std
xchg
ja
mov
dec
add
add
repz
dec
xchg
add
sbb
add
and
mov
xchg
or
and
mov
add
and
ja
mov
add
addr16
cmp
mov
rcll
xchg
add
add
add
cwtl
mov
dec
push
add
jge
stos
mov
pop
sarl
fidivl
add
test
mov
pushf
out
lods
add
addb
xchg
add
add
push
add
push
add
test
push
fstl
lods
out
jne
ret
add
sbb
in
cmp
add
imul
movb
jmp
add
stos
mov
add
mov
stos
fnsave
cmp
and
mov
or
jno
std
fcmovnb
add
and
jno
add
add
jb
addb
xchg
add
stc
addb
add
sub
sbb
je
xchg
add
add
cwtl
jmp
movb
inc
movb
xchg
push
add
gs
jb
sbb
jno
add
add
pop
sub
clc
sub
rolb
test
in
inc
add
add
lret
out
fisubrs
xor
mov
push
add
cmc
inc
add
orl
xchg
pop
sbb
xor
hlt
add
pop
mov
adc
pushf
inc
add
mov
cmc
cltd
imul
add
add
mov
hlt
add
add
adc
testl
enter
add
push
sbb
testb
sub
mov
mov
mov
shrl
lds
mov
or
call
repnz
push
add
add
mov
or
add
add
sahf
sbb
add
pop
out
push
xor
shll
add
rolb
jmp
data16
jae
add
add
add
xor
inc
add
and
mov
fidivrs
sahf
sub
lahf
fs
inc
add
lret
fsubrl
xor
or
jmp
push
push
add
jp
adc
fistl
add
mov
aad
adc
cli
inc
mov
add
nop
add
xchg
add
add
movsl
adc
popa
pop
lcall
add
add
data16
jbe
xchg
or
push
sbb
push
movb
add
mov
test
jb
inc
shrl
pop
and
mov
push
add
inc
cmpl
imul
cwtl
and
mov
pop
test
push
je
fstps
add
or
jno
lahf
pop
insl
and
mov
fwait
xor
push
pop
mov
es
add
addr16
add
add
pop
and
stos
jns
add
jae
mov
inc
mov
jns
add
dec
mov
cli
add
or
pop
sbb
add
mov
add
icebp
inc
outsb
in
pop
dec
cmp
dec
ja
icebp
test
repnz
ja
mov
pop
mov
add
add
push
jmp
cltd
mov
pushf
jne
mov
add
add
or
add
add
rcrl
add
add
jl
cmp
xlat
ds
in
cmp
mov
or
pushf
shll
add
pop
iret
sub
or
add
add
add
pusha
add
and
xchg
mov
sahf
movsl
or
jg
add
ja
into
cmc
sahf
dec
push
add
pop
mov
pusha
add
dec
loope,pt
dec
cltd
repz
out
pop
flds
fisubrl
push
inc
add
mov
flds
add
sbb
testb
aas
add
mov
mov
push
add
add
mov
loop
test
repnz
insb
insl
out
addb
lods
nop
add
add
std
inc
sbb
xchg
nop
add
cmp
sub
sahf
rolb
push
add
cmp
add
jnp
fs
ja
loopne
dec
push
add
push
add
add
or
imul
push
add
test
addb
add
into
xor
sbb
out
xchg
add
add
cmc
repz
pop
decl
shrl
jecxz
insl
add
mov
add
jne
adc
rcrl
mov
pop
call
add
add
mov
imul
xchg
add
mov
mov
jb
xor
jecxz
adc
aas
push
add
add
mov
lea
push
add
mov
jl
add
mov
xlat
push
add
addb
test
add
lods
insl
das
sti
jno
add
push
add
out
jecxz
xchg
add
outsl
jo
add
mov
sub
movsl
enter
add
pop
imul
jp
aaa
jnp
mov
add
add
popl
repz
mov
push
test
or
rorl
add
movsb
add
push
outsl
int3
jne
lock
sbbl
inc
add
add
std
mov
xchg
pop
or
add
add
mov
xor
mov
add
enter
je
in
test
add
add
add
add
xchg
xchg
jmp
cmc
daa
call
add
cmpsl
loopne
adc
add
nop
add
imul
mov
jge
xor
pop
jae
cmp
xchg
add
rcrl
in
in
mov
add
mov
adc
inc
add
mov
add
add
add
add
and
mov
mov
inc
inc
add
pop
ret
sub
dec
popa
add
mov
adc
push
add
add
pop
add
mov
dec
dec
jno
cmp
jmp
add
movsl
outsb
aad
add
xchg
push
add
stos
in
xor
cmp
mov
pop
imul
add
add
add
push
lahf
testb
dec
sub
insb
cmpsl
les
mov
sub
add
mov
addb
lret
mov
mov
add
aas
test
pop
jbe
push
add
add
sub
addb
fmul
aam
test
icebp
jbe
pop
mov
add
add
movb
adc
xor
das
pop
lds
jmp
inc
inc
add
add
dec
or
addr16
inc
add
stos
sbb
movsl
mov
cli
jb
dec
xchg
sbb
dec
imul
out
stos
daa
mov
add
js
xchg
or
add
sbb
sbb
lcall
adc
cli
imul
repnz
inc
add
jmp
add
dec
das
push
add
fistps
add
add
cli
dec
scas
pop
and
rcrl
add
and
mov
aam
icebp
jge
and
mov
add
pop
stc
ret
pop
sbb
bound
mov
add
in
movsb
add
sbb
mov
lods
ljmp
or
pop
cltd
repnz
into
fucom
add
add
sbb
ss
lods
in
fisubrs
mov
mov
add
fstp
push
addb
xor
mov
add
add
mov
movsl
jl
add
test
repz
imul
cmp
add
and
dec
arpl
add
idivl
add
add
add
mov
jns
bound
mov
add
sbb
and
loope
mov
pop
clc
jecxz
rorl
add
add
clc
pop
pop
scas
in
cmc
jo
pop
jne
add
cs
cld
jp
cmp
sahf
imul
add
in
cmc
mov
shll
add
movb
jl
rolb
push
add
pop
repz
add
mov
add
mov
scas
and
mov
js
movsb
add
jbe
jae
sbb
add
icebp
push
add
cltd
movsl
ret
scas
mov
int
add
add
add
lea
mov
xchg
cmp
sbb
add
add
stc
pop
jge
add
inc
add
add
or
add
add
cmc
mov
add
mov
je
rolb
add
mov
inc
mov
test
sbb
and
pushf
les
bound
mov
add
add
add
outsb
fstpt
inc
fnstenv
cmp
inc
xchg
mov
jle
mov
xchg
nop
add
fisubs
push
add
mov
sbb
add
push
pop
mov
int
add
sbb
insb
mov
shrl
add
clc
or
add
add
sbb
adc
add
mov
add
add
pop
or
xchg
xlat
lea
mov
ja
add
iret
iret
jo
fmull
notl
aas
popf
xor
add
and
mov
add
and
std
pop
sbb
sbb
dec
out
stos
sub
movb
int3
icebp
or
iret
and
add
add
bound
mov
add
sarl
test
xor
inc
add
jbe
sbb
cwtl
mov
push
adc
fsubrs
rolb
add
lods
movsl
jae
arpl
add
add
add
add
add
add
add
fmul
inc
add
add
or
and
mov
popf
jnp
int
add
cli
push
add
add
jmp
add
pop
mov
pop
cmp
or
xchg
add
add
dec
push
add
addr16
sub
hlt
add
shll
in
stc
testb
lret
sub
add
add
test
repnz
cmp
dec
aam
test
fwait
and
mov
fsubrs
add
add
outsb
loopne
loopne
mov
mov
cs
lea
cltd
ja
lock
push
add
add
dec
in
ljmp
jne
bound
mov
adc
loope
cmpsl
iret
sbb
data16
cld
shll
addb
inc
call
cs
les
inc
add
stos
mov
icebp
adc
out
out
jb
dec
arpl
add
pushf
xchg
add
clc
les
sub
add
fnstenv
add
lock
add
popa
aaa
lock
add
not
mov
pop
mov
push
add
add
lock
cmp
movsl
cli
in
and
cld
aas
aad
add
mov
adc
xor
inc
jle
out
mov
shufps
or
add
add
mov
push
add
add
rolb
pop
mov
mov
push
jo
test
rcl
add
mull
mov
or
push
mov
add
xchg
mov
mov
add
mov
loope
add
rolb
repz
mov
pop
lods
lret
in
dec
in
cmc
xor
add
outsl
jg,pn
mov
dec
sbb
mov
add
mov
pop
cmp
and
mov
mov
push
iret
int3
jnp
js
add
mov
das
adc
sbb
mov
cwtl
lret
ja
add
add
add
jnp
in
out
xchg
stos
repnz
add
repnz
pop
mov
aas
test
mov
jb
cmp
add
add
ret
and
add
leave
addb
add
pop
push
and
movb
add
mov
add
adc
pop
inc
add
add
xchg
add
outsl
ret
cmpsl
xor
and
jo
cmp
cmp
mov
cld
adc
ja
data16
mov
enter
fidivs
add
xor
jbe
inc
add
mov
add
add
add
add
push
add
icebp
cwtl
int3
sbb
add
mov
add
test
fmuls
add
jg
jbe
and
mov
scas
test
inc
add
out
aam
out
pop
cwtl
sbb
fbstp
imul
add
add
movsl
cli
loope
mov
out
sbb
add
sub
add
mov
les
bound
mov
enter
fdivrs
dec
test
mov
sti
sbb
arpl
rcrl
lret
bound
mov
add
mov
xor
pusha
add
and
mov
jg
sbb
add
xor
dec
sub
add
add
add
bound
mov
outsl
sbb
add
icebp
insl
inc
mov
adc
jecxz
in
icebp
and
mov
add
rcl
add
add
jp
addb
shl
dec
jl
sub
add
hlt
add
jns
add
add
data16
rcl
add
rolb
mov
aas
pop
mov
insb
dec
cmpsb
add
cmpsl
cmc
insb
pop
outsl
iret
mov
imul
clc
mov
scas
adc
clc
and
mov
add
sub
add
mov
test
cmpsb
add
and
cmp
clc
fiaddl
mov
cmp
add
ja
and
mov
add
ffree
add
jb
dec
jp
add
add
pop
xor
cli
cwtl
inc
mov
add
imul
mov
add
test
add
add
push
xchg
add
add
lods
dec
ret
pop
imul
fstp
fcmovbe
dec
mov
in
cmpsl
mov
popa
in
mov
inc
add
xorl
repnz
push
jbe
popa
out
inc
add
and
add
mov
pop
in
jbe
mov
jb
and
mov
jmp
fists
add
add
add
dec
call
pop
in
dec
dec
pop
addb
or
inc
add
pop
stos
and
mov
scas
pop
repnz
test
je
ret
add
and
mov
fwait
xchg
into
fbstp
add
add
pop
push
push
push
add
mov
and
cli
jecxz
aas
pop
dec
dec
xadd
mov
xchg
add
jp
push
sub
add
mov
push
xor
fdivp
outsb
cwtl
xchg
dec
add
mov
rolb
add
addb
adc
cmp
jnp
pop
dec
adc
cmp
dec
ljmp
shr
jbe
movb
add
out
fwait
sbb
push
push
sbb
test
mov
pop
lea
dec
sti
or
dec
std
or
and
add
jge
add
add
ret
bound
mov
cli
inc
add
xchg
add
mov
jne
in
and
mov
xor
cmp
mov
adc
mov
clc
dec
sti
mov
pop
mov
ror
mov
xchg
add
add
mov
fstpt
add
add
fwait
call
and
mov
add
or
add
adc
push
cwtl
dec
sbb
dec
std
dec
xchg
add
xchg
jl
popa
cmp
sub
add
bound
mov
in
dec
sti
add
mov
jbe
lret
daa
mov
aam
adc
add
setge
ret
add
sub
xor
inc
add
pcmpgtb
push
add
mov
fistps
push
fsubl
mov
add
sbb
pop
mov
lret
in
nop
add
mov
popa
cld
inc
add
aad
mov
sub
add
mov
push
adc
push
mov
aad
add
in
add
adc
fldcw
and
xor
iret
jp
popa
lock
aam
push
mov
jns
popf
ficoml
repnz
and
mov
mov
add
add
add
rolb
mov
add
adc
mov
rol
repnz
and
dec
mov
pop
arpl
mov
xchg
dec
mov
xchg
mov
jge
push
cmc
sub
daa
aaa
sarl
inc
add
add
add
jp
add
add
sub
sub
add
xor
xor
iret
gs
stos
rolb
cmp
xchg
dec
xchg
mov
and
pop
cmp
add
add
mov
pop
jle
add
add
add
rcrl
fnstenv
add
add
rcll
add
jl
add
sahf
push
push
add
cwtl
aad
add
mov
jg
add
mov
add
mov
jmp
add
add
jge
add
add
add
dec
sub
out
lea
roll
add
std
int
clc
mov
daa
mov
outsl
mov
inc
add
add
mov
mov
add
add
mov
lods
mov
add
sub
aaa
popa
dec
and
stc
xor
jae
lahf
cmp
xor
dec
or
shl
add
dec
add
mov
or
rolb
test
call
add
and
inc
push
add
add
addb
lret
adc
in
les
cmp
je,pt
imul
pop
call
sub
movb
and
xchg
add
add
test
pushf
lahf
jns
push
add
inc
add
add
add
add
mov
jecxz
sar
mov
cli
ljmp
adc
xor
addb
js
add
lahf
or
and
add
ret
push
mov
mov
sbb
pusha
add
pop
mov
rolb
jne
add
pop
sbb
add
add
cmpsb
add
pop
add
lret
add
gs
cmp
push
add
das
loope
add
ret
rolb
movsb
add
xor
out
jns
das
jb
xlat
xor
mov
xchg
xchg
add
add
add
testb
fcomps
mov
sbb
pop
fsts
dec
jmp
add
xor
jg
push
mov
inc
add
mov
add
and
jmp
addb
add
add
or
scas
push
add
dec
inc
stc
in
add
divl
push
bound
mov
add
mov
cmp
add
rep
aam
lret
mov
mov
inc
add
add
add
lret
std
pop
mov
cmp
add
loope
add
imul
add
test
mov
cs
adc
je
cmc
mull
xchg
lds
add
add
add
test
cld
fldcw
mov
ja
cmp
add
rcl
add
mov
add
add
ret
pop
cmc
cmpsb
add
xchg
inc
add
push
nop
add
jnp
add
mov
sti
in
shll
add
add
dec
sbb
dec
in
mov
js
insb
add
scas
xor
sub
add
add
push
add
cli
fstpt
movb
cmp
add
mov
add
xchg
fwait
push
mov
adc
sub
lods
lock
movsl
fildl
lds
stc
mov
dec
je
dec
sbb
add
stos
iret
add
add
mov
mov
cli
and
mov
and
add
and
mov
repnz
or
jne
add
add
pushl
cld
repnz
cli
push
xchg
mov
xchg
add
mov
add
dec
mov
test
inc
fdivrp
jle
push
xchg
test
add
add
jb
stos
clc
xchg
add
add
movsl
push
add
mov
add
add
cmpsl
mov
xchg
add
sub
add
add
add
xchg
add
sub
jle
ljmp
add
sti
jg
add
jnp
sub
ficoms
jmp
jnp
outsb
and
add
add
jb,pn
mov
xchg
or
dec
ljmp
add
add
jle
imul
int
mov
cmp
sbb
add
sahf
pop
jecxz
fnstsw
iret
in
dec
sub
pop
mov
mov
out
mov
sbb
mov
and
in
cmp
leave
in
or
add
add
dec
or
jnp
add
imul
push
add
add
gs
push
bound
mov
sub
mov
cltd
add
jmp
add
push
or
cs
out
dec
sti
sti
mov
shrl
imul
push
add
punpckhbw
or
ficoml
inc
add
inc
add
mov
cmp
push
add
add
lcall
popf
jns
add
pop
dec
addb
aaa
arpl
push
insl
dec
repz
mov
inc
add
cltd
addl
adc
hlt
add
ljmp
arpl
cli
daa
repz
sub
mov
add
add
mov
jns
mov
mov
scas
xor
mov
xchg
jle
add
add
lahf
daa
ds
add
jp
sbb
add
add
push
add
add
jg
js
push
add
dec
testl
add
push
fsubl
mov
add
cmc
addr16
xor
jp
outsl
adc
add
mov
push
rolb
sbb
add
mov
loope
add
pusha
add
stc
add
jno,pt
lret
sub
add
fcoms
sbb
stos
xchg
int
stos
pop
inc
fwait
data16
dec
pushf
sub
add
push
add
add
popf
jge
add
scas
fldt
pop
mov
loop
fimull
repz
mov
sbb
or
push
add
pop
scas
addb
add
pop
sub
jle
add
fdivrl
xchg
dec
xlat
pushf
addl
aaa
inc
add
push
add
mov
into
inc
add
dec
ds
adc
jo
ficoms
add
decb
fld
out
pop
sub
add
pushf
mov
enter
jnp
add
test
popf
add
mov
cmp
adc
pop
lret
das
pop
movb
add
addb
repnz
sbb
add
js
js
jno
inc
add
das
mov
jg
add
mov
add
fcompl
mov
cmpsb
add
xchg
add
add
mov
fiadds
add
inc
add
xchg
outsb
fmull
sub
add
add
jecxz
inc
addb
pop
push
add
and
mov
jbe
or
clc
mov
mov
outsl
lds
add
add
hlt
add
clc
ficomps
or
out
imul
int3
jecxz
sub
add
xchg
add
jecxz
adc
sahf
push
cmp
fsubs
mov
daa
lcall
add
loope
jae
push
loopne
push
pop
mov
xor
adc
mov
int3
bound
mov
jb
ljmp
into
fsubs
mov
or
mov
mov
lret
mov
sbb
les
add
mov
testb
sub
bound
mov
into
mov
sub
add
or
add
add
and
adc
jne
add
add
stos
adc
sub
add
add
xchg
add
mov
or
add
add
mov
and
fpatan
pop
inc
add
popf
mov
xchg
add
dec
ret
jno
add
pop
jb
pop
in
inc
adc
cwtl
cwtl
and
je
xor
jne
mov
sti
lds
mov
and
jecxz
add
fdivl
dec
adc
int3
mov
add
jge
or
add
cmp
cmpl
mov
lods
in
mov
jmp
push
add
or
add
mov
add
mov
popf
pop
arpl
int3
test
das
cmp
add
add
lret
inc
cmp
push
add
out
add
in
or
daa
xor
mov
mov
nop
add
stc
test
ljmp
out
pop
push
add
inc
add
add
movb
add
pop
add
mov
arpl
push
mov
add
xor
movb
ja
out
dec
cmp
dec
pop
sbb
out
aad
movsl
call
sub
addr16
xchg
imull
fidivrs
gs
js
test
rolb
add
mov
add
fsubrl
add
add
adc
mov
add
add
test
dec
testb
add
add
ds
pusha
add
or
xchg
jae
add
cmpsl
jp
add
in
in
mov
add
and
jg
jl
mov
ljmp
xchg
adc
add
and
xchg
mov
cmp
cmp
and
and
mov
add
push
vfrczpd
mov
lods
lret
cwtl
push
add
adc
sbb
push
push
pop
pushf
push
mov
sbb
add
add
clc
outsl
fldenv
test
das
jg
sarl
dec
in
cwtl
cmp
jae
mov
and
mov
add
add
scas
sub
repnz
seta
ret
in
sub
in
into
ja
cmp
hlt
add
add
sbb
xor
test
icebp
pop
rolb
addb
cli
pop
mov
mov
jl
add
roll
daa
add
mov
push
add
xchg
add
sub
mov
add
add
mov
fcoms
js
inc
xor
add
jp
int
scas
stos
scas
rolb
push
add
add
cwtl
pop
pop
in
push
adc
fwait
pop
int
add
sbb
jno
stc
add
pcmpgtw
sub
push
add
insb
lods
jns
inc
add
jae
add
add
sbb
pop
xor
js
lahf
mov
push
add
lcall
add
and
mov
pop
dec
xor
mov
adc
jmp
add
dec
scas
cmp
add
xchg
add
iret
mov
mov
dec
pop
adc
add
push
movsl
mov
push
add
scas
push
jae
push
add
and
test
add
add
add
mov
add
or
add
push
add
xor
shr
push
sahf
push
aam
ja
sub
push
inc
or
mov
add
add
repnz
jo
ja
jl
mov
add
sbb
es
insb
ficoms
add
mov
setnp
test
les
mov
mov
add
std
int
addb
int3
jmp
dec
lods
xor
stc
jb
into
jl
insb
xor
add
mov
fildl
shll
stos
iret
and
mov
sbb
add
add
add
add
add
pop
dec
dec
add
call
add
add
jns
add
push
stos
xchg
dec
stc
call
pop
mov
es
fisubrs
stos
imul
add
cmpsl
or
in
dec
pop
jmp
add
xchg
add
hlt
add
in
push
jno
je
jns
add
add
hlt
add
cli
adc
lret
imul
add
add
dec
pop
popa
repz
insb
xchg
cwtl
js
adc
xor
xchg
add
add
xor
les
ffreep
add
into
push
add
mov
mov
add
push
addr16
push
lods
push
lret
add
shrl
add
test
rolb
aam
loope
fcomps
add
pop
cmpsl
jno
add
rolb
out
dec
rolb
loope
aaa
inc
pop
dec
leave
rolb
adcl
mov
sbb
add
push
add
jecxz
mov
rolb
rolb
push
xchg
in
pop
into
enter
xlat
enter
movsl
enter
add
mov
fistpl
mov
dec
adc
inc
add
dec
outsl
xorl
add
daa
cmp
add
ja
add
lahf
std
push
add
mov
sbb
mov
in
aas
add
mov
add
push
pop
or
mov
test
sahf
pop
add
jae
pop
dec
pushl
add
add
mov
push
add
add
add
jbe
xchg
push
pop
add
mov
add
data16
add
cmp
add
je
mov
outsb
icebp
add
mov
sbb
add
loope
mov
bound
mov
inc
add
add
add
add
fsts
add
push
sub
push
cmp
add
add
and
js
pusha
add
push
addb
aas
mov
xlat
in
iret
push
mov
lock
add
pop
push
add
push
ja
inc
add
mov
xchg
sti
int3
stos
movsb
add
add
add
inc
push
add
arpl
cmp
jecxz
and
nop
add
add
or
add
mov
test
add
jle
cmpsl
jne
clc
loope
inc
add
add
add
sub
sbb
sbb
jae
dec
enter
movb
hlt
add
xchg
add
mov
outsl
dec
sub
add
outsb
ljmp
cmp
movb
lahf
in
aas
lods
jno
pushf
push
add
bswap
or
add
add
inc
test
jge
sti
ret
sub
lods
cmp
push
fbstp
add
ss
add
call
add
scas
push
arpl
out
pop
aas
rolb
push
sub
inc
add
or
shrl
inc
add
pop
cld
mov
add
sub
add
lret
lahf
rorl
push
add
add
enter
ret
and
mov
or
nop
add
sub
int
add
lret
je
ja
sub
mov
add
add
push
add
movb
add
add
add
mov
in
xor
stos
xchg
add
add
add
add
inc
add
bound
mov
add
jecxz
mov
xchg
add
mov
add
in
dec
mov
je
jb
testb
or
rorl
mov
jp
stos
aaa
movb
popa
pushf
jmp
add
xor
icebp
xchg
cmpsb
add
add
in
test
enter
add
add
add
xchg
inc
add
outsb
cmpsb
add
mov
add
add
cmp
ret
outsb
pop
lods
push
add
add
orl
out
cmp
nop
add
adc
sti
adc
cltd
int3
lahf
xchg
add
add
add
xchg
add
in
sbb
add
push
add
add
cmp
je
mov
mov
add
sbb
add
add
rolb
je
js
add
mov
call
cli
cwtl
and
inc
add
fisttps
mov
add
daa
cmpsb
add
adc
adc
mov
or
inc
sub
adc
out
sti
out
mov
jecxz
xlat
movb
add
inc
xchg
testb
pushf
flds
mov
push
pop
pop
jmp
push
add
sub
add
sbb
add
mov
ljmp
les
outsl
and
push
add
add
rol
xor
push
add
ret
sahf
inc
add
push
add
add
sub
xchg
add
add
cmp
push
add
add
ret
xor
mov
add
sbb
add
nop
add
por
add
fsubl
mov
fcmovnu
rorl
into
repz
push
out
aam
stc
mov
and
cwtl
jo
push
mov
mov
add
push
add
mov
ja
add
mov
xor
xchg
add
xchg
pusha
add
pop
ret
sbb
add
xchg
xchg
stos
lods
iret
icebp
ds
ds
add
add
and
mov
push
add
sbb
repnz
popa
mov
add
jecxz
add
mov
add
js
bound
mov
int3
cltd
dec
fxch
xchg
mov
mov
pop
xlat
das
pop
dec
es
add
mov
mov
pop
add
clc
mov
add
mov
pusha
add
add
add
enter
enter
jns
mov
mov
xlat
adcl
ret
xor
icebp
push
call
pushf
lods
inc
add
imul
add
adc
mov
add
push
ljmp
ja
cmp
add
add
movsl
dec
into
xlat
dec
jecxz
add
jmp
add
adc
jg
dec
adc
dec
movb
add
push
jbe
std
adc
xchg
xchg
cs
add
add
or
pop
dec
adc
xchg
inc
add
mov
add
mov
add
add
mov
mov
mov
sbb
mov
push
cld
ja
add
xchg
add
mov
xchg
add
add
add
int
loop
mov
add
pop
push
mov
pop
mov
sbb
cmp
lods
aaa
lret
enter
add
adc
sub
add
add
adc
lds
add
xor
add
xor
cmpsl
icebp
or
mov
cs
dec
dec
icebp
rolb
adc
xchg
xor
xchg
outsb
outsl
dec
rolb
rcll
test
pop
stos
xor
push
add
mov
push
rolb
add
mov
imul
int3
bound
mov
stos
push
add
add
cld
test
push
add
jnp
add
or
insl
in
ficomps
push
add
add
stos
lcall
sbb
add
mov
xchg
dec
inc
stos
sbb
jp
dec
out
mov
scas
test
add
leave
fistl
mov
mov
add
rolb
and
add
or
sbb
sub
icebp
mov
jmp
mov
add
add
add
and
mov
add
add
push
add
mov
sub
mov
dec
inc
scas
scas
addb
push
add
add
add
add
jae
add
inc
add
mov
add
add
push
mov
add
add
jo
out
popf
fnsave
pushf
addb
add
testb
add
mov
pop
mov
add
add
in
add
aaa
or
sahf
addb
outsb
pop
mov
dec
mov
and
mov
stos
nop
add
ss
dec
out
cld
xor
jns
pop
lock
ror
es
jl
iret
xor
add
sbb
jns
repz
mov
jo
xlat
jp
test
add
cmp
jae
aas
rcl
add
mov
mov
sbb
mov
nop
add
cmp
in
ret
fldl
ret
fisttps
add
add
adc
mov
xor
add
pop
lock
mov
lods
nop
add
fistpll
pop
les
imul
inc
add
outsl
rolb
in
nop
add
inc
add
push
mov
add
add
std
test
sbb
repz
jmp
sub
add
in
pop
loop
push
addb
push
add
jae
and
add
ja
lret
out
jle
add
jno
add
pop
or
add
mov
add
scas
add
add
add
push
add
add
add
out
add
add
pop
push
in
jg
es
insb
lock
aaa
push
add
dec
aam
ret
das
mov
jnp
add
adc
scas
inc
add
add
jno
jecxz
cmp
hlt
add
add
mov
inc
mov
push
add
add
jbe
in
ja
push
rcll
out
lods
dec
repnz
add
outsl
pop
fwait
and
adc
subl
mov
pop
lods
pop
fmul
dec
pop
sub
fwait
test
inc
mov
addb
xor
lds
movsb
add
in
call
sub
mov
or
decl
xchg
add
add
scas
repz
fisttpll
jb,pn
inc
add
repz
outsb
dec
dec
test
lcall
cmp
popf
jo
je
xchg
add
dec
out
add
mov
add
add
xchg
xor
xchg
out
xchg
adc
pop
cli
pop
outsl
scas
into
xor
add
outsl
xchg
repnz
scas
subl
add
jae
fwait
outsb
jle
add
mov
das
subl
cmp
add
cmp
xchg
cltd
adc
ret
inc
add
xor
in
cmp
out
shll
add
out
insb
sbb
dec
pop
jno
add
add
sti
xor
test
jle
fdivl
or
add
add
pop
jo
pusha
add
loopne
clc
mov
xchg
or
and
les
mov
add
xchg
movsb
add
push
scas
pop
mov
daa
test
jge
jmp
es
je
les
dec
int
outsl
subl
jle
mov
inc
mov
sbb
imul
adc
inc
add
xchg
lahf
xor
add
add
mov
mov
notl
iret
fsubp
add
add
add
push
add
out
cld
pushf
adc
push
repnz
add
add
add
cmpsl
ds
or
ret
icebp
mov
add
loop
jno
adc
push
loope
stc
movb
add
add
add
movsb
add
fs
and
rolb
test
stc
rcrl
or
adc
add
outsb
sub
xchg
lock
testb
add
inc
es
aad
add
nop
add
adc
xchg
je
imul
add
add
test
iret
mov
arpl
movb
insl
xchg
cmp
xlat
push
add
sub
in
mov
pop
mov
stc
test
push
add
mov
mov
add
add
add
arpl
add
xchg
add
add
fwait
cmc
sub
push
cmp
lahf
adc
repnz
lods
and
js
add
pop
cmp
rolb
movsb
add
call
cwtl
into
add
mov
add
lea
add
add
popf
ljmp
movsb
add
or
cmpsl
jp
das
loope
cmp
xor
ljmp
add
andl
jbe
mov
add
push
add
add
cs
out
pop
add
add
push
add
mov
dec
pushf
dec
add
mov
sbb
cmp
add
pop
and
mov
add
sub
add
inc
add
aaa
mov
mov
inc
add
add
cmc
or
fmull
mov
sarl
xor
or
sub
inc
add
mov
mov
mov
add
enter
nop
add
mov
cmp
add
pop
pop
pop
movlps
mov
test
fsub
add
faddl
push
add
add
mov
push
jns
and
cmp
jecxz
lock
mov
mov
add
sub
test
mov
repz
mov
addb
pusha
add
xrelease
js
inc
add
data16
add
loopne
sub
outsl
cld
add
mov
add
add
sub
arpl
add
xchg
jmp
add
add
jg
add
mov
test
cwtl
sub
add
add
sub
mov
xor
inc
add
mov
mov
mov
icebp
inc
mov
or
int
adc
cld
rcl
add
iret
cld
and
mov
dec
imull
repnz
jnp
addr16
add
loop
xchg
out
jae
add
add
jmp
dec
mov
add
xor
mov
sbb
mov
add
push
add
add
lods
rcrl
jb
and
arpl
sub
repz
mov
clc
fst
push
add
out
mov
add
orl
mov
loopne
inc
add
bound
mov
ret
ljmp
sub
lds
add
add
lret
cltd
mov
jne
add
xor
lret
das
ja
mov
add
mov
jp
lods
lds
mov
push
add
adc
sbb
sti
jg
add
lahf
rolb
je
into
pop
test
push
outsl
pop
loope
sub
add
hlt
add
push
mov
in
das
mov
out
lret
push
mov
mov
cmp
stc
lcall
add
les
stos
out
xchg
ret
adc
in
imul
movsl
insb
add
cwtl
pop
xchg
add
mov
pop
cwtl
jl
dec
testb
loop
test
add
pop
stos
enter
in
push
adc
sub
jb
add
popf
cwtl
xor
mov
rolb
imul
adc
ja
mov
sub
add
add
repnz
js
push
sbb
lock
add
jbe
into
mov
mov
jno
add
rolb
jnp
ja
cli
xor
jne
packsswb
cmpsl
xor
std
lds
mov
adc
xchg
mov
xchg
add
cmp
jae
adc
sbb
adc
test
lret
jl
and
add
dec
testb
lea
popf
inc
add
xchg
add
add
sub
jnp
in
push
add
repz
fadds
lock
pop
xchg
call
aaa
fimull
push
add
sub
add
in
fwait
hlt
add
mov
cmp
dec
stc
xchg
lcall
dec
adc
dec
in
push
push
xor
and
mov
add
xchg
jg
push
push
add
xor
add
cwtl
in
mov
add
fistl
add
inc
add
ret
addb
pusha
add
xchg
or
cmp
add
add
mov
push
pop
or
lahf
add
add
mov
insb
jp
leave
and
outsb
adc
fbld
ficoms
clc
cmp
mov
add
dec
lahf
push
add
xchg
add
add
mov
mov
inc
and
mov
add
mov
inc
jge
add
iret
adc
jnp
arpl
xor
or
ficoms
ljmp
or
add
push
push
jnp
test
add
push
jnp
stos
leave
arpl
loop
dec
stos
adc
cwtl
stos
adc
mov
out
xor
pop
addl
push
add
pop
flds
out
push
cli
sub
cmc
xchg
pop
test
push
gs
fildl
dec
out
sbb
lahf
adc
add
adc
jae
push
xchg
xchg
dec
cmp
cmpsl
rolb
lods
push
lcall
cld
push
jmp
scas
xlat
cmpsb
add
jo
xchg
add
les
cmpsb
add
jmp
mov
sbb
or
dec
imul
mov
mov
pusha
add
add
push
mov
add
rolb
mov
sub
mov
add
xor
pop
push
rolb
out
testb
add
xor
xor
cmp
mov
or
movsb
add
lret
mov
mov
add
test
jae
cld
jecxz
add
out
dec
pushf
add
add
adc
or
add
icebp
sbb
jbe
or
jmp
sub
cli
mov
ret
data16
mov
xchg
in
adc
add
inc
add
push
add
sub
add
adc
jge
rolb
mov
jae
add
and
mov
mov
call
add
popl
push
add
xchg
repnz
rolb
sub
push
inc
sub
jbe
faddl
cld
jae
add
add
xor
add
mov
jg
movsb
add
add
add
mov
xchg
add
sbb
jmp
dec
std
pop
in
or
jmp
lds
repnz
movsl
movsl
or
add
and
sub
int
add
add
pop
dec
push
cmp
cmp
pop
dec
pop
cmp
add
mov
ret
add
cmp
popf
popf
sti
mov
ja
rolb
add
mov
jo
adc
xor
dec
pop
out
xchg
lock
sbb
mov
push
rolb
popf
xchg
add
add
mov
das
movsb
add
xchg
add
les
pop
pushf
adc
sti
mov
fildll
repnz
cmpsl
lcall
add
test
js
pusha
add
jmp
mov
add
pop
dec
mov
add
mov
add
mov
and
cmc
bound
mov
add
enter
jne
add
xchg
xor
add
sub
inc
in
jge
loopne
fldt
aad
add
mov
fldenv
add
fmuls
sub
and
push
add
repz
add
xchg
popa
pop
mov
je
std
stos
ja
cmc
loope
xor
pop
push
inc
jne,pt
aad
add
add
add
add
and
in
imul
inc
das
dec
and
mov
mov
add
push
or
arpl
mov
fbld
leave
repnz
push
add
aam
inc
add
add
jle
adc
mov
add
repz
add
add
popa
sub
imul
add
add
pop
fwait
outsb
fdivl
dec
pushf
mov
inc
add
add
addl
mov
and
aaa
rolb
add
add
push
add
inc
dec
jae
add
dec
xchg
add
lock
aam
pop
jecxz
add
add
xor
xchg
adc
adc
push
test
pusha
add
add
add
or
fwait
dec
testb
cltd
and
pushf
cmp
out
or
add
add
ror
sub
sahf
lea
popa
mov
insl
in
dec
cmp
jno
js
stos
dec
push
sub
push
add
pop
fiadds
cmp
jo
pop
cs
add
mov
add
jbe
test
into
fdivl
push
mov
sahf
imul
add
pop
scas
and
inc
add
in
inc
sub
sbb
clc
into
adc
pminub
cld
jo
push
je
stc
mov
jle
pop
mov
jmp
addb
lea
repnz
incb
cmp
add
cmp
mov
stc
and
add
cmp
nop
add
stc
hlt
add
add
add
add
add
mov
pop
and
js
adc
sar
sbb
add
test
add
lods
jle
add
add
mov
add
mov
add
add
mov
push
add
add
mov
addr16
clc
addb
push
testb
inc
adc
push
push
lds
pop
rolb
je
lods
adc
add
mov
ret
addr16
out
mov
call
call
aaa
adc
repz
add
popf
test
xchg
add
xchg
stos
or
mov
fsubp
add
pop
addr16
push
add
add
jmp
mov
add
daa
or
add
sub
hlt
add
scas
adc
add
leave
dec
dec
sti
and
mov
add
pop
ret
fdivr
push
add
jb
mov
jno
into
ds
movb
and
mov
dec
inc
mov
repnz
mov
addl
je
xchg
aam
or
lods
out
sbb
mov
mov
mov
cld
push
add
add
inc
mov
decl
add
faddl
mov
inc
and
filds
repnz
aas
imul
mov
mov
xchg
fdiv
add
dec
int
sbb
add
mov
mov
add
pop
mov
add
scas
shrl
les
cmp
sbb
mov
add
mov
add
mov
loopne
repnz
mov
mov
jne
rolb
outsb
shll
add
mov
xchg
ret
rcrl
aam
mov
rolb
push
add
add
pop
dec
pop
movb
mov
mov
aam
sbb
add
cmpsb
add
addb
add
std
rolb
and
mov
nop
add
inc
pop
pop
insl
ljmp
inc
add
mov
jmp
add
fsts
add
add
xchg
stc
or
add
insb
clc
adc
mov
test
dec
jp
add
add
dec
movb
add
movsl
cs
mov
add
or
into
mov
movb
dec
push
add
jbe
pop
mov
add
fwait
mov
mov
daa
stc
sub
adc
push
add
add
mov
add
mov
pop
mov
xlat
pop
adc
sbb
loopne
xchg
sarl
xor
insb
jno
cmc
ljmp
sub
out
add
add
rolb
mov
pop
mov
movb
add
stos
mov
out
dec
cld
jmp
out
jbe
add
jmp
std
mov
inc
add
int
pop
adc
jmp
add
push
add
jp
add
add
movb
fstpl
pusha
add
dec
hlt
add
add
lods
fs
inc
mov
or
mov
dec
sbb
add
mov
addb
xor
mov
mov
mov
push
add
and
arpl
add
xchg
add
enter
mov
add
sbb
pop
popf
push
add
stc
or
add
popf
daa
mov
jmp
adc
add
addb
add
mov
add
cmp
add
add
add
mov
rolb
bound
mov
add
xchg
mov
add
pop
inc
add
pop
add
rolb
lret
xor
cmpsl
xchg
sbb
mov
cmpsl
adc
imul
add
fmuls
add
mov
xchg
stos
loopne
cli
xor
add
sub
shrl
add
xchg
add
jp
xchg
ja
add
data16
push
xchg
xor
cmc
scas
mov
stos
call
add
stc
testb
mov
cs
add
ljmp
adc
leave
repnz
cmp
add
jp
and
mov
add
mov
jmp
add
add
out
cld
dec
mov
add
aas
rolb
dec
sub
add
pop
dec
jns
dec
mov
ret
mov
mov
mov
mov
add
cmp
add
les
pop
rolb
dec
inc
add
popa
dec
mov
dec
inc
add
add
ljmp
mov
ja
aas
push
js
add
mov
and
mov
push
repz
xor
mov
cs
add
or
shll
add
add
lds
mov
xchg
adc
jmp
add
lret
jmp
and
mov
jle
cld
stos
aad
leave
mov
jg
in
adc
jl
fwait
push
add
pusha
add
imull
pop
dec
std
inc
add
xchg
in
cmp
add
and
test
add
dec
cmp
aam
outsb
lcall
call
mov
addl
mov
fisubl
mov
fisttpll
add
es
add
jecxz
push
loop
push
add
xchg
test
mov
add
mov
inc
add
add
push
add
add
push
pop
xchg
xchg
add
add
lods
fildll
sti
repnz
sbb
js
and
sbb
bound
mov
hlt
add
jl
addb
or
mov
in
jge
cmpsl
sub
xor
jae
shl
add
push
add
fsubl
mov
or
cs
add
aad
add
int
das
test
rolb
ljmp
cs
arpl
jp
add
add
mov
pop
lret
pop
push
je
and
mov
adc
sti
iret
pushf
mov
xchg
jns
inc
in
clc
frstor
add
int3
adc
add
add
incl
mov
clc
out
sbb
xchg
sbb
add
iret
popf
sbb
cmp
test
add
stos
pop
fistps
mov
push
clc
es
cmp
inc
sbb
mov
add
add
pop
mov
add
cmpsb
add
test
dec
add
cmp
push
xorl
mov
add
sub
add
fdiv
add
lds
bswap
mov
add
ja
insl
cld
stos
xor
sub
cmp
add
insb
push
clc
sbb
add
fsubs
int3
out
pushf
test
cld
scas
data16
add
add
add
add
add
cld
dec
cld
out
dec
jg
aad
add
loop
pusha
add
add
add
loop
loop
ljmp
sahf
repz
lock
inc
add
bound
mov
dec
cmp
add
jg
jp
add
lret
enter
fidivrs
cmpsl
dec
push
add
add
or
mov
mov
in
xchg
mov
add
mov
sbb
adc
jge
add
sub
dec
test
add
add
add
pop
call
xchg
pop
lahf
cmc
cmp
daa
pop
xchg
add
stos
in
pop
cmpsb
add
stc
inc
push
add
add
add
mov
ret
icebp
cs
add
push
add
xor
rolb
roll
add
in
lcall
add
fbld
bound
mov
insl
xchg
add
add
or
add
sbb
insb
les
popf
out
xchg
nop
add
add
mov
mov
add
add
add
add
mov
call
nop
add
add
add
vminpd
mov
add
xorl
jb
adc
outsb
pop
hlt
add
mov
addl
jecxz
and
out
lahf
and
lret
add
mov
add
iret
movsl
fwait
adc
daa
in
add
addr16
clc
sub
pop
jecxz
rcrl
scas
rcrl
mov
popa
sub
lods
leave
add
add
popa
inc
add
sahf
push
add
push
add
add
ss
shrl
add
mov
push
lcall
rolb
out
xchg
add
mov
add
add
add
or
pop
aam
or
or
add
add
add
lea
aad
xchg
dec
jne
add
add
aaa
add
addr16
daa
xor
jp
jne
add
add
add
add
mov
ljmp
add
add
cmp
fbstp
add
add
xchg
mov
add
rolb
aaa
outsl
cmp
scas
mov
fistpl
add
cld
inc
add
add
dec
push
cmp
or
add
loope
lea
push
sbb
imul
cmpsl
adc
out
loop
test
into
xchg
jecxz
xchg
add
xchg
dec
cmc
and
adc
add
mov
add
push
add
test
jg
add
add
faddl
add
imul
add
add
hlt
add
movsl
jl
add
bound
mov
add
add
add
movsb
add
add
xchg
add
or
add
insl
roll
xchg
repnz
add
pusha
add
rcrl
add
arpl
lahf
xrelease
ret
aas
stos
sbb
push
addr16
inc
add
add
add
add
add
add
xor
mov
add
adc
cmp
ja
and
cwtl
cmp
add
rolb
test
jno
je
push
add
add
adc
xor
call
xor
xor
and
in
add
add
xchg
sbb
add
enter
fimull
and
and
push
add
add
iret
rolb
loope
rolb
sub
jno
movsb
add
push
imull
popa
addb
cmpsl
ficoms
jo
inc
stc
dec
push
adc
sbb
test
xor
mov
push
add
add
rolb
push
outsb
mov
add
and
add
test
stc
fstpl
lret
mov
int3
dec
mov
pusha
add
and
mov
add
push
add
fsub
add
add
inc
and
mov
add
pop
push
test
pop
mov
add
mov
add
add
add
shr
push
mov
lea
or
or
mov
add
add
aam
icebp
push
addb
popf
stc
jno
add
lcall
dec
nop
add
test
sub
lods
jmp
xchg
out
add
fcmovnb
add
add
and
mov
push
and
mov
sbb
add
movsb
add
das
xchg
add
xor
add
mov
lds
loope
jae
add
into
inc
add
mov
addb
add
mov
add
mov
add
cwtl
popf
out
jae
add
add
test
int3
in
add
adc
cmp
jne
fcom
xchg
add
mov
mov
out
das
lret
mov
mov
add
or
add
mov
mov
mull
push
cli
test
push
loop
test
and
mov
adcl
add
lcall
sbb
add
adc
lahf
mov
daa
outsb
jl
sbb
add
add
rcll
add
pop
into
out
ret
ja
add
inc
add
add
lret
lock
xchg
add
fst
add
pusha
add
in
fisubl
push
mov
add
add
add
jbe
adc
fisubl
add
add
add
stc
loopne
je
lods
lock
mov
or
mov
add
test
test
push
add
sub
rolb
push
add
add
sub
push
add
aam
in
inc
dec
push
adc
or
jp
rolb
add
mov
dec
sarl
jecxz
push
add
adc
fwait
add
inc
fsubp
add
add
sub
call
cs
js
mov
push
add
popa
stos
adc
rolb
xchg
data16
jp
dec
adc
lahf
inc
add
add
add
mov
ja
ret
jecxz
sbb
add
jbe
in
stos
mov
lods
rolb
jns
add
je
in
add
iret
sub
mov
xor
cmpsl
ds
loop
cmp
stos
sbb
add
add
or
push
add
pop
jecxz
sbb
add
add
repnz
add
cmp
add
and
mov
add
mov
sahf
add
and
mov
cmp
add
push
and
cmpsl
imul
mov
add
sbb
pop
adc
jmp
pop
sub
push
add
mov
pop
jg
data16
mov
iret
mov
sbb
add
jmp
push
or
mov
addb
and
mov
out
pop
xor
mov
pop
and
adc
add
add
addr16
dec
adc
mov
sti
std
lods
popa
addr16
in
jne
and
add
lods
jne
push
xchg
add
cmp
inc
add
xchg
add
sbb
add
mov
add
add
jbe
jge
or
add
add
sbb
mov
add
inc
jb
push
xlat
add
add
mov
sbb
insl
adc
mov
xchg
or
lds
add
mov
xchg
add
les
cwtl
sub
add
icebp
adc
sti
insl
out
add
and
mov
sbb
jl
xor
mov
roll
out
jl
cmp
lret
xchg
pop
inc
add
mov
testl
vpcomd
inc
add
mov
into
iret
add
scas
pop
sbb
add
adc
sbb
mov
lea
add
and
mov
les
pop
pop
mov
testb
add
inc
add
test
sub
pop
add
jbe
nop
add
mov
mov
rol
cld
dec
bound
mov
mov
adc
out
dec
add
mov
sahf
pop
pop
inc
ret
aaa
push
fstp
add
adc
and
mov
decl
or
lock
rolb
xor
or
add
pop
iret
rolb
ja
add
add
adc
sarl
push
add
add
jnp
add
lock
imul
add
add
les
movb
or
lds
mov
movsb
add
fstpt
fwait
scas
in
and
ds
in
test
fs
add
sub
cli
in
push
xchg
aas
xlat
mov
rcrl
jl
cmpsl
xor
mov
sbb
add
add
cs
add
cmp
adc
rolb
lahf
mov
add
add
push
jno
popa
inc
pop
or
add
shll
mov
in
into
sub
repnz
jp
cmpsl
dec
push
add
adc
cmp
add
cs
loop
dec
xor
movb
jle
cwtl
scas
inc
add
add
add
sahf
adc
mov
stos
xchg
add
les
push
add
add
sarl
pop
sarl
in
out
add
cmp
rdmsr
add
push
add
dec
mull
mov
movsl
loope
sub
jg
add
add
ja
stos
mov
cmpsb
add
add
mov
out
pushf
popf
cmp
repz
pop
testb
lods
imul
shr
testb
add
aaa
push
sub
inc
std
mov
jae
inc
add
inc
pop
add
mov
adcl
mov
xlat
jnp
sbb
add
add
sub
mov
out
mov
xlat
and
mov
add
add
mov
add
add
inc
add
xchg
add
jnp
add
inc
jge
jne
push
stos
jb
jp
sbb
lret
add
test
insl
lds
or
add
add
add
add
add
or
add
sub
ret
cmp
inc
leave
jno
add
mov
add
shll
fldenv
add
int
add
jne
or
scas
popa
cwtl
mov
call
xchg
mov
pop
pop
outsl
sub
add
mov
stc
cmpsl
int
sub
mov
push
add
mov
jp
icebp
imul
add
in
into
test
add
xor
or
outsl
mov
jl
add
sti
mov
pop
push
add
mov
clc
repnz
jae
add
add
add
sbb
jae
cld
nop
jmp
mov
std
xor
jecxz
mov
push
mov
xchg
ret
and
jnp
pushf
xor
clc
repnz
jae
add
aad
leave
and
fwait
cld
nop
jmp
add
add
add
sub
repnz
jae
jns
jns
add
sub
jge
clc
repnz
jae
in
add
push
clc
repnz
jae
sbb
add
fs
sub
scas
js
das
add
add
mov
push
push
mov
xchg
ret
ja
add
add
add
aas
adc
daa
add
add
add
xchg
clc
repnz
jae
add
add
inc
xchg
outsl
sub
clc
repnz
jae
and
dec
pusha
add
push
mov
xchg
ret
addb
sub
testl
jae
add
add
add
mov
clc
repnz
jae
sbb
add
add
nop
add
nop
jae
outsb
testl
add
mov
imul
clc
repnz
jae
add
jae
or
mov
lahf
call
clc
repnz
jae
mov
rcll
in
add
call
fwait
cld
nop
jmp
inc
push
cmpsl
pop
cmpsl
xor
popa
sub
cld
nop
jmp
add
int
in
pushf
add
clc
repnz
jae
cli
mov
inc
dec
push
push
mov
xchg
ret
add
add
and
pop
inc
adc
xor
push
mov
xchg
ret
add
add
add
add
and
mov
stos
sub
add
repnz
jae
jns
inc
cmp
call
clc
repnz
jae
cmp
add
add
sar
nop
jae
push
add
in
add
add
push
add
add
jnp
xchg
loopne
mov
clc
repnz
jae
add
in
int
push
mov
xchg
ret
add
add
push
add
loop
inc
add
add
loop
add
int
dec
cmp
repnz
jae
outsb
xchg
xor
popa
clc
repnz
jae
negl
mov
addb
push
clc
repnz
jae
add
aas
inc
loop
add
nop
jmp
add
iret
mov
adc
repnz
jae
add
jne
add
les
inc
leave
xor
fwait
cld
nop
jmp
push
add
add
lret
jl
cmp
fwait
cld
nop
jmp
push
sbb
lcall
inc
xchg
add
sub
push
mov
xchg
ret
add
in
push
rolb
lret
mov
cld
nop
jmp
add
add
cltd
jmp
add
lods
add
mov
add
fs
stc
jmp
add
push
add
add
add
cmpsl
mov
inc
adc
cld
nop
jmp
push
mov
popa
fstpt
clc
repnz
jae
add
in
loope
mov
clc
repnz
jae
add
pop
mov
repnz
jae
outsb
add
add
or
push
mov
mov
xchg
ret
aas
jnp
mov
xchg
popa
or
clc
repnz
jae
add
aad
ret
imul
fwait
cld
nop
jmp
cmpsl
testl
rolb
fisttpll
nop
jae
add
add
inc
lret
add
mov
push
mov
xchg
ret
dec
std
mov
add
mov
nop
jae
in
or
mov
clc
repnz
jae
dec
mov
add
add
cld
nop
jmp
add
add
je
les
dec
cmp
fwait
cld
nop
jmp
testl
test
add
clc
repnz
jae
pop
fs
dec
add
repnz
jae
add
xchg
add
push
add
data16
jae
mull
add
dec
lret
idivl
add
clc
repnz
jae
lods
add
jo
mov
mov
xchg
ret
add
jne
cmpsl
or
dec
cmp
cld
nop
jmp
add
add
std
inc
add
pop
fiadds
xchg
ret
add
add
call
fwait
cld
nop
jmp
outsb
add
add
sub
movb
add
clc
repnz
jae
add
divl
mov
xchg
ret
add
loop
fs
push
add
jae
push
aad
pop
cmpsl
add
xchg
inc
add
cmp
add
repnz
jae
add
cmp
xor
cltd
mov
clc
repnz
jae
add
add
add
and
fwait
cld
nop
jmp
es
add
outsb
or
jae
std
add
cmpsl
cli
add
notl
clc
repnz
jae
add
mov
mov
xchg
ret
add
mov
mov
mov
jae
not
cwtl
dec
jae
ja
xchg
push
add
push
fwait
cld
nop
jmp
sbb
outsb
cmp
add
xchg
mov
fwait
cld
nop
jmp
add
add
add
and
xchg
dec
push
clc
repnz
jae
sub
ja
add
add
add
add
clc
repnz
jae
or
add
add
add
repnz
jae
add
lret
add
add
repnz
jae
add
mov
jle
les
cld
nop
jmp
in
add
add
lret
fwait
cld
nop
jmp
sbb
cli
cmpsl
cwtl
add
push
mov
xchg
ret
loop
lods
loop
push
clc
repnz
jae
testl
add
add
clc
repnz
jae
sbb
iret
testl
cld
nop
jmp
not
add
lcall
push
clc
repnz
jae
cwtl
cmp
nop
add
xor
add
mov
repnz
jae
add
add
clc
jne
add
add
clc
repnz
jae
add
testl
clc
repnz
jae
loop
cli
outsb
aas
add
loop
mov
clc
repnz
jae
ja
sub
clc
repnz
jae
lcall
inc
clc
repnz
jae
mov
add
jmp
repnz
jae
idiv
in
add
cmp
repnz
jae
add
add
xchg
mov
push
add
repnz
jae
add
add
add
add
mov
popa
add
repnz
jae
xor
xor
add
lea
push
mov
xchg
ret
and
je
clc
repnz
jae
add
add
mov
xchg
ret
add
add
add
push
mov
xchg
ret
add
inc
add
pop
jmp
push
add
lcall
add
mov
clc
repnz
jae
add
imull
popa
add
mov
xchg
ret
add
push
or
push
mov
xchg
ret
pop
add
add
push
pop
ja
clc
repnz
jae
xchg
add
into
ret
clc
repnz
jae
add
std
push
mov
lret
loope
add
clc
repnz
jae
add
add
repnz
jae
std
add
cli
add
xchg
or
inc
add
push
std
mov
and
add
add
push
add
outsl
add
fwait
cld
nop
jmp
add
idiv
divl
add
add
add
mov
adc
repnz
jae
xchg
add
add
pop
clc
repnz
jae
add
or
add
add
xor
clc
repnz
jae
in
push
sub
add
mov
cmp
ret
add
lret
leave
jb
clc
repnz
jae
add
add
clc
repnz
jae
add
jae
add
add
push
add
fdivr
repnz
jae
add
or
loop
jne
mov
ds
clc
repnz
jae
jne
add
adcl
jne
clc
repnz
jae
add
inc
add
nop
jae
int
inc
sbbb
add
subl
push
mov
xchg
ret
add
cwtl
push
ret
cs
clc
repnz
jae
add
lcall
clc
repnz
jae
and
add
cmp
fwait
cld
nop
jmp
add
dec
idiv
int
out
push
push
mov
xchg
ret
add
jns
aad
test
push
mov
xchg
ret
add
add
loopne
mov
jae
add
mov
pop
add
int
mov
push
mov
xchg
ret
loop
std
sbb
add
add
repnz
jae
add
add
add
lcall
inc
add
add
xchg
add
mov
xor
push
mov
xchg
ret
lret
add
mov
ud0
clc
repnz
jae
cmp
loop
movzwl
fwait
cld
nop
jmp
add
hlt
add
add
js
push
mov
xchg
ret
add
adc
fwait
cld
nop
jmp
add
add
add
add
repnz
jae
aad
andb
mov
clc
repnz
jae
int
add
cli
jnp
pop
xchg
dec
mov
fwait
cld
nop
jmp
push
add
push
lret
jne,pt
clc
repnz
jae
add
mov
push
mov
xchg
ret
adcb
mov
clc
repnz
jae
int
push
add
repnz
jae
add
jnp
add
fwait
cld
nop
jmp
testl
mov
clc
repnz
jae
add
jmp
lcall
mov
cmp
add
movsb
jecxz
add
in
loopne
add
push
jmp
add
add
sbb
add
cmpsl
add
sub
in
mov
clc
repnz
jae
and
push
add
data16
jae
sbb
add
add
add
mov
clc
repnz
jae
add
iret
sbb
inc
mov
cld
nop
jmp
add
add
fwait
cld
nop
jmp
jnp
add
ja
xchg
add
push
mov
xchg
ret
add
add
add
add
clc
repnz
jae
push
jnp
and
mov
push
mov
xchg
ret
add
aad
dec
mov
push
mov
xchg
ret
mov
add
jmp
add
mov
add
push
push
add
js
popa
clc
repnz
jae
add
dec
add
cmp
add
inc
adc
cld
nop
jmp
add
and
nop
jmp
je
outsb
subb
dec
add
mov
xchg
ret
aad
dec
sbb
cmp
clc
repnz
jae
lcall
add
in
push
mov
xchg
ret
sub
in
pop
add
rep
fwait
cld
nop
jmp
add
add
add
add
inc
add
adc
jg
cwtl
add
fwait
cld
nop
jmp
add
cwtl
mov
add
mov
clc
repnz
jae
andb
push
nop
jae
and
mov
adc
shrl
nop
jae
add
and
lods
rep
fwait
cld
nop
jmp
lret
jns
dec
add
lods
push
fwait
cld
nop
jmp
sbb
add
mov
add
clc
repnz
jae
add
add
gs
pop
fwait
cld
nop
jmp
or
add
add
add
cmpsl
fstl
repnz
jae
add
add
lcall
pop
jae
repnz
jae
addb
sbb
mov
adc
repnz
jae
sbb
pop
and
repnz
jae
cmpsl
in
in
add
jns
mov
add
cmpsl
sbb
fnstsw
loope
push
xchg
add
inc
add
add
repnz
jae
add
cwtl
push
stos
shl
clc
repnz
jae
add
jne
clc
es
push
push
mov
xchg
ret
mov
je
rorl
push
mov
xchg
ret
pop
sbb
add
add
nop
jmp
movl
add
add
subl
push
mov
xchg
ret
pop
add
push
aad
mov
push
mov
xchg
ret
add
div
clc
repnz
jae
mov
notl
jns
add
clc
repnz
jae
addb
cwtl
fs
add
nop
jae
add
push
add
push
jmp
incl
fs
aad
jns
sub
mull
add
clc
repnz
jae
add
cmc
pushf
mov
push
mov
xchg
ret
outsb
std
add
mov
clc
repnz
jae
mov
clc
in
add
jae
fwait
cld
nop
jmp
push
and
push
mov
add
and
stos
and
add
xor
push
fwait
cld
nop
jmp
add
add
fs
mov
test
repnz
jae
add
iret
and
add
clc
repnz
jae
or
add
and
mov
add
sar
mov
xchg
ret
mov
jecxz
add
or
repnz
jae
add
loopne
mov
and
repnz
jae
add
add
add
mov
clc
repnz
jae
add
mov
notl
add
fs
repnz
jae
add
popa
add
pop
xchg
add
mov
clc
repnz
jae
mov
jne
fwait
cld
nop
jmp
gs
mov
clc
repnz
jae
loop
and
add
stc
mov
fwait
cld
nop
jmp
sbb
roll
lods
pop
push
mov
xchg
ret
add
push
add
sbb
test
push
clc
repnz
jae
add
je
jnp
in
push
add
mov
clc
repnz
jae
loopne
add
clc
repnz
jae
lret
mov
add
push
mov
xchg
ret
std
int
add
cli
sub
clc
repnz
jae
xor
add
add
mov
mov
xchg
ret
inc
add
nop
add
nop
jmp
mov
dec
std
add
add
add
pusha
add
xor
push
add
add
fwait
cld
nop
jmp
add
addb
add
add
loope
push
clc
repnz
jae
add
iret
add
nop
jae
outsb
add
pop
add
and
sbb
add
jnp
pop
clc
loop
add
nop
jmp
add
add
sbb
fs
mov
clc
repnz
jae
push
mov
popa
add
cld
nop
jmp
int
add
add
popa
xor
repnz
pop
clc
repnz
jae
jnp
add
sub
mov
inc
fwait
cld
nop
jmp
add
lcall
pop
ret
jnp
add
cli
add
add
push
add
mov
arpl
cld
nop
jmp
je
mov
clc
repnz
jae
mov
cmpsl
lcall
jae
add
int
and
iret
jmp
loopne
jne
int
and
add
add
pushl
push
mov
xchg
ret
addb
add
or
movsb
push
mov
xchg
ret
add
addb
add
add
repnz
jae
add
jmp
call
cmp
loop
add
push
mov
add
les
xchg
xchg
mov
add
mov
clc
repnz
jae
add
mov
clc
repnz
jae
mov
add
add
add
js
add
clc
repnz
jae
add
decl
add
repnz
jae
add
cmpl
addl
incl
dec
add
add
add
leave
fwait
cld
nop
jmp
cmp
sbbb
add
cld
nop
jmp
sbb
add
aad
add
cmp
xor
clc
repnz
jae
popa
add
add
lret
add
repnz
jae
push
add
std
loop
insb
push
push
mov
xchg
ret
add
sbb
popa
lcall
add
clc
repnz
jae
xchg
add
cli
or
leave
mov
push
mov
xchg
ret
add
add
lock
repnz
jae
in
cmpsl
jnp
mov
add
clc
repnz
jae
std
cmpsl
jae
pop
add
repnz
jae
add
std
in
jne
lret
add
add
fwait
cld
nop
jmp
ja
lret
mov
nop
jae
add
lcall
add
adc
mov
or
fwait
cld
nop
jmp
add
fwait
cld
nop
jmp
aad
add
sub
and
mov
clc
repnz
jae
inc
sub
xchg
pusha
add
gs
inc
add
ja
jne
add
cmc
ret
xchg
add
in
add
add
clc
repnz
jae
adc
popf
mov
fwait
cld
nop
jmp
clc
add
es
jmp
int
cwtl
clc
add
xchg
inc
pop
or
clc
repnz
jae
add
add
add
bound
mov
push
push
mov
xchg
ret
clc
aas
add
xor
push
mov
xchg
ret
cmp
mov
add
jp
jbe
clc
repnz
jae
loop
add
xchg
add
add
mov
cwtl
add
clc
repnz
jae
add
pop
cwtl
add
jae
add
aas
add
add
mov
jmp
add
mov
loop
add
mov
clc
repnz
jae
sub
mov
add
test
ljmp
xorl
sbb
repz
repnz
jae
jns
inc
add
fwait
cld
nop
jmp
add
cli
add
add
add
int3
les
clc
repnz
jae
loop
add
std
repnz
add
clc
repnz
jae
pop
adc
and
lock
repnz
jae
fs
add
std
es
jle
push
mov
xchg
ret
add
cmp
fwait
cld
nop
jmp
testl
add
incl
fwait
cld
nop
jmp
aas
sub
add
dec
add
repnz
jae
add
testl
add
clc
repnz
jae
mov
add
push
clc
repnz
jae
add
add
clc
repnz
jae
add
and
dec
add
xchg
adc
rorb
add
clc
repnz
jae
lcall
mov
push
mov
xchg
ret
cmpsl
mov
pop
add
clc
repnz
jae
adc
add
mov
add
push
mov
xchg
ret
mov
mov
add
and
clc
repnz
jae
add
add
repnz
jae
add
add
and
mov
xchg
clc
repnz
jae
mov
cwtl
push
add
ja
movsl
and
mov
add
inc
add
and
xchg
push
jnp
stos
push
clc
repnz
jae
cwtl
add
add
leave
sub
repnz
jae
jne
add
push
mov
xchg
ret
add
add
add
add
dec
or
mov
xchg
ret
add
mov
cmp
into
pop
add
clc
repnz
jae
add
add
push
clc
repnz
jae
pop
add
sarl
add
rolb
clc
je
clc
repnz
jae
popa
add
lods
inc
clc
repnz
jae
cmp
aas
shll
add
pop
mov
sar
repnz
jae
xchg
loopne
add
movl
clc
repnz
jae
outsb
int
and
add
mov
fwait
cld
nop
jmp
inc
sbb
pop
sbb
iret
inc
add
loop
jnp
add
push
add
clc
repnz
jae
add
sbb
mov
dec
decl
push
mov
xchg
ret
add
jno
pop
push
mov
xchg
ret
add
inc
int
add
mov
mov
xchg
ret
ja
add
push
clc
repnz
jae
add
jnp
inc
pop
add
dec
mov
fwait
cld
nop
jmp
add
add
inc
add
repnz
jae
add
add
add
mov
clc
repnz
jae
rcll
add
add
jne
add
nop
jae
add
mov
lcall
movsb
clc
repnz
jae
add
add
jnp
sbb
pop
push
add
clc
repnz
jae
std
add
add
add
push
mov
xchg
ret
iret
add
add
adc
inc
add
jne
fwait
cld
nop
jmp
cmpsl
add
add
test
push
mov
xchg
ret
add
add
daa
ficoms
mov
xchg
ret
xchg
cwtl
clc
add
je
adc
add
clc
repnz
jae
add
add
sarl
jecxz
add
add
sub
nop
jae
inc
add
xor
es
cwtl
add
push
mov
xchg
ret
ja
add
int
dec
movzwl
clc
repnz
jae
add
add
push
clc
repnz
jae
xchg
sbb
add
sub
clc
repnz
jae
add
repnz
and
push
mov
xchg
ret
mov
mov
nop
jmp
sbb
lret
add
add
push
mov
xchg
ret
add
add
add
add
add
repnz
jae
sub
sub
repnz
jae
mov
add
iret
add
add
mov
clc
repnz
jae
mov
pop
add
or
mov
movsl
cmp
clc
repnz
jae
add
mov
add
cmp
fwait
cld
nop
jmp
addb
std
or
sbb
nop
jae
add
xor
add
add
mov
xchg
ret
iret
roll
mov
mov
testb
jbe
jns
xor
fwait
cld
nop
jmp
loopne
add
add
movzwl
fwait
cld
nop
jmp
lcall
add
popa
fwait
cld
nop
jmp
int
es
sbb
jns
clc
repnz
jae
add
sbb
lcall
or
add
add
idiv
test
push
mov
xchg
ret
jns
jnp
sbb
mov
fmull
mov
nop
jae
add
jne
add
add
sub
out
call
add
cmp
add
je
clc
repnz
jae
add
add
test
add
clc
repnz
jae
add
into
push
mov
pop
add
xlat
mov
add
mov
lcall
jmp
push
es
add
add
test
clc
repnz
jae
fs
add
clc
repnz
jae
add
outsb
add
add
jno
add
add
repnz
jae
add
lret
jne
clc
repnz
jae
add
popa
push
mov
xchg
ret
add
loop
and
repnz
jae
sub
add
add
lods
cwtl
mov
int3
fldl
xchg
ret
dec
add
mov
clc
repnz
jae
or
add
add
cmp
push
mov
xchg
ret
loop
add
add
xor
push
mov
xchg
ret
push
add
in
add
adc
add
xor
clc
repnz
jae
add
ja
mov
clc
repnz
jae
add
inc
add
sbb
fwait
cld
nop
jmp
add
push
add
fimuls
jae
add
add
nop
add
add
loop
mov
xchg
ret
aad
add
idivl
add
repnz
jae
mov
push
fwait
cld
nop
jmp
roll
add
add
add
cmpsl
adc
or
push
sub
or
inc
add
cmp
movsb
add
movsb
add
add
repnz
jae
add
add
inc
clc
repnz
jae
ja
mov
fs
loopne
mov
les
jmp
add
add
repnz
jae
and
nop
jae
add
jae
cwtl
dec
add
inc
add
repnz
jae
add
add
mov
clc
repnz
jae
push
add
add
jnp
cli
clc
repnz
jae
jae
jne
add
add
jmp
push
jnp
add
mov
fwait
cld
nop
jmp
push
outsb
dec
mov
add
clc
repnz
jae
xchg
xchg
add
sub
repnz
jae
add
test
enter
clc
repnz
jae
add
aas
add
add
add
clc
repnz
jae
int
je
mov
loop
fwait
cld
nop
jmp
add
add
pop
clc
repnz
jae
or
testl
xchg
add
movsb
add
add
clc
repnz
jae
add
dec
add
and
lods
fwait
cld
nop
jmp
loopne
testl
add
add
jmp
std
add
push
and
jae
add
and
clc
repnz
jae
add
jnp
std
add
push
clc
repnz
jae
add
add
shr
incl
add
add
add
jnp
les
add
mov
add
add
clc
repnz
jae
add
lret
jne
clc
repnz
jae
add
add
mov
add
fwait
cld
nop
jmp
add
cmp
xor
add
clc
repnz
jae
add
cli
lea
sar
nop
jae
add
add
add
sub
push
push
mov
xchg
ret
add
inc
mov
add
jmp
clc
repnz
jae
add
popa
cs
push
mov
xchg
ret
pop
lret
jns
add
cmpl
fwait
cld
nop
jmp
or
arpl
rclb
repnz
add
add
jns
cwtl
movsl
mov
lret
add
cmp
nop
jae
std
push
xchg
cmp
jmp
xchg
shll
add
cmp
cmp
test
clc
repnz
jae
add
cmp
xchg
add
mov
clc
repnz
jae
adcb
add
fs
repnz
jae
iret
add
add
add
js
dec
std
clc
repnz
jae
add
add
jecxz
add
add
repnz
jae
dec
add
xorb
push
mov
xchg
ret
add
add
loop
add
adc
mov
cmp
ret
pop
add
cmpl
nop
jmp
xchg
aad
dec
nop
add
repnz
jae
add
add
add
cld
add
push
mov
xchg
ret
push
add
fiaddl
sti
fwait
cld
nop
jmp
xchg
xor
cmp
lcall
repnz
jae
aas
add
mov
ror
add
jae
add
add
xchg
add
add
jne
fwait
cld
nop
jmp
add
add
repnz
jae
inc
add
add
add
add
add
cmp
nop
jae
add
in
adc
add
test
nop
jmp
add
add
add
mov
nop
jmp
std
notl
std
add
mov
inc
or
add
add
add
testl
repnz
jae
negl
mov
mov
add
add
add
repnz
jae
jae
loop
mov
clc
repnz
jae
mov
std
lea
in
add
add
data16
orl
or
ljmp
add
sub
add
shll
add
clc
shr
clc
repnz
jae
push
add
mull
mov
clc
repnz
jae
add
add
mov
repnz
jae
add
add
or
jae
add
aas
add
add
mov
mov
xchg
ret
sub
out
dec
push
mov
xchg
ret
lods
inc
cwtl
add
popa
xchg
pushf
pusha
clc
repnz
jae
add
add
add
test
test
fwait
cld
nop
jmp
aad
xchg
add
cmp
not
inc
add
add
add
ljmp
repnz
jae
xor
push
mov
xchg
ret
xchg
cli
std
popa
add
repnz
jae
and
add
pop
push
mov
xchg
ret
cli
add
sbb
add
insl
add
fwait
cld
nop
jmp
sbb
je
pop
or
inc
inc
add
or
add
repnz
jae
add
test
jae
jae
mov
add
dec
sub
jmp
add
je
add
or
sub
clc
repnz
jae
add
jae
pop
and
fwait
cld
nop
jmp
std
add
push
add
mov
xchg
ret
jns
add
call
clc
repnz
jae
add
lret
repnz
jae
push
pop
aad
xchg
add
inc
add
push
fwait
cld
nop
jmp
add
mov
add
add
push
mov
xchg
ret
xchg
lods
lods
cwtl
and
or
fwait
cld
nop
jmp
add
pop
xchg
push
clc
repnz
jae
add
outsb
std
and
cmpsb
add
add
dec
out
add
pop
cli
lods
add
sbb
jne
clc
repnz
jae
int
in
adc
sub
add
ret
clc
repnz
jae
lods
add
add
mov
in
clc
repnz
jae
add
add
add
nop
jae
or
jne
loopne
add
push
fimull
mov
xchg
ret
cmp
push
clc
add
jnp
xor
repnz
jae
add
or
pop
push
mov
xchg
ret
add
gs
mov
add
add
out
incl
and
mov
clc
repnz
jae
add
and
fwait
cld
nop
jmp
add
jne
mov
lea
clc
repnz
jae
add
pop
pop
lods
je
ret
xchg
or
nop
jae
add
pop
jae
outsb
rolb
cmp
add
add
repnz
jae
movl
add
or
inc
add
loopne
cwtl
jns
fsubr
aaa
cli
clc
repnz
jae
std
add
mov
clc
repnz
jae
sub
sbb
jg
clc
repnz
jae
je
add
neg
add
clc
repnz
jae
cmp
add
add
add
add
nop
jae
xchg
xchg
loop
lret
loopne
rolb
add
clc
repnz
jae
je
jae
iret
jns
push
mov
jecxz
add
sbb
dec
add
add
jno
and
fwait
cld
nop
jmp
add
pop
cmp
lods
add
clc
repnz
jae
cwtl
add
les
jg
ja
outsb
je
repnz
jae
iret
jne
jne
pop
rolb
jae
movzwl
clc
repnz
jae
add
add
mov
clc
repnz
jae
and
xchg
clc
clc
repnz
jae
add
add
add
sti
mov
fwait
cld
nop
jmp
std
add
dec
pop
add
add
push
clc
repnz
jae
inc
add
xchg
and
dec
adc
xchg
loope
add
inc
add
push
clc
repnz
jae
add
add
add
jns
push
add
mov
fwait
cld
nop
jmp
inc
add
mov
je
fwait
cld
nop
jmp
std
outsb
add
push
sbb
clc
repnz
jae
loopne
mov
add
clc
repnz
jae
ja
std
and
sbbb
jo
lcall
add
add
adc
fwait
cld
nop
jmp
cwtl
lods
sbb
add
clc
repnz
jae
sbb
clc
add
add
dec
mov
push
mov
xchg
ret
add
add
add
add
add
adc
incl
add
cmp
repnz
jae
add
mov
cmpsl
shrl
add
ror
add
add
jnp
push
inc
js
mov
sub
repnz
jae
add
mov
sbbb
push
mov
xchg
ret
loopne
cmp
lcall
nop
jmp
add
testl
add
add
clc
repnz
jae
ja
jnp
add
add
add
dec
add
repnz
jae
add
cmp
cwtl
add
push
push
mov
xchg
ret
add
mov
addb
testb
lea
clc
repnz
jae
add
add
add
shrl
clc
repnz
jae
add
add
jne
lods
je
clc
repnz
jae
loop
std
cmp
cld
nop
jmp
aad
lret
mov
idiv
repnz
jae
and
cli
cmp
add
repz
clc
repnz
jae
pop
add
sti
clc
repnz
jae
clc
add
mov
jmp
std
pop
add
gs
add
outsb
add
add
mov
clc
repnz
jae
je
aas
lret
xchg
pop
mov
clc
repnz
jae
pop
and
xchg
add
push
push
mov
xchg
ret
mov
add
mov
clc
repnz
jae
in
add
jns
popa
out
shr
clc
repnz
jae
and
gs
testb
add
xor
nop
jae
jnp
add
add
sub
repnz
jae
in
lcall
insl
mov
push
mov
xchg
ret
add
inc
add
push
add
nop
jae
xor
in
inc
add
loop
add
add
mov
clc
repnz
jae
and
fadd
jmp
jae
add
mov
fwait
cld
nop
jmp
add
mov
add
mov
pop
pushl
clc
repnz
jae
add
add
loop
int3
lea
clc
repnz
jae
add
pop
add
add
inc
ret
push
clc
repnz
jae
add
je
add
aas
and
lock
clc
repnz
jae
xchg
popa
and
clc
jne
fwait
cld
nop
jmp
add
add
add
or
repnz
jae
popa
andb
jo
mov
lea
clc
repnz
jae
add
testl
add
clc
repnz
jae
es
add
add
hlt
add
jmp
add
movl
cmpsl
lret
and
push
mov
xchg
ret
loop
jne
mov
ss
clc
repnz
jae
outsb
add
loope
add
add
or
add
test
jmp
add
add
jae
jns
loopne
sbb
repz
mov
xchg
ret
divl
add
and
fwait
cld
nop
jmp
add
add
shl
add
add
es
lcall
cld
nop
jmp
ja
std
add
std
push
add
jae
add
add
std
nop
add
xchg
clc
repnz
jae
add
and
sbb
mov
xchg
ret
cmp
add
pop
test
push
call
and
add
add
fs
add
cmc
inc
add
nop
jae
xor
and
mov
push
mov
xchg
ret
push
gs
mov
or
clc
repnz
jae
add
pop
mov
mov
push
clc
repnz
jae
add
fwait
cld
nop
jmp
add
add
aad
aas
add
test
push
push
mov
xchg
ret
aas
inc
add
add
lret
mov
mov
clc
repnz
jae
add
push
dec
add
push
mov
xchg
ret
add
idivl
clc
repnz
jae
cli
push
add
add
push
pop
mov
clc
repnz
jae
notl
add
add
push
mov
xchg
ret
testl
pusha
clc
repnz
jae
add
div
and
test
repnz
jae
popa
add
push
mov
add
clc
repnz
jae
mov
loop
mov
push
mov
xchg
ret
push
add
movl
cmpl
call
clc
add
add
or
xor
add
fwait
cld
nop
jmp
add
add
push
push
mov
xchg
ret
cmp
push
add
add
lcall
idiv
decl
cmp
jns
add
inc
fiadds
xchg
ret
add
std
testl
and
add
jne
js
add
add
clc
repnz
jae
add
cmp
mov
xchg
ret
add
add
add
movsl
xchg
add
add
clc
repnz
jae
add
add
clc
repnz
jae
and
xchg
push
add
mov
clc
repnz
jae
add
add
lret
repnz
jae
push
add
push
xchg
add
dec
mov
fwait
cld
nop
jmp
push
add
add
jae
mov
ret
cmp
sar
repnz
jae
add
loopne
adc
repnz
jae
add
idiv
pop
clc
sub
loope
add
add
idivl
jbe
clc
repnz
jae
add
popf
add
clc
repnz
jae
sub
add
cmpl
fwait
cld
nop
jmp
add
and
push
add
add
jmp
push
outsb
add
add
add
popa
mov
popa
add
repnz
jae
add
cmp
test
nop
jmp
xchg
or
add
pop
xchg
pop
add
clc
repnz
jae
inc
lret
loop
add
push
push
mov
xchg
ret
xchg
add
add
cld
mov
push
mov
xchg
ret
push
std
sbb
loop
das
mov
fwait
cld
nop
jmp
add
inc
mov
or
inc
add
add
add
clc
repnz
jae
cmpsl
add
add
adc
movsb
add
nop
jae
add
sbb
inc
xchg
mov
mov
push
mov
xchg
ret
add
dec
dec
fwait
cld
nop
jmp
add
add
cmpb
fwait
cld
nop
jmp
add
cmp
add
in
add
jmp
pop
cmp
iret
iret
adc
in
jno
add
lods
clc
repnz
jae
mov
and
add
pop
clc
repnz
jae
add
add
clc
mov
push
push
mov
xchg
ret
add
loopne
push
lods
mov
nop
jae
dec
cmpsl
jnp
add
xorb
jl
xbegin
pushl
sub
insl
jne
clc
repnz
jae
testl
mov
popf
clc
repnz
jae
add
jnp
mov
push
mov
xchg
ret
sbb
push
add
cld
push
mov
lahf
iret
mov
and
xor
add
xchg
add
imul
subl
jmp
add
add
repnz
jae
add
inc
mov
push
jno
xor
nop
add
add
add
repnz
jae
add
xchg
add
js
rcrl
call
add
or
push
mov
xchg
ret
sbb
cli
add
mov
sar
clc
repnz
jae
add
add
mov
clc
repnz
jae
lcall
and
mov
xchg
ret
or
add
add
xor
jae
add
cmp
testl
add
int
clc
dec
add
add
jg
push
sbb
add
repz
push
add
mull
add
inc
add
lods
dec
add
mov
cwtl
fists
cmc
sub
iret
pop
sbb
sbb
jl
pop
fildll
sbb
mov
push
jns
rolb
fists
sub
sbb
jcxz
add
test
add
add
mov
fsubr
into
and
inc
add
cmpl
sbb
test
add
xchg
and
mov
rolb
jbe
pop
cmp
hlt
add
inc
sbbl
popf
in
repz
pop
insb
jnp
xchg
inc
mov
jno
jmp
jmp
cmpsl
mov
bound
mov
add
mov
fsubs
mov
movsb
add
testb
add
sub
addb
test
add
stc
xor
push
add
and
mov
fiaddl
add
push
add
ret
outsl
and
mov
add
xor
dec
cmp
xchg
add
je
mov
mov
mov
mov
dec
mov
pop
out
pop
mov
nop
add
sti
loope
shrl
mov
ficoml
add
ljmp
add
mov
addb
inc
add
add
icebp
cmp
xchg
add
mov
outsb
xchg
add
add
or
jle
add
sbb
jae
sbb
add
xor
sub
xor
mov
mov
pop
pop
rolb
or
and
xchg
add
add
xchg
ret
add
sbbl
add
add
mov
mov
les
out
loope
repnz
cmp
fistpll
add
lods
cwtl
and
xchg
hlt
add
sbb
mov
xchg
add
adc
addl
mov
add
mov
ret
jle
mov
mov
add
nop
add
add
sbb
in
pop
mov
jmp
push
add
add
cmc
rolb
and
sahf
dec
fistpll
add
es
adc
add
pop
or
xor
push
add
rolb
scas
daa
dec
dec
push
cltd
loop
and
mov
jge
jno
pop
jb
and
mov
add
add
add
and
add
add
dec
insb
cli
iret
push
push
jae
movb
or
add
push
add
cwtl
or
push
add
fildl
add
clc
iret
inc
add
xchg
cmp
pop
stos
int
adc
int
movb
xor
add
xor
mov
jp
test
add
das
fbld
add
fstl
popf
test
jmp
add
cli
pop
mov
add
add
aam
lods
mov
and
jb
adc
xchg
pop
scas
mov
ljmp
add
and
mov
pop
pop
ljmp
sti
push
test
jb
ljmp
add
mov
out
scas
add
add
add
add
xor
push
add
cmpsl
jnp
add
enter
add
loopne
insb
pusha
add
adc
add
test
dec
pushf
dec
fstpt
xchg
in
or
pop
testb
add
rolb
mov
out
je
stc
addb
ja
popf
shll
imul
xchg
add
xlat
inc
cmpl
fldcw
push
xchg
push
push
add
cmp
or
add
or
pop
mov
add
or
int
sub
add
add
push
add
adc
movsl
dec
push
add
add
pop
inc
mov
add
les
pop
sbb
iret
stos
cli
addb
add
ret
xor
cwtl
ret
sub
add
add
inc
add
xchg
lods
and
cmp
rolb
fcoms
sub
cld
push
jbe
mov
rolb
cmpsl
lret
xchg
sbb
inc
leave
jmp
add
add
jnp
lahf
inc
add
add
add
xchg
add
aas
movl
inc
mov
ljmp
insb
adc
mov
sub
mov
push
lock
pusha
add
add
movsb
add
loop
cmp
pushf
adc
aas
lcall
movsl
hlt
add
add
jae
sbb
mov
add
add
add
repz
cmc
pop
ljmp
lcall
add
jo
dec
leave
pop
call
push
add
xchg
xchg
cli
sbb
add
pop
loop
ret
add
add
mov
add
leave
cmp
add
lods
push
add
ror
test
jge
pop
lods
test
add
aaa
cmp
adc
mov
cmp
iret
mov
add
add
or
push
add
ja
popa
iret
and
orl
aam
mov
inc
add
sahf
push
sbb
add
rolb
jl
adc
add
dec
add
mov
add
test
add
add
add
insl
jne
adc
or
outsl
inc
add
lahf
testb
sub
mov
push
add
ret
add
pusha
add
mov
les
push
dec
cltd
sub
add
add
sbb
test
add
xchg
pop
imul
call
jb
mov
mov
add
fidivrl
in
lock
add
inc
lret
jge
fsubr
cltd
inc
scas
test
xor
xchg
and
fmuls
cwtl
loop
pop
rcr
push
add
cwtl
mov
add
add
add
mov
test
cmp
bound
mov
subl
cmc
adc
push
add
addb
xlat
dec
xchg
add
bound
mov
add
jl
jae
and
fstpt
add
data16
add
add
test
inc
add
push
add
adc
out
testb
aas
out
subl
in
or
adc
pop
push
lret
add
add
cmc
test
cmp
inc
add
add
stc
and
add
jecxz
inc
add
in
cld
adc
dec
popf
cltd
add
xlat
cld
mov
lahf
or
mov
lret
cli
inc
jmp
popa
mov
sub
fdivrs
rolb
ja
add
xlat
lods
sub
add
sub
add
add
and
jb
loopne
xor
pop
mov
add
daa
sub
mov
sbbl
jnp
repnz
cmp
dec
xchg
scas
inc
int3
mov
jns
fisttps
outsb
inc
add
add
add
int3
mov
inc
add
inc
leave
add
bound
mov
mov
pop
cmp
push
or
ja
add
sub
lock
add
xor
jecxz
push
add
inc
add
aas
xor
xorl
mov
mov
out
pop
pop
stos
jae
cmp
fcoml
rorl
sub
add
fld1
dec
dec
mov
add
mov
paddd
mov
jo
sbb
nop
add
fnstcw
add
jmp
cltd
pop
out
pop
inc
push
add
or
add
sub
add
scas
aad
testb
add
add
aaa
add
mov
std
mov
sbb
dec
cmp
mov
aas
mov
and
mov
mov
packsswb
test
loop
xor
lods
fnstcw
xchg
dec
aaa
or
mov
mov
mov
fisubrs
rolb
lahf
push
loop
jns
jg
add
popl
rolb
push
inc
dec
pop
movb
enter
pop
mov
frstpm(287
aaa
dec
sbb
mov
cmp
mov
add
in
pop
and
mov
jecxz
mov
mov
add
push
add
mov
mov
add
push
add
add
xor
mov
add
mov
out
paddusb
jb
add
jo
addb
xor
and
pop
xor
push
rcll
jo
je
pop
call
push
add
lret
inc
cmp
addb
add
jge
int3
popa
iret
ljmp
mov
and
xor
aad
mov
aam
mov
add
add
leave
push
inc
and
add
add
je
and
mov
push
add
call
adc
dec
jne
lret
mov
imul
add
mov
rolb
leave
out
movsl
js
add
add
call
add
add
push
xor
outsl
add
mov
add
xor
imul
xlat
mov
cmp
pop
jle
pop
daa
cmc
rolb
add
cmp
dec
xorl
xchg
in
add
mov
push
or
std
and
cmc
xor
addb
addb
push
add
pop
lret
xchg
testb
or
daa
jnp
add
scas
jno
push
inc
add
xor
pushl
fbld
test
mov
jo
fmul
pop
push
add
mov
cwtl
ds
add
add
in
add
imul
lea
sbb
das
pop
cmp
add
gs
push
js
jbe
test
jle
not
data16
std
mov
sub
push
jo
out
pop
aam
adc
push
pusha
add
clc
lcall
sub
outsb
sub
mov
mov
add
mov
jo
enter
dec
pop
push
xchg
inc
pop
or
cmp
sahf
adc
or
dec
movsl
or
add
mov
outsl
rolb
and
mov
add
in
add
mov
jbe
add
mov
call
js
mov
xchg
loope
aad
jbe
pusha
add
xchg
add
add
xchg
jl
cli
dec
cld
out
fistpl
jle
popf
inc
add
push
add
icebp
pop
imul
adc
sbb
mov
add
cli
mov
mov
sahf
dec
pop
xor
xchg
je
into
and
mov
mov
xchg
pop
mov
inc
add
imul
push
add
ja
js
adc
cmpsl
inc
add
jg
xor
mov
dec
push
inc
add
leave
mov
sbb
add
add
inc
add
xchg
int
xor
movsl
pop
xchg
add
xchg
aas
dec
xor
scas
aaa
mov
sbb
xchg
sbb
in
fcmove
push
push
add
cmp
call
add
int3
test
sub
push
add
fmull
repz
add
or
insl
dec
adc
inc
add
push
add
mov
fldenv
add
ja
mov
jle
mov
dec
pusha
add
cmpsl
mov
xor
popf
movsl
fsubs
add
mov
clc
add
cld
inc
dec
adc
pop
push
add
in
push
jp
add
mov
rolb
or
add
add
add
out
cmp
add
iret
add
inc
test
mov
cmpsb
add
add
imul
add
leave
lods
lret
bound
mov
stc
xor
pop
inc
push
aas
testb
addb
or
add
add
inc
add
push
add
add
out
nop
add
fstl
pop
xchg
add
icebp
sub
inc
add
add
mov
inc
add
mov
add
add
pushl
out
es
mov
rolb
icebp
push
pop
xchg
add
push
add
repnz
pushf
pushf
mov
adc
sub
out
mov
cwtl
sbb
add
pop
add
mov
adc
mov
mov
sub
add
add
add
jg
sahf
mov
addb
add
add
or
int3
in
cmp
rolb
mov
jb
loope
inc
add
add
leave
dec
aas
dec
mov
sahf
and
mov
popf
adc
pop
and
push
add
or
inc
testb
add
fstpl
rolb
sbb
add
cmp
add
add
fisttps
push
ds
add
and
lods
movsl
mov
add
mov
add
imul
or
push
sub
add
add
ja
xchg
add
push
imul
add
test
out
lock
xchg
decb
add
jmp
imul
icebp
and
mov
add
mov
cmpsl
rolb
aaa
add
into
add
fmull
pop
dec
leave
incb
add
pop
sbb
add
movsb
add
pusha
add
add
jns
cmp
mov
lret
push
add
add
add
test
cmpsb
add
and
add
add
add
xchg
out
aaa
adc
xchg
in
pop
xchg
add
outsb
or
push
add
add
dec
sbb
add
sbb
pop
inc
jp
add
scas
push
mov
dec
fcomp
or
jb
ja
add
or
or
rolb
in
add
inc
add
or
add
js
addr16
add
jns
jge
add
jnp
add
push
in
idivl
xor
push
jb
pop
icebp
out
push
cmp
xor
cld
int
dec
stos
ds
jle
fsubl
out
dec
sub
push
imul
push
add
cwtl
fnstenv
add
xor
leave
sub
add
cld
sub
push
fwait
pop
pop
xlat
inc
inc
lods
outsl
stos
push
add
or
mov
fidivrs
pushf
inc
add
add
popf
jne
sub
xchg
add
mov
sarl
or
jns
insb
js
inc
repz
sbb
or
mov
mov
in
lock
and
add
test
addr16
inc
add
in
addb
add
add
and
mov
dec
fwait
mov
xor
pop
je
in
in
in
adc
repz
ja
add
add
loop
xlat
add
add
add
shll
add
dec
in
push
add
call
mov
sahf
xchg
into
jmp
add
xlat
pop
push
add
add
negl
sub
je
addb
hlt
add
add
xor
inc
adc
add
add
add
xor
add
inc
jge
pop
inc
add
sbb
pop
sbb
add
stc
adc
hlt
add
pop
imul
dec
ja
xchg
iret
das
jo
or
add
cmpsb
add
add
lret
sub
fs
add
jnp
add
inc
xchg
add
rolb
fldt
adc
add
xchg
add
adc
scas
or
movb
fsts
iret
jae
call
cld
js
addb
sbb
lahf
gs
addb
cmp
dec
sub
adc
movsl
cmpsl
and
add
mov
push
add
add
add
add
mov
lds
add
add
lret
lock
push
add
add
or
add
xchg
add
sbb
add
aas
adc
jmp
stos
pop
testb
iret
inc
add
jp
and
mov
sti
add
add
add
fldcw
inc
add
jg
push
add
mov
add
enter
add
xchg
dec
je
adc
lret
add
inc
add
clc
or
add
push
add
add
push
add
sbb
add
mov
xchg
pop
lret
jge
add
cmc
pop
jmp
add
xchg
testb
xchg
popa
adc
and
mov
fstp
pop
push
int
rolb
add
xor
leave
aaa
mov
mov
add
rolb
xchg
add
add
add
pop
arpl
xor
add
dec
out
and
mov
popl
test
add
xchg
shll
movsl
lods
fdivrs
add
cmpsb
add
add
pop
movsl
leave
es
mov
add
mov
dec
loop
inc
add
add
dec
cmpsl
icebp
sbb
add
dec
jbe
or
inc
add
sbb
jp
testb
xchg
cwtl
mov
and
mov
cmp
jb
sbb
add
outsb
loope
add
push
mov
lret
cli
mov
mov
mov
rolb
push
sti
repnz
add
ss
cltd
jne
add
imul
add
add
add
cmp
add
lret
pop
stos
mov
movb
inc
add
icebp
mov
fiaddl
in
xor
mov
aas
add
mov
lahf
mov
inc
add
add
pop
pop
cmc
sbb
in
loop
stc
sti
mov
ret
int3
jl
xchg
fcomps
std
bound
mov
xlat
pop
sbb
cmp
add
sahf
sarl
gs
add
int3
add
ret
pop
nop
add
mov
add
add
add
jecxz
mov
adc
push
daa
sub
cld
dec
push
add
dec
jg
dec
mov
call
push
mov
or
les
stos
or
add
mov
add
add
inc
add
add
cmp
add
mov
add
add
mov
push
adcl
imul
popa
sti
jmp
add
jp
test
push
sub
xor
loope
add
mov
mov
hlt
add
pop
mov
jbe
insl
xor
jb
jno
mov
jae
adc
and
hlt
add
test
add
inc
add
fs
and
mov
aam
cli
mov
or
aad
add
add
add
add
notl
je
pop
cmp
jg
ret
mov
dec
cs
aas
stc
sarl
add
fadds
cltd
inc
add
add
add
add
xor
cld
mov
add
xchg
push
sbb
xchg
xor
pushf
add
add
dec
mov
shll
add
mov
sub
inc
movl
add
lret
xchg
mov
cmp
fwait
in
scas
adc
faddl
add
add
mov
mov
jo
das
adc
mov
push
notl
add
mov
xchg
mull
adc
das
and
sti
mov
sub
adc
push
xchg
dec
inc
add
sub
out
mov
flds
add
mov
rcll
mov
push
ret
adc
inc
add
addr16
add
mov
lret
pop
jns
mov
lods
aam
xchg
cmc
jle
or
sbb
add
mov
add
add
stc
push
add
add
sahf
mov
test
mov
sti
outsl
or
data16
add
loope
cli
loope
add
add
in
call
test
mov
or
xchg
and
js
add
in
mov
xlat
push
add
xchg
add
cmp
cmp
aam
adc
inc
ja
hlt
add
push
add
dec
shll
mov
xor
add
xchg
sub
add
lret
xchg
add
add
add
decl
ret
lret
cmp
mov
jecxz
mov
divl
xchg
add
daa
mov
es
sub
mov
dec
xchg
add
add
clc
out
repz
movsl
add
add
aaa
movb
out
push
lods
xchg
add
mov
add
fs
sbb
je
fcmove
cmp
add
idivl
addr16
loope
add
add
test
jmp
add
and
lret
je
lret
lret
mov
imul
dec
bswap
scas
mov
cltd
and
mov
xlat
inc
lret
stos
xchg
hlt
add
sub
add
add
addb
add
stos
cmp
sub
stc
out
movsb
add
add
int3
dec
add
mov
add
add
mov
lods
push
add
mov
jno
inc
mov
and
testb
clc
xchg
mov
cmp
fwait
xchg
add
add
in
sbb
movb
sbb
inc
add
sbb
mov
add
je
mov
mov
mov
adc
gs
add
sbb
jb
xor
adc
mov
push
add
test
add
add
mov
add
mov
add
add
mov
add
jmp
pop
fsubrl
sbb
fimull
mov
hlt
add
in
pusha
add
mov
or
add
dec
inc
add
add
scas
fidivrs
dec
inc
add
mov
icebp
imul
cld
adc
mull
test
xor
aam
scas
aad
jg
mov
jb
rorl
int3
dec
xor
out
mov
add
add
mov
pop
xchg
add
add
pop
pop
addb
add
in
push
add
addb
inc
iret
loop
sbb
enter
jecxz
cmp
mov
sub
push
fldcw
pop
popa
mov
add
add
test
jno
add
mov
add
rorl
add
add
pop
test
and
mov
inc
jg
add
push
add
add
mov
orl
repnz
add
xor
add
add
sbb
xchg
mov
mov
add
inc
add
add
sti
xchg
in
lcall
mov
add
push
adc
mov
add
xor
add
add
add
ljmp
into
out
jmp
cmp
add
fildl
mov
out
ljmp
add
negl
outsl
int3
dec
addb
addb
mov
or
push
cmpsb
add
ret
jle
push
add
insl
mov
in
lds
lea
les
sub
mov
pop
pop
cmpsl
mov
jno
jle
sbb
pusha
add
mov
add
xchg
loopne
repz
mov
je
sbb
lret
adc
aas
movsl
out
pushf
rolb
mov
mov
cmpsb
add
inc
iret
data16
mov
add
mov
int
add
add
mov
add
mov
scas
mov
mov
mov
mov
add
cmp
add
mov
add
add
add
xchg
add
add
pop
xor
mov
add
inc
sbb
in
mov
add
add
inc
add
cltd
cmp
add
stos
bound
mov
inc
add
fsubrl
add
add
shll
adc
div
add
sahf
inc
push
xor
pop
dec
shll
cmpsl
popf
jle
out
hlt
add
dec
lea
add
mov
sbb
mov
xor
shll
jle
add
out
add
inc
stc
mov
inc
out
or
in
add
add
mov
xchg
add
stc
mov
adc
out
add
enter
pop
stc
mov
jg
fidivrl
test
sti
ljmp
andl
popf
mov
fsubl
incl
push
aad
mov
jb
movsb
add
add
jg
adc
and
mov
cmpsl
aad
pop
mov
cmp
mov
jmp
testl
int3
pop
inc
add
insl
mov
movsl
mov
daa
pop
mov
out
mov
cmp
add
push
add
add
add
lret
mov
aad
add
sbb
add
scas
xor
xcrypt-cfb
cmpsl
add
sti
js
scas
stos
jl
pop
mov
mov
sub
inc
add
shll
popf
sbb
mov
add
add
add
test
add
add
int
add
mov
adc
add
jmp
add
test
rcll
sub
scas
leave
cltd
scas
bound
mov
mov
mov
inc
fadd
add
add
add
and
mov
mov
add
add
stos
popf
fmulp
inc
movups
popf
mov
dec
icebp
xchg
int
add
pop
add
xor
add
mov
insl
or
inc
pop
add
add
cltd
xchg
push
call
daa
push
add
add
test
mov
mov
add
ljmp
push
add
or
cmp
inc
fisubrs
inc
cmc
mov
dec
pop
into
adcl
mov
jmp
jge
jnp
add
dec
xor
mov
add
add
imul
testl
xchg
dec
cmp
mov
mov
into
imul
pop
sti
daa
jecxz
dec
pop
mov
mov
push
add
add
movl
add
mov
sub
dec
test
mov
push
add
add
scas
mov
xchg
jns
mov
fbstp
dec
outsl
lds
adc
add
mov
add
mov
sub
mov
inc
add
add
sbb
add
pop
ja
loope
dec
mov
add
inc
xchg
push
add
adcl
cltd
adc
out
sub
dec
mov
mov
ret
jmp
add
dec
outsl
cmp
add
neg
out
dec
dec
cmp
push
pusha
add
scas
xchg
jge
add
mov
cmp
add
xchg
mov
nop
add
hlt
add
adc
icebp
jge
dec
push
add
add
push
add
mov
pop
aaa
stos
adc
bound
mov
loop
in
fldenv
jp
mov
data16
out
out
add
clc
add
cmp
scas
cwtl
les
cmp
add
enter
xor
add
je
rolb
mov
mov
ja
aad
push
sbb
add
add
xchg
movsb
add
cltd
std
push
add
mov
push
add
mov
aas
xor
inc
sbb
add
jecxz
add
sub
add
inc
add
pop
in
mov
testb
add
dec
movb
cs
in
rcrl
jbe
pop
xchg
addb
repnz
add
ljmp
cmp
out
loop
mov
fwait
pop
sti
dec
int3
cmp
add
aas
hlt
add
add
rorl
push
scas
mov
dec
sti
addb
ljmp
js
sbb
mov
add
out
add
lcall
decb
fcoms
movsb
add
push
in
enter
repnz
cli
jp
outsb
add
mov
ficompl
ret
jnp
and
mov
xchg
and
xlat
and
pop
push
loop
push
leave
fwait
sub
fsubp
add
add
xchg
add
push
aad
cld
testb
testb
rolb
inc
add
icebp
push
in
insl
pop
addb
push
pop
pop
fwait
add
add
notl
mov
pop
insb
test
cmp
aas
les
andl
cmp
add
jae
push
add
insl
dec
jg
sub
add
inc
add
leave
pop
dec
imul
cld
mov
mov
or
add
mov
sub
pop
ret
cwtl
push
add
aas
push
add
pop
insb
sub
mov
mov
add
out
xor
pop
lock
mov
lea
lret
bound
mov
andnps
fsubs
jmp
adcl
std
push
add
icebp
sbb
jbe
fwait
aas
push
add
add
add
aaa
pop
fldt
fistpll
mov
xchg
pop
jne
xor
test
add
add
mov
add
sub
inc
out
push
inc
jmp
push
add
mov
adc
out
adc
add
jmp
lods
push
das
arpl
std
dec
ficomps
insl
cwtl
inc
add
sahf
mov
dec
fildll
pop
mov
jbe
dec
shrl
imul
fldl
inc
add
push
xchg
test
xchg
adc
mov
mov
call
add
lahf
rolb
test
and
mov
repz
mov
lret
les
push
add
std
push
pop
addb
mov
clc
scas
dec
je
inc
add
into
bt
jmp
ret
add
add
outsb
test
mov
enter
fsubl
push
add
imul
dec
mov
xor
push
or
cmp
push
add
into
out
add
add
add
inc
add
cmp
jbe
add
add
mov
ja
inc
add
add
xchg
je
xchg
sub
add
add
les
mov
push
add
lret
jp
dec
adc
mov
push
aas
testl
mov
bound
mov
movb
adc
nop
add
add
sbb
push
add
dec
dec
hlt
add
aad
add
aas
stos
dec
ja
and
scas
test
sbb
add
bound
mov
jp
inc
add
add
out
mov
add
add
add
iret
imul
loopne
jb
fildl
sub
add
mov
sti
aam
push
add
add
adc
outsb
mov
in
adc
pop
cmpsl
inc
jb
ja
testb
add
pop
sahf
push
mov
inc
mov
pop
ljmp
add
push
mov
pop
loope
add
push
das
xchg
add
and
lods
cmp
sti
ds
add
sub
loope
dec
rolb
addb
add
mov
add
add
sub
mov
repnz
fwait
sbb
testb
lret
mov
stc
jle
mov
cld
mov
addb
and
mov
insb
sub
mov
lods
imul
or
dec
ljmp
sub
add
cmp
fwait
cmpsl
pop
pop
push
dec
inc
add
jp
lea
adc
cmp
push
jae
add
add
rolb
adc
xchg
sub
out
adc
add
push
add
sets
add
in
addb
fdivrs
push
movb
jmp
in
icebp
stos
loope
sub
mov
jno
das
fisttpl
fldt
xchg
rorl
inc
add
sti
mov
and
mov
add
add
add
cmp
in
inc
and
mov
lret
add
rcrl
sbb
or
aad
pop
dec
lods
xchg
pop
stos
movsl
lods
mov
cmp
lret
sub
cmp
inc
add
add
add
test
fsubl
and
mov
push
add
inc
add
push
add
cmp
add
jmp
xchg
add
mov
test
pushf
lds
mov
rolb
test
movsl
jl
gs
pop
lret
cli
lret
iret
jecxz
jns
aaa
mov
mov
fcomip
add
cmpsb
add
testb
add
or
mov
popf
pop
out
mov
add
jnp
dec
cmp
ror
xor
sub
add
push
lcall
repnz
xor
add
rorl
inc
pop
out
pop
xor
add
add
add
je
mov
push
add
add
dec
mov
mov
lea
pushf
sbb
mov
cmp
in
pop
mov
pop
adc
loop
into
mov
add
outsb
fsubrl
movb
into
inc
and
mov
and
mov
xchg
inc
add
clc
montmul
cmpsb
add
or
add
pop
mov
and
fldt
sbb
cli
stos
ficomps
adc
add
xlat
push
add
dec
ljmp
addb
jbe
pusha
add
in
xlat
push
mov
pusha
add
xchg
add
or
add
cmp
inc
add
add
add
push
stos
dec
lea
and
cltd
data16
add
int3
outsb
int
jo
cmpsb
add
or
icebp
call
add
mov
fcomps
int
and
mov
fcmovnu
jp
mov
mov
cmp
add
mov
addr16
pop
pop
inc
add
add
add
cmpsl
cmp
jo
aas
ds
enter
add
push
dec
inc
add
xchg
jae
jg
jnp
add
xor
or
pusha
add
fsts
or
push
inc
push
add
xchg
xor
adc
dec
inc
mov
clc
adc
pop
push
add
inc
add
jecxz
lcall
and
sbb
adcl
cmp
add
push
add
add
cmpsl
mov
adc
data16
sahf
pop
add
adc
add
sti
lret
shll
add
add
add
test
xchg
add
add
add
addb
inc
add
outsl
insl
or
ja
add
or
cmpsl
jbe
sbb
mov
pop
xchg
add
cld
pop
sub
mov
jp
and
and
mov
cmp
sarl
add
add
out
push
jne
push
sbb
add
aam
mov
jg
add
scas
mov
pushf
dec
adc
jg
test
popa
ficoms
and
mov
add
mov
mov
add
iret
mov
mov
cmpsb
add
cs
in
push
add
add
or
pop
cmp
add
add
dec
push
add
pop
aam
adc
add
stos
sbb
add
dec
pop
add
mov
dec
or
add
lret
push
mov
mov
data16
push
add
rolb
pop
cmp
test
add
mov
shr
bound
mov
adc
repz
movsb
add
jbe
repnz
xchg
add
mov
jl
jmp
add
ficomps
or
fwait
jl
add
cmp
add
popa
xor
repz
out
cmp
add
rcll
stos
sbb
sbb
mov
add
mov
lods
pushf
fwait
push
adc
push
add
add
add
add
add
or
add
and
mov
in
sbb
sahf
cmpsl
ret
sub
adcl
out
cld
stos
into
pop
les
loope
add
add
or
add
add
xor
lret
scas
mov
inc
add
rorl
adc
testb
jno
add
sbb
xchg
repnz
sbb
int
ret
out
sub
add
out
mov
add
lock
push
add
add
add
add
nop
add
add
add
add
lods
inc
sub
add
jg
mov
add
popf
repz
add
mov
add
adc
add
xchg
add
push
push
loopne
mov
rorl
popf
lods
fmuls
dec
mov
add
mov
rcll
push
add
test
aaa
out
or
push
add
mov
add
jae
sbb
and
mov
add
push
mov
cmp
outsb
jno
aas
lret
lret
add
jmp
add
sti
xchg
outsl
test
adc
pop
pop
imul
fcmove
addb
add
add
test
nopl
mov
add
cltd
lea
add
mov
out
jl
mov
push
fnsave
add
add
ret
pop
lods
fadd
inc
add
je
mov
test
in
sub
jb
mov
in
jb
pop
shll
fldl2t
jnp
addb
add
mov
add
cli
xchg
in
pop
fisubrs
add
mov
jae
cltd
addb
int3
dec
movsl
scas
or
dec
stos
lret
pop
inc
add
push
mov
outsb
std
pop
aad
xchg
mov
add
add
iret
push
cmp
test
mov
adc
xchg
add
xlat
addb
inc
add
mov
adc
mov
add
mov
add
mov
fstpt
add
addb
add
mov
or
add
add
out
mov
add
mov
cmp
jmp
xor
call
add
add
fwait
xchg
lret
mov
repz
movsb
add
rol
jmp
jnp
xor
xchg
hlt
add
aas
add
mov
test
idiv
push
cmc
imul
push
rolb
fs
xchg
je
fcomps
sbb
cld
adc
push
add
add
add
add
arpl
inc
add
and
mov
adc
pop
and
xchg
push
add
add
or
addb
pop
loope
movb
in
adc
add
ret
mov
add
or
ds
add
pop
insl
mov
add
test
fwait
out
icebp
fnsave
jecxz
add
add
addb
inc
mov
insb
cmp
pushf
cwtl
xchg
lods
mov
cmpsl
ret
mov
jbe
push
add
add
lock
add
pop
cmp
std
push
xor
aad
mov
fisttps
add
mov
dec
jae
pop
jo
inc
add
popf
pop
xor
sahf
addb
jo
loope
xor
pop
subl
roll
addb
roll
add
add
fdivrs
scas
push
jns
sub
adc
bound
mov
mov
pop
push
xchg
add
add
add
icebp
cmc
outsb
xlat
std
loope
add
dec
enter
push
add
scas
push
add
add
jle
xchg
outsl
cli
int3
rolb
in
pop
and
push
sub
sub
je
addl
add
mov
icebp
je
fstpt
or
mov
out
aad
add
mov
inc
add
outsl
cmp
aam
fstp
les
xchg
add
repnz
in
or
sub
sbb
add
add
decb
lahf
push
das
je
in
std
xor
test
notl
xlat
lcall
cli
sub
out
cmp
mov
cmc
adc
or
lock
sbb
scas
loope
xor
pusha
add
lods
and
mov
call
inc
mov
add
add
inc
dec
or
push
add
addb
andl
add
add
add
add
add
xchg
add
adc
notl
arpl
aad
clc
dec
stos
dec
cmp
push
lods
int
add
add
lret
add
data16
icebp
sbb
inc
add
add
dec
sahf
rolb
dec
cmc
lods
imul
add
in
xlat
jmp
ffree
push
cwtl
jecxz
ficompl
add
stos
stos
outsl
and
fdivl
add
pushf
mov
popa
cs
xor
add
mov
out
add
inc
add
add
add
add
mov
outsb
addr16
push
add
cltd
pop
mov
rcrl
fsts
add
add
sub
add
mov
mov
and
insb
xor
add
pop
out
inc
mov
add
mov
xor
dec
call
add
jmp
add
add
or
pop
push
in
adc
movsb
add
adc
in
xor
aaa
mov
adc
mov
sub
sub
les
mov
add
rcll
inc
dec
pushf
pop
popa
add
and
sub
add
ds
xchg
arpl
add
add
dec
jnp
dec
dec
add
movsl
daa
adc
imul
add
adc
dec
jns
adcl
mov
and
xlat
lods
mov
pop
add
mov
add
mov
movsb
add
add
add
jg
add
mov
jnp
sbb
push
cmp
aam
fnstsw
xchg
add
and
mov
pop
testb
add
pop
sti
call
aaa
fdiv
add
fldl
add
out
add
mov
pushf
scas
add
dec
fwait
xchg
add
cmp
ret
jp
sahf
mov
mov
mov
shll
mov
mov
mov
rolb
fstpl
xchg
or
jnp
add
jmp
add
add
ja
dec
lret
fwait
push
add
shll
scas
pop
and
mov
push
mov
mov
std
push
add
jns
mov
adc
add
and
jle
int
jecxz
add
mov
jb
pop
into
cld
call
jno
or
mov
and
mov
out
xor
rolb
addr16
hlt
add
out
int
push
add
cmp
add
xbegin
xor
pop
mov
popf
aad
jb
outsl
testb
add
mov
rolb
std
sbb
mov
cmp
push
mov
lock
add
jno
push
add
mov
add
inc
xorl
mov
add
lods
add
lods
cwtl
ja
out
pop
push
cmp
aad
add
mov
dec
jecxz
add
add
test
dec
mov
cmp
dec
and
add
popa
mov
bswap
push
add
add
pop
sub
scas
push
mov
xchg
push
jbe
leave
pusha
add
add
sbb
aam
and
iret
movb
add
gs
add
cli
jnp
addb
pop
push
add
add
mov
add
xor
add
and
mov
or
mov
sbb
mov
dec
jno
pop
xchg
add
pop
or
sub
icebp
jmp
pop
sbb
push
mov
std
add
bound
mov
call
cmp
lods
rolb
add
add
add
push
pushf
cmpsb
add
cld
jle
es
mov
mov
and
mov
sahf
fwait
inc
add
and
in
pop
xchg
add
xor
adc
movb
iret
sub
mov
and
mov
mov
loopne
mov
stos
xor
pop
sbb
sbb
add
inc
cmp
add
pop
shl
add
repz
data16
mov
mov
mov
dec
in
or
push
add
test
sbb
and
mov
outsl
sbb
add
rcrl
je
rol
jecxz
pop
add
mov
jae
mov
push
fisubrs
out
rolb
push
ja
test
lods
push
fisubrs
push
push
add
mov
add
add
push
add
nop
add
popa
stos
mov
sarl
ljmp
add
jmp
popa
shll
push
repz
or
add
pop
outsb
mov
add
loope
add
add
add
jmp
mov
mov
mov
movsb
add
add
add
mov
arpl
testb
movsb
add
xchg
add
bound
mov
testb
add
sub
add
sub
outsb
cwtl
movsl
rolb
das
into
dec
jb
aam
mov
pusha
add
aam
xchg
add
ret
mov
xor
outsl
cld
cmp
std
test
leave
dec
ds
add
or
push
add
cltd
into
test
add
mov
fisubs
mov
add
add
mov
fnstenv
cmpsl
adc
aad
flds
mov
add
arpl
add
jg
jb
cs
dec
rolb
bound
mov
add
pusha
add
fiaddl
add
mov
mov
add
out
dec
rorl
loopne
adc
std
or
stos
push
dec
scas
jg
or
cmpsb
add
hlt
add
jns
and
mov
cmpsb
add
addr16
push
mov
mov
and
in
loopne
daa
in
sbb
add
jnp
jbe
aaa
xchg
add
add
in
fbstp
lock
sbb
cmp
imul
data16
mov
jno
cltd
sbb
inc
lahf
outsb
push
insb
test
push
add
jns
lock
das
or
leave
dec
out
movb
add
add
add
fwait
jge
add
mov
pop
jmp
add
lock
addb
add
cld
xchg
movsl
mov
jmp
add
mov
or
add
add
add
inc
add
add
add
add
xor
sbb
xor
loop
sbb
and
arpl
add
add
int
add
add
sub
scas
daa
sbb
data16
add
fsubs
mov
fsubs
add
adc
xor
mov
jecxz
xchg
in
inc
cmpl
mov
loope
fimull
add
repz
add
mov
movb
xchg
jp
addr16
add
add
sbb
cmp
lret
mov
arpl
clc
add
cld
or
sub
xchg
add
in
add
mov
imul
cld
jnp
in
les
pop
ljmp
sub
movsl
fdivs
add
into
pop
test
bound
mov
mov
or
and
jno
add
add
imul
add
dec
mov
xchg
push
add
clc
pushf
in
xchg
add
add
add
add
and
mov
add
mov
pusha
add
xor
clc
les
mov
lods
jnp
add
sbbl
scas
iret
mov
push
aaa
xchg
add
mov
or
add
add
mov
push
loope
dec
sbbl
cmc
inc
cmp
add
lcall
pop
sub
add
loop
pop
fstl
xchg
add
scas
xchg
add
add
mov
xor
add
dec
push
add
add
xor
add
xor
aam
insl
sub
pcmpgtw
add
add
push
add
add
ja
add
je
mov
hlt
add
mov
bound
mov
ljmp
push
cmp
adc
pop
add
dec
xor
cwtl
les
clc
jle
fstpt
das
scas
fstpt
cmp
add
test
mov
je
es
and
mov
push
dec
aam
dec
rolb
mov
rolb
ret
in
pop
clc
rcr
add
add
add
int3
cmc
das
jecxz
adc
jg,pn
addl
xor
stc
xchg
sub
mov
pop
pop
add
nop
add
add
mov
add
je
mov
add
xchg
xchg
sub
loop
dec
std
fisttpl
out
push
add
add
add
sahf
addb
inc
out
mov
jle
rolb
push
inc
add
fisubl
loop
inc
gs
add
add
aas
mov
or
add
add
jnp
in
in
xchg
sahf
add
cltd
lahf
pop
jnp
mov
sbb
cmp
jb
pop
addr16
call
outsb
daa
xor
dec
or
test
jle
pmulhuw
std
nop
add
mov
mov
lret
xchg
add
jne
outsl
sbb
add
mov
add
add
in
mov
inc
sub
add
mov
hlt
add
add
ret
or
aaa
cmp
addl
push
into
adc
cmp
dec
je
rolb
iret
sub
dec
hlt
add
add
mov
push
add
dec
rolb
and
cs
add
mov
push
mov
jno
fcmovnbe
add
push
hlt
add
arpl
aas
cmp
mov
mov
rolb
test
out
dec
mov
cmp
jl
jmp
inc
jmp
or
out
aad
fdivrl
add
rolb
mov
in
mov
sbb
jo
scas
add
xor
imul
add
arpl
mov
imul
add
push
add
cmpsb
add
loope
sub
add
mov
add
mov
dec
movsl
fisubrl
cmp
add
mov
add
add
xchg
mov
jne
jae
xor
xchg
add
arpl
push
add
cli
push
mov
lods
stos
pop
testb
fidivrs
icebp
inc
shrl
sub
push
add
dec
sar
jo
xchg
pop
and
sbb
add
jnp
popa
insl
mov
add
mov
sbb
bound
mov
arpl
jg
add
pop
dec
adcl
pop
fcomi
add
add
test
add
add
add
mov
pop
cmp
add
sbb
add
add
insl
mov
inc
call
fcoml
adc
test
add
mov
add
inc
add
add
add
mov
add
fiaddl
sub
or
loop
or
xor
add
mov
cli
dec
stos
mov
xchg
add
add
add
mov
imul
adc
rolb
sbb
fidivrs
testl
add
xchg
add
add
repnz
adc
inc
add
add
push
sub
mov
fcmovne
inc
or
jae
fstl
add
mov
data16
add
dec
dec
inc
or
nop
add
cmp
add
mov
dec
xchg
xor
imul
mov
and
mov
fcmovnbe
ret
cmp
sub
imul
pop
xor
addr16
add
rolb
add
pop
xor
lahf
fs
add
insl
jo
in
loope
gs
pop
dec
xchg
add
add
jns
ljmp
outsl
adc
add
adc
xchg
xchg
add
xor
cli
push
add
or
dec
add
mov
push
add
cmp
mov
popa
movb
ljmp
add
add
repz
add
add
add
clc
add
add
add
sbb
mov
add
sbb
dec
orl
mov
loop
sub
add
rolb
mov
je
in
lahf
sub
add
scas
sub
inc
add
xor
xchg
add
movsl
adc
inc
add
jns
sbb
ds
movb
in
imul
adc
mov
add
push
add
push
jmp
inc
mov
cmp
add
or
addr16
clc
adc
adc
test
add
jl,pn
dec
inc
add
add
cmp
aam
adc
add
add
add
dec
aas
rolb
add
stos
pop
and
xchg
and
cmp
add
add
mov
cmp
out
sub
push
add
dec
arpl
sbb
add
test
dec
int3
adc
in
test
mov
mov
dec
jbe
pop
into
jo
aad
sbb
lods
add
mov
sbb
add
adc
mov
mov
aam
pop
push
pop
in
rolb
add
jmp
add
rolb
icebp
or
enter
movsb
add
cltd
lret
addb
jp
bswap
clc
mov
add
mov
add
mov
dec
xor
inc
add
jge
addb
jne
add
dec
sub
lret
or
cmp
xor
mov
push
sbb
mov
movb
rolb
push
add
add
movsl
stos
cmpsl
cmpsb
add
mov
cs
shll
cli
jns
sti
dec
and
mov
add
popl
arpl
inc
sahf
dec
fistpl
rolb
sbb
rolb
add
mov
add
mov
xor
sahf
dec
push
add
rolb
testb
add
fistpll
mov
xor
cmp
add
add
fsubrp
cwtl
xchg
stos
pop
xor
sbb
jmp
add
rorl
mov
arpl
clc
cmp
cmp
mov
cwtl
mov
enter
lret
bound
mov
popf
ret
add
fwait
dec
dec
mov
inc
pusha
add
cwtl
sub
add
xlat
ja
xchg
sub
add
aaa
fimull
xorl
add
mov
int
add
inc
add
ss
fiaddl
add
and
mov
leave
adc
shr
insl
inc
add
roll
inc
add
add
jle
icebp
sub
jo
mov
mov
push
add
dec
inc
add
jne
adc
xchg
sub
add
dec
xor
jae
add
inc
les
out
hlt
add
jns
loopne
mov
adc
sbb
jbe
mov
add
add
idivl
rcr
daa
addb
xchg
aaa
mov
add
add
ffreep
add
fst
add
add
push
out
inc
pop
jno
add
imul
lods
and
dec
push
add
pop
cli
into
sahf
mov
add
mov
cmc
push
data16
add
add
dec
pop
fidivs
add
mov
add
mov
jg
enter
add
add
and
imul
rcl
jmp
mov
lods
mov
lods
insl
mov
data16
add
mov
add
mov
sub
fiadds
les
xchg
add
sbb
gs
sar
xchg
popa
repz
cmp
frndint
iret
jmp
sub
push
add
insb
inc
dec
cmp
add
add
add
iret
jge
pop
hlt
add
popf
add
add
add
jge
addb
out
movsb
add
sub
mov
cmp
sub
add
addb
and
mov
add
cs
add
popf
xchg
jl
push
add
add
xor
ljmp
and
mov
lds
aaa
lock
push
pop
mov
cli
addb
pop
fidivl
addb
in
cmpsl
adc
or
add
sbb
aas
cltd
test
add
dec
lret
cwtl
addb
mov
psllw
sbb
cmp
add
mov
out
stos
addb
aam
cmc
jg
add
movsb
add
cmp
test
fwait
fwait
loop
jbe
inc
add
js
jl
add
or
int3
cmp
add
add
addb
push
add
loope
out
subl
add
fcoml
xor
stos
dec
mov
xchg
mov
add
add
add
lret
cltd
addb
xor
ffree
add
in
mov
add
repnz
pop
jnp
jo
clc
aas
jecxz
cmp
add
push
lds
add
dec
lods
add
mov
dec
mov
lock
stos
fisttpl
sub
pop
mov
add
rolb
addr16
into
lods
push
add
xchg
lret
push
cld
cmp
gs
jp
data16
mov
add
jecxz
mov
xchg
add
inc
add
mov
xchg
sub
add
sahf
dec
cs
dec
fcompl
pushf
mov
jo
clc
pop
jns
push
or
cmp
nop
add
add
push
add
and
mov
sbb
add
push
dec
divl
xchg
jb
scas
in
xor
dec
jnp
add
pop
test
lods
mov
add
xlat
adc
add
loop
and
xchg
shll
hlt
add
add
movl
push
or
push
gs
xchg
aam
push
add
inc
inc
add
pop
xor
ljmp
xchg
add
testb
add
sbb
inc
lods
dec
and
mov
data16
mov
inc
add
and
push
add
mov
ljmp
add
mov
add
addb
mov
xlat
or
jp
inc
xchg
sbb
add
add
add
add
cld
dec
push
add
fimuls
add
xchg
adc
fisubl
dec
or
add
add
xor
dec
xor
repz
data16
add
movsl
stos
xor
and
popf
push
add
sub
add
call
mov
out
mov
mov
sub
mov
push
add
mov
sub
fwait
imul
xchg
mov
test
mov
stc
add
decl
into
pop
jl
arpl
out
aaa
xchg
add
jno
mov
sbb
add
cwtl
add
adc
test
clc
ljmp
xor
addb
add
lock
adc
add
lahf
add
cmpsl
or
push
lds
pop
sahf
mov
adc
add
add
icebp
add
adc
into
mov
jmp
xchg
hlt
add
add
inc
add
add
add
movsl
ja
lea
pushf
into
jnp
add
cmp
add
mov
add
mov
fldcw
xchg
add
add
aam
add
jmp
add
inc
pushl
cmp
add
and
call
xchg
adc
popa
subl
mov
inc
or
add
pop
sbb
scas
stos
push
add
push
adc
addr16
scas
in
mov
add
add
movb
sub
push
add
sbb
mov
jns
mov
ret
push
add
dec
or
add
xor
fwait
pushf
and
mov
cmpsl
lret
lcall
fistpl
or
pop
aad
sar
mov
lret
xor
sbb
add
add
dec
mov
addl
jb
dec
sub
pop
lods
add
addb
add
push
pushf
mov
aas
cmpsb
add
adc
push
add
js
push
rolb
push
add
add
fwait
pop
or
popa
sbb
cmp
fldt
js
xchg
push
cmp
in
int
add
in
xchg
add
jnp
mov
inc
add
pop
inc
add
add
fwait
mov
add
faddl
fsubl
add
add
inc
dec
bound
mov
movb
test
pusha
add
push
add
xor
adc
sbb
shrl
add
push
nop
add
stos
sub
aaa
fwait
xor
xchg
add
add
mov
ja
add
push
add
add
mov
call
mov
cmp
add
xor
dec
fcmovnb
add
test
rolb
and
mov
pop
jbe
divl
scas
call
add
sbb
stos
mov
lock
add
push
xchg
pop
stos
ja
out
pop
stos
mov
add
add
adc
roll
hlt
add
add
das
fdivrs
pop
inc
add
mov
cmpsl
add
adc
adc
mov
inc
add
xor
js
cmc
stc
add
mov
push
and
mov
add
add
mov
pop
inc
add
fbld
xor
add
cmpsb
add
dec
dec
sub
cmp
push
add
nop
add
cmp
jle
add
mov
mov
push
or
add
insl
or
fwait
inc
xchg
add
repnz
add
xor
cmpsl
cltd
testb
jmp
cwtl
outsb
inc
mov
cmp
mov
xor
iret
inc
shrl
xor
movb
add
add
mov
mov
xchg
ljmp
fcmove
add
mov
mov
popf
int
popf
out
push
push
jecxz
pop
addb
jmp
je
mov
mov
and
pause
add
add
psubq
pushf
popl
add
inc
add
jbe
test
repz
xchg
or
fsub
add
arpl
mov
or
add
pop
xchg
insb
adc
inc
dec
mov
cmp
repz
js
xchg
or
je
add
mov
aad
bound
mov
add
add
xor
movsl
mov
ja
addb
jl
pushf
mov
adc
jo
jnp
push
call
sub
add
xor
dec
jmp
sbb
add
jno
dec
mov
gs
add
jns
and
xlat
ret
outsl
dec
arpl
add
xor
push
mov
mov
add
stc
movsb
add
jl
add
mov
add
mov
mov
pop
mov
mov
add
mov
jo
lods
mov
xchg
add
mov
lea
lods
lahf
sarl
mov
cwtl
fld
inc
add
add
fcompl
add
rolb
loop
lahf
mov
add
mov
mov
fucomp
gs
xor
push
and
add
loope
jmp
pop
push
add
jecxz
hlt
add
mov
cld
repz
pop
push
add
or
ja
dec
add
add
loope
add
add
add
jne
outsb
push
add
mov
imul
out
pop
adc
in
adc
lret
ficoms
lds
inc
mov
add
and
iret
test
ret
pop
out
lahf
enter
int
pop
sbb
in
xor
add
add
add
add
add
adc
dec
aaa
addr16
fwait
roll
sub
in
into
pop
fidivs
gs
mov
xchg
add
mov
out
rcrl
jecxz
mov
stos
xchg
xor
lods
pop
dec
cmc
rcrl
cmc
popf
fimull
mov
add
mov
nop
add
add
sbb
les
jae
inc
add
add
add
add
pusha
add
insl
bound
mov
inc
out
add
push
add
add
add
pop
pop
pop
mov
les
pushf
pusha
add
lock
add
mov
outsb
jg
jbe
push
push
inc
inc
stos
inc
add
dec
jb
xor
scas
dec
cwtl
test
data16
addb
std
fmull
ljmp
pop
and
icebp
addr16
mov
inc
stc
xor
lds
add
add
mov
adc
pop
sbb
mov
pop
mov
addb
add
mov
add
ljmp
rolb
mov
out
mov
das
and
aaa
adc
xor
sahf
push
ja
dec
rolb
or
mov
add
add
inc
add
das
mov
mov
mov
lahf
dec
xlat
pop
data16
cmpsb
add
add
pushf
jb
add
testb
sub
sub
daa
add
xchg
jl
out
in
cwtl
push
add
add
add
add
add
shl
jl
bound
mov
dec
add
push
add
sub
mov
mov
cli
cmc
rol
cmc
xchg
add
dec
push
mov
jb
aas
aas
popa
ret
sbbl
mov
movl
or
mov
jbe
jge
in
lds
lahf
mov
sbb
rcll
test
add
jno
add
mov
push
aaa
in
lds
pop
fsts
shrl
add
ficoms
add
adc
dec
xchg
out
sub
rcrl
out
dec
and
adc
jns
into
lcall
xchg
bound
mov
add
add
hlt
add
add
rolb
sbb
mov
inc
add
pushl
sub
or
pop
jmp
mov
addb
mov
mov
lds
add
add
add
mov
or
push
mov
mov
mov
jo
int3
sbb
add
mov
pop
fcmovnb
add
int
dec
or
add
aaa
daa
and
pushf
data16
add
xor
in
pop
and
mov
add
fisttpll
cmp
add
mov
add
or
jmp
xor
subl
mov
xchg
sbb
add
mov
mov
insl
lahf
fnsave
jae
jp
pop
jp
add
add
daa
and
sahf
adc
sbb
nop
add
add
mov
out
add
out
pop
adc
int3
bound
mov
xchg
insl
xchg
inc
add
daa
inc
xor
add
xlat
stc
jae
cld
jmp
lret
gs
cmc
pop
outsl
fstps
add
cli
addr16
rolb
jno
mov
fmull
dec
dec
das
jmp
addb
fiadds
pop
in
mov
xchg
rcrl
imul
xlat
sub
add
pop
dec
sub
cmp
int3
pusha
add
xor
push
add
ret
xchg
cmp
jnp
testb
mov
je
rcrl
xchg
add
popf
push
mov
add
add
adc
sbb
inc
cmp
jmp
cli
lea
rolb
xor
hlt
add
into
inc
ret
lcall
pop
call
or
mov
add
mov
add
in
pop
bound
mov
cmp
stc
sub
inc
mov
mov
dec
fadds
adc
cltd
psrld
sbb
aad
jecxz
inc
add
movsb
add
pop
mov
push
pop
sti
ret
mov
je
sbb
push
mov
mov
push
and
jns
fsubrl
cs
outsl
ret
popa
sbbl
addb
add
mov
jmp
sub
mov
add
mov
add
jecxz
add
xchg
fnstsw
xor
push
xor
mov
push
add
es
add
jnp
pop
mov
rorl
add
add
mov
add
add
or
cs
sbb
add
into
push
lret
pushf
sub
mov
add
add
or
jecxz
add
mov
add
jl
add
std
fcoms
add
xchg
movb
sahf
test
iret
daa
ret
add
add
inc
jg
sub
mov
jle
fwait
arpl
aam
cwtl
out
cmpsl
iret
loope
dec
inc
add
add
daa
pop
cmp
add
add
inc
add
iret
clc
and
mov
add
push
add
movsl
add
mov
mov
add
mov
mov
add
add
lods
jge
add
adc
add
nop
add
add
dec
decl
mov
pop
xchg
packsswb
add
mov
cmpsl
imull
add
add
add
add
add
rcrl
je
rolb
xchg
cmc
push
add
xchg
add
sub
add
in
and
mov
add
lds
jg
stc
mov
xchg
add
mov
dec
jecxz
cmp
xor
outsb
or
push
add
mov
fldt
add
and
les
mov
leave
sahf
xchg
jbe
out
js
add
add
add
fidivrs
add
sub
testb
add
cltd
cmpsb
add
out
add
sub
shr
add
ret
lahf
inc
stc
pop
shll
dec
xchg
stos
icebp
fistpll
bound
mov
cmpsb
add
add
test
xchg
pop
and
mov
cmp
or
mov
ds
xor
js
xor
int
data16
xor
push
add
add
add
add
mov
add
add
add
popf
xchg
add
sbb
iret
dec
xlat
addr16
testb
ficoml
and
frstor
xchg
mov
add
xchg
add
loope
mov
add
xor
mov
and
jnp
out
stos
test
addb
and
pop
add
mov
xchg
jmp
rolb
mov
push
add
jg
cmc
ljmp
lcall
pop
gs
movsl
cmp
push
add
addb
std
or
cmp
out
movsl
xchg
or
add
arpl
adc
jo
mov
mov
lret
add
rorl
dec
cmp
repz
lea
ja
push
pop
jle
les
inc
add
inc
and
add
enter
loop
mov
aas
cmp
add
and
mov
add
data16
fmull
je
or
add
add
jmp
in
jle
outsl
jge
pop
or
add
push
add
ret
mov
xor
add
adc
adc
movsb
add
sub
cmp
add
ffreep
mov
ret
add
mov
add
add
cmp
fildl
mov
ret
ja
add
dec
rolb
in
in
repz
sbb
add
ds
cmp
call
add
out
int3
aam
cmp
in
xor
lods
cmp
xchg
insl
test
add
mov
rcrl
lods
mov
add
mov
dec
lods
loopne
imul
es
add
bound
mov
mov
xchg
rolb
mov
mov
fcomps
sub
adc
add
add
push
add
dec
mov
add
jbe
jno
adc
fcmovnb
je
lret
push
add
jge
into
lds
in
rcll
stc
mov
loope
add
sub
lods
and
mov
add
add
mov
or
adc
inc
adc
push
add
add
add
sarl
loop
mov
dec
jle
push
fcompl
stos
push
push
push
mov
jae
add
lea
mov
add
into
testb
popa
pop
dec
push
add
insl
cmp
jecxz
xchg
add
add
xchg
add
add
add
add
cwtl
xor
add
mov
add
movsb
add
adc
push
pop
dec
mov
sbb
add
mov
mov
add
cmp
add
cmp
call
add
ret
xor
pop
adc
add
loopne
lea
pop
das
fstpl
add
add
adc
add
hlt
add
sti
pop
rolb
jl
cmc
xchg
repnz
or
add
test
insl
cmpsl
cmp
cmpl
push
add
mov
add
testb
popf
lds
ds
lret
add
add
jecxz
add
cli
mov
fldt
add
add
sbb
adc
rolb
adc
pop
ret
lock
rolb
jno
imull
push
push
data16
stc
mov
loope
add
and
add
scas
jl
imul
ljmp
add
jl
scas
pop
insb
mov
and
add
xchg
xor
mov
in
inc
xchg
stos
flds
add
scas
flds
add
add
pop
xchg
mov
add
add
mov
stos
dec
adc
add
stc
mov
mov
fdivs
fstpt
lock
add
xchg
add
mov
test
xchg
add
add
add
popf
cmpsb
add
mov
add
mov
scas
add
mov
add
add
sahf
mull
xchg
inc
add
add
in
lret
add
push
inc
add
add
pop
mov
sbb
add
dec
out
pushf
xor
add
add
outsb
test
mov
ja
xlat
faddl
sbb
add
mov
add
scas
fcmove
or
iret
fisubs
mov
mov
ljmp
mov
cld
xchg
add
mov
dec
adc
lret
dec
lahf
cld
mov
movb
add
add
add
dec
pop
mov
mov
adc
add
mov
rolb
add
add
xor
mov
bound
mov
add
add
jl
lahf
mov
sbb
decl
dec
in
and
mov
add
sub
mov
jbe
pushf
jno
addb
add
dec
pcmpeqw
insb
dec
fldl
add
ret
addb
mov
jne
out
pop
enter
je
sti
fisttpll
pushf
add
add
jmp
xor
test
mov
pusha
add
mov
and
push
add
sahf
jo
mov
xchg
movsb
add
add
loopne
addb
loop
fwait
xor
dec
sbb
sub
adc
rolb
mov
aaa
repnz
ljmp
add
in
out
lret
inc
add
out
icebp
cmp
add
adc
inc
dec
shrl
mov
add
lret
imul
sbb
push
add
pop
rolb
mov
jne
data16
add
or
mov
mov
lea
or
aaa
lds
add
inc
add
call
mov
mov
outsb
dec
adc
xor
into
dec
movb
pop
mov
add
add
push
mov
add
adc
scas
fsubs
add
dec
icebp
add
xchg
add
xchg
jp
add
sbb
add
add
inc
add
pop
push
add
mov
movsb
add
mov
add
fidivs
daa
or
test
scas
mov
lahf
rolb
dec
or
sub
mov
xchg
add
ja
or
add
dec
xchg
into
cltd
ret
add
or
dec
pop
lahf
add
mov
add
jbe
jb
lock
sub
add
add
sbb
add
pop
xchg
add
fidivrl
add
addr16
add
inc
inc
add
add
inc
divl
inc
mov
add
add
pop
xchg
cmp
push
add
xorl
cmpsb
add
adc
cmp
bound
mov
add
xchg
add
outsb
pop
add
mov
jmp
add
and
mov
push
add
aaa
ret
mov
xlat
mov
dec
mov
and
lds
xor
dec
std
push
add
jo
mov
setns
bound
mov
testb
data16
xor
mov
pop
cwtl
lods
shll
lds
push
and
add
dec
out
jp
sti
lea
dec
mov
add
xor
imul
popa
lea
les
rorl
inc
out
std
lods
cmpsl
xchg
enter
add
call
add
fiadds
ret
sahf
inc
cmpsl
mov
add
addb
jmp
jge
jno
add
add
mov
mov
sub
out
mov
arpl
add
fdivp
add
adc
fidivrl
add
mov
push
add
rolb
in
cmpsb
add
mov
fcoml
ds
mov
stos
sub
repnz
jp
shl
add
add
mov
les
jo
mov
popa
out
iret
repz
cmp
int
pusha
add
jmp
sub
add
cwtl
mov
xchg
into
mov
add
hlt
add
addb
mov
insl
dec
xor
xor
push
in
add
sub
rcll
add
fcomps
add
add
test
rolb
push
sahf
out
addb
je
loope
test
add
mov
arpl
add
imul
sbb
add
xor
jnp
inc
loope
cltd
out
inc
add
add
mov
inc
add
inc
push
dec
mov
out
sub
add
add
jne
pushf
mov
clc
inc
or
add
add
xor
ficoml
int3
push
push
add
mov
das
add
mov
clc
xor
xor
xchg
adc
add
xchg
add
pop
inc
add
jecxz
mov
inc
add
mov
add
enter
xchg
loopne
add
insl
arpl
jae
push
add
xlat
out
cmp
mov
scas
mov
or
sahf
outsb
adc
push
jg
add
vmread
movsl
gs
push
dec
pop
div
add
sbb
and
cltd
stos
mov
repnz
fs
add
or
rolb
pop
xchg
add
lret
cmp
jge
stos
in
cmp
aam
adc
insl
add
mov
inc
mov
xor
jp
add
add
add
xor
mov
pop
loop
ret
jg
add
jp
pop
les
sarl
inc
cmpsl
lea
push
adc
rcll
test
and
xor
dec
lret
add
dec
jge
xchg
sbb
add
je
sahf
xrelease
add
cmp
pop
adc
gs
repnz
and
out
and
dec
inc
add
add
push
xchg
add
fcmovne
push
add
mov
mov
sahf
fildll
cs
out
xchg
pop
ds
pop
cltd
jns
insb
mov
mov
insl
sbb
test
scas
rsm
ja
inc
sub
sub
push
jecxz
mov
jle
xchg
fdivrl
inc
add
sub
fidivrl
dec
cmpsb
add
add
sbb
stc
jae
in
mov
ds
aaa
loop
push
add
add
inc
fcmovnb
add
xchg
clc
push
add
imul
pop
call
aad
mov
jb
in
shrl
add
ja
sub
movb
add
mov
je
shll
jle
add
mov
sbb
add
pushf
sbb
jnp
dec
movsb
add
dec
lods
cmp
dec
push
add
insl
push
pushf
xlat
mov
fimull
push
cmp
cmp
sub
xchg
add
mov
push
mov
sub
test
add
sbb
aad
shll
mov
lahf
or
inc
add
xchg
add
popa
xchg
inc
add
cs
add
jmp
pop
or
lahf
xor
add
pop
push
add
add
mov
or
test
cmp
sahf
pop
jmp
inc
insl
xor
cmp
aad
add
add
outsb
lahf
lock
int3
xchg
aas
scas
jne
adc
pusha
add
cmc
lods
out
pop
mov
xchg
adc
movsl
jno
dec
dec
out
jge
in
mov
add
fldenv
push
cli
push
or
movsb
add
and
addr16
push
add
in
nop
add
lret
add
mov
xchg
nop
add
aaa
js
loop
cwtl
xchg
les
push
add
mov
mov
mov
xchg
add
out
inc
push
mov
sti
inc
daa
xor
adc
stc
ret
ja
jo
dec
add
jno
shl
add
add
add
add
jmp
xchg
add
cmp
cmpl
jae
add
das
cmpsb
add
sahf
shll
inc
add
add
leave
int
dec
cmpsl
bound
mov
data16
movsl
pop
cmp
jno
push
movsb
add
dec
adc
aam
sti
addb
repnz
jno
add
addb
sbb
imul
mov
mov
mov
jecxz
push
add
inc
add
mov
add
add
push
add
add
jae
outsl
add
add
fimull
and
mov
add
mov
in
enter
fmulp
xor
rolb
pop
jecxz
push
add
add
add
xchg
add
lea
fstpt
push
add
add
add
lahf
mov
mov
pusha
add
rolb
hlt
add
add
ret
outsb
push
add
add
les
or
add
mov
push
out
sbb
dec
pop
dec
and
add
push
add
das
add
int3
cli
sbb
xchg
add
add
ljmp
decb
iret
enter
sub
add
stos
and
mov
dec
jp
pop
pop
ret
fwait
jmp
add
add
out
add
cmp
add
js
je
popf
dec
es
xchg
inc
icebp
or
mov
repz
jg
dec
xor
mov
mov
add
cmpsl
imul
cwtl
fwait
int3
inc
out
pop
pop
mov
ret
and
mov
add
jmp
cmpsl
test
add
insl
sbb
pusha
add
jnp
add
add
xor
cmp
scas
sti
hlt
add
add
sti
sahf
mov
pop
pop
pop
outsl
movsb
add
mov
cltd
bound
mov
cltd
jmp
add
mov
cmc
and
add
pop
and
add
pusha
add
in
in
subl
ds
ss
fxch
mov
add
stos
mov
lcall
psrlw
xor
dec
in
push
add
sub
xchg
out
in
std
hlt
add
aam
lods
loopne
dec
popf
xchg
add
scas
call
hlt
add
inc
mov
add
sub
add
add
add
xchg
mov
rolb
add
or
add
mov
in
add
jbe
dec
mov
mov
adcl
cs
das
ficoms
jo
into
lea
cmp
pop
push
push
add
scas
dec
mov
in
mov
and
sahf
popa
adc
mov
cmp
out
sbb
add
sbb
add
pop
clc
mov
subl
mov
push
push
mov
mov
push
add
adc
add
add
insl
addb
into
and
add
in
push
add
add
clc
jns
adc
add
add
add
add
add
pop
rolb
pop
rol
add
cwtl
xor
xchg
ret
addb
add
push
add
mov
dec
int3
pop
arpl
mov
stos
aaa
testb
add
les
nop
add
cs
xchg
addb
add
add
jmp
xchg
jne
jnp
inc
add
add
std
out
push
add
and
ret
or
rolb
jne
add
into
mov
mov
mov
add
mov
push
add
add
xchg
add
cld
mov
add
cli
cld
cmp
adc
es
or
testb
add
add
add
fdivs
mov
pop
jmp
add
cmp
add
xchg
mov
xor
inc
add
add
int3
xchg
pop
sub
add
leave
mov
add
add
int3
movsb
add
jb
jmp
pop
pop
lcall
add
push
add
xchg
add
clc
jl
pusha
add
inc
add
into
xchg
test
movsb
add
add
cmpsl
addb
repnz
jp
add
add
mov
testb
das
das
popa
or
add
ljmp
xchg
add
xchg
add
add
sbb
pop
loope
sbb
pushf
mov
inc
add
dec
test
out
adc
xor
cltd
outsl
add
mov
popf
and
xor
rolb
test
clc
mov
rcrl
mov
iret
pop
cwtl
adc
sbb
shll
rolb
addb
pop
iret
cmpl
mov
sbb
xchg
add
add
jne
add
ss
mov
sub
add
mov
icebp
xchg
add
add
and
mov
add
add
mov
imul
in
repnz
je
lock
add
add
add
and
push
add
jp
fwait
stos
mov
add
add
add
lahf
mov
mov
add
mov
add
iret
inc
nop
add
add
push
add
push
cmp
je
jb
popf
adc
mov
insb
mov
addr16
xor
xor
dec
xor
icebp
push
mov
cwtl
mov
dec
push
add
stc
fwait
outsl
cwtl
and
sbb
clc
push
xor
xchg
mov
mov
mov
and
add
movl
inc
add
jecxz
add
aad
dec
pop
push
in
add
mull
cmp
in
mov
ds
adc
add
ja
add
sub
repnz
add
cmp
icebp
pop
xchg
hlt
add
push
int3
inc
add
jo
arpl
add
mov
and
imul
xchg
pop
xchg
imul
inc
addb
and
or
stos
ret
or
fadds
mov
add
outsl
dec
xchg
pop
mov
mov
out
fistpll
push
add
pop
mov
add
mov
jle
add
leave
and
add
adc
push
add
nop
add
frstor
sub
add
cltd
add
movb
cmp
test
cltd
and
mov
pushf
icebp
push
push
add
add
xchg
add
ds
jbe
push
push
add
add
lods
xlat
xchg
aas
popa
shl
cmc
mov
lcall
and
mov
popa
fistpll
js
add
test
add
add
xchg
mov
enter
sbb
nop
add
inc
mov
add
add
mov
push
loopne
push
inc
add
cmc
mov
push
ds
daa
sub
or
ret
or
add
andl
add
add
push
mov
repz
sub
sbb
scas
mov
pusha
add
les
xchg
add
rolb
jmp
sub
add
repnz
punpckhbw
loopne
mov
test
mov
adc
cmc
test
jmp
fsubrl
les
int3
data16
add
mov
add
xchg
add
add
add
jecxz
add
mov
add
sub
ret
outsb
mov
push
add
add
xor
hlt
add
push
add
lds
in
cltd
mov
std
push
add
inc
add
bswap
addb
add
jae
add
cltd
sbb
pusha
add
repz
add
and
nop
add
add
dec
inc
and
add
out
add
mov
scas
push
add
int3
mov
pop
jae
frstor
cmp
scas
xorl
scas
call
sbb
cmp
dec
push
add
jnp
add
mov
sti
adc
sbb
imul
mov
int3
inc
sub
fcoms
test
add
mov
and
loope
sub
jo
cmpsl
test
add
in
xchg
add
add
sbb
test
add
in
call
add
inc
add
add
pop
jae
imul
ja
dec
dec
or
xchg
mov
xchg
cmp
movsl
xor
in
ret
mov
rolb
sbb
aad
xchg
cmp
add
add
push
add
add
add
adc
push
push
add
sahf
sarl
sbb
mov
mov
add
inc
movsl
push
or
ret
jnp
mov
mul
add
cltd
iret
xchg
add
add
mov
dec
add
and
mov
ljmp
dec
fimull
or
cltd
call
cltd
add
mov
xor
push
add
in
std
cld
fstl
cld
lret
lcall
add
push
test
sti
jae
pop
inc
add
lea
into
cmpsl
dec
mov
enter
add
xchg
aad
add
mov
add
clc
and
add
roll
mov
xor
ss
pop
int3
pop
mov
les
push
add
fwait
cld
outsl
adc
add
popf
or
jp
imul
add
sbb
mov
out
xchg
add
sarl
icebp
push
repz
add
dec
mov
pop
and
xchg
add
js
lods
aaa
mov
add
daa
adc
jo
mov
mov
mov
add
cmpsl
rolb
andl
cmc
pop
push
inc
ficomps
and
xchg
add
jg
stc
push
jp
mov
je
push
add
loopne
lahf
stos
jecxz
stos
inc
add
inc
add
add
add
out
out
cmp
add
inc
dec
stc
in
sub
lods
sub
add
lds
xor
cmp
add
push
jbe
pushf
sti
adc
mov
popa
push
push
xor
aad
sbb
add
sbb
xchg
adc
xor
sub
ret
movsl
push
add
add
add
cwtl
data16
mov
jno
loope
jno
out
fs
xchg
add
roll
mov
push
dec
out
in
dec
pop
aad
or
or
clc
inc
in
or
or
sbb
test
sub
adc
inc
add
mov
mov
add
mov
mov
lds
or
add
add
cs
push
lods
lcall
pop
jmp
cmc
pop
or
loopne
je
insb
mov
push
or
add
std
lods
dec
mov
icebp
push
add
sub
dec
cmp
add
repz
lds
cmp
fimull
cwtl
push
cld
leave
mov
xorl
add
frstor
add
hlt
add
jecxz
popf
push
xor
into
and
mov
add
add
add
int
xor
add
arpl
push
add
lds
int
fs
ret
dec
iret
scas
sbb
pop
mov
mov
lds
add
add
adc
pushf
sbb
mov
fsubrl
adc
xor
jno
test
sbb
add
out
aad
fcomps
iret
add
mov
sub
push
add
xor
mov
add
mov
push
mov
add
jg
rolb
subl
insb
mov
add
add
mov
push
add
jns
or
add
stos
jbe
lock
stos
test
sahf
stos
push
add
push
mov
jle
add
sub
mov
xor
insl
testb
sub
icebp
aam
stc
xor
push
add
add
jl
mov
xchg
add
jb
xchg
adcl
stos
mov
add
add
or
jp
add
xchg
lret
xchg
add
add
push
add
sbb
scas
fwait
scas
inc
add
test
in
data16
fwait
scas
arpl
loope
sti
test
adc
add
sbb
push
mov
xchg
add
mov
and
fistl
mov
or
xchg
add
mov
add
add
sbb
add
inc
add
sbb
adcl
mov
add
add
add
sub
add
add
stos
mov
in
add
mov
popf
cmp
pop
lock
cld
dec
les
mov
in
push
add
or
jge
dec
mov
pop
xor
bound
mov
inc
add
cmpsl
xchg
add
push
add
add
add
test
in
sub
add
push
add
rcrl
out
jmp
add
add
bound
mov
add
inc
add
push
mov
leave
iret
push
cs
xchg
add
mov
loope
cmpsl
ret
add
add
cmp
lods
jmp
sahf
cmp
add
mov
clc
xchg
xor
cmp
adc
jmp
movsl
rolb
add
add
aaa
rolb
mov
pop
push
jns
and
mov
in
jnp
inc
repnz
or
mov
mov
outsl
push
add
add
add
add
or
inc
add
mov
inc
adc
mov
cmp
add
add
add
cmpsb
add
mov
jg
add
add
mov
push
add
jno
jecxz
add
mov
das
sub
add
test
and
clc
out
add
lods
pusha
add
addb
add
std
cltd
dec
dec
cs
add
add
dec
add
add
and
dec
daa
rolb
add
push
add
add
jp
fildll
pop
arpl
mov
pop
cmp
cmpsb
add
movsl
mov
adc
sbb
mov
adc
sti
mov
clc
jl
mov
cmp
std
loopne
clc
jb
xchg
test
pop
add
data16
add
cli
jns
mov
push
jmp
add
sbb
add
pop
push
add
arpl
add
ficompl
add
lea
jl
add
jne
add
mov
mov
outsb
push
outsl
inc
rcll
pop
pop
nop
add
xor
not
les
imul
xor
sub
or
outsl
scas
ret
add
xor
bound
mov
mov
xchg
mov
mov
add
shll
mov
adc
xlat
rolb
repnz
ret
inc
add
scas
loope
jbe
xchg
add
add
add
mov
add
mov
mov
sub
mov
mov
inc
cmpsb
add
add
test
add
add
mov
add
push
nop
add
add
add
inc
xor
jb
cmpsl
xchg
pop
push
add
mov
push
and
mov
push
fsts
cmpsl
mov
les
inc
repnz
add
mov
stos
addb
rolb
mov
cwtl
divl
add
add
inc
enter
add
add
inc
add
jnp
ds
rolb
sbb
add
sbb
rolb
pusha
add
pop
inc
add
xchg
icebp
add
arpl
add
add
add
imull
or
add
inc
add
jecxz
jne
call
loop
sbb
xor
jle
add
loop
lock
mov
and
mov
lds
xor
sbb
add
cli
mov
or
fdiv
dec
adcl
lcall
add
or
add
inc
lock
add
add
addb
lods
vpsllw
addb
addr16
into
jno
add
xchg
jecxz
fimull
lret
pop
pop
sbb
mov
mov
xchg
add
movsbl
stos
test
add
jb
mov
jl
iret
cmp
pop
jg
sti
or
add
dec
insb
insb
and
push
pop
xor
jmp
add
pop
in
dec
pop
aad
test
sub
sub
or
out
mov
add
or
lahf
inc
add
jecxz
adc
add
shrl
add
add
arpl
stos
add
mov
xor
add
int3
addr16
into
xchg
fdivr
test
sbb
sbb
xor
loopne
bound
mov
loope
add
mov
insb
inc
add
subl
xor
mov
jmp
xlat
push
add
inc
inc
clc
iret
test
add
test
mov
xor
sub
jmp
testb
sahf
sti
jle
add
add
cmp
cmp
add
add
xor
cmp
jp
add
mov
ficompl
add
add
jmp
push
add
js
and
imul
out
mov
icebp
rolb
shl
push
add
mov
add
add
pop
in
cmp
cmp
push
ret
mov
jno
outsb
dec
dec
call
xchg
add
clc
xchg
add
add
outsb
int
rolb
push
add
mov
xor
sbb
add
mov
pop
inc
add
pop
enter
mov
cmp
rolb
call
pop
filds
rcrl
sub
mull
xor
arpl
cltd
or
and
or
mov
add
test
adc
mov
add
mov
jo
pop
jne
jnp
add
add
test
pop
je
repnz
add
jmp
jns
sbb
xchg
add
mov
add
mov
aas
enter
jmp
inc
jl
add
add
cmp
loope
mov
dec
xchg
inc
daa
stos
push
add
test
aas
xchg
mov
push
add
fucom
add
mov
add
push
add
pusha
add
loope
add
daa
pushf
hlt
add
and
mov
push
xor
add
mov
mov
clc
or
rolb
pop
inc
add
cmp
inc
loope
add
xchg
mov
ret
loope
lds
ficoms
push
add
xor
add
mov
fldcw
xchg
add
add
xchg
and
add
shll
cmpsl
adc
and
pop
lock
xchg
rolb
pop
cmp
dec
add
mov
and
mov
out
fimuls
add
test
adc
test
sub
xchg
dec
testb
pusha
add
add
mov
add
add
jnp
add
inc
cli
outsl
movsl
scas
insl
push
pop
imul
mov
pop
dec
aam
adc
mov
add
jmp
mov
lods
jmp
add
push
add
mov
cmc
add
mov
sub
mov
add
push
mov
add
test
sub
ficoml
add
add
mov
fsubrl
or
mov
add
push
add
sahf
push
and
add
mov
add
and
mov
add
mov
mov
add
out
inc
add
cmp
lahf
pop
adc
add
cmp
pop
imul
or
roll
or
add
cmp
add
add
add
fbstp
cld
cmp
das
cmp
adc
push
enter
xchg
inc
add
add
add
inc
test
lea
mov
add
sbb
push
add
pop
out
add
mov
mov
jl
add
cmc
rsqrtps
stos
jbe
jge
and
stc
sbb
mov
jle
mov
mov
add
add
inc
pop
mov
movb
mov
jb
clc
cmpsb
add
pushf
insb
imul
add
scas
js
lock
adc
daa
in
pop
xlat
mov
rcrl
repnz
xchg
push
mov
xor
std
jge
add
sbb
movsl
into
mov
add
mov
add
mov
add
lcall
cmc
sub
add
add
add
add
outsb
mov
leave
dec
jb
push
add
int3
lds
and
mov
sarl
pop
and
mov
pop
sahf
push
insl
aad
xchg
imul
sahf
stc
iret
rolb
into
mov
negl
add
jne
add
add
in
inc
add
arpl
test
loop
jp
adc
daa
or
push
test
mov
inc
inc
add
call
mov
icebp
jae
add
aas
sub
add
mov
mov
inc
add
add
cmp
xor
add
mov
dec
mov
add
mov
add
icebp
pop
mov
call
scas
sti
jg
lret
jo
add
add
jp
or
add
mov
pop
add
mov
ret
cwtl
rolb
sub
pop
sbb
add
mov
mov
fldl
add
push
add
dec
mov
lret
nop
add
movsl
dec
adc
jno
sub
sub
mov
fstp
enter
sbb
mov
mov
add
cmpsb
add
addl
aad
cs
popf
fwait
jo
push
add
mov
mov
add
dec
push
add
inc
add
pushf
sahf
xor
addb
mov
test
shl
call
aas
pop
fcmovu
adc
add
cmpsb
add
mov
mov
daa
push
xchg
add
sub
add
shr
stos
push
outsl
and
mov
add
clc
scas
enter
mov
adc
mov
sub
add
add
popa
stc
and
jns
sub
add
mov
js
add
fstps
mov
mov
add
inc
pushf
adc
jb
decl
ret
add
cli
or
roll
enter
movsb
add
push
add
and
call
add
lret
sbb
stos
dec
int
xchg
adc
repz
int3
cs
add
mov
dec
xor
stc
xchg
ljmp
mov
sti
inc
ret
sbb
jnp
jb
cmp
adc
scas
sub
iret
inc
adc
add
push
add
mov
add
stc
xchg
add
add
add
pop
test
pop
mov
aas
mov
int
inc
add
mov
xor
cmpl
pop
test
push
add
add
or
ljmp
sbb
add
incb
rolb
or
out
outsl
iret
mov
rolb
stc
test
fstpl
mov
add
add
inc
add
jno
add
in
xchg
push
and
add
out
xchg
mov
sub
xor
add
dec
xor
jne
addb
movsb
add
roll
lea
push
mov
enter
jbe
fsubs
or
adc
cltd
cmpsl
scas
outsl
data16
mov
ja
add
mov
add
xor
dec
addb
add
add
add
mov
out
and
push
add
or
mov
xchg
mov
mov
lret
add
fists
add
or
dec
test
add
movb
mov
pop
mov
add
fnsave
mov
and
pop
imul
imul
push
mov
aaa
jmp
addr16
sbb
mov
add
adc
or
add
cmc
sahf
cmp
mov
aad
icebp
xchg
testb
testl
outsb
test
mov
push
or
out
lds
clc
adc
xchg
add
push
add
add
add
pop
fnstcw
shll
sub
nop
rcll
and
mov
fwait
cmp
add
add
clc
popa
testl
jl
add
stos
scas
fmulp
or
outsl
push
xchg
add
add
mov
out
lret
mov
jbe
rolb
sti
movb
jg
add
jnp
arpl
xor
imul
pop
sbb
xchg
hlt
add
add
mov
mov
add
rolb
adc
add
cwtl
jp
daa
in
add
mov
push
lcall
clc
add
cmp
mov
ds
cmp
mov
fmulp
jle
jo
mov
arpl
fsubl
mov
bound
mov
jmp
add
jp
add
bound
mov
add
pop
jae
icebp
addb
xor
addl
add
xchg
add
add
ficompl
icebp
lea
inc
add
stc
enter
add
dec
fiaddl
and
test
pop
les
js
in
jne
add
add
out
dec
pop
push
add
sti
sub
dec
mov
sbb
test
mov
or
mov
mov
inc
cmp
add
and
nop
add
add
add
xor
cmp
je
mov
imul
add
mov
stos
dec
xchg
jne
add
and
mov
ds
push
jno
fildl
xlat
daa
scas
sub
jno
cmc
aad
out
sahf
jecxz
and
mov
addb
sbb
mov
loope
insb
data16
rolb
inc
add
ljmp
add
ja
add
test
add
sub
movb
add
pushf
mov
inc
or
pusha
add
sbb
addb
add
repnz
add
jl
fnstcw
xor
sbb
pushf
lcall
add
cmp
add
fwait
mov
insb
xor
iret
pop
pop
lcall
push
add
mov
testb
into
inc
add
mov
and
add
mov
add
add
push
loopne
jecxz
adc
add
push
inc
out
scas
or
cmpsl
xchg
and
mov
pop
xchg
pop
jnp
add
add
add
jle
fisubrs
rcll
jmp
add
fisubrs
mov
mov
and
push
jns
xor
xchg
shll
push
xchg
add
pop
stc
pop
mov
and
mov
pop
in
ret
stc
addb
shll
jb
pop
mull
imul
or
enter
xchg
add
fldenv
sbb
loop
cmc
push
mov
cltd
stc
jle
add
pop
jmp
add
pop
cmp
add
add
imul
mov
fiaddl
add
mov
add
sbb
add
mov
out
add
daa
lds
xor
repz
shll
sub
and
pop
inc
add
mov
in
mov
in
outsl
cld
stos
xlat
imul
add
xlat
rolb
add
mov
push
mov
stos
cli
mov
push
add
loopne
mov
add
add
fstpt
ljmp
out
mov
rolb
add
and
push
add
add
addb
jb
arpl
ret
add
lods
push
add
xchg
mov
adc
stos
cmp
pop
arpl
mov
or
ret
ds
icebp
push
add
xor
mov
notl
add
pushf
in
add
dec
data16
and
jae
add
jg
add
into
cmp
imul
pop
addb
cmc
imul
mov
sub
ret
sti
iret
rolb
mov
mov
fstps
jl
add
add
add
mov
add
fstpl
mov
xchg
add
pop
xchg
dec
xor
push
add
sub
add
jmp
jg
jne
loope
testl
add
add
push
add
jns
or
add
jo
xchg
add
add
xchg
add
in
loopne
sti
mov
cmp
mov
add
push
mov
iret
dec
cmpsl
dec
loop
add
or
add
pusha
add
add
add
jae
jns
xlat
push
add
mov
stc
dec
jecxz
add
inc
add
inc
hlt
add
mov
and
mov
gs
cmp
dec
scas
sbb
add
add
or
pop
in
testb
in
xchg
insb
rcr
movl
sbb
sub
out
add
inc
add
pusha
add
pop
ret
mov
add
fsubs
pop
lds
add
add
in
sub
out
xor
add
add
or
push
add
mov
push
add
add
add
add
adc
and
mov
add
gs
mov
xor
pop
rcrl
add
loope
jle
loope
addb
add
adc
add
out
jecxz
add
std
cmp
fidivl
add
add
add
adcl
dec
lret
add
loopne
mov
or
fistps
xlat
jle
push
add
add
adc
push
scas
add
aas
mov
cmc
jmp
rolb
js
dec
pop
rep
or
orl
add
call
mov
cmpsl
sahf
mov
mov
add
ficoml
add
add
pop
fisubrs
ds
add
test
out
je
mov
sbb
dec
xor
dec
sub
add
cs
ret
mov
out
add
lret
dec
mov
bound
mov
call
jo
popf
in
rolb
pop
int3
and
loopne
dec
sbb
out
hlt
add
mov
add
lea
mov
push
out
xchg
add
add
rolb
roll
addb
add
cli
gs
add
cmp
mov
add
inc
mov
js
je
clc
test
jb
gs
inc
add
pop
lods
adc
jmp
add
xlat
call
add
adc
mov
fnsave
clc
dec
inc
jge
add
pop
lahf
fucomi
stos
ret
jp
lret
add
addb
in
lock
xchg
add
add
shll
xchg
add
add
push
add
push
add
add
add
adcl
xchg
test
add
add
push
aas
dec
sbb
push
add
cmpsb
add
int
and
mov
add
add
stos
cmp
and
fildll
pop
mov
iret
rolb
mov
stos
clc
pop
mov
pop
iret
sub
push
sahf
dec
scas
outsl
jmp
and
fcoml
add
dec
mov
rolb
adc
out
pusha
add
adc
stos
xchg
add
add
imul
cli
bound
mov
scas
inc
add
add
dec
push
add
add
cltd
or
into
test
int3
ret
add
pop
pop
mov
add
lea
in
mov
rolb
add
cs
mov
and
or
int3
incl
push
add
nop
add
enter
add
adc
push
js
inc
iret
jl
inc
dec
je
pop
mov
lret
mov
add
push
add
add
arpl
pusha
add
ja
add
hlt
add
mov
fmuls
stos
push
in
pop
ret
push
and
add
jnp
mov
add
mov
movlps
daa
pop
mov
mov
mov
add
adc
add
add
je
bound
mov
loope
add
and
xlat
inc
imul
mov
adc
add
cmpsb
add
add
push
js
ja
loopne
iret
add
mov
stos
ret
xchg
out
dec
fwait
add
or
add
add
testb
add
jg
push
add
mov
in
vprotb
xchg
inc
add
lock
add
add
push
add
xor
sbb
cmp
jmp
int3
ud0
jns
movsb
add
add
pusha
add
add
add
addb
add
test
test
jnp
xchg
sbbl
add
nop
add
das
add
mov
mov
mov
add
and
mov
add
addb
mov
push
add
sbb
add
add
lods
mov
pop
addb
add
inc
jg
sbb
add
rolb
or
out
jae
mov
test
inc
fdivrs
cmp
into
push
add
aad
mov
jae
cli
int
dec
push
add
sbb
stc
add
inc
add
push
test
data16
jno
addb
sub
jno
aas
lea
add
add
mov
push
nop
add
pop
scas
push
add
outsl
cli
aas
int
clc
jl
xor
lea
jmp
xor
add
add
push
add
push
add
in
addb
add
sub
add
pop
in
test
inc
add
add
repz
mov
adc
pop
push
add
inc
add
iret
jbe
pop
mov
outsl
mov
fldt
sti
test
add
mov
sub
test
mov
mov
add
jbe
dec
orl
add
mov
add
xor
sbb
sub
jg
scas
in
lret
jb
icebp
mov
or
add
bound
mov
adc
fisubrs
loope
add
cmpsb
add
add
mov
decl
data16
mov
icebp
push
add
mov
sub
clc
outsb
mov
xor
fwait
inc
add
pmulhuw
mov
mov
or
dec
clc
es
add
lahf
pop
cmp
rolb
and
mov
addb
add
mov
pop
push
add
and
ja
xor
mov
jp
adc
and
fsubrs
and
scas
add
mov
pop
add
dec
jl
add
add
add
outsl
pop
cmpsb
add
fwait
shll
add
xchg
push
nop
add
cmp
mov
push
mov
loopne
xor
push
add
in
fldenv
sahf
mov
scas
popa
inc
imul
aam
cmp
push
push
lret
mov
xchg
lret
fsubrl
adc
sti
cmp
add
add
add
cmpsl
mov
or
mov
cmp
xchg
cmp
jl
dec
daa
xchg
add
add
sar
dec
movsb
add
cmp
loopne
lahf
cmc
jne
add
hlt
add
lret
lds
xor
push
addb
add
jle
jp
rcll
push
add
sbb
push
insl
cmp
cmp
gs
ret
add
test
rorl
add
jb
and
push
out
mov
mov
enter
mov
push
sbb
sarl
sbb
loopne
ret
pusha
add
add
stc
add
add
cmp
and
mov
loop
rcrl
add
sub
sub
pop
out
and
add
lods
mov
int
popl
sbb
out
rolb
and
sbb
test
daa
les
inc
add
add
es
sbb
cmpsl
js
rolb
ret
cmp
test
in
inc
add
imul
fisubs
mov
mov
mov
xchg
das
into
cwtl
fnstsw
push
add
sbb
adc
add
mov
and
mov
mov
mov
mov
add
cli
sub
and
add
mov
lahf
cmp
pop
mov
cltd
inc
test
xor
mov
adc
mov
add
cmp
add
add
and
xor
jbe
loop
xor
out
and
in
ret
dec
sbb
pop
push
mov
xorl
jecxz
adc
mov
add
push
add
add
addb
xor
scas
imul
dec
test
scas
mov
fadds
push
add
cmp
pop
fbstp
loop
mov
add
cmc
movsb
add
arpl
mov
cmpsb
add
js
xchg
add
mov
das
xchg
stos
sub
inc
xchg
add
into
rorl
pop
scas
xchg
add
and
mov
or
dec
les
pop
scas
and
dec
mov
or
cmc
sbb
out
jecxz
das
rolb
pop
jnp
dec
and
rolb
jl
mov
sbb
xchg
push
add
add
add
bound
mov
jg
fisubrs
jg
in
inc
add
hlt
add
mov
in
fidivrs
push
add
push
je
gs
add
mov
sbb
mov
cwtl
inc
add
mov
add
add
test
push
add
sub
mov
mov
add
mov
sbb
stos
mov
pop
adc
int
xchg
sub
cmp
jle
xchg
stos
data16
sub
add
push
ret
jns
mov
jg
add
ja
jbe
add
xchg
add
testb
add
stos
xor
rolb
add
mov
mov
mov
movsb
add
sbb
add
add
inc
aas
pop
sub
mov
cmp
mov
add
push
inc
scas
inc
add
fmul
lock
movsb
add
mov
add
pop
addb
icebp
rolb
out
shrl
loop
mov
add
dec
push
dec
dec
push
pusha
add
add
xchg
add
xchg
repz
stos
inc
add
xor
movsl
imul
mov
scas
lock
add
push
outsl
adc
sub
and
mov
mov
jns
data16
add
js
add
xchg
inc
add
add
sbbl
stos
pushf
mov
pop
repnz
sub
mov
sar
dec
inc
mov
rolb
push
jnp
add
xlat
testb
mov
mov
lcall
mov
inc
add
push
add
repz
inc
add
inc
and
mov
cmp
add
inc
add
pop
sub
push
add
loop
sub
inc
enter
add
inc
dec
add
add
and
add
mov
addb
out
push
or
pop
add
mov
add
mov
add
add
outsl
jnp
pop
pop
mov
add
or
add
push
add
outsb
and
into
in
sub
or
mov
add
add
mov
pop
in
clc
xchg
add
add
mov
add
rolb
aaa
fidivs
add
push
insb
xchg
add
xchg
add
dec
jecxz
add
add
adc
pop
ret
add
imul
add
inc
dec
out
mov
ret
add
add
push
movsb
add
jmp
jg
add
add
add
out
adc
jecxz
add
sub
jmp
mov
addr16
addb
add
pop
repnz
data16
pop
test
mov
jno
add
ret
stc
xchg
jnp
xorl
cmp
outsl
rolb
push
mov
cmp
cmpsb
add
or
add
add
mov
add
pop
nop
add
add
int3
out
add
scas
or
cmp
icebp
fcompl
rolb
rolb
xchg
add
jo
jmp
fwait
addb
add
mov
add
arpl
push
mov
insl
cwtl
testl
ficoms
cmp
mov
add
add
add
dec
stc
fsubs
add
add
lcall
rcl
cltd
aas
pop
cmp
cli
out
cmp
add
mov
add
outsb
movb
lret
enter
je
cmp
push
jne
out
inc
add
out
mov
subl
enter
pop
stos
dec
and
xor
add
cmc
in
pop
cmp
in
sub
cmp
mov
aad
inc
stos
add
or
mov
sahf
pop
call
mov
jle
add
test
fidivrl
in
adc
push
add
lea
inc
add
add
je
pop
inc
add
clc
mov
add
mov
add
add
rolb
stos
jne
mov
sbb
dec
dec
js
pushf
mov
ret
sub
push
add
lret
sub
cmp
inc
add
push
add
sbb
add
mov
add
jae
xchg
xchg
aaa
lret
sbb
mov
rolb
lods
and
inc
dec
cs
imul
dec
enter
add
mov
mov
rcr
mov
mov
popa
pop
adc
out
sub
outsl
fdivrl
scas
stos
add
ds
aad
cmp
lds
add
add
cmp
repnz
bound
mov
rcrl
or
add
das
arpl
nop
add
mov
add
add
sbb
pop
cmp
mov
repz
fnsave
add
nop
add
sub
arpl
jge
add
movsl
push
add
pop
test
pop
add
mov
add
add
mov
test
repz
inc
mov
nop
add
add
add
insl
dec
cmp
add
dec
fs
jnp
je
push
add
aad
add
rolb
add
add
mov
cmp
mov
add
gs
scas
loop
or
lea
pop
adc
pop
xor
pop
out
je
dec
jle
sbb
add
xor
cmp
push
pop
ss
data16
int3
fs
add
adc
pop
ljmp
stc
sbb
xor
adc
mov
movsb
add
add
repz
mov
add
fdivrs
sub
jmp
add
push
add
add
pop
ret
sbb
sub
pushf
xor
in
pop
fsubs
iret
or
push
lods
add
mov
adc
mov
inc
jge
mov
xchg
mov
add
cmpsb
add
enter
mov
pop
mov
pop
xor
xor
mov
xchg
add
mov
stc
out
movsl
cmp
xchg
push
and
inc
add
subl
and
lahf
mov
fisubrl
adcl
or
cmp
add
nop
add
mov
aaa
fwait
jae
xchg
xchg
add
std
test
iret
into
or
imul
sub
popa
das
xchg
push
add
sub
jp
pop
arpl
add
rolb
add
loop
bound
mov
pop
addl
and
cmp
ds
push
jle
mov
aad
mov
leave
jge
push
add
ucomiss
leave
inc
adc
repnz
and
mov
ret
fisttps
test
je
xor
add
add
dec
push
arpl
movb
add
mov
add
mov
imul
or
inc
push
add
add
xor
xor
push
mov
lods
das
inc
addl
cmp
or
and
mov
into
enter
rcr
into
cli
gs
mov
add
mov
sbb
es
mov
adc
pop
lock
add
sbb
ret
movsb
add
insb
adc
mov
add
pop
jne
add
add
jge
add
mov
call
add
addr16
add
pop
push
cmp
pop
dec
dec
iret
push
in
xor
pop
lods
shll
mov
lea
adcl
add
add
add
call
addb
mov
inc
inc
add
add
push
add
add
mov
fwait
lahf
cmp
pop
xchg
add
adc
push
arpl
addb
add
incb
mov
add
les
test
ret
sbb
mov
add
sti
pop
aad
fldenv
pop
add
cmp
outsb
mov
aam
inc
xor
test
lds
add
cltd
add
jb
imul
dec
mov
dec
ret
repz
mov
or
je
addl
cmpsb
add
les
push
add
cmp
add
jae
jne
add
push
cmpl
add
add
and
rolb
inc
add
adc
mov
aad
gs
jno
insb
mov
push
add
jbe
popf
out
or
and
dec
xchg
add
mov
fisubl
inc
add
add
add
pusha
add
jb
mov
mov
xor
add
jns
add
bswap
outsl
je
in
js
outsl
push
add
push
add
xchg
add
gs
add
sahf
push
inc
xor
arpl
into
and
pop
pop
mov
call
sbb
psubsw
add
mov
loope
imul
aad
push
or
movsb
add
add
mov
mov
jne
and
sti
add
push
add
data16
inc
add
cmp
cmp
mov
sbb
lods
dec
push
mov
mov
std
test
data16
lahf
add
fwait
pop
lcall
jnp
add
inc
add
addb
in
xchg
add
add
add
mov
test
insb
aam
cmpsl
inc
xchg
fnstenv
add
add
mov
add
je
mov
push
add
jge
add
add
add
into
jns
mov
push
add
mov
cmpsb
add
das
jle
cmp
ljmp
pop
aaa
push
add
push
add
dec
addr16
push
add
push
add
pop
push
add
cmp
push
add
mov
imul
mov
mov
test
add
add
add
dec
dec
jmp
js
scas
jg
aaa
pushf
mov
xchg
adc
mov
add
add
ficoml
add
hlt
add
sahf
push
mov
in
lods
cmp
dec
rolb
les
sub
add
add
and
add
rolb
fwait
pop
jecxz
sub
jle
stos
mov
add
mov
rolb
mov
aad
fs
add
pusha
add
add
adc
bound
mov
testb
pop
cmp
rolb
add
add
aam
jg
decb
add
mov
faddl
mov
jns
add
add
xchg
or
cmpsb
add
fisubrs
pop
aam
lods
fucomi
movsl
imul
mov
jmp
pusha
add
add
mov
in
mov
mov
push
ret
inc
sub
pop
pop
rcrl
mov
insl
rolb
ret
add
clc
aaa
ds
leave
dec
xor
dec
push
lock
add
add
add
cli
mov
push
add
mov
dec
dec
adc
mov
add
add
jae
add
mov
xor
jg
xor
xlat
sbb
mov
mov
fwait
mov
jns
add
push
add
out
add
cmp
mov
inc
add
mov
cli
cmp
fistpl
jle
inc
push
add
lret
or
fwait
mov
push
add
add
add
inc
add
add
bound
mov
jbe
xor
imul
add
inc
add
lea
out
sbb
pop
add
pop
inc
inc
repz
and
add
sbb
xor
add
ja
mov
add
rolb
add
add
push
add
push
add
xor
nop
add
xchg
add
stos
cltd
sti
pop
clc
bound
mov
test
lahf
push
add
sahf
test
add
adc
sbb
add
add
mov
xchg
add
add
add
mov
mov
adc
pop
fisttpll
dec
add
mov
addr16
dec
adc
add
ljmp
sub
out
inc
add
add
add
add
add
int
mov
add
inc
add
jl
xlat
push
rolb
jge
mov
add
mov
add
hlt
add
add
cs
add
xchg
rolb
add
scas
rolb
pop
and
mov
lods
icebp
and
cmpsb
add
add
fisubl
cltd
jae
add
jno
in
daa
xchg
rolb
push
add
add
fstps
xchg
insl
pop
lea
jb
push
add
add
sub
add
mov
movsb
add
push
inc
push
mov
mov
leave
xchg
or
add
rolb
push
addb
jge
add
mov
jp
add
add
add
add
inc
ret
mov
mov
aaa
mov
aad
lcall
lods
push
add
add
repnz
rolb
xchg
cmp
sbb
sub
xor
fsubrp
in
add
xchg
xchg
cmp
mov
imul
dec
and
mov
push
in
sahf
sbb
add
mov
add
jle
nop
add
add
mov
loop
xor
lcall
xchg
mov
or
add
test
mov
add
mov
leave
cmp
mov
pop
fwait
into
inc
dec
addr16
pop
inc
out
or
and
push
clc
dec
jne
cwtl
add
mov
mov
loope
or
push
mov
lret
cli
sti
outsl
subl
fdiv
add
add
push
mov
mov
cmpsb
add
add
xor
add
add
mov
cld
hlt
add
add
add
add
ret
fnstcw
rolb
repz
cli
out
inc
xor
std
das
in
addb
add
adc
sub
mov
pop
mov
mov
ja
add
push
add
adc
add
add
add
cltd
mov
add
mov
add
jp
pop
mov
test
mov
add
xchg
or
cld
mov
sti
push
testb
mov
fucom
mov
aad
dec
scas
cmp
jp
add
inc
mov
movsl
gs
add
adc
add
add
xchg
lds
sbb
sarl
add
insb
cmpl
loopne
rol
add
inc
add
add
add
lret
add
pop
push
add
mov
xchg
add
add
les
mov
add
rcll
leave
test
ds
out
dec
or
add
cmp
push
sub
das
sub
add
xor
mov
cmpsl
lcall
dec
ficoms
add
insb
push
add
add
pop
orl
das
xor
decb
push
cltd
mov
inc
add
add
pushf
fcompl
push
rolb
push
add
lock
add
add
mov
movsl
xchg
nop
add
mov
frstor
add
pop
xor
push
xchg
add
aam
and
ret
jecxz
lret
and
cmpsl
rolb
sub
mov
jnp
add
add
testb
cmp
add
stos
mov
add
lock
insl
sbb
mov
mov
cmp
inc
add
dec
jmp
mov
add
jg
ret
mov
xor
imul
jo
out
ljmp
imul
add
je
jp
popa
seta
fistps
test
into
rolb
mov
js
test
and
mov
ficoms
inc
xor
addr16
xor
fisttpll
dec
stc
pop
bound
mov
int
adc
outsl
les
test
mov
mov
dec
add
mov
mov
cmp
call
jp
rcrl
add
cmp
add
add
iret
fldcw
and
mov
add
in
out
xlat
push
add
pop
jmp
js
arpl
addb
add
add
add
add
add
aad
daa
mov
repz
mov
add
enter
add
cmp
addl
hlt
add
add
inc
add
push
add
and
mov
ret
popf
push
add
add
cmc
out
cwtl
mov
xor
aam
or
inc
in
in
scas
cltd
repz
sbb
pop
testb
loop
xor
lret
add
add
inc
add
cmp
add
cmp
add
leave
je
xchg
adc
test
mov
xchg
add
mov
lea
and
add
add
pusha
add
shrl
or
push
and
mov
jmp
std
fnstsw
lods
iret
std
jbe
dec
xor
push
inc
add
data16
add
les
adc
in
pop
ds
fdivr
xor
cmp
int3
testb
xor
adc
sbb
pushf
and
mov
jl
mov
mov
add
add
cmp
mov
mov
pop
fildl
and
mov
add
mov
adc
addb
nop
add
cmc
sbb
add
sbb
xor
iret
jo
inc
add
add
add
imul
iret
pop
ds
repnz
cmpsl
inc
add
push
cmpsl
ja
and
and
lea
or
add
lcall
pop
daa
orl
in
inc
sbb
add
popf
sbb
fldl
dec
sbb
mov
ret
adc
insb
add
add
sbb
jge
fstpt
xchg
add
mov
cs
fsubrs
jge
mov
jge
add
jge
dec
je
jp
in
inc
adc
cmp
sub
jmp
and
mov
or
push
cmp
jecxz
popa
ljmp
jl
add
mov
pushl
aam
dec
push
add
sub
pushf
loope
mov
fadds
add
add
lds
pop
sub
sub
orl
fld
add
add
arpl
daa
subl
add
into
ret
pop
mov
add
dec
or
add
jne
add
add
add
addb
add
mov
fmul
mov
sahf
mov
ljmp
add
add
push
aaa
add
shll
add
xchg
xchg
mov
add
fldl
push
cs
insb
mov
test
add
adc
push
mov
push
adc
add
add
in
lods
sbb
push
or
add
cs
add
sub
jnp
data16
and
mov
add
cmp
xchg
movb
outsb
decb
add
sbb
inc
sti
sub
cmp
xchg
add
add
imul
repz
cmc
insl
insl
pop
movsb
add
lds
push
add
mov
cmpsl
add
dec
mov
lea
test
push
add
movb
stc
std
ret
or
mov
add
lcall
xchg
push
add
insb
addb
dec
out
xor
out
inc
je
mov
or
add
add
add
cs
dec
rolb
push
dec
push
add
sti
out
ret
jp
insl
popa
jno
inc
clc
or
inc
loope
add
xchg
add
je
popa
add
pop
int3
fwait
je
sub
push
add
lods
sub
add
jecxz
cmpsb
add
pop
push
std
cltd
cwtl
dec
xchg
mov
add
and
addb
jmp
js
xorl
call
gs
adc
cs
push
add
add
std
lock
pop
jo
jae
add
rolb
jo
push
jl
mov
sub
les
testb
add
add
add
add
bswap
movb
lock
int3
mov
add
fmul
pop
inc
std
ret
and
cmpsl
mov
pusha
add
add
mov
xlat
pop
sub
add
mov
mov
add
push
add
js
test
pop
pop
jo
int
cmpsb
add
rolb
pop
sub
adc
inc
mov
jbe
inc
push
icebp
xchg
add
imul
dec
pop
loope
add
adc
push
jp
shll
sbb
add
add
add
in
push
mov
test
ljmp
add
xchg
cmpsl
ficomps
cmp
inc
add
aaa
pop
jp
sbb
mov
mov
jae
xchg
adc
xlat
addb
add
add
xor
and
and
in
add
add
sbb
add
add
add
pop
dec
sub
xchg
add
xchg
add
pop
ret
push
add
add
pop
mov
mov
lock
and
inc
mov
add
sbb
cli
mov
shrl
add
bound
mov
pushf
mov
add
mov
sbb
in
pop
mov
dec
xchg
add
jbe
mov
daa
jbe
mov
push
add
int3
xchg
push
add
lret
add
scas
dec
ds
jg
add
cmc
mov
xchg
mov
clc
testb
add
add
and
mov
cltd
in
push
in
loop
mov
sub
inc
add
popf
push
add
xor
mov
pop
outsb
incl
adc
pop
movb
mov
call
lret
hlt
add
dec
pop
test
add
inc
add
push
aaa
rolb
out
xor
leave
das
pop
mov
adc
outsl
dec
dec
stc
mov
add
cli
jo
inc
testb
ds
sahf
add
mov
lea
mov
add
cltd
mov
add
mov
inc
jmp
lcall
sbb
add
push
add
cmpsl
in
fdivrs
jg
add
add
lods
popa
and
mov
jb
popf
rolb
fldenv
add
es
add
sub
mov
fisubrl
test
mov
mov
add
add
add
inc
add
fidivl
sbb
mov
xchg
mov
add
lret
addb
scas
adc
nop
sbb
fcoms
mov
and
decb
icebp
repnz
mov
mov
out
rcl
sbb
push
add
cmp
add
add
adc
movb
mov
cli
push
adc
push
test
inc
out
and
ja
add
insl
sbb
clc
lods
dec
pop
scas
and
outsl
dec
imul
jg
inc
pop
inc
addb
pop
pop
aad
add
cmpsl
jns
add
sub
add
push
or
stos
push
push
add
or
test
inc
mov
jo
add
sbb
add
fadds
push
add
add
push
add
stc
movsb
add
out
jl
or
jbe
sbbl
xorl
cmc
adc
pop
leave
pop
inc
mov
aad
add
enter
add
pop
outsl
xchg
add
jge
push
rolb
fcoml
adc
cld
cmpsl
sbb
add
jmp
int
adc
stos
fsubrl
sub
stc
sbb
mov
add
add
sub
add
dec
adc
test
xor
xor
dec
cmpsb
add
jle
cli
push
add
pop
rorl
dec
call
mov
or
mov
add
mov
sub
and
mov
mov
bound
mov
xchg
in
pusha
add
add
shr
adc
in
adc
lock
pop
les
aaa
rolb
add
aad
add
mov
add
jmp
lret
arpl
add
mov
add
rolb
add
sbb
add
enter
add
and
push
cltd
out
cmp
mov
aad
add
clc
arpl
cmpsl
aas
jns
add
je
mov
sub
add
and
adc
sub
les
xor
or
ljmp
sbb
test
or
add
sub
adc
stc
addl
add
push
add
mov
xchg
loope
push
add
rolb
stos
mov
loope
jb
push
add
add
add
add
lods
jbe
add
mov
add
or
loop
jecxz
lds
add
push
xor
xlat
sahf
movaps
add
add
lods
stos
push
add
dec
xor
cmpl
jge
add
inc
add
add
insb
dec
movb
cmp
loop
movb
push
add
int3
shrl
push
add
call
push
addb
iret
cmc
test
int
jg
jecxz
mov
and
fs
dec
pop
or
loopw
push
inc
add
shr
add
push
add
add
sbb
insb
jmp
add
inc
bound
mov
add
adc
nop
add
pushf
inc
pop
xor
adc
je
mov
add
jbe
stos
out
pop
rolb
add
je
in
push
add
aad
sahf
jmp
push
add
or
add
clc
je
dec
outsb
mov
mov
xchg
mov
mov
xor
mull
fisubrs
and
or
lret
shrl
mov
xchg
inc
add
or
add
add
mov
and
mov
mov
inc
add
in
adc
stos
pop
leave
std
sbb
adc
add
add
add
clc
inc
add
fists
rol
cmp
adc
mov
mov
add
jg
add
lods
lret
hlt
add
dec
sti
jbe
push
add
add
add
cmpsl
out
sub
add
add
inc
or
inc
add
jecxz
lret
pusha
add
add
icebp
lret
repz
out
test
add
mov
or
pushf
sahf
inc
add
add
je
sbb
bound
mov
cmc
add
fldcw
jmp
pop
xchg
mov
pop
arpl
stos
daa
ds
add
and
mov
fiadds
xor
mov
lret
test
mov
mov
mov
mov
add
loope
inc
imul
add
jmp
xchg
adc
mov
loopne
pop
xor
mov
xchg
repnz
add
sbb
pop
inc
add
or
jae
rolb
hlt
add
loopne
punpckhdq
cltd
imul
add
dec
gs
add
pop
xor
fstl
or
add
mov
sahf
and
mov
sub
add
jae
add
dec
sbb
cmpsb
add
mov
jmp
out
test
add
push
add
loope
mov
fildl
add
lea
jg
popa
pop
jb
das
xchg
push
and
push
add
sahf
add
push
add
loop
inc
sbb
push
add
add
dec
cmpsb
add
add
sub
mov
inc
jmp
add
pop
inc
pop
bound
mov
add
push
sbb
loopne
shll
jno
add
mov
loop
push
adc
jmp
add
dec
mov
lds
inc
add
xor
dec
xor
jb
jmp
clc
roll
add
mov
or
add
pop
test
add
and
mov
mov
add
jge
fcomps
xchg
add
mull
movsl
pop
mov
xor
inc
adc
add
bound
mov
push
add
inc
repnz
add
out
es
cmp
lret
add
in
in
add
mov
mov
push
add
add
add
add
cmp
movsl
mov
loopne
mov
sbb
rolb
mov
add
loop
ss
add
loope
add
out
adc
bound
mov
push
sub
dec
aad
mov
cmp
add
aas
dec
push
lds
mov
inc
add
popf
addb
jp
cmpsb
add
add
and
mov
lds
add
clc
fbstp
add
adc
add
dec
mov
and
mov
in
xchg
ljmp
dec
mov
out
addb
add
add
sub
mov
mov
mov
pop
pop
out
add
push
add
xchg
add
movsb
add
add
add
fdiv
dec
or
lods
fildll
and
mov
add
push
add
add
cmp
add
inc
add
sub
xor
daa
mov
out
push
add
cmp
add
add
sbb
data16
pop
sbb
dec
mov
leave
addl
cwtl
sub
add
pushf
mov
add
mov
jne
cltd
test
add
sbb
dec
int3
push
add
test
fwait
pusha
add
xor
mov
imul
aas
call
push
add
sbb
cmp
cmp
add
pop
mov
test
jnp
push
add
sub
cltd
testb
fwait
and
xchg
xlat
jl
push
pop
sbb
push
push
add
cli
and
das
jb
push
add
xor
outsb
jns
dec
loop
sbb
sti
leave
hlt
add
xlat
lret
testb
pop
mov
inc
add
add
dec
cltd
cmp
xor
sbb
dec
pop
sub
xor
lock
scas
adc
cmp
add
mov
inc
lea
rolb
sbb
out
push
cli
mov
add
adc
cld
pop
in
ficoml
xchg
sub
push
pop
jmp
das
test
add
neg
cmp
add
bound
mov
jns
fwait
or
icebp
jne
ret
jns
int3
loopne
pusha
add
mov
test
add
mov
ret
sbb
icebp
xor
mov
lret
ljmp
dec
cmpsl
cmpsb
add
add
cmp
aas
xchg
add
add
enter
adc
int3
insl
lods
push
je
rcrl
rcr
inc
pushf
sbb
js
mov
xor
ljmp
cltd
cmpsl
int
movb
add
add
mov
testl
das
addb
add
in
clc
aaa
jno
add
dec
dec
mov
sub
mov
cmp
stos
add
dec
add
mov
loopne
lcall
mov
mov
add
xchg
add
pop
mov
inc
jecxz
and
mov
or
add
or
mov
mov
jo
mov
loop
xor
xlat
mov
add
mov
cmp
ret
add
add
add
push
cmp
lock
test
lods
and
add
add
sbb
and
out
sbb
cli
xchg
jb
inc
add
pop
test
out
xchg
add
inc
add
add
mov
sbb
mov
add
jle
cmp
aaa
cmp
je
clc
in
or
inc
add
inc
addb
add
jmp
add
mov
push
push
jge
pop
stos
shrl
add
mov
out
mov
cmp
mov
mov
testb
add
add
add
out
rolb
jbe
lret
addr16
sub
fsubr
cltd
aaa
push
add
loope
arpl
add
jg
iret
mov
add
push
dec
testb
add
data16
dec
mov
jne
add
sub
cwtl
cmc
pop
sar
mov
add
add
clc
add
add
mov
dec
js
lahf
pop
xchg
add
add
add
mov
mov
add
data16
es
sbb
mov
out
xchg
add
pop
dec
pop
ret
adc
add
push
add
and
mov
mov
adcl
add
nop
add
cmp
xchg
ret
sub
xlat
add
