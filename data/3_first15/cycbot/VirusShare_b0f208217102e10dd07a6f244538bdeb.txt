stos
sbb
dec
int3
nop
add
add
add
mov
sbb
xor
mov
push
jno
out
movb
add
mov
and
sbb
js
add
pop
es
pusha
add
mov
js
cwtl
out
inc
pandn
movsl
cmp
mov
out
xchg
insb
clc
mov
xchg
rolb
mov
ds
movsb
jle
jb
mov
mov
loopne
mov
dec
adc
adcl
mov
repz
call
jp
lds
mov
add
mov
lds
xchg
rolb
mov
pop
mov
pop
mov
xchg
dec
mov
mov
mov
dec
inc
movsl
sub
bound
mov
push
add
lock
loopne
mov
push
inc
add
in
push
cmp
mov
xchg
xchg
add
aaa
sub
dec
dec
mov
push
jnp
mov
jl
add
mov
sub
jmp
jno
testb
mov
clc
stos
mov
ret
jbe
inc
cld
xchg
adcl
test
jge
adc
add
push
and
dec
push
sub
sbb
adc
mov
outsb
ret
cmp
mov
arpl
add
mov
mov
mov
fidivrs
cld
sbb
push
iret
loope
adc
or
add
mov
je
clc
fdivrp
mov
fcmovbe
in
or
mov
lahf
inc
call
imul
push
mov
ja
scas
stos
dec
scas
mov
in
cltd
push
dec
sbb
mov
pop
add
mov
xor
mov
popa
addb
sahf
mov
mov
sub
lds
sbbl
shll
mov
mov
lcall
add
pop
clc
in
mov
add
fprem1
mov
sub
sub
enter
and
mov
mov
xchg
js
int3
sbb
test
cmc
adc
mov
mov
dec
jge
mov
sahf
mov
stos
dec
add
mov
jno
mov
cmp
add
enter
xchg
or
add
lds
and
mov
add
xchg
cmp
add
add
imul
nop
add
pop
xchg
xor
add
add
inc
push
inc
sub
fldenv
add
lret
xor
mov
divl
add
call
cs
jl
mov
repnz
test
mov
fisubrs
lods
mov
sti
mov
mov
sub
add
add
pop
in
dec
push
jecxz
mov
cmp
push
scas
js
mov
add
xor
mov
cmp
jp
lock
pop
stos
sbb
mov
iret
lds
push
hlt
stos
cwtl
jg
cmp
push
add
adc
cmp
repz
jb
push
mov
sub
push
push
push
push
push
push
cld
call
add
es
mov
movzbl
cmp
ss
push
call
mov
cmp
je
es
xchg
add
xchg
cs
sub
mov
push
es
call
test
jne
jmp
leave
push
es
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
nop
lea
lea
sub
add
mov
sub
sub
push
pop
push
je
jmp
add
add
sbb
mov
push
test
addb
lods
lret
add
mov
repz
push
push
sub
popa
jnp
mov
in
stos
adc
add
je
xor
mov
in
jb
mov
add
xlat
enter
mov
mov
int
repnz
lret
aam
subl
add
xor
cmp
popf
xorl
call
inc
push
out
lahf
jnp
add
mov
loopne
mov
inc
add
pop
in
pop
sub
inc
cwtl
decb
in
pop
adc
mov
mov
sbb
pushf
shll
add
cld
fsubr
fisttps
add
in
inc
inc
add
mov
sub
lds
push
outsb
dec
push
hlt
outsb
xor
mov
add
mull
jae
lods
test
fiaddl
sbb
inc
add
bound
mov
nop
add
mov
mov
xchg
inc
adc
idivb
adc
mov
loopne
mov
or
sub
add
mov
mov
sub
cld
pushf
cmp
add
iret
inc
add
jp
stc
or
add
jo
mov
fisubs
mov
gs
mov
in
stc
in
xchg
std
loope
dec
pop
mov
xchg
xchg
xchg
add
mov
pop
cmpsl
or
std
cmpsb
dec
aaa
sbb
mov
mov
add
mov
ds
mov
mov
mov
jp
dec
enter
add
aaa
sub
jl
dec
jl
add
and
and
movsl
testb
lahf
pop
mov
aaa
fcmovbe
push
cld
mov
add
cwtl
cmp
sbb
lods
jl
aaa
cltd
adc
mov
adc
jae
mov
sbb
mov
xchg
mov
and
add
lret
jae
inc
add
stos
negl
jbe
ss
xor
call
jge
cmp
mov
lahf
lret
roll
mov
xor
mov
sub
mov
push
icebp
stos
mov
mov
mov
jg
scas
lahf
pop
rolb
popf
adc
cmp
jecxz
add
mov
add
add
mov
xor
mov
mov
and
addb
and
mov
add
fwait
pushf
and
sbb
inc
push
push
sahf
or
sbb
inc
add
scas
addb
and
mov
add
fcomp
aaa
cmp
cmp
fidivrs
stos
jo
mov
pop
popf
cmc
stc
stos
mov
fmuls
inc
loopne
mov
test
leave
out
mov
pop
pop
shl
xor
int3
shll
neg
lret
pop
fistl
xor
outsb
mov
add
lret
imul
push
add
push
insb
mov
mov
jl
imul
mov
mov
push
pop
cmp
cwtl
mov
mov
adc
lea
std
fsts
jmp
cmc
push
arpl
movl
mov
mov
int3
out
push
sub
push
adc
mov
add
mov
cmpsb
mov
sbbl
mov
push
add
xor
mov
pop
mov
insb
sbb
enter
or
sub
add
fsin
aad
lret
mov
fs
iret
loop
mov
leave
xchg
pop
ds
fxtract
inc
incl
pop
fisubrs
sahf
jg
sbb
addb
rorl
call
sbb
bound
mov
add
mov
mov
gs
and
mov
movsb
cmp
in
fidivrs
add
inc
or
mov
addb
aam
inc
sub
aam
ljmp
xchg
rcr
xchg
jo
mov
add
mov
pop
inc
push
aad
add
enter
lea
rolb
mov
inc
hlt
loope
sub
arpl
mov
scas
xchg
mov
xchg
out
mov
inc
out
push
jg
fwait
inc
sub
add
outsl
dec
mov
add
fcompl
roll
and
mov
jg
xor
mov
mov
rcll
pop
mov
mov
add
js
mov
adc
jmp
add
xlat
inc
popa
jle
inc
lods
mov
xor
add
mov
cld
mov
lods
outsl
jno
stc
lock
push
aaa
nop
add
jae
inc
mov
push
jno
testl
in
stos
pop
pop
adc
fsubr
aaa
daa
pushf
adc
lahf
aas
mov
add
sbb
adc
mov
add
push
sti
jge
mov
add
add
mov
sbb
sub
addr16
dec
cmp
ret
mov
sbb
xchg
ja
jmp
adc
gs
add
stos
cmp
inc
addb
sub
xchg
sbb
add
scas
push
xchg
jmp
leave
aas
and
adc
out
movsl
pop
sbb
mov
sub
adc
mov
and
je
add
mov
mov
xor
pop
mov
in
popf
mov
imul
lea
fstpl
add
mov
into
sbb
out
stos
je
xor
push
cwtl
lret
lods
push
mov
mov
add
push
add
add
mov
mov
cmpsb
filds
mov
jg
add
addb
bound
mov
add
add
test
call
add
mov
notl
mov
add
mov
push
in
inc
leave
cmp
push
add
jmp
jnp
lret
jmp
bound
mov
imul
in
inc
daa
sub
and
mov
add
popa
mov
das
adc
lods
movb
or
jbe
in
stos
and
mov
xchg
rcll
xchg
sar
notl
jno
sbb
cmp
icebp
mov
add
adc
add
add
sbb
in
aad
mov
fmuls
fistpl
add
and
notb
ss
mov
movsb
sbb
add
ds
dec
pushf
lods
hlt
inc
test
and
dec
loop
mov
add
add
lea
addb
daa
pop
jecxz
add
mov
mov
jbe
aad
push
add
xor
mov
cmp
xchg
or
aaa
ret
push
and
dec
mov
mov
pop
pop
jne
leave
fidivl
outsb
sbb
adc
mov
mov
add
jmp
mov
and
mov
mov
leave
or
pop
outsl
call
xchg
hlt
sbb
aad
ja
addb
mov
xchg
adc
mov
cmc
pop
shll
or
xor
mov
iret
stc
jbe
fnstenv
cli
inc
add
fdivp
add
xor
add
clc
nop
add
gs
xor
mov
add
or
mov
mov
pop
mov
rolb
mov
add
mov
add
add
add
sbb
push
cmp
mov
mov
call
loopne
mov
arpl
xchg
pushaw
add
pop
pop
xor
mov
test
jp
or
mov
add
mov
cld
dec
or
or
add
fptan
add
xchg
add
es
cmp
xchg
add
push
mov
jecxz
add
add
pop
cmpsb
rolb
mov
test
inc
add
gs
add
sub
cld
xchg
add
inc
add
mov
and
mov
mov
mov
mov
mov
push
mov
pop
xor
int
cmp
dec
fs
add
rolb
mov
add
and
ljmp
rcll
add
mov
pop
mov
addb
jg
pop
jmp
inc
xchg
sbb
imul
sub
cmp
add
fwait
dec
lahf
iret
lods
sbb
mov
adc
rolb
mov
xchg
add
mov
add
test
rcr
jnp
push
lcall
or
addb
lock
and
mov
push
add
loop
mov
mov
add
xchg
out
pop
xchg
sub
fdivp
adc
add
pop
cmp
mov
jle
jb
mov
dec
xor
mov
and
mov
loopne
mov
jecxz
and
mov
dec
out
fbstp
imul
daa
add
or
dec
popf
sbb
or
adc
dec
repz
adcl
leave
mov
lods
fisttpll
sarl
mov
mov
mov
mov
adc
mov
addr16
pop
mov
inc
fmull
pushf
outsb
or
imul
lea
push
fwait
jmp
add
mov
into
outsb
push
add
fiadds
or
inc
in
ja
lods
adc
mov
les
mov
fimuls
push
imul
popl
sbb
dec
mov
mov
mov
add
inc
add
xchg
mov
jmp
ds
push
jae
mov
fcomip
sbb
inc
add
mov
dec
mov
repz
or
sub
xchg
pop
clc
sbb
js
add
mov
mov
add
imul
or
ss
push
jb
mov
push
fwait
sub
push
insb
adc
lods
aas
pop
sbb
cmp
in
clc
or
dec
jmp
enter
mov
jg
push
pop
or
out
ret
mov
pop
out
add
mov
add
into
add
mov
sbb
sub
mov
xchg
cwtl
ds
rolb
mov
add
stc
enter
add
testb
mov
lahf
mov
add
aaa
outsb
dec
pop
sub
hlt
mov
cwtl
mov
cmpsb
hlt
adc
jp
add
jb
mov
jle
outsl
aas
cmpsb
jbe
sbb
fs
mov
pop
addb
iret
mov
push
add
add
mov
sub
scas
fisubrl
aam
loop
mov
add
das
in
jge
les
mov
push
call
inc
call
add
push
push
out
pushf
mov
test
xor
shll
out
jmp
insl
mov
mov
cmc
pop
jmp
adc
mov
add
mov
xchg
stos
roll
add
test
push
push
jmp
cmp
les
cmp
mov
imul
pop
mov
pushl
add
inc
jne
mov
add
pop
jmp
testl
inc
add
ljmp
add
stos
xor
mov
mov
fmull
mov
lock
gs
dec
xlat
pop
cli
push
push
sbb
mov
jns
and
jl
lds
imulb
add
mov
add
mov
add
add
mov
fxam
add
mov
cmp
xor
push
nop
add
in
out
test
mov
xor
sub
neg
add
dec
push
add
in
sub
flds
and
arpl
lods
sbb
out
dec
lds
xchg
outsl
and
mov
mov
cmp
mov
pop
pop
icebp
jb
mov
sbb
push
or
mov
dec
mov
mov
push
in
inc
add
or
dec
sub
inc
arpl
cmpsb
cmp
push
cwtl
cmp
movsl
aam
jne
pop
iret
push
inc
adc
lock
mov
add
pop
jecxz
scas
mov
push
loope
ret
xchg
aas
lret
loopne
mov
dec
lods
push
loop
mov
imul
xchg
aad
mov
dec
fimuls
popf
mov
cmpsl
test
add
iret
mov
popl
aad
jnp
lcall
push
push
repnz
mov
iret
jne
out
mov
add
mov
mov
out
sbb
mov
mov
mov
ret
mov
mov
dec
push
add
inc
movsb
test
add
mov
add
add
js
mov
jge
jle
and
out
aad
inc
test
mov
jecxz
ss
addb
loopne
mov
mov
outsb
and
push
push
outsb
sbb
sub
inc
in
pop
dec
pop
mov
jno
add
or
adc
jnp
bound
mov
inc
fnstenv
add
mov
test
push
es
xrelease
mov
cmc
inc
pop
mov
bsr
or
lock
sub
mov
add
rolb
mov
add
dec
insb
sub
jo
mov
jmp
mov
xor
dec
test
pop
js
add
xchg
add
add
jb
mov
mov
add
sub
push
addb
cmpsb
dec
dec
jl
push
into
mov
mov
add
add
mov
lret
xor
jb
mov
inc
fsubrl
in
push
pusha
add
mov
add
or
mov
fstp
aad
outsl
xchg
mov
xchg
and
addb
sbb
add
and
add
mov
stos
call
pushf
test
xor
mov
jg
into
push
lcall
dec
push
push
pop
daa
mov
add
jg
push
jbe
and
mov
js
addb
push
icebp
mov
arpl
aaa
sbb
jmp
mov
dec
xorl
xchg
mov
mov
jg
xor
movsb
outsb
or
jns
add
repz
lret
test
popf
jb
mov
mov
and
loop
mov
insb
jb
mov
sbb
ss
and
scas
popf
jmp
stos
mov
mov
add
add
lds
mov
rolb
mov
repnz
ss
ja
leave
xchg
inc
add
addb
outsb
jns
popf
clc
out
sub
jl
divb
mov
add
cmp
popl
inc
jge
sub
rolb
sub
jnp
push
jbe
lods
pop
lds
out
add
in
jg
inc
mov
add
jmp
add
shrl
dec
nop
add
add
add
les
rolb
mov
dec
mov
mov
mov
je
jmp
add
leave
pop
iret
sub
add
out
jecxz
lock
add
add
rolb
mov
add
jo
mov
sub
nop
add
lahf
pop
or
ja
adc
mov
stc
jge
aam
mov
scas
test
push
xchg
mov
push
into
mov
aas
adc
xchg
out
stos
pop
stc
jle
nop
add
out
mov
mov
add
add
add
mov
add
xor
mov
and
mov
enter
mov
add
jnp
or
sub
jl
add
stos
ja
adc
mov
add
daa
icebp
addr16
xchg
xor
add
push
ljmp
je
hlt
pop
xchg
pop
fs
add
and
jmp
mov
clc
fwait
pop
sub
test
add
mov
add
add
lock
cmpl
dec
fs
push
lcall
add
cs
push
pop
add
xchg
xor
mov
pop
cmp
add
mov
mov
cli
adc
rolb
mov
mov
dec
rolb
push
dec
repnz
mov
inc
fldt
sbb
cmp
xlat
ljmp
popf
and
mov
push
outsl
add
mov
fistl
ja
ds
add
add
xor
jno
push
add
sti
mov
fdivrs
mov
mov
add
in
insl
cs
xor
mov
cltd
adc
mov
std
out
push
push
pop
xchg
add
inc
cmp
add
dec
and
fldl
sub
xchg
out
push
add
mov
repz
cmc
pop
cwtl
cld
lea
add
mov
mov
andnps
ficoml
add
sbb
push
inc
add
mov
add
cmp
fisubrl
sbb
push
rolb
mov
and
xchg
fidivrs
or
aas
jbe
xor
jns
mov
int3
lret
pop
int
icebp
mov
rolb
mov
fcomi
add
loopne
mov
add
adc
sub
add
add
mov
jge
into
outsb
mov
fldl
sub
popa
mov
adc
addr16
mov
insb
repnz
inc
sbb
dec
xchg
stc
cmp
push
fnsave
sti
pop
xchg
xchg
jbe
test
je
add
lods
fstps
add
test
mov
fldt
das
xor
push
mov
add
add
or
mov
cmp
adcl
mov
mov
sub
addb
jl
add
in
aad
imul
jb
mov
mov
cwtl
iret
mov
add
data16
sbb
sub
sub
add
js
inc
scas
jmp
jle
ror
mov
aad
pop
or
mov
mov
movsb
push
cmpsl
adc
bound
mov
test
add
add
repnz
sbb
xchg
push
popf
sbb
add
addb
pushf
scas
mov
shll
adc
push
xchg
adc
mov
add
mov
out
add
mov
push
and
add
dec
scas
push
jecxz
icebp
adc
jns
lcall
push
and
sti
xchg
adc
loope
xchg
clc
in
xor
mov
roll
mov
dec
jge
and
mov
add
mov
outsb
icebp
std
mov
mov
lahf
pop
stos
and
mov
ds
add
cs
clc
sub
mov
add
add
lcall
dec
sbb
dec
jo
mov
xor
mov
or
jnp
fidivl
mov
inc
dec
enter
mov
add
mov
adc
mov
jmp
aam
cmpsl
pusha
add
add
mov
loop
mov
mov
mov
add
add
add
mov
insl
mov
mov
pop
into
popf
dec
jmp
add
push
jmp
pop
stc
fidivl
xchg
mov
add
add
mov
daa
int
add
out
lcall
add
mov
lods
jae
add
ret
sbb
add
jl
ficomps
or
negl
and
sbb
loop
mov
into
sbb
stc
mov
push
jmp
add
mov
jg
scas
mov
shl
lret
sub
inc
xor
pop
and
mov
add
call
mov
and
jl
add
loopne
mov
in
add
lock
pop
and
jmp
cmp
mov
loopne
mov
add
jmp
in
xor
mov
dec
push
add
add
add
scas
adc
mov
out
stc
pop
mov
xchg
mov
dec
and
fdiv
mov
les
jge,pt
add
mov
xor
dec
mov
jmp
cltd
cmp
leave
cmp
and
ss
mov
inc
add
movups
mov
pop
xor
xlat
lcall
add
inc
out
mov
mov
sub
data16
enter
mov
test
add
mov
in
and
dec
sub
mov
sbb
mov
inc
out
mov
add
xchg
arpl
sub
mov
jns
xor
cwtl
dec
sbb
xlat
cmp
lock
faddl
pop
cmp
mov
mov
jbe
cli
pushf
jns
pop
mov
roll
aaa
cmpsb
rolb
sbb
mov
mov
add
add
cld
idivl
add
rolb
mov
iret
dec
or
loope
hlt
icebp
push
add
or
add
mull
aaa
outsl
jp
out
call
testl
add
mov
cmpsb
or
cmp
roll
dec
js
inc
jb
mov
std
roll
inc
dec
lret
inc
and
out
pusha
add
dec
ljmp
add
inc
pop
and
add
fsts
push
add
adc
mov
mov
adc
arpl
loope
movsb
out
insl
jo
mov
sbb
mov
out
shr
mov
mov
push
mov
mov
ja
add
jge
fcmovbe
pop
sbb
xchg
clc
jg
fucomip
mov
and
jmp
add
aam
add
dec
adc
adc
mov
mov
lods
cs
add
push
jge
sub
insl
loopne
mov
mov
mov
dec
in
lods
adc
test
test
pop
adc
mov
xor
mov
sub
sbb
mov
mov
add
mov
mov
add
adc
rolb
xlat
cmp
cmp
in
mov
mov
cmpsl
add
mov
add
add
or
adc
mov
add
pop
jo
mov
mov
sub
xchg
add
add
daa
push
or
ror
add
push
add
mov
add
mov
mov
cmpsb
outsb
aas
rcll
add
and
push
in
fmulp
xchg
jo,pt
mov
mov
ja
pop
inc
add
sub
outsb
aam
xchg
sbb
push
xor
mov
add
sbb
add
inc
jae
fbstp
add
and
push
xor
mov
in
xchg
sbb
add
and
add
and
mov
add
mov
push
decl
dec
rolb
mov
mov
orl
push
add
jecxz
add
jl
add
dec
jmp
aas
xor
add
cmc
push
fimuls
dec
cwtl
sub
dec
stos
cmp
or
dec
test
aas
dec
in
iret
or
mov
pusha
add
xchg
adc
mov
mov
mov
popf
out
pop
jno
mov
stc
cmp
add
and
cmc
cld
mov
jns
sbb
lock
ret
out
add
inc
inc
add
das
inc
in
dec
test
add
mov
push
test
adc
mov
test
pop
mov
mov
jp
mov
mov
lcall
lret
pop
jg
add
mov
aas
mov
cmp
rcr
mov
int
jno
loope
sub
add
addr16
add
add
mov
nop
add
add
ja
cmp
mov
movsl
cmpsb
jmp
or
mov
dec
cmp
mov
add
cltd
sub
dec
dec
pop
sti
jb
mov
fmull
adc
mov
mov
add
dec
mov
add
loop
mov
fsubp
pop
xor
xchg
fmul
or
mov
inc
ret
out
add
fdivrl
scas
loope
dec
ss
iret
push
dec
repnz
cmp
adc
mov
mov
add
add
mov
push
add
jecxz
add
pop
jmp
enter
movsl
push
mov
mov
sbb
icebp
pop
cmpsb
and
and
mov
leave
outsb
mov
jl
sti
push
mov
push
add
mov
xchg
mov
jae
in
pop
cltd
push
cld
iret
mov
mov
add
mov
pop
mov
and
mov
add
leave
xchg
jae
sub
jl
cmp
xchg
cmp
test
ljmp
test
mov
cvtps2pi
ss
getsec
pmulhw
pop
cltd
mul
lret
pop
mov
pushf
sahf
xchg
pop
fstl
mov
mov
out
sub
cwtl
sub
mov
add
jbe
add
lcall
mov
mov
jno
lods
pop
jmp
add
jbe
sbbl
into
push
clc
cli
testl
cmpsl
jle
and
cmp
pusha
add
rolb
push
and
mov
jne
stc
push
insl
mov
sbb
add
adcl
jecxz
xlat
fisttps
test
rorl
add
mov
add
xchg
stos
mov
hlt
cmc
and
cwtl
lcall
mov
into
adc
mov
lods
push
add
mov
mov
push
add
or
jbe
dec
gs
add
mov
ljmp
sub
imul
in
fs
sub
jle
repnz
lcall
push
fcmovne
mov
add
sbb
sbb
cli
punpckldq
mov
fnstsw
cmp
push
or
stos
mov
adc
cld
dec
add
pop
mov
pusha
add
and
add
pop
rolb
mov
ljmp
aam
jp
dec
daa
adc
inc
mov
fimull
add
add
push
sbb
sub
add
add
xor
mov
add
iret
add
mov
mov
and
add
adc
mov
mov
jbe
add
dec
addb
in
add
pop
cmc
mov
jo
mov
data16
mov
pusha
add
outsb
sbb
sub
int3
sbb
mov
mov
xor
fstpl
add
adc
mov
data16
ss
mov
jbe
es
insl
es
daa
and
fbld
adc
mov
or
mov
pop
in
pop
sbb
mov
push
mov
dec
mov
mov
adc
dec
shrl
push
mov
mov
ret
mov
out
fistps
mov
sub
cmpsl
push
roll
adcl
mov
cmpsb
int
add
add
add
adc
cmp
fwait
sbb
push
add
mov
xchg
and
mov
les
pusha
add
pop
roll
popa
mov
idiv
pop
fucomp
cld
and
mov
mov
mov
mov
les
mov
fists
mov
cs
incb
mov
test
fiaddl
add
mov
dec
cmp
add
mov
add
adc
mov
sbb
cmpsb
clc
cmc
fnstcw
add
cs
add
lret
daa
mov
loop
mov
repz
je
add
loopne
mov
rolb
sub
and
mov
push
add
je
shrl
test
pop
rolb
popa
mov
ss
mov
mov
add
push
movsb
lahf
jmp
mov
push
js
add
jae
push
jl
mov
cmp
add
add
jo
mov
cmpsb
inc
add
add
pop
sbb
pop
mov
or
arpl
add
add
xor
mov
inc
pop
inc
mov
add
mov
push
pop
int3
adc
add
dec
idivb
add
int3
or
or
xchg
addl
add
jp
lret
jp
in
sti
pop
mov
mov
sti
dec
aam
add
xchg
mov
mov
mov
stos
rolb
mov
xor
mov
enter
push
lea
add
mov
add
push
inc
add
jecxz
and
popf
sbb
fsubl
mov
mov
jae
sbb
aad
add
mov
xchg
gs
push
dec
cmp
push
pop
mov
add
add
je
sarl
xchg
mov
in
flds
test
pushf
xchg
mov
xchg
pop
mov
aad
bound
mov
fs
jmp
imul
mov
mov
rolb
mov
hlt
jnp
sbb
and
or
mov
mov
and
push
clc
sbb
jb
mov
add
cmpsl
cmp
aam
cmp
int
mov
fnsave
add
inc
data16
mov
add
mov
insb
or
jb
mov
add
sbb
rorl
inc
cli
inc
std
or
pop
push
test
arpl
sub
ja
or
pop
lret
aas
out
xchg
sub
sbb
and
mov
mov
jnp
add
sub
scas
mov
mov
insl
adc
outsl
out
cwtl
lahf
mov
in
sti
sbb
shll
push
push
jnp
in
add
inc
je
mov
dec
in
mov
loope
adc
mov
mov
inc
or
add
or
jo
mov
pop
std
jecxz
push
pop
add
or
push
test
mov
pushw
std
mov
mov
sbb
sub
ja
xchg
push
aas
lods
fsubs
add
mov
mov
cld
lcall
mov
ss
test
push
mov
add
fildll
add
mov
adcl
jl
pop
sbb
sahf
enter
and
mov
mov
add
out
xor
pop
mov
fs
add
add
mov
mov
adc
mov
jnp
sahf
cmp
add
mov
add
dec
std
mov
xchg
xor
mov
ljmp
shrl
inc
xchg
cltd
xchg
pushf
cmp
fs
push
ret
dec
inc
add
pop
out
enter
fcompl
mov
sub
add
mov
inc
cmp
fwait
adc
xor
mov
jne
movsb
add
mov
and
and
mov
dec
icebp
rolb
mov
add
imul
loopne
mov
add
jle
cmp
clc
lret
mov
aam
add
add
adc
pop
adc
push
mov
adc
mov
sub
fld
xor
mov
addb
jg
add
push
popa
cmc
pop
daa
push
jmp
in
into
outsl
adc
mov
xor
mov
mov
sbb
add
sub
add
stos
arpl
dec
mov
add
shl
scas
mov
add
sub
push
adc
pop
cmp
rcll
addb
mov
xor
mov
mov
adc
test
leave
pop
or
mov
mov
mov
mov
add
mov
add
cld
call
jg
jb
mov
loop
mov
fists
add
and
js
mov
push
bound
mov
pop
cltd
push
add
addb
sub
jnp
xchg
test
mov
sti
callw
add
mov
jae
mov
jmp
jp
add
aas
cmc
sbb
lods
addb
mov
pop
stc
lcall
add
jno
aam
cmpsb
or
and
mov
inc
inc
add
pushf
std
xchg
lcall
jbe
add
inc
and
add
inc
add
cld
stos
aam
lds
je
sbb
imul
add
mov
add
and
mov
repnz
mov
push
and
mov
mov
mov
fs
dec
clc
push
sbb
mov
fdivp
mov
jb
mov
add
sbb
push
test
inc
cs
dec
mov
mov
add
mov
add
push
inc
add
mov
dec
outsb
daa
sub
or
sbb
int3
adc
push
add
mov
dec
movsl
mov
mov
je
add
dec
mov
aas
int3
push
outsl
push
js
in
or
push
sahf
mov
adc
mov
hlt
enter
mov
mov
scas
fisubrs
push
mov
mov
jae
movsb
ljmp
jno
add
data16
imul
fwait
test
cmp
dec
inc
and
add
mov
xor
mov
pop
cwtl
rolb
sbb
xchg
and
mov
scas
and
cmpsl
push
add
sti
sub
mov
cmp
xor
mov
je
jg
fstps
pop
fldenv
div
add
dec
bound
mov
add
mov
pop
inc
add
stc
mov
pop
push
pop
test
add
stos
pop
fldenv
mov
sti
roll
jne
mov
arpl
dec
and
popf
pop
xor
mov
add
mov
mov
sub
mov
push
adc
adc
mov
mov
adc
pop
xchg
dec
jge
aaa
inc
sub
rolb
mov
lods
mov
mov
scas
xor
rolb
adc
mov
mov
sarl
sahf
out
add
add
xchg
add
push
das
mov
add
adc
jne
add
es
loopne
mov
test
jle
mov
xor
add
imul
bound
mov
mov
and
mov
mov
test
inc
rolb
mov
sub
movsl
mov
mov
jge
mov
mov
add
mov
enter
xchg
testb
mov
add
pop
mov
xor
or
arpl
add
add
inc
add
add
loope
hlt
xchg
add
mov
sahf
add
push
mov
mov
jne
add
mov
mov
add
or
inc
not
add
mov
add
sbb
push
clc
xor
mov
lock
pop
mov
adc
insb
fidivl
dec
lcall
pop
pop
mov
mov
push
jg
add
cmp
testl
pushf
fisubl
mov
addb
addb
in
push
enter
cmpsl
stos
sbb
adc
fildll
bound
mov
sahf
fcmovbe
movsl
mov
mov
xlat
rolb
movl
jbe
add
mov
adc
sbb
xchg
insl
lds
add
add
pop
or
int3
mov
jae
add
sub
jle
add
inc
hlt
in
and
mov
cmc
mov
mov
aaa
int3
mov
mov
fld
pop
cs
les
add
xchg
negb
mov
add
sbbl
into
std
fwait
adc
mov
mov
out
jnp
out
jecxz
pop
jecxz
or
shll
inc
cmp
xchg
jno
add
mov
add
mov
mov
es
aam
shll
add
bound
mov
mov
incl
test
adc
mov
scas
movsl
rorl
arpl
mov
fnstenv
lret
push
add
mov
or
or
into
lret
leave
fisubl
jecxz
add
cmc
sub
daa
lahf
sbb
pop
out
out
pushf
and
mov
aaa
lods
test
push
push
out
add
out
mov
add
push
mov
mov
add
cld
pop
jmp
jecxz
add
sbb
pop
sub
iret
or
lods
cmp
lahf
mov
pop
mov
sti
mov
rolb
cwtl
sarl
mov
xchg
fcoml
outsb
mov
add
out
popa
xor
mov
aaa
int3
sti
dec
sbb
mov
and
mov
sub
add
xor
and
fdivp
add
jge
lret
ret
cs
aad
jb
mov
push
sbb
aad
pop
into
push
rolb
mov
cmp
mov
mov
dec
or
nop
add
dec
out
aaa
mov
mov
mov
push
dec
ficoms
dec
pop
mov
lds
mov
dec
imul
into
call
mov
add
xchg
sahf
jl
outsl
add
xor
mov
cmpsl
adcl
add
mov
lahf
dec
sbb
push
loopne
mov
mov
test
add
cs
data16
xor
mov
add
mov
add
and
mov
mov
cli
or
dec
or
jp
adc
jg
pop
jmp
cmpsb
aas
xor
loopne
mov
out
andl
mov
xchg
imull
lea
pop
scas
and
mov
out
add
sarl
cs
pop
cmp
cmc
test
push
cltd
jp
pop
addl
out
scas
mov
add
dec
ds
lods
shll
dec
xchg
pop
mov
jl
sub
mov
mov
rcr
adc
mov
dec
rdtsc
test
inc
dec
sbb
add
pop
push
loope
xor
mov
dec
das
orl
faddp
jb
mov
adc
enter
push
or
jp
adc
mov
push
fiadds
rolb
mov
test
dec
add
mov
leave
clc
or
sub
jp
inc
mov
xchg
cmp
inc
and
cmovbe
mov
ret
jo
mov
inc
add
sub
out
inc
add
mov
daa
cmp
or
add
cmp
add
add
jae
mov
repz
push
sbb
fidivrl
add
or
loope
or
push
add
lret
and
mov
pop
cmp
pop
out
pop
es
push
or
add
sti
sub
add
imul
add
mov
adc
iret
push
add
jmp
negl
fildl
add
mov
mov
add
add
or
lock
mov
test
sbb
jmp
leave
stos
je
add
mov
or
add
push
stos
push
icebp
cmpsb
out
lds
add
mov
or
ret
cwtl
test
pop
sbb
push
add
push
cmp
into
and
mov
call
xchg
pop
pop
sahf
push
in
add
shll
add
aaa
or
lcall
or
mov
lcall
insl
mov
mov
add
sti
scas
out
and
xchg
jno
mov
mov
xor
mov
mov
push
jmp
out
add
mov
mov
insb
cmp
mov
or
mov
gs
add
push
add
sbb
std
sti
aam
jmp
mov
sub
add
xor
aaa
icebp
inc
add
movsb
adc
mov
sbb
nop
add
and
mov
rcl
push
add
jge
jno
add
shll
xchg
pop
sahf
push
add
jo
mov
mov
cmp
mov
jne
pop
repz
loop
mov
mov
popa
mov
mov
mov
inc
out
aas
inc
test
or
fwait
inc
ret
or
test
add
addb
xor
nop
add
mov
lea
mov
push
add
sub
mov
cld
into
adc
dec
stos
push
fnstcw
cld
into
xchg
jmp
add
inc
add
lods
in
xor
mov
faddp
mov
divl
mov
pop
pop
mov
ja
loope
sub
xchg
pop
cmpsl
lret
dec
movsl
xor
dec
sbb
scas
pop
xchg
add
mov
cs
cmp
push
frstor
in
add
mov
fsub
add
add
mov
sahf
addb
mov
mov
addb
aad
sub
add
jge
lds
push
and
xchg
cwtl
mov
lods
mov
aam
jns
aaa
out
lahf
push
pop
dec
adc
push
add
add
aad
push
sbb
sti
popf
js
xchg
movsb
xor
mov
dec
rolb
mov
lods
or
dec
es
add
add
xchg
mov
rolb
mov
mov
mov
add
push
add
fdivrl
dec
xor
adcl
mov
mov
ret
mov
dec
mov
add
ret
test
mov
mov
mov
fadds
add
add
mov
mov
add
sbb
pop
dec
lret
sub
repz
in
jns
or
sub
xchg
lods
inc
dec
sub
push
xchg
pushf
shll
mov
sbb
add
addr16
aam
pop
mov
add
mov
dec
jns
pop
push
cmpsb
addr16
push
out
aas
or
jnp
in
xchg
add
mov
in
or
aaa
dec
mov
sbb
fdiv
adc
mov
mov
xor
cld
jne
pusha
add
scas
scas
rolb
mov
push
pop
push
mov
insb
loope
jae
sbb
mov
ret
repz
cmp
pop
xchg
test
or
pop
test
loopne
mov
xor
fcompl
testb
jl
add
pop
jle
mov
add
add
jns
sti
out
adc
mov
mov
add
inc
sub
jo
mov
jno
add
add
adc
push
add
add
jo
mov
jmp
dec
xor
mov
pusha
add
and
mov
in
mov
repnz
mov
add
add
add
scas
iret
xchg
mov
add
mov
ss
mov
daa
stc
jbe
push
aaa
add
mov
repnz
out
xor
je
shll
mov
mov
xchg
mov
adc
lret
pop
outsl
cmp
mov
inc
mov
jge
jno
add
add
mov
mov
mov
bound
mov
xchg
daa
pop
mov
mov
test
repnz
ss
leavew
push
add
inc
add
add
test
jecxz
jnp
stos
lods
shr
ja
sbb
add
cmp
inc
add
mov
nop
add
mov
add
iret
jo,pt
mov
inc
add
jno
das
sub
mov
mov
sbb
fcomps
add
dec
loopne
mov
sbb
push
jnp
jge
add
clc
addr16
or
stc
cwtl
inc
stos
vmovdqa
add
mov
and
mov
mov
or
dec
pop
cwtl
add
mov
ret
rolb
xor
clc
insb
add
mov
clc
je
adc
lcall
inc
mulb
iret
dec
test
inc
into
pop
cmp
lds
jo
mov
fldcw
shll
add
pop
out
mov
mov
jp
fwait
movsl
xchg
or
inc
add
test
iret
insb
xchg
add
jl
add
ret
ja
dec
cld
or
insb
cltd
mov
jecxz
or
cltd
btsl
xor
mov
push
mov
sbb
xchg
outsb
stos
aas
aas
out
and
inc
cld
dec
loope
add
leave
fistpl
das
sbb
fwait
bound
mov
aam
out
sub
jno
xor
mov
or
fadd
push
jmp
adc
lret
jne
rolb
mov
push
fwait
pop
or
push
add
cmpsb
dec
jo
mov
roll
mov
cmp
mov
and
mov
xchg
or
aas
jae
aaa
leave
in
pop
jle
jmp
inc
add
xchg
lahf
fisttpll
call
addb
outsb
or
lock
add
je
and
mov
mov
or
clc
or
add
add
into
repnz
mov
mov
add
inc
add
loop
mov
xchg
mov
mov
mov
cltd
mov
mov
jbe
sub
dec
push
fidivl
std
jno
push
add
lock
idivb
inc
stos
xor
cs
negb
xor
mov
jno
add
push
and
mov
sti
or
repz
and
cmp
cmp
outsb
imul
add
lock
call
mov
push
jns
or
sahf
jecxz
add
jl
scas
out
add
lods
jge
dec
data16
fldenv
lret
rolb
pop
lock
sbb
mov
xchg
pop
push
rolb
mov
sbb
add
mov
jecxz
add
pop
and
mov
mov
cmp
cmp
test
add
add
mov
or
mov
mov
jle
inc
mov
add
xchg
outsl
xlat
call
xor
mov
mov
add
or
stos
cmp
xchg
inc
add
insb
add
add
mov
add
inc
lret
add
lahf
in
test
jns
dec
cmp
lock
daa
rolb
xchg
pop
sub
lcall
xchg
daa
jae
add
add
mov
mov
add
dec
repz
mov
mov
adc
pop
mov
xchg
inc
add
mov
jmp
xchg
fildll
cwtl
aaa
ret
add
cmp
and
fcmovnu
sti
push
cmp
xchg
add
jo
mov
loopne
mov
xchg
ja
gs
mov
jnp
fimuls
ja
rcll
add
and
mov
std
lds
out
xor
fld
sti
inc
or
outsl
rolb
mov
imul
push
dec
inc
jge
cltd
cmp
xor
scas
fstps
mov
xor
mov
add
add
add
addb
push
iret
shll
mov
in
popf
push
add
jmp
mov
add
cli
cmpsl
repnz
gs
cli
dec
pop
cld
mov
add
xor
mov
jp
jp
insl
cli
jge
add
xchg
xchg
daa
push
imul
mov
dec
sbb
xchg
add
in
nop
add
movsb
pushf
add
inc
sbb
add
xor
mov
push
add
pop
mov
push
and
mov
add
sar
jg
jmp
imul
out
mov
hlt
ja
mov
mov
loope
test
push
mov
nop
add
movsb
mov
pushf
fisttpll
bound
mov
xlat
adc
mov
rolb
mov
add
mov
add
lods
ret
sbb
add
xlat
xchg
int3
icebp
sahf
jp
or
xlat
mov
insb
cmp
fs
jne
roll
mov
mov
mov
mov
ljmp
xchg
dec
xor
mov
sub
dec
mov
outsb
sbb
add
loop
mov
sbb
and
mov
add
cltd
call
and
adc
inc
jns
iret
loop
mov
pop
aas
fmuls
mov
not
jmp
mov
mov
mov
adc
mov
xchg
icebp
and
out
xor
add
mov
mov
mov
outsb
cmp
and
push
cmp
mov
insl
push
add
dec
icebp
jp
xlat
rcll
rolb
mov
add
in
pop
enter
in
push
sbbl
pushf
pop
clc
mov
int3
inc
js
mov
mov
mov
mov
sub
mov
lods
jg
add
mov
mov
mov
adc
stos
jle
push
ljmp
xorl
mov
mov
sbb
outsb
test
add
xchg
test
add
push
jecxz
negb
outsb
cwtl
loope
pop
adc
sub
mov
mov
xchg
rcll
jecxz
movsl
stos
xor
cli
test
and
mov
add
add
xchg
fiaddl
ljmp
lds
das
inc
pop
sbb
jl
or
cwtl
out
out
xor
add
push
enter
add
mov
inc
dec
js
out
loopne
mov
icebp
pop
cli
and
cmp
pop
call
add
sbb
add
add
cltd
sbb
jecxz
mov
rolb
cltd
add
mov
add
mov
sahf
jns
add
xchg
roll
mov
ret
cmp
sbb
add
mov
dec
push
sub
push
fisubrl
rolb
mov
push
inc
int3
incb
repnz
sbb
mov
filds
add
add
adc
dec
scas
mov
cmp
nop
add
out
out
inc
adc
stos
or
push
add
gs
mov
mov
test
iret
addb
outsb
pop
sub
lock
cld
or
addb
outsl
and
rorl
cmp
fdivr
dec
mov
mov
cmpsb
push
add
pop
repz
fcmovbe
fldt
stc
ret
mov
mov
add
add
and
xchg
mov
lock
movsb
cltd
and
sbb
cs
neg
fstpt
rolb
inc
add
jae
add
das
add
mov
cmp
or
add
imul
and
or
push
or
dec
jmp
add
mov
xor
mov
lds
cmpsl
imul
add
xchg
sub
loope
add
lret
inc
add
ljmp
lret
add
imul
add
xchg
pusha
add
lods
add
mov
inc
add
cmp
add
jbe
add
test
or
add
mov
add
pop
mov
sub
push
hlt
scas
mov
push
cmc
lds
add
ret
mov
adc
push
aad
add
sahf
hlt
xchg
xchg
in
pop
pop
leave
xlat
xchg
add
push
add
cwtl
sub
push
add
mov
add
idivb
add
add
and
add
mov
dec
adc
pusha
add
jo
mov
dec
cmpsb
jmp
mov
movsb
hlt
mov
mov
mov
imul
mov
push
inc
push
imulb
add
loope
or
xchg
outsb
imul
mov
stos
das
orl
inc
pop
hlt
je
test
jle
popf
loope
out
call
add
mov
popf
sbb
add
mov
imul
out
test
dec
push
ret
lods
dec
cmp
push
add
in
mov
xor
mov
ds
sti
or
sub
or
rolb
mov
insl
sub
mov
add
xlat
inc
inc
add
add
mov
dec
add
cmp
mov
mov
sub
ljmp
iret
cmc
mov
inc
sbb
xchg
mov
xlat
movsl
nop
add
mov
mov
mov
aam
icebp
inc
or
shll
scas
mov
jno
mov
loope
insl
test
sti
add
divl
push
jb
mov
rolb
stos
xchg
inc
add
push
push
xchg
imul
inc
shll
sbb
cld
ja
and
mov
stos
in
into
mov
mov
dec
dec
lock
out
pop
and
mov
andl
ljmp
mov
add
mov
mov
mov
pop
dec
push
testb
add
mov
inc
cmp
mov
fnstenv
mov
xchg
push
call
jne
mov
jnp
mov
add
loopne
mov
dec
out
add
and
lea
push
int3
jae
dec
inc
outsl
movsb
ret
movsb
test
std
out
add
mov
mov
out
repnz
xchg
jne
cwtl
jbe
inc
insb
mov
mov
add
pop
or
ss
in
idivl
mov
pop
shr
cmp
je
fisubrs
mov
out
push
jns
pop
ret
jo
mov
scas
dec
jno
add
jge
into
dec
aas
or
add
fbld
and
mov
add
icebp
repz
jne
push
add
negb
add
lret
cmpsb
pop
add
mov
and
and
movsb
mov
mov
push
ja
pop
dec
sbb
stc
jg
rolb
adc
loope
fimull
mov
mull
scas
mov
lret
mov
dec
dec
fs
out
mov
iret
notb
or
test
fs
iret
mov
scas
test
add
inc
add
add
dec
movsb
pop
lahf
inc
pop
bswap
xorl
add
movsl
fcoml
or
out
out
and
add
out
lock
pushf
stos
sbb
mov
add
pop
movsb
or
add
lods
test
mov
push
aad
jmp
loopne
mov
lds
inc
jmp
cmp
les
cmp
mov
clc
stos
repnz
jb
mov
ret
cmp
addb
and
scas
jne
repnz
mov
mov
mov
movsl
lock
dec
mov
mov
xchg
add
push
sub
mov
cmpsb
repz
and
aad
add
xor
mov
jae
cmp
push
in
lcall
fimull
outsl
mov
popa
data16
pop
jg
jbe
js
jnp
sub
sub
insb
ret
xchg
xor
cmc
jo
mov
lock
cmpsl
push
sbb
imul
push
dec
testb
lods
es
jno
push
rolb
mov
add
pushf
mov
shll
std
mov
aaa
pop
sbb
add
mov
mov
add
cmp
xchg
xchg
add
dec
sub
addb
inc
add
mov
out
adc
jmp
add
mov
mov
pushf
scas
sbb
popa
ret
pusha
add
inc
icebp
ljmp
mov
jmp
and
inc
rolb
mov
fnstsw
sub
hlt
ret
xchg
lea
add
ds
add
mov
lahf
lcall
mov
mov
dec
pop
inc
push
pop
inc
movsl
or
jecxz
outsb
repnz
inc
rolb
addr16
mov
mov
testb
imul
push
jl
pushf
fdivrp
fimull
mov
fidivl
cmp
add
rolb
mov
add
loopne
mov
adc
mov
ficompl
push
arpl
pop
cli
and
mov
inc
xlat
sub
add
jns
int
clc
pop
sbb
insb
popa
movsl
insb
std
hlt
xchg
out
cmpsl
dec
cmpsb
xchg
mov
daa
mov
mov
add
cmpsb
mov
add
icebp
sbb
jnp
add
mov
mov
jns
call
out
and
xchg
cltd
inc
add
lahf
dec
sub
js
rep
xchg
add
arpl
inc
lret
jnp
push
add
pop
stc
sarl
mov
mov
jecxz
pop
dec
mov
in
sbb
xchg
add
lods
pop
cmp
add
lahf
icebp
test
mov
fadds
add
mov
jnp
pop
cwtl
popf
mov
movb
push
mov
std
fildll
and
cltd
xor
xchg
add
inc
out
add
mov
das
mov
add
int3
mov
dec
into
insb
add
mov
pop
mov
and
call
add
add
add
movsb
lahf
repnz
mov
add
movsb
ret
scas
xchg
mov
adc
lahf
fldcw
or
test
adc
dec
stos
ljmp
mov
lret
cmp
arpl
add
add
cmp
in
fsubr
lret
inc
and
int3
cmp
add
btr
fdivs
gs
adc
mov
fistpl
mov
or
and
sub
mov
ljmp
arpl
push
scas
mov
pop
std
mov
fcomi
add
mov
inc
lock
mov
add
mov
add
cld
mov
mov
xor
pop
stos
mov
add
test
mov
aaa
jmp
popa
inc
fcmove
dec
push
into
movsb
sbb
pop
aam
cmp
mov
lds
dec
std
push
cmpsb
and
mov
mov
add
jle
in
add
in
mov
cwtl
into
add
cmp
lods
add
inc
mov
cmc
in
aam
add
mov
lock
mov
sub
repnz
insb
out
hlt
out
fs
adc
mov
pop
adc
mov
xchg
add
aad
and
mov
add
xchg
mov
rolb
mov
xchg
add
add
and
xor
movsb
imul
jecxz
and
ljmp
or
xor
and
mov
add
push
lea
ss
movsb
pop
pop
dec
or
sub
mov
ljmp
cmp
loopne
mov
fidivl
add
shr
inc
loopne
mov
xor
mov
mov
enter
or
pop
testb
call
cmp
lock
pop
test
mov
icebp
pop
and
out
add
pop
xchg
jp
lods
mov
test
rcll
icebp
mov
call
add
or
adc
outsb
nop
add
fidivs
repnz
add
scas
lods
fcompl
mov
push
sahf
insb
push
add
fdivs
mov
adc
mov
scas
xchg
push
fisubrs
fsubrl
repnz
xchg
imul
dec
movl
jo
mov
addb
rsm
in
pcmpgtb
je
add
push
pop
xlat
lret
push
add
dec
popa
movq
xchg
add
add
hlt
leave
jle
cmc
jno
js
scas
adc
mov
into
fnsave
add
mov
imul
pop
push
xor
call
fidivrl
addb
outsb
dec
sub
gs
mov
out
in
insl
mov
mov
mov
mov
add
xchg
popa
push
movsl
imul
mov
data16
call
unpckhps
test
sub
mov
add
add
cs
sbb
xor
mov
inc
sbb
xor
xchg
in
mov
add
add
sahf
mov
aas
lret
insl
xchg
cli
not
pushf
fisubrl
mov
dec
out
add
adc
or
out
loope
js
cmp
add
mov
jl
jbe
or
add
add
mov
inc
add
add
sar
push
ljmp
bound
mov
add
or
fnstcw
jb
mov
int3
ud1
mov
fnstenv
stos
mov
call
out
jnp
inc
addr16
lcall
idivl
outsl
rep
stc
jge
std
push
scas
fdiv
or
pop
rcl
mov
xchg
sub
test
insl
or
mov
hlt
mov
jb
mov
dec
jbe
adc
xor
push
pop
roll
cwtl
xor
mov
jo
mov
mov
es
lret
sub
jbe
cli
push
jb
mov
dec
ss
aad
pop
cltd
out
loopne
mov
add
add
sbb
jo
mov
stos
fucomip
lahf
test
add
or
mov
test
addl
sbb
add
in
sub
gs
sahf
fstp
dec
mov
les
popf
jo
mov
clc
xor
aas
inc
xchg
add
addb
hlt
frstor
mov
das
les
adc
jecxz
movsb
imul
mov
xlat
and
mov
add
add
enter
cmp
adc
mov
setp
call
addr16
aas
xchg
rorl
test
xchg
add
mov
or
mov
stos
fs
add
popf
or
lahf
push
mov
add
cmpsl
lods
or
mov
add
push
mov
enter
flds
add
cmc
int3
pop
jb
mov
add
arpl
cltd
inc
outsl
ret
pop
scas
ja
sbb
mov
jmp
lock
dec
fcoml
add
dec
dec
testb
mov
mov
icebp
imul
ret
or
mov
pusha
add
xor
xor
mov
add
nop
add
add
mov
repnz
dec
push
sahf
test
in
jg
mov
mov
mov
outsl
jb
mov
out
cld
mov
inc
jmp
adc
push
adc
mov
add
dec
fldcw
in
lods
scas
testb
popf
adc
mov
mov
jbe
inc
add
mov
dec
gs
jle
pusha
add
mov
mov
pop
shll
add
outsl
movsl
jb
mov
xor
jnp
sub
cmpsl
xchg
mov
and
add
ss
inc
call
add
lcall
add
cmp
popa
pop
add
test
xor
mov
in
add
mov
add
pusha
add
gs
pop
icebp
mov
mov
mov
push
arpl
popf
std
arpl
mov
add
cmpsb
add
mov
add
mov
jge
xchg
add
jb
mov
push
jg
add
pop
repz
add
mov
jb
mov
movsl
dec
testb
push
dec
icebp
test
add
add
mov
in
filds
push
mov
add
inc
push
jle
mov
mov
mov
loop
mov
jmp
loopne
mov
lahf
dec
lods
mov
aas
out
xchg
xchg
data16
mov
cmp
add
mov
lea
movsl
xchg
sub
mov
movsb
scas
leave
xor
mov
xor
add
mov
mov
imul
mov
mov
push
add
add
xchg
lods
xor
mov
dec
add
add
mov
jb
mov
bound
mov
pop
scas
mull
add
mov
aad
out
add
lret
pop
popa
dec
out
sub
add
lods
xor
mov
rolb
mov
dec
nop
add
insl
loope
rcll
lret
in
fsubrp
mov
jo
mov
pop
jecxz
add
jo
mov
add
mov
add
cmp
and
insb
push
cmc
std
sub
add
dec
pop
cld
decl
mov
insb
and
mov
fildll
daa
lret
movsb
pop
mov
xchg
orl
add
mov
add
push
fsubr
mov
mov
jl
les
sbb
adc
sub
jbe
inc
adc
mov
rolb
stos
mov
mov
add
inc
mov
sub
mov
jge
xchg
in
into
rolb
mov
mov
aam
imul
push
add
mov
rolb
mov
clc
out
shrl
pop
lret
cli
insb
jge
xchg
mov
add
lahf
add
mov
xchg
ret
push
or
addr16
xchg
push
or
sti
push
mov
cmp
fiadds
mov
lcall
xor
mov
adc
pusha
add
lods
insb
into
jnp
fiaddl
cmp
push
out
fdivr
adc
mov
lcall
xor
add
hlt
nop
add
lods
mov
mov
inc
mov
mov
xchg
add
punpcklbw
mov
mov
pop
xor
push
sbb
cmp
add
add
push
in
fsubrs
pop
cmc
aad
data16
in
imul
inc
add
enter
mov
mov
mov
pushf
enter
push
push
add
add
mov
jbe
testb
xor
add
lret
mov
cmc
jmp
stos
inc
sbb
fstp
dec
stos
fmul
loop
mov
mov
push
pop
inc
xchg
inc
mov
xor
push
scas
inc
jg
add
jno
xor
pop
dec
sub
adc
jb
mov
jnp
inc
inc
inc
rorl
mov
sbb
data16
mov
dec
adc
cld
mov
mov
adc
adc
add
add
outsl
lds
mull
in
les
mov
mov
aad
addr16
pop
sarl
jge
adc
hlt
mov
sbb
xor
in
and
jno
mov
dec
dec
jb
mov
call
jge
test
push
xchg
xchg
add
sub
sti
repnz
dec
push
rolb
mov
mov
xor
mov
mov
mov
xchg
add
add
or
or
jns
fisubrs
rolb
mov
jbe
mov
xlat
stos
js
and
mov
pop
lahf
push
addr16
popf
fdivl
add
icebp
mov
add
xlat
outsb
ret
xchg
call
mov
jg
jne
xorl
add
insb
mov
mov
and
icebp
mov
add
jg
add
add
mov
add
cmpsl
jmp
mov
add
mov
js
add
sbb
in
push
add
jl
enter
repnz
aad
leave
insl
outsb
lret
or
sbb
add
add
int3
fisubrs
pop
ja
xchg
aam
and
fidivrl
mov
movsb
lret
mov
repz
lret
fists
aaa
lcall
mov
enter
jnp
cmp
lock
add
mov
insb
jno
fiadds
pushl
mov
ret
mov
fdivs
add
inc
add
mov
lods
mov
xchg
cli
xchg
add
mov
fs
into
adc
add
outsb
addr16
rcrl
add
js
adc
das
xchg
mov
movsb
test
in
and
mov
mov
add
ficoml
pop
sarl
push
jge
pusha
add
add
mov
cmp
dec
arpl
jne
jne
sub
sub
adc
mov
xchg
mov
mov
icebp
cli
fmul
jne
out
xchg
pop
push
pop
andl
add
add
in
push
fwait
testb
clc
xchg
add
ss
push
pop
cmp
outsb
int3
data16
cld
pop
out
inc
add
add
pop
stc
fiadds
jno
jne,pt
orl
int3
mov
xchg
add
add
xor
mov
test
cwtl
mov
mov
pop
aad
iretw
ret
and
sahf
leave
push
mov
xrelease
xor
mov
jno
xor
mov
sbb
cmp
mov
fiaddl
lret
aaa
lahf
mov
in
and
add
mov
enter
add
rolb
mov
loopne
mov
popf
push
outsb
mov
into
sub
fisubl
out
lods
sub
aad
lods
pop
shll
gs
jno
xchg
cmp
fucom
mov
mov
sbb
inc
mov
jge
popa
into
ds
in
add
sbb
in
mov
mov
jl,pn
fs
dec
jp
xchg
testl
imul
mov
int
mov
xchg
lods
psllw
jle
pop
and
ret
hlt
pop
fiadds
call
add
ret
stc
and
mov
ret
fwait
dec
in
and
rolb
mov
pop
mov
ret
lods
xor
xor
mov
pop
add
into
sub
xchg
sub
rolb
mov
dec
push
jg
adc
mov
jmp
add
sub
sti
sub
or
rolb
or
out
jns
jle
ljmp
invd
adc
cmp
imul
jae
mov
mov
jecxz
stc
push
push
add
ljmp
and
mov
add
dec
mov
mov
into
in
jno
push
push
repz
add
scas
rolb
mov
mov
fs
mov
mov
mov
aad
jg
stc
or
rolb
or
in
sti
xor
add
sub
ficoml
sbb
sub
push
fldt
push
out
js
inc
jnp
sub
popf
jge
add
rolb
mov
testb
mov
sbb
scas
add
xchg
negb
xor
add
xchg
add
cmp
cltd
cmp
mov
mov
cli
lods
mov
pop
icebp
xchg
xor
mov
xor
mov
out
repz
icebp
frstor
jns
into
call
mov
fimull
pop
mov
imul
add
mov
jecxz
dec
or
xchg
push
adc
arpl
sub
xor
mov
lds
mov
mov
shll
add
aam
inc
jbe
sub
pmaddwd
cmp
lahf
adc
adc
mov
add
pop
fwait
iret
or
mov
add
pop
sbbl
in
lret
fidivl
mov
add
cltd
sub
xchg
add
sahf
cs
sbb
mov
xor
mov
mov
idiv
inc
add
dec
push
loop
mov
cmp
stos
push
scas
mov
outsb
adc
mov
dec
addb
rolb
mov
add
mov
in
pop
sbb
cmpsl
push
jnp
add
pop
cltd
xor
mov
mov
add
repz
mov
mov
sub
out
add
iret
lahf
test
in
movsb
stc
loop
mov
xor
lock
xchg
mov
jbe
aas
and
ret
repz
and
js
jl
mov
rolb
mov
int
add
jge
cmp
cwtl
insb
add
dec
adc
mov
add
xchg
lods
pusha
add
dec
xchg
lret
rolb
mov
aaa
or
push
mov
jle
mov
mov
and
mov
add
push
in
xchg
ret
lretw
or
dec
stc
mov
pop
roll
push
inc
aaa
pop
dec
mov
lcall
mov
jno
lods
inc
fisttpl
mov
stc
in
sbb
cmp
aam
jno
mov
pusha
add
gs
ds
pop
mov
add
jp
dec
ret
mov
iret
jns
cld
dec
roll
sub
add
add
addb
sbb
aad
jle
add
jae
mov
mov
int
xchg
lret
jecxz
jo
mov
addb
mov
mov
or
inc
movsl
rolb
mov
ja
xchg
rolb
mov
add
rolb
pop
lods
pop
stos
inc
cmp
pop
inc
xor
mov
add
dec
sub
iret
divb
push
adc
in
or
mov
repnz
loope
addb
add
add
pop
inc
pop
test
mov
lahf
mov
mov
das
fwait
jecxz
cmp
push
ljmp
add
inc
add
lahf
bound
mov
lret
push
add
push
outsl
cwtl
xor
mov
mov
xchg
add
add
xchg
sub
pop
sub
fsubl
gs
lods
rorl
icebp
rolb
mov
mov
mov
add
add
sahf
aaa
mov
pushl
jnp
mov
add
mov
jecxz
add
cmp
mov
xlat
jg
add
test
add
subl
cmp
fdivrs
xor
push
add
decl
or
push
or
bound
mov
stc
sarl
add
outsl
ja
data16
xchg
jmp
imul
lret
and
adc
jnp
test
ds
nop
add
in
and
lahf
hlt
enter
fisubs
lock
out
add
in
stmxcsr
or
lods
in
imul
inc
sbb
fmull
mov
lock
adc
mov
mov
jmp
add
mov
mov
xchg
mov
dec
das
pop
loope
test
rcr
pop
rol
mov
sub
xchg
mov
cmp
jb
mov
pusha
add
mov
add
aaa
and
add
mov
int
into
xorl
mov
push
int3
inc
cltd
and
add
mov
int3
mov
loop
mov
xlat
mov
cmp
xor
mov
nop
add
add
jnp
negb
mov
push
fiadds
add
xchg
add
lret
arpl
add
ja
int
test
jns
dec
xor
mov
add
bswap
cs
add
out
add
jno
cmp
mov
mov
pop
push
add
mov
xor
mov
in
dec
enter
sahf
and
mov
mov
xor
add
andnps
dec
pop
test
popf
lret
pop
xor
iret
movsl
xchg
in
sbb
mov
xchg
mov
aaa
inc
out
rolb
mov
xor
add
mov
andl
add
add
fidivrl
and
mov
cmp
cmp
pop
test
in
inc
out
fscale
adc
scas
cmp
imul
xchg
cli
in
mov
scas
ds
or
scas
mov
in
loopne
mov
push
push
add
push
mov
mov
pop
add
add
push
jmp
imul
mov
lret
push
dec
jecxz
out
sbb
push
popa
mov
mov
pop
push
add
sbb
movsl
and
mov
adc
mov
xchg
mov
mov
jne
jno
xchg
cli
movsl
mov
enter
xchg
add
repz
xor
pop
or
add
mov
add
cmpsl
and
mov
fs
jle
add
cmpsl
or
xchg
popf
clc
xchg
mov
test
jae
les
adc
mov
add
mov
add
test
add
xchg
mov
mov
out
mov
mov
or
test
addb
push
adc
mov
movsl
ds
je
mov
test
add
or
adc
inc
adc
iret
out
loopne
mov
add
movl
rolb
mov
fs
and
pop
mov
pop
mov
mov
lahf
enter
jg
scas
xor
xor
mov
mov
addb
mov
mov
insl
jne
pop
sub
mov
test
insb
xchg
inc
aas
jne
sub
xor
divl
jg
fwait
mov
and
mov
aad
jl
xchg
test
add
adc
push
out
add
rolb
mov
inc
jbe
inc
jle
test
add
sub
rolb
mov
mov
xor
mov
scas
inc
push
add
or
unpckhps
push
xchg
add
push
push
mov
cltd
jmp
pop
stos
fidivrs
es
and
mov
xchg
push
test
call
sub
pusha
add
sbb
out
or
sub
cmp
subl
loop
mov
aad
hlt
adc
mov
or
rorl
mov
add
add
and
mov
mov
fs
or
adc
push
mov
add
lock
xor
and
test
mov
mov
add
mov
mov
stos
or
mov
inc
add
aaa
stos
xor
mov
add
cmpsl
xchg
and
mov
push
movsb
in
xor
test
jmp
or
fdivrl
add
ljmp
inc
sahf
cmp
jne
call
popa
mov
xor
fdiv
lea
mov
xchg
xchg
mov
mov
xchg
mov
mov
mov
push
and
or
je
push
add
ficoml
lret
testb
mov
and
stos
inc
add
jb
mov
adc
sbb
sbb
add
jmp
fldenv
add
add
and
mov
sub
cmp
movsb
jo
mov
hlt
mov
mov
dec
jle
popf
stos
fsub
mov
fs
and
inc
sub
add
add
mov
pop
adc
adc
xchg
fdivrs
add
stos
popa
in
daa
rolb
fcompl
loope
cmpsl
push
in
gs
xor
mov
push
add
mov
mov
loope
test
mov
xchg
sub
add
out
mov
pop
gs
or
mov
movsl
sbb
mov
mov
popa
scas
mov
out
add
iret
lock
sub
inc
sbb
dec
push
adc
mov
dec
xchg
mov
add
sbbl
add
clc
repnz
nop
cld
jae
rolb
add
clc
repnz
nop
cld
jae
repnz
pop
inc
jno
push
pop
push
push
mov
nop
leave
jmp
iret
add
add
sub
lods
add
add
clc
repnz
nop
cld
jae
aaa
add
add
repnz
nop
cld
jae
xchg
add
cmp
loop
xor
clc
push
mov
nop
leave
jmp
add
add
aaa
add
mov
xchg
ret
loop
jge
inc
add
fidivl
add
add
repnz
nop
cld
jae
cld
xchg
and
stos
clc
repnz
nop
cld
jae
add
inc
add
or
add
repnz
nop
cld
jae
cmp
mov
flds
add
repnz
nop
cld
jae
xor
xor
repnz
repnz
nop
cld
jae
add
add
iret
add
imul
repnz
nop
cld
jae
movsl
add
add
mov
push
mov
nop
leave
jmp
add
add
add
mov
nop
leave
jmp
inc
mov
xchg
add
stos
and
clc
repnz
nop
cld
jae
add
add
add
clc
repnz
nop
cld
jae
add
inc
pop
test
mov
xchg
ret
add
xor
mov
rclb
fildl
xchg
ret
add
mov
add
cmpl
jae
lods
test
sbb
mov
nop
leave
jmp
or
add
rolb
add
ficoml
repnz
nop
cld
jae
add
repnz
test
push
mov
nop
leave
jmp
add
cmp
add
add
or
mov
nop
leave
jmp
jno
movsl
add
test
repnz
nop
cld
jae
add
mov
add
mov
add
in
nop
leave
jmp
add
movl
lea
test
sbb
add
repnz
nop
cld
jae
add
add
cmp
add
repnz
nop
cld
jae
add
add
xchg
clc
repnz
nop
cld
jae
add
add
lods
xchg
fldl
in
nop
leave
jmp
lret
js
add
add
popa
push
add
pusha
push
mov
nop
leave
jmp
inc
add
lods
lret
add
repnz
nop
cld
jae
loop
add
repnz
in
mov
push
mov
xchg
ret
add
lret
cmp
add
mov
xchg
ret
cld
add
loop
xchg
fisubrl
roll
xchg
ret
add
add
test
cld
mov
clc
repnz
nop
cld
jae
sti
inc
add
pop
mov
add
shrl
rclb
les
xchg
ret
add
add
or
shlb
mov
clc
repnz
nop
cld
jae
add
xchg
add
add
push
mov
nop
leave
jmp
xchg
mov
lods
int3
add
clc
repnz
nop
cld
jae
add
orb
or
add
repnz
nop
cld
jae
cld
add
add
into
push
push
mov
xchg
ret
js
jge
xchg
repnz
add
repnz
nop
cld
jae
sbb
add
push
push
mov
nop
leave
jmp
filds
add
add
repz
mov
xchg
ret
fiaddl
and
or
nop
nop
cld
jae
test
add
sub
ss
jmp
js
add
add
bound
add
loop
pop
push
mov
xchg
ret
mov
add
add
mov
clc
repnz
nop
cld
jae
xchg
loop
add
rep
clc
repnz
nop
cld
jae
inc
fildll
add
add
xchg
push
mov
nop
leave
jmp
add
add
add
repnz
nop
cld
jae
add
cmc
pop
dec
push
mov
nop
leave
jmp
add
add
add
add
mov
pushl
push
mov
xchg
ret
mov
lods
add
clc
repnz
nop
cld
jae
int
add
cmp
add
mov
xchg
ret
mov
add
add
in
loop
div
push
mov
nop
leave
jmp
sarb
aaa
add
add
add
clc
repnz
nop
cld
jae
lods
fiaddl
loop
adc
mov
in
nop
leave
jmp
aaa
cmp
add
add
pop
ret
clc
repnz
nop
cld
jae
mov
in
xchg
add
sub
push
push
mov
xchg
ret
cmp
lods
add
inc
popf
mov
push
mov
xchg
ret
add
and
in
add
push
mov
xchg
ret
add
add
add
push
mov
xor
clc
repnz
nop
cld
jae
mov
add
add
add
mov
pusha
clc
repnz
nop
cld
jae
in
loop
pop
add
xor
push
nop
nop
cld
jae
loop
mov
inc
sbb
mov
inc
add
add
mov
add
fwait
push
push
mov
xchg
ret
add
add
xchg
xor
mov
push
clc
repnz
nop
cld
jae
fildl
movsl
mov
addb
xchg
xor
mov
cmp
repnz
nop
cld
jae
loop
fiaddl
jno
lcall
repnz
nop
cld
jae
in
add
js
cmpl
push
mov
nop
leave
jmp
xchg
add
and
mov
dec
adc
repnz
nop
cld
jae
add
add
add
test
add
push
mov
nop
leave
jmp
js
add
and
mov
nop
nop
cld
jae
inc
add
cld
add
mov
nop
leave
jmp
mov
add
xor
add
push
mov
filds
xchg
ret
add
pop
add
mov
jne
push
mov
xchg
ret
fiaddl
jno
add
add
add
mov
xchg
ret
add
shl
add
mov
inc
push
adc
clc
repnz
nop
cld
jae
add
iret
inc
cmp
repnz
nop
cld
jae
add
lds
adc
repnz
nop
cld
jae
loop
movsl
mov
add
nop
nop
cld
jae
lods
xchg
mov
add
add
mov
add
push
mov
xchg
ret
add
push
movsl
add
jne
clc
repnz
nop
cld
jae
add
jno
push
clc
repnz
nop
cld
jae
add
pop
add
add
pop
or
clc
repnz
nop
cld
jae
add
mov
nop
nop
cld
jae
add
fiaddl
lret
jge
hlt
mov
add
push
mov
nop
leave
jmp
fildl
test
dec
call
clc
repnz
nop
cld
jae
js
add
mov
repnz
nop
cld
jae
mov
lods
add
lods
lods
ret
clc
repnz
nop
cld
jae
pop
add
pop
lods
add
mov
icebp
inc
add
bound
adc
add
jno
fisttpl
repnz
nop
cld
jae
ror
lods
sbb
add
repnz
nop
cld
jae
add
add
sub
clc
repnz
nop
cld
jae
add
loop
push
push
push
mov
xchg
ret
sub
add
add
mov
pusha
add
lea
push
mov
xchg
ret
xchg
add
xchg
pop
jge
add
cmp
clc
repnz
nop
cld
jae
add
lods
pop
inc
add
popl
clc
repnz
nop
cld
jae
add
add
aaa
add
push
mov
xchg
ret
lods
add
add
sub
add
rcll
push
mov
xchg
ret
sub
add
and
push
mov
xchg
ret
add
test
popa
imul
cld
jae
add
repnz
nop
cld
jae
pop
xchg
pop
jno
add
cmp
nop
leave
jmp
lods
cmp
mov
mov
xchg
ret
add
add
sub
pop
jecxz
add
add
add
push
mov
nop
leave
jmp
push
lods
jge
mov
add
clc
repnz
nop
cld
jae
jge
mov
adc
lods
cmp
push
mov
xchg
ret
pop
aaa
mov
mov
add
or
in
movb
cmp
ret
mov
add
ss
jge
push
clc
repnz
nop
cld
jae
add
add
mov
mov
push
sbb
sar
nop
nop
cld
jae
loop
subb
mov
mov
push
mov
nop
leave
jmp
add
add
nop
cld
jae
add
add
add
push
adc
add
repnz
nop
cld
jae
mov
mov
shll
push
dec
movzwl
clc
repnz
nop
cld
jae
add
lods
add
clc
repnz
nop
cld
jae
add
push
push
mov
xchg
ret
pop
add
inc
add
lds
mov
push
mov
xchg
ret
jno
inc
add
lret
add
mov
mov
xchg
ret
lret
fiaddl
push
mov
add
lea
clc
repnz
nop
cld
jae
lods
xchg
xor
pop
clc
repnz
nop
cld
jae
push
cmp
mov
clc
repnz
nop
cld
jae
add
add
add
sbb
repnz
nop
cld
jae
lods
mov
inc
loop
mov
fs
repnz
nop
cld
jae
add
addb
mov
push
mov
xchg
ret
add
add
add
mov
popa
add
repnz
nop
cld
jae
inc
mov
add
cmp
add
pop
testb
cmp
ret
add
push
adc
add
int
test
push
add
clc
repnz
nop
cld
jae
add
jno
addb
lods
pop
push
mov
xchg
ret
add
pop
jno
add
adc
mov
push
mov
xchg
ret
aaa
int
add
add
leave
sub
repnz
nop
cld
jae
pop
adc
pop
repnz
push
mov
nop
leave
jmp
add
fistl
add
cmp
push
mov
nop
leave
jmp
add
test
shrb
repnz
nop
cld
jae
add
int
js
pop
or
clc
repnz
nop
cld
jae
xchg
add
rorb
jp
push
mov
nop
leave
jmp
cmp
and
sbb
add
repnz
nop
cld
jae
loop
aaa
add
nop
nop
cld
jae
in
add
inc
add
mov
push
mov
nop
leave
jmp
add
cld
sub
push
mov
mov
push
mov
nop
leave
jmp
add
lods
sbb
repnz
nop
cld
jae
sbb
add
dec
push
push
mov
xchg
ret
add
adcb
dec
add
clc
repnz
nop
cld
jae
cld
mov
rorl
add
add
fiaddl
loop
add
push
add
push
mov
xchg
ret
iret
add
add
repnz
add
clc
repnz
nop
cld
jae
mov
add
pop
add
add
repnz
nop
cld
jae
fimull
dec
adc
div
inc
add
clc
lods
pop
add
add
add
clc
repnz
nop
cld
jae
add
js
inc
add
mov
clc
repnz
nop
cld
jae
add
sti
mov
addb
cltd
mov
clc
repnz
nop
cld
jae
add
add
adc
xchg
cmp
repnz
nop
cld
jae
add
mov
rol
push
mov
xchg
ret
xchg
pop
add
int
rolb
mov
xor
clc
repnz
nop
cld
jae
add
js
add
push
test
mov
xchg
ret
inc
cmp
mov
add
daa
roll
repnz
nop
cld
jae
add
cmp
add
jge
pop
cmp
mov
xchg
ret
add
push
mov
clc
repnz
nop
cld
jae
or
lea
push
mov
xchg
ret
jno
add
add
iret
or
cld
jae
add
add
insb
mov
push
mov
xchg
ret
clc
cld
or
or
or
xchg
lret
inc
add
fistpll
add
or
mov
clc
repnz
nop
cld
jae
add
dec
rep
clc
repnz
nop
cld
jae
bound
test
add
push
mov
nop
leave
jmp
mov
ret
es
loope
mov
nop
leave
jmp
add
add
aas
mov
clc
repnz
nop
cld
jae
mov
sub
add
mov
add
push
mov
xchg
ret
cld
add
in
add
xor
fisttpll
add
repnz
nop
cld
jae
sti
add
mov
nop
leave
jmp
bound
mov
add
mov
jo
mov
gs
add
or
add
or
pop
xchg
sub
repnz
nop
cld
jae
xchg
add
add
add
xchg
add
xor
add
clc
repnz
nop
cld
jae
and
sti
jne
clc
repnz
nop
cld
jae
lods
sbb
in
mov
clc
repnz
nop
cld
jae
lods
push
add
addb
ljmp
push
mov
xchg
ret
add
add
mov
clc
repnz
nop
cld
jae
sti
or
js
mov
xchg
ret
pop
add
mov
cmp
mov
xchg
ret
add
add
loop
cmpsl
nop
add
clc
repnz
nop
cld
jae
add
add
push
push
mov
xchg
ret
jno
add
add
sub
xor
mov
into
pop
push
mov
xchg
ret
add
xor
aaa
add
lret
loop
jp
push
mov
nop
leave
jmp
bound
add
sti
dec
push
mov
nop
leave
jmp
xchg
inc
add
or
adc
repnz
nop
cld
jae
fildl
add
add
mov
pushl
clc
repnz
nop
cld
jae
and
js
add
push
mov
nop
leave
jmp
push
push
xor
add
adc
mov
nop
cld
jae
pop
add
add
add
add
stos
push
clc
repnz
nop
cld
jae
add
add
xchg
add
sbbb
add
repnz
nop
cld
jae
add
push
mov
xchg
ret
or
add
pop
add
add
clc
repnz
nop
cld
jae
mov
jge
imul
add
xchg
cld
xchg
add
int
xchg
xchg
cmp
stc
clc
repnz
nop
cld
jae
add
movsl
jg
leave
jns
pop
push
mov
nop
leave
jmp
filds
add
add
sub
jne
push
mov
xchg
ret
sti
add
add
add
mov
mov
add
mov
xchg
ret
add
or
inc
add
add
test
cmc
cmp
clc
repnz
nop
cld
jae
add
clc
add
mov
adc
mov
aas
mov
clc
repnz
nop
cld
jae
in
add
or
in
nop
leave
jmp
jge
lods
int
int
ss
mov
nop
cld
jae
add
movsl
loop
test
add
nop
cld
jae
add
add
mov
push
mov
xchg
ret
addb
add
sbb
xchg
enter
cmp
ret
lods
push
sti
clc
xchg
rclb
call
clc
repnz
nop
cld
jae
and
push
mov
loopne
jecxz
repz
pop
out
repnz
add
pop
add
push
mov
int3
insb
mov
add
sti
add
add
push
rolb
add
pop
xchg
cmp
inc
add
cmp
add
mov
clc
repnz
nop
cld
jae
add
add
xor
mov
clc
repnz
nop
cld
jae
or
int3
and
push
mov
xchg
ret
add
sbb
repnz
or
repnz
nop
cld
jae
add
add
and
push
clc
repnz
nop
cld
jae
add
clc
add
inc
sub
repnz
nop
cld
jae
lods
add
add
cmc
mov
repnz
nop
cld
jae
adc
fbld
out
clc
repnz
nop
cld
jae
cmp
and
clc
repnz
nop
cld
jae
rclb
mov
ljmp
nop
leave
jmp
push
add
add
and
mov
pushf
cmpl
push
mov
nop
leave
jmp
add
sbb
add
dec
cmp
repnz
nop
cld
jae
pop
add
add
xor
push
mov
xchg
ret
cld
cld
add
fists
jp
test
push
add
clc
repnz
nop
cld
jae
add
add
in
nop
leave
jmp
sbb
jge
je
clc
repnz
nop
cld
jae
add
imul
push
mov
nop
leave
jmp
push
sti
sub
add
xor
jge
clc
repnz
nop
cld
jae
add
loop
add
call
add
fildl
add
add
movl
cmp
push
mov
nop
leave
jmp
add
add
add
cltd
and
clc
repnz
nop
cld
jae
jno
add
add
add
add
clc
repnz
nop
cld
jae
add
jge
push
es
mov
clc
repnz
nop
cld
jae
lods
lods
fldt
add
xor
adc
repnz
nop
cld
jae
bound
fs
jmp
add
add
xchg
addb
adc
add
shl
adc
pop
clc
repnz
nop
cld
jae
add
or
mov
sub
lahf
pop
clc
repnz
nop
cld
jae
lret
jno
cld
add
mov
inc
dec
mov
clc
repnz
nop
cld
jae
add
add
rolb
add
push
mov
nop
leave
jmp
or
adc
or
push
mov
dec
stos
add
xchg
imul
insb
fdivs
add
jns
add
dec
cmp
repnz
nop
cld
jae
add
cmp
add
push
test
push
mov
jne
add
push
mov
jmp
jl
and
test
push
mov
nop
leave
jmp
add
sub
push
mov
xchg
ret
add
orb
mov
push
mov
xchg
ret
add
xchg
add
inc
xchg
pop
mov
clc
repnz
nop
cld
jae
add
mov
xor
push
mov
nop
leave
jmp
add
push
add
add
mull
repnz
nop
cld
jae
xchg
add
clc
repnz
nop
cld
jae
add
fcmovnu
inc
push
mov
xchg
ret
inc
sbb
add
jno
add
jnp
leave
sub
in
nop
leave
jmp
movsl
jge
rolb
jge
cmp
fs
repnz
nop
cld
jae
cmc
jge
fcmove
push
clc
repnz
nop
cld
jae
sub
push
lods
add
xor
leave
pusha
clc
repnz
nop
cld
jae
add
test
mov
or
mov
xchg
ret
fistpll
cmc
add
lods
int
inc
add
clc
repnz
nop
cld
jae
add
int
xchg
bound
push
mov
xchg
ret
add
add
add
dec
push
mov
nop
leave
jmp
xchg
xchg
test
clc
add
add
lret
clc
repnz
nop
cld
jae
movsl
lods
movsl
mov
addl
mov
or
add
add
clc
repnz
nop
cld
jae
add
xchg
pop
add
mov
pop
mov
push
mov
xchg
ret
add
cld
lock
clc
repnz
nop
cld
jae
add
add
jno
add
add
nop
nop
cld
jae
or
add
or
aaa
lds
clc
repnz
nop
cld
jae
int
add
add
cmc
cld
aaa
dec
jne
clc
repnz
nop
cld
jae
jno
add
push
mov
nop
leave
jmp
add
add
push
mov
xchg
ret
subb
add
mov
sub
push
mov
nop
leave
jmp
filds
aaa
lods
or
orb
or
inc
add
cmc
adc
add
add
mov
push
lret
mov
nop
leave
jmp
cmc
push
add
int
add
jne
clc
repnz
nop
cld
jae
add
and
repnz
nop
cld
jae
iret
add
add
add
rclb
nop
leave
jmp
add
add
shr
clc
repnz
nop
cld
jae
add
movsl
cld
mov
add
add
add
push
mov
nop
leave
jmp
xchg
add
add
nop
nop
cld
jae
add
js
jno
xor
sub
push
mov
xchg
ret
mov
js
add
jge
ds
push
mov
nop
leave
jmp
add
js
mov
add
clc
repnz
nop
cld
jae
add
sbb
mov
xchg
ret
mov
add
add
pop
pop
clc
repnz
nop
cld
jae
add
add
loop
add
push
clc
repnz
nop
cld
jae
add
mov
movsl
add
lds
nop
nop
cld
jae
add
xor
mov
add
clc
repnz
nop
cld
jae
movsl
adc
pop
jmp
iret
movl
in
add
jno
add
add
clc
repnz
nop
cld
jae
add
mov
xbegin
jae
add
lods
repnz
or
repnz
nop
cld
jae
pop
mov
push
ja
clc
repnz
nop
cld
jae
mov
addb
in
push
push
mov
nop
leave
jmp
bound
add
inc
addb
enter
push
mov
xchg
ret
xorb
inc
add
add
sub
in
add
outsb
cmp
stos
in
or
test
xor
push
clc
repnz
nop
cld
jae
loop
add
push
inc
aad
mov
nop
cld
jae
add
add
add
pop
xchg
sub
repnz
nop
cld
jae
add
clc
repnz
xor
bound
mov
clc
repnz
nop
cld
jae
add
xchg
fstpt
mov
push
mov
xchg
ret
add
add
movsl
add
mov
out
clc
repnz
nop
cld
jae
and
out
test
mov
nop
leave
jmp
xchg
mov
xchg
jno
and
mov
sub
mov
inc
add
push
sub
jb
clc
repnz
nop
cld
jae
add
add
clc
repnz
nop
cld
jae
add
add
xchg
bound
mov
cmp
repz
repnz
nop
cld
jae
mov
push
aaa
js
repz
mov
nop
leave
jmp
cld
add
pop
push
mov
xchg
ret
add
push
add
push
add
mov
mov
mov
xchg
ret
add
add
test
add
push
mov
nop
leave
jmp
jge
inc
add
mov
push
mov
xchg
ret
add
aaa
loop
add
push
mov
xchg
ret
add
xchg
add
js
and
add
repnz
nop
cld
jae
mov
push
repnz
mov
mov
xchg
ret
jno
add
js
scas
push
mov
mov
inc
imul
xchg
mov
mov
mov
nop
cld
jae
cmc
add
lret
add
add
or
test
clc
repnz
nop
cld
jae
add
and
add
push
mov
xchg
ret
repnz
add
add
add
fmuls
or
add
repz
add
jae
clc
repnz
nop
cld
jae
add
sub
xchg
mov
clc
repnz
nop
cld
jae
sti
add
add
add
push
mov
xchg
ret
int
add
bound
push
mov
add
push
add
sbb
add
pop
dec
xor
add
add
push
push
mov
xchg
ret
add
add
cld
sub
jno
pop
push
add
clc
repnz
nop
cld
jae
add
add
mov
clc
repnz
nop
cld
jae
lods
xchg
add
das
mov
clc
repnz
nop
cld
jae
push
xchg
push
xor
xbegin
jae
rorb
lods
imul
nop
leave
jmp
sub
sbb
jge
lods
xchg
add
mov
mov
push
mov
nop
leave
jmp
clc
lods
add
lods
add
xchg
clc
repnz
nop
cld
jae
add
in
add
add
repnz
nop
cld
jae
xchg
add
mov
clc
repnz
nop
cld
jae
add
jge
xor
add
jo
push
mov
nop
leave
jmp
cld
pop
add
add
add
nop
cld
jae
add
add
add
bound
lods
pop
push
mov
nop
leave
jmp
add
xchg
add
add
cmp
cmp
ret
in
xchg
fiaddl
inc
lods
jno
mov
push
mov
nop
leave
jmp
add
add
mov
clc
repnz
nop
cld
jae
lods
pop
add
pusha
add
repnz
nop
cld
jae
add
add
clc
add
js
out
add
push
mov
xchg
ret
jno
add
add
sub
repnz
nop
cld
jae
add
xor
and
shr
push
mov
nop
leave
jmp
add
lret
mov
fbstp
mov
clc
repnz
nop
cld
jae
add
fimuls
mov
add
mov
nop
leave
jmp
sub
add
add
add
jmp
inc
add
sti
js
xchg
add
bound
mov
add
clc
repnz
nop
cld
jae
add
xchg
add
add
movsl
test
jl
clc
repnz
nop
cld
jae
or
sti
jnp
mov
push
mov
nop
leave
jmp
sbb
xor
mov
nop
leave
jmp
mov
add
add
clc
repnz
nop
cld
jae
add
add
add
addb
fmuls
add
in
nop
leave
jmp
add
push
push
mov
nop
leave
jmp
add
sub
fsubrp
lret
out
clc
repnz
nop
cld
jae
add
add
gs
pop
push
ljmp
inc
add
iret
add
add
aaa
sbb
push
mov
xchg
ret
push
add
fwait
mov
clc
repnz
nop
cld
jae
add
add
lods
add
cmp
test
mov
nop
leave
jmp
add
inc
push
mov
nop
leave
jmp
inc
xchg
add
xchg
add
add
mov
push
mov
xchg
ret
add
add
add
xchg
add
sub
push
mov
xchg
ret
cmc
add
cld
add
int
cmp
cld
jae
add
cld
cmp
inc
inc
jne
add
clc
repnz
nop
cld
jae
pop
add
add
add
push
push
mov
nop
leave
jmp
add
add
xchg
add
movswl
clc
repnz
nop
cld
jae
sti
add
add
xor
push
push
mov
xchg
ret
add
add
add
sub
pop
call
in
nop
leave
jmp
lods
mov
sbb
mov
clc
repnz
nop
cld
jae
add
or
cmc
xchg
add
or
repnz
nop
cld
jae
aaa
add
add
add
sbb
repnz
nop
cld
jae
add
mov
add
test
mov
nop
leave
jmp
jge
add
add
add
nop
nop
cld
jae
sbb
add
xabort
nop
nop
cld
jae
add
sub
add
push
push
mov
xchg
ret
add
sbb
addb
lods
mov
push
mov
nop
leave
jmp
add
add
cwtl
cmpw
push
mov
nop
leave
jmp
add
add
add
add
repnz
nop
cld
jae
add
add
js
add
mov
mov
clc
repnz
nop
cld
jae
add
add
add
mov
pop
or
repnz
nop
cld
jae
add
add
push
add
add
add
mov
nop
leave
jmp
sub
add
clc
repnz
nop
cld
jae
add
mov
fiaddl
jg
clc
repnz
nop
cld
jae
fimull
xor
mov
clc
repnz
nop
cld
jae
add
dec
add
clc
repnz
nop
cld
jae
aaa
lods
mov
add
jecxz
mov
clc
repnz
nop
cld
jae
inc
sub
xchg
sub
jg
clc
repnz
nop
cld
jae
add
add
out
push
push
mov
nop
leave
jmp
add
add
mov
xchg
ret
add
fistl
sub
nop
cld
jae
bound
add
ficoml
out
add
add
in
nop
leave
jmp
add
js
push
mov
fnsave
add
adc
loop
sbb
rcr
mov
add
xor
add
clc
repnz
nop
cld
jae
add
into
mov
clc
repnz
nop
cld
jae
mov
mov
rep
clc
repnz
nop
cld
jae
repnz
add
les
jmp
mov
add
enter
clc
repnz
nop
cld
jae
fstpt
add
add
xchg
add
add
repnz
nop
cld
jae
add
lods
jmp
nop
cld
jae
lret
add
pop
add
push
out
pop
clc
repnz
nop
cld
jae
iret
jge
add
and
push
mov
xchg
ret
lods
sti
add
lods
jge
cmp
add
repnz
nop
cld
jae
add
add
stos
popa
push
mov
xchg
ret
lret
jge
push
pop
add
movl
push
mov
nop
leave
jmp
cmc
repnz
clc
add
test
nop
nop
cld
jae
lods
add
add
add
sub
or
inc
add
xor
push
clc
repnz
nop
cld
jae
mov
inc
add
add
adc
repnz
nop
cld
jae
add
lods
add
add
xor
clc
repnz
nop
cld
jae
or
push
add
mov
push
mov
xchg
ret
push
xchg
add
jge
add
add
repnz
nop
cld
jae
int
add
add
fildl
jecxz
add
es
add
push
mov
nop
leave
jmp
mov
cld
int
push
dec
add
clc
repnz
nop
cld
jae
xchg
add
mov
test
nop
cld
jae
jno
jge
add
add
xchg
push
mov
xchg
ret
inc
add
xchg
xor
nop
nop
cld
jae
add
add
nop
cld
jae
mov
add
repnz
les
nop
leave
jmp
fiaddl
add
add
or
add
gs
repnz
nop
cld
jae
add
add
hlt
or
dec
cmp
mov
nop
leave
jmp
xor
movsl
sbb
xchg
add
push
mov
xchg
ret
add
cmc
add
fcmove
xor
clc
repnz
nop
cld
jae
sti
or
add
xor
add
clc
repnz
nop
cld
jae
add
mov
nop
leave
jmp
fildl
add
push
mov
xchg
ret
loop
pop
repnz
lods
add
jmp
add
mov
mov
lods
add
push
inc
adc
mov
nop
leave
jmp
lods
lret
and
repnz
pop
push
mov
nop
leave
jmp
add
add
mov
adc
mov
add
repnz
nop
cld
jae
movl
repnz
lock
push
mov
nop
leave
jmp
add
mov
xchg
or
fnstenv
sar
nop
nop
cld
jae
add
mov
mov
add
clc
repnz
nop
cld
jae
add
sbb
jno
pop
clc
repnz
nop
cld
jae
add
add
push
add
imul
clc
repnz
nop
cld
jae
pop
add
bound
mov
incl
jno
cmc
or
jno
add
push
mov
inc
add
mov
adc
mov
jecxz
add
mov
nop
cld
jae
js
in
add
add
mov
mov
fidivrl
leave
add
popl
cli
lret
add
mov
nop
leave
jmp
fcmove
add
xchg
add
repz
cli
push
mov
nop
leave
jmp
jno
add
movsl
jno
mov
shl
clc
repnz
nop
cld
jae
loop
add
sbb
jne
clc
repnz
nop
cld
jae
jge
add
add
push
add
add
clc
repnz
nop
cld
jae
lods
lods
add
sbb
nop
cld
jae
movl
adc
add
nop
nop
cld
jae
add
jge
inc
add
add
add
call
in
nop
leave
jmp
add
lods
lods
add
pop
and
repnz
nop
cld
jae
sub
test
add
push
mov
nop
leave
jmp
add
cmc
pop
pop
les
clc
repnz
nop
cld
jae
add
add
mov
xchg
clc
repnz
nop
cld
jae
js
addb
xchg
add
mov
fs
insb
clc
repnz
nop
cld
jae
add
add
push
mov
xchg
ret
add
mov
xor
fisttpll
test
ljmp
cld
jae
add
add
das
add
outsl
add
mov
cmpsl
add
pop
cmp
sbb
lea
clc
repnz
nop
cld
jae
movl
add
lods
clc
repnz
nop
cld
jae
test
add
lods
sub
push
clc
repnz
nop
cld
jae
rcrb
add
int
add
xor
ret
inc
add
add
adc
xchg
add
fistps
xchg
repnz
loopne
mov
mov
push
mov
nop
leave
jmp
add
or
clc
repnz
nop
cld
jae
mov
mov
ret
mov
mov
nop
leave
jmp
jno
add
mov
add
nop
nop
cld
jae
ss
add
inc
xor
push
clc
repnz
nop
cld
jae
add
inc
add
add
sti
lret
lods
icebp
clc
repnz
nop
cld
jae
push
fildll
mov
xchg
ret
rorb
add
jae
repnz
nop
cld
jae
add
add
and
sub
inc
add
pop
pop
add
pop
mov
add
in
nop
leave
jmp
add
sbb
or
clc
repnz
nop
cld
jae
add
add
mov
add
clc
repnz
nop
cld
jae
add
js
jno
out
mov
clc
repnz
nop
cld
jae
addb
xchg
lcall
add
ficoml
sti
add
ret
push
mov
nop
leave
jmp
add
fisttpl
nop
nop
cld
jae
xchg
fiaddl
mov
add
push
clc
repnz
nop
cld
jae
push
int
fildl
fisubrl
scas
repnz
clc
repnz
nop
cld
jae
jno
jno
fs
sub
clc
repnz
nop
cld
jae
mov
add
xchg
mov
push
mov
nop
leave
jmp
add
add
sti
inc
clc
repnz
nop
cld
jae
and
addb
push
clc
repnz
nop
cld
jae
movl
sub
mov
clc
repnz
nop
cld
jae
add
add
out
add
clc
repnz
nop
cld
jae
add
add
in
nop
leave
jmp
mov
test
jge
pop
inc
clc
repnz
nop
cld
jae
add
add
add
stos
clc
repnz
nop
cld
jae
add
jge
mov
clc
repnz
nop
cld
jae
add
mov
push
mov
nop
leave
jmp
add
add
jno
jmp
ror
push
add
mov
sbb
add
jne
pusha
clc
repnz
nop
cld
jae
movsl
add
lret
add
add
rolb
xchg
ret
in
mov
sub
add
add
call
clc
repnz
nop
cld
jae
inc
or
loop
jmp
add
iret
mov
pop
add
mov
add
fdivp
movsl
push
mov
nop
leave
jmp
test
mov
aaa
in
add
nop
cld
jae
add
xchg
push
clc
repnz
nop
cld
jae
in
mov
add
jle
clc
repnz
nop
cld
jae
loop
add
aaa
add
add
mov
push
clc
repnz
nop
cld
jae
add
js
and
mov
clc
repnz
nop
cld
jae
add
shll
xor
push
mov
xchg
ret
sti
jge
xchg
sub
add
push
clc
repnz
nop
cld
jae
add
add
push
cmp
inc
flds
inc
and
repnz
nop
cld
jae
add
outsl
push
push
mov
xchg
ret
cmc
add
orb
lods
clc
repnz
nop
cld
jae
xchg
xchg
xchg
jno
add
add
mov
xchg
ret
fildl
repnz
or
push
test
clc
repnz
nop
cld
jae
add
add
mov
add
loop
mov
mov
clc
repnz
nop
cld
jae
add
jb
mov
test
push
mov
xchg
ret
add
add
lods
add
adc
mov
push
push
mov
xchg
ret
add
ss
add
mov
pop
je
clc
repnz
nop
cld
jae
adc
add
subl
push
mov
xchg
ret
sub
sub
xchg
sub
popa
add
repnz
nop
cld
jae
mov
mov
add
push
mov
nop
leave
jmp
xchg
and
in
xchg
add
repnz
nop
cld
jae
mov
loop
clc
loop
jg
into
loope
clc
repnz
nop
cld
jae
mov
xor
imul
and
push
cld
aaa
lods
add
mov
mov
push
mov
nop
leave
jmp
filds
add
pusha
clc
repnz
nop
cld
jae
add
add
add
inc
loopne
mov
push
add
push
mov
nop
leave
jmp
add
lret
add
clc
mov
pop
push
mov
xchg
ret
js
add
sbb
push
mov
xchg
ret
add
add
add
add
pushl
push
mov
nop
leave
jmp
filds
bnd
add
into
push
mov
in
stos
imul
insb
dec
pop
fbstp
orl
clc
repnz
nop
cld
jae
push
add
clc
repnz
nop
cld
jae
fildl
add
clc
push
mov
ds
mov
add
data16
mov
repnz
nop
cld
jae
int
bound
clc
repnz
nop
cld
jae
add
xchg
add
sbb
in
popa
clc
repnz
nop
cld
jae
repnz
xchg
sbb
fimuls
stos
lock
add
mov
cmp
not
clc
repnz
nop
cld
jae
add
cld
pop
or
cmc
cmp
clc
repnz
nop
cld
jae
add
add
clc
repnz
nop
cld
jae
pop
pop
add
int
mov
mov
mov
add
add
xor
clc
repnz
nop
cld
jae
add
test
shr
clc
repnz
nop
cld
jae
add
xchg
mov
add
nop
nop
cld
jae
cmp
add
and
mov
push
jb
pushl
add
add
aaa
push
inc
add
push
mov
addr16
add
push
add
sbb
push
add
mov
add
add
clc
repnz
nop
cld
jae
sub
pop
mov
push
mov
xchg
ret
js
add
push
jp
push
mov
xchg
ret
push
add
add
adc
test
repnz
nop
cld
jae
add
add
clc
repnz
nop
cld
jae
jge
cmp
mov
add
repnz
nop
cld
jae
add
add
and
push
mov
xchg
ret
lods
add
xor
jno
push
mov
nop
nop
cld
jae
add
jno
add
clc
repnz
nop
cld
jae
ss
add
mov
clc
repnz
nop
cld
jae
add
movsl
push
pop
xchg
xor
mov
int
rclb
inc
call
and
add
xchg
add
jmp
clc
repnz
nop
cld
jae
add
fisttps
test
push
mov
nop
leave
jmp
add
lods
add
je
mov
clc
repnz
nop
cld
jae
in
sbb
add
push
mov
xchg
ret
and
or
dec
mov
push
mov
nop
leave
jmp
add
add
mov
pop
push
mov
xchg
ret
add
mov
push
cmp
add
push
add
adc
repnz
nop
cld
jae
add
insb
xor
push
mov
xchg
ret
push
add
and
test
repnz
nop
cld
jae
subb
pop
push
mov
nop
leave
jmp
pop
add
push
adc
bnd
mov
push
mov
nop
leave
jmp
add
mov
adc
sahf
add
push
mov
nop
leave
jmp
mov
sti
fiaddl
cmc
add
rolb
clc
repnz
nop
cld
jae
add
add
inc
sbb
test
in
clc
repnz
nop
cld
jae
jno
add
mov
clc
repnz
nop
cld
jae
test
xchg
add
clc
repnz
nop
cld
jae
add
jge
add
and
mov
nop
leave
jmp
lret
inc
add
sub
fmuls
in
nop
leave
jmp
add
add
add
and
repnz
nop
cld
jae
add
clc
int3
mov
push
mov
xchg
ret
add
lods
jge
xchg
loop
add
clc
repnz
nop
cld
jae
mov
test
add
and
clc
repnz
nop
cld
jae
add
add
jge
pop
push
clc
repnz
nop
cld
jae
or
add
iret
lods
or
repnz
nop
cld
jae
inc
addb
adc
push
mov
xchg
ret
iret
mov
cld
pop
and
clc
repnz
nop
cld
jae
add
add
clc
repnz
nop
cld
jae
add
mov
mov
mov
add
or
repnz
nop
cld
jae
in
and
and
mov
mov
mov
mov
inc
add
sti
add
add
add
mov
clc
repnz
nop
cld
jae
add
mov
add
add
add
test
fdivr
clc
repnz
nop
cld
jae
add
xchg
test
out
add
lods
cmpb
pop
add
xor
shl
xchg
cmpsb
or
clc
repnz
nop
cld
jae
add
fisttps
push
mov
xchg
ret
aaa
inc
iret
add
fistpll
push
mov
xchg
ret
xchg
add
repnz
rolb
mov
movzwl
clc
repnz
nop
cld
jae
subb
loopne
mov
add
clc
repnz
nop
cld
jae
mov
jge
js
jl
movb
adc
add
add
add
add
int
add
push
mov
xchg
ret
js
push
add
mov
mov
mov
nop
leave
jmp
adc
add
add
movswl
clc
repnz
nop
cld
jae
inc
add
inc
and
push
mov
nop
leave
jmp
add
push
pop
add
push
mov
xchg
ret
inc
add
push
push
add
push
or
repnz
nop
cld
jae
add
mov
nop
nop
cld
jae
lods
add
add
jge
test
push
mov
nop
leave
jmp
mov
xchg
xchg
jge
add
idiv
clc
repnz
nop
cld
jae
sub
bound
lds
inc
push
mov
nop
leave
jmp
add
add
add
and
cmp
sar
nop
nop
cld
jae
mov
jno
shl
xor
mov
mov
push
mov
nop
leave
jmp
aaa
addb
adc
in
pop
push
mov
add
mov
add
add
data16
mov
push
mov
xchg
ret
add
add
add
add
pop
movl
mov
add
lods
sbb
push
mov
sbb
in
and
add
xchg
or
add
add
mov
dec
mov
scas
sahf
adc
loop
mov
add
std
pushf
xor
xor
mov
mov
dec
outsl
jnp
add
and
loop
mov
and
mov
jl
lock
lret
cli
dec
dec
aad
add
mov
cli
pusha
add
dec
out
cmp
movsl
popf
xor
rorl
outsb
outsl
xor
mov
adc
mov
fwait
into
imul
stc
cmc
dec
fcos
addb
imul
mov
mov
adcl
aaa
out
adc
out
outsl
das
or
nop
add
insl
or
add
inc
ds
add
mov
fwait
push
mov
scas
out
cmp
push
inc
add
ret
addb
int3
scas
lds
and
mov
imul
add
icebp
xchg
add
fbld
add
mov
dec
divb
push
arpl
mov
imul
push
in
mov
adc
inc
and
mov
ficompl
lods
xor
mov
push
insb
sbb
dec
push
xchg
xchg
add
mov
lahf
push
vpsubq
add
mov
xchg
or
mov
xchg
in
cmc
mov
mov
lds
xchg
fs
xor
mov
jno
jle
xor
mov
aam
add
lods
add
mov
pop
push
xor
leave
sub
aam
add
loopne
mov
push
cltd
xchg
gs
test
dec
mov
dec
es
iret
out
add
mov
dec
push
add
push
inc
out
nop
add
mov
pop
popa
test
xor
mov
cmp
mov
mov
xor
jp
addr16
xor
mov
add
cmp
add
ficoms
movsl
xlat
repz
idiv
mov
add
int3
loopne
mov
cmpsl
leave
dec
xchg
jg
add
push
add
or
insl
loopne
mov
add
mov
cmc
dec
ret
push
in
fldcw
insl
cmp
mov
cmpsb
fcomi
sub
mov
jne
xor
aaa
lea
and
add
pop
xchg
mov
hlt
callw
or
icebp
lahf
decb
js
add
inc
test
cmpsl
jle
sarl
cmp
jmp
mov
sbb
push
push
add
bound
mov
cmp
add
mov
cld
mov
and
add
add
test
nop
add
test
mov
sub
into
divb
adc
jne,pt
and
repnz
insl
or
cs
ljmp
mov
jae
inc
add
add
in
ja
xchg
jnp
jp
data16
fcmovnbe
add
es
jb
mov
add
jns
jp
sbb
stc
sub
mov
mov
filds
pop
mov
mov
add
frstor
idivl
aam
ja
and
inc
addb
jmp
adc
lcall
mov
dec
stc
or
xchg
out
add
mov
push
dec
shrl
call
adc
insb
rolb
mov
add
idivl
sbb
add
add
mov
add
adc
add
rcll
add
fcomps
lcall
mov
cmp
dec
lods
dec
aam
push
mov
xchg
cmc
scas
imul
push
add
cmpsl
add
xchg
scas
jns
jb
mov
bound
mov
out
nop
add
push
mov
inc
std
sbb
xor
and
cmpsl
hlt
mov
mov
addr16
in
xor
add
dec
repz
mov
sbb
ss
div
adc
add
lahf
call
adc
mov
lods
xor
sbb
push
add
fcom
mov
rolb
xchg
dec
rolb
dec
xchg
xlat
sub
xchg
mov
inc
add
fwait
lcall
mov
add
jne
std
sbb
add
add
cmp
add
aam
insl
mov
mov
jp
in
negb
insl
pop
addb
in
aad
mov
jg
add
xchg
add
insl
mov
je
aam
pop
pop
aaa
mov
push
enter
add
mov
jae
arpl
sar
in
inc
stc
fiadds
add
xchg
push
nop
add
xor
mov
xor
push
idivl
cmpsb
daa
arpl
pushl
mov
xchg
je
or
addl
cmpsb
jmp
mov
add
cmp
add
add
frstor
stos
rcrl
pop
pop
in
mov
and
bound
mov
into
push
arpl
ds
add
gs
add
fbld
sub
cmp
outsl
jns
xchg
push
idivl
cs
push
dec
jae
in
enter
mov
lds
add
mov
add
addr16
cmp
cmp
iret
mov
sub
sbb
rcrl
lock
out
sub
push
mov
mov
mov
dec
pop
testb
add
cmpsb
int3
daa
push
mov
pusha
add
jno
push
pop
inc
ret
jns
push
and
mov
push
push
xor
mov
add
mov
out
cli
bound
mov
popa
mov
in
out
sbb
lcall
jo
mov
push
jno
repnz
sbb
cs
sahf
mov
sub
test
jp
pop
inc
xor
dec
sub
mov
mov
or
mov
dec
sub
push
add
fimuls
lret
dec
and
adc
mov
mov
loope
int3
fadd
push
xor
add
add
das
gs
xor
in
hlt
int
dec
int3
ret
call
add
xor
add
mov
add
mov
das
cs
lret
jmp
fmuls
jle
add
lret
push
or
sub
or
mov
fs
ret
jne
repz
mov
add
add
mov
add
mov
dec
inc
add
or
jecxz
xchg
test
pop
je
and
add
popa
insb
icebp
cld
lahf
inc
cs
sbb
inc
ss
pop
sub
push
mov
add
nop
add
int3
js
adc
mov
add
pop
fnstsw
jo
mov
loop
mov
out
jne
inc
cmp
ja
xor
mov
icebp
rolb
daa
dec
and
pop
data16
add
test
incl
pop
xchg
sub
add
inc
or
xchg
lock
add
fisubl
inc
add
inc
fdiv
add
loope
adc
lcall
mov
loop
mov
test
fldenv
add
or
cmp
pop
mov
add
in
addb
jmp
add
mov
popf
mov
pop
stos
mov
xor
cmpl
add
and
add
add
mov
std
mov
comiss
pop
sub
pop
loope
or
mulb
add
mov
jns
sbb
push
push
scas
fisttpl
mov
loopne
mov
or
stos
cli
and
mov
add
add
pop
push
mov
and
cmp
mov
pop
xchg
add
mov
jno
ljmp
mov
outsb
pop
enter
xchg
add
add
mov
mov
add
imul
mov
add
pusha
add
stc
xchg
jecxz
add
mov
pop
or
cmp
jge
lcall
xlat
mov
jbe
rcl
dec
popa
pop
pop
je
add
in
mov
inc
and
inc
test
xchg
add
add
cld
inc
ja
out
ret
adc
lea
rorl
lret
insl
scas
into
sahf
pop
and
add
mov
add
subl
mov
mov
mov
sbb
bound
mov
cmp
es
xchg
mov
repz
mov
rolb
mov
sbb
outsb
push
int3
pop
sub
or
ret
mov
mov
stc
lret
add
mov
xor
mov
dec
test
mov
aam
lock
mov
add
push
mov
test
mov
jp
in
push
add
push
add
inc
test
add
leave
jge
fisubrs
and
mov
inc
inc
add
int3
daa
mov
add
pushf
mov
mov
pop
fucomp
mov
loope
add
inc
push
pop
shll
xchg
pop
outsb
sbb
lcall
mov
insl
notb
mov
sahf
sbb
mov
push
fisttps
cltd
addb
push
sahf
sbb
cmp
push
popa
addb
scas
js
push
fadds
add
loop
mov
fwait
dec
and
test
stos
popf
cmc
mov
aam
xchg
aas
sbb
add
popf
pop
movsb
stc
sub
dec
test
xor
mov
add
mov
outsb
outsl
lahf
icebp
in
pushf
jmp
add
sub
mov
jl
add
mov
test
xchg
pop
adc
jg
test
fwait
inc
inc
ret
sahf
xor
pop
loopne
mov
hlt
mov
roll
add
jp
or
push
xor
hlt
xchg
add
in
pop
or
gs
cmp
lods
fcompl
or
push
popa
pop
add
pop
dec
repnz
sub
jge
jns
frndint
hlt
ret
scas
in
fcoml
pop
xor
mov
mov
cmp
add
pop
mov
xchg
scas
jl
xchg
mov
cmpsb
push
add
shr
adc
mov
ds
movsb
or
or
sbb
sbb
dec
hlt
fcoml
addr16
stc
sti
das
push
mov
lret
mov
pop
and
aam
rolb
pop
imul
mov
cld
pushf
out
and
stos
sti
data16
jnp
fs
dec
adc
mov
jbe
das
es
mov
mov
push
jae
out
sub
popa
sbb
add
sbb
mov
cmpsb
push
cmpsl
add
je
inc
push
lret
sbb
inc
test
add
stos
enter
cmp
dec
pop
movsl
dec
pushf
cli
icebp
mov
mov
pop
or
push
xor
adc
add
cmp
jo
mov
scas
lahf
stos
lods
rol
jae
lea
mov
and
mov
fistl
movsl
sub
add
int
cld
es
xor
jp
adc
jb
mov
out
iret
jbe
sbb
rolb
mov
dec
or
xchg
add
into
call
mov
add
mov
cli
sti
push
lock
sbb
xchg
sub
stos
jg
rolb
mov
inc
stos
jns
and
mov
pop
cmc
push
inc
add
add
lcall
sub
mov
mov
or
fs
cmpsb
xlat
lret
pusha
add
push
push
lods
cwtl
fnstenv
add
xor
or
in
jb
mov
add
xor
jo
mov
mov
mov
dec
dec
sub
add
push
add
icebp
dec
lret
inc
cmp
jne
inc
add
stos
movsb
jp
add
icebp
cmp
jecxz
add
incb
add
cmp
lcall
int3
push
inc
out
test
adc
mov
push
stc
mov
mov
aad
pop
cltd
jecxz
iret
pop
ds
mov
or
ljmp
aam
add
add
clc
sub
outsl
sub
jb
mov
iret
push
add
mov
lahf
lahf
mov
jnp
dec
hlt
pop
test
stc
jo
mov
outsb
movsl
pop
je
dec
sub
les
or
xor
add
jbe
inc
lds
sub
mov
call
mov
mov
fdivrl
in
mov
add
adc
mov
lret
cmp
out
hlt
das
xchg
jne
pop
outsb
mov
mov
and
pop
insl
mov
out
xchg
jg
sub
ja
add
add
push
add
sub
push
into
dec
call
inc
jb
mov
idivb
jle
lock
mov
dec
mov
xchg
adc
and
add
sub
add
add
fsubr
in
daa
sahf
cli
aad
add
mov
mov
pop
mov
cmpsb
hlt
mov
cld
mov
iret
fwait
xor
mov
dec
mov
mov
mov
push
sti
lret
cmpsl
shl
movl
add
out
lret
into
xor
mov
push
rolb
mov
or
pushf
xchg
mov
mov
aas
mov
mov
stc
push
mov
testb
icebp
leave
and
cwtl
les
add
mov
mov
imul
add
mov
call
sahf
imulb
push
add
adc
fistpll
add
mov
ret
movsl
pop
je
add
int
je
xchg
leave
rolb
mov
loop
mov
add
aas
ss
pop
ja
out
mov
xchg
add
add
sar
xchg
out
mov
mov
and
mov
push
and
dec
int
push
cmp
sbb
adc
call
mov
add
cs
shr
mov
add
sub
xor
mov
xor
xor
mov
loope
jbe
in
xchg
jo
mov
add
xor
jmp
in
data16
mov
stos
cld
fisttpll
push
pop
ret
sub
daa
jle
push
push
push
inc
mov
and
fsts
imul
add
mov
xchg
add
mov
xlat
dec
loopne
mov
les
inc
add
cli
xorl
add
adc
mov
lcall
mov
pop
mov
xchg
add
mov
gs
mov
mov
mov
adc
mov
std
jge
sarl
in
and
mov
rolb
mov
mov
mov
fsubrs
lret
inc
in
inc
scas
push
cmp
sbb
test
mov
or
sub
mov
mov
cs
shl
pop
mov
xchg
xchg
cmpsb
xchg
imul
movsb
or
mov
xor
mov
jmp
cltd
cmp
push
addr16
jge
add
insl
jle
add
fsts
push
outsl
out
movsb
ret
dec
sub
add
in
test
sub
mov
bound
mov
add
xor
mov
mov
mov
shl
xchg
out
addb
push
loop
mov
mov
push
cmp
inc
sahf
inc
push
mov
out
xchg
fwait
je
and
or
jl
addb
and
mov
xchg
adc
and
inc
or
cmp
test
repz
dec
iret
or
inc
add
add
add
add
loop
mov
repz
cld
add
cmpsl
adc
add
lcall
mov
mov
mov
fidivl
add
insl
leave
je
lea
ja
mov
es
ljmp
xor
mov
add
loope
mov
push
push
add
xchg
shll
sbb
mov
add
mov
and
std
and
lcall
test
push
push
add
add
ret
ret
sbb
insl
popa
push
push
inc
bound
mov
add
xchg
cmpsb
or
mov
ss
aaa
or
cmp
cmpsl
mov
mov
adc
or
in
push
xchg
add
test
mov
and
mov
pop
xchg
jle
dec
adc
inc
mov
repnz
mov
inc
add
push
push
mov
mov
cmpsl
jmp
mov
jno
js
dec
add
sub
movsl
imull
and
or
and
adc
mov
add
mov
movl
push
enter
mov
or
mov
ja
cs
cmp
add
add
inc
add
add
mov
sti
arpl
mov
movsb
push
mov
xor
mov
add
add
out
push
mov
pop
fwait
loopne
mov
icebp
mov
mov
clc
and
sbb
add
mov
fistpl
mov
ljmp
aaa
push
rolb
out
cld
cmp
lcall
push
push
push
inc
inc
xchg
xor
mov
enter
mov
sub
mov
std
mov
xor
repz
mov
xor
mov
cmp
xchg
dec
mov
mov
add
mov
loopne
mov
inc
imul
add
ror
cs
pop
pop
sarl
push
add
das
and
add
xor
in
cld
addb
jb
mov
pop
inc
add
jne
mov
mov
dec
rcrl
jne
dec
in
or
imul
add
adc
pop
ret
xor
mov
add
stos
xor
mov
add
mov
dec
jl
jp
add
and
mov
ss
push
add
or
dec
fmuls
push
cmp
and
mov
add
inc
add
add
jle
push
je
jp
cmpsl
cwtl
add
lock
int3
inc
add
add
mov
mov
jns
xchg
add
sar
add
aas
popa
sbb
popf
fisubrs
xlat
movsb
aaa
rolb
mov
rcrl
push
mov
bound
mov
loopne
mov
add
and
ss
das
loopne
mov
daa
ret
adc
inc
sbb
mov
push
stos
dec
in
sub
or
mov
sbb
mov
mov
rolb
mov
jmp
dec
adc
mov
out
bound
mov
jl
adc
jp
xor
mov
add
stos
data16
xchg
fsubl
mov
iret
mov
mov
rolb
in
adc
lds
xor
add
jne
popa
inc
add
xor
or
cli
jb
mov
add
in
add
outsl
clc
mov
mov
adc
mov
pop
lea
mov
in
mov
ret
test
leave
loope
xchg
pop
pop
sub
add
and
mov
mov
test
xor
xor
mov
fbld
add
lahf
pop
cmpsb
or
push
xchg
mov
stc
pop
adc
mov
push
jno
add
mov
mov
cmp
shll
mov
loop
mov
loop
mov
lds
mov
lret
cli
inc
repnz
and
mov
test
add
pop
or
aam
addb
add
add
mov
or
lock
pusha
add
mov
add
mov
aas
pop
in
fsubrs
add
jb
mov
movsl
test
ja
add
shl
sbb
jbe
test
mov
mov
pop
fwait
inc
adc
mov
mov
mov
xor
mov
add
fcoms
xchg
adc
add
pop
push
add
mov
scas
lds
push
ss
in
mov
movsl
mov
mov
mov
ds
sub
adc
out
xor
iret
mov
xor
les
cmpsb
repnz
mov
push
and
mov
mov
add
cmpsb
mov
ljmp
jg
add
mov
fistpll
popa
inc
add
mov
add
mov
add
mov
rolb
mov
and
popf
jge
add
insl
subl
or
add
push
add
jp
dec
pop
fs
pop
out
je
xchg
sbb
add
movsb
push
add
xchg
in
mov
pusha
add
add
xchg
add
cli
pop
inc
add
or
and
bound
mov
add
push
add
es
pusha
add
add
xchg
sbb
cmp
pop
in
jae
je
data16
mov
lock
xor
or
mov
nop
add
pop
cmc
dec
inc
add
aam
addr16
mov
movsl
fidivs
mov
in
mov
daa
pop
xchg
add
add
cmp
mov
mov
lahf
and
dec
xchg
mov
popa
stos
test
push
mov
mov
jmp
in
mov
mov
push
dec
mov
shll
dec
add
mov
movsl
and
mov
mov
push
repnz
clc
inc
mov
fwait
and
jg
leave
hlt
pop
dec
xchg
insl
aam
stos
clc
mov
lahf
cwtl
sbb
add
xchg
movsl
pop
xchg
sub
cs
jle
jge
cmpl
mov
cmp
push
add
popf
std
lret
clc
xlat
out
outsb
sbb
in
add
inc
and
fsts
mov
cmpl
cmp
add
ja
outsl
in
jmp
idivl
jmp
push
sub
imul
sbb
add
dec
fsts
inc
xchg
outsb
add
mov
add
jmp
add
add
dec
and
cmp
pop
xchg
gs
push
lret
fs
xlat
push
std
pop
in
inc
fwait
push
push
sub
pop
in
add
sub
mov
outsb
and
or
pop
daa
aam
sub
in
dec
sbb
and
mov
cmp
mov
lock
add
dec
loop
mov
add
enter
jle
inc
push
inc
mov
xor
ljmp
pop
stos
mov
into
mov
arpl
jg
xchg
pop
sbb
cli
mov
addb
lret
add
inc
cmpsl
adc
add
jecxz
aam
add
in
cmp
pusha
add
mov
cltd
sti
jae
stc
dec
mov
mov
insb
mov
inc
xchg
add
mov
add
pushf
aaa
test
test
stos
imul
sub
adc
es
dec
das
or
mov
ljmp
xchg
add
divl
mov
push
pop
pop
mov
mov
xor
mov
xor
mov
dec
addr16
je
cmp
add
push
add
push
and
mov
fwait
stos
cmp
add
cmp
popf
adc
mov
inc
mov
jecxz
add
add
xchg
add
mov
iret
es
pop
sahf
inc
in
pop
dec
test
insl
jae
mov
hlt
lcall
add
mov
loop
mov
mov
adc
imul
and
add
psubsb
mov
mov
das
jns
xor
mov
out
push
pushf
sbb
add
pop
stc
and
ss
mov
adc
cmp
mov
mov
inc
jge
fisubrl
adc
fwait
movsl
sbb
cmc
arpl
add
cmp
ljmp
add
or
push
adc
add
add
mov
push
call
cli
jns
lods
sub
clc
sbb
jg
mov
leave
mov
insl
repnz
sbb
add
push
add
add
mov
mov
adc
add
int3
stc
add
inc
push
add
lahf
adc
mov
xchg
inc
mov
mov
push
popf
mov
pop
int3
jns
add
mov
add
sub
add
arpl
push
out
pop
xor
dec
lods
jb
mov
xchg
inc
les
mov
jb
mov
movsb
orl
xchg
stc
adc
stos
add
rcr
inc
or
roll
leave
addb
movsl
inc
movsb
movsl
scas
rcrl
mov
imul
and
add
xchg
roll
add
stos
push
hlt
mov
rolb
mov
or
add
add
in
add
and
mov
testl
int
add
mov
sub
lds
icebp
add
xchg
cli
fldl
dec
xor
mov
dec
repz
icebp
sub
add
mov
jno
mull
add
pop
popa
or
aad
fadds
adc
jne
addb
and
mov
jmp
add
mov
out
xchg
add
mov
cmp
add
iret
movsl
push
loopne
mov
sub
scas
aaa
fs
imul
into
ret
dec
es
pop
bound
mov
aam
decl
pop
out
popf
hlt
push
fsts
xor
mov
mov
jo
mov
dec
mov
xchg
xor
mov
test
xchg
add
inc
fbld
ss
rolb
mov
movsb
or
inc
lods
cld
stos
add
aaa
add
mov
mov
test
push
add
pusha
add
inc
add
iret
push
lcall
mov
xor
mov
mov
add
out
mov
mov
add
mov
add
add
jmp
popf
dec
loop
mov
add
je
cmp
mov
iret
push
into
rolb
mov
add
adc
mov
out
sub
loopne
mov
idiv
push
add
mov
mov
aam
daa
inc
sar
sahf
and
mov
cmp
or
lahf
outsb
adc
mov
aam
lea
add
push
in
dec
xlat
ret
popf
test
and
add
jl
push
clc
jae
ljmp
xchg
add
mov
mov
stc
pop
cmp
inc
add
sub
loope
sti
ret
idivl
mov
dec
fabs
fld
sbb
jecxz
dec
das
xchg
add
add
roll
or
jp
push
adc
out
call
std
leave
ret
rolb
mov
aaa
jb
mov
dec
aam
add
mov
dec
adc
add
add
mov
fdivs
mov
mov
mov
adc
mov
mov
hlt
push
xor
mov
pop
lcall
mov
ret
pop
popf
aas
pop
or
test
mov
mov
ret
sub
mov
and
mov
cmp
xchg
int
xor
les
loop
mov
cmp
es
xlat
xchg
inc
sbb
add
loope
and
jne
push
xchg
or
add
adc
sub
pop
icebp
cmp
add
mov
fistl
jecxz
adc
mov
mov
add
mov
add
add
mov
test
add
inc
add
push
cli
xor
add
push
add
jl
xor
popa
cmp
cld
jo
mov
out
mov
pop
inc
fs
add
jecxz
add
add
add
in
mov
add
adc
mov
rolb
mov
ljmpw
gs
push
inc
or
pop
loope
bound
mov
inc
add
add
mov
lret
in
xchg
or
add
ljmp
mov
pop
daa
cwtl
insb
add
mov
sti
mov
xor
push
fsubrl
mov
lcall
and
jle
orl
add
add
ret
cmc
xchg
inc
add
xchg
xchg
loop
mov
add
js
push
xchg
xor
mov
xor
jmp
push
sbb
or
cs
je
add
mov
ja
add
lds
test
add
sub
mov
ret
xor
mov
xchg
and
mov
mov
mov
bound
mov
add
xchg
add
cli
jne
inc
add
push
faddp
sub
mov
add
mov
mov
inc
fadds
loop
mov
xchg
int
cwtl
jne
pop
nop
add
push
mov
and
shrl
cltd
into
lret
rcl
pop
dec
pop
or
loope
aaa
mov
imulb
insl
or
test
cmc
push
fst
out
mov
add
addb
fstps
scas
sub
aaa
js
sbb
fistl
sahf
dec
xor
mov
xor
mov
add
clc
test
cwtl
fwait
inc
add
jle
out
xor
mov
and
mov
scas
icebp
popf
popf
fadds
xchg
es
add
mov
loop
mov
sbb
test
jno
outsl
push
movsb
mov
mov
mov
add
add
insb
dec
loop
mov
call
dec
outsl
mov
lock
scas
push
jecxz
push
mov
or
push
add
mov
xor
popa
mov
adc
cmc
icebp
sahf
js
mov
pop
mov
rolb
mov
int3
push
es
jns
and
pop
mov
incb
add
popf
dec
push
je
adc
pop
dec
inc
pop
inc
push
add
add
in
sub
rolb
mov
pop
int
inc
add
pop
push
adc
rcll
sub
ja
add
inc
inc
scas
jno
sbb
and
cli
mov
lcall
mov
int3
sbb
pop
lods
loope
mov
gs
mov
and
mov
mov
sub
mov
cmpsb
jns
add
hlt
jne
mov
dec
movsb
xchg
jecxz
aaa
jnp
jmp
mov
icebp
in
pop
jbe
adc
inc
mov
mov
mov
mov
or
mov
rol
cltd
inc
or
add
jb
mov
out
jle
int3
icebp
cld
cmp
lahf
push
loope
adc
cmpsl
scas
lods
ljmp
pop
or
jg
push
jl
nop
add
lods
movsb
xchg
cmp
add
and
pop
cmp
int
add
mov
mov
push
loop
mov
inc
add
std
mov
int3
inc
add
hlt
pop
cmp
add
xor
mov
add
or
add
fisttps
add
andl
push
rolb
mov
lret
xchg
dec
sbb
add
mov
push
add
and
add
mov
sub
add
jmp
adc
mov
sar
jno
xchg
pop
leave
test
sbb
add
aas
iret
in
sbb
add
mov
jp
xchg
or
jmp
fwait
scas
dec
addb
mov
mov
sbb
push
xchg
lock
pushf
test
mov
xchg
push
adc
insb
pop
sbb
sbb
xor
sub
add
data16
les
inc
add
add
loop
mov
pop
xor
mov
inc
add
mov
sub
jne
mov
push
adc
mov
hlt
jecxz
call
in
dec
pop
ret
and
popa
cmc
pushl
add
mov
cli
movsl
test
mov
mov
testl
add
pushf
daa
dec
add
mov
stc
dec
jg
mov
sub
add
add
out
sub
mov
add
mov
cmp
sti
movsb
mov
mov
adc
mov
mov
mov
mov
mov
xchg
rolb
mov
jp
jbe
add
and
mov
ret
lret
xlat
dec
aam
fwait
int
push
and
jno
aaa
push
test
cmc
pusha
add
inc
add
movsl
sub
movsb
lods
gs
je
add
pusha
add
add
out
xchg
loope
jns
push
sbb
je
jo
mov
bound
mov
add
inc
loopne
mov
mov
ss
mov
gs
push
lcall
in
fimull
stos
ja
movsb
xchg
sbb
outsb
hlt
inc
mov
scas
scas
movsb
dec
loope
call
mov
nop
add
inc
sub
cmp
data16
adc
dec
xlat
pop
data16
orl
ret
popf
clc
loopne
mov
and
call
mov
jp
sbb
mov
rolb
lods
dec
dec
pop
ljmp
xlat
imull
add
mov
aad
xor
or
xchg
fnstenv
sbb
lret
lret
in
mov
add
jnp
add
mov
imul
dec
scas
sbb
mov
add
mov
add
repz
mov
mov
jnp
ja
sbb
aad
leave
rorl
pop
shll
mov
add
mov
xlat
and
mov
pop
jecxz
aas
ds
xchg
aad
xchg
inc
add
mov
cmp
iret
ja
aad
mov
les
add
adc
add
pop
mov
mov
lock
mov
sub
xchg
addb
jbe
or
and
or
or
testl
aam
xchg
cltd
cmpsb
test
ljmp
rolb
mov
rolb
fdivr
mov
pop
sbb
lret
or
addb
cmpsl
and
push
pushf
xor
and
push
dec
sbb
jmp
push
and
mov
mov
stos
fstl
add
pop
xor
dec
sbb
add
mov
aad
cmp
add
pop
xchg
sahf
push
icebp
outsb
dec
push
push
jbe
add
adc
mov
and
add
xchg
fdivl
jno
out
pusha
add
jmp
ret
mov
add
add
rolb
mov
pop
or
fsubr
sbb
addr16
or
pop
out
imul
jno
filds
and
dec
xchg
push
add
jg
test
stc
enter
push
subl
bound
mov
out
xchg
cmpsl
hlt
push
fwait
arpl
mov
rolb
mov
dec
push
notl
add
dec
loope
adc
pop
mov
jne
add
push
cli
insb
pop
mov
int3
je
mul
jae
arpl
mov
out
cmp
add
and
lods
or
cli
or
mov
imul
mov
mov
mov
mov
sub
dec
add
aas
add
mov
jmp
and
adc
add
add
mov
rolb
jbe
addb
push
sbb
xor
sub
jnp
add
pop
and
call
push
fsubrl
mov
pop
cltd
addb
inc
push
and
mov
cmc
hlt
je
popa
xlat
push
inc
frstor
jne
pusha
add
jp
push
mov
or
movsb
into
jge
pop
jbe
notb
pop
mov
in
mov
aad
cmp
dec
inc
ret
or
jecxz
add
push
lahf
cmp
mov
push
xor
mov
xlat
jnp
dec
test
xchg
repz
cmp
outsb
dec
scas
sub
mov
mov
mov
out
push
xchg
add
sub
into
pusha
add
cmpsb
adc
aaa
imul
test
popa
mov
addb
cmp
popf
sbb
idiv
aaa
and
mov
lods
jne
out
jnp
fwait
aas
sub
sub
sub
sub
shll
mov
mov
sub
jbe
sbb
out
sti
fs
lock
rolb
mov
cmp
mov
mov
jns
dec
and
mov
mov
stos
sub
aas
xor
add
mov
unpckhps
or
cmp
testl
add
mov
out
mov
add
test
add
mov
push
cmp
imul
sub
and
cli
push
add
lret
sub
cmc
cmpsl
push
xor
add
add
je
jb
mov
xor
mov
add
shr
add
test
xor
iret
lock
jmp
pop
adc
or
xchg
test
xchg
mov
fwait
addb
inc
lock
add
iret
sbb
adc
mov
notl
sbb
lcall
cmp
dec
adc
mov
imul
je
inc
add
jmp
adc
lret
cltd
sub
pop
stos
sbb
mov
add
hlt
cmp
adc
rolb
mov
int3
sar
rcll
mov
pop
cmp
inc
or
jns
negl
stos
xchg
aas
push
stc
mov
mov
sbb
pop
or
and
mul
je
mov
lods
int
addb
jo
mov
icebp
sbb
mov
lods
aad
lret
rcll
mov
sub
add
add
mov
pushf
add
mov
sub
mov
xchg
jg
push
fstps
mov
add
imul
movsl
and
cmp
mov
inc
push
stos
shl
fldenv
inc
sub
or
notb
cmp
pop
xchg
add
fnstsw
rolb
mov
mov
inc
add
loope
int
loope
add
insl
jmp
jecxz
xchg
add
aad
fldenv
xchg
ljmp
xor
add
sub
inc
cmp
in
orl
scas
lock
add
sbb
mov
stos
push
daa
add
lods
add
inc
addb
inc
out
cltd
sub
pop
stc
jne
add
mov
mov
dec
cmp
add
mov
cmpsb
aaa
push
sub
stos
jge
popf
cpuid
add
cmpsb
test
mov
cmpsb
xor
mov
push
xchg
iret
push
cmp
jl
idiv
mov
xchg
outsb
jecxz
sahf
add
sub
xor
mov
jb
mov
aaa
fnstcw
mov
dec
insl
cmp
mov
add
mov
pop
mov
push
es
mov
add
push
pop
lods
out
mov
pop
and
mov
mov
sbb
mov
or
and
push
add
sarl
pushf
ds
sbb
mov
mov
sub
cwtl
adc
mov
add
add
fstpt
push
add
jb
mov
add
dec
stc
arpl
ret
push
jmp
add
mov
fs
mov
add
notb
add
pushf
hlt
mov
add
add
dec
and
xor
or
jns
rolb
rolb
mov
jg
test
in
fstpl
je
ret
push
std
xchg
push
loop
mov
insb
inc
imulb
out
adcl
push
mov
xchg
roll
out
add
fistpl
mov
cmp
les
sbb
sub
sub
cmp
lock
push
das
dec
icebp
inc
add
out
sbb
add
jo
mov
mov
mov
add
mov
dec
out
mov
mov
add
mov
push
add
decb
mov
add
mov
mov
sub
dec
add
mov
es
add
ret
pop
out
mov
add
js
push
out
inc
jbe
inc
dec
adc
negl
xlat
insl
add
ds
movsl
push
mov
idiv
andl
add
xor
repnz
jo
mov
mov
cmp
ljmp
cmpsl
push
mov
pop
sbb
rolb
mov
in
push
xchg
push
add
xchg
les
sub
jmp
pop
pop
xor
mov
mov
ss
inc
xchg
repnz
push
jg
add
adc
mov
out
adc
mov
mull
js
fwait
shr
gs
fistps
mov
push
shld
inc
cs
sub
push
adc
mov
pop
cld
repnz
xchg
add
mov
pop
lods
test
xor
add
aad
mov
push
out
push
adc
andl
stos
dec
arpl
add
inc
ret
mov
add
or
lds
scas
cmpsl
cmp
cmpsl
fdivrl
scas
sub
pop
ds
aam
out
add
dec
arpl
in
sti
divb
push
mov
add
jle
jg
addb
daa
dec
fneni(8087
add
aam
push
add
dec
push
add
xor
mov
aaa
push
js
addb
jo
mov
jge
rolb
mov
and
mov
pop
pop
sub
arpl
shll
add
xchg
ret
push
inc
add
repz
test
cmpsb
push
stos
data16
adc
mov
xchg
inc
add
pop
subl
lahf
movsl
arpl
jge
fistpl
ret
or
push
aaa
xor
mov
add
mov
dec
ret
jnp
add
clc
mov
movsb
stos
xor
add
sub
add
pop
loopne
mov
jp
lods
scas
or
add
icebp
xchg
inc
sbb
dec
or
data16
add
xor
add
add
aam
mov
add
mov
out
sti
outsb
scas
sbb
aad
out
sbb
mov
and
mov
push
mov
jo
mov
lret
int
dec
cmp
adc
mov
cmp
jge
fcoms
jmp
sub
aaa
xchg
loop
mov
add
out
and
mov
mov
xchg
xlat
jp
fstp
mov
adc
xchg
xor
mov
add
add
push
testl
mov
dec
mov
push
pop
dec
imulb
adc
mov
movsl
andl
mov
ror
adc
in
mov
xor
cmp
mov
ds
xchg
popa
or
add
in
and
mov
lahf
sahf
or
add
jge
jp
xor
add
adc
mov
push
stos
push
fisubrl
jns
sub
add
mov
sbb
lcall
dec
fnstsw
mov
adc
mov
cmp
arpl
in
push
lds
inc
xor
mov
mov
fistl
jne
sbb
add
in
nop
add
ftst
bound
mov
add
pop
push
fs
mov
xor
mov
sub
arpl
lahf
lret
and
mov
mov
cmpsb
push
inc
add
xchg
inc
add
iret
js
pop
repz
add
push
out
int3
inc
add
xor
jno
mov
clc
lea
dec
fadds
loope
lods
add
xor
std
ror
jb
mov
lret
dec
adc
pop
es
mov
cmp
sub
adc
cmp
add
jmp
push
pushf
dec
sbb
add
add
lahf
out
mov
xor
jmp
xor
mov
out
mov
pop
hlt
pop
add
add
adc
popf
mov
clc
movsl
out
mov
add
out
jno
cli
cmp
and
in
xor
mov
pusha
add
add
mov
out
hlt
stc
pop
test
repz
add
mov
mov
fisttpll
inc
rolb
mov
add
mov
mov
lods
sbb
add
out
repnz
mov
fs
leave
dec
lret
sub
xchg
add
or
roll
add
xchg
dec
sti
out
and
pop
mov
dec
jmp
scas
inc
in
dec
or
xchg
xor
add
and
mov
jae
mov
mov
jo
mov
push
pop
add
mov
mov
mov
mov
add
jecxz
cmp
mov
push
loope
pop
add
inc
fbld
add
add
adc
loope
jb
mov
add
roll
pop
in
jmp
push
outsl
popf
jno
lods
gs
mov
add
pop
lods
inc
inc
mov
lods
sub
jns
xor
xchg
fwait
scas
cmpsl
das
mov
mov
clc
mov
or
sbb
mov
jns
add
hlt
popf
inc
push
push
loopne
mov
sub
mov
xor
mov
fdivrp
add
mov
or
in
jg
lea
pop
xor
inc
lods
push
push
adc
xchg
arpl
xor
jo
mov
sub
test
mov
mov
insl
hlt
and
mov
pop
mov
stos
insl
icebp
rolb
jge
mov
xchg
mov
adc
mov
nop
add
add
mov
sub
push
adc
mov
es
fisttps
inc
push
add
clc
xchg
lahf
cmp
mov
jle
rorl
pop
outsl
adc
add
add
adc
and
icebp
pop
cmp
push
xchg
xlat
data16
call
pop
lods
enter
sub
pop
and
mov
add
fucomi
fwait
add
sbb
mov
jge
fildll
sbb
push
mov
xor
xchg
inc
dec
loopne
mov
jg
mov
hlt
test
pop
rolb
pop
push
ret
sbb
aas
divl
cmp
push
inc
add
lock
mov
mov
cmp
inc
das
pop
int
rolb
mov
add
pop
xor
mov
bound
mov
add
scas
sub
pushf
cltd
pop
aam
dec
lds
add
arpl
mov
cmp
addb
mov
or
add
addb
pop
or
aad
test
and
xor
mov
xchg
push
add
ss
add
mov
fimull
std
sbb
cld
jno
outsl
mov
inc
sub
pop
std
pusha
add
les
add
jo
mov
pop
cmpsl
mov
add
and
scas
or
into
sbb
aad
rcrl
fwait
jne
pusha
add
sub
mov
fs
aad
fs
lahf
push
bound
mov
ffreep
add
fsubs
repnz
inc
add
adc
mov
push
mov
add
adc
mov
inc
push
insb
push
add
lcall
push
and
mov
push
test
add
mov
add
push
cmp
mov
in
fcmovu
sub
lods
mov
or
aam
aad
icebp
add
mov
mov
fistpl
sub
inc
loope
aaa
ja
mov
jnp
ret
xor
add
fstp
dec
cmpsb
jge,pt
mov
jp
jb
mov
dec
mov
aam
addb
std
lods
push
cld
hlt
adc
mov
add
ljmp
add
icebp
push
add
jle
gs
jne
rolb
mov
fcom
mov
and
mov
aaa
sub
mov
jge
cld
and
add
inc
pop
and
sbb
pop
xlat
inc
cmpsb
xchg
leave
lods
rcrl
lahf
sub
mov
pop
scas
mov
add
stc
mov
xchg
ljmp
cs
mov
push
daa
dec
or
push
pop
inc
loopne
mov
lret
sar
pop
add
add
pop
pop
cmp
dec
sub
dec
ja
stos
sub
mov
add
mov
sbb
lock
dec
out
jo
mov
repz
cmp
xlat
dec
movsl
inc
inc
add
fstpl
and
jae
mov
int3
inc
add
add
mov
push
adc
add
cmp
jae
cmp
sbb
add
mov
mov
add
inc
add
and
aaa
in
repz
loopne
mov
dec
xchg
xor
mov
mov
cltd
dec
fdivr
mov
dec
addr16
dec
inc
subl
add
fisubs
mov
push
mov
and
xchg
add
scas
dec
and
mov
add
xor
adc
push
adc
add
xchg
add
sbb
int3
jge
dec
add
xor
repz
cmpsb
repz
mov
inc
stos
jecxz
adc
ret
pushf
outsl
adc
mov
sub
mov
mov
add
and
mov
mov
mov
jmp
mov
test
inc
mov
fmul
xchg
add
aad
aad
stos
cs
inc
push
hlt
popf
xchg
nop
add
push
es
stos
xchg
repz
add
mov
cmpsb
out
add
nop
add
add
lret
lds
add
push
addb
and
pop
ss
ss
stc
fs
repnz
fsubs
pop
xchg
jne
hlt
jns
incl
mov
addr16
clc
and
inc
push
sbb
xor
movsb
pushf
fninit
mov
mov
add
cmpsl
add
mov
sti
cli
insb
jl
add
mov
sub
mov
add
negl
int3
adc
add
cs
xor
xchg
mov
cmp
add
push
and
mov
repnz
call
jg
orl
gs
inc
fmul
lock
rolb
mov
xor
mov
test
jl
add
inc
add
sub
add
mov
cs
in
dec
mov
xchg
or
pop
out
pushf
cli
in
push
out
hlt
jns
test
add
jecxz
mov
mov
inc
xor
je
mov
enter
xchg
mov
int3
fs
loope
mov
xor
sbb
push
pop
test
jge
adc
cltd
mov
add
int3
push
mov
add
or
shl
loope
mov
add
mov
sahf
mov
mov
jle
movsl
jg
out
insl
arpl
add
rolb
mov
add
inc
add
push
dec
les
jl
jbe
repnz
pop
xlat
jl
add
push
mov
add
fucomi
fdivrp
roll
cmpsl
clc
pop
push
mov
add
iret
idiv
or
cmp
adc
mov
fucom
repz
mov
jmp
xchg
scas
jle
xor
mov
add
stos
xchg
push
sub
pop
mov
add
bound
mov
lea
mov
cmovs
hlt
lods
mov
rolb
mov
mov
pop
test
and
mov
mov
rcpps
adc
aaa
sahf
inc
add
stos
jecxz
xor
mov
adc
add
movsl
xchg
popf
es
lcall
out
mov
add
cmpsl
sbb
aaa
pusha
add
xchg
mov
std
aaa
add
mov
jns
mov
pop
adc
mov
mov
mov
cli
shll
jg
hlt
mov
dec
xchg
repz
pop
push
pop
in
pop
bound
mov
mov
mov
rolb
mov
or
add
ret
inc
add
add
mov
xor
xchg
push
jmp
call
add
das
jns
call
add
mov
add
cwtl
sbb
icebp
mov
mov
imul
dec
or
add
popa
mov
imul
sub
mov
xor
mov
mov
rolb
mov
dec
mov
sbb
pop
inc
jmp
and
mov
lret
pop
sti
sbb
pusha
add
mov
les
insb
ja
ret
sahf
adc
xor
fsub
aaa
negl
pop
xchg
nop
add
es
add
jmp
mov
ss
mov
ss
popf
xchg
dec
negb
mov
repz
add
sbb
lds
mov
xorl
mov
out
add
test
mov
dec
push
ljmp
mov
addb
jae
mov
jno
pop
add
lret
cmpsb
ret
insl
pop
and
add
sbb
mov
out
jnp
adc
int
add
or
dec
push
hlt
loopne
mov
sahf
push
pop
xchg
dec
mov
pop
adc
or
lds
push
sti
in
add
pop
push
mov
jge
push
xchg
xchg
cmp
pusha
add
pop
aaa
cmp
decl
mov
push
pop
dec
push
xor
das
dec
and
mov
sub
pop
or
mov
add
adc
inc
mov
push
in
aad
mov
add
xor
scas
rdmsr
add
xchg
mull
add
add
mov
add
je
dec
fs
inc
jp
sar
sub
xlat
cmp
push
pop
xor
ret
mov
dec
sbb
mov
cmp
add
pop
lcall
dec
mov
cmc
jmp
loopne
mov
add
outsl
pop
ds
pop
mov
sbb
xchg
movl
mov
mov
xchg
out
mov
cmp
cmc
pop
lock
in
arpl
repnz
mov
add
mov
sbb
and
sbb
xchg
add
loop
mov
repz
mov
mov
int3
dec
das
inc
int3
cmp
aas
mov
add
hlt
leave
or
jo
mov
iret
mov
jp
mov
popa
mov
in
push
add
inc
add
lods
or
adc
pop
dec
repnz
rolb
mov
jbe
push
test
nop
add
sub
mov
add
jns
push
mov
sti
inc
sub
add
iret
push
sub
add
adc
push
scas
stos
enter
add
jl
inc
dec
stos
mov
add
pop
cld
daa
test
lea
stos
insl
add
mov
inc
mov
jmp
xor
mov
adc
mov
push
pushf
xchg
scas
pop
lret
bound
mov
mov
in
push
dec
test
cmpsb
mov
sbb
jae
adc
cmp
xor
mov
add
dec
jns
jg
shll
mov
cmpsl
cmc
aas
sti
mov
stos
enter
and
pop
inc
mov
jg
loop
mov
out
mov
mov
das
imul
mov
test
fs
or
testl
lods
rolb
mov
add
and
mov
and
mov
inc
sub
movsl
pop
push
add
mov
js
xchg
xor
add
sub
out
pop
imul
sub
movsb
pop
dec
cli
sub
mov
frstor
fisubrl
insb
leave
test
add
mov
add
insl
adc
adc
mov
adc
mov
ds
cli
mov
mov
sub
sub
cltd
push
add
pop
adc
mov
aaa
cld
ss
mov
in
aaa
lea
sbb
mov
inc
jns
push
addr16
aaa
aad
es
inc
xchg
popa
dec
leave
cmp
add
inc
ffreep
add
in
movb
insl
addb
cltd
mov
mov
mov
rcll
out
int3
fadd
iret
arpl
and
mov
test
add
mov
aad
cltd
add
pop
sti
or
in
clc
mov
mov
add
mov
cmpsb
enter
outsb
xchg
test
cmp
ficomps
ds
add
in
jmp
dec
nop
add
jb
mov
adc
pop
xor
mov
clc
mov
xchg
iret
jns
and
mov
cmp
xchg
jno
push
pop
stos
pop
mov
inc
add
icebp
inc
rolb
mov
jecxz
or
add
add
hlt
sub
or
push
xor
add
mov
insb
ja
lods
adc
lret
xor
mov
int
push
test
add
add
leave
cmp
mov
popf
dec
sti
aaa
or
fcomps
inc
mov
add
fcmovb
and
mov
mov
rolb
mov
mov
lods
xchg
leave
pop
pusha
add
cli
inc
push
pop
int3
pop
sti
mov
add
dec
pushf
or
inc
cmp
jae
call
jo
mov
or
out
ret
movsl
push
loope
call
mov
add
mov
mov
sub
add
and
push
jmp
cmp
xor
mov
setg
daa
mov
and
aam
jne
xchg
add
mov
cmp
add
pop
ljmp
add
ret
mov
sub
add
testl
fisttpll
xchg
adc
mov
aam
mov
fadd
fadds
pop
mov
xor
dec
hlt
mov
inc
mov
mov
add
sbb
lods
cmpsb
dec
cmp
sub
bound
mov
lea
push
out
jge
add
cltd
pop
push
dec
inc
add
arpl
push
add
cmp
cmp
lds
and
mov
push
pop
sub
jp
xchg
add
js
in
mov
aad
xor
mov
add
add
jmp
cmpsl
sbb
mov
lahf
push
jecxz
pop
ds
and
stos
scas
jne
fwait
push
mov
mov
daa
bound
mov
inc
or
mov
and
mov
push
loopne
mov
mov
add
xor
mulb
add
hlt
pusha
add
call
add
insl
out
and
mov
adc
mov
mov
jb
mov
xchg
ss
mov
enter
mov
mov
inc
add
add
jmp
add
push
add
add
fwait
mov
rolb
mov
add
or
add
clc
mov
mov
lds
push
pop
push
xchg
fwait
xor
mov
pop
push
in
repz
jg
test
or
mov
out
movb
cmp
ja
jecxz
sub
add
mov
fdivrs
mov
mov
insb
repz
test
cmp
rolb
imul
dec
int
stos
loopne
mov
hlt
mov
in
gs
mov
push
mov
add
cld
pushf
mov
jnp
sti
test
xchg
xchg
fiaddl
add
sbb
push
dec
pop
sbb
sbb
out
mov
lahf
push
xor
mov
rcrl
add
inc
add
repz
add
sub
push
pop
xor
mov
sbb
add
mov
lods
xor
push
test
dec
and
clc
push
xchg
mov
push
rolb
mov
add
pop
jge
cmc
stc
popf
ret
fs
add
inc
add
push
popf
push
push
cltd
rol
out
aad
push
xchg
fcmovnb
mov
or
stc
cmp
ljmp
mov
mov
add
add
out
dec
out
inc
addb
mov
mov
in
mov
mov
cmpsb
rolb
jmp
outsb
int
sub
aad
mov
and
mov
xor
jmp
int
or
mov
add
mov
push
xchg
loope
popa
imul
psubusw
fs
mov
aam
sahf
cwtl
mov
add
lods
lock
mov
or
jp
add
pushf
sub
andl
add
out
ret
lret
je
dec
mov
cmp
mov
cld
jb
mov
xchg
ret
pop
inc
sbb
inc
add
ja
dec
leave
add
mov
push
test
push
nop
add
add
cmp
cmp
in
je
les
jmp
add
mov
mov
addb
mov
dec
cld
loop
mov
das
cmp
mov
pop
jle
add
ljmp
add
mov
sub
gs
hlt
jmp
add
mov
mov
into
test
in
dec
loopne
mov
jb
mov
repnz
push
imul
xor
mov
add
addb
test
push
iret
in
aaa
sub
sub
or
add
cmpsb
or
inc
notl
hlt
or
add
adc
mov
mov
int3
aas
add
out
rcl
lahf
fidivrs
mov
int3
sbb
jg
mov
pusha
add
cmp
push
repz
addb
ja
inc
mov
mov
add
sbb
out
scas
loopne
mov
add
call
cs
data16
add
pushf
adc
adc
pop
dec
in
sub
movsl
push
add
sub
adc
mov
mov
add
mov
addb
dec
jnp
jg
movsl
inc
mov
add
and
mov
ret
popf
scas
sub
mov
pop
xor
insb
movl
cltd
test
fwait
jg
in
stos
cmp
push
sub
xchg
adcl
add
fdivrs
loope
push
add
bound
mov
add
xor
pusha
add
addb
ret
push
lods
sub
mov
ljmp
add
pusha
add
icebp
pop
lahf
cmp
cmp
fldenv
push
fstl
inc
add
out
inc
addb
cwtl
jae
jo
mov
add
mov
inc
add
xchg
movsl
fnstsw
lahf
push
insl
adc
sub
popf
lea
mov
adc
mov
and
mov
add
je
push
cmpsl
out
sahf
ja
or
pop
pop
xor
sub
mov
jo
mov
imul
lods
pop
push
pop
xchg
scas
push
popf
mov
fdivs
mov
add
adc
mov
stos
xor
insb
and
mov
add
pushf
jnp
cmp
mov
add
jnp
in
adc
leave
push
das
and
mov
mov
mov
test
faddl
lcall
mov
inc
std
mov
jae
int3
sbb
pop
or
mov
popw
add
lret
xchg
xchg
add
adc
and
xor
mov
int3
notl
sbb
lods
jbe
into
loopne
mov
sarl
sub
shl
pop
dec
jbe
add
fildll
mov
push
mov
cli
bound
mov
inc
add
push
imul
or
add
add
stos
scas
mov
iret
sbb
pop
sahf
loope
xchg
mov
out
je
dec
pushf
sub
dec
ret
pop
lret
add
scas
mov
gs
jp
insl
das
sbb
add
mov
or
adc
add
pop
xchg
ds
add
mov
stos
jl
add
mov
jg
jmp
push
inc
add
mov
mov
lcall
cs
enter
xor
mov
hlt
lahf
rolb
pushf
mov
sbb
rorl
out
inc
add
add
hlt
dec
cmp
mov
repz
xchg
mov
rcrl
or
mov
push
in
jno
jno
fcompl
roll
out
xchg
adc
add
in
fsubrp
cmp
add
test
adc
jge
pop
or
mov
pushf
push
mov
mov
addb
push
add
cmp
sub
mov
sub
arpl
stos
gs
push
repz
insl
push
repz
scas
add
out
add
mov
xchg
mov
add
rol
dec
cwtl
les
add
cmpsl
fucomi
or
ret
push
test
xor
lds
ja
and
mov
add
nop
add
add
rolb
mov
adc
jne
add
mov
add
jnp
jno
cmp
add
mov
mov
jecxz
leave
hlt
jg
add
stc
mov
mov
out
jle
rolb
mov
jmp
gs
mov
in
inc
test
arpl
jmp
sub
mov
xchg
add
push
lcall
sbb
idivb
add
or
popa
adc
outsl
mov
add
mov
icebp
jmp
mov
inc
add
icebp
test
and
mov
push
and
mov
gs
mov
sbb
scas
mov
jns
in
fdivrs
out
jae
insb
sbb
dec
int
pop
aaa
aaa
or
filds
add
notl
mov
and
sarl
add
inc
stos
aas
fldl
clc
out
popa
rorl
icebp
inc
add
push
out
inc
out
push
add
mov
jb
mov
loope
dec
scas
sbb
mov
add
outsl
test
popf
in
jb
mov
adc
cmp
aam
incl
and
mov
enter
out
jno
adc
lock
pop
leave
mov
ds
add
movsb
shl
data16
pushf
lret
xchg
mov
xchg
sbb
out
pop
cmp
or
loop
mov
xor
and
sbb
add
sahf
inc
add
insb
push
out
imul
pop
cmp
or
add
xor
notl
pushf
xor
mov
pop
jg
add
lcall
push
arpl
sub
add
dec
cmp
mov
int
xor
push
xchg
iret
test
add
addr16
pushf
or
es
fcoms
fmulp
addr16
bound
mov
loopne
mov
mov
add
adc
mov
add
ds
lods
mov
mov
insl
inc
add
add
xchg
popf
pop
out
sub
test
popa
dec
dec
mov
xchg
cmp
cs
dec
push
add
out
or
xor
addb
out
sbb
add
mov
mov
dec
rcll
movl
mov
jbe
push
and
test
scas
inc
add
sub
cltd
push
cmc
mov
add
mov
and
mov
add
add
test
sbb
lret
sti
xchg
loopne
mov
lcall
inc
mov
popf
imul
test
xchg
mov
cmp
or
jp
pop
cwtl
inc
add
mov
mov
jl
jl
and
push
add
mov
xchg
adc
add
popf
push
add
add
add
dec
rolb
mov
add
and
mov
add
in
adc
xchg
xchg
mov
push
pop
js
add
adc
fnsave
or
cwtl
xchg
lods
adc
stos
xor
mov
mov
xor
mov
shll
not
cli
mov
and
mov
add
dec
movsl
ret
ljmp
int3
and
mov
mov
push
stos
push
adc
mov
or
dec
mov
mov
rolb
mov
dec
inc
add
or
mov
imul
push
add
sbb
add
mov
pop
xor
fs
mov
nop
add
ja
add
pop
jp
add
stos
sahf
jle
fwait
mov
add
add
jl
or
jmp
mov
clc
inc
push
dec
jb
mov
pusha
add
mov
fisttpll
add
add
sahf
out
mov
rolb
mov
mov
pop
xor
add
mov
sub
fisttpll
mov
pop
cltd
faddl
xchg
call
rolb
mov
mov
inc
add
mov
sbb
out
adc
mov
xor
sbb
xchg
mov
cli
inc
pop
push
add
jmp
pusha
add
push
add
adc
or
and
inc
add
cmp
add
inc
add
cmpl
mov
push
pop
add
mov
mov
add
aam
lcall
push
pop
adc
adc
pop
in
push
sti
mov
test
scas
jne
in
loop
mov
mov
test
add
repz
jb
mov
mov
lahf
aam
into
addr16
cmpsb
out
out
mov
dec
mov
sti
xchg
add
mov
scas
mov
fstpl
sbb
add
cmpsb
daa
or
dec
rolb
mov
pop
jno
daa
pop
loope
adc
push
inc
add
bound
mov
je
and
mov
inc
add
fwait
pushf
enter
push
mov
mov
add
enter
test
stos
in
add
mov
ret
in
loop
mov
mov
cli
aaa
mov
add
dec
test
test
clc
bound
mov
ljmp
scas
xchg
add
loop
mov
cs
cmp
dec
push
out
xor
mov
mov
iret
push
lods
test
cli
adc
mov
iret
add
mov
inc
mov
pop
sub
inc
sbb
es
out
jne
cli
das
stc
dec
enter
outsb
xchg
sub
dec
mov
add
sub
mov
out
add
mov
pop
idiv
rcr
sbb
add
enter
pop
mov
add
or
pop
push
notb
and
cld
jmp
int3
xchg
xchg
or
xor
jno
call
mov
mov
aad
add
ja
mov
scas
data16
mov
add
or
mov
adc
mov
add
push
xchg
mov
mov
xor
mov
mov
jp
push
enter
ss
mov
mov
sub
mov
fisubs
push
aaa
out
push
push
lahf
cmp
mov
mov
or
test
and
mov
imul
lods
push
add
mov
mov
inc
rolb
cli
add
mov
add
pop
mov
ds
inc
lock
jl
loopne
mov
dec
jg
enter
dec
cmpsl
lock
cmp
movsb
push
sub
cltd
nop
add
rolb
mov
ss
mov
lods
jo
mov
adc
out
lcall
inc
add
rolb
mov
inc
das
xor
add
sub
mov
std
aad
add
mov
ss
jge
add
sub
test
pop
sbb
movsl
mov
out
add
fsubs
orl
imul
mov
rolb
mov
out
pusha
add
pop
push
fcompl
add
mov
stos
out
mov
cmp
test
add
mov
scas
inc
jb
mov
inc
add
aad
mov
jns
loop
mov
add
add
leave
cmp
xchg
jae
mov
into
xor
data16
pusha
add
out
daa
mov
or
and
mov
jecxz
cltd
call
sahf
or
enter
sbb
ret
repz
mov
call
jo
mov
sbb
mov
mov
adc
das
test
add
lret
sbb
sahf
fiaddl
inc
mov
stos
inc
inc
cmp
hlt
daa
jecxz
rolb
mov
mov
jecxz
rolb
mov
dec
jne
add
dec
enter
neg
test
mov
cmpsb
adcl
cmpsb
lods
clc
rolb
mov
push
mov
inc
cld
pop
pop
inc
sbb
add
icebp
jecxz
add
or
xor
xor
or
adc
mov
ja
aas
lea
jno
fs
sbb
mov
mov
mov
and
fs
insl
jnp
sub
add
mov
mov
in
mov
mov
cmc
test
add
add
push
and
add
add
mov
cmp
cmp
xor
mov
pusha
add
or
cmpsb
in
add
mov
xchg
rolb
xor
fisubrs
data16
int
xor
sub
xor
mov
roll
add
add
xchg
fucompp
aas
inc
addb
lock
sbb
call
add
jnp
ror
lds
mov
add
xlat
in
into
xor
rolb
mov
mov
dec
out
iret
push
addb
inc
add
adc
mov
jmp
dec
mov
jmp
pushf
jb
mov
mov
jl
rolb
mov
inc
add
add
idiv
push
pop
out
sbb
add
lret
mov
mov
imul
jmp
in
fistpl
dec
in
xlat
cmpl
jle
into
and
mov
ds
cwtl
mov
add
icebp
push
mov
sub
cltd
jno
lea
popf
push
inc
push
hlt
lock
add
add
add
mov
push
mov
stos
dec
movsb
inc
popa
mov
fcmovu
call
inc
lds
add
fsubrp
lret
add
mov
cmp
stos
insb
test
add
js
mov
inc
add
or
pop
rolb
mov
mov
pop
jae
mov
lret
mov
add
xor
mov
rolb
mov
adc
mov
inc
int
sub
sbb
add
add
pop
push
pop
mov
cwtl
lahf
cli
and
mov
cmp
lcall
pop
ss
add
daa
ljmp
cmp
xchg
inc
or
fcoms
lea
test
clc
jmp
js
dec
popa
test
fwait
movsl
aaa
sbb
insb
adc
add
adc
jnp
inc
add
or
push
jae
xchg
add
mov
fldt
add
mov
fdivl
lods
in
mov
into
ret
fs
add
fwait
pop
mov
add
mov
mov
pusha
add
mov
test
pop
mov
pushf
jnp
cli
addb
sub
jbe
das
incl
loopne
mov
mov
add
cmp
xor
mov
and
jmp
add
sub
cmp
sub
add
dec
daa
cs
je
cmp
ds
cltd
xor
mov
pmullw
adc
mov
dec
test
sar
in
add
mov
push
xor
pop
add
xchg
add
clc
push
iret
xor
adc
mov
mov
mov
mov
pop
sbb
add
hlt
fsts
mov
mov
add
adc
lcall
dec
enter
or
cwtl
clc
addr16
add
dec
xor
lock
into
lret
ret
insl
lahf
sarl
add
xchg
movsb
pop
nop
add
jne
call
mov
mov
scas
loopne
mov
add
mov
outsb
xchg
jp
xor
mov
imul
mov
lret
in
lret
xor
cld
sti
repz
add
daa
loop
mov
jne
icebp
daa
lret
dec
js
add
das
jg
stos
repnz
inc
aam
sub
mov
sub
movsl
rolb
mov
push
mov
adc
shll
decb
mov
sbb
inc
loope
add
add
mov
or
pop
mov
jnp
add
add
xchg
sahf
and
mov
add
dec
xlat
and
add
add
add
adc
nop
add
fstps
test
add
xor
mov
mov
addb
scas
and
push
inc
insl
jne
add
mov
add
push
jg
dec
mov
push
cli
xor
add
mov
popf
scas
jmp
mov
jb
mov
iret
aas
addb
push
add
les
mov
add
mov
add
mov
lods
lds
mov
popa
cmp
stc
pop
pop
push
mov
aaa
adc
jne
mov
mov
pop
inc
inc
or
add
sub
aam
fnstcw
insb
inc
inc
xchg
sub
push
add
dec
mov
fs
add
stc
push
xor
leave
cmp
mov
xchg
cltd
out
sbb
ret
mov
mov
ret
dec
cwtl
scas
cmp
fwait
inc
in
jae
sbb
ja
or
repnz
imul
lock
mov
add
sbb
push
and
jbe
hlt
pop
push
lcall
push
sahf
clc
imul
jb
mov
add
clc
adc
icebp
mov
sub
data16
mov
enter
mov
lods
addb
jge
scas
add
cmpsb
pop
pop
pop
xlat
or
push
and
mov
aaa
inc
mov
cmp
fiadds
sub
imul
adc
add
sub
mov
mov
or
mov
roll
and
mov
add
inc
add
cli
push
push
test
jg
xor
add
adc
mov
xchg
mov
enter
xchg
pushl
test
and
mov
iret
jg
mov
pop
sub
dec
cmp
fs
inc
add
inc
data16
push
cmp
addr16
inc
add
mov
rorl
push
gs
rolb
dec
js
int
pop
xchg
clc
sub
mov
add
testb
jp
movsb
test
mov
cmpsb
loop
mov
dec
outsl
negb
sbb
mov
addr16
stc
aam
fiaddl
mov
dec
push
mov
mov
aaa
mov
insl
ret
add
jb
mov
pop
mov
mov
and
push
push
add
insl
xor
mov
xor
mov
mov
mov
fwait
repz
cmpl
sub
or
mov
mov
cs
or
lea
dec
sbb
loop
mov
test
inc
add
jb
mov
add
mov
neg
cmp
sbb
add
lcall
sub
sti
xchg
dec
cmp
and
mov
aad
add
add
in
push
mov
jo
mov
mov
xchg
in
addb
pop
ss
sbb
add
rcl
mov
imul
js
stos
sarl
cmc
or
xchg
add
movsb
inc
pop
adc
je
mov
pop
mov
jl
add
adc
push
add
mov
lret
mov
dec
into
sbb
daa
divl
hlt
dec
xlat
xor
sbb
inc
je
jp
jl
jne
adc
stc
stos
and
mov
bound
mov
leave
sub
add
fstp
mov
mov
out
add
push
mov
mov
mov
add
ret
dec
cmp
adc
mov
lock
mov
dec
mov
sbb
stc
inc
jp
add
movsl
sti
rolb
mov
inc
sub
add
leave
test
rcll
les
jmp
pop
push
mov
lods
mov
add
pop
xchg
pop
stos
ljmp
inc
add
sbb
mov
mov
add
mov
rolb
mov
insb
rolb
jge
lret
mov
mov
push
in
sub
add
int3
add
jg
aam
push
out
xor
push
ret
inc
add
mov
xlat
lahf
addr16
add
mov
mov
xchg
jp
ss
pushf
adc
std
fs
sbb
lcall
lds
push
or
leave
addb
push
mov
imul
dec
jmp
xchg
or
add
mov
mov
add
ljmp
xchg
les
inc
add
cs
xor
ds
icebp
xor
mov
mov
mov
mov
lods
out
jno
into
repnz
jle
add
sbb
add
xchg
shll
seta
cmp
das
push
add
adc
mov
aad
xor
mov
outsb
mov
mov
movsl
adc
nop
add
movsb
cmc
inc
push
and
mov
into
or
nop
add
movsb
jns
inc
or
lea
jno
pop
push
sbb
push
pushf
mov
lret
in
xchg
nop
add
add
add
mov
mov
mov
inc
cs
add
mov
cs
int3
test
ds
jno
filds
mov
addb
mov
mov
mov
inc
add
mov
test
sub
pop
outsb
xor
test
sarl
std
mov
movsl
ljmp
sti
mov
adc
mov
mov
stos
dec
rolb
mov
mov
aas
stos
push
add
sub
xchg
pop
pop
popa
mov
stc
cli
movb
in
mov
cltd
pop
dec
mov
push
jo
mov
add
mov
stos
pop
mov
sti
fwait
add
out
mov
adc
jge
stos
int
push
pop
pop
jno
pop
icebp
loopne
mov
int3
in
js
add
sbb
adc
out
movsb
dec
xor
and
mov
and
lcall
mov
add
jmp
jo
mov
fidivrl
jb
mov
outsl
aam
lret
mov
add
repnz
mov
mov
mov
mov
in
sahf
xchg
push
aaa
xchg
fidivrs
xchg
mov
ds
pop
imul
mov
loop
mov
dec
push
rolb
mov
loope
add
mov
pushf
dec
dec
jge
xchg
add
mov
mov
bound
mov
rolb
mov
sbb
inc
ret
xchg
add
add
mov
jle
aam
push
push
add
mov
fdivl
cmp
add
mov
aaa
add
jo
mov
insb
pop
cmp
sarl
cmp
xor
jae
rolb
mov
dec
cld
fidivrl
mov
mov
cltd
loop
mov
mov
add
add
ja
xor
fistps
add
adc
fmull
fmull
cmp
cmp
dec
test
dec
jmp
pop
and
mov
lods
out
adc
mov
xlat
pop
jne
xchg
aas
test
mov
popa
fwait
out
pop
add
mov
mov
lret
fistpll
add
add
jg
and
out
or
mov
add
inc
in
ja
push
daa
jecxz
les
or
add
push
xchg
cli
mov
mov
idivb
pusha
add
mov
je
add
mov
les
lret
jg
mov
mov
cli
sahf
pop
test
lahf
pop
jl
pop
in
cltd
sbbl
out
sub
and
xchg
test
andl
mov
add
insb
fists
and
mov
mov
mov
xor
lret
add
dec
pop
xor
mov
rolb
mov
rolb
mov
imul
aad
fcomip
push
das
popf
xchg
add
ret
jp
adc
stc
dec
repnz
inc
mov
lods
jge
pop
cmp
mov
inc
add
sbb
add
add
push
roll
xchg
cld
sub
adc
mov
add
mov
push
testl
cltd
sub
add
scas
cmp
rolb
cs
add
mov
imul
cmpsb
inc
lods
mov
mov
push
int
xor
stc
pop
inc
pushf
pop
cltd
lret
into
in
neg
fldcw
mov
mov
add
cli
loopne
mov
pavgw
or
dec
dec
and
mov
or
add
test
mov
rolb
mov
pop
sbb
roll
jae
mov
inc
push
push
sti
push
add
dec
orl
pop
push
fwait
add
mov
pop
and
add
add
sub
mov
iret
mov
xchg
in
insl
rolb
mov
push
sahf
pop
inc
add
leave
cltd
fadds
push
mov
push
pop
movsl
and
adcl
xchg
test
mov
push
mov
pop
fisubs
push
incl
mov
mov
imul
addr16
push
add
andl
sbb
add
int3
aam
mov
add
fisubs
mov
push
xorl
mov
mov
out
movsl
cmp
cmp
sub
xor
mov
xchg
in
jl
xchg
push
add
push
les
xchg
addb
jmp
mov
add
mov
add
in
add
dec
enter
add
pop
pop
cmp
div
add
ljmp
scas
stc
rorl
ficompl
xor
mov
cmc
dec
xor
mov
adc
jb
mov
add
mov
add
fildll
lahf
addb
push
dec
and
mov
mov
push
add
fimuls
test
mov
bswap
pop
sub
mov
and
push
fs
pop
insb
dec
loop
mov
ficomps
ljmp
das
clc
xor
repnz
popf
sbb
int3
sbb
jp
popa
mov
sub
add
call
ljmp
push
add
rolb
mov
popa
sahf
data16
test
mov
out
out
fisttpll
add
enter
add
or
rolb
push
cmp
lock
in
pop
fdivrs
out
add
add
add
mov
mov
add
adc
mov
dec
ds
test
mov
xchg
add
xorl
adc
xchg
add
add
pop
test
stos
ds
jns
xor
mov
dec
push
add
add
std
and
in
mov
add
jb
mov
mov
push
pushf
push
imul
insl
cmp
cmp
add
pop
ret
fs
dec
jp
sub
hlt
fwait
jg
testb
add
nop
add
xor
dec
cmpsl
testb
rcll
xchg
sbb
adc
mov
and
cmp
mov
mov
mov
xchg
out
inc
fldcw
test
mov
cmpsb
push
fistpl
add
and
mov
pop
and
or
add
imul
adcl
inc
add
arpl
je
add
jno
adc
mov
mov
mov
int
jp
jg
jmp
into
mov
cs
sub
add
idivl
xor
cmp
and
movsl
fs
mov
add
jle
pop
hlt
fldt
stc
mov
mov
mov
lret
mov
sub
dec
imul
mov
add
push
jno
pop
jb
mov
jmp
push
popa
cmp
popa
addr16
into
imul
push
aas
sub
mov
add
stc
into
xchg
icebp
shrl
dec
pop
lahf
mov
add
lcall
lods
jecxz
add
std
popf
pop
ret
xor
mov
lcall
sbb
xor
repz
push
rolb
fistps
add
out
nop
add
add
or
sub
in
dec
cmp
mov
fs
pop
ss
lahf
mov
add
fists
cmp
lds
repz
add
sub
daa
xchg
sub
xor
mov
test
mov
inc
xchg
mov
add
sti
xor
addr16
push
inc
and
mov
mov
inc
jno
xor
push
add
aam
lock
mov
pushf
incl
mov
push
daa
test
add
sbb
xchg
ret
sahf
cld
imul
push
ret
daa
icebp
xor
add
arpl
ljmp
cs
dec
cwtl
xchg
adc
int3
adc
push
add
cwtl
sub
add
mov
sub
call
mull
lods
xchg
daa
gs
test
add
mov
in
testl
add
mov
and
pop
iret
mov
add
add
dec
jge
xor
add
xchg
mov
mov
std
addb
mov
lcall
add
mov
inc
addr16
jl
loope
mov
mov
add
sbb
fcom
bound
mov
or
jns
js
push
pop
scas
mov
add
xchg
mov
pop
push
cmp
sub
add
mov
mov
jb
mov
aas
mov
bound
mov
mov
mov
add
vpandn
inc
std
mov
mov
add
push
mov
mov
mov
outsb
mov
mov
push
add
add
mov
scas
adc
add
fcmovne
sbb
mov
fisubrl
stc
mov
aam
add
lods
push
pop
mov
popf
es
lock
mov
jnp
lret
or
pop
sbb
pop
dec
daa
js
notb
xchg
add
xor
xlat
pop
js
push
insb
aad
add
lds
mov
jmp
in
inc
fisttps
negb
inc
jno
pop
lods
imul
int
daa
pop
xchg
add
mov
xchg
cmpsb
jbe
xlat
aam
idiv
xor
mov
mov
pop
and
mov
add
and
mov
into
cmpsb
aaa
sub
clc
pushf
shr
cs
roll
mov
add
jne
mov
add
add
push
dec
repnz
ret
jno
flds
and
std
mov
mov
aam
loopne
mov
loopne
mov
out
xchg
xchg
pushf
lods
aas
inc
stc
sub
add
mov
in
imul
mov
sbb
add
test
add
xor
mov
mov
lahf
int3
aad
jmp
test
push
jbe
add
in
sarl
jmp
popf
out
popf
sub
push
cs
xchg
pop
sbb
or
ja
addb
subl
pop
jmp
bound
mov
and
mov
add
lea
jo
mov
data16
pop
sti
aas
dec
jo
mov
cmp
aad
hlt
stos
arpl
add
mov
cli
pop
xlat
sub
and
mov
mov
pop
push
repz
stos
movsb
add
mov
dec
test
mov
and
add
mov
mov
mov
xor
mov
aad
data16
movsl
sub
or
sbb
adc
repnz
push
add
lds
push
out
jp
dec
adc
mov
imulb
pop
pop
mov
std
addb
add
mov
mov
add
mov
int
add
push
arpl
sub
jns
lret
repnz
nop
add
pop
or
insl
and
out
dec
aaa
cld
inc
imul
or
ljmp
dec
adc
mov
adc
inc
mov
fdivrl
mov
cmp
xchg
loopne
mov
scas
ljmp
pushf
add
inc
cmpsl
fs
nop
add
xchg
add
aaa
mov
or
xchg
out
dec
and
sbb
ret
mov
xor
add
iret
in
add
rolb
mov
jg
rorl
add
lds
add
leave
leave
repnz
fiaddl
mov
push
add
or
daa
cltd
popa
or
dec
je
add
add
add
loop
mov
stos
pop
pop
mov
inc
cmc
outsb
movsb
fcos
cltd
ljmp
mov
test
push
jnp
aad
mov
add
pop
push
add
xchg
cld
les
jo
mov
mov
mov
jge
imul
filds
push
scas
hlt
enter
jmp
call
mov
dec
jle
inc
outsb
mov
mov
add
or
sbb
hlt
push
add
pop
test
lock
jecxz
mulb
push
mov
or
and
pop
fs
insb
xor
add
ja
mov
add
jnp
and
mov
mov
mov
fldenv
jb
mov
dec
mov
xor
or
inc
xchg
cltd
sub
adc
and
mov
add
or
mov
ljmp
mov
adc
cmove
sub
insl
scas
xchg
int
xchg
add
cmp
jl
inc
inc
xor
xchg
add
cmpsb
es
xchg
pop
push
add
mov
mov
mov
ja
jnp
addb
mov
add
roll
add
mov
pop
adc
pop
pop
jno
add
mov
mov
jo
mov
xor
or
adc
mov
divl
repnz
aad
push
and
mov
add
notl
jae
pop
dec
push
mov
add
shrl
pop
cld
and
mov
adc
mov
add
add
in
or
or
pop
clc
or
iret
sti
insb
sahf
js
xchg
add
rolb
jae
orl
addb
std
sbb
add
lret
popf
fwait
xchg
add
mov
cwtl
addr16
add
add
mov
inc
ljmp
pop
inc
push
add
stos
insb
sbb
push
out
or
add
adc
or
repz
adc
mov
xor
mov
xchg
repnz
out
das
aas
mov
push
add
inc
mov
mov
mov
fnsave
aas
cld
mov
mov
adc
ds
fbstp
loopne
mov
fisttps
movsb
lret
add
add
jae
pop
stos
jo
mov
sub
in
pop
sub
jno
dec
je
pop
push
add
add
sbb
pop
or
jb
mov
add
jecxz
out
mov
jbe
add
adcl
in
addb
fs
and
lahf
cs
xchg
call
dec
les
in
je
repnz
add
xor
sbb
fadd
add
mov
test
jns
add
mov
mov
pop
aaa
lds
int3
ret
sahf
cltd
cmp
mov
add
lds
push
push
pop
inc
in
pop
mov
je
mov
add
loop
mov
add
mov
div
pushf
imul
pop
xlat
lcall
cmp
jl
and
mov
imull
imull
lea
inc
add
add
lcall
push
add
lahf
mov
pop
lds
movsb
inc
sahf
dec
xor
mov
adc
mov
mov
mov
jae
jae
add
mov
insb
adc
mov
adc
push
adc
mov
add
pop
sahf
sbbl
mov
pop
fimuls
add
imul
mov
outsb
es
mov
cmovns
add
jbe
and
mov
jl
xor
mov
aam
or
or
xor
gs
jae
cltd
test
loop
mov
mov
out
fldcw
mov
sti
lods
lock
cmovbe
clc
cmp
pop
adcl
jp
xor
mov
mov
add
and
pushf
dec
xor
mov
add
test
push
add
lock
pop
and
add
mov
bound
mov
fisubrl
aaa
dec
loopne
mov
stc
lods
inc
add
mov
xor
mov
test
mov
ljmp
xchg
aaa
mov
rolb
xchg
xchg
lock
sub
mov
mov
cltd
push
adc
shll
bound
mov
adc
add
inc
push
or
push
addb
cld
xor
pop
ret
mov
icebp
ss
or
add
and
clc
es
mov
inc
inc
add
addr16
ret
inc
add
scas
cmp
movsl
and
push
gs
fs
lods
jp
add
mov
xor
outsl
mov
scas
sti
jnp
popf
cwtl
lret
imul
imul
jno
add
mov
inc
add
sbb
sbb
movsl
cs
cmp
rolb
dec
jns
outsb
push
add
lret
mov
add
and
mov
add
int3
dec
sti
jecxz
jp
adc
ja
shl
dec
push
sub
add
xchg
mov
adc
mov
std
std
xchg
mov
mov
lods
push
lods
xor
mov
push
mov
mov
scas
rcll
add
es
mov
inc
add
addb
in
add
addb
imul
loope
aam
dec
adc
sbb
mov
lea
int3
test
fldenv
sti
fistpll
add
push
lods
js
cmp
add
jecxz
mov
mov
add
mov
sbb
lret
das
sbb
cs
jno
or
pushf
pop
lds
xchg
pusha
add
out
cmp
adc
add
cmpsb
in
mov
add
add
fmull
inc
ss
test
aas
rorl
add
add
xchg
lret
add
je
das
gs
fcmovnu
faddp
and
and
mov
popa
sub
push
sbb
sbb
mov
add
loop
mov
cmpsl
push
pop
cmpsl
mov
popa
iret
push
insl
ss
jge
scas
std
inc
add
push
jnp
jp
push
fbld
mov
push
cmovns
add
rolb
sbb
mov
mov
add
adcl
sbb
jo
mov
mov
sahf
pop
cli
popf
xor
mov
add
out
inc
imul
add
mov
mov
sub
dec
movsb
or
jecxz
movsl
xchg
mov
add
mov
mov
add
cmpl
aaa
mov
pop
cwtl
mov
aad
test
iret
xchg
add
lret
inc
push
rolb
mov
out
nop
add
dec
cmpsb
xchg
jmp
inc
pushf
lock
das
xlat
mov
add
fdivrs
pushf
mov
mov
aam
jnp
pop
fistpl
dec
addr16
dec
push
or
and
mov
add
mov
outsb
dec
xchg
jae
stos
dec
jns
aam
bound
mov
pop
pop
lods
inc
test
push
dec
addb
pushf
sub
add
jl
jno
push
or
loop
mov
lret
lahf
popa
mov
fldt
adc
mov
in
cltd
mov
insl
lret
pop
cli
sti
jnp
add
pop
mov
mov
mov
mov
repnz
xchg
stos
mov
add
xor
aam
add
mov
push
stos
ljmp
add
les
aaa
or
rcll
rorl
jecxz
int
add
dec
lret
icebp
adc
push
pop
mov
cmc
cmpsl
fsubrl
add
xchg
xchg
mov
ja
add
xchg
sub
pushf
mov
shll
mov
mov
xor
push
mov
inc
pop
jl
das
rolb
mov
enter
jmp
add
xor
sbb
inc
or
mov
jne
test
cmp
cmp
xchg
jmp
mov
rolb
mov
jg
cli
xlat
les
mov
and
or
fnstcw
push
push
dec
out
out
xchg
dec
mov
stos
js
cmp
or
daa
xchg
imul
out
jecxz
ja
or
mov
inc
shll
sub
mov
mov
iret
inc
jp
xchg
cmpsl
outsb
enter
adc
mov
dec
mov
notl
gs
sbb
data16
inc
add
mov
loop
mov
inc
or
stos
jo
mov
push
outsb
mov
out
pop
push
call
dec
cmp
adc
or
pop
cltd
jno
inc
add
mov
pop
outsl
shll
insb
push
add
clc
mov
mov
inc
in
jecxz
jae
push
mov
icebp
mov
mov
xor
mov
mov
dec
mov
jno
add
rolb
mov
int
movsb
sbb
in
mov
out
add
add
hlt
add
mov
and
mov
cmp
mov
test
and
int3
lret
arpl
outsl
dec
inc
sbb
cmp
add
jl
aaa
or
stos
rcll
mov
or
into
mov
mov
mov
and
mov
cmp
cmpsl
pop
addb
mull
add
xchg
dec
mov
and
movlps
mov
mov
cmp
and
mov
mov
in
arpl
push
data16
add
push
push
mov
shrl
cmpsl
iret
jg
lea
rolb
mov
pop
sub
xor
mov
jo
mov
and
cmc
aaa
cmpsl
popf
enter
shll
mov
lods
and
mov
out
or
mov
popf
xchg
pop
pop
sarl
mov
icebp
hlt
cld
scas
fcmovne
int
push
and
mov
movl
cmpsb
aas
or
mov
add
scas
mov
mov
and
shrl
push
in
pop
cmp
not
outsl
pop
xor
mov
jge
xlat
add
rolb
xor
mov
mov
mov
mov
bound
mov
inc
and
iret
xchg
outsb
mov
lcall
add
pop
mov
xchg
fbstp
mov
mov
xor
add
dec
in
and
or
mov
mov
pop
dec
popf
divl
in
dec
jmp
int
cmp
sar
mov
ficoms
add
repnz
mov
add
xchg
add
add
mov
imul
mov
sbb
ret
push
mov
xor
sbb
mov
add
lock
push
or
cmp
stc
add
mov
add
mov
mov
in
adc
add
add
add
mov
and
mov
adc
mov
mov
sbb
repnz
push
dec
pop
jns
add
incb
add
stos
aam
pop
in
push
add
scas
push
js
jo
mov
push
add
inc
and
jb
mov
mov
add
add
or
mov
add
test
leavew
xchg
add
add
pop
js
add
push
imul
arpl
xchg
aaa
movsl
stos
pop
cmpsl
lret
popl
jg
aaa
xor
adc
rolb
mov
out
movsl
sub
inc
call
sahf
push
add
sbb
movsb
mov
push
add
rcll
add
test
les
out
inc
in
mov
add
mov
js
mov
pop
ret
dec
push
iret
mov
addb
leave
lret
cmp
mov
pop
xchg
add
jnp
add
xchg
fwait
pop
into
cltd
aaa
adc
push
sbb
add
enter
mov
sub
mov
test
and
add
xchg
add
xor
notb
clc
loop
mov
add
mov
addb
and
stos
push
push
ret
inc
add
jg
lock
into
push
int3
out
pop
in
fistpll
inc
add
addb
dec
jmp
stc
arpl
mov
ljmp
lea
std
xor
mov
movsb
mov
data16
into
outsl
push
cld
or
movsl
jp
mov
dec
or
sub
mov
int
inc
mov
mov
into
cwtl
xchg
add
mov
lock
mov
inc
inc
movsl
jns
outsb
xor
adc
addb
test
sti
dec
cmp
pop
ds
mov
sub
lcall
das
add
arpl
mov
jne
movsl
xchg
jge
movb
ja
xchg
imulb
imul
sar
mov
xlat
pop
sub
mov
mov
xchg
mov
ret
fildll
test
ss
out
iret
gs
add
lahf
repnz
add
pop
ja
lcall
adc
mov
lds
mov
popa
push
add
mov
mov
mov
add
xor
insb
cmp
stos
lea
aas
and
mov
push
pop
lea
mov
add
jecxz
xor
sub
push
mov
lds
mov
pop
xor
mov
pushf
mov
cmp
aaa
rolb
repz
daa
aas
dec
xchg
mov
add
mov
cmp
testl
pop
gs
mov
adc
mov
sbb
jb
mov
add
mov
adcl
int3
cmpsl
cmpsl
daa
sahf
xor
mov
das
dec
dec
les
mov
mov
mov
inc
push
jle
rolb
mov
mov
mov
add
sub
cmp
mov
mov
mov
out
lock
lret
add
leave
pop
xchg
jp
mov
pop
mov
ds
adc
mov
add
hlt
and
mov
or
daa
inc
daa
fstl
call
xor
in
fildll
add
push
test
pop
pop
cmpsb
and
mov
js
lock
jo
mov
mov
inc
add
add
cli
cmpsb
test
dec
pop
and
enter
add
adc
mov
push
pop
mov
add
add
add
add
mov
mov
cwtl
mov
loopne
mov
iret
cld
mov
fdivs
aas
jno
hlt
arpl
mov
loope
xchg
add
or
adc
mov
fstl
mov
jle
lock
mov
ror
and
stos
fucomip
inc
mov
push
xor
mov
sbb
mov
add
ljmp
adc
mov
add
fndisi(8087
les
or
add
mov
insl
inc
lret
mov
je
sub
xor
sahf
test
lret
inc
insl
out
or
add
mov
aam
leave
add
mov
icebp
dec
je
cltd
sbb
dec
pop
xor
mov
jmp
jle
addb
les
rolb
mov
push
adcl
adc
mov
add
or
and
in
and
mov
xchg
cmp
lret
mov
imul
add
icebp
mov
lgs
add
mov
std
dec
push
loop
mov
cmp
jbe
in
fnstenv
mov
arpl
cs
mov
mov
xchg
idivl
mov
pop
mov
in
mov
dec
cmp
add
pop
enter
mov
sbb
xchg
xchg
sbb
cmp
arpl
hlt
bound
mov
pop
dec
loopne
mov
repnz
lods
aas
xchg
mov
mov
test
dec
adc
daa
add
int3
push
jg
mov
mov
mov
out
arpl
aam
cwtl
mov
mov
mov
add
mov
add
and
rolb
mov
mov
or
scas
cli
cmp
jmp
xlat
mov
mov
es
in
pop
push
xlat
dec
push
and
insb
popa
cmp
inc
mov
jge
add
dec
out
fbld
push
add
adc
mov
insb
stos
dec
fsts
mov
cmpsl
es
int3
arpl
and
mov
add
sbb
adc
movsb
popfw
mov
jge
mov
aaa
popf
testb
or
jecxz
imul
push
sub
insl
ret
inc
cmp
cmpsb
push
fldenv
add
or
pushf
cmp
or
add
mov
in
pushf
mov
adc
dec
leave
sbb
mov
cmp
push
xchg
neg
adc
jno
cmp
add
or
mov
add
mov
inc
mov
add
cvtps2pd
clc
jne
pop
push
add
daa
and
mov
subl
mov
xchg
mov
add
sub
sbb
xchg
add
outsb
movsl
pop
rolb
and
or
clc
fwait
cmp
fstl
mov
add
fs
in
aaa
sub
add
and
mov
sub
loopne
mov
mov
push
pop
add
fldt
sbb
or
xchg
sarl
xchg
mov
inc
fmuls
std
mov
mov
add
add
mov
addr16
pop
mov
add
icebp
dec
xchg
mov
push
add
adc
cli
pop
pusha
add
mov
and
cs
das
sbb
gs
cmp
inc
add
movsl
ljmp
mov
add
rolb
mov
add
cmp
fisubrl
dec
les
mov
adc
add
hlt
leave
scas
cltd
adc
lea
pop
add
shll
lods
mov
mov
enter
mov
xor
mov
sub
fwait
inc
mov
add
cmp
rolb
cli
jb
mov
xchg
mov
mov
addl
jecxz
mov
push
in
jae
xchg
add
mov
mov
ds
inc
push
fsts
mov
add
movsb
fwait
mov
pop
mov
or
add
xchg
sub
sbb
popa
add
mov
out
std
cmp
add
and
add
xor
sbb
in
lea
lcall
and
mov
jecxz
imull
repz
cld
addb
jle
icebp
testb
adc
mov
mov
xchg
mov
stos
out
adcl
mov
mov
outsl
icebp
adc
arpl
push
insl
ja
jp
addb
out
add
jp
inc
pusha
add
mov
mov
sbb
jmp
decb
scas
pop
jbe
jge
aas
pushf
or
sbb
es
mov
mov
stos
popf
lods
xchg
cmc
add
add
sbb
fistps
push
push
shll
mov
pusha
add
fwait
roll
add
clc
add
repz
cmp
dec
movsl
dec
fldlg2
int
xchg
lock
jmp
js
fisubrl
mov
mov
jg
adc
mov
jg
jg
add
lods
sub
ret
inc
xor
xor
movsl
clc
arpl
int
add
add
dec
std
popf
rolb
mov
inc
mov
dec
mov
mov
add
repnz
imul
add
aas
adc
mov
push
add
sti
dec
mov
add
and
or
imul
fdivl
lret
aad
jmp
sti
nop
add
push
jmp
test
mull
add
jns
inc
mov
imul
sub
clc
push
sbb
data16
mov
push
shr
stc
mov
idivb
mov
loopne
mov
pop
push
jle
add
or
rolb
in
inc
add
lds
mov
jmp
ss
mov
call
sub
test
fcomps
mov
add
setns
mov
aaa
xor
mov
arpl
arpl
add
mov
test
cmp
sbb
push
adc
movl
out
mov
inc
ss
pushf
or
add
stos
inc
cmp
sub
add
out
cmp
push
dec
enter
add
jg
add
add
mov
insb
and
adc
xlat
lahf
enter
jns
and
jl
jne
mov
add
enter
insb
repz
mov
repnz
mov
jle
fidivl
stos
adc
mov
scas
xchg
inc
add
inc
mov
mov
add
repnz
inc
push
jmp
bound
mov
mov
mov
and
mov
psrlw
cmpsl
cwtl
cmp
lcall
test
add
nop
add
dec
add
add
mov
iret
cs
movsb
out
test
dec
aad
sbb
outsb
xchg
int3
nop
add
xor
add
dec
adc
popa
and
add
xchg
fdivl
jb
mov
inc
adc
mov
or
sbb
rcl
lods
cmp
mov
std
cli
pop
inc
inc
add
imul
mov
xchg
xor
mov
fs
sbb
add
mov
and
or
add
mov
mov
mov
lea
arpl
cltd
mov
add
add
add
hlt
adc
imul
mov
add
pop
sbb
xchg
gs
fstpl
insb
adc
and
mov
xor
in
or
mov
mov
push
xor
repnz
add
test
addb
xchg
loope
int
lock
adc
push
add
repnz
add
out
sbb
inc
add
in
mov
ljmp
arpl
add
ret
daa
je
push
add
inc
add
adc
mov
xlat
xchg
mov
mov
stc
pop
jb
mov
add
mov
dec
bound
mov
add
dec
popa
outsb
out
add
mov
add
cmovns
jae
push
add
mov
cmp
imul
loopne
mov
mov
pop
outsl
loop
mov
pusha
add
rolb
mov
adc
mov
adc
mov
pop
pop
lods
pop
and
lret
mov
jp
add
cmpsl
mov
dec
roll
jg
dec
or
add
mov
mov
xor
insb
cmp
daa
pop
not
add
mov
int
xchg
sub
adc
mov
dec
hlt
adc
negb
dec
push
stos
lods
xchg
sbb
mov
add
add
push
out
cmc
jne
stc
pusha
add
mov
adc
cmpsb
mov
pop
bound
mov
pop
pop
fists
cltd
push
xor
stc
cmp
add
lock
loopne
mov
xor
mov
add
int3
stc
test
add
ljmp
call
mov
pop
mov
fldenv
sub
lret
jne
sbb
cli
orl
push
pop
outsb
notl
call
out
shl
mov
xor
add
and
mov
mov
repz
push
rolb
mov
mov
movsb
daa
lods
bound
mov
jbe
fs
mov
adc
inc
js
jl
outsb
mov
push
es
test
add
adc
mov
in
push
xchg
lret
xchg
jnp
mov
cmp
test
aad
jp
rolb
mov
sbb
mov
add
pop
xchg
pop
pop
and
mov
mov
and
mov
mov
add
ds
mov
add
jo
mov
into
cltd
sub
rcll
add
enter
scas
fisttpll
or
mov
jo
mov
add
in
arpl
daa
mov
jecxz
push
aad
test
xor
mov
jno
dec
inc
cmc
sbb
mov
jp
and
mov
jb
mov
stc
push
bound
mov
push
xor
ud2
push
or
add
mov
mov
dec
cmp
pop
idivl
inc
inc
add
inc
pop
mov
call
fiaddl
les
jno
inc
adc
mov
movsl
mov
jge
jbe
mov
dec
pushf
aaa
pop
out
add
fs
mov
sub
mov
add
add
mov
inc
add
add
fucomp
jns
sub
mov
push
pop
shll
adc
adc
outsl
push
adc
xchg
pop
xchg
push
in
xor
xchg
mov
sbb
leave
daa
ds
pop
xchg
pop
lods
stos
ret
jnp
js
std
mov
cmp
test
stos
pop
stc
mov
dec
dec
mov
push
insl
jmp
mov
pushf
pop
gs
divl
dec
sub
loop
mov
inc
jp
dec
into
stos
or
das
mov
mov
add
add
sbb
push
add
aam
gs
cmp
add
fwait
mov
fptan
add
sub
push
test
mov
push
add
outsb
popa
and
outsl
or
rolb
mov
push
lods
cmp
shrl
add
scas
subl
push
add
stos
iret
pop
mov
add
cmpl
inc
xlat
outsb
mov
das
clc
cmpsb
cld
xor
mov
insl
loope
stos
popf
ja
dec
stos
pop
or
cmpsb
pop
les
dec
push
rolb
mov
xchg
pop
cwtl
inc
add
mov
add
mov
jo
mov
add
jmp
ljmp
pop
imul
int
fldcw
lahf
movsl
clc
mov
aam
add
outsb
adc
cmp
cmp
std
pop
mov
mov
outsb
testb
ds
xchg
xor
mov
mov
jno
adc
insl
lcall
dec
ret
sbb
int3
sub
dec
and
mov
enter
daa
call
mov
pop
cmp
mov
test
or
add
gs
add
hlt
pop
sub
repz
cmp
inc
add
push
jb
mov
add
stos
imul
jne
push
lods
jb
mov
add
mov
js
dec
add
mov
mov
pop
jb
mov
sbb
nop
add
mov
add
cmpsl
stc
jp
jne
or
xchg
je
pop
iret
mov
mov
xchg
mov
push
push
push
pop
adc
jnp
xchg
hlt
jne
add
pusha
add
adc
mov
adc
daa
add
mov
adc
fadd
add
mov
sbbl
in
addr16
repnz
add
loope
add
andnps
test
cmc
sub
es
repz
popf
sub
jnp
fcoms
lock
mov
add
adc
mov
add
xor
mov
add
add
pop
add
dec
inc
push
sub
xor
cld
test
pop
mov
sub
fsts
jnp
jl
or
and
lock
add
or
lods
push
add
mov
mov
push
xchg
stos
pop
pop
test
mov
xor
les
inc
es
cmpsl
jbe
cwtl
in
add
adc
mov
add
push
scas
stos
mov
rolb
jg
pop
sbb
adc
cwtl
inc
add
and
add
cmp
ret
loop
mov
inc
fs
xchg
xchg
ds
stos
xchg
add
jbe
mov
sbb
stos
ds
sbb
insb
push
fwait
cmp
push
adc
add
add
jl
add
sbb
xchg
rol
cli
gs
addr16
add
mov
and
mov
paddb
xchg
cs
add
negb
sbb
pop
push
mov
mov
repz
add
mov
rolb
mov
mov
lea
push
add
add
xchg
addr16
ja
push
mov
std
bound
mov
jno
cmp
insb
bound
mov
add
cmp
mov
pop
js
test
push
add
sub
stos
xlat
lahf
pushf
arpl
sar
mov
add
cmp
mov
sub
push
add
add
mov
adc
xchg
rcrl
push
lock
imul
mov
sub
mov
int
cli
jg
mov
or
xchg
movsb
sbb
cmpsb
pop
and
mov
adc
mov
aas
rolb
mov
sbb
xchg
sahf
mov
jbe
add
mov
fbstp
add
adc
cmpsl
jcxz
mov
mov
dec
into
int3
aam
and
xor
jl
push
add
cmc
imul
leave
push
mov
in
sub
jmp
add
jl
jecxz
mov
mov
mov
mov
jo
mov
mov
sub
arpl
rcr
sub
popf
cli
inc
add
scas
pop
lret
or
mov
cmpsb
xor
mov
cs
push
arpl
inc
add
scas
dec
push
movsl
popf
dec
xlat
push
arpl
add
mov
mov
sbb
add
dec
nop
add
or
cmp
mov
lahf
outsl
das
adc
push
jne
into
fwait
popa
and
arpl
add
out
jmp
adc
popf
pop
repnz
jl
push
lea
mov
cmp
ret
mov
rolb
mov
mov
mov
inc
into
push
add
cltd
mov
push
add
idivl
xchg
push
pop
out
movsl
mov
push
jp
xor
mov
sub
cmp
sub
je
add
js
inc
fmuls
jmp
and
stos
lods
sbb
inc
xor
mov
push
jge
xchg
add
dec
sahf
xlat
lcall
mov
std
les
mov
jb
mov
push
loope
pop
jp
add
adc
mov
test
adc
mov
addb
pop
mov
push
xor
mov
es
mov
outsl
and
cltd
jl
add
add
jge
jae
cs
add
sbb
fistps
in
stos
sarl
mov
or
sub
repnz
sahf
xchg
loop
mov
enter
mov
adcl
mov
push
mov
adc
mov
mov
mov
push
inc
clc
inc
int3
stos
aad
loopne
mov
rcpps
dec
jns
lcall
fs
mov
sbb
mov
pop
outsb
push
pop
arpl
lcall
mov
rolb
and
bound
mov
inc
sub
inc
add
jnp
js
pop
in
mov
clc
rolb
pop
pop
pop
mov
inc
mov
jge
add
out
aas
or
sub
jnp
test
add
add
daa
call
add
cmpsl
pop
cld
insl
jle
cmpsl
mov
sub
add
add
xor
cmpsl
dec
mov
xchg
and
mov
ljmp
inc
add
add
ljmp
add
mov
dec
mov
and
int
add
jnp
sub
jecxz
dec
sahf
iret
mov
add
pop
push
insb
das
sbb
mov
pusha
add
pop
cmp
sbb
paddsb
test
cmpsl
xchg
push
add
mov
mov
mov
aas
ljmp
pop
pop
icebp
jge
insb
lahf
sub
mov
push
dec
call
mov
movsb
rolb
mov
popf
popa
cmp
fcoms
mov
fists
add
xchg
aad
push
enter
add
and
xchg
add
mov
add
mov
lock
mov
adc
xchg
scas
test
cmpl
mov
pop
xchg
jp
add
or
mov
hlt
lds
jbe
cli
inc
xor
mov
js
je
add
out
mov
outsl
push
add
add
cmpsb
mov
jecxz
out
inc
into
rolb
mov
xchg
lea
mov
jae
cmp
mov
icebp
dec
in
mov
mov
xchg
lret
mov
into
mov
mov
xchg
mov
pop
adc
mov
mov
mov
fldcw
pop
dec
sub
jb
mov
add
or
dec
xchg
enter
pop
mov
mov
xchg
sahf
sub
rcrl
add
adc
jge
add
hlt
jmp
daa
cmpsb
sbb
xchg
and
cmp
scas
insl
mov
mov
add
or
mov
xor
mov
mov
mov
stos
lea
mov
add
mov
sbb
jns
add
test
add
jecxz
movsb
mov
pushf
xchg
mov
roll
mov
push
test
popf
sahf
adc
testb
mov
add
icebp
jnp
inc
add
mov
add
add
les
mov
test
mov
stc
insl
into
adc
mov
cwtl
imul
pop
and
and
mov
mov
dec
jmp
xchg
iret
or
subl
cmc
fucomi
xor
add
repnz
mov
adc
nop
add
push
imul
loop
mov
lret
rolb
mov
dec
ret
loopne
mov
subl
add
cmp
xor
mov
jge
loopne
mov
gs
pop
cmp
mov
lret
mov
addb
adc
movsb
push
inc
add
ss
nop
push
addb
cmp
push
jge
jmp
mov
jl
repnz
ret
cmp
data16
add
cmp
lcall
mov
out
mov
pop
mov
mov
inc
jg
cmova
clc
sub
add
addb
int3
or
cmp
dec
jmp
fildl
lock
inc
or
cli
je
add
mov
sbb
cmp
rolb
mov
add
xor
loope
mov
mov
sbb
mov
or
sub
ret
ljmp
subl
add
push
cwtl
inc
add
mov
rolb
xchg
add
mov
aaa
mov
lret
jle
mov
lock
pop
jg
aad
pop
stos
mov
lods
int3
dec
stos
pushf
fisubrl
add
pop
jp
inc
nop
add
push
aad
rolb
mov
cltd
xlat
addb
jmp
mov
sbb
sahf
dec
lcall
ds
dec
pusha
add
gs
or
dec
mov
add
ds
mov
cmpsb
push
xor
add
add
mov
add
jo
mov
enter
imul
das
mov
adc
jge
fildll
adc
mov
jmp
mov
les
testl
lahf
jge
add
cli
jbe
add
add
cmpsb
mov
mov
lcall
mov
fadds
jmp
scas
inc
pushw
dec
or
mov
mov
jg
movsl
sub
push
dec
int
add
loopne
mov
add
add
add
sub
stc
in
xor
incl
mov
mov
dec
lods
mov
sahf
mov
mov
lret
loopne
mov
mov
out
ficomps
inc
in
push
or
mov
add
cmp
testb
add
cmp
dec
mov
mov
add
mov
mov
pusha
add
loop
mov
mov
push
cs
aad
push
push
pop
loop
mov
shll
add
add
and
add
and
movsl
xchg
add
mov
pop
dec
out
add
mov
adc
test
sbb
xchg
mov
ds
mov
mov
pop
mov
dec
iret
mov
push
jno
fcoms
push
arpl
mov
inc
je
mov
inc
inc
movsl
ret
in
xor
pop
ljmp
xor
add
xchg
lret
pop
in
add
dec
cmp
push
adc
mov
mov
adc
add
xchg
push
mov
xchg
xor
xor
mov
lock
push
add
lea
cli
xor
adc
inc
add
aad
jp
push
and
xchg
mov
add
bound
mov
bound
mov
mov
mov
ljmp
jg
fsts
mov
pop
lods
xchg
add
rcll
add
cld
fldcw
add
add
lods
mov
sub
mov
xchg
inc
pop
jb
mov
pop
mov
sbb
adc
mov
pop
iret
cmp
dec
push
stc
sbb
add
arpl
add
add
jmp
add
mov
std
and
les
outsb
imul
jg
add
sbb
lods
addr16
out
in
sub
add
add
push
add
mov
cmp
push
clc
aam
cmp
mov
jns
sub
push
add
add
fcmove
lahf
xchg
fwait
pushf
dec
mov
sub
ja
push
shll
insl
out
push
xlat
xchg
loop
mov
mov
mov
dec
mov
mov
test
jp
mov
mov
shr
jo
mov
mov
add
jae
rolb
lods
and
inc
mov
mov
das
cmpsl
push
je
mov
fsubrl
xchg
cmc
fwait
jmp
xchg
cltd
test
add
pop
in
daa
mov
push
out
pop
fisttpl
not
mov
sub
inc
add
push
push
fmulp
aad
cmp
jbe
sbb
mov
add
inc
add
mov
scas
xchg
mov
mov
lcall
push
adc
jp
rolb
mov
dec
imul
in
jp
mov
sbb
outsb
or
push
out
pushf
pop
lahf
fimuls
aaa
jnp
ret
pop
inc
mov
scas
sub
add
xor
mov
in
test
ja
dec
xchg
add
or
stc
jo
mov
rolb
mov
sahf
fs
add
test
jne
mov
or
addb
les
sbb
pusha
add
enter
rcll
mov
mov
pushl
lods
imul
mov
dec
out
jp
lret
dec
or
inc
stc
fs
push
mov
dec
lret
mov
mov
dec
int3
jae
les
mov
sub
fidivrs
inc
in
mov
mov
jg
sbb
jmp
add
sub
clc
xchg
shrl
ja
repz
call
add
add
lahf
adc
mov
mov
mov
add
jl
lock
ss
dec
roll
jnp
out
ret
push
mov
add
cwtl
push
icebp
lock
mov
or
test
jns
add
lods
jne
das
and
mov
in
xchg
inc
int3
pop
add
mov
mov
and
hlt
cmp
lods
aam
inc
ja
loop
mov
sbb
and
add
in
push
jb
mov
mov
add
lret
pop
cmp
inc
mov
add
mov
pop
mov
cmpl
mov
rolb
lcall
dec
imul
push
add
sub
aad
call
add
jecxz
or
addb
adc
and
add
je
add
nop
add
mov
loope
cli
mov
in
repz
ds
popa
add
jne
xor
mov
mov
pushf
cmpl
pop
push
add
pop
int
loopne
mov
stos
addb
mov
mov
add
mov
aas
in
jecxz
push
xlat
add
inc
mov
pop
push
imul
sub
jns
add
inc
add
test
popf
gs
imul
xor
pusha
add
mov
cmp
mov
mov
push
ret
fnstsw
outsb
int
mov
mov
add
pop
push
xadd
into
jmp
lds
add
lods
pop
aas
lock
xchg
inc
int
cmp
sahf
jg
lods
pop
enter
fwait
and
mov
add
ja
jle
js
stc
push
jg
add
cmp
inc
and
or
xor
adc
mov
mov
mov
add
add
gs
xchg
add
out
push
xor
mov
mov
fstpt
mov
cmp
popf
stos
pop
gs
xchg
arpl
jge
add
sub
and
add
mov
loop
mov
add
dec
sbbl
mov
add
mov
aaa
in
add
inc
add
mov
sub
lock
imul
xchg
jmp
add
rcll
add
mov
rorl
cmp
popf
out
mov
adc
mov
push
pop
dec
lds
imul
mov
loopne
mov
xchg
cmpsl
push
mov
add
mov
jg
lret
mov
clc
mov
and
std
jns
inc
aam
pop
cwtl
xor
cwtl
loopne
mov
rolb
mov
idivl
mov
add
imul
je
ret
bound
mov
or
stc
rol
sbb
dec
stos
dec
fisubrs
movsl
hlt
mov
inc
in
sub
inc
and
push
pop
mov
add
mov
repz
mov
mov
jp
cltd
mov
add
and
mov
divl
mov
xchg
and
aas
lods
les
pop
mov
into
mov
mov
mov
jns
xor
add
xchg
repz
mov
mov
addr16
dec
addb
cmp
and
push
ret
outsl
cmp
add
pusha
add
fimuls
cld
mov
cmp
add
mov
lds
pop
xlat
or
gs
cs
sub
mov
add
add
add
test
jb
mov
push
add
sti
push
and
das
mov
add
xor
mov
iret
sti
mov
imul
sub
aam
add
jge
inc
or
rolb
mov
fistpll
idivb
arpl
daa
bound
mov
mov
hlt
clc
daa
xor
jbe
cmp
dec
xchg
ret
imul
pop
cmp
subl
fstps
cmpsb
sub
inc
cs
adc
mov
add
clc
imul
in
xor
mov
xchg
add
mov
adc
popf
inc
xor
or
push
mov
jl
jnp
or
jbe
pushf
mov
mov
test
add
cmp
add
xchg
jbe
out
xchg
add
mov
push
add
mov
fdivrl
insl
jle
cmp
addb
mov
add
mov
push
test
lret
mov
std
xchg
rolb
out
out
decb
ret
lret
fst
mov
jl
xchg
adc
mov
mov
mov
mov
xchg
imul
divl
xchg
mov
xlat
sbb
aas
cmc
or
pop
jl
mov
mov
dec
int
mov
mov
jns
xlat
pop
ficompl
popa
dec
and
lds
inc
xchg
lods
fs
insl
dec
mov
add
mov
pop
ljmpw
out
jp
add
jg
add
mov
jp
ds
aaa
xchg
add
andl
cmpsb
mov
mov
add
aad
in
push
fcom
bound
mov
mov
sarl
sub
push
mov
mov
jge
les
pop
mov
xchg
int3
mov
cltd
jne
pop
arpl
inc
js
pop
add
cmp
pop
addr16
test
mov
mov
lock
mov
mov
js
mov
nop
add
aad
stos
in
int
push
in
and
lcall
mov
cmpl
loopne
mov
xchg
mov
mov
filds
lahf
pop
lahf
lcall
cmp
add
dec
imul
or
adc
fsts
fwait
mov
sub
loopne
mov
call
add
dec
add
mov
add
gs
cmp
fwait
mov
xchg
sub
mov
push
or
mov
adc
mov
add
push
pusha
add
enter
mov
push
add
inc
cwtl
or
mov
aad
or
push
into
cvtdq2ps
and
stos
fs
inc
add
mov
add
call
jb
mov
js
pushf
inc
pop
xor
mov
roll
mov
push
add
jns
xor
xchg
add
cmp
mov
mov
sbb
cmp
jnp
bound
mov
push
repnz
in
test
add
and
mov
mov
add
imul
cmpsb
xor
mov
add
dec
pop
ficomps
xchg
push
ljmp
mov
and
add
xchg
add
test
sub
mov
mov
xchg
push
add
fiadds
scas
xor
mov
and
mov
ljmp
mov
and
mov
dec
sbb
add
nop
add
add
push
gs
test
dec
js
or
add
push
push
cmp
add
mov
int3
mov
add
pop
add
add
mov
add
add
add
popf
xchg
cwtl
mov
xlat
fs
xchg
add
and
mov
fsubrs
pop
call
add
sub
pushf
and
lods
cld
js
in
push
repz
add
aam
inc
loop
mov
scas
mov
sub
add
push
mov
and
mov
pop
lret
hlt
lret
mov
pushf
jb
mov
addb
addb
inc
add
and
mov
add
adc
in
add
sbb
mov
jmp
add
out
or
jecxz
mov
fucomp
lds
push
sbb
add
mov
sub
xchg
add
gs
jl
repnz
jg
push
pushf
test
jns
pop
xor
push
add
add
push
inc
pop
cs
mov
dec
rorl
leave
xor
mov
in
rolb
mov
xchg
sub
or
orl
mov
mov
sbb
ret
imul
add
add
pushf
rcrl
pop
ret
adc
mov
mov
pop
imul
pop
jb
mov
sbb
test
testl
add
mov
push
or
insl
sub
add
inc
lds
in
bound
mov
or
and
cmp
add
push
add
mov
push
push
mov
test
fwait
addb
imull
add
add
lods
scas
cmp
sub
das
fdivrs
add
dec
sub
aas
in
add
or
add
fildll
bound
mov
sbb
pop
sahf
xchg
mov
add
ljmp
pop
mov
add
adc
fwait
jle
or
movsb
outsb
stc
xor
cmp
push
mov
mov
insl
xor
mov
or
or
mov
sub
outsb
xor
clc
pop
inc
add
adc
lods
dec
rolb
mov
mov
scas
rolb
mov
sbb
xchg
int3
mov
add
je
pop
pop
jns
xchg
addb
rorl
inc
mov
in
xchg
lahf
adc
xchg
mov
mov
add
jnp
push
inc
add
add
je
add
je
aad
test
add
push
jl
mov
add
mov
mov
jp
add
ficomps
add
mov
pop
or
scas
dec
sti
xchg
cmp
mov
rolb
add
scas
test
fimull
or
cmp
cwtl
sub
mov
lret
or
add
lahf
mov
mov
cmpsl
and
test
mov
mov
test
pop
jecxz
inc
outsl
testb
cmp
mov
add
out
mov
scas
xor
ds
aam
outsb
mov
mov
add
test
lods
es
sbb
test
fisubl
mov
and
mov
scas
or
add
sub
sub
jbe
add
add
mov
pop
mov
push
out
sti
cmp
dec
pop
jecxz
add
pop
adc
mov
mov
xchg
add
xchg
dec
jne
jmp
sub
sub
adc
mov
stos
inc
add
jg
scas
add
mov
or
add
lea
mov
mov
movntq
cmp
repnz
sbb
jb
mov
arpl
push
sbb
jns
mov
les
pop
out
mov
xlat
out
aaa
sbb
inc
adc
jecxz
pop
pushf
fstps
sub
add
call
cld
inc
dec
or
or
add
out
pusha
add
jbe
inc
ret
cltd
daa
mov
pop
dec
adc
mov
mov
mov
cli
xorl
sbb
stc
xchg
loopne
mov
add
rolb
mov
add
into
decl
xchg
adc
loop
mov
sbb
push
mov
sbb
adc
scas
gs
push
mov
out
pop
and
mov
xor
mov
mov
mov
std
ret
clc
adc
cmc
repz
mov
adc
add
add
mov
rolb
mov
push
fcomps
pop
or
mov
add
mov
dec
xchg
and
mov
fsts
add
cltd
dec
outsb
test
mov
inc
loopne
mov
add
pop
or
cmp
ja
pop
pusha
add
add
lret
mov
mov
idivl
inc
pop
testb
mov
mov
add
mov
es
add
divl
xor
fcomps
and
mov
mov
push
ret
push
rcll
xchg
cmp
mov
mov
cs
fnstcw
daa
dec
jne
add
mov
or
mov
inc
xlat
dec
cmp
pusha
add
addb
outsl
xor
pop
inc
mov
js
push
xor
inc
or
in
xchg
lock
cmp
and
mov
add
pop
pop
push
mov
ja
movl
stos
pop
sbb
lret
pop
xchg
add
adc
push
insl
outsl
mov
cmp
sbb
dec
jp
push
test
fs
das
lahf
push
pop
je
inc
call
mov
scas
rolb
mov
fistpl
fneni(8087
add
mov
adc
mov
int
inc
push
bound
mov
in
cltd
mov
sub
xchg
mov
or
mov
jg
cltd
fcmovnu
cwtl
into
aad
fwait
cmc
nop
add
cmp
add
