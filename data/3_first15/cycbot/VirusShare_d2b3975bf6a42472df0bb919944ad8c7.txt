cs
jno
and
push
and
push
add
loop
test
nop
pop
imul
js
and
add
aas
fst
jle
ret
or
into
jns
jbe
push
xchg
mov
xchg
pop
sub
testb
add
adc
pop
in
iret
mov
cmp
sbb
cwtl
jmp
adc
repz
or
mov
inc
insl
sbb
das
cmp
or
imul
imul
out
adc
add
adc
mov
mov
lahf
or
sub
ljmp
or
mov
hlt
dec
inc
cs
and
in
push
cmp
push
mov
xor
lret
das
idivb
dec
jne
mov
jns
jno
out
iret
add
xchg
into
inc
add
icebp
pop
mov
add
xchg
stos
pop
xlat
xor
mov
cld
icebp
adc
popa
inc
add
jbe
popa
dec
cmpsl
sub
pop
gs
arpl
xchg
fs
add
or
mov
lods
jg
cmpsb
clc
das
in
iret
push
adc
iret
jmp
aaa
imul
add
aam
aas
addr16
or
xor
sbb
xorl
mov
and
and
push
gs
jl
or
push
test
out
int3
cmp
popa
xchg
cli
and
sarb
jecxz
add
add
add
nop
imul
add
or
divl
sbb
aam
jecxz
daa
stc
lret
pop
mov
xlat
mov
out
xlat
vmovaps
xchg
add
clc
dec
add
arpl
lret
sub
add
data16
movb
and
rorb
add
lds
mov
lahf
addl
dec
push
scas
sbb
add
add
imul
mov
push
adc
test
jp
or
lock
scas
sbb
and
cmpsl
xor
jb
mov
adc
inc
hlt
je
aas
hlt
scas
pop
push
pop
xchg
stos
pop
test
pop
idivl
or
flds
pop
xchg
mov
push
test
xlat
dec
les
sbb
jns
add
inc
add
add
add
pop
stos
xor
lods
mov
mov
repz
sbb
and
movsl
and
add
in
xor
imul
sbb
aas
sub
leave
movsl
out
sub
js
dec
out
inc
and
iret
xchg
xor
sarb
frstor
or
stos
into
and
jae
add
xchg
jge
dec
std
add
lea
jg
inc
js
mov
add
mov
movsb
jae
add
xor
repnz
add
push
aad
mov
mov
inc
add
or
jo
pop
xchg
sbb
cmp
inc
dec
mov
sbb
es
test
inc
add
shlb
xor
inc
add
lods
lods
in
or
das
xor
pop
xor
sub
hlt
sti
jae
lret
pop
jl
mov
data16
sub
pop
push
addb
cmpsl
pop
jae
sbb
in
outsl
xor
divb
rcll
push
lods
out
cli
out
and
shr
addb
sbb
jl
push
loop
push
fstl
clc
aad
movsb
lret
lds
add
inc
or
test
and
jg
add
lret
inc
add
in
xchg
mov
add
jno
hlt
xchg
jne
mov
and
shll
hlt
xchg
ret
inc
add
nop
in
sahf
cmp
lcall
mov
ljmp
outsl
movb
add
push
bnd
xchg
in
rol
mov
add
mov
push
insb
xchg
bound
int
ret
add
xorl
and
push
sbb
push
pop
popf
dec
dec
loopne
and
jp
das
pop
jmp
and
and
in
rolb
or
ret
add
hlt
inc
push
popa
push
es
add
xchg
or
add
lahf
mov
aad
add
outsl
test
mov
jnp
add
out
and
add
mov
mov
add
cs
int3
or
mov
add
es
repz
cltd
cmp
gs
fsubrl
jo
scas
in
movsl
cmp
add
pop
pop
xor
add
cmpsb
pop
out
test
imul
push
in
pop
cmpsb
sti
xchg
out
stc
xor
inc
data16
or
xor
xchg
mov
and
ret
je
addb
xor
sbb
jge
push
add
out
dec
lods
dec
mov
in
inc
mov
add
add
add
dec
sbb
push
test
inc
add
add
inc
lcall
sbb
dec
fs
add
add
jl
addb
test
xor
shr
jecxz
and
in
cmp
mov
fpatan
nop
cmp
jo
pop
jl
mov
mov
fistpl
mov
add
les
pop
mov
into
and
mov
push
sub
jp
iret
push
mov
xlat
sub
dec
mov
cld
rolb
ret
push
xchg
dec
jae
jo
aaa
fistl
shl
test
mov
sub
ficomps
lds
filds
mov
add
adc
fimuls
cmp
sbb
add
pop
cli
sub
dec
test
sub
push
add
mov
shr
pop
das
add
addr16
mov
fmulp
add
cmp
adc
sub
sarl
lcall
mov
std
jmp
add
in
dec
fbstp
jb
int3
stc
ljmp
mov
je
int
inc
add
dec
hlt
mov
js
push
lock
push
dec
sbb
and
aaa
push
pop
mov
addb
je
pop
cmpl
ja
imul
cmp
jecxz
pop
stc
mov
xchg
ds
out
nop
lahf
cmpsb
inc
add
and
or
sub
je
xor
ss
push
testb
std
sbb
mov
inc
add
jge
add
js
cli
add
fisubs
jle
cmp
cmp
addb
inc
jmp
or
jecxz
ret
or
add
push
mov
add
cmp
add
dec
imul
add
mov
cld
push
pop
add
sti
rolb
push
add
sub
add
add
aam
cmpsl
sbb
hlt
into
ja
out
sbb
add
push
inc
add
push
scas
pop
adc
rolb
ficoms
xor
insl
push
daa
lret
cmp
push
nop
mov
test
add
mov
cmp
popf
cmp
add
in
add
aas
mov
jmp
nop
inc
add
aas
push
movsl
sbb
fwait
lret
jnp
add
int3
addb
outsl
out
cmp
ja
iret
jge
pop
push
add
push
in
add
lret
mov
add
repnz
pop
stc
ss
lds
add
pop
and
repnz
jno
and
out
xchg
fnsave
loop
fdivl
divl
sbb
mov
fsubl
cmpsb
sbb
bound
adc
add
ljmp
fstpt
addb
xchg
jge
movsb
jmp
add
and
fsts
pop
add
rcl
ret
stc
addr16
test
mov
js
cwtl
sub
out
mov
test
dec
fimuls
jo
xchg
cmp
out
test
mov
push
push
push
clc
add
mov
add
inc
add
xor
es
sub
inc
add
add
sbb
rcr
lret
fwait
icebp
out
cli
and
addb
fcomi
pop
in
cmp
jge
cmc
leave
adc
add
clc
dec
aaa
call
ds
mov
and
push
filds
xchg
rolb
repnz
and
sahf
inc
std
insl
mov
lea
cmp
add
push
push
icebp
xorl
dec
hlt
add
lods
cmovns
std
cs
movsb
clc
push
jbe
cwtl
push
ret
dec
outsb
and
mov
enter
out
scas
pop
lock
jp
loopne
mov
xchg
sahf
rolb
aad
test
push
stos
inc
mov
ds
arpl
dec
fwait
ja
cwtl
call
push
cmpsb
xchg
mov
or
add
cmovo
in
push
mov
outsb
lea
or
cmp
pop
ret
stos
filds
arpl
mov
inc
add
addb
fdivrl
in
js
fwait
out
sub
int3
ds
mov
adc
sub
and
in
sub
push
mov
push
push
push
push
push
push
push
push
notrack
mov
pop
dec
imul
cmp
ss
push
call
cmp
je
mov
lea
push
push
es
call
push
jmp
icebp
mov
nop
cs
lea
xchg
or
lock
lea
repnz
pop
add
ss
cs
ret
add
add
hlt
cmp
mov
pop
in
int
mov
arpl
ja
hlt
scas
outsl
jns
pop
push
mov
pushl
out
xchg
pop
lret
imul
adc
add
pushf
jmp
add
add
adc
add
add
sahf
aas
xor
lret
mov
ljmp
pop
xchg
ret
mov
xor
stc
popa
data16
test
push
bound
add
xorl
clc
test
xor
add
out
inc
add
in
adc
or
xlat
mov
fldl
push
dec
and
outsl
jne
and
out
mov
pop
sti
stos
cltd
sti
and
jb
and
rcl
add
add
pushf
sbb
shll
icebp
imul
sbb
pop
inc
add
and
add
and
sti
bound
fisubs
xacquire
and
hlt
inc
rolb
popl
andl
bound
loopne
repz
fwait
js
test
cld
mov
call
mov
in
enter
lods
jp
adc
imul
rolb
cmp
cltd
rorl
imul
fldenv
cmpsl
repnz
push
rcr
ljmp
inc
inc
movb
push
cs
popf
dec
sbb
das
mov
push
enter
xor
inc
add
leave
out
push
sub
or
sbb
iret
mov
dec
jno
mov
mov
cli
aaa
les
sbb
add
dec
mov
lcall
jmp
in
sub
add
sahf
decb
xor
andl
fnstcw
push
and
out
outsl
rcr
xlat
cmp
out
outsb
test
mov
jae
or
add
in
aam
sub
orl
xchg
cli
loopne
xchg
xchg
xor
push
and
dec
lret
inc
add
out
xchg
stc
xchg
jo
or
or
sbb
mov
sar
sub
mov
jmp
jle
and
add
pushf
cmp
or
in
cmp
cli
pop
cltd
vminps
mov
ds
inc
insl
ds
add
mov
or
icebp
dec
cli
or
lods
gs
bound
pop
out
lea
mov
xor
pop
xor
or
push
jns
fcoml
add
mov
insl
jae
mov
data16
xchg
jecxz
mov
aas
fcmovnbe
jbe
test
inc
add
adc
fptan
lahf
incb
mov
jp
sub
inc
cltd
fucomi
mov
dec
cmpsl
in
or
cmp
mov
fsubs
add
add
sub
add
push
mov
cli
jmp
leave
add
leave
movsl
pop
scas
sahf
loop
out
js
add
es
jecxz
fs
mov
push
popa
pop
call
dec
or
test
adc
add
mov
xchg
add
call
pop
int3
mov
xchg
fsubrs
aas
xor
add
sub
add
in
pushf
push
pop
les
cmpsl
lahf
cs
push
inc
lret
shll
add
repz
sbb
test
adc
push
xchg
fdivs
add
roll
insl
pop
xchg
push
and
mov
cs
pop
pusha
add
mov
enter
jg
xor
lret
leave
mov
testb
add
mov
out
fsub
stc
call
rclb
jecxz
add
push
and
push
aaa
push
in
ljmp
or
add
dec
test
push
jmp
mov
leave
int3
lret
loope
dec
mov
push
sbb
pusha
add
and
fdiv
xchg
in
int3
dec
dec
push
xchg
jle
mov
aas
mov
xor
mov
mov
add
push
in
cwtl
cltd
cmpsb
dec
cmpsl
cmp
add
dec
add
stos
cs
je
jo
jb
mov
add
add
cmpsl
inc
add
popa
cmp
xor
cmp
dec
sahf
cmp
int3
packuswb
add
add
sub
addr16
mov
js
add
inc
add
outsl
je
inc
add
je
mov
ss
mov
arpl
mov
adc
push
lahf
arpl
loope
sbb
mov
aad
add
add
inc
sub
daa
fistpl
push
sub
ret
cld
aas
dec
out
cltd
fs
movl
fwait
push
mov
scas
add
testb
loop
icebp
and
add
cmpsb
push
pop
jo
mov
hlt
jmp
pusha
add
sbb
mov
jl
incb
iret
and
lds
mov
shlb
addb
dec
cmpsl
fcmovne
aas
popf
out
and
and
aaa
lds
lods
lods
fwait
xchg
xlat
and
mov
aam
cmp
stos
sub
loope
or
or
xchg
jns
mov
adc
cmc
cmp
sbb
insl
sbb
add
add
add
or
dec
ljmp
push
jnp
cmc
arpl
inc
jge
jg
and
ret
stc
adc
inc
mov
popa
addb
hlt
mov
mov
lods
mov
mov
cmc
scas
jg
or
ret
cmp
es
pop
jbe
add
rolb
aad
cmpl
movsl
xor
call
mov
inc
aaa
enter
in
push
icebp
sahf
xchg
jle
adc
sbbl
or
pushf
add
push
inc
jo
sbb
push
insb
test
dec
xor
in
sbb
add
mov
outsb
inc
add
mov
addb
sarl
outsl
addr16
or
sub
je
xchg
pop
sbb
out
repz
or
divl
and
add
add
push
add
add
jge
jp
stos
outsb
les
repz
movsb
iret
fyl2x
xchg
mov
xchg
in
jmp
out
jmp
add
push
rolb
pop
in
es
add
repz
sbb
cwtl
leave
mov
xchg
dec
data16
shll
xchg
out
aas
sbb
xor
jb
nop
inc
add
add
dec
mov
lret
add
mov
push
pop
js
xor
add
pop
xor
mov
push
xor
jo
add
movb
xor
fcoms
js
arpl
pop
xchg
insl
pop
ja
addl
stos
dec
divb
add
testl
and
mov
or
sahf
add
mov
dec
inc
push
mov
xor
out
cli
xor
aam
mov
loopne
pop
cmpsl
sbb
inc
mov
fs
xchg
inc
add
add
sti
in
adc
add
dec
insb
push
jae
dec
pop
stos
cmpsl
cmp
push
inc
push
pop
test
mov
sbb
mov
call
jns
cmpl
shr
inc
fwait
ja
add
call
addl
mov
ret
jnp,pn
les
mov
test
push
pop
adc
es
lods
and
mov
xchg
jbe
lea
or
mov
add
pusha
add
cs
xor
mov
mov
xor
rcll
add
lds
add
nop
sbb
push
push
leave
cmpsb
in
arpl
mov
jmp
jg
aam
cmp
repnz
add
dec
sbb
add
outsl
int3
lds
jb
jno
in
add
inc
jo
xlat
push
test
mov
rolb
add
out
mov
mov
inc
push
cmpsl
divl
add
scas
pushf
or
add
cmpsb
in
mov
cmp
enter
daa
loope
push
and
scas
stos
cmp
sahf
scas
xchg
mov
mov
add
hlt
ret
add
pop
addb
push
rcl
add
sbb
mov
imul
sbb
adc
push
dec
shll
adc
xchg
mov
or
adc
xchg
and
inc
imul
pop
lds
fisubs
roll
pop
mov
mov
inc
add
add
ret
repz
data16
sbb
add
mov
jecxz
scas
inc
add
clc
adc
scas
mov
pop
or
xchg
lods
add
xchg
push
fnstsw
mov
inc
add
enter
cmp
je
aas
xchg
xchg
pop
xor
sti
out
cmpsl
or
mov
add
jecxz
lods
ja
lret
mov
mov
add
push
xchg
push
mov
jl
insb
iret
lods
add
test
movb
rorl
adc
cli
cmp
sbb
mov
dec
leave
add
mov
idivb
push
adc
fwait
and
gs
les
mov
out
xchg
out
cmp
int3
add
xor
enter
add
lods
sarb
outsb
pusha
add
add
dec
adc
sub
mov
add
push
mov
mov
mov
arpl
mov
pusha
add
mov
addb
movsb
je
loopne
dec
cmc
cmp
adc
push
js
xchg
add
jmp
aaa
pop
pop
sub
cmp
mov
jecxz
add
pop
pop
inc
outsl
arpl
jg
xchg
add
adc
sub
ret
ror
sub
dec
mov
push
shll
mov
sbb
mov
add
jg
jnp
rcl
ds
xchg
mov
out
adc
repz
mov
hlt
sub
cld
inc
add
fwait
pushf
dec
addb
mov
add
bound
pusha
add
xor
pop
jecxz
aaa
fsubp
push
and
daa
out
xor
mov
les
mov
mov
and
pop
xchg
or
pushf
mov
push
in
sub
or
inc
movsl
or
cmc
hlt
data16
xchg
cmp
jae
loopne
mov
cmpsb
imul
or
dec
testb
or
mov
mull
outsb
aas
jo
sbb
sub
shl
in
and
outsl
and
sub
mov
and
mov
jno
fwait
push
adc
jl
add
push
out
scas
pop
pop
jno
movb
inc
add
rcrb
shlb
cmpsl
mov
mov
cmpsb
jp
and
pusha
add
and
push
sbb
je
arpl
in
xor
in
pop
shrb
sub
arpl
imul
dec
inc
add
rorl
hlt
and
test
ja
dec
dec
push
popa
ds
mov
lahf
cmp
add
dec
inc
add
xchg
ja
insb
dec
hlt
imul
lods
mov
add
mov
pop
mov
lcall
std
push
mov
mov
loopne
add
sub
lods
jecxz
addr16
add
inc
add
cmp
xor
dec
mov
loope
push
add
imul
ss
adc
or
add
clc
push
aam
inc
add
xor
mov
in
dec
add
push
lds
inc
add
adc
or
test
ja
out
loop
push
lret
jbe
in
sub
cltd
arpl
scas
mov
es
popa
das
fadds
or
les
dec
xor
lcall
add
sub
in
or
mov
aaa
jne
mov
insl
mov
mov
and
add
pop
sbb
outsl
shlb
mov
test
push
add
test
in
mov
icebp
xchg
inc
add
or
add
ret
mov
test
or
or
pop
cld
dec
cs
aad
gs
pop
orl
add
and
add
mov
push
jne
mov
data16
in
mov
mov
dec
mov
fwait
cmpsb
cltd
jo
cmp
shlb
cmp
scas
or
lret
repnz
or
adc
in
mov
nop
inc
add
mov
push
mov
mov
add
inc
add
ja
loop
aaa
adc
addb
pop
cmpsb
shll
add
shlb
sub
or
clc
mov
into
arpl
fdivrl
loopne
xchg
insl
cmpsb
pop
inc
add
data16
mov
dec
sahf
testb
cmp
jae
sub
adc
sti
mov
leave
fistl
mov
cmp
xchg
xchg
test
and
call
inc
add
in
fbstp
call
fs
sub
leave
sub
test
jmp
lret
or
cwtl
mov
dec
push
mov
mov
inc
sub
int
into
sti
arpl
push
je
mov
cwtl
filds
lea
xchg
stc
nop
fs
test
call
lods
mov
ljmp
inc
add
mov
mov
rorb
iret
dec
push
mov
fsubrs
push
out
lds
cli
mov
mov
mov
addr16
pushf
out
aad
test
pop
jnp
lods
enter
repz
fsub
fwait
jl
outsl
sub
in
add
xchg
ret
sbb
jle
add
jl
and
in
sbb
cmc
leave
add
add
int3
sub
and
xchg
cmp
dec
in
cli
xor
insl
sub
xor
dec
jmp
sbb
scas
dec
int
fsubl
xchg
pop
jnp
add
jne
xor
daa
mov
sbb
xchg
xadd
repnz
scas
and
sbb
add
jp
icebp
daa
xchg
outsl
out
movsb
ja
push
movsb
arpl
mov
loop
lea
out
dec
adc
mov
sbb
mov
out
push
add
jl
add
add
bound
js
inc
add
push
lods
cmp
cmp
pop
adc
lods
pop
ss
add
jge
add
lods
popa
jne,pt
xor
mov
inc
addl
fbstp
mov
xchg
fsubl
jmp
ss
jo
sub
pusha
add
ret
sbb
add
and
inc
inc
mov
and
cmpsb
sub
fnsave
loope
cmp
mov
ret
int3
out
popa
fdivl
cmc
or
mov
add
sub
loopne
add
js
or
add
in
hlt
pusha
add
adc
mov
inc
pop
push
sub
or
enter
lahf
cmp
rcl
cmp
pop
std
xchg
push
int
add
jb
rolb
add
cs
and
pop
mov
xchg
adc
mov
call
mov
cld
rcrl
arpl
xchg
ja
add
adc
insb
rolb
insl
add
mov
pushf
sbb
mov
pop
adc
push
push
aaa
dec
xchg
lret
ret
cmp
adc
or
dec
popa
mov
add
arpl
dec
sub
inc
add
xlat
jl
and
fcoms
dec
cli
mov
popf
dec
push
xlat
inc
adc
add
dec
cli
stos
or
xchg
lods
cs
push
ds
mov
and
clc
mov
adc
sbb
cmpsl
xchg
pop
adc
int3
std
push
xlat
pop
rorl
add
out
es
cmpsl
lahf
sti
mov
mov
bound
shll
and
in
and
mov
adc
adc
adc
xchg
hlt
sbb
mov
arpl
ret
fcoml
ljmp
xlat
and
push
repz
xchg
out
insl
pushl
hlt
scas
into
adc
jge
xchg
add
xchg
push
loope
es
add
pop
sub
pop
xor
jl
jb
syscall
stos
xor
addb
aas
enter
lret
in
add
pop
rorl
xchg
xor
add
lret
pushf
add
mov
inc
jecxz
out
dec
or
sarl
in
movsb
or
mov
cmp
out
xchg
cmc
enter
and
add
sbb
add
mov
mov
adc
fdivrl
jl
shlb
jmp
jne
dec
or
jl
idiv
lods
andl
mov
xchg
outsb
out
js
sbbl
jno
add
push
push
xor
xchg
sub
xor
into
pop
pop
jnp
and
aad
fildll
ret
jl
add
or
jnp
xchg
mov
ss
cli
jle
add
gs
jp
fldenv
or
jg
out
and
mov
gs
out
scas
or
xor
daa
lret
insl
inc
add
add
sub
xchg
mov
push
jp
js
add
maskmovq
divl
stos
movsl
add
cs
cltd
jle
mov
ljmp
cmpsb
bound
pop
jae
ficoml
add
jecxz
lods
data16
movsl
insl
inc
xchg
fwait
out
sbb
mov
push
flds
addb
repnz
pop
dec
mov
test
sbb
cmp
dec
mov
mov
jle
mov
and
int3
lods
pop
push
sbb
ja
dec
std
and
cmc
jbe
sbbl
jae
pop
mov
dec
adcl
pushf
loope
xchg
adc
sbb
loop
jbe
pop
mov
and
les
pusha
add
lret
jae
inc
jmp
mov
mov
mov
fldcw
clc
sbb
lods
test
pop
lea
mov
pop
movsb
outsb
scas
xor
aad
pop
inc
add
rolb
cvtpi2ps
mov
xchg
inc
add
dec
rolb
and
imul
flds
int
cmc
sti
jecxz
add
dec
adc
fiadds
aam
aam
nop
push
cli
dec
and
loop
arpl
ret
jp
jge
movb
sub
push
cmp
lods
outsl
add
lret
mov
xchg
cld
or
cmp
add
bnd
hlt
cmp
add
jo
icebp
std
jg
loop
repz
icebp
dec
mov
xchg
adc
push
add
sub
popa
loope
stos
pop
or
je
mov
idivb
orl
mov
add
adc
addb
roll
sbb
add
cwtl
push
inc
pop
mov
mov
adc
and
push
ret
dec
sbb
xor
add
pop
or
cwtl
inc
insl
jo
mov
pop
test
dec
jne
shll
adc
imul
xchg
imul
xchg
icebp
push
add
rolb
sub
xchg
aaa
mov
in
dec
notl
lret
cmc
mov
movsb
pop
out
pop
xor
lds
add
cmc
addb
adc
arpl
mov
aad
jp
inc
push
sub
mov
out
pop
xchg
lods
add
ja
and
cs
xlat
pextrw
xchg
add
sbb
mov
pop
xor
jne
in
fistl
pop
cwtl
dec
jns
mov
mov
movsb
xlat
pop
pop
lcall
mov
lcall
jmp
add
jge
mov
data16
pop
lret
cs
rcl
mov
aam
sub
mov
sti
or
jbe
xor
in
and
movl
jb
jle
mov
or
jns
cli
rorb
jbe
cltd
imul
add
pop
int
pop
xor
add
add
add
and
add
ljmp
dec
lret
add
cmc
imul
mov
int3
sub
jmp
and
scas
lcall
loopne
jle
ljmp
or
cmp
jnp
pop
out
lock
adc
sub
pop
cmp
sbb
cmp
xor
rcll
fisubs
cli
dec
imul
sti
lods
or
loope
add
cmp
mov
push
sub
test
xchg
cli
cmp
add
test
rorl
xchg
add
pop
add
scas
nop
sub
pusha
add
xor
mov
cmp
jns
rorb
les
mov
add
inc
mov
inc
push
add
dec
out
inc
test
mov
test
rolb
rorl
dec
addb
outsl
jle
mov
jno
fbld
test
in
push
mov
lcall
cmpsb
imul
pop
mov
add
jge
mov
push
sahf
rorl
add
add
add
sbb
divb
rclb
sub
sub
add
adc
jmp
stos
mov
sub
sti
test
jp
int
cmp
sbb
xchg
nop
negl
mov
add
jmp
xchg
sub
fnstenv
sub
sarl
push
outsb
push
test
popl
mov
icebp
pop
jecxz
je
mov
sbb
stos
inc
cltd
nop
dec
jbe
roll
cmp
int
add
sub
mov
mov
pop
xor
pop
mov
xchg
cmp
rcrl
sbb
stc
les
test
xor
cmp
sub
lock
add
popa
adc
lahf
sub
cmovl
pop
adc
stos
or
mov
add
int3
xchg
mov
fucom
xor
imul
inc
pop
loop
divb
pop
add
add
cs
cmp
loopne
enter
pop
lea
inc
test
lcall
pushf
cmp
add
mov
sub
add
jae
popf
jge
cmp
test
fs
jp
sbb
or
xchg
xor
mov
add
add
push
lds
mov
mov
adc
lods
xchg
fs
pop
ja
icebp
fadds
push
shlb
adc
add
jae
jnp
mov
stos
shll
imul
inc
addb
and
mov
push
sbb
inc
movb
cmpsb
sub
aam
pushf
mov
xlat
in
jns
mov
add
std
xor
jl
add
icebp
or
in
dec
sub
cmp
adc
adc
movb
cmp
xchg
xchg
mov
inc
lea
and
adc
cmp
outsl
addr16
imul
rcrl
jl
clc
roll
lahf
iret
add
mov
filds
adc
mov
mov
jg
mov
stc
sub
maskmovq
imul
ficomps
sub
out
arpl
xor
cmova
cmc
andl
movsl
dec
push
movb
add
adc
mov
aam
pusha
add
add
ret
in
in
add
xor
jae
pop
mov
xor
daa
out
pop
scas
dec
xor
jno
fstl
push
lds
sbb
sbb
inc
add
loope
fistps
dec
je
inc
pop
inc
add
add
sub
sbb
sub
jno
insb
sti
and
or
fiadds
add
push
fistl
push
test
leave
test
mov
inc
aam
dec
and
sbb
inc
xor
cmpsl
outsb
push
xor
aas
imul
cmp
add
psubq
mov
imul
jmp
std
ficoms
sbb
bound
xor
inc
add
mov
inc
add
add
inc
addb
add
mov
push
divl
jl
test
pop
pop
aas
dec
xlat
xor
test
inc
add
push
sub
add
jne
sbb
int
add
push
les
ret
xor
jge
push
outsl
fisttps
inc
add
push
xchg
mov
dec
mov
sbb
jmp
inc
add
aad
nop
mov
xchg
mov
add
adc
les
jl
jns
add
push
call
add
xchg
mov
jg
popa
adc
mov
xor
mov
sbb
ret
xchg
cmp
add
add
in
insb
mov
cltd
and
add
mov
inc
add
cmp
ja
popa
mov
ret
mov
xchg
add
stc
add
xor
xlat
idivb
int
mov
ret
repnz
insl
imul
mov
jmp
lds
out
dec
mov
mov
fdivr
push
ss
mov
add
sub
sbb
xchg
test
mov
sti
xchg
push
xchg
xchg
jmp
dec
dec
mov
scas
push
dec
mov
xchg
cltd
or
push
jg
xor
rcrl
push
add
jp
in
add
jae
out
inc
xor
mov
ficoms
push
incl
sub
mov
cmp
cmp
sti
shll
mov
push
popa
xor
or
add
push
mov
mov
inc
dec
lret
xchg
push
test
jno
lcall
mov
sarl
test
and
sbb
ret
cs
inc
add
pop
out
jae
add
ds
daa
pop
cmp
dec
cmpsl
inc
fidivs
negl
cwtl
jge
inc
movsl
mov
add
addb
lods
fnop
sub
push
stos
mov
enter
repz
lret
xchg
faddl
xchg
pop
and
adc
add
xor
or
xchg
cmp
mov
in
mov
sbb
xchg
in
loop
pusha
add
mov
ficoms
xchg
push
mov
add
mov
dec
xchg
sahf
push
and
add
pop
lock
in
dec
ret
add
mov
add
ja
xor
outsl
lock
movb
mov
ljmp
jp
add
dec
mov
test
fbld
sbb
cmpsb
xchg
mov
dec
dec
pop
cmpsl
xchg
push
clc
lock
mov
cli
add
movb
outsb
in
xchg
scas
movsl
mov
mov
or
add
add
jmp
lds
inc
mov
jecxz
in
or
or
cwtl
dec
or
lods
xchg
fisttpl
imul
adc
push
lret
mov
clc
xlat
rorb
pusha
add
lods
xlat
sbb
fnstcw
sbb
mov
loope
adc
add
add
lret
push
not
or
aam
test
add
add
pop
push
add
and
push
add
sbb
pop
fs
adc
jb
divl
mov
lds
ret
push
fldenv
mov
pop
mov
and
pusha
add
into
cwtl
sub
xor
adc
xchg
cld
repz
jnp
bound
popf
xlat
into
and
popa
fidivrl
and
mov
xor
add
or
mov
stos
push
rolb
movb
cltd
aas
pop
sar
fiaddl
repnz
and
push
ja
js
add
jns
mov
in
iret
sbb
jb
sub
xor
subl
fwait
stc
cli
aad
xor
outsb
jp
rolb
or
jb
and
mov
shl
pushf
add
leave
mov
popa
pop
test
sti
out
sbb
add
adc
xchg
dec
pop
inc
cltd
mov
arpl
add
mov
pop
fildl
gs
jge
aaa
sbb
xchg
add
mov
ror
mov
inc
add
rolb
in
and
out
icebp
in
xlat
add
xchg
mov
iret
mov
add
aaa
mov
and
sbb
scas
and
add
jmp
mov
bound
fisubl
enter
rorl
scas
fdivrs
adc
loop
sbb
addr16
out
push
inc
out
or
add
lds
cmpsb
cmp
fsts
jo
add
push
pop
sahf
outsb
cmc
and
sub
xlat
or
cmpl
lcall
push
cld
dec
mov
and
int
scas
cmp
ret
push
fidivrs
and
popa
jns
addb
pop
xor
pop
fcomip
push
mov
inc
push
adc
add
add
cmpsb
insl
fisubl
ret
inc
and
sbb
jmp
jns
repz
pop
pop
inc
add
push
dec
popf
lret
push
fwait
xchg
imul
dec
cmpsl
xchg
pop
mov
mov
les
fbstp
testb
loop
int3
pusha
add
adc
out
movsb
loopne
aaa
sbb
cmp
jbe
xor
xor
or
adc
jg
mov
pop
sbb
pushf
and
int3
repz
stos
icebp
push
out
sti
lret
insb
dec
pusha
add
ret
loope
push
mov
or
xor
sahf
jno
jg
add
fs
movsl
jecxz
repz
xor
mov
mov
negl
push
jl
test
xlat
pop
mov
lock
scas
mov
jge
int
out
pop
fmul
xchg
push
push
add
xchg
cwtl
dec
pusha
add
mov
ja
add
sti
mov
or
sbb
xor
or
pop
aaa
xchg
sub
mov
jl
pop
mov
sti
push
std
test
add
inc
add
mov
enter
cmc
pop
in
testb
adc
lock
nop
and
daa
adc
je
out
popa
jb
add
sub
push
idiv
fldcw
mov
lret
cmpsb
dec
imul
jae
cmpxchg
add
add
add
jb
rclb
lcall
cmp
test
out
mov
xchg
pop
or
add
push
fsubl
fcmovnbe
addb
adc
xor
xchg
mov
add
add
lock
adc
xchg
mov
fsubrl
inc
jns
add
mov
sub
and
pop
das
mov
mov
add
dec
decb
jnp
je,pt
pop
ds
data16
fimuls
xor
dec
dec
sub
sbb
push
xor
mov
add
daa
cmc
adc
sub
daa
fldt
add
pop
add
imul
cwtl
arpl
inc
add
cmp
loope
push
sbb
movsl
idivb
mov
jns
pop
jmp
push
addr16
popa
inc
add
cli
xor
or
ss
cmpsb
jp
cmp
fnstenv
outsb
mov
les
loop
sub
shll
fsubs
mov
add
ror
push
add
rorl
cmp
xor
push
jnp
fs
neg
pop
lea
insl
and
testb
add
push
xor
jge
inc
and
je
add
les
imul
stos
ss
cmpsl
call
lcall
add
je
insb
aaa
jmp
cli
cmp
movq
shlb
sbb
lods
jb
repz
fidivrs
jp
xor
xlat
in
add
aas
int
and
into
add
cmc
fstl
pop
sbb
inc
jno
cmc
stc
and
cmp
mov
sbb
inc
xor
mov
std
jno
or
pop
xor
jns
jl
adc
xor
mov
and
or
push
fucomp
loope
loop
mov
leave
mov
add
fwait
pop
out
mov
lahf
mov
arpl
jnp
clc
data16
jbe
test
loopne
add
add
dec
xchg
lds
or
imul
add
repz
add
jb
mov
xchg
pop
lahf
mov
add
adc
and
push
mov
shll
or
ret
jns
popf
pop
mov
adc
arpl
mov
push
adc
in
and
cld
sbb
mov
dec
adc
fs
and
test
inc
out
xchg
add
push
lea
sub
popfw
mov
inc
add
mov
nop
aaa
aad
sbb
and
orl
pop
mov
pop
push
jbe
add
adc
in
push
jno
inc
add
ds
movsl
bound
mov
add
or
and
shll
popa
pop
mov
cli
sarl
arpl
scas
les
les
mov
movsb
shll
add
lsl
xor
lret
mov
es
cld
mov
testl
dec
sahf
push
fdivl
add
add
rolb
add
and
jb
dec
xchg
inc
clc
mov
push
mov
ss
ret
je
sub
inc
add
add
lahf
movsl
or
jo
divb
inc
add
lcall
mov
xchg
xchg
cmp
mov
jbe
jae
sbb
lret
fwait
pop
inc
add
aaa
dec
movsl
pop
jns
out
pop
pop
push
cwtl
add
dec
jae
pop
xchg
loop
nop
int3
jne
mov
hlt
cwtl
xor
dec
pushl
shrb
notb
cmpsl
cmpsb
push
outsb
sti
inc
add
stc
sbb
negb
ljmp
sbb
out
aas
ret
inc
add
jno
mov
popa
lret
jp
inc
add
fs
aam
add
icebp
jae
add
and
das
push
and
outsb
outsl
cmpsl
pop
in
lea
add
paddsw
adc
cmp
add
movsb
ss
mov
daa
rorb
insl
pop
xlat
fdivr
jge,pt
cltd
jb
lods
dec
jb
pop
cmp
iret
dec
mov
sub
enter
sbb
or
xchg
movsb
sub
push
adc
movsl
lea
or
roll
test
fwait
addb
adc
sahf
std
adc
mov
int3
jp
add
pop
mov
nop
and
pop
jmp
push
repnz
jmp
dec
xlat
push
inc
add
add
in
xchg
enter
add
cld
xchg
in
cmp
lret
je
bound
inc
ret
sbb
mov
ljmp
and
test
sub
mov
and
in
pop
addb
push
idivl
lret
cmp
faddl
add
leave
sub
fistps
mov
cld
movb
sbb
pop
idivb
add
les
ret
mov
fdivr
lcall
cltd
daa
jle
sbb
inc
ja
fsubrp
in
sub
sti
pusha
add
lcall
jns
mov
outsl
loopne
repnz
test
xchg
arpl
mov
sub
pop
xchg
inc
xlat
mov
repz
add
popa
insb
inc
test
or
cmpsb
jmp
xchg
mov
cld
out
gs
out
add
jnp
add
fsubrl
xchg
jmp
xor
cwtl
jnp
mov
inc
jmp
xchg
dec
rcr
inc
xchg
inc
mov
add
add
int3
arpl
dec
xchg
inc
shrl
fldl
insl
neg
push
cmpsl
sbb
inc
push
xchg
and
pop
arpl
add
jae
inc
ficoms
in
in
jae
xchg
inc
mul
xchg
jl
push
add
movsl
dec
xchg
push
arpl
add
int
xchg
addr16
icebp
jge
jae
aad
inc
out
icebp
pusha
add
js
mov
add
lods
mov
push
mov
add
movsb
bound
lods
sbb
mov
add
mov
cmp
push
les
inc
or
mov
iret
cmpsl
adc
mov
jno
jecxz
outsl
pop
mov
out
sahf
int
and
clc
aam
mov
xor
and
add
imul
push
int
cwtl
cmp
sti
lea
outsl
aas
xor
jnp
ret
xor
add
loopne
into
out
push
fsubr
jne
fcos
ror
sbb
push
clc
add
ljmp
lods
rcrl
call
cld
xchg
movsb
repz
xchg
addb
adc
cmpsl
decb
xchg
lret
xchg
push
xlat
into
lods
mov
aaa
and
test
movsl
das
fnstsw
mov
xor
push
lcall
xor
xchg
sbb
dec
mov
sub
xchg
cmp
and
cmp
add
mov
dec
pop
mov
addb
loopne
pop
jp
loop
jns
mov
xchg
dec
cmp
mov
sbb
add
jns
ret
xor
jecxz
aam
add
or
mov
sub
add
sbb
cltd
scas
or
cmpl
int3
xchg
es
or
and
fdivrs
push
scas
in
xchg
inc
add
pop
cmp
aam
jnp
clc
mov
inc
add
cmpsb
xchg
mov
lods
cmp
mov
xchg
out
lods
mov
lcall
scas
movb
add
xchg
mov
pop
insb
gs
in
mov
jo
jmp
adc
or
sbb
xchg
je
xchg
fucomp
iret
iret
sti
scas
lahf
sub
movsl
and
cli
sti
out
mov
or
or
inc
add
or
imul
inc
add
adc
out
mov
and
std
std
xor
ficoml
dec
mov
cmp
pushf
and
push
pop
int
in
xchg
divb
sbb
mov
sub
fs
jno
add
or
and
inc
sub
push
and
push
adc
movsb
push
fistpll
mov
cltd
mov
cmp
ret
loopne
fdivrl
scas
push
jl
fcoms
and
mov
mov
call
jne
and
movl
std
mov
popf
lock
ret
imull
mov
cld
loope
or
add
into
jmp
popa
in
rcrb
iret
notb
pop
lock
pop
or
popf
push
pop
inc
shrb
popf
xchg
jl
lods
xchg
ret
fistps
mov
mov
sub
push
leave
pusha
add
and
push
xor
push
dec
fwait
clc
push
mov
dec
ret
jecxz
add
dec
sub
inc
daa
xchg
imul
icebp
pushf
dec
fmull
data16
cwtl
mov
cmp
outsb
aad
sub
int
add
mov
gs
xchg
into
lds
addb
addr16
pop
inc
out
ficomps
int3
orl
rolb
jne
in
or
hlt
mov
add
xchg
cmp
in
push
addb
jb
test
mov
arpl
flds
mov
sub
pop
test
filds
cltd
gs
lahf
mov
test
cmpsb
ret
into
loopne
in
enter
lret
les
pop
adc
and
xor
add
push
xchg
ds
and
mov
rolb
sbb
mov
out
xchg
pop
test
xor
imul
cs
xchg
cmp
push
mov
ss
pop
out
sub
sti
pop
xchg
ret
push
jne
add
movb
mov
xor
cld
cltd
mov
out
sarl
sahf
add
xchg
sarb
xchg
ret
sub
adc
mov
or
es
dec
es
lock
or
pop
sbb
inc
add
push
cmpsl
in
inc
add
inc
adc
push
inc
add
pop
dec
arpl
xchg
inc
daa
pop
std
les
dec
xor
cmpsb
mov
repz
out
std
push
dec
fcompl
out
repz
lret
push
xchg
test
or
test
lock
das
xor
scas
cltd
pushf
inc
cmp
and
cmp
push
fwait
popa
sub
xor
lods
push
jb
aas
dec
stos
sbb
push
mov
les
sti
cli
fildl
xchg
stc
out
outsb
cli
push
fcoml
sbb
clc
mov
jle
mov
pmaxub
insb
in
jo
inc
and
in
pop
mov
mov
fisubrl
inc
add
imul
xor
add
mov
mov
and
clc
dec
and
gs
lcall
xchg
cmpsl
add
jo
cli
jl
jl
adc
movsl
rcl
xchg
insl
or
add
add
add
fcmovne
addb
aam
sbb
outsb
add
cmpsb
pop
add
test
punpckhwd
dec
push
inc
add
dec
imul
dec
xchg
out
addb
and
push
add
xor
xchg
xor
mov
add
sbb
popa
push
mov
push
inc
xchg
testl
out
xor
inc
push
fdivs
into
cmp
jno
aam
aas
movsl
stc
rolb
add
rolb
adc
jp
jno
xor
mov
add
sub
int
add
rolb
leave
or
sbb
jmp
addb
add
loope
push
dec
in
sub
add
jno
xchg
add
dec
sbb
sub
add
lret
imulb
andl
mov
push
lret
xchg
leave
dec
pop
push
xor
imul
fnstcw
xchg
and
pop
mov
loop
or
xchg
sub
imul
xchg
inc
movb
mov
add
das
popf
fwait
cwtl
repnz
negb
insl
mov
pushf
mov
mov
mov
xchg
jge
lods
sub
call
mov
pop
lret
push
cwtl
mov
addb
leave
sub
inc
add
pop
scas
imul
adc
orl
pop
movsl
scas
push
aas
sub
push
movb
jecxz
pop
hlt
jmp
or
adc
shll
add
sub
add
and
inc
mov
dec
or
fsubrp
sbb
add
cmpsl
jp,pt
push
inc
add
adc
add
cmpsl
inc
add
and
or
data16
adc
pop
push
push
lods
inc
dec
jns
add
fstl
fdivl
jecxz
enter
jo
add
and
sti
data16
out
lret
or
rolb
cmp
add
pop
push
clc
mov
addr16
retw
or
mov
aam
mov
xlat
adc
inc
les
lods
icebp
loop
mov
push
movsl
in
xchg
adc
ds
loope
cs
pop
insl
rol
sub
in
mov
cli
imul
add
sbb
dec
lret
ret
xchg
iret
fs
insb
inc
add
rorl
push
cmp
hlt
jae
out
dec
cli
je
lock
add
out
add
sbb
out
lret
popa
js
fnstcw
cmpsb
inc
add
mov
test
iret
push
ljmp
inc
ja
pop
nop
daa
cli
xchg
mov
and
inc
add
xchg
sar
cli
jecxz
sub
je
sbb
cld
movsl
shll
rcl
icebp
gs
arpl
fstl
jle
jae
add
mov
faddp
dec
push
fldenv
inc
add
or
cmpps
push
lods
aaa
push
out
jl
stos
xlat
cmp
push
das
jne
sbb
adc
inc
outsl
mov
insb
ror
shll
out
rol
in
push
xchg
sbb
mov
cwtl
xor
out
fbstp
dec
popl
sti
sub
data16
lods
mov
jmp
pop
in
negb
push
add
xor
and
sbb
scas
in
and
and
inc
add
jge
sbb
addl
jge
pop
inc
add
jbe
enter
pop
leave
xchg
ss
inc
or
stc
and
call
sbb
push
ret
xor
and
mov
mov
cwtl
dec
notl
shl
xor
repz
adc
add
ljmp
fwait
sarl
push
aad
in
pop
iret
jae
add
sub
add
or
mov
hlt
inc
add
xchg
lods
cld
or
mov
or
add
lret
jno
sub
in
jecxz
add
lret
adc
aam
xor
xchg
cmovo
addb
push
adc
aam
out
adc
stos
and
out
mov
add
out
lds
pop
mov
cmpsb
lcall
push
add
je
lods
sub
lea
cmp
dec
jae
add
add
enter
cmp
sti
dec
cmp
push
mov
xor
add
mov
movb
xor
pop
sub
pop
fwait
lahf
pop
in
cld
nop
lds
arpl
jbe
addb
cmp
xor
pop
add
in
aaa
in
jbe
lret
andl
cltd
xchg
xor
sub
add
jl
push
xor
neg
dec
pop
mov
add
popa
mov
imul
jg
add
inc
mov
mov
inc
and
fistl
cld
daa
shrl
or
pushf
cmp
jge
add
stos
fnclex
sbb
mov
add
dec
fmull
adcl
test
enter
add
push
mov
push
fildl
add
les
and
xchg
adc
mov
in
lods
rolb
push
add
adc
cwtl
jl
hlt
ja
adc
std
scas
xchg
fwait
add
mov
add
sub
movsl
xor
cmp
movb
adc
test
je
daa
addr16
jno
add
pusha
add
xchg
inc
jne
xchg
fstpt
adc
xchg
test
mov
xor
sarl
rcr
push
scas
lcall
icebp
mov
aad
or
xchg
fistps
xchg
hlt
jbe
mov
out
dec
cmp
or
fsubrl
pop
int3
lods
sub
scas
add
sub
adc
int3
cli
bound
mov
in
cmp
sub
jo
xchg
cmp
daa
xor
xor
shrl
popa
and
jne
add
stos
fwait
insb
lcall
sbb
cld
fbstp
mov
les
mov
push
mov
xchg
jg
jne
inc
add
mov
subl
test
adc
mov
adc
mov
fnsave
inc
loope
in
scas
test
aad
cmp
rolb
xor
push
stos
push
xchg
xchg
xchg
shlb
inc
add
or
gs
jecxz
sahf
fimull
pop
mov
sahf
xchg
mov
jne
add
pushf
pop
xor
add
roll
jge
mov
cmc
cld
aad
rolb
ja
push
add
add
add
inc
add
je
sbb
in
lea
add
idiv
rolb
pop
xchg
inc
add
mov
dec
loopne
ja
xor
jne
psubusb
fcomi
mov
in
repz
ds
scas
xor
sub
mulb
adc
loopne
mov
xchg
lods
js
pop
lret
cwtl
sub
fcoms
and
test
jnp
lds
bound
push
or
add
and
movzwl
add
xor
lcall
fs
insl
or
add
loop
sbb
lds
iret
aas
popf
or
iret
rcr
sahf
cwtl
outsb
and
jmp
ret
fstl
leave
das
aad
pop
clc
mov
stos
js,pt
ret
fildl
cld
xchg
xor
and
add
inc
mov
or
push
insb
fwait
mov
xchg
jmp
inc
add
imul
xchg
jne
push
pop
out
push
loope
movsl
jo
fsts
mov
pop
je
insl
and
bound
test
mov
pop
leave
pop
gs
or
cmp
sub
in
or
dec
repnz
dec
xchg
adc
das
test
add
mov
cmp
push
fwait
pop
pop
mov
mov
fs
xchg
sbb
repz
or
repz
movb
mov
lcall
hlt
out
xchg
jnp
mov
push
mov
cwtl
xchg
pusha
add
sub
adc
add
shll
divl
in
sbb
and
push
jl
push
push
xchg
negb
jae
imul
pusha
add
test
addr16
mov
mov
lret
les
add
sub
and
jae
add
cli
sub
jne
aas
pop
mov
pop
scas
outsb
call
stos
or
cmp
nop
out
and
pop
cmp
movb
pop
je
and
lcall
popl
add
cmp
jbe
mov
fistpl
xor
sbb
mov
pop
out
xchg
add
add
mov
jne
add
adc
mov
add
sbb
xor
mov
mov
mov
mov
jle
mov
add
xchg
cmp
sub
pop
or
movsl
loope
mov
mov
imul
pop
adc
add
movb
rcrb
inc
cltd
sti
cmpsl
xchg
imul
adc
addb
dec
jle
inc
add
aas
adc
int3
out
popa
mov
add
pop
mov
add
mov
inc
add
and
lods
inc
outsb
stc
mov
popl
add
or
mov
pusha
add
imul
cmc
sub
add
dec
stos
jae
adc
loopne
cltd
insb
add
jo
add
add
es
testb
jae
cmp
or
sub
nop
sbb
xlat
jg
push
ret
add
loope
movsb
fdivrl
enter
pusha
add
push
jns
xchg
cmp
and
push
cmp
test
xchg
data16
in
push
jmp
aas
int3
leave
cmpsl
sub
mov
push
mov
xchg
mov
lret
std
adc
icebp
mov
add
add
pop
cmp
dec
aas
call
push
test
ja
or
sbb
mov
add
and
out
fldenv
dec
push
jg
add
xor
sub
fimuls
dec
mov
mov
cmc
adc
mov
daa
addb
outsl
and
sahf
incl
popa
cld
shl
and
in
addb
iret
xor
cli
sub
inc
pop
scas
jl
sbb
cmp
insb
xchg
and
and
hlt
rolb
call
pop
or
adc
ficoml
jo
sahf
movb
add
push
add
ja
mov
addb
push
jl
aaa
jne
arpl
xor
mov
or
or
sub
stos
sar
aaa
xchg
or
or
inc
roll
push
add
addr16
nop
jge
add
lcall
je
mov
inc
in
mov
hlt
or
dec
ja
pop
leave
stos
int3
dec
lret
std
inc
add
pop
std
cmpsb
iret
add
add
or
sub
adc
and
scas
xor
sbb
add
xchg
je
js
les
popa
mov
add
dec
xchg
jg
add
loop
add
int3
cltd
jmp
push
movsb
adc
clc
pusha
add
add
adc
dec
pop
pop
cmp
mov
in
mov
mov
sub
fmuls
into
int3
dec
mov
popa
insl
xor
add
xchg
pop
push
push
xor
mov
sbb
cmp
pop
jne
and
dec
dec
and
ds
mov
jb
inc
std
jmp
pop
push
insb
jb
xor
dec
ficomps
addb
push
mov
stc
xor
outsl
divl
test
push
xchg
popa
dec
js
outsl
dec
push
mov
or
and
in
jecxz
inc
add
aas
push
leave
push
add
faddl
mov
jp
imul
inc
pusha
add
mov
in
iret
cmpsl
in
mov
mov
jo
push
mov
inc
add
inc
add
enter
outsb
mov
jle
dec
add
addb
fists
mulb
adc
js
fimuls
jmp
sbb
loope
lds
xchg
addb
into
icebp
rorb
jg
rorb
daa
pop
push
out
jne
add
or
jbe
addb
rcll
lcall
xchg
pop
in
jo
add
pop
lret
jmp
sub
test
outsl
call
outsl
aaa
lods
xchg
pushf
sub
lea
imul
jo
rcrl
mov
push
imul
movsb
cmpsb
mov
bound
lcall
dec
push
pushf
cmp
leave
gs
addr16
push
jnp
stos
stos
pop
daa
rcll
xchg
lds
add
mov
imul
int3
dec
sbb
cwtl
leave
cld
or
mov
jmp
sub
push
es
scas
loope
sub
bnd
ret
sbb
fstpt
add
xor
inc
shrb
add
imul
cmp
imull
insl
xchg
xchg
sbb
sub
sub
popa
xchg
shl
xchg
push
inc
add
cmc
and
mov
mov
push
add
and
xor
add
add
dec
adc
mov
mov
push
sbb
in
stos
fstl
add
inc
push
xor
or
and
repz
mov
mov
and
mov
pop
out
in
sub
lods
ficoms
mov
ljmp
hlt
jne
jo
pusha
add
call
repnz
add
ja
jl
cld
and
add
in
lret
fistpl
sub
repnz
add
add
xorl
mov
mov
xor
add
xor
sbb
mov
inc
add
aas
movsl
cmp
movb
add
dec
and
xchg
lods
mov
add
stos
addb
fdivrs
cmp
loopne
xor
imul
test
lcall
dec
push
pop
arpl
jb
xor
push
mov
rcrb
mov
fldl
loopne
or
xor
jmp
fwait
add
cmp
add
out
icebp
sub
cmpsl
frstor
dec
xchg
cmp
fimull
stos
sub
mov
add
xchg
sub
mov
repz
dec
inc
add
fcomps
xchg
loopne
scas
fwait
hlt
mov
sbb
in
ja
lea
pop
cmc
jmp
add
mov
imul
loope
pop
stos
cmp
rolb
mov
dec
xor
sbb
rcll
mov
stc
adc
add
cltd
gs
out
push
add
jmp
and
lret
add
call
daa
bound
cmp
add
jo
or
cmp
rol
add
out
mov
mov
sbb
jbe
cmc
pop
mov
imul
add
loop
mov
sub
pop
push
xchg
pop
jecxz
rcrl
hlt
mov
dec
cmc
and
leave
cmp
rcll
lcall
cmp
addr16
xchg
jo
gs
add
add
sbb
loop
imul
push
pop
test
in
jecxz
and
mov
les
dec
das
dec
and
add
xchg
xor
adc
add
and
sbb
pop
out
insl
aad
add
mov
jmp
in
push
or
fidivl
add
adc
popl
movsb
das
push
push
jae
lret
ret
nop
jge
add
lock
stc
dec
outsl
lahf
mov
lods
sub
lds
mov
rcl
imul
or
add
lock
jo
add
dec
out
lcall
pop
adc
lods
in
sahf
js
inc
aad
ret
xchg
bound
leave
stc
in
sbbl
shll
sub
xchg
mov
pop
stc
out
pop
icebp
jb
ds
hlt
outsl
mov
addr16
add
xor
aad
fdivr
movsb
addb
loope
mov
call
movb
sub
add
sahf
pop
movl
mov
adcl
pushf
add
sbb
rorl
mov
lret
addb
push
mov
cmp
adc
mov
adc
iret
add
pop
mov
leave
cld
mov
nop
pop
adc
xor
xor
inc
add
cld
add
mov
push
out
push
and
push
iret
push
add
ret
nop
jge
sub
add
shll
xchg
imul
push
jnp
cwtl
sbb
xor
and
mov
dec
inc
add
push
call
sub
scas
mov
xlat
xlat
xchg
push
test
sbb
push
push
and
adc
lret
or
les
mov
and
pop
pop
repnz
mov
pop
jle
bound
inc
daa
nop
lods
jae
pop
xor
ljmp
xchg
xor
mov
loopne
mov
dec
mov
adc
into
leave
mov
push
leave
pop
cmp
movb
xchg
mov
or
xchg
nop
call
sbb
mov
cmpsb
xor
jne
lret
gs
jbe
push
mov
inc
add
xor
mov
and
add
lds
pop
lcall
arpl
mov
popaw
dec
iret
push
adc
mov
mov
add
arpl
xor
mov
divl
cmp
add
mov
aas
stos
pop
popf
and
out
das
insb
xchg
cmp
xor
dec
adc
inc
add
add
xchg
popa
xchg
xchg
push
incl
in
scas
inc
add
les
cs
add
pop
and
add
sub
mov
pop
sti
jnp
add
sub
in
insw
sbb
add
addr16
scas
pop
pop
or
jmp
jo
pop
inc
int
fdivrs
fwait
push
imul
sub
add
das
mov
mov
sbb
xor
popa
xor
sub
aam
push
mov
jo
add
push
test
or
add
repnz
hlt
pop
icebp
in
stos
adc
insb
movsl
in
xor
push
pop
int3
addb
outsb
adc
stos
bound
push
sub
fldenv
ret
and
daa
cmp
dec
out
cmpsl
mov
fisttpll
mov
cmp
mov
mov
into
mov
add
push
fmul
push
add
mov
pusha
add
cmc
cmp
mov
pop
leave
dec
adc
das
cltd
pushf
or
and
ret
sbb
or
into
cmp
std
xchg
int
add
fidivrs
fwait
jb
mov
sbb
hlt
dec
and
in
dec
cld
lcall
mov
add
lea
sub
mov
add
and
pop
mov
das
and
xchg
and
add
fbld
add
inc
xchg
movb
popf
loopnew
sbb
in
sbb
add
lcall
xchg
les
rcll
push
mov
fdivrp
inc
xchg
in
adc
test
inc
add
stos
or
xchg
enter
jp
jae
dec
cmp
pop
xchg
or
lea
daa
clc
addb
jle
mov
sub
lds
adc
add
cmpsl
int
leave
leave
xchg
aaa
mov
mov
add
in
pop
loope
xor
pop
adc
lea
sub
mov
jp
cmp
andps
add
jo
adc
push
inc
adc
out
in
dec
jp
mov
or
xchg
push
add
jb
jbe
add
jl
sbb
sbb
pop
and
sbb
cmc
or
pop
pop
push
es
sub
shrl
jb
xchg
add
add
nopl
lea
dec
dec
lea
add
cmp
xchg
in
jmp
or
cmp
pushf
or
lahf
in
xchg
test
jo
pop
jns
pop
jecxz
adc
jnp
sbb
mov
es
fildl
push
sbb
add
fmul
inc
add
int
adc
adc
lods
jo
cmp
jns
add
push
int3
ret
iret
rorb
inc
add
and
cwtl
pop
les
fidivrl
test
pop
fucomi
test
arpl
int
add
pushf
sub
loopne
push
sbb
and
in
pusha
add
test
push
fsubl
xchg
inc
mov
repnz
xchg
dec
nop
push
inc
add
outsb
mov
stos
cmpsl
pop
xchg
ds
cwtl
insb
push
mov
rcll
test
add
out
stos
pop
dec
lret
into
scas
mov
mov
add
jp
sbb
gs
inc
add
mov
pushf
scas
jns
jl
inc
add
enter
shrl
mov
testb
add
das
or
roll
mov
jae
mov
cmpl
scas
pop
mov
int
cld
mov
stos
xchg
sub
mov
mov
fistpll
jb
add
push
add
and
fbstp
add
add
aam
aas
dec
insl
arpl
lret
xlat
push
jno
or
add
out
jmp
fmull
jle
jo
test
mov
mov
mov
add
push
jns
add
push
les
push
js
jmp
sub
inc
add
mov
movsb
mov
xor
bswap
out
sbb
add
push
push
fwait
sub
aas
fbld
jnp
jne
add
pusha
add
and
es
add
mov
or
rcll
jecxz
ss
mov
rcll
xchg
je
fisubl
into
imul
insl
mov
daa
mov
call
mov
add
fdiv
addb
mov
add
dec
addb
dec
and
xchg
pop
mov
imul
ds
pop
mov
in
addr16
add
and
rorl
and
add
add
push
mov
xchg
outsb
or
scas
movsb
add
jp
dec
stos
xchg
dec
test
add
int
pop
lds
and
mov
daa
push
js
add
add
popa
in
aas
cmp
cmp
pop
sub
arpl
sub
fidivrs
dec
insb
pop
jo
add
push
xor
ljmp
add
push
into
cltd
sti
les
jae
push
loope
xor
inc
xor
call
mov
lahf
loopne
fcoms
nop
loope
jg
clc
daa
inc
add
int3
mull
add
fwait
push
push
xor
outsl
insb
push
mov
aad
mov
add
outsb
push
std
out
scas
cmp
pop
mov
add
add
jns
add
das
push
xor
ret
pop
fwait
jno
addb
add
mov
mov
add
das
sub
data16
insb
scas
inc
daa
ja
push
mov
aam
add
lahf
push
iret
mov
adc
push
add
mov
add
jo
inc
add
push
xor
add
cmpsl
inc
adc
int
leave
jge
push
mov
movb
repz
jne
repnz
and
mov
test
mov
loopne
xorl
pusha
add
or
xor
mov
sbb
add
loopne
popf
or
scas
mov
nop
fsubr
mov
enter
inc
pop
std
pusha
add
fstpt
xorl
jg
adc
loop
adc
xor
ja
add
and
and
jg
repz
sub
addr16
cmc
addb
out
and
call
xchg
xor
lahf
mov
bound
leave
jno
cmpsb
flds
loope
adc
outsl
adc
jbe
push
fldenv
ss
sahf
insb
je
pusha
add
cltd
pusha
add
into
jp
loope
add
mov
stos
stos
sahf
shll
addr16
fisttps
mov
xchg
mov
mov
add
sub
jnp
add
xchg
rolb
mov
mov
mov
inc
add
negl
scas
pop
stos
ret
pop
lods
mov
imul
lahf
jp
add
aas
int3
xchg
mov
js
lret
scas
roll
xchg
ret
sub
int
pop
xchg
dec
js
lock
mov
negb
fistl
dec
data16
cwtl
insl
scas
lds
fadd
add
add
sbb
adc
inc
add
cmp
sbb
movb
cmp
pop
or
mov
or
js
push
leave
inc
sbb
das
mov
and
sub
data16
popf
sahf
or
xor
add
add
fcmovbe
and
pop
push
add
mov
inc
add
and
add
shl
mov
add
int
sbb
movsb
mov
stc
leave
loope
sub
pop
mov
jg
idivb
mov
mov
xchg
neg
pusha
add
sbb
leave
inc
mov
sub
js
addb
enter
adc
xchg
dec
sub
push
cmp
xor
inc
add
pop
xchg
xor
mov
inc
fwait
and
outsl
out
xchg
and
scas
mov
add
adc
sbb
jno
add
fmul
push
dec
mov
mov
add
fxch
jne
inc
decb
ljmp
xchg
ljmp
mov
pop
dec
sahf
sub
inc
scas
sbb
test
ret
fcmovne
insb
nop
aad
stos
ja
scas
jnp
xchg
lret
jnp
in
aam
lahf
inc
mov
dec
aas
xchg
inc
arpl
dec
push
cmc
cmc
daa
sub
sbb
fstpl
fsts
mov
xchg
jmp
test
pop
shl
dec
fsubrp
popa
popa
test
imul
arpl
insb
imul
cld
dec
push
add
push
inc
add
xchg
jmp
push
stos
mov
inc
add
mov
js
adc
inc
in
mov
push
dec
mov
push
pop
arpl
add
xchg
aad
mov
dec
mov
sarl
sub
clc
adc
in
dec
enter
inc
fisubl
fisubrl
addb
pop
or
repnz
mov
lock
in
insl
orl
xchg
adcl
mov
iret
movb
cmpsl
aam
mov
daa
mov
iret
add
enter
sub
sub
stos
fsubs
add
mov
sub
aaa
add
mov
xor
add
push
mov
jmp
add
xchg
jl
or
inc
mov
dec
mov
add
mov
jae
fistl
add
mov
fdivrl
add
test
xchg
pop
outsl
sbb
repnz
mov
out
dec
xchg
dec
dec
mov
daa
mov
xchg
ret
in
jne
pop
out
int
jo
dec
add
and
cmp
mov
lock
int
inc
or
fucomp
sub
bound
mov
jg
pop
out
test
dec
movsb
pop
aam
mov
in
fbstp
fwait
xor
inc
das
or
mov
mov
cmp
add
dec
push
xchg
sahf
fnstcw
pop
rolb
in
insl
cmpsb
pushl
add
in
stc
pmaddwd
add
enter
and
aam
add
xchg
imul
pop
add
loope
enter
fildl
sub
fisttpl
jae
mov
jmp
movsb
lahf
addb
cmp
icebp
cmp
sbb
add
add
in
stc
sub
push
add
inc
add
mov
ds
pop
cmp
pop
ret
jp
add
fwait
in
aad
push
add
das
mov
loope
mov
push
push
in
add
push
inc
add
test
dec
adc
push
mov
aam
std
es
mov
int
movsl
ss
sub
mov
fcoml
add
inc
add
ss
rol
add
add
lahf
pusha
add
int
add
mov
xchg
cmpsl
repz
out
in
adc
push
rolb
fwait
and
jl
push
add
int
xor
lret
int
mov
pop
push
outsb
xchg
jmp
imul
scas
test
add
stc
cmp
divb
mov
xchg
outsb
pop
mov
mov
mov
movb
or
dec
cli
stos
inc
dec
and
ret
psubb
xchg
and
ret
jne
fnstsw
fildl
mov
or
test
aas
dec
fadd
add
cmp
insb
lods
rol
add
or
daa
push
jb
rolb
inc
add
je
cld
nop
sbb
cmp
pop
rcll
movb
mov
dec
imul
or
jns
xchg
jg
ror
cmp
push
pop
addr16
xlat
ss
mov
cmpsl
out
fnsave
lds
inc
xor
inc
add
pop
and
add
fadds
add
mov
cwtl
sub
sub
mov
sbb
add
fstpt
outsl
gs
sbb
repz
add
or
add
loope
cwtl
cwtl
fadds
das
loopne
ret
aas
xchg
adc
jns
das
ljmp
and
push
arpl
adc
lahf
sub
push
mov
lock
lods
stos
in
mov
mov
push
push
mov
mov
inc
in
mov
pop
nop
or
ret
out
push
lahf
lock
and
pop
mov
xchg
repz
lds
loopne
jo
imul
fbstp
arpl
mov
ja
scas
xor
mov
cmp
add
mov
mov
rcrl
xor
add
dec
insl
aam
nop
dec
shll
pop
sub
push
mov
rcrb
inc
add
jns
iret
aaa
jmp
js
cmc
decb
xchg
jae
andl
xchg
inc
xchg
rolb
mov
lcall
arpl
pop
mov
cltd
scas
cmpsb
fs
lea
jp
add
fbld
add
stos
jle
mov
scas
cmp
add
and
mov
and
add
cmp
addb
das
ret
arpl
or
rolb
sbb
xor
add
test
push
arpl
push
imul
in
cld
mov
jno
sub
mov
addr16
mov
fsubl
into
dec
pop
jecxz
jns
pusha
add
rcll
jp
das
adc
pop
imul
mov
jmp
icebp
cmp
sbb
mov
pop
es
push
fldenv
outsb
sbb
ss
xchg
adc
in
inc
add
fst
ds
subl
int
iret
nop
sti
sarb
or
push
cld
divb
xchg
loopne
out
int3
fcmovnb
cld
adc
stc
jl
dec
jb
rolb
and
pusha
add
cmp
loope
add
xor
mov
add
sub
cld
mov
in
movb
cmp
mov
imul
mov
sub
pop
sub
inc
pop
inc
add
lock
lahf
sti
into
in
jne
mov
or
icebp
cltd
pop
lahf
in
in
rol
xor
lds
xchg
jg
mov
add
repnz
int
stc
cmp
jb
add
mov
pop
push
fnstsw
sbb
je
std
insb
adc
pushf
ss
addb
punpcklbw
sbb
cld
xchg
imul
add
xchg
repz
push
cmp
mov
outsl
jle
add
xchg
or
inc
mov
jp
xor
bound
sbb
out
mov
std
adc
ljmp
mov
addl
xchg
into
std
cmc
or
sbb
add
sub
add
addr16
bound
mov
push
add
or
or
movsl
pop
jns
mov
outsb
movsb
xlat
push
and
and
add
sbb
mov
and
lret
xchg
jns
fs
dec
arpl
cwtl
addb
data16
aaa
mov
mov
add
inc
int
pop
mov
add
out
ret
add
fisubl
jecxz
out
gs
add
sbb
pop
movsb
jno
and
rolb
pop
lds
inc
add
rorb
cmp
jb
push
add
lods
shll
addb
adc
sahf
jbe
imul
push
dec
movl
lret
cmp
xchg
mov
dec
xor
fcmovnb
in
or
add
out
jne
mov
cli
jo
mov
add
sub
adc
loope
add
push
mov
lret
xor
pop
pop
std
stos
inc
fldcw
inc
mov
inc
add
pop
cmp
fwait
or
mov
cmc
lods
aas
inc
add
add
decb
jb
jmp
mov
fistps
add
and
enter
int
xchg
out
mov
push
xchg
inc
add
pop
jecxz
pop
dec
add
mov
inc
xchg
inc
jecxz
insl
add
loop
pusha
add
push
push
push
add
xor
repz
mov
imul
add
sub
mov
out
xchg
movsb
fisubrl
enter
popf
cmp
inc
scas
cmp
movsl
cmp
call
push
leave
rolb
mov
addb
inc
dec
in
xor
negl
jg
inc
add
enter
std
outsb
push
cltd
ds
divl
add
in
push
xchg
dec
sti
dec
mov
jne
mov
loopne
lahf
stc
mov
xchg
pushf
imul
sbb
sub
mov
jmp
push
push
push
mov
rcrb
xor
aas
adc
js
popf
dec
out
cmpsb
les
aaa
pop
test
shlb
imul
mov
sbb
jns
jg
jae
das
pop
sbb
sub
das
imul
add
xor
out
add
add
mov
add
loopne
iret
add
adc
fstps
add
add
sbb
dec
roll
movsb
stos
outsb
jge
add
push
insb
int3
jo
adc
arpl
jae
jg
scas
lret
xor
aaa
dec
fildl
cli
stos
adc
mov
jo
ds
outsb
mov
add
sub
add
mov
fwait
mov
add
outsb
sbb
pop
mov
jne
sub
add
call
xchg
cmp
ret
outsl
jne
mov
outsl
pop
je
sub
xchg
adc
rorl
call
lock
add
inc
outsb
mov
mov
xchg
lahf
mov
lods
xor
mov
pop
add
sbb
inc
jge
stos
movsb
dec
mov
and
addr16
pop
loopne
insb
sub
add
push
aam
movb
test
leave
jge
shll
xchg
dec
cld
stos
je
imul
add
xor
fisttpl
ss
mov
es
add
cmpsb
mov
dec
loopne
cmp
xor
inc
add
frstor
in
fidivrl
aam
adc
dec
outsb
loope
ret
mov
std
addr16
mov
sbb
pop
mov
cs
adc
popa
notb
arpl
mov
std
outsl
mov
outsb
xchg
dec
out
fwait
xor
sbb
aas
xor
jge
xchg
sti
pop
jmp
add
and
and
mov
add
add
or
jb
fistpl
push
mov
mov
xlat
push
mov
push
dec
jl
ja
lahf
add
mov
inc
add
jne
std
mov
add
add
sbb
fiadds
push
aas
inc
add
addl
mov
es
cmp
add
popa
mov
cwtl
push
or
mov
call
jmp
sub
xchg
jmp
inc
divb
jnp
mov
push
into
sti
mov
jle
addb
mov
xor
addr16
shll
addr16
popf
mov
rolb
add
fldt
mov
and
add
add
hlt
cli
dec
lret
scas
cli
xchg
push
pop
dec
out
lahf
lock
adc
add
stos
dec
pop
loopne
or
add
dec
insb
cmc
mov
or
scas
xor
movb
aas
push
test
cmp
and
adc
arpl
add
cli
jl
cwtl
sbb
jg
les
lea
fwait
rcrb
imul
inc
add
fnstcw
dec
mov
fucomi
add
jb
push
out
fisttps
std
fdivrl
aaa
mov
movsb
xor
iret
jmp
addb
or
add
stos
stc
mov
xchg
mov
add
insb
movsl
addb
xchg
jp
xchg
lahf
inc
add
adc
adc
mov
cmp
loop
hlt
xor
icebp
stc
insl
cmpl
add
push
leave
mov
mov
dec
adc
pop
and
add
in
mov
in
pop
and
pop
sub
mov
popf
cmc
lods
mov
xchg
jge
add
in
pop
scas
dec
sub
adc
les
cmp
mov
sbb
and
xchg
mov
adc
jae
cmp
dec
mov
or
mov
add
jecxz
add
sti
or
out
add
lahf
imul
add
lret
repz
sub
adc
xchg
add
mov
mov
jp
aam
sub
ss
push
out
mov
popf
in
test
ja
mov
mov
mov
shl
mov
fdivrs
sub
outsb
insb
and
jle
dec
dec
data16
idivl
das
mov
dec
lock
out
les
ror
xchg
insb
sub
add
add
push
xchg
mov
das
or
movsb
xchg
aaa
xchg
in
mov
call
add
ljmp
add
mov
push
test
cmc
inc
add
push
and
jno
cli
movsb
push
addr16
cld
jnp
enter
mov
jae
pop
lock
dec
mov
addb
add
repz
add
dec
dec
ds
pushf
jbe
and
mov
out
popa
adc
cwtl
sti
mov
pop
add
fsubrl
mov
jge
mov
mov
cmp
and
pop
jb
sbb
ss
shrb
rolb
push
addb
add
loopne
add
add
mov
outsb
mov
dec
fsubs
add
mov
push
bnd
popa
fimuls
shlb
and
dec
mov
add
cs
inc
add
mov
int
inc
add
ds
nop
cmpsl
jp
lods
xchg
add
adc
insb
pop
cmovge
dec
into
test
add
mov
push
pop
pop
test
xchg
bound
call
mov
addb
jns
add
iret
push
stos
inc
add
icebp
jl
jp
incl
add
add
mov
mov
and
push
rolb
push
or
add
dec
sub
add
nop
loope,pt
inc
fcompl
push
sub
push
addb
popf
or
cli
cmp
pop
mov
jmp
ss
inc
add
mov
and
outsl
push
mov
into
jo
cltd
mov
push
cmp
add
test
xor
mov
mov
cmp
dec
clc
jge
test
gs
inc
and
sarl
test
ds
mov
pop
jmp
mov
push
mov
je
xor
add
xor
lret
adc
or
pop
dec
adc
add
out
sbb
mov
imul
loopne
xchg
sbb
or
lcall
push
idivl
mov
add
movb
xor
ficomps
mov
in
mov
addb
mov
test
jmp
push
pop
stos
rclb
sahf
test
inc
stos
lods
daa
sbb
cmpl
jl
lods
and
ljmp
jno
mov
addb
mov
pop
aam
cmp
push
mov
pop
dec
mov
je
repz
add
or
jbe
fiaddl
jb
pop
dec
xchg
mov
cmpsb
xor
add
andl
add
add
dec
mov
jmp
xor
scas
mov
mov
push
psllw
es
out
xchg
pushf
mov
dec
ret
and
shrb
testb
jne
and
mov
add
xchg
fidivs
add
ss
sbb
pop
mov
jge
lds
cmp
xor
pop
rol
add
push
addr16
add
jne
sub
push
add
out
hlt
mov
loop
mov
add
dec
inc
add
loope
ss
or
addr16
dec
xchg
pop
and
repnz
pushf
call
std
add
ja
jo
sti
push
in
enter
mov
add
out
xchg
mov
sub
sarl
in
mov
mov
icebp
and
mov
mov
sbb
jns
adc
imul
cmp
nop
mov
push
mull
xor
imul
xchg
dec
or
xor
sub
mov
add
shl
mov
xchg
ljmp
bound
jae
hlt
dec
out
jle
add
loope
jb
and
push
and
xor
daa
das
jae
inc
add
ljmp
mov
push
xor
popa
xor
stos
sub
shrl
jnp
js
add
cmc
jg
mov
pop
push
mov
cltd
test
inc
add
in
jb
popf
cmp
dec
push
cmpsb
fisubl
add
loope
push
xor
jns
sub
lock
popa
cmc
cmc
sbb
arpl
sbb
mov
pusha
add
fwait
fwait
push
inc
jo
mov
lock
aaa
sbb
mov
fstl
dec
xor
mov
cmc
outsl
movsl
lea
mov
lock
fldt
cmp
mov
idivb
in
or
pop
mov
arpl
in
sbb
clc
cmc
arpl
lahf
rolb
mov
test
add
jp
movsb
xchg
pop
scas
mov
mov
sbb
pop
ficoml
sbb
mov
movsb
xchg
jo
fwait
negb
mov
dec
fnsave
sbb
cmp
mov
mov
js
leave
subl
lods
mov
xor
pop
mov
cltd
daa
add
sub
pop
jecxz
xchg
add
add
movsb
jle
add
ds
dec
jnp
xchg
testl
scas
add
dec
je
insb
iret
iret
lcall
adc
in
cmp
sbb
lds
dec
lret
add
push
adc
scas
or
iret
sbb
mov
jae
push
xchg
push
test
add
mov
pushf
cmp
add
in
scas
xchg
fsubp
cmp
pop
test
scas
xchg
lods
jb
cmp
add
aas
mov
addr16
xchg
add
mov
aam
shrl
push
lods
or
rcr
aaa
fldenv
pop
pop
pop
cmp
movsl
mov
add
pop
pop
jp
iret
in
cmpsl
jmp
gs
or
mov
test
std
loope
add
sahf
xchg
insl
xor
inc
xchg
push
sbb
loop
fnstenv
add
mov
scas
mov
test
xchg
unpcklps
push
sub
xchg
loope
fisubrs
imul
jne
out
in
int
dec
dec
test
aad
cmpsb
dec
dec
push
mov
jbe
sbb
or
or
add
les
int
dec
bound
hlt
xor
push
add
jmp
es
sub
add
aaa
movsb
mov
les
iret
and
outsb
sub
add
iret
xor
jo
aas
loop
loopne
out
rclb
cmp
out
sarl
andl
jbe
add
movb
aaa
lock
xchg
adcl
insb
pushl
stc
pop
mov
ja
sbb
ljmp
jne
lds
sub
adc
popa
xchg
add
jbe
jle
add
add
out
inc
dec
movsb
lret
add
and
sbb
xlat
cmp
dec
pop
push
stos
pop
imul
lea
jno
mov
pushf
test
shll
iret
call
inc
shlb
addb
addr16
fstpl
sbb
xchg
sahf
int
test
pop
sbb
add
or
pop
les
jmp
xchg
jbe
mov
inc
add
in
test
fmulp
es
divb
int
out
push
rcl
repnz
inc
add
cwtl
and
movsb
inc
add
add
or
insb
jbe
pop
push
fcmovbe
imul
or
push
mov
add
ljmp
mov
fdivrs
sbb
aaa
fadd
add
movb
mov
aas
push
dec
adc
push
pusha
add
les
movb
push
pop
dec
into
loopne
pop
or
stc
jae
jecxz
inc
add
cmp
cmp
fistpl
fbstp
ret
scas
cmc
add
cmp
or
cwtl
adc
add
or
lods
daa
call
ret
out
or
movsl
sub
inc
mov
and
jecxz
cmp
dec
jecxz
xor
pop
arpl
add
add
sub
mov
inc
add
addb
repz
push
xor
fisubl
jb
adc
aam
jb
inc
ret
aaa
add
sub
inc
add
adc
add
adc
rclb
movswl
xor
pop
and
sbb
testl
js
daa
mov
imul
add
mov
lahf
push
add
call
add
push
add
inc
add
jb
push
add
push
cld
mov
stc
jb
add
add
lock
stc
jb
mov
and
dec
nop
jmp
add
cmp
add
loopne
xchg
push
popa
add
mov
xor
add
nop
jmp
das
add
pop
mov
stc
jb
add
lret
adc
jb
add
mov
popa
add
jb
add
add
add
mov
stc
jb
add
cmp
add
jb
add
push
addr16
pop
mov
stc
jb
xor
mov
je
stc
jb
mov
repz
add
add
cmp
movsb
add
add
stc
jb
add
cmp
add
or
sbb
add
stc
jb
xor
add
and
add
repnz
mov
repnz
icebp
stc
jb
lock
push
roll
das
out
add
lea
push
mov
xchg
ret
add
push
icebp
lods
xchg
stc
jb
add
xchg
imul
jb
sar
add
mov
mov
add
stc
jb
add
bound
add
stc
jb
pop
xor
inc
fildl
inc
push
add
pop
pop
add
or
add
jb
add
add
ret
test
nop
jmp
mov
imul
add
stc
jb
add
movsb
add
leave
mov
stc
jb
add
add
addr16
mov
mov
add
jb
or
add
scas
xchg
push
movzwl
stc
jb
mov
add
movb
ret
stc
jb
xchg
add
mov
sbb
dec
subl
push
mov
xchg
ret
add
add
movzwl
stc
jb
lcall
stc
jb
add
add
add
add
int3
push
stc
jb
add
inc
add
add
std
mov
cli
inc
add
add
add
cmp
add
sub
mov
and
push
mov
xchg
ret
enter
int3
push
stc
jb
mov
movsb
mov
imul
add
jb
add
add
addb
push
push
pop
or
jb
imull
mov
rclb
and
inc
add
add
xlat
lock
popa
stc
jb
add
add
mov
mov
push
mov
xchg
ret
add
add
push
mov
xchg
ret
roll
dec
jmp
nop
jmp
stc
push
enter
jns
cmp
lret
and
add
testl
adc
sbbb
int
mov
push
add
jae
call
stc
jb
add
inc
add
enter
mov
add
sbb
stc
inc
add
scas
inc
cmp
add
stc
jb
add
or
sbb
cmp
mov
mov
xchg
ret
and
scas
andl
push
add
movsb
add
cmovne
inc
add
ror
nop
jmp
int3
stc
mov
sub
jb
sbb
pop
inc
mov
pop
lea
stc
jb
add
add
add
mov
stc
jb
xor
popl
nop
jmp
das
bound
jo,pn
pop
jne
stc
jb
add
add
jmp
add
xchg
add
addl
add
add
stc
jb
mov
add
sbb
repnz
add
bound
add
pop
add
push
mov
xchg
ret
add
stc
jb
int3
add
movb
xchg
aam
push
stc
jb
add
addr16
add
stc
jb
mov
add
add
scas
mov
stc
jb
add
add
mov
stc
jb
std
add
push
stc
jb
enter
add
add
push
movl
cld
push
mov
scas
add
mov
pop
sldt
jns
add
and
sub
dec
stc
jb
xchg
mov
add
pop
pop
repnz
ljmp
add
push
cmp
nop
jmp
add
add
lcall
push
stc
jb
add
cmp
mov
add
nop
jmp
add
repnz
std
outsl
xchg
stc
jb
mov
add
lret
add
enter
add
add
add
add
stc
mov
stc
jb
add
add
scas
add
negb
cmp
call
incl
cmp
add
sbb
add
jb
add
push
mov
jb
stc
xor
inc
add
add
stc
jb
add
add
dec
sub
repnz
xchg
ret
add
bound
es
mov
push
add
add
add
add
sbb
add
nop
jmp
lock
inc
lret
stc
jb
add
mov
add
cmp
push
cs
stc
jb
push
add
movsb
add
stc
jb
add
add
add
nop
jmp
add
xchg
add
lcall
push
mov
xchg
ret
inc
push
or
add
fisttps
andb
push
sbb
add
add
and
stc
jb
add
mov
test
adc
push
mov
xchg
ret
movsb
and
int
or
mov
xchg
ret
add
xor
in
and
push
mov
xchg
ret
mov
popa
stc
jb
add
jnp
cs
mov
ret
dec
cltd
dec
mov
out
add
dec
nop
jmp
lock
divl
add
sub
and
add
xchg
lret
add
cmp
mov
stc
jb
push
int3
mov
or
stc
jb
cmp
jno
mov
stc
jb
add
add
add
cmc
sbb
xor
add
stc
jb
mov
in
stc
jb
mov
add
add
mov
push
mov
xchg
ret
add
addb
test
nop
jmp
add
add
jne
inc
add
add
or
repnz
pop
nop
jmp
rcrl
add
jo
add
add
stc
jb
add
inc
add
dec
add
push
mov
xchg
ret
add
add
test
incl
jnp
add
add
jne
mov
pusha
add
stc
jb
add
mov
add
pop
stc
jb
movsb
push
movsb
xchg
cmp
xchg
pop
jne
stc
jb
loopne
add
add
push
mov
xchg
ret
testl
xchg
add
add
jb
movsb
add
push
jno
mov
adc
add
mov
push
add
add
add
add
add
std
jne
stc
jb
repnz
jne
stc
jb
int3
mov
mov
push
mov
xchg
ret
inc
testl
orb
call
add
add
sub
shl
add
stc
jb
scas
inc
cmp
imull
push
clc
pusha
stc
jb
add
add
push
mov
add
call
pop
filds
or
stc
jb
add
push
push
imul
pop
nop
jmp
add
add
xchg
std
int
add
and
add
add
std
sldt
loopne
xor
stc
jb
xchg
cmp
add
jnp
inc
nop
jmp
add
add
imul
add
mov
fists
push
add
and
mov
scas
push
cmp
push
mov
xchg
ret
add
jns
fisttpll
sub
add
std
repnz
push
add
pop
stc
jb
add
add
add
das
sbb
stc
jb
enter
in
pop
jns
stc
jb
add
inc
das
add
push
push
stc
jb
push
add
loopne
lock
add
lods
mov
nop
jmp
add
jns
add
popf
mov
stc
jb
add
add
add
into
mov
nop
jmp
mov
cmp
add
push
inc
int3
mov
stc
jb
xor
and
mov
or
add
add
mov
jmp
add
push
add
bound
xchg
testb
and
add
pop
add
add
add
int
pop
jae
jb
add
add
lret
or
jb
int3
lret
xchg
add
pusha
push
mov
xchg
ret
enter
add
fstl
mov
xchg
ret
add
add
sarl
jne
stc
jb
add
xchg
loopne
mov
stc
jb
mov
mov
dec
stc
jb
bound
add
mov
test
add
stc
jb
mov
enter
mov
push
mov
xchg
ret
or
xchg
lods
pushl
stc
jb
push
add
add
push
mov
xchg
ret
add
lret
ds
mov
add
movb
add
add
jb
add
insl
push
stc
jb
add
add
inc
mov
lock
add
stc
jb
add
mov
stc
jb
add
int
mov
push
mov
xchg
ret
add
cld
or
sbb
add
xor
add
push
add
outsl
outsb
dec
fs
jb
das
pop
add
add
stc
jb
stc
inc
add
repnz
iret
xor
stc
jb
and
repnz
out
inc
add
mov
mov
popa
aad
dec
imul
stc
jb
das
add
add
add
push
add
mov
push
mov
xchg
ret
inc
mov
mov
stc
jb
movsb
cmp
add
leave
mov
stc
jb
add
add
push
lret
sbb
jmp
push
test
push
stc
jb
fstpt
add
loopne
in
xor
stc
jb
add
repnz
add
or
stc
jb
add
add
push
aam
call
stc
jb
add
add
std
xor
stc
jb
xchg
add
mov
mov
stc
jb
add
inc
jp
nop
jmp
add
add
inc
pop
testl
nop
jmp
add
subl
push
mov
xchg
ret
movsb
add
add
movb
jb
int3
jnp
loopne
push
pop
pop
stc
jb
add
add
int
jo
mov
stc
jb
repnz
mov
pop
incl
xchg
ret
loopne
push
ret
mov
push
mov
xchg
ret
add
add
xchg
push
insb
shl
stc
jb
add
mov
add
mov
nop
jmp
add
or
cmp
mov
stc
jb
add
add
es
aas
lea
nop
jmp
int3
add
push
cmpsb
scas
add
stc
jb
add
shll
stc
jb
xchg
add
push
jnp
add
mov
nop
jmp
add
or
jne
stc
jb
add
mov
stc
jb
jnp
add
add
add
jmp
nop
jmp
add
negl
push
stc
jb
mov
add
mov
add
test
jb
scas
add
add
stc
jb
add
add
inc
sbb
jg
push
mov
xchg
ret
cmp
add
jp
jge
stc
jb
xchg
das
add
jo
lcall
add
mov
add
add
mov
add
add
jb
mov
enter
int3
hlt
ljmp
mov
fsubrp
scas
hlt
stc
jb
cmp
jg
stc
jb
push
jns
add
shr
stc
jb
add
add
add
add
push
mov
xchg
ret
jns
movsb
add
leave
je
nop
jmp
int
sbb
in
push
push
mov
xchg
ret
lock
add
sub
mov
adc
jb
sub
xchg
add
stc
jb
mov
add
mov
stc
jb
xor
mov
nop
jmp
add
and
cs
lock
push
mov
mov
add
jge
add
imul
add
cmp
jb
das
inc
int3
add
jb
pop
mov
pop
add
lahf
lea
push
mov
xchg
ret
xchg
test
les
test
inc
loopne
jb
sbb
mov
xchg
cmp
push
stc
jb
add
pop
cmp
add
les
in
push
mov
jb
fildl
add
add
stc
jb
add
cmp
add
imul
nop
jmp
add
enter
mov
stc
jb
pop
mov
mov
sbb
mov
xchg
ret
stc
testl
popa
xlat
sub
test
stc
jb
add
and
nop
jmp
inc
setno
cmp
in
add
fldcw
sbb
lods
stc
jb
add
and
mov
inc
add
pop
add
add
jb
add
xor
jmp
fptan
call
add
add
stc
jb
add
pop
cmp
add
add
aas
stc
jb
add
add
bound
xchg
inc
add
mov
stc
jb
add
mov
add
fucomp
rorl
add
jb
jo
add
pop
mov
stc
jb
jo
cmp
inc
filds
jne
stc
jb
add
roll
mov
jae
imul
incl
lock
test
add
mov
inc
add
add
xchg
jnp
stc
jb
add
xchg
push
inc
test
popf
mov
stc
jb
add
add
add
jns
add
adc
push
mov
xchg
ret
add
sub
stc
jb
add
and
out
iret
add
stc
jb
sbb
or
jnp
hlt
sbb
stc
jb
inc
add
lock
and
fimuls
test
jb
and
add
leave
decl
push
mov
xchg
ret
add
push
mov
xchg
ret
add
jb
add
push
int3
add
imul
adcb
add
push
div
inc
bound
aas
push
push
mov
xchg
ret
add
sbb
add
add
push
push
mov
xchg
ret
add
std
xchg
add
popa
stc
jb
sub
add
add
lcall
add
add
or
mov
jbe
ljmp
icebp
incl
add
lock
bound
jp
movsb
stc
jb
fneni(8087
sbb
add
mov
stc
jb
add
add
push
lock
jb
add
mov
inc
add
push
push
mov
xchg
ret
stc
loopne
xchg
add
addb
add
mov
mov
test
push
mov
xchg
ret
cmp
mov
push
stc
jb
add
add
scas
jbe
xor
push
mov
xchg
ret
add
stos
push
mov
xchg
ret
mov
xchg
add
xchg
or
mov
sub
add
fisttpl
add
sub
roll
mov
stc
jb
add
xchg
loopw
push
push
mov
xchg
ret
loopne
mov
or
add
nop
jmp
add
addr16
cmp
jns
inc
push
mov
xchg
ret
add
xchg
or
mov
xchg
ret
shll
ltr
stc
jb
add
add
mov
stc
jb
add
inc
and
movsl
push
stc
jb
add
add
lds
stc
jb
pop
mov
add
and
add
incl
rorl
test
xchg
stc
jb
xchg
cmp
inc
repnz
xchg
jbe
add
stc
jb
xchg
stc
roll
and
cmpsl
lcall
jno
push
fistl
mov
mov
stc
jb
mov
cs
add
das
add
nop
jmp
add
sbb
add
add
movsl
pop
xor
add
call
nop
jmp
add
dec
nop
jmp
sbb
xchg
add
enter
jbe
js
shrl
jmp
add
imull
add
loop
xor
outsb
add
stc
jb
add
stc
jb
int3
add
add
add
mov
andb
incl
enter
add
negl
jb
scas
add
xor
xor
dec
incl
xchg
ret
lock
mov
add
sub
stc
jb
add
add
xor
nop
jmp
jo
add
add
scas
sub
mov
xchg
ret
add
add
add
add
stc
jb
add
int
mov
and
adc
mov
stc
jb
roll
add
mov
cmp
jmp
push
xchg
repnz
jns
mov
stc
jb
jo
add
jo
arpl
dec
add
stc
jb
inc
add
add
add
add
push
and
loop
mov
stc
jb
add
add
ret
add
pop
faddl
xchg
ret
jo
xor
and
jne
stc
jb
mov
add
cmpl
nop
jmp
add
inc
std
add
loop
movswl
stc
jb
and
add
xchg
in
lea
stc
jb
add
das
push
add
test
xor
lret
nop
jmp
add
add
push
push
mov
xchg
ret
int
add
add
mov
jb
push
jnp
push
roll
std
jmp
nop
jmp
add
add
cmp
sbb
decl
add
lea
stc
jb
add
test
das
repz
shl
add
shll
push
outsb
decl
stc
jb
mov
xchg
add
sub
pop
add
push
mov
xchg
ret
mov
dec
add
jb
add
enter
enter
call
std
jns
pop
cmovge
jb
add
add
add
dec
movzwl
stc
jb
add
lret
popf
mov
stc
jb
mov
stc
pushl
stc
jb
add
int
test
mov
adc
add
add
add
xchg
dec
add
stc
jb
add
add
push
push
mov
cmp
nop
jmp
add
jbe
nop
jmp
add
int3
bound
add
or
stc
jb
add
scas
punpckhdq
pop
imul
stc
jb
and
scas
enter
add
data16
jb
mov
mov
inc
add
add
and
add
mov
pop
mov
nop
jmp
fcmovne
mov
add
rep
stc
jb
xor
jo
add
add
fucomi
stc
jb
mov
pop
stc
jb
scas
add
test
jb
add
add
add
jmp
and
scas
add
pop
add
sbb
fistl
in
jmp
add
and
xchg
addb
int3
mov
stc
jb
add
inc
idivb
inc
push
mov
xchg
ret
push
add
sahf
push
stc
jb
mov
or
add
std
popa
aad
mov
push
mov
xchg
ret
add
add
add
mov
add
and
mov
or
add
add
test
sldt
add
stc
jb
int3
add
xchg
add
sti
mov
stc
jb
add
push
add
jno
pop
stc
jb
add
add
in
lods
stc
jb
add
add
sldt
in
pusha
stc
jb
rcl
add
mov
or
call
pop
mov
sbb
cs
stc
jb
repnz
std
push
stc
jb
add
add
add
add
xor
push
mov
xchg
ret
div
and
sub
stc
jb
add
add
add
nop
jmp
int3
bound
add
clc
push
stc
jb
mov
imul
mov
xchg
ret
cmp
add
mov
stos
dec
cmp
jb
inc
test
add
and
nop
jmp
enter
add
popa
add
jb
fstpt
fmull
addb
xchg
sar
cmpsl
or
jb
add
push
add
add
sbb
jb
stc
add
loopne
add
aam
ret
mov
stc
jb
add
add
add
sbb
test
jb
add
add
push
stc
jb
lret
pop
mov
call
decl
lds
pop
mov
push
mov
xchg
ret
add
es
add
stc
jb
add
add
cli
test
push
mov
xchg
ret
add
lret
sub
stc
jb
add
mov
stc
jb
add
sbb
jns
add
outsb
add
stc
jb
mov
pop
dec
div
stc
jb
add
jns
inc
inc
add
jb
push
mov
pushl
stc
jb
das
add
xor
add
imul
cld
sldt
stc
jb
jnp
add
cmp
nop
jmp
int3
push
add
loopne
add
add
mov
xchg
ret
add
push
fdivl
sar
orb
incl
mov
add
xor
mov
stc
jb
addr16
mov
mov
stc
jb
add
add
add
add
add
stc
jb
add
jmp
testl
scas
add
or
sar
jb
push
add
inc
add
mov
stc
jb
add
fcompl
mov
xchg
ret
add
add
add
shr
nop
jmp
add
inc
add
add
gs
inc
add
int3
add
inc
add
addr16
inc
add
add
add
fcoml
in
pop
lahf
jmp
mov
add
mov
adc
mov
add
jb
add
inc
add
sbb
stos
stc
jb
mov
xchg
mov
faddl
xchg
ret
add
add
mov
mov
xchg
ret
add
pop
add
nop
jmp
add
lret
xchg
lret
or
stc
jb
and
call
stc
jb
std
add
xor
and
pop
push
mov
xchg
ret
add
add
add
push
jmp
nop
jmp
lcall
add
pop
test
push
mov
xchg
ret
push
add
repnz
mov
stc
jb
add
call
nop
jmp
cmp
add
mov
add
int3
xor
stc
jb
lret
lock
jge
rclb
in
add
jns
push
daa
dec
rep
stc
jb
xchg
add
fildl
std
add
sar
jb
add
add
mov
or
stc
jb
add
std
mov
stc
jb
inc
add
add
mov
nop
jmp
xor
bound
es
nop
jmp
and
in
pop
push
mov
xchg
ret
add
add
das
cmpsb
cli
mov
push
mov
xchg
ret
imul
dec
repnz
incl
fisttpl
mov
stc
jb
pop
add
cmp
lcall
adcb
jns
add
and
and
cmp
ud0
call
jmp
add
pop
jo
add
stc
jb
and
add
mov
stc
jb
add
stc
scas
xor
mov
stc
jb
cmp
mov
das
not
push
mov
xchg
ret
add
add
pop
push
mov
xchg
ret
int3
add
or
incb
jmp
mov
xchg
ret
movsb
int
and
jb
add
cmp
add
push
mov
xchg
ret
std
add
pusha
add
sub
and
inc
add
add
enter
stc
jb
add
pop
jmp
stc
jb
xchg
add
add
sub
jb
push
mov
push
jg
dec
outsl
popa
fs
jb
xchg
and
add
mov
out
jmp
pop
add
imul
lock
inc
add
add
cmp
push
push
jb
arpl
jb
scas
inc
add
or
stc
jb
add
add
int
add
add
add
jb
add
sub
insl
add
xchg
ret
add
sbb
jb
add
add
add
sub
mov
jb
add
add
mov
stc
jb
jnp
add
mov
push
mov
xchg
ret
pop
mov
cs
nop
jmp
add
sbb
mov
lds
and
rep
xchg
push
mov
xchg
ret
add
cmp
add
mov
incl
jns
loopne
add
push
mov
xchg
ret
pop
inc
add
cmp
jb
xor
add
add
lea
pop
loop
incl
add
jnp
cmpl
andb
incl
add
jnp
nop
jmp
roll
add
int
movsb
stc
jb
add
std
add
add
add
push
mov
xchg
ret
add
fisttpl
test
call
subb
incl
loopne
out
inc
les
inc
add
stc
jb
mov
add
mov
stc
jb
add
add
jne
stc
jb
xchg
add
test
mov
xchg
ret
add
add
jb
inc
scas
add
push
xlat
mov
jb
add
add
pop
mov
stc
jb
add
scas
push
stc
jb
add
add
xchg
cmp
sar
jb
add
sbb
add
stc
jb
lock
xchg
lock
leave
lret
xor
pmulhuw
add
mov
push
stc
jb
scas
xor
das
movsb
add
add
mov
nop
jmp
add
int3
outsl
mov
stc
jb
add
add
mov
add
ret
fildl
xchg
ret
xchg
add
nop
jmp
xchg
add
fildl
add
add
add
adc
add
test
call
add
push
addr16
add
pop
add
stc
jb
lret
call
nop
jmp
add
mov
push
mov
xchg
ret
inc
add
sbb
dec
cmpl
nop
jmp
xchg
cmp
lret
pop
push
mov
xchg
ret
das
add
push
sub
jb
add
add
add
pop
stc
jb
repnz
add
mov
push
mov
xchg
ret
cmp
call
call
sub
ret
add
and
mov
movb
addb
and
nop
jmp
add
int3
test
add
jl
inc
add
add
add
icebp
out
jns
jnp
scas
scas
mov
mov
stc
jb
mov
cmp
and
test
ret
stc
jb
add
cmc
jmp
aaa
repz
call
incl
add
add
lock
jne
stc
jb
scas
xor
push
enter
pop
pop
stc
jb
add
cmp
sub
je
pop
push
push
mov
xchg
ret
fildl
add
cmp
adc
mov
xchg
ret
lret
add
jmp
lock
incl
mov
add
shrl
popa
add
jb
add
inc
movsb
add
mov
xchg
ret
jo
int
or
add
jb
add
add
jb
testl
sub
jb
add
lret
lock
xor
nop
jmp
add
or
add
pop
mov
stc
jb
mov
inc
push
sub
jb
lcall
std
lock
push
loop
stc
jb
lret
add
and
nop
jmp
add
add
pop
jo
pop
mov
stc
jb
cmp
imul
stc
jb
add
ss
pop
ret
mov
add
add
sbb
mov
xchg
ret
lcall
sub
add
nop
jmp
mov
stc
test
add
push
mov
xchg
ret
add
add
jmp
stc
jb
add
test
and
mov
stc
jb
mov
add
cmpw
nop
jmp
xchg
add
repnz
mov
stc
jb
lock
inc
add
adc
push
push
mov
xchg
ret
sub
testl
add
jb
add
lcall
add
stc
jb
add
add
xchg
xchg
insb
mov
push
mov
xchg
ret
add
push
aas
call
stc
jb
imul
add
jb
jns
repnz
jnp
ja
mov
nop
jmp
imul
fcmovnu
mov
push
mov
xchg
ret
cmp
mov
jb
add
pop
lcall
add
je
stc
jb
sub
lret
push
mov
xchg
ret
nopl
scas
add
stc
jb
push
add
add
cmp
incl
cmp
notl
add
push
mov
push
mov
xchg
ret
add
cmp
add
stc
jb
add
add
add
cltd
push
stc
jb
lret
cmp
stc
sbb
rorl
add
add
lock
add
add
incl
push
add
loopne
jo
jle
nop
jmp
lock
scas
push
ja
pop
add
nop
jmp
addr16
scas
stc
add
add
stc
jb
and
add
scas
add
ss
lcall
jo
lock
mov
stc
jb
add
enter
lds
stc
jb
scas
add
lock
xor
add
stc
jb
add
enter
in
stc
jb
std
scas
add
push
push
mov
xchg
ret
xor
mov
and
or
mov
xchg
ret
add
sbb
mov
stc
jb
add
add
xchg
cld
jmp
nop
jmp
inc
pop
bound
inc
mov
add
add
incl
add
btr
mull
jmp
mov
pop
and
jb
mov
add
push
mov
xchg
ret
add
add
imul
add
inc
add
xchg
add
add
jb
push
stc
jb
pop
add
add
add
cmp
push
mov
xchg
ret
scas
add
jg
popa
add
jb
add
add
sbb
or
push
mov
xchg
ret
add
rclb
or
js
nop
jmp
add
add
add
scas
or
std
inc
add
add
lock
ljmp
int3
fdivrp
stc
inc
add
icebp
aaa
scas
push
push
mov
xchg
ret
mov
scas
push
stc
jb
add
add
add
pop
xchg
stos
xor
nop
jmp
bound
add
sbb
push
cmp
test
push
mov
xchg
ret
add
add
sub
test
loopne
call
incl
enter
pop
ret
stc
jb
add
add
pop
bound
cs
nop
jmp
and
add
add
add
jb
add
sub
add
test
mov
xchg
ret
movsb
jns
add
stc
jb
mov
cmp
mov
xchg
ret
add
lret
dec
push
mov
xchg
ret
int3
lock
cs
jb
imul
stc
jb
add
mov
xchg
jo
push
stc
jb
add
add
mov
mov
add
push
mov
xchg
ret
xchg
add
or
nop
jmp
xchg
test
mov
pop
jne
stc
jb
mov
stc
jb
std
add
add
jl
stc
jb
add
stc
jb
test
jo
inc
inc
add
test
popa
add
mov
xchg
ret
xor
or
pop
push
mov
xchg
ret
xor
mov
repnz
push
mov
xchg
ret
inc
add
lcall
sbbb
add
jb
add
and
jae
jb
add
add
push
mov
xchg
ret
add
add
add
nop
jmp
cmp
jns
add
sbb
add
stc
jb
push
rcrl
pop
add
xor
xor
nop
jmp
add
jns
add
or
jge
stc
jb
rcl
jnp
add
iret
mov
stc
jb
add
add
cmp
les
jb
xchg
add
jns
fwait
inc
stc
jb
mov
add
leave
sub
jb
add
loopne
add
add
inc
and
jmp
mov
int3
add
psubw
fs
xor
nop
jmp
push
inc
cmp
test
aaa
mov
loope
add
xor
mov
add
sarl
test
jb
enter
add
push
lahf
call
stc
jb
add
sti
push
mov
xchg
ret
add
add
dec
mov
nop
jmp
jnp
add
lock
int3
push
push
mov
xchg
ret
add
scas
add
stc
jb
mov
add
repnz
push
stc
jb
add
add
stc
mov
bound
add
stc
jb
inc
jns
mov
or
call
add
xchg
and
addb
stos
push
push
mov
xchg
ret
add
add
push
stc
jb
add
scas
pop
xchg
jnp
stc
jb
inc
verr
and
jae
je
stc
jb
scas
addr16
flds
adc
jmp
jns
mov
stc
jb
or
mov
add
pop
ret
stc
jb
push
add
add
js
loopne
stc
jb
add
add
jns
call
in
add
xor
std
cmpsl
xchg
add
sbb
push
rolb
or
or
mov
xor
add
test
cmp
stos
push
mov
lods
mov
pop
and
ljmp
int3
xor
or
dec
mov
jo
or
push
cmp
mov
dec
mov
iret
xor
add
add
push
push
jb
push
out
in
jae
cwtl
and
and
lea
cs
fcmovnb
add
gs
dec
outsl
mov
movsl
jae
push
dec
pushf
mov
lcall
push
adc
cmpl
insb
aas
cltd
cmp
xchg
xlat
sub
mov
arpl
popa
out
fcomps
rolb
mov
ror
sbb
mov
push
jp
sub
add
cmp
sbb
xchg
repnz
xchg
pop
std
das
pop
rcl
pop
ds
pop
lods
pop
xor
movb
pushf
xchg
shlb
es
test
add
and
adc
xchg
adc
dec
add
stos
inc
enter
push
sbb
and
sub
push
push
jge
push
add
leave
movsb
lahf
aaa
fstpl
sub
xchg
adc
enter
clc
nop
sub
lods
xchg
push
fstps
push
outsb
lret
mov
je
sbb
cwtl
ljmp
cltd
pop
and
sub
test
fistpll
iret
scas
mov
add
std
jg
or
scas
jae
push
mov
xchg
push
int3
dec
not
cmc
sub
dec
mov
int3
out
jo
mov
jne
scas
fwait
add
int
cmp
add
divl
shrb
icebp
fwait
sub
data16
push
inc
sbb
rcll
call
cmpsl
loop
xchg
dec
lahf
addb
repz
mov
push
inc
jns
fwait
jmp
aas
or
arpl
into
jnp
add
fucom
mov
in
mov
add
ds
dec
mov
add
xchg
mov
xchg
mov
ss
push
add
add
inc
add
add
je
and
cmpsl
fnstcw
in
push
cmpsl
rolb
jbe
pop
test
cmc
mov
aad
or
ds
outsl
mov
add
add
adc
imul
cwtl
incl
jbe
ret
mov
xor
into
sahf
lea
aad
clc
push
in
inc
add
add
and
imul
dec
add
xchg
pop
idivl
sub
cld
les
fstpl
mov
call
lret
dec
clc
xor
je
and
add
test
addr16
decb
dec
xchg
jbe
leave
sub
sbb
dec
dec
sbb
sub
or
add
adc
add
add
std
lds
pop
in
xchg
push
sub
mov
jns
cmp
add
push
ja
icebp
dec
sbb
daa
sbb
inc
daa
and
outsl
sub
add
test
divb
sbb
add
inc
pusha
add
pop
js
mov
movsl
pushl
movl
test
div
gs
xor
mov
add
fwait
mov
outsb
push
ljmp
push
inc
pushf
adc
pop
loope
and
jl
mov
mov
lods
rorl
add
mov
mov
dec
hlt
imul
mov
dec
pop
mov
cmpsl
pushf
je
add
adc
add
fldcw
jp
adc
mov
add
sbb
mov
mov
repnz
mov
inc
add
popa
subl
push
mov
push
not
fucom
or
pop
lcall
sahf
repnz
fsubrl
sahf
sbb
mov
add
out
dec
popf
data16
repz
ror
movsl
out
cltd
ret
mov
lock
pop
inc
movsl
mov
movsb
call
iret
push
nop
xor
dec
js
sbb
xlat
cld
pop
sbbl
shrb
inc
add
jb
xor
jmp
mov
ja
mov
lcall
inc
add
nop
roll
mov
cmpsl
ret
pop
jbe
add
add
adc
sub
mov
sbb
fs
add
mov
jmp
mov
push
add
outsb
test
outsl
dec
loope
repnz
das
inc
push
out
xor
insl
mov
cli
pop
sahf
mov
xor
sti
sub
cwtl
or
mov
fists
mov
lods
cld
xchg
add
dec
sbb
stos
lahf
sbb
pushf
ja
sbb
add
jmp
add
xchg
sub
push
outsb
outsl
push
xchg
iret
aaa
fwait
cmp
lcall
lea
xor
fnstenv
jl
add
jg
xor
lcall
into
addb
xchg
jb
or
scas
push
dec
add
cld
mov
shll
cli
jae
pop
xchg
jecxz
jae
rol
push
icebp
add
mov
in
adc
sub
xor
in
pushf
mov
rolb
add
sbb
and
in
dec
ret
xchg
jecxz
add
jbe
lds
mov
mov
ljmp
and
shl
enter
imul
pop
xchg
cld
arpl
insb
shrb
inc
add
inc
add
insl
or
insb
jge
sub
pop
pop
aad
dec
movb
and
addb
shrl
jo
fs
sbb
aad
xor
add
jl
mov
sbb
adc
outsl
lret
xor
pop
pop
cmp
pop
jg
lods
inc
loope
add
xchg
cld
jmp
rolb
sub
je
pop
mov
in
cmp
in
cld
movzwl
movsl
pop
xchg
mov
int3
clc
mov
ret
out
cli
in
mov
lock
sbbl
add
sahf
rolb
enter
cmc
leave
mov
call
cli
inc
add
adc
je
dec
inc
sbb
pop
pop
jle
add
clc
insl
mov
mov
ds
out
cmp
fmull
aad
and
and
aam
and
add
fstpl
xchg
xor
lret
test
add
loope
loop
jno
dec
lret
sbb
sub
rclb
mov
nop
push
mov
mov
aad
pop
pushf
jne
pop
adcl
pop
cmpsb
jp
and
fs
mov
push
ss
mov
movsb
push
add
fwait
in
cld
jmp
mov
inc
add
sub
test
mov
jb
jb
lcall
and
jmp
in
inc
add
mov
ret
out
pusha
add
test
xchg
lods
or
stc
xchg
inc
add
adc
add
call
pushf
sbb
cmp
cmp
xchg
inc
repz
push
pop
stos
push
mov
jp
lahf
icebp
xchg
sbb
int
call
mov
push
sub
mov
cmp
out
neg
cmp
ja
lcall
in
xor
cmp
mov
repz
add
icebp
roll
bound
inc
and
xchg
mov
xchg
cmp
dec
mov
cld
jb
cmp
fsubl
leave
popf
mov
mov
pop
bound
nop
shr
xchg
pop
or
dec
cmp
xchg
stc
sbb
add
scas
sub
add
gs
mov
imul
push
mov
cmpsb
and
stc
add
rcl
leave
repz
xchg
pop
mov
cmp
pop
sub
pop
into
icebp
push
adc
add
fisubrl
lcall
sti
adc
add
bound
mov
std
roll
arpl
stos
pop
aad
or
scas
xchg
jno
sub
in
xor
push
adc
sbb
sti
int
lock
ror
or
sub
adc
push
fisubrl
add
ret
xchg
adc
add
add
mov
xor
shrb
jo
add
test
outsl
sti
xor
sbb
push
and
dec
mov
iret
push
insl
adc
mov
jl
sbb
hlt
aam
dec
dec
ljmp
in
call
jno
adcl
std
flds
mov
cmp
inc
data16
ror
mov
jb
push
pop
mov
test
sbbl
mov
or
cmpsl
ret
imul
test
shl
movb
mov
add
dec
aas
int
adc
pop
jle
add
pop
hlt
push
jle
xor
jae
add
cld
icebp
sti
es
int3
mov
cmpsb
sahf
push
add
stos
daa
aas
mov
push
pop
pop
or
test
je
pop
jecxz
fwait
rolb
pop
std
pusha
add
mov
sbb
dec
fwait
mov
xchg
inc
add
sbb
popf
jmp
mov
ja
pusha
add
mov
xchg
mov
movb
push
sub
mov
sub
fcomps
cmp
sub
cli
clc
stc
ret
adc
lds
push
push
fcoms
jg
and
dec
ss
in
clc
adc
or
cld
mov
cmc
call
adc
and
nop
pop
in
jb
sbb
and
add
add
ficompl
test
loope
call
lock
inc
add
rcrb
adc
pusha
add
mov
shrl
sbb
and
lods
gs
mov
inc
add
cli
shlb
add
in
mov
aam
add
xor
sbb
mov
inc
mov
lcall
dec
inc
outsb
pop
xor
inc
add
in
mov
shlb
cmp
jns
insb
shl
pop
jmp
mov
cmp
test
xor
push
xchg
jge
mov
shrl
add
pop
and
iret
and
inc
hlt
inc
add
add
sbb
lock
or
cs
push
sbb
lds
push
int
ret
sub
xor
call
outsb
push
jnp
cmpsl
adc
push
icebp
and
loopne
jecxz
or
bound
lods
mov
cmp
cmp
xchg
mov
inc
add
call
or
push
pushf
iret
pusha
add
mov
and
mov
xchg
pop
jl
sbb
xor
cmpsb
jle
into
inc
xchg
ja
and
incl
insl
cmp
lret
jb
pop
stos
mov
cmc
adc
sbb
adc
and
push
jns
mov
imul
call
pop
sbb
stc
push
shlb
jne
stos
testl
cmp
mov
pop
fwait
lcall
rolb
cs
add
addb
add
push
sub
fnstenv
add
xor
push
xchg
cs
dec
cmc
mov
mov
sub
fwait
and
pop
repnz
pop
pop
pusha
add
sbb
adc
inc
add
aas
push
testb
xchg
fiadds
add
cmp
sbbl
sbb
movb
sbb
inc
mov
enter
inc
add
push
shrl
sub
movsl
sub
jmp
cwtl
pop
insb
inc
mov
mov
cmpsb
in
xor
jp
add
sub
std
lds
dec
pop
mov
out
sub
fs
jnp
in
rcl
pushf
or
push
int
push
movsl
xchg
add
xor
lods
xchg
pop
scas
daa
nop
xlat
stos
mov
dec
xor
xor
mov
xlat
or
add
jp,pt
add
test
and
add
pop
mov
adc
add
pop
sbb
es
imul
ret
mov
int3
outsb
jge
cmp
gs
mov
sbb
xchg
test
outsb
pop
data16
add
dec
or
idivb
dec
divb
cmc
xchg
mov
fsubl
or
repz
les
dec
inc
loop
shrl
jno
rorb
jns
add
mov
add
mov
jp
addr16
push
or
fidivrs
dec
lods
or
mov
cwtl
imul
in
adcl
mov
mov
pop
into
mov
cmpsb
lahf
movsl
outsb
push
add
xchg
mov
movsl
sti
push
les
ljmp
push
cwtl
clc
rorl
cld
sub
pop
or
jle
add
scas
rorb
sbb
sub
adc
les
adc
pusha
add
add
mov
jno
cmp
or
cmp
xor
mov
insl
cmc
or
lahf
cmp
add
in
jecxz
decb
push
add
pop
stc
and
es
add
pushf
inc
add
adc
add
add
mov
pop
in
aaa
add
pop
ret
mov
mov
sbb
test
cmc
jb
movsl
xchg
pop
imul
movsl
fisttps
pop
and
repnz
mov
movb
hlt
rcrb
loope
stos
xchg
sub
dec
flds
pop
fwait
inc
sub
aas
push
rorb
add
fsts
mov
popf
add
stos
adc
pop
jb
add
xchg
xor
jne
or
xor
movb
jae
push
dec
xchg
testl
je
fsubrl
jecxz
jge
les
cmpsl
dec
movsl
dec
cmp
mov
add
ret
je
push
xchg
lret
mov
mov
jno
add
mov
les
xchg
adc
add
imul
sub
je
sub
ss
mov
xor
inc
add
sahf
push
incl
add
dec
aad
pusha
add
mov
push
outsb
xchg
leave
in
dec
outsl
cmp
sti
or
pushf
jge
xchg
dec
into
cmpsb
lods
stc
imul
xchg
push
add
cmpsb
fists
das
aas
jnp
mov
ret
lret
lahf
mov
add
push
imul
sub
dec
sub
pop
jns
sbb
xor
inc
add
in
mov
jnp
sbb
stos
jecxz
push
fistps
mulb
xchg
xchg
mov
jnp
sahf
cmp
mov
xchg
and
das
aam
pushf
stc
dec
les
into
add
fstps
add
pop
mov
pop
mov
add
shll
enter
cmpsb
xlat
xchg
sbb
in
sub
pusha
add
sbb
fidivrs
das
into
popf
hlt
gs
push
xchg
xchg
scas
or
ret
and
mov
sbb
out
enter
cmp
dec
xchg
cltd
es
mov
add
dec
scas
scas
stos
dec
outsl
cmp
int3
movsb
repnz
xchg
stos
call
sti
push
sub
inc
dec
cld
movl
xchg
popf
xchg
movsl
xchg
mov
cmpl
ret
arpl
dec
xor
mov
repz
lock
add
inc
bound
int
jge
add
push
mov
insb
ljmp
arpl
cmp
xchg
add
filds
mov
pop
es
outsl
pop
ss
mov
push
xchg
mov
shr
cmpsb
roll
mov
add
lock
xlat
insb
cmc
add
popf
sbb
test
dec
mov
add
cwtl
xchg
cs
andl
inc
add
pusha
add
add
jo
popa
push
jno
add
nop
inc
js
imul
sbb
xor
fimull
mov
mov
je
and
jns
repz
push
sahf
das
mov
inc
cli
ds
sub
mov
mov
mov
fcomp
sub
out
sbb
daa
int
fidivl
add
mov
xchg
jae
add
pop
and
out
faddl
pop
jecxz
add
mov
outsb
pop
fildl
mov
ret
adc
mov
movsl
emms
call
mov
popa
push
pop
outsl
mov
add
cwtl
xor
pop
mov
lods
push
xor
add
rolb
ljmp
mov
add
sbb
add
push
bound
shr
and
aam
cli
push
push
and
dec
xor
sub
xor
dec
xchg
push
ret
cmp
into
add
or
jl
ja
dec
int
push
ret
imul
int3
fwait
adc
sbb
add
mov
addl
cmp
cmp
mull
orl
les
stos
mov
and
and
data16
mov
add
sbb
mov
mov
inc
mov
lock
gs
dec
dec
mov
ljmp
adc
flds
pusha
add
push
pushf
repz
mov
pop
fildl
add
loopne
and
scas
jmp
xor
sbb
test
cmp
add
add
mov
test
jl
add
int3
decl
add
addl
add
jg
das
jecxz
fists
loop
pop
rolb
test
mov
add
ret
dec
add
in
jbe
nop
shl
jmp
pop
and
mov
clc
inc
mull
xchg
dec
je
out
aam
addb
imul
pop
mov
leave
xor
xchg
cmpsb
fdivrl
add
inc
stc
jnp
in
mov
daa
jg
dec
mov
or
xor
call
mov
push
pop
adc
xor
test
ds
pop
jg
icebp
and
lods
lea
push
inc
add
pop
out
scas
mov
xchg
adc
pop
out
pop
mov
shl
int
xchg
mov
sub
in
xor
xchg
xchg
addr16
pop
sbb
inc
xor
iret
nop
pop
aad
add
add
and
add
outsl
bound
scas
jecxz
add
nop
inc
mov
xlat
aam
or
enter
ret
add
enter
cmp
push
mov
push
lea
inc
add
loop
add
aam
mov
add
popa
inc
add
mov
jle
push
imul
test
lcall
outsb
leave
dec
dec
sbb
inc
stc
sub
loopne
jl
insb
loop
fwait
rcll
xchg
popa
jo
stos
lret
sub
ret
mov
sub
dec
and
push
sub
cmp
add
jmp
popf
cltd
lock
push
fmull
sti
ds
sahf
sub
mov
add
ds
mov
call
std
lahf
sbb
iret
mov
std
cmpsl
jne
sahf
std
ret
xor
add
lret
jmp
xor
jne
and
mov
cmp
mov
mov
loope
sub
pop
cmp
push
addr16
es
jns
pop
lcall
sbb
and
lods
mov
fmull
mov
xor
fistpll
ljmp
clc
adc
dec
rcll
int
int3
pop
jp
inc
clc
inc
mov
gs
jp
xor
mov
lret
push
add
stc
pop
icebp
mov
lods
jne
leave
mov
scas
push
call
push
add
add
bt
xchg
vpsubusw
addb
ret
jl
mov
imul
daa
and
inc
add
pop
pop
cmp
pop
imul
ss
add
add
pop
std
cwtl
data16
add
dec
rolb
mov
jno
movsb
lret
add
and
mov
sbb
int3
stos
popa
aad
nop
mov
adc
pop
lcall
icebp
shrb
adc
mov
scas
mov
push
mov
add
add
cld
mov
sbb
add
jle
xor
adc
jnp
ds
pop
pop
xchg
repnz
add
cmp
cmp
adc
and
sub
sbb
jecxz
sub
inc
mov
lods
aaa
shll
add
xor
push
icebp
mov
push
outsl
out
test
push
into
sahf
inc
int
mov
adc
das
test
mov
cld
sbb
add
sbb
add
adc
sbb
leave
push
in
ja
sarb
nop
mov
inc
sub
adc
and
and
scas
mov
xchg
push
outsb
and
xor
cmc
sti
xor
push
loope
add
icebp
inc
sub
ret
mov
lret
push
addb
push
mov
das
jns
je
or
pop
inc
add
push
out
outsl
aas
hlt
cmp
adc
push
and
inc
add
add
add
lcall
pop
sbb
test
cmp
and
pop
xor
dec
jbe
mov
push
int
pop
push
add
jmp
mov
fcoms
jbe
add
mov
push
pusha
add
arpl
xor
movsl
cmp
inc
outsl
outsl
stos
inc
add
add
sti
jno
pushf
jp
pop
add
std
in
cmp
es
xlat
mov
xor
sub
inc
add
fcom
cmp
xchg
daa
ss
loope
add
add
paddq
jb
xor
cmp
into
pop
mov
dec
negb
mov
fs
movsl
pop
or
xchg
aad
sub
repnz
xor
add
pop
shr
cmpsb
inc
mov
inc
dec
pusha
add
or
test
out
movb
ja
xchg
notb
or
add
mov
insl
xor
adc
loop
add
aaa
fwait
cld
mov
ja
mov
or
fnsave
mov
or
push
dec
icebp
hlt
js
add
add
pop
addr16
cmp
sub
xor
jbe
dec
ja
lret
or
lcall
or
inc
add
stc
fdivrs
stos
xchg
fnstsw
mov
sbb
test
mov
cmc
lcall
stc
rolb
movl
and
movl
int3
pusha
add
xchg
sub
dec
leave
in
and
inc
add
dec
cmp
decl
cmp
or
popf
popf
lock
xor
pop
aas
loop
sbbl
xor
stc
dec
mov
inc
add
mov
push
add
xchg
adc
jo
loope
rolb
bound
mov
dec
cmpsl
daa
popa
testl
bound
je
outsl
leave
inc
add
add
or
push
add
mov
rolb
and
sbb
dec
jo
rcll
inc
add
jecxz
call
std
sbb
fisttpl
push
fdivrs
dec
test
dec
push
test
pushf
inc
add
cmp
jae
sbb
mov
dec
adc
sbb
xor
add
fdivl
mov
fcoml
fidivl
test
xor
inc
mov
scas
jge
mov
add
mov
div
cmp
xchg
icebp
push
cwtl
cltd
sbb
add
xor
in
loope
subl
add
das
bound
dec
setne
or
and
pop
jge
mov
enter
rclb
das
insb
call
dec
lods
pop
push
mov
add
ret
mov
xor
movsb
ret
mov
jp
and
jge
loope
sub
mov
loope
add
cs
sub
fdiv
in
fisttpl
lret
xor
push
xor
stos
and
xlat
dec
ror
sub
stos
xchg
sbb
ret
mov
addr16
fstpl
mov
add
add
popf
adc
bound
adc
roll
add
adc
loope
add
hlt
in
mov
add
ja
mov
xor
mov
jb
pop
sbb
sahf
shll
add
and
mov
pop
mov
inc
fldcw
imul
ljmp
or
dec
into
ss
stos
mov
xor
test
mov
mov
mov
sbb
xlat
sbb
jae
add
xor
or
or
push
pop
jg
xchg
and
ffreep
add
xchg
dec
je
cmp
mov
rolb
ret
in
ds
push
ss
add
push
pop
or
jmp
push
add
sub
adc
dec
push
and
and
cmp
add
call
sub
ret
push
fadds
add
repz
add
aad
add
add
in
and
inc
repz
jp
add
add
add
sub
js
inc
add
mov
xchg
cmp
mov
fidivl
mov
cwtl
ret
adc
jmp
cpuid
mov
rolb
or
ja
cmc
mov
or
rcll
aaa
pop
xor
push
ss
les
push
movsl
xchg
jo
imul
push
scas
inc
add
shrl
pop
xor
mov
mov
add
add
lcall
fnstcw
add
ds
inc
mov
fnsave
jle
aam
les
inc
fnstsw
rolb
jle
push
arpl
add
nop
pop
les
jg
push
subl
and
sti
in
xchg
add
pop
in
push
add
mov
fdivrp
pusha
add
sub
pop
loopne
loop
mov
cmpsb
xor
add
sbb
add
add
jg
add
out
aam
xchg
stos
mov
mov
dec
and
dec
movsb
ja
pop
mov
lods
fnstsw
ror
mov
sub
inc
lahf
adc
out
xchg
gs
pop
test
cmp
shr
dec
pusha
add
and
jge
mov
sub
test
movb
sub
repz
lock
or
mov
div
fldcw
loopne
in
insl
inc
icebp
xor
sbb
test
clc
ret
aaa
mov
push
sbb
add
clc
inc
add
mov
sbb
lahf
or
dec
mov
inc
pushf
popa
daa
xrelease
xchg
or
dec
push
int
mov
mov
or
addb
mov
iret
jge
movsl
sarl
and
addr16
add
pop
sarw
or
add
in
rolb
cmc
lahf
fwait
int3
or
xchg
loop
push
add
adc
jmp
xor
pop
mov
scas
aaa
pop
cmp
cmp
cld
jno
leave
mov
add
add
add
imul
add
xchg
mov
push
faddl
daa
mov
xchg
mov
ret
dec
stos
rcrl
rolb
and
mov
adc
cmpsb
sbb
int3
lock
nop
pushf
test
stos
ror
cmp
inc
jle
or
dec
or
sahf
and
xchg
pop
out
inc
inc
add
mov
adc
adc
in
pop
adc
add
dec
sarb
hlt
stos
cmpsl
pop
xor
repz
push
mov
sarb
mov
add
scas
or
mov
push
inc
outsb
or
add
scas
push
add
push
add
jno
sub
fdivr
xor
add
push
mov
xchg
lods
pop
pop
add
add
pop
pop
jmp
adc
sub
enter
mov
rcr
fs
bound
xchg
add
int
leave
rolb
out
add
mov
addb
xlat
cmc
xchg
hlt
movsb
lock
mov
sbb
jno
add
test
mov
jno
mov
movsb
pop
jnp
mov
adc
out
or
fldt
adc
add
dec
das
xor
xchg
mov
nop
push
repz
js
sbb
fucomp
repnz
dec
mov
jmp
pop
lods
cmp
push
mov
cmpsl
int
aaa
aam
jp
push
mov
push
pop
or
xchg
mov
out
adc
out
jnp
in
xlat
cs
int3
cmc
fwait
push
cwtd
lcall
mov
rcll
ret
dec
addr16
fisttpll
inc
add
adc
mov
lretw
add
push
js
leave
mov
orl
push
stos
sub
or
jns
add
add
add
xor
dec
sub
sub
and
xchg
sbb
hlt
jo
dec
cmp
add
mov
cs
xchg
leave
out
test
push
pop
dec
add
xor
out
mov
loopne
mov
sbb
mov
movb
adc
jnp
popa
push
ret
int3
pop
dec
xor
std
je
ds
xchg
lods
inc
cmp
sub
xor
sbb
std
rcrb
rcll
add
push
lret
or
inc
add
pop
rolb
cmp
cwtl
inc
add
inc
scas
push
dec
cmpsb
call
xor
addl
mov
inc
add
lcall
aaa
int
je
cmp
sahf
pop
sbb
scas
std
lea
test
out
insb
add
xchg
dec
das
int3
iret
add
mov
das
adcl
add
and
lods
xorl
rclb
jo
icebp
cmp
adc
push
ret
addr16
add
out
mov
cmpsb
and
les
lret
aas
mov
cmp
in
inc
out
insl
cld
gs
add
call
jle
divl
and
xchg
xchg
mov
sarl
add
jge
shlb
sbb
mov
mov
icebp
lods
jne
push
int3
aam
addb
cltd
lahf
mov
pop
subl
mov
scas
fidivrl
inc
int3
lret
rolb
jl
xchg
dec
xchg
add
xchg
clc
ret
or
push
mov
repz
push
rorl
int3
mov
inc
jne
or
mov
out
add
push
xchg
push
add
loop
sbb
std
inc
lock
popf
push
lock
ds
mov
stos
mov
addb
add
jg
dec
cmpsb
mov
daa
mov
xor
adc
sub
add
mov
add
mov
bound
cmp
adc
cmpl
and
nop
out
push
dec
outsb
imul
or
and
xor
add
xchg
sti
jno
inc
add
mov
xchg
adc
adc
jb
add
add
dec
push
in
testb
sti
popf
dec
rolb
into
loop
or
out
xor
shll
mov
jecxz
add
sbb
push
adc
add
clc
inc
add
push
sti
sbb
or
std
push
and
cmc
push
mov
pop
cmpsl
pop
and
push
sbb
add
stc
cmpsb
popa
push
rorb
jg
or
mov
adc
mov
pop
lods
jge
hlt
xchg
jecxz
cmp
jae
stc
push
and
hlt
loop
sahf
mov
loopne
sub
and
inc
add
loopne
in
inc
cmc
push
scas
enter
pop
ja
ret
mov
adc
cwtl
fisubrs
pop
adc
gs
xchg
fwait
movsb
outsb
pop
rolb
fstpl
push
sbb
iret
xchg
int3
out
inc
add
aad
out
mull
jl
mov
sbb
pop
stc
test
xor
add
xor
mov
or
and
call
call
ret
imul
cmp
mov
pop
and
xchg
fdivrs
sbb
adc
inc
push
dec
push
es
das
add
push
jo
mov
addr16
add
cltd
addb
enter
add
add
and
iret
jge
push
add
stc
imul
jbe
dec
dec
cmp
jle
rcll
inc
add
add
or
push
mov
mov
ficoml
add
jns
dec
mov
addr16
inc
add
jmp
sti
xlat
es
adc
dec
cltd
sbb
into
lods
insb
xchg
lds
cmp
sub
lock
sub
iret
pushf
pop
pusha
add
test
mov
xchg
test
in
pop
inc
add
pop
pop
movb
aam
sarb
aas
sti
lret
xor
mov
les
aaa
movsb
fildl
push
add
or
adc
in
xchg
je
je
inc
loope
cs
int3
popf
lock
inc
pop
fmull
cld
cmpsl
add
xor
add
jnp
and
jmp
fistpl
mov
imul
push
movsl
call
mov
lock
lods
pop
add
fadds
add
add
movsl
imul
enter
mov
into
mov
add
sub
add
repnz
adc
ljmp
add
jnp
jge
mov
mov
enter
iret
ret
xor
xchg
imul
mov
sbb
sbb
sti
mov
imul
sbb
inc
add
cld
cltd
mov
stc
add
xchg
jnp
dec
into
sbb
xchg
aas
and
outsl
dec
je
mov
and
xchg
popf
push
jmp
cs
sbb
loop
ds
push
pop
cmc
push
lahf
daa
push
inc
sti
lods
gs
add
shlb
imul
mov
or
cmp
scas
mov
or
dec
dec
pop
es
lea
sub
leave
div
daa
fistpl
pop
rolb
add
push
popf
lock
mov
push
or
imul
in
sti
idivb
xor
addb
orl
scas
jns
pop
fcoml
setb
mov
imul
push
mov
inc
aaa
test
adc
add
stos
pop
mov
out
sub
imul
dec
mov
js
cltd
pop
gs
test
mov
add
push
enter
push
xor
inc
fadd
add
push
or
cmp
add
or
arpl
add
xchg
call
popa
mov
call
jo
pop
mov
cmp
dec
mov
dec
xchg
int3
pop
mov
shll
outsl
inc
push
mov
mov
cmp
in
and
cltd
xchg
sbb
xchg
mov
adc
add
das
sahf
in
or
and
xor
pop
push
fcoml
out
es
add
pushf
cmc
mov
xor
xchg
sbb
lret
add
pop
movb
inc
cmpsb
aam
sahf
mov
and
cmp
rorl
mov
mov
js
out
sub
dec
pop
pop
mov
rcll
sbb
pushf
mov
lahf
add
dec
icebp
push
insb
mov
inc
scas
out
sub
das
outsb
xchg
out
push
mov
push
mov
mov
sahf
outsb
or
not
push
loope
jl
jl
je
xchg
pusha
add
or
sbb
arpl
push
mov
fistps
jp
sbb
cmp
out
mov
add
jne
cmp
test
pushf
fistl
mov
es
cmp
popa
cmp
ja
sub
mov
shrl
sbb
inc
add
and
jmp
dec
or
jb
lahf
mov
stc
pop
lcall
adc
les
out
outsb
popa
call
add
or
in
addb
jge
lret
push
adc
cmp
test
cmp
movsl
cvtpi2ps
mov
repnz
pop
cwtl
sbb
sti
pop
sarl
sub
push
jbe
or
rolb
lds
mov
lea
movsb
xor
mov
xlat
push
pop
mov
mov
je
cmpsb
leave
scas
xor
or
scas
rolb
add
mov
mov
and
cwtl
or
adc
rolb
fs
int
pusha
add
lret
hlt
push
mov
inc
add
sahf
mov
lods
mov
pop
jns
into
sbb
adc
movb
fiaddl
push
lds
cmc
inc
sub
add
mov
mov
lret
mov
dec
dec
mov
mov
rcll
repnz
add
fs
add
fadds
push
sub
cmp
test
pop
loope
mov
bound
cmpsl
outsl
pushf
add
pop
je
das
ret
ds
add
iret
pop
sub
jl
inc
add
decb
nop
push
roll
or
add
mov
insl
fnstsw
xchg
loopne
jecxz
ficoms
mov
pop
xchg
mov
addb
sbb
jne
or
cmpsb
clc
dec
rorl
fwait
stos
adc
mov
or
fdivl
aas
in
test
cmp
imul
push
test
popa
dec
pop
push
cmp
cmp
hlt
xlat
aas
cld
aad
mov
add
nop
xchg
pop
inc
add
fstpl
mov
stc
xor
add
fsubrs
fwait
mov
add
jbe
sbb
popf
insb
addb
push
sub
push
pop
lock
jnp
movsl
jbe
or
inc
add
xor
scas
rolb
mov
shlb
out
inc
add
test
ret
movsl
stos
idivl
sbb
add
sub
je
push
cs
cmpsl
and
in
mov
xor
jno
mov
rcl
lods
inc
pop
ljmp
loopne
into
lret
in
popa
call
cld
adc
adc
loopne
jg
add
xlat
jb
push
sahf
push
aas
rcr
sub
xor
cmp
das
rolb
mov
inc
add
mov
arpl
cmp
jg
mov
mov
lds
pop
pushf
sahf
jae
dec
imul
xchg
and
jg
jp
pop
fnsave
in
mov
loopne
les
or
sbb
xchg
push
negb
mov
lcall
out
rolb
loope
fstps
and
aas
cmp
add
jp
inc
jmp
inc
add
into
cmp
fnsetpm(287
pop
pop
movb
mov
inc
add
add
loopne
pop
divb
push
xlat
loope,pn
add
dec
insl
in
or
add
push
mov
add
adc
xchg
cwtl
xchg
pushf
ret
addb
jbe
ret
push
sbb
sti
dec
or
scas
xor
mov
xchg
cltd
sub
in
fcoml
into
jge
js
add
scas
xlat
stos
clc
mov
sub
scas
inc
add
jae
sbb
shll
push
add
inc
mov
pop
cs
stos
push
dec
pop
jl
jle
stos
stos
test
das
push
in
sub
push
or
pop
rcll
sahf
ljmp
imul
sub
outsb
cmp
lds
add
rorb
inc
add
imulb
cmp
push
jae
adc
xchg
cltd
lcall
fisttps
mov
movsl
pop
jmp
fildll
add
cmpsl
pushf
fiaddl
shlb
les
dec
or
add
repz
add
repz
jmp
sub
push
stos
mov
xchg
addl
dec
lods
stos
push
jns
jle
mov
jge
pop
or
lods
std
mov
sar
push
lods
mov
push
repz
dec
inc
add
push
cs
adc
daa
popa
out
sbb
pop
fnsave
xchg
mov
jl
xchg
pop
sub
mov
xchg
xchg
mov
or
je
into
fsubl
dec
imul
loope
fyl2x
out
and
lods
testb
add
add
jmp
repz
xchg
insl
lods
ss
lock
shlb
pop
mov
sbb
and
pop
jb
xor
xchg
les
push
jge
test
sbb
addb
stos
lahf
xor
je
lods
das
popa
pop
daa
sub
inc
add
fisubs
adc
data16
adc
cmpl
mov
dec
pushf
into
xchg
jno
add
mov
xor
push
pop
stos
or
call
adc
negb
adc
bound
cli
jb
aam
mov
or
ja
add
xor
notl
jle
fimull
add
cli
sbb
jo
popa
sti
call
rcll
mov
test
xor
out
add
inc
pop
push
dec
jo
sub
test
leave
pop
sbb
and
inc
aaa
add
imul
outsb
mov
add
adc
in
add
mov
add
ds
mov
cmp
cmp
rclb
mov
idivl
ds
add
cmp
repnz
movl
gs
shrl
outsb
cmc
jge
arpl
add
jmp
out
add
add
mov
mov
ret
enter
vpmaddwd
add
dec
mov
movsl
dec
xchg
add
dec
daa
enter
cmp
dec
mov
les
mov
add
add
lret
mov
outsl
js
jbe
js
rcll
inc
add
and
repnz
dec
fcmovnu
mov
cmp
mov
bound
mov
mov
or
dec
push
mov
adc
and
xchg
int
sbb
pop
jne
frstor
push
sbb
les
subl
addb
sahf
out
mov
sub
into
xrelease
imul
jnp
popa
mov
pop
ljmp
and
ss
push
mov
in
ljmp
hlt
sahf
inc
adc
cmp
adc
lds
cld
scas
les
shlb
cmpsl
das
add
addb
cmp
dec
lods
cwtl
sub
push
pusha
add
into
sub
fildl
ret
outsl
and
jno
lock
inc
sbb
xchg
pop
inc
out
add
sahf
imull
adc
out
fs
lahf
dec
insb
xor
adc
adc
call
test
out
add
lret
int
jb
mov
add
pop
xor
ret
std
insb
rdtsc
es
mov
add
and
call
lock
or
imul
js
leave
lds
sti
inc
add
dec
insb
nop
loopne
pop
les
jo
adc
xchg
fwait
and
imul
sub
mov
mov
xor
fcompl
imul
outsb
ret
addb
popf
mov
testl
test
loope
inc
add
decb
cli
dec
dec
insb
mov
xchg
mov
mov
adc
les
push
sbb
dec
jecxz
dec
les
adc
sbb
adc
inc
adc
push
popa
pusha
add
add
adc
inc
add
mov
jns
xor
add
add
or
add
in
shlb
fstl
add
in
fdivl
pusha
add
pop
jbe
xchg
sbb
jno
xor
lret
in
stc
sbb
enter
cld
xor
or
enter
sub
inc
add
xor
enter
bound
jle
pop
lret
push
imul
call
mov
cmc
cmp
add
pop
movb
fcmovnb
add
lods
and
stos
fsubl
fcmovb
add
push
adc
lea
addr16
inc
add
mov
addb
test
int
add
lret
pop
mov
cli
ret
cwtl
lret
addr16
cmp
mov
testb
lds
aaa
push
popf
out
add
push
in
xchg
jecxz
cmp
adc
adc
lcall
mov
jle
lock
sub
lock
mov
mov
push
rorb
mov
sbb
cld
outsb
es
xchg
in
mov
add
test
neg
jo
mov
jb
cmp
pushf
mov
fwait
mov
mov
xchg
popf
jbe
mov
add
iret
push
cmp
leave
cmp
add
cmp
jge
lds
add
jb
scas
push
xor
mov
push
fcoms
adc
jns
sub
fbstp
push
adc
lds
das
lcall
je
les
hlt
xchg
frstor
test
add
jecxz
and
add
mov
cmp
xchg
sbb
aam
icebp
dec
out
push
inc
add
add
add
ja
mov
ljmp
jl
jle
jo
les
or
pop
adc
xor
inc
add
push
adc
push
cltd
and
addb
xchg
ret
push
mov
out
out
bound
inc
clc
aas
les
rcll
mov
sti
inc
loope
lods
jp
jge
jne
mov
nop
dec
pop
xchg
sbb
dec
inc
lods
lds
pop
inc
xchg
adc
movl
stos
stos
fisttpll
xchg
ret
dec
imul
or
je
in
lock
test
add
inc
add
out
push
inc
jae
jns
jns
imul
daa
sbb
int3
dec
stos
shll
xor
lahf
jae
inc
add
mov
movb
mov
pop
loope
adc
fimuls
imul
sbb
test
dec
jbe
jle
sub
push
xor
adc
pop
xor
fwait
imul
add
fwait
repz
sub
add
mov
loop
dec
movsb
sbb
repz
shll
pop
fs
testl
testb
pop
lahf
pop
cwtl
or
push
dec
push
jns
test
mov
inc
mov
mov
cltd
mov
shl
and
mov
xor
orl
push
cmp
scas
cmpsb
in
outsb
mov
push
int3
imul
out
cli
test
sbb
xor
add
lret
loopne
xchg
mov
add
xchg
or
cmp
aaa
imul
fisubs
in
cmpsl
imul
das
mov
and
mov
in
rclb
js
cs
test
push
lret
add
mov
mov
mov
xor
or
adc
push
insl
ss
push
mulb
add
add
jp
mov
mov
add
lahf
lock
dec
push
lret
add
ja
jnp
mov
mov
add
mov
stos
gs
add
xor
lock
add
mov
push
aas
outsl
cmp
enter
xor
dec
dec
mov
or
add
stos
sahf
loope
test
add
ficompl
jae
jg
adc
in
ret
add
lods
dec
jo
pop
test
sub
or
ja
mov
and
jae
lea
adc
add
jle
iret
cli
fwait
push
add
xchg
mov
out
sarl
in
mov
dec
jl
cmp
adcl
incb
jns
inc
add
add
or
cltd
repz
loopne
pop
pop
mov
lods
call
and
mov
das
xchg
aam
clc
pop
lret
fwait
bound
mov
add
in
sbb
mov
in
push
and
adc
push
push
mov
pop
pop
or
jecxz
mov
leave
das
xchg
or
adc
dec
loop
push
jns
leave
fwait
aas
filds
add
mov
xor
jae
xor
inc
mov
xor
imul
jg
rcr
mov
movb
jp
es
call
sub
addb
jae
arpl
sub
fdivs
shr
addb
cmp
or
cmpsl
xor
mov
pmullw
lcall
les
sbb
mov
es
push
jns
xor
push
xchg
xor
js
mov
inc
push
movsb
jbe
xchg
repz
into
push
jbe
js
lock
jl
add
fldcw
fbld
add
cmpsb
add
add
mov
xchg
incl
add
add
movsb
add
cwtl
and
mov
xchg
pop
gs
loope
jp
movsb
mov
add
ficompl
sbb
xlat
adc
push
and
cmpsb
dec
rolb
add
loopne
cmp
test
mov
dec
test
mov
xchg
push
rolb
push
stc
jl,pn
test
imul
dec
cmp
lea
fdiv
pop
ficoml
add
sbb
in
test
push
rorb
cmp
xchg
dec
sbb
sbb
pop
mov
mov
or
add
xor
aad
add
inc
mov
adc
stc
sbb
pop
xchg
xor
or
sbb
mov
adc
loop
rorl
enter
sub
notb
mov
dec
pop
mov
add
xor
test
inc
add
movb
js
add
icebp
dec
mov
cmc
lods
sub
add
fildl
add
aad
clc
xchg
addb
pop
add
adc
add
add
pop
addr16
inc
enter
xor
adc
adc
add
xor
jecxz
lahf
mov
fsts
mov
in
cmp
dec
mov
pop
arpl
mov
pop
push
sub
mov
push
pusha
add
and
pop
xor
inc
add
lds
cmpsl
and
xchg
call
push
jp,pn
dec
dec
mov
lds
mov
shlb
nop
mov
xchg
outsl
lods
mov
aas
and
rcll
fmull
ja
push
rclb
inc
lahf
cmp
lret
push
fsubs
loop
xchg
push
imul
scas
stos
out
pushf
int3
push
cli
fbstp
andl
add
ljmp
jle
jg
and
sbb
mov
or
mov
mov
mov
or
cmc
xor
add
sbb
inc
add
jl
in
push
icebp
mov
loopne
push
mov
dec
xchg
ja
shr
jns
in
lds
data16
outsl
sub
mov
push
mov
and
ret
bound
dec
mov
data16
xor
cmp
push
les
popf
mov
adc
xor
fisttpll
jp
stos
xchg
dec
daa
sahf
dec
pusha
add
pop
adc
push
cmp
lock
xchg
out
inc
add
aam
aas
sub
xchg
and
inc
inc
add
addb
fs
std
das
inc
imul
dec
ficompl
mov
adc
ficomps
cwtl
xor
adc
addb
or
dec
xchg
fmul
jecxz
push
sbb
mov
test
adc
pushf
xchg
enter
push
addb
xchg
mov
fdivl
mov
add
inc
add
shll
xchg
and
pop
aas
imul
push
mov
cmpsb
pop
xchg
arpl
bound
lcall
xchg
les
out
bound
mov
inc
sub
pop
mov
pop
stos
fidivrl
mov
daa
mov
sub
add
lods
dec
jnp
movb
jne
cmp
ss
out
rcr
push
ljmp
outsb
mov
addl
daa
mov
cli
cs
inc
mov
mov
and
cmp
cmp
imul
mov
imul
imul
rolb
or
pop
cltd
das
lahf
outsl
je
or
add
repz
in
or
aad
xchg
in
and
jb
pop
sub
fxch
and
xchg
jne
and
neg
daa
inc
add
das
sub
addb
fld
add
insl
lcall
lahf
xlat
or
xor
add
push
loope
add
fxtract
inc
add
and
xor
and
cmp
clc
dec
lock
dec
pushf
stos
rcr
bound
sub
cmp
xchg
leave
pop
adcl
xchg
or
and
mov
lret
jno
mov
les
inc
add
into
lods
pop
mov
pop
cmpsb
push
xor
or
test
ret
shl
je
ret
dec
sub
add
sub
xor
adc
sub
cmovg
add
mov
add
mov
fcomi
jnp
add
push
fmuls
cmpsl
aas
idivb
insl
inc
add
cs
jb
les
pop
cmp
and
add
pop
cwtl
mov
xor
xor
out
pop
and
scas
add
enter
or
xchg
repz
rcll
xchg
pushf
adcl
cmp
loop
mov
mov
scas
cmp
adc
push
or
sbb
xchg
icebp
jno
test
xchg
or
or
add
add
dec
addl
test
ljmp
aas
inc
add
pusha
add
rclb
add
clc
imul
sbb
inc
lods
push
mov
sbb
out
add
or
in
sub
mov
mov
imul
pextrw
and
xor
dec
loopne
push
pop
jmp
add
stc
fdivrs
cwtl
mov
or
pushf
cmp
mov
xor
in
ficompl
inc
add
mov
pop
push
outsb
hlt
sbb
xchg
mov
mov
add
jnp
xlat
xor
fnstcw
and
push
cmp
pushf
insb
aam
in
push
sarl
mov
fildll
push
or
jbe
scas
scas
mov
mov
stos
xor
lods
cld
ds
mov
sbb
les
sahf
mov
sub
cmpsb
fwait
dec
fadds
cli
add
add
xchg
lea
stos
lret
push
int3
mov
xchg
mov
stos
mov
subl
divl
jecxz
push
fwait
or
sbb
push
stc
icebp
movb
adc
sbb
movsl
pop
repnz
sbb
xor
ds
xchg
cmc
xchg
ja
mov
icebp
and
push
dec
cwtl
stos
pusha
add
add
sbb
aam
and
mov
mov
addb
push
cs
pop
test
inc
add
and
test
loopne
pop
xor
out
jge
add
mov
fldl
lret
pusha
add
pop
inc
add
imul
movsl
jg
push
push
xchg
jb
imul
mov
imul
and
int
sbb
add
mov
addb
push
pop
test
xchg
mov
push
leave
test
int3
push
fadd
inc
add
outsb
enter
jg
in
push
inc
add
mov
hlt
cmpsb
or
and
pop
hlt
pop
aas
push
scas
insl
test
fldenv
lock
cmp
add
cmp
push
xor
push
daa
sub
mov
xchg
mov
pop
xchg
push
imul
add
loopne
pop
mov
mov
add
dec
add
push
pusha
add
add
adc
orl
xchg
add
add
push
mov
dec
sub
mov
out
jbe
add
adc
mov
add
dec
mov
aam
mov
aaa
sahf
and
adc
popa
aad
fs
imul
pop
sub
cltd
xchg
popa
loopne
dec
mov
out
pop
push
add
jbe
lea
lahf
lahf
gs
xchg
rcll
subl
xchg
lahf
mov
fsub
lret
xchg
mov
mov
cmc
loopne
add
cld
repz
in
sbb
lods
adc
arpl
add
add
pop
mov
out
pop
inc
lock
imul
xor
mov
jp
and
fcomps
iret
notb
test
pop
inc
add
insl
mov
dec
mov
jns
adc
xor
mov
lds
cmp
jae
xor
mov
jae
push
je
jno
nop
sbb
adc
add
sbb
add
testb
cmovae
add
add
mov
mov
add
and
je
inc
add
add
addb
ret
into
cld
aad
sbb
dec
adc
inc
sbbl
dec
sub
or
jbe
iret
popa
clc
push
test
sub
mov
sbb
mov
add
xchg
cmp
inc
add
mov
dec
mov
mov
popa
xchg
xchg
jecxz
lcall
dec
cmp
pusha
add
dec
ja
aas
das
jmp
fists
cli
push
bound
int
fucom
mov
ret
sub
in
xor
daa
sbb
adc
repnz
add
add
daa
icebp
lds
in
cmp
scas
xchg
xor
add
imul
enter
in
sbb
xchg
call
sub
or
icebp
cmp
inc
add
jnp
mov
ds
mov
dec
adc
je
adc
hlt
test
mov
dec
mov
add
mov
shl
jmp
jmp
and
in
sub
outsb
inc
fcoml
xor
in
inc
add
out
insl
or
jne
loope
mov
in
out
cmpl
mov
add
or
jmp
cmp
movsb
adc
add
mov
jb
mov
push
imul
jnp
ret
lea
push
mov
mov
sbb
xchg
adc
fistpl
jge
int
imul
mov
inc
add
std
emms
xor
fcompl
xor
addb
add
adc
es
sub
sub
or
fimull
xchg
cmp
dec
adc
mov
add
xlat
loopne
and
pop
adc
pop
cmp
inc
pop
lea
popaw
popa
inc
add
inc
add
ficompl
pop
jg
addb
push
add
insl
sub
cmp
inc
add
mov
mov
aam
add
pop
sub
jmp
mov
lds
cmp
mov
cmpsl
fldt
dec
test
add
int
jp
fmuls
iret
sbb
push
in
push
cmpsb
out
cld
std
mov
push
test
into
add
add
add
into
lock
mov
and
dec
fisttpl
xchg
cwtl
mov
mov
mov
jne
pop
pop
stc
sbb
lds
lahf
out
pmuludq
mov
mov
lahf
pop
or
jecxz
inc
lret
and
scas
rorb
in
jg
mov
add
fisubl
scas
test
cmp
int3
cwtl
movb
fstpl
pop
pop
hlt
pop
clc
mov
out
mov
cmpsl
rcll
cmp
jne
sub
sub
cmp
std
repnz
inc
add
mov
into
dec
or
pushf
mov
imul
mov
dec
jns
dec
ja
mov
xchg
mov
xlat
das
fdivrl
lds
mov
fimuls
add
add
imul
sbb
add
pop
bound
push
adc
add
sbb
add
and
adc
imul
mov
cmp
int
stc
xchg
ret
lock
outsl
ja
xchg
sar
into
sub
lock
and
repz
xor
call
bound
mov
mov
add
pop
push
add
orl
iret
adc
lods
dec
clc
ret
xchg
xor
pop
outsl
aad
cltd
and
imul
sti
pop
std
into
jecxz
lock
push
add
ret
outsl
je
pop
or
add
mov
adc
ds
add
or
sbb
push
add
shll
cmp
cwtl
push
pop
cmp
add
fisubs
jmp
mov
push
add
popa
xor
inc
add
movb
jbe
xor
fdivrl
add
sbb
lahf
mov
iret
mov
push
push
dec
jmp
insl
mov
iret
inc
add
inc
adcl
dec
xchg
fwait
push
in
sbb
add
push
mov
std
mov
add
repz
repnz
sub
lret
test
lods
mov
pusha
add
clc
in
and
and
addb
addb
add
loopne
in
or
or
add
pop
jg
repz
pop
in
mov
out
jbe
sbb
mov
out
fs
cmp
pop
inc
add
cmp
xor
xchg
mov
loope
inc
es
xlat
xchg
insl
aas
rep
test
in
fwait
inc
add
jne
push
inc
add
push
add
les
lret
lcall
add
dec
shrb
xor
add
out
mov
jge
add
dec
mov
or
push
scas
jl
fildll
fidivs
jbe
cmp
xor
add
std
movsb
adc
inc
lea
dec
insb
push
mov
add
xorl
and
xor
jle
inc
add
add
repz
cld
daa
pop
out
mov
daa
pop
or
fdivrl
adc
inc
or
pushf
mov
jp
jae
jp
pop
shll
sbb
and
ret
out
imul
sti
add
cs
jecxz
xor
add
add
xor
loope
or
cmp
jecxz
dec
mov
orl
xor
and
mov
cmp
add
mov
imul
sahf
rorb
je
or
out
out
push
loopne
xor
jp
add
mov
add
cmpl
out
xor
mov
mov
inc
jne
add
ret
push
scas
je
adc
cs
into
mov
stos
es
or
jno
push
in
leave
mov
sub
lcall
cltd
mov
mov
or
roll
ret
hlt
ret
iret
out
and
adc
mov
add
jae
adc
sub
inc
lret
push
insl
lods
cld
push
xor
and
jg
inc
add
addb
add
movsb
jae
inc
sbb
inc
add
mov
sbb
gs
mov
rol
mov
add
inc
add
repz
ljmp
out
lods
inc
add
sarb
adc
or
jne
xor
pushl
sub
test
xor
mov
push
jae
push
je
js
cwtl
mov
pop
daa
cmp
repnz
daa
fstpl
xchg
mov
jmp
and
pop
movsl
mov
in
popf
jp
add
pop
sub
outsb
insl
pop
out
inc
add
add
in
jecxz
mov
pop
xor
test
xor
xchg
mov
adc
fwait
or
shrb
mov
add
add
and
pop
mov
icebp
dec
and
ret
add
loop
add
or
clc
addb
sarb
mov
mov
enter
adc
insl
xchg
dec
test
sbb
pop
fwait
jno
adc
loopne
rolb
or
mov
dec
pop
inc
pop
enter
sbb
cmp
and
mov
jb
adc
jno
sbb
jae
in
aaa
ret
icebp
jecxz
loop
mov
add
stc
adc
push
sub
aas
out
pop
loope
jp
dec
loopne
ret
and
add
lahf
and
movsb
sbb
es
inc
rolb
pop
push
addb
shr
jp
cmp
imul
outsb
into
push
pushf
push
adc
jp
sbb
call
and
mov
push
jg
add
addb
sub
push
adc
aam
scas
inc
add
adcl
add
or
addr16
xor
add
fistpll
in
cmp
lds
call
ja
dec
iret
cld
das
xor
mov
xlat
xchg
shr
sbb
or
push
inc
fbstp
jno
pushf
lcall
mov
add
pop
sub
or
jl
hlt
sub
dec
das
mov
and
leave
xchg
mov
lock
negb
add
pusha
add
mov
cmp
mov
enter
std
std
lea
mov
movsb
inc
mov
add
add
sub
add
add
pop
and
cltd
jecxz
dec
or
lahf
add
out
mov
mov
inc
add
fs
int
add
add
ds
cmp
add
dec
mov
stos
mov
loop
rolb
addb
add
cmpsb
jmp
add
jecxz
xor
pop
sbb
cmp
or
pop
push
add
xchg
lcall
add
xor
xchg
out
sub
outsb
jp
mov
fsubs
add
adc
rolb
or
in
add
popa
lea
ljmp
js
pop
lods
sub
ret
adc
add
cmp
daa
adc
shll
dec
out
insl
pop
mov
iret
xchg
imul
add
add
sarb
lods
addb
subl
les
aaa
scas
hlt
cmp
cmp
cmp
jp
pop
cmpsb
scas
jbe
push
int3
cmc
stos
imul
add
dec
ret
pop
outsl
jge
pop
push
xor
xor
or
gs
into
fwait
and
pushf
xor
addr16
fisubrs
cltd
push
aad
outsl
adc
add
and
out
fwait
cli
sbb
lock
or
sti
cmp
stos
push
add
cltd
push
pop
mov
scas
add
loop
jmp
aaa
or
nop
decb
xor
stos
inc
leave
negb
pop
mov
or
sbb
sbb
xchg
pusha
add
mov
xchg
xchg
sarl
stc
mov
inc
add
sahf
mov
sahf
dec
sbb
int
inc
test
loopne
fsin
in
in
and
test
scas
mov
mov
das
xchg
add
xchg
mov
and
pop
fistps
add
mov
pop
test
cmpsb
cmpsb
mov
fistps
gs
mov
ljmp
dec
xchg
pop
cmp
incb
add
xor
add
fbstp
mov
fdivrl
jb
add
add
dec
mov
pop
cwtl
movsb
push
jno
mov
icebp
add
jbe
jmp
adc
add
pushf
addr16
out
sbb
cs
repnz
mov
jae
repz
dec
pop
cmp
in
pop
negb
jmp
or
inc
add
insl
aam
cltd
jnp
lcall
sub
push
or
jmp
xor
jp
punpckhdq
jns
imul
add
dec
pusha
add
mov
cwtl
mov
adc
lret
nop
testl
xchg
inc
imul
xchg
xor
xchg
and
adc
insb
out
jnp
or
push
sti
sub
rcll
pusha
add
inc
add
movsl
push
add
sub
xchg
lahf
stc
fcmovnu
sbb
xlat
scas
jecxz
pop
mov
scas
popa
mov
pop
inc
add
pop
xor
pop
insb
flds
lahf
cltd
pushw
push
das
xchg
out
fnstsw
fsubrp
fbstp
add
arpl
or
fwait
lods
negl
aam
shrb
jns
adc
lret
test
ds
mov
out
addr16
xchg
mov
push
sbb
cltd
add
in
add
jp
push
jb
cs
push
flds
test
clc
les
fwait
sbb
mov
add
pushf
aas
lds
sbb
add
movb
adc
mov
addb
adc
ret
sub
loopne
sub
jno
movsl
aaa
or
int3
mov
inc
add
hlt
or
lcall
ss
xchg
repz
fcmove
gs
add
adc
cmpsb
popa
les
inc
add
enter
stc
jge
or
xchg
mov
xchg
rcll
iret
cmc
je
sub
ret
sahf
addb
adc
andl
add
cmp
jmp
lods
adc
mov
shll
add
clc
addb
popf
loopne
mov
test
and
lea
jne
push
repz
enter
je
fildll
xchg
adc
mov
mov
test
bound
push
cwtl
or
inc
add
ret
jne
rorl
or
push
enter
add
imul
add
cmpsb
cltd
pop
ret
int
fistpl
lock
jnp
scas
and
xor
cmc
inc
add
jnp
es
into
hlt
cmp
addr16
add
ret
mov
pop
inc
jo
mov
add
movb
cwtl
cmp
add
lds
mov
xchg
xchg
and
popa
or
outsb
negl
inc
cmp
imul
popl
movsb
rcl
xchg
repnz
ret
loope
jp
cmpl
imul
and
mov
icebp
scas
sub
mov
xchg
inc
add
jno
enter
cmp
leave
pop
cmp
sub
or
aam
icebp
inc
movsl
cmp
push
cmp
outsl
repnz
pop
movsl
add
jg
jno
add
push
ds
dec
mov
test
xor
out
fwait
mov
popf
fcoms
dec
mov
js
inc
lods
mov
sbb
add
bswap
mov
push
add
pop
addb
roll
cmp
scas
arpl
mov
outsb
pop
es
add
fcmovne
pop
in
push
inc
mov
stos
ljmp
add
add
maxps
cmpsl
pop
rol
add
add
int3
sbb
sbb
add
out
ja
lods
mov
push
out
ljmp
fstpt
aad
add
hlt
inc
add
in
stos
std
xchg
jecxz
and
cmp
push
fcoms
push
repnz
mov
pop
mov
outsb
xor
mov
shld
xchg
aad
mov
or
outsb
mov
ss
xchg
sub
add
cmp
mov
std
arpl
shl
repnz
les
inc
and
jo,pn
add
add
je
lds
cmpsb
fbstp
in
mov
int
js
test
daa
les
jle
dec
mov
mov
es
or
jecxz
xchg
scas
and
jns
repz
sbb
xor
and
imul
pop
push
xor
adc
into
bound
out
pushf
xchg
lods
stos
into
pop
fiadds
and
jge
fldl
dec
mov
lods
push
mov
add
mov
out
ret
sbb
mov
jnp
dec
lea
test
lods
lods
mov
push
xchg
mov
ds
mov
addb
lds
push
or
lret
cmp
dec
sub
cmp
jns
fwait
jg
sub
xchg
in
adc
arpl
mov
leave
xor
outsl
xor
fcmovb
add
add
inc
out
mov
push
mov
cs
sbb
add
test
push
cmc
bound
mov
jne
std
mov
add
push
test
int3
mov
add
and
fwait
jnp
xor
stos
mov
or
ret
mov
cmp
popf
sbb
add
mov
sbb
dec
mov
push
sub
push
mov
add
pop
cmp
and
rclb
sbb
xchg
pushf
inc
add
test
xor
test
sbb
push
cld
or
push
jmp
push
xorl
scas
adc
jmp
gs
mov
mov
push
add
lods
mov
outsl
push
jae
mov
pop
sub
test
sti
in
mov
add
cld
ja
pop
inc
add
add
fld
add
push
movb
sub
lahf
fcmovnu
aaa
int3
adc
add
add
out
xlat
sbb
lcall
divb
push
inc
add
inc
add
in
mov
test
add
add
add
cmpsl
call
adc
add
in
lock
cmc
jb
test
ja
xor
sti
xor
pop
xchg
out
hlt
rorl
mov
repnz
jle
loopne
and
cmp
je
in
add
scas
add
mov
mov
mov
aam
lods
mov
or
dec
mov
push
iret
mov
and
push
sbb
mov
and
add
stc
xor
inc
add
jl
push
inc
add
add
fistps
jp
xchg
imul
mov
ja
divw
xchg
push
mov
or
shll
std
fisubl
mov
nop
cmp
test
add
xor
les
cld
mov
movsl
test
loopne
sbb
or
aam
ds
sub
pop
xchg
add
xor
and
push
in
repz
jno
cmpsl
cli
and
into
insb
adc
add
aad
clc
jo
cld
add
stos
jno
cmp
decl
repz
mov
pushf
out
jp
add
addb
fwait
in
movsl
jmp
sahf
in
xchg
mov
mov
shll
add
add
jg
test
stc
push
pop
sub
adc
ss
jae
mov
std
inc
sahf
and
mov
addr16
inc
pop
aaa
xchg
sub
xor
add
pop
aas
mov
pop
mov
ds
mov
xor
nop
imul
cmp
packsswb
add
ret
dec
dec
sbb
cmp
jge
add
popa
mov
les
sti
imul
add
add
bound
inc
lret
xchg
dec
bound
fisubrs
cwtl
jne
aaa
cltd
mov
push
aaa
addl
add
jno
mov
imul
push
dec
mov
jne
push
cmp
pop
in
mov
mov
dec
xor
xchg
jmp
cmp
jge
mov
mov
add
mov
pop
je
cmp
clc
stos
sbb
mov
pop
cltd
jne
xor
insl
cmp
gs
cmp
das
rol
lock
or
stos
dec
rolb
loop
psllw
clc
pop
xor
ja
add
and
ja
das
ss
lcall
cmp
jbe
ret
rorb
or
mov
xlat
dec
aad
mov
in
test
loope
push
xchg
je
or
jge
imul
ja
mov
add
inc
add
mov
rolb
add
xorl
jmp
jecxz
test
mov
add
loopne
stc
in
insl
inc
lock
aaa
fcomp
daa
movsb
cwtl
cwtl
in
mov
or
addb
aad
mov
or
in
mov
into
jnp
icebp
inc
pop
lret
sbb
pop
rolb
popa
fdivl
in
out
mov
cmp
dec
fwait
aad
add
repnz
bound
mov
jecxz
iret
and
dec
cmpsl
std
daa
shlb
add
std
cwtl
inc
add
bnd
pushf
xchg
cld
outsl
xor
jl
add
movsl
adc
int3
inc
add
neg
push
mov
add
sti
add
xor
adc
enter
inc
in
push
xchg
test
lret
mov
or
add
add
cmp
in
outsb
inc
js
pop
pop
sbbl
add
adc
cs
xchg
and
divl
jmp
jmp
inc
add
lods
icebp
pop
out
cmpsb
mov
sahf
test
mov
int
sub
jecxz
lock
xor
movsb
lds
add
add
aam
out
cs
push
lahf
mov
fstpt
loop
add
jecxz
sub
add
pop
push
and
cwtl
faddl
add
add
sbb
stos
dec
dec
enter
sbb
int3
mov
jle
and
aam
lcall
xchg
mov
rcrl
or
jg
in
aad
cmp
or
aam
or
leave
mov
les
ja
add
loop
mov
sub
inc
cmc
jp
mov
pop
xchg
shrb
dec
mov
pop
pop
test
mov
pusha
add
aam
insl
or
add
jl
hlt
dec
inc
loopne
into
cmp
or
addr16
js
or
out
mov
inc
hlt
sub
aad
xchg
mov
add
or
add
xor
popf
inc
add
or
add
fdivr
inc
add
sahf
mov
jb
pop
js
add
out
les
fnstenv
cmp
and
fadd
fadds
dec
out
es
mov
add
ds
or
dec
inc
popa
mov
inc
std
and
icebp
jne
and
fisubrs
out
xchg
dec
jno
cmp
std
jb
js
mov
in
popf
mov
mov
push
pop
out
outsb
xor
mov
jne
nop
sub
movsl
xchg
out
xchg
push
xchg
int3
ret
mov
push
popf
out
fdivl
mov
sbb
imul
mov
cmp
into
xor
lock
jns
or
and
push
mov
xchg
std
xorl
pop
adc
pop
dec
aas
movsl
aad
lahf
out
in
add
sub
cmpsb
fldt
rcr
jns
dec
icebp
cmp
sub
fmull
add
adc
xchg
test
xor
inc
or
movsb
addr16
pop
inc
add
adc
test
loop
jb
addb
add
movb
ljmp
cmpl
rolb
mov
cmc
sbb
adc
divb
sub
addb
adc
lds
add
add
dec
mov
mov
out
mov
arpl
loopne
lds
mov
add
or
je
arpl
mov
xor
xor
inc
add
sub
aam
movsb
fsts
xlat
cli
pop
rolb
aaa
ret
or
sub
aad
mov
fnstsw
je
pop
push
pusha
add
pop
push
jecxz
add
xor
lock
jns
stos
and
mov
push
ret
dec
pop
iret
cwtl
nop
loope
addr16
lock
pop
jl
add
xorl
push
and
jg
jne
add
addb
bsf
leave
mov
loop
call
and
dec
testl
add
cmp
pusha
add
mov
add
mov
mov
add
mov
fs
and
testl
jecxz
mov
add
jle
outsl
jne
or
repz
aad
int3
cmp
adc
xor
xchg
mov
adc
in
lcall
mov
xorl
or
push
test
ss
pop
loopne
mov
iret
jle
add
mov
xor
mov
add
daa
roll
add
add
dec
movb
add
and
out
inc
add
mov
xchg
rolb
mov
addb
outsb
add
scas
push
lds
mov
jo
ss
jo
lds
sarl
xor
imul
test
jl
add
xor
jmp
loopne
push
cwtl
xor
push
and
add
ljmp
adc
add
iret
or
jle
push
rolb
xchg
repnz
ja
jp
ds
cmp
rep
pop
push
stos
mov
cmc
mov
cmp
pop
sbb
sbb
imul
inc
push
sti
mov
push
add
push
in
adc
cmpsb
sarl
je
add
shl
cli
xchg
out
jno
add
cmp
loopne
inc
and
add
lret
loop
rcl
flds
add
out
pusha
add
inc
repnz
cli
ret
sbb
dec
out
add
mov
cs
add
jns
jno
outsb
pop
aad
pop
mov
or
mov
in
ret
push
cmp
sbb
fldz
les
fisubrs
rcrl
mov
lods
sub
adc
pop
stc
in
ljmp
das
lods
inc
ret
cmc
xor
add
fcmovnbe
and
add
sbb
dec
daa
lahf
and
jns
lods
mov
and
dec
mov
cmpsb
das
pop
mov
sbb
push
scas
xchg
out
fwait
sub
sub
mov
mov
cmpsl
adc
pop
mov
loope
pop
and
jmp
int3
or
int
ror
jmp
and
xchg
lods
push
dec
jae
add
ja
push
mov
rolb
push
sub
lods
lods
clc
push
add
add
inc
add
imul
shll
sbb
ljmp
xor
repnz
push
push
movsb
mov
push
xlat
aas
add
scas
xlat
push
add
hlt
or
leave
fldcw
sbb
mov
push
jg
adc
stos
cli
mov
pushf
pop
jge
cs
add
mov
or
mov
dec
jecxz
mov
sbb
lcall
outsl
test
pop
test
sbb
cli
jl
add
mov
inc
add
inc
add
pop
sbb
aad
xchg
out
xchg
jmp
in
loope
xorl
jne
add
or
out
add
out
addr16
inc
add
add
js
cld
add
pop
in
xchg
dec
lahf
mov
out
dec
adc
mov
mov
divb
jecxz
movsl
and
shlb
call
adc
icebp
jnp
or
lods
cmp
sbb
push
cmp
jnp
fs
movb
mov
popf
fstpl
xchg
jge
adc
cmp
aaa
xchg
add
dec
mov
xchg
sub
test
imul
aam
add
dec
mov
test
sahf
shr
leave
rcrb
fwait
mul
movsb
jae
std
dec
xchg
sub
popf
sbb
jge
sbb
std
cltd
leave
movb
push
aaa
mov
add
adc
mov
jg
repnz
xchg
cld
stos
je
jne
fistpll
popf
sub
inc
aad
sub
sub
dec
test
mov
sbb
xor
test
addb
aas
adc
sbb
ljmp
movb
inc
add
xorl
push
lea
jecxz
adc
scas
call
and
cmp
xchg
cltd
pop
xsaves
add
sub
mov
fsubp
cmp
add
jno
bound
inc
add
push
lret
or
dec
repz
out
sbb
xchg
insl
mov
pop
cmpsl
je
inc
add
xchg
adc
in
jb
mov
pop
sub
or
add
or
loopne
cmpsb
aaa
lods
insl
dec
and
add
add
mov
fwait
xchg
push
mov
or
inc
add
pop
or
add
mov
enter
std
lahf
jo
pop
or
fs
fidivl
pop
xor
shl
leave
xor
push
fmull
mov
dec
enter
dec
mov
add
call
cmpsl
fmuls
jecxz
and
je
adcl
insl
dec
adc
add
add
out
mov
jo
aad
ficomps
addb
jle
arpl
sti
pusha
add
add
imul
aam
inc
add
lret
ljmp
mov
sub
stos
popf
es
cmpsl
pop
lcall
add
movb
mov
add
sarl
bound
xor
data16
mov
or
daa
mov
imul
es
out
push
enter
lret
mov
pop
cmp
les
out
loopne
imul
std
addb
add
mov
jecxz
je
add
add
lretw
add
je
js
into
lods
xchg
fwait
add
add
mov
xchg
fwait
sbb
fs
inc
add
jbe
adc
push
ds
fisubrs
mov
jb
out
push
fcoms
mov
adc
gs
insl
out
int
xchg
xor
cltd
iret
adc
add
xor
pop
mov
cmpsl
movsb
insb
add
loopne
mov
inc
add
mov
out
lods
mov
sbb
jae
hlt
inc
jnp
repz
out
sub
inc
movl
jmp
mov
sbb
mov
sub
fdivl
mov
mov
jge
jle
loop,pt
xor
mov
ret
mov
sub
cmpsb
mov
push
cmpl
popa
inc
sub
enter
das
mov
mov
dec
jle
push
mov
test
pop
cmp
imul
bound
aam
add
add
xchg
xor
fldl
in
xchg
dec
mov
jo
adc
lds
push
ljmp
js
scas
jo
or
fcoms
mov
add
int3
aad
mul
ficomps
ret
sub
mov
xchg
dec
pusha
add
aas
stos
cmp
ja
pop
sub
xchg
xchg
pop
push
es
das
or
inc
xor
jmp
aas
mov
add
mov
aas
jno
adc
std
loopne
dec
dec
and
lock
sub
cmpsl
jne
pop
xor
loopne
pop
jl
mov
add
aas
test
pop
jns
xchg
inc
add
addb
cli
jb
shlb
and
mov
lods
pushf
adc
fwait
push
xchg
sub
sbbl
dec
dec
cmp
outsl
das
outsl
or
lcall
adc
mov
mov
cmp
scas
jp
pusha
add
pop
iret
mov
dec
insb
aaa
and
pop
ljmp
push
pop
test
inc
add
lret
dec
lcall
pop
shll
xchg
adc
jg
cmp
cltd
cmpsb
ds
jecxz
add
mov
push
sub
sbb
sbb
xchg
dec
add
inc
xchg
je
sub
or
and
fdivl
out
dec
repz
add
mov
add
jg
outsb
call
dec
push
insb
icebp
xchg
mov
movsl
mov
push
jne
mov
rorb
cmp
jmp
sub
cld
mov
jnp
sub
dec
xchg
push
xor
ret
enter
adc
add
or
inc
fwait
mov
inc
add
sbb
xor
mov
mov
xchg
sarb
inc
popf
mov
push
push
xchg
and
and
mov
je
test
mov
rcrl
pop
xor
push
mov
testb
inc
xchg
into
push
push
cmp
sbb
ret
add
mov
push
pop
ror
outsb
cli
leave
jns
add
in
cmp
gs
xchg
ds
mov
jne
lcall
push
and
ja
das
jg
nop
mov
pusha
add
mov
pop
lcall
iret
sub
add
and
aad
mov
adc
mov
and
adc
dec
popf
enter
cld
test
adc
dec
mov
icebp
popa
out
lret
xor
imulb
les
popa
mov
add
jg
pop
mov
dec
jmp
dec
jae
xchg
addb
add
jl
jnp
add
rcr
insb
ljmp
adc
lcall
inc
repz
in
pop
fs
add
movups
leave
dec
push
and
inc
pop
lret
pop
mov
shll
add
in
insb
nop
imul
clc
lret
adc
pusha
add
add
movsl
push
mov
pop
pop
add
std
pop
add
pop
rcrl
push
aas
jge
xchg
orl
cmp
bound
inc
add
push
nop
test
cmc
iret
xchg
cmp
lock
jb
clc
ja
movb
mov
mov
mov
xchg
pushf
dec
xchg
add
sbb
and
icebp
les
adc
jbe
scas
cmp
jbe
push
sbb
int3
xchg
clc
sub
add
fcmovne
mov
push
daa
scas
and
xchg
lock
in
and
in
rolb
sbbl
movsb
jl
and
add
push
mov
leave
xchg
test
xchg
mov
sub
add
and
icebp
sbb
loope
xchg
jge
idiv
xor
sbb
shll
fbstp
jp
add
or
fsubrs
dec
lret
leave
iret
push
add
idivb
push
jne
mov
jb
lahf
xchg
mov
rclb
xor
stos
lods
dec
ljmp
movsl
cmp
stos
mov
push
push
pushw
xor
lret
loop
add
mov
in
ret
pop
xchg
cmp
push
and
sbb
push
pop
cltd
mov
mov
xchg
cmpsl
inc
mov
test
inc
add
add
mov
movsl
xor
fwait
setle
jo
loope
xchg
es
and
data16
flds
inc
add
popf
aad
adc
mov
add
cli
imul
aad
sub
jecxz
je
cs
test
pop
imul
sbb
testl
arpl
cmp
daa
addb
daa
add
mov
cmp
push
rolb
jmp
xlat
lcall
popf
outsb
mov
fucomi
xchg
xor
xchg
mov
push
aam
aad
and
out
push
roll
hlt
sub
retw
test
jecxz
and
mov
dec
ror
and
mov
push
pop
add
push
sbb
xchg
mov
arpl
test
aaa
out
mov
inc
pop
mov
or
mov
bound
dec
pop
cmpsb
lock
sub
lock
sti
loopne
push
pop
jo
add
jb
sbb
je
xchg
dec
add
jmp
xchg
imul
sub
mov
lret
lea
jae
imul
mov
hlt
je
dec
fiadds
xor
mov
xor
xor
popw
mov
fdivrs
je
xchg
popf
movsb
addb
adc
mov
loopne
sub
std
loop
add
add
arpl
xor
repz
lcall
sarl
arpl
int
scas
push
mov
add
pop
pop
dec
push
push
and
stos
pop
sub
rolb
clc
xor
and
loop
dec
aam
leave
xchg
inc
shr
push
inc
pop
daa
repz
add
dec
cs
inc
dec
testb
cmp
sti
push
push
popa
out
repnz
rolb
jnp
add
lods
jb
sub
mov
addb
push
in
pop
stc
or
repnz
push
test
movb
jno
push
xchg
and
adc
dec
jne
fdivrp
mov
lret
xlat
jl
lret
cmp
cwtl
xor
into
mov
mov
mov
add
cmp
nop
dec
incb
cld
jle
lds
xor
loopne
add
loop
or
shrl
lret
jnp
xor
add
ss
lcall
pop
dec
lds
in
sahf
insl
addr16
xor
xchg
inc
sub
xor
leave
cs
dec
into
jns
mov
add
push
push
adc
pop
mov
inc
lods
les
pop
fildll
mov
addr16
or
fcomps
sub
xor
inc
mov
adc
popa
inc
call
call
jg
mov
pop
in
add
cmp
add
jle
test
push
adc
mov
fcompl
push
lahf
dec
fnstsw
loope,pt
mov
mov
mov
fld
add
scas
js
xor
pushw
cmp
mov
add
lcall
sbb
test
mov
jmp
push
xlat
pop
divb
or
fcompl
adc
sbb
addl
or
mov
stc
jecxz
add
jl
pop
xchg
ds
out
add
jbe
add
mov
sbb
outsl
stos
jmp
or
rcrl
fwait
adc
fidivl
insb
insl
or
or
add
andps
bound
test
out
xrelease
inc
add
mov
pop
mov
inc
add
mov
fisubs
adc
lds
addl
sbb
sbb
push
cmpsl
movb
cltd
dec
adcl
nop
xchg
les
sbb
add
pop
xor
pop
popf
cmp
jo
mov
adc
loop
or
xor
dec
jp
add
sarl
aam
cmp
and
cmp
sub
inc
add
xor
sbb
pop
je
mov
movsl
or
sub
lahf
add
js
in
and
add
add
cmp
sub
jne
inc
aas
jo
andl
adcl
fwait
scas
mov
testb
in
outsb
mov
mov
add
jmp
sahf
clc
xchg
inc
add
jns
call
cmc
ljmp
adc
loope
inc
xorl
fwait
mov
pop
inc
inc
add
in
or
xchg
mov
xor
sub
mov
mov
mov
pop
loope
mov
daa
pop
xchg
push
pop
jb
xchg
add
xchg
sbb
gs
js
in
mull
roll
fidivs
jnp
add
lods
mov
in
lcall
loopne
pushf
and
add
push
loope
sahf
dec
mov
mov
pop
cmp
add
jo
adcl
xchg
sbbl
add
lret
aas
cmp
add
add
mov
add
cmpsb
sbb
mov
inc
add
cmp
lea
pop
sbb
sbb
and
jo
cld
incl
xchg
mov
jl
movsb
push
mov
rcl
loope
jg
add
sahf
fsubrs
dec
fsubr
cmp
aas
stos
push
es
and
jb
mov
popa
sub
mov
add
inc
xor
pop
mov
lea
in
and
ja
inc
cmp
scas
pop
dec
aad
test
imul
cmp
mov
les
insl
test
sbb
sub
addb
movsb
movsb
lea
cltd
out
or
add
cmp
rorb
add
sub
imul
lcall
gs
addb
cmp
rclb
push
lea
jg
and
in
loopne
stos
inc
add
iret
sti
ficoml
jo
mov
lret
cmpl
cmpsb
out
pushf
shlb
ljmp
xchg
xchg
les
test
add
mov
addb
in
mov
add
jle
outsl
jecxz
sub
and
mov
test
xchg
cmp
cmp
sahf
test
xor
add
dec
lahf
lcall
jne
test
xchg
rcll
push
sbb
mov
aaa
sarb
out
mov
push
add
divb
add
adc
stos
sbb
jbe
add
outsl
inc
pop
aad
aad
insb
or
jle
cwtl
pop
out
out
push
repz
and
add
scas
cmpsb
xor
add
xor
imul
popa
inc
in
imul
rolb
add
imul
mov
pop
or
outsl
test
addr16
add
add
sub
and
xor
rolb
sub
stos
add
out
jg
add
add
or
push
fmull
js
add
jo
inc
add
dec
or
data16
add
dec
pop
push
dec
js
aad
mov
or
add
bound
lods
fs
frstor
mov
add
pop
jo
and
sub
addb
arpl
ficomps
xor
jmp
mov
mov
add
jg
in
xchg
sahf
push
or
mov
mov
add
adc
aad
inc
dec
lcall
mov
add
pop
push
add
cmp
aaa
decl
inc
push
sbb
je
aad
sbb
jecxz
in
mov
adc
inc
pop
pushf
jg
add
or
fidivrl
outsl
sbb
add
fisttps
into
test
hlt
jbe
cmp
shll
add
rcr
push
pop
cs
stos
dec
cmpsl
fsub
cmp
sbb
bswap
into
jmp
movsl
push
lods
pop
popf
cmc
and
dec
daa
pop
xlat
hlt
cld
out
jne
mov
addr16
add
imul
imul
mov
xor
fisubrl
or
inc
xchg
test
dec
pop
scas
in
clc
pop
add
andl
mov
aaa
inc
add
test
add
jno
add
jl
add
inc
inc
add
and
sub
and
add
sub
and
fnsave
outsb
xlat
cmp
and
xor
iret
dec
jne
mov
add
mov
repz
rclb
xchg
into
xchg
je
add
shlb
sub
das
dec
hlt
jecxz
sub
inc
add
aaa
mov
push
cmp
enter
idivb
cs
sbb
and
iret
push
push
adc
or
and
cld
inc
add
andl
jnp
ds
aaa
arpl
pop
pop
xchg
fsubr
mov
add
xchg
ljmp
test
cmpsb
dec
cmc
addb
hlt
mov
push
lods
mov
and
sbb
add
lahf
add
and
jle
fistps
add
incl
xor
xchg
popa
cli
xor
addl
mov
xor
fildll
loope
pop
mov
inc
add
outsb
dec
inc
add
dec
pop
sub
into
int3
cmc
and
lcall
and
nop
les
mov
sahf
cmp
sti
or
inc
add
xchg
or
cmpsl
mov
push
stos
jmp
out
shlb
adc
push
xchg
fisubs
xor
mov
sbb
mov
addb
sub
mov
adc
add
pop
push
aas
jo
and
adc
push
mov
repnz
fwait
jg
or
inc
add
mov
outsl
int3
push
roll
add
cmp
mov
xchg
cmpsb
std
pop
or
inc
push
sbb
sarl
push
sub
test
or
push
add
add
jnp
in
push
adc
dec
test
test
aad
mov
movsl
testb
add
push
pop
or
cmp
add
fbld
stc
xor
addb
inc
add
add
cwtl
iret
fidivl
sbb
lea
push
mov
iret
pop
cltd
jge
test
lods
test
das
push
ljmp
add
addb
into
enter
jno
std
and
xor
fistpll
inc
in
dec
sub
add
sbbl
dec
jmp
dec
push
mov
scas
adc
das
mov
add
jp
add
stos
cmp
test
cmp
sbb
add
or
fs
movb
jmp
add
xchg
push
lods
aad
cmc
and
xchg
add
dec
stos
enter
repz
das
cmc
das
addb
mov
pop
inc
jns
pop
scas
ftst
fcos
mov
dec
loop
sbb
imul
fs
push
pop
xor
xchg
and
mov
nop
daa
xor
fdivrl
lret
inc
mov
lret
int3
lcall
or
pusha
add
shll
pop
push
gs
out
fmull
hlt
loope
aas
push
add
or
inc
add
add
shr
int3
sub
add
pop
xchg
jo
cmp
add
push
jmp
xchg
add
addr16
cmpsb
clc
fisttpll
imul
popa
pop
es
mov
add
mov
addl
push
sbb
cltd
shlb
mov
cld
xchg
mov
add
aad
pop
je
mov
lcall
mov
pop
fsubrp
pop
scas
addb
mov
out
mov
leave
mov
adc
in
cmp
push
movsb
fildll
cwtl
xchg
orl
mov
cmp
mov
popaw
sub
add
add
loop
lock
cmp
add
test
leave
inc
xor
jecxz
call
mov
fsub
scas
pusha
add
jnp
addb
dec
cwtl
loope
pop
sbb
xchg
add
loopne
pop
daa
mov
scas
movsb
pop
sub
add
shll
add
das
iret
pop
in
into
addb
ja
rol
and
popa
dec
clc
add
sti
fxch
mov
cmp
outsb
dec
repz
test
sahf
and
jae
cltd
stos
pop
stos
popa
pop
stos
xor
jo
lods
or
sbb
add
add
mov
mov
in
lahf
cmp
cmp
cmc
repz
jl
add
sti
inc
hlt
test
xor
add
test
push
test
push
xor
iret
or
sub
mov
sub
mov
clc
sahf
cld
push
mov
sahf
dec
dec
subl
sub
and
ds
lahf
mov
sub
repnz
movsl
test
add
inc
add
shlb
add
aaa
pop
dec
rcr
push
je
or
add
ljmp
adc
jnp
mov
pop
sbb
jge
and
in
pop
mov
pop
movsl
dec
cmpsl
adc
mov
addb
xchg
pop
mov
or
xor
nop
cmpsb
inc
or
and
add
cs
mov
xchg
lods
lret
idivl
push
add
sub
mov
inc
add
sahf
rcll
xlat
xor
add
mov
fcompl
jg
adc
jno
aad
outsl
mov
shll
les
or
add
iret
loope
sub
es
jp
add
daa
pop
fstps
xlat
fmulp
mov
dec
xchg
mov
mov
xchg
ja
cmc
arpl
or
movsb
lcall
jae
cmp
fs
pop
popf
mov
jae
lahf
les
and
out
mov
loope
push
add
or
mov
push
mov
test
jge
into
mov
xor
push
xchg
das
sub
mov
lret
add
out
sub
and
punpckldq
and
hlt
mov
out
in
fstpl
adc
cld
mov
ja
or
out
xlat
cld
je
jno
cmp
int3
mov
dec
adc
cmc
push
shlb
push
sub
cmpl
cmpsb
push
lock
addb
and
mov
mov
addb
shlb
add
aam
pusha
add
stc
adc
push
outsb
fdivl
cltd
pusha
add
push
insb
out
mov
mov
cmp
push
add
sub
aam
add
mov
sub
add
pop
adc
ja
or
add
shll
bound
xchg
cmp
jo
mov
mov
xchg
sbb
or
outsl
mov
mov
fdivrs
insb
lret
rclb
cli
loop
dec
aam
pushf
dec
ja
cli
das
icebp
ffreep
add
mov
cmp
ret
loop
xchg
in
ficoms
push
adc
add
mov
movl
scas
js
fsubrs
dec
or
mov
sbb
add
ds
icebp
inc
add
add
adc
jne
lods
push
das
mov
or
sbb
popf
sub
sti
xchg
int3
adc
or
flds
pop
adc
insb
inc
nop
add
mov
pop
or
mov
sub
push
xchg
scas
adc
mov
jns
adc
in
out
sbb
push
and
add
jno
ficompl
loop
and
clc
in
mov
xor
imul
sbb
cmp
push
sti
es
test
pop
icebp
dec
cld
call
xchg
jno
pop
iret
movsl
adc
adc
ss
cmc
adc
sub
add
cmc
sbb
rolb
add
sub
or
jbe
jne
enter
jg
jp
enter
addr16
popl
add
hlt
xor
mov
add
push
cmp
add
push
jo
and
push
pop
cs
jb
sub
xchg
cwtl
add
ficoml
inc
popf
aam
shrl
mov
jmp
aaa
aas
pop
jne
hlt
pop
shrb
jo
clc
jl
inc
rolb
jg
adc
xlat
push
ljmp
push
add
arpl
push
loop
mov
pushf
pushf
and
cmpsb
dec
mov
push
inc
xchg
lock
cmp
stos
xor
lcall
add
xor
imul
rolb
push
cwtl
mov
xchg
or
pushf
dec
std
and
in
xlat
xlat
addb
xor
and
cmc
divb
xchg
or
loopne
scas
xor
imul
incb
or
outsb
sub
test
insl
xchg
mov
add
addr16
mov
sbb
pop
enter
ret
xor
push
add
cmc
and
fimull
mov
aas
xchg
lds
mov
pop
nop
inc
enter
nop
test
popl
or
mov
pusha
add
jle
and
aas
mov
frstor
dec
jp
pop
dec
and
arpl
sbb
jp
mov
mov
sub
or
xchg
testl
stos
cmpsb
ds
xchg
daa
xchg
sahf
bound
jbe
dec
cwtl
movsl
jb
out
test
or
dec
add
mov
hlt
adc
js
add
mov
jno
fcoms
pop
hlt
pop
rorb
sti
sub
jne
xor
xor
mov
adc
sub
push
add
lret
cmp
cld
ja
mov
add
push
inc
add
add
mov
cltd
add
dec
fcomi
pop
xor
mov
fdivrs
add
pushf
sbb
int3
or
addr16
fistpl
add
sub
notb
or
imul
push
dec
movsl
std
stos
add
and
shll
call
jns
and
lahf
stc
imul
mov
outsb
adc
insl
adc
pop
sub
pop
pop
cmp
xor
nop
into
in
xchg
mov
mov
ret
movsl
push
mov
jbe
mov
out
loope
add
inc
pop
hlt
push
push
lock
add
dec
cmp
add
jbe
sbb
add
pop
je
add
add
out
jecxz
pop
das
mov
lock
add
add
cmpsb
jmp
sbb
addb
scas
add
add
add
mov
in
loopne
int
xchg
pop
adc
add
repnz
lods
outsl
ret
inc
add
lds
dec
in
mov
cmp
xchg
push
mov
xchg
mov
add
push
add
imul
insl
mov
xor
add
ret
xchg
mov
pop
jae
jbe
jmp
cmp
push
mov
sub
into
inc
add
js
or
inc
add
loop
cmp
fstps
or
pop
mov
add
lock
sbb
lcall
adc
lea
jecxz
pushf
inc
aad
divb
ljmp
inc
add
xor
addb
add
pop
fildll
add
mov
neg
aaa
inc
out
sub
int3
repnz
add
sbb
rorb
xchg
cmpsb
push
outsl
mov
push
xor
add
or
mov
mov
mov
lock
jbe
xor
mov
movb
add
mov
sbb
push
add
in
or
push
aaa
out
scas
fcomps
cmp
push
sti
gs
add
test
mov
dec
xchg
inc
clc
lret
iret
push
ret
sbb
dec
cmpsl
lcall
add
push
mov
and
cwtl
stos
pushf
mov
int
dec
inc
xchg
shl
lahf
push
xor
jne
xchg
arpl
mov
mov
test
inc
xlat
push
push
mov
lock
xor
lahf
fwait
test
imul
jo
shrl
inc
add
jae
or
js
aas
adc
cli
add
fsubl
ds
adc
add
xchg
push
sub
sbb
mov
flds
outsl
lds
pop
inc
jae
and
mov
sbb
xor
bound
fldcw
mov
push
pop
jle
loop
in
into
idivb
cmpsb
mov
mov
xor
imul
enter
jle
pop
int3
jne
cltd
je
imul
or
sbb
stos
ljmp
dec
lcall
push
add
cmp
loop
xchg
stos
jno
cmp
jae
or
xchg
add
jle
dec
mov
add
xchg
sub
fwait
sub
add
add
fdivrp
loopne
insb
and
add
sub
and
scas
bnd
enter
jb
fdivs
add
sub
mov
loope
stc
sbb
ds
add
loopne
jmp
push
pushf
mov
aad
push
bound
in
dec
jmp
addb
mov
data16
movsl
aas
mov
inc
idivl
inc
imul
dec
inc
add
pushf
inc
or
cwtl
sub
out
loopne
cmp
lods
imul
or
fcoms
cmp
mov
sbb
add
mov
addb
xor
mov
popf
dec
clc
ret
cmp
loope
clc
inc
add
add
mov
or
add
test
fiaddl
add
xchg
cmpsb
daa
aad
mov
fists
fmulp
pop
push
rcr
inc
fildl
lds
pop
adc
fadd
fmull
cmpsl
sub
into
addb
dec
loopne
out
arpl
addb
loop
notl
push
and
pop
movsl
cmp
loopne
cmc
jb
sahf
inc
inc
pop
into
pop
pop
inc
fcoml
sbb
fstpt
in
mov
mulb
add
lahf
xor
inc
add
scas
xchg
mov
mov
stos
mov
and
add
cmp
ljmp
add
or
cmp
add
loop
dec
std
mov
rolb
or
add
xlat
pop
cmp
les
sub
aad
fistpll
add
scas
out
add
imul
pop
xor
push
les
imul
das
test
pop
jne
roll
or
inc
add
jb
jp
negb
push
mov
shr
or
es
and
mov
leave
sub
mov
lret
or
adc
sub
xchg
mov
ror
stc
scas
shll
add
sbb
xor
sbb
add
add
jne
test
das
add
jecxz
cmpsb
mov
fdivs
inc
or
push
dec
stos
repz
cmpsb
in
push
cmc
xor
mov
add
xor
fsubr
mov
sbb
popf
push
cltd
cmpsl
out
sbb
xor
and
lahf
pop
inc
rclb
inc
add
outsl
gs
add
add
in
je
mov
das
inc
add
xor
inc
add
jecxz
pop
fsubrs
cld
into
push
add
inc
je
add
lahf
sbb
pop
std
cmp
adc
stos
mov
push
add
lea
and
xlat
vaddss
mov
imul
es
cs
movsb
or
sub
push
add
stos
mov
push
stc
int
add
jns
movb
stos
mov
inc
xor
and
aad
rcrl
data16
mov
lahf
scas
or
add
mov
jle
cmp
add
mov
mov
test
fistps
ljmp
imulb
out
sbbl
addb
or
jb
stc
fmull
jmp
push
dec
adc
roll
mov
repnz
add
addb
jnp
inc
add
mov
xor
mov
shrl
bound
sub
inc
loop
lret
dec
imul
rcrl
cli
mov
shrb
insl
or
lock
inc
push
and
or
pop
jge
add
fmuls
out
cmp
jmp
das
mov
add
incb
add
in
add
lods
push
cmpxchg8b
lret
inc
mov
inc
add
sub
movsb
inc
add
jbe
mov
add
std
andl
dec
inc
add
cmc
popf
ljmp
or
pop
dec
xchg
lahf
enter
lods
jo
or
iret
push
xor
mov
jb
inc
add
xchg
xchg
pop
popf
fwait
adc
out
inc
add
imul
jmp
ds
xchg
mov
push
add
sbb
xor
and
daa
mov
in
ja
xor
mov
aaa
adc
add
add
insb
pop
pop
adc
gs
iret
loope
mov
push
stos
pop
xor
jle
dec
jo
addb
or
pusha
add
sub
out
pop
filds
mov
stos
je
inc
add
negl
pop
sbb
into
add
insb
insl
fcoml
dec
push
jmp
dec
or
addb
ja
xchg
sub
jbe
add
stos
mov
or
xchg
loop
jecxz
repz
cmp
dec
jae
gs
add
mov
cmp
inc
add
mov
add
fidivrs
inc
mov
jg
mov
stc
push
mov
les
add
sbb
xchg
lret
fcom
loope
and
xor
das
lock
sti
outsb
inc
add
mov
mov
or
sbb
psraw
xor
and
xor
cmpsl
stos
out
push
mov
cltd
cmp
inc
add
jge
mov
sbb
inc
add
cmp
inc
add
fsubs
pop
dec
icebp
dec
jmp
add
pop
adc
out
add
fldcw
sbb
fimull
leave
outsb
adcl
das
rcrl
inc
mov
mov
lret
in
push
jge
scas
loope
mov
jno
pop
popa
or
jg
outsb
dec
push
pop
inc
arpl
push
and
addb
test
fstp
push
pop
arpl
ret
mov
xor
mov
rcrl
mov
scas
sub
mov
jno
iret
test
sub
add
mov
add
add
in
ret
push
pusha
add
dec
fs
lock
push
nop
arpl
dec
daa
roll
std
adc
daa
xlat
mov
out
inc
mov
inc
add
mov
sub
mov
xchg
insb
ja
cmp
xor
jle
cmp
sbb
data16
js
pop
jo
inc
iret
xchg
test
ret
pop
out
mov
add
imul
out
pop
sub
push
pop
outsb
xchg
dec
xchg
lods
out
loopne
in
fdecstp
fildll
xchg
mov
add
sub
xor
shr
mov
insl
insb
dec
rol
add
dec
mov
and
leave
popa
lret
lods
xor
pop
ds
ljmp
imul
and
jmp
cmp
fdivp
jb
nop
sub
cmp
mov
pop
and
push
in
inc
add
jno
mov
aad
fwait
adc
fsts
add
fisubrs
aaa
or
and
add
jnp
call
hlt
xchg
mov
ret
mov
loopne
inc
add
insb
pop
fdivr
mov
jmp
sbb
sti
shlb
pop
popa
jae
mov
fdivl
push
mov
cmp
lret
cld
dec
out
das
outsb
loopne
push
dec
inc
mov
lahf
ss
mov
sbb
sahf
shll
movsl
mov
gs
add
mov
test
mov
pop
sbb
cs
mov
mov
cmp
add
pop
fisubrl
mov
and
and
pop
fisttpl
insl
push
adc
add
sbb
add
fdivrp
xchg
pop
addb
add
dec
and
aas
out
xor
test
push
lods
sti
jecxz
insb
inc
nop
mov
inc
lahf
into
in
mov
stc
clc
in
mov
cmp
inc
shll
in
test
jp
pop
xchg
or
mov
jae
add
addb
dec
mov
mov
push
in
enter
inc
mov
loop
sbbl
cmpsl
xlat
stos
pop
cmp
imul
iret
js
out
jl
out
pop
mov
stos
clc
cmp
stc
xor
in
xchg
sub
std
pop
jno
xorl
sbb
mov
fwait
push
clc
out
inc
add
xor
aaa
and
pop
or
jl
or
add
les
and
sub
jp
inc
pop
or
cmp
test
rcll
pushl
in
mov
cvtpi2ps
dec
shlb
dec
hlt
jg
cmp
pop
clc
mov
push
pop
cmp
xor
nop
mov
add
daa
mov
jb
adc
push
stc
sbb
sub
mov
mov
push
out
jg
xchg
add
add
add
popf
dec
pop
xlat
repz
xchg
inc
stc
xor
into
enter
add
jne
add
jle
sbb
push
cmp
ror
cld
int
add
adc
xchg
cmpsl
mov
lcall
sub
jecxz
pop
inc
fwait
cmp
test
cli
xor
addb
aad
add
xchg
add
add
