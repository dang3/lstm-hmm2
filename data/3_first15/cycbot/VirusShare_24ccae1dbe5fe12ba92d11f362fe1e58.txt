and
enter
rcrb
pop
push
sti
leave
fcmovu
pop
daa
sahf
inc
leave
or
jge
adc
or
mov
push
cmp
pusha
add
stos
or
loope
cltd
sbb
inc
in
xor
mov
icebp
or
cli
ficompl
xor
stos
rcrl
addb
xchg
sahf
lock
mov
mov
mov
dec
inc
jno
out
pop
mov
mov
add
out
and
or
pop
incb
adc
inc
add
std
out
inc
add
pushf
cmc
jmp
cmp
add
and
add
das
jmp
push
add
jl
mov
call
lcall
mov
push
mov
in
out
mov
add
xchg
test
mov
popf
bound
and
jecxz
inc
add
stos
ret
shr
popa
nop
mov
add
fwait
pop
out
mov
jnp
push
adc
cmp
jp
les
into
in
popa
sbb
test
icebp
push
dec
es
sbb
rcll
adc
imul
orl
sub
fadd
add
std
and
mov
popf
xchg
adc
add
movsb
add
dec
mov
fnsave
jae
add
xchg
adc
je
add
loopne
dec
jne
out
lret
cs
add
cmc
mov
enter
and
push
fisubl
daa
int3
xor
inc
add
rclb
shll
cmp
dec
mov
sbb
lock
inc
add
mov
add
sbb
cmc
jae
push
push
add
in
ror
jmp
add
mov
add
xchg
dec
les
sahf
pop
cmp
cmpsb
ja
cmp
pop
pop
sti
gs
mov
add
sbb
iret
outsl
jmp
jne
mov
les
test
or
into
mov
sub
mov
push
into
cltd
out
and
and
lods
or
test
loope
add
ljmp
outsl
movsb
cli
ror
pop
xchg
dec
ret
test
cli
add
in
out
aad
cmpsb
add
push
inc
add
sub
movsl
fcoms
add
mov
aaa
jns
cmpsb
push
rcr
loopne
sbb
jp
fs
aad
clc
jns
clc
inc
mov
jns
mov
xchg
lods
pushf
daa
insb
arpl
and
ljmp
sahf
es
inc
add
add
jl
stc
test
inc
add
in
stc
xchg
out
or
mov
xchg
sbb
idivl
ret
xchg
insb
je
stc
stos
dec
pop
loope
pop
xchg
push
shlb
add
int
sahf
or
sbb
and
shlb
movsl
cli
mov
aas
jmp
xchg
jne
loop
call
add
xchg
mov
add
shrb
add
cmpsb
cmp
fs
addr16
pop
mov
or
jecxz
mov
add
add
movsb
outsb
in
jp
cmp
add
sarb
rolb
inc
add
adc
dec
gs
shr
enter
add
loope
pop
or
addb
addr16
movsb
lret
aad
push
add
mov
jmp
mov
sub
push
in
leave
arpl
dec
lea
mov
movsb
std
cmp
xlat
or
cmp
cmpsl
cmp
inc
add
xchg
dec
lods
sub
or
ja
add
sbb
add
fidivl
mov
rolb
add
inc
add
aam
adc
dec
rolb
mov
fsts
add
pushl
test
scas
cmp
scas
sub
push
jo
adc
add
sahf
push
outsl
push
push
sbb
mov
cmp
imul
pop
fisttpl
into
inc
add
les
sahf
cmp
mov
inc
add
xor
jmp
mov
sub
push
push
push
cld
call
sub
mov
imul
es
ss
lea
push
push
push
call
cmp
je
mov
lea
push
push
es
call
push
jmp
icebp
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
lea
sub
xacquire
pop
add
mov
cs
push
push
lret
jmp
add
add
jp
mov
inc
add
movsb
mov
xchg
out
fs
sub
iret
ljmp
add
sahf
lahf
lods
mov
leave
sbb
inc
add
mov
repnz
and
xchg
into
sub
mov
lahf
mov
repnz
inc
add
pop
inc
push
inc
push
add
outsl
in
jae
inc
add
dec
pusha
add
popa
jmp
adc
enter
pusha
add
add
sub
and
add
stos
arpl
fsubr
or
push
mov
xor
mov
movd
test
xchg
pop
iret
mov
pop
jg
xor
xchg
loop
add
bswap
orl
sahf
xchg
rolb
addr16
je
jbe
aas
pop
or
cld
sub
shll
movsl
cltd
adcl
loop
dec
repz
arpl
ffreep
add
aaa
mov
daa
test
insl
aas
mov
in
stc
test
popf
pop
xor
movsb
scas
push
add
add
ds
add
in
iret
cmp
mov
pop
add
jno
mov
daa
insb
cmp
jp
xchg
xchg
add
lahf
cmp
cld
add
ljmp
mov
rorb
ljmp
add
test
aaa
inc
add
push
push
mov
cmpsb
clc
fbld
arpl
jae
popf
mov
gs
push
mov
jbe
add
inc
call
in
dec
pop
fisubrl
ret
adc
push
adc
add
pop
test
bound
loope
nop
rolb
pop
dec
fstl
sub
and
sub
add
rolb
test
xchg
cltd
movsb
xlat
imul
jp
add
push
jge
mov
rolb
cmp
addb
mov
push
sub
adc
das
xchg
lret
add
daa
aam
int
scas
leave
xor
mov
add
and
pop
push
jecxz
xchg
sub
adc
xor
lds
sbb
push
dec
jns
pushf
outsb
ja
jbe
ss
jb
aas
pop
inc
add
xchg
sbb
cli
outsb
pop
iret
jb
or
add
popa
gs
imulb
cmpsl
mov
push
scas
mov
adc
mov
add
movsl
aam
stos
mov
jl
add
jl
dec
out
or
adc
add
sub
stos
sub
adc
jle
inc
push
jmp
jg
pop
es
pop
mov
lods
dec
fucom
popf
loope
aaa
dec
push
ror
xor
mov
dec
movaps
push
add
rolb
push
lcall
or
jns
test
in
mov
pop
movsb
pop
rcrb
inc
xor
inc
or
out
pop
rcrb
cwtl
cmp
out
push
and
loop
jl
add
addr16
fbld
mov
jo
sub
push
lods
std
addl
rorl
add
mov
adcl
outsb
xchg
clc
xchg
and
cmc
mov
mov
sub
leave
push
add
jns
sub
mov
push
xor
xchg
sub
sahf
inc
aam
push
loop
jecxz
lods
mov
xchg
cmp
fmuls
ja
sub
pop
cmp
adc
mov
inc
add
mov
push
add
xor
imul
add
push
testl
dec
cld
xor
test
addb
mov
fstps
addb
notb
ds
pop
mov
xchg
leave
inc
out
xchg
loope
mov
add
dec
push
or
iret
mov
add
add
cmc
rcrb
pop
dec
jmp
xor
and
in
into
xchg
inc
push
test
or
ljmp
lahf
ret
movsl
inc
add
jbe
cmp
mov
roll
add
fiaddl
add
adc
mov
pop
add
jle
popf
sbb
in
addr16
sub
ljmp
ljmp
dec
mov
les
inc
cmp
popf
cmc
xchg
xor
icebp
je
add
stos
inc
add
out
fwait
les
sub
cmp
inc
imul
repz
mov
js
cltd
in
loopne
mov
nop
cmp
ss
adc
mov
es
sbb
add
addb
jmp
hlt
mov
mov
daa
aam
ja
inc
add
jno
popa
outsl
imulb
xchg
add
fisubs
out
subl
add
adc
addb
or
in
sahf
xor
lret
cmpsb
aaa
jg
jmp
into
cmp
inc
add
icebp
cs
inc
dec
arpl
fmul
popa
imul
sahf
pop
les
jae,pn
cmp
sbb
cmp
jp
adc
repnz
cmc
in
and
in
inc
add
lret
jmp
fdivrl
inc
add
xchg
insb
pop
mov
outsb
lods
icebp
xchg
lods
jb
nop
fists
cld
and
and
xchg
push
cwtl
cmpsl
js
sbb
and
push
inc
add
jnp
arpl
push
sbb
out
dec
jno
add
sbb
ljmp
mov
add
mov
xor
xchg
sub
inc
add
fdivrl
or
aas
sbb
stos
jo
sub
das
add
test
idivb
addb
lahf
sub
hlt
incb
scas
les
sar
add
xchg
dec
xchg
loop
inc
add
push
std
dec
mov
pop
hlt
mov
rolb
js
dec
mov
add
mov
mov
inc
out
cltd
xchg
mov
ja
cmpsl
dec
push
xchg
inc
sbb
out
mov
lods
mov
sbb
lods
test
std
add
enter
add
ror
jae
cmp
and
sbbl
repnz
int3
add
int
add
add
test
loopne
add
dec
add
repz
jns
ljmp
cli
inc
addb
sub
and
test
push
mov
call
lahf
push
addb
lret
movb
mov
into
jmp
mov
jo
inc
test
lret
xor
pop
mov
test
iret
pop
cmp
push
jb
into
outsl
add
int
add
cwtl
and
xor
adc
jns
arpl
push
nop
addb
or
or
bound
in
into
jp
add
out
testl
test
and
in
aaa
je
xchg
int
in
repz
jle
fs
in
sub
add
lds
pop
fstpl
out
mov
out
addr16
push
push
add
inc
add
push
sbb
jge
cmp
lcall
sbb
add
addb
mov
push
push
adc
shl
cwtl
lods
sbb
cmc
dec
inc
add
sub
add
je
add
jbe
or
adc
addr16
rolb
in
add
mov
dec
aad
xor
cltd
test
add
jnp
in
je
es
js
enter
movsb
arpl
in
add
or
movsb
and
daa
pop
out
mov
jle
push
xor
data16
sbb
loopne
lds
jae
jb
push
cmc
mov
addb
add
or
push
inc
jmp
xchg
lret
push
xchg
xlat
insb
dec
movsl
ret
cwtl
lods
mov
fsubl
adc
or
in
adc
xor
push
scas
jae
inc
cmc
lret
jg
outsb
xchg
loope
sarl
pusha
add
jg
pop
add
inc
cmp
iret
in
lods
test
xor
inc
sub
pushf
frstor
add
std
popa
mov
loope
loopne
xor
add
push
shll
cmpsb
xor
xchg
mov
mov
xor
jno
xor
xor
add
dec
lods
adc
add
lahf
dec
and
push
push
loop
mov
dec
xchg
dec
add
adc
cli
iret
cmp
mov
inc
sets
push
add
mov
mov
gs
sarb
das
push
mov
rcrb
add
sbb
push
addr16
inc
sbb
fwait
lcall
mov
ficoml
mov
cmp
xor
pop
add
mov
mov
xchg
jae
insb
shrl
sbb
test
adc
cwtl
lcall
add
loope
xchg
dec
repz
and
cmp
inc
sub
and
int
into
xchg
mov
jno
add
mov
sbbl
negb
ficompl
ja
ljmp
stc
mov
arpl
push
rcrl
push
bound
pop
ds
cmc
xlat
dec
popf
jmp
std
mov
xlat
outsl
cmp
inc
inc
push
cmp
ss
outsb
cs
mov
add
pushf
fnstsw
add
jnp
ret
ror
cli
mov
push
jns
loope
mov
gs
popa
lahf
jge
aam
f2xm1
adc
dec
test
add
inc
adc
and
xor
mov
fwait
ret
and
add
add
in
inc
inc
and
dec
cltd
test
out
mov
add
or
cmp
call
cltd
mov
mov
mov
ret
popa
xor
add
adc
repnz
ljmp
add
test
push
lcall
cmp
in
outsb
add
popf
mov
and
popa
pop
push
mov
jns
loop
xorl
repz
jg
xchg
xchg
mov
pop
daa
stos
add
cmp
or
shl
movb
lahf
push
add
mov
inc
add
sbb
jno
shrl
lahf
ja
ljmp
cmp
and
dec
cmc
movb
loope
xchg
push
pop
scas
outsl
lret
test
fsubl
push
or
imul
repz
adc
insb
leave
add
addr16
out
inc
add
outsl
int3
xor
push
mov
daa
jmp
aaa
into
mov
or
add
jae
jle
mov
insl
xchg
daa
loopne
popa
sbb
push
bound
cs
push
add
in
je
cmc
jnp
or
rcrl
and
dec
addb
mov
xchg
aaa
cli
pop
mov
in
mov
or
stos
lretw
sub
cmp
scas
fisubl
mov
mov
cmp
and
stc
hlt
mov
adc
jmp
or
add
test
and
mov
rcr
jp
lcall
sub
dec
add
outsb
lods
sub
mov
mov
jo
and
add
pop
push
cmp
cld
jo
or
movsb
mov
pop
imul
xlat
lods
sub
out
es
pop
cld
sub
mov
cmp
arpl
sti
loop
pop
addr16
out
cmp
inc
out
int
mov
inc
add
sub
je
mov
mov
mov
cltd
arpl
xchg
lcall
repnz
fmuls
pop
lahf
add
mov
jp
mov
jl
jle
mov
ds
fcmove
das
pusha
add
in
je
inc
add
and
or
jge
mov
lret
push
add
sub
out
adc
xchg
outsl
in
mov
ljmp
movsl
adc
mov
xor
icebp
mov
pop
pop
mov
xor
push
loope
jnp
stc
addr16
pop
call
jp
rolb
mov
mov
jnp
inc
add
jl
add
icebp
rolb
sub
sbb
add
cmp
add
mov
adc
mov
push
add
add
stc
add
cwtl
mov
outsb
stc
pop
je
jns
scas
pop
adc
sbb
fsubrl
mov
add
mov
sub
mov
rorl
and
jp
jb
pop
insl
divb
xor
xchg
sub
pop
jp
adc
sub
add
mov
xchg
xor
push
push
dec
pop
jne
test
and
outsl
jnp
cmp
fidivrs
out
push
loope
fimull
push
jno,pn
je
mov
xlat
daa
dec
es
iret
or
cmp
jmp
push
cmp
das
scas
mov
jno
sbb
mov
add
imul
loopne,pt
test
ret
add
xchg
adc
cmp
xor
mov
popa
cli
pop
ja
les
xchg
cmp
out
add
sub
xchg
sub
xor
inc
add
in
cmovae
add
mov
mov
lret
aaa
and
out
sahf
scas
sub
add
xor
xor
and
leave
gs
cmp
testb
fs
sbbl
call
pop
inc
add
les
sbb
repnz
stc
shlb
push
adc
or
ret
cmp
stos
push
mov
add
adc
dec
push
add
rorb
popa
adc
rcrl
imul
dec
inc
push
sahf
imulb
add
mov
sahf
insl
dec
push
fldenv
mov
mov
mov
push
dec
addb
and
xchg
stc
daa
xor
imul
aad
cmp
fbld
add
sbb
arpl
movsb
es
add
das
mov
sbb
fstps
xor
ds
loope
std
movb
mov
daa
adc
adc
cwtl
and
pop
sub
mov
int
std
fst
jno
xchg
sbb
mov
out
dec
adc
jge
add
adc
adc
add
mull
add
or
lds
add
xor
pop
push
sub
pop
adc
or
push
inc
dec
test
or
xor
pop
repz
les
cmpsb
sarb
js
gs
clc
repz
dec
addl
jl
dec
mov
xor
subl
cli
inc
inc
inc
add
mov
daa
xor
loop
add
jecxz
mov
ret
adcl
xor
pop
xchg
ljmp
add
fs
fildl
xchg
ljmp
add
les
in
pop
dec
adc
out
jns
std
addr16
into
out
push
sub
jns
sub
clc
cmc
cli
mov
ljmp
loopne
cmp
movsb
int
lcall
andl
cli
rorl
add
xor
fs
push
lds
sbb
int
fs
sbb
add
inc
add
hlt
sbb
repnz
mov
sbb
pusha
add
push
mov
gs
idivb
js
and
ret
mov
inc
add
movsb
lea
pop
and
jno
popa
addb
or
push
dec
add
test
rolb
push
shl
ret
cmp
mov
mov
test
loop
lods
mov
scas
dec
sbb
shrl
fidivl
stos
jle
pop
out
rcrb
add
aad
shll
ss
mov
xchg
mov
jge
jae
stos
and
push
fdivrs
add
cwtl
push
loopne
cmpsb
mov
lods
mov
push
sbb
sub
mov
movb
aad
pusha
add
add
repz
movsb
sbb
sub
inc
add
outsl
das
sbb
cmc
loop
mov
add
je
cmp
pop
cli
add
jbe
hlt
scas
mov
das
jnp
jl
push
ljmp
shlb
scas
cmp
add
add
int3
into
es
imul
in
dec
push
adc
les
dec
mov
fldcw
xchg
cwtl
repz
add
pop
add
push
add
pusha
add
push
add
cmp
imul
pop
in
adc
decl
fwait
xor
cld
pop
out
std
pushf
push
movsb
aad
add
pop
inc
mov
lea
push
cmp
je
loope
fstl
add
push
js
add
add
dec
sub
pop
sub
cli
cmp
mov
sub
lahf
outsb
fisubrs
outsl
push
ss
add
pop
in
cmp
inc
leave
adc
fwait
add
mov
aaa
hlt
or
add
dec
out
adc
xlat
xor
inc
std
jmp
add
add
xor
add
int3
jae
pop
clc
mov
cs
jb
pop
fists
adc
dec
xchg
pop
insb
and
icebp
or
hlt
cmp
sbbl
add
adc
dec
cmpsb
xor
pop
push
push
and
pop
and
add
call
test
iret
ja
addb
cli
or
sub
pop
adc
mov
flds
add
or
movsl
add
sub
dec
sbb
mov
sub
pop
repnz
sbb
mov
push
imul
shr
insl
lds
imulb
cmpsb
add
test
dec
ret
lcall
mov
sbbl
xchg
push
mov
sahf
jo
add
add
test
xlat
sub
ret
idiv
dec
addb
inc
das
and
inc
push
push
add
sub
add
push
adc
mov
aas
dec
jno
pop
jnp
rcrl
mov
push
inc
add
mov
or
xchg
mov
das
addb
and
or
pop
adc
jle
nop
fistpl
mov
xlat
sub
repnz
dec
out
inc
mov
fstpt
mov
add
jno
push
out
pop
dec
mull
or
ror
scas
or
mov
fwait
cld
std
xlat
dec
jo
addb
add
movsl
sbb
or
dec
enter
sbb
lods
andl
push
push
sub
xor
sbb
push
add
or
mov
dec
and
leave
dec
test
mov
cmp
dec
outsb
test
aas
into
insb
inc
add
aam
add
adc
add
pop
mov
stos
imul
cltd
dec
sub
pop
fwait
add
scas
xchg
mulb
fstl
jb
add
insb
push
dec
out
inc
add
pop
dec
pop
push
dec
sub
xchg
rorl
inc
in
bound
and
fs
adc
mov
fdivs
mov
add
add
adc
cmpsl
mov
aas
jl
rolb
add
pop
call
xchg
jb
jg
sub
and
push
mov
scas
dec
pop
lcall
add
mov
jecxz
cwtl
add
mov
add
loop
icebp
enter
jno
negl
xchg
aas
jae
pop
or
adc
push
mov
add
inc
sub
mov
mov
adc
push
mov
jge
dec
testb
pop
push
pusha
add
inc
mov
jge
dec
adc
add
int3
scas
cmpsb
enter
add
les
insl
xor
inc
addb
outsb
jmp
add
aam
je
ret
push
push
out
add
ds
cli
fistl
repz
pop
dec
mov
sub
inc
add
sarl
cmp
xchg
and
push
mov
xchg
or
xchg
in
or
xchg
jnp
scas
fdivs
aas
popf
jbe
orl
les
movsb
fiaddl
fldenv
add
or
mov
clc
sahf
ror
add
mov
pop
test
lods
lret
cmpsb
sti
and
sbb
fdivrl
out
push
add
push
mov
sbb
inc
add
mov
push
jnp
sbb
add
adc
bsf
adc
mov
adcl
pop
movsl
add
fs
mov
push
call
xchg
fstpl
pop
push
xchg
mov
aaa
push
jge
imul
lods
testl
pop
and
stos
cmpsl
xor
int3
leave
out
dec
dec
jle
lret
xor
inc
dec
data16
push
xchg
vcvttsd2si
xchg
addb
mov
shl
xor
aas
adc
mov
ret
push
dec
dec
push
pop
and
add
add
fbstp
bound
addb
sti
rorl
jp
add
adc
or
jns
popa
mov
sub
imul
movb
lahf
xchg
jno
ret
aas
mov
mov
or
fs
xchg
push
shl
mov
cmp
add
add
xchg
cltd
push
aaa
push
jnp
jae
jecxz
sub
ficoms
nop
loopne
add
xor
sbb
mov
xchg
ror
jae
mov
xlat
ret
inc
sbb
scas
and
or
gs
lret
add
lods
and
sahf
insb
fucomp
lahf
call
add
and
adc
nop
pop
dec
shll
sub
stos
gs
rcrl
xchg
mov
jl
xchg
cltd
pushf
out
sub
mov
push
add
std
inc
add
sub
pop
mov
mov
mov
repz
jo
pop
shlb
mov
xlat
dec
in
push
fbld
mov
gs
jle
imul
adc
sarl
jne
adc
sti
sbb
mov
stos
ret
jle
addb
jbe
xchg
mov
test
mov
xor
add
iret
jbe
dec
fldt
stc
jns
aas
mov
jnp
lods
dec
out
pop
pop
sbb
in
push
fwait
pop
jnp
data16
fnsave
cmpsb
jno
pop
ja
dec
add
dec
pusha
add
int3
imull
mov
add
mov
add
xchg
stos
idivb
inc
add
testb
cltd
ss
add
sub
inc
into
push
xor
push
jo
fimuls
pop
stos
fbld
push
pop
arpl
hlt
push
inc
add
or
cmpsb
add
add
mov
cld
inc
shrl
or
jmp
add
dec
aaa
adc
or
jbe
mov
add
fldt
adc
xlat
push
pop
xchg
out
out
add
xor
mov
testb
add
add
fbld
sub
cld
dec
addr16
mov
test
rcl
sbbl
add
mov
push
mov
lods
movb
mov
pop
loopne
sub
jle
push
sbb
loope
xchg
inc
add
cmp
aas
mov
sub
add
iret
inc
adc
loopne
mov
dec
jbe
adc
fldt
or
sub
test
repnz
icebp
dec
in
movb
cwtl
xchg
mov
add
add
mov
stos
iret
sahf
adc
inc
fsts
data16
ret
add
or
rcr
sbb
xor
mov
rolb
and
imulb
add
inc
add
jno
std
jb
aad
pop
xor
in
mov
push
pop
ret
enter
iret
stos
mov
jnp
mov
icebp
out
add
push
push
mov
fdivrs
add
and
out
add
and
xor
add
jl
leave
xor
jae
mov
fistpl
aaa
jbe
lods
mov
and
ss
ja
sarb
xchg
inc
add
ljmp
test
aam
leave
pop
inc
add
aad
inc
mov
pop
outsl
add
add
add
hlt
mov
fimull
inc
add
or
lods
ret
cld
inc
test
mov
jge
xchg
mov
nop
fisubrs
lret
aaa
shlb
add
das
sbb
out
or
pop
or
push
cmc
jae
ljmp
ficoml
das
jp
mov
in
sbb
mov
cmp
mov
push
addl
push
aam
loope
and
mov
add
lds
addb
je
xchg
test
mov
outsl
jge
add
sahf
mov
sub
sub
ljmp
mov
aam
or
addb
out
testl
jno
sti
add
fwait
loop
movb
mov
push
xor
add
add
scas
dec
outsb
pop
sbb
pushf
orl
xor
test
std
xlat
push
jl
daa
jg
and
sbb
mov
dec
or
push
push
rclb
mov
mov
mov
fbld
cmp
push
sbb
add
rcrl
rolb
das
push
xchg
aam
test
sbb
add
mov
movb
adc
and
xor
inc
jo
jns
imul
jnp
adc
and
and
and
in
dec
call
sbb
pop
jl
fnsave
sub
movlps
xchg
sbb
add
sti
mov
lcall
add
push
add
nop
sub
add
add
les
fstp
mov
push
sub
cmp
js
mov
pusha
add
cmp
xchg
mov
test
jno
aam
cmpsl
sahf
popf
xor
aad
test
negb
jmp
push
mov
out
movsb
xor
pusha
add
add
mov
dec
mov
add
in
fs
test
pusha
add
push
mov
sub
in
push
bound
mov
fdiv
das
movsb
jle
jne
add
jle
add
lahf
xchg
out
insb
xor
loop
mov
icebp
xchg
loopne
sbb
cmp
cmp
mov
sahf
xchg
xor
gs
xlat
adc
sbb
fmull
movsl
mov
jmp
fs
mov
ret
cmp
xchg
repnz
sbbl
dec
inc
int
mov
pusha
add
adc
add
and
loopne
adc
loop
xchg
xchg
and
fnstcw
xlat
push
scas
jecxz
inc
popa
cld
pushf
stos
dec
hlt
push
addb
push
ret
jno
jle
loope
add
inc
loope
scas
sahf
and
and
int3
mov
sahf
popf
sahf
jp
push
xchg
enter
add
xor
push
ljmp
das
aas
mov
aas
inc
aas
mov
sarb
cmp
jp
xchg
add
loop
add
ljmp
add
xchg
xchg
adc
cmp
out
xor
cmp
mov
add
lods
fisubrl
jmp
mov
lahf
test
xchg
rolb
or
mov
cmp
mov
xor
idivb
mov
data16
push
mov
aaa
test
push
iret
mov
mov
or
daa
push
or
shlb
pop
cmp
ficomps
test
popf
sbb
pop
sbb
cmpsb
cmc
xchg
add
nop
sbb
add
push
jo
add
dec
push
andl
loop
mov
add
addb
inc
add
add
xchg
add
xorl
adc
push
addl
lret
push
add
mov
add
movsl
adc
pop
fs
inc
add
loopne
ja
popa
movsb
arpl
add
or
imul
enter
rcrl
pusha
add
and
mov
adc
adc
mov
add
sti
scas
pop
cltd
into
hlt
addr16
movsl
dec
mov
mov
mov
enter
cmp
shl
dec
mov
sub
scas
pushf
push
and
lcall
jecxz
pop
je
jmp
into
sbb
add
mov
pop
lcall
add
adc
ljmp
push
das
jne
mov
sub
dec
je
aam
jg
fldenv
add
cld
dec
inc
add
jo
sahf
mov
and
ljmp
dec
pop
neg
xor
pushf
mov
shl
jae
inc
addr16
bound
xchg
inc
add
dec
add
or
cmp
add
fstl
in
adc
jmp
add
xchg
mov
or
lea
mov
ss
cmc
or
scas
fwait
sbbl
mov
test
lds
add
popf
sbb
pop
mov
test
jns
mov
pusha
add
mov
lods
ret
mov
test
push
addb
pop
push
push
sbb
add
fdivrl
xchg
push
imul
dec
push
push
xchg
lea
idivb
pop
es
dec
sbb
add
adc
insb
fistl
out
mov
fldenv
mov
and
pop
lret
sub
mov
roll
out
jle
test
xchg
xor
scas
out
mov
sahf
aas
xor
xor
adc
pop
inc
mov
add
les
out
sub
pop
in
jecxz
and
stos
sbb
jmp
sahf
cmp
jge
dec
dec
adc
js
and
cmpsb
inc
rorl
or
test
cmpsb
xchg
pop
rorl
iret
in
adc
fsubs
mov
push
jbe
xchg
fucomip
mov
push
sub
cmpsl
add
mov
xor
scas
ljmp
ljmp
adc
dec
push
out
push
inc
imul
sbb
sbb
push
dec
and
cmc
push
fs
jge
cld
pop
imul
add
jge
xchg
dec
xor
dec
dec
loop
add
jp
mov
add
sub
mov
add
pop
movsl
add
add
ljmp
jg
dec
and
jle
add
xor
imul
adc
rolb
gs
ja
add
inc
push
jbe
push
mov
out
xchg
inc
add
add
xchg
cmp
pop
je
add
hlt
aaa
rcll
inc
add
push
sti
sbb
aaa
mov
and
push
xlat
lret
sti
cmpsl
xor
or
mov
add
pop
mov
lods
lret
xchg
mov
add
and
test
stos
ja
dec
cmp
or
negb
fcmovu
es
mov
add
xlat
addr16
xchg
pushf
stos
dec
and
or
rolb
fdiv
xor
bound
cmp
add
cmp
nop
jne
popf
aad
mov
add
add
xor
ret
sahf
cmpsb
in
lret
imul
negb
lds
add
rcrl
sub
push
in
das
scas
cmpsl
jmp
push
xchg
shlb
xchg
xchg
sbb
repnz
inc
pop
mov
pop
ret
jns
cmp
pop
out
add
test
mov
add
cwtl
or
mov
addb
mov
mov
call
pop
push
push
lods
nop
pop
add
bound
fdivl
enter
add
mov
inc
add
bound
ljmp
addb
jns
inc
add
pop
enter
add
sbb
pushf
dec
fcoms
ud2
sbb
popf
leave
dec
add
xchg
out
inc
add
dec
mov
lods
sbb
out
push
dec
ret
and
and
fimuls
jl
xchg
js
je
roll
cmp
xor
cmp
movsl
test
test
outsl
popa
scas
inc
jle
sti
loopne
jb
shlb
cld
sub
jbe
sub
pop
mov
mov
mov
mov
lahf
loopne
je
das
adc
cmp
arpl
adc
sbb
lahf
add
lcall
sub
push
in
rcl
inc
xchg
fisubs
add
cmc
xchg
sarb
pop
test
out
fnstenv
jle
add
daa
scas
pop
bound
sub
sbb
inc
repz
test
fwait
add
lods
mov
dec
iret
divl
lahf
movsb
pop
fwait
add
movsb
jns
pop
xor
pop
inc
add
cmp
add
dec
cli
in
and
jae
pushf
mov
idivb
scas
cltd
add
inc
in
and
xor
and
add
das
push
pop
and
cli
dec
pop
adc
stc
pop
es
adc
jecxz
out
adc
aam
dec
lcall
inc
add
and
mov
cmp
dec
loopne
addr16
and
dec
mov
aad
xor
subl
sbb
cmp
insl
lock
add
lea
mov
pop
out
addr16
out
mov
add
cmp
sub
xor
sbb
pop
mov
in
push
inc
mov
in
test
cmc
movsb
lret
lock
push
add
enter
lods
ret
lea
pushf
mov
shrl
push
xchg
icebp
data16
cmp
out
adc
push
add
fimull
xchg
ret
push
movb
leave
je
add
add
add
lret
add
jg
bound
fwait
mov
fdivrl
sub
adc
add
fdivs
aaa
sbb
outsb
test
out
add
or
leave
nop
hlt
xchg
bound
push
mov
fucom
dec
mov
fs
or
cmp
mov
addb
add
add
push
or
sub
adc
mov
repnz
add
ljmp
push
mov
add
add
clc
and
push
mov
add
sti
jg,pn
insl
inc
add
fildl
sub
sbb
cld
rolb
mov
jo
mov
rcll
in
das
pop
push
add
cmp
xor
pop
ret
out
jb
pop
lahf
clc
xor
addb
sub
mov
adc
sbb
dec
nopl
cwtl
and
insl
push
xchg
pop
rolb
sti
sub
xchg
test
xchg
lahf
pop
add
push
xor
das
popa
mov
add
mov
push
les
lock
inc
or
outsl
push
mov
js
in
jge
icebp
outsl
xor
movb
pop
fmul
mov
add
jl
aam
add
push
js
out
test
inc
add
mov
xchg
addl
add
jno
adc
ds
sub
mov
push
cmpsb
gs
sti
fstl
mov
mov
inc
in
aaa
scas
ficomps
xor
sbb
add
jecxz
add
insl
cmpsb
cmp
mov
sub
adc
sub
add
jl
stc
repz
dec
rcrb
xchg
sub
add
movsl
cmp
sub
mov
stos
fnstsw
push
add
addb
dec
addb
push
cs
mov
xor
addr16
test
and
lcall
cmc
fs
sub
sbb
cmp
pushl
dec
sub
fnstsw
out
mov
test
inc
add
loope
into
loop
rol
add
nop
mov
cmp
jle
pop
mov
test
in
or
addr16
xchg
lds
push
xor
addb
xchg
scas
cmp
pop
pop
cmpsl
cmc
xchg
out
cmp
repnz
sbb
imul
ficoml
cwtl
lock
mov
jb
lods
hlt
scas
or
mov
mov
dec
les
push
fcmovb
add
lret
pop
je
aaa
das
xchg
sahf
test
or
in
mov
push
inc
add
adc
icebp
lcall
dec
and
jle
aad
jp
fldt
aas
sbb
fisubrl
aaa
lock
rolb
rcll
gs
adc
stos
jo
add
cwtl
nop
fimuls
mov
add
pop
mov
mull
mov
xchg
ja
fisubl
add
pop
les
cmp
jp
pusha
add
push
fisttps
loop
out
int3
addr16
push
js
out
jae
jg
mov
cmp
dec
idivl
repz
pop
add
ljmp
sbb
xor
xor
inc
std
pop
std
xor
jne
insb
imulb
mov
xchg
cs
cmp
jns
add
loop
jns
pop
daa
dec
push
xlat
xchg
cmp
add
push
movsl
sub
fdiv
push
add
dec
addb
dec
subl
int
icebp
daa
xor
stos
leave
jle
ljmp
orl
push
mov
flds
push
xor
add
xlat
inc
cmc
adc
in
bound
push
sbb
addb
mov
xor
aad
and
imull
mov
sbb
dec
xchg
sub
add
pop
pop
mov
scas
push
jb
std
sub
xchg
mov
cmp
sub
pop
bnd
das
pop
xor
into
call
sub
inc
add
inc
cmp
add
faddl
mov
jmp
gs
sbb
and
add
int3
cmp
mov
jl
iret
xchg
mov
mov
stos
cld
mov
fsubp
out
and
push
popa
out
inc
jge
imul
add
ficoms
outsl
ss
clc
sub
mov
push
test
aas
in
and
xchg
add
pop
addb
pop
jp
mov
and
adc
xchg
sub
add
fdivp
dec
lret
fwait
ljmp
and
ret
add
loope
aas
xor
mov
mov
les
cmp
rep
lcall
mov
or
jp
and
cmc
push
cld
or
scas
les
inc
add
add
jle
add
dec
mov
ret
sub
mov
lds
push
insl
xchg
and
pushf
dec
aaa
inc
add
pushf
inc
add
ljmp
enter
ja
popf
adc
add
push
mov
mov
in
mov
lods
in
add
push
lods
sbb
rorb
adc
xchg
rolb
jmp
mov
dec
inc
add
and
call
mov
ss
pop
xlat
lods
es
dec
fstl
ss
int
mov
cmp
aam
hlt
push
cmpsb
sub
add
and
mov
test
movsl
sub
icebp
loopne
add
cmp
sti
int3
movsl
add
mov
mov
or
das
mov
mov
sahf
movsb
sti
xor
loop
es
cmp
arpl
test
jae
aad
add
arpl
in
aas
addr16
loop
popa
out
inc
pusha
add
shl
add
xlat
mov
out
lahf
jge
fsubrs
mov
das
mov
add
inc
repz
adc
push
cmc
out
jp
cmp
dec
cmp
in
push
add
test
xor
cmpsb
les
daa
addb
xor
sub
push
daa
daa
dec
mov
int3
xor
and
mov
xchg
xor
in
cmpsl
clc
cmpsl
jno
insb
push
imul
push
negb
dec
jo
mov
call
add
and
xchg
dec
xchg
add
loope
mov
adc
pop
xor
hlt
and
jae
or
jnp
dec
xor
pop
shll
es
lret
adc
add
movsl
in
jae
xchg
push
dec
addb
mov
in
xlat
test
jmp
fdiv
push
test
jns
ljmp
scas
lock
inc
fdivr
xchg
fwait
test
add
je
rolb
imul
loope
idivb
pop
pop
fstps
int
clc
iret
loopew
or
jno
lret
cmpsb
or
sbb
aam
jb
xchg
fs
decb
and
cmp
mov
test
fdivr
js
js
or
push
js
lahf
add
popf
adc
movsl
push
xchg
in
sub
fldcw
cmpsl
hlt
mov
and
andl
fcmovu
push
or
mov
mov
out
jmp
call
cmp
sub
test
in
xor
arpl
dec
jmp
aad
xor
filds
mov
add
pop
les
xchg
mov
fcomp
inc
add
pop
inc
push
inc
add
jl
xor
xlat
add
lret
cli
jnp
jl
add
mov
iret
dec
pop
inc
add
pop
jns
add
into
shll
ds
mov
ret
sti
mov
cmpsb
fcmovnb
fwait
loop
lods
cmp
pop
movsl
and
cmp
insb
xchg
das
mov
xchg
rcl
add
movnti
add
pop
cltd
dec
sbb
xlat
outsl
xor
mov
jnp
into
rclb
add
pop
fidivl
rcl
or
clc
icebp
mov
popf
jnp
out
cmp
xor
ss
lahf
mov
jge
pop
shl
lods
rcr
inc
cltd
pop
mov
jle
bound
pop
xlat
and
cmc
cmp
aaa
aas
mov
pushf
jnp
add
int3
dec
lret
push
arpl
jnp
fsubs
xor
xor
les
mov
dec
int
lahf
dec
add
sbbl
xchg
push
dec
jg
dec
sarb
mov
add
push
cmpsl
pop
sub
cmp
rolb
data16
repz
sbb
sub
xchg
xchg
mov
cltd
shlb
jbe
push
xor
nop
lds
dec
filds
lods
inc
add
addb
push
add
mov
xchg
sbb
add
arpl
adc
sahf
or
lock
imul
fcmovbe
fidivl
mov
repz
cs
dec
add
add
ljmp
mov
sbb
add
aad
sbb
adc
or
loop
sbb
leave
xor
sahf
cmp
adc
mov
add
adc
push
jl
les
test
jns
and
adc
sbb
pop
pop
push
jmp
inc
add
loop
sbb
clc
mov
pop
pop
jle
push
fsubl
or
xor
adc
mov
pushf
cltd
sub
pop
nop
fucomip
mov
add
add
add
arpl
jo
call
insb
sbb
add
scas
cli
cmpsb
xor
in
dec
mov
push
push
add
loope
in
sub
jo
imul
dec
popa
aad
pop
fisubs
adc
mov
add
xchg
es
push
in
dec
in
int
adc
mov
add
loopne
xchg
inc
dec
and
in
lods
mov
push
addl
mov
adc
std
sti
outsb
enter
mov
les
fcompl
cmpsl
xchg
push
xor
popf
xchg
call
imul
dec
xchg
sbb
in
jmp
add
std
push
cmp
pop
mov
rolb
mov
aas
imul
xchg
dec
push
jb
cmp
dec
jne
sub
jp
sub
scas
sbb
inc
sub
add
add
sbb
add
and
bound
int
in
sub
jmp
push
jecxz
iret
sbb
push
shr
test
out
cld
xor
lock
fstp
leave
xor
popf
cmp
lahf
aam
fcoms
in
inc
mov
dec
outsl
mull
bound
sub
rolb
cli
dec
push
int3
jecxz
jge
rcll
add
and
bound
leave
aaa
pusha
add
push
mov
push
sbb
ja
push
dec
mov
xchg
adc
mov
jo
mov
and
and
ljmp
repz
cmp
xlat
and
add
or
jno
push
xor
lret
sahf
xchg
mov
cmpsb
sub
dec
ds
enter
sub
adc
stos
ret
popf
fnstcw
add
cmpsl
mov
add
cltd
xor
add
sub
scas
jge
mov
jb
sub
fimuls
jl
mov
movb
pop
cmc
jae
add
loope
push
testb
jb
js
adc
int
test
cmp
xlat
mov
adc
add
push
add
shll
jns
lods
repnz
outsl
xchg
or
in
or
jg
aas
cmp
insb
add
inc
add
adc
insb
insb
sub
mov
xchg
xchg
and
mull
mov
cmp
add
dec
sub
dec
scas
popa
mov
xchg
push
jnp
daa
jae
outsb
add
repz
mov
scas
push
mov
iret
loop
mov
aaa
loopne
loopne
dec
imul
mov
arpl
cltd
das
sbb
ss
push
lock
dec
enter
in
push
mov
push
cmp
add
pop
insl
icebp
xor
xor
cmpsb
and
add
pushf
pushf
adc
add
aas
sub
in
test
sub
pop
mov
lcall
add
scas
sti
rol
add
pop
xchg
mov
adc
fstl
gs
add
add
and
insb
mov
stos
push
add
into
cmp
repz
jge
inc
add
jmp
int
jge
lods
push
in
pop
out
add
push
jl
out
and
jp
jno
fisttps
sarb
daa
sub
dec
ret
xchg
loop
pushf
or
fsubrs
loop
lods
outsl
bound
jns
cmpsb
rcrb
mov
mov
addb
xor
fsubs
bound
ja
add
add
addb
fwait
jo
shlb
add
movsb
addb
xchg
cmpsb
mov
inc
add
out
pushf
inc
pop
and
mov
lods
mov
data16
jl
xor
data16
or
cmpl
imul
sub
rol
add
add
mov
sub
inc
aas
pop
sbb
xor
mov
int3
push
push
stc
incb
mov
jmp
stos
sbb
loope
inc
add
cs
sub
xor
icebp
push
sarb
into
clc
adc
mov
test
xchg
ja
jae
xor
inc
addr16
add
pop
xor
icebp
imul
addr16
pop
jg
jmp
xor
out
addb
xchg
mov
ret
es
sbb
leave
sti
repnz
popf
fdivrl
adc
add
cmp
mov
push
sub
cwtl
pop
push
add
je
jb
fwait
cmp
jbe
int
mov
or
cwtl
or
sbb
push
push
push
push
adc
ret
jg
push
sub
cmc
push
mov
xchg
scas
into
pushf
out
or
in
in
shll
inc
rolb
xchg
push
lds
fs
popa
fs
jg
lds
add
sub
aad
cmp
rol
insb
cmp
adc
in
xchg
clc
test
aaa
xor
adc
les
xchg
addr16
fs
addb
dec
nop
ds
icebp
fildl
cmpsl
mov
add
add
add
ret
repz
push
push
mov
jecxz
adc
and
sub
lds
repz
popa
pop
mov
xchg
add
mov
pop
daa
test
out
lods
xchg
push
pop
dec
loopne
jns,pn
adc
hlt
or
outsb
pop
mov
and
mov
jecxz
add
daa
xor
out
add
fisubs
hlt
xor
xor
loope
test
mov
mov
adc
sti
lcall
shll
inc
add
cwtl
sbb
ret
add
xchg
sbb
xor
jg
and
jge
push
loop
cmc
cmp
add
pop
out
dec
push
lcall
sub
mov
dec
pop
adc
add
mov
lret
xchg
jae
cmp
xor
sub
sbb
je
iret
mov
or
sub
cwtl
jl
ret
and
aad
incb
or
add
mov
insl
inc
add
or
or
stos
addb
add
andl
mov
jecxz
insl
stos
xchg
mov
adc
mov
dec
aad
jno
in
pop
addb
popa
push
or
lods
and
sahf
mov
test
sbb
test
lret
xor
call
push
jp
xchg
arpl
imul
add
cmc
cmp
pop
dec
addb
and
mov
mov
mov
adc
sahf
xchg
mov
aad
inc
add
jae
lret
mov
imul
in
movb
stos
jmp
mov
xchg
jmp
add
mov
ficoml
fwait
mov
lret
add
repnz
repnz
scas
sub
and
out
inc
mov
iret
xchg
movsb
jl
pushf
out
xchg
and
rep
jo
inc
lret
mov
pop
into
bound
cmp
inc
add
add
std
insb
bound
scas
or
add
mov
cwtl
sahf
push
mov
dec
scas
cmc
and
xchg
mov
xchg
arpl
stos
xchg
sbb
test
shrb
iret
lods
jg
stos
sub
andl
stos
popf
sbb
imul
adc
imul
pushf
insb
aam
dec
and
pop
mov
je
das
test
pop
lds
mov
mov
dec
sahf
aad
sbb
push
test
xor
add
adc
dec
jge
pop
in
idivb
add
pop
outsb
decl
cmp
inc
add
mov
out
and
jo
adc
sub
mov
add
or
adc
and
jno
or
in
adc
pop
xor
sbb
loope
mov
add
dec
loop
push
fsubs
pop
sub
add
lcall
fistpll
adc
stos
fisubl
add
fldenv
fstpl
inc
lds
mov
loopne
mov
pop
js
add
mov
sub
std
adc
add
dec
inc
cltd
or
ds
inc
add
jg
das
mov
ret
test
push
push
ret
add
test
test
sbb
icebp
aam
roll
mov
ret
neg
push
push
bound
outsl
gs
add
mov
xchg
call
loopne
test
add
push
data16
test
jbe
addb
ret
xor
movsb
mov
aas
mov
outsl
dec
xchg
and
fmull
sbb
jno
ret
dec
jbe
movsl
push
add
lock
xorl
push
jge
pop
add
seto
add
movsb
sbb
scas
sbb
js
out
movb
xchg
jns
addb
add
popa
mov
rorl
add
inc
dec
and
xchg
add
pop
mov
add
bound
xchg
jnp
cli
mov
add
and
and
cmpsl
cmp
xchg
push
sarb
clc
and
into
lret
stos
cmpsl
mov
adc
call
sub
push
dec
and
lcall
add
sbb
dec
popa
push
pop
es
outsb
loopne
test
or
push
sub
and
mov
pop
into
bound
lret
daa
lods
movb
adc
add
pop
sub
aas
scas
xor
pushf
cmp
outsl
or
test
loopne
popf
xchg
mov
lahf
mov
leave
ljmp
andl
push
mov
add
jl
movsl
out
addr16
jle
dec
jge
jns
xchg
shll
loop
jg
mov
adc
adc
mov
pop
xlat
lods
repz
inc
add
add
add
xchg
leave
pop
cld
sub
mov
loop
clc
jae
inc
mov
aad
jo
add
mov
push
cmp
cmpsl
test
xchg
mov
sbb
hlt
inc
add
add
addb
mull
add
cwtl
jo
movsl
cmp
sbb
movb
xor
xchg
orps
xchg
lret
cmp
and
sub
add
jge
data16
cmpl
mov
ljmp
outsb
je
add
iret
gs
mov
into
mov
add
test
nop
repnz
adc
sarb
fs
push
jne
rorl
mov
das
je
mov
sbb
jne
add
push
add
adc
xchg
jp
popf
adc
leave
cmp
add
loope
xchg
jbe
repz
les
xchg
jmp
xor
add
or
or
xor
adc
pop
push
mov
clc
mov
outsb
insl
push
xchg
ja
push
icebp
bound
daa
push
in
popa
cld
jp
pop
test
mov
add
add
xor
mov
mov
dec
xchg
adc
pop
jg
jns
push
and
jnp
decb
nop
ret
mov
out
cld
or
leave
dec
mov
pop
mov
mov
lock
lds
scas
aas
and
mov
addr16
mov
sub
jae
cmp
or
inc
and
push
push
add
push
add
add
jb
in
movb
repnz
idiv
pusha
add
mov
aam
cmp
stos
fs
and
jle
enter
out
cs
les
mov
mov
ds
mov
sbb
stos
fs
add
mov
jl
mov
insb
mov
icebp
add
je
pop
ljmp
mov
xor
xchg
xlat
lods
cmc
push
xchg
shll
pop
mov
mov
ficoms
or
mov
sbb
in
imull
lret
sbb
or
vpcmpeqd
jns
xlat
xchg
jbe
ret
adc
xor
fiaddl
push
ds
or
pop
mov
jnp
ja
arpl
lea
xor
cmpsl
jno
cli
cwtl
mov
andl
stc
push
bound
ja
ds
add
or
jle
or
cmpsl
push
mov
add
mov
out
stos
push
lods
jno
int3
pop
int3
out
cmc
nop
mov
add
mov
mov
div
jecxz
addb
add
inc
stos
sti
dec
lcall
outsl
mov
cwtl
inc
pop
add
imul
mov
mov
cmp
jge
push
and
sahf
push
or
out
ret
fwait
stos
sbb
loope
lret
jle
lea
or
pop
cmp
adc
add
filds
mov
dec
xor
dec
and
or
add
pop
lret
scas
stc
imul
add
push
xchg
mull
addb
fistpll
cmp
rolb
xor
gs
lahf
xchg
push
cld
cmp
add
out
sti
jle
fsub
pop
jae
cmp
xor
aam
dec
idiv
js
dec
xchg
xor
mov
xchg
rorb
enter
xchg
and
cmp
cmp
dec
mov
scas
sub
rcll
hlt
adc
mov
add
sbb
ljmp
dec
das
hlt
and
fimuls
dec
rcpps
aam
push
outsb
mov
scas
pop
jb
mov
add
std
iret
fisttpll
je
js
dec
mov
mov
imul
adc
dec
xchg
sub
mov
addb
adc
mov
pushf
xchg
mov
add
stos
xor
addr16
iret
cwtl
testb
hlt
outsl
fisubl
repz
xor
sub
xchg
mov
movsl
jno
add
add
add
clc
lods
int
xor
lock
in
shrl
jl
jl
fs
mov
aad
xchg
sarl
sbb
fisttpll
sub
imul
ljmp
and
push
or
movsb
cmp
and
cld
cli
mov
enterw
test
fcom
icebp
push
lods
push
add
add
pop
fcomps
int3
push
inc
mov
cld
sub
add
jl
iret
ja
inc
shrb
shll
int3
inc
pop
sahf
add
push
pop
je
aaa
test
movsb
enter
lret
xor
dec
mov
psrld
jns
sahf
jns
inc
push
add
or
add
add
sahf
push
test
mov
push
sbb
adc
mov
loopne
add
cmp
add
add
lock
adc
into
les
adc
movsl
xchg
ficomps
aad
and
xchg
cmp
or
jno
add
rorb
lds
add
or
jg
sub
jecxz
fsubr
cmp
out
faddp
add
mov
sti
cld
mov
add
mov
mov
mov
add
mov
das
push
loope
sbb
dec
imul
clc
xor
nop
icebp
xchg
and
jns
shrb
sub
pop
xor
imul
push
push
popa
push
daa
mov
jns
and
push
add
xchg
add
jmp
jne
in
mov
out
daa
arpl
push
push
xor
push
ror
mov
test
xchg
aam
push
out
mov
jmp
aaa
punpckldq
cli
or
std
mov
push
nop
xchg
sbb
test
add
dec
push
add
mov
xor
and
test
sbb
test
and
pop
test
mov
rcll
test
or
rorw
shlb
push
sbb
loopne
sti
jno
std
addb
xlat
adc
cmp
movb
sbb
fs
add
push
xchg
xchg
rcrl
and
dec
mov
bound
sub
dec
fisubl
fisubs
jl
mov
and
xor
testl
fs
add
add
or
fucom
lret
leave
sub
inc
add
insb
jmp
and
fwait
sub
and
lock
fimuls
insb
and
xchg
rolb
pop
push
xlat
inc
add
fcompl
push
movsl
cmp
adc
les
pop
xchg
movb
inc
add
ja
fnop
scas
cmp
cmc
xor
mov
dec
dec
cli
popa
inc
and
arpl
out
sub
jne
sub
out
movsb
ret
ffree
add
xor
leave
sub
les
cmp
inc
repz
leave
fwait
xor
inc
add
cmp
fcom
and
rolb
dec
mov
sub
dec
inc
stos
inc
popa
xchg
adc
mov
les
aam
xor
popf
add
sbb
add
xor
rol
add
pop
repz
or
sarl
pop
mov
lds
sbb
mov
mul
jnp
inc
outsb
jge
dec
xchg
jmp
lock
aam
stos
xor
adc
shlb
xorl
out
clc
adc
adc
lcall
and
sti
loop
js
adc
add
add
jns
push
movb
push
stc
ret
in
pop
pop
negl
shlb
sub
jae
popf
mov
rorl
test
clc
mov
mov
sti
outsl
scas
faddp
jns
addr16
add
add
cmp
and
inc
rolb
add
sub
push
xlat
arpl
sub
pop
js
fs
lret
test
nop
cmpsl
mov
aaa
and
xor
jl
add
mov
fcmove
mov
cmp
lods
clc
fsts
cmp
jne
ljmp
pop
leave
out
cmp
dec
mov
mov
xchg
loopne
cmp
ds
mov
jae
sub
das
jbe
push
stos
lcall
mulb
test
cmp
adc
lret
mov
pop
mov
push
stos
sar
rolb
xor
pop
mov
int3
xchg
sbb
dec
in
arpl
jle
add
add
sti
pop
iret
sbb
jle
pusha
add
xchg
pop
movb
in
xchg
addr16
mov
les
dec
mov
sbb
jg
aaa
clc
sbb
cld
or
add
and
add
pop
fs
xchg
lret
xchg
pop
outsl
cmpsb
dec
jbe,pt
jns
insb
mov
add
push
outsb
cmpsl
sbbl
mov
mov
imul
rolb
outsl
sub
mov
or
add
inc
add
aam
xchg
push
aad
mov
sbb
pusha
add
out
jae
push
add
js
scas
sbb
addl
cli
cmp
addb
sub
cwtl
clc
jp
psubq
adc
clc
jns
popa
or
mov
or
sbb
scas
ljmp
and
shll
add
or
pop
add
add
sub
addb
add
xor
mov
orl
add
cmp
ficoml
ss
ljmp
sub
popf
xlat
cmp
push
lahf
fwait
xchg
jmp
enter
inc
add
cli
sbb
ss
clc
outsb
mov
gs
icebp
pop
lret
cmp
movsb
or
daa
rcrl
and
jns
and
adc
sbb
push
js
xor
lods
cmp
sbb
cmpsb
cli
rolb
inc
in
or
aaa
adc
nop
shrb
push
xchg
outsb
dec
in
or
xlat
mov
in
add
jno
pop
leave
es
shrl
cld
jne
jg
pusha
add
loopne
inc
int3
dec
ds
push
add
push
lcall
mov
inc
add
push
mov
addb
inc
lock
add
ret
fisubrl
dec
dec
addb
adc
aam
or
int
mov
stos
lahf
mov
movb
jge
xor
add
std
sbb
add
ret
bound
fimull
adc
sbb
arpl
mov
push
cmpsl
scas
pop
add
xchg
call
rclb
aad
push
rolb
add
xor
add
int
jbe
add
dec
mov
and
pushf
fsub
cmc
insl
dec
cli
or
insl
add
jge
leave
testl
and
mov
ret
movb
xchg
mov
mov
sub
pop
mov
out
outsb
es
push
jp
pop
loope
push
mov
sbb
xchg
lods
adc
add
inc
iretw
mov
sub
xchg
add
dec
test
add
rolb
add
mov
add
lret
cltd
mov
sahf
call
loop
in
inc
jl
lcall
mov
add
fisttpll
mov
add
add
inc
add
stc
cld
scas
inc
add
sbb
fiaddl
pop
inc
add
xor
adc
mov
pushf
iret
mov
xor
add
mov
add
dec
fisubrl
jl
lds
int
repnz
xchg
iret
lds
outsl
mov
mov
sbb
sbb
adc
sbb
mov
jbe
xchg
je
stos
and
lds
adc
mov
xchg
clc
arpl
jecxz
add
push
push
pop
mov
sbb
mov
daa
pushl
addb
xchg
mov
cli
out
jno
jnp
mov
mov
push
dec
mov
not
mov
xchg
dec
je
sti
sbb
movsb
xchg
test
push
imul
jae
sti
clc
inc
fld
add
cmpsb
push
sahf
mov
xorl
cmp
add
test
mov
movsb
mov
das
xchg
nop
fs
sub
dec
test
rcll
ja
into
stc
push
dec
stos
or
je
sub
lcall
rclb
add
add
repnz
and
enter
iret
sbb
imul
or
dec
cmp
mov
clc
xchg
add
dec
mov
ret
mov
std
mov
stc
lcall
add
test
mov
test
or
add
push
dec
pop
ljmp
pop
aas
test
lea
bswap
cmp
shr
jg
stos
pop
xlat
hlt
xchg
ror
pop
jae
add
add
mov
sti
cmp
lret
test
loop
cmp
jecxz
add
repz
jle
mov
cltd
outsl
fisubrs
xchg
add
std
or
mov
mov
pop
add
push
add
into
xor
lods
inc
add
insb
mov
mov
movb
add
cwtl
scas
les
movb
or
cli
push
test
xor
add
iret
lods
dec
rcrl
inc
loop
xor
jge
sarl
lea
mov
mov
add
add
dec
xchg
pop
or
ja
sbb
movsb
inc
add
into
iret
pop
push
jecxz
dec
iret
loope
sub
dec
sub
cmc
adc
das
sub
sub
and
rcrl
iret
dec
popa
sbb
daa
mov
sub
outsl
xor
mov
add
pop
ficompl
sbb
aam
mov
xor
popa
xchg
pop
xchg
addl
sbbl
jge
xchg
pop
daa
in
cld
fwait
dec
in
stos
lcall
fldenv
das
mov
mov
mov
add
mov
add
pop
jno
inc
add
jno
xchg
pushf
shl
inc
int3
push
in
fincstp
xchg
push
xchg
sub
faddl
xor
add
bound
mov
lods
jge
cmp
xchg
shll
pop
adc
mov
ficomps
mov
jmp
sub
scas
add
xchg
pop
insl
inc
fldt
sti
jne
pop
sub
sub
jo
inc
mov
out
test
adc
mov
mov
aad
dec
pop
shll
or
jle
pop
jne
jg
shrl
pop
je
xchg
or
jmp
ss
cmp
int
sub
insb
jno
in
insl
movsl
xlat
mov
in
mov
xchg
or
push
mov
std
mov
into
int
inc
add
fldenv
ja
ss
je
fsub
stos
data16
das
dec
lds
enter
std
sti
movb
mov
test
xor
mov
inc
mov
sub
loop
sti
jno
sahf
stos
dec
push
insb
les
sub
cmc
add
int3
cmpsl
mov
insb
movsb
xchg
mov
cmc
fsubrs
shll
fisubs
subl
stos
cmp
push
jnp
pusha
add
cmc
dec
int
scas
push
push
fwait
cltd
jno
stos
inc
push
push
push
add
divb
std
popf
inc
inc
add
bound
dec
out
mov
mov
stc
adc
cs
call
lcall
pop
jno
push
push
push
cltd
push
add
subps
test
fwait
dec
push
add
cmp
inc
add
push
lds
add
out
mov
add
aad
cmp
fdivl
xchg
clc
negb
mov
repnz
mov
scas
cld
and
scas
scas
push
xchg
lock
add
mov
add
mov
lea
sub
aad
out
add
mov
inc
add
shl
mov
rcl
je
or
negl
ljmp
inc
mov
or
int3
fistl
fs
aas
add
pop
jmp
mov
loop
sbb
add
enter
arpl
mov
push
test
mov
sarb
cltd
xlat
sbb
push
in
test
pop
sub
lea
lock
jne
cmpsb
mov
pop
or
ret
add
inc
add
sbb
jbe
push
sbb
xchg
jnp
add
test
lahf
mov
adc
dec
test
cltd
pop
add
push
pop
push
add
pop
push
jns
sub
loopne
add
movb
mov
inc
cwtl
scas
or
adcl
pop
lock
fidivs
cwtl
mulb
and
fucomi
sub
sub
add
pop
scas
roll
push
adc
pop
cmp
add
fnstcw
or
fsub
popf
push
mov
sub
xor
jge
jl
ret
gs
lret
hlt
xchg
mov
add
inc
inc
add
add
addb
outsl
scas
mov
push
push
stos
hlt
mov
dec
adc
fldl
add
adc
mov
add
daa
gs
pop
sub
add
add
adc
push
mov
dec
or
aam
jg
jne
mov
mov
repz
cwtl
fs
ret
xor
mov
xor
inc
repz
mov
add
dec
jg
and
xor
mov
jbe
mov
jbe
add
add
xchg
xor
fldpi
mov
jbe
jl
js
insb
daa
fisttpl
sbb
js
or
xor
into
jecxz
lret
jb
add
adc
into
das
or
nop
daa
mov
jne
push
mov
mov
outsb
clc
add
adc
add
outsl
sub
push
shll
xchg
and
push
out
cmp
aaa
in
push
hlt
jae
jl
outsb
xlat
xor
jmp
cmp
or
add
arpl
add
lret
data16
movb
adc
js
dec
ret
pop
mov
add
cmp
push
repz
addl
add
faddl
pop
idivl
loope
and
imull
bound
stos
ret
mov
xlat
in
cmc
shlb
faddp
mov
mov
push
pusha
add
imul
cs
xchg
or
push
dec
jl
pop
loopne
and
add
ljmp
add
mov
stos
inc
xlat
cmp
mov
icebp
mov
push
test
in
je
xor
scas
movsb
dec
cs
dec
outsb
movsl
lret
jmp
sarl
out
pop
fnsave
stc
or
pop
test
and
mov
pop
in
jp
add
pop
aaa
out
add
add
insb
sbb
inc
jae
push
stos
cwtl
fsubr
push
mov
xchg
adc
shr
addl
shll
mov
sarb
jmp
pop
outsl
bound
mov
mov
sub
push
cli
faddp
rorb
loop
or
sub
inc
add
jl
dec
outsl
arpl
add
insb
repz
jecxz
add
loop
scas
fldcw
mov
pop
xchg
repnz
add
sahf
push
add
pop
sarl
add
pop
idivb
mov
pop
pop
pop
mull
mov
icebp
fwait
arpl
push
push
shlb
lock
pop
mov
push
cmp
xchg
mov
out
mov
stc
push
mov
dec
adc
outsb
mov
shll
scas
nop
or
jg
pusha
add
mov
mov
das
test
mov
xor
cmp
mov
xchg
and
mov
pop
jecxz
add
addb
cwtl
lods
mov
xchg
add
mov
pop
sub
movsl
fadd
add
jno
and
add
xor
mov
push
xor
int
divl
aaa
dec
xor
sub
imul
movsb
push
rolb
jb
or
incl
and
mov
mov
sbb
addb
and
jmp
add
mov
stos
adc
fcoms
dec
fldt
inc
loop
push
inc
add
cmc
cmpsb
xor
pop
and
imul
pop
pop
in
popf
push
pop
pop
add
loop
push
jp
jmp
sbb
jmp
pop
cmpsl
inc
add
xor
les
rorl
mov
add
sub
add
jecxz
loope
mov
loope
add
sub
mov
outsl
int
iret
jns
sub
lret
xchg
enter
adc
mov
in
bound
iret
insl
insl
cmp
cmc
push
fwait
mov
scas
lock
add
je
pop
lret
push
pop
idivb
mov
out
cmpsl
fistpl
dec
dec
rcrl
mov
das
divl
jge
js
add
in
xor
jecxz
out
or
js
movsl
xor
add
leave
inc
add
cmpsb
cmpsb
pop
pop
push
sti
loope
in
dec
or
push
xor
mov
repnz
std
fcomps
mov
push
aad
outsb
and
loopne
cmc
call
nop
in
mov
int
pop
xchg
sub
ret
mov
xor
sbb
jnp
mov
jmp
insl
pop
in
das
paddb
dec
mov
dec
lods
and
cmc
adc
add
pop
push
das
in
fs
icebp
addb
lock
popf
dec
lahf
aas
mov
dec
xchg
mov
adc
call
cmpl
adc
mov
add
test
arpl
imul
add
sub
je
adc
add
inc
out
sbb
jp
and
add
push
or
fsubl
add
push
fsub
mov
mov
mov
mov
mov
dec
aas
xchg
xchg
mov
hlt
pop
movsb
mov
fwait
mov
dec
cmp
and
xor
popf
and
data16
cmpsl
les
xchg
mov
rcl
testb
mov
jae
lahf
mov
inc
add
cmpsb
jb
mov
das
adc
loope
add
sub
mov
add
inc
mov
test
or
xchg
jg
mov
test
sbb
inc
add
add
sbb
jae
out
sbb
fbld
mov
mov
dec
or
test
add
jne
imul
cmpsb
jo
add
add
fwait
sub
fwait
dec
cmp
aas
jbe
mov
cmp
add
imul
inc
imul
into
movsl
cld
mov
incb
sub
adc
ret
cs
jmp
frstor
add
das
pushf
addr16
dec
dec
rolb
int3
iret
cmp
scas
pop
ja
sti
pop
adc
pop
clc
cmp
pop
std
mov
lahf
fcoml
test
lds
jae
lcall
add
gs
lea
and
inc
add
add
movsl
xchg
push
mov
push
insb
cmpsb
out
jg
movsl
mov
add
fistl
add
inc
add
daa
lret
xor
mov
mov
add
bound
dec
popa
push
addb
push
mov
xlat
call
add
cs
bound
mov
dec
mov
bound
mov
jno
push
add
sub
into
and
add
fnstenvs
add
outsl
push
stos
das
cltd
lret
sub
lahf
lods
mov
mov
aaa
cmpsl
pop
dec
push
add
adc
imul
out
add
pop
in
lret
jb
mov
mov
mov
and
jo
xchg
leave
clc
ds
bound
fstl
mov
dec
xchg
mov
lcall
sbb
sub
je
jmp
ret
inc
add
add
cltd
mov
imul
mov
sbb
sbb
cmp
and
mov
test
push
out
ds
lods
cmc
mov
cmpsb
mov
sbb
and
leave
ret
adc
std
aaa
cmpsl
out
and
dec
mov
pop
xchg
nop
xor
jns
add
adc
inc
dec
into
pop
stc
jo
test
enter
je
enter
lea
loope
mov
scas
add
int
add
mov
cmp
scas
mov
lcall
sub
sbb
aas
outsl
inc
insb
adc
in
dec
xchg
mov
ljmp
sub
mov
lret
sub
popf
sub
fldl
lods
js
lock
add
mov
pop
test
clc
sub
jbe
mov
mov
jmp
push
and
and
or
mov
insl
and
adc
mov
jecxz
jecxz
lcall
dec
ljmp
pop
push
xchg
cmpsl
test
rolb
lcallw
xchg
jge
insb
sub
hlt
test
test
cltd
xor
mov
xlat
insl
pop
pop
out
popf
rolb
lret
fwait
add
xor
clc
dec
outsb
jbe,pt
popl
lret
adc
movsl
or
pop
mov
add
out
stc
in
jbe
gs
pop
or
cmp
shlb
mov
addb
xor
inc
add
insb
fbld
pop
fidivrs
xchg
fstl
mov
sbb
xor
xchg
lret
sarl
pop
push
cmc
mov
je
movsl
arpl
jmp
sti
int3
push
adc
and
addr16
mov
push
sub
ja
ds
sti
dec
lcall
push
test
outsb
xchg
stos
shlb
ja
lret
stos
ljmp
stos
in
cmp
add
ja
xor
push
add
insb
adc
add
faddl
ds
cmp
pop
pop
sub
int
stos
aad
cwtl
shr
push
mov
adc
cmp
mov
fmull
in
jp
mov
ja
xor
std
loop
or
dec
mov
lock
add
test
cmp
imul
and
loop
std
addb
into
shlb
push
pop
addb
xor
test
add
cs
lods
or
or
push
cmpl
push
sub
add
mov
inc
add
sbb
adc
add
repnz
sub
call
les
inc
add
add
inc
add
ret
xor
sub
idivl
pop
mov
pop
cs
outsb
sti
adc
pusha
add
sbb
push
sub
adc
sub
sbb
mov
jg
add
mov
outsb
xchg
addb
popa
stos
cmpsl
fists
xor
pop
adc
push
pop
repz
and
aas
iret
dec
sti
rolb
and
pop
inc
cmpsl
dec
cld
testl
mov
add
in
ret
std
lods
out
int
movsl
lock
add
dec
test
test
mov
lcall
aad
xor
in
cwtl
push
push
and
add
in
into
inc
push
rep
pop
sbb
fldcw
mov
jb
dec
push
popf
cmp
cld
in
push
mov
lds
movsb
cmp
or
sbb
ficoml
mov
lock
push
xchg
jo
mov
lret
dec
das
cmpsb
push
in
js
stos
cmp
add
popa
inc
add
inc
jg
lcall
push
lcall
push
fs
sub
mov
stc
sbb
rolb
add
nop
aas
xchg
cmc
loope
mov
sbb
jae
xchg
mov
pop
sbb
add
imul
mov
sbb
les
addb
jg
sub
mov
mov
mov
inc
add
add
add
insl
movb
inc
add
lods
sub
xor
mov
test
inc
ds
rcll
sub
aad
dec
outsb
and
pop
pop
loopne
jmp
jns
sub
fisubl
dec
mov
es
in
or
jns
push
mov
add
loope
mov
mov
aas
jb
pop
mov
addb
push
or
roll
pop
inc
add
add
js
add
jne
fdivp
adc
pop
adc
pushaw
add
je
adc
call
popf
imul
lret
outsl
mulb
or
or
gs
and
cli
aas
inc
add
and
arpl
aaa
and
fwait
cmp
jne
icebp
or
rclb
sub
sahf
arpl
pop
jecxz
movsb
mov
mov
mov
or
jne
fisttpl
xor
pop
dec
sub
add
mov
lods
and
xchg
mov
mov
add
das
sahf
sar
jge,pt
movsb
xor
je
outsb
movl
iret
inc
jp
xchg
js
stos
aaa
mov
cmp
add
xchg
mov
stos
push
dec
shlb
data16
dec
and
jno
push
mov
jo
out
fdivl
mov
ljmp
mov
sub
fidivrl
aaa
out
ds
add
cmpsl
pop
nop
sbb
popf
test
adc
lcall
nop
nop
jl
add
xor
and
jo
xor
push
xchg
xor
imul
add
insl
or
or
mov
adc
out
mov
and
ret
mov
inc
mov
xchg
pop
mov
ss
pusha
add
mov
dec
ret
pop
movsb
mov
or
add
push
data16
and
lret
movb
out
ret
sub
stos
sbb
xor
testb
into
or
or
out
xorl
xor
sbb
mov
dec
mov
mov
push
and
outsb
jle
cmc
push
cmp
and
imul
dec
inc
add
mov
mov
cltd
and
loop
xor
mov
push
fwait
inc
inc
rolb
fstpl
int
push
add
add
sbb
adc
pop
cmc
pop
in
mov
pop
pusha
add
es
cmp
cmp
mov
xor
fsubrs
mov
xchg
xor
sbb
pushl
add
jecxz
roll
dec
mov
xchg
mov
and
mov
dec
call
fdivl
bound
inc
jo
push
xor
nop
xchg
pop
cmp
and
lea
mov
inc
add
clc
mov
jmp
cmp
imul
mov
fucomip
inc
add
jp
adc
loopne
cltd
or
sbb
lahf
fbstp
mov
jno
jb
mov
add
mov
sbb
dec
pop
jge
popf
push
xchg
lcall
add
add
mov
data16
nop
sub
sbb
out
jno
fnstsw
fistl
std
mov
jge
add
je
icebp
lods
push
loope
addb
add
mov
mov
addr16
fistpll
pusha
add
lret
movsl
cmpsl
and
pop
inc
add
loop
hlt
jp
cmp
xchg
ret
fldcw
sub
jl
in
xchg
rcrb
mov
add
ret
loope
add
pushf
xor
in
dec
sub
xchg
icebp
mov
mov
jnp
pop
pop
test
popa
add
sbb
adc
add
sub
cmp
out
lcall
test
push
add
addb
push
jle
or
bswap
dec
sub
add
jae
inc
mov
add
out
xchg
sbb
jge
sbb
mov
add
pop
mov
mov
sub
pop
test
xchg
lcall
inc
sbb
add
imul
sbb
add
addb
mov
sub
cld
push
jno
js
add
and
jnp
stos
dec
sub
mov
es
sti
bound
je,pn
fs
mov
or
mov
imulb
adc
clc
mov
imull
repz
dec
aam
fnstenv
in
dec
xchg
pop
stos
int3
popf
inc
sbb
adc
jge
mov
cltd
push
mov
sbb
or
jge
lds
add
add
js
loope
cmp
mov
inc
stc
jo
lahf
aas
dec
mov
xchg
sub
das
mov
iret
ds
mov
idiv
pop
dec
iret
ret
call
bound
je
lcall
add
ds
or
mov
or
js
clc
mov
cmp
mov
add
jp
ds
and
mov
or
lods
rcrl
add
sub
testb
or
add
das
jae
sub
fs
test
add
inc
add
mov
and
mov
cmpsb
cld
sub
mov
pop
mov
jmp
push
and
add
mov
xor
lahf
mov
hlt
lret
repnz
dec
bound
movsb
xor
addr16
jg
pop
mov
adc
aas
jmp
mov
bound
aad
add
mov
add
or
jmp
jns
pop
mov
je
daa
sbb
add
pusha
add
and
jmp
fsin
cltd
mov
push
pop
ljmp
mov
cli
fsubs
fists
xor
add
jb
add
mov
loop
and
rol
add
add
mov
sarb
xchg
fdivr
lods
jge,pn
arpl
les
pop
ret
push
cld
insl
sbb
jge
ret
popa
fwait
or
xor
loop
popa
test
add
faddl
dec
ss
jnp
cmpsb
xor
lahf
mov
inc
loopne
jmp
mov
mov
xchg
push
in
fnsave
mov
add
xchg
loopne
cmp
popf
addb
call
int
mov
push
inc
add
rol
add
aad
cmp
addb
addb
subl
insb
pop
dec
jge
js
push
hlt
inc
add
add
dec
sub
dec
xchg
dec
js
jnp
stos
cltd
pop
fwait
test
jl
push
mov
popa
adc
lea
lret
cmp
or
inc
mov
movb
push
inc
add
jno
mov
xchg
adc
adc
out
ret
pop
stc
cltd
daa
add
inc
add
jb
jle
movb
dec
nop
jmp
adc
add
add
cmp
add
jmp
stc
jb
scas
roll
scas
fwait
add
push
mov
xchg
ret
cmp
mov
cmpsb
push
xor
movsl
inc
add
xor
add
nop
jmp
add
cld
push
stc
jb
add
dec
add
test
jg
dec
cmp
jb
repz
mov
dec
xor
push
mov
xchg
ret
push
push
push
mov
xchg
ret
scas
add
cld
push
mov
xchg
ret
enter
shrl
push
stc
jb
add
add
aas
inc
push
mov
xchg
ret
add
mov
stc
jb
add
add
add
mov
stc
jb
fldl
loopne
add
rclb
mov
sbbb
add
add
add
repz
nop
jmp
add
adc
add
jns
mov
stc
jb
loopne
add
leave
es
int
adc
jb
addb
add
add
and
stc
jb
add
add
add
lea
aaa
sbb
sbb
mov
fadds
xchg
ret
add
sbb
inc
push
mov
xchg
ret
add
loopne
add
add
add
inc
add
add
scas
mov
jmp
push
loopne
add
sbb
add
stc
jb
add
repz
or
add
dec
push
ja
add
fisttpll
pop
ljmp
push
movsb
nop
jmp
add
filds
add
lock
xchg
std
mov
stc
jb
adc
adc
fldl
cli
push
nop
jmp
add
add
movb
mov
stc
jb
add
xchg
les
push
orb
jmp
add
jbe
stc
jb
add
sub
test
jb
cmp
add
insb
stc
jb
rolb
scas
add
jne
nop
jmp
add
data16
repz
jmp
sahf
adc
add
push
pop
adc
xor
sbbb
sub
roll
add
mov
mov
stc
jb
add
jns
xchg
fsubrs
push
mov
xchg
ret
add
add
cwtl
testl
nop
jmp
mov
pop
ja
nop
push
mov
xchg
ret
cmp
repnz
push
adc
sbbb
add
add
scas
xchg
jp
pause
jmp
add
shr
aaa
jne
push
push
add
addb
adc
shr
stc
jb
sub
add
stc
jb
add
adc
add
add
adc
mov
dec
add
dec
je
jp
push
mov
xchg
ret
fldl
icebp
add
call
stc
jb
dec
add
addb
stc
div
nop
jmp
add
add
jmp
nop
jmp
in
dec
add
nop
jmp
add
add
add
add
inc
add
roll
jle
aad
dec
mov
push
mov
xchg
ret
add
add
push
mov
xchg
jp
add
add
outsl
xor
add
lds
nop
jmp
add
scas
add
ret
sub
sbb
jb
jno
vcmpps
add
add
add
push
push
mov
xchg
ret
add
jmp
jl
xor
jb
mov
adc
add
push
stc
jb
dec
sub
scas
adc
jmp
push
mov
xchg
ret
ja
add
adc
nop
jmp
cmp
xchg
pop
push
mov
xchg
ret
mov
into
roll
enter
sub
jb
push
add
add
js
enter
cmpb
ljmp
xchg
jb
sbb
add
jae
dec
nop
jmp
icebp
movb
push
mov
cmp
in
add
stc
jb
add
add
test
or
jmp
fildl
xchg
ret
scas
in
movsb
int3
je
stc
jb
add
cmpsb
sub
out
stc
jb
add
cmp
sub
stc
jb
lds
add
jb
add
add
scas
enter
xor
jb
scas
lret
leave
ja
push
notl
ret
push
mov
xchg
ret
or
mov
jo
insb
mov
push
mov
xchg
ret
add
push
add
dec
sti
std
leave
add
sbb
jb
add
push
addb
push
add
xor
idiv
add
stc
jb
into
sub
int3
popl
stc
jb
scas
add
scas
jle
dec
pop
stc
jb
adc
add
scas
add
inc
add
and
push
mov
xchg
ret
leave
jmp
sub
insb
adc
add
jb
les
adc
add
aaa
stos
sub
push
mov
xchg
ret
add
jmp
pushl
push
mov
xchg
ret
dec
leave
push
push
stc
jb
dec
leave
mov
add
or
addb
push
test
rolb
xor
or
jb
fldl
add
add
call
stc
jb
add
pop
add
nop
jmp
add
leave
add
cmp
mov
xchg
ret
add
add
ja
mov
stc
jb
add
add
xchg
flds
jge
stc
jb
jns
mov
std
jle
adc
xor
stc
jb
scas
add
mov
add
push
push
addb
roll
aaa
add
sub
jg
add
add
add
add
std
cmpsl
int3
xor
stc
jb
add
scas
add
add
scas
add
nop
jmp
add
add
leave
dec
push
nop
jmp
dec
lret
mov
add
add
add
mov
stc
jb
ficoms
addb
add
add
jb
push
add
pop
mov
push
mov
xchg
ret
add
mov
mov
stc
jb
add
fldl
add
add
push
aas
add
stc
jb
enter
ja
push
mov
xchg
add
dec
jmp
add
pushl
stc
jb
scas
sbb
add
mov
in
cmpsl
add
add
aad
add
add
add
stc
jb
dec
add
sahf
pop
test
mov
push
mov
xchg
ret
add
push
sahf
call
nop
jmp
add
xor
add
sbb
je
sub
jb
mov
add
dec
addr16
mov
nop
jmp
ret
xor
addr16
mov
nop
jmp
jno
push
popa
cmp
cli
jmp
mov
push
pop
add
mul
bound
aad
push
push
mov
xchg
ret
scas
push
xor
stc
jb
into
lret
repz
xchg
inc
add
jmp
add
out
push
add
push
push
mov
xchg
ret
scas
mov
add
push
mov
xchg
ret
add
lds
or
cmc
sbb
add
jb
scas
ret
mov
xchg
jmp
sub
test
rolb
xor
jb
add
add
jle
rep
push
mov
xchg
ret
scas
jmp
icebp
out
mov
stc
jb
dec
into
add
test
nop
jmp
add
add
jmp
cmpw
stc
jb
add
push
mov
call
stc
jb
jno
je
add
stc
jb
add
sbb
add
imul
test
inc
add
add
pop
mov
stc
jb
into
xor
add
jge
stc
jb
add
and
pop
movzwl
stc
jb
add
addb
popa
scas
shl
nop
jmp
subb
add
loop
jae
aas
cmpw
nop
jmp
jmp
xchg
ljmp
jno
push
adc
clc
push
push
mov
xchg
ret
icebp
adc
or
mov
add
mov
add
add
add
add
add
stc
jb
add
add
add
fcoml
mov
xchg
ret
add
dec
push
in
lods
stc
jb
add
add
add
nop
jne
push
stc
jb
scas
mov
xor
sbb
lea
jmp
pop
adc
or
inc
mov
jmp
xor
jb
add
scas
movb
mov
push
mov
xchg
ret
scas
addr16
out
jg
nop
jmp
push
add
mov
cmp
jne
stc
jb
or
in
fcmovb
roll
inc
sti
add
sub
add
xlat
jge
leave
nop
jmp
in
enter
push
add
xchg
cmp
jb
add
add
xorb
jg
stc
jb
add
add
std
stos
push
push
mov
xchg
ret
sub
shll
jb
add
adc
adc
jl
adc
jb
add
add
add
cwtl
movzwl
stc
jb
adc
rorb
and
adc
add
stc
jb
cmp
add
add
jb
std
add
add
ja
aam
test
sarl
cli
inc
add
add
and
lea
nop
jmp
mov
add
add
add
mov
jb
add
sbb
push
stc
jb
jns
push
dec
add
add
mov
stc
jb
mov
add
jns
lods
nop
jmp
add
out
filds
hlt
xor
push
stc
jb
add
stc
jb
dec
ret
add
push
ja
cmpl
nop
jmp
addr16
dec
add
insb
insb
stc
jb
add
into
add
faddl
xchg
ret
scas
add
lret
movsl
popf
dec
push
mov
xchg
ret
add
mov
inc
mov
stc
stc
jb
add
jmp
xor
stc
jb
dec
add
add
cmp
add
add
jb
add
add
sub
sar
and
inc
rclb
mov
andb
and
jb
add
ret
pop
stc
jb
or
data16
mov
mov
stc
jb
add
add
repz
xor
push
push
mov
xchg
ret
sub
mov
rclb
add
add
mov
gs
sbb
push
sub
in
in
add
push
adc
mov
stc
jb
add
or
adc
add
add
fldl
add
jb
filds
add
dec
stc
jb
lret
out
lds
add
fsubrp
push
adc
add
jb
add
cmp
nop
jmp
into
leave
or
push
in
mov
stc
jb
sub
mov
add
add
jb
add
mov
sub
stc
jb
add
add
std
mov
nop
jmp
enter
sub
add
mov
nop
jmp
xor
pop
xchg
add
add
nop
jmp
add
enter
add
push
mov
xchg
ret
sub
stc
jb
dec
jno
les
adc
jmp
jb
add
outsl
mov
stc
jb
dec
add
xor
xor
pop
add
push
mov
xchg
ret
add
add
movzwl
stc
jb
ret
add
push
aas
mov
push
mov
xchg
ret
add
dec
push
mov
xlat
loopne
add
js
into
in
decb
dec
jg
stc
jb
add
add
les
enter
push
mov
xchg
ret
scas
add
stos
mov
push
mov
xchg
ret
dec
leave
add
push
add
stc
jb
test
lea
mov
xchg
ret
add
add
cmp
or
jb
fucomp
cmp
push
mov
xchg
ret
add
add
dec
push
mov
ljmp
add
es
or
pop
cmp
jb
fiadds
add
les
jb
adc
cmp
sbb
pause
jmp
fiadds
add
ret
cmp
mov
add
nop
jmp
add
iret
stc
jb
add
into
push
xchg
stc
jb
dec
out
adc
into
fidivs
add
cmp
int3
add
add
icebp
add
dec
or
jne
stc
jb
sahf
test
outsb
push
stc
jb
xchg
add
mov
add
add
push
nop
jmp
jno
enter
add
xchg
dec
and
stc
jb
data16
ja
icebp
and
pop
mov
stc
jb
scas
add
add
mov
stc
jb
loopne
xchg
addb
mov
imul
addb
out
add
mov
push
mov
xchg
ret
fiadds
add
add
stc
jb
scas
add
add
into
mov
push
mov
xchg
ret
les
das
push
stc
jb
std
roll
add
leave
add
adc
lea
stc
jb
add
mov
add
test
call
incl
or
add
call
stc
jb
add
addb
pop
stc
jb
add
adc
out
loop
out
push
mov
add
jg
cmp
in
add
sub
stc
jb
add
push
jno
cmp
sub
add
add
ja
push
lret
jmp
dec
add
add
jmp
add
jg
nop
jmp
repz
addr16
shl
stc
jb
fbstp
cltd
mov
push
mov
xchg
ret
add
mov
jb
add
add
jle
pop
and
stc
jb
loopne
ja
add
push
xchg
and
jbe
add
pop
add
stc
jb
in
fldl
into
add
nop
jmp
mov
dec
add
add
xor
stc
jb
add
std
enter
add
add
incl
add
add
incl
repz
lea
mov
inc
add
add
mov
add
add
out
test
add
stc
jb
push
add
add
mov
adc
jb
roll
add
add
push
add
stc
jb
add
ficomps
mov
xchg
ret
dec
scas
add
dec
imul
stc
jb
add
into
mov
stc
jb
add
push
add
nop
jmp
add
dec
mov
push
push
mov
je
test
add
add
mov
stc
jb
jno
jle
add
sbb
xorb
incl
lds
add
cmp
push
mov
add
nop
jmp
add
add
mov
jno
cmp
push
mov
xchg
ret
add
mov
push
mov
xchg
ret
cmp
push
push
mov
xchg
ret
add
add
mov
nop
jmp
add
add
add
stc
jb
add
into
add
fistps
adc
add
lds
scas
into
sbb
movsb
stc
jb
add
add
add
push
cmp
mov
xchg
ret
add
add
add
xchg
stc
incl
inc
out
add
add
add
jb
scas
ret
push
add
dec
bound
decb
cld
cmc
inc
add
test
mov
call
add
loop
xchg
adc
jae
aas
call
stc
jb
loopne
add
xor
mov
add
push
mov
xchg
ret
push
jno
notb
mov
xchg
ret
mov
popf
jne
stc
jb
lret
mov
add
stc
jb
add
or
rcr
inc
add
fst
push
je
stc
jb
add
mov
and
nop
jmp
repz
ja
add
push
stc
jb
add
repz
add
xor
cwtl
ret
stc
jb
jns
add
xchg
add
push
push
mov
xchg
ret
add
mov
pop
rep
stc
jb
jns
add
pop
sub
mov
xchg
ret
loop
shr
jmp
add
add
jb
add
mov
stc
jb
mov
add
add
push
mov
xchg
ret
add
xor
mov
stc
jb
loop
inc
add
xor
insl
push
nop
jmp
add
lds
jge
iret
idiv
stc
jb
add
scas
sahf
shlb
add
sub
sti
pushl
adc
add
add
dec
push
nop
jmp
add
jmpw
mov
add
jb
les
add
lds
andb
add
add
daa
mov
subb
add
add
adc
add
mov
xchg
ret
push
add
enter
rolb
lea
stc
jb
add
add
add
cmpb
incl
add
test
add
mov
stc
jb
add
leave
add
xchg
das
out
stc
jb
add
fmuls
push
adc
add
xor
icebp
add
jmp
jb
fbstp
add
add
nop
jmp
or
push
ret
fiadds
push
mov
xchg
ret
add
mov
stc
jb
mov
add
jmp
inc
jle
add
add
add
enter
xor
add
stc
jb
addb
push
stc
jb
push
scas
add
add
push
lret
jb
std
jns
sahf
add
add
dec
inc
stc
jb
push
add
add
add
and
inc
sbb
sar
inc
add
add
mov
xchg
ret
add
add
jns
push
push
mov
xchg
ret
jmp
sub
add
nop
jmp
sbb
dec
adc
jb
into
add
add
add
inc
std
inc
add
sub
add
add
nop
jmp
dec
mov
mov
jmp
stc
jb
push
add
dec
mov
stc
jb
scas
adc
jno
add
or
stc
jb
push
add
es
filds
call
ljmp
sub
stc
jb
add
xchg
push
cld
pusha
push
mov
xchg
ret
scas
push
push
jmp
jno
pop
stc
jb
enter
add
leave
scas
pop
mov
nop
jmp
sbb
or
pop
nop
jmp
add
sub
add
push
cwtl
push
push
mov
xchg
ret
add
repz
jb
or
jb
add
repz
add
mov
nop
jmp
dec
jmp
add
int
sub
add
adc
inc
add
loopne
rep
stc
jb
addr16
add
add
icebp
xor
add
stc
jb
add
add
add
add
nop
jmp
dec
add
or
lds
jb
dec
shlb
add
lret
mov
xchg
ret
rcl
cmp
in
push
push
mov
xchg
ret
sbb
cmc
and
ds
stc
jb
mov
data16
add
mov
mov
stc
jb
add
std
pop
adc
mov
push
mov
xchg
ret
add
mov
stc
jb
add
icebp
dec
inc
pop
add
stc
jb
addr16
out
test
push
jmp
and
mov
lds
add
mov
nop
jmp
roll
xchg
test
push
mov
xchg
ret
addr16
add
xchg
jmp
sar
sbb
jmp
jle
sub
adc
xor
stc
jb
add
push
cmp
push
sbb
jb
add
dec
pop
add
push
pushf
pop
stc
jb
add
add
scas
push
movsb
fisttpll
repz
incl
leave
add
scas
add
enter
mov
stc
jb
push
add
add
mov
push
add
pusha
add
push
repz
stc
jb
add
pop
mov
stc
jb
scas
roll
xchg
add
stc
jb
add
sub
add
add
stc
jb
sub
jns
jmp
mov
stc
jb
pop
les
and
push
mov
xchg
ret
add
add
push
mov
popf
aad
int3
add
jle
out
cmp
add
xchg
xchg
popa
add
mov
xchg
ret
jle
add
pushl
push
mov
xchg
ret
fnsave
xchg
int3
ret
stc
jb
jmp
dec
loop
dec
mov
test
nop
jmp
add
jmp
enter
jnp
rclb
add
add
xchg
loopne
iret
pop
stc
jb
add
add
add
add
add
jb
add
pop
adc
add
stc
jb
adc
dec
std
add
scas
xchg
mov
lock
decl
add
cmp
aas
mov
push
mov
xchg
ret
or
push
mov
orb
incl
add
leave
nop
jmp
add
movb
add
add
in
enter
add
roll
xor
bound
lea
push
mov
xchg
ret
pop
addr16
mov
cmpb
add
add
jmp
jp
nop
jmp
add
test
push
mov
xchg
ret
in
mov
test
nop
jmp
add
or
dec
out
push
stc
jb
add
cmp
and
mov
xchg
ret
leave
repz
lret
add
incl
leavew
into
mov
movb
mov
stc
jb
lret
add
stc
jb
scas
rolb
imul
dec
push
nop
jmp
add
adc
add
pop
push
nop
jmp
add
xchg
add
and
push
mov
xchg
ret
push
add
das
cmpl
nop
jmp
add
jns
add
fldt
cli
stc
jb
lds
add
pop
add
mov
stc
jb
add
sarl
leave
nop
jmp
add
add
icebp
test
loop
aam
mov
stc
jb
mov
add
sbb
add
nop
jmp
add
add
inc
jne
pop
push
mov
xchg
ret
add
jbe
lret
call
stc
jb
jmp
add
loop
dec
mov
nop
jmp
ret
add
loopne
push
das
leave
stc
jb
add
inc
add
mov
scas
addb
adc
test
jb
inc
add
fiadds
push
adc
clc
mov
stc
jb
add
cmp
bound
add
jo
add
stc
jb
loop
add
lret
add
mov
push
mov
xchg
ret
push
add
cld
or
out
jmp
add
dec
mov
stc
jb
scas
add
push
push
pop
push
nop
jmp
add
add
notb
mov
xchg
ret
mov
adc
les
rcll
inc
add
decl
stc
jb
add
add
add
and
add
stc
jb
add
add
add
jns
xorb
push
add
add
in
not
stc
jb
add
add
sbb
stc
jb
add
or
les
pusha
stc
jb
dec
add
mov
call
add
add
push
push
data16
push
orb
incl
inc
out
enter
push
add
push
mov
xchg
ret
inc
push
ret
xor
movswl
nop
jmp
sbb
test
push
sti
call
incl
dec
add
mov
push
nop
jmp
es
adc
pop
mov
and
and
ss
xchg
or
mov
cltd
in
incl
loopne
jmp
inc
add
cmp
nop
jmp
push
add
add
add
mov
stc
jb
add
enter
movb
mov
xchg
ret
ja
add
dec
push
mov
xchg
ret
jle
push
push
adc
add
stc
jb
test
add
mov
scas
sti
incl
push
add
dec
add
mov
xchg
ret
roll
sub
push
mov
xchg
ret
fldl
add
mov
stc
jb
add
sahf
add
mov
push
mov
xchg
ret
add
add
test
sub
adcb
add
loopne
in
xor
push
mov
xchg
ret
cmp
pop
stc
jb
scas
add
add
mov
stc
jb
add
mov
xor
nop
jmp
push
push
add
inc
nop
jmp
add
push
inc
subb
stc
jb
dec
sub
in
mov
mov
jb
ja
cmp
mov
add
nop
jmp
leave
add
add
and
stc
jb
imul
add
ret
add
jno
xchg
xchg
sti
jne
nop
jmp
add
sbb
or
stc
jb
add
scas
ret
stc
jb
enter
add
add
push
stc
jb
add
add
ret
cltd
add
push
mov
xchg
ret
add
pop
xor
cs
stc
jb
add
mov
add
add
pop
push
mov
xchg
ret
jns
adc
add
sbbl
loop
stc
jb
mov
add
test
nop
jmp
add
jmp
add
stc
jb
add
sbb
stc
jb
enter
add
test
icebp
stc
jb
jle
add
jmp
add
rclb
loopne
add
add
and
pop
stc
jb
jno
add
es
mov
pop
nop
jmp
addr16
add
add
stos
popa
stc
jb
add
adc
adc
sub
push
cli
stc
jb
add
add
or
add
dec
mov
xchg
into
add
shr
stc
jb
sahf
data16
add
enter
jb
leave
data16
adc
add
aam
mov
test
add
add
jb
add
add
jb
add
sub
scas
jne
stc
jb
add
cs
stc
jb
test
add
add
add
jmp
add
mov
ret
add
push
mov
xchg
ret
add
adc
inc
and
dec
add
nop
jmp
filds
add
leave
xor
loopne
aas
and
nop
jmp
push
jns
push
rcrb
jb
filds
add
test
mov
and
incl
sahf
addb
push
mov
xchg
ret
add
outsb
imul
stc
jb
add
jmp
sti
stc
jb
scas
xor
inc
adc
jno
xor
push
mov
xchg
ret
mov
dec
imul
nop
jmp
fldl
add
add
or
stc
jb
std
addb
call
stc
jb
dec
push
arpl
add
jb
push
scas
shll
stc
jb
add
repz
add
jl
push
mov
xchg
ret
cmp
stos
add
nop
jmp
add
out
leave
add
or
sbb
jb
cmp
push
lds
push
adc
incl
data16
mov
stc
jb
add
add
dec
pusha
push
mov
xchg
ret
add
jmp
nop
jmp
rolb
push
jns
sub
cmpl
add
add
fildll
dec
add
jb
add
sub
add
imul
std
inc
add
add
adc
adcb
decl
add
add
lahf
add
stc
jb
add
add
push
aaa
sub
in
push
sub
data16
push
stc
jb
shll
enter
xor
push
push
mov
xchg
ret
cmp
icebp
leave
movb
push
stc
jb
mov
xchg
add
in
jne
stc
jb
jmp
add
add
stc
jb
push
movb
mov
nop
jmp
fstl
sahf
add
ret
sub
jmp
roll
loopne
in
scas
inc
adc
add
mov
stc
jb
icebp
addb
icebp
adc
nop
jmp
add
add
add
and
mov
push
mov
xchg
ret
std
add
xchg
or
mov
xchg
ret
add
add
add
stc
jb
jns
add
jle
addb
push
clc
fiadds
add
movb
icebp
loope
mov
nop
jmp
dec
jle
ret
loop
les
inc
add
adc
jb
add
std
add
and
stc
jb
jle
add
add
lea
stc
jb
jmp
xor
stc
jb
test
leave
jne
and
stc
jb
cmp
add
or
addr16
ror
push
mov
xchg
ret
add
aad
add
subb
sub
xchg
cmp
jb
mov
add
scas
add
cld
inc
add
add
pop
and
nop
jmp
lret
add
sub
test
stc
jb
add
cmp
mov
xchg
ret
addb
xor
jne
stc
jb
add
into
push
dec
dec
push
addb
inc
add
push
mov
xor
inc
add
lret
fbstp
ljmp
stc
jb
add
gs
mov
stc
jb
jle
add
add
call
incl
cmp
add
push
mov
xchg
ret
sahf
add
jp
add
push
mov
xchg
ret
add
add
mov
cmp
jno
add
add
stc
jb
fldl
add
add
xorb
incl
push
add
les
add
jmp
add
xchg
jmp
call
stc
jb
cmp
add
jg
stc
jb
add
add
insl
rep
nop
jmp
cmpb
add
sub
cmp
sbbb
incl
jmp
add
mov
stc
jb
add
jle
mov
stc
jb
add
add
stc
jb
into
add
push
push
mov
add
popa
nop
jmp
jmp
add
add
or
shrl
jmp
lret
inc
add
add
add
push
push
mov
xchg
ret
add
in
test
add
lret
fiadds
xchg
ret
cmp
popa
stc
jb
push
scas
lret
ja
rcr
xor
stc
jb
push
add
psubsb
jb
icebp
add
mov
push
mov
xchg
ret
add
add
addb
adc
loop
nop
jmp
add
sahf
fstpl
add
stc
jb
push
add
jle
push
jno
movzwl
push
mov
xchg
ret
add
and
stos
stc
jb
add
xchg
add
mov
jb
add
add
jmp
jbe
stc
jb
out
add
add
adc
jb
adc
add
add
xorb
dec
add
sbb
int
stc
jb
xor
add
rorb
add
test
call
incl
addr16
daa
nop
movl
inc
add
into
add
mov
xchg
ret
add
adc
sub
in
stc
jb
data16
ret
mov
stc
jb
jmp
mov
adc
jmp
add
pop
cmp
fimuls
mov
xchg
ret
scas
jmp
add
pushf
add
push
mov
xchg
ret
mov
adc
jmp
add
sbb
adc
jmp
repz
add
es
ret
stc
jb
shr
add
mov
mov
xchg
ret
lret
jecxz
mov
stc
jb
enterw
or
imul
stc
jb
adc
add
shll
mov
stc
jb
push
std
jns
add
cmp
add
push
mov
add
push
stc
jb
add
lds
scas
push
add
add
add
and
push
mov
xchg
ret
push
les
cmp
mov
xchg
ret
add
add
inc
addb
movb
add
jno
nop
jmp
ja
shl
scas
mov
sub
popa
add
mov
xchg
ret
add
scas
pop
push
mov
xchg
ret
xor
add
push
add
add
adcb
lcall
add
sub
jb
add
leave
add
ret
inc
add
and
nop
jmp
sub
xchg
dec
add
push
mov
xchg
ret
push
lds
add
stc
jb
add
add
cmp
sbb
adcb
std
sahf
add
mov
leave
fldl
xchg
ret
push
inc
add
push
hlt
ljmp
mov
push
mov
cmp
incl
sbb
and
lea
stc
jb
add
jmp
pop
add
stc
jb
ja
add
in
je
stc
jb
adc
dec
cmpsb
dec
mov
stc
jb
cmp
stc
jb
ja
sahf
scas
jno
lds
jb
addb
dec
add
and
jb
lret
add
push
mov
xchg
ret
lret
add
loope
stc
jb
xchg
dec
mov
stc
jb
fidivrs
add
insl
add
stc
jb
sahf
push
pop
mov
nop
jmp
fbld
add
addr16
sbb
jnp
push
mov
xchg
ret
add
dec
adc
leave
mov
stc
jb
enter
scas
leave
cmp
ret
mov
stc
jb
add
mov
and
push
mov
xchg
ret
add
stos
subl
stc
jb
adc
push
sahf
in
pop
mov
stc
jb
add
leave
xor
pop
stc
jb
add
adc
add
push
jg
xor
add
stc
jb
loop
scas
dec
add
out
inc
add
add
add
push
sbb
cli
inc
add
loop
mov
cmp
loope
add
dec
add
loope
push
mov
cs
push
add
cmp
add
sub
jb
cli
cwtl
pop
hlt
popa
sahf
or
icebp
adc
hlt
cli
std
jecxz
pop
imul
testb
xor
mov
leave
xlat
mov
add
test
xchg
insb
xor
xor
test
jb
pop
les
clc
xor
lcall
loope
int3
jge
xchg
xchg
push
dec
outsb
pusha
add
out
pop
mov
mov
add
push
les
sub
inc
add
jle
mov
gs
les
adc
mov
ds
jecxz
add
aam
lret
cmp
lret
mov
add
lock
ljmp
dec
xchg
in
addb
loopne
movsb
xchg
mov
cmpsl
repnz
fidivs
add
sbb
mov
mov
cli
outsl
or
cld
pop
xchg
mov
push
cmp
arpl
xchg
mov
mov
add
add
test
dec
outsl
adc
xchg
aad
test
adc
or
xor
inc
add
jecxz
jbe
push
das
sbb
xor
scas
lods
xchg
add
add
mov
sub
add
addb
cwtl
loope
sbb
xor
nop
push
xlat
jg
in
sub
fcoms
cmpsl
xchg
mov
push
dec
movsl
sub
jo
daa
fsubp
xchg
adc
cwtl
mov
std
mov
push
out
jmp
jno
mov
add
mov
mov
scas
cmp
push
mov
ret
iret
mov
add
in
dec
movsb
dec
mov
int3
mov
sub
mov
add
insb
mov
or
mov
inc
cmpsl
add
add
or
repnz
xchg
add
dec
mov
sub
call
dec
fwait
mov
add
inc
jae
sbb
fcmovnb
push
adc
sub
fbld
out
scas
pop
push
mov
fcmovnbe
out
mov
outsb
or
mov
sbb
andl
mov
lea
fimuls
repnz
dec
in
add
inc
addb
sub
outsb
xor
add
out
stc
lock
sarb
icebp
sbb
adc
test
cmp
jge
jmp
jo
in
sub
inc
in
jge
aas
je
scas
add
sbb
mov
sbb
jecxz
aad
out
or
add
jmp
add
bound
out
xchg
mov
sub
pop
lret
dec
imul
or
and
sarb
jnp
push
add
push
add
pop
pop
adc
mov
xchg
xor
repz
sahf
xor
or
sub
xor
add
test
pop
xor
dec
xchg
test
push
fldenv
stos
cli
inc
add
add
fs
cmp
mov
push
dec
sub
sub
insl
fwait
sub
add
sbb
add
je
into
jp
movsl
andl
push
repz
cli
adc
add
sahf
cmc
stos
jle
outsl
repnz
sub
mov
mov
mov
mov
ret
push
push
es
insb
fs
in
inc
xchg
ja
stos
std
mov
add
xchg
and
add
add
mov
mov
inc
add
into
pop
shll
aas
inc
add
push
pop
xchg
ret
sub
cmp
clc
pop
imul
add
lds
add
inc
add
sbb
mov
xchg
xchg
in
rolb
add
add
fldl
cmp
jb
cmp
add
addr16
jnp
add
lods
inc
jbe
pop
fisubrl
xchg
daa
ror
mov
xlat
fimuls
mov
daa
sub
leave
scas
mov
push
daa
scas
jge
fisttpll
in
xchg
jne
fidivrs
add
pop
inc
xor
pop
nop
not
adc
aad
clc
es
xor
and
add
xor
mov
push
sbb
sbb
sub
add
jns
add
pop
test
or
sahf
xor
or
test
pushf
clc
mov
add
sub
add
lds
xchg
enter
inc
addb
mov
fistpll
in
sbb
mov
addb
ds
xlat
dec
mov
cmpsb
lock
push
mov
in
movb
cmpsl
movsl
or
add
add
dec
pop
call
addl
out
int3
ja
cld
cwtl
push
rolb
out
test
add
add
jnp
dec
inc
jbe
mov
add
push
sbb
mov
add
int
mov
cmpsb
mov
push
pop
out
mov
mov
jecxz
jg
fcoml
testb
add
addr16
jns
jnp
add
add
shll
jno
cmp
push
popf
mov
loopne
pop
and
add
shll
add
pusha
add
jne
or
mov
movntq
add
sub
out
outsb
stos
push
jl
sub
jns
or
mov
leave
clc
fs
push
addl
stc
iret
mov
push
mov
adc
pop
in
add
add
mov
mov
addb
lahf
pop
aaa
mov
jecxz
pop
inc
dec
pop
rorl
hlt
adc
mov
je
rep
aad
test
in
dec
insb
push
xor
cmp
sbb
insl
lea
cmc
ja
and
test
bound
mov
jnp
cmpsb
lods
ret
js
sbb
jno
or
loopne
loopne
push
outsl
in
xchg
adc
mov
int3
xor
mov
dec
test
test
jns
xchg
lods
mov
jb
lret
ja
out
addr16
addb
rcrl
lods
cmpsb
jecxz
xor
jns
mov
cli
and
mov
lods
imul
cmpsb
jae
ficoml
bound
fisttpll
mov
in
push
xor
fmuls
movb
je
dec
mov
fistpl
enter
cmp
jg
pop
and
add
cmp
mov
scas
xchg
xchg
push
xlat
scas
adc
dec
in
jo
add
jp
stos
ljmp
pop
mov
add
mov
add
dec
adc
stos
jmp
mov
call
sbb
cmpsb
sbb
mov
in
stos
jo
inc
daa
mov
test
dec
adc
scas
mov
mov
jecxz
or
adc
sub
pop
mov
xchg
inc
add
cwtl
add
cmpsb
pusha
add
add
repz
push
jb
test
push
jecxz
gs
cmp
cmp
xor
xor
in
mov
lret
scas
jae
dec
les
aam
xchg
adc
shll
xor
jb
jne
out
rolb
inc
add
fstp
dec
mov
stos
mov
dec
sub
mov
xchg
fdivl
jb
jns
aas
movsb
out
xchg
mov
enter
fwait
adc
cmp
popa
inc
add
inc
add
mov
xor
stc
or
jp
insb
xor
test
std
cmpsl
jle
cld
inc
fidivs
int3
cmpsb
add
movb
push
aad
repnz
mov
add
jmp
idivl
roll
jns
bound
fisubrl
or
ret
adc
xor
mov
mov
repnz
add
int
ljmp
notl
cmp
inc
lret
mov
rclb
dec
and
shr
pop
sarb
xchg
std
xchg
enter
adc
dec
loop
les
pusha
add
mov
cmc
adc
sbb
mov
inc
add
and
cmp
add
xor
push
sub
pop
pop
icebp
inc
add
add
xchg
pop
shl
ret
xor
cmp
icebp
fistpll
lret
scas
or
js
cmp
movsl
addb
cwtl
in
dec
mov
cmp
jge
cmp
push
xchg
scas
sbb
aad
or
jle
jne
mov
jle
inc
jae
pop
lock
adc
push
bound
pop
test
sub
stos
mov
inc
mov
repz
push
fisubrl
sbb
push
stc
movsb
jle
add
dec
scas
sub
movsb
jbe
inc
add
and
test
rcrl
lock
popa
cmp
push
cmp
cmp
inc
lock
stos
insb
push
outsl
dec
mov
out
repz
xlat
lcall
mov
and
sbb
fs
dec
mov
or
ficoml
and
filds
fsubs
aad
fldt
mov
mov
add
and
adc
sbb
jne
js
mov
lea
mov
es
add
mov
push
movsl
negl
dec
es
pop
xor
dec
jne
cmc
ret
mov
std
sub
mov
pop
add
movl
and
mov
fldlg2
enter
cmp
adc
test
repz
pop
xor
daa
daa
ret
adc
add
add
xchg
mov
or
add
pop
ret
sbb
movb
cwtl
jl
shll
mov
xchg
stc
and
mov
and
or
sub
leave
inc
ss
into
fchs
daa
xchg
cmpsl
sub
xor
mov
mov
add
addb
mov
addb
add
addb
xor
mov
lock
xchg
inc
add
das
nop
ret
cmp
or
jae
or
je
mov
push
mov
mov
mov
inc
xchg
lahf
negb
adc
sub
int3
and
xchg
push
adc
mov
addb
lods
mov
sbb
je
fmuls
jecxz
push
stc
mov
sbb
int3
iret
das
in
jle
add
add
dec
lcall
fbld
aam
mov
pop
in
mov
or
fcmovne
add
aas
fstl
mov
xchg
push
scas
or
mov
daa
gs
loope
add
jecxz
or
cmpsl
push
add
daa
enter
mov
mov
ret
push
lea
sbb
jne
mov
add
sbb
jecxz
insb
shll
mov
add
sbb
popf
dec
lods
jne
add
test
repz
loopne
pop
movb
sbb
add
mov
dec
mov
push
pshufw
add
aas
jne
shr
inc
std
rcll
movsl
pop
mov
inc
inc
add
arpl
in
out
lcall
test
aaa
adc
flds
and
mov
ja
in
jg
sub
jae
mov
cmp
fst
mov
ds
pop
jl
addl
fcompl
jge
sti
or
cmp
cltd
into
out
xor
add
dec
popf
in
leave
js
repnz
add
in
inc
mov
mov
addr16
xchg
add
fs
add
dec
pop
adc
cltd
mov
sub
int
lret
js
dec
mov
fcoml
clc
pushf
dec
loopne
scas
mov
int3
rorl
imulb
or
dec
cli
and
push
pop
sti
cli
mov
int
or
out
jo
cs
ret
xchg
pop
in
je
add
out
and
gs
add
in
cmpsl
ss
and
or
xchg
push
add
shrl
lock
add
mov
leave
push
add
cli
mov
cmp
sbb
popf
decl
in
add
test
cltd
cs
out
aad
int3
inc
and
mov
add
movsb
push
data16
stos
movsb
inc
xchg
sub
sbb
pop
pushf
mov
add
add
mov
and
or
xchg
cld
lock
fstpl
add
rorb
or
add
addb
cmp
aam
pop
xor
movb
notb
xorl
adc
xor
xor
add
lods
rcrl
nop
sub
cmovbe
popa
lds
inc
xchg
mov
xchg
fdivrp
push
xor
rorl
add
into
add
add
fucomp
insb
sub
jns
inc
add
nop
and
and
add
sbb
rolb
popl
mov
mov
and
leave
scas
pop
sub
push
fcmovnb
stos
cmp
mov
dec
dec
cmc
cmpsl
rcll
nop
in
xor
addr16
mov
mov
pop
sbb
push
cmc
or
sahf
pop
rcrl
sub
aaa
pop
movsl
js
mov
dec
or
inc
add
dec
stc
xor
addb
outsl
movsl
clc
dec
add
pop
addb
addr16
add
hlt
jp
push
adc
cltd
sub
adc
jne
outsb
adc
push
sub
add
dec
add
repnz
out
jecxz
and
xchg
hlt
aaa
aam
mov
dec
sbb
pop
lcall
mov
div
mov
mov
test
adc
dec
and
and
mov
sub
cmpsb
inc
ja
popa
lods
push
lods
add
inc
add
sahf
xor
outsl
sub
adc
out
and
gs
add
mov
pop
push
sbb
sti
out
add
dec
imul
fucom
lock
mov
dec
xchg
adc
xlat
outsl
and
test
sti
pop
shlb
test
shlb
add
bound
xor
add
aam
faddl
fisubl
mov
inc
add
pop
cmp
aas
jbe
xchg
dec
push
outsl
outsl
fwait
loop
add
int3
das
cli
test
lcall
lcall
pop
mov
sahf
shll
or
outsb
arpl
scas
cmpsl
mov
lcall
push
mov
subl
aas
lods
dec
int
adc
mov
pop
test
add
rolb
push
mov
addb
fstps
dec
hlt
aaa
inc
sub
mov
jne
or
sar
jne
inc
push
sub
cmp
push
lahf
int3
mov
fildll
mov
jne
pop
inc
add
jnp
addr16
adc
push
jle
mov
into
fcmove
jno
cmc
cmp
fsubrp
pop
imul
inc
add
dec
push
ja
mov
jnp
adc
stos
cli
mov
jnp
push
mov
jg
xchg
push
sahf
jno
xchg
mov
adc
in
cmp
mov
in
or
gs
push
test
sbb
mov
add
jge
addr16
add
push
int3
or
loopne
dec
jl
add
push
push
pop
lcall
and
mov
loopne
not
and
in
add
gs
jae
mov
cmp
sahf
pop
inc
leave
in
or
fwait
ret
or
scas
es
daa
cmp
mov
sbb
ja
dec
out
out
mov
std
inc
inc
add
xchg
pusha
add
push
push
xor
sbb
rorb
dec
push
enter
fsubr
sarl
or
aas
dec
fldl
mov
xchg
ret
xor
stc
mov
push
sbb
rolb
dec
jle
aaa
cltd
mov
sub
add
pushf
pop
dec
lods
lods
ss
mov
xorl
add
pop
mov
imul
fimull
cs
xchg
notb
gs
jno
jbe
icebp
push
push
add
call
add
cmpsb
cmc
push
leave
push
jmp
imul
ss
inc
lods
cmpsl
pop
adc
or
pop
arpl
out
mov
inc
add
xor
psubb
add
insl
jb
scas
dec
fs
inc
dec
and
cwtl
mov
dec
xchg
dec
xchg
mov
clc
nop
cli
sbb
cwtl
mov
into
fxch
inc
add
mov
bound
inc
pop
ret
out
jp
lods
shrb
mov
int
adc
addb
add
add
out
and
hlt
fldt
roll
add
loop,pn
fs
ds
out
push
mov
adc
decl
and
movsl
lock
popf
mov
call
aad
cmp
mov
cmp
por
out
popf
jns
stos
xchg
adc
imul
mov
movsb
inc
xchg
cmp
xrelease
jb
shlb
mov
adc
scas
sub
jmp
lods
fistl
fwait
and
sbb
mov
outsl
mov
pop
enter
out
pop
jne
scas
mov
insl
in
and
jb
lock
add
mov
push
add
mov
xor
shll
inc
pop
mov
mov
rcrl
int
mov
mov
xchg
inc
pop
leave
xchg
push
push
in
enter
ja
bound
adc
aas
cmp
cwtl
jb
in
insb
xor
add
sub
adc
fcoms
adc
or
and
pop
stos
call
mov
movl
into
dec
mov
jg,pt
fidivrs
ret
dec
in
xor
dec
jo
dec
jnp
add
in
loope
pop
inc
add
mov
mov
int3
aas
hlt
mov
loop
movb
addb
push
jb
scas
fcmovb
add
lahf
xor
cmp
jp
push
add
insl
push
xor
pop
cs
mov
sbb
jns
inc
add
jle
nop
addb
pop
ror
fistps
mov
xor
add
scas
and
insb
dec
jns
cwtl
aam
sbb
add
pop
filds
add
scas
xchg
add
cwtl
ret
ret
pop
add
dec
fisubl
push
gs
jne
fwait
jno
lock
mov
push
mov
cmp
cwtl
clc
push
dec
push
dec
mov
push
lock
dec
std
sub
mov
clc
xchg
out
incb
push
xchg
fnsave
adc
fldl
pop
das
cmp
dec
sbb
lcall
add
fsubl
add
pop
lods
push
filds
add
mov
sub
inc
add
cwtl
rorb
jecxz
pop
xor
aam
push
add
je
repnz
sti
mov
mov
icebp
arpl
movsb
fs
outsb
int3
or
lea
sbbl
cli
js
mov
push
dec
cmpsb
incb
add
add
mov
call
add
js
add
pop
out
xchg
jg
add
xchg
or
add
inc
add
outsl
xor
jne
sub
add
add
cmp
mov
imul
or
addr16
inc
and
xchg
je
xchg
mov
rcl
mov
outsb
push
mov
sbb
add
fldl
in
and
sarl
in
rolb
xchg
lods
adc
lock
push
mov
push
cmp
fdivrp
loop
xchg
cmp
addb
mov
enter
shll
hlt
sub
loop
cmp
fmull
dec
mov
repnz
fstp
mov
mov
lret
cmpsb
inc
add
add
add
jmp
or
pop
fisttpll
pop
or
xchg
ret
or
lds
add
faddl
mov
mov
xchg
fsubl
add
loopne
pop
push
aam
insb
add
addb
add
pop
test
repz
fsubrs
sub
sbb
sbb
cltd
add
push
add
add
push
adc
arpl
ljmp
cwtl
ror
mov
push
add
sub
addb
icebp
testb
sub
sbb
fisubs
jg
push
stc
sub
dec
int3
out
xchg
pop
leave
aas
lea
popf
hlt
xchg
aad
sti
mov
mov
cmpsl
or
add
push
bound
out
xchg
imul
jp
cmp
push
shll
std
test
call
mov
and
mov
sub
and
lock
std
ds
and
repnz
dec
mov
or
cmp
insb
pop
aam
ret
add
or
push
clc
imul
sub
cmp
add
popf
jmp
push
fs
les
ret
lock
jne
cmp
or
sub
cmp
std
pop
jns
cmp
push
sbb
fdivrs
cmpsl
mov
mov
mov
mov
hlt
das
and
dec
xchg
mov
dec
test
mov
negb
mov
adc
mov
lret
jp
push
shrl
in
testb
push
stos
rcr
add
test
xchg
cmpsb
mov
lods
icebp
testb
pop
clc
or
jnp
hlt
outsl
inc
mov
jns
sbb
add
test
jo
sbb
lds
jb
pop
or
lret
inc
in
fcmovu
loop
lods
xor
mov
mov
xor
xchg
enter
push
cmp
aam
faddl
dec
add
add
or
lret
les
inc
mov
ds
fmuls
add
sarl
lock
jmp
pop
in
or
sbb
add
pop
mov
add
inc
add
rcr
sbb
scas
daa
movsl
lret
add
sti
jle
test
or
insl
leave
imul
daa
sbb
test
in
xchg
les
leave
cs
decl
or
sub
add
js
call
pop
je
data16
xor
add
cmovne
lock
pop
adc
cmp
out
sbb
mov
adcl
or
or
dec
pop
sbb
rolb
test
lods
push
pop
push
flds
xor
lds
test
pushf
ret
in
inc
add
divl
iret
mov
enter
push
xorl
pop
std
mov
dec
jge
mov
sarl
push
jae
mov
xchg
sbb
lret
mov
je
pop
loop
dec
stos
out
pop
pop
push
leave
or
in
and
stos
inc
addb
and
jge
dec
jecxz
ret
or
xchg
loope
and
imul
imul
cwtl
xchg
add
enter
sub
adc
loopne
daa
inc
add
or
in
ffreep
add
rolb
pop
rolb
push
mov
out
push
bound
xchg
test
roll
mov
testl
repz
bound
jnp
pop
shlb
pop
jns
imul
frstor
jecxz
repnz
aad
add
dec
mov
xchg
inc
and
int
cmp
sub
cmp
and
mov
and
loopne
xchg
in
inc
lahf
mov
lock
lret
out
iret
enter
cmp
add
je
xor
add
test
pop
cwtl
inc
add
aam
dec
dec
jmp
xor
xor
repz
test
xor
movb
nop
dec
in
xor
push
les
mov
xchg
sub
mov
add
adc
dec
jecxz
aaa
xchg
sbb
and
testl
test
mov
repnz
and
cwtl
inc
es
sub
xchg
aas
pop
push
push
or
mov
enter
aam
mov
fsubl
adc
sub
stos
cmp
hlt
pop
adc
pop
lock
pop
jns
int3
scas
mov
pop
adc
sub
rorl
shlb
mov
dec
inc
lahf
repz
push
dec
add
or
add
movsb
pop
mov
sub
pop
or
sub
inc
add
cld
dec
pop
mov
test
into
jae
sub
nop
lods
dec
or
dec
mov
inc
and
cmp
sbb
inc
inc
pop
inc
add
repnz
push
aas
cmp
inc
lcall
js
mov
sbb
pop
and
xor
xor
add
fstpt
cmp
and
jno
aas
dec
sub
jg
je
fsubl
pop
bound
fucomi
sub
sub
lahf
std
fildl
add
push
sarb
int
mov
dec
mov
xor
push
mov
cmp
xor
sbb
cmpsb
cld
push
int3
inc
je
rolb
jae
jo
inc
add
out
loope
in
addb
mov
sub
leave
lret
xlat
sbb
sub
js
mov
pop
sub
inc
add
push
mov
ljmp
les
aas
test
xchg
pop
out
add
dec
das
clc
stc
shr
sbb
add
bound
fistpll
dec
dec
push
mov
dec
xor
push
repnz
rcll
loop
nop
dec
in
jo
lods
loope
add
xor
xchg
ljmp
sbb
dec
jne
cmp
ja
aaa
inc
mov
movsb
add
cs
push
pop
dec
rcr
inc
add
xlat
int3
push
sbb
xchg
movl
and
add
mov
rolb
sbb
adc
gs
in
add
fidivrl
aas
dec
jp
mov
fisttpl
loopne
and
pop
scas
mov
dec
testb
fsubl
test
pusha
add
jns
movsl
imul
sti
fmull
jno
mov
bound
push
pop
rcrb
mov
in
outsb
or
bound
mov
es
clc
addb
add
addb
dec
loop
xchg
lcall
ror
adc
cltd
dec
rolb
pop
cmp
sbb
inc
add
repnz
push
daa
ret
pop
mov
add
inc
mov
enter
xchg
repnz
inc
pop
insb
xor
addb
add
rolb
incl
add
xchg
fsub
testl
push
call
pop
imul
stos
sbb
mov
mov
unpckhps
mov
ss
popa
push
lret
push
xchg
dec
testb
dec
je
ret
movsb
or
mov
dec
cmpsb
out
bound
lods
ljmp
lds
loope
mov
into
gs
clc
mov
pop
add
les
outsw
push
das
xchg
test
outsl
xchg
dec
gs
call
mov
add
cmp
pop
add
dec
test
jl
aam
testl
dec
sti
ss
ret
movsb
cltd
int
dec
xor
addb
je
add
movsb
movsb
aam
mov
add
cwtl
jnp
cmp
xchg
lahf
adc
jns
push
sub
add
inc
add
mov
pusha
add
add
push
int
adc
xor
or
stos
push
scas
pushf
pop
sub
xor
xchg
shll
inc
fcompl
cwtl
dec
ja
in
mov
jnp
jmp
loopne
push
jecxz
xchg
or
add
jmp
or
pusha
add
test
mov
out
mov
cmpsb
mov
test
add
xchg
sbb
mov
pop
push
xor
jecxz
pop
clc
jecxz
add
push
pushf
inc
add
pop
mov
rolb
add
push
cmc
adc
popa
cmp
pop
mov
push
stos
jae
add
push
addr16
fstpl
mov
jno
stos
xchg
popa
inc
add
dec
dec
xchg
mov
jmp
enter
and
or
hlt
pop
pop
into
cmp
fidivrs
mov
xchg
adc
insb
push
pop
inc
cld
mov
inc
fcomi
scas
jge
push
jp
pusha
add
sbb
dec
dec
pop
leave
cmp
push
adc
push
mov
fs
fstl
fldl
or
add
pop
mov
rolb
mov
movsb
or
out
shrl
mov
loopne
movsb
loope
dec
lock
add
in
jmp
fiaddl
and
fmul
mov
loop
clc
movb
cmc
xlat
xchg
fcmove
ficoml
repnz
fiadds
into
adc
insl
dec
adc
insb
js
xor
xor
adc
mov
add
in
fnstenv
mov
aaa
pop
sbb
pop
push
aas
mov
sti
dec
dec
jecxz
add
mov
bound
dec
ds
xchg
lods
cmc
mov
mov
in
roll
mulb
rolb
add
scas
sbb
mov
sub
addb
xchg
lods
cmp
lret
sbb
sbb
pop
pop
cli
pop
fidivrl
pop
fs
add
in
fcoms
pop
push
lds
xorl
aaa
ja
pop
lret
gs
mov
mov
test
imul
imul
test
push
add
sti
xor
pop
add
and
iret
jne
leave
test
jbe
add
mov
inc
add
jle
and
or
and
cmp
addb
testb
or
arpl
lret
mov
outsl
inc
pop
or
mov
and
xlat
into
mov
cmc
addr16
es
cltd
xchg
sub
add
jge
dec
mov
popf
shll
or
mov
push
in
push
adc
ret
pop
add
call
add
jge
mov
enter
xor
mov
mov
fiadds
adc
add
lea
addr16
pop
inc
xor
or
fnstenv
push
fnstcw
mov
cltd
loope,pt
push
lods
imul
sahf
adc
push
rolb
add
pop
clc
lock
icebp
xchg
dec
jecxz
mov
hlt
iret
into
xor
fildll
pop
dec
negl
bound
out
jo
add
jmp
add
add
mov
jl
add
inc
fldcw
xchg
and
cli
push
das
inc
addb
cmp
cmp
xchg
cmpsl
movsb
cmc
xor
jl
add
leave
out
add
dec
adc
cmp
jb
je
add
push
lods
dec
lock
sbb
sub
and
aaa
movsb
fstps
fcmove
fld
add
scas
push
test
dec
stos
aaa
jl
icebp
mov
add
mov
mov
or
jb
cmp
xlat
pop
mov
or
xchg
shrb
arpl
in
pusha
add
imul
sub
pushf
call
sbb
sbb
xchg
pop
adc
repz
add
test
rolb
in
fldcw
xchg
add
cmpsb
jbe
fs
add
inc
lods
xor
loope
ja
clc
loope
sbb
les
std
stos
int3
jno
das
rolb
push
add
mov
call
fucomip
fcoms
jg
outsl
xchg
cmp
lret
sub
pop
pop
hlt
loopne
sub
mov
sub
inc
lock
cmp
xchg
pushf
cmpsl
arpl
stos
sub
inc
in
jb
testb
mov
cmp
pop
jb
addb
inc
inc
rcll
hlt
data16
adc
hlt
mov
out
xchg
mov
sarl
test
add
in
rcll
pop
addb
add
aaa
inc
add
mov
div
mov
jne
mov
sbb
xlat
jge
sbb
icebp
inc
ret
add
add
adc
in
mov
pop
dec
mov
xchg
xor
mov
imulb
pop
adc
push
push
into
jle
in
jmp
addl
out
xchg
jb
movsl
jge
mov
adcl
mov
int
shrl
inc
outsb
test
jle
sahf
ret
int3
add
test
add
test
mov
push
pop
mov
jo
or
xor
mov
popa
pop
mov
sub
xchg
mov
ss
add
and
insl
addb
adc
push
mov
jb
dec
in
cmc
js
test
sbb
push
xchg
xor
lret
cmpsb
mov
iret
in
cs
les
xor
dec
cmp
out
lea
and
jne
xchg
insl
test
xor
outsb
and
scas
sub
add
jg
push
jle
cmpsl
lods
mov
fnstenv
out
jo
add
test
clc
bnd
loope
movsb
fucomp
stc
or
xchg
xlat
jg
xchg
hlt
mov
add
cmp
push
imul
mov
mov
mov
fildl
in
sbb
add
test
pop
jecxz
or
and
in
divb
jns
shl
pop
cld
push
outsl
btrl
std
call
mov
addb
aam
cs
lret
jl
aas
or
insl
and
dec
jp
cmc
mov
test
sub
je
add
adc
add
int
iret
xchg
sbb
dec
fwait
or
and
out
sub
dec
jnp
dec
icebp
mov
icebp
push
mov
int3
cmpsb
roll
cmp
fildll
dec
push
insl
sbb
xchg
pushf
test
lret
lds
push
sbb
and
lds
pop
lods
mov
add
test
cmp
add
incb
daa
out
enter
outsl
adc
push
add
cmp
addb
jbe
xorl
xor
popa
shrl
add
push
cs
sub
jmp
popf
sti
fmulp
inc
add
sbb
add
daa
mov
iret
dec
pop
mov
lea
scas
ss
nop
jb
push
xchg
cmp
shlb
rolb
add
mov
std
sti
sub
jo
popf
or
pusha
add
mov
sbb
add
jecxz
sbbl
adc
push
add
jmp
sahf
push
add
out
bswap
or
add
enter
andl
aam
xor
shlb
movsl
fadds
add
adc
and
mov
add
jecxz
or
aas
aaa
add
pop
adc
lock
add
mov
add
lock
lahf
lret
lea
adc
mov
sub
int3
xchg
es
int
adc
push
push
cmc
das
push
push
add
loop
mov
test
sub
fnop
and
sub
dec
lock
mov
xor
sub
sarl
stc
cmp
ja
enter
arpl
pop
mov
repz
sbb
push
in
sbb
lea
mov
dec
ljmp
jae
add
aaa
lock
lods
add
xchg
add
jb
cmpsb
or
cmpsl
imul
cmp
and
sub
or
adc
scas
dec
mov
cmp
push
push
iret
nop
sub
and
fsubrs
add
sub
or
imul
xchg
loop
addb
lcall
cmp
mov
mov
shrb
jge
sub
inc
add
jns
rorb
gs
loop
xor
adc
mov
mov
xchg
aaa
aam
repnz
mov
jbe
jg
inc
jae
je
lds
dec
fldl
lret
xor
dec
mov
push
add
fs
imul
inc
xchg
sub
ljmp
sarl
rolb
add
mov
inc
xor
icebp
in
jbe
add
in
neg
and
in
and
and
or
cmp
pop
stc
add
pushf
mov
in
test
jbe
aam
add
push
jecxz
add
inc
add
lret
mov
or
pop
xor
fwait
sub
dec
sub
jmp
inc
in
lea
or
addb
lahf
repnz
jge
push
pop
imul
das
scas
mov
dec
mov
fmul
xchg
or
add
push
pop
jno
or
push
mov
inc
jecxz
xor
sbb
pop
sti
xchg
aad
int3
pop
adc
test
or
and
xchg
sbb
push
cltd
add
add
mov
push
push
in
fidivs
fcomip
je
outsb
shrl
xlat
mov
cwtl
fimull
push
add
les
jne
test
mov
lods
jecxz
sbb
mov
add
iret
jl
ljmp
aam
add
pop
daa
repz
out
mov
movsb
inc
sarb
mov
push
fists
mov
push
xor
or
repnz
in
repz
in
and
mov
cmpsb
push
inc
addb
dec
std
test
add
xchg
push
xchg
fs
addr16
jb
push
add
push
xchg
ljmp
add
cmpsb
cmpsl
mov
fs
mov
adc
outsb
faddl
negl
pop
add
pop
rcll
add
pop
dec
dec
push
adc
cmp
fs
add
lahf
decb
sbb
add
add
sbb
pusha
add
and
inc
add
cmpsl
outsb
pusha
add
jns
add
and
mov
and
fwait
jp
jmp
xchg
dec
addb
jmp
icebp
roll
mov
mov
loope
inc
add
xchg
mov
ja
loope
mov
jno
jno
dec
push
mov
test
add
sub
xchg
popa
push
lahf
insb
sbb
add
cmp
inc
add
or
cmpsb
jmp
imul
push
lock
pop
call
imul
clc
lock
cmp
out
inc
and
inc
add
into
pop
add
scas
jnp
cs
push
in
pushf
test
inc
rcl
loop
call
into
daa
movsl
in
jp
pop
pop
adc
arpl
jmp
pushl
call
push
inc
add
daa
aad
add
dec
adc
aad
addb
pop
addl
loop
imul
and
jns
jl
mov
fidivrs
ds
sub
and
mov
xor
shl
adc
xchg
shl
add
sub
fxch
ss
pop
in
sub
sahf
fs
lds
icebp
pop
jp
mov
jl
movb
iret
addr16
repnz
out
mov
daa
push
rolb
movsb
jecxz
bound
sub
or
cld
mov
cmp
rcr
mov
sti
rcl
cmp
loope
jnp
mov
and
xchg
mov
imul
inc
jl
je
pusha
add
nop
out
pop
mov
jecxz
adc
fnsave
mov
int3
repz
cmp
add
xchg
pop
adc
mov
mov
dec
mov
and
sbb
lds
fidivl
cs
cmpsl
pop
orl
pop
int
pusha
add
pop
das
dec
mov
lods
xchg
in
xor
pop
mov
mov
mov
aad
lahf
add
sbb
js
push
adc
hlt
popf
mov
icebp
mov
aas
enter
dec
mov
inc
clc
pop
pushf
addb
iret
insl
idivb
jmp
dec
enter
mov
lcall
mov
ds
aaa
and
addb
jno
mov
jno
cs
mov
aad
call
mov
movl
je
aam
adc
int
add
mov
inc
add
and
ftst
mov
jo
or
sbb
sbbl
xchg
xor
push
xchg
adc
inc
pushf
sub
fildll
andl
add
mov
sbb
les
fadds
add
stos
pop
mov
loope
mov
add
test
push
je
inc
and
and
call
pop
xor
cmp
dec
test
popa
stos
test
push
adc
je
insl
aad
xor
loope
add
lret
aam
mov
insb
dec
cli
jecxz
cltd
mov
js
hlt
fdivs
push
pop
fs
in
jbe
in
push
add
ljmp
mov
push
xlat
cmc
das
dec
call
jnp
fwait
push
lcall
ljmp
jno
push
pop
hlt
repz
jp
cwtl
mov
into
out
pop
out
ja
dec
addb
out
int
scas
rclb
sbb
xor
cs
add
xlat
pop
icebp
add
mov
cltd
std
lcall
sub
mov
aas
lret
enter
xchg
cmpsb
aas
ret
into
js
int
lea
sbb
insb
xchg
into
sbb
arpl
add
xor
popf
pushf
push
push
fidivl
mov
popf
inc
xchg
sub
push
testb
or
data16
xor
xor
and
or
cmp
push
rolb
stc
mov
addr16
call
scas
dec
mov
shll
mov
dec
js
cmp
sub
sub
jno
dec
cmp
jb
pop
arpl
cmp
xchg
push
push
das
movsl
mov
insl
repz
aad
jecxz
mov
mov
xchg
insb
mov
out
fwait
push
mov
cmp
loopne
xor
xchg
inc
add
divb
ret
dec
mov
xor
int
pop
lods
shl
jbe
test
ja
xchg
ret
adc
out
add
or
jmp
mov
cwtl
inc
scas
cmp
jecxz
push
mov
inc
add
push
lods
dec
loop
insb
push
inc
add
jne
bound
push
jg
das
mov
inc
add
popf
addb
popa
ret
fidivrs
xor
loopne
mov
shrb
leave
mov
fstpl
cmp
in
pop
or
fadds
push
test
call
scas
mov
cs
cld
jno
add
and
and
cmp
cmp
je
nop
or
mov
sbb
in
addl
outsl
xchg
adc
pop
sbb
xor
xchg
xchg
push
and
nop
sti
shll
xchg
xchg
scas
aam
cmp
leave
mov
sub
loopne
mov
mov
negl
mov
pop
jbe
sub
xor
test
sub
mov
add
shll
js
test
xchg
cmp
daa
out
jmp
xor
fiaddl
out
aas
dec
cmp
cmp
jecxz
jae
loopne
jne
in
sub
hlt
ds
mov
inc
add
out
push
cmp
stos
mov
data16
xor
imul
dec
push
movsl
ljmp
add
inc
or
add
cwtl
or
add
addr16
xorl
les
test
idivl
fcomps
dec
and
ficomps
xchg
int
cmc
repnz
add
jle
add
cmpsb
movb
sub
sbb
fnstcw
rep
les
jmp
das
cmp
inc
jo
xor
xlat
and
das
jb
add
lds
sub
inc
dec
iret
xchg
mov
les
js
sub
or
push
repnz
sahf
popf
push
addb
mov
aad
cmpsb
fs
or
xchg
inc
add
lds
sarb
fists
inc
add
pusha
add
fs
shll
mov
into
leave
pop
mov
popf
adc
pop
sub
cld
sub
add
fsubrs
cs
lock
push
mov
add
mov
sbb
xor
push
icebp
jmp
add
xor
sub
loopne
les
push
add
add
xchg
pusha
add
mov
loopne
cld
je
mov
cwtl
adc
icebp
mov
sbb
sbb
mov
sub
dec
dec
jle
daa
lea
inc
add
xchg
add
and
adc
or
lock
pop
lods
push
and
xor
jle
xchg
cmpl
jb
pop
popa
mov
or
shll
popa
or
mov
pop
ja
cmc
lods
jp
adc
fnstsw
jbe
clc
movsb
adc
cmc
xor
dec
pop
xor
adc
sbbl
ss
iret
sub
jbe
lods
jo
insb
fwait
cli
add
pop
into
stos
xchg
mov
mov
clc
test
xor
loop
push
xor
push
imul
mov
adc
std
inc
add
jae
inc
sarl
dec
xchg
xchg
lret
push
ret
in
mov
jne
mov
stc
adc
add
xchg
pop
sub
test
sbb
sbb
ret
jae
push
mov
daa
cwtl
aas
repnz
cs
mov
mov
xchg
scas
rep
int3
xor
enter
gs
dec
test
mov
js
or
ret
mov
push
out
mov
andl
pop
mov
repnz
sub
sbb
sahf
addb
jg
mov
dec
xchg
addb
int3
mul
xchg
fistps
sub
dec
dec
call
stos
test
add
leave
sub
mov
add
sub
pushf
add
mov
out
sub
loope
or
jp
sti
rcrl
push
pop
pop
outsb
add
movb
mov
sbb
xchg
addb
lock
dec
add
idiv
pop
arpl
add
jmp
xchg
or
push
adc
loop
je
cs
test
in
nop
inc
dec
and
sti
scas
mov
ljmp
add
jg
pop
push
add
jg
out
add
xor
out
dec
ja
lret
or
dec
cli
cltd
sbb
nop
addb
mov
pop
scas
cwtl
outsl
xor
and
popf
pop
cmp
lods
out
push
stc
jne,pt
add
inc
add
fstpl
gs
push
ja
call
jb
adc
jnp
sahf
jno
mov
aad
loope
stc
lcall
xor
add
inc
pop
out
push
cmc
cmp
push
movsb
sarl
call
std
mov
cld
mov
jne
jge
call
sbb
stos
test
push
push
xor
inc
add
test
xlat
cli
mov
add
jae
adc
add
xor
mov
cmp
arpl
scas
in
arpl
sbb
push
in
aam
fisttpll
xor
mov
mov
js
and
call
mov
and
mov
cwtl
cld
adc
arpl
outsl
clc
pop
inc
and
daa
repz
jo
add
add
lock
into
mov
icebp
jp
cld
addb
fwait
jne
adc
cwtl
icebp
push
adc
mov
inc
push
test
jg
adc
jno
int3
jp
fists
mov
mov
jnp
push
pop
xor
add
je
add
cmpsb
dec
pop
push
rcll
xor
pop
mov
push
mov
push
xor
pusha
add
loopnew
jbe
stos
jl
ljmp
push
inc
imul
icebp
sub
adc
adc
in
xor
into
add
sahf
sub
cmp
xchg
imul
outsl
and
add
cmp
mov
add
scas
add
clc
push
or
sub
aad
pusha
add
jmp
adc
pusha
add
mov
arpl
movsb
outsb
into
movsb
clc
stc
cmpsl
into
cmpsb
das
inc
add
xchg
sbb
sahf
jle
push
xchg
jne
iret
test
cmp
add
lcall
lahf
pop
lret
add
add
mov
lods
repnz
xlat
sbb
dec
pop
psubq
sub
add
call
jbe
xchg
inc
and
fcmovnu
test
sub
push
cmc
out
ret
sub
sub
call
pusha
add
out
dec
jo
sbb
adc
jmp
jns
dec
mov
inc
add
scas
inc
add
jmp
sbb
jg
je
pop
or
add
stos
push
mov
jl
scas
jns
pop
cmp
popf
inc
in
push
add
stc
mov
jecxz
sub
add
pop
pusha
add
fisttpll
push
loope
sbb
jnp
daa
outsb
xchg
leave
imul
jp
or
mov
mov
shl
mov
or
pop
sbb
repz
add
test
out
pop
xchg
arpl
jp
imul
daa
sbb
das
loop
jg
in
in
inc
add
in
jg
xor
std
addb
sbb
mov
fidivl
daa
xor
movb
sbb
add
scas
xchg
jmp
loop
mov
push
xor
jmp
outsb
cmp
dec
jle
and
add
and
xlat
xor
pop
and
sti
cmp
lret
mov
out
pop
sti
pop
roll
add
adc
pop
imulb
scas
cltd
adc
jne
lea
add
pop
sub
push
dec
cwtl
push
repnz
sbb
bound
outsl
pop
add
loop
loop
shlb
imul
inc
outsl
rol
add
and
jmp
mov
push
mov
mov
pop
mov
jb
iret
lds
hlt
push
mulb
mov
xchg
cmc
stos
stos
fistps
mov
xor
mov
mov
bound
sbb
sahf
fldcw
and
call
mov
cld
add
mov
cwtl
pop
insb
in
dec
xchg
leave
inc
add
pop
shrl
shll
and
movb
pop
andl
add
fldl
loop
push
lcall
add
mul
jp
or
add
jae
sti
les
stc
or
fidivl
clc
adc
mov
cmp
fisttps
pop
hlt
das
dec
push
xor
jo
test
out
pop
cwtl
mov
cs
lret
jmp
or
jbe
filds
jno
jo
xor
gs
icebp
jmp
lret
pop
cmpl
int3
addr16
xchg
pop
and
pusha
add
push
lea
movsl
cmp
mov
add
std
fildll
lods
insl
mov
add
addb
lds
insb
xchg
andl
inc
mov
add
loop
outsl
mov
mov
adc
cmp
loope
cs
jl
push
push
jl
iret
arpl
push
int
push
and
push
xor
scas
test
cwtl
push
cmpsl
fwait
dec
lahf
jge
inc
add
addb
loop
add
xor
imul
test
adc
mov
outsl
aam
callw
aam
mov
fs
shlb
add
fwait
mov
xchg
mov
arpl
mov
ret
mov
fisubrl
out
insl
or
out
fdivl
ja
rorl
cmpsb
stos
xchg
repz
mov
jno
push
mov
adc
xchg
sbb
rcll
cwtl
mov
push
and
loop
jns
add
pop
arpl
out
dec
sub
pop
popa
xor
add
and
pop
popf
cmp
testb
adc
std
xor
sti
mov
sub
mov
and
mov
outsb
mov
add
pop
imul
sub
jecxz
std
cs
and
mov
jecxz
inc
pop
rclb
stos
les
aas
jle
pop
jp
sbb
mov
sahf
push
mov
sbb
cwtl
loop
pop
and
in
aas
sub
mov
icebp
adc
sub
loopne
push
xchg
pop
push
add
pop
mov
mov
add
mul
sub
add
xor
shl
push
add
push
mov
loopne
outsb
outsb
gs
inc
xor
ffreep
arpl
stos
cmp
dec
push
idivb
nop
addb
sbb
jge
or
dec
inc
add
and
and
or
sbb
inc
add
jge
ja
mov
int
std
or
push
cmp
add
fstpl
dec
lods
jns
inc
sub
jge
fldenv
ljmp
mov
push
pop
push
cmpsl
pop
loopne
insl
aaa
cmp
sub
ds
pop
aad
dec
outsl
jno
dec
xor
push
pop
add
mov
mov
sti
xchg
mov
fcompl
and
xlat
pusha
add
pop
aam
mov
mov
add
inc
add
lods
sti
fimull
dec
xchg
pop
arpl
ret
clc
mov
movb
jb
pop
sub
cmp
int
sub
xchg
lret
imul
sub
xchg
adc
push
movsb
sub
insl
xchg
ss
mov
dec
xor
addb
jge
inc
in
mov
inc
xor
ds
mov
imul
mov
movsl
mov
mov
add
test
push
sub
sbb
xor
je
mov
imul
cmp
and
lods
mov
sub
mov
adc
ljmp
xchg
xchg
sbb
push
push
stc
mov
add
and
cltd
movsb
xor
jo
and
mov
aaa
lods
or
push
adc
add
jns
mov
inc
add
jge
lock
ret
dec
int
sub
add
push
aam
das
clc
clc
mov
loop
nop
mov
dec
sub
add
inc
mov
fs
sti
xchg
xor
mov
push
sub
xor
call
loopne
out
add
sbb
data16
mov
adc
add
fst
ds
mov
dec
insl
push
mov
test
stc
ja
aam
sahf
and
jg
out
outsb
sbb
add
inc
lods
pop
cmc
mov
xchg
xchg
cmpsb
xor
cltd
push
int
add
sub
add
inc
jns
jmp
add
push
add
push
jge
add
test
test
xor
or
fsubrs
rcll
les
rcl
je
fistps
addb
or
push
movsb
decl
mov
xchg
clc
fimuls
mov
ds
outsl
loope
add
add
add
leave
jp
dec
inc
add
loop
sbb
mov
or
or
add
push
dec
out
dec
inc
add
xorl
lahf
push
adc
jb
mov
push
add
cmp
pushf
repz
add
add
lds
rorb
sbb
mov
add
outsl
jns
push
inc
add
insl
adc
pop
mov
popa
and
xchg
cltd
jbe
adc
or
inc
aam
inc
add
shll
call
mov
sbb
pop
xor
nop
adc
sbb
pop
dec
mov
rolb
sbb
dec
aas
addr16
push
dec
mov
mov
ret
inc
adc
jns
rep
scas
fmull
pop
pop
mov
sub
xor
and
out
cmp
add
stos
aad
pop
and
or
jmp
add
add
add
add
lea
les
inc
lds
shll
add
cmp
in
jecxz
dec
jge
fs
add
pop
testl
mov
mov
mov
xchg
jo
fucomi
scas
add
lret
jbe
movsb
cmpl
pop
popa
sti
into
test
sub
add
xchg
jmp
xchg
inc
add
lcall
mov
ret
mov
loope
pop
xor
xchg
icebp
fistps
rolb
mov
xchg
in
inc
mov
xor
mov
xor
lahf
int
sbbl
add
mov
lock
addb
sub
mov
xchg
cmpsb
jmp
pop
sub
cmpsb
and
mov
sbb
stc
enter
addb
ret
imul
sub
or
xor
addb
enter
pop
inc
add
cs
es
and
add
xlat
xor
mov
or
fprem
jne
pop
jae
gs
push
mov
fcomps
stos
les
sbb
cmpsb
fsubs
in
mov
popa
mov
loopne
fcoml
decb
into
bound
in
add
mov
xchg
addl
stos
repnz
add
ljmp
jge
jp
dec
adc
push
mov
xor
mov
clc
inc
jmp
out
cmp
movsl
pop
pop
fistl
mov
mov
add
nop
mov
add
cwtl
movsb
mov
add
mov
lea
add
aaa
movsl
or
and
jnp
sarb
popf
sbb
add
lods
jle
dec
aad
mov
mov
mov
mov
mov
in
mov
jae
loop
imul
mov
adc
lea
cwtl
repz
out
inc
add
mov
add
xchg
mov
push
xchg
dec
jne
int
push
ljmp
sub
push
jmp
repnz
pusha
add
rolb
addb
xchg
cli
pushf
sbb
jmp
inc
movsl
int3
outsl
jg
leave
mulb
mov
xor
pop
sub
test
in
jbe
je
and
dec
push
mov
inc
xchg
xlat
adc
sub
ret
cmp
add
lds
arpl
in
shlb
ja
push
lods
test
push
stos
aaa
pusha
add
cld
fs
pushf
sub
push
jecxz
mov
rolb
add
fucomip
push
imul
lea
add
and
add
insl
insb
lahf
pop
inc
add
xchg
daa
sub
add
fisubrs
jns
dec
pop
jae
add
cmp
popl
sbb
adc
insl
dec
aas
or
xchg
and
push
lods
pop
dec
pop
xor
loop
push
xchg
xlat
daa
cmp
lds
loope
dec
mov
test
lds
mov
sarl
sub
aad
addb
nop
adc
xchg
push
add
add
sbb
or
push
and
mov
add
cltd
mov
fists
sub
xchg
test
mov
add
cld
popa
cmp
stos
cmpsb
int3
fs
jne
sub
call
nop
sbb
jle
cmp
mov
fisubrl
cmc
gs
jb
int3
dec
addb
dec
fstpt
mov
sub
cld
ficoml
fisubrl
std
or
es
push
mov
adc
js
mov
mov
clc
popf
push
xchg
sub
mov
xchg
add
sbb
imul
ja
jnp
aad
test
sbb
jmp
pop
jo
dec
test
dec
dec
sub
pop
ret
stos
cs
fwait
add
iret
lds
or
pop
aaa
jmp
jo
inc
test
dec
push
add
mov
and
adc
repz
push
add
add
add
daa
jns
and
push
test
insb
fadds
cmp
adc
xchg
xor
mov
xchg
daa
sub
inc
xchg
mov
jge
nop
enter
inc
add
lock
add
daa
test
es
mov
xchg
push
xchg
in
sub
pop
bound
add
pop
and
into
ss
cmp
pop
test
dec
jns
xor
add
lock
xor
adc
mov
js
add
add
lea
insl
mov
xor
into
dec
js
cmp
aad
in
mov
arpl
cmp
out
shlb
ljmp
push
push
jae
loopne
dec
and
mov
pop
dec
dec
pop
add
insl
push
inc
mov
scas
push
fimull
add
jne
mov
lds
xlat
cmp
add
aad
aaa
push
pop
dec
into
addl
repz
pop
inc
out
jae
pop
stc
mov
add
fnsave
dec
ds
push
xor
lods
lahf
jbe
leave
push
mov
adc
ja
cmp
jnp
out
push
fadds
xor
sbb
cltd
loope
jb
mov
add
cmp
leave
stos
loopne
add
add
into
lods
imul
outsl
cld
pop
popf
out
mov
add
jmp
loope
out
popf
sahf
jns
mov
or
cs
into
test
daa
lock
pop
pop
lret
cmp
and
lock
das
sub
imul
jg
mov
xchg
testb
and
addb
pop
push
lcall
adc
jns
into
cmp
or
cmc
in
ret
or
jecxz
int
aas
jbe
or
inc
add
add
fnstsw
pop
sbb
xor
lcall
int
ret
js
add
add
rorl
fwait
outsl
loope
je
test
sub
je
test
pop
nop
pop
scas
mov
pop
adc
aaa
outsl
fsub
lcall
sbb
add
rolb
iret
push
add
xchg
push
lds
scas
sarl
movsl
out
mov
outsl
dec
cmp
rorl
clc
adc
add
fisttps
ljmp
scas
lods
mov
jl
mov
ja
aam
inc
outsb
xor
cld
fistps
adc
ss
lds
sub
addr16
popf
in
sub
out
nop
cwtl
cmp
sub
cmpsb
xchg
clc
push
repz
add
and
outsl
xchg
jmp
out
ss
fdivs
push
add
outsl
in
or
rcr
les
not
cltd
idiv
or
test
je
and
jns
push
bound
sbb
xchg
mov
leave
popf
push
rolb
loop
sub
add
fmul
out
les
mov
fs
imul
scas
inc
add
pop
mov
xor
repz
sub
add
lds
fldln2
shr
or
sub
rclb
imul
add
dec
hlt
repz
inc
add
add
test
inc
sar
xchg
jle
movb
xchg
and
imul
rolb
add
sub
ss
mov
mov
fistpll
pusha
add
dec
aad
xchg
adc
add
push
sarl
outsb
scas
adc
adc
xor
mov
out
add
syscall
add
loope
mov
aam
dec
mulb
cmpsb
imul
sti
arpl
arpl
arpl
call
sbb
pop
cmp
xchg
scas
inc
add
loopne
cltd
jne
call
dec
cld
cmp
or
xchg
fs
dec
cmp
popfw
xor
pop
inc
add
aam
addb
cmpsb
gs
idivb
fdivrs
in
mov
clc
cmp
mov
inc
add
jb
fbld
xchg
mov
pop
jo
aam
sub
scas
lret
rcll
pop
lds
into
and
filds
test
in
std
arpl
aam
sbb
fisttpl
sub
fisubrs
xor
lock
push
sbb
in
popf
js
add
cmp
loopne
insb
adc
call
jnp
cwtl
movb
push
add
add
popa
push
mov
lahf
enter
push
int
cmc
mov
mov
test
dec
dec
pop
pushf
add
mov
cld
arpl
push
repnz
movsl
pop
mov
add
int
aas
lea
dec
in
sbb
or
add
jb
add
sahf
mov
repz
xchg
adc
add
fbld
mov
add
adc
xor
inc
add
test
out
inc
add
idiv
leave
xor
int
in
aam
mov
addr16
mov
mov
ds
std
in
imul
mov
dec
cwtl
push
cmpsb
lods
adc
dec
popa
or
fs
idivb
mov
adc
mov
xchg
aaa
pop
ja
push
movsb
xor
mov
xchg
or
scas
je
mov
xlat
into
std
jnp
inc
add
shlb
add
shr
mov
insb
icebp
aas
pop
push
pop
into
mulb
add
das
jmp
clc
jmp
add
sub
mov
adc
mov
jo
scas
push
xchg
lea
xchg
push
scas
fisubrl
add
add
dec
jbe
movsb
mov
sub
add
movsb
adc
jne
mov
sub
lahf
mov
pop
ret
cmp
pop
out
mov
rcrl
mov
mov
call
in
popf
adc
ljmp
jno
out
clc
aam
inc
add
sub
mov
mov
cs
pmulhw
push
scas
mov
or
mov
je
xchg
scas
sbb
dec
pushf
fbld
and
cs
adc
cmp
or
add
pop
nop
fiadds
lock
inc
dec
stos
loop
hlt
cwtl
clc
scas
bswap
pop
xor
sbbl
dec
out
rcll
push
pop
mov
loopne
adc
pop
mov
jae
xchg
and
outsl
and
cmp
adc
jae
dec
push
add
out
fstpl
sbb
mov
lds
sub
mov
sub
adc
cli
mov
cmpl
mov
int3
cmp
rcr
pusha
add
jne
mov
pop
shrl
sub
mov
add
mov
xchg
mov
jo
rolb
negb
push
push
fistps
adc
xor
or
dec
cmp
enter
mov
roll
add
mov
js
sub
push
pop
pop
pop
lret
arpl
adc
mov
mov
movb
mov
mov
jae
lea
push
sub
push
pushf
push
add
rolb
insl
lods
xchg
pop
call
push
push
cs
rolb
push
out
imul
insl
add
push
loopne
jl
fldt
daa
out
push
movsl
jbe
idivb
push
aaa
bound
or
imul
dec
jmp
addb
jns
dec
in
dec
les
jnp
movsl
push
bound
into
sbb
popf
frstor
cmp
rolb
xorl
jmp
addb
push
add
inc
imulb
add
pop
jo
add
out
mov
add
sti
jns
jnp
sub
pop
xlat
enter
sbb
jg
pop
cli
inc
loope,pt
mov
mov
and
push
movsb
push
pop
scas
fwait
lods
stos
jmp
mov
add
stos
je
push
add
movsl
xchg
lahf
lea
mov
bound
divl
ficompl
dec
ljmp
test
adc
or
fistpll
adc
das
aam
das
jne
nop
jnp
xchg
adc
sbb
jmp
add
xor
xchg
cmpsl
call
add
xor
dec
shrl
popf
jmp
mov
add
lahf
ss
mov
icebp
test
add
adc
movsb
or
loop
sub
add
add
dec
call
mov
lock
sub
fisubl
add
jbe
add
pop
adc
add
shr
fucom
sub
pop
cmp
mov
add
cld
push
jge
mov
xor
repz
mov
dec
sub
fstl
arpl
add
inc
add
in
dec
cmp
fwait
addb
sbb
or
add
and
leave
mov
sbbl
add
mov
pop
pop
sti
inc
add
inc
add
jns
cmpsl
mov
and
xor
popa
rorl
pop
out
mov
imul
inc
add
pop
mov
call
in
or
push
adc
mov
mov
pusha
add
xchg
xor
cmp
jp
repz
push
jne
mov
xor
leave
and
call
lcall
sbb
or
scas
fists
loop
mov
in
xchg
lds
les
mov
xchg
rorl
rcrl
ljmp
xchg
xor
adc
jl
loop
add
jp
sbb
adc
out
js
lret
int
sbb
jge
and
xor
fdivrp
push
jae
sbb
mov
push
popf
xchg
pop
jb
push
xor
cld
and
clc
mov
sub
adc
cmp
popl
push
cld
je
lret
add
stc
mov
fnstcw
sbb
les
mov
scas
jbe
push
adc
mov
pop
xor
stos
ret
dec
out
adcl
add
pushl
pushf
rcrb
ss
dec
mov
mov
xchg
sahf
push
or
add
add
stos
ret
push
mov
addb
sahf
adc
or
push
lods
mov
add
add
mov
fists
addb
inc
repz
xbegin
push
sbb
pop
test
stc
jg
add
pop
xchg
lods
std
push
out
or
inc
add
mov
cmp
jge
arpl
add
add
cmpsl
ret
aas
or
xor
pop
push
cwtl
cmpsl
les
push
pop
pop
rolb
outsl
hlt
pushf
inc
add
adc
mov
mov
leave
jns
fists
jb
les
stos
sbb
or
push
js
out
pop
filds
sub
add
jns
iret
in
xor
inc
add
ret
sbb
lcall
fisubrs
fsubrs
pop
std
les
sbb
movsl
cmp
imull
xchg
sub
push
jb
jne
add
xor
sbb
movsl
lock
inc
xchg
add
shl
mov
xor
loope
push
jl
add
fistpl
in
sahf
xchg
mov
jecxz
dec
add
jg
xchg
mov
movb
dec
hlt
jns
iret
ret
sub
mov
jbe
aas
leave
add
add
mov
mov
bound
push
das
ficomps
inc
add
fsubrl
in
test
add
das
fwait
adc
mov
test
cld
cmpsb
cmp
add
adc
movsb
movsl
lock
movsl
dec
inc
add
call
sub
or
mull
mov
shlb
mov
pop
rcll
add
es
popf
mov
jge
inc
sbb
popf
or
jbe
mov
jl
fsubp
xchg
or
jns
xchg
inc
add
sbb
fdivr
fiaddl
or
sub
cmp
push
sbb
daa
mov
mov
adc
pop
cmp
stos
sti
dec
pop
cs
add
mov
popa
mov
pop
mov
popf
cmp
jp
aam
jae
repnz
or
test
pusha
add
cwtl
mov
mov
sub
ss
inc
add
xlat
loopne
add
sub
arpl
xchg
sbb
cmp
push
js
add
test
mov
add
lahf
mov
inc
pop
bnd
push
hlt
add
sbb
or
into
xchg
lods
cmp
xchg
jns
sub
aad
lods
daa
jmp
inc
add
movsb
ret
xor
xorl
and
push
idiv
and
push
dec
pop
popa
int3
outsb
ss
les
jmp
iret
inc
add
or
rol
sub
clc
pushl
lea
add
dec
popf
push
mov
aad
loope
cmp
add
adc
push
movsl
insb
lock
iret
dec
stos
jmp
push
packuswb
es
lods
addr16
arpl
jp
repnz
jns
in
dec
xchg
cmp
ja
fistps
sub
fsubp
jecxz
stc
mov
rclb
jle
stc
outsl
bound
addb
lds
lret
cmp
add
inc
add
in
inc
fwait
sbb
mov
dec
stos
pop
cmpsb
xor
push
ja
push
into
fwait
rcll
scas
mov
jno
add
inc
add
xchg
adcl
add
xchg
aaa
int3
and
mov
in
lret
scas
ret
pop
xor
out
lret
inc
insb
mov
cmc
leave
arpl
mov
pop
sub
sbb
fcmovnu
sbb
jp
mov
ds
mov
inc
out
inc
xchg
clc
or
ljmp
sub
ds
arpl
jl
popa
lock
movsl
cmp
insb
enter
repnz
mov
xchg
and
push
pop
into
push
sbb
ffreep
rolb
cltd
lahf
and
push
cmp
data16
addl
mov
pop
mov
ret
dec
or
xor
mov
sbb
es
je
sub
add
loop
mov
pop
repnz
add
jae
pop
inc
xor
in
outsb
mov
xor
sbb
jl
or
mov
xor
add
add
lret
fs
xchg
in
subl
pop
lock
xchg
dec
rcr
mov
scas
push
stos
mov
jae
movsl
popf
loope
sub
push
dec
sub
add
and
icebp
sbb
fcmovbe
jg
cmp
jg
shll
dec
xor
ja
cltd
sbb
aad
out
aad
dec
cwtl
xor
cmp
adc
ljmp
xchg
sbb
pop
mov
pop
popf
pop
xlat
push
push
cmp
jmp
inc
add
aad
pop
add
push
fwait
sub
and
dec
mov
mov
add
jae
fidivs
jge
fs
pop
int3
popa
pushf
test
push
inc
add
dec
loop
ret
arpl
addb
jae
bound
roll
in
pop
sbb
fldcw
jecxz
sbb
add
pop
pop
pop
nop
addb
add
daa
jle
in
ds
jo
xorl
add
sub
dec
fildll
shl
xchg
into
stos
cmpsl
jge
imul
sbb
rolb
xor
xor
inc
add
xor
cmp
mov
xchg
loopne
int3
hlt
insb
lahf
xlat
clc
xchg
in
pop
mov
xchg
je
or
add
movb
clc
push
and
std
add
aas
cmova
int3
jmp
mov
call
decb
out
fsubrp
push
sahf
xor
add
mov
mov
mov
cmp
ja,pn
mov
cmp
test
jg
loope
add
jb
inc
imul
add
movsb
sbb
xchg
mov
add
lea
cld
fwait
mov
adc
add
add
arpl
xchg
pop
lods
pop
inc
ror
jb
pop
loopne
popf
mov
test
push
aad
jnp
lahf
inc
add
cmc
daa
xchg
cwtl
loope
fistl
mov
add
addb
inc
add
into
xchg
imul
jg
mov
push
daa
xor
xlat
sbb
mov
inc
add
cltd
out
sbb
mov
jae
add
adc
addb
mov
rolb
sti
xor
add
or
fisubrl
ljmp
and
insb
push
push
mov
jge
inc
add
lods
adc
add
fsubl
jmp
xor
sbb
out
add
pusha
add
addb
dec
pop
mov
lock
add
lret
addr16
dec
inc
add
cmp
and
jl
lret
mov
ud1
out
fsubp
mov
neg
jne
add
shr
inc
add
add
cmpsl
xor
int
cmp
mov
insb
pop
pop
add
jmp
xchg
mov
mov
stc
and
adc
les
inc
add
dec
inc
ror
out
das
jle
and
add
sub
out
mov
jnp
jae
fs
lahf
arpl
xor
push
mov
sti
push
sub
into
cmp
or
ret
sub
jnp
test
sarl
rorl
push
roll
popf
cmp
jae
and
and
push
add
xchg
inc
add
std
jle
test
or
dec
jecxz
fisttps
pop
lods
jge
jae
shr
cli
push
xchg
jno
popa
sti
xchg
xchg
test
mov
fstl
sub
stos
inc
add
pop
jg
ss
addb
movb
inc
lods
rolb
repz
mov
out
mov
add
lea
add
xchg
stc
inc
pop
data16
adc
add
pop
int3
adc
lcall
dec
test
in
loop
popa
push
ljmp
xchg
push
push
rolb
dec
lods
and
push
and
in
dec
sub
outsb
mov
add
call
into
repz
aad
scas
mov
or
movsb
dec
and
test
imul
movb
jp
jmp
xor
bnd
aas
fwait
mov
mov
sub
cmpsb
or
test
js
sub
mov
cmp
lods
imul
rolb
sbb
mov
and
sbb
add
pop
xor
mov
test
out
jge
or
lea
ds
nop
sbb
mov
ss
test
add
in
mov
mov
cmpsb
push
add
add
iret
into
test
add
cmpsb
and
movb
dec
sar
imul
cltd
enter
insb
outsl
cmc
dec
popf
fwait
xor
cld
inc
add
les
enter
mov
icebp
shl
jb
mov
std
dec
inc
add
cmc
inc
fldl
add
or
aaa
stos
loopne
into
lret
cmpsl
sub
dec
mov
iret
pop
stos
jl
add
add
enter
sub
mov
inc
mov
in
add
loope
inc
adc
add
mov
xchg
cmpsb
xor
cmc
xor
jnp
mov
pop
sbb
pop
test
add
add
into
jg
movsl
adc
movb
aad
xor
jge
movsb
lahf
std
les
push
pop
popf
repnz
outsl
pop
repz
sbb
mov
and
pop
mov
cmp
fimull
out
mov
std
or
int
sub
ret
cmc
pop
push
xchg
test
daa
dec
lahf
lcall
imul
je
dec
ds
repz
mov
dec
aad
notl
cmpsb
jnp
jge
add
xor
xor
and
xlat
and
cmp
lods
mov
test
cltd
and
sbb
sbb
jnp
and
into
push
xchg
jnp
add
testb
cmpsb
popf
xchg
xor
in
pop
pop
fs
or
sarl
push
push
cltd
movsb
sbb
lcall
aas
addb
mov
jecxz
hlt
push
dec
ljmp
pop
xor
lea
xor
mov
pop
dec
xor
mov
pusha
add
cs
dec
aaa
or
ret
shlb
mov
cmp
mov
add
ret
or
cs
mov
movsl
push
jl
jbe
popf
and
into
loopne
pushf
out
dec
loop
add
add
pop
mov
xor
mov
push
xor
mov
xor
shl
or
or
jbe
xor
jae
addr16
imul
aad
pop
sub
dec
push
test
add
xor
dec
push
mov
push
add
in
popf
std
ja
mov
mov
sbbl
and
roll
int
xor
add
arpl
nop
xor
inc
add
sbb
push
insb
lret
cmp
loop
mov
lret
mov
jmp
outsb
or
sbb
dec
fistpll
in
push
adc
mov
in
out
jnp
mov
sub
pop
dec
loope
mov
xor
in
jo
icebp
mov
sbb
pop
adc
fdivs
popf
mov
idivl
push
mov
out
movsl
aas
out
pop
addb
mov
lock
movb
push
add
dec
pop
pop
les
lods
sbb
sub
add
cs
add
jne
popa
adc
ljmp
fidivrs
je
xchg
imul
es
jecxz
sahf
mov
jns
fsubs
add
add
jae,pn
lods
outsb
or
mov
mov
sti
arpl
adc
arpl
cli
aas
push
fisubrl
jle
adc
movsb
into
dec
adc
dec
add
add
cmpsl
add
das
add
in
int3
ret
push
mov
sbb
sbb
xchg
cli
movsl
addb
cmp
sbb
add
jg
idivl
add
inc
clc
insl
sbb
xchg
mov
filds
push
push
xchg
rcl
mov
xor
push
mov
jno
pop
jne
pop
nop
fisttpll
les
into
aaa
insb
and
add
fmull
xchg
in
arpl
lret
movb
or
rolb
or
fcompl
fincstp
jecxz
cmp
aam
rolb
cs
test
add
fldt
jg
add
jecxz
outsl
jnp
jbe
cmp
mov
test
out
incb
sti
jbe
ljmp
jnp
and
stc
scas
mov
xchg
mov
mov
ret
jg
push
add
ds
jns
push
movsb
mov
in
int
mov
xchg
insl
test
xor
and
or
add
outsl
enter
mov
sbb
cmp
pop
inc
add
mov
jae
mov
loopne
sbb
scas
lret
bnd
add
repz
clc
loope
rcll
add
sbb
inc
pop
inc
add
lds
mov
ret
aad
mov
je
ficoml
addb
cmp
mov
dec
pop
sub
dec
mov
and
add
daa
mov
aam
out
push
inc
add
test
test
movb
push
fcmovnb
test
lods
aas
imul
addr16
jno
xor
sub
cld
dec
das
push
push
jno
outsl
xor
dec
xchg
xchg
xchg
jge
mov
add
dec
lock
jp
sbb
repnz
xchg
inc
xor
xor
inc
cld
and
aad
loop
add
clc
pop
cltd
push
pusha
add
ret
inc
add
pop
adc
in
into
and
out
sbb
adc
add
adc
pop
pop
fwait
sbb
xor
mov
cmp
add
sbb
scas
lods
xor
jmp
xchg
hlt
hlt
imul
or
push
fwait
xchg
adc
addr16
hlt
shll
shl
push
ret
adc
pop
in
or
sbb
inc
add
lcall
pop
pop
daa
es
fwait
mov
jmp
push
xchg
pop
mov
sahf
mov
imulb
out
mov
pop
cmp
or
inc
sbb
add
int
add
mov
in
jecxz
mov
push
into
call
sbb
movsb
dec
mov
adc
mov
mov
inc
add
jne
pop
rcrl
sarl
sub
das
pushf
cmp
ret
in
lret
ret
es
stos
testl
fdivrs
inc
pop
add
mov
ret
rolb
xchg
fwait
jnp
dec
pop
mov
aas
pop
sub
repnz
cpuid
cmc
pop
fs
cmp
mov
add
mov
cli
inc
add
lds
incb
cld
scas
cs
repz
popf
jge
movb
out
out
insb
adc
xchg
in
push
lods
ret
aam
mov
fildl
lods
imul
add
popf
stos
mov
inc
add
add
addb
sti
addb
add
dec
insb
mov
mov
movb
xchg
bound
sbbl
popf
stc
add
add
push
das
jmp
sub
cmp
add
add
dec
fld
and
aas
outsl
xchg
adc
daa
movb
jg
cmpsb
push
cmp
shll
ret
rolb
xchg
addb
push
pop
nop
jae
addb
jb
dec
mov
das
and
mov
daa
inc
add
cmpsl
sbb
add
cmpl
xchg
push
shlb
addb
push
rcll
lret
or
shlb
addb
and
fmull
mov
fldenv
add
lock
sub
mov
ret
call
test
mov
mov
repnz
cli
scas
push
mov
mov
popf
xchg
push
cmpsb
jp
jg
adc
xor
mov
inc
add
mov
loop
or
jne
cmp
xchg
inc
add
pop
test
out
cmp
adc
ss
xchg
mov
push
push
fcomip
adc
add
xor
sub
and
movsb
addb
inc
testb
lock
stc
jae
push
fs
cmp
in
dec
sbb
cs
add
and
fstpt
sub
add
out
dec
fldl
inc
add
sarl
mov
mov
bound
mov
sbb
sbb
out
inc
test
enter
das
push
fimull
pop
scas
stos
lret
repnz
xchg
arpl
out
pop
jge
pop
push
add
sub
mov
jmp
rolb
add
push
mov
pop
int
add
xchg
push
or
stos
bound
loopne
in
repz
cmc
push
ss
fcompl
stc
or
push
mov
xchg
pop
mov
ret
push
push
cmp
add
stos
lcall
pop
rorb
aaa
and
iret
test
cmp
cmp
imull
pop
xchg
imul
shrb
xor
and
rol
mov
nop
add
pop
sub
push
adc
or
xchg
loope
test
push
dec
pop
data16
cld
rcr
ret
xor
adc
frndint
jl
lds
add
pop
test
addb
mov
imul
mov
jb
xor
inc
mov
add
mov
jge
xchg
cwtl
imulb
movb
add
add
dec
push
cmc
mov
adc
daa
insb
dec
pop
pop
sbb
cmp
mov
jne
out
hlt
mov
xchg
adc
insb
push
ret
dec
push
xchg
add
sahf
cmp
add
add
jne
push
pushf
mov
jno
adc
mov
add
je
adc
inc
cmp
xor
pop
ss
jno
pop
sbb
negl
or
je
les
addr16
int3
in
mov
mov
loop
add
iret
pushl
add
popf
pop
jecxz
popf
int
repz
mov
jae
adc
lcall
out
cmp
aam
add
sbb
adc
xchg
sbb
dec
data16
popf
inc
add
icebp
mov
or
add
xchg
test
insb
mov
sbb
sbb
push
nop
sub
ret
adc
sub
aad
add
sbb
xlat
cmp
add
ss
mov
es
cmc
movsl
imul
loop
mov
sbb
decl
mov
js
mov
add
fwait
xchg
adc
out
std
cmp
into
cmc
mov
push
xor
outsl
or
inc
adc
cs
add
aaa
cmp
add
sbb
fcmovb
add
sbb
pop
pop
adc
fcomp
rcl
sahf
add
inc
add
jg
sbb
and
cmpl
test
mov
jmp
push
dec
insl
pop
daa
mov
into
bound
pop
roll
outsb
xchg
push
sub
push
mov
les
lods
inc
sbb
mov
xor
push
inc
mov
in
in
dec
cltd
popa
ss
inc
add
fsubrs
add
in
push
leave
cs
mov
xchg
cmp
popa
ret
mov
xlat
xchg
out
aam
sbb
mov
jmp
in
jle
lea
repz
sbb
das
mov
jb
mov
dec
pop
ds
addb
inc
add
and
sar
ds
sub
jne
xchg
arpl
das
addb
rcrl
and
pop
adc
pop
iret
movsl
lcall
ljmp
add
call
or
aaa
js
outsb
sbb
test
and
fwait
inc
add
or
daa
je
int
loope
inc
popa
dec
das
mov
stos
adc
cli
loopne
add
jbe
xchg
pop
or
adc
dec
push
ret
imul
xor
lahf
inc
add
add
ret
mov
lahf
cli
stos
sbb
add
mov
int
mov
lcall
stos
pop
or
cmpl
mov
cmp
or
outsl
mov
pop
xchg
adc
add
dec
cld
cmpl
and
xor
mov
push
stos
outsb
sbb
aas
enter
jo
in
movb
nop
or
adc
scas
pop
xlat
xor
movsb
sub
das
movsl
in
fs
sub
icebp
xlat
dec
movb
sub
and
out
test
mov
sbb
xchg
xor
add
inc
add
test
repnz
das
fcomi
int3
cmp
mov
rcr
add
out
test
add
addb
js
dec
lock
sbb
out
lahf
outsl
aam
aam
out
cltd
push
push
jno
add
imul
adc
cmp
cld
add
xor
push
mov
ret
adc
ret
jo
fmull
pop
xor
aam
out
add
pop
or
jl
outsb
jae
lahf
shrb
addb
add
lds
dec
pop
fistpl
repz
dec
push
mov
cmc
push
add
push
inc
add
pop
sbb
dec
adc
xchg
in
and
mov
lods
dec
arpl
testb
jae
add
daa
call
push
lods
lahf
movb
push
dec
scas
add
and
aas
in
sub
inc
add
sti
cmp
mov
insb
adc
add
xchg
test
mov
imul
add
sbb
xlat
rcl
mov
xchg
gs
cmp
rcll
push
jl
xor
add
mov
jbe
outsl
clc
mov
xor
sub
test
pop
add
cmp
out
out
shll
mov
xor
push
in
lret
popf
and
cmp
add
popf
enter
inc
fisttpll
call
add
add
int3
sbb
sub
outsb
stos
jno
add
dec
clc
adc
add
enter
int
xor
in
adc
mov
fs
js
xchg
dec
add
rclb
sarb
mov
mov
add
add
add
jne
mov
dec
inc
test
cmp
out
fnstenv
or
mov
adc
add
jp
push
idivb
decb
movsb
push
mov
add
dec
movsl
mul
push
add
clc
call
xor
test
inc
sub
es
sub
in
add
je
je
scas
or
add
adc
mov
xchg
adc
add
add
pop
inc
jge
lods
scas
ds
inc
add
cmp
fstps
cmp
push
mov
add
add
in
imul
int
add
jl
arpl
add
fcompl
mov
cld
xor
mov
xor
mov
sbb
mov
cmp
add
pop
movsb
xchg
ficoms
mov
insl
adc
lret
and
add
insb
xor
ss
sub
jl
lods
sbb
add
pop
pop
dec
inc
add
push
xchg
enter
push
sub
cld
or
jg
mov
xlat
mov
mov
rcl
fisttpll
es
fisttps
ljmp
xor
xor
pop
dec
cmpsl
lret
outsl
dec
outsb
jmp
mov
push
jne
jae
sub
hlt
mov
rep
pop
mov
xchg
sbbl
inc
add
movsl
test
lret
int
stos
repz
aaa
jp
fadd
inc
test
xchg
imul
inc
or
std
adc
lret
enter
xor
add
fwait
xlat
xor
xor
dec
lds
add
inc
inc
push
add
jb
fnsave
loopne
dec
add
mov
xor
fadd
iret
pop
ss
stc
or
cmp
imull
aas
xor
mov
xchg
adc
fisttpll
test
or
adc
and
dec
add
js
jge
das
insl
icebp
xchg
imul
add
pop
push
or
std
push
jge
cmp
outsb
sub
and
pop
dec
xor
jg
cmc
loope
add
in
int
pop
push
push
inc
add
add
cmp
fisubrl
dec
mov
scas
data16
aad
pop
pop
mov
and
add
out
push
jb
pop
or
lods
sti
push
out
mov
add
or
hlt
mov
lret
lret
stos
loope
and
cmp
pop
repnz
xor
mov
clc
mov
add
and
add
add
mov
add
xchg
mov
loop
mov
add
mov
jae
pop
xchg
push
scas
out
mov
ljmp
add
mov
imulb
lea
ljmp
mov
movsb
fcoms
xor
inc
add
imul
jmp
xchg
sti
add
lock
aaa
js
add
imul
jno
mov
add
pushw
push
aad
fsub
xchg
faddl
push
inc
add
adc
jp
sarl
jg
sbb
xor
mov
aas
inc
add
mov
movsb
inc
xchg
jnp
gs
enter
jae
pop
or
pushf
cmp
push
add
test
out
mov
xchg
sub
in
testl
add
fisubs
mov
pop
sub
add
adc
clc
cmp
xchg
sbb
or
insl
dec
lea
pushf
test
sub
cmpsb
test
nop
mov
lcall
out
cmp
lock
out
cld
jmp
neg
lock
and
add
xchg
loop
xor
out
mov
mov
movsl
mov
sbb
iret
in
aam
mov
insl
mov
or
ror
je
add
dec
movb
dec
fmul
mov
add
dec
ret
orl
xchg
inc
iret
xor
shll
fsub
sti
mov
or
pop
fistpl
sub
ja
shrl
mov
adc
nop
imulb
stc
rolb
jae
je
pop
mov
lahf
rcll
stc
movb
jge
loope
jnp
push
addb
jge
mov
push
cmp
movb
ja
jle
and
cld
dec
sarl
mov
lds
gs
out
cmpsl
leave
rcrl
sub
int3
xor
rcrl
fstp
loope
pop
icebp
and
mov
inc
add
or
lds
mov
add
pushf
jle
movb
mov
std
or
fistpl
lock
notb
and
arpl
fldl
mov
fnstcw
xchg
mov
out
bound
push
dec
sub
arpl
sub
add
ds
add
add
repnz
add
add
jb
popf
iret
shlb
add
xchg
push
jbe
into
adc
add
fwait
inc
add
cmp
add
jnp
xlat
iret
aad
into
xor
sbb
pop
mov
push
adc
adc
add
jl
add
and
pusha
add
dec
fwait
pop
test
add
ss
cmp
cs
xchg
inc
dec
stos
xchg
addb
rorb
inc
pop
xchg
sub
rol
add
test
xchg
in
cmp
cmp
add
inc
addb
add
mov
sub
and
inc
adc
sbb
xchg
adc
add
inc
add
insl
pop
rclb
adc
ljmp
push
sub
scas
add
xor
test
imul
out
aaa
fisttps
xchg
ds
test
pop
loopne
add
mov
stos
movsl
xchg
jno
jne
pop
fincstp
stos
ss
mov
sbb
mov
sub
in
mov
push
dec
sahf
mov
aam
test
jecxz
cmp
popa
xchg
dec
xchg
daa
js
cmp
out
shr
ljmp
add
mov
fwait
pop
sub
sbb
imul
adc
inc
add
sbb
add
fsubrs
shrl
loop
imul
add
mov
dec
dec
mov
ds
sub
shrl
pop
pop
clc
dec
cld
lret
cmp
xor
je
sub
jge
cld
notb
cs
fisubl
orl
or
stos
arpl
fwait
les
call
pop
movsl
mov
lcall
test
xchg
loope
mov
add
into
and
je
add
mov
push
pop
movb
das
pop
lea
je
lcall
jg
dec
cmp
aam
mov
push
lock
ret
jae
pop
jle
inc
add
loope
add
add
add
sahf
daa
inc
add
cmpsl
leave
cli
fsubrs
mov
mov
add
xor
jbe
inc
add
add
jg
fs
lahf
es
pop
int3
sbb
scas
addb
pusha
add
rorl
pop
lret
bound
stos
sub
xchg
jg
daa
xchg
add
cmc
pop
and
adc
dec
sbb
pop
cmc
mov
js,pn
and
pop
hlt
cs
push
movb
rep
xor
fistpl
dec
push
lock
push
sbb
outsl
ror
stos
nop
xchg
or
adc
jg
dec
fistl
nop
pop
repnz
xorl
mov
mov
arpl
inc
add
mov
cmp
add
add
mov
addb
lret
adc
add
jnp
stos
sub
ficompl
dec
mov
jne
rolb
push
lea
xchg
cwtl
aam
push
jno
ljmp
adc
loop
xor
inc
add
dec
out
imul
fwait
iret
push
add
or
lods
sub
iret
sahf
lock
ds
inc
jno
mov
insb
mov
add
insl
cmp
loopne
mov
sbb
fisubrs
add
xor
add
leave
out
xor
rolb
in
push
push
lock
jo
lods
andl
jecxz
repz
insl
movsl
pusha
add
stos
clc
rolb
jno
xchg
addr16
add
inc
add
mov
mov
paddsw
jne
push
add
pop
dec
lret
pop
test
xchg
add
mov
inc
xor
pop
aad
les
adc
cmp
cmpsl
xor
gs
rcll
mov
push
int3
and
pop
nop
idivl
pushw
cmp
clc
sbb
fimull
test
es
in
cs
sarl
mov
mov
or
bound
enter
mov
lar
insb
das
sub
jg
test
push
xchg
out
insb
in
leave
mov
inc
add
xchg
insl
push
scas
sub
out
test
fsubr
inc
xchg
jne
jp
adcl
data16
iret
pop
arpl
mov
scas
ljmp
pop
rolb
cmp
and
lcall
clc
inc
add
jnp
test
adc
and
push
inc
xor
mov
addb
sbb
mov
cwtl
test
add
sti
sub
add
add
push
mov
add
mov
cs
xchg
xor
or
clc
jl
jmp
icebp
aam
jns
or
cltd
bnd
repnz
aas
or
mov
fwait
inc
xor
int3
inc
xchg
cltd
pusha
add
cmp
add
dec
add
data16
pop
les
dec
ds
cwtl
imul
xchg
les
dec
xchg
xor
pop
into
aam
jl
test
and
push
das
jns
test
push
sbb
test
xchg
je
repnz
inc
add
push
add
mov
dec
aad
ljmp
mov
pop
rolb
mov
jb
pop
inc
jb
dec
ja
push
add
hlt
std
shrl
lea
mov
stos
cltd
movsb
xor
popl
and
pop
dec
sbb
cmp
jnp
arpl
or
mov
enter
add
add
push
add
pop
in
stc
das
jne
mov
js
dec
mov
or
mov
shlb
xchg
insb
cs
pop
pushf
inc
or
loopne
cmpsl
ja
imul
mov
notb
cmpsb
test
push
dec
xchg
jne
lods
stos
daa
vmovaps
sbb
jecxz
in
lds
sbb
push
lock
jbe
fisttpll
or
mov
rolb
addb
add
and
lods
das
inc
add
dec
push
test
jp
popa
cmp
add
subl
dec
imulb
inc
mov
lahf
sub
sbb
popa
push
mov
ret
clc
loop
xchg
stc
outsl
clc
or
out
mov
xor
sub
dec
test
out
pop
in
movb
dec
sbb
insb
dec
xor
cmc
movl
or
adc
mov
inc
add
add
push
mov
xchg
adc
pop
mov
nop
inc
add
movsl
iret
pop
jecxz
sub
add
push
leave
das
dec
lds
jns
jb
cmp
inc
sarl
test
enter
lcall
sbb
leave
pop
push
cmpsb
dec
jns
cmp
fnstenv
std
in
adc
sti
dec
jbe
jl
pop
sahf
sub
aaa
pop
loopne
mov
dec
jbe
out
int3
clc
mov
ret
inc
add
cwtl
push
xchg
xchg
fstpt
mov
dec
sbb
test
lds
inc
xor
add
mov
adc
pop
cmp
repz
in
roll
mov
iret
dec
js
popa
pop
je
pusha
add
mov
mov
add
mov
fimull
fxch
scas
or
imul
xchg
pushf
xchg
and
test
and
cli
cmc
ds
xchg
jbe
jb
int
cmpsl
inc
add
outsl
mov
or
sbb
dec
inc
add
jge
inc
add
jp
pushf
or
cmp
sbb
arpl
hlt
popa
push
mov
add
dec
xchg
ret
jns
pushl
lods
cmp
xor
cmpsb
fbstp
inc
add
popa
mov
por
test
mov
jl
push
cmp
xchg
xor
push
fwait
mov
push
sub
stos
pusha
add
inc
ss
sti
lcall
dec
lods
imul
sahf
mov
lea
popa
mov
cmp
lods
pop
or
cs
or
cmpsb
in
mov
xchg
mov
fmull
mov
dec
push
cld
mov
movsb
lea
test
movsb
mov
cmp
add
out
pop
stos
dec
incb
add
and
popl
adc
in
pop
enter
es
mov
pop
xchg
xchg
das
jecxz
insl
xor
scas
cli
push
inc
hlt
mov
lock
cmp
mov
push
aas
mov
pop
jns
addb
lret
in
or
lock
aaa
lcall
or
faddl
mov
push
xor
mov
and
notl
movsl
loope
cld
cs
mov
addb
or
pop
test
lds
jmp
jnp
sub
xor
pushf
xchg
inc
add
sub
repnz
int3
scas
enter
add
add
or
lods
lods
rol
mov
dec
lcall
out
xor
push
jb
mov
mov
xor
inc
js
add
dec
nop
inc
sub
mov
adcl
test
add
mov
add
addb
jmp
stos
getsec
sub
cmp
loop
sub
cltd
movsw
mov
out
adc
mov
lds
sub
jo
lock
in
sub
jge
in
jb
sbb
xchg
add
movb
sub
pop
push
and
shrb
add
add
fstps
rep
push
push
js
lret
loope
rolb
and
outsb
jb
mov
mov
xor
inc
stos
stc
cmp
pusha
add
testb
sub
in
dec
push
inc
add
add
orl
cmp
inc
add
imull
cltd
loopne
fs
cmp
pushf
sub
cmp
hlt
std
pop
mov
sub
add
inc
xchg
fcoml
sarb
mov
xor
inc
add
test
scas
dec
fistpll
incb
mov
mov
movb
push
fildl
pop
dec
cmp
leave
gs
add
add
lret
sub
mov
dec
loope
xchg
push
xor
lods
mov
rolb
or
movsl
and
cmp
sub
lea
addb
mov
cmp
add
cmp
in
sbb
add
jmp
data16
mov
push
jmp
test
in
inc
xchg
test
cmp
lahf
stos
stos
pop
sbb
sub
jg
pop
out
fwait
jno
outsb
rolb
icebp
cli
adc
pop
cld
ljmp
mov
test
out
dec
fisttpll
pop
lea
add
push
and
jns
ja
das
das
cmp
and
and
pop
lret
in
sbb
sub
fwait
xchg
sahf
test
xchg
mov
add
and
enter
clc
enter
ja
and
pop
cs
test
inc
or
add
jns
inc
add
decb
pop
pop
sbb
in
jmp
int
daa
inc
add
loopne
pusha
add
dec
cs
cmp
push
adc
mov
insb
xchg
or
add
imul
push
add
pop
mov
dec
ss
xor
mov
out
and
jge
pop
or
adc
add
in
sbb
or
ficompl
pop
not
imul
add
adc
jl
push
xor
push
pop
aas
mov
daa
pusha
add
and
inc
add
add
out
dec
ja
xchg
cwtl
push
xor
adc
fisttpll
pop
xchg
test
les
adc
incl
push
mov
sbb
enter
fstpl
add
jne
pushf
mov
cmc
sbb
jmp
sub
arpl
pop
mov
loope
aaa
inc
bound
ret
mov
faddl
fdiv
jmp
les
add
add
pop
enter
push
in
pusha
add
mov
pop
jmp
movsl
cmp
je
mov
repnz
leave
popa
push
js
cwtl
xchg
stc
mov
sub
popa
sub
pushl
aaa
les
test
stc
movsb
mov
xor
jae
lret
cwtl
mov
in
jg
mov
mov
xchg
xchg
xchg
scas
push
push
andl
stc
lahf
pop
rolb
mov
pop
lods
stc
or
jl
addb
lods
pushf
push
add
shr
lods
nop
addb
cmp
scas
sets
lret
dec
fsubr
mov
scas
addb
mov
imul
stc
inc
cmpsb
xchg
or
in
das
pop
lahf
adc
adc
pop
cmpl
dec
aas
push
add
mov
adc
mov
mov
push
dec
push
mov
dec
rorb
outsb
mov
xchg
or
rcl
inc
add
mov
mov
pushw
mov
jnp
out
xor
repz
lcall
push
add
add
iret
dec
jl
push
add
add
pop
adc
mov
sbb
int3
pop
jecxz
push
fwait
mov
lcall
dec
outsb
push
add
shlb
pop
inc
add
jp
stos
adc
sbb
loopne
inc
mov
hlt
sbb
lahf
clc
fcom
push
cli
dec
cs
adc
test
shll
movsl
inc
add
and
inc
and
add
xchg
adc
add
inc
add
outsl
xchg
dec
les
sbb
cli
jns
add
inc
add
cs
add
jp
into
or
es
mov
out
add
adc
lret
add
sbb
mov
fistl
in
dec
imul
add
sti
ds
es
rolb
xchg
jl
push
inc
add
jg
cmpsb
pop
stc
and
outsl
idivl
mov
sub
mov
add
push
add
aaa
movb
mov
fildll
sub
iret
and
in
inc
add
jb
sub
lahf
sub
inc
add
sub
addb
jecxz
and
adc
mov
jb
int
jmp
xchg
rorb
ret
inc
add
mov
or
pop
pop
inc
mov
adc
inc
push
adc
adc
mov
scas
popa
jg
gs
iret
les
gs
push
daa
daa
push
add
in
ret
call
mov
and
sub
daa
jp
pop
xor
sbb
push
lods
push
loopne
aad
dec
add
push
dec
jo
pop
cmp
cmp
xchg
pop
xchg
outsb
jne
or
mov
sbb
mov
inc
outsl
pop
jb
xor
movsb
mov
pop
cwtl
fldcw
and
pop
mov
aaa
or
add
leave
pop
icebp
sbb
jb
add
and
fimuls
movsl
shrl
shl
insb
pop
mov
adc
and
call
push
add
adc
pop
xchg
mov
add
add
add
mov
leave
imul
mov
insb
mov
shrl
xlat
dec
mov
cld
daa
pushf
fbstp
add
dec
xchg
popf
mov
xor
pop
xlat
mov
sbb
adc
add
inc
add
int
lods
test
add
setl
mov
adc
loopne
movl
gs
mov
add
mov
mov
sbb
iret
mov
add
xlat
lds
imul
xchg
xchg
scas
lret
mov
and
ret
inc
add
sbbl
jo
bound
xor
add
enter
lahf
xchg
adc
scas
lock
pusha
add
add
mov
test
push
pop
mov
ja
cmpsl
lahf
sahf
in
dec
or
fidivs
sbb
add
sbb
xchg
mov
dec
and
push
cli
shrl
xor
aas
movb
test
xchg
fmull
add
lock
add
imul
inc
scas
stos
icebp
sbb
insl
pushf
mov
fstl
sub
movb
test
les
cltd
lods
ss
rol
jge
andl
inc
add
clc
in
or
lods
rcr
int3
mov
add
jns
jmp
sub
fdivrs
repz
add
mov
pop
mov
fcmovbe
pop
addb
jae
je
test
xchg
or
out
mov
push
add
test
mov
push
xchg
mov
push
enter
xchg
jle
xor
cmp
cmp
ja
es
jns
cli
pop
jg
movsb
dec
ss
pop
mov
test
negb
aaa
std
pop
adc
xlat
sbb
dec
lret
xchg
into
fldenv
in
cmpsb
loop
xlat
fs
in
dec
inc
add
ret
pusha
add
test
hlt
insl
les
in
aad
inc
add
add
js
ljmp
add
add
ret
mov
mov
or
adc
fwait
out
mov
pop
add
jbe
lret
fistpll
dec
aad
addl
cmpsb
mov
mov
push
imul
mov
cwtl
insl
jnp
aad
add
add
cmpsb
xor
inc
add
pop
sbb
outsb
push
and
dec
ja
add
adc
push
mov
pop
pop
inc
lods
mov
scas
bound
inc
add
repz
xchg
pop
cmp
push
jb
sub
and
add
cli
dec
mov
mov
push
dec
pop
mov
add
jmp
aam
jle
adc
xchg
test
pop
mov
sti
cmp
xor
mov
test
lahf
lret
out
xchg
stos
outsl
dec
dec
adc
push
loop
xchg
loop
les
ret
enter
in
jl
dec
fstl
mov
popf
out
aad
daa
inc
add
pop
lahf
mov
push
pusha
add
aad
push
sahf
fwait
mov
fstpt
mov
int3
in
push
popf
sbb
dec
and
rcl
or
add
nopl
inc
add
clc
cwtl
insb
imull
clc
inc
add
push
mov
adc
aam
mov
leave
push
add
mov
adc
and
std
or
mov
out
hlt
mov
outsb
xchg
or
cmpsl
lahf
movsl
sub
popa
push
jne
sahf
push
mov
cmpsb
xorl
mov
xor
cli
mov
jbe
lock
testl
adc
push
movb
add
add
aaa
arpl
frstor
stos
std
mov
test
add
cli
push
addb
mov
jbe
cli
jns
pop
jae
adc
jl
loope
in
jmp
jle
cmp
mov
insl
out
or
add
add
sti
mov
out
mov
test
bound
jecxz
es
jg
cmp
inc
add
xchg
dec
nop
mov
sti
daa
sub
add
cmp
cltd
cmp
imul
lret
sahf
cmpsb
sbb
test
jno
leave
inc
add
jmp
bound
syscall
inc
add
lods
aam
jmp
int3
cmp
repz
xchg
xchg
fs
insb
jecxz
movb
lret
xchg
jbe
rcl
jp
lock
push
js
inc
add
nop
test
and
jne
scas
inc
add
je
fldt
xchg
std
pop
xlat
push
or
add
data16
adc
mov
or
jl
mulb
xchg
push
jecxz
add
and
adc
aas
mov
and
enter
inc
fiadds
add
out
mov
nopl
in
sbbl
aaa
push
mov
mov
mov
add
mov
jns
add
out
inc
xlat
in
sti
dec
cmp
add
movl
sbb
jns
inc
mov
mov
movb
out
addb
push
add
mov
movsl
dec
jg
xor
cmpl
xor
test
stos
fsubr
les
in
lods
leave
ljmp
lsl
xchg
sub
mov
mov
jge
sub
pusha
add
lock
jb
xchg
push
in
or
into
sbb
inc
out
int
pop
or
sahf
rcrl
mov
movsl
pusha
add
xchg
add
addb
or
or
add
je
add
xor
adc
inc
add
in
nop
loop
push
mov
loopne
lahf
movsl
dec
rcr
push
popa
test
cmp
push
sub
xchg
mov
mov
adc
add
fwait
cmc
je,pt
mov
mov
lcall
enter
sbb
add
sub
add
into
bound
mov
es
jp
add
pop
std
xor
push
add
cmp
sub
ret
add
lods
pop
dec
or
sarl
ljmp
push
fmul
addb
lock
out
adc
rolb
adc
ss
filds
shll
mov
cwtl
cltd
mov
sbb
loope,pn
rcll
sub
inc
sbb
outsb
test
fcoms
add
mov
loopne
xlat
pop
rolb
daa
vhsubpd
mov
imul
les
pop
sbb
arpl
test
or
lret
into
jb
gs
std
and
inc
mov
negb
push
push
adc
mov
jge
leave
popa
xchg
inc
add
stc
and
lds
shlb
and
cmp
ljmp
mov
cmp
sub
add
cld
mov
mov
jg
popf
faddl
mov
dec
lahf
sbb
add
jno
push
ret
jge
cmpsl
repnz
or
int
inc
jb
cmpsb
inc
pushf
fadds
enter
ficomps
data16
cmp
mov
cltd
xor
in
add
rorb
push
jae
mov
addb
rcrl
pop
inc
add
xor
sbb
xor
cld
mov
add
test
xor
dec
rorb
jle
or
lahf
out
clc
dec
insl
adc
mov
add
and
push
dec
mov
pop
jp
add
xor
add
mov
push
cmc
je
cmp
sbb
add
mov
push
dec
mov
add
push
xchg
aaa
xchg
lret
aad
in
mov
daa
xor
test
xchg
fstps
xor
rolb
fdivrs
lods
mov
add
adc
add
hlt
and
cmp
add
mov
dec
fildll
hlt
scas
cmp
test
int3
mov
mov
xor
fsubrl
sub
or
or
jbe
insb
iret
jecxz
movb
into
mov
cltd
bound
push
pop
or
adc
mov
inc
add
mov
loop
lret
jl
sub
cld
bound
daa
fisttpl
dec
jg
bnd
mov
and
jno
shlb
es
or
lea
xchg
adc
sti
adc
inc
add
push
outsb
pop
mov
inc
add
repnz
mov
xchg
clc
jne
sub
pop
push
and
cmp
cmpsl
fnstenv
sbb
add
mov
daa
dec
movsl
mov
push
mov
clc
mov
lahf
test
iret
js
sarl
pushf
push
call
push
ret
out
push
test
lea
push
ret
jmp
mov
xor
add
repnz
xchg
pop
or
cs
mov
xor
aam
add
mov
pop
ret
sub
out
jno
add
lret
out
les
jo
addb
enter
sub
add
push
repz
movb
jg
addr16
add
movsl
je
addb
fcmovnb
add
pop
add
cmp
ds
add
fstps
xor
and
cmp
add
lods
mov
in
mov
movsb
xchg
mov
pop
lret
rorb
ret
sbb
leave
cmpsl
shrl
sbb
add
or
inc
cmp
and
outsl
lret
mov
lret
jnp
xor
clc
xchg
aas
in
dec
xor
pop
pushf
xchg
daa
pushf
sbb
in
shll
inc
add
push
fwait
jb
sti
xor
push
es
adc
repz
loop
xchg
in
pop
testl
insl
inc
enter
sub
xor
jle
in
add
add
aaa
pusha
add
pop
add
clc
outsb
testl
cmc
lods
jbe
lea
mov
pop
dec
popf
inc
sbb
mov
add
jb
cmp
jbe
aad
push
imul
dec
shll
sub
mov
xchg
cmp
add
stos
scas
daa
xor
mov
xorl
mov
push
cs
test
aam
stos
popf
sub
and
ja
add
push
fstl
adc
enter
jl
add
clc
fidivrs
xchg
lods
push
pushf
push
movd
sti
push
scas
lods
pop
jnp
add
test
cmp
adcl
xchg
mov
xchg
ret
in
inc
or
icebp
outsb
je
add
xchg
xchg
test
sub
addb
add
pop
aam
in
add
cmp
lahf
push
stos
mov
mov
xchg
jns
mov
sarl
mov
add
add
cmp
sbb
sbb
mov
imul
or
mov
scas
xlat
out
out
cmpsl
sbb
cld
nop
outsb
leave
xchg
ja
dec
imul
faddl
ret
adc
outsl
bound
pop
mov
dec
or
ds
jp
jl
jl
sub
js
mov
sbb
pop
enter
aas
addb
xchg
fwait
stc
mov
jp
jmp
add
mov
stos
rorl
sbb
and
lret
or
stc
outsb
pop
sub
add
jnp
push
sub
jge
pop
mov
ljmp
pop
lret
mov
push
adc
test
adc
movsb
sbb
out
add
movsl
leave
inc
add
scas
out
mov
and
ss
add
sbb
cld
sub
add
jne
add
xchg
imul
mov
pop
and
xchg
xchg
jge
xchg
repnz
or
push
dec
jmp
lea
xchg
push
pushl
mov
loop
mov
mov
addr16
inc
das
clc
setbe
pusha
add
fstps
popa
cmpsl
dec
sti
mov
scas
cltd
cmpsb
inc
add
in
cwtl
cltd
idivl
dec
lret
jecxz
and
and
je
shll
movb
mov
je
lcall
xchg
lcall
add
add
xor
mov
mov
lods
rclb
jbe
mov
das
les
sbb
sub
add
movb
xchg
es
mov
jno
mov
scas
xchg
push
addb
aam
sub
add
popa
clc
pusha
add
add
addl
leave
sub
xchg
mov
push
add
adc
mov
clc
rolb
add
pop
mov
cs
mov
and
lahf
jno
jae
dec
icebp
cmc
nopl
es
pop
cmp
push
add
pop
mov
movsl
scas
bound
sbb
cmp
lods
fstl
fsubs
jns
cmpsl
or
cmp
cmc
out
shrl
jbe
mov
mov
xor
jo
into
lea
popl
xchg
jl
inc
add
sub
xor
jae
mov
push
push
iret
push
sbb
es
add
idivl
les
int
adc
add
xchg
jl
xchg
adc
loope
rcll
cmp
mov
std
xor
mov
xchg
mov
clc
cmpsb
popa
mov
cmpsb
push
dec
pop
mov
add
pop
and
mov
jae
loope
xchg
rolb
push
cmp
push
mov
pop
out
dec
jg
push
addr16
icebp
lock
out
or
inc
jno
sub
push
pop
xor
fldcw
hlt
and
fisttpl
fidivrs
and
or
fcompp
es
movb
cmp
mov
add
sub
adc
scas
repz
loop
push
cmpsb
push
hlt
fcomps
xor
movsl
sbb
daa
int
adc
jbe
mov
xchg
sbb
es
add
mov
jbe
cltd
sbb
jbe
cwtl
scas
add
xchg
fdivp
test
fists
mov
outsb
pop
or
dec
lods
jae
push
mov
add
shr
enter
lret
scas
mov
xchg
outsl
xchg
jle
pop
add
bound
pop
sarb
push
std
push
lods
out
in
pop
inc
add
into
mov
sub
inc
push
mov
cmpsl
mov
gs
push
jmp
je
scas
imul
dec
pop
jno
pop
sbb
cs
jno
cmovo
jne
mov
add
in
jge
into
push
mov
lods
subl
add
cs
add
rolb
into
movsb
dec
fwait
add
add
add
sub
lods
push
add
subl
mov
push
cmp
lods
cli
xor
shr
loope
inc
mov
addb
repz
add
out
jmp
pop
xchg
in
ja
dec
cmp
cmpsb
xchg
cmp
std
mov
inc
les
test
dec
sbb
xor
cmc
mov
pop
test
jo
ret
add
lods
pop
pop
mov
pop
div
scas
jbe
mov
xchg
xchg
jns
add
add
pushl
jg
je
fidivrl
pop
add
cmp
inc
in
imull
xchg
dec
fsubrp
repnz
cld
popa
aad
movups
xchg
add
pop
sub
sub
rcr
mov
cwtl
repnz
push
add
outsb
das
test
stos
pop
loop
sti
lods
or
adc
mov
or
mov
add
fnstsw
xchg
outsb
ja
pop
sbb
out
sub
scas
push
push
add
adc
pusha
add
sub
pushf
js
add
push
jnp
icebp
mov
iret
adc
dec
mov
xor
lahf
bound
jns
les
mov
out
scas
fucomip
movb
dec
repnz
xchg
and
mov
add
cld
cmp
mov
xchg
mov
mov
add
mul
addb
std
lret
push
add
xchg
test
adc
sub
lret
lods
std
sbb
iret
push
jmp
jp
aad
inc
add
jp
xchg
add
outsb
out
les
or
movsl
out
sbb
pop
jb
jo
dec
jne
push
pop
ss
add
lods
add
cwtl
aad
insb
xor
xchg
shrl
or
xchg
add
bound
aam
add
bound
sbb
mov
xchg
sbb
rcrb
or
sbb
imul
lret
jbe
or
test
ja
daa
mov
fnstenv
xchg
jecxz
ret
mov
mov
xor
out
int
jmp
pop
jae
cmp
adc
add
and
cld
das
sub
dec
push
xchg
sub
push
mov
out
xchg
and
add
dec
push
sub
push
in
xchg
je
dec
test
xchg
lods
cwtl
mov
pop
test
push
jnp
scas
fcmovnbe
pushf
inc
mov
xchg
enter
xchg
xchg
mov
imul
add
or
add
adc
and
or
mov
push
inc
jge
por
cmpsb
mov
popa
aad
mov
stos
aaa
inc
xchg
xlat
in
ja
sub
test
xor
or
aad
sub
lret
ret
jmp
bound
xchg
enter
sbb
hlt
or
mov
jmp
add
outsl
sbb
add
mov
cmp
add
jno
add
inc
scas
mov
xor
sbb
or
add
addb
loop
clc
xchg
push
inc
lods
outsb
dec
cmpsl
shrl
pop
andl
bound
jnp
jno
movsl
in
out
push
add
cmpsl
cmp
cmp
adc
and
sub
sbbl
or
xchg
dec
in
cmp
jmp
add
add
fildll
lock
les
fmul
outsl
in
cs
cli
lcall
mov
pop
pop
rolb
xchg
sub
inc
add
or
mov
movb
into
out
sub
lds
add
add
or
test
fists
sti
lahf
pop
hlt
mov
adc
es
dec
loop
data16
iret
sbb
xor
in
cmp
add
fsubl
bound
mov
rolb
jle
fcoms
daa
sub
or
cltd
mov
sbbl
dec
xchg
fsubl
and
adc
push
or
xor
adc
sahf
repz
mov
clc
aaa
pushf
lret
and
cmp
add
xchg
jo
pop
push
sbb
mov
cmpsb
enter
sbb
mov
add
dec
call
mov
icebp
lret
sub
adc
ret
fwait
aad
scas
movb
add
lods
mov
clc
sub
movb
shrb
pushf
push
imul
and
add
push
cltd
sti
mov
xchg
lods
pop
addr16
shll
out
dec
andl
addr16
cltd
fisubs
push
sbb
cmp
inc
sbbl
pop
mov
or
bound
in
sub
rolb
aad
xchg
loope
in
fwait
dec
push
xor
pop
sbb
scas
mov
fbld
inc
add
xchg
stc
aas
jge
data16
loope
outsb
jb
or
push
add
aas
popf
pushw
arpl
and
mov
push
sub
lsl
pop
pop
test
aad
push
jp
inc
add
add
pop
enter
mov
mov
in
mov
inc
add
popf
adc
adc
xchg
mov
pop
out
loopne
daa
roll
jl
inc
add
mov
in
es
add
or
xor
add
pop
arpl
sub
negb
das
in
insl
repnz
mov
popf
lahf
adc
inc
add
es
push
mov
decl
push
xor
mov
and
lret
inc
cmpl
cmp
jno
mov
jp
add
add
adc
lcall
jp
mov
inc
jecxz
dec
adc
mov
cmpsb
les
and
adc
or
mov
mov
pop
pusha
add
mov
popa
inc
mov
add
dec
jge
jns
sbb
fwait
push
mov
sti
push
push
mov
xor
stos
jg
add
mov
js,pt
popf
sub
xor
or
in
dec
sbb
fwait
aas
xchg
clc
or
cmpl
inc
jmp
sahf
movb
outsb
fisubrl
imul
out
add
jl
ret
mov
mov
scas
mov
mov
ret
sbbl
frstor
jge
add
jmp
out
clc
lret
sub
into
inc
shll
adc
sub
pop
and
pop
lret
cmpsl
stos
dec
push
xchg
add
repz
imul
jl
fidivrl
or
sbb
jecxz
add
les
and
add
add
dec
sub
sbb
mov
lret
imul
or
push
out
push
jge
cmpsl
jp
pop
jae
fstpt
and
inc
mov
xchg
aas
cmpsb
jb
nop
enter
aad
inc
subl
cmp
sbb
xor
leave
mov
sbb
bound
xchg
rcl
add
pop
popa
xchg
push
sbb
sub
push
in
jecxz
cmpsb
rolb
mov
fildl
cltd
cwtl
shrb
in
sti
inc
add
vpunpckhdq
fnstsw
xor
cmp
inc
pop
arpl
insl
es
bnd
push
daa
sub
dec
cltd
and
cmc
mov
cmp
jbe
jge
or
xor
lock
aas
add
stos
lods
movsl
add
mov
add
add
jl
jno
add
aaa
mov
jno
test
sub
pop
sub
dec
sub
xor
dec
cwtl
pop
scas
xchg
dec
cmp
add
inc
add
cmc
lods
inc
add
and
in
rolb
sub
mov
jnp
fistpl
pop
bound
jbe
fildll
out
rorb
mov
cmp
jns
push
mul
scas
xor
addb
rclb
fisubrl
mov
push
add
mov
add
adc
push
or
add
jne
out
out
out
cmpsl
rclb
jne
add
and
mov
dec
fcmovnbe
mov
pop
inc
test
fidivrs
hlt
fs
lahf
in
cmc
in
and
sub
add
fiaddl
sub
add
push
aaa
call
sub
cmc
cld
je
ud1
arpl
ds
mov
lds
push
enter
mov
xlat
bound
in
push
cmp
ljmp
in
adc
mov
mov
into
repnz
hlt
fistl
adc
add
push
stos
jnp
sti
push
or
add
pop
movsb
test
lods
insl
mov
and
mov
mov
or
das
fisubrs
push
xchg
popa
aas
into
addr16
inc
add
inc
and
cltd
or
enter
fs
icebp
cmpsb
arpl
add
cltd
adc
adc
add
and
mov
ret
mov
ja
in
sbb
out
mov
sub
inc
add
sbb
push
dec
inc
add
mov
lret
xor
fcmovbe
push
dec
mov
out
insl
lock
inc
add
mov
add
cld
xchg
cmp
loopne
cmp
or
scas
mov
add
xchg
out
inc
add
dec
and
sbb
std
lds
cli
jmp
mov
mov
jno
aam
jmp
cwtl
fbstp
dec
jg
jge
stos
xor
and
adc
add
sahf
push
add
add
fisubrs
mov
loop
pop
add
pop
out
push
add
sub
pop
stos
push
das
sti
pop
mov
cwtl
adc
int3
or
inc
jmp
jnp
xlat
jnp
das
js
test
cli
fisubs
cmp
add
jle
dec
inc
sbb
sbb
stos
ds
dec
out
xor
mov
dec
cmp
inc
cmp
int
gs
add
push
xor
add
push
dec
aas
and
dec
inc
mov
add
outsb
into
sub
cs
xlat
sbb
gs
cli
mov
iret
fistps
pop
mov
jae
pop
in
inc
mov
push
fnstcw
push
nop
bound
hlt
inc
add
dec
pop
mov
xchg
lahf
pusha
add
scas
movsl
lahf
jns
mov
inc
sub
dec
test
lret
pop
mov
movsl
mov
imul
pushf
das
adc
je
cmp
push
nop
push
scas
push
ja
sti
cld
fcmovnu
pop
dec
cmp
pop
in
loop
mov
push
pop
xchg
inc
jl
or
xlat
fisubrl
adc
aad
sbb
pop
pop
rolb
mov
int
mov
xchg
imull
dec
xor
pusha
add
sub
xchg
je
ss
add
mov
and
ljmp
dec
sbb
dec
sahf
stc
lret
jmp
dec
imul
in
in
repz
jg
jmp
pop
fcompl
call
jne
inc
add
add
add
inc
jecxz
testb
cmp
add
int
jl,pn
repz
mov
push
adc
add
aas
or
roll
ss
sbbl
int
mov
arpl
in
scas
add
cmp
add
mov
into
out
sti
test
ljmp
mov
sti
pop
cmp
scas
pop
add
outsb
or
cmp
pop
out
jb
sub
adc
mov
fs
rolb
push
out
aas
xchg
pushf
lea
cs
jmp
insb
jae
pushf
cmp
mov
mov
fs
int
jbe
cmp
inc
add
add
jb
fidivrs
fsubl
inc
aad
sbb
add
push
ss
in
test
in
sbb
mov
jecxz
add
or
hlt
inc
add
sbb
enter
movsb
jb
mov
lret
out
addb
inc
add
push
adc
dec
lret
push
sbb
jns
push
add
mov
lods
mov
hlt
les
mul
sub
insl
inc
icebp
mov
cmpsb
dec
push
ljmp
inc
add
and
das
insl
xor
xor
popa
jmp
ljmp
cmpl
inc
into
jmp
xchg
mov
and
dec
inc
mov
mov
shlb
add
mov
xchg
mov
aas
push
fisttpll
jmp
inc
orl
aam
shlb
mov
xlat
outsb
add
push
stos
fmul
jbe
cmp
faddl
test
lret
daa
mov
sbb
xor
cmp
add
lcall
lea
ret
xlat
sbb
sbb
call
test
je
xchg
fiadds
loop
jne
add
je
pop
sub
pop
clc
pop
xchg
das
and
out
dec
inc
add
add
icebp
stos
xchg
in
mov
bswap
and
mov
mov
jp
rcl
icebp
sbb
mov
cmp
dec
clc
scas
and
into
mov
jb
test
mov
imull
pop
cmp
cs
ret
flds
xor
xor
test
repnz
cltd
fsub
inc
add
test
insb
xor
cld
adc
aaa
pop
jae
jns
push
pop
pop
pop
dec
in
mov
loope
jbe
xchg
sbb
sbb
xor
mov
cwtl
push
dec
push
addb
mov
xchg
insl
bound
sub
add
xor
add
add
scas
lods
aad
in
jl
push
cmp
popl
inc
push
jb
pop
movsl
into
push
jae
sbb
xlat
mov
cltd
lahf
sub
and
dec
hlt
sub
xchg
mov
mov
sbb
je
dec
test
pop
das
push
dec
dec
add
addb
mov
lret
mov
jp
mov
jl
add
sbb
loope
sbb
xchg
shlb
mov
rcrl
cli
cltd
push
pop
mov
adc
movb
pop
sbb
or
add
cmp
nop
rcll
sbb
add
addr16
xchg
pop
loope
xor
stos
jge
sub
add
rclb
sbb
inc
leave
int
fdecstp
sub
mov
and
test
or
divb
cmp
xor
xchg
inc
data16
loope
flds
xchg
xchg
addb
and
mov
add
insl
je
out
aas
imul
add
dec
popa
iret
sub
jno
or
mov
xor
nop
add
leave
adcl
inc
inc
add
cmpsb
push
cwtl
adc
or
add
es
push
mov
pop
mov
shr
lret
mov
lahf
addb
cmp
fwait
stos
dec
loop
stos
pushf
aad
inc
cmc
mov
sar
stc
pop
or
addb
test
add
sbb
add
fildl
xchg
mov
add
out
sbb
mov
pop
cmpsb
pop
xchg
cmp
add
xchg
leave
imul
scas
lahf
add
add
xrelease
popf
push
pop
mov
add
aam
imul
add
rep
cmp
std
mov
mov
into
cwtl
dec
xor
pop
cltd
pop
movsl
addb
sbb
fdivr
js
add
inc
add
mov
inc
xchg
aad
xchg
push
add
add
mov
sbb
subl
pop
mov
popf
push
push
pop
sub
cmp
add
sbb
dec
jge
pop
or
test
addb
in
mov
push
mov
movsl
pop
pop
pushf
push
push
add
xor
pusha
add
cmp
lahf
imulb
mov
int3
fs
roll
add
push
out
rolb
inc
add
add
mov
push
addb
xorl
and
and
dec
or
pop
mov
adc
stos
mov
out
lds
addr16
mov
add
jge
sub
push
add
add
jbe
lock
stc
and
fisubs
std
hlt
inc
out
int
fildll
notl
mov
add
and
inc
add
sub
add
popf
nop
xor
outsl
mov
ds
aaa
push
repnz
jb
pop
lret
cwtl
lcall
or
or
sub
sub
mov
lahf
pop
sahf
mov
add
adc
les
in
stos
jae
sub
add
gs
dec
jle
aam
lcall
gs
pushf
das
les
xor
leave
inc
add
push
mov
xchg
test
pop
sbb
lods
sbb
repnz
jge
test
shrl
cmc
adc
lods
cld
inc
jae
mov
sub
ljmp
loope
hlt
inc
addb
add
push
lock
mov
aam
pop
jbe
cmp
mov
pop
aas
out
divb
test
fsts
call
push
cmp
pop
pop
fmulp
outsl
mov
dec
iret
ficoms
loopne
mov
out
inc
add
mov
inc
stos
mov
in
push
mov
cmp
and
leave
addb
mov
repz
rcll
and
xchg
xchg
pop
rclb
mov
push
xchg
or
sbb
out
xchg
lods
cmp
std
popa
cmpsl
mov
inc
aam
out
jmp
sbb
pop
fdivrl
pop
xchg
inc
add
dec
jmp
dec
or
add
and
repnz
xchg
xor
xchg
mov
aam
add
mov
jl
shlb
bound
mov
popa
mov
add
cmpl
xchg
jb
les
xor
mov
sub
mov
pop
iret
inc
add
orl
leave
xchg
jnp
add
add
add
stos
std
test
loopne
inc
add
adc
rcrl
add
mov
push
addb
pusha
add
push
adc
jnp
cli
pop
cmc
ja
mov
and
push
adc
add
movsl
xchg
addr16
inc
or
mov
lret
dec
jno
add
int
cmp
cs
jmp
inc
add
add
call
movsb
std
out
xlat
sub
xlat
push
add
js
lret
push
push
repnz
sub
jge
enter
xor
lret
cltd
ss
jecxz
out
and
pop
mov
pop
or
addb
sbb
rcll
sti
int
cmpsl
pop
xchg
rcr
pushl
push
ret
lcall
sub
push
lret
xlat
lret
int3
add
jecxz
xlat
push
mov
and
fiadds
add
add
sub
xchg
test
lret
stos
cmp
movb
cmpsb
call
call
loopne
add
xor
add
stc
jno
add
std
mov
add
and
ljmp
mov
pop
push
add
cmc
pop
adc
test
add
inc
add
inc
gs
mov
shrb
xor
pop
dec
push
adc
ljmp
fadds
or
add
test
je
iret
add
pusha
add
adc
std
test
mov
mov
lret
lds
mov
push
or
jae
and
out
scas
arpl
scas
das
cmpsl
leave
fwait
jle
lock
pushf
cmp
mov
popa
faddl
lahf
scas
rolb
rolb
outsl
outsl
mov
jne
jge
push
mov
jge
add
mov
pop
daa
sub
or
icebp
dec
mov
aas
iret
hlt
insl
pop
imul
dec
ljmp
addb
sbb
test
ret
mov
adc
js
pop
aam
js
orl
add
imul
test
loopne
push
fisttpl
into
push
jno
sub
inc
add
dec
push
and
xchg
inc
sahf
or
pop
pushf
or
popf
inc
add
mov
gs
nop
lods
or
fidivrs
jb
adc
xchg
xor
mov
adc
mov
sub
add
inc
add
inc
movsl
pop
sbb
add
pop
out
int
sub
aam
cmc
int
pop
int3
sub
jbe
aam
loope
jmp
pop
lcall
push
add
loop
shrb
xchg
sub
sti
rolb
cmpsb
or
insl
add
je
sbb
aam
inc
add
aaa
ret
call
xor
mov
addb
daa
daa
pop
push
cs
pop
scas
and
push
jl
cwtl
pop
int
call
das
and
push
add
sub
clc
jb
or
js
add
add
add
sbb
inc
add
addr16
loop
rolb
aad
mov
xor
inc
add
adc
hlt
dec
push
pusha
add
cli
pop
popf
sub
inc
jne
jo
mov
imulb
pusha
add
ja
add
or
add
xor
push
mov
scas
jo
mov
lahf
insb
mov
add
rcr
and
jne
dec
mov
xor
les
rolb
add
push
ret
push
push
xchg
pop
pop
cmp
add
stc
sub
cmp
jmp
iret
aaa
fimuls
push
add
add
pop
adc
cmp
arpl
aaa
xor
add
inc
mov
js
push
insl
cmp
leave
xchg
inc
loop
loop
add
imull
or
ljmp
xor
jae
jmp
add
sbb
add
jnp
fs
gs
push
mov
inc
ret
xor
lahf
fcmove
sub
cmp
jns
cmp
adc
mov
inc
add
xor
int3
stos
xchg
jno
xchg
test
pop
mov
mov
mov
push
xor
inc
push
popf
dec
inc
add
iret
cmp
les
loopne
add
add
push
dec
pop
pop
int3
mov
addl
mov
repz
fidivl
aad
ss
bound
mov
jp
jne
sub
mov
add
add
jae
imul
cmp
jmp
mov
insl
das
sarb
push
popa
and
jns
cmp
add
cmp
mov
dec
fldenv
add
shll
in
jnp
mov
dec
pmullw
jp
inc
cmp
push
pop
cmp
out
dec
mov
and
adc
pusha
add
mov
daa
pusha
add
xor
add
xor
add
add
clc
xorl
test
shlb
in
pop
mov
or
sub
fs
add
insl
sub
and
bound
and
stos
rol
call
pop
imul
popf
jp
pop
ja
add
test
cmp
sbb
or
lea
dec
pop
push
inc
add
pushf
test
hlt
imul
bound
sbb
mov
shrb
xor
add
push
and
mov
mov
fcomp
xchg
add
test
adc
enter
adc
data16
add
cld
pushf
in
push
out
inc
inc
mov
xor
ficompl
and
out
call
fldt
mov
fbstp
add
xor
outsb
ficompl
and
xchg
sub
and
mov
cmp
iret
icebp
xor
pop
repz
adc
je
add
push
xor
mov
fstpt
inc
pop
xchg
jmp
and
in
xor
sbb
addb
leave
xor
mov
jb
in
fadd
add
fcoml
xlat
cld
test
mov
mov
jle
movsl
jbe
add
sbb
sub
xchg
jg
pop
fucomip
mov
and
dec
and
dec
lret
jg
stos
clc
or
mov
dec
xor
in
dec
adc
add
xlat
or
sbb
xor
or
sahf
call
out
add
fwait
mov
sub
dec
xchg
push
pop
lret
inc
adc
out
pop
push
movb
call
shll
add
in
dec
lea
out
xchg
outsb
sbb
test
mov
inc
xchg
inc
xchg
popa
shll
out
loopne
push
jmp
jae
or
shrl
mov
ja
xchg
pop
fsubrl
add
add
dec
sub
out
pop
sbb
sbb
or
mov
push
sbb
cmp
aaa
pop
or
adc
cmc
sub
mov
bound
adc
cmp
xlat
or
inc
data16
jnp
sti
out
add
insl
gs
cltd
mov
mov
dec
cmp
and
jb
nop
aad
push
aad
int
jnp
pop
mov
shll
mov
mov
aas
filds
add
ds
xchg
leave
test
stos
out
daa
add
cmp
inc
leave
rcll
jnp
fmuls
icebp
dec
ficoml
fisubs
sbb
gs
movsl
inc
add
mov
pop
pop
mov
lods
lahf
cmp
xchg
out
leave
aad
push
fistpl
xor
mov
addr16
xchg
pop
pop
hlt
sub
push
mov
test
cmp
add
pop
cmpsl
sub
cmp
mov
adc
inc
add
pop
mov
mov
movsl
sbb
sbb
sub
add
ror
xchg
sub
addl
push
lock
sub
push
ret
das
repz
xor
xor
mov
mov
sub
loope
mov
mov
movsl
lahf
ss
mov
xor
adc
mov
mov
es
sbb
jecxz
push
popf
mov
mov
std
jg
jmp
adc
cs
lret
int3
pushf
lds
add
lahf
ret
pop
xor
roll
push
into
pop
loopne
dec
pop
cmp
adc
dec
or
add
push
xchg
jb
add
test
xchg
push
ret
lret
add
pop
cmc
xlat
ret
add
out
xchg
out
call
stos
popf
jb
mov
mov
fiaddl
push
rolb
imul
ret
mov
add
add
