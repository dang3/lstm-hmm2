mov
push
aaa
mov
jne
cwtl
sbb
vmwrite
testb
jmp
mov
push
add
addb
xlat
enter
imul
add
or
ror
rolb
xor
sub
sbb
imul
rolb
and
xor
out
or
jg
add
mov
mov
add
add
dec
adc
push
je
inc
add
add
scas
rcll
add
in
movsl
daa
out
jnp
add
add
xchg
pop
mov
push
add
xchg
add
mov
pop
aaa
adc
cmp
xor
lods
dec
jl
data16
add
add
add
dec
sahf
push
add
add
add
add
mov
dec
lods
pushf
pop
jno
stos
js
popf
clc
pop
jns
add
int3
add
jg
xchg
pop
aas
ret
add
inc
add
jp
add
test
mov
mov
insl
jecxz
repz
mov
jne
stc
lret
iret
push
add
pop
push
idivl
sahf
cmp
jmp
add
mov
xor
push
add
add
jle
xchg
mov
mov
add
insl
sub
mov
push
add
add
jge
dec
loopne
fcmovnbe
pop
hlt
add
popf
in
fisubrl
add
sar
xor
inc
add
test
insb
fwait
and
mov
add
mov
test
xchg
lea
dec
fldenv
stos
fmulp
js
add
pop
mov
mov
icebp
inc
mov
xor
add
and
add
xor
jbe
sbb
jmp
add
pop
ljmp
jge
adc
mov
out
sahf
sub
add
iret
jg
xor
rolb
mov
xor
xchg
mov
jmp
push
out
push
ds
mov
add
xor
sbb
insb
and
jbe
xlat
mov
sbb
add
sub
dec
scas
jmp
test
insl
adc
aad
add
rcl
add
cli
add
add
dec
pop
leave
pop
ja
rcrl
fisubs
add
stos
dec
add
mov
add
add
add
clc
je
push
mov
add
jle
add
jp
add
add
add
mov
cmc
jae
add
add
lret
and
add
push
add
dec
lods
jns
xchg
mov
rolb
inc
movb
dec
inc
mov
mov
add
xor
add
ja
adc
add
enter
add
mov
ret
cli
clc
pop
mov
cmpsb
add
cmp
add
sub
fwait
jp
add
push
jmp
aam
mov
add
xchg
addb
int
fstl
scas
pop
pop
xor
sbb
imul
test
cmp
mov
inc
int
add
add
adc
jno
add
add
jmp
cmpsl
gs
add
in
sub
cltd
xchg
add
sub
xchg
add
scas
xor
add
cld
call
add
rolb
fnstsw
add
pop
incl
jge
icebp
inc
inc
pop
movsb
add
mov
add
les
fs
add
cmpsb
add
mov
lods
xchg
sbb
mov
ljmp
add
testb
shll
addr16
inc
push
add
add
push
add
out
jns
out
hlt
add
jno
ljmp
add
mov
inc
add
add
and
sbb
add
cld
cs
bound
mov
xchg
add
inc
add
xchg
rolb
add
adc
add
add
add
in
lods
js
jmp
xchg
loopne
fs
ljmp
test
push
add
add
mov
rcrl
add
mov
mov
xchg
push
or
rcll
jb
inc
into
pop
jl
push
add
add
jge
and
mov
icebp
cmpsb
add
add
or
adc
rcl
push
add
jecxz
push
sbb
aad
in
sub
and
outsb
fsubr
int
xor
inc
add
xchg
add
add
dec
sub
fnsave
add
in
std
int
add
test
add
loopne
push
add
add
add
std
push
add
stc
pop
stos
je
push
add
add
or
cmp
js
mov
add
add
add
insl
inc
add
pop
mov
push
add
mov
mov
mov
outsb
insb
aas
push
sub
lods
insl
addr16
add
in
outsl
push
sub
xor
sub
jecxz
ret
xchg
add
add
dec
arpl
std
sub
pop
jns
int
ljmp
add
sbb
sub
add
in
loop
hlt
add
add
add
lahf
sub
sahf
push
rorl
addb
add
add
add
add
inc
add
cmp
and
mov
cmpsb
add
leave
scas
and
mov
add
xchg
es
adc
mov
add
cli
lret
add
add
add
movb
add
mull
jmp
add
mov
xchg
stos
adc
pop
test
add
mov
xor
mov
add
call
sbb
add
mov
add
lahf
movb
sub
xor
xchg
add
add
and
push
cmp
daa
sbb
addl
add
jmp
jb
mov
ss
add
push
testb
lcall
or
add
cltd
icebp
add
out
push
push
cmp
dec
mov
jp
fstl
testb
add
loop
lods
jns
test
mov
lea
add
cmp
mov
push
add
add
or
jb
cmp
fldcw
add
mov
mov
or
sbb
ja
cmp
fst
add
add
cs
mov
into
insl
popf
mov
loopne
inc
jecxz
js
ret
testb
in
fxch
mov
int
fdivr
and
aaa
addb
xor
cmp
aas
lock
jmp
push
pop
sub
jl
add
add
pop
jp
push
inc
add
dec
inc
stc
cmp
fldcw
repnz
add
rcll
add
mov
add
bound
mov
mov
add
xchg
jge
stos
mov
pop
das
sub
jbe
add
mov
cmp
push
add
add
add
dec
push
mov
sahf
xchg
ret
aas
sub
cs
xor
add
cwtl
in
incl
fdivp
add
outsl
push
add
testl
add
test
sbb
insb
dec
bound
mov
fadds
add
mov
stos
leave
mov
fsubl
add
add
mov
xor
mov
js
mov
adcl
add
fstps
lahf
jp
mov
mov
fidivrs
add
lret
xor
add
adc
jb
out
push
movb
add
push
rolb
aas
je
xchg
add
arpl
scas
fwait
add
mov
add
add
push
mov
rolb
rolb
scas
icebp
inc
add
mov
sub
out
sub
jmp
mov
mov
add
push
add
mov
arpl
add
test
add
mov
add
pop
out
dec
cmp
xchg
out
inc
push
jo
lea
inc
add
subl
stc
sub
lret
scas
xchg
dec
movb
add
add
push
and
mov
jns
sub
mov
inc
jge
call
sbb
push
add
pop
inc
mov
lea
mov
add
add
inc
js
add
rolb
aas
push
loope
xchg
xchg
add
mov
cld
pop
adc
sbb
mov
ljmp
push
sbb
mov
add
loope
clc
test
fnstenv
iret
xchg
add
add
add
fwait
jge
add
data16
push
stc
sbb
inc
add
add
lds
aas
js
add
cmc
or
mov
dec
pop
mov
mov
ljmp
add
add
test
enter
adc
clc
in
sub
cmp
sub
add
je
les
add
repnz
add
add
loopne
ds
sub
push
jno
fistpl
lahf
add
add
dec
xor
add
pop
mov
es
aaa
aaa
and
mov
xchg
add
lods
pop
int
add
ja
dec
hlt
add
add
add
adc
mov
in
les
addb
lcall
enter
sbb
add
dec
cwtl
imul
pop
add
mov
in
lret
add
movsl
and
add
imul
dec
lods
xor
add
cmp
test
addb
add
fnstsw
dec
push
add
loopne
mov
stos
or
inc
pop
ret
pop
push
add
push
adc
inc
add
or
add
ljmp
out
add
add
adc
mov
jle
push
mov
sub
push
push
push
cld
call
sub
mov
cs
movzbl
cmp
ss
lea
push
lea
push
push
call
cmp
je
es
lea
es
cs
es
call
test
jne
jmp
push
lret
icebp
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
lea
lea
sub
add
mov
sub
sub
push
pop
push
je
jmp
add
add
test
push
mov
add
add
mov
lock
add
cmp
add
and
lea
add
mov
add
xchg
xchg
add
jb
lock
add
nop
add
xor
insb
enter
inc
dec
movsl
mov
jge
fimuls
add
add
add
mov
mov
mov
cltd
imul
sub
and
mov
add
mov
add
xor
add
pop
popa
aas
and
mov
pop
jbe
push
add
dec
dec
fbstp
add
and
mov
mov
notl
imul
push
xor
dec
add
mov
add
add
outsl
addb
push
shrl
sahf
xor
insl
fcom
add
add
addr16
add
xchg
iret
out
jne
inc
pusha
add
or
inc
xchg
gs
mov
rolb
cmpsb
add
pop
lret
pop
cmp
rcll
lcall
mov
mov
jno
lea
add
xor
mov
add
mov
add
pop
test
dec
insl
push
add
add
mov
xchg
sti
data16
imul
mov
fisubs
mov
xchg
xlat
call
in
test
dec
jmp
out
push
add
jno
rolb
mov
insb
das
xchg
add
mov
sbb
gs
push
add
mov
xor
out
inc
adc
add
or
stos
add
mov
jnp
jg
nop
add
mov
mov
add
add
cs
sbb
test
xchg
add
add
enter
inc
add
dec
cmpsb
add
add
enter
and
push
add
out
in
mov
add
mov
les
pop
dec
xor
and
add
mov
pop
adc
mov
or
jns
or
add
aam
les
xor
push
jmp
add
xor
add
push
add
mov
mov
je
pop
cmp
les
push
loopne
jae
jg
adc
rolb
and
mov
jne
imul
mov
dec
xchg
add
rolb
add
imul
loop
push
add
test
test
push
add
test
mov
adc
movb
inc
and
mov
shrl
dec
imul
mov
jo
in
pop
ret
add
stos
clc
jp
adc
lret
add
and
cs
xor
add
loope
add
add
add
add
rcll
call
cmp
xor
mov
push
add
pusha
add
mov
or
call
imul
add
adc
inc
lea
push
out
xor
add
out
sub
add
push
add
and
mov
sbb
xor
inc
lret
push
sub
fiaddl
nop
add
add
mov
sbb
insb
sbb
add
mov
add
cmp
add
add
add
aam
mov
sbb
mov
arpl
addb
cmp
movb
add
addr16
pop
mov
push
add
jnp
jg
arpl
or
in
cmp
inc
dec
jns
add
jno
testb
mov
add
mov
data16
fnstsw
lds
jg
add
pop
jge
pop
pop
adc
ret
in
lcall
cmp
lea
pop
testb
test
loopne
in
mov
fstpt
gs
pop
mov
mov
and
aam
lret
je
dec
stos
icebp
rolb
cld
test
and
dec
jnp
adc
jmp
int
or
lcall
xchg
add
add
data16
cld
xlat
xchg
add
mov
lds
in
push
push
add
add
add
inc
and
ljmp
imul
mov
xor
add
mov
add
leave
aam
and
mov
adc
icebp
push
add
popf
jae
ret
pop
pop
cltd
dec
mov
aas
mov
push
add
add
addb
add
mov
add
add
add
add
cmc
das
aaa
ljmp
add
xchg
add
push
add
add
data16
dec
or
inc
add
push
clc
int
mov
stc
call
dec
mov
dec
cmpsb
add
lret
add
pushf
stos
repz
xor
and
cli
mov
es
test
add
add
mov
push
adc
icebp
movsl
sub
movsl
cmp
lea
mov
les
or
rcrl
jo
cmp
mov
movsl
rolb
movsb
add
add
xchg
add
add
cli
lock
insb
cs
cli
jmp
faddp
add
jnp
add
sti
sbb
xchg
fisubrl
leave
adc
data16
mov
add
clc
ds
add
add
testb
cmc
stc
inc
push
jo
imul
fdivrl
add
dec
and
dec
mov
sbb
mov
add
add
adc
popa
call
xchg
popf
pop
cmp
add
insl
xlat
cmp
jmp
mov
pop
xchg
add
andnps
cwtl
mov
dec
xor
add
ljmp
inc
add
add
push
add
mov
mov
add
ljmp
pop
push
add
daa
dec
add
or
add
int3
and
mov
add
add
out
mov
or
cli
pop
aas
adc
mov
addr16
inc
add
add
add
or
mov
jns
scas
mov
mov
add
addr16
push
add
lds
add
mov
add
mov
inc
add
add
push
add
add
jge
add
xor
movb
add
ret
add
push
in
out
add
add
fs
add
mov
dec
fs
add
mov
jecxz
stos
cmp
dec
pusha
add
and
mov
nop
add
dec
xchg
add
lcall
lret
add
mov
push
mov
into
das
xor
or
ficomps
add
cli
push
and
mov
jns
jb
inc
add
sbbl
mov
lret
or
xchg
hlt
add
push
movsb
add
pushf
dec
lret
into
add
push
ds
inc
into
mov
mov
add
add
addr16
add
dec
sahf
addb
js
mov
mov
xor
mov
add
sub
inc
add
cmc
mov
or
pushf
xchg
add
jne
add
out
adc
push
mov
sub
add
mov
sahf
jl
cmpsl
fidivrl
dec
adc
xchg
data16
add
sub
add
add
push
add
pop
jnp
mov
stos
sbb
add
lahf
nop
add
nop
add
fbld
add
inc
shll
leave
push
mov
adc
fmuls
sbb
xor
mov
popa
in
addr16
lds
add
sbb
adc
add
out
cmp
add
shr
pushf
pop
add
xchg
mov
outsb
pusha
add
pop
lock
add
push
add
cltd
jp
pushf
bound
mov
in
add
mov
fdivl
lret
loopne
mov
add
add
popf
imul
fildl
scas
ficomps
add
stc
adc
repz
add
popa
push
outsb
push
push
jnp
xchg
ss
push
add
mov
dec
sub
roll
push
out
daa
scas
cltd
jae
cmp
add
jge
out
and
clc
mov
add
popl
add
add
mov
je
mov
jb,pn
sub
lods
pop
clc
add
mov
dec
test
mov
mov
xchg
loop
inc
lret
or
iret
xorl
popf
xlat
add
test
das
sbb
add
push
add
xor
push
add
xlat
rolb
push
jb
push
dec
jb
or
loop
and
mov
add
lock
es
test
add
movb
ret
inc
add
adc
cmc
in
jno
add
add
rolb
add
andl
add
inc
jbe
xchg
xlat
out
xchg
add
dec
ret
cld
movsl
jae
add
mov
inc
add
dec
das
out
push
add
fwait
out
add
add
ja
je
adc
xchg
add
mov
or
movq
inc
mov
add
add
add
scas
ja
ret
in
fnstcw
sub
xchg
sub
jp
inc
add
mov
add
pushf
mov
in
xchg
cli
push
mov
push
cmp
int
add
arpl
test
add
testb
adc
movsl
inc
mov
stc
mov
stos
xchg
lea
mov
adc
dec
adc
adc
mov
pusha
add
add
add
adc
and
mov
sbb
outsl
in
adc
test
xchg
add
xchg
jno
push
add
pop
imul
add
add
add
ja
add
sahf
mov
jae
in
aam
lcall
loop
imul
add
outsb
hlt
add
push
jl
add
arpl
add
add
fstp
pop
pop
lock
mov
pop
sbb
adc
add
add
mov
add
inc
add
jno
add
aaa
xor
pop
cwtl
icebp
dec
testb
ja
and
mov
lcall
fxch
lock
sub
aaa
shll
fidivrl
call
int
aam
ljmp
repz
adc
jp
ds
mov
mov
xor
push
add
add
xchg
add
pop
leave
popf
pop
cs
lea
add
fdivs
adc
adc
add
sub
testb
inc
add
add
mov
ret
insl
icebp
stos
pop
sub
ficompl
add
int3
fcom
add
ja
mov
popa
mov
add
mov
add
pusha
add
lret
int3
pop
push
mov
rolb
jecxz
in
sbb
cmpsl
ljmp
sbb
mov
data16
lret
call
lods
repnz
outsl
lea
add
pop
jno,pt
repnz
add
xor
stc
jge
add
and
lret
rolb
sahf
out
add
sbb
add
test
xor
js
push
insb
int
add
add
testb
add
jne
das
and
mov
stc
daa
xchg
xor
cmp
mov
or
rolb
mov
dec
shll
movb
xchg
add
add
leave
shll
add
cli
jecxz
mov
add
mov
add
xlat
adc
das
push
xchg
add
add
movsb
add
add
add
sub
mov
sbb
add
test
cwtl
jno
xchg
add
dec
add
mov
imul
out
xchg
xchg
add
sbb
stos
pusha
add
hlt
add
pop
out
jns
int3
add
frstor
mov
jne
add
inc
adc
clc
rolb
inc
in
setnp
add
daa
jnp
add
icebp
fwait
mov
jae
xrelease
add
cmp
jp
or
add
movsl
xchg
add
or
add
add
add
dec
jl
adc
out
repnz
mov
sahf
xor
mov
sub
add
mov
rolb
add
pop
scas
movsl
and
add
mov
add
cmp
inc
adc
dec
out
mov
xchg
mov
mov
push
add
mov
push
inc
sbb
add
add
test
test
lock
add
mov
add
cmpl
xlat
sub
add
add
push
movb
push
add
cmp
popa
mov
mov
mov
insb
arpl
bound
mov
add
fcomp
loop
add
shl
int
lea
lods
cmpsl
mov
push
add
pop
test
sub
add
adc
out
pushf
mov
xor
jmp
mov
out
and
add
mov
mov
inc
daa
repz
adc
lods
adc
add
dec
insb
popf
mov
add
lock
data16
movsl
cmpsl
cmc
mov
add
mov
enter
cmp
stos
in
out
cld
jns
cmp
std
in
in
and
mov
std
add
rolb
fisubrl
add
mov
xor
lcall
add
add
jb
addr16
push
add
dec
lea
pop
inc
add
mov
add
imul
xor
cmpsb
add
dec
jecxz
add
dec
add
int3
repnz
add
fidivl
add
mov
adc
add
loop
dec
icebp
or
mov
cmp
add
outsb
mov
arpl
xor
add
xor
addb
add
iret
mov
insb
pushf
sbb
movb
sbbl
mov
push
add
add
push
add
sub
jae
or
test
lea
adc
sub
adc
dec
in
dec
adc
je
push
add
add
dec
cmp
xchg
dec
mov
notl
lcall
jbe
addr16
addb
inc
add
add
addb
pop
sbb
addb
add
outsl
sbb
cltd
mov
repnz
push
push
jle
inc
add
mov
int
pop
lods
dec
in
add
cmpsl
xor
in
lahf
mov
add
lcall
ljmp
cmp
add
xor
cmp
push
pop
fdivrl
ret
adc
enter
sbb
add
in
out
rolb
push
add
add
mov
mov
jle
push
sbb
xchg
sbb
add
cmp
repnz
add
add
and
mov
dec
movsl
jmp
add
push
iret
cmp
xor
xchg
add
out
cld
leave
scas
data16
add
pop
sar
mov
inc
outsb
mov
add
push
add
lock
mov
fsts
push
add
data16
and
mov
or
fildll
gs
adc
data16
rolb
push
clc
lods
jo
cmp
xchg
rolb
inc
add
cmpsl
xor
mov
xor
xor
insl
mov
add
add
mov
int
sti
lea
add
movb
ja
in
pop
or
out
cmpsl
xlat
mov
inc
jo
push
out
movsl
insl
int
cmp
insl
enter
leave
out
cwtl
pusha
add
sbb
add
add
add
addb
clc
cmp
and
mov
rolb
test
rolb
jge
add
xchg
cmpl
jne
add
add
dec
lods
xchg
dec
les
add
or
shll
add
xchg
push
add
mov
add
js
hlt
add
rolb
hlt
add
mov
fnstsw
or
add
add
pop
iret
push
add
pop
call
pusha
add
fisubrs
clc
rcl
pop
cmp
stc
aas
add
mov
add
and
add
fsubl
ds
mov
test
out
bound
mov
pop
fisttpl
add
jns
add
jp
js
add
out
adc
popa
push
cmc
xchg
add
mov
shll
mov
fldl2t
outsl
jle
fiadds
add
mov
add
mov
add
xchg
sub
pop
inc
add
add
add
add
push
add
xchg
or
add
int3
popl
push
add
fsubp
sub
xchg
add
cmp
dec
mov
addl
mov
add
repz
dec
outsb
loop
mov
xlat
cwtl
fld
add
outsb
iret
jg
add
add
fwait
or
pop
add
xlat
jmp
push
add
pop
sbb
sbbl
xchg
aaa
cmp
popf
dec
sbb
in
lret
or
fdivl
add
ret
mov
mov
cmp
mov
cmp
cwtl
in
xor
add
loop
aad
xchg
add
add
mov
add
repz
or
aam
pushf
int3
loope
add
mov
ret
aaa
sar
cmpl
ror
or
jnp
add
and
lods
leave
scas
rolb
loop
add
mov
add
jne
lods
leave
lret
lahf
lods
stos
roll
in
push
add
add
add
add
aad
add
out
xchg
add
enter
add
cli
leave
push
sub
mov
add
xor
sbb
add
dec
lahf
mov
push
popf
dec
xor
pop
cld
js
mov
mov
clc
rcr
add
jbe
xchg
rolb
popa
mov
or
mov
daa
popf
movsb
add
xor
sub
aad
inc
pop
rcrl
push
inc
add
call
add
add
add
movl
stc
dec
loope
ljmp
add
cmp
subl
cmpsb
add
and
test
lea
add
lods
les
jb
movb
stc
cltd
mov
adc
add
xchg
mov
sahf
fcomps
aas
mov
mov
xchg
add
jp
or
add
cmp
inc
add
and
add
and
dec
and
or
sub
pop
and
mov
in
mov
add
adc
aaa
sub
addb
ror
int
push
add
sub
scas
test
fwait
jns
dec
pop
add
jae
add
mov
add
stc
jns
add
add
js
mov
add
cmp
scas
jne
sbb
jbe
sbb
cmp
add
add
add
popf
mov
je
mov
jo
icebp
pop
xor
in
xchg
sti
aad
addb
repz
stos
in
cli
addb
or
push
pop
addr16
cli
mov
adc
movsb
add
add
add
add
movd
fwait
sub
imull
sub
rolb
add
mov
add
lods
das
xor
dec
inc
add
add
pusha
add
xor
cld
xchg
stos
lds
mov
sub
outsb
cmpsb
add
cmpsb
add
bound
mov
add
add
shll
add
bound
mov
leave
ds
inc
add
xchg
sbb
add
mov
dec
jmp
js
add
sub
xor
push
les
das
dec
bound
mov
and
sub
add
add
loop
cmpsl
negl
pop
lret
loope
movsb
add
in
jno
add
push
add
add
cmpsb
add
scas
scas
push
add
int3
sbb
add
mov
mov
add
inc
add
dec
add
sub
cmc
leave
mov
rolb
aas
sub
add
push
cmc
pop
or
add
shll
mov
add
cli
les
adc
fmul
sbb
dec
jle
fidivs
adc
js
add
enter
xchg
mov
sbb
mov
add
loope
add
jb
push
add
dec
enter
add
add
add
xor
in
mov
add
je
loop
loope
add
ficoms
add
add
call
repnz
add
add
ja
add
cwtl
outsl
js
add
cwtl
lock
daa
outsl
add
mov
add
add
rolb
or
add
jne
add
es
dec
xchg
dec
pop
push
add
daa
dec
or
in
mov
int
add
sbb
movsl
rolb
les
testl
inc
pop
push
add
pushf
aaa
and
fdivp
xchg
add
inc
les
xchg
add
fcomps
clc
dec
mov
fimuls
add
fstpt
dec
imul
add
mov
push
add
add
int3
sub
xor
sbb
in
push
add
add
cmp
add
fstpl
or
add
mov
fcomip
add
fisubl
stc
addb
pop
aas
out
inc
inc
add
dec
inc
adc
adc
add
imul
add
imul
add
loope
pop
push
int
mov
xchg
mov
add
in
jno
push
add
lds
test
movb
ds
add
adc
mov
add
stc
dec
xchg
and
mov
or
push
add
xchg
outsb
sub
cmpsl
fstp
fstl
add
xchg
push
add
dec
dec
xchg
add
push
add
cwtl
sub
cmc
inc
add
mov
jae
dec
out
cmp
sub
loop
jb
lret
mov
stc
roll
sub
add
mov
data16
adc
push
sbb
out
fidivrs
mov
ds
dec
daa
ret
ret
std
scas
out
cmp
add
testb
inc
and
mov
sarl
dec
testb
add
mov
xor
add
add
shll
int3
ja
add
xor
fsubrl
rolb
dec
sub
add
inc
add
lods
and
test
add
mov
sub
cmp
fbld
add
jbe
fidivrl
popa
addr16
scas
cmc
xchg
add
stos
testb
inc
cwtl
and
mov
jg
mov
pop
icebp
in
mov
scas
mov
add
add
add
iret
add
add
add
add
jbe
fcoml
adc
arpl
add
add
mov
add
jg
add
lods
ds
xchg
add
add
add
add
call
add
pushf
xchg
add
pop
jnp
lret
mov
mov
bound
mov
add
dec
pop
and
cwtl
cld
scas
cld
mov
cltd
mov
and
mov
aaa
test
add
add
mov
add
cmp
add
inc
add
push
xchg
addb
sub
mov
pop
mov
add
add
rorl
mov
mov
mov
dec
movb
clc
test
mov
in
cwtl
jb
popa
pop
add
add
push
add
icebp
add
and
mov
mov
adc
enter
fwait
aam
add
bound
mov
out
les
fnstenv
iret
int
popa
stos
mov
add
pop
and
add
sub
sbb
mov
das
pop
outsb
push
add
add
imul
and
mov
aad
adcl
mov
aad
add
cmp
dec
gs
sbb
mov
push
scas
mov
loopne
leave
pop
sub
push
add
hlt
add
ficompl
sbb
sbb
in
push
add
fs
push
add
int
leave
mov
add
imull
add
or
mov
dec
sub
xchg
push
lret
test
int
mov
mov
push
jecxz
mov
cmp
add
repnz
mov
pop
lea
roll
add
mov
sti
add
lret
add
ret
sub
test
add
adc
enter
js
fcmovnu
scas
mov
mov
xchg
add
mov
add
add
add
cwtl
lcall
add
mov
add
out
mov
xor
aam
loope
dec
rol
out
mov
push
add
call
fcmovne
xor
xlat
int
out
aam
leave
addb
add
mov
inc
add
mov
mov
add
cmp
addb
add
push
pop
mov
add
add
lret
sbb
scas
push
add
fwait
adc
fnsave
andl
daa
scas
cwtl
jecxz
stos
push
or
add
add
mov
lock
add
mov
orl
add
out
cmpsb
add
gs
xor
add
xor
pop
gs
pop
js
adc
std
push
xorl
adc
addb
add
aaa
lods
sbb
insb
mov
xchg
sbb
add
xor
adc
fistl
rolb
or
mov
pop
cltd
xchg
adc
inc
jmp
add
ja
sbb
lea
add
stos
mov
int
popf
xchg
jnp
xchg
popa
and
xchg
lea
mov
jle
sbbl
add
push
lcall
and
adc
add
mov
push
or
push
sbb
fisubs
xchg
cli
icebp
insl
mov
sub
add
aas
aaa
jo
std
dec
or
inc
repz
sbb
int
mov
add
call
data16
gs
lret
add
mov
scas
mov
add
xchg
stos
lods
cmp
add
mov
and
sbb
adc
repz
fsubs
jecxz
out
dec
sub
mov
push
add
jno
mov
lock
push
loop
mov
dec
xchg
add
add
add
add
add
test
add
cld
cmp
add
jbe
lds
or
add
nop
add
sti
inc
push
add
add
mov
bound
mov
add
add
push
add
add
test
fsubrs
leave
sbb
add
fmulp
insb
in
sbb
add
add
add
out
gs
add
mov
add
mov
inc
dec
popa
jp
loop
cmp
jae
inc
add
leave
mov
decb
lock
push
and
stos
lods
data16
push
jmp
add
mov
or
xchg
jnp
mov
cmpsb
add
addb
xor
cmp
arpl
add
add
add
out
xor
push
xor
cmp
add
sbb
add
cs
or
inc
xchg
lahf
imul
pop
bound
mov
mov
aaa
cmp
add
mov
ja
add
mov
hlt
add
std
ljmp
push
cmp
add
inc
dec
mov
add
test
jge
add
add
add
and
mov
inc
mov
std
add
insl
and
add
cmc
and
aam
cmp
dec
push
add
fdivrl
inc
pop
mov
sbb
inc
add
fidivs
test
cpuid
add
mov
fstpt
add
pop
adc
pop
cmp
inc
add
add
pushf
gs
insl
lea
mov
pop
sub
lret
movb
add
xchg
push
add
add
add
add
test
jl
cli
mov
xchg
sbb
sub
xlat
add
aas
push
fs
addr16
leave
add
mov
dec
out
fucomp
mov
add
aaa
outsb
rolb
push
add
sub
xchg
pushf
add
adc
sbb
add
clc
addb
add
jnp
in
sbb
outsl
jb
add
mov
addl
add
popa
stc
shll
add
ds
jmp
fists
lret
xor
adc
pop
aaa
sbb
add
dec
mov
adc
js
fwait
pop
out
sub
lret
and
jl
enter
iret
aam
xor
mov
add
jmp
add
xchg
add
add
add
xchg
out
jno
add
mov
inc
pop
or
add
add
xlat
mov
xor
outsb
rolb
mov
test
jmp
add
add
adc
enter
add
add
lcall
add
mov
out
fimull
add
mov
xchg
add
inc
inc
add
rolb
xlat
insl
add
add
fimuls
fsubrl
add
add
add
xchg
add
aad
mov
xchg
push
mov
add
outsb
push
aas
call
add
mov
xor
loopne
jae
lret
out
outsb
dec
add
add
add
jge
jmp
add
xor
clc
pushf
jnp
add
mov
add
cmp
add
lret
incl
pop
xchg
and
pusha
add
add
add
sub
movsl
mov
add
mov
add
add
jle
dec
jle
inc
fiadds
add
cmp
ljmp
repnz
mov
outsb
sbb
add
popf
push
add
mov
add
fnstenv
add
mov
jo
push
add
mov
pop
dec
inc
add
and
add
fistpll
add
int
jb
sbb
cli
jp
and
mov
aaa
xchg
adc
jbe
mov
xlat
repz
or
out
xchg
shrl
fsubrs
mov
in
cmp
and
mov
add
mov
inc
add
add
adc
and
cld
add
mov
add
mov
add
pop
addr16
jg
dec
mov
sub
or
sbb
fldcw
add
mov
add
call
add
add
lods
jle
pop
push
add
add
movsl
mov
add
add
outsl
push
repz
add
movb
dec
mov
add
add
sahf
sbb
sub
add
push
mov
add
rolb
bound
mov
fsubrs
arpl
add
add
loopne
sub
push
add
xor
add
add
imul
add
incl
add
push
xlat
mov
testb
push
pop
out
pop
aam
pusha
add
data16
add
iret
addl
add
xor
sbb
add
test
push
push
add
sbb
add
add
xlat
cmc
pop
sub
test
dec
add
mov
clc
xchg
add
push
add
add
lods
push
iret
outsl
pop
ficomps
jnp
test
loope,pt
rolb
xchg
rolb
xchg
cmp
and
mov
add
xor
sbb
xchg
in
mov
les
or
xchg
inc
mov
dec
push
add
or
add
nop
add
mov
nop
add
gs
loopne
sub
add
lret
push
daa
call
add
or
add
add
insb
flds
outsl
pop
mov
notl
outsb
xchg
lcall
cmpl
in
rsm
scas
aaa
loopne
inc
or
fwait
xor
clc
push
mov
cmpsb
add
scas
add
pop
xor
addb
add
gs
out
add
push
add
add
mov
fwait
mov
in
insb
push
jbe
xlat
or
add
xor
mov
cli
pop
cmc
push
add
mov
and
dec
das
scas
dec
push
add
dec
mov
ret
add
add
fwait
or
add
add
pop
mov
add
adc
or
lock
test
jge
movb
add
push
add
mov
out
push
add
sub
sti
and
mov
and
cmp
mov
add
mov
test
push
add
mov
addr16
daa
mov
add
inc
add
add
jecxz
repz
out
xchg
add
std
sub
add
add
enter
mov
paddsw
mov
popf
mov
add
inc
inc
lret
aam
jo
xchg
fmul
mov
inc
add
or
inc
add
add
repz
mov
mov
xchg
add
xor
add
data16
cmp
movb
dec
rolb
stos
imul
mov
lods
jmp
movsb
add
bound
mov
pop
mov
add
and
sbb
xor
data16
mov
add
or
aam
insl
sub
enter
data16
loope
add
add
mov
sub
lea
pusha
add
lock
sbbl
add
jl
popf
or
push
mov
add
xorl
std
jnp
btr
rolb
inc
add
sub
imul
add
mov
dec
fists
pop
or
cli
xchg
add
pusha
add
ljmp
jnp
add
add
mov
cld
fs
cmp
mov
cld
xor
pop
mov
aam
addr16
popa
push
jg
add
adc
add
popf
inc
add
imul
shll
cld
ret
sbb
xor
leave
adc
mov
lods
mov
add
sbb
popa
lea
add
push
bound
mov
xchg
add
add
add
dec
cmp
jmp
cmc
adc
jns
vmovhpd
in
fistl
sbbl
xor
push
add
jno
addb
add
mov
and
test
xchg
add
loope
add
and
idiv
out
adc
mov
dec
inc
outsl
mov
test
dec
add
sbb
rolb
icebp
icebp
mov
inc
add
add
add
ret
inc
sbb
mov
addb
fs
test
scas
hlt
add
sbb
add
aad
notl
lods
addl
mov
pop
sbb
fdivr
jo
or
and
mov
ljmp
mov
jecxz
push
lds
mov
je
dec
lahf
xchg
mov
jb
jl
xchg
popf
ret
adc
xchg
mov
add
jmp
pop
mov
in
add
add
add
xor
pop
outsl
sbb
outsl
dec
pop
xchg
mov
add
add
add
add
pop
mov
lcall
int3
push
nop
add
mov
add
xor
add
mov
cltd
popf
mov
add
mov
add
es
pop
sub
insl
sbb
add
test
fdivrl
aam
push
mov
out
enter
push
add
lea
pop
lods
add
mov
xchg
adc
add
faddl
adc
les
aad
addb
mov
cmp
rolb
enter
xor
mov
test
dec
dec
insb
mov
daa
xor
lret
mov
and
add
mov
add
push
stos
mov
les
xlat
in
adc
leave
lods
in
in
fisttps
mov
jg
adc
sub
inc
sbb
loop
xchg
add
cmp
mov
cmp
add
add
cs
sbb
addb
fildl
xchg
add
mov
dec
inc
add
add
adc
mov
push
add
or
sbb
add
lret
jge
add
mov
cld
mov
rolb
lret
sub
push
dec
jnp
add
loopne
pop
cmp
xor
int
fcompl
call
xlat
addb
insb
add
add
add
in
movsl
sti
sti
mov
add
mov
add
sub
xchg
ja
sbb
add
jne
fisttpl
add
ret
dec
movsb
add
mov
xor
adc
add
nop
add
add
nop
add
xlat
addr16
addr16
clc
outsl
jge
jg
push
add
add
add
leave
push
add
and
and
add
xchg
add
add
cmp
das
fcoms
lea
mov
out
adc
xor
xchg
push
add
pop
adc
repnz
add
cld
icebp
and
or
sub
jg
addb
add
add
mov
xlat
jo
dec
aas
sbb
sti
cmp
fdivrs
sub
add
jle
mov
add
xchg
add
adc
pop
mov
pop
mov
testb
dec
das
xor
sub
outsl
inc
add
or
mov
mov
xchg
aad
add
add
push
adc
scas
or
jae
add
pushf
mov
movb
sbb
mov
push
movsb
add
rolb
adc
xchg
add
add
test
add
mov
xchg
inc
push
add
mov
add
popf
insb
test
mov
cmpsb
add
jmp
mov
inc
add
mov
add
mov
mov
add
cwtl
sbb
mov
push
add
xchg
sahf
scas
cli
sti
das
cmp
jno
lret
icebp
pop
mov
add
movsl
dec
into
cmp
add
nop
add
and
sbb
add
inc
add
push
cmp
sti
or
add
add
imul
or
add
mov
lock
add
jnp
scas
mov
aas
lret
in
fwait
sub
test
adcl
dec
bound
mov
fsts
or
in
pop
cmpsb
add
add
call
pop
lahf
inc
jge
aad
add
push
add
outsb
pop
and
jne
les
mov
ljmp
add
xchg
add
scas
cmpsl
ja
outsb
mov
add
add
insl
scas
hlt
add
cmp
add
xchg
add
add
add
add
scas
or
add
add
push
add
cwtl
or
cmc
push
add
iret
pop
and
mov
push
add
in
rolb
pop
jb
mov
xor
adc
add
mov
add
cmc
mov
mov
addb
lock
aas
lret
push
lret
xchg
add
add
inc
add
call
add
add
fdivrl
mov
cs
addb
pushf
hlt
add
cs
dec
add
mov
add
push
add
loopne
test
std
ret
mov
add
adc
add
lret
add
imul
rolb
pushf
cld
xor
xor
insl
aad
add
out
scas
mov
cmp
mov
or
add
sub
fucomi
mov
add
mov
fcomps
mov
hlt
add
add
jae
add
inc
lea
add
add
cmpsl
inc
or
outsl
xchg
add
xor
fistps
add
lcall
cs
scas
scas
js
add
movb
add
add
insl
inc
add
mov
int3
test
les
and
sbb
add
fidivl
add
sbb
add
or
mov
test
je
out
ja
rcll
add
stos
adc
mov
cmc
ret
ret
dec
dec
out
push
add
fcomps
shll
addb
xchg
jle,pt
add
or
cmp
int3
and
repz
sub
les
ds
jbe
nop
add
mov
dec
or
sti
mov
out
add
subl
mov
add
aad
push
fdivs
lods
or
add
call
hlt
add
pop
mov
shll
movsb
add
xchg
add
mov
add
scas
insb
repnz
add
add
jecxz
in
rorl
lea
ret
cltd
pop
adc
jmp
sbb
add
jbe
mov
add
add
das
pop
pop
xchg
add
faddl
jecxz
insb
fs
js
sbb
add
dec
xchg
mov
inc
push
add
std
je
mov
push
add
lahf
adc
mov
jnp
negl
dec
or
std
mov
lahf
push
inc
mov
inc
mov
mov
test
scas
dec
dec
dec
aam
dec
leave
push
inc
mov
push
add
mov
add
in
lds
decl
add
add
sub
mov
cmpsl
mov
sub
dec
int3
push
add
mov
add
cmp
add
fwait
nop
add
jge
add
aas
push
add
lods
stos
testb
ret
sub
ja
or
mov
sub
mov
and
add
mov
insl
fiadds
mov
cwtl
lods
cmp
cmp
add
and
cmp
pusha
add
sahf
insb
loope
call
jg
nop
add
add
data16
mov
jne
add
fstpt
movb
push
rcrl
inc
add
xor
mov
dec
mov
xor
and
inc
dec
mov
insl
sbb
add
inc
add
lcall
shrl
incb
rol
rcr
scas
adc
add
push
add
add
dec
push
enter
add
add
sub
int
xchg
add
rolb
inc
add
in
xor
adcl
nop
add
gs
add
add
movsb
add
add
add
pop
lcall
ja
add
sbb
add
inc
add
mov
add
cmp
push
mov
sbb
nopl
lock
mov
stos
bound
mov
add
andl
mov
cmp
add
adc
movsl
jo
fisubl
mov
roll
jg
add
inc
clc
ret
mov
xchg
inc
add
cmp
cld
negl
push
pop
js
jmp
repz
or
nop
add
or
add
xor
and
rolb
je
xor
pop
lea
jns
rolb
dec
js
xchg
aad
add
out
mov
and
mov
add
outsl
dec
test
add
inc
add
jmp
mov
sbbl
jne
iret
mov
add
mov
add
sub
cmp
adc
mov
std
pusha
add
mov
addb
cmp
add
adc
and
mov
add
mov
mov
rolb
push
add
movq
testb
add
iret
stos
pop
and
mov
xchg
add
add
add
inc
add
add
and
push
add
xchg
in
std
ljmp
stos
jne
pop
js
ret
mov
add
iret
push
add
add
in
adc
jne
push
push
aaa
sahf
pop
xchg
add
arpl
add
add
insb
hlt
add
in
xor
cmp
sub
out
push
and
mov
sbb
add
icebp
mov
mov
jmp
adc
das
mov
inc
or
add
pop
stos
or
stos
pop
stos
hlt
add
rolb
out
jne
and
sbb
xchg
xor
add
push
add
cmp
add
add
cmp
sti
xchg
into
in
in
test
loope
cld
dec
clc
sbb
add
in
sahf
lods
dec
mov
cmp
add
mov
add
xchg
test
mov
and
in
jae
add
repnz
xor
sub
add
xlat
adc
cmpsb
add
lahf
jbe
movaps
lret
cs
sub
in
add
add
pop
pop
push
lahf
or
sbb
aas
cmp
imul
sahf
mov
test
dec
mov
push
add
clc
js
add
push
add
pusha
add
push
add
lods
cmp
out
gs
loopne
movsb
add
cmpsb
add
push
add
dec
rorl
add
mov
ja
adc
jg
add
enter
out
add
and
add
jno
pop
push
and
add
js
loope
mov
add
sahf
dec
fcmovb
or
cmc
dec
mov
add
add
add
bound
mov
mov
xor
aaa
fdivrl
mov
mov
mov
pop
rcrl
lcall
xor
jg
das
lea
add
aas
dec
xchg
aaa
xchg
push
inc
add
enter
push
add
pop
imul
dec
fisttps
add
mov
int3
fisubl
add
outsl
xchg
add
add
ja
add
add
sub
pop
stos
rolb
dec
loope
xor
mov
add
cmp
add
ljmp
fdivrs
clc
in
mov
jb
push
add
cmp
add
add
aaa
sti
push
xchg
add
movb
sti
fiadds
xchg
add
push
push
mov
add
adc
test
push
sbb
leave
or
mov
add
add
pop
mov
rolb
loop
or
cmc
mov
lock
sahf
push
xor
add
add
add
jp
dec
loop
popf
out
daa
sub
mov
mov
pushf
mov
xor
bound
mov
out
fsub
add
add
mov
add
add
es
rolb
and
fs
cwtl
addb
decl
add
add
and
and
lahf
xchg
add
add
shrl
inc
add
jle
test
add
add
add
add
fisubl
or
add
or
mov
cmp
or
xchg
add
mov
add
lods
cs
cmp
add
sub
insb
addb
gs
add
arpl
outsl
pop
out
inc
mov
add
mull
jnp
sahf
push
add
mov
popa
pop
icebp
cmc
test
stc
fisubs
test
add
pop
addb
add
lcall
add
add
add
fcom
adc
leave
xchg
add
add
mov
xchg
xor
xchg
loop
mov
dec
mov
cltd
mov
rolb
add
xor
cltd
pop
push
add
or
add
add
fstpt
add
and
add
int3
call
addb
icebp
out
sub
push
adc
pop
ret
add
mov
xor
mov
add
leave
push
xor
xchg
jne
add
and
mov
lret
lods
testb
mov
xor
lea
dec
jo
iret
lret
pop
pushf
clc
jg
add
push
add
dec
std
push
es
dec
movl
je
fldl
add
dec
lock
add
sub
add
mov
pop
fnstsw
mov
jae
in
lods
mov
fsubs
inc
incl
movsb
add
mov
add
add
adc
mov
mov
add
addb
lret
ret
pop
testb
pop
and
mov
mov
xchg
xor
popf
icebp
jb
aad
mov
or
mov
push
jle
add
cmp
add
imul
loop
iret
mov
push
add
adc
xchg
add
mov
mov
xor
mov
sub
inc
add
push
add
xchg
add
jno
jg
adc
dec
testb
sbb
add
mov
mov
pushf
push
add
inc
add
mov
and
loopne
out
loopne
pop
push
aad
addb
add
xor
add
movb
cmpsb
add
push
hlt
add
mov
adc
popa
push
sub
add
jg
stos
shll
lcall
cmp
testb
dec
push
add
add
cld
mov
add
and
cmpsb
add
aam
leave
xchg
add
daa
mov
mov
jecxz
shll
jp
int
int3
imul
das
mov
xchg
cmpsb
add
mov
addb
xor
and
mov
popf
movsl
pop
loope
ret
sub
bound
mov
add
test
adc
jmp
push
dec
sbb
fldl
mov
xchg
jae
dec
cvtdq2pd
cli
mov
dec
pushf
movsb
add
inc
les
ret
add
xchg
mov
ret
pop
push
adc
mov
test
xchg
enter
mov
push
add
pop
imul
push
add
pop
nop
add
dec
enter
dec
scas
and
into
lret
push
dec
aam
pop
aad
xchg
pop
lahf
mov
jp
call
and
int3
mov
sbb
add
add
int
mov
les
adc
lcall
and
add
mov
add
add
mov
movb
xor
mov
adc
add
add
pop
movb
push
mov
jmp
add
loop
inc
add
movb
add
add
addb
fwait
cmpsb
add
fimull
add
mov
add
mov
add
dec
inc
add
rolb
pop
jle
mov
sbb
inc
mov
in
ljmp
cmpsb
add
jo
dec
and
mov
aad
mov
pop
cmp
in
test
rolb
add
mov
push
add
sarl
mov
xor
shll
xor
sbb
rolb
ret
push
add
pop
fisttps
mov
int3
inc
jae
add
jns
add
push
xor
or
js
add
fidivl
push
xchg
add
mov
xor
mov
lcall
add
movsb
add
push
sbb
je
movsl
pop
xchg
inc
or
jg
add
add
add
fwait
leave
cmc
sbb
inc
add
add
mov
add
add
enter
not
rolb
cmp
jno
mov
xchg
add
jl
cwtl
sub
pop
fildll
xor
cmpsl
in
insl
jg
fadd
iret
addr16
mov
mov
push
dec
iret
jne
add
add
jge
dec
movsl
imul
add
add
push
sbb
cltd
test
stos
test
scas
lahf
repnz
into
jg
add
add
aas
inc
add
push
add
sbb
lock
sub
mov
mov
add
add
add
or
add
inc
sub
mov
jae
jo
push
and
jg
add
add
decl
adc
sbb
sbb
pushf
add
mov
cs
and
jp
or
mov
add
add
add
mov
out
movsl
add
ficoms
testb
adc
addr16
or
fs
adc
out
xchg
add
stos
xlat
jae
stos
mov
sbb
add
xchg
in
jno
imul
clc
mov
ficomps
pusha
add
lds
add
rolb
pop
std
xchg
add
xlat
mov
add
xchg
add
add
adc
push
xchg
insb
pop
sub
pop
popa
mov
mov
mov
add
mov
inc
std
or
inc
pop
in
adc
sbb
jmp
pushf
int3
inc
inc
add
add
add
xor
and
mov
dec
int
sbb
mov
xchg
sti
test
lahf
in
xor
xchg
add
sbb
cld
les
and
mov
xchg
add
fnstsw
add
enter
pop
in
pop
out
int
add
loop
pop
leave
add
push
mov
int3
sbb
add
mov
repnz
jnp
repz
add
pop
mov
add
add
pop
enter
scas
je
push
stos
mov
xchg
add
add
add
xor
xchg
iret
xchg
scas
gs
push
add
push
rolb
mov
cmc
imul
les
cmp
add
add
daa
int3
sbbl
push
add
adc
lret
and
mov
push
add
adc
in
dec
into
data16
xchg
add
mov
mov
jb
fwait
mov
push
outsl
xchg
outsl
jp
adc
jmp
add
xchg
add
rolb
int3
adc
test
pop
pop
popa
push
add
aas
xlat
test
add
or
or
add
add
add
leave
sahf
cmp
add
add
pop
sub
cmpsb
add
add
push
add
outsb
test
int3
dec
jmp
add
add
arpl
push
add
aam
leave
xor
add
rolb
add
mov
push
add
mov
add
mov
xorl
out
lcall
rolb
shll
cmc
or
xchg
sub
filds
add
add
subl
add
cmp
das
stos
out
aas
jns
std
ret
add
xchg
add
inc
add
int3
mov
bound
mov
or
cmpsb
add
lds
xchg
loop
mov
mov
mov
add
hlt
add
jmp
add
out
inc
add
in
rolb
insb
outsb
mov
fistpl
cmp
ret
xor
loop
mov
mov
add
sbb
push
add
add
jb
sbb
cmp
stos
jae
add
movb
adc
adc
pop
arpl
pop
sbb
data16
xchg
fstps
add
out
movsb
add
ds
add
daa
lcall
push
add
mov
into
aam
push
add
imul
add
clc
call
add
sbb
mov
rcrl
add
mov
jo
out
sbb
add
lock
add
xor
inc
add
sbb
add
mov
add
add
lock
rorl
add
add
mov
add
mov
lods
add
aas
nop
add
sub
mov
fwait
jnp
add
add
add
mov
mov
add
add
add
push
dec
lahf
das
mov
adc
out
push
into
xchg
add
aad
add
add
mov
add
addps
add
int
jl
jb
sub
push
add
add
iret
mov
add
pop
push
add
sub
in
das
cmc
call
aas
inc
mov
cmp
cmp
mov
stc
lahf
inc
sahf
imul
cmp
add
mov
add
daa
mull
fistpl
inc
adc
add
inc
mov
pop
inc
add
pop
ds
xchg
imul
mov
dec
mov
data16
into
arpl
lret
add
fnsave
add
adc
add
add
add
add
pop
jmp
ret
repz
add
add
int3
rsm
pop
in
pop
inc
bound
mov
add
adc
rolb
mov
mov
mov
stos
sub
rcrl
inc
add
add
mov
loope
int
movsb
add
rolb
add
mov
lods
xchg
inc
andl
jecxz
add
push
add
xor
jp
add
add
mov
loop
push
add
popa
sbb
push
ja
bound
mov
jmp
cmp
jmp
mov
or
jns
je
mov
adc
scas
dec
mov
cmp
cmp
pop
js
jo
pusha
add
movsb
add
add
scas
mov
out
call
adc
or
mov
pop
adc
sub
xchg
add
adc
cld
and
mov
mov
add
add
mov
add
pop
pop
sbb
insb
xor
mov
jns
add
fnsave
loop
xor
cmp
push
ret
ljmp
sbb
add
mov
add
mov
add
mov
sbb
add
jno
mov
repnz
xor
leave
add
imul
frstor
add
mov
push
add
inc
in
mov
das
mov
out
outsb
je
add
add
add
std
and
or
dec
rorl
and
add
imull
pop
imul
dec
jbe
aad
icebp
mov
add
pop
ja
ret
dec
in
fidivrs
ljmp
fadds
add
add
add
outsb
int3
test
add
ljmp
mov
add
insb
jl
add
add
dec
sti
lods
or
inc
push
cmp
and
add
and
mov
add
dec
mov
add
pop
movb
ret
mov
clc
xchg
dec
and
push
add
add
cwtl
jmp
shll
loope
mov
ds
call
nop
add
cli
aaa
fstl
test
pop
dec
stos
mov
add
jae
ja
cmc
ljmp
out
push
add
jns
push
aas
sub
hlt
add
add
push
dec
adc
add
ds
inc
add
xchg
sbb
add
sahf
add
test
sub
inc
add
add
aas
fcmovb
je
pop
popa
xlat
mov
xchg
add
add
cmp
add
jge
adc
ret
rolb
mov
stc
jecxz
pop
sub
popa
aas
test
push
fildl
fisttpll
mov
clc
lods
outsl
mov
fneni(8087
add
imul
jg
dec
cmpsl
movb
rolb
xchg
out
xor
fstpl
jle
mov
ret
pop
lcall
rep
mov
addb
add
lock
mov
mov
loopne
jne
out
lods
sbb
adc
outsl
push
add
add
add
add
out
in
insl
pop
popf
ret
mov
icebp
xchg
mov
add
push
out
cmp
mov
add
push
add
and
loope
dec
add
add
cmp
out
decb
sbbl
inc
fmull
add
add
cs
sti
xor
fistps
add
pop
or
dec
pop
int
jl
ljmp
push
loop
sub
add
add
in
add
cmp
jecxz
adc
cwtl
lcall
lods
aad
loop
sti
in
xor
xchg
jae
pop
mov
inc
add
movb
inc
or
mov
add
add
mov
xor
repnz
pop
adc
add
daa
and
out
cli
rolb
lock
add
mov
add
mov
adc
sub
xor
mov
stc
jg
dec
scas
push
mov
inc
sub
add
add
xor
cmp
test
add
mov
call
cmp
cli
cli
inc
jae
mov
add
add
inc
inc
popf
xchg
fists
imul
push
std
xor
inc
add
add
xor
pop
dec
add
fwait
sbb
push
add
nop
add
add
add
mov
add
xchg
cltd
jp
in
rolb
xor
sbb
test
add
mov
test
int3
ficoml
add
add
add
add
stos
dec
xor
add
rolb
xor
lret
mov
mov
dec
pop
push
aad
add
mov
xor
mov
outsl
hlt
add
push
sub
add
sti
mov
ret
mov
ljmp
popf
pusha
add
xchg
dec
or
int3
dec
rolb
testb
xchg
fwait
mov
lea
adc
imul
inc
add
lret
insl
mov
pop
inc
add
and
mov
out
jle
lds
mov
out
aad
mov
mov
add
hlt
add
add
mov
sbb
test
jecxz
dec
xchg
add
test
mov
icebp
xchg
ret
lods
jb
js
cmc
hlt
add
aaa
leave
fidivrl
in
jle
add
outsl
dec
mov
lock
add
add
decl
test
dec
les
nop
add
fidivrl
add
mov
push
add
sti
pop
adc
les
dec
mov
add
push
jmp
int3
mov
push
rolb
rorl
add
aad
add
add
das
ret
inc
stos
movsl
ret
ret
xor
stc
cmp
addb
add
add
mov
push
add
jnp
add
xchg
xchg
add
adc
add
mov
xor
enter
add
mov
lds
add
add
push
dec
xchg
add
js
cwtl
addb
in
xchg
add
icebp
pop
pop
xor
dec
push
add
add
je
push
add
addb
add
add
test
mov
mov
int
mov
mov
scas
mov
mov
add
icebp
js
xchg
add
add
aaa
leave
sub
sbb
test
pop
int3
fiadds
xchg
add
scas
loopne
ficomps
leave
mov
pop
dec
lds
xor
or
sub
cs
or
movsb
add
add
adc
add
testl
mov
leave
pushl
in
mov
add
scas
add
cmp
add
add
cs
je
push
add
ror
push
add
add
sbb
dec
push
pop
scas
xchg
add
mov
add
inc
xchg
xor
outsb
lcall
in
in
or
xlat
clc
push
clc
push
jb
lock
daa
sbb
bound
mov
or
pop
inc
push
add
add
aas
inc
add
cwtl
push
inc
mov
jmp
dec
mov
pop
lahf
pushl
add
add
rolb
xchg
adc
aaa
out
push
push
add
nop
add
push
mov
jae
jno
cwtl
sti
test
add
je
sbb
jle
add
scas
pop
mov
dec
fnstsw
sbb
sbb
xchg
push
add
xchg
add
lahf
mov
fiadds
leave
xor
dec
ljmp
lods
aas
add
add
dec
out
cmp
fcompp
pop
or
out
cltd
or
mov
pushf
mov
add
addb
push
dec
lea
clc
cmp
sarl
mov
add
add
ja
jns
sbb
jle
add
add
add
push
arpl
icebp
lcall
add
jge
repz
add
inc
or
and
mov
dec
inc
mov
arpl
add
sub
mov
xchg
stc
les
pop
pop
push
add
push
out
jecxz,pt
add
xor
adc
add
add
lock
jno
add
pop
xor
repz
add
add
cmp
pop
fisttpll
das
mov
jno
mov
in
add
insl
mov
dec
add
add
test
add
mov
lret
sbb
xchg
inc
jmp
add
and
mov
xchg
mov
add
xor
add
add
add
cli
add
mov
rolb
fcoms
stos
cmp
push
jmp
dec
aas
repnz
pusha
add
sbb
lock
add
aaa
xor
add
sbb
rcll
pop
mov
fists
mov
test
mov
addb
pop
js
pushf
dec
dec
cmc
add
popa
dec
add
fadd
into
sbb
repnz
mov
add
fldl
add
inc
call
mov
mov
iret
xchg
add
push
push
add
or
mov
call
add
faddl
add
je
mov
or
aaa
xchg
das
test
add
sbb
adc
pop
xor
mov
fidivrl
push
add
int3
sbb
add
mov
add
jns
fcoml
add
rolb
dec
hlt
add
push
or
add
inc
add
add
add
cltd
sbb
mov
scas
jp
xchg
add
add
add
xchg
add
add
jo
dec
addb
add
mov
add
outsl
add
nop
add
add
cmp
mov
add
add
into
and
mov
pop
popa
inc
add
inc
nop
add
push
pop
aas
cltd
les
ret
add
add
jl
push
add
push
cld
pushf
iret
rolb
leave
in
rolb
push
push
int3
add
add
pop
mov
add
fsubrl
stc
sub
rolb
movsb
add
or
push
out
sbb
cmp
add
mov
mov
in
clc
imul
and
sub
je
jns
push
mov
add
push
imul
fsubrs
sbb
cmp
stc
fwait
je
subl
cmp
mov
add
mov
add
pushf
enter
insl
inc
mov
and
int3
dec
pop
fbstp
xchg
mov
arpl
adc
jl
iret
mov
push
lods
or
or
push
mov
lret
mov
add
into
xchg
jno
mov
add
rorl
enter
add
xchg
in
xchg
jge
add
fiadds
add
add
xchg
add
add
add
add
xchg
add
or
outsb
outsl
aad
ljmp
lods
push
and
mov
mov
call
in
push
jns
mov
cmp
aam
lods
loop
sbb
add
mov
rolb
rolb
pop
sbb
add
mov
mov
add
mov
test
call
mov
add
iret
sub
mov
popf
daa
or
xor
add
pop
rcrl
add
add
add
xor
rolb
mov
adc
add
inc
push
jnp
dec
push
sbb
cli
pop
sbb
outsb
into
movsb
add
in
xchg
shll
clc
lret
add
push
push
add
rcr
mov
out
and
add
add
out
push
leave
cli
push
mov
pushf
and
mov
mov
add
mov
jno
mov
or
sti
xlat
add
add
mov
hlt
add
repz
leave
xor
cmc
or
out
dec
mov
sub
jno
cmp
rolb
push
add
add
adc
pop
jle
stos
lds
mov
add
jno
and
add
and
mov
add
mov
dec
inc
add
movsl
mov
xor
jns
add
fwait
enter
pop
rcll
add
fstp
mov
mov
jmp
sbb
cmp
lret
add
add
mov
add
add
add
jl
add
stos
xchg
inc
add
mov
add
dec
rolb
sbb
pop
sbb
insl
and
mov
mov
add
add
add
pop
fidivrs
dec
add
jae
dec
add
incl
imul
push
add
sub
mov
jns
mov
push
lret
inc
aad
fwait
mov
fsubrs
add
dec
neg
out
add
or
add
add
jns
mov
adc
lds
lds
imul
add
inc
add
lret
or
push
add
add
adc
xor
add
jge
jae
aas
push
add
add
xchg
mov
add
and
inc
add
push
xlat
and
lcall
fldt
ficomps
pop
les
ret
sbb
add
dec
fnstenv
adc
repnz
add
ficompl
lods
subl
add
add
add
arpl
add
mov
mov
push
imul
negl
mov
lret
cmc
addb
xchg
in
or
mov
cmpsb
add
lcall
jnp
mov
test
sarl
add
mov
add
fmull
loope
inc
add
cmp
jno
sub
addb
pop
pushf
pop
dec
mov
add
mov
stos
data16
test
jl
mov
rol
mov
sarl
mov
cmpsl
call
add
into
xchg
xlat
out
mov
enter
inc
add
add
add
adc
insb
push
add
ljmp
loopne
sbb
rcrl
repz
stc
aam
imul
xlat
sub
mov
shll
mov
lcall
add
inc
add
mov
mov
notl
loop
xchg
mov
mov
inc
add
push
add
add
lods
adc
faddl
add
popf
jmp
icebp
test
add
add
sbb
sahf
testb
outsl
movsb
add
add
mov
adc
sahf
rolb
mov
cwtl
pop
rol
add
test
rolb
mov
jp
add
add
mov
clc
aaa
mov
out
mov
mov
add
add
add
add
aaa
adc
movsb
add
mov
rolb
cmp
add
popa
les
pop
bound
mov
add
pushf
test
jns
popf
lds
xchg
add
fldt
xchg
add
stc
cmp
cmp
add
mov
mov
add
jmp
add
stos
pop
xlat
inc
add
or
push
add
mov
jecxz
add
int3
rcll
int
test
pop
jae
adc
sub
inc
add
jbe
sahf
enter
scas
mov
xor
test
push
add
add
add
clc
push
nop
add
push
bound
mov
xchg
mov
ret
xchg
xor
inc
sbb
repz
add
xor
inc
add
mov
push
pop
jmp
add
into
and
or
mov
lcall
add
rolb
push
add
addb
add
cmc
rolb
dec
lock
cmp
test
fildll
mov
mov
frndint
add
push
test
add
mov
or
mov
mov
add
xchg
add
sbb
std
into
lcall
sbb
loope
add
cmp
xlat
movb
inc
lds
add
sbb
mov
jno
dec
movsb
add
les
jbe
jmp
dec
xor
add
fbstp
add
mov
inc
inc
add
loopne
push
add
mov
mov
add
push
pop
call
add
add
test
mov
ljmp
xchg
add
and
and
movsb
add
add
push
add
add
mov
add
add
jl,pt
pop
dec
arpl
mov
add
add
add
jnp,pn
icebp
mov
pop
sub
sub
sahf
fsts
sbb
sahf
inc
push
lock
ficompl
mov
mov
add
cmp
dec
pop
ja
or
add
data16
add
sub
adc
add
add
add
test
cli
lcall
scas
xchg
add
xor
push
add
and
mov
and
mov
add
data16
jae
jnp
push
mov
add
bound
mov
dec
ljmp
add
mov
aad
add
bound
mov
add
loopne
mov
inc
or
add
sub
pop
inc
add
or
nop
add
lock
aaa
mov
jle
add
pop
stc
jnp
pop
arpl
sbb
mov
mov
add
addb
inc
add
xchg
add
push
add
add
testl
cs
lds
jne
testb
cmp
sbb
sbb
nop
add
add
mov
pushf
pusha
add
pop
movsl
fmul
into
add
orl
in
mov
add
mov
add
mov
xchg
add
and
roll
add
add
add
std
adc
cld
push
add
add
xchg
cmc
out
push
mov
pusha
add
add
xchg
incl
jno
jo
ds
jnp
insl
sub
rolb
push
sub
sub
mov
jb,pn
addb
mov
add
add
push
movsl
ficomps
add
add
fdivrs
add
cmpsb
add
je
dec
popa
adc
mov
and
add
sub
add
mov
cmp
add
add
testb
or
pop
idivl
add
xchg
cmp
stos
xchg
rolb
lods
roll
add
rorl
mov
add
rolb
testb
loope
add
xlat
mov
or
add
dec
sub
or
add
dec
inc
add
movsl
dec
gs
std
sub
cmp
xchg
add
mov
adc
cmc
and
call
lea
hlt
add
call
mov
add
add
lock
add
add
stos
out
inc
add
in
sub
mov
sti
decb
mov
test
mov
inc
mov
scas
aaa
adc
push
push
add
cmc
in
dec
outsb
inc
jbe
add
in
dec
das
in
mov
js
add
sub
jg
mov
mov
add
add
add
jl
ret
xor
repz
dec
out
lret
add
add
test
adc
mov
sub
add
in
xor
clc
or
add
pop
jb
leave
xchg
cli
adc
inc
cli
pop
aas
in
das
mov
and
gs
cmc
rolb
cmp
scas
loopne
lcall
add
mov
mov
sbb
add
in
std
lea
and
push
repnz
add
xchg
movb
adc
xchg
add
add
xor
das
jne
mov
mov
jb
pop
or
jno
and
dec
imul
adc
add
repz
out
pop
jne
add
out
cmpsl
mov
fwait
stos
fcoms
add
les
lcall
daa
cmp
out
dec
scas
mov
xor
jo
ja
add
dec
mov
ljmp
loop
adc
inc
add
fistpll
lret
add
add
add
add
add
loop
lods
or
add
add
inc
add
add
jae
sbb
xor
add
lret
add
add
pusha
add
js
test
sub
bound
mov
fadds
dec
fmulp
mov
mov
push
add
add
dec
xchg
add
addl
add
add
mov
pop
fsts
mov
add
cmp
xor
xchg
or
and
mov
flds
mov
mov
rep
call
add
dec
lock
jns
aam
push
push
mov
add
mov
hlt
add
add
add
ret
enter
add
add
add
add
jle
inc
pop
dec
jp
add
inc
and
mov
data16
out
lock
jbe
fstps
push
dec
dec
aad
add
or
mov
add
cmp
sbb
test
xor
jno
sahf
and
mov
add
add
add
inc
add
add
mov
add
stc
jg
cmp
dec
dec
push
add
sub
cltd
pop
or
dec
and
jecxz
add
push
add
movl
sbb
pop
cmp
add
sbb
sbb
add
add
adc
push
loope
add
add
jbe
in
sbb
jbe
testb
pop
out
lret
add
inc
and
adc
xchg
add
or
add
add
add
in
mov
xchg
popf
add
fidivrl
and
add
das
dec
sti
push
add
fisubs
sub
jae
lods
mov
ljmp
inc
fldt
ljmp
add
pushl
add
add
xchg
jg
add
mov
lea
mov
insl
aas
or
push
add
add
ja
mov
sbb
fadds
jne
sub
shrl
pop
push
push
lea
mov
sbb
lret
test
add
add
add
add
mov
add
mov
push
add
push
add
inc
add
adcl
xchg
add
mov
add
add
adc
repz
sti
loope
add
bound
mov
inc
jbe
addr16
add
cmp
fs
add
dec
js
jg
add
add
stos
push
add
push
dec
inc
dec
jmp
mov
ret
mov
xor
xchg
loopne
cld
mov
add
inc
add
mov
cmp
addr16
add
ds
jne
add
pop
mov
rolb
push
mov
add
push
add
add
sbb
repnz
push
add
sub
jmp
testb
insl
mov
cmp
push
dec
call
adc
js
sahf
xchg
add
add
ljmp
fbld
add
jmp
add
inc
add
pop
cmc
jae
mov
shll
inc
add
mov
push
add
mov
sti
lret
mov
add
dec
dec
sti
cs
testb
mov
lock
movsb
add
jo
fsubl
mov
data16
adc
add
xchg
cwtl
movsl
outsb
mov
xchg
dec
icebp
dec
ficoms
rolb
rcl
xchg
add
mov
add
mov
xchg
add
mov
add
data16
add
fcomip
scas
pushf
pop
inc
add
leave
insl
nop
add
rol
pop
mov
add
aam
movb
add
pop
lcall
xor
mov
mov
add
das
jp
add
and
mov
push
add
add
dec
popa
jo
add
mov
xchg
and
out
mov
cli
xlat
mov
sub
jg
jl
add
xor
sahf
or
mov
add
mov
add
add
das
cltd
adc
pop
cmc
pop
mov
out
es
mov
add
hlt
add
mov
sbb
cmp
and
xchg
out
sub
or
pusha
add
pop
lret
push
add
pop
insl
mov
add
rolb
pushf
pop
addb
add
mov
push
add
add
add
add
add
sbb
movsl
ljmp
add
add
and
mov
pop
push
mov
mov
in
add
xchg
add
add
js
loope
push
add
mov
add
loopne
push
pop
sarl
dec
add
mov
add
jo
pop
hlt
add
add
adc
mov
add
into
cmpsl
sbb
movsb
add
add
mov
mov
mov
in
inc
stc
addb
enter
push
int3
mov
in
loope
add
int
adc
outsl
aaa
ja
fwait
inc
psrlw
inc
add
notl
add
or
pop
movsb
add
aaa
movb
adc
adc
cld
sti
adc
sbb
pop
mov
clc
cmp
sbb
mov
push
lcall
push
fstl
push
add
fidivl
sbb
xchg
xor
cmpsl
cmpsb
add
lret
sarl
add
xchg
jne
testl
adc
add
insb
dec
mov
add
jns
add
je
mov
xchg
push
ret
jo
mov
push
add
push
ret
add
out
and
cmp
rolb
cmc
jb
into
xchg
xchg
jmp
xchg
add
add
add
in
cmp
or
movb
mov
fcompl
outsb
leave
fwait
mov
rolb
nop
add
out
xchg
insl
dec
adc
and
mov
mov
adc
lahf
mov
flds
add
and
xchg
in
ja
int
add
cwtl
mov
add
mov
insl
leave
push
add
dec
add
dec
int
add
pop
leave
xor
add
add
iret
mov
add
mov
add
xchg
jle
daa
inc
add
mov
add
addb
add
mov
ret
addr16
jge
add
jno
mov
stos
rolb
testb
dec
add
test
icebp
mov
add
fwait
dec
jnp
call
add
out
test
cmp
xor
cld
arpl
add
mov
int3
out
add
mov
mov
movsb
add
add
cmc
jle
hlt
add
fisubs
add
cwtl
push
add
add
mov
add
fildll
and
xor
jmp
sub
popa
rolb
in
push
outsl
outsb
dec
add
loopne
dec
push
add
mov
xchg
push
add
test
cwtl
cwtl
or
and
add
add
inc
add
jae
sbb
add
add
add
sbb
add
add
xor
pop
xor
lcall
mov
sahf
and
xchg
add
in
addb
mov
in
add
add
add
add
inc
enter
add
dec
jb
jge
loope
add
testb
negl
cmp
pop
push
add
add
inc
add
repnz
jae
or
arpl
nop
add
add
dec
adc
loopne
inc
add
pop
inc
arpl
popf
push
clc
repnz
jae
add
dec
add
adcl
xor
and
fwait
cld
nop
jmp
inc
add
mov
push
push
mov
xchg
ret
add
pop
add
andl
jae
mov
add
in
mov
fwait
cld
nop
jmp
add
add
xor
xor
inc
add
add
add
popa
add
mov
xchg
ret
aam
pop
add
incb
nop
jmp
add
add
idivl
mov
clc
repnz
jae
loop
idivl
xchg
add
jge
clc
repnz
jae
sbb
xchg
add
or
push
add
test
add
mov
fwait
cld
nop
jmp
mov
sub
add
push
push
mov
xchg
ret
add
dec
add
add
test
clc
repnz
jae
add
and
cmp
andl
dec
push
clc
repnz
jae
or
add
add
outsb
mov
clc
repnz
jae
add
add
xchg
arpl
adc
inc
sbb
hlt
fldl
xchg
ret
pop
add
rolb
bound
mov
add
clc
repnz
jae
pop
pop
push
mov
cmp
nop
jae
imul
pop
push
mov
xchg
ret
aam
xchg
add
add
call
jmp
add
add
add
push
cwtl
ja
fwait
cld
nop
jmp
outsb
sbb
add
rep
clc
repnz
jae
cli
xchg
sub
fadds
xchg
add
jne
clc
repnz
jae
add
add
and
mov
dec
push
clc
repnz
jae
pop
add
add
add
aam
cmpw
fwait
cld
nop
jmp
aas
add
loop
adc
push
mov
xchg
ret
dec
testl
push
clc
repnz
jae
ret
add
add
sub
mov
dec
cmp
repnz
jae
add
rolb
loopne
fld
add
mov
add
add
fwait
sub
push
or
shrb
cld
nop
jmp
mov
sub
dec
add
push
mov
xchg
ret
add
mov
add
mov
fwait
cld
nop
jmp
pusha
inc
aas
fdivl
add
clc
repnz
jae
in
loop
add
cli
movzwl
clc
repnz
jae
inc
add
incb
pop
hlt
add
repnz
jae
add
in
fwait
mov
push
cli
inc
add
fwait
jo
cli
add
xchg
test
inc
jl
add
repnz
jae
push
add
jo
add
loope
add
push
mov
xchg
ret
loop
add
sbb
xor
repnz
jae
add
iret
pop
clc
repnz
jae
add
add
pop
add
inc
cmp
lcall
incl
add
fwait
mov
mov
fwait
cld
nop
jmp
aam
add
add
add
repnz
jae
cmpsl
add
push
clc
repnz
jae
inc
push
inc
outsb
ljmp
jae
push
add
test
fwait
cld
nop
jmp
loop
cli
add
je
sub
js
inc
add
add
add
push
clc
repnz
jae
add
sbb
dec
add
mov
fwait
cld
nop
jmp
ret
pop
cmpsl
jge
lret
shrb
enter
adc
repnz
jae
add
cmpl
cmp
add
add
and
push
mov
xchg
ret
add
mov
loopne
add
dec
shr
push
mov
xchg
ret
sbbl
dec
imul
nop
jmp
inc
add
mov
in
add
rolb
mov
das
mov
push
mov
xchg
ret
incb
aas
mov
push
mov
add
push
add
add
aaa
push
je
push
add
xchg
add
cld
nop
jmp
loop
jl
jge
aas
imul
push
add
cld
nop
jmp
add
xor
outsb
add
push
mov
xchg
ret
outsb
add
sub
mov
cld
nop
jmp
mov
add
clc
repnz
jae
sbb
mov
push
add
sbb
add
clc
repnz
jae
add
mov
jae
sub
lret
push
add
inc
loopne
repnz
jae
dec
loop
add
sbb
add
add
repnz
jae
fadds
aas
push
push
mov
xchg
ret
add
fadds
jg
negl
push
clc
repnz
jae
loopne
add
outsb
dec
aas
lods
add
clc
repnz
jae
sub
loop
or
add
mov
fwait
cld
nop
jmp
add
add
add
movb
xlat
mov
push
fwait
cld
nop
jmp
add
jg
inc
out
add
push
push
mov
xchg
ret
cmpsl
mov
aas
xor
push
mov
clc
repnz
jae
dec
add
addl
pop
aaa
pop
shr
clc
repnz
jae
cmp
mov
cld
mov
fwait
cld
nop
jmp
sub
or
push
push
les
std
mov
clc
repnz
jae
add
mov
inc
mov
or
enter
jae
add
cli
idivl
clc
repnz
jae
sbb
cmpsl
add
add
pop
push
mov
xchg
ret
add
add
mov
cmp
nop
jae
add
in
add
push
push
mov
xchg
ret
pop
pop
pop
add
inc
add
lahf
push
mov
xor
inc
and
out
inc
lock
popa
stos
push
fwait
cld
nop
jmp
push
mov
mov
cmc
pusha
add
add
cmpsl
push
mov
incl
add
test
xchg
loopne
or
add
sub
add
add
inc
pop
pop
xchg
push
mov
xchg
ret
pop
rolb
add
pop
add
movzwl
clc
repnz
jae
and
mov
xchg
pop
dec
fwait
cld
nop
jmp
mov
add
clc
repnz
jae
add
adc
mov
add
mov
in
push
clc
repnz
jae
add
add
sub
movsl
add
mov
dec
fwait
cld
nop
jmp
inc
add
jo
push
add
mov
clc
repnz
jae
push
loop
loopne
mov
push
mov
xchg
ret
add
add
testl
add
sbb
xor
add
fwait
cld
nop
jmp
aam
add
nop
jae
mov
mov
xor
push
add
nop
jae
pusha
add
add
dec
adc
repnz
jae
add
test
cmpsb
add
jp
push
mov
xchg
ret
rcrb
add
mov
movb
mov
xchg
ret
pop
add
rolb
mov
cmpw
fwait
cld
nop
jmp
jl
add
stos
stos
clc
repnz
jae
inc
add
mov
push
add
mov
clc
repnz
jae
add
mov
mov
mov
das
subl
clc
repnz
jae
add
add
addr16
popa
add
mov
xchg
ret
inc
add
add
stos
dec
clc
repnz
jae
idiv
outsb
aas
dec
loop
cli
fisttps
nop
jmp
fsubrs
add
rolb
sub
xor
add
clc
repnz
jae
dec
loopne
sub
clc
repnz
jae
add
mov
cmpsl
push
add
jmp
add
add
add
mov
sub
repnz
jae
ja
inc
push
mov
xchg
ret
add
jge
or
stos
clc
repnz
jae
add
loopne
adc
scas
mov
clc
repnz
jae
add
inc
add
add
cmp
mov
xchg
ret
add
loopne
arpl
xchg
add
sbb
sti
fwait
cld
nop
jmp
loop
mov
xchg
cwtl
cmpl
fwait
cld
nop
jmp
sbb
stos
push
push
mov
xchg
ret
add
push
add
ss
repnz
jae
pop
mov
add
add
popl
nop
jae
or
add
loop
test
mov
push
push
mov
xchg
ret
add
inc
add
cmp
add
and
mov
dec
loop
pusha
testl
mov
xchg
ret
imul
add
jg
xor
clc
repnz
jae
add
aas
inc
ret
add
and
incl
js
fwait
cld
nop
jmp
add
rolb
outsb
add
clc
repnz
jae
jl
add
xor
clc
repnz
jae
add
push
outsb
or
mov
pop
clc
repnz
jae
add
add
adc
add
mov
add
add
add
inc
inc
push
add
mov
inc
add
loopne
outsb
add
cli
push
mov
inc
add
dec
add
mov
loopne
sti
sub
sub
repnz
jae
add
push
push
or
repnz
jae
sub
add
add
add
add
clc
repnz
jae
cli
ret
rolb
add
call
clc
repnz
jae
push
ret
or
xchg
add
jmp
in
jge
ret
mov
add
lret
xor
push
add
ret
add
rolb
repnz
add
clc
repnz
jae
inc
add
dec
jl
add
add
pop
inc
add
incb
outsb
add
mov
inc
add
add
repz
mov
clc
repnz
jae
add
jne
clc
repnz
jae
add
loopne
xchg
add
add
fwait
cld
nop
jmp
loopne
inc
adc
fwait
cli
add
lea
fwait
cld
nop
jmp
jge
sbb
pop
jne
clc
repnz
jae
jge
add
inc
lea
test
nop
jae
add
pop
lods
push
mov
xchg
ret
add
arpl
pop
and
cld
nop
jmp
sub
add
mov
jae
add
clc
repnz
jae
add
cli
pop
add
lcall
incl
pop
add
cld
call
clc
repnz
jae
mov
add
xor
addb
dec
cmp
fwait
cld
nop
jmp
or
dec
add
mov
xchg
ret
test
add
add
pop
mov
clc
repnz
jae
pop
add
add
add
push
adc
add
repnz
jae
add
inc
mov
data16
push
add
clc
repnz
jae
inc
mov
loop
mov
xor
push
mov
xchg
ret
inc
adc
add
push
mov
fwait
cld
nop
jmp
adc
mov
add
test
pop
add
clc
repnz
jae
add
out
adc
add
decl
add
sub
mov
clc
repnz
jae
add
cld
nop
jmp
outsb
add
add
add
mov
add
adc
add
or
nop
jae
ret
inc
cli
push
add
add
jae
cmp
fadds
push
cli
add
add
mov
add
cmp
push
sub
int
inc
add
add
add
add
add
clc
repnz
jae
ret
add
mov
clc
repnz
jae
mov
jg
pop
jne
fwait
cld
nop
jmp
inc
add
repnz
jae
imul
mov
pop
adc
add
add
repnz
jae
jg
add
pop
add
mov
clc
repnz
jae
jge
and
nop
jmp
add
add
test
clc
repnz
jae
add
add
sub
repnz
jae
pusha
add
cmp
sub
repnz
jae
add
movsl
in
mov
fwait
cld
nop
jmp
in
sub
push
push
fcomps
and
push
fs
repnz
jae
add
fsubrs
inc
and
repnz
jae
aas
add
add
mov
mov
xchg
ret
outsb
add
or
push
mov
xchg
ret
add
push
add
or
nop
jae
add
dec
add
add
push
mov
xchg
ret
ret
fadds
add
add
add
nop
jae
jge
add
add
jmp
jae
add
add
cmpl
ficoms
cld
nop
jmp
dec
mov
add
add
push
rolb
rol
add
add
push
mov
xchg
ret
pop
add
cli
add
popa
add
repnz
jae
outsb
cmpsl
add
mov
clc
repnz
jae
add
outsb
loopne
pop
inc
fwait
cld
nop
jmp
xchg
add
loop
push
jge
dec
add
repnz
jae
add
rolb
pusha
add
add
lea
clc
repnz
jae
add
add
sbb
popf
mov
clc
repnz
jae
pop
fwait
cmp
and
add
mov
add
add
pop
jb
add
push
popl
mov
clc
push
mov
xchg
ret
add
add
add
add
fwait
cld
nop
jmp
mov
mov
jbe
push
mov
xchg
ret
lret
inc
test
and
push
push
mov
movsb
push
mov
xchg
ret
add
push
add
add
add
fwait
cld
nop
jmp
push
sub
jmp
push
add
add
sub
pop
and
popa
add
repnz
jae
add
dec
loopne
pop
lods
mov
clc
repnz
jae
inc
push
add
sbb
mov
xchg
ret
add
sbb
rcrb
add
outsb
add
add
mov
push
mov
xchg
ret
add
add
add
jne
clc
repnz
jae
push
add
add
pop
incb
jae
add
add
add
add
jae
add
mov
jge
add
mov
nop
jae
add
add
adc
mov
add
dec
cmp
mov
xchg
ret
jl
inc
pop
in
lea
clc
repnz
jae
mov
add
xchg
aam
pop
icebp
push
add
dec
sub
repnz
jae
add
sub
cmp
cld
nop
jmp
add
add
add
add
nop
jmp
cli
jge
add
add
pop
mov
add
dec
push
or
sbb
adc
xor
push
mov
xchg
ret
loopne
sbb
add
mov
push
mov
xchg
ret
add
dec
add
sbb
jnp
add
clc
repnz
jae
mov
push
and
rolb
repnz
jae
fadds
dec
add
adc
pop
adc
rcr
add
add
aas
outsl
push
clc
repnz
jae
test
add
sbb
add
mov
clc
repnz
jae
jg
add
add
push
clc
repnz
jae
add
or
add
sar
repnz
jae
cmp
add
loop
push
mov
push
fwait
cld
nop
jmp
add
add
test
mov
clc
repnz
jae
add
loopne
xor
clc
repnz
jae
sub
add
ret
idivl
xorl
std
push
push
mov
xchg
ret
testl
push
push
add
repnz
jae
fwait
push
mov
add
clc
repnz
jae
mov
mov
stos
clc
repnz
jae
mov
add
adc
loopne
adc
movsb
clc
repnz
jae
pop
arpl
divl
mov
dec
fwait
cld
nop
jmp
pusha
sub
pop
pusha
add
aas
iret
leave
clc
repnz
jae
sub
and
imul
add
repnz
jae
add
jl
mul
call
add
clc
repnz
jae
add
add
add
div
fwait
cld
nop
jmp
fadds
dec
add
jo
sbb
incb
cld
nop
jmp
decb
mov
nop
add
ror
clc
repnz
jae
add
loop
mov
mov
add
add
fwait
cld
nop
jmp
add
mov
push
clc
repnz
jae
mov
add
cmp
add
nop
jae
sub
add
add
add
ret
je
loop
rolb
popa
lea
repnz
jae
add
mov
outsb
adc
mov
clc
repnz
jae
sub
mov
popa
clc
repnz
jae
fwait
rolb
add
add
nop
add
test
repnz
jae
loop
add
add
pop
clc
repnz
jae
aam
add
add
mov
mov
ret
mov
jae
add
add
int
mov
clc
repnz
jae
pusha
inc
movsb
add
xchg
add
mov
clc
repnz
jae
add
filds
jne
fwait
cld
nop
jmp
pop
loop
add
add
adc
jg
jno
fwait
cld
nop
jmp
add
aas
fistps
repnz
jae
push
fadds
aam
add
add
mov
clc
repnz
jae
add
sub
or
pop
mov
clc
repnz
jae
add
add
loopne
inc
push
add
push
clc
repnz
jae
mov
add
add
add
and
mov
in
add
add
mov
or
add
add
push
jmp
dec
sub
add
cmpsl
add
add
mov
push
mov
xchg
ret
add
inc
mov
rolb
fiaddl
icebp
clc
repnz
jae
sbb
mov
add
clc
repnz
jae
sub
cmp
inc
add
pop
dec
push
mov
xchg
ret
adc
loop
not
clc
repnz
jae
add
loopne
xchg
cli
mov
or
nop
jae
mov
add
pop
push
mov
xchg
ret
add
mov
add
jmp
outsb
test
testl
push
clc
repnz
jae
add
add
add
cmpsl
loop
movb
movzwl
fwait
cld
nop
jmp
add
inc
fwait
mov
scas
add
add
repnz
jae
push
add
nop
jae
outsb
add
add
add
in
add
or
lock
jg
add
mov
repnz
jae
add
testl
xchg
add
add
repnz
jae
sbb
add
add
add
cmp
cld
incl
ret
add
pushf
je
fwait
cld
nop
jmp
pusha
aas
add
push
lods
push
mov
xchg
ret
sbb
outsb
add
clc
repnz
jae
add
add
jb
clc
repnz
jae
add
rcrl
or
clc
repnz
jae
imull
add
test
add
clc
repnz
jae
push
adc
mov
clc
repnz
jae
add
outsb
add
clc
repnz
jae
add
test
mov
fwait
cld
nop
jmp
dec
loopne
adc
and
mov
jge
clc
repnz
jae
add
outsb
add
andl
dec
mov
clc
repnz
jae
pop
pusha
mov
mov
xchg
ret
rcrb
outsb
outsb
das
cmpl
fwait
cld
nop
jmp
or
add
sub
mov
xchg
ret
or
add
mov
outsb
js
fwait
cld
nop
jmp
add
sub
add
add
cmp
jb
clc
repnz
jae
add
push
mov
xchg
ret
mov
mov
push
mov
nop
jae
add
jge
pop
add
xchg
mov
push
mov
xchg
ret
add
push
loop
call
clc
repnz
jae
add
adc
je
mov
cmp
repnz
jae
add
mov
repnz
jae
add
loop
fwait
push
inc
mov
lock
add
jg
push
cli
push
pop
sub
nop
jae
adc
mov
repnz
jae
add
add
int3
add
fwait
cld
nop
jmp
add
add
add
aas
scas
xchg
clc
repnz
jae
add
add
push
push
sbbl
sbb
inc
add
sar
inc
pop
add
pop
mov
clc
repnz
jae
add
pop
mov
outsb
divl
jge
add
push
mov
xchg
ret
pusha
add
loop
add
sub
repnz
jae
outsb
pop
mov
mov
push
mov
xchg
ret
add
pusha
clc
repnz
jae
mov
mov
mov
lods
push
clc
repnz
jae
aam
cmpsl
sub
push
fwait
je
clc
repnz
jae
add
test
clc
repnz
jae
add
test
cld
nop
jmp
add
cli
jg
add
mov
clc
repnz
jae
adc
add
clc
repnz
jae
add
add
dec
add
repnz
jae
arpl
mov
mov
mov
mov
xchg
ret
jg
xchg
pop
fcomps
mov
clc
repnz
jae
add
fwait
xchg
add
rclb
mov
inc
add
add
pop
test
push
mov
xchg
ret
add
and
adc
add
clc
repnz
jae
add
add
mov
clc
repnz
jae
add
add
rorb
aaa
xchg
ret
dec
add
clc
repnz
jae
mov
inc
iret
mov
clc
repnz
jae
add
add
mov
fwait
cld
nop
jmp
jge
fwait
mov
add
add
clc
repnz
jae
mov
xor
sbb
repnz
jae
add
or
mov
xchg
ret
add
add
add
add
repnz
jae
jge
add
shll
sbb
fs
insb
clc
repnz
jae
ret
add
popa
stc
xchg
push
mov
xchg
ret
add
adc
push
add
and
clc
repnz
jae
sbb
add
push
loop
push
fwait
cld
nop
jmp
add
mov
fsubs
cmp
clc
repnz
jae
in
loop
cld
mov
fwait
cld
nop
jmp
add
add
add
pop
xchg
bound
mov
add
push
mov
xchg
ret
add
mov
add
push
scas
shl
push
mov
xchg
ret
mov
pop
add
fwait
and
repz
push
fwait
cld
nop
jmp
fadds
fadds
push
loopne
mov
jg
clc
repnz
jae
pop
pop
imul
add
in
sub
clc
repnz
jae
pop
add
add
clc
repnz
jae
outsb
sub
mov
or
fwait
cld
nop
jmp
add
xchg
in
add
cli
mov
push
mov
xchg
ret
pop
add
loop
shl
fimuls
jmp
mov
jg
cmp
inc
inc
mov
add
push
mov
xchg
ret
dec
incb
push
add
cmc
jne
jb
or
movl
add
inc
outsb
add
pop
mov
clc
repnz
jae
add
adc
mov
cmpsl
fldl
inc
stc
inc
add
rolb
arpl
cmp
nop
jmp
add
mov
outsb
add
test
push
add
ret
push
mov
xchg
ret
negl
jge
sar
nop
jae
add
add
lret
scas
push
fwait
cld
nop
jmp
pop
testl
sub
inc
roll
xchg
ret
test
add
mov
in
add
add
add
add
nop
jae
xchg
loopne
inc
pop
add
lret
clc
repnz
jae
xchg
rorb
add
add
sub
add
clc
repnz
jae
mov
add
popf
mov
push
mov
xchg
ret
add
add
mov
push
push
mov
xchg
ret
add
mov
loopne
outsb
sbb
push
mov
xchg
ret
add
add
ret
arpl
test
scas
push
clc
repnz
jae
add
mov
mov
clc
repnz
jae
add
push
popa
stc
add
clc
repnz
jae
add
pop
outsb
add
mov
lea
clc
repnz
jae
cmp
sub
and
incl
pop
pop
add
add
add
pop
add
lea
fistl
mov
inc
add
add
paddb
repnz
jae
loopne
lret
add
pop
sbb
fdivr
repnz
jae
sbb
add
lock
clc
repnz
jae
aam
add
xor
add
clc
repnz
jae
inc
add
scas
popa
clc
repnz
jae
add
add
clc
repnz
jae
mov
inc
jg
mov
clc
repnz
jae
add
loop
mov
push
push
xor
repnz
jae
sub
add
cld
nop
jmp
sbbl
add
sub
add
add
add
cmp
add
addb
add
add
add
clc
repnz
jae
sbbl
and
clc
repnz
jae
mov
incb
fadds
jbe
fld
clc
repnz
jae
in
add
outsb
cli
loop
in
lret
and
repnz
jae
add
mov
add
add
add
push
add
clc
repnz
jae
xchg
lret
dec
repnz
pop
add
add
stc
incl
add
add
push
imul
nop
jae
add
sub
and
clc
repnz
jae
addl
add
xor
mov
clc
repnz
jae
pop
add
push
add
outsb
and
cld
nop
jmp
rorb
inc
add
push
mov
xchg
ret
outsb
fwait
add
add
mov
jmp
pop
add
add
mov
cld
nop
jmp
add
add
add
jle
clc
repnz
jae
add
pop
add
adc
push
call
fwait
cld
nop
jmp
adc
add
cmpsl
pop
push
clc
repnz
jae
add
dec
fwait
rorb
pop
mov
push
mov
xchg
ret
lret
subl
pusha
sbb
pop
out
jge
add
pop
mov
pop
add
mov
clc
repnz
jae
dec
and
adc
add
addr16
mov
clc
repnz
jae
ret
add
scas
jne
fwait
cld
nop
jmp
sub
add
mov
jae
aas
loop
addl
add
sub
push
mov
xchg
ret
add
pop
cli
add
clc
repnz
jae
mov
add
mov
xor
add
clc
repnz
jae
dec
add
clc
repnz
jae
add
sbb
add
add
pop
or
repnz
jae
mov
mov
sti
clc
repnz
jae
dec
add
pushl
fwait
cld
nop
jmp
sub
add
and
clc
repnz
jae
add
add
aam
sub
mov
xchg
ret
mov
add
fwait
add
and
push
mov
xchg
ret
add
add
mov
mov
xchg
ret
add
cli
cmpsl
pop
stc
stos
push
mov
xchg
ret
push
add
dec
jne
fwait
cld
nop
jmp
add
or
lea
clc
repnz
jae
add
jmp
clc
repnz
jae
sbb
aam
and
test
push
mov
xchg
ret
add
rolb
cmpsl
mov
mov
clc
repnz
jae
add
mov
in
inc
add
test
cmpsl
add
out
add
push
mov
xchg
ret
add
mov
sti
clc
repnz
jae
jge
mov
aam
add
je
fwait
cld
nop
jmp
jl
add
mov
cld
nop
jmp
inc
loop
loop
pop
mov
add
push
lock
add
add
add
xchg
add
add
add
push
mov
xchg
ret
outsb
loopne
loopne
adc
sub
clc
repnz
jae
add
outsb
adc
push
std
push
clc
repnz
jae
fwait
add
add
push
add
and
add
fwait
cld
nop
jmp
testl
sar
repnz
jae
pop
outsb
add
pop
mov
add
add
clc
repnz
jae
imul
mov
clc
repnz
jae
pop
add
add
add
clc
repnz
jae
fadds
pop
arpl
mov
push
mov
jmp
inc
inc
add
loop
or
repnz
jae
add
cli
pop
add
icebp
clc
repnz
jae
add
imul
lds
cwtl
push
push
mov
xchg
ret
cmpsl
ret
add
add
add
ret
repnz
jae
add
adc
add
mov
clc
repnz
jae
add
jge
clc
repnz
jae
lret
inc
jg
add
cmp
mov
add
insb
inc
jb
clc
repnz
jae
cmp
xchg
cmp
mov
xchg
ret
outsb
cli
or
dec
add
xor
push
mov
xchg
ret
sub
add
jge
cmp
fwait
cld
nop
jmp
sbb
pop
clc
repnz
jae
add
pop
rolb
add
sbb
out
mov
clc
repnz
jae
add
pop
pop
dec
mov
add
mov
mov
fwait
cld
nop
jmp
add
add
dec
ret
arpl
cld
nop
jmp
add
testl
pop
jp
cld
or
jmp
add
movzwl
clc
repnz
jae
add
sbb
push
mov
xchg
ret
imul
add
push
clc
repnz
jae
pusha
add
add
nop
lock
clc
repnz
jae
add
add
jae
add
clc
repnz
jae
add
mov
or
sbb
loopne
fwait
cld
nop
jmp
pop
add
jge
mov
mov
scas
pushl
push
mov
xchg
ret
add
add
dec
sub
clc
repnz
jae
add
jge
xchg
cli
decl
fwait
cld
nop
jmp
add
loop
push
mov
add
and
les
fadds
pop
cld
and
xchg
movsb
fwait
mov
clc
repnz
jae
fwait
add
mov
repnz
jae
add
sub
cmp
push
adc
clc
repnz
jae
mov
pop
push
lds
clc
repnz
jae
add
loopne
aas
add
add
cmp
nop
jmp
jge
add
jae
add
lea
clc
repnz
jae
add
pop
add
or
dec
and
clc
repnz
jae
pop
loopne
aam
repz
cltd
je
clc
repnz
jae
add
cmp
in
adc
nop
jae
mov
add
enter
nop
jae
add
cld
push
clc
repnz
jae
add
sub
mov
add
mov
test
fwait
cld
nop
jmp
dec
push
outsb
aas
loopne
pop
add
pusha
clc
repnz
jae
pusha
test
mov
push
push
mov
xchg
ret
inc
mov
mov
movzwl
clc
repnz
jae
addl
jo
les
out
cld
add
clc
repnz
jae
add
add
add
jecxz
je
fwait
cld
nop
jmp
aas
add
mov
fwait
cld
nop
jmp
pop
or
add
add
clc
repnz
jae
sub
mov
clc
repnz
jae
lret
loop
sbb
add
add
mov
clc
repnz
jae
add
jg
mov
add
add
repnz
jae
sub
pop
cs
clc
repnz
jae
pop
sub
add
add
test
clc
repnz
jae
aam
add
fiadds
xchg
ret
jg
xchg
mov
xor
clc
repnz
jae
pop
push
sub
add
mov
clc
repnz
jae
test
ret
push
divps
mov
cmp
ret
sub
add
pop
pop
leave
mov
push
mov
xchg
ret
mov
add
push
enter
add
outsl
add
inc
add
roll
add
add
cmp
test
out
lcall
add
add
pop
clc
repnz
jae
dec
add
loop
add
dec
pop
fwait
cld
nop
jmp
sub
add
push
add
rolb
rorl
stos
clc
repnz
jae
add
add
pop
add
sub
fwait
cld
nop
jmp
inc
add
shrb
xor
clc
repnz
jae
mov
jge
mov
mov
sbb
icebp
out
add
add
test
sub
clc
fwait
cld
nop
jmp
dec
sbb
add
add
outsb
loope
sbb
mov
xchg
ret
pop
add
add
add
add
lcall
ljmp
add
add
add
repnz
jae
add
outsb
je
cld
nop
jmp
loopne
push
add
nop
jmp
pop
or
add
dec
pop
test
nop
jae
add
add
sub
in
jmp
andb
add
add
lock
jmp
jl
clc
repnz
jae
rolb
add
sub
cmpsl
add
aam
add
add
pop
sub
je
movb
mov
clc
repnz
jae
pop
add
jl
add
push
mov
xchg
ret
in
add
add
add
mov
add
and
clc
repnz
jae
cli
jo
adc
add
ret
sbb
addl
add
add
dec
cmp
repnz
jae
jg
add
je
clc
repnz
jae
jl
sbb
mov
fwait
cld
nop
jmp
or
pop
icebp
or
mov
xchg
ret
mov
add
jmp
and
ljmp
pop
add
and
repnz
jae
add
add
push
mov
xchg
ret
add
inc
add
fwait
cld
nop
jmp
cli
jo
add
cli
add
add
ljmp
add
fiaddl
repz
mov
xchg
ret
add
add
sbb
ret
jecxz
add
pop
clc
repnz
jae
add
inc
mov
push
insb
mov
clc
repnz
jae
ret
sub
clc
repnz
jae
add
mov
dec
hlt
clc
repnz
jae
add
jge
mov
add
clc
repnz
jae
ret
cmpsl
add
push
mov
xchg
ret
cli
add
add
lods
push
push
mov
xchg
ret
add
add
add
sbb
dec
inc
clc
repnz
jae
loopne
inc
add
xor
clc
repnz
jae
add
sub
fwait
cld
nop
jmp
sbb
push
add
ret
dec
mov
clc
repnz
jae
add
loopne
add
pop
addb
add
clc
repnz
jae
inc
add
sar
nop
jae
outsb
cli
add
adc
add
fwait
cld
nop
jmp
adc
aam
add
sub
or
push
mov
xchg
ret
incb
pop
clc
repnz
jae
add
add
adc
inc
adc
cld
nop
jmp
pop
add
add
repz
cld
nop
jmp
add
add
add
loop
leave
ret
clc
repnz
jae
loopne
inc
dec
pop
mov
dec
stc
imul
fwait
cld
nop
jmp
add
test
add
or
cmp
mov
xchg
ret
divl
negl
adc
repnz
jae
add
inc
push
pop
push
cmpl
cmpsb
repnz
call
ret
pop
fisttpl
nop
jae
adc
add
and
repnz
jae
rcrb
jo
loopne
jne
clc
repnz
jae
add
fwait
sahf
test
fwait
cld
nop
jmp
inc
jl
rclb
rorb
movsl
sub
clc
repnz
jae
mov
add
dec
call
fwait
cld
nop
jmp
fwait
add
insl
and
push
mov
xchg
ret
add
loop
hlt
add
mov
jae
arpl
add
ret
imul
addb
mov
clc
repnz
jae
jl
mov
clc
repnz
jae
add
push
addb
add
fwait
cld
nop
jmp
outsb
rolb
add
mov
lea
push
mov
xchg
ret
pop
add
lods
push
mov
xchg
ret
add
add
add
add
add
rolb
mov
cmp
ret
and
add
adc
add
cmpl
incl
add
lret
inc
jbe
cwtl
add
fwait
cld
nop
jmp
inc
add
aam
dec
adc
in
movswl
clc
repnz
jae
add
aas
adc
mov
push
mov
xchg
ret
fwait
or
add
add
add
clc
repnz
jae
inc
add
add
add
inc
mov
lock
dec
cmp
repnz
jae
add
add
test
clc
repnz
jae
inc
add
lds
int3
jmp
cmp
sbb
pop
inc
add
add
mov
mov
clc
repnz
jae
pop
aam
add
outsl
push
clc
repnz
jae
add
test
outsb
add
add
mov
test
add
dec
fwait
cld
nop
jmp
aam
aas
add
in
lret
add
fwait
cld
nop
jmp
mov
cli
pusha
adc
add
jl
xchg
clc
clc
repnz
jae
mov
sub
fwait
cld
nop
jmp
add
add
loop
dec
sbb
movzwl
push
mov
xchg
ret
add
addr16
xor
clc
repnz
jae
add
and
add
fwait
cld
nop
jmp
add
inc
push
fadds
and
push
fwait
cld
nop
jmp
jo
pop
add
add
repnz
jae
add
add
cli
add
shr
mov
clc
repnz
jae
jg
inc
aas
jne
push
add
pop
push
mov
xchg
ret
add
add
add
clc
repnz
jae
add
sbb
loopne
jne
clc
repnz
jae
sbb
mov
fwait
cld
nop
jmp
mov
add
push
mov
xchg
ret
jo
add
sbb
mov
clc
repnz
jae
push
mov
fwait
cld
nop
jmp
add
add
push
add
clc
repnz
jae
add
add
imul
and
push
mov
xchg
ret
add
add
mov
clc
repnz
jae
add
add
jo
xchg
testb
add
loop
push
mov
xchg
ret
pop
dec
fadds
sbb
mov
xchg
ret
fadds
rolb
add
repnz
jae
cli
add
jl
add
add
loop
clc
repnz
jae
loop
incb
add
add
fwait
cld
nop
jmp
add
ret
add
add
pop
clc
repnz
jae
add
lret
add
add
mov
clc
repnz
jae
inc
adc
and
fwait
cld
nop
jmp
add
push
add
inc
dec
mov
push
mov
xchg
ret
cmp
add
lret
add
mov
xchg
ret
adc
push
call
clc
repnz
jae
add
add
sbb
int3
add
clc
repnz
jae
add
cmp
adc
add
fdivr
repnz
jae
add
jl
add
outsl
arpl
add
repnz
jae
add
add
sub
mov
xchg
ret
imul
add
add
outsb
mov
clc
repnz
jae
dec
add
outsb
add
sbb
add
repnz
jae
add
inc
add
mov
add
add
sub
test
inc
ret
add
testb
xchg
add
cli
adc
add
sbb
loopne
push
add
add
add
mov
loope,pt
jo
mov
add
sti
cli
sbb
xchg
add
mov
mov
loop
cmp
negl
cmpsb
add
add
icebp
rolb
pop
push
add
xchg
sub
or
daa
sub
in
out
or
leave
and
mov
add
scas
cmp
jmp
push
add
lds
rcll
and
rolb
push
cmp
test
roll
lcall
lods
jl
sbb
add
dec
push
add
dec
cwtl
pop
loope
add
inc
add
add
push
ret
stos
pop
sti
cmpsb
add
add
add
pop
lret
aam
mov
pusha
add
add
add
jnp
sti
aad
cmc
insl
and
sbb
add
pop
jmp
add
xchg
jns
add
add
add
push
add
cmp
add
fucomp
pushf
push
xchg
add
mov
add
jo
xchg
add
inc
and
movb
adc
add
sub
add
add
jle
push
adc
add
pop
test
loopne
jo
cld
fwait
lret
xor
into
andl
xchg
push
mov
movb
add
add
negl
add
add
jg
or
shrd
add
es
testb
movsl
jne
mov
dec
insb
inc
popa
dec
xor
enter
jne
add
out
xchg
cltd
in
xor
dec
icebp
loop
or
add
sbbl
icebp
sbb
popa
or
pushf
mov
xor
addb
mov
xor
jl
mov
and
sub
loope
add
or
add
add
divl
push
insb
pop
and
push
into
scas
jl
add
mov
dec
iret
or
add
sbb
stos
shll
add
cmp
push
add
fisttpll
mov
das
movb
loop
bound
mov
add
add
add
lea
pop
aaa
pop
push
add
imul
add
cmp
jecxz
add
jl
lock
fstpl
out
sbb
adc
rcrl
add
sbb
jg
add
sbb
mov
clc
test
cmpl
cmpsl
pop
cld
inc
jae
add
data16
outsb
mov
aaa
fsubs
xor
test
add
jecxz
daa
push
add
push
or
jmp
lret
jecxz
loop
pushf
in
mov
data16
xchg
add
cmp
addb
push
add
in
push
cli
adc
lret
rcll
xchg
add
mov
lahf
add
lods
pop
inc
add
mov
add
arpl
iret
pop
push
add
pushf
enter
add
jnp
add
std
test
rolb
test
add
mov
and
add
add
pusha
add
xchg
add
mov
or
mov
pop
movsl
cmp
add
and
pop
ja
call
mov
add
cld
mov
lcall
ljmp
xor
hlt
add
push
fnstenv
cmp
lcall
add
add
pop
cmp
add
push
add
add
add
cmp
dec
or
xor
or
in
lahf
rolb
jmp
aad
sbb
add
ret
add
mov
adc
mov
scas
xlat
aam
xchg
add
sti
add
cld
iret
cmp
add
mul
add
movb
xchg
add
inc
add
add
scas
dec
loope
add
stos
loope
imul
push
sbbl
jns
jbe
in
stos
pop
add
popl
push
dec
ret
push
add
aaa
fadd
add
cltd
fwait
sub
add
mov
stos
addb
iret
imul
in
and
or
les
cwtl
inc
adc
rolb
xchg
push
add
adc
add
mov
sahf
mov
add
hlt
add
mov
je
lret
lcall
movsb
add
add
add
movb
and
sbb
ljmp
enter
and
mov
out
leave
inc
cmp
lret
add
mov
adc
flds
add
leave
pusha
add
or
add
mov
jmp
push
add
mov
ret
das
scas
jne
lock
fisubl
xchg
push
xchg
inc
xchg
call
mov
add
xor
add
lods
mov
add
add
mov
cmp
in
add
cmc
test
sbb
add
clc
fstpl
fwait
jp
add
lock
xor
repz
rolb
test
add
add
add
lahf
sbb
icebp
enter
ficoml
add
lret
inc
add
cli
xchg
call
out
popf
jb
pop
inc
add
add
das
jle
pop
mov
std
js
sub
add
mov
cmpsl
adc
add
dec
push
lods
pop
lods
push
add
jle
jl
add
loope
add
sti
cwtl
mov
jl
std
mov
aaa
add
mov
xor
fisubrl
movb
push
add
int
lea
ret
add
stos
test
mov
add
mov
jmp
pusha
add
icebp
mov
pop
cmc
aad
and
add
loop
addr16
add
test
jo
rol
jecxz
xlat
lods
fwait
jmp
inc
add
push
add
addb
cwtl
lret
testb
add
test
add
mov
push
add
add
hlt
add
add
daa
jmp
pop
outsl
xchg
add
in
daa
addb
add
xchg
add
lcall
xor
pop
test
add
xchg
add
add
add
mov
add
push
add
lods
or
lcall
dec
hlt
add
mov
inc
add
movsb
add
add
add
add
sbb
inc
add
add
imul
pusha
add
imul
sbb
add
adc
mov
cs
pop
add
leave
fstps
dec
push
mov
bound
mov
add
cs
add
jge
sbb
dec
sub
inc
fcompl
add
data16
roll
pop
call
add
arpl
mov
xchg
pop
xor
jne
add
cli
jno
add
sar
sub
fsubrl
fbstp
add
movsb
add
sub
add
add
std
mov
mov
xor
loop
add
out
lds
add
xor
push
add
add
sbb
add
call
into
or
add
cmp
add
push
push
add
popa
loopne
pop
stos
into
test
mov
mov
push
xchg
add
scas
mov
repnz
push
add
xchg
add
or
inc
add
out
or
leave
addr16
mov
mov
loopne
mov
cmp
add
lret
mov
mov
add
test
sbb
sbb
add
daa
inc
add
idivl
xor
fbstp
sub
mov
push
add
add
pop
fldl
add
lock
mov
in
or
cmpsl
in
push
ds
aad
testb
add
jnp
data16
fsubs
lret
add
mov
inc
sub
mov
fnstsw
fnstsw
int
pop
push
sbbl
addr16
jae
fnstenv
add
stc
fcom
add
pusha
add
outsl
outsl
cld
data16
js
xor
pop
cwtl
hlt
add
movsl
lcall
je
inc
add
add
mov
lods
hlt
add
add
mov
popa
jo
pop
repz
add
cmpsb
add
and
mov
test
add
or
int
gs
pop
push
add
into
int
mov
add
hlt
add
add
add
cmp
inc
in
aaa
sub
sbb
pop
stos
mov
lods
gs
aad
test
and
add
add
xchg
daa
adc
add
add
pop
loopne
xor
add
imul
aam
aas
cmp
aad
ret
rolb
inc
sub
mov
pop
add
popf
pusha
add
pusha
add
add
jne
add
add
add
add
scas
cld
mov
jl
add
shll
dec
add
add
add
jle
add
xchg
movsb
add
add
sub
aam
fimuls
lea
pop
inc
aam
in
mov
fwait
je
sbb
std
stc
sbb
push
add
dec
lods
add
cmp
mov
dec
mov
push
call
add
add
mov
daa
aas
ret
not
add
push
add
add
inc
jg
sti
push
add
push
rolb
pop
add
add
mov
xchg
adc
test
adc
add
mov
add
pop
xor
lret
add
add
add
sbb
cs
add
aam
lahf
testb
add
add
faddl
shrl
add
add
add
add
mov
movb
and
mov
int3
xchg
in
mov
mov
add
jb
inc
jb
mov
push
add
aaa
or
repnz
add
add
mov
aad
test
imul
into
dec
sub
mov
addr16
pop
sbb
test
test
add
add
add
add
stos
jmp
xchg
fsts
jns
xchg
ret
add
insl
fwait
inc
add
jle
sbb
xlat
inc
push
add
and
scas
adc
add
fs
jge
push
lods
fistps
jae
imul
inc
add
insl
mov
or
dec
pop
clc
data16
fisttpl
cmpsl
mov
loope
ret
add
add
add
cmp
or
add
sbb
lret
or
inc
js
arpl
adc
add
add
add
sub
add
add
movsl
jmp
add
sub
jl
jle
add
add
mov
cmpsl
sbb
out
xchg
add
sub
pop
movsb
add
nop
add
dec
stos
jno
jbe
imul
lds
push
add
jno
movsl
in
dec
out
in
in
xchg
or
lret
ss
call
add
mov
popa
cmp
add
nop
add
lcall
outsl
je
mov
lds
inc
mov
das
mov
jbe
addr16
std
pop
outsl
dec
sub
mov
add
fildll
loop
cmp
mov
loope
out
mov
jl
daa
xchg
add
add
jns
add
sahf
fsubp
xchg
add
cmpsb
add
in
mov
sub
lods
ljmp
add
jbe
pop
fwait
lods
sub
fdivl
add
cld
xchg
add
lea
sbbl
add
insb
xchg
add
lock
inc
cmp
loop
lods
mov
push
not
add
add
insb
mov
add
add
cmpsb
add
int3
inc
add
cmpsb
add
arpl
push
jb
pop
lret
adc
inc
inc
add
repnz
add
aam
add
mov
add
add
cmp
xlat
in
xlat
roll
rolb
add
pop
push
dec
rolb
imul
add
rolb
pop
dec
in
or
scas
push
jecxz
add
xor
and
addb
push
or
add
push
fdivl
push
xchg
add
add
popa
lods
push
add
andl
pop
fistpl
insl
sti
ljmp
xchg
dec
mov
movb
addl
pop
iret
rorl
push
add
mov
jne
mov
lods
lea
std
cmc
mov
add
push
arpl
int3
push
add
push
nop
add
adc
mov
jge
add
cld
loope
cmpsb
add
add
mov
dec
addb
or
add
push
add
add
stc
pusha
add
mov
add
mov
add
scas
xchg
mov
add
mov
jb
addl
inc
sahf
xchg
mov
adc
lock
mov
cmp
add
add
add
addb
cmp
add
dec
push
scas
push
std
lahf
rolb
pop
lods
add
add
mov
hlt
add
add
mov
xchg
dec
cmc
mov
cs
add
repnz
mov
add
mov
lea
test
mov
add
add
add
shr
add
dec
dec
push
push
add
in
add
imul
add
mov
jmp
hlt
add
or
push
jae
add
lds
cli
add
sbb
push
test
repnz
inc
add
add
ja
add
add
push
pop
je
add
pusha
add
call
or
testb
fbld
scas
and
mov
add
bound
mov
sbb
pop
aas
lahf
pand
add
lcall
add
sti
mov
sbb
rolb
inc
lds
out
lock
out
nop
add
sub
fwait
movb
mov
inc
add
add
das
push
add
add
fsub
dec
test
add
add
mov
add
add
mov
add
add
fsubr
into
xchg
dec
jae
fnsave
xor
lock
mov
sarl
add
mov
into
xchg
add
cltd
js
gs
and
rorl
test
dec
cmpsl
xchg
add
mov
xchg
push
cmp
or
cmp
fucomip
and
pop
sub
outsl
fidivrl
arpl
and
mov
add
push
add
add
push
cmc
add
pop
and
repz
cltd
mov
sbb
jg
add
rolb
and
inc
add
mov
in
outsl
leave
mov
in
push
add
imul
push
xor
int3
lods
loop
mov
push
clc
fidivs
call
add
loopne
or
pop
leave
or
sub
push
sbb
mov
xchg
dec
cmp
addb
cld
add
xchg
add
ret
sbb
add
xchg
jp
fwait
dec
inc
mov
adc
jae
add
rcll
add
stc
cli
dec
sbb
flds
test
mov
add
mov
add
mov
data16
scas
add
nop
add
cld
sti
fwait
cmpsl
fdivl
in
mov
sbb
loopne
addb
mov
mov
testb
pop
or
or
enter
jbe
xchg
dec
pusha
add
pop
jl
mov
add
mov
pop
popa
jmp
mov
iret
xchg
push
xor
inc
mov
add
xchg
add
sbb
add
rorl
add
lcall
add
jno
add
pop
push
add
add
add
jae
shr
lods
repz
cmp
ret
adc
inc
add
add
shll
jns
jns
pop
sub
mov
mov
add
sub
inc
add
mov
jmp
add
mov
add
movsb
add
loope
or
add
jle
cli
daa
out
and
push
shrl
addb
adc
mov
and
sub
or
add
add
jle
data16
iret
pop
hlt
add
xchg
mov
push
add
pop
pop
mov
add
cmp
loope
lods
xchg
add
add
add
repz
and
add
add
add
jp
dec
sub
add
scas
cs
cmp
or
add
push
dec
xchg
and
add
mov
add
add
or
in
insb
mov
fidivrs
das
mov
dec
cwtl
jo
or
inc
repz
mov
fidivl
movsl
or
cld
mov
mov
adc
cwtl
jnp
ss
add
push
add
out
stos
iret
lret
rolb
cli
push
add
add
sub
mov
rolb
add
add
add
mov
and
lock
add
xchg
mov
add
rolb
sbb
dec
repz
data16
push
add
add
sub
mov
mov
or
cmp
gs
mov
rcll
jg
ds
cmp
add
push
dec
enter
push
add
ljmp
add
mov
mov
adc
add
mov
cmp
add
jne
rolb
push
add
add
mov
pop
jg
adc
and
cmp
fildl
add
mov
adc
inc
add
add
xor
popf
mov
sub
ljmp
add
xchg
dec
xchg
xchg
or
mov
lods
jl
add
add
add
mov
add
testb
in
dec
xchg
rolb
aad
fisttpll
loope
push
inc
add
into
cmp
clc
das
pop
mov
fwait
imul
adc
adc
inc
add
addr16
pop
or
mov
push
add
sbb
in
sbb
dec
cmp
rorl
dec
pop
sti
repnz
add
push
add
add
sub
jno
jne
nop
add
adc
xchg
add
adc
add
mov
mov
sbb
mov
sbb
lods
cli
into
es
out
lods
pop
inc
fidivrs
ljmp
add
jae
add
add
push
aaa
push
add
push
jle
add
xchg
add
add
or
movsb
add
dec
mov
add
aam
in
add
stc
and
jp
add
or
jmp
add
inc
add
in
xor
mov
add
and
mov
jne
pop
or
data16
ds
das
and
mov
iret
ror
rolb
hlt
add
jns
pop
add
add
idiv
mov
mov
add
sti
inc
add
mov
jns
add
or
add
je
push
add
test
outsl
jmp
add
leave
ret
jmp
jns,pt
lret
cltd
mov
add
mov
or
or
into
jb
xlat
xor
inc
add
add
add
sub
xchg
add
inc
add
icebp
je
addb
adc
mov
scas
fcoms
add
add
outsl
subl
xchg
add
jno
fsubl
inc
jne
adcl
add
int3
cwtl
cmp
cli
outsb
mov
add
iret
jmp
decb
mov
mov
jle
pushf
mov
jp
add
or
add
mov
repz
div
add
add
fidivl
mov
mov
xchg
add
add
mull
repnz
sbb
adc
jbe
pop
dec
aas
add
mov
add
add
fnstenv
add
add
shl
int3
incl
lods
add
cmp
add
dec
movsb
add
add
add
add
mov
cmpsl
jne
add
inc
xor
xor
addb
push
gs
punpcklwd
outsb
mov
mov
test
mov
add
add
add
mov
sahf
add
jp
cwtl
adc
or
push
aaa
dec
das
arpl
aas
mov
xor
mov
cmp
add
lods
lock
or
nop
add
out
add
movsb
add
mov
cmpsl
dec
jecxz
insl
jl
popf
insb
ss
testl
add
add
add
out
lea
test
push
add
add
or
add
add
pop
js
mov
inc
add
cmpsl
addb
loopne
test
add
insl
daa
insb
jno
lock
popf
jnp
add
in
mov
xchg
add
pop
sbb
cmp
add
add
arpl
add
dec
mov
sub
push
jle
add
inc
add
add
xchg
aad
cmpsb
add
cs
fisubs
dec
add
mov
sahf
scas
ret
jno
jge
add
jmp
jb
je
enter
add
scas
fld
mov
testb
add
lahf
mov
and
mov
push
add
mov
mov
idivl
sub
mov
mov
add
add
data16
icebp
lret
dec
imul
lahf
test
add
mov
dec
xchg
add
shrl
jmp
add
imul
mov
sub
rolb
cmp
cmpsl
sub
fidivrl
imul
mov
aam
xchg
pushf
inc
add
sbb
add
aas
adc
xchg
add
cmpl
pop
clc
fs
sbb
mov
rorl
add
flds
xchg
mov
push
add
in
add
movsb
add
add
loope
add
mov
outsl
dec
pop
jmp
mov
data16
test
mov
cli
fstps
pop
xor
xchg
jecxz
xchg
add
mov
inc
add
mov
ljmp
fwait
ret
loope
add
xchg
mov
lock
mov
insl
sahf
fwait
outsb
stc
je
mov
push
pop
jl
xlat
loopne
rcrl
adc
loop
fwait
pop
les
jg
add
inc
mov
xor
loopne
sub
add
add
add
addb
or
insb
xchg
fimuls
add
add
add
jbe
cmp
in
repnz
add
jl
sahf
js
cmp
bound
mov
inc
xchg
iret
xchg
push
add
inc
icebp
ja
loop
pop
dec
push
add
adc
imul
nop
add
mov
and
and
pusha
add
or
shrl
mov
clc
sub
add
add
inc
dec
inc
dec
xchg
gs
add
daa
mov
test
inc
lret
add
add
fsubl
add
push
xchg
pusha
add
call
data16
int
clc
cltd
adc
sbb
mov
add
add
mov
pop
int3
int
add
aam
adc
add
add
sarl
adcl
add
rolb
add
add
mov
inc
ret
fnstenv
cwtl
rolb
and
mov
add
mov
add
xlat
mov
inc
lcall
stos
cmp
nop
add
pop
loope
add
sbb
mov
mov
sub
lcall
mov
testl
mov
push
add
insl
xchg
out
push
add
mov
jo
repz
les
push
jg
aaa
adc
mov
movb
add
and
add
push
mov
test
add
pop
jle
add
cmc
cmp
and
stos
push
xchg
cmpsl
inc
les
clc
xchg
add
mov
popf
push
add
sub
jb
add
jle
sbb
sahf
cmp
add
fwait
in
mov
add
pushf
inc
add
inc
outsb
cmpsl
mov
add
pop
sub
add
scas
movb
adc
or
fnsave
jae
daa
insb
push
add
lock
add
xlat
cmp
shll
mov
add
add
jae
add
inc
sbb
dec
pop
xchg
mov
adc
mov
inc
xlat
addb
add
xchg
stc
fldl
jb
ret
lret
jmp
pusha
add
mov
xor
jle
movb
or
push
add
add
adc
fcmovbe
push
add
mov
pop
sbb
add
and
jl
mov
mov
add
add
add
mov
dec
pop
outsl
jbe
push
add
jl
add
add
pop
ds
add
test
aad
pop
inc
add
mov
add
mov
add
aam
ss
xor
pop
sti
repnz
cmp
adc
movb
cli
mov
in
and
lcall
add
add
inc
sbbl
sbb
add
rcl
jl
fldcw
jmp
cli
mov
add
mov
popf
sub
add
hlt
add
mov
scas
push
mov
cli
pop
lret
mov
outsb
pop
das
das
ljmp
aad
push
push
add
add
xorl
add
add
sahf
sti
cmp
add
into
ljmp
stc
add
add
les
out
sbb
test
bound
mov
int
xchg
aas
dec
sbb
insb
xchg
and
xchg
jo
xor
addb
sbb
xor
xchg
lods
outsl
xlat
or
add
ficoml
push
sub
leave
inc
xchg
mov
nop
add
int
and
mov
lret
add
push
add
rolb
inc
jae
lret
mov
call
lahf
and
pop
sbb
iret
fs
outsl
jne
and
mov
pop
xchg
add
push
addb
das
adc
pop
push
add
mov
aaa
movsl
cmp
mov
movsb
add
add
fnstenv
test
xor
cmpsb
add
cmp
repnz
aas
nop
add
addr16
test
decl
out
loope
add
dec
dec
shrl
dec
imul
outsb
add
add
stc
outsb
pop
fisubl
add
or
push
mov
add
enter
push
add
scas
sbb
add
ja
movsb
add
add
enter
call
mov
add
add
add
and
mov
loopne
sub
sbb
add
push
add
fsubrl
mov
clc
jbe
push
pop
push
add
add
ljmp
xchg
push
loop
enter
ds
add
lods
mov
sub
add
arpl
and
mov
add
xchg
adc
adcl
pop
push
add
mov
fdivl
stos
jns
repnz
and
push
add
sbb
add
add
add
test
mov
hlt
add
sbb
leave
mov
sbb
xchg
push
aas
lahf
mov
lods
and
rolb
mov
cltd
push
add
movsb
add
aas
add
rolb
call
out
outsl
sahf
or
add
ret
lods
mov
in
daa
into
push
mov
ret
cmp
lcall
xor
add
add
sbb
add
add
add
inc
add
push
test
or
add
jle
add
loopne
in
lock
add
add
jo
sub
add
add
lcall
aaa
inc
add
popa
ret
scas
jmp
push
add
add
mov
cmp
add
ljmp
add
or
push
and
add
mov
ret
mov
push
jg
add
add
scas
cmpsl
loope
push
xchg
add
and
fstl
aaa
xchg
add
enter
mov
in
sti
xor
mov
pop
repnz
pop
dec
and
mov
rolb
add
mov
jbe
sbb
dec
cmpsl
inc
add
mov
mov
out
lods
add
mov
imul
adc
add
add
mov
pop
pop
clc
fsts
fbstp
sub
inc
push
add
shl
addb
call
push
test
add
mov
add
loope
mov
add
add
add
iret
test
sbb
mov
mov
add
pop
aam
sub
xchg
addb
aam
push
add
test
movsb
add
cld
xchg
rolb
outsb
push
add
call
or
pop
xchg
scas
cli
jns
jecxz
xor
call
or
popf
mov
mov
insl
enter
add
push
inc
add
add
adc
or
push
add
add
mov
inc
add
add
push
add
rolb
repnz
mov
add
dec
mov
dec
test
add
add
movsb
add
lret
add
fists
add
adc
sbb
adc
mov
ret
xchg
aas
jl
inc
and
cmp
push
add
jecxz
add
mov
mov
push
push
add
add
loop
inc
add
stc
jbe
int
add
pop
insl
pop
rolb
add
mov
stc
xlat
add
aas
add
dec
test
or
xor
mov
xchg
add
testb
test
pop
or
add
add
repnz
push
in
popf
cmp
add
dec
push
in
loopne
out
hlt
add
fwait
movl
mov
pusha
add
mov
sbb
inc
push
jmp
add
add
out
fcomi
add
add
add
add
pop
aam
cmp
add
add
add
rolb
sahf
cmp
push
rolb
mov
arpl
cmpsl
lret
add
xchg
gs
and
add
ja,pt
enter
out
add
rolb
add
mov
js
lock
dec
push
inc
add
fwait
ljmp
addb
add
cwtl
pop
pop
add
mov
pop
jg
addb
push
add
add
out
dec
and
mov
add
add
xchg
mov
test
lret
sbb
add
mov
movb
add
into
sbbl
add
add
in
add
mov
cmp
mov
inc
and
rolb
dec
fldl
add
inc
add
lds
jb
movsl
add
add
add
pop
push
add
mov
repnz
add
add
dec
call
or
add
add
pop
jp
add
mov
add
loop
stos
daa
xchg
add
add
add
xor
and
mov
adc
cmpsl
pop
rolb
add
pusha
add
jns
add
cwtl
xchg
push
add
mov
iret
sub
inc
pusha
add
xchg
cmc
imul
cmp
mov
add
add
test
outsb
lock
add
lds
mov
add
fwait
xor
add
orl
inc
add
rolb
testb
mov
xchg
add
in
push
add
mov
add
test
add
out
add
lcall
rolb
add
inc
pop
sbb
lret
cmpsb
add
add
pusha
add
mov
add
add
add
mov
xor
adc
xchg
or
mov
add
ljmp
mov
ss
add
push
pop
and
or
mov
gs
pop
jbe
stos
push
add
xchg
outsl
out
mov
add
add
add
mov
push
cli
mov
repz
xor
push
add
add
inc
add
shrl
dec
or
int3
add
mov
movb
mov
dec
cs
add
add
mov
sti
pusha
add
mov
aaa
out
sub
sub
mov
add
add
jmp
sub
cmp
add
xchg
xchg
test
mov
add
pusha
add
jbe
push
add
loope
add
push
sub
add
mov
xlat
adc
into
in
mov
mov
add
pop
insl
or
sub
xchg
push
sub
nop
add
xor
push
fmuls
push
add
add
add
lret
mov
ljmp
cmp
lods
popa
xchg
or
add
gs
jne
add
add
mov
add
xor
js
pop
push
add
jg
xchg
add
ja
dec
pop
clc
daa
sub
add
add
and
mov
lret
popf
addb
mov
testb
or
add
add
mov
add
sub
xchg
int3
adc
push
dec
scas
addr16
imul
cmpsb
add
fbld
dec
pop
scas
or
in
add
js
fbstp
cli
data16
add
mov
add
mov
js
dec
int3
mov
mov
shll
add
mov
add
push
add
mov
jbe
or
aad
cmp
add
add
mov
subl
mov
das
push
loopne
xlat
ret
jae
xor
rolb
mov
jae
add
mov
add
mov
fwait
or
aas
leave
dec
bound
mov
dec
jo
test
lock
add
out
into
stos
shll
xchg
add
cmp
add
add
mov
sub
test
int3
pop
add
add
add
lock
add
loopne
dec
jle
loope
cmpsl
das
sbb
sbb
out
mov
sub
das
pop
data16
add
add
sbb
add
add
mov
add
mov
add
add
jo
pop
inc
daa
ret
movsl
mov
add
mov
xor
push
add
jnp
jae
add
cmp
xchg
inc
add
sub
mov
mov
jg
fstp
add
add
add
add
sbb
fsubrl
aaa
dec
ljmp
das
inc
pop
and
mov
mov
pop
mov
call
gs
pop
cli
iret
adc
mov
jno
jg
fstpt
in
xor
inc
add
add
add
cwtl
fdiv
jp
pop
dec
mov
dec
or
cli
shll
mov
fadds
add
mov
idiv
mov
mov
add
add
jl
xor
add
and
fwait
inc
add
push
dec
mov
mov
jp
jbe
fdivrl
imul
movsl
inc
add
add
push
add
add
cmp
add
mov
test
sbb
repnz
scas
loop
sub
arpl
sub
cwtl
pop
js
pop
pop
jp
add
sti
test
fisttpl
dec
or
call
xor
add
test
ja
sbb
xchg
add
mov
cmpsb
add
testl
jno
out
push
popf
push
sbb
mov
add
in
jle
stc
dec
enter
adc
jns
jmp
add
add
ljmp
add
or
adc
outsb
fisubs
lods
push
add
test
pop
lahf
pop
or
dec
add
xor
sbb
sub
push
add
jl
dec
lods
jmp
or
iret
jmp
test
add
ret
hlt
add
jecxz
insl
mov
inc
add
jo
aaa
or
push
add
iret
mov
sub
and
add
add
add
jle
dec
mov
add
cmp
add
xlat
aas
enter
stos
stos
push
iret
dec
add
mov
mov
mov
add
test
pop
xlat
push
ljmp
daa
rolb
push
add
das
js
push
add
add
add
testb
mov
clc
sbb
mov
mov
insb
pop
outsb
sbb
push
and
mov
inc
jae
popf
and
dec
add
fldl
fs
fucomip
jb
movsl
cld
mov
testb
push
add
hlt
add
xchg
add
xchg
sbb
pop
and
sti
in
mov
test
add
add
std
dec
jb
push
lcall
add
mov
adc
imul
test
mov
ret
sub
addr16
mov
add
jb
sbb
mov
push
add
add
das
adc
pop
sub
adc
insb
adc
aaa
lret
pop
sub
add
pop
dec
test
sbb
add
addb
add
push
mov
add
push
add
jmp
lods
rolb
dec
dec
or
test
or
sbb
sub
mov
pop
push
cmp
mov
add
sbb
jle
or
outsl
adc
dec
popa
or
outsl
and
cmpsl
in
mov
pop
roll
push
add
into
dec
jo
cmpsl
jp
add
test
dec
mov
adcl
stos
sbb
daa
aam
imull
add
mov
jg
loop
mov
add
adc
cwtl
xor
sbb
push
add
imul
and
mov
mov
add
jae
cmp
call
daa
push
dec
icebp
pop
cmpsb
add
lock
loope
imul
mov
add
insl
adc
and
mov
out
arpl
stos
push
filds
add
add
stos
adc
in
cmp
xchg
add
pop
bound
mov
mov
jl
test
aam
cltd
gs
and
mov
add
adc
or
add
mov
mov
leave
add
call
xchg
repz
xchg
add
add
mov
data16
add
pushf
out
in
stc
out
add
add
add
or
sub
mov
ljmp
pop
jo
testb
dec
jo
pop
clc
scas
sub
cltd
and
mov
imul
add
pop
lret
fisubrs
sti
and
jmp
sbb
mov
cmpl
and
mov
in
jae
hlt
add
add
add
ficoms
sub
cmpsl
out
mov
cltd
cmp
dec
enter
lea
add
lahf
push
add
push
add
clc
mov
add
add
aad
in
clc
sbb
test
add
mov
xchg
add
icebp
mov
add
fwait
ljmp
lock
subl
add
in
int
je
sub
pop
mov
push
add
int
or
push
add
pusha
add
add
and
js
mov
imul
push
mov
add
xchg
fdivs
push
add
dec
pushf
mov
adc
push
xor
iret
addb
jbe
push
add
sub
into
cwtl
mov
push
ja
and
inc
add
sti
add
mov
sbb
xor
add
movsl
xor
icebp
aam
in
add
add
sbb
pop
jge
in
int3
in
lret
and
out
lret
jne
add
xlat
bound
mov
add
adc
jge
jle
out
mov
fs
xchg
add
add
xchg
bound
mov
inc
add
leave
aaa
cmc
mov
out
add
jns
add
xchg
mov
cwtl
addb
add
push
ffreep
or
jle
mov
fisttps
push
jnp
add
xlat
arpl
inc
testl
add
mov
gs
adc
xchg
cmp
mov
nop
add
add
ja
push
add
gs
add
add
sti
enter
and
pop
mov
pop
fcoms
sbb
iret
mov
addb
add
add
mov
mov
add
fadd
add
add
add
fs
xchg
add
cmp
cmp
mov
add
add
mov
add
aam
popa
pusha
add
ss
mov
rolb
lods
jno
add
sub
add
dec
stos
lods
mov
cmc
repz
cmp
inc
add
aas
or
push
add
push
mov
add
inc
lock
aad
add
mov
jns
add
in
cmp
add
mov
repnz
fildl
add
add
movb
add
add
cs
in
outsb
scas
and
ja
jmp
or
add
nop
add
add
add
add
add
xchg
rcll
add
xor
add
mov
insl
mov
add
rolb
lret
pop
mov
add
in
mov
in
jbe
popf
dec
and
mov
add
sahf
xor
add
push
add
add
sub
bound
mov
add
xlat
mov
into
push
add
add
add
scas
insb
je
cmp
add
pop
aas
xor
mov
cli
repnz
and
mov
add
xchg
add
push
mov
int3
sbb
sbb
add
mov
push
add
add
int3
pop
add
mov
push
add
stc
call
sbb
mov
shll
add
sbb
push
jmp
add
pop
bound
mov
mov
scas
add
out
fwait
lcall
les
lods
pop
cmp
add
or
out
in
xchg
mov
xchg
adc
lods
mov
pusha
add
add
pop
xor
jecxz
sbb
stc
xchg
add
mov
or
add
mov
add
insb
adc
add
imul
pop
stos
sahf
sbb
mov
add
add
jp
adc
xor
xchg
das
jmp
les
stos
ljmp
inc
pop
loope
gs
lock
push
push
add
add
jecxz
mov
mov
ret
dec
test
mov
xchg
add
add
add
inc
jne
adc
cmp
mov
int3
dec
pop
adc
pop
gs
mov
repz
add
mov
add
outsb
dec
pop
stos
je
movb
pop
ficoml
sbb
add
add
add
add
add
add
lds
out
xor
pusha
add
lods
test
jmp
mov
add
mov
sbb
mov
add
mov
fcmovnbe
add
pop
and
add
mov
add
fdivs
pusha
add
and
fnsave
inc
add
jns
mov
frstor
or
lret
add
cs
mov
push
sub
in
daa
sub
xor
call
or
movb
cltd
cmp
add
add
hlt
add
inc
add
mov
out
rolb
lret
mov
xchg
stos
inc
add
pop
inc
add
jae
call
cwtl
or
lds
inc
ret
pop
sub
in
sbb
push
add
xchg
mov
add
fisubl
add
addb
add
add
stos
jae
fdivl
inc
rolb
sub
int
repz
add
mov
xchg
add
sbb
lods
mov
outsb
mov
dec
jecxz
add
icebp
bound
mov
push
fidivrl
add
pop
fildll
add
lcall
add
jmp
add
jb
dec
into
addl
add
xor
sbb
out
or
push
xor
scas
pop
or
add
jae
add
mov
sti
adc
cmp
scas
mov
mov
in
mov
data16
jno
add
int3
dec
repz
add
xor
and
lods
mov
bound
mov
adc
fadd
add
add
hlt
add
fsub
add
test
or
das
dec
push
shll
adc
adc
ja
add
stc
sbb
sub
xor
or
sarl
mov
testb
add
pop
sbb
add
push
add
adc
imul
pop
mov
stc
sub
add
add
add
xor
xchg
add
lock
add
xlat
and
xchg
mov
pop
mov
add
or
pop
mov
fisttpll
ds
push
add
add
mov
mov
jne
mov
mov
cmc
les
sahf
and
add
fwait
xor
push
add
mov
test
add
and
pop
add
scas
cmp
jle
lret
inc
in
xchg
add
xchg
inc
pop
cwtl
jo
and
mov
stc
int3
orl
mov
jmp
add
or
add
mov
test
add
pop
fxch
xchg
mov
xor
pop
in
and
addb
stos
jp
stos
loopne
es
add
cwtl
rolb
push
add
lret
aam
add
sub
dec
aad
pop
push
fsave
imul
add
call
inc
and
mov
mov
xchg
add
add
pop
push
stos
lret
popa
iret
cmpsl
xchg
testb
add
aam
dec
cmp
jo
out
fcompl
arpl
add
add
mov
in
popf
dec
push
sub
mov
in
pop
mov
mov
add
push
sub
add
cmp
jbe
add
lret
pushf
xor
add
add
inc
xchg
fcmovnb
add
cmp
add
add
add
lret
mov
inc
add
add
jl
fcoms
movaps
add
in
test
pop
mov
jne
or
add
add
add
inc
push
add
pop
out
imul
ret
mov
mov
add
jns
add
sbb
data16
sbb
repz
pop
mov
stc
adc
dec
shll
add
add
bound
mov
add
fidivl
add
gs
mov
adc
push
into
mov
add
xor
add
mov
rolb
xor
imul
je
subl
adc
mov
add
loop
inc
decl
mov
add
pop
push
add
std
std
mov
mov
inc
add
jbe
push
mov
add
lret
adc
les
scas
mov
int
xchg
loope
test
add
jo
lea
aas
call
mov
pop
popf
mov
dec
mov
roll
lods
cmp
iret
pop
pop
cltd
mov
or
sti
push
sub
add
aaa
and
mov
mov
mov
popa
fisubrs
cmp
cli
sbb
pop
and
loop
call
fstps
mov
add
popa
movb
add
add
pop
dec
and
add
add
mov
add
mov
movsb
add
ja
mov
outsb
imul
add
pop
mov
mov
add
addb
add
fnstcw
cmp
and
push
sbb
enter
and
mov
loope
jns
add
add
mov
inc
je
push
mov
ljmp
add
dec
xor
push
inc
data16
dec
outsb
in
fdivrs
mov
sbb
rolb
mov
hlt
add
pop
aam
push
add
pop
jle
add
pop
cli
inc
add
dec
je
fmull
adc
rolb
sti
or
xchg
cli
sbb
int
fldenv
mov
add
mov
adc
or
jge
sbb
add
xor
imul
mov
add
jp
add
or
lods
std
push
add
add
pop
push
fcompl
add
add
out
outsb
mov
sbb
add
add
pop
testl
add
add
add
add
fldt
inc
add
add
add
out
xchg
add
in
add
jge
out
add
mov
mov
push
mov
and
lods
bound
mov
jg
adc
cmpsl
and
jno
add
sub
add
stos
mov
adc
mov
xchg
add
loope
movsl
mov
fimuls
lcall
pop
jle
addb
add
mov
in
cmp
add
add
aad
in
add
movsl
sub
add
add
inc
popl
add
or
add
subl
ds
sub
out
mov
cmpsl
pop
push
push
daa
icebp
insl
movsl
inc
movsl
in
in
push
add
mov
ljmp
add
and
mov
add
add
mov
add
mov
mov
xchg
mov
xchg
repz
js
add
sbb
imul
daa
xchg
lds
add
sbb
xor
or
arpl
mov
add
pop
addb
add
jmp
call
out
push
test
jo
hlt
add
add
das
inc
xor
push
add
add
je
aad
xlat
out
ret
insb
dec
mov
adc
pop
push
add
je
and
mov
leave
mov
mov
rolb
incb
adc
jnp
add
xor
pop
enter
jmp
add
xchg
jg
popa
repnz
add
add
fnstenv
or
ljmp
loop
ret
js
jne
or
out
mov
pop
insl
movb
in
mov
imul
add
ss
add
pop
inc
add
mov
add
adc
jmp
mov
pop
push
add
roll
add
add
repnz
mov
inc
xor
lcall
mov
mov
jno
add
push
add
mov
add
jnp
add
loope
jo
jbe
jnp
loopne
cmp
inc
add
pop
add
mov
les
sbb
add
imul
sub
and
roll
in
xor
adc
add
inc
ret
addb
add
int3
jo
imul
int
add
push
push
add
cld
dec
movsb
add
je
jnp
add
outsl
mov
icebp
fdivl
push
data16
add
push
jbe
lret
xchg
std
push
int3
dec
pop
sarl
adc
inc
or
add
mov
sbb
popf
orl
addb
icebp
adc
add
add
mov
xchg
add
ja
add
jae
pushf
sub
lret
test
pop
jcxz
add
mov
inc
add
out
stos
mov
add
add
lea
aaa
ficoml
add
lods
pop
mov
fucomi
lret
movb
add
mov
add
out
movb
add
sbb
dec
leave
adc
adc
push
add
add
cmp
sbb
aaa
and
jecxz
rolb
add
int
add
loope
dec
add
leave
aam
jae
add
xor
mov
lods
insl
imul
add
xchg
add
and
test
add
add
inc
pop
dec
movsl
mov
add
xchg
pop
xchg
add
pop
ja
push
add
iret
mov
mov
aas
xor
sub
push
cmpsb
add
mov
jns
push
add
sub
add
or
dec
pop
mov
push
add
mov
add
lock
add
jl
xor
cwtl
inc
add
mov
ret
inc
icebp
push
mov
adc
add
std
add
shll
add
fwait
mov
xlat
jnp
das
adc
addb
add
xor
jbe
daa
mov
add
add
add
add
insb
mov
mov
jle
add
add
into
ds
dec
xchg
jp
add
mov
xchg
add
add
add
add
xchg
add
add
cmp
add
sub
fsubl
add
add
lret
test
add
add
mov
or
das
or
add
cltd
and
add
jb
mov
add
idivl
add
and
fisttpl
mov
adc
add
pop
push
add
mov
ret
popa
fstps
jbe
xchg
add
hlt
add
pop
mov
out
inc
add
int
call
add
lahf
xor
cwtl
jl
add
jecxz
mov
add
sti
into
fildll
iret
pop
mov
xchg
mov
push
xchg
dec
sbb
add
push
test
mov
lcall
mov
fisubrs
cmp
movb
add
push
test
jno
jge
push
add
add
mov
push
add
gs
dec
pop
cmp
lock
cmp
imul
and
mov
ret
repz
loop
xor
cwtl
mov
ret
dec
les
loopne
js
rolb
popf
cmp
addb
or
mov
adc
cwtl
push
pop
sub
out
xchg
mov
iret
push
add
call
cmp
add
add
cmp
repz
add
dec
inc
sti
xchg
add
dec
xor
jae
test
and
mov
inc
lcall
push
add
push
add
lods
out
lds
or
sub
add
shll
mov
dec
or
xor
inc
add
mov
xor
add
sub
addb
inc
add
pop
add
xchg
scas
dec
cmp
add
mov
dec
xor
ljmp
add
push
scas
imul
int3
mov
ja
add
add
sbb
add
mov
mov
scas
xchg
ror
das
inc
or
and
and
lret
add
jge
jnp
add
and
mov
arpl
inc
add
add
and
pop
or
sub
sahf
push
add
sub
test
outsl
lds
add
aas
in
ror
lahf
test
test
in
mov
and
mov
je
sbb
pop
cmp
xchg
add
rcrl
xchg
and
xchg
add
ret
js
add
or
add
pop
shll
pop
insb
addb
inc
add
push
lret
bound
mov
add
cmp
test
pop
fnstenv
add
add
add
push
pop
push
mov
add
mov
push
rolb
add
jb
mov
pop
std
push
loop
mov
lds
repz
jl
in
idivl
gs
mov
insl
test
or
add
testb
add
pop
inc
fidivl
gs
add
add
add
mov
add
imull
mov
sub
jo
xchg
add
in
iret
mov
add
fists
add
jmp
cmpsl
hlt
add
add
pop
lahf
push
add
movb
add
sub
or
xchg
pop
mov
add
add
lds
or
jmp
push
add
add
xorl
add
push
icebp
inc
add
push
add
mov
mov
mov
frstor
sbb
fsubrp
cwtl
mov
test
popa
test
inc
lods
fsubrs
je
sti
repnz
mov
add
mov
add
mov
push
add
add
xchg
add
cmp
add
int
sub
fisubl
cmp
add
pop
xor
daa
pop
xchg
add
insb
push
popf
ret
push
add
dec
movsl
pop
popa
xchg
adc
fadds
rolb
js
addr16
xor
aam
push
mov
cmpl
and
mov
bound
mov
inc
inc
push
cmp
xor
add
dec
cmpl
stos
mov
cli
sub
popa
rolb
je
pop
xchg
add
dec
je
jecxz
add
out
sahf
mov
jns
jl
add
push
shrl
arpl
pushf
add
add
outsl
sub
dec
cld
ret
nop
add
bound
mov
add
not
add
data16
adc
outsl
cmp
and
add
jb
cld
rorl
out
in
sbb
dec
pop
inc
mov
add
mov
mov
add
cmc
push
add
pop
pop
cmp
xchg
pop
mov
cmp
rolb
and
mov
dec
dec
cmp
adc
add
add
lcall
std
iret
mov
es
add
push
push
daa
addb
add
and
add
add
pop
xchg
pop
push
test
loop
addb
addr16
mov
ret
scas
popf
movsl
clc
xchg
cmp
into
fwait
pop
mov
flds
mov
push
add
jl
pop
ret
add
int3
orl
dec
sub
xchg
inc
add
add
add
add
dec
insl
pop
jbe,pt
out
add
iret
testb
inc
xchg
fstps
add
test
add
push
add
add
mov
sub
add
cli
push
add
fidivrl
xchg
adc
add
push
add
add
insl
and
mov
sbb
and
add
add
xor
and
jl
mov
fcmove
push
sub
cmp
and
cltd
sub
inc
outsl
push
add
add
dec
jecxz
cmc
push
add
cmp
xchg
loope
add
jns
or
add
add
add
movsl
and
mov
add
add
push
data16
rolb
cmpsb
add
push
push
add
cltd
jbe
stos
rolb
loop
cmp
add
add
iret
loopne
and
jl
cmp
sti
mov
add
cli
sub
add
mov
add
repz
add
add
add
mov
daa
test
add
add
push
add
scas
xor
leave
sbb
scas
test
movb
add
cmp
add
xor
push
leave
sub
mov
add
pushf
jns
stos
lock
add
mov
repnz
ljmp
jecxz
adc
inc
aas
addr16
cmc
dec
dec
insl
les
push
jle
rolb
pop
dec
cmpsl
insb
push
add
add
dec
inc
add
jl
jbe
cmp
add
icebp
mov
mov
and
mov
bound
mov
ds
addl
pop
negl
push
mov
imul
jnp
mov
xchg
add
aad
adc
inc
jg
sub
sub
iret
loope
movsl
loope
outsb
repnz
adc
xchg
and
mov
fldl
ljmp
pop
ret
andl
add
mov
clc
leave
fcomps
add
add
int3
pop
test
mov
push
pop
mov
add
add
stos
arpl
adc
jge
add
add
negl
push
add
adc
lods
inc
add
sub
mov
xor
add
decl
xchg
ret
test
arpl
dec
or
js
out
adc
push
add
add
imul
loop
fcoms
inc
add
mov
xchg
lods
adc
unpckhps
and
rolb
xor
mov
loopne
stos
mov
sarl
fcoml
xor
add
mov
mov
xchg
add
ret
cmp
pop
cmp
in
xchg
scas
lfs
cvtpi2ps
or
into
in
scas
jae
xlat
repz
push
add
add
xor
xchg
add
add
scas
jge
add
loope
add
add
add
add
mov
inc
or
add
add
aam
rolb
or
add
insl
sbb
hlt
add
mov
add
test
add
pusha
add
add
add
aaa
nop
add
inc
add
pop
mov
inc
mov
daa
test
dec
inc
inc
add
jp
dec
add
add
cs
push
add
add
push
add
dec
lret
rolb
mov
sub
int3
aam
lcall
inc
add
xor
mov
pop
adc
mov
scas
jecxz
je
bound
mov
cmp
inc
add
jg
push
add
cltd
lds
xor
fdivr
push
add
mov
mov
testb
add
mov
add
cmp
add
cmp
aaa
cmp
jbe
inc
and
mov
sbb
mov
add
aad
xchg
aas
in
into
and
mov
int
dec
dec
mov
stc
xor
jno
and
mov
fsubl
add
sbb
cmp
add
insb
xchg
add
xor
or
add
rolb
lock
mov
outsb
lods
in
in
lods
fisttpll
testb
mov
add
add
add
test
jno
mov
dec
add
add
sbb
mov
movsb
add
repnz
xchg
add
lods
insl
out
xchg
xchg
lahf
popf
cwtl
into
das
out
cmp
fs
add
jp
push
mov
decb
xchg
addb
bound
mov
or
sub
xchg
add
outsl
and
mov
lcall
cmp
cmp
lds
call
mov
enter
outsb
scas
loop
jo
cmc
aad
testb
data16
jbe
lret
clc
loop
jmp
ficoml
mov
daa
movsl
imul
add
and
mov
jno
push
repnz
add
sbb
jp
sub
or
cmc
mov
jb
jno
add
add
ja
test
rcll
rolb
sub
call
xor
rolb
mov
adc
lret
sub
push
dec
movsb
add
and
mov
rolb
jo
push
add
push
add
add
mov
int3
icebp
testb
ss
inc
imul
adc
mov
add
mov
dec
mov
pushf
ss
sbb
add
add
inc
add
add
add
add
mov
add
es
fisubrs
pusha
add
repz
sbb
mov
mov
sbb
pusha
add
add
add
movsb
add
xor
sar
sub
adc
sbb
add
jecxz
add
add
repz
add
test
lahf
mov
add
add
push
add
mov
push
into
rolb
call
or
add
jnp
add
push
add
add
push
ss
add
add
mov
inc
add
push
add
and
mov
in
jle
dec
aaa
leave
nop
add
addb
mov
xor
xchg
ret
clc
dec
pop
xor
lock
mov
xchg
add
add
mov
les
mov
xor
or
iret
pop
push
jbe
mov
add
inc
add
int
or
outsb
or
sbbl
insb
mov
pop
push
push
and
pop
testl
call
adc
add
mov
pop
push
add
add
mov
add
add
and
mov
imul
mov
ret
or
mov
and
mov
add
add
mov
cmp
dec
lea
add
add
mov
pushf
js
inc
add
push
add
mov
imul
repnz
sub
mov
lahf
ljmp
mov
in
cmp
ljmp
in
addr16
cmp
mov
movb
adc
enter
out
in
push
dec
dec
push
gs
and
mov
or
daa
cmp
fcompl
add
loop
xchg
add
lock
test
and
stos
mov
xor
mov
loope
adc
nop
add
add
add
movsl
mov
pop
aad
sti
jecxz
mov
dec
or
fcompl
mov
mov
add
sbb
mov
pop
add
and
mov
add
add
in
ret
add
pop
and
mov
mov
mov
cmp
mov
pusha
add
mov
mov
add
ffree
xchg
add
xor
or
mov
clc
mov
inc
aas
aaa
cmpsb
add
add
cmc
stos
sbb
repz
mov
sub
js
ss
add
mov
sub
xchg
or
add
stos
pop
sbb
out
jbe
popf
push
add
fdivrl
xchg
adc
mov
add
sbb
or
cmp
sub
cltd
add
mov
aaa
or
mov
ss
inc
je
mov
sbb
dec
mov
movb
arpl
lcall
and
imul
jmp
iret
testb
ds
sbb
enter
add
add
pop
test
fldl
add
loopne
push
add
mov
add
push
add
xchg
je
aad
lcall
mov
rolb
push
add
sbb
movb
sub
cmp
xor
push
add
add
sbb
pop
cltd
xchg
add
add
and
mov
testb
add
sbb
xchg
add
fdivrl
mov
pop
in
xchg
add
inc
add
push
cs
inc
add
jb
add
mov
add
push
mov
out
xor
bound
mov
cs
fwait
add
mov
rorl
insb
push
add
mov
int3
out
push
popf
and
add
mov
and
addb
add
add
add
add
imul
les
movsb
add
add
sti
xchg
mov
rolb
cmpsb
add
es
add
mull
add
push
add
dec
int3
rolb
cmp
push
add
inc
add
mov
push
stos
cmp
dec
loope
xchg
pop
mov
dec
dec
inc
add
add
fisubs
mov
loope
inc
add
pop
xchg
add
fsubrl
jg
lods
rcr
xor
loop
sub
add
or
cmp
lahf
xor
jae
add
dec
test
jle
pushf
dec
les
fwait
jmp
clc
js
nop
add
rolb
test
sub
mov
addb
testb
popf
inc
add
leave
lahf
inc
dec
enter
loop
lahf
pop
sbb
into
aad
pop
jge
pop
dec
popf
scas
stos
pop
adc
data16
add
fbstp
add
add
fdivrs
stos
outsl
jecxz
loop
hlt
add
testb
add
stc
inc
add
jb
or
mov
dec
leave
inc
add
pop
cmc
out
nop
add
int
push
add
aam
in
push
mov
pop
ficomps
adc
popf
adc
xchg
add
fwait
dec
addb
jp
sbb
pop
rcll
pop
mov
xlat
aaa
rolb
add
stos
inc
add
ja
mov
out
loop
sub
or
enter
rolb
js
pop
jl
loopne
cltd
xor
xchg
xor
mov
add
mov
add
pop
fwait
and
pop
repnz
jae
xor
xor
ret
in
add
add
gs
lret
adc
mov
fildll
add
jb
jl
fwait
jbe
leave
push
and
out
mov
cmpsb
add
and
sub
fimuls
or
rolb
popf
or
pop
pop
ficompl
add
inc
add
fildl
scas
jnp
out
cmp
mov
add
xor
pop
sub
cwtl
mov
or
mov
mov
sub
mov
adc
loop
xor
lcall
mov
add
mov
in
fstp
dec
push
add
add
ret
clc
addl
push
loope
sti
push
push
add
iret
jge
mov
xor
push
jb
inc
add
add
jge
adc
jg
lahf
testb
ds
xor
add
sbb
mov
add
popa
cs
jge
stc
cs
ret
xchg
add
add
add
mov
movb
mov
jecxz
jg
jno
add
jle
jne
add
push
adc
call
push
add
mov
xchg
add
sbb
inc
add
add
sahf
pop
sbb
nop
add
mov
mov
pushf
lea
popf
lods
pop
icebp
mov
xor
jbe
add
mov
mov
and
mov
or
pushl
add
add
sub
or
add
sbb
stc
adc
stc
push
push
xor
addb
inc
add
fwait
fiadds
add
add
dec
insl
call
dec
nop
add
jo
cltd
mov
add
xchg
add
das
nop
add
ret
into
adc
push
sub
jne
ja
inc
add
add
dec
loopne
pushf
and
mov
stos
jo
in
cltd
or
pop
stc
lret
mov
lods
dec
mov
scas
sahf
pop
data16
cmpsl
sub
dec
lods
push
jecxz
inc
fists
jle
add
push
add
add
add
mov
adc
pop
test
mov
out
lods
or
mov
xor
add
mov
mov
mov
dec
data16
add
inc
xor
into
daa
mov
add
call
lods
out
sbb
inc
add
mov
popa
test
push
add
adc
mov
push
add
jno
fcoml
jp
aaa
rolb
addb
push
add
std
jg
stos
call
add
add
cmp
or
repnz
push
test
mov
lret
add
add
xor
in
test
std
jb
dec
add
mov
add
nop
add
push
add
out
jne
stc
push
add
mov
or
mov
add
les
mov
and
int
mov
scas
lret
dec
adc
cmp
data16
nop
add
mov
test
jle
dec
cli
clc
dec
inc
add
adc
jns
sub
add
add
xor
mov
add
xor
repnz
or
push
jae
jb
xor
jns
movsb
add
add
add
dec
je
push
add
rolb
lret
xchg
add
add
add
pop
adc
loopne
sarl
add
rol
add
inc
add
add
mov
push
scas
bound
mov
add
dec
fstpt
mov
movb
jnp
xor
mov
stos
sbb
hlt
add
add
sbb
outsb
mov
push
xchg
dec
adc
mov
jbe
stc
and
mov
jnp
pop
or
add
cmp
xchg
lcall
test
add
mov
sahf
push
add
pop
popa
jmp
loope
jno
add
mov
outsb
jb
fistpl
ret
push
loope
add
jmp
mov
adc
push
aad
push
mov
cmp
aaa
std
testb
clc
mov
cmp
movsl
loop
mov
add
lea
add
add
scas
enter
and
mov
add
cmp
push
add
push
push
add
add
popf
fxch
pop
icebp
lret
jg
orl
sub
xorl
or
add
dec
jg
mov
mov
add
dec
icebp
sub
mov
std
stos
sahf
loopne
inc
pop
test
and
das
cmpsl
dec
clc
xchg
addr16
push
xchg
add
add
pop
aaa
lcall
mov
xor
fwait
and
mov
adc
in
lahf
insl
and
mov
outsl
or
add
add
sti
jecxz
negl
add
imul
sbb
xchg
leave
rolb
mov
lods
bound
mov
lea
jbe
inc
add
test
outsb
pop
sahf
push
and
addr16
fwait
mov
pop
sbb
push
add
add
add
add
pop
mov
scas
cltd
dec
jp
jl
xor
inc
add
test
fcompl
xor
xchg
pop
iret
inc
add
or
add
fbstp
cmp
add
mov
loopne
push
add
pop
mov
add
ret
or
jg
sub
add
test
frstor
push
add
add
pusha
add
cs
gs
mov
or
add
jl
std
inc
lret
adc
jb
aaa
fwait
inc
add
xchg
add
pop
sbb
fwait
outsl
and
fisubrs
add
clc
add
mov
cltd
inc
loope
and
insl
ja
add
rolb
dec
pop
pop
mov
add
mov
add
sub
adcl
add
cmpsl
jbe
mov
xlat
das
addr16
ja
data16
movsl
xor
and
mov
jl
sbb
rolb
fistps
scas
addb
jg
fldt
dec
scas
dec
xor
in
sbb
sub
add
out
push
dec
cmpsl
add
adc
insl
dec
add
add
add
popa
xlat
inc
add
mov
ficomps
pop
sub
mov
add
add
data16
mov
add
repnz
jno
dec
addr16
jle
jb
mov
addb
gs
add
fcomps
mov
cwtl
push
or
in
sti
mov
stos
aaa
inc
add
testb
pop
xor
sahf
cmp
sub
int3
sub
fildl
pop
xchg
add
cs
imul
cmp
movsl
les
add
mov
mov
add
test
add
add
insl
cmp
add
cmp
xor
jmp
ljmp
add
sub
add
add
insl
dec
jb
jne
add
xorl
cmp
ljmp
dec
mov
mov
stos
mov
dec
scas
and
lret
add
sbb
pusha
add
aad
in
sub
gs
jg
add
add
add
call
push
push
add
mov
inc
and
maxps
andl
xor
loop
out
mov
inc
add
mov
add
and
mov
sbb
sbb
add
outsb
cmpsl
xor
lock
add
mov
addr16
data16
cmpsl
dec
jbe
sahf
call
add
add
mov
mov
ret
jne
cld
pop
test
sub
call
add
test
cmpsb
add
movb
mov
inc
add
add
add
add
icebp
mov
add
incb
in
push
lods
jae
cmp
pop
mov
add
add
mov
popa
loope
cmpsb
add
sub
adc
jg
add
mov
cmp
mov
pop
movb
movb
aad
add
sub
add
aam
jno
inc
add
jns
add
dec
jl
inc
add
repnz
jne
add
push
pop
xor
and
add
adc
adc
push
add
fst
add
not
into
dec
jne
push
add
add
mov
adc
push
add
dec
jmp
add
les
ror
es
in
pop
nop
add
test
pop
leave
aaa
sarl
mov
pop
test
aaa
iret
add
mov
add
add
add
mov
sbb
sti
and
push
add
add
dec
fadds
add
mov
push
add
jmp
add
data16
mov
add
add
mov
sbb
adc
arpl
mov
enter
je
add
or
movsb
add
lcall
add
xor
add
add
push
add
pusha
add
out
imul
nop
add
and
mov
sar
mov
test
add
or
insl
add
mov
sbb
pushf
test
add
add
pushf
fistl
pushf
icebp
test
xchg
add
iret
test
add
stc
mov
or
pop
call
add
add
ds
inc
lods
arpl
testb
add
mov
sub
ljmp
pop
int3
rcll
pop
push
add
add
aam
insl
push
dec
xor
or
add
fcmove
mov
enter
add
add
cltd
cmp
or
pop
daa
jne
cmpsb
add
les
testl
movsb
add
add
jg
mov
leave
stos
push
inc
add
add
dec
dec
push
add
add
das
out
cmp
or
mov
mov
jmp
add
add
add
bound
mov
push
add
pop
std
xor
lret
lds
sbb
push
add
dec
push
add
xor
cs
pusha
add
repnz
mov
mov
mov
stos
icebp
jp
jo
cmp
pop
fsubs
or
int
add
js
fxch
xor
sbb
add
fcomi
add
add
js
add
mov
push
add
add
icebp
in
inc
push
xchg
add
mov
push
add
xchg
add
add
add
inc
adc
push
dec
or
mov
fdivrp
mov
pop
shrl
dec
and
mov
xchg
ja
add
in
out
add
mov
add
pop
inc
rcrl
loop
incb
pop
pop
in
add
mov
dec
xchg
pop
test
lahf
sahf
mov
mov
mov
cmpsl
ficompl
pop
shrl
test
xor
roll
add
mov
and
add
and
movl
adc
inc
mov
xchg
add
add
sub
mov
rolb
xchg
fldl
jbe
jge
cmp
add
loopne
jbe
mov
add
or
sbb
add
sub
out
jne
add
in
int
inc
jl
loope
mov
out
out
rolb
jge
add
and
add
fsubrs
or
add
jbe
inc
add
fs
inc
add
mov
add
mov
lret
pop
call
sub
rorl
mov
add
inc
add
and
mov
add
push
je
ljmp
mov
add
add
int3
stc
jns
popf
test
add
mov
pop
testb
aam
add
mov
adc
ja
xchg
add
ficomps
cmpsb
add
xchg
add
add
or
stos
addb
xchg
add
push
add
xchg
add
add
pop
popa
and
xchg
xchg
sub
mov
add
xchg
jl
adc
stos
mov
push
fstl
xor
push
add
xchg
sub
mov
popa
jo
jne
loop
pop
lods
out
lock
xor
add
add
mov
cmp
cmp
add
dec
inc
add
mov
es
xchg
and
mov
add
mov
add
cmp
push
add
jp
push
out
and
mov
iret
data16
or
or
jns
pop
ljmp
cli
pushf
xchg
add
jae
dec
add
mov
dec
mov
cli
pop
inc
add
out
les
adc
aam
icebp
aad
add
add
sbb
outsb
mov
ljmp
add
add
xchg
icebp
in
jl
add
add
jb
rolb
xchg
dec
add
add
test
pop
lret
push
add
mov
cmove
test
add
add
inc
add
cmp
add
mov
enter
add
jmp
add
in
push
add
rcll
fcoms
push
add
out
mov
dec
cmp
add
fldpi
in
xor
xor
pushf
xor
fbstp
add
movsl
dec
test
add
aad
inc
cmp
sub
add
in
dec
movsl
add
mov
add
pop
jp
les
aaa
daa
push
add
rolb
add
xor
les
dec
clc
inc
add
add
add
mov
mov
jb
test
sti
scas
clc
push
xor
jp
add
jmp
add
add
aad
mov
sbb
gs
sbb
push
mov
mov
add
sahf
mov
add
or
and
mov
sbb
icebp
mov
add
jmp
mov
insl
push
sti
int
imul
mov
jo
fdivs
sbb
add
xchg
addb
pop
lock
jg
add
add
hlt
add
bound
mov
add
iret
push
add
xchg
add
mov
mov
int3
dec
cli
mov
test
out
sbb
pusha
add
or
sub
mov
and
add
data16
sub
sbb
pushf
lret
test
add
add
mov
sahf
movsl
sub
cltd
push
add
icebp
dec
jae
inc
xor
dec
jb
iret
push
add
dec
and
lret
adc
addb
add
mov
push
add
ficoml
or
enter
gs
rolb
mov
jae
add
add
inc
add
push
mov
sub
xchg
in
jo
mov
out
movb
mov
and
mov
add
push
int
fcompl
jo
xchg
jg
or
xor
repz
dec
inc
adc
shrl
add
or
cmpsb
add
popa
enter
sbb
shl
xor
test
push
add
add
and
mov
add
and
jbe
sahf
jmp
cmp
cwtl
push
fstpl
lcall
out
movsb
add
scas
add
cmp
adc
sbb
dec
cwtl
test
mov
fldenv
cld
dec
rcll
add
cs
add
aas
aaa
add
xor
imul
enter
addb
test
push
add
dec
test
rolb
mov
mov
push
add
add
nop
add
test
add
aad
add
in
mov
mov
sub
testb
imul
sub
add
lods
sbb
add
add
add
call
add
mov
or
mov
push
add
or
mov
rolb
mov
or
xchg
add
push
mov
adc
arpl
cltd
push
or
adc
mov
mov
dec
enter
push
push
mov
or
jae
add
jb
jbe
jno
adc
xor
push
mov
add
jge
add
sub
add
sub
jp
movb
jbe
jns
out
cvtps2pi
mov
outsb
loopne
jnp
xchg
add
add
xor
inc
add
add
add
push
push
sub
dec
push
rolb
btrl
mov
cli
jnp
movb
add
push
add
jle
les
fwait
pop
popa
addb
jmp
pop
or
mov
jnp
mov
add
add
testl
in
lea
add
jbe
pushf
pop
mov
dec
jle
mov
push
add
add
push
push
add
add
loopne
mov
add
bound
mov
jne
rolb
mov
test
imul
add
pop
mov
cwtl
sub
stc
fldenv
mov
mov
add
mov
jno
push
lahf
mov
add
cmc
test
add
sbb
lcall
lcall
fsubs
xchg
leave
mov
add
add
insl
insl
cmpsl
lods
insb
xchg
popf
std
dec
lcall
push
add
jge
inc
add
add
adc
and
repz
push
inc
add
js
and
mov
dec
sub
popa
xor
loopne
mov
test
mov
mov
addb
pop
arpl
pop
popa
les
nop
add
jmp
sbb
mov
inc
add
test
jno
add
cs
add
mov
inc
add
add
lcall
add
add
push
mov
cmp
xor
pop
mov
add
add
mov
movb
sbb
jnp
adc
mov
lret
add
add
add
add
jmp
add
jge
xlat
push
push
add
es
jp
add
add
ds
jne
sub
fs
add
icebp
mov
add
insb
push
add
adc
mov
repz
add
add
mov
mov
add
mov
add
in
rcl
add
nop
add
add
add
xor
cmp
add
add
mov
add
scas
sub
mov
pop
dec
adc
add
stos
add
xchg
add
push
push
cli
xchg
mov
mov
push
jmp
add
jmp
add
or
adc
pop
inc
add
push
add
pop
pop
sub
insb
out
or
add
sub
xor
jo
pop
pushf
add
jnp
sbb
lret
cld
dec
fdivs
add
add
add
add
add
add
add
add
jmp
push
mov
jle
xchg
add
fimull
mov
mov
mov
scas
mov
add
jbe
loope
icebp
inc
imul
inc
mov
add
jno
test
push
xor
aaa
sbb
add
arpl
mov
xchg
add
jecxz
add
mov
add
jmp
iret
out
cmp
push
clc
ds
pop
int3
mov
jbe
push
add
jnp
add
dec
cmp
add
scas
jl
add
and
mov
add
jecxz
add
lahf
sbb
push
add
cmp
jecxz
push
add
push
sub
loop
cld
pop
call
jp
lret
pop
dec
xchg
inc
add
add
push
add
xchg
add
lret
push
add
add
dec
testb
test
jnp
jg
jp
jb
icebp
mov
mov
cld
cmpsl
insb
xor
addr16
xor
and
add
in
sbb
jmp
inc
mov
test
xlat
adc
jg
add
inc
add
daa
xchg
cld
push
iret
test
addb
add
push
add
dec
fmull
dec
nop
add
repz
jae
fsub
dec
ja
jae
add
mov
add
std
sbb
add
mov
add
cli
sub
cwtl
icebp
push
xlat
xor
rolb
add
cmpsl
pusha
add
push
add
and
mov
int3
popa
ljmp
movb
faddl
add
inc
add
test
sti
xchg
add
dec
nop
add
dec
enter
mov
mov
dec
popf
push
sbb
push
add
jbe
push
iret
loopne
inc
add
add
xchg
lods
or
add
repnz
dec
sbbl
push
add
add
inc
push
jo
aaa
jecxz
sub
cmpsl
xor
scas
int3
cwtl
adcl
int3
movb
and
mov
cmp
mov
iret
hlt
add
lret
jne
out
fwait
leave
jo
or
jl
add
or
add
add
pop
fildll
popa
popa
js
fwait
loope
in
mov
mov
bound
mov
cld
inc
add
cld
ja
loope
lret
push
xor
clc
sub
rolb
pop
fmuls
cmp
add
jge
pop
sbb
data16
cwtl
push
jne
mov
icebp
cs
sub
out
add
mov
mov
push
add
mov
iret
hlt
add
ret
adc
or
add
lods
sbb
outsl
dec
sbb
cmpsb
add
push
nop/reserved
clc
insb
stos
lds
add
inc
add
add
and
mov
pop
std
iret
outsl
pop
xchg
push
mov
push
add
aad
pop
cltd
rolb
xor
cmpsl
jmp
sbb
stos
sbb
add
aad
cltd
sub
add
or
stos
mov
cli
or
pop
mov
popf
jo
imul
or
add
push
testb
add
orl
fidivrs
mov
add
mov
out
lods
push
add
add
add
hlt
add
dec
movsl
inc
sub
lret
push
fwait
ret
aad
add
add
cs
add
mov
pop
pop
repz
mov
lret
or
add
xchg
jg
test
jnp
lock
pushf
push
pop
cwtl
jle
xchg
pusha
add
pop
les
nop
add
dec
add
out
fwait
pop
cmc
inc
popa
mov
jp
add
mov
out
xor
loopne
and
mov
push
enter
mov
in
iret
in
push
add
jbe
and
mov
mov
bound
mov
push
add
subl
add
xchg
int3
xchg
add
mov
out
ret
add
clc
inc
add
add
add
rorl
enter
outsl
arpl
add
scas
mov
rolb
mov
test
add
xchg
add
add
xor
sbb
add
pop
xchg
add
add
dec
into
cli
sub
adc
cmp
add
loope
and
add
scas
rolb
out
or
loope
lock
sub
filds
add
aam
inc
add
test
add
push
dec
adc
add
add
jle
inc
add
jne
bound
mov
enter
add
mov
sti
xchg
add
mov
push
add
add
sub
es
add
mov
fdivrl
leave
cltd
iret
addb
cwtl
jae
xchg
cmp
mov
aas
xchg
add
add
add
or
add
jbe
loop
mov
fwait
iret
rcr
cmp
pop
push
add
ljmp
fnstsw
add
inc
add
lea
mov
xor
xor
stos
or
jnp
jns
xor
fadds
mov
cli
or
es
add
pop
dec
out
into
mov
add
add
stos
adc
jnp
push
cmp
xor
and
add
testb
inc
mov
jecxz
dec
or
add
sbb
add
test
adc
jne
std
and
out
mov
out
loop
popf
xchg
add
sbb
mov
mov
inc
or
adc
push
add
addr16
add
test
add
push
add
rolb
aam
mov
add
add
lcall
bound
mov
add
aam
and
lods
inc
pop
aad
add
rcll
xlat
adc
clc
loop
mov
enter
jne
out
orl
test
daa
cmp
lds
add
add
cmpsl
or
add
add
add
mov
add
rolb
sub
add
pop
loop
adc
dec
pop
inc
add
pusha
add
mov
in
inc
add
cmpsb
add
or
add
xchg
movsl
sbb
jge
out
addb
mov
push
add
cmc
popf
aas
fnstsw
add
pusha
add
add
mov
inc
add
sbb
sbb
add
mov
add
mov
add
jae
add
add
add
sarl
cli
ret
and
mov
add
out
mov
orl
jp
add
fists
add
add
cwtl
mov
xchg
add
jge
xchg
add
push
jnp
inc
add
pop
dec
dec
mov
add
add
add
das
mov
cwtl
add
stos
lods
rolb
mov
mov
mov
insb
xchg
pop
fistpl
inc
mov
cmc
inc
add
bound
mov
mov
add
sub
add
daa
sbb
or
add
shr
jmp
mov
add
add
xchg
add
hlt
add
lods
testb
xor
data16
add
add
add
stos
push
loope
push
add
jg
enter
inc
add
add
add
inc
add
popa
inc
add
ret
push
in
fwait
or
adc
pop
test
adc
fiaddl
pop
pop
stc
xchg
cs
fistl
pop
std
outsl
shrl
mov
push
popf
cmp
pop
shll
add
add
mov
add
add
add
jns
ret
cmpsl
sub
inc
add
adc
inc
xchg
xchg
push
add
add
into
clc
fmulp
or
pop
ret
add
xchg
jns
addl
into
mov
dec
and
mov
add
mov
push
dec
jmp
test
mov
add
inc
dec
inc
push
jmp
jnp
mov
addb
adc
add
dec
andl
add
pop
adc
loopne
testb
lods
and
mov
add
sbb
mov
mov
rolb
xor
adc
sti
mov
or
cmpsb
add
cmp
mov
dec
mov
pushl
adc
xlat
inc
sahf
mov
add
dec
mov
inc
add
mov
push
push
dec
pop
and
xor
mov
xor
loope
cmp
mov
loopne
jp
pop
mov
push
add
scas
popa
dec
inc
push
add
mov
push
add
add
add
mov
add
js
mov
xchg
repz
bound
mov
pop
sbb
and
mov
sbb
sahf
je
xor
call
mov
mov
pop
popa
stc
jnp
add
test
add
add
stos
aas
mov
xor
aam
xchg
add
les
jns
rcpps
xor
cmc
imul
add
loope
add
mov
push
pop
stos
cmpl
sub
dec
cmpl
add
inc
data16
mov
popa
mov
cmpsl
push
mov
mov
add
mov
stos
loope
push
jle
add
sub
rolb
aad
fs
add
out
out
or
inc
dec
into
in
mov
jae
xchg
add
fidivrl
mov
cwtl
lcall
adc
mov
test
sbb
sbb
out
mov
add
fdivrp
add
mov
sub
add
add
add
out
add
jecxz
add
inc
add
dec
scas
add
xchg
fstl
xor
cltd
out
and
mov
dec
addb
add
add
add
fstpl
add
mov
and
mov
mov
and
mov
inc
movsl
fadd
add
xchg
add
sub
push
cltd
in
das
xchg
add
stos
test
je
pop
inc
jns
and
mov
enter
mov
add
add
mov
jle
add
xchg
add
out
add
add
pop
aas
test
movsb
add
movsb
add
add
add
mov
mov
push
jg
add
cwtl
aam
loop
push
add
xchg
lret
pop
pop
mov
push
cmc
sti
in
add
and
mov
adc
cmpsl
jmp
inc
add
xchg
sub
cltd
add
and
mov
ja
data16
inc
add
jo
cmp
or
add
add
adc
sub
add
xor
inc
aaa
sub
add
push
sub
xchg
pop
fdivp
add
mov
ds
lcall
add
bound
mov
adc
jmp
mov
out
ljmp
add
add
sub
add
add
rolb
add
imul
add
rolb
addr16
adc
adc
movsl
jecxz
movsb
add
mov
add
pusha
add
add
lret
add
nop
add
rolb
icebp
inc
rolb
outsb
lods
or
pop
addr16
jo
push
inc
add
add
out
dec
movb
push
stc
je
shll
pop
xor
or
sti
sub
insl
addb
inc
bound
mov
test
and
movsb
add
add
mov
cmp
pop
dec
adcl
add
cmp
dec
or
cwtl
sbb
pop
mov
adc
rolb
ffreep
sbb
xor
jno
fwait
pop
xor
dec
ret
jmp
xor
fucomi
sub
jp
add
dec
addb
sub
pop
aaa
push
add
xchg
mov
add
rolb
sahf
cld
stc
pushf
pop
dec
jmp
test
inc
out
addb
add
xor
in
arpl
sub
xchg
jno
push
fistpl
sub
xor
dec
adc
aad
add
je
sbb
imull
addr16
add
add
or
addb
add
cmp
sub
test
movsl
or
loope
add
add
fsubr
pop
xor
mov
mov
addr16
xchg
or
mov
mov
mov
into
mov
xor
add
addb
add
mov
mov
in
test
jnp
mov
int
add
stos
dec
int3
out
test
sahf
fistpl
lea
and
cmp
add
mov
xchg
jns
mov
xchg
add
xor
xor
inc
jl
pop
jmp
cmp
add
jecxz
add
pop
das
pop
mov
arpl
add
out
mov
push
add
imul
add
outsl
daa
test
aas
mov
sub
insl
xor
test
js
add
daa
bound
mov
test
cmpsl
mov
add
mov
add
add
dec
popa
or
cs
js
add
out
fisttpll
mov
outsl
pop
iret
push
popf
out
cwtl
jle
into
dec
and
mov
jnp
inc
add
add
leave
mov
add
push
add
out
inc
pop
xchg
add
mov
add
outsb
pushl
data16
roll
or
jno
mov
repz
add
outsl
addb
jp
add
or
xor
push
add
dec
fmuls
ja
sbb
add
arpl
add
aaa
xchg
add
add
or
pop
lock
leave
xlat
jge
add
dec
aad
pop
nop
add
add
add
pushl
dec
or
xchg
add
add
outsl
cmpsl
mov
add
push
jb
sbb
cmpsb
add
mov
lret
cli
aam
inc
add
add
addb
add
stc
cld
cmp
xor
add
mov
add
test
test
cmp
add
leave
jo
out
xchg
repnz
add
add
push
add
mov
dec
mov
pop
ficoml
mov
insb
jmp
testb
out
jns
add
push
push
loop
add
mov
sarl
les
jne
add
lock
lds
mov
call
loope
add
jnp
add
int3
xor
add
add
insl
test
outsb
xchg
arpl
push
xor
lods
xor
mov
xor
dec
mov
xor
jo
lea
dec
jbe
fistpll
pop
ret
or
add
mov
or
out
inc
add
jle
cmpsb
add
add
cmp
push
add
out
push
test
into
push
add
sbb
lahf
imul
fwait
jmp
mov
add
aas
cwtl
cwtl
mov
int3
dec
inc
lcall
add
popf
jg
outsl
sahf
stc
int3
imul
and
add
ljmp
stc
xor
mov
mov
ret
scas
imul
je
jo
sbb
push
outsb
jo
xchg
add
cmp
jnp
add
nop
add
sbb
mov
add
pop
push
add
mov
xchg
sbb
cmpsl
jl
add
add
or
or
pop
jmp
mov
xchg
add
lahf
fdivrs
loope
mov
add
mov
cmc
icebp
dec
enter
adcl
pop
repz
mov
out
jbe
roll
imul
push
fdivrp
out
dec
cs
lock
mov
aaa
xchg
shll
lret
add
aas
add
mov
add
cmp
dec
mov
data16
fstl
mov
aad
daa
inc
add
sahf
and
sti
sahf
stc
in
mov
fisttps
add
sahf
loope
xlat
lahf
aaa
jle
add
add
add
add
add
add
pop
addb
dec
dec
dec
mov
shll
call
xchg
movb
add
nop
add
pop
xchg
je
mov
lods
push
add
mov
push
sahf
out
inc
add
ret
xchg
or
add
push
or
pop
dec
mov
add
add
clc
mov
hlt
add
daa
mov
jle
stos
push
xchg
add
ss
add
hlt
add
and
mov
mov
add
pop
imul
mov
outsb
addb
jo
xchg
xor
add
lods
or
arpl
add
mov
test
repz
daa
fcomps
ja
je
aad
insl
push
lcall
add
mov
addb
add
addb
inc
add
xor
xor
loopne
xchg
fmull
ds
stos
hlt
add
mov
jno
xchg
out
sub
test
pop
and
mov
add
sub
mov
mov
add
mov
out
add
sub
add
adc
mov
sub
cmp
lret
in
add
sub
fwait
fwait
lods
push
loop
insb
icebp
adc
data16
add
xchg
xor
ss
add
mov
mov
leave
cmp
andl
mov
addr16
xor
pusha
add
sbb
ja
mov
push
data16
test
ret
add
add
push
add
lds
fmull
push
popf
mov
cs
add
das
or
jecxz
add
pop
into
mov
add
add
mov
cs
leave
imul
inc
add
add
jmp
add
add
dec
sbb
add
mov
dec
in
jne
mov
adcl
xor
xlat
jecxz
daa
aam
or
int
add
add
cmp
xchg
sub
and
mov
xchg
das
movsl
out
mov
mov
fyl2x
out
dec
inc
add
call
mov
inc
add
jbe
ficoml
dec
push
lods
sbb
jo
jbe
mov
fwait
inc
add
xchg
add
mov
test
push
push
add
add
inc
add
addb
add
or
pusha
add
loope
pop
cld
pop
addr16
pop
or
addb
imul
add
arpl
xchg
adc
lea
add
push
add
xchg
arpl
xor
xchg
push
add
xor
sbbl
and
imul
add
cmp
cwtl
mov
add
inc
add
cmpsb
add
rolb
les
jne
js
fnstenv
push
add
add
and
mov
inc
mov
inc
mov
rolb
mov
dec
out
les
jb
mov
sub
mov
push
inc
in
cmp
add
add
mov
add
mov
jno
jno
add
out
daa
out
cmp
fcompl
sti
mull
add
dec
jnp
mov
inc
add
xchg
test
testb
test
repnz
insb
and
mov
mov
add
imul
and
add
xchg
pop
mov
cmpsb
add
pop
mov
fcmovnb
add
mov
in
xor
cmp
xor
gs
sub
mov
lods
stos
dec
push
add
add
div
add
push
mov
xor
ss
add
aad
pop
mov
int
adc
mov
pusha
add
repnz
sbb
rorl
fnstenv
movsl
push
push
add
rolb
add
ret
lods
sub
stos
mov
inc
jbe
mov
xchg
add
push
add
mov
add
loop
repz
dec
or
add
pop
mov
adc
out
les
mov
ja
jnp
mov
push
pop
enter
fcoms
add
add
in
data16
mov
add
cltd
testb
imul
lahf
sub
and
aad
out
or
mov
test
add
mov
or
addb
pop
adc
in
push
mov
add
pop
jo
add
mov
ret
add
add
add
push
outsl
inc
cmp
jae
bound
mov
mov
shll
in
dec
mov
loope
add
dec
dec
cmp
data16
add
data16
jmp
mov
rolb
inc
mov
add
lret
loopne
jnp
sub
sub
sbb
add
int
add
jnp
add
cmp
mov
jle
icebp
and
xor
and
add
add
add
sbb
adc
xor
xchg
add
xchg
add
fdivs
add
mov
arpl
fmul
test
sarl
mov
pop
pop
adc
xorl
mov
loope
jbe
pop
push
out
lcall
cmp
adc
fimull
ja
outsb
addl
mov
movsb
add
data16
cltd
movsl
imul
rorl
pop
andl
repnz
xor
lret
call
jns
add
lock
mov
jl
fisubs
mov
add
push
cmpsb
add
sbb
add
mov
add
sbb
or
xchg
add
ja
mov
bound
mov
mov
sub
add
add
add
add
add
rorl
xor
fldl
mov
add
es
js
je
lock
in
mov
pop
jle
ss
int3
dec
pop
je
jmp
add
imul
add
sub
aas
cs
add
or
adc
mov
mov
add
fabs
mov
xchg
mov
add
push
add
dec
loop
jbe
add
sbb
add
rolb
lock
pop
cmpsl
addr16
addr16
jbe
aad
push
add
xor
rolb
hlt
add
add
mov
add
sub
add
jg
add
add
leave
sbb
out
xchg
and
mov
pop
or
cmpsl
xchg
mov
jge
add
or
mov
pushf
mov
fwait
mov
push
dec
out
pop
dec
stos
dec
or
add
add
add
leave
out
lahf
adc
add
arpl
jo
fnsave
xor
scas
das
lret
dec
pop
dec
lret
pop
dec
or
mov
mov
addb
add
add
mov
pop
add
addb
scas
cmp
cmpsl
aas
push
add
nop
add
lcall
hlt
add
rcr
cmp
cs
sbb
add
dec
icebp
adc
dec
add
add
xor
add
add
add
add
movb
add
add
add
ds
add
pop
insl
pop
popa
mov
hlt
add
dec
aas
cmp
add
sub
and
loopne
les
xlat
in
mov
dec
dec
pop
or
add
jo
movb
pop
aaa
loope
dec
jnp
in
mov
out
lret
lcall
add
movb
mov
mov
dec
or
jmp
add
jae
jle
scas
cmpsl
outsl
out
inc
loopne
sub
mov
cmc
lea
repnz
add
cmpsl
sub
xor
add
add
add
mov
jns
fistl
xchg
add
mov
add
scas
jl
xlat
aas
faddp
scas
add
fisttpl
pop
into
cmp
add
add
ss
ret
mov
mov
xor
cmc
xlat
cld
in
sbb
add
xor
cmp
add
lcall
sbb
add
mov
xor
add
jle
fisttpl
pop
mov
mov
aad
sub
push
add
add
mov
add
icebp
aas
fldt
inc
je
outsb
mov
xor
addr16
mov
cld
insl
fwait
imul
mov
or
or
push
push
cmp
pop
xor
add
mov
add
jp
adc
mov
inc
add
add
add
add
add
mov
add
push
pop
dec
mov
cmc
div
add
add
and
adc
jmp
add
aam
sbb
lret
mov
cld
add
addb
jbe
popf
xor
inc
add
sub
inc
inc
add
outsb
add
mov
add
sbb
push
addb
sub
or
in
test
push
jg
nop
add
scas
out
push
add
rolb
dec
xchg
cli
mov
add
xchg
lods
jbe
push
add
cltd
sbb
bsr
add
fistpl
lods
jae
add
fxtract
add
das
xchg
nop
add
add
add
icebp
add
mov
add
mov
fsubr
mov
dec
dec
cmp
add
xor
jmp
dec
fistpll
push
aas
imul
add
add
add
stc
jge
cmp
add
sub
sub
add
jnp
popf
cli
mov
mov
sub
sub
popf
pop
sbb
mov
bound
mov
push
add
mov
add
add
add
mov
add
add
inc
mov
sub
add
lret
mov
sub
mov
ljmp
add
add
add
jns
testb
add
add
mov
int
add
mov
jg
xchg
jg
add
mov
rolb
sti
rolb
mov
xor
in
add
lods
jge
add
push
inc
add
imul
bound
mov
add
sbb
xchg
add
add
add
jbe
add
push
add
add
sub
mov
ljmp
aaa
movsl
stos
in
jle
fildll
pop
xor
add
sbbl
pop
or
scas
out
cmpsb
add
cltd
les
flds
sahf
mov
and
mov
adc
movsl
sub
lcall
add
js
outsl
mov
mov
or
xchg
push
xor
mov
add
inc
add
add
push
sub
into
sub
add
and
add
add
bound
mov
jb
imul
popa
or
mov
or
popf
cmpsb
add
add
mov
fcomip
imul
add
cmp
xchg
add
jb
pushf
jle
mov
sub
mov
test
add
aam
sbb
sar
out
sahf
fisubrs
mov
data16
rolb
test
sbb
fisttpll
push
jecxz
bound
mov
inc
add
add
add
pop
sar
push
and
mov
fsubp
outsb
cmpsl
dec
cmc
or
cmp
inc
add
add
aam
cld
xchg
xchg
dec
or
ljmp
add
add
add
lods
cmp
fldcw
inc
add
js
call
dec
sub
sub
push
loope
add
addb
cltd
adc
lock
mov
mov
add
int3
xchg
jmp
pushf
cmpsl
test
and
add
ficoms
add
add
add
pop
jp
cmp
add
sub
add
dec
xor
ljmp
jecxz
inc
pop
sbb
lods
xor
rcrl
sub
mov
xchg
std
or
add
or
pop
cmp
enter
mov
loope
std
mov
nop
add
jb
lock
add
int3
outsl
filds
add
add
mov
subl
adc
add
inc
push
sti
jae
add
dec
jo
sahf
cmp
jl
jns
in
add
add
movb
andl
add
add
add
add
mov
arpl
mov
push
fadds
mov
push
add
add
fadds
add
mov
adc
lahf
orl
xchg
add
pop
into
popf
sub
add
lds
add
add
loope
add
aaa
stos
jnp
add
add
sub
add
add
dec
add
mov
add
mov
push
add
lods
movsb
add
add
lea
add
cmpsb
add
mov
pop
imul
mov
enter
add
adc
add
outsl
ljmp
sbb
xchg
add
and
mov
jno
dec
pusha
add
mov
push
and
mov
sub
xor
movb
iret
mov
jl
loopne
addb
add
test
sub
sub
add
mov
add
push
sbb
sbb
aaa
mov
or
add
je
sub
xchg
add
add
pop
add
mov
inc
jle
add
mov
lret
add
mov
add
daa
stos
jl
rolb
dec
dec
jo
sbb
add
add
sub
frstor
push
mov
add
adc
fldl
lahf
in
rolb
stc
add
pop
xor
add
add
or
add
movsb
add
mov
movsl
std
icebp
inc
add
cmp
pop
or
jmp
into
xor
cld
pop
fbld
aam
dec
lret
pop
mov
sub
jg
les
test
add
add
loopne
inc
scas
jnp
outsb
push
add
add
mov
aad
jno
jns
shrl
and
mov
rolb
jne
mov
cmc
mov
jmp
inc
jg
or
aas
jnp
add
mov
jb
test
lahf
stos
dec
push
add
or
xor
push
les
adc
and
popa
lock
adc
test
sti
sbb
into
fs
add
mov
mov
ljmp
push
les
cltd
add
jne
add
jne
add
mov
and
add
in
add
lock
mov
add
add
add
out
sbb
mov
jnp
sbb
xchg
add
mov
outsb
pop
lods
out
lret
add
add
mov
dec
arpl
mov
gs
add
cmp
add
pop
or
and
mov
mov
sub
push
in
cld
cmpsl
pop
sbbl
add
lods
adc
dec
mov
xor
cmp
inc
add
test
stos
lcall
add
push
add
dec
adc
xchg
add
xchg
add
dec
push
add
insb
test
imul
add
loopne
push
add
jnp
xchg
pop
jne
add
dec
rolb
pop
dec
adc
outsb
outsl
iret
pop
popa
data16
push
add
lcall
xchg
mov
xor
mov
or
je
jmp
add
mov
mov
lea
mov
std
add
mov
loop
sub
iret
mov
daa
push
add
addb
add
js
add
add
xor
add
lcall
sahf
icebp
lcall
add
stos
data16
lahf
inc
dec
cmp
sub
and
testb
add
add
lret
in
aam
xorl
mov
push
dec
int
pop
stos
ljmp
add
inc
add
adc
mov
insl
adc
add
lea
adc
sub
lods
repz
aaa
movb
add
add
enter
xchg
xchg
in
cld
dec
mov
pop
add
or
pop
jl
jmp
add
cmp
pushf
dec
or
add
insb
push
cmp
mov
add
mov
out
add
mov
daa
or
pop
clc
nop
add
jb
frstor
add
movsb
add
jb
loope
jp
imul
add
andps
in
add
add
add
rolb
cmp
icebp
lret
xchg
mov
jbe
jmp
add
mov
jle
add
add
fstps
push
add
jmp
xchg
add
mov
mov
daa
mov
add
sub
add
add
or
pop
mov
das
flds
cmp
xor
sbb
adc
add
mov
add
mov
sub
mov
cmp
hlt
add
lods
push
sub
add
add
add
add
add
jnp
and
mov
mov
data16
dec
pop
aas
imul
add
push
adc
add
arpl
add
mov
in
xor
popf
sbb
or
cltd
loope
imul
mov
pop
lock
xchg
shll
add
mov
dec
fistpll
add
pushf
ljmp
or
call
jg
add
add
jecxz
push
scas
rolb
mov
lods
push
jg
pop
addb
int3
arpl
mov
or
rolb
mov
cmp
add
push
aaa
bound
mov
inc
add
add
add
add
add
imul
xlat
jecxz
mov
in
or
jg
data16
and
les
popa
gs
adc
lret
pushf
sub
dec
push
sub
mov
xor
adc
aaa
mov
xchg
add
pop
and
add
inc
add
stc
jo
fmulp
pusha
add
mov
lods
push
add
test
dec
cmp
add
flds
sbb
outsl
addb
mov
rolb
daa
xorl
mov
add
xor
jg
add
fnstenv
pop
adc
sub
add
xor
mov
and
mov
bound
mov
push
add
add
cmp
add
jecxz
jg
icebp
lock
stc
or
jae
mov
push
add
testb
add
lcall
arpl
cmp
leave
lods
inc
add
cmp
mov
add
push
add
cmpsl
jecxz
mov
fsub
add
mov
dec
movsl
addr16
rolb
fistpl
lret
or
les
mov
outsl
xchg
jmp
add
out
test
add
add
call
add
add
in
mov
nop
add
icebp
sbb
mov
lea
lea
inc
vmread
add
sub
add
pop
jmp
mov
loope
add
or
icebp
jno
fsubr
dec
stc
lcall
inc
and
mov
pop
mov
lret
push
add
add
mov
push
lods
inc
les
mov
in
xchg
pop
cmp
xor
dec
add
test
insb
addb
add
nop
add
jp
enter
jmp
fwait
jmp
imul
stos
testb
add
add
cmp
or
xor
dec
add
sub
mov
cmp
faddl
add
mov
add
push
add
ret
stc
adc
lods
pop
daa
sbb
push
or
add
add
testb
bound
mov
add
imul
add
daa
xchg
add
mov
orl
shll
add
sbbl
add
ds
xchg
add
xor
cmp
and
dec
addb
andl
xor
inc
add
push
subl
ljmp
or
add
cld
sub
out
mov
xchg
add
sbb
inc
add
inc
sti
imul
aam
sbb
adc
rolb
loop
aas
rcrl
adc
lret
sub
add
rolb
lret
mov
lcall
add
mov
dec
lock
lret
fisttpl
out
leave
jo
stos
add
cld
cmp
cltd
lods
mov
jbe
pushf
push
aaa
iret
rolb
pop
xor
sbb
das
data16
add
insl
xor
add
add
mov
cmp
sbb
push
fsts
hlt
add
fs
or
jne
out
rolb
mov
push
add
add
add
add
pop
mov
loope
add
imul
inc
add
xor
add
xlat
fcompl
pop
push
repnz
dec
cltd
bound
mov
cwtl
sub
push
adc
movb
call
add
xchg
add
test
mov
aad
add
add
mov
or
ret
mov
sbb
add
test
xor
movb
and
add
scas
fmuls
xchg
add
push
add
in
pop
sub
out
sub
add
mov
les
hlt
add
add
out
cmc
pop
mov
loope
jecxz
mov
cmpsl
add
add
iret
out
dec
mov
enter
mov
add
add
add
por
add
sbb
push
lods
jp
inc
add
or
and
mov
adc
test
shll
lahf
int3
icebp
add
add
in
jp
push
add
in
push
add
add
in
or
das
lcall
add
add
sub
mov
xchg
add
ficoms
add
sahf
mov
inc
add
adc
dec
xchg
add
int
fstpt
lret
and
mov
push
pop
push
daa
mov
ficoms
js
add
orl
add
add
add
add
scas
outsl
js
cmp
push
inc
add
add
fwait
push
cltd
xor
ja
loop
pop
add
mov
add
outsb
jbe
mov
mov
add
rolb
andl
sbb
add
adc
aaa
out
mov
add
mov
add
add
pop
mov
add
add
jno
add
push
ja
aaa
popf
rolb
sbb
aaa
out
pop
je
data16
das
push
sahf
dec
xor
ret
jo
jp
add
mov
into
mov
cmpsl
cmp
lret
ja
pop
or
out
and
mov
popa
insb
movsl
xchg
sub
cmp
test
add
ja
or
lds
dec
pop
stc
mov
add
jle
inc
add
mov
pop
repz
call
add
mov
and
add
ljmp
rolb
pop
cmpsb
add
sahf
and
stos
mov
test
add
mov
dec
xchg
add
add
add
add
repz
arpl
inc
repnz
shr
jmp
in
call
ljmp
add
pop
mov
icebp
addb
addb
add
cmc
cli
mov
and
add
ret
icebp
repz
push
add
lds
or
scas
call
xor
adc
pop
pop
lea
push
add
push
inc
adc
fcomp
add
sbb
add
jb
gs
mov
inc
fnstcw
or
add
add
add
sub
enter
aam
scas
jl
xchg
add
add
add
add
mov
add
xor
rolb
inc
add
jl,pt
mov
add
add
xor
sbb
leave
call
jns
in
je
sbb
ret
add
lods
lock
xor
loopne
or
fsubs
int
ds
mov
sub
sub
jle
mov
fwait
mov
add
push
push
mov
mov
lret
cmp
add
mov
add
add
aad
add
test
jge
out
pusha
add
mov
insb
cmp
inc
mov
add
mov
add
pop
icebp
hlt
add
test
mov
lds
xchg
cld
mov
xchg
jb
sub
call
mov
add
sub
add
ja
add
cmp
les
or
dec
dec
and
xor
add
stc
cli
push
subl
ret
add
inc
mov
add
jp
out
mov
shll
mov
push
add
sbb
jge
outsb
lock
or
add
xchg
push
iret
mov
fwait
leave
push
add
mov
dec
jge
xchg
xchg
add
mov
adc
ret
add
lahf
cmp
sbbl
cmpsl
ss
cmc
pop
inc
sub
outsl
ja
ds
cmp
sub
mov
dec
jno
stos
adc
lahf
mov
outsb
scas
or
add
mov
mov
dec
mov
enter
add
add
lret
stc
add
iret
sub
pop
and
mov
cmp
sub
add
imul
in
stc
mov
loop
pop
xlat
sub
add
mov
outsl
inc
add
add
aad
add
push
add
dec
mov
fists
shrl
cmp
scas
add
jge
pop
data16
sbb
mov
xor
jg
rcrl
sbb
mov
and
add
jge
add
xchg
xchg
jl
add
add
clc
cmpsl
test
fiaddl
clc
dec
push
mov
repnz
sub
add
rolb
add
mov
add
or
cmp
pusha
add
jp
dec
cmp
jns
xchg
cmp
inc
xchg
loopne
jno
pushf
cmp
add
jge
sub
jle
imul
add
add
add
ret
mov
add
mov
jae
mov
test
add
add
addb
std
or
dec
xchg
sbb
cmp
xchg
add
push
add
add
fdivl
pop
ret
add
inc
push
add
fnstsw
movsl
add
lret
outsl
mov
imul
and
mov
add
jle
add
addl
push
loopne
dec
jmp
addb
outsl
mov
les
jg
lret
je
xchg
jg
add
dec
jle
cmp
test
lret
and
addl
xchg
sbb
add
mov
push
add
add
mov
add
add
repz
push
mov
sub
add
add
mov
add
jb
addr16
jae
outsb
xor
cld
jnp
scas
cmp
dec
or
mov
into
cwtl
sub
mov
icebp
mov
cld
or
jge
cmp
mov
sbb
add
les
jecxz
imul
aaa
lret
jle
add
sub
cmp
sahf
stc
mov
dec
xorl
aas
das
incb
xchg
cmp
in
mov
jp
xor
add
push
add
repnz
jl
ret
iret
lock
jns
out
push
ljmp
mov
add
add
sub
sub
pop
stos
add
mov
add
add
pop
mov
das
fsubrs
add
pushl
sarl
add
add
add
push
and
add
add
add
add
add
mov
ror
aam
movsb
add
mov
add
lret
xchg
or
xchg
add
in
rolb
adcl
imul
mov
sub
mov
lods
push
das
nop
add
add
xor
in
and
popf
outsl
mov
popa
push
cmp
pop
rcll
add
add
xchg
lock
add
add
pop
lods
decb
mov
mov
add
add
add
imull
ds
jmp
mov
push
push
add
fwait
dec
pop
mov
add
repz
add
sbb
shll
fistpll
add
nop
add
jnp
adc
mov
std
jnp
bound
mov
aas
push
add
sub
cmp
add
add
in
jmp
insl
sbb
out
test
movsb
add
add
add
aaa
mov
xor
and
add
add
sub
add
pop
push
add
out
mov
xor
int3
push
sub
add
jp
push
add
mov
out
movsb
add
imul
sbb
fwait
push
add
xor
popa
in
stc
mov
mov
xor
xor
mov
insb
xor
outsl
adc
jmp
cmp
add
test
add
add
push
cmpsl
inc
rolb
jecxz
test
push
add
dec
int
xor
mov
clc
adc
cmpsb
add
push
fsubl
pop
lea
mov
pop
push
mov
subl
addb
add
decb
arpl
xchg
add
add
push
adc
out
cld
push
add
fnsave
dec
dec
jmp
leave
mov
pop
testb
out
adc
test
add
ret
add
push
shll
add
popf
lock
xlat
out
dec
lahf
dec
iret
sbb
sub
aaa
daa
movsl
jmp
into
mov
or
xchg
out
add
add
js
leave
pop
addb
mov
insb
scas
int3
xor
or
andl
add
add
in
jg
add
add
jno
mov
popa
mov
sbb
bound
mov
xchg
imul
adc
lods
mov
test
or
dec
and
jns
ss
cmp
xor
sahf
dec
add
addr16
add
inc
add
ja
push
stc
popa
or
icebp
in
cmp
xchg
add
enter
call
add
add
mov
add
add
add
rolb
or
or
add
mov
add
scas
ret
push
add
pop
repnz
mov
mov
push
xor
add
xchg
mov
addb
xchg
inc
add
add
mov
add
xchg
add
icebp
xchg
pop
push
lcall
mov
dec
xchg
sub
hlt
add
pop
shl
addb
sbb
sbb
add
ret
push
xchg
add
je
jo
lods
das
decl
lcall
adc
dec
cmp
add
push
xor
pop
daa
cltd
mov
inc
cld
lret
add
dec
es
addb
add
add
pshufw
cmpsb
add
add
pop
xor
pop
jmp
scas
sbb
and
mov
add
cmp
jnp
jb
cmp
add
movb
add
das
or
and
mov
xor
fisttps
cwtl
dec
addr16
fiaddl
testb
jbe
adc
inc
addr16
repnz
add
stos
nop
add
or
or
mov
mov
mov
fcmove
rolb
adc
mov
add
addb
insb
jae
jecxz
cmp
ja
push
add
bound
mov
dec
mov
ja
and
mov
fiaddl
add
xor
add
add
mov
dec
inc
add
gs
bound
mov
loopne
in
jns
imul
arpl
sub
xchg
add
rolb
xor
push
aas
sbb
repz
fwait
mov
cmp
mov
add
out
cmp
add
fsubs
fidivrs
or
push
add
jnp
add
add
add
jg
mov
add
add
inc
add
mov
sbb
insb
add
jge
xchg
add
test
xor
jbe
push
mov
mov
cs
mov
xor
dec
push
loop,pt
xor
sar
bound
mov
push
add
add
cmp
rolb
sub
cs
sbb
addb
add
stos
les
adc
xchg
addb
addb
adc
out
fmulp
xor
add
dec
cmpsb
add
add
mov
add
add
add
sbb
fidivl
in
adc
dec
in
pusha
add
cmpsl
adc
jmp
cmp
mov
add
add
add
ja
jmp
add
addb
add
test
inc
jl
daa
ret
push
mov
dec
inc
add
add
xchg
add
xchg
add
hlt
add
lds
mov
dec
pop
data16
bound
mov
mov
add
sub
shrl
pop
jne
adc
das
and
mov
sahf
xor
fmulp
jmp
add
push
add
popa
mov
sbb
push
test
push
add
add
add
push
add
add
add
sub
cli
xor
jne
add
add
or
add
sti
and
push
rolb
js
add
ret
in
mov
add
scas
daa
pushf
cmpsl
xchg
in
inc
add
add
dec
movl
xchg
lret
add
add
xchg
add
add
testb
mov
mov
incl
call
pop
jp
sbb
mov
mov
pop
pop
dec
mov
add
xchg
inc
add
sahf
aas
jecxz
inc
add
add
jns
mov
add
add
addl
cltd
add
jae
add
xchg
add
hlt
add
mov
mov
mov
icebp
add
lods
js
sti
xchg
add
pop
ds
xchg
add
add
or
add
add
popf
push
add
cmp
add
sbb
push
xor
aad
pop
adc
add
pop
mov
and
mov
fs
cmp
cmp
push
dec
jp
mov
inc
lahf
pop
mov
les
xchg
loope
add
add
add
movb
popf
mov
mov
aas
addb
add
cli
push
add
xlat
sbb
mov
push
or
add
dec
lds
sbb
add
lods
adc
mov
push
add
add
add
pop
enter
pop
mov
push
add
mov
add
add
test
xchg
add
and
or
in
test
nop
add
add
add
mov
jmp
cltd
testb
lods
test
lods
movsb
add
sti
jecxz
test
test
lock
in
sub
clc
adc
stos
imul
addr16
mov
adc
inc
xchg
mov
rolb
push
add
xchg
repnz
in
test
jg
add
push
push
dec
mov
fnsave
idivl
repnz
add
iret
mov
sbb
insb
lods
vcvtsd2ss
add
in
and
mov
adc
shll
aad
popa
or
push
add
sub
add
sti
push
rcrl
add
add
xor
lds
add
push
stos
movb
jg
mov
sbb
add
mov
pop
insb
lds
stos
and
test
jns
test
loop
imul
pop
mov
sub
add
add
jne
add
jo
dec
std
lds
push
add
lods
cmc
sub
mov
out
or
add
pop
int
add
mov
cmp
sbb
pop
cltd
push
add
dec
jbe
cli
jbe
addb
add
xor
cmp
insb
fcoms
pop
lock
add
jl
add
fmul
jge
outsl
dec
popf
mov
push
add
ret
test
jl
mov
mov
mov
pop
rolb
add
fldcw
loop
imul
add
mov
jns
dec
add
stos
mov
add
daa
mov
xor
dec
add
add
out
dec
lret
jne,pt
add
add
lods
je
test
cmp
add
push
scas
xor
xor
mov
push
dec
push
add
mov
and
outsl
addb
add
scas
xchg
stos
test
push
idivl
pop
and
lods
pop
or
add
int
dec
pop
pop
or
fisubrs
mov
fsubrl
sbb
sub
add
es
xor
stc
lcall
xchg
add
jecxz
movl
add
rolb
add
mov
scas
test
add
lahf
jmp
mov
jns
loope
push
add
dec
js
push
cli
pop
cmpsl
inc
add
or
mov
mov
push
xchg
aaa
lcall
add
ret
cmp
sbb
pop
cmp
add
stc
stc
add
or
addb
testl
fisttpll
add
add
adc
call
leave
mov
add
loopne
ret
mov
lock
add
push
jns
aam
add
add
jg
addb
add
push
jns
add
xor
ret
roll
stc
ljmp
pop
push
add
add
cli
mov
cli
lods
jmp
xchg
dec
or
add
xchg
je
xchg
arpl
leave
adc
add
test
imul
std
dec
ja
xor
inc
outsb
fsubrl
add
hlt
add
daa
add
mov
add
adc
jbe
hlt
add
je
xor
rcr
scas
cmpsb
add
add
dec
fbstp
loop
mov
and
mov
sbb
movsl
mov
addb
add
js
adc
inc
call
dec
ret
dec
pop
sub
mov
add
add
add
mov
add
add
dec
cmc
and
mov
add
add
dec
testl
xchg
stos
push
xchg
add
add
mov
arpl
mov
testb
shll
add
out
sbb
inc
cmc
push
gs
adc
and
adc
sbb
add
add
loope
inc
add
sub
fidivrs
add
add
dec
lfs
push
add
popa
jecxz
adc
add
sahf
sbb
add
add
in
lea
ds
out
xchg
out
inc
add
inc
add
mov
mov
mov
stc
mov
ret
ficoms
jns
add
mov
add
add
xor
mov
add
xchg
pop
and
add
in
mov
pusha
add
or
in
xchg
inc
add
int3
pop
fcomp
cli
data16
xchg
hlt
add
jle
add
jbe
scas
gs
add
and
mov
mov
mov
mov
dec
in
sub
and
mov
cmp
add
pushf
jo
xchg
in
ljmp
cmp
xchg
add
add
stos
repnz
xor
fwait
andl
jae
add
add
jle
adc
testb
cmp
pushf
hlt
add
add
cld
xor
ss
add
cmc
mov
out
add
loope
lods
push
fwait
loop
inc
add
lcall
add
mov
mov
add
lock
add
mov
xchg
add
mov
push
add
mov
dec
inc
or
mov
add
add
mov
lea
add
addb
out
lret
fadds
cmp
xchg
movsl
subl
pop
cmp
jmp
add
jne
and
push
sub
addr16
xchg
add
adc
js
pop
pop
sbb
dec
call
sbb
out
cmp
or
dec
adc
movsb
add
or
add
mov
mov
clc
push
and
mov
add
push
fs
jns
or
mov
in
xor
iret
push
add
push
add
add
add
push
shl
add
mov
mov
add
cmpsb
add
mov
xchg
iret
out
imul
jnp
add
mov
cmpsl
inc
push
add
mov
add
rolb
xchg
add
test
dec
addr16
out
add
add
mov
sbb
out
insb
adc
jp
mov
clc
in
mov
addb
outsb
fidivs
adc
adc
es
add
inc
aas
jg
ret
ret
fistpll
push
jp
mov
jns
hlt
add
les
stos
xor
mov
jg
cmpsl
jecxz
mov
sahf
push
add
push
clc
les
and
inc
add
js
add
mov
dec
nop
add
inc
add
sub
arpl
add
inc
add
jg
add
add
js
rolb
jmp
sbb
lcall
fisttps
cmp
add
or
xlat
insb
clc
and
mov
add
adc
cmc
xchg
add
mov
jle
sbb
push
cmp
add
and
add
add
jne
test
cmp
mov
inc
pop
mov
in
cmp
loopne
xor
mov
mov
pop
les
jb
push
add
aam
adc
int3
std
cmp
stc
cmp
jbe
mov
adc
mov
add
add
add
mov
push
add
add
cli
das
ss
and
dec
loopne
add
xchg
add
push
add
or
mov
mov
add
add
cmp
ret
dec
adc
ljmp
repnz
xor
push
xchg
add
jb
scas
popa
xchg
add
mov
addb
or
out
cmpsl
imull
add
mov
add
add
or
aam
ja
jae
jae
data16
mov
add
cmp
inc
sub
push
fwait
lods
bound
mov
add
mov
add
mov
repnz
inc
add
cltd
sbb
addl
fldl
mov
mov
pop
ffree
lock
push
in
movsb
add
jg
add
adc
ds
xchg
mov
inc
add
fmuls
loope
and
jp
cmc
xor
outsb
or
xchg
or
inc
rcrl
add
add
add
xchg
sub
xchg
fdiv
push
add
add
cli
add
mov
icebp
sub
add
fisubrl
add
mov
add
add
js
mov
and
js
add
dec
leave
pop
lahf
xchg
movsb
add
add
int
and
mov
add
add
mov
add
add
add
adc
push
rolb
ljmp
psubusw
sahf
aaa
insb
pushf
jae
pusha
add
push
inc
scas
lods
dec
xchg
iret
push
stos
pop
cs
add
xor
outsl
cmp
insb
xchg
enter
sbb
les
nop
add
sbb
add
sbb
adc
movl
fldt
add
add
add
add
add
add
add
xchg
add
mov
cli
sub
sub
pop
xlat
data16
mov
sub
mov
push
push
add
add
call
push
add
pop
daa
inc
lret
xor
movsb
add
nop
add
loop
mov
pop
enter
pusha
add
lods
ret
incb
add
outsl
add
daa
fcoml
add
add
sahf
inc
add
add
in
pop
mov
inc
add
add
mov
jecxz
push
loope
mov
xchg
inc
jecxz
in
cltd
adcl
add
outsb
adc
mov
and
add
mov
mov
outsl
jno
js
js
ljmp
and
mov
dec
inc
cmpsl
movsb
add
pop
mov
mov
add
outsl
std
push
add
dec
loopne
adc
mov
sub
add
scas
mov
cli
test
pushf
jbe
dec
adc
add
cmpsb
add
add
add
mov
add
mov
inc
sahf
iret
mov
outsb
fwait
jbe
jmp
out
mov
mov
pop
or
add
xor
sub
rolb
and
add
jp
xchg
fsts
add
pop
test
pushf
test
sbb
stos
ja
xor
add
and
mov
add
lock
pop
rolb
jo
xchg
add
cltd
pop
push
loope
add
stc
ljmp
loop
dec
jg
pop
ljmp
add
dec
sti
sub
add
in
push
test
js
out
imul
sti
cvtdq2ps
inc
pop
arpl
adc
ljmp
xchg
pop
mov
ds
add
mov
std
and
mov
inc
loope
adc
mov
or
fldcw
pop
ja
sbb
push
mov
add
mov
mov
add
arpl
adc
scas
xchg
and
loopne
jno
ljmp
add
mov
dec
xchg
mov
and
mov
xchg
fsubs
mov
add
add
pop
ret
dec
ret
xchg
add
mov
fdivp
sbb
std
mov
add
push
add
sbb
mov
jnp
test
pop
lods
sub
cli
imul
movsb
add
xor
rolb
xor
xchg
pop
cmp
xchg
dec
adc
pop
sbb
fwait
pushf
jne
push
ficomps
adc
syscall
sbb
rolb
adc
add
lods
mov
pop
push
fldenv
add
in
bound
mov
add
mov
inc
add
mov
pop
adc
dec
mov
add
add
mov
add
adc
call
js
add
sbb
push
add
sti
add
lahf
and
mov
xchg
add
xor
add
add
add
in
mov
notrack
add
xor
fildl
insb
push
add
add
iret
inc
push
rcll
lock
push
add
sahf
insl
push
sub
add
add
pop
test
mov
add
or
xchg
add
mov
adc
sbb
sbb
add
add
inc
pop
aam
mov
sub
add
jns
dec
jg
mov
mov
enter
loopne
sub
jne
decl
add
mov
in
inc
add
mov
or
inc
add
test
add
cwtl
xor
ljmp
iret
lods
lock
adc
cmpsb
add
inc
add
add
jg
xor
lcall
jo
cs
add
ljmp
dec
lahf
cmp
test
pushf
jmp
add
add
adc
into
xchg
addb
adc
mov
xor
xchg
rol
add
das
bound
mov
cltd
addr16
sbb
shrl
mov
mov
repnz
xchg
add
dec
testb
push
add
jnp
xlat
push
add
clc
dec
add
add
add
out
push
add
xchg
add
mov
test
js
cmpsl
xchg
aad
loopne
pop
cwtl
fisttps
dec
or
pusha
add
push
jne
addb
add
popf
inc
cmp
xchg
cmc
data16
jge
add
add
in
sbb
lods
ja
out
pop
jnp
xchg
add
fwait
jp
pop
rolb
adc
mov
stc
test
data16
stos
inc
add
add
dec
addb
in
dec
adc
pop
pop
cmp
imul
out
add
add
or
addr16
push
mov
add
add
stc
push
add
sub
add
fists
sub
dec
bound
mov
sti
inc
xchg
add
jns
outsl
pushf
daa
out
imul
insl
push
add
push
add
ret
out
push
add
lret
cmp
fadd
add
push
add
add
mov
aaa
enter
add
rolb
push
add
mov
xor
mov
sub
add
add
es
nop
add
in
inc
add
mov
xchg
test
mov
pop
jge
add
dec
xchg
fcoms
mov
add
sub
in
add
sub
fidivrl
insl
adc
pop
add
add
add
cmp
mov
push
push
add
add
add
popf
dec
mov
fsts
add
pop
adc
pop
mov
mov
cs
mov
pushf
in
add
mov
mov
push
imul
call
ljmp
add
movsl
idivl
pop
popf
stos
sahf
push
add
add
push
add
pop
adc
mov
ret
dec
xchg
lods
push
cmp
add
pop
rolb
rolb
repz
mov
add
mov
add
aaa
mov
jbe
dec
rolb
leave
mov
add
aad
aad
mov
add
ds
iret
loope
bound
mov
jg
bound
mov
daa
ret
stc
lahf
adc
or
add
and
mov
add
mull
mov
iret
cwtl
dec
test
int
pop
outsb
fwait
cmpl
add
sahf
in
dec
sbb
fisubs
add
add
add
sbb
call
repnz
add
add
add
sub
movsb
add
jl
add
scas
js
push
add
mov
xor
data16
sahf
out
push
pop
xchg
add
add
int
add
add
push
push
add
mov
add
push
add
or
js
jnp
add
fsubrs
in
mov
test
or
add
je
add
mov
xchg
add
rep
fisubrs
nop
add
mov
lret
mov
add
add
add
icebp
adc
add
add
add
xor
add
pop
jbe
mov
xchg
add
jae
add
sub
mov
jmp
add
add
add
add
jb
push
addb
add
pushl
xchg
add
leave
push
add
jge
mov
mov
add
add
inc
lock
test
es
add
lock
add
in
sub
movb
test
add
mov
add
pop
rolb
pop
mov
cmpsb
add
mov
jmp
add
cmc
repnz
mov
add
in
lock
add
and
add
add
mov
xchg
aaa
dec
mov
std
packsswb
add
mov
aaa
jnp
push
in
test
ja
add
shr
inc
adc
add
movsl
and
sub
xorl
in
jns
aad
add
insb
outsl
adc
pop
xchg
outsl
sbb
mov
mov
fistps
push
add
mov
cld
loope
and
add
mov
jno
add
xchg
mov
sub
daa
nopl
mov
and
mov
cmc
pop
imul
add
cmp
dec
jp
pop
push
add
enter
jmp
push
mov
xchg
mov
mov
sub
sbb
mov
add
bound
mov
jne
add
les
stc
cmp
push
add
mov
outsl
or
add
mov
add
add
add
mov
mov
add
mov
mov
add
loop
xchg
inc
add
jae
push
call
imul
dec
inc
add
xor
int
add
add
push
add
add
adc
aam
daa
dec
sub
add
add
aas
outsl
xor
data16
add
add
call
jg
push
add
jae
add
push
dec
add
add
add
add
and
add
cmpsl
mov
sub
repnz
fstpt
add
test
dec
dec
in
add
cmpsl
adc
mov
ret
aad
push
add
orl
data16
movsb
add
add
pop
cli
aam
xchg
add
xor
add
enter
jns
add
mov
rolb
add
fiadds
push
sahf
out
add
inc
add
dec
mov
out
ds
inc
sub
xor
add
iret
inc
add
jne
mov
faddl
xchg
ds
dec
add
fwait
pop
xchg
add
inc
in
jno
push
add
sbb
add
add
sbb
add
mov
add
or
and
ds
insl
ja
mov
repz
xchg
or
or
pop
dec
addl
