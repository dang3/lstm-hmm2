dec
hlt
xchg
pusha
add
adc
mov
xor
mov
sti
dec
mov
adc
push
sbb
movsb
test
sub
add
adc
add
add
mov
add
pusha
add
out
or
cwtl
stc
inc
add
mov
and
jo
rorl
test
push
pop
inc
iret
andl
jmp
rol
test
out
fcoms
shrl
int
sbb
fs
mov
or
repz
add
int3
push
lds
aaa
mov
ud1
add
out
cmpsb
jnp
jbe
pushf
sub
int
shll
push
push
nop
or
ds
jns
lret
sbbl
mov
add
inc
add
adc
rolb
adc
sub
dec
pop
or
lret
sub
add
mov
icebp
insl
mov
inc
add
inc
mov
dec
bound
pop
pop
cs
lcall
xor
mov
pushf
xchg
call
add
xor
add
xor
add
add
iret
add
mov
jno
add
jecxz
addb
and
gs
insb
arpl
cs
lock
pop
outsl
jge
fsubs
pop
stc
insb
pop
sbb
ret
jmp
pop
lods
cltd
cli
lret
mov
jle
icebp
sahf
mov
cmpsb
mov
mov
mov
test
xchg
add
call
std
xchg
or
icebp
lds
or
fnsave
adc
insl
addl
inc
add
jle
add
sbb
inc
lcall
xchg
call
cmpsl
jecxz
lods
dec
push
shlb
cmpsb
mov
and
mov
inc
add
pop
fsub
fidivrl
or
jl
xchg
ljmp
lcall
jecxz
nop
pushf
lods
dec
sub
add
or
push
and
dec
scas
lret
fcmovnbe
ret
fdivrs
les
out
inc
add
add
lock
push
imul
push
sbb
nop
jp
enter
pop
mov
cld
dec
inc
add
icebp
test
add
mov
mov
sbb
add
addb
leave
sbb
clc
int
add
jnp
inc
lods
mov
push
sbb
mov
std
sbb
add
adc
gs
mov
enter
movl
add
add
add
scas
push
icebp
scas
cs
stos
int
dec
andl
daa
push
or
mov
inc
imul
scas
xchg
sbb
cmp
ja
jb
fidivrl
std
daa
xor
xchg
pushf
subl
add
inc
add
jno
aad
loop
inc
fstpl
jmp
psubusw
fsubl
xchg
mov
fbld
jo
pusha
add
add
add
sub
mov
inc
stos
or
add
pop
mov
jl
int3
ficoml
mov
cmpsb
mov
mov
clc
inc
out
cwtl
xor
pop
lcall
ss
xor
shlb
xlat
cli
jns
add
movsb
nop
repnz
sbb
outsl
dec
mov
and
mov
into
pop
mov
sbb
mov
add
mov
jmp
add
xchg
cmc
and
cli
imul
xchg
xchg
lret
adc
lods
adc
adc
pop
and
xchg
movsl
adc
ljmp
add
cmp
push
mov
adc
hlt
push
clc
shll
add
adc
les
sbb
add
jl
aad
push
cmc
arpl
ficoms
mov
shlb
xchg
sbb
fcomi
dec
mov
jns
loop
or
xor
shrl
arpl
out
and
cmp
jno
add
mov
xor
cmp
fisubs
out
enter
rolb
es
repz
cmp
arpl
add
loope
add
popa
lcall
add
mov
mov
and
push
sub
lock
add
jo
in
pop
lar
jmp
add
mov
pop
ret
xchg
sub
das
sbb
mov
aad
fcomp
jecxz
lahf
in
push
js
cld
pop
ret
notl
adc
add
cmp
jmp
push
shld
or
jle
xchg
xchg
cwtl
inc
add
shl
xchg
inc
add
add
test
pop
mov
nop
inc
add
adc
pop
add
or
addb
mov
hlt
pop
or
rorb
outsl
in
pop
jb
add
xor
out
pop
mov
pop
std
mov
shll
js
lahf
pop
xor
push
mov
scas
adc
enter
xor
cmpsb
es
add
lahf
ret
loopne
add
ljmp
mov
add
cmp
jns
out
mov
ss
add
or
cmp
orl
jns
stc
pop
jl
fwait
mov
dec
mov
jnp
push
push
xor
lods
or
add
jp
and
test
xor
cwtl
add
pop
aam
enter
jg
add
add
mov
ss
inc
mov
push
mov
popa
enter
adcl
add
fcmovnbe
imul
or
add
pop
movsb
addb
or
adc
faddp
scas
dec
sbb
in
cli
mov
cli
das
insb
in
xchg
add
jg
fsubrp
repnz
add
jge
rclb
xchg
cltd
xor
loopne
cltd
pushl
add
and
xchg
jnp
pushf
rolb
dec
call
and
les
push
pop
popa
push
add
add
add
jb
idivl
in
enter
insb
dec
push
jae
mov
test
xchg
sahf
push
jno
and
add
xchg
dec
daa
int3
stos
dec
push
mov
cmp
lret
pop
fcomps
mov
pop
daa
add
jns
push
or
and
jne
cli
daa
nop
repz
or
cs
mov
or
mov
pop
stc
popf
xchg
mov
pusha
add
add
and
cmp
add
and
xchg
stos
jge
pop
stos
call
nop
insl
mov
outsb
or
mov
add
lcall
je
dec
cmp
scas
int
dec
lods
movsb
dec
adcl
add
test
add
add
sub
cmp
mov
xor
add
lahf
xlat
dec
jp
sti
scas
mov
shll
in
lret
ss
adc
mov
push
scas
psrlq
push
out
aas
or
inc
add
add
xlat
aad
push
push
incb
jmp
sub
jne
cmp
push
dec
mov
bound
pop
sub
dec
push
or
mov
add
jle
xchg
rcrl
add
add
out
fildll
cmp
add
out
bound
scas
dec
pop
popa
add
mov
js
add
add
jg
mov
fs
mov
add
enter
dec
xor
cltd
stc
je
shll
push
push
jno
decl
sbb
test
push
xor
pop
movb
inc
mov
mov
insb
pop
daa
sbb
or
add
xlat
mov
add
and
and
mov
or
cmp
iret
dec
xchg
or
lea
or
lcall
xchg
push
outsb
pop
outsb
inc
add
add
aad
add
lds
xor
testb
dec
les
data16
sahf
test
jmp
mov
test
rolb
mov
jecxz
repnz
jl
cmpsl
or
add
int
add
mov
addb
icebp
mov
push
cmpsl
repz
push
rorl
fstps
sbb
movb
push
out
test
push
aaa
out
dec
sub
xchg
xor
add
xor
aaa
xchg
ds
xor
mov
mov
cltd
inc
xor
mov
in
movb
lds
ss
minps
mov
cwtl
cltd
pop
push
lods
and
and
or
fcoml
pop
movsl
loopne
js
stos
outsb
pusha
add
pop
loop
pop
addl
fnstenv
bound
xchg
arpl
cmpsb
gs
dec
call
loop
shlb
add
add
push
dec
sbb
add
dec
shlb
rorb
xchg
mov
push
loope
iret
cwtl
sbb
add
and
and
adc
ja
je
inc
jns
dec
dec
mov
add
push
arpl
mov
jl
rorl
cmp
cmp
add
adc
testl
add
push
dec
mov
sub
negl
inc
add
jbe
movsl
cmp
push
add
adc
or
fwait
push
push
add
lret
fscale
clc
adc
mov
scas
idiv
inc
add
loope
in
adc
icebp
iret
xchg
xchg
pusha
add
in
into
daa
int
push
rolb
add
pop
sbb
add
jbe
jge
add
divb
lahf
arpl
in
std
sbb
sub
hlt
push
pop
cmp
adc
gs
pop
pop
add
sub
dec
adc
into
aas
or
push
cmp
fildl
in
push
and
mov
jecxz
mov
adc
pop
pop
pop
cmp
movb
fidivs
and
repnz
shll
mov
insb
mov
add
js
adc
pop
popf
inc
add
add
or
add
rol
dec
iret
mov
xor
cli
rolb
adc
mov
shrl
mov
add
adc
xor
push
pop
shlb
mov
xor
sbb
add
fwait
dec
in
fisubrl
adc
add
or
cmp
lods
jge
add
ds
popf
sub
push
rcrl
mov
js
pop
xchg
jmp
sbb
outsb
jb
pop
mov
std
ret
add
inc
add
add
inc
push
lods
pushf
leave
mov
mov
das
adc
in
sub
push
mov
push
push
push
push
push
push
push
push
notrack
mov
pop
dec
imul
cmp
ss
push
call
cmp
je
mov
lea
push
push
es
call
push
jmp
icebp
mov
nop
cs
lea
xchg
or
lock
lea
repnz
pop
add
ss
cs
ret
add
add
fstl
add
xorl
sub
mov
inc
add
jns
cmp
in
push
pop
lret
and
test
hlt
das
dec
pushf
filds
enter
mov
cmp
add
ljmp
ret
testl
hlt
sub
aas
pop
push
out
jl
std
loopne
rorl
stos
sbb
aaa
cli
outsb
pop
mov
xchg
pop
jg
lods
jae
cld
xor
fisttpl
dec
fcmovnb
int3
scas
add
sbb
xor
repnz
mov
outsl
inc
mov
pop
out
inc
add
lea
test
std
movsl
add
and
cmp
sub
les
lock
popf
inc
add
das
outsl
cltd
sbb
outsl
mov
mov
mov
out
xchg
or
add
sbb
out
rcrl
add
jbe
or
loopne
nop
dec
jle
mov
add
cmp
push
out
sub
movsl
test
jbe
jb
xchg
and
test
ss
add
dec
mov
pop
dec
aam
add
lods
mov
adc
insl
dec
movsl
stos
jmp
adc
add
mov
push
xchg
dec
mov
mov
add
mov
insl
pop
cmp
sub
push
insl
xchg
mov
jmp
idiv
stc
pop
lahf
in
adc
or
popa
sbb
and
rcrb
jl
mov
mov
mov
jg
pop
sbb
xor
outsl
jns
repz
add
add
test
incl
scas
test
dec
je
add
mov
xorl
rolb
daa
aaa
enter
inc
add
cld
ret
mov
add
outsb
out
call
pop
out
sub
add
loopne
inc
adc
add
fucomp
jl
scas
sbb
adc
movsb
or
mov
dec
and
fs
pusha
add
into
rep
sub
add
or
lds
pusha
add
xor
jns
lcall
xor
mov
loopne
cmpsl
dec
jl
add
pop
cmp
push
push
mov
shl
sbb
mov
jle
incb
scas
ja
loopne,pn
std
fwait
mov
jge
stos
sbb
add
mov
add
add
adc
movsb
or
mov
rcll
add
pop
push
mov
adc
add
inc
add
jnp
push
leave
loopne
add
imul
pop
hlt
adc
add
lcall
sbb
lock
xchg
jl
jb
add
jle
lods
movsl
rcrl
mov
adc
add
test
fists
add
pop
or
dec
mov
leave
xor
inc
sub
inc
inc
pusha
add
mov
enter
das
sbb
test
popa
int3
gs
aas
mov
out
mov
jne
or
sbb
addb
rol
add
add
or
add
sbb
int
ficomps
cmp
pop
and
inc
add
ror
push
outsb
mov
push
sbb
inc
add
jge
loope
xchg
lcall
push
repz
rolb
xchg
xor
xchg
fmull
or
pushf
stos
mov
testb
xlat
imul
inc
jle
test
lods
jl
std
test
and
roll
ja
cmp
adc
das
add
xor
dec
mov
jo
mov
inc
add
jae
jecxz
movb
pop
adc
sti
ret
fs
data16
jnp
fsubrs
iret
sub
jae
cmp
push
push
adc
push
sub
outsb
or
pop
push
pop
ljmp
mov
cmp
fcomip
mov
add
pop
sub
fwait
div
dec
pop
std
es
pop
jne
add
mov
imul
lods
out
mov
add
sub
add
cmp
push
es
mov
mov
inc
add
bound
adc
push
je
aaa
imul
das
jb
into
repnz
mov
push
imull
jbe,pn
cld
sbb
lahf
pop
sti
call
mov
mov
push
inc
shl
cmc
outsl
in
insl
test
insb
dec
hlt
mov
addb
lea
repnz
mov
fsubl
sub
or
adc
cmpsl
xchg
decl
stos
lcall
mov
add
dec
aas
inc
add
int3
cmpl
pusha
add
cs
jbe
cmp
test
inc
sub
dec
inc
adc
and
inc
add
cli
mov
jbe
shll
shll
add
fdivrl
pop
fwait
mov
push
add
jns
leave
scas
insb
lock
dec
xchg
sub
sub
jl
jne
fdivr
mov
xor
xchg
xchg
insl
lahf
push
imul
bnd
das
pop
sbb
jno
ret
dec
cmp
add
sbb
ss
sub
push
in
fwait
lea
mov
adc
packssdw
mov
int
ja
jae
out
add
jnp
repnz
pop
mov
hlt
add
adc
push
dec
sti
loope
rorl
loopne
mov
pop
jecxz
rorl
shlb
pushl
sbb
es
inc
add
jle
xlat
push
add
sbb
xor
addr16
inc
add
popa
or
adc
adc
xchg
fs
add
hlt
xchg
bswap
xor
dec
insb
repz
jne
ret
out
xor
inc
nop
pop
mov
sar
sti
hlt
stc
rolb
sbb
sub
mov
cmp
xor
fimuls
loop
lahf
dec
push
add
popa
jg
insb
dec
sti
adc
test
push
dec
dec
sbb
arpl
mulb
movb
push
adc
cmc
cwtl
xor
sub
insb
cld
loopne
pop
lods
xchg
lcall
addb
addb
int3
push
or
sti
das
lods
mov
repz
pop
int
mov
fstl
test
scas
ret
push
popa
push
cmp
pusha
add
jo
movsb
mov
rcrb
lret
push
popa
inc
add
adc
scas
xchg
pop
adc
and
and
and
cmp
loope
addr16
lock
add
add
mov
addb
mov
movsl
jne
rolb
mov
xor
mov
in
mov
jecxz
inc
add
xchg
inc
mov
pop
or
adc
or
push
push
and
test
or
and
loope
imul
call
add
out
fimuls
cmpsb
fisubl
in
stos
cmpsl
bound
movb
fdivrl
mov
inc
mov
jno,pn
mov
or
shl
stos
aas
xlat
test
lcall
jnp
lods
xchg
into
adc
or
add
mov
bound
jg
adc
push
mov
ror
pushf
mov
add
add
sub
imul
negb
adc
fdivs
movsb
lock
scas
mov
adc
add
or
lcall
add
jbe
adc
cmp
add
jbe
repnz
xchg
mulb
mov
bound
inc
add
adc
test
mov
inc
insb
add
sbb
mov
addb
test
in
push
and
addb
pop
xchg
adc
jp
jno
lock
cltd
shll
std
addr16
scas
and
fisttps
jl
xchg
mov
xchg
adc
out
sbb
xor
into
rclb
lods
xor
xor
out
notb
test
cmpsl
addb
movb
pop
ror
js
push
shll
and
ret
sub
mov
vmread
stos
mov
mov
ja
inc
add
mov
sti
or
add
ss
fildll
clc
push
and
mov
add
outsl
shll
ss
or
gs
sub
dec
arpl
or
repz
mov
sarl
jp
sub
dec
inc
pop
dec
push
and
ljmp
test
jo
pop
loop
add
clc
adc
int
iret
mov
sbb
gs
shrb
jo
stc
rep
jmp
sahf
test
andl
add
pop
arpl
aaa
jo
out
rolb
aad
pop
and
or
push
pop
push
xor
jg
add
xchg
xchg
subl
fsubrs
aas
imul
lcall
mov
sub
sub
mov
add
ljmp
mov
cmp
cwtl
scas
addb
pop
dec
es
cmc
cmc
les
outsl
mov
push
out
cmp
rcll
mov
addr16
cltd
dec
push
jle
ja
imul
pusha
add
xor
std
push
cmp
daa
cs
add
push
xchg
aam
popf
add
inc
add
add
xchg
or
lret
aaa
cmp
decb
loopne
adc
add
mov
xchg
call
add
fmulp
loop
add
mov
push
jb
movsb
popf
das
adc
dec
stos
add
test
nop
xor
push
popf
push
add
add
in
jmp
imul
movb
fsubrl
push
cmc
fs
add
cmp
add
push
into
pop
int3
cmp
imul
ss
and
mov
cmc
push
and
shlb
scas
in
clc
mov
shlb
add
add
loop
xchg
mov
ljmp
int
add
jnp
test
xchg
add
jae
jg
sbb
cwtl
out
leave
repz
insl
popa
movd
pop
js
addb
mov
push
push
add
jnp
mov
inc
inc
add
stos
jecxz
pop
shlb
xor
pushf
sbb
shl
push
mov
flds
lods
jp
ds
adc
je
int
sbb
or
jns
daa
insb
mov
pop
jns
ret
cmpsl
pop
daa
mov
dec
aaa
ja
add
inc
pusha
add
out
or
xor
mov
rorb
test
jg
push
add
pusha
add
frstor
out
inc
push
add
ja
in
rcll
xor
sbb
jl
and
inc
pop
ficompl
fsubs
cli
insb
lock
xchg
cs
adc
push
outsb
lret
xchg
jge
cmp
xchg
rorl
das
pusha
add
adc
add
add
das
movsl
out
icebp
nop
jno
jle
leave
adc
add
and
or
jge
roll
aad
and
arpl
leave
mov
mov
add
incb
adc
shll
je
pop
dec
or
daa
mov
repz
iret
scas
xchg
mov
movsl
sbb
jno
int
test
sub
cmp
xor
out
and
push
scas
enter
and
add
xchg
or
xlat
and
pop
jg
push
sub
clc
add
sti
sbb
xchg
lods
cltd
shrl
xchg
imull
add
sbb
iret
dec
mov
sbb
loop
jno
pop
jg
cwtl
dec
dec
jmp
or
add
and
cli
pop
or
shrb
addb
mov
pop
pop
lds
xor
cmp
sbb
sbb
addb
add
rolb
add
cli
hlt
imul
jmp
add
push
ja
stc
inc
subl
aas
push
adc
in
shll
add
mov
add
cmp
pusha
add
xchg
shll
add
cmp
decl
cwtl
xchg
stos
mov
shrb
fsub
adc
ja
lahf
push
sbb
fdivs
xlat
dec
adc
xchg
cmp
inc
add
call
cltd
dec
mov
rolb
jnp
and
ret
and
out
sub
mov
add
jg
lds
add
ss
in
push
aad
clc
sbb
loopne
movsb
test
jecxz
add
jecxz
sub
call
addr16
adc
inc
add
mov
mov
jg
push
enter
jae
dec
pop
add
pop
jle
and
adc
xchg
cmpsl
movb
cmp
les
movsl
push
dec
xor
sub
jl
or
push
pusha
add
mov
sbb
jle
fprem1
dec
mov
push
push
xchg
inc
cltd
aam
jp
xchg
popf
inc
add
je
push
jnp
xchg
jno
es
nop
test
ja
shll
jae
imul
fldt
mov
push
sbb
imulb
push
add
add
and
push
test
shrb
xor
rolb
cmp
pop
xchg
xor
adc
std
daa
dec
out
mov
pop
imul
jae
scas
loop
inc
add
aas
mov
int
or
add
sahf
adc
cmp
adc
push
inc
insl
cmp
lods
cmc
idivb
cmc
sub
sbb
mov
fisubrl
add
add
aas
pop
movsl
cmpsl
je
daa
mov
pop
jmp
dec
into
sub
hlt
shll
into
fwait
adc
call
xor
sub
inc
xchg
inc
add
and
add
add
add
shll
inc
lea
inc
add
mov
add
add
xor
test
add
inc
sub
js
sti
mov
push
ss
imul
and
idiv
in
and
and
fs
or
mov
push
mov
lea
jne
out
and
rol
orl
shll
xchg
out
xchg
movsl
ror
mov
clc
insl
sbb
ljmp
pop
or
jbe
cmp
jne
daa
fbstp
cli
loopne
dec
int
adc
dec
lock
add
dec
push
repz
pop
inc
test
stos
mov
daa
mov
addb
push
mov
dec
jno
sahf
adc
add
add
fbstp
xchg
mov
and
aad
int
fnstsw
sbb
push
add
cmp
xchg
sbb
lods
call
xchg
or
add
inc
jp
xlat
addb
add
xor
pushf
stc
int
clc
adc
insb
xchg
je
incl
add
jge
rcll
cmp
test
mov
lcall
sbb
cli
mov
add
mov
hlt
xchg
add
add
add
movb
mov
dec
shl
pushf
lods
repz
add
les
jnp
fcomps
xor
sub
adc
inc
add
mov
jb
cwtl
es
dec
movsl
xchg
jo
jle
je
xor
cwtl
jl
mov
add
mov
insl
rolb
push
cmc
or
sub
xor
mov
lcall
add
out
xchg
mov
shll
aad
fnsave
stos
adc
or
repz
pop
in
adc
adc
adc
add
add
outsb
bound
mov
cmc
inc
add
cld
xor
dec
or
sahf
xor
in
insb
lods
pushf
and
cmp
shlb
pop
or
sbb
fwait
cmpsl
xchg
addb
fldl
std
ret
shlb
mov
mov
and
pop
scas
popf
dec
jo
cmp
stos
adc
shlb
or
mov
jmp
pop
out
movsl
jno
pop
movb
scas
lock
ljmp
cmp
loopne
mov
mov
fcomi
movsl
xchg
sbb
fisttpll
sbb
sbb
outsl
movb
sub
test
dec
sbb
dec
scas
xor
ljmp
scas
aaa
scas
cwtl
rcrl
cmp
pmaddwd
mov
dec
lds
add
inc
add
lcall
daa
out
and
add
pop
mov
sub
mov
add
xor
jo
sub
sub
lcall
mov
add
fs
or
xor
add
mov
cmpsb
push
add
iret
inc
add
mov
rorl
jns
popf
fiaddl
add
xlat
idivl
cmp
das
lret
fidivrs
push
add
or
ljmp
mov
scas
in
std
movb
mov
and
or
mov
and
and
in
fisubrs
jae
ret
xchg
inc
add
sbb
sub
lods
shrl
xor
bound
sar
add
sti
mov
shl
addb
popf
push
out
mov
mov
sub
add
mov
sub
test
add
sbb
lock
mov
pop
mov
repnz
jnp
cmp
push
stos
inc
mov
mov
add
mov
jp
test
add
mov
mov
adc
divb
cltd
insl
xchg
mov
pusha
add
arpl
xchg
mov
clc
pop
push
lods
inc
add
sub
test
insl
push
test
int3
aas
stos
push
les
popa
arpl
pusha
add
add
add
unpckhps
mov
pusha
add
mov
cmp
add
dec
adc
jno
into
xor
enter
cmp
fisubrl
stc
add
lea
daa
ja
jle
sar
out
rcll
pop
dec
leave
aam
xor
push
cmp
sbb
in
sbb
inc
add
je
add
lods
cmp
and
insb
xchg
pop
or
push
shr
jl
std
sbb
and
lahf
lea
xchg
lret
sahf
insb
pusha
add
xchg
es
inc
sub
jnp
popf
fadd
lea
mov
jmp
rcl
and
dec
in
add
out
es
add
and
lds
pop
adc
inc
add
cli
dec
lcall
inc
insl
in
xor
add
mov
sbb
cmp
mov
and
bound
mov
repz
pop
cltd
lea
mov
add
out
add
xor
and
xchg
mov
arpl
jecxz
mov
int
aad
ljmp
js
stos
cmc
in
loope
add
mov
je
mov
std
fstps
fcmovnbe
mov
stos
ljmp
into
jmp
ja
add
xor
xchg
jge
sub
and
push
clc
sub
bt
mov
mov
out
out
jnp
sbb
and
aaa
cwtl
dec
fsubs
pushf
scas
in
stos
int3
arpl
dec
add
xorl
cwtl
cmp
inc
add
inc
add
cmp
fistps
dec
in
jb
add
mov
xchg
int3
lock
add
idiv
int3
mov
jnp
scas
out
mov
stos
rorl
sbb
aas
fwait
pusha
add
inc
add
not
cli
jb
push
push
int
cmpsb
out
call
movb
sub
int
jge
push
addb
inc
cmp
pop
ret
add
out
popa
out
xlat
cmp
dec
imul
inc
add
mov
jae
mov
adcl
pop
subl
cmp
in
ret
inc
add
aam
mov
hlt
and
add
or
cli
xchg
out
mov
add
push
and
mov
add
cmp
lds
cmc
and
jge
push
push
mov
cmc
leave
sbb
jl
cli
bnd
pusha
add
outsl
mov
mov
adc
cmpsb
inc
mov
in
adc
ret
fstl
out
or
inc
or
jae
xor
or
stos
out
xchg
push
inc
mov
push
rcrl
jns
aaa
mov
jnp
inc
add
xor
sbb
sub
xchg
push
leave
and
cld
mov
fidivrs
sarb
test
push
pop
movsl
shl
int3
mov
adc
add
leave
cmp
mov
sbb
popf
arpl
push
add
lret
add
fidivl
push
cltd
pop
cmc
rolb
jg
adc
sbb
sbb
cmp
mov
scas
es
imul
lret
pop
addb
pop
movsb
imul
xchg
outsb
xor
cli
sub
pop
or
add
out
push
mov
xchg
jl
movb
add
clc
std
or
rcll
stos
es
jae
negl
das
lcall
cmp
adc
cmp
sub
xor
sbb
mov
cmp
add
jl
fistpll
inc
mov
sub
cmp
jns
addb
mov
mov
or
mov
inc
add
repnz
add
leave
fidivs
and
sbb
in
call
loope
adc
aam
xor
add
test
mov
lret
adc
adc
hlt
std
add
stos
mov
in
shlb
test
mov
add
outsb
mov
inc
add
push
movsb
inc
add
sub
int
mov
add
push
sub
add
fstp
jne
fnsave
fs
and
pop
mov
mov
aas
dec
sbb
dec
fwait
sub
into
lret
add
cltd
push
imul
pop
push
lock
inc
out
hlt
call
rolb
lea
out
dec
insl
push
lods
sahf
ds
insl
scas
pop
cwtl
sti
lret
or
sti
pop
xchg
jecxz
dec
sbb
adc
rorb
lea
loopne
add
leave
fmull
cwtl
xor
pop
sbb
push
adc
inc
add
cmpsl
or
je
fs
xorl
or
pop
sub
mov
pop
stos
dec
imull
repz
sti
in
bound
mov
add
out
shrb
jns
sub
sbb
hlt
lahf
mov
fdiv
inc
add
out
fisubs
lahf
ficomps
fs
scas
mov
and
add
sbb
and
movsb
in
inc
add
in
push
cmp
out
mov
pop
fisttpl
ljmp
adc
or
adc
add
cmpsl
shll
hlt
aam
lret
inc
add
inc
dec
xor
shll
mov
scas
aam
insb
repz
cmp
leave
and
out
jbe
jge
sti
add
add
movsb
or
or
pop
in
adc
xchg
mov
jae
xchg
xchg
jecxz
xor
add
pop
repnz
push
pop
imul
out
out
xchg
cli
cmp
mov
iret
and
bound
mov
and
jg
icebp
sub
push
out
xchg
in
dec
sahf
jp
add
outsl
aaa
lods
in
in
jecxz
and
dec
xchg
fcoml
pop
dec
pop
mov
adc
rolb
ret
sbb
mov
lods
or
add
in
push
stc
dec
iret
pop
mov
fidivs
sub
jge
dec
lcall
adc
out
nop
jecxz
add
and
lods
dec
in
icebp
jecxz
rolb
xchg
push
test
cli
pop
rcr
and
adcl
cmp
out
jae
jb
jmp
fldenv
cltd
jne
mov
push
xchg
cmp
addb
cmp
mov
cld
jno
xchg
push
push
mov
addb
in
stos
jo
ljmp
xchg
mov
xor
add
and
push
add
add
daa
xchg
mov
outsl
jno
add
fwait
pop
and
mov
mov
mov
mov
cmc
movsb
mov
sub
aaa
or
sbb
add
mov
xchg
ror
push
je
jl
shrb
inc
addb
mov
cli
mov
fistpl
lods
imul
fistpl
mov
adc
mov
aad
mov
icebp
in
pop
and
nop
imul
add
sbb
sbb
xor
mov
pop
adc
inc
add
adc
add
stc
sbb
add
mov
or
dec
mul
adc
jnp
xor
shll
stos
and
test
dec
cmc
inc
adc
or
ss
add
push
jne
lds
cmp
inc
and
cwtl
push
add
sbb
ds
cmp
mov
out
addb
add
add
mov
xor
aas
bound
dec
ljmp
push
dec
testb
sarb
addb
push
cmovnp
xchg
cmp
add
sarb
cltd
gs
ret
stos
mov
ret
notl
std
stos
jecxz
cmpsl
cwtl
pop
fwait
jnp
or
and
pop
mov
dec
dec
and
dec
hlt
push
movb
out
shll
jge
js
sub
pop
cltd
jne
mov
xchg
outsb
mov
pushf
repnz
add
mov
mov
adc
sub
mov
mov
pop
mov
addb
imul
push
add
add
cli
pop
cmp
jmp
adc
mov
jg
ljmp
shlb
gs
je
mov
xchg
outsb
jne
xchg
xchg
jmp
sub
stos
test
lret
cs
loopne
cmp
mov
fadds
xchg
iret
mov
add
enter
add
mov
push
fistl
mov
addb
cltd
cli
cs
test
and
jge
addr16
push
adc
push
outsb
jmp
add
and
jno
scas
hlt
jmp
mov
push
add
pushf
mov
adc
ss
and
add
sbb
jle
sahf
dec
lcall
add
in
movb
add
test
test
add
cwtl
hlt
push
add
xor
inc
push
add
add
pop
xor
add
pop
in
mov
mov
iret
or
xchg
dec
in
lea
sahf
jnp
adc
push
std
cwtl
test
int3
sbb
cld
aas
out
in
xchg
rcll
ja
insl
jbe
mov
popa
mov
add
add
cld
mov
cmpsl
jns
push
outsl
and
test
adc
inc
add
repz
mov
clc
movsl
push
pop
scas
cmp
les
xchg
rorl
cmpsb
mov
mov
jo
jmp
mov
repnz
push
mov
mov
add
and
sbb
sub
scas
dec
lret
add
in
sbb
mov
add
mov
inc
push
les
in
cwtl
rcl
clc
leave
ljmp
js
fnstenv
jbe
jecxz
sub
inc
add
mov
mov
loope
stos
sub
inc
xlat
jp
inc
add
fmul
sbb
les
mov
dec
push
out
nop
in
or
mov
mov
aaa
lcall
adc
inc
xchg
jmp
ljmp
movb
pop
dec
lds
lock
pop
pop
sbb
loopne
ljmp
add
xchg
mov
push
out
movsb
or
iret
mov
movsb
jle
add
stos
pop
push
sub
xor
fmull
pop
dec
pop
cmc
adc
lea
sbb
js
xchg
fnstcw
mov
mov
es
add
jnp
movsb
sbb
hlt
push
addr16
cli
sbb
jg
scas
sbb
mov
aad
out
pop
daa
test
sub
jns
xor
pop
jns
shll
orl
push
pop
lea
pushf
repz
add
mov
adc
cltd
lds
sbb
addl
sub
in
mov
jns
hlt
xor
xor
or
sbb
addr16
inc
adc
movsb
test
or
xchg
sub
cmp
roll
pop
addr16
dec
movsb
roll
ds
cltd
pop
xchg
cmp
adc
int
outsl
jmp
mov
jge
adc
and
add
cmp
jnp
add
add
jns
ja
inc
add
xor
aam
lcall
inc
add
mov
xchg
pop
push
movsb
jecxz
mov
adc
dec
and
xor
pushf
fwait
cmp
xchg
sti
int
and
mov
in
pop
arpl
ljmp
in
adc
lea
bound
pop
and
clc
mov
in
mov
fcmovb
add
stc
mov
push
jle
adc
fmulp
daa
les
mov
cld
into
shrl
jae
mov
fists
dec
std
mov
mov
cmp
sbb
sub
add
cli
push
jo
cld
inc
and
popf
out
in
push
or
daa
and
or
loopne
add
stos
or
cs
repz
addb
mov
mov
cmc
mov
add
stc
and
add
outsb
mov
add
cmpsb
push
pop
xor
sbb
mov
leave
cmpsb
in
xchg
mov
add
sahf
cld
xchg
xchg
mov
das
dec
mov
fs
enter
fmul
xchg
sbb
push
mov
imul
cmpsl
into
mov
xchg
jmp
jg
cmp
cmp
mov
rolb
stos
pop
inc
add
xchg
sub
addr16
clc
or
push
ljmp
mov
cld
mov
sub
loopne
test
or
pop
add
ja
hlt
pop
adc
mov
inc
inc
daa
xchg
push
dec
inc
sub
mov
xchg
cmp
inc
dec
outsl
mov
jecxz
leave
sub
sub
aad
push
fisttpl
mov
xor
addb
ds
mov
mov
imul
frstor
push
data16
andl
es
push
pop
xchg
add
fcmovne
adc
jns
aaa
or
daa
mov
and
fmul
movsb
js
lret
mov
jg
rolb
cld
mov
icebp
xlat
dec
icebp
push
mov
push
jb
popa
adc
add
scas
jg
aad
add
mov
jg
insl
pop
sbb
mov
leave
dec
jle
jne
and
pop
sub
cmp
add
jo
stos
test
mov
mov
add
les
pop
jecxz
add
add
push
push
cmp
mov
clc
iret
push
xor
add
xchg
and
push
xchg
lcall
iret
js
push
lods
mov
in
inc
jns
mov
push
hlt
pop
mov
lea
das
or
stc
or
push
mov
mov
imul
outsl
push
push
movsl
push
add
fldenv
out
stos
arpl
inc
inc
add
ret
add
jecxz
or
adc
pop
pop
inc
cmp
and
xchg
scas
pop
ja
add
mov
lods
repz
add
pop
je
adc
fs
aas
inc
xchg
ficoml
shrl
sub
xor
or
push
add
popl
jns
outsl
inc
stc
mov
and
cmp
add
sub
xor
jae
sti
enter
fbstp
je
mov
in
cwtl
push
testb
pop
sbb
add
movsb
inc
cmp
lcall
or
leave
lock
jge
outsb
sbb
add
mov
sahf
test
add
push
test
shll
addb
mov
cmp
loop
sbb
out
inc
add
add
addl
sub
pop
mull
fisubl
adc
mov
add
sbb
iret
adc
icebp
add
adc
int
addb
daa
sub
and
cmp
cs
mov
sub
fisubs
mov
sbb
pop
or
xchg
and
mov
add
int
ds
fdivp
and
cmc
fsubrs
mov
cmp
test
mov
ja
xor
outsb
mov
mov
add
icebp
mov
sbb
add
inc
add
add
adc
cs
ret
jg
push
mov
jb
popf
xor
daa
sbb
inc
or
lock
sbb
mov
xor
js
and
add
jbe
mov
add
mov
mov
ss
std
push
imul
rcrl
icebp
xor
xchg
fucom
mov
xchg
cmp
xchg
fs
sbb
sbb
lds
add
mov
jl
and
rorb
pop
js
in
stos
mov
repz
shl
pop
sub
bound
add
jle
in
add
ja
add
push
fisttpl
pop
addb
add
fistl
loope
clc
mov
ljmp
push
cmp
imul
jge
pop
mov
and
imul
xchg
sub
jle
and
aas
add
add
aas
out
fcoml
jle
push
int3
addb
arpl
fistpll
addr16
inc
add
jne
xor
and
mov
sub
xchg
fsub
ljmp
das
fwait
addb
dec
lock
ror
push
ss
shrb
push
test
addb
mov
out
add
addb
je
pop
cltd
aad
or
adc
movsb
lret
xlat
jne
ds
fists
fwait
xor
jbe
and
test
push
xor
dec
xor
add
pushf
mov
movl
push
out
or
cmp
mov
pop
sub
outsb
mov
and
stos
jmp
add
jecxz
and
add
and
ret
pusha
add
addb
xchg
inc
add
push
mov
mov
xor
imul
add
bound
xor
push
pop
popf
add
adc
sub
xor
hlt
push
push
fidivl
rolb
add
outsl
cmp
pop
fbld
jnp
add
lock
push
je
ja
pusha
add
adc
xchg
daa
xor
jo
lcall
sahf
mov
push
and
mov
adc
hlt
fisubs
mov
add
stc
cmp
add
add
xchg
lret
into
xchg
lods
psraw
push
pusha
add
jbe
add
add
mov
stos
pop
push
nop
fnstsw
mov
ds
add
mov
jns
nop
clc
sub
imul
jle
mov
mov
cmp
test
clc
rcrl
in
xchg
aas
lock
shll
imull
pusha
add
or
test
ljmp
sub
fists
pop
aas
rolb
xchg
sub
inc
jp
imulb
test
jge
clc
or
pushf
mov
scas
pop
lods
scas
sarl
jns
xchg
adc
inc
add
inc
das
push
int
xor
xchg
shl
into
jmp
nop
sub
adc
mov
jmp
push
xor
sarb
outsl
jns
out
mov
rolb
pop
mov
lret
daa
lods
cmp
pop
jmp
xor
outsl
int
push
adc
push
or
flds
add
add
inc
xor
xchg
mov
fdiv
dec
jb
scas
adc
fs
adc
sub
jp
xor
mov
push
dec
cmovl
movsl
repz
xor
fs
push
mov
mov
data16
std
aaa
cmpsb
mov
and
fsts
stos
inc
add
mov
add
inc
add
fwait
pop
loopne
or
fidivrs
jb
adc
les
and
push
addb
push
xor
cmpsl
or
ljmp
imul
add
enter
adc
jb
movb
insl
cvtpi2ps
cli
mov
mov
scas
adc
mov
data16
mov
xchg
les
push
icebp
daa
int
push
lds
scas
jno
mov
es
insb
mov
xor
popf
cltd
push
or
repnz
outsb
es
or
cmpl
jb
mov
sbb
add
mov
mov
pop
addb
xchg
int
dec
dec
pop
popa
rolb
shlb
adc
lods
xor
rolb
jl
popa
jno
and
aam
pop
xchg
mov
xchg
inc
sti
out
push
push
adc
mov
fimuls
rorl
xor
cmp
scas
negb
mul
sub
mov
pop
sti
mov
jno
push
bound
inc
mov
mov
push
pop
xchg
pop
mov
xchg
cmp
clc
sbb
int3
cmp
xchg
leave
js
cli
push
dec
sti
dec
xor
dec
dec
xor
sbb
insb
loope
or
xchg
lods
jge
shll
mov
xlat
je
imul
pop
pusha
add
and
dec
loopne
stos
sub
mov
repz
ljmp
fisubrl
or
xlat
ret
int
and
add
mov
add
fs
insl
mov
cmp
daa
dec
mov
cld
push
xchg
sbb
jecxz
sbb
xlat
inc
dec
in
lods
inc
xlat
push
push
pop
adc
jne
fidivl
add
mov
mov
add
push
or
add
loop
add
jnp
mov
push
xlat
movsl
lcall
mov
xorl
lock
or
ret
shll
rcll
and
sub
add
rolb
add
or
lret
add
or
lret
js
jae
stos
fsubrs
and
sbb
jns
inc
pusha
add
cmp
loopne
sbb
add
je
xor
add
popf
icebp
add
and
push
ret
in
rcrl
cltd
jecxz
inc
add
jl
sub
dec
fadds
ret
sub
lds
add
add
xchg
loop
inc
cmpsb
push
mov
push
jae
xchg
sbb
mov
sub
jb
and
scas
shll
jb
xor
sub
and
inc
leave
xchg
iret
push
sub
fists
addb
popa
lods
fsub
dec
call
mov
and
rcrb
sub
push
or
dec
in
lret
add
jb
dec
dec
jmp
cmp
call
mov
jle
jb
mov
lods
jecxz
outsl
cltd
inc
and
mov
pop
call
add
add
mov
cmp
add
mov
popa
insb
mov
sub
jo
sub
xchg
pop
in
mov
xchg
xor
add
fisubl
add
std
sbb
or
pop
xor
xchg
out
push
xor
or
pushf
mov
push
add
add
out
arpl
cmc
xchg
outsb
sbb
sarb
bound
arpl
mov
sub
add
out
inc
icebp
outsl
mov
or
sbb
and
sbb
or
mov
xchg
aam
add
popa
push
flds
pop
lahf
sahf
mov
hlt
clc
jg
pop
movsb
xchg
call
test
movsl
mov
add
shl
jno
dec
adc
mov
lock
test
jb
mov
loop
lahf
add
mov
add
mov
sub
pusha
add
jmp
xchg
xchg
fstps
inc
add
mov
jle
add
jno
inc
popf
cmpl
ds
push
mov
clc
sub
inc
add
mov
bound
cmc
pop
jnp
push
fnstcw
inc
iret
mov
xchg
inc
out
sbb
outsl
fiaddl
add
inc
add
add
mov
cmpsl
inc
leave
jl
pop
shll
mov
adc
jae
fmull
mov
lahf
cmc
sbb
xchg
cli
imul
insb
inc
add
push
add
loope
jmp
pop
mov
pop
cmp
sar
lcall
lahf
test
into
and
or
add
push
sub
dec
rcr
xlat
cmpsb
cltd
jb
mov
push
lock
pop
push
add
mov
sbb
mov
sub
out
outsl
popf
pop
jecxz
cmp
jb
mov
ret
mov
mov
add
fcmove
push
loopne
jle
sbb
icebp
test
pop
xorl
jns
mov
adc
psrlq
adc
rolb
add
mov
sarb
daa
dec
inc
mov
test
push
fcomip
mov
xor
xchg
mov
sub
std
sbb
and
xchg
add
push
ljmp
jp
mov
xor
lahf
movb
cmc
xchg
or
xchg
inc
add
xor
xor
add
pop
fdivl
cmc
mov
mov
cwtl
sbb
inc
leave
mov
mov
pop
push
or
jge
ja
mov
sbb
lcall
ffree
add
or
mov
xorl
dec
add
pop
and
mov
xchg
jns
ret
pop
fildll
cmp
sbb
leave
ret
push
add
push
or
xor
mov
add
outsb
sbb
mov
add
add
add
cs
sub
inc
cmp
jno
icebp
sbbl
jae
lds
xor
xlat
lods
out
dec
arpl
inc
add
add
add
mov
push
ja
mov
jg
popf
mov
xchg
xor
dec
call
in
inc
xor
xchg
pop
and
lcall
add
test
push
lods
sbb
jo
stos
fcmovnu
addb
loopne
add
add
add
push
addb
cmpsl
in
add
and
rolb
fnstsw
mov
xlat
sbb
push
repnz
mov
add
sbb
add
pusha
add
add
add
push
mov
loope
or
into
inc
add
mov
into
loop
test
pop
mov
jge
je
fildl
aas
pop
es
cmp
xchg
pop
mov
iret
addb
push
das
sbb
mov
shr
inc
add
pop
movsl
jmp
xchg
dec
xorl
stc
mov
adc
and
hlt
les
ja
pop
out
mov
andl
pusha
add
in
push
test
mov
inc
xlat
xchg
push
push
xor
sbb
ds
add
sbb
jge
add
std
or
adc
dec
icebp
dec
xor
lds
push
add
jecxz
ret
adcl
pcmpeqw
add
gs
neg
cmp
cmpsl
jo
add
test
and
jnp
inc
add
out
in
add
ljmp
add
inc
lods
and
jmp
out
push
xor
dec
sub
sti
call
rolb
movb
insb
in
dec
lcall
movntps
add
rolb
add
hlt
mov
pop
dec
dec
pop
push
cmp
add
push
pop
pop
push
icebp
inc
add
and
mov
mov
lcall
out
insl
cmc
jnp
adc
inc
cmpsl
in
inc
mov
arpl
pusha
add
fdivl
inc
mov
fwait
jl
sbb
inc
imul
scas
mov
add
lea
add
mov
es
mov
or
and
lahf
push
adc
mov
cmp
cvtps2pi
push
inc
in
add
add
cmpsb
loopne
lea
loope
add
cmpsl
and
jecxz
je
or
add
mov
xchg
xchg
into
shll
cmp
dec
mov
repnz
in
orl
in
bound
ret
dec
scas
and
fs
imul
in
add
inc
add
icebp
inc
add
xchg
and
and
fwait
pop
call
cmp
insb
in
into
lds
sub
movsl
fcoml
jo
or
pop
dec
lods
mov
sbb
adc
jl
dec
cmpl
add
lcall
xchg
outsl
xchg
or
out
loopne
in
lahf
add
mov
lods
mov
add
mov
rclb
add
popa
mov
sub
jg
mov
pop
enter
add
add
sbb
mov
xchg
fisttpl
dec
mov
xor
adc
and
mov
lahf
ljmp
fldl
je
ss
add
or
add
in
dec
std
jne
sub
test
int
sbb
addr16
push
inc
add
mov
and
gs
pusha
add
xchg
mov
sub
adcl
add
addb
cmp
cltd
xorl
xor
xlat
cmp
bound
inc
fildll
add
fldenv
sbb
lods
dec
ja
nop
push
clc
ret
jns
addb
fidivrs
aas
jmp
rorb
in
mov
push
sub
stc
pop
arpl
pop
test
jne
jnp
das
mov
sbb
push
leave
adc
add
dec
sbb
les
nop
push
mov
or
lds
mov
popf
cwtl
iret
data16
add
cmp
pop
pusha
add
loope
or
pop
pop
jne
xor
mov
cmpsb
ficompl
stos
jp
adc
mov
xchg
cltd
fisubl
add
lea
add
cwtl
and
std
push
inc
test
aaa
mov
inc
cmp
loopne
add
insb
mov
js
ret
sbb
pop
lods
ficomps
les
jge
add
sar
int3
addb
jb
add
jne
in
jle
mov
pop
gs
aaa
push
jmp
adc
push
push
jbe
ja
mov
loope
js
cmc
sub
aad
mov
sub
sbb
pop
inc
add
es
leave
icebp
fimull
mov
stos
xchg
movsb
mov
je
ficompl
test
fstpl
and
cwtl
fdivp
jecxz
mov
std
dec
outsb
std
jmp
jo
add
jecxz
cmp
pop
ljmp
add
jmp
nop
cmp
sbb
or
cld
enter
push
stos
std
mov
fistps
or
mov
sub
in
in
mov
lcall
repnz
adc
movb
mov
mov
pop
push
lea
push
mov
int
pop
adc
loope
add
add
sbb
mov
out
dec
test
add
mov
sti
stos
pop
mov
sbb
add
mov
stos
das
xchg
or
pop
or
addl
jno
sbb
add
test
mov
xor
cmpsl
xchg
push
hlt
lahf
pop
fmuls
pop
sub
push
ret
push
add
inc
mov
lret
add
jecxz
out
jns
add
sti
adcl
enter
or
push
push
int3
pop
ljmp
cltd
xor
cmp
popa
ljmp
or
fsubrl
sti
adc
cld
in
inc
lret
fisubs
add
ret
stc
int3
movsb
std
clc
inc
add
mov
std
inc
pop
add
push
pop
inc
shl
lahf
in
push
cmc
in
xchg
mov
popf
lahf
xchg
hlt
int
ret
movl
pop
mov
xchg
and
jg
add
call
push
shlb
dec
adc
enter
xor
addr16
inc
add
mov
idivb
test
jmp
push
add
aas
xchg
mov
lret
xchg
and
sub
sub
add
imul
outsb
jl
pop
sbb
js
dec
inc
fdivrs
lcall
inc
mov
hlt
push
cmc
test
xchg
push
adc
add
repz
ss
push
cld
aad
cmp
xor
sbb
adc
lods
add
jp
sahf
push
fimull
mov
test
dec
xor
ds
sahf
dec
mov
into
jg
pop
sti
daa
int
xor
in
pop
addb
cmp
sbb
scas
pusha
add
test
js
xlat
cld
inc
add
xchg
sbb
xchg
sbb
and
push
pop
fbld
sbb
in
es
adc
lods
lret
cs
faddl
insb
dec
mov
addr16
movsb
ljmp
lahf
sbb
inc
add
lahf
and
jbe
sub
add
ffreep
mov
movsl
lods
repz
mov
out
push
add
sti
out
lret
xor
dec
stos
int3
xchg
push
add
push
clc
cli
adc
int
inc
add
aam
xchg
mov
add
mov
scas
sub
dec
push
scas
or
add
repz
jl
ret
cmp
xchg
or
imul
inc
add
insb
push
pop
pop
outsl
mov
les
addb
inc
add
xor
pop
add
add
xchg
insb
out
rolb
pushf
ds
adc
add
push
inc
add
add
cld
and
movsb
fwait
addb
das
pop
mov
lods
inc
add
clc
and
mov
pop
iret
pop
inc
add
cmp
jb
cmpsl
add
mov
add
fcoml
repnz
outsl
pop
ljmp
inc
add
push
xchg
mov
dec
aad
jl
stos
add
fcoms
out
lret
mov
adc
push
push
mov
rclb
loop
nop
push
xchg
ret
loop
addb
push
mov
push
fnstsw
lcall
push
and
push
call
pop
clc
jge
icebp
mov
or
jbe
add
fwait
pop
movsl
dec
repz
and
ds
mov
movsb
adc
jle
cmp
in
mov
inc
mov
jnp
add
and
dec
addb
jae
dec
aam
lcall
or
das
xor
inc
add
inc
imul
jmp
sahf
mov
scas
loop
cmpsl
adc
outsl
xchg
pop
sbb
mov
fmul
xchg
stos
shr
movsl
lret
xor
mov
movsb
jne
bound
add
dec
mov
rolb
jle
jbe
outsb
pop
int3
popa
addb
or
xor
xlat
or
in
inc
add
lods
dec
xchg
arpl
cmc
inc
add
arpl
xor
lds
cwtl
stos
adc
inc
add
mov
pop
out
xchg
popf
lcall
xor
jp
xchg
lret
iret
mov
dec
push
fwait
rcll
cld
roll
mov
je
mov
sub
or
dec
nop
and
xor
mov
in
jb
fwait
sub
lods
leave
rcrl
add
pop
push
rol
lret
jno
rol
add
jo
mov
xor
scas
mov
pop
rol
iret
push
mov
mov
ret
fldl
jne
or
adc
add
aas
out
mov
and
bswap
jge
incb
in
arpl
add
add
jmp
dec
xor
or
leave
movb
aad
ljmp
jmp
add
loopne
add
daa
or
rorl
xchg
jae
dec
push
xor
pop
mov
lock
add
jo
mov
dec
mov
cmp
cmpsb
popf
and
out
mov
cs
xchg
in
push
sub
cmp
inc
aaa
cmp
dec
xchg
sub
jbe
sub
add
add
fwait
xchg
pop
adc
lret
pop
jmp
test
mov
jnp
push
sbb
dec
rolb
add
call
cmp
jle
add
jne
dec
pop
jle
jno
test
adc
aas
insb
xchg
out
push
cmp
sbb
sub
pusha
add
cmp
sarb
xchg
hlt
imul
test
into
divl
jbe
fninit
adc
mov
add
mov
addb
jne
les
rcrl
xchg
mov
mov
inc
and
adc
vpsadbw
add
xchg
and
mov
in
shr
nop
es
push
and
int
les
mov
adc
add
inc
inc
jmp
scas
and
addb
xchg
or
sbb
dec
sbb
int3
dec
sub
dec
sub
ss
pop
cmp
out
xchg
push
fcomip
fsubrl
movb
jmp
add
arpl
add
loopne
pop
or
sbb
hlt
icebp
rcrl
arpl
in
test
mov
add
aaa
enter
jno
hlt
and
aad
push
sbb
mov
fs
mov
and
xchg
stos
push
pop
adc
cs
jns
outsb
mov
mov
int3
and
lock
push
mov
inc
add
jae
mov
dec
mov
mov
adc
or
or
mov
cmpsl
xchg
js
sbb
add
cmpsb
pop
loope
add
xchg
scas
popf
ret
fwait
lock
sbb
aam
lret
dec
and
pop
fimuls
jp
ljmp
roll
je
daa
test
outsl
jns
xchg
loope
addb
adc
inc
add
ds
mov
popf
add
add
aad
cmpsl
negb
jb
test
out
les
ss
shlb
popf
mov
mov
mov
push
xchg
xchg
cli
adc
ljmp
pushf
js
aas
jp
push
cmpsb
out
bound
cmc
jge
adc
sub
outsl
fst
fisubrl
lahf
std
sub
popa
shrl
push
mov
jmp
cmpsb
scas
adc
shll
lcall
xor
adc
fs
mov
lea
dec
popf
jge
movsb
test
or
cmpsl
dec
ficomps
cwtl
jne
add
or
insl
ss
test
xor
ret
rcll
jne
inc
add
nop
jne
xchg
add
sbb
repnz
push
cmp
mov
es
pop
mov
leave
sbb
out
jb
sub
mov
dec
fisubrl
repnz
xchg
sbb
pop
add
fs
add
scas
dec
jns
add
mov
into
int
mov
xchg
rolb
cmp
jo
bound
aad
fs
xlat
icebp
mov
inc
add
mov
sub
sbb
addb
sbb
mov
cmp
test
insl
sub
daa
inc
add
xchg
incb
adc
pop
mov
cwtl
jecxz
cmc
jg
inc
add
mov
aam
fistpl
loopne
ljmp
add
xchg
xlat
imul
inc
add
xor
les
jb
arpl
mov
out
sub
cmp
int3
sahf
pop
decb
fistps
cld
mov
push
push
mov
add
xchg
jae
int3
add
in
mov
xchg
pusha
add
fildl
add
aaa
dec
mov
pop
testl
sbbl
pop
dec
fabs
pusha
add
adc
adc
sti
stos
push
cltd
cld
add
mov
clc
adc
fsubrl
add
mov
cmc
movsb
push
and
pop
sub
pop
mov
sahf
mov
loope
insb
and
rolb
mov
xchg
push
lea
push
add
or
push
lcall
cmp
int
lock
mov
mov
jl
sub
sbb
dec
cld
xor
and
ret
cmp
add
cmp
add
add
gs
push
repz
sub
aas
inc
add
nop
cmp
movb
add
push
movsb
cmpsl
xchg
ret
insb
lret
add
inc
add
jge
xchg
add
sahf
cmp
aam
pop
ja
fs
sbb
pop
jns
mov
adc
xchg
sub
jo
out
mov
lock
insl
shll
clc
jl
or
mov
dec
lds
xor
and
scas
push
stc
repnz
adc
into
test
lock
bswap
sbb
add
adc
lret
jg
add
lds
add
add
repz
xor
loopne
fistl
inc
xor
add
jp
sub
or
pop
jno
in
mov
adc
add
add
jmp
pop
sbb
cli
test
paddsw
popa
rcrl
lods
iretw
inc
add
leave
mov
push
outsb
mov
gs
add
rcll
xchg
mov
arpl
xor
adc
cmp
xchg
arpl
popa
sub
mov
sbb
out
jno
xor
mov
shll
mov
insl
and
filds
cmp
repnz
xchg
inc
aaa
sbb
shlb
mov
mov
fbld
mov
dec
outsb
in
aad
into
icebp
sub
push
mov
stos
repz
pushl
mov
int
xor
inc
add
add
mov
roll
cmpl
cmp
sub
shll
add
push
mov
push
pop
popa
movsb
les
adc
lods
sahf
and
lahf
in
and
repnz
lret
movsb
int
hlt
cmpsl
fists
ljmp
lods
sbb
xchg
fiaddl
sub
add
cmp
sub
fstps
add
mov
popa
jge
adc
out
fsubrl
xchg
jge
fisubs
dec
rorl
lods
cmpsl
mov
fmulp
inc
add
xchg
loop
insl
insb
xlat
add
add
xchg
data16
addl
pushf
movb
ret
xor
inc
add
jl
iret
and
pop
and
adc
lods
pop
pop
cltd
out
add
adc
repnz
cmpsl
jno
rcrl
fnstenv
inc
add
hlt
jg
jge
cmp
fidivrs
add
loopne
cwtl
adc
jmp
mov
imul
lahf
and
add
sub
adc
adc
adc
cli
mov
push
out
adc
xchg
addr16
mov
push
add
push
add
rolb
es
xchg
or
mov
pop
rcll
mov
in
add
and
jecxz
jnp
push
scas
sub
push
repnz
xchg
insl
out
and
push
add
bound
xor
sahf
or
in
daa
les
inc
add
add
sbb
add
out
dec
mov
jg
scas
cmpsb
add
and
add
enter
call
mov
xor
inc
mov
scas
in
cwtl
mov
sub
jae
sub
push
add
add
xchg
movsb
xchg
mov
inc
add
cmpsl
jmp
add
ret
mov
rcl
mov
cmpsb
mov
imull
mov
iret
lods
sbbl
mov
and
mov
pop
lods
dec
sbb
fcom
mov
mov
adc
mov
int3
in
jo
les
pusha
add
cmp
and
lahf
add
sub
add
mov
cltd
in
cmp
lock
xor
dec
lret
fs
inc
add
mov
xor
add
imul
inc
add
push
shl
sarl
scas
cmp
test
push
fdivp
mov
jno
push
jae
out
push
sti
aam
add
mov
sub
les
push
aad
jg
jno
scas
mov
stos
mov
and
push
cmp
sub
out
mov
aam
adc
push
aas
insl
xor
add
xchg
mov
add
sub
cmp
aam
pop
push
inc
in
imull
fildll
dec
rcr
int3
dec
sub
repnz
pop
pop
outsl
movb
scas
fsubrp
cmp
pop
dec
pop
rolb
xor
fsub
ljmp
dec
mov
mov
sub
jle
jae
mov
adc
add
fistl
add
xor
jo
push
xchg
fwait
aas
push
add
sub
adc
pushw
add
int
jae
jmp
xchg
xor
dec
mov
cmpsb
cmp
push
and
adc
adc
mov
stos
addb
fs
or
jmp
add
movsb
dec
mov
jmp
test
jmp
imul
xchg
push
cmp
mov
ljmp
in
xchg
decl
lcall
cmp
loopne
test
add
sbb
ficoms
adc
adc
mov
xor
mov
mov
jo
xchg
shlb
imul
xchg
aas
mov
jmp
mov
pushf
test
cli
add
iret
pop
mov
rolb
or
test
clc
shlb
jg
cmp
add
enter
out
or
mov
mov
jno
dec
jmp
xchg
dec
stos
repz
std
outsl
sarb
out
mov
out
mov
inc
add
dec
imul
sti
mov
xor
lods
into
ret
out
adc
xchg
dec
xor
iret
lret
inc
int
lods
xor
addb
popa
dec
jbe
imul
dec
data16
cmc
push
mov
sbb
aas
jmp
aaa
addb
pop
mov
fadds
mov
cmp
jmp
fisttpll
push
and
movsl
enter
in
pop
push
add
xchg
inc
add
and
dec
loop
jecxz
inc
add
je
adc
addb
jo
adc
mov
cwtl
nop
imul
ja
add
jb
add
or
mov
ss
push
bound
fidivrl
add
sub
out
pop
mov
or
dec
pop
cmpsb
jp
gs
pop
jae
fwait
jp
inc
shll
dec
mov
sbb
fcoms
jp
mov
add
movsb
adc
mov
enter
xchg
or
add
pop
rolb
jno
pop
xchg
stos
mov
inc
aaa
repz
mov
jnp
mov
adc
push
dec
icebp
or
mov
and
je
jg
lahf
cmp
loop
and
and
pushl
sub
cmp
mov
or
scas
sub
insl
test
add
xor
ret
mull
mov
adc
xor
cmp
mov
xchg
and
loop
mov
dec
test
cwtl
hlt
add
out
mov
rol
adc
pop
or
xchg
call
and
test
add
in
and
jmp
mov
mov
mov
mov
dec
mov
leave
enter
xchg
mov
cltd
xchg
ficoms
xchg
add
push
insl
push
jns
cmp
add
adc
les
mov
add
in
sub
mov
nop
pop
sbb
or
cmp
fwait
or
sbb
inc
outsb
out
mov
add
cld
pusha
add
push
sub
jnp
icebp
mov
fdivrl
inc
add
xchg
sub
add
insb
icebp
and
dec
jmp
add
push
daa
scas
dec
inc
aaa
jmp
add
dec
cmp
push
cmpsl
int3
bound
jmp
les
scas
idiv
aas
dec
addb
mov
sbb
shll
dec
pop
push
add
adc
test
test
xor
pop
sbb
and
cmp
jle
mov
xor
pop
sarl
pushf
push
add
cli
fimull
and
dec
inc
cmp
in
bound
push
sbb
mov
pop
xor
add
cld
xorl
in
jno
pusha
add
scas
clflush
and
xchg
sahf
fisubrl
jne
add
sub
addb
loope
jo
addb
pop
mov
add
mov
sub
xchg
add
pop
dec
imul
mov
jmp
xchg
int
fcmovnbe
adc
scas
jp
pop
enter
add
add
push
sar
mov
xchg
add
leave
mov
or
push
dec
test
ret
faddp
add
mov
add
imul
dec
pop
dec
mov
insl
push
out
jno
stos
outsb
fcoms
mov
xchg
shlb
sarl
ljmp
in
mov
or
ja
mov
cmp
lds
sti
test
movsl
out
rcr
iret
mov
adc
mov
test
ja
or
jl
dec
scas
jae
pop
sti
clc
jp
or
test
cltd
jo
fldenv
or
cld
lret
pop
lods
fsubr
decb
cmpsb
add
dec
test
mov
adc
xchg
dec
jmp
ret
iret
fwait
adc
hlt
int3
fwait
cmpsb
lods
mov
xlat
push
rolb
sti
repz
dec
aad
aaa
push
push
mov
push
stos
xor
call
push
test
ss
inc
add
cmp
and
test
stos
insb
lods
cld
test
dec
xor
add
stos
add
out
mov
cmc
pusha
add
cmp
test
mov
fisttpl
xor
jecxz
mov
mov
cli
out
cmp
ret
aaa
pusha
add
xor
in
lret
loop
add
in
and
les
xchg
push
fiaddl
clc
cli
jo
xchg
sbb
cmp
or
xchg
mov
lods
cmp
jmp
scas
ljmp
inc
mov
add
or
bound
les
pop
adc
test
cld
xchg
and
into
push
add
or
cs
add
mov
pop
lahf
aad
xchg
jg
stos
pop
aaa
jmp
xchg
mov
test
mov
adc
push
cmp
std
dec
jl
add
or
jns
or
mov
fmull
cs
addb
das
pop
xchg
loope
movsb
les
jno
cmp
push
sahf
sarb
sahf
sbbl
cld
into
cmc
mov
into
lcall
adc
outsl
mov
mov
scas
sti
inc
lahf
lcall
inc
add
lock
xchg
es
rorl
jmp
jge
xor
cli
ds
pop
loop
in
mov
movsl
mov
mov
add
mov
out
mov
dec
jbe
jp
out
inc
test
mov
add
movsb
test
push
in
cmp
xor
into
jne
cwtl
lods
sahf
adc
and
mov
jp
push
mov
add
lds
adc
cmp
pop
cld
loope
into
inc
add
lock
push
fnstsw
ja
ja
sbb
jl
leave
imul
mov
lods
aaa
adc
aam
mov
push
add
leave
push
fs
push
or
fdivrl
add
movsl
ss
inc
jge
jmp
mov
popf
fsubrp
pop
xchg
dec
test
movsb
dec
cmc
jl
sub
movsb
sqrtps
inc
add
add
sahf
push
or
and
clc
nop
dec
sub
pop
xchg
repnz
lret
push
in
ja
or
add
popa
adc
add
add
and
cltd
ret
aas
add
mov
mov
add
icebp
cltd
xchg
test
out
pop
mov
mov
mov
push
sub
mov
jp
add
cmpsb
xor
add
iret
in
insl
sbb
rcll
rolb
add
paddsb
pop
rolb
aad
add
cmp
adc
pusha
add
sbb
cld
dec
push
jecxz
add
adc
out
hlt
dec
stos
pop
jmp
enter
pop
insl
cld
enter
xor
daa
lock
sub
call
adc
pop
and
dec
int
inc
sbb
out
lods
cld
cmp
jp
gs
and
add
inc
add
mov
inc
mov
inc
add
add
dec
fs
or
pop
mov
testl
push
stc
lods
push
xchg
mov
jnp
fsubl
insl
sbb
sahf
dec
cmp
mov
push
sub
movb
sarb
add
aaa
push
and
notb
test
data16
xchg
xor
scas
pop
xchg
cmp
icebp
xlat
push
xchg
pop
mov
ret
push
in
mov
sbb
int3
add
faddl
aaa
xor
push
cmp
jnp
add
add
cmp
cmpsb
jbe
cmp
cwtl
cmpsl
cltd
xchg
push
cltd
mov
mov
xchg
xchg
pop
call
fucom
mov
insb
cli
mov
dec
scas
jne
add
push
lea
mov
inc
xchg
in
icebp
fildl
inc
add
inc
add
lock
mov
jnp
leave
push
add
es
xchg
and
cmpsb
and
or
xchg
sahf
xchg
pop
je
push
fwait
add
jne
lret
out
pop
or
xchg
in
dec
test
sub
test
pop
iret
std
int
hlt
cmc
ret
rcl
jo
vmptrst
mov
scas
xor
and
clc
clc
inc
add
scas
cmp
ljmp
js
pop
adc
aad
ret
out
jecxz
std
faddl
add
and
divl
arpl
popf
push
enter
data16
mov
inc
push
cmpsb
addb
xor
mov
add
insb
pop
or
fdiv
imulb
js
dec
fs
xor
std
dec
inc
cmpsb
dec
and
mov
movsl
fwait
push
lahf
sub
and
jb
add
ds
add
push
scas
cmpl
xchg
sub
pushf
push
fcmovne
aam
dec
arpl
mov
aad
add
incl
fiaddl
sbbl
jns
clc
fsubrl
mov
or
lahf
movsl
shlb
jge
jmp
test
cmp
ja
int3
imul
adc
sarb
int3
lods
fildll
push
cmpsb
jmp
add
std
scas
or
jnp
dec
dec
lods
imul
xchg
mov
pushf
dec
jge
inc
add
pop
add
scas
out
inc
add
sbb
arpl
fxch
jge
mov
movsl
push
add
jb
pop
jge
xchg
in
dec
insl
rolb
add
xchg
xor
cmp
cmp
sub
cwtl
rolb
mov
je
test
xchg
inc
clc
xor
rcl
lret
sub
add
jmp
clc
mov
xchg
repz
cli
outsl
sbb
out
xchg
jnp
cmp
mov
jnp
popw
insb
push
add
ja
rclb
cmp
mov
int3
or
add
scas
icebp
pop
push
imul
shll
std
push
cmp
add
cmc
cwtl
jg
mov
jns
dec
std
sbb
movsl
xchg
mov
cmc
jnp
lea
mov
mov
fisttpll
cld
inc
add
or
pusha
add
xchg
xchg
bound
movsb
inc
mov
lret
imull
push
mov
add
aam
sahf
lods
xchg
push
sbb
add
add
add
addb
cmpsl
xchg
inc
add
cmp
les
and
js
xchg
mov
cmp
dec
xchg
push
addl
pop
push
jecxz
mov
lcall
dec
addb
lods
icebp
and
psubusb
call
fildl
pop
push
push
adc
out
xchg
lods
aam
xchg
add
orl
insl
cmp
popf
push
mov
add
lock
pushf
lret
pop
fcomps
mov
mov
test
sub
inc
frstor
cmc
ficoms
out
lods
inc
adc
and
jmp
out
repz
call
add
rolb
adc
dec
jbe
call
pop
lock
push
push
in
xchg
movb
cmp
mov
or
mov
sub
mov
add
pop
ffree
fs
dec
and
dec
loop
add
pop
push
add
cli
ljmp
xchg
xchg
jecxz
mov
add
mov
lods
add
xchg
sub
adc
and
jno
addb
test
movsl
dec
popf
jp
outsb
aad
inc
add
add
jmp
out
daa
mov
cltd
ret
sbb
push
jo
sbb
fsubr
stos
and
roll
stc
cmp
loope
cmc
leave
ffree
or
icebp
cwtl
adc
cmpsl
push
js
out
push
out
data16
and
mov
nop
shl
mov
push
sbb
loope
nopl
inc
inc
mov
loope
push
movb
mov
ficoml
adc
adc
out
addb
lahf
shll
mov
iret
inc
add
and
xchg
arpl
aaa
xorl
mov
and
dec
jbe
or
jnp
loope
mov
ja
stos
mov
lret
adc
dec
fstpl
jne
jnp
js
pusha
add
or
mov
pop
or
mov
in
mov
enter
jmp
cmc
push
add
and
xchg
xor
xchg
cmp
push
xchg
insl
iret
jae
xchg
in
adc
fcmovbe
clc
lods
mov
scas
dec
pop
dec
cmp
and
nop
movsl
add
pop
push
inc
arpl
push
adc
and
cmp
sar
aam
jno
mov
sbb
mov
sub
dec
mov
pop
test
pushf
push
daa
inc
add
add
pop
fwait
je
cmp
push
imul
jns
jge
imul
shrb
stc
pop
jmp
outsb
daa
in
fucom
ret
xor
scas
cmpsl
sub
mulb
jmp
jl
scas
inc
jle
loope
jns
mov
pushf
add
sti
sub
push
popf
adc
cwtl
sbbl
outsl
in
rolb
rolb
inc
add
adc
test
push
fucomp
jmp
cmpl
add
sbb
rcr
nop
pop
mov
les
mov
jnp
rolb
inc
daa
pop
cmpsb
jp
jnp
add
arpl
mov
iret
pop
sbb
test
xchg
jo
fs
dec
into
lds
xor
push
dec
sbb
jge
scas
push
std
andl
iret
outsl
mov
add
mov
ljmp
push
jns
mov
push
sarb
js
mov
mov
push
dec
inc
add
cmp
pop
nop
push
add
ret
sub
test
dec
xchg
popf
cltd
jnp
cmp
add
mov
int3
pop
mov
stos
sub
xchg
cmp
into
jle
test
mov
ss
jle
xor
push
jnp
pusha
add
mov
cmp
add
movb
push
add
nop
out
sbb
add
dec
scas
gs
jae
xor
movsl
iret
cmp
lcall
xlat
fwait
stc
sbbl
sbb
inc
addl
pop
add
adc
sub
jg
outsb
sbb
in
ret
ret
add
pop
push
in
stos
loop
inc
add
popa
pop
pop
sahf
inc
add
jmp
xlat
scas
cltd
fsubs
leave
cwtl
shll
cmc
mov
xchg
mov
xlat
and
dec
test
adc
or
jmp
scas
mov
icebp
out
add
push
out
and
outsl
jmp
popf
push
std
and
and
dec
xchg
xlat
pop
dec
out
add
add
add
sbb
sbb
jp
pop
sbb
mov
add
dec
lret
and
sub
jns
scas
sub
inc
add
push
addb
rolb
iret
divb
fwait
xor
pop
not
xor
cmp
inc
and
jo
out
push
lret
mov
stos
jecxz
gs
add
scas
lds
into
cwtl
call
dec
adc
jp,pn
inc
movlps
inc
add
xor
in
push
push
insb
xor
fildl
ds
les
sub
push
cltd
enter
idivl
pop
mov
sub
arpl
ds
xor
xchg
stos
daa
imul
lret
mov
cmc
mov
sti
in
inc
add
mov
add
add
lahf
les
mov
push
push
sbb
sub
movb
mov
push
pop
out
cwtl
push
ficoms
pop
dec
pop
or
mulb
jbe
fidivrl
or
imul
xchg
inc
cwtl
gs
jmp
scas
and
add
es
add
dec
adc
xor
add
adc
jnp
push
mov
sbb
cltd
add
jle
cwtl
jb
arpl
mov
mov
es
add
pop
cmp
xor
inc
add
insl
pop
sbb
inc
fadd
push
add
add
daa
fcom
inc
jbe
mov
test
push
add
and
clc
notb
inc
push
std
and
mov
sub
sub
int3
pop
or
jne
mov
mov
inc
mov
mov
or
cmp
add
ja
fdivl
cmovbe
into
int
sahf
xor
add
add
das
addb
pop
and
bound
push
add
arpl
daa
hlt
lock
cli
ret
add
and
jae
les
sahf
into
adc
xchg
insb
out
adc
mov
cwtl
comiss
cmp
xchg
mov
movsb
ljmp
and
dec
mov
sub
sbb
sbb
bound
push
push
insl
jecxz
add
dec
shll
add
add
xchg
movl
out
add
ret
out
push
incl
add
sti
jbe
pop
repnz
inc
add
mov
es
orl
adc
aaa
rorl
std
add
notb
add
sbb
and
inc
push
and
gs
pop
mov
mov
pop
gs
call
popf
andl
mov
das
repnz
pop
mov
mov
pop
test
mov
add
cs
test
aaa
mov
test
loopne
adc
inc
inc
and
and
movsl
cs
jo
repz
push
xor
mov
cmp
jne
orl
or
cmp
xchg
mov
jae
push
mov
inc
xchg
test
push
mov
lods
pop
dec
sahf
popa
stos
push
xor
pop
stos
dec
and
cmp
ss
push
popf
adc
int
xchg
adc
adc
cmp
movb
jl
cmp
insb
bound
xchg
cmpsb
xor
push
xchg
rolb
imul
subl
lods
pop
movsb
ret
push
add
add
push
dec
negb
int
lcall
cmp
or
cmc
in
jge
push
push
sub
dec
adc
icebp
or
lods
mov
mov
mov
jnp
mov
jg
ds
xchg
aas
cmpsb
shlb
iret
pop
gs
enter
mov
add
xor
or
add
das
jae
scas
icebp
push
add
mov
mov
pop
out
pop
jmp
jne
inc
adc
mov
sub
lods
jg
lret
int
pop
adc
sbb
sub
jo
iret
mov
add
bound
sbb
add
and
pop
or
lret
push
sub
cmpsb
or
mov
hlt
rolb
adc
mov
adcl
pushf
in
mov
int
rcrl
mov
fucom
pop
mov
psubb
loopne
sbb
dec
xchg
fcoml
cmpsl
cli
enter
mov
fsts
add
push
add
mov
int3
roll
push
jg
dec
dec
adc
stc
pop
std
add
hlt
mov
out
imul
or
inc
mov
hlt
xor
sub
jmp
xor
push
insl
sub
mov
out
sbb
add
and
sub
cmp
pop
es
xchg
jg
mov
mov
adc
cwtl
mov
mov
ljmp
jp
cmc
mov
imulb
pop
aaa
inc
or
fisubs
addl
insb
stc
popf
lret
addr16
movl
mov
add
add
add
fisttpll
dec
mov
addr16
rorb
sub
in
rorb
fistl
sbb
add
and
push
stc
jae
fistps
mov
adc
ljmp
lods
mov
mov
sbb
mov
movsb
loope
add
lret
test
mov
dec
xchg
leave
lds
push
inc
arpl
inc
add
mov
mov
cli
movsl
push
pusha
add
mov
pop
mov
popa
std
push
addb
fwait
cwtl
fsubr
pusha
add
in
inc
add
inc
sub
xchg
adc
sub
addr16
imulb
add
add
cmp
insl
lcall
jp
hlt
loopne
mov
fiaddl
add
lds
stos
ja
sub
cli
loop
or
add
mov
mov
push
fs
sbb
ror
mov
xchg
push
insb
push
test
jne
int
xor
add
add
loope
mov
adc
and
rolb
loop
cmp
add
cmp
lock
cmp
add
movb
arpl
subl
xor
or
rorl
insl
add
or
fst
mov
or
push
lods
sub
in
pop
int
cmpl
in
movsb
or
mov
sub
jne
lcall
lret
lcall
das
sub
jbe
int
ret
mov
ja
cmp
aad
inc
pop
pop
add
es
add
inc
add
xchg
add
cmpsb
pop
mov
into
sub
dec
jge
or
lahf
mov
pop
addb
add
les
xlat
inc
fcomps
cwtl
push
jns
rcrl
or
loopne
out
add
lea
pusha
add
push
push
mov
add
add
ficoml
out
mov
iret
xchg
or
add
dec
adc
sub
push
popf
add
lds
aad
sbb
cmpsb
addb
mov
add
in
ds
mov
frstpm(287
in
add
add
std
mov
pop
dec
lods
cmp
add
cmp
cmp
mov
and
gs
js
enter
and
and
push
ret
and
add
rolb
push
add
orl
push
data16
or
add
ljmp
add
inc
xor
jmp
xor
jno
sbb
add
mov
mov
dec
mov
xchg
jge
dec
sysret
jbe
add
repz
shll
xchg
or
xlat
cmc
or
xchg
jae
lcall
sub
in
pusha
add
jge
mov
add
cmpsl
push
or
jb
scas
dec
cli
add
sub
add
push
fisttpl
lea
push
dec
test
xor
int
sbb
jg
es
pop
sub
lds
es
in
hlt
roll
bound
in
xchg
arpl
addb
aas
out
push
loopne
bound
dec
insl
cmp
scas
aaa
mov
adc
aas
mov
std
dec
pop
loop
add
ficomps
ret
mov
mov
das
loop
add
movsl
test
lods
mov
repz
pop
push
pop
cmpsb
cmpsl
xor
pop
mov
js
fidivrl
jge
and
pop
lds
mov
test
pusha
add
jmp
sub
es
imul
lahf
sarl
add
adc
out
inc
add
sub
fstl
add
jb
lahf
and
std
int3
out
stos
pop
pop
add
movsb
in
xchg
xlat
movswl
notl
out
xor
add
dec
loopne
ja
inc
mov
add
cmp
gs
insb
adc
add
movsb
fwait
and
mov
add
cmpsb
or
dec
pop
dec
in
cmpsl
ljmp
sbb
push
ss
stos
mov
mov
add
inc
aaa
cld
and
add
jmp
js
jl
add
mov
int
imull
cmc
xstore-rng
cmpsl
ret
in
xchg
lret
lret
jae
out
call
jno
and
in
popf
and
popa
and
sbb
aad
cld
xor
xor
add
lcall
inc
insb
push
adcl
and
insb
push
dec
mov
mov
add
rcrb
js
loop
fs
movsb
dec
dec
pop
movb
add
inc
xlat
movsl
bound
lea
or
lret
in
sbb
xchg
and
loop
add
cmp
imulb
fdivrs
rorl
push
and
xorl
add
add
and
lds
fnsave
mov
add
mov
loopne
cli
cs
jb
mov
movsl
mov
jnp
push
lds
je
icebp
cmp
cmp
fcoms
fs
rcr
rolb
mov
movsl
stos
cs
cmp
pop
testb
frstor
pop
arpl
dec
inc
add
les
shll
loope
or
add
and
lock
call
aad
add
push
sbb
into
stc
cmp
lods
mov
popa
and
and
jnp
lods
repnz
jp
insb
lds
mov
addb
and
inc
add
cmp
int
outsl
iret
or
fcoms
add
inc
bound
pop
sub
or
addps
scas
popa
repz
lock
fwait
in
xchg
add
sub
xchg
nop
push
xchg
stos
data16
sbb
lret
push
adc
pushf
pop
xlat
test
mov
mov
inc
add
pop
test
int3
divl
mov
cld
cmp
fidivrl
fsubl
adc
and
int
mov
sub
mov
daa
fwait
xchg
hlt
adc
add
xchg
add
fidivrs
push
addr16
mov
xchg
pop
or
sarb
in
dec
or
cld
jle
repnz
and
xchg
push
jle
out
iret
lea
sbb
lds
int
push
mov
sbb
add
sbb
xor
sbb
xchg
cmpsb
cmp
imul
dec
aam
out
dec
pop
dec
xchg
pop
pop
aaa
cmpsb
lods
mov
push
arpl
push
add
dec
ljmp
mov
mov
cmpsb
mov
mov
nop
jmp
add
mov
test
or
add
jb
add
mov
repz
mov
xchg
ret
add
stc
jb
add
clc
popa
leave
add
div
mov
ja
add
loopne
add
sub
xor
nop
jmp
add
add
add
mov
stc
jb
lret
add
clc
int3
add
nop
jmp
add
jle
clc
add
loope
shrb
jge
inc
add
xchg
push
and
pop
mov
stc
jb
jle
loop
out
inc
or
pop
and
jb
add
add
add
mov
stc
jb
add
lret
imul
stc
jb
les
popl
add
or
orb
add
jle
xor
scas
lret
cmp
stc
jb
adc
js
jns
stc
jb
clc
mov
cld
les
rep
stc
jb
popa
add
mov
notb
mov
stc
jb
in
add
sub
stc
jb
push
filds
das
fistps
mov
stc
jb
add
add
xor
stc
call
stc
jb
add
addb
stos
nop
jmp
popl
add
fbstp
cld
add
subl
add
and
stc
jb
in
add
push
stc
jb
mov
add
ret
cwtl
test
nop
jmp
add
add
dec
rep
nop
jmp
ffreep
popa
sub
and
xchg
push
push
mov
xchg
ret
add
xchg
stos
popa
nop
jmp
leave
add
adc
lret
mov
xchg
ret
add
idivb
inc
jp
nop
jmp
jle
push
sahf
insb
call
stc
jb
push
lret
lahf
xor
sbb
test
push
add
stc
jb
sub
out
mov
stc
jb
add
les
sahf
xor
addb
lea
stc
jb
add
add
add
add
jb
xchg
les
pop
in
cs
stc
jb
pop
add
pop
push
push
mov
nop
jmp
and
add
add
mov
inc
mov
mov
xchg
ret
add
xchg
pop
push
push
mov
xchg
ret
add
cmpsb
jle
add
mov
push
add
add
ret
movb
add
mov
stc
jb
add
or
add
in
aaa
jnp
popa
add
mov
xchg
ret
add
cwtl
dec
stos
stc
jb
xor
add
and
add
push
stc
jb
popa
add
negb
push
push
mov
xchg
ret
cmpsb
jle
adc
push
in
add
shl
cmpsb
out
inc
stc
jb
add
fbld
les
sub
test
and
add
jb
add
and
push
mov
xchg
ret
add
cld
push
push
mov
xchg
ret
xor
jae
jmp
nop
jmp
add
leave
sbb
pop
dec
stc
jb
add
popa
add
add
add
cmp
jb
and
pop
pop
sub
call
stc
jb
add
lret
xchg
add
out
add
add
add
imul
stc
jb
mov
out
xor
mov
add
add
jb
push
add
sbbb
push
push
testb
xlat
dec
mov
stc
jb
add
sub
subb
add
into
mov
stc
jb
add
add
jne
stc
jb
add
push
add
out
xor
nop
jmp
filds
add
adc
les
ja
jmp
push
mov
xchg
ret
fistps
add
mov
stc
jb
sahf
add
add
add
incl
nop
jmp
add
push
add
cmp
stc
jb
mov
idivb
push
sbb
push
inc
add
add
pop
add
add
nop
jmp
lret
jle
les
add
adc
xor
stc
jb
iret
cwtl
leave
add
add
add
cmp
sbbb
add
add
filds
js
nop
jmp
add
and
add
xor
mov
push
stc
jb
add
in
subl
nop
jmp
popl
add
cwtl
cmpsb
dec
mov
stc
jb
add
adc
fs
movsl
stc
jb
add
movb
push
rorb
adc
sbbb
add
mov
push
stc
jb
add
add
add
add
nop
jmp
add
fisttps
pop
shr
stc
jb
popa
add
add
sub
stc
jb
add
and
push
iret
xor
add
sbb
mov
fildll
xor
int3
add
stc
jb
add
add
add
idivl
adc
add
xor
filds
add
cmp
stc
jb
das
les
add
incl
xchg
ret
add
xor
lea
add
jb
sub
mov
adc
jmp
add
add
and
mov
add
dec
nop
jmp
add
add
out
sahf
push
dec
and
push
mov
xchg
ret
add
nop
jmp
adc
cmpsb
and
out
add
push
mov
xchg
ret
add
divb
cmpw
stc
jb
add
jmp
stc
jb
and
into
mov
stc
jb
add
and
les
int3
pop
push
mov
xchg
ret
stos
add
adc
dec
inc
stc
jb
add
add
leave
adc
add
jb
add
xor
mov
xchg
ret
add
pop
push
adc
stc
jb
iret
add
iret
and
dec
nop
jmp
add
mov
stos
cmp
repz
jb
les
add
mov
stc
jb
popa
add
dec
push
mov
xchg
ret
adc
clc
mov
nop
jmp
add
add
mul
adc
popa
stc
jb
pop
mov
out
pop
add
outsl
and
push
mov
xchg
ret
leave
add
iret
pop
push
mov
xchg
ret
add
ja
add
mov
mov
nop
jmp
add
cmpsb
add
xor
daa
jno
add
stc
jb
pop
pop
pop
cmpsb
jle
iret
popa
stc
jb
add
cwtl
push
add
mov
add
das
push
clc
testb
push
pop
or
dec
sub
jb
add
add
xor
stos
mov
stc
jb
add
bnd
mov
call
add
jle
cwtl
sub
xor
jb
lahf
les
sbb
in
add
into
add
mov
add
push
add
stc
jb
das
and
mov
jne
stc
jb
popa
add
xchg
xor
stc
jb
out
add
add
ret
stc
jb
xchg
add
daa
ret
sti
xchg
stc
jb
add
add
pop
in
mov
mov
je
inc
add
add
add
jo
add
scas
jle
scas
push
fildl
loopne
imul
jb
xor
mov
popa
ja
mov
pop
jmp
and
mov
and
mov
inc
add
adc
jne
stc
jb
add
jle
add
dec
push
push
mov
xchg
ret
add
xchg
xor
stc
jb
leave
add
add
test
inc
adc
jb
sbb
loopne
add
ror
push
mov
xchg
ret
add
xchg
or
add
add
add
add
stos
mov
stc
jb
testb
popf
add
stc
jb
ror
fists
jmp
and
add
add
scas
sahf
roll
xchg
decl
test
or
add
jb
add
stc
jb
add
lahf
add
popa
sbb
hlt
inc
add
and
xor
pop
pop
stc
jb
mov
add
les
mov
stc
jb
mov
jle
add
sub
jb
xor
add
out
add
add
inc
sub
stc
jb
jle
add
inc
mov
sar
sbb
pushl
push
mov
or
stc
jb
add
lret
add
add
push
mov
xchg
ret
sbb
xchg
pop
xchg
stc
jb
add
add
stos
mov
nop
jmp
sbb
add
add
stc
jb
add
cmc
push
movb
xchg
ret
add
outsb
dec
fs
jb
add
les
xchg
fimull
and
add
xor
add
jle
cmc
xchg
jnp
jge
stc
jb
popa
add
and
mov
fldl
push
repz
add
add
stc
jb
add
lret
out
jle
pop
nop
jmp
add
sbb
add
pop
push
mov
xchg
ret
cmpsb
add
add
cmc
add
xorb
add
mov
js
jb
fistl
add
js
stc
jb
add
add
dec
push
stc
jb
add
out
das
or
ret
stc
jb
popl
idiv
add
add
mov
nop
jmp
mov
add
push
nop
jmp
add
fildl
add
mov
xchg
ret
les
dec
pop
push
mov
xchg
ret
mov
add
fmuls
cs
add
add
int
movsb
nop
jmp
mov
loopne
cmpsb
add
les
push
mov
xchg
ret
add
lods
stc
jb
add
add
add
mov
adcb
add
popa
and
fldenv
mov
xchg
ret
loopne
mov
adc
push
mov
xchg
ret
add
mov
incb
add
and
xlat
add
movmskps
jb
add
xor
add
leave
add
call
incl
mov
das
fcmovnb
xchg
add
test
push
mov
xchg
ret
iret
add
xchg
fmuls
test
sbb
add
add
xchg
adc
and
nop
jmp
sbb
push
sub
stc
jb
add
add
cmpsb
loopne
add
jecxz
aam
mov
add
jb
xlat
popa
add
scas
adc
pop
filds
movb
scas
jne
stc
jb
add
or
stc
jb
add
mov
fwait
pop
push
mov
xchg
ret
add
sahf
add
aaa
cmpl
fdivr
call
les
add
popa
add
stc
jb
roll
in
cmpsb
add
cmp
filds
xchg
ret
add
push
xchg
and
push
nop
jmp
add
jle
cmpsb
lahf
notb
enter
xor
add
stc
jb
jle
push
call
stc
jb
out
add
xor
nop
jmp
cmpsb
sub
pop
sahf
fildl
loope
push
stc
jb
add
add
leave
and
add
movzwl
stc
jb
cmpsb
add
repz
jb
push
push
das
add
add
stc
jb
pop
iret
xor
dec
or
mov
xchg
ret
out
mov
add
stos
call
and
push
and
add
iret
out
add
add
adc
dec
nop
jmp
add
add
add
xor
stc
jb
add
pop
filds
add
ja
repnz
push
stc
jb
popa
jle
add
push
push
mov
xchg
ret
add
add
rclb
icebp
pop
mov
stc
jb
add
sahf
mov
loopne
testb
nop
jmp
popa
adc
das
pop
call
nop
jmp
das
add
rolb
mov
in
add
jbe
xchg
inc
rolb
add
andb
push
add
add
cmpl
cwtl
hlt
lcall
xchg
xor
sti
add
nop
jmp
add
push
push
mov
mov
push
push
mov
xchg
ret
clc
add
and
mov
xchg
ret
add
add
mov
stc
jb
add
adc
test
nop
jmp
add
add
jmp
stc
jb
xlat
add
stc
jb
jle
add
add
aas
mov
nop
jmp
rcl
add
iret
out
sahf
lea
stc
jb
add
add
rolb
mov
sbb
dec
clc
jmp
cld
add
add
mov
jb
pop
stos
pop
xlat
add
push
push
push
or
add
add
jle
add
sbb
jg
stc
jb
iret
add
add
cmp
nop
jmp
clc
in
add
jnp
push
mov
xchg
ret
xor
jle
decb
xorb
pushl
pop
jno
and
stc
jb
cmpsb
stos
or
jle
pop
shr
stc
jb
add
loop
pop
stc
jb
or
stos
lret
add
push
push
ret
popa
mov
ret
add
add
push
lahf
add
add
and
out
lea
stc
jb
sahf
add
jmp
add
orb
lahf
sbb
mov
add
das
cld
add
iret
add
fists
jb
add
fildl
filds
and
outsb
jmp
nop
jmp
add
add
loop
nop
jmp
xor
add
add
leave
mov
stc
jb
push
add
xlat
iret
xchg
push
stc
jb
add
add
push
das
xor
subl
and
jb
add
add
popa
add
pusha
stc
jb
mov
push
push
add
pop
mov
add
stc
jb
adc
mov
mov
push
mov
xchg
ret
out
add
jns
enter
push
add
lret
shr
nop
jmp
add
add
sub
jg
stc
jb
add
add
add
ss
jb
add
add
in
mov
stc
jb
add
test
jb
mov
inc
add
add
add
das
jne
nop
jmp
adc
add
mov
sti
stc
jb
add
add
movb
out
pop
push
mov
xchg
ret
out
cmpsb
scas
lret
cmpsb
cmp
mov
inc
add
or
arpl
mov
stc
jb
adc
add
stos
push
push
mov
xchg
ret
add
mov
add
add
add
rclb
pop
filds
xchg
ret
lret
sub
imul
pop
add
add
loopne
or
mov
xchg
ret
add
cwtl
rolb
test
jb
add
xchg
bound
jle
int
pop
jae
jmp
add
pop
add
push
stc
jb
add
cmpsb
mov
add
insl
adc
add
add
add
dec
sub
repz
add
cmpsb
add
pop
jne
stc
jb
push
add
faddl
clc
inc
pop
push
fildl
add
mov
stc
jb
iret
push
inc
add
add
stc
jb
add
rolb
push
mov
stc
jb
add
inc
ret
pop
mov
stc
jb
lret
and
leave
add
adc
clc
stc
jb
add
add
mov
push
data16
sub
stc
jb
cmpsb
add
mov
fcoms
add
add
sahf
jle
and
cmp
nop
jmp
mov
popa
add
stos
and
add
or
add
add
add
scas
add
loopne
std
lea
nop
jmp
stos
add
add
pop
notb
lea
stc
jb
push
and
add
add
je
stc
jb
add
sub
mov
push
add
and
add
add
adcb
add
mov
out
add
add
add
xor
add
call
nop
jmp
add
clc
add
cmp
mov
xchg
ret
popa
roll
popa
add
add
and
sbb
pop
add
in
mov
nop
jmp
add
jle
je
insb
push
push
mov
xchg
ret
cwtl
and
push
xor
popl
stc
jb
or
movzwl
stc
jb
jle
xchg
add
out
mov
push
mov
xchg
ret
in
or
call
stc
jb
push
jle
push
xchg
mov
jb
add
and
pop
push
mov
xchg
ret
push
mov
xor
fs
mov
stc
jb
pop
add
sub
das
mov
stc
jb
sbb
add
add
aad
icebp
inc
add
add
dec
nop
jmp
sub
pop
cld
xor
movsb
repz
xchg
xchg
ljmp
sti
jmp
add
jbe
push
dec
push
push
mov
xchg
ret
add
add
stc
jb
les
out
add
lahf
lea
nop
jmp
rorb
add
add
cmp
jb
add
in
mov
out
add
lahf
mov
stc
jb
add
test
add
add
stc
jb
mov
xor
dec
cmp
jb
add
flds
add
and
add
mov
push
mov
xchg
ret
stos
cwtl
mov
and
xor
add
stc
jb
cld
add
pop
cmc
inc
add
and
xlat
sahf
push
add
push
stc
jb
add
add
inc
das
je
stc
jb
add
test
cmp
sar
jb
add
or
add
xor
push
mov
xchg
ret
movb
add
movsb
inc
mov
mov
xchg
ret
add
add
out
dec
mov
push
mov
xchg
ret
cmpsb
push
xchg
aaa
movb
in
dec
push
push
mov
xchg
ret
clc
add
add
pop
push
stc
jb
clc
jle
push
add
mov
push
mov
xchg
ret
push
add
xchg
cmpl
add
add
xor
add
add
stc
jb
xor
push
add
jmp
xlat
mov
xor
add
xorb
add
sub
mov
stc
jb
cmpsb
mov
add
and
add
jb
out
sub
popa
stc
mov
stc
jb
testb
add
stc
jb
and
add
add
mov
mov
xchg
ret
cwtl
shl
in
enter
add
nop
jmp
add
add
jle
add
stc
jb
add
add
and
push
cwtl
rep
stc
jb
adc
add
add
mov
stc
jb
add
cmp
add
jb
add
add
add
stc
jb
add
xor
add
add
stc
jb
add
add
push
stc
jb
roll
add
add
push
mov
xchg
ret
cwtl
add
xor
push
mov
test
nop
jmp
popa
add
add
hlt
mov
push
push
mov
xchg
ret
and
roll
pop
shrl
loopne
stc
jb
cmpsb
and
add
sbbb
incl
add
add
add
cmc
arpl
dec
nop
jmp
add
add
rorl
je
stc
jb
add
mov
xchg
ret
sub
inc
add
gs
imul
inc
mov
add
mov
shl
inc
add
cmpsb
lahf
mov
jb
add
add
xor
and
mov
movzwl
stc
jb
add
mov
gs
jb
add
jne
nop
jmp
cmpsb
iret
scas
and
stos
aad
mov
stc
jb
add
movb
das
xchg
stc
jb
push
add
add
decl
mov
sub
or
inc
add
add
test
inc
stc
jb
lahf
roll
xchg
jmp
stc
jb
add
push
add
add
faddl
add
add
das
add
pop
sbb
js
clc
nop
jmp
add
xor
add
lods
push
mov
xchg
ret
add
add
add
mov
xchg
ret
lahf
add
add
mov
maskmovq
testl
nop
jmp
add
and
stc
jb
add
add
add
dec
mov
stc
jb
add
mov
xchg
ret
adc
pop
cmpsb
add
ret
add
pop
jl
stc
jb
add
jle
dec
push
push
mov
xchg
ret
add
mov
adc
inc
add
dec
stc
jb
add
leave
push
add
dec
add
stc
jb
mov
add
popf
call
stc
jb
clc
push
and
pop
add
stc
jb
add
add
nop
jmp
filds
sub
xchg
cmp
outsl
incl
add
and
xor
movb
xor
add
stc
jb
and
pop
xor
nop
jmp
jle
adc
xchg
xlat
arpl
xchg
test
mov
xchg
ret
in
lret
divb
jge
sbb
jb
das
push
xchg
add
inc
add
jmp
stc
jb
add
popa
cwtl
xchg
mov
in
rolb
fiadds
rolb
add
or
shlb
loop
mov
nop
jmp
add
add
add
xor
outsl
es
nop
jmp
add
mov
in
mov
jb
xor
add
rolb
xchg
cmpsl
push
rorl
add
add
jb
add
out
add
nop
jmp
add
add
pop
stc
jb
add
iret
add
add
in
shl
nop
jmp
xor
xor
add
fisttps
jbe
xor
nop
jmp
rolb
xor
or
stc
jb
add
add
rcr
movswl
stc
jb
xor
add
mov
lock
call
jmp
add
negb
nop
jmp
add
add
in
add
add
nop
jmp
rclb
add
jp
test
stc
call
call
jle
sbb
test
add
nop
jmp
add
add
add
push
mov
xchg
ret
add
add
stos
add
nop
jmp
xchg
add
or
jmp
fildl
add
add
xor
cld
pop
mov
stc
jb
mov
and
stc
jb
add
mov
stc
jb
add
roll
add
shl
lcall
add
add
idiv
adc
nop
jmp
add
add
popa
push
out
add
stc
jb
out
push
mov
jmp
mov
add
rolb
jg
rclb
icebp
inc
add
sub
add
push
stc
jb
sub
add
leave
stc
jb
and
xchg
add
jb
sbb
pop
and
add
inc
stc
jb
xor
add
cld
add
stc
jb
xor
mov
push
popl
bound
movsb
jmp
test
jb
cmpsb
add
in
add
stc
jb
add
icebp
addr16
lret
add
clc
icebp
inc
add
mov
inc
mov
sub
add
xor
and
jle
add
mov
mov
push
mov
xchg
ret
clc
push
add
push
mov
add
add
add
add
add
jb
add
add
adc
dec
push
stc
jb
xchg
iret
add
add
add
push
mov
xchg
ret
sbb
fcmovnu
iret
jb
nop
jmp
add
mov
xchg
call
xor
out
pop
stc
jb
add
add
add
add
cmp
add
nop
jmp
add
xor
ds
stc
jb
add
add
fisttps
xchg
mov
je
sub
and
and
add
mov
push
mov
xchg
ret
add
pop
cmp
jb
mov
add
jne
stc
jb
cld
mov
movb
push
stc
jb
out
iret
scas
add
sbb
dec
cmp
jb
scas
add
mov
jle
add
mov
stc
jb
add
add
add
addb
push
mov
add
jp
add
and
iret
sub
mov
sub
stc
jb
cld
cld
add
add
add
pop
stc
jb
push
add
add
shll
fidivrl
stc
jb
add
add
stc
jb
add
mov
in
incl
add
stos
rolb
cmpsb
push
adc
andb
xchg
add
sub
jb
add
add
push
mov
xchg
ret
xor
add
outsb
jecxz
add
rolb
cld
shl
adc
call
stc
jb
add
call
stc
jb
add
add
sti
stc
jb
rcr
add
push
stc
jb
add
les
stc
jb
sub
fisubs
popa
add
jb
out
add
and
lcall
cmc
call
add
mov
iret
fisttpll
mov
sub
ret
add
and
mov
stc
jb
lahf
movb
push
dec
call
stc
jb
les
cmpsb
cmp
xor
stc
jb
add
jne
nop
jmp
fbstp
in
jns
pop
adc
leave
out
inc
add
add
xchg
pop
mov
stc
jb
iret
iret
mov
jg
icebp
nop
jmp
iret
pop
add
shrl
je
js
mov
xchg
ret
add
lds
add
jmp
les
add
add
add
sbb
add
adc
jmp
out
add
add
addl
dec
stc
jb
add
xor
scas
mov
nop
jmp
stos
iret
add
inc
add
mov
stc
jb
push
add
filds
xchg
insl
push
stc
jb
xor
add
fdivs
rclb
call
and
xchg
add
js
and
nop
jmp
popa
lahf
xor
push
xchg
pop
mov
stc
jb
add
xor
add
add
push
mov
xchg
ret
add
call
stc
jb
add
decl
push
mov
xchg
ret
add
in
movzwl
stc
jb
add
add
add
mov
stc
jb
xor
push
jle
xor
mov
stc
jb
add
add
add
int
stc
jb
xchg
add
push
mov
xchg
ret
fildl
add
cmpsb
enter
xor
add
stc
jb
add
idivb
mov
adc
jb
mov
stc
pop
push
mov
xchg
ret
cmpsb
add
testb
aam
mov
jne
nop
jmp
mov
rolb
add
push
fwait
test
nop
jmp
sub
in
pop
nop
jmp
xor
das
cmpsb
cwtl
cmpsb
add
mov
stc
jb
add
add
and
push
mov
xchg
ret
add
add
mov
stc
jb
add
add
rcrb
stc
jb
lahf
in
add
push
stc
jb
cmpsb
and
add
add
stc
jb
push
sub
push
call
stc
jb
mov
cmp
nop
jmp
xor
add
adc
jb
filds
rolb
les
add
movb
jmp
jle
add
clc
xor
mov
xchg
ret
add
push
add
idiv
jb
xor
and
out
les
push
jl
repz
mov
xchg
ret
add
add
inc
add
lret
and
add
nop
jmp
add
push
stc
jb
and
add
add
sbb
mov
xchg
ret
and
sbb
ret
mov
push
mov
xchg
ret
add
add
jb
les
push
add
add
add
mov
xchg
ret
add
push
stc
jb
push
add
add
jp
push
mov
xchg
ret
push
das
loopne
xchg
dec
sub
nop
jmp
add
leave
add
icebp
xchg
fcompl
jb
add
add
add
mov
adc
jb
sbb
add
aad
out
hlt
rorl
jb
in
das
add
cld
xchg
sbb
jmp
add
add
add
cmp
addb
clc
popa
add
add
dec
je
stc
jb
fistpl
dec
push
mov
xchg
ret
add
xlat
add
cmp
enter
sbb
incl
add
aaa
pusha
add
add
stc
jb
sub
add
jb
add
loopne
rolb
daa
mov
test
stc
jb
lahf
testb
add
push
mov
xchg
ret
cmpsb
add
add
js
inc
add
pop
add
push
push
mov
xchg
ret
testb
mov
jns
stc
jb
cmpsb
jle
add
or
add
iret
mov
stc
jb
les
rolb
push
inc
and
inc
call
inc
add
das
mov
mov
lcall
and
xor
stc
jb
sub
fists
jmp
sbb
cmpsb
out
add
sahf
stc
add
push
mov
xchg
ret
add
push
push
stc
jb
add
xchg
add
add
fsubrp
enter
stc
jb
cld
pop
adc
add
jb
add
and
fisttpl
add
incl
add
mov
jbe
nop
jmp
add
jge
leave
sub
jb
xor
fistps
xchg
add
and
nop
jmp
add
jle
clc
add
jp
rclb
test
inc
add
add
add
insb
stc
jb
das
popa
pop
sbb
mov
stc
jb
add
push
stc
jb
loopne
popl
iret
push
shrb
inc
add
push
nop
jmp
lret
add
iret
add
rolb
add
push
push
mov
xchg
ret
push
add
add
add
nop
jmp
les
add
adc
add
xlat
add
add
xchg
or
cmpb
stos
and
leave
fildll
mov
xchg
ret
popa
add
stc
jb
and
sahf
jle
xchg
jb
push
jb
cmpsb
add
add
mov
cli
xor
stc
jb
add
lahf
add
add
xor
lret
add
stc
jb
add
stc
jb
add
push
add
fsubrs
data16
stc
jb
add
or
and
sub
stos
stc
jb
sub
jle
push
int3
mov
stc
jb
sbb
add
testb
sub
ret
add
jl
arpl
stc
jb
cmpsb
add
lahf
ret
stc
jb
add
stos
xor
fbld
daa
bound
in
mov
stc
jb
sbb
fcmovne
push
sahf
icebp
dec
xor
stc
jb
and
add
add
lahf
pop
stc
jb
add
add
add
add
xor
stc
jb
add
and
stc
jb
add
add
jg
jmp
jb
add
loopne
lret
add
push
mov
stc
jb
popa
add
add
mov
mov
stc
jb
lahf
popl
mov
add
movzwl
nop
jmp
clc
les
add
adc
jb
add
add
mov
jmp
nop
jmp
scas
pop
xor
add
jnp
call
fildll
xchg
add
stc
jb
add
add
in
pop
nop
jmp
add
mov
das
jle
pusha
add
adcb
pushl
push
xchg
push
mov
lock
call
jle
clc
in
add
stc
jb
movb
mov
fists
dec
cmp
nop
jmp
add
push
or
sbb
mov
xchg
ret
xor
add
push
lret
cmpl
nop
jmp
add
add
add
daa
and
scas
call
nop
jmp
mov
add
popa
inc
mov
clc
nop
jmp
add
push
mov
dec
pushl
stc
jb
cwtl
pop
mov
nop
jmp
adc
add
rcrb
add
adc
idiv
lcall
add
add
mov
push
mov
xchg
ret
add
fcmovnu
rep
stc
jb
push
add
shlb
in
je
sbb
int3
dec
mov
out
cmp
jb
mov
xchg
movb
push
mov
push
push
mov
xchg
ret
pop
xchg
cmpsb
or
adc
cmpsb
iret
pop
stc
jb
iret
add
add
add
push
mov
xchg
ret
add
xlat
cmp
test
repz
stc
jb
das
les
add
stc
jb
sub
movb
push
stc
jb
add
add
add
mov
popf
stc
jb
xor
xchg
nop
jmp
testb
fistpll
add
nop
jmp
das
les
add
cld
popa
pop
fwait
and
push
mov
xchg
ret
fildl
out
and
push
mov
xchg
ret
add
jmp
add
iret
filds
gs
movswl
stc
jb
add
mov
nop
jmp
and
add
xchg
add
sbb
mov
stc
jb
add
stos
adc
push
mov
inc
xchg
nop
push
pop
stc
jb
add
add
divb
add
jmp
xchg
add
xchg
cmpsb
and
push
hlt
inc
add
xchg
stc
jb
adc
add
fldt
jb
movb
add
adc
and
mov
xchg
ret
rcll
sub
jb
add
ljmp
stc
jb
xor
das
add
push
mov
add
pop
add
pop
add
or
add
aam
mov
and
popf
mov
je
pusha
add
mov
push
add
push
scas
pusha
add
add
sbb
movb
fsub
ret
add
data16
cmp
fwait
outsb
in
push
dec
outsl
jne
jg
sbb
add
push
mov
andl
xlat
shll
or
popa
cli
dec
arpl
jae
cmp
cltd
adc
mov
ljmp
mov
lods
enter
pushl
aad
mov
cmp
jl
push
inc
add
inc
out
mov
sub
loopne
fcoml
imul
cld
arpl
jg
test
jl
aas
and
xor
cli
cld
xor
movsl
mov
mov
mov
add
mov
add
mov
adc
inc
add
pusha
add
addr16
movsb
ret
dec
push
adc
add
inc
cmp
jne
pop
unpckhps
add
add
and
mov
pop
or
out
repnz
xchg
scas
mov
cmpsl
xor
xchg
cltd
mov
mov
in
pop
sub
add
adc
sub
sub
enter
mov
or
insb
insl
sub
adc
daa
sbb
mov
daa
push
aaa
sub
dec
rolb
fisttps
add
mov
pop
rolb
das
push
test
xchg
mov
and
les
mov
cltd
fstl
cmp
mov
sub
repnz
rcrl
fstl
aaa
mov
mov
pop
push
out
sub
xlat
js
int
js
push
out
sbb
je
sub
inc
add
jle
scas
xrelease
clc
cltd
insl
imul
mov
ret
ds
xchg
mov
addl
jmp
pmulhuw
movb
pop
pop
xchg
sub
aam
jb
cli
inc
ds
jns
jmp
xchg
call
out
xchg
rcll
aad
aaa
mov
cmc
roll
ljmp
xor
orl
add
jno
jge
les
or
ds
jns
xor
and
xor
pop
mov
add
loopne,pn
mov
and
mov
jb
add
xor
add
negl
pop
cmp
mov
ja
fbstp
je
dec
jb
lcall
push
jbe
jbe
add
repnz
imul
lods
mov
std
mov
in
jne
dec
lret
add
cmpsl
jne
dec
rolb
pop
push
ja
je
mov
add
ds
or
sbb
mov
add
sahf
inc
add
inc
jno
add
stos
mov
fistps
ja
inc
add
push
sahf
fisubrs
cmc
jo,pt
nop
test
add
getsec
outsb
ljmp
repnz
jnp
push
js
jbe
xchg
in
out
loop
xor
addr16
insb
je
mov
mov
inc
add
fistl
pusha
add
sbb
and
or
add
ljmp
ret
push
aad
mov
popa
leave
xor
add
add
xchg
jl
push
mov
mov
lret
aad
addl
cmp
jp
xor
sysenter
sbb
add
jecxz
mov
inc
add
icebp
addb
addr16
sbb
dec
sub
dec
outsb
push
cmp
pop
roll
xor
js
add
arpl
cmp
push
inc
xchg
loope
pop
push
nop
in
nopl
into
in
clc
jl
fdivl
enter
lcall
out
fisubrs
pop
xor
or
dec
call
fucompp
lret
sbb
add
mov
test
add
mov
pushf
pop
aad
js
fs
sub
push
lret
sbb
sbb
add
into
shll
add
insb
dec
dec
cmpsb
outsl
mov
clc
jb
jmp
mov
or
cs
mov
ss
lock
xor
xor
mov
fbld
add
and
xor
lods
cmp
imul
or
mov
lret
inc
mov
inc
inc
add
popl
sbb
sub
loop
les
popa
pop
add
cli
or
sarb
inc
push
divb
test
pusha
add
stos
icebp
mov
es
lock
fiadds
add
shrl
cwtl
mov
daa
lods
fstps
aas
arpl
cli
maxps
mov
jmp
pop
inc
jb
inc
add
cmp
push
in
popf
mov
cmp
jo
cld
and
sub
pop
pop
xchg
xor
enter
and
push
mov
addb
pushf
cli
inc
pop
roll
fisttpl
js
cmc
loopne
insl
push
jae
sub
lods
sub
pop
mov
sub
inc
pop
mov
jecxz
fwait
popa
push
and
jne
add
sub
inc
add
fidivrs
aam
jb
stos
sbb
lods
sub
inc
inc
add
push
dec
or
les
lds
call
sbb
lods
setns
lock
out
ljmp
sbb
jecxz
inc
movsb
test
mov
cmc
ret
stos
movsl
rorl
add
enter
cmc
mov
mov
test
pop
les
fnstenv
cmp
xchg
mov
scas
inc
sub
xchg
jns
xchg
jmp
jno
mov
addb
fidivrs
xchg
faddl
rcr
test
add
inc
add
mov
cmp
fld
and
push
and
lret
xor
jle
jb
std
xchg
mov
fstpt
cmp
sub
data16
ret
xchg
mov
or
push
add
shl
adc
xor
sbb
add
cmp
fiadds
arpl
rep
xor
mov
das
popf
lds
add
mov
adc
sbb
cmpsb
jo
idiv
arpl
sahf
insb
test
add
mov
loopne
or
or
movsb
lods
inc
add
xchg
ljmp
sub
in
and
stos
incb
mov
add
out
jp
fistps
xor
fnstcw
inc
push
ja
addb
cmp
js
cmp
sub
lret
loope
jl
pop
into
mov
cmp
pop
ret
xchg
fildl
add
sti
fwait
xlat
cmp
in
daa
lret
inc
add
cwtl
imul
call
mov
adc
jo
mov
je
bound
jp
inc
add
lret
mov
ds
ds
push
jnp
popa
pusha
add
push
faddl
add
adc
jmp
test
sbb
bound
std
sbb
sbb
push
and
int3
hlt
xlat
adc
addb
add
jp
movsl
gs
call
pop
test
mov
cmp
xchg
jo
mov
mov
push
ret
mov
cmp
hlt
mov
dec
mov
mov
and
sbb
add
test
mov
sub
inc
int
sub
inc
add
cmc
jg
xchg
sahf
push
pop
sbb
push
or
into
mov
fldl
add
fdivl
in
xchg
inc
add
bound
cmp
addb
js
mov
leave
xor
lea
jmp
pop
stos
or
outsl
xchg
sbb
jb
jbe
test
sti
sub
cltd
mov
sbb
je
add
mov
bound
rolb
cli
loopne
add
xor
add
fs
bound
hlt
scas
pop
jge
sbb
cmpsl
cmc
mov
xchg
cmp
fwait
push
add
dec
cmpsl
ret
jne
into
xchg
ret
ss
lea
pop
cmp
mov
add
jmp
pop
push
push
jecxz
stc
dec
insb
inc
and
xor
lock
cmpl
xor
xchg
shll
add
out
mov
mov
lcall
out
or
jns
mov
inc
je
dec
cmpsb
mov
popa
aad
or
stos
lahf
fwait
xchg
mov
pop
and
movsl
adc
xor
add
adc
out
jg
adc
push
xchg
push
add
mov
scas
imul
dec
sub
stos
and
pop
jecxz
xchg
sub
add
push
inc
add
test
shll
add
adc
insl
inc
mov
out
bound
xlat
lock
push
jns
mov
fcmovnbe
push
push
jp
rolb
shl
test
and
xchg
inc
ljmp
ror
ljmp
mov
cmovno
hlt
clc
andl
xchg
iret
sti
ret
es
rcrl
xchg
push
fcomp
pop
bound
mov
mov
add
mov
dec
arpl
mov
sti
mov
mov
or
mov
call
scas
xor
add
push
and
adc
loope
pop
mov
lahf
mov
add
jns
jb
outsl
push
pop
pop
push
and
mov
add
adc
cmp
inc
inc
pop
hlt
xor
jbe
jle,pt
aam
mov
pop
fnsave
add
inc
adc
and
push
adc
and
js
jmp
imul
add
ja
jle
adc
jl
cld
lret
in
add
dec
outsb
pop
jns
cld
mov
mov
mov
sahf
pushf
jg
ficoms
add
adc
cs
pop
insl
add
aad
mov
add
xchg
xchg
push
aad
mov
ret
sarl
fsin
pop
jmp
stos
ds
jbe
clc
cmpl
inc
add
sub
out
hlt
xchg
ja
int3
and
ja
mov
loop
lcall
add
test
js
test
dec
xlat
xchg
fcmovnb
mov
or
lret
cltd
rclw
add
add
jae
pop
imul
mov
inc
add
push
loop
mov
xchg
mov
adc
xor
add
pop
xlat
test
pop
mov
xchg
insb
stos
adc
adc
jne
sbb
arpl
add
sbb
rolb
dec
xchg
cmpsb
add
addb
jno
out
xlat
rol
cmp
jbe
lret
loope
rorl
and
fs
push
mov
aam
xchg
mov
pop
push
pop
lds
sbb
lcall
in
adc
mov
cmpsb
fsubrl
pusha
add
xchg
bound
imul
mov
scas
push
add
mov
or
push
adc
fbld
adc
and
and
push
dec
and
std
fcoml
ror
leave
mov
fisttpl
xor
movsb
mov
lods
pop
lret
add
inc
add
pop
insl
popf
cmp
mov
out
les
arpl
movsb
pusha
add
outsb
jmp
loopne
add
bound
repnz
cmp
lahf
jns
into
add
xchg
dec
dec
sub
inc
add
xchg
ret
clc
lcall
mov
push
inc
add
jbe
add
dec
addb
add
ficomps
sbb
popf
addr16
test
pop
jecxz
lret
or
mov
add
push
jp
inc
add
xchg
mov
jmp
repz
pop
jb
std
lret
sbb
dec
push
inc
add
adc
mov
js
add
or
mov
fsubrl
cld
nop
mov
mov
das
data16
mov
ja
sahf
iret
jecxz
mov
sub
xor
sub
add
cmc
xor
add
add
inc
add
push
mul
jmp
int3
inc
add
pop
sarb
mov
aad
leave
jnp
sbb
or
rolb
inc
add
aaa
or
aaa
scas
adc
fbld
inc
add
or
es
dec
outsl
xchg
jae
or
xchg
push
jb
add
ret
call
xor
inc
out
push
mov
pmaxsw
ret
pusha
add
in
add
cs
add
xor
cmpsb
jmp
xlat
and
cmc
dec
ficomps
pop
out
adc
fwait
and
fwait
sbb
push
in
cmp
pop
out
mov
mov
mov
dec
pop
pop
mov
out
jmp
push
pop
fsub
call
add
repnz
jge
add
adc
aaa
addr16
js
and
jge
add
mov
mov
sub
dec
sub
mov
sbb
pop
pop
pop
jle
mov
vsubsd
nop
mov
div
inc
stc
adc
or
add
fldt
hlt
inc
adc
dec
cmp
xchg
jno
hlt
mov
mov
imul
fistps
adc
mov
aad
add
mov
sti
xchg
mov
adc
jmp
push
out
aad
sbb
pop
stos
addb
cmc
pusha
add
mov
xchg
fsub
dec
sub
rolb
lods
dec
xor
mov
addb
addr16
add
xchg
gs
mov
mov
inc
add
adc
add
cmp
jge
add
notb
xchg
in
jmp
pop
dec
repz
add
xchg
xor
lock
loop
mov
jbe
inc
add
push
mov
lcall
out
mov
test
mov
mov
addb
add
or
inc
addb
aad
inc
add
fnstenv
or
shlb
jae
inc
shlb
sti
cmpsb
mov
or
cmp
mov
mov
movsb
xchg
sub
mov
xlat
negb
cmp
mov
xchg
hlt
pusha
add
pop
cmpsl
lds
in
add
and
dec
sbb
sbb
into
jns
mov
sub
cmp
lods
jne
pop
xor
movsl
loope
inc
add
add
add
testl
dec
je
or
jns
clc
std
nop
mov
cld
int
shrl
lret
inc
popf
enter
xor
dec
enter
add
sbb
dec
cmp
jo
or
push
add
push
cs
add
mov
mov
push
jne
cltd
call
jmp
inc
add
add
in
mov
add
mov
sarl
mov
add
outsl
test
xchg
fiaddl
sub
loop
mov
jg
sbb
xor
pushf
testl
pop
sbb
mov
adc
or
mov
jg
add
mov
add
enter
repz
clc
daa
xchg
enter
fcomip
das
in
add
rolb
mov
inc
push
sub
dec
jae
loop
add
sub
bswap
jge
add
js
mov
loopne
jmp
sub
cmp
cwtl
dec
fwait
bound
and
cmp
ja
mov
psubd
lock
xchg
lcall
addb
mov
mov
cmp
lds
push
rol
mov
into
inc
xchg
popa
pop
inc
aad
outsb
xchg
inc
add
outsb
in
mov
aam
cli
pushf
sub
inc
add
in
adc
sbb
mov
lea
jae
bound
leave
xor
add
data16
xchg
cmp
mov
push
add
inc
lahf
inc
add
add
adc
test
pop
popa
das
cli
mov
add
imul
incb
outsl
adc
sbb
aas
rcrl
pop
adc
push
mov
inc
stos
push
addb
and
or
out
addl
lahf
push
sub
push
xchg
into
mov
add
rclb
pop
jge
sti
xor
popa
inc
das
iret
or
pop
jp
xor
adc
add
iret
jbe
stc
ja
push
call
add
addb
xor
lahf
dec
cmp
cmp
jo
seta
stos
dec
movsb
xor
out
pop
add
mov
je
shlb
push
xor
add
add
popa
dec
adc
push
sbb
xor
xchg
xor
jo
sbb
out
lcall
jo
pushf
out
dec
jp
push
add
add
add
sub
cmp
add
and
mov
rolb
inc
add
lods
adc
add
push
add
cwtl
sbb
add
mov
pop
sub
xchg
jle
add
imul
test
mov
lea
xor
xchg
mov
adc
jle
imul
movsb
call
addb
push
pop
cmp
test
sbb
cmp
test
in
test
add
in
sbb
sbb
cmpsl
sti
mov
out
xor
adc
les
insb
pop
movsl
mov
dec
int
stos
mov
cmp
iret
jecxz
add
jmp
cmp
xor
rolb
sbb
subl
jle
dec
cmp
push
notb
jg
jno
ret
fstpt
or
lret
idivb
mov
into
jmp
lahf
movsb
pop
rcr
mov
test
lret
in
adc
imul
lock
or
jge
pop
push
adc
add
inc
pop
or
add
xchg
jns
or
push
sbb
mov
jecxz
repz
mov
in
outsb
out
fld
or
lods
sub
mov
mov
pop
mov
jl
add
stos
xchg
sub
mov
test
pop
pop
jmp
or
notb
cmp
test
dec
loope
stos
mov
mov
add
pop
jge
inc
pop
popa
and
mov
add
add
pop
loopne
adc
add
leave
xor
in
mov
mov
inc
add
dec
nop
aad
movsb
xchg
dec
imul
jmp
cmp
insl
cmp
mov
jnp
dec
call
adc
cmp
scas
jbe
push
xchg
and
popf
or
ret
xor
test
or
fcmovu
mov
jnp
add
pushf
pcmpeqd
lea
push
daa
cmp
xchg
xor
aam
lahf
rolb
popa
addr16
inc
mov
jns
jae
or
pop
mov
out
test
push
lcall
xchg
push
add
stos
adc
lds
cltd
insb
addb
adc
mov
movb
xchg
mov
inc
fdivrl
movsl
cwtl
scas
iret
sbb
push
rolb
daa
sub
ljmp
inc
mov
jl
into
adc
cmp
cli
sub
adcl
cld
mov
xor
jp
std
mov
add
negb
test
sbb
pop
lock
push
dec
stos
pop
outsl
pop
or
ss
cmc
aas
sahf
test
add
and
pushf
frstor
add
aam
add
mov
cwtl
nop
gs
cmp
inc
add
dec
xchg
in
call
ljmp
add
xor
sbb
pop
xchg
xchg
sbb
daa
pop
repnz
in
addl
int
fndisi(8087
xor
jae
or
push
sbb
bound
push
add
jmp
add
add
jbe
xlat
inc
add
add
add
aad
outsb
xor
add
pusha
add
mov
pop
add
popa
adc
pop
mov
mov
les
xchg
js
inc
add
std
xor
push
pusha
add
add
sbb
add
mov
leave
dec
std
and
xchg
test
push
in
loop
sbb
add
add
hlt
pop
dec
add
xchg
enter
aad
add
dec
xlat
popf
fwait
outsw
push
inc
int3
jp
lods
push
mov
add
adc
and
lea
fistl
mov
xchg
push
and
or
mov
push
sbb
fistpl
stos
jnp
sub
xchg
pop
ljmp
adc
leave
lahf
jecxz
push
mov
sub
ror
addb
mov
push
loope
pop
test
push
mov
enter
xor
jmp
sbb
sahf
push
addl
dec
jbe
sub
xor
es
ljmp
add
pop
aaa
mov
xor
in
mov
add
rolb
addb
sbb
inc
jns
mov
pop
or
iret
das
add
addb
arpl
aad
ja
loop
xor
jg
adc
rolb
jle
sub
int3
and
ds
add
mov
jl
jge
cmp
mov
movb
push
jge
ljmp
mov
pop
int3
cwtl
outsl
mov
xor
sahf
pop
push
add
out
sub
add
add
mov
sbb
inc
inc
add
out
test
add
pop
mov
sbb
ljmp
add
out
and
leave
arpl
add
jmp
test
sub
outsl
sbb
sbb
sub
addb
add
push
add
imul
xchg
adc
jae
rorl
push
adc
mov
xor
pop
or
les
jle
test
ret
mov
out
mov
das
addr16
in
push
pop
fmuls
repnz
push
bound
dec
fwait
sbb
mov
or
das
mov
add
stos
das
cmp
sbb
xor
movsb
hlt
mov
add
xor
add
iret
mov
sub
add
loope
movsb
or
push
jns
push
shrb
push
and
add
push
and
or
dec
jmp
add
aaa
push
add
lahf
iret
push
cmp
inc
dec
mov
push
or
out
sub
add
lcall
jl
add
mov
cli
jmp
addr16
jl
js
lea
or
popa
dec
adc
in
out
sub
sbb
icebp
and
mov
fwait
mov
jne
clc
mov
mov
stos
pop
adc
dec
fbld
inc
add
xor
sahf
xorl
mov
leave
jne
cmp
add
rcr
add
mov
jnp
scas
pop
dec
fidivs
scas
sbb
sarl
add
cmp
cs
xchg
xchg
and
pop
popf
fwait
mov
pop
lds
dec
jge
lret
adcl
jnp
xchg
in
shl
enter
push
shll
ds
aaa
and
sub
nop
push
rclb
jae
stos
es
mov
stos
mov
push
add
or
lret
imul
cmp
mov
cwtl
mov
mov
stos
data16
hlt
sub
inc
add
sarl
add
pop
outsb
imul
cmp
xor
adc
jns
adc
rorl
pop
ja
loopne
arpl
insl
or
mov
dec
sub
scas
enter
sbb
mov
movsb
mov
dec
sub
sub
lcall
outsl
xor
jmp
mov
lods
jae
push
mov
lret
inc
add
xchg
xor
sbb
test
les
jo
int
adc
test
mov
or
in
mov
add
xor
sahf
add
out
or
mov
mov
loopne
and
inc
pop
and
repz
push
hlt
jecxz
pop
stos
fdivrs
repz
notb
add
in
popa
dec
imul
inc
add
lods
das
imull
lods
ds
movb
outsb
xchg
negb
das
movb
inc
test
add
pop
push
push
jbe
mov
leave
xchg
mov
pop
push
push
push
add
push
xchg
roll
loope
mov
test
xorl
ficoms
cmp
out
pop
icebp
insb
pop
es
dec
push
add
int
sbb
add
mov
fsubrp
jae
add
movsb
sbb
icebp
fsubrl
mov
sarl
add
add
cld
enter
icebp
sbb
mov
mov
cltd
or
repz
addr16
movsb
stos
sub
add
push
mov
data16
push
push
inc
adc
cmp
cld
lret
adc
imul
out
fwait
stos
fisubl
icebp
nop
adc
mov
mov
popf
ljmp
outsb
enter
push
in
ret
inc
pop
jo
push
in
add
bound
fiadds
repnz
jbe
movsl
pop
test
pop
test
cs
sbb
inc
add
cmp
xchg
in
fnstsw
dec
pusha
add
add
fcompl
mov
xchg
push
stos
xchg
addr16
add
add
xchg
pop
rclb
fdivs
aad
pop
pop
hlt
pop
xchg
sub
dec
idivb
ss
inc
add
inc
add
jmp
shrl
leave
xor
xchg
xor
sbb
cmp
fsts
add
std
repz
loopne
xor
loopne
dec
repz
loop
nop
mov
add
mov
add
fcmovbe
imul
cmp
jae
jecxz
push
shrb
ret
jl
mov
dec
rolb
sbb
test
push
pop
dec
mov
testl
cmp
add
pop
imul
xor
iret
xchg
or
xchg
sbb
lock
mov
inc
shll
sbb
out
icebp
cltd
insb
sub
cmpsl
and
or
mov
rorl
push
ss
adc
leave
aad
sbb
sub
fwait
je
lret
mov
pop
sub
push
arpl
xor
loope
xchg
jnp
int
dec
jle
in
arpl
dec
jns
int3
pushf
push
adc
daa
adc
cs
sbb
cmp
les
mov
ds
push
cld
out
or
xor
leave
into
dec
fsubl
imul
xchg
xor
pop
jl
ja
dec
rolb
test
rclb
xchg
dec
or
insl
mov
lea
mov
jecxz
jne
fsubrs
sbb
lock
xchg
fucom
mov
xchg
out
jmp
int
or
cld
lods
pusha
add
add
hlt
fbstp
jo
add
in
fstps
jp
cli
cmp
pop
mov
add
scas
add
subl
lods
xchg
xchg
xchg
sbb
test
addr16
lret
sbb
mov
dec
ret
add
pop
jb
jo
pop
outsl
aad
bnd
and
aam
repnz
cmp
push
icebp
mov
inc
sbb
jno
fwait
in
or
add
cmpsl
popa
insb
cwtl
out
push
in
cmp
mull
sbb
call
mov
push
inc
sbb
leave
mov
outsb
out
push
add
adc
ss
fdivr
cmpsl
out
and
mov
fwait
pushl
stos
shr
scas
jge
adc
add
jmp
xor
add
mov
and
sub
add
adc
jae
out
imul
imul
pop
mov
cmp
jno
mov
jp
push
aas
inc
add
push
mov
cli
mov
push
mov
mov
cmpsb
icebp
dec
repnz
scas
in
mov
add
mov
shll
xor
mov
mov
cmp
shll
mov
mov
stc
ljmp
xchg
pusha
add
mov
jb
shrb
inc
add
out
dec
lods
push
push
icebp
inc
add
sub
inc
add
cwtl
nop
sbb
mov
pop
dec
ret
das
add
sub
cld
mov
cld
push
jo
adc
push
loope
jp
test
aaa
xor
push
insl
loopne
or
push
jg
add
mov
add
mov
test
mov
or
add
fmull
mov
add
scas
enter
movsl
sub
push
imul
clc
dec
and
xchg
leave
inc
add
or
pop
pop
adc
add
push
sbb
and
xchg
es
repz
test
stc
test
jo
inc
add
popa
pop
cmp
sbb
add
dec
addb
iret
adc
adc
mov
adc
add
jo
mov
pop
mov
les
sbb
jne
in
mov
mov
divl
pop
push
repz
jmp
stos
movb
call
jae
aas
mov
add
nop
xchg
mov
jne
lods
jae
lock
jg
pop
lea
adc
xchg
sub
dec
mov
xchg
xchg
jmp
and
dec
mov
dec
data16
xor
sbb
clc
fsubl
dec
xlat
pop
insl
and
push
sahf
jmp
call
lcall
or
bnd
add
lds
les
jmp
xor
mov
and
pop
cmp
or
data16
xchg
insb
test
pop
mov
sbb
enter
inc
add
jmp
and
inc
and
jne
shrb
lahf
icebp
pop
icebp
push
mov
jg
mov
sub
dec
popf
std
lahf
dec
jo
sbb
aas
hlt
pushf
test
add
sar
clc
jns
and
sarb
iret
inc
xor
cmp
fmuls
pop
pushf
jmp
aad
add
in
adcl
aaa
mov
jge
js
repnz
test
cmp
pop
sarb
jp
js
add
stos
adc
dec
insl
push
push
scas
fiaddl
add
add
or
xor
add
sub
in
mov
add
addb
xchg
icebp
popf
popa
cmp
jp
in
pop
loopne
inc
rcrb
in
nop
dec
adc
mov
jge
data16
mov
leave
xor
imul
cli
push
jno
sbb
ljmp
sub
insb
xchg
pop
sub
pusha
add
hlt
fsubrs
push
mov
fldcw
movsl
notl
mov
inc
mov
pushf
pop
in
dec
sub
mov
push
add
inc
add
lods
mov
rolb
or
push
sbb
mov
add
add
adc
fistpl
ljmp
adc
add
ror
adc
or
dec
int
ss
xor
es
sub
cli
fadd
add
add
stc
pop
jmp
rorb
add
imul
divb
mov
and
push
sti
mov
push
imul
gs
add
mov
insb
addb
call
add
jg
cli
mov
cmp
dec
call
insb
pop
ret
add
mov
push
scas
sub
out
sahf
push
addb
add
in
je
mov
add
cs
add
inc
or
add
push
les
mov
je
adc
aaa
or
xor
add
addb
push
pop
into
push
sbb
add
add
push
pop
lods
movsl
push
rorb
ret
mov
ljmp
rcr
fsqrt
fsubs
jge
push
adc
addb
cli
mov
push
das
lret
dec
dec
mov
in
jle
jecxz
bound
push
inc
movsb
hlt
push
loop
fcoml
push
jg
mov
repz
push
scas
add
inc
cmp
cwtl
enter
sub
fiaddl
xor
add
xor
sbb
jge
and
lcall
push
popf
jb
dec
push
xor
inc
add
or
jns
or
push
push
add
icebp
addb
insl
jbe
add
xchg
cltd
fisttps
dec
pop
aam
call
push
sarl
push
and
call
inc
pop
loopne
fstl
icebp
cltd
call
rcrl
outsb
out
mov
clc
adc
add
add
aas
xor
arpl
dec
lcall
loope
cmp
mov
jle
add
add
sub
movsl
dec
mov
cmp
int
fsubrl
out
stos
sbb
bound
pop
mov
or
dec
fimuls
jne
xor
jmp
cli
loope
rorl
add
add
cmp
inc
cmp
std
test
lock
frstor
mov
cmpsl
hlt
mov
mov
sbb
mov
mov
mov
sub
rcr
das
push
sbb
mov
or
add
or
mov
aam
mov
and
les
gs
add
stc
mov
add
outsb
push
pop
mov
mov
pushf
sahf
leave
or
add
data16
sbb
movb
lret
out
mov
adc
out
test
movsl
dec
inc
add
add
mov
add
data16
sti
loopne
mov
cmp
add
add
add
loope
outsl
pop
jns
adc
xor
inc
sub
add
add
or
sbb
push
add
jmp
mov
sbb
xchg
in
dec
push
xor
cmpsb
es
pop
ret
sbb
inc
xor
mov
divb
cmp
ss
mov
jnp
mov
cmp
repz
mov
push
repz
adc
aam
lahf
scas
lahf
jae
add
shlb
push
xor
in
lahf
mov
or
pop
data16
fnstenv
pop
lods
cltd
inc
add
iret
push
push
cmc
fldenv
lods
les
idivb
int
stos
or
xor
add
stc
out
xchg
push
cld
test
push
sub
add
roll
or
cmc
and
or
ret
shrl
ljmp
stos
inc
leave
jbe
lret
movsl
mov
push
movsl
aad
jge
pop
int
add
das
and
xor
push
jbe
jo
push
jnp
fidivl
loopne
pop
cli
sti
xchg
push
push
push
int
inc
leave
cmp
add
dec
ljmp
mov
add
jne
pushf
cmpsb
jecxz
mov
cwtl
stos
clc
test
popf
or
sub
cmpsb
in
add
push
cmc
rorb
push
sbb
outsl
imul
pop
add
imul
cwtl
cmpsl
push
imul
cwtl
inc
mov
cmp
xchg
lock
inc
movsl
stos
and
das
pop
insl
nop
cwtl
or
outsb
scas
mov
and
sbb
sahf
lcall
pop
ss
jmp
jp
add
jns
add
das
mov
iret
adc
clc
inc
std
andl
scas
pop
test
adc
lods
sbb
sbb
cld
cmp
xchg
pop
mov
sub
sbb
add
test
ds
cmp
or
pushw
add
pop
imul
mov
fwait
sahf
cmp
fists
xchg
test
sbb
pop
cmc
mov
outsl
sbb
bound
sub
aaa
and
mov
int
jmp
push
daa
mov
iret
jb
ja
popa
dec
cmc
add
push
cmpsl
dec
lea
clc
cmp
pop
sbb
push
sub
aam
out
mov
pop
in
fwait
cmp
and
nop
sbb
and
mov
jmp
jb
add
push
jg
push
and
push
add
fisttpll
jne
xlat
mov
dec
loopne
arpl
jecxz
into
xchg
sbb
js
adc
add
sbb
sahf
push
lods
in
fisttpl
rolb
ja
mov
add
adc
pop
je
xchg
dec
jg
add
hlt
inc
add
dec
adc
add
mov
shlb
sti
out
pop
xor
mov
fidivs
fndisi(8087
into
mov
add
cmp
outsl
xlat
xor
lcall
daa
inc
pop
cmpsb
mov
lret
rorb
js
fst
pusha
add
xchg
lea
mov
idiv
cmpsb
adc
fstpl
outsl
pop
or
add
outsl
neg
ja
into
mov
jmp
mov
js
sbbl
xchg
cmp
mov
loopne
dec
jns
mov
xchg
inc
cmp
add
pop
and
les
aaa
int
stos
mov
es
add
mov
pop
pop
imul
mov
andl
cmp
xor
mov
add
jecxz
cmp
imul
add
push
je
js
and
mov
sbb
jle
adc
add
or
lds
push
iret
lea
jg
inc
or
aaa
lahf
in
push
mov
bound
jo
add
adc
push
mov
jae
mov
push
ljmp
gs
stc
inc
scas
ret
xor
data16
cmp
imul
add
add
sbb
cmp
ja
ja
or
rolb
cmp
xor
lret
mov
arpl
push
or
testb
mov
les
pop
cli
lods
mov
loopne
stc
popf
mov
enter
push
jbe
sbb
inc
jl
rcll
and
add
iret
lret
mov
pop
movsl
sub
aam
mov
jnp
mov
add
ljmp
push
mov
xchg
add
testb
stos
or
push
pop
orl
mov
add
cmp
fdivr
dec
fwait
in
repz
addb
push
or
lds
dec
cmp
dec
ja
and
mov
out
jae
sbb
mov
xchg
sbb
mov
in
mov
and
inc
add
rolb
jl
out
insl
pop
mov
push
mov
mov
jecxz
ret
out
sub
add
push
shl
out
adc
xchg
push
rolb
subl
je
sbb
add
pop
daa
fwait
scas
xor
clc
xchg
fidivrs
add
sbb
clc
je
mov
xchg
jmp
icebp
xchg
out
cmp
ja
push
xchg
cltd
nop
scas
mov
cmpsb
mov
fnstcw
add
in
imul
or
add
jp
adc
call
imul
add
add
xchg
xchg
jge
push
flds
inc
add
cmp
fisubrl
add
add
xor
addb
xor
movl
xchg
jo
pop
cmp
and
dec
mov
and
ret
insl
jmp
inc
add
add
xchg
inc
pop
popf
lea
sbb
add
add
sub
cld
mov
stos
daa
addb
clc
iret
imul
jnp
iret
mov
add
or
in
jns
xchg
hlt
xor
test
fcomi
decl
rolb
js
fstpt
out
and
pop
mov
mov
stc
sbb
arpl
push
push
pop
ja
sbb
add
stos
aam
addr16
dec
dec
out
iret
rclb
mov
push
mov
out
sub
adc
or
adc
xchg
mov
pusha
add
inc
add
cmp
and
mov
dec
or
mov
push
cmovno
out
push
add
nop
jns
mov
add
pop
test
add
mov
lret
sub
ja
movsl
outsb
enter
outsb
sub
lahf
and
sub
inc
add
inc
add
cmp
mov
sbb
mov
adc
mov
idivb
in
cli
mov
das
mov
test
add
fcomp
and
mov
add
test
jae
add
out
mov
nop
mov
add
add
sbb
mov
or
rorl
cmc
sub
mov
add
add
add
mov
dec
ja
rclb
mov
sbb
jmp
stos
dec
lock
push
add
ret
ficomps
stos
in
mov
sarb
repnz
ret
add
dec
movsl
mov
jl
into
dec
rorl
fimull
imul
jl
fstps
add
mov
sbb
iret
mov
add
dec
xchg
data16
rcrl
fidivrs
add
mov
fwait
sub
aad
aam
add
add
lock
test
bswap
xchg
mov
arpl
imul
cmpsl
xchg
jae
jle
sti
inc
sub
out
xor
xor
inc
mov
pop
mov
fwait
push
dec
imul
adc
popa
sbb
mov
mov
in
or
cmp
jne
xchg
push
jl
mov
pop
lahf
fisttps
add
xchg
loop
fisttpl
ljmp
mov
jge,pn
dec
push
add
mov
inc
add
ret
cmp
rcrb
les
sbb
pop
ja
outsl
mov
pop
test
cld
jne
add
lret
jecxz
lcall
sub
aaa
aas
lcall
mov
int3
imul
jl
cmp
fiaddl
jno
pop
jmp
inc
add
xchg
and
xchg
sbb
xchg
jb
iret
stos
mov
sbb
mov
into
jbe
loopne
lock
add
pop
mov
add
xor
lcall
ret
mov
movsb
mov
push
xchg
ss
fwait
loop
loope
call
fidivrs
imul
data16
inc
add
and
push
pushf
dec
cmpsb
aad
mov
cld
or
pop
enter
pushf
push
or
add
mov
jns
test
loop
add
repz
sbb
movb
int
lods
add
out
xchg
mov
xchg
jp
sub
stc
pop
cmpsl
or
int
nop
lea
jno
mov
sarl
mov
loop
cmp
sub
xor
xchg
stos
outsb
decl
mov
inc
jne
cmpsl
sub
and
movsl
stos
shll
imul
out
adc
aas
mov
daa
or
jo
sbb
pop
dec
fstl
add
test
divb
mov
push
outsl
rcr
or
into
inc
add
add
idivb
mov
adc
push
add
addb
outsl
lret
and
scas
dec
sbb
fldcw
add
dec
adc
add
inc
fwait
icebp
pop
sbb
xchg
stos
adc
jmp
add
mov
lret
xor
out
pusha
add
push
rcr
lods
bound
lret
test
push
xchg
mov
sbb
mov
xchg
test
xlat
or
stc
scas
sahf
leave
lea
push
mov
pushf
push
xor
lret
xor
mull
sbb
jle
lret
fcomps
push
icebp
insl
lea
inc
add
outsb
lret
popa
pop
and
mov
inc
mov
jo
mov
hlt
pusha
add
rolb
rorb
ljmp
dec
cli
sub
inc
add
lahf
loope
add
fisubl
sub
adc
add
jb
mov
les
repnz
push
pmuludq
pop
incb
or
loope
push
add
sub
adc
lahf
pop
aad
sti
mov
pop
sahf
jb
or
jno
jbe
leave
clc
xchg
icebp
jge
out
imulb
add
xchg
xchg
push
sbb
lahf
inc
add
add
mov
add
into
nop
jle
sub
aam
gs
mov
cli
push
adc
mov
mov
sbb
sub
movsl
aaa
cmp
xchg
dec
cs
mov
pushf
sub
inc
iret
and
jmp
aad
push
jg
add
rcrl
jne
add
dec
decl
das
es
add
dec
xchg
mov
pop
xchg
shll
ficomps
jge
sbb
xor
add
call
insl
mov
mov
and
dec
cltd
inc
add
sbb
jno
add
pop
cs
or
loop
push
enter
decl
out
or
push
scas
les
test
stc
pop
std
xlat
rolb
xchg
pop
in
movsb
fdivrs
shll
shrl
cmovns
mov
imul
add
xchg
jns
icebp
xchg
lds
into
mov
cmc
adc
lahf
xchg
adc
adc
aad
stos
jle
out
jecxz
add
mov
and
stc
mov
mov
ja
add
inc
add
sahf
bound
dec
aas
sbb
rorl
sahf
jne
push
add
roll
add
aam
push
add
stc
sahf
rolb
cwtl
and
xchg
movsb
inc
outsl
adc
cld
cwtl
popa
push
and
or
repz
sbb
cmp
rolb
mov
add
push
add
mov
fadds
adc
dec
sub
insb
insb
movb
mov
mov
and
aas
mov
clc
lcall
mov
lock
xor
pmullw
xchg
mov
inc
add
test
int3
dec
sarl
push
or
add
add
add
xor
icebp
mov
fcmovnb
add
add
push
add
repz
cmp
jg
outsb
lcall
dec
jl
aas
popl
sub
ljmp
cmc
pop
adc
push
negl
add
hlt
cmp
inc
loope
decl
xchg
pop
mov
mov
pop
cmp
push
aad
aaa
ret
mov
add
lret
nop
push
mov
add
add
push
lcall
jnp
jmp
fs
mov
or
add
cwtl
movb
leave
jno
add
cmc
fidivrs
stos
and
dec
movsl
cmp
cmp
mov
in
das
fstpt
repnz
xchg
rcll
addr16
push
enter
imul
rcrl
cs
insl
pop
mov
iret
pop
inc
adc
mov
push
adc
cmpsl
outsb
cwtl
addl
and
cmp
push
cmp
out
cli
sbb
jecxz
push
cmp
add
jp
divb
cmpsb
test
lahf
jl
hlt
push
sbb
iret
lods
xchg
xchg
fisubrs
sub
lods
mov
or
fidivrs
movsb
popa
or
int
or
clc
test
pop
movb
aas
and
mov
jno
scas
jmp
faddl
repz
ret
add
xor
add
add
clc
scas
or
or
push
imul
adc
add
outsb
inc
leave
shl
roll
dec
in
in
fsts
or
xor
cmp
lret
gs
ret
ret
addb
jp
fidivrl
push
adc
xor
xor
pop
shl
je
add
jg,pn
jns
shll
sarl
dec
fsubp
stos
scas
in
out
mov
adc
cmpsw
fmull
lahf
xchg
xchg
out
outsl
and
mov
xor
jae
lahf
ret
mov
adc
testb
inc
pop
cmc
jo
fldt
and
mov
imul
mov
pop
cmp
in
int3
int
jecxz
popf
aas
push
xchg
test
xchg
ljmp
incb
add
xchg
mov
add
scas
inc
add
jle
shrl
push
mov
loopne
and
stos
dec
call
rolb
sahf
push
std
loop
inc
addb
out
ss
jecxz
into
mov
repz
pop
xchg
repz
lock
lods
add
cmp
cwtl
out
dec
int
add
jo
lret
stos
sbb
insb
dec
cmp
or
inc
add
add
ret
add
mov
add
pop
mov
ret
fistps
push
push
mov
add
leave
pop
or
rcrb
out
cmp
mov
ljmp
aaa
mov
cmc
dec
bound
or
push
push
push
jecxz
fidivrs
fdivl
xor
mov
mov
nop
pop
pop
imul
les
shll
push
sti
mov
sub
or
dec
cmp
push
or
repnz
popa
and
mov
mov
sbb
mov
in
notl
xchg
aas
enter
mov
jge
cmp
add
jl
insb
push
pop
and
lock
addr16
test
pop
pop
xchg
divl
popa
cli
shrl
push
lock
addb
or
pop
int
popa
nop
ret
add
nop
mov
add
loop
negb
jno
xlat
mov
ss
mov
ja
movsb
add
pop
pop
push
push
es
dec
and
mov
idivb
push
je
mov
repnz
and
fnsave
test
popf
div
sub
out
mov
add
push
mov
sbb
xchg
cld
sbb
cmp
scas
pop
out
add
adc
bound
jbe
roll
push
pop
adc
jle
aas
mov
adc
lock
xchg
dec
repz
das
cwtl
fldcw
call
insl
push
lret
mov
mov
in
fcoml
cmc
push
push
add
add
pop
divl
jl
inc
add
sub
or
push
and
pop
pop
adc
mov
xor
push
add
xchg
lock
pop
cmpsl
out
idivb
pop
movb
jle
arpl
jb
adc
or
out
fwait
add
idivb
scas
xchg
jmp
inc
mov
imul
sub
sti
and
cmp
jp
subl
sti
fscale
xlat
rcr
dec
leave
int
shrl
icebp
movb
cmpsb
add
jl
mov
xchg
mov
test
xor
add
jae
ret
lds
lock
pop
or
add
pop
cltd
inc
add
lret
decl
stos
in
icebp
imul
or
lods
cs
imul
add
sbb
fnstcw
mov
mov
shl
stos
and
dec
scas
cs
jp
adc
or
dec
adc
or
mulb
mulb
cmp
cmpsl
scas
mov
icebp
jp
inc
add
add
cmp
xor
cmp
jle
pop
xchg
imul
inc
add
int
jbe
arpl
jne
sahf
pop
dec
sbb
add
push
adc
or
jmp
pop
or
lcall
mov
cmpsb
popf
test
cmpsb
cmpsl
dec
loop
cmc
neg
fprem
jp
push
cmp
rcrl
fld1
jb
fcmovu
jnp
cmp
out
stos
hlt
leave
mov
pop
in
mov
xor
addr16
push
fdivrs
pop
mov
add
push
xchg
mov
fstps
sbb
addr16
cli
icebp
mov
nop
cld
jno
push
xchg
gs
pop
dec
jbe
mov
insb
push
or
fwait
dec
or
pop
jg
push
out
loopne
jbe
out
jmp
lods
stc
dec
inc
add
mov
test
addb
push
dec
push
jg
adc
fwait
adc
sbb
in
nop
loopne
cltd
je
in
mov
mov
shr
pop
cmp
dec
rcll
out
arpl
repz
jecxz
mov
add
inc
add
mov
mov
nop
testl
push
test
xor
add
mov
adc
ficoml
movb
xor
movsl
roll
xorl
mov
dec
add
jmp
and
shlb
mov
popf
mov
mov
xchg
test
add
scas
push
jp
push
fistpl
lret
inc
add
loopne
add
cmp
loop
add
cli
xchg
cs
clc
call
inc
add
imul
or
movsl
imul
push
dec
lock
js
mov
in
push
mov
icebp
stc
test
mov
pop
jmp
mov
push
ja
mov
filds
push
mov
aad
push
stos
int
sbb
dec
push
mov
inc
add
cli
orl
sub
rcr
dec
push
sub
adc
cmpsb
test
xchg
ret
cmc
jecxz
sbb
mov
insl
add
pop
mov
in
test
and
mov
xchg
in
pop
xor
ret
push
inc
cmp
xchg
movb
sub
xchg
bound
outsb
sbb
add
cmpsb
dec
aam
mov
mov
push
insb
lods
xchg
jecxz
in
lahf
insb
outsl
cmp
jmp
mov
add
insb
lea
jae
insl
scas
mov
in
or
cmp
fcomps
adc
out
cmp
data16
mov
push
lcall
add
sbb
mov
jne
xchg
pop
mov
mov
jnp
adc
add
cmp
sub
cmp
mov
in
stc
add
imull
nop
sar
dec
scas
mov
shll
or
je
imul
scas
jnp
fwait
lds
arpl
stos
sub
adc
mov
shlb
cmc
mov
add
and
jmp
imul
mov
cmp
pop
mov
and
push
lret
mov
jne
pop
ljmp
into
fsts
aad
aaa
xor
cld
inc
add
imul
addr16
lods
jecxz
daa
xchg
inc
add
jle
cmp
xlat
cmpsb
add
jo
popa
jb
mov
push
and
jno
cli
lock
lods
inc
mov
orl
push
push
sub
inc
jecxz
adc
pop
push
sub
jle
inc
add
lea
lods
dec
sub
cmc
cwtl
pop
push
inc
pop
jne
sbb
ret
mov
movsb
xor
mov
bound
or
movsl
mov
cmp
mov
add
dec
into
fwait
movsb
jp
movsb
mov
add
repnz
jo
stos
mov
add
frstor
shll
push
out
and
lods
nop
sub
decl
ret
cmp
add
and
rcll
insl
pop
jae
insl
addb
aas
or
cmpl
xor
jne
clc
inc
add
add
push
jmp
lea
adc
loop
lea
leave
and
inc
ss
arpl
addr16
int3
jmp
cmp
jge
lcall
mov
fsubr
rolb
adc
pop
or
mov
fdivrl
xor
outsb
arpl
inc
and
mov
add
push
fsubl
in
jne
mov
decl
les
ljmp
mov
adc
dec
insb
lock
test
dec
lea
mov
into
xchg
in
aaa
ret
inc
insb
jmp
add
outsl
lret
xchg
mov
test
sarb
popf
pop
xchg
and
ss
jb
cwtl
jmp
frstor
aaa
ror
add
dec
insb
push
xor
ljmp
enter
push
lods
pop
fldl
and
ljmp
add
mov
mov
rorl
gs
shl
outsb
mov
or
jmp
cmp
push
sub
ret
or
add
mov
jg
loope
or
aas
adc
aaa
ret
loop
add
xchg
inc
add
add
mov
daa
insl
mov
push
loope
pushf
or
rorl
or
div
or
push
sub
into
lret
inc
add
cwtl
jp
inc
pop
test
dec
adc
jmp
lahf
dec
sub
push
xchg
iret
imul
movsb
das
cmc
or
xor
movb
add
mov
pop
xchg
mov
jp
fisubl
sbb
loopne
xchg
ret
dec
or
sbb
es
xor
inc
add
dec
xchg
scas
fidivl
mov
stos
je
xchg
sub
cmp
mov
mov
jg
mov
lea
insb
inc
add
add
sbb
dec
push
xchg
push
dec
or
mov
nop
out
stos
jmp
mov
fwait
jne
mov
sub
mov
sti
popf
jge
jbe
lods
aad
mov
dec
xchg
shll
add
inc
pusha
add
push
and
push
mov
add
add
xlat
xchg
pop
je
xor
fs
jne
insb
and
push
push
addb
in
loop
or
call
in
push
or
icebp
pop
rolb
sbb
cltd
sahf
das
daa
lock
xchg
dec
mov
fidivrs
test
cmp
and
idivb
add
add
push
push
into
arpl
pop
add
add
mov
stc
push
jae
sub
pushl
aad
add
repz
sbb
xchg
outsl
mov
scas
out
push
stc
lret
and
fdiv
mov
push
xchg
sbb
fstps
std
cmp
lock
cmc
inc
add
mov
or
xchg
and
mov
and
out
addb
mov
inc
add
ja
jmp
xor
mov
add
pop
mov
mov
lcall
inc
inc
xchg
mov
dec
in
jp
sub
and
test
daa
dec
and
popa
mov
xchg
loopne
outsb
push
shrl
out
cmp
xchg
add
ficomps
int3
mov
xor
aad
fs
sub
stos
pop
pop
inc
popl
add
test
sub
fildll
in
jne
cld
mov
icebp
arpl
or
sbb
add
push
add
xchg
inc
push
push
andl
jae
xor
push
ljmp
add
push
fidivs
outsl
jmp
add
movb
incl
dec
fs
cmpsl
pop
insl
mov
mov
lret
cmp
cmp
mov
pop
lods
popf
out
and
lock
int
stos
pop
and
sbb
and
std
adc
test
xchg
pop
and
xchg
scas
out
mov
or
jae
test
cmp
mov
lods
jg
imul
test
mov
xchg
les
add
add
les
xor
hlt
jbe
jae
add
xlat
push
faddp
add
push
mov
movb
out
pop
mov
shll
mov
add
scas
mov
mov
and
in
scas
mov
add
push
pop
sub
pop
mov
imul
xchg
in
insb
into
or
ds
addr16
and
sub
mov
add
push
mov
int
jbe
in
jo
sub
into
pop
arpl
push
jp
clc
jp
loop
pop
jno
hlt
test
data16
in
pop
std
add
push
add
pop
dec
clc
jnp
push
mov
push
aam
add
mov
and
in
mov
inc
aas
aas
mov
or
jg
pop
xor
imul
add
dec
xor
loop,pn
mov
adcl
repnz
sub
out
into
xlat
scas
push
lds
dec
xchg
mov
xor
cmp
test
fdivrl
fcomi
insl
ja
jle
in
inc
add
mov
push
mov
mov
lea
cmp
xchg
sub
sub
mov
jmp
addb
sub
jae
add
push
mov
in
stos
pop
jb
lahf
or
hlt
pushf
sbb
lret
shrb
mov
add
add
push
pop
or
add
loop
or
cmp
in
sbb
rolb
scas
icebp
push
in
push
out
lods
or
sub
jns
scas
push
mov
cltd
bound
jne
fisubs
and
roll
lods
insb
dec
add
mov
sbb
or
add
jmp
cld
icebp
cwtl
icebp
push
add
outsb
xor
mov
shrl
adc
add
jb
add
push
add
sahf
notb
jl
inc
adc
push
dec
jmp
sahf
fsubrl
cs
fidivrl
insl
dec
insl
andl
fistpl
xor
cwtl
imul
add
sbb
sub
cld
add
jmp
jle
int
sub
addb
xchg
push
adc
pop
mov
pop
pop
daa
push
xchg
mov
inc
shll
and
lahf
pop
aad
mov
rcr
cmc
das
aaa
test
outsb
enter
mov
and
or
jmp
mov
add
add
test
loop
in
hlt
gs
mov
xor
add
sti
ficompl
mov
and
lods
aam
xchg
cmp
in
iret
or
fldz
mov
push
jo
push
jo
movb
mov
cltd
loop
ss
add
aas
cmp
clc
cmc
lods
cltd
ret
push
xchg
mov
loopne
xchg
sub
idivl
imul
inc
lock
xor
outsb
jmp
mov
lea
cwtl
cmp
adc
or
addb
add
xchg
jbe
lock
jne
or
imul
jmp
pop
stos
gs
add
popf
cwtl
rolb
push
in
lea
jbe
sbb
add
movsl
push
addl
inc
repz
adc
rolb
lds
scas
sbb
mov
cwtl
adc
nop
xchg
cld
jae
stos
dec
mov
add
push
cmpsb
cs
movb
daa
sahf
xchg
and
push
js
cmp
cmc
cmp
add
push
test
aam
inc
cmp
add
inc
add
adc
xchg
or
adc
add
punpckldq
in
jnp
jle
dec
pop
mov
sbb
rcr
dec
stos
and
cltd
ss
cld
rcr
mov
das
aad
das
mov
into
cmpsl
imul
xor
jnp
in
jnp
mov
push
pop
js
adc
imul
or
add
inc
add
jecxz
jbe
icebp
pushf
jl
ljmp
rorl
divb
xor
fsubs
add
jno
add
or
cs
adc
xchg
arpl
rcl
test
test
xor
push
insl
pop
jns
fldcw
mov
add
adc
rcll
xchg
bnd
add
sarb
mov
int3
xlat
les
push
adc
inc
cltd
scas
jp
and
adc
movb
outsl
mov
out
jle
pop
rolb
push
out
and
out
nop
bound
rclb
adc
add
or
call
cmc
aas
lret
fimull
adc
in
xlat
pop
or
arpl
notl
je
notl
add
aad
ljmp
xor
aas
sbb
add
add
iret
fstps
push
add
add
sbb
inc
add
add
lock
mov
cmp
int
mov
lds
and
jmp
add
jnp
inc
add
and
in
inc
add
daa
mov
or
test
jbe
addb
push
fistpl
mov
or
imul
inc
add
push
xchg
sti
push
pop
aas
sbb
lods
enter
push
add
daa
xlat
lods
cltd
test
out
fstp
lcall
call
cmp
mov
fsubr
dec
push
mov
and
cli
es
outsl
shll
in
add
insb
lret
cld
mov
fnsave
arpl
mov
cltd
fs
pop
lcall
mov
out
mov
lea
add
pop
lret
flds
xchg
sti
ss
in
jg
pop
cmp
cmp
jns
aaa
arpl
cld
rcll
fisubs
cmp
sbb
lret
and
jle
pop
scas
data16
es
icebp
add
or
push
adc
stos
jno
add
pusha
add
dec
jmp
enter
add
mov
add
add
in
ss
mov
xor
dec
out
dec
imul
roll
or
jbe
scas
ret
push
mov
cld
mov
mov
dec
movb
aam
jecxz
xor
sbb
mov
jmp
push
add
rolb
jecxz
jmp
mov
mov
call
test
xor
pushf
add
or
add
xor
test
push
or
jno
call
xchg
fdivrl
push
sbb
insl
and
outsb
mov
xchg
fcompl
sub
or
inc
pop
loop
sti
mov
loop
inc
cltd
pushf
loope
sahf
adc
add
add
andl
enter
pop
push
add
or
dec
mov
add
sti
cmp
nop
cli
ret
rcrl
or
add
addb
add
cmp
outsl
xchg
in
jecxz
add
lahf
sub
mov
mov
inc
shrb
notl
mov
fcomps
push
mov
es
mov
roll
pop
inc
icebp
and
mov
jge
push
and
jge
lret
ds
or
dec
xor
leave
fidivrs
addb
ret
test
inc
icebp
mov
sbb
or
mov
test
mov
je
fisubl
and
lods
outsl
dec
mov
pop
mov
mov
xchg
and
add
sahf
mov
add
add
addb
es
or
rcrl
lret
repz
pshufw
addr16
ret
testb
xor
push
std
mov
arpl
loopne
jecxz
sahf
jne
and
mov
fnstenv
mov
mull
cmc
lcall
push
pop
adc
shrl
and
fcmovnbe
dec
cmc
dec
fwait
test
loop
inc
add
loopne
pushf
mov
cmpsl
cmp
fsts
mov
jg
lds
xor
les
in
dec
mov
iret
push
pop
xchg
inc
add
pop
icebp
dec
jne
add
repnz
jp
insl
ja
mov
or
dec
lds
mov
mov
ret
lods
pusha
add
outsb
mov
pop
movsb
les
in
sbb
into
shll
pushf
inc
add
xor
in
insb
daa
dec
pop
mov
es
xchg
loope
xor
mov
es
sub
js
scas
xchg
sbb
add
hlt
iretw
jae
sub
aad
mov
cld
aas
daa
jge
pusha
add
push
rolb
int
addl
jmp
cld
insl
addb
cmp
dec
sahf
adc
or
outsl
popf
cmp
dec
sub
sti
sbb
mov
xchg
cmc
je
jle
pop
in
cwtl
and
fbld
jl
jl
ss
lahf
xchg
mov
cs
xor
add
das
das
cmp
sti
divb
hlt
xor
cltd
xor
addb
lods
push
jp
adc
add
jnp
cmp
addb
call
es
mov
fildl
add
loope
add
cli
out
pusha
add
push
ret
xor
in
cmp
and
push
push
in
scas
add
movb
fs
mov
dec
nop
and
xchg
movsb
or
jo
or
insb
or
inc
or
scas
movb
sti
cmp
push
add
mov
sbb
add
and
inc
add
dec
push
jge
mov
add
aam
es
jmp
jns
pop
inc
add
out
xchg
push
sbb
add
xor
cmc
pop
mov
iret
ss
call
cwtl
jo
add
push
add
icebp
pushf
inc
add
aas
mov
mov
add
aas
negb
sbb
xchg
clc
adc
inc
add
xchg
call
movb
sbb
scas
fisubl
in
xor
enter
jb
sbb
mov
mov
fmull
cli
es
dec
cmp
sub
addb
jbe
add
and
fidivl
lret
fwait
adc
cs
cli
js
in
cmc
dec
das
enter
fsts
pop
push
addb
test
daa
add
test
xchg
push
push
call
add
jnp
cmpsl
cmp
mov
push
jnp
push
in
leave
hlt
into
rolb
into
jnp
pop
and
lods
cmpsb
dec
cld
xor
dec
pop
add
hlt
pop
cs
jecxz
push
dec
xchg
mov
inc
sbb
ja
mov
add
xchg
jecxz
insl
jmp
mov
jno
add
scas
int
ds
in
lahf
xchg
test
mov
jno
fwait
push
xchg
jge
aaa
aaa
mov
hlt
addr16
push
call
push
xchg
mov
xchg
pop
mov
std
hlt
mov
adc
push
cltd
xor
push
aad
pop
inc
stc
push
stos
jecxz
mov
aad
push
mov
sbb
gs
mov
mov
lcall
xchg
mov
xchg
mov
adcl
in
push
stos
adc
in
aas
sahf
jne
cmpsl
loop
cwtl
jo
push
jle
stc
cmpsb
and
pop
xchg
test
push
or
loopne
pushf
pushf
repnz
pop
sbb
rolb
xlat
mov
fimuls
in
out
into
jmp
xchg
push
fbld
movsl
loop
add
test
sub
cmp
lahf
test
adc
out
add
push
clc
and
lret
mov
cmp
mov
fistpl
xor
lds
jl
dec
into
loopne
lods
xor
sbb
nop
mov
lcall
mov
lods
sub
pop
clc
add
mov
cmc
fcmovnbe
xor
ss
push
lods
dec
lds
xlat
push
xchg
ljmp
iret
aaa
stos
xchg
adc
movsl
popf
jo
pop
mov
incl
jecxz
loope
cmp
inc
bnd
add
js
add
popf
sub
scas
fnsave
cmc
or
inc
jae
bound
push
movb
dec
out
iret
or
movsl
dec
adc
loope
xor
xchg
sbb
lds
leave
push
xor
xor
and
adc
pop
inc
add
sub
lock
in
add
clc
jge
add
js
or
test
icebp
and
and
pop
add
scas
repz
mov
sbb
mov
add
add
dec
scas
jno
imul
push
add
lock
dec
add
outsl
and
je
jg
ja
sbb
mov
iret
mov
insb
dec
mov
out
outsl
faddp
cmp
xchg
or
mov
xchg
cmpsb
jnp
mov
scas
fsubs
xlat
lds
mov
inc
jns
pop
sbb
or
cmpsl
jge
ljmp
cs
rolb
push
push
das
popa
hlt
inc
or
or
add
xlat
inc
add
fs
xchg
scas
push
ret
ficompl
xchg
push
xor
loopne
jo
inc
mov
bound
insl
lds
and
mov
out
sbb
movb
xor
add
add
or
push
rclb
mov
nop
dec
push
mov
in
cmp
add
mov
test
sbb
in
aam
pop
push
hlt
out
add
insl
das
in
cltd
pop
cmpsb
cld
scas
out
jmp
add
push
pop
cmp
test
and
and
pushf
inc
add
test
movzbl
pusha
add
insb
adc
movsl
lret
or
push
lret
pop
scas
lods
adc
add
or
mov
adc
enter
sub
push
jecxz
mov
addb
aaa
lret
clc
mov
sub
sub
in
lds
in
sbb
in
dec
xor
xchg
mov
add
jecxz
adc
xor
out
les
sbb
pop
pop
sahf
mov
xor
push
mov
mov
fdivrs
outsb
add
leave
jge
repz
mov
sub
jo
fiaddl
add
push
cmp
mov
pushf
pop
pop
push
or
rolb
int3
test
stos
or
add
arpl
xorl
jl
ret
inc
add
sahf
repz
mov
loop
mov
mov
xchg
pop
scas
mov
int3
test
pusha
add
cmpsl
cmp
fldl
mov
add
or
cmp
inc
adc
out
mov
sahf
mov
call
add
jno
lret
popa
sub
xor
xor
and
stos
lea
inc
push
and
arpl
xchg
xchg
adc
pop
push
xchg
mov
xchg
pop
stc
push
cmp
insl
jb
movsb
jnp
addb
jecxz
mov
dec
dec
test
rcrb
sub
das
lods
fdivs
dec
add
mov
add
xchg
fs
xor
or
mov
enter
add
mov
adc
lods
inc
add
cltd
sub
cwtl
jno
sbb
jb
test
outsb
lret
popf
jle
add
add
jecxz
jns
add
add
sahf
es
hlt
inc
ret
add
mov
clc
mov
xchg
pop
test
push
outsl
adcl
push
pop
aam
mov
lret
sbb
dec
movsb
or
ret
add
inc
add
stos
out
dec
aas
jo
lret
data16
sub
lcall
dec
mov
push
stc
ret
adc
ja
movb
mov
add
into
or
icebp
rolb
xchg
enter
and
addb
inc
add
test
mov
icebp
adc
pop
cltd
jne
ficoml
jp
addr16
add
cmp
adc
sti
fs
or
addb
into
popf
cwtl
sub
lcall
jmp
xlat
cmpsl
xor
out
and
jg
or
push
call
cmpsl
fucomi
xchg
mov
or
mov
and
push
add
fidivs
int
cmc
dec
stc
sbb
imul
rorb
jg
lret
es
cmpsl
fimull
mov
inc
add
mov
mov
xor
xor
add
mov
mov
ret
push
movsl
add
jb
jecxz
mov
pop
in
mov
mov
movsl
cli
imul
mov
mov
sbb
enter
mov
jle
aaa
sub
jb
negb
sub
out
cmc
xor
mov
mov
pop
lds
mov
sbb
cmp
out
test
xor
add
clc
fwait
ret
neg
arpl
fstps
repnz
add
loopne
pop
mov
mov
mov
inc
add
add
mov
adcl
xor
mov
push
insb
out
ret
es
fdivl
adc
mov
add
stc
scas
jge
add
dec
dec
addb
dec
add
mov
lcall
adc
sbb
add
push
add
movb
pop
lods
cwtl
sahf
mov
addb
add
cmp
add
fbstp
mov
jecxz
in
sbbl
lahf
xor
lahf
cli
testb
add
sub
je
bound
xchg
in
insb
sub
jmp
cwtl
push
pop
pop
push
into
or
jb
push
and
daa
test
mov
popa
daa
in
cmp
add
xor
repz
in
fxch
or
cmpsl
movb
add
xchg
repnz
sub
cltd
es
mov
xchg
and
add
scas
enter
addb
jmp
imul
xchg
fwait
cmp
or
push
movsb
or
push
imul
shlb
and
xchg
and
das
mov
jmp
xor
test
jl
mov
sub
mov
rolb
mov
and
pop
je
add
addb
sub
out
mov
jge
jnp
popa
and
jne
pop
push
in
or
mov
jg
mov
pop
sub
insl
ljmp
icebp
popa
fisubrs
popf
addl
push
ja
js
pusha
add
sub
push
or
sbb
mov
mov
addl
loopne
sbbl
arpl
cld
sbb
hlt
jbe
test
cltd
fwait
arpl
cmp
add
bound
imul
add
dec
mov
rol
add
and
cmp
lahf
rcrl
push
add
loope
fsubrl
sbb
adc
ss
mull
dec
xor
mov
sub
xchg
pop
pusha
add
icebp
add
cmp
add
pushf
lock
cld
push
jecxz
jo
outsl
pushf
cmp
jl
popf
dec
add
les
rclb
push
ret
fsubrp
sbb
jns
add
add
dec
fimuls
testb
aam
pusha
add
sub
sbb
adc
add
in
cmc
out
popf
in
or
arpl
ficoml
add
cmp
inc
add
mov
mov
addb
rolb
or
insb
xor
sub
pop
jmp
inc
aad
test
aad
or
lea
mov
mov
add
push
mov
rcr
push
add
stos
sub
xchg
xor
cmpsb
shll
push
add
and
mov
pop
out
insb
mov
add
add
add
lret
dec
test
mov
and
addl
icebp
addb
popf
sahf
int
dec
int
inc
add
mov
movd
aam
xor
sub
add
dec
sub
dec
or
dec
xchg
jg
icebp
add
mov
mull
push
testl
mov
insl
cli
inc
ds
comiss
in
ret
pop
jecxz
outsb
dec
mov
jae
mov
test
out
stos
daa
hlt
mov
das
shll
xchg
xchg
sbb
add
xor
sbb
leave
rcll
sbb
pop
adc
push
in
push
js
push
or
add
imul
scas
and
jge
clc
xchg
outsb
or
loop
or
dec
sbb
push
out
mov
add
mov
cmp
popw
jle
je
cmp
push
mov
pop
xor
xor
into
dec
out
cmpsb
xchg
push
pop
pop
dec
jae
cmp
mov
jo
addb
mov
aas
inc
add
xchg
push
add
mov
inc
pop
mov
add
or
fld
add
cmp
lcall
dec
outsl
dec
ret
into
cmp
addb
pop
test
jmp
loopne
jae
add
cwtl
pop
cmp
push
mov
mov
dec
cmovno
lahf
stos
mov
jl
and
or
dec
push
push
add
faddl
arpl
inc
sub
out
xchg
mov
add
dec
lea
fsubl
stc
inc
add
ja
add
xchg
pop
add
daa
mov
add
pop
pop
lcall
sub
ror
jg
out
not
lcall
scas
jge
and
test
out
in
test
inc
add
push
push
mov
out
scas
push
addl
xlat
mov
idivl
bound
mov
sarb
mov
xchg
lcall
inc
add
lahf
int
xlat
out
aas
xchg
fxam
dec
shrb
add
mov
xchg
test
add
loopne
insb
xchg
sbb
add
mov
cltd
ret
xchg
into
aad
add
push
std
scas
cli
mov
add
lret
daa
mov
cmp
push
pop
adc
lds
mov
sahf
hlt
movsl
or
pop
fisubl
rolb
arpl
call
jo
std
pop
push
mov
mov
jecxz
jl
inc
aas
mov
outsl
lods
outsb
adc
popf
mov
jno
add
push
imulb
cli
push
pop
mov
sbb
lret
insl
leave
les
test
mov
repz
jge
out
mov
add
mov
mov
int3
lret
xchg
idivl
ficomps
add
sbb
xchg
sbb
adc
dec
mov
fcmovbe
stc
lret
jle
dec
outsb
test
inc
fistl
mov
sub
js
xor
xchg
stos
cmp
add
sbb
xor
int3
add
ds
mov
pop
mov
insl
test
std
xor
rcrl
pop
mov
and
pop
inc
push
sahf
push
pop
divb
ret
dec
push
add
mov
pop
sbb
add
mov
sti
add
enter
gs
mov
rcr
test
aaa
int
add
jno
ds
push
addb
cld
adc
outsl
or
mov
pop
jmp
add
mov
loop
leave
shll
stc
mov
ret
dec
adc
fwait
aas
sbb
lcall
daa
push
cmpsb
sub
push
cmp
cmp
pop
lahf
test
sbb
int3
jecxz
add
popa
movsb
push
xor
push
sub
in
dec
loope
pop
test
cmpsl
cmc
sub
push
adc
push
out
add
ljmp
add
mov
outsb
bound
jl
shrl
std
pop
pop
dec
aam
cmpsl
pop
cmpsb
adc
cmc
lods
sbb
arpl
fadds
add
xchg
fstpt
add
push
or
mov
dec
cltd
push
sbb
mov
lcall
cmp
daa
pop
cmpsl
xchg
cwtl
pop
movsl
in
scas
mov
mov
xchg
leave
jno
in
mov
roll
insl
shrl
xor
inc
add
xchg
xchg
test
nop
out
mov
js
mov
push
inc
add
xor
xlat
out
adc
jns
in
cmp
fistpl
push
into
or
gs
add
xchg
paddusb
movb
pop
and
jg
cwtl
scas
sub
sbb
dec
push
or
popa
popf
pop
jl
xlat
mov
mov
scas
add
jbe
arpl
add
xchg
jp
jg
fmul
xchg
dec
arpl
xor
in
sub
push
cmp
pop
inc
add
leave
in
scas
int3
iret
outsl
mov
add
cmp
add
arpl
push
add
jle
rorl
and
jle
and
sub
notb
add
add
les
xor
lea
add
add
adc
sarl
xor
jecxz
jb
test
out
call
jge
mov
ret
sti
dec
aas
mov
adc
add
mov
mov
mov
addb
bound
hlt
ret
pop
mov
insl
jbe
cltd
stos
xchg
movsl
dec
add
mov
or
je
loopne
xchg
movsl
mov
add
insl
push
je
sahf
and
add
add
in
inc
add
mov
or
xchg
xor
lcall
xchg
or
jne
pop
push
stos
sub
mov
fcompl
xchg
ret
jecxz
out
sub
adc
je
loopne
lahf
pop
sbb
pop
pop
cmp
add
lret
ja
in
sbb
jl
mov
test
mov
lds
lods
sbb
mov
mov
push
jb
push
jae
roll
push
push
pop
stos
inc
xchg
sub
or
mov
or
cld
fs
fwait
addb
sub
std
adc
pop
mov
push
sub
add
or
fmuls
bound
cli
push
add
xchg
int3
nop
fnstcw
sti
push
and
fisttpl
in
and
fs
add
fcoms
add
js
js
and
add
cmp
sub
xor
jmp
sbb
pop
addr16
mov
pop
mov
aam
iret
xor
out
mov
lea
adc
add
data16
lahf
xor
xchg
adc
jo
pop
mov
mov
js
adc
sbb
cmp
sub
dec
repz
mov
add
push
aam
cmp
aad
add
add
jge
add
addb
mov
aaa
jg
add
adc
push
test
aas
lods
adc
cmpsb
mov
xchg
outsb
les
add
rcrb
jno
inc
pop
pop
push
mov
enter
xchg
sub
xchg
jns
aas
jns
cmp
or
add
bound
ret
dec
xchg
lahf
or
aad
cmp
ret
pop
cmp
xchg
jb
cld
call
shll
int
stos
add
insl
mov
xor
xor
sub
and
out
das
ret
imul
cmpsl
xlat
hlt
jno
add
cld
in
dec
xor
lods
sub
pop
stos
fstpl
mov
jbe
pop
cltd
into
mov
add
inc
iret
call
inc
add
cld
xor
sub
add
add
sbb
ror
lea
pusha
add
dec
ss
loope
mov
add
addb
sbb
add
addb
pop
js
dec
fisubrs
mov
shll
fistps
add
push
aaa
or
fsubl
lret
iret
cmp
xchg
repz
iret
mov
inc
addb
test
ret
lock
aaa
addb
imul
sbb
lret
inc
add
adc
cli
test
add
rolb
pop
xchg
push
xchg
icebp
push
add
or
jae
mov
sub
add
mov
cmp
xchg
lods
cmc
pop
ret
add
mov
xchg
mov
xchg
into
inc
add
fldln2
test
rorl
jl
mov
adc
dec
jmp
ret
sbb
pop
xchg
addr16
fyl2xp1
cs
scas
jge
jle
les
jl
out
into
outsb
adc
stos
lret
mov
add
stc
adc
xchg
shr
fldt
pop
es
std
add
pop
movb
xlat
sub
mov
repz
loopne
cmp
inc
jmp
xor
or
add
or
sbb
add
sbb
add
xchg
xor
movsl
cmpsb
lods
and
rolb
sbb
mov
shlb
push
sbb
js
dec
out
call
jge
pop
addr16
cmc
dec
or
mov
mov
jbe
leave
sub
xor
pop
xor
mov
cmc
popf
jno
test
testb
add
mov
push
inc
add
push
add
mov
mov
test
pop
push
pop
fcoml
icebp
addb
lock
pop
das
inc
add
mov
xlat
ret
mov
jae
clc
mov
data16
mov
push
into
add
repz
inc
pop
dec
xlat
aad
jo
add
add
xchg
xchg
cmp
or
inc
lahf
xchg
mov
xchg
xor
das
xor
and
adc
add
imul
jnp
xchg
cmp
sub
movb
xchg
jge
sub
xchg
xchg
cld
pop
or
pushf
lods
add
daa
mov
xchg
xor
xchg
cmpsl
and
in
fs
lea
gs
add
adc
movsb
xor
aaa
iret
mov
lret
mov
lret
clc
pop
ss
cmp
mov
push
cmp
jns
repnz
loopne
lock
aas
mov
lods
mov
aas
stos
sbb
aam
add
pop
push
and
addr16
aad
add
push
imul
mov
cwtl
jnp
fst
ljmp
mov
out
into
lods
out
int3
loop
ljmp
int
shl
adc
adc
xchg
imul
sbb
out
add
and
in
sbb
push
cmp
or
add
popw
lock
lcall
jp
add
sbb
jbe
out
stos
xor
lret
mov
cmp
dec
popf
scas
add
cmp
cli
test
sbb
fistpll
push
xor
sbb
icebp
mov
mov
add
mov
cmp
lahf
fsubrl
sbb
movsb
and
mov
add
cmpsb
insl
push
mov
adc
jl
or
push
cmpsb
shlb
add
inc
dec
cltd
lret
lcall
and
aad
xchg
ret
adc
inc
ljmp
sub
aad
sahf
shrl
ret
rcrb
jmp
movb
mov
imul
pop
aam
icebp
jae
sub
js
out
inc
mov
add
addb
mov
movsb
cltd
mov
push
add
or
in
dec
test
dec
lods
dec
scas
lret
jo
add
in
add
iret
push
aam
xor
add
cmovg
pop
sarl
loope
jge
mov
add
ds
addb
repz
stos
loop
out
lods
add
adc
jb
push
test
in
sahf
and
sub
decl
pop
leave
stos
outsl
shll
add
adc
jns
repz
xor
out
mov
dec
loop
test
push
sbb
push
jbe
int
in
mov
in
std
mov
add
incb
scas
sar
xor
cmpsb
lods
mov
or
bound
popa
jnp
sahf
loopne
push
out
xor
sub
fstpl
xor
mov
push
sbb
cltd
js,pt
mull
add
fwait
dec
lock
dec
jecxz
popf
out
mov
add
fcomip
inc
in
lahf
cmc
mov
xor
add
pop
nop
sahf
push
rcll
stos
sub
inc
test
xor
sar
jo
pop
lods
fisttpll
jecxz
int3
pop
xchg
scas
cmp
add
dec
cmpsb
pop
dec
xchg
les
outsl
fcoms
push
mov
lea
add
repnz
pop
clc
and
dec
sbb
addb
mov
dec
and
mov
and
add
out
jb
add
lods
sbb
cmpsb
xchg
cmpsl
addb
push
push
mov
sbb
add
sbb
lahf
mov
test
movsl
mov
pop
leave
ljmp
push
inc
add
in
lods
roll
lods
inc
add
add
jg
add
inc
xchg
rcll
pop
rolb
push
jno
jge
and
addb
ret
lahf
push
out
inc
in
enter
fisttpll
jns
add
cmp
repnz
add
add
inc
add
cmpsb
sbb
std
and
pop
push
and
pop
addb
adc
cmpsb
stos
insl
popa
pop
lea
outsl
adc
and
add
pop
daa
and
add
cmc
mulb
add
dec
popa
cmp
or
shrl
pop
bound
and
rolb
shr
insl
jmp
and
imul
imul
mov
push
movsl
sub
in
mov
ja
push
mov
add
inc
push
insl
mov
in
clc
aam
enter
xchg
mov
or
test
jb
add
jo
push
call
les
pop
popa
gs
lahf
outsb
and
mov
or
sbb
dec
mov
jg
add
imul
andl
stc
or
jae
test
cmp
add
orl
inc
adc
sub
mov
inc
add
pop
and
xor
and
add
daa
lret
scas
data16
jns
mov
jno
das
and
or
loop
mov
mov
leave
sub
test
pop
sti
push
jnp
pop
mov
push
add
in
inc
add
mov
xor
les
sti
popf
lahf
adc
push
xchg
xor
adc
add
and
stc
and
inc
stc
mov
lret
sbb
movsb
cmp
xor
das
in
std
ret
mov
dec
push
fldenv
dec
pop
push
fistps
adc
mov
push
xor
mov
fcmovu
mov
insb
xchg
std
insl
into
ss
fcomp
fs
sub
push
cmc
sahf
and
gs
add
addb
pop
xlat
pop
lahf
repnz
and
iret
out
repnz
shll
sbb
daa
movsl
pop
loopne
lods
add
jp
add
sti
hlt
ret
sbb
adcl
jb
insb
std
in
bound
scas
les
ljmp
aad
test
sbb
cli
ss
jmp
scas
fimull
fistpll
mov
push
jb
add
push
decb
mov
scas
dec
xor
push
addb
xorl
pop
jne
jecxz
les
dec
xor
add
popa
jno
test
scas
into
xlat
cmp
adc
and
hlt
pop
mov
xchg
and
les
push
popa
xor
dec
cltd
or
sti
dec
gs
inc
add
imul
add
jbe
xor
in
inc
add
jmp
add
mov
out
pop
adc
sub
fildl
pop
pop
push
add
pop
sub
xchg
cmp
push
les
cmp
inc
repnz
pop
mov
xor
gs
ljmp
mov
dec
leave
rolb
lahf
mov
add
imul
nop
inc
add
fdivrs
cwtl
sbb
inc
add
icebp
xchg
mov
lret
mov
outsb
frstor
ficoms
pop
jo
sbb
push
adc
or
add
je
cmp
mov
scas
lahf
xchg
sbb
outsb
push
sbb
pop
add
dec
xlat
inc
addb
add
or
mov
pop
and
flds
pop
push
adc
cmp
mov
daa
int
imul
push
cmp
adc
in
push
popa
add
or
sub
lcall
jb
mov
int3
cmp
inc
int
cmpsb
out
outsl
mov
ret
sub
xchg
popa
or
paddusw
sub
sub
fcoms
jl
add
pop
mov
push
shll
and
cmp
add
adc
hlt
mov
das
jne
add
stos
adc
in
mov
pushf
sarb
add
mov
leave
jae
push
lret
push
inc
jl
mov
xor
fstps
or
jmp
add
insb
mov
add
xchg
xchg
cltd
sbb
leave
cmpsb
repnz
jbe
add
xor
ds
dec
cmc
jbe
jmp
fwait
pop
icebp
out
movsb
dec
jmp
arpl
ds
mov
es
bound
js
imul
out
adc
xchg
jge
repz
bound
xchg
fwait
xchg
and
jbe
add
pop
mov
push
xor
push
rcll
mov
data16
jge
cmp
add
lahf
hlt
adc
and
and
jecxz
xor
insl
xor
mov
ret
push
xor
nop
dec
xlat
lods
and
mov
mov
jle
pop
jl
mov
mov
pop
sti
xchg
or
add
stos
in
mov
xor
ficompl
arpl
adc
mov
faddl
ds
sub
push
in
jle
pop
push
les
mov
in
fisubl
jae
sbb
pop
fwait
leave
pop
dec
sub
or
js
fdivl
icebp
jb
lea
aaa
iret
xchg
xchg
xchg
push
aas
jbe
jbe
jge
fimull
jle
jmp
mov
aaa
jge
rorl
lcall
sahf
xchg
inc
add
jae
cld
cmp
push
mov
inc
add
mov
into
mov
fsubrs
mov
nop
lock
ret
es
add
sbb
call
xor
repz
mov
pop
cs
fsub
mov
adc
insl
or
jecxz
mov
les
xchg
insb
mov
movb
jbe
ror
out
add
scas
or
add
adc
add
dec
push
push
enter
and
pop
ja
loope
shlb
aad
mov
mov
lds
xchg
push
out
movsb
popf
dec
push
cmp
aaa
jl
or
inc
add
and
int
scas
push
cmc
leave
mov
dec
add
in
sub
xchg
add
test
bound
cltd
jo
add
imul
cmpsb
lock
adc
mov
fcompl
dec
pushf
adc
push
and
push
add
fidivl
push
enter
cmp
sbb
adc
add
lcall
imul
cli
arpl
iret
in
xor
push
and
ss
test
jge
mov
jns
sbb
sbb
adc
fwait
jo
outsb
xchg
add
imul
add
add
mov
jne
add
jge
inc
add
loop
mov
pop
mov
sbb
aas
and
mov
in
outsl
xchg
ljmp
and
dec
pushf
jnp
stc
int3
xchg
cmpl
or
test
pop
xchg
out
rolb
nop
add
or
stos
mov
push
add
cli
sbb
sbb
divb
add
add
jno
add
lods
and
push
jle
push
inc
add
push
mov
add
pusha
add
hlt
outsb
mov
mov
cmp
or
pop
fistpl
ficoml
rcrb
xor
ficomps
push
mov
scas
cmpsl
movsl
sahf
lds
jns
push
sub
cs
push
xchg
cmpsl
fstpl
pop
in
sbb
inc
stos
pop
inc
test
add
lret
mov
cs
fidivl
sbb
mov
out
test
add
jb
xchg
cwtl
mov
ficoms
in
sbb
add
icebp
and
cmc
sbb
push
xchg
mov
add
add
lret
jnp
add
add
inc
pushf
fistl
sub
lret
and
comiss
and
push
rcr
lods
jb
xchg
addb
xrelease
daa
frstor
and
push
mov
aas
push
test
imul
popf
mov
ja
stos
sarb
sbb
xchg
add
fwait
daa
jge
dec
mov
jl
mov
cmp
pusha
add
add
mov
add
jl
add
fwait
movb
gs
outsb
and
push
flds
add
add
xchg
into
lret
inc
jo
xor
add
xchg
loopne
lods
dec
push
outsl
and
xchg
daa
mov
pop
cmp
in
pop
mov
jecxz
lds
or
sub
and
mov
sahf
cmpsl
or
or
dec
fwait
lods
or
daa
pop
add
out
jle
scas
test
cmp
insb
dec
movb
add
add
movsb
dec
sbb
outsb
mov
filds
pop
daa
rcrl
stos
jge
les
repz
push
or
aaa
or
and
cwtl
xchg
movsb
fs
inc
adc
cmp
jb
xlat
lret
test
jbe
ret
xchg
lea
int3
push
xchg
popa
sbb
lock
lock
int3
les
inc
in
cwtl
cmp
add
inc
add
xchg
adc
jae
stos
push
push
popl
pushf
mov
cmc
rcll
add
std
pop
sahf
push
dec
loope
push
enter
add
jmp
pop
mov
repz
aad
add
cmc
popf
cwtl
and
add
aad
inc
sbb
jno
das
in
xchg
fistpll
sbbl
aas
pop
das
pop
mov
push
cmp
add
adc
int
push
xchg
es
mov
add
pop
or
testb
mov
xchg
movsb
lds
dec
rorb
rcrb
or
clc
insl
pop
or
mov
add
loopne
outsl
clc
inc
add
dec
imull
cmc
mov
xlat
dec
mov
sbb
addl
add
add
mov
into
add
ja
push
mov
and
push
daa
xchg
sub
imul
jecxz
call
and
push
mov
sti
xor
push
sub
sahf
add
jo
mov
pop
shl
xor
add
cmp
mov
xlat
int
sbb
aas
loope
inc
add
and
pusha
add
ret
pushf
jle
push
dec
or
jge
sbb
mov
scas
xor
sahf
mov
sbb
insl
or
pop
mov
push
xor
adc
sub
jecxz
push
sarl
loopne
add
or
jge
test
lcall
mov
dec
out
std
and
fildl
sahf
mov
in
jns
dec
daa
fstps
pop
jae
aas
mov
loop
enter
add
mov
adc
jae
cmpsl
sub
movb
movb
rolb
movsb
insb
inc
cli
enter
add
in
mov
imul
or
sub
xchg
shll
out
mov
int
fstpl
cmp
mov
pop
cmp
add
xor
insl
loope
mov
bound
sbb
idivb
fistl
cmpsl
jmp
movsl
int3
int
mov
xchg
jns
xor
push
mov
add
mov
or
imul
jo
movb
in
in
roll
and
mov
outsb
pushf
fdivl
enter
sub
jbe
sub
and
dec
insb
mov
xchg
nop
sub
ret
add
popa
mov
test
es
mov
cmp
xorl
jnp
repz
pop
cld
je
addr16
and
jl
int
inc
add
xor
aaa
fbld
xchg
xor
dec
in
test
add
mov
xlat
mov
js
dec
cmc
jle
push
jbe
jmp
lea
xchg
inc
add
out
sub
popf
mov
add
dec
mov
mov
cmp
mov
ljmp
popl
arpl
mov
sbb
push
inc
jae
jae
sbb
lods
ss
sahf
int3
rcll
jmp
es
dec
xchg
repz
add
jl
sub
jb
aas
in
jne
cmpsb
test
mov
jle
cltd
sub
sub
add
rcll
hlt
lods
lock
inc
add
jne
sbb
sbb
imul
js
mov
cwtl
mov
lods
mov
mov
add
xchg
jae
dec
pop
dec
fucomip
out
mov
dec
pop
in
cwtl
push
into
mov
mov
in
jle
mov
cli
inc
add
and
jl
and
daa
decb
add
movb
pushf
ret
test
incb
stos
stos
es
mov
pop
mov
cmp
jl
les
ds
inc
add
and
sub
mov
stos
test
shl
xor
enter
cmp
movsl
fiadds
push
add
arpl
lahf
aad
mov
insl
xchg
fwait
insb
mov
pop
lock
aam
rcl
pop
pushf
xchg
push
clc
orl
bnd
mov
xchg
xchg
test
pop
pop
inc
mov
add
add
je
popa
je
jge
xor
movntq
pushf
push
push
inc
rolb
and
or
sbb
mov
and
xor
xchg
pop
enter
pop
mov
dec
std
jge,pt
sub
addb
push
enter
xor
push
cmp
cmp
add
fidivrs
fcompl
out
aad
and
mov
mov
jne
cmp
xchg
jns
or
mov
call
add
cmp
popf
imul
fwait
inc
outsb
pop
pop
sub
sti
insl
sbb
das
inc
add
dec
les
mov
aas
mov
popa
sbb
push
imul
xor
xchg
sbb
add
lods
inc
add
pop
es
mov
dec
iret
push
scas
outsl
cs
pop
or
psubsb
sbb
cltd
and
pop
xchg
sub
cmc
adc
out
fstl
and
mov
enter
repz
scas
sbb
jnp
rcl
insb
mov
movb
enter
pop
jge
movsl
ret
pop
loopne
aam
add
xchg
dec
icebp
dec
dec
mov
add
test
sbb
and
xchg
xchg
or
pop
add
test
insb
add
leave
lcall
adc
lea
fs
mov
les
outsb
addb
sbb
add
icebp
dec
mov
push
sub
inc
and
or
jmp
rcll
add
ss
mov
js
mov
jp
mov
and
bound
mov
es
mov
jle
adc
push
xchg
jns
add
out
ret
icebp
nop
xor
add
push
mov
cmp
add
lock
cmp
add
or
push
add
xor
add
push
jae
negl
add
cmp
lods
cmp
mov
mov
fnstsw
jl
or
test
pop
into
test
add
cli
adc
sahf
movsb
pop
out
ficoml
add
add
or
add
aad
iret
xchg
outsb
or
call
lock
fdiv
jle
mov
cmpsb
dec
fsubl
repnz
jae
addb
add
inc
jb
add
push
mov
dec
mov
add
mov
gs
jge
imul
jle
inc
add
out
mov
mov
imull
dec
mov
xchg
lret
cmp
lret
out
sbb
cs
mov
lcall
gs
int3
push
xor
negb
stc
jns
mov
mov
sbb
mov
popa
pusha
add
fs
or
into
stc
fmuls
or
add
outsl
out
mov
jecxz
pushf
sub
subl
mov
arpl
sbb
cmp
movsl
mov
movsw
sti
sbb
adc
in
addr16
addb
xchg
sub
adc
aaa
xor
cltd
into
mov
addl
sti
movb
cmpsb
out
mov
and
jle
stos
or
cs
jns
push
cmp
and
loope
sub
pop
imul
pop
jne
sub
adc
inc
add
int3
dec
pop
pop
sbb
repnz
add
push
lods
inc
add
pop
pop
hlt
jmp
push
adc
addr16
sbb
inc
mov
add
add
xchg
mov
fwait
das
flds
ja
xchg
jns
fwait
lcall
mov
dec
rorl
pop
call
cwtl
jg
xor
dec
sbb
add
out
add
xchg
add
jp
dec
push
cmp
bound
lret
pop
js
lea
add
lret
insl
sub
loope
xchg
xchg
jmp
jge
in
incl
pop
dec
inc
add
pop
mov
pop
pop
leave
pop
xchg
xchg
inc
add
xor
cmp
loope
push
sub
int3
add
mov
inc
ror
cltd
xchg
or
inc
add
push
ret
mov
inc
xor
fiaddl
add
xchg
mov
adc
add
sub
cmc
xchg
addr16
add
mov
sub
jbe
mov
jbe
sub
inc
cltd
rolb
loope
pop
gs
movsl
jno
add
enter
inc
add
push
data16
movb
and
mov
jbe
fildl
insb
iret
lock
adc
popf
lods
imul
dec
jns
adc
lods
sar
aas
push
inc
add
inc
add
popf
lret
mov
add
or
imulb
pop
enter
add
adc
push
out
xor
das
outsb
inc
add
add
out
je
inc
addb
enter
mov
ljmp
add
cmp
inc
add
aad
add
popa
sbb
add
mov
xchg
mov
lret
out
bound
dec
dec
mov
and
xchg
push
pop
rcrl
das
addb
mov
add
cmpsl
or
arpl
cltd
movsb
push
and
mov
jb
lcall
nop
cld
enter
xchg
xchg
mov
xor
rcll
imul
mov
push
pop
and
push
add
add
push
shlb
add
in
insb
scas
enter
dec
push
add
add
das
lods
mov
jno
xchg
dec
adc
cs
aad
add
cltd
sub
aam
in
mov
add
and
out
xor
xor
je
jecxz
add
push
or
cmp
adc
fistps
movb
pop
mov
in
dec
mov
ret
push
push
pushf
jns
pop
fadd
add
or
xor
sahf
jb
test
rcr
mov
push
mov
daa
inc
add
xchg
add
fnstcw
lcall
ret
lahf
call
and
out
push
mov
mov
fidivrl
enter
sbb
insb
adc
mov
mov
neg
and
fwait
aas
dec
inc
add
cmp
inc
add
adc
xchg
fimuls
jge
lock
loopne
push
sub
aam
pop
or
cmpsl
add
mov
push
push
mov
imul
add
adc
add
mov
jbe
ficoms
xor
popf
ss
daa
in
jo
ret
add
