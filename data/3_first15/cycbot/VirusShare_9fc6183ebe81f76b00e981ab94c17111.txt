cmpsl
neg
dec
inc
add
add
push
add
fldcw
pop
imul
mov
sahf
xor
fiadds
pop
pop
xchg
add
scas
cwtl
adc
sub
and
pop
lods
push
add
add
add
push
aad
add
add
and
dec
dec
jg
out
gs
loop
and
sub
mov
xchg
add
add
add
popa
mov
cli
test
nop
add
mov
sub
add
in
adc
leave
sub
add
xor
add
sbb
add
loop
pop
inc
push
jnp
adc
scas
mov
nop
add
add
fldt
popf
dec
pop
sbb
add
sbb
or
push
roll
add
mov
add
popa
adc
sub
add
mov
sar
repnz
fucomp
popa
dec
popf
jno
ret
dec
je
and
je
add
sbb
sub
xor
add
add
pop
pop
push
add
add
mov
cli
or
sub
xchg
and
mov
add
jnp
sbb
mov
jp
xchg
jg
aaa
outsb
add
sub
data16
dec
leave
movb
inc
add
sahf
scas
vpackssdw
mov
cld
pop
mov
mov
pop
xchg
add
add
push
add
add
add
add
pop
stos
fsts
mov
lcall
sub
add
nop
add
inc
add
fstpt
add
inc
lea
add
popa
adc
addb
add
cld
mov
add
jmp
mov
mov
add
add
outsl
mov
add
add
pop
imul
loope
add
jae
mov
mov
sub
jne
fstl
out
test
add
adcl
add
push
add
mov
addb
pop
sub
dec
inc
add
addr16
add
mov
add
aam
std
xchg
inc
add
in
xor
mov
xor
add
adc
add
outsb
adc
rolb
fldenv
sub
inc
mov
fisttps
ljmp
mov
js
add
pop
dec
shr
fs
add
dec
pop
cmp
add
lret
aas
pop
push
add
add
mov
inc
add
fcoms
insb
mov
add
mov
addb
aas
lret
movb
movsb
add
xchg
clc
in
rolb
push
add
pop
add
xchg
add
out
inc
add
add
mov
add
cmp
rolb
mov
je
or
add
add
xlat
inc
push
add
adc
jno
mov
jp
add
in
ret
cld
jecxz
dec
arpl
cmpsb
add
push
mov
pop
pop
stos
dec
sahf
pop
cmp
sub
pop
xchg
icebp
imul
loopne
lcall
mov
inc
out
add
add
add
sub
inc
add
add
ficoml
jbe
push
mov
sub
push
push
push
cld
call
sub
mov
cs
movzbl
cmp
ss
lea
push
lea
push
lea
push
lea
push
push
call
cmp
je
es
lea
es
cs
es
call
test
jne
jmp
push
lret
icebp
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
lea
lea
sub
add
mov
sub
sub
push
pop
push
je
jmp
add
add
or
add
mov
add
add
pop
addb
out
cs
mov
insb
and
mov
add
jge
idivl
ljmp
stos
ljmp
fisubrl
movsl
add
mov
add
add
ret
lods
outsl
popa
mov
cmp
add
sub
bound
mov
xchg
push
add
jge
lods
ss
lods
sub
add
add
in
mov
and
test
add
mov
outsl
xchg
rolb
es
orl
add
jle
addb
das
repz
sahf
fwait
lret
jns
add
fstp
shll
test
pusha
add
push
leave
and
mov
add
jle
arpl
add
or
dec
ljmp
add
add
scas
inc
add
pop
js
mov
push
pop
movb
inc
lods
arpl
testb
add
je
adc
imul
add
mov
xchg
pop
xorl
xchg
incb
icebp
cwtl
lret
leave
add
push
jmp
cwtl
outsl
pop
or
lods
push
mov
outsl
pop
ljmp
adcl
faddl
xor
inc
mov
call
pop
mov
or
add
clc
ftst
add
add
lds
add
sbb
mov
rcll
sub
sbb
add
bound
mov
add
add
lds
pushl
lods
dec
push
pcmpeqw
nop
add
cmp
mov
loopne
inc
xlat
test
dec
lret
out
pop
cmc
loope
scas
cmp
cmpl
jb
andl
add
pop
lcall
icebp
std
in
fimull
push
addr16
lea
add
repnz
push
add
into
negl
data16
repz
jmp
cmp
jno
jo
repnz
cli
cs
lcall
pop
roll
aad
add
add
sbb
scas
mov
add
add
mov
dec
gs
leave
testb
add
int
add
xor
pop
pop
sub
dec
xchg
sub
inc
add
mov
lds
insl
mov
mov
movsb
add
pop
repz
add
inc
sarl
add
add
lahf
mov
lea
add
add
add
add
stos
add
push
movb
push
lret
pushf
repz
fwait
inc
add
cld
cs
rcrl
orl
pop
imul
and
mov
jge
ret
add
roll
lea
adc
or
fstps
and
mov
add
pop
std
data16
and
and
mov
test
add
mov
mov
call
outsb
movsb
add
mov
mov
mov
rolb
add
pop
jo
inc
add
jns
call
repz
add
pop
push
add
sbb
xchg
lods
inc
add
lds
add
push
adc
std
or
rcrl
dec
jns
js
add
mov
mov
daa
or
lcall
xchg
xor
dec
enter
movb
add
jle
add
add
add
add
add
mov
add
add
or
jno
add
pop
sti
push
add
mov
rolb
stos
adc
loope
push
add
add
aaa
inc
mov
add
xchg
add
lret
pushf
sub
out
in
xchg
sarl
pop
jmp
ljmp
jnp
inc
test
into
mov
add
push
add
push
pop
rolb
mov
shrl
jno
mov
dec
jp
les
pop
gs
dec
addb
add
repz
inc
or
mov
add
roll
mov
fildl
add
jg
push
add
addb
sbb
add
fsub
sbb
add
add
sub
aad
and
mov
iret
add
mov
scas
cmp
aam
imul
add
xchg
add
fcmovnb
es
add
mov
add
pop
sbb
bound
mov
add
push
data16
jno
or
lcall
add
outsb
cmp
mov
add
ds
xchg
xor
xchg
add
lahf
dec
mov
add
add
in
shl
in
add
add
mov
cmpsb
add
or
test
adc
in
scas
mov
mov
leave
loopne
add
mov
mov
pop
jns
nop
add
imul
mov
jge
aas
in
sbb
je
add
inc
pop
data16
fldt
bound
mov
add
sub
ret
cli
gs
mov
jne
inc
mov
add
mov
in
adc
jo
stos
aaa
push
inc
add
je
mov
movsl
rolb
gs
sub
mov
or
imul
dec
xchg
fwait
hlt
add
mov
sbb
mov
add
ret
add
rolb
add
mov
jns
adc
lcall
add
jecxz
dec
jns
mov
lret
fistpll
sub
bound
mov
das
loop
daa
xlat
aad
lcall
and
add
pop
cmpsl
stc
rolb
push
ret
cli
out
jmp
lcall
testb
add
js
dec
fucom
lods
testb
icebp
incl
xchg
mov
jnp
add
mov
add
mov
add
mov
add
add
add
add
cli
popf
outsl
mov
mov
xlat
push
push
add
leave
mov
or
add
mov
mov
push
add
mov
shll
add
loop
enter
bound
mov
mov
add
rolb
add
repz
sti
out
jge
mov
add
sbbl
pop
cmc
or
add
sbb
ljmp
adc
pop
ds
roll
leave
inc
cmc
out
in
js
fdivrp
test
add
add
les
push
add
xchg
pop
stc
inc
leave
adc
lea
add
movb
pop
add
dec
push
jge
sub
add
push
lahf
fwait
outsl
popf
push
add
test
fstpt
dec
out
test
mov
pop
sbb
push
add
push
pop
mov
jno
mov
sbb
int3
jo
pushf
adc
dec
jb
ret
shrl
stos
sub
add
mov
mov
inc
add
xchg
add
mov
sub
or
imul
add
mov
or
popa
jge
ja
int3
mov
jae
jmp
stc
jge
lret
out
addb
sti
scas
je
bound
mov
add
fldenv
mov
decl
es
add
decl
in
mov
add
add
ljmp
lds
arpl
add
cli
ss
jne
push
add
stos
test
mov
stos
sub
add
in
jmp
add
in
adc
stos
mov
push
outsl
out
mov
fidivl
inc
inc
and
sbb
or
stos
cmc
into
icebp
aaa
addb
jo
das
xchg
inc
cmpsl
les
shrl
and
insb
sahf
mov
add
add
mov
jg
cmp
ss
lods
lds
sbb
add
add
test
rolb
or
or
popf
dec
les
push
add
jecxz
sub
rolb
jbe
xchg
cmp
mov
sbbl
add
cmpsl
loopne
jp
insl
cmpsl
sbb
lock
mov
sub
mull
fst
sub
dec
mov
add
repnz
out
add
add
mov
mov
pop
jne
mov
mov
mov
std
pop
out
cmpsb
add
fmulp
dec
cs
pop
or
sub
std
lahf
movb
mov
add
mov
inc
add
mov
addr16
pusha
add
and
mov
mov
xchg
xchg
or
daa
bound
mov
and
mov
fstpl
in
rolb
mov
jl
add
mov
add
add
pop
add
add
jle
cltd
or
and
lods
cmp
pop
in
fnstcw
jmp
data16
add
mov
lods
xor
dec
lcall
lret
rcrl
sbb
lcall
out
clc
adc
mov
scas
lods
xor
sub
aaa
mov
adc
add
add
add
mov
and
mov
lcall
andl
ljmp
repnz
ja
xor
add
mov
add
add
add
cwtl
xchg
add
int
je
inc
add
subl
pop
leave
imul
add
cmp
add
rolb
inc
add
jbe
sub
add
std
xlat
insb
in
test
sbb
lods
mov
add
xchg
add
and
mov
jnp
or
cmp
add
sub
xlat
mov
add
bound
mov
mov
dec
and
cltd
cmp
mov
mov
add
in
jge
pop
inc
mov
push
add
lcall
add
cmp
add
popa
pop
xor
pop
int
adc
sbbl
addb
sbb
in
popf
rcll
movsb
add
pop
or
and
mov
jb
sbb
repnz
add
stos
aam
or
add
adc
xchg
in
push
sub
push
or
adc
pusha
add
or
jo
inc
in
xchg
inc
sti
mov
movb
add
push
add
cmpsl
inc
in
movsl
add
fwait
hlt
add
inc
add
add
imul
jl
pusha
add
cmp
and
add
add
data16
lcall
push
add
add
out
jmp
jo
inc
add
addb
aaa
rolb
add
sti
loope
sub
push
add
and
mov
ss
mov
add
xchg
pop
dec
jl
mov
add
cmp
insl
testb
jne
add
add
outsl
mov
add
and
ds
add
jg
jg
add
data16
mov
rolb
add
inc
push
add
add
or
inc
add
mov
mov
jg
aam
mov
push
add
add
das
std
fsubrl
sub
dec
aaa
jmp
add
cltd
and
mov
popf
pop
mov
inc
cltd
out
lods
or
add
add
cmp
into
pusha
add
inc
add
mov
add
popa
mov
adc
xchg
jnp
addb
clc
cmpsl
lods
adc
add
jnp
fdivrp
dec
fwait
adc
or
xor
xchg
or
ds
negl
add
and
mov
sbb
jge
dec
and
mov
add
add
pushf
lods
push
outsb
adc
cs
fcmovb
add
inc
add
add
jmp
addl
add
mov
stc
rolb
icebp
jae
add
nop
add
aam
not
add
mov
add
add
add
mov
add
adc
cmp
add
orl
add
pop
test
add
dec
xor
inc
jnp
add
mov
rolb
stos
sti
sbb
or
addr16
scas
out
leave
or
movsl
add
add
mov
mov
lock
add
inc
imul
add
gs
sahf
addb
add
cmc
inc
add
or
mov
add
add
out
inc
mov
mov
into
addb
mov
add
jns
add
repz
jl
frstor
sub
stc
jmp
outsb
jno
add
mov
inc
add
inc
or
mov
push
sbb
aad
movb
add
inc
add
cmp
cwtl
incl
fcomp
cmp
fisubl
add
add
add
add
adc
sarl
bound
mov
xor
sbb
mov
jb
sbb
fcmovne
sti
adc
aad
xor
ud2
jae
add
dec
cmpsb
add
sbb
add
xlat
add
adc
mov
lret
lret
inc
or
add
add
pop
jne
sbb
in
addr16
mov
mov
mov
push
add
call
add
mov
aas
mov
pop
inc
jp
int
cmp
cmc
in
mov
outsb
mov
mov
adc
testl
adc
xchg
add
les
xchg
jo
mov
aam
aad
inc
add
mov
add
adc
loope
in
jne
jecxz
add
or
and
inc
add
cmpsl
cli
scas
and
mov
pop
lahf
int3
jmp
push
stos
dec
movsl
push
adc
xchg
add
addr16
in
xor
add
mov
add
add
adc
scas
loop
call
movsb
add
sub
add
mov
add
lock
push
add
and
ljmp
pop
popa
cmpsl
xchg
mov
jle
add
add
pop
cmp
test
add
add
dec
jmp
and
imul
pop
outsb
adc
xchg
add
sub
add
inc
add
xor
and
lods
xor
mov
mov
cld
je
dec
jnp
add
cmp
add
sti
push
or
push
add
lds
mov
and
push
add
add
add
jg
add
mov
dec
push
add
ja
add
adc
xor
fidivrs
cli
stos
and
mov
add
cmp
sbb
mov
jnp
xor
add
insb
jae
sub
add
mov
mov
add
pop
js
add
inc
add
fmuls
ret
cmpsb
add
les
mov
and
je
xchg
add
jnp
add
test
pop
jmp
xchg
add
add
fstpt
add
lahf
vpxor
stc
or
add
fwait
pushf
in
sbb
add
add
ljmp
pop
rcr
inc
out
in
movlps
arpl
test
cmp
and
mov
add
inc
pop
cmpsl
push
add
popf
mov
mov
out
sahf
pop
roll
mov
add
mov
add
mov
add
xlat
iret
pusha
add
mov
add
mov
add
add
add
add
cmp
movb
cmp
add
bound
mov
add
js
pop
and
or
mov
push
add
cld
jo
xor
xchg
jl
loope
add
test
call
jge
xchg
add
rolb
adc
xchg
add
add
add
push
add
xchg
add
cwtl
jae
mov
rorl
add
add
jb
inc
add
push
add
add
outsb
fucompp
adc
dec
testb
divl
xchg
add
add
adc
mov
arpl
stc
andl
add
lret
lds
xchg
mov
add
mov
add
mov
push
insl
mov
xor
int
and
jae
push
add
add
jl
sti
gs
dec
push
stos
ficoms
pusha
add
sub
add
sahf
movsb
add
sti
rolb
ret
addr16
lock
fucom
add
cmp
sti
ja
stc
push
pop
mov
std
into
repnz
cmc
rolb
jnp
mov
add
and
fistpll
dec
push
xchg
add
std
pop
pop
sub
lret
push
cmp
int
and
out
push
cwtl
jne
sub
add
bound
mov
add
fldl
add
lods
int
dec
or
lahf
mov
push
add
add
inc
add
nop
add
add
add
add
push
add
bound
mov
push
add
add
lret
add
mov
mov
loope
adc
push
add
pushf
jne
jp
addb
adc
add
add
cmpsl
imul
xchg
std
nop
add
add
pop
pop
jae
sub
mov
adc
test
popf
jecxz
popf
mul
add
add
bound
mov
mov
add
movsb
add
data16
sar
push
movsb
add
sahf
mov
add
add
mov
test
inc
cli
stos
jo
mov
add
pushf
fildll
jg
mov
aas
mov
cmp
add
cmpsb
add
lcall
mov
fwait
das
shl
in
loope
movsl
mov
add
lahf
dec
and
div
add
add
fwait
dec
out
xor
std
mov
add
add
mov
push
xchg
add
fldenv
mov
add
mov
xchg
lcall
and
add
loop
jnp
and
add
ljmp
add
enter
cmc
mov
add
mov
fiadds
scas
cmovle
add
add
out
aam
outsl
nop
add
hlt
add
push
add
inc
stc
test
and
lcall
aas
push
add
add
add
adc
xchg
add
xchg
add
in
cs
insl
mov
or
je
xchg
add
add
stos
add
xchg
add
dec
sbb
add
jae
add
xor
and
jo
pop
movsb
add
fldl
pop
addb
add
or
fsubrs
add
repz
test
pop
scas
sbb
inc
jp,pt
pop
pop
push
add
push
fwait
rolb
les
xor
jp
pop
or
sub
adc
aam
int
add
arpl
aaa
pop
mov
cli
dec
rcr
addb
add
enter
lods
pop
and
add
add
or
sub
cld
aaa
ds
test
cld
xchg
aam
sub
loope
add
inc
add
xchg
add
mov
mov
add
jg
lds
adc
stos
inc
mov
mov
js
add
lret
dec
inc
mov
and
or
dec
cmp
add
push
dec
cmpl
stc
pop
mov
add
mov
fcompl
add
and
inc
add
jne
mov
and
mov
adc
mov
push
ljmp
cmp
out
test
add
or
adc
aad
int3
cmpsl
mov
add
ds
mov
add
mov
add
add
fisubl
add
mov
add
mov
lock
push
add
add
pushf
mov
pop
mov
stos
push
sub
sti
and
mov
imul
push
cmovae
add
lret
out
sahf
push
loop
xor
test
arpl
fisttpl
jmp
inc
inc
add
nop
add
add
icebp
lea
add
cmp
mov
gs
add
add
seto
inc
add
xchg
outsl
jnp
cltd
mov
movb
add
add
mov
add
cs
sahf
fisubs
add
mov
cmc
inc
add
add
mov
add
add
jle
add
add
xor
add
sbbl
add
js
insb
jp
outsl
inc
add
add
ja
fistps
addb
add
add
sbb
add
mov
fildll
add
test
dec
xor
cli
aaa
inc
add
push
call
imul
xor
push
add
rolb
xchg
cld
add
mov
test
roll
mov
add
mov
mov
outsl
jae
fwait
mov
xchg
push
addb
js
add
jo
mov
jae
pop
mov
into
lods
xchg
and
loop
arpl
push
add
jae
mov
add
addb
add
sbb
lcall
stos
push
add
inc
add
cmpl
sub
mov
sub
add
mov
add
xchg
mov
add
addb
aam
addl
sti
scas
and
mov
adc
scas
jne
lds
add
lcall
data16
mov
xchg
add
je
add
mov
sbb
addl
cmp
jo
inc
mov
ja
mov
data16
int
add
ljmp
adc
mov
iret
inc
aad
or
add
faddl
mov
add
push
test
or
sti
in
adc
addr16
mov
filds
stc
sbb
add
in
dec
sahf
hlt
add
stc
pop
je
mov
dec
stc
sub
add
inc
jmp
add
jecxz
stos
out
les
mov
fwait
insl
pop
or
add
mov
test
mov
int
add
mov
bound
mov
mov
add
mov
ret
add
mov
mov
int
add
xchg
lret
sbb
test
imul
cmp
mov
test
add
mov
test
add
int3
push
add
mov
into
inc
inc
add
add
mov
add
int3
adc
mov
sub
add
mov
bound
mov
mov
mov
push
add
cwtl
mov
pop
jg
outsl
xchg
js
add
push
inc
add
push
bound
mov
xor
push
pop
pop
adc
rolb
cmp
inc
add
xchg
push
add
gs
add
add
lods
clc
data16
jmp
gs
mov
test
insl
in
xor
repz
icebp
push
add
out
mov
mov
add
icebp
dec
mov
jno
or
pushl
dec
adc
jbe
jmp
add
scas
dec
cwtl
mov
arpl
jae
add
test
push
push
mov
lret
add
mov
and
add
add
enter
lods
out
inc
test
push
leave
ficoml
add
mov
mov
add
add
and
mov
jge
push
add
add
add
js
popf
dec
fisubl
mov
jmp
add
adc
push
jb
daa
inc
add
int3
xchg
lcall
push
add
add
add
add
insl
out
aam
mov
add
scas
or
aaa
adc
fdivrs
push
repz
mov
mov
mov
xchg
add
fwait
adc
mov
fnsave
cltd
xlat
mov
inc
dec
fyl2xp1
lcall
sub
mov
mov
arpl
add
aad
cmp
add
pop
rolb
dec
js
mov
add
jl
mov
mov
testb
add
mov
xor
mov
add
mov
dec
add
sahf
mov
lods
inc
add
add
add
insb
ficomps
xchg
mov
sbb
adcl
jle
pop
popa
dec
or
add
mov
push
aas
pop
xchg
add
jecxz
pusha
add
jbe
mov
mov
and
mov
add
test
js
dec
imul
dec
lret
cwtl
fiadds
pshufw
push
add
ret
sub
sub
add
push
add
add
popa
ljmp
fs
aaa
shll
cmp
addb
jmp
add
call
lahf
insb
outsl
jnp
mov
cmp
insb
pushf
sub
add
js
jne
testb
push
movsl
and
icebp
xchg
add
lods
arpl
xchg
and
cmp
add
adc
insb
mov
fs
pop
les
sbb
sbb
jmp
and
mov
aam
mov
rolb
rolb
add
dec
sbb
add
push
add
rolb
push
add
mov
daa
in
mov
test
je
adc
cmpsl
mov
mov
mov
xchg
add
jo
lahf
push
add
sub
mov
jb
out
cmpsl
sar
adc
jne
lds
add
xchg
ret
add
mov
aas
jg
push
add
add
data16
add
push
fisubs
add
add
xor
xchg
add
mov
push
pop
mov
adc
xchg
mov
add
adc
das
out
ret
test
add
scas
pop
mov
mov
add
andl
pop
stos
ja
xor
add
add
dec
enter
mov
or
dec
or
add
adc
xor
add
scas
mov
int
mov
loop
int3
add
add
pop
xchg
and
xor
mov
add
scas
fsts
sub
add
aas
or
add
sbb
int
push
add
sbb
add
xor
movsl
popa
repz
pop
jle
add
add
xchg
mov
mov
push
add
push
add
cwtl
les
add
add
sti
jo
sub
in
rolb
ret
xor
cmp
add
add
sbb
inc
ljmp
mov
mov
add
addr16
popf
out
inc
push
add
add
cmpsb
add
mov
or
fcomi
add
out
std
sahf
int
repnz
add
pop
nop
add
nop
add
xor
fwait
dec
jbe
jo
data16
add
add
adc
sbb
sbb
push
lret
add
aas
lds
jg
sbb
ret
sub
mov
add
ds
mov
add
add
rcl
aad
add
sbbl
pop
add
add
add
test
sahf
leave
imull
add
cmp
and
cmp
xchg
dec
movb
mov
les
cmpsl
xchg
add
gs
pusha
add
inc
add
push
out
push
and
mov
add
adc
dec
in
adc
fwait
popa
fucomip
xchg
sbb
add
sbb
clc
clc
fisttpl
lods
jmp
mov
sub
mov
xor
pushf
inc
add
add
jl
mov
add
addb
xchg
add
add
dec
xor
add
inc
add
add
add
mov
add
stos
pop
les
out
pop
cmp
xchg
inc
pop
or
test
inc
add
add
jb
add
loopne,pn
or
imul
inc
sbb
mov
add
mov
add
pusha
add
add
les
adc
insb
outsl
and
leave
fbstp
add
add
inc
add
add
sbb
add
jp
dec
fwait
movsl
push
add
add
mov
add
jno
outsl
into
mov
add
dec
dec
xchg
rolb
sahf
leave
in
cmp
outsb
cmp
addb
sub
arpl
sti
cmp
pop
mov
out
and
mov
add
inc
push
add
add
lods
in
ds
mov
add
push
add
inc
jne
ja
push
fwait
mov
scas
pop
cli
push
cs
mov
invd
and
push
add
push
jns
add
mov
sti
adc
pop
cmp
lahf
cmc
dec
cmpsb
add
les
sub
cmp
arpl
add
cld
pop
call
mov
add
mov
add
add
add
xchg
in
sub
jns
add
in
xchg
push
sub
dec
clc
pop
sub
int
rolb
push
mov
add
mov
mov
xor
dec
popa
jo
push
jl
add
add
lock
add
mov
jg
movsb
add
fstp
add
cld
xor
push
add
cmp
pusha
add
mov
inc
add
inc
add
mov
aam
mov
icebp
enter
aad
dec
jl
xrelease
pop
out
pop
jne
stos
in
mov
std
fadd
inc
mov
mov
cmp
test
add
addb
inc
int3
dec
jb
mov
jnp
add
add
xchg
movb
aaa
testb
rolb
pushf
pop
test
and
mov
mov
add
xor
mov
push
add
pop
popf
mov
add
xchg
and
xchg
loope
jecxz
add
pop
mov
sub
addr16
adc
add
out
mov
ljmp
std
enter
outsb
test
pop
sbb
mov
add
jmp
mov
iret
fcmovu
push
add
push
frstpm(287
ja
push
add
jmp
push
add
add
cwtl
stos
lea
mov
mov
add
hlt
add
pop
data16
ret
add
add
push
add
je
dec
sub
add
stos
add
add
cmp
add
mov
dec
add
add
add
movb
add
aaa
out
lock
int3
add
and
add
adcl
mov
xlat
pushf
fwait
incl
add
xchg
jle
out
push
add
sbb
add
movsl
lods
pop
mov
outsb
test
add
les
fnsave
out
cmp
add
cmc
push
add
add
lods
xor
clc
sbb
and
dec
emms
jns
push
add
pop
add
add
xchg
add
add
mov
dec
mov
hlt
add
jmp
inc
add
rorl
mov
add
popa
jl
add
daa
lcall
repnz
add
lods
dec
clc
inc
add
add
mov
data16
rolb
sub
jg
mov
int
mov
add
pop
pop
pop
jo
pop
xchg
mov
add
lcall
push
lock
and
mov
cli
icebp
les
pop
add
test
push
push
and
mov
adc
add
ljmp
xchg
ret
mov
in
dec
cmp
adc
add
imul
in
or
mov
repz
add
lods
popa
insb
dec
out
xchg
addb
sahf
cmp
ss
add
dec
insl
adc
pusha
add
test
addb
xor
add
int3
sub
testb
push
cmp
das
or
mov
testl
add
pop
jns
outsl
adc
cmp
jbe
mov
push
pop
lcall
sub
push
incb
xor
invd
lahf
dec
lods
js
pop
aam
cld
rolb
pop
in
add
out
loop
mov
clc
in
add
add
push
add
mov
xchg
or
int
add
add
mov
xor
in
adc
icebp
ret
dec
in
loop
scas
jae
hlt
add
xor
xchg
scas
dec
push
add
lahf
dec
ja
add
push
add
mov
ret
push
addb
jmp
add
mov
cmp
add
inc
mov
sbb
mov
dec
scas
and
mov
add
or
add
or
add
clc
movb
icebp
cmp
ljmp
and
mov
add
sbb
or
sub
mov
aaa
xchg
in
push
push
aaa
or
into
jb
dec
fcmovb
add
push
cli
xchg
lock
loope
mov
push
mov
pop
loope
xor
add
sbb
mov
xchg
add
add
mov
icebp
test
or
add
and
push
orl
xor
add
push
imul
adc
lods
mov
inc
jle
arpl
inc
in
inc
in
in
xor
hlt
add
addr16
cmpsl
push
add
and
xor
loopne
aaa
imul
enter
shrl
or
das
sub
add
lret
adc
dec
lret
ljmp
mov
add
and
sub
out
push
notl
pusha
add
in
jle
mov
call
mov
or
not
loopne
insl
mov
add
add
pop
fldl
add
pop
sbb
ret
add
mov
inc
push
add
test
jnp
mov
gs
add
push
add
add
jmp
addb
add
add
mov
rcll
or
jl
lea
out
add
mov
scas
sub
int
pop
stos
inc
add
lcall
cli
arpl
add
add
hlt
add
ds
nop
add
popa
test
iret
inc
sub
adc
ljmp
add
mov
add
and
add
sbb
push
push
add
daa
or
xor
mov
add
sub
add
ja
ja
lods
push
add
add
add
dec
dec
rolb
fwait
adc
add
add
add
or
cmp
xor
cs
add
out
mov
in
lds
add
add
add
add
sbb
negl
rolb
push
add
add
add
add
dec
js
jmp
add
jmp
rolb
ljmp
inc
mov
jge
add
fiadds
adc
push
add
push
add
add
jmp
add
test
jno
add
jns
scas
das
dec
mov
sbb
add
add
out
fdivl
add
sarl
cmp
mov
movb
cmp
add
add
popf
aam
jbe
ficomps
push
add
cmp
add
inc
or
inc
add
or
add
fisttps
out
jmp
jg
add
add
add
inc
pop
adc
mov
cmp
or
pop
or
jp
adc
add
add
outsb
lds
add
mov
aam
cmp
pop
mov
sub
cmc
or
xchg
loopne
cli
cmp
cmpsl
jne
mov
add
fwait
pop
push
int3
xchg
fdivr
pop
iret
mov
cwtl
mov
mov
add
rolb
fbstp
stc
adc
imul
or
nop
add
inc
and
pop
js
add
fadds
add
mov
mov
repz
lcall
sub
sub
add
mov
jnp
js
adc
pop
movb
add
mov
orl
add
cmp
jae
add
repz
das
leave
addl
mov
add
xchg
rolb
jno
adc
mov
add
jmp
ret
fstps
sub
adc
and
mov
int
dec
clc
push
addr16
xchg
push
outsl
rolb
pop
loopne
xchg
in
stc
add
mov
sub
jnp
enter
lahf
loope
ds
add
inc
mov
add
les
add
int
xchg
jns
dec
add
in
aas
adc
xchg
add
mov
add
sub
rolb
add
and
mov
or
add
int3
xchg
dec
add
adc
dec
add
xchg
add
arpl
sbb
testb
adc
pop
movb
insb
lahf
pop
movsb
add
mov
add
mov
push
add
inc
add
add
rolb
push
call
add
add
add
sbb
rolb
jecxz
test
addr16
aaa
push
add
add
add
arpl
mov
or
add
outsl
push
inc
add
cmp
push
lods
lods
out
into
repnz
pop
inc
add
push
add
jg
xchg
inc
ret
out
xchg
jnp
movb
add
push
add
fisubs
jl
xchg
add
loope
test
mov
jp
add
mov
add
dec
ja
jbe
inc
add
xchg
leave
mov
add
insb
lock
fbstp
scas
arpl
add
pop
inc
add
add
cmpsl
jae
jg
add
fstl
repz
test
add
cmp
iret
mov
jp
add
add
push
je
push
add
xor
jb
imul
popa
addb
pop
xchg
lcall
cmp
push
add
cmpsb
add
add
dec
sub
inc
or
jp
add
mov
mov
add
ds
sbb
add
cmp
icebp
js,pt
jp
aas
mov
add
add
jo
add
add
fisubrl
jno
movsb
add
imul
jmp
add
pop
imul
add
inc
add
loop
jns
loope
popa
andl
xchg
outsl
mov
push
imul
cmp
adc
lret
add
out
mov
add
pop
mov
sbb
and
mov
fldl2t
dec
jecxz
adc
jp
add
add
movsb
add
cmp
and
divl
pop
mov
fwait
inc
dec
loopne
xchg
or
mov
lahf
sti
pop
fidivl
cmp
subl
aaa
sahf
lea
sbb
add
add
and
mov
jbe
sub
add
push
add
add
sub
add
inc
add
add
inc
test
inc
add
adc
stc
repnz
aaa
dec
xchg
dec
or
ret
mov
js
add
imul
add
lret
add
inc
sbb
xor
cmpsb
add
push
add
mov
mov
loopne
lahf
mov
aad
add
add
add
add
cmc
fchs
add
mov
ja
or
add
jge
add
add
xor
les
mov
and
dec
sahf
xchg
add
add
xor
or
ret
jmp
xor
add
pusha
add
add
mov
cwtl
inc
fnsave
push
xchg
add
je
dec
cmpsb
add
pop
ja
or
or
push
add
inc
or
mov
add
clc
clc
push
movb
and
and
add
add
fisubl
lods
jmp
add
add
inc
add
add
add
pop
xor
and
mov
ficoml
pop
dec
lock
or
jmp
add
mov
test
in
fnstenv
pop
jl
sub
lahf
mov
cmp
add
add
orl
lds
mov
bound
mov
add
push
icebp
addr16
lahf
rolb
cmp
add
dec
add
icebp
add
add
pushf
lcall
clc
repnz
xchg
jns
ljmp
ret
out
inc
add
cmp
lock
add
stc
jp
add
adc
push
add
add
add
sarl
add
add
mov
adc
fiadds
cmp
fld
pop
jl
cmp
lcall
std
add
add
xor
out
lret
negl
add
sub
mov
pop
add
in
sub
bound
mov
or
jnp
pop
lret
fwait
imul
pusha
add
and
mov
mov
into
int3
pop
loop
loope
lock
jae
xor
jne
xchg
adc
or
mov
dec
stos
xlat
rolb
add
clc
movb
lea
cli
add
mov
sub
sbb
xor
arpl
out
inc
push
movb
and
mov
clc
dec
hlt
add
push
mov
add
movsl
inc
add
xchg
pop
jns
mov
stos
sbb
ja
mov
rol
das
xchg
add
push
cmp
test
repz
add
sbb
push
push
add
pushf
hlt
add
add
add
jmp
add
in
pop
cmpsl
loopne
xchg
add
mov
sbb
shrl
add
inc
add
test
call
cmp
push
add
movsl
xor
add
add
scas
daa
add
xchg
jp
aas
lahf
mov
inc
add
add
push
sbb
sub
push
add
add
popa
jl
add
dec
clc
repnz
and
sub
mov
data16
and
push
inc
add
mov
sbb
mov
and
xor
pop
and
leave
pop
call
dec
aam
les
movb
jno
std
xchg
test
or
add
add
push
add
push
add
movsl
sub
cltd
test
arpl
add
add
add
cmp
repnz
adc
mov
jecxz
mov
add
add
lods
out
fstl
or
mov
orl
out
or
add
xchg
cmp
add
cmpl
mov
xor
mov
fdivl
add
clc
aad
push
add
xchg
lods
cltd
cmc
pop
xchg
add
and
mov
add
sti
jmp
test
popa
imul
sti
movl
movsb
add
add
loopne
loopne
fistpll
mov
mov
mov
sbb
pop
out
push
mov
dec
test
shll
and
mov
daa
push
repz
push
out
or
add
mov
push
add
mov
jno
or
inc
add
add
nop
add
add
lret
xor
add
pop
into
xchg
and
mov
add
cmpsb
add
mov
add
add
mov
add
jp
jno
add
out
pop
fidivs
add
in
inc
add
sub
mov
mov
into
rolb
jb
jno
add
cld
xchg
xor
shrl
cmp
jns
adc
cmp
and
mov
xchg
outsb
push
add
mull
xor
cmpsl
aad
pop
mov
jmp
add
scas
add
push
add
ret
dec
ret
sbb
mov
add
add
mov
in
sbb
cltd
test
int3
jb
ret
sub
sbb
pushf
mov
mov
adcl
or
ljmp
add
adc
scas
idiv
bound
mov
push
add
loope
mov
addb
ret
pop
cmp
add
mov
push
add
stc
bound
mov
mov
add
ret
mov
out
xchg
lea
jns
lret
mov
jl
lds
movsb
add
add
mov
mov
add
cwtl
popf
fsub
pop
mov
mov
std
lret
add
mov
add
add
add
mov
xchg
add
mov
movb
sahf
mov
pop
fildl
sbb
mov
mov
stos
mov
sarl
ror
cmp
sbb
jge
or
loop
jne
push
add
adc
cmp
test
imul
sahf
lods
iret
insb
dec
shl
movsl
rolb
xor
xor
add
mov
les
fstl
or
setl
jecxz
add
lds
add
jb
shr
add
mov
push
push
and
push
add
mov
add
gs
add
mov
daa
pop
cs
fsubp
add
inc
push
or
inc
in
add
xchg
jae
int
pop
push
dec
cmpsb
add
add
mov
adc
mov
test
add
add
testb
inc
add
xchg
add
cltd
xor
add
mov
add
mov
xchg
cmp
dec
cmp
add
mov
push
inc
add
mov
roll
enter
out
std
xor
jno
push
add
xchg
add
add
iret
jo
in
and
adc
ret
push
add
rolb
cmp
push
add
add
add
mov
ret
add
jo
cmc
jb
adc
fdivrs
add
mov
leave
out
add
add
mov
inc
add
repz
movsl
aam
out
mov
mov
add
mov
enter
fidivs
inc
push
inc
pop
sub
cmp
jne
sbb
add
xchg
adc
rcl
dec
and
jb
lret
adc
jp
lcall
lret
add
pop
outsl
mov
cld
mov
shll
mov
adc
into
mov
and
adc
sub
add
iret
sub
jno
loop
add
movb
out
add
sub
cmpsb
add
add
cmp
add
mov
aad
lahf
dec
stos
imul
add
push
add
inc
cmpsb
add
sbb
push
out
stos
mov
add
pop
add
mov
movb
int3
inc
add
pop
sub
fsts
add
mov
cvtpi2ps
pop
pop
mov
add
sub
add
push
add
adc
add
mov
mov
ret
pop
popa
cs
lret
and
xchg
push
add
addb
lcall
adc
xor
jbe
test
mov
mov
aas
jne
add
add
add
mov
and
jae
in
js
mov
add
mov
add
mov
cld
jg
push
add
xor
cmp
sbb
or
in
or
add
xchg
inc
pop
mov
add
xchg
pop
jge
mov
fcoml
push
add
inc
add
sbb
add
sub
dec
mov
add
push
jecxz
xchg
int3
sbb
lret
cmpsb
add
add
add
add
add
or
xchg
add
daa
in
rolb
add
xor
dec
add
mov
movb
push
add
pavgb
mov
push
add
loope
fiadds
add
and
add
add
jmp
add
add
sbb
dec
xor
mov
add
data16
jns
add
mov
push
add
nop
add
mov
scas
mov
cmp
add
repnz
add
in
jo
push
add
push
add
mov
loopne
popa
repz
mov
or
add
pop
lret
mov
xchg
sbb
mov
mov
sub
cli
jbe
dec
stc
sub
pop
outsl
clc
out
push
cwtl
push
add
and
add
inc
add
sbb
cmp
xor
stos
lret
cld
sbb
add
mov
add
int3
jmp
add
das
aaa
clc
and
mov
add
popf
into
mov
mov
add
add
lret
test
jmp
push
sbb
stos
mov
push
add
lea
mov
add
xchg
popf
cmp
add
sub
inc
add
add
dec
inc
jg
arpl
cmp
movsb
add
add
xor
push
das
xchg
and
sub
dec
add
mov
repz
pop
and
mov
or
mov
mov
ds
imul
inc
add
pop
add
aaa
inc
add
loop
pop
testb
add
jle
jne
stc
xchg
sub
rolb
adc
test
aam
insl
cmpsl
jl
mov
and
mov
mov
push
add
sub
add
add
mov
add
fidivs
mov
aaa
mov
pusha
add
dec
in
cwtl
or
movsl
pop
mov
add
dec
jns
push
add
push
jno
stc
push
cmp
lret
add
dec
add
push
cmp
add
bound
mov
add
pop
add
add
mov
add
push
or
xor
push
lods
movb
arpl
add
data16
jmp
dec
cmp
ficoms
arpl
gs
add
mov
stos
xlat
xchg
mov
mov
les
push
bound
mov
outsb
aad
ljmp
call
xor
jnp
jo
adc
sub
daa
xor
shl
add
add
repnz
add
add
out
dec
fistl
add
push
and
mov
push
dec
lock
rolb
in
jnp
test
mov
and
imul
fcompl
repnz
inc
add
test
or
int3
xlat
mov
or
push
and
sbb
out
sub
jo
imul
add
in
push
sbb
or
pop
mov
push
and
imul
aas
iret
fs
cld
inc
add
add
mov
jp
movb
xchg
add
mov
push
add
add
pop
push
and
mov
aad
mov
mov
cltd
cmp
mov
pusha
add
pop
mov
mov
pushf
dec
fldt
bound
mov
add
mov
add
cmp
sub
repnz
ret
add
push
add
mov
fstpt
push
add
adc
ss
add
out
movb
push
add
push
pop
mov
inc
iret
adc
add
sti
fsubrs
add
push
inc
add
mov
jecxz
add
outsl
mov
mov
ljmp
mov
xchg
add
add
repnz
in
fsub
add
mov
js
fistpl
inc
add
mov
dec
movsb
add
movsl
jns
in
mov
push
test
jecxz
shl
add
in
and
lock
and
mov
add
mov
pop
adc
repz
push
scas
sub
and
add
call
aad
in
int
push
mov
loop
adc
mov
cli
jmp
adc
or
addb
inc
add
add
ja
add
pushf
mov
arpl
sbb
mov
or
pop
lods
adc
ror
add
add
mov
fidivrs
mov
add
or
std
mov
aam
daa
test
add
add
mov
pop
aaa
aad
pop
lods
clc
inc
jb
push
repnz
jl
dec
xor
gs
jmp
inc
add
rcrl
pop
cli
js
sbb
fidivl
push
add
sub
fwait
cs
add
add
add
add
adc
or
xchg
testb
in
add
aaa
jo
fsubs
scas
test
sbb
add
mov
sbb
pop
stos
cmc
in
std
or
sbb
repnz
mov
addps
das
mov
fst
add
mov
test
std
addl
rolb
add
nop
add
sbb
fcmovb
add
addb
lret
ljmp
sbb
add
cmp
add
dec
fwait
fwait
lods
lahf
aas
mov
inc
out
into
add
add
mov
not
xchg
jne
les
sub
aas
jmp
jge
sub
xlat
add
notl
add
in
mov
nop
add
push
add
adc
add
faddl
add
sub
sti
pusha
add
arpl
mov
add
add
cmp
lock
sahf
repnz
fmull
sahf
into
ret
ja
add
add
add
dec
adc
inc
mov
cmp
add
cli
testb
lcall
xchg
add
add
stos
testb
jno
add
dec
dec
jmp
push
add
push
add
add
rolb
cmpsl
sub
add
cmp
add
add
ret
pop
pop
fsubs
dec
stos
dec
divl
xor
sbb
mov
add
add
jmp
add
add
add
lods
inc
add
mov
inc
jae
and
xchg
inc
cltd
pop
pop
xchg
mov
or
mov
cmp
xchg
push
add
and
inc
add
sti
loop
out
dec
jb
mov
mov
lds
inc
in
fsubr
test
pop
rolb
or
add
mov
inc
add
dec
sahf
adc
nop
add
add
add
add
xor
fxch
jnp
mov
das
scas
cmp
xchg
fcmovnu
je
std
in
stos
adc
sbb
testb
pop
aad
add
lahf
arpl
mov
ljmp
add
fisubrs
fwait
push
add
jmp
loop
testb
push
add
sub
jns
push
adc
sub
sbb
add
ret
sub
mov
aad
leave
mov
sti
add
or
add
push
add
ficomps
or
movl
mov
sbb
add
inc
add
adc
sahf
enter
sti
jo
insl
imul
pushf
subl
add
pop
ficoms
add
sbb
cmp
inc
popa
loop
das
mov
add
push
add
fadds
jecxz
inc
add
jnp
add
adc
add
add
rolb
cld
je
mov
and
add
lods
mov
fsts
jo
out
add
test
mov
cwtl
and
test
pop
int
xchg
add
add
sub
mov
push
add
cltd
clc
das
in
pop
rcrl
ds
scas
and
add
testl
add
add
enter
add
popf
add
test
addb
and
mov
add
add
add
mov
hlt
add
mov
enter
add
mov
and
xchg
add
addb
sbb
add
add
popa
pop
and
mov
mov
ljmp
sbb
dec
add
mov
add
inc
popf
pop
inc
add
arpl
cs
xchg
popa
pop
adc
jge
cmp
lea
xor
loopne
cld
mov
mov
iret
andl
add
aam
adc
leave
ljmp
pop
leave
pop
mov
push
push
mov
pop
lret
add
arpl
arpl
add
pop
sbb
and
mov
scas
add
mov
sub
lcall
and
mov
pushf
out
int3
dec
aaa
add
adc
rolb
icebp
lcall
add
out
sbbl
inc
add
add
mov
sbb
dec
cs
and
mov
add
push
cmpsl
dec
xchg
add
pop
pop
cmp
adc
outsl
xchg
repnz
out
xor
add
repz
and
dec
in
sbb
mov
add
lock
dec
xor
rcl
add
loopne
fdivl
rolb
sub
add
and
inc
pop
mov
jp
jb
xor
add
addb
or
roll
add
add
add
add
aam
notl
jle
mov
outsb
fucom
add
test
add
or
in
jnp
rolb
int
add
in
sbb
add
add
dec
insb
scas
imul
cmpl
inc
scas
iret
dec
adc
add
add
cs
xor
adc
into
jmp
loope
fwait
mov
add
or
jmp
movb
cli
push
add
jo
cmpsl
lret
add
fistpll
dec
xchg
imul
jge
jo
fwait
jae
and
lahf
repz
dec
ret
cmpsl
in
call
mov
icebp
ffree
jne
rolb
push
xor
data16
imul
and
fsts
stos
sbb
add
jmp
add
xchg
add
add
cmp
fcomps
imul
sbb
sbb
cltd
shrl
pop
inc
add
add
lods
cmp
add
adc
xchg
xchg
add
add
testb
add
add
mov
add
in
pop
and
lahf
fldenv
xlat
sub
loopne
mov
pop
daa
push
push
test
add
cltd
pop
xlat
mov
stc
pop
mov
bound
mov
pushf
gs
add
add
sahf
test
imul
xchg
add
lock
ljmp
or
add
jle
or
push
add
add
in
sub
cld
js
add
add
add
add
push
add
and
mov
mov
xor
cmp
push
add
fisttpl
xchg
add
add
sbb
sti
pop
dec
jae
sbb
cmc
add
lea
jnp
sub
adc
test
addr16
cmp
add
add
add
add
inc
cmp
add
inc
fsubrs
add
mov
xor
jno
add
cwtl
add
mov
test
mov
int3
cmp
cmpsl
inc
add
push
loope
add
add
pop
add
mov
cltd
cmp
pop
xchg
lcall
sub
add
sub
add
jle
add
add
imul
movb
cmp
push
loop
sub
add
add
jnp
add
add
mov
lahf
ljmp
add
add
add
jecxz
lcall
cli
push
aaa
push
lret
jg
loop
adc
or
jmp
push
sbb
jmp
adc
jp
dec
dec
jle
or
popa
insb
adc
mov
mov
scas
sti
jae
add
sub
bound
mov
pop
ljmp
push
mov
jge
outsl
sbb
and
mov
add
add
rolb
sbb
mov
add
rolb
mov
mov
les
jnp
xchg
dec
aam
lea
or
adc
pop
sub
add
dec
icebp
or
add
xchg
add
mov
sbb
cli
sbb
in
test
sti
fwait
gs
cmp
fnstsw
lea
int
jecxz
insl
popf
adc
xchg
add
jmp
add
jmp
mov
inc
add
jmp
adc
add
stc
outsl
mov
pop
sahf
or
and
add
insl
rolb
push
add
add
add
add
add
push
cmp
jnp
sub
pop
hlt
add
xchg
add
repz
xchg
pop
arpl
mov
enter
add
add
mov
or
add
nop
add
mov
add
aas
dec
stos
ret
pop
xchg
movsl
int
dec
push
add
loopew
xchg
roll
cmp
add
add
add
add
rolb
sbb
lods
loop
fildl
out
in
in
scas
loope
int
mov
add
add
out
ljmp
cld
cli
mov
add
add
add
dec
inc
and
add
add
popa
mov
mov
pop
std
movb
gs
lcall
adcl
outsb
stos
cmpsb
add
add
xchg
xor
push
add
mov
add
jle
add
pop
sti
jge
add
aas
jnp
popf
bound
mov
xorl
add
xor
adc
jmp
mov
imul
jae
pop
mov
xor
sbb
add
testb
fnsave
add
mov
add
cmpl
add
mov
sbb
pop
nop
add
push
mov
fadds
push
pop
mov
jns,pt
sbb
mov
xchg
add
or
ja
dec
fildll
js
add
xchg
int
or
or
mov
mov
test
jge
add
add
mov
fadd
inc
sti
scas
and
js
add
inc
out
push
add
add
push
add
add
js
adc
add
add
add
jns
sbbl
sub
in
mov
pop
into
mov
lahf
mov
add
daa
lock
add
mov
in
xlat
cs
pop
push
add
popa
iret
pop
pop
pop
in
mov
dec
rdtsc
xchg
add
jbe
and
jno
mov
mov
in
leave
out
or
xchg
add
fistpl
add
adc
sahf
adc
insl
jg
in
jns
lea
push
add
or
or
add
mov
add
add
movsb
add
lret
sbb
mov
add
mov
cs
inc
cmp
rolb
push
add
jge
jg
aaa
in
fidivl
add
jne
cmpsl
inc
jg
sub
add
push
xchg
jmp
rolb
pop
ss
mov
add
cmpsl
pop
jmp
enter
test
pop
add
mov
imull
and
mov
sahf
pop
pop
pop
lea
je
cmp
les
lcall
add
xchg
add
add
sbb
mov
add
add
mov
xchg
add
daa
jne
out
jo
leave
inc
cmp
cmpsb
add
xor
movsl
mov
cmp
rolb
dec
data16
fidivrs
push
icebp
sub
or
ds
sbb
insb
jmp
lea
aad
or
dec
inc
add
cmp
add
push
inc
into
jb
js
lret
mov
fimuls
out
add
add
mov
cmp
stc
in
dec
sub
int
add
inc
je
ljmp
jae
outsl
js
add
cmpsb
add
add
add
cmp
testb
push
cmp
and
popa
movzwl
and
daa
or
pmaxsw
mov
clc
add
add
mov
pop
arpl
sarl
mov
scas
mov
mov
add
add
jne
outsl
mov
jle
ficompl
xchg
add
mov
rolb
mov
add
enter
lods
sti
mov
jb
xchg
xchg
bound
mov
imul
sub
add
add
cmpsl
xor
pop
push
int3
push
add
mov
sbb
lea
or
sbb
loop
cli
repnz
iret
xor
add
loopne
jb
xor
mov
adc
add
fistl
add
sti
mov
popl
aad
add
inc
add
add
push
xchg
add
loopew
push
add
jge
add
ret
mov
std
and
mov
mov
ret
add
nop
add
iret
aaa
andl
mov
lcall
add
add
add
or
in
mov
mov
mov
cmp
add
jns
les
xor
cltd
fisubl
jmp
add
adc
jg
in
rolb
adc
mov
dec
sbb
dec
fbstp
dec
pushf
bound
mov
pop
and
mov
iret
and
adc
in
fildl
xor
jp
push
mov
imul
add
daa
aad
cmp
add
xchg
add
std
aad
mov
cs
inc
imul
or
add
mov
add
xchg
add
push
cli
sub
fcompl
addb
outsb
popf
sub
cmp
in
or
add
mov
out
add
mov
testb
add
repnz
fwait
add
inc
add
xchg
dec
inc
add
add
push
movb
xchg
add
movb
data16
mov
cmp
stc
or
inc
aaa
jmp
les
mov
mov
in
add
add
push
add
adc
lret
or
fildll
bound
mov
je
add
mov
fstp
rolb
mov
mov
and
das
rolb
or
add
add
add
mov
xor
mov
dec
stos
mov
pop
insl
pusha
add
add
pop
cmp
sbb
add
xchg
sbb
cmp
add
add
cld
jge
in
pusha
add
inc
mov
sub
pop
movsl
hlt
add
add
fldcw
xor
jecxz
cltd
fistpl
add
jp
mov
nop
add
add
sub
stos
push
js
add
mov
xchg
data16
nop
add
xor
adc
mov
jno
xor
sub
xchg
or
add
add
popf
mov
add
pushf
cld
stc
jns
in
and
sub
call
in
add
daa
cmpsl
push
and
dec
cmp
jo
addl
jmp
insl
stc
rorl
or
stos
jae
and
arpl
add
dec
iret
mov
add
inc
add
add
lea
push
add
push
add
dec
cli
xchg
add
inc
add
add
push
addb
pop
aas
push
fisubrs
sub
or
fldl
dec
stos
pslld
cmpsb
add
sti
mov
push
sub
dec
fiadds
testb
mov
outsl
push
add
add
lret
ror
in
popa
rolb
add
jo
add
add
inc
fstpl
mov
leave
rolb
or
data16
nop
add
movsb
add
add
dec
lock
sub
push
add
push
daa
jno
sub
xchg
mov
ret
mov
add
push
add
out
out
or
pop
xchg
add
mov
xor
mov
mov
sti
cwtl
mov
inc
cmc
mov
add
add
lcall
add
add
movsb
add
adc
ret
push
add
add
add
add
mov
mov
sbb
add
pusha
add
and
add
lret
pop
mov
adc
mov
sub
cmp
outsl
and
add
add
add
xchg
add
add
cs
and
sub
mov
add
mov
mov
dec
jecxz
jg
pop
add
cmp
mov
in
lods
gs
jecxz
cltd
std
jne
add
and
pop
push
xchg
add
mov
lock
addr16
dec
pop
clc
sub
add
vmread
inc
add
lea
xlat
dec
mov
ljmp
mov
rolb
xchg
das
lods
mov
pxor
or
aaa
xchg
add
ror
mov
pushl
add
add
add
imul
add
add
mov
loopne
mov
std
lds
lods
xchg
cwtl
hlt
add
test
adc
add
mov
dec
mov
jge
jne
scas
dec
adc
icebp
sbb
ret
icebp
or
lea
add
dec
lahf
lcall
lock
sub
mov
cmp
add
add
add
mov
lea
add
jns
add
aam
inc
sbb
repz
lds
lahf
push
iret
adc
cld
xchg
add
add
mov
inc
add
add
add
add
xor
ljmp
int3
sub
loopne
push
scas
or
mov
add
jp
test
ja
push
addb
cmpsb
add
dec
shl
add
mov
std
push
add
add
add
ja
ret
and
mov
fnstenv
add
cwtl
push
mov
push
add
mov
xchg
xlat
movsl
test
movsl
adc
aaa
and
pop
mov
xchg
inc
add
inc
add
cmc
sub
add
inc
add
add
dec
loopne
lahf
insl
xchg
mov
sub
sbb
mov
inc
add
add
dec
shll
or
add
add
aaa
int3
clc
sbb
xor
dec
nop
add
xchg
outsb
lahf
cmp
xchg
xor
inc
jb
inc
movhps
add
fstpl
enter
dec
cmpsb
add
add
add
movb
mov
movsb
add
mov
xchg
add
xchg
pop
addr16
push
test
fists
gs
add
xchg
add
dec
insb
cmp
test
and
mov
cmp
add
mov
sub
add
and
mov
mov
mov
mov
lea
add
dec
lret
or
js
pop
in
iret
aad
add
mov
add
add
fisubl
and
mov
push
add
sbb
add
aam
sarl
jo
icebp
shl
add
add
jecxz
mov
mov
pop
or
int3
dec
cmpsb
add
addb
add
repnz
fists
add
add
mov
les
adc
xor
in
add
inc
fcmovbe
add
hlt
add
cli
push
add
loope
je
ja
repz
mov
mov
test
and
rolb
testb
pop
leave
push
add
add
or
shl
xor
out
addb
add
rolb
loopne
pop
jmp
pushf
and
mov
leave
jno
js
add
pop
std
mov
sbb
rorl
lock
jb
jge
add
add
dec
or
mov
movsl
pusha
add
cld
pop
cwtl
addl
add
fimull
arpl
lds
call
addb
stos
mov
adcl
add
add
insl
xor
mov
fadds
xchg
add
inc
add
add
add
add
or
sbb
xor
cmc
sub
or
sbb
add
add
rolb
push
inc
push
add
mov
add
scas
lea
add
push
add
sub
push
add
testb
sub
xchg
mov
dec
test
dec
insb
dec
xchg
add
add
scas
pop
add
add
subl
dec
mov
add
cmp
add
cmp
pop
cld
xchg
fistl
add
arpl
add
add
lea
add
add
imul
fistl
mov
test
lods
fsts
mov
xchg
movb
lock
add
add
int
xchg
sub
sub
mov
je
dec
adc
mov
rolb
test
xor
cmpsb
add
pop
xchg
xchg
jle
int3
adc
xchg
out
push
xor
jno
add
pop
push
add
push
add
lock
jp
add
fsubl
xor
mov
add
push
mov
stos
add
in
clc
xlat
jge
pop
js
out
xchg
add
loopne
add
mov
push
add
rolb
out
ret
pop
lea
add
outsb
addb
pop
addb
repz
or
add
add
mov
std
mov
inc
add
nop
add
fbld
add
xor
add
xor
adc
stos
lret
push
and
mov
pop
adc
mov
inc
mov
pusha
add
movsl
dec
insl
jb
jmp
add
mov
ret
add
add
mov
fildll
inc
add
xor
add
sub
push
iret
pushf
push
cltd
cmc
mov
add
pushf
out
sub
mov
aam
lods
rolb
add
add
push
mov
jae
add
add
mov
in
je
int3
xor
xchg
sbb
fcoml
add
rolb
lret
int
inc
ljmp
adc
dec
jg
cs
lahf
push
cmp
dec
mov
movsb
add
push
add
lret
pop
xchg
data16
jne
add
jp
add
dec
jecxz
daa
mov
mov
add
lods
mov
movsl
enter
mov
mov
cmp
add
pop
xchg
xchg
add
call
mov
rcrl
xor
add
dec
sbb
or
pop
or
xor
aam
sub
xor
and
mov
adcl
test
test
jb
xchg
gs
jb
adc
cld
loope
pushf
sbb
movb
add
mov
add
cmpsl
mov
add
pop
xor
mov
fwait
dec
lea
add
add
and
mov
shll
push
add
movb
dec
xchg
add
je
in
std
idiv
cwtl
andl
lods
int
rolb
pop
int
pop
adc
push
add
out
fisubl
addl
cmpsl
push
icebp
sub
push
add
mov
add
pop
mov
bound
mov
or
add
cs
add
add
add
add
mov
add
ds
shll
mov
stc
das
mov
cmp
daa
or
mov
add
pushf
add
add
lahf
into
lahf
push
add
push
adc
add
fldl
add
add
sti
fidivl
insl
lret
xchg
stc
call
adc
pop
adc
and
dec
sti
mov
dec
add
mov
mov
push
add
add
inc
add
add
add
add
mov
add
sti
pop
mov
sarl
add
jns
inc
add
add
test
adc
aaa
xchg
add
mov
out
shrl
add
js
pop
jmp
add
dec
out
or
rolb
roll
mov
sub
add
add
sarl
add
movsl
adc
pushf
fucomp
nop
add
or
mov
adc
xor
sub
and
testb
pop
call
inc
xchg
add
je
dec
sbb
or
testb
int
jle
in
mov
xchg
cmp
cli
cmp
add
and
mov
cmp
add
or
mov
xchg
add
movsb
add
xchg
movl
xor
add
nop
add
add
das
mov
add
xchg
xor
pusha
add
loopne
pop
dec
pop
jmp
add
sbb
jno
add
jb
insl
ret
inc
or
add
add
inc
pop
ja
mov
jmp
mov
push
ficompl
rolb
mov
data16
add
inc
add
mov
out
add
or
aaa
rolb
inc
outsl
repnz
pusha
add
dec
rolb
addb
insl
pop
pop
mov
adc
inc
add
jmp
add
ficompl
jbe
iret
xor
sbb
add
add
subl
gs
int
rcll
add
pop
cli
push
add
fbstp
mov
jl
push
add
add
add
add
pop
or
mov
mov
and
add
mov
xchg
add
loop
dec
jbe
rcll
jmp
leave
xor
add
pop
mov
fnsave
add
add
imul
lock
cmpsl
push
add
add
add
call
jo
push
add
addb
add
in
dec
addb
add
subl
add
pop
lea
loopne
sbb
add
lret
mov
stc
pop
decl
and
mov
mov
outsl
clc
dec
loop
add
test
in
test
sbb
mov
add
xor
pop
subl
add
sahf
adc
and
mov
pop
repz
mov
add
and
pusha
add
sub
cmp
test
lret
fbld
popa
mov
xchg
xchg
rolb
ja
add
mov
cmp
scas
pop
testb
mov
cmp
xchg
mov
jno
sahf
push
add
hlt
add
cmp
test
dec
repnz
push
add
xor
push
loopne
inc
add
jns
add
add
add
mov
dec
sbb
dec
aaa
dec
cmp
add
or
sub
aas
mov
mov
sbb
sbb
sbb
mov
add
adc
cmc
jl
and
pusha
add
xchg
pop
pop
cmp
pop
popf
sbb
xchg
add
add
or
and
mov
imul
popl
outsl
xchg
add
mov
mov
fistl
rolb
les
cmp
xor
test
fistpll
sti
lret
in
add
push
add
add
add
sub
rolb
loope
add
gs
stos
inc
add
xchg
add
lcall
mov
mov
cwtl
bound
mov
dec
ret
sarl
fucomi
mov
push
das
add
inc
add
jbe
decl
mov
rol
add
add
jle
add
mov
jb
dec
sub
add
add
sbb
addr16
mov
add
adc
popf
stc
xor
or
add
push
pusha
add
stc
cltd
inc
add
xchg
add
inc
shll
loopne
sub
stos
in
xchg
das
lahf
js
int3
jae
and
mov
and
sbb
add
inc
add
add
call
je
shll
or
mov
push
add
xchg
mov
testb
add
xchg
mov
filds
int
add
xchg
add
fstps
mov
push
add
mov
in
dec
outsl
mov
cmpl
pop
adcl
jg
add
outsl
cmpsl
cmpsb
add
add
inc
lahf
push
add
fsubrs
sub
add
mov
mov
add
imul
push
mov
jle
add
dec
pop
xchg
mov
test
add
add
add
ffree
mov
pusha
add
addb
ds
sbb
mov
mov
pop
addb
pop
pop
stos
ret
je
inc
add
lcall
add
pop
or
push
pushf
test
xlat
lods
jbe
jmp
add
data16
jl
add
dec
adc
hlt
add
add
inc
add
push
pop
fxch
arpl
sub
add
add
jle
add
add
or
subl
loop
aad
add
mov
mov
test
jns
mov
lret
adc
or
mov
lods
push
add
pop
adc
mov
mov
sbb
xchg
add
dec
push
add
add
jnp
movsb
add
add
mov
pop
imul
add
mov
mov
or
int
mov
mov
lea
pop
push
add
outsb
das
and
mov
xchg
add
mov
cwtl
xor
cmp
add
mov
scas
test
and
add
add
lret
sub
ja
pop
xchg
add
add
add
add
dec
jle
stos
in
sbb
enter
roll
and
stos
mov
cwtl
fmull
stos
mov
ret
imul
lods
push
add
sbb
inc
add
cmp
fbld
add
add
add
mov
stos
cmp
push
xor
xchg
add
or
call
inc
add
xor
test
xor
add
pop
pop
adc
loope
mov
aam
push
add
sub
test
addr16
add
add
ror
aad
popl
jl
dec
pushf
xor
hlt
add
pushf
add
add
pop
fsubrl
cwtl
je
mov
pop
scas
mov
cmpl
add
or
add
loope
xor
mov
std
ret
add
jnp
add
push
xchg
add
jne
push
in
inc
add
dec
repnz
or
push
inc
scas
push
xchg
push
add
fsubrl
in
sub
outsb
xchg
mov
add
jge
popa
sub
cmc
pop
push
add
add
or
cwtl
fldt
sarl
dec
jne
fcoml
add
fcmovne
push
mov
add
inc
jg
push
xor
test
movsl
mov
movb
repnz
add
jae
add
add
enter
in
out
mov
add
fsubrp
ljmp
ficomps
pop
scas
mov
out
add
xor
mov
add
add
mov
add
add
cmp
imul
out
push
add
add
outsl
or
sbb
add
rolb
scas
adc
aam
push
push
add
sub
add
out
js
add
mov
push
add
addb
arpl
add
add
test
dec
dec
mov
lcall
xor
add
lods
mov
popf
jecxz
add
test
adc
rolb
scas
aas
insl
lock
mov
add
and
mov
adc
mov
add
addr16
mov
mov
add
or
mov
add
mov
xlat
pop
jb
rolb
pop
mov
test
nop
add
sbb
in
cmp
loop
xbegin
sti
push
add
xchg
mov
out
push
add
add
push
add
sti
dec
out
sti
insb
push
add
add
mov
cmpsl
in
push
add
add
test
add
add
mov
movb
push
add
add
mov
int
add
inc
add
repnz
jae
inc
lret
inc
ret
les
clc
repnz
jae
mov
fiadds
mov
xchg
ret
out
adc
mov
dec
mov
clc
repnz
jae
add
and
mov
sbb
outsl
loopne
mov
xchg
ret
leave
lock
fwait
cld
nop
jmp
add
add
inc
mov
pop
pusha
fwait
cld
nop
jmp
add
add
iret
icebp
mov
mov
fwait
push
push
mov
xchg
ret
lock
out
jbe
rcll
add
cld
nop
jmp
test
add
add
lea
cld
nop
jmp
lods
shll
add
xchg
add
clc
repnz
jae
lahf
add
or
mov
add
ret
test
add
add
mov
mov
jge
mov
nop
jae
lods
add
outsb
mov
clc
repnz
jae
add
lods
add
mov
addb
test
fwait
cld
nop
jmp
lock
add
nop
jae
les
addl
clc
repnz
jae
fisubl
test
and
sldt
add
popl
sbb
adc
outsb
add
push
mov
xchg
ret
add
test
clc
repnz
jae
fadd
adc
add
dec
or
repnz
jae
inc
add
add
je
jne
clc
repnz
jae
mov
adc
rclb
pusha
ljmp
add
add
add
jecxz
ret
push
mov
xchg
ret
icebp
add
dec
mov
push
mov
xchg
ret
add
shrd
adc
add
repnz
jae
fadds
add
cmp
or
push
mov
xchg
ret
add
xor
add
and
fwait
cld
nop
jmp
add
add
add
add
push
mov
xchg
ret
xor
add
add
add
repnz
jae
add
add
add
add
je
xchg
leave
add
add
add
inc
add
add
inc
push
add
mov
nop
jmp
add
add
divl
adc
add
repnz
jae
sub
xor
fists
repnz
jae
jmp
jbe
push
cmp
test
and
add
repnz
jae
out
sti
xor
dec
adc
jl
inc
add
add
add
jle
inc
push
mov
xchg
ret
mov
adc
repz
mov
xchg
ret
add
add
clc
pop
push
mov
xchg
ret
popl
add
out
test
push
clc
repnz
jae
add
dec
cltd
add
jmp
rolb
cmp
lock
add
add
add
repnz
jae
add
lods
add
add
add
repnz
jae
subb
test
dec
pushl
push
mov
xchg
ret
add
test
add
add
cld
nop
jmp
shrd
add
add
test
add
clc
repnz
jae
mov
sti
clc
repnz
jae
dec
ret
inc
xchg
add
and
pop
push
mov
xchg
ret
add
add
add
add
jne
clc
repnz
jae
add
into
pushl
clc
repnz
jae
lods
enter
add
mov
clc
repnz
jae
add
mov
push
clc
repnz
jae
add
mov
add
mov
repnz
jae
cmp
dec
std
mov
clc
repnz
jae
orb
cmp
add
clc
repnz
jae
enter
fcmove
dec
mov
clc
repnz
jae
test
stc
pop
clc
repnz
jae
loopne
add
add
inc
popa
xchg
add
pop
mov
clc
repnz
jae
add
je
sbb
push
mov
xchg
ret
add
add
or
fwait
cld
nop
jmp
add
loop
sub
nop
jae
test
dec
cmpw
fwait
cld
nop
jmp
add
jmp
clc
repnz
jae
add
add
add
les
pop
clc
repnz
jae
mov
add
or
adc
xor
test
add
add
repnz
jae
out
test
fwait
and
push
mov
xchg
ret
push
iret
mov
repnz
jae
sub
data16
add
pop
add
push
mov
xchg
ret
add
int
clc
repnz
jae
add
sub
add
mov
clc
repnz
jae
add
add
add
push
add
je
or
dec
clc
repnz
jae
enter
add
add
add
pop
clc
repnz
jae
mov
add
inc
add
add
add
pop
add
add
je
clc
repnz
jae
add
add
push
mov
xchg
ret
add
add
add
in
jae
add
mov
add
xor
lods
repz
add
clc
repnz
jae
add
iret
xchg
add
imul
clc
repnz
jae
add
adc
dec
fwait
cld
nop
jmp
inc
add
add
add
clc
repnz
jae
add
add
push
mov
xchg
ret
pop
loope
lahf
add
mov
clc
repnz
jae
cs
decl
nop
jae
fidivl
pop
lods
push
mov
xchg
ret
dec
pop
popl
add
adc
repnz
jae
ficoml
sub
cmp
fwait
cld
nop
jmp
add
imul
add
ret
add
iret
inc
xor
movsb
add
and
push
mov
xchg
ret
add
add
cld
nop
jmp
mov
add
add
add
clc
repnz
jae
add
add
cltd
data16
add
clc
repnz
jae
add
adc
je
fcomps
adc
add
repnz
jae
dec
add
push
mov
clc
repnz
jae
out
add
xor
add
clc
repnz
jae
add
ret
push
clc
repnz
jae
sldt
add
push
mov
xchg
ret
add
mov
clc
repnz
jae
sub
add
data16
cld
es
clc
repnz
jae
add
nop
jmp
add
mov
mov
clc
repnz
jae
add
ret
add
ret
xor
mov
into
inc
add
add
add
je
cli
push
mov
push
les
dec
xor
fbstp
addl
stos
clc
repnz
jae
add
mov
test
xchg
inc
add
adc
iret
loop
pop
push
push
mov
xchg
ret
add
add
pop
ret
fwait
cld
nop
jmp
lods
add
add
adc
popa
clc
repnz
jae
xor
add
fwait
inc
rcll
rcrl
mov
xchg
ret
add
add
les
cmp
clc
repnz
jae
cltd
add
add
repnz
mov
fwait
cld
nop
jmp
add
mov
clc
repnz
jae
add
add
add
repz
mov
fwait
cld
nop
jmp
xor
push
lahf
add
jne
mov
clc
repnz
jae
loop
dec
repnz
aas
adc
incl
lret
xor
sti
enter
mov
add
fwait
cld
nop
jmp
inc
les
add
and
mov
mov
xchg
ret
lret
lods
add
roll
rcrl
mov
clc
repnz
jae
add
add
add
and
add
and
add
add
out
add
inc
add
imul
add
add
repnz
jae
xorb
add
mov
or
jmp
out
add
ror
inc
add
add
pop
sub
xor
push
push
mov
xchg
ret
mov
enter
push
xor
fwait
cld
nop
jmp
sub
icebp
add
clc
repnz
jae
add
add
add
add
mov
xchg
ret
add
ret
add
add
imul
fwait
cld
nop
jmp
imul
clc
repnz
jae
add
lahf
add
add
dec
push
clc
repnz
jae
add
add
mov
add
adc
add
pushl
fwait
cld
nop
jmp
add
jmp
clc
repnz
jae
add
hlt
add
add
movzwl
clc
repnz
jae
out
mov
add
and
clc
repnz
jae
add
push
push
mov
xchg
ret
shrl
add
jge
clc
repnz
jae
xchg
add
add
xchg
add
and
add
repnz
jae
loope
xor
jne
jne
clc
repnz
jae
add
test
repnz
jae
add
or
mov
mov
clc
repnz
jae
add
stos
cmp
fwait
cld
nop
jmp
lods
roll
fwait
mov
push
fwait
cld
nop
jmp
xor
dec
data16
add
enter
clc
repnz
jae
out
add
jnp
push
mov
xchg
ret
add
mov
repz
repnz
jae
dec
add
jbe
add
cld
nop
jmp
cltd
sub
test
shl
jp
push
mov
xchg
ret
add
add
add
add
clc
repnz
jae
lods
fadds
lods
add
aaa
mov
add
sti
clc
repnz
jae
lods
inc
imul
outsl
xchg
fwait
cld
nop
jmp
xor
add
add
mov
test
sbb
add
repnz
jae
lods
loop
shll
icebp
mov
mov
xchg
ret
add
test
mov
clc
repnz
jae
add
add
add
mov
repnz
jae
add
add
add
xabort
nop
jae
imul
add
add
fwait
cld
nop
jmp
sub
mov
add
cmpsl
jmp
push
clc
repnz
jae
ret
add
push
sub
or
ret
add
jmp
jmp
dec
adc
add
add
lock
jl
sarb
repnz
jae
mov
add
push
scas
enter
jae
add
mov
mov
xchg
ret
addb
pop
add
mov
push
add
cmp
add
push
mov
xchg
ret
add
loop
sub
add
add
test
ljmp
cmc
adc
negl
jae
addb
adc
dec
add
clc
repnz
jae
add
add
add
add
clc
repnz
jae
fdivs
add
loopne
fistl
mov
xchg
ret
iret
push
add
out
data16
pop
clc
repnz
jae
xor
lock
add
movzwl
clc
repnz
jae
dec
add
add
push
mov
xchg
ret
add
add
pusha
lds
xchg
ret
iret
loopne
mov
xor
fisubrl
popa
clc
repnz
jae
enter
add
add
repnz
jae
add
lahf
popa
fildll
fwait
cld
nop
jmp
add
orb
clc
repnz
jae
les
lods
add
add
pop
add
clc
repnz
jae
add
jmp
call
add
xor
dec
add
mov
mov
adc
dec
pop
clc
repnz
jae
add
add
add
adcb
push
mov
xchg
ret
adc
les
movzwl
clc
repnz
jae
add
jmp
icebp
clc
repnz
jae
lahf
enter
popl
pusha
add
clc
repnz
jae
sub
dec
add
add
call
repnz
jae
fwait
add
dec
add
jbe
addb
add
add
popa
add
mov
xchg
ret
add
add
add
div
inc
add
popl
fiaddl
mov
mov
jae
cltd
test
ficoml
add
clc
repnz
jae
add
loop
ret
add
mov
clc
repnz
jae
add
add
das
push
clc
repnz
jae
lock
dec
add
add
add
add
repnz
jae
add
add
mov
xchg
ret
loop
add
mov
sbb
mov
xchg
ret
lock
lock
and
mov
inc
adc
repnz
jae
inc
je
lock
pop
leave
inc
add
sub
add
cltd
xor
test
repnz
jae
sti
add
inc
add
nop
jmp
add
push
roll
pop
rep
clc
repnz
jae
xchg
lret
inc
lahf
add
add
repnz
jae
mov
add
jne
add
rcrb
add
add
xchg
jmp
jne
fwait
cld
nop
jmp
add
cltd
data16
clc
repnz
jae
cltd
add
test
xor
nop
jmp
add
add
iret
jb
cli
push
clc
repnz
jae
andl
push
add
cld
nop
jmp
loopne
ret
add
stc
mov
push
mov
xchg
ret
iret
add
add
stos
add
clc
repnz
jae
add
add
xor
fcmovb
iret
or
sbb
add
test
add
add
sbbl
add
add
add
and
push
clc
repnz
jae
fcmovbe
add
xor
out
push
add
add
add
ret
xchg
inc
fimull
mov
xchg
ret
add
lahf
add
sub
int
add
adc
fcmovb
push
cmpw
fwait
cld
nop
jmp
adc
add
clc
repnz
jae
add
lret
add
lock
shl
fwait
cld
nop
jmp
or
add
imul
sub
add
sub
out
add
pop
cmp
repnz
jae
add
sub
lahf
call
clc
repnz
jae
mov
add
add
push
mov
xchg
ret
add
ucomiss
lods
ret
mov
clc
repnz
jae
subl
adc
pop
push
mov
sti
jmp
mov
pusha
and
mov
clc
repnz
jae
add
popl
add
add
clc
repnz
jae
add
add
sub
jne
clc
repnz
jae
cs
add
add
enter
jae
inc
shll
or
or
cmp
ret
mov
icebp
xor
add
add
lahf
stos
push
mov
xchg
ret
add
jmp
inc
add
ret
clc
repnz
jae
cs
add
add
push
mov
xchg
ret
add
add
in
add
clc
repnz
jae
lods
popl
add
add
repnz
jae
add
add
xchg
add
nop
jae
inc
jg
out
add
loopne
cld
nop
jmp
icebp
add
add
add
mov
clc
repnz
jae
loopne
add
popl
clc
repnz
jae
add
add
adcb
call
clc
repnz
jae
add
xor
add
mov
mov
push
mov
xchg
ret
imul
add
mov
loopne
fwait
cld
nop
jmp
add
pop
add
adc
fwait
cld
nop
jmp
imul
add
andb
sub
repnz
jae
add
mov
add
popa
add
mov
xchg
ret
addb
pop
mov
or
jbe
clc
repnz
jae
add
add
add
push
mov
xchg
ret
add
add
jne
push
mov
xchg
ret
add
add
lahf
push
add
add
stos
and
push
mov
xchg
ret
fiaddl
loop
add
nop
jae
add
add
xchg
add
sbb
add
repnz
jae
add
lldt
sub
clc
repnz
jae
add
in
add
mov
cli
test
fwait
cld
nop
jmp
add
lock
add
repnz
jae
les
jmp
addr16
add
add
xorl
or
add
repnz
jae
loopne
add
lret
inc
add
dec
add
fadds
add
popa
clc
repnz
jae
sub
vphsubwd
add
add
clc
repnz
jae
adc
icebp
add
fcomp
push
clc
repnz
jae
mov
add
enter
clc
repnz
jae
add
jmp
mov
clc
repnz
jae
add
add
rcr
imul
inc
add
add
add
add
add
add
add
test
clc
repnz
jae
mov
jp
out
incl
add
xor
push
add
add
test
add
add
or
add
fwait
loop
xchg
add
jae
loop
add
les
je
xor
cwtl
push
clc
repnz
jae
out
pop
out
add
icebp
dec
pusha
push
mov
xchg
ret
popl
dec
add
into
mov
fwait
cld
nop
jmp
add
out
sub
add
add
fwait
cld
nop
jmp
test
add
shll
jmp
cld
nop
jmp
iret
dec
out
add
add
popa
clc
repnz
jae
mov
add
out
or
leave
js
push
mov
xchg
ret
add
add
add
add
push
fwait
cld
nop
jmp
add
lods
je
add
leave
das
pop
push
mov
xchg
ret
pop
sub
add
add
mov
nop
jmp
lret
add
inc
loopne
mov
xchg
ret
add
mov
fwait
cld
nop
jmp
enter
xor
dec
data16
add
add
add
js
sti
fwait
cld
nop
jmp
add
add
leave
or
mov
add
clc
repnz
jae
add
mov
roll
xchg
add
fmull
nop
jae
xchg
dec
add
mov
push
add
mov
fwait
cld
nop
jmp
add
adc
nop
jae
add
icebp
mov
ret
sub
mov
clc
repnz
jae
out
add
add
add
repnz
jae
add
mov
add
add
xor
mov
add
mov
xchg
ret
add
add
dec
add
arpl
clc
repnz
jae
add
and
xchg
sti
add
clc
repnz
jae
dec
iret
les
popl
mov
dec
cmp
repnz
jae
pop
popl
lahf
imul
add
push
mov
xchg
ret
addl
mov
clc
repnz
jae
add
xchg
xor
fwait
cld
nop
jmp
lods
roll
dec
sub
inc
fwait
push
dec
mov
push
mov
xchg
ret
ret
data16
outsb
xchg
fwait
cld
nop
jmp
add
out
mov
enter
adc
repnz
jae
add
add
test
add
clc
repnz
jae
add
or
std
jmp
add
cs
clc
repnz
jae
out
fwait
add
add
dec
add
fwait
cld
nop
jmp
fcomps
dec
add
lods
lea
clc
repnz
jae
xor
adc
push
add
incb
nop
jmp
add
loop
add
sti
xchg
or
cld
nop
jmp
add
push
mov
add
add
or
xchg
add
jae
push
ja
mov
clc
repnz
jae
add
sbb
clc
repnz
jae
sti
add
inc
add
jbe
int
dec
cmp
repnz
jae
sti
adc
add
add
jmp
jae
add
loopne
lods
leave
inc
jmp
clc
add
out
add
add
add
testl
and
clc
repnz
jae
fwait
add
add
add
xlat
jmp
jae
add
add
ret
dec
repz
test
add
clc
repnz
jae
mov
imul
and
clc
repnz
jae
add
add
add
stos
push
mov
xchg
ret
push
cltd
pop
add
out
mov
clc
repnz
jae
loop
add
add
fdivr
repnz
jae
sub
xchg
adc
and
push
mov
xchg
ret
xor
mov
and
ss
fwait
cld
nop
jmp
add
test
and
repnz
jae
add
nop
add
movzwl
clc
repnz
jae
dec
add
dec
sub
mov
inc
add
cmp
mov
clc
repnz
jae
fiaddl
out
je
clc
repnz
jae
dec
add
add
push
push
mov
xchg
ret
add
sub
add
test
fcoms
and
cmp
ret
lret
sti
shll
add
iret
je
clc
repnz
jae
dec
add
jl
push
adc
add
repnz
jae
mov
add
xor
push
mov
xchg
ret
fwait
verr
jmp
cmp
fwait
cld
nop
jmp
jbe
test
test
clc
repnz
jae
add
repnz
jae
add
add
mov
enter
push
clc
repnz
jae
sub
add
add
clc
repnz
jae
or
mov
add
movzwl
clc
repnz
jae
mov
add
adc
cld
nop
jmp
add
mov
jmp
cmp
repnz
jae
add
mov
clc
repnz
jae
les
add
mov
cld
nop
jmp
xor
add
add
push
clc
repnz
jae
add
add
data16
clc
mov
clc
repnz
jae
add
push
add
stos
mov
clc
repnz
jae
adc
movntq
out
lcall
or
add
add
jbe
ret
clc
repnz
jae
les
mov
loopne
movaps
add
clc
repnz
jae
adc
xor
leave
add
clc
repnz
jae
addl
mov
clc
repnz
jae
icebp
shll
fwait
push
clc
repnz
jae
add
add
fwait
cld
nop
jmp
fwait
adc
mov
clc
repnz
jae
add
inc
mov
lock
jbe
clc
repnz
jae
fwait
icebp
add
dec
scas
push
clc
repnz
jae
add
loope
add
imul
mov
clc
repnz
jae
add
add
nop
jae
dec
dec
les
jp
mov
add
repnz
jae
test
sbb
in
pop
add
fistl
add
stos
out
add
add
out
rolb
push
clc
repnz
jae
fsubr
pop
add
add
repz
mov
xchg
ret
data16
icebp
dec
add
lods
roll
xchg
ret
add
xor
lcall
cld
nop
jmp
str
jbe
add
or
and
fwait
cld
nop
jmp
add
mov
add
add
and
push
fs
repnz
jae
inc
add
adc
mov
cld
nop
jmp
add
dec
sub
add
dec
mov
clc
repnz
jae
add
add
adc
imul
or
add
loop
add
test
cltd
add
push
add
add
repnz
jae
add
ucomiss
loope
push
clc
repnz
jae
add
add
inc
add
adc
xchg
mov
insb
mov
clc
repnz
jae
leave
add
add
jae
add
mov
inc
and
push
mov
xchg
ret
add
in
lea
clc
repnz
jae
add
add
add
jae
add
push
fwait
icebp
dec
add
dec
movswl
clc
repnz
jae
adc
cld
add
fwait
cld
nop
jmp
add
cmp
push
mov
xchg
ret
add
lahf
aaa
cmpsb
add
mov
repnz
jae
imul
lret
lock
loopne
fwait
cld
nop
jmp
cmp
imul
clc
repnz
jae
or
mov
add
adc
repnz
jae
fcoms
add
xor
popa
arpl
sar
nop
jae
add
popl
iret
adc
mov
xchg
ret
or
mov
popa
scas
mov
clc
repnz
jae
iret
add
push
add
add
pop
clc
repnz
jae
add
add
inc
add
fwait
cld
nop
jmp
test
add
imul
clc
repnz
jae
loop
ret
ret
jne
push
mov
xchg
ret
sub
add
and
repnz
jae
add
repnz
mov
repnz
jae
addl
mov
mov
push
mov
xchg
ret
add
loop
adc
inc
in
repnz
jae
add
lahf
add
add
or
movsb
clc
repnz
jae
enter
dec
add
mov
xchg
ret
add
lods
add
add
push
push
mov
xchg
ret
loop
add
popl
pop
dec
jmp
shrl
add
adc
subl
push
mov
xchg
ret
popl
push
mov
xchg
ret
fwait
pop
add
lret
sbb
popa
add
mov
xchg
ret
lret
add
mov
add
clc
repnz
jae
loopne
add
adc
jmp
test
add
push
mov
xchg
ret
cmp
roll
and
add
clc
repnz
jae
lock
xor
add
in
sub
clc
repnz
jae
add
xor
add
out
icebp
imul
add
add
add
lahf
mov
push
mov
xchg
ret
add
les
add
incb
add
in
incl
fadds
push
sbb
sar
repnz
jae
add
jbe
or
mov
mov
clc
repnz
jae
add
lods
add
leave
dec
mov
adc
lret
add
clc
repnz
jae
sub
in
or
xor
add
clc
repnz
jae
mov
add
loope
mov
clc
repnz
jae
add
iret
add
repnz
jae
icebp
add
push
add
inc
pop
test
fwait
cld
nop
jmp
xor
add
je
add
mov
fwait
cld
nop
jmp
pop
add
adc
inc
cmpsb
add
mov
add
fwait
cld
nop
jmp
add
add
stc
mov
fwait
cld
nop
jmp
add
lret
clc
repnz
jae
enter
roll
xchg
cmp
mov
xchg
ret
jbe
test
into
pop
push
mov
xchg
ret
lods
mov
test
add
repnz
jae
adc
icebp
sbbb
xor
clc
repnz
jae
adc
add
lds
add
clc
repnz
jae
dec
loopne
add
lret
outsb
stos
clc
repnz
jae
mov
addl
push
andl
jae
dec
add
add
mov
clc
repnz
jae
add
iret
add
add
pop
add
fwait
cld
nop
jmp
cmovs
add
cmp
add
add
and
mov
add
mov
add
test
or
add
push
add
add
add
inc
jns
dec
add
repnz
jae
push
les
out
shll
cld
nop
jmp
adc
add
sub
add
and
repnz
jae
add
mov
clc
repnz
jae
add
imul
sub
add
add
push
mov
xchg
ret
add
sti
loope
adc
in
clc
repnz
jae
icebp
lret
mov
daa
and
mov
mov
inc
add
addl
mov
clc
repnz
jae
or
dec
xor
clc
repnz
jae
add
sti
add
nop
jae
imul
mov
push
mov
xchg
ret
fadds
shrd
lods
mov
fwait
cld
nop
jmp
add
pop
je
rorl
aam
std
add
xchg
out
add
push
push
mov
xchg
ret
add
add
add
test
repnz
jae
add
add
mov
repnz
jae
xchg
add
push
fwait
cld
nop
jmp
add
add
add
pop
out
mov
clc
repnz
jae
out
mov
scas
and
push
mov
xchg
ret
imul
lahf
pop
mov
clc
repnz
jae
sub
add
jno
mov
fwait
cld
nop
jmp
add
add
nop
jae
sub
add
add
xlat
push
add
add
mov
xchg
ret
add
cmc
jecxz
add
add
dec
add
repnz
jae
add
and
les
clc
repnz
jae
add
add
add
shrl
fwait
cld
nop
jmp
add
mov
lret
add
add
sub
ret
fiaddl
xchg
ret
add
push
add
decl
clc
repnz
jae
sub
mov
xor
add
push
clc
repnz
jae
leave
mov
pop
xchg
jne
jne
clc
repnz
jae
adc
inc
add
sub
clc
repnz
jae
test
enter
clc
repnz
jae
jbe
pop
lock
add
clc
repnz
jae
enter
add
add
jae
andb
jmp
nop
jae
xchg
adc
ret
add
and
sbb
xor
inc
add
popl
add
pop
clc
repnz
jae
pop
add
pop
cltd
add
stc
mov
clc
repnz
jae
add
add
add
jmp
jae
out
test
add
repnz
jae
sub
loopne
add
push
clc
repnz
jae
add
add
add
add
neg
push
fwait
cld
nop
jmp
add
add
mov
mov
push
mov
xchg
ret
roll
subl
jge
clc
repnz
jae
xor
out
fwait
dec
inc
cmp
clc
repnz
jae
add
add
dec
add
jmp
dec
add
imul
lock
outsl
mov
fwait
cld
nop
jmp
addl
mov
scas
ljmp
add
add
in
lcall
mov
mov
add
adc
jmp
xchg
mov
jae
add
clc
repnz
jae
fsubrs
lock
mov
in
add
add
add
add
out
add
push
mov
xchg
ret
popl
enter
add
push
mov
xchg
ret
add
adc
add
out
clc
repnz
jae
add
add
add
add
repnz
jae
add
loop
push
jmp
jae
lods
sti
mov
inc
mov
jg
clc
repnz
jae
add
out
add
push
mov
xchg
ret
add
add
rolb
jmp
add
add
lock
or
add
add
call
cli
faddl
xchg
ret
inc
adc
icebp
push
mov
lret
inc
add
loop
add
jbe
mov
test
clc
repnz
jae
add
add
clc
repnz
jae
add
rcrl
add
mov
clc
repnz
jae
sub
add
out
test
jmp
test
lods
mov
mov
jae
add
test
mov
loop
lcall
out
jmp
testl
fwait
cld
nop
jmp
add
mov
jl
jp
jbe
fwait
cld
nop
jmp
add
add
add
inc
add
mov
nop
jae
fwait
pop
popl
push
fwait
cld
nop
jmp
out
loope
mov
and
repnz
jae
mov
addl
add
clc
repnz
jae
add
fwait
xor
clc
repnz
jae
dec
add
add
add
add
jp
add
clc
repnz
jae
roll
iret
add
add
popa
add
cld
nop
jmp
imul
add
add
jne
clc
repnz
jae
add
enter
nop
jae
fwait
loop
add
add
add
cld
nop
jmp
add
add
adc
pusha
clc
repnz
jae
xor
add
fcmovb
dec
cmp
fwait
cld
nop
jmp
adc
xor
adc
mov
clc
test
push
mov
xchg
ret
imul
add
ret
clc
repnz
jae
adc
add
inc
addb
mov
fwait
cld
nop
jmp
mov
add
add
add
fwait
cld
nop
jmp
mov
data16
popf
dec
fwait
cld
nop
jmp
sti
loope
sub
xor
mov
add
push
mov
xchg
ret
add
out
enter
mov
clc
repnz
jae
add
data16
rep
clc
repnz
jae
loope
add
fmul
fwait
push
ret
clc
repnz
jae
cmp
add
add
pop
pop
pop
clc
repnz
jae
add
add
add
xor
popa
xor
mov
xchg
ret
add
add
aam
inc
add
clc
repnz
jae
add
imul
add
int
push
mov
xchg
ret
mov
add
test
fdivr
clc
repnz
jae
add
add
rcrb
pushl
je
inc
fiaddl
add
pop
jecxz
add
sub
loop
xor
xor
out
inc
add
add
test
std
mov
clc
repnz
jae
add
add
add
mov
repz
add
xorl
add
hlt
sti
clc
repnz
jae
mov
cmp
repnz
jae
add
sbb
cld
nop
jmp
add
xor
add
pop
add
jae
clc
repnz
jae
add
mov
clc
repnz
jae
roll
inc
xor
loope
add
mov
clc
repnz
jae
add
sub
add
aas
shl
clc
repnz
jae
je
xor
add
lods
and
imul
nop
jae
add
add
xchg
mov
cld
nop
jmp
add
les
xor
mov
jne
clc
repnz
jae
loopne
add
add
loope
mov
jge
leave
fwait
cld
nop
jmp
add
add
add
push
mov
xchg
ret
lret
add
push
roll
add
add
add
pop
jne
clc
repnz
jae
add
sbb
repnz
jae
add
test
add
add
subl
add
les
mov
xchg
ret
fwait
loope
subl
repnz
jae
cmp
add
add
repnz
jae
add
add
stos
mov
fwait
cld
nop
jmp
add
loop
loop
out
lret
pop
push
mov
xchg
ret
je
add
lahf
data16
add
mov
push
clc
repnz
jae
add
add
icebp
add
popf
mov
clc
repnz
jae
add
add
add
mov
clc
repnz
jae
adc
data16
cld
nop
jmp
add
add
add
mov
fwait
cld
nop
jmp
adc
dec
div
fwait
cld
nop
jmp
add
je
lods
mov
les
push
mov
xchg
ret
inc
add
loopne
incl
add
repnz
jae
ror
dec
popf
xchg
fwait
cld
nop
jmp
lret
lret
icebp
sub
add
fcoms
insl
pop
push
mov
xchg
ret
add
mov
dec
push
clc
repnz
jae
adcl
cmp
add
repnz
jae
je
adc
mov
add
add
jmp
icebp
movsl
fmull
test
add
loop
repnz
jae
add
lock
add
add
cld
nop
jmp
ret
add
add
lahf
dec
jne
push
push
mov
xchg
ret
shll
fmuls
add
mov
clc
repnz
jae
enter
lret
add
add
repnz
jae
add
roll
mov
push
mov
xchg
ret
add
add
pop
mov
clc
repnz
jae
pop
add
add
push
mov
xchg
ret
add
leave
mov
cmpl
fwait
cld
nop
jmp
les
mov
jle
or
hlt
incl
dec
lods
xchg
jbe
add
lret
mov
clc
repnz
jae
add
push
jns
clc
repnz
jae
addl
xchg
push
mov
clc
repnz
jae
add
push
iret
push
cwtl
mov
push
mov
xchg
ret
add
lods
add
xor
mov
sbb
add
inc
add
out
jge
add
jge
clc
repnz
jae
add
jo
stos
push
push
mov
xchg
ret
add
add
nop
jmp
pop
add
mov
inc
xor
clc
repnz
jae
out
add
adc
inc
or
rcrb
repnz
jae
add
outsl
movzwl
clc
repnz
jae
lods
sldt
add
mov
push
mov
xchg
ret
mov
adc
jmp
clc
repnz
jae
loopne
test
cmpsb
add
add
repnz
clc
repnz
jae
data16
cmp
rcl
clc
repnz
jae
add
add
mov
andl
jmp
inc
add
add
sbb
movsb
clc
repnz
jae
add
add
cld
nop
jmp
add
sub
adc
add
lret
xchg
ret
add
mov
fwait
cld
nop
jmp
icebp
shr
add
add
frstor
sbb
add
fwait
cld
nop
jmp
loop
add
add
repnz
jae
ret
add
fcmove
or
enter
cmp
ret
add
add
les
clc
repnz
jae
add
add
add
pop
push
mov
xchg
ret
jbe
add
add
clc
repnz
jae
popl
cmp
mov
clc
repnz
jae
loop
addl
rdtsc
xchg
jbe
subb
add
xchg
clc
repnz
jae
add
mov
fwait
push
push
mov
xchg
ret
dec
leave
pop
out
icebp
mov
add
clc
repnz
jae
add
sti
sub
jae
push
leave
loopne
lock
add
push
push
mov
xchg
ret
cmp
push
mov
in
mov
in
sub
mov
mov
add
pop
das
int
or
add
dec
adc
push
add
xor
push
dec
data16
add
xchg
jmp
jg
add
add
add
or
xchg
sub
adc
test
jmp
add
cltd
push
add
je
mov
jl
add
pop
in
pushf
popf
bound
mov
add
add
sbb
mov
dec
std
sbb
fwait
and
push
jge
inc
push
add
lea
inc
add
jge
hlt
add
enter
add
add
xchg
jb
add
add
fdivl
test
add
add
enter
jg
add
sbb
addb
mov
pop
ja
or
fldenv
mov
add
mov
adc
xorl
out
aas
cmp
add
add
testb
jne
pop
mov
xor
cli
insl
pushf
gs
xchg
mov
mov
xchg
insl
ret
movb
aas
inc
in
popa
add
mov
in
jmp
ds
pushf
push
add
add
lock
add
mov
dec
sbb
fadds
mov
push
in
stos
je
loope
add
sbb
inc
add
mov
add
inc
aaa
addr16
jl
pop
loope
enter
add
push
add
and
jo
dec
je
add
add
add
pop
jl
data16
add
cld
xchg
out
ja
add
test
lcall
push
add
add
xchg
add
mov
hlt
add
aad
add
pushf
clc
inc
dec
das
pop
pushf
dec
int
pop
imul
adc
dec
popa
mov
rolb
shrl
cld
dec
and
loopne
mov
push
dec
je
aaa
clc
xchg
rcrl
fldlg2
pop
xchg
inc
add
sbbl
add
ss
add
cmpl
stos
ror
aad
popa
xchg
in
fildl
ljmp
outsl
std
xchg
pop
stos
cmp
add
mov
call
out
add
push
rol
lcall
mov
mov
cwtl
aad
lods
push
addb
lahf
pop
sahf
jp
cmp
xor
mov
pushf
mov
inc
add
mov
add
add
push
outsl
xchg
movsl
frstor
add
jg
add
add
mov
ret
mov
mov
ret
push
add
bound
mov
sbb
add
test
test
pop
mov
push
inc
push
add
add
outsl
daa
jo
stos
xor
cltd
add
andl
jmp
push
int3
call
mov
pop
jne
std
int3
out
jb
sti
leave
xchg
mov
or
add
imul
rolb
xchg
pop
add
jp
lea
enter
sub
add
add
jmp
out
into
fisubs
add
movb
jno
xchg
pop
pop
test
add
sub
cld
mov
mov
jg
add
cmp
mov
xlat
or
add
jae
add
jmp
lcall
inc
sbb
add
aad
xor
jle
add
or
pusha
add
add
mov
movb
xlat
sbb
leave
ds
xlat
mov
push
lret
and
imul
jge
add
add
inc
iret
mov
add
stc
lods
sub
sbb
xchg
pop
xor
pusha
add
add
fbstp
add
lods
test
data16
gs
mov
js
add
inc
pusha
add
jnp
jbe
rolb
jno
add
add
adc
sbb
cmp
add
add
mov
add
add
mov
add
add
fisttps
das
fists
pop
add
pop
add
mov
dec
repnz
add
lea
add
add
and
or
popf
fstl
add
les
test
hlt
add
in
daa
nop
add
popf
pop
mov
loope
add
push
add
aas
jg
out
jnp
sub
inc
add
dec
sahf
mov
push
add
add
insb
enter
add
add
add
jp
add
sbb
mov
stos
popl
icebp
add
adc
xor
in
sub
out
call
add
ja
xchg
add
les
push
add
testb
ret
adc
imul
cmpsl
pusha
add
lahf
int
mov
cmp
add
je
add
aad
aam
push
push
xlat
std
addr16
pop
loopne
mov
dec
adc
xor
add
dec
test
add
add
addb
adc
add
add
in
mov
xchg
ds
push
pop
xchg
inc
popl
push
add
bound
mov
mov
add
add
add
movl
stos
dec
fldenv
add
add
add
int
and
mov
jmp
add
add
add
cs
add
add
sti
or
dec
out
lahf
cmpsb
add
cwtl
and
mov
inc
jmp
xchg
add
addb
sbb
fsub
lcall
mov
cltd
push
test
xor
stos
icebp
ss
jae
adc
push
iret
data16
imul
add
ds
pop
dec
or
push
cmp
icebp
and
mov
adc
add
sbb
xchg
in
mov
add
xchg
xchg
inc
outsl
pop
arpl
add
add
xor
out
xchg
cltd
mov
add
jecxz
jb
push
add
add
rolb
stc
and
xchg
fildl
push
fdivl
push
into
pop
push
add
aad
addr16
in
add
push
add
cmc
stc
fsubl
add
ret
xchg
add
pop
add
dec
push
push
add
cli
inc
add
add
pop
stc
fbstp
loopne
push
push
jae
add
shll
push
imul
repz
mov
add
stos
cmp
add
add
cld
jle
add
push
add
ds
ljmp
mov
shl
add
add
ret
shrl
or
add
add
mov
add
add
out
test
xchg
icebp
out
xchg
add
add
mov
adc
cmc
loop
ja
in
loopne
out
mov
aad
lods
pop
dec
inc
add
testl
add
pop
sub
inc
add
add
je
mov
add
jns
jge
pop
cmc
adc
or
nop
add
fnstcw
add
std
sbb
aad
addb
aaa
mov
insl
inc
add
nop
add
adc
fstl
sbb
add
or
int
imul
cmpsl
nop
add
add
mov
xchg
add
adc
inc
dec
inc
add
int3
in
fildl
lea
clc
lahf
popf
test
lret
arpl
mov
and
add
enter
inc
xor
add
imul
test
cmp
pushf
jl
sbb
add
add
adc
jg
enter
jns
loopne
inc
push
cld
sub
xchg
jbe
cltd
cmpsl
mov
sub
testb
mov
add
push
adc
daa
lods
lcall
aam
bound
mov
test
jp
add
pop
pusha
add
push
addr16
popf
icebp
data16
xlat
push
lds
jae
repz
or
int3
test
inc
or
push
mov
add
sub
jmp
add
lods
jge
aad
jp
adc
fdivrs
sbb
push
dec
adc
cmp
dec
inc
add
add
sbb
dec
sub
or
scas
outsl
sub
add
cmp
inc
cmc
mov
jmp
test
test
outsb
push
in
scas
loope
lahf
jecxz
hlt
add
mov
add
add
notl
xchg
cmp
fnstenv
ret
sbb
lcall
add
addb
test
cmpsb
add
mov
add
push
add
mov
pop
loope
push
add
inc
or
loopne
sub
add
sub
add
inc
leave
xchg
add
add
add
cmp
add
mov
push
sub
stos
jae
subl
jge
repnz
or
mov
xor
clc
dec
fstpt
cmp
hlt
add
add
fiadds
add
test
pop
fmuls
inc
add
cmp
pop
mov
add
sub
add
add
sbb
add
pop
rcrl
add
scas
jno
loope
xchg
lods
xor
jno
decb
and
add
or
add
adc
add
cld
enter
mov
mov
jg
push
xchg
and
mov
adc
xchg
push
add
or
enter
lret
jg
add
mov
js
add
je
mov
add
mov
add
add
inc
mov
lea
add
fdivs
xchg
enter
add
add
jnp
and
loope
in
add
mov
inc
add
sub
add
loope
sbb
ljmp
je
sbb
nop
add
add
add
les
push
add
call
mov
aad
dec
fisttpl
lods
add
add
add
pop
and
mov
add
lahf
scas
pop
xor
push
add
add
pop
add
mov
cwtl
ljmp
add
mov
mov
movsb
add
add
mov
ja
inc
repz
adc
fcomps
call
int
movsb
add
aad
icebp
jp
ja
jno
add
and
mov
es
fsubl
mov
add
sbb
add
adc
add
mov
push
or
add
repz
punpckhdq
add
sub
stc
sub
add
and
xchg
jo
daa
imul
lds
or
rolb
popf
xor
sbb
sahf
call
xchg
add
testb
lret
cmp
add
mov
gs
in
ja
data16
push
add
add
push
add
xchg
jbe
jne
push
inc
add
adc
jne
add
ficoms
add
mov
add
mov
and
adc
mov
xor
fldcw
cmp
mov
sbb
repnz
or
sbb
add
add
jg
leave
test
add
addb
add
mov
add
add
cmp
mov
ljmp
xchg
add
jo
fcompl
cmp
cwtl
xchg
sbb
sub
jp
sub
arpl
fildl
xlat
jg
add
add
roll
mov
cmp
add
add
mov
test
shll
push
pop
pop
sbb
psubsb
add
add
ror
add
push
in
les
or
jns
std
add
add
adc
inc
and
add
add
mov
into
mov
jno
dec
outsb
xchg
stc
mov
vaddsubps
sub
mov
cmp
xor
out
sub
iret
fistpl
leave
pop
lret
add
sbb
push
add
push
add
mov
pop
cmp
add
mov
sbb
hlt
add
mov
rolb
movsb
add
test
rorl
inc
movsb
add
sub
add
aas
addb
mov
add
add
dec
cmc
pop
movsb
add
push
adc
xor
adc
mov
adc
loopne
sbb
dec
pop
xorl
jbe
jb
test
fwait
xchg
bound
mov
mov
dec
test
cmp
dec
test
add
mov
add
adc
lcall
push
add
outsl
dec
fldcw
repnz
lahf
addr16
out
push
iret
mov
cmp
sub
add
cmpsl
mov
jmp
add
xor
in
aaa
daa
dec
rolb
mov
push
mov
dec
aas
movb
repz
mov
add
and
add
mov
ret
inc
ds
clc
cmp
add
aaa
inc
cmpsl
ljmp
sbb
push
push
testb
add
add
push
add
mov
pop
cltd
sahf
mov
add
movsl
xchg
stc
dec
jle
add
add
jle
push
add
inc
loopne
enter
inc
inc
add
add
mov
mov
add
fcoml
pop
ljmp
mov
add
pop
pop
dec
flds
sahf
dec
add
mov
addr16
xor
add
dec
ss
mov
sub
aam
imul
add
xchg
add
inc
add
imul
add
lock
pop
outsl
jns
add
int3
mov
std
add
mov
jge
loopne
lods
fisubl
adc
jle
add
gs
add
cld
adc
iret
mov
int
add
xorl
outsb
pushf
dec
push
add
pop
int
jg
or
add
loopne
lods
mov
add
mov
add
fs
pop
rcrl
inc
add
and
arpl
xor
pushf
xchg
add
decb
mov
rolb
xorl
add
jnp
out
popf
bound
mov
jo
adc
mov
insl
lods
mov
rolb
sub
sbb
hlt
add
mov
add
push
call
and
mov
add
icebp
rolb
add
fists
inc
or
pop
xor
popa
adc
add
xor
xlat
lods
cmpsl
xor
jp
lds
outsb
jns
mov
and
mov
lcall
push
loope
sub
ljmp
ret
add
add
in
enter
ficoml
xlat
loop
rcl
xchg
ret
xchg
adc
add
scas
mov
jno
add
jp
scas
testl
addb
punpcklwd
xor
lods
push
add
push
bound
mov
lahf
out
push
add
pop
dec
loopew
outsb
aas
in
cmpsb
add
push
daa
fimuls
push
add
add
rorl
mov
addb
dec
lahf
je
xor
xor
icebp
and
mov
rcr
push
xchg
lcall
jae
add
add
add
add
add
sbb
add
lods
cwtl
add
dec
add
mov
popa
imul
xchg
imul
add
es
cmpsl
int3
aam
jo
in
cmc
out
add
push
add
mov
cmp
testb
or
mov
add
push
add
or
incl
pusha
add
aam
mov
jno
xchg
testl
add
inc
add
add
enter
mov
pop
stos
clc
rolb
mov
xor
sbb
lock
add
shr
xor
dec
popa
out
outsl
fsubs
jbe
sbb
add
testl
inc
add
xor
inc
fistps
or
std
loope
dec
popa
lahf
adc
mov
add
or
out
adc
int
sub
or
add
mov
fmuls
testb
or
nop
add
mov
and
mov
push
inc
add
add
leave
cmpps
xlat
or
inc
add
outsb
ljmp
mov
jl
inc
add
add
mov
scas
fistpl
xchg
inc
cmp
movb
add
mov
pop
or
test
add
cmpsb
add
add
add
insl
stos
cmp
imull
sbb
subl
xchg
in
aad
lret
add
pop
jns
leave
mov
inc
add
mov
jnp
lods
mov
dec
add
and
jb
sub
pop
fnstsw
xor
gs
or
sub
add
and
xor
mov
mov
fisttps
aaa
push
add
cld
push
add
mov
jle
add
fildl
pop
sub
stos
hlt
add
arpl
xchg
jbe
add
add
test
jo
js
add
adc
pop
movb
sti
add
mov
add
jecxz
adc
dec
push
add
dec
push
mov
jne
push
mov
in
int3
mov
jnp
sub
or
dec
mov
mov
repnz
out
add
mov
add
mov
fsts
add
cwtl
sbb
cli
inc
add
roll
popf
loop
adc
xchg
dec
ss
sbb
pop
adc
fld
add
movsl
data16
add
adc
rorl
stos
push
xchg
add
jge
add
ja
pop
pop
loopne
and
mov
pop
xor
add
jge
push
add
push
add
out
push
add
lret
sub
and
or
add
roll
hlt
add
data16
add
lods
repz
inc
addr16
add
cs
decl
lret
fidivl
in
add
fistpl
xor
popf
leave
pop
movsl
in
xchg
add
add
adc
or
add
push
popa
insl
mov
add
add
sub
add
jae
mov
iret
jecxz
mov
into
pop
out
add
jnp
and
mov
nop
add
add
dec
fidivl
jle
dec
push
add
add
add
mov
push
cmp
add
cwtl
repnz
xchg
sub
xchg
add
scas
cmp
add
adc
popa
test
jnp
add
mov
fidivrs
jle
out
outsl
insl
push
cld
int3
jns
in
and
int
pop
xchg
add
mov
mov
in
inc
lea
and
fldl
andl
jmp
jno
sbb
das
cld
mov
dec
out
cwtl
enter
add
jns
or
push
add
add
mov
es
into
adc
add
push
add
jmp
fwait
jae
fsubp
add
add
sbb
add
fisubs
xor
je
movsl
mov
fucomp
xor
add
xor
int3
lods
sbb
loope
add
mov
push
xchg
rolb
add
pop
pushf
jo
inc
jecxz
mov
add
cli
cmpsl
inc
add
pop
mov
les
push
add
cmp
push
or
cli
int3
ret
jg
lcall
in
push
clc
ret
xor
mov
add
add
fisubl
adc
scas
int
add
ss
addb
add
ret
aas
xchg
mov
add
add
mov
sbb
add
add
push
add
popf
push
push
xor
mov
push
add
sarl
sub
sub
ret
test
add
add
and
out
mov
xchg
fsubrl
push
xchg
std
dec
sub
popf
mov
push
add
xlat
xlat
inc
imul
add
pop
xchg
mov
js
loope
add
loop
jge
xor
add
add
pop
pop
xor
add
mov
add
cmp
add
push
add
add
rolb
in
push
or
fs
fldenv
add
aas
movsb
add
add
inc
add
add
jb
push
dec
add
xchg
push
add
out
lds
fcompl
fisttpll
testb
add
add
lds
movl
fldl2e
lea
repz
add
outsb
ror
or
les
xchg
add
insb
fistpll
jns
popl
addb
fsubs
xchg
add
sti
cmp
ds
sti
adc
add
adc
lds
add
out
xor
add
add
add
push
add
add
out
popa
or
push
add
daa
js
adc
jne
sti
mov
scas
dec
rolb
add
xchg
cmpsl
xchg
pop
je
sahf
inc
add
loop
loop
iret
rcr
fwait
outsb
mov
insb
fwait
popf
mov
fsubp
add
jl
inc
add
push
add
repnz
add
jle
add
add
iret
inc
adc
cwtl
in
mov
push
in
sbb
pop
pop
dec
pop
mov
divl
add
mov
add
add
add
dec
pop
int3
push
nop
add
mov
sbb
mov
shr
xchg
jg
pop
add
dec
int3
xchg
add
add
and
add
ljmp
add
test
pop
fsubs
xchg
or
inc
add
mov
call
adc
add
add
out
mov
add
mov
icebp
pop
jl
xchg
movl
add
sbb
add
xchg
add
pop
icebp
sbbl
aam
sub
ljmp
jge
cltd
mov
pushf
les
out
jmp
ret
sbb
add
dec
mov
add
imul
hlt
add
add
rcrl
and
lock
pop
gs
int3
or
jmp
push
loop
out
std
sub
pop
enter
add
xor
add
ja
ror
test
sti
dec
popf
pop
cwtl
lods
cwtl
repz
stc
cmp
in
or
inc
repz
inc
mov
repz
popa
scas
jmp
mov
and
sbb
addb
rolb
jmp
movsl
cmc
jmp
clc
mov
add
hlt
add
fwait
mov
add
add
call
add
jmp
lds
outsl
sahf
sub
add
push
add
sbb
rolb
adc
dec
pop
jne
stos
mov
add
cmc
fiadds
add
inc
imul
cmp
xchg
mov
into
sub
jno
jle
stos
in
addb
stc
xlat
js
add
add
add
cld
or
add
add
test
pushf
punpckhbw
add
or
add
rolb
sub
std
fldln2
ds
popa
dec
add
or
pop
add
mov
adc
lret
dec
rolb
pop
mov
add
add
mov
add
pop
aam
jbe
pop
sbb
push
add
lret
icebp
fstl
inc
add
data16
mov
xlat
or
add
fisubs
cltd
inc
xchg
add
xlat
and
xlat
fsubrs
les
xchg
add
xor
das
pop
aad
mov
push
loope
test
push
add
iret
sub
inc
add
add
sub
inc
add
call
fnstcw
push
add
dec
sub
mov
sub
sbb
sub
insl
loopne
lods
inc
add
jmp
add
add
or
sbb
pop
daa
js
jg
mov
in
push
or
add
dec
push
jp
add
roll
lahf
lahf
jae
sub
sub
clc
cmpsb
add
lret
or
adc
imul
inc
add
add
mov
rolb
call
add
popa
xlat
sub
lds
sbb
jb
inc
add
scas
add
in
fbstp
add
add
add
add
mov
sbb
add
add
mov
or
add
in
add
mov
ds
or
clc
in
sbb
mov
xchg
add
push
and
aam
mov
sub
sahf
daa
jae
push
add
add
adc
pop
gs
add
or
ds
sbb
pusha
add
push
add
fistpll
pop
imul
lahf
mov
in
cmp
pop
cwtl
mov
push
mov
and
ret
fadd
add
popf
push
add
add
xor
rolb
hlt
add
and
in
leave
sbb
add
push
inc
xor
add
mov
add
pop
stc
pop
rolb
add
mov
into
dec
dec
push
dec
out
fisttpll
iret
cmp
jnp
mov
dec
inc
add
add
add
rolb
mov
jp
dec
push
add
add
mov
cmp
mov
mov
add
cmpsb
add
dec
dec
dec
es
add
aad
add
push
inc
add
xor
shr
ret
xchg
cmpsb
add
or
add
add
icebp
rolb
mov
push
push
adc
cmpsb
add
fstpt
adc
adc
xchg
cmp
push
mov
lret
stos
mov
outsl
into
pop
jmp
movsb
add
mov
add
adc
in
sbb
hlt
add
add
xchg
pop
dec
xchg
add
jp
in
add
mov
jle
add
testb
pop
xor
jns
das
loopne
rcrl
add
add
add
imul
inc
add
data16
and
mov
add
insl
cs
out
call
les
orl
add
sbb
dec
stos
scas
rcr
lret
mov
xchg
add
add
scas
popf
mov
add
add
mov
push
add
pop
je
movsl
xchg
add
dec
int
add
add
mov
out
and
add
loopne
add
mov
xchg
jl
dec
jmp
mov
add
addl
mov
prefetcht2
xchg
add
testb
in
orl
pop
dec
sbb
call
push
add
fs
add
add
or
rolb
sti
mov
addb
and
xor
addb
jecxz
sbb
out
int3
stc
xor
mov
call
add
adc
xchg
pop
insl
mov
out
add
scas
push
add
rolb
xor
movsl
sti
and
mov
lahf
dec
pop
xchg
add
add
sti
loope
or
mov
mov
into
inc
add
cltd
cld
loopne
movb
inc
nop
inc
add
insl
add
add
mov
jl
lahf
xor
ja
cltd
mov
hlt
add
add
add
pop
cwtl
hlt
add
add
add
push
add
clc
lcall
aaa
push
add
lds
mov
stc
lcall
call
sbb
jae
add
iret
sub
sub
pop
je
pop
dec
sbb
movsb
add
subl
add
add
and
mov
rcll
hlt
add
cmp
add
stos
rcrl
enter
cmp
loop
sub
add
outsl
jp
sub
add
xchg
aam
push
inc
adc
sahf
fwait
arpl
xchg
adc
add
add
mov
xchg
pushf
int
pop
ret
push
add
lret
mov
xchg
push
aaa
lds
fbstp
add
stos
jnp
adc
and
mov
add
add
add
add
pop
mov
loop
jne
pop
in
pop
add
aad
icebp
lfs
loope
add
mov
add
lods
insl
xor
jmp
je
jle
add
ss
pop
ja
add
add
add
add
add
fwait
clc
or
icebp
sahf
and
mov
sbb
add
add
add
mov
movsb
add
add
sahf
movsb
add
ljmp
add
or
pop
cs
jge
add
nopl
xor
mull
out
and
mov
add
add
add
add
adc
les
cmp
add
cmp
out
mov
add
add
add
iret
push
add
pop
push
nop
add
add
jno
leave
xchg
mov
add
mov
das
dec
dec
jb
pop
sub
pop
lea
mov
pop
dec
xor
outsb
test
cmpsl
sti
or
stos
lds
add
add
test
or
sbb
xor
xor
add
pop
jo
int
lds
mov
mov
cmpsl
rolb
hlt
add
add
jl
data16
adc
sbb
jnp
mov
add
push
aam
imul
add
inc
add
add
xor
mov
or
subl
test
inc
add
add
ljmp
xchg
add
adc
addr16
add
stos
jp
incb
movb
add
repnz
into
pop
add
sbb
add
and
mov
cs
push
add
mov
fsts
adc
jno
cmpsb
add
jge
add
sbb
add
add
mov
addr16
in
ficoms
shrl
das
add
mov
add
movsb
add
xchg
mov
out
mov
push
test
enter
pop
dec
aad
call
add
add
in
xor
add
xrelease
test
fsubrl
aaa
or
dec
incb
mov
in
or
mov
cmp
cmp
jnp
add
push
or
add
add
add
testb
push
lcall
addb
add
rolb
dec
mov
loop
xlat
add
adc
mov
dec
inc
add
or
add
pop
insb
repnz
imul
scas
leave
fidivs
and
mov
aaa
pop
add
mov
add
add
pop
int
testb
add
or
popa
or
mov
fcmovu
pop
lret
mov
add
in
cmp
lock
add
add
loope
adc
out
add
push
add
dec
lcall
mov
mov
pop
sub
add
mov
rolb
inc
popf
out
add
add
add
fs
and
jecxz
mov
popf
js
in
and
mov
jnp
aam
add
add
add
add
lret
cmpsb
add
fwait
mov
leave
cmc
lret
repnz
loopne
mov
sbb
push
in
ret
add
or
pop
lea
out
sti
xchg
leave
pop
stos
sysenter
add
add
jno
or
negl
jl
xlat
cmp
incb
pop
jbe
rcrl
je
loopne
cld
pop
rolb
sub
add
add
ret
dec
test
movsl
addb
pop
dec
iret
loop
fadd
add
jne
add
insl
inc
aam
lea
xchg
movb
fucomi
push
xor
add
xor
fsts
cltd
add
pop
testb
imul
cmpsl
pop
dec
push
add
rcr
mov
sub
xor
stc
jl
sbb
lcall
pop
adc
and
mov
popf
add
mov
addb
js
gs
insb
in
sbb
add
add
mov
mov
add
inc
inc
cmc
leave
dec
sub
add
sbb
jne
add
sub
add
outsl
sbb
movb
lods
jge
add
mov
inc
or
repnz
jno
sub
dec
dec
and
mov
sbb
dec
jle
les
sarl
stc
xchg
shrl
dec
and
mov
lahf
dec
out
pop
sub
mov
pop
jl
loopne
mov
test
add
add
push
add
or
add
add
daa
mov
cmp
inc
add
add
jo
int
mov
add
lcall
mov
sub
cmc
rolb
sub
add
pop
sub
cmp
lcall
dec
add
mov
add
add
add
mov
add
add
add
or
js
inc
fs
jb
and
mov
ljmp
rolb
add
add
add
add
pop
mov
addb
mov
mov
cmc
mov
test
xor
mov
cmp
xlat
mov
add
jns
data16
imul
in
add
aam
or
add
std
mov
mov
rolb
lock
mov
cmp
imul
jp
pop
sbb
jnp
test
jns
cmc
outsb
mov
scas
in
mov
mov
inc
mov
mov
add
mov
xchg
push
into
jl
rcll
pop
in
dec
cmc
add
mov
jb
add
in
add
xchg
cmp
cld
insb
cmpsl
mov
test
mov
mov
adc
sbb
adc
in
xchg
add
aas
cmpsl
jle
cltd
daa
inc
lods
cmp
in
add
push
sbb
and
add
testb
add
xor
fcmovnu
mov
add
cmp
jp
add
add
mov
addb
sbb
inc
sbb
cmp
jo
repz
mov
or
pop
jge
cmp
add
xor
xchg
add
mov
xchg
add
add
cmp
add
in
out
fmuls
pop
dec
subl
sub
add
fsubrl
pmullw
or
push
add
mov
add
or
add
cmpl
add
clc
repz
push
add
dec
inc
add
gs
add
loop
push
xor
mov
jmp
xchg
inc
add
jp
add
cld
xchg
je
aaa
xchg
pop
add
mov
mov
aas
dec
lcall
dec
sbb
cmp
jecxz
mov
jbe
icebp
push
jg
add
mov
cltd
hlt
add
jmp
add
push
in
jns
xchg
out
jecxz
add
cmpsb
add
daa
jae
pop
xchg
leave
add
or
cmpsl
push
shll
sbb
in
adc
xor
jne
add
aam
mov
pop
lea
pop
je
fsubs
cmpsl
sbb
add
rolb
test
xchg
pushf
addb
add
lahf
or
lods
out
add
dec
xchg
and
mov
jb
ret
insb
rolb
add
mov
in
sub
inc
add
add
daa
dec
pop
add
or
filds
add
add
add
add
add
add
add
mov
popf
adc
or
add
jns
sbb
cmpsb
add
ja
mov
cmp
sbb
mov
sub
sbb
xor
add
jecxz
rol
jmp
xchg
pop
outsb
popf
std
fnsave
lods
add
jnp
add
jecxz
jns
add
sbb
enter
out
sub
add
add
jb
add
add
iret
dec
mov
pop
xchg
addb
stc
icebp
nop
add
mov
jp
int3
or
jle
cld
arpl
dec
mov
lcall
cmpsb
add
sti
jmp
sub
and
mov
inc
add
imul
add
xor
mov
jb
and
cmp
adc
push
add
cltd
xor
mov
add
mov
lret
pop
je
push
and
mov
add
ss
add
and
mov
shll
jecxz
add
add
mov
fnstcw
mov
subl
add
add
mov
lods
xlat
dec
das
sub
pop
aam
dec
icebp
inc
add
loope
adc
add
cs
test
mov
in
dec
aas
in
loopne
adc
icebp
stc
rolb
mov
push
les
mov
out
or
add
add
add
mov
mov
add
add
mov
ficoms
add
popf
shll
add
popa
adc
add
pusha
add
pop
out
rolb
mov
add
add
add
add
xor
insb
or
dec
mov
fisubs
fbld
rcrl
loope
push
pop
js
add
clc
xor
add
and
dec
or
add
add
iret
xchg
adc
lea
add
mov
ds
incl
add
xor
adc
in
mov
fldl
add
add
sub
shll
mov
mov
add
add
push
lea
sub
xchg
add
add
rolb
cmc
sub
add
add
cmpsl
mov
lea
add
cmpsl
sbb
dec
xchg
add
add
stos
jmp
ja
add
or
add
pop
repnz
dec
arpl
daa
xor
mov
pop
sub
add
add
add
mov
lock
data16
mov
add
sub
mov
add
add
and
jno
out
loopne
stc
sub
mov
add
mov
sahf
sahf
and
jb
ljmp
cmpsl
orl
in
pop
fildll
mov
xlat
dec
insl
les
xlat
scas
fcoms
and
dec
jno
mov
mov
xchg
add
add
dec
pop
mov
test
mov
mov
sbb
add
add
addb
sbb
ret
cmp
prefetch
or
sbb
add
in
adc
pop
xchg
pop
jae
add
mov
pop
lea
dec
add
cmp
repnz
add
pop
ja
add
lods
cmp
out
cld
inc
addb
add
add
lcall
inc
add
fisttpll
jnp
add
add
pop
cmp
lret
jmp
add
lret
into
inc
jmp
mov
adc
ljmp
jle
xor
jns
out
lock
add
pop
xor
sbb
push
and
add
jle
xor
push
add
jbe
cli
in
dec
notl
dec
cmp
adc
or
test
add
push
flds
ds
insb
sbb
xchg
add
add
sub
or
sub
push
add
lds
ljmp
cmpsl
dec
cmp
add
xor
cmc
and
mov
add
add
adc
mov
add
add
xor
mov
mov
add
add
testl
mov
movsb
add
mov
or
add
ret
add
gs
xor
int3
es
rorl
out
sub
xor
fs
push
add
pop
xchg
push
add
std
jo
cmp
inc
fdivs
jne
xor
sti
and
int
stos
adc
in
or
stos
jle
add
mov
jnp
out
or
test
ret
pop
adc
xchg
hlt
add
jnp
pop
test
add
push
add
add
mov
xchg
add
mov
movsl
xchg
add
mov
add
lds
mov
leave
fiaddl
mov
dec
scas
int3
xor
sbb
add
add
ret
inc
adc
pop
mov
clc
ljmp
add
mov
add
dec
xlat
jnp
lcall
sarl
fmulp
fimull
lods
dec
xchg
add
add
dec
dec
or
pop
jg
das
hlt
add
push
and
test
xor
out
data16
push
add
aam
mov
pop
xchg
repz
mov
movb
dec
pop
bound
mov
mov
add
xchg
mov
adc
mov
and
add
insl
out
out
stc
pop
ror
lcall
jb
popa
leave
xchg
add
pop
mov
add
add
mov
addb
aam
jp
sub
sbb
adc
ucomiss
and
or
repnz
add
cmp
mov
movsl
dec
leave
pop
jle
or
aad
lock
jo
xor
jae
add
mov
xchg
outsl
nop
add
mov
and
mov
pop
sbb
in
sahf
and
push
jmp
sbb
call
add
jg
aam
adcl
loope
sahf
adc
rolb
sbbl
popf
add
or
pop
sub
decl
idivl
bound
mov
add
dec
pushf
mov
movsb
add
add
add
add
dec
shll
add
jl
cvtpi2ps
ret
mov
idivl
add
xor
test
mov
add
call
add
xor
dec
mov
xchg
or
lret
mov
push
shl
cmp
filds
push
add
add
fdivr
fxam
lret
clc
or
add
test
arpl
mov
loop
imul
jmp
jb
adc
out
jnp
sti
pop
cmpsl
push
ret
push
jbe
dec
sbb
add
jl
add
pop
lret
insb
add
int3
sbb
jbe
mov
xor
inc
add
mov
push
pop
or
add
pop
loope
ror
lds
add
test
add
add
add
cmp
cmpsl
cmp
loopne
loop
movl
add
jmp
cmp
data16
add
or
aaa
fdivr
test
fsubrl
cmp
xchg
xlat
add
mov
dec
cmp
loop
movb
mov
in
repz
push
add
add
adcl
ret
rolb
or
pop
xchg
dec
and
add
in
cmp
jg
sbb
or
dec
nop
add
popf
mov
inc
add
std
mov
add
pop
rolb
add
mov
dec
shrl
jne
add
lea
add
add
clc
ds
ljmp
das
loopne
mov
popf
stos
iret
adc
dec
mov
add
sub
dec
inc
ds
add
lock
data16
popa
lret
xchg
fcompl
lds
loope
aad
jge
xchg
iret
cmp
mov
aaa
inc
add
push
mov
push
mov
call
jb
mov
rolb
andl
lahf
into
and
xchg
add
scas
adc
add
in
mov
mov
lea
xchg
add
mov
add
mov
mov
jbe
add
stos
inc
out
test
addb
xorl
fcomps
pop
mov
mov
je
xchg
mov
and
add
add
add
out
hlt
add
jnp
cwtl
iret
sub
or
sbb
dec
jo
inc
jb
cltd
out
add
mov
cmc
aaa
or
lret
mov
ds
loopne
imul
movb
mov
mov
outsl
and
jnp
mov
std
fnstcw
push
cmp
aam
xor
add
add
xor
push
cmp
add
add
xchg
pusha
add
dec
mov
cmpsb
add
push
add
or
or
add
int3
popf
mov
jb
add
add
loop
ja
mov
add
in
pop
dec
or
fstpl
add
stc
add
and
mov
jno
and
mov
mov
add
sbb
faddl
jg
xor
inc
cld
aad
jnp
and
mov
and
sub
insb
lea
adc
inc
add
add
add
cmpsl
ret
cmp
xchg
add
popa
imul
idivl
push
and
sbb
add
add
and
popf
adc
mov
add
popf
sbb
sbb
fcmovb
add
add
sbb
int3
dec
enter
add
in
ljmp
add
add
add
add
mov
dec
xchg
in
dec
ja
adc
fidivrl
test
add
add
add
mov
in
out
sti
loop
ret
mov
add
in
jne
cmp
imul
add
add
sbb
jne
xchg
add
add
jmp
or
ds
movsl
xor
scas
popa
cmc
pop
and
movb
add
inc
bound
mov
cli
out
fiadds
mov
cmpl
jnp
fdivs
add
pextrw
cmpsl
daa
adc
repnz
sub
aam
push
add
add
add
movb
add
sbb
outsb
xor
lret
jbe
enter
inc
add
pushf
rcrl
fdivrs
out
fsubrs
js
dec
scas
bound
mov
add
lea
pusha
add
cmc
lods
cli
push
addr16
insb
mov
add
add
cld
les
cmp
add
popa
cmp
add
lret
mov
sbb
add
testb
fcmove
dec
clc
data16
in
or
insb
mov
add
mov
ret
enter
add
cmpsl
cmc
mov
add
mov
add
popa
test
and
fldcw
sbb
fsts
int3
rolb
cmpsb
add
and
add
sub
dec
adc
out
push
mov
inc
addb
add
popa
mov
lret
jns
cmc
jbe
out
add
pushf
dec
fistps
add
add
popa
fistps
and
sub
xchg
popa
mov
ja
and
mov
addr16
add
jo
xchg
add
add
pop
jp
add
pop
imul
push
add
xchg
add
sub
add
add
loopne
das
mov
mov
push
add
gs
lahf
fwait
jmp
jl
add
add
pop
out
movsl
lahf
sahf
imul
and
mov
addr16
mov
imul
lea
add
add
add
insb
sub
mov
add
pop
jnp
cmp
add
popf
je
pusha
add
rolb
pop
or
xor
xchg
add
mov
or
test
out
js
addb
cmc
inc
add
cwtl
pop
cli
push
push
out
xchg
add
mov
push
add
ja
xor
push
add
sub
add
in
add
mov
add
push
add
dec
adc
aam
stos
inc
add
sar
dec
in
test
push
mov
outsb
fidivs
mov
and
mov
add
mov
sub
insb
mov
lods
push
movb
aas
das
xchg
and
lret
and
mov
iret
enter
pushf
adc
packssdw
add
push
adc
inc
add
add
js
pusha
add
add
fistl
adc
or
ja
sub
add
and
mov
pop
shl
add
sbb
add
adcl
add
add
mov
add
int
mov
add
push
add
xchg
cltd
mov
rcll
mov
and
data16
imul
push
mov
repnz
ljmp
andl
into
lods
mov
add
mov
add
push
add
test
add
frstor
mov
stos
into
idivl
add
cltd
xor
mov
push
add
mov
push
xchg
dec
cs
add
add
repz
aad
adc
jl
jne
enter
test
push
ret
jg
bound
mov
data16
add
ja
add
add
push
pop
fcmovbe
add
rolb
add
add
xor
xchg
lcall
mov
cmpsb
add
cmp
pop
adc
adc
fldt
push
add
mov
mov
add
stc
pop
xor
jmp
jo
mov
add
push
add
mov
leave
imul
mov
add
add
add
iret
xor
add
pop
sub
mov
add
add
mov
fcomps
gs
add
jo
xchg
test
sub
test
add
mov
mov
scas
mov
or
daa
cmp
pop
xor
mov
ss
xchg
movsb
add
sub
pop
xor
sbb
add
sahf
arpl
fmulp
ds
sbb
mov
enter
add
add
dec
imul
cmp
adc
sub
add
add
rolb
mov
add
fisttpll
dec
out
hlt
add
add
inc
pushf
fisttpll
add
aad
jne
add
sub
stc
pop
cmp
sbb
stc
sub
push
add
mov
inc
popf
nop
add
je
nop
add
jmp
outsl
int
jne
aaa
pop
pop
movsl
popf
and
mov
add
idiv
pop
jnp
cmp
in
stos
mov
repnz
or
add
pop
addr16
test
add
add
iret
mov
inc
add
add
ficoms
jb
cmp
push
pushf
into
add
push
add
add
add
scas
push
insb
xor
push
add
and
add
and
mov
sbb
add
inc
xor
mov
sbb
push
dec
mov
xor
mov
push
data16
add
mov
stos
fwait
arpl
jns
je
idivl
add
fwait
lret
xor
xor
mov
jl
add
cmp
push
xor
mov
cmp
or
mov
adc
or
mov
sbb
add
push
add
add
les
inc
add
cmpsb
add
add
mov
adc
stos
xchg
add
data16
mov
hlt
add
mov
sti
movsb
add
add
mov
push
les
dec
mov
xor
adc
add
in
xchg
sbb
mov
xor
cmp
jnp
cmc
pop
lcall
icebp
inc
push
mov
lea
cld
imul
shl
inc
add
imul
sub
cld
out
pop
lea
pop
dec
jmp
inc
arpl
adc
movsb
add
mov
add
push
add
mov
and
mov
mov
dec
insl
mov
test
repnz
mov
add
adc
test
pop
pop
mov
add
rolb
jge
push
add
add
sbb
mov
jno
add
add
add
add
js
fidivs
inc
add
cld
adc
cmc
add
mov
ret
lret
jns
or
flds
add
mov
add
shr
cmp
scas
stos
push
add
pusha
add
mov
adc
push
fmull
sbb
das
sub
jae
add
int3
ds
std
pop
cmp
add
add
out
xor
leave
push
adc
dec
mov
add
sub
dec
push
aaa
stc
inc
and
test
add
add
jecxz
rcl
and
add
fadd
add
rcll
mov
add
push
add
pop
ja
daa
data16
call
das
fwait
inc
loope
bound
mov
jl
insl
push
add
ljmp
push
inc
add
push
shll
add
add
aad
sahf
out
outsl
aad
out
dec
dec
mov
add
filds
addb
add
repnz
and
add
jmp
mov
add
add
add
adc
cmp
and
add
mov
data16
roll
cmp
add
leave
test
add
add
mov
add
mov
insl
stos
call
int3
xchg
add
sbb
call
cmc
mov
ljmp
adc
in
aas
add
ljmp
add
xor
les
jge
pop
adc
notl
adc
jmp
incl
add
push
add
add
pop
aad
inc
mov
xchg
add
add
add
push
pop
push
add
inc
add
test
in
sub
jno
dec
cmpsl
ficompl
popa
inc
add
add
add
xor
jle
add
mov
daa
lock
add
add
jo
popf
push
xrelease
fucom
add
add
lret
xchg
fwait
mov
sub
add
mov
mov
add
add
mov
ljmp
add
dec
pusha
add
dec
xlat
rep
aas
or
add
push
push
add
data16
add
inc
mov
movb
mov
insl
jmp
int3
add
addl
add
jg
xor
in
lea
push
add
add
notl
mov
cmp
add
add
aam
std
js
add
add
das
mov
popf
bound
mov
xchg
dec
adc
adc
mov
call
adc
testb
add
out
fwait
mov
or
addb
jle
sbb
sarl
push
push
add
mov
in
into
cmpsb
add
mov
incb
inc
add
mov
mov
data16
add
mov
icebp
test
add
mov
rcll
xchg
add
loopne
and
add
add
add
lods
ret
mov
add
dec
mov
rolb
mov
lahf
int
add
adc
movsl
aaa
push
adc
stos
aas
add
mov
ror
outsb
or
push
add
dec
ds
dec
stc
addr16
das
sti
cmp
addb
add
add
je
dec
mov
add
add
add
inc
ret
xchg
or
test
or
add
inc
movb
std
sub
and
mov
add
add
mov
add
loop
loopne
ja
pop
lods
data16
cld
mov
add
inc
add
int
and
mov
ret
pop
fsubrl
add
add
add
add
add
push
sub
add
add
lds
enter
add
jnp
pop
and
mov
mov
add
xchg
add
push
mov
lret
lcall
add
xchg
fcoml
add
add
je
add
mov
sarl
mov
mov
jo
sub
cmp
add
push
add
sub
mov
loopne
jmp
dec
cltd
mov
dec
jg
mov
mov
or
sahf
sbb
mov
pop
mov
loope
imul
loope
push
add
xor
sub
mov
add
push
fidivrl
insl
stos
mov
add
mov
add
cld
mov
aaa
setns
mov
xchg
add
mov
sub
pop
cld
push
add
nop
add
lret
push
add
cmp
std
sub
mov
stos
add
outsl
add
lock
fnstcw
icebp
mov
addb
pop
mov
or
iret
js
add
sub
push
add
stos
sub
add
test
pop
aas
jb
ret
scas
cmp
pop
insl
pop
jmp
add
add
push
add
mov
xchg
add
xlat
out
push
pop
pop
lcall
push
add
test
add
add
and
jae
sbb
add
add
movsl
push
add
push
dec
xchg
inc
cmp
call
add
add
add
in
mov
movsl
mov
add
cmp
xchg
add
add
fldcw
inc
pop
jmp
jl
sbb
mov
outsl
inc
add
fstp
and
call
jno
stc
lcall
aas
addb
int3
sahf
test
add
test
xchg
add
enter
inc
inc
add
add
in
iret
and
das
loopne
cmp
idivl
jmp
iret
mov
sahf
mov
adc
mov
sti
jmp
sbb
lret
xor
insl
mov
js
add
xor
pusha
add
lods
xor
les
xor
cmp
loope
add
xor
loope
sarl
sub
imul
add
lahf
xchg
add
fdivrl
mov
sub
ret
mov
xchg
add
nop
add
pusha
add
inc
add
add
add
mov
add
ret
fcomps
add
mov
pushf
dec
xchg
enter
or
nop
add
shl
add
pop
pop
in
out
sbb
ja
movsl
out
test
jno
add
add
add
mov
je
aaa
cmp
add
add
inc
add
cld
jle
hlt
add
loopne
jno
sub
inc
add
dec
test
imul
out
jns
add
sub
in
add
scas
pop
xchg
sub
data16
add
add
add
int3
leave
popf
xchg
add
nop
add
clc
inc
add
out
dec
inc
inc
add
cmp
push
and
add
inc
jle
add
push
shrl
push
adc
add
jno
add
cmp
lea
adcl
add
cmpl
inc
jg
add
mov
xchg
pusha
add
pop
gs
mov
inc
add
stos
shr
je
cmp
add
addl
fists
mov
pop
xchg
imul
mov
stc
xor
test
add
add
rolb
push
mov
pop
mov
addb
mov
push
mov
mov
push
or
jp
add
insb
mov
ds
add
sbb
add
add
add
cmp
je
nop
add
add
jne
add
add
add
and
mov
cmp
xor
hlt
add
pop
jmp
add
lods
fldcw
stc
call
push
xchg
inc
and
or
add
incb
fdivrp
or
bound
mov
add
push
add
arpl
cmp
das
movsb
add
add
inc
add
cs
lahf
repz
push
scas
cmp
out
jne
insb
je
testb
add
mov
repz
std
scas
dec
dec
push
popa
xchg
cmp
lea
add
loope
xorps
arpl
mov
mov
std
sbb
dec
out
cmp
in
daa
in
pop
aad
lds
sbb
pop
jb
pop
or
pushf
lret
mov
pop
sub
or
mov
dec
fcoml
les
clc
cmpsb
add
add
add
icebp
add
push
sub
add
test
addb
adc
out
jbe
add
mov
sti
les
lods
stos
sub
mov
or
test
test
add
rorl
pop
push
add
add
sbb
add
pop
mov
xor
adc
add
add
leave
stos
inc
add
mov
seta
lods
icebp
mov
icebp
adc
popa
jb
and
mov
cmp
add
sub
inc
add
mov
inc
add
in
adc
add
pop
bound
mov
stos
popa
test
cmpsl
out
add
add
pop
sub
add
xchg
add
xor
add
pop
ret
aam
pop
inc
add
add
add
mov
fstps
jg
add
add
adc
push
adc
lret
add
inc
pop
jg,pt
pop
dec
sub
add
xor
add
push
push
add
add
mov
sbb
repnz
outsl
cmpsl
lahf
and
popf
xchg
inc
add
pusha
add
push
icebp
inc
adcl
rolb
mov
jne
add
or
pushf
or
mov
mov
loope
mov
aas
addb
xor
sti
movsl
bound
mov
sub
pop
inc
inc
add
push
add
add
mov
add
ja
add
add
mov
roll
pop
jno
dec
and
mov
xchg
or
movsb
add
xor
sahf
mov
add
add
add
add
scas
mov
adc
add
mov
push
pop
mov
ret
push
fidivrl
add
fisubl
sub
jo
cmp
and
add
add
fildl
mov
iret
nop
add
fcoms
add
test
and
or
xor
lods
adc
mov
sub
je
test
mov
add
into
lcall
add
mov
iret
jp
cld
nop
add
clc
pop
mov
cwtl
cmpsl
push
add
adc
add
add
inc
gs
push
add
add
pop
cmpsb
add
mov
add
jb
jno
pushf
popf
mov
jecxz
aaa
fimull
sarl
mov
add
jp
push
nop
add
cmp
rol
sub
scas
mov
rolb
loope
call
insl
mov
jmp
add
add
mov
dec
lods
fidivrs
add
scas
cmp
inc
add
add
jmp
add
out
add
xchg
add
push
shr
add
add
push
add
stc
ljmp
add
and
fimull
faddl
sbb
add
add
lret
push
mov
mov
inc
lret
sbb
loopne
stos
sbb
add
loope
add
enter
add
stc
cmc
mov
mov
pop
mov
mov
scas
cs
xor
ds
add
int3
addr16
add
add
add
add
inc
add
add
sbb
lahf
add
mov
add
pop
fiadds
in
aaa
mov
add
rorl
xchg
jo
shrl
add
ljmp
orl
dec
pop
lds
add
iret
xor
push
daa
adc
and
mov
cmpsb
add
add
es
add
lods
clc
fcom
add
mov
dec
push
add
add
inc
add
loope
clc
push
loop
pop
mov
add
dec
stc
jge
add
jno
mov
add
scas
inc
add
sub
sahf
dec
push
add
add
sbb
add
add
jge
mov
add
xor
aam
pop
jne
add
test
add
add
add
sub
add
movsl
jle
dec
push
add
bound
mov
add
add
add
lret
mov
add
sti
sbb
add
inc
add
hlt
add
lock
cmpsl
hlt
add
add
mov
dec
inc
lods
pop
int3
add
add
cmp
lcall
add
sarl
test
fsubs
add
jns
mov
adc
add
mov
and
mov
mov
add
xchg
enter
add
add
add
in
mov
mov
add
test
rcl
pop
iret
mov
ds
add
mov
add
add
add
xchg
add
sub
mov
add
add
hlt
add
fldcw
mov
cli
jbe
xor
roll
movb
add
mov
cmp
cmp
or
testl
mov
clc
cwtl
jo
lret
dec
dec
out
mov
inc
test
add
add
and
pop
cmp
add
add
pop
movb
add
repnz
xor
in
push
add
add
xchg
add
in
inc
ffree
flds
mov
mov
pop
addb
lods
pop
add
mov
add
xchg
aam
incl
xchg
or
add
insl
movb
add
add
xchg
stc
test
add
sub
mov
add
xor
xlat
sbb
add
add
cld
dec
shll
or
sbb
pop
or
add
fldenv
sbb
add
or
hlt
add
add
aaa
fwait
adc
add
adc
sbb
mov
movsl
popa
adc
adc
aad
sub
inc
pusha
add
xor
sbb
mov
pop
hlt
add
push
sbb
push
stos
and
inc
add
flds
cmp
push
pop
cwtl
xor
aam
ret
mov
add
add
inc
sahf
in
negl
add
cwtl
jns
rep
cmp
out
cmp
add
setle
add
pop
mov
add
dec
sub
push
add
js
out
ror
mov
rolb
cmc
out
pop
fdivs
add
pop
mov
pop
or
add
notl
sub
mov
mov
dec
jbe
sub
add
mov
rolb
add
push
mov
mov
leave
and
add
mov
add
add
insb
lock
add
cld
or
push
add
cmp
sub
mov
sbb
inc
cmp
push
dec
data16
mov
lret
xlat
mov
xor
addb
xor
lds
cmp
into
sub
test
mov
fistps
add
add
adcl
icebp
bound
mov
mov
loopne
int
out
pop
clc
sub
lcall
sub
pusha
add
lods
sub
mov
and
and
rcrl
push
or
jge
jae
and
add
pusha
add
lret
pop
arpl
test
sbb
add
add
push
ret
add
mov
fbstp
out
jne
sub
filds
repz
pop
leave
out
pop
in
cmp
mov
addr16
add
xchg
mov
add
cmp
jns
adc
or
add
sub
add
insl
fwait
ljmp
add
ret
pushf
push
jae
add
pop
aas
das
sbb
mov
rolb
iret
addb
xor
inc
call
test
xor
sub
and
pusha
add
add
into
ret
aas
dec
add
inc
add
xchg
add
add
lock
add
cs
pop
addb
mov
add
out
push
fs
add
ret
and
faddl
mov
mov
lock
mov
in
popl
loop
push
add
add
scas
lret
data16
mov
fisubs
test
pop
movsb
add
jne
push
add
sahf
sbb
add
clc
push
ret
les
movsb
add
aaa
in
pop
stos
cmp
rolb
push
add
call
ret
push
add
add
shld
je
pushf
addr16
fdivr
add
push
and
lcall
xlat
and
mov
or
imul
add
fbstp
adc
add
mov
in
mov
outsl
pop
xchg
fimull
mov
add
push
pushf
push
test
push
add
sub
adc
dec
xor
scas
and
add
jl
add
in
in
or
ds
call
imul
das
in
aas
inc
clc
nop
add
add
pop
testb
mov
faddp
hlt
add
add
inc
add
mov
mov
add
and
mov
cmp
repnz
addr16
add
xchg
add
xchg
add
add
add
add
psllq
add
adc
mov
pusha
add
pop
lahf
ja
adc
cmc
xlat
mov
pop
into
adc
sbb
pop
andl
mov
mov
inc
scas
mov
rolb
push
add
add
clc
sub
hlt
add
mov
fdivs
mov
fidivl
jns
xchg
cli
mov
dec
pop
clc
outsb
adc
lods
mov
data16
inc
add
lds
into
adc
es
arpl
xlat
stc
sub
out
jbe
dec
clc
dec
aas
clc
inc
add
in
mov
repnz
bound
mov
sahf
dec
jecxz
jecxz
aas
mov
fwait
sbb
add
loope
add
add
and
inc
add
mov
rolb
mov
add
dec
add
jnp
push
pop
pop
jbe
or
call
mov
sub
inc
add
addr16
add
test
add
add
movsl
imul
int
add
cmp
test
mov
pop
fnstenv
mov
push
aad
add
aaa
cld
xchg
mov
pop
movsl
xchg
sub
icebp
in
mov
int
nop
add
je
outsb
inc
add
add
daa
push
pushf
and
mov
inc
add
add
mov
dec
popa
jmp
int3
in
fcmovne
and
punpcklbw
mov
mov
jb
push
sahf
push
roll
insb
jecxz
lret
sbb
dec
sub
movsb
add
and
into
push
loope
lret
and
data16
stos
icebp
outsl
xchg
add
in
divl
add
add
pop
sbb
stos
jno
cmp
imul
sarl
add
jno
add
push
pop
dec
or
leave
rolb
sbb
dec
int
add
push
add
add
dec
dec
pop
mov
cli
cmp
cmp
xor
data16
pop
mov
call
and
repnz
add
ljmp
lock
add
push
add
add
cmp
mov
add
mov
lcall
pop
mov
mov
aad
cmp
rol
add
mov
or
insb
push
pop
hlt
add
mov
add
mov
les
popa
inc
add
mov
lea
in
out
mov
add
push
roll
pusha
add
add
addb
or
cld
xor
ret
adc
into
stc
push
test
inc
add
in
pop
test
jp
sbb
movl
mov
mov
dec
cli
nop
add
mov
mov
add
lock
add
add
xor
adc
mov
daa
add
add
scas
scas
inc
std
ss
sahf
inc
add
adc
imul
enter
or
add
mov
dec
insl
jp
xchg
inc
icebp
push
push
add
adcl
mov
and
mov
sbb
add
fstl
add
jnp
mov
cmc
punpckhdq
test
add
add
or
iret
loope
add
nop
add
inc
fwait
or
outsl
cmp
ret
jp
add
in
fnstcw
add
in
pusha
add
add
pop
ja
add
add
addb
add
add
lret
pop
inc
mov
push
xchg
add
add
add
mov
inc
dec
cmp
fnstcw
add
mov
push
add
add
inc
add
scas
orl
loopne
mov
cld
xor
add
stos
cmp
data16
add
add
inc
out
mov
test
mov
int
sbb
add
fxch
push
add
out
xchg
add
push
add
add
push
data16
mov
mov
sbb
push
add
mov
add
add
add
pop
mov
mov
mov
in
xchg
fmuls
lock
and
add
ss
dec
ret
test
shl
iret
addb
add
movsl
push
add
add
inc
jns
add
inc
xchg
sbb
lret
pop
js
add
lret
test
gs
js
mov
pushf
xor
testb
jle
add
cmp
jmp
sub
add
add
out
push
dec
push
inc
add
mov
fwait
ret
pop
push
jle
add
mov
add
add
enter
les
cli
pop
mov
in
mov
pop
xchg
add
std
or
ret
dec
filds
xor
add
add
in
lods
sub
ret
add
addl
mov
sub
daa
bound
mov
mov
pop
int3
jnp
mov
dec
outsl
jo
movsb
add
add
mov
add
out
add
stos
fisttpl
dec
ds
fdiv
popa
xchg
rolb
xor
add
add
pop
sub
and
jbe
or
mov
jno
add
adc
les
outsl
fistpll
std
add
add
or
pop
mov
or
mov
jbe
je
mov
add
mov
insb
loop
test
add
cmpsl
add
bound
mov
mov
add
sbb
orl
push
add
add
xchg
into
in
xor
adc
mull
mov
jmp
addb
jbe
pop
popl
lret
add
jecxz
add
lock
add
and
add
jns
addr16
jmp
add
scas
imul
test
dec
std
test
pop
cltd
test
hlt
add
mov
jp
das
cmpsl
jo
ficomps
push
mov
add
sbb
add
subl
mov
xchg
imul
jbe
jle
clc
out
in
mov
aaa
mov
push
mov
cmp
add
stos
mov
fstl
push
add
ja
in
inc
add
ret
jnp
loop
jno
pop
rorl
fisubs
xchg
add
mov
inc
pushf
sub
jmp
dec
sbb
pop
jne
in
cmp
fadds
add
das
push
add
mov
fisubl
xorl
add
aas
cmp
test
out
inc
sub
insl
fstpt
mov
add
add
sbb
mov
jno
out
ret
mov
add
mov
mov
sub
add
xchg
xor
push
scas
out
or
in
lea
inc
add
and
mov
loop
push
add
add
add
mov
loopne
scas
dec
test
dec
insl
add
add
add
pop
addb
mov
xchg
add
xchg
add
pusha
add
add
test
xor
ljmp
test
sub
mov
or
add
mov
add
andl
mov
add
outsl
sahf
sub
clc
push
sub
and
hlt
add
xor
pusha
add
loopne
cmpsl
mov
mov
scas
pop
add
mov
add
sub
ja
add
cmp
and
xor
ficomps
dec
cli
stc
clc
sbb
mov
ja
and
jmp
push
add
jecxz
add
cmpsl
cwtl
popf
adc
arpl
fidivrs
mov
pop
out
jp
or
mov
add
repz
add
mov
add
jno
sub
push
add
enter
push
in
mov
adc
jae
mov
cmpsb
add
fisttpll
cwtl
insb
aaa
addb
icebp
lret
rolb
push
add
push
add
push
add
mov
loope
add
jle
xchg
movsl
xchg
popf
or
mov
mov
mov
pop
je
addb
cmp
add
add
jns
push
add
lahf
addb
add
mov
int
mov
das
jns
add
add
mov
xlat
hlt
add
mov
fdivrl
testb
mov
add
arpl
sub
push
sbb
mov
add
stos
sahf
je
je
mov
add
mov
add
xlat
push
dec
rolb
jle
xchg
inc
add
and
or
inc
out
xchg
add
add
push
add
insl
lock
sbb
into
mov
jns
dec
jae
lahf
xor
ficomps
iret
je
rolb
test
push
add
xchg
xor
mov
testl
mov
arpl
sbb
in
xchg
lcall
add
sub
pop
mov
flds
pop
sub
add
lret
popa
mov
mov
mov
cmpsl
push
add
pusha
add
add
nop
add
xor
sbb
mov
ret
add
add
add
sbbl
pop
jecxz
ss
adc
push
add
mov
xchg
add
sbb
jle
add
leave
jb
mov
or
add
add
fcom
add
mov
roll
pop
adc
xchg
add
add
adc
add
add
rolb
pop
add
pop
insb
call
out
into
sahf
add
inc
push
add
fisttps
add
ljmp
mov
mov
xchg
sub
xor
leave
cwtl
inc
add
out
je
out
arpl
fidivs
testb
test
add
jle
jmp
pop
push
pop
lds
mov
aas
inc
add
testb
jae,pt
mov
push
add
pop
and
pop
sub
out
xchg
add
mov
pushf
adc
add
mov
inc
insl
xchg
icebp
sbb
arpl
add
mov
clc
pushf
outsb
xchg
add
ds
fnstcw
lahf
push
jle
add
pop
stc
inc
sub
imul
imul
movb
jp
test
dec
mov
lcall
sbbl
stc
mov
mov
call
add
sub
mov
outsb
in
and
mov
cwtl
test
rolb
push
add
mov
add
add
add
pop
out
pop
jp
lcall
add
cli
movsl
adc
add
loop
mov
loope
jb
xchg
add
aaa
push
add
insl
jbe
pusha
add
jl
sbb
stos
addb
add
mov
and
mov
xchg
add
jo
sub
mov
mov
add
mov
in
add
cmp
add
mov
setne
add
xlat
fldt
add
xchg
mov
stos
push
add
xor
adc
push
add
insb
xchg
add
mov
mov
add
fdivs
data16
or
dec
push
push
ds
loope
std
sbb
xor
repz
xor
aad
add
pop
dec
cmpsb
add
stos
popf
fwait
xlat
inc
add
cmp
inc
add
push
movb
add
mov
add
sti
xor
and
ficompl
xchg
add
add
out
mov
fsts
push
sti
pop
or
jmp
jg
push
add
mov
xor
pop
data16
dec
aad
add
mov
jae
fldcw
dec
xchg
mov
outsb
hlt
add
pop
iret
or
sbb
insb
mov
dec
ret
add
mov
push
add
lret
dec
cmp
add
loope
add
cmp
add
add
out
repz
aam
insl
push
jp
jmp
add
fdivrl
popa
jbe
dec
push
scas
insb
mov
repz
jnp
add
movsb
add
sub
mov
lds
add
sarl
xchg
add
mov
inc
sahf
and
mov
add
cwtl
push
inc
add
add
mov
and
sub
add
cwtl
ret
and
mov
fwait
xor
and
mov
ljmp
and
jne
sub
add
sbb
cmpsb
add
out
xor
xor
clc
call
add
xor
or
inc
xor
mov
add
stc
fcompl
jb
popf
pop
pop
push
or
add
push
add
mov
pop
push
add
and
sbb
addps
add
outsl
gs
leave
test
roll
push
add
sub
sub
pushf
jbe
sbb
and
pushf
add
dec
sub
mov
inc
outsb
lcall
push
out
sub
add
xchg
and
rolb
je
or
jbe
shufps
inc
add
outsb
mov
scas
inc
add
add
pop
dec
sbb
add
loope
bound
mov
push
add
add
mov
mov
pop
cmp
setg
adc
cmpsl
outsb
and
mov
mov
ret
mov
add
fs
sti
or
adc
cmpsb
add
in
addr16
jmp
xchg
dec
outsl
mov
add
pop
xor
inc
xchg
add
add
pop
icebp
test
adc
out
pop
stos
sbb
add
mov
add
dec
fwait
inc
mov
push
push
and
into
repnz
cmp
add
mov
ja
mov
in
cmp
add
sub
sti
jbe
mov
dec
adc
outsb
imul
xor
and
mov
pushf
xor
add
xchg
add
add
add
add
mov
push
add
or
rolb
push
lods
add
pop
fdivrs
scas
dec
shrl
adc
fisubl
inc
mov
add
push
add
movb
mov
mov
add
mov
js
aas
daa
push
jmp
sub
lods
ficompl
add
jecxz
add
cld
inc
xchg
add
mov
lahf
lods
cmpsb
add
xchg
cmc
lock
add
addb
add
test
add
add
test
adc
sub
lret
push
xchg
arpl
add
or
and
rcll
loope
sbb
scas
jb
mov
pop
cs
fwait
inc
add
add
aam
xor
jmp
add
mov
mov
adc
jecxz
add
sub
lods
mov
jne
cmp
mov
decl
mov
shll
mov
lods
push
add
xchg
add
push
add
pop
imul
add
dec
shrl
cmp
push
add
add
add
adc
pop
or
in
cmp
add
ret
mov
sbb
or
lds
xchg
pop
ja
adcl
add
mov
mov
add
mov
or
scas
popf
add
add
ljmp
xchg
push
xchg
aad
xchg
hlt
add
lcall
xchg
add
xchg
push
add
add
pop
mov
add
add
mov
push
push
add
test
ret
imul
stos
adc
add
fimull
stos
outsb
xchg
add
dec
mov
add
fstpl
cld
jecxz
xchg
dec
lock
dec
add
mov
add
imul
add
mov
incl
loope
cwtl
arpl
push
mov
and
mov
jg
or
xor
add
xchg
repnz
add
add
addb
and
jmp
xchg
rolb
push
add
push
push
pop
inc
cmp
push
add
mov
scas
push
add
mov
add
fadds
shll
and
mov
adc
pop
out
jnp
add
sub
jo
jo
add
sarl
pop
scas
xor
movsb
add
add
in
and
pushf
lahf
aam
or
orl
add
jbe
ret
fcoms
add
rolb
fldt
pushf
xor
or
addb
mov
movb
inc
ss
loopne
adc
push
add
add
cmc
adc
mov
xor
adc
data16
and
shll
fildll
add
dec
adc
movq
mov
pop
testl
lahf
cmc
push
add
push
add
sub
add
pusha
add
fldenv
sub
addr16
add
xchg
jmp
lods
jnp
fiadds
add
mov
cld
jae
jbe
mov
movb
pmaddwd
enter
daa
ja
add
fcomps
add
outsl
inc
outsl
in
dec
sub
incb
flds
add
add
xchg
add
addr16
jnp
aaa
cmpsb
add
xchg
add
add
add
or
add
testb
in
out
or
sbb
sarl
inc
add
xor
inc
fsubrl
imul
xor
fisubs
movb
add
sbb
cmp
sti
rolb
mov
add
aad
add
push
add
js
xor
and
sub
stos
push
cwtl
mov
pop
pop
leave
aaa
jnp
add
add
aas
sub
int3
inc
add
sub
add
mov
adc
jns
add
pusha
add
aam
int
add
sbb
add
data16
and
mov
push
fdivs
add
sub
dec
dec
cld
leave
inc
add
add
pop
negl
add
mov
out
add
or
xlat
addl
test
cmp
add
push
mov
sbb
dec
mov
push
dec
xchg
add
cmp
dec
xor
push
inc
pop
inc
and
outsl
mov
or
add
add
out
xchg
repnz
cltd
stos
jmp
cmpsb
add
xchg
add
push
sti
xchg
add
mov
cmp
or
lods
fists
jo
or
cmp
dec
lea
popa
jp
aad
add
outsb
xchg
xchg
add
cmpsb
add
add
push
mov
ds
xchg
cmp
sti
dec
shl
popl
or
inc
add
or
out
sub
je
jne
inc
lret
add
add
push
push
test
add
and
mov
cmp
push
add
lret
cmpsb
add
addr16
aaa
dec
scas
aam
enter
jbe
repz
and
mov
mov
rol
mov
and
mov
fwait
in
mov
rolb
das
inc
or
lock
adc
sub
add
add
add
jae
xor
outsb
repnz
xor
cmpsb
add
mov
add
stc
pop
cmp
cs
or
add
sbb
and
dec
xor
pop
pop
fmull
rcrl
add
mov
fidivs
add
sbb
jmp
or
fidivl
mov
add
add
imul
sbb
sbb
sahf
cmpsb
add
arpl
mov
push
iret
lods
sahf
lods
ficompl
insl
pop
xor
pushf
dec
lock
addb
and
mov
add
mov
add
imul
cld
or
cld
ja
add
add
xor
loopne
clc
mov
or
jo
aad
jl
add
add
jl
rolb
add
add
pop
addr16
add
add
lods
pop
ja
dec
imul
adc
xor
adc
xor
out
add
add
add
add
into
adc
mov
add
jle
leave
jo
lods
lcall
dec
mov
js
pop
pop
leave
xchg
mov
fdivl
mov
cltd
jne
mov
cli
mov
add
mov
fwait
dec
mov
add
add
add
add
mov
xor
scas
fnstsw
xlat
loopne
pop
rolb
movsb
add
sbb
sub
pop
xrelease
mov
xor
lcall
inc
add
xchg
mov
movb
pop
outsl
mov
and
mov
movsb
add
mov
mov
dec
sub
cmp
mov
and
mov
add
add
and
test
pop
and
mov
xor
mov
gs
arpl
ja
sub
cmc
pop
jb
mov
mov
add
add
mov
out
in
add
dec
fdivr
loope
enter
addr16
mov
rolb
xor
pop
add
jmp
add
mov
sete
call
fimuls
add
jne
add
add
pop
addr16
pusha
add
cli
sbb
mull
mov
add
mov
jbe
pop
xchg
out
mov
xor
add
fmulp
jg
inc
add
add
sahf
cmp
mov
outsb
xchg
add
add
adc
and
mov
jmp
add
call
jg
fdivrs
add
jle
enter
inc
ret
adc
add
fsubp
and
mov
mov
jno
add
mov
add
jg
inc
and
cmp
mov
push
push
jge
cmc
ja
repnz
mov
cmc
dec
sub
test
arpl
add
add
mov
and
mov
dec
fidivrl
fstpt
daa
jg
add
add
add
inc
add
das
scas
mov
out
adc
lret
and
mov
icebp
or
sbb
or
jns
add
insl
fimuls
mov
rcll
mov
ss
add
mov
cmp
test
xchg
stos
imul
je
les
loopne
nop
add
lret
add
jnp
add
xchg
add
add
mov
inc
add
pop
nop
add
mov
insb
das
push
test
xchg
jns
add
mov
mov
add
inc
add
add
add
pop
loopne
push
add
add
jmp
lods
and
mov
add
lret
add
out
push
or
iret
sbb
mov
mov
inc
add
mov
mov
add
ss
pop
mov
add
in
pop
lock
and
loopw
xchg
add
lods
test
mov
mov
add
and
add
inc
add
push
add
mov
jecxz
add
push
add
and
and
or
add
add
add
sub
jns
push
and
add
add
imul
mov
adc
pop
les
xor
add
mov
add
mov
xchg
adc
out
xor
addb
rolb
imul
add
sti
xchg
xchg
cmp
add
sub
adc
add
dec
jno
jno
add
ds
add
mov
data16
insl
mov
mov
adc
dec
test
lcall
insb
test
stos
mov
dec
jnp
pop
add
sub
lock
mov
vunpcklpd
stc
dec
clc
pop
adc
add
test
rolb
loop
add
xor
lahf
jne
add
add
push
add
add
add
rorl
lret
add
ret
and
mov
add
outsb
add
add
test
add
xlat
mov
push
add
call
add
mov
jg
add
sub
mov
lods
sub
in
sub
add
mov
dec
mov
sbb
inc
lcall
xor
add
add
push
adc
push
add
add
and
addr16
aad
aam
adc
loop
repz
jle
mov
cmp
dec
lods
mov
aas
test
and
cmpsb
add
mov
push
add
loopne
cwtl
divl
bound
mov
add
repnz
add
rcrl
testb
out
mov
lahf
sahf
adc
add
pop
push
jns
jl,pn
and
mov
push
add
adc
and
add
jge
add
dec
sbb
xor
cli
inc
je
and
and
add
fsubl
imul
xor
fsts
repnz
add
cmp
pop
jl
cwtl
mov
add
andl
pop
push
cmp
add
mov
pop
pop
cltd
pop
in
adc
clc
and
int3
aas
xorl
add
add
add
out
cmp
decb
add
jae
lahf
pop
pop
or
stos
cli
pop
sub
cld
pop
jb
iret
into
sbb
add
push
add
add
mov
add
mov
testb
inc
leave
jl
add
inc
jle
push
sub
std
out
mov
aad
pusha
add
pop
jl
sbb
add
loop
lock
imul
or
popa
outsb
or
xchg
add
les
pop
pop
call
cli
mov
inc
xor
pop
ja
fcoms
in
xor
sbb
add
inc
add
or
add
mov
movl
add
add
inc
les
mov
dec
pop
and
mov
xchg
cmpsb
add
test
xor
mov
sub
add
add
push
inc
add
mov
popa
sub
mov
insb
add
add
add
pop
out
xchg
sbb
xor
cmp
lahf
cld
popf
mov
add
add
add
cmp
ret
frstor
les
loopne
test
cmp
ljmp
add
lea
add
mov
xor
add
add
mov
xchg
add
or
cmc
pop
lock
call
jae
add
add
clc
rolb
xchg
add
nop
add
cmc
push
add
test
outsl
arpl
call
xorl
fprem1
dec
ds
bound
mov
add
pusha
add
add
lds
clc
cmc
push
add
addb
add
jnp
add
sahf
lods
imul
imul
int
add
push
lods
and
mov
cmp
mov
fwait
testb
ljmp
inc
add
add
jno
scas
sbb
and
pusha
add
mov
xor
sbb
add
test
add
add
push
add
xchg
scas
cltd
jo
xor
gs
insb
test
add
add
mov
rorl
addb
enter
je
gs
dec
in
push
add
movsl
mov
push
add
add
add
ret
adc
data16
add
loopne
mov
adc
add
insb
in
inc
cld
push
add
mov
adc
aas
mov
data16
ret
testb
mov
add
xor
mov
mov
add
add
pop
ja
xor
sbb
pop
push
add
lahf
mov
mov
push
xor
or
int
les
dec
push
add
and
testb
mov
add
movsb
add
add
add
mov
sub
cs
rolb
pop
pop
jge
jg
incl
add
push
stos
xlat
sub
scas
adc
outsb
add
mov
mov
add
add
mov
testb
leave
push
add
add
pop
lea
add
test
ljmp
popf
in
cltd
adc
fcmovne
push
outsb
aad
shll
add
pop
aam
sub
inc
add
add
add
push
or
in
cmc
faddp
jbe
fildll
cld
jo
push
add
mov
add
insb
sbb
cmpsl
lcall
mov
data16
add
cmp
add
loope
stos
gs
leave
dec
push
add
fdivs
adc
mov
outsl
paddsw
pushf
daa
pop
add
scas
in
call
mov
xrelease
test
nop
add
movsb
add
sbb
movsb
add
icebp
push
add
add
add
cmp
push
out
xor
int3
mov
push
movsb
add
add
adc
sbb
push
xchg
or
dec
lahf
pop
sti
leave
inc
add
adc
push
add
or
cs
loope
add
mov
das
addb
and
mov
push
arpl
push
stc
xlat
sahf
addb
test
add
add
add
loopne
movsl
pusha
add
jl
add
loop
jecxz
add
or
loop
ljmp
jns
sub
pop
arpl
add
add
add
cmp
sti
lods
push
xchg
stos
test
lds
shl
add
add
add
mov
rcrl
add
add
or
add
sub
fldenv
lret
add
out
add
mov
xor
lret
ret
rolb
pop
outsl
add
mov
adc
out
add
fiaddl
add
adc
je
mov
ret
mov
outsb
cwtl
mov
xor
jle
add
and
int
add
clc
mov
sbb
add
negl
adc
cltd
mov
add
fdivrl
lret
xchg
dec
mov
jp
add
add
sub
add
mov
loop
pop
mov
jns
adc
add
cld
mov
add
icebp
pop
adc
add
mov
inc
add
mov
add
adc
push
mov
mov
add
cmp
mov
stc
movsl
hlt
add
add
xor
loope
add
cmpsb
add
inc
add
jnp
loope
add
lcall
clc
pop
lock
repz
scas
lea
add
mov
or
lea
pop
aas
shr
cmpsb
add
lds
add
arpl
or
xchg
add
add
outsb
sbb
int3
stos
les
arpl
inc
pop
ljmp
jmp
add
xor
and
mov
mov
push
add
mov
add
pop
mov
fldt
orl
sahf
das
rolb
add
mov
mov
lds
add
mov
sbb
add
cs
dec
adc
popa
jl
add
dec
jl
add
mov
xor
outsl
hlt
add
lea
mov
add
lcall
rolb
outsb
sbb
mov
repz
xchg
add
dec
or
test
xlat
int3
dec
shll
jne
sbb
xor
out
jne
stc
mov
arpl
sub
xor
add
cs
add
lea
mov
in
mov
gs
and
add
mov
ffree
xchg
test
cmp
or
out
jns
add
lds
xchg
add
add
add
add
aaa
pop
and
decl
push
add
dec
adc
fadds
test
add
add
xlat
pop
push
add
mov
pop
push
jle
add
popf
pop
sub
out
out
arpl
add
sbb
push
add
lret
fbstp
fwait
xchg
repnz
inc
add
add
add
add
sub
add
add
mov
data16
aam
mov
add
add
adc
test
pop
adc
data16
add
bound
mov
imul
in
lcall
imul
bound
mov
mov
dec
ds
mov
and
mov
in
jp
add
add
add
push
and
sub
setnp
fcoms
in
in
icebp
out
lock
mov
lock
push
pop
loop
ds
add
jae
je
pop
pushf
cmp
xchg
push
sub
popa
mov
add
adc
mov
mov
pop
cmp
addb
pop
loopne
add
jb
lret
add
inc
add
add
add
mov
rolb
leave
xchg
scas
push
add
outsl
push
add
add
int
add
aam
push
add
je
mov
add
add
add
pusha
add
ss
mov
mov
mov
mov
call
imul
mov
add
add
es
add
bound
mov
test
test
ja
mov
mov
popf
inc
dec
ret
pop
add
ret
add
add
mov
cmp
incb
stc
enter
add
add
popf
sbb
das
test
push
scas
push
add
leave
in
dec
inc
add
add
enter
inc
mov
add
dec
xor
push
stos
and
outsl
daa
jmp
xor
sbb
mov
mov
jb
xlat
push
add
pushf
or
testb
mov
popa
xor
in
or
fistps
ficoms
mov
add
xor
add
add
mov
fs
lock
add
mov
or
add
push
mov
fbstp
jo
mov
add
and
mov
add
incb
push
add
test
mov
bound
mov
add
and
ficomps
fwait
test
inc
xchg
mov
add
and
cltd
dec
in
test
addb
cmc
inc
leave
xor
enter
cli
leave
hlt
add
xchg
movsb
add
dec
push
add
and
add
cmp
add
mov
jns
jge
addb
addb
test
add
inc
dec
sub
or
xchg
add
sbb
iret
into
cmp
push
add
pop
mov
repnz
mov
shl
sub
add
fidivrl
add
xchg
add
pop
xchg
add
out
lahf
jns
dec
push
add
add
scas
sbb
ret
push
test
imul
pop
adc
aas
jae
in
in
test
mov
add
mov
mov
das
push
push
popf
fstpt
sub
jecxz
js
add
add
lret
add
ljmp
add
jns
loope
outsb
add
cs
enter
xchg
add
sbb
imul
inc
and
fwait
scas
out
mov
add
jl
sbb
ss
movsb
add
pop
or
enter
push
cmp
jbe
ds
push
test
out
scas
or
dec
xlat
out
ret
loope
mov
add
push
fsubs
or
xor
add
fdiv
add
ret
mov
xchg
add
mov
add
jge
pop
cmp
dec
push
add
add
mov
add
jo
sub
repnz
lcall
jmp
cli
jne
add
jle
add
into
cmp
sbbl
addb
add
xchg
dec
jns
hlt
add
pop
les
test
jb
jg
add
mov
loopne,pt
popf
in
in
ret
dec
adc
jbe
addb
imul
add
scas
sti
filds
dec
call
pushf
pop
adc
mov
add
add
sbb
daa
das
sub
xor
jbe
aad
add
dec
ret
jl
mov
add
lods
cltd
mov
sub
pop
sub
iret
outsl
adc
add
adc
in
out
add
mov
cmp
xchg
add
jge
shll
add
and
mov
add
add
pop
mov
xchg
outsl
pop
test
xchg
add
add
ljmp
xor
sbb
int
sub
aaa
mov
add
jb
pop
mov
add
mov
add
mov
push
add
add
add
jno
jle
in
inc
add
lahf
stos
addr16
add
jnp
add
add
mov
pshufw
xor
pop
cmpsl
pop
aaa
adc
xor
leave
xchg
xchg
add
rol
add
insb
add
dec
xchg
ficompl
cmp
dec
add
jmp
jmp
jmp
mov
aas
movl
vmptrld
lcall
add
add
cltd
push
push
add
add
out
ja
jb
add
add
or
insb
imul
mov
add
mov
icebp
sub
add
push
in
pop
int
add
lcall
pop
add
add
sub
add
add
lahf
imull
hlt
add
cmp
push
jno
xor
fcoml
pop
rorl
add
data16
sbb
add
add
das
adc
inc
add
sahf
loope
add
nop
add
add
sbb
add
js
mov
add
jae
cli
inc
pop
mov
scas
cmp
into
jno
ljmp
push
je
addb
add
and
mov
iret
add
pop
scas
inc
les
xchg
mov
mov
fwait
js
jbe
add
cmp
lods
fldenv
mov
mov
and
int3
pop
jle
add
imul
or
ds
pop
leave
out
mov
rcr
push
add
mov
outsb
mov
add
dec
add
or
xchg
inc
ljmp
or
or
adc
mov
scas
jnp
add
dec
out
sub
jne
ja
push
mov
mov
add
add
pushf
insl
mov
mov
addb
add
loop
add
mov
insl
cmp
sbb
mov
inc
cmp
inc
add
or
xchg
add
add
or
lea
add
xchg
out
inc
in
cs
cmc
aaa
out
testb
xor
mov
add
mov
sub
add
add
imul
rolb
addr16
clc
cltd
inc
mov
mov
call
das
jnp
add
adc
into
mov
mov
mov
ficoms
add
add
fisubs
clc
lds
add
in
push
push
fldl
xor
add
mov
movb
cmpsl
outsb
xchg
add
cwtl
or
aad
test
bound
mov
add
cs
add
add
add
mull
add
sub
insb
mov
movsb
add
lret
popa
inc
add
sub
xor
push
add
out
mov
add
loop
sub
push
add
inc
add
stos
pushl
fadds
imul
icebp
rcrl
or
push
add
sub
add
imul
or
pop
call
push
sbb
add
rolb
testb
add
pop
xchg
add
addb
out
imul
add
testb
fsts
dec
pop
pushf
dec
jmp
add
jo
mov
cmp
xor
dec
fimull
cmpsb
add
xor
call
insl
ljmp
pop
mov
mov
xor
jl
dec
inc
add
add
add
add
jns
arpl
add
mov
aas
xchg
fidivrl
pop
pop
add
push
add
imul
cmpsb
add
add
add
sub
or
outsl
xchg
add
add
inc
add
add
or
into
ljmp
imul
add
add
dec
adc
jmp
std
jmp
add
inc
add
scas
cmp
shl
add
add
rcrl
add
mov
jnp
add
test
add
pop
mov
xor
aas
or
add
add
inc
fwait
mov
add
dec
or
push
add
and
testb
jle
xchg
dec
imul
add
jle
xchg
xchg
addb
sbb
ja
dec
shll
add
mov
add
fwait
sbb
sbb
add
cmp
ret
inc
std
bound
mov
add
sti
icebp
xchg
shrd
add
sbb
mov
dec
aam
pop
adc
paddd
insb
pop
ljmp
and
add
add
add
xchg
mov
dec
adc
adc
push
test
pop
dec
mov
or
add
add
addb
cmp
inc
inc
pop
pushl
add
add
jns
std
cmc
xchg
add
add
add
add
jg
add
popf
movsb
add
pusha
add
lret
jg
jl
add
fisubrs
shll
cltd
scas
jbe
lds
cld
clc
addl
jnp
push
jb
loope
adcl
add
add
add
in
add
les
bound
mov
addb
mov
movsb
add
or
add
adc
je
adc
push
and
adc
or
add
sarl
and
mov
adc
mov
add
fstpt
mov
and
mov
xlat
add
popa
stc
rolb
stos
dec
aaa
sbb
mov
add
testb
add
dec
loope
add
mov
adc
adc
pop
push
jmp
gs
pop
mov
cmp
add
add
push
ljmp
inc
add
inc
movsb
add
add
pop
sub
add
cwtl
mov
ret
dec
cmp
and
pop
cmc
adc
add
dec
cli
jbe
inc
add
jns
add
cwtl
push
add
jo
out
add
stos
fnsave
jo
lea
jae
add
mov
mov
or
bound
mov
add
fildll
jl
push
mov
xor
addb
pop
sbb
roll
cmp
add
outsl
push
xchg
adc
sbb
add
add
jp
or
jns
sbb
sub
nop
add
jbe
mov
mov
rcll
sbb
add
shrl
jno
notl
add
adc
xor
outsl
adc
add
xor
fsubrp
into
or
mov
ret
sub
leave
mov
dec
sbb
pop
or
mov
add
or
sub
add
aad
push
pop
aad
decl
add
add
inc
ljmp
pop
xchg
add
add
add
xchg
hlt
add
repnz
add
add
stos
addb
add
mov
push
add
insb
test
or
jecxz
bound
mov
fsub
and
mov
push
ja
push
adc
sti
popf
data16
add
add
add
bound
mov
add
bound
mov
sbb
enter
loopne
std
or
add
xchg
lcall
insl
inc
add
rorl
cmp
add
out
pop
and
mov
mov
push
std
push
add
dec
insl
inc
popa
push
add
add
iret
mov
add
std
fld
add
loopne
mov
lcall
sbb
jns
xchg
add
or
ficomps
xchg
add
mov
and
mov
jmp
cli
out
dec
xchg
repnz
pop
loopne
push
add
into
add
aas
scas
mov
scas
sbb
arpl
and
push
add
add
mov
lods
or
add
fwait
imul
lret
push
add
mov
leave
mov
in
adc
sub
jnp
xchg
add
add
add
sub
mov
test
mov
add
inc
add
pop
and
inc
add
rolb
push
add
sub
xchg
mov
movb
push
add
in
push
add
xchg
shll
mov
scas
movsb
add
or
add
mov
sub
inc
add
mov
rolb
arpl
add
cli
push
add
fisttpl
sub
mov
lock
add
mov
add
inc
add
int3
mov
mov
add
rorl
push
sbb
sub
add
pusha
add
jo
push
ret
cmp
add
add
add
add
jae
jo
ficompl
popa
cli
gs
adc
adc
movb
cltd
mov
add
push
add
pop
fldenv
mov
mov
or
add
xchg
cwtl
fidivs
and
mov
or
mov
add
repnz
add
insl
xchg
add
addb
cmp
add
xor
xchg
mov
imul
stos
aam
ret
add
or
add
dec
addr16
data16
xlat
push
in
and
mov
aam
sbbl
pushf
mov
fmuls
add
push
add
mov
cmpsl
fwait
dec
in
mov
adc
add
mov
rolb
jo
inc
add
pop
stc
push
add
stc
popf
add
mov
jnp
add
cmp
pop
and
mov
add
mov
dec
test
xor
cwtl
mov
xchg
int3
adc
js
insl
loope
pop
jle
cmp
stos
push
push
add
stos
dec
push
add
jecxz
add
sbb
fstpt
sbb
lret
mov
mov
imul
inc
add
lods
aam
inc
add
cmp
mov
mov
mov
add
sub
dec
lock
mov
stos
addb
dec
lcall
jae
shr
int3
movb
or
add
rolb
aaa
clc
aas
movsl
clc
repnz
dec
adc
cmpsl
lds
add
pushf
and
add
add
add
add
fistpll
add
add
add
add
add
mov
push
add
rolb
ljmp
sbb
xchg
jmp
add
out
test
add
cltd
xor
aam
scas
aad
cmp
stos
clc
xor
jnp
sub
incb
fisubrl
popa
cltd
rolb
add
cmpsl
and
mov
sub
add
or
add
add
movb
xchg
add
je
xchg
add
je
cmp
cli
stc
les
aam
dec
out
push
xchg
push
add
addb
add
cmp
adc
roll
mov
jp
pop
cmp
mov
add
imul
int3
sub
fidivs
add
mov
add
rolb
fistpll
add
std
adc
outsl
sti
aam
pusha
add
subl
sahf
dec
js
out
jae
jge
je
and
mov
xor
fdiv
lcall
mov
std
cmp
or
gs
jb
cmp
cmp
dec
mov
mov
lock
dec
addb
inc
xchg
xor
imul
jnp
mov
das
lods
or
out
sub
add
or
mov
add
add
add
cwtl
lret
les
outsb
adc
out
stos
scas
std
pop
jle
mov
add
loopne
cmovae
add
repnz
out
loop
cmp
add
add
loopne
sti
or
sub
aad
add
add
push
add
xchg
cmp
jnp
inc
inc
add
add
stc
mov
icebp
stc
sub
and
lods
movsl
mov
je
mov
mov
loopne
mov
popa
mov
add
add
add
xor
jbe
hlt
add
add
cld
and
pop
jno
push
add
add
out
addb
pop
xchg
test
mov
flds
add
adc
mov
rolb
ret
scas
scas
lea
add
add
cltd
aad
adc
and
mov
arpl
add
cwtl
cmp
add
add
icebp
mov
lock
add
pusha
add
add
add
inc
add
add
cmp
jns
jg
pop
mov
xor
mov
insb
clc
mov
movb
add
add
inc
add
movb
dec
sub
mov
add
push
add
in
rolb
lods
dec
adc
addb
add
fistps
mov
add
mov
jne
das
mov
add
add
and
xchg
add
lock
push
dec
std
jecxz
mov
pop
mov
inc
addb
add
jb
cmp
mov
add
add
stc
jle
add
add
dec
pop
rolb
lahf
mov
pop
add
add
add
in
xor
mov
movb
add
test
add
data16
and
mov
xor
add
sub
and
pop
rcll
mov
lds
jne
add
sub
jae
aam
addb
sub
pop
mov
sbb
add
inc
sahf
std
hlt
add
add
adc
mov
cli
int3
sub
loope
mov
or
inc
mov
jge
aad
sub
push
add
add
insl
arpl
push
add
add
cwtl
enter
add
sub
xchg
add
lods
and
mov
lret
add
inc
in
test
mov
cwtl
lcall
sub
cltd
adc
push
add
push
int3
jge
add
lods
xor
js
add
jle
aad
add
add
add
xchg
dec
mov
push
add
jg
aas
inc
pushf
ret
outsb
pop
jns
sti
inc
rolb
sbb
add
push
mov
add
mov
mov
and
mov
add
movsb
add
jecxz
add
mov
pushf
imul
or
cmp
add
and
mov
mov
add
rolb
enter
add
imul
aad
mov
ljmp
out
rcll
mov
das
pusha
add
add
pushf
lods
cmp
add
mov
hlt
add
add
out
cmp
les
sub
add
push
add
add
rcll
xchg
dec
clc
push
add
mov
add
mov
push
out
xor
dec
lret
inc
add
add
fnstcw
xor
add
mov
add
clc
stos
das
int3
push
add
std
xor
jne
sbb
mov
add
add
in
test
adc
imul
push
add
mov
and
add
andl
add
rolb
and
mov
jmp
jns
cmp
in
sub
out
add
mov
mov
stos
mov
sub
jle
shl
add
jns
add
mov
sub
stos
and
or
addl
loope
gs
add
lahf
cmp
pop
ja
testb
add
repz
aam
inc
add
add
adc
push
add
movb
mov
add
mov
in
cmp
or
add
and
mov
xchg
add
jge
lret
jl
iret
das
std
fstpt
add
push
add
cmp
sbb
mov
sahf
mov
push
add
mov
cmp
adc
rolb
jge
jle
xor
ss
and
mov
mov
mov
sub
add
add
add
add
add
add
add
clc
enter
inc
repz
add
mov
scas
xor
loope
mov
add
add
mov
sbb
into
pop
cmp
xor
adc
add
add
xchg
add
jmp
jno
add
jno
inc
add
mov
dec
leave
and
add
mov
add
adc
inc
mov
xor
outsb
pop
mov
add
add
lcall
add
mov
int3
fnstenv
add
in
stc
mov
mov
add
xorl
and
add
add
outsl
fwait
loopne
jp
sub
pop
xchg
sbb
add
add
jne
add
into
fmulp
jmp
or
addb
xchg
add
add
jg
add
mov
xlat
loop
jno
cmp
pop
out
push
push
add
mov
add
or
add
push
add
inc
inc
mov
add
or
sub
add
ljmp
dec
adcl
adcl
popf
or
add
gs
cmp
xchg
ljmp
pop
mov
jnp
lret
adc
stos
mov
add
andl
add
stos
stc
dec
aas
call
push
stc
xchg
xor
aaa
push
pushf
stos
mov
testb
pop
and
js
sahf
rcr
or
or
in
in
loope
pop
fstpt
xor
mov
mov
inc
add
fsubrs
add
xchg
decb
fidivs
mov
rolb
push
add
add
jb
and
mov
push
xchg
mov
test
mov
xchg
in
mov
imul
xchg
add
lcall
inc
pop
outsl
mov
cmpsb
add
add
add
cmp
add
and
arpl
stos
add
sti
jne
add
shl
mov
pop
insl
cmp
sar
cmp
mov
das
adc
jo
inc
add
mov
sahf
testb
scas
pop
loopne
xor
jl
mov
push
adc
xor
add
dec
ret
je
mov
ljmp
add
ret
aaa
out
cld
cli
imul
add
add
add
add
pop
mov
int
add
cmpsb
add
sub
jge
mov
add
push
or
add
scas
and
mov
pop
xor
push
imul
insb
sbb
add
ret
sbb
add
aad
sbb
mov
insb
cmp
adc
dec
out
cmovns
push
add
ret
pusha
add
in
rolb
aas
jg
adc
les
xchg
jl
adc
mov
inc
add
mov
add
and
mov
cs
cltd
clc
lcall
addb
scas
jns
inc
lea
add
mov
addb
into
mov
filds
lea
js
mov
mov
movsb
add
add
or
pop
lds
add
mov
rorl
sub
mov
leave
mov
loope
add
jge
inc
add
add
add
mov
ret
int
pop
dec
into
ljmp
call
lret
gs
xlat
jno
cli
aas
sbb
add
mov
add
add
add
add
xchg
cmp
xor
movsl
ljmp
and
add
xchg
add
push
push
add
in
mov
test
test
dec
pop
dec
icebp
push
add
sti
out
sub
mov
or
adc
sbb
lcall
gs
ja
das
stc
insl
xor
lods
dec
nop
add
jnp
sub
lds
jno
gs
pop
mov
xchg
xor
aam
gs
sub
testb
dec
dec
mov
outsb
cmpsb
add
add
mov
inc
add
push
jge
xlat
leave
lahf
rolb
loopne
inc
add
outsb
xor
pop
out
outsb
inc
dec
cwtl
cwtl
int3
addb
add
fbld
add
outsl
mov
add
mov
mov
sub
add
add
jnp
add
hlt
add
push
add
mov
add
mov
xor
mov
leave
xchg
popa
mov
mov
movsb
add
fdivl
add
mov
pop
rcrl
punpckldq
mov
fstl
addr16
jns
mov
ret
cwtl
add
add
jo
rolb
jp
mov
or
adc
add
int
jle
cwtl
add
add
mov
ja
push
add
mov
inc
add
add
adc
jl
add
pop
adc
add
xor
pop
mov
in
mov
jl
sbb
inc
add
jle
rolb
lcall
loop
in
imul
add
jecxz
rolb
movb
jbe
jb
stos
sub
das
pop
hlt
add
add
addr16
add
inc
and
inc
pop
call
imul
roll
addb
add
inc
add
add
add
ficompl
adc
mov
fistpll
dec
je
pop
test
mov
sub
mov
add
push
dec
jbe
sbb
test
add
mov
or
inc
mov
push
dec
sub
cmp
jle
pop
outsl
js
add
add
pop
push
add
dec
out
int3
pop
mov
add
push
pushf
mov
add
add
add
out
ror
adc
xchg
outsb
lret
out
lock
or
adc
das
lahf
icebp
test
icebp
inc
add
add
mov
pop
leave
addb
add
add
cmp
add
jl
jns
mov
add
mov
data16
add
add
add
adc
fidivs
adc
clc
fisubl
imul
movsb
add
testl
fwait
or
add
data16
inc
add
adc
movb
add
imul
in
rolb
das
in
or
add
xorl
add
push
insl
testb
add
pop
cs
or
inc
push
add
xchg
pop
stos
das
mov
in
push
rorl
jb
mov
push
add
shl
fwait
out
je
addb
lret
adc
cmpsl
shll
data16
outsb
jecxz
enter
test
cmpsb
add
dec
scas
dec
sbb
es
add
add
mov
stos
loope
add
out
or
inc
jp
add
mov
cmpsl
out
sub
leave
mov
out
xchg
rolb
jl
rolb
add
fnstsw
fmul
insl
jg
mov
loope
add
out
cli
xchg
push
add
push
add
add
add
inc
aaa
stc
incl
mov
inc
xor
add
sti
pop
loopne
aaa
mov
add
mov
in
stos
cmpsl
xchg
add
xchg
mov
inc
add
sti
push
push
cs
leave
xor
in
cmpl
add
repz
add
add
inc
sti
dec
add
push
add
setno
adc
push
arpl
mov
fidivrs
mov
sti
dec
jecxz
mov
out
xchg
add
sbb
add
xor
addb
mov
add
sub
mov
loope
add
aad
mov
inc
or
adc
mov
pushf
testb
push
add
push
rcrl
daa
mov
gs
jns
insb
outsl
call
les
les
push
add
push
js
pop
jbe
add
sarl
movsl
rorl
mov
lock
sub
cmp
add
xchg
cmp
icebp
push
add
incl
mov
sbb
lock
add
pop
cmpsl
call
lock
addb
outsl
and
mov
add
test
add
sbb
les
xchg
add
std
cwtl
jo
and
mov
add
add
push
adc
lahf
fwait
rcr
inc
sahf
in
adc
or
fimull
pop
add
mov
cmp
mov
add
rolb
add
sub
cmp
add
mov
add
icebp
sbb
je
lods
loop
testb
fsubp
add
ret
xchg
add
rolb
and
imul
dec
dec
pop
iret
add
or
cmp
mov
sbb
add
test
addb
pop
push
add
add
cmp
out
movsl
mov
das
sbb
in
xor
xor
mov
adc
mov
popf
cmpsb
add
xchg
add
sbb
cmp
sbb
add
add
xchg
add
add
inc
repz
lret
or
aaa
jmp
add
add
add
add
or
xchg
inc
add
add
mov
in
jo
push
mov
scas
mov
add
add
pop
data16
sub
add
into
mov
aad
lret
add
and
pop
loope
jle
dec
inc
add
add
mov
add
pop
out
scas
push
pop
sub
sub
add
mov
push
jl
jl
add
ja
cmp
mov
cmp
ficomps
or
add
mov
movsb
add
pushf
cmp
mov
or
add
add
add
jns
test
int
and
mov
insl
xchg
add
sub
aas
cwtl
out
and
out
xchg
add
add
push
mov
mov
aam
std
jno
jecxz
xchg
xlat
mov
fisubs
pop
push
leave
sub
sub
sbb
add
mov
or
and
mov
xor
lea
loopne
mov
jecxz
enter
outsl
cmp
add
xlat
addr16
sbb
add
add
mov
std
add
add
add
cld
or
and
popa
and
add
add
hlt
add
das
sbb
push
add
loop
mov
ja
add
addr16
in
mov
in
mov
bound
mov
lret
dec
jecxz
add
add
lcall
xor
fwait
mov
add
add
add
push
add
xchg
mov
cmp
add
xor
push
add
mov
lods
rolb
jb
cli
loopne
pop
fsub
add
dec
jg
cmp
add
jmp
movb
add
add
out
sub
xchg
add
in
or
inc
pusha
add
iret
jnp
pusha
add
add
xor
add
jae
mov
testl
testb
add
add
add
add
add
add
fisubl
mov
pop
push
add
add
aaa
add
loop
lds
cltd
xchg
add
mov
cmc
jmp
arpl
add
adc
ds
js,pt
insl
inc
add
cmp
inc
or
pusha
add
movsl
lret
std
xchg
inc
pop
stc
push
add
popa
or
addr16
adc
out
add
les
daa
subl
cli
jbe
mov
mov
adcl
add
out
push
jg
mov
mov
add
popf
sub
shrl
mov
add
add
lcall
insl
das
fxch
dec
sti
in
in
pop
sbb
mov
add
add
add
insl
sbb
dec
mov
inc
adc
fmuls
stos
mov
add
or
pop
jo
addb
mov
rolb
add
mov
rolb
arpl
out
js
dec
cmp
jnp
lds
mov
dec
cmpsb
add
add
add
add
dec
mov
add
js
add
add
mov
add
mov
cmpsb
add
sbb
insb
cli
imul
sbb
rcll
push
inc
or
iret
add
nop
add
mov
rcr
sahf
les
mov
add
add
mov
sub
movsb
add
add
loopne
lds
add
mov
mov
pop
mov
lret
pushf
push
flds
into
pop
mov
das
jmp
add
push
out
or
xchg
inc
into
cmpsl
shll
pop
xlat
dec
mov
cmc
movsl
or
or
add
add
add
add
add
les
push
inc
add
jns
add
pusha
add
inc
add
pop
push
jp
fsubs
mov
cmp
add
add
aad
push
cmc
in
neg
push
xchg
add
sub
out
jo
inc
add
sub
icebp
mov
add
mov
add
lock
mov
jo
xor
idiv
stos
jno
lds
xlat
mov
pop
and
imul
push
add
add
add
xchg
add
add
sub
add
int3
xchg
subl
add
add
sub
sbb
add
inc
jne
ljmp
add
add
sbb
nop
add
add
add
add
pushf
sbb
fstl
dec
leave
enter
aad
movb
sahf
push
add
imul
in
stc
rolb
push
jns
add
pushl
mov
cmc
mov
imul
add
add
stos
call
mov
add
mov
imul
xorl
pop
js
fildl
int
or
add
sbb
add
inc
add
jno
add
ja
sbb
add
push
mov
xor
fldcw
inc
add
add
cs
repz
lret
dec
cld
loop
mov
adc
scas
xchg
add
or
jae
fiaddl
pop
outsb
inc
add
add
aam
in
popf
xchg
add
hlt
add
add
cmp
jnp
add
jl
add
add
fdivrl
pop
adc
lahf
lret
fadds
mov
sbb
movb
add
or
jnp
push
add
test
js
idiv
lret
dec
xchg
fldl2t
and
push
out
sbb
sbb
add
loope
jg
add
les
push
add
sbb
add
dec
jb
rolb
jo
ret
imul
add
mov
add
and
mov
adc
jns
add
add
cmp
int
cli
add
push
mov
outsb
xor
dec
out
mov
jmp
add
add
test
cltd
insl
inc
xchg
inc
das
push
dec
loopne
mov
fnsave
out
xor
scas
lds
daa
push
and
repnz
add
sbb
pop
fldt
cmp
out
add
add
push
and
mov
lock
jle
lock
mov
adc
stos
push
into
sti
push
add
or
add
inc
add
add
jle
xlat
pop
hlt
add
mov
xorl
xlat
test
inc
jmp
push
add
inc
cmp
out
pushf
mov
popa
pop
cli
in
addr16
add
add
add
nop
add
add
data16
or
dec
fdivl
xchg
add
inc
lock
sbb
bound
mov
or
mov
stos
imul
add
add
dec
nop
add
add
cmpsl
sbb
sub
fwait
xchg
add
cmpsb
add
mov
pop
filds
jl
or
and
add
ds
or
add
mov
arpl
xchg
add
push
add
add
add
lods
into
push
mov
mov
pop
test
pushf
and
pushf
add
push
rolb
mov
loope,pt
add
pop
sub
fidivl
add
add
add
fwait
mov
cwtl
mov
imul
add
add
or
mov
mov
loop
lods
clc
pop
jmp
add
movsb
add
add
jb
loop
arpl
arpl
int
add
scas
aaa
add
mov
mov
add
mov
sbb
mov
add
push
mov
add
mov
push
add
aaa
lahf
mov
pop
jecxz
ds
and
addr16
in
dec
dec
cld
add
mov
ret
mov
push
add
fwait
cwtl
bound
mov
jne
sub
and
dec
insb
or
shrl
in
cltd
push
dec
inc
jns
xor
add
mov
push
add
mov
repz
add
add
cmp
mov
pop
pop
mov
inc
sbb
add
xor
cs
test
adc
cmp
jno
add
push
cmp
add
out
mov
push
add
outsl
cltd
pop
fimull
add
enter
ljmp
fcoms
mov
fsubrl
jo
or
xor
fistps
sub
jp
fsts
movsl
mul
xor
and
fwait
pop
bound
mov
popf
mov
push
in
lock
ss
hlt
add
add
add
syscall
mov
add
add
mov
addr16
jl
arpl
pop
adc
inc
adc
test
repnz
loopne
out
inc
icebp
lods
ret
pop
ja
scas
jnp
jnp
add
out
stos
and
add
push
cltd
int
xchg
test
adc
fmull
add
sbb
add
add
add
mov
jb
cmp
rcll
mov
fsubs
add
or
data16
xlat
mov
ljmp
add
push
add
or
outsl
xchg
pop
decl
js
and
rolb
add
mov
fstl
jae
inc
testb
add
add
add
js
add
mov
loopne
mov
add
das
mov
out
dec
add
movsl
cmp
add
test
dec
and
inc
xchg
js
add
cmovns
dec
add
mov
insb
cmp
test
out
cmpsl
leave
loope
pop
jge
fnsave
daa
shll
mov
cmp
add
add
pop
int
pop
and
fidivrl
repnz
int3
push
xor
add
data16
lods
add
rolb
xchg
add
jne
outsb
push
xor
push
or
mov
add
repnz
add
add
stc
mov
mov
mov
cmp
pop
lods
test
add
adc
movb
xchg
cmpl
add
add
scas
add
push
add
fiaddl
pop
sti
mov
insl
sbb
pop
roll
cld
incl
mov
mov
add
add
mov
add
push
xor
gs
int
add
add
and
add
add
add
iret
inc
aas
js
imul
mov
addr16
mov
push
flds
add
mov
or
or
nop
add
ret
add
sti
clc
sub
lods
jmp
add
add
lahf
jmp
add
push
add
add
add
mov
add
addb
add
or
inc
add
add
arpl
pushf
enter
add
xor
pop
daa
pop
notl
into
or
add
enter
add
sarl
add
add
and
add
mov
add
add
inc
mov
sbb
inc
push
jnp
aam
int3
outsl
movhps
cmp
add
in
dec
xchg
mov
and
jecxz
add
mov
and
rorl
add
mov
rorl
add
add
cmpsb
add
add
mov
add
add
hlt
add
dec
aam
js
add
cmp
arpl
icebp
rolb
jl
mov
and
rolb
jno
add
add
dec
mov
mov
xchg
lret
jns
ljmp
sarl
lahf
xchg
jmp
add
add
xchg
push
xchg
add
ret
pop
mov
add
sub
sbb
aad
dec
jle
jo
jge
ds
call
sub
mov
addb
cmp
insb
add
mov
cmp
inc
add
shld
push
lods
mov
movsb
add
xchg
add
test
rolb
add
jp
jp
mov
fucomip
jg
jmp
scas
mov
pushf
mov
insl
mov
add
add
movb
dec
ja
add
xor
fsubrs
stos
addr16
add
xchg
cmp
fnop
add
mov
add
xchg
outsl
dec
das
test
add
add
add
and
rorl
dec
insb
sbb
mov
popa
sub
fwait
test
add
add
add
dec
stos
xor
add
jg
movb
xchg
pushf
lds
and
pushf
stos
inc
add
pushf
popa
testb
mov
iret
pop
or
jnp
lret
mov
leave
roll
add
or
xor
adc
lret
add
add
int
add
add
rolb
add
push
add
add
mov
add
add
mov
sbbl
add
inc
add
frstor
inc
push
add
mov
call
push
add
test
hlt
add
nop
add
imul
rolb
adc
add
jno
add
add
add
inc
add
daa
add
mov
adc
inc
pop
aas
cmp
push
inc
add
add
dec
or
les
movb
adc
lahf
mov
pop
lcall
lea
inc
add
in
mov
mov
add
xor
movb
scas
pop
pop
sub
test
dec
ja
jg
ds
xor
daa
mov
adc
movsl
out
mov
rolb
out
add
stc
jg
fsubrl
int3
lahf
stc
clc
std
and
mov
rolb
stos
sub
add
movb
adc
pop
mov
std
xor
shrl
jb
jbe
jo
test
aad
add
sub
rolb
cmp
add
inc
repz
add
add
or
add
mov
js
jo
mov
xor
pop
cmpsl
std
add
mov
mov
add
ret
add
push
add
or
jl,pt
adc
lret
and
xchg
cmpsl
cmp
dec
push
into
addb
dec
push
push
aas
rorl
cs
sbb
mov
jno
add
add
pop
mov
out
add
outsl
mov
push
add
ret
rcrl
inc
add
loope
add
insl
aas
inc
add
sub
adc
addb
insl
pop
mov
add
add
lock
add
add
fwait
xchg
add
push
aaa
sbb
cli
xor
add
fsubr
xchg
add
add
sub
add
push
add
dec
les
pusha
add
scas
out
iret
hlt
add
dec
dec
in
in
jbe
mov
jmp
pop
sub
add
jge
pusha
add
loope
shll
push
jl
fcomps
ret
stos
push
add
push
add
das
add
and
int3
mov
inc
and
mov
testb
xchg
jmp
daa
getsec
aam
rcll
out
mov
mov
out
add
in
lods
loopne
ret
cmpsl
movb
cmp
jns
lcall
xchg
out
arpl
dec
aad
add
into
fcmovnbe
add
jmp
pop
std
nop
add
sbb
adc
rcrl
insl
jne
xchg
add
xlat
sub
add
loop
add
adc
outsb
sbb
dec
ja
lods
jge
gs
jbe
cmp
push
cmp
repz
js
lods
jo
popf
mov
add
xor
jnp
sbb
mov
fsts
pusha
add
mov
sub
sub
ret
pop
xchg
adc
mov
add
inc
cmp
jg
add
mov
fs
cwtl
adc
pop
xor
aaa
sti
sbb
mov
mov
add
add
mov
sub
call
adc
or
sbb
add
add
add
inc
add
outsb
loope
add
jecxz
add
add
and
mov
mov
pop
mov
xchg
add
sub
ja
push
jge
mov
inc
mov
add
inc
call
lret
push
add
pop
add
rolb
add
push
pop
rolb
dec
add
add
add
call
pop
xchg
add
add
flds
mov
sbb
pusha
add
decl
pop
mov
mov
fscale
pop
pop
mov
add
add
lea
mov
jmp
add
sub
addb
xchg
inc
imul
mov
out
adc
pop
addb
add
roll
mov
mov
add
pop
mov
movsb
add
scas
fwait
or
in
and
and
testb
int3
adc
add
ss
imul
call
add
movb
movsl
jmp
xchg
je
ficomps
xchg
xor
rolb
xchg
add
mov
fisubs
add
jmp
lret
gs
fwait
sub
test
push
add
mov
add
add
lret
ljmp
stos
dec
add
iret
iret
cltd
push
add
clc
movsl
push
movsl
sbb
pusha
add
cs
push
add
mov
int
sub
loope
add
add
dec
sub
xchg
int3
kmovb
inc
xchg
sti
mov
nop
add
adc
out
arpl
test
add
add
lods
and
pop
icebp
nop
add
out
add
mov
or
fildl
in
scas
jg
add
or
push
imul
mov
dec
mov
xlat
push
add
das
jg
outsb
hlt
add
mov
loop
arpl
add
add
add
add
add
mov
sbb
jnp
add
add
mov
xor
add
mov
cmpsl
imul
fwait
movsl
aad
dec
stos
dec
gs
cmp
add
movsb
add
mov
insb
mov
dec
push
add
mov
cltd
movb
aad
fnstsw
pop
inc
mov
add
sbb
rolb
pushf
mov
adc
outsl
mov
lods
gs
in
sbb
and
movb
add
arpl
mov
sbb
mov
ja
inc
cmc
cmp
jns
xor
imul
pop
jo
arpl
add
mov
in
add
in
push
cmp
rorl
inc
ja
add
add
imull
stos
pusha
add
and
jne
add
add
dec
out
jmp
add
dec
rolb
jbe
fnstcw
add
add
add
add
pop
cmp
xchg
add
cmpsl
dec
scas
or
jo
dec
mov
add
mov
pushf
imul
xchg
add
mov
xor
jle
add
stos
in
push
add
dec
mov
test
and
add
loop
in
jbe
addb
add
fwait
dec
stc
popl
testb
add
fsubs
add
pop
push
cmpsl
sbb
sbb
and
mov
addb
outsb
ss
xchg
das
xchg
movsb
add
data16
add
cmp
sti
jno
mov
adc
add
add
into
icebp
or
mov
push
adc
loop
sub
fsubrl
hlt
add
add
add
cmp
add
add
sub
test
test
jecxz
add
out
cmp
sub
nop
add
add
scas
leave
jae
xchg
dec
lds
add
mov
add
mov
add
cmc
xchg
inc
pusha
add
popl
mov
mov
add
mov
popf
and
jbe
mov
pop
test
jo
dec
sub
jmp
pop
fcmovnu
testb
add
sbb
add
ret
push
add
add
insb
in
lret
mov
lods
fbstp
scas
sbb
xchg
add
mov
pop
test
aaa
xchg
add
add
test
ja
mov
add
leave
jno
into
jo
inc
push
cmp
push
add
pop
and
mov
rolb
dec
dec
daa
fld
insb
xor
pop
mov
cmp
add
cmp
addl
adc
mov
dec
xchg
push
add
data16
or
pop
xor
out
pop
pop
xchg
add
cmc
fyl2xp1
jo
cmpsl
sub
jg
les
les
stos
stc
mov
cltd
iret
inc
add
add
mov
repnz
out
push
jle
clc
mov
mov
dec
lret
imul
xchg
mov
add
mov
inc
repz
mov
mov
insb
std
aad
add
rolb
in
icebp
add
add
xlat
or
pop
xor
xchg
add
rolb
mov
ret
inc
add
sbb
loop
push
push
sbb
add
dec
ljmp
into
jno
add
xchg
mov
test
cmp
add
add
addb
add
mov
inc
add
stos
add
mov
popf
ss
cmpsb
add
add
add
or
mov
mov
add
jb
and
mov
test
out
jle
mov
pop
xlat
lret
pop
fwait
dec
arpl
inc
add
add
pop
jne
mov
add
adc
pop
push
mov
inc
aaa
mov
lock
xor
outsb
or
xchg
out
movsl
fmull
mov
popf
in
jne
add
add
and
mov
cs
and
mov
mov
adc
adc
mov
data16
mov
add
add
addr16
xchg
dec
lret
sub
aam
sti
lret
or
sbb
adc
mov
addb
xchg
add
add
movb
movsb
add
cmp
add
mov
inc
pop
jo
cmp
sub
add
add
pop
les
rolb
outsb
jl
add
xchg
leave
shll
add
add
add
xchg
dec
mov
popa
iret
bound
mov
pop
add
add
dec
jmp
xchg
pop
mov
adc
add
add
mov
test
movsl
ja
lahf
fbld
xor
mov
popf
sub
pop
mov
xchg
add
jl
dec
int
add
lcall
xlat
out
pop
jecxz
push
add
dec
rolb
aad
lods
jmp
out
cwtl
inc
les
pop
add
mov
mov
add
add
dec
cmovnp
loopne,pn
sub
jg
mov
add
outsb
xchg
add
ftst
add
mov
int
and
into
int
add
cwtl
loop
je
mov
loope
add
inc
cli
or
enter
aaa
adc
fistps
add
mov
xor
rolb
addr16
and
sti
daa
add
adc
enter
leave
jge
or
add
add
adc
out
in
inc
add
adc
jo
cmp
inc
add
jae
push
add
xchg
imul
add
sarl
xchg
add
inc
jbe
add
mov
mov
aas
fists
push
adcl
jg
push
add
sub
add
int3
test
add
hlt
add
jg
mov
add
xor
add
dec
cwtl
sbbl
add
outsl
xchg
add
pop
outsl
and
mov
inc
add
lret
sbb
fdivs
push
add
mov
notl
lods
insb
cli
test
mov
lcall
add
add
mov
mov
outsb
lock
push
test
add
aas
mov
stc
in
add
data16
in
sbb
jp
jmp
sub
cmp
dec
sbb
lret
fwait
jbe
data16
add
and
mov
adc
jbe
and
adcl
test
add
dec
jle
int
or
jmp
sbb
iret
pop
jns
add
fdivrs
add
cld
mov
pop
cmp
movb
mov
jmp
sti
mov
add
daa
sarl
add
mov
add
fcoml
add
add
xor
add
add
add
add
or
ja
add
add
cltd
adc
mov
insb
or
jl
xor
shrl
sbb
iret
fld
add
xchg
add
aam
xchg
pop
clc
and
mov
les
mov
ret
fsubs
test
imul
pop
mov
push
add
ja
add
cmc
push
cmp
add
cld
xor
insb
mov
rolb
rcl
pop
addb
ret
push
pop
fisubrs
ret
hlt
add
out
add
add
int3
xchg
bound
mov
loop
inc
add
jb
fildll
xchg
adc
enter
add
bound
mov
push
add
outsb
and
mov
xor
je
hlt
add
mov
mov
push
add
sahf
lcall
rolb
loop
fbstp
imul
dec
pop
mov
inc
repz
inc
fucomip
mov
or
xchg
add
loope
pop
pop
call
call
popf
mull
cmp
add
or
aam
dec
add
inc
mov
jecxz
push
arpl
je,pt
xchg
add
sbb
ficompl
testb
sti
add
movb
xor
xor
cmp
add
xchg
je
push
add
push
xor
leave
lods
loope
and
cltd
insl
push
add
dec
sbb
sub
dec
pop
xchg
add
mov
sbb
ss
outsb
pop
aad
rolb
cmp
xor
jo
int
push
aad
mov
add
adc
xchg
add
add
mov
jno
add
dec
outsl
mov
ret
loop
out
mov
add
cmp
add
mov
rolb
test
add
cs
scas
das
sbb
add
adc
xchg
add
mov
add
add
add
sti
clc
pop
mov
add
inc
in
mov
call
xor
clc
clts
add
lock
or
out
xchg
mov
add
add
jo
cmpsb
add
inc
add
add
push
add
push
add
add
daa
addl
cs
add
sbb
xchg
mov
cmc
xor
mov
nop
add
xor
fiadds
call
add
stos
sub
push
add
les
mov
imul
add
jo
clc
stos
fnstsw
mov
stos
out
pop
and
mov
add
add
int
lret
fnop
add
mov
sub
add
int3
mov
mov
in
repnz
sub
add
data16
jecxz
inc
in
enter
mov
into
push
addr16
inc
add
test
push
adc
insl
xor
mov
add
sbb
pop
cltd
inc
add
pop
scas
je
push
add
leave
fsub
jg
add
add
aas
push
add
movsb
add
aam
or
fldt
inc
jge
lret
rolb
mov
jmp
lret
xlat
dec
mov
insl
jne
push
add
cmp
add
cld
in
pop
imull
and
mov
push
add
xchg
xchg
sub
inc
add
xor
xchg
inc
scas
aas
lahf
jl
add
subl
pusha
add
add
add
xchg
rolb
insb
fcmovu
dec
push
add
add
lods
jnp
je
rolb
xor
push
add
sub
push
add
push
push
add
mov
mov
pop
mov
mov
cmp
adc
lock
add
adc
lcall
