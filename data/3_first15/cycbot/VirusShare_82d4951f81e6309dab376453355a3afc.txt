add
add
add
mov
pop
pop
add
sbb
add
add
add
add
mov
add
cs
into
into
into
into
into
into
into
into
out
movsl
movsl
movsl
mov
fcmovnu
fldt
inc
add
add
es
into
into
add
ss
cmp
loop
loop
loop
loop
loop
mov
mov
add
add
add
sbb
add
xor
into
into
fcmovu
fisubl
movsl
movsl
movsl
mov
jle
jle
add
add
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
add
add
push
push
push
push
push
push
push
push
push
push
or
or
add
add
ja
ja
ja
ja
ja
ja
bound
bound
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
add
adc
adc
adc
adc
adc
adc
pop
pop
pop
pop
pop
pop
pop
add
hlt
hlt
hlt
xchg
xchg
xchg
xchg
or
loope
loope
sub
sub
jno
add
add
mov
lock
xchg
xchg
xchg
xchg
scas
scas
add
add
add
std
std
std
std
std
div
div
div
div
div
div
div
add
add
je
je
je
je
add
xor
mov
mov
mov
mov
pushf
pushf
pushf
pushf
pushf
addb
push
push
push
push
add
add
add
es
add
add
jns
jns
add
add
cmp
cmp
jle
jle
add
add
add
add
add
outsb
outsb
outsb
in
in
in
in
in
in
in
pop
pop
pop
pop
dec
stc
and
and
and
and
add
gs
hlt
add
add
dec
dec
dec
cmp
addl
add
rcl
addb
addb
icebp
icebp
jmp
jge
jge
jge
rcl
rcl
add
sbb
sbb
sbb
sbb
pusha
add
add
add
insl
int3
int3
int3
int3
int3
int3
int3
int3
int3
test
test
test
test
test
test
sub
sub
fcmovnu
fcmovnu
fcmovnu
fcmovnu
dec
rcl
mov
mov
pusha
pusha
add
sarl
insl
insl
push
lea
add
mov
mov
cmp
cmp
cmp
cmp
lret
add
add
add
cli
cli
cli
and
add
add
add
dec
leave
leave
push
push
push
push
jne
jne
jne
jne
jne
xor
cmc
cmc
cmc
or
add
mov
orb
cltd
add
cmp
cmp
cmp
cmp
cmp
add
inc
inc
inc
inc
inc
inc
inc
inc
lds
add
add
arpl
pusha
pusha
pusha
pusha
sti
sti
sti
sbb
sbb
add
leave
leave
leave
leave
leave
leave
leave
leave
add
faddl
add
add
add
fcmovnu
fildl
add
add
sub
sub
sub
add
add
jno
flds
scas
scas
scas
scas
scas
scas
add
add
add
add
add
add
add
add
scas
scas
mov
lods
lods
lods
lods
gs
add
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
add
add
add
add
inc
mov
incl
add
add
leave
leave
cs
aam
aam
add
aad
push
push
push
push
push
push
push
push
push
add
mov
out
out
incb
add
adc
adc
add
add
mov
add
div
div
testb
add
test
add
add
pop
pop
pop
add
jp
jp
jmp
jmp
jmp
add
add
push
push
mov
scas
scas
scas
scas
scas
scas
add
add
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
stos
stos
stos
xor
xor
and
add
add
add
fnsave
out
out
add
and
and
add
xlat
xlat
ja
ja
xlat
ret
add
add
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
dec
push
push
add
xor
xor
inc
pop
pop
pop
sti
sti
sti
sti
sti
sti
sti
add
add
add
popa
popa
ds
mov
add
add
add
xchg
xchg
imul
add
fmull
mov
add
add
pop
pop
pop
add
add
dec
dec
dec
dec
dec
dec
dec
gs
push
push
push
push
push
pop
repz
jp
add
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
cmc
cmc
push
push
push
add
add
add
fcompl
cmpsl
in
sub
sub
daa
daa
daa
daa
daa
daa
enter
add
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
add
mov
mov
add
sarb
mov
xchg
xchg
adc
adc
and
xor
popf
popf
mov
add
cmp
pop
pop
pop
pop
pop
pop
pop
pop
pop
cld
cld
cld
add
add
add
add
add
mov
jno
jno
jno
in
in
in
in
in
in
in
in
xchg
xchg
xchg
jle
sbb
pop
pop
pop
pop
pop
pop
pop
testl
add
mov
push
push
push
push
push
push
mov
mov
and
and
and
das
add
add
add
rcl
rcl
rolb
push
push
push
push
push
pop
add
add
int
int
int
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
add
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
cmp
cmp
cmp
cmp
cmp
jp
jp
jp
jp
nop
nop
cmp
cmp
cmp
cmp
cmp
add
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
add
mov
mov
add
add
movsl
movsl
and
and
and
and
and
and
and
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
add
add
addb
add
out
out
out
out
out
out
pop
pop
pop
pop
pop
pop
pop
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
scas
add
dec
add
pop
pop
pop
add
add
add
add
add
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
add
loope
inc
xlat
add
add
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
ds
stos
inc
inc
cmp
push
push
add
add
add
inc
inc
add
add
add
add
add
add
add
add
add
or
or
sub
sub
add
add
add
add
add
outsb
outsb
outsb
cmp
dec
dec
dec
dec
dec
mov
lea
add
pusha
pusha
pusha
pusha
pusha
pusha
pusha
add
add
add
add
jp
jp
jp
or
or
sub
sub
sub
sub
icebp
icebp
icebp
icebp
add
add
add
push
push
push
push
lret
add
add
add
sbb
sbb
sbb
mov
mov
and
add
add
and
mov
add
xor
xor
xor
add
add
xor
xor
xor
add
add
add
scas
scas
scas
add
int
int
int
int
jl
jl
add
xlat
xlat
xlat
xlat
xlat
xlat
add
adc
jbe
mov
mov
pop
add
aam
aam
aam
sbb
sbb
sbb
shrb
imul
add
add
add
cs
int
int
int
add
repz
add
push
push
push
push
push
push
push
ja
ja
ja
ja
add
add
add
add
add
das
das
das
das
inc
inc
mov
mov
mov
movl
add
add
add
add
add
xchg
xchg
xchg
xchg
stos
or
mov
add
add
add
add
add
add
add
add
add
add
add
add
xlat
xlat
xlat
xlat
xlat
pop
pop
pop
pop
jecxz
jecxz
jecxz
out
out
out
out
out
out
out
add
add
add
ds
cmc
add
or
or
add
add
add
lret
lret
add
add
xor
xor
add
add
add
jp
leave
leave
leave
leave
leave
leave
leave
leave
decl
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
add
mov
lret
add
add
add
add
repnz
add
add
add
lahf
add
add
jne
add
adc
adc
add
in
in
add
add
add
add
int3
int3
add
add
add
jns
sbb
sbb
mov
add
add
add
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
hlt
hlt
hlt
hlt
adc
mov
xchg
mov
fcomp
fcomp
fdivs
aaa
aaa
xchg
xchg
xchg
xchg
xchg
inc
inc
inc
inc
inc
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
imul
add
roll
addb
data16
xor
xor
add
add
or
add
mov
aad
aad
aad
and
and
and
and
and
xor
xor
add
add
loopne
xchg
xchg
xchg
xor
add
add
add
cmc
cmc
add
add
pop
das
add
mov
mov
mov
mov
mov
add
call
xor
xchg
xchg
xchg
xchg
xchg
add
ljmp
jne
jne
arpl
arpl
push
push
push
push
push
xchg
xchg
xchg
xchg
add
add
add
add
xor
add
lahf
stc
stc
stc
stc
stc
addb
add
pop
add
add
add
add
cmp
cmp
movsb
movsb
add
add
add
adc
insl
insl
insl
insl
insl
insl
insl
insl
insl
je
add
add
add
das
sti
sti
sti
add
jecxz
jecxz
add
mov
xchg
std
std
std
std
std
std
std
std
std
std
std
add
add
add
add
cmp
cmp
cmp
cmp
or
mov
mov
mov
mov
test
xchg
xchg
xchg
xchg
xchg
add
add
cmc
cmc
dec
dec
dec
dec
dec
dec
xchg
xchg
add
and
and
and
and
dec
dec
dec
adc
xchg
xchg
xchg
xchg
xchg
xchg
add
add
dec
dec
dec
dec
in
add
div
add
add
add
push
push
push
push
push
push
push
push
push
push
push
xchg
xchg
xchg
xchg
add
bound
add
add
add
add
and
aaa
aaa
add
add
add
movsb
movsb
movsb
movsb
movsb
movsb
movsb
inc
inc
inc
sub
sub
sub
sub
cli
cli
and
addr16
out
out
out
out
out
out
out
out
out
out
out
out
out
out
add
add
mov
leave
leave
leave
into
into
into
into
into
into
into
into
into
into
into
into
into
into
add
add
add
add
add
add
add
push
push
or
add
ds
add
jp
jp
add
das
das
das
sbb
sbb
sbb
sbb
sbb
dec
div
div
div
div
div
div
sub
in
in
call
adc
adc
add
add
add
clc
jp
add
jbe
jbe
jbe
add
add
add
add
adc
cli
cli
mov
sbb
sbb
sbb
sbb
add
add
xor
and
and
push
add
adc
adc
add
add
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
ljmp
add
mov
mov
push
push
das
das
das
das
das
das
das
jp
jp
xchg
xchg
xchg
aas
aas
aas
aas
add
add
add
cmp
cmp
add
bound
add
add
in
in
fiaddl
ret
ret
add
add
add
fcmovu
add
add
add
rol
add
add
add
mov
and
imul
sub
sub
sub
cmpsb
cmpsb
cmpsb
cmpsb
out
out
out
lcall
xchg
xchg
add
ret
ret
ret
ret
ret
ret
ret
add
ret
ret
ret
add
add
mov
stos
push
add
mov
mov
mov
insb
insb
insb
insb
out
repnz
mov
decb
push
lds
rol
rol
jae
jae
insb
ds
js
js
add
add
movsl
movsl
mov
add
add
add
and
and
and
and
add
add
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
push
cmp
jmp
jmp
add
add
add
cmc
cmc
cmc
cmc
cmc
add
add
add
loopne
add
add
jmp
hlt
fwait
fwait
fwait
fwait
fwait
add
add
add
outsl
aad
sub
sub
sub
sub
js
js
js
js
pusha
pusha
in
in
pop
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
mov
mov
mov
add
add
xchg
xchg
data16
add
fmuls
pop
pop
pop
in
in
in
sbb
sbb
add
add
add
adc
adc
adc
adc
push
push
push
push
cld
cld
push
add
jo
jo
jo
add
enter
jbe
div
negl
sbb
sbb
add
stos
stos
stos
stos
stos
stos
stos
movsl
movsl
and
add
mov
inc
inc
inc
inc
inc
inc
mov
add
add
sub
xchg
xchg
push
jl
mov
mov
add
repz
add
add
add
or
or
or
or
or
or
or
insb
insb
insb
insb
insb
jne
push
add
cs
aaa
aaa
aaa
das
incb
out
out
add
add
test
mov
add
cltd
cltd
cltd
cltd
cltd
jl
pop
pop
pop
jae
jae
jae
iret
iret
iret
iret
iret
in
in
or
or
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
add
add
pmaxsw
out
out
out
out
out
out
out
out
or
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
add
sbb
sbb
sbb
add
pusha
pusha
pusha
pusha
add
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
push
add
add
add
add
out
out
out
out
add
mov
dec
test
test
add
add
add
add
add
add
add
add
add
add
data16
jmp
arpl
arpl
xor
hlt
hlt
hlt
hlt
hlt
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
add
pop
pop
pop
pop
pop
push
push
push
push
push
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
or
add
xchg
push
addl
addl
addl
add
add
mov
cmp
cmp
cmp
stos
fcomp
add
add
movsl
movsl
movsl
movsl
imul
lcall
sub
sub
sub
sub
sub
sub
sub
sub
sub
das
das
das
das
shll
jbe
jbe
jbe
jbe
popa
popa
popa
add
add
jmp
nop
nop
nop
nop
nop
nop
nop
nop
ss
add
mov
add
add
add
fcomp
fcomp
fsubrs
lock
add
xor
cmpsb
pop
pop
pop
pop
pop
pop
pop
pop
pop
cwtl
add
and
and
and
faddl
add
add
add
mov
add
push
push
push
add
js
js
add
add
jmp
add
jae
jae
add
loope
loope
loope
add
popl
xchg
xchg
xchg
xchg
xchg
jb
jb
daa
daa
popa
add
xor
xor
add
pop
pop
pop
add
add
add
div
div
testl
add
test
neg
ret
ret
ret
ret
ret
ret
ret
ret
ret
addr16
sub
sub
or
or
or
or
or
cmp
cmp
cmp
cmp
sub
sub
xor
xor
cltd
cltd
cltd
cltd
cltd
cltd
aad
aad
lea
add
movsb
movsb
movsb
movsb
sbb
sbb
aad
aad
aad
aad
add
add
add
jbe
jbe
jbe
aaa
aaa
aaa
aaa
add
add
add
add
add
xor
add
movsl
movsl
movsl
movsl
movsl
movsl
movsl
add
push
fdivrl
cmp
cmp
cmp
mov
mov
mov
add
add
add
scas
scas
mov
add
jae
jne
add
xchg
xchg
xchg
xchg
add
add
jg
jg
push
cli
add
jbe
jbe
jbe
jbe
mov
mov
es
add
add
add
lock
roll
add
cmp
cmp
cmp
addl
jl
jl
pop
pop
pop
pop
pop
pop
pop
pop
add
mov
add
cmpl
mov
js
mov
cltd
cltd
cltd
cltd
cltd
cltd
jb
jb
jb
add
addb
add
add
inc
inc
inc
inc
pop
pop
pop
pop
pop
pop
sahf
sahf
sahf
sahf
sahf
add
or
or
or
or
add
add
fs
stos
dec
dec
dec
dec
add
add
add
add
popa
adc
add
add
add
add
push
push
push
jae
jae
jae
add
add
and
and
and
loopne
loopne
loopne
loopne
loopne
loopne
add
loop
push
push
push
push
push
push
push
push
push
push
push
push
push
push
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
push
push
add
add
in
in
in
in
add
add
mov
outsb
outsb
outsb
outsb
outsb
rcl
roll
add
add
push
jge
jge
jge
jge
mov
mov
lcall
sub
sub
sub
lcall
mov
pop
pop
pop
pop
pop
pop
add
div
div
div
testl
adc
add
add
mov
add
add
sbb
int3
int3
int3
int3
int3
int3
int3
add
add
add
add
xor
xor
xor
xor
jnp
jnp
jnp
jnp
lret
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
add
rcl
rcl
rcl
rcl
rcl
rcl
rolb
add
popa
popa
popa
add
add
add
roll
add
add
lods
add
xor
pushf
add
pop
pop
pop
pop
pop
adc
adc
adc
adc
adc
adc
adc
lret
lret
lret
lret
lret
lret
lret
lret
lret
add
rol
and
and
add
addl
cmp
int3
add
add
or
or
or
or
rcl
cs
add
add
add
out
out
rcl
rcl
push
push
repz
cmpsl
cmpsl
sbb
add
add
pop
pop
pop
pop
lahf
add
clc
clc
clc
xchg
xchg
xchg
xchg
add
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
add
inc
inc
add
sub
add
daa
daa
and
mov
leave
sbb
sbb
pop
pop
pop
pop
pop
pop
pop
pop
add
add
xchg
xchg
xchg
xchg
xchg
xchg
add
add
add
add
xchg
adc
adc
js
js
mov
mov
add
add
cmp
cmp
cmp
cmp
cmp
cmp
popa
popa
mov
mov
or
or
or
or
or
or
or
add
add
add
sbb
pop
pop
pop
pop
pop
clc
clc
clc
clc
clc
clc
clc
xchg
xchg
add
add
add
mov
add
or
add
add
push
xchg
xchg
xchg
xchg
xchg
xchg
adc
adc
adc
pop
pop
inc
inc
inc
add
push
push
push
push
add
add
add
add
jno
jg
jg
jg
cmpsl
add
add
sub
or
or
or
or
add
add
add
pop
inc
mov
mov
add
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
mov
mov
mov
cmp
add
mov
mov
mov
add
add
outsb
outsb
outsb
outsb
outsb
add
add
add
or
or
or
or
or
or
push
push
iret
iret
icebp
lcall
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
aam
aam
aam
aam
aam
aam
iret
sbb
sbb
sub
sub
sub
test
test
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
add
add
iret
iret
iret
add
add
add
add
cmp
cmp
cmp
cmp
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
or
pop
pop
jmp
fcoml
scas
scas
scas
push
push
push
push
nop
nop
jo
jo
jo
aad
aad
add
push
push
aas
add
add
and
and
and
and
inc
inc
inc
inc
inc
inc
push
push
push
outsb
in
in
in
sub
lret
or
or
or
or
or
or
or
or
add
xchg
mov
push
scas
scas
scas
scas
scas
scas
add
add
rcl
rolb
add
add
adc
flds
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
inc
inc
inc
inc
inc
inc
fcomp
fcomp
fadds
add
pop
pop
pop
pop
pop
pop
pop
pop
dec
enter
enter
add
add
add
jmp
add
add
add
jmp
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
push
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
add
and
and
and
and
dec
lret
lret
lret
sbb
test
movsb
movsb
movsb
movsb
movsb
movsb
in
add
pop
pop
pop
and
and
and
lods
lods
add
add
and
push
add
das
add
add
add
mov
repnz
add
sbb
imul
leave
leave
leave
add
add
add
add
push
push
add
add
add
add
add
add
add
cmp
cmp
daa
addl
outsl
outsl
outsl
xlat
add
add
out
out
xor
xor
cs
in
imul
pop
pop
pop
pop
pop
pop
pop
pop
add
add
mov
mov
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
push
push
push
addb
add
mov
mov
mov
jecxz
jecxz
adc
adc
add
add
repz
add
add
add
mov
mov
mov
addr16
add
add
mov
sahf
sahf
pop
pop
pop
pop
pop
add
add
add
jo
jo
loope
add
add
add
inc
inc
inc
inc
inc
inc
inc
inc
rcl
or
or
or
add
add
enter
enter
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
mov
add
add
add
lds
cmp
mov
cmpsl
cmpsl
lret
lret
lret
lret
lret
lret
add
push
push
push
push
push
push
push
add
sub
sub
sub
add
add
add
dec
dec
push
push
push
push
push
push
add
xchg
xchg
push
push
push
push
push
push
pop
pop
dec
dec
dec
dec
push
add
imul
add
xchg
xchg
push
testb
or
push
push
das
das
das
das
mov
mov
movb
test
add
cmp
cmp
cmp
cmp
popf
popf
popf
popf
pushf
sbb
cmp
add
cmpsb
cmpsb
cmpsb
shll
xor
xor
add
add
add
stos
stos
stos
add
add
popf
popf
popf
popf
popf
popf
popf
add
pop
pop
pop
pop
pop
pop
pop
sbb
sbb
hlt
imul
dec
mov
add
in
mov
add
add
add
div
testl
cmc
cmc
cmc
cmc
add
add
add
add
add
add
add
rcl
rcrl
add
add
add
js
js
js
js
js
push
add
out
out
out
out
out
out
out
out
out
xchg
add
add
mov
mov
jge
jge
jge
jge
jge
mov
addb
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
ret
and
ljmp
div
div
div
div
testb
iret
adc
add
mov
mov
sub
lcall
lcall
add
ret
insb
insb
in
in
in
in
in
add
add
cs
pusha
add
add
add
push
lcall
enter
add
mov
add
jnp
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
mov
mov
mov
mov
mov
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
cmp
cmp
cmp
cmp
cmp
cmp
add
mov
pop
pop
pop
add
add
ds
int
int
int
add
add
add
add
add
add
aam
aam
aam
aam
aam
aam
mov
add
add
aas
aas
aas
xor
xor
add
add
add
add
mov
sub
sub
div
add
add
add
add
sub
pop
add
es
mov
scas
scas
add
js
js
js
mov
mov
add
incb
add
add
add
add
add
hlt
add
add
imul
stos
stos
add
add
add
div
div
xchg
xchg
xchg
xchg
cmc
cmc
cmc
cmc
cmc
addb
add
add
sbb
sbb
sbb
sbb
or
sub
sub
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
enter
enter
add
aam
push
push
push
push
push
push
push
push
push
push
nop
in
in
in
add
div
div
add
add
add
pop
pop
pop
pop
pop
pop
les
sbb
add
jbe
jbe
jbe
add
xchg
add
or
add
jmp
in
in
add
add
xlat
xlat
xlat
xlat
addl
fs
add
add
add
add
add
adc
mov
xchg
add
ret
ret
ret
ret
ret
ret
mov
mov
mov
mov
mov
add
add
daa
cmc
cmc
cmc
cmc
cmc
add
add
push
dec
dec
dec
dec
dec
dec
dec
jmp
sub
mov
jbe
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pop
repnz
stos
stos
stos
stos
stos
stos
push
mov
gs
or
jae
dec
nop
nop
nop
nop
xor
xor
sbb
sbb
sbb
sbb
sbb
sbb
sbb
add
add
add
add
add
loopne
loopne
loopne
loopne
loopne
or
add
add
test
and
and
add
jp
add
add
add
add
add
push
push
push
add
add
sbb
clc
clc
clc
clc
add
add
add
adc
add
add
add
add
sub
leave
leave
leave
leave
leave
leave
add
sbb
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
add
adc
adc
adc
adc
add
add
add
dec
dec
dec
dec
dec
dec
rcl
rcl
rcl
rcl
rcl
rcl
loop
addr16
ret
ret
aad
aad
aad
inc
inc
inc
add
add
pop
add
add
add
add
push
push
push
push
push
jmp
add
int3
int3
mov
scas
scas
jae
jae
jae
jae
jae
jae
jae
jae
jae
mov
pop
pop
pop
pop
fcmovnu
add
add
add
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
std
add
add
push
push
lret
lret
add
cs
jns
jns
jns
jns
into
into
mov
repnz
add
add
dec
inc
inc
jno
add
daa
daa
daa
inc
inc
inc
ljmp
mov
lods
je
icebp
mov
or
popa
push
dec
push
rolb
inc
adc
xchg
outsl
add
mov
adc
jo
jp
pop
mov
dec
cmp
inc
add
loopne
fisttpll
mov
pusha
mov
test
insl
into
lea
jp
aas
and
jecxz
xchg
cmp
inc
aam
inc
rcll
sub
pusha
mov
and
push
add
in
lret
mov
and
mov
std
std
cmpsb
pusha
pusha
cld
daa
loop,pt
xchg
lret
xchg
sti
rorl
push
mov
fisttpl
cmp
xchg
adc
shrb
and
aas
lret
push
pop
xchg
scas
push
cmpsl
data16
push
push
lret
repnz
mov
push
pusha
pusha
mov
addb
js
jb
fdivp
adc
add
ss
mov
cmp
pusha
inc
mov
sti
rclb
sub
insl
dec
test
rcll
test
rcl
fistl
repz
jg,pt
dec
mov
push
pusha
mov
out
or
pusha
push
ja
mov
bound
sub
pop
aas
test
add
push
cmp
push
icebp
js
andl
mov
cmp
aas
sbb
test
inc
xorb
hlt
dec
dec
andl
inc
xchg
adcb
inc
add
sub
inc
in
adc
adc
xchg
mov
stos
or
addb
mov
pusha
and
add
mulb
rcrl
ret
outsl
lods
sub
sub
and
mov
test
lcall
cmp
loopne
jp
xchg
jns
das
xchg
add
fildll
push
or
mov
push
lock
loopne
fldenv
mov
sub
and
and
jle
cwtl
lret
nop
push
mov
sahf
sbb
sbb
test
push
andb
cwtl
lods
movsl
jae
push
dec
ja
aad
inc
leave
data16
fidivl
mov
add
mov
dec
dec
fimull
addb
pop
add
and
jno
or
inc
add
dec
cs
add
popa
mov
negl
push
pop
andb
xchg
imul
add
rolb
mov
loopne
sbb
inc
xchg
xchg
test
arpl
pusha
mov
inc
shlb
and
sub
mov
mov
cli
lcall
add
prefetch
inc
sahf
jle
jecxz
test
mov
inc
loopne
jp
popa
sbb
std
pop
outsb
in
jno
cmp
jae
inc
mov
jbe
outsl
inc
call
add
ret
imul
mov
cmp
sub
fsts
sbb
sbb
dec
mov
xor
ljmp
rorb
mov
shlb
and
add
ss
or
mov
inc
shl
cmpsl
ss
test
or
loopne
cmpl
iret
popl
and
insb
sbb
shlb
and
add
hlt
cmp
sub
cmp
inc
shl
mov
les
addr16
xor
inc
adc
inc
mov
add
sbb
lahf
in
xchg
fs
shlb
dec
jne
mov
iret
imul
lret
aad
mov
mov
adc
shl
iret
out
pop
out
roll
mov
jnp
push
pusha
mov
add
sbb
or
bound
and
mov
int
outsb
sbb
and
popa
and
xchg
and
scas
rolb
aam
pusha
cmpb
lea
mov
mov
pop
inc
jle,pt
test
inc
or
rolb
inc
cld
mov
stc
setp
idiv
mov
dec
scas
rolb
out
sbb
ret
sbb
cmpsl
and
dec
add
lods
or
add
jg
sbb
and
add
inc
call
clc
mov
pusha
lods
and
cmc
cmpsl
andb
add
adc
sub
mov
imul
movsl
fistps
add
cltd
jl
data16
shr
sub
stos
rolb
and
push
ja
loopne
add
shlb
jmp
cmpsb
mov
pusha
cmp
jnp
add
in
pop
jg
cli
pop
icebp
push
jno
jne
addr16
sbb
dec
sub
xchg
xchg
insl
dec
cli
add
jbe
ljmp
jne
xor
sbb
pusha
adc
add
jns
cld
mov
inc
rorl
scas
xor
xor
xchg
mull
data16
add
fs
mov
mov
test
add
xor
push
and
inc
jae
lods
add
cli
xor
std
jge
lock
push
inc
and
pushf
and
mov
imul
jne
jbe
out
popf
dec
test
inc
fstl
add
in
xchg
sbb
mov
das
in
rorb
rol
cs
loopne
lret
mov
int
pop
test
and
mov
loopne
lods
pusha
loopne
jge
xor
cmp
shlb
push
dec
cmp
push
inc
rorb
and
jb
std
mov
std
jl
shll
jbe
adc
dec
rcl
push
pop
je
fwait
xchg
stos
xchg
jae
ja
push
inc
loopne
adcl
mov
arpl
or
scas
aaa
pop
jg
andb
aaa
popa
xor
sub
shrb
dec
xchg
addr16
inc
cltd
cmp
inc
hlt
dec
inc
out
dec
movsb
addb
mov
dec
fldenv
andb
mov
or
mov
or
loopne
sbb
xchg
movsb
add
xor
cld
and
pusha
jb
push
push
in
jno
test
addb
stc
jne
loopne
int3
pushf
pop
es
loopne
test
loopne
pop
and
add
dec
add
push
ss
adc
mov
lds
xchg
mov
inc
fs
mov
iret
and
inc
dec
stos
mov
add
add
cmp
add
shl
std
xor
test
out
out
bound
mov
and
mov
inc
mov
ss
inc
cmp
mov
ds
add
and
loopne
mov
movsl
bound
lods
and
inc
shll
stos
loopne
test
xchg
or
dec
jns
mov
fimull
lcall
aad
jnp
or
rolb
ds
mov
movsb
and
cmp
andb
pusha
fcmovne
lea
rorb
bound
jns
or
mov
mov
mov
or
jp
lcall
in
push
adc
inc
arpl
jmp
int3
bound
data16
adc
and
push
fld1
inc
call
ja
and
inc
andb
iret
and
aaa
lods
loopne
jmp
cmp
mov
inc
loop
cmp
pop
adc
ret
aaa
add
pop
in
je
mov
insl
ds
mov
mov
push
call
loopne
push
jne
jp
imul
movsl
cmp
cmp
add
inc
and
mov
cmpsb
and
stos
inc
add
mov
jno
pop
adc
pop
jle
ljmp
sti
xchg
ljmp
icebp
push
loop
add
jle
inc
pusha
pop
adc
mov
shr
add
xchg
add
popf
xchg
push
fadd
in
push
xorl
mov
addr16
mov
jns
dec
jae
aaa
xchg
xchg
push
loopne
jmp
fimuls
addb
sub
sub
inc
movsl
jmp
mov
mov
and
add
dec
test
popf
adc
sbb
add
addb
mov
sub
inc
insb
mov
sub
mov
and
and
fyl2x
repz
push
push
jl
and
or
pop
mov
rol
rclb
mov
and
xchg
shlb
jnp
stc
mov
or
add
cmp
jle
xor
shlb
or
jle
dec
lea
cmp
scas
and
cmp
push
inc
mov
pop
movsl
rclb
dec
arpl
lds
dec
sub
lock
mov
movsl
outsl
aad
sbb
dec
rolb
add
adc
lret
add
mov
out
mov
rcll
or
and
mov
adc
addb
stos
pusha
addb
ljmp
jb
pop
ss
out
scas
pusha
rorb
sahf
arpl
mov
stos
mov
xchg
inc
pop
rorl
xor
dec
pop
aas
vmovsd
rolb
adc
in
and
push
outsl
mov
xor
xchg
daa
rol
aam
xchg
inc
and
pusha
mov
loopne
test
add
aad
add
imul
daa
fxch
popf
stc
scas
add
enter
je
sub
pusha
loopne
in
add
inc
and
add
rolb
enter
loopne
jmp
std
out
jg
fisttps
ror
divl
cli
mov
aam
fistl
or
and
iret
fsubrl
dec
pop
adc
mov
ss
inc
add
rcrb
lea
out
or
mov
jnp
lods
pusha
loopne
ljmp
dec
daa
pop
jg
repnz
jg
add
push
mov
repz
xchg
adc
scas
add
jg
out
pop
cwtl
pop
sub
test
and
rolb
gs
cmp
lds
dec
or
mov
je
andb
pusha
and
pusha
fs
mov
out
loopne
or
mov
cmpsb
and
pushf
clc
xchg
push
aaa
out
ret
stos
ds
stc
or
sti
jae
sti
pop
xchg
stos
inc
pusha
notb
and
or
add
shll
mov
mov
jbe
decb
andb
addl
pusha
cmc
push
push
dec
adc
test
adcb
loopne
ret
pushf
je
iret
repnz
push
lods
push
out
or
mov
addb
ret
or
or
mov
jb
add
cmp
inc
ja
pop
adc
jb
pop
mov
sub
jecxz
sub
subb
inc
cmpsl
les
mov
or
adc
icebp
xchg
movl
repz
mov
mov
loopne
jge
inc
dec
sbb
rolb
mov
loopne
repnz
and
sbb
sti
jbe
insl
inc
ljmp
pmulhuw
testl
mov
iret
repz
fisubrs
pusha
mov
int3
imul
cwtl
stos
mov
inc
mov
xchg
mov
jmp
and
pusha
js
sub
pusha
mov
jae
arpl
dec
ficoml
lret
aam
js
sbbl
pusha
pushf
call
das
adc
dec
movsb
addb
sbb
cli
repz
lcall
mov
sbb
mov
lahf
cmp
mov
loopne
shrl
rol
sub
les
sub
test
xor
and
mov
jo
add
sub
stos
pusha
and
int
decl
out
jbe
jmp
or
add
fldt
popf
cmp
xor
jns
inc
jo
lock
or
ljmp
add
pusha
test
pusha
bnd
out
inc
inc
cltd
mov
jle
lods
bound
cmp
andb
push
xchg
pmaddwd
inc
loopne
push
sbb
pusha
push
bound
add
jg
dec
rcll
andb
mov
push
loopne
sub
cmpsb
pusha
add
lods
add
pop
sbb
sahf
mov
mov
test
lret
mov
push
and
sti
inc
mov
aam
xchg
sti
aas
pop
mov
lcall
adc
pusha
add
adc
loopne
or
xor
mov
inc
dec
std
mov
in
lret
xor
add
idiv
popa
sti
ljmp
xchg
cmp
adc
push
mov
pop
imul
push
add
popf
xchg
sub
mov
std
and
les
and
inc
xor
xor
push
and
add
inc
bound
dec
cld
push
jmp
and
pusha
inc
mov
enter
rclb
sub
push
inc
inc
fs
jecxz
and
pop
xchg
mov
xchg
and
and
adc
sub
push
inc
push
addr16
mov
add
sbb
xor
mov
lcall
pusha
dec
pop
cltd
fstpt
xorl
jne
pop
rorb
andb
pusha
xchg
rcl
dec
aad
leave
sub
add
pop
push
mov
loopne
xor
je
ror
imull
push
mov
and
das
pop
testl
enter
pop
and
rclb
addr16
xchg
sbb
pop
mov
fucomp
idivl
lcall
add
fs
or
push
sub
loopne
push
shl
ss
dec
loop
mov
push
aad
pushl
pop
inc
fs
nop
sbb
scas
inc
cmpb
nop
dec
enter
sbb
shl
pop
xchg
pusha
mov
jns
push
inc
setb
ret
xchg
ljmp
in
andb
xchg
out
out
daa
in
mov
sub
pop
push
push
into
gs
fcoms
push
icebp
xchg
pushf
cli
inc
cwtl
ljmp
pop
icebp
xor
inc
add
push
imull
mov
pusha
pusha
dec
mov
addb
jnp
and
cmp
cltd
fnsave
nop
les
out
into
nop
dec
push
in
mov
and
jnp
arpl
mov
cmp
loopne
mov
stos
and
add
add
add
cmp
and
inc
mov
fwait
cmpsl
pop
insl
aad
fdivp
adc
call
xor
fs
push
mov
loopne
dec
xor
inc
add
cmpsb
add
test
andb
out
je
aaa
xor
jmp
inc
mov
inc
rolb
or
pop
push
cmc
lods
push
and
and
loopne,pn
adc
push
rolb
pop
lea
inc
sub
loopne
fsub
ret
pop
xchg
pop
xchg
rol
add
add
fbstp
loopne
pop
dec
bnd
fwait
into
xor
and
shr
xor
addb
xor
and
jge
mov
xor
clc
scas
movsb
addb
adc
lods
or
pop
inc
dec
xchg
jbe
mov
jl
andb
ja
pop
inc
pop
imulb
dec
test
clc
mov
decl
mov
mov
push
mov
jle
sbb
pusha
loopne
sbb
mov
outsl
pop
xchg
sbb
inc
pusha
dec
xor
bound
dec
xor
fidivs
xor
loopne
pop
mov
pop
or
popa
ss
dec
adc
inc
andb
stos
in
mov
dec
scas
add
cmp
sub
and
push
mov
pusha
add
fnstenv
xor
loopne
lea
std
jns
fimull
push
push
add
dec
mov
jg
sub
pop
imul
dec
sti
in
sub
loopne
dec
mov
add
sbb
and
inc
popf
les
in
in
add
mov
rcl
push
pop
rdpmc
lods
jecxz
jg
popf
int3
ret
rolb
add
out
loope
pop
pop
cmpl
addb
mov
rolb
xchg
cmp
call
imul
movsl
push
jp
mov
mov
jmp
inc
mov
pop
mov
mov
cld
xchg
push
push
jbe
shlb
scas
and
sub
andb
fildl
mov
ljmp
and
popl
test
popa
jb
and
loopne
sbb
or
rcrb
jbe
mov
and
adc
cmp
imul
and
inc
leave
pop
addb
iret
pop
shlb
pusha
mov
xlat
mov
lret
out
push
mov
xor
mov
mov
inc
inc
and
push
ljmp
notb
cmp
out
or
andb
pusha
scas
pusha
and
ret
cmp
cs
push
push
cld
mov
add
push
push
push
push
call
sub
add
imul
lea
and
test
je
mov
push
push
bnd
cmp
cld
jne
mov
add
push
push
push
push
call
test
jne
jmp
lea
movl
push
push
push
call
cmp
lea
jne
movzbl
or
pop
mov
not
imul
and
jne
call
loop
mov
mov
stc
notrack
sbb
mov
add
add
mov
mov
mov
inc
or
lea
lea
add
lea
add
sub
jmp
push
mov
jmp
mov
fmuls
xchg
filds
mov
stc
xchg
scas
loopne
popf
mov
addr16
pushf
pop
and
mov
xor
cmp
stos
add
call
out
xlat
cmpl
shlb
out
andb
inc
into
divb
jne
out
daa
mov
jbe
ret
and
push
scas
and
adcb
fdiv
lods
add
add
push
xor
addl
ficompl
add
mov
fcmovnbe
jle
mov
and
pop
repz
aam
dec
cmp
push
rcrb
fildl
mov
lcall
xchg
leave
in
cmp
inc
mov
ret
clc
arpl
cmp
loop
mov
fdivrs
push
add
loopne
aad
jg
or
mov
andb
and
mov
out
push
mov
xchg
mov
xor
jne
addr16
mov
aam
dec
sub
mov
inc
loopne
sar
idivl
loop
inc
inc
fs
mov
loopne
mov
idivb
sub
popa
jae
adc
or
xchg
negb
imul
in
adc
xor
test
inc
jge
insb
push
sub
push
mov
imul
xchg
insb
jl
int3
xchg
mov
sti
loop
icebp
ret
inc
sub
jo
ret
or
add
pusha
push
inc
mov
jbe
loop
pop
and
mov
andb
ja
sbb
cmpsb
rolb
xor
cmp
repz
cwtl
sbb
pusha
xchg
sbb
into
clc
add
inc
or
and
and
pusha
mov
push
xor
gs
bound
jp
rorb
jg
in
popf
add
add
rorb
sbbb
pusha
sbb
inc
mov
addb
data16
mov
inc
cmc
jmp
cmp
and
and
push
jecxz
rolb
int
rolb
mov
xchg
mov
mov
mov
sub
insl
insb
dec
dec
pop
mov
xchg
cmp
push
movsb
rol
gs
add
mov
shl
sar
push
shl
mov
sahf
dec
mov
xchg
mov
clc
or
adcb
push
rolb
gs
filds
mov
ficomps
fstl
or
mov
mov
outsl
fsub
outsb
jg
stos
and
push
xchg
andb
shlb
loopne
jne
jo
shrl
cs
jnp
rcrl
in
loop
mov
add
sarl
or
loopne
jnp
lret
rorl
in
pusha
icebp
xchg
mov
push
dec
gs
fadds
loopne
lahf
sbbl
mov
shlb
pusha
mov
jae
gs
cld
cwtl
pop
into
dec
sbb
jno
cmp
scas
fdivr
movsl
push
and
jl
shll
pop
je
imulb
andl
and
cmp
push
push
lcall
pushf
test
add
and
mov
test
pop
inc
push
mov
addb
lds
popa
cli
add
loope
pop
je
add
andb
pop
lcall
and
imulb
xchg
shl
sahf
rclb
cmp
jo
fdivrs
adc
inc
negl
aad
imul
js
cmpsl
adc
shlb
mov
pusha
test
inc
adc
xor
push
cwtl
cld
les
or
xchg
lock
push
push
hlt
adc
add
movb
and
cmpl
mov
idiv
fsqrt
jmp
in
ror
nop
stos
loopne
popa
imull
loopne
jmp
and
dec
fsub
std
movsl
adc
lcall
adc
movsb
pusha
cmp
mov
scas
jge
lods
inc
add
in
scas
adc
sbb
fadd
imul
push
jne
pop
or
lcall
add
jl
dec
scas
add
in
loopne
dec
xor
xorl
cmp
xchg
out
inc
and
xor
cmp
shlb
push
mov
enter
and
mov
loopne
push
xor
mov
adc
addb
inc
pusha
sub
inc
sbb
bound
shr
xchg
inc
push
add
add
pop
lret
xchg
mov
sub
cmp
scas
and
test
mov
loopne
pop
cmp
or
loopne
sub
mov
pop
dec
adc
jge
mov
push
loope
push
push
data16
and
gs
and
fiaddl
xor
insb
popa
cmp
in
loope
in
std
sarb
movsb
pusha
inc
push
and
lcall
xchg
mov
and
inc
and
adc
ret
jge
add
test
jl
mov
inc
sbb
pop
lock
cmpsb
rolb
dec
xchg
addb
mov
lods
and
loopne
cli
jmp
mov
and
lret
jno
push
and
xorb
mov
scas
test
push
jmp
sub
andb
adc
inc
arpl
sbbl
popf
scas
dec
je
loopne
fwait
scas
pusha
cmpb
add
and
push
jo
jae
mov
pop
jno
fs
mov
cltd
inc
mov
and
mov
mov
dec
mov
or
bound
mov
aam
cmp
jbe
loopne
and
mov
out
cmp
or
inc
pop
push
push
test
mov
repnz
pop
xchg
xchg
or
mov
sub
call
inc
and
dec
jecxz
xchg
and
ja
add
jb
mov
mov
int
fs
xor
jns
in
fidivs
xchg
testl
incb
add
sti
cmp
pushf
js
inc
dec
push
push
pop
mov
lret
pusha
test
pusha
push
mov
sarl
fmul
dec
loopne
rolb
popf
mov
std
clc
and
and
divl
xchg
mov
ds
aam
xchg
mov
scas
and
fistpll
add
cmc
pop
mov
pusha
adc
mov
mov
push
addr16
into
push
sub
inc
mov
inc
out
movb
mov
clc
in
lret
adc
ja
or
fsubl
pop
and
andl
imul
shlb
pop
adc
or
jo
sub
add
jne
xor
push
cmc
ljmp
mov
test
mov
pop
es
loopne
jle
jmp
das
or
mov
andb
push
add
loopne
sub
shl
pop
adc
xor
adc
add
mov
out
fimull
inc
pop
or
xlat
nop
xchg
pop
insb
jns
jle
inc
loopne
out
adc
mov
inc
insb
mov
jns
cli
pop
inc
inc
dec
mov
jp
cltd
mov
mov
or
add
cmp
jns
inc
imul
clc
xlat
sar
nop
add
mov
loope
arpl
ret
xchg
lea
push
jns
mov
sbb
rolb
add
jle
adc
and
mov
inc
inc
inc
lods
js
loop
sbb
push
in
aas
inc
sti
pop
sbb
arpl
je
loopne
push
loopne
mov
repnz
enter
xor
les
jo
adc
pop
cwtl
inc
xchg
std
aad
push
inc
loope
test
shrl
inc
mov
ret
dec
rolb
add
and
add
cwtl
xchg
rol
std
jbe
and
and
sub
and
xchg
pusha
aad
outsl
lds
loop
lods
add
xor
lret
inc
cld
test
andb
mov
loopne
push
into
movsl
dec
fildll
jge
pop
rclb
xchg
mov
rclb
data16
sbb
pop
in
and
add
imulb
inc
shlb
inc
pusha
sub
test
and
andb
movsb
rolb
inc
sub
cmp
cmpsl
sbb
dec
pop
xchg
ret
test
and
push
loopne
shlb
lret
fwait
inc
in
dec
cwtl
push
mov
sbbl
or
xchg
add
mov
adc
fsubl
es
loopne
jmp
jns,pt
and
out
stos
mov
enter
sbb
dec
into
cmp
fstp
in
adc
addr16
sub
rolb
ljmp
roll
dec
arpl
rolb
jne
add
cmp
xchg
and
xchg
ss
mul
into
movsb
loopne
and
mov
adc
sbb
out
cmpl
pusha
out
ljmp
lds
movsb
and
lods
mov
lret
addb
xchg
mov
cmp
bound
pop
cld
sbb
sub
out
jnp
mov
std
mov
sbb
test
push
mov
add
into
and
int3
in
faddl
mov
add
loopne
scas
loopne
iret
rorb
sbb
mov
and
cmp
xchg
rcl
idivb
dec
adc
loopne
cmc
jp
mov
scas
addb
enter
rcrb
adc
addb
adc
outsb
push
jmp
out
loop
mov
outsb
pushf
push
pop
push
add
rcrb
lods
movsb
loopne
out
xor
or
add
into
loopne
fildll
xchg
jge
movsb
loopne
mov
sub
roll
into
prefetch
pop
in
push
mov
push
pusha
add
fs
add
add
xor
mov
mov
push
dec
jg
clc
xor
jmp
xlat
sbb
scas
arpl
in
and
cli
popf
mov
in
adc
xor
fwait
imul
mov
cmp
jae
call
xor
loopne
mov
jmp
mov
dec
inc
testl
sub
and
ss
dec
mov
cmpsb
inc
inc
jae
js
adc
push
add
pop
jne
or
dec
dec
iret
add
rolb
inc
pusha
cmp
lock
mov
aam
and
shlb
lods
cli
mov
aas
cs
pusha
adc
sub
inc
jecxz
push
je
or
add
mov
or
add
pop
stos
inc
orb
and
aas
dec
jp
enter
add
shlb
add
xor
mov
and
incb
dec
sahf
xchg
outsb
or
push
gs
inc
inc
fsubs
movsb
pusha
add
pusha
in
lods
jle
inc
sub
stos
adcw
shlb
adc
test
pusha
pop
sti
xor
add
add
cwtl
mov
xlat
into
pop
sbb
scas
shlb
test
mov
jmp
push
cmp
enter
sub
xchg
add
push
sub
and
sbb
sub
subb
lret
fnstsw
and
pusha
pop
lods
inc
inc
or
je
push
dec
popf
mov
jo
sar
loopne
lret
loopne
push
fwait
jnp
mov
mov
mov
pop
xor
mov
fistps
mov
adc
sub
and
sub
inc
sbb
and
and
add
unpckhps
cs
lcall
outsl
add
jae
pushf
orl
mov
mov
and
rolb
loopne
out
and
rol
lock
pop
inc
inc
popf
test
loopne
xchg
lock
fucomp
push
push
fs
adc
inc
mov
mov
and
adc
lea
mov
jo
and
loopne
cmp
pushf
push
lds
nop
push
aas
ljmp
sbb
loopne
xor
mov
and
mov
adc
xor
pusha
xorb
sahf
push
jns
pop
cmp
andb
mov
pop
push
cmp
pop
sahf
shl
dec
aaa
mov
jo
jno
repnz
sub
inc
xchg
jae
stos
fyl2x
pushl
dec
add
adc
fisttpll
push
aad
data16
fdivrs
test
add
sbb
and
jnp
cltd
sbbl
loop
xchg
addr16
ss
sarb
or
pop
push
out
lahf
sub
cmp
xchg
mov
hlt
adc
out
add
cmp
into
add
mov
and
mov
pop
push
and
cs
and
leave
bound
jb
loopne
mov
add
adc
nop
sub
dec
pop
pop
popf
push
fildl
inc
rorb
nop
xchg
add
dec
and
hlt
jmp
xchg
mov
add
in
dec
dec
sahf
add
adc
push
and
ds
pop
jmp
jae
mov
int
mov
inc
push
xchg
rcrb
fdivp
push
nop
or
xor
mov
and
jb
popf
sbb
and
icebp
adc
stos
push
mov
ret
mov
cmpsl
or
gs
xchg
and
sarb
mov
and
and
jmp
fisttps
mov
loopne
and
mov
iret
xchg
mov
cwtl
jns
dec
add
pop
repnz
fcomps
add
sub
jne
and
mov
push
ds
mov
mov
std
aam
daa
xor
test
jb
xchg
fdivl
out
aaa
cmp
and
stc
xor
cmovs
mov
sti
stc
and
add
mov
js
fcmovnb
fisubl
fldt
lds
pop
ficoml
and
aad
jp
mov
jg
fs
dec
inc
jl
testb
orb
xchg
int
fsubl
imul
pusha
mov
mov
nop
cld
jae
add
mov
adc
mov
xchg
ret
loop
je
mov
hlt
add
mov
dec
nop
push
mov
leave
nop
jmp
add
loop
add
add
loope
sbb
clc
repnz
nop
cld
jae
add
outsb
sbb
clc
repnz
nop
cld
jae
mov
add
jg
add
lea
lret
mov
leave
nop
jmp
fdivrl
add
mov
clc
repnz
nop
cld
jae
xchg
scas
inc
shlb
nop
nop
cld
jae
mov
outsb
dec
fwait
clc
repnz
nop
cld
jae
and
adc
add
add
xchg
out
pop
hlt
rolb
jg
clc
repnz
nop
cld
jae
xchg
push
add
loopne
nop
iret
fwait
clc
repnz
nop
cld
jae
jg
stos
xchg
add
add
mov
xchg
ret
add
sbb
push
mov
xchg
ret
jbe
jg
add
mov
enter
nop
cld
jae
fdiv
add
add
add
cmp
add
clc
repnz
nop
cld
jae
pop
loop
mov
add
nop
push
mov
leave
nop
jmp
dec
loop
add
mov
push
push
mov
xchg
ret
add
xchg
or
inc
arpl
push
sub
nop
jmp
add
add
test
pop
add
clc
repnz
nop
cld
jae
add
adc
rolb
add
clc
repnz
nop
cld
jae
add
orl
inc
add
adc
fisubl
dec
insb
push
mov
nop
push
mov
leave
nop
jmp
test
add
add
and
add
push
mov
xchg
ret
add
std
pop
add
add
shlb
rorl
push
mov
leave
nop
jmp
addl
loopne
dec
add
adc
repnz
nop
cld
jae
or
add
add
subl
xchg
ret
inc
fiadds
testl
fisubrs
loopne
div
mov
push
mov
xchg
ret
xchg
je
add
icebp
add
nop
push
mov
leave
nop
jmp
add
outsb
stos
lds
xlat
mov
xchg
ret
add
mov
subl
repnz
nop
cld
jae
pop
add
loopne
mov
add
aas
faddl
push
xchg
out
outsb
add
imul
outsl
inc
add
xchg
stos
add
add
jg
das
push
clc
repnz
nop
cld
jae
jge
sbb
add
xlat
add
clc
repnz
nop
cld
jae
pop
mov
push
nop
nop
cld
jae
add
add
cmp
push
mov
xchg
ret
sar
push
add
repnz
nop
cld
jae
add
add
test
and
xor
repnz
nop
cld
jae
add
add
mov
mov
nop
push
mov
leave
nop
jmp
dec
add
aas
add
repnz
nop
cld
jae
add
add
jne
clc
repnz
nop
cld
jae
add
add
mov
mov
loopne
out
add
clc
repnz
nop
cld
jae
xor
sti
add
add
pop
add
push
mov
xchg
ret
xchg
jge
mov
add
ret
add
repnz
nop
cld
jae
loop
or
dec
outsb
nop
add
clc
pushf
divb
aaa
mov
clc
repnz
nop
cld
jae
pop
add
inc
fwait
add
add
push
mov
xchg
ret
add
add
dec
push
clc
repnz
nop
cld
jae
adc
fwait
add
inc
inc
mov
or
nop
jmp
stos
add
dec
pop
mov
cltd
mov
nop
push
mov
leave
nop
jmp
add
out
mov
mov
push
mov
xchg
ret
xor
xor
imul
out
sub
pusha
lods
loopne
pop
rol
jmp
incl
xor
add
jg
clc
repnz
nop
cld
jae
sbb
or
out
xor
mov
daa
add
add
je
add
add
add
xchg
cmp
repnz
nop
cld
jae
add
hlt
shll
and
add
repnz
nop
cld
jae
add
dec
ret
cmp
nop
push
mov
leave
nop
jmp
fwait
dec
add
add
nop
jmp
roll
std
add
jmp
stos
xor
stos
xchg
mov
jbe
add
add
adc
push
mov
leave
nop
jmp
add
add
add
lods
movzwl
clc
repnz
nop
cld
jae
and
push
clc
repnz
nop
cld
jae
faddl
add
add
add
sub
nop
nop
cld
jae
add
add
pop
add
jmp
clc
repnz
nop
cld
jae
stos
stos
test
fwait
rcrl
cld
jae
add
fisubs
or
adc
movswl
clc
repnz
nop
cld
jae
add
add
add
int
pop
jae
repnz
nop
cld
jae
fwait
lds
add
in
leave
nop
jmp
hlt
adcl
and
nop
nop
cld
jae
add
sbb
mov
jmp
leave
nop
jmp
add
pop
inc
fwait
push
mov
xchg
ret
xchg
notl
roll
add
mov
mov
xchg
ret
divl
push
insb
gs
clc
repnz
nop
cld
jae
aas
jg
inc
mov
clc
repnz
nop
cld
jae
out
add
add
scas
inc
mov
clc
repnz
nop
cld
jae
stos
loop
stos
add
mov
xchg
ret
stos
inc
push
sti
dec
stos
add
mov
xchg
ret
add
add
shl
fwait
out
add
not
push
mov
xchg
ret
add
add
std
adc
stos
pop
pushl
clc
repnz
nop
cld
jae
add
dec
popa
clc
repnz
nop
cld
jae
add
dec
xchg
testl
nop
cld
jae
fwait
outsb
fwait
xchg
add
sti
loop
adc
mov
nop
push
mov
leave
nop
jmp
xchg
jge
push
mov
mov
sbbb
jmp
call
roll
inc
add
add
add
jnp
clc
repnz
nop
cld
jae
push
loop
nop
push
mov
leave
nop
jmp
mov
xchg
add
ja
in
int3
lret
repnz
nop
cld
jae
add
mov
add
and
jne
push
mov
xchg
ret
stos
mov
imul
inc
add
inc
add
adc
mov
dec
jbe
mov
clc
repnz
nop
cld
jae
mov
fdivrl
movzwl
clc
repnz
nop
cld
jae
std
add
outsb
test
sub
inc
inc
push
mov
add
or
sarl
int3
mov
add
rol
xchg
pusha
xor
add
clc
repnz
nop
cld
jae
add
clc
repnz
nop
cld
jae
out
add
add
nop
nop
cld
jae
out
add
add
and
sbb
rolb
mov
clc
repnz
nop
cld
jae
xchg
add
xor
and
test
loopne
call
clc
repnz
nop
cld
jae
out
add
ficomps
mov
xchg
ret
faddl
add
mov
clc
repnz
nop
cld
jae
shll
add
repnz
nop
cld
jae
add
stos
std
add
add
mov
clc
repnz
nop
cld
jae
add
add
add
push
incl
add
repnz
nop
cld
jae
out
and
cmpw
nop
push
mov
leave
nop
jmp
add
xor
xchg
sub
clc
repnz
nop
cld
jae
lds
xor
pop
call
nop
jmp
add
jg
mov
push
mov
xchg
ret
add
add
shl
add
adc
dec
cmp
repnz
nop
cld
jae
outsb
add
add
jae
inc
inc
add
repnz
nop
cld
jae
test
add
fiadds
loopne
sbb
nop
nop
cld
jae
xor
add
imul
push
addb
ror
clc
repnz
nop
cld
jae
std
xchg
mov
in
clc
repnz
nop
cld
jae
xchg
adc
add
repnz
nop
cld
jae
std
add
inc
mov
loopne
add
clc
repnz
nop
cld
jae
add
add
add
popfw
mov
clc
repnz
nop
cld
jae
inc
add
imul
lock
push
push
mov
xchg
ret
aas
add
fwait
lret
add
mov
in
xchg
nop
push
mov
leave
nop
jmp
mov
add
add
add
js
leave
clc
repnz
nop
cld
jae
loop
mov
xor
lcall
push
mov
xchg
ret
hlt
add
fiadds
jbe
add
cmp
test
nop
push
mov
leave
nop
jmp
lret
add
add
neg
shl
clc
repnz
nop
cld
jae
add
std
test
jae
call
inc
add
pop
add
sbb
add
clc
repnz
nop
cld
jae
stos
dec
add
add
push
stos
and
jle
push
fld1
clc
repnz
nop
cld
jae
sbb
xor
push
clc
repnz
nop
cld
jae
stos
loop
add
sti
inc
pop
pop
insl
fld1
nop
push
mov
leave
nop
jmp
mov
add
inc
aas
daa
xor
clc
repnz
nop
cld
jae
stos
add
add
adc
xor
clc
repnz
nop
cld
jae
add
xchg
dec
roll
shl
add
clc
repnz
nop
cld
jae
add
sbb
pushl
clc
repnz
nop
cld
jae
mov
test
add
sbb
mov
leave
nop
jmp
add
xor
pop
add
clc
repnz
nop
cld
jae
add
adc
dec
push
clc
repnz
nop
cld
jae
outsb
add
lret
add
repnz
inc
mov
repnz
nop
cld
jae
add
inc
add
push
add
xchg
clc
repnz
nop
cld
jae
add
add
nop
jnp
les
mov
xchg
ret
add
stos
dec
add
lret
clc
repnz
nop
cld
jae
lret
push
cmp
je
lret
roll
repnz
nop
cld
jae
add
add
add
add
add
repnz
nop
cld
jae
fwait
inc
xchg
xchg
nop
push
mov
leave
nop
jmp
fiadds
roll
push
mov
add
clc
repnz
nop
cld
jae
add
and
inc
push
push
mov
xchg
ret
add
add
add
mov
push
mov
xchg
ret
outsb
add
add
call
cld
jae
add
mov
sub
and
mov
push
mov
xchg
ret
push
or
inc
adc
repnz
nop
cld
jae
stos
faddl
add
clc
repnz
nop
cld
jae
add
xor
adc
std
dec
fld1
clc
repnz
nop
cld
jae
add
push
xor
jecxz
movb
pop
pop
inc
add
add
mov
je
inc
add
repnz
nop
cld
jae
add
push
add
inc
popa
clc
repnz
nop
cld
jae
add
outsb
add
add
aaa
mov
push
mov
xchg
ret
add
xchg
loop
add
neg
sbb
clc
repnz
nop
cld
jae
add
xchg
xor
int3
cmp
push
mov
leave
nop
jmp
add
dec
add
aas
jno
clc
repnz
nop
cld
jae
add
add
add
add
clc
repnz
nop
cld
jae
add
add
dec
mov
cmpsl
lea
clc
repnz
nop
cld
jae
mov
inc
push
andb
leave
fs
add
add
add
push
push
mov
xchg
ret
xchg
sbb
pusha
cmp
mov
lock
xchg
ret
mov
xchg
je
add
pop
push
mov
xchg
ret
add
push
fiadds
jbe
add
ds
add
clc
repnz
nop
cld
jae
adc
pop
xchg
push
cmpl
nop
push
mov
leave
nop
jmp
add
je
ja
clc
repnz
nop
cld
jae
stos
imul
pop
stos
add
xor
orl
add
add
scas
and
add
repnz
nop
cld
jae
mov
add
add
popa
mov
nop
push
mov
leave
nop
jmp
add
jbe
add
xchg
jb
add
clc
repnz
nop
cld
jae
add
add
incl
add
xchg
add
imul
push
push
mov
leave
nop
jmp
mov
xchg
jbe
loopne
out
clc
repnz
nop
cld
jae
add
lds
add
add
cmc
xor
clc
repnz
nop
cld
jae
inc
add
jb
xchg
mov
push
mov
xchg
ret
hlt
inc
jbe
add
add
pop
je
clc
repnz
nop
cld
jae
adc
xchg
inc
add
add
fwait
add
add
xchg
sub
je
loopne
mov
clc
repnz
nop
cld
jae
add
push
add
stos
bound
push
push
mov
xchg
ret
add
je
add
add
push
mov
xchg
ret
push
xchg
push
dec
roll
add
add
clc
repnz
nop
cld
jae
add
dec
jge
add
add
nop
cld
jae
add
adc
push
add
addl
xchg
ret
add
add
jmp
add
add
jge
mul
addr16
add
jbe
add
outsb
imul
hlt
fidivs
add
incl
nop
push
mov
leave
nop
jmp
dec
xchg
add
lea
nop
push
mov
leave
nop
jmp
add
fsubl
clc
repnz
nop
cld
jae
xchg
cmpl
inc
jecxz
repnz
nop
cld
jae
add
jmp
in
leave
nop
jmp
add
addr16
mov
push
fs
push
mov
leave
nop
jmp
add
inc
add
mov
clc
repnz
nop
cld
jae
add
xchg
add
loop
push
mov
xchg
ret
add
stos
stos
test
faddl
mov
adc
repnz
nop
cld
jae
sbb
stos
ret
sti
outsb
lret
add
jge
add
hlt
inc
add
loop
stos
addb
push
mov
clc
repnz
nop
cld
jae
fidivs
mov
adc
ret
pusha
and
mov
adc
nop
jmp
dec
add
add
sti
lea
inc
fs
add
add
pop
pop
nop
push
mov
leave
nop
jmp
add
add
xor
add
xchg
xchg
mov
nop
push
mov
leave
nop
jmp
add
addr16
and
clc
repnz
nop
cld
jae
xchg
lret
mov
push
mov
xchg
ret
xchg
xor
loop
add
push
clc
repnz
nop
cld
jae
sbb
add
in
add
mov
and
inc
add
xchg
dec
mov
push
clc
repnz
nop
cld
jae
jbe
or
add
add
notl
mov
xchg
ret
aas
add
add
adc
loop
nop
push
mov
leave
nop
jmp
mov
out
add
clc
repnz
nop
cld
jae
stos
hlt
stos
add
shr
clc
mov
jbe
nop
push
mov
leave
nop
jmp
out
xor
adc
add
push
clc
repnz
nop
cld
jae
xchg
ss
push
mov
xchg
ret
sti
shll
add
add
xor
clc
repnz
nop
cld
jae
push
xor
push
nop
inc
add
jbe
add
add
add
cli
clc
repnz
nop
cld
jae
divl
add
add
and
clc
repnz
nop
cld
jae
add
inc
stos
add
repnz
nop
cld
jae
add
add
xchg
push
clc
repnz
nop
cld
jae
fiadds
add
add
nop
nop
cld
jae
stos
add
dec
inc
add
mov
push
mov
xchg
ret
or
add
popl
clc
repnz
nop
cld
jae
xchg
roll
add
push
mov
clc
repnz
nop
cld
jae
test
xor
loop
adc
mov
popa
push
clc
repnz
nop
cld
jae
add
fwait
out
stos
imul
jge
clc
repnz
nop
cld
jae
add
push
xchg
pusha
inc
add
sti
sbb
dec
push
idivl
xor
xchg
add
clc
repnz
nop
cld
jae
add
testl
int
fistl
jae
inc
add
loop
out
add
and
add
add
add
sti
add
inc
outsb
aam
dec
push
mov
out
lea
rolb
xor
arpl
pop
ret
xor
nop
push
mov
leave
nop
jmp
add
add
std
lea
nop
push
mov
leave
nop
jmp
add
or
sbb
cld
jae
or
add
mov
dec
push
clc
repnz
nop
cld
jae
add
adc
xor
pop
push
fld1
clc
repnz
nop
cld
jae
stos
out
add
add
mov
add
clc
repnz
nop
cld
jae
add
add
movsb
clc
repnz
nop
cld
jae
add
aas
add
add
ret
add
adc
add
add
add
inc
add
test
nop
push
mov
leave
nop
jmp
out
faddl
xor
pop
clc
repnz
nop
cld
jae
loop
add
add
push
mov
clc
repnz
nop
cld
jae
out
add
bound
in
leave
nop
jmp
add
inc
add
add
mov
mov
nop
push
mov
leave
nop
jmp
std
jge
push
imul
hlt
incl
stos
mov
loop
push
mov
xchg
ret
mov
add
mov
clc
repnz
nop
cld
jae
aas
add
es
add
clc
repnz
nop
cld
jae
push
addr16
pop
push
mov
xchg
ret
shrl
pop
push
clc
repnz
nop
cld
jae
add
mov
rcll
mov
xchg
ret
fcompl
out
subl
shlb
pusha
shl
clc
repnz
nop
cld
jae
add
add
clc
repnz
nop
cld
jae
add
add
sbb
fistpl
mov
xchg
ret
add
add
sti
sti
add
add
in
rclb
and
clc
repnz
nop
cld
jae
add
xor
add
nop
push
mov
leave
nop
jmp
mov
push
sti
add
sub
loopne
add
nop
push
mov
leave
nop
jmp
add
sbb
add
dec
push
nop
push
mov
leave
nop
jmp
add
stos
push
add
push
add
dec
fwait
clc
repnz
nop
cld
jae
loop
add
add
repz
nop
push
mov
leave
nop
jmp
add
mov
push
mov
xchg
ret
add
outsb
add
in
leave
nop
jmp
loop
add
add
add
int
nop
push
mov
leave
nop
jmp
rcrl
pop
mov
mov
lcall
repnz
nop
cld
jae
es
add
insl
push
clc
repnz
nop
cld
jae
jbe
jg
adcl
jnp
push
mov
xchg
ret
add
stos
add
out
push
xor
add
clc
repnz
nop
cld
jae
pop
jbe
loop
mov
repnz
nop
cld
jae
addr16
xchg
test
sti
mov
clc
repnz
nop
cld
jae
sbb
xchg
lds
popa
clc
repnz
nop
cld
jae
add
outsb
add
insb
inc
jb
clc
repnz
nop
cld
jae
adc
xchg
clc
repnz
nop
cld
jae
add
adc
push
mov
leave
nop
jmp
pop
popl
add
inc
add
inc
xor
clc
repnz
nop
cld
jae
add
lods
je
clc
repnz
nop
cld
jae
xchg
es
push
push
mov
leave
nop
jmp
add
and
subl
repnz
nop
cld
jae
add
testl
movsb
clc
repnz
nop
cld
jae
fsubr
inc
xor
mov
mov
stc
clc
repnz
nop
cld
jae
add
add
cmp
mov
clc
repnz
nop
cld
jae
addr16
stos
add
inc
mov
push
mov
xchg
ret
add
push
aas
xchg
add
dec
mov
repnz
nop
cld
jae
add
imul
jae
add
jge
fs
repnz
nop
cld
jae
xchg
add
add
add
repnz
nop
cld
jae
jg
add
dec
lcall
cld
jae
add
out
add
add
inc
movsb
andb
add
clc
repnz
nop
cld
jae
mov
push
add
movzwl
nop
push
mov
leave
nop
jmp
xchg
jge
inc
stos
lea
nop
push
mov
leave
nop
jmp
xchg
add
xor
icebp
fistpl
push
mov
xchg
ret
mov
add
push
push
mov
xchg
ret
add
inc
popl
mov
dec
cmp
push
mov
leave
nop
jmp
xor
jge
dec
jg
movswl
clc
repnz
nop
cld
jae
out
add
add
hlt
push
add
nop
push
mov
leave
nop
jmp
add
add
fidivrs
nop
cld
jae
add
add
add
loop
testb
cld
jae
loop
imul
fwait
add
repz
push
mov
xchg
ret
std
mov
lds
add
stos
notl
nop
jmp
lret
push
push
mov
xchg
ret
mov
faddl
add
pop
inc
add
jg
mov
add
nop
cld
jae
add
push
add
and
push
mov
leave
nop
jmp
jg
lret
lds
fwait
cmpsb
mov
push
mov
xchg
ret
add
add
iret
ja
clc
repnz
nop
cld
jae
roll
add
pop
push
mov
xchg
ret
add
jge
add
xor
sbb
mov
leave
nop
jmp
out
add
loop
jge
inc
in
nop
push
mov
leave
nop
jmp
add
add
aaa
mov
nop
push
mov
leave
nop
jmp
push
inc
add
sub
mov
and
pop
clc
repnz
nop
cld
jae
add
add
dec
add
repnz
nop
cld
jae
std
add
add
push
or
rcr
pop
clc
repnz
nop
cld
jae
add
shll
sbb
push
clc
repnz
nop
cld
jae
add
add
add
push
jne
nop
push
mov
leave
nop
jmp
outsb
pop
lret
sub
clc
repnz
nop
cld
jae
add
push
mov
and
mov
xchg
ret
mov
fwait
add
mov
push
mov
xchg
ret
add
out
jg
and
stos
push
mov
xchg
ret
outsb
add
add
mov
cld
clc
repnz
nop
cld
jae
add
mov
mov
push
xchg
pop
clc
repnz
nop
cld
jae
addl
add
push
add
push
mov
xchg
ret
add
and
aas
add
aas
mov
push
mov
xchg
ret
push
mov
repnz
nop
cld
jae
xchg
dec
xor
clc
repnz
nop
cld
jae
jbe
add
add
add
add
nop
push
mov
leave
nop
jmp
mov
mov
push
clc
repnz
nop
cld
jae
add
mov
aas
xchg
push
push
mov
xchg
ret
add
jbe
xchg
loop
add
and
nop
push
mov
leave
nop
jmp
add
add
clc
repnz
nop
cld
jae
add
dec
jmp
add
inc
jbe
add
add
sbb
test
repnz
nop
cld
jae
stos
xchg
add
call
nop
push
mov
leave
nop
jmp
add
fcoml
add
clc
repnz
nop
cld
jae
add
add
mov
clc
repnz
nop
cld
jae
add
shrl
mov
nop
push
mov
leave
nop
jmp
add
add
testl
add
repnz
nop
cld
jae
fwait
mov
lret
cltd
je
clc
repnz
nop
cld
jae
inc
mov
clc
repnz
nop
cld
jae
add
add
hlt
stos
rolb
outsl
inc
add
adc
sti
fwait
xchg
or
push
ss
mov
mov
xchg
ret
add
add
xchg
add
faddp
nop
insb
sub
xchg
addl
lds
add
adc
dec
dec
xchg
pop
push
mov
xchg
ret
sti
outsb
add
out
add
add
add
inc
stos
add
clc
repnz
nop
cld
jae
mov
pop
push
mov
xchg
ret
mov
add
add
push
pusha
mov
add
clc
repnz
nop
cld
jae
je
add
xchg
mov
xchg
ret
add
add
xor
add
add
nop
push
mov
leave
nop
jmp
add
seto
in
leave
nop
jmp
add
xchg
stos
mov
add
clc
repnz
nop
cld
jae
sti
push
add
clc
repnz
nop
cld
jae
outsb
negl
mov
insl
pop
clc
repnz
nop
cld
jae
push
add
add
push
add
add
push
mov
xchg
ret
addl
lds
mov
repnz
nop
cld
jae
adc
jbe
lods
mov
addr16
clc
repnz
nop
cld
jae
add
add
testb
clc
repnz
nop
cld
jae
add
push
mov
xchg
ret
add
stos
rcl
xchg
add
clc
repnz
nop
cld
jae
roll
loop
roll
enter
inc
jnp
clc
repnz
nop
cld
jae
push
and
jecxz
movsb
push
mov
xchg
ret
out
add
shll
je
add
clc
repnz
nop
cld
jae
inc
add
mov
ret
lods
clc
repnz
nop
cld
jae
xor
xchg
je
xchg
xchg
xchg
and
add
test
in
leave
nop
jmp
add
mov
push
loopne
mov
mov
repnz
nop
cld
jae
lret
and
rcll
sbb
mov
xchg
ret
push
xchg
mov
sub
test
cmp
ret
dec
push
add
addr16
add
imul
clc
repnz
nop
cld
jae
or
jne
clc
repnz
nop
cld
jae
add
xor
repnz
nop
cld
jae
push
mov
push
mov
xchg
ret
lds
rcrl
inc
test
nop
push
mov
leave
nop
jmp
pop
push
add
push
push
pop
in
mov
add
call
inc
add
inc
add
outsb
je
push
repnz
nop
cld
jae
or
sbb
jecxz
clc
repnz
nop
cld
jae
add
testl
xor
pop
mov
clc
repnz
nop
cld
jae
inc
add
add
ficoms
repnz
nop
cld
jae
inc
add
add
mull
add
clc
repnz
nop
cld
jae
add
roll
xchg
add
push
mov
xchg
ret
loop
hlt
mov
fsubrl
mov
in
clc
repnz
nop
cld
jae
mov
add
and
mov
clc
repnz
nop
cld
jae
xor
add
roll
shlb
clc
repnz
nop
cld
jae
add
mov
les
add
mov
jmp
add
jge
add
inc
sub
nop
jmp
inc
add
mov
mov
xchg
ret
jbe
jbe
lret
add
xor
repnz
nop
cld
jae
add
push
mov
add
nop
push
mov
leave
nop
jmp
stos
add
std
pop
jmp
add
in
leave
nop
jmp
dec
inc
pop
mov
mov
push
mov
xchg
ret
add
add
mov
nop
nop
cld
jae
add
negl
lds
lret
inc
add
repnz
nop
cld
jae
add
test
inc
lcall
repnz
nop
cld
jae
add
subl
add
leave
nop
jmp
add
sti
jg
pushl
clc
repnz
nop
cld
jae
mov
add
add
orl
add
jge
add
sbb
cwtl
repz
clc
repnz
nop
cld
jae
fsubl
andb
insb
jmp
inc
clc
repnz
nop
cld
jae
hlt
add
xor
add
shlb
pop
clc
repnz
nop
cld
jae
add
add
xor
mov
push
mov
leave
nop
jmp
add
add
fwait
sub
push
mov
xchg
ret
inc
divl
addr16
push
shlb
nop
push
mov
leave
nop
jmp
ficomps
jge
xor
sbb
push
nop
push
mov
leave
nop
jmp
add
pop
push
cwtl
dec
fsts
mov
xchg
ret
add
push
pop
add
mov
push
mov
xchg
ret
add
add
add
push
mov
nop
push
mov
leave
nop
jmp
stos
add
push
xor
hlt
cmp
test
or
add
repnz
nop
cld
jae
mov
in
nop
push
mov
leave
nop
jmp
add
std
add
xchg
push
clc
repnz
nop
cld
jae
add
add
add
jge
sti
mov
clc
repnz
nop
cld
jae
add
add
repnz
nop
cld
jae
stos
std
add
push
push
clc
repnz
nop
cld
jae
push
add
add
test
mov
clc
repnz
nop
cld
jae
add
add
enter
nop
cld
jae
roll
add
add
add
test
adc
add
repnz
nop
cld
jae
add
add
scas
push
clc
repnz
nop
cld
jae
roll
out
shlb
clc
repnz
nop
cld
jae
fwait
add
sbb
push
nop
push
mov
leave
nop
jmp
mov
lds
add
xchg
clc
repnz
nop
cld
jae
aas
es
add
shll
pop
fistpl
push
mov
xchg
ret
add
add
xor
jne
clc
repnz
nop
cld
jae
add
mov
nop
push
mov
leave
nop
jmp
fwait
add
clc
repnz
nop
cld
jae
add
stos
add
xchg
jne
clc
repnz
nop
cld
jae
lret
scas
fistpl
push
mov
xchg
ret
addl
add
xlat
jne
clc
repnz
nop
cld
jae
add
xchg
xor
clc
repnz
nop
cld
jae
add
add
adc
add
push
mov
add
aaa
lahf
dec
add
xchg
lea
add
jge
pop
iret
add
mov
add
clc
repnz
nop
cld
jae
add
mov
cmpsb
loopne
call
nop
jmp
inc
add
add
stos
ret
push
mov
xchg
ret
out
add
jge
mov
add
insb
inc
out
inc
and
clc
repnz
nop
cld
jae
add
add
sub
inc
jmp
nop
nop
cld
jae
add
add
mov
stos
int
push
mov
xchg
ret
loop
add
push
push
xor
aam
fwait
nop
push
mov
leave
nop
jmp
add
inc
addr16
mov
cwtl
ljmp
inc
add
add
add
mull
push
add
clc
repnz
nop
cld
jae
add
add
div
nop
push
mov
leave
nop
jmp
xchg
add
add
add
clc
xchg
jno
push
mov
xchg
ret
add
add
add
mov
add
repnz
nop
cld
jae
jbe
xchg
fistpl
clc
repnz
nop
cld
jae
pop
add
inc
dec
ja
xchg
out
incl
mov
add
push
pop
add
jbe
imul
jmp
hlt
add
rcrb
rclb
jmp
shrl
xor
mov
clc
repnz
nop
cld
jae
addr16
inc
dec
add
add
clc
repnz
nop
cld
jae
stos
sti
add
and
jo
add
add
adc
add
mov
jbe
clc
repnz
nop
cld
jae
loop
outsb
shll
mov
leave
nop
jmp
add
stos
push
dec
xchg
sub
and
and
clc
repnz
nop
cld
jae
hlt
sbb
add
and
movb
nop
push
mov
leave
nop
jmp
add
xor
outsb
add
nop
nop
cld
jae
add
add
push
je
and
stos
add
mov
clc
repnz
nop
cld
jae
add
xchg
add
repnz
nop
cld
jae
lds
fwait
pop
push
mov
xchg
ret
xchg
add
add
sub
inc
gs
clc
repnz
nop
cld
jae
dec
fwait
add
mov
xchg
mov
xchg
ret
std
push
add
add
loop
jmp
nop
push
mov
leave
nop
jmp
add
jg
ret
mov
add
jecxz
inc
add
testl
and
clc
repnz
nop
cld
jae
jge
or
roll
add
fmul
pop
mov
clc
repnz
nop
cld
jae
add
mov
mov
incl
add
xchg
add
sbb
add
in
leave
nop
jmp
add
testl
nop
nop
cld
jae
add
add
add
push
clc
repnz
nop
cld
jae
inc
add
lds
dec
daa
shr
clc
repnz
nop
cld
jae
out
adc
add
stc
je
clc
repnz
nop
cld
jae
add
add
ds
mov
clc
repnz
nop
cld
jae
add
mov
push
dec
push
push
bound
add
nop
push
mov
leave
nop
jmp
sti
xchg
add
add
andb
nop
nop
cld
jae
add
mov
xchg
nop
push
mov
leave
nop
jmp
add
inc
mov
call
clc
repnz
nop
cld
jae
mov
jmp
xchg
add
add
mov
test
call
nop
jmp
add
es
jne
clc
repnz
nop
cld
jae
aas
xchg
mov
loopne
mov
push
mov
xchg
ret
stos
shl
shll
add
std
out
leave
sub
repnz
nop
cld
jae
stos
add
add
add
clc
repnz
nop
cld
jae
add
rorl
test
add
clc
repnz
nop
cld
jae
add
sti
inc
jecxz
movb
mov
xchg
ret
add
add
loop
push
xchg
push
addb
gs
nop
push
mov
leave
nop
jmp
xor
fwait
add
or
call
nop
jmp
fwait
add
push
mov
leave
nop
jmp
rcl
mov
add
imul
addb
add
nop
jmp
mov
xor
push
mov
xchg
ret
fiadds
sbb
add
outsb
push
push
jg
clc
repnz
nop
cld
jae
test
loop
add
roll
aas
mov
clc
repnz
nop
cld
jae
add
add
mov
test
clc
repnz
nop
cld
jae
sbb
push
mov
xchg
ret
add
jge
inc
addb
add
clc
repnz
nop
cld
jae
push
lds
stos
add
add
pop
clc
repnz
nop
cld
jae
sbb
add
fistpl
clc
repnz
nop
cld
jae
mov
test
jne
clc
repnz
nop
cld
jae
add
xchg
pop
je
clc
cli
mov
rolb
pusha
aaa
fistpl
clc
repnz
nop
cld
jae
out
mov
push
clc
repnz
nop
cld
jae
add
xchg
fwait
add
outsb
add
call
mov
xchg
ret
std
add
add
mov
fcoms
aam
inc
add
add
xchg
xor
nop
push
mov
leave
nop
jmp
add
je
fwait
mov
push
mov
xchg
ret
push
add
add
add
mov
shlb
call
inc
add
add
add
dec
add
in
leave
nop
jmp
lds
mov
fiadds
loop
and
rorb
repnz
nop
cld
jae
add
add
mov
mov
push
clc
repnz
nop
cld
jae
jge
push
adc
sub
mov
xchg
ret
dec
add
aas
mov
add
xchg
fdivr
es
subb
nop
push
mov
leave
nop
jmp
add
add
in
leave
nop
jmp
faddl
sbb
hlt
mov
clc
repnz
nop
cld
jae
out
outsb
xchg
xor
shrl
repnz
nop
cld
jae
push
inc
mov
insb
push
mov
clc
repnz
nop
cld
jae
add
rorl
add
clc
repnz
nop
cld
jae
add
add
add
push
lret
into
inc
dec
clc
repnz
nop
cld
jae
add
add
and
inc
xor
clc
repnz
nop
cld
jae
add
add
loop
imul
clc
repnz
nop
cld
jae
xor
jge
neg
jp
push
mov
add
push
pushf
push
cmp
cwtl
add
add
jmp
clc
repnz
nop
cld
jae
add
add
sbb
or
repnz
nop
cld
jae
add
adc
nop
nop
cld
jae
add
loop
add
or
mov
xchg
ret
add
add
push
push
clc
repnz
nop
cld
jae
add
adc
es
in
outsb
call
clc
repnz
nop
cld
jae
add
stos
xchg
mov
clc
repnz
nop
cld
jae
add
add
sbb
mov
pusha
clc
repnz
nop
cld
jae
add
xor
add
add
mov
fcos
call
nop
jmp
fidivrs
iret
cmpw
nop
push
mov
leave
nop
jmp
stos
add
add
pusha
pusha
lock
sbb
push
push
mov
xchg
ret
jge
add
add
push
loop
popl
jo
nop
push
mov
leave
nop
jmp
loop
pop
ficoms
loopne
mov
xchg
ret
inc
out
add
add
ja
lret
clc
repnz
nop
cld
jae
and
or
push
adcb
test
repnz
nop
cld
jae
test
sarl
repnz
nop
cld
jae
add
stos
xchg
add
repnz
nop
cld
jae
xor
addr16
mov
clc
repnz
nop
cld
jae
or
jbe
add
mov
nop
cld
jae
addr16
xchg
stos
push
stos
testl
mov
xchg
ret
push
sbb
std
mov
push
mov
xchg
ret
xchg
add
add
imul
mov
xchg
ret
push
add
mov
clc
repnz
nop
cld
jae
add
es
xchg
mov
out
clc
repnz
nop
cld
jae
xchg
dec
xchg
call
clc
repnz
nop
cld
jae
add
nop
push
mov
leave
nop
jmp
add
mov
fwait
cli
ret
push
mov
xchg
ret
add
add
add
jge
clc
repnz
nop
cld
jae
lds
add
std
jne
nop
push
mov
leave
nop
jmp
push
jge
ds
xor
nop
push
mov
leave
nop
jmp
xchg
add
outsb
mov
clc
repnz
nop
cld
jae
hlt
push
add
sbb
inc
ss
dec
sub
jns
add
add
dec
test
and
add
repnz
nop
cld
jae
rcrl
add
insl
mov
nop
push
mov
leave
nop
jmp
lds
push
mov
and
jl
nop
push
mov
leave
nop
jmp
add
xchg
clc
call
clc
repnz
nop
cld
jae
add
popl
ficomps
mov
xchg
ret
outsb
pop
add
add
add
inc
mov
clc
repnz
nop
cld
jae
adc
xchg
mov
mov
or
repnz
nop
cld
jae
add
ficoms
cmpl
jae
mov
clc
repnz
nop
cld
jae
xchg
add
pop
add
and
call
cld
jae
add
je
je
inc
pushf
push
xchg
mov
clc
repnz
nop
cld
jae
add
aas
imul
rorb
mov
clc
repnz
nop
cld
jae
add
add
add
cmp
nop
push
mov
leave
nop
jmp
push
xor
jge
add
nop
jmp
add
xor
xchg
inc
dec
xor
sbb
push
mov
xchg
ret
add
push
add
jg
rep
clc
repnz
nop
cld
jae
mov
mov
adc
repnz
nop
cld
jae
add
hlt
lret
jmp
rclb
cld
pop
inc
add
add
xchg
add
add
mov
mov
leave
nop
jmp
and
stos
jg
adc
mov
repnz
nop
cld
jae
add
xor
inc
dec
es
xor
repnz
nop
cld
jae
stos
add
add
loop
clc
repnz
nop
cld
jae
add
test
xchg
movl
sbbl
add
add
mov
and
push
mov
leave
nop
jmp
add
faddl
add
mov
add
clc
repnz
nop
cld
jae
push
aas
fwait
sbb
pop
push
push
mov
xchg
ret
inc
lret
add
inc
add
test
jne
inc
add
add
add
add
iret
inc
nop
push
mov
leave
nop
jmp
and
loop
fiadds
xchg
out
lea
clc
repnz
nop
cld
jae
xchg
add
rcl
push
sbb
mov
xchg
ret
out
loop
add
testl
clc
repnz
nop
cld
jae
pop
push
hlt
jg
insb
dec
push
clc
repnz
nop
cld
jae
adc
or
mov
clc
repnz
nop
cld
jae
pop
xor
stos
add
mov
mov
xchg
ret
add
or
add
push
mov
xchg
ret
add
add
and
xchg
push
mov
clc
repnz
nop
cld
jae
xor
pop
mov
clc
repnz
nop
cld
jae
out
add
jge
sub
mov
leave
nop
jmp
and
xchg
rorl
push
mov
xchg
ret
pop
add
fmull
pushf
add
add
mov
mov
push
faddl
jg
sub
jns
subl
jae
add
dec
pop
mov
push
mov
xchg
ret
xor
stos
add
xchg
stos
jg
sti
clc
repnz
nop
cld
jae
out
pop
stos
add
add
cld
mov
add
add
repnz
nop
cld
jae
inc
pop
mov
nop
nop
cld
jae
popl
add
fsubrs
ret
clc
repnz
nop
cld
jae
add
add
xor
push
mov
xchg
ret
add
add
pop
vpunpckhbw
fs
insb
clc
repnz
nop
cld
jae
add
sti
add
mov
push
mov
xchg
ret
mov
add
add
subl
push
mov
xchg
ret
adc
add
fiadds
pushf
cmp
mov
leave
nop
jmp
xor
add
loop
inc
add
in
leave
nop
jmp
jg
popl
je
push
out
xor
push
mov
xchg
ret
test
xchg
push
add
inc
gs
clc
repnz
nop
cld
jae
loop
add
add
jge
outsl
cld
clc
repnz
nop
cld
jae
jg
add
add
add
jmp
add
add
add
mov
std
push
clc
repnz
nop
cld
jae
adc
add
push
clc
repnz
nop
cld
jae
roll
xchg
xchg
imul
add
clc
repnz
nop
cld
jae
and
xchg
lcall
out
incl
add
xor
outsb
aas
sti
xchg
add
nop
push
mov
leave
nop
jmp
add
add
add
out
jnp
jne
clc
repnz
nop
cld
jae
lret
cmpl
push
mov
leave
nop
jmp
stos
adc
add
clc
repnz
nop
cld
jae
add
add
xchg
add
imul
push
repnz
nop
cld
jae
mov
and
clc
or
jg
add
sbb
mov
mov
jne
clc
repnz
nop
cld
jae
xchg
lret
fistpl
push
mov
xchg
ret
roll
add
adc
clc
repnz
nop
cld
jae
add
sbb
andb
repnz
nop
cld
jae
add
lds
push
add
add
push
mov
xchg
ret
fsubp
xor
xorl
clc
repnz
nop
cld
jae
inc
sbb
sbb
loopne
mov
nop
push
mov
leave
nop
jmp
add
add
add
gs
add
rorl
imul
cld
jae
add
xchg
hlt
add
jg
push
push
clc
repnz
nop
cld
jae
jbe
add
addr16
add
inc
inc
xor
inc
xor
push
mov
xchg
ret
fwait
sbb
jbe
jle
daa
call
clc
repnz
nop
cld
jae
add
lret
jne
nop
push
mov
leave
nop
jmp
xor
add
shlb
jg
clc
repnz
nop
cld
jae
stos
add
xor
inc
in
xchg
clc
repnz
nop
cld
jae
add
add
xor
xor
xorl
clc
repnz
nop
cld
jae
push
lret
fld1
push
mov
xchg
ret
inc
add
add
in
pop
clc
repnz
nop
cld
jae
mov
jg
push
inc
pop
nop
push
mov
leave
nop
jmp
jg
je
pop
add
mov
popa
add
nop
cld
jae
shl
sti
sbb
nop
nop
cld
jae
add
add
add
stos
movzwl
clc
repnz
nop
cld
jae
xchg
fld1
nop
push
mov
leave
nop
jmp
add
push
mov
add
pushf
and
rolb
repz
mov
xchg
ret
jg
or
sti
stos
add
cmc
mov
nop
push
mov
leave
nop
jmp
outsb
add
mov
push
clc
repnz
nop
cld
jae
xchg
add
cmp
nop
push
mov
leave
nop
jmp
sbbl
nop
cld
jae
add
add
and
push
mov
xchg
ret
add
roll
std
out
mov
clc
repnz
nop
cld
jae
add
add
call
jbe
add
sbb
push
outsb
push
jp
div
clc
repnz
nop
cld
jae
notl
pop
stos
add
fwait
add
leave
lea
clc
repnz
nop
cld
jae
add
inc
popa
clc
repnz
nop
cld
jae
loop
push
add
add
test
adc
loopne
sub
clc
repnz
nop
cld
jae
push
push
popf
pop
push
mov
xchg
ret
stos
add
lret
add
mov
mov
xchg
ret
sbb
loop
jge
jnp
nop
cld
jae
xor
add
add
clc
repnz
nop
cld
jae
xor
add
loopne
push
mov
out
hlt
cmp
mov
mov
add
fs
xor
jns
and
sub
push
mov
out
call
cmp
orb
fistps
mov
lods
push
shlb
lahf
sub
jp
xchg
shll
rcr
je
repnz
popf
jno
pop
scas
test
push
movsb
add
jle
jl
or
popa
iret
out
movsb
pusha
rolb
gs
jae
pusha
iret
pop
inc
push
add
add
inc
dec
pop
xor
imul
jl
xchg
and
pusha
sbb
stos
popa
pop
or
loopne
jge
lcall
mov
mov
jns
add
xchg
out
fs
push
pusha
loopne
addb
sub
push
aam
inc
pusha
mov
or
and
imul
and
mov
shlb
sub
shr
or
push
push
leave
repnz
and
pusha
daa
sbb
sti
popf
gs
rep
push
pop
out
lock
mov
popf
add
push
loope
pusha
shlb
jb
flds
pusha
and
adc
inc
sbb
inc
dec
pop
cwtl
test
rcr
hlt
notb
andb
xor
push
add
dec
data16
mov
and
mov
jnp
popa
mov
mov
sub
cmp
shlb
loopne
shrl
mov
aam
dec
lods
add
and
rcrb
push
sbb
xchg
sahf
push
mov
inc
out
stos
and
lcall
mov
add
add
js
mov
loop
adc
and
add
lods
and
mov
addb
mov
fs
dec
clc
jp
pop
popf
daa
sub
bound
inc
xchg
ja
stos
call
dec
inc
sbb
xchg
and
in
mov
aas
adc
pop
pop
pop
inc
enter
inc
xchg
push
cmp
or
insl
loop
aaa
stc
aas
push
add
repnz
inc
push
cld
sbb
xchg
mov
in
mov
ss
add
and
andb
test
rorb
push
andb
mov
xor
or
lods
and
jnp
xor
shll
mov
jb
add
sub
cmc
rol
sbb
and
jbe
enter
inc
push
push
ja
pop
sub
or
dec
mov
data16
adc
insl
sub
xlat
xchg
loopne
pusha
sarb
pop
imul
and
call
xlat
jnp
pushf
sbb
sbb
daa
inc
jne
cmpsb
loopne
mov
jb
ss
loope
cmp
pop
or
inc
and
repnz
sahf
cltd
divl
test
bound
pop
push
aas
inc
fsubrs
pop
push
jb
rorb
pusha
jns
mov
ret
popf
loop
daa
dec
dec
mov
xor
add
add
lret
repz
nop
pusha
mov
std
xchg
daa
lahf
sarl
mov
mov
addr16
cli
ret
mov
fimull
nop
cld
leave
data16
jmp
imul
dec
lock
aad
loopne
int3
cmp
dec
aas
clc
and
inc
in
add
mov
inc
fmulp
cs
mov
or
push
xchg
inc
inc
push
jne
inc
cs
andb
fcomp
pop
jnp
adc
inc
hlt
pop
into
xchg
lret
sbb
mov
cmp
std
mov
mov
pop
rcrl
push
test
dec
mov
adc
pusha
loopne
insl
in
pop
ret
cmp
in
call
jge
pop
xchg
add
andb
loopne
jno
imul
pop
push
repz
fsubl
shll
add
add
push
fimuls
andb
adc
aas
push
and
lfs
and
jmp
jp
outsb
int3
sub
popa
sbb
jbe
mov
and
push
xchg
mov
add
inc
mov
psrlw
enter
cmp
cli
lods
aad
jne
and
shrb
stos
add
adc
es
jl
mov
ss
cmp
jno
push
sub
out
jnp
dec
cmp
push
loop
aas
and
rol
add
andb
xchg
call
cmp
inc
rcl
xor
and
cmp
jbe
jecxz
pop
andl
ljmp
loopne
mov
and
shrb
inc
add
cmp
or
add
mov
mov
loopne
sbb
addb
es
lahf
insl
add
sbbb
cmp
mov
push
movsl
xchg
rol
les
xchg
hlt
xorl
aas
push
push
ret
addb
test
and
pusha
pusha
mov
jecxz
add
int3
ja
mov
mov
std
in
xchg
dec
sti
push
mov
sub
stos
mov
daa
mov
inc
orb
cmc
lret
mov
pop
or
cmpsb
loopne
repnz
repnz
mov
rolb
iret
mov
hlt
inc
test
pop
add
cltd
inc
dec
lret
in
cmp
sarb
ret
add
fsubl
pop
mov
rolb
subb
add
lds
sub
mov
or
loopne
ss
add
out
cli
mov
fsubl
or
push
rclb
cmp
je
out
pusha
add
jno
lock
xlat
in
mov
pop
xchg
mov
test
jmp
jmp
iret
mov
sbb
xor
aas
jnp
jnp
pop
xchg
jg
jae
lret
xchg
cmp
jmp
dec
xor
test
mov
jmp
sub
lea
jae
adc
jb
mov
and
mov
xchg
mov
mov
xor
addb
lcall
add
scas
sub
lods
pusha
pusha
pushl
xchg
dec
lcall
mov
push
add
lea
pusha
shlb
push
cmp
rolb
out
xchg
cltd
or
ret
ret
jp
loopne
pop
stos
shlb
xchg
mov
arpl
pop
xor
pop
repz
add
movsb
inc
loopne
mov
pusha
out
jle
and
push
jle
mov
and
addb
add
mov
cltd
mov
mov
xchg
pop
lods
into
mov
jle
inc
and
rol
imul
dec
popa
ret
cmpsl
jo
aas
jp
fcompl
movsl
cltd
cmpsb
mov
mov
add
cli
rolb
in
stc
mov
sbb
loopne
and
push
inc
rorb
in
loopne
das
sub
pusha
out
adc
mov
aad
rolb
pushf
addr16
add
ficoms
mov
test
or
hlt
xor
fsubrl
sbb
shlb
or
lods
addb
fdivrs
add
cmp
and
push
mov
mov
add
jl
or
mov
sub
add
lret
sti
in
fimull
pusha
add
fnstcw
ds
add
lock
mov
mov
inc
pusha
sbb
cmp
ss
add
xorl
std
mov
ret
add
inc
outsl
out
mov
add
loopne
and
and
int
loopne
xchg
sub
loopne
push
jnp
dec
or
movsl
mov
mov
shll
rclb
leave
and
insb
ret
dec
adc
cmp
lcall
popa
xchg
xor
psrlq
insl
inc
out
or
pop
push
push
push
jecxz
negb
push
shr
sbbl
xor
cmp
sbb
dec
xchg
add
add
inc
fs
es
mov
and
lods
loopne
and
lods
and
hlt
mov
pusha
mov
add
rol
popf
add
into
jl
ret
push
int3
in
bound
lods
in
inc
andb
xor
dec
pop
cmp
bndldx
cld
cmp
push
dec
push
insl
shlb
test
shl
mov
shlb
sahf
add
jns
or
sbb
enter
or
pusha
lods
inc
and
loopne
jge
add
push
pop
pushf
or
dec
sub
add
lds
add
icebp
insl
add
mov
loopne
mov
sbb
mov
fsts
fs
mov
js
sbb
cmp
lcall
and
add
lret
scas
inc
add
adc
jecxz
and
jbe
lods
and
sarb
lods
mov
loopne
sbb
in
push
psllw
inc
push
xchg
jecxz
outsl
cld
pop
inc
mov
dec
out
shl
loop
popa
std
pop
jbe
adc
test
rcll
xchg
inc
int3
mov
pusha
loopne
das
lret
scas
mov
jbe
mov
mov
add
rolb
and
mov
pop
push
shr
pusha
adc
ficoml
mov
scas
addb
mov
lds
int3
cmpl
les
stc
icebp
or
and
push
pop
add
add
or
mov
dec
push
mov
and
pop
lock
and
rol
add
pushf
jns
inc
scas
orl
cmc
jmp
ja
cld
xor
pop
icebp
or
cmpsb
rolb
lock
jl
dec
mov
push
inc
mov
push
sbb
inc
loopne
lea
xor
shl
cmc
repz
popf
lahf
aam
in
icebp
shlb
addb
das
and
inc
add
in
mov
hlt
fisubrl
and
lret
imul
and
push
xor
xchg
push
push
stos
leave
fcoms
pusha
sarb
push
xchg
scas
lret
cmp
loopne
mov
adc
mov
pop
jg
add
loopne
xor
cld
insb
loop
jne
std
adc
and
scas
dec
jnp
add
inc
xchg
lods
add
ss
push
pusha
rcr
pop
mov
inc
loop
test
xlat
push
cmp
jb
test
scas
call
addb
loope
sbb
mov
xchg
inc
mov
fimuls
or
pusha
test
xchg
xchg
insb
ds
clc
push
mov
ror
cwtl
out
mov
ljmp
mov
add
pusha
inc
mov
loopne
xor
lret
shlb
xchg
outsb
and
jae
lds
inc
pusha
dec
out
nop
loopnew
popf
out
push
movsb
and
inc
and
inc
add
push
shl
mov
adc
xor
xchg
add
aam
cwtl
xlat
mov
jb
mov
mov
add
loopne
dec
sbb
xchg
xor
adc
std
fs
and
and
shr
bndstx
pop
fisttps
iret
cli
imul
movsl
mov
mov
mov
adcb
aas
dec
inc
dec
fsub
xchg
in
mov
push
into
mov
out
cmp
jo
push
mov
mov
and
cmpsb
add
mov
jnp
call
add
inc
push
cmp
nop
mov
das
push
inc
mov
lret
xchg
add
pusha
push
cli
mov
push
lock
scas
adc
sub
and
jmp
rolb
cmovl
jo
mov
test
pop
cwtl
loopne
push
fcoml
fdivs
pop
sub
orb
add
into
sbb
sub
pushf
sbb
shrl
sbb
inc
and
jnp
sbb
nop
ds
mov
pop
insb
xchg
add
pusha
inc
xor
adc
mov
loopne
pusha
inc
mov
xchg
cmp
insb
repnz
cmpl
add
mov
cmc
lea
xlat
sahf
cmp
add
pop
mov
inc
jae
loopne
hlt
sub
adc
pusha
inc
in
cld
sub
aaa
and
mov
mov
xorb
push
shlw
jb
or
loopne
lret
lds
imul
dec
addr16
inc
stc
mov
loopne
push
and
cmp
lods
lock
pop
stos
pop
inc
pop
cmpl
mov
and
inc
jg
popa
insl
sub
and
addb
sbb
std
mov
ror
aas
repnz
cmp
test
frstor
pusha
or
mov
out
mov
addb
sub
loopne
cmp
sbb
push
add
mov
fld
int3
dec
dec
sbb
and
das
and
rorb
pusha
add
lods
mov
in
mov
mov
dec
or
inc
stos
sub
mov
pop
cmp
int3
sbb
sub
mov
subl
add
mov
shlb
inc
fsubrl
adc
jne
test
xchg
lds
inc
mov
xchg
pusha
call
jo
or
cmp
mov
aas
cmp
and
stc
xchg
mov
dec
push
aas
ljmp
shrb
pusha
mov
push
in
in
rcll
aas
data16
mov
clc
data16
push
lret
add
into
outsb
ljmp
loope
inc
jge
jnp
jecxz
pusha
and
lds
rol
adc
aad
jno
rolb
aad
sub
andb
cli
or
mov
sbb
push
pop
std
sbb
inc
bound
pusha
insl
aas
cmp
stos
add
dec
das
mov
mov
cmc
add
mov
pop
or
pusha
fnstsw
stos
jmp
movsb
and
icebp
fistps
mov
pusha
mov
and
mov
mov
cwtl
test
inc
sub
hlt
insb
mov
in
repnz
pusha
push
dec
insb
lods
cld
jmp
rolb
push
jg
mov
fdivrs
inc
pusha
iret
sbb
mov
mov
adc
fs
and
xor
roll
and
and
loop
mov
sub
inc
dec
jo
fisttpll
out
mov
aaa
pop
addb
gs
and
pop
cmp
dec
inc
jb
sub
loopne
dec
loopne
sar
add
loopne
jmp
lods
pusha
add
repnz
pusha
add
pusha
mov
data16
popf
outsl
sub
inc
xlat
mov
inc
or
lret
xchg
les
push
aam
repnz
mov
pop
and
push
and
sbb
addb
scas
add
ja
test
stos
cmc
imul
inc
mov
popf
cmpsl
mov
int
push
int
dec
jecxz
or
jmp
andb
mov
jns
shll
test
xchg
push
fwait
dec
mov
lea
inc
shr
sbbl
cmc
hlt
stc
lods
jmp
popa
outsl
nop
or
add
cld
mov
and
outsl
pop
xchg
paddusw
and
lahf
mov
addb
add
xor
add
cwtl
imul
and
ret
add
sti
pushf
push
enter
leave
dec
in
ss
cmpsl
hlt
outsl
mov
pusha
pushf
mov
fmull
inc
sub
cmc
mov
inc
push
int3
mov
or
fcmovnb
mov
lret
movsl
lock
cld
fmuls
lcall
xchg
and
push
inc
dec
jno
shlb
int3
call
xchg
jb
rcrl
out
xchg
jecxz
ljmp
cmpb
jns
loopne
sbb
lds
popf
dec
sahf
popa
mov
adc
pop
in
leave
lock
inc
sub
inc
jno
pusha
inc
mov
mov
bound
mov
sub
add
mov
push
stos
addb
cmpsb
add
pop
sub
mov
addr16
movsl
xchg
push
aas
cmp
je
dec
jns
push
dec
dec
out
mov
mov
iret
mov
xchg
xchg
push
xchg
and
sbbb
and
xor
pusha
mov
sub
cwtl
hlt
cmp
and
xor
test
inc
lds
mov
inc
mov
loopne
scas
std
jl
stos
rolb
mov
dec
into
bound
and
pop
push
cmpsb
inc
shlb
rcl
jae
icebp
and
sub
add
xor
ja
mull
fwait
add
mov
push
mov
and
or
rolb
add
or
and
cmp
xchg
inc
fbstp
mov
xchg
fidivrl
push
in
negl
push
jge
pop
mov
les
and
pusha
subb
addb
pop
divb
mov
aam
mov
sarb
movhps
jnp
push
ja
stos
shlb
adc
mov
loopne
popa
xchg
sub
int
pop
adc
jb
sub
inc
inc
push
or
and
pop
out
and
mov
loopne
cmp
lock
test
pusha
decb
mov
push
inc
stos
jl
mov
pop
mov
mov
or
pop
xchg
push
jns
xchg
dec
pop
out
push
mov
mov
lahf
cmpsb
pusha
loopne
pop
das
xor
rolb
and
sub
addb
jb
je
loop
jbe
out
cmp
call
sub
adc
add
cltd
nop
sbb
add
dec
mov
mov
cmc
add
shl
pop
push
sbb
fcmovu
xchg
outsb
lea
push
and
mov
mov
pop
add
pusha
adc
in
jns
xor
xchg
add
inc
pusha
adc
sub
push
rol
inc
loopne
sub
push
ja
jmp
shlb
shrl
sbb
rcl
lret
aaa
repnz
out
push
xor
rcl
pop
mov
loopne
mov
lock
pop
addb
inc
pop
jmp
sbb
movsb
inc
loopne
or
sub
out
dec
jae
dec
mov
sub
loopne
push
fsubs
and
stos
scas
inc
inc
pop
inc
mov
mov
sbb
add
sar
sub
pusha
mov
pusha
pusha
lods
mov
pusha
shrb
or
and
push
xchg
mov
cmc
add
cld
or
shlb
addb
xchg
idivl
loop
add
add
jle
mov
xchg
push
rolb
mov
test
jl
or
mov
fnstsw
cmp
fbld
pushf
rcr
testb
xor
jnp
fnsave
adc
in
test
int
sub
jae
mov
out
call
jp
xchg
push
push
jns
mov
pop
and
push
lods
pusha
rclb
pusha
pusha
flds
lods
imul
loop
or
repnz
xchg
idiv
movsb
add
mov
pop
mov
jns
aas
loopne
andb
movsl
shl
pop
inc
adc
insl
imulb
add
adc
mov
pop
lea
pop
sbb
mov
insl
jp
vpermq
mov
andl
pop
dec
psubd
add
cmp
loopne
push
stos
or
mov
insb
mov
mov
push
sti
push
pop
or
sub
dec
push
jmp
and
arpl
loope
shlb
fldt
xchg
loope
add
or
out
jns
sub
jae
aad
pusha
add
mov
mov
push
xchg
push
jge
clc
das
jnp
and
test
mov
xor
dec
rcrb
ret
loopne
adc
inc
mov
std
fnstcw
dec
dec
cmpl
lods
inc
inc
push
shlb
ror
stc
sti
mov
ja
loop
add
test
adc
pusha
add
adc
jle
lret
add
mov
mov
in
jbe
ds
inc
outsl
je
xchg
lret
add
loopne
xchg
xchg
daa
mov
and
imul
call
shlb
inc
test
pusha
cmp
fbld
lret
rol
imul
divb
mov
push
shlb
or
inc
inc
push
push
sub
vphaddbq
gs
cwtl
push
mov
ja
mov
insb
or
clc
cli
xchg
xchg
xchg
test
test
subb
and
and
rolb
insb
pop
ljmp
ret
cld
adc
sbb
pop
ljmp
or
mov
adc
adc
push
jno
mov
and
xchg
push
outsl
push
aas
in
pop
shll
and
std
in
cmp
xlat
lock
sbb
aaa
divl
call
pop
pop
xlat
pop
icebp
std
cmp
add
add
pusha
add
mov
jg
and
and
lods
pusha
shlb
mov
loopne
notb
xchg
sbb
lods
mov
loopne
mov
mov
orb
pusha
subl
je
adc
jb
ja
lea
scas
test
outsb
loopne
cld
sub
push
loopne
xor
into
les
rclb
lds
in
or
mov
arpl
and
scas
pusha
inc
xchg
mov
testb
in
clc
and
insb
xchg
sbb
ds
adc
ja
jecxz
fnstsw
sti
push
xchg
test
and
ds
test
push
add
out
cmp
add
nop
mov
cmp
andb
add
mov
in
or
shr
pop
cmpsl
inc
jbe
jge
mov
shrl
jg
and
and
loope
mov
mov
and
xor
pop
mov
and
add
push
andb
testl
jmp
pop
stos
and
loopne
jmp
js
dec
sbb
adc
test
rolb
aam
dec
sahf
imul
comiss
push
mov
mov
pusha
xchg
mov
push
inc
adc
addb
push
lock
mov
add
enter
das
and
enter
add
mov
in
lods
push
int
sarl
sahf
sbb
and
add
sub
pusha
or
sbb
sub
js
cmp
dec
popa
pop
repnz
mov
lahf
mov
adc
andb
add
sarb
jle
pop
ja
sub
cmp
in
frstor
pusha
cmpsb
mov
nop
fwait
jle
rcl
mov
jo,pt
loopne
push
jp
fs
cli
in
pusha
pusha
and
cmp
faddl
and
pusha
xchg
dec
lods
and
push
xor
pusha
pusha
insw
xor
push
enter
fdivrl
stos
mov
fdivrl
pop
cmp
loope
xor
fmuls
popf
clc
add
add
or
loopne
ret
adc
out
outsb
scas
pusha
add
addb
dec
jmp
adc
shl
and
sub
inc
rcl
idivl
cwtl
push
xor
outsb
es
addb
pusha
sbb
fisubrl
jecxz
sbb
xor
loopne
por
or
rclb
pop
mov
pusha
inc
ret
add
in
inc
push
je
add
push
jo
jge
ljmp
movsl
mov
xor
and
cmp
mov
stos
clc
or
imul
js
out
inc
lea
xchg
add
mov
rcll
and
or
mov
dec
pop
xor
pusha
pusha
mov
jbe
push
add
call
add
sub
pusha
hlt
les
inc
repnz
movsl
ds
gs
sbb
inc
shrb
fcmovnb
fstps
dec
out
aaa
cmovs
and
add
add
push
andb
pop
ret
inc
subb
sahf
insl
dec
pusha
lods
sub
rol
pop
inc
sub
push
leave
bound
add
or
inc
xchg
xchg
push
sub
push
add
dec
mov
adc
adc
int3
xlat
stc
push
mov
dec
pusha
sti
sub
add
pop
outsl
dec
pop
or
xorb
jo
push
sub
lea
jae
adc
addb
mov
clc
shll
lods
aam
pop
jle
add
mov
adc
movsl
arpl
iret
push
xor
arpl
add
pusha
mov
mov
inc
add
and
lea
add
loopne
test
cmc
mov
mov
sbb
add
pusha
adc
int3
mov
inc
rorb
ds
xchg
ret
fdivrl
cmp
fsubrs
xor
pusha
mov
clc
mov
loopne
imul
mov
xor
xor
lcall
out
pusha
add
iret
pop
addr16
add
sub
rol
addr16
loopne
sbb
pushf
pop
cs
and
jecxz
push
movsb
mov
enter
and
hlt
stos
inc
mov
fistl
mov
mov
and
loopne
lcall
jne
sub
cmpsb
and
add
lcall
andb
loopne
popf
popf
dec
pop
pushf
in
add
lcall
sbb
jbe
or
loopne
loopne
add
loopne
testb
andb
lods
mov
and
and
pushf
add
cmp
dec
dec
cmp
bnd
sbb
test
and
sti
inc
daa
iret
mov
shl
mov
shr
sbbl
dec
das
jnp
add
push
sub
jle
int3
sbb
scas
js
push
inc
lock
xchg
xchg
add
lret
pop
pop
xor
test
add
loop
push
arpl
sub
mov
dec
mov
pop
andb
outsb
mov
inc
insl
push
mov
shrb
loopne
cld
jl
add
cmp
lds
repz
pusha
shrb
xor
addb
adc
and
and
adc
das
cmp
das
adc
out
pop
mov
inc
and
mov
and
addb
nop
sti
pop
xor
insb
jae
rolb
sahf
mov
xor
ds
push
push
add
aam
mov
rol
inc
cmpsb
mov
xchg
xchg
sub
add
push
xchg
push
lea
push
push
gs
sbb
andb
xor
loopne
enter
cltd
std
jmp
xor
pushl
sarb
mov
lds
loopne
int
sub
inc
leave
xchg
mov
and
dec
cmc
ja
insl
stc
cmp
movsl
xchg
cmpb
popf
pop
sahf
mov
rcll
mov
mov
jge
lret
testl
rol
repz
jecxz
ret
ficompl
xor
call
pusha
or
loopne
aas
xor
ret
inc
addr16
inc
lahf
push
and
and
adc
loopne
pop
push
or
mov
fidivrl
addb
and
loopne
add
lods
mov
xor
rorb
pop
pop
inc
xor
mov
dec
or
push
rolb
and
test
dec
xor
mul
ja
sub
mov
andl
rcrl
add
add
add
or
pshufw
adc
je
shlb
inc
pusha
mov
out
mov
add
addr16
and
fbstp
adc
dec
pop
xchg
fisubrs
and
mov
mov
out
sahf
cmp
pop
roll
scas
jbe
std
ljmp
dec
dec
data16
dec
aad
loop
loop
xchg
mov
cld
fnsave
cmp
mov
outsb
cwtl
addr16
insl
dec
sub
call
mov
mov
lahf
ss
into
xchg
std
cmp
test
in
dec
xchg
push
sbb
jl
mov
and
fnstcw
clc
fidivrl
or
lock
cwtl
ss
mov
fisubrs
push
mov
add
stc
xchg
pop
call
add
in
and
jl
or
loopne
dec
popa
pop
ja
add
push
xchg
test
adc
lahf
push
inc
hlt
add
adcb
rorb
mov
pusha
pusha
adc
in
xchg
mov
xor
and
outsl
xchg
xor
scas
push
popa
lods
lods
lret
pusha
nop
aas
ja
push
loopne
jae
inc
fnsave
movsb
loopne
int3
ljmp
sbb
bound
add
add
stos
and
fsubrl
mov
push
mov
andb
shl
scas
xor
jo
add
sbb
cmp
andb
push
cmc
xchg
fsubp
add
xchg
les
mov
jecxz
inc
and
imul
mov
dec
cmpsl
mov
and
out
stos
shl
lds
and
out
aaa
sbb
dec
icebp
dec
ret
add
mov
pushf
cmc
xlat
iret
test
loopne
test
add
ds
es
movsb
loopne
or
push
xchg
mov
jg
ret
push
js
movsb
pusha
andb
xchg
fldcw
add
ja
xor
inc
xchg
jbe
std
dec
data16
cwtl
mov
loopne
adc
mov
push
cld
mov
and
inc
je
aaa
mov
push
mov
shlb
mov
test
mov
loopne
movsl
or
mov
add
lcall
loopne
mov
adc
ret
shlb
mov
add
xchg
inc
jnp
icebp
in
xor
xchg
fisubrl
lods
mov
cmp
mov
mov
sarb
dec
cmp
je
pop
clc
sbb
or
in
fistpll
cltd
sbb
insl
lea
inc
mov
std
pushf
in
cmpsl
popf
fdivrl
or
je
popa
aam
push
or
and
shlb
and
inc
cmp
call
pusha
inc
mov
pop
push
jno
cs
sar
pusha
mov
inc
orb
loopne
loopne
movsl
pmaddwd
and
cmpb
lds
ja
std
xor
mov
mov
enter
inc
rolb
pop
add
loopne
pop
fs
dec
test
in
mov
or
add
xchg
lock
iret
call
push
movsl
addr16
cmpl
pop
sbb
push
lods
mov
test
cmp
or
add
and
mov
movsb
add
in
push
loopne
push
nop
test
jmp
nop
pop
imul
xor
jb
shrb
ficoml
jmp
or
mov
inc
pop
sub
sbbb
sarb
flds
cmc
movsb
loopne
mov
jp
call
adc
pop
push
pusha
lds
push
pusha
and
pop
cmp
adc
sub
rcrb
push
and
sbb
aas
pop
adc
sbb
cld
test
and
lock
mov
fsub
adc
and
mov
in
das
sub
rorb
ss
test
movsl
mov
dec
push
iret
add
mov
inc
jbe
repz
out
adc
outsb
out
in
inc
leave
mov
ja
xor
mov
inc
pusha
mov
rol
scas
scas
dec
test
cli
mov
movsb
add
popf
push
test
orb
loopne
sbb
add
test
movsb
inc
inc
dec
imul
xchg
dec
mov
rcr
fldl
loopne
pusha
cld
cmp
and
or
into
push
add
adc
cmp
fmuls
mov
sarb
and
pop
outsl
out
xor
mov
inc
cmp
pusha
inc
dec
mulb
icebp
fstps
mov
mov
mov
mov
int3
test
jmp
add
inc
cmp
inc
rorb
mov
or
popf
jns
add
movsl
loopne
dec
frstor
add
mov
add
mov
and
add
add
xor
inc
mov
aam
inc
push
xchg
pop
and
test
inc
cmp
add
mov
scas
sbb
ret
loopne
mov
mov
cwtl
mov
inc
fsubp
push
in
cmpl
and
shlb
loopne
popa
bound
int3
push
or
rcrb
andb
lea
adc
mov
xorb
in
mov
and
shll
adc
out
fimull
ret
mov
push
dec
push
inc
rcl
xchg
add
mov
xchg
leave
jle
add
imul
mov
sbb
stos
addb
add
fwait
mov
adc
testl
add
daa
je
in
out
movsl
and
and
mov
jl
mov
stos
mov
dec
rcl
cmp
or
cmp
nop
sti
adc
xchg
mov
fimull
andl
cltd
sbb
jbe
pop
int
xor
pop
and
jb
mov
rcrb
push
and
push
fdivl
sbb
sahf
cwtl
ljmp
lds
cmc
cmc
fiadds
addb
mov
pusha
cmp
push
test
inc
cmp
mov
mov
jecxz
mov
subl
outsl
pushf
pop
cmc
and
rolb
orl
inc
aad
pop
test
adcb
aad
add
add
and
mov
add
or
inc
push
int3
xor
add
lahf
sub
sti
adc
inc
mov
cli
xchg
xchg
in
jp
rolb
call
rclb
mov
push
sbb
jb
mov
inc
jl
sub
jl
loop
push
xor
mov
cmp
add
cs
add
xchg
filds
push
cmpl
sub
inc
sbb
mov
xor
andb
inc
fstpl
xchg
cmp
and
xor
repz
inc
jle
das
jo
lock
orb
jmp
xchg
dec
pop
je
cltd
or
inc
test
adcb
mov
out
pop
push
push
cli
ja
mov
mov
add
stc
popa
rcr
imul
js
dec
dec
and
cmpsl
dec
mov
sbb
lret
nop
mov
xor
inc
shlb
mov
mov
scas
popa
stc
loop
mov
and
inc
lock
mov
fcmovnu
mov
add
lods
inc
and
fists
inc
mov
out
das
add
aad
add
insl
mov
add
mov
std
xor
jmp
xor
pusha
add
inc
aas
and
loopne
loopne
push
jl
mov
jg
pushf
cmp
pop
js
inc
mov
xchg
in
lea
cmp
xor
mov
shrb
fnsave
icebp
jbe
xchg
inc
addr16
xchg
arpl
dec
add
add
loopne
inc
mov
stos
adc
rolb
push
xor
mov
mov
mov
or
rol
fistl
xor
add
add
mov
jns
xor
stc
push
rol
cmp
push
lret
stc
enter
and
rol
sahf
jl
enter
cmc
or
and
sbb
cli
shlb
mov
cmpsb
loopne
mov
stc
stos
and
stos
stos
mov
mov
aam
lea
daa
jecxz
loopne
cld
int
add
sub
xchg
push
aas
mov
fwait
xchg
movsl
pop
mov
pop
sbb
inc
rolb
lods
test
pusha
outsb
das
mov
jmp
push
loopne
mov
dec
pusha
xor
and
and
add
arpl
in
adc
sbb
loopne
cmp
dec
rorl
and
scas
out
push
clc
imul
icebp
pop
jbe
pop
in
loop
insb
pop
ds
jge
push
pusha
and
mov
aaa
xchg
inc
ret
sub
mov
mov
js
ja
sub
andb
sub
inc
loope
pop
andb
xor
in
inc
mov
and
push
subl
loopne
mov
rol
jae
mov
mov
mov
addb
shrb
sub
stos
mov
add
xor
rolb
fidivrl
jle
pop
pop
xadd
mov
addb
imul
nop
pop
cmp
dec
popa
push
dec
add
adc
out
cmpsl
ret
xor
or
mov
sub
dec
aad
and
mov
andb
dec
aas
mov
loopne
sbb
xlat
sub
out
call
fadd
scas
push
pop
in
into
cmc
cmc
cmp
call
xchg
nop
mov
and
and
pop
mov
insb
jg
pusha
and
xchg
popf
nop
cmp
cli
lock
adc
pop
jnp
roll
pop
add
sti
notb
cltd
into
add
mov
xorb
mov
mov
fbld
dec
inc
or
movsl
xchg
insb
lcall
mov
jae
fsubs
add
pusha
loopne
xlat
xchg
sti
negb
push
addb
ss
add
push
mov
fsts
outsl
xor
mulb
sub
mov
mov
mov
jne
movsl
loop
add
push
inc
xchg
imul
insl
mov
loopne
mov
mov
lcall
cmp
ror
call
mov
pusha
add
add
mov
leave
mov
mov
mov
bound
sub
pusha
cltd
fcmovb
imul
in
out
jo
jl
insl
jnp
push
add
ret
inc
pusha
aaa
sbb
loop
mov
add
std
fnsave
repz
stc
add
aaa
addb
pslld
sub
loopne
jno
nop
mov
inc
cli
jo
or
and
andb
cmpb
into
jmp
sub
mov
addr16
pop
daa
cli
pushf
pop
in
adc
mov
fnstsw
pusha
inc
fsubrl
xor
xor
pusha
loopne
into
adc
adc
jl
sbb
in
stos
mov
or
fisubs
pusha
mov
jo
fadd
push
mov
mov
sub
cmp
dec
xor
add
and
inc
pop
adc
fcmovnu
pop
pop
mov
mov
outsb
hlt
mov
imul
xchg
push
loope
mov
jg
enter
inc
sbb
clc
or
ret
lahf
popf
xor
repz
mov
add
xor
pushf
jae
add
push
and
jbe
add
add
pusha
inc
jg
loopne
cmpsl
sub
lds
and
rcr
add
add
rorl
mov
lcall
push
out
leave
xchg
sbb
scas
and
inc
adc
fstpt
fdivl
or
cmp
shll
std
mov
and
aam
and
mov
hlt
or
loop
and
rcr
add
sub
add
bound
sbb
popf
loope
push
shl
mov
dec
pop
les
pusha
inc
aad
add
iret
frstor
loopne
les
and
pop
mov
dec
inc
lahf
arpl
xor
and
cmc
push
loopne
enter
xchg
xchg
xor
and
jno
fwait
push
add
lock
sbb
mov
rol
cmp
fnstenv
mov
mov
sub
add
inc
and
and
inc
aad
lcall
mov
pusha
into
ss
xor
pop
and
rcrl
fldl
mov
add
loopne
push
xor
movsl
imul
loopne
in
sbb
leave
daa
inc
pop
jb
stc
push
mov
inc
and
dec
pushl
addb
mov
mov
lods
jecxz
test
rol
or
loope
add
adc
mov
out
mov
insb
adc
adc
mov
rol
push
loopne
mov
cmc
in
insl
cli
mov
push
jp
sub
sbb
sbb
pop
adc
out
push
mov
fwait
adc
cli
push
pusha
inc
xchg
mov
pop
dec
rep
adc
fistpl
jnp
addr16
mov
enter
xchg
xchg
enter
loopne
xchg
enter
inc
pusha
and
jne
jnp
inc
adc
loopne
mov
pop
mov
insb
aas
jp
xor
pusha
ret
adc
addb
addb
shrl
das
aad
lcall
imul
sbb
add
and
mov
stc
adcl
mov
sub
and
ret
testl
jno
mov
fsubl
and
int3
cli
addb
pop
lock
mov
into
andb
nop
cld
std
pop
pmulhw
ss
addr16
cmp
cld
stos
push
pop
rolb
sbb
imul
dec
xor
sbb
xchg
cwtl
call
int3
mov
mov
add
push
cmp
fldln2
jbe
jecxz
sbb
shll
sahf
shrl
out
jmp
cmp
mov
dec
fidivrs
jnp
add
sbb
rolb
adc
shlb
out
sub
in
mov
insl
sub
loopne
jmp
jl
mov
std
fldcw
inc
int3
in
pop
out
mov
or
sbb
xor
add
xlat
andb
mov
pop
jp
inc
xchg
lret
cld
adc
xlat
cmp
pop
cmp
mov
addb
fdivrl
mov
sub
and
mov
into
jp
aad
and
iret
push
clc
sub
pusha
fnstenv
addb
adc
inc
inc
jge
and
inc
sbb
push
hlt
mov
cmp
dec
ret
cwtl
repnz
ja
jb
mov
sahf
stos
add
cmp
mov
andb
cwtl
mov
inc
aaa
rclb
xchg
mov
dec
pop
xchg
pushf
aaa
dec
les
or
shl
testl
adcl
cmp
addb
lods
mov
xchg
push
lods
inc
mov
xlat
adc
nop
popf
ljmp
loopne
shlb
or
pushl
add
cmp
inc
enter
add
adc
xor
lahf
dec
xlat
xchg
mov
mov
jb
insl
lods
adc
pop
in
xchg
mov
loopne
mov
sbb
and
jae
mov
pop
out
sbb
sahf
fistpl
sbb
xchg
inc
adc
add
aad
pusha
pusha
andl
add
repnz
loop
loopne
mov
and
icebp
lret
ret
andb
mov
adc
cld
cwtl
jns
jle
shl
push
xor
push
mov
adc
imul
nop
ss
mov
add
xchg
arpl
fisubs
out
pusha
loopne
adc
sub
pop
mov
and
sub
shlb
pusha
mov
andb
sbb
sahf
or
jecxz
mov
into
dec
jno
mov
sbb
mov
add
outsl
stos
add
xor
test
loopne
mov
mov
and
jae
jle
cmpsb
loopne
inc
fbstp
mov
xchg
int3
cli
push
mov
cmp
inc
push
pushf
div
in
enter
sub
pusha
inc
loopne
sub
and
and
mov
loop
pop
xor
out
jg
mov
push
and
and
sbb
imul
push
mov
dec
xchg
mov
add
adc
rolb
callw
das
ret
rolb
mov
mov
test
out
icebp
lods
and
test
test
and
test
sbb
imul
cmpb
pop
cltd
adc
cmpb
mov
jp
push
loopne
enter
cld
shrl
jo
pusha
mov
mov
pop
xlat
divb
push
xor
pop
loopne
sbb
loopne
shll
int3
fdivp
ret
pop
mov
push
scas
pusha
mov
inc
movb
stos
and
pop
xchg
ret
cwtl
xchg
clc
pushf
or
ficomps
sbb
inc
rolb
stos
adc
xor
push
aad
mov
mov
push
mov
pusha
inc
dec
cmp
add
and
xchg
ret
adc
sti
fs
rol
mov
and
ljmp
aad
lea
addr16
movsb
shlb
mov
sub
push
cmp
addb
xor
mov
int3
loopne
jae
mov
and
loopne
pop
stos
inc
inc
out
loope
loopne
pop
add
cmpsb
and
lahf
movsl
jge
or
out
jp
mov
incb
jl
rcl
icebp
out
pop
xchg
mov
mov
and
mov
inc
sbb
or
mov
outsb
mov
loopne
rorl
inc
rcrl
pop
andb
and
sbb
xchg
in
ds
sub
pop
loope
mov
cmp
shlb
and
mov
call
xchg
mov
xlat
xchg
arpl
ss
mov
pop
sbb
rolb
andb
dec
cmpsb
mov
repnz
mov
arpl
jecxz
jecxz
mov
xor
inc
cmp
in
xchg
xchg
cli
mov
aam
jle
lret
push
xor
inc
andb
add
jge
mov
pusha
sub
cltd
jecxz
push
jmp
adc
cs
loopne
adc
fcmovb
stos
add
loopne
dec
jo
in
shll
and
ret
add
les
mov
pusha
repnz
jmp
add
shlb
add
loopne
fmuls
mov
xorb
fisubl
loopne
dec
pushf
adc
inc
loope
mov
adcb
mov
lcall
pusha
add
dec
lock
xlat
sbb
mov
mov
shll
andb
inc
or
aaa
pop
sbb
mov
lret
inc
arpl
pop
divb
movsb
loopne
xchg
mov
sub
dec
jge
movsl
das
mov
loopne
js
rcpps
loopne
xchg
aam
pusha
sub
dec
popa
outsl
jecxz
add
pusha
add
mov
add
test
and
mov
mov
inc
subb
popa
test
lret
pusha
dec
xor
xchg
jp
lret
out
out
jns
loopne
shrb
aad
pusha
inc
inc
testb
mov
mov
mov
ja
rol
mov
xchg
int
arpl
adc
add
mov
fiadds
add
sarl
loopne
mov
fs
loopne
scas
mov
pop
jno
fwait
imul
xlat
ljmp
sub
mov
and
inc
movsl
daa
daa
lea
add
andb
cwtl
sub
cvtdq2ps
sbb
push
cmp
adc
rolb
cmpsb
mov
scas
add
jae
int3
lcall
push
mov
inc
add
loopne
dec
push
jg
ja
hlt
fs
sub
rorb
inc
pushf
inc
add
ljmp
lods
addb
sub
loopne
xchg
cmp
push
std
jne
or
sbb
nop
int3
out
loope
pop
inc
mov
and
and
fwait
pop
or
pop
les
cmp
xor
js
enter
aam
cmp
pop
popa
mov
stc
mov
push
mov
leave
xchg
outsb
lods
mov
adc
xchg
add
jo
int3
outsl
add
jecxz
shll
out
call
mov
test
inc
inc
sbb
pop
stos
sub
add
push
adc
cmpsb
add
sub
add
sbb
inc
loopne
vprotb
loopne
outsl
shrb
push
add
cmpsb
and
bound
in
arpl
addb
and
push
icebp
lds
push
les
and
sub
and
mov
int
add
in
push
adc
movsb
mov
add
movsb
mov
inc
sbb
shl
sub
addb
or
addb
les
pop
in
imul
lock
stos
push
stos
pop
fistpl
mov
xor
rcl
stos
pusha
mov
and
leave
dec
and
push
xor
enter
pop
xor
mov
add
mov
push
repz
sub
shlb
and
xorl
pop
sbb
andb
or
addb
fadds
push
jno
loop
aad
sbb
push
mov
xor
or
mov
out
lahf
mov
addb
pushf
sbb
xchg
loopne
push
aad
cmc
std
add
jl
and
dec
xor
popa
mov
shl
shlb
dec
sub
xorb
or
inc
mov
mov
mov
lcall
push
inc
jecxz
jle
or
outsl
ljmp
loopne
pushf
stc
jge
sub
in
addb
test
inc
push
mov
push
into
sahf
fcmovbe
addr16
lret
push
pop
roll
addb
mov
add
pusha
addb
aad
shr
push
add
ret
sub
pusha
xorb
inc
or
sbb
test
ljmp
scas
loopne
sbb
daa
xchg
and
pop
gs
jns
mov
sti
or
or
inc
mov
jge
bound
loopne
mov
pop
add
and
jmp
xor
xchg
fistpll
addr16
test
pushf
jns
lock
sub
mov
bound
and
dec
cmpsb
pusha
xorb
dec
lahf
lock
pop
or
mov
adc
call
cmpsl
cmpsb
loopne
mov
push
sub
loop
push
mov
push
shrb
mov
mov
xchg
xchg
call
mov
shlb
mov
out
jmp
add
or
and
ds
dec
push
jb
sub
adc
jo
in
sbb
sbb
shlb
loopne,pn
data16
cltd
cli
mov
iret
jmp
shl
enter
stc
mov
pusha
loopne
jns
fdivrs
loopne
cmp
lds
loopne
cli
or
mov
pop
jle
mov
fdivrs
adc
mov
jg
push
sub
xorb
cmp
loopne
sub
adc
add
loopne
xchg
jo
test
rorb
insl
incb
inc
mov
mov
push
inc
add
pusha
mov
andb
loopne
jnp
loopne
outsb
movsb
shlb
movsl
push
push
add
inc
cmp
sub
rol
dec
in
dec
xchg
fnstenv
imul
xchg
mov
cli
xchg
arpl
mov
mov
ljmp
cwtl
repnz
pusha
xor
arpl
andb
negl
outsb
push
jl
stos
mov
addr16
mov
inc
push
mov
and
mov
mov
loopne
and
mov
inc
mulb
lret
lods
leave
imul
aas
cmpsb
and
out
sahf
xor
stc
xchg
cmc
notl
xorl
cmpsb
add
outsb
inc
push
xchg
filds
loopne
out
aas
pop
inc
sti
push
fmuls
push
iret
mov
mov
mov
cmc
ret
shl
mov
pop
jae
mov
dec
or
pusha
jp
adc
or
loopne
sbb
pop
jg
xor
loopne
bnd
mov
repnz
imul
sahf
scas
loopne
insl
ja
fisubrl
insl
out
jg
lock
lock
inc
dec
jo
pop
mov
loopne
cld
sbbl
sti
mov
jp
andb
fisubs
loopne
sbb
dec
shl
push
stc
cmp
mov
lock
rcr
and
jns
sub
loopne
mov
sub
shl
fidivrs
cmpsb
loopne
xchg
fistpll
leave
fnstsw
mov
add
pusha
cmc
jmp
and
icebp
shl
outsb
pop
fwait
mov
dec
lock
pop
andb
negb
addr16
or
jo
or
ror
add
dec
xor
adcl
test
mov
stos
rol
test
fbld
imul
and
repnz
pop
mov
inc
mov
adc
lret
rcl
lea
cmpsb
loopne
jecxz
mov
ret
stc
popf
mov
int3
xor
incl
mov
out
lahf
mov
pop
cmp
mov
fs
push
je
sub
dec
fbstp
sahf
sbb
je
rcl
gs
sbb
cwtl
pop
xchg
loope
xor
mov
mov
jecxz
pop
jg
mov
out
mov
mov
faddl
loopne
or
outsl
inc
and
ret
addb
push
clc
movsb
add
xchg
cmpb
mov
mov
out
das
adc
inc
mov
inc
inc
pusha
hlt
dec
scas
xor
ljmp
push
loopne
ret
insb
dec
in
hlt
jnp
cli
repnz
jge
jp
jns
mov
repz
sub
pop
pop
push
fisubl
shlb
testb
bound
pop
jmp
and
movsb
rolb
fdivrs
mov
fcomip
jg
bound
stc
inc
pop
mov
mov
sarb
cmpsb
add
enter
insb
dec
mov
iret
and
mov
das
sub
loop
stos
add
andb
pusha
rcr
cmpsb
inc
inc
pop
test
sub
add
pusha
andb
int
xchg
addr16
rol
mov
fcomp
mov
fwait
pop
xchg
lock
mov
loopne
rolb
mov
pusha
cmp
and
mov
mov
rcrl
or
daa
pop
hlt
mov
movsb
pusha
loopne
add
fsubrl
push
and
adc
in
std
or
xchg
ret
adc
xor
rclb
out
add
push
dec
mov
mov
jae
xchg
loopne
inc
sbb
mov
and
outsb
std
ja
pop
jo
mov
xchg
lods
mov
loopne
inc
xchg
andb
xlat
pop
mov
mov
mov
pop
mov
fldcw
movsl
cmc
jmp
cmp
cld
pop
dec
push
in
rcll
mov
test
loopne
mov
stc
push
inc
orb
mov
sbb
xchg
and
pusha
xchg
xor
shl
cld
jecxz
cld
mov
and
push
or
mov
test
jp
dec
pop
cs
loopne
and
add
fs
ret
jnp
shlb
jb
jnp
cmp
xlat
iret
scas
insl
imul
lock
dec
xchg
daa
push
inc
popf
inc
sahf
push
xchg
mov
and
add
mov
jle
mov
pop
ds
scas
mov
and
jg
in
mov
xchg
das
sbb
mov
or
jle
addb
dec
pushl
int3
xchg
outsb
push
xlat
scas
xchg
fsubrp
andb
xor
mov
loopne
je
xlat
cmp
jecxz
xchg
nop
xchg
ja
and
and
and
fs
mov
push
dec
ljmp
mov
add
add
lods
mov
jp
fnstsw
sub
mov
jl
inc
icebp
mov
iret
pop
insl
std
xor
out
mov
rcr
in
jo
inc
adc
jl
pop
push
es
lret
jns
dec
mov
xchg
lods
add
pusha
jg
stos
loopne
push
rolb
pop
mov
rolb
int
inc
mov
add
inc
mov
dec
jbe
and
add
sbb
aas
and
test
sarb
and
and
and
loopne
and
loopne
dec
mov
movsl
jbe
xadd
and
data16
ret
cwtl
test
sub
daa
mov
fstps
loopne
js
cli
jnp
mov
sub
out
int
cmp
add
xchg
jmp
add
inc
or
dec
or
mov
push
pusha
add
jne
xor
add
loopne
sub
lar
add
add
fcoml
fs
inc
mov
loopne
xchg
inc
jecxz
andb
insb
popf
add
loopne
add
inc
and
loopne
mov
loop
and
addr16
push
and
add
inc
pusha
adc
push
pop
pushf
xor
sbb
in
test
xor
andb
decl
into
or
mov
out
iret
cmpsb
shlb
jbe
xor
mov
dec
stc
int
pusha
subb
mov
mov
movsb
rol
movsb
and
jne
inc
add
movsl
in
mov
cmpsl
stc
mov
mov
repnz
test
cmp
repnz
leave
sbb
and
and
lret
sbb
sarb
mov
repz
push
mov
call
add
adc
pusha
and
sub
bound
mov
xor
and
cmp
push
add
push
and
loopne
or
into
cmpsb
rolb
addb
fcmovb
test
loopne
shr
sub
aad
mov
jno
scas
aad
out
dec
or
subb
cmpsb
mov
mov
lret
or
loopne
in
stc
mov
pusha
mov
xorb
and
inc
int
int3
pop
sub
test
and
inc
call
incl
mov
insb
ja
hlt
aas
adc
ja
pop
test
subb
repnz
sbb
testb
push
jnp
divl
mov
jnp
mov
inc
stos
data16
push
add
inc
subb
shl
pop
mov
lods
sbb
cmp
jne
mov
test
idiv
jbe
lret
scas
rolb
xchg
add
arpl
and
aad
insb
insl
jle
lock
mov
jl
mov
loopne
push
aas
sub
xor
and
and
outsl
pop
jns
push
lods
add
shll
sub
add
fst
outsl
scas
cmpsl
movsb
pusha
add
addb
xchg
add
fstps
or
aaa
pop
test
rcrb
pusha
cmpb
out
jne
or
loopne
xchg
ret
mov
pop
add
xchg
inc
inc
push
xchg
jmp
loop
mov
imul
xor
imul
jg
mov
sbb
stos
andb
aam
rorb
adc
shl
adc
jl
push
or
add
and
mov
or
outsb
popa
and
movsb
rolb
jo,pt
ret
xor
es
cmp
lods
mov
dec
ja
ljmp
dec
bound
pop
bound
andb
hlt
stc
sbb
push
loopne
insb
insb
daa
and
in
xchg
xchg
cmp
clc
lods
add
andb
and
and
in
and
xor
push
lock
fisttpll
notl
dec
jae
pusha
popa
inc
mov
add
and
ret
rolb
jnp
lret
addb
sub
add
mov
jns
mov
sbb
xchg
cmp
inc
mov
roll
ret
inc
xor
or
fidivrs
stos
mov
pop
or
loopne
pushf
xor
scas
lds
ss
sub
xchg
idivb
int3
push
ja
test
ret
lret
repz
sbb
call
inc
add
inc
lods
rol
loopne
push
pop
xlat
insb
add
pusha
mov
shrb
hlt
outsb
enter
mov
cmpsb
andb
mov
sbb
add
ja
mov
addb
das
ja
pusha
out
cmp
aaa
loopne
out
les
enter
xchg
lds
inc
sbb
sub
mov
and
and
sarl
lock
jnp
xchg
dec
ja
int3
data16
dec
mov
adc
cmp
dec
push
push
shlb
inc
iret
xchg
and
pop
push
cmc
shrl
and
sti
mov
inc
inc
adc
mov
mov
pop
push
aas
sbb
in
mov
into
pop
mov
sub
inc
in
mov
push
jecxz
fs
iret
aaa
test
and
xchg
and
andb
mov
stos
rol
jp
les
mov
loopne
mov
inc
push
cmp
ficoml
data16
andb
inc
mov
push
dec
call
jo
pushf
sbb
sub
inc
dec
xlat
pop
mov
add
add
jecxz
aaa
and
mov
pop
bound
fcomi
push
and
jecxz
icebp
xchg
jae
mov
inc
mov
add
pop
dec
fsubrl
add
lahf
xor
add
lahf
stc
pop
es
inc
push
mov
popa
hlt
and
test
jns
push
in
inc
test
and
sbb
sub
or
dec
das
aaa
fbstp
lret
stos
inc
xor
jp
sbb
lret
sbb
add
clc
inc
pop
mov
cmp
stos
sub
fmul
mov
incb
js
mov
cmp
xchg
add
mov
inc
mov
icebp
push
scas
and
adc
jnp
pop
xchg
cmp
or
fadds
and
xchg
push
bound
lret
bound
pushf
or
mov
std
push
xor
clc
mov
nop
push
out
jge
push
cmp
pusha
mov
andb
stos
loopne
lods
inc
orb
add
jnp
push
mov
loopne
mov
inc
push
push
ss
adc
jns
and
pop
cmc
icebp
scas
repz
xor
and
or
loopne
add
or
pusha
mov
shrb
daa
add
inc
mov
aad
push
mov
ljmp
insl
popa
ss
pop
out
outsb
push
daa
xchg
cmp
out
dec
rcll
push
daa
mov
stc
xor
imul
cwtl
mov
pop
fdivrs
sbb
andb
cs
adc
inc
pop
mov
xchg
pusha
loop
xlat
leave
imul
mov
mov
ficoml
xchg
and
mov
add
imul
mov
mov
imul
fwait
or
and
hlt
shlb
mov
scas
xchg
push
lods
lahf
mov
pusha
test
gs
enter
loopne
xchg
jmp
int
jo
jg
addr16
decl
mov
adc
add
add
loopne
inc
and
and
inc
cmc
push
sub
repz
lds
cmp
gs
add
pop
mov
test
cs
inc
cmp
test
mov
sarb
and
into
fcoml
cs
loopne
cli
jmp
sub
and
sbb
inc
ss
into
dec
adc
add
pusha
loope
add
jae
inc
mov
loopne
ret
pusha
arpl
mov
jne
pop
mov
cmc
mov
add
ret
test
pusha
dec
fnsave
andb
loop
leave
inc
std
pop
mov
test
jne
and
add
jl
dec
out
loop
jb
pusha
add
cmpsb
loopne
or
rolb
or
pusha
addl
cmp
incb
test
pusha
loopne
pusha
lock
jp
shlb
mov
aaa
js
push
loopne
push
popa
pop
sbb
add
cmp
pusha
sti
gs
scas
loopne
out
bound
pusha
loopne
and
and
sbb
outsb
idiv
xchg
sbb
or
xchg
shlb
jnp
jg
xlat
aaa
ljmp
pop
mov
mov
mov
js
pop
mov
and
pusha
mov
dec
add
je
push
cmp
test
and
popl
pusha
mov
neg
lret
adc
xchg
inc
mov
shl
popf
push
pop
dec
pop
nop
push
repnz
dec
xor
jae
int3
mov
or
call
xchg
adc
cli
mov
xor
sbb
pusha
lcall
aaa
hlt
loopne
push
inc
andb
loopne
sub
lret
xchg
add
mov
push
popf
mov
into
stc
or
loopne
aas
mov
push
repnz
xchg
jns
outsl
movsb
and
iret
mov
divb
or
mov
addb
dec
std
xchg
xchg
jle
adc
pusha
add
imul
add
jo
std
sahf
adc
inc
pusha
pushf
jmp
add
movsl
int
pop
xchg
test
test
add
mov
jo
sbb
mov
clc
hlt
and
das
and
and
movl
add
cmp
cmp
gs
cltd
jb
inc
inc
dec
dec
mov
nop
mov
pusha
dec
aam
adc
mov
in
or
cmp
cmpsb
rolb
mov
scas
and
xor
sub
and
push
inc
loopne
adc
int
clc
mov
inc
xchg
cmp
pop
mov
dec
aaa
xchg
popf
and
ror
and
mov
adcb
arpl
jns
jmp
pusha
add
pop
cmc
insl
add
inc
inc
stos
test
xor
jmp
xor
leave
mov
add
cmpb
inc
cmp
mov
xchg
repz
and
pop
adc
jmp
dec
into
js
mov
sub
adc
and
push
cltd
sbb
imul
add
pusha
pop
or
or
jnp
and
lea
adc
fisttpll
push
mov
mov
mov
sbb
pop
int
and
pushf
in
jg
or
test
mov
jnp
add
rolb
and
inc
test
pushf
sub
pusha
scas
mov
loop
push
mov
sbbb
inc
subl
mov
cmp
push
ret
xor
sbb
xor
jl
enter
pop
cmpsl
test
and
mov
sbb
inc
mov
jns
push
add
adc
add
pusha
les
adc
outsl
mov
and
inc
add
test
pusha
decb
sbb
fcoml
inc
ja
sti
xor
fs
mov
es
mov
sub
push
in
mov
pusha
mov
loopne
adc
inc
add
rcrl
into
movb
add
cmp
mov
push
push
mov
shlb
inc
andb
popa
test
aad
dec
in
push
sbb
inc
xorl
inc
sub
inc
mov
inc
orb
mov
xor
aaa
shll
and
fildll
mov
fsubr
sub
and
loopne
dec
sbb
pop
shrb
sarb
push
add
fldenv
mov
push
repnz
mov
sti
cs
mov
add
outsb
aaa
lea
pusha
and
rclb
and
and
loop
mov
inc
rclb
outsb
lods
and
pusha
pop
mov
push
out
data16
shrl
mov
add
fsubrl
std
mul
or
add
fidivs
aad
add
and
inc
sub
jp
loopne
lds
pop
fs
add
lcall
int
loopne
push
sti
das
sub
pop
push
mov
lds
cs
and
xorb
rol
int3
mov
addr16
push
jb
notb
and
add
push
inc
pusha
sbb
xchg
push
xlat
mov
push
mov
mov
inc
in
test
shlb
xchg
fucomp
fdivrs
shlb
loopne
xor
push
inc
andb
inc
int
sbb
and
inc
lcall
nop
les
cmp
jno
xchg
ret
imul
pop
out
into
ja
sbb
dec
xchg
sub
xor
xchg
stos
stos
pop
loop
pop
out
xchg
int3
loopne
nop
jae
lock
jp
and
add
pop
int3
es
js
pop
sbb
shlb
add
inc
aaa
mov
adc
fwait
dec
mov
js
and
add
sub
inc
pop
mov
pop
xorl
out
fwait
shlb
cmp
mov
enter
xor
lock
popf
jb
cmpsb
loopne
mov
fwait
call
pop
adc
loopne
pop
test
aad
addr16
loopne,pn
push
stos
andb
pusha
pusha
ret
repz
sbb
pop
lds
and
daa
pop
pop
cwtl
hlt
das
push
cmp
adc
dec
in
stos
pusha
mov
das
js
add
pop
in
inc
xorb
cmp
addb
mov
addb
clc
lcall
push
popa
inc
ds
mov
mov
pusha
mov
mov
popf
or
sbb
addl
fidivs
shlb
mov
data16
pusha
ret
ljmp
or
aad
loopew
lahf
testl
in
adc
mov
fisubl
pusha
push
mov
lock
rcrl
jnp
sub
add
loope
bnd
add
mov
scas
inc
dec
add
mov
loopne
xchg
push
and
mov
sarb
cmpsb
and
xorl
mov
inc
loope
les
jp
push
sub
add
sub
je
pop
dec
call
sub
loopne
shl
and
mov
loopne
xor
fdivl
lea
adc
mov
sbb
pusha
pop
fcomip
push
mov
je
adc
jnp
push
andl
mov
rolb
rcrl
shlb
and
mov
sub
aad
inc
add
xchg
or
fistps
mov
mov
es
out
cmp
sub
pusha
dec
shl
mov
adc
and
pusha
and
mov
cmc
out
dec
dec
icebp
cmp
stos
pusha
add
out
pusha
and
pusha
mov
stos
andb
jb
mov
shll
push
imul
pop
je
cld
add
cmpsb
and
xor
xor
jmp
xor
push
xor
xchg
jbe
ja
cmp
fldenv
loopne
add
loopne
push
push
sbb
xchg
scas
pusha
inc
xor
push
addb
xchg
mov
or
pusha
add
mov
scas
inc
xorb
addb
adc
push
sbb
adc
cmc
aaa
jb
pusha
mov
pusha
out
sbb
jae
cmp
jo
push
dec
outsb
gs
push
xor
je
dec
add
xchg
and
mov
mov
xor
jne
rol
insl
enter
in
and
ss
popf
cmp
mov
cli
jne
std
jo
mov
and
movsb
mov
add
andb
shll
pusha
xor
jne
outsl
inc
loop
sbb
hlt
out
pop
loope,pt
add
adc
iret
sub
mov
add
out
inc
cli
xor
xorl
inc
aam
mov
mov
mov
xor
mov
out
mov
ljmp
mov
rolb
mov
cmc
in
rclb
inc
fadds
push
pop
icebp
dec
leave
push
shlb
shlb
push
loopne
pop
sarl
daa
mov
popf
mov
mov
andb
pusha
xor
out
xchg
pop
push
pusha
inc
fisttps
pop
push
addb
loopne
inc
sti
andb
aam
jg
xor
adc
add
and
inc
and
addb
add
mov
testl
inc
dec
xor
sbb
add
and
and
pushf
sbb
sahf
outsl
call
mov
lret
push
mov
mov
jle
xor
fwait
mov
fld
sti
incb
addb
movd
push
pop
aad
loopne
cmc
scas
mov
and
xor
xor
jge
push
ret
xchg
fistpll
imul
fmull
jl
iret
pop
je
and
loope
divb
cmp
fsubrs
mov
cwtl
cmc
out
mov
adc
aad
add
call
shlb
inc
push
pusha
xor
push
in
loopne
add
and
xor
data16
test
sub
add
adc
rorl
add
adc
pop
add
and
push
and
pushf
pushf
stos
inc
sar
dec
lret
mov
rolb
fwait
in
sub
inc
faddl
loop
mov
sub
mov
mov
fiaddl
and
and
lds
add
add
xchg
dec
mov
push
mov
mov
clc
movsb
inc
mov
int3
fstpl
xor
add
adc
call
imul
andb
es
ljmp
in
ret
rclb
xor
hlt
sub
sbb
and
loopne
lock
sub
jno
xchg
or
mov
loopne
loopne
push
fdivl
shlb
aas
and
and
inc
mov
cwtl
and
rclb
mov
sti
clc
mov
add
mov
add
add
es
loopne
lret
in
jp
lods
add
cmpsb
add
aad
inc
inc
mov
add
add
sub
pusha
adc
cmp
dec
add
mov
mov
inc
mov
adc
jl
pop
and
add
cmp
lret
adc
cmp
mov
push
in
leave
outsl
scas
repnz
and
in
pushf
cmpsb
pusha
orb
pop
test
rcrb
pusha
dec
sbb
pop
ja
add
cs
loopne
insb
sub
and
mov
and
sub
loopne
add
sbb
mov
pusha
inc
xor
mov
mov
xchg
ficoms
cmp
xchg
inc
cmp
call
xchg
cli
scas
add
lret
mov
pop
sahf
in
add
hlt
les
mov
lret
addb
sub
dec
enter
enter
xchg
add
xchg
jb
mov
loopne
stos
ljmp
sbb
add
adc
insl
and
jecxz
xchg
jb
mov
lock
jl
dec
adc
scas
add
xchg
stos
inc
shrb
mov
pusha
inc
out
and
xor
cmp
loopne
xchg
cmp
and
sub
push
xor
cltd
pop
insl
push
repnz
inc
add
ret
inc
loop
sub
shlb
movsl
or
rcrb
scas
in
mov
lods
movsl
add
cmp
xor
pusha
es
and
and
fcmovne
push
out
shlb
or
inc
les
jo
leave
mov
inc
fcmove
rolb
push
jno
aas
pop
arpl
jle
pop
inc
cmpsb
pusha
subb
mov
icebp
lea
and
jmp
and
aas
lret
xchg
rolb
mov
sbb
add
add
adc
and
loopne
fdivr
out
add
push
loopne
sbb
cmpsl
imul
push
add
xchg
pusha
jp
loopne
jle
sub
mov
into
xchg
out
and
pop
aas
push
movsb
loopne
xor
mov
out
gs
das
lds
pop
call
adc
rorb
in
into
dec
bound
cmpsb
inc
and
jmp
mov
fmul
andb
mov
adc
mov
pop
xchg
dec
xchg
cltd
mov
mov
jns
lret
test
pusha
and
pop
repnz
mov
loopne
stc
rcll
and
fwait
in
ret
and
dec
movsb
add
test
outsb
and
or
cmp
shlb
repnz
pop
out
rolb
arpl
mov
loope
xor
sbb
mov
das
lods
xchg
cmp
mov
ljmp
orb
or
sbb
push
aam
add
inc
xchg
jle
dec
xchg
mov
pusha
mov
pop
mov
adc
leave
xchg
jns
adc
js
das
int3
mov
rol
les
adc
outsl
add
loope
mov
into
movsb
add
push
add
cmp
mov
mov
shrb
sahf
pushf
mov
pop
pop
sub
cmp
jecxz
mov
cmp
insb
sti
mov
addb
and
pusha
enter
xchg
repnz
cmp
jecxz
or
cmpb
int3
push
andb
cmp
ljmp
les
cmp
adc
loopne
add
and
lds
out
std
int
and
xsave
loopne
outsl
jno
cmp
lahf
and
pusha
push
orl
dec
sti
adc
ret
sbb
adc
xchg
add
mov
ret
sbb
test
scas
pop
out
jns
dec
mov
lods
inc
inc
xchg
addb
jno
push
inc
push
jnp
mov
xchg
xchg
rclb
shlb
adc
inc
cs
cwtl
sbb
cmp
push
add
mov
push
add
pop
mov
loopne
xchg
lds
xchg
push
insb
inc
mov
or
int
mov
out
cmp
mov
xor
in
addb
or
sarb
mov
pusha
adc
or
stos
pusha
andb
inc
mov
jnp
sub
lock
inc
orb
stos
subl
sbb
add
sbb
popf
lret
mov
adc
test
mov
jp
pop
jae
sub
mov
pop
hlt
cpuid
inc
pusha
and
std
add
mov
pusha
xor
aas
mov
jae
push
dec
leave
rcll
addl
mov
dec
sahf
dec
fisubl
fsubrs
loopne
adc
insb
sbb
or
inc
inc
xor
repz
cmpsl
jmp
std
inc
mov
rolb
loopne
inc
cmp
sub
fwait
inc
cltd
push
mov
or
xor
loopne
leave
and
mov
pop
int3
jae
and
pusha
xor
addb
jmp
and
jns
and
inc
push
jp
shlb
leave
jbe
fdivrl
inc
loopne
jb
dec
xchg
adc
xchg
cmpsb
mov
xchg
ret
ja
push
jne
fdivrl
test
add
fisttpl
ret
add
mov
and
and
cmpsl
out
pop
stos
push
add
pop
cli
and
add
push
lgs
xchg
adc
arpl
jge
pop
push
xchg
repnz
jge
jb
dec
jl
pusha
inc
lods
and
ss
outsl
andb
mov
out
ljmp
jmp
loop
int3
ljmp
popf
das
dec
test
and
loop
inc
cmp
add
and
mov
sahf
dec
fnstcw
cmc
sarl
loopne
xchg
jne
or
mov
add
add
jge
adc
fwait
or
negl
jp
out
int
out
sbb
out
push
dec
orl
arpl
mov
mov
in
test
sbb
test
pusha
and
gs
mov
add
and
and
fldt
imul
inc
add
add
add
fidivl
lea
out
xchg
add
rcrb
arpl
icebp
loop
push
shl
shlb
xchg
lods
out
adc
xor
dec
ret
ds
xor
roll
loopne
addr16
xlat
cmpsl
mov
loope
xor
inc
sub
inc
inc
lock
xchg
lahf
pop
std
aad
add
push
pop
rclb
push
arpl
ss
mov
xchg
inc
lret
adc
repnz
imulb
mov
cmp
testb
les
shlb
mov
repnz
xor
popa
or
xchg
xchg
cmpsb
andb
jl
add
add
jp
das
inc
mov
jb
imul
loopne
cmp
and
xchg
gs
mov
in
mov
je
pushl
loopne
mov
add
addb
iret
mov
pusha
adc
fstl
sbb
mov
cmp
mov
stos
shl
inc
add
rcr
push
insl
dec
rcrb
lds
shll
mov
mov
mov
mov
inc
arpl
push
mov
inc
push
jecxz
jmp
xchg
sub
out
mov
aaa
inc
add
xchg
mov
xlat
ret
std
shr
cmp
fbstp
cld
sub
pusha
inc
pop
xchg
pop
pop
pop
sub
mov
jns
add
pusha
xchg
in
dec
dec
gs
pusha
loopne
adc
cmp
cmpsl
iret
inc
bound
gs
addr16
shrl
aam
mov
loopne
fcompl
out
mov
insb
sub
adc
fistpll
shl
pop
sbb
call
jmp
outsb
pop
dec
add
sahf
mov
push
add
and
ret
adc
aaa
push
xchg
call
rolb
adc
addr16
fs
pusha
mov
loopne
ljmp
xor
mov
adc
fistps
push
mov
outsb
mov
scas
andb
push
pusha
imul
stos
mov
jecxz
mov
mov
mov
adc
dec
sbb
xchg
add
inc
ljmp
ficompl
and
in
and
mov
addb
mov
mov
xchg
loopne
rolb
lds
mov
add
mov
sarl
hlt
div
stos
flds
loopne
mov
pop
cmp
and
dec
cmpsb
loopne
lods
cmp
inc
pusha
inc
nop
mov
loopne
sbb
rolb
shlb
mov
and
mov
iret
push
shlb
sub
loopne
addr16
pop
movsl
xchg
mov
cmp
loopne
arpl
xor
hlt
addb
push
dec
dec
jl
repz
pusha
adc
adc
lock
and
stos
xchg
sub
loope
mov
shlb
addb
lahf
inc
mov
mov
adc
and
imul
pop
cmpsl
inc
inc
pop
jmp
mov
cmp
pop
sbb
stc
vpmulhuw
or
idivl
rolb
inc
pop
xchg
enter
mov
mov
fldt
test
push
movsb
inc
shlb
fdivrl
jecxz
and
rolb
adc
pusha
addr16
sbb
lds
xor
inc
int
sub
dec
jnp
pop
inc
hlt
jge
scas
fidivl
or
fisttpll
shl
push
mov
loopne
lret
lea
mov
rcll
and
hlt
jb
fbld
shl
cwtl
imul
fdivrs
pushf
add
int
add
sbb
or
loopne
popa
jecxz
pusha
mov
out
inc
adc
jp
lcall
inc
mov
scas
ljmp
lock
in
scas
add
xchg
cmp
push
loopne
cld
xor
jle
inc
loopne
xchg
in
ss
pop
sbb
ja
inc
inc
sbb
bound
movsb
loopne
outsl
pusha
and
and
xchg
pinsrw
lahf
loopne
pusha
inc
faddl
out
jge
or
stos
cmp
jb
shlb
in
sub
pmuludq
mov
adcb
inc
and
and
in
xor
pushf
fwait
pop
fld
xchg
xchg
sbb
cld
ret
mov
pop
fidivs
clc
xchg
sahf
inc
or
dec
mov
and
inc
add
test
lods
addb
and
adc
rolb
inc
pusha
cmp
or
and
sbb
shl
inc
pusha
sbb
sarl
stos
pop
add
pop
clc
test
inc
data16
lret
aas
mov
xchg
loope
jmp
in
scas
mov
inc
add
pop
daa
xchg
cmp
and
mov
cwtl
or
loopne
xchg
inc
dec
xchg
in
mov
mov
pusha
pop
mov
pusha
and
or
mov
pcmpeqd
push
andb
mov
sarb
mov
movsb
add
ja
jne
mov
std
repz
cmp
sbb
or
pusha
ljmp
adc
call
inc
mov
and
inc
mov
jo
inc
addb
and
xchg
lcall
mov
jb
xor
test
and
insb
cli
push
fadds
mov
fimuls
cld
pop
shll
cmp
sti
cmp
adc
cmp
xchg
scas
test
cmp
add
push
mov
jns
shlb
int
and
dec
stos
and
movsl
call
adc
loopne
add
jp
popf
dec
lahf
mov
sbb
push
pushf
jo
loop
add
mov
jl
xchg
shl
jl
pop
add
inc
or
stos
mov
mov
dec
pop
out
add
clc
jl
cmp
pusha
daa
les
mov
lahf
jo
nop
add
subb
xor
js
rorl
xchg
scas
jmp
int3
sar
push
mov
xor
shlb
add
int3
scas
jp
and
pusha
shlb
cmp
sub
add
dec
jno
inc
loopne
lret
movsb
mov
icebp
add
mov
shlb
pusha
sub
sub
inc
adc
push
pusha
rclb
add
mov
sub
xor
mov
mov
cltd
xlat
sub
scas
addb
jb
mov
lock
adc
inc
pusha
fsubrs
adc
inc
aam
and
pusha
xchg
stos
addl
in
loopne
ss
and
and
jbe
lods
inc
loopne
enter
arpl
shlb
inc
inc
inc
jp
shll
sbb
mov
pop
lods
add
js
imul
adc
and
pusha
andb
pop
jbe
xor
adc
cs
add
int
call
and
cwtl
addl
mov
xor
pop
lods
inc
cmpb
es
pop
iret
andl
add
mov
pusha
inc
lahf
pop
push
paddusb
mov
call
loopne
sbb
ret
loope
add
pusha
inc
call
xorb
outsb
sub
add
sbb
push
dec
adc
pop
imul
lock
pusha
inc
lret
jmp
xor
popf
lea
xchg
add
orb
inc
pusha
popf
mov
sub
inc
pusha
sbb
jb
cmp
and
loopne
icebp
pop
push
and
pop
adc
cmpsl
mov
and
push
stc
cmp
add
add
testl
mov
ja
and
xchg
andl
clc
fisttps
ja
outsl
rclb
roll
add
or
add
xor
mov
push
sub
and
xor
and
fstpl
out
pop
dec
and
and
sub
pusha
and
rcrb
test
cmp
jns
sbb
mov
in
xchg
pop
ret
add
cli
cmpsl
sbbl
lods
pusha
mov
add
popf
pop
mov
push
dec
xor
test
push
daa
xchg
pop
mov
push
arpl
xchg
mov
in
mov
sub
sarb
xlat
pop
ljmp
loopne
push
lds
dec
lahf
sub
loopne
lock
jmp
or
out
rcr
jne
cmp
xchg
loop
inc
loopne
addr16
xor
inc
shlb
test
add
imul
jo
mov
mov
sbbl
xchg
pop
push
rcrb
mov
jl
jmp
imull
test
pusha
leave
or
add
fstl
andb
and
shlb
jo
sbb
mov
fwait
mov
mov
dec
or
pop
repz
mul
popf
and
pusha
adc
call
cmp
fbld
xchg
mov
aaa
int3
notl
push
and
mov
in
stc
lods
shlb
je
shlb
and
cmp
pop
scas
add
pusha
es
cmpb
daa
mov
add
rorb
xor
inc
mov
fisttpll
jnp
jge
jne
daa
stc
cli
pop
movsl
inc
divl
shl
rorl
hlt
fs
pop
call
daa
mov
mov
push
loopne
sub
and
aad
shrl
ja
in
sbb
pop
xchg
fisubrs
rol
fs
adc
fldt
lods
mov
in
insb
fs
xlat
jb
jno
scas
out
lret
push
and
inc
cli
repnz
int
push
enter
cwtl
add
or
test
and
shr
inc
loopne
add
pusha
dec
xchg
lock
xchg
ja
and
mov
push
ds
xor
inc
js
add
enter
mov
sbb
cmpsb
rol
std
rorb
popf
fiadds
mov
imul
pusha
jae
into
lds
rcr
loope
push
push
mov
decb
inc
sub
pusha
xchg
lret
xchg
ficomps
add
pusha
and
movsb
loopne
jno
ror
xor
in
dec
and
xchg
inc
xlat
xor
push
rol
mov
and
mov
xorb
mov
ds
stc
inc
xor
xchg
fidivs
push
andb
add
mov
fwait
push
in
sub
sarb
sub
in
movsb
shlb
lock
pusha
mov
into
fucom
push
jbe
pop
int
test
pusha
je
mov
movsl
or
loopne
fldt
loopne
push
dec
insb
pop
jb
adc
dec
xchg
lahf
nop
aam
les
loope
add
and
inc
inc
test
shl
mov
inc
addl
mov
aaa
jo
mov
push
mov
js
push
mov
push
pop
or
mov
stos
loopne
fsts
test
loopne
mov
dec
icebp
xlat
or
xorb
ljmp
dec
push
in
arpl
gs
cmp
pop
js
add
sbb
push
sbb
andl
jns
push
jnp
enter
pop
adc
addb
add
push
loopne
mov
adc
loopne
push
jle
mov
xlat
mov
mov
mov
pop
jp
xor
add
cmp
add
mov
xchg
sahf
or
adc
addb
add
subb
rol
xchg
push
jno
loopne
out
pop
dec
addl
mov
fcomi
add
add
insl
pop
lds
out
idiv
addr16
mov
mov
shl
push
stos
push
repnz
pusha
add
leave
fnsave
sarb
xchg
arpl
dec
xor
xchg
dec
xor
andb
test
pusha
xor
adc
icebp
xchg
fnstsw
and
mov
cmp
add
adc
mov
pushf
sbb
inc
ret
dec
sub
mov
rep
loopne
addb
mov
jmp
test
pusha
call
scas
and
es
pusha
sub
push
je
adc
and
addb
xchg
pop
andb
push
sub
add
mov
fsts
pusha
sbb
js
cmc
ja
fcoml
inc
loopne
xchg
and
pusha
pusha
cld
movl
pop
and
in
and
es
jge
andb
lea
negl
out
inc
gs
addb
xor
movsl
ret
mulb
inc
sbbb
imul
push
inc
fsubrp
in
add
roll
jnp
or
mov
sub
and
jmp
pop
cmp
addb
outsl
fnstenv
dec
das
xor
xchg
lods
mov
fisttpll
loopne
hlt
pushf
jae
inc
push
xor
mov
shll
aam
sbbl
addb
ret
push
add
rcrl
aam
cmpsb
mov
and
test
mov
inc
inc
int
icebp
test
and
in
xor
pusha
adc
xchg
pop
stos
bound
divb
stc
push
outsl
sti
outsb
cmp
push
rclb
rcrb
and
enter
add
idiv
lea
in
push
mov
adcb
mov
dec
int
cmpsb
and
cwtl
jbe
loope
inc
mov
pop
cmpsb
pusha
pusha
leave
inc
mov
das
push
mov
ror
arpl
and
stc
mov
movsl
jge
std
cld
sub
scas
mov
lock
jbe
cmp
icebp
sub
inc
fcoms
ds
mov
jle
add
cmp
divl
dec
xor
inc
in
inc
sti
xchg
aad
roll
leave
push
les
inc
xorb
imul
jg
inc
mov
pusha
rcrb
sbb
fsubrp
lods
lea
imul
inc
add
cmpsl
int3
jl
jo
sbb
sbb
jmp
and
jae
jns
inc
jbe
dec
fistpl
pop
rolb
xor
test
das
addb
les
add
and
jne
inc
xchg
lahf
add
pusha
jp
add
pop
push
push
pushf
xchg
and
cmp
mov
mov
mov
mull
pop
loop
scas
outsb
cmp
jge
testb
and
test
in
add
add
inc
add
cltd
cld
in
mov
scas
addb
aas
xor
ja
movsl
xchg
mov
andb
push
and
sbb
int
dec
fsts
mov
sub
loopne
inc
subb
inc
out
xchg
fisubrs
or
pusha
mov
add
xchg
pop
xchg
cli
pop
mov
jl
push
pusha
mov
loope
jne
inc
ljmp
movsb
mov
loopne
sahf
andl
pushf
shlb
ds
mov
sbb
push
das
mov
mov
stos
adc
out
pusha
add
cwtl
sarl
pop
scas
rolb
stc
icebp
jecxz
es
insb
icebp
push
push
mov
and
sub
and
sbb
jle
adc
mov
jmp
or
das
mov
mov
sarl
cmpsb
addb
dec
js
pusha
loopne
les
and
mov
popf
loopne
mov
mov
mov
inc
jge
sub
mov
add
out
lcall
js
add
loopne
cwtl
int3
mov
test
es
adcb
add
jl
ljmp
add
jb
loopne
mov
mov
mov
lahf
out
inc
pop
jp
shlb
es
shrb
loopne
lods
pusha
mov
lods
xchg
in
sti
popf
adc
test
addb
pusha
add
adc
and
mov
pusha
inc
xor
and
ret
mov
pop
inc
int
fwait
movsl
or
aaa
ljmp
adc
sbb
pop
lret
lods
add
mov
adc
pop
cmp
gs
mov
and
rcl
dec
imul
mov
loopne
pusha
and
dec
stos
mov
inc
add
out
adc
mov
lahf
xchg
or
pusha
stc
mov
rcrb
pop
rcr
ja
lds
cltd
imul
sbb
and
je
roll
ja
and
push
xchg
loop
mov
mov
insb
mov
pop
inc
fneni(8087
adc
cmp
stos
addb
add
dec
sub
add
shl
dec
push
dec
movsl
decl
pusha
and
pusha
orb
pusha
mov
or
mov
mov
xchg
jb
mov
fldt
clc
movl
xchg
notb
scas
pusha
sbbb
int3
push
lea
push
stos
fdiv
inc
xchg
insl
nop
loopne
aaa
mov
scas
pusha
pusha
or
popa
push
out
ds
and
xchg
shll
jecxz
push
and
mov
mov
loopne
cld
stos
andb
popa
rol
or
mov
inc
and
aas
outsl
ljmp
sub
mov
repz
push
lcall
rolb
xchg
ja
mov
push
and
mov
xchg
adc
jo
pop
jmp
cmp
call
call
loope
fstpt
and
pusha
fs
and
cmpsl
jle
xor
pop
pop
or
and
shl
mov
out
lods
pop
inc
push
pop
out
dec
lea
and
shlb
andb
sti
and
int
stos
andb
cmpsl
les
call
cmp
je
or
clc
lcall
pop
ss
adc
stos
cs
mov
push
popf
stos
pusha
subb
stc
jecxz
fdivrl
sahf
lock
lahf
out
inc
out
jae
fbstp
mov
mov
shlb
std
mov
push
and
pusha
pop
and
lret
rcl
pop
lods
loope
sti
lock
rcrb
scas
xchg
adc
loopne
jecxz
xor
cmp
pop
mov
mov
mov
nop
mov
scas
mov
inc
mov
adc
das
dec
jecxz
aad
int
xor
dec
call
jp
or
mov
inc
fimull
xchg
out
mov
mov
xlat
mov
in
sub
andb
popf
rcl
sbb
xor
sarl
in
sar
lret
popf
scas
ja
dec
sbb
andb
push
dec
push
loopne
fnstcw
divb
cmpl
sbb
cmc
or
loopne
test
arpl
out
mov
loopne
in
rcrl
pop
ss
out
decl
testl
psubq
fstl
jne
ret
out
pushf
inc
inc
aaa
sub
and
adc
cmp
mov
mov
inc
or
cmp
cmp
pusha
outsb
dec
mov
mov
shlb
push
out
fldcw
push
loope
push
loopne
jmp
adc
ds
fidivrl
frstor
xor
ret
cld
mov
push
fst
and
add
arpl
dec
jle
aad
andb
mov
cmpsl
mov
or
iret
mov
adc
imul
stos
loopne
aaa
arpl
mov
lods
mov
or
loopne
rorl
loopne
push
aad
pop
jecxz
in
add
out
fdivrs
and
js
addb
inc
push
inc
loopne
push
mov
xchg
mov
aaa
add
add
test
add
mov
rorl
and
and
mov
mov
mov
roll
pop
or
aad
pop
mov
mov
orl
sbb
std
mov
loopne
jns
jbe
add
mov
adc
and
in
ss
imul
adc
add
pushf
and
pusha
push
es
pusha
sti
mov
out
arpl
call
sbb
mov
pop
out
fdivl
sub
add
mov
outsl
or
ljmp
loopne
inc
cltd
jmp
out
ja
outsb
bound
repz
sub
loopne
icebp
xor
adc
sbb
jns
into
popa
sarl
pop
icebp
and
cwtl
pop
imul
divl
mov
cmc
nop
dec
mov
insl
aaa
inc
mov
and
push
andb
scas
andb
push
sbb
dec
cld
fdivp
stos
lds
lcall
or
loopne
xchg
push
lahf
mov
sbb
andb
mov
in
mov
inc
nop
mov
inc
sbb
in
mov
cmpsl
mov
inc
add
loopne
lds
mov
mov
movsb
rolb
sbb
repnz
pusha
cmc
data16
cmp
iret
pop
movb
sarb
addb
jle
and
ror
add
sahf
jne
dec
jb
mov
ljmp
mov
inc
push
rcrb
and
and
shrb
bound
or
push
lock
dec
aam
insb
dec
mov
pusha
aam
or
and
sub
add
push
mulb
shl
sbb
sbbl
add
pop
push
enter
and
pop
xchg
pop
adc
cmp
dec
adc
shrl
add
push
add
and
mov
test
rcrb
dec
mov
mov
repnz
stc
fs
mov
pop
mov
iret
mov
int
shlb
cwtl
mov
sbb
loopne
cmpsb
and
lret
test
and
and
inc
xchg
mov
ja
mov
orb
inc
mov
test
dec
pop
out
xor
or
pusha
ja
addr16
loopne
aas
jae
mov
jns
addb
icebp
xchg
cwtl
cld
cmc
or
loopne
imul
add
loope
inc
add
add
inc
imul
pop
cmp
add
andb
enter
push
popa
ret
inc
and
jnp
xorl
fidivrs
cmpsl
push
mov
out
mov
dec
and
adc
pop
push
xchg
dec
out
es
xorb
mov
fsubrl
daa
cld
out
cmp
and
shl
add
xchg
mov
mov
insl
push
cli
loop
pusha
inc
cmp
and
addb
jne
adc
sbb
xchg
pop
add
mov
and
jmp
mov
sub
ret
mov
adcb
shlb
xchg
clc
add
push
rcl
xchg
push
mov
lock
pusha
shl
add
mov
rolb
and
adc
mov
cltd
xor
mov
rolb
arpl
inc
stos
cld
call
sub
and
loopne
fiaddl
sti
jecxz
dec
loop
mov
pop
or
loopne
mov
and
add
data16
test
rorb
testb
cmc
cwtl
decl
add
leave
mov
inc
mov
lods
jb
rolb
mov
xchg
pop
dec
aam
out
shlb
les
mov
cmp
ret
dec
mov
mov
into
sti
testl
andb
inc
inc
movl
icebp
add
or
nop
dec
loope
inc
add
lahf
lea
popf
test
and
out
sti
into
fwait
jnp
mov
add
mov
shll
cmp
xchg
ljmp
xchg
aad
add
lea
adc
ja
int3
mov
loopne
sub
inc
sub
hlt
test
shrb
rolb
shrl
pop
dec
mov
fwait
mov
xchg
gs
jp
repz
mov
and
push
push
fbld
loopne
pusha
fwait
push
inc
inc
jns
and
pusha
rol
mov
rol
fbld
cmpsl
adc
mov
pop
lret
js
sub
cmp
mov
mov
add
icebp
xchg
out
jae
jle
mov
pushf
jge
fs
or
pop
pop
out
aad
je
shll
mov
fsubl
push
shlb
dec
xor
pop
push
push
jp
or
cmpb
outsl
ret
jno
icebp
test
or
andb
int3
dec
pop
sbb
sub
add
xchg
push
mov
mov
mov
inc
mov
sub
and
and
lods
and
and
mov
inc
mov
out
ds
fsub
lret
into
sbb
mov
and
bnd
mov
and
pusha
rclb
scas
aam
pusha
mov
mov
mov
inc
repnz
pusha
loope
iret
xor
cmp
aaa
scas
push
xor
inc
inc
sub
xor
xlat
je
andl
mov
jb
pushf
ret
shll
inc
pusha
xorl
pop
out
lahf
dec
and
inc
rcl
mov
cmp
pop
lds
jp
and
xorb
add
arpl
and
stos
mov
loopne
pop
sti
imul
pop
push
mov
mov
enter
shlb
pusha
adc
add
sahf
mov
add
adc
and
mov
mov
sub
mov
push
pop
das
cld
xor
and
loopne
or
inc
pop
pushf
add
mov
je
cltd
mov
pavgb
adcl
inc
addb
ret
xor
mov
add
jecxz
cmp
leave
cmpsb
inc
pusha
stos
add
mov
jle
push
add
xor
mov
xor
daa
push
fidivrl
adc
lods
mov
subb
jns
jp
sbb
pop
testl
ja
mov
aaa
dec
sub
ffree
jmp
add
shl
add
inc
sti
or
sub
sub
add
loopne
and
inc
lret
xor
rcrb
rol
and
xchg
xchg
ds
mov
pusha
add
fs
scas
pusha
pusha
cltd
or
shlb
and
mov
sbb
js
inc
addl
jle
fdivrl
pusha
orb
inc
push
add
mov
je
clc
xor
jns
add
inc
mov
addb
andl
inc
dec
adc
and
mov
cli
and
aaa
lahf
cld
fs
mulb
pusha
mov
enter
add
stos
addb
add
loopne
xor
test
shr
loopne
mov
add
lock
pusha
mov
xchg
filds
cmp
aas
and
cmp
outsl
jne
pop
hlt
adc
aad
stc
pop
mov
and
and
mov
pop
cmpsl
addb
rolb
addb
push
pusha
and
test
pusha
push
ss
dec
mov
add
stos
push
int
or
add
mov
dec
jae
xchg
push
pop
outsl
adc
out
mov
imul
addb
test
pop
push
push
xor
and
shrb
mov
in
jbe
insb
fsubr
pop
pop
cmp
dec
in
rcll
pop
or
sarb
and
or
rolb
addr16
test
loopne
dec
sahf
es
loopne
pop
fwait
adc
lock
mov
add
icebp
mov
dec
in
dec
xor
stos
xor
in
rol
and
sub
scas
addb
xor
cmp
es
add
xchg
fcmovnu
cwtl
xchg
jbe
loopne
test
imul
jl
test
repz
pusha
add
sub
add
cwtl
stos
pusha
mov
and
inc
test
out
and
sbb
dec
sbb
cmp
sub
inc
ja
pusha
sbb
movsl
mov
inc
and
aad
loop
mov
les
pop
sbb
mov
pusha
or
and
push
outsl
xor
shll
cli
roll
imul
pop
inc
cmp
cwtl
call
jle
stc
push
push
mov
sbb
popf
jl
cmp
mov
dec
xor
insb
inc
adc
repz
cs
es
add
aad
sub
leave
std
sub
pusha
mov
dec
jg
cld
rcrb
add
mov
andb
xchg
sbb
popa
dec
andb
aad
andb
xor
xchg
jle
shlb
pushl
dec
add
inc
rorl
dec
mov
out
push
dec
mov
and
pop
mov
insb
jb
jge
or
imul
cmp
test
mov
jg
jbe
ficompl
jnp
jp
sbb
dec
das
mov
adc
inc
mov
and
xor
andb
adc
sti
out
or
and
je
inc
or
and
aam
sub
sahf
test
add
adc
lods
mov
test
add
and
and
jae
and
test
lret
and
inc
aam
mov
jnp
rol
ja
pusha
add
shrb
scas
mov
orl
xorb
icebp
js
dec
push
mov
mov
ret
jg
repz
push
pushf
repnz
loopne
lds
rolb
inc
mov
sarb
stc
cmp
mov
imul
add
add
fwait
into
push
fnstsw
lods
addb
jbe
xchg
mov
aaa
xor
sbb
test
cmp
mov
rolb
loopne
mov
mov
adc
pop
jp
loopne
fdivrl
cmpsb
addb
out
sti
lods
jg
in
ret
adc
lock
shl
pop
lcall
loopne
arpl
adc
aas
sub
adc
lahf
lcall
lea
loopne
ss
pop
and
adc
pusha
inc
aaa
test
leave
mov
inc
leave
repnz
sub
push
fadd
fists
and
mov
inc
lock
rolb
inc
or
jmp
lea
sub
dec
xor
xor
bound
inc
loopne
pusha
add
xchg
icebp
addb
in
fwait
cmp
popa
subl
lahf
push
sub
mov
pusha
add
inc
push
adc
mov
mov
inc
sbb
inc
loope
xchg
xlat
and
ret
add
mov
aaa
add
andb
sbb
dec
inc
and
cwtl
pop
popa
into
addb
pushf
fnstenv
add
pusha
fcompl
push
in
movsb
pusha
and
fmull
loopne
pop
add
pusha
push
mov
rolb
lret
xchg
lods
jge
scas
mov
ret
lahf
and
xor
cmp
jle
add
movsl
fldenv
sub
and
sub
cmpsl
mov
push
push
mov
sbbl
aaa
adc
push
add
shll
jbe
or
pop
sub
loopne
fdivrl
and
adc
in
mov
inc
and
loope
shlb
pusha
xlat
jmp
dec
pop
xchg
xchg
add
js
jecxz
sub
inc
add
fsubs
stos
xlat
out
andb
in
xchg
mov
lds
aad
pop
pop
sbb
sub
pop
inc
lea
adc
popa
sbb
pop
pushl
pop
rclb
int
rolb
mov
lock
jno
fistpll
xor
add
scas
jle
add
pusha
into
mov
inc
lcall
jl
dec
jmp
jmp
iret
mov
add
add
cmp
sbb
or
and
in
adc
stos
and
pusha
call
adc
lret
je
fdivl
fldcw
test
xor
mov
sbb
shrb
add
loopne
pop
mov
aam
out
mov
inc
push
cwtl
add
pop
test
loopne
loopne
fistps
dec
insb
sbb
lret
fistpll
fwait
cli
pop
fistl
jl
stos
stos
jo
dec
inc
sub
mov
and
clc
push
shlb
jne
mov
cld
out
mov
inc
jnp
adc
lret
bound
ret
int3
fnstsw
push
and
xchg
or
rcrb
or
xchg
jbe
mov
push
xchg
addb
add
add
jns
sbb
cmc
xchg
aas
fldt
rolb
pusha
sarb
or
loopne
jecxz
daa
add
push
sti
mov
icebp
add
xor
arpl
add
sbb
inc
enter
inc
xchg
mov
or
xchg
int3
scas
push
and
lods
xor
adc
aaa
mov
inc
arpl
loopne
inc
and
add
adc
jmp
into
cmp
enter
push
add
outsl
mov
in
cmpsb
rolb
js
xor
pop
dec
dec
pop
addb
loope
lea
aas
or
loope
in
mov
push
push
jns
jg
dec
jae
cmp
divl
mov
stc
and
and
and
sub
pusha
sahf
jp
loopne
inc
pop
mov
add
mov
adcb
movsl
ljmp
and
out
and
sahf
cmp
decl
sbb
jle
call
add
mov
adc
pop
xchg
and
rolb
loopne
and
loopne
out
or
cmpb
test
ja
outsl
fcompl
out
inc
pusha
pop
sub
xchg
mov
xor
leave
mov
sti
mov
nop
dec
or
into
into
sbb
out
mov
xchg
mov
inc
iret
pop
cld
pusha
pop
inc
jmp
xchg
mov
sbb
aam
cmp
cli
add
loopne
loope
pop
mov
inc
subb
popf
lahf
negl
std
test
and
mov
int3
cmp
sbb
dec
dec
add
and
inc
sub
add
add
and
in
cltd
pop
push
mov
push
and
loopne
lods
and
rorb
add
pusha
aam
adc
int3
mov
inc
dec
mov
push
rolb
xchg
mov
sub
fldt
sub
imul
jnp
loop
cltd
outsl
push
std
scas
and
pusha
fs
xchg
or
subb
pusha
addb
je
pop
out
rolb
inc
std
add
stc
lcall
call
pop
xor
and
cmpb
mov
lea
hlt
ror
cli
and
pop
and
xor
mov
data16
pop
sub
and
daa
decb
sbb
lock
lea
push
shlb
andb
test
mov
arpl
call
scas
pusha
sbb
pop
inc
cmpsl
pop
mov
mov
xchg
mov
das
frstor
cltd
inc
test
pusha
mov
loopne
bound
add
stos
pusha
pusha
test
inc
cwtl
clc
lods
pusha
mov
fidivrs
push
dec
cld
mov
in
push
popf
sbb
push
in
add
and
mov
xchg
lahf
jecxz
sbb
xchg
sub
cmp
mov
xor
rol
or
mov
fsubr
and
imul
sub
fs
push
iret
sbb
add
add
add
xchg
adc
je
cmc
std
pop
lds
mov
inc
int3
xlat
ja
jo
shl
and
rorb
jle
or
rclb
loopne
xor
fwait
lods
mov
and
inc
push
adc
arpl
jo
fistpll
mov
sub
es
cltd
fsubr
xchg
addb
pusha
rorb
cmp
and
mov
push
pop
pop
jecxz
popa
or
repz
mov
rol
mov
popfw
adc
lahf
scas
and
lea
lds
pusha
add
ficoms
xchg
and
notl
pusha
mov
fisubrl
fnstsw
dec
sbb
loopne
add
pusha
and
adc
lods
dec
mov
sub
xorb
outsl
mov
outsl
popa
cmp
xchg
loope
jo
or
add
mov
rolb
fs
jg
mov
add
push
jle
and
add
push
push
out
add
fincstp
ljmp
add
test
sbbb
repnz
sub
inc
pop
dec
mov
add
in
dec
mov
and
push
mov
add
ror
mov
mov
push
shlb
push
andb
add
pushf
repnz
jg
jg
leave
shl
pusha
fistps
mov
mov
rolb
sarb
mov
loopne
pop
lods
add
sbbb
xchg
dec
push
ss
push
ret
mov
mov
aaa
mov
icebp
cmp
pop
insb
fldt
mov
or
lcall
add
test
loopne
rol
ljmp
dec
cmpl
inc
in
add
aaa
psllq
pushl
mov
and
ret
push
hlt
sbb
inc
in
data16
add
add
addb
ret
mov
and
inc
pop
addl
popa
fstpl
shlb
pop
xchg
sbb
iret
mov
pop
loop
imul
mov
jge
push
push
lahf
and
pop
popa
and
add
add
dec
loope
xor
jl
mov
inc
mov
arpl
sbb
shlb
js
jnp
push
popf
insb
out
xor
int3
sbb
jg
inc
bound
push
jg
mov
xor
in
pop
data16
ljmp
popa
push
into
push
jns
pop
sub
and
neg
cli
lret
jle
imul
and
and
repnz
ss
andb
test
imul
cli
outsb
shl
adc
inc
inc
mov
mov
scas
and
call
shrb
ret
shr
xor
das
notl
inc
rcrl
cmc
sbb
jge
ret
sub
xorb
xchg
imul
add
mov
cltd
inc
lea
add
daa
dec
mov
xchg
add
mov
das
bound
add
in
mov
pushl
les
enter
jae
cmc
jae
inc
scas
sbb
xchg
dec
jb
cmp
mov
mov
mov
xlat
jns
mov
lea
cmp
push
mov
imul
inc
xchg
loopne
aad
addr16
sar
loopne
cmp
aad
in
fs
test
pop
xchg
dec
jp
lds
sahf
pop
test
lret
or
js
add
lods
mov
and
int3
faddl
mov
xchg
xchg
jle
aad
das
xchg
sbb
xlat
aad
jns
add
dec
movhps
mov
addb
xchg
jg
mov
pushf
xchg
mov
cmp
and
jno
and
jne
mov
xchg
xor
jge
outsl
std
sub
int3
mov
push
jl
shlb
aas
adc
mov
pusha
rcl
into
adc
cmp
inc
imul
add
and
and
andb
ljmp
pop
mov
mov
sbb
not
and
add
push
ja
movsl
imul
add
xchg
loop
lahf
mov
int3
rcll
jo
or
sub
mov
loopne
aam
loope
jp
inc
fsts
imul
mov
repz
push
adc
cmp
and
pop
cmp
int
sub
and
pusha
aas
jns
push
ljmp
popf
call
pop
add
rclb
and
pop
cmc
jne
outsl
js
in
add
fildl
add
movsb
and
add
and
fstps
pop
sub
addb
mov
mov
sbbb
loopne
cmc
cwtl
mov
and
and
aas
xor
loope
pop
shlb
lahf
inc
in
stc
add
shrb
jno
pusha
add
pop
sti
ljmp
stc
mov
adc
pop
pop
fidivs
inc
lods
fcmove
mov
insl
inc
bound
add
loopne
orl
xor
cltd
stc
jbe
adc
adc
inc
mov
test
loopne
inc
lahf
fdivl
sub
pop
lods
andb
mov
mov
cs
add
and
sub
mov
mov
loopne
stos
pusha
mov
xchg
fcompl
or
xchg
mov
mov
dec
outsb
xor
mov
xchg
cld
mov
les
lods
cmpsl
xor
mov
pop
push
pusha
add
and
adc
rclb
xchg
ja
mov
sub
cs
sbbb
inc
jmp
pop
sub
pusha
inc
push
mov
shlb
mov
lds
jo
cmp
fiaddl
mov
loopne
push
shll
cmp
adc
mov
es
leave
lods
outsb
sub
mov
cmpsl
pop
sub
adc
adc
shlb
dec
in
rcrl
shr
dec
lahf
pop
jne
push
fs
lds
out
or
andb
data16
mov
dec
lahf
add
push
inc
cmp
aas
mov
mov
push
and
inc
pop
fsin
lock
pusha
out
movsb
rolb
mov
in
dec
or
jmp
in
jmp
repz
addb
add
jg
inc
cmp
cmp
cmp
addl
pop
clc
pusha
lock
xor
fcompl
pop
leave
mov
mov
imul
pop
ret
loopne
roll
add
into
and
stc
test
mov
or
sub
int3
lahf
mov
and
jg
cmpsb
inc
cmpb
leave
das
mov
mov
sub
stc
jno
xor
pop
push
shlb
add
mov
aaa
xchg
xor
push
jnp
ret
std
xchg
es
shl
jle
pop
cmp
shlb
popa
adc
jmp
nop
popaw
les
aam
nop
push
mov
repz
mov
and
inc
inc
sub
andb
xchg
scas
pusha
inc
xor
int3
mov
fidivs
hlt
sbb
push
or
pusha
outsl
xor
mov
xchg
inc
dec
aam
sub
cmc
adc
ficoml
mov
cs
add
popa
cmp
ljmp
adc
fs
fcomi
cmpsl
xchg
sahf
dec
xorl
imul
add
cmp
inc
pushf
cld
or
pusha
xchg
xchg
xlat
shr
pop
test
xchg
bound
dec
xchg
jl
fildll
pop
sbb
add
and
cmp
sarb
add
xchg
add
pusha
imul
pop
push
mov
and
cmp
add
add
stc
inc
push
fists
lods
lock
ljmp
outsb
jg
push
mov
lea
loopne
mov
sbb
fs
and
sti
adc
sub
lds
and
adc
xor
addr16
inc
add
aam
enter
pusha
sbb
pusha
scas
mov
pop
cmp
and
inc
pop
jo
and
mov
in
add
mov
leave
push
pop
mov
mov
jg
inc
test
and
fstl
lods
loopne
addr16
adc
enter
pusha
xor
aas
pop
mov
loop
pushf
and
lea
or
add
push
and
out
lock
aam
inc
and
adc
inc
fsub
mov
mov
mov
daa
or
addb
sbb
xor
pop
outsb
fldt
xlat
std
stos
jg
dec
and
adc
addb
in
rolb
inc
xor
leave
leave
or
shl
jb
pusha
pusha
adc
andb
arpl
shl
stos
inc
xorb
pop
popa
dec
test
or
ss
clc
in
inc
imul
in
xor
add
jne
in
icebp
imul
test
ret
pusha
icebp
popf
roll
mov
dec
and
and
in
cwtl
inc
divb
test
pop
lahf
mov
adc
inc
add
pop
dec
popf
or
mov
dec
inc
stc
fmuls
rorb
inc
and
and
mov
jno
lods
jle
lret
cmp
xor
int
jl
add
xor
int
jo
jg
add
inc
or
dec
mov
mov
jmp
inc
mov
sbb
add
sarb
pusha
push
popa
xor
xorl
or
xorb
shlb
mov
mov
jp
cmp
int
outsb
sub
pusha
cltd
in
sub
loopne
ret
push
mov
pop
int
or
add
movsl
imul
shlb
add
arpl
cli
mov
inc
pusha
pushf
mov
inc
pusha
sti
arpl
pop
mov
mov
aas
cmc
xchg
pusha
jae
ss
pusha
and
ror
into
push
stos
dec
jp
fnstsw
jo
adc
mov
inc
mov
inc
clc
and
mov
adc
dec
or
inc
and
xor
mov
mov
and
inc
scas
shl
inc
andb
mov
sub
pop
sar
xchg
orb
push
cmp
push
test
pusha
mov
inc
mov
fnsetpm(287
hlt
test
std
inc
dec
das
dec
sbb
dec
into
jg
xchg
aas
mov
arpl
sub
inc
rclb
pop
rcr
aad
out
inc
neg
mov
and
mov
adc
rolb
in
roll
popf
dec
insb
ret
rolb
xorl
pusha
jno
loop
out
inc
shlb
je
push
jnp
pop
mov
shr
and
rcr
daa
jo
xor
push
and
mov
mov
lea
xchg
insl
inc
imul
mov
inc
mov
inc
add
jecxz
addb
in
addr16
mov
pusha
and
adc
loopne
or
sarb
fcoms
fcoml
xor
addb
je
and
mov
ret
popa
rclb
inc
mov
and
mov
imul
enter
dec
cmp
pushf
cmp
mov
cmp
into
fbld
mov
pusha
inc
or
inc
adc
adc
sbb
add
repnz
shrb
adc
mov
inc
add
mov
cltd
add
pusha
enter
loopne
push
sbb
repz
shr
cli
shrb
hlt
xchg
mov
gs
push
lret
xchg
mov
repnz
in
cmp
in
fnstsw
push
clc
cwtl
add
pop
call
sbb
imul
lcall
inc
pop
inc
pop
add
jns
pop
aas
pop
mov
push
xchg
movsb
add
xchg
les
jge
imul
sub
shlb
sub
and
xchg
xchg
int3
jg
xchg
inc
loop
test
mov
sbb
das
test
call
addb
ret
cwtl
add
shrb
loopne
and
xor
or
enter
and
inc
push
and
rclb
add
jno
add
fs
scas
add
in
cmp
mov
pop
adc
push
xor
pusha
pusha
mov
xchg
fwait
mov
adc
loopne
imul
lahf
dec
xor
jns
test
mov
mov
jmp
push
cmp
mov
daa
sub
leave
hlt
clc
scas
inc
test
mov
add
cmp
cmpl
add
add
mov
and
push
pop
scas
inc
sarb
mov
hlt
scas
in
add
sub
and
xor
jbe
sbb
jecxz
pusha
sbbb
mov
dec
add
int
das
lds
ret
mov
mull
inc
add
inc
and
inc
lret
mov
pusha
pop
xchg
lods
int
cld
cwtl
je
fwait
add
mov
mov
scas
test
or
fs
inc
frstor
sub
arpl
andb
enter
ret
imulb
in
mov
lods
mov
xchg
and
shlb
pusha
cltd
gs
in
xor
fsubp
jnp
das
jle
xchg
and
iret
stc
mov
rol
mov
incl
loopne
sahf
imul
pusha
xchg
pusha
adc
outsb
jl
xor
sub
mov
jl
pop
fucomi
fdivr
loopne
cmp
xchg
lcall
ror
xor
jb
mov
add
ljmp
movsb
inc
mov
fsub
push
jbe
sti
cmp
rolb
mov
and
inc
pusha
fnstsw
pushf
scas
rolb
addb
pop
dec
or
mov
loopne
pop
mov
push
xchg
cs
test
sub
pusha
imul
cmp
jb
pop
out
push
shll
and
and
pusha
push
std
scas
fcomps
inc
sub
fidivl
int3
loope
xchg
cs
rclb
arpl
andb
inc
adc
mov
out
andnps
mov
jge
add
adc
push
aam
inc
jo
jae
push
loopne
sub
push
cli
cmp
je
xor
loopne
push
inc
and
out
xchg
mov
out
jne
rolb
mov
mov
mov
int3
dec
sbb
in
and
pop
sbb
dec
fisubrs
xor
fisubrs
mov
jno
mov
inc
loopne
cmpl
adc
shr
subl
add
sbb
mov
loopne
shlb
xchg
popf
or
mov
inc
loopne
mov
hlt
pop
pop
decl
imul
out
push
incb
mov
loopne
in
jb
inc
inc
gs
inc
dec
ffree
lock
inc
mov
pusha
loopne
mov
lret
movsb
addb
xor
and
sbb
ret
lock
loope
or
cmpsl
ret
sarb
test
test
pusha
ljmp
les
and
popf
mov
adc
mov
jg
sub
xor
fcoms
loopne,pn
loope
mov
std
adc
xor
sbb
push
inc
add
rolb
jl
jb
call
repz
in
pop
notl
cmp
bound
shlb
sahf
sahf
xor
add
jle
mov
or
push
jno
cmp
loopne
cmp
sub
pusha
adc
cmp
into
sub
in
add
sbb
addb
inc
pop
mov
testb
pusha
cmpb
pop
lret
mov
xchg
inc
ljmp
xor
push
sub
add
add
sahf
movsb
pusha
pusha
mov
push
mov
iret
jmp
andb
jne
adc
xor
inc
mov
cmp
loop
subl
lea
xchg
mov
and
negl
xchg
xor
inc
pusha
mov
dec
aad
rolb
fidivrs
idivl
and
add
mov
inc
mov
add
dec
subl
shrb
jecxz
sub
mov
add
scas
sahf
scas
and
iret
mov
mov
dec
outsb
jne
or
dec
sahf
ja
dec
xchg
pop
pop
xchg
inc
leave
mov
adc
xchg
movsb
add
movsb
loopne
sti
scas
and
or
into
inc
mov
xor
xchg
aaa
repnz
add
inc
xchg
pop
flds
aas
pusha
bound
pusha
loopne
mov
loopne
sub
mov
xor
inc
popa
shlb
pop
dec
ds
outsb
dec
push
pop
or
inc
inc
jns
cld
aas
jmp
xchg
popa
or
pusha
stc
pushf
pop
loop
mov
out
fsts
pusha
and
cmp
and
xchg
mov
adc
inc
adc
and
mov
aas
adc
sti
cltd
lcall
aam
pusha
loopne
pop
xor
mov
xchg
sbb
add
pusha
aas
jp
sahf
ja
inc
ss
mov
aas
hlt
dec
mov
pusha
cmp
xor
sbb
lahf
sub
mov
lret
mov
pusha
jg
xchg
xchg
mov
jnp
and
fwait
push
repz
std
mov
add
shlb
sbb
or
inc
add
adc
mov
xor
outsb
pop
pop
and
pusha
mov
inc
pop
inc
ret
mov
roll
adcb
mov
pop
jge
out
cwtl
ror
mov
mov
ss
loopne
test
loopne
mov
inc
inc
cli
popa
jg
dec
inc
lock
and
ljmp
in
ss
movl
inc
leave
cwtl
int
jmp
ss
push
scas
in
xor
pop
and
jns
clc
frstor
inc
inc
xchg
out
jo
and
fwait
shll
outsl
ja
out
jge
out
and
icebp
test
jecxz
dec
sbb
leave
jb
adc
insb
inc
and
push
inc
add
push
in
mov
out
jmp
inc
mov
mov
inc
loop
shlb
inc
and
lea
pop
cltd
ret
popf
movsb
loopne
out
mov
sbb
jle
adc
add
das
jge
out
add
inc
call
rolb
inc
xchg
fsubs
adc
xchg
mov
fdivs
cmp
mov
mov
mov
push
mov
in
add
mov
sbb
lret
gs
rolb
pusha
ret
iret
xchg
repz
pushf
xor
idivb
sbb
notl
adc
rorb
inc
mov
pop
dec
scas
dec
mov
pop
in
pop
and
jg
lret
mov
mov
pusha
subb
dec
roll
sbb
cmc
mov
cmp
addb
and
popl
scas
push
add
mulb
and
movsb
inc
and
lock
inc
pusha
and
pusha
out
xchg
cmpsb
inc
mov
sar
shll
cld
pop
sarl
mov
inc
shlb
out
addb
dec
insb
dec
sbb
dec
sbb
pop
dec
dec
clc
mov
aam
bound
shl
inc
aas
adc
les
or
push
or
les
mov
cwtl
adc
shlb
pusha
fmull
lods
pop
or
adc
push
mov
pusha
shlb
loopne
push
inc
mov
add
add
loopne
jbe
mov
loopne
mov
ret
inc
xchg
andl
pusha
rcrb
shlb
sub
lret
mov
loopne
call
adc
addb
loope
pusha
test
shrb
sar
cltd
in
cli
adc
and
pusha
inc
ss
addb
push
lret
push
loop
stos
ja
bound
and
mov
shll
in
push
jae
gs
loopne
or
add
js
pusha
add
inc
xchg
ror
and
add
and
dec
dec
fcomip
mov
cmp
out
sub
inc
cltd
imul
mov
fcoms
pop
jns
popf
aad
data16
icebp
daa
scas
rolb
stc
or
pusha
shlb
ret
imul
fsubrs
int
js
mov
fildl
ret
lods
clc
test
andb
cltd
cld
add
int
mov
pusha
dec
mov
loopne
cltd
in
sub
fcoml
jmp
out
out
dec
sbb
add
and
and
mov
jno
divb
dec
push
xchg
aad
pushf
inc
xlat
dec
xor
mov
movsl
lret
decb
lahf
or
repnz
add
loope
jb
push
adc
inc
sbb
sub
pusha
dec
aad
fs
add
sub
shl
or
and
dec
cmp
jb
hlt
pop
xchg
xchg
mov
mov
mov
and
int
jp
in
movsb
mov
lods
pusha
inc
xor
mov
inc
xchg
sbb
mov
mov
add
mov
xor
fsub
shrb
and
pusha
pusha
cmpsb
rolb
inc
loopne
idivb
mov
inc
add
sbb
mov
mov
loopne
repnz
andb
out
adc
inc
inc
push
mov
push
mov
addb
cmp
or
and
push
or
lea
pusha
and
pusha
shrb
lock
push
addb
jmp
sahf
inc
addb
push
and
scas
adc
mov
adc
mov
loopne
fsts
mov
sbb
and
loopne
sbb
push
cli
ss
xchg
popf
aas
shlb
stc
inc
aaa
data16
test
shlb
adc
sbbb
je
cltd
movsl
sub
movsl
add
mov
push
shlb
in
jno
test
shlb
pop
push
inc
and
repz
loopne
inc
loopne
and
fidivrl
sbb
ret
add
push
mov
dec
xor
and
fwait
jg
add
test
test
pop
pop
mov
lret
mov
and
push
pusha
cmp
xor
jo
dec
cmp
fcoml
dec
mov
aad
add
les
ss
inc
stc
out
mov
nop
lcall
and
mov
test
ror
sbb
stos
inc
adcb
dec
sub
rclb
fldl
sbb
xchg
jmp
nop
jo
sbb
js
daa
dec
loope
shlb
icebp
push
add
shrb
cli
xchg
sub
mov
rolb
mov
fstp
xchg
jno
push
xchg
and
movsb
and
test
loopne
in
rcll
dec
hlt
fcoml
ficoml
popf
and
mov
aas
pop
ffreep
xchg
lods
loopne
mov
xlat
xor
popf
shrb
pop
dec
fisubs
iret
adc
leave
jnp
jge
inc
sarb
mov
sub
add
and
add
cmp
xchg
je
pushf
mov
andb
jp
jle
out
cwtl
pop
cs
xor
xchg
sbb
fdivs
sub
mov
addb
add
test
pop
movsl
int3
das
ds
adc
shl
add
call
shlb
lods
pusha
pusha
sbb
mov
xor
daa
repz
pop
lea
push
into
int
adc
idivb
sub
pop
notb
and
sbbb
jae
repnz
mov
pusha
lods
add
inc
cmp
fidivl
fstl
and
pusha
lcall
add
mov
lret
lret
cmp
cld
adc
mov
cmp
daa
mov
ss
xchg
mov
pusha
and
rorb
pusha
lods
sti
cmc
inc
pop
jne
addb
hlt
out
call
pop
std
dec
fmul
pop
loop
aaa
inc
dec
mov
or
fcmovb
sbb
subl
sbb
imul
cmp
dec
or
shl
pop
jp
lcall
jl
insb
cmpsl
mov
rcr
and
rolb
faddl
inc
cltd
icebp
out
jae
cmc
lcall
lcall
lock
pusha
loopne
xchg
dec
pusha
adc
aaa
ret
inc
and
lahf
sub
adc
js
pop
or
cltd
lcall
inc
orb
or
rolb
mov
jae
shl
inc
inc
cli
mov
sar
fmul
addb
push
or
into
out
lret
testl
dec
nop
cli
fwait
inc
lods
mov
dec
cmp
sub
xor
out
cmc
lea
dec
divl
mov
inc
inc
push
mov
xchg
inc
mov
push
or
and
fucomp
sub
inc
movsb
add
enter
nop
cmc
cmpsl
repz
sbb
sub
jbe
push
popf
shlb
cld
xchg
dec
mov
imul
into
mov
stos
xor
shl
seto
outsl
fwait
loop
push
shlb
and
jp
lock
shr
stos
jmp
add
inc
jno
adc
add
mov
cmpsl
or
pusha
pusha
gs
inc
inc
ret
inc
push
cmp
jns
add
add
in
fimuls
xor
jbe
sub
and
xchg
fisubrl
addr16
call
outsb
outsl
push
ja
xor
loopne
and
addb
mov
xor
clc
shl
cmpsb
pusha
add
pop
bound
add
jmp
inc
mov
jno
cmp
push
mov
pop
pushf
int
jnp
add
push
bound
add
dec
xchg
cmp
scas
add
pusha
mov
push
aad
adc
sarb
mov
add
hlt
ds
mov
andb
fldenv
fwait
mov
mov
mov
jb
imul
mov
fildl
test
mov
insb
filds
enter
aad
jle
lret
inc
test
sbb
outsl
js
decb
mov
jl
or
push
or
pusha
out
iret
loopne
inc
and
rcrb
mov
jno
mov
and
pop
popa
mov
pusha
scas
dec
or
inc
mov
arpl
pop
xor
lcall
fldt
std
mul
add
and
mov
or
sbbb
xchg
add
adcb
addl
call
add
cmpsb
mov
loope
ja
fimuls
push
mov
inc
mov
inc
jmp
and
orb
mov
stc
mov
pop
and
mov
sbb
jl
inc
xor
jnp
jbe
dec
pushf
cmp
pusha
loopne
rolb
and
and
insb
lock
dec
push
mov
mov
stc
test
loopne
sub
jl
or
xchg
sub
or
popa
leave
add
dec
fldt
inc
pop
addb
pusha
lret
into
push
rolb
loope
jecxz
popf
jae
lret
sub
aad
jo
outsl
cmp
xchg
cmpsl
aam
and
leave
inc
lcall
and
dec
pop
popa
mov
std
cli
xor
xor
inc
pusha
xchg
xor
xchg
cs
push
fldenv
sbb
cmpsl
cmp
cmp
add
and
mov
out
cmpsb
and
xor
mov
in
jecxz
leave
or
jnp
add
cmp
loopne
outsl
or
mov
pusha
pusha
xchg
dec
fisttpll
inc
mov
push
mov
pusha
and
cmp
js
add
inc
push
pusha
inc
cmp
fildl
mov
adc
inc
in
inc
lret
add
pop
outsl
repnz
dec
scas
and
lods
loopne
in
mov
lods
lods
and
adc
nop
inc
push
and
loopne
lods
mov
daa
jns
mov
dec
pop
ljmp
fbstp
out
pop
xchg
test
addr16
lret
add
dec
jns
and
add
pop
cli
and
rclb
lds
cltd
adc
add
xchg
jmp
or
test
loopne
inc
test
pop
in
or
rol
mov
enter
sbb
stos
push
lods
mov
and
pusha
imul
add
mov
stos
add
sbb
add
xchg
cltd
sbb
push
imul
push
jnp
inc
mov
shlb
pop
cld
mov
mov
mov
fistl
mov
pop
repz
and
loopne
lahf
inc
adc
adc
xor
ficomps
adc
or
add
push
inc
mov
test
and
cwtl
cmp
and
addb
pusha
inc
or
out
aam
pusha
and
in
arpl
or
shl
and
je
and
pusha
mov
add
xor
or
inc
jne
lcall
lods
rol
xchg
mov
push
int
div
xchg
jo
sub
sahf
and
and
push
cli
in
stos
daa
or
pusha
loopne
dec
mov
ret
or
loopne
mov
inc
imul
popa
test
shlb
add
push
roll
adc
inc
inc
pusha
stos
sti
mov
or
pusha
and
arpl
andb
test
out
inc
loop
insl
enter
push
aad
xchg
xchg
adcb
or
andb
sahf
out
mov
loope
xchg
pop
sub
jmp
mov
add
mov
dec
or
and
sbb
loopne
mulb
or
sub
ffree
das
mov
and
shr
inc
mov
pusha
lret
incl
int
in
loopne
mov
testl
mov
cld
jo
pusha
mov
mov
adc
or
add
mov
rolb
inc
adcb
shlb
jo
or
adcl
iret
testb
lock
loopne
mov
mov
stos
shr
aad
js
push
andb
mov
mov
inc
out
pusha
mov
loop
jle
fisubrl
or
cmp
dec
dec
pop
jl
inc
and
xor
pop
and
pusha
cmc
push
add
scas
rol
shrb
mov
clc
ss
xchg
imul
dec
inc
into
push
loopne
pusha
inc
ss
cmp
dec
dec
or
mov
and
inc
push
addb
scas
pop
or
adc
jno
test
and
sub
loopne
addb
mov
lea
jns
pop
stos
inc
and
pusha
lret
jle
ret
idivb
int3
mov
fsubrp
cmpsl
mov
mov
pop
inc
jp
adc
fnstenv
mov
in
push
mov
cmp
es
xchg
bound
mov
andb
loopne
dec
xor
add
dec
std
leave
lea
pusha
mov
imul
lds
rolb
into
push
loopne
out
xchg
mov
lret
outsb
ret
loopne
mov
popf
inc
cwtl
inc
jmp
mov
out
test
fidivrs
cmp
pusha
mov
cmpsb
rolb
loopne
pop
imul
ret
lea
pop
pop
xchg
mov
test
pusha
addb
and
adc
repz
ds
sbbb
jno
sub
mov
pusha
and
sbbb
leave
ret
addb
and
adc
adc
out
cltd
popa
xchg
mov
mov
sub
or
inc
inc
rcrl
clc
jle
cmp
lea
pop
sub
out
loope
rcr
xlat
shll
jo
and
imul
xchg
daa
test
cltd
sbb
mov
adc
out
out
dec
xchg
xchg
inc
loopne
add
xchg
sbb
loopne
std
movsb
pusha
loopne
cmp
inc
mov
mov
add
rolb
cmpb
cmpsb
addb
shl
stos
andl
sub
loopne
dec
mov
shrb
inc
mov
xlat
cmp
gs
push
popa
stos
shl
add
jns
rolb
jb
jns
js
pusha
add
test
and
inc
mov
jge
iret
push
in
cli
ss
mov
incb
out
inc
mov
dec
icebp
fcomp
cli
sub
fst
add
xor
sbb
inc
and
push
lea
jns
pusha
and
ret
test
inc
lret
ficomps
add
mov
add
add
rol
les
adc
lcall
arpl
sub
mov
cmp
loopne
and
loopne
and
lcall
fdivr
outsb
lock
xchg
xchg
jnp
clc
mov
xchg
jns
push
jne
and
inc
loope
mov
movsl
sbb
mov
add
mov
xlat
lret
fcmovu
lods
inc
mov
push
add
jmp
bound
cmp
lds
rol
int3
add
loopne
imul
sar
inc
mov
pusha
xchg
pop
and
mov
mov
and
mov
cmpsl
iret
jo
lahf
pop
cld
mov
pop
daa
add
inc
ds
mov
les
adc
jg
inc
add
shlb
xor
ret
aas
mov
cmp
js
jo
sbb
mov
cmp
jecxz
xor
mov
loopne
mov
jg
faddp
out
push
loopne
into
out
pop
sub
xor
loopne
pushf
addb
lods
sub
and
andl
pop
mov
mov
je
in
mov
sbb
lods
inc
inc
xlat
mov
push
mov
rolb
cmove
mov
orl
add
out
movb
and
xchg
insb
loope
push
fmul
push
and
or
out
icebp
and
sbb
js
out
push
mov
and
mov
ds
mov
or
scas
mov
pop
add
jb
inc
xor
aam
insb
scas
inc
pusha
lock
loopne
mov
repz
dec
ljmp
inc
out
in
push
aas
xor
mov
andb
pop
mov
xor
sbb
inc
mov
aaa
xchg
addb
enter
mov
test
adc
pop
into
adc
mov
into
std
fimuls
inc
jns
push
and
repnz
pusha
mov
and
inc
test
mov
inc
test
dec
mov
hlt
mov
rol
das
int3
push
andb
fnstenv
or
and
orb
imul
sub
sbb
or
or
addr16
push
cmpsb
inc
and
add
arpl
shlb
rolb
inc
addb
ja
jg
pop
test
cmp
sub
sub
loopne
jb
push
xchg
adcb
inc
ret
int3
out
mov
push
inc
or
push
jmp
and
jae
dec
test
cmc
jge
push
adc
add
sbb
pop
push
sub
rcl
pusha
mov
mov
mov
loopne
ret
mov
adc
cmp
in
adc
jns
aad
pusha
pusha
lcall
push
loopne,pn
mov
add
das
sbb
out
icebp
mov
and
pop
add
rorl
rclb
push
sub
cmp
repnz
mov
loopne
rorb
push
and
add
leave
jns
jle
gs
shl
mov
test
and
loopne
movsl
cmp
sub
mov
xchg
mov
jne
shll
cli
dec
ret
pushf
in
mov
fimull
rorl
loopne
adcl
shrb
adc
leave
cmc
pop
xchg
mov
in
mov
loopne
nop
pop
arpl
shl
xchg
sbb
pusha
inc
jae
dec
scas
add
mov
aas
jmp
dec
sub
pusha
int
cli
xor
inc
add
shrb
rolb
jl
arpl
pusha
loopne
lcall
dec
repnz
lret
cmp
mov
fiadds
lret
mov
xchg
lcall
push
dec
outsb
ret
in
cmp
fiadds
mov
loop
loopne,pn
sbb
pusha
addb
shrb
mov
mov
dec
pop
into
mov
das
or
rclb
fiaddl
enter
xchg
loope
insb
cmp
sub
lods
in
sub
mov
mov
add
and
pop
xor
lret
gs
nop
out
scas
insl
hlt
pop
inc
lcall
mov
dec
into
push
popa
shll
add
cli
xchg
cmp
add
movsb
add
lock
and
mov
dec
push
addb
sub
popa
dec
push
mov
addb
pusha
mov
test
aad
mov
adcl
sbb
mov
insl
and
pop
mov
pop
jns
dec
push
out
addr16
cwtl
roll
gs
int3
mov
ret
inc
push
lods
pop
and
andb
inc
popa
lahf
inc
int
mov
mov
pop
adc
loopne
leave
int3
dec
movsb
mov
mov
ficompl
lods
and
mov
xchg
pop
pop
and
rolb
lret
jg
pop
mov
pop
mov
int
in
mov
xchg
fwait
orl
out
xchg
adc
inc
rol
dec
gs
push
jge
fisttpl
mov
xor
mov
add
inc
or
div
pop
push
mov
add
cltd
mov
push
lods
mov
sbb
rclb
dec
arpl
lcall
inc
rolb
xchg
xchg
push
mov
and
cmp
mov
add
dec
in
mov
ret
ds
mov
pusha
cmpb
push
shll
jne
jmp
cmp
lods
cmpsb
mov
into
mov
cld
push
rolb
jmp
mov
sub
add
adcb
and
cmp
add
add
ret
adc
and
stos
addb
mov
push
lret
inc
sub
and
mov
orb
sbbb
and
ss
sbb
popa
cmp
andb
mov
pusha
and
inc
push
fsubs
add
pop
insl
xor
jb
push
stos
outsl
jbe
mov
loop
inc
loopne
jnp
popf
pcmpeqb
jge
pop
mov
mov
xchg
lods
inc
add
loopne
outsl
lret
dec
stos
rolb
push
inc
sbb
adc
push
jge
fwait
arpl
jp
add
fnstcw
lock
dec
rolb
movsb
and
imul
push
inc
pusha
in
pop
aas
mov
add
or
out
dec
xchg
xor
and
outsl
clc
xchg
scas
inc
add
sub
inc
cmp
push
mov
mull
testb
mov
or
adc
xchg
jb
mov
andb
out
sbb
sub
inc
lret
scas
and
and
adc
inc
inc
fidivl
arpl
test
and
mov
clc
out
mov
fldcw
ljmp
test
les
shlb
inc
push
inc
sbb
mov
out
add
ficoms
xchg
mov
insl
lret
xor
iret
sub
mov
xlat
or
or
shrb
shl
jne
inc
inc
fs
insb
jae
pusha
pusha
push
or
das
or
fdivrl
and
popf
das
inc
pop
add
nop
cmp
test
rorb
movsl
xchg
int
leave
stos
mov
int
adc
mov
jb
or
loopne
xlat
dec
fucom
andl
das
jae
int3
call
loop
js
js
mov
dec
push
push
cmc
cltd
dec
fisubrl
popf
iret
mov
loope
das
add
in
shl
dec
daa
pop
jb
hlt
div
sahf
jle
andb
inc
sbb
loopne
inc
rorl
add
loop
lods
fnstsw
xor
inc
dec
daa
outsb
mov
dec
in
pop
call
inc
loopne
lret
insb
sbb
imul
scas
sahf
dec
adc
cwtl
or
xorb
add
pusha
fs
sub
pop
mov
dec
dec
mov
cmp
add
cs
pusha
aad
add
mov
add
mov
loopne
mov
rol
add
out
adc
lea
mov
std
and
orb
mov
sbbb
sub
jno
mov
pushf
test
loopne
pop
movsl
inc
mov
inc
push
loope
and
inc
scas
rolb
xchg
decl
pop
sti
or
xor
lods
xchg
mov
or
sahf
mov
and
adc
mov
xchg
lds
sub
xor
pusha
sub
inc
sbb
into
mov
add
fisubrl
flds
mov
lods
inc
mov
cmpsl
xchg
fildl
push
lret
mov
or
pusha
test
xchg
inc
sbbb
push
add
fcmovu
mov
ss
mov
xor
push
in
sub
inc
rcr
jns
inc
loopne
loopne
fs
adc
pop
jmp
lea
pop
add
orb
jns
andb
shlb
mov
cmc
cmc
sti
push
cmp
shll
or
mov
and
loopne
cmp
rcrb
lahf
adc
fmul
sahf
adc
clc
pop
lea
mov
loop
int
shlb
cmp
mov
rolb
pusha
inc
mov
out
push
sarb
pop
cmc
leave
in
loopne
outsb
into
flds
andb
ja
shr
inc
aam
rorb
and
js
stos
mov
call
mov
cld
imul
repz
popa
lods
shlb
test
jno
add
loopne
and
adc
aaa
lret
and
or
loopne
mov
xor
ret
test
pusha
mov
inc
xchg
shlb
push
sbb
mov
inc
arpl
pop
popf
iret
nop
xchg
xor
sbb
scas
jmp
pop
xor
loopne
push
addb
ljmp
loop
dec
inc
sbb
dec
fwait
test
add
jo
out
lret
push
and
jnp
lret
lock
jmp
pusha
fst
paddb
shlb
pop
xlat
dec
data16
mov
hlt
cmp
jbe
lahf
stos
rol
push
mov
and
mov
in
test
push
shlb
fisttpll
add
mov
mov
punpckldq
sub
pop
sbb
adc
les
inc
clc
push
rolb
push
testb
std
push
loop
jbe
lods
dec
mov
xchg
inc
dec
inc
ret
cld
mov
sub
mov
mov
rolb
fildll
ss
push
dec
pop
dec
xchg
shlb
shl
adc
repnz
insl
add
jno
xchg
ljmp
jg
rolb
push
adc
mov
and
sbb
pop
jb
lock
out
cld
sbb
iret
adc
push
cmp
scas
dec
mov
out
mov
and
add
ret
cmp
in
jmp
push
push
push
xchg
inc
mov
and
inc
mov
add
and
addb
addb
out
jl
addb
dec
out
nop
inc
jle
jae
push
inc
lret
lret
movsb
and
fisubs
mov
xchg
mov
jo
push
and
lahf
jbe
xchg
je
xor
sub
inc
rcrl
loopne
add
test
mov
jne
pop
scas
int3
repz
jl
shll
mov
jecxz
add
add
les
shl
inc
popa
adc
push
push
adc
xchg
cmp
push
push
imul
hlt
movsb
and
pushf
sbb
pop
iret
jae
rol
icebp
popa
jbe
shl
xor
imul
test
pop
test
xchg
flds
mov
loopne
lods
ja
cmpsb
pusha
inc
fsubrl
ret
jle
mov
add
mov
mov
clc
lcall
insb
sub
mov
notl
pop
sahf
clc
aam
andb
add
rcr
pop
inc
daa
mov
loopne
push
andb
cmp
push
out
incl
xchg
imul
inc
push
lds
test
dec
jl
push
dec
push
and
or
mov
xchg
pop
jnp,pt
shl
sbb
rclb
add
mov
push
fnsave
mov
imul
pop
ficoms
xchg
mov
ljmp
dec
data16
out
shll
clc
outsl
je
cmp
iret
pop
ja
pop
in
mov
mov
lea
addb
add
mov
clc
shr
aad
shrl
cmc
and
shlb
outsl
shll
pop
mov
inc
inc
or
loopne
dec
push
lods
rolb
cmp
push
pop
push
mov
pop
int
popf
adc
enter
and
pusha
add
loopne
pop
sub
inc
bnd
shr
xchg
sbbl
mov
data16
jle
fs
xor
jnp
rolb
cmp
sub
and
xlat
je
or
das
addb
pusha
xchg
andb
add
add
pusha
ds
lret
jle
ljmp
repnz
lods
and
xor
addr16
insb
or
scas
andb
fs
mov
xorb
jl
rcll
mov
add
repz
inc
pusha
mov
mov
pusha
inc
cmp
inc
cmp
test
rol
lods
rolb
adc
sub
adcb
pusha
stos
cmp
jne
mov
dec
sbb
add
orl
rcrl
or
and
or
mov
mov
xchg
in
lcall
stc
and
pop
sbb
pop
cmp
ret
dec
push
das
repz
and
loopne
xor
addb
lds
rolb
xor
cld
inc
je
insl
bound
add
mov
sub
xlat
sub
inc
clc
pop
inc
shl
push
xor
enter
or
fldenv
mov
push
pushf
mov
aas
sub
adcb
addb
in
jae
repz
dec
or
pusha
inc
popa
loopne,pn
mov
dec
std
cltd
je
je
pop
cmp
xlat
in
cmc
sub
loopne
jno
data16
and
pop
inc
xor
mov
std
pop
push
inc
imul
in
in
push
xor
push
adc
inc
pop
mov
aaa
int3
and
mov
stos
insl
xor
cmp
pop
cld
dec
cmpsl
or
mov
cmp
xchg
jae
jle
and
fadd
pop
pop
xor
pusha
inc
rorb
add
add
icebp
and
pusha
rcrl
fmuls
mov
pop
mov
ss
xor
lahf
dec
js
daa
cli
insb
pop
xor
scas
addb
push
sub
mov
rolb
push
jnp
adc
add
shrb
push
jb
mov
test
and
clc
testb
and
daa
loop
rolb
loopne
lahf
push
inc
jne
push
in
aaa
push
and
pusha
pop
in
popa
ja
aad
iret
jmp
enter
lret
jbe
and
ss
jbe
loopne
daa
jns
sbb
add
mov
inc
out
add
lahf
push
rcrl
dec
loop
int3
sbbl
andb
shlb
and
ds
xor
stos
pop
cmp
xor
es
mov
ljmp
adc
cmp
icebp
or
or
push
std
xchg
jb
jne
and
in
jge
movsb
addb
inc
cmc
xchg
xor
add
dec
jae
add
loopne
push
lea
jb
add
mov
or
rcrb
xchg
or
adc
repz
mov
fdivs
jp
mov
xchg
aam
rolb
pusha
adc
test
inc
cmp
mov
jp
xor
roll
xchg
rol
sahf
xchg
sub
mov
sub
addb
adc
mov
imul
outsl
lods
addb
sub
xchg
inc
push
addb
or
rorb
pusha
jl
mov
xorl
in
push
jno
push
add
xor
loopne
push
cmp
subb
pop
int
add
loopne
popa
push
lcall
out
out
or
add
insl
mov
xchg
out
jno
ss
pop
pop
adc
bound
ds
cwtl
scas
addb
add
jle
rcl
pop
adc
xor
cli
icebp
xchg
stc
fwait
pop
xchg
xchg
push
stc
test
inc
pop
je
xchg
aad
mov
daa
lods
pop
xor
mov
mov
push
inc
rdmsr
mov
mov
cwtl
xor
adc
in
and
mov
lret
pushf
xor
int3
xor
push
adc
pop
sub
mov
icebp
data16
cmpsb
and
push
pusha
subb
loopne
aam
or
push
shlb
mov
std
fdivl
fiaddl
inc
loopne
jae
add
pop
hlt
addb
and
bound
mov
cltd
movsl
jnp
popf
sbb
xchg
add
mov
cltd
pop
mov
xchg
int
adc
inc
mov
fildll
loopne
test
adc
das
test
add
aam
data16
cmpsb
and
dec
mov
sbb
ret
pusha
sbb
in
loope
andl
movsl
mov
inc
jae
xchg
faddl
and
ret
pop
push
das
cmp
mov
jg
mov
or
add
add
sti
push
fsubs
pusha
andb
push
mov
adc
lahf
in
popf
je
neg
push
lahf
jno
and
es
sbb
inc
and
jecxz
push
stos
mov
shrb
in
leave
test
decl
and
inc
add
xchg
in
cmp
insb
movsb
loopne
or
xchg
pop
adc
mov
insb
mov
pusha
and
fcompl
daa
push
int
cld
xlat
inc
mov
movsl
addr16
dec
xchg
mov
shlb
mov
fcoml
daa
outsl
test
orb
and
in
out
addr16
push
fnstenv
lret
sarb
xor
mov
push
add
jae
aam
addr16
pop
jne
cmp
addr16
cmpsb
andb
xchg
inc
call
pusha
mov
adc
out
iret
xor
stos
rclb
mov
mov
sub
dec
outsl
ret
sarl
pop
out
sbb
rclb
pop
ss
mov
in
mov
rol
fadd
xchg
dec
add
data16
shlb
jmp
leave
mov
int
sub
rorb
cmpsl
ret
lods
insb
insl
dec
jp
fldt
mov
jle
test
sbb
fstpl
aas
fmuls
inc
inc
mov
xchg
sub
loopne
iret
xor
sub
loopne
idivl
push
std
add
shl
pushw
ss
stc
aas
in
push
and
lahf
adc
inc
or
xor
das
lods
xor
mov
mov
bound
repz
in
ljmp
jle
mov
xchg
mov
outsl
jmp
cmpsb
shlb
mov
cmpsb
pusha
andb
addb
test
or
fldenv
pusha
pusha
jge
fdivs
xchg
cmp
test
add
stc
shlb
mov
jg
and
fwait
push
pusha
and
imul
mov
adc
pop
pop
xor
fimull
add
xor
stos
loopne
inc
imul
andb
jg
cmc
loopne,pn
xchg
iret
xchg
pop
in
push
xor
adc
insl
fcomp
movsl
mov
test
ja
hlt
fwait
in
jle
loopne
mov
mov
inc
mov
pop
jg
jmp
shlb
mov
dec
and
rclb
shlb
int3
add
loopne
rorl
mov
and
mov
jg
loopne
xor
add
pusha
pop
pop
lods
jp
movsb
inc
loopne
clc
push
std
test
inc
fisubrs
mov
addb
jl
andb
pop
mov
inc
outsl
pop
enter
jne
or
loopne
lods
inc
pusha
cld
adc
xchg
xchg
and
daa
push
addb
jle
mov
cmp
orl
push
pusha
inc
sub
and
into
pop
add
std
cld
lods
loopne
dec
jmp
rolb
pop
rclb
call
in
inc
rcl
clc
pop
add
pusha
pushf
add
or
inc
xlat
out
out
data16
mov
outsl
hlt
inc
jne
leave
pop
mov
inc
rclb
and
test
mov
add
sbb
subb
mov
jns
adc
rcrb
pushf
jle
das
mov
inc
pop
into
xor
std
insb
or
mov
or
jecxz
lret
cmp
jmp
or
fdiv
xchg
cmpsb
loopne
xor
and
andb
pusha
or
mov
in
mov
je
divb
jecxz
cmp
add
mov
xor
dec
test
ret
dec
rcrl
mov
push
mov
out
rolb
xor
std
test
mov
loopne
push
sub
shlb
fimull
insl
nop
cmpsl
jle
lea
xor
pusha
subb
jmp
into
inc
popw
pop
sbb
jno
arpl
adc
daa
mov
leave
mov
sahf
jno
and
and
pop
cmp
imul
loope
mov
addl
dec
mov
xor
or
and
adc
bound
jp
dec
jns
cmpsl
xchg
inc
addr16
fsubrs
shlb
rolb
psubb
rolb
or
arpl
cmp
and
addb
mov
sarl
and
shll
loopne
cld
dec
mov
or
jmp
out
adc
jbe
repnz
int
cmp
xchg
filds
mov
sarb
dec
clc
and
jb
test
fisubs
adc
and
adc
xor
lock
sbb
mov
and
dec
clc
push
jl
jb
in
inc
sbb
pop
jmp
icebp
mov
out
xchg
jb
sbb
je
mov
sbb
in
push
cmp
adc
insl
xchg
and
popf
lods
pusha
add
loopne
std
xor
mov
cli
jmp
mov
rorb
pusha
pusha
pop
hlt
and
loopne
adc
inc
rcrb
aad
lret
push
addl
pop
adc
xchg
mov
std
dec
roll
push
in
pusha
ds
pusha
and
inc
xorb
out
and
addl
xchg
push
and
loopne
iret
std
stos
aam
push
adc
sar
mov
into
or
sbb
lods
sahf
jnp
jge
and
mov
in
imul
aad
cmp
pusha
and
xor
mov
cmp
or
outsl
adc
clc
push
subl
inc
movsl
inc
out
mov
adc
pusha
pusha
mov
inc
nop
mov
fisubs
loopne
test
fsubrs
lahf
inc
cltd
sbb
and
ficompl
arpl
fsts
inc
int3
dec
mov
inc
inc
and
out
jnp
jo
dec
xor
jnp
fs
movsl
out
lcall
scas
sub
mov
or
and
dec
or
sar
adc
call
jecxz
filds
add
pop
jnp
sbb
or
shlb
jmp
sub
mov
push
add
cmp
fdivrl
sub
add
aaa
jl
mov
or
add
push
jecxz
sbb
loopne
sbb
push
push
fcompl
sbb
push
pop
jle
sbb
xchg
pusha
shlb
std
mov
sbb
shll
pop
push
push
cmovns
ljmp
jmp
pushf
jle
and
loope
mov
xchg
jne
loop
jge
fcmovnu
inc
aad
fucomp
dec
jno
inc
xor
shlb
pusha
xor
xor
cmp
jmp
mov
adc
sbb
mov
addb
mov
jg
mov
loopne
cli
mov
fwait
or
in
lret
pusha
sbb
shlb
cmp
lods
and
mov
inc
pusha
insb
negb
and
inc
mov
shl
push
rolb
dec
mov
xor
in
mov
xchg
stos
loopne
addr16
jg
int
inc
xchg
fcmovb
fwait
aaa
sahf
and
imul
out
xchg
pop
sarb
repnz
add
rcrb
lahf
mov
jle
mov
or
xor
leave
mov
lahf
repz
test
subb
inc
lahf
pop
lret
rol
jecxz
xchg
loopne
mov
add
sub
add
add
push
cmp
and
inc
sbb
clc
out
pop
les
shl
ficoml
bound
lods
outsb
enter
jp
test
in
sti
jbe
cmp
sub
xor
adc
std
int
popa
adc
lea
jle
ficoms
lds
inc
sar
pop
mov
jmp
or
mov
test
stc
cmp
or
shl
addb
add
pop
cmp
mov
lods
rol
mov
sbb
icebp
pop
push
jg
loopne
and
test
inc
addr16
inc
push
out
push
pusha
loop
push
das
mul
mov
icebp
jno
mov
call
rcll
cmp
or
and
sub
aam
out
fnsave
stc
stc
jle
ss
lea
aaa
cmp
lahf
popf
mov
iret
enter
lods
shlb
add
jecxz
add
addb
adc
jg
and
mov
sbb
shlb
mov
and
pusha
add
imul
adc
pusha
pop
and
cmp
pusha
cltd
pushf
adc
loopne
mov
jmp
loopne
pop
inc
shrl
and
mov
fxam
mov
inc
adc
sti
dec
sahf
loope
pop
cltd
ret
cltd
out
movsl
mov
outsl
cmpsb
shlb
inc
int3
and
shlb
loopne,pn
sahf
repz
loopne
std
mov
add
sbb
andb
push
pusha
mov
pop
inc
call
xchg
and
xorl
and
jp
cmpsb
and
jl
mov
inc
pcmpeqd
loopne
pop
adc
movsb
addb
andb
or
mov
test
pop
mov
hlt
push
mov
dec
dec
ret
shll
mov
mov
and
pop
popf
and
and
cld
jmp
cmp
loopne
mov
jbe
gs
into
push
cltd
mov
je
das
cwtl
fstps
test
enter
dec
pop
sbb
inc
inc
lock
and
adc
jl
in
xor
and
add
cmpsl
pop
push
lea
jbe
jl
cld
and
add
pop
scas
pop
pop
jnp
popf
sbb
imul
jp
add
gs
js
mov
es
mov
addb
pop
adc
mov
pusha
loopne
xchg
sub
or
add
add
jg
lret
dec
jno
adc
mov
data16
push
inc
pusha
clc
and
cmpsl
lret
jp
cmp
inc
icebp
push
mov
inc
loop
xor
insl
mov
jnp
mov
pop
ds
in
sti
push
leave
xor
dec
loop
or
and
sub
lret
movsl
add
test
mov
subl
lods
push
cld
or
add
inc
or
in
andb
insb
fidivs
je
inc
lea
mov
sbb
cmp
rolb
test
add
call
cmpsb
inc
mov
xchg
rorl
shll
xchg
add
add
xorb
xchg
rclb
ja
jns
xchg
and
rol
add
aas
and
inc
mov
mov
aad
ja
cltd
push
inc
inc
insl
push
shrl
and
loop
addb
cmp
xchg
add
add
add
pusha
loopne
jmp
and
ret
xor
popf
jg
fildll
movb
adc
cltd
scas
pusha
add
imul
jg
jmp
ljmp
xchg
lret
and
jge
popa
cld
fidivl
xchg
and
incl
xor
pop
rol
pop
dec
js
ja
dec
push
pop
shl
push
test
xchg
lock
add
lock
dec
popa
sub
inc
sub
inc
inc
dec
add
pusha
inc
stos
test
sarl
shlb
fnstsw
mov
stc
xchg
test
loopne
and
mov
mov
adc
aaa
lods
add
and
aas
andb
push
and
inc
dec
inc
out
mov
rep
pusha
mov
push
out
sahf
and
mov
gs
xlat
sti
fs
lods
rolb
cmp
shl
xchg
je
inc
lcall
roll
jg
mov
add
mov
cmp
adc
cltd
xchg
cmc
mov
pop
mov
leave
mulb
xor
icebp
lock
int
add
inc
in
clc
fwait
ret
icebp
jge
xchg
cltd
aaa
fs
and
jg
cld
sbb
mov
enter
in
xchg
outsl
stos
mov
subb
and
pushf
push
lods
mov
add
imul
mov
push
mov
fidivs
inc
mov
inc
add
and
sub
and
jo
movsb
shlb
pop
jns
jns
adc
mov
pop
xchg
inc
cmp
insl
icebp
xor
fs
mov
inc
hlt
sub
cmp
icebp
jnp
dec
mov
lahf
cmp
out
arpl
loopne
cmp
pusha
rcrb
insb
imul
addb
test
fldl
inc
shll
mov
xlat
repnz
cmp
shl
adc
inc
test
pop
adc
inc
pop
ds
cmp
push
jmp
aad
loope
push
push
sbb
out
add
shlb
add
mov
rol
inc
or
stos
rolb
sbb
sbb
mov
enter
mov
dec
cmp
sbb
inc
loopne
aaa
dec
stc
sti
dec
mov
jg
loopne
movsl
imul
inc
sbbb
push
and
repz
lcall
jmp
inc
cld
adc
jb
dec
insl
push
push
imul
rolb
fwait
or
fisubl
mov
sbbb
icebp
lds
push
jle
fcoml
mov
pop
jns
enter
add
out
xchg
fistpl
int3
sub
inc
in
mov
stos
jno
sub
loopne
andb
add
shrb
jecxz
arpl
in
mov
mov
in
dec
fwait
jo
add
inc
rcrl
stc
aam
jno
sub
test
addb
in
mov
add
add
cmc
mov
addb
mov
add
xor
or
adc
cmpsb
shl
cmp
jmp
rcrl
sub
sti
lods
rclb
adc
loopne
and
mov
and
pusha
sub
inc
shufps
inc
lds
popa
gs
stos
add
xchg
xchg
push
dec
setno
adc
dec
push
scas
pop
popf
popf
addr16
ja
jae
mov
shl
xchg
jb
nop
xor
nop
repnz
push
sub
mov
stos
add
mov
pusha
scas
inc
inc
mov
ss
sub
loopne
pusha
pusha
data16
add
xor
add
sub
mov
pushf
jo
sub
inc
test
pusha
mov
aas
xor
rolb
mov
enter
sub
pop
xor
addb
cs
andb
pusha
xor
addb
xlat
xchg
cwtl
dec
mov
lret
push
fadds
fldcw
pusha
inc
cmp
inc
mov
mov
pop
aas
adc
push
popl
mov
and
scas
and
nop
sbb
loopne
xchg
mov
and
jmp
iret
sbb
ljmp
shl
jl
push
mov
das
add
stos
mov
pop
dec
inc
mov
push
pop
rcl
clc
imul
lods
add
in
shll
sbb
mov
jb
xor
shl
stos
shlb
pusha
inc
pop
test
inc
test
mov
arpl
sahf
and
xchg
xchg
orl
xor
scas
add
rcrb
les
and
lock
test
and
stc
icebp
push
loopne
jne
adc
and
pop
int
inc
and
aad
dec
jbe
push
imul
adc
movsb
add
cmpb
loop
mov
jecxz
imul
dec
cmp
scas
adc
cmp
rol
in
hlt
dec
jg
xor
add
movsl
add
jle
cmp
lds
xor
andb
cmpsl
push
adc
push
loopne
mov
cmpsl
dec
xchg
cmc
loop
or
addb
lds
and
push
mov
add
loopne
frstor
je
mov
clc
pop
xchg
sbb
iret
xor
sub
mov
iret
lds
xchg
pop
inc
push
test
pop
jne
int
lods
mov
xchg
push
dec
push
lods
cmc
jge
int
ret
and
jbe
and
xor
pusha
loopne
loopne
mov
pusha
xchg
or
and
jge
addb
mov
rcll
cmpsb
pusha
loopne
jo
adc
iret
in
mov
cmp
adc
int
lret
dec
pop
inc
imul
ds
add
fmull
inc
and
sub
pusha
loop
add
xchg
test
sbb
aas
shll
stc
stos
das
push
mov
sub
pusha
xchg
loopne
xor
inc
loopne
int
xorl
in
lret
xchg
push
adc
test
loopne
test
cmp
push
fnstcw
dec
jno
mov
addb
push
andb
cs
and
mov
and
addb
xor
clc
repnz
mov
lock
sbb
jne
shrl
loopne
push
mov
add
pop
sbb
je
add
and
fldt
addb
fstp
loope
cmpsl
lcall
js
jecxz
inc
and
adc
dec
dec
mov
lock
sar
aaa
std
add
shl
add
mov
loopne
push
jle
je
stos
inc
inc
jns
pusha
xchg
jge
data16
mov
push
and
mov
inc
lret
aas
mov
cmp
add
mov
addb
sub
mov
rcrb
outsb
add
add
push
pushf
xchg
jns
and
lret
enter
add
mov
lock
jmp
insl
adc
imul
push
adc
bound
loopne
loop
ret
push
sti
int
add
push
jge
repnz
andb
sbb
adc
add
test
adc
sub
pushf
outsl
inc
les
mov
jp
mov
jno
idivb
daa
adc
pusha
jg
jge
or
lods
push
or
mov
loopne
mov
movb
pop
rcrb
mov
inc
pop
std
push
mov
out
out
aaa
cmp
jmp
sbbb
and
fimull
ja
cwtl
jnp
jle
ret
push
mov
es
cmp
rorb
test
or
mov
bound
jb
outsb
mov
nop
std
xchg
pushf
into
add
stos
and
mov
loopne
mov
pop
icebp
mov
rcrb
nop
adc
pusha
shlb
push
fs
in
pop
jae
fs
xchg
jge
gs
cli
mov
mov
aaa
mov
xchg
aam
pop
jbe
movsl
jecxz
jmp
cmp
jo
mov
sbb
mov
pusha
inc
xchg
add
shrl
push
mov
sbbb
loopne
push
mov
out
lods
xorl
cli
imul
push
inc
sbb
and
pusha
inc
xor
inc
sub
mov
rclb
inc
pusha
iret
cmp
rolb
mov
xor
imulb
and
loop
sbb
sbb
pavgb
sub
pusha
ror
sbb
inc
inc
cmpsb
and
mov
jl
xor
repnz
sti
stos
loopne
shll
jno
xchg
pop
or
add
ret
fs
mov
push
data16
fnsave
mov
ficoml
cmp
lock
mov
add
lods
inc
sbb
and
inc
cmpsb
add
dec
shl
test
xor
pop
in
fmuls
mov
and
repz
push
jne
pusha
and
add
inc
jb
fs
mov
test
xlat
pop
and
rclb
sub
add
aad
pusha
loopne
jl
adc
push
cmp
inc
mov
out
mov
shlb
xor
test
inc
xchg
jecxz
out
je
push
mov
mov
mov
movl
add
testl
addb
int3
daa
movsb
shlb
sbb
inc
add
mov
lret
jne
push
addb
notb
xchg
and
inc
mov
sti
outsl
jecxz
cmpsl
sub
mov
mov
cmp
icebp
gs
jmp
inc
push
xchg
leave
aas
ljmp
dec
arpl
pop
cmp
hlt
nop
mov
or
mov
inc
mov
pushf
sbb
cmpsl
mov
fmulp
ror
sbb
xchg
loopne
pop
and
add
add
push
fnstsw
inc
xchg
pop
cld
inc
aam
adc
pop
mov
scas
pop
iret
sti
adc
add
andb
or
add
mov
add
cmp
pop
sbb
mov
xchg
fisttpl
push
dec
into
pushf
cwtl
in
add
pusha
and
jg
test
xchg
or
dec
add
add
push
loopne
dec
xchg
in
inc
imul
sub
mov
mov
mov
dec
mov
std
in
inc
inc
cvtps2pd
lods
add
mov
fistpl
push
xchg
sahf
jle
lock
mov
jmp
in
fisubs
movlhps
or
inc
add
inc
xchg
jp
mov
inc
cmp
loopne
lret
in
push
out
cli
lret
andb
add
xor
sahf
shlb
loopne
testb
adc
and
stos
int3
icebp
xor
mov
loopne
insl
sti
mov
pusha
lcall
mov
pusha
inc
or
jg
ror
repnz
in
loopne,pn
out
push
inc
push
pop
repnz
mov
int3
xor
incl
fdivl
fcom
cld
adc
cli
add
inc
lcall
clc
sbb
dec
addb
and
pusha
addb
inc
xchg
and
inc
in
js
cmpsl
inc
cmp
pusha
mov
dec
aaa
loope
push
or
loopne
sbb
rcrl
dec
push
fidivrl
add
inc
mov
daa
pop
or
add
decl
sarl
sub
pusha
imull
xor
add
ds
mov
push
mov
cmp
mov
mov
add
rolb
pusha
inc
ss
cmp
xor
shll
loopne
inc
add
pop
aam
lock
jbe
mov
and
addb
es
fnstenv
jle
aaa
clc
or
pop
testl
or
inc
pusha
inc
inc
outsb
movsb
pusha
subb
pop
fwait
xor
mov
mov
xlat
movl
loopne
inc
and
ret
shlb
and
ds
shll
adc
jle
xchg
jecxz
jge
and
shlb
add
nop
jle
jmp
add
dec
and
cmp
jl
and
aaa
inc
mov
test
mov
mov
inc
outsb
jbe
js
gs
or
mov
push
movsb
and
loopne,pn
xchg
popf
sbb
add
inc
sbb
iret
push
insb
sarb
and
or
jmp
insl
rol
push
pusha
cld
xor
mov
mov
stos
addb
arpl
shlb
dec
fsubrl
loopne
mov
hlt
repnz
and
mov
inc
xorb
xchg
xchg
dec
inc
fldt
add
and
ficompl
or
shlb
push
imul
inc
mov
sahf
mov
lret
test
fwait
mov
pop
xchg
shlb
push
imulb
pop
add
rol
jae
or
pusha
mov
jmp
ret
popf
mov
add
push
mulb
pusha
sub
adc
and
aaa
or
mov
rorl
or
and
rclb
and
mov
pushf
insb
mov
rolb
scas
clc
pop
xchg
xor
and
mov
clc
das
into
sub
sti
dec
mov
cmp
pushf
stos
mov
test
ret
icebp
xchg
push
pop
aam
mov
inc
cmp
mov
andb
subb
pop
jbe
test
rclb
shlb
lcall
fdivs
pop
fs
xchg
and
mov
rol
movsb
add
mov
pusha
add
das
shrb
sbb
std
int3
les
fsubrl
inc
data16
xchg
insb
cli
lds
addb
outsb
test
and
loope
dec
mov
sub
push
and
mov
stc
or
icebp
inc
iret
pusha
xchg
inc
sbb
pushf
cmp
and
stos
add
outsb
test
mov
pusha
fnsave
das
mov
push
jb
loopne
rcll
pusha
add
inc
lods
and
mov
aad
xchg
jp
xor
mov
pusha
mov
cs
dec
cld
loop
into
mov
rcrb
mov
call
int3
push
mov
pusha
inc
int
push
adc
and
pusha
mov
mov
sbb
xor
enter
in
fdiv
pop
xchg
rolb
pop
call
shlb
addb
out
fists
inc
in
outsl
adc
push
mov
inc
and
add
dec
dec
pop
add
ja
repz
sub
aas
outsl
add
mov
pop
loop
jo
into
mov
or
loopne
xlat
mov
cmp
pop
fldcw
push
xchg
jno
and
imul
int
xchg
addb
or
pusha
adc
adc
test
add
loopne
jae
pusha
or
fcoml
test
shlb
daa
pop
jnp
inc
loopne
ja
iret
loope
inc
leave
rcll
fucomp
lret
lret
pop
adc
adc
inc
and
in
aaa
aam
pop
adc
pop
mov
xchg
into
inc
push
add
mov
addb
or
test
shlb
insl
inc
out
jle
push
push
sbb
jp
push
add
lea
pop
dec
das
xor
adc
xchg
adc
cli
cmpsb
and
rclb
sub
pusha
loopne
mov
adc
sbb
adc
dec
xlat
pop
jne
and
stos
and
cmp
mov
lcall
jge,pt
xchg
push
gs
xor
loope
mov
mov
add
inc
bound
pusha
cli
jge
fdivr
or
pusha
enter
popf
push
aas
inc
xchg
mov
cld
pop
or
cli
pop
adc
xchg
cmpsb
rol
mov
and
ss
xchg
jg
xlat
sbb
pop
popf
inc
push
cmp
fwait
test
pusha
xchg
fsubrs
mov
xchg
into
and
aam
mov
cmpsb
andb
cld
mov
jmp
stos
jp
pusha
mov
sarl
or
fidivl
lret
dec
mov
pop
ret
fstl
shlb
aas
xchg
aas
push
shl
push
int3
pop
inc
mov
or
and
jae
mov
add
js
add
test
cmp
and
sub
mov
scas
xor
loopne
dec
pushf
jno
fcoml
add
addr16
xlat
out
inc
fstpl
loopne
mulb
imul
loopne
mov
test
fdivl
jbe
pusha
xorb
lock
pusha
dec
cmp
cld
rclb
add
mov
mov
push
mov
fldcw
sub
mov
es
and
add
addb
xor
mov
add
or
data16
or
and
inc
sbb
jae
nop
push
add
shll
imul
ds
mov
mov
xchg
mov
pop
xor
insb
dec
stc
dec
out
sub
in
sbb
int3
xchg
loopne
inc
pusha
xor
mov
lret
fbld
push
cmp
inc
mov
loopne
xchg
scas
inc
pusha
add
shl
out
cli
daa
movsl
repz
lods
std
jecxz
inc
cltd
mov
nop
mov
mov
cmp
jne
xchg
mov
das
jl
insb
push
imul
std
test
add
out
mov
mov
dec
fs
jge
jb
test
xorb
shlb
sub
int
cwtl
jo
adc
add
sti
jno
dec
loop
fwait
mov
mov
mov
adc
loop
mov
inc
sbb
test
inc
xchg
xchg
mov
loopne
jo
jno
mov
add
cmp
mov
cmp
repnz
push
mov
mov
mov
adc
faddl
jmp
fs
cmp
div
stc
subl
loope
mov
ret
es
mov
and
punpckhwd
out
lock
decb
sub
adcb
add
in
inc
fisubrs
xchg
or
mov
pusha
lahf
rolb
rolb
int
pusha
mov
pop
repz
mov
mov
and
mov
sub
loopne
clc
push
add
mov
jp
fidivl
stos
enter
jbe
mov
repz
mov
and
test
ss
jge
pop
fidivrs
cltd
cltd
mov
ja
aaa
gs
pusha
mov
inc
xorb
cltd
loop
movsl
push
dec
mov
into
jne
roll
mov
testb
inc
andb
and
or
les
test
adcl
and
mov
cmp
xor
fs
shll
adc
pushf
fsubl
fs
fwait
adc
mov
sub
and
movsl
xor
lahf
jnp
popa
subl
mov
pop
ret
or
loopne
in
cmp
and
movsl
jno
xor
test
sbb
fwait
adc
inc
repnz
cmpsb
loopne
mov
and
mov
lods
xor
mov
pusha
xor
jno
push
testl
test
mov
inc
mov
sti
fstpt
pop
jns
aad
daa
jnp
pop
xchg
movsl
inc
jbe
inc
pusha
es
sbb
scas
fisttpll
mov
jb
and
mov
push
popa
xor
jg
push
or
add
inc
add
jg
xlat
jg
mov
shll
movsl
dec
mov
and
sbb
mov
and
loopne
lea
call
inc
sbb
pop
jle
and
add
ds
aaa
sub
pop
loopne
push
mov
push
enter
mov
pusha
cmp
pusha
loopne
lods
loopne
and
cmp
insl
lods
inc
pusha
adc
pop
cmp
mov
enter
xor
mulb
inc
adc
scas
push
movsl
mov
jne
je
aad
and
and
lahf
mov
xchg
mov
rol
fcomps
mov
stc
stc
xchg
inc
adc
pop
push
xlat
jb
jne
jl
loopne
sbb
inc
orb
inc
in
mov
cltd
push
or
pusha
mov
add
xchg
dec
mulb
in
ja
pop
push
dec
xor
jnp
cli
and
pop
push
push
bound
fdivl
or
cld
icebp
mov
inc
mov
sub
test
fldenv
mov
inc
addb
xchg
pop
shl
js
inc
shlb
xchg
inc
cmp
mov
mov
insl
rolb
push
dec
idivb
pop
add
jnp
pop
jmp
loopne
out
rolb
stos
pusha
and
repnz
js
inc
add
pusha
or
stc
jbe
cld
aas
pop
sub
add
jno
mov
out
or
mov
sub
loopne
jb
mov
divb
mov
sub
mov
or
push
mov
push
cmp
adc
sub
test
rorb
mov
and
pop
enter
inc
loopne
and
mov
loopne
dec
arpl
pushf
cmpl
push
iret
rclb
movsl
ja
xchg
add
xor
inc
inc
mov
pusha
sahf
in
dec
push
rcrb
pop
adc
scas
andb
fsub
icebp
popa
and
pop
push
jmp
mov
add
jne
loop
xchg
sub
add
add
rolb
pusha
test
mov
cmp
je
mov
jb
addr16
test
sti
pop
mov
and
add
mov
ja
fcos
adc
movsb
rolb
mov
test
addb
into
sahf
sub
add
mov
add
or
push
dec
in
dec
out
rolb
test
add
ror
mov
dec
dec
inc
push
pop
js
inc
imul
imul
clc
push
mov
lahf
cmpsl
or
pop
icebp
fisttpl
pop
int
syscall
fwait
cmpsb
pusha
and
nop
out
bound
cltd
mov
lock
inc
out
add
jb
inc
sbb
or
lock
into
shll
add
mov
lret
jae
xchg
nop
cmc
xchg
xorl
sbb
cmp
mov
shlb
mov
or
mov
and
mov
pop
mov
inc
add
add
xchg
push
sbb
rol
add
cwtl
mov
pop
in
gs
arpl
push
dec
inc
mov
sti
or
in
in
dec
std
jae
push
mov
mov
ss
sbb
add
dec
ljmp
mov
mov
loopne
loopne
lods
int3
mov
int3
jb
and
sahf
cmpsb
rolb
loopne
stos
and
lods
inc
popa
or
pusha
shlb
xchg
pusha
leave
test
dec
dec
inc
outsb
xchg
pusha
daa
sub
sbb
jge
aas
das
aaa
add
ss
pop
jno
fstpl
add
notl
lods
loopne
or
sub
add
loopne
lock
mov
shlb
fisttps
inc
mov
pusha
inc
mov
in
loopne
bound
cmp
fs
in
aaa
cltd
cmp
adc
loope
cmp
inc
loopne
mov
mov
imulb
in
inc
add
loopne
test
loopne
inc
and
int3
test
cmp
mov
nop
das
popa
stos
inc
jne
mov
and
xchg
sbb
and
cli
xor
leave
out
aad
pusha
xor
test
mov
in
or
inc
mov
loopne
fldl
lock
ret
jle
xchg
mov
loopne
or
mov
jns
mov
int
lea
and
js
mov
loopne
je
adc
loopne,pn
dec
jae
out
lds
add
sbb
or
loopne
bound
addb
xchg
mov
aam
stos
and
inc
dec
add
addb
outsl
outsl
inc
out
xchg
mov
or
and
fiaddl
mov
lods
dec
arpl
xlat
lcall
and
rolb
movsl
testl
ret
iret
mov
jnp
add
lds
hlt
or
add
add
imul
pop
out
daa
push
dec
mov
mov
lea
in
fsts
xchg
mov
fsts
adc
stos
pusha
orb
loopne
sub
add
ftst
pop
aam
int3
pop
jl
leave
cmpsl
jle
jp
sbb
repz
cmpsb
rolb
mov
scas
pusha
addb
inc
inc
cltd
lods
and
data16
aaa
fbstp
sarb
popf
mov
addb
inc
orb
add
jge
or
shll
ss
divb
subl
scas
and
mov
mov
ficomps
or
pusha
pop
sbb
rcll
and
mov
pusha
add
push
cli
addl
cmp
cli
fidivrl
mov
pusha
jp
push
in
or
lods
bound
testl
and
mov
mov
rolb
pop
mov
cltd
dec
inc
add
inc
inc
ret
mulb
popa
addb
pop
sbb
add
loopne
and
xchg
lret
cmc
scas
aad
loop
into
add
addb
lea
push
fidivl
mov
bound
pop
and
pusha
addb
mov
sub
add
jmp
adc
xor
aad
shr
ds
sub
add
add
jl
add
mov
dec
add
pop
push
inc
pop
cmp
pop
faddl
fs
imul
sbb
sahf
xchg
and
orb
pop
jmp
into
sbb
out
and
pusha
je
fildl
pusha
andb
lods
shlb
dec
sbb
lcall
and
ds
jns
rol
mov
jbe
stos
jbe
cmp
add
popa
mov
pusha
mov
mov
mov
addr16
mov
movsb
loopne
pop
jnp
pop
sarb
cmpsl
pop
mov
dec
cmp
sub
xorb
mov
and
dec
dec
mov
mov
jno
aaa
dec
in
push
in
aam
icebp
mov
popa
add
outsb
in
sarb
inc
mov
mov
inc
into
sahf
adc
mov
inc
add
enter
xchg
shlb
aad
cwtl
push
add
pusha
shlb
inc
loopne
movsb
addb
xor
jae
mov
jmp
inc
jb
in
jmp
pusha
shlb
sub
add
add
mov
xchg
addr16
sbb
fsts
pushf
leave
inc
xor
cmp
dec
cmp
xor
pop
sbb
add
xor
pusha
pusha
and
mov
inc
sahf
les
orb
loopne
mov
pusha
mov
add
mov
lcall
jae
sub
jle
test
lret
mov
cmp
sbb
cmp
dec
jl
inc
push
lret
mov
fidivrs
and
movsbl
add
pop
test
scas
or
pop
insb
or
int3
mov
loopne
ja
test
aas
jns
cmp
movsb
add
cltd
aaa
aam
or
cmc
js
push
mov
fnstenv
loopne
sti
popf
jle
fldt
out
nop
fcmove
iret
jnp
loopne
fisubrl
mov
or
ret
shl
rclb
fcompl
xor
rclb
jl
lods
call
jg
add
cmp
dec
dec
popa
pop
arpl
add
sbbb
bound
xor
ja
mov
lret
sub
test
loopne
push
or
jle
fisubrl
ret
adc
rorl
mov
je
daa
das
mov
jecxz
andb
ljmp
mov
gs
insl
int
aam
xchg
jo
add
pop
iret
xchg
cld
xorl
pop
push
dec
lock
xor
dec
and
mov
and
imulb
andb
sbb
sarb
jo
shl
nop
das
out
dec
cmp
sbbl
int
push
mov
and
sbb
jg
pop
pop
fstpt
cmp
and
inc
mov
ror
ficompl
dec
cli
mov
mov
clc
inc
mov
loopne
ljmp
addb
mov
sub
inc
test
pop
cld
xor
call
mov
in
pop
addr16
push
pop
std
xchg
adc
lds
fisttpl
push
sbb
and
xchg
xchg
jp
sar
xorl
addb
push
jg
lods
pusha
and
movsb
and
je
sub
shrb
fldt
add
lret
pop
insb
xlat
fdivl
jmp
sub
mov
verr
andb
subb
and
ficomps
push
xchg
stc
in
push
loopne
push
mov
and
mov
shl
or
inc
xor
sub
mov
inc
and
cmpsb
mov
insl
fcompl
push
addb
push
sub
loopne,pn
mov
jbe
mov
rcrb
test
add
in
inc
add
loopne
pusha
pusha
inc
inc
jnp
add
lcall
pop
pop
inc
or
sub
aas
in
jge
mov
jnp
pop
jge
and
mov
push
repnz
adc
sbb
push
xor
push
mov
decb
jae
out
sub
add
pusha
loopne
clc
es
sbbb
and
pop
inc
xlat
sbb
and
pop
sub
mov
cmp
sub
add
mov
orl
mov
adcl
test
test
inc
or
inc
jge
jb
mov
xchg
mov
mov
pop
call
inc
adc
inc
mov
or
lods
shlb
push
push
addb
test
leave
pusha
in
cli
movsl
jg
sbb
movsl
popa
jns
mov
popa
aad
outsb
mov
mov
fwait
sub
loopne
in
std
push
mov
add
sahf
jp
add
loopne
test
and
clc
leave
xor
push
cmp
outsl
clc
ret
dec
movsl
stc
pop
ljmp
sbb
imul
in
mov
mov
mov
dec
mov
loopne
add
lea
push
and
int3
mov
loopne
ja
push
rolb
in
mov
cmpsb
loopne
jns
mov
push
mov
setg
enter
pusha
mov
stos
and
mov
mov
out
fisubl
gs
data16
loopne
jo
adc
sbb
dec
sbb
mov
icebp
dec
jg
inc
pop
aas
psubd
xchg
and
add
ja
xchg
sub
movsl
ret
cmp
rolb
pusha
add
mov
jecxz
inc
mov
stos
loopne
mov
adc
lahf
stos
rolb
xchg
rorb
dec
xchg
pop
lret
and
or
inc
mov
lret
push
pop
sub
mov
inc
lahf
add
cld
cmp
mov
xchg
test
and
and
addr16
push
inc
movsb
mov
sahf
insl
mov
mov
mov
adc
pop
sbb
sub
loopne
xchg
pusha
dec
out
lods
mov
adc
fcmovnu
loope
out
and
sbb
add
adc
ja
scas
aas
out
gs
andb
in
sub
icebp
addb
pop
out
jl
addb
ss
mov
fsubl
pusha
pusha
inc
cmp
push
and
dec
push
lret
ret
pop
movsb
pusha
rcl
xchg
das
inc
sbb
and
rcrb
jae
dec
scas
cmp
xchg
test
sbb
pusha
andb
and
pusha
mov
fldcw
mov
sub
pop
stos
andb
inc
shll
addl
and
cmc
cmp
cwtl
dec
repnz
pushf
add
add
inc
jne
lods
ds
mov
repnz
sub
sub
or
hlt
adc
lds
jb
sub
mov
and
xor
in
jno
or
and
sub
xchg
loopne
je
push
cmp
addb
aaa
mov
mov
xor
lods
and
jmp
and
and
shr
and
loopne
in
dec
out
lahf
sbb
jo
popa
icebp
mov
sbb
xchg
sbb
jecxz
shlb
scas
andb
fucomp
or
fldenv
adc
test
int3
icebp
repnz
mov
jns
xor
and
and
jmp
cmp
cmp
xchg
sbb
xchg
ds
sub
jns
call
and
fisttps
rolb
add
jnp
dec
in
and
add
int3
sarl
mov
cmp
and
je
loopne
push
inc
or
pop
test
add
fisttpl
pop
and
or
je
ja
and
movl
inc
addb
add
in
shlb
mov
adc
idivb
xchg
ror
sti
xchg
sbb
cmc
mov
lcall
lcall
mov
add
imul
and
xchg
clc
dec
mov
int3
lcall
push
cwtl
lods
inc
inc
pop
test
loopne
cmp
pop
xchg
xor
popa
test
mov
jmp
fistpl
daa
cmc
xchg
fadds
pop
andb
add
sar
loopne
andb
xchg
add
inc
cwtl
aad
cmp
jecxz
inc
add
jp
pop
jo
mov
jb
insb
and
pop
movsb
shlb
push
ds
sbb
repnz
inc
mov
insl
aaa
pop
push
push
loopne
mov
lret
fdivrl
rcrb
pop
sbb
cmp
push
dec
xor
mov
cli
inc
sub
lods
outsb
daa
rolb
and
mov
xchg
movsb
and
and
mov
add
add
dec
mov
push
call
dec
mov
mov
addr16
inc
mov
pusha
ror
inc
pusha
sub
inc
jl
push
pop
int3
pop
and
xor
inc
jle
andb
loopne
sub
mov
sarb
add
mov
mov
push
das
dec
and
rcr
cld
jbe
dec
int
push
and
inc
inc
inc
cmp
xor
push
rolb
out
xor
out
push
adc
jae
jmp
and
ds
mov
adc
dec
mov
cli
xchg
mov
sbb
push
repnz
push
xchg
insb
dec
fucomp
push
and
adc
dec
inc
test
xchg
xor
mov
cmpsl
mov
sub
mov
out
cmpsl
pop
popa
movsl
sub
fiaddl
mov
sub
add
cmpsl
aas
sub
andb
outsl
push
pop
mov
shlb
xor
xor
cmpsl
mov
not
sub
xchg
add
push
mov
lea
cmp
push
stc
bound
add
shlb
leave
orl
add
shlb
mov
pop
mov
fistps
add
aaa
sbb
mov
pusha
mov
dec
fstps
into
dec
mov
shll
push
popf
jae
pushf
in
loopne
dec
jne
sbb
cmp
pop
stc
imul
and
ja
or
rol
pusha
and
dec
or
mov
push
nop
aas
ljmp
jp
shlb
mov
inc
out
mov
add
inc
mov
sarb
mov
out
imul
ds
inc
ds
addb
rolb
mov
sarl
ljmp
and
jnp
dec
jl
sbb
add
loopne
out
imul
lea
icebp
mov
jns
icebp
mov
std
fcomps
in
jg
les
pop
imul
and
add
loopne
mov
inc
shl
and
mov
pop
les
aad
mov
sub
inc
inc
push
out
fdivs
mov
xbegin
cld
lahf
or
and
add
inc
sub
pusha
xchg
iret
cmpsl
adc
adc
lcall
adc
andb
pusha
loopne
xchg
fwait
bound
les
pop
and
adc
imul
lahf
ja
movsb
mov
mov
aam
fdiv
test
movsb
shlb
inc
loop
js
andb
add
dec
fcmovu
mov
addb
sbb
inc
or
sbb
push
add
call
jge
jbe
fldl
sbb
aam
push
loopne
cli
clc
jp
and
and
fisttpl
mov
add
mov
or
lods
pop
push
out
and
inc
in
jae
in
mov
xlat
mov
jbe
dec
sub
in
and
bound
int
shl
xor
mov
fcompl
sub
arpl
push
inc
rcl
out
pusha
shlb
dec
es
shlb
inc
subb
mov
pop
pop
fs
int
inc
add
jmp
add
mov
shrl
sbb
xchg
lods
cmpsl
mov
sub
push
or
pusha
pusha
in
mov
adc
mov
pusha
xorb
jmp
and
ja
sbb
insb
lea
addb
and
sub
aam
fstl
pop
cmpsl
pop
sahf
mov
xchg
fcomps
addb
mov
sbb
lcall
inc
mov
hlt
mov
icebp
adc
clc
lret
and
jb
push
mov
and
loopne
lock
jae
jnp
add
cmpsb
inc
pusha
in
adc
loopne
xlat
and
xor
add
mov
mov
rolb
inc
popa
cltd
rol
mov
ss
cmp
dec
lret
dec
cwtl
dec
arpl
cmp
mov
ret
push
andb
pop
shlb
movsl
xchg
ds
lahf
sub
add
filds
fimull
adc
aad
loope
into
adc
shlb
pop
xor
push
rolb
and
loopne
stos
loopne
dec
cmp
cmc
fisubs
inc
adc
adc
or
sbbl
push
xor
push
popa
push
push
shlb
mov
movb
cmp
or
leave
sbb
jle
xchg
add
add
out
lods
and
gs
mov
scas
loopne
int
and
clc
sbb
and
push
sti
fdivp
xchg
and
push
add
push
dec
sub
adc
dec
xor
test
inc
cli
mov
jge
push
fsubrl
inc
jnp
scas
pop
repnz
std
fists
aam
loop
mov
jns
xchg
and
into
inc
xchg
add
adc
cmp
and
in
call
push
insl
out
pop
mul
pop
loopne
or
lds
subb
aad
xchg
inc
push
and
pop
mov
inc
neg
stos
gs
xor
push
sbb
stc
xchg
mov
and
mov
or
inc
aam
testl
lods
mov
mov
rclb
movsb
mov
clc
xor
add
dec
and
adc
mov
mov
je
xor
add
fimull
cmp
js
in
aad
jno
shl
sahf
add
mov
add
jge
ret
ret
jecxz
jnp
cmp
rclb
imul
xor
in
stc
cmovs
mov
enter
and
push
aad
test
sbbb
loope
sub
popf
xchg
and
and
cmp
mov
mov
xor
cwtl
andb
mov
dec
fnstcw
mov
sub
mov
ljmp
fdivrl
rcr
je
push
dec
jb
jo
loopne
out
das
mov
cwtl
cltd
je
sti
clc
mov
and
dec
xchg
cld
push
cltd
cmc
push
pusha
stos
inc
loopne
adc
cmpsl
mov
xor
xchg
in
adc
lds
lods
pusha
pusha
repz
jb
divb
inc
inc
outsb
out
cmp
push
loopne
sbb
in
xchg
imul
or
mov
cmpsl
sbb
clc
inc
inc
or
xlat
pop
std
push
popa
xchg
jecxz
frstor
aas
daa
mov
mov
subl
mov
inc
outsl
mov
inc
jo
cmp
sub
mov
adcb
scas
and
jb
movsb
add
inc
cmp
leave
pop
rcrb
icebp
inc
push
repz
and
sbb
lea
jg
les
jns
push
inc
add
and
stc
jne
pop
inc
cmc
jle
adc
adcb
or
andb
and
arpl
dec
ja
mov
pusha
add
insl
outsl
lock
xchg
mov
xor
fwait
ja
mov
mov
add
sub
adcb
shlb
mov
push
loopne
sub
or
mov
xchg
jl
iret
mov
fcmovbe
push
loopne
push
ja
sub
rolb
mov
xchg
loope
mov
add
nop
addr16
rorb
cmpb
out
pusha
loopne
cmpsb
and
jbe
rcr
cmpsl
adc
mov
ret
int3
dec
jnp
pusha
loopne
xor
sarl
lret
les
ret
mov
pusha
add
gs
loopne
mov
add
addb
pop
xor
movsl
lcall
punpckldq
bound
add
and
lock
stc
push
movsl
adc
outsb
pop
cmpsb
add
add
adc
ss
mov
rcl
lcall
xor
push
mov
add
xchg
sahf
movsl
movsb
rolb
movsb
and
call
jmp
stc
imul
sub
sarb
loopne
out
loopne,pn
dec
nop
jns
adc
push
or
xorb
addb
fcoml
lock
icebp
in
aam
xchg
in
dec
push
and
addb
sub
inc
add
pop
outsl
mov
inc
sub
and
add
inc
fisubs
add
mov
outsl
cmc
sbb
int3
add
or
mov
pusha
enter
add
mov
mov
fidivrl
cmc
in
push
xor
and
fxch
adc
sub
push
inc
and
loopne
sbb
pusha
loopne
imul
push
inc
rclb
xor
pusha
xorb
out
into
sti
dec
in
pusha
pusha
sbb
add
mov
inc
mov
inc
jecxz
test
add
mov
mov
xor
in
inc
lret
loopne
mov
sbb
out
cmp
leave
pop
cmp
jge
push
loopne
out
lds
cwtl
dec
jns
inc
mov
inc
rolb
add
andl
fs
pusha
cmp
jmp
mov
cwtl
insl
or
mov
mov
out
add
loopne
std
je
fnstenv
fldt
mov
or
ror
adc
jne
shlb
mov
ljmp
mov
clc
xchg
dec
and
add
xlat
and
cmpb
fcoml
or
and
push
fsubp
pop
adc
aaa
sub
pusha
ja
mov
int
ja
insb
popa
push
sub
addb
xorb
das
pop
sub
mov
loopne
mov
mov
stc
dec
repz
sbb
xor
lods
push
fs
mov
mov
rclb
sub
loop
lret
pusha
push
dec
scas
add
aam
and
pop
or
pusha
xchg
xchg
jmp
or
enter
xchg
pop
jecxz
rol
inc
cltd
mov
mov
test
out
adc
and
je
loopne
adc
aam
cmp
cmp
xchg
and
nop
rcl
pushf
movsl
in
out
test
pusha
pop
rolb
xor
scas
inc
sbb
rolb
lret
lret
pushf
xlat
mov
sbb
lcall
xchg
inc
add
inc
pop
inc
add
sarb
or
and
cmpsl
fucomi
sbbl
pusha
mov
leave
adc
inc
loopne
out
add
mov
cwtl
or
inc
js
adc
je
insl
test
and
mov
jae
cmpsb
pusha
shrb
inc
fldenv
gs
mov
mov
loopne
outsl
lock
cmp
popf
loop
xor
xchg
adc
jge
jle
dec
mov
pop
hlt
and
xchg
inc
add
jae
jne
cmpsl
mov
into
jb
in
sbb
loopne
mov
int
out
push
addb
pusha
sbb
stos
push
sbb
xor
dec
roll
add
add
adc
loopne
int
xor
imul
imul
and
lods
ljmp
push
inc
and
mov
inc
outsl
jne
add
and
inc
repz
add
cltd
loopne
in
xor
cmp
inc
sbb
adc
add
mov
inc
loopne
jae
xchg
and
hlt
daa
jo
jno
mov
rolb
jns
mov
or
mov
repz
and
mov
lsl
jae
popa
les
jmp
popf
dec
cmp
int3
push
add
jns
lock
shl
dec
adc
rolb
out
andb
mov
mov
cwtl
jmp
add
jecxz
add
add
cmpsb
and
arpl
out
and
add
jle
repnz
filds
and
out
push
inc
addb
lahf
sub
and
out
call
inc
cmp
in
sub
pop
lea
add
mov
or
loope
xchg
mov
insb
outsb
lcall
data16
pusha
ljmp
aas
jg
pop
push
nop
inc
jg
lcall
mov
lods
pop
mov
outsb
mov
push
push
cltd
inc
mov
push
std
popa
and
fistpll
pop
xchg
pop
mov
add
mov
xor
out
pop
jae
push
mov
jne
mov
push
fucomp
clc
out
fidivrl
xor
and
and
movsl
lret
and
mov
sub
jns
ret
inc
xor
push
mov
les
lret
into
inc
sbb
aad
mov
inc
loopne
push
and
pusha
and
lret
loopne
pop
gs
cwtl
lret
ds
mulb
mov
in
movsl
cmp
push
mov
and
mov
rolb
sbb
mov
adc
xor
pop
inc
dec
xor
mov
mov
pop
mov
in
andb
pusha
adc
and
ror
pop
cmp
jp
cmp
mov
ret
loopne
dec
adc
add
ss
shlb
outsb
sbb
mov
mov
rolb
insb
lcall
loop
pop
sub
and
lds
cmp
sub
shrb
sti
cmp
and
pusha
xlat
sbb
fst
arpl
cmp
ja
insl
xor
mov
jmp
adc
xchg
pop
add
and
enter
push
add
shlb
mov
xor
mov
ss
ss
imul
pop
dec
mov
lock
jnp
pushf
test
pushl
mov
xor
jnp
lcall
add
cli
iret
jns
inc
cmp
fistl
enter
jbe
pusha
sbb
lea
cmp
das
lds
pop
dec
lea
mov
jg
dec
mov
rcrb
loope
popf
mov
push
or
orb
push
mov
mov
iret
cmpsl
pop
adc
add
push
rcrb
ss
and
rorb
mov
pop
mov
addb
call
outsb
call
clc
sub
imul
pop
fisubl
adc
in
mov
sarb
xor
sub
mov
xor
push
push
cmp
or
rcrb
pop
mov
das
xor
cmp
ror
lods
sub
push
pusha
pusha
adc
arpl
scas
jle
jae
rcrb
xchg
xchg
and
push
jge
and
stos
mov
cltd
out
inc
inc
dec
jne
imul
inc
fs
add
xchg
aad
mov
cmp
pop
addb
in
aad
cwtl
mov
inc
and
mov
in
pop
lcall
mov
add
xchg
mov
data16
sub
inc
and
add
aam
add
add
pop
push
ficomps
adcb
push
mov
inc
inc
sbb
inc
mov
or
pop
xchg
std
mov
loopne
jl
xchg
test
cmp
sub
loopne
shl
dec
and
and
pusha
and
shrb
push
outsb
loopne
jnp
add
vmwrite
and
in
scas
mov
inc
ljmp
xchg
or
shlb
loope
nop
xchg
adc
cmp
fcomp
mov
shrb
xorb
gs
outsb
jmp
push
and
shrb
pop
mov
out
xorl
push
ret
mov
mov
andb
popf
cld
cmc
pop
push
add
cld
in
out
mov
and
es
jp
inc
cmp
into
mov
inc
add
lds
inc
movsl
aam
inc
shl
xchg
xchg
fs
xchg
sub
jmp
inc
mov
xor
jge
test
cmp
sub
and
loopne
mov
outsl
clc
inc
rorl
scas
add
cmp
dec
mov
filds
or
rolb
xlat
cmc
daa
xor
pop
mov
add
pusha
sahf
xchg
and
and
lock
inc
jnp
adc
popf
nop
data16
pop
mov
mov
addb
pop
mov
mov
adcb
loopne
bound
inc
repnz
xor
gs
aam
mov
mov
mov
cld
adc
mov
cwtl
push
sub
inc
imul
ret
push
andb
adc
insl
jle
lret
lds
out
repnz
repz
int3
push
mov
add
cwtl
loopne
xor
mov
and
cmpb
loopne
inc
rcrb
sarb
ret
fcoms
repnz
out
repnz
out
ds
fstpt
cltd
inc
addr16
xchg
or
add
in
sbb
mov
inc
adc
addb
xor
out
xor
pop
adc
dec
mov
add
mov
int
jb
mov
lods
loopne
dec
movl
icebp
jae
sub
and
loopne
and
mov
mov
mov
sbb
enter
inc
and
push
mov
shlb
cltd
addr16
stc
push
lcall
pop
cmpsl
xchg
imul
mov
push
mov
int
insl
rorl
xor
and
adc
pusha
shlb
inc
sbb
dec
xchg
sbb
repz
or
add
loope
pop
test
cwtl
dec
cmpsl
adc
mov
add
cli
bound
rolb
pusha
mov
mov
inc
subb
xlat
inc
or
jl
es
or
aaa
dec
mov
adc
xor
jge
js
adc
shlb
mov
es
subb
mov
loopne
insl
aas
int3
lock
xor
add
repz
lock
movsl
or
inc
pop
adc
jg
js
scas
inc
loopne
mov
xchg
iret
push
sub
adc
cmp
loopne
jnp
lea
pushf
hlt
jge
mov
fsts
clc
add
or
pusha
sbb
inc
imul
mov
int
cwtl
test
in
loop
inc
pusha
enter
and
and
outsb
loop
pop
cltd
sub
shl
mov
loopne
aad
push
cli
add
dec
lahf
adc
jnp
xor
and
cld
cs
jge
pop
mulb
out
and
mov
xchg
mov
jo
jbe
imul
push
stc
dec
dec
push
jns
cmpsl
push
popf
jecxz
push
mov
std
clc
pop
loop
sub
sarb
fwait
inc
jp
mov
or
push
cmp
xor
in
divl
xlat
orl
mov
orl
mov
shl
mov
mov
pop
mov
pop
push
or
pop
out
jcxz
outsb
and
inc
add
int3
jo
jle
jb
loopne
push
and
leave
pop
out
push
jae
xor
pusha
mov
mov
ljmp
xchg
sbb
pusha
dec
mov
jno
xchg
rclb
shrb
stc
add
xchg
add
sahf
mov
cwtl
jl
rcrb
fldl
and
or
pusha
inc
ds
mov
mov
imul
mov
rcrl
or
shr
adc
imul
and
arpl
rorl
push
icebp
dec
or
cmp
pusha
add
jmp
jno
push
cwtl
push
aaa
adc
sbb
ficoml
jecxz
xor
jl
add
add
mov
es
rolb
xchg
sub
mov
mov
cltd
ja
and
dec
lret
and
call
loop
pop
xor
mov
out
mov
test
add
jmp
in
lcall
pusha
rorb
loopne
mov
mov
sar
movsb
loopne
ret
jns
pusha
loop
pop
fcom
jge
dec
jne
test
addb
rol
add
std
jb
xchg
xor
cmp
loopne
push
rcr
and
rorb
xchg
call
popa
das
jbe
popa
cltd
ja
dec
rep
pusha
mov
loopne
mov
pusha
sarb
mov
add
mov
sub
addb
jg
call
xchg
cmp
fs
mov
mov
loopne
inc
mov
in
mov
loopne
cld
pop
xchg
ds
js
loopne
movsb
mov
adc
rcll
push
adc
movsb
shl
inc
out
inc
pop
mov
inc
cwtl
jne
mov
loopne
or
mov
nop
mov
clc
and
add
jns
shlb
rclb
mov
test
scas
cmpsl
loopne
imul
mov
dec
xchg
mov
xor
and
popa
pop
xchg
jmp
pop
ret
in
mov
imul
sarb
imul
fstp
xor
sub
sarl
rcrl
fucomip
inc
pop
cmpl
push
mov
loopne
mov
mov
cmp
rolb
jle
push
scas
and
pop
cmp
pop
loopne
or
aas
lret
lret
xlat
dec
movsl
cld
pop
out
sbb
lea
or
and
adc
jmp
lahf
sbb
pop
adc
jmp
mov
jmp
cmp
les
imul
or
pusha
inc
imul
mov
push
mov
dec
and
pusha
add
add
inc
pop
in
jecxz
dec
inc
mov
inc
ljmp
mov
xlat
sub
data16
inc
xor
mov
inc
andb
push
xchg
mov
jb
stos
mov
inc
int3
xchg
cmpsb
add
adc
add
pop
jle
push
dec
push
pop
jno
call
push
xchg
dec
addr16
dec
mov
outsl
add
mov
and
sub
stc
push
mov
mov
lcall
push
loope
aaa
dec
mov
sbb
sub
sub
inc
pusha
cmp
pusha
and
loopne
jb
imul
mov
mov
adc
addb
push
sbb
pusha
loopne
gs
dec
cmp
or
and
jae
rolb
jae
lret
jnp
jmp
mov
and
inc
aad
loopne
jbe
xchg
dec
aad
jo
add
daa
mov
outsl
cmpsl
les
mov
sbb
add
pushf
jns
jecxz
sub
inc
and
mov
or
jo
ss
aam
lcall
out
addb
orb
std
sub
mov
xchg
xor
sbb
loopne
fwait
jb
inc
and
jmp
and
fstp
outsb
pop
pushf
negb
das
movsl
fsubrp
enter
sub
jp
mov
mov
not
sbb
cmp
sub
or
out
cwtl
inc
lret
add
and
mov
pusha
ljmp
sahf
fucom
idivb
mov
lods
mov
int3
add
jbe
mov
fstps
pusha
movsb
rolb
cmp
mov
rolb
pusha
and
rcl
popf
gs
and
loopne
ss
pop
dec
xor
pop
pushf
adc
lods
pop
leave
sub
ja
ss
xorl
add
sub
lods
pusha
out
lret
jmp
cs
mov
push
dec
fldl
loopne
scas
pusha
sarb
lahf
call
pop
mov
jo
ficoms
push
inc
mov
shrl
lds
xchg
xor
xorl
mov
js
jmp
pop
mov
mov
nop
das
pop
pop
int3
mov
mov
pop
inc
jne
aas
sub
and
rorb
addb
test
inc
dec
mov
pusha
xchg
rol
js
xchg
imul
mov
push
movsb
add
pop
and
mov
mov
in
add
sbb
or
and
pusha
mov
notb
pop
sbbl
add
mov
iret
sub
pusha
and
mov
pop
in
and
push
adc
jl
arpl
mov
popa
imull
jne
ljmp
pushf
mov
mov
mov
test
or
inc
pop
mov
xlat
or
xchg
sarl
lock
loopne
stc
sub
pusha
div
fsubrl
pusha
and
hlt
pop
mov
jge
inc
pusha
jns
inc
and
cmp
shl
outsl
outsl
push
lcall
jmp
out
les
cmpsl
cltd
dec
dec
xor
and
push
xchg
movsl
adc
loopne
lods
sbb
mov
subb
inc
dec
fwait
xchg
ret
fucom
mov
repz
shl
out
cmp
in
push
movsb
inc
and
popa
mov
shlb
rclb
ss
xor
shll
jo
xlat
and
test
adc
loopne
pmovmskb
push
cli
mull
ja
inc
pop
andb
cmp
les
pusha
inc
or
inc
bound
or
je
pusha
xchg
pop
movsb
shlb
push
add
add
mov
inc
rorb
jmp
cwtl
das
mov
mov
pusha
les
cmc
mov
inc
lret
inc
jno
lock
add
mov
xchg
das
idivb
cmp
in
jp
jae
ret
out
sbb
inc
mov
dec
push
outsb
fwait
or
shlb
pusha
lret
addb
xchg
rorb
dec
or
rclb
clc
mov
inc
loopne
or
mov
pusha
outsb
rorl
mov
shll
fcompl
cmp
stos
mov
jae
jno
jmp
pop
outsb
ljmp
xor
or
add
mov
adc
inc
cmpsl
out
inc
add
add
pusha
loopne
mov
aad
sub
ror
stc
sti
aam
pop
add
fwait
sbb
cmp
xchg
xor
andb
and
add
mov
mov
pop
sub
add
pop
mov
pop
dec
xchg
lret
sahf
pop
ficomps
ljmp
adc
lea
dec
aas
jmp
fsubs
cltd
test
subb
adcb
push
dec
sbb
and
test
cmpsl
fcmovnb
decb
stc
test
loopne
push
push
and
pop
jecxz
test
into
and
int3
add
jmp
mov
add
mov
inc
loopne
push
push
stos
ds
xchg
roll
out
cli
loop
fwait
movsl
fs
pop
data16
insb
mov
addb
cmp
mov
loope
inc
mov
xchg
sahf
jmp
ret
pusha
add
add
pop
fwait
mov
scas
addb
fildll
pusha
mov
mov
mov
fisttpll
and
cmp
sub
sbb
ss
mov
or
and
les
loopne
xchg
test
cmc
pop
fmulp
movsl
dec
in
aaa
movsb
loopne
sbb
inc
inc
int
add
mov
inc
add
mov
add
jne
push
sub
hlt
lcall
add
jmp
cld
loope
sub
lds
pusha
pusha
test
add
mov
test
insl
push
add
pusha
mov
fisttps
or
cld
xlat
pushf
or
leave
adc
adc
rclb
dec
lret
scas
aas
mov
inc
inc
mov
dec
testb
sbbl
subb
in
jnp
fdivr
ljmp
test
push
sarb
shlb
push
ret
ljmp
addb
movsl
mov
inc
mov
and
fcmovu
mov
adcb
andb
adc
jecxz
fadd
adc
push
xchg
fidivl
ret
adc
xor
dec
cmpsb
mov
loopne
push
xor
loopne
dec
sbb
jo
pusha
add
sub
add
fiadds
clc
jns
ljmp
repz
loop
push
sub
and
mov
pusha
loope
xor
add
inc
iret
jle
inc
adc
inc
adc
repz
je
cmp
fidivrs
rolb
xor
ds
in
scas
aam
jge
fistps
div
enter
loopne
inc
test
repnz
sti
sub
add
add
rolb
xchg
and
dec
cld
mov
test
loopne
sbb
loopne
das
arpl
inc
push
mov
add
add
lds
in
or
sbbb
rorb
hlt
dec
arpl
mov
lods
stos
inc
rolb
and
test
subb
push
lock
icebp
jo
sti
test
orb
inc
mov
and
or
icebp
loope
dec
lock
xchg
cld
mov
add
inc
or
and
lret
mov
roll
inc
pop
inc
aaa
jmp
aaa
popa
ja
xchg
testb
push
xor
mov
mov
xor
pusha
lret
repz
push
push
ss
lods
loopne
mov
dec
cmp
andb
mov
pusha
loopne
ljmp
xor
mov
shlb
mov
adc
lds
mov
sbb
and
test
inc
jno
negb
inc
xor
xchg
pop
add
loopne
mov
in
xor
cmpsl
adc
pop
cmp
sti
in
clc
lcall
movzbl
in
mov
movsb
loopne
push
inc
inc
add
and
xchg
or
ret
and
pop
pop
push
xchg
loope
mov
aas
cld
xchg
repnz
and
jecxz
pcmpeqw
test
push
stos
mov
jmp
push
pop
jecxz
cmp
sub
mov
shlb
inc
int
jne
mov
xor
add
xor
add
repz
and
push
cld
xor
jbe
xchg
push
push
mov
shlb
out
xchg
mov
pop
data16
test
pusha
loopne
add
xor
mov
pusha
cmp
cmpsb
inc
shlb
mov
test
dec
shl
pushl
fstl
outsl
fsubs
shr
cmp
pop
ret
fdiv
adc
pop
pop
aas
loope
loopne
hlt
sub
cmp
jns
mov
mov
inc
push
mov
and
mov
inc
jo
loopne
sub
inc
mov
pusha
test
pusha
inc
mov
cmp
and
fisttpll
mov
add
fldenv
mov
add
adc
cmp
and
shll
or
pusha
movsl
cmp
cld
out
jo
cmp
xor
inc
mov
add
and
cld
inc
jo
adc
out
or
mov
loopne
jle
push
dec
add
loopne
push
push
inc
and
jb
jl
test
out
loope
and
inc
cmp
loopne
je
mov
sub
cmpsb
mov
cmc
or
loopne
or
ret
arpl
inc
inc
add
mov
stos
rolb
int
xchg
push
aad
sbb
repnz
dec
mov
add
iret
push
aas
loop
cs
rclb
andb
mov
sbb
jge
lahf
inc
sbb
rolb
fwait
les
cmp
cmpsl
push
inc
rcrl
pusha
mov
into
dec
cmp
mov
loopne
mov
add
pop
shrl
xchg
dec
pop
ret
and
inc
addb
jge
fs
inc
jmp
inc
test
imul
pop
mov
stc
sti
push
or
adc
arpl
enter
mov
ljmp
push
shlb
dec
inc
mov
sahf
and
mov
inc
leave
mov
and
mov
in
jp
daa
xor
xchg
dec
add
and
insl
push
lahf
mov
in
stos
mov
cwtl
test
shrb
jecxz
push
lea
fbld
fimuls
sub
and
jbe
cltd
pop
dec
shld
andb
mov
mov
pushf
cmp
push
popa
add
or
cmpb
sub
xchg
pop
enter
inc
je
shlb
andb
mov
shll
adc
dec
push
pop
pop
cmp
inc
mov
clc
xor
mov
ja
sarl
inc
daa
adc
andb
pushf
test
jecxz
das
or
mov
jne
push
and
out
jae
bound
test
mov
xor
jmp
int3
mov
sub
mov
shlb
sbb
and
loopne
pop
xor
xchg
xlat
iret
ret
jo
lock
mov
inc
mov
loopne
repnz
jbe
pop
dec
inc
add
mov
pop
dec
or
rclb
pusha
mov
mov
push
adc
mov
sar
fst
mov
fidivl
aad
mov
movsl
sub
outsl
fld
push
outsb
in
shrl
loopne
dec
adc
pusha
mov
insb
inc
repnz
mov
cmp
mov
sbb
loopne
icebp
cmp
pusha
outsb
adc
loopne
push
scas
test
inc
or
and
push
out
pusha
sbb
aam
mov
and
mov
mov
sub
push
mov
ficompl
or
loop
jb
mov
pusha
loopne
ret
sbb
mov
sub
iret
and
inc
adc
and
test
loopne
fdivrs
jb
push
enter
cltd
push
lds
mov
inc
shrl
cltd
add
adc
and
inc
pop
and
mov
andb
pop
lea
rcrl
scas
rol
xlat
xor
mov
rclb
mov
into
or
xorb
fwait
pop
aaa
jo
pop
and
cmp
loopne
push
stos
add
loopne
imul
fidivl
inc
cmpb
pushl
inc
mov
insb
pop
cld
mov
into
andb
cmp
xchg
and
ja
inc
jne
mov
rolb
jl
xchg
push
add
jge
shl
xor
lret
dec
imul
addb
inc
mov
lea
mov
icebp
mov
movsb
shlb
pop
xchg
jo
mov
sarb
int
add
ror
gs
stos
add
mov
mov
sarl
sbb
popa
fiadds
lods
shlb
and
add
adcb
mov
xor
pop
fisubs
incl
loopne
insl
icebp
xor
push
xchg
call
mov
mov
inc
test
clc
push
imul
rclb
or
addb
dec
or
add
add
cmc
pop
mov
mov
inc
push
bound
xchg
fidivl
test
mov
mov
sub
and
inc
and
jns
mov
xor
cmp
repnz
add
notb
fstpl
jecxz
add
xorb
js
mov
shlb
and
and
mov
pop
test
fbstp
insb
add
hlt
push
loopne
push
sarl
scas
push
add
inc
aam
mov
pusha
xor
iret
pop
cmp
dec
pop
pop
fistl
ret
lret
mov
add
mov
int3
pop
mov
sub
inc
adc
or
shlb
scas
jl
push
int3
pop
cmpsl
movsl
std
lods
test
inc
or
and
aaa
xchg
cmp
loope
aam
add
fisubrs
dec
dec
inc
mov
pusha
andb
fwait
add
or
xchg
jg
rorl
cmp
loopne
sahf
adc
loopne
pop
iret
add
addb
mov
lods
fidivs
cmp
jbe
add
xchg
pop
xchg
repnz
test
sbbb
pop
mov
dec
lock
ffree
xchg
pop
mov
mov
loopne
cld
je
mov
iret
adc
in
fidivl
pop
aas
stos
cmp
push
push
mov
std
aaa
inc
inc
repz
leave
ficompl
dec
leave
sbb
adc
add
add
mov
pop
bound
and
mov
add
xor
inc
inc
insl
icebp
movsb
and
jl
outsb
scas
addb
mov
pusha
stos
mov
mov
mov
add
inc
cmpsl
sub
mov
push
imulb
or
shlb
fimull
add
dec
sbb
push
outsl
cmp
imul
out
je
and
jle
dec
lret
pusha
and
rol
jmp
sar
sarl
inc
out
xor
adc
push
outsb
push
mov
pcmpeqd
mov
or
and
and
dec
lcall
and
imul
sub
cld
and
stos
xchg
mov
mov
mov
xchg
fsubl
out
lcall
jg
loopne
mov
pop
andb
in
push
inc
adc
pop
into
mov
rclb
mov
and
inc
or
mov
mov
aas
pop
ficompl
loop
pop
xor
dec
int3
lahf
cs
cmpb
sbb
mov
loopne
mov
and
ja
mov
fidivrl
mov
add
andb
repnz
mov
push
inc
pusha
int3
xor
mov
cli
jne
je
cmpsb
loopne
lods
jae
xor
pop
popf
mov
sbb
stos
sbb
rclb
ret
pop
cmp
xchg
lret
rol
sbb
int3
dec
rcr
mov
loopne
movsb
shlb
mov
add
and
int3
sbb
cltd
imul
movsl
xchg
jb
hlt
test
in
rolb
stos
in
or
iret
pop
mov
jmp
xchg
shlb
dec
mov
push
or
cmp
test
hlt
cltd
dec
aam
pop
adc
mov
rol
or
test
inc
mov
leave
jne
cmp
das
push
push
mov
pusha
and
loopne
pop
fucomi
cltd
fistpl
cmpsl
lret
adc
xorb
and
mov
jns
cmp
in
xlat
adc
lea
stc
jmp
xchg
jbe
loopne
repz
lahf
cmp
and
push
es
loopne
je
aad
jne
add
and
sub
push
or
mov
loope
inc
fnsave
pop
adc
mov
pusha
xor
mov
mov
push
push
add
sbb
mov
dec
call
shll
inc
loop
add
out
sbb
data16
cmp
cld
arpl
popf
sbb
aad
mov
mov
inc
shrl
jns
rcll
push
inc
xchg
out
adc
shl
nop
repnz
stos
loopne
lea
xchg
jmp
xchg
jge
pop
gs
mov
sub
or
cmp
inc
push
xchg
jge
mov
pop
cmpsl
add
lcall
jmp
movsl
sub
jge
xor
cltd
out
adc
cmp
jle
mov
out
ljmp
pop
xor
xor
pop
in
pusha
loopne
xor
or
pusha
aaa
cmpsb
add
sbb
and
movsb
addb
mov
int
mov
test
rolb
rcrl
and
shlb
sarb
cmp
imul
adc
inc
loopne
xor
sbbl
out
mov
fnstsw
icebp
dec
mov
push
or
mov
push
pop
hlt
sub
leave
movsb
add
xor
sti
cmpsl
fs
dec
jecxz
icebp
dec
iret
pop
ljmp
aam
sbb
dec
ss
add
lret
shl
ds
add
jne
pop
mov
repz
idivb
add
movsb
pusha
inc
in
jnp
inc
lret
xor
outsb
mov
rol
jg
pop
test
mov
cmp
jl
scas
or
sub
jmp
sub
sbbb
jge
jle
inc
push
das
mov
mov
aad
cmc
mov
andb
pop
test
sub
and
and
and
sbb
arpl
add
pusha
stos
cmp
aad
push
add
mov
lds
stc
lods
add
insl
shrl
popa
xchg
enter
xchg
aas
out
fcomps
mov
mov
rsqrtps
loopne
inc
xchg
movsl
mov
xchg
push
daa
loopne
bound
mov
es
adc
addb
es
push
leave
fildl
into
mov
add
testb
subb
bound
adc
dec
mov
mov
es
out
cmp
or
mov
cmp
mov
lret
mov
adc
pop
xchg
stc
aaa
mov
and
add
outsb
add
mov
add
mov
dec
xchg
addb
roll
subl
and
adc
daa
xchg
inc
pop
jne
cmp
inc
std
cmpsl
bound
pop
gs
shlb
sbb
repz
loopne
and
dec
xchg
mov
pusha
mov
add
dec
pop
mov
out
and
jae
pusha
outsb
jae
pusha
loopne
jecxz
adc
nop
push
je
rol
loop
xchg
xchg
mov
adc
shlb
ret
mull
jl
loopne
push
jb
scas
shl
shlb
mov
cmpsb
addb
mov
rclb
rol
sbb
stc
mov
jg
cmpsb
pusha
inc
ja
cmpsb
rol
loopne
loopne
xchg
pop
fimull
out
push
mov
mov
jbe
xchg
popa
jbe
adc
push
insb
push
push
add
ret
push
or
add
scas
pusha
loopne
inc
aaa
pop
and
mov
dec
hlt
ss
mov
mov
jne
lcall
pusha
add
mov
ret
rclb
mov
mov
mov
loopne
dec
mov
adc
call
sbb
jle
addb
hlt
mov
push
inc
mov
mov
fwait
dec
fs
scas
add
fdivrl
and
shl
mov
or
pop
cmp
add
sbbb
adc
pusha
cmpsb
and
ret
xor
dec
jge
and
dec
mov
jno
mov
pusha
shrb
pusha
rcrb
cmp
or
pusha
pusha
xchg
mov
push
cmp
inc
adc
and
sub
add
xchg
int
cs
dec
insb
xchg
mov
and
loopne
sub
loopne
mov
mov
mov
pop
inc
cld
pushf
adc
jg
out
dec
jns
sub
dec
testl
jmp
rorl
ljmp
shlb
add
mov
jmp
outsb
xorl
cmpsb
addb
mov
sub
loopne
sbb
adc
adc
mov
pusha
adc
bound
jl
loopne
jno
filds
push
mov
loopne
das
fldcw
push
xor
add
add
pop
pusha
fstpl
pop
dec
mov
ja
xor
hlt
inc
sbb
mov
shl
add
sahf
xchg
mov
xchg
inc
ljmp
pop
push
cmp
xor
cld
and
add
mov
out
sub
loopne
scas
dec
aas
repz
mov
lds
pop
or
mov
or
xor
cld
repz
movsl
pop
mov
loopne
addb
ja
pop
test
pusha
lea
ss
xchg
cmp
scas
pusha
sbbb
cmp
adc
sti
mov
addb
and
scas
and
jmp
push
rolb
in
lds
pusha
add
inc
cmc
mov
mov
fsubl
loopne
loope
sbb
sahf
xchg
pusha
rcll
icebp
fs
push
mov
mov
movsb
mov
fs
in
mov
fistl
lret
clc
test
add
xchg
sbb
push
push
or
pusha
out
std
push
pop
pusha
shll
and
sbb
sub
popf
push
inc
mov
cs
inc
add
shll
mov
adc
add
add
add
mov
jnp
lock
mov
loopne
xchg
fimuls
je
out
es
addb
sub
or
stos
addb
sub
pusha
and
cmpb
sti
xchg
je
shl
sub
sbb
push
movsb
loopne
pop
lahf
dec
cmp
and
cmp
aam
cmp
xlat
pushf
iret
sub
push
cwtl
mov
pusha
and
inc
inc
add
inc
int3
jb
xchg
loop
dec
jle
inc
inc
in
lcall
xrelease
pusha
test
loopne
dec
lds
pop
lahf
stc
mov
aad
ja
adc
pop
je
adc
daa
mov
and
lcall
enter
cli
push
cli
imul
rolb
and
sub
mov
add
sarb
and
xor
fs
sahf
pop
loopne
jg
jo
mulb
mov
loope
es
sbbb
mov
push
dec
dec
cmp
sub
ret
addr16
cmpsb
inc
rclb
push
mov
inc
movsb
loopne
sub
fisttpl
popa
or
andb
and
mov
and
flds
adc
filds
repnz
repz
mov
notb
hlt
jmp
test
subb
insl
xchg
in
mov
out
inc
dec
ret
cltd
sti
ss
and
out
xchg
imul
cmp
and
mov
insb
repnz
mov
pop
insl
decl
sbb
mov
mov
sbb
negb
cwtl
and
inc
and
loopne
pusha
out
jle
loope
jno
pusha
inc
add
add
push
leave
push
pop
rcrb
cld
and
dec
sbb
pusha
dec
xor
rorb
mov
aas
call
and
std
sahf
xor
pop
rcrl
call
xlat
sbb
nop
push
xchg
inc
sbbl
mov
and
pop
pop
andb
cmp
popa
aas
aad
scas
movsl
iret
pop
pop
mov
push
mov
and
adc
std
in
ljmp
adc
jmp
dec
fbstp
inc
adc
adc
inc
rolb
lahf
andb
ds
cmp
add
mov
sub
icebp
adc
insb
orl
scas
pusha
inc
xor
add
loopne
outsl
dec
les
push
push
adc
imul
ja
dec
insl
mov
ret
and
lret
test
push
and
inc
cs
inc
flds
inc
and
fisubs
mov
sbb
mov
shl
inc
add
inc
xchg
jmp
jb
mov
dec
stos
adc
jbe
ds
cwtl
clc
std
adc
push
sahf
jnp
outsb
ret
pusha
hlt
mov
imul
xchg
sbb
jbe
js
adc
push
ret
pop
cli
dec
xchg
outsb
mov
fiadds
loopne
aad
mov
mov
pusha
pusha
inc
out
lcall
fstps
or
add
ret
dec
jnp
popa
sbb
andb
pop
xchg
pop
int
cmp
sbb
and
imul
cmp
and
mov
je
and
mov
gs
cmpsb
inc
and
lds
shlb
orb
pusha
adcb
adcl
mov
int
adc
shlb
push
xor
or
add
cmp
js
ret
in
sbb
notb
int
sbb
repz
roll
mov
out
shlb
addr16
sub
pusha
test
out
fsub
xchg
fidivl
sub
shlb
pop
fwait
jno
adc
xlat
push
test
pusha
inc
cmp
pusha
loopne
test
mov
mov
adc
ret
mov
pusha
pop
mov
add
andb
shrl
jmp
fldcw
and
push
and
or
xorb
add
adc
push
fistl
sbb
jl
ljmp
mov
out
and
adcb
andb
rolb
mov
icebp
mov
sbb
jo
jle
insl
daa
repnz
pop
jg
or
pusha
xlat
aas
pop
loop
sub
add
insl
mov
nop
dec
cmc
xchg
addb
jp
in
ret
jecxz
add
add
sbb
jle
mulb
ret
bound
push
jmp
pusha
sbb
in
das
mov
movsb
rolb
mov
mov
mov
add
pusha
mov
jg
pop
and
inc
push
outsl
pop
push
loopne
cmp
mov
add
push
mov
rolb
mov
inc
std
mov
fdivs
dec
es
inc
mov
push
inc
and
cmp
repnz
sub
xorl
mov
mov
xchg
mov
inc
rcrl
push
pop
clc
clc
sub
loopne
and
push
adc
add
mov
mov
fnsave
or
inc
fcoms
in
cli
or
pusha
xchg
fiaddl
in
repz
adc
push
and
shlb
mov
mov
mov
push
mov
dec
pusha
xlat
fisubrs
addb
pop
jp
mov
scas
stc
mov
lock
stc
mov
cli
jnp
insl
sti
and
les
imul
add
add
and
rcrb
addb
pop
jp
leave
int
mov
je
scas
and
jnp
lret
jg
cmp
rclb
js
and
inc
loopne
jo
mov
clc
lcall
xorl
mov
imul
scas
mov
jb
xchg
fwait
sbb
lock
inc
or
dec
pop
sbb
gs
loopne
pop
iret
dec
xchg
loopne
xchg
adc
sub
fmul
mov
jp
jo
push
add
add
insb
xchg
and
and
sbb
loopne
add
inc
and
into
stc
sub
mov
xor
xchg
loopne
das
fwait
push
mov
shll
xor
fsubl
insl
imul
sarb
sbb
add
sub
mov
xor
test
std
stos
mov
jns
fistl
mov
add
loopne
pop
pop
ljmp
loopne
push
add
add
clc
cmp
pop
out
jge
outsb
arpl
mov
imul
stos
add
divb
movsb
pusha
and
push
movsb
add
or
pusha
sbbb
pusha
push
adc
pusha
mov
leave
mov
arpl
xchg
xchg
in
xchg
sti
lock
push
dec
add
mov
popa
or
and
rol
nop
mov
and
es
pusha
sarl
inc
shrb
mov
adc
stc
lods
mov
xchg
mov
or
inc
and
mov
loopne
xchg
mov
lahf
sbb
into
sbb
xchg
out
add
into
scas
shr
les
scas
mov
out
cli
push
shr
scas
mov
jmp
cmp
xchg
imull
mov
rcrl
rcrl
jecxz
jo
andl
inc
out
sub
andb
mov
popa
adc
inc
or
mov
mul
sti
adc
lahf
notl
sti
push
mov
mov
inc
mov
push
add
enter
fisubrl
cmp
inc
mov
imul
mov
fstpt
mov
test
and
repz
sub
ss
inc
or
divb
popf
outsb
mov
orb
loopne
mov
rcr
in
loop
dec
mov
and
popa
stos
inc
inc
scas
or
and
sbb
ja
js
mov
push
xlat
pop
clc
mov
cld
add
aam
pop
popa
outsl
add
andb
lods
add
pusha
cmp
cmp
mov
jne
pmaddwd
out
inc
rorb
pusha
ljmp
dec
inc
cmpsl
and
sub
mov
mov
cmp
lcall
and
and
leave
sahf
in
mov
xor
dec
and
shl
pop
mov
leave
inc
stc
dec
ficompl
inc
xchg
mov
in
pop
scas
inc
lods
inc
loopne
and
daa
cmp
cld
aam
mov
cli
test
mov
dec
mov
mov
pusha
addl
xor
jne
mov
shlb
pop
add
lock
or
rcrb
sarb
sbb
movl
lds
dec
lahf
clc
mov
aam
bound
jns
adc
sar
mov
outsb
add
arpl
nop
es
aam
xor
xchg
xchg
fisubs
mov
cmpl
test
mov
pmovmskb
stos
pusha
and
mov
mov
or
iret
push
mov
aad
shlb
fmuls
mov
jo
ficomps
shrb
shl
adc
std
add
and
out
adc
cmp
cmp
pusha
subb
mov
sbb
and
test
xchg
or
insb
dec
scas
mov
adc
inc
and
xor
pop
sub
rolb
dec
mov
jge
adc
ret
mov
add
les
test
pusha
ss
jg
aaa
sub
insb
push
dec
into
xor
add
adc
mov
shlb
mov
sub
scas
jnp
aad
inc
pusha
sbb
mov
test
movsb
pusha
rolb
or
ljmp
pop
pop
sbb
addr16
or
mov
fdiv
stc
push
mov
adc
pop
xchg
aad
xchg
dec
push
xchg
jno
push
addb
loopne
push
ljmp
arpl
shlb
pop
sbb
adc
xor
mov
into
into
in
hlt
xor
cwtl
ret
jge
addr16
jbe
adc
hlt
addw
sarl
mov
sbbb
dec
ljmp
xor
cmp
mov
push
adc
inc
pusha
ret
sahf
sbb
and
inc
inc
mov
inc
sbb
out
inc
popf
addr16
inc
out
xchg
mov
lret
aam
inc
int
jbe
and
nop
in
pop
iret
cmpsb
and
lea
and
adc
push
mov
jmp
ss
test
aad
loopne
cmc
popa
jg
loopne
and
rcrb
mov
loopne
testb
clc
ja
out
push
loopne
sbb
sub
test
sub
and
cmpsb
pusha
orb
inc
xor
inc
pusha
test
shlb
pusha
jmp
push
bound
cmovae
lods
rolb
cwtl
mov
shl
push
push
out
and
mov
add
subb
ficoml
lret
xor
mov
aaa
pop
jle
insl
clc
xchg
jae
push
aaa
int
jge
and
dec
shrl
and
xor
xchg
xor
sub
jecxz
pop
leave
pop
rolb
pusha
lahf
xor
and
imul
clc
sbb
sti
pop
push
sahf
and
and
cwtl
add
das
aam
shlb
jle
loop
je
mov
push
andb
imul
inc
lcall
insl
jmp
pop
sbb
aam
mov
addr16
mov
sarb
outsb
xor
mov
mov
jnp
ffreep
jb
cwtl
gs
xor
bound
push
fisubrs
pop
outsl
nop
test
mov
fistps
xchg
loopne
shll
xchg
rcrb
mov
ret
add
lcall
and
es
cmpb
aaa
aad
or
add
cs
cmp
mov
mov
cmp
data16
and
sub
daa
mov
add
stc
cmp
xchg
and
mov
std
sub
int
pusha
jg
psubb
dec
ja
scas
and
in
mov
xor
and
pusha
push
and
mov
add
arpl
or
popa
add
mov
cmc
shlb
int
stos
jae
rol
shrb
add
flds
popa
jae
loopne
push
shl
add
jg
into
mov
inc
mov
dec
ret
push
add
sub
add
fmuls
mov
cmc
ljmp
cmp
jno
lret
xor
add
pusha
inc
mov
or
add
push
shl
adc
cmp
lods
inc
pusha
lret
xchg
fcomps
lret
stc
sub
inc
mov
fs
enter
add
inc
mov
inc
pusha
adc
cmc
cmpsl
xchg
repz
inc
xlat
pop
shlb
pusha
add
notb
in
insl
or
insl
loopne
dec
jl
decl
inc
loopne
in
cmc
fs
mov
out
mov
mov
loopne
les
lds
rolb
inc
out
and
gs
push
jae
hlt
je
pop
dec
cmp
or
pop
sub
adc
test
dec
adc
ss
daa
fcmovnu
roll
xorb
dec
shrb
fs
movsl
bound
loopne
push
mov
push
push
xor
and
dec
inc
jmp
ret
je,pt
push
push
add
loopne
bound
pusha
movsl
movb
sbb
in
divl
inc
andb
out
mov
lret
xchg
adc
add
loopne
andb
inc
add
fstpt
xchg
ja
mov
je
aas
push
xchg
rclb
inc
adc
ret
or
cmpsl
mov
out
lods
dec
fcmovnbe
dec
xchg
and
cltd
sbb
lret
mov
sub
shl
call
pusha
pop
pop
jno
mov
pop
or
outsb
dec
and
loopne
xchg
mov
pop
clc
int
loopne
mov
out
test
and
fwait
xchg
pop
sbb
popa
xorl
jmp
stc
push
nop
xor
out
popa
ss
cli
and
or
pop
loopne
pusha
push
mov
pop
mov
xchg
sub
and
add
push
das
les
pusha
mov
scas
sti
jmp
pop
push
es
mov
sahf
cmp
sub
sub
inc
jne
movb
shlb
loopne
mov
pop
popf
push
pop
bound
dec
stc
pusha
add
out
adc
addb
mov
pop
cmc
movsl
leave
inc
xchg
call
and
add
add
