push
std
testb
mov
aaa
rolb
mov
mov
stos
cltd
xor
sbb
add
mov
cmpsb
call
mov
sub
sub
sub
rep
ljmp
add
mov
mov
add
jb
mov
sub
xor
mov
mov
mov
xor
ror
lcall
mov
aas
sub
sub
sub
dec
outsl
dec
jl
aaa
add
mov
pop
adc
mov
xchg
pop
mov
sub
imul
and
loop
mov
lret
mov
jne
push
ss
jbe
insb
sbb
push
add
mov
add
mov
roll
fldenv
dec
mov
sub
cmp
mov
out
xlat
add
mov
pop
sub
inc
outsl
imul
inc
pusha
add
mov
add
pop
jo
mov
rolb
mov
ror
xor
push
cmpsl
rolb
adc
mov
mov
test
add
mov
fadds
cmp
add
add
icebp
cli
jbe
add
push
dec
jge
dec
pop
adc
xor
inc
jmp
test
divl
add
xchg
push
loopne
mov
in
fstp
xchg
add
cmc
jae
test
add
inc
cmp
dec
mov
add
push
lret
loope
mov
mov
cmpsl
jb
mov
adc
pop
fsubr
push
push
mov
add
mov
test
mov
insb
in
ljmp
iret
mov
mov
mov
into
mov
pop
stos
aas
jp
add
iret
sub
ss
jne
inc
and
out
insb
mov
or
add
push
mov
sub
push
mov
jo
mov
inc
inc
fisubrs
pop
pop
movsb
int3
sbb
loop
mov
les
mov
iret
ja
ds
imul
mov
data16
xor
dec
push
ljmp
fisttps
cmp
push
js
xlat
jns
loopne
mov
arpl
mov
and
mov
adc
mov
xlat
sub
mov
add
test
cltd
push
mov
mov
addb
or
insb
xor
scas
add
stos
mov
movl
outsb
xor
push
or
mov
or
mov
jae
out
add
hlt
adc
or
mov
in
ja
cmp
inc
add
jbe
into
je
xor
leave
sub
lcall
sahf
repz
or
jmp
mov
and
mov
jmp
and
lea
xchg
jge
mov
jl
stos
in
ds
out
ss
aad
mov
int
dec
rcrl
jno
pop
push
aas
xlat
cmp
test
lret
in
jbe
jl
aas
cmpsl
popf
in
outsl
imul
sub
pusha
add
cmp
push
add
mov
ds
cmp
pushf
jecxz
mov
mov
pop
repnz
fmul
adc
test
sub
call
cmpsl
int
mov
outsl
dec
and
mov
pop
mov
mov
js
jne
sbb
add
xor
lahf
and
add
adc
mov
cltd
aad
je
mov
clc
adc
mov
rolb
insb
or
out
adc
mov
fmull
mov
push
testb
cld
mov
mov
les
ljmp
or
call
in
nop
add
add
mov
mov
push
sarl
add
mov
sub
sub
jns
jl
adc
idivl
add
add
mov
lds
add
shll
mov
xor
jp
jecxz
mov
cmp
inc
add
cs
jb
mov
stos
xchg
inc
and
lods
int3
stos
push
cmpsl
inc
fs
inc
movsb
mov
mov
scas
push
js
pop
or
mov
mov
cwtl
cmp
fldt
es
popf
jae
pop
push
add
jnp
cmp
add
add
daa
or
pop
dec
call
xchg
aam
xor
add
sub
mov
neg
dec
dec
push
iret
cmp
add
mov
xchg
push
aam
xlat
daa
lods
pop
popa
push
add
das
leave
test
cmp
add
addb
fists
mov
enter
loopne
mov
pop
mov
pop
fs
pushf
cmp
jle
sbb
and
in
push
pop
data16
inc
or
pop
mov
push
cmp
negb
ret
out
cmp
mov
mov
mov
mov
lods
in
cmp
xchg
add
out
bound
mov
aad
test
inc
inc
push
mov
xchg
addb
out
push
mov
ss
xchg
mov
out
add
ja
add
outsb
or
push
in
negl
add
add
fwait
sub
sub
push
push
push
add
fsubrp
mov
add
and
mov
add
mov
and
mov
cmc
mov
mov
mov
mov
jo
mov
mov
cli
mov
cmp
sub
jns
add
mov
sub
xor
mov
xor
sbb
add
mov
gs
add
cmp
jge
sbb
icebp
and
mov
popa
inc
add
jecxz
mov
add
jl
add
addb
pop
cli
sub
jb
mov
clc
cmp
add
mov
ds
icebp
sub
ss
mov
out
add
jb
mov
jo
mov
or
mov
mov
add
mov
add
add
bswap
int3
adc
xor
addr16
ja
add
push
mov
add
inc
push
out
in
fcompl
jo
mov
sbb
repnz
add
subl
fscale
dec
add
loope
gs
xor
add
into
pushf
fnstsw
sti
imul
adc
pusha
add
mov
or
xor
mov
int
push
add
mov
pop
test
sar
mov
mov
xchg
jge
xor
mov
inc
cmpl
inc
mov
inc
shll
or
dec
fisubrs
sbbl
push
mov
outsl
push
sub
pop
mov
mov
and
mov
insl
cmp
insb
inc
pop
cltd
mov
outsl
arpl
add
push
add
ret
mov
add
mov
add
incl
arpl
mov
add
and
push
add
pusha
add
mov
mov
mov
mov
and
jb
mov
test
mov
jb
mov
popa
mov
daa
mov
xor
mov
sub
add
inc
pop
mov
mov
mov
jg
xchg
sub
sub
add
sbb
xchg
sub
in
push
mov
add
sbb
xor
add
mov
stos
in
sub
lods
xchg
addb
sbb
lret
mov
mov
add
mov
mov
fisubrl
sub
add
mov
dec
cmpsb
lahf
lret
pop
mov
cmp
mov
lods
sti
pop
dec
pop
mov
adc
mov
enter
mov
add
fmull
in
cmp
repnz
and
jge
pop
loop
mov
mov
dec
xor
add
sub
mov
xchg
jnp
fsubs
jnp
add
dec
in
sti
das
mov
jbe
add
add
jno
dec
add
outsl
std
mov
sbb
icebp
and
inc
or
sbb
fisubl
add
add
fbstp
mov
fstp
mov
jecxz
jge
push
in
or
loope
rolb
ja
inc
repz
insb
fmuls
and
std
add
movsl
fwait
lds
inc
add
mov
push
jl
divl
add
test
add
mov
mov
adc
xchg
sbbl
mov
in
mov
dec
push
xor
inc
mov
aam
sub
nop
add
xchg
ret
out
add
xchg
push
inc
mov
loope
rcll
mov
mov
xor
aas
add
add
out
scas
cmc
jns
or
rcrl
cmp
cmp
add
and
imul
add
mov
cmp
jecxz
mov
xchg
sbb
mov
sub
in
ss
cmp
xchg
test
test
iret
jge
fldcw
jne
push
jns
inc
fld
add
adc
mov
sub
mov
loopne
mov
cltd
fwait
movsl
adc
mov
xor
mov
out
outsb
xchg
lret
scas
pushf
add
mov
aaa
xchg
add
mov
mov
cmp
or
add
movsb
lods
xor
cmp
add
cmc
sahf
jg
sbb
out
xchg
add
aaa
fistpll
jnp
xchg
add
sbb
clc
jg
lret
ret
scas
insb
jmp
js
xchg
add
cltd
adc
jmp
out
or
aad
nop
add
addr16
add
add
inc
mov
or
enter
scas
jb
mov
jmp
sub
ja
addb
bound
mov
push
sbb
ret
adc
arpl
enter
or
mov
jl
pop
xor
mov
mov
jge
lret
push
loope
add
mov
repz
insl
jecxz
aad
sbb
dec
dec
in
cwtl
pop
push
fcoms
add
add
leave
jmp
pop
pushf
sbb
fwait
int
add
fcmovnu
xchg
shrl
add
aaa
sbb
mov
add
mov
add
mov
add
add
add
add
sub
arpl
inc
addr16
add
add
movsb
jge
add
lock
mov
mov
repz
mov
aad
adc
adc
jge
jge
dec
xchg
rolb
mov
aaa
add
and
mov
aad
inc
add
lret
push
imul
adc
and
add
adc
mov
int3
leave
sub
dec
aad
outsb
lret
mov
xor
mov
add
xchg
add
xlat
lea
mov
into
push
cmp
hlt
rolb
mov
pop
sbb
push
dec
mov
lods
jae
mov
and
scas
nop
add
lods
cmpsl
sti
daa
mov
mov
add
leave
popa
jle
repz
sahf
aad
add
add
mov
mov
xchg
or
sbb
adc
push
add
or
sub
add
enter
mov
dec
les
int3
test
dec
push
rolb
mov
mov
add
mov
xchg
jp
pop
loop
mov
popa
inc
add
xor
mov
sbb
mov
jle
aam
stos
dec
out
jle
aad
es
mov
add
popf
xchg
add
mov
std
and
add
add
push
rolb
mov
js
repnz
iret
jnp
push
enter
mov
cmp
mov
mov
mov
mov
jmp
stc
sbb
add
ja
push
cmp
or
mov
sub
cmp
jns
dec
push
adc
mov
pop
pop
stc
mov
pop
xchg
jge
out
add
sti
sub
ja
and
std
inc
pop
js
add
mov
popf
mov
enter
cld
mov
leave
mov
dec
push
js
aas
dec
clc
dec
arpl
xchg
data16
fldt
fwait
rolb
mov
addr16
bound
mov
mov
rcll
cmp
icebp
mov
ljmp
add
add
xchg
das
mov
scas
std
ja
insb
fisubl
out
and
bound
mov
in
ljmp
add
add
cmp
sub
mov
jecxz
lret
rolb
mov
out
jo
mov
ss
mov
pop
pop
inc
dec
mov
imul
add
pop
cmp
fistpl
xor
mov
add
mov
add
bound
outsb
or
mov
push
mov
sub
push
push
push
push
push
push
call
lea
es
mov
movzbl
cmp
ss
push
push
push
call
mov
cmp
je
es
xchg
add
xchg
cs
sub
mov
push
es
call
test
jne
jmp
nop
leave
push
es
mov
test
je
bnd
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
nop
lea
lea
sub
add
mov
sub
sub
push
pop
push
je
jmp
add
add
ljmp
loope
pop
mov
in
je
syscall
das
ss
or
hlt
into
stos
fwait
cmp
loopne
mov
loope
outsb
fmul
arpl
imul
cmp
mov
or
push
push
mov
arpl
or
jmp
test
nop
add
mov
dec
xor
fcomps
add
lret
sbb
outsl
cmpsl
mov
mov
out
cmpsb
adc
mov
lock
inc
and
mov
mov
mov
cltd
pop
and
mov
mov
mov
and
test
fcomi
add
inc
stos
sbb
aam
jne
xchg
movsb
xchg
add
jne
lret
pop
xor
mov
or
push
dec
mov
mov
add
xchg
xabort
add
fs
ss
daa
aad
and
scas
inc
add
push
push
add
imul
add
xchg
cld
out
push
scas
xor
scas
xchg
xchg
int3
lds
cmovg
sbb
adc
ret
outsb
mov
mov
xor
mov
test
mov
mov
repz
mov
inc
loopne
mov
push
push
push
sbb
inc
and
mov
nop
add
aam
add
leave
inc
add
add
mov
fstps
inc
pop
bound
mov
mov
mov
dec
push
add
iret
jl
in
pusha
add
int
stos
into
rolb
mov
out
pushf
dec
dec
push
add
es
notl
iret
xchg
jge
sbb
jle
enter
hlt
sbb
mov
mov
rolb
out
sbb
add
xchg
add
add
lret
mov
lcall
inc
add
daa
mull
xchg
js
add
sbb
cmp
dec
jp
je
mov
add
rcr
jno
lahf
lds
call
in
push
ss
and
or
or
mov
out
ficoms
push
sahf
adc
sbb
add
add
push
add
fimull
mov
rolb
dec
push
add
aad
sub
dec
push
xchg
movsb
mov
add
add
push
inc
push
add
cmp
hlt
sub
add
add
add
mov
data16
jnp
push
stos
cwtl
insb
mov
xchg
fnstcw
pop
inc
add
jo
mov
add
mov
mov
jg
push
add
aas
jge
add
icebp
pop
fistpl
loope
popa
fstl
or
xchg
es
add
daa
fimuls
out
push
and
mov
sub
add
icebp
xchg
dec
pop
flds
addb
adc
jge
nop
add
inc
popa
jns
add
jp
mov
mov
cmp
cli
popa
popa
ja
jne
mov
cmp
sahf
mov
je
rolb
mov
in
mov
es
ja
jnp
sbb
pop
shll
test
jg
insb
ds
mov
add
cmpsl
cmp
addb
cmpsb
rolb
mov
into
in
loope
sbb
add
insl
pop
cmp
add
add
mov
or
fwait
or
addb
ret
cmc
mull
mov
sahf
shrl
fucomip
in
add
cmc
jne
sbb
add
mov
jl
jno
popa
sub
lock
and
mov
cmpsb
std
jno
repnz
dec
mov
mov
addb
mov
insl
xorl
mov
fdivp
xchg
fwait
sbb
jmp
ss
insl
sub
or
bound
mov
push
add
add
adc
mov
add
mov
sahf
movsl
lret
cmp
pop
push
aaa
out
fldl
mov
out
pushf
mov
sub
mov
mov
mov
adc
cmp
mov
adc
mov
fidivrl
add
pop
xor
push
and
leave
in
add
jle
dec
jmp
adc
mov
push
mov
add
xchg
add
out
pop
xchg
pop
shr
ret
jae
or
add
loop
mov
fnstenv
cmpsb
sbb
mov
mov
icebp
inc
push
and
mov
stos
scas
mov
dec
out
iret
test
adc
mov
das
dec
fisttps
arpl
or
mov
sbb
pop
in
jbe
mov
pushf
xchg
out
push
cmp
loope
cmpsl
mov
mov
std
sarl
add
mov
loope
dec
sbb
cmp
cmp
add
pusha
add
add
dec
and
mov
mov
mov
xchg
scas
lods
gs
pushf
adc
mov
movsb
fsubrl
push
push
cmp
add
mov
test
sbb
mov
add
add
in
in
push
push
leave
inc
add
add
rorl
stos
std
mov
imul
mov
popa
aaa
cmp
lret
test
mov
xlat
jmp
mov
sub
add
mov
and
adc
stos
out
aas
sbb
aaa
sbb
add
in
or
push
xchg
lods
aad
cmp
in
push
arpl
mov
push
pop
pop
cmc
xorl
push
iret
jne
fucomip
pop
loopne
mov
jmp
add
mov
jecxz
xchg
sub
mov
lahf
int
inc
pop
icebp
aam
scas
xchg
and
and
mov
xor
mov
mov
add
pop
pop
jle
add
mov
jmp
insb
dec
nop
add
sub
mov
lahf
xchg
add
stc
nop
add
mov
pop
mov
lds
add
sbb
add
add
add
fcomi
inc
jbe
push
js
stos
addb
push
adc
imul
sbb
and
mov
aaa
xchg
push
addr16
xor
lret
ffree
mov
clc
adc
mov
sahf
mov
call
lahf
fists
add
xor
add
add
push
xor
mov
add
mov
jns
add
inc
sbb
insl
and
dec
sbb
pop
or
int
or
add
out
push
sub
outsb
xor
inc
pop
xchg
lds
add
lcall
add
ficomps
cltd
loopne
mov
jbe
out
dec
jmp
fcmovu
sbb
negb
out
aam
add
xor
movsb
mov
mov
fdivrs
or
mov
mov
paddsb
dec
cmpsb
or
and
fnstsw
and
jmp
pop
jo
mov
jno
xchg
jmp
xchg
mov
fisttpl
mov
add
ljmp
mov
fs
rolb
je
lret
add
inc
dec
mov
es
mov
js
inc
add
call
sbb
cmp
roll
cmp
scas
jno
mov
add
mov
and
mov
or
pop
jmp
cmpsl
sti
notb
pop
js
adc
test
jge
add
stos
test
cli
mov
sub
lods
aad
xchg
aas
in
sub
in
jnp
cltd
test
ret
sbb
addb
jae
xlat
loopne
mov
sub
int3
and
ja
stc
data16
cmp
sbb
push
xchg
add
inc
adc
mov
imul
add
cmpxchg
mov
mov
rolb
mov
add
mov
and
mov
loope
adc
mov
mov
mov
jo
mov
inc
ds
add
lods
xchg
lret
repz
ljmp
pop
xor
and
in
adc
mov
pusha
add
mov
mov
bound
mov
int3
mov
add
mov
sub
mov
mov
mov
add
or
test
or
aad
add
out
mov
ds
cmp
dec
push
gs
cmp
js
out
add
mov
xchg
pop
xchg
adc
mov
scas
xchg
mov
icebp
jns
mov
aaa
out
repnz
mov
cmc
call
decl
jle
add
jb
mov
cld
ja
cld
mov
mov
mov
ret
hlt
in
inc
aaa
rolb
mov
daa
mov
sbb
add
cld
push
xor
mov
add
mov
pop
add
mov
add
jnp
inc
add
mov
mov
add
add
mov
mov
add
mov
mov
xor
mov
imul
cmpsb
mov
add
xor
xchg
roll
inc
jge
fisubl
add
icebp
xchg
add
out
mov
popf
or
push
xchg
mov
mov
loopne
mov
and
pushf
ljmp
mov
lret
cmp
add
pushf
mov
add
loop
mov
in
sub
test
jle
xor
add
cs
aas
fstps
add
add
dec
insb
ftst
lods
push
add
add
cwtl
stos
adc
push
mov
mov
movsb
and
mov
push
out
mov
je,pt
std
push
fisubs
out
neg
pop
cld
in
je
fmuls
lret
movsl
dec
mov
add
into
in
cmpsl
or
lock
je
icebp
fidivrl
adc
mov
mov
mov
ds
add
xor
pop
mov
inc
roll
mov
push
out
stos
or
mov
fmulp
daa
loope
out
lea
fstps
pop
rcll
or
scas
jnp
bound
mov
and
mov
pop
ficomps
dec
cli
fwait
push
add
mov
lret
jnp
add
outsb
scas
aam
lcall
jo
mov
addb
daa
dec
xor
rolb
or
cmpsb
loopne
mov
jge
cmp
aam
out
jg
add
sbb
lds
pop
jae
push
lret
out
or
sub
addb
jg
outsb
xchg
das
lock
lock
jge
mov
mov
ffree
subl
add
push
loopne
mov
and
cmp
adc
mov
movsb
adc
rolb
movb
push
pop
or
mov
sbb
pusha
add
popa
int3
xchg
and
sbb
add
addr16
sub
addb
dec
aaa
gs
lahf
mov
and
add
into
ret
mov
loope
int
or
push
decl
add
mov
les
jge
mov
jne
into
addb
cmp
inc
popa
xchg
add
cmp
add
pop
pop
mov
out
fs
test
add
mov
add
push
sti
aas
mov
pop
lods
rolb
mov
outsb
rolb
mov
out
jp
add
or
popa
push
pop
ds
rcrl
and
mov
mov
add
sub
lret
hlt
and
ljmp
jns
xor
sub
cltd
mov
inc
wbinvd
xchg
add
mov
ficoml
mov
add
lods
ret
xchg
inc
std
jno
cmp
dec
mov
stc
jmp
fnstsw
add
mov
add
add
stc
inc
scas
cmpsl
lock
mov
lahf
or
xchg
mov
sahf
mov
mov
mov
mov
inc
idivb
sub
xchg
jb
mov
pop
xchg
push
push
mov
cmp
aas
inc
mov
inc
lret
sub
mov
mov
pop
mov
push
add
pop
mov
mov
pop
fildl
xchg
add
mov
jno
mov
pop
push
popf
cmp
add
mov
divl
mov
dec
or
and
mov
ja
sbb
loopne
mov
icebp
pop
rolb
mov
pop
jge
es
lock
and
movsl
pop
sbb
and
mov
jne
cmp
add
sub
fiaddl
or
push
pop
mov
sarl
test
inc
add
cmp
add
mov
out
add
clc
sub
mov
jnp
sub
sbb
sub
into
rcll
mov
mov
ds
jb
mov
cld
test
lret
inc
lds
testl
js
mov
push
add
bound
mov
inc
out
mov
mov
imul
roll
movsb
and
mov
addb
cmp
fwait
pop
push
aad
push
jnp
test
inc
frstor
mov
push
mov
fistpl
ret
cmpsl
mov
and
mov
add
add
or
mov
mov
daa
push
lret
inc
xor
mov
jae
add
add
jae
movsb
jne
push
ss
fstl
mov
and
mov
mov
mov
dec
sub
add
sahf
stc
xchg
mov
xchg
sbb
and
lahf
test
iret
or
and
insb
paddd
sub
jb
mov
test
inc
add
mov
xor
push
add
mov
xlat
cs
test
mov
mov
xor
mov
add
ds
dec
mov
mov
mov
mov
mov
or
add
test
mov
push
add
sub
jle
xlat
xchg
push
pop
xor
mov
sub
repz
mov
clc
push
add
jmp
sub
stos
out
push
xchg
add
mov
js
add
lahf
xchg
mov
mov
addr16
insb
lret
mov
daa
imul
or
mov
mov
add
inc
cmp
mov
or
inc
sahf
std
pop
cmp
add
add
mov
push
es
push
push
add
sti
jmp
jp
mov
test
addb
adc
mov
fbstp
popa
lret
sti
jno
add
gs
pop
stos
xchg
fldcw
cmp
ljmp
pushl
insb
scas
icebp
push
mov
movb
add
add
mov
push
sub
pop
lcall
cld
ljmp
sbb
add
js
fs
mov
fiadds
xor
mov
jae
jb
mov
call
pop
orl
mov
fadd
sti
sbb
add
dec
mov
sbb
add
movsb
mov
add
add
negl
gs
pop
cld
push
imul
movsl
loopne
mov
mov
pushf
sahf
cmp
loop
mov
xchg
mov
adc
mov
jp
add
bound
mov
add
sub
inc
add
mov
cmpsb
jbe
cli
fs
inc
fldt
dec
mov
repnz
mov
add
add
das
pop
in
or
and
mov
dec
push
inc
dec
mov
lcall
clc
addb
lret
or
aas
rolb
dec
adc
mov
or
and
mov
ljmp
jbe
frstor
mov
add
mov
mov
mov
out
and
mov
jge
dec
push
add
cmp
jl
push
jno
sub
add
int3
inc
or
outsl
mov
dec
call
scas
or
lods
aas
dec
loope
test
fwait
sbb
mov
imul
dec
push
dec
xchg
scas
adc
mov
xlat
xchg
add
dec
mov
inc
add
dec
jnp
lret
mov
pop
or
mov
int
add
add
mov
jl
add
inc
xlat
xchg
add
sbb
mov
add
test
and
das
mov
add
mov
inc
mov
lock
adc
out
test
in
cmpsl
dec
xor
aaa
roll
add
mov
hlt
ja
out
push
pop
pusha
add
add
sub
sub
inc
mov
in
add
cltd
dec
pop
sbb
jne
and
mov
xchg
jne
sub
fbstp
hlt
sbb
leave
outsl
movsl
lahf
cli
loope
jl
add
subl
or
test
add
push
jecxz
out
jo
mov
testl
add
xchg
mov
scas
bound
mov
cli
push
sub
add
rol
arpl
add
mov
mov
cs
fisttps
mov
fs
cli
inc
dec
cld
xchg
push
add
add
test
sbb
xchg
mov
add
add
pop
test
leave
xchg
mov
jge
movsl
iret
pusha
add
scas
loop
mov
daa
mov
ret
pop
sbb
push
flds
inc
pop
stos
ret
mov
pop
in
inc
mov
or
mov
add
inc
push
aas
xchg
arpl
cmpsb
imul
mov
enter
pop
mov
daa
mov
cmp
addr16
out
ss
add
sti
or
mov
sbb
loop
mov
mov
mov
and
mov
andl
mov
sbb
jge
fisubrl
dec
inc
add
lock
xor
mov
push
add
es
inc
push
add
add
and
mov
mov
inc
sbb
jg
sub
push
aam
addb
xor
add
xchg
mov
fcoms
sahf
push
dec
sahf
ret
nop
add
lods
enter
pop
cltd
jno
sub
or
fwait
push
push
add
daa
xor
sub
jg
dec
sbb
dec
sbb
sbb
stos
jo
mov
push
sub
mov
xchg
or
mov
add
xor
push
add
jmp
mov
dec
pop
mov
mov
xor
mov
add
mov
xor
lock
mov
test
stos
out
mov
and
aas
sbb
add
mov
out
mov
add
mov
cli
iret
pop
pop
and
inc
add
mov
cmpsb
push
mov
ljmp
sbb
mov
mov
cmp
add
mov
mov
outsb
rolb
mov
mov
dec
jl
ja
les
sub
sub
pop
lea
lods
int3
fsubs
repz
daa
mov
sahf
cmpsl
aad
enter
xor
sub
push
outsl
push
aad
notl
repnz
loop
mov
js,pt
test
jmp
mov
pop
in
inc
notl
clc
in
addb
sbb
push
in
fisttpl
add
aad
xchg
add
mov
push
jecxz
data16
lret
cltd
addb
addb
mov
mov
sub
mov
dec
insl
aad
popw
inc
movsb
ret
sub
pop
mov
fcomip
add
mov
add
mov
adc
and
mov
add
add
jl
xor
mov
add
add
inc
or
add
mov
int
movsb
out
push
fidivrs
cli
jnp
mov
cli
mov
mov
addb
mov
fistps
xor
addb
add
inc
mov
pop
stos
mov
mov
mov
add
lods
jle
insb
xlat
test
jp
cld
xor
mov
lea
sbb
shr
daa
ret
sub
and
jecxz
sbb
jge
mov
jg
or
shl
mov
cmp
adc
icebp
negb
mov
lcall
pop
lret
pushf
out
add
add
out
inc
adc
jne
out
lahf
or
add
clc
lcall
add
jmp
pop
std
test
int3
pop
loopne
mov
push
jmp
mov
fdivl
xor
sub
out
rolb
dec
mov
or
bound
mov
imul
loope
xchg
lcall
add
pop
loope
jnp
cmp
in
nop
add
lods
cmp
imul
hlt
and
das
fistl
mov
mov
inc
sub
insb
shll
push
loopne
mov
stmxcsr
inc
fdivrl
pop
dec
sbb
ficomps
push
int
xor
popf
jb
mov
add
mov
jl
add
inc
mov
mov
jb
mov
dec
or
mov
add
enter
mov
loope
mov
mov
rolb
ficomps
pop
jne
loop
mov
and
xchg
add
xchg
sub
negl
add
add
fstpt
jle
data16
dec
stc
shll
es
repnz
into
mov
in
mov
or
adc
push
add
xor
mov
mov
aas
mov
mov
lret
dec
or
fldenv
mov
mov
rolb
mov
daa
sub
cmpsl
aad
xchg
inc
push
jo
mov
mov
mov
add
mov
jns
xchg
jnp
cvtps2pd
xchg
pusha
add
in
sub
mov
shrl
fdivs
mov
mov
xor
xor
outsl
mov
add
lea
add
mov
popf
xor
addr16
xor
mov
scas
xor
sbb
inc
add
stc
add
mov
popf
dec
fldenv
add
fsts
mov
add
jns
push
cmc
lock
dec
cmp
and
call
xlat
push
dec
push
outsl
out
xor
mov
mov
sub
mov
inc
xor
mov
rolb
mov
pusha
add
mov
add
jp
test
add
inc
push
mov
sub
scas
add
inc
sbb
std
mov
adcl
lret
popf
roll
in
or
add
ss
arpl
mov
pop
inc
stos
pop
gs
sub
push
cltd
jno
add
xchg
fcmovbe
or
dec
pop
pop
xchg
push
inc
mov
and
cld
daa
jo
mov
imul
and
xchg
mov
mov
push
jae
pop
push
roll
pop
dec
pop
add
clc
jmp
xor
add
gs
imulb
aas
lods
adc
add
frstor
test
jmp
nop
add
add
mov
mov
mov
loopne
mov
fildll
scas
jmp
mov
mov
inc
add
mov
mov
adc
in
lret
xlat
cmp
lret
repnz
add
add
es
push
add
jmp
dec
addb
jnp
cmp
sbb
xlat
sbb
mov
aad
pop
and
add
je
test
movsb
sbb
mov
leave
push
pop
lcall
mov
add
xor
mov
mov
cli
test
rolb
mov
add
mov
mov
movsl
inc
sahf
ficoml
push
jno
cld
cwtl
in
mov
mov
push
stc
xchg
imul
adc
cmp
cwtl
and
mov
mov
mov
jnp
sbb
cli
repz
add
add
inc
add
dec
sbb
movsl
scas
loopne
mov
dec
fwait
sub
mov
fwait
pop
adc
mov
scas
bound
mov
imul
dec
cmp
add
loop
mov
adc
mov
add
mov
out
add
mov
or
lret
lock
in
sbb
sbb
lods
mov
int
cmp
mov
mov
popa
out
in
sti
lds
or
add
xchg
stc
sahf
dec
sub
rolb
mov
ss
add
mov
dec
push
loop
mov
xor
mov
sbb
out
mov
mov
mov
mov
xlat
mov
mov
fiadds
add
ljmp
inc
push
into
sbb
add
daa
dec
movsl
mov
int3
cmc
aas
add
or
push
js
adc
mov
clc
and
cli
scas
movsb
sub
rolb
mov
lock
sbb
and
push
das
fisttpl
mov
into
stos
xor
arpl
fcoml
add
sbb
adc
add
dec
sti
mov
add
mov
ss
push
mov
inc
add
das
adc
mov
mov
mov
sub
add
cs
pop
test
inc
or
ss
rolb
rolb
cmp
sub
pop
icebp
sbb
scas
push
insl
jg
add
fisubl
fdivp
mov
add
pop
mov
es
mov
decb
addr16
inc
add
inc
and
lcallw
mov
inc
stos
sbb
add
repz
mov
ret
pushf
arpl
sbb
addb
inc
push
ficomps
jno,pt
mov
add
in
and
add
scas
adcl
clc
scas
sub
and
mov
pusha
add
mov
add
adc
or
add
test
pop
jnp
insl
mov
mov
mov
xchg
sub
popf
mov
pop
mov
mov
cmp
arpl
sbb
add
lcall
cld
push
push
pop
dec
sbb
dec
out
cmp
lcall
out
out
dec
mov
pop
addb
and
jmp
rolb
mov
add
lock
add
add
mov
loopne
mov
test
jge
xchg
pop
pop
loop
mov
mov
add
test
aam
add
fildll
xchg
aaa
call
daa
pushf
push
jmp
inc
and
mov
cld
out
inc
es
cmp
bswap
pushf
dec
jb
mov
gs
mov
sub
rolb
mov
addr16
or
add
cmc
push
add
fcmovnb
sbb
fildl
dec
jns
fldl2t
dec
out
fistpll
push
mov
push
xchg
add
jmp
mov
add
mov
xor
icebp
into
jbe
cmp
mov
add
push
scas
repnz
jmp
sbb
add
add
add
rolb
mov
loope
sub
cld
and
idivb
iret
je
dec
sbb
imul
imul
pop
cs
clc
jecxz
rolb
mov
add
je
xchg
negb
mov
add
aaa
mov
loop
mov
add
add
into
jne
mov
inc
add
push
add
or
ss
cmp
test
mov
mov
pop
out
xlat
adc
dec
pop
int3
pop
xchg
jae
add
mov
cld
dec
nop
add
mov
divb
add
fisubs
enter
add
pop
stos
and
push
add
test
call
push
and
call
cli
push
push
gs
movsb
adc
sti
xlat
inc
add
push
int3
or
popl
sti
push
sbb
or
dec
mov
pop
push
ret
addb
and
out
ds
mov
mov
incl
or
jo
mov
fwait
mov
mov
adc
mov
mov
notb
add
pop
stos
call
test
mov
push
pushf
mov
int
add
std
repnz
mov
pop
fld
jp
xor
ffree
push
cli
ds
daa
fs
jae
or
mov
dec
inc
sbb
mov
adc
mov
jb
mov
stos
push
test
js
push
or
push
push
add
mov
je
sub
inc
fmul
in
arpl
popf
or
jb
mov
push
add
mov
out
xchg
add
xchg
cmp
cmp
lds
jmp
or
and
mov
outsl
aaa
pop
outsl
mov
add
data16
mov
xchg
and
jns
rolb
dec
xor
jne
sarl
fs
ljmp
dec
adc
fstpl
fisubrl
push
xchg
lret
mov
add
inc
jp
dec
dec
stc
xchg
jns
arpl
fdivrs
adc
nop
add
mov
movsb
dec
test
or
addr16
outsl
rcll
test
jo
mov
sbb
int3
pop
lret
inc
add
adc
loope
jecxz
subl
dec
jo
mov
mov
mov
mov
mov
adc
fisttps
rolb
mov
jecxz
pop
outsl
jae
movl
mov
testb
sub
fwait
and
mov
js
xor
mov
dec
sbb
or
addb
aaa
in
xor
mov
mov
pop
dec
pushf
test
mov
add
jb
mov
pop
cmp
in
dec
and
aaa
cli
int
in
add
sub
insl
inc
lahf
pop
mov
add
add
push
rorl
add
inc
test
cmp
pusha
add
add
mov
mov
rcrl
mov
imul
mov
jle
mov
mov
insl
cmp
loop
mov
jbe
insb
in
add
mov
rorl
adc
in
pop
out
jl
pop
adc
mov
loopne
mov
bswap
sub
inc
jp
sub
add
fisubrs
inc
pop
and
lret
mov
dec
xor
sbb
test
out
mov
jo
mov
mov
scas
sub
ljmp
mov
addb
pop
lds
mov
mov
sbbl
cmp
fisubs
mov
rcll
adc
sub
lock
xor
mov
sub
add
push
mov
mov
add
mov
add
xor
aad
jae
xchg
rolb
mov
mov
xchg
mov
mov
dec
fs
push
push
xchg
push
add
lahf
dec
int3
insl
in
cmpsb
and
jp
mov
pop
push
or
rolb
mov
add
mov
mov
add
fiadds
ljmp
insl
lahf
clc
adc
mov
out
sbb
lods
pusha
add
ljmp
fnstsw
add
or
iret
int3
and
mov
mov
sub
xor
mov
jg
in
pop
adc
mov
mov
push
mov
inc
adc
mov
add
mov
add
inc
int
fs
roll
int3
xchg
jg
add
add
add
add
mov
mov
mov
andl
addr16
adc
mov
lock
fmuls
mov
xor
outsl
insl
pop
int3
inc
cwtl
push
mov
sub
mov
lods
push
or
fisttpll
jge
fstl
inc
add
jmp
jo
mov
cwtl
sbb
notl
mov
mov
fldcw
mov
daa
inc
adc
mov
inc
mov
cmp
push
xor
xchg
and
mov
inc
and
mov
js
add
mov
cltd
addr16
and
pop
add
mov
and
mov
lret
jbe
ss
fadds
add
loop
mov
and
jge
decl
add
testb
adc
mov
xchg
je
add
xor
mov
cli
fidivrl
fcompl
cwtl
mov
sbb
lret
fstpl
push
mov
rolb
js
sar
negb
xorl
dec
insl
lock
fdivrl
fdivrl
add
cmpsb
addb
pushf
rolb
fpatan
cmp
or
pushf
mov
mov
add
mov
mov
fbld
inc
xchg
test
jl
mov
mov
repz
adc
inc
push
arpl
sbb
int
mov
xor
stos
inc
add
fidivl
push
push
push
ret
loop
mov
add
fst
into
subl
mul
add
adc
mov
sub
xchg
jo
mov
adc
in
pop
mov
into
fsts
mov
adc
sar
out
mov
add
pop
sbb
lock
notl
mov
fldcw
aaa
push
jl
add
sub
inc
mov
xlat
xchg
add
mov
mov
pushf
mov
mov
aam
rcr
outsb
shr
push
add
clc
mov
jge
add
mov
jge
xor
mov
in
xchg
sub
sub
mov
rolb
mov
or
jo
mov
add
mov
lock
fsubrp
fwait
mov
push
jns
and
mov
add
inc
fidivs
dec
loop
mov
mov
add
push
test
add
mov
mov
mov
nop
add
inc
add
popf
sbb
push
and
mov
push
je
jecxz
add
cmpsb
cmp
addb
push
add
sub
je
aad
test
add
out
inc
clc
pop
outsl
mov
xor
mov
add
add
mov
pusha
add
xchg
lret
int
or
add
mov
sub
pop
cld
cmova
mov
mov
add
mov
pop
repnz
mov
add
and
add
lea
stos
les
mov
cld
dec
inc
popf
or
int
je
and
mov
fs
xchg
mov
icebp
rolb
mov
lret
shl
mov
mov
sar
adc
sbb
aam
add
or
cwtl
aas
push
add
and
mov
mov
inc
xchg
sub
xchg
add
lock
xor
ss
andl
test
rolb
mov
pop
aam
jmp
mov
data16
idivb
notl
push
es
mov
xchg
pop
pop
aaa
push
jmp
rolb
mov
lea
fildl
add
add
xchg
pop
fwait
cmp
sub
push
xchg
jp
mov
jg
add
add
sub
fcomps
add
pop
and
mov
adc
mov
add
add
and
adc
mov
inc
and
mov
mov
mov
sahf
mov
add
ds
clc
jns
testl
ficomps
je
add
loopne
mov
or
add
les
sti
rolb
pop
int
arpl
mov
js
sbb
rolb
mov
lods
ret
jg
adc
mov
add
adc
or
mov
push
push
ja
add
mov
pop
jecxz
sbb
nop
add
mov
call
cmp
mov
and
mov
mov
inc
or
add
mov
add
repnz
add
ret
mov
add
dec
adc
push
add
into
mov
add
push
add
mov
pop
cmpl
jbe
cmp
daa
rcrl
xlat
pop
les
xchg
in
add
sub
or
adc
mov
push
jae
sub
subl
mov
inc
mov
fbstp
add
mov
mov
add
pop
sbb
add
sbb
push
xchg
add
mov
mov
pop
push
add
std
shll
dec
pop
or
jb
mov
mov
and
cltd
nop
add
stc
scas
out
hlt
push
ds
leave
mov
sub
les
mov
push
aam
pop
mov
pop
push
mov
dec
or
ja
aam
cmc
mov
add
mov
xchg
aaa
popf
rolb
js
lcall
add
add
mov
mov
adc
mov
mov
sbb
push
pop
scas
out
bound
mov
mov
lsl
mov
add
fisubrl
idivl
dec
xorl
adc
lret
loop
mov
movl
mov
mov
std
xor
mov
dec
pop
stos
cltd
xlat
fs
xor
adc
or
xor
mov
push
mov
insb
jb
mov
repnz
sub
mov
add
mov
int
sbb
add
add
push
icebp
or
fs
scas
sub
add
in
add
add
loopne
mov
jl
add
arpl
flds
insl
pop
imul
pop
pop
mov
pop
scas
xchg
je
in
add
in
lret
mov
rolb
mov
addb
cld
add
sub
hlt
pop
sahf
adc
or
das
mov
jge
cwtl
hlt
sbb
in
or
push
xchg
inc
addb
pusha
add
jmp
xor
mov
popa
enter
mov
add
arpl
cmp
add
data16
xor
xor
xchg
pop
aas
xor
mov
lahf
das
rcll
addb
xchg
in
dec
lahf
mov
cmpsb
ds
mov
sbb
add
shrl
pop
and
mov
add
mov
addb
and
mov
add
push
push
sub
punpcklwd
add
add
mov
mov
xchg
cmp
mov
rolb
mov
rorl
mov
nop
add
xor
push
rolb
add
ret
cmp
xchg
out
icebp
mov
add
in
test
mov
sbb
cltd
fldt
cmp
pop
incb
pop
cli
addb
xor
jne
in
and
inc
pop
mov
add
int
rolb
adc
lret
jnp
and
push
ja
repnz
es
pop
ljmp
sub
add
mov
jns,pt
jno
sbb
imul
out
jo
mov
adc
imul
adc
dec
push
mov
mov
mov
icebp
movsb
add
jmp
int
cmp
jne
mov
jmp
add
add
mov
mov
add
cli
test
test
fs
jp
fs
pop
pop
outsb
mov
fbld
ja
push
add
mov
push
add
lock
sub
sbb
xor
mov
lahf
iret
cmpsl
dec
xor
mov
mov
or
test
ret
rolb
mov
add
rolb
mov
add
das
scas
fmull
add
movsl
push
repz
mov
in
mov
mov
outsl
ret
sub
ret
cmp
lahf
fwait
data16
mov
adc
jb
mov
push
pusha
add
jge
pop
push
cmp
add
or
pusha
add
mov
add
add
add
xchg
and
mov
xor
add
fsub
adc
and
mov
icebp
pop
imul
and
mov
lahf
lret
inc
cmpsl
scas
pushf
stos
pop
mov
int3
sub
push
repnz
jmp
scas
std
cmovge
addr16
rolb
mov
enter
inc
add
xchg
add
push
hlt
fsubl
repnz
mov
in
fbstp
sbb
mov
mov
inc
out
add
mov
add
hlt
pop
push
or
add
lahf
test
faddl
add
dec
mov
push
out
mov
mov
popf
xchg
mov
add
mov
addb
cli
ret
inc
push
jl
mov
pop
adc
mov
clc
scas
mov
mov
aam
sbb
inc
enter
dec
mov
mov
mov
stos
fsubs
mov
mov
sti
mov
mov
stc
repnz
mov
pop
push
fucom
dec
addb
add
mov
fnstsw
das
outsl
dec
shll
mov
add
or
sti
inc
add
repnz
fisubs
add
fisubrl
cmc
fdivrs
sahf
int3
fstl
add
and
mov
mov
xchg
xchg
hlt
cmpl
cli
mov
mov
add
cwtl
inc
mov
add
jne
frstor
inc
add
jecxz
decl
or
add
in
sbb
sub
mov
mov
test
cmp
xor
mov
cmp
test
imul
cmpsl
cmpsb
aam
ljmp
movsb
faddl
mov
shll
mov
mov
sub
add
mov
mov
add
hlt
or
sub
pushf
lea
into
mull
mov
mov
add
dec
ldmxcsr
xor
mov
mov
sub
xchg
add
popf
and
mov
mov
sub
add
mov
aaa
cmp
or
lods
xor
insl
int3
inc
je
popf
push
idiv
arpl
dec
push
test
arpl
jge
icebp
cmp
adc
push
popa
sub
add
cs
repnz
fcmovb
adc
adc
mov
addb
and
mov
adc
jb
mov
stos
xchg
fnstsw
add
add
je
mov
add
cmp
or
mov
lret
jae
in
pop
lahf
mov
add
fsubs
pop
xlat
or
loop
mov
inc
add
cmp
cli
push
pop
cmp
or
loopne
mov
lods
sub
or
xor
stc
imul
rorl
imul
and
mov
pop
outsl
push
dec
cltd
js
pop
loope
cmp
mov
mov
mov
pop
fisttpl
call
sbb
sbb
add
in
cs
mov
cmpsb
jnp
rcrl
or
sahf
iret
inc
add
test
lods
cmp
inc
add
add
dec
mov
scas
sbb
add
loope
add
jne
outsb
sbb
add
xchg
lret
sahf
into
stc
outsl
mov
add
insl
ja
add
mov
or
incl
lock
addb
push
dec
repnz
pop
xchg
mov
mov
aaa
inc
adc
xchg
add
cli
inc
notl
push
add
add
sub
test
push
jb
mov
or
push
fbstp
xor
mov
out
int
out
jecxz
mov
sbb
sbb
mov
mov
insl
mov
test
aam
shll
inc
cmp
sbb
sbb
mov
pop
xlat
out
xor
fimull
int
das
loope
lock
cltd
mov
mov
mov
mov
xchg
outsb
imul
mov
js
add
mov
mov
stc
test
fstpl
mov
xchg
pushf
lods
cwtl
cmpsb
adc
mov
call
pop
std
ds
mov
or
sbb
out
pop
or
test
jbe
add
in
ret
cli
scas
jae
jge
int
push
inc
lock
jle
scas
dec
outsb
or
mov
mov
add
sbb
sub
cmpsb
stos
repz
push
add
clc
fsubrl
sub
add
cmpsl
dec
stos
dec
mov
je
js
inc
sahf
dec
dec
imul
pop
adc
mov
cmpsl
add
lea
movhps
xor
mov
xchg
mov
test
add
dec
in
shl
add
xchg
sbb
fstl
in
pop
push
mov
addb
mov
or
and
push
pushl
mov
push
inc
add
inc
jge
pop
jg
js
adc
mov
pop
aas
aad
rolb
mov
sbb
add
xor
mov
add
add
stc
jg
shrl
jg
clc
or
mov
xchg
xor
pushf
dec
adc
dec
mov
imul
cld
sub
lea
stc
mov
add
push
mov
repnz
and
popa
lods
sub
add
inc
scas
inc
fsts
pop
gs
icebp
ss
leave
pop
jl
adc
cmp
mov
pop
clc
dec
ror
lahf
movsl
jns
push
das
cli
sbbl
add
test
add
jp
mov
ret
xor
int3
popf
fdiv
inc
xchg
add
mov
fdivrs
movsb
mov
mov
call
jae
mov
sahf
push
add
out
sbb
add
nop
push
add
test
add
std
lea
ret
inc
xchg
add
out
out
loopne
mov
call
mov
jp
mov
pop
in
mov
push
add
dec
hlt
mov
outsb
scas
in
ljmp
sbb
div
jle
mov
stos
out
xchg
mov
outsb
mov
pop
ret
or
cmp
xorl
add
push
aam
add
dec
cmp
in
cmpsb
js
repz
pushf
add
add
add
dec
pop
dec
push
sub
add
xor
mov
or
clc
inc
add
aas
lods
mov
sub
adc
mov
adc
fldl
add
dec
mov
popa
pop
ljmp
inc
dec
and
sbb
mov
sti
pop
loope
aas
hlt
adc
add
add
xchg
lds
jns
push
pop
aas
scas
fldl
add
push
daa
sub
mov
mov
jmp
add
in
aam
xor
mov
jl
add
aaa
icebp
cmpsl
je
rolb
mov
push
rolb
mov
xchg
out
div
loope
add
lods
loop
mov
add
mov
jnp
outsb
dec
in
fstps
jo
mov
dec
dec
bound
mov
add
pop
cmp
add
negl
push
mov
add
in
add
sbb
push
xchg
adc
mov
cmp
stos
adc
pop
int3
bound
mov
mov
int
scas
aad
push
mov
or
fdiv
and
mov
test
push
mov
mov
xlat
inc
push
testl
ljmp
push
add
mov
jns
fnsave
andl
mov
dec
pop
shll
add
push
or
jne
dec
imul
mov
add
mov
movsb
mov
arpl
xchg
imul
rolb
jno
add
scas
pop
jecxz,pn
xor
xchg
pop
xchg
mov
addr16
lock
fsubrl
mov
dec
sahf
pop
xor
mov
mov
add
leave
lods
sub
or
sbb
ret
cwtl
push
and
add
mov
inc
cmp
mov
repz
push
add
loopne
mov
mov
add
rorl
add
daa
dec
push
jo
mov
test
inc
add
pop
xchg
add
pop
testl
push
xlat
xor
mov
mov
mov
jecxz
or
mov
pop
jne
scas
cltd
jb
mov
js
xor
mov
hlt
in
push
mov
xchg
inc
add
cmc
cli
sub
stos
cmp
sub
pop
mov
inc
movsl
mov
pop
insb
ret
movd
mov
flds
sbb
loope
mov
pusha
add
sub
and
cld
dec
pop
mov
movsl
xor
cmc
mov
and
mov
mov
scas
arpl
rolb
or
mov
mov
add
rdmsr
add
test
mov
dec
dec
push
sbb
xor
add
inc
rolb
mov
int3
jnp
cmpsb
lea
adc
ds
push
in
mov
or
jne
sbb
std
in
loop
mov
or
jle
mov
into
push
jb
mov
xchg
pop
xchg
or
sub
fsubr
movsb
inc
jb
mov
push
fisttpl
pushf
push
and
cmp
jmp
add
add
imul
bound
mov
mov
add
mov
or
addb
fdiv
fistl
dec
call
jmp
addl
cmp
add
xor
jno
bound
mov
push
out
xchg
jnp
or
cmc
ja
in
push
mov
insl
sbb
dec
pop
call
adc
mov
add
hlt
push
add
dec
arpl
xchg
idivb
loopne
mov
mov
mov
int
hlt
imul
and
jge
fisubs
mov
lods
jmp
in
jmp
dec
jmp
ret
test
cmpl
ljmp
bound
mov
add
add
add
mov
addb
mov
cmc
mov
and
loopne
mov
cwtl
mov
jge
cmp
add
lret
filds
mov
es
mov
mov
xor
mov
mov
gs
sbb
and
add
dec
jne
xorl
pop
ljmp
cld
gs
xchg
push
mov
insl
scas
fwait
cmp
jo
mov
test
add
add
rol
out
mov
add
mov
and
sub
nop
add
addb
xlat
outsl
ljmp
sti
xchg
push
fbld
bound
mov
inc
add
dec
mov
mov
sbb
xchg
les
pop
daa
into
lods
call
lds
fucomip
inc
mov
push
xor
push
push
add
and
pop
dec
or
jae
fdivs
inc
add
rolb
mov
ret
mov
add
push
xchg
cltd
out
add
add
xchg
sahf
cmpsl
repnz
in
outsl
dec
cs
icebp
xchg
lds
mov
filds
lods
jp
rcr
into
stos
xchg
push
addb
lods
ja
in
lds
loop
mov
mov
sbb
cmp
icebp
and
clc
xor
dec
jecxz
xchg
pop
xor
dec
jg
add
fs
movsb
fs
push
or
adc
loop
mov
add
pop
sti
fistl
add
add
or
mov
add
sti
jb
mov
int
mov
jb
mov
dec
adc
mov
nop
add
mov
jp
push
add
out
repnz
pop
xlat
nop
add
pop
aam
pop
stos
jo
mov
fnstsw
movsl
dec
and
adc
out
jl
mov
mov
rolb
mov
jne
push
xor
mov
add
cmp
mov
repnz
cmpsl
xor
scas
pop
or
and
mov
sahf
dec
dec
rolb
mov
cmpsb
les
outsb
in
movsb
xchg
mov
and
add
xchg
nop
add
inc
pop
sbb
mov
test
movsl
xchg
mov
pop
jnp
adc
fists
mov
xor
mov
sub
lret
je
int
add
mov
add
addr16
aas
sub
add
add
push
jnp
cmp
hlt
lds
fdivs
mov
or
add
cmp
push
pop
jae
pop
cmp
rcrl
sub
outsl
sub
add
mov
sub
mov
insl
pmaxsw
jne
leave
es
mov
or
push
ret
mov
mov
and
push
cltd
and
mov
stos
adc
mov
add
jbe
jg
pop
in
mov
into
int
add
push
scas
jmp
add
call
into
xchg
cmp
add
add
sub
stos
xchg
cmp
cltd
aas
push
sti
or
jno
add
je
std
jge
add
mov
sbb
push
test
add
xor
sbb
mov
adc
fbstp
xchg
jns
mov
imul
lds
and
enter
mov
jle
sbb
jbe
call
mov
mov
xchg
adc
xor
jg
pop
jbe
cmp
adc
cmp
pop
xchg
add
out
xchg
lea
pop
rolb
jp
add
mov
fwait
add
push
and
mov
sbb
mov
and
adc
mov
mov
fisttpl
xchg
mov
add
cmp
mov
mov
fistpl
js
add
sahf
push
fldcw
fdivrp
pop
lret
sub
xchg
pop
push
loope
mov
sbb
int
xor
push
ret
push
add
mov
addb
or
shll
or
inc
add
xor
stos
fwait
out
inc
movsb
jge
add
mov
inc
ret
xabort
xchg
ds
dec
scas
or
aad
push
rolb
mov
mov
cmc
jl
jecxz
stos
inc
push
xchg
mov
mov
pop
xor
mov
xor
add
pop
pop
adc
jnp
lods
lcall
lods
xor
push
sahf
mov
add
lret
into
mov
add
adc
mov
dec
idiv
push
add
mov
sub
imul
jp
adc
mov
xchg
push
movsb
pushf
pop
and
mov
addr16
mov
mov
ret
lds
mov
add
xor
cmp
out
inc
sbb
push
ret
mov
pop
addb
cmp
data16
and
mov
inc
cltd
sub
jl
push
lods
jno
ss
sub
aas
in
pushf
int3
jl
xchg
mov
push
pop
mov
pop
sbb
ds
inc
add
scas
xor
into
dec
jno
loopne
mov
mov
hlt
cltd
repz
mov
sti
sub
jmp
rolb
push
pop
inc
add
add
xor
mov
mov
sub
test
mov
divps
mov
in
test
aad
imul
add
add
add
pop
sub
add
cmc
sub
xor
mov
cmc
ret
call
xchg
inc
and
addb
popf
hlt
and
or
int
push
adc
mov
xchg
mov
and
add
dec
or
cmp
push
pop
jb
mov
push
dec
mov
decl
inc
or
mov
mov
add
divl
jle
xchg
rcr
fdivs
xor
push
add
add
jge
mov
jb
mov
add
jo
mov
pop
fcomip
enter
cmp
mov
addb
inc
sub
pop
popa
pop
jle
stos
mov
popl
push
add
dec
sbb
inc
rolb
pop
popf
push
or
out
std
jae
insl
pushf
je
pop
mov
add
add
jp
rolb
mov
add
mov
ja
fs
or
jbe
jl
int
add
aaa
cmpsl
fsubrl
aad
sahf
xlat
loope
inc
cmp
inc
scas
call
das
repnz
mov
mov
xchg
pop
cmpsb
repz
jmp
add
add
imulb
add
add
das
and
mov
js
push
outsl
in
mov
pushf
jnp
push
inc
xlat
gs
imul
loop
mov
or
xchg
push
int
dec
movsl
adc
mov
add
mov
loop
mov
add
mov
and
mov
push
mov
sbb
jmp
pop
sbb
sbb
add
mov
lods
das
dec
inc
mov
cmp
enter
test
mov
sub
mov
test
adc
mov
sub
push
jecxz
addr16
xor
mov
add
mov
mov
call
mov
dec
dec
test
jl
call
push
mov
and
cmc
int3
mov
add
int
mov
dec
add
mov
out
cwtl
sub
in
cmc
loopne
mov
and
mov
inc
and
lds
add
out
enter
cltd
sbb
lret
sbb
add
mov
cmp
inc
add
dec
sub
mov
add
rolb
mov
cmpsl
sahf
data16
into
mov
rcll
xchg
pop
in
enter
push
xor
mov
or
add
pop
inc
ficompl
mov
cwtl
xor
mov
mov
popa
sahf
int3
rolb
daa
rcpps
add
mov
divl
add
push
add
xchg
add
into
mov
jg
jle
fcoml
add
add
jge
add
mov
std
cbtw
test
aam
cmpsb
loope
add
aaa
std
fwait
jl
sub
adc
push
mov
sub
ret
xchg
pop
stos
pop
mov
and
in
inc
push
sbb
add
addb
lods
aaa
mov
ja
add
in
inc
fisttpll
jg
xor
add
mov
in
dec
or
mov
xor
lds
cmp
es
call
lock
popa
loop
mov
mov
mov
insl
mov
mov
add
mov
sub
inc
push
sub
scas
mov
sub
add
test
mov
add
add
add
imul
aad
add
mov
mov
aam
sub
add
cmp
jl
addb
imul
mov
push
es
enter
and
add
or
and
mov
jg
imull
mov
mov
ret
sbb
mov
add
stos
addb
push
mov
mov
ss
pop
jmp
sub
push
fcomps
movsb
jae
dec
movsl
enter
adc
lock
jecxz
add
das
mov
popf
xor
mov
push
add
add
daa
inc
addb
push
in
mov
or
lods
inc
xchg
push
add
mov
mov
push
fwait
mov
bound
mov
or
mov
movsl
mov
pop
or
pop
inc
jmp
mov
mov
push
add
aad
add
mov
mov
add
mov
push
xchg
mov
stos
xchg
out
loop
mov
add
and
push
ret
cmp
fabs
pop
and
mov
mov
or
mov
push
icebp
addb
fmuls
push
cmp
or
push
add
mov
leave
dec
lcall
outsb
das
sti
xchg
insb
sbb
add
mov
push
add
popa
loope
jns
pop
cmp
mov
xor
xchg
jo
mov
add
mov
cmc
mov
mov
pop
cmp
mov
adc
mov
fstpl
lods
sub
repz
add
sbb
loop
mov
fnstsw
nop
add
inc
add
mov
dec
pushf
mov
andl
jbe
adc
dec
lea
lahf
or
lahf
cmpsb
lods
loop
mov
sbb
mov
dec
aaa
ds
add
add
mov
mov
or
aam
arpl
aaa
ja
adc
add
jnp
outsl
mov
out
jmp
jg
lock
test
add
insb
mov
mov
icebp
addr16
jmp
pop
mov
sbb
dec
lret
call
lret
jo
mov
add
inc
pop
xor
in
add
aas
stos
outsl
lret
dec
movsl
push
push
jbe
add
addr16
jmp
sub
hlt
push
add
bound
mov
dec
mov
xor
mov
xchg
and
mov
mov
mov
add
lahf
sbb
push
xchg
stc
fsub
mov
jg
mov
cltd
mov
fcmovnbe
lret
scas
mov
dec
andl
pop
pop
out
add
repz
add
mov
fwait
mov
mov
cmp
add
or
cmc
jl
add
add
jnp
add
int3
nop
add
mov
ja
add
or
add
mov
mov
push
and
dec
push
js
stos
xlat
mov
ljmp
jp
xchg
and
sub
add
mov
mov
add
es
in
mov
add
sbb
lahf
repnz
add
jmp
xchg
dec
or
jg
add
jle
add
cmp
ret
fwait
push
add
mov
call
aad
sbb
lcall
pop
cmc
sbb
daa
push
xchg
js
cmpsb
aaa
ret
repz
fadd
fidivs
cs
mov
cltd
das
add
pop
idiv
and
or
push
pop
adc
mov
lea
add
aam
mov
into
dec
cmp
xchg
inc
add
scas
jb
mov
push
aam
pop
lahf
js
rolb
mov
add
cli
jne
cmc
je
dec
xsha256
cmpsb
aam
add
addb
push
add
pop
jge
pop
scas
out
mov
push
sub
mov
mov
jns
add
mov
or
add
mov
aam
pushl
stos
sub
jp
dec
loop
mov
add
lret
lret
cmp
push
fcomi
sti
in
xchg
mov
sbb
xor
mov
jge
psrlq
repnz
xor
mov
add
add
mov
loopne
mov
mov
add
add
mov
loopne
mov
add
add
add
mov
mov
das
stos
cmpsb
lret
push
add
mov
dec
xor
lret
jno
dec
sub
add
sbb
add
mov
jl
stos
pop
sub
punpckhbw
jo
mov
fistpll
addb
out
sbb
inc
add
inc
jo
mov
jmp
add
mov
aad
add
or
xchg
ret
xor
aad
in
xchg
dec
jecxz
add
das
sub
gs
iret
arpl
or
rolb
mov
sbb
add
add
movsb
dec
inc
add
add
mull
mov
jg
jg
arpl
sub
mov
mov
fistpll
add
mov
push
dec
mov
lahf
insb
imul
ret
cmp
cltd
push
adc
mov
les
insl
xor
mov
add
add
push
or
lret
jbe
mov
fdiv
xchg
dec
inc
popf
dec
dec
cltd
jge
out
test
cld
icebp
loope
cmp
cld
scas
in
or
mov
rdtsc
out
fmuls
inc
in
dec
cmpsb
arpl
add
sbb
sbb
icebp
pop
cli
cmp
lret
mov
add
repz
addb
jae
mov
mov
pusha
add
and
mov
xor
mov
xchg
insb
inc
xchg
sub
jg
jecxz
jg
popf
pop
jmp
pop
repz
jecxz
das
dec
sub
hlt
lret
enter
push
sub
addb
das
test
scas
imul
cltd
das
mov
movl
add
mov
sub
dec
sahf
loope
add
mov
test
push
je
add
dec
lret
addb
mov
sub
roll
jnp
mov
add
jb
mov
out
pop
push
rolb
mov
add
mov
push
aad
jl
add
mov
dec
mov
jne
leave
mov
mov
clc
xchg
jno
sub
idivb
mov
pop
paddusb
fstps
add
inc
sbb
daa
add
mov
mov
pop
cmpsb
sbb
push
inc
add
jp
jp
add
xor
mov
sbb
add
vpsrlq
xchg
out
add
mov
test
aaa
adc
mov
add
loop
mov
adc
pop
icebp
cmp
bound
mov
mov
pop
cmp
jge
dec
js
std
dec
out
imul
or
add
mov
mov
ret
shl
nop
add
out
adc
jp
push
mov
fdivl
test
mov
adc
mov
mov
add
clc
loop
mov
and
mov
mov
or
add
adc
push
fnstcw
add
mov
xchg
cwtl
lods
mov
add
cli
dec
sbb
add
xor
mov
mov
ret
add
push
sub
add
addr16
aam
ja
es
sbb
mov
stc
mov
jecxz
clc
mov
int
bound
mov
loope
or
daa
mov
fcoms
scas
dec
mov
in
das
ret
inc
jg
stc
pop
lcall
lahf
ljmp
imul
pminub
adc
mov
in
cs
mov
insl
inc
fucom
addb
ja
popf
add
mov
test
shll
ss
cltd
mov
mov
mov
dec
jbe
add
mov
popa
js
mov
std
rolb
addb
pop
sbb
mov
adcl
arpl
repz
adc
nop
add
mov
mov
data16
mov
not
jo
mov
loopne
mov
mov
fnstsw
cmpsl
mov
xchg
dec
lea
xchg
mov
mov
lds
pop
cmp
add
inc
pop
push
add
inc
fsubrs
mov
mov
mov
enter
in
mov
push
mov
idivl
add
mov
push
push
or
sbb
in
fnstsw
mov
push
dec
repz
dec
push
stc
pop
cltd
decb
jnp
jns
das
imul
andl
add
in
int
fcoml
shl
in
in
sub
xlat
inc
add
add
repnz
mov
add
mov
add
popf
test
mov
in
les
insb
out
pop
push
mov
leave
call
jbe
jle
fists
stc
ljmp
add
dec
sub
pop
sbb
iret
and
lret
mov
add
shll
mov
mov
test
sbb
add
cli
adc
adc
inc
add
or
xchg
add
fmull
add
add
jmp
sub
lods
jbe
mov
imul
mov
add
add
mov
jnp
lcall
xchg
push
xchg
mov
mov
push
xor
inc
imul
and
out
add
call
add
jae
je
ljmp
xor
mov
add
mov
mov
cs
repz
xchg
icebp
pop
mov
lods
or
add
add
add
insl
mov
int3
xor
mov
dec
mov
ss
xchg
add
mov
add
jbe
std
mov
xor
mov
ret
adc
mov
imul
andl
jmp
rolb
mov
repz
mov
sbb
or
jl
jle
mov
mov
xchg
mov
call
push
add
mov
divb
mov
js
loope
outsb
fisubrs
add
mov
std
data16
aas
lea
mov
in
scas
xor
xchg
ret
dec
pushf
inc
lret
jno
jnp
lret
add
mov
push
pop
enter
mov
xor
and
mov
sbb
add
mov
pop
sub
mov
ret
mov
mov
insb
fmulp
sub
mov
js
xchg
bound
mov
mov
dec
xchg
pushl
movsl
jp
push
lahf
das
mov
or
adc
mov
xchg
call
jae
add
out
lahf
mov
movsb
sub
add
xor
mov
divb
add
add
mov
mov
addb
ss
add
outsl
fisubs
mov
add
fwait
scas
cmp
add
jge
or
mov
add
dec
jle
lods
push
add
push
add
rcll
xor
inc
sarl
and
mov
add
add
nop
add
jecxz
mov
cld
xchg
shr
into
bound
mov
pop
mov
push
lea
xor
inc
bound
mov
call
test
aam
ffree
sbb
add
xchg
add
mov
mov
std
sbb
jg
cmpsb
nop
add
sbb
push
add
add
adc
mov
dec
sti
jp
mov
inc
jp
sbb
sbb
mov
add
mov
data16
add
addb
mov
pop
jb
mov
or
in
sub
sbb
pop
and
inc
dec
jns
fstpt
sub
jo
mov
inc
ja
push
test
or
out
adc
mov
add
adc
jl
push
adc
mov
scas
dec
push
add
test
ljmp
jnp
add
add
push
dec
repnz
stos
js
mov
aas
adc
add
mov
push
gs
xlat
ret
sahf
pop
cmp
stc
out
cld
cwtl
rcrl
mov
xchg
push
dec
bound
mov
pop
outsb
xchg
push
adc
and
add
std
out
push
add
push
imul
hlt
fwait
ret
pusha
add
rorl
sub
push
add
mov
jge
cltd
in
lods
cmpsl
add
mov
mov
add
shrl
popa
icebp
cli
mov
cmpsl
xor
mov
fldt
imul
nop
add
pop
jne
std
jns
in
in
xchg
mov
add
test
xchg
cmp
fildll
add
add
cmp
jne
mov
jae
dec
pop
pusha
add
mov
dec
add
test
lcall
xor
add
pop
ret
pop
aad
add
add
data16
sbb
fistpll
jp
xchg
ss
push
push
push
sti
shrl
test
mov
pop
pushf
in
call
mov
or
mov
push
sub
arpl
testl
addb
clc
repz
push
dec
clc
clc
fildl
out
xor
mov
rolb
push
add
mov
sub
xor
mov
cmp
sarl
stos
int3
movsl
stos
add
std
pusha
add
pop
push
mov
adc
add
xchg
jmp
mov
mov
add
xchg
fwait
jb
mov
incb
mov
mov
mov
stos
cmp
movsl
aas
jb
mov
add
add
jg
je
fdivrs
jecxz
sbb
shll
push
add
dec
hlt
dec
mov
into
enter
fidivl
fsubs
add
add
jae
imul
fcoml
push
rolb
mov
es
add
imul
add
mov
jl
xchg
add
jg
jl
and
add
sub
xchg
aam
mov
push
jo
mov
mov
cs
mov
mov
test
mov
dec
pushf
cmp
mov
add
xchg
ds
aas
int3
add
sbb
mov
add
pop
out
jo
mov
fisubrl
movsb
and
add
inc
adc
add
arpl
cmp
dec
add
movsb
bound
mov
imul
jg
sbb
mov
mull
or
ja
movsb
sbb
cmpsb
dec
adc
cmp
push
push
mov
pop
push
or
mov
add
jmp
sub
adc
mov
add
aad
test
sahf
push
pop
in
xchg
cmp
mov
sub
pop
scas
sbb
mov
cmp
inc
dec
push
lret
lahf
and
sbb
jl
mov
out
dec
jg
lea
add
xchg
adc
mov
loopne
mov
or
insl
lds
test
vmptrld
mov
push
xor
adc
push
cmp
or
stos
aaa
xor
mov
test
js
add
cmp
pop
cwtl
nop
add
mov
jb
mov
mov
mov
in
add
add
dec
cmp
stos
test
pop
ja
rcll
idivb
aaa
xchg
sbb
or
arpl
es
add
in
lcall
add
push
jb
mov
test
adc
mov
xchg
push
inc
dec
xchg
mov
add
sub
xor
mov
mov
add
mov
xor
test
mov
add
mov
mov
sbb
js
in
mov
mov
mov
push
test
outsb
out
dec
ficomps
pop
fnstcw
ja
jp
mov
cmp
sbb
addb
inc
and
mov
sub
loopne
mov
mov
dec
pop
in
sbb
mov
push
int3
mov
mov
mov
jns
jae
add
sbb
add
test
add
xor
jmp
sub
and
mov
ret
data16
push
push
aam
mov
jb
mov
adc
mov
repz
lds
sub
add
and
xchg
loop
mov
cwtl
mov
or
push
xor
bound
mov
inc
add
add
jbe
inc
into
nop
add
pop
mov
call
push
xchg
or
sub
mov
nop
add
jl
fwait
lcall
mov
mov
mov
outsb
mov
mov
add
add
mov
add
in
add
add
jns
dec
dec
cmc
and
inc
add
mov
jno
add
jle
outsl
mov
xchg
stos
pop
ret
imul
popa
jo
mov
mov
rolb
mov
push
call
lahf
call
add
pop
ror
hlt
lock
in
and
int3
sbb
imull
fsubrp
sbb
sbb
fmull
add
add
mov
and
lret
mov
mov
mov
or
mov
add
mov
rolb
mov
sbb
xchg
add
mov
mov
cmc
int3
adc
cmp
test
int
mov
mov
mov
imul
jne
sbb
add
add
adc
rolb
mov
mov
add
imul
push
push
jns
hlt
xchg
in
xor
mov
mov
add
ret
xchg
add
mov
xlat
push
jg
xchg
in
popf
movsb
ss
mov
sbb
add
sbb
adc
mov
add
stos
sub
sahf
adc
incb
into
inc
cmc
or
sub
mov
xor
xor
push
test
mov
add
int
push
cltd
jo
mov
add
mov
xchg
iret
mov
xchg
ljmp
aam
repnz
js
ret
mov
mov
movsb
outsl
in
or
hlt
and
mov
aaa
jge
xor
mov
das
jae
and
addr16
lahf
mov
add
fldcw
cmp
fcoms
mov
add
enter
cmp
mov
add
add
sub
pop
xor
push
repz
jae
xchg
repnz
add
shll
aaa
pop
stos
nop
rolb
rolb
mov
adc
mov
cmpsb
shll
xchg
repnz
or
jno
and
add
cmp
sbb
int
dec
mov
add
push
xor
add
pop
les
mov
xchg
xchg
lods
call
jge,pt
ficomps
jge
or
push
je
pop
iret
fwait
popf
push
add
into
inc
and
mov
test
dec
iret
add
mov
add
addb
sti
enter
cmp
mov
rolb
ljmp
mov
mov
dec
sbb
add
mov
or
mov
loop
mov
fmuls
lods
jmp
add
gs
sub
jle
add
fadd
data16
mov
fnstcw
cmp
mov
and
push
sbb
mov
sbb
into
dec
push
add
stos
mov
loop
mov
hlt
sti
scas
push
add
mov
sti
jno
icebp
pop
dec
or
jns
mov
sbb
jno
mov
mov
fidivrl
or
add
add
cmp
xor
mov
popa
dec
push
sbb
add
mov
lcall
add
mov
and
mov
mov
adc
push
out
movsb
loope
aaa
cwtl
or
mov
xchg
inc
sbb
out
into
imul
dec
adc
mov
fidivrl
mov
jno
jbe
mov
jle
inc
xchg
add
mov
add
cmp
cmp
movsb
cs
xchg
ret
retw
pop
call
mov
jae
aaa
repnz
push
out
inc
sbb
add
xchg
imul
js
xchg
mov
sarl
call
mov
clc
repnz
nop
cld
jae
and
loop
inc
adc
sub
repnz
nop
cld
jae
add
mov
pop
out
cld
push
mov
xchg
ret
add
fiadds
add
add
repz
sbb
add
push
mov
nop
leave
nop
jmp
inc
scas
jae
and
push
mov
nop
leave
nop
jmp
scas
aaa
add
add
int3
mov
clc
repnz
nop
cld
jae
je
add
test
jmp
add
add
xor
push
mov
pop
push
mov
xchg
ret
add
mov
and
add
je
push
mov
nop
leave
nop
jmp
add
jo
mov
add
in
nop
leave
nop
jmp
add
lret
inc
in
sub
test
push
mov
xchg
ret
add
mov
mov
nop
cld
jae
add
add
test
out
fidivs
add
add
repnz
nop
cld
jae
push
add
std
push
push
mov
nop
leave
nop
jmp
mov
sub
aad
add
fcompl
repnz
nop
cld
jae
add
add
addl
add
in
nop
leave
nop
jmp
push
mov
push
mov
xchg
ret
add
cltd
fiadds
aam
dec
push
mov
xchg
ret
push
icebp
add
add
scas
out
loop
pop
push
mov
nop
leave
nop
jmp
mov
add
cmp
test
add
clc
repnz
nop
cld
jae
in
add
mov
cmpw
push
mov
nop
leave
nop
jmp
add
add
mov
push
mov
xchg
ret
lret
add
add
ret
clc
repnz
nop
cld
jae
add
sub
add
push
push
adc
repnz
nop
cld
jae
add
sub
addr16
cld
push
push
mov
xchg
ret
ds
add
repnz
nop
cld
jae
add
addb
add
cmp
mov
xchg
ret
add
add
add
add
pop
push
mov
xchg
ret
add
test
lret
jne
push
mov
nop
leave
nop
jmp
add
add
out
jne
push
mov
nop
leave
nop
jmp
add
testl
repnz
nop
cld
jae
add
add
add
add
add
clc
repnz
nop
cld
jae
repnz
add
and
mov
pop
ror
push
mov
xchg
ret
add
add
mov
clc
repnz
nop
cld
jae
add
stos
stos
xchg
add
inc
and
clc
repnz
nop
cld
jae
pop
addb
mov
or
clc
repnz
nop
cld
jae
and
in
jne
push
mov
nop
leave
nop
jmp
add
jne
add
clc
repnz
nop
cld
jae
add
add
iret
add
clc
repnz
nop
cld
jae
fildl
add
int
and
ret
iret
push
mov
lea
adc
fs
add
cmpb
nop
nop
cld
jae
in
fsub
fadds
add
pushf
mov
push
mov
nop
leave
nop
jmp
push
loop
aad
fistpl
add
repnz
nop
cld
jae
pop
add
add
mov
clc
repnz
nop
cld
jae
aad
out
test
je
xor
mov
adc
repnz
nop
cld
jae
mov
add
add
push
mov
xchg
ret
add
mov
add
mov
add
add
clc
repnz
nop
cld
jae
add
and
je
roll
push
mov
xchg
ret
push
aad
mov
add
repnz
test
nop
nop
cld
jae
add
add
mov
fldenv
jbe
clc
repnz
nop
cld
jae
push
and
add
adc
push
mov
xchg
ret
add
add
push
imul
repnz
nop
cld
jae
add
add
clc
repnz
nop
cld
jae
add
dec
add
clc
repnz
nop
cld
jae
add
test
ret
mov
loop
clc
repnz
nop
cld
jae
cld
jae
add
mov
push
add
repnz
nop
cld
jae
lret
in
add
add
clc
repnz
nop
cld
jae
add
add
add
add
clc
repnz
nop
cld
jae
add
add
add
shl
clc
repnz
nop
cld
jae
add
add
andl
add
popf
and
clc
repnz
nop
cld
jae
mov
test
add
add
mov
cld
add
add
add
fiadds
nop
cld
jae
inc
push
add
jae
scas
push
push
mov
xchg
ret
aad
add
add
and
push
mov
xchg
ret
inc
sub
mov
pop
cld
and
add
mov
mov
xchg
ret
icebp
add
ds
add
mov
xchg
ret
out
sahf
xor
push
xchg
clc
repnz
nop
cld
jae
add
add
cld
lret
cld
add
add
add
add
and
push
add
in
and
push
rolb
addr16
mov
mov
clc
repnz
nop
cld
jae
mov
add
dec
popa
clc
repnz
nop
cld
jae
add
and
movsl
inc
add
add
add
add
repnz
nop
cld
jae
fiadds
clc
repnz
nop
cld
jae
add
add
xor
dec
push
clc
repnz
nop
cld
jae
loop
loop
mov
add
push
mov
xchg
ret
add
in
sbb
test
add
clc
repnz
nop
cld
jae
add
icebp
sbb
xor
add
clc
repnz
nop
cld
jae
push
add
mov
pushl
clc
repnz
nop
cld
jae
add
add
mov
cmp
repnz
nop
cld
jae
out
add
pop
add
pusha
add
in
nop
leave
nop
jmp
inc
add
add
loop
adcl
or
cmp
ret
add
add
fiadds
and
jl
clc
repnz
nop
cld
jae
add
add
add
clc
repnz
nop
cld
jae
jle
add
add
out
call
clc
repnz
nop
cld
jae
addb
mov
mov
test
add
push
cs
push
add
jmp
pop
add
xor
clc
repnz
nop
cld
jae
scas
and
je
clc
repnz
nop
cld
jae
add
aad
add
push
mov
nop
leave
nop
jmp
test
add
add
divb
andl
nop
cld
jae
add
add
xor
mov
mov
mov
clc
repnz
nop
cld
jae
add
and
cld
int
xor
repnz
nop
cld
jae
sub
aad
add
loop
bound
mov
push
mov
xchg
ret
cld
add
push
add
push
push
mov
xchg
ret
add
add
add
ds
mov
nop
nop
cld
jae
in
movsl
pop
add
xorb
clc
repnz
nop
cld
jae
inc
add
push
mov
nop
leave
nop
jmp
mov
add
fadds
pop
push
mov
nop
leave
nop
jmp
test
in
mov
movsl
add
add
repnz
nop
cld
jae
mov
add
arpl
clc
repnz
nop
cld
jae
test
jae
xchg
aad
add
mov
xchg
ret
add
in
movb
or
inc
xor
clc
repnz
nop
cld
jae
je
aad
nop
add
cld
push
push
mov
xchg
ret
add
add
add
add
popa
add
repnz
nop
cld
jae
add
aad
add
cmpsb
nop
add
dec
pop
push
mov
xchg
ret
add
add
add
add
clc
repnz
nop
cld
jae
test
sar
nop
nop
cld
jae
fcoms
add
add
pusha
add
push
mov
nop
leave
nop
jmp
add
and
pop
xchg
insl
mov
push
mov
xchg
ret
cltd
add
add
add
in
pop
push
mov
xchg
ret
add
add
movsl
add
mov
jne
clc
repnz
nop
cld
jae
fildl
add
add
push
mov
nop
leave
nop
jmp
add
or
in
nop
leave
nop
jmp
add
mov
add
adc
add
add
clc
repnz
nop
cld
jae
add
add
pop
cld
lret
gs
push
push
mov
nop
leave
nop
jmp
ficomps
pop
mov
add
cmp
clc
repnz
nop
cld
jae
add
fdivs
add
clc
repnz
nop
cld
jae
cld
sahf
add
ja
mov
push
mov
nop
leave
nop
jmp
mov
push
add
sahf
xor
mov
repnz
nop
cld
jae
add
fadds
aaa
out
and
adcb
nop
leave
nop
jmp
cld
and
test
mov
nop
leave
nop
jmp
fildl
mov
push
and
add
subl
jae
push
out
add
xor
mov
push
mov
nop
leave
nop
jmp
mov
add
add
xor
mov
inc
add
add
add
aad
add
les
clc
repnz
nop
cld
jae
fdivs
push
add
jmp
leave
nop
jmp
cltd
add
pop
sub
sub
xchg
push
mov
xchg
ret
test
add
add
add
mov
push
mov
xchg
ret
add
add
add
add
add
push
mov
xchg
ret
add
fdivr
add
leave
sub
in
nop
leave
nop
jmp
loop
xor
sub
jne
jmp
add
lret
add
add
add
and
je
add
clc
repnz
nop
cld
jae
in
jb
sub
dec
adc
nop
nop
cld
jae
add
icebp
add
dec
and
push
mov
xchg
ret
add
fildl
add
mov
add
clc
repnz
nop
cld
jae
add
arpl
push
mov
xchg
ret
stos
mov
jl
mov
mov
mov
clc
repnz
nop
cld
jae
add
jbe
mov
clc
repnz
nop
cld
jae
add
clc
repnz
nop
cld
jae
add
clc
add
add
imul
jae
mov
add
sub
in
nop
leave
nop
jmp
cltd
ds
add
movsl
idivb
add
push
mov
xchg
ret
addl
jl
pop
movzwl
clc
repnz
nop
cld
jae
cld
add
je
dec
mov
push
mov
nop
leave
nop
jmp
jb
ds
xor
mov
mov
scas
enter
nop
leave
nop
jmp
add
fisttpl
test
repnz
nop
cld
jae
add
icebp
and
push
mov
xchg
ret
loop
add
aaa
je
push
repnz
repnz
nop
cld
jae
xor
mov
test
sbb
nop
nop
cld
jae
add
jno
jmp
add
add
add
je
add
add
add
int
mov
repnz
nop
cld
jae
add
add
or
out
inc
add
add
add
push
add
push
mov
xchg
ret
add
add
repnz
mov
push
mov
sti
add
popa
movsl
pop
pop
add
add
or
clc
repnz
nop
cld
jae
je
sub
add
jmp
add
test
push
add
add
aad
movb
push
push
push
mov
nop
leave
nop
jmp
lret
add
add
add
mov
nop
leave
nop
jmp
add
add
add
mov
mov
xchg
ret
xor
cld
test
sti
clc
repnz
nop
cld
jae
add
add
jae
out
ss
loopne
mov
clc
repnz
nop
cld
jae
add
and
cmpl
loop
add
fildl
mov
mov
repnz
nop
cld
jae
clc
add
add
and
repnz
nop
cld
jae
add
addb
add
push
mov
xchg
ret
add
mov
cwtl
ljmp
inc
xor
add
push
xor
mov
xor
add
and
add
repnz
nop
cld
jae
fiadds
pop
aam
subl
clc
repnz
nop
cld
jae
aad
int
cld
lcall
add
cld
add
fiadds
test
push
add
add
clc
repnz
nop
cld
jae
and
and
add
add
sti
call
clc
repnz
nop
cld
jae
add
in
add
mov
add
cmp
push
mov
nop
leave
nop
jmp
aad
add
out
test
xor
push
mov
xchg
ret
mov
add
add
add
in
nop
leave
nop
jmp
clc
cs
add
out
not
clc
repnz
nop
cld
jae
lret
mov
add
test
add
clc
repnz
nop
cld
jae
add
loop
mov
push
mov
xchg
ret
add
jl
loop
mov
les
mov
xchg
ret
add
in
jae
push
pop
pop
push
mov
xchg
ret
sub
jle
add
fsubp
dec
mov
clc
repnz
nop
cld
jae
add
cwtl
add
push
mov
nop
leave
nop
jmp
add
adc
popl
clc
repnz
nop
cld
jae
mov
movsl
aad
fsubrs
pop
clc
repnz
nop
cld
jae
test
mov
cmp
insb
insb
add
repnz
nop
cld
jae
add
jl,pt
inc
push
adc
clc
repnz
nop
cld
jae
push
stc
decl
clc
repnz
nop
cld
jae
add
add
add
repnz
nop
cld
jae
add
fiadds
repnz
clc
repnz
nop
cld
jae
loop
movsl
xor
sahf
push
clc
repnz
nop
cld
jae
add
jl
aad
pop
add
push
mov
xchg
ret
xor
je
and
jmp
add
out
add
xchg
jae
add
jmp
ljmp
mov
test
mov
add
add
add
adc
in
nop
leave
nop
jmp
add
sub
add
nop
nop
cld
jae
add
add
add
jmp
add
add
add
add
add
and
add
int
and
push
mov
xchg
ret
mov
mov
pop
push
mov
and
inc
add
push
mov
add
call
nop
nop
cld
jae
add
inc
xor
lahf
je
clc
repnz
nop
cld
jae
push
repnz
add
nop
nop
cld
jae
clc
xor
mov
mov
mov
add
pop
add
cli
popa
push
mov
xchg
ret
push
push
push
and
add
add
push
add
clc
repnz
nop
cld
jae
and
add
add
repnz
nop
cld
jae
aad
add
shrl
cli
clc
repnz
nop
cld
jae
add
add
add
add
add
mov
and
clc
repnz
nop
cld
jae
sahf
out
add
mov
add
clc
repnz
nop
cld
jae
aad
stos
xchg
jae
xor
clc
repnz
nop
cld
jae
aad
cs
add
mov
mov
push
mov
xchg
ret
add
add
add
adc
push
push
mov
xchg
ret
push
add
in
add
add
ret
xchg
mov
nop
cld
jae
push
fadds
add
movsl
dec
mov
clc
repnz
nop
cld
jae
add
push
add
add
clc
repnz
nop
cld
jae
subl
in
add
jne
addl
pop
add
sbb
mov
nop
leave
nop
jmp
add
add
xchg
pop
clc
repnz
nop
cld
jae
xor
addl
shl
push
mov
nop
leave
nop
jmp
add
add
add
jae
add
push
mov
nop
leave
nop
jmp
fadds
mov
add
xor
add
mov
nop
leave
nop
jmp
fmulp
in
sub
rep
clc
repnz
nop
cld
jae
add
pop
addb
xor
push
cld
inc
add
pop
add
add
add
repnz
nop
cld
jae
clc
test
repnz
nop
cld
jae
aad
mov
add
add
div
push
mov
nop
leave
nop
jmp
movb
mov
test
nop
nop
cld
jae
add
sub
mov
push
mov
xchg
ret
push
mov
aaa
add
aad
pop
sub
inc
and
mov
nop
leave
nop
jmp
aad
jle
add
daa
adc
clc
repnz
nop
cld
jae
add
cltd
add
int3
or
add
repnz
nop
cld
jae
add
clc
movsl
in
jb
push
mov
nop
leave
nop
jmp
pop
add
clc
repnz
nop
cld
jae
out
mov
adc
push
xlat
xor
push
mov
xchg
ret
add
add
loop
mov
sbb
sar
repnz
nop
cld
jae
icebp
mov
push
stos
push
mov
xchg
ret
add
pop
xor
fdivrp
repnz
nop
cld
jae
repnz
push
add
aam
rol
clc
repnz
nop
cld
jae
mov
add
lret
add
inc
add
add
pop
mov
add
mov
nop
cld
jae
add
andb
add
arpl
mov
nop
leave
nop
jmp
movsl
push
loop
stos
rep
push
mov
xchg
ret
add
test
add
test
or
xor
add
clc
repnz
nop
cld
jae
add
insb
push
clc
repnz
nop
cld
jae
mov
aaa
cld
add
mov
nop
leave
nop
jmp
int
cld
cmp
icebp
pop
sub
clc
repnz
nop
cld
jae
add
push
jae
lret
add
mov
add
clc
repnz
nop
cld
jae
mov
add
fsubrs
pusha
add
mov
xchg
ret
lret
add
mov
test
sub
repnz
nop
cld
jae
add
int
add
aad
jnp
add
clc
repnz
nop
cld
jae
add
fadds
test
dec
cmp
repnz
nop
cld
jae
clc
add
loop
int
add
in
add
testl
add
add
xor
mov
push
clc
repnz
nop
cld
jae
inc
lret
jl
movb
add
mov
repnz
nop
cld
jae
and
add
ds
add
repnz
nop
cld
jae
test
add
jae
andb
mov
clc
repnz
nop
cld
jae
loop
aad
stos
dec
je
clc
repnz
nop
cld
jae
add
adc
lods
clc
repnz
nop
cld
jae
inc
add
repnz
jb
mov
popf
jne
clc
repnz
nop
cld
jae
add
add
mov
push
clc
repnz
nop
cld
jae
jle
add
add
cld
add
clc
repnz
nop
cld
jae
add
les
clc
repnz
nop
cld
jae
fiadds
cltd
add
sub
mov
add
sbb
and
loope
xchg
pop
gs
push
push
mov
xchg
ret
add
scas
inc
add
add
add
nop
nop
cld
jae
inc
add
add
adc
repnz
nop
cld
jae
loop
mov
loop
or
mov
xchg
ret
mov
sub
add
add
jae
mov
repnz
add
test
add
mov
in
sbb
add
fs
add
popa
mov
inc
add
leave
dec
imul
clc
repnz
nop
cld
jae
add
inc
add
sub
nop
nop
cld
jae
icebp
lret
stos
test
sahf
jbe
push
mov
jg,pt
push
add
add
add
loopne
addb
rolb
mov
push
mov
int3
add
aas
add
add
add
out
add
nop
xor
movb
repnz
nop
cld
jae
test
test
clc
repnz
nop
cld
jae
cmp
jb
pop
lea
push
mov
xchg
ret
add
cs
je
clc
repnz
nop
cld
jae
mov
jb
xor
clc
repnz
nop
cld
jae
pop
cltd
cmp
stos
clc
repnz
nop
cld
jae
sub
in
add
add
dec
add
push
mov
xchg
ret
add
add
push
add
jg
clc
repnz
nop
cld
jae
repnz
inc
shll
push
clc
repnz
nop
cld
jae
cld
aad
repnz
add
mov
out
testl
add
aad
add
pop
add
rclb
faddl
xchg
ret
sahf
inc
jae
add
sub
mov
movzwl
clc
repnz
nop
cld
jae
out
ficoms
mov
push
mov
nop
leave
nop
jmp
push
cld
je
add
lret
push
push
mov
xchg
ret
add
fldt
add
add
clc
repnz
nop
cld
jae
add
add
subl
push
mov
xchg
ret
push
add
xor
clc
repnz
nop
cld
jae
push
mov
clc
repnz
nop
cld
jae
add
fdivrs
loopne
add
test
repnz
movsl
sub
adc
in
nop
leave
nop
jmp
fildl
add
push
push
sub
pop
mov
clc
repnz
nop
cld
jae
inc
scas
test
jae
xchg
add
mov
push
push
mov
nop
leave
nop
jmp
sub
add
add
clc
repnz
nop
cld
jae
cld
and
mov
sub
clc
repnz
nop
cld
jae
test
lret
mov
into
pushl
push
mov
nop
leave
nop
jmp
push
sahf
mov
and
clc
repnz
nop
cld
jae
add
movsl
ds
add
clc
repnz
nop
cld
jae
add
add
add
fs
call
clc
repnz
nop
cld
jae
add
sub
jmp
cld
or
nop
leave
nop
jmp
fiadds
cld
fdivrs
clc
repnz
nop
cld
jae
test
aad
add
mov
leave
nop
jmp
add
sub
add
jle
jnp
push
mov
xchg
ret
add
aad
add
mov
xor
clc
repnz
nop
cld
jae
movsl
pop
xor
repnz
dec
dec
push
mov
xchg
ret
fstpt
add
je
clc
repnz
nop
cld
jae
fistpl
or
mov
nop
leave
nop
jmp
je
add
movsl
add
in
clc
repnz
nop
cld
jae
inc
add
cmp
clc
repnz
nop
cld
jae
aad
xor
add
nop
nop
cld
jae
add
or
cmc
inc
add
and
xchg
aad
mov
ss
call
clc
repnz
nop
cld
jae
sub
xor
push
mov
nop
leave
nop
jmp
pop
loop
scas
push
inc
jo
mov
pop
xchg
clc
repnz
nop
cld
jae
add
icebp
fisttps
call
and
int
add
add
or
in
nop
leave
nop
jmp
cmp
add
add
in
cmp
push
mov
xchg
ret
add
loop
push
push
mov
xchg
ret
and
add
ud1
fs
repnz
nop
cld
jae
fdivr
test
adc
add
clc
repnz
nop
cld
jae
add
aaa
fdivrs
jbe
push
mov
nop
leave
nop
jmp
inc
mov
add
push
mov
xchg
ret
fcomi
inc
jle
push
add
or
nop
nop
cld
jae
push
add
dec
add
mov
xchg
ret
lret
push
xor
push
mov
nop
leave
nop
jmp
mov
fadds
push
pop
push
mov
mov
lds
pop
mov
add
sbb
mov
push
clc
repnz
nop
cld
jae
aad
clc
cld
add
push
clc
repnz
nop
cld
jae
add
cld
add
cltd
add
nop
cld
jae
movsl
add
pop
add
add
das
add
clc
repnz
nop
cld
jae
pop
add
inc
in
dec
push
mov
nop
leave
nop
jmp
and
loop
add
adc
add
mov
add
add
pop
pop
sub
inc
int
fcmovnu
lea
clc
repnz
nop
cld
jae
add
push
and
clc
repnz
nop
cld
jae
add
add
test
fldt
nop
leave
nop
jmp
addl
int
pop
je
clc
repnz
nop
cld
jae
and
add
mov
xchg
ret
add
fmul
and
imul
add
test
mov
mov
inc
add
jl
stos
icebp
add
mov
mov
clc
repnz
nop
cld
jae
xor
andl
push
mov
add
fildl
add
lahf
pop
cmp
enter
adc
nop
leave
nop
jmp
cltd
push
inc
add
cltd
lret
sub
push
fldl
xchg
ret
fiadds
add
add
add
movsb
clc
repnz
nop
cld
jae
add
add
mov
clc
repnz
nop
cld
jae
mov
add
nop
leave
nop
jmp
icebp
repnz
add
add
cmpsb
dec
push
push
mov
xchg
ret
add
add
add
push
mov
xchg
ret
clc
in
add
repnz
push
sarl
nop
nop
cld
jae
sub
add
inc
fcomip
pop
call
in
nop
leave
nop
jmp
jb
add
popa
pop
push
clc
repnz
nop
cld
jae
add
je
je
mov
xor
push
mov
xchg
ret
fsubrs
add
icebp
test
cmpl
jae
cld
inc
cmpb
repnz
cs
mov
add
xchg
iret
push
push
mov
xchg
ret
add
aad
add
in
inc
add
add
cmpb
add
pop
vshufps
push
mov
xchg
ret
movsl
mov
clc
je
addb
fsubs
sbb
add
clc
repnz
nop
cld
jae
add
fiadds
sti
push
mov
nop
leave
nop
jmp
in
clc
add
sahf
add
push
mov
nop
leave
nop
jmp
cmpb
add
xor
clc
repnz
nop
cld
jae
add
add
repnz
nop
cld
jae
addl
jl
add
out
push
clc
repnz
nop
cld
jae
add
push
aad
add
push
mov
nop
leave
nop
jmp
sub
add
pop
jb
scas
stos
push
mov
xchg
ret
add
icebp
in
add
sub
repnz
nop
cld
jae
addb
lret
add
sahf
push
add
xchg
ret
sahf
icebp
add
sub
aad
add
dec
mov
clc
repnz
nop
cld
jae
aad
mov
jmp
add
and
push
add
push
or
clc
repnz
nop
cld
jae
aad
mov
or
mov
nop
leave
nop
jmp
int
int
aad
dec
pusha
clc
repnz
nop
cld
jae
add
add
xchg
adc
repnz
nop
cld
jae
add
clc
add
test
or
jge
clc
repnz
nop
cld
jae
add
inc
add
ja
rep
clc
repnz
nop
cld
jae
add
je
add
aad
add
push
mov
nop
leave
nop
jmp
add
push
clc
repnz
nop
cld
jae
lret
in
add
add
clc
repnz
nop
cld
jae
push
and
mov
clc
repnz
nop
cld
jae
add
jae
add
ljmp
clc
repnz
nop
cld
jae
add
push
insl
add
push
mov
nop
leave
nop
jmp
add
inc
add
push
clc
repnz
nop
cld
jae
add
add
test
mov
clc
repnz
nop
cld
jae
in
xchg
out
cld
test
sub
mov
nop
leave
nop
jmp
add
stos
test
pop
test
sbb
jp
jbe
clc
repnz
nop
cld
jae
sub
xor
mov
push
mov
nop
leave
nop
jmp
xchg
pop
pushf
pop
push
mov
xchg
ret
add
add
pop
add
clc
repnz
nop
cld
jae
add
add
out
mov
clc
repnz
nop
cld
jae
add
add
push
xchg
jg
pop
cmp
repnz
nop
cld
jae
add
add
aad
push
add
push
mov
xchg
ret
out
mov
mov
push
mov
xchg
ret
xor
repnz
in
clc
repnz
nop
cld
jae
mov
in
mov
clc
repnz
nop
cld
jae
out
test
addl
clc
repnz
nop
cld
jae
mov
icebp
test
add
sub
jmp
nop
cld
jae
int
add
xorl
clc
repnz
nop
cld
jae
pop
add
fadds
add
mov
clc
repnz
nop
cld
jae
add
jle
push
mov
mov
add
mov
flds
add
fisttpl
mov
nop
leave
nop
jmp
addb
xor
nop
leave
nop
jmp
mov
test
mov
push
push
mov
nop
leave
nop
jmp
inc
add
icebp
pusha
add
icebp
push
mov
nop
leave
nop
jmp
fiadds
mov
sub
mov
in
nop
leave
nop
jmp
add
add
add
add
add
mov
nop
leave
nop
jmp
inc
push
cld
push
add
push
jmp
incl
mov
and
loop
mov
aad
lret
jae
test
loope
add
clc
repnz
nop
cld
jae
and
jbe
add
clc
repnz
nop
cld
jae
addb
fadds
cmp
mov
adc
repnz
nop
cld
jae
add
jle
in
mov
clc
repnz
nop
cld
jae
add
add
add
jle
popa
jo
cs
repnz
nop
cld
jae
loop
inc
add
mov
clc
repnz
nop
cld
jae
add
push
push
maskmovq
push
mov
nop
leave
nop
jmp
stos
aad
movsl
push
add
rep
push
mov
nop
leave
nop
jmp
add
repnz
add
shrl
in
add
add
add
add
clc
repnz
nop
cld
jae
add
add
add
mov
add
push
mov
xchg
ret
add
inc
xor
aad
sub
nop
nop
cld
jae
test
jae
clc
in
loopne
mov
mov
clc
repnz
nop
cld
jae
scas
add
push
mov
xchg
ret
push
add
aaa
mov
cltd
add
add
clc
repnz
nop
cld
jae
add
inc
fnstcw
push
mov
nop
leave
nop
jmp
add
jle
mov
jne
jmp
jmp
add
add
add
add
rolb
jnp
les
repnz
nop
cld
jae
add
add
in
push
pusha
add
clc
repnz
nop
cld
jae
add
add
jmp
add
mov
loop
add
add
sub
sub
add
mov
dec
push
clc
repnz
nop
cld
jae
add
add
inc
sub
ret
push
mov
xchg
ret
andb
add
jle
or
sarl
dec
imul
leave
nop
jmp
add
aad
push
clc
repnz
nop
cld
jae
add
add
mov
clc
repnz
nop
cld
jae
push
push
je
in
lea
clc
repnz
nop
cld
jae
aaa
add
subl
lret
in
nop
leave
nop
jmp
mov
inc
inc
pop
ret
push
mov
nop
leave
nop
jmp
inc
xor
inc
in
mov
clc
repnz
nop
cld
jae
aad
sub
out
mov
clc
repnz
nop
cld
jae
sahf
and
cld
pop
jae
mov
clc
repnz
nop
cld
jae
add
add
add
mov
test
repnz
nop
cld
jae
mov
add
dec
adc
in
nop
leave
nop
jmp
fildl
aad
push
mov
popa
add
repnz
nop
cld
jae
add
mov
add
sub
repnz
nop
cld
jae
test
mov
mov
cmpl
jae
test
addb
pop
jne
push
mov
nop
leave
nop
jmp
add
jb
mov
nop
leave
nop
jmp
repnz
cs
add
aad
scas
pop
clc
repnz
nop
cld
jae
sub
add
add
add
mov
ljmp
ret
test
sub
cld
add
push
mov
nop
leave
nop
jmp
push
and
add
inc
push
mov
nop
leave
nop
jmp
add
xor
add
push
mov
nop
leave
nop
jmp
add
add
clc
repnz
nop
cld
jae
add
pop
add
add
repnz
nop
cld
jae
mov
ds
lock
clc
repnz
nop
cld
jae
je
jae
inc
popa
jae
movsl
push
movl
jae
add
jl
add
and
repnz
nop
cld
jae
add
add
in
and
nop
cld
jae
add
jae
aad
add
leave
clc
repnz
nop
cld
jae
out
add
sub
add
clc
loope
mov
mov
push
mov
xchg
ret
mov
aad
repnz
enter
repnz
nop
cld
jae
add
push
mov
inc
add
add
add
push
scas
pop
add
test
loop
clc
repnz
nop
cld
jae
mov
add
fcompl
repnz
nop
cld
jae
xor
in
cltd
and
xor
clc
repnz
nop
cld
jae
add
add
push
clc
repnz
nop
cld
jae
test
test
scas
mov
jle
mov
clc
repnz
nop
cld
jae
and
sbb
nop
nop
cld
jae
add
xor
inc
aad
mov
clc
repnz
nop
cld
jae
add
stos
mov
pop
test
pop
push
mov
xchg
ret
sub
add
add
inc
sub
repnz
nop
cld
jae
push
add
push
mov
push
sub
popa
add
repnz
nop
cld
jae
cmpb
jle
icebp
addb
inc
pop
mov
clc
repnz
nop
cld
jae
add
jae
adc
pop
mov
push
mov
xchg
ret
add
sbbl
mov
push
mov
xchg
ret
mov
pop
add
xorl
clc
repnz
nop
cld
jae
repnz
mov
nop
cld
jae
add
cld
stos
icebp
add
aas
mov
clc
repnz
nop
cld
jae
push
loop
push
clc
repnz
nop
cld
jae
add
add
addb
int3
xor
clc
repnz
nop
cld
jae
test
and
je
inc
add
mov
mov
push
mov
xchg
ret
int
add
add
cmc
inc
nop
add
mov
push
push
mov
xchg
ret
pop
add
push
push
test
add
mov
clc
repnz
nop
cld
jae
add
add
repnz
add
ss
out
inc
add
mov
jle
mov
mov
clc
repnz
nop
cld
jae
add
add
push
mov
xchg
ret
add
aad
add
addl
enter
nop
cld
jae
add
subb
add
mov
clc
repnz
nop
cld
jae
add
add
add
pop
mov
push
mov
xchg
ret
add
mov
mov
clc
repnz
nop
cld
jae
sub
clc
repnz
nop
cld
jae
xchg
je
add
mov
push
mov
xchg
ret
add
add
pop
push
clc
repnz
nop
cld
jae
add
repnz
mov
xchg
ret
je
sahf
adcb
pop
mov
push
mov
xchg
ret
add
push
push
bnd
cld
mov
push
mov
xchg
ret
add
andb
pop
cld
push
ret
sub
nop
nop
cld
jae
xor
add
add
sbb
cld
loope
add
add
test
push
lcall
mov
xchg
ret
clc
sub
add
add
xchg
clc
add
clc
repnz
nop
cld
jae
add
xor
les
test
add
add
repnz
nop
cld
jae
inc
xor
push
lcall
repnz
nop
cld
jae
fdivs
icebp
cmp
inc
and
repnz
nop
cld
jae
add
lret
add
mov
andl
clc
repnz
nop
cld
jae
add
add
add
lea
push
mov
xchg
ret
mov
push
pusha
add
sbb
push
mov
xchg
ret
aad
mov
add
stos
mov
push
mov
nop
leave
nop
jmp
aad
movsl
add
mov
mov
dec
push
push
mov
nop
leave
nop
jmp
test
add
add
repnz
nop
cld
jae
xchg
add
add
add
mov
add
and
fdivs
mov
push
mov
nop
leave
nop
jmp
inc
jle
add
rep
push
mov
xchg
ret
add
push
add
je
clc
repnz
nop
cld
jae
cld
add
add
push
mov
xchg
ret
add
push
add
add
add
push
mov
nop
leave
nop
jmp
je
push
clc
aad
sub
clc
repnz
nop
cld
jae
jb
icebp
add
jmp
push
fiaddl
xchg
ret
in
add
mov
clc
repnz
nop
cld
jae
test
fadds
add
add
repnz
nop
cld
jae
add
pop
mov
repnz
nop
cld
jae
mov
aad
cltd
aad
add
in
nop
leave
nop
jmp
test
jle
jae
add
dec
xor
clc
repnz
nop
cld
jae
scas
add
add
add
mov
or
add
repnz
nop
cld
jae
movsl
add
and
nop
nop
cld
jae
add
add
sub
je
add
mov
jge
clc
repnz
nop
cld
jae
add
pop
cltd
clc
jle
hlt
imul
test
add
cmpl
sbb
repnz
nop
cld
jae
add
add
popf
push
push
mov
nop
leave
nop
jmp
clc
xor
push
mov
sti
and
sub
add
add
in
sbb
imul
in
push
clc
repnz
nop
cld
jae
mov
push
add
jnp
inc
add
mov
aaa
add
repnz
nop
cld
jae
xor
add
inc
cmp
repnz
nop
cld
jae
add
ds
aad
inc
rolb
pop
call
clc
repnz
nop
cld
jae
add
ds
movsb
loop
mov
add
push
mov
xchg
ret
inc
in
add
jne
add
clc
repnz
nop
cld
jae
scas
add
addb
in
inc
clc
repnz
nop
cld
jae
aaa
sub
add
add
cltd
in
je
clc
repnz
nop
cld
jae
add
add
add
push
mov
xchg
ret
jle
add
mov
clc
repnz
nop
cld
jae
add
xlat
rolb
mov
jmp
addb
mov
and
jb
repnz
xor
push
mov
xchg
ret
inc
pop
add
push
mov
add
pop
add
clc
repnz
nop
cld
jae
test
add
add
and
clc
repnz
nop
cld
jae
jb
add
push
cmp
out
incl
aad
add
int
mov
sub
dec
mov
clc
repnz
nop
cld
jae
pop
add
add
push
rolb
xchg
ret
xorb
test
add
xchg
cltd
push
push
mov
xchg
ret
add
and
fsubs
call
adc
cld
jae
test
and
fcos
clc
repnz
nop
cld
jae
add
jb
imul
mov
nop
leave
nop
jmp
repnz
add
mov
pusha
clc
repnz
nop
cld
jae
add
pop
mov
push
movsl
test
add
repnz
nop
cld
jae
add
cld
pop
mov
push
mov
xchg
ret
add
inc
lret
add
add
push
clc
repnz
nop
cld
jae
sahf
mov
aaa
add
push
pop
pop
pop
clc
repnz
nop
cld
jae
add
add
mov
dec
clc
repnz
nop
cld
jae
pop
test
push
add
inc
fisttpl
nop
cld
jae
add
add
mov
fdivr
repnz
nop
cld
jae
add
push
popf
mov
clc
repnz
nop
cld
jae
add
out
add
lret
shr
pushl
push
mov
xchg
ret
movb
add
add
repnz
nop
cld
jae
movb
add
jb
jge
push
loopne
repnz
nop
cld
jae
add
add
add
enter
add
clc
repnz
nop
cld
jae
mov
add
nop
nop
cld
jae
pop
add
stos
add
sub
repnz
nop
cld
jae
test
mov
add
clc
repnz
nop
cld
jae
push
lret
push
mov
push
mov
xchg
ret
inc
test
add
add
fsubs
mov
clc
repnz
nop
cld
jae
sub
mov
clc
repnz
nop
cld
jae
in
loop
mov
add
nop
nop
cld
jae
add
add
add
test
add
repnz
nop
cld
jae
jl
push
add
sub
ud1
or
clc
repnz
nop
cld
jae
add
add
fimull
add
je
pop
add
aaa
sub
add
out
stos
jb
mov
push
mov
nop
leave
nop
jmp
add
add
movsl
mov
clc
repnz
nop
cld
jae
add
add
add
push
mov
nop
leave
nop
jmp
add
mov
test
sbb
clc
repnz
nop
cld
jae
icebp
mov
add
mov
clc
repnz
nop
cld
jae
and
xor
cs
lea
mov
nop
leave
nop
jmp
pop
add
xchg
add
in
nop
leave
nop
jmp
add
add
add
add
out
jne
push
mov
nop
leave
nop
jmp
stos
addb
mov
nop
leave
nop
jmp
loop
add
push
add
clc
repnz
nop
cld
jae
add
add
inc
push
je
pop
push
push
mov
nop
leave
nop
jmp
add
addb
add
in
mov
push
mov
xchg
ret
jl
xor
xor
clc
repnz
nop
cld
jae
add
mov
dec
mov
clc
repnz
nop
cld
jae
and
add
aam
xor
clc
repnz
nop
cld
jae
fistpl
addb
insb
movswl
clc
repnz
nop
cld
jae
add
add
fisubrs
clc
repnz
nop
cld
jae
lret
mov
test
mov
xor
clc
repnz
nop
cld
jae
stos
cmpb
mov
addr16
add
push
mov
nop
leave
nop
jmp
add
aad
sub
or
cmp
nop
nop
cld
jae
sub
add
jl
and
sti
fiadds
xchg
ret
add
add
mov
jmp
nop
leave
nop
jmp
push
push
add
out
jae
push
clc
repnz
nop
cld
jae
inc
or
push
mov
xchg
ret
jae
fsubrs
sub
add
add
clc
repnz
nop
cld
jae
add
and
clc
repnz
nop
cld
jae
aad
cltd
push
test
cmpb
clc
repnz
nop
cld
jae
add
jl
addb
lock
stos
add
clc
repnz
nop
cld
jae
scas
add
and
add
cmpsl
repnz
mov
add
add
add
and
pop
into
pop
push
mov
xchg
ret
cld
xorl
add
inc
cmpsb
leave
push
mov
add
add
mov
sub
rorb
insl
mov
add
mov
mov
mov
xor
jae
insb
pop
ret
cmpsl
outsl
lea
das
frstor
lods
lea
or
xchg
cmp
add
xchg
add
sub
mov
add
mov
mov
repnz
dec
and
pop
ret
sbb
push
add
jmp
sub
out
add
add
add
mov
ds
fnstcw
push
dec
jae
adc
mov
add
cltd
enter
icebp
sti
dec
add
psubq
mov
add
mov
stos
or
je
add
mov
int
call
leave
lods
in
mov
aad
sbb
jne
stos
xchg
mov
add
xlat
push
dec
and
mov
movsb
cmp
mov
add
ficoms
mov
jmp
in
xor
negb
pushf
mov
mov
add
sub
clc
xchg
nopl
push
add
cmp
xlat
clc
psllw
hlt
aaa
in
inc
or
psadbw
aad
xlat
or
es
or
mov
sbb
ret
dec
sub
rcrl
push
mull
not
add
pusha
add
xor
add
loopne
mov
mov
sbb
mov
add
mov
shll
add
adc
fidivs
lds
add
cmp
imul
mov
add
imul
sub
hlt
adc
mov
pop
addb
int3
loope
popa
fnstenv
mov
rolb
rolb
mov
xchg
testb
add
mov
cmp
in
dec
mov
xor
xor
mov
jp
jmp
in
add
mov
xlat
movsl
jnp
incl
mov
divb
cmc
enter
in
adc
mov
inc
add
scas
data16
or
fstl
pop
inc
cmp
add
pop
push
cmp
mov
push
jl
lods
add
add
sbb
or
push
mov
or
ss
push
xlat
or
push
outsb
stos
addb
andl
jno
sbb
mov
add
cmpsb
out
pop
das
daa
rolb
mov
sbb
and
add
sbb
xchg
push
rolb
mov
pop
dec
jp
icebp
bound
mov
stos
adc
mov
repz
imul
push
add
pop
xor
push
cmp
iret
mov
pop
pusha
add
mov
jnp
jb
mov
int
add
bound
mov
push
xor
mov
movsl
pop
inc
add
add
mov
add
mov
data16
movsl
push
add
add
dec
call
cli
mov
jns
aad
push
imul
shll
sub
mov
sub
add
cmp
test
or
add
sbb
xchg
test
rolb
mov
pusha
add
xor
jne
mov
cmp
sub
mov
pop
inc
mov
es
mov
scas
sbb
push
stos
movsl
cltd
jbe
aad
int3
adc
add
mov
test
add
call
cmpsb
lock
cmp
out
imul
mov
enter
addr16
push
add
xchg
in
mov
addb
pop
push
scas
test
fcmovu
sete
inc
sbb
add
loopne
mov
xchg
push
addb
mov
call
addr16
jmp
mov
sti
inc
sub
mov
mov
mov
cmc
lock
ja
mov
push
stos
gs
jle
call
mov
ficoml
out
jge
push
aam
jmp
jae
fcmovnb
inc
mov
xchg
jge
add
cli
cmpl
add
mov
jb
mov
add
arpl
cld
aad
jecxz
cmpsb
addr16
xchg
add
mov
inc
mov
adc
mov
scas
xor
mov
or
add
cmpsl
int
mov
cltd
mov
add
sub
in
xor
adc
js
add
aam
imul
ss
or
fidivs
ret
mulb
sub
es
or
add
mov
xchg
iret
cmp
pop
jmp
cmp
mov
inc
fs
push
pop
nop
add
repz
in
mov
xorl
mov
push
push
fdivrp
and
add
lret
addr16
lret
cmpsl
dec
mov
dec
jge
sub
mov
lcall
icebp
vminsd
mov
outsl
pop
pop
clc
insb
fbld
dec
mov
sub
cmovl
test
and
mov
daa
fldl
lock
sbb
fsubrs
int3
lret
test
test
add
inc
sbb
xchg
mov
xchg
adc
lahf
inc
aam
add
mov
and
scas
dec
jne
pop
jle
sub
push
enter
das
add
mov
mov
rcrl
movsl
call
push
add
mov
or
mov
sub
in
mov
sbb
js
add
add
popa
dec
add
add
fisubrs
xor
mov
ja
testl
mov
ret
test
jbe
jno
jnp
stos
mov
cmpsb
pop
xchg
aas
jecxz
or
adc
leave
adc
mov
add
out
and
mov
lret
int3
outsb
push
add
sbb
outsl
push
in
stos
pop
xchg
xchg
push
xor
mov
adc
mov
repnz
jne
jb
mov
mov
inc
add
sbb
add
add
pop
and
mov
andl
mull
lods
in
mov
loopnew
mov
test
add
fdivrs
add
mov
adc
mov
add
in
xchg
sbb
push
jo
mov
add
jmp
jp
sub
inc
jmp
add
push
in
xchg
mov
pushf
sahf
lret
jl
jecxz
add
lock
lds
add
and
ja
in
pop
fsubl
iret
into
cli
push
inc
add
outsb
imul
ret
add
mov
ljmp
icebp
fld
dec
jns
push
push
fimull
xchg
adc
add
push
enter
push
jmp
jne
lods
and
mov
cmp
and
aaa
je
push
in
jecxz
daa
cli
mov
lods
or
idivb
popf
or
sub
pop
or
push
add
add
adc
mov
pop
mov
filds
add
sbb
leave
in
mov
and
jae
into
mov
mov
sahf
inc
sbb
repz
or
pop
dec
sbb
or
dec
pop
push
push
iret
imul
add
pop
and
pop
inc
pop
mov
mov
add
add
jmp
lods
lods
push
fsubl
jae
add
ret
add
push
sub
in
data16
mov
mov
sub
movsl
xchg
sbb
mov
adc
jbe
sbb
iret
rolb
inc
lock
mov
sbb
stos
sbb
push
fs
sub
mov
xchg
add
std
fcomps
dec
imul
adc
mov
mov
jmp
push
add
sub
negl
xchg
mov
inc
or
add
xlat
enter
decb
push
mov
lahf
pop
test
add
adc
cs
addb
dec
rolb
sub
cmpsl
ja
sbb
add
and
mov
add
incb
mov
mov
jp
jmp
mov
push
sub
and
push
lahf
mov
mov
add
out
sbb
add
enter
mov
sahf
cmpl
mov
jl
push
xor
jp
or
and
push
or
mov
lret
sub
movsl
sahf
out
add
add
add
imul
fnstenv
dec
cmp
dec
push
pop
inc
std
sbb
sahf
mov
lcall
add
cmc
mov
or
push
cmpsl
xchg
insb
or
and
mov
add
mov
add
mov
aaa
xchg
sbb
rolb
jmp
jge
sbb
mov
pushf
js
push
add
cmpsl
aas
jmp
pop
bound
mov
add
sbb
mov
fwait
rolb
jno
mov
rolb
mov
mov
repz
inc
xchg
stos
jge
test
dec
repnz
fcompl
call
cmp
pushf
xor
and
cmpsb
fcompl
mov
sub
xchg
je
add
into
adc
sarl
add
mov
add
mov
add
mov
mov
leave
xor
mov
add
je
movsb
sub
iret
mov
add
cli
inc
inc
icebp
rcl
adc
rolb
mov
mov
loop
mov
sbb
add
dec
fcomps
xchg
mov
and
es
add
jo
mov
popa
fstps
add
daa
jg
jecxz
xchg
add
das
xchg
add
lahf
push
jbe
adc
popf
lea
pop
adc
mov
jns
ss
call
mov
cmp
sahf
lret
adc
jb
mov
xchg
lods
inc
test
xchg
jae
and
mov
ds
inc
adc
mov
mov
out
cmp
mov
sahf
sub
hlt
sbb
add
add
rolb
mov
into
mov
mov
fs
imul
mov
sub
push
dec
push
xchg
sbb
ja
add
negl
add
dec
mov
jecxz
sbb
movsb
mov
jmp
push
sbb
divps
add
test
hlt
jmp
cli
mov
aam
cld
dec
or
add
or
mov
add
push
les
add
mov
negb
push
inc
and
pop
xchg
mov
out
cmp
shll
mov
mov
jge
add
into
leave
adcl
sub
mov
test
scas
addb
popa
jmp
cmp
jnp
fildl
mov
add
and
mov
cmp
fisttps
add
adc
repnz
cld
pop
fiadds
add
mov
addb
mov
and
mov
xchg
ret
push
pop
in
dec
in
adc
add
xor
xor
sbb
mov
sub
ljmp
fisttps
xchg
dec
in
dec
mov
aad
inc
popa
dec
sbb
mov
mov
int3
mov
jle
fimuls
loop
mov
mov
mov
cld
xor
outsl
mov
mov
out
stos
insb
xchg
mov
mov
in
stc
jbe
mov
stc
mov
mov
sbb
loop
mov
fnsave
add
add
cmpsb
fs
or
ds
pop
push
fsubp
add
mov
add
dec
inc
add
sbb
ret
popf
cmp
mov
add
push
ret
or
pop
sub
pop
and
mov
mov
mov
push
cs
mov
jp
arpl
or
cld
pop
pmaxsw
imull
add
mov
fmul
bound
mov
pop
popa
ljmp
mov
mov
or
xchg
dec
cmpsb
shr
add
neg
and
jp
cmp
add
xor
dec
cs
test
cmc
icebp
loope
add
daa
xchg
add
add
jo
mov
push
mov
mov
jbe
enter
mov
jp
dec
pop
sbb
lret
inc
push
imull
sub
xchg
cmp
mov
add
movl
fs
sub
dec
push
add
test
mov
mov
clc
sbb
add
lock
popf
lods
lods
inc
sbb
cld
lods
imul
mov
mov
add
xchg
add
mov
mov
or
mov
test
xchg
rorl
mov
mov
in
arpl
popa
negl
push
or
pop
adc
add
test
cmc
mov
inc
add
mov
add
fadd
mov
xor
mov
mov
inc
outsl
or
mov
adc
movsl
popa
int3
in
leave
jecxz
addb
and
mov
sbb
cmp
mov
imulb
bound
mov
push
add
fistps
sahf
sbb
jg
and
inc
add
push
rcrl
dec
xor
lea
fwait
cmp
outsb
int
push
add
sbb
loope
jb
mov
xor
cltd
aad
ret
mov
bound
mov
aad
or
fidivl
adc
mov
cld
add
insl
inc
inc
add
mov
push
add
mov
inc
in
test
popf
mov
les
push
inc
xor
or
or
mov
jno
pusha
add
pop
inc
and
cmp
insl
jg
lods
xchg
in
push
or
add
aas
into
ja
add
adc
add
mov
lcall
cmp
push
mov
mov
add
repnz
jecxz
fwait
xchg
std
or
and
dec
shll
sbb
mov
repnz
mov
in
into
push
jge
mov
mov
push
mov
adc
mov
outsb
push
jg
xor
jge
in
or
pusha
add
mov
mov
cmp
sbb
add
push
add
mov
je
nop
add
pop
lods
mov
fs
sbb
mov
mov
jecxz
jno
add
xchg
stc
scas
fbld
push
subl
cmpsl
arpl
or
add
cwtl
cld
orl
mov
cmp
into
lods
outsb
lea
fsubrl
out
lcall
or
and
mov
adc
mov
or
add
clc
movsl
cmpsl
jno
jle
mov
pop
mov
pop
je
cli
dec
or
psubsb
add
add
inc
lahf
jmp
jle
addb
pop
neg
and
fs
repnz
jmp
cmp
cmp
push
addl
inc
sub
mov
add
mov
fs
rolb
insb
int
adc
jmp
iret
mov
dec
xor
push
sub
scas
rolb
hlt
mov
stos
std
decb
push
mov
adc
inc
add
aam
cmp
add
int
fstl
scas
daa
cmp
loope
jge
add
mov
dec
and
xchg
and
add
les
lock
xor
mov
mov
sub
jmp
add
into
cli
adc
ljmp
test
std
push
cmpsl
add
mov
es
jnp
xchg
add
mov
push
imul
adc
mov
insl
js
dec
xchg
popa
pop
scas
imul
clc
out
aas
xchg
xor
jo
mov
add
xchg
add
dec
add
mov
adc
mov
adc
gs
leave
aad
add
add
cli
shll
push
lahf
lds
mov
fsubrs
pop
inc
add
xchg
push
jmp
adc
lods
outsl
add
mov
inc
add
or
jecxz
xchg
add
push
add
jnp
mov
test
bound
mov
out
test
add
lea
add
leave
cmp
add
mov
fs
xor
mov
mov
fcompl
dec
js
inc
faddl
mov
sub
add
push
outsl
add
stos
out
add
pop
dec
jne
add
imul
add
sbb
repnz
add
mov
mov
mov
adc
out
add
add
push
aam
add
push
test
xchg
and
mov
scas
dec
dec
and
inc
gs
out
fldcw
mov
xor
jge
jnp
call
xor
mov
mov
jnp
pop
sub
mov
add
mov
out
inc
in
outsb
movsl
jge
add
rcrl
and
mov
mov
sbb
cwtl
lahf
mov
mov
add
rorl
pop
lods
xlat
xor
iret
mov
inc
dec
add
mov
xchg
inc
rorl
inc
adc
jae
jp
mov
ss
addb
sub
mov
mov
mov
lods
or
movsl
fucompp
in
mov
jne
pop
repnz
idivl
cmc
imul
mov
add
and
rolb
mov
jne
sbb
sbb
mov
mov
mov
cwtl
mov
push
push
inc
add
sbb
and
gs
dec
pop
lds
adc
fstp
jno
mov
insb
jp
mov
xchg
sub
sub
add
sub
inc
push
ror
dec
dec
stc
adc
negb
xor
pop
pushf
push
add
add
in
pushf
lea
add
fsubs
or
mov
es
imul
out
testb
aad
jge
mov
rolb
mov
pop
jbe
dec
xchg
add
js
pop
int
push
sub
xchg
filds
lret
popf
fisubrs
add
fdivl
add
jge
or
add
clc
cmp
test
jp
daa
lret
mov
jmp
in
add
add
mov
push
mov
add
add
cmpsb
xor
mov
out
testb
mov
pop
mov
outsb
adc
test
xchg
add
mov
add
int3
in
xchg
push
aaa
and
xchg
lock
lods
add
pop
jp
aad
sbb
xor
mov
mov
sub
jl
dec
fwait
sarl
sbb
stc
mov
push
add
cmp
push
out
mov
xor
movsb
mov
std
enter
xchg
pusha
add
mov
test
jp
arpl
mov
or
rolb
mov
rolb
push
push
sti
fstl
mov
loopne
mov
je
pop
xor
out
je
xchg
jle
mov
daa
mov
out
dec
push
push
addr16
or
mov
arpl
add
push
add
out
mov
add
push
pop
fldenv
jb
mov
jl
sub
sub
nop
add
sbb
in
cmp
dec
mov
mov
rolb
mov
int3
ss
movsl
ljmp
cmp
mov
mov
add
mov
fisubrs
mov
xor
push
repnz
insl
popl
mov
push
negb
mov
mov
jns
out
stc
jae
loop
mov
or
mov
mov
mov
cmp
addb
dec
ljmp
cwtl
mov
or
mov
aad
add
scas
incb
mov
lds
mov
add
sahf
dec
fiaddl
sub
nop
add
andl
in
push
add
add
stos
dec
mov
mov
aaa
cmpsl
add
mov
stos
cwtl
add
mov
dec
inc
add
mov
mov
mov
add
xor
cmp
in
ss
jae
movsl
push
mov
dec
mov
add
add
mov
sti
sub
arpl
lods
push
add
jg
xor
mov
add
mov
cmp
add
push
outsl
aaa
pushw
xlat
daa
add
mov
frstor
add
sbb
cmc
xlat
mov
inc
loope
add
add
add
xor
jmp
insb
jo
mov
enter
mov
add
and
add
int3
pusha
add
outsb
sub
mov
outsb
cmp
fsubl
adc
int
popa
gs
out
inc
sbb
fmull
jp
add
pusha
add
mov
mov
cmp
xchg
push
fs
push
imul
pop
xchg
es
dec
pop
and
mov
aad
push
add
movsb
addb
dec
jae
jae
icebp
push
repnz
mov
or
cmpsl
out
rcrl
lret
cmc
js
test
xor
mov
stos
dec
xchg
lods
inc
sti
nop
add
ds
jg
add
mov
pusha
add
sti
jg
sub
fs
loopne,pt
mov
addr16
cmp
mov
dec
mov
dec
sbb
adc
push
pop
test
dec
and
into
in
out
cmp
adc
add
pxor
adc
mov
stc
push
push
fldenv
mov
fdivs
add
fldt
addr16
mov
mov
in
sarl
test
into
fidivs
sti
adcl
aad
icebp
dec
and
cltd
out
mov
mov
mov
ds
mov
pop
or
jge
add
scas
cmp
mov
test
addb
cmpl
add
mov
je
loopne
mov
push
jne
sub
add
andl
mov
scas
es
fcmovbe
xchg
cmpsb
test
jecxz
cmpsb
add
mov
mov
push
mov
repnz
and
xchg
xor
mov
xor
lcall
imul
into
cmp
mov
imul
fs
aam
aas
insl
pop
dec
mov
mov
jne
test
mov
add
and
jnp
add
mov
add
pop
push
add
mov
mov
xchg
pop
dec
jp
aas
iret
out
rolb
mov
mov
add
sub
mov
fmul
add
mov
adc
das
mov
add
ret
js
add
hlt
inc
imul
in
es
dec
xchg
add
jl
imul
mov
test
push
and
or
mov
add
cmpsb
rolb
mov
push
sub
xlat
int3
mov
in
cmpsb
insl
pop
nop
add
mov
xchg
add
mov
sbb
sub
lods
cwtl
rolb
mov
iret
int
fs
jns
dec
lock
fisttpl
add
push
lahf
or
bsr
xchg
dec
test
add
lds
mov
lcall
mov
pushl
add
dec
adc
mov
adc
mov
adc
and
fdiv
cs
out
cmp
mov
lods
shl
test
mov
sahf
popf
addb
jo
mov
cmp
sbbl
xor
mov
add
ret
imul
or
adc
add
add
mov
es
mov
xchg
xchg
sub
rcrl
mov
adc
xor
mov
adc
out
add
inc
dec
dec
int3
push
testb
inc
adc
mov
and
mov
int
jecxz
push
test
cmpsl
pusha
add
addb
add
add
dec
daa
lahf
mov
imul
and
mov
inc
jl
ljmp
xor
mov
mov
mov
daa
and
push
cwtl
adc
mov
jle
dec
or
aam
xchg
add
cmpsb
adc
add
js
mov
das
cli
mov
add
adc
rolb
mov
push
fnstsw
inc
pop
and
scas
std
je
cmpsl
bound
mov
dec
and
add
xchg
push
je
and
mov
add
mov
dec
adc
mov
fists
mov
pop
loopne
mov
js
xchg
mov
jmp
dec
stos
stc
cmp
stos
cmp
add
add
cmp
js
cwtl
sbb
mov
xor
mov
add
add
add
mov
lret
iret
adcl
mov
pop
dec
sub
push
mov
add
add
es
packssdw
inc
jo
mov
add
cmp
repz
add
inc
out
std
enter
stos
push
push
js
sbb
add
out
mov
aad
fsub
fnstenv
fwait
into
sub
adc
mov
push
sub
adc
test
mov
mov
cmpsl
xchg
add
cmp
jge
ljmp
push
pop
jbe
push
xchg
and
add
int
bound
mov
jge
jb
mov
dec
call
bound
mov
add
cmp
sub
add
fsts
push
test
pop
bound
mov
xchg
outsl
push
add
pop
nop
add
mov
push
inc
add
mov
or
popa
pop
rcr
add
out
jp
in
sbb
pop
xlat
inc
daa
inc
add
mov
scas
fs
sbb
pusha
add
fmull
add
and
add
sbb
jo
mov
cmp
jge
mov
add
jmp
pop
divb
sub
enter
mov
addb
adc
pop
push
test
dec
jb
mov
add
mov
cli
lods
or
or
push
adc
pop
pushf
mov
pop
inc
out
add
outsl
sbb
cmpsb
enter
push
into
mov
mov
add
mov
add
mov
add
jae
xchg
add
hlt
clc
rcl
sarl
ja
add
push
push
add
mov
adc
fcmovnbe
xchg
dec
and
add
pop
push
dec
xor
mov
add
decl
and
or
add
sub
add
xor
sbb
cli
push
rolb
jnp
in
mov
stos
mov
enter
mov
mov
add
and
mov
cmp
add
dec
aad
adc
mov
stos
loopne
mov
mov
xlat
xchg
sbb
pushf
xchg
jnp
addb
lods
dec
hlt
outsl
xor
mov
jl
xchg
pop
mov
pop
xchg
ljmp
push
hlt
inc
sarl
lods
mov
add
jmp
in
jl
ja
mov
dec
sahf
loope
addr16
sub
mov
add
add
int
xchg
add
adc
push
jmp
int
dec
cmp
xchg
jo
mov
add
xchg
das
cmp
mov
cmp
rolb
mov
add
cmp
mov
mov
pop
loopne
mov
insb
fsts
test
mov
pop
iret
jp
add
or
movsl
mov
add
sahf
xor
aaa
pusha
add
lret
lods
cltd
xchg
popf
and
jae
ficoml
movswl
xchg
xlat
vmread
push
add
and
mov
pop
dec
imul
ja
psraw
out
aaa
adc
mov
jne
into
jbe
dec
je
sbb
xor
mov
mov
daa
dec
jl
jmp
mov
outsb
scas
mov
aaa
cli
gs
adc
xor
mov
adc
dec
mov
add
popa
jnp
aad
fwait
and
mov
lret
mov
std
iret
flds
jp
jp
sbb
js
xchg
pop
fldt
cmp
mov
mov
push
and
mov
dec
int3
and
mov
add
sti
in
fiaddl
inc
pop
push
xchg
adc
insb
cs
sbb
pop
add
add
mov
cli
inc
js
add
push
add
mov
sub
into
adc
add
mov
rolb
mov
int3
sub
stos
sbb
push
cld
shll
add
mov
ljmp
jae
cmpsb
sahf
lcall
fldl
xor
fsub
add
cltd
stos
scas
jbe
fimull
mov
mov
js
testl
iret
popf
scas
jge
add
iret
lahf
dec
cmpsl
pop
lcall
sti
ljmp
mov
push
mov
inc
xchg
jmp
lods
cmp
push
jle
xor
imul
inc
add
jnp
inc
mov
cmp
sub
arpl
aaa
push
popa
int3
mov
xchg
lret
push
add
sub
sub
in
aas
mov
sub
mov
or
pop
ja
sbb
xchg
dec
mov
jb
mov
inc
add
leave
popa
pop
fiadds
add
mov
test
cmpl
sub
movsl
fstpl
stos
sarl
pusha
add
pop
ret
dec
inc
ret
hlt
test
rolb
mov
addb
iret
push
adcl
jns
icebp
inc
xor
mov
lcall
xchg
mov
mov
mov
mov
jmp
rolb
insb
jmp
icebp
imull
add
int3
sub
mov
or
into
lds
sub
ds
jp
js
jecxz
mov
sti
and
add
jne
repnz
or
jl
inc
lahf
xchg
add
and
and
sub
imul
mov
data16
ljmp
mov
add
mov
mov
cli
adc
fistpl
xlat
imul
dec
mov
add
or
cmpsb
adc
mov
add
add
xlat
add
add
pop
xor
mov
add
mov
ret
dec
out
mov
mov
and
pop
push
mov
inc
in
rcll
add
sub
sar
pop
inc
sahf
add
hlt
rolb
sbb
js
int3
mov
stos
mov
out
gs
cltd
pop
xchg
rolb
mov
dec
adc
mov
aas
adc
mov
ljmp
jbe
movsl
in
mov
sahf
ds
repz
add
clc
imull
jne
add
jbe
mov
pop
jge
add
fldl
add
and
mov
cmp
fcoml
in
popf
pop
mov
add
add
dec
add
mov
mov
mov
lock
rcl
add
push
loope
call
mov
add
fdivrp
push
add
add
or
cmp
inc
jp
sbb
mov
imul
push
pusha
add
mov
cli
stos
icebp
inc
add
jmp
mov
add
shll
inc
inc
pop
icebp
imul
mov
js
fimull
add
mov
sbb
add
mov
mov
add
test
push
in
out
add
mov
mov
pop
add
jo
mov
add
movsl
cmp
xchg
inc
sub
add
fldenv
cmp
add
les
pop
pop
imul
cmp
insl
xchg
lahf
decl
in
xchg
iret
lock
pop
cli
aaa
pop
rcll
seta
sbb
push
jo
mov
add
mov
or
out
outsb
je
adc
mov
mov
mov
mov
add
add
mov
pop
je
add
gs
mov
or
inc
dec
pop
repnz
movsb
xchg
stc
imul
mov
add
cmpsb
daa
add
movsl
mov
sub
mov
add
push
ret
pop
xor
mov
cmp
jmp
stos
push
jbe
inc
add
cld
cmp
push
in
mov
lret
imulb
add
lods
cmp
mov
jo
mov
push
sub
sahf
dec
bound
mov
mov
ret
and
push
add
cli
or
popf
in
sub
or
and
ja
or
repnz
add
mov
scas
push
mov
or
adc
jl
ljmp
add
pop
stc
push
clc
inc
dec
push
xchg
xchg
add
pop
push
fdiv
mov
mov
addb
pop
jne
add
cld
nop
add
mov
je
subl
lds
mov
mov
sbb
sbb
add
pop
or
mov
add
add
cmovle
loope
jae
bound
mov
stos
xchg
add
call
xchg
lea
cmc
imull
sbb
add
mov
inc
out
mov
pop
mov
mov
pop
sub
enter
inc
xor
scas
pop
add
out
cmp
jl
addb
fisubl
outsb
adc
mov
test
aas
fdivrs
dec
xor
notl
jae
push
cmp
xchg
jecxz
repnz
and
and
mov
sub
pop
inc
add
inc
cmp
add
lds
dec
xchg
jae
sub
cld
xor
mov
in
xchg
test
jae
test
sti
sub
mov
ret
push
std
cmp
addr16
xchg
bound
mov
mov
and
rolb
mov
mov
out
push
xor
mov
mov
mov
add
cmpsl
pop
fdivl
sub
sti
ljmp
mov
gs
leave
aaa
aas
faddp
xchg
mov
add
arpl
pop
lcall
aaa
repnz
pop
outsb
scas
jge
andl
sub
mov
dec
call
in
cmp
push
add
ret
test
xchg
xchg
jmp
mov
imul
outsl
outsl
rcrl
bound
mov
add
mov
mov
or
mov
mov
jns
mov
xchg
xchg
fists
aam
add
mov
pop
out
fldcw
out
dec
cltd
stc
mov
ss
pop
push
std
fldenv
les
aam
jnp
pop
add
push
adc
insb
or
push
or
repz
mov
add
ja
cmp
or
add
add
or
mov
fists
add
mov
pushf
jg
sbb
in
inc
add
adc
sub
push
fsub
fildll
and
mov
jae
xlat
les
xor
mov
and
xor
mov
negl
andl
or
enter
sbb
out
pusha
add
popf
xchg
out
xchg
insl
dec
lods
xchg
enter
hlt
inc
add
mov
cmp
insb
xchg
rcl
add
add
dec
das
mov
test
mov
add
mov
sub
mov
mov
inc
aad
inc
inc
xor
mov
add
ret
cmp
insb
fdivrp
mov
mov
add
les
add
mov
add
mov
mov
ds
jbe
inc
aas
push
icebp
push
out
jnp
lock
loope
pusha
add
ja
add
leave
xchg
sub
cltd
cmp
add
mov
lcall
mov
aaa
mov
mov
test
add
xchg
lahf
cmp
cmp
inc
fistpll
jo
mov
sub
je
popf
hlt
jle
add
and
frstor
jl
mov
or
inc
add
hlt
jmp
cld
popf
outsl
sub
add
jb
mov
inc
add
add
repnz
add
jae
icebp
jae
loop
mov
add
test
outsl
jne
test
add
ret
push
fadd
fdivrs
imul
addb
mov
sbb
inc
add
add
rcrl
clc
negl
add
mov
mov
ds
leave
adc
mov
gs
add
mov
add
push
add
inc
add
lahf
cmp
in
addb
inc
mov
cs
add
and
data16
add
xor
mov
nop
add
rolb
dec
aas
jmp
jge
push
daa
jnp
ds
movsb
stos
mov
loopne
mov
stc
daa
inc
jae
xchg
in
mov
mov
mov
push
add
add
add
mov
inc
mov
inc
enter
nop
add
repnz
mov
out
shll
jg
add
sbb
xchg
jl
in
int
jmp
adc
xor
mov
xchg
mov
adc
xchg
or
popf
inc
rol
je
outsb
and
adc
mov
xchg
ljmp
mov
mov
inc
add
test
adc
mov
mov
mov
dec
std
mov
jmp
jle
push
out
dec
cltd
fiaddl
add
add
fstl
popf
rcll
mov
test
movsl
pop
and
pop
lods
adc
add
dec
mov
inc
add
dec
xchg
cmpsl
jno
js
add
test
jp
add
mov
mov
ret
mov
sbb
imul
add
mov
cmpsl
or
add
sbb
mov
rorl
xchg
dec
and
mov
cmpsb
mov
mov
sti
pop
xchg
fsubrs
sub
data16
scas
mov
mov
in
push
movsl
rolb
fisttps
sbb
cmp
mov
push
add
mov
and
mov
sti
pop
xchg
push
je
sub
imul
add
test
inc
add
mov
xchg
add
inc
add
pop
mov
mov
push
pop
and
cltd
and
mov
add
rolb
mov
add
dec
push
or
out
ficoms
lods
push
push
pop
popf
fwait
repz
mov
repnz
lcall
mov
add
mov
lcall
add
add
cs
add
add
fsubrl
call
and
mov
insb
imul
sbb
add
aam
sub
into
push
sbbl
mov
mov
icebp
mov
jb
mov
add
mov
sub
cmp
add
ja
dec
sahf
add
mov
xor
mov
mov
lahf
js
or
add
je
dec
mov
pop
cmp
loopne
mov
push
out
add
aaa
pop
pop
es
sbb
fcmovne
aas
rcrl
inc
pop
jmp
cmp
mov
enter
and
jg
add
fidivl
xor
mov
cmpsb
sbb
daa
xlat
push
jo
mov
ror
push
xchg
idivb
vphaddubd
mov
cmc
jns
lcall
sbb
in
insl
lods
or
dec
lcall
jo
mov
mov
pop
mov
ret
mov
movsb
sahf
xchg
add
fnstenv
mov
loopne
mov
fcomp
repz
mov
inc
das
and
push
es
push
add
add
dec
test
jno
mov
sbb
fsubrl
jb
mov
jmp
movsb
mov
andl
imul
jp
push
add
in
lds
push
pmullw
and
mov
cmpsb
mov
jg
lds
add
stc
xor
mov
xchg
imul
fisubl
lret
or
pop
mov
add
add
inc
add
movups
add
mov
mov
cltd
divl
mov
mov
leave
insl
iret
mov
loope
add
or
cltd
in
xor
add
std
clc
sbb
test
mov
loop
mov
jno
pop
pushf
pop
ja
xchg
mov
movsl
mov
and
stos
jp
or
addb
dec
mov
inc
xchg
add
push
xlat
pop
in
movsb
push
lods
xor
adc
mov
mov
pop
and
sbb
add
xchg
add
aam
aaa
and
add
sbb
cmp
test
add
mov
sub
sub
fsubp
lods
stc
sbb
loop
mov
cmc
sub
push
push
sbb
and
pop
jle
inc
stos
mov
mov
cli
jmp
adc
xor
xorl
mov
stos
dec
lcall
mov
int3
aam
stc
cmpsl
xchg
test
and
mov
pop
leave
xlat
push
add
add
mov
inc
aad
ds
rolb
mov
lock
jp
sbb
cmp
mov
leave
inc
add
pop
ret
push
out
and
mov
mov
cmp
pusha
add
add
repnz
mov
lahf
mov
add
push
into
loopne
mov
mov
add
rolb
mov
or
hlt
mov
dec
push
jp
push
mov
cmc
dec
cli
mov
cmp
adc
mov
jmp
ljmp
fucomp
xor
mov
push
add
add
pop
addb
daa
mov
mov
add
push
inc
jae
clc
mov
mov
idivl
cmp
sub
ficoms
mov
mov
lret
pushl
mov
cs
inc
pop
jmp
add
mov
xchg
mov
add
mov
mov
push
push
add
mov
mov
sbb
mov
mov
and
js
mov
incl
add
mov
ucomiss
pop
xchg
outsl
out
jno
sub
lock
jb
mov
jp
mov
shld
add
inc
add
popa
jne
xor
mov
cmpsl
fistpll
cmp
mov
jb
mov
cmpsl
arpl
add
mov
add
and
mov
pop
pop
dec
adc
mov
ds
xchg
add
pop
incl
idiv
decl
fucomp
test
popw
clc
outsl
mov
add
outsl
push
sub
pop
push
sbb
repz
inc
xchg
addr16
fists
aad
call
cmc
imul
sbb
add
xchg
mov
push
leave
mov
jecxz
add
mov
dec
lock
and
add
sub
in
ja
xchg
addr16
mov
sub
sti
cmovp
add
loope
pop
sbb
pushf
stos
ja
mov
add
mov
jmp
jg
fdivs
aam
xchg
push
stos
mov
mov
mov
add
and
or
fxch
xchg
cmc
addb
clc
in
out
xchg
in
test
movsb
in
lods
add
aas
xchg
push
pop
mov
sub
mov
xchg
sub
lea
cwtl
adc
mov
mov
aaa
jl
adc
mov
sbb
xchg
xor
rcll
inc
into
and
push
lods
cld
mov
add
push
sbb
add
add
mov
mov
mov
add
add
mov
push
loope
add
ja
lret
lret
bound
mov
repz
jbe
dec
add
out
mov
fistps
cli
test
bound
mov
cwtl
sbb
add
push
add
add
outsb
dec
and
mov
int3
mov
add
popa
stc
daa
imul
sbb
pop
push
add
addr16
test
add
cmpsb
ret
jmp
add
push
add
cmp
aad
sbb
or
add
movsb
hlt
roll
add
dec
and
mov
dec
mov
add
mov
mov
adc
mov
add
adc
mov
aam
mov
jmp
das
mov
mov
gs
mov
lahf
push
push
add
jge
cli
inc
aas
lds
in
cmovnp
lods
mov
pusha
add
xchg
or
sbb
pop
cs
sbb
inc
add
addr16
sti
lds
lds
jecxz
add
mov
jl
shrl
test
mov
mov
test
adc
mov
add
add
sbb
sub
mov
mov
test
mov
jb
mov
pop
rorl
add
mov
sti
sbb
add
mov
mov
pop
xor
mov
mov
stos
push
dec
mov
out
fcoms
push
add
jae
add
lret
popf
sbbl
add
xlat
mov
fsubs
es
jl
jo
mov
add
push
into
jge
adc
xor
dec
adc
and
arpl
mov
out
test
adc
mov
xor
mov
rolb
lret
cmp
inc
xchg
pop
stos
xor
mov
mov
ds
inc
dec
in
cmpsb
decl
and
and
or
add
inc
cmpsl
fldl
insb
negl
in
pop
addb
stos
stc
mov
or
lea
mov
cmp
leave
fists
mov
arpl
roll
mov
loopne
mov
mov
add
mov
xor
mov
sub
sti
addr16
add
xchg
lahf
cmp
sbb
add
stos
sbb
add
in
sbb
add
add
mov
push
add
sahf
aad
mov
pop
cmp
and
mov
rolb
mov
iret
sti
mov
test
xchg
lods
iret
xchg
add
mov
cli
add
mov
adc
mov
fs
fidivrl
sub
add
dec
ret
push
add
jle
inc
into
sub
xlat
jb
mov
cmp
add
mov
mov
mov
aaa
in
dec
cmp
or
icebp
add
pop
lret
mov
add
mov
mov
dec
xchg
push
sub
pop
dec
mov
mov
add
sbb
push
out
in
leave
arpl
mov
sbb
stc
adc
sub
cmp
mov
stos
arpl
mov
push
sbb
mov
mov
mov
sti
in
mov
pop
mov
add
dec
ljmp
add
mov
xor
cmpsl
sbb
fldln2
xchg
and
mov
xchg
out
cmp
cmpsb
int3
into
cltd
or
add
es
mov
movb
push
mov
cmpsb
sub
mov
add
mov
fimuls
jae
add
xchg
add
push
sub
jae
in
jp
and
mov
add
cmpsb
hlt
addb
test
mov
mov
lods
fnstsw
ficoml
add
adc
mov
xor
mov
mov
xor
mov
fdivr
mov
addr16
add
ret
xor
mov
add
lock
lods
xchg
xchg
dec
les
stos
pop
pop
jp
cmp
mov
sbb
cmc
stos
arpl
add
int
push
sbb
cmp
add
roll
cmp
sbb
add
ret
test
imul
dec
or
add
push
mulb
cmp
add
add
out
inc
cmp
or
dec
mov
dec
cmpsb
inc
outsl
fcompl
and
mov
inc
imul
mov
js
les
add
push
add
fisttpl
add
ret
lcall
add
pop
mov
sub
mov
add
insl
test
rolb
mov
cmpl
imul
jecxz
pusha
add
or
add
aaa
push
and
mov
inc
add
int3
mov
jecxz
lock
roll
add
mov
call
filds
jp
add
xchg
and
mov
or
mov
cmp
push
add
add
into
out
xor
and
mov
ret
pop
shll
mov
mov
pop
cmpsb
rolb
mov
mov
movsb
add
jne
test
mov
clc
mov
dec
add
add
fucomip
scas
adc
dec
outsl
outsb
addb
rcr
lahf
rolb
xchg
mov
fcom
test
lcall
rorl
out
xor
inc
and
dec
mov
loope
cmp
add
test
mov
mov
jge
out
out
out
inc
inc
add
mov
mov
test
xchg
jo
mov
repnz
push
mov
xor
mov
mov
jl
add
add
xor
int
rolb
mov
xchg
enter
mov
movsl
jmp
fcomps
ja
jge
push
js
test
push
push
neg
adc
mov
cld
js
xchg
addb
adc
mov
add
insb
push
mov
cwtl
sbb
mov
addb
adc
mov
mov
add
jmp
add
aaa
test
pop
mov
dec
lret
add
popf
popl
dec
lret
cmc
pop
aam
push
addb
and
add
push
mov
mov
jbe
fs
out
loop
mov
add
ja
adc
mov
mov
mov
xlat
cltd
lods
lods
std
pop
int3
addr16
and
jmp
add
clc
ror
mov
test
mov
mov
mov
inc
add
aam
loopne
mov
sub
mov
in
fdivrp
pop
mov
xchg
sbb
cs
call
add
movsl
jmp
mov
fwait
xchg
jle
out
cmpsl
xchg
add
add
add
mov
mov
xchg
dec
sbb
cli
push
or
aad
mov
out
ficompl
scas
js
mov
jbe
add
movsl
rolb
mov
in
sub
dec
xor
mov
shrl
mov
repz
pop
xchg
add
mov
fs
sub
mov
add
sti
xchg
jl
add
add
xchg
ja
jbe
mov
or
mov
add
dec
out
mov
pop
mov
push
or
add
dec
cwtl
push
mov
xor
mov
adc
mov
add
mov
movsb
push
inc
jo
mov
mov
popa
sub
popa
mov
add
jge
jns
inc
jl
xchg
pop
pop
lods
popa
in
out
loop
mov
lds
lret
and
mov
add
mov
jnp
xor
das
sbb
jle
out
jo
mov
mov
pusha
add
pusha
add
mov
sbb
imul
jb
mov
mov
shrl
addb
jmp
add
add
stc
push
cmp
inc
jne
ret
push
push
fsubrp
xchg
call
mov
mov
push
insl
fildl
mov
stos
pop
shl
mov
cmpsb
jnp
xor
cwtl
mov
in
test
and
mov
popf
rolb
mov
jae
add
dec
es
in
dec
scas
insl
imul
lock
cmc
xchg
push
add
add
add
outsb
pop
jns
add
mov
mov
add
lods
pop
cs
dec
mov
test
jle
adc
cmp
loop
mov
jge
test
push
add
ljmp
jb
mov
add
divb
add
popa
inc
mov
push
xor
mov
mov
push
ret
fildl
xchg
push
add
lcall
mov
inc
sbb
pusha
add
dec
add
test
xchg
jb
mov
add
push
add
loopne
mov
mov
push
out
ljmp
add
enter
add
fwait
addb
int
jo
mov
rolb
mov
add
dec
sarl
jmp
mov
adc
dec
insl
movsl
sub
jmp
inc
add
mov
stos
xor
add
add
in
popf
addb
pop
outsb
addb
pop
js
mov
mov
cli
stos
out
adc
push
push
pop
ss
xchg
cmp
mov
pop
outsl
sbb
inc
fimull
jnp
enter
icebp
xchg
inc
gs
arpl
cmpsl
mov
test
ljmp
jae
or
aam
popf
hlt
push
das
xchg
mov
out
movsl
test
sub
in
outsb
add
mov
or
out
jle
inc
xchg
push
add
mov
mov
add
mov
sub
lcall
add
mov
xchg
mov
add
sub
add
cmp
or
mov
dec
fdivrl
std
mov
cmc
dec
repnz
in
das
ret
jg
aaa
dec
cli
movsb
jae
cmp
rolb
mov
mov
dec
out
shrl
stos
loope
add
mov
flds
mov
add
push
add
add
mov
insb
int
push
rolb
jecxz
scas
and
mov
cmp
scas
push
mov
xchg
add
test
outsl
loopne
mov
fsubrl
jmp
stc
dec
lock
adc
or
sbb
add
dec
cmp
mov
and
xlat
icebp
scas
lcall
xchg
repz
stos
add
xor
jle
fnstenv
pop
sbb
les
add
cmp
test
add
add
add
add
lods
pushf
in
mov
lock
add
mov
adc
in
cmp
xchg
xor
clc
ljmp
pusha
add
test
adc
mov
push
mov
aad
mov
mov
in
test
and
push
add
push
or
mov
add
cli
jmp
pop
cwtl
mov
fld
rol
add
mov
nop
add
or
add
imul
clc
mov
jno
ljmp
add
add
leave
std
aam
lahf
aam
rolb
mov
icebp
dec
jns
add
mov
inc
add
xchg
loopne
mov
je
mov
mov
incb
gs
out
inc
add
int
add
ret
addb
jo
mov
loope
aas
jecxz
sbb
adc
loopne
mov
mov
add
add
push
int3
rolb
mov
loopne
mov
into
shll
cmp
add
add
fistps
dec
add
sbb
mov
and
pop
mov
xchg
std
dec
flds
add
mov
push
add
push
dec
push
fwait
int
es
dec
mov
mov
mov
adc
pop
mov
jnp
fmulp
cltd
sub
out
imul
mov
inc
test
ret
inc
mov
mov
pop
stos
cmp
mov
aas
out
dec
je
sub
out
adc
mov
add
lahf
lods
rolb
mov
sbb
mov
and
mov
xchg
add
mov
lahf
arpl
je
inc
enter
mov
jmp
das
fsubrl
out
in
inc
movsl
sbb
mov
lods
jne
adc
mov
sbb
and
xor
mov
js
cwtl
push
mov
imul
cltd
sub
jae
add
add
andl
add
cmp
mov
push
add
fists
jl
sahf
js
unpcklps
in
mov
mov
test
mov
fsubrp
in
notl
outsb
stos
push
loop
mov
into
adc
jns
lcall
addb
rolb
mov
incl
add
xchg
das
mov
xchg
or
std
nop
add
stos
stos
push
jno
mov
pop
cmp
sub
add
mov
and
mov
mov
push
dec
fildl
jge
add
mov
testb
aaa
jmp
jle
jle
add
rolb
mov
jne
push
sbb
pop
xchg
push
add
adcw
out
cmp
js
add
int
es
add
mov
int
add
aad
dec
add
rcr
push
xchg
and
jae
sbb
add
pop
inc
sub
jle
aam
sbb
dec
pop
insl
lahf
pop
es
dec
xor
mov
sti
pop
xor
in
in
insb
hlt
int3
pushf
ret
fwait
notl
outsb
xchg
add
add
insl
in
addb
aad
addb
cmp
outsl
aad
ds
xor
out
mov
mov
sahf
cmpsb
push
sahf
inc
mov
add
out
fcomi
lock
mov
mov
fadds
sub
pop
mov
mov
fnstenv
mov
mov
xor
mov
or
sub
mov
lcall
call
add
add
in
scas
sbb
inc
fsubs
pop
adc
mov
filds
push
cmc
pop
cmc
aas
aam
jle
sti
lahf
xor
dec
xor
pusha
add
mov
add
fldpi
and
mov
jno
push
das
lods
dec
sbb
add
addb
into
sub
push
add
sbb
add
jnp
add
xor
int3
mov
add
add
pop
inc
rolb
mov
cmp
and
jg
add
sbb
sbb
push
je
daa
adc
push
pop
or
xor
mov
js
bound
mov
mov
fs
rorl
xchg
ret
rorl
xchg
add
mov
jno
outsb
sub
push
loopne
mov
add
orl
push
add
ret
decl
add
cmpsb
push
add
add
dec
cmp
xchg
cltd
sti
xchg
cli
pop
mov
jmp
push
pop
inc
sbb
add
and
mov
jb
mov
gs
add
lret
push
test
clc
std
pop
sbb
jb
mov
jno
loop
mov
add
ja
add
gs
cltd
jl
xchg
int
fdivp
add
inc
pop
xrelease
add
mov
inc
add
movsl
fwait
daa
stc
mov
mov
add
cmc
cmp
mov
icebp
hlt
insb
push
aam
and
add
mov
stos
sbb
and
mov
xchg
imul
clc
addb
add
dec
stos
aad
outsb
jb
mov
add
and
cmpsb
inc
out
hlt
cli
cltd
jns
inc
jae
test
outsl
pop
sub
or
scas
jp
add
into
push
dec
shr
xchg
adc
xchg
scas
xchg
add
insl
cmc
dec
movsb
test
test
je
push
sub
stc
mov
sbb
mov
cmpsl
and
adc
sbb
test
imul
xor
mov
add
sahf
js
das
xchg
mov
call
push
xor
addb
inc
add
sbb
inc
and
add
mov
fsub
add
outsl
push
add
addb
add
jge
adc
ja
lock
or
and
sbb
fisttpll
push
mov
rolb
push
sbbl
or
ret
nop
add
and
push
ret
mov
popl
lods
mov
das
inc
add
mov
or
mov
loopne
mov
add
add
push
lret
add
mov
mov
add
mov
mov
testl
addb
inc
sbb
jae
pop
cli
dec
mov
xchg
and
mov
push
jb
mov
test
xchg
pop
pusha
add
adc
xchg
add
rolb
outsb
mov
pop
dec
int
and
cmpsl
cmp
mov
add
push
sub
mov
add
mov
mov
add
inc
sub
aad
adc
mov
enter
add
or
add
push
add
jge
add
aas
jo
mov
mov
mov
aas
lcall
js
add
sbb
int
add
add
pop
and
adc
mov
pop
adc
pop
out
shll
mov
lahf
aas
xchg
out
jnp
lea
pop
cld
pop
xor
mov
jge
aaa
jno
iret
mov
jb
mov
add
imulb
add
jno
add
sub
or
es
or
out
in
cmpsb
cld
push
movl
rolb
mov
mov
sub
pop
fmull
test
mov
mov
push
je
lret
jae
add
mov
add
bound
mov
std
cmp
out
mov
sahf
out
dec
xchg
pop
push
add
sbb
cmp
dec
cmp
xor
xchg
loop
mov
clc
leave
pop
sahf
insl
add
mov
pop
mov
and
adc
add
add
cmp
push
sbb
imul
xchg
add
mov
add
and
aaa
into
sub
movsb
jne
cli
imul
fcmovne
cmovl
sbb
aas
jb
mov
mull
xor
lcall
mov
lret
mov
mov
pop
ffreep
and
repnz
addr16
jmp
arpl
add
mov
add
cmpsb
lods
mov
repnz
shll
mov
add
push
das
push
sub
and
jl
mov
mov
fbld
push
add
dec
das
push
lods
push
loop
mov
push
xchg
add
movl
inc
add
mov
add
or
push
aaa
lea
aas
inc
mov
js
popa
push
movsl
push
inc
push
sahf
les
hlt
push
test
jmp
shrl
lret
call
push
lods
mov
testb
add
sti
or
pop
cmpsl
sar
sti
jp
lret
dec
mov
iret
fwait
in
ficoms
xchg
dec
test
bound
mov
mov
fcmovnu
inc
pop
out
popw
stos
vcvtps2dq
add
std
test
ret
test
shrl
xchg
sub
cmc
rorl
pop
bound
mov
shl
add
aam
mov
cltd
mov
add
add
ss
xchg
nop
add
pop
push
mov
jecxz
aam
cwtl
dec
adc
push
pop
sahf
movsb
jge
mov
mov
mov
add
add
sti
and
inc
cmc
enter
xor
add
mov
add
in
pop
scas
aaa
mov
cmp
jmp
jl
inc
add
sub
add
aad
jl
push
add
push
cmpsl
test
add
rolb
mov
es
fwait
xchg
mov
add
mov
mov
cmp
ljmp
fldcw
lds
je
add
mov
repz
rolb
mov
mov
cmc
adc
add
or
in
mov
repnz
push
push
add
mov
clc
mov
or
sub
pop
lret
call
xchg
add
mov
sbb
mov
addl
scas
imul
pop
xor
mov
adc
mov
pop
inc
add
cmp
cmp
add
add
push
add
fwait
push
cmp
inc
add
mov
xchg
adc
jmp
lret
mov
scas
lret
push
fcomp
dec
dec
xchg
or
mov
add
push
cs
ljmp
insl
cmp
ljmp
add
outsl
inc
add
push
add
test
mov
pop
jae
or
and
jle
sub
add
mov
mov
pop
xchg
cmp
sub
xor
add
cld
mov
push
push
sbb
or
add
pop
lods
xchg
jmp
add
and
mov
lret
inc
add
sbb
and
mov
adc
xor
leave
lret
stc
push
sbb
mov
pop
rcrl
das
repz
lret
add
ret
jmp
leave
add
jp
cmp
in
nop
add
outsl
adc
popf
jg
add
stos
xchg
add
add
sub
das
leave
nop
add
mov
js
out
jecxz
fistps
lret
lret
fwait
adc
jae
push
aad
pushf
dec
xchg
jp
stos
xchg
fs
les
aad
je
add
repz
cmp
jl
push
add
inc
hlt
inc
push
mov
xchg
inc
in
sub
xchg
cwtl
pop
dec
lods
fistps
push
cs
out
add
mov
add
dec
hlt
out
test
test
cld
pop
std
dec
jo
mov
mov
adc
add
add
dec
cmp
clc
addb
dec
mov
mov
fidivrs
jnp
jge
add
mov
mov
cmpsl
adc
inc
push
sub
add
xor
mov
out
rolb
mov
jle
mov
sbb
insb
push
scas
gs
aam
adc
mov
add
fsubs
mov
add
mov
jb
mov
iret
xchg
add
add
push
test
mov
mov
ret
je
add
push
into
imul
pop
insl
dec
adc
stc
icebp
ljmp
add
fcomp
addb
dec
test
mov
jbe
iret
stos
lea
jnp,pn
mov
inc
es
hlt
mov
pop
call
and
add
imul
scas
sti
inc
cmp
and
mov
pop
aas
dec
lods
jbe
lret
rcl
add
inc
sub
mov
mov
stos
outsb
sar
out
adc
outsb
divb
cmp
add
inc
movsl
aas
sub
pop
inc
add
test
xor
cli
push
mov
sbb
cmp
mov
inc
insl
movntps
cmp
cmpsb
js
xchg
fistpl
into
mov
jo
mov
add
mov
add
jp
push
jecxz
add
stos
adc
sar
push
mov
add
mov
pop
repnz
and
mov
sbb
test
mov
popa
lahf
test
sub
rolb
mov
mov
xor
mov
inc
dec
scas
in
sbb
dec
cs
xor
xor
mov
pop
rolb
mov
test
and
lret
add
dec
leave
data16
add
lds
xchg
loop
mov
add
adcl
xchg
cmpsb
inc
push
leave
stos
stc
out
mov
sub
mov
popf
je
mov
mov
aaa
out
pusha
add
fdivl
mov
dec
mov
mov
mov
mov
cmp
test
and
bound
mov
mov
mov
ja
sub
in
mov
push
jg
dec
js
cmc
mov
mov
add
aam
xchg
movsl
loope
dec
mov
into
sbb
jno
aam
mov
push
arpl
frstor
adc
sbb
pushf
dec
add
mov
test
add
pop
outsl
loopne
mov
add
jns
sbb
push
idiv
iret
ss
sub
inc
push
pop
cwtl
lret
iret
aaa
ja
insl
mov
sbb
fs
cmp
ljmp
dec
dec
pop
xor
rolb
mov
mov
and
add
xor
popa
mov
jae
dec
pop
dec
xchg
mov
add
xor
out
sub
scas
pop
iret
or
popa
cmpsl
xor
outsb
pop
push
or
mov
in
mov
and
rolb
mov
mov
ja
jae
and
mov
add
fidivrl
push
adc
sub
mov
or
and
imul
add
inc
dec
out
dec
adc
dec
leave
lds
in
rolb
xchg
or
rolb
mov
clc
out
mov
add
cmp
iret
and
mov
in
dec
push
add
push
test
cltd
pop
aam
pop
ret
int
lods
or
jb
mov
sub
gs
sti
aaa
push
sub
sub
inc
stos
in
repz
adcl
fsubr
jmp
fnstcw
xor
pop
out
test
int
out
add
mov
push
xlat
dec
mov
mov
xor
loop
mov
mov
std
fs
addb
mov
add
and
inc
add
mov
push
fs
add
inc
mov
repz
mov
pop
ret
cmp
cmp
std
int3
int
popf
mov
addr16
jae
push
test
push
jne
inc
sbb
mov
add
inc
imul
cmp
and
mov
add
mov
or
push
adc
mov
in
imul
mov
add
mov
push
add
shrl
insb
pop
add
dec
test
jbe
leave
cld
sbb
fnsave
mov
add
add
mov
dec
test
fmuls
xchg
in
xchg
add
add
mov
xor
push
out
sub
leave
sub
lret
mov
add
xor
out
adc
xchg
mov
fwait
data16
enter
push
test
call
adc
out
mov
add
jmp
adc
sbb
sbb
out
sub
jnp
add
xchg
loope
add
jmp
scas
mov
add
mov
dec
inc
dec
scas
repnz
jmp
xchg
xchg
add
addb
push
xchg
cmp
call
cwtl
iret
rcll
arpl
in
xchg
inc
inc
add
push
repz
imul
arpl
add
jns
cmc
iret
dec
rolb
sub
cltd
in
adc
mov
punpckhbw
mov
xchg
dec
adc
mov
mov
ljmp
cmpl
lds
idivl
mov
lds
sbb
popl
add
cld
push
scas
lods
adc
mov
jecxz
push
stc
jmp
sbb
sub
sbb
xchg
xchg
cld
adc
pop
out
int3
jmp
dec
out
or
shr
aad
dec
into
fiaddl
push
add
add
cmc
shrl
mov
inc
int
add
add
mov
add
push
inc
stos
jae
aaa
adc
add
push
inc
add
bound
mov
push
push
add
bound
mov
add
mov
call
sub
jp
xor
push
xchg
add
push
and
mull
pop
inc
sbb
xor
mov
das
xor
mov
mov
mov
xor
lret
add
lock
add
ljmp
push
sub
lcall
leave
jp
push
add
repz
cmc
test
xchg
add
lret
add
add
sti
mov
rolb
mov
pop
shll
test
jle
je
movsb
add
xchg
push
add
jnp
add
mov
cmp
nop
add
dec
fwait
mov
lcall
fs
xor
mov
cld
popa
or
call
mov
pop
addb
dec
out
mov
add
fisubl
add
stos
or
xor
inc
lret
rolb
ret
movsl
dec
or
mov
xor
mov
add
fists
sub
sub
mov
pusha
add
cltd
cld
and
mov
scas
movsl
bound
mov
mov
jle
jl
stc
mov
xchg
cmp
lds
xor
mov
out
add
mov
in
xor
xchg
add
imulb
ror
dec
jbe
xchg
dec
cmc
xchg
add
pop
fdivrs
mov
pop
ret
mov
mov
mov
jl
add
mov
jmp
addr16
cli
insb
addr16
add
mov
dec
sbb
ds
sbb
xchg
add
hlt
in
inc
mov
or
jp
sub
add
mov
add
add
icebp
dec
add
les
data16
mov
add
add
inc
sahf
inc
lret
lcall
int3
out
adc
mov
pusha
add
movsb
mov
pop
and
mov
repnz
stos
adc
mov
movsl
pop
in
ss
scas
decb
mov
mov
lahf
inc
add
fisubs
mov
add
xor
inc
ss
mov
push
mov
mov
add
arpl
cmp
mov
jmp
dec
mov
rolb
jns
add
sbb
add
pop
or
adc
jmp
sub
push
std
popf
push
stc
dec
dec
cld
jmp
jge
sub
mov
sub
add
dec
add
fldenv
out
pop
dec
jno
test
movsl
gs
bound
mov
sti
xor
je
fisubs
mov
cmp
nop
add
jg
rolb
leave
pusha
add
adc
popa
mov
add
add
mov
fcmove
cwtl
imul
into
pop
sti
and
cmp
pop
push
jle
lret
xchg
sub
add
push
pop
stc
and
add
sbb
ja
loope
cmp
xor
mov
dec
adc
mov
add
push
fcmovbe
jae
add
int3
imul
into
shrl
mov
mov
xchg
scas
add
add
add
dec
fnsave
mov
add
jns
jae
and
loope
bound
mov
mov
mov
cmpsb
mov
nop
add
cwtl
push
jmp
scas
dec
and
lcall
add
stc
dec
sub
add
fwait
mov
add
lea
pop
ja
add
cmpsl
mov
sub
mov
push
out
push
xchg
mov
mov
mov
add
mov
mov
hlt
sbb
add
fdivrl
inc
jbe
cmp
dec
imul
rolb
mov
mov
or
dec
clc
adc
sub
inc
mov
mov
lcall
and
mov
rorl
cmp
xchg
add
cmp
adcl
ljmp
mov
addb
jmp
cmp
test
lds
arpl
repnz
test
add
inc
fists
add
cwtl
imul
adc
mov
cld
sahf
and
add
pop
bound
mov
mov
mov
add
mov
dec
addr16
cs
jl,pn
outsl
ds
cmp
jmp
fbld
add
mov
mov
xchg
ljmp
mov
lcall
inc
hlt
fwait
lahf
and
mov
fsubrs
movsb
sub
or
cmp
add
mov
add
pop
mov
mov
fwait
cmpsl
imulb
scas
mov
jecxz
ds
aad
or
sti
ret
pop
push
add
mov
add
jge
fs
push
rcll
aas
push
add
add
xchg
jo
mov
das
test
je
mov
add
add
mov
outsl
int3
ljmp
mov
add
add
jnp
xlat
or
add
sti
enter
inc
mov
adc
mov
outsb
in
fstpt
or
mul
xor
jecxz
sbb
add
insb
or
push
add
imul
loope
inc
cld
sbb
mov
mov
xchg
dec
pop
imul
das
aad
dec
add
imul
lea
and
add
jle
fisttps
in
inc
add
add
jg
imul
inc
mov
mov
inc
aaa
test
add
mov
add
push
mov
or
add
mov
mov
cmc
cltd
or
xchg
add
mov
fsubs
pop
aam
add
outsl
xchg
rolb
mov
mov
push
jp
aas
enter
cmc
and
mov
lret
test
lcall
sub
cmp
xor
mov
fadd
je
jecxz
or
sahf
jle
fs
push
or
es
add
testl
mov
xchg
das
push
cmp
mov
addl
dec
dec
ror
dec
xor
mov
push
fsubrp
pop
sub
rolb
mov
sbb
cmp
outsb
mov
fwait
mov
adc
add
xor
leave
mov
and
test
int3
aam
scas
int3
xchg
jns
test
hlt
jne
mov
mov
inc
test
mov
xchg
fcomi
cmpsb
pop
loopne
mov
jecxz
push
inc
mov
mov
add
add
mov
arpl
add
xlat
js
cmp
stos
stos
xchg
add
mov
or
call
adc
out
inc
mov
pushf
test
mov
sbb
push
loop
mov
leave
in
xchg
mov
xor
push
xchg
inc
and
dec
or
lds
ss
push
mov
clc
pushf
loope
pop
sbb
stos
call
add
add
pop
ja
jle
es
daa
xor
mov
jmp
add
mov
flds
add
xchg
jg
les
cmp
movsl
jmp
add
lcall
daa
mov
add
test
or
mov
mov
mov
mov
mov
pop
pushf
das
ret
fcmove
ja
push
out
add
mov
imul
les
leave
cmp
xchg
rcrl
jae
call
mov
clc
int
add
mov
jno
dec
stos
mov
push
xchg
cli
pushf
jge
out
add
fs
mov
or
jg
adc
mov
out
add
mov
testb
mov
jge
jo
mov
sbb
mov
nop
add
mov
mov
shrl
add
ret
lret
mov
and
mov
add
push
jo
mov
imull
cmp
mov
sub
hlt
sub
add
ja
fdivrp
mov
enter
and
fstpl
pop
mov
add
into
dec
leave
ljmp
out
pop
dec
inc
neg
gs
adcl
add
rolb
mov
push
dec
addb
daa
dec
cmp
mov
mov
add
imul
jae
mov
mov
repz
mov
inc
jb
mov
inc
add
jp
add
rolb
mov
mov
push
ror
sbb
add
mov
mov
in
jbe
add
jno
dec
lods
mov
fst
add
cmpsl
lret
pop
mov
and
hlt
add
mov
add
lods
ljmp
push
fwait
out
scas
mov
scas
push
psllw
lods
mov
add
adc
shl
std
sub
fdivrs
and
add
mov
xor
mov
lret
scas
outsl
lods
pop
xor
push
dec
sub
inc
rolb
mov
imul
pop
insb
das
int
mov
add
mov
outsb
inc
adc
mov
push
and
mov
cwtl
pop
outsl
es
sbb
push
inc
insb
das
inc
add
mov
sub
mov
mov
int3
sbb
or
pop
jne
xchg
dec
ret
out
loop
mov
pop
cs
inc
push
add
inc
push
push
and
sbb
xchg
loopne
mov
popf
cmpl
xor
ja
add
in
pop
enter
incl
into
mov
mov
or
add
in
je
scas
popf
pop
hlt
sahf
or
cmp
into
mov
jne,pn
shrl
inc
sahf
cmp
pusha
add
add
cmp
add
sbb
pop
jecxz
and
add
repz
scas
mov
add
imul
movsb
rolb
mov
pusha
add
dec
aam
mov
imul
mov
mov
xor
mov
add
mov
push
xor
pop
mulb
sub
add
fstl
mov
pop
rep
inc
add
loopne
mov
jbe
add
adc
mov
lret
add
mov
push
lret
fistps
sbb
mov
loope
inc
mov
inc
add
lcall
mov
push
mov
lds
mov
mov
jle
fldt
add
or
bound
mov
adc
mov
add
add
into
pop
push
add
mov
sub
lcall
outsb
loop
mov
add
inc
xor
leave
fstl
clc
repnz
push
pop
push
add
aas
inc
je
lahf
test
sahf
push
ja
and
mov
sbb
ret
and
mov
xchg
or
and
mov
add
dec
imul
hlt
jo
mov
mov
sub
lods
jecxz
sub
clc
adc
xchg
add
xchg
push
jle
xchg
movsl
bound
mov
sbb
ret
stos
outsb
pop
stos
or
add
adc
mov
je
movsb
rolb
mov
inc
imul
mov
in
pushf
or
add
and
test
inc
aad
sbb
insb
pop
pop
dec
add
ja
clc
sbb
sub
and
mov
les
adc
add
iret
xchg
in
hlt
adc
test
popa
arpl
push
aas
jecxz
add
fldcw
fs
add
cli
cmp
les
jg
cmp
mov
jns
lahf
loopne
mov
push
add
mov
push
jb
mov
shll
std
out
jmp
fistl
add
ret
fldt
add
dec
push
add
mov
fsubrl
call
jns
mov
enter
inc
pop
add
cld
in
test
add
mov
mov
mov
adc
xor
add
lret
add
fisttpl
xchg
lods
sub
fcomi
add
add
loopne
mov
add
into
fnsave
sahf
jnp
add
add
ljmp
stos
icebp
insb
cs
fistpll
push
xchg
scas
inc
in
mov
mov
cmpsb
sahf
push
leave
insl
loope
mov
mov
sub
xchg
or
jecxz
mov
icebp
dec
and
xor
mov
and
addb
and
inc
add
ret
jne
add
addb
arpl
xchg
test
dec
adc
add
fsub
add
add
cmpsl
or
jbe
dec
pop
in
stos
or
jmp
arpl
sbb
xor
mov
dec
xchg
inc
hlt
jnp
daa
adc
int3
sub
mov
rolb
mov
mov
mov
xchg
cld
mov
fdivl
mov
add
xor
pop
inc
xchg
dec
insb
dec
jmp
fildll
mov
and
mov
add
mov
add
mov
mov
test
int
push
sar
adc
push
js
push
jnp
je
or
lret
xchg
add
push
lahf
ret
fsubs
jmp
and
in
jmp
mov
movl
aam
pop
popf
jnp
into
or
in
mov
and
add
jns
add
xor
mov
addb
jecxz
add
mov
add
add
incb
mov
iret
mov
test
outsl
icebp
dec
in
or
into
test
pop
adc
add
add
mov
add
pop
sub
add
add
mov
pop
enter
push
andl
mov
cmc
fwait
lret
mov
loopne
mov
cmp
jae
fisubrl
push
repnz
adc
mov
int
add
mov
lea
ja
jecxz
cmp
add
mov
out
sahf
into
fwait
push
sub
popa
inc
fldenv
inc
sub
mov
ret
jg
lds
inc
and
shrl
cmpsb
and
addb
or
daa
and
sbb
jg
sti
jge
add
mov
sub
add
ds
cmpsl
xchg
xchg
fmulp
mov
cmp
mov
pop
and
dec
cmp
mov
aad
add
sbb
push
xchg
xchg
or
mov
lcall
add
add
xchg
sbb
mov
imul
add
add
cmpsl
cs
std
out
dec
outsl
or
mov
push
es
fstpt
push
je
add
mov
push
or
mov
push
leave
pop
sub
add
mov
hlt
dec
xor
pop
adc
mov
dec
das
call
fsubr
dec
imul
mov
add
js
dec
pop
jmp
inc
ret
pop
jmp
rolb
mov
mov
inc
add
xchg
scas
mov
or
mov
add
mov
jae
push
lea
add
sbb
and
mov
repnz
and
mov
or
push
cmp
and
rolb
mov
int
jmp
add
add
add
rorl
mov
or
jno
sbb
and
inc
addb
in
cmp
adc
mov
mov
and
mov
aad
jp
testb
push
inc
roll
cmp
repnz
sub
stos
or
inc
addr16
mov
lods
ss
enter
dec
jle
repz
or
mov
mov
or
mov
add
call
jp
push
mov
mov
inc
jg
pop
pop
cmp
pop
mov
add
into
jo
mov
ds
mov
mov
and
mov
sbb
out
inc
jecxz
scas
ss
jnp
add
bound
mov
sbb
mov
roll
push
mov
call
jbe
xor
in
bound
mov
dec
mov
test
add
mov
add
mull
add
ds
mov
mov
mov
mov
rolb
mov
cmp
mov
add
ljmp
insb
cmp
fcmove
jno,pt
aas
aas
push
stc
movsl
mov
mov
aaa
fildl
add
sub
mov
jg
mov
mov
mov
fnstenv
add
cmp
rsqrtps
mov
add
hlt
rolb
mov
add
mov
mov
xor
jbe
icebp
sub
mov
mov
movsb
testb
push
adc
movsb
sbb
mov
dec
stc
cs
fwait
movsb
adc
lret
jp
cs
mov
dec
push
cmp
xchg
mov
add
jecxz
add
mov
push
or
pop
xchg
lret
sahf
or
insl
pop
mov
add
xchg
jns
inc
jns
jno
loope
ds
test
sbbl
add
test
cwtl
or
cmp
push
and
mov
ljmp
mov
add
movsb
scas
shll
fisubs
add
add
outsb
leave
jb
mov
push
push
push
mov
xor
mov
mov
and
push
add
xchg
cmp
jle
mov
data16
adcl
cmpl
mov
cmpsl
mov
and
repz
jno
xchg
popf
pop
or
or
adc
mov
add
call
mov
fldt
cmpsb
lret
mul
popl
and
movsl
add
xchg
out
pop
lret
sub
or
outsb
lea
dec
fcmovu
out
addb
addl
push
dec
jno
into
loope
int
pusha
add
lods
push
fdiv
dec
xchg
xor
mov
out
push
lahf
jle
add
daa
push
lods
push
lods
imul
scas
insl
fs
add
add
mov
lahf
jmp
loopne
mov
add
arpl
lret
mov
arpl
jnp
outsl
xchg
ffreep
xchg
add
push
add
aad
test
adc
inc
mul
inc
test
test
add
adc
rolb
lock
mov
add
add
pop
jb
mov
int3
repz
repz
stos
jl
icebp
popa
in
xchg
push
add
mov
mov
mov
call
adc
add
or
test
shr
push
xchg
fstpl
movsl
xchg
add
test
outsl
je
out
in
inc
mov
fwait
rolb
fiaddl
into
adc
mov
mov
cltd
jg
fmul
int
mov
mov
ficoml
xchg
stos
add
mov
jbe
pushf
push
and
sahf
addb
add
cmc
rcll
data16
cli
sub
dec
xchg
mov
addr16
mov
push
add
mov
add
mov
dec
aaa
fisubs
add
add
addr16
or
push
leave
lret
rorl
add
add
jae
adc
mov
bound
mov
maskmovq
mov
push
push
loope
xchg
cld
xlat
out
aaa
or
pop
aas
push
jecxz
xor
inc
add
fstp
xchg
adc
mov
mov
insb
push
add
fsubrs
add
js
jnp
add
repz
xlat
nop
add
add
xorl
jmp
repz
mov
popa
jp
mov
sub
xor
lret
add
ljmp
test
pop
in
std
add
jle
jnp
test
test
mov
insb
mov
cmp
or
and
mov
leave
xor
mov
pop
xchg
andl
cltd
fisttps
addb
pop
and
into
ret
insl
mov
rolb
mov
add
aaa
mov
mov
addb
loop
mov
mov
mov
scas
sub
and
pop
movsb
inc
add
loop
mov
or
xchg
add
mov
cmp
jge
jns
iret
xchg
std
adc
mov
inc
mov
pop
sub
aad
sub
add
cs
add
xor
mov
xor
add
movsb
lock
xchg
imul
or
int
mov
push
pop
mov
mov
push
inc
or
rolb
mov
mov
mov
mov
jbe
cmp
add
push
pop
and
fs
enter
mov
xor
mov
cmpsb
les
adc
lahf
mov
sbb
leave
sbb
inc
ljmp
jp
or
xchg
cli
pop
dec
movsb
dec
mov
dec
adc
xor
mov
add
add
add
pop
rolb
mov
mov
add
fldt
mov
dec
pop
lds
xchg
inc
jg
lods
stc
sbb
jne
add
jp
adc
add
xchg
rolb
mov
and
mov
aam
dec
jnp
stc
push
mov
sti
cs
mov
out
lahf
stc
pop
sti
jnp
cli
and
mov
push
iret
push
ljmp
scas
dec
push
iret
jecxz
push
sbb
mov
mov
push
jecxz
or
sub
subl
mov
add
mov
jns
xchg
and
add
test
add
inc
jno
jns
xlat
in
imul
idivb
mov
push
add
addb
or
addb
or
in
push
aas
ret
fsubrl
dec
mov
sbb
add
add
scas
stos
js
and
add
fisubs
test
adc
dec
jge
jp,pn
rolb
mov
jno
add
cs
adcl
or
enter
sbb
push
repnz
mov
or
insl
mov
addb
popfw
call
mov
add
xor
mov
add
mov
pop
push
shll
in
dec
and
add
mov
mov
adc
mov
add
mov
sub
iret
loope
xchg
push
pop
ret
lds
mov
xor
mov
push
add
in
add
mov
aaa
stos
xchg
add
daa
test
xchg
out
repz
add
iret
or
push
lds
xchg
add
cmp
add
add
loop
mov
es
xchg
sub
cmc
dec
sbb
fildl
add
mov
xchg
dec
aas
add
mov
add
mov
add
mov
mov
mov
xor
mov
repz
adc
add
add
cmpsl
add
mov
out
jecxz
loop
mov
push
mov
fdivrs
mov
rorl
mov
adc
mov
cmp
add
sti
roll
movsl
daa
cltd
push
push
cmc
mov
mov
mov
mov
add
add
sbb
mov
jecxz
push
jge
adc
mov
push
mov
mov
out
cmp
arpl
xlat
cmp
add
mov
mov
mov
scas
pop
mov
sub
mov
add
add
push
in
aam
inc
add
rolb
test
cs
add
fwait
mov
lret
add
clc
dec
ljmp
lcall
cli
repnz
push
xchg
ja
xlat
rcll
add
sbb
hlt
pop
mov
xor
mov
pop
dec
imul
sbb
add
dec
adc
dec
stc
lcall
mov
mov
adc
mov
movsb
stc
js
inc
jp
jmp
mov
mov
add
aaa
sbb
test
sub
add
les
push
pop
mov
pop
fisubl
popa
in
and
xchg
hlt
and
mov
add
add
insb
test
push
adc
mov
jae
jecxz
test
arpl
lret
test
test
or
add
xor
xchg
pop
mov
or
addl
or
and
mov
mov
inc
movsb
jle
add
mov
in
sbb
scas
sarl
loope
shll
out
or
add
jb
mov
dec
jg
sbb
cs
cmpl
mov
popf
sbb
jle
lahf
jl
clc
dec
adc
pop
push
arpl
add
sub
push
add
mov
and
mov
jl
in
js
stos
or
sbb
outsb
push
add
add
dec
xor
gs
add
dec
xchg
jae
pop
in
sbb
push
test
ss
test
push
mov
sbb
mov
add
jae
xlat
pop
and
hlt
pop
jae
jbe
pop
adc
arpl
dec
mov
xchg
lret
out
outsl
cmp
xorl
xchg
pop
pop
and
mov
insl
arpl
and
mov
lcall
cmp
jbe
das
pop
pop
and
mov
ret
lds
xchg
aam
stos
je
jecxz
cs
rcrl
je
push
dec
test
ss
jle
aad
loopne
mov
mov
mov
rolb
mov
lcall
and
in
shll
fnsave
add
fcmovnu
xchg
push
add
mov
loop
mov
add
xchg
faddl
add
mov
ja
gs
jecxz
rorl
rolb
mov
mov
add
mov
add
stc
ss
pop
sbb
das
rolb
mov
jg
jae
mov
das
aad
mov
inc
mov
mov
mov
add
data16
mov
pop
push
jnp
xor
mov
in
pop
test
add
add
arpl
add
mov
add
and
push
add
loope
mov
stos
out
inc
lea
mov
mov
add
mov
add
fwait
push
add
testl
mov
ret
lds
mov
cmp
jb
mov
mov
or
mov
mov
push
lods
or
xor
mov
push
add
into
sbb
and
add
mov
mov
add
lea
inc
or
push
cmp
add
repnz
add
pminsw
sbb
jne
dec
mov
mov
sahf
arpl
scas
xor
mov
pusha
add
hlt
icebp
and
lds
int3
rorl
xchg
sub
fwait
lods
cltd
mov
cmp
mov
call
and
mov
imul
xor
mov
std
fsubl
add
mov
test
sbb
or
mov
add
mov
add
ljmp
sub
xchg
add
aad
add
aam
mov
add
push
insb
adc
mov
dec
cmp
mov
imul
rorl
mov
add
add
pop
jo
mov
addl
or
sub
add
fwait
adc
mov
je
mov
rolb
mov
add
add
cwtl
sub
push
scas
push
sbb
xor
push
sti
pop
mov
addb
or
mov
loopne
mov
rolb
jae
add
mov
mov
arpl
cli
push
push
and
add
add
mov
mov
sub
add
fldl
add
mov
mov
ja
fwait
mov
push
cld
jae
cs
sub
daa
testl
mov
das
addl
pop
mov
ret
push
std
jbe
stos
or
pushf
mov
mov
mov
mov
add
mov
sbb
popf
lock
push
xchg
add
addb
jmp
mov
adc
pop
lcall
fwait
or
xor
scas
loop
mov
sti
rorl
and
mov
xlat
das
jecxz
cwtl
nop
add
push
sbb
fbld
mov
add
cmpsb
mov
inc
xchg
mov
ds
notb
mov
mov
aaa
add
mov
adc
cmpsl
jbe
add
cmpsb
bound
mov
xchg
xchg
cmp
fsts
mov
fucomp
cmp
pushf
sub
or
rcll
imul
add
pusha
add
ficomps
mov
mov
mov
scas
dec
fs
inc
or
das
out
in
dec
mov
js
jl
push
mov
dec
sub
push
dec
lahf
addb
cmp
ret
imul
mov
inc
dec
lods
mov
jo
mov
pop
push
add
aaa
inc
mov
inc
pop
xor
push
sub
sbb
sub
aad
out
add
das
cmp
jge
imul
mov
pop
aas
ret
ret
ret
dec
sub
insb
or
sbb
mov
add
mov
or
pop
outsl
cmpsl
adc
iret
sbb
mov
mov
repz
cmp
pop
stos
ret
jmp
jno
add
fnstcw
scas
dec
out
xor
les
in
movsl
gs
add
jge
dec
lea
lock
cmp
mov
scas
mov
mov
jecxz
add
movsl
adc
les
dec
cltd
xlat
inc
adc
mov
pop
andl
add
pop
bound
mov
outsl
mov
fnstcw
repnz
scas
pop
jnp
add
lods
lahf
add
push
jmp
add
mov
lods
push
add
lea
mov
in
adc
lret
loopne
mov
addr16
add
int3
mov
mov
mov
scas
dec
arpl
popa
mov
aad
leave
mov
adc
testl
loope
sub
add
xor
loop
mov
clc
and
mov
xor
mov
add
push
add
sub
jmp
outsb
dec
ljmp
int3
test
ljmp
add
or
test
out
push
andl
adc
insb
scas
loop
mov
call
mov
pop
imul
jg
mov
dec
and
add
cmp
pop
int3
xchg
lret
mov
inc
or
push
add
lret
jp
repnz
lods
xor
mov
mov
cld
pop
test
lret
scas
addb
jb
mov
mov
ljmp
mov
and
sti
fwait
aad
and
ret
jne
add
pop
gs
jle
in
inc
pop
inc
in
mov
xor
mov
repz
mov
mov
fcomps
jg
cmp
pop
or
jnp
jnp
add
imul
mov
out
xor
mov
push
fs
mov
xor
js
sbbl
push
cli
add
add
xor
int
push
xor
inc
xchg
add
mov
xchg
inc
xchg
or
mov
imul
pop
jecxz
divl
add
adc
mov
out
xchg
add
add
lcall
add
lahf
les
mov
test
sbb
push
popa
ljmp
mov
lret
lahf
mov
jne
into
aaa
push
or
cmpsb
test
divb
adc
mov
add
push
jno
loop
mov
test
and
pop
adc
mov
es
and
add
sahf
sbb
sbb
loopne
mov
add
xchg
add
mov
lcall
fs
push
adc
mov
add
mov
mov
addb
stos
and
loope
sbb
sbb
add
bound
mov
add
addb
fisubs
std
and
add
add
daa
inc
stos
or
adc
lds
mov
addb
cmpsl
leave
pusha
add
repnz
das
arpl
add
or
lahf
cmp
repnz
add
mov
push
xchg
pop
js
mov
cltd
adc
movsb
decb
test
rolb
out
addb
cmpsb
and
outsb
rolb
mov
je
add
loopne
mov
mov
cmpsb
data16
mov
aaa
mov
enter
iret
dec
sti
add
mov
inc
cmc
pop
jl
push
dec
bound
mov
scas
fidivs
mov
cltd
or
add
xchg
add
adc
mov
add
xor
pop
push
test
scas
mov
call
fidivrs
sbb
nop
add
pop
push
ljmp
add
cmp
sbb
les
ss
int
pushf
jbe
lea
mov
mov
sbb
cmp
add
mov
mov
cwtl
dec
dec
inc
add
mov
sub
xchg
add
test
movsl
aam
ret
push
fs
mov
add
cld
cmpsb
lods
mov
mov
ja
sub
and
pop
pop
cmp
adc
mov
mov
add
test
inc
shr
xor
mov
jne
fisubrl
add
cmp
loope
inc
daa
dec
xor
inc
inc
mov
loope
add
inc
imul
fdivrs
add
mov
rcll
dec
fdivr
xchg
xchg
outsl
cld
loope
icebp
xor
insb
roll
add
mov
pop
and
push
add
xlat
sub
movsl
aaa
rolb
mov
fisttps
rolb
mov
mov
aam
add
roll
mov
sub
psubsb
lcall
add
sub
xlat
adc
mov
push
out
sbb
add
jg
add
sub
add
jbe
cwtl
cmc
and
and
cmp
imul
add
mov
aad
out
pop
xlat
jl
add
or
aad
push
cmp
adc
jno
add
mov
push
jmp
ret
out
enter
adc
mov
add
mov
lock
mov
dec
push
add
ret
mov
in
mov
rolb
mov
add
inc
push
adc
nop
add
sti
outsb
push
aam
pop
out
std
xor
scas
sub
add
add
add
add
add
mov
test
sbb
add
sub
or
test
rolb
mov
ret
outsl
inc
add
add
and
mov
add
adc
mov
std
fimull
addl
pop
pusha
add
add
mov
mov
cmpl
sub
test
cmp
mov
dec
lcall
jle
js
out
or
mov
sub
xchg
pop
bound
mov
ljmp
pop
ljmp
mov
mov
jae
add
lods
gs
insl
inc
mov
or
leave
clc
push
or
pop
sbb
mov
test
mov
jecxz
cmpsl
pop
mov
popa
cli
in
addb
push
add
ret
addb
and
ljmp
add
iret
dec
cwtl
mov
lods
xor
mov
adc
dec
pop
enter
add
push
dec
enter
lds
sbb
mov
adc
pop
enter
jnp
push
dec
loop
mov
adc
mov
fdivrl
test
add
cmpsl
ja
inc
sub
int
add
add
pop
sub
and
mov
cltd
imul
xor
add
in
mov
outsl
fs
mov
xor
push
addb
sbb
sbb
in
add
mov
ja
sub
add
add
add
gs
test
add
add
mulb
add
xchg
adc
inc
and
imul
push
xor
gs
jnp
aam
mov
pop
mov
add
xor
ss
xor
mov
sub
add
outsb
adc
mov
mov
add
mov
jge
hlt
mov
nop
add
mov
adc
add
in
in
pop
mov
je
lahf
in
add
adc
sahf
adc
add
subl
mov
mov
prefetch
or
hlt
xor
mov
cmp
and
rorl
push
ret
cmp
fmuls
mov
add
arpl
pop
scas
aad
add
xchg
jp
sub
cmpsb
mov
mov
js
add
push
add
mov
mov
push
add
cltd
popa
adc
mov
pop
pushf
jb
mov
ficompl
and
mov
add
pop
push
mov
sbb
push
cmp
repnz
mov
inc
mov
test
jb
mov
ss
add
lock
push
add
fwait
or
jnp
fincstp
cmpsl
jle
adc
mov
addr16
addb
mov
clc
cmovp
fwait
cmp
in
psubsb
mov
pop
adc
ja
lea
inc
into
mov
pop
sub
adc
sbb
mov
add
mov
add
adc
mov
mov
lds
add
xchg
mov
mov
sbb
add
int
add
mov
xor
addb
sub
mov
cmc
dec
adc
mov
pop
xchg
push
lods
in
or
aam
add
pop
mov
mov
dec
ljmp
inc
push
add
pop
xchg
mov
sub
test
mov
and
xchg
or
add
mov
add
cwtl
fwait
adc
js
mov
add
xchg
popa
sub
adc
mov
stc
cld
ljmp
add
mov
push
xor
mov
scas
pop
sbb
orl
mov
loope
mov
sbb
pop
in
int
adc
and
mov
jl
and
insb
mov
add
dec
inc
xchg
dec
mov
pop
out
mov
push
xlat
cmp
push
add
add
mov
pushf
adc
mov
mov
mov
out
xor
pop
ds
or
ss
cs
popa
mov
add
inc
xchg
mov
mov
aaa
xor
andl
mov
mov
add
cmp
fldcw
jle
push
test
arpl
popf
inc
fimull
add
arpl
repz
daa
lret
mov
scas
insb
sbb
roll
mov
push
mov
mov
and
mov
sub
jle
sub
test
mov
add
adc
popa
xchg
or
add
enter
fsubrs
mov
push
nop
add
mov
xor
clc
dec
adc
mov
sti
jo
mov
out
jmp
lds
mov
mov
add
sub
add
jmp
pop
xchg
push
lock
mov
js
pop
pop
int3
mov
inc
xor
mov
or
std
repz
out
jg
outsl
test
rolb
mov
mov
xlat
xor
sbb
stos
pop
mov
sub
cmp
addb
movsl
in
add
pop
sub
leave
adc
mov
and
mov
iret
or
jge
mov
mov
xchg
add
add
push
pop
sbbl
mov
jo
mov
sahf
scas
adc
add
and
int
jl
loopne
mov
sub
push
in
xor
lods
cmp
inc
fwait
repnz
dec
jne
add
pop
fs
fwait
loop
mov
idivl
mov
sub
lods
mov
movsb
ret
loop
mov
clc
pop
hlt
push
dec
test
xchg
cmpxchg
mov
adc
and
int
jl
jns
or
and
pop
mov
push
add
lods
push
ss
ja
ret
pop
es
add
mov
inc
add
mov
dec
jnp
ljmp
fisubrl
hlt
popa
jns
arpl
addb
dec
push
in
xor
mov
add
dec
push
outsb
rcll
mov
mov
nop
add
mov
mov
loope
add
adc
arpl
add
mov
mov
cwtl
push
mov
mov
fdivp
mov
jmp
pusha
add
mov
xchg
loop
mov
cwtl
sbb
push
mov
mov
and
xchg
add
ss
je
jbe
cmp
loope
and
lea
mov
sub
rolb
mov
sub
mov
ljmp
sub
add
insl
int
cmp
mov
jbe
push
sub
push
pop
loop
mov
dec
push
mov
fdivrs
sbb
rolb
mov
pop
fdivp
rolb
std
clc
aas
das
pop
mov
inc
mov
into
mov
cmp
psubd
stc
cld
xchg
stc
out
mov
inc
add
adc
lds
mov
inc
add
pushf
sbb
fmul
lods
jo
mov
add
lcall
add
lahf
arpl
add
pop
push
imul
mov
jp
rolb
push
fisubrl
addb
or
xchg
add
jle
xchg
scas
es
sahf
push
and
mov
lock
sbb
add
push
adc
mov
dec
aas
push
jge
movsl
leave
push
loope
xchg
cli
adc
or
add
int
add
jl
xchg
mov
push
lret
jle
add
mov
repnz
xchg
andl
adc
mov
xchg
mov
test
add
sub
fisubs
add
aad
lock
push
mov
add
cs
dec
data16
cmc
xchg
rolb
mov
cmpsl
cs
