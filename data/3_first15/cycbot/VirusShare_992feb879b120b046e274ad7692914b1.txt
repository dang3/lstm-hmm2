add
add
add
fs
fs
cmc
cmc
cmc
cmc
addb
add
add
add
add
push
push
push
push
push
push
movsb
movsb
movsb
movsb
movsb
movsb
mov
add
test
add
add
push
push
push
push
sub
xor
ss
pop
pop
pop
add
jg
jg
add
inc
ljmp
sbb
add
mov
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
decl
add
add
jb
out
out
add
out
out
out
jne
jne
jne
jne
jne
jne
jne
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
leave
leave
leave
leave
leave
leave
leave
or
bound
bound
add
inc
inc
inc
lret
lret
sub
sub
sub
sub
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
pop
pop
add
pop
jge
jge
jge
jge
inc
inc
mov
add
mov
icebp
icebp
add
stos
dec
dec
dec
dec
dec
dec
add
out
out
out
out
out
out
out
out
add
add
add
cmp
loop
loop
loop
loop
add
add
inc
or
or
or
imul
enter
enter
enter
enter
ja
ja
lahf
cmp
cmp
cmp
cmp
cmp
cmp
scas
scas
scas
scas
add
add
add
lea
add
jne
ret
add
adc
adc
add
add
add
ret
add
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
add
add
outsl
outsl
outsl
outsl
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
inc
inc
inc
inc
inc
inc
inc
inc
inc
sub
sub
sub
add
add
cmp
add
jno
jno
jno
jno
adc
adc
adc
leave
leave
addr16
add
add
add
add
stc
jnp
jnp
jnp
inc
add
cmp
add
add
add
add
dec
dec
dec
dec
dec
dec
dec
push
push
push
xchg
add
add
add
add
add
add
in
add
cmp
cwtl
loopne
loopne
loopne
loopne
add
test
sbb
mov
ss
add
mov
add
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
add
add
add
sbb
sbb
sbb
sbb
sbb
add
add
enter
addr16
cmpsb
cmpsb
cmpsb
inc
add
xor
add
add
add
add
lret
lret
xlat
insb
add
add
add
mov
es
add
jmp
sub
sub
sub
sub
add
add
aad
aad
aad
mov
add
add
pfrsqit1
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
les
push
push
mov
mov
mov
push
push
push
push
push
push
push
push
or
or
or
popa
popa
popa
popa
popa
popa
popa
popa
inc
lret
lret
lret
add
add
add
mov
add
add
inc
inc
inc
pop
pop
pop
add
ds
mov
arpl
arpl
arpl
arpl
sbb
mov
mov
add
aam
aam
add
add
add
imul
add
add
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
movsb
or
or
dec
loope
cmpsl
cmpsl
cmpsl
add
add
add
pop
pop
add
repnz
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
mov
mov
sbb
sbb
sbb
add
add
add
dec
add
add
jmp
jmp
add
add
add
add
sub
ret
dec
dec
dec
dec
or
cmp
cmp
dec
add
add
add
jbe
jbe
dec
dec
dec
jns
jns
jns
jns
fcmovnu
fcmovnu
fcmovnu
fildl
add
add
lcall
imul
fiaddl
add
add
add
add
add
loop
loop
loop
loop
add
addl
mov
xchg
xchg
xchg
xchg
add
add
add
add
mulb
gs
push
push
push
push
push
push
push
push
call
add
add
add
add
add
add
les
add
imul
imul
add
add
add
in
in
in
in
in
add
add
add
inc
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
dec
dec
dec
dec
dec
dec
mov
mov
add
add
add
push
adc
sub
sub
outsl
outsl
cmpsl
cmpsl
and
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rolb
add
sbb
inc
inc
inc
inc
inc
add
add
out
out
inc
inc
inc
inc
inc
add
add
add
add
push
jb
jmp
mov
mov
mov
test
pf2id
sbb
enter
enter
enter
sub
dec
add
out
out
out
pusha
loop
loop
loop
loop
loop
add
add
inc
jae
push
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
cmp
push
push
push
push
add
and
and
and
into
adc
adc
adc
adc
data16
add
add
add
xchg
xchg
xchg
ljmp
ljmp
add
add
add
add
add
add
aas
aas
add
add
add
xor
add
add
div
div
div
div
div
testl
add
push
push
push
push
push
push
push
push
push
push
push
push
push
add
ljmp
ljmp
add
add
add
add
xrstor
add
add
mov
mov
mov
mov
add
stos
stos
stos
stos
jp
jp
jp
jp
lret
bound
bound
bound
bound
cmp
cmp
cmp
xlat
xlat
xlat
xlat
xlat
movsl
or
add
lahf
lahf
lahf
lahf
lahf
lahf
add
and
and
hlt
sub
sub
addr16
add
add
mov
insb
insb
add
dec
dec
mov
and
or
add
add
lcall
add
or
or
data16
sbb
xchg
xchg
xchg
xchg
xchg
add
add
add
add
fcmovu
fiaddl
push
add
add
xor
xor
decl
dec
dec
pushf
pushf
pop
jno
jno
jno
jno
mov
mov
lea
daa
daa
push
sub
sub
jp
iret
add
add
and
and
and
xchg
xchg
imul
add
movsl
movsl
movsl
movsl
ja
ja
ja
ja
ja
ja
ja
inc
inc
add
div
testl
dec
dec
dec
dec
dec
popa
popa
std
std
std
std
std
std
std
std
add
add
push
push
push
push
push
push
push
push
sbb
sbb
sbb
sbb
jmp
jmp
add
add
outsb
add
add
add
add
imul
out
out
jge
add
jmp
jmp
jmp
jmp
add
add
xor
xor
xor
xor
xor
xor
push
dec
dec
dec
dec
dec
dec
dec
add
cmp
nop
nop
nop
nop
nop
nop
nop
or
or
or
or
add
add
add
add
add
cs
sbb
sbb
sbb
sbb
sbb
sbb
add
pop
pop
pop
js
js
js
js
js
jp
fldl
stos
stos
inc
add
add
pop
pop
pop
pop
mov
out
out
out
out
and
loope
add
add
add
jbe
jbe
jbe
jbe
jbe
in
in
in
in
in
in
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
add
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pop
loop
loop
loop
xor
xor
xor
xor
xor
xor
dec
dec
dec
dec
dec
dec
sbb
cmpsb
cmpsb
rol
rclb
repz
out
out
out
out
out
out
sub
sub
rol
sbb
sbb
std
leave
mov
std
std
std
std
std
std
std
std
std
std
add
add
add
add
mulps
pop
add
pop
pop
pop
pop
pop
dec
es
ds
add
std
add
fwait
fwait
sbb
mov
add
mov
mov
inc
add
sbb
sbb
sbb
add
insl
insl
insl
addb
imul
popf
popf
popf
mov
add
add
add
add
out
out
and
and
dec
dec
dec
dec
dec
dec
loopne
loopne
jae
pop
pop
mov
add
fisubl
and
add
add
mov
out
out
out
or
or
add
add
pop
pop
or
add
add
bound
bound
bound
add
mov
lods
add
add
dec
mov
add
xchg
add
add
cmp
add
sub
mov
mov
dec
dec
dec
dec
dec
dec
dec
dec
add
push
push
push
push
add
add
je
add
add
add
add
add
add
add
repnz
sub
sub
sub
jns
js
js
js
mov
mov
push
push
push
push
push
push
push
add
add
out
out
out
out
out
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
add
add
sub
sub
mov
cmp
cmp
cmp
cmp
hlt
hlt
imul
add
mov
add
add
add
add
pop
pop
pop
pop
pop
pop
pop
addb
xorb
ss
push
push
push
nop
nop
nop
arpl
arpl
fnsave
xor
add
add
add
add
add
test
add
add
mov
add
cmp
add
fcomp
call
add
add
add
add
adc
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
lret
xor
mov
mov
add
int3
int3
int3
int3
int3
add
add
mov
add
inc
inc
inc
inc
inc
inc
inc
add
add
push
add
add
add
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
cmp
cmp
add
add
inc
inc
inc
jo
add
add
mov
xchg
xchg
xchg
xchg
xchg
xchg
add
add
add
add
ret
add
xchg
xchg
xchg
add
add
add
jecxz
icebp
icebp
icebp
icebp
stc
stc
mov
mov
add
hlt
hlt
hlt
hlt
hlt
hlt
hlt
add
out
out
push
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
add
add
jecxz
jecxz
dec
dec
dec
dec
dec
dec
add
add
mov
add
fsts
adc
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
add
int
adc
adc
mov
add
add
add
add
add
add
add
push
push
push
push
push
add
in
in
in
in
in
mov
add
lret
lret
lret
lret
lret
lret
lahf
lahf
add
aad
fcmovnu
fcmovnu
lds
add
mov
mov
pop
imul
imul
addr16
add
pop
pop
pop
pop
pop
jnp
jnp
mov
mov
mov
mov
mov
mov
mov
mov
inc
add
add
mov
jle
cmc
cmc
cmc
cmc
cmc
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
add
add
add
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
cli
add
push
add
stos
stos
stos
stos
stos
repnz
mov
js
bound
bound
push
push
push
push
or
loopne
in
in
add
add
xor
add
add
add
add
jno
add
add
or
add
fs
add
add
add
jns
jns
jns
jns
push
push
push
mov
add
add
add
add
loop
loop
add
add
add
sbb
incb
hlt
hlt
hlt
hlt
hlt
hlt
filds
repnz
add
add
add
sbb
sbb
sbb
add
add
add
add
adc
adc
adc
adc
add
in
add
add
sub
add
cmp
add
add
mov
mov
mov
mov
mov
ja
ja
add
add
insl
push
push
cld
add
stc
stc
stc
stc
add
add
add
add
in
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
sbb
or
or
or
or
ss
sub
sub
sub
sub
sub
lahf
int3
int3
sbb
out
add
add
dec
dec
add
add
sbb
push
push
push
push
push
push
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
add
add
rol
rol
pop
add
add
es
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
add
lahf
lahf
lahf
lahf
fstp
fstp
fstp
fnstsw
aas
aas
lahf
lahf
lahf
lahf
lahf
add
add
add
rol
rolb
add
jns
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
inc
add
add
fcmovu
fcmovu
fcmovu
fiaddl
add
aad
aad
aad
aad
stos
stos
stos
stos
stos
jno
jno
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
add
add
fs
popa
add
add
add
add
dec
add
add
add
cmpsl
add
div
div
div
testb
sub
add
add
add
or
or
hlt
hlt
dec
dec
dec
dec
dec
dec
lock
testb
add
add
lret
or
sub
sub
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
mov
mov
add
add
ljmp
dec
dec
dec
dec
dec
dec
jmp
jmp
add
add
mov
add
add
add
inc
inc
inc
sub
add
std
add
add
add
fcmovu
fcmovu
fcmovu
loope
loope
data16
lret
lret
lret
lret
lret
lret
lret
lret
daa
daa
daa
daa
daa
daa
daa
add
pop
pop
pop
pop
pop
pop
pop
mov
fcomp
inc
inc
inc
inc
inc
inc
add
adc
mov
add
sub
vpackuswb
addr16
mov
add
add
add
add
int3
int3
add
add
add
add
aam
add
add
jb
jb
add
add
add
fiadds
add
push
push
push
push
push
add
mov
addl
rcl
test
test
add
inc
inc
inc
inc
inc
inc
mov
mov
mov
mov
add
add
push
push
push
push
push
push
push
push
das
das
das
das
das
das
das
sbb
sbb
ret
mov
mov
mov
mov
mov
imul
and
and
mov
add
xor
add
xchg
shll
xchg
add
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
add
add
add
add
add
add
add
jo
jo
jo
jo
jo
jo
jo
jo
jo
sbb
add
add
or
nop
nop
popa
add
stos
int
add
mov
mov
roll
push
push
js
sub
add
mov
dec
dec
dec
dec
dec
dec
dec
and
and
and
and
and
and
rolb
add
add
stos
stos
stos
stos
cmp
cli
cli
cs
add
loopne
aas
aas
aas
aas
aas
aas
add
sahf
sahf
sahf
sahf
sahf
sahf
xor
xor
add
xor
add
add
out
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
jno
add
jne
jne
jne
jne
mov
mov
mov
mov
add
lods
lods
lods
mov
mov
mov
add
adc
adc
adc
push
push
push
adc
adc
sub
sub
sub
sub
sub
sub
sub
sub
sub
adc
adc
adc
adc
data16
sti
rcl
rcl
add
cmc
cmc
cmc
cmc
jne
jne
jne
inc
inc
inc
inc
inc
add
add
addr16
daa
daa
mov
pop
pop
test
test
test
test
scas
scas
scas
scas
scas
add
loope
mov
mov
xchg
xchg
add
cmp
cmp
cmp
cmp
clc
clc
jecxz
jecxz
jecxz
jecxz
add
xor
add
add
add
mov
xor
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
add
jo
jo
jo
jo
add
mov
add
movsb
movsb
movsb
movsb
ds
int
pop
pop
pop
pop
mov
dec
dec
dec
dec
dec
xor
xor
xor
add
add
add
sub
add
add
add
add
mov
mov
fs
hlt
sub
sub
sub
sub
sub
rol
add
aam
aam
add
add
push
push
push
push
push
add
add
cltd
add
add
push
add
add
add
push
push
push
push
push
push
push
push
push
add
sbb
add
loope
loope
data16
cmp
inc
inc
inc
inc
lret
add
add
aam
in
in
in
std
add
add
add
add
add
add
add
ljmp
scas
scas
scas
scas
scas
scas
flds
add
add
add
add
add
aam
aam
aam
mov
mov
mov
mov
mov
pushf
pushf
pushf
pusha
pusha
pusha
pop
pop
pop
pop
pop
pop
pop
pop
pop
movsb
movsb
movsb
movsb
inc
inc
inc
testb
or
or
or
or
or
or
or
or
or
add
add
test
test
test
test
jmp
call
push
add
add
add
aad
cmp
cmp
add
adc
adc
adc
cmp
cmp
cmp
cmp
cmp
cmp
add
pop
pop
pop
pop
movsb
add
xchg
pop
pop
pop
pop
pop
pop
pop
sbb
add
bswap
lret
incl
add
add
daa
daa
mov
add
add
add
mov
add
clc
clc
clc
mov
mov
mov
mov
mov
mov
mov
mov
mov
daa
daa
daa
daa
pop
pop
pop
pop
pop
pop
pop
pop
mov
mov
add
scas
lock
int
int
add
add
cmp
cmp
add
add
add
jp
jp
pop
pop
pop
push
add
add
add
add
add
sbb
add
mov
cmp
loope
arpl
mov
adc
add
add
xchg
mov
mov
mov
mov
add
add
add
jp
jp
add
add
scas
scas
add
jmp
add
add
sbb
sbb
sbb
mov
rol
rol
rol
rol
add
add
add
add
adc
add
repz
test
sbb
movsl
movsl
movsl
add
inc
inc
inc
inc
inc
inc
inc
push
push
push
push
push
push
pop
pop
das
das
das
das
das
adc
inc
inc
inc
inc
inc
mov
add
std
add
mov
add
add
add
or
jmp
lahf
lahf
lahf
mov
sbb
sbb
push
add
add
add
sti
sti
sti
add
add
add
add
xchg
add
or
out
add
add
fucomp
fiaddl
add
add
add
insl
insl
insl
insl
insl
add
add
add
out
out
mov
push
push
push
push
push
push
push
push
add
add
sbb
sbb
sbb
sbb
sbb
sbb
sbb
cmp
add
add
cmc
cmc
cmc
add
jo
jo
jo
xor
pusha
adc
add
add
add
cmpsl
add
add
repnz
adc
adc
add
jne
jne
jne
jne
add
add
sahf
sahf
sahf
xor
xor
xor
out
out
out
out
je
add
rol
rol
add
add
add
add
add
jae
jae
mov
mov
and
and
add
add
add
xchg
mov
mov
xor
xor
sbb
sbb
sbb
sbb
div
div
testl
addr16
xlat
xlat
xlat
xlat
xlat
sbb
movsb
movsb
movsb
movsb
je
add
push
push
mov
add
adc
dec
dec
dec
dec
add
inc
in
push
cmp
jmp
push
push
push
push
push
push
push
ss
mov
sbb
pop
pop
pop
pop
pop
pop
pop
mov
test
jmp
or
or
add
add
insb
insb
insb
insb
insb
insb
insb
xchg
xchg
xchg
enter
push
push
push
js
cmp
cmp
fsubrl
test
inc
add
push
push
push
push
mov
jl
jl
jl
mov
add
add
fstp
fstp
fisttpll
dec
dec
add
xlat
add
test
test
test
test
test
xor
xor
xor
pop
pop
pop
pop
pop
pop
pop
pop
or
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
popf
popf
popf
push
push
push
push
add
in
in
pusha
pusha
pusha
lea
addr16
addr16
insb
jbe
jbe
jbe
jbe
mov
mov
jnp
lret
lret
lret
lret
stos
stos
stos
stos
stos
stos
stos
mov
mov
add
add
add
add
add
mov
add
add
push
pop
pop
pop
xchg
xchg
or
or
or
or
or
or
or
add
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
push
push
push
push
push
push
push
push
push
push
push
icebp
icebp
icebp
icebp
adc
add
add
add
es
inc
add
add
les
add
add
add
es
cmp
cmp
cmp
cmp
add
pop
pop
pop
pop
pop
pop
pop
pop
rcl
lods
lods
lods
pop
pop
pop
pop
pop
add
sbb
and
or
or
iret
iret
add
add
add
add
or
outsl
outsl
outsl
mov
outsl
outsl
add
add
leave
add
add
pop
pop
pop
pop
pop
pop
pop
pop
add
test
in
in
stc
add
cmp
mov
mov
mov
mov
add
mov
add
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
add
rol
rol
pop
mov
cltd
add
jl
jl
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
mov
add
add
dec
add
outsb
mov
and
aaa
aaa
aaa
aaa
add
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
add
jge
jge
jge
dec
or
add
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
fstp
fstp
fstp
rcl
add
lret
lret
sbb
add
add
add
add
add
sub
add
add
add
push
push
push
push
push
push
push
jb
cld
cld
cld
cld
cld
cld
cld
cld
cld
add
and
ds
push
push
add
add
add
add
das
das
das
das
das
add
add
add
sub
sub
sub
push
push
cmpsb
cmpsb
cmpsb
cmpsb
test
clc
ljmp
inc
inc
inc
add
leave
clc
clc
pop
pop
pop
dec
dec
push
add
jecxz
jecxz
add
add
add
add
push
push
sbb
add
add
add
add
add
cmp
ret
aad
sub
sub
sub
add
add
mov
stos
add
add
fcomp
fcomp
fcomp
fcmovu
fcmovu
fcmovu
fcmovu
sbb
push
or
lods
add
add
add
jne
jne
jbe
jbe
jbe
jbe
jbe
jbe
jbe
add
add
add
add
add
lret
lret
lret
div
div
div
div
div
div
popf
popf
add
add
out
out
out
out
out
data16
add
add
add
jle
adc
adc
adc
xor
xor
ja
mov
mov
mov
mov
mov
repz
cmc
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
cld
cld
cld
cld
cld
int3
int3
int3
int3
int3
add
add
add
inc
inc
inc
inc
inc
inc
inc
inc
add
cmp
add
adc
adc
adc
adc
adc
adc
adc
adc
push
ljmp
add
add
add
add
leave
leave
leave
leave
leave
leave
add
sub
lahf
lahf
add
mov
mov
add
add
incb
add
jmp
rol
lahf
add
inc
inc
inc
inc
inc
or
add
add
fildl
add
add
sti
sti
sti
rol
roll
add
add
loop
loop
aad
repnz
in
add
add
sbb
cwtl
cwtl
hlt
hlt
hlt
hlt
hlt
hlt
hlt
into
or
or
or
add
popa
popa
popa
popa
popa
popa
popa
or
or
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
and
add
add
add
add
add
jge
jge
jge
mov
mov
mov
cmp
cmp
cmp
cmp
add
xor
xor
xor
xor
popl
add
sub
sub
sub
sub
sub
sub
sbb
sbb
sbb
sbb
add
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
add
add
add
sbb
sbb
sbb
sbb
add
mov
mov
mov
mov
add
add
add
add
enter
enter
adc
adc
add
add
add
add
dec
dec
dec
add
pop
pop
sbb
sbb
rcl
rcl
rcl
rcll
popa
popa
popa
popa
popa
aam
aam
aam
add
pushf
pushf
pushf
pushf
std
add
add
add
sahf
sahf
add
add
add
fcmovu
dec
dec
dec
and
add
add
add
add
inc
inc
inc
pop
pop
mov
pop
pop
pop
add
inc
add
jge
lock
dec
dec
dec
dec
dec
sub
mov
inc
inc
inc
inc
add
add
ss
cmp
cmp
cmp
cmp
cmp
cmp
add
add
add
mov
xor
add
js
js
add
cwtl
cwtl
cwtl
cwtl
mov
inc
inc
inc
jecxz
jecxz
add
in
add
movb
add
arpl
fcomp
fcomp
fcomp
out
out
out
out
add
xchg
xchg
add
add
and
and
and
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cmp
outsb
outsb
outsb
outsb
outsb
dec
test
addl
insl
mov
mov
mov
mov
mov
add
add
out
add
push
push
push
push
push
push
push
fcmovnu
fcmovnu
add
lcall
cmp
add
add
add
sbb
inc
inc
filds
and
sub
sub
sub
sub
sub
xchg
or
or
or
or
or
lahf
lahf
lahf
lahf
lahf
lahf
movl
loop
loop
pop
pop
pop
pop
add
loopne
loopne
add
add
incb
push
push
push
push
push
push
push
push
add
ret
ret
ret
or
add
and
add
add
add
xchg
xchg
add
out
out
out
out
out
add
dec
dec
dec
hlt
popl
add
rcl
aaa
aaa
aaa
aaa
aaa
aaa
aaa
jns
or
mov
mov
sbb
xor
xor
xor
add
mov
dec
movsl
push
lds
pusha
adcb
sub
repz
mov
cld
cld
in
add
subb
pop
les
and
mov
cmc
mov
sbb
int3
cmp
paddq
jbe
imul
lret
int3
fsubs
dec
jle
pushf
mov
adc
shrl
and
push
mov
xor
shl
stc
mov
mov
or
cmp
test
imull
cmpsl
aaa
and
mov
fwait
andl
pop
xchg
js
inc
inc
jp
mov
push
mov
push
or
jae
mov
repz
orl
loope
mov
mov
loopne
pop
int
addb
insb
loope
movsb
inc
add
mov
push
gs
jp
cmc
xchg
icebp
mov
loopne
mov
pusha
sbb
ds
pusha
and
push
or
movsb
pusha
loopne
dec
mov
sbb
adc
lea
push
inc
insl
add
inc
fisttps
outsb
notb
or
jmp
push
add
inc
and
inc
xchg
leave
jp
cld
sub
jle
out
xor
or
jle
sbb
mov
and
lahf
mov
xchg
testb
pop
jns
movsb
and
mov
xchg
cmpsb
add
mov
js
leave
xor
loopne
stos
pop
les
add
mov
and
andb
or
pop
xchg
jp
fstps
push
jle
push
and
push
lahf
push
loopne
mov
push
js
mov
pop
mov
xor
inc
mov
ret
aaa
add
mov
mov
add
shrb
pop
pop
in
dec
shll
aas
es
sub
inc
cltd
pop
add
inc
fists
and
jle
adc
rcr
dec
aam
xchg
mov
push
add
mov
xchg
fs
sahf
out
mov
dec
lret
xchg
lock
mov
push
scas
mov
pusha
jo
cld
pop
leave
outsb
pop
ljmp
repnz
jnp
loopne
xchg
jb
testl
sbb
inc
add
js
test
add
test
pop
push
pusha
in
xchg
addb
jns
mov
in
add
fistpl
sbb
inc
add
mov
sbb
aas
xor
shl
testb
mov
fisttps
inc
dec
add
sbb
cmp
int3
ds
sbb
mov
adc
or
addb
lods
andl
pop
mov
mov
mov
outsb
dec
jmp
pusha
inc
fidivs
je
pop
lods
pusha
inc
addb
repz
addr16
jl
lods
rolb
xor
xor
loopne
loopne
add
add
push
push
aas
pop
std
in
lcall
push
jp
movsl
repnz
mov
jecxz
dec
scas
pusha
pusha
pop
je
pop
fxch
jp
sub
rolb
mov
adc
and
cmp
roll
pusha
sub
loopne
mov
pop
xchg
sahf
jns
add
add
or
xchg
dec
aaa
mov
mov
popf
cld
mov
dec
and
movsb
pusha
and
outsb
dec
push
adc
xlat
addb
pop
mov
lret
xchg
and
pusha
movsl
or
ds
fidivs
or
add
sbb
rol
popf
mov
jae
dec
and
test
and
test
loopne
insl
xor
fistps
loopne
into
js
add
add
int
inc
cmp
xor
jne
inc
sub
lds
add
add
inc
mov
pusha
push
mov
scas
inc
add
aaa
sarb
dec
imul
jns
pop
arpl
rolb
mulb
mov
add
mov
rcr
add
add
pusha
rcr
xchg
es
ss
cmp
sbb
and
mov
xchg
imul
inc
and
mov
arpl
and
cmp
push
jecxz
cmp
sub
cmp
repz
into
and
and
mov
outsb
and
xchg
pop
push
and
xchg
jb
pop
outsl
lcall
in
cltd
sarl
push
inc
gs
mov
mov
hlt
push
loopne
clc
jno
pop
push
add
mov
push
mov
sbb
popa
cld
adc
add
pop
add
adcb
or
mov
add
call
les
outsl
mov
pusha
rorb
add
lods
dec
sub
ljmp
aad
pop
cli
jb
rorl
shlb
add
xor
cmc
int
mov
xchg
xchg
mull
loopne
jecxz
loopne
dec
in
add
mov
and
inc
rorb
addb
add
inc
mov
int
add
add
add
test
in
add
repnz
fidivrs
in
cmc
jg
add
fstl
fsubrs
addb
outsl
xchg
mov
xchg
jno
popf
jae
add
and
mov
mov
or
and
xor
cmp
loop
xor
pusha
add
cmp
fstpl
imul
sub
loopne
xchg
pop
mov
paddusb
sub
in
neg
add
ja
into
out
imul
arpl
push
cmp
clc
test
insl
lret
das
repz
adc
inc
scas
xlat
out
mov
filds
inc
rcrb
add
jecxz
xor
add
pusha
dec
and
inc
fcom
and
test
mov
mov
pusha
dec
movsl
adc
sti
push
jle
pusha
out
mov
push
ret
aaa
xlat
fninit
jo
scas
mov
andb
in
mov
cld
aam
pop
gs
jae
in
mov
imul
shlb
fdivs
dec
mov
xchg
movsb
mov
mov
mov
insl
adc
roll
mov
pusha
push
xchg
loopne
lods
pop
jmp
cmp
bnd
enter
es
add
in
mov
mov
dec
pushf
out
addb
js
icebp
cmp
jecxz
or
add
mov
inc
pop
push
insb
pop
jns
lods
add
jno
fiaddl
rol
fs
shlb
xchg
in
add
nop
test
add
shl
data16
adc
movsl
mov
outsl
xchg
or
hlt
or
inc
push
andb
dec
push
fmuls
mov
bound
pop
jbe
clc
movsb
and
add
out
xlat
mov
loopne
or
and
add
out
adc
xor
call
cli
nop
les
pushf
bound
mov
inc
out
fnstenv
sbb
pop
les
inc
mov
jmp
imul
or
pusha
test
andb
pusha
sbbb
cs
jne
inc
add
popa
dec
xchg
mov
mov
pusha
or
and
push
or
std
sub
aad
jmp
sub
call
mov
js
lods
xchg
test
inc
dec
leave
push
out
mov
xchg
iret
shll
shlb
shlb
mov
rclb
xchg
dec
stos
pusha
mov
pop
cmc
mov
shl
jbe
pop
ret
arpl
add
popa
or
loopne
mov
mov
dec
test
inc
flds
or
inc
les
cld
mov
mov
fisubrs
inc
adcb
sahf
xor
lea
mov
or
nop
mov
rol
push
clc
imul
leave
mov
pusha
xchg
cwtl
mov
add
movsl
and
andb
add
rclb
inc
mov
and
lods
sarb
movsl
xchg
les
negl
jae
and
xchg
fsubrs
loopne
mov
or
mov
jbe
jo
sbb
sub
add
adc
sub
sub
inc
push
inc
inc
setae
cwtl
pop
push
fidivrl
pop
sub
inc
repnz
cmp
inc
push
or
dec
and
sub
add
mov
xor
maskmovq
negl
ljmp
insb
filds
jl
loopne
shlb
addr16
ss
das
pop
jns
mov
add
pop
mov
adc
mov
in
pop
pop
add
lods
add
jae
pop
addb
out
sbb
sub
lcall
stc
jbe
lret
adc
fcmovnu
or
outsb
mov
add
cmp
loop
enter
out
mov
sbb
pusha
mov
in
scas
inc
and
dec
jbe
jp
adcl
pop
mov
xchg
mov
and
xor
add
cmp
daa
push
test
shlb
inc
int3
pop
imul
in
or
les
add
loopne
add
and
test
add
pop
js
mov
sub
sar
hlt
adc
lods
call
cmpsb
loopne
xchg
addb
sahf
andb
loopne
bound
inc
mov
and
mov
loopne
mov
rorb
arpl
xchg
sub
cmpsb
pusha
and
mov
loopne
jle
js
mov
lods
pusha
cmp
add
cltd
movsb
pusha
shr
je
xor
dec
hlt
cmp
xchg
aas
test
add
mov
push
stc
or
add
repz
decb
inc
loopne
xchg
into
mov
add
jg
or
andb
rolb
cli
insb
stos
adc
or
mov
inc
jb
inc
and
mov
pushf
adc
mov
xchg
loope
rolb
sbb
cld
push
inc
dec
mov
addb
andb
push
mov
loopne
jns
imul
mov
pushl
inc
mov
addb
icebp
scas
shlb
sbb
test
dec
fcmovnu
arpl
mov
inc
pushf
mov
cltd
repnz
jnp
sbb
cmp
sbb
mov
and
pop
add
mov
xchg
int3
adc
add
aas
fcom
fst
or
and
shrb
pop
daa
popa
mov
iret
scas
outsl
pop
push
mov
mov
in
jo
add
enter
leave
xor
ror
dec
pushf
mov
rorb
loopne
lea
jo
or
ss
mov
rolb
pusha
rcr
out
mov
test
lcall
shl
inc
and
popf
xor
cmpsl
pop
les
push
inc
scas
inc
mov
enter
stos
addb
mov
movsl
cltd
pop
sahf
push
jle
imull
mov
or
mov
iret
add
adc
xchg
fwait
ret
scas
and
add
roll
loopne
loopne
movsb
pusha
loopne
mov
mov
lret
xor
repz
push
lock
sub
add
adc
jge
jecxz
andb
andb
in
or
pusha
scas
inc
mov
pop
xchg
jmp
mov
add
test
and
and
xchg
pop
mov
loopne
and
add
test
mov
sti
in
jno
and
jg
lock
xorl
shlb
pop
andb
xor
outsb
mov
xchg
cmp
icebp
sbb
stos
add
cmp
lods
out
sbb
imulb
out
cwtl
and
mov
nop
and
lret
mov
cmp
mov
insb
add
sub
mov
cmc
jmp
sti
sti
pop
xchg
mov
inc
rcll
shrb
stos
xchg
sbb
arpl
hlt
mov
jae
les
rcr
andb
mov
pusha
mov
icebp
movb
cmc
test
cmp
mov
or
repz
cmp
cmp
aas
leave
xor
loopne
push
sbb
ss
add
sub
loopne
daa
inc
xchg
cmp
xor
mov
and
shlb
rcrb
lods
int
add
outsb
mov
mov
and
rorb
dec
je
sub
cmp
mov
and
sub
and
jmp
aas
mov
in
mov
add
bound
jecxz
addb
andb
hlt
pusha
std
loope
pop
cltd
out
cs
repz
lcall
mov
jge
daa
and
rcr
jg
push
andb
daa
js
loope
mov
push
dec
mov
cwtl
sub
inc
push
pop
cmpsl
fnstenv
add
inc
and
sbb
call
add
pop
sahf
fwait
sahf
ljmp
les
and
pusha
rol
xchg
push
imul
and
or
sti
std
mov
mov
mov
pop
xlat
stos
out
in
insb
fcmovnu
add
inc
pop
xchg
jmp
pop
lock
and
pusha
mov
mov
dec
icebp
int
inc
xchg
out
in
or
out
gs
bound
jbe
mull
cmp
sub
shlb
repz
insb
dec
dec
mov
inc
cmp
mov
pop
rcl
mov
pusha
subb
mov
inc
subb
mov
shlb
loop
movl
and
inc
ret
out
imul
inc
loopne
mov
pop
adc
dec
repz
jecxz
addb
stos
outsl
lods
add
xor
sub
mov
arpl
stos
divl
out
cmp
mov
and
inc
or
ljmp
pop
jecxz
push
mov
hlt
icebp
testl
and
pusha
mov
mov
loopne
add
pop
jge
jne
std
add
dec
xchg
call
mov
hlt
push
pushf
negb
dec
add
push
lcall
inc
iret
ret
mov
data16
dec
imul
fistpll
jp
ds
push
push
je
mov
inc
pop
negb
pusha
inc
sbb
mov
mov
cmp
mov
movsb
add
sarl
cmpsb
add
ret
push
xchg
dec
add
cltd
ret
loopne
and
xor
jnp
inc
pop
push
andb
ja
loopne
fisubl
mov
pop
adc
mulb
and
call
mov
stc
pop
cwtl
dec
cli
shll
pop
mov
cmpb
in
and
loopne
pop
push
and
je
adc
shrl
scas
loopne
shll
sbb
adc
and
jge
scas
adc
loopne
lods
jge
data16
int3
add
jp
shlb
mov
and
test
inc
stos
andb
rcr
scas
loopne
lret
andl
mull
jae
xor
mov
adc
xchg
ljmp
notl
fwait
mov
fisubrs
movsb
add
mov
loopne
mov
or
pusha
aad
add
cmp
sbb
data16
pop
mov
pop
pop
repnz
push
in
sbb
loopne
sbb
aaa
and
xlat
aaa
out
or
and
test
jle
sub
hlt
in
ljmp
cmpsl
movsb
and
sub
stos
shlb
shlb
mov
and
ret
shlb
aad
out
jle
xor
push
movsl
pop
inc
mov
mov
and
insb
pop
mov
ficompl
mov
loopne
sub
rclb
dec
add
sub
out
pusha
add
or
push
and
adc
stos
loopne
andl
in
or
loopne
sbb
ja
inc
std
lret
and
add
and
mov
aam
inc
sub
inc
loopne
cmp
stos
andb
leave
mov
shlb
out
push
sub
and
pusha
jp
push
sbb
fistpl
ja
cli
fs
test
sbb
das
insl
out
pusha
rol
loopne
gs
inc
xchg
pop
mov
push
mov
mov
repnz
call
and
cmp
shlb
jle
inc
cmc
push
loopne
int3
inc
push
int
pushf
push
rolb
add
xchg
mov
inc
mov
popf
arpl
or
add
out
pop
inc
push
jne
adc
add
sub
shlb
inc
jmp
fistpll
push
pop
cmp
outsl
mov
shlb
sbbl
shl
or
shrb
fisttpll
aas
sti
enter
inc
popf
pop
inc
int
shlb
add
push
jno
inc
imul
rol
mov
xchg
int
push
outsb
addb
aaa
cli
mov
jp
add
test
loopne
shrl
sbb
aam
cmp
out
push
dec
push
scas
dec
dec
hlt
jp
fcmove
and
cmp
sbb
add
mov
stos
adc
andb
shlb
xchg
js
dec
push
ja
fidivl
push
mov
mov
mov
mov
fdiv
cwtl
inc
dec
cmp
jmp
movsl
ljmp
addb
pusha
inc
mov
and
add
mov
sub
and
adc
scas
xor
sub
and
cmp
je
mov
xchg
pop
mov
or
mov
push
mov
loopne
mov
pop
or
pusha
and
add
xorb
mov
sbb
push
jmp
fiaddl
push
ja
rolb
stos
add
cwtl
push
test
mov
dec
stc
icebp
pop
cwtl
clc
xchg
push
cmp
xchg
cld
mov
mov
mov
and
mov
movsl
dec
mov
jb
dec
pop
xor
jp
jns
loopne
jb
int
mov
pusha
pusha
lcall
jle
mov
icebp
imul
in
lea
shrl
imul
loopne
jb
or
add
loopne
scas
jnp
xlat
xor
jmp
push
rol
mov
loopne
inc
lret
addb
iret
jnp
jo
add
inc
xor
addb
push
jecxz
xchg
add
xchg
shr
negl
daa
inc
repnz
mov
mov
xchg
jne
loopne,pn
cld
mov
mov
shlb
loopne
sbb
in
or
and
push
cmp
dec
push
pop
int
and
cli
push
addr16
lods
pusha
adc
inc
jmp
pusha
imul
loopne
add
fs
sub
shlb
pushf
mov
lret
cmp
lea
je
sti
push
mov
out
mov
adcb
fimull
pop
jl
mov
int3
shlb
aad
ret
mov
loopne
mov
jl
push
add
lret
xchg
stos
shlb
sbb
clc
jae
enter
arpl
stos
stos
addb
sbb
arpl
add
aad
jae
dec
push
loope
xor
and
mov
or
rorb
and
mov
mov
arpl
in
or
movsl
cmp
adc
in
les
fadds
xchg
insb
fs
lahf
mov
add
mov
pop
or
fsubr
xchg
xor
mov
jae
call
shrb
loopne
pop
pop
aaa
inc
test
shrb
or
xor
jno
data16
mov
test
and
xchg
cltd
out
shlb
shl
push
mov
inc
andb
cmc
add
mov
cltd
cmp
or
add
aas
push
lahf
lds
paddsb
cmp
adc
arpl
aad
mov
pushf
push
mov
nop
aam
lahf
sahf
test
xor
xchg
dec
xor
gs
push
mov
jno
mov
pusha
loopne
cmpsb
loopne
mov
sbb
cmpsl
repnz
scas
mov
lcall
mov
bound
mov
push
lahf
mov
test
loopne
jne
ja
cld
mov
stc
adc
nop
icebp
cli
and
mov
and
or
adc
and
cmpsb
addb
repnz
mov
js
sbb
loopne
movsw
mov
stos
shlb
shlb
lea
pusha
shrb
fnsave
in
push
andb
lods
inc
mov
cmp
nop
mov
pusha
loopne
cmc
adc
arpl
imul
sbb
adc
dec
push
push
mov
or
jge
jo
xchg
jmp
pusha
test
pusha
mov
ret
xchg
mov
add
sbbb
scas
mov
inc
mov
pop
mov
shlb
dec
je
xchg
pop
dec
fisubl
pushf
xor
xor
rcrb
stos
mov
adc
xor
push
mov
cmpsl
mov
fdivl
dec
fwait
sahf
or
aas
test
push
push
fistpll
and
mov
neg
push
test
loopne
inc
add
stos
pop
icebp
inc
lgs
pusha
shrb
inc
ljmp
jns
mov
mov
adc
add
out
and
shrb
xor
dec
xor
mov
add
int3
jg
push
mov
js
or
dec
push
dec
fs
bound
inc
pop
stc
or
pusha
jne
mov
add
shl
mov
mov
xchg
push
repnz
repnz
cmp
je
dec
sbb
aaa
adcl
fs
inc
mov
clc
and
rcrb
and
push
xor
mov
adc
push
scas
inc
inc
push
punpcklwd
and
push
daa
xchg
addb
clc
adc
rclb
jecxz
push
fs
or
shlb
adc
divl
inc
rorb
movsb
loopne
sbb
mov
fsubrl
mov
sarb
mov
andb
cwtl
gs
cwtl
pusha
xchg
and
dec
shrl
sub
aaa
in
rclb
loope
dec
rolb
add
daa
adc
adc
jge
xor
ljmp
dec
sub
inc
nop
add
fldl
sub
mov
cmp
sarl
dec
xor
or
loopne
pop
xlat
xor
inc
add
sub
in
or
loopne
ret
sarl
in
mov
loopne
adc
pop
mov
xchg
pop
or
and
rcll
in
pop
or
mov
leave
aad
out
or
lods
rolb
stos
loopne
vpsubsb
cmp
leave
lods
loopne
jmp
shlb
mov
mov
cmp
add
xor
sbb
fstpl
popf
fidivs
or
loopne
in
push
add
push
or
sbbb
lods
loopne
sti
sti
lcall
rolb
rolb
sub
add
sahf
or
adc
mov
pusha
pusha
pop
pop
int
dec
cmpsb
loopne
ror
cmc
inc
je
sbb
cwtl
sbb
mov
xlat
outsb
jmp
xchg
push
idivb
in
cmp
and
inc
fnstenv
stos
insl
sbb
cld
sbb
cmp
movsb
inc
and
mov
jl
and
jp
mov
inc
inc
xchg
push
loopne
mov
mov
and
iret
cltd
ja
xor
jae
addb
shlb
sbb
mov
cmp
sub
mov
push
shrb
ret
movsb
shl
push
mov
pusha
push
add
cwtl
jg
loopne
rol
lahf
mov
scas
loopne
sub
xchg
cmp
adc
mov
or
and
pop
ljmp
sub
enter
rcll
lds
mov
call
loopne
lods
and
outsl
mov
add
mov
xor
cmpsb
add
sub
loopne
icebp
mov
jo
pop
pop
popf
or
mov
fiaddl
lods
jae
outsl
scas
push
and
mov
add
sub
sbb
jns
adc
jbe
aad
shlb
pusha
loopne
cmp
sti
stos
inc
mov
sbb
adc
in
retw
sets
xor
aam
pop
out
mov
sarb
sub
add
aas
ret
loopne
and
aas
into
adc
das
dec
test
dec
ficoms
cmp
andl
cmp
add
mov
mov
inc
cmp
arpl
sti
popf
fldt
add
repz
ds
int3
jno
rolb
lds
mov
pop
pop
enter
sarb
lahf
sub
inc
in
sti
and
mov
test
mov
add
sbbb
jl
xor
stos
pop
data16
and
int3
lcall
shl
out
sub
and
rolb
cld
dec
andl
rolb
push
stos
and
loopne
stos
inc
sar
sub
pusha
addb
hlt
pop
mov
add
sbb
stos
andb
push
loopne
inc
iret
ljmp
xlat
cld
xchg
dec
lret
mov
orb
rorb
lcall
push
stos
loopne
into
push
mov
das
push
inc
and
mov
mov
mov
shrb
dec
out
out
jg
lds
adc
mov
imul
add
sarl
xchg
mov
jmp
pmulhuw
mov
and
mov
out
add
cmp
outsb
xchg
lret
rolb
test
and
fstps
lret
loopne
sbb
loopne
sub
xchg
fsts
daa
scas
mov
dec
rcl
dec
pop
add
ret
gs
mov
lret
pop
enter
push
mov
pusha
in
xchg
inc
xor
fstps
dec
adc
sbb
pop
pop
inc
je
mov
aas
mov
fucomip
js
dec
mov
or
clc
or
adc
mov
and
mov
das
pop
pop
cmp
jg
xor
pushf
shll
jo
out
cmpsl
or
xchg
pop
cmp
stc
mov
rcl
lock
xor
cltd
inc
das
dec
rorl
and
cmp
enter
popa
xchg
stos
shl
add
movlps
call
sar
std
adc
rcr
testb
or
sar
add
dec
insb
and
add
rolb
scas
movsb
loopne
lods
cmp
or
add
les
loopne
mov
mov
rcrb
pop
inc
and
or
fs
test
xor
add
add
push
jae
or
inc
sti
xchg
cmpsl
sbb
dec
in
lds
ror
in
mov
xchg
fnsave
insb
jge
test
addb
imul
in
mov
in
cmp
cli
int3
stos
lret
cld
rcrb
mov
mov
repnz
insl
daa
call
stos
mov
xchg
sarl
sub
pop
cmp
mov
addb
dec
dec
mov
std
or
loopne
out
sahf
add
cmpb
xchg
xchg
mov
push
imul
lds
arpl
leave
mov
dec
shl
ljmp
fsubrl
pusha
jbe
pusha
andb
aam
dec
add
xchg
mov
int
inc
dec
xor
sbb
in
out
out
pop
xchg
cmp
pop
and
mov
addr16
push
dec
ss
fisttps
xor
sbb
lds
je
sarb
mov
rolb
jp
out
inc
rclb
shr
sarl
pushf
and
jo
popa
bound
lods
push
xchg
sub
aad
fadds
shlb
lds
and
adc
push
fdiv
and
subb
loopne
fdivl
inc
loopne
cmp
icebp
xor
pinsrw
in
add
push
push
push
push
call
sub
add
imul
lea
and
test
je
mov
push
push
bnd
cmp
cld
jne
mov
add
push
push
push
push
call
test
jne
jmp
lea
movl
push
push
push
call
cmp
lea
jne
movzbl
or
pop
mov
not
imul
and
jne
call
loop
mov
mov
stc
notrack
sbb
mov
add
add
mov
mov
mov
inc
or
lea
lea
add
lea
add
sub
jmp
push
mov
jmp
ja
repz
mov
sub
shr
cmp
aam
stos
pusha
or
rolb
jae
arpl
jns
push
pusha
loopne
shll
mov
mov
add
lret
shll
add
or
pusha
push
lds
add
lcall
shlb
sbb
jne
xchg
jmp
sti
jns
push
out
scas
add
ljmp
loopne
inc
xchg
lods
pop
adc
andb
xchg
cmc
push
mov
push
pop
fisubrs
xlat
movb
mov
lods
inc
inc
out
add
inc
push
mov
loopne
jge
loopne
pop
and
sarb
xchg
idivl
adc
loopne
add
les
pop
ljmp
inc
mov
xor
pop
loope
xchg
movb
mov
sub
ror
jne
push
movsb
and
lods
add
add
push
test
add
notl
ja
and
mov
sub
mov
fcomps
mov
pusha
mov
idiv
dec
lods
loopne
inc
jae
lea
add
jl
mov
and
mov
adc
addb
and
pop
xchg
clc
inc
fs
int
and
jmp
jp
adc
and
movsb
add
xchg
push
scas
loopne
push
and
and
inc
rclb
repz
dec
loop
aaa
fsubs
and
loopne
std
or
subb
and
mov
loopne
xor
xor
andb
outsl
outsb
insl
add
cwtl
in
fwait
inc
and
or
add
jecxz
mov
jg
mov
mov
dec
movsl
push
imul
imul
into
mov
pusha
shll
loopne
cs
cld
xor
arpl
xchg
ds
push
and
imul
sbb
loopne
icebp
adcl
push
mov
ja
outsl
push
gs
add
cltd
stc
xchg
orb
mov
ror
xor
cli
xlat
mov
jbe
addb
mov
pop
fcom
fsubs
addr16
testb
and
mov
mov
shlb
cmp
sbb
mov
je
push
int
test
pusha
and
loopne
in
pop
pusha
adc
imul
xchg
ja
inc
loopne
andb
rolb
addb
add
mov
orb
sahf
sti
not
xchg
movl
jae
fisubrl
or
pusha
cmp
mov
jmp
inc
and
aad
lret
dec
nop
mov
rorb
push
push
pop
insl
and
jmp
jns
outsb
xor
and
fnstenv
jb
mov
jb
or
xor
mov
adc
in
test
loope
xor
movsb
add
leave
test
test
mov
jnp
mov
in
shl
jge
int
cmp
xchg
gs
jle
stc
mov
sbbb
add
lea
loopne
shlb
aaa
or
and
and
fcomp
mov
insl
and
push
mov
and
fcmovnb
lcall
adc
adc
cmp
sbb
xchg
rcl
xor
js
ja
push
lods
addb
xor
inc
loopne
or
mov
bound
mov
mov
loopne
imul
add
inc
out
or
and
out
ja
leave
sbb
icebp
sbb
test
inc
jmp
xchg
aad
mov
xor
pop
stc
sbb
cmp
fdivrs
nop
pop
xchg
pusha
test
or
or
loopne
shlb
pop
mov
roll
and
lock
fbld
sbb
cmp
sub
jnp
pusha
inc
and
out
test
loope
and
shrl
rol
andl
cmp
add
jg
andb
ds
jl
outsl
dec
cmpsl
mov
inc
lods
jne
loopne
pusha
and
add
mov
inc
push
loopne
call
push
pop
je
or
shlb
cld
adc
jg
pusha
cmp
add
mov
inc
popa
push
ljmp
ja
pop
hlt
xor
and
inc
std
sbb
out
sbb
push
push
and
subb
out
sbb
sarb
xor
and
xchg
iret
ss
fnstcw
add
sar
ljmp
mov
daa
cld
call
rolb
mov
nop
test
out
call
ficoms
push
and
ss
cltd
xchg
push
rcl
add
andb
jecxz
mov
subb
hlt
popf
dec
dec
arpl
jle
gs
adc
loopne
pop
lret
addb
jl
jb
and
out
and
loopne
and
and
add
aam
loopne
cmc
and
and
adcl
or
fsubrl
push
add
loopne
or
stos
pusha
rorb
adc
dec
mov
mov
outsl
mov
ret
mov
pusha
shlb
add
cmp
notb
andb
mov
aam
fimuls
addb
roll
mov
gs
mov
roll
sub
and
xchg
dec
lods
xor
xor
test
jle
sub
pop
cmp
shr
outsl
sub
add
jae
shl
in
loopne
push
leave
sbb
mov
fcmove
ret
sub
push
pusha
rclb
out
and
mov
add
add
hlt
bound
dec
jmp
jne
adc
jp
jns
cmp
dec
mov
push
in
cmpsb
rolb
andb
sub
cld
mov
inc
into
or
rolb
inc
jmp
jb
in
in
push
arpl
shlb
inc
mov
cwtl
inc
int3
and
loopne
add
aad
clc
jp
loopne
dec
into
rolb
mov
cmp
or
loopne
adc
sahf
push
push
xor
xchg
inc
mov
ret
lcall
data16
inc
and
lods
addb
xchg
mov
shrb
push
mov
pop
pop
shl
and
lea
or
pusha
popa
pop
fistps
push
or
mov
fsubrp
clc
addl
xor
stc
mov
stos
mov
test
and
int3
xlat
jg
cld
imul
jae
daa
and
aad
cmc
add
add
imul
jne
cmc
fldt
cmc
mov
pusha
lcall
cltd
ds
stos
add
cltd
hlt
dec
sbb
push
lcall
pop
dec
scas
add
mov
push
mov
and
sub
addb
jb
and
inc
add
sub
fdivl
lock
test
jecxz
adc
loopne
pop
out
xchg
sub
adc
fnsave
mov
xor
pusha
pusha
je
add
mov
loopne,pn
xchg
add
cld
mov
jae
cwtl
cmpsb
mov
jmp
lods
andb
mov
pop
movsb
inc
inc
enter
pop
lea
inc
push
js
outsl
push
mov
mov
cmp
lret
aaa
jns
out
test
mov
push
push
loopne
out
lcall
pshufw
in
add
ret
push
call
fsubrl
dec
mov
addb
cmp
cmpsb
mov
inc
cmpl
inc
cmp
cs
cmpb
xchg
addb
das
cmp
mov
xor
or
loopne
std
into
push
movsb
loopne
inc
lods
dec
pop
cmpsb
mov
lods
outsl
jo
insl
and
add
inc
scas
loopne
scas
rcll
xor
call
mov
adc
pusha
pusha
mov
rcr
xor
std
sbb
add
push
sub
inc
aam
xor
lods
pop
aad
jns
mov
mov
jbe
and
add
mov
stos
rol
stos
pusha
and
dec
xor
int3
jae
popf
mov
xchg
dec
push
into
test
add
inc
or
rol
fsubrs
push
jle
cld
adc
lahf
fisubl
xor
pusha
xor
add
xchg
loop
aam
iret
test
pusha
mov
xchg
add
mov
mov
adc
fnstenv
ret
sub
jbe
bound
lret
dec
roll
in
jp
mov
inc
or
mov
mov
iret
xchg
cwtl
imul
mov
cmpsb
mov
loopne
mov
push
or
shr
pusha
add
int3
sbb
aam
aam
jg
jbe
loopne
xor
enter
and
pop
cmp
or
shr
sub
push
xchg
inc
mov
jg
lock
jecxz
adc
add
push
adc
mov
andb
add
or
pusha
loopne
fucomip
mov
dec
or
addb
dec
sarb
jmp
jl
outsl
mov
shlb
sub
xchg
mov
inc
mov
mov
add
inc
sbb
test
jmp
mov
mov
fwait
push
lret
fidivrs
gs
sbbb
mov
add
pusha
pusha
mov
cmp
push
xchg
inc
fwait
dec
stc
or
shl
mov
fistpll
insl
mov
data16
into
jne
loopne
pusha
inc
add
test
inc
loopne
rol
lret
push
dec
into
and
shlb
outsl
lcall
das
or
or
xchg
xor
mov
or
andb
rcrb
inc
xor
aad
and
xor
icebp
scas
addb
js
xor
mov
fadd
cmc
mov
pusha
cwtl
aam
mul
sti
and
mov
loop
pop
in
outsb
jno
outsl
sbb
cmp
jmp
jg
and
fsubrs
xor
shlb
decb
test
inc
xchg
fwait
xchg
dec
mov
shlb
dec
push
mov
and
add
jl
mov
xchg
adc
inc
scas
and
mov
pop
mov
mov
lock
imul
sub
cli
sub
mov
clc
lods
enter
and
adc
andb
fidivrs
or
dec
inc
and
jno
fcmovbe
jb
cmpsb
mov
data16
push
loopne
sub
addb
addl
fstpl
fstp
dec
loopne
pushf
les
pusha
or
push
arpl
in
hlt
mov
roll
mov
mov
inc
js
aas
negl
cmpsb
mov
push
int3
pop
int3
mov
cmp
or
and
adc
cmp
xor
fistps
inc
push
mov
aaa
ljmp
xchg
pop
adc
sarl
inc
imul
dec
testl
mov
addb
lods
add
negl
and
cli
pop
movsl
or
xchg
cmp
cltd
andb
in
aas
xchg
jge
scas
loopne
aaa
or
mov
subb
clc
xlat
sub
dec
or
pusha
repz
repz
loopne
jb
and
pusha
aam
mov
ljmp
cwtl
sub
sbb
dec
sbb
sub
pop
sbb
push
mov
je
pusha
pusha
push
shlb
test
lret
int3
sbb
jns
mov
ljmp
sub
icebp
mov
and
cmpb
pusha
cmpsl
test
mov
xchg
shll
xor
cmp
mov
in
js
mov
movsb
add
or
or
ljmp
push
stos
jnp
popf
sub
mov
es
cmc
jp
cmp
cmc
mov
das
xchg
or
stos
adc
and
xor
andb
sub
rcrb
das
arpl
and
out
loopne
mov
inc
inc
frstor
mov
inc
push
rcll
jns
sahf
and
and
loopne
cwtl
mov
jle
jbe
lahf
push
add
sbb
add
inc
adc
xchg
std
dec
pop
push
add
cli
shrl
andb
cltd
inc
cmp
pushf
push
pop
repz
inc
loopne
jg
xchg
fnstcw
xlat
xor
push
sub
mov
loope
pusha
adcb
mov
xchg
nop
shl
cmp
hlt
ret
fmulp
int3
push
inc
and
adc
and
ficoms
pop
int
mov
cmc
pop
jbe
out
test
push
sub
add
mov
shlb
imul
rol
int3
addr16
xorl
xor
pop
add
mov
xchg
add
xor
lods
jecxz
inc
jl
rcrl
adcl
inc
loopne
lods
add
pusha
xor
ljmp
fcompl
or
les
inc
rcrb
mov
jle
sbb
idivl
cs
loopne
ss
mov
out
dec
shlb
lods
pushf
cs
add
shrl
xchg
mov
mov
xorb
xor
popa
cmp
shlb
into
mov
test
loopne
das
fstps
mov
arpl
call
sub
addb
add
sahf
and
and
jns
sub
shlb
pusha
xorb
cmp
ja
std
fisttpll
sbb
inc
rcl
sar
popa
and
leave
pushf
sub
mov
mov
mov
adc
xchg
addb
shrl
outsb
mov
loope
cltd
dec
loope
in
or
mov
xorl
jp
enter
lret
inc
orb
xor
inc
js
arpl
xchg
fldcw
and
dec
aam
loopne
addr16
or
add
pusha
add
inc
stc
or
and
andb
stc
out
shl
push
add
fcomip
cs
inc
popa
insb
mov
repnz
and
repz
inc
mov
addb
inc
push
mov
mov
clc
sbb
mov
mov
in
leave
nop
jmp
dec
mov
seto
in
leave
nop
jmp
add
add
sub
clc
fsubrs
nop
nop
cld
jae
add
add
inc
add
jp
pop
clc
repnz
nop
cld
jae
lds
sub
pusha
jl
jae
shll
add
clc
repnz
nop
cld
jae
and
call
les
add
add
repnz
nop
cld
jae
or
cltd
fistpl
clc
repnz
nop
cld
jae
xor
add
add
fwait
push
mov
xchg
ret
call
nopl
clc
repnz
nop
cld
jae
inc
add
add
add
sbb
mov
clc
repnz
nop
cld
jae
std
add
hlt
add
push
clc
repnz
nop
cld
jae
add
add
sbb
add
clc
repnz
nop
cld
jae
add
push
lds
inc
rcl
cwtl
sbb
jle
inc
add
pusha
inc
inc
test
jmp
nop
cld
jae
add
mov
nop
push
mov
leave
nop
jmp
mov
add
add
adc
inc
test
subb
nop
nop
cld
jae
lds
add
repnz
nop
cld
jae
mov
xor
add
loopne
mov
inc
mov
sub
cmp
add
add
add
add
sti
mov
nop
push
mov
leave
nop
jmp
hlt
or
push
add
mov
xor
test
repnz
nop
cld
jae
push
add
sbb
nop
cld
jae
pop
jbe
add
add
add
bound
add
add
add
push
add
mov
xchg
ret
rolb
adc
add
mov
mov
nop
push
mov
leave
nop
jmp
add
push
pop
js
push
clc
repnz
nop
cld
jae
xchg
or
loop
mov
nop
nop
cld
jae
cmovg
push
pusha
and
call
nop
push
mov
leave
nop
jmp
add
sub
loop
add
clc
repnz
nop
cld
jae
test
call
cmpsb
mov
scas
shlb
mov
test
call
nop
jmp
add
cmpsl
pop
clc
repnz
nop
cld
jae
inc
and
push
mov
fdivs
rclb
jmp
add
cwtl
add
pusha
arpl
cld
jnp
add
add
add
add
add
sbb
add
clc
repnz
nop
cld
jae
add
add
repz
mov
xchg
ret
add
add
negb
add
cmp
add
clc
repnz
nop
cld
jae
push
push
add
push
add
mov
xchg
ret
cwtl
add
call
cltd
mov
clc
repnz
nop
cld
jae
or
mov
mov
add
repnz
nop
cld
jae
add
add
mov
leave
nop
jmp
hlt
sldt
and
pop
jne
clc
repnz
nop
cld
jae
test
add
mov
gs
add
push
add
add
mov
or
repnz
nop
cld
jae
str
cmp
xchg
add
pusha
add
add
pusha
stos
xor
add
add
mov
push
mov
xchg
ret
add
add
add
add
push
mov
leave
nop
jmp
pusha
sbb
add
add
ret
nop
push
mov
leave
nop
jmp
add
cmp
mov
fwait
push
mov
xchg
ret
add
add
cwtl
or
pop
clc
repnz
nop
cld
jae
popf
add
add
add
push
nop
push
mov
leave
nop
jmp
add
push
add
push
sarl
movsbl
rolb
add
repnz
nop
cld
jae
add
add
je
nop
push
mov
leave
nop
jmp
jl
rcrl
repnz
nop
cld
jae
stos
std
pop
add
js
jmp
add
inc
push
add
push
add
and
add
mov
das
add
nop
push
mov
leave
nop
jmp
cwtl
pop
push
lcall
repnz
nop
cld
jae
mov
sub
pop
xchg
push
push
mov
xchg
ret
push
add
add
cmp
clc
repnz
nop
cld
jae
add
add
add
push
mov
xchg
ret
push
xchg
inc
fidivrl
push
clc
repnz
nop
cld
jae
pop
push
add
stc
fistpl
push
mov
xchg
ret
add
push
stos
add
clc
repnz
nop
cld
jae
mov
push
fisubrl
lcall
mull
repnz
nop
cld
jae
loop
add
popa
clc
repnz
nop
cld
jae
push
add
shlb
les
mov
xchg
ret
add
dec
add
add
lea
clc
repnz
nop
cld
jae
add
add
add
mov
nop
push
mov
leave
nop
jmp
add
add
add
push
pusha
clc
repnz
nop
cld
jae
add
add
add
xor
pusha
loopne
ffreep
jmp
nop
cld
jae
add
add
or
mov
clc
repnz
nop
cld
jae
add
add
dec
add
push
mov
xchg
ret
sbb
std
lcall
add
inc
fisttpll
mov
leave
nop
jmp
loop
add
add
push
mov
xchg
ret
rolb
add
sbb
xchg
data16
les
mov
xchg
ret
add
dec
rorb
rep
clc
repnz
nop
cld
jae
mov
std
add
mov
inc
push
mov
xchg
ret
inc
add
or
unpcklps
fwait
add
clc
repnz
nop
cld
jae
movsb
stos
shll
or
xor
jnp
inc
add
or
call
and
add
add
pusha
add
add
add
add
add
clc
repnz
nop
cld
jae
add
lcall
add
nop
jmp
xchg
add
popf
inc
mov
clc
repnz
nop
cld
jae
add
jno
enter
in
leave
nop
jmp
push
add
dec
rorl
repnz
nop
cld
jae
inc
mov
pusha
add
nop
stos
andb
pusha
push
mov
xchg
ret
pop
dec
cmp
add
and
call
push
mov
leave
nop
jmp
pusha
sbb
add
xlat
pop
clc
repnz
nop
cld
jae
add
add
push
add
push
mov
xchg
ret
add
add
pusha
add
mov
push
nop
push
mov
leave
nop
jmp
shl
xchg
add
add
repnz
nop
cld
jae
jnp
add
dec
add
nop
cld
jae
push
push
add
add
sub
or
push
clc
repnz
nop
cld
jae
pop
sbb
xchg
mov
jo
push
clc
repnz
nop
cld
jae
add
add
call
out
nop
push
mov
leave
nop
jmp
pop
sub
add
add
lea
clc
repnz
nop
cld
jae
add
or
loopne
xor
clc
repnz
nop
cld
jae
pop
add
add
lds
xor
inc
in
push
mov
xchg
ret
add
add
add
clc
repnz
nop
cld
jae
out
add
add
addb
gs
nop
push
mov
leave
nop
jmp
sub
inc
or
sbb
mov
lret
ret
clc
repnz
nop
cld
jae
mov
xor
sub
push
clc
repnz
nop
cld
jae
add
arpl
add
add
clc
repnz
nop
cld
jae
pop
add
add
sbb
hlt
aaa
pop
clc
repnz
nop
cld
jae
mov
mov
repz
add
repnz
nop
cld
jae
add
js
and
add
clc
repnz
nop
cld
jae
pusha
dec
pusha
mov
jae
push
mov
xchg
ret
add
add
cmpl
repnz
nop
cld
jae
add
pop
clc
repnz
nop
cld
jae
and
pcmpeqd
pusha
add
mov
clc
repnz
nop
cld
jae
xchg
mov
add
rcll
repnz
nop
cld
jae
add
xor
add
cmpsl
add
clc
repnz
nop
cld
jae
inc
dec
add
push
add
repnz
nop
cld
jae
add
popf
call
clc
repnz
nop
cld
jae
arpl
add
inc
mov
repnz
nop
cld
jae
add
sbb
mov
dec
nop
push
mov
leave
nop
jmp
or
adc
jnp
add
or
cld
jae
add
cmp
add
clc
repnz
nop
cld
jae
js
add
mov
push
mov
xchg
ret
out
sbb
arpl
add
xchg
call
clc
repnz
nop
cld
jae
sub
inc
and
clc
repnz
nop
cld
jae
test
call
and
repnz
nop
cld
jae
mov
sbb
mov
clc
repnz
nop
cld
jae
mov
add
add
xor
clc
repnz
nop
cld
jae
sub
push
mov
add
test
xchg
ret
call
std
add
or
xchg
clc
repnz
nop
cld
jae
pusha
xchg
and
add
dec
cmpsb
shlb
mov
clc
repnz
nop
cld
jae
inc
loop
add
add
pop
pushl
nop
push
mov
leave
nop
jmp
rcrl
or
add
pusha
xchg
mov
clc
repnz
nop
cld
jae
test
call
and
clc
repnz
nop
cld
jae
add
push
push
dec
push
push
clc
repnz
nop
cld
jae
add
add
xor
aam
add
nop
push
mov
leave
nop
jmp
add
pminub
mov
leave
nop
jmp
popf
rorl
jp
push
clc
repnz
nop
cld
jae
add
add
inc
std
cmpsl
je
clc
repnz
nop
cld
jae
sbb
add
and
push
push
mov
xchg
ret
inc
call
add
or
call
nop
jmp
int
add
and
leave
nop
jmp
std
add
cmp
out
push
sub
lsl
clc
repnz
nop
cld
jae
bswap
mov
movswl
nop
push
mov
leave
nop
jmp
add
add
xor
lea
push
mov
xchg
ret
add
push
mov
mov
push
mov
xchg
ret
add
mov
fwait
nop
push
mov
leave
nop
jmp
sbb
stos
mov
insb
xchg
and
jns
enter
nop
cld
jae
add
add
add
and
sar
and
push
mov
leave
nop
jmp
add
lds
push
push
mov
xchg
ret
sub
add
pop
pop
sub
clc
repnz
nop
cld
jae
push
add
mov
clc
repnz
nop
cld
jae
dec
lds
add
clc
repnz
nop
cld
jae
loop
mov
mov
pusha
inc
add
clc
repnz
nop
cld
jae
xchg
add
cwtl
add
add
clc
repnz
nop
cld
jae
cwtl
pop
xor
nop
or
add
nop
jmp
xor
add
lds
add
hlt
add
inc
pusha
cwtl
add
push
mov
leave
nop
jmp
int
add
push
mov
xchg
ret
hlt
fisubrl
add
add
pop
aad
lock
mov
xchg
ret
add
mov
add
mov
repnz
nop
cld
jae
push
add
inc
add
add
dec
cmp
repnz
nop
cld
jae
push
jbe
inc
lar
pusha
cmc
mov
nop
push
mov
leave
nop
jmp
push
add
add
and
mov
clc
repnz
nop
cld
jae
push
lds
add
add
test
clc
clc
repnz
nop
cld
jae
hlt
mov
or
repnz
nop
cld
jae
int
add
out
and
push
dec
xlat
je
clc
repnz
nop
cld
jae
add
inc
rorb
jnp
clc
repnz
nop
cld
jae
add
mov
loop
add
jle
and
mov
repnz
nop
cld
jae
or
test
add
mov
nop
nop
cld
jae
or
cwtl
inc
inc
push
sbb
sub
iret
or
inc
add
add
mov
pop
nop
push
mov
leave
nop
jmp
add
and
nop
push
mov
leave
nop
jmp
add
mov
mov
out
cmp
nop
push
mov
leave
nop
jmp
add
rep
clc
repnz
nop
cld
jae
add
add
add
push
rcrb
clc
repnz
nop
cld
jae
inc
add
add
add
js
push
mov
add
add
jmp
add
add
je
in
fwait
clc
repnz
nop
cld
jae
add
add
out
sbb
jecxz
push
mov
xchg
ret
test
std
lds
adc
sbb
clc
repnz
nop
cld
jae
call
add
add
push
mov
xchg
ret
lcall
push
mov
push
mov
xchg
ret
mov
xchg
add
mov
nop
push
mov
leave
nop
jmp
push
add
xchg
call
inc
jb
clc
repnz
nop
cld
jae
add
lcall
clc
repnz
nop
cld
jae
push
add
inc
repz
push
mov
xchg
ret
js
or
push
es
and
fisttps
mov
add
repnz
nop
cld
jae
sub
and
add
mov
loopne
mov
repnz
nop
cld
jae
mulb
push
push
add
clc
repnz
nop
cld
jae
inc
mov
movsl
add
clc
repnz
nop
cld
jae
dec
jnp
pusha
add
jge,pt
inc
nop
push
mov
leave
nop
jmp
inc
inc
pusha
add
clc
repnz
nop
cld
jae
adc
cmp
inc
or
and
and
in
add
clc
repnz
nop
cld
jae
test
add
cmp
add
nop
push
mov
leave
nop
jmp
add
xchg
add
and
imul
clc
repnz
nop
cld
jae
add
lcall
mov
adc
repnz
nop
cld
jae
pop
mov
call
nop
push
mov
leave
nop
jmp
pusha
and
add
push
mov
leave
nop
jmp
add
add
inc
adc
pop
nop
push
mov
leave
nop
jmp
add
test
sub
push
mov
xchg
ret
mov
pop
add
add
cmp
fwait
push
mov
xchg
ret
add
add
dec
jnp
inc
pusha
addr16
clc
repnz
nop
cld
jae
add
add
add
lock
jge
push
mov
xchg
ret
push
loop
push
push
pop
add
notb
clc
repnz
nop
cld
jae
jbe
jl
mov
shrb
push
mov
xchg
ret
add
push
out
add
add
rcll
mov
xchg
ret
add
add
pop
push
clc
repnz
nop
cld
jae
add
add
cmp
inc
push
jbe
fld1
push
mov
xchg
ret
add
add
add
sbb
lods
clc
repnz
nop
cld
jae
add
push
add
add
imul
clc
repnz
nop
cld
jae
and
pusha
call
jg
clc
repnz
nop
cld
jae
add
add
lcall
mov
xchg
ret
movsb
add
push
cwtl
push
add
rorl
nop
nop
cld
jae
arpl
mov
xor
clc
repnz
nop
cld
jae
add
jl
arpl
push
xor
cmp
xchg
xchg
ret
add
pop
add
push
add
adc
jne
nop
push
mov
leave
nop
jmp
and
call
jmp
xchg
nop
jmp
add
mov
and
repnz
nop
cld
jae
loop
loop
js
fcomps
call
push
mov
xchg
ret
add
sub
add
clc
repnz
nop
cld
jae
add
add
push
int
add
clc
repnz
nop
cld
jae
add
or
push
movsl
clc
repnz
nop
cld
jae
out
add
xlat
test
nop
push
mov
leave
nop
jmp
sub
add
pop
clc
repnz
nop
cld
jae
xchg
pusha
or
int
mov
nop
nop
cld
jae
mov
lds
cmc
push
push
mov
xchg
ret
add
add
add
sub
clc
repnz
nop
cld
jae
inc
test
inc
ret
clc
repnz
nop
cld
jae
add
or
add
add
xor
repnz
nop
cld
jae
cwtl
add
cwtl
pusha
xchg
psllq
push
mov
xchg
ret
add
add
test
dec
pop
push
mov
xchg
ret
pop
add
loop
add
add
out
mov
clc
repnz
nop
cld
jae
mov
popf
hlt
mov
add
nop
nop
cld
jae
push
and
push
addb
nop
nop
cld
jae
add
and
hlt
push
add
clc
repnz
nop
cld
jae
add
hlt
push
add
push
mov
xchg
ret
add
add
andb
push
clc
repnz
nop
cld
jae
add
inc
lcall
mov
push
mov
leave
nop
jmp
add
mulb
add
emms
subl
clc
repnz
nop
cld
jae
add
add
push
and
add
nop
cld
jae
add
add
clc
mov
sar
repnz
nop
cld
jae
add
add
clc
repnz
nop
cld
jae
arpl
add
call
mov
push
mov
xchg
ret
add
add
roll
repnz
nop
cld
jae
add
mov
xor
push
mov
xchg
ret
xchg
jbe
pusha
add
clc
repnz
nop
cld
jae
add
cli
test
and
nop
push
mov
leave
nop
jmp
add
pop
add
rorb
and
add
inc
add
mov
mov
sahf
lret
and
imul
dec
cmpl
add
add
int
int
stos
add
rolb
nop
push
mov
leave
nop
jmp
mov
arpl
scas
push
push
mov
xchg
ret
add
js
add
sub
and
fld1
push
mov
xchg
ret
add
add
sub
add
fwait
clc
repnz
nop
cld
jae
add
fiaddl
js
popf
xor
xchg
xor
nop
cld
jae
xor
adc
xchg
sub
add
push
mov
xchg
ret
test
mov
mov
clc
repnz
nop
cld
jae
add
add
fisubs
rolb
shlb
add
cmp
nop
nop
cld
jae
push
xor
repnz
nop
cld
jae
call
add
arpl
mov
xchg
ret
pop
add
js
push
add
imul
nop
push
mov
leave
nop
jmp
pop
jl
int
ficoml
in
leave
nop
jmp
hlt
add
popf
std
pusha
add
nop
nop
cld
jae
mov
call
push
mov
xchg
ret
movsb
jnp
add
jg
adc
repnz
nop
cld
jae
stos
inc
pusha
add
jbe
or
repnz
nop
cld
jae
dec
mov
cwtl
jl
xchg
add
mov
clc
repnz
nop
cld
jae
add
add
xchg
sbb
add
jge
pop
adc
add
mov
add
add
mov
nop
nop
cld
jae
adc
jl
add
add
pushf
adc
jmp
mov
xchg
ret
test
fiaddl
lcall
adc
xchg
add
int
call
pusha
movsb
and
mov
push
mov
xchg
ret
stos
setp
adc
mov
repnz
nop
cld
jae
pop
add
not
add
xor
add
hlt
add
pop
push
add
add
add
shld
loopne
repz
push
mov
xchg
ret
js
inc
add
add
inc
adc
repnz
nop
cld
jae
add
add
add
mov
popa
clc
repnz
nop
cld
jae
adc
sub
add
add
mov
nop
nop
cld
jae
xchg
sbb
and
pop
js
and
mov
xchg
ret
add
add
add
mov
clc
repnz
nop
cld
jae
mov
and
add
rol
push
mov
xchg
ret
and
and
stos
lods
call
clc
repnz
nop
cld
jae
and
test
clc
repnz
nop
cld
jae
add
pop
jecxz
clc
repnz
nop
cld
jae
mov
sbb
xchg
imul
arpl
repnz
nop
cld
jae
add
js
leave
clc
repnz
nop
cld
jae
xor
push
add
mov
inc
cmp
test
movsb
add
repnz
nop
cld
jae
call
pop
push
clc
repnz
nop
cld
jae
sbb
pop
add
add
clc
xchg
mov
clc
repnz
nop
cld
jae
sub
and
movsb
jnp
sub
clc
repnz
nop
cld
jae
add
js
add
mov
pop
lods
mov
clc
repnz
nop
cld
jae
add
add
push
mov
jecxz
sti
clc
repnz
nop
cld
jae
rcll
add
adc
shlb
scas
add
clc
repnz
nop
cld
jae
sub
add
call
clc
repnz
nop
cld
jae
xor
and
lret
pop
push
mov
xchg
ret
jbe
add
cmp
add
clc
repnz
nop
cld
jae
cmp
fiaddl
int
pop
jae
repnz
nop
cld
jae
add
int
mov
loopne
xlat
mov
push
mov
xchg
ret
test
cwtl
lcall
jnp
clc
repnz
nop
cld
jae
std
pop
dec
sbb
std
add
js
std
add
push
mov
xchg
ret
add
push
test
mov
rep
push
mov
xchg
ret
add
movsb
testb
sub
shr
enter
nop
nop
cld
jae
add
add
push
and
sub
aad
clc
repnz
nop
cld
jae
pop
add
shr
jl
push
xchg
int
jge
clc
repnz
nop
cld
jae
add
mov
push
nop
push
mov
leave
nop
jmp
push
mov
jl
pop
inc
add
jo
nop
push
mov
leave
nop
jmp
js
add
add
fildl
clc
clc
repnz
nop
cld
jae
dec
add
cmp
out
outsl
push
nop
push
mov
leave
nop
jmp
push
xchg
call
push
ja
clc
repnz
nop
cld
jae
testb
negb
and
les
xor
adcl
repnz
nop
cld
jae
cwtl
add
pop
and
push
mov
leave
nop
jmp
movsb
cwtl
add
push
add
and
loopne
aas
pop
clc
repnz
nop
cld
jae
add
pop
stos
sbb
add
xor
add
nop
jmp
add
add
add
add
nop
jmp
popf
pusha
dec
mov
nop
push
mov
leave
nop
jmp
add
add
add
nop
cld
jae
add
push
pop
jl
add
pop
dec
cwtl
enter
repnz
nop
cld
jae
call
add
nop
nop
cld
jae
jbe
push
xchg
or
rep
clc
repnz
nop
cld
jae
add
pop
add
js
push
nop
push
mov
leave
nop
jmp
add
xor
insb
pop
mov
clc
repnz
nop
cld
jae
add
in
jne
clc
repnz
nop
cld
jae
add
mov
aad
pop
cmp
mov
xchg
ret
jl
add
enter
add
shlb
add
dec
add
arpl
add
jne
mov
nop
nop
cld
jae
dec
add
add
inc
add
push
mov
xchg
ret
mov
add
leave
push
push
mov
xchg
ret
movsb
add
jnp
mov
ror
mov
inc
dec
fimuls
js
nop
push
mov
leave
nop
jmp
jl
popf
add
or
cmc
je
clc
repnz
nop
cld
jae
lds
mov
mov
leave
nop
jmp
pusha
add
xchg
add
add
enter
sar
repnz
nop
cld
jae
add
loop
mov
push
mov
xchg
ret
add
testb
andb
clc
repnz
nop
cld
jae
int
add
enter
es
jecxz
repnz
nop
cld
jae
add
dec
call
mov
clc
repnz
nop
cld
jae
add
pop
call
loop
push
mov
leave
nop
jmp
pop
add
push
pusha
inc
and
mov
leave
nop
jmp
mulb
push
fistpl
clc
repnz
nop
cld
jae
js
add
pop
cli
jne
push
mov
xchg
ret
and
sldt
push
add
push
mov
leave
nop
jmp
add
push
add
sbb
scas
addb
clc
repnz
nop
cld
jae
stos
dec
cwtl
call
xchg
jl
clc
repnz
nop
cld
jae
inc
add
bound
push
cmp
nop
push
mov
leave
nop
jmp
add
push
add
popf
jp
call
nop
push
mov
leave
nop
jmp
add
cvtps2pd
addb
repnz
nop
cld
jae
sub
js
jne
nop
push
mov
leave
nop
jmp
push
inc
add
repnz
nop
cld
jae
pop
add
movsb
mov
repnz
nop
cld
jae
hlt
adc
mov
ds
es
jno
add
clc
repnz
nop
cld
jae
dec
jbe
xchg
add
ret
pusha
arpl
jg
clc
repnz
nop
cld
jae
add
add
add
push
incl
mov
mov
jl
mov
ss
loope
push
sub
xor
and
add
add
sarb
repnz
nop
cld
jae
pusha
pop
mov
add
repnz
nop
cld
jae
add
mov
adc
je
sub
sbb
and
mov
push
testb
push
inc
shl
clc
repnz
nop
cld
jae
inc
mov
in
cmpw
nop
push
mov
leave
nop
jmp
int
add
andb
test
mov
xchg
ret
call
add
push
and
sarb
nop
push
mov
leave
nop
jmp
pop
dec
popf
mov
clc
repnz
nop
cld
jae
dec
pop
or
and
fwait
clc
repnz
nop
cld
jae
add
push
add
push
add
repnz
nop
cld
jae
mov
inc
mov
push
mov
xchg
ret
push
add
add
mov
mov
xchg
ret
movsb
lcall
rcll
stc
jle
add
add
add
add
repnz
nop
cld
jae
int
hlt
testb
jbe
cmp
je
clc
repnz
nop
cld
jae
add
add
ljmp
jae
add
pop
dec
push
mov
xchg
ret
stos
add
sbb
inc
add
jmp
nop
push
mov
leave
nop
jmp
arpl
mov
mov
mov
jbe
mov
xor
repnz
nop
cld
jae
int
push
add
test
add
nop
jmp
test
cmp
rolb
sub
and
test
add
push
and
add
clc
repnz
nop
cld
jae
push
add
push
add
dec
shlb
add
and
push
mov
xchg
ret
push
add
add
mov
clc
repnz
nop
cld
jae
add
add
add
sti
mov
clc
repnz
nop
cld
jae
stos
add
sbb
mov
loopne,pn
cmp
repnz
nop
cld
jae
rcrb
add
fstpt
clc
repnz
nop
cld
jae
mov
add
dec
les
add
clc
repnz
nop
cld
jae
cwtl
call
test
inc
rcll
repnz
nop
cld
jae
add
add
add
mov
clc
repnz
nop
cld
jae
jnp
call
pop
push
mov
xchg
ret
xchg
add
loop
adc
mov
clc
repnz
nop
cld
jae
hlt
add
add
or
nop
nop
cld
jae
push
pop
dec
inc
inc
pop
add
clc
repnz
nop
cld
jae
and
add
push
xor
andb
out
ret
fiadds
inc
push
adc
clc
repnz
nop
cld
jae
test
ljmp
shrb
xchg
or
add
add
rolb
inc
sbb
ljmp
repnz
nop
cld
jae
add
and
out
add
call
nop
nop
cld
jae
mov
pusha
movsb
add
mov
xchg
ret
add
negb
push
add
repnz
nop
cld
jae
add
pusha
lcall
inc
addr16
nop
push
mov
leave
nop
jmp
pop
mov
out
movsb
sbb
dec
clc
repnz
nop
cld
jae
push
sbb
add
test
add
inc
dec
mov
push
mov
xchg
ret
testb
test
int
add
nop
nop
cld
jae
add
add
xchg
sub
add
inc
mov
xchg
adc
add
repnz
nop
cld
jae
add
js
adc
mov
clc
repnz
nop
cld
jae
arpl
movsb
in
add
imul
js
add
add
test
repnz
nop
cld
jae
jnp
mov
rorb
repnz
nop
cld
jae
push
add
mov
xor
push
mov
xchg
ret
test
test
add
add
out
push
push
mov
xchg
ret
add
add
lds
add
add
mov
clc
repnz
nop
cld
jae
mov
add
add
mov
nop
push
mov
leave
nop
jmp
add
add
mov
xchg
ret
push
loop
add
add
push
mov
leave
nop
jmp
add
push
sbb
js
int3
bound
add
clc
repnz
nop
cld
jae
adc
js
push
add
popl
jb
clc
repnz
nop
cld
jae
add
and
cmp
clc
repnz
nop
cld
jae
jl
push
fstps
repnz
nop
cld
jae
add
and
push
or
add
add
xor
nop
nop
cld
jae
add
test
out
pusha
lock
push
mov
leave
nop
jmp
push
add
push
shlb
sar
nop
nop
cld
jae
add
add
push
add
jp
into
insb
sahf
nop
stos
mov
mov
mov
xchg
ret
add
dec
mov
nop
push
mov
leave
nop
jmp
add
push
cmp
mov
leave
nop
jmp
lcall
push
leave
jne
clc
repnz
nop
cld
jae
js
test
popa
clc
repnz
nop
cld
jae
adc
hlt
add
add
shr
pushl
nop
push
mov
leave
nop
jmp
add
jo,pt
ret
cmpl
nop
push
mov
leave
nop
jmp
test
inc
ficompl
xor
call
inc
add
inc
add
popf
cwtl
add
jmp
js
inc
add
add
or
add
sldt
mov
mov
leave
nop
jmp
add
add
add
cli
sbb
xchg
pushl
push
mov
xchg
ret
negb
hlt
cmp
adc
repnz
nop
cld
jae
add
add
sti
pop
clc
repnz
nop
cld
jae
add
arpl
add
testb
xor
clc
repnz
nop
cld
jae
dec
xor
add
push
mov
xchg
ret
jl
sarl
add
mov
enter
in
leave
nop
jmp
inc
add
add
nop
aas
push
mov
lahf
mov
add
lcall
add
gs
nop
push
mov
leave
nop
jmp
push
adc
push
adc
pop
xchg
scas
stos
clc
repnz
nop
cld
jae
add
or
xchg
pop
add
push
push
nop
push
mov
leave
nop
jmp
add
mov
xchg
xor
and
pop
add
clc
repnz
nop
cld
jae
xor
push
cmp
add
data16
repnz
nop
cld
jae
add
add
cmp
mov
and
push
clc
repnz
nop
cld
jae
push
push
push
int
sbb
pop
mov
clc
repnz
nop
cld
jae
add
or
push
add
mov
nop
push
mov
leave
nop
jmp
and
call
and
add
jnp
add
xchg
push
fcmovu
xor
clc
repnz
nop
cld
jae
mov
mov
push
and
dec
cld
jbe
lods
add
loop
andb
inc
push
mov
xchg
ret
add
add
add
dec
cmp
mov
xchg
ret
add
hlt
mov
mov
call
clc
repnz
nop
cld
jae
mov
push
clc
repnz
nop
cld
jae
testb
and
mov
mov
xchg
ret
add
sbb
add
push
jbe
aaa
shr
clc
repnz
nop
cld
jae
jbe
push
popf
js
xchg
call
repnz
nop
cld
jae
xor
cwtl
add
xchg
clc
repnz
nop
cld
jae
pop
call
out
lea
push
mov
xchg
ret
mov
test
movb
nop
nop
cld
jae
dec
push
test
add
add
clc
repnz
nop
cld
jae
add
add
add
shrb
mov
nop
push
mov
leave
nop
jmp
dec
xor
mov
movsb
mov
in
loope
mov
out
mov
and
add
clc
repnz
nop
cld
jae
verr
add
add
repnz
nop
cld
jae
mov
or
push
nop
push
mov
leave
nop
jmp
push
inc
add
inc
rolb
add
inc
xchg
leave
mov
push
mov
xchg
ret
mov
add
test
add
call
inc
add
or
sub
xor
xchg
rorb
pop
add
push
mov
xchg
ret
push
mov
add
nop
cld
jae
push
jl
add
mov
js
dec
and
popa
nop
push
mov
leave
nop
jmp
test
add
lcall
xor
inc
lock
repnz
nop
cld
jae
sub
test
repnz
nop
cld
jae
add
push
verw
idivb
ja
clc
repnz
nop
cld
jae
or
dec
icebp
lea
nop
push
mov
leave
nop
jmp
js
mov
add
in
clc
repnz
nop
cld
jae
mov
rol
mov
push
mov
xchg
ret
inc
or
add
add
icebp
clc
repnz
nop
cld
jae
pop
out
add
call
cld
jae
add
call
xchg
iret
add
clc
repnz
nop
cld
jae
add
sub
or
test
push
mov
xchg
ret
lcall
dec
std
pop
clc
repnz
nop
cld
jae
pusha
mov
add
jl
mov
lods
push
clc
repnz
nop
cld
jae
add
mov
repnz
je
nop
push
mov
leave
nop
jmp
add
cmp
add
repnz
nop
cld
jae
add
sub
mov
xchg
ret
push
call
push
dec
cld
push
mov
xchg
ret
add
add
jp
add
and
nop
push
mov
leave
nop
jmp
add
lods
rolb
repnz
nop
cld
jae
roll
pop
sbb
test
js
fistpl
nop
push
mov
leave
nop
jmp
arpl
add
mov
mov
inc
fcoml
clc
repnz
nop
cld
jae
out
pusha
add
mov
loop
add
xlat
lea
nop
push
mov
leave
nop
jmp
add
sub
adc
add
nop
push
mov
leave
nop
jmp
nopl
add
xchg
mov
inc
adc
cltd
inc
add
push
push
inc
mov
decl
clc
repnz
nop
cld
jae
add
dec
add
dec
jmp
or
add
jbe
add
and
push
ret
push
push
mov
xchg
ret
call
add
add
rclb
nop
jmp
push
loop
add
call
nop
nop
cld
jae
add
add
add
add
lret
push
clc
repnz
nop
cld
jae
dec
add
rcrb
xor
out
mov
push
mov
xchg
ret
js
add
call
cmp
mov
leave
nop
jmp
jbe
add
stc
add
push
mov
xchg
ret
add
add
mov
mov
nop
nop
cld
jae
hlt
add
push
add
pop
add
rolb
loopne
mov
xchg
ret
sub
shrb
add
add
add
lds
out
mov
mov
rcl
call
leave
nop
jmp
inc
sub
pop
add
nop
fnstenv
sar
nop
nop
cld
jae
mov
add
arpl
adc
repnz
nop
cld
jae
mov
add
call
stos
jge
add
call
movsb
add
aam
sbb
inc
and
clc
repnz
nop
cld
jae
add
mov
add
push
push
mov
xchg
ret
dec
adc
arpl
add
sub
push
push
mov
xchg
ret
pop
ficoml
popf
xchg
popf
add
push
pusha
loopne
movzwl
push
mov
xchg
ret
call
cwtl
or
clc
repnz
nop
cld
jae
add
xor
xchg
inc
add
test
and
push
add
rorl
mov
leave
nop
jmp
add
push
roll
sarb
mov
xchg
ret
test
popf
sub
fiaddl
add
jb
nop
push
mov
leave
nop
jmp
inc
xor
inc
jge
push
mov
xchg
ret
push
xchg
add
add
add
repnz
nop
cld
jae
test
mov
jbe
clc
repnz
nop
cld
jae
add
mov
add
addl
xchg
ret
add
add
data16
clc
repnz
nop
cld
jae
call
cmp
pop
mov
imul
nop
nop
cld
jae
rcrl
mov
nop
push
mov
leave
nop
jmp
add
inc
pop
mov
mov
fbstp
clc
repnz
nop
cld
jae
loop
add
add
add
add
nop
jmp
push
cmp
mov
push
mov
xchg
ret
add
mov
and
mov
xchg
ret
test
shll
add
outsl
add
clc
repnz
nop
cld
jae
cpuid
push
js
push
add
mov
outsb
out
out
add
add
add
add
pop
pop
nop
push
mov
leave
nop
jmp
add
paddw
add
arpl
xchg
and
mov
jg
nop
push
mov
leave
nop
jmp
dec
add
loop
add
clc
repnz
nop
cld
jae
add
and
add
aaa
dec
push
mov
xchg
ret
push
lcall
call
xor
in
leave
nop
jmp
add
pop
jne
clc
repnz
nop
cld
jae
inc
call
sub
inc
cmp
push
mov
leave
nop
jmp
or
mov
and
add
push
mov
xchg
ret
popf
push
js
pop
mov
add
add
nop
push
mov
leave
nop
jmp
xchg
add
xor
clc
repnz
nop
cld
jae
add
loop
xlat
push
push
mov
xchg
ret
add
rolb
push
loopne
test
nop
push
mov
leave
nop
jmp
push
add
add
lcall
addr16
add
add
and
shll
dec
inc
or
out
clc
repnz
nop
cld
jae
testb
and
add
mov
repnz
nop
cld
jae
add
js
add
and
loopne
mov
clc
repnz
nop
cld
jae
push
add
or
push
inc
push
dec
clc
repnz
nop
cld
jae
call
add
nop
push
mov
leave
nop
jmp
add
add
out
mov
add
repnz
nop
cld
jae
add
inc
clc
repnz
nop
cld
jae
add
add
add
test
jbe
clc
repnz
nop
cld
jae
mov
jl
jne
clc
repnz
nop
cld
jae
add
add
dec
nop
push
mov
leave
nop
jmp
add
add
add
call
repnz
nop
cld
jae
add
add
mov
cld
repnz
jmp
add
push
add
add
sbb
dec
sbb
add
repnz
nop
cld
jae
inc
add
jmp
repnz
nop
cld
jae
add
mov
clc
repnz
nop
cld
jae
inc
std
push
xchg
cltd
mov
push
mov
xchg
ret
add
add
dec
add
push
nop
push
mov
leave
nop
jmp
add
add
add
nop
nop
cld
jae
add
hlt
jbe
push
int3
ja
clc
repnz
nop
cld
jae
std
mov
sub
jbe
add
jmp
clc
repnz
nop
cld
jae
dec
add
jns
inc
pop
add
clc
repnz
nop
cld
jae
loop
add
insl
jne
nop
push
mov
leave
nop
jmp
add
mov
call
nop
push
mov
leave
nop
jmp
sldt
push
aas
push
push
mov
xchg
ret
add
add
add
jl
mul
pop
clc
repnz
nop
cld
jae
add
js
out
mov
xchg
inc
add
add
add
push
add
pusha
mov
mov
xchg
ret
add
movsb
mov
out
jne
clc
repnz
nop
cld
jae
push
push
add
inc
dec
mov
clc
repnz
nop
cld
jae
dec
js
inc
add
add
add
nop
nop
cld
jae
movsb
dec
mov
clc
repnz
nop
cld
jae
sub
out
xchg
add
arpl
clc
repnz
nop
cld
jae
add
inc
movsb
inc
js
push
clc
repnz
nop
cld
jae
sub
add
push
add
push
mov
leave
nop
jmp
lds
or
inc
or
push
nop
push
mov
leave
nop
jmp
or
xchg
arpl
xchg
jecxz
sar
repnz
nop
cld
jae
mov
add
add
add
fcoml
in
leave
nop
jmp
lds
hlt
add
add
mov
clc
repnz
nop
cld
jae
add
xchg
popf
popf
add
mov
repnz
nop
cld
jae
add
push
push
add
sub
clc
repnz
nop
cld
jae
mov
pop
add
inc
and
push
mov
leave
nop
jmp
popf
add
add
idiv
incl
arpl
ltr
jnp
test
push
cmpsb
inc
adcb
push
lods
xchg
push
mov
xchg
ret
inc
add
out
add
and
clc
repnz
nop
cld
jae
add
jnp
sub
jnp
add
push
mov
xchg
ret
arpl
add
add
pop
mov
clc
repnz
nop
cld
jae
add
clc
mov
je
nop
push
mov
leave
nop
jmp
push
stos
hlt
and
loopne
xchg
clc
repnz
nop
cld
jae
pusha
add
add
js
add
cmp
nop
push
mov
leave
nop
jmp
fiaddl
test
subb
and
repnz
nop
cld
jae
pop
add
add
pop
scas
and
push
addl
leave
nop
jmp
add
add
jg
popl
clc
repnz
nop
cld
jae
push
add
add
push
sbb
nop
nop
cld
jae
add
pop
xor
add
movzwl
clc
repnz
nop
cld
jae
pop
arpl
stos
add
or
adc
push
or
repnz
nop
cld
jae
inc
push
add
add
cld
jl
or
repnz
nop
cld
jae
add
inc
orb
nop
nop
cld
jae
add
test
lcall
repnz
nop
cld
jae
push
cwtl
js
js
mov
clc
repnz
nop
cld
jae
mov
mov
sub
cmp
xor
clc
repnz
nop
cld
jae
add
push
add
add
and
clc
repnz
nop
cld
jae
test
add
sbb
xlat
call
clc
repnz
nop
cld
jae
jbe
sbb
lds
clc
repnz
nop
cld
jae
loop
push
pop
insl
fwait
push
mov
xchg
ret
jbe
add
or
nop
nop
cld
jae
cmp
push
loopne
push
cld
out
je
add
clc
repnz
nop
cld
jae
test
add
push
mov
xchg
ret
mov
add
or
jo
stos
clc
repnz
nop
cld
jae
js
push
movsb
dec
add
loop
pop
push
mov
push
add
dec
icebp
cwtl
xchg
xor
call
je
dec
mov
push
clc
repnz
nop
cld
jae
jnp
push
call
push
clc
repnz
nop
cld
jae
test
loop
pusha
add
lcall
clc
repnz
nop
cld
jae
add
add
push
clc
repnz
nop
cld
jae
add
or
push
rep
push
mov
xchg
ret
add
and
push
nop
push
mov
leave
nop
jmp
add
add
test
call
repnz
nop
cld
jae
pusha
add
add
mov
clc
repnz
nop
cld
jae
add
add
js
test
nop
push
mov
leave
nop
jmp
ficompl
jmp
nop
cld
jae
add
inc
add
and
push
mov
xchg
ret
add
push
sbb
mov
loopne
xor
nop
cld
jae
pop
add
add
add
out
or
repnz
nop
cld
jae
sldt
push
push
call
and
repnz
nop
cld
jae
add
movsb
cmp
mov
nop
cld
jae
xchg
int
add
add
clc
repnz
nop
cld
jae
mov
pop
pusha
jne
dec
push
clc
repnz
nop
cld
jae
mov
add
stos
arpl
sbb
xor
mov
clc
repnz
nop
cld
jae
push
add
in
or
arpl
add
repnz
nop
cld
jae
dec
negb
push
mov
xchg
ret
inc
jl
std
sldt
or
rclb
mov
clc
repnz
nop
cld
jae
call
jmp
mov
xchg
ret
mov
add
mov
clc
repnz
nop
cld
jae
testb
cld
sahf
xor
add
clc
repnz
nop
cld
jae
add
stos
add
ljmp
test
xchg
ret
fiaddl
add
int
add
add
clc
repnz
nop
cld
jae
add
cmp
add
pop
xor
nop
nop
cld
jae
xchg
push
add
push
xchg
mov
repnz
nop
cld
jae
add
dec
inc
lds
add
pop
in
fistpl
inc
add
add
add
add
movsb
addl
jmp
xchg
add
add
add
push
push
mov
xchg
ret
add
jnp
rolb
push
mov
fists
nop
jmp
inc
cmp
aaa
mov
push
mov
xchg
ret
add
add
add
sub
jo
jmp
lcall
add
add
sbb
cltd
xchg
clc
repnz
nop
cld
jae
add
mov
push
jae
sbb
cmp
nop
jmp
add
add
inc
add
call
nop
jmp
push
add
popa
mov
clc
repnz
nop
cld
jae
add
add
clc
stc
fistpl
push
mov
xchg
ret
add
jl
add
cmp
call
nop
jmp
inc
pop
inc
mov
mov
popf
cmpsb
jnp
lahf
enter
push
ja
fbld
pop
jne
or
mov
orb
add
sbb
outsl
mov
adc
xchg
dec
mov
loop
add
ror
cwtl
push
into
mov
nop
ficoml
fisubs
sbb
and
xchg
xlat
jmp
das
loope
sub
push
mov
mov
rclb
cmp
rol
pop
in
pause
jl,pt
sbb
out
aam
leave
pop
sub
adc
jmp
rcrl
loopne
negb
in
mov
jo
add
mov
loopne
test
orb
jg
fcomps
lea
ljmp
xor
and
add
in
data16
popaw
xchg
lret
jecxz
cltd
mov
outsb
gs
jns
jb
fbld
test
lock
push
loopne
mov
and
rolb
andb
shlb
push
sti
fnstcw
test
loopne
inc
pusha
out
inc
sbb
mov
mov
push
andb
in
les
add
pusha
int
lock
shlb
pop
mov
pusha
mov
addb
subl
jbe
and
push
jge
in
movl
pop
sbb
shlb
loopne
pop
pop
mov
rcll
imul
xchg
pusha
add
push
icebp
pop
push
aaa
sub
mov
pusha
add
icebp
dec
pop
push
adc
mov
movsl
sub
pusha
adc
lahf
add
xor
inc
rcrb
nop
std
ret
lcall
clc
stos
mov
testb
add
fists
inc
mov
lcall
lret
das
leave
adc
xchg
pusha
or
leave
dec
sbb
pusha
loopne
outsb
xchg
jle
dec
fnsave
shr
dec
pop
push
add
insb
or
push
inc
inc
jp
loopne
cltd
mov
pop
xlat
adc
and
jo
mov
xchg
xor
fstpl
adc
inc
int3
push
add
sbb
and
enter
adc
pop
outsb
adc
fwait
sahf
ja
icebp
loop
jl
je
in
xchg
mov
sub
inc
cs
jp
pop
dec
into
inc
adc
add
mov
adc
andb
adc
jns
sub
add
call
loopne
test
bound
addb
loop
inc
fildll
inc
iret
mov
sub
addb
ljmp
repnz
loopne
daa
mov
add
cmc
or
mov
out
sahf
stc
addr16
pusha
pop
add
inc
pop
je
shl
add
or
aad
xchg
sub
add
sbb
push
jecxz
loopne
and
sar
shl
and
add
mov
push
iret
fists
mov
cmp
xchg
sub
sbbb
mov
outsb
gs
shlb
push
andb
mov
shrl
inc
out
and
mov
jnp
cld
movsb
pusha
sbbb
or
cltd
sub
mov
inc
cmpsb
mov
and
outsb
cli
dec
add
loopne
pop
test
inc
nop
mov
add
test
xchg
shrb
xorl
inc
rcr
pusha
add
in
mov
in
fsubrp
adc
out
enter
cmp
clc
fwait
push
incl
pusha
idivl
push
xchg
mov
xchg
std
or
and
leave
fs
push
mov
pop
push
ret
xor
adc
cmpsl
std
fcom
mov
std
mov
les
add
ret
sbb
das
jno
mov
les
gs
jge
sub
addr16
jae
ffree
loopne
inc
icebp
fcoml
out
pop
xchg
push
pop
xchg
jns
push
pusha
orb
sbb
or
adc
and
or
mov
push
or
fsubrp
xor
inc
shl
pop
lods
andb
and
mov
nop
cltd
icebp
scas
dec
sti
je
leave
sti
js
loopne
and
inc
and
stos
rolb
loopne
add
adcb
jmp
xchg
pop
test
and
imul
jbe
into
popf
sub
out
shll
jl
imul
ljmp
or
idivb
or
out
into
sub
add
push
repnz
adcl
ret
lahf
cmc
xchg
sbb
clc
and
pusha
rcl
add
mov
pop
je
int
cmp
xchg
push
and
outsl
iret
sub
inc
ret
jp
add
pushf
push
add
push
in
les
and
ror
mov
jmp
fidivs
sub
fs
outsl
out
push
push
adc
gs
addb
sbb
xor
mov
cmc
lea
and
and
dec
or
test
cmp
shll
mov
xchg
xor
and
loopne
je
mov
gs
mov
sbb
mov
addb
mov
pop
bound
cmp
insl
stos
leave
ljmp
int3
push
mov
jo
cmp
push
cmp
add
mov
in
mov
xor
lods
movsb
and
jb
lods
andb
nop
mov
mov
add
mov
xchg
lret
dec
out
ret
sbb
inc
enter
inc
and
sub
rclb
shll
std
pop
add
and
add
and
mov
and
pop
cltd
and
xchg
sahf
pop
shrb
mov
xchg
or
orl
mull
lahf
ror
imul
aad
mov
pusha
cmpsb
add
mov
mov
xchg
ljmp
inc
insb
mov
shl
pop
out
sub
pusha
in
adcl
mov
xchg
cmp
cmp
pop
sub
inc
loopne
lea
and
inc
sub
lods
into
fmull
pusha
cmp
pop
push
cli
jbe
fldl
stc
xor
mov
pusha
loopne
pop
pusha
mov
inc
mov
xorb
mov
xchg
aad
iret
rcll
fisubrs
cmpsl
fwait
pop
insb
xor
mov
mov
inc
push
addr16
cltd
sbb
or
shr
and
lea
mov
add
add
mov
in
push
andb
repz
fs
ds
mov
mov
lock
push
sahf
adc
rolb
and
add
sahf
cld
mov
and
add
rorb
add
shrb
or
add
jns
xchg
cmpsl
loope
add
cwtl
imul
sbb
loopne
pop
cmp
xchg
xor
push
cmpl
fstl
leave
andb
test
pusha
pop
inc
pop
jmp
mov
mov
sahf
cwtl
adc
and
or
or
outsl
fisubrl
and
sub
xchg
outsb
dec
xchg
add
rcrl
loop
dec
mulb
pusha
and
dec
pop
sbb
lock
jnp
jmp
mov
dec
jecxz
xchg
cmp
movsl
mov
in
xchg
push
dec
mov
jle
imul
add
add
cltd
enter
aaa
leave
mov
mov
loop
out
sub
loopne
mov
adc
add
lock
rcrl
push
mov
dec
out
dec
out
lea
in
ja
mov
stos
add
mov
pop
pusha
imull
adc
sarl
or
jnp
fldl
ficoml
sbb
add
mov
mov
pop
cmp
orb
pop
push
enter
insl
push
jnp
push
xchg
cmc
outsb
lret
xor
add
sbb
stos
addb
mov
fcomi
insb
push
pop
push
outsb
cmp
shl
aaa
push
pop
insl
jge
addb
sbb
inc
cld
xor
je
popf
andb
fisubs
mov
leave
enter
fldcw
cmp
aad
and
int
jne
adcl
mov
pushl
dec
aas
jg
add
addb
and
sub
pusha
sarb
daa
add
int
into
test
rol
pop
mov
and
out
push
testl
sbb
lret
shlb
add
pop
les
jge
int
pop
rcrl
cltd
sbb
lcall
pusha
mov
into
mov
jge
pusha
rclb
and
push
push
arpl
int3
and
push
cld
inc
xor
push
loop
int
mov
int
test
mov
int3
fcompl
pusha
add
sarb
outsb
andb
pop
insb
inc
addb
adc
cmpsb
add
xchg
pop
ljmp
sub
sub
jno
or
add
mov
rol
and
pusha
inc
rcr
in
orl
test
shl
fidivrs
push
add
mov
adcb
xchg
adc
mov
push
and
scas
inc
pop
mov
das
lea
dec
lock
andb
int
in
fimuls
lret
movsl
rol
dec
pop
sub
xor
rorl
and
inc
ficomps
xor
add
and
loopne
push
push
paddb
xchg
cmc
sbb
sbb
inc
mov
aam
or
push
mov
loopne
sbb
add
sbb
cmp
push
add
lahf
pop
jns
dec
or
insb
or
pusha
adc
pushf
jb
mov
out
or
mov
push
loopne
pop
add
mov
inc
pusha
pop
xor
sub
rolb
mov
mov
xor
in
rorl
add
cld
dec
cmpsb
andb
mov
sub
hlt
les
rolb
inc
loopne
icebp
xchg
imulb
xchg
inc
mov
pop
fmull
insl
lods
push
xor
lea
mov
mov
loopne
das
lods
shl
sbb
mov
inc
rorl
mov
imul
shrb
test
mov
xor
daa
ss
pusha
sub
pusha
xor
add
cmpb
xchg
xchg
sti
in
shll
xchg
sub
outsb
imul
in
pop
pop
push
or
pusha
adc
adc
push
cmp
and
aam
sbb
mov
mov
mov
rolb
mov
pusha
adc
mov
shl
aam
cltd
inc
in
pusha
and
test
add
inc
add
shlb
sub
jp
xchg
cld
imul
in
loopne
push
fidivs
inc
push
push
aad
lods
and
sbb
mov
push
cld
in
nop
sti
jno
pop
loop
rolb
mov
popa
dec
xor
fwait
dec
push
add
andb
mov
in
movsb
mov
pusha
add
mov
cmp
xor
mov
push
test
jecxz
and
inc
or
mov
lcall
inc
and
int
cmp
push
inc
shlb
and
and
ret
mov
mov
jecxz
in
imul
jmp
loopne
sbb
in
scas
mov
addb
jp
push
dec
jns
pusha
arpl
pop
add
cmpl
adc
loopne
sub
rol
fiadds
jecxz
mov
sbb
pusha
jg
ss
push
out
add
add
andb
sub
lret
shlb
stc
cltd
imul
and
add
inc
mov
jmp
pop
in
dec
adc
andb
shlb
mov
pop
cmp
not
div
sbb
push
hlt
jns
inc
mov
inc
pop
jnp
add
dec
pop
scas
inc
adc
cwtl
dec
dec
push
dec
push
add
imul
fsts
pop
popf
sarb
and
mov
jg
pusha
add
sbb
xor
ret
and
ror
or
mov
ror
mov
sbb
ds
pop
popf
popf
adc
pop
push
or
push
loopne
pop
mov
mov
rolb
inc
mov
add
movsl
movsb
loopne
sldt
imul
sbb
icebp
dec
notl
imul
out
jge
sbb
lods
lock
popf
imul
icebp
sahf
stos
ja
aas
mov
mov
sbb
pusha
loopne
js
jg
push
loopne
mov
lahf
hlt
jecxz
aad
xor
les
dec
loopne
lods
jno
loopne
call
push
stos
and
fnsetpm(287
push
stc
arpl
rcll
push
sbb
xchg
jle
cmp
add
xchg
aas
lcall
mov
call
repz
jecxz
pop
push
icebp
cmpsb
mov
and
shr
jge
les
lret
jmp
and
pop
mov
jmp
iret
mov
loopne
add
push
or
out
cmp
xor
push
add
sarl
pop
xchg
pop
and
inc
int
and
andb
fadds
andb
pusha
and
scas
inc
add
jnp
iret
jae
push
imul
les
fidivl
loopne
xchg
rcrl
inc
loopne
aas
negl
sbb
stos
mov
xor
aam
fsubl
inc
lret
fwait
scas
and
cmp
pop
sbb
out
cwtl
mov
popf
sbb
cltd
mov
pusha
inc
and
lahf
addr16
mov
dec
cmpsl
jp
mov
mov
aad
pop
popf
inc
jne
xchg
loopne
adc
lret
xchg
pop
decl
rolb
add
imul
push
shrl
mov
mov
xchg
int3
fwait
jle
and
into
testb
pusha
loopne
mov
pusha
xchg
js
scas
xchg
iret
ss
jmp
inc
cli
xor
into
inc
bound
andb
adc
in
leave
cmc
ds
mov
and
mov
sbb
rolb
sub
shlb
outsb
repz
fdivl
mov
pusha
mov
lret
push
enter
xchg
or
mov
mov
jno
inc
fmul
in
pop
cld
out
and
shl
idivb
lret
dec
or
inc
loopne,pn
bound
mov
and
and
inc
xorl
lea
ljmp
dec
dec
movsb
loopne
adc
and
loope
sub
pusha
rcrl
push
inc
or
rcrl
and
adc
and
inc
push
adc
sbb
pop
call
call
mov
rcl
enter
rolb
add
sarl
psrlq
cld
scas
shlb
das
or
dec
sub
or
dec
shlb
add
les
inc
sarb
je
lcall
loopne
push
rorl
pop
ja
sbb
and
inc
lret
scas
push
mov
or
sarb
mov
mov
lods
addr16
dec
addb
loopne
lods
add
sub
or
sbb
stc
cmp
inc
jp
stc
dec
dec
scas
pusha
mov
mov
jae
shrb
icebp
cli
ja
add
pusha
jbe
cmp
pusha
add
pop
xchg
test
rorb
sbb
dec
push
loopne
push
subl
in
and
push
stc
xor
mov
jns
sub
popa
nop
add
inc
pusha
jecxz
es
rolb
inc
aam
mov
and
xor
mov
push
aaa
outsl
jbe
pusha
mov
mov
cmp
adc
push
pop
lret
push
jne
mov
inc
mov
mov
shr
mov
and
add
loopne
dec
outsb
or
and
dec
xor
lds
cltd
or
pusha
fldcw
and
outsb
dec
xchg
ja
inc
mov
fs
lret
or
and
add
out
add
and
sub
mov
mov
arpl
add
shlb
fistl
in
and
sbbb
cmpb
mov
dec
mov
mov
lahf
das
out
inc
push
xor
lcall
out
mov
inc
jo
and
jmp
add
xor
cmpsb
and
xor
stos
rol
cmp
or
shr
test
pusha
add
dec
dec
lret
loopne
loopne
push
adc
hlt
jle
cmpl
pusha
inc
data16
andb
adc
stos
and
mov
fnstenv
mov
sbb
sub
lret
cmp
add
dec
dec
mov
ret
or
shlb
fcomps
pushl
aaa
int3
lods
xor
push
outsl
dec
cmp
sbb
dec
idivl
cmp
shld
mov
loopne
sbb
cltd
add
cmpb
ljmp
xor
adc
push
cmp
and
xorb
xchg
hlt
ss
and
movsl
push
pusha
pusha
mov
cmp
jne
bound
xchg
ljmp
shlb
out
fcomip
ljmp
faddl
ret
stos
repz
inc
leave
add
rclb
shl
and
test
pusha
and
pusha
add
add
subl
and
in
sbb
inc
movsl
mov
pop
xor
in
leave
add
inc
and
and
insb
aaa
pop
out
ret
jnp
add
dec
and
mov
fcompl
mov
or
loopne,pn
ret
dec
leave
sbb
mov
pop
hlt
mov
add
addr16
jnp
mov
push
fstl
or
enter
call
sub
aam
syscall
mov
inc
andb
ljmp
pop
loope
pop
add
and
enter
arpl
addr16
movsl
pop
inc
and
and
sbb
pop
ret
insb
call
jmp
loope
in
icebp
mov
shll
in
mull
insl
cmpsb
and
fldenv
addr16
jp
mov
push
loopne
dec
lret
aad
xchg
sbb
outsb
int
ljmp
fisubrs
and
andb
loopne
inc
fiadds
or
loopne
jge
add
pop
fwait
add
das
and
mov
mov
or
pop
push
xor
mov
mov
mov
and
cmp
call
push
faddl
mov
jge
pusha
loopne
mov
lea
aas
push
jg
inc
and
inc
nop
jbe
dec
mov
arpl
inc
pusha
je
xchg
addr16
ds
xchg
shlb
mov
inc
push
and
xor
ljmp
xchg
sbb
testl
inc
xchg
pop
push
test
mov
test
orb
aaa
test
inc
mov
outsl
mov
mov
inc
out
sub
pusha
mov
cmpsl
fdivl
cwtl
pop
mov
xchg
jge
jp
adc
nop
cs
and
mov
dec
push
sbb
mov
cmp
lcall
and
pop
frstor
sub
orl
sarl
addb
daa
adc
adc
or
and
push
insb
mov
popf
hlt
loop
inc
adc
addb
dec
sbb
add
and
addb
mov
movb
mov
inc
pop
sarl
stos
sti
xchg
inc
hlt
iret
data16
mov
inc
push
fldt
push
and
sub
inc
push
fdivl
inc
pusha
cmp
cmp
fcmovne
testb
mov
and
pop
filds
paddq
rorl
subl
and
or
add
add
jbe
mov
adc
push
jns
insl
push
arpl
push
cmp
mov
xchg
push
mov
cmpb
insb
sbb
jl
aaa
mov
or
dec
mov
lock
test
test
xorb
adcl
std
add
sahf
inc
pop
jnp
dec
push
and
and
jmp
fwait
js
shlb
inc
and
mov
fbstp
or
inc
and
add
mov
mov
mov
xrelease
repz
inc
daa
das
mov
cmp
push
push
inc
sbb
push
arpl
out
pusha
shlb
jle
repz
imull
add
mov
out
jnp
mov
sbb
mov
dec
cmp
inc
xchg
adc
inc
loopne
sbb
ret
mov
in
pushf
jecxz
inc
aaa
add
int3
inc
pop
movsb
mov
mov
dec
pop
adc
jecxz
push
pusha
add
jnp
and
adc
inc
repz
add
and
stos
and
ret
pop
das
mov
dec
and
inc
add
mov
and
add
popf
mov
pop
scas
repz
loop
cmp
repnz
jmp
ror
xchg
cmp
repnz
inc
inc
mov
cld
clc
insb
jnp
pop
xor
div
ljmp
xor
mov
sbb
test
out
outsb
stos
frstor
addb
js
outsl
or
std
scas
add
jnp
and
mov
ror
jg
aam
mov
fs
out
jb
pop
test
loopne
int
sti
dec
sahf
cltd
arpl
sbb
cmpsb
loopne
into
ret
dec
xchg
imul
jbe
aam
add
xor
lods
rolb
push
mov
mov
jns
out
pop
into
jno
pop
sub
cmp
hlt
ret
mov
cld
add
jno
sbb
movb
add
xchg
rcrb
fistps
push
dec
imul
loopne
fs
int
push
loopne
and
sarb
inc
loopne
pop
scas
jmp
pop
mov
push
andb
inc
mov
jge
add
leave
sbb
fsubr
and
das
bound
shr
adc
rol
fwait
insl
sbb
add
fsubl
jns
pop
mov
inc
dec
rclb
rorb
arpl
rcll
sbb
inc
mov
sbb
bound
mov
and
and
loopne
cmp
enter
lahf
mov
mov
cmp
test
and
sbb
movsb
loopne
lock
cld
adc
stc
std
pop
jge
cmc
ret
cmp
xchg
repnz
xor
pusha
inc
push
lret
je
xor
jecxz
fwait
mov
ret
subb
mov
push
jno
loop
pusha
inc
xor
clc
cmc
je
addb
fwait
pop
das
push
nop
in
xor
and
orb
add
and
notl
shrb
xchg
out
fsubs
add
ja
xchg
adc
loopne
push
lea
stos
add
repz
adc
adc
call
test
jmp
pushf
mov
push
mov
mov
cli
fnsave
add
icebp
sti
sub
aas
jno
stos
int
pusha
rolb
dec
xor
dec
or
into
out
iret
inc
jp
addl
inc
and
out
ret
pop
xor
cmp
mov
jae
lods
pusha
addb
sarl
pop
int
pop
imul
aaa
addb
dec
push
and
rclb
test
ret
add
jb
jb
dec
cmp
test
mov
popa
xor
sbb
frstor
mov
mov
sbb
loopne
pop
pop
mov
jl
lock
scas
pusha
and
mov
inc
movsb
pusha
sarb
and
add
xor
xorl
loopne
inc
daa
stos
and
and
xchg
jmp
loope
inc
movsb
mov
addb
xor
cmp
mov
inc
aas
lea
sbb
jmp
pusha
shlb
test
cwtl
dec
cmp
cmp
adc
jp
fs
fs
pusha
add
loopne
shlb
lods
add
or
jle
fdiv
fsubs
movsb
andb
scas
fisubl
stc
mov
pop
mov
dec
out
pop
out
sbb
pusha
and
jb
ret
inc
and
xchg
mov
lret
testb
or
and
jnp
inc
xor
in
test
and
lret
add
jecxz
mov
rorl
jmp
cmp
rcr
test
pop
popa
je
inc
pop
adc
mov
sbb
repz
cmpsb
and
jno
or
inc
in
js
shlb
pushl
inc
dec
mov
mov
loopne
cmp
ds
pop
std
mov
dec
xor
loopne
push
sbb
or
or
and
and
lock
aas
iret
icebp
or
popf
stos
cmpsl
lcall
sub
mov
xor
ss
cmovns
repnz
inc
add
inc
pusha
loope
push
push
pusha
rorb
or
inc
aad
mov
fsubl
or
rorb
mov
and
andb
mov
jecxz
pop
add
or
sub
inc
jmp
dec
or
out
hlt
mov
or
fmul
das
in
fld
outsl
roll
outsb
lret
sub
xlat
xor
pop
lahf
data16
inc
jb
jnp
pop
xchg
loop
xor
push
and
ja
cltd
shlb
or
cmp
testb
adc
pop
aam
lods
pusha
pusha
jg
and
inc
leave
bound
addr16
in
fwait
sub
cmp
rcl
cmp
jecxz
fs
pusha
lar
pusha
loopne
push
lcall
xchg
fildl
jmp
cmc
sbb
fimuls
push
repnz
and
mov
outsl
dec
imul
xor
pusha
popa
xchg
xchg
shl
andb
add
mov
push
enter
shlb
out
jne
pop
mov
rclb
mov
mov
xchg
dec
pop
push
repnz
daa
movsl
xchg
mov
sub
andb
icebp
in
imul
xchg
inc
pop
jb
jg
les
adc
xchg
push
dec
xor
mov
daa
shl
dec
in
pop
and
and
jge
xor
adc
xchg
cld
and
cmp
and
movups
loopne
jbe
xchg
pop
xchg
int
mov
sti
mov
mov
mov
shll
mov
add
pop
into
and
scas
pusha
and
hlt
sbb
pop
fmull
rcr
mov
add
push
fldcw
or
imul
cli
mov
adc
addb
push
icebp
push
push
lods
sarb
pop
and
loopne
add
mov
into
dec
xor
inc
shrb
in
jns
jge
adc
jle
popa
stos
and
inc
scas
pusha
pusha
add
clc
jae
mov
popf
lods
loopne
mov
ret
test
sbb
add
loopne
mov
addb
loop
jmp
out
lret
mov
and
fnstenv
outsb
xchg
scas
and
mov
and
loopne
das
arpl
push
int3
jb
sbb
push
ds
mov
mov
pop
sbb
jp
mov
sbb
aam
fwait
pop
xor
mov
mov
and
loopne
xchg
mov
loopne
cld
and
and
push
xchg
iret
out
imul
shrb
cmpb
mov
inc
dec
out
xor
leave
repz
adc
ret
mov
and
and
outsb
pushf
fmull
scas
fdivrl
ljmp
push
xor
dec
or
add
inc
imul
and
mov
cmp
fmuls
enter
lods
loop
or
inc
pop
aas
mov
das
out
xchg
inc
xchg
sbb
sti
shrl
loopne
and
add
inc
xchg
inc
idivl
dec
js
push
enter
and
in
mov
dec
mov
adc
xor
pop
fsubrs
pusha
shr
stos
add
jl
xor
jp
lret
mov
call
andb
pop
repnz
cli
bound
lahf
mov
inc
out
mov
hlt
cmp
cltd
or
and
pop
jge
add
jbe
jecxz
fildll
int3
dec
out
mov
jmp
sti
xchg
or
pop
in
pxor
adc
int
push
mov
out
pop
mov
adc
xor
mov
and
loopne
jecxz
cmpsb
add
sub
sbb
sti
ss
rolb
into
bound
add
arpl
sbb
rolb
jo
std
ds
pusha
aas
je
loopne
mov
jmp
sub
inc
rclb
loopne
fists
imull
adc
or
loopne
dec
loopne
andb
dec
leave
xor
in
dec
sarb
pop
mov
loopne
jge
push
inc
mov
mov
insl
push
cmp
mov
xor
fwait
push
fcoml
mov
inc
sbb
or
les
pusha
shrb
mov
rcr
iret
test
test
and
lret
sub
addb
and
inc
mov
sbb
mov
mov
pop
cs
rep
ret
imul
icebp
test
cmp
cli
jb
inc
jl
fidivrs
mov
shlb
jl
movsb
andb
testl
cmpsb
mov
loop
inc
sarb
pop
sbb
and
ret
mov
dec
iret
insl
fnsave
aaa
addb
fmul
vpslld
xchg
adc
orb
xor
mov
js
mov
sti
mov
pop
xorl
add
add
out
sub
mov
pusha
pusha
outsl
pushf
dec
cli
testb
adc
mov
shrb
and
push
push
bound
mov
mov
jb
fmuls
iret
push
mov
adc
insb
dec
inc
out
repnz
rcll
bound
xor
aas
loope
inc
shr
test
add
in
push
roll
outsl
dec
jg
andb
scas
add
mov
xor
mov
mov
xor
aam
loopne
cld
cmpsb
add
or
pop
in
rclb
pop
lret
jle
sbb
mov
inc
xchg
lock
and
mov
jno
or
jnp
jo
push
lahf
sub
mov
cli
aaa
pushf
inc
and
pusha
cmp
sub
pusha
mov
mov
add
and
inc
push
cmpsb
addb
pop
pop
outsb
pop
je
outsb
xor
insb
das
shl
sub
and
add
dec
test
loopne
pop
in
fwait
lret
jb
cmp
sub
inc
bound
and
push
inc
add
sub
data16
subl
cmp
lret
xchg
sub
pusha
adc
adcl
rolb
sbb
addb
push
pop
lea
or
rclb
mov
out
and
loopne
and
mov
mov
lahf
enter
mov
roll
out
jl
and
rorb
push
jmp
mov
stc
inc
xchg
fxch
int3
in
scas
cmp
adc
add
aam
outsl
add
js
pop
push
stos
mov
shlb
add
cld
imul
sbb
incb
imul
out
push
rclb
or
add
sbb
sub
pusha
ljmp
mov
rolb
cmp
push
cmpsl
mov
sub
je
mov
push
mov
pusha
fcoml
insb
call
mov
mov
pop
stos
jo
inc
sbbb
lods
addb
cmp
add
dec
mov
outsl
sti
shlb
cmp
andb
into
aad
jae
andb
int3
das
jle
and
imul
jmp
inc
inc
aaa
fwait
into
cmpsl
mov
jnp
and
inc
inc
push
lea
pusha
add
stos
pop
adc
rcrl
jge
sub
and
mov
lret
ucomiss
inc
loope
xchg
int3
loop
jne
add
xlat
mov
ja
addb
xor
xlat
xchg
push
inc
mov
jno
loopne
stc
and
loopne
and
sbb
imul
pop
push
std
add
add
xchg
xor
pop
fsub
cmp
cmc
inc
call
lcall
decb
aaa
xor
jl
push
push
and
repz
jae
cmp
add
fistl
idivb
sub
inc
addb
xchg
loopne
or
add
xchg
add
aam
gs
in
mov
popw
bnd
jle
jns
mov
loope
adc
or
pusha
stos
adc
push
push
pop
xchg
xor
adc
push
mov
iret
imulb
pusha
and
movsl
popf
mov
incb
jge
lock
ret
pop
stos
cs
inc
data16
add
fldl
subl
pusha
pusha
scas
inc
xchg
pop
les
int3
inc
xchg
popa
data16
inc
mov
dec
enter
xor
mov
and
mov
pop
xor
pop
stc
fcomps
daa
enter
clc
xor
sbb
push
frstor
inc
loopne
cli
imul
mov
add
cmpb
sub
inc
xchg
cmpsl
push
or
add
fnsave
inc
inc
adc
rclb
xchg
fdivrs
mov
cmp
sub
nop
arpl
pop
inc
rcrb
mov
dec
rolb
add
mov
mov
loopne
add
pop
jbe
inc
adc
pop
and
mov
pusha
inc
dec
dec
sub
sub
push
inc
xchg
mov
dec
fs
xor
mov
and
xbegin
inc
pusha
insl
sub
and
bound
lock
mov
sub
clc
xchg
pop
negl
xor
addb
and
jmp
shll
bound
loop
xchg
cld
xor
lock
push
loopne
sub
mov
dec
repnz
addb
pusha
cmp
dec
pop
fwait
insl
outsl
ja
in
and
rorb
lcall
sbb
and
xchg
insl
stos
pusha
and
mov
sbb
aam
add
xchg
jae
push
ljmp
mov
pusha
cmpsb
add
arpl
in
add
inc
jge
mov
pusha
loopne
test
or
push
orl
ss
jne
mov
or
mov
mov
imul
mov
imul
adc
and
and
jmp
pop
add
inc
sub
add
dec
hlt
mov
xchg
inc
mov
mov
cli
xchg
repz
imul
fmulp
adc
sub
adc
out
imul
shl
xor
loopne
sub
call
dec
or
mov
out
out
aam
insb
loope
rolb
dec
fs
jg
jbe
repnz
test
pusha
push
fisubrl
push
mov
sbb
idiv
sti
sbb
sub
mov
xchg
loopne
test
pusha
xchg
sbb
add
andb
dec
sub
pusha
dec
ja
pusha
loopne
inc
shll
mov
jno
sbb
add
daa
jg
ds
add
inc
push
mov
inc
xor
lahf
mov
pusha
sbb
pop
adc
push
jmp
cmc
pop
jp
or
sub
dec
pop
xor
push
lcall
ds
push
dec
shlb
pop
inc
jno
add
addb
sbb
sub
pusha
idivb
adc
mov
and
cmp
lcall
andb
sub
and
jo
mov
ljmp
mov
push
arpl
mov
loopne
notb
pusha
cmpb
in
cltd
cmp
loopne
mov
scas
std
addr16
push
ljmp
movsb
addb
add
and
loopne
inc
sbb
shl
push
xchg
cmp
inc
call
mov
inc
dec
pushf
icebp
pop
xchg
insl
stos
lret
push
sub
pusha
into
xchg
aad
sub
and
pop
loope
xor
loopne
cmpsl
cmp
fimull
inc
or
add
pop
hlt
sbb
mov
mov
pusha
or
mov
xchg
and
sub
add
orl
mov
loopne
mov
cmc
test
mov
popf
aaa
in
dec
or
mov
mov
push
and
pusha
sub
push
lea
cmp
rcll
cli
sub
push
push
xchg
lock
shufps
mov
mov
aad
outsl
inc
cli
sub
and
mov
adc
mov
add
mov
inc
cwtl
test
add
int
addr16
mov
mov
or
movsb
mov
idivb
imul
xor
in
aad
xlat
fcompl
mov
xchg
add
out
pop
push
orl
adc
cmp
cmpsb
add
mov
cmovle
lahf
fisttps
cmovns
add
mov
call
loope
lahf
jmp
out
mov
aas
xchg
and
inc
fldcw
incb
sbbb
sbb
pusha
pusha
mov
push
and
pushf
jae
pusha
subb
mov
sarl
xchg
add
rcrl
mov
xlat
pop
dec
arpl
inc
orb
subb
inc
sub
pusha
aam
repnz
xchg
loop
loop
and
mov
int
sub
mov
leave
xor
xrelease
cltd
jl
mov
dec
pop
pushf
xor
sbb
xor
test
and
sarb
fiaddl
sar
cwtl
loope
mov
loopne
pop
ret
fcomp
xlat
mov
enter
stc
nop
mov
ljmp
loopne
pop
scas
and
lret
out
insl
jmp
shl
cwtl
pop
sbb
pusha
clc
aaa
xor
jl
out
loopne
xor
addb
mov
cmp
rolb
adc
jae
mov
inc
add
mov
jp
sub
pop
loop
adc
push
andb
in
xchg
xor
mov
push
pusha
loopne
xchg
or
addb
dec
mov
aad
add
cmp
sahf
das
das
sbb
nop
push
sbb
sub
dec
dec
cwtl
mov
test
mov
inc
lods
int
jno
add
push
sub
je
inc
mov
mov
loopne
xchg
and
loopne
rcll
pusha
inc
inc
js
jecxz
ficoms
or
dec
mov
push
cmp
dec
mov
xorb
lods
pusha
pusha
jno
loope
pop
lret
mull
mov
sub
mov
mov
add
sbb
inc
and
and
and
scas
mov
pop
subl
addb
sbb
sbb
xor
and
cmp
push
addb
sbb
and
and
ret
dec
mov
daa
mov
bound
push
sub
pusha
mov
je
inc
and
andb
xchg
shr
dec
adc
loopne
xchg
stos
aam
and
mov
jmp
fldt
cmpsb
mov
sti
lret
lock
andb
out
mov
and
or
cld
mov
pusha
inc
outsb
xchg
lret
loopne
sub
and
out
push
add
pusha
or
rcrb
inc
mov
andb
inc
pusha
lea
pop
call
loop
lret
jge
jp
fwait
sub
mov
jo
and
mov
pusha
and
nop
jp
leave
dec
frstor
fistpl
shr
dec
dec
dec
cmpsb
loopne
icebp
sub
inc
in
mov
or
and
and
add
mov
loopne
dec
mov
jmp
js
iret
jmp
jg
movsl
popf
jmp
mov
xlat
jb
mov
inc
pushf
sbb
pusha
loope
rolb
sub
cmc
data16
push
inc
lahf
push
stc
pop
call
js
out
ret
add
jle
hlt
pop
in
mov
into
or
and
sbb
cmp
movsb
shlb
shlb
mov
mov
rcrb
add
shrb
imul
mov
dec
sti
mov
lret
mov
xor
jl
sbb
xor
sub
inc
test
add
mov
or
lods
addb
push
sti
clc
rorl
inc
in
mov
add
andb
fadds
inc
lds
and
lds
or
sbb
mov
into
aas
add
mov
rolb
flds
jb
movl
idivl
loopne
mov
inc
int3
dec
dec
stos
andb
hlt
add
shl
xchg
test
rorb
mov
sbb
loope
leave
fwait
les
mov
mov
das
xor
lret
sub
push
mov
pushf
stos
andb
mov
loopne
out
sbb
xchg
xchg
fstpt
inc
loopne
cli
mov
mov
iret
mov
adc
push
cmp
int3
mov
and
add
sti
add
test
push
mov
mov
fsubp
sbb
cld
call
pusha
hlt
insb
ror
push
xor
mov
rcrl
push
aam
mov
fidivs
jae
push
inc
mov
inc
fistpl
sbb
xchg
cmpsl
sbb
call
nop
icebp
sub
dec
imul
push
js
out
inc
dec
fldcw
sbb
cmp
stos
jbe
adc
add
push
aas
fnstcw
sub
pop
out
aad
stos
and
fwait
jmp
inc
add
cmp
stc
adc
test
stos
add
adc
sub
mov
in
call
out
test
ja
mulb
loopne
pusha
and
leave
ja
and
inc
jne
mov
mov
mov
xchg
sub
sub
inc
inc
and
pop
dec
ffree
pop
ss
jns
pop
orl
sbb
pop
sub
loopne
push
addr16
jl
cmpsl
adc
sub
inc
lods
and
and
in
in
fcmovne
aam
dec
cld
mov
lods
sbb
add
xchg
dec
xor
ficoms
pop
cmp
pop
aad
sub
movsl
add
add
pop
or
sahf
fstl
mov
and
mov
add
mov
iret
stos
shl
add
mov
add
sbb
bound
icebp
imul
inc
loopne
lcall
pusha
mov
inc
loopne
rolb
loopne
out
push
inc
arpl
mov
ss
mov
add
sbb
and
add
daa
adc
inc
and
jge
std
xor
mov
adc
jecxz
popl
inc
hlt
mov
inc
pop
push
pop
mov
popa
mov
cmc
test
xchg
mov
andb
xchg
jg
sarl
and
andl
pusha
gs
outsb
rcrb
adc
loope
cmp
imul
mov
pusha
xchg
sub
loopne
shr
addr16
insl
jecxz
cmp
pusha
cmp
test
sbbb
sar
pop
movsb
and
mov
sarb
clc
pop
cmp
andb
arpl
sub
inc
cmp
mov
cmp
pusha
cmpb
mov
mov
sbb
sbb
push
mov
push
mov
jo
loope
and
jg
mov
xor
dec
pop
loop
cltd
vunpcklps
enter
add
push
insl
cli
fcmovb
cmp
xor
add
push
mov
or
xor
mov
rolb
daa
pushf
call
sbb
jmp
scas
rol
jne
roll
xchg
pusha
mov
js
and
mov
jle
sbb
inc
loopne
decb
and
rcr
pop
push
cmovne
inc
fstpl
jmp
pop
or
stos
inc
and
pushf
fld1
das
addr16
mov
mov
xchg
xchg
rorl
stc
cmp
cmp
ret
xchg
enter
mov
and
repnz
lds
pop
pop
xor
ds
icebp
sbb
mov
sahf
int3
leave
in
push
sub
insl
mov
int
pop
push
lret
test
mov
mov
leave
ret
xchg
sbb
cmp
sahf
push
lock
sahf
fisubs
pop
jo
loopne
int
rcrl
inc
fs
push
lret
push
inc
test
loopne
jns
addb
add
and
pushf
aam
cmp
mov
imul
loopne
mov
adc
cmpsl
inc
sbb
nop
xchg
jns
mov
into
xor
rolb
inc
xor
and
rorb
into
int
pusha
add
push
pop
mov
pop
add
scas
aad
xchg
test
pusha
in
fwait
je
out
js
mov
pop
rolb
sbb
add
sti
pop
jb
clc
es
movsb
addb
mov
shl
inc
add
ret
adc
and
add
add
dec
and
cvttps2pi
cwtl
lret
xor
shlb
adc
mov
sbb
out
dec
sbb
cmp
sub
cmpb
sbb
push
jb
mov
sub
push
dec
dec
jae
lods
fld
push
popa
lods
loopne
out
xchg
shrb
and
movsl
mov
inc
or
add
insb
push
mov
mov
fists
addb
jmp
and
add
mov
in
jle
pusha
add
pop
jecxz
mov
and
fiaddl
and
andb
xchg
sti
out
add
xorb
pop
pop
sbb
jno
imul
daa
lar
and
bound
add
or
mov
sbb
icebp
insl
enter
loope
jecxz
sti
ret
subb
scas
loopne
in
outsl
adc
and
mov
lcall
push
stos
add
inc
sti
jae
or
mov
mov
and
add
insl
push
sbb
and
mov
inc
sbb
into
inc
mov
jl
mov
rorl
sub
and
rcll
mov
jge
xor
shl
shrb
lods
shlb
xor
sahf
movsb
inc
loopne
aaa
dec
or
or
shlb
setns
inc
pop
ficompl
sarb
pushf
into
pop
mov
or
inc
inc
adc
add
cli
fisttpl
dec
ljmp
sub
and
shlb
jno
int
lahf
mov
dec
adc
insl
bound
cmp
lods
mov
cs
add
stc
loopne
or
and
pusha
subl
sbb
out
loopne
cwtl
int
test
add
inc
out
dec
cltd
add
inc
xchg
mulb
cmp
pusha
and
add
rcr
fidivs
and
fwait
sub
rcl
mov
cmp
adc
mov
js
mov
pop
lea
and
jle
inc
loopne
pop
test
lahf
imul
cmpb
shlb
lret
js
test
nop
adc
cwtl
jb
pop
push
andb
insl
sub
push
addb
ljmp
in
imul
sbb
mov
std
and
xchg
orl
movsl
dec
mov
outsl
rorl
bound
add
add
andb
jne
jne
lahf
daa
mov
insb
loop
sub
xor
jo
in
cmp
xlat
jmp
jo
inc
adc
stos
and
rorl
or
dec
sub
loopne
pop
mov
outsl
das
mov
adc
add
rolb
cltd
inc
dec
in
inc
sti
dec
lahf
sbb
js
lret
push
cwtl
add
and
icebp
jnp
nop
sub
loopne
or
and
imul
inc
pop
aam
mov
fstpt
add
cmp
pop
push
call
in
add
insb
add
inc
mov
inc
and
push
mov
add
lcall
sbb
jne
xchg
in
sbb
xchg
scas
notl
sub
add
in
pushf
out
mov
xchg
and
mov
dec
mov
mov
mov
inc
jns
push
mov
pusha
ds
stc
popf
loope
sbb
hlt
ds
repz
xchg
pusha
sbb
and
add
int
jae
filds
fstpl
mov
sbb
into
lods
pusha
inc
mov
mov
mov
lods
sarl
rol
andb
andb
xlat
xor
fwait
sub
pusha
pusha
sub
inc
loopne
inc
sub
pusha
push
pusha
shlb
jns
add
xchg
jbe
fisttps
push
cwtl
daa
mov
and
inc
cltd
push
aaa
loope
add
sub
insb
movsb
inc
inc
mov
pusha
pusha
daa
mov
rclb
subb
lahf
pop
mov
pop
int3
add
pop
into
jno
frstor
xchg
outsb
mov
or
sbb
mov
inc
rolb
xchg
fcomp
outsb
sbb
ficompl
mov
dec
rolb
sar
test
loopne
loopne
and
inc
pop
scas
andb
loopne
push
and
mov
jge
and
test
ret
addb
dec
mov
and
xchg
stos
inc
sub
and
xor
push
mov
sbb
call
push
push
outsl
push
mov
mov
mov
incb
and
arpl
iret
into
dec
lcall
push
xor
sbb
push
mov
inc
and
into
sarl
icebp
push
mov
and
and
xor
pusha
adcb
ja
mov
push
push
icebp
popa
pushf
ret
dec
add
movsl
dec
sbb
loopne
ja
jb
or
and
mov
ja
jl
loopne
or
adc
test
mov
aad
movsb
rol
dec
cld
out
pusha
aas
insl
rcl
adc
add
or
sub
jns
js
add
mov
cmp
addb
cmpsb
loopne
xor
jno
lret
pushf
adc
pusha
addr16
loopne
mov
mov
adc
enter
mov
orb
cmpsl
sub
and
add
loopne
mov
dec
dec
sub
sub
cld
dec
stos
and
test
imul
and
add
imul
push
dec
insl
loopne
mov
cmp
in
xchg
int3
xlat
mov
andb
lcall
cmpsb
add
xlat
lds
and
add
insb
add
and
add
jne
adc
sarb
sahf
push
xor
fbld
inc
sub
mov
mov
rclb
iret
fisubl
xchg
add
and
inc
inc
test
pusha
dec
push
xor
sbb
push
inc
mov
xchg
sub
repz
scas
andb
inc
cmp
push
push
add
fdivs
push
andb
bound
sub
lea
xor
inc
out
or
sbb
pop
xor
push
xorl
add
add
or
ds
cltd
mov
inc
and
add
repnz
and
pusha
mov
inc
add
cmp
mov
das
repz
jmp
rorb
hlt
and
rcll
pop
dec
xchg
mov
sbb
shlb
xlat
jle
pop
cld
jecxz
inc
jge
mov
mov
dec
or
in
mov
lret
and
pusha
mov
inc
inc
in
sub
and
xlat
push
pop
add
mov
mov
mov
jg
add
jb
add
call
lds
push
sbb
fnstcw
in
lock
inc
loopne
fisttps
bound
pusha
add
xchg
loopne
push
popa
lcall
addb
and
and
add
jbe
loopne
xor
add
inc
insl
aam
loopne
aad
jno
sub
and
ja
pop
mov
fs
mov
and
insb
fnsave
jle
lret
lcall
xchg
fstp
inc
xlat
adc
int
or
and
ret
fwait
sbb
fmuls
and
push
dec
addb
push
and
sub
mov
loopne
add
mov
mov
xchg
dec
lock
or
pop
aaa
mov
cmp
sbb
inc
shrb
pusha
fisttpl
mov
and
fistps
push
and
out
xchg
loopne
dec
out
add
jp
xchg
mov
lcall
xchg
addb
jg
pop
adc
orl
sub
inc
sub
and
and
out
jb
cmp
cmpsb
inc
and
inc
and
in
xchg
cwtl
daa
mov
cmp
and
xor
xchg
jl
sbb
mov
rol
inc
jb
loopne
movsb
andb
mov
loopne
arpl
gs
lods
adc
inc
in
mov
and
cmp
add
mov
lcall
ficoml
aam
mov
mov
mov
pop
add
add
mov
add
ret
mov
adcl
enter
add
ret
pop
push
inc
inc
xor
xor
add
jnp
pop
arpl
mov
inc
cmc
mov
pusha
shlb
pusha
and
mov
lcall
in
test
mov
jns
imul
mov
inc
push
ja
ja
mov
loopne
leave
adc
xchg
lret
icebp
add
lods
and
adc
cmpsb
loopne
ds
test
push
pop
jbe
mov
mov
inc
outsb
add
mov
sbb
out
ds
pop
stos
addb
jne,pt
jbe
push
pusha
add
repnz
and
lea
inc
in
arpl
inc
push
ror
xor
lods
mov
xchg
pusha
loope
sarl
in
xchg
nop
mov
mov
dec
inc
cmp
shlb
pusha
mov
cltd
mov
and
mov
mov
gs
imul
sbb
mov
je
cmp
and
mov
mov
dec
pop
sbb
stos
add
lock
negl
xchg
sub
sbb
push
dec
mov
add
mov
cmp
and
add
and
test
in
mov
movsl
inc
mov
insl
scas
jmp
sbb
mov
jns
test
add
in
imul
cld
jle
iret
cmpsw
pop
ljmp
add
shlb
icebp
fsubrs
pop
cld
enter
dec
test
pusha
inc
adc
mov
or
and
dec
cmp
cmp
cmpsl
mov
fstps
xor
jg
stos
loopne
and
jp
sbb
mov
add
inc
popf
fcoms
add
adc
jne
mov
push
pop
xchg
mov
xchg
pop
out
sar
fs
insl
fs
xor
scas
fstpl
xchg
popf
es
sub
mov
inc
push
int3
arpl
pusha
inc
jo
xor
aaa
rcl
add
add
jecxz
call
pop
rcrl
mov
adc
movl
cmpb
subl
adc
push
repnz
and
rolb
and
adc
cltd
cmpsl
mov
mov
cld
sbb
add
cmpsl
or
loopne
les
fs
iret
imul
pop
add
loopne
les
inc
mov
sub
and
call
sbbl
insb
fsubs
addb
and
mov
aad
mov
cmc
add
subl
inc
jle
inc
pusha
mov
push
inc
jae
and
cmpsl
pushf
call
adc
aad
xor
shlb
adc
mov
insb
lods
loopne
inc
xlat
jmp
adc
fs
cs
andb
bound
popl
and
add
cld
mov
mov
mul
shl
or
pusha
xorb
or
hlt
jnp
in
lock
mov
or
pusha
pop
push
and
jne
mov
loopne
inc
ret
aas
sub
inc
enter
cltd
and
and
popa
aad
mov
dec
out
test
movsl
or
cmpsl
mull
ljmp
movb
inc
cmp
xchg
sub
sbbb
add
rclb
scas
sbb
rolb
lret
out
daa
ja
lea
ljmp
rolb
dec
cltd
xchg
adc
sbb
sub
jmp
jns
push
and
push
cmc
sahf
rcr
sub
add
mov
loope
push
sbb
cmp
add
out
mov
push
mov
lahf
dec
idivb
mov
pusha
xchg
rclb
stos
inc
inc
aad
scas
push
shll
lods
imul
rol
pop
divl
xchg
mov
addb
jecxz
fistpl
stos
loopne
testb
add
add
xlat
pop
int3
mov
add
sbb
loopne
movsl
adc
loopne
inc
ss
rolb
cmp
repnz
cmp
rclb
out
lahf
test
push
push
pop
jnp
scas
xor
adc
or
rcrb
movsl
ret
mov
adc
push
inc
dec
jb
mov
xchg
mov
test
orb
add
and
out
imul
mov
jmp
ja
mov
sarl
js
dec
add
out
rcrl
daa
ja
xchg
mov
sub
inc
nop
ficomps
inc
dec
sbb
pusha
add
mov
fldt
les
fcomip
test
cltd
lret
dec
rol
and
mov
xchg
mov
jae
andb
jae
pop
inc
pushf
andb
and
rcrb
adc
xchg
and
add
std
cmp
fstps
stc
pop
icebp
jmp
and
jl
mov
cmp
inc
andb
mov
and
loopne
clc
in
push
adcl
lret
inc
std
push
loopne
pop
cli
lahf
add
mov
cld
or
shlb
rolb
out
xor
imul
ljmp
mov
pop
lods
mov
add
fisubrs
and
add
mov
loopne
loopne
push
or
mov
add
cs
pop
testb
fisubs
outsb
fcomip
dec
leave
jle
pusha
add
adc
nop
cmp
pop
insl
addb
mov
mov
inc
jmp
inc
sarl
loopne
mov
fisubrs
jnp
dec
jge
mov
lds
shlb
push
jge
push
pop
pop
dec
mov
mov
bound
bound
pop
icebp
popa
or
xchg
adc
mov
xchg
mov
push
jg
add
loopne
insb
sub
mov
mov
outsb
cmc
jmp
adc
bound
cmpsb
and
clc
jne
sub
jno
mov
adc
cmp
xchg
outsl
out
pxor
pusha
push
sbb
int
insl
or
and
mov
std
push
sbb
mov
push
ror
cltd
arpl
je
enter
push
fisttps
movsb
shlb
imulb
scas
inc
and
push
jne
xchg
outsl
aas
outsb
xchg
loopne
jle
dec
and
rorb
xor
fstps
inc
dec
rorb
pusha
repnz
outsb
or
loopne
and
add
fwait
cld
lods
inc
shl
out
ljmp
loop
xor
or
xchg
fisubrl
inc
mov
into
fs
outsb
push
in
xor
push
inc
fdiv
daa
jo
inc
movsl
xor
and
cli
andb
clc
or
mov
dec
in
push
cltd
inc
orl
inc
out
inc
or
and
mov
ds
inc
mov
mov
mov
add
fcmove
xor
jge
cltd
sub
pusha
addr16
mov
mov
rol
fsts
ficoml
add
cmpsb
and
and
enter
fidivrl
dec
jle
mov
mov
lds
pusha
cmovno
xor
sahf
dec
cmp
inc
pop
fsub
add
cmpsb
addb
cmp
mov
xchg
inc
xor
push
jmp
loopne
movsl
cmpsl
mov
add
jns
rolb
aad
pop
sub
add
sti
push
fildll
shlb
push
mov
loopne
mov
cmp
cli
cli
icebp
dec
sbb
stos
add
pop
adc
mov
xor
rolb
ret
pop
fs
lods
add
mov
jo
loopne
dec
cmc
fsub
mov
insb
jle
and
outsl
scas
lahf
test
add
pop
push
hlt
leave
sbb
push
loopne
out
shlb
or
jle
adc
aam
mov
or
rcrb
xchg
lcall
pusha
mov
movsl
ljmp
xchg
ds
ret
test
dec
pop
mov
cmpb
out
add
loopne
and
mov
and
and
sbb
hlt
insb
clc
push
add
push
and
data16
test
orb
pop
jl
push
sbb
pushf
xchg
lret
xchg
aam
stos
andb
jp
clc
push
add
inc
or
pusha
add
mov
and
xor
repz
push
mov
test
push
mov
jbe
add
push
push
daa
or
pusha
loopne
addb
cmp
mov
pushl
rcrb
inc
aaa
adc
scas
rolb
loopne
loope
inc
sub
push
fisttpl
add
clc
inc
jmp
loop
mov
xlat
decb
sub
shlb
cmpl
or
mov
sbb
mov
popf
cmp
jns
cmp
test
push
mov
jecxz
enter
jecxz
lods
leave
mov
push
rcrl
loopne
loop
pushf
or
into
insl
rcr
and
xor
jne
cs
rolb
sub
fimuls
mov
xchg
push
daa
xchg
or
fists
fists
dec
aas
pop
xor
test
push
jmp
pop
mov
add
and
and
and
dec
cmp
ret
cmp
les
movsl
xchg
loope
mov
cli
xor
pusha
lock
add
shl
mov
mov
cmpsb
mov
pusha
mov
mov
enter
in
repnz
into
je
test
adc
mov
insl
lock
nop
mov
add
pop
das
and
mov
mov
pusha
in
add
jmp
out
cmp
data16
or
rorb
not
jl
jecxz
cli
ja
mov
cmp
inc
loopne,pn
out
stos
test
jae
pop
xchg
xlat
icebp
cmpsb
loopne
mov
pusha
mov
mov
jg
add
add
loopne
add
bnd
andb
ror
shll
decb
pop
cmp
adc
inc
enter
push
lds
add
cmp
call
call
arpl
rolb
loopne
popf
sub
lock
rcr
movsb
mov
loopne
outsl
push
leave
cmpsb
and
loopne
xchg
movb
fwait
ret
stos
mov
je
mov
xor
adc
pop
adc
hlt
lret
repnz
xchg
shrb
pusha
inc
repnz
jle
sub
add
or
inc
add
loopne
add
pop
inc
jmp
add
loopne
mov
dec
push
rol
int3
and
mov
sbb
push
loope
mov
inc
ss
and
inc
popa
ljmp
addb
cld
mov
xor
add
fscale
inc
ret
aaa
loopne
mov
das
sbb
xchg
addr16
js
scas
rcrl
push
or
shrl
outsb
cwtl
cmp
mov
fidivrs
lcall
dec
into
cli
popa
jb
inc
jge
and
mov
adcb
enter
cmp
scas
xor
add
jo
mov
ss
or
rclb
mov
adc
fldt
cmc
in
xchg
cwtd
mov
daa
stos
and
out
push
in
add
sbb
fdivs
mov
int
out
inc
shl
mov
mov
or
pop
adc
jmp
cmpsl
lds
mov
push
imull
mov
fdivs
sub
push
loopne
xchg
test
and
jae
je
cmp
jb
leave
and
in
jne
adc
aad
insb
mov
je
pusha
push
aad
jb
cmp
push
mov
jae
pop
pop
sub
cmp
jl
mov
aam
xchg
pushf
hlt
and
mov
add
xor
add
int3
cmpsl
mov
cmc
sbb
cltd
and
inc
out
dec
pop
pop
test
loopne
add
adc
andb
das
std
sub
inc
outsl
popa
je
or
test
xor
outsb
faddl
fdivr
stos
mov
popf
inc
sub
loopne
ja
das
jns
pop
xlat
mov
popa
jb
mov
fstpl
inc
gs
mov
jno
or
add
jg
pop
sub
loopne
cmp
push
fwait
mov
fisubl
sti
mov
jns
sub
inc
andb
or
and
cmp
xchg
arpl
rorb
cmp
push
lea
mov
into
jnp
add
loopne
jne
pusha
add
fnop
stos
add
loopne
cli
push
cltd
rclb
pop
xor
xchg
push
call
mov
xchg
xor
lret
cmp
push
test
inc
add
push
loopne
loope
and
rclb
inc
mov
cmp
cmp
add
lods
pusha
add
rol
jo
daa
in
cli
jp
lea
pushf
out
add
adc
scas
jbe
push
and
jle
adc
pop
leave
adc
outsb
mov
sarb
cmp
sahf
imul
rcrb
loopne
cld
mov
les
loopne
clc
leave
and
pop
add
enter
rolb
add
pop
shrb
add
in
and
cltd
inc
dec
sbb
adc
pushw
stc
pop
xchg
insb
add
loopne
and
inc
xor
in
pop
sbb
sbb
rolb
and
insl
mov
pop
dec
ret
add
mov
push
adc
addl
jge
adc
leave
mov
jae
fbld
aam
stos
inc
loopne
pop
and
inc
ds
add
out
inc
in
ret
scas
int3
add
push
push
push
andb
pusha
sbb
mov
xchg
xlat
mov
sbbl
daa
nop
push
mov
pop
test
mov
adcb
pop
mov
dec
fs
add
lods
rcrb
add
sbbb
lds
jge
lcall
and
je
shr
pusha
inc
inc
cltd
aaa
enter
xchg
inc
data16
mov
cmp
inc
shrb
inc
mov
lahf
mov
xor
aam
enter
and
test
shll
out
in
out
dec
cld
jb
shll
popf
lds
or
jl
mov
rolb
mov
arpl
les
scas
pusha
shr
arpl
cmp
pop
jne
loopne
stc
xchg
sub
mov
xchg
cmp
ret
jb
lock
inc
mov
loopne
inc
cmpsl
and
xchg
rcrl
sti
jnp
cmpsb
and
mov
xor
ret
mov
fcomps
dec
rcrb
or
xlat
icebp
xchg
loopne
jns
cltd
sub
inc
aaa
mov
test
add
int
aam
and
dec
mov
inc
xchg
lcall
inc
mov
scas
push
test
mov
sbb
pusha
pusha
ret
push
lods
inc
sbbb
inc
mov
jp
or
rolb
loopne
addr16
sarb
push
das
scas
and
notl
addb
iret
loop
or
loopne
test
bound
fmuls
mov
pushf
fsubp
push
cmpsl
inc
fs
dec
mov
push
aaa
shrl
xor
daa
stc
rolb
andb
test
mov
add
pop
xlat
push
inc
xorb
pop
fisubrs
lods
inc
inc
cld
pop
cmc
insb
mov
sub
mov
addb
dec
ss
add
enter
and
adc
loopne
inc
lret
cli
in
xchg
mov
and
jge
stc
xor
mov
mov
push
fdivp
dec
sub
andb
rcl
push
push
inc
loopne
mov
mov
inc
add
testb
sbb
add
jmp
loopne
fidivl
in
mov
in
sub
or
and
fistps
jae
pop
call
leave
xchg
dec
sub
inc
and
or
mov
sub
rorb
add
mov
pusha
scas
ret
jns
ja
dec
push
aad
xchg
aaa
sahf
lret
in
loope
dec
rclb
xchg
arpl
xchg
and
add
movsl
aas
mov
rcll
mov
loope
movsl
xor
jmp
and
inc
inc
or
mov
enter
movsl
adc
cltd
and
xchg
mov
add
sbb
sbb
loopne
xchg
ja
inc
push
inc
rorb
mov
mov
sbb
mov
pusha
add
and
sbb
std
add
pop
cs
inc
sbb
loopne
repnz
mov
loopne
jns
dec
mov
repz
ljmp
aad
cltd
and
out
dec
aam
sbb
dec
inc
shrl
cmp
jb
xchg
movsl
or
out
inc
pop
lret
or
inc
mov
inc
in
mov
mov
mov
sbb
lock
jp
sub
jo
xlat
sub
arpl
add
push
jne
push
cmp
and
loopne
testl
mov
cmp
nop
adc
aas
pop
or
push
pusha
pusha
add
aas
in
add
loope
inc
inc
aaa
fimull
rolb
lret
data16
inc
inc
lods
rolb
jo
pop
jns
push
cmp
inc
sub
xchg
mov
pusha
sbb
jnp
add
sbb
adc
dec
jns
inc
loopne
lcall
cltd
adc
hlt
pop
ljmp
cltd
mov
xchg
sbbl
xor
out
pusha
or
pusha
mov
pop
test
inc
loopne
mov
pushf
aad
pop
leave
jecxz
inc
and
mov
shl
sti
pop
pop
leave
pushf
cmp
xchg
adc
dec
enter
out
cwtl
cwtl
or
andb
sbb
push
mov
jecxz
pusha
mov
mov
js
popf
jb
mov
in
jbe
test
outsl
pop
push
jp
mov
mov
and
push
cld
loop
jecxz
add
fstps
pusha
loopne
pusha
and
in
mov
sub
mov
cltd
outsl
and
daa
add
pusha
sbb
shlb
pop
or
mov
enter
inc
dec
sub
shl
jecxz
mov
inc
mov
mov
jo
pop
or
orb
add
dec
cltd
cld
fldt
sar
mov
fwait
mov
fcompl
or
fmuls
dec
xor
mov
shlb
sub
mov
rol
popa
pusha
clc
sbb
rolb
sub
call
in
add
cmp
xor
pop
add
inc
stos
mov
rol
push
rolb
and
cltd
cmp
mov
and
andb
mov
cld
dec
in
jp
ljmp
add
push
adc
fimuls
inc
fdivrs
push
les
jb
sbb
add
rcr
iret
rcrl
jecxz
iret
push
test
xor
mov
lahf
and
enter
fdivrl
adc
dec
jae
insb
jg
and
loopne
call
lret
int3
out
push
cwtl
movsb
and
jnp
int
aaa
pop
ret
fnstcw
rcl
fs
lret
add
loopne
call
ret
mov
and
test
add
aad
or
mov
shlb
mov
dec
pop
leave
adc
lahf
and
jns
pop
pop
add
adcb
lods
test
movsb
pusha
add
add
sbbl
sub
fcoms
nop
xor
arpl
fcompl
orl
clc
scas
add
clc
inc
fildl
mov
leave
stc
jecxz
nop
cltd
and
ret
or
shll
loop
fldl
insb
icebp
mov
imul
add
xchg
cmp
aad
cmp
movsb
addb
push
daa
addr16
pop
adc
pushf
and
pusha
add
and
add
and
inc
movl
dec
aad
fidivrl
call
inc
adc
lea
inc
inc
xchg
cmc
hlt
and
adcb
out
mov
bnd
inc
shrb
mov
inc
fsubrl
pusha
inc
je
aad
andb
sub
xchg
mov
add
and
jl
stos
or
add
add
push
loopne
out
and
xor
adc
daa
mov
mov
mov
xor
mov
inc
imul
test
fs
adc
rol
push
mov
iret
enter
arpl
jle
push
xor
inc
add
ret
rcrl
mov
push
cmp
push
and
fdivrs
stc
mov
shl
andb
jbe
jl
pusha
add
adc
push
mov
cli
andb
mov
test
into
adcl
dec
mov
cld
jecxz
cmp
cmp
mov
and
stc
inc
testl
inc
adc
mov
add
rolb
xchg
rorl
pop
sbb
adc
pusha
mov
cmpb
inc
rcrb
dec
add
mov
xchg
mov
fwait
inc
adc
iret
stos
add
sub
mov
add
jg
add
je
mov
pop
xchg
lods
loopne
sub
xor
rolb
mov
xchg
mov
rclb
outsl
xor
and
std
std
cli
pop
mov
add
inc
pusha
mov
and
jge
xlat
jmp
and
pusha
mov
fcmovnu
cwtl
mov
push
shlb
pop
fdivs
clc
mov
jbe
mov
add
mov
ljmp
and
test
shr
add
imul
jo
or
inc
jmp
mov
mov
sub
mov
and
sub
add
loope
jecxz
adc
xor
mov
xor
pusha
sarb
lds
xchg
lods
cwtl
cmp
mov
and
fidivl
insl
fnsetpm(287
pop
xor
jne
lcall
clc
fcmovbe
pop
jecxz
push
inc
pushf
mov
aam
aam
int
aam
mov
jle
xlat
or
stos
cmpsb
inc
pusha
lods
mov
orb
and
sbbb
push
sbb
cld
inc
sub
cld
sub
mov
mov
das
inc
pop
mov
and
addb
cmpsl
push
scas
add
and
ret
push
mov
jns
and
add
mov
sarl
es
loopne
addb
out
jbe
xor
fildl
sbb
lock
cmp
xchg
adc
xorb
test
xor
push
in
imul
cmp
push
mov
rcrb
aam
pop
mov
les
cmp
into
lret
cltd
rcr
stos
mov
mov
shrb
iret
aad
fisubl
add
fcoms
xlat
push
sbb
jae
stos
mov
mov
dec
lea
dec
in
inc
mov
sbb
jnp
cmp
ss
incb
push
cmp
jo
sub
and
shlb
pusha
out
rcll
inc
adc
lahf
je
fisttps
add
rorb
mov
stc
stos
push
es
sti
mov
movsb
inc
mov
and
inc
and
lcall
mov
mov
jmp
test
dec
insl
stos
arpl
push
dec
pop
shlb
rol
xchg
sbb
in
loope
bound
pop
ret
mov
mov
jb
gs
push
negl
lcall
es
xchg
cwtl
mov
fldl2e
fiaddl
xchg
and
pusha
inc
jmp
lods
shlb
mov
aam
rol
cmp
shlb
mov
jmp
andb
and
add
inc
or
inc
ds
setp
int
xchg
xchg
cmp
xchg
xchg
xor
mov
jnp
adc
clc
xchg
xchg
add
loopne
into
cwtl
fisubs
cmp
cmpsl
jne
loope
push
test
pusha
jns
adc
sub
loopne
pusha
inc
mov
aas
jb
mov
add
lahf
movsb
and
mov
adc
xor
lcall
cli
pop
leave
pushf
mov
or
mov
repz
dec
outsl
push
lret
cmp
inc
and
andb
pusha
test
cmp
cmpb
mov
and
inc
add
dec
push
mov
xor
pop
ss
or
inc
or
loopne
adc
lret
pop
ljmp
and
jmp
iret
fisttpll
inc
xor
bound
and
add
push
addl
mov
out
mov
imul
inc
add
dec
mov
std
xchg
inc
pushf
fsubl
xchg
xchg
pop
inc
arpl
call
lret
ds
xchg
aam
mov
add
mov
popf
jae
jecxz
mov
jbe
cmpl
movsb
pusha
loopne
rolb
pop
clc
cmc
rolb
daa
ljmp
dec
pop
and
movsb
loopne
push
mov
andb
sbb
imul
add
jno
dec
inc
test
repz
loopne
call
imul
ljmp
and
sub
cmp
mov
add
out
je
jecxz
xchg
imul
pop
inc
mov
test
xchg
mov
idiv
mov
shrb
into
adc
inc
shl
dec
push
jecxz
xchg
shlb
add
ljmp
xchg
pop
int3
add
inc
outsl
sbb
es
add
inc
sbb
mov
loopne
dec
arpl
je
fdivl
loopne
add
inc
je
sahf
mov
and
lods
jecxz
addr16
dec
cmp
outsb
movsb
inc
pusha
xchg
jl
pop
add
mov
loopne
mov
stos
loopne
orl
lods
fcmovb
xor
add
push
cli
cltd
icebp
cmp
adcl
mov
jnp
push
orl
leave
mov
fcmovnbe
dec
fcmovbe
mov
add
lock
push
shl
push
and
ret
jns
fidivl
daa
adc
into
aam
cmp
and
add
add
adc
sub
rclb
jo
incb
andb
arpl
inc
fbld
mov
mov
jae
lods
inc
inc
lahf
pop
sbb
pusha
pusha
mov
xchg
xor
mov
jle
divb
sahf
loop
daa
dec
aad
mov
xlat
pushl
pop
mov
dec
jae
jp
inc
or
inc
sbb
xor
loopne
adc
dec
das
push
add
mov
jl
cmpsl
or
loopne
scas
mov
loopne
dec
push
xchg
addl
push
inc
rcr
cmp
add
add
jmp
and
jecxz
xor
pusha
int3
cmpsb
add
les
push
jne
mov
mov
ror
mov
mov
mov
xor
not
dec
jle
leave
pushf
or
mov
inc
stc
out
pop
xchg
addb
scas
shlb
jne
pop
and
inc
fwait
xchg
xor
sbbb
xchg
mov
and
es
xlat
inc
adc
call
inc
add
inc
adc
mov
add
xchg
movsl
dec
loopne
mov
xchg
jnp
add
jl
sbb
shll
shl
lock
and
and
rol
loopne
pop
pop
insl
dec
inc
xchg
add
and
inc
pushf
mov
enter
stos
inc
loopne
cmp
or
or
movsl
or
std
and
fldt
mov
add
negb
je
incl
mov
add
jae
pop
adc
push
pop
aam
add
inc
mov
dec
rorb
inc
xchg
push
jecxz
inc
sahf
adc
add
lahf
outsb
cmp
jns
and
aam
cs
pusha
pop
nop
dec
imul
daa
pop
jmp
fcompl
sbb
in
pop
das
insl
add
adc
cmpb
cmpsb
mov
dec
incb
pusha
pusha
mov
popa
or
lea
data16
push
push
pusha
adc
pop
dec
loopne
int3
sub
mov
cmp
jb
andb
fisubrl
sub
mov
inc
cmp
cwtl
lock
mov
inc
cwtl
or
clc
and
andl
ret
xchg
mov
fisubrs
sub
scas
andb
inc
pusha
in
xlat
cltd
inc
mov
lret
getsec
inc
int
cmpsl
sub
sarb
add
scas
xor
mov
out
add
add
sub
xorb
popa
mov
dec
in
jmp
rol
sub
rcr
rol
cld
fnstsw
push
int3
jns
rolb
sbb
stc
jmp
push
int3
jp
push
add
rcrb
aad
shl
cmp
jne
int
cmpsl
or
inc
out
fwait
mov
pushf
push
insl
outsl
adc
outsb
sub
xchg
cmp
and
mov
inc
mov
jns
dec
arpl
or
cmpb
out
cmp
fsubs
lea
mov
jns
arpl
and
mov
popa
pop
das
inc
mov
pushl
mov
shll
inc
shlb
sbb
sub
cmp
mov
scas
xchg
jmp
movsl
mov
mov
mov
fldt
jle
mov
mov
rol
and
add
frstor
mov
test
or
lods
inc
or
fnstenv
call
cmp
push
in
sub
fiadds
xchg
cmp
leave
mov
pusha
inc
jno
xor
hlt
shr
cmp
aad
jmp
lea
nop
mov
call
pusha
aad
out
dec
pop
test
pusha
xchg
sahf
push
shll
sub
rorb
shrb
shl
fwait
insl
sbb
cmp
adc
inc
cli
fstpl
push
repnz
test
or
arpl
dec
xlat
ss
fstps
sbb
sub
hlt
or
addb
inc
hlt
pop
mov
xor
pusha
mov
loopne
sub
loopne
pop
jno
shlb
sub
loopne
rol
jb
xchg
loopne
fidivrs
ljmp
mov
test
mov
sub
rclb
jg
movsl
mov
out
fcmovnbe
mov
loop
cmc
pop
out
stos
arpl
dec
shll
js
jae
push
scas
or
xor
cmp
rol
push
pop
popa
repz
call
push
mov
jl
loopne
out
or
pop
mov
or
inc
or
add
loop
pop
mov
push
mov
mov
cmp
adc
in
in
in
cmp
cmp
xchg
fwait
out
pop
push
scas
lock
jbe
loopne
pusha
pop
xchg
mov
inc
push
pop
dec
sub
mov
loopne
jo
mov
xchg
xor
sub
push
add
adc
in
and
in
sbb
sbb
inc
inc
cld
hlt
xor
rcrl
imul
pushf
sbb
int3
cmpsl
add
add
je
out
lret
sub
xor
arpl
inc
pusha
repnz
scas
addb
xchg
xchg
inc
mov
jle
jo
call
push
pop
imul
stc
in
out
add
ss
into
testl
add
rcrb
dec
rcrb
sbb
pusha
cmpsl
test
cs
shll
aaa
ds
scas
and
outsl
loopne
sbb
ds
add
xchg
lods
adc
inc
mov
jo
andb
lcall
dec
divb
inc
fidivs
subl
and
pusha
inc
lds
imul
mov
mov
inc
pop
xchg
add
cmpsb
loopne
push
shlb
shrl
fcomps
pop
mov
adc
in
mov
das
outsb
popf
lds
mov
add
sbb
popf
adc
push
mov
and
shlb
fcompl
das
xchg
fidivl
mov
pusha
hlt
inc
in
js
add
add
jo
jg
addr16
push
pusha
inc
mov
enter
or
shll
push
and
dec
dec
add
sbb
ret
and
jg
rcll
repz
jmp
cmp
pop
jmp
mov
add
push
add
mov
pop
dec
xchg
cmp
mov
pusha
shrb
sub
andb
push
inc
andb
popf
popa
push
fmuls
test
inc
dec
call
leave
test
inc
imul
and
dec
adc
out
test
adcb
pop
pop
in
mov
pop
dec
inc
enter
je
aad
rol
xchg
push
push
pop
cmp
and
test
sbb
out
and
iret
dec
ss
stos
push
pop
shrl
adc
test
shrb
add
xchg
xor
shrl
xchg
mov
sub
inc
push
mov
aad
mov
insb
inc
insb
mov
inc
loopne
outsb
scas
ljmp
lods
inc
fildl
mov
hlt
popf
xchg
movsl
pop
pop
cmp
pusha
insl
xor
adc
mov
ss
fs
jb
test
and
jno
and
ljmp
sbb
loop
das
addb
in
or
cmc
roll
loopne
xor
jmp
je
pop
dec
mov
push
mov
mov
aaa
ret
loopne
mov
rolb
movsl
jns
xchg
orb
and
lcall
enter
fldenv
insb
gs
cmpsb
add
mov
out
popf
inc
pusha
dec
xchg
inc
out
andb
sahf
pop
bound
inc
cwtl
or
add
and
in
aam
ret
add
les
mov
push
mov
fdivl
pop
fyl2x
mov
loopne
push
xchg
pop
inc
jns
jecxz
add
sbbb
arpl
push
in
popa
in
hlt
jp
pop
adc
test
add
arpl
inc
pusha
fisttpll
andb
cmp
shlb
andb
sub
jp
test
loopne
jb
xchg
fabs
mov
pusha
loopne
leave
sbb
sub
rcr
push
loopne
or
mov
mov
or
add
mov
dec
dec
cmp
loopne
icebp
jp
xor
popf
dec
mov
xor
hlt
insl
fs
mov
push
loopne
jb
add
out
adc
jne
adc
aaa
pop
stc
mov
xor
rolb
in
in
inc
and
and
sbb
mov
imul
sbb
cmp
loopne
int
pop
out
mul
shlb
cli
rcl
fstl
xchg
popa
pop
sub
ficomps
jp
inc
jns
lahf
rcrb
sub
cmp
rcrl
aad
jmp
ds
aam
xchg
mov
mov
add
pusha
mov
pusha
cmp
cltd
or
and
ss
xor
mov
out
das
popf
shlb
pushf
mov
shr
les
pop
mov
and
mov
push
std
cmp
adc
xorl
inc
pop
xor
mov
lahf
mov
call
inc
ljmp
pop
sub
and
and
leave
ljmp
aas
mov
pusha
pusha
xor
sub
mov
pop
pop
and
mov
push
lret
cs
and
push
lea
scas
loopne
mov
and
movsl
movsb
pusha
add
dec
xchg
aad
xchg
or
imul
pusha
pop
es
aad
xchg
xchg
fisubs
pusha
mov
pusha
fwait
iret
out
add
and
imul
sarb
roll
and
inc
dec
ja
mov
sub
sub
shl
stc
jge
addb
dec
pop
int3
add
pusha
icebp
push
fdivs
push
mov
push
inc
leave
sbb
ret
lret
nop
stos
inc
loopne
mov
dec
fsts
mov
mov
insl
in
fldenv
sbbb
add
xor
sub
insb
cmc
js
or
add
fst
out
adc
dec
insb
cmpsb
shl
mov
int3
xor
sbb
or
movsl
cmc
mov
xor
shrb
lret
and
inc
pusha
repnz
pusha
loopne
mov
lahf
sub
inc
and
inc
adc
ficoms
dec
mov
xchg
std
dec
aas
adc
inc
add
clc
mov
mov
mov
loop
mov
mov
mov
addr16
dec
loopne,pn
mov
lahf
and
fldl2t
adc
bound
dec
xor
or
and
xlat
aas
sarb
ficompl
push
and
cmp
xor
stc
xchg
pop
xchg
jge
inc
sub
cmc
pop
int3
cli
idivl
dec
mov
aad
cmp
push
je
mov
in
mov
pop
push
repnz
fistpll
loopne
gs
loopne
and
mov
pop
stos
and
push
jns
nop
clc
pop
mov
dec
les
adc
add
add
mov
sub
add
bound
sub
rorl
inc
add
push
je
and
inc
or
sarb
mov
aaa
mov
out
addb
add
out
sub
sti
rcrl
scas
cmc
sbb
fchs
xor
dec
mov
sbb
call
mov
leave
fidivl
je
lods
rorl
jle
cmpsl
pop
orl
inc
jno
cmp
call
pop
jle
fwait
mov
ja
lock
lret
fbstp
mov
icebp
into
ljmp
addb
mov
std
sub
inc
mov
loopne
int
das
cmp
mov
or
inc
or
dec
mov
inc
les
stc
adc
outsb
outsb
sbb
adc
pop
fadds
add
cmp
add
pusha
inc
sbb
loopne
or
add
rcrb
addb
add
loopne
cltd
xor
stos
addb
xchg
aad
imul
mov
inc
lret
stc
jbe,pt
ret
pop
inc
ret
dec
aad
sbb
lahf
xchg
jne
mov
jmp
loop
movsb
inc
mov
and
fiaddl
pusha
or
addr16
jo
pop
fs
or
filds
xchg
jno
pusha
loopne
add
xchg
inc
mov
xchg
je
add
scas
push
dec
mov
test
ret
cltd
call
hlt
pop
jno
push
pop
mov
add
sarb
pop
cwtl
sub
andb
arpl
cli
int3
pop
insb
arpl
cmp
in
fisubrs
add
and
stos
loopne
mov
pop
cli
mov
dec
jne
enter
addb
pusha
xor
mov
inc
nop
and
add
rcrb
lret
push
jmp
adc
scas
lret
mov
and
sbb
imul
inc
and
inc
mov
test
mov
jecxz
shrl
loopne
dec
mov
cmp
ljmp
lret
daa
loop
or
stos
jo
adc
inc
frstor
mov
xchg
cmp
sub
dec
push
popa
dec
xor
sub
inc
addb
jl
fcoml
in
xchg
dec
cmpsb
mov
js
loopne
inc
pusha
xchg
cmp
adc
inc
cwtl
repz
cld
pop
sbb
sub
jecxz
outsb
dec
lahf
test
in
dec
inc
popf
fnstcw
mov
in
mov
mov
mov
jno
negl
loopne
fdivl
adc
sahf
rcr
cmp
pushf
jge
neg
ss
dec
mov
push
inc
and
or
shr
jo
add
adc
mov
mov
dec
mov
pusha
mov
xor
mov
xor
daa
add
imul
xor
not
xor
xlat
add
addb
jne
jns
cmp
cltd
push
mov
ret
dec
lcall
mov
and
mov
add
inc
mov
and
mov
mov
sti
ljmp
inc
pusha
sub
xlat
mov
and
pop
ja
mov
mov
sub
loopne
xchg
push
mov
and
pusha
inc
ret
mov
sbbl
push
data16
pop
je
xchg
sahf
sbb
pusha
mov
xor
cmp
pusha
mov
andb
rolb
cmp
pusha
dec
aad
adc
ja
fistps
ds
gs
xor
push
pusha
mov
aas
bound
jns
rolb
push
inc
add
pop
aas
and
add
mov
mov
jo
je
cmpsb
mov
inc
shlb
sbb
xchg
cmc
xchg
clc
dec
or
aaa
add
sbbb
andb
pusha
inc
lcall
mov
fnstcw
aam
mov
stos
fwait
cmp
shrb
pusha
or
subb
bound
and
ss
xlat
clc
outsb
rorl
inc
test
rolb
xchg
sub
sub
or
jge
adc
and
cmpsb
add
jg
and
xchg
outsl
cmc
add
and
and
push
imul
bound
add
or
fadd
repnz
sbb
and
fcmovb
push
push
insb
xchg
cmpsb
pusha
loopne
movsb
rolb
shll
lock
loope
cmc
and
aam
or
adcb
mov
pusha
pusha
movd
xchg
xor
popf
inc
aam
xor
push
inc
dec
mov
lahf
sbb
loopne
sahf
push
pop
sbb
cmp
mov
mov
out
fdivrs
lock
sub
mov
jbe
and
mov
pusha
loopne
stos
mov
adc
push
ds
inc
or
pushf
mov
inc
mov
adc
stos
andb
lea
inc
dec
sub
cwtl
xlat
or
shl
pop
pushf
fldt
mov
loopne
cmpsb
shlb
and
sarb
loopne
lret
adc
mov
inc
mov
jmp
and
sub
movsb
and
add
loope
cwtl
and
scas
bound
or
mov
cltd
adc
arpl
push
shlb
pop
mov
and
xorb
xor
movsl
jecxz
xchg
push
rol
in
stos
loopne
pushf
movsb
addb
jecxz
or
pusha
mov
pusha
in
out
sbb
out
in
stos
andb
push
inc
rclb
pusha
mov
loopne
mov
mov
mov
inc
inc
xchg
rcrl
lock
dec
mov
add
rclb
test
push
push
adc
and
shlb
mov
imul
mov
and
add
push
xchg
out
or
mov
mov
das
popa
lahf
sbb
mov
cmp
mov
or
out
xchg
sub
pusha
lret
clc
lods
les
inc
and
dec
dec
es
and
dec
outsb
add
fiadds
pusha
add
loop
into
cmp
mov
bound
out
push
inc
mov
loopne
pop
dec
add
push
xchg
and
lods
mov
pusha
xchg
insb
mov
leave
mull
xlat
int3
jmp
inc
stos
loopne
push
stc
fs
pop
push
xor
cmp
cltd
sbb
stos
and
push
ss
or
and
and
testl
and
add
and
inc
sub
mov
shlb
and
mov
inc
pusha
adc
and
jmp
and
cmpsb
inc
mov
arpl
dec
les
mov
fidivrs
dec
xor
cmc
outsb
gs
mov
xor
fmuls
or
addb
mov
and
inc
add
shlb
cmp
into
popa
lret
and
cli
fs
cmp
dec
repz
xlat
pushf
cld
dec
push
add
pusha
xor
mov
mov
cmp
fisubrl
fbstp
daa
add
ficoms
nop
movsl
arpl
mov
dec
pop
lock
ror
mov
and
shlb
jb
enter
lods
das
mov
aaa
pusha
movsl
aas
mov
mov
pusha
add
orb
and
and
xchg
cmpsl
lea
dec
fdivrl
outsl
pop
sti
sarb
inc
mov
mov
rolb
xor
and
adc
or
out
push
jp
mov
push
data16
jb
add
pusha
and
inc
movsl
adc
sbb
push
es
mov
das
test
mov
rolb
sahf
push
xor
std
fsubs
lcall
sub
sbb
and
jg
outsb
or
inc
pop
adc
cmp
mov
rolb
dec
xor
ljmp
inc
addb
hlt
js
xchg
pop
or
add
daa
aam
mov
rolb
mov
dec
movsb
mov
in
mov
and
xchg
cmp
xchg
add
loopne
jle
adc
enter
loopne
dec
pop
and
pop
push
sbb
addl
idivb
mov
in
loopne
inc
sbb
cld
shrb
and
jmp
xchg
insb
pop
xchg
lcall
inc
pop
dec
enter
es
xchg
push
adc
andb
insl
ss
add
icebp
enter
pop
mov
lahf
mov
loop
clc
jb
cmp
arpl
mul
scas
xchg
lret
and
cmpsl
dec
into
cltd
bound
xor
mov
aad
ds
enter
jo
pop
aas
cltd
aaa
pop
roll
loopne
and
or
rcl
and
imul
pop
loope
fisttpl
addb
clc
lret
push
loopne
and
xor
js
push
dec
test
loopne
xchg
mov
pop
dec
lea
and
pusha
loopne
and
stos
loopne
mov
pop
dec
dec
addl
loopne
and
dec
or
fldenv
leave
jb
mov
push
je
addb
mov
mov
shl
pushf
mov
mov
lcall
or
rol
and
push
xchg
icebp
loope
shlb
pop
and
inc
sub
cmp
lret
push
push
inc
pop
sub
out
pop
push
ss
cmp
adc
push
xchg
inc
fistpll
into
push
jp
pop
or
loope
and
jle
or
xchg
stc
movsl
and
clc
loop
xor
data16
mov
xor
add
das
out
outsb
mov
cli
sub
and
push
inc
loopne
aad
cmovno
insl
xchg
addb
push
ds
mov
cmp
push
sbb
enter
inc
pop
test
addb
add
and
push
dec
xor
add
shl
sub
xor
popf
cmpsl
push
inc
cli
cmpsb
shlb
loopne
and
mov
mov
ret
scas
pusha
add
fists
jo
cmp
inc
push
popf
cmpsb
and
fidivl
pop
sbb
rorl
xchg
outsb
push
mov
push
mulb
mov
in
add
loopne
sahf
mov
mov
loopne
mov
and
fbld
mov
addr16
pop
push
data16
addb
rolb
jo
cmp
push
inc
shlb
loopne
repnz
and
test
cmp
addb
cld
aam
shlb
jno
pusha
loopne
in
andb
and
or
loope
pusha
loopne
jns
cmp
rorb
je
pusha
sbbb
movsb
inc
pusha
xchg
sub
mov
xchg
fwait
mov
sbb
lea
iret
addb
int
ret
and
jecxz
pop
push
loope
icebp
push
mov
test
mov
sarb
pop
popf
sbb
call
jl
loope
sar
loop
add
shl
inc
std
mov
mov
in
lret
pusha
or
inc
jnp
or
cmp
xor
mov
mov
dec
mov
rorb
pusha
pusha
icebp
inc
ret
push
add
sbb
loopne
lea
dec
or
add
popf
or
xorb
pop
es
addb
add
pusha
xor
cmp
out
push
inc
shrb
mov
addb
sbb
add
add
inc
mov
and
add
insb
xor
shl
jmp
or
xchg
popa
es
add
addr16
mov
pop
js
rol
imul
in
pop
mov
rclb
dec
sbb
mov
fcompl
fiadds
js
incb
data16
jecxz
jb
in
pop
popf
pop
and
push
fdivrl
scas
andb
sti
test
and
pusha
test
and
popa
mov
pusha
rolb
xchg
in
xor
mov
and
jg
sub
shrb
in
push
push
loopne
repz
push
push
divl
pop
ss
pmaxsw
clc
aad
inc
push
pusha
pusha
mov
xor
mov
and
cmp
mov
pop
sbb
arpl
pop
mov
popa
ror
and
pusha
pop
push
xchg
mov
xor
and
movsb
and
sarb
movsl
cmp
inc
cmpb
mov
aam
aad
ja
add
das
sbb
mov
cmp
push
add
inc
jae
dec
ret
push
test
jmp
mov
adc
mov
push
push
int
enter
push
mov
xor
push
xchg
mov
hlt
jle
fs
test
inc
out
add
loopne
stc
mov
andb
xor
sub
push
ret
xchg
out
pop
out
push
scas
and
adcl
mov
ret
test
mov
fs
incb
fcmovne
mov
add
shlb
sbb
imulb
add
lods
jmp
out
lret
xor
push
xor
nop
dec
fnstcw
inc
push
pushf
rorl
and
outsb
clc
jle
cmc
push
adc
fs
inc
ja
ret
jns
add
rclb
into
hlt
add
and
xchg
push
inc
repnz
mov
and
pushf
bound
rol
je
fwait
sahf
jecxz
xor
pop
out
ret
lahf
jge
cld
pop
push
mov
mov
add
push
push
daa
rorl
and
mov
cmp
push
movsb
inc
and
jno
pop
movsb
and
cmpsl
ljmp
and
xchg
js
rcrl
pushf
pop
call
add
dec
jae
notb
sbb
inc
and
leave
test
pusha
rcrb
dec
inc
out
mov
or
add
add
dec
inc
xchg
shrb
jle
loopne
adc
insb
sarl
fistl
je
popa
jne
aad
push
fnstenv
xchg
nop
bound
outsl
push
mov
gs
inc
inc
push
insb
into
cli
loopne
push
data16
lock
fsubrs
jnp
fsubrp
sahf
push
shl
clc
inc
sbb
andb
lret
and
rcl
test
mov
jbe
jmp
shlb
call
sbb
sub
call
cld
inc
xor
pusha
pusha
mov
pusha
and
test
loopne
rorl
mov
mov
test
subb
mov
pop
lret
inc
aas
mov
mov
rol
data16
mov
adc
or
mov
xor
mov
add
sbb
and
pusha
dec
mov
cmp
imul
cmpsl
lahf
pop
ror
or
in
jl
stos
mov
or
and
dec
and
loopne
test
ret
fwait
jmp
xchg
fnsave
fs
pop
xchg
and
rcrl
rolb
cld
scas
rcr
out
pop
fsts
pop
in
lret
pop
in
lret
fstpl
cmp
loopne
es
mov
adc
loopne
jb
mov
andb
movsb
add
shrb
push
jno
mov
pop
sub
and
cmpsl
in
fimull
pop
rcrl
jmp
shlb
push
push
addb
jmp
loopne
cmp
rolb
pusha
mov
mov
scas
loopne
cmp
and
xor
inc
addb
adc
jns
inc
xor
les
xorb
lock
insl
dec
daa
ss
fptan
xlat
ja
dec
fiadds
loopne
sub
mov
je
and
cltd
bound
loope
mov
add
out
ljmp
filds
mov
sbb
xor
out
mov
push
loopne
int3
stc
cmp
je
das
sbb
fdivrl
mov
loopne
adc
pushf
xor
cmpsl
mov
fs
rol
arpl
inc
ror
jmp
int
or
repnz
cmpsb
shl
dec
jno
xor
andb
xchg
pop
icebp
and
repz
add
call
loopne
cmp
shlb
jnp
addb
jge
call
lret
add
test
and
loopne
cmp
mov
xchg
inc
mov
push
dec
sub
icebp
xor
jecxz
repnz
mov
test
addb
loopne
add
shrb
pop
lods
adc
repz
mov
iret
outsb
data16
pusha
pop
mov
add
in
push
xchg
add
pusha
jae
ret
inc
in
xchg
or
mov
inc
jbe
inc
lock
ss
dec
shlb
dec
pushf
ss
popf
pusha
cmpsb
loopne
out
aad
sub
mov
outsb
jae
fwait
push
xchg
enter
in
cmpsb
and
mov
mov
addb
add
and
inc
xchg
sbb
aad
mov
fldpi
jb
sub
push
pusha
cli
or
pusha
sub
pusha
mov
mov
push
sub
mov
lods
inc
rcl
inc
adcb
out
push
js
jmp
mov
pop
sub
push
out
mov
addb
sbb
jecxz
xchg
mov
mov
xor
rcl
xor
or
pop
sti
test
mov
adcb
in
inc
bound
in
dec
sti
push
inc
inc
mov
mov
aas
pop
mov
dec
sub
loopne
xchg
imul
int
xchg
insl
lcall
loopne,pn
es
xchg
dec
sbb
dec
pushf
addr16
ror
insb
mov
movb
add
xlat
mov
jle
sub
inc
bound
cmpxchg
test
mov
repnz
fisttpl
ljmp
and
add
dec
scas
in
bound
sub
aaa
into
icebp
popa
lret
xchg
xlat
int3
daa
ret
aas
ret
pop
jae
push
and
inc
popf
repz
imul
int3
jmp
inc
call
enter
test
lret
in
cmc
lahf
adc
loope
inc
rclb
mov
fidivrs
and
pop
push
add
pusha
inc
adcl
and
aam
and
test
and
aas
and
shll
imul
sub
fs
es
pop
or
lcall
push
jmp
pop
cmp
loop
fs
stc
sbb
and
mov
dec
push
js
rol
mov
add
int3
loope
mov
gs
pop
cmpsb
shlb
inc
addb
subl
mov
ret
clc
adc
jbe
push
mov
inc
inc
jo
mov
pop
es
shl
jmp
cmp
xchg
jns
xor
aad
insb
fnstcw
orb
or
dec
in
mov
pusha
imul
inc
push
pop
ds
sti
jge
inc
mov
pop
popf
sbb
pop
das
rol
je
nop
add
rol
sub
inc
icebp
pusha
mov
and
and
mov
push
cs
and
lret
aas
int
push
jno
add
movsb
add
in
and
push
out
add
ljmp
dec
jb
jge
aam
xchg
sbb
rcl
inc
es
inc
sahf
vcvtpd2dqx
pop
in
mov
jns
pusha
and
scas
mov
stos
shlb
adc
rol
aad
xor
dec
cld
rolb
jb
mov
or
add
int3
or
xchg
sbb
sub
loopne
mov
test
sbb
xlat
das
inc
xchg
pusha
xchg
sarl
jge
pop
mov
push
push
mov
ss
mov
xor
out
daa
nop
dec
sub
pusha
repnz
gs
ret
mov
inc
std
cld
ss
test
mov
insb
mov
pop
cli
push
add
mov
dec
imul
shlb
mov
sub
pusha
jg
fchs
push
add
lahf
ss
or
enter
adc
and
inc
pusha
cltd
imul
loopne
jbe
ljmp
idivb
push
fdivrs
jnp
hlt
rorb
imul
xor
jle
push
sbb
xor
lods
movsl
jb
mov
in
stos
movsb
and
sahf
mov
out
mov
pusha
add
push
inc
jnp
xlat
sbb
xchg
lds
xchg
xchg
cmc
mov
mov
popf
cmp
sub
xchg
push
into
xchg
add
inc
shrb
jp
aas
jmp
jle
daa
in
loopne
mov
pop
test
pushf
adc
cmp
cli
dec
pop
aam
cmpsl
out
add
push
inc
inc
stos
cmpsb
inc
add
xor
pop
sub
clc
add
gs
fwait
mov
shrb
push
out
cmp
pop
scas
arpl
mov
leave
xor
sahf
jle
jg
ficompl
adc
in
negb
lret
push
pop
shll
outsl
es
add
adc
mov
or
and
lret
mov
mov
movsb
rolb
xlat
xchg
jo
fimull
loopne
repnz
sub
imul
mov
inc
add
rcrl
xchg
xor
or
mov
sbb
pop
jno
push
adc
ficomps
xor
roll
loopne
or
shlb
in
sub
scas
rolb
dec
xchg
fbld
pusha
and
rclb
pusha
pusha
loope
pusha
mov
loopne
xor
and
stc
push
outsl
and
cmc
shrb
addr16
pop
sbb
inc
jecxz
lods
loopne
or
and
stos
cmp
pop
cli
lret
lock
adc
add
jno
push
shl
sbb
jecxz
mov
add
jl
inc
adc
mov
xchg
adc
jmp
loopne
lahf
int3
repz
inc
sub
xchg
xor
jmp
sub
inc
test
aam
repz
jo
add
xchg
pop
out
mov
lahf
in
and
and
mov
ss
out
out
dec
pop
mov
fistpl
andb
jg
shl
imul
addb
jns
mov
shr
sbb
dec
fdivp
outsb
aaa
pop
mov
mov
mov
subb
pop
fs
pop
xchg
rolb
mov
add
andb
lahf
sti
cmp
shlb
jle
dec
mov
repz
mov
addb
inc
pop
push
jmp
dec
dec
xchg
or
and
js
andb
pop
jle
into
sbb
imul
mov
sahf
add
add
mov
and
and
mov
mov
and
sahf
iret
adc
sbb
mov
mov
push
loopne
inc
pop
addr16
mov
inc
sbbb
dec
sbbl
call
add
push
xor
dec
mov
or
xchg
add
mov
dec
out
add
fdivs
adc
outsb
mov
icebp
stos
add
outsb
xchg
test
mov
pusha
shlb
push
out
xchg
repz
in
xchg
out
fadds
pop
fstl
lods
push
js
jae
lret
sar
and
pusha
adc
lock
call
sbb
pop
push
jmp
push
fstps
cmp
mov
cmpsb
pusha
shlb
add
jg
xor
sub
cmc
pop
scas
test
repnz
cmp
loopne
mov
data16
add
andb
lcall
jmp
insl
hlt
mov
inc
xor
sbb
adc
mov
or
addb
mov
fs
dec
les
push
mov
mov
shlb
or
jbe
adc
jb
andb
mov
push
pop
aam
push
inc
scas
pop
mov
aad
shlb
outsl
lret
jnp
push
call
mov
add
dec
leave
xor
inc
push
mov
sbb
mov
fiaddl
and
pusha
and
mov
inc
and
cmc
add
pusha
inc
mov
inc
mov
add
loopne
dec
add
ret
xor
and
int3
repnz
and
jne
adc
push
mov
test
and
xchg
lock
bound
add
mov
push
add
xchg
mov
call
inc
jbe
xchg
jbe
jmp
xor
clc
mov
adc
inc
pusha
sbb
or
sbbb
mov
les
mov
lds
in
shll
sahf
iret
pop
xchg
xor
ret
push
out
adc
mov
loopne
sub
lods
insb
dec
lcall
jg
mov
add
adc
lcall
pusha
add
and
pop
mov
inc
inc
pushf
fisubl
fcoml
lock
push
aam
shrb
add
repnz
and
push
add
push
inc
jbe
and
bound
pusha
adc
cmc
and
daa
cmp
mov
loopne
or
pop
inc
shr
addr16
cli
jae
fdivs
and
and
inc
test
adcb
and
ror
popf
mov
mov
cmp
mov
addb
or
pusha
mov
mov
test
cmpsb
add
loopne
pusha
fcomps
aad
rolb
insl
jno
popa
add
and
movl
adc
mov
loopne
adc
push
out
int3
out
inc
int3
xchg
mov
cmp
mov
and
mov
mov
xchg
dec
mov
loopne
mov
jle
cmp
sub
shrb
rolb
xor
mov
xorl
push
lea
pop
push
loopne
out
sbb
xor
bound
aad
mov
inc
fwait
adc
jg
dec
jns
mov
push
in
lea
mov
xchg
lcall
ljmp
mov
pop
out
fsub
mov
lods
sbb
bnd
add
mov
xor
andl
scas
loopne
xchg
shl
bound
popf
incb
mov
mov
pusha
addb
subl
inc
inc
movsl
std
out
pop
cmp
push
add
jmp
mov
add
negb
sub
imul
mov
mov
out
imul
les
dec
fldcw
loopne
outsb
xchg
addb
pushf
movsb
mov
int3
and
push
scas
cli
push
and
icebp
mov
imul
imul
repnz
mov
jmp
jle
sti
add
addb
xchg
adc
mov
mov
or
sub
inc
cmp
test
orb
loopne
inc
and
lahf
test
cmp
add
insl
xchg
jne
andb
std
ficomps
sbb
in
rol
mov
mov
push
mov
and
rorb
mov
push
mov
aad
jp
icebp
or
mov
dec
pop
cmp
loop
or
add
data16
mov
push
js
jno
add
stos
inc
pusha
jae
je
fimull
jle
inc
mov
adc
bound
or
add
or
pop
pop
dec
ja
cltd
mov
jle
out
mov
add
mov
loopne
int3
mov
add
mov
mov
jmp
push
lcall
mov
sbb
mov
mov
in
pop
out
data16
add
gs
sahf
and
push
xchg
and
add
add
cmp
push
xchg
leave
stc
push
iret
xchg
push
inc
and
aas
add
jl
pop
jo
sub
out
and
scas
xchg
or
mov
fidivs
out
adc
js
arpl
popa
dec
push
pop
fs
test
and
repz
mov
mov
inc
sarb
lock
cmp
sahf
sub
adcb
rol
inc
push
es
call
test
pop
xchg
pusha
shll
pushf
lret
andb
lahf
call
in
and
add
insb
pushf
xor
add
push
mov
cmp
test
inc
cmp
in
fwait
mov
inc
ss
fstp
or
pusha
lds
adc
loop
add
shr
mov
mov
loopne
mov
sbb
cmp
add
cld
fildl
or
and
mov
cmp
xor
fisubrl
mov
dec
xor
xchg
jb
fwait
sbb
pop
mov
sbb
pop
pop
and
xor
popa
aaa
out
pop
divb
movl
pop
shll
cwtl
and
shlb
cmp
xchg
mov
pusha
stc
dec
push
or
pusha
loopne
jnp
push
jno
xor
jo
add
lret
outsl
rcr
jg
ja
adc
fdivs
testb
loope
mov
outsb
movsb
loopne
cmp
shlb
pop
pop
lds
out
lret
adc
lods
ret
jnp
mov
jnp
pusha
pusha
mov
xchg
or
loopne
push
inc
mov
sub
bound
pop
jecxz
mov
jge
out
in
insb
daa
sbb
add
or
mov
inc
push
dec
and
xchg
stc
rcl
inc
and
and
mov
add
inc
stos
insl
jecxz
mov
mov
jb
and
add
add
and
lock
ds
aad
push
lret
sbb
cmp
ret
pop
mov
into
inc
cltd
addl
sbb
mov
and
xchg
ss
sub
rorb
jae
xchg
cld
push
add
adc
les
dec
stos
pusha
xorb
nop
bound
jecxz
outsb
call
or
out
int
lods
jne
push
rcl
or
inc
lods
fucomip
pop
mov
and
loopne
fcomps
adc
or
mov
add
lock
test
shlb
xor
pusha
shr
inc
addb
inc
push
or
push
imul
ss
addb
test
int
jge
pop
movsb
add
push
xchg
xor
ret
mov
inc
xor
shlb
pop
lods
sbb
lret
lahf
add
lods
jge
inc
outsb
or
loopne
cmp
pop
jmp
adcl
sbbl
out
das
inc
test
jae
rolb
shl
mov
loop
rcll
xchg
and
js
xor
cmp
xchg
jae
mov
inc
fcomps
addr16
lods
loopne
mov
xchg
dec
inc
adc
in
jl
call
pushf
jno
jmp
mov
addb
mov
jmp
dec
js
enter
xchg
push
fdivl
or
cmp
lcall
cmp
inc
inc
pop
inc
mov
fisubs
mov
mov
jns
stos
add
ljmp
cmp
pop
xor
ret
inc
je
jbe
cmp
push
adc
jo
dec
out
mov
inc
popa
sbb
data16
xor
or
andb
lds
aam
cmp
mov
sub
and
inc
mov
inc
jp
inc
jl
andl
cmpb
aad
pushf
or
lods
mov
push
out
sbb
loope
out
sbb
ds
pop
fldcw
pusha
loopne
push
inc
cmpb
jne
loope
stc
sub
jmp
mov
loope
arpl
push
dec
cmp
inc
int
sbb
ret
shlb
call
fwait
les
xchg
jp
mov
xor
pop
add
in
push
lcall
push
sbb
jnp
dec
mov
push
call
pusha
and
add
fcmovnb
mov
ja
out
cli
shll
and
mov
and
das
test
push
push
jmp
inc
js
fwait
inc
push
push
inc
pop
or
jmp
insl
mov
cwtl
mov
mov
xor
jb
add
cmp
add
mov
or
xor
ljmp
and
cmpsl
add
add
leave
sub
rolb
repz
test
push
push
popf
stos
shlb
mov
sub
inc
nop
xor
or
insl
inc
push
andb
orl
arpl
fidivrs
out
iret
ljmp
mov
out
test
cli
lahf
test
or
shl
cltd
nop
in
inc
add
sub
shr
dec
cmp
lret
call
and
add
hlt
mov
iret
xor
mov
pop
adc
pusha
push
aas
scas
add
mov
fstpt
pusha
mov
mov
sub
add
pop
shlb
pusha
cld
ret
and
jle
loope
divl
fstl
push
push
pop
and
push
sub
call
into
jp
ja
pushf
in
mov
push
std
pop
jle
mov
mull
pusha
pusha
in
sbb
push
test
out
push
or
cli
stos
pusha
loopne
cmc
xor
insb
mov
orb
jns
outsb
mov
dec
incb
shll
inc
jne
in
mov
dec
fcom
mov
hlt
add
loopne
or
mov
cmc
jno
loopne
mov
inc
mov
into
cmp
and
sbb
xor
rorb
xor
cli
adc
enter
jb
fbld
lret
imul
scas
pusha
add
inc
rcrb
and
and
mov
mov
cmp
icebp
cmc
push
xor
rolb
shlb
mov
and
xchg
lods
mov
push
in
lea
add
add
cmp
cmp
mov
iret
int3
dec
aas
dec
addb
cmp
fnstcw
mov
pop
fstps
sub
loopne
pop
or
sar
sbb
ret
nop
push
call
rcr
push
pop
fucomp
pop
das
mov
and
pop
inc
sub
and
cltd
fwait
ds
xchg
mov
insb
mov
loop
sub
fs
icebp
stos
mov
loop
loopne
lods
and
or
rolb
lret
gs
out
mov
sub
mov
pushf
add
rdmsr
test
ret
hlt
in
sub
cmp
push
cld
or
and
popf
scas
loopne
sub
jle,pt
mov
mov
add
test
inc
or
into
sub
sbbl
ja
scas
loopne
inc
lods
addb
in
and
nop
out
lcall
bound
pusha
push
pusha
sbbb
rclb
xchg
add
cmpsl
fiadds
int
mov
xchg
or
jo
adc
inc
in
iret
adc
pusha
loopne
ljmp
xchg
into
xchg
imul
aaa
aas
sub
dec
cmp
shlb
mov
sbb
jae
shlb
aaa
iret
rorl
mov
mov
pop
sub
xor
and
and
mov
pop
mov
dec
leave
ficoml
outsl
ss
and
lods
and
mov
ficompl
inc
cmp
mov
xor
ljmp
ss
nop
inc
sbb
pushf
mov
sbb
cmp
loop
or
mov
jne
adc
js,pt
jne
push
ss
mov
out
mov
ds
xchg
iret
sub
inc
int3
fs
push
repz
jp
pop
sub
push
xchg
pop
lods
rol
and
mov
pop
inc
push
dec
dec
sbbl
out
call
cmp
pop
push
or
add
insl
dec
fdivl
mov
addl
inc
outsl
dec
jg
push
inc
and
ds
rorl
andb
dec
fldenv
push
rolb
loopne
pop
adc
jmp
mov
fiaddl
ljmp
jl
add
and
mov
loopne
cmc
inc
sar
sub
pusha
lock
repz
lods
loopne
xor
fwait
or
addb
movsb
inc
adcb
mov
add
rclb
fildl
xor
and
mov
mulb
shrb
jecxz
stc
aam
or
loopne
and
jns
dec
mov
pusha
adc
shr
pusha
inc
mull
add
add
add
addb
addb
jno
sbb
call
xchg
mov
push
mov
aas
mov
sti
adc
aas
jl
rcrb
out
in
sub
inc
xchg
inc
sbb
in
jne
push
add
rol
jecxz
adc
dec
fdivrl
dec
test
inc
push
pop
lods
scas
xorl
arpl
inc
lea
pusha
into
mov
outsl
mov
movsl
imul
icebp
out
and
inc
mov
sub
je
and
inc
les
loopne
cmp
neg
pop
and
add
mov
lret
inc
pop
leave
adc
mov
jbe
sarb
push
jge
sub
leave
js
in
rorl
pop
pop
adc
jb
lcall
cmpb
subb
notl
mov
jo
lods
int3
cli
or
or
or
or
test
sbb
mov
sarb
rorb
or
push
mov
dec
mov
fsubl
cmp
cmpsb
add
addb
loopne
inc
pushf
fwait
sbb
sbb
scas
pusha
pusha
inc
mov
or
pusha
pop
adc
sbb
xor
pop
lods
arpl
xchg
or
jecxz
pusha
mov
push
sbb
mov
pusha
leave
mov
dec
and
mov
push
stc
jle
sbb
scas
data16
sbb
push
in
pusha
sahf
iret
lock
add
mov
cmp
and
lea
cmp
jecxz
fmull
dec
sub
inc
int3
sub
cmpb
imul
rorb
into
outsl
clc
lret
sbb
andl
mov
adc
xchg
aas
loope
ds
jmp
mov
div
loope
data16
rcrl
jle
decl
cmpps
and
and
mov
out
stos
add
andb
rolb
loope
jbe
xchg
xor
pushf
cmp
test
adc
loopne
pop
iret
jbe
sbb
scas
dec
jle
scas
and
inc
addb
int3
mov
repz
andb
and
into
push
mov
xor
mov
jge
std
adc
and
add
push
adc
icebp
out
push
mov
mov
lods
inc
mov
repnz
and
pusha
lods
push
and
mov
and
adc
jae
std
movsl
pop
pushw
add
mov
loope
xor
sub
popf
pop
lods
loopne
lock
mov
mov
pop
loope
std
sahf
add
pop
pop
fs
outsb
rclb
fwait
mov
fistpl
push
sahf
arpl
xlat
lret
add
xchg
outsb
lea
and
inc
inc
daa
push
mov
or
ret
pop
sbb
pusha
adc
mov
jle
xchg
cmp
andb
xchg
leave
test
dec
adc
aas
push
or
add
gs
pop
push
aam
out
ss
movsl
sub
inc
shl
neg
push
push
xchg
addb
sub
hlt
dec
mov
mov
pop
sarl
pop
adcl
mov
xchg
clc
leave
fisubrl
and
mov
push
shlb
mov
mov
jmp
push
xor
dec
mov
jge
mov
lods
xchg
cltd
insl
scas
mov
andb
subb
fcompl
rclb
bound
cmp
subl
lret
push
cmp
scas
add
pop
outsl
addr16
addb
mov
stc
std
cmp
xchg
or
and
add
inc
add
jg
cmp
and
dec
xor
pop
in
hlt
xchg
arpl
pop
imul
pusha
repz
and
add
mov
mov
stos
rolb
frstor
push
or
or
out
out
pop
lahf
imul
xchg
cmp
loopne
push
inc
cwtl
cmp
addr16
dec
insb
pop
mov
inc
pusha
mov
cmpsl
testl
inc
adc
push
shlb
push
mov
add
rolb
icebp
or
loopne
and
add
mov
test
add
movsb
inc
and
pop
pushf
lods
and
sub
sahf
fwait
mov
in
and
ficompl
not
adc
sbb
dec
ret
lock
pop
mov
and
loopne
repnz
xchg
cwtl
push
add
adc
lea
pusha
cmpb
loope
dec
out
lret
xor
sbb
add
mov
out
sbb
jne
ljmp
or
stos
loope
cmp
xchg
ficompl
aad
jg
inc
xorb
mov
dec
out
mov
decb
pusha
add
pop
dec
shll
pop
dec
aam
es
loopne
cli
inc
xchg
loopne
push
pushf
inc
xor
add
das
and
in
mov
test
push
xor
inc
orb
add
add
inc
mov
xchg
clc
jae
adc
cld
sbb
add
push
in
pusha
shlb
sbb
loopne
test
add
and
and
inc
loopne
es
inc
pop
cltd
movsl
test
pop
and
loopne
std
and
or
adc
jl
inc
push
adc
jb
andb
push
subl
popl
pop
xchg
dec
push
xchg
loopne
pop
in
push
aad
jns
cmp
lea
decl
xor
jne
movsb
inc
loopne
loopne
js
aam
dec
adc
push
xchg
inc
pop
gs
or
inc
jmp
imul
pusha
xor
add
xchg
mov
jp
add
xchg
pop
and
loopne
in
pop
add
lcall
mov
out
js
ljmp
sbb
add
adc
mov
sbb
or
xlat
stos
and
int
shlb
sbb
shl
ret
xchg
jle
pushf
mov
inc
addb
in
les
xor
xchg
xor
push
adc
fldcw
andb
sarl
adc
fwait
push
outsb
add
rol
repnz
fidivrs
stos
cld
pop
ljmp
hlt
pop
call
push
cmp
addb
cmp
cwtl
sarb
int
dec
jge
popf
loop
pop
push
cmpsb
shlb
and
jns
out
xor
in
iret
jle
sbbl
adc
xchg
jne
push
sub
loopne
mov
cltd
fcom
adc
movsb
add
cmpsb
shlb
inc
mov
fs
je
lcall
jp
clc
not
jl
cmp
dec
clc
jl
push
pusha
loopne
outsl
mov
fnstsw
xor
pop
dec
ds
mov
sub
ja
push
jp
mov
loopne
insb
add
sub
pushf
mov
cmp
movsl
aad
movsb
andb
dec
je
les
ja
xor
push
sbb
jnp
sbb
mov
ja
sub
rorb
jae
ficomps
mov
addb
in
xchg
gs
movsl
pop
push
mov
jecxz
and
dec
sub
aas
sub
loopne
jo
in
sub
shlb
and
loopne
lock
add
xchg
add
and
inc
inc
mov
lret
mov
pop
sbb
push
and
dec
es
push
push
pusha
adc
xchg
lret
insb
push
inc
and
push
mov
loopne
push
imul
sub
jae
xchg
fidivrs
xchg
insl
pushf
jns
aaa
dec
data16
or
pop
cli
add
cltd
dec
das
into
es
or
pusha
rorb
cmp
rol
call
mov
lds
dec
out
sbb
in
roll
dec
into
std
out
and
ret
inc
jbe
xchg
clc
cwtl
jmp
xor
decb
dec
scas
loopne
test
fmul
gs
or
push
inc
andb
xor
pop
cmc
movsb
mov
mov
jno
dec
xchg
bound
jg
in
fcmovnu
test
adc
ljmp
sbb
test
loopne
mov
and
push
insl
xchg
pop
addr16
mov
mov
test
lret
mov
add
pusha
fistps
fcoms
jne
xchg
sbb
popa
push
mov
add
test
loopne
add
jo
adc
xor
ret
inc
xor
xor
ljmp
and
xor
shlb
aad
loopne
jae
inc
movl
insl
loop
push
fstpl
dec
lods
rol
or
in
pop
pop
xor
inc
or
subb
jns
popf
imul
sub
inc
insl
inc
sub
sub
dec
fcmovb
inc
aaa
lock
movsb
pusha
mov
jl
adc
or
add
xor
or
and
repnz
add
mov
xor
cmp
rorl
adc
jmp
arpl
sbb
sbb
and
mov
jle
rcll
add
idivb
mov
arpl
clc
insb
xor
andb
mov
fiadds
lcall
test
loope
cld
jmp
jnp
test
and
nop
int
or
add
mov
push
mov
das
scas
and
sub
add
loopne
cltd
jb
jmp
xor
lcall
push
lret
pusha
loopne
push
lods
add
dec
inc
ds
mov
test
add
mov
bound
cmp
push
jno
push
das
test
aam
outsb
mov
adc
inc
jg
stos
add
jnp
loopne
inc
xchg
shl
sti
inc
push
rolb
mov
sub
pusha
sub
shr
leave
add
add
loopne
inc
pop
push
pop
jne
rolb
add
sbb
addb
mov
jg
push
jo
jl
xchg
iret
inc
dec
xchg
mov
pop
pop
lret
pop
std
bound
pop
mov
testl
mov
movsb
inc
pusha
popf
fcmovnbe
xchg
fsubs
and
pop
mov
mov
lret
shlb
pusha
pusha
jle
cld
jecxz
cmp
mov
pusha
add
cmp
inc
and
in
xor
addb
jne
add
jle
and
pop
test
pusha
adc
and
cli
cmp
rclb
fldcw
shlb
mov
dec
jg
adc
jno
roll
jg
fisttps
and
add
rorb
sbb
sahf
pop
loopne
adc
fistpl
mov
pusha
rolb
dec
push
lea
push
mov
mov
aad
fstpt
arpl
bound
dec
jg
jno
lods
push
pop
mov
xchg
mov
loopne
jno
negl
in
or
jo
ss
into
inc
add
popa
jno
mov
xor
sbb
addb
mov
jg
pop
fldl
or
pusha
add
and
test
into
je
data16
cmp
addr16
pop
fcmovnu
jbe
iret
movsb
pusha
or
or
mov
sbb
ja
jnp
loopne
cmc
lret
push
push
add
xchg
inc
pop
mov
mov
out
sbb
mov
adc
lret
add
cmpb
lahf
adc
leave
aas
mov
imulb
imul
sub
push
mov
ss
add
pop
cli
lods
mov
loopne
fwait
xor
movsb
pusha
shlb
xchg
andb
add
sub
and
in
mov
xchg
rcll
rolb
xchg
rcr
lret
push
shl
mov
loopne
mov
lock
pop
rorb
mov
mov
and
cmp
mov
jne
add
nop
popa
push
scas
add
pusha
adc
pusha
add
jmp
aad
icebp
cmp
pusha
pusha
into
add
test
loopne
mov
gs
test
loopne
and
push
cmp
add
sbb
xor
fdiv
xor
movsb
shl
loope
or
mov
rolb
or
out
jae
daa
popf
repnz
and
ret
or
lahf
jne
xor
inc
and
cmp
xor
pop
push
pushf
sub
xchg
cmp
push
add
fimull
loopne
xchg
and
roll
or
push
and
and
or
loopne
test
and
mov
add
pusha
and
add
pop
fisubs
pop
pop
test
and
mov
test
dec
inc
sub
add
cli
sbb
adc
int
clc
adc
in
imull
sbb
mov
clc
fldl
lods
pusha
pusha
ljmp
insl
xor
call
and
fbld
add
adc
mov
and
aaa
cmp
add
out
repnz
and
sarb
sbb
push
add
push
mov
mov
inc
insl
divb
bound
out
lods
sbb
add
sub
rclb
inc
pop
mov
mov
gs
rcrb
dec
arpl
das
cmc
test
mov
jns
and
cli
dec
fdivrs
std
movsb
add
hlt
inc
popa
ret
dec
jno
sar
pop
out
fcomi
leave
pop
inc
ds
movsl
out
mov
mov
mov
xchg
inc
mov
mov
call
lret
and
ret
sarb
inc
dec
movsb
inc
loopne
xchg
lock
inc
xchg
imul
mov
cli
or
loopne
adc
and
je
not
les
loopne
add
loop
hlt
xor
mov
and
jb
dec
inc
add
dec
stos
loopne
xchg
pop
outsb
stos
ret
jbe
ffreep
xor
movsb
add
xor
dec
jmp
gs
sbbl
and
andb
jmp
shlb
cmp
in
pop
dec
adc
xor
dec
call
jp
lahf
sub
mov
pop
adc
aas
pop
sbb
sarb
mov
iret
sbb
fs
xor
shrd
out
push
scas
mov
inc
loopne
inc
pop
pop
xchg
lds
out
test
add
iret
push
imul
sbb
shlb
loopne
pop
icebp
iret
pop
sbb
fbld
cmp
fcomp
ret
jl
mov
mov
mov
popl
dec
mov
mov
aad
aad
vfnmsub213sd
mov
add
cld
inc
addb
and
mov
pusha
test
add
pushf
scas
and
jle
adc
inc
daa
ss
fistpll
dec
out
push
add
xor
mov
negl
pushf
sbb
roll
push
fs
fistl
loopne
daa
mov
jmp
sahf
mov
subl
std
movsl
mov
inc
cmp
cpuid
rolb
ljmp
mov
xchg
sbb
mov
iret
pop
je
addb
andb
pop
clc
push
fiaddl
loope
pop
ds
movsb
andb
mov
pusha
adc
add
add
pusha
idivb
xor
call
pusha
mov
push
cwtl
fisubl
loopne
jo
jecxz
andb
lods
sub
subb
shlb
inc
icebp
repnz
pusha
daa
xor
int
xchg
or
jl
jns
xchg
inc
repz
push
pusha
pusha
mov
inc
lahf
inc
in
in
aaa
punpckhdq
jbe
popa
mov
sub
or
ret
movsl
sub
sbbb
mov
add
shlb
xor
cmp
outsb
adc
cmpb
inc
repz
cmpsl
inc
xchg
and
inc
into
popa
mov
lds
add
or
or
loopne
ret
pop
popl
pusha
and
cmp
loopne
fcmovbe
outsl
jecxz
xchg
fmuls
int
pop
mov
shlb
addb
lea
push
xor
mov
int
and
mov
mov
push
ss
andb
jecxz
jecxz
add
push
addb
mov
mov
imul
push
rolb
dec
sub
mov
jle
cmc
inc
fisubs
ret
nop
data16
mov
cmp
sub
jge
data16
sbb
fwait
or
loopne
mov
add
pusha
jge
icebp
divb
inc
and
add
lcall
mov
andb
mov
es
inc
iret
sbb
aaa
mov
inc
mov
fldl
xlat
rcrl
xlat
mov
je
jge
lret
leave
and
shlb
cmc
mov
mov
test
jp
test
push
push
dec
and
push
ljmp
xchg
inc
mov
loopne
rolb
call
mov
mov
xchg
pop
pop
flds
add
idivb
sub
inc
sbb
push
lods
and
mov
mov
add
andb
jnp
lods
div
dec
inc
lods
loopne
xor
cli
mov
addb
mov
inc
add
insl
std
and
leave
call
xchg
sbb
rolb
aas
fsubrs
shlb
pop
testl
inc
out
sbb
add
pusha
stos
stc
jnp
or
loopne
cmc
imul
rcrl
inc
iret
pop
mov
addb
fwait
test
movsb
loopne
outsb
add
mov
push
gs
lret
ss
pop
jl
cld
xor
jecxz
aad
pop
jl
andl
pusha
jbe
jne
clc
sub
mov
or
add
xor
ror
rol
incb
and
lock
mov
add
cld
aam
xor
adc
xchg
ret
stos
pusha
add
test
inc
pop
mov
shlb
cmp
mov
shrl
sbb
push
loopne
adc
divl
rorb
andb
out
jg
mov
xor
call
data16
pusha
fidivs
addb
push
add
shlb
xchg
sbb
out
scas
fcmovne
das
cmp
shrb
loop
mov
xchg
mov
xorw
or
shlb
sbb
mov
mov
loopne
incl
jnp
add
aam
inc
ds
jbe
mov
add
int3
and
imul
inc
inc
push
pop
stos
mov
mov
sbb
dec
sahf
mov
cmp
jae
ret
int
push
adc
rorb
pusha
inc
mov
mov
andb
mov
push
pusha
jmp
mov
addb
lret
dec
ja
mov
loopne
jne
add
cmc
sub
testl
loopne
add
push
addb
xlat
out
adc
cmp
and
lods
and
or
fdivrl
lea
je
adc
shrl
loopne
pop
xchg
subb
addr16
fdivp
or
out
std
movsb
loopne
mov
mov
push
pop
in
inc
jno
movsl
iret
xchg
mov
sarb
push
mov
xchg
xor
push
push
rolb
mov
and
inc
cmp
rolb
hlt
loopne
cmc
cmpl
fsubs
mov
and
cmp
pop
sbb
push
sub
rcll
pusha
mov
loopne
mov
loopne
xchg
jl
das
test
fwait
push
rorl
addb
loopne
xor
mov
fcmovb
test
pusha
mov
add
outsb
adc
and
loope
aam
sub
jb
push
pusha
add
mov
int
xchg
shl
dec
icebp
subps
mov
cmc
mov
andb
call
or
inc
push
sbbl
add
xor
subb
mov
es
sub
andb
mov
and
mov
push
stos
and
je
shlb
pop
jp
jg
jg
out
hlt
inc
loope
icebp
adc
mov
cmp
push
mov
insl
sub
add
cmc
out
jmp
jecxz
sbb
ljmp
jns
out
add
loopne
aam
xchg
jo
mov
fimuls
inc
xchg
lea
push
inc
testl
add
mov
addr16
push
xor
cmpsb
mov
pusha
andb
pusha
arpl
scas
shl
sbb
stos
nop
adc
stos
rol
xor
loopne
inc
cwtl
repz
dec
fs
loopne
outsb
shl
js
data16
shlb
mov
mov
ret
pop
idivb
mov
cmp
repnz
nop
cmpsb
and
aas
gs
sub
aad
mov
mov
shrb
lods
dec
add
sub
mov
lods
lods
popa
pop
insb
fstps
mov
int
test
je
push
neg
cmp
in
hlt
lahf
ud2
out
and
jno
rolb
dec
scas
mov
and
inc
sbb
addl
add
sub
add
sbb
ja
cmp
xchg
sub
aad
mov
mov
cmc
adc
lods
inc
pusha
test
and
rolb
xchg
push
loopne
xlat
push
mov
in
lods
rolb
inc
inc
adc
dec
loop
pop
sbb
loopne
jg
imul
adc
inc
js
es
rcr
dec
cwtl
movsl
xchg
xor
fidivs
push
mov
lods
adc
orl
repz
or
and
loopne
js
and
cltd
dec
dec
jne
out
insb
cmp
mov
fmuls
mov
mov
add
mov
je
lock
mov
mov
shlb
ret
mov
jp
xor
mov
out
mov
mov
shl
add
and
cmp
and
push
rcll
jns
xor
out
mov
rcrb
dec
data16
gs
add
jns
xchg
cs
por
loopne
nop
dec
sbb
mov
out
inc
inc
sub
cmpsb
andb
xchg
loopne
pop
sub
das
push
push
ja
test
clc
xchg
inc
dec
push
sub
nop
dec
jne
add
mov
out
inc
xor
add
mov
loop
imul
and
mov
lret
dec
inc
mov
xchg
mov
in
xchg
fildll
cli
jmp
jp
addr16
and
inc
loopne
and
and
mov
loopne
jmp
xor
dec
data16
jmp
ja
incb
and
lea
pusha
loopne
inc
cli
loope
fiadds
jmp
test
add
pop
mov
push
repz
mov
inc
sbb
inc
pusha
pop
pop
arpl
loopne
sti
data16
jp
movsb
add
addl
insl
std
inc
push
test
add
push
push
cld
ret
adc
cwtl
std
fildll
scas
repz
pop
imulb
adc
cmp
loopne
and
loopne
mov
cmp
mov
mov
sbb
push
push
push
mov
jbe
xlat
cmp
inc
adcb
cmovns
mov
cld
dec
arpl
cmp
pop
push
mov
mov
leave
jnp
int
or
add
fisubl
loopne
dec
xor
andl
enter
xchg
mov
and
push
pop
mov
rorl
add
adc
out
mov
jb
ds
pop
mov
mov
scas
andb
inc
pop
lods
push
dec
fsubr
xor
jo
or
sub
andb
rcrb
sbb
pusha
mov
out
bound
mov
js
xlat
mov
mov
inc
rcl
jno
cmc
leave
dec
or
in
sbb
mov
inc
fcmovb
scas
aas
outsl
adc
sbb
inc
loop
popf
add
mov
arpl
addb
loope
inc
sete
xchg
jp
sbb
pusha
mov
jl
loopne
fisubrs
mov
jge
mov
push
dec
sbb
js
int
inc
and
lods
ds
xchg
or
loopne
dec
cli
repnz
or
hlt
pop
lret
popf
test
mov
push
inc
loopne
stos
add
and
sti
out
pop
cmp
inc
clc
dec
ror
mov
push
call
into
and
fsubr
fsubl
inc
sbbb
adc
shll
sub
lods
scas
add
addr16
enter
and
movsb
add
xchg
jl
dec
add
xorb
mov
inc
xlat
iret
js
pop
movsl
popa
and
shrb
jno
ss
mov
fistpl
jg
jae
shl
addr16
pop
out
pusha
cmp
pop
mov
test
int3
data16
addb
mov
cltd
nop
xchg
rorb
cmp
xorb
push
bound
setae
add
loopne
xchg
xchg
jl
pusha
pusha
adc
lock
ss
sahf
cld
jne
mov
mov
outsl
stos
rolb
or
mov
arpl
adc
mov
in
dec
loop
dec
mov
and
int3
jae
rolb
popf
mov
pop
aaa
iret
cmp
pop
insl
mov
les
mov
adc
cli
add
sub
loopne
push
rol
aaa
in
adc
and
or
and
out
cld
insl
imul
xor
cmp
test
rolb
mov
pusha
xorb
clc
pop
xchg
loopne
mov
insb
fsts
fiadds
ret
mov
rol
add
and
inc
mov
rolb
es
in
add
xor
and
push
fildll
insb
dec
js
lods
shlb
popa
pop
and
inc
sbb
pop
in
push
addb
pop
dec
out
cltd
cmp
jne
pop
add
push
or
and
imulb
add
sahf
mov
scas
mov
mov
add
mov
sbb
pop
or
mov
inc
pusha
or
aas
dec
std
adc
sbb
mov
js
mov
shlb
shlb
les
inc
cmp
mov
and
push
mov
jg
push
rolb
out
sti
lods
lock
inc
icebp
dec
mov
loopne
cmp
loopne
add
ss
loope
mov
leave
jne
jnp
push
jecxz
int
or
inc
in
ffreep
or
shrb
imul
dec
pop
in
dec
ljmp
inc
xchg
fs
push
cwtl
mov
push
in
fisubrs
add
add
sbb
cmp
mov
xor
pop
stc
into
ljmp
jnp
scas
loopne
push
ds
and
xor
pop
push
add
and
cmp
inc
sbbb
mov
lds
mov
popa
mov
xchg
shll
add
mov
sub
mov
arpl
iret
xlat
push
add
in
mov
hlt
push
bound
aad
pusha
mov
inc
imulb
jb
ficomps
out
pop
cmp
sub
jmp
push
lock
push
cmp
jnp
andb
imul
rolb
loopne
sub
inc
and
add
dec
dec
sbb
mov
sarb
cmc
lea
pusha
add
add
and
cli
mov
add
loopne
cmp
xchg
cs
mov
outsb
xchg
fcoml
push
cmpsb
and
dec
testl
cmp
int
jae
imul
arpl
sbb
dec
cli
lock
dec
xor
mov
sub
and
mov
rcl
fsubrl
and
fldl
loopne
mov
addb
or
aam
or
fidivrs
add
xchg
ja
jl
ja
xchg
clc
shll
pop
ljmp
loopne
out
mov
inc
shlb
scas
mov
add
rolb
rclb
pusha
rcl
rorb
arpl
lock
inc
sub
mov
and
inc
fistpll
lock
push
push
lea
shlb
rclb
xchg
gs
jl
cmc
scas
pusha
pusha
sbb
sbb
sbb
and
sub
add
mov
push
fsubs
std
jns
xchg
mov
pop
popa
addb
andb
xor
scas
rolb
or
add
fwait
aam
inc
jp
ja
push
icebp
int
mov
jns
addb
mov
fs
into
jmp
xor
negl
cmc
jmp
adc
ljmp
lds
icebp
leave
add
in
sub
loopne
adc
and
loopne
and
add
push
rorb
shlb
dec
mov
cmp
outsl
popf
add
rcrb
imul
sahf
inc
xor
xchg
arpl
dec
std
jne
ja
arpl
roll
inc
mov
int3
mov
sbb
xchg
fnstsw
add
ja
mov
mov
cli
inc
jbe
mov
sbb
sbb
loopne
lea
add
mov
inc
dec
inc
dec
add
clc
sbb
pop
aam
cmp
mov
or
adcb
add
mov
jge
dec
mov
mov
add
adc
pusha
pusha
call
mov
inc
jp
mov
inc
xor
andb
loopne
mov
sbb
fstpt
incb
loopne
cmp
mov
and
mov
add
xchg
into
xor
mov
mov
cmc
or
xor
iret
rclb
imul
pop
mov
in
dec
fwait
pop
imul
sar
sub
je
pop
push
xchg
sbb
pop
lret
pop
stc
xchg
aas
rclb
pushf
popf
pop
insb
sub
js
inc
push
shlb
mov
mov
cwtl
xchg
fstps
push
inc
add
mov
mov
shlb
jmp
rcrl
and
or
loopne
pop
or
negl
cmp
push
test
outsb
leave
xabort
adc
mov
popa
xorl
mov
test
ret
push
arpl
testl
rolb
cmpsl
lahf
hlt
lret
mov
out
dec
add
clc
or
and
mov
adc
push
and
xor
mov
loopne
or
dec
mov
inc
sbbb
loopne
out
loopne
clc
int3
and
hlt
insl
call
and
inc
fmul
mov
sbb
add
mov
sub
loopne
jb
pop
mov
add
cmp
pusha
pusha
movsb
addb
jge
andb
fistps
movl
add
loopne
inc
pusha
push
adc
add
push
and
loop
in
lds
mov
mov
and
jp
push
cmp
lcall
jb
adc
out
hlt
ret
add
jbe
pop
push
mov
dec
iret
sti
sti
out
fsts
subb
mov
xchg
push
sar
ret
ja
repz
xor
lcall
inc
mov
andb
xlat
outsl
icebp
xchg
inc
rcr
mov
fisubrl
lcall
loopne
pop
aas
mov
imul
or
loopne
loopne
fs
mov
call
mulb
jmp
incl
pop
loopne
inc
jbe
andb
sub
xchg
add
jp
mov
ds
dec
jp
outsb
jecxz
gs
into
cmpsl
jne
aas
in
in
mov
jp
jg
lahf
nop
das
repnz
sti
push
aad
xchg
iret
cld
mov
adc
pusha
inc
shll
push
mov
xor
pusha
adc
xchg
lods
and
add
arpl
and
add
mov
pusha
xlat
movsb
add
addb
sub
fs
push
and
push
hlt
fnstcw
mov
ss
cltd
and
enter
out
inc
loopne
dec
and
jmp
and
imul
fwait
xlat
dec
jno
mov
mov
in
dec
cmp
cmp
lock
adc
insl
push
and
add
in
lret
jl
mov
das
or
andb
loopne
inc
push
cmp
xchg
lahf
cmpsl
push
inc
icebp
sub
mov
loop
mov
and
pusha
test
icebp
or
add
sti
rclb
dec
inc
and
int
repz
loopne
xchg
subl
adc
rcrb
in
lret
xor
sub
dec
pop
outsl
aas
mov
sbb
dec
mov
pusha
add
or
sub
mov
andb
jg
mov
mov
mov
inc
imulb
add
rorb
pusha
push
push
rcll
cli
cmp
loopne
divl
add
das
add
and
push
sti
xor
enter
and
test
and
es
mov
lret
and
fstpl
ds
push
imul
sbb
hlt
pusha
xor
add
and
test
arpl
dec
cmc
fisubrl
inc
sar
mov
mov
and
jle
addb
roll
xchg
call
and
pop
test
out
cmpsl
inc
les
shlb
orl
jl
in
mov
lods
nop
xor
cmpsl
in
adc
je
sti
mov
cmpsb
andb
shlb
out
mov
inc
out
test
add
leave
cmp
and
adc
jnp
pop
adc
sbb
shlb
xchg
cli
rcll
lock
inc
ljmp
mov
outsb
xchg
cmp
fs
sub
maskmovq
rcr
lods
pusha
and
cmp
frstor
sub
insl
sbb
popf
adc
mov
movsl
mov
pusha
dec
pop
fiaddl
push
je
cwtl
loopne
leave
jae
repz
add
push
lret
popf
lahf
pop
pop
pop
test
scas
add
test
aad
mov
add
shlb
add
or
addb
leave
les
aas
sbb
nop
mov
push
lock
cmpsb
pusha
loopne
mov
mov
pusha
dec
jne
mov
inc
mov
push
or
addb
adc
sub
sbb
test
jae
lcall
std
cmc
mov
fmull
mov
shlb
scas
mov
or
pusha
idivl
outsl
sub
jge
loope
addb
das
inc
lods
mov
ds
shlb
shrb
mov
into
into
hlt
lcall
inc
in
repz
cmpsl
pop
outsb
test
rcrb
dec
cmp
into
loope
and
add
icebp
inc
subl
cmp
sub
mov
sbb
loopne
jecxz
jns
jl
ret
test
pop
pop
xlat
into
lock
cmp
or
mov
inc
rcrb
add
repz
push
cmp
jne
cmp
or
xor
add
add
ret
xor
mov
or
in
mov
stos
or
inc
lahf
xor
stos
and
mov
daa
inc
enter
mov
jbe
push
pop
adc
negb
mov
addr16
or
lds
and
fcoml
inc
int3
ss
add
jo
pop
rcll
mov
lods
add
lcall
push
clc
lret
xchg
mov
pop
dec
or
cmpb
inc
nop
lods
insl
loopne
push
dec
mov
xlat
dec
inc
test
arpl
add
add
jecxz
lds
cmpb
insb
out
push
or
and
push
inc
inc
das
inc
jb
ficomps
add
mov
pop
data16
dec
addb
insl
and
add
mov
ficoms
pop
pop
repz
mov
je
add
repz
movsb
and
mov
push
jno
ficomps
pusha
pusha
insl
jge
cmp
jl
xchg
add
ror
dec
and
shlb
add
mov
jno
sbb
scas
andb
jae
xchg
push
hlt
mov
subb
subb
andb
bound
cwtl
fsubrs
mov
inc
lret
jecxz
test
inc
shll
mov
dec
dec
xor
bound
outsb
stos
add
jnp
cmp
and
lea
andb
jb
fmull
mov
sbb
repnz
mov
data16
or
and
and
call
pop
hlt
mov
clc
cmpsb
inc
loopne
loopne
pop
or
rclb
imul
imul
and
fcmovbe
in
sub
add
out
mov
xor
ret
mov
xchg
adc
xchg
mov
sub
xor
imulb
repz
adc
ljmp
mov
aas
sub
sbb
mov
add
sahf
scas
fcomi
repnz
addb
push
mov
adcb
adc
and
lds
outsb
loopne
or
fisubs
and
shlb
data16
jno
push
xor
add
mov
mov
cmp
iret
movsl
cmp
sbb
mov
inc
mov
sub
pop
push
call
insl
loopne
clc
addb
pop
or
inc
xor
pop
gs
stc
aam
insb
mov
ss
stos
push
jns
and
mov
addr16
shl
lds
and
push
enter
inc
cmc
ja
lods
and
hlt
int
and
add
inc
orb
loop
sbb
in
popa
inc
adc
les
and
sub
loopne
outsb
mov
cmp
jbe
insl
jae
subl
insb
aad
sub
andb
loopne
xor
or
pusha
inc
aam
sbb
adcl
inc
mov
xchg
push
cwtl
test
add
idivl
js
test
pusha
xor
mov
mov
popa
mov
or
loopne
xchg
push
arpl
aas
mov
ror
sbb
add
aas
adc
sbb
jg
dec
mov
cmp
and
push
movsb
mov
xlat
and
mov
shl
test
int
pop
xor
adc
mov
push
sub
pusha
loop
mov
loopne
negb
dec
cmp
cmp
pop
cmp
mov
inc
adc
or
jns
xor
push
gs
inc
inc
mov
jl
hlt
push
imul
sub
mov
xchg
mov
jae
popa
gs
adc
dec
mov
pusha
mov
imul
iret
test
push
cmpsl
pushf
mov
sti
sbb
push
mov
dec
outsl
daa
xchg
and
add
insl
pop
stos
mov
fcomps
je
popf
lods
addb
mov
push
dec
out
inc
call
in
mov
adc
pop
test
loopne
mov
xor
fadds
mov
inc
pusha
cmp
pop
dec
ret
cmp
lahf
lods
and
loopne
loopne
clc
mov
fidivrl
rorl
repnz
sahf
or
fisubl
xor
dec
int
lahf
pusha
outsb
pop
cld
push
div
add
into
mov
pop
push
int
shrl
cmc
lcall
jge
mov
mov
mov
loopne
sti
insb
mov
test
add
fldcw
mov
lcall
out
popa
gs
push
jo
pusha
pusha
aaa
das
xchg
mov
mov
or
in
sbb
pop
scas
mov
add
loopne
jmp
pop
stos
imul
and
cmp
cmp
pop
pop
inc
adc
idivl
sub
mov
movsl
imul
xchg
mov
inc
inc
push
cmpsl
adc
add
pusha
loopne
andb
inc
cmp
mov
scas
push
mov
sbb
sub
lcall
lea
into
test
aam
push
mov
add
and
cmp
mov
pop
fidivrs
arpl
mov
test
shlb
lahf
mov
jne
sbb
and
lret
add
ds
mov
add
xchg
and
mov
and
rcrl
inc
insb
adcl
shlb
and
cmp
inc
loopne
rcr
mov
dec
mov
lcall
pop
or
andb
sbb
popa
js
je
loopne
rolb
divb
outsb
scas
adc
cli
call
mov
in
mov
addr16
pop
adc
fdivr
mov
pop
mov
mov
or
cmpsb
and
loopne
lods
pusha
mov
fxam
outsl
stos
add
shrb
pusha
mov
pusha
or
inc
lods
mov
std
xchg
sti
lods
addb
fwait
call
cmpsb
inc
and
mov
pusha
or
pop
mov
shl
xchg
mov
adc
addb
sub
mov
push
stos
es
les
movsl
gs
push
or
mov
push
and
loopne
inc
sbbb
out
add
add
add
push
dec
jbe
or
fisubl
jp
jb
mov
mov
loopne
mov
add
int
adc
out
idivl
mov
andb
rol
pop
gs
or
loopne
sbb
mov
addb
and
inc
scas
and
aas
ja
stos
cli
and
mov
lret
loopne
xchg
in
mov
fnstcw
sub
rcll
je
push
push
andb
inc
rorb
cmc
xchg
mov
rolb
xor
add
and
lahf
cld
je
cmc
xor
pop
popf
scas
mov
mov
add
aas
leave
jne
inc
and
or
dec
sbb
fcomps
mov
mov
imul
add
and
fisubrs
inc
xchg
ret
push
push
js
das
xor
add
and
cmp
pop
or
sbbb
mov
popf
int3
and
mov
add
mov
pop
mov
les
add
inc
ja
shlb
ja
ja
cs
add
ja
jae
mov
fistl
loopne
xchg
shlb
lahf
push
hlt
lret
lock
and
shlb
jae
cmp
xchg
push
push
mov
mov
pusha
cmpsb
and
add
pusha
into
adc
pusha
adcb
jg
or
rorb
or
sarb
pop
popa
push
inc
pop
gs
out
sbb
mov
sub
mov
test
add
jnp
adc
and
loopne
int
adc
loopne
and
lret
jnp
jbe
scas
push
sbb
xchg
sti
pop
mov
and
push
fimull
inc
stc
jae
jmp
and
jl
lods
popf
movsl
lods
scas
pusha
loopne
xor
mov
into
test
xchg
and
lcall
mov
js
ja
inc
hlt
scas
sub
mov
jge
loopne
mov
loopne
mov
addb
sahf
test
inc
lods
jns
pop
inc
ret
mov
loopne
das
mov
jns
or
sahf
ja
adc
fs
cltd
mov
pusha
add
and
push
in
jmp
out
mov
inc
pop
mov
data16
insb
jno
add
pushf
jo
push
sub
movsb
addb
loopne
jmp
sbb
aam
xor
sub
and
fldpi
cmp
fcmove
cmp
dec
daa
push
xchg
jp
fwait
cmp
xor
pushf
xchg
in
ret
fidivrs
adcb
aaa
loop
std
lds
pop
mov
shl
or
inc
std
push
pusha
adcb
mov
jp
add
push
movsb
andb
jp
fs
fistps
movsb
and
ret
orb
inc
sub
shlb
inc
push
ljmp
or
insb
sbb
inc
jmp
and
loopne
jmp
fcomp
push
clc
push
mov
test
loopne
push
test
mov
jo
cmp
sbb
mov
enter
outsl
mov
movsl
ret
inc
cltd
mov
adc
inc
sub
fucomi
and
and
scas
roll
pusha
cmp
scas
xchg
mov
push
xor
call
mov
outsl
movsl
call
adc
inc
and
pop
jge
mov
int3
or
and
iret
fisttpl
loopne
cmp
pop
jl
jne
hlt
jge
and
outsb
lcall
ss
xor
and
repnz
pusha
and
add
jecxz
aas
xchg
lods
add
cli
cmpsl
addr16
and
mov
jg
add
and
xchg
shll
ret
mov
in
xchg
dec
and
andb
ds
inc
or
xlat
dec
xchg
add
cltd
jns
pop
pop
jl
sub
push
jl
rorb
adc
popf
sub
inc
or
andb
add
test
movsb
pusha
sarb
or
shlb
loopne
bound
jmp
inc
dec
lods
shlb
add
stos
dec
divb
pop
adc
jmp
mov
xchg
inc
ljmp
jo
pop
inc
xchg
iret
jo
pop
iret
sub
sbb
fsubr
lds
push
adc
xchg
imul
sub
mov
pop
and
mov
sbb
jp
fwait
out
sbb
test
int
inc
orb
xchg
inc
jmp
repz
loopne
lods
mov
ret
divb
xchg
mov
mov
lret
mov
pop
mov
imul
mov
aad
mov
out
xor
movsb
inc
loopne
ret
cmp
in
cmp
cmp
shlb
repnz
rolb
and
lods
cmpsl
test
and
inc
iret
push
xor
push
movsl
sarb
sub
inc
lret
inc
xor
andb
cmpsl
pop
xchg
repz
mov
or
and
ljmp
cmp
lahf
addb
xor
mov
call
inc
xchg
fstl
scas
arpl
inc
outsb
push
sbb
rcl
fnsave
inc
negb
jno
test
loopne
jmp
add
inc
inc
ret
xor
mov
add
and
adc
jbe
loopne
fstpt
add
fisubrl
adc
fidivl
push
testb
xorb
jecxz
mov
test
shlb
xchg
cli
imul
adc
popf
insb
stos
jnp
fnsave
mov
mov
xor
negl
sbb
add
hlt
dec
xchg
lock
adc
test
inc
jmp
das
sbbl
movsb
mov
cmp
cmp
hlt
add
mov
adc
push
and
in
outsl
fcoml
inc
add
loopne
lahf
mov
jo
testl
in
leave
inc
cwtl
das
loopne
pushf
data16
shlb
shlb
scas
mov
ss
imul
and
rolb
push
xor
pop
arpl
outsb
movaps
lcall
sub
rorl
sbb
jg
fmull
shr
or
dec
aas
cmpsb
pusha
sbbb
data16
fwait
mov
or
imul
mov
sub
imul
inc
add
sbb
cld
mov
loopne
jb
mov
jecxz
inc
or
mov
loopnew
mov
mov
mov
or
mov
lds
pop
push
jle
mov
pop
sub
cld
stc
aaa
rclb
xchg
push
mov
lea
add
xchg
roll
loopne
dec
ja
and
and
adc
div
add
pusha
subb
cmp
mov
in
clc
int3
pop
ljmp
inc
jp
sbb
dec
lea
arpl
inc
sbb
fistl
mov
frstor
mov
pop
cmc
jb
mov
loopne
pop
rolb
movsbl
dec
outsb
movsb
mov
jo
inc
add
stos
mov
push
stc
jecxz
mov
sbb
inc
mov
add
cmp
in
push
ja
sub
mov
inc
loopne
adc
or
mov
pop
test
add
pusha
and
stos
adc
jecxz
loopne
mov
mov
mov
sub
leave
mov
add
in
push
jmp
jo
ja
sub
idivl
cmp
into
ret
pop
aam
fs
cmp
cld
jle
push
dec
mov
cli
mov
stc
out
push
in
sub
dec
add
ror
data16
mov
cmp
in
out
xor
inc
insb
imul
xchg
ret
jp
loope
std
sbb
pusha
xorb
cmpb
loopne
sahf
mov
add
inc
mov
xor
loopne
aaa
sti
addl
shlb
loopne
addb
pusha
repnz
mov
sbbl
cmp
mov
mov
lods
dec
pop
out
inc
pusha
cltd
leave
dec
je
mov
rcrb
cmp
mov
adc
stc
std
pop
sub
loopne
cmp
cld
outsl
push
clc
sbb
pusha
and
and
rcl
dec
adc
cmp
cmp
movsb
pusha
andb
mov
scas
scas
push
inc
in
testl
rolb
pop
out
fstp
js
jle
iret
hlt
in
aaa
mov
and
xlat
xrelease
jns
sub
pusha
cmp
mov
sub
outsl
jle
ds
push
push
adc
cmp
adc
mov
inc
std
clc
std
pop
inc
mulb
das
aad
dec
stos
inc
loopne
or
sbb
repz
enter
and
loope
outsb
fwait
cmpsl
push
imul
sbb
jne
mov
shlb
push
pop
out
cmpsl
ret
and
das
add
sub
pusha
andb
xchg
adc
mov
mov
or
inc
mov
adc
leave
cmp
cmp
xor
loopne
sarb
pop
ss
mov
addb
pop
mov
loopne
mov
dec
xor
dec
aam
es
mov
scas
add
psadbw
loope
cs
inc
fstpt
iret
test
sub
push
and
test
lcall
mov
pcmpeqb
scas
andb
cld
test
mov
in
icebp
cld
jae
aad
mov
cmpsl
cmp
orl
pop
dec
lods
pusha
pusha
inc
movsl
xchg
add
cmp
pop
xchg
add
mov
lcall
or
and
inc
cmp
pusha
shlb
add
orb
mov
ficoml
int
jb
and
mov
rclb
inc
mov
stos
and
xchg
flds
sub
add
aad
pop
pushf
or
pusha
out
inc
push
rcrb
mov
add
sti
dec
jg
lea
xchg
push
pop
mov
lods
shrb
loop
out
and
sub
pop
and
dec
cmp
out
je
addr16
xor
mov
ret
or
icebp
push
fdivrl
out
test
pusha
xor
add
addr16
add
in
fcomps
inc
andb
add
rclb
mov
loopne
test
loopne
pop
mov
cmp
push
mov
push
xchg
jno
sbb
xor
mov
pop
scas
or
xor
rolb
out
divl
add
insb
and
mov
mov
add
rcrb
dec
gs
or
addr16
andb
mov
jnp
push
xchg
bound
filds
lcall
shrl
and
mov
sub
shl
and
cpuid
add
cmp
cltd
ja
jl
addb
or
ret
mov
rolb
xchg
out
movb
aaa
sbb
out
sbb
pusha
add
jbe
sbb
cmp
inc
inc
daa
imul
insl
dec
adc
xor
pusha
mov
jmp
push
add
aam
mov
xchg
lahf
dec
or
pop
pop
loopne
inc
xchg
add
xor
test
pusha
jbe
movsl
jge
xlat
inc
mov
in
data16
xchg
addb
cli
push
daa
or
mov
rcl
sub
loopne
jge
mov
jg
add
push
ret
and
mov
loopne
xor
or
pusha
in
xchg
sti
sub
add
dec
and
xorb
loopne
jno
addb
dec
ljmp
loopne
add
inc
pusha
and
jle
dec
dec
add
jge
lock
pusha
lock
xor
loopne
fsts
lock
and
cmpsl
mov
loop
mov
mov
iret
arpl
rolb
addb
out
jb
scas
scas
add
icebp
jno
loopne
aas
mov
and
repz
test
andb
ljmp
movsb
shlb
xor
neg
nop
dec
std
jg
jge
insl
dec
inc
aaa
mov
or
adcb
insl
out
mov
ljmp
sahf
icebp
les
add
andb
sbb
lcall
pop
scas
inc
jne
xchg
negl
sub
fsts
jmp
loopne
stc
xchg
mov
aad
outsl
jbe
mov
andb
andb
inc
cmpb
shl
jg
add
pop
sar
pusha
push
lock
rorl
loopne
mov
sub
pop
in
les
pusha
rorb
xor
shlb
insl
ss
addb
movsb
pusha
mov
inc
movsb
pusha
mov
add
dec
dec
ret
and
add
fstp
ss
mov
jae
and
out
cld
or
sub
pusha
je
inc
fisttpl
lds
jns
xor
add
shl
pop
mov
rcrb
scas
outsb
mov
dec
shll
out
cmc
sbb
xor
loopne
push
jecxz
jns
arpl
fwait
mov
jnp
push
mov
dec
movsb
add
pop
outsl
pop
lods
shl
shl
mov
ss
add
or
pop
mov
mov
call
std
mov
loopne
fs
fs
inc
pusha
cmp
lret
loopne
int3
scas
and
fsubl
mov
mov
ljmp
cmpsl
stc
leave
fidivs
or
mov
mov
test
inc
or
lret
adc
xchg
fmull
jne
mov
add
inc
lcall
xor
ret
rolb
push
push
sub
repz
pop
popf
inc
lods
addb
inc
sub
jl
mov
pop
sahf
jl
xor
mov
out
loope
bswap
andb
lock
add
test
inc
ljmp
mov
addr16
adc
inc
and
loopne
insl
add
je
aam
repnz
inc
pop
sub
or
pusha
sbb
sbb
rolb
rolb
push
hlt
stc
mov
and
andb
or
adc
loopne
outsl
or
pusha
rcl
or
add
inc
enter
dec
jmp
outsb
push
mov
inc
mov
xchg
pop
jne
mov
jbe
cltd
aad
les
xchg
dec
xchg
sub
test
inc
enter
mov
add
and
out
sub
decb
dec
aam
pop
imul
pop
imul
mov
add
loopne
and
pusha
loopne
push
insl
mov
ret
jmp
cmp
jle
pop
div
scas
stos
pusha
mov
mov
pop
mov
imulb
sbb
popa
cli
sbb
xchg
shlb
jle
adc
scas
mov
das
les
stos
cmp
cld
data16
ss
xor
or
push
aad
shl
xlat
and
shl
addr16
mov
aad
loopne
push
aad
enter
inc
pusha
and
ret
int3
jecxz
cltd
push
fadds
inc
sbb
xchg
and
subb
jns
xchg
cwtl
sub
add
shlb
mov
andb
add
add
mov
loopne
push
ret
xchg
xchg
adc
lock
xor
fmuls
inc
loopne
popf
enter
add
popf
fisttpl
jne
mov
pop
push
aaa
push
and
push
xorb
mov
popa
fcomp
aaa
fcompl
call
jl
and
add
mov
pushf
xchg
push
jecxz
pop
xor
out
adc
adc
and
addb
inc
movsl
cmc
test
add
mov
dec
imul
mov
decl
andb
ja
mov
pusha
xchg
mov
leave
mov
pushf
sbb
nop
ljmp
inc
loope
leave
lret
push
icebp
or
pusha
pop
jae
sub
in
js
jns
mov
hlt
fnstsw
push
xor
jo
pushf
fs
cmp
scas
jl
mov
dec
dec
fisttps
inc
add
sahf
out
cld
cmp
and
inc
ds
and
bound
mov
loopne
aaa
div
pop
and
xchg
leave
xlat
loopne
inc
add
out
test
pusha
call
pop
js
mov
dec
mov
xor
sbb
ljmp
aad
out
jg
xor
sbb
addb
xor
cmp
inc
add
sbb
mov
rol
dec
mov
fdiv
add
or
fdivl
popa
or
and
adc
add
and
jl
call
jbe
shr
jnp
mov
loopne
xchg
sub
push
cmp
pusha
cmpsb
inc
orb
xchg
mov
fistpll
pop
leave
bound
jmp
push
push
repnz
xor
shll
orps
insl
loopne
mov
pop
inc
repnz
mov
mov
adc
lods
mov
inc
jg
in
and
add
out
outsl
inc
mov
in
jmp
mov
or
addb
sbb
andb
xchg
repz
repz
fs
sbb
inc
xor
loopne
sbb
mov
rolb
add
or
mov
xchg
sbb
pop
jp
xchg
ret
cltd
addr16
pusha
inc
stc
cli
pop
push
mov
mov
divb
nop
mov
push
xchg
adc
sub
jnp
sub
xchg
xchg
sbb
movsl
test
pusha
out
mov
xor
push
add
cmp
loop
andb
loopne
pop
aam
popf
rolb
icebp
insb
out
pusha
ror
push
mov
insl
add
sub
ret
ret
and
add
test
jmp
dec
loop
jp
gs
in
in
push
lcall
movsb
mov
jge
dec
pop
inc
insb
mov
push
and
and
lea
xor
mov
add
mov
jo
std
rorb
or
add
and
cmp
inc
mov
sahf
das
add
repz
sub
fdivr
add
add
adc
andb
dec
add
xor
nop
jmp
mov
inc
daa
pop
jmp
and
jno
mov
andb
jne
mov
std
xchg
inc
dec
repnz
xlat
leave
cmpsb
and
xchg
add
loop
ss
mov
and
lcall
inc
icebp
scas
and
mov
psadbw
mov
fwait
xchg
adc
subl
pusha
shrb
push
inc
sbb
or
test
and
mov
mov
dec
xchg
mov
and
push
inc
push
and
or
adc
pusha
and
and
add
rcrb
adcl
and
jb
cmp
popa
das
pop
pushf
loop
xor
cmp
and
pusha
mov
push
in
jbe
jp
pusha
loopne
pop
mov
mov
add
ljmp
stc
divb
lods
add
loopne
nop
movsl
mov
test
push
and
add
and
mov
pusha
lea
xchg
in
jp
sbb
and
inc
out
add
inc
push
mov
int
aas
mov
insl
je
xor
mov
mov
mov
mov
inc
divl
pusha
pusha
sbb
andb
pusha
loopne
scas
and
xchg
push
and
add
push
or
divb
mull
xchg
pusha
mov
pusha
jb
ficoml
mov
pusha
mov
stc
mov
and
sbb
add
xchg
pop
push
sub
mov
pusha
mov
inc
lret
repnz
mov
dec
ljmp
out
inc
insl
shlb
inc
and
addb
inc
jecxz
stos
cmp
add
pop
and
mov
mov
dec
negb
es
inc
lds
pushf
push
sub
pop
cmc
sbb
lock
inc
out
sub
inc
cmpsl
test
add
cmp
or
add
push
dec
xchg
imul
data16
xor
mov
outsl
mov
stos
add
inc
outsl
arpl
js
cmpsb
pusha
pusha
or
mov
jmp
inc
xorb
pop
xchg
xor
insl
mov
shl
xchg
arpl
sbb
shrb
cwtl
test
addb
xchg
pop
pop
mov
add
jmp
imul
out
xor
adc
mov
aas
clc
sbb
and
dec
inc
mov
orl
dec
mov
loopne
push
and
and
fmuls
and
scas
cwtl
scas
mov
push
add
mov
or
sbb
inc
leave
xor
and
or
xor
inc
pop
and
add
rorb
mov
and
mov
loopne
mov
scas
loopne
mov
inc
cmc
rolb
shrb
jno
dec
sbb
outsl
repnz
cwtl
mov
xor
add
jb
push
pusha
inc
add
loopne
inc
imul
adc
dec
fs
add
adc
int3
pop
aad
and
gs
mov
rorb
add
sbb
cmp
xchg
sub
cld
andb
loope
sbb
inc
sub
and
or
mov
test
add
add
mov
mulb
pusha
xor
inc
dec
or
fmul
push
ss
add
jge
imul
jle
js
pusha
mov
cltd
es
xor
adc
inc
sar
cmp
pop
mov
mov
pusha
sub
loopne
lahf
and
adc
pusha
add
push
inc
shl
xor
pop
vprotb
sbb
or
and
push
stos
and
sub
and
dec
stc
out
out
pusha
and
sti
dec
sti
adc
dec
sahf
mov
rcr
cmp
add
pop
dec
out
popa
outsl
cmp
fwait
cmp
hlt
mov
in
mov
cmp
lea
movzbl
sub
cli
in
push
addr16
pop
xor
add
in
mov
mov
cmp
xchg
and
pusha
leave
xchg
popf
adc
jbe
hlt
imulb
int3
xchg
inc
xor
ficomps
xchg
and
xlat
push
ja
fcom
push
jb
stc
jnp
ljmp
push
push
jecxz
xchg
jo
mov
lret
inc
cmp
les
sbb
push
pusha
pusha
les
loopne
pop
fidivrs
inc
outsb
nop
pop
outsb
filds
add
jge
xor
rcr
in
inc
xor
rcrl
push
add
pop
mov
mov
loopne
add
and
jge
mov
push
push
jae
mov
pusha
xorb
rolb
mov
mov
and
pusha
sarb
sbbl
inc
inc
fldl
sbb
mov
cmpl
mov
mov
dec
add
rclb
pop
aas
sti
int
rcl
loope
and
pop
jmp
pop
or
inc
pop
xchg
adc
add
loopne
test
cmpb
shlb
cmp
push
notb
test
add
add
add
mov
push
mov
add
andb
mov
xchg
dec
pop
jle
ljmp
addr16
add
pusha
and
or
sub
add
ret
ss
cmp
pop
mov
fdivl
call
pop
arpl
add
inc
enter
and
jne
add
mov
stc
xor
andb
mov
repnz
jl
stc
lret
push
inc
sub
sbb
loop
xchg
push
mov
xchg
pop
imul
pop
add
sub
iret
mov
mov
cmp
push
std
scas
jp
push
in
mov
xchg
mov
enter
aam
add
pop
mov
addb
dec
add
add
jo
popf
pop
jo
add
lret
lds
mov
xor
shlb
push
shrb
pusha
add
inc
aas
pop
sbb
es
iret
mov
movsl
mov
out
dec
pop
pop
and
ret
inc
outsb
test
and
inc
adcb
mov
rcrl
and
pop
cmpsl
fimull
inc
andb
inc
mov
mov
push
or
inc
pop
icebp
pop
lret
inc
sarb
popa
fimuls
je
pop
outsl
inc
ss
pop
cli
cmp
mov
cld
xchg
or
mov
jnp
add
pusha
mov
xchg
mov
addb
mov
inc
icebp
seta
mul
sahf
loopne
repz
inc
add
inc
adc
rcll
movsl
int
pusha
pusha
pop
sar
sub
add
out
cmp
jb
rol
rol
mov
andb
loop
rorb
dec
and
or
pop
ficoml
jle
mov
loopne
pop
sub
pusha
and
repnz
movl
mov
in
in
and
add
jl
test
aaa
mov
outsl
in
mov
addb
and
cmp
and
pusha
sub
pop
sbb
jmp
mov
aam
loopne
cmp
mov
jp
jae
repz
sub
fcomps
sbb
add
mov
and
jl
mov
push
loopne
ljmp
add
jecxz
aas
lods
sbb
in
dec
icebp
hlt
jge
cmpsl
and
adc
mov
aad
mov
pop
imul
and
lahf
and
xchg
out
adc
insb
mov
mov
mov
aad
lret
jge
aad
mov
jo
cwtl
ret
inc
lock
dec
pop
jecxz
adc
cmp
cs
pusha
stc
mov
xor
in
add
lret
sub
daa
jle
push
movsb
mov
xchg
xor
popf
pop
jns
mov
faddl
out
xchg
lds
and
in
and
adcb
sahf
imul
mov
xchg
adc
shrl
cli
jbe
in
jnp
in
sbb
mov
inc
add
loopne
rcl
pop
out
hlt
pop
xchg
pop
punpckhwd
xor
loopne
popf
jl
mov
mov
loopne,pn
loopne
into
scas
mov
jo
addb
shlb
push
jnp
dec
aas
mov
loop
sub
xor
mov
pop
inc
or
adc
sub
rol
and
rcrl
loopne
ret
daa
sbb
add
out
out
jle
and
pushf
pop
aad
pusha
loopne
pusha
inc
inc
mov
in
jle
sub
idivl
lods
loopne
in
add
and
outsb
cmp
in
inc
mov
pushf
dec
mov
adc
andb
or
mov
ss
inc
or
inc
jecxz
jmp
gs
lods
pusha
loopne
sbb
loopne
dec
faddl
mov
aaa
cmc
sub
stos
rolb
inc
push
inc
loopne
cmp
out
push
cmp
mov
out
add
add
and
loopne
xor
add
xchg
mov
adc
repz
xor
cmpsb
mov
mov
sti
mov
cmpb
bound
fcoml
loopne
stos
xor
inc
cwtl
jmp
push
shlb
hlt
aam
mov
pushf
cmp
into
sets
xchg
shlb
push
iret
adc
cmp
rcr
push
divb
mov
test
fs
clc
mov
and
add
inc
sahf
shrb
sub
sarb
push
out
ret
shlb
pusha
ljmp
pusha
loopne
jae
adc
in
into
jae
nop
cmp
cmp
loop
xor
ret
shr
mov
xor
mov
call
inc
fisubs
sbb
iret
and
cltd
inc
addb
or
pop
mov
push
cmc
jge
jne
xchg
mov
mov
add
in
sarl
inc
shrb
fimuls
cmovge
xor
mov
lcall
insb
enter
jo
data16
shlb
in
insl
stos
lods
ss
mov
xor
in
xor
cwtl
std
sbb
and
and
in
shll
popf
mov
loopne
aas
push
icebp
pop
xchg
std
xchg
push
mov
mov
pusha
mov
sarb
adc
mov
and
clc
cmp
icebp
aam
por
faddl
add
inc
pusha
adc
enter
add
dec
lock
push
sahf
mov
cs
inc
xchg
test
jo
pushf
and
fists
std
adc
imul
pusha
dec
and
inc
mov
adc
sti
loopne
pop
sub
xor
xchg
add
push
xchg
cmp
cmp
popa
sbb
stos
and
add
cwtl
mov
shrb
movsl
fwait
xor
pusha
pusha
fimull
loopne
out
lahf
push
cmp
add
jg
enter
pop
jbe
add
ds
insb
add
add
pop
add
inc
shrb
inc
icebp
cmp
add
mov
lret
cmp
pop
jne
dec
pop
daa
pop
gs
cmp
pusha
sbb
and
sub
sbb
jne
mov
loop
and
out
mov
sti
sub
xchg
xchg
loopne
loope
xchg
mov
shl
outsl
in
xchg
jae
xchg
sub
andb
xchg
sub
mov
clc
add
and
filds
sub
movsb
pusha
rolb
or
xchg
pop
jno
icebp
mov
xlat
xchg
pusha
rol
push
mov
insb
pop
xchg
repz
lock
enter
in
mov
clc
mov
inc
loop
addb
inc
js
in
dec
jmp
jno
addb
imul
lret
push
mov
fnstenv
or
incb
pusha
std
test
mov
inc
push
pop
pop
lods
mov
call
test
cmp
inc
inc
test
push
rclb
cmp
mov
xor
mov
leave
shr
dec
push
lods
and
andb
dec
gs
pushf
aam
clc
jle
adc
inc
add
ljmp
mov
dec
cmp
sar
aaa
fistl
jecxz
jmp
sti
mov
je
inc
ljmp
add
mov
fsubrl
inc
stc
cmp
adc
imul
jmp
cwtl
xchg
mov
sbbl
push
clc
movsb
add
xor
inc
xor
add
add
mov
test
and
test
pop
dec
pop
cmp
icebp
daa
cmp
andb
icebp
sub
out
mov
mov
fisubrl
lret
pusha
loopne
push
add
js
in
pop
test
mov
test
shlb
add
mov
rcr
or
loopne
mov
add
sbb
inc
sbb
mov
inc
mov
int
sub
std
into
add
adc
rolb
pop
loopne
repnz
jmp
and
jg
mov
add
inc
add
pop
cmp
push
rolb
add
add
mov
sar
inc
inc
mov
pusha
jb
mov
pusha
mov
inc
ss
fcoml
das
decb
add
mov
pop
rclb
loopne
icebp
jb
and
inc
xchg
sbbl
lock
addb
mov
mov
inc
xor
fadds
xchg
fimull
push
sbb
mov
add
jecxz
sub
andb
pop
aam
test
xorb
fnstcw
sub
shrb
mov
xor
movsl
filds
add
cmp
loop
aad
cmp
fwait
jge
mov
pushf
mov
add
arpl
fwait
pop
in
push
xchg
adc
loopne
fimull
sti
scas
loopne
push
mov
sarl
inc
jle
add
mov
push
movsb
shl
cs
adc
dec
scas
mov
cli
mov
leave
pop
push
and
sub
fwait
aad
sbb
fcmovnbe
inc
cmp
xchg
adc
std
loop
lahf
xchg
or
bound
idivb
mov
pop
in
sahf
mov
mov
jno
mov
cmp
sub
pusha
and
andb
add
mov
add
mov
mov
sbb
loopne
shr
pop
imul
mov
rolb
lods
loopne
mov
add
pusha
inc
fcos
xor
pusha
addb
mov
movsl
fwait
lods
fwait
push
push
movsl
push
mov
std
mov
pop
lods
loopne
push
jecxz
andb
sub
xor
pusha
add
adc
and
leave
mov
or
data16
xor
scas
scas
aad
add
xor
mov
pusha
jle
into
rolb
inc
sbbb
cmp
dec
mov
inc
xchg
cld
loop
mov
jmp
xchg
loope
aam
push
xchg
mov
mov
not
movsb
rolb
mov
mov
adc
andb
popf
int3
pop
addr16
add
inc
mov
push
inc
xor
mov
pusha
inc
into
pushw
insl
cmc
dec
call
inc
or
add
mov
jecxz
mov
jg
jecxz
bound
out
mov
mov
cmp
fcoms
cmp
xchg
out
shlb
jnp
popf
dec
or
pushf
mov
pusha
movsl
into
clc
mov
add
cmc
mov
cltd
jge
rol
mov
add
push
dec
mov
cmp
in
pusha
mov
shll
pop
push
mov
stos
and
push
sub
mov
loopne
add
pop
adc
add
andb
insl
mov
fldcw
jle
and
and
ja
ja
pop
mov
sub
loopne
cmp
das
push
jns
loopne
mov
inc
arpl
jle
push
xchg
mov
andb
mov
lock
add
orb
aas
ret
test
and
mov
xchg
push
inc
rcl
and
rcll
mov
push
jbe
xchg
or
dec
dec
testb
add
out
mov
add
fs
int
jl
outsb
lods
add
popf
push
jmp
dec
or
dec
test
andb
sub
andb
pop
mov
into
mov
loopne
negl
test
or
loopne
daa
std
sub
xor
xor
ds
lret
fs
jl
sti
es
xorb
sub
dec
mov
mov
int3
add
pop
push
lods
lock
xchg
call
shlb
ret
hlt
lcall
mov
inc
mov
dec
scas
pushf
test
cmp
pusha
add
mov
jns
push
cwtl
mov
sbb
pop
fidivrs
sar
negb
xor
cmpsb
and
aas
ffreep
mov
inc
pop
add
inc
or
inc
jno
out
add
ss
loope
inc
jnp
out
scas
inc
cmpsl
dec
add
in
jle
cmp
push
pusha
and
js
or
push
mov
shrb
fcoml
mov
je
adc
mov
stc
cmc
cmc
call
cmp
add
lret
mov
push
xor
cmpsb
inc
sbbb
inc
loopne
das
aad
xchg
lcall
push
jo
pop
push
loopne
push
mov
pusha
shl
out
or
pop
mov
mov
mov
sbb
add
movsl
and
jne
xchg
int3
mov
pop
push
shlb
and
or
pusha
lret
add
pop
xchg
loopne
jl
lods
inc
mov
xor
ffree
adc
int
repz
int
fisubrs
les
pop
ja
push
ret
lret
sbb
mov
cmpb
shlb
pop
mov
into
outsb
push
lret
dec
mov
push
test
cmpsl
cmpsb
loopne
popf
pop
pop
mul
daa
mov
inc
mov
ljmp
and
mov
or
shrb
mov
loopne
negl
or
adc
mov
out
push
imul
loopne
cmpsb
addb
test
add
and
shlb
mov
add
adc
jge
into
mov
mov
mov
loopne
dec
push
and
js
fnstenv
call
les
sbbb
addb
push
outsb
lds
push
aad
push
lods
pop
bound
mov
adc
inc
andl
mov
shld
adc
loopne
jno
mov
jp
and
outsl
push
lret
ja
pusha
pusha
mov
sar
sbb
push
test
cmpb
jg
jnp
xchg
jae
jns
mov
or
insb
sbb
push
sbb
mov
jb
jecxz
in
lods
or
xor
jno
push
xor
cmp
andb
add
pusha
pop
inc
jo
xchg
into
mov
div
call
sub
dec
push
xchg
add
push
add
insb
fldcw
in
jnp
pop
add
inc
cmp
stos
and
fidivl
mov
adc
aad
loopne
mull
lcall
inc
mov
xor
dec
mov
inc
sbb
int3
imul
push
enter
rolb
add
inc
inc
cwtl
dec
pusha
xchg
enter
rcl
addb
adc
xchg
or
pop
stc
add
and
mov
fidivrs
adc
rolb
mov
mov
paddw
and
cmc
imul
mov
xchg
aas
fisttpl
lahf
mov
mov
pop
decl
add
popf
mov
add
fcompp
dec
push
and
outsb
test
mov
shlb
divl
sbb
repnz
pusha
dec
mov
jg
cmp
add
adc
xor
jno
repnz
xor
xor
js
hlt
cltd
mov
and
shrb
pusha
or
mov
and
insb
mov
lods
enter
dec
mov
cld
std
jno
in
push
scas
mov
gs
adc
jnp
es
inc
mov
loopne
dec
jmp
addb
ret
xchg
inc
inc
add
ja
mov
test
and
xchg
sub
call
mov
dec
mov
mov
and
pop
mov
es
sbbb
pop
dec
repz
pop
shll
add
mov
imul
rolb
fabs
jp
fildll
and
jle
int3
lret
or
dec
pop
jbe
dec
orl
xor
push
jp
push
adc
dec
pop
andb
shlb
jmp
mov
mov
in
shll
inc
mov
pusha
push
mov
fwait
inc
mov
das
mov
cmp
shll
sbb
loopne
int
push
mov
and
add
loopne
add
idivl
loopne
rol
sbb
sub
xchg
add
hlt
jmp
push
loopne
mov
rcrb
ja
pusha
pusha
out
and
jl
xor
scas
and
loopne
dec
pop
mov
nop
jmp
pop
out
sarb
rcrb
dec
mov
shl
testl
rol
cmovl
imul
insb
adc
dec
imul
push
in
lret
mulb
add
aam
push
test
dec
cltd
int3
out
add
loopne
int
shlb
xor
rorb
mov
sub
mov
in
int3
imul
jno
jge
adcl
jp
js
sub
mov
repnz
or
mov
stc
push
push
fmuls
pusha
addb
andb
xchg
loopne
iret
clc
sub
xor
gs
aad
jnp
test
dec
mov
and
test
push
fiadds
mov
jmp
scas
mov
cwtl
stc
inc
shl
mov
sar
lods
pusha
inc
imul
xor
pusha
popa
loop
lods
andb
cmc
pop
nop
push
lock
inc
loopne
push
push
add
add
and
mov
jp
sbb
and
inc
pusha
cmpsb
and
addr16
test
loop
jbe
imul
andb
or
mov
test
mov
je
add
iret
fst
out
dec
mov
shrb
cmp
ret
mov
cmp
push
mov
aam
hlt
mov
pop
jns
ljmp
pusha
pusha
fildl
sub
add
in
adc
push
mov
sub
pop
popf
clc
in
insb
in
push
loopne
cs
addb
rol
pusha
inc
cmp
in
pop
fistl
inc
imul
jmp
insl
mov
pusha
insl
mov
and
xor
dec
lcall
xlat
push
pop
lods
cwtl
jns
sbb
or
aaa
lret
mov
loopne
andb
out
pop
iret
stos
inc
sar
pusha
jmp
cmpsb
andb
jae
push
add
rclb
out
xchg
out
out
loope,pt
cmp
rolb
mov
or
and
mov
xchg
mov
mov
add
add
sbb
aaa
xchg
in
mov
add
movsb
add
or
inc
push
pop
roll
rol
clc
andb
test
and
sti
out
add
les
inc
rolb
mov
sub
rcrb
pusha
loopne
and
pop
jnp
jae
sti
cltd
dec
mov
addb
mov
pushf
jecxz
mov
out
jge
mov
out
gs
gs
and
dec
push
rorl
inc
add
jmp
fistl
pushf
rorl
sti
daa
lret
sub
pusha
mov
repnz
cmp
xor
mov
mov
fdivl
test
inc
aas
xchg
andb
adc
leave
lahf
flds
cmpsb
addb
inc
int
loope
out
daa
rcll
cwtl
les
xor
jle
mov
pop
iret
jecxz
ja
scas
nop
sub
jge
mov
pusha
loopne
mov
sub
xor
pusha
and
addr16
xchg
mov
xchg
lret
test
and
fistl
jle
pop
and
and
cmpsb
and
shr
fdivs
loopne
fs
shlb
add
into
inc
cmp
and
adc
inc
loopne
call
lods
and
lcall
rolb
mov
jnp
clc
pop
push
test
loopne
push
inc
mov
adc
cwtl
push
dec
mov
scas
and
xor
xchg
push
mov
je
sub
mov
dec
dec
cmp
loope
mov
pusha
cmpsl
cmpsl
pop
mov
outsl
mov
sub
out
idivl
imul
add
es
rorb
loopne
faddl
adc
or
and
ficomps
jae
pusha
and
shlb
pop
xor
sti
xor
add
xchg
xchg
xchg
insl
iret
or
mov
adc
jmp
inc
sbbb
fsts
imul
shlb
sbb
pushf
sti
imul
stos
shlb
inc
inc
jmp
into
adc
rcl
stc
push
and
cmc
cmpsl
addb
mov
in
leave
cmp
and
popa
mov
add
rcrb
mov
mov
lock
sub
mov
mov
adc
mov
aas
repnz
sti
and
rorb
push
xchg
stos
rolb
mov
add
mov
mov
mov
roll
stos
lcall
mov
jp
shr
xor
cmpsl
pusha
jo
adc
test
pusha
gs
xchg
sar
test
addl
add
pop
lcall
push
push
shlb
call
inc
shrb
add
cmp
inc
rolb
dec
or
add
lods
rol
push
int3
pop
mov
add
and
and
movsb
pusha
add
xor
into
shl
js
nop
push
mov
pusha
pop
cltd
dec
test
adc
mov
ljmp
ja
aas
loop
push
sub
rolb
rolb
jle
jae
xchg
arpl
dec
outsl
sahf
and
inc
mov
loopne
and
scas
or
mov
add
xorb
je
mov
mov
clc
repz
xchg
push
inc
pusha
shrl
jbe
pop
and
inc
into
data16
mov
inc
mov
push
pusha
mov
adc
inc
popf
add
out
push
mov
loopne
aad
push
jl
mov
push
test
and
nop
sbb
movb
xchg
fs
adc
js
xchg
or
and
or
jne
aad
and
mov
outsb
addb
xor
mov
mov
jae
shlb
fldenv
rorb
jnp
sub
lahf
and
outsl
adc
dec
aas
mov
adc
dec
xchg
dec
testb
inc
and
fdivr
xor
in
pop
add
outsb
leave
stos
pop
repz
aad
dec
clc
cli
sbb
leave
lret
jl
andb
mov
stos
loopne
xchg
shl
sbb
lcall
in
dec
mov
nop
pop
flds
xchg
cld
mov
fisttpl
loopne
clc
and
repz
xchg
or
fbld
and
add
mulb
int
out
inc
dec
rcll
inc
mov
jecxz
push
lret
leave
movsl
dec
cmp
inc
xorl
gs
and
cwtl
add
repz
fstl
lds
rolb
sub
sbb
xor
cmp
loope
sub
xchg
dec
push
cmp
andb
les
lret
inc
aam
lds
aam
insb
mov
mov
dec
jmp
mov
jmp
sahf
andb
js
pop
icebp
repz
sub
idivl
cmp
loopne
inc
loope
out
dec
out
out
decb
in
repnz
inc
cmp
rolb
out
roll
hlt
fdivs
push
pop
or
inc
push
in
into
clc
add
aad
stos
xchg
adc
stc
sbb
fstps
inc
insb
shl
mov
andb
pusha
dec
dec
icebp
js
add
cmp
shrl
mov
dec
test
adc
insl
mov
arpl
inc
mov
mov
cwtl
mov
inc
loopne
lock
and
sbb
add
fisttps
rolb
es
ret
push
mov
mov
addb
enter
inc
cwtl
pop
icebp
roll
cmpsb
add
rolb
popa
in
xor
scas
and
fistps
insb
loopne
cmpsl
jge
test
loopne
inc
and
icebp
mov
jne
test
add
sbb
shl
xor
sbb
leave
pop
decl
and
aad
jle
mov
mov
pusha
int
out
dec
cwtl
cld
dec
sub
adc
in
in
es
pop
ja
repnz
mov
xor
shlb
lfs
das
or
xchg
cld
mov
push
addr16
jbe
xchg
cwtl
out
in
jg
es
mov
jg
pop
push
cmpsl
lea
pusha
pusha
sub
pusha
shlb
push
test
addb
mov
xchg
and
or
push
push
cltd
lods
andb
and
test
mov
inc
add
cmp
nop
test
nop
add
push
push
shlb
push
mov
rsm
addb
pop
testb
shl
scas
shlb
xchg
jo
inc
aas
push
jecxz
jne
cmpsb
mov
pop
insl
popa
pop
inc
shl
mov
mov
cltd
cltd
mov
push
cmpsb
andb
iret
movsl
lret
out
cwtl
js
sahf
out
fisubs
jo
loopne
xor
push
inc
mov
shr
in
pop
leave
rcl
cmpl
cmp
add
les
mov
cmp
addb
xchg
push
mov
iret
add
inc
and
pop
jp
jge
cltd
test
mov
jl
fisttpll
push
shrb
jnp
mov
shl
in
jbe
ss
ffreep
adc
je
ds
cli
in
pop
push
and
leave
mov
xchg
sub
inc
add
nop
subl
inc
cmpsl
rol
inc
andb
out
cmpsl
xor
fnsave
and
jle
add
jge
and
add
or
inc
fs
inc
mov
and
negl
pop
ret
mov
sti
and
xchg
les
je
sbb
pusha
mov
dec
dec
aas
cs
mov
jg
and
rcrb
mov
loopne
repz
mov
fst
push
loope
xor
mov
sbb
pop
jno
insb
popa
xor
mov
addb
mov
mov
mov
add
aad
adc
or
sbb
enter
rcr
cmp
dec
cmp
adc
popa
cmp
and
rolb
cltd
insl
xchg
call
loopne
mov
add
int3
push
jmp
shl
or
jae
shlb
cmc
and
inc
and
inc
aam
inc
pop
cli
mov
xor
xchg
aaa
cmpsb
pusha
sarb
cmp
add
addb
mov
lret
xor
xor
inc
push
dec
dec
mov
testl
fs
scas
mov
sbbb
pop
adc
xchg
lds
test
push
mov
movsb
inc
cmpb
scas
add
sbb
pop
mov
xchg
jmp
mov
xor
popa
push
push
xchg
pop
fbld
add
lret
addb
add
push
mov
add
scas
xor
inc
inc
xchg
or
pusha
cmpsl
std
dec
popf
xchg
xchg
hlt
aaa
and
mov
rcrb
and
hlt
int
ds
xor
jbe
xor
inc
pusha
sub
repnz
sbb
inc
out
and
loopne
dec
add
inc
inc
inc
cmpsb
rol
hlt
jnp
addr16
ret
lcall
adcb
in
dec
or
addb
cmpb
arpl
imul
stc
inc
xchg
les
jnp
xor
push
sahf
rcrb
push
decl
or
xor
sti
add
pusha
rcr
daa
push
ss
pusha
and
testl
adc
mov
add
sub
daa
pop
adc
mov
shlb
enter
mov
leave
dec
fildll
les
mov
pop
xchg
cli
sub
sbb
sub
add
shrb
inc
rclb
sub
inc
sbbb
xor
and
mov
data16
loopne
sbb
ret
loopne
les
shlb
xchg
aam
and
inc
sub
or
sub
add
loopne
xlat
cwtl
movsb
addb
int
sub
in
pop
pushf
inc
cmp
insb
out
jp
cmp
xchg
mov
xor
mov
movsl
into
ret
popf
aam
xchg
jecxz
jg
sahf
bound
pop
out
loopne
jbe
jmp
pop
push
ljmp
orl
push
fstpl
jmp
xchg
testb
inc
fprem1
mov
cmpsl
mov
xchg
pop
sbb
pop
or
and
mov
mov
inc
adc
dec
cmpl
ss
adc
sub
jle
cmp
insb
lcall
mov
in
adc
loope
mov
inc
jle
sarl
pop
leave
xchg
jbe
inc
jge
xchg
bound
int3
aad
mov
mov
add
jbe
loopne
pop
sub
and
fsubs
stos
push
pop
int
movsb
andb
imul
mov
call
pushf
clc
pop
andb
add
outsl
insl
and
add
inc
mov
pop
ficoml
and
mov
loopne
cs
mov
pusha
mov
gs
dec
daa
mov
jo
jb
rolb
stos
pop
je
pop
mov
pusha
arpl
fcomps
loop
in
addb
push
adc
lret
ret
cwtl
dec
add
inc
and
fisttps
jo
pop
data16
popf
js
push
xchg
add
jnp
mov
and
mov
loopne
addr16
js
lods
pusha
shlb
ss
xchg
movsb
pusha
mov
push
or
leave
sbb
out
pop
pop
cli
sbb
jg
fcmovnbe
jns
insl
shr
mov
incb
pusha
leave
mov
loopne
inc
pusha
into
sub
orb
inc
outsl
scas
inc
and
in
andb
mov
loopne
jp
js
sbb
outsb
ss
adc
ret
scas
dec
push
inc
pop
dec
shrl
jp
and
addb
mov
mov
test
jno
adc
mov
sti
jns
push
pop
push
in
mov
cmpsb
rol
jo
add
shrb
insb
or
mov
andb
test
and
xor
dec
mov
cmpsl
jno
adc
add
arpl
cmpsl
cmpsb
pusha
mov
roll
jl
shlb
inc
cwtl
add
sbb
mov
scas
sbb
inc
fldenv
mov
mov
xchg
cld
jmp
addr16
adc
xchg
jmp
add
test
jle
test
and
shlb
fwait
mov
loopne
push
loopne
insl
sub
loopne
cmp
and
cmp
imul
fnstcw
push
xchg
xchg
mov
sbb
and
clc
push
mov
faddl
and
movl
fwait
push
cwtl
sbb
movsl
and
pop
cli
bound
lret
pusha
cmp
mov
inc
add
ja
mov
or
outsb
or
inc
std
mov
enter
dec
xor
shlb
rclb
rcrl
stos
sub
and
lds
jns
add
push
rorb
inc
inc
lock
adc
sahf
andb
lret
test
lret
jg
or
not
js
push
jge
inc
in
ja
xor
mov
movsb
and
lock
mov
dec
cltd
movsl
xor
mov
mov
cmp
outsb
jp
das
mov
jbe
pushf
and
fwait
mov
aad
fbld
loopne
dec
mov
xchg
cs
mov
js
loopne
clc
dec
add
subb
inc
sub
inc
push
inc
rcrb
test
out
jne
jns
sub
jg
incl
test
loopne
stc
adc
daa
cmpsl
xor
pusha
mov
push
dec
fcmovnu
jle
sub
addb
loopne
mov
push
or
cmp
in
xchg
xchg
pop
pop
sahf
push
fcomps
das
xchg
movsb
rol
daa
cli
into
pop
inc
mov
in
call
popl
icebp
cmp
cwtl
dec
and
mov
inc
inc
fsubl
pusha
pusha
jnp
loopne
mov
loopne
cmp
add
inc
cli
loop
jo
jle
pop
into
sbb
inc
add
jle
push
mov
mov
mov
lcall
xchg
mov
cmpb
scas
pusha
loopne
and
jo
or
inc
xchg
inc
and
loopne
ja
outsb
pinsrw
pushf
or
out
sarl
adc
pusha
ret
adc
jb
movsl
imul
mov
jge
inc
fstpt
adc
fldenv
pusha
add
loope
mov
int3
imul
jb
pop
jle
lret
pop
outsb
test
pusha
std
clc
and
mov
inc
inc
addb
inc
or
pusha
or
mov
pop
and
dec
dec
iret
pop
dec
arpl
shlb
test
out
xchg
rclb
bswap
es
and
loopne
push
rol
dec
pusha
jbe
add
adc
loopw
add
pcmpeqd
jge
push
addb
xor
stc
add
adc
dec
inc
insb
rol
and
inc
loopne
fbld
sti
fisubs
mov
enter
push
loopne
rcrl
cmp
sahf
push
inc
and
add
loopne
sbb
pusha
pop
jns
bound
and
adc
push
jp
sub
pusha
xchg
add
mov
mov
test
pop
pop
enter
inc
inc
push
shlb
mov
repz
out
xor
and
jl
or
dec
pmuludq
std
sbb
pop
inc
lea
pop
mov
aaa
mov
dec
loop
rolb
mov
addb
push
div
lods
popa
xor
and
inc
push
push
inc
stos
add
jo
push
mov
mov
pusha
sti
sbb
dec
std
insb
inc
fstps
cmp
imul
xorl
cmp
icebp
dec
push
add
outsb
in
jmp
push
insl
popa
jbe
aas
test
mov
flds
addb
js
sbbl
or
jo
pusha
and
out
mov
rolb
outsl
pushf
je
enter
jbe
aad
pusha
inc
adc
imulb
mov
add
jb
jb
or
jg
adc
dec
repz
xor
xlat
push
fsubl
push
sub
shrb
mov
and
jns
inc
mov
mov
addb
js
and
jae
sbb
lods
pusha
pusha
gs
aad
sbb
pusha
inc
lock
fisttps
out
pusha
add
ljmp
icebp
push
xchg
popf
cmp
adc
daa
std
xor
subb
xchg
lcall
dec
cmp
pop
repnz
js
mov
and
loopne
lods
rolb
mov
mov
mov
mov
mov
add
inc
loopne
movsb
inc
and
push
and
in
mov
lret
sub
jo
and
mov
out
ds
dec
cmp
mov
push
icebp
xchg
lea
fs
mov
mov
pop
dec
dec
pop
subl
mov
or
add
dec
xor
loope
cmp
rorb
add
in
lret
pop
xor
in
stc
add
mov
shlb
fwait
mov
mov
and
jle
mov
daa
js
leave
mov
sbbb
scas
and
xor
and
loopne
mov
pusha
mov
pusha
lods
add
out
push
sub
and
fwait
adc
dec
shll
xchg
inc
stos
and
hlt
add
into
mov
cmpsl
xor
adc
push
pusha
inc
cld
add
push
fcmovnbe
lahf
cs
mov
jae
cwtl
icebp
hlt
andb
dec
dec
inc
or
and
outsl
lock
adc
fistps
loopne
add
mov
inc
int
inc
inc
cmp
adc
mov
loopne
pop
clc
pop
jp
inc
and
push
test
andb
pusha
or
and
mov
dec
mov
mov
cmp
aaa
dec
xchg
add
outsb
xor
stc
pop
sbb
shlb
add
xchg
addb
icebp
mov
mov
scas
push
mov
in
jle
stos
add
fld
mov
adc
daa
mov
sbb
js
mov
add
xchg
and
inc
les
clc
add
sbb
jp
and
push
pusha
mov
andb
movsl
sbb
pusha
orb
xor
addl
repz
push
inc
inc
xchg
or
mov
jecxz
sub
mov
jle
xor
push
mov
push
mov
or
mov
adc
aas
js
shll
jle
pop
cli
add
mov
push
lret
mov
sahf
out
add
add
xchg
cld
fcomi
fbstp
jae
add
je
dec
mov
sbb
mov
test
rolb
arpl
movsl
test
push
aam
inc
cmpsl
mov
inc
dec
push
cmpsl
out
aad
stc
imul
fdivrp
mov
mov
loopne
mov
inc
sub
dec
mov
shlb
adc
inc
mov
jge
jl
mov
out
mov
mov
mov
add
inc
mov
gs
loopne
jmp
mov
add
adc
xor
test
pusha
mov
repnz
push
loopne
dec
xchg
cmpsb
inc
loopne
stos
add
out
push
pop
adc
inc
test
subb
jmp
adc
cmpsl
mov
or
repz
pusha
push
rolb
push
and
mov
or
outsb
int3
mov
jnp
ds
scas
pop
popf
sub
loopne
xchg
sub
inc
cmp
jmp
insb
lcall
mov
pop
stos
and
loopne
andb
and
mov
add
outsl
mov
in
inc
push
int
sti
cmpsl
ds
test
sub
and
sub
and
sub
outsl
adc
rcrb
fstps
push
test
add
inc
and
adc
cmp
mov
add
and
test
loopne
outsb
jge
loopne
test
sbb
or
adcb
xchg
outsb
push
inc
adc
rolb
jp
mulb
ss
fst
xchg
adc
inc
js
inc
and
lock
push
pop
nop
pushl
sti
inc
jg
add
cmpsl
cmpsl
add
ret
inc
sarb
loop
cwtl
and
mov
aas
jge
pop
jg
aam
test
and
or
add
or
cmp
outsl
mov
mov
dec
sub
mov
jg
fmuls
add
jge
mov
mov
inc
dec
xor
adc
mov
popf
iret
and
push
mov
inc
xchg
or
outsl
ja
js
mov
sub
add
and
and
loopne
lea
pop
push
ds
iret
loop
mov
adcb
andb
adc
mov
lock
in
dec
out
lea
lret
leave
mov
jmp
outsl
push
jae
pop
mulb
ds
jae
repnz
mov
scas
loopne
and
add
cltd
fwait
pushf
mov
or
aad
pop
iret
hlt
roll
push
jnp
sub
add
mov
mov
in
mov
mov
mov
xor
push
shlb
and
loopne
inc
lock
push
mov
int3
push
mov
cmc
lret
fidivl
mov
sbb
neg
xor
mov
inc
addb
cmc
outsb
cmc
les
fiaddl
add
rol
lods
and
popf
nopl
mov
and
enter
jae
mov
in
cld
mov
cmp
les
sahf
mov
adc
mov
fsts
inc
out
cmp
cmc
repnz
cld
nop
xadd
mov
cmp
jle
jb
add
or
loopne
mov
and
or
call
mov
sti
and
ror
mov
les
add
and
loopne
cmpsb
inc
sbb
mov
sbbb
lahf
xor
jbe
push
inc
add
jb
ja
pusha
sub
dec
add
loopne
xchg
ror
addb
femms
add
and
xchg
jne
iret
inc
sub
loopne
cli
call
and
stos
gs
pop
aas
aad
cmp
test
loopne
incb
data16
loopne
dec
cmp
and
cmp
sub
aaa
icebp
scas
shl
into
dec
sarb
in
sub
aam
pusha
or
pusha
jnp
inc
pusha
cmp
push
pusha
std
mov
inc
push
sbb
adc
inc
pop
and
and
sbb
cmp
add
andb
xor
push
rolb
inc
add
aam
mov
add
sahf
xchg
jg
mov
inc
pusha
loopne
lds
add
sub
inc
push
addr16
jo
dec
sub
cmc
leave
ja
addb
add
data16
mov
aam
leave
pop
jne
inc
mov
pop
and
adc
ja
xrelease
and
cli
jmp
mov
pusha
rclb
out
aad
mov
mov
dec
into
pop
aas
sahf
mov
rolb
nopl
add
jmp
into
cltd
das
xchg
je
int
loopne
rolb
inc
sarb
fidivs
call
lahf
imul
in
test
dec
pusha
addb
and
andb
pop
aad
pop
into
inc
and
mov
and
fmull
inc
in
jg
mov
imul
lods
and
icebp
sbb
add
pusha
ja
jmp
adc
cmp
inc
push
add
andb
repnz
push
xchg
add
mov
inc
sub
mov
lods
pusha
inc
ret
jl
aas
and
xor
loopne
repz
mov
pop
mov
lea
xchg
inc
mov
jp
jnp
sub
xchg
push
mov
jmp
inc
pop
mov
les
rolb
add
bound
std
out
xor
mov
leave
div
shr
gs
pop
add
add
add
and
addb
loopne
jp
xchg
out
push
push
adc
getsec
pop
mov
mov
out
arpl
cwtl
mov
mov
jnp
into
jle
xchg
inc
mov
and
stos
sbb
push
inc
adc
sbb
test
mov
incl
add
push
inc
and
or
inc
ja
lock
out
add
pop
stos
lea
cmpsl
les
mov
out
loopne
fwait
xlat
fnstcw
mov
daa
lds
pop
xchg
hlt
in
pop
xor
adc
shlb
pusha
popl
loopne
mov
cmp
xchg
mov
add
mov
mov
add
shrl
and
push
ds
mov
jbe
sbb
js
pusha
add
and
out
insb
loope
data16
sub
pusha
push
inc
mov
push
pop
lret
rol
xchg
adc
test
lods
add
fstp
push
fldenv
jge
jge
bound
fldt
mov
and
sbbb
out
pop
outsl
ret
inc
mov
ret
lock
out
pusha
add
lret
pop
stc
icebp
pop
sbb
push
pop
push
js
shll
jle
mov
loopne
dec
ljmp
dec
mov
and
add
push
shl
imul
in
repz
mov
call
mov
psllq
dec
mov
inc
lea
add
and
loopne
push
fsubrs
xor
and
add
rolb
in
cli
jnp
sbb
pop
stos
xor
cmp
aad
das
outsb
add
leave
jmp
js
xchg
insb
dec
data16
jb
rolb
push
cwtl
sbb
cwtl
push
mov
out
jl
test
addl
ret
std
inc
ja
mov
add
in
arpl
sub
push
lods
add
mov
shlb
inc
mov
jns
mov
mov
mov
addr16
scas
addr16
bound
mov
mov
push
lds
inc
cmp
ja
fisttpl
dec
popa
fists
and
rorb
mov
xchg
inc
cli
aad
lcall
mov
fldt
rolb
mov
sub
add
mov
scas
inc
xor
xor
dec
pop
dec
jp
mov
outsb
movsl
sub
pusha
addb
inc
add
outsb
cmpl
loop
call
jne
faddl
shlb
data16
jnp
fiadds
rol
movsl
push
ds
lods
dec
test
pusha
stos
pushf
out
cld
lods
roll
aas
pop
and
jl
xchg
xchg
inc
lea
ds
pusha
mov
pushf
imul
mov
and
inc
ficomps
repnz
lock
and
loopne
jmp
sbb
mov
and
mov
and
hlt
pop
pop
notb
shlb
add
int3
decb
and
mov
outsb
rcrl
and
mov
mov
pop
push
hlt
call
sbb
pop
int3
in
sbb
das
xchg
inc
ljmp
add
and
and
stos
fcoms
xchg
fmull
fwait
sub
cmp
push
fcmove
or
xchg
and
cli
dec
sbb
lods
repz
pop
and
mov
in
inc
and
xchg
inc
loopne
nop
stos
mov
lock
fistps
pushf
test
dec
test
cmp
pusha
pusha
xchg
push
mov
loopne
arpl
ret
mov
xor
xchg
cmp
and
add
out
fsts
dec
xchg
fnstsw
out
and
sbb
inc
cmc
mov
jge
adc
or
addb
aad
icebp
repz
addb
cmp
sbbb
fdiv
nop
push
clc
dec
push
inc
pop
dec
out
sub
out
cltd
pop
push
pop
mov
cmpsl
push
or
mov
loopne
xchg
mov
add
out
sbb
push
hlt
push
and
scas
andb
push
xlat
inc
lret
je
mov
subb
mov
mov
loopne
sbbl
xor
mov
out
and
icebp
lahf
dec
sarb
adc
mov
loopne
jmp
jecxz
lcall
insb
lret
mov
and
jp
ret
adc
jp
mov
pop
mov
shlb
cmp
bound
adc
aad
xchg
pop
es
dec
and
stc
imul
jg
push
in
popa
imul
leave
jg
xchg
out
cltd
popa
insb
pop
fldcw
push
les
pop
std
fs
dec
mov
mov
sarl
aas
int
subl
scas
out
jo
in
pop
sub
mov
jle
inc
and
test
cmp
scas
andb
and
add
pushf
lea
and
shlb
pop
pcmpgtb
add
add
adc
cmp
cmp
imul
mov
sbb
loop
xchg
jle
out
xchg
in
in
btr
addb
dec
mov
xor
movsl
xchg
mov
out
push
lret
lret
mov
mov
inc
xor
sbb
rol
mov
add
iret
ljmp
add
lcall
sbb
insb
sub
lret
lods
dec
mov
dec
sbb
pusha
mov
insl
mov
popa
inc
and
dec
adc
or
sub
mov
insl
and
or
mov
lods
sbb
adc
xor
cmpl
test
orb
inc
clc
cmc
nop
out
xor
cmc
dec
inc
js
jnp
fsubs
loope
movsb
and
or
inc
cmp
xchg
testb
dec
aas
xor
sbb
adc
outsb
lahf
jo
ja
xor
pop
clc
dec
mov
inc
pop
les
shlb
loopne,pn
imul
rorl
mov
test
inc
xchg
std
icebp
push
pusha
pusha
sbb
lds
out
xchg
pop
insb
mov
xchg
je
lods
jecxz
jno
push
inc
rol
cmpsb
add
pcmpeqd
cmp
loopne
jns
outsl
lock
and
fsubl
or
out
sub
loop
cld
lcall
lret
icebp
or
pusha
nop
test
pop
es
cltd
mov
loopne
pop
mov
enter
cmp
jmp
fsubs
and
mov
mov
andb
adc
cmp
jp
mov
xchg
pop
mov
pusha
mov
lcall
loopne
or
and
mov
sub
sbbb
push
cli
cmp
pop
mov
and
pusha
jno
mov
push
cmpsl
cmp
push
cmp
stc
aaa
shll
daa
cmp
pusha
and
inc
mov
inc
mov
inc
add
idivb
xchg
xor
ficompl
inc
shr
imul
insl
incb
icebp
inc
mov
loopne
imul
xchg
ret
dec
push
push
inc
cmp
add
ss
cmpsb
inc
pusha
jge
in
stos
push
pop
in
mov
push
add
hlt
out
mov
insl
mov
sti
dec
push
adc
fidivrs
loop
xor
lods
add
call
mov
sub
pusha
test
ljmp
repz
push
shlb
inc
lock
sbb
lds
loopne
and
inc
or
cmp
xor
add
pusha
shlb
sub
add
mov
pop
das
jg
xor
ror
lds
dec
sub
dec
aam
es
add
and
loop
add
loope
scas
idivl
mov
fdivrl
icebp
push
shlb
inc
and
xchg
dec
push
addb
pop
leave
loopne
mov
mov
jg
and
mov
cli
out
out
jmp
inc
mov
sub
or
pusha
dec
cmpsb
and
imul
mov
sub
rcl
push
jb
in
sub
popl
xchg
jl
mov
adc
lock
ss
nop
outsl
inc
icebp
in
inc
xchg
fs
pusha
and
out
mov
mov
es
sbb
mov
xor
pushf
icebp
and
adc
stc
addb
mov
pop
lahf
mov
xor
mov
addb
xchg
sbb
in
adc
sarb
test
outsl
adc
sti
pop
mov
push
add
idiv
es
mov
gs
mov
fcompl
aas
fdivrs
add
outsb
mov
push
das
test
mov
outsl
xchg
sub
pusha
sahf
lods
and
jbe
rolb
imul
jns
ds
mov
loopne
les
js
cmpsl
shrb
push
mov
xor
sbb
nop
cmp
imul
adc
pusha
and
shlb
mov
add
jns
into
jns
and
and
aad
in
cli
xchg
cld
jle
mov
mov
mov
dec
push
rorb
add
fidivl
adc
nop
add
add
aam
jmp
sbb
andb
push
inc
lods
rolb
add
int3
repnz
fs
sub
add
mov
sub
and
ljmp
or
mov
popa
mov
ss
shlb
dec
cmp
inc
call
shrb
scas
and
add
or
enter
add
lahf
insl
dec
adc
rol
aas
lahf
daa
sub
inc
push
xchg
ss
cmp
push
neg
scas
or
and
pusha
and
and
rcrb
and
mov
fnsave
mov
mov
mov
push
clc
in
mov
cltd
jg
inc
jnp
mov
aas
addr16
pop
jg
les
mov
mov
loopne
mov
inc
push
shl
mov
loopne
dec
insb
movl
fidivrl
mov
jae
rol
inc
push
nop
cmp
mov
into
or
sub
cmc
dec
pop
push
loopne
jae
imul
hlt
mov
pusha
fs
push
movsl
xchg
xor
xor
scas
pop
pop
ss
mov
imul
into
pusha
add
xchg
out
imul
pop
les
push
neg
subps
sub
loopne
shrl
addb
dec
imul
pop
loope
loopne
sub
and
repnz
insb
imul
into
jae
pop
add
ret
mov
inc
fisttpll
hlt
in
enter
sub
pop
cmp
or
or
mov
imul
dec
add
cmp
add
sub
and
addb
dec
mov
jl
inc
mov
inc
in
rol
jle
xchg
rolb
jmp
pop
xchg
mov
repnz
xchg
dec
mov
add
movsl
xchg
mov
loopne
adc
sbb
addb
fbld
mov
leave
xor
out
add
pop
lock
pusha
clc
or
jge
gs
pop
mov
add
in
das
idivl
andb
push
cmp
fs
pop
idiv
cmc
dec
dec
adc
loopne
xchg
and
mov
ret
dec
adc
and
icebp
inc
repnz
clc
cvtpi2ps
outsb
xor
scas
and
jns
dec
xchg
adc
lahf
test
outsb
jle
or
bound
andl
mov
mov
or
and
loopne
adc
loopne
pushf
push
jne
sbb
mov
movsb
mov
add
xor
xchg
fsubrl
xchg
rdtsc
out
jne
jmp
dec
xchg
push
jno
jae
test
addb
sti
pushl
or
push
mov
inc
mov
sub
popa
lea
jle
pushf
fistpl
les
addr16
cmc
inc
mov
shrb
mov
fildl
dec
imul
repz
pusha
mov
jae
out
in
adc
mov
testb
adc
jg
test
shlb
and
aaa
push
xor
out
in
mov
sarb
adc
movsl
cltd
iret
inc
cmp
fisubs
pushf
arpl
loope
dec
lret
adc
mov
sbb
and
add
cmpsl
cmp
inc
leave
sub
aaa
mov
pop
mov
pop
ret
xchg
and
jmp
cltd
rcrl
arpl
scas
pop
or
jns
push
pushf
push
fnstcw
adc
push
and
push
addb
mov
rolb
out
loop
sub
mov
outsl
and
sbb
or
pop
je
and
stc
stc
sbb
mov
gs
sbb
dec
nop
mov
or
pop
jg
mov
loopne
mov
jnp
loopne
and
mov
std
mov
int3
dec
dec
popa
pop
push
frstor
push
ja
push
loopne
ud2
ss
sbb
sub
shlb
sbb
ds
dec
mov
inc
sub
lods
scas
and
repz
jp
push
daa
ret
and
xchg
mov
enter
imul
cmp
jmp
xchg
cmp
jecxz
jg
and
mov
nop
rorb
aaa
js
dec
movsl
out
icebp
bnd
jae
stos
fldt
shll
sarb
ss
add
add
gs
pop
enter
and
test
pushf
jecxz
ret
mov
and
pop
pop
pop
mov
dec
mov
lds
andb
subl
dec
adc
fstl
adc
bound
push
cmp
inc
les
mov
ror
inc
mov
addb
dec
mov
loopne
add
add
addb
shlb
call
mov
inc
push
stos
add
in
pushf
popa
push
mov
xlat
lods
mov
pop
inc
jle
andb
and
mov
lret
lea
mov
aaa
int3
mov
stos
fsubrs
loopne
pushf
mov
lock
dec
out
pop
data16
cmc
jge
and
add
mov
mov
outsl
lds
andb
movsb
shlb
sbb
push
arpl
inc
pusha
divb
adc
add
jle
stos
xor
jl
pop
pop
adc
sub
pusha
loopne
lret
add
loopne
cmp
cmp
add
dec
inc
test
and
add
jg
and
mov
mov
xor
enter
rcr
sub
jno
dec
stos
loopne
xchg
loopne
jecxz
in
or
pop
das
xor
and
lea
sbb
loopne
xchg
pusha
lods
push
iret
clc
sahf
cmc
aas
out
mov
inc
cmpsb
addb
add
add
