add
cmp
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
mov
mov
mov
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
add
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
and
and
and
and
add
add
je
je
add
les
add
inc
inc
inc
inc
div
div
div
div
div
testb
add
and
and
and
and
and
mov
mov
mov
mov
mov
std
std
std
std
pop
pop
pop
add
rol
rolb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
jl
jl
jl
jl
jl
jl
jl
jl
add
add
add
data16
rcl
rcl
rcl
rcl
roll
add
jmp
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
add
cli
cli
cli
es
scas
scas
scas
scas
scas
add
add
add
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
add
incb
mov
mov
add
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
addb
addb
imul
add
jl
jl
jl
jl
add
add
mov
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
fdivl
mov
mov
push
push
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
addl
addl
addl
add
add
add
add
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
scas
scas
scas
scas
scas
scas
scas
scas
scas
add
add
add
add
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sti
sti
sti
sti
sti
addl
addl
add
add
adc
adc
adc
adc
adc
add
mov
mov
mov
fcomp
fcomp
fcomp
fcomp
fcomp
fadds
add
jg
jg
jg
jg
add
insb
insb
insb
insb
insb
insb
insb
insb
add
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
add
add
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
enter
enter
enter
enter
add
add
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
add
ret
ret
ret
ret
ret
ret
ret
ret
add
add
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
add
mov
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
add
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
out
add
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
add
add
add
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
mov
add
and
and
add
aad
aad
add
add
add
add
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
add
mov
mov
mov
add
add
imul
imul
add
add
jmp
movsl
movsl
movsl
mov
mov
mov
mov
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
es
es
add
add
add
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
mov
mov
mov
mov
add
add
out
out
out
out
out
out
out
out
out
add
add
adc
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
enter
enter
enter
enter
enter
enter
enter
xor
xor
xor
xor
jno
jno
jno
mov
mov
mov
add
add
pop
pop
pop
pop
pop
pop
pop
pop
pop
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
push
push
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
lret
add
add
add
cltd
cltd
cltd
cltd
add
add
add
add
addr16
addr16
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
add
pop
pop
pop
pop
pop
pop
pop
imul
imul
imul
imul
imul
imul
imul
imul
add
add
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
add
add
incl
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
mov
mov
mov
mov
mov
mov
mov
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
add
data16
data16
cmp
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
add
add
fnstenv
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
mov
mov
mov
mov
mov
mov
mov
mov
mov
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
add
add
add
add
adc
mov
mov
mov
mov
xchg
xchg
xchg
xchg
xchg
std
std
std
std
std
std
std
std
std
add
add
sub
sub
test
test
test
test
test
test
test
test
add
add
lock
lock
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
or
or
or
or
or
add
add
and
and
and
and
and
and
and
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
rolb
add
add
add
mov
mov
add
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
add
loop
loop
loop
loop
loop
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
and
and
and
and
and
and
and
and
and
and
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
scas
scas
mov
add
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
add
cmc
add
add
pop
pop
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
add
push
push
push
call
push
push
push
push
push
push
push
add
pop
pop
cmp
mov
mov
mov
mov
jecxz
jecxz
add
ret
ret
ret
ret
ret
ret
ret
add
out
out
out
out
out
out
out
out
out
out
out
out
out
out
mov
mov
mov
mov
add
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
dec
dec
dec
dec
dec
dec
dec
add
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
add
stos
stos
stos
stos
stos
stos
add
add
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
insl
insl
insl
insl
insl
add
add
add
xchg
jmp
jmp
jmp
jmp
jmp
jmp
jmp
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fiaddl
add
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
cs
add
push
push
push
push
push
push
push
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
add
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
xor
xor
xor
xor
xor
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
push
push
add
add
add
add
add
add
add
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
add
add
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
mov
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
add
add
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
lock
add
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
xor
xor
xor
xor
xor
xor
xor
call
pop
pop
pop
pop
pop
fiadds
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
add
mov
mov
mov
mov
mov
add
gs
gs
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
add
add
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
popl
add
add
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
rol
rol
rol
rol
rol
rol
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
xor
xor
xor
xor
add
pop
pop
add
cmp
cmp
add
add
add
add
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
out
out
out
out
out
add
add
add
and
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
add
add
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
mov
mov
mov
add
add
add
add
add
add
add
add
add
add
add
sub
sub
sub
sub
sub
sub
adc
adc
adc
adc
adc
add
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
add
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
ljmp
mov
mov
mov
bound
bound
bound
bound
bound
bound
bound
bound
bound
bound
bound
bound
bound
bound
bound
bound
bound
bound
bound
bound
bound
bound
bound
bound
bound
bound
bound
add
add
add
add
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
cmp
cmp
cmp
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pop
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
xor
xor
xor
xor
xor
xor
xor
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
in
in
in
in
add
add
add
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
add
add
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
aaa
aaa
aaa
aaa
aaa
aaa
aaa
add
add
add
fs
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
insb
insb
insb
insb
insb
insb
inc
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
shlb
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
into
into
into
into
into
into
into
into
into
into
into
into
into
into
add
sbb
sbb
sbb
sbb
sbb
sbb
bound
bound
bound
bound
bound
bound
bound
bound
bound
bound
bound
bound
bound
bound
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
add
mov
mov
mov
add
mov
add
add
add
inc
inc
inc
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
add
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
pop
add
add
cmp
sub
sub
sub
sub
sub
sub
sub
out
out
out
out
out
out
mov
inc
stos
pusha
loopne
loopne
lock
or
jae
popa
and
movb
mov
insb
iret
cmpsl
dec
sarl
push
mov
lods
fbstp
sub
loopne
aad
shr
pop
sbb
arpl
xor
sti
sub
or
inc
xlat
inc
in
addb
add
jge
mov
and
sub
cmpsl
inc
and
push
icebp
cltd
dec
pop
adc
loop
push
and
cmp
add
fsubrl
add
and
dec
notl
pop
les
pop
mov
rol
sarb
and
and
andb
xchg
ds
mov
xor
arpl
aaa
cmp
pop
divb
push
xchg
orb
scas
mov
ret
mov
or
addb
mov
pop
cmp
mov
and
inc
mov
scas
mov
js
sub
loopne
cmp
mov
and
and
fs
fisubrs
jecxz
jne
lsl
cmp
ss
push
mov
testl
mov
aaa
je
or
fimuls
inc
inc
xchg
outsb
add
add
mov
dec
cmpsb
mov
inc
xor
ror
cmp
stos
pusha
inc
insb
xchg
ret
test
pusha
mov
scas
andb
or
pusha
jecxz
sbb
mov
fdivs
lcall
mov
loopne
jle
add
xchg
daa
lahf
adc
inc
jl
fisubrl
pusha
shrb
lret
inc
cmp
mov
iret
sub
inc
sbb
out
pop
dec
arpl
mov
mov
jecxz
addb
adc
xchg
fimuls
stos
push
fs
mov
mov
jp
add
sub
push
jae
adc
test
and
dec
out
loop
clc
cmp
cmpsb
pusha
loopne
cmc
pop
sbb
mov
js
sub
xor
aas
mov
outsb
push
cmp
inc
fisttpll
loopne
cmpsb
inc
cmp
bound
loopne
cmpsb
pusha
cmpb
rcll
cli
in
dec
scas
and
out
fucomip
adcl
inc
inc
cmp
add
pusha
add
in
pusha
add
xchg
adc
mov
andb
and
test
sub
xchg
mov
repz
pusha
add
fistpll
adc
xor
inc
es
xor
pop
push
mov
test
lods
add
out
lret
outsl
dec
rcll
xor
scas
add
push
jnp
cmp
iret
pushf
movsb
mov
inc
stos
lock
inc
push
and
xchg
out
inc
cs
rcrb
or
pusha
add
add
int
sbbl
pop
adc
fstpt
pop
adc
rolb
std
cld
fiaddl
and
pusha
test
mov
inc
imul
sti
inc
rclb
fld
in
in
daa
fcompl
fsubr
divb
test
inc
cmp
sbb
in
dec
or
in
fsts
pop
cmpsl
jns
add
sbb
mov
pusha
pusha
lods
or
mov
lret
fcoms
iret
fldenv
inc
popf
pop
mov
pusha
loopne
adc
cld
loope
pop
and
das
aas
mov
loopne
cmp
movsl
fs
mov
and
je
jne
hlt
mov
pushf
sub
mov
loopne
shlb
repz
inc
mov
sarb
xchg
mov
jbe
lds
rcrb
jle
loopne
push
loopne
cmc
dec
cmp
inc
loopne
pop
testl
cmp
push
andb
push
movsb
inc
loopne
add
push
sahf
ja
jb
pop
pop
cmpsb
mov
cwtl
and
subb
cmc
xchg
push
inc
add
cmp
adc
scas
cmc
add
inc
jne
fwait
leave
jns
cmp
clc
fistps
int3
negb
mov
xor
stc
lcall
dec
mov
cli
mov
jp
aam
cmpl
xchg
gs
test
pusha
sti
xor
mov
and
cmp
sub
lcall
jp
sub
pusha
mov
add
out
and
dec
jnp
jnp
jp
pop
aad
icebp
push
in
or
in
mov
pusha
lods
shlb
insl
clc
or
loopne
and
rcl
xchg
inc
sahf
dec
stc
pop
push
add
loopne
rclb
mov
outsl
sti
lret
add
imul
push
mov
xorl
jno
andb
test
arpl
cmpsl
out
push
mov
lahf
lcall
xor
and
rclb
dec
sbb
inc
and
or
inc
movsb
mov
and
dec
push
and
loopne
fwait
sti
add
inc
enter
cmc
aad
stc
xchg
pusha
push
cmp
dec
pop
dec
inc
mov
inc
pop
cmp
jl
xorl
jno
shlb
mov
stos
mov
jmp
cmp
aaa
imul
sub
addb
inc
add
add
push
andb
test
cmpb
mov
add
pop
or
loopne
pop
push
and
and
push
clc
lock
rdmsr
ljmp
leave
fstl
dec
sbb
cltd
sahf
movsb
loopne
addb
flds
shlb
push
inc
orb
sub
ror
cmp
das
cmp
dec
insl
push
push
and
andb
adc
in
loopne
jmp
out
sahf
dec
pop
add
fldcw
mov
fs
mov
and
mov
pop
cmc
std
dec
nop
lods
addb
add
lock
pop
push
mov
pop
pop
mov
inc
sar
stos
loopne
leave
or
add
sbb
pushf
stos
mov
jae
xor
mov
pusha
pop
jl
aad
dec
stos
and
imulb
and
cmp
js
pushf
iret
dec
sbb
push
popf
pop
sbb
mov
popa
xchg
inc
xor
loope
jle
mov
add
jp
popf
push
pop
xchg
inc
fcmovnb
push
and
mov
pop
imul
push
lods
mov
mov
and
addl
imull
loopne
insb
ficomps
mov
and
loop
mov
sbb
ficoml
jge
cmp
out
rcr
lock
adc
fwait
mov
es
and
and
icebp
jmp
lcall
add
outsl
scas
loopne
shl
shl
push
mov
sub
pusha
cltd
and
cmp
les
and
adc
mov
outsl
std
lock
fcomps
xor
mov
mov
inc
push
inc
push
inc
or
mov
popf
add
mov
inc
cwtl
add
pusha
and
ja
and
jo
jmp
xor
dec
andb
fcom
mov
pop
push
push
jo
sbb
stos
bound
pop
push
jp
jae
in
push
shlb
mov
jge
sbb
popa
push
add
pusha
gs
xchg
xor
pusha
xorl
sar
xchg
cmpl
arpl
mov
fstpt
sub
andb
lods
mov
add
in
sub
mov
rorb
push
in
xchg
mov
push
repz
add
mov
and
sbb
pop
cmpsb
and
jge
ret
inc
push
push
cmp
xchg
mov
jg
shrl
mov
sbbb
lret
out
cmpsb
andb
jo
pop
sub
xchg
int3
push
mov
push
sub
or
and
scas
into
iret
push
mov
inc
fwait
jmp
rorl
add
mov
rcr
out
ficompl
sub
xorb
lret
xor
pushfw
arpl
andb
pop
xchg
shlb
clc
lods
inc
leave
dec
push
in
in
dec
jae
fnstenv
mov
and
mov
push
imul
lods
loopne
sub
mov
sbb
rolb
ja
dec
fdivs
ljmp
mov
enter
push
xlat
ds
mov
inc
test
add
or
add
jnp
andb
incb
inc
insl
pop
jecxz
repnz
inc
or
and
pushf
and
add
xchg
in
pop
adc
mov
inc
adc
pop
in
outsb
add
mov
xchg
or
xchg
out
testl
mov
jge
adc
add
popl
mov
add
mov
dec
inc
inc
pushf
mov
into
push
lea
imul
jo
fldcw
pop
jbe
movsb
pusha
loopne
or
add
mov
sti
fwait
ljmp
jae
and
xchg
shlb
inc
pusha
insb
add
dec
arpl
fistpll
mov
xor
mov
dec
cmp
xchg
pusha
iret
inc
shrl
inc
xchg
sarl
sub
loopne
xchg
js
jecxz,pt
sub
pusha
mov
loopne
shrb
nop
orl
rolb
rolb
aaa
push
icebp
mov
pop
adc
dec
aam
adc
pusha
loopne
add
inc
xchg
pop
imul
add
pusha
cld
adc
enter
mov
xor
pop
and
loopne
je
jns
fwait
imul
and
addb
inc
add
rolb
and
jl
in
cltd
test
inc
sub
pusha
imul
and
sub
mov
shlb
jns
push
mov
or
sbbb
mov
xor
or
popa
shlb
loopne
rorl
pusha
inc
mov
and
orb
dec
xor
push
test
mov
aam
mov
xor
das
sub
and
mov
test
or
sarl
mov
mov
pusha
add
loopne
sbb
mov
and
or
addb
pusha
mov
in
jge
or
cmp
sbb
call
cld
mov
inc
bound
cli
or
ljmp
inc
adc
lcall
inc
ret
pop
pop
in
loop
add
add
pop
pop
xchg
sub
insl
inc
out
or
shl
add
jae
pusha
mov
into
jno
pushf
xlat
cmp
lods
and
mov
mov
pusha
loopne
xor
testl
mov
add
push
aaa
arpl
mov
sbb
mov
jns
cmpsl
cwtl
out
je
pop
jnp
iret
gs
adc
hlt
test
mov
push
lahf
push
loopne
cmp
sbb
and
pusha
jg
orl
and
lcall
cmpsb
and
mov
pop
mov
lcall
cmp
mov
loopne
cmc
sub
push
mov
mov
sbb
pop
sub
xor
add
and
insb
in
mov
sbb
sbb
add
adc
pop
mov
jl
in
cli
cli
ljmp
addb
inc
push
aaa
imul
push
inc
cmc
add
pusha
xor
cmp
pusha
jne
pop
push
lcall
loopne
sbb
js
aad
ffreep
and
add
pop
fs
in
cli
pop
lods
pop
popw
aam
test
orb
pusha
add
jecxz
or
int3
pop
ret
pop
add
dec
add
icebp
adc
ljmp
mov
popf
test
loopne
or
mov
ret
std
xchg
into
xchg
gs
mov
clc
jnp
inc
inc
lret
lods
lods
adc
jl
xchg
insb
push
loope
mov
test
andb
mov
inc
loopne
divb
inc
xchg
or
lret
mov
cmp
stc
adcl
xorl
and
inc
mov
fwait
pop
clc
es
ljmp
rcrb
push
push
ret
jns
movsb
rol
or
out
sahf
in
mov
sar
pop
jnp
subl
add
xor
ljmp
adc
imul
and
dec
stos
scas
pusha
sbbb
or
add
cmc
sbb
mov
push
negl
loopne
loopne
lahf
add
xchg
outsl
pushl
inc
xor
sub
movsl
ficompl
cmp
test
pusha
cmp
shlb
out
mov
jmp
data16
fistpl
sub
add
push
fildll
ds
adc
sti
inc
dec
inc
jb
add
mov
popa
sbb
andb
mov
bound
shlb
add
les
lock
pop
aam
mov
insl
mov
add
scas
rorb
xorb
dec
inc
mov
add
jae
mov
mov
loopne
push
cmp
mov
pusha
add
data16
mov
in
jl
daa
in
scas
shlb
pusha
clc
imul
rorb
push
stos
aam
mov
movsl
jnp
ja
je
in
out
xchg
aaa
sbb
andb
fwait
andb
lods
dec
in
inc
xchg
scas
adc
fistpll
rcl
mov
fisttps
jne
add
call
pusha
loopne
push
inc
lea
add
pop
in
or
inc
mov
jnp
loope
pusha
and
or
inc
sub
pop
hlt
dec
pushf
mov
addb
call
mov
in
fcoms
xchg
mov
andb
jne
popf
fldenv
add
loopne
mov
cld
cld
insl
loopne
stc
jns
sub
mov
loopne
mov
and
shl
inc
sub
push
mov
loopne
mov
add
inc
cmp
pop
xchg
jns
shl
pop
push
dec
cwtl
dec
std
negl
add
shlb
mov
and
xchg
adc
pop
lahf
fwait
mov
add
enter
mov
loop
shl
inc
add
leave
stos
inc
inc
pushf
adc
mov
and
pusha
sub
pop
pop
cmp
mov
mov
shrb
ficompl
jp
and
sub
sahf
test
cmp
pusha
adcb
xchg
mov
les
mov
jp
movsl
push
mov
add
loop
cwtl
and
xor
push
clc
shll
rolb
movsb
loopne
sbb
inc
iret
cmpsl
cmp
testl
sbb
and
rorb
inc
flds
hlt
push
inc
in
push
sub
fsubs
jo
cmp
rorl
in
cmp
in
outsb
or
pusha
and
add
lods
andb
inc
ljmp
mov
add
imul
pusha
and
sub
stos
pusha
subb
mov
and
test
clc
mov
push
enter
pusha
loopne
lods
andb
add
lods
jno
popf
leave
or
js
mov
xor
pop
jbe
push
in
loope
pop
insl
in
inc
and
push
xchg
inc
cmp
jg
test
rclb
andb
jnp
rolb
adc
mov
or
loopne
pop
xchg
fldcw
insl
mov
addb
sub
add
les
loopne
xor
addb
aas
lahf
sbbl
xor
ret
and
shr
leave
mov
sub
insb
arpl
stc
icebp
pop
push
and
andb
mov
lods
add
inc
js
jns
push
lret
push
ja
popa
jnp
dec
adc
hlt
ror
mov
mov
loopne
js
test
loopne
add
pop
jge
lock
loopne
jne
gs
sub
mov
add
cwtl
shll
push
addb
popa
xlat
test
inc
xor
jne
test
dec
std
add
jbe
sub
push
adc
int3
dec
into
flds
addb
cmp
lcall
in
popf
lahf
fldenv
xchg
mov
and
push
and
jbe
and
adc
andb
sub
inc
xor
bound
adc
xchg
cltd
enter
pusha
loopne
wbinvd
aam
into
push
and
in
inc
and
loop
cmp
sub
rorb
pop
adc
sbb
pusha
rolb
cli
pop
mov
cmp
sahf
and
mov
adc
int3
lahf
xlat
loop
xchg
mov
mov
xchg
and
add
jo
pop
repz
dec
fmulp
notb
sbb
mov
ret
xchg
addb
dec
nop
nop
xlat
push
and
pusha
pop
cltd
jbe
push
adc
add
jg
dec
in
gs
inc
mov
es
push
data16
fldcw
lock
pusha
addb
inc
arpl
mov
cmp
ret
cltd
xor
push
gs
sti
lods
xlat
movsl
cmp
mov
add
pusha
fs
and
mov
and
xchg
push
xchg
sbb
shrb
outsb
mov
andb
add
pushf
sti
push
pop
imul
fstpt
pop
pop
mov
mov
xorb
add
mov
add
or
jmp
pusha
mov
movsb
loopne
mov
mov
jge
mov
dec
je
mov
pop
je
mov
and
fwait
push
cmp
jl
mov
out
adc
or
add
outsb
or
fidivrs
pop
jno
in
ljmp
mov
lea
mov
sbbb
nop
test
addb
out
or
push
and
mov
xlat
mov
add
leave
lret
fildl
ret
mov
xchg
add
ds
jmp
mov
inc
pop
pop
cmp
push
cmpsl
mov
into
xchg
pop
fistl
lods
adc
je
std
cmp
xchg
pusha
sub
mov
ret
mov
mov
pop
sub
mul
or
daa
mov
loope
pop
mov
aaa
mov
mov
scas
or
enter
push
pop
or
add
int
xchg
mov
mov
mov
or
popa
arpl
add
mov
adc
loopne
mov
sub
xor
stos
add
pop
jl
pop
out
loopne
leave
push
fsubl
add
test
out
xor
out
push
rolb
xor
insl
and
push
cli
add
lahf
jno
stc
cltd
addr16
rep
shl
xchg
inc
pusha
data16
sarl
push
addb
and
rolb
pushw
andb
sahf
and
mov
pusha
dec
mov
pusha
mov
subb
sbb
ljmp
leave
int
pop
test
and
lock
fnstenv
int3
cmp
inc
pusha
pop
stos
add
lods
rol
jbe
shlb
or
jl
jle
xchg
adc
mov
jmp
imul
aam
ljmp
mov
mov
sub
add
or
pusha
pusha
push
pusha
rcrb
in
sbb
dec
push
loopne
push
jns
mov
iret
add
xlat
and
inc
shrl
and
dec
inc
pop
aam
sbb
mov
and
lahf
mov
std
insb
push
pusha
sarb
in
and
mov
insb
or
add
shrb
pusha
inc
jb
pusha
rolb
fsubs
pusha
or
and
sbb
inc
test
add
andb
iret
aam
shl
or
subb
imul
imul
pusha
pop
sub
loopne
in
mov
add
pop
push
lods
loopne
push
jg
sbb
mov
dec
or
jmp
mov
dec
test
shrb
cmpb
inc
mov
adc
push
test
jns
andb
cmpsl
sub
divb
mov
imul
dec
mov
test
xlat
loop
fs
sbb
andb
lock
das
leave
and
loop
lahf
mov
mov
loopne
mov
inc
cmpsl
xlat
loopne,pn
rcll
sti
fs
fldl
cmpsb
rol
push
push
fwait
out
data16
pop
and
sarb
scas
mov
jae
and
aaa
dec
cmp
addb
cld
mov
xchg
sbb
mov
jecxz
js
and
es
popa
xor
mov
enter
loopne
cmp
jl
popa
jne
push
mov
fistpl
mov
int
cmp
rolb
popf
test
loopne
push
out
in
cmp
and
pop
loopne
xchg
cmp
lock
popa
data16
lcall
pusha
jnp
andb
add
dec
push
bound
pop
mov
mov
loopne
cmp
push
and
or
dec
and
rclb
xchg
push
mov
add
das
icebp
xchg
cmpsb
andb
mov
push
inc
mov
clc
ss
pusha
call
mov
push
iret
inc
xchg
stc
pusha
mov
call
inc
xorb
hlt
dec
cmp
add
leave
mov
jno
push
pop
sub
popf
adc
mov
sbb
scas
cmp
fldcw
jb
mov
cmpb
pusha
loopne
test
add
sbb
addb
loopne
mov
loop
inc
xchg
mov
push
andl
imul
sbb
pusha
xor
push
fidivs
shlb
cld
ret
adcb
addb
add
sbb
sti
fs
cli
cli
add
xchg
mov
mov
mov
sbb
into
inc
inc
aas
shlb
adc
xchg
orb
push
inc
mov
adc
mov
addb
das
sbb
xor
andb
xchg
jne
mov
rolb
nop
jns
das
ret
int
and
jo
add
inc
das
pop
mov
and
rolb
loopne
lret
jge
add
and
gs
jmp
inc
stos
xor
xorl
xlat
inc
xorl
out
sbb
fldt
call
pop
push
sub
inc
popa
push
js
rcll
shlb
loopne
shrb
sub
shlb
xorb
loopne
dec
jmp
mov
inc
push
xlat
test
mov
xor
ja
push
mov
jne
or
cmc
jg
ror
lret
es
aaa
test
xorb
dec
testl
and
loopne
dec
inc
jecxz
add
in
mov
test
pusha
test
test
xchg
xchg
add
add
js
aaa
shl
setb
loope
aad
andb
cmp
pop
outsb
mov
adcb
jbe
rol
addb
push
loopne
and
jne
insb
iret
push
daa
cmp
xchg
add
in
add
push
push
push
push
push
push
call
sub
add
imul
lea
and
cmp
je
mov
push
push
bnd
cmp
jne
mov
add
push
push
push
push
call
test
jne
jmp
lea
movl
push
push
push
push
call
cmp
lea
jne
movzbl
or
pop
mov
not
imul
and
jne
call
loop
mov
mov
stc
notrack
sbb
mov
add
add
mov
mov
mov
inc
or
lea
lea
add
lea
add
sub
jmp
push
mov
jmp
and
movsb
pusha
and
xchg
inc
cmp
inc
add
shl
decl
sub
mov
jmp
mov
xor
in
popf
in
sbb
loopne
inc
and
dec
fidivl
cltd
call
cld
xor
addr16
loopne
daa
bound
adc
dec
ja
mov
addl
and
pusha
mov
imul
xchg
dec
mov
lret
push
fldenv
loopne
sbb
fucomp
push
sbb
inc
cmp
cmpxchg
jne
sub
rolb
test
push
inc
loopne
cmp
divl
inc
push
aas
in
fildll
shl
and
and
push
dec
adc
test
and
add
shll
cmp
addb
andb
jno
and
lret
or
pusha
loopne
mov
pop
xchg
loop
arpl
rcrl
push
andb
shl
sahf
lea
jp
inc
xchg
pop
fsubs
jb
shlb
push
push
and
mov
mov
sub
pusha
ja
add
pop
xchg
inc
add
and
es
popf
out
sub
mov
shl
add
mov
add
xchg
jmp
loopne
push
jg
push
xchg
jo
add
pusha
mov
push
shlb
adc
xchg
sarb
mov
ret
lret
loop
or
sbbb
jmp
and
imul
int
test
idivl
out
bound
out
fwait
lods
stos
push
add
pop
jg
jns
xor
mov
push
push
icebp
nop
push
mov
inc
rclb
fs
loopne
jbe
test
push
push
daa
mov
lock
movsl
jae
fwait
in
mov
aaa
fs
pusha
and
fisubs
leave
jbe
push
adc
inc
and
gs
jp
pop
lock
jp
fidivs
rclb
sbb
pusha
mov
add
pusha
xor
jno
test
add
push
xlat
fwait
push
mov
sbb
mov
jo
nop
data16
pop
das
cmp
pop
xchg
push
rol
into
push
jne
addr16
or
call
dec
sub
and
ja
adc
mov
inc
push
xor
add
add
sub
pusha
push
push
dec
idivl
push
or
sarb
mov
mov
insb
xor
xchg
stos
andb
jp
and
adc
cmp
cltd
jge
daa
pop
and
pop
xor
cwtl
addb
xchg
stos
sbb
add
xchg
or
add
insl
out
fdivrl
aaa
mov
out
aad
and
loopne
pop
dec
ret
mov
jne
imul
add
sbb
loope
jl
lock
and
adc
inc
and
xchg
add
jbe
ret
lret
add
mov
xchg
xchg
xor
xchg
sti
sbb
mov
divb
lock
scas
and
add
add
loopne
xchg
rolb
insl
dec
into
adc
add
addb
and
psadbw
popa
clc
push
ss
int3
hlt
rorl
addb
in
inc
mov
sar
shlb
pop
fisubl
sarb
xor
les
add
ror
ds
aaa
lds
cmpsb
and
test
inc
pusha
sub
loopne
out
ret
add
add
call
cmpb
mov
nop
xchg
dec
push
cli
jne
rclb
xor
xor
aam
cmp
sti
jmp
mov
and
push
ljmp
fstps
inc
enter
inc
xor
mov
in
stos
mov
push
in
jnp
sti
js
xor
xchg
aas
pop
inc
faddl
pushf
hlt
inc
xchg
popl
test
or
and
ljmp
loopne
and
fisubrl
mov
jno
fwait
int3
insb
imul
or
nop
mov
add
mov
or
mov
sbb
out
adc
add
loopne
je
mov
stos
push
fcoms
fisubrs
adc
orl
jp
xor
push
jo
mov
fimuls
cmpsb
mov
rorl
mov
dec
shlb
push
loopne
shlb
jb
popf
mov
mov
vpaddd
push
leave
add
adc
jnp
insl
sub
shl
clc
out
xchg
popf
das
cld
mov
loopne
dec
xchg
pop
clc
sbbl
andb
hlt
mov
sbb
pop
cmpl
std
fistpl
xchg
inc
int
xchg
pusha
jbe
iret
jmp
imul
addb
aaa
mov
mov
push
rol
sub
and
aaa
sub
push
jb
jmp
xor
and
andb
add
xorb
lock
jae
stos
inc
ss
loopne
popa
cli
mov
loopne
sub
xchg
cmp
lret
adc
cmp
cmp
ds
mov
and
dec
pop
mov
mov
inc
sub
inc
xchg
inc
xor
mov
adc
int
loopne
daa
std
and
add
loopne
cmpsl
out
repz
addr16
cmp
xchg
imul
add
jge
andb
sbb
das
dec
pushf
test
sarb
loop
xor
leave
mov
dec
push
inc
cmp
mov
int
dec
dec
mov
rcrb
arpl
fidivrs
inc
mov
xor
sub
and
sbb
push
cmp
movsb
loopne
sub
loopne
daa
xor
and
shlb
mov
test
ror
cli
push
xor
xor
andl
call
andb
daa
dec
test
loopne
mov
cltd
add
fisttps
imul
dec
jo
jl
inc
loopne
or
rorb
push
xor
inc
pusha
xchg
cmp
mov
insl
pusha
fsubr
and
adc
imul
fmull
ret
sub
inc
pop
movb
cmp
movb
mov
loopne
lcall
imul
test
add
fstp
sub
and
rolb
jae
mov
sbb
pop
les
pusha
insb
adc
and
add
cmp
inc
mov
out
das
pusha
ret
mov
pusha
mov
sub
addb
mov
inc
shl
popa
push
andb
inc
inc
mov
sbb
addb
or
lds
add
inc
inc
dec
rcrb
cwtl
dec
clc
inc
mov
test
leave
mov
cmpsb
inc
cmp
cld
mov
rolb
xor
and
enter
andb
scas
xchg
mov
or
mov
rcll
add
sbb
in
out
fsts
mov
push
mov
movsl
out
xorl
imul
imul
loopne
iret
inc
xchg
cmp
leave
push
cli
lcall
repnz
push
push
sbb
jo
xor
inc
fiaddl
xchg
lds
jb
jmp
dec
loope
enter
andb
stc
in
ret
in
popf
fiadds
jo
jb
sar
dec
xchg
out
insb
lock
sbbb
inc
sub
and
sbb
sbb
mov
mov
add
ja
jecxz
add
and
jno
insl
insb
mov
pop
and
inc
fwait
lea
pusha
add
clc
jp
jno
inc
push
xchg
jnp
mov
xchg
or
jle
push
test
movsb
add
xor
outsb
sub
inc
push
imul
repnz
lret
jle
add
loopne
jge
cltd
sbb
lock
mov
ds
call
inc
loope
mov
add
cmp
and
jp
inc
add
inc
js
adc
mov
in
xorl
sbb
push
movsb
and
inc
adc
hlt
stos
and
cmpsb
pusha
add
rsqrtps
enter
mov
pusha
and
adc
daa
test
pusha
aaa
leave
mov
gs
loopne
xor
sbb
xor
inc
jmp
dec
sbb
mov
mov
std
movsb
add
cmp
dec
in
inc
inc
test
or
out
pop
xor
push
jo
sub
dec
mov
xor
dec
jnp
mov
shlb
and
cmp
push
pusha
mov
popa
dec
int3
mov
push
sbb
inc
pusha
add
rolb
pusha
loopne
fsts
pop
iret
pop
fnsave
cmp
inc
mov
inc
adc
add
fs
pop
add
cmpb
ljmp
add
push
xchg
push
xchg
pop
rol
add
not
icebp
dec
push
fyl2xp1
jae
ret
std
loop
sbb
pop
cwtl
pop
mov
mov
testl
mov
fisubs
add
sub
rclb
jbe
out
mov
pop
pop
sbb
je
inc
andb
mov
test
or
add
stos
inc
loopne
mov
or
shrb
sar
xor
lcall
lcall
sbb
imul
mov
cmp
cmc
imul
bound
pop
aaa
test
inc
mov
jle
add
rorb
cmpb
or
loopne
mov
pinsrw
and
daa
adc
xor
inc
pop
jb
mov
inc
lock
pusha
inc
outsl
in
movsb
add
pusha
inc
jns
movsb
addb
addb
push
lcall
pusha
ljmp
mov
jae
jecxz
xchg
inc
movsl
loopne
testb
mov
xchg
addb
fadds
ss
jne
inc
xchg
xor
movsb
loopne
pop
cmc
inc
ja
cmp
mov
cmp
inc
push
add
fiadds
pop
mov
cli
cmp
subb
add
inc
pusha
inc
inc
and
mov
cwtl
movsb
pusha
add
pop
fmull
adc
mov
inc
and
call
mov
dec
daa
cli
xchg
imul
push
rol
jne
inc
mov
into
lods
and
loope
pop
cli
inc
xchg
push
push
sarl
lretw
dec
enter
enter
mov
and
dec
xchg
dec
push
add
push
add
adc
sub
mov
outsl
pusha
xor
jge
and
add
lock
lahf
jg
lds
out
push
data16
mov
mov
lds
js
cld
stos
mov
adc
ljmp
sbbb
mov
cld
dec
popf
add
and
clc
sti
push
cs
rcr
or
and
xor
pusha
test
loopne
inc
sub
pushf
xor
sbb
jns
in
gs
and
shlb
loopne
aas
adc
das
int
jge
in
mov
rcr
ret
pop
scas
mov
sar
leave
ja
decl
inc
sub
add
mov
enter
xchg
arpl
pop
mov
insb
jo
push
imulb
and
shlb
push
insb
lcall
clc
push
adc
out
and
lods
loopne
test
std
fmull
add
and
sub
cmpsl
xor
mov
inc
pop
rcrb
push
rcrb
xchg
insb
insl
sub
sbb
inc
inc
and
loopne
pop
jnp
pusha
scas
mov
ficompl
shrl
dec
sbb
cmp
ds
xchg
in
push
jecxz
and
inc
pop
movsl
mov
mov
stos
inc
add
adc
adc
inc
pusha
pop
loope
std
andb
xchg
sahf
iret
mov
xchg
fwait
test
fnsave
aaa
sahf
push
movl
lods
and
in
cmp
call
add
pop
jl
test
rcl
mov
loope
cmp
or
mov
lret
jno
andb
cwtl
mov
inc
sbb
adc
fldcw
pusha
cmpb
or
cmpb
icebp
scas
xchg
call
jge
movsb
mov
les
imul
dec
cmpsb
pusha
shl
loop
aad
data16
repz
xchg
and
scas
mov
fs
daa
mov
in
fisttpl
or
loopne
addb
and
mov
mov
dec
adc
lods
andb
dec
int3
cmp
xchg
add
push
jne
ljmp
push
xor
adc
pushf
adc
mov
cmp
cltd
xchg
les
loopne
add
pusha
ds
lret
jge
sbb
mov
pusha
loopne
add
andb
inc
in
lahf
hlt
mov
out
jae
scas
or
imul
mov
inc
imul
mov
xchg
pushf
cmp
dec
gs
mov
or
cmpb
and
and
jbe
xchg
xor
mov
popaw
jmp
and
mov
addr16
jmp
mov
rolb
sti
call
sub
daa
mov
enter
lcall
mov
in
sti
cmp
cmp
in
aaa
inc
push
mov
insb
pushf
lock
rolb
imul
add
mov
and
jbe
mov
in
inc
iret
and
leave
sub
pusha
jge
ficomps
push
ds
cmpsl
insl
aas
jmp
lods
xchg
pop
mov
sub
shl
in
pop
repnz
out
fs
or
sbb
jb
fiaddl
cmp
clc
cld
bound
mov
add
pusha
out
scas
inc
loopne
pop
push
in
cmpsb
loopne
add
subb
pop
pop
inc
sub
pusha
pusha
cmc
add
insb
lock
loopne
in
out
adc
loopne
mov
out
mov
aaa
push
mov
push
and
add
ficoms
mov
loopne
aam
ss
out
ficomps
xchg
addb
add
pusha
mov
insb
aad
cwtl
or
stc
sub
add
pusha
ljmp
push
sub
pusha
mov
call
sub
loopne
fs
icebp
lret
and
shlb
lds
cmp
mov
repnz
dec
in
push
clc
repnz
nop
cld
jae
or
add
mov
clc
repnz
nop
cld
jae
add
add
notb
push
clc
repnz
nop
cld
jae
add
out
mov
add
add
add
add
add
shr
jne
clc
repnz
nop
cld
jae
sarl
and
call
leave
nop
jmp
add
jbe
add
out
in
cwtl
jns
int
pop
jae
push
mov
leave
nop
jmp
rolb
jg
push
mov
nop
push
mov
leave
nop
jmp
shlb
add
loopne
out
push
mov
xchg
ret
add
adc
mov
push
mov
xchg
ret
add
and
add
mov
scas
cmp
nop
push
mov
leave
nop
jmp
addb
loope
add
jno
ljmp
jae
add
jnp
inc
jae
rcll
nop
jmp
add
add
pusha
daa
add
nop
cld
jae
add
pusha
add
xor
clc
repnz
nop
cld
jae
add
add
dec
add
add
clc
repnz
nop
cld
jae
add
add
mov
clc
repnz
nop
cld
jae
jge
add
sar
and
jne
nop
push
mov
leave
nop
jmp
pusha
add
jno
mov
and
nop
push
mov
leave
nop
jmp
add
add
inc
push
clc
repnz
nop
cld
jae
add
sbb
add
mov
xor
add
clc
repnz
nop
cld
jae
in
jno
or
ja
test
add
clc
repnz
nop
cld
jae
rolb
xchg
mov
jne
clc
repnz
nop
cld
jae
add
dec
sub
test
add
clc
repnz
nop
cld
jae
mov
add
iret
movzwl
clc
repnz
nop
cld
jae
dec
daa
add
das
mov
nop
push
mov
leave
nop
jmp
add
daa
into
jp
mov
adcb
jmp
jnp
add
addb
sar
repnz
nop
cld
jae
add
add
out
out
push
push
push
mov
xchg
ret
add
add
jb
xchg
clc
repnz
nop
cld
jae
aaa
add
dec
add
xor
push
mov
xchg
ret
add
jno
add
jb
in
add
push
mov
xchg
ret
add
mov
pop
fsubl
mov
sub
inc
add
incl
mov
ja
clc
repnz
nop
cld
jae
add
clc
repnz
nop
cld
jae
push
add
sub
push
mov
leave
nop
jmp
add
or
add
repnz
nop
cld
jae
add
push
ds
add
push
mov
xchg
ret
add
mov
rolb
and
ss
clc
repnz
nop
cld
jae
mov
les
gs
clc
repnz
nop
cld
jae
add
add
ss
add
clc
repnz
nop
cld
jae
add
in
add
mov
clc
repnz
nop
cld
jae
pusha
dec
add
xor
and
jle
shlb
sub
jne
inc
clc
repnz
nop
cld
jae
inc
add
jg
add
add
nop
push
mov
leave
nop
jmp
jg
add
pop
clc
repnz
nop
cld
jae
pop
dec
incb
mov
dec
nop
push
mov
leave
nop
jmp
jno
and
in
add
fwait
mov
clc
repnz
nop
cld
jae
add
add
add
inc
push
push
mov
xchg
ret
shll
add
jne,pt
sti
add
add
nop
push
mov
leave
nop
jmp
into
add
mov
push
mov
xchg
ret
jnp
add
push
pop
inc
add
mov
clc
repnz
nop
cld
jae
jp
add
movsb
mov
clc
repnz
nop
cld
jae
or
out
add
mov
clc
repnz
nop
cld
jae
dec
add
xor
pop
pusha
push
mov
xchg
ret
add
lret
add
shrl
call
cld
jae
dec
add
iret
xor
clc
repnz
nop
cld
jae
mov
jge
je
clc
repnz
nop
cld
jae
add
sbb
mov
xchg
ret
mov
add
add
je
mov
clc
repnz
nop
cld
jae
add
add
ja
pause
push
mov
leave
nop
jmp
inc
add
add
movsl
add
push
mov
xchg
ret
add
daa
add
xor
clc
repnz
nop
cld
jae
ror
add
xorl
dec
or
in
inc
inc
jg
add
add
inc
add
mov
jb
clc
repnz
nop
cld
jae
add
in
nop
push
mov
leave
nop
jmp
add
jg
add
nop
push
mov
leave
nop
jmp
add
inc
inc
jge
mov
push
mov
xchg
ret
add
or
inc
shlb
fwait
nop
push
mov
leave
nop
jmp
add
mov
add
push
mov
xchg
ret
mov
out
into
pop
add
add
inc
lea
push
mov
xchg
ret
out
out
add
add
sub
and
add
push
mov
xchg
ret
shrl
arpl
addb
add
clc
repnz
nop
cld
jae
xor
or
movb
repnz
nop
cld
jae
jp
jbe
mov
ret
nop
push
mov
leave
nop
jmp
mov
mov
add
loope
xchg
push
push
mov
xchg
ret
push
add
add
jnp
add
mov
push
mov
xchg
ret
add
sub
add
shlb
mov
nop
push
mov
leave
nop
jmp
add
inc
aaa
dec
xor
push
mov
xchg
ret
dec
in
xor
add
rolb
les
mov
repnz
nop
cld
jae
add
out
mov
fildl
nop
nop
cld
jae
add
jp
dec
stos
loopne
pop
lock
pop
clc
repnz
nop
cld
jae
add
add
jge
sbb
push
mov
xchg
ret
add
add
inc
movsb
rolb
push
push
mov
xchg
ret
add
add
add
pusha
add
mov
xchg
ret
mov
push
mov
mov
clc
repnz
nop
cld
jae
add
pusha
add
inc
in
push
mov
xchg
ret
mov
sarb
clc
repnz
nop
cld
jae
add
nop
sub
shr
push
nop
push
mov
leave
nop
jmp
add
add
push
mov
leave
nop
jmp
add
add
lea
nop
nop
cld
jae
add
jbe
rolb
subl
clc
repnz
nop
cld
jae
sub
mov
mov
mov
add
clc
repnz
nop
cld
jae
add
add
jp
jns
ret
push
mov
xchg
ret
jbe
add
add
add
dec
pop
nop
push
mov
leave
nop
jmp
jge
add
mov
nop
push
mov
leave
nop
jmp
sub
add
into
pusha
jbe
add
clc
repnz
nop
cld
jae
add
add
sub
mov
rolb
pop
push
mov
xchg
ret
pop
shl
dec
pusha
addl
add
fld1
nop
push
mov
leave
nop
jmp
roll
add
add
stc
push
push
mov
xchg
ret
add
add
pop
add
jmp
add
push
mov
add
inc
rolb
xor
pop
and
repnz
nop
cld
jae
jp
add
pop
clc
repnz
nop
cld
jae
in
add
into
add
add
push
clc
repnz
nop
cld
jae
addl
add
add
add
push
adc
test
xchg
ret
movsl
or
in
loope
add
jns
nop
push
mov
leave
nop
jmp
cmpsl
add
mov
inc
pop
dec
push
mov
xchg
ret
push
add
lret
mov
add
clc
repnz
nop
cld
jae
xor
dec
movsl
add
cli
xchg
add
clc
repnz
nop
cld
jae
add
sbb
xchg
inc
and
repnz
nop
cld
jae
jb
out
add
add
loop
push
mov
leave
nop
jmp
add
mov
jb
xorl
cld
jae
add
add
inc
outsl
push
clc
repnz
nop
cld
jae
add
push
add
add
roll
leave
imul
cmp
ret
add
add
add
insb
cmc
je
clc
repnz
nop
cld
jae
mov
dec
mov
loop
push
mov
xchg
ret
in
rcll
add
int3
js
xchg
mov
clc
repnz
nop
cld
jae
add
or
jmp
clc
repnz
nop
cld
jae
add
daa
mov
clc
repnz
nop
cld
jae
add
out
add
decb
nop
nop
cld
jae
add
out
add
sub
sub
mov
pusha
push
les
clc
repnz
nop
cld
jae
add
add
leave
push
clc
repnz
nop
cld
jae
add
add
inc
sarb
nop
cld
jae
js
add
jno
out
lds
pop
jbe
add
fiadds
add
add
mov
inc
js
mov
clc
repnz
nop
cld
jae
add
js
inc
js
mov
clc
repnz
nop
cld
jae
add
add
add
insl
xchg
clc
repnz
nop
cld
jae
add
add
add
movsb
push
mov
xchg
ret
lret
and
add
add
push
mov
leave
nop
jmp
add
add
add
xchg
xor
add
push
mov
xchg
ret
add
inc
out
mov
dec
lret
lods
xor
push
mov
xchg
ret
pop
daa
add
pusha
add
repnz
nop
cld
jae
add
dec
add
add
push
pop
jne
sbb
push
mov
xchg
ret
add
add
in
dec
imul
nop
push
mov
leave
nop
jmp
pusha
movsl
add
add
push
pop
clc
repnz
nop
cld
jae
jge
add
add
add
jnp
add
xchg
ret
add
add
jle
pop
clc
repnz
nop
cld
jae
add
add
add
add
repnz
nop
cld
jae
add
add
and
inc
lahf
pop
push
mov
xchg
ret
mov
pusha
fidivrs
mov
popf
clc
repnz
nop
cld
jae
add
push
lea
push
mov
xchg
ret
cmpsl
push
add
mov
push
mov
xchg
ret
xor
add
add
inc
cmc
mov
clc
repnz
nop
cld
jae
mov
or
xchg
popa
clc
repnz
nop
cld
jae
xor
add
lret
clc
repnz
nop
cld
jae
add
add
add
inc
add
push
clc
repnz
nop
cld
jae
cmpl
mov
add
nop
cld
jae
adc
out
into
ss
jne
nop
push
mov
leave
nop
jmp
jp
in
pop
clc
repnz
nop
cld
jae
mov
dec
in
incb
hlt
cmp
nop
nop
cld
jae
mov
add
add
test
xor
mov
cmp
ret
mov
or
sub
repnz
nop
cld
jae
add
add
addr16
clc
repnz
nop
cld
jae
lret
sarl
xadd
or
inc
add
pop
add
daa
add
xchg
jne
clc
repnz
nop
cld
jae
add
push
mov
leave
nop
jmp
xor
add
sahf
hlt
push
mov
clc
repnz
nop
cld
jae
jg
add
add
clc
repnz
nop
cld
jae
jg
add
addb
jne
clc
repnz
nop
cld
jae
add
inc
xchg
pop
adc
nop
push
mov
leave
nop
jmp
inc
jp
mov
add
clc
repnz
nop
cld
jae
add
mov
add
inc
add
and
cld
jae
jno
jnp
fildll
nop
push
mov
leave
nop
jmp
aaa
orl
movsl
clc
repnz
nop
cld
jae
add
sub
add
clc
repnz
nop
cld
jae
add
repnz
nop
cld
jae
jge
lret
in
dec
aad
jmp
in
leave
nop
jmp
add
add
add
add
xchg
pop
and
pop
outsb
inc
add
inc
add
pop
add
lret
pusha
clc
repnz
nop
cld
jae
sbb
addl
sbb
repnz
nop
cld
jae
add
add
add
popa
clc
repnz
nop
cld
jae
add
add
jnp
arpl
js
mov
nop
push
mov
leave
nop
jmp
jge
add
sbb
mov
clc
repnz
nop
cld
jae
jno
xor
clc
nop
push
mov
leave
nop
jmp
add
fiadds
add
add
faddl
add
repnz
nop
cld
jae
arpl
add
xlat
pop
clc
repnz
nop
cld
jae
add
shl
lret
stos
jne
clc
repnz
nop
cld
jae
add
sbb
arpl
repnz
nop
cld
jae
add
mov
mov
nop
push
mov
leave
nop
jmp
inc
roll
jp
add
or
and
push
mov
add
cmp
add
xchg
ret
add
jno
sbb
inc
inc
add
inc
cli
cmpw
mov
leave
nop
jmp
add
add
mov
mov
xchg
ret
push
pusha
add
xor
clc
repnz
nop
cld
jae
add
add
sti
push
mov
xchg
ret
mov
add
cmc
add
nop
push
mov
leave
nop
jmp
add
inc
push
add
sbb
repnz
nop
cld
jae
add
pop
sub
stc
push
clc
repnz
nop
cld
jae
mov
add
add
and
std
add
clc
repnz
nop
cld
jae
add
addl
cltd
fistpl
clc
repnz
nop
cld
jae
add
pop
incb
andb
mov
std
push
push
mov
xchg
ret
add
aaa
jnp
out
push
mov
lret
sbb
add
jg
mov
scas
in
out
mov
ret
push
push
mov
xchg
ret
add
js
addl
mov
shlb
movzwl
clc
repnz
nop
cld
jae
jno
into
add
roll
jne
clc
repnz
nop
cld
jae
cmpsl
aaa
xor
and
insb
mov
sub
mov
fistpl
push
mov
xchg
ret
add
daa
add
call
cld
jae
add
add
rolb
inc
mov
clc
repnz
nop
cld
jae
add
adc
lret
mov
clc
repnz
nop
cld
jae
add
add
or
loopne
or
clc
repnz
nop
cld
jae
mov
dec
aaa
xor
mov
clc
repnz
nop
cld
jae
js
add
jbe
add
clc
repnz
nop
cld
jae
add
add
adcl
xor
inc
add
add
and
add
dec
movsl
jb
fld1
push
mov
xchg
ret
mov
xor
jmp
push
sbb
add
add
add
add
es
jecxz
repnz
nop
cld
jae
add
daa
movsl
out
push
mov
xchg
ret
add
sub
addb
andb
mov
clc
repnz
nop
cld
jae
inc
mov
sbbl
movsb
push
mov
xchg
ret
add
and
js
inc
in
leave
push
nop
push
mov
leave
nop
jmp
jbe
roll
and
repnz
nop
cld
jae
add
sub
mov
nop
nop
cld
jae
mov
jb
add
add
adc
add
repnz
nop
cld
jae
add
push
fiadds
add
add
add
add
clc
repnz
nop
cld
jae
add
add
nop
cld
jae
add
mov
add
clc
repnz
nop
cld
jae
inc
add
rolb
sub
mov
push
mov
xchg
ret
add
add
dec
add
pusha
inc
mov
nop
push
mov
leave
nop
jmp
out
inc
addl
push
mov
xchg
ret
mov
add
fld1
cmp
call
nop
jmp
add
add
sub
rorb
lock
mov
xchg
ret
add
jp
add
add
adc
repnz
nop
cld
jae
inc
sbb
int
pop
jae
repnz
nop
cld
jae
add
jbe
jecxz
and
push
fs
repnz
nop
cld
jae
add
add
psubsb
mov
leave
nop
jmp
jg
add
movsl
and
clc
repnz
nop
cld
jae
mov
jnp
mov
push
mov
xchg
ret
add
add
inc
dec
add
roll
repnz
nop
cld
jae
aaa
add
mov
clc
repnz
nop
cld
jae
add
add
dec
js
add
icebp
rep
clc
repnz
nop
cld
jae
add
add
add
push
mov
xchg
ret
inc
add
jp
add
repnz
nop
cld
jae
jg
add
and
ss
mov
cmc
clc
repnz
nop
cld
jae
add
daa
rcll
add
clc
repnz
nop
cld
jae
add
add
mov
nop
push
mov
leave
nop
jmp
loope
and
add
add
push
mov
xchg
ret
add
add
xchg
add
push
mov
xchg
ret
add
push
xor
clc
repnz
nop
cld
jae
adc
add
inc
add
in
jmp
nop
cld
jae
add
jg
js
push
fwait
push
mov
xchg
ret
add
js
add
mov
push
mov
xchg
ret
pop
mov
out
adc
clc
repnz
nop
cld
jae
add
add
add
cmc
clc
repnz
nop
cld
jae
add
shlb
mov
clc
repnz
nop
cld
jae
add
sub
push
mov
xchg
ret
jge
add
add
or
inc
mov
jne
clc
repnz
nop
cld
jae
jg
add
ja
add
nop
nop
cld
jae
add
mov
roll
mov
xchg
ret
mov
in
add
add
jecxz
icebp
inc
dec
es
repnz
nop
cld
jae
add
mov
repnz
nop
cld
jae
xor
inc
add
orb
test
add
clc
repnz
nop
cld
jae
add
daa
test
and
popl
clc
repnz
nop
cld
jae
out
movsl
add
incb
arpl
in
leave
nop
jmp
shl
add
dec
add
mov
pusha
stc
call
clc
repnz
nop
cld
jae
and
add
in
jno
push
mov
xchg
ret
add
add
add
inc
mov
add
clc
repnz
nop
cld
jae
shlb
popa
nop
push
mov
leave
nop
jmp
mov
mov
int
nop
push
mov
leave
nop
jmp
add
add
add
repnz
nop
cld
jae
shll
add
add
shrb
and
push
mov
xchg
ret
add
add
addb
sub
clc
repnz
nop
cld
jae
jg
add
incl
push
fiadds
daa
add
add
inc
add
pusha
mov
clc
repnz
nop
cld
jae
jp
add
insl
call
clc
repnz
nop
cld
jae
or
pusha
add
add
pushl
push
mov
xchg
ret
add
add
sub
add
clc
repnz
nop
cld
jae
push
add
add
repz
clc
repnz
nop
cld
jae
jge
add
dec
fsubrp
inc
ret
push
mov
xchg
ret
pop
out
jg
add
add
jbe
stos
push
mov
xchg
ret
add
add
addl
mov
clc
repnz
nop
cld
jae
add
inc
add
add
mov
leave
nop
jmp
jbe
add
inc
jnp
add
push
clc
repnz
nop
cld
jae
add
add
mov
mov
add
add
repnz
nop
cld
jae
add
enter
clc
repnz
nop
cld
jae
mov
lret
push
mov
inc
add
adc
loopne
mov
call
popa
aas
add
jne
clc
repnz
nop
cld
jae
add
mov
je
clc
repnz
nop
cld
jae
orl
repnz
nop
cld
jae
in
sbb
sbb
call
nop
jmp
add
add
adc
roll
repnz
nop
cld
jae
fidivs
mov
clc
repnz
nop
cld
jae
jno
add
adc
repnz
nop
cld
jae
or
add
aaa
or
add
mov
leave
nop
jmp
aaa
mov
add
pop
jne
clc
repnz
nop
cld
jae
add
xor
gs
jmp
incl
mov
add
add
in
clc
repnz
nop
cld
jae
inc
add
aaa
add
mov
push
mov
xchg
ret
aaa
add
add
movl
jae
mov
jge
add
mov
clc
repnz
nop
cld
jae
shl
or
clc
repnz
nop
cld
jae
add
jp
mov
out
sub
mov
repnz
nop
cld
jae
jno
add
mov
push
nop
push
mov
leave
nop
jmp
mov
mov
add
in
inc
pusha
sub
pusha
adc
nop
nop
cld
jae
add
add
pop
xchg
call
nop
jmp
add
out
inc
mov
repnz
nop
cld
jae
and
add
mov
mov
xchg
ret
add
add
add
jp
in
lea
clc
repnz
nop
cld
jae
push
add
and
clc
repnz
nop
cld
jae
add
push
movzwl
clc
repnz
nop
cld
jae
add
add
push
mov
nop
push
mov
leave
nop
jmp
jb
roll
mov
call
cld
jae
add
incb
addb
push
clc
repnz
nop
cld
jae
jg
add
nop
xchg
subl
push
mov
xchg
ret
or
into
add
inc
mov
cli
clc
repnz
nop
cld
jae
add
mov
aaa
add
and
aas
lea
nop
push
mov
leave
nop
jmp
add
add
add
inc
dec
fld1
push
mov
xchg
ret
add
sub
addb
movsl
mov
clc
repnz
nop
cld
jae
arpl
mov
xor
clc
repnz
nop
cld
jae
add
add
pop
clc
repnz
nop
cld
jae
xor
in
xchg
xor
clc
repnz
nop
cld
jae
add
add
cmp
push
mov
leave
nop
jmp
sub
daa
in
adc
add
push
clc
repnz
nop
cld
jae
add
mov
inc
add
repnz
nop
cld
jae
add
dec
out
in
add
push
clc
repnz
nop
cld
jae
add
in
add
js
cld
nop
mov
mov
repnz
nop
cld
jae
and
jno
add
xor
in
add
nop
push
mov
leave
nop
jmp
sarb
addb
add
in
leave
nop
jmp
add
mov
clc
repnz
nop
cld
jae
add
rolb
fisubs
dec
loopne
xor
repnz
nop
cld
jae
js
push
imul
clc
repnz
nop
cld
jae
add
add
add
loopne
lds
test
xchg
ret
pop
arpl
add
pop
inc
adc
shl
ja
sar
nop
nop
cld
jae
add
loope
and
add
mov
sub
mov
push
mov
xchg
ret
dec
add
addb
add
xor
call
clc
repnz
nop
cld
jae
add
add
lahf
push
push
mov
xchg
ret
mov
jbe
add
inc
arpl
adc
add
inc
add
and
add
movsl
inc
add
jno
add
pop
add
add
add
adc
rclb
mov
xchg
ret
mov
add
rcrb
xor
clc
repnz
nop
cld
jae
add
push
loope
add
or
nop
cld
jae
dec
add
mov
pusha
rcrb
clc
repnz
nop
cld
jae
add
addl
add
sbb
nop
nop
cld
jae
mov
rolb
pusha
aad
inc
loopne
repnz
nop
cld
jae
add
xorl
repnz
nop
cld
jae
add
mov
jmp
incl
add
add
add
jge
add
pop
out
pop
clc
repnz
nop
cld
jae
adc
add
add
mov
mov
pop
push
mov
xchg
ret
add
add
aaa
adc
add
repnz
nop
cld
jae
daa
mov
daa
add
fadd
add
clc
repnz
nop
cld
jae
jp
incb
cmpsl
push
xor
push
mov
leave
nop
jmp
jge
inc
cmpsl
add
xchg
sub
clc
repnz
nop
cld
jae
js
js
add
repnz
nop
cld
jae
arpl
jp
jp
add
mov
clc
repnz
nop
cld
jae
into
mov
add
addb
cmp
repnz
nop
cld
jae
add
add
aaa
add
mov
clc
repnz
nop
cld
jae
add
push
andb
push
push
mov
xchg
ret
fiadds
add
adc
mov
add
push
mov
xchg
ret
lret
add
loope
xchg
repz
repnz
nop
cld
jae
jnp
add
add
in
cmp
repnz
nop
cld
jae
add
dec
add
or
nop
cld
jae
add
add
incl
inc
out
ror
in
incb
add
sbb
es
mov
sti
outsb
inc
add
jbe
mov
add
jg
repz
nop
push
mov
leave
nop
jmp
shll
loope
mov
mov
clc
repnz
nop
cld
jae
aaa
jp
lret
jnp
inc
push
mov
add
add
addb
popf
lret
aad
rcll
rclb
jmp
push
push
seto
in
leave
nop
jmp
add
mov
fwait
clc
repnz
nop
cld
jae
add
mov
add
add
mov
jge
nop
push
mov
leave
nop
jmp
pusha
add
xorl
clc
repnz
nop
cld
jae
add
into
out
adcl
mov
clc
repnz
nop
cld
jae
add
and
push
nop
push
mov
leave
nop
jmp
add
inc
jp
fiadds
add
clc
repnz
nop
cld
jae
inc
add
jmp
dec
sub
inc
je
add
into
movsl
sbb
lss
clc
repnz
nop
cld
jae
js
movzwl
clc
repnz
nop
cld
jae
pop
add
jno
int3
rcll
xchg
std
add
push
add
pusha
pop
jbe
add
add
movsb
add
inc
push
mov
xchg
ret
jge
add
add
sbb
pusha
push
mov
xchg
ret
add
and
xor
std
push
clc
repnz
nop
cld
jae
add
mov
daa
cld
out
pop
clc
repnz
nop
cld
jae
daa
aaa
add
mov
nop
cld
jae
push
add
add
add
nop
lret
dec
push
mov
xchg
ret
lret
out
jb
mov
clc
repnz
nop
cld
jae
inc
add
mov
push
clc
repnz
nop
cld
jae
add
add
add
inc
ficomps
clc
repnz
nop
cld
jae
inc
mov
add
xchg
clc
repnz
nop
cld
jae
out
mov
add
push
clc
repnz
nop
cld
jae
add
mov
add
jne
push
mov
xchg
ret
into
add
dec
mov
add
add
shlb
nop
nop
cld
jae
add
add
out
sbb
pusha
and
add
mov
xor
pushl
add
jnp
inc
add
add
add
clc
repnz
nop
cld
jae
add
add
lret
inc
imulb
xchg
nop
push
mov
leave
nop
jmp
add
roll
inc
and
clc
repnz
nop
cld
jae
inc
add
mov
push
mov
xchg
ret
jp
adc
mov
mov
xchg
ret
add
adc
add
push
push
cli
xchg
push
clc
repnz
nop
cld
jae
jbe
js
rolb
push
add
nop
nop
cld
jae
add
add
inc
add
adc
xbegin
jae
add
add
jns
cmpl
jae
jg
add
add
add
add
into
xor
orl
and
xchg
inc
add
jnp
add
add
mov
insl
fld1
nop
push
mov
leave
nop
jmp
add
add
addl
push
push
nop
push
mov
leave
nop
jmp
jg
loope
sbb
nop
nop
cld
jae
jp
add
int3
cli
lods
push
mov
xchg
ret
add
rolb
fistpl
push
mov
xchg
ret
in
add
in
shll
inc
adc
repnz
nop
cld
jae
in
add
add
pusha
clc
repnz
nop
cld
jae
arpl
rolb
mov
push
mov
xchg
ret
mov
add
mov
and
push
mov
xchg
ret
add
xor
add
rorl
mov
xchg
ret
jg
add
out
jno
add
sarb
sbb
clc
repnz
nop
cld
jae
js
jg
fisttpll
test
out
call
nop
jmp
or
add
test
nop
push
mov
leave
nop
jmp
movsl
add
add
repnz
nop
cld
jae
add
add
or
clc
repnz
nop
cld
jae
jp
add
dec
test
repnz
nop
cld
jae
mov
sub
movzwl
nop
push
mov
leave
nop
jmp
adc
push
add
je
clc
repnz
nop
cld
jae
inc
xor
mov
clc
repnz
nop
cld
jae
add
add
repnz
nop
cld
jae
add
inc
add
add
add
nop
nop
cld
jae
jbe
push
sbb
adc
repnz
nop
cld
jae
roll
inc
in
loope
rep
nop
push
mov
leave
nop
jmp
add
add
lret
inc
mov
xlat
mov
push
mov
xchg
ret
add
add
fists
repnz
nop
cld
jae
add
jp
add
mov
xor
clc
repnz
nop
cld
jae
add
mov
nop
push
mov
leave
nop
jmp
push
out
add
jbe
pop
rdpmc
sar
nop
nop
cld
jae
arpl
loope
push
clc
repnz
nop
cld
jae
out
lret
sbb
popa
mov
clc
repnz
nop
cld
jae
add
add
rcll
nop
nop
cld
jae
add
in
fiadds
add
pop
je
clc
repnz
nop
cld
jae
add
jnp
dec
and
clc
repnz
nop
cld
jae
inc
push
rolb
adc
pop
fistpl
push
mov
xchg
ret
jnp
jp
mov
add
lahf
fs
add
and
add
jg
dec
push
xchg
ret
push
mov
xchg
ret
daa
push
fmulp
mov
jge
call
cld
jae
arpl
add
add
push
add
clc
repnz
nop
cld
jae
jp
add
add
mov
rorb
pusha
or
sbb
add
daa
adc
mov
jp
inc
loopne
jnp
outsb
and
repnz
nop
cld
jae
push
roll
ret
nop
push
mov
leave
nop
jmp
push
in
add
rep
clc
repnz
nop
cld
jae
jbe
mov
in
xor
repz
clc
repnz
nop
cld
jae
add
jge
or
pop
call
nop
jmp
xorl
bound
cmpl
nop
push
mov
leave
nop
jmp
add
inc
addb
pusha
addb
repnz
nop
cld
jae
mov
shr
jecxz
clc
repnz
nop
cld
jae
aaa
add
fisubs
pusha
mov
rorl
repnz
nop
cld
jae
add
cmpsl
add
repnz
nop
cld
jae
pusha
daa
add
jp
add
inc
mov
push
mov
leave
nop
jmp
mov
add
mov
clc
repnz
nop
cld
jae
push
add
call
clc
repnz
nop
cld
jae
add
add
inc
pop
mov
clc
repnz
nop
cld
jae
add
and
add
shlb
mov
leave
nop
jmp
add
aaa
add
inc
jl
add
clc
repnz
nop
cld
jae
add
add
clc
repnz
nop
cld
jae
mov
pop
sar
add
test
ljmp
cld
jae
add
pop
mov
clc
repnz
nop
cld
jae
mov
add
add
adc
outsl
pop
clc
repnz
nop
cld
jae
add
inc
sub
add
pop
mov
clc
repnz
nop
cld
jae
rolb
dec
in
cmp
idivb
xchg
ret
inc
aaa
add
inc
inc
add
mov
clc
repnz
nop
cld
jae
mov
push
jbe
mov
out
sbb
cld
jae
lret
jno
mov
mov
nop
nop
cld
jae
dec
add
push
clc
repnz
nop
cld
jae
inc
roll
jno
mov
inc
push
and
dec
add
mov
xchg
ret
movsl
add
add
cmpsl
into
in
call
clc
repnz
nop
cld
jae
loope
aaa
add
add
clc
repnz
nop
cld
jae
adc
push
ret
cld
push
mov
xchg
ret
jb
inc
add
rolb
add
push
adc
sbb
ret
shlb
jno
repnz
mov
clc
repnz
nop
cld
jae
jp
add
not
push
mov
xchg
ret
or
or
jp
add
mov
clc
repnz
nop
cld
jae
movsl
pop
add
sbb
push
mov
xchg
ret
add
decb
add
clc
repnz
nop
cld
jae
in
add
add
cmpsb
and
orl
nop
cld
jae
add
roll
add
push
ret
xorb
dec
loope
clc
repnz
nop
cld
jae
add
les
repnz
nop
cld
jae
jp
adc
add
push
inc
and
pushl
push
mov
xchg
ret
adc
add
mov
in
pop
clc
repnz
nop
cld
jae
and
aaa
add
push
add
dec
mov
clc
repnz
nop
cld
jae
incb
scas
inc
rcrb
nop
push
mov
leave
nop
jmp
jge
loope
add
mov
mov
clc
repnz
nop
cld
jae
pusha
dec
add
push
mov
xchg
ret
push
add
sub
scas
push
clc
repnz
nop
cld
jae
pusha
jno
add
repnz
nop
cld
jae
in
jnp
add
cmpsl
add
push
mov
xchg
ret
add
push
out
add
cmp
cld
jae
jp
add
out
add
jnp
cmp
es
add
jb
sbb
mov
push
ja
clc
repnz
nop
cld
jae
addb
loopne
test
in
leave
nop
jmp
add
in
add
sub
repnz
nop
cld
jae
add
adc
pop
cmc
fwait
clc
repnz
nop
cld
jae
and
add
pop
add
pop
add
push
mov
xchg
ret
out
add
add
mov
rol
clc
repnz
nop
cld
jae
add
inc
add
and
clc
repnz
nop
cld
jae
add
out
test
nop
push
mov
leave
nop
jmp
js
add
js
jbe
add
push
mov
xchg
ret
in
mov
aas
movzwl
clc
repnz
nop
cld
jae
add
add
cmpsl
xor
mov
jne
clc
repnz
nop
cld
jae
into
add
fidivs
mov
clc
repnz
nop
cld
jae
add
loope
out
push
push
mov
xchg
ret
mov
add
xor
je
add
repnz
nop
cld
jae
addl
add
gs
clc
repnz
nop
cld
jae
add
jnp
xor
pop
mov
sbb
mov
mov
xchg
ret
add
add
pop
inc
aaa
push
insb
pusha
enter
and
repnz
nop
cld
jae
mov
add
mov
clc
repnz
nop
cld
jae
add
add
add
aaa
sbb
repnz
nop
cld
jae
add
add
add
and
push
sub
clc
repnz
nop
cld
jae
add
add
repnz
nop
cld
jae
loope
cmpl
cmpb
rorl
mov
xchg
ret
add
inc
inc
mov
clc
repnz
nop
cld
jae
add
add
pusha
inc
xchg
inc
push
mov
xchg
ret
add
add
add
mov
and
inc
enter
add
cmp
nop
nop
cld
jae
add
clc
repnz
nop
cld
jae
jge
inc
add
push
mov
add
repnz
nop
cld
jae
add
add
mov
clc
repnz
nop
cld
jae
mov
arpl
jl
clc
repnz
nop
cld
jae
inc
out
add
mov
clc
repnz
nop
cld
jae
add
inc
adc
repz
repnz
nop
cld
jae
ficoms
incb
add
add
repnz
nop
cld
jae
adc
add
mov
test
nop
cld
jae
loope
jg
add
in
cli
add
sub
add
add
test
add
aas
sahf
pop
mov
nop
nop
cld
jae
mov
add
add
add
mov
clc
repnz
nop
cld
jae
add
add
add
push
push
mov
xchg
ret
mov
mov
add
lahf
push
push
mov
xchg
ret
add
addl
add
push
repz
clc
repnz
nop
cld
jae
add
and
loope
add
add
and
push
mov
leave
nop
jmp
add
inc
jge
jge
clc
xrelease
clc
repnz
nop
cld
jae
add
mov
add
clc
repnz
nop
cld
jae
push
add
call
clc
repnz
nop
cld
jae
add
imul
clc
repnz
nop
cld
jae
dec
into
fiadds
add
mov
clc
repnz
nop
cld
jae
jp
mov
sub
loopne
ret
inc
sbb
sbb
add
add
int
clc
repnz
nop
cld
jae
add
add
inc
add
movsl
or
repnz
nop
cld
jae
jg
loope
in
mov
push
clc
repnz
nop
cld
jae
add
add
clc
repnz
nop
cld
jae
incb
add
sub
add
push
mov
xchg
ret
add
push
in
mov
rolb
mov
xchg
ret
inc
add
add
inc
pop
pop
push
mov
xchg
ret
xor
add
add
cmp
nop
nop
cld
jae
mov
add
xor
jg
lcall
mov
xchg
ret
in
add
add
adc
stc
div
clc
repnz
nop
cld
jae
add
adc
add
add
mov
clc
repnz
nop
cld
jae
add
js
jno
push
clc
repnz
nop
cld
jae
rolb
add
add
cmp
clc
push
mov
xchg
ret
cmpsl
add
add
cmpsl
rep
push
mov
xchg
ret
jg
add
cmpsl
add
add
clc
repnz
nop
cld
jae
add
inc
push
inc
lret
mov
repnz
nop
cld
jae
add
add
in
cld
push
call
nop
push
mov
leave
nop
jmp
push
and
jmp
incl
add
add
js
sub
push
jecxz
clc
repnz
nop
cld
jae
dec
adc
mov
test
cld
jae
add
movsl
inc
add
add
in
pop
push
mov
xchg
ret
mov
adc
aaa
add
jp
pop
mov
clc
repnz
nop
cld
jae
cmpsl
add
in
jg
mov
clc
repnz
nop
cld
jae
add
add
add
xor
xchg
clc
repnz
nop
cld
jae
loope
jge
add
add
bound
dec
push
mov
xchg
ret
add
add
loope
jg
jge
inc
and
nop
push
mov
leave
nop
jmp
jno
push
subl
and
repnz
nop
cld
jae
mov
aaa
icebp
movzwl
nop
push
mov
leave
nop
jmp
push
pop
lea
clc
repnz
nop
cld
jae
mov
or
jne
nop
push
mov
leave
nop
jmp
add
addl
mov
sub
cmc
incl
add
jnp
add
or
rolb
call
clc
repnz
nop
cld
jae
addb
cmpsl
inc
out
mov
add
clc
repnz
nop
cld
jae
add
daa
orl
push
clc
repnz
nop
cld
jae
add
inc
jge
push
daa
add
lea
push
mov
xchg
ret
and
add
add
sbb
clc
repnz
nop
cld
jae
add
add
fdivr
push
clc
repnz
nop
cld
jae
add
add
shl
clc
repnz
nop
cld
jae
cmpsl
add
mov
push
clc
repnz
nop
cld
jae
mov
add
add
inc
push
shl
nop
push
mov
leave
nop
jmp
out
add
addl
jp
pop
aas
mov
nop
push
mov
leave
nop
jmp
jg
add
jnp
add
subl
jae
shll
add
loopne
pop
add
push
mov
xchg
ret
jp
add
push
mov
clc
repnz
nop
cld
jae
jnp
mov
cmpsl
xor
push
mov
xchg
ret
inc
sarb
sbb
scas
outsl
inc
add
into
add
push
inc
movsl
subl
in
leave
nop
jmp
fiadds
add
add
add
jb
mov
clc
repnz
nop
cld
jae
addl
add
clc
repnz
nop
cld
jae
add
aaa
jge
add
out
enter
mov
nop
cld
jae
add
add
mov
pop
mov
nop
push
mov
leave
nop
jmp
add
jno
into
add
mov
clc
repnz
nop
cld
jae
into
daa
daa
push
addb
cltd
cmp
push
mov
xchg
ret
mov
lret
pop
push
mov
xchg
ret
mov
jb
pop
push
add
adc
nop
nop
cld
jae
out
inc
add
jg
cmp
pop
mov
push
mov
xchg
ret
in
add
jnp
sub
pop
clc
repnz
nop
cld
jae
mov
add
add
mov
push
mov
xchg
ret
add
add
add
mov
xchg
ret
in
aaa
add
loopne
lods
push
push
mov
xchg
ret
in
xor
add
add
jno
dec
imul
cld
jae
add
add
outsl
fwait
clc
repnz
nop
cld
jae
sbb
pop
add
pusha
andb
movsl
add
clc
repnz
nop
cld
jae
js
in
push
inc
jb
push
push
mov
xchg
ret
in
push
aaa
add
add
push
loopne
add
push
mov
xchg
ret
out
inc
add
jno
and
lea
nop
push
mov
leave
nop
jmp
shrb
add
pusha
aaa
add
clc
repnz
nop
cld
jae
add
pop
dec
clc
repnz
nop
cld
jae
add
jge
add
mov
nop
nop
cld
jae
in
add
and
shl
mov
clc
repnz
nop
cld
jae
mov
and
add
nop
push
mov
leave
nop
jmp
rcll
add
addl
push
clc
repnz
nop
cld
jae
add
add
aaa
add
xlat
cmp
nop
push
mov
leave
nop
jmp
add
fistpl
push
mov
xchg
ret
daa
sub
add
test
call
cld
jae
jbe
mov
outsb
addr16
clc
repnz
nop
cld
jae
jge
add
shlb
les
push
mov
xchg
ret
add
add
add
push
nop
push
mov
leave
nop
jmp
xor
addb
lds
nop
nop
cld
jae
js
andl
push
mov
leave
nop
jmp
jbe
add
add
add
scas
sub
clc
repnz
nop
cld
jae
add
aaa
mov
test
add
clc
repnz
nop
cld
jae
ror
add
mov
clc
repnz
nop
cld
jae
jbe
add
add
nop
mov
in
leave
nop
jmp
add
out
add
cmpsl
adc
fsubs
pop
rcll
mov
xchg
ret
add
out
add
mov
andb
dec
add
repnz
nop
cld
jae
cmpsl
out
sbb
push
push
mov
xchg
ret
add
mov
add
fiadds
and
mov
xchg
ret
add
incb
add
dec
aaa
decl
nop
cld
jae
mov
fidivrs
movsl
shlb
and
sti
add
push
mov
xchg
ret
into
xor
or
mov
repnz
nop
cld
jae
mov
addl
clc
imul
jmp
xor
add
shrb
or
repnz
nop
cld
jae
inc
add
fld1
clc
repnz
nop
cld
jae
add
add
repnz
nop
cld
jae
add
add
add
and
jmp
add
dec
jno
inc
add
add
inc
push
clc
repnz
nop
cld
jae
add
rolb
rorb
nop
push
mov
leave
nop
jmp
add
add
xchg
cmpl
nop
push
mov
leave
nop
jmp
jnp
out
jg
mov
sar
clc
repnz
nop
cld
jae
loope
mov
inc
push
aaa
jne
clc
repnz
nop
cld
jae
js
movsl
mov
nop
push
mov
leave
nop
jmp
inc
add
xor
clc
clc
repnz
nop
cld
jae
inc
loope
push
loope
mov
xor
mov
pop
loop
clc
repnz
nop
cld
jae
jno
jge
push
adc
push
clc
repnz
nop
cld
jae
add
add
mov
loopne
data16
sbb
clc
repnz
nop
cld
jae
add
mov
jg
nop
push
mov
leave
nop
jmp
add
add
or
int3
mov
add
mov
nop
push
mov
leave
nop
jmp
add
add
add
push
std
dec
nop
push
mov
leave
nop
jmp
add
inc
add
push
fninit
incl
push
roll
jg
dec
out
jb
add
add
mov
ret
clc
repnz
nop
cld
jae
add
js
add
shlb
and
nop
push
mov
leave
nop
jmp
jg
mov
add
mov
add
clc
repnz
nop
cld
jae
add
add
sahf
jge
mov
jecxz
lea
lock
add
ss
add
addr16
push
and
mov
andb
pop
jb
mov
aad
and
push
pusha
mov
jl
shlb
push
lods
mov
xchg
mov
and
cwtl
shll
aad
sub
inc
rcrb
repz
lock
sbb
out
cmpsl
call
popf
int
pop
scas
add
jae
shlb
and
inc
mov
jb
inc
aam
add
push
pop
enter
xor
and
adcb
andb
mov
shlb
loope
mov
int3
inc
push
stos
cltd
xchg
arpl
addb
and
xchg
iret
jns
push
mov
loopne
dec
push
lods
pusha
mov
loop
inc
and
jb
and
inc
xchg
test
out
fcmovnb
inc
mov
loopne
mov
dec
aaa
stc
andb
or
addb
repz
xor
loopne
mov
dec
andb
fldt
and
add
std
mov
push
sti
jno
call
push
push
or
add
mov
mov
pusha
shrl
xorb
xlat
outsl
mov
rolb
adc
mov
sbbl
inc
shrb
into
gs
scas
aas
fcmovbe
les
xchg
ss
adc
cmp
xor
into
push
inc
fstl
rorl
mov
pushf
test
sbb
dec
jmp
adc
xchg
outsl
push
mov
sub
stos
loopne
sbb
popf
fs
sub
sar
push
rolb
cmp
mov
pop
fucomip
add
loopne
sbb
lea
mov
add
or
push
lret
inc
pusha
bound
mov
shlb
cmp
aad
addb
mov
and
inc
bound
and
dec
mulb
outsb
into
cli
into
cmp
and
push
je
addb
rorb
andb
loopne
and
outsb
arpl
mov
cs
mov
pushf
and
jns
adc
push
and
mov
xchg
pusha
cwtl
iret
mov
xor
loopne
adc
loopne
fidivs
mov
les
lods
je
xchg
aaa
fidivrs
jo
or
addb
ficoms
andb
mov
mov
sar
out
inc
fbstp
dec
stc
leave
imul
lret
lods
int
shlb
rolb
enter
mov
jo
lds
cmp
fadd
jae
gs
and
mov
jns
push
test
lds
and
aad
and
push
sub
adc
scas
add
push
inc
mov
loopne
cmp
je
cmpsb
pusha
sarb
push
das
xchg
mov
inc
fwait
enter
decl
push
and
dec
out
sbb
mov
lods
jl
inc
add
mov
imul
arpl
insb
fisubs
test
in
data16
cmp
and
push
ds
inc
fs
sbb
jmp
mov
mov
arpl
mov
add
pop
aas
push
mov
mov
push
add
add
aam
xor
add
jb
cmpsl
mov
andb
jne
loop
push
insl
addr16
fsubs
pusha
and
push
dec
mov
loopne
push
xchg
jnp
enter
mov
in
dec
je
mov
mov
rol
hlt
std
scas
jb
lea
insb
push
inc
and
fbstp
and
insb
aaa
jl
mov
add
and
loopne
imul
fwait
and
insl
test
and
rclb
lds
sub
add
inc
mov
inc
sarb
ljmp
add
ficompl
enter
out
test
outsl
push
sbb
fs
inc
mov
and
pusha
inc
dec
sub
jo
shlb
inc
push
add
loope
add
imul
insb
xchg
insl
mov
notl
dec
fs
scas
add
or
adcl
inc
sub
jnp
jle
xchg
jp
push
dec
insl
outsb
jo
addr16
in
jmp
jno
fidivrl
sub
shl
mov
insl
cmc
je
add
shlb
add
mov
addb
aam
xor
push
lock
test
out
pop
les
mov
mov
lahf
mov
inc
mull
cli
mov
call
mov
in
cmpsb
inc
rorb
loopne
push
or
mov
and
cld
mov
inc
mov
test
fnstcw
xor
xchg
out
lea
fisubs
shl
gs
rolb
in
push
aam
add
and
popa
pop
and
mov
fldt
mov
push
andb
movsb
and
rol
imul
xor
addb
mov
sbbb
xchg
push
mov
lcall
ds
pop
cmp
ret
ror
insb
mov
loopne
stos
mov
pusha
rorb
mov
adc
mov
xchg
insl
push
int3
sub
test
shlb
add
dec
scas
sub
subb
imul
add
aad
add
lahf
subl
pusha
loopne
jno
insb
ret
andb
jg
xor
dec
insb
mov
add
inc
jmp
lahf
mov
inc
sbb
ret
divl
push
inc
repz
mov
or
add
imul
inc
fcmove
jecxz
inc
sub
sbb
loopne
bound
loopne
test
notb
add
xchg
xchg
popa
jecxz
cmp
mov
pop
adc
jg
adc
cmpsb
shlb
lods
add
nop
xor
ret
call
or
test
cli
aad
and
and
adc
mov
pop
mov
and
xchg
insb
int3
es
mov
sti
add
mov
out
or
out
ss
fs
in
dec
arpl
pop
stos
jbe
fwait
or
clc
test
rcrb
add
and
fcmovbe
mov
add
fidivl
add
mov
repz
jle
dec
push
mov
mov
push
mov
lahf
ljmp
mov
mov
or
imul
pop
fcoms
jo
jno
add
sbb
and
fisubrs
add
mov
movsb
add
or
loopne
repz
pop
or
and
call
into
pop
imul
pop
dec
mov
xchg
pushf
xchg
mov
and
or
jo
fistl
sbb
daa
sub
dec
jecxz
mov
mov
aam
pushf
insl
fists
shl
mov
shlb
push
adc
xlat
cmp
in
lods
push
adc
mov
leave
daa
ret
mov
aaa
mov
lahf
stos
cmpsb
shlb
mov
cwtl
sub
mov
icebp
or
pusha
xorl
imul
popf
test
mov
dec
adc
clc
mov
lcall
xchg
sbb
jbe
mov
mov
cmp
shlb
pusha
add
sbb
scas
rolb
inc
ror
in
insl
or
addb
movsl
rolb
pusha
dec
push
sbb
dec
push
mov
mov
sbb
xor
mov
add
imull
and
cmp
mov
loopne,pn
nop
mov
and
lret
lret
out
pop
dec
test
rol
nop
jmp
fstl
out
xchg
shlb
pop
inc
movsb
add
add
jg
mov
call
fiadds
rcr
icebp
sub
orb
cmp
sbb
mov
inc
rolb
sahf
jb
inc
pusha
sbb
inc
mov
inc
push
lcall
add
add
loopne
xchg
cmpsl
mov
add
add
sub
sahf
dec
addr16
imul
pushf
test
loopne
out
mov
repz
inc
loopne
xchg
imul
andb
add
mov
fbld
and
xor
imul
inc
and
rolb
je
addr16
sbb
sbb
incl
inc
mov
sbb
cmp
pop
jp
addb
rcrb
enter
dec
mov
and
dec
xchg
cmpsb
add
cltd
mov
push
movsb
pusha
add
rorl
cltd
mov
sbbl
andb
outsb
mov
mov
mov
inc
fiadds
orl
add
mov
sub
xchg
jge
lret
ljmp
and
sbb
pop
andb
jmp
andb
inc
daa
fadds
jmp
fnstenv
jnp
ficomps
rcrb
mov
lret
lcall
clc
and
and
dec
push
bound
outsl
mov
mov
mov
loopne
sbb
rolb
add
add
xlat
fdivr
or
and
mov
andb
jno
inc
add
inc
enter
fmulp
sub
and
testl
pusha
loopne
xchg
in
xor
popl
loopne
lods
pusha
shrb
pop
inc
pop
frstor
inc
inc
add
inc
in
sbb
stc
push
shlb
sub
push
mov
and
jecxz
lods
shlb
xchg
popa
pushf
js
addr16
jne
add
ljmp
sub
lahf
xchg
push
jns
aaa
adc
aaa
dec
lods
inc
inc
out
test
add
cmp
daa
adc
leave
push
das
ds
cmpsb
add
pushf
fdivl
movsl
add
inc
push
dec
add
pusha
loopne
mov
push
faddl
shlb
aaa
jno
inc
bnd
gs
loopne
mov
mov
pop
mov
lods
inc
inc
daa
jns
shrb
xor
xor
repnz
loope
test
pusha
cmp
add
inc
mov
sbb
xchg
push
add
and
lahf
pop
mov
lcall
and
clc
fisubl
mov
add
lahf
loope
addb
insl
movl
in
cld
mov
rcrb
and
push
ret
repz
cmpsl
pop
popf
addb
mov
addb
cld
loop
adc
sub
into
dec
ret
movsl
sbb
sub
pusha
incl
or
mov
adc
dec
outsl
scas
add
shrb
jecxz
and
loopne
push
inc
xchg
cltd
pop
pop
mov
scas
mov
inc
push
pop
idivb
mov
mov
ljmp
scas
test
mov
push
lret
add
scas
shl
in
clc
sbb
add
pusha
loopne
xchg
jnp
sub
loopne
inc
xchg
mov
lahf
and
add
insb
rcl
fs
mov
loopne
push
lahf
xchg
cmpb
push
mov
jecxz
inc
jle
or
fcompl
dec
pop
and
pusha
jae
gs
sbb
int3
cmpsl
pop
jns
bound
add
scas
and
inc
daa
xchg
loopne
ffreep
insb
pop
dec
jecxz
and
push
int3
cwtl
ljmp
add
shlb
mov
repnz
cmp
rcrb
mov
pop
mov
mov
repz
mov
xchg
rorb
stos
jne
loop
push
das
mov
cvtps2pd
sbb
out
mov
dec
cmc
add
xor
js
andb
fnstenv
scas
and
stc
jnp
sub
and
inc
shlb
loopne
add
shl
xor
test
inc
xlat
cli
lahf
mov
add
and
imul
std
adc
lods
jbe
xchg
aas
in
mov
inc
cld
mov
inc
add
push
add
inc
xor
push
aad
pusha
or
adc
mov
mov
addb
or
test
and
inc
xchg
fsubrs
addb
and
xchg
fadds
jbe
sub
daa
lret
mov
dec
ds
xor
and
cmp
mov
push
mov
pushf
add
mov
pusha
xorb
out
sub
mov
cmpsl
pop
mov
daa
xchg
xor
adc
std
add
in
shl
aaa
push
shlb
pusha
jmp
mov
mov
loopne
iret
imul
lahf
or
sbbb
jecxz
or
and
add
iret
cmp
dec
cmpsb
addb
int
test
ss
ja
mov
cmp
and
dec
cli
and
les
arpl
arpl
or
sbb
pop
jne
fsts
pop
pop
out
pusha
add
xorb
int
sbb
repz
and
and
ficoml
rcrb
push
jb
pusha
and
push
leave
insl
add
imul
sub
loopne
andb
sub
orb
add
add
sub
jp
mov
dec
mov
inc
gs
push
gs
pusha
divl
jl
mov
int3
push
add
rcrb
into
adc
lret
dec
ret
push
xchg
in
ficomps
dec
cmp
mov
loopne
repz
std
pop
lods
rolb
in
add
sbb
ficomps
dec
jle
xchg
lea
sub
mov
je
ret
cwtl
roll
notl
fldt
and
aaa
incb
ficoml
lret
fwait
push
xchg
pop
aas
pop
pop
sub
add
mov
pop
dec
stc
cwtl
xchg
adc
fs
les
divl
std
xchg
lcall
xlat
xchg
lds
loopne
xchg
cmp
pop
pop
ljmp
pop
outsl
push
jo
push
js
shlb
mov
sbb
mov
imul
jmp
mov
in
sahf
jne
xchg
cmp
xlat
fcoms
jg
inc
popa
cmp
in
mov
pusha
inc
lock
cmp
jb
addb
lock
add
icebp
push
push
jg
rol
mov
enter
mov
popf
ret
dec
rorl
lods
shlb
in
js
sub
and
rcr
loop
pushf
rorb
in
sbb
ret
add
popf
ss
jle
sub
inc
shlb
pusha
or
inc
push
add
xchg
aam
out
sahf
aam
or
mov
sub
cmp
inc
leave
sahf
setnp
rolb
inc
fs
and
xorb
and
mov
sti
outsl
xchg
negl
or
inc
xchg
sub
mov
inc
loopne
xchg
or
jno
cld
lods
inc
popa
ret
add
rol
aas
ja
and
scas
std
aam
es
and
push
pusha
lods
andb
pusha
mov
cmpl
aas
inc
ja
xor
push
xlat
xchg
mov
inc
cld
int
negb
js
addb
adcl
cmp
and
rolb
and
mov
aam
ret
out
movsl
sbb
jg
out
pusha
pusha
sti
sbb
stos
loopne
in
and
dec
jbe
push
and
pop
jl
dec
mov
inc
xor
fsubl
jle
pusha
loopne
push
sub
loopne
mov
mov
dec
testl
xlat
mov
icebp
in
inc
aad
popa
adc
fcmovnb
pop
pop
mov
lods
addb
push
bound
jae
outsb
sbb
das
xlat
xorl
cmp
shrb
jo
mov
pusha
sub
add
andb
popf
pop
dec
mov
andb
in
pop
es
rcrb
and
sti
call
in
dec
push
mov
mov
dec
in
std
inc
daa
jbe
movsl
cmpsb
rolb
mov
cmp
jge
push
inc
loopne
inc
add
mov
daa
adc
inc
mov
dec
mov
mov
negb
sub
mov
shlb
pusha
fdivrp
outsl
mov
add
mov
ljmp
inc
pusha
xchg
aas
dec
mov
inc
inc
popf
mov
fisubs
movsb
pusha
add
nop
pop
ss
pop
add
lock
popa
and
pop
xor
pusha
dec
fcmove
jg
and
daa
dec
sahf
mov
fimull
push
pusha
pop
cmc
inc
mov
mov
cmp
icebp
add
inc
std
dec
aad
popf
notl
gs
cli
repnz
add
xcrypt-cfb
cmpsl
es
arpl
cltd
jb
fwait
outsb
cmp
clc
es
dec
dec
cmp
shrl
enter
xchg
mov
ss
pop
jmp
test
std
pop
inc
jno
or
mov
pusha
add
pusha
xlat
push
add
test
mov
sbb
jmp
mov
outsl
jle
addb
push
lods
mov
push
bound
loopne
je
push
lahf
xlat
mov
and
and
mov
xor
pop
jbe
jmp
lret
xchg
xchg
adcl
and
xchg
fmull
loop
movl
xchg
pusha
mov
aam
jno
dec
fsubl
fwait
jb
pop
pop
pop
insb
faddl
and
push
outsb
push
mov
mov
loop
mov
mov
fcmovnb
dec
mov
pop
or
adc
insl
xchg
mov
out
in
xchg
add
je
test
mov
lret
and
mov
mov
loopne
push
imul
dec
ljmp
scas
and
aas
jne
sbb
movsb
and
push
push
xor
notb
cmp
and
pusha
and
jns
movsb
rolb
cmc
jl
movb
mov
andb
jae
push
aad
xor
push
imul
pusha
je
movsb
andb
dec
mov
iret
jae
ja
bound
add
mov
push
jle
mov
mov
repnz
mov
fucomi
ror
fmul
dec
xchg
push
xchg
call
and
jecxz
push
rolb
in
fucomi
sbb
and
add
addb
add
and
add
and
sarb
pop
mov
cmp
pusha
push
shll
sbb
pop
clc
sbb
ficompl
cmp
mov
push
add
loopne
int
mov
add
or
push
push
xor
cmpsb
add
insl
in
mov
add
loopne
orl
loopne
adc
fmull
cld
ds
out
call
cwtl
xor
inc
fisubrs
lods
push
inc
sbb
rolb
add
adc
repnz
andb
push
mov
xchg
movsl
xchg
sarb
adc
mov
or
dec
jno
sbb
pusha
pusha
push
je
mov
xchg
popa
outsl
fwait
push
push
push
or
sbb
loopne
sub
hlt
pop
daa
bound
lods
rcl
cs
and
mov
adc
cld
or
sbb
ja
sub
loopne
in
or
inc
insl
xor
jge
sbbl
dec
sbb
cmp
push
test
and
les
loopne
gs
popf
sbb
add
dec
in
pop
sbb
jne
jnp
dec
mov
stc
push
push
add
and
loopne
lcall
test
and
packuswb
iret
push
pusha
rclb
inc
push
add
sarb
addb
hlt
cmpsb
inc
add
inc
test
inc
pusha
mov
xor
add
mov
and
jne
mov
and
loopne
mov
loopne
out
aas
hlt
rcll
push
lahf
fcmovu
adc
insl
xor
inc
imul
fdivp
cmpsb
pusha
pusha
testb
mov
mov
or
in
das
pop
loopne,pn
in
std
movsl
pop
add
out
xchg
mov
test
ret
loope
imul
mov
and
pop
mov
adc
fidivs
andb
inc
pusha
dec
rclb
fildll
adc
inc
mov
sbb
fisttps
push
aad
mov
pop
or
arpl
adc
inc
and
inc
add
add
leave
pusha
adc
rclb
and
sarb
ljmp
mov
push
pop
call
scas
in
mov
fs
out
adc
and
test
pop
getsec
push
or
loopne
xor
mov
and
movsb
loopne
push
xchg
inc
out
and
js
jecxz
fstps
in
add
jno
fs
ds
sub
mov
and
pop
push
aad
popa
addb
xchg
push
cmp
imul
shlb
xchg
int3
mov
fsubs
popf
stos
rolb
mov
xchg
je
inc
inc
inc
jp
divl
rcr
and
inc
inc
repz
xchg
mov
adc
dec
mov
sub
subb
loope
dec
ret
xchg
shlb
sub
enter
cmpsb
rolb
stos
pusha
mov
insl
popf
mov
xchg
aam
insl
leave
in
insb
inc
loopne
dec
xor
addr16
aam
mov
mov
and
mov
or
sti
wbinvd
je
xchg
add
rol
ficoms
mov
loopne
mov
xchg
cmp
ja
addb
pop
adcl
std
gs
das
push
and
pusha
xchg
pusha
or
fidivs
pop
sub
mov
ss
dec
iret
enter
icebp
call
cwtl
xor
mov
and
std
xchg
inc
dec
pop
rolb
dec
mov
cwtl
add
lds
pop
arpl
cmc
mov
jns
ja
mov
out
pop
outsb
jns
inc
push
sarb
sub
xchg
fdivrp
lcall
inc
clc
and
and
cmp
add
daa
adc
cmp
lahf
jne
mov
ret
xchg
jecxz
loopne
push
push
adc
push
lret
dec
adc
and
lahf
out
jnp
add
lods
int
xchg
cltd
divb
mov
in
sub
pusha
inc
leave
out
pop
xchg
mov
aam
mov
dec
mov
negl
or
xchg
pop
rorl
sub
pop
divl
scas
mov
movsb
loopne
xchg
stos
loopne
sbb
dec
or
mov
addb
sub
sbb
sbb
add
arpl
loopne
hlt
xchg
shlb
orl
cmp
cmpsb
mov
jne
xlat
push
loope
add
mov
sbbb
push
ja
push
call
out
repnz
and
jl
fwait
enter
dec
cld
xor
loopne
xchg
jl
scas
pusha
and
sub
inc
aam
and
pop
xchg
pop
jl
push
mov
movsl
mov
fcompl
fcomp
pop
adc
push
and
rcrl
mov
and
ss
inc
movsb
pusha
pusha
cld
ljmp
movb
pushf
push
pusha
loopne
pop
dec
cld
sarb
in
add
cmpsl
mov
mov
mov
mov
pop
mov
cwtl
mov
or
sarb
jge
inc
add
xchg
rclb
dec
or
dec
mov
xor
pusha
push
xchg
out
out
push
inc
xchg
mov
xor
cwtl
cmp
jbe
xchg
cmp
adc
inc
xor
pusha
pusha
lods
shl
and
loopne
ss
and
js
sti
push
push
adc
inc
push
call
sbb
dec
lret
jnp
mov
out
push
lock
xchg
sub
cmp
imul
mov
sbb
pusha
inc
mov
cmc
pushf
insb
mov
ljmp
add
and
sbb
inc
xor
pop
xchg
push
jl
dec
jp
xchg
xchg
pusha
lods
shl
mov
scas
inc
add
iret
mov
pop
lcall
aam
sub
and
and
and
fs
mov
add
xchg
mov
jno
inc
xchg
in
enter
sbb
test
sbbb
cmc
xchg
insl
push
xor
or
rolb
shr
xor
test
je
imul
or
push
bound
adc
adcb
push
jnp
insl
andb
outsb
pop
je
ss
pusha
add
jbe
pusha
add
loopne
push
xchg
fldt
xor
mov
or
add
ror
dec
les
out
mov
rcr
loope
pusha
subb
adc
bound
mov
lea
push
cmp
sbb
sub
rcll
add
loope
scas
inc
mov
aaa
xlat
cmpsb
mov
shlb
adc
inc
lret
imul
movsb
mov
mov
ds
xchg
push
jo
int3
fdivrl
push
adc
inc
rorb
shr
andb
shlb
pop
and
loopne
fisubl
inc
out
sub
rorb
adc
jmp
fiaddl
jmp
andb
fs
inc
movsl
pop
jnp
inc
rol
or
fisubs
jge
idiv
sub
add
adc
pop
push
lret
or
jno
mov
xor
cmp
mov
adc
jmp
jo
adc
rcl
rcrl
movsl
sbb
jno
filds
push
clc
roll
rcrl
mov
rol
adc
fisubrl
gs
fsubrs
and
sub
mov
stc
rcll
pop
lods
cmp
cltd
cmc
bound
movsb
mov
loope
loope
xor
jne
pop
push
clc
insl
int3
inc
mov
gs
iret
mov
adc
test
mov
das
mov
in
addb
pushf
inc
cmp
lcall
popf
and
insb
fsts
mov
cmp
push
mov
test
and
dec
add
mov
add
pop
hlt
sbb
ljmp
nop
inc
nop
mov
sarb
jnp
inc
sub
ret
adc
pop
enter
inc
mov
loopne
icebp
ds
aad
int
mov
in
mov
loopne
insl
sarb
mov
mov
idivb
sbb
in
adc
mov
xchg
jp
mov
shrb
and
es
shlb
cmp
sbb
or
adcb
mov
in
les
lods
pusha
and
lock
mov
and
stos
adc
mov
push
sarl
push
mov
mov
out
add
fs
out
push
loopne
inc
call
das
mov
jae
xchg
pop
dec
dec
sub
ror
add
add
add
push
stos
loopne
xchg
and
andb
insb
daa
cli
lds
fistps
adc
sbb
add
rclb
mov
in
loopne
inc
dec
inc
int
add
mov
in
into
pop
in
xchg
add
and
loopne
fmuls
push
mov
mov
daa
je
jb
push
ret
or
bound
push
cmp
fistl
sahf
jge
fs
mov
xchg
push
mov
ljmp
popa
push
and
loopne
and
notl
add
out
aas
hlt
cmpl
dec
add
and
test
and
xlat
cmp
jne
rcll
add
mov
or
sbb
mov
in
loop
push
rolb
sub
or
aaa
in
lds
sub
inc
lods
add
xor
inc
pop
and
dec
sbb
sub
scas
add
pop
fidivs
dec
add
push
fisubl
adc
ds
int3
push
inc
int3
jbe
adc
jb
dec
dec
lahf
xor
or
xchg
nop
xlat
push
fmull
test
mov
in
lock
or
testb
loopne
push
shlb
shlb
adc
sbb
jmp
mov
dec
inc
pop
incl
sahf
jp
testb
or
jae
pop
scas
outsb
repz
jno
mov
push
pusha
push
leave
lods
pop
mov
repnz
add
out
jne
cmp
dec
xlat
scas
and
pusha
inc
jp
mov
loopne
out
lods
loopne
clc
sub
or
loopne
outsl
ret
fistl
out
pop
lods
and
mov
in
dec
xor
in
mov
in
int3
pop
lcallw
stos
rol
xchg
and
and
mov
xchg
add
and
xorb
loopne
mov
and
cmpsl
addr16
enter
pop
mov
cmp
mov
and
jg
adc
inc
mov
add
push
mov
stos
inc
inc
scas
pop
fdivs
repnz
mov
and
jmp
int
xchg
adc
inc
dec
loopne
cmp
ja
inc
inc
lock
scas
bnd
mov
jmp
add
adc
push
push
std
loop
iret
mov
pop
lret
or
inc
call
fmuls
mov
ss
sbb
std
iret
sbb
and
or
hlt
add
shll
outsl
xchg
mov
lock
inc
and
out
stos
sbb
loop
fcoms
pop
dec
enter
lret
and
mov
xchg
add
xor
and
fwait
mov
and
inc
ret
xchg
aaa
sbb
push
mov
sub
loopne
push
push
sbb
repnz
shlb
and
std
and
and
jecxz
fimuls
loopne
jno
sbb
mov
loopne
loopne
mov
pusha
loopne
jno
adc
imul
ja
daa
dec
or
and
pop
jns
push
mov
lret
sub
pop
mov
mov
push
xor
pop
addl
pusha
andb
cmp
mov
push
push
fistpl
and
cmp
divl
enter
jp
daa
insl
repz
add
add
xlat
jge
push
push
filds
sbb
mov
sbb
or
loopne
cmpsl
push
daa
or
loopne
push
aad
adc
jmp
addl
pusha
add
adc
iret
iret
mov
xor
mov
rcrb
cmp
xchg
inc
inc
jb
jge
sub
and
dec
shlb
call
stc
outsb
addb
dec
mov
mov
sub
adc
jbe
dec
sub
and
add
repz
mov
loopne
outsl
popl
and
dec
sub
rolb
push
inc
loopne
negb
fsubl
pop
cmp
xor
lret
pop
and
inc
push
arpl
add
cli
stos
mov
sub
icebp
xor
lahf
int3
pop
pop
std
incb
mov
shlb
xchg
ljmp
fs
and
daa
or
cmp
add
cmp
test
xchg
shrl
out
test
push
and
test
xchg
ret
inc
pop
sar
inc
ljmp
andb
pop
daa
lods
and
rcl
movsl
leave
xlat
jle
mov
andb
cmp
rolb
xor
and
loopne
addb
mov
jo
loop
mov
xchg
xchg
enter
aas
add
lock
mov
inc
add
pusha
sbbb
pusha
mov
shlb
pop
jl
and
and
inc
mov
jmp
sbb
ja
xor
loope
inc
incb
push
cmp
xchg
ficomps
shlb
and
loopne
lcall
rolb
imul
adc
and
pop
dec
fsts
mov
stc
and
push
push
jne
pop
pop
sbb
orb
icebp
cli
inc
add
mov
loopne
cltd
or
xorb
pop
add
mov
push
jle
add
pusha
jns
inc
sbbb
and
ficoms
cmp
adc
pop
in
mov
sbb
mov
inc
mov
addb
or
rorb
out
in
cmpsl
fstl
rolb
mov
lret
sub
add
cmp
mov
dec
add
and
enter
push
andl
xchg
jnp
mov
scas
rolb
jp
repnz
loop
pop
cwtl
push
andb
mov
fsts
outsl
sahf
sbb
loope
insl
xlat
dec
cmpsb
loopne
mov
subb
test
loopne
mov
loopne
sub
add
fistl
dec
push
stos
pusha
mov
arpl
add
mov
sub
sbbb
popa
andb
sbb
loopne
mov
mov
andb
test
xor
rorl
add
popa
and
mov
pop
xchg
cmp
inc
adc
sbb
shll
inc
sbbb
in
xchg
pop
push
add
mov
mov
sub
and
inc
shl
or
xchg
mov
add
mov
cld
mov
loopne
fists
jo
adc
and
aaa
divl
ljmp
xchg
movsb
andb
mov
dec
and
sti
xchg
add
stos
and
xchg
mov
xchg
in
pop
clc
bound
addb
scas
inc
shlb
add
and
popa
iret
jmp
shrl
aaa
pop
xchg
arpl
stos
inc
push
push
inc
fadd
int
inc
inc
int3
mov
pushf
out
test
mov
adc
jns
aaa
inc
pop
jnp
add
xor
addb
lret
mov
lods
and
ss
inc
mov
repnz
add
out
rcl
jg
cmpsl
or
inc
mov
xchg
pop
aas
fnsetpm(287
call
cld
ds
fdivrs
inc
loop
adc
cli
xchg
push
cwtl
imul
push
pop
mov
jecxz
int
push
mov
pusha
call
xor
sbb
mov
xorb
mov
and
pushw
inc
loopne
sbb
popf
pop
imul
ret
add
add
mov
jg
cmp
das
inc
enter
out
mov
sbb
inc
cmc
ja
lret
fstps
inc
cmp
push
xlat
lcall
mov
mov
jnp
rol
cwtl
inc
cli
add
andb
sub
mov
mov
mov
add
and
adc
dec
and
mov
loopne
mov
loope
lret
xor
xchg
sub
fnstcw
xor
mov
pusha
sub
push
sub
push
and
es
das
jle
cmpsl
dec
add
out
mov
xor
mov
stos
pusha
sbbb
mov
mov
inc
inc
lods
loopne
lcall
cmp
in
sub
add
push
loopne
and
pop
xor
fimull
pusha
fbstp
ja
push
inc
mov
ljmp
sbb
inc
and
jns
cltd
cmp
std
iret
pop
mov
fildl
add
sub
cli
jae
out
xchg
pop
lds
outsl
stos
insb
js
and
jle
mov
and
bound
addr16
mov
pop
mov
sbb
pusha
addb
cmp
clc
pop
dec
push
and
shlb
push
inc
push
lret
push
xor
or
loopne
sub
add
lods
mov
imul
or
mov
ds
push
fwait
mov
loopne
popf
imul
das
faddp
push
loopne
xchg
addr16
mov
pusha
mov
shll
xchg
inc
pop
loop
pushf
xor
dec
jb
jmp
dec
call
add
pusha
subb
push
sub
and
loopne
sbb
cmp
das
push
inc
andb
adc
sar
sub
sub
fldlg2
mov
fisubrl
inc
loopne
cmpsl
or
loopne
or
mov
pop
test
push
add
xor
loopne
push
or
stc
mov
fmuls
mov
and
loopne
shlb
shr
pop
out
adcl
or
cwtl
push
and
shlb
mov
mov
mov
push
fdivs
lods
stc
mov
pushf
test
lods
loopne
inc
outsb
imul
shrb
sahf
xchg
cmp
ret
popa
pop
call
jg
sbb
hlt
push
out
aam
loopne
fbld
pusha
and
jge
fcoms
add
out
xchg
pop
dec
iret
sub
or
add
inc
mov
xor
out
loopne
mov
loopne
sbb
ret
cmp
add
jge
xor
and
stos
add
jns
inc
cwtl
pop
lcall
add
rol
stos
andb
into
in
addr16
and
cmp
mov
sbb
add
cmove
pusha
add
pusha
insb
jne
dec
pop
sbb
leave
hlt
sub
daa
les
inc
dec
mov
and
std
cmp
mov
lds
andb
enter
mov
iret
jno
loopne
xor
lods
xor
rolb
push
xchg
xchg
mov
and
sub
add
je
shlb
sahf
or
pmaxsw
shrl
inc
mov
pusha
subb
fmul
xchg
test
shlb
lds
in
out
call
lods
and
jecxz
pushf
mov
inc
nop
or
and
lret
sub
loopne
sub
aam
lds
iret
cmp
leave
gs
dec
push
shll
xchg
movsb
loopne
and
cmp
stc
push
jbe
stos
and
andb
fstpl
out
mov
pop
dec
inc
pop
aaa
ret
loopne
pop
daa
jl
mov
push
xor
mov
mov
mov
jae
pop
jmp
jns
lea
shlb
sub
and
pop
inc
fcompl
push
call
rorb
pop
mov
and
arpl
push
xchg
dec
or
ror
adc
mov
clc
aas
rcrl
out
in
in
dec
add
loopne
add
leave
sahf
push
das
movsl
or
loopne
insb
sbb
fcmovu
jl
loope
addb
and
add
daa
push
push
jo
out
sahf
pop
add
jno
mov
xchg
aaa
and
rolb
scas
mov
add
loop
push
loopne
and
sub
xor
dec
sub
xchg
loop
inc
pop
push
mov
sub
inc
loope
dec
inc
mov
jmp
ret
cli
or
xchg
xor
shlb
mov
aad
pop
jge
gs
pop
add
xor
lock
in
or
loopne
dec
xchg
mov
jecxz
mov
adc
add
aam
cmp
jne
add
pop
shl
sub
inc
repnz
popf
cmpsl
jb
clc
pop
sti
push
jo
mov
and
mov
repnz
ja
mov
inc
mov
inc
jb
test
push
jl
add
pusha
lds
dec
cmpsb
add
mov
arpl
adc
nop
pop
in
add
mov
cld
rol
xor
inc
xchg
inc
aaa
addb
sbb
mov
push
bound
testb
add
cld
addr16
imul
push
jge
ljmp
jae
and
rol
push
in
add
loopne
sub
fsubrl
shlb
mov
sbb
popa
je
fcmovnb
pop
aad
pop
sti
lret
sbb
cmp
xchg
mov
add
jecxz
stos
aas
pop
pusha
adc
bnd
in
push
jle
xor
inc
insl
sbb
jp
loopne
or
outsb
dec
std
data16
rclb
fsub
mov
dec
xor
xchg
nop
pop
pop
dec
lcall
mov
push
and
adc
in
repz
or
jecxz
adc
sub
jne
push
ja
push
andb
test
cmpsl
ficomps
dec
push
cmp
jae
test
shlb
loopne
mov
xlat
push
int3
cli
aam
and
in
lcall
in
add
xchg
lahf
jg
push
aam
aad
addb
lret
push
mov
dec
lock
sbb
hlt
int
push
push
addb
adc
lods
and
roll
adc
and
fisttpl
push
mov
mov
mov
pop
mov
mov
adcb
jno
mov
in
mov
pop
inc
xchg
mov
std
xchg
and
stc
adc
movl
cmc
xor
dec
xchg
mov
xchg
jge
jecxz
mov
out
in
fadds
push
and
mov
inc
xchg
inc
cmp
push
pusha
pusha
lahf
push
repnz
gs
lods
shlb
mov
mov
ret
and
js
pop
in
xchg
loopne
loope
cmp
arpl
and
cwtl
jecxz
xor
pop
scas
ja
and
add
add
xchg
jg
lcall
fdivl
enter
inc
pop
sub
and
xchg
pushf
jbe
xorl
jp
xchg
imul
push
data16
mov
movups
pusha
cmp
xlat
mov
jg
orl
xchg
push
mov
pusha
mov
inc
pusha
into
mov
pop
test
int3
imul
into
jp
adc
xor
xchg
test
subb
loop
inc
outsl
add
mov
mov
mov
js
mov
add
loopne
push
mov
adc
lds
and
cmc
lock
jo
push
sub
mov
aas
cbtw
sti
scas
pusha
inc
push
dec
clc
xor
sti
xchg
ljmp
xor
sahf
xor
add
cmpb
daa
pop
adc
dec
add
scas
icebp
loopne
stc
add
add
mov
lea
jns
adc
mov
push
addb
inc
dec
movsl
insb
mul
mov
mov
ds
dec
shr
sub
movsb
add
scas
loopne
mov
addb
rclb
or
ret
jns
andb
je
inc
mov
loope
or
add
xchg
add
movsl
lods
loopne
cmc
push
in
mov
incb
or
and
rclb
jmp
mov
jns
stos
loopne
push
sti
ja
arpl
jg
cld
fs
xor
hlt
cmp
add
and
cmpsl
jno
pop
loopne
in
outsb
out
or
pop
add
jg
loopne
js
mov
and
and
roll
shlb
push
imul
inc
adc
cmp
inc
mov
loopne
mov
loopne
mov
mov
add
into
sbb
addb
outsb
mov
pop
repz
add
pop
lea
jb
dec
outsl
and
add
ja
pop
test
mov
xchg
aad
aam
push
and
pop
loope
sahf
lock
add
xor
into
add
xchg
lret
andb
and
cmp
mov
and
push
dec
xchg
inc
idivb
inc
clc
stos
xor
cld
lea
mov
notl
mov
add
push
shlb
andb
inc
lea
or
inc
lahf
out
fcoms
andb
outsb
xor
sahf
cld
xchg
sbb
cmp
xor
out
into
fisubrs
and
pusha
mov
je
mov
mov
outsl
hlt
cltd
xor
mov
out
data16
or
loopne
push
loopne
mov
out
repz
mov
insl
repnz
mov
push
dec
sub
adcb
jg
mov
rolb
pusha
out
fwait
dec
push
or
add
lret
ret
pusha
mov
sbb
add
addb
mov
pop
mov
mov
loopne
xor
rcr
je
jb
out
scas
loopne
popf
inc
test
inc
lods
lret
inc
mov
cmp
push
xchg
mov
sarl
jl
sub
loopne
movsb
and
dec
mov
pushf
adc
notb
repnz
push
adc
nop
scas
loopne
xor
loop
add
loopne
mov
loopne
test
add
push
inc
je
inc
subb
popl
xor
shlb
ret
loope
sti
insl
lds
dec
loop
xchg
loope
sub
pop
add
xchg
jo
mov
sahf
mov
inc
xor
xor
loopne
push
cmp
xchg
repnz
mov
out
fs
mov
xor
pop
popa
pop
cmp
mov
adc
insb
push
cmpsb
inc
mov
iret
out
or
pusha
and
adc
call
out
pop
addb
add
and
shlb
clc
rorb
and
inc
call
sbb
and
xchg
mov
dec
push
xchg
lret
cmc
cmpsl
cwtl
cld
insl
jno
xor
rclb
mov
subb
lods
mov
xor
rcrb
outsl
lods
popa
push
pusha
mov
inc
insl
jp
aas
js
sbb
fdivrl
out
dec
mov
aad
add
mov
mov
fadd
jge
pop
xor
add
and
pop
jle
push
test
out
loopne
stc
in
test
and
mov
iret
in
lahf
pop
cmp
push
loopne
mov
divb
push
push
loopne
out
mov
aaa
loop
into
mov
jne
in
adc
sbb
sub
mov
test
rcrb
xchg
mov
add
pop
sahf
push
int
mov
jge
dec
mov
dec
repnz
add
and
cltd
cmpsl
rcrb
and
aad
inc
push
or
cmp
sub
pusha
in
inc
sub
cmp
sub
sub
sub
xchg
dec
inc
outsl
xor
sbb
and
andl
add
and
loopne
cmp
and
add
dec
mov
addb
sbbb
scas
andb
pushf
or
stos
addb
inc
mov
adcb
dec
or
adcb
xchg
call
mov
and
addr16
test
subb
jo
push
or
mov
std
lret
sub
loopne
inc
xchg
sub
loopne
or
cmc
inc
mov
stos
pop
adc
int3
mov
inc
add
icebp
fadd
xor
cmp
xor
push
sbb
sub
and
and
pop
je
inc
mov
xchg
andb
loopne
out
sub
mov
test
jl
loope
stc
mov
lret
js
push
fcomip
jmp
inc
pusha
in
out
xchg
sub
cmp
and
iret
iret
adc
inc
js
cmp
jp
std
add
psrld
jmp
fsubrs
xchg
loopne
ret
cwtl
mov
movsb
pusha
pusha
sub
and
out
add
adc
loopne
xchg
rcll
adc
or
loope
cld
iret
cmc
push
mov
cli
mov
inc
loopne
stos
shlb
fsts
xor
mov
js
dec
mov
nop
les
jg
push
push
xor
andb
sub
and
mov
mov
push
in
mov
add
pusha
add
dec
inc
xchg
sahf
lods
and
repz
ret
lods
and
lods
add
jecxz
xor
lret
mov
dec
outsl
iret
lret
and
ljmp
enter
aas
jns
rcrb
xchg
pusha
push
xor
sbb
sbbl
stos
inc
inc
jp
shl
es
inc
sahf
lods
ret
dec
popf
adc
jmp
lret
scas
and
insl
sub
jecxz
gs
outsb
aas
notl
insb
stc
add
xchg
lret
mov
and
pusha
sbb
and
push
inc
arpl
and
loopne
mov
dec
int3
ficoml
addb
mov
jbe
cmp
sub
pop
pop
push
pusha
and
xchg
rorb
mov
and
adc
xchg
lahf
mov
orb
add
adc
fisttpl
mov
mov
inc
add
adc
clc
dec
mov
subl
fdivs
loopne
dec
bound
sub
push
insb
cmp
fstpt
pusha
rorb
das
popa
pop
imul
jg
inc
pop
xor
mov
jnp
out
mov
cmp
push
pop
in
dec
xlat
in
aad
in
mov
fnstcw
mov
and
add
cmpb
inc
and
mov
pusha
stos
and
loop
mov
fadds
xor
add
int3
push
jg
push
icebp
out
jno
cmpl
and
and
addb
xchg
pop
pushf
pop
outsl
or
inc
out
test
jb
pusha
jae
popf
shrb
lods
fisubrs
inc
clc
aam
call
sub
shlb
inc
add
loopne
and
rorl
outsl
pushf
imul
push
mov
andb
mov
call
dec
sbb
xchg
pusha
stc
push
pop
testl
andb
hlt
adc
test
pusha
xor
popf
xlat
push
pushf
ljmp
and
je
mov
addb
movaps
dec
repnz
cmc
sar
jno
ret
or
ret
lds
fisttpl
jbe
jb
cmp
jge
push
jmp
mov
mov
mov
dec
les
pop
and
stos
pusha
loopne
sub
and
dec
xchg
sbb
mov
xor
pusha
subb
mov
shll
test
jne
ja
ret
mulb
inc
aam
imul
imul
mov
push
mov
aam
popf
xor
pop
mov
push
jle
cmp
imul
xchg
mov
push
es
add
fstl
mov
fmulp
jecxz
pushf
sbb
pusha
pusha
pop
in
fldenv
mov
mov
repnz
icebp
addr16
jb
andb
xor
lcall
addb
jg
add
mov
add
bound
sarb
push
test
and
xchg
or
jge
std
push
aad
inc
or
subb
std
jno
pusha
add
int
rolb
int3
frstor
dec
test
loopne
add
rcrb
into
in
xchg
pop
jno
cltd
imul
lock
sub
movsb
inc
xorb
adc
aaa
ret
movsb
inc
loopne
and
sbbb
subb
addb
pop
or
adc
inc
pusha
lret
inc
pushf
xor
sahf
pushf
out
inc
js
push
mov
xor
mov
xchg
test
movlps
adc
arpl
cmp
add
push
push
and
out
cmp
or
push
push
mov
dec
pushf
sbb
cmpsb
and
and
cmc
jae
cmp
mov
add
adcl
mov
in
sub
xor
int3
fs
sub
mov
insl
fwait
sub
inc
fwait
push
inc
add
stc
out
cmpsl
jmp
rorb
jl
and
fidivrs
into
push
push
pusha
and
ret
mov
push
sbb
lea
cltd
movsl
push
inc
mov
and
mov
fidivrs
pop
lret
inc
add
inc
clc
outsb
fs
adc
xorl
add
add
pusha
test
inc
mov
shlb
xchg
mov
dec
fs
add
xchg
in
pop
rclb
adc
and
pusha
js
in
xchg
mov
and
xchg
inc
mov
lea
rclb
mov
mov
into
and
pusha
andb
and
pop
pop
pop
add
vmovss
adc
or
lret
pop
scas
rol
nop
push
loopne
lock
xchg
shlb
and
and
mov
add
sti
ret
shl
xchg
mov
lcall
inc
add
mov
mov
and
in
imul
mov
pop
inc
jle
mov
add
leave
mov
rcrl
and
push
push
mov
fdiv
xchg
push
adc
push
out
dec
xlat
test
add
mov
and
loopne
hlt
mov
sub
ror
and
push
clc
mov
mov
and
sub
scas
out
mov
shlb
inc
pusha
cmp
in
int3
cmp
stc
push
shl
pusha
inc
and
add
mov
and
pop
add
rclb
rolb
les
cmp
flds
cs
inc
or
pusha
movsb
shlb
inc
rcll
sahf
into
inc
and
rol
inc
shlb
ss
pusha
orb
test
and
add
divb
mov
lods
and
sti
adc
xor
cmp
cmp
movaps
push
mov
add
mov
jle
push
push
add
sbb
pop
mov
mov
repnz
imul
cmp
and
cmp
pusha
push
adc
rolb
mov
pop
fnsave
int3
roll
loopne
scas
add
mov
mov
and
sub
push
dec
xchg
push
leave
adc
jg
mov
xor
in
aas
das
insb
fwait
mov
add
subb
cld
andb
dec
push
sub
jo
pop
outsl
jle
pop
out
mov
and
addb
add
mov
inc
adcb
jbe
mov
stos
mov
loopne
pop
iret
out
pop
ja
clc
dec
mov
pop
loope
jl
mov
pusha
pusha
outsb
and
mov
inc
add
out
clc
jns
sbb
fwait
jle
addb
lods
mov
jmp
pop
pop
xchg
push
lods
mov
or
and
out
pop
aam
lds
mov
pusha
and
jle
inc
add
andb
mov
inc
add
sti
mov
push
cmpsl
fnstcw
mov
push
add
loopne
mov
mov
cld
sub
loopne
loopne
daa
fbld
and
mov
test
loopne
rolb
push
xor
pusha
pusha
lock
add
pusha
or
shl
ds
adc
mov
xchg
stos
mov
mov
cmc
mov
xor
imull
les
adc
pusha
into
out
test
stos
addb
add
hlt
or
les
cmp
mov
lret
inc
or
pusha
pusha
add
add
outsl
push
inc
add
call
jge
ja
pop
jb
cmp
dec
inc
jae
mov
sub
add
pop
xor
inc
std
cld
cld
adc
xor
mov
and
mov
fildll
mov
dec
jo
inc
es
pusha
sub
mov
sahf
add
xlat
pop
inc
lcall
push
push
mov
add
repz
ds
loopne
mov
cli
dec
xor
pusha
adcb
dec
mov
fdivrs
lret
cmp
push
inc
hlt
lcall
xor
rcl
popf
movsb
andb
mov
sbb
dec
fcoms
lfs
insb
xchg
sub
mov
ljmp
loopne
loopne
sbb
xchg
test
inc
ds
andb
scas
dec
je
xchg
mov
dec
bnd
add
mov
lahf
sub
mov
mov
adc
shrl
pop
mov
or
sbbb
loopne
mov
add
addb
rol
sarl
dec
stc
lret
dec
push
mov
inc
dec
cwtl
outsl
push
leave
jp
ret
loopne
aas
xchg
and
inc
lea
mov
xor
adc
idivl
icebp
jne
test
or
andb
lret
mov
rolb
mov
in
out
and
orb
call
push
stc
insl
outsl
or
add
push
adc
mov
xchg
cmp
push
cmp
and
adc
add
inc
jb
fwait
sub
mov
mov
into
push
inc
aas
outsl
cmp
xchg
push
add
andb
inc
add
xor
lret
shl
xchg
jl
add
imul
xor
pushf
mov
mov
icebp
cmpsl
mov
mov
andb
sub
cli
shlb
and
fs
sub
mov
js
cld
imul
pusha
and
sbb
sbb
pop
mov
add
jecxz
mov
bound
ror
pop
aas
inc
fcmovbe
jo
jae
adc
lcall
andl
mov
rcl
push
jp
les
insl
cmpsb
add
xchg
or
in
aad
mov
jmp
xor
insl
insb
xor
cmp
jo
add
xor
fdecstp
push
pop
ficomps
dec
imul
fimull
loopne
cmpsl
jge
ret
inc
mov
sbb
cmp
push
sub
jo
loopne
icebp
aam
lret
and
insb
iret
ss
fstpt
push
add
popa
in
ret
int
rolb
das
outsl
xchg
int
pop
mov
dec
jo
push
mov
sbb
push
loopne
jge
pop
das
in
shrb
inc
loopne
cmc
aaa
xchg
int
dec
lret
jecxz
pushf
popa
sbb
xchg
jmp
sbb
pop
cld
pop
xchg
out
arpl
inc
call
adc
int3
and
xchg
xchg
dec
xor
push
push
mov
andb
ss
loopne
leave
cltd
inc
ret
mov
fiaddl
jne
adc
push
jmp
lock
ret
sub
pusha
add
mov
andb
push
and
push
into
xchg
xor
pusha
cwtl
xchg
es
add
cmp
mulb
or
mov
mov
add
movl
rorl
and
xlat
in
mov
add
fldt
stos
mov
push
cmpl
pop
andb
sbb
jg
inc
scas
xor
shlb
sub
shlb
pop
xchg
nop
and
add
cmpsb
inc
add
or
shll
stc
sarb
adc
test
and
mov
clc
or
fsub
mov
sub
mov
sub
mov
mov
mov
xor
and
cmpsb
mov
mov
inc
repnz
in
fldl
and
cmp
pushf
adc
add
sarb
mov
cmp
sti
pop
pop
sub
rcll
adc
mov
movsl
ljmp
test
and
shll
mov
andb
jno
push
add
or
rcrb
inc
loop
lret
mov
jae
out
sub
and
shl
fnsave
push
rolb
pop
ss
pusha
and
loopne
int3
mov
std
inc
lret
sbb
jbe
mov
adc
jg
dec
call
inc
mov
jecxz
mov
imul
stos
inc
inc
sahf
xor
mov
iret
jns
fsubrs
add
pusha
jmp
outsb
or
imul
notl
xchg
pop
sub
data16
jmp
ss
pop
imul
fstpt
loopne
mov
mov
jge
and
ds
shl
loopne
pop
in
mov
dec
mov
and
mov
aad
out
repz
addb
negl
inc
add
cmp
rolb
hlt
movsl
movsb
add
xor
xchg
fistpl
loop
mov
jae
xor
jg
adc
pop
hlt
add
cmc
push
aam
cmc
orl
aaa
les
or
cltd
lret
loop
push
ret
jecxz
jge
pop
sahf
pop
xor
int3
mov
loopne
jae
andb
iret
jno
pop
ret
adc
mov
add
addb
mov
ljmp
lods
addb
jl
xor
sahf
or
andb
xor
cmc
xor
sub
push
xchg
sbb
add
sub
aas
cmp
mov
test
jl
mov
and
shlb
loopne
in
xor
mov
push
jp
xor
mov
adc
hlt
es
and
and
orl
pop
mov
or
shlb
das
jns
jl
jmp
and
mov
add
mov
dec
loopne
adc
cmc
push
pusha
pusha
lahf
int
ss
repnz
push
data16
jae
out
addb
sub
and
sarl
movsl
into
sbb
cmpsl
mov
pop
lcall
mov
sbb
fldl
add
and
cmp
cmp
not
jns
xchg
loop
ja
je
in
test
adc
cmp
push
inc
adcb
int
push
ret
add
rcr
and
mov
and
jg
mov
loopne
and
mov
cmp
lods
and
sbb
lods
inc
pusha
test
es
lcall
pusha
orb
stc
cmp
inc
pusha
loopne,pn
xlat
test
add
aas
push
lock
pusha
push
mov
rcll
push
pop
shrl
mov
xchg
inc
inc
fistpl
mov
mov
popa
push
jns
cmp
or
mov
push
lds
add
and
xchg
push
mov
and
mov
sbb
inc
sarb
or
adcb
sub
mov
loopne
imul
xlat
mov
xchg
ds
cmp
and
mov
andb
jbe
inc
test
rcrl
int3
xchg
cmp
mov
cmpsl
cmp
sub
cltd
xchg
stos
push
aas
pop
popa
repz
mov
adc
add
and
add
loopne
add
ret
mov
test
popf
and
sar
andb
jne
loop
mov
jns
test
pusha
movsb
add
out
arpl
jb
push
out
fnstcw
dec
mov
inc
add
cmpb
adc
jmp
pop
repnz
inc
and
mov
mov
and
pusha
lods
repz
outsb
dec
mov
jo
rolb
add
sbb
sbb
xchg
addb
cmp
mov
lock
addb
sub
mov
faddl
add
dec
jle
loopne,pn
filds
mov
inc
push
movb
inc
stc
adc
jl
cmp
in
nop
sbb
loopne
pop
shlb
pusha
inc
jl
xchg
loop
mov
repnz
inc
jns
loopne
dec
lds
adc
popf
in
aam
and
mov
loopne
fsubrs
daa
test
xchg
imul
mov
xchg
rcrb
and
jge
cmp
mov
mov
fs
dec
sub
add
imul
loopne
sbb
sbb
mov
mov
jmp
sub
loopne
mov
addb
mov
jge
pop
xchg
stc
mov
xor
cmp
test
inc
insb
outsb
lds
xchg
mov
dec
inc
mov
and
loopne
not
int3
sub
mov
out
mov
sbb
nop
push
jo
cmp
pop
jle
jbe
xor
dec
jmp
xchg
std
hlt
xor
and
ja
movsl
fildll
sbb
fdivrl
adc
test
dec
mul
mov
ret
and
shlb
loopne
cli
mov
mov
pop
sub
mov
sarb
and
arpl
adc
in
in
rcrb
leave
lods
dec
loope
lds
mov
sbbb
andb
dec
imull
sub
pusha
imul
adc
int3
addb
cmp
push
adc
es
rcrb
in
inc
in
xchg
cmpsb
pusha
shrb
and
aas
inc
fs
movb
inc
cmpsb
addb
rcrl
sbb
rol
addr16
mov
adc
pop
cmp
scas
and
scas
andb
add
inc
cmp
mov
aas
out
ret
addb
hlt
lret
lret
xlat
cli
xchg
push
mov
loopne
in
dec
repz
js
cli
sub
pusha
xchg
test
subb
insl
cmc
sbb
shlb
rclb
adc
mov
andb
sbb
out
sub
repnz
pusha
movsl
or
xorb
loopne
mov
addb
addb
out
xor
andb
frstor
adc
hlt
lahf
ds
mov
sahf
inc
lds
fstpt
xchg
pop
xchg
shrl
es
mov
cld
in
insl
call
cli
mov
notl
xchg
out
add
add
add
inc
mov
into
in
shlb
rolb
and
jbe
pop
stc
dec
add
gs
fistpll
sbb
push
jle
cltd
mov
popa
mov
push
push
xchg
mov
addb
in
stos
outsl
les
arpl
addb
mov
xor
out
sbb
or
sbb
sub
cmp
mov
imul
clc
insl
mov
sub
add
loopne
test
mov
push
add
and
jg
rolb
imul
or
cmp
loopne
pusha
mov
add
loopne
and
pop
and
shlb
cwtl
push
add
xor
aam
ror
fistpll
fisttpl
sub
rcrb
xchg
sbb
cmpsb
addb
cwtl
push
jp
cmp
xchg
stos
pop
fadd
mov
loopne
add
subb
and
mov
mov
dec
lock
xchg
push
addb
mov
mov
ds
inc
jmp
or
stc
insl
sbb
mov
xchg
ljmp
shlb
pop
stos
andb
mov
subl
shlb
pop
inc
sub
xorb
inc
into
popa
lret
outsb
hlt
das
je
pusha
inc
lock
or
mov
and
lods
mov
scas
ja
dec
push
push
dec
arpl
lret
jne
add
pop
sbb
mov
jno
mov
sub
mov
and
imul
shlb
push
push
rcl
dec
lahf
fadd
lret
xchg
jp
cmp
cmp
or
sbbb
inc
xchg
or
out
adc
nop
mov
push
push
stos
inc
out
out
sub
js
fistps
jns
mov
cltd
mov
mov
pop
hlt
or
adc
mov
mov
jne
cmovbe
pop
ret
xor
jge
sbb
and
and
into
testl
loopne
pop
dec
fldcw
clc
out
cmpsl
aaa
clc
cwtl
jne
js
loopne
cld
es
shlb
fdivl
mov
push
enter
mov
lock
inc
shlb
lock
fisttpl
inc
add
pop
cmpsl
bound
mov
movntq
imul
fdivs
adc
sub
and
loopne
js
call
aam
popa
addb
and
fsubs
rol
loopne
inc
aas
and
and
jecxz
push
mov
mov
dec
xchg
shll
minps
sbb
loopne
pop
mov
hlt
cmpsl
xchg
adc
inc
add
or
loopne
pusha
loopne
and
mov
add
mov
fsts
pop
inc
dec
es
and
sbb
add
sar
sbb
jecxz
shll
or
subb
in
pop
mov
fisubrl
mov
rolb
sub
subb
mov
xchg
push
pusha
add
test
dec
mov
aaa
adc
and
lods
inc
rolb
push
ret
xor
sbb
sub
and
aam
and
cmpl
out
xchg
add
lcall
outsb
sbbl
fistpll
je
inc
mov
cli
adc
mov
jge
xchg
pusha
and
jno
shlb
jne
jb
and
jns
sbb
push
loopne
lar
pusha
lahf
pop
dec
iret
mov
test
addb
add
add
out
cwtl
cmp
fldl
and
mov
aas
sbb
xor
je
stc
mov
cs
sub
adc
add
inc
mov
out
xor
mov
cltd
pop
test
rclb
inc
data16
pop
xchg
or
orb
dec
add
mov
inc
popf
push
sbb
push
mov
lea
fcoml
pop
or
add
inc
and
mov
push
cmp
sbb
mov
jmp
xorb
andb
shlb
and
sub
stos
xorl
popa
lods
inc
and
pop
std
outsl
bound
loopne
fcomp
out
cmp
mov
lret
push
dec
fidivl
push
mov
mov
cmpsl
sarb
inc
pop
cltd
jbe
imul
xchg
fsubrl
mov
loopne
inc
loop
cltd
adc
lahf
jp
push
add
lret
jl
or
and
jmp
xlat
sub
sarb
inc
cmp
dec
out
xor
cli
aaa
insb
mov
adc
andb
in
cld
dec
push
loopne
je
inc
inc
scas
inc
inc
pop
je
imull
popf
scas
mov
dec
aad
insb
inc
mov
std
mov
sbb
out
pop
pop
mov
jb
mov
mov
rclb
test
and
xor
xlat
fistpll
push
fs
mov
hlt
scas
loopne
pop
mov
mov
sub
mov
mov
clc
jmp
and
and
xor
fisttps
add
add
sub
stc
xchg
rcr
mov
loopne
addl
cmp
negb
imul
sbb
loop
mov
cmpb
adcb
pusha
push
iret
or
loopne
pop
hlt
sub
inc
cmpb
pusha
aad
loopne
aad
add
insl
inc
mov
inc
xlat
jge
popf
das
add
pusha
pop
mov
stc
mov
ljmp
mov
loopne
into
clc
sarl
and
and
and
push
dec
mov
push
mov
xchg
lret
std
por
inc
lret
adc
and
sbb
repz
pusha
ja,pt
and
mov
mov
pusha
mov
cmp
shl
andb
in
and
subl
xchg
push
mov
cmpb
adcb
int
rcll
cld
stos
inc
andb
cmpsl
dec
loope
out
jno
shlb
add
loopne
fsub
insb
push
adc
and
push
mov
inc
mov
mov
jmp
sahf
ret
mov
adc
cmp
das
fiaddl
and
inc
loopne
add
cmp
out
leave
ret
movsl
test
push
rolb
hlt
cs
add
jno
sub
fisubrl
loopne
call
add
or
loopne
inc
pusha
cmc
daa
insl
mov
daa
int3
testl
sub
inc
icebp
das
pop
dec
ljmp
imul
fildl
inc
jp
or
cmp
and
fdivrl
push
inc
pusha
dec
movsl
sbb
fsubrl
loopne
mov
vmovq
roll
out
aad
mov
addb
fsubrs
addb
dec
xchg
sahf
popa
int
in
or
pushf
popa
push
js
inc
enter
mov
mov
add
mov
in
dec
pushf
repnz
and
mov
shrb
lcall
and
inc
repz
mov
mov
rorb
shrl
andb
xor
mov
jno
dec
cmp
aam
out
daa
add
fcomps
push
fistpll
shl
in
aad
sub
mov
jbe
mov
imul
std
loope
mov
shrb
mov
rclb
mov
xlat
pop
addb
mov
stc
call
test
or
les
sub
loopne
loopne
cmp
xchg
jecxz
pop
in
mov
pusha
push
push
mov
addb
rol
inc
and
in
sbb
rolb
dec
cmp
jbe
sub
xchg
inc
mov
adc
nop
shlb
mov
inc
pusha
fisttpl
mov
loopne
subl
add
cli
in
leave
push
mov
and
test
cli
xchg
dec
mov
test
nop
dec
sub
mov
xchg
std
loop
jo
aaa
push
inc
inc
arpl
rol
push
jl
pop
xor
pusha
and
ret
push
mov
mov
dec
jbe
jns
inc
dec
xchg
xlat
mov
add
mov
mov
addb
out
fidivrs
or
fwait
sahf
xchg
icebp
inc
mov
fcmovnb
out
pushf
imull
and
jle
inc
push
rcll
cmp
add
mov
adcl
xchg
inc
xchg
mov
lret
cmp
repz
inc
inc
adc
out
fyl2xp1
cwtl
fisubl
shlb
jae
push
add
lahf
cwtl
jne
push
std
xor
adc
pop
or
arpl
addl
or
and
aaa
pusha
push
mov
enter
scas
xchg
popf
into
ror
je
pop
xor
xor
sti
xchg
mov
movsl
je
push
cwtl
jp
mov
loopne
mov
repnz
or
inc
push
cmp
mov
pusha
rcll
and
mov
loop
xchg
xchg
push
xor
and
popf
adc
popa
sahf
jl
and
out
arpl
jae
loopne
jae
ret
ret
jae
sub
call
and
adc
sbb
and
outsl
mov
and
xor
push
pusha
mov
mov
iret
cwtl
pop
pop
and
dec
lcall
and
loopne
mov
lcall
jl
jmp
push
addb
adc
push
or
add
xor
mov
pusha
add
xchg
xchg
adc
std
fsts
iret
xchg
jmp
cmp
insl
jbe
cmp
push
arpl
fldl
inc
loopne
pop
pop
outsl
loope
pushf
add
ret
lea
leave
dec
imul
shrb
push
add
add
lcall
sub
mov
popa
mov
lds
andb
int
sub
insb
test
jge
outsl
mov
loope
data16
out
jmp
mov
sarb
and
inc
jg
into
jbe
dec
into
scas
add
mov
or
add
mov
stos
pusha
ror
in
data16
dec
fbld
mov
ss
lea
rorl
inc
cmpb
inc
cltd
xchg
pop
adc
mov
je
insl
cmp
out
inc
xchg
dec
jle
sbb
test
loop
mov
add
pop
push
hlt
inc
outsb
xor
loopne
stc
push
flds
add
add
je
popl
loopne
sbb
decl
lods
cmp
rol
xor
ficoms
inc
mov
lock
aad
shr
sub
inc
pop
push
or
and
sub
cmp
imull
mov
xor
cmp
bound
aaa
insb
adc
lret
and
pusha
inc
scas
inc
shr
add
pusha
xchg
aad
push
jo
or
movsb
inc
loopne
rolb
or
pusha
pop
dec
mov
movsl
mov
orb
dec
jmp
mov
popf
jle
pop
pop
cmp
dec
icebp
jle
inc
jo
push
mov
mov
inc
mov
sti
pusha
push
movsl
adc
pushf
pusha
fwait
mov
xchg
jns
fnsave
jg
cld
rorl
mov
or
shlb
pusha
mov
scas
sub
rclb
push
aam
jb
mov
rolb
add
loopne
in
imul
adc
push
or
adc
jae
mov
mov
cmp
jle
int
in
add
pusha
and
mov
adc
pop
inc
inc
mov
mov
shrl
mov
add
mov
bound
push
insb
ret
ds
aaa
outsb
repnz
and
mov
mov
lret
push
loopne
mov
xor
mov
ljmp
out
rolb
mov
clc
pushf
aam
outsb
sarb
popa
fldl
xor
cltd
loope
sar
sub
add
and
pusha
je
mov
mov
and
je
clc
arpl
pusha
in
dec
fists
out
adc
andb
lods
pushf
mov
fimuls
rol
stos
cmp
lcall
add
sahf
ret
addb
inc
jl
loopne
loopne
mov
adc
ficomps
js
cwtl
rolb
inc
xchg
xchg
xchg
sub
inc
pushf
fmulp
push
pop
push
popf
out
out
loopne
xor
sbb
pusha
loopne
fwait
adc
clc
mov
pusha
loopne
movsb
loopne
orl
sub
mov
mov
and
jecxz
add
roll
inc
insb
arpl
icebp
lock
push
lsl
std
out
je
mov
dec
push
inc
inc
sub
lods
pusha
shlb
mov
das
add
je
addb
mov
and
shll
gs
cmc
xorl
xor
andl
or
rol
js
and
inc
pusha
out
rclb
mov
test
mov
pusha
mov
jbe
xchg
lock
jge
loopne
loop
cmp
and
in
leave
mov
loopne
stos
jne
mov
repz
cmp
mov
mov
rorb
pop
pop
lahf
mov
les
xor
jno
loope
stc
shl
shlb
fisubrs
loopne
cmp
sbb
rolb
pop
int3
push
fildll
jle
dec
pop
xor
fucomip
aad
pusha
mov
cld
add
cwtl
dec
ss
inc
rcrb
into
mov
out
jb
outsb
jbe
shrl
add
in
lret
push
ja
add
cmp
ja
push
fiaddl
inc
icebp
and
pusha
push
andb
push
push
pop
inc
pop
iret
test
inc
dec
fldcw
in
mov
es
loopne
andb
mov
adc
add
cwtl
or
inc
cmpb
cmp
loopne
sub
jle
imul
and
repz
pop
sbb
loop
mov
aam
call
aaa
push
adc
adc
in
adc
loopne
mov
addb
addb
xor
mov
leave
pop
inc
iret
sub
andb
sbb
loopne
cmp
cmc
jp
pop
push
add
inc
pusha
aas
leave
mov
inc
ror
movsb
pusha
addb
mov
mov
imul
in
sub
and
mov
daa
std
sbb
in
mov
push
rclb
je
inc
pop
sub
adc
inc
loopne
inc
fidivrs
xchg
inc
cmp
addb
scas
inc
and
mov
orb
sub
js
fwait
lret
add
and
loopne
mov
mov
int3
test
das
lcall
fnsave
jmp
mov
sti
cmp
out
das
das
lahf
jecxz
loopne
mov
rcrb
jge
in
mov
aam
andb
dec
out
push
inc
fnsetpm(287
js
inc
loopne
mov
and
stc
dec
cmp
sub
mov
jb
pop
adc
mov
push
sti
mov
subb
sub
inc
jmp
push
sbb
cmp
ficomps
lret
loope
mov
shlb
add
int
in
lock
add
xchg
pusha
rorl
addr16
and
mov
and
dec
lahf
jns
mov
loopne
push
inc
je
insl
flds
jmp
cmp
pop
loope
out
paddd
mov
jle
and
cld
cmp
cmp
movsb
loopne
mov
adc
iret
lret
repz
out
xor
add
movsl
lret
divb
adc
pop
pop
sbb
out
bound
inc
add
out
mov
aad
ret
or
and
rcl
test
pusha
pop
jmp
xchg
inc
mov
clc
jns
or
mov
and
repnz
add
pusha
sub
push
sbb
push
push
das
xor
fildl
loopne
jmp
xchg
pusha
adc
mov
lds
lods
add
dec
ljmp
fldln2
imul
xorb
pusha
and
loop
mov
daa
mov
enter
mov
add
mov
test
test
mov
sarl
inc
sbb
shrb
rorl
mov
icebp
sub
mov
nop
imul
lret
sbb
ss
sahf
adc
pusha
mov
loopne
cld
or
pusha
xchg
add
pop
lahf
loop
gs
aaa
xor
jbe
cmpsb
and
inc
ficompl
mov
cli
or
xor
addb
cmp
adc
push
mov
add
sub
push
jge
jns
push
push
loop
add
shlb
xor
push
imul
inc
dec
dec
mov
and
ljmp
xor
loop
push
pop
repz
outsl
mull
jns
lea
mov
scas
add
cmp
jmp
mov
mov
dec
adc
shrl
add
test
xor
popa
adc
mov
imul
mov
adcb
enter
imul
sub
rol
push
cmpsb
and
push
mov
mov
test
and
and
ss
and
jne
push
add
fld
mov
mov
in
shl
pusha
mov
outsl
addr16
iret
mov
subl
pop
pop
push
rol
aas
cmpsb
add
and
mov
mov
sbb
neg
testl
sti
inc
jmp
pop
call
and
cmp
xchg
iret
xchg
lods
xor
xchg
cltd
scas
jg
addb
adc
aas
cli
add
arpl
out
dec
and
and
sbb
loopne
stos
and
adc
xor
das
add
fmull
or
and
addb
subl
adcb
mov
pop
setno
add
popf
cld
arpl
out
mov
mov
jb
js
jmp
xlat
notb
dec
outsb
movsb
loopne
push
jnp
subps
pusha
or
subb
or
jo
leave
insb
nop
pop
jno
push
mov
arpl
test
adc
popa
jno
add
aam
jle
push
stc
pop
fistps
mov
ljmp
pop
mov
daa
push
mov
and
dec
jecxz
sbb
inc
ljmp
insl
aad
xor
push
inc
ret
adc
or
jns
pop
cmp
iret
pop
sbb
xlat
push
andb
jmp
inc
rol
ja
in
gs
add
or
mov
add
or
repz
xchg
inc
movsl
cmp
and
dec
or
pusha
adc
ljmp
pop
add
test
pusha
loopne
and
mov
gs
jnp
fldt
xor
gs
add
sbb
jmp
cmp
movsb
rolb
xchg
inc
push
and
shlb
loopne
in
or
sub
shr
daa
xor
pusha
shl
mov
mov
insl
or
dec
cmpsb
loopne
and
adc
or
stos
push
sub
mov
push
xor
adc
leave
cltd
xor
mulb
inc
insb
loope
rorb
xorl
adc
and
add
insb
and
xchg
gs
mov
loopne
test
out
lds
gs
pop
xchg
xchg
ja
inc
push
sbb
mov
pusha
mov
dec
lcall
das
and
loopne
ljmp
cmpsb
loopne
mov
and
test
arpl
pusha
inc
sub
test
mov
pusha
inc
lock
inc
out
mov
push
xor
fwait
push
out
pushf
mov
mov
std
xchg
sbb
fcoms
aas
aas
sub
cmpb
mov
cmpsb
pusha
loopne
mov
jge
add
arpl
xor
jmp
jg
dec
pop
rorb
cmp
sub
jge
push
scas
add
push
push
mov
loope
test
shl
mov
xor
pop
ss
cmc
sub
loope
mov
icebp
stos
nop
out
mov
and
add
cmp
lock
pusha
sahf
pop
into
clc
iret
orl
shrl
fadds
mov
dec
cmp
mov
xlat
fsubrl
or
push
js
push
add
ss
cltd
mov
test
add
out
mov
mov
xor
or
adc
popf
or
and
in
jp
jge
adc
jg
popa
push
test
sub
mov
mov
loopne
neg
cmp
sub
cmpb
xor
xor
lahf
dec
into
insb
sub
inc
inc
mov
fadds
pusha
sub
jecxz
andl
push
shll
inc
jne
lret
lret
mov
js
stos
loopne
or
inc
add
loopne
cmc
enter
sbb
in
bound
pusha
jnp
pop
rcl
out
popf
dec
bound
fsubl
xorl
sub
sarl
pop
inc
xchg
xchg
loopne
loope
pop
xchg
incb
dec
mov
iret
neg
jne
test
fcoml
nop
dec
sbb
add
out
dec
push
xlat
mov
ret
add
pusha
mov
loopne
add
cmpsl
xor
cld
pop
pop
popf
mov
jae
bound
shlb
pop
inc
in
daa
dec
pop
sub
add
into
inc
clc
neg
call
gs
pop
jecxz
add
outsl
or
aad
imull
movsb
loopne
js
imul
add
adc
daa
pop
xchg
fbld
xchg
movsl
pushf
cs
pop
sbb
lcall
push
and
cmp
adc
loopne
rcl
sarb
ret
aam
movsb
and
repnz
outsb
popa
pop
pop
pop
ror
push
repnz
in
rolb
sub
dec
mov
loop
add
push
addb
movlps
flds
lret
lret
ljmp
pusha
and
rolb
js
push
inc
mov
lock
mov
cmp
mov
cmp
jle
dec
or
loopne
cwtl
ret
fsubr
add
dec
pop
lods
fistpl
adc
pusha
rorb
adc
fsubrl
fcmovb
dec
mov
mov
dec
xchg
or
andb
popa
push
xor
test
or
test
pusha
fbstp
inc
add
dec
cmp
pusha
mov
sbb
mov
mov
inc
cmpsl
mov
not
adc
hlt
scas
pusha
inc
xor
mov
jo
mov
lods
insl
ds
rorb
fsubl
add
ss
xlat
outsl
jmp
and
xchg
mov
mov
les
and
lods
adc
dec
div
inc
cwtl
or
xchg
push
scas
and
inc
adc
and
shl
test
test
sbb
sbb
xchg
mov
mov
inc
push
jmp
push
fst
outsb
fbstp
inc
dec
pop
lods
dec
adc
outsb
in
pop
lcall
loope
lock
sti
sub
push
in
iret
push
fdivs
xor
lahf
icebp
cmp
sarb
jl
xor
ss
cmp
dec
rclb
xorl
jp
sbb
das
push
adc
incl
addr16
jmp
rol
aad
dec
and
in
jnp
in
shl
pop
push
and
hlt
loop
push
loopne
mov
loop
pop
jbe
sti
pop
push
add
pop
xchg
test
xorb
pop
push
push
std
sbb
xor
out
push
cmc
xor
mov
loopne
sbb
pusha
sbbb
dec
mov
xor
shr
cmp
mov
and
xchg
mov
mov
add
and
jo
cs
mov
stos
inc
mov
cltd
ja
dec
imul
test
sti
xchg
popf
pushf
jp
sbb
sbb
xor
shrb
mov
xchg
mov
ret
pop
shr
sub
lods
lcall
xor
stc
fcom
jns
inc
pusha
enter
xchg
loop
clc
mov
out
pop
jbe
lcall
adcl
andb
rclb
jecxz
push
add
iret
pop
sbb
clc
hlt
cmp
in
lock
movsb
inc
sarb
cmp
inc
mov
addb
pop
mov
aaa
sbb
dec
int3
jg
mov
add
es
pusha
jne
insl
ja
mov
and
cwtl
popa
sub
mov
pop
inc
test
add
mov
mov
dec
andb
ficoml
stc
outsl
xchg
pusha
xchg
mov
repz
add
sub
lcall
sti
mov
mov
push
fdivrp
dec
outsl
hlt
jo
movsb
addb
loopne
fmul
gs
xor
push
push
mov
sub
and
fldt
jle
loopne
mov
inc
shr
popf
and
imul
jmp
orb
sub
mov
loope
stos
loopne
pusha
adc
in
xor
mull
pusha
mov
test
push
adc
mov
clc
test
shr
xchg
mov
add
je
sbb
push
in
mov
xor
pop
push
xchg
sarl
pop
sub
cmp
rolb
iret
popf
aad
mov
addr16
mov
addb
lock
jle
pop
mov
pusha
cltd
lods
shlb
icebp
mov
lea
sbb
loopne
xlat
in
lods
add
mov
mov
pop
nop
mov
andl
dec
adc
sbb
xchg
dec
dec
scas
loop
cmp
inc
sub
and
rcrl
add
or
js
aaa
testb
pop
cwtl
xchg
mov
or
mov
add
shlb
or
and
and
xchg
dec
pop
adc
inc
mov
push
stos
add
mov
push
pusha
loopne
inc
adc
push
fcompp
aam
out
or
inc
pop
stc
gs
sbb
mov
mov
and
data16
sub
and
mov
xchg
ja
xchg
mov
or
sti
out
add
ljmp
pop
lcall
mov
push
add
lcall
shlb
in
mov
cmpsb
rolb
repz
loope
cli
jge
sbb
jbe
inc
xchg
loope
xor
in
addb
das
fsubs
add
or
mov
or
rcrb
or
mov
fwait
call
fs
lcall
popa
xor
add
scas
and
test
xchg
push
sbb
pusha
shll
addb
decb
and
mov
imul
jae
mov
dec
inc
lahf
jne
loopne
adc
loopne
jge
ljmp
addb
pusha
and
push
shrb
movsb
mov
and
outsb
mov
pusha
rol
andb
insb
cmp
fadds
aas
sbb
cmc
adc
ret
stos
rolb
inc
pusha
push
pusha
rcl
add
and
add
pop
push
push
test
rolb
pusha
leave
xlat
push
add
cmp
out
cmc
adc
cld
inc
sarb
outsl
adcl
add
adc
cmp
cmpsl
dec
ja
mov
lock
cmpsb
inc
and
dec
dec
jbe
into
mov
mov
sbb
push
inc
adcb
cmp
or
pusha
jae
call
pop
pop
in
shll
mov
cmc
aaa
loop
clc
sbb
sbb
inc
pop
in
in
xchg
repz
push
mov
in
ficompl
jns
out
stos
andb
pop
cmc
enter
cmp
xchg
jmp
loope
xchg
jl
stos
loopne
adc
cmp
add
or
pop
test
roll
sti
ds
jmp
cmp
xchg
and
insb
andb
adc
bound
adc
mov
cmp
out
outsl
mov
mov
loopne
xchg
inc
add
push
mov
and
pusha
push
xchg
lcall
fsubrl
andb
xchg
mov
insl
and
mov
dec
mov
dec
jne
sbb
sub
inc
test
decl
fbstp
insl
cli
addb
inc
add
xchg
jp
xor
xor
fildll
push
xor
loopne
aas
and
pop
lock
cmpsb
shlb
shll
inc
lcall
fs
xchg
xchg
ficoms
rcrl
push
sarl
mov
xorb
adc
pop
cmpsb
add
notl
inc
dec
fildll
push
and
movsb
mov
mov
nop
jno
imul
pop
sahf
lds
testb
mov
stc
test
mov
xor
sbbb
jbe
jg
loopne
enter
mov
add
push
out
aaa
fwait
pusha
cmpsb
and
xchg
sbb
ljmp
shlb
mov
bnd
loope
loope
ljmp
or
mov
mov
mov
push
xchg
out
adc
ret
imul
dec
push
scas
adc
jge
test
rclb
inc
fisubl
and
add
jl
addb
mov
sbb
or
dec
pop
sub
pusha
cmpsl
adc
add
or
add
mov
adc
repz
popa
sahf
lods
mov
outsb
adc
pop
clc
outsl
into
mov
mov
iret
lods
mov
push
rolb
dec
xchg
pushf
xchg
test
sti
or
jmp
and
inc
lret
mov
loopne
jbe
pop
push
jne
faddl
add
add
jg
push
add
sbb
add
outsl
stos
pusha
sarb
ret
movsl
xchg
mov
add
add
dec
cwtl
sub
add
add
add
outsb
outsl
faddl
addl
inc
and
inc
inc
mov
mov
sbbb
data16
pusha
inc
fcoms
jbe
and
mov
push
push
and
pop
xchg
bound
push
data16
dec
pop
pop
push
aam
sti
xor
in
rcrb
inc
inc
scas
test
inc
adcb
scas
xchg
lea
and
cmp
in
aas
pop
inc
ss
mov
xchg
stos
mov
clc
jns
addb
jecxz
ljmp
inc
cmp
adc
jb
cltd
cmpsb
loopne
dec
xchg
pushf
push
cwtl
xchg
pop
stos
stos
and
in
pusha
loopne
loopne
jecxz
mov
cmp
das
shr
cs
adc
push
mov
sub
push
mov
mov
mov
mov
test
inc
add
fs
mov
loopne
push
dec
lret
mov
popa
inc
pop
outsl
jmp
add
out
adc
pop
fsubrl
pop
sbb
dec
test
cmp
in
xor
add
pushf
mov
ss
mov
sbb
aad
and
push
jle
in
cmc
lds
bound
subb
ja
jbe
mov
mov
mov
into
std
jp
loope
cmc
sub
loopne
add
adcl
inc
cmc
test
xchg
mov
pusha
mov
add
push
ss
pop
sbb
mov
cmp
cmp
dec
dec
bound
fs
jo
xchg
pop
das
cmp
xchg
mov
lods
pop
xchg
shr
repz
fs
ret
and
andb
mov
repz
cmp
sbb
inc
ja
or
inc
adc
fisttpll
subb
and
mov
shll
or
sar
mov
pushl
into
jge
rol
aam
inc
mov
mov
loopne
insb
add
shlb
loop
lret
lods
loopne
push
fwait
insb
jg
pusha
shlb
int
cltd
insb
dec
or
addb
inc
mov
inc
jnp
in
add
sub
pusha
add
push
nop
dec
or
add
stc
sub
jo
cmp
mov
rolb
jmp
adc
xorb
repnz
loop
cmpsb
mov
dec
inc
cmp
push
loopne
es
xchg
pop
lods
inc
mov
push
sub
shl
jb
cmpsb
loopne
push
inc
inc
call
loopne
std
imul
pop
adc
out
addb
jb
insl
pop
mov
es
mov
lods
pusha
mov
das
andb
daa
in
mov
mov
sub
sbbb
js
je
addb
xchg
mov
popa
jmp
mov
cmpsb
shl
mov
sbbb
mov
cmp
adc
fldt
dec
dec
push
scas
andb
movsb
mov
inc
les
outsl
xchg
adc
adcl
jnp
ret
ret
xchg
rclb
xchg
jecxz
sbb
and
cwtl
adc
shlb
push
imul
pusha
inc
mov
pusha
and
mov
inc
and
and
stos
loopne
ljmp
cld
scas
loopne
in
test
push
mov
mov
les
xchg
and
pusha
pop
mov
pop
std
ror
adc
ds
jmp
lcall
add
sahf
xor
loopne
mov
imul
jp
loopne
sub
pusha
aas
in
xchg
insb
movsl
insb
mov
fisttpl
xchg
and
xchg
andb
mov
push
jo
dec
nop
push
out
sub
push
add
add
xorb
sub
xchg
jle
mov
insl
nop
mov
test
cltd
mov
rolb
mov
jp
sti
push
sbb
mov
xchg
add
in
jno
loopne
pop
insb
ds
mov
fs
mov
xor
rolb
mov
in
jge
outsb
cwtl
out
addb
mov
fs
loopne
or
cwtl
jb
pop
fmul
add
sarb
add
in
sbb
cmp
pop
pusha
subb
mov
addb
lods
and
cmp
and
jmp
in
int
inc
add
mov
dec
sbb
cmp
rolb
mov
dec
adc
jle
das
mov
adc
pop
int3
adc
daa
icebp
ret
jmp
das
out
cmpsl
dec
or
cmp
sahf
negb
sub
outsb
cld
sub
insb
mov
xorl
and
pusha
push
mov
in
ret
insl
dec
cmp
idiv
mov
and
addb
dec
or
rcrb
lods
in
mull
fcomps
imul
shlb
test
inc
lcall
pusha
xchg
mov
out
cmp
mov
adc
fadds
and
add
ds
insl
out
stos
inc
sub
mov
andb
out
fxam
mov
arpl
pop
and
jp
loop
sub
fiadds
test
pusha
lods
rolb
and
mov
inc
sbb
cmpsl
cmpsb
shlb
orb
add
rolb
pop
insl
jbe
addr16
xchg
xor
mov
outsb
adc
int
add
jg
fistpl
mov
pop
mov
inc
push
dec
cmp
loopne
std
dec
or
sbbb
popf
hlt
insb
jp
fs
or
shrl
int
cmpsl
insl
jge
das
mov
add
pop
push
dec
mov
pusha
inc
pop
test
jmp
in
xor
mov
dec
cmpsl
inc
pop
xor
dec
outsl
cmp
mov
pop
fdivrs
inc
out
lcall
lret
das
sbb
pop
test
pop
xchg
call
and
dec
popa
int3
xchg
in
inc
ljmp
and
mov
add
mov
lcall
pop
mov
adc
sbb
bound
inc
cmpb
repz
sub
push
lea
sbbb
pop
out
mov
and
test
shl
lods
mov
xchg
jae
and
inc
test
shlb
sbb
xchg
cmp
jb
jg
loop
loope
into
add
shrb
adc
cmp
mov
and
andb
cmp
call
and
cld
mov
mov
pop
test
dec
loop
inc
inc
stc
push
mov
cli
jp
fs
andb
fcomi
test
add
cltd
aaa
inc
cwtl
je
dec
xchg
das
mov
xchg
inc
imul
shl
push
or
shlb
and
cmp
and
mov
cmc
cli
cmp
das
ret
insl
adcl
into
movsb
mov
lret
cmp
pop
cmc
dec
es
add
mov
and
and
mov
sbb
mov
rol
out
lods
push
and
add
loop
inc
mov
imul
fistl
ret
push
mov
and
add
add
jp
loopne
and
iret
hlt
popf
ljmp
pusha
push
add
dec
add
or
inc
lret
divb
add
and
or
repnz
out
mov
jo
add
push
add
pop
xor
xchg
imul
sbbb
mov
stos
and
mov
pusha
out
xchg
and
mov
les
inc
sub
stos
add
jne
mov
imul
icebp
jmp
int
cltd
inc
push
push
lods
and
mov
test
xor
or
loopne
inc
pusha
scas
faddp
aas
ja
xchg
inc
shll
xchg
mov
push
loop
mov
mov
imul
rolb
mov
and
pusha
mov
jo
loopne
icebp
adc
fs
mov
out
mov
sbb
or
mov
iret
clc
enter
adc
sbb
sar
cltd
mov
adc
add
push
in
sub
icebp
mov
addb
pop
push
mov
icebp
push
imul
fidivs
jne
add
imul
jge
sub
mov
mov
std
test
mov
int3
loopne
xchg
push
add
and
and
add
cmpsb
loopne
cwtl
push
gs
mov
shlb
inc
pusha
cmc
and
and
loope
dec
lods
mov
and
sub
add
loopne
pop
mov
add
mov
add
ss
rorl
and
jns
shrl
add
dec
push
mov
aas
fimull
and
shlb
rolb
lret
fs
test
mov
sbb
shll
and
popa
sub
push
sub
sbbb
jp
xchg
cmp
out
and
mov
xor
shl
pop
in
outsb
mov
mov
xchg
jnp
cmpsl
bound
and
lds
add
add
inc
sbb
pop
jbe
mov
sub
sbb
ror
cmp
pop
inc
sti
dec
dec
add
jb
out
inc
cmp
loope
mov
aas
jne
xchg
into
test
stos
pusha
add
shl
pop
cmp
inc
fucomi
xor
or
pop
inc
mov
dec
rcrb
mov
sub
sbb
cmc
test
pusha
push
mov
loopne
stc
sbb
hlt
push
mov
les
call
lea
pop
es
add
and
or
and
lahf
leave
hlt
jbe
in
lcall
loopne
push
cmp
aad
cmp
inc
lds
pusha
add
pop
dec
stos
pusha
and
mov
addb
and
out
mov
ljmp
shlb
rorl
inc
adc
ficoml
out
fists
push
sub
shl
shll
and
aam
aas
sub
popa
insb
lock
add
sbb
mov
notl
lock
aad
testl
pusha
adcb
or
mov
cmp
pop
icebp
xchg
jmp
stos
rolb
inc
add
lods
andb
aaa
dec
add
xlat
mov
rcll
pop
xor
pusha
inc
mov
inc
or
pusha
aam
push
and
sub
cmp
out
mov
aam
xlat
movsb
add
and
cmp
ret
and
or
and
mov
xchg
cmpsl
adc
xorb
nop
sub
jecxz
adc
fimull
loopne
dec
sbb
sbb
cmp
cmpsl
jmp
pusha
pusha
mov
sub
and
xchg
xchg
add
loopne
fwait
imul
int3
arpl
sub
and
outsl
cmp
mov
rcrb
lret
aad
jnp
cmc
xor
shl
pop
sub
loopne
and
mov
test
cmp
bound
mov
orl
es
ror
pusha
mov
lds
dec
pop
adc
and
push
imul
stc
filds
rolb
pop
bound
ljmp
cvtdq2ps
rol
inc
pusha
jge
mov
mov
jo
and
pusha
pusha
jmp
popa
idivl
dec
fsts
cwtl
pusha
sub
enter
dec
or
mov
mov
outsl
ret
and
gs
in
out
add
mov
push
test
mov
enter
push
pop
xor
jmp
adc
aam
jnp
lods
inc
and
ret
shlb
not
and
loopne
pop
cmc
lret
mov
addb
inc
adcb
mov
mov
push
jmp
cmpsb
inc
pusha
pop
jp
in
nop
mov
or
and
andb
sub
loopne
loopne
xchg
and
mov
jns
xor
jge
sti
negl
ret
mov
outsb
repz
sbb
dec
mov
sbb
dec
lock
and
loopne
lea
and
pop
mov
cmp
mov
lret
mov
mov
sbb
lahf
lods
addb
adc
push
xchg
mov
outsb
push
dec
inc
cltd
rclb
sbb
push
jl
roll
add
cli
sbb
call
sub
pop
andl
add
js
push
pusha
cmpb
sub
rcrb
popa
mov
add
inc
ja
mov
mov
jnp
add
push
dec
push
rol
cli
push
sub
popf
dec
or
sbbb
addb
xchg
loopne
sbb
daa
rcrl
jb
rcl
or
mov
loopne
icebp
in
xchg
pop
scas
andb
jnp
movb
and
sbb
les
xchg
push
inc
mov
inc
dec
addb
mov
jae
push
lcall
inc
jns
stc
pop
sbb
inc
mov
mov
sub
mov
adc
mov
and
mov
fdivl
es
sub
cmp
adc
adc
movsb
andb
loopne
inc
jp
ja
andb
aaa
in
shlb
pusha
inc
xchg
test
and
cmc
arpl
or
rcr
adc
xlat
add
fldcw
add
jb
inc
adcb
pusha
sbbb
jmp
pop
cwtl
inc
push
jne
fs
mov
and
sub
cld
fmuls
loopne
iret
add
mov
cmc
addr16
mov
shll
and
mov
mov
rorb
mov
pusha
orb
fmul
cli
imul
pusha
shlb
and
xchg
into
mov
fldt
inc
mov
inc
cltd
into
jbe
mov
jb
pop
cmp
push
mov
jge
add
xchg
mov
push
pop
lret
ret
jl
divb
sub
jg
orl
and
stc
fstps
test
rclb
dec
ret
cld
in
outsl
and
adc
sarb
pop
mov
loopne
xor
imul
aaa
adc
sti
jmp
loopne
jmp
xchg
and
jp
inc
xchg
inc
pop
es
loopne
push
arpl
addr16
data16
and
add
sub
andb
es
mov
sbb
push
and
sbb
mov
fwait
add
sar
inc
data16
das
mov
cmpsb
inc
pusha
dec
bound
mov
stos
addr16
push
mov
cli
movsl
ja
loopne
mov
cmp
imul
andb
lds
loopne
out
lcall
push
adc
lods
pop
mov
pop
xor
fnstsw
mov
movb
add
inc
inc
cmpsb
andb
mov
clc
stos
imul
insb
xor
jecxz
ds
and
push
js
js
cmpl
addb
or
testl
adc
rorb
loopne
or
cmp
shlb
mov
pusha
out
pop
dec
dec
mov
xor
fisubl
and
xor
mov
cmpsb
loopne
adc
pusha
loopne
into
add
lods
loopne
cmp
mov
andb
outsb
adc
mov
cmp
fcomps
call
cmp
sbb
inc
inc
mov
pop
loop
push
add
inc
loopne
cmp
xorb
inc
loopne
mov
xchg
mov
pusha
loopne
and
inc
mov
mov
pop
sub
rcrb
dec
dec
fcoms
push
shlb
push
xor
jecxz
pusha
and
xlat
and
lahf
sbb
neg
mov
mov
out
psubq
shlb
movsb
loopne
jecxz
lret
xchg
negb
sub
ja
and
popf
addr16
movsl
and
andb
sbb
fs
cmpsl
andb
ret
xchg
push
add
orb
out
xor
and
repz
hlt
and
and
inc
cmpb
jno
push
fidivrl
addb
std
mov
push
arpl
aad
sbb
jnp
in
mov
addb
in
iret
rorb
sbb
inc
rcl
test
sar
xor
xor
jle
loopne
shlb
xor
mov
add
decb
push
idiv
int
jno
in
loopne
cmp
sbb
xlat
mov
andb
jne
fisttpll
lods
jno
dec
jg
push
add
pushf
adc
push
inc
inc
pop
out
leave
dec
add
push
rcll
mov
adc
inc
pop
iret
xor
jp
shlb
push
and
loopne
and
xchg
xor
sahf
xor
ss
je
dec
and
mov
std
push
fst
and
scas
mov
inc
xchg
arpl
mov
cmp
stos
aas
nop
mov
addb
xchg
iret
push
sbb
stos
and
inc
in
loop
or
inc
sub
test
and
shl
sahf
mov
fs
int
cmpsl
mov
push
scas
adc
add
scas
loopne
dec
shrb
mov
shlb
mov
addb
sub
xchg
pop
andb
and
andb
inc
aas
scas
andb
mov
cwtl
mov
lret
lcall
jmp
mov
fmul
fs
sub
mov
xchg
adc
adc
test
imul
jle
popa
ja
xchg
pop
movsb
inc
xorb
aas
push
insb
test
push
addb
mov
push
mov
add
adc
andb
jo
lret
fbstp
out
xor
mov
jmp
and
sbb
addr16
lret
xchg
dec
out
xor
cmp
xchg
jnp
fists
mov
pusha
enter
or
not
jae
rolb
insl
cwtl
dec
lock
xchg
aad
mov
out
sbb
and
rol
jl
or
lea
xchg
mov
cmp
bound
loopne
scas
sbb
stc
das
xchg
loopne
jecxz
inc
lea
arpl
dec
and
fidivrs
loopne
cmp
jecxz
lods
mov
pusha
loopne
sahf
or
pop
call
and
sarl
mov
addb
gs
pop
pop
mov
cmc
pop
add
aad
testl
pop
push
xlat
rcl
xor
in
pop
test
inc
imull
call
xchg
cmp
sub
pusha
aas
loope
loop
dec
arpl
and
pusha
ss
addb
push
int
mov
orb
sub
mov
or
and
inc
stc
test
loopne
xlat
repnz
testb
mov
jg
rorb
scas
add
mov
lea
lret
addb
fildll
add
jp
popl
pusha
mov
int
and
mov
iret
dec
jp
test
mov
ja
jno
xchg
imul
mov
hlt
pusha
adc
dec
popf
mov
clc
pop
ficoml
mov
adc
sub
sarb
mov
into
sbb
sahf
xor
pusha
loopne
mov
rclb
mov
add
jg
xchg
mov
push
loopne
pop
gs
and
aad
sub
loopne
cmp
and
or
add
xchg
cmpsl
out
mov
lahf
fisubl
pusha
add
xchg
arpl
push
add
fdivs
das
pop
or
mov
and
xor
test
mov
mov
xor
popf
sbb
cli
pop
jbe
loop
dec
sbb
cmp
pusha
mov
xor
jno
aam
inc
push
lret
loope
or
daa
pop
push
inc
inc
pop
outsl
int
iret
ja
fwait
leave
lds
outsb
dec
aad
pusha
mov
adc
adc
loopne
rorb
out
js
and
dec
add
pusha
bound
inc
pusha
cmp
cmp
cld
sbb
ss
mov
imul
inc
add
rolb
sub
orl
movnti
cmp
cld
daa
lret
test
out
loop
gs
sti
adc
xchg
jae
xchg
ret
loop
and
sub
and
inc
pop
adc
lods
std
mov
xchg
pop
jne
addb
sti
cli
cli
je
insb
jae
imul
sbb
loope
pop
mov
and
dec
and
mov
inc
add
pop
stos
cmp
push
mov
jb
movsb
addb
pusha
and
xor
loopne
mov
dec
lret
and
rcrb
cmpb
xchg
or
or
scas
pusha
mov
mov
aas
xor
movsl
jmp
mov
mov
pop
mov
jnp
ljmp
aaa
push
push
inc
mov
mov
push
pushf
xchg
sbb
jmp
in
and
add
dec
loopne
push
inc
and
int3
push
popa
fmull
nop
in
int
jbe
push
adc
inc
shll
movsb
shlb
pusha
and
scas
pusha
add
jecxz
inc
and
mov
or
pop
push
popa
icebp
inc
xchg
and
or
adc
mov
scas
and
jecxz
out
cmpsb
inc
xorb
mov
movsb
add
mov
rorl
scas
add
add
sarb
xor
jp
adc
jno
inc
xor
cmc
loope
cmp
push
mov
mov
and
stos
add
jno
and
cmpsl
adc
mov
sub
push
loopne
mov
ljmp
or
dec
adc
out
nop
dec
mov
std
dec
loope
dec
stos
jl
mul
dec
sbb
stos
addr16
push
rol
push
stc
mov
push
fildll
add
or
leave
scas
fsubrs
pusha
xchg
cltd
arpl
or
inc
jp
and
je
xchg
mov
pop
cmovs
or
sbbb
repz
cmp
inc
xorl
push
and
and
scas
loopne
mov
fs
inc
aas
push
pop
mov
arpl
mov
mov
cmc
or
jbe
loope
xor
stos
loopne
add
inc
cli
mov
inc
mov
outsb
mov
inc
movsb
loopne
xor
mov
add
js
xlat
mov
add
addb
mov
fimull
push
push
insb
insl
stc
leave
mov
add
adc
push
inc
icebp
aas
jno
sti
jnp
add
enter
or
add
mov
das
push
pusha
rorb
pusha
add
out
sub
adc
xor
mov
sarb
ja
inc
inc
xchg
jne
notl
sub
and
loopne
ds
inc
pusha
add
and
pop
dec
xor
dec
repnz
mov
or
ret
aam
es
add
mov
cmp
mov
pop
jge
mov
in
lods
and
xchg
fsubrs
mov
into
cwtl
jp
pusha
cmp
jl
shl
sbb
imul
adc
pop
xlat
xlat
stc
push
mov
inc
int3
mov
subl
add
scas
scas
addb
shl
sub
rorb
arpl
pop
adc
pusha
sub
loopne
mov
add
pop
rorb
int3
lods
add
push
out
imul
mov
pusha
sub
pusha
cmp
jecxz
subps
andb
inc
insl
aam
lret
xchg
shlb
push
pop
sub
shl
mov
and
inc
shr
add
add
imul
bound
cmpsb
loopne
push
daa
arpl
and
loopne,pn
in
or
dec
iret
stos
and
in
jl
scas
sbb
add
das
push
stc
add
adc
adc
and
cmp
cmp
int
es
sub
mov
cs
negb
addb
and
jmp
daa
ljmp
xor
and
mov
and
in
xchg
dec
adc
out
lods
addb
and
mov
pop
cmpsb
and
push
mov
stc
loop
enter
out
ds
lds
lcall
and
add
add
push
and
push
shlb
test
outsl
sbb
dec
stos
pushf
mov
and
out
out
shlb
xchg
mov
in
mov
scas
sbb
dec
push
ja
mov
xor
cwtl
iret
xchg
sub
pusha
push
inc
popa
pop
xor
inc
pusha
cmp
and
repz
imul
mov
test
loopne
mov
repz
loopne
andb
adc
pusha
xlat
pop
pop
dec
lahf
ret
pusha
sbb
sub
outsl
cmp
dec
xor
movsl
inc
mov
int3
xor
xor
inc
shl
out
repz
shlb
sub
addl
pop
pushf
adc
mov
and
mov
cmp
pop
sbb
sub
inc
sub
add
into
rcrb
bound
mov
inc
xchg
movsl
dec
mov
repz
mov
movsb
shlb
enter
loopne
push
push
lds
xor
lds
sti
jns
lret
imull
push
adc
and
xor
adc
icebp
xchg
mov
scas
sbb
add
cmp
push
and
in
add
sahf
not
hlt
lret
and
xchg
push
jmp
fcmovb
adc
and
icebp
xor
sbbl
pop
inc
push
cmp
mul
add
pusha
and
shlb
data16
shlb
or
and
enter
mov
filds
cmp
outsl
cmpsb
pusha
add
pusha
cmp
mov
mov
xchg
aaa
xchg
mov
or
push
js
lahf
mov
loopne
adc
subl
mov
out
add
add
pusha
pusha
and
push
andb
int
xor
and
jno
fsubs
test
shlb
cmpsb
add
add
sti
pop
mov
add
pusha
shl
xor
aam
js
in
xor
push
lods
addb
jg
mov
stc
popf
cmp
or
sarl
add
pop
in
repz
adc
gs
dec
mov
lcall
je
mov
mov
jb
add
loop
idivl
outsb
inc
hlt
sub
sbb
or
and
rolb
cmp
dec
dec
adc
push
outsb
mov
repz
lcall
dec
mov
rolb
or
and
xchg
and
inc
fidivs
cmc
dec
adc
xchg
mov
xchg
sarb
jecxz
pop
xor
mov
inc
xlat
lods
mov
jl
xor
jmp
jp
add
mov
push
pusha
add
rcr
in
add
dec
imul
es
push
and
ret
aas
and
sub
dec
pop
dec
pushf
and
add
stos
addb
test
add
mov
cmp
xor
test
pop
call
addb
mov
jbe
pusha
add
or
inc
gs
ficomps
and
test
int3
inc
cmp
cmpsl
xchg
and
adc
lods
pop
mov
fstl
aaa
pop
push
rolb
sub
mov
push
sahf
cmp
push
and
es
xacquire
addb
sub
mov
mov
and
add
ja
add
add
loopne
sbb
loopne
inc
loopne
insl
jp
xchg
sbb
cmpl
adc
out
mov
orl
push
mov
add
add
jb
jmp
and
mov
xor
shlb
test
mov
and
add
lahf
push
sbb
mov
and
and
cmpsb
pusha
pusha
push
add
addb
outsl
loope
pop
xor
mov
push
xor
faddp
sti
gs
hlt
insb
arpl
loop
mov
push
in
aaa
dec
aas
sub
sbb
pushf
push
and
int
cmc
xchg
lods
add
ficompl
adc
lret
sbb
dec
or
pop
repz
push
jnp
mov
repz
xchg
arpl
pop
mov
add
cmp
lods
addb
mov
push
sbb
sub
inc
rolb
mov
pop
mov
loopne
sbb
mov
inc
fistps
mov
pusha
and
loopne
pop
pushf
roll
stos
pusha
and
mov
mov
inc
mov
aam
in
sbb
adc
rol
repz
pop
mov
jne
aam
mov
andb
lret
or
pusha
rcrb
inc
cmp
inc
loopne
mov
inc
std
sub
inc
mov
dec
inc
rcrb
ljmp
add
pop
cmp
add
cwtl
add
popa
and
add
inc
loopne
cltd
cmp
push
or
sbbb
jle
rol
inc
inc
enter
push
adc
cmp
ja
xchg
jbe
xchg
shlb
outsb
sbb
or
mov
int3
pop
bound
mov
lds
and
pop
aaa
shrl
jg
imul
xchg
rclb
and
add
mov
repnz
cmp
pusha
and
out
hlt
push
in
out
and
clc
addb
loopne
loopne
adc
pop
insb
fsubrl
mov
mov
aad
xchg
jbe
inc
cmp
cld
push
fidivs
push
push
push
add
int3
push
mulb
dec
dec
pop
sub
xor
mulb
and
loopne
push
sar
rol
test
ficomps
xchg
push
cmpsb
and
loop
cli
es
pop
stos
pusha
mov
push
mov
imul
addb
push
jl
movsb
pusha
and
sbb
mov
mov
xchg
pop
add
into
dec
jno
cmp
rol
sbb
loopne
movsb
rolb
das
mov
std
or
xchg
outsl
aas
out
or
inc
pusha
or
cmp
push
ret
and
sbb
jb
fst
lret
outsl
pop
and
into
test
jo
movupd
and
and
mov
push
cmpsb
addb
push
scas
loopne
stc
xor
ja
aaa
mov
and
inc
jecxz
fsubl
and
sub
sub
adc
push
mov
loopne
pusha
pusha
in
loop
aad
and
pop
add
and
inc
inc
push
stc
stos
mov
leave
jge
in
enter
pop
dec
insb
mov
xchg
dec
aaa
push
dec
dec
pop
popa
or
jne
pusha
rolb
pop
fucomi
or
jb
xchg
das
push
dec
iret
addb
bnd
and
pop
adc
stos
mov
mov
mov
pop
icebp
ja
aam
adc
add
xor
pusha
and
or
popa
xchg
out
jae
add
shr
add
sar
rcrl
outsb
out
mov
push
out
mov
pop
stos
pop
inc
mov
inc
insl
inc
jo
rcrb
lea
sub
inc
sub
loopne
mov
pusha
dec
mov
inc
xlat
cmpsl
sbb
and
pusha
lds
shrb
out
and
push
mov
mov
fstpl
sbb
addb
cli
into
and
mov
jnp
pusha
add
divl
aas
adc
cli
pop
pop
lds
and
cli
lret
pop
cmp
leave
or
loopne
ror
inc
shrb
arpl
cwtl
or
or
loopne
jno
lret
lret
mov
xchg
sub
pusha
gs
adc
outsl
cmp
push
insl
stos
shlb
pop
fnstcw
pop
push
jecxz
sbb
and
mov
addb
scas
notl
je
shll
leave
aad
jecxz
adc
pusha
rcr
repnz
inc
mov
pusha
pop
cltd
stc
cmp
jae
xor
pusha
push
mov
sar
mov
cmp
aaa
sbb
add
xlat
add
or
xchg
mov
mov
jae
cmp
pusha
inc
in
push
push
inc
mov
mov
imul
enter
jae
mov
sbb
cmp
adc
add
add
sub
mov
stc
dec
call
xchg
prefetch
pusha
loopne
push
push
pusha
mov
add
and
pop
pop
sti
xor
inc
ret
ds
mov
adc
xorl
shlb
dec
shlb
mov
inc
into
jle
loopne
cltd
push
jae
sub
add
out
insl
mov
aad
inc
pop
adc
cmpsl
push
jae
sahf
push
out
fisubl
pop
mov
xchg
into
inc
ljmp
cmc
adcl
fisubrl
and
mov
sbbb
and
push
rolb
pop
mov
loopne
loopne
les
loopne
push
in
adc
fistpl
out
inc
int
stc
dec
xchg
outsb
push
outsl
call
inc
loopne
add
mov
push
scas
rolb
push
or
loopne
shl
addb
pop
inc
push
es
add
dec
jo
inc
pop
cmp
pop
mov
sbb
adc
sbb
mov
mov
repz
lret
loop
ja
ret
lahf
and
test
cmp
je
lods
rolb
ds
jp
jmp
int
or
inc
rolb
rcr
push
sti
mov
jge
xchg
and
add
cmpsl
test
add
add
mov
movsl
mull
xlat
mov
and
dec
arpl
pop
negb
hlt
cli
outsl
cld
shlb
jne
jno
adc
xchg
or
pop
mov
aad
lods
inc
add
pusha
pusha
loope
cmp
sbb
ja
cltd
jecxz
icebp
cmp
jl
dec
jecxz
imul
xchg
out
adc
in
cmp
movsl
mov
outsb
jmp
inc
pop
int3
xor
divb
insb
mov
add
cmp
arpl
pop
aaa
jle
shlb
push
outsl
push
rcrb
add
loopne
stc
or
dec
cmp
mov
pop
and
iret
or
push
pusha
inc
insb
cltd
rolb
mov
and
imul
inc
mov
daa
pop
mov
mov
mov
inc
jg
shll
mov
out
cmp
inc
pusha
gs
test
mov
pop
decb
xorl
sahf
lcall
push
push
fwait
push
test
mov
aas
outsl
jmp
adc
addb
mov
stos
mov
fsubrs
sbb
push
inc
mov
xchg
mov
sbb
popf
nop
loope
test
push
fstps
mov
push
pop
pop
sub
add
hlt
adc
xchg
sbb
mov
pusha
leave
adc
inc
ss
mov
and
push
xchg
jp
and
or
mov
lock
pusha
ljmp
test
mov
and
int
jo
repnz
jle
aas
mov
imul
push
in
and
pusha
inc
sub
pusha
andb
and
ljmp
jge
ljmp
imul
add
std
add
cmc
scas
add
or
inc
adc
add
rolb
push
mov
pusha
in
mov
subb
jne
sbb
jns
inc
adcb
lret
adc
pop
scas
mov
enter
adc
inc
fs
push
addb
lods
rolb
and
push
sbb
cmp
aad
out
lret
fwait
daa
mov
scas
inc
rolb
fidivs
mov
loopne
test
adcb
rcrb
push
xchg
inc
pop
cs
loopne
mov
mov
push
cmp
inc
nop
mov
fwait
xlat
pushf
jnp
pusha
add
ret
fs
arpl
pusha
outsb
push
shlb
ds
mov
mov
test
cld
cmpsb
inc
add
mov
mov
mov
hlt
into
daa
sub
add
imul
mov
ds
pusha
sub
shl
mov
inc
push
push
mov
bound
pop
dec
adcl
mov
and
rcrb
lcall
xor
xchg
fisttpl
andb
add
pop
sub
leave
sarl
jecxz
gs
test
add
fldenv
mov
mov
push
cmc
dec
fsubrp
scas
mov
imul
xchg
test
pusha
sbb
icebp
mov
jge
dec
cmpsb
loopne
rep
mov
jbe
lock
jge
fldcw
rolb
arpl
stos
out
daa
call
nop
cmpsb
and
push
add
nop
sbb
mov
or
xlat
xchg
add
ljmp
aas
pop
xchg
xor
add
loopne
mov
je
push
mov
xchg
movsb
pusha
pusha
cltd
in
sbb
and
pusha
out
into
cmc
and
jle
dec
test
fdivrs
jne
push
pop
inc
push
mov
pop
pop
mul
sub
mov
loopne
push
xchg
mov
mov
xorb
loopne
movsl
icebp
enter
or
rcr
cli
iret
mov
add
sbb
pushf
mov
jne
lock
cmp
ds
enter
cmp
movsb
addb
mov
addb
imul
cmpsl
out
cs
loopne
shlb
and
dec
js
loopne
sub
sbbb
xchg
mov
mov
and
arpl
dec
mov
or
lods
dec
stc
into
cmp
adc
dec
test
and
adc
add
and
mov
ret
scas
fcmove
and
loopne
and
lods
mov
adc
sub
rol
mov
ljmp
push
mov
adc
js
add
incl
add
sbb
dec
mov
outsb
pop
pop
sbb
cld
push
mov
pushf
push
repz
adc
addb
mov
outsl
inc
lea
pusha
push
pusha
add
sbbb
add
std
les
addb
inc
add
test
dec
and
mov
popa
pop
sbb
inc
cwtl
mov
inc
and
add
mov
rclb
cmp
mov
lcall
icebp
bound
loopne
or
xchg
xchg
inc
gs
pusha
inc
adc
inc
pop
mov
mov
mov
cmp
dec
inc
mov
and
lds
jnp
mov
xor
add
and
arpl
imul
and
mov
test
addb
daa
lds
jg
lods
inc
sbb
rcr
test
leave
dec
int3
xor
pop
pop
pop
xchg
out
mov
adc
pusha
mov
lock
pop
lods
loopne
jo
icebp
push
leave
mov
ja
fstpt
and
repz
or
sub
add
xchg
loopne
in
and
adc
and
xchg
je
fs
push
and
add
insl
pop
add
mov
cmp
jo
addb
inc
insb
test
cmp
stc
cs
inc
scas
add
mov
sub
mov
inc
rcrb
lcall
fsub
call
test
loopne
out
cmp
leave
xlat
jbe
mov
pusha
push
fldenv
sbb
dec
mov
dec
add
jmp
test
addb
stos
dec
sbb
mov
dec
aaa
sub
sub
pusha
mov
pop
mov
and
sbb
cmp
incl
sub
inc
fstpl
aaa
aas
pop
mov
and
sarb
mov
ss
or
shlb
mov
into
std
cltd
pop
push
repz
addb
and
mov
or
sbb
cs
pusha
mov
nop
pop
ljmp
cltd
pushf
test
clc
popf
notb
sarb
and
and
rorl
mov
jg
mov
inc
and
xor
outsl
in
into
xchg
pusha
add
push
cli
test
add
push
fsubrl
xor
jmp
sar
adc
mov
addb
xchg
testl
lods
fistpl
stos
addb
xlat
cmp
aad
sahf
xchg
call
aas
mov
xchg
sub
xor
aam
scas
pusha
loopne
jle
mov
aas
stc
scas
add
pop
in
fnstenv
lret
lods
rolb
jge
cltd
add
loopne
sbb
in
jae
ss
push
pusha
rcrb
adc
push
leave
add
sahf
shrb
andb
inc
out
mov
addb
int3
pop
lret
mov
jb
push
sbb
mov
inc
rcrl
inc
push
sbb
pop
fsubr
push
loop
push
and
inc
pop
mov
movsl
cmp
mov
divl
sbb
fidivrs
ret
jb
cmp
xor
mov
fisubrs
andb
inc
notb
in
rol
and
notb
mov
nop
outsb
stos
mov
jp
sahf
daa
clc
negl
in
iret
sub
fbld
and
jo
cmp
add
out
int
js
sub
shlb
cmc
enter
shlb
inc
add
mov
inc
mov
sbb
push
les
loope
imul
sub
push
inc
mov
imul
mov
bound
cmc
insl
cmp
and
fsubl
rorl
rcrb
push
adc
js
call
mov
out
sub
sbb
and
xor
xor
pop
pusha
fidivrl
lods
mov
movsl
cmpsb
rolb
xchg
adc
aaa
test
stc
lods
pop
mov
and
xor
mov
and
cld
jmp
add
movsb
add
les
pop
or
cmpb
jae
movsb
loopne
in
mov
pusha
or
jp
in
and
pusha
lds
push
sbb
jae
and
inc
mov
rolb
mov
popa
outsb
push
pop
sar
cld
stos
cltd
sub
loopne
rolb
sti
aad
fbld
test
fcoms
mov
and
xchg
int
int3
test
inc
sbb
daa
fwait
and
shlb
xor
mov
rol
adc
ficoml
and
loopne
sbb
daa
into
clc
jge
cmpsb
add
mov
lahf
sub
fistps
adc
inc
inc
into
cmp
sarl
das
cltd
push
push
mov
jns
add
data16
mov
loopne
cmp
and
mov
in
or
xchg
sbb
int3
add
sbb
in
sbb
and
into
cs
loopne
inc
pusha
mov
xchg
ljmp
mov
cmp
cmp
arpl
mov
loopne
pusha
and
fildl
mov
dec
stos
in
les
andb
pop
add
add
ret
push
add
cmp
and
xor
dec
and
pusha
mov
fists
xchg
fs
sti
mov
addb
pusha
loopne
jg
add
aas
mov
leave
cmp
jae
hlt
sbb
pop
sbb
pop
pop
mov
stos
add
push
out
add
testb
cwtl
pop
push
outsl
jp
fbld
sbb
repnz
sarl
and
loopne
or
loopne
xor
insb
aam
dec
cld
stos
test
movsb
pusha
mov
ja
cmp
mov
fs
add
sbb
jae
mov
jo
shl
out
outsb
repnz
addr16
loopne
and
and
cmp
lods
pusha
inc
push
push
inc
lret
inc
movsl
movsb
add
inc
rcrl
push
add
imul
rolb
cmp
imul
stos
orl
and
int
inc
pop
push
inc
andb
sarb
fwait
lret
and
mov
and
andb
ror
in
sub
into
xor
sub
arpl
cli
sub
pusha
xchg
cmpl
jae
sti
cmc
scas
mov
andb
jbe
xor
sub
add
aam
pop
je
hlt
mov
cmpsb
shlb
loopne
xchg
lret
enter
mov
dec
hlt
dec
mov
in
std
or
jbe
into
inc
and
push
sub
and
repz
mov
add
and
loopne
push
mov
popf
aaa
fisubs
sub
loopne
test
mov
andb
ljmp
pushf
stos
loopne
and
shl
inc
inc
insl
and
cmpsl
repz
push
not
xlat
ficoml
pop
adc
pop
push
add
or
pop
dec
dec
adc
lret
cmp
push
and
pusha
cmp
push
add
divb
and
mov
sub
and
in
rcrb
cmpsl
repz
inc
into
mov
shlb
mov
push
shlb
inc
pop
xchg
in
mov
adc
jmp
scas
aas
call
cmp
adc
pusha
pusha
adc
xor
loopne
inc
jb
lahf
das
add
mov
rol
dec
rorb
or
cmp
mov
sar
out
les
and
test
mov
addb
sbb
mov
mov
roll
adc
jmp
adc
or
and
cmpsb
pusha
orb
ds
xor
fmuls
or
xlat
push
adc
mov
cmp
test
add
loopne
cmp
out
pop
dec
mov
loopne
lods
fcomp
pop
pop
mov
invd
add
fld
push
int
rolb
enter
in
and
movsl
lds
loop
mov
cmpb
shlb
clc
xchg
pop
or
shrb
fistl
add
addb
dec
mov
outsl
ss
push
pop
jno
ja
jge
sti
push
add
mov
pop
scas
cmc
pop
push
pop
je
dec
les
mov
ja
pusha
int
pusha
add
imul
loopne
cmp
dec
ficomps
sub
mov
inc
les
and
mov
add
les
cli
xchg
rorb
mov
mov
mov
addb
sahf
or
push
shlb
or
inc
fcmovnu
idivb
leave
and
mov
sbb
ror
cld
mov
jae
jae
pop
mul
leave
shrb
les
movsb
add
and
add
or
cltd
test
mov
xchg
cmpsb
loopne
daa
mov
dec
je
inc
xchg
stos
addb
loope
out
rolb
pop
rclb
adc
mov
and
pusha
sarb
int
mull
aaa
je
je
sti
sbb
adc
js
cmp
sbb
add
ljmp
scas
sti
cmp
addl
movsl
clc
pop
in
pop
stos
jl
call
pop
pop
inc
int3
push
mov
push
daa
dec
add
push
inc
xorb
and
pusha
cmpsl
lock
sub
loopne
mov
push
fstps
pop
cmp
fstp
jbe
dec
pop
loope
jl
mov
lcall
adcb
shl
or
xchg
clc
cmp
fstpl
pop
pop
adc
add
dec
dec
jecxz
scas
pop
dec
push
and
out
add
leave
sub
stc
lods
data16
les
mov
jecxz
insb
loope
pop
xor
pusha
and
mov
fidivs
pusha
cmp
mov
mov
fwait
js
pushl
push
loopne
lods
mov
mov
icebp
lahf
push
loopne
hlt
fwait
mov
dec
movsb
mov
push
loopne
push
loopne
int3
and
add
push
dec
mov
add
das
cltd
fcompl
pusha
daa
dec
sbb
and
mov
scas
and
std
aaa
jge
rorl
mov
inc
loopne
ja
pop
ret
sbb
or
add
add
cld
mov
arpl
lods
adc
out
enter
mov
fadds
arpl
push
aas
jmp
cmp
or
ret
fucom
xor
mov
fwait
test
rol
aas
mov
fstpt
mov
mov
dec
addb
rol
pop
push
jecxz
fdivp
mov
ja
shlb
xor
clc
xchg
out
loopne
jnp
fadd
insb
jl
mov
ljmp
inc
pop
rcr
xchg
lahf
jns
call
ret
into
jb
dec
jns
divb
inc
lds
pushf
push
stos
imul
shrb
aas
cmp
vpaddusb
cli
sub
pusha
rolb
and
aam
in
and
sbbb
mov
int3
push
imul
gs
shlb
outsb
xchg
in
mov
push
pusha
mov
iret
jne
fstpl
push
lret
mov
nop
mov
adc
or
pusha
stos
jecxz
jmp
inc
testl
sbb
shlb
jb
cmp
add
add
and
add
aad
loopne
or
add
mov
std
mov
loopne
es
mov
and
add
add
jne
cmpl
loopne
xchg
sub
adc
dec
fwait
mov
push
xchg
insl
inc
shlb
xchg
jbe
fistpll
mov
adc
insb
xchg
xchg
mov
shll
aam
popf
add
pusha
mov
and
addb
jnp
xchg
mov
xcrypt-cfb
cmpsl
bound
pop
fdivs
mov
lret
mov
pop
fisttps
adc
cld
pop
cmp
out
movsb
andb
sub
rorb
rolb
adc
pop
outsb
mov
push
push
push
cwtl
test
out
and
loopne
xor
xlat
pop
aam
test
addb
adc
push
stc
into
std
fstpt
xor
int3
and
sbb
xor
sbbl
xchg
fistpl
loope
cli
inc
leave
ficoms
scas
push
and
sbbl
mov
mov
mov
push
lods
data16
mov
and
mov
mov
test
and
jo
pop
or
insl
mov
or
mov
cmp
and
movsb
and
jg
adc
push
loopne
fcoms
aas
jp
cltd
pop
sub
and
mov
mov
dec
add
shrb
mov
mov
xchg
xor
and
fstpl
pop
pop
imul
pop
lea
loopne
push
mov
loopnew
shlb
adc
cmpsl
sbb
outsb
xor
inc
pop
out
dec
dec
sti
cmpsl
mov
cltd
aas
fldcw
jl
call
shl
scas
addb
cli
sub
mov
mov
pusha
adc
mov
cmpsb
add
and
pusha
and
in
or
fcmove
xor
fisubrs
gs
mov
push
xor
fsubs
loopne
push
and
aam
pushf
dec
mov
pop
sbb
dec
mov
and
rcrb
sub
iret
sub
and
mov
pop
lret
pcmpeqw
out
shlb
mov
pusha
test
inc
clc
xor
roll
mov
sub
lret
add
pop
lcall
lcall
push
mov
loopne
lock
sbb
test
and
loopne
aas
repnz
pop
mov
jns
mov
cmp
push
or
adc
call
pusha
and
push
add
dec
adc
ret
inc
or
xchg
aad
fcom
popf
and
mov
test
addb
or
xor
stos
jbe
out
testb
loopne
push
pushf
das
xor
iret
movsb
pusha
shr
fs
insl
xchg
fdivrl
xor
jns
rolb
test
pusha
out
and
call
in
push
xchg
cltd
or
sarb
fsubr
adc
addr16
rclb
pop
mov
lods
loopne
jns
gs
imul
jmp
dec
sbb
pusha
movsb
loopne
xlat
xor
pop
add
and
sbb
mov
sbb
mov
incb
add
int3
cmp
fwait
xor
test
sahf
cmp
repz
nop
dec
cmpl
js
inc
pusha
mov
sbb
adc
add
mov
inc
and
push
sub
loopne
dec
imul
mov
mov
xlat
push
mov
rolb
in
sarb
test
mov
popf
andb
lcall
pusha
push
xchg
dec
mul
out
mov
inc
mov
repnz
and
mov
adc
mov
insl
add
sbb
add
enter
or
addr16
loopne
lret
push
stos
add
and
in
loopne
or
jmp
pusha
pusha
aad
xorl
lock
cltd
pushf
lods
shlb
mov
inc
pop
mov
testb
pusha
addb
cmp
cltd
lods
add
lret
stos
push
sarb
mov
cmp
or
pop
shrb
std
lods
pop
mov
dec
and
mov
mov
and
ficoms
lret
mov
sub
inc
pop
and
inc
jl
xchg
mov
inc
mov
shl
fs
mov
mov
loopne
xchg
push
mov
dec
cmpsl
inc
loopne
add
pop
push
setno
shlb
and
pop
enter
stos
and
mov
jl
jae
nop
lahf
jb
and
and
inc
mov
inc
sbb
and
sub
rcrb
jle
pop
push
inc
xchg
add
icebp
push
mov
iret
stos
push
add
into
mov
adc
movsb
add
sbb
xor
mov
pusha
pusha
adc
fs
dec
dec
jae
mov
lahf
xor
fs
push
ficomps
push
sarl
push
mov
test
adc
cmp
mov
add
mov
cmp
sbb
data16
xor
hlt
daa
sbb
jge
add
in
jae
adc
xchg
pusha
aad
stos
dec
mov
push
xchg
mov
dec
xchg
lods
rol
mov
andb
cmc
mov
adcb
mov
call
adc
add
xchg
out
mov
shl
les
xor
cmp
mov
pop
iret
push
mov
xor
pop
adc
mov
pop
mov
ds
inc
push
dec
dec
lcall
mov
add
or
inc
mov
fucomp
mov
shrb
cltd
add
inc
addl
popf
std
cmc
test
add
mov
jb
mov
inc
and
or
xchg
shrl
stos
push
mov
adc
sarb
xor
call
add
pusha
fisubl
sarb
ss
lods
and
add
mov
and
andb
insl
xchg
test
pusha
loopne
push
mov
pusha
mov
lock
inc
inc
sahf
mov
pop
lea
test
inc
or
dec
stc
lea
xchg
or
outsb
or
fdivrs
pop
out
jl
and
xchg
outsl
mov
insl
mov
inc
shl
and
mov
and
dec
jl
lods
pusha
add
test
int
sarb
in
aad
pusha
add
push
push
nop
xor
stc
cmp
sbb
pop
push
out
std
imul
lcall
dec
shl
js
mov
ljmp
dec
sub
push
es
imul
test
sub
loopne
sbb
xor
xchg
push
mov
into
push
inc
shlb
and
out
cli
xorl
lds
push
xchg
sub
xorb
mov
pusha
cmp
rcrb
sbb
mov
push
pop
in
pusha
pusha
outsl
int3
xor
inc
pop
add
in
add
loopne
mov
in
adc
int
push
gs
in
xor
adc
and
subb
shlb
repnz
add
rolb
cmp
inc
pop
imul
xchg
xchg
loopne
inc
add
add
clc
cmp
lea
shld
shr
cmp
cli
push
hlt
push
test
inc
jge
std
arpl
sbb
das
andb
aam
inc
rcrb
add
pusha
mov
jmp
addb
jbe
mov
sbb
nop
lret
cmp
and
lahf
and
rcrb
sub
std
xor
loopne
sub
inc
or
inc
movsb
shlb
dec
fstl
add
and
and
push
call
push
pushf
stos
add
cmp
push
imul
rcr
in
sub
sbbl
ss
inc
push
shlb
aad
int
pop
loop
lahf
je
pushl
add
ss
adc
lea
lds
orb
out
and
andb
mov
and
mov
fucomip
test
rcrl
push
test
inc
leave
es
sbbb
pusha
sti
pop
jle
adc
xchg
push
lock
fbld
ljmp
and
pop
lahf
sahf
lea
dec
mov
shl
add
outsl
rolb
pop
cmpl
pop
mov
push
adc
mov
mov
fs
add
enter
ret
shl
scas
fimull
in
in
adc
mov
or
lds
push
sbb
addl
jle
xor
add
inc
iret
je
jo
inc
and
shlb
jmp
and
bound
dec
mov
xor
cmp
fcoml
jmp
loop
jo
inc
loopne
add
adc
xor
adc
fdivs
arpl
push
loopne
aaa
icebp
mov
pusha
mov
fisubrs
fwait
leave
xor
sbb
mov
and
loopne
and
jecxz
into
lock
and
outsl
aad
leave
add
add
sbbb
xchg
xor
shrb
push
outsl
mov
add
notl
dec
int
addb
loopne
xchg
push
lods
jle
dec
xlat
cwtl
test
test
test
out
push
ja
inc
loopne
jl
or
mov
mov
adc
mulb
sarl
out
loopne
out
loopne
push
sub
add
push
sbb
mov
ds
daa
mov
cmpsb
rol
inc
lock
xchg
rcrb
test
inc
push
shlb
mov
push
cmc
adc
scas
adc
or
aas
mov
out
sub
loopne
stc
and
dec
jmp
mov
pusha
add
sarb
mov
jl
in
int3
out
cmp
and
rol
pusha
inc
sbb
or
inc
adc
sbb
sub
rolb
jae
out
stos
inc
in
pop
jns
cmp
or
shlb
rorb
pop
xor
jns
add
jae
fwait
mov
push
push
push
inc
das
ss
pop
mov
xchg
mov
insb
fimuls
jo
outsl
or
and
or
aas
xchg
push
andb
addb
subl
pusha
or
pusha
mov
and
jo
and
pusha
lret
cmpsb
add
push
pop
mov
loopne
dec
out
cli
pop
xor
rolb
sti
lahf
jecxz
adc
test
push
fnsave
mov
pop
mov
sahf
loopne
in
into
push
shl
nop
or
and
repnz
sub
pusha
add
add
out
xchg
cwtl
addb
mov
xor
add
andb
or
inc
mov
push
and
filds
add
or
mov
inc
mov
pushl
outsl
shl
loopne
decb
and
mov
mov
addb
and
and
test
pusha
aaa
xchg
inc
jle
inc
xchg
mov
or
push
jmp
push
cli
pop
mov
stc
push
shl
or
es
mov
cmp
push
iret
add
mov
outsl
cwtl
cmp
scas
jge
fcmovb
cmc
pop
popl
stos
mov
into
jle
aam
test
push
xchg
fisubl
and
adc
mov
loopne
fldenv
test
out
mov
mov
add
push
cmp
sub
mov
cmp
adc
sub
mov
lret
jb
or
mov
jge
xchg
mov
or
mov
mull
mov
jbe
cs
loopne
loope
test
mov
scas
shlb
xchg
jb
shlb
ret
test
pop
mov
sbb
or
push
and
out
adc
adc
into
mov
xchg
addb
rcrb
xchg
int
dec
ret
sar
adc
xchg
loopne
leave
xchg
push
xchg
pusha
inc
sarl
ror
data16
pusha
test
loopne
jne
xor
xchg
fcom
cmp
les
fisubl
rorb
add
mov
jae
mov
mov
pusha
lods
loopne
mov
xchg
inc
jge
loop
mov
sbb
push
and
into
lods
and
cmp
or
push
adc
pusha
aas
ficoms
fdivp
addr16
andb
loopne
adc
hlt
stos
mov
aas
mov
push
push
je
popf
cs
rclb
mov
pop
inc
jmp
mov
ret
out
loopne
jb
movsb
mov
and
test
push
enter
jno
shrb
jno
mov
mov
pushf
cwtl
push
and
pop
in
add
and
sbb
pop
inc
ss
add
arpl
out
mov
push
and
and
adc
rolb
mov
data16
mov
rol
jge
mov
xlat
clc
aas
aam
nop
scas
add
push
loopne
xchg
test
add
dec
sub
lods
pusha
and
mov
orb
mov
int3
dec
pop
sbb
mov
es
mov
jnp
loopne
xor
mov
lods
aam
stc
add
xchg
xlat
dec
pop
mov
in
or
addb
andb
sbb
js
add
les
jne
push
xchg
dec
in
gs
pushf
push
jno
dec
push
daa
dec
stos
cmpl
dec
lods
loop
jecxz
lock
lret
jne
outsl
push
call
aas
mov
int
divb
jge
lea
dec
cs
sarb
fisttps
add
sub
xchg
lret
xchg
shl
adc
add
or
pusha
pusha
dec
ss
mov
add
mov
rolb
test
mov
xor
scas
jle
loopne
lret
or
mov
xchg
movsb
add
bnd
divl
shll
loopne
icebp
pop
jb
rclb
push
stos
pusha
add
test
pusha
std
pop
push
dec
outsb
sub
sbb
dec
mov
not
sbb
push
ja
fbld
mov
pop
lds
jae
ret
adc
push
pop
lret
adc
sub
jae
fdivr
insl
mov
addb
push
cmp
mov
nop
movsb
mov
cmp
ljmp
and
rolb
jbe
or
rclb
xor
and
cmp
mov
aad
inc
add
sahf
dec
int3
pop
popf
sub
sbbb
inc
cmp
mov
cltd
inc
cmp
fistps
test
rcrb
mov
push
addb
pusha
inc
push
push
mov
mov
mov
cmp
addr16
adc
sub
loopne
out
loope
inc
notl
outsl
test
mov
inc
loopne
movsl
aam
add
jecxz
mov
rclb
loopne
mov
out
movsb
pusha
cmp
nop
cmp
pusha
adcb
and
loopne
int3
imul
nop
daa
fmull
xchg
mov
in
cmp
inc
mov
cmp
and
mov
loopne
lock
mov
lods
rolb
add
loopne
in
mov
iret
out
mov
ss
push
cwtl
cmp
mov
lret
jns
clc
test
add
pop
pop
fcom
jne
jmp
sbbb
aaa
es
mov
dec
adc
cwtl
push
add
sarb
mov
stos
mov
xchg
sub
rclb
inc
add
je
aam
loopne
mov
push
movsb
mov
inc
mov
out
xor
xchg
bound
jae
daa
push
mov
loop
inc
loopne
mov
mov
leave
mov
mov
cmpb
and
loop
jmp
sub
mov
repz
jne
pusha
pusha
rcrb
sub
add
push
inc
fidivl
cmp
fst
mov
test
jle
and
add
adc
jo
pop
lea
pop
and
adc
ljmp
xchg
lcall
pop
sahf
push
push
rclb
fwait
inc
fcomp
cld
mov
sahf
bound
pop
mov
mov
imulb
jp
stc
aam
rolb
ret
and
jg
cli
mov
stos
sub
mov
mov
lds
jns
stos
add
faddl
mov
aam
fstp
add
pusha
faddl
mov
inc
mov
fs
mov
pusha
add
pusha
shrb
scas
add
add
cld
cmp
jnp
ja
pop
es
mov
cwtl
mov
icebp
xor
sbb
fldenv
xorl
shlb
shl
sub
inc
stc
pop
mov
loopne
xchg
pusha
leave
sbb
sbb
stos
mov
sti
add
lcall
aaa
jbe
jge
mov
add
adc
jge
shl
sub
mov
dec
cmp
mov
rcrb
xor
dec
test
stc
lcall
not
mov
insl
test
xor
sub
inc
xchg
shl
push
shll
sbb
jo
loopne
push
xlat
js
sub
sbb
aaa
mov
aas
insb
jg
sar
add
pop
in
dec
push
int
jno
sub
mov
cli
mov
ja
or
inc
sub
loopne
testb
pop
dec
das
cltd
jo
adc
sbb
popa
jge
mov
bound
mov
and
or
data16
out
outsl
mov
rol
mov
adcb
stc
pop
adc
es
inc
insl
jp
dec
cmp
das
shr
inc
mov
shlb
andb
loope
clc
outsb
leave
popl
and
lcall
shlb
lret
and
addb
xor
test
inc
orb
rclb
push
jge
cld
push
add
sbb
mov
mov
mov
adc
fildl
mov
loopne
mov
jo
insb
push
xchg
iret
mov
sub
mov
loopne
cmp
test
mov
ret
jle
into
nop
lods
inc
shrl
add
inc
shlb
push
loop
jnp
addl
int3
stc
xor
shlb
sub
fisubs
loopne
sub
inc
adc
call
fwait
sbb
xor
add
mov
xchg
incl
push
jbe
xchg
imul
rol
dec
fldt
addb
adc
xor
pusha
sti
dec
aas
push
pop
jns
push
rcrb
fwait
cwtl
fildll
roll
pusha
roll
arpl
jg
xchg
pusha
sub
loopne
dec
out
aam
mov
loopne
mov
loopne
scas
add
jbe
out
cltd
xchg
pop
imul
pusha
add
mov
addb
add
xor
and
and
mov
xlat
adc
outsl
mov
mov
lods
add
pop
and
mov
inc
cmp
pusha
clc
mov
adc
js
inc
and
test
mov
or
shlb
movsl
loopne
or
add
aaa
imul
leave
mov
pusha
addb
cmp
jl
jp
dec
xor
sti
sbb
sbb
rol
mull
mov
or
mov
push
shlb
out
rcrb
inc
lods
andb
pop
push
loop
xor
cld
loope
sbb
mov
or
rcrb
ja
xorl
and
pop
dec
add
sub
inc
pop
dec
in
pop
lea
jmp
and
andb
add
pop
jg
mov
test
mov
sarl
addb
cmpsb
mov
push
in
cltd
adc
or
scas
mov
add
xchg
int
mov
bound
or
loopne
xor
hlt
in
out
loopne
and
call
sub
int3
out
adc
dec
call
fsubrl
adc
mov
in
fidivrs
mov
cmpsl
adc
mov
push
xor
inc
and
insl
lcall
pusha
shl
repz
pusha
cmp
and
add
mov
mov
pusha
fistpl
cmpsb
mov
and
lret
sub
push
jl
aam
dec
cmp
ds
pusha
int3
inc
xchg
sbbb
clc
sub
subb
jp
jns
enter
and
out
xor
mov
jo
mov
rolb
mov
push
mov
leave
leave
cltd
adc
ss
shlb
jns
shl
sarl
pusha
mov
into
addr16
mov
mov
loopne
mov
mov
inc
cld
loop
xchg
sti
xchg
inc
add
fcompl
add
xor
pop
sti
or
inc
xchg
fmull
pusha
loopne
lea
sub
pop
dec
sbb
mov
add
and
dec
jbe
call
and
push
sub
and
dec
shll
rorb
xor
xchg
and
shl
imull
sbb
outsb
xchg
jp
js
loopne
sbb
repnz
add
pusha
mov
jne
cmp
mov
dec
and
mov
enter
notl
inc
xchg
inc
ljmp
andb
and
mov
jb
jge
movsb
andb
popa
dec
pop
mov
jbe
dec
inc
xchg
iret
pop
add
dec
iret
mov
and
and
sti
sub
add
add
mov
inc
lods
loopne
movsl
std
outsl
popf
sbb
mov
loopne
hlt
xchg
pop
out
testl
pop
dec
xchg
lds
shlb
add
test
out
push
and
pusha
pusha
jbe
add
lods
int3
adc
subl
and
inc
mov
repz
jo
xchg
popa
rcll
mov
jp
mov
add
xchg
int3
jmp
ljmp
mov
add
mov
sub
inc
pop
sub
inc
pusha
and
pusha
aaa
jp
sub
pop
je
xchg
movsl
leave
jge
sub
loopne
les
and
in
or
mov
shlb
add
test
rolb
cmc
popf
cmp
andb
push
sbb
shrb
jbe
loopne
mov
jl
dec
push
addb
push
test
pusha
rcrb
sbb
stos
inc
add
faddl
mov
stos
jnp,pt
andb
pop
dec
inc
in
das
jne
cmpsb
loopne
push
adc
inc
add
and
jle
jno
cltd
xchg
adc
fbstp
inc
jns
jp
push
pusha
loopne
jle
mov
add
fidivl
xchg
pop
into
cmpsl
sbb
dec
pusha
inc
repnz
std
xchg
cmp
addb
lret
jbe
push
and
cmp
or
xor
pop
cmp
leave
xor
xor
push
push
addr16
push
jcxz
xchg
in
adc
or
int3
inc
mov
movsb
pusha
and
popl
popf
mov
shll
mov
rol
xchg
mov
cwtl
xor
pop
decb
inc
adcl
pop
dec
sub
loopne
daa
int
pusha
mov
loopne
push
lret
xor
lret
jbe
repnz
pusha
sti
roll
fwait
xchg
je
sub
and
lret
popa
mov
mov
adc
add
nop
adc
inc
add
shl
outsb
inc
add
loopne
jge
dec
push
add
and
mov
dec
test
loopne
scas
loopne
dec
jecxz
cli
popf
dec
pop
pop
pop
jecxz
or
movb
inc
shlb
mov
fldcw
push
mov
jnp
sbb
clc
cwtl
cmp
rcrl
dec
push
sub
mov
pusha
mov
andb
call
add
mov
inc
into
pop
daa
sbb
sti
push
in
movsl
cmc
cld
bound
xor
pop
cmp
ja
mov
push
sub
mov
mov
pop
or
add
inc
xor
leave
add
std
cmp
push
cmpsb
mov
jl
repz
sbb
sahf
jne
xorl
stos
rcl
add
push
int
jg
sbb
loopne
mov
mov
loopne
mov
xor
sbb
mov
aas
gs
push
pop
xchg
nop
ss
inc
inc
test
call
subb
lcall
mov
xorl
jae
ds
sub
loopne
add
out
aas
and
pusha
sbb
leave
into
xchg
vpinsrw
daa
and
and
addb
pop
pop
sub
lret
mov
mov
loopne
popa
jmp
rol
loopne
xchg
cltd
andl
sbb
sbb
inc
xor
pop
inc
push
cli
test
or
test
ror
enter
and
pusha
add
mov
pusha
push
in
xor
cmp
mul
popa
pop
and
xchg
inc
les
ret
add
shl
sbb
inc
xchg
xchg
cwtl
mov
xor
fdivrl
mov
jmp
lret
or
and
out
cmc
sub
mov
add
inc
jae
push
jmp
addb
clc
xor
cmp
movsb
add
fwait
pop
jae
sub
inc
loop
shl
mov
mov
mov
pop
aam
leave
div
mov
jbe
data16
arpl
push
inc
inc
mov
jo
insb
adc
inc
loopne
in
jle
rol
pusha
inc
call
adc
xor
mov
fiadds
loope
xchg
jecxz
test
subb
push
out
pusha
addb
and
inc
jge
std
js
lcall
loopne
adc
mov
cmp
cmc
dec
dec
or
subb
ret
cmp
sbb
dec
ret
mov
cmp
out
es
inc
jne
mov
inc
test
out
std
into
xchg
aad
cmp
jl
or
inc
adc
inc
xchg
icebp
rcr
movsb
rol
jne
mov
out
insb
xchg
in
int
test
aas
shl
cmpsb
rolb
les
ja
dec
and
push
mov
lock
add
add
daa
mov
loopne
add
ds
shr
out
push
fdivrl
shll
add
and
subb
add
cwtl
dec
cld
test
inc
and
add
rcr
aas
mov
lock
sub
and
dec
out
mov
push
add
sarb
adc
adc
add
lcall
lods
rol
and
cs
out
xor
sbb
inc
jle
sbb
popf
add
subb
daa
and
add
mov
inc
mov
dec
aad
imulb
cmp
js
call
cmp
mov
inc
cmpb
ret
add
loopne
inc
rorb
sahf
jo
addb
adc
add
test
add
mov
xor
inc
add
sub
stos
mov
andb
cwtl
jge
dec
notl
cmc
dec
je
sub
push
test
add
mov
out
pop
pop
inc
rorl
mov
mov
add
or
add
pop
or
and
adcb
xlat
sbb
mov
lcall
sbb
fiaddl
dec
xor
jmp
loopne
pushf
dec
lret
pusha
sarb
push
loopne
sahf
jp
pop
jb
xchg
scas
rolb
test
mov
inc
cltd
or
repnz
icebp
stos
imul
add
aam
aas
loopne
movsb
mov
addb
data16
and
lcall
popa
rolb
add
pushf
loopne
mov
push
in
outsl
jb
insb
ret
cmpsb
add
xchg
xor
jp
mov
sub
inc
xchg
and
push
andb
mov
adc
js
popf
inc
sbb
mov
mov
xor
rol
cmp
sbb
scas
dec
imul
pop
mov
rcll
icebp
in
nop
test
push
inc
ss
jo
cmp
dec
cli
cmpsl
mov
js
cwtl
jb
pushf
push
fsubrl
mov
repz
mov
mov
or
pusha
popa
mov
xchg
push
loopne
inc
out
aas
or
orb
mov
repnz
and
rol
cmp
stos
mov
xchg
mov
lahf
dec
inc
insb
sti
mov
cmp
jle
inc
and
push
andb
cwtl
push
fdivrp
imull
stos
andb
pop
sbb
push
sbb
dec
fs
push
out
mov
adcb
xor
subb
addr16
lds
shll
push
and
mov
dec
fsub
adc
sub
sbb
xorl
aad
pop
int
rolb
inc
add
sub
fdivl
mov
mov
dec
addl
andb
pop
js
js
add
cmp
mov
fdivrl
mov
sub
orb
push
and
sbb
add
cmp
inc
pop
movsb
pusha
mov
xchg
and
jle
cmpsb
shlb
mov
pusha
mov
and
inc
sub
loopne
les
dec
push
popf
adc
subb
sbb
jmp
xchg
add
cmpb
pop
int
push
mov
sbb
pusha
adcb
cmc
pop
pushf
aas
push
sub
subb
loopne
bound
push
and
inc
pusha
mov
push
xchg
stos
push
lahf
mov
into
aam
jp
dec
jae
inc
frstor
mov
push
andb
add
and
mov
rorb
mov
and
sbb
inc
mov
loope
pop
gs
into
fs
insl
or
loopne
jo
test
adc
jns
lcall
outsb
fildll
fnstsw
mov
out
inc
pusha
jne
and
sbb
adc
fs
andb
sub
mov
xchg
inc
fldpi
btl
shlb
mov
dec
push
scas
loopne
inc
fstps
je
enter
sub
cmp
push
dec
in
int
js
stc
push
mov
orb
adcl
sti
add
loopne
and
shll
xor
add
test
loope
pop
cmp
shlb
loopne
test
add
mov
lea
and
rcrb
rolb
push
mov
sbb
add
sbb
arpl
cld
sti
lea
andb
bound
in
add
dec
fsub
dec
pusha
inc
xchg
cmp
xchg
jmp
xlat
mov
adc
or
add
aaa
xchg
xor
andb
xchg
notl
mov
rcrb
in
pop
add
ljmp
movsb
add
mov
mov
orb
lods
fidivrl
in
ds
pop
push
stc
cmpsb
pusha
loopne
das
jb
jmp
mov
in
std
mov
jecxz
jns
outsl
adc
aad
cwtl
adc
shlb
and
mov
rorb
cmpb
xchg
xor
nop
mov
fsubp
and
add
scas
loopne
les
loopne
sbb
aad
cmp
test
inc
add
cmp
mov
inc
cmp
loopne
xor
pusha
pop
xor
push
cwtl
push
int3
inc
push
and
shll
and
mov
test
pusha
idivl
and
jge
adc
and
or
or
es
loopne
pusha
adcb
jns
jne
repnz
int3
inc
sbb
sbb
pushf
pusha
push
jae
sti
in
cmp
imul
lods
add
aam
jmp
pushf
push
add
push
ds
pop
jl
loopne
push
cmpsl
ret
mov
add
mov
andb
push
sub
repz
add
inc
dec
mov
mov
jae
mov
jl
pusha
inc
ret
sbb
aad
shlb
add
jl
add
fdivp
push
pop
cmp
push
inc
mov
pusha
push
jno
adc
test
sbb
gs
sbb
lock
pop
and
xor
in
lea
out
sbb
in
sahf
sahf
mov
cwtl
in
xchg
scas
sbb
add
mov
leave
daa
dec
fld
iret
addl
iret
mov
sbb
loopne
and
pop
mov
add
movsl
jmp
imul
and
fldl
bound
pusha
pushf
insb
pop
pop
je
lret
add
rcr
mov
cmp
std
popa
mov
add
lret
sahf
xchg
xchg
mov
push
mov
mov
iret
push
ja
adc
jle
in
xor
push
imulb
add
shlb
and
ss
add
aaa
inc
sbb
pop
cmp
cld
push
xchg
cltd
int
mov
rcl
arpl
sbb
pusha
addb
mov
pusha
into
pop
xor
mov
adc
xor
in
aaa
push
or
adc
les
rolb
inc
mov
mov
sbb
std
mov
pop
push
cmp
fwait
mov
add
stos
addb
adc
mov
inc
les
push
pusha
hlt
leave
and
sub
hlt
adc
sbb
push
enter
jp
rolb
loopne
arpl
mov
outsl
push
and
shl
mov
inc
inc
lret
mov
cwtl
push
mov
jg
not
jmp
pop
shlb
or
pop
lret
int
mov
mov
fnstsw
dec
ds
adc
xchg
jmp
or
jae
loopne
outsb
lret
dec
cltd
test
test
loopne
dec
dec
addb
into
in
scas
je
ret
lret
test
cmp
sbb
loopne
push
in
sub
adc
andb
outsl
add
sbbb
int3
ror
push
push
mov
imul
dec
aad
movsb
add
pusha
or
dec
test
add
pusha
mov
jno
fisubrs
dec
icebp
pushf
sarb
out
aas
pop
nop
mov
lret
jge
andb
out
stos
jnp
rolb
imul
push
and
shl
outsb
mov
and
ret
sti
inc
fcmovnbe
inc
fnstenv
leave
sbb
adc
inc
loopne
cmp
loopne
sub
inc
add
shr
pop
js
aam
out
push
repnz
push
mull
or
fsubs
pusha
aam
mov
pop
xor
js
in
push
das
movsb
and
sarl
cmc
aaa
stos
sub
cmp
push
adc
stos
mov
addb
testl
mov
or
inc
add
mov
loopne
cltd
mov
pop
inc
xchg
mov
and
push
insl
and
nop
test
jae
pop
push
and
xor
inc
aaa
popf
movups
incl
adc
dec
jmp
jecxz
cmpsb
mov
jbe
addr16
outsl
pop
push
scas
add
jge
xchg
inc
cmp
add
pusha
pusha
lret
mov
add
dec
jle
xchg
sbb
sbb
add
scas
das
hlt
and
bound
jg
mov
dec
inc
add
fisttpl
shrb
icebp
lock
lds
and
pop
and
push
push
test
loopne
jg
and
and
jmp
mov
mov
push
jns
cmpl
ret
cmpsl
adc
lds
fistl
inc
cli
enter
nop
mov
rolb
and
shlb
pop
add
arpl
mov
mov
arpl
sbb
mov
mov
loopne
stos
lcall
nop
outsb
flds
loopne
in
popa
dec
ret
mov
mov
add
loope
mov
inc
xchg
cwtl
push
stos
inc
loopne
shlb
lds
rolb
pusha
pusha
loop
loopne
je
out
dec
test
mov
rcrb
outsb
rol
fwait
or
xchg
inc
inc
jmp
inc
aas
in
js
shlb
push
lahf
sarb
dec
xchg
cmpsl
push
inc
xchg
cmp
lahf
aam
add
mov
add
fwait
adc
and
mov
daa
nop
pop
negb
add
loopne
out
xor
je
cmpps
ds
in
sbbl
add
dec
popf
mov
hlt
adc
add
sti
sub
jl
push
insl
cmpsb
loopne
es
andb
add
jge
pop
push
and
inc
add
subb
idivl
adc
ds
cltd
scas
les
add
ret
xor
fsubs
iret
movsb
andb
add
aaa
xor
addb
std
inc
push
lods
pusha
dec
dec
inc
int
jecxz
in
sub
and
xor
mov
sub
or
ds
mov
inc
adc
call
pusha
stos
add
pushf
rcrb
jae
call
sbb
rcrb
stc
jno
leave
mov
cwtl
xchg
cmp
stos
shr
xor
jle
or
repz
lahf
dec
xchg
loope
dec
ss
pusha
adc
insl
mov
jl
mov
loopne
arpl
push
pusha
add
adc
inc
loopne
push
loope
or
adc
push
addb
inc
and
inc
shlb
dec
mov
pusha
inc
ficoms
adc
gs
inc
les
dec
xchg
mov
add
clc
mulb
push
push
add
rolb
icebp
aaa
aaa
mov
inc
mov
dec
lret
pop
js
scas
rolb
and
jle
inc
shl
sarl
xor
rolb
sbbb
idivl
notl
popa
andb
and
adc
inc
loopne
cmpsl
xlat
xor
insb
fs
lds
add
mov
fs
mov
or
push
mov
imul
addb
gs
mov
loopne,pn
popa
popf
lods
pusha
inc
mov
mov
mov
jle
loopne
push
and
sub
add
mov
pusha
cmp
adc
loop
gs
cltd
imul
or
mov
shlb
sbb
fisubrs
push
sbb
leave
mov
mov
push
xor
mov
mov
shll
inc
ret
not
es
shl
flds
rolb
mov
loopne
in
add
cli
mov
aad
or
mov
out
mov
pusha
shl
in
and
or
andb
jmp
and
and
xchg
or
dec
jl
xchg
adc
gs
into
jmp
push
fmull
and
or
inc
mov
std
rorb
and
sbb
xor
add
xor
add
imull
stos
mov
and
push
cmpsb
pusha
pusha
jle
loopne
in
and
ret
dec
xchg
out
mov
mov
add
add
pop
insb
sbb
cs
rorb
inc
jns
loopne
loopne
cmp
xchg
and
or
in
inc
insl
dec
outsb
pop
inc
lea
enter
lock
fisttpll
in
mov
xor
inc
xchg
shll
lcall
repz
cld
ja
xor
dec
addb
push
pushf
fnstenv
outsl
sub
rorb
pop
pop
lds
shl
std
add
inc
cld
xor
icebp
and
adcb
loopne
and
cmpb
xchg
sar
cmp
sub
sub
ja
enter
jg
jno
inc
cmpb
test
jecxz
jbe
add
js
sahf
jo
sub
and
mov
push
sub
jae
cmp
stc
lock
popa
adc
push
lret
rorb
lods
add
mov
shlb
push
test
rorl
popa
jmp
imul
dec
dec
arpl
fidivl
loopne
mov
andb
pusha
xorb
jo
ja
inc
je
mov
iret
mov
add
pop
mov
inc
out
push
addb
inc
mov
add
xor
jae
insb
aam
mov
shlb
push
push
in
mov
pop
je
fcompl
mov
lahf
orl
lcall
lods
jl
fsubs
sub
inc
out
repz
cmp
sbb
inc
loopne
cmpsl
sbb
and
mov
add
and
inc
in
dec
cwtl
mov
mov
xlat
cmp
out
sub
jno
pop
push
lret
mov
add
add
mov
sub
inc
nop
out
dec
cltd
push
sub
rorb
adc
adc
push
and
cs
cld
push
roll
mov
loopne
inc
cld
xchg
test
jo
xorl
addr16
lods
test
shlb
cli
push
ja
mov
inc
loopne
mov
ja
test
rolb
xor
outsl
out
daa
jno
mov
pusha
cmpb
inc
ja
pop
adc
ret
mov
rolb
cli
xchg
mov
ss
xor
pop
xor
xchg
inc
fsts
pop
jg
int
fmuls
inc
pusha
pop
push
hlt
enter
rcrb
pop
jne
lcall
adc
pop
test
int
shlb
adc
andb
addr16
je
inc
mov
rolb
pop
fsubrs
addr16
mov
loopne
jl
stc
pop
push
push
mov
lret
shlb
xchg
hlt
stos
xor
pop
push
xchg
or
gs
adc
or
sti
shrd
inc
mov
rolb
imull
in
mov
cs
pusha
mov
aas
mov
mov
jnp
lock
aas
push
pop
xor
mov
fnsave
and
adc
inc
push
add
loopne
iret
and
rcrb
mov
or
mov
mov
mov
or
and
inc
and
dec
js
cmpsb
mov
or
repz
repnz
cltd
mov
mulb
inc
and
and
test
dec
scas
add
mov
or
add
loopne
rolb
or
shr
add
xchg
movsb
rol
call
lret
adc
sub
fwait
pop
cltd
mov
data16
xor
or
repnz
pop
test
and
mov
add
xchg
jb
shlb
cmp
scas
and
sbb
loope
adc
mov
xchg
sbb
andb
pop
mov
out
cld
dec
dec
clc
scas
loopne
and
cmp
test
add
adc
inc
xchg
xchg
out
mov
outsl
lret
int
push
jp
leave
fisttps
icebp
das
sub
inc
loop
mov
mov
lea
loopne
sahf
inc
jb
push
leave
inc
loopne
push
or
inc
addb
sbb
cmc
dec
adc
inc
in
jno
sbb
sub
and
push
popf
inc
daa
pop
xchg
pop
xlat
daa
and
xor
das
cli
ljmp
or
add
ret
rolb
cmpsl
push
addb
cmp
inc
loopne
inc
cmpb
add
inc
hlt
repz
cmc
push
and
and
mov
loopne
scas
ror
pop
mov
mov
add
adc
mov
add
int
add
rol
rorb
sub
mov
fcomip
out
pusha
jae
loopne
push
not
loope
push
mov
adcb
inc
pop
adc
adc
in
cmp
pop
push
jmp
xor
insl
mov
icebp
push
mov
mov
nop
sub
loopne
sarl
mov
hlt
nop
lcall
sbb
aas
xchg
push
repz
lret
xchg
loop
inc
add
inc
jecxz
inc
filds
sbb
sub
add
mov
xor
lcall
cmpsb
mov
inc
int
pusha
loopne
push
sbb
imul
mov
ds
adc
xchg
cmpsb
add
cmp
push
popa
adc
add
sar
or
mov
or
pop
les
push
pop
das
or
loopne
sbb
xchg
ficompl
add
test
inc
mov
inc
sahf
cmp
lock
fdivr
je
mov
xor
out
jg
pusha
pusha
ret
sbb
xchg
in
shl
adc
add
jo
jo
bound
jle
adc
sarb
in
test
out
shll
int3
pop
mov
stos
loopne
shrb
jno
shll
add
mov
add
jae
sti
fs
sbb
fnsave
and
inc
pop
pusha
fadds
lods
and
sbb
cld
das
push
mov
sbb
cmp
mov
repnz
lea
fstp
lcall
sahf
push
inc
ret
ja
push
fbstp
mov
andl
cmpsb
shlb
xor
push
mov
adc
cltd
jg
popa
and
loopne
add
test
and
stos
loopne
mov
dec
add
push
sub
xor
mov
addb
inc
xchg
js
jmp
or
pusha
lds
dec
sub
adc
cld
movsl
movsl
pop
cmp
and
jno
outsl
pop
call
xchg
mov
iret
add
and
mulb
cmp
pushf
jl
andb
inc
push
and
pusha
loopne
fcom
sbb
cmpsl
popf
cmpsl
dec
sar
jno
mov
pop
aam
loopne
jns
rolb
jmp
out
push
adc
icebp
xchg
sbb
pop
jg
xorl
rcrb
jno
dec
imul
and
cmp
inc
shrb
adc
stc
cmp
mov
lahf
inc
push
sbb
dec
pop
les
adc
lods
pusha
mov
mov
push
or
loopne
mov
je
divl
je
or
clc
or
sbbb
popf
sbb
and
cmpsb
loopne
fwait
movsl
repnz
loopne
lcall
addb
andb
and
stc
cmp
fnstcw
nop
mov
scas
cmpxchg
clc
insb
mov
rolb
loopne
js
fwait
in
pop
mov
movsl
dec
jecxz
jmp
cmp
es
and
jmp
xchg
shlw
inc
inc
sub
call
pusha
loopne
divb
or
and
pusha
pusha
or
jmp
add
loopne
push
and
inc
sahf
mov
mov
imul
scas
loopne
in
and
cmp
test
mov
inc
or
jp
mov
mov
shl
mov
pusha
lock
xchg
mov
cmp
icebp
mov
shrl
scas
lods
test
or
jbe
sbb
pop
fcoms
vaddps
js
ficoms
es
insl
in
int
jg
in
in
loope
arpl
je
and
pop
mov
xchg
sub
rolb
loopne
fisubrs
xchg
add
mull
adc
frstor
fisttps
add
cld
lret
inc
mov
outsb
test
add
dec
daa
enter
add
imul
inc
sbb
sbb
ret
imul
mov
mov
mov
adcb
daa
lock
mov
andb
jnp
inc
out
xor
xor
mov
jmp
sbb
clc
jecxz
dec
mov
ficompl
loope
mov
in
pop
sahf
mov
dec
in
sub
addr16
les
xor
imul
push
pop
lret
sbb
mov
fisubl
cmp
andb
std
adc
push
and
mov
mov
cmp
inc
add
rclb
into
push
cli
int3
mov
sbb
shlb
shlb
sbb
addb
xor
inc
mov
nop
mov
sub
rclb
cld
ljmp
jmp
dec
pop
fistl
xorw
iret
psadbw
sub
shl
pusha
or
inc
int
mov
push
andb
lea
rolb
adc
pop
push
inc
aad
add
mov
aad
sub
das
out
xor
mov
and
fnsave
loopne
mov
dec
pop
and
inc
xor
fildl
and
arpl
sub
inc
mov
xor
pusha
xor
add
cwtl
xchg
jbe
cmc
aas
jecxz
push
loopne
inc
cmp
push
fs
mov
addr16
cmc
icebp
sbb
and
imul
ja
xchg
lcall
mov
add
mov
test
loopne
mov
fisttps
xor
cmp
cmp
lret
jne
mov
popa
mov
mov
gs
imulb
xchg
std
mov
xchg
loope
push
incb
cmp
lahf
enter
pushf
daa
lods
cmp
loope
enter
adc
popa
testb
andb
ja
mov
jno
test
test
and
ret
mov
shrb
sbb
insl
push
loopne
int3
imul
lods
add
js
imul
mov
xchg
pop
mov
addb
and
xlat
repz
dec
fdivr
or
rolb
mov
jecxz
aaa
fimull
pushf
push
lock
scas
inc
inc
xchg
dec
movsl
or
loop
push
push
aad
push
push
or
xchg
leave
pop
lcall
mov
cmp
xor
test
inc
rolb
xchg
cmp
scas
rol
cs
push
addr16
dec
hlt
imul
andb
rolb
jbe
add
inc
fidivl
loopne
loopne
pop
jbe
and
xor
out
jg
inc
and
ss
rcr
pop
sbb
pop
mov
shlb
fsubs
lods
shlb
mov
and
mov
mov
icebp
aaa
push
addr16
mov
inc
fbld
pusha
loopne
repnz
adc
addb
loopne
fdivrl
push
inc
mov
enter
sbb
add
inc
mov
scas
inc
sub
and
pop
xor
push
mov
mov
in
gs
mov
adc
adc
mov
icebp
arpl
es
inc
test
subb
add
mov
mov
xchg
in
inc
mov
ffree
cld
xchg
outsl
cmpsl
int3
mov
movsb
andb
mov
mov
add
pop
sbb
loopne
xchg
sub
int
cmp
js
jo
in
pushf
cmp
push
jg
pop
shrb
and
and
dec
lret
das
fdivl
and
add
mov
add
mov
sub
mov
insb
pushf
in
jmp
xor
cmpsb
and
push
nop
mov
jecxz
arpl
out
imul
pusha
push
mov
xorb
test
add
push
clc
adc
gs
jnp
mov
mov
ficomps
cld
push
inc
pusha
push
loopne
inc
mov
mov
insb
cli
inc
dec
sbb
jecxz
and
faddp
xchg
mov
loopne
cli
inc
push
or
clc
leave
inc
mov
in
push
mov
mov
lods
pusha
rclb
daa
int3
int3
push
shrl
fists
push
rolb
outsl
lds
adc
add
clc
aaa
sarb
inc
push
xchg
xor
mov
ret
sub
repz
loopne
out
insl
push
mov
sahf
stos
loopne
mov
sbb
repz
inc
gs
insl
adc
mov
shlb
shl
inc
and
ror
push
shlb
xchg
and
call
loopne
stos
inc
subb
into
pop
adc
insl
mov
inc
loopne
pop
add
inc
adc
mov
mov
sub
add
addb
inc
jge
dec
repnz
rol
cmp
xor
icebp
test
sbbb
orb
lahf
bound
and
pop
sub
xchg
shl
cld
cli
out
add
mov
pop
pop
jno
dec
daa
add
pop
insb
xor
dec
shll
cltd
fcmovb
add
in
notl
sub
and
fimull
and
movsb
and
out
dec
pop
mov
inc
cld
mov
fdivp
outsl
jle
jo
jbe
scas
loopne
js
imul
inc
mov
popl
xor
shrl
add
mov
orl
iret
enter
lods
pushf
outsb
cmp
jmp
inc
pop
xor
lods
add
lods
andb
repz
mov
and
push
add
push
shlb
popa
sahf
ret
in
inc
cmpsb
and
imul
dec
repnz
packsswb
pop
xchg
popa
and
add
push
stos
and
loopne
dec
cmp
mov
or
loopne
jnp
xchg
xchg
dec
mov
cmp
mov
mov
add
sub
orb
fcmovnbe
ja
bound
pop
ds
add
push
andb
cltd
and
mov
add
test
adc
add
mov
jmp
andb
pusha
loopne
lods
rol
rolb
xlat
xchg
jbe
movsl
jbe
into
imul
in
sbb
es
add
insl
sbb
loopne
jns
mov
and
jae
xchg
adc
mov
rclb
test
push
rolb
mov
mov
adc
xor
mov
push
mov
lock
mov
outsl
adc
xchg
daa
in
dec
enter
in
or
inc
jno
cmp
sub
and
add
je
cwtl
lds
cmpsb
inc
orb
rolb
sbb
jg
incl
jno
push
add
mov
insb
xchg
shll
cmp
pusha
pusha
or
loope
pop
ret
jb
push
mov
punpcklbw
rol
pop
push
arpl
push
and
jge
push
pushf
insb
ljmp
sbb
push
pop
jne
add
bound
adc
adc
jle
adc
inc
cmpb
rol
dec
loop
jecxz
mov
sub
pusha
testb
loopne
push
inc
aad
lret
xchg
ret
daa
loopne
pusha
subb
repz
mov
rol
clc
mov
inc
and
mov
xorb
sbb
mov
pop
sub
getsec
leave
dec
shll
cli
mov
sbb
sbb
sub
mov
shlb
xchg
sti
sar
mov
fisubl
lds
bound
test
and
xchg
sbb
shlb
inc
daa
mov
xor
addb
sti
adc
sub
jns
shlb
inc
add
loopne
enter
and
dec
jl
insb
aas
hlt
mov
addb
jmp
fwait
mov
mov
addb
lahf
ds
push
push
dec
popa
adc
hlt
xor
popa
mov
inc
and
insb
inc
push
ret
lcall
sti
xchg
imul
jno
jg
pusha
test
gs
fcomp
fildl
rolb
pusha
mov
and
and
pusha
add
push
xchg
and
in
cmp
mov
test
and
and
sbbb
mov
out
mov
fdivl
fsub
out
dec
xchg
mov
cmp
cmp
and
add
call
test
and
mov
mov
into
aad
lret
add
out
out
add
and
shlb
push
cmp
insl
jno
nop
jo
fsub
dec
aaa
int
cmp
or
and
jns
insl
loopne
enter
mov
dec
add
add
mov
add
aas
jnp
inc
xor
push
pop
add
inc
dec
sub
inc
adc
xchg
pusha
add
cmp
pusha
shlb
mov
sub
add
loopne
mov
repz
mov
mov
pop
popa
pop
js
outsb
into
mov
or
and
pop
inc
xor
cmp
mov
cmc
setge
sbb
mov
jae
or
loopne
test
inc
out
cmp
and
aas
jp
addr16
lods
xchg
or
mov
mov
fdivp
dec
lret
xor
test
add
sbb
push
sbb
adc
bnd
scas
or
shll
fs
mov
mov
es
loopne
pusha
and
mov
xchg
adc
sbb
sahf
out
jg
mov
test
pusha
xchg
xchg
sub
loopne
out
stos
pusha
add
inc
mov
xor
adc
jnp
loopne
inc
xor
andb
shlb
ds
je
add
add
shlb
mov
test
std
adc
movsb
loopne
inc
xchg
dec
and
lods
push
rolb
push
mov
add
mov
hlt
ret
fs
addr16
out
jl
inc
ja
in
mov
inc
pusha
into
pop
cmp
int3
inc
pop
jg
inc
pop
testb
xor
sub
adc
pop
add
mov
repz
aaa
jo
push
iret
ljmp
add
imul
xchg
push
add
inc
pop
push
dec
shlb
jno
sti
add
pusha
adc
mov
cmc
mov
loopne
mov
pusha
loopne
push
ret
inc
rcrl
mov
dec
pop
outsl
sbb
sbb
and
xor
fsubp
out
lods
mov
push
push
add
mov
inc
lds
movsl
mov
lea
fldl
shlb
orl
aas
cmp
or
add
sti
push
mov
dec
jns
lods
pusha
mov
push
xor
shrb
scas
pusha
rol
sub
pusha
xor
cmpl
dec
or
in
js
repz
xlat
sti
push
das
push
addb
movsb
inc
mov
into
cli
out
mov
adc
and
sarl
and
std
shrl
ficoml
dec
jle
aas
cmp
in
popa
mov
jo
cmp
mov
pusha
rolb
andb
xchg
cmp
or
or
pusha
arpl
dec
xor
shll
pop
push
and
pop
mov
xchg
xlat
aaa
out
data16
inc
test
xor
clc
roll
mov
mov
lds
shlb
jle
ja
loopne
jmp
add
loopne
hlt
cmp
test
shl
and
shl
gs
mov
dec
ret
dec
fiaddl
rorb
dec
stos
imul
pop
inc
out
sbb
int
gs
mov
imul
aaa
add
call
adc
inc
clc
lock
scas
mov
cmp
cmc
mov
dec
loop
push
mov
and
push
aam
push
mov
add
and
cmp
rcr
push
adc
inc
or
inc
add
loop
insl
iret
sbb
hlt
cltd
bound
mov
mov
cmp
arpl
imul
dec
mov
inc
rolb
and
test
fdivr
ret
in
or
and
jmp
push
push
imul
push
mov
adc
mov
pop
jge
and
addb
or
es
sbb
mov
in
cmpsl
scas
pusha
inc
das
lea
ds
push
loopne
mov
rcl
mov
loopne
pusha
mov
pop
lea
lods
loopne
nop
inc
mov
pop
pop
rcr
sub
inc
hlt
dec
movlps
sahf
enter
dec
mov
and
and
insb
movl
js
mov
sbb
pop
push
loopne
and
add
outsb
add
fdivrl
dec
mov
in
adc
ret
inc
bound
loopne
rcrb
rep
cmp
into
sbbl
les
push
fidivl
add
xlat
sub
add
loopne
pop
sub
bound
cs
add
add
push
insl
sti
mov
xchg
pop
push
lret
mov
sbb
and
pop
mov
test
shlb
sub
inc
xchg
jl
add
dec
loopne,pn
andb
mov
cmp
pop
lahf
xchg
or
or
sub
adc
sub
mov
cmc
call
push
stos
pusha
add
or
pusha
add
add
fsubrs
inc
and
add
rol
rolb
stc
hlt
xor
fsubr
sub
adc
rolb
sbb
mov
push
jnp
loop
cs
xorb
push
and
add
mov
int
jb
mov
fs
xor
mov
push
adc
mov
or
xchg
push
dec
xor
mov
cltd
sbbl
shlb
insb
ss
jmp
sub
inc
test
rcll
sub
add
lcall
fisttps
mov
adc
sub
loopne
in
filds
loopne
mov
mov
pop
cmc
mul
xor
jmp
pop
bsf
xlat
and
ret
arpl
and
or
lea
pusha
loopne
jae
and
ffree
mov
pop
fwait
hlt
mov
sub
fwait
insb
xor
decl
inc
adc
push
xor
daa
mov
hlt
jl
addb
pusha
inc
mov
data16
fisubrs
jg
and
mov
setnp
ffree
sahf
aas
repz
inc
add
dec
cmp
bound
test
lahf
push
add
loopne
mov
add
add
rcll
clc
stc
jne
shlb
sbb
sub
push
mov
mov
mov
jo
into
jnp
addb
push
inc
adcb
mov
xor
add
in
xchg
push
pop
fisubl
mov
mov
and
pop
ret
ljmp
and
inc
push
cmp
dec
icebp
imul
pop
xor
out
mov
xlat
repnz
cmp
xchg
addb
pusha
loopne
daa
cltd
jmp
in
push
cltd
lds
adc
pop
shl
pop
mov
add
ja
mov
jo
std
loopne
cmp
mov
loopne
rolb
jae
mov
or
mov
shll
rorb
cltd
mov
in
adc
inc
loopne
cmc
ret
aaa
icebp
adc
xlat
jns
clc
mov
or
jecxz
sbb
repz
jcxz
nopl
test
xchg
pop
divb
sub
sarb
sub
mov
mov
imull
insl
addl
and
shll
loop
ret
xchg
out
adc
andb
mov
repnz
add
xor
ss
adc
loope
mov
xor
jnp
loopne
out
insl
jno
mov
pop
add
popf
addb
inc
addl
and
mov
mov
xor
mov
and
pusha
and
and
in
adc
sub
aas
inc
mov
stos
mov
jnp
fsubrl
and
scas
and
or
and
jl
fcmovb
mov
addb
ficoml
pusha
pusha
popf
fadds
icebp
xor
sahf
insb
mov
pop
pop
xor
pop
cmpsl
cmp
jecxz
and
icebp
sbb
pusha
loopne
pusha
add
jb
idivb
xor
addb
imul
add
int3
testl
nop
aam
jo
jge
add
jle
ss
and
inc
inc
add
add
jg
sarl
pushf
sti
setns
sbb
xor
ja
inc
and
jnp
shll
xchg
push
mov
jo
and
loop
or
sub
xchg
sahf
imul
jg
dec
jecxz
lret
jle
jbe
addr16
sbb
addb
mov
das
mov
sub
loopne
push
cmpsb
pusha
rorb
ret
xchg
adc
insl
sbb
jo
int
arpl
pusha
shl
mov
push
andb
add
xorb
loopne
test
outsb
fmull
fwait
lret
rol
mov
dec
aad
xchg
ret
mov
in
fisttpl
loopne
loopne
or
add
hlt
mov
pop
mov
adc
inc
ss
jg
cwtl
cwtl
mov
jbe
andb
loopne
jmp
shlb
imul
add
add
dec
sbb
enter
mov
imul
inc
imul
pusha
mov
mov
and
mov
sbb
lcall
fiaddl
mov
or
mov
xchg
mov
add
shlb
sti
hlt
int
and
loopne
loopne
loopne,pn
loop
cwtl
sub
mov
mov
push
lods
rcll
rolb
add
iret
jl
add
ljmp
adc
jns
scas
aad
add
rorb
sbb
lock
push
and
aad
ja
add
mov
and
xchg
or
loopne
das
cmp
sub
and
dec
and
mov
push
repz
pusha
sub
in
cmc
adc
aas
mov
adc
pop
in
pop
xchg
loopne
fwait
out
loopne
aas
push
and
pop
xchg
loopne
ds
adc
jns
mov
in
popf
cmp
in
and
shlb
adc
jnp
add
lret
jecxz
pushf
jnp
mov
push
and
lahf
test
dec
movsb
loopne
std
xor
xchg
mov
mov
and
outsl
push
cmpsb
loopne
push
cmp
inc
cmp
inc
imul
add
dec
push
jmp
sub
add
test
mov
adc
push
cmp
lods
mov
push
int3
loop
add
cmpb
in
push
cs
fsubp
push
inc
ror
xor
pusha
shl
adc
sar
mov
notb
rolb
dec
out
or
pop
add
loop
jo
outsb
pop
sub
push
lret
fs
inc
pop
sbb
cwtl
jecxz
call
cmpsl
pop
stc
les
push
call
inc
inc
mov
jmp
loopne
sub
add
loop
aaa
cmp
test
inc
adc
adc
push
fwait
lret
loopne
sub
pusha
mov
sbb
out
mov
das
or
mov
fsub
xor
adc
inc
divl
mov
out
inc
mov
and
mov
mov
add
in
add
or
rclb
addb
sub
adcb
mov
insb
in
jecxz
loopne
rcrl
bound
xchg
mov
loopne
lds
subl
cmpsl
mov
addb
xlat
pop
sbb
xchg
dec
outsl
push
dec
sbb
outsb
daa
test
sbb
cmp
xor
shlb
pusha
inc
aam
fcoms
popa
mov
andb
pop
cmpsb
add
dec
js
inc
adc
pop
and
hlt
mov
pusha
call
pop
cltd
hlt
xchg
push
into
lahf
in
cltd
push
pusha
mov
push
jb
xor
pop
ds
loop
cmpsb
and
fdivrp
cmp
push
lahf
jl
sbb
add
dec
out
fistpll
cmp
push
inc
imul
lret
add
addb
mov
and
pop
jecxz
out
cmc
jae
mov
pop
xchg
add
jecxz
inc
loopne
push
and
aaa
xchg
mov
or
arpl
aaa
ljmpw
dec
cmp
lret
xchg
xor
push
adc
add
jo
aas
mov
mov
cwtl
and
mulb
mov
addb
mov
xlat
adc
and
mov
fcom
je
lods
and
addb
cvtdq2ps
sbb
or
shlb
inc
rol
and
into
xchg
xor
movl
add
xor
addb
pop
xor
cmp
push
out
add
notb
sbb
xchg
dec
cmc
pushf
or
cli
push
arpl
ret
pusha
pop
pop
in
inc
cmc
aad
test
add
out
lcall
and
pop
jmp
jns
mov
dec
push
add
inc
jb
adc
mov
inc
fldt
pusha
inc
mov
inc
push
das
mov
inc
fcom
movsl
aaa
call
sahf
xchg
test
ljmp
xor
shll
push
pop
pop
lock
push
nop
xchg
rol
cmp
sbb
int
inc
rcr
jp
std
gs
fcomps
and
rol
fbstp
mov
ret
icebp
fwait
mov
pop
ret
cmp
int3
dec
int
adc
jp
andb
cli
mov
xchg
pcmpeqb
jg
rcl
push
fwait
sbb
movsl
scas
or
inc
pop
dec
in
cmc
in
stc
or
mov
push
shlb
push
pop
ret
dec
dec
idivb
and
cmpl
and
and
dec
iret
aas
test
push
adc
cmc
pop
jmp
cli
lods
rolb
sub
jno
mov
pusha
loopne
mov
nopl
xor
pop
ret
and
mov
and
repz
sete
cmc
orl
pop
or
loopne
loopne
push
loopne
jo
jmp
movsb
inc
pusha
inc
imul
pop
out
scas
std
and
ror
gs
xchg
stc
lahf
divl
out
rcl
cmc
cmp
sbb
xchg
mov
shr
cmc
shl
jmp
or
xchg
push
andb
sub
and
jl,pt
mov
push
xchg
xadd
rcll
push
and
xor
pop
xor
dec
or
inc
xchg
pusha
add
xor
sub
add
shlb
dec
lods
movsl
repnz
shl
mov
push
mulb
loopne
das
pushf
xchg
jg
pop
jp
xlat
sub
inc
das
pop
inc
std
fimuls
pusha
or
mov
je
fsubl
mov
jnp
insl
mov
push
lahf
or
or
test
jmp
mov
pusha
loopne
xchg
xchg
clc
je
loope
cmp
cmpsb
pusha
mov
xor
jecxz
andb
and
xchg
addb
lds
add
ficompl
out
test
andb
lcall
and
loopne
js
ss
lea
mov
add
lret
sti
call
std
adc
movsb
mov
add
jnp
dec
mov
and
push
inc
and
cs
inc
jecxz
and
xor
loopne
pop
add
mov
cltd
dec
cli
cmp
outsb
lcall
cmpsb
add
cmp
inc
adc
mov
and
xor
mov
out
push
addb
or
dec
mov
lcall
xorb
add
cwtl
outsl
shrl
push
andb
inc
mov
or
rclb
xchg
mov
repz
inc
mov
shlb
and
insb
cld
shlb
rolb
ret
outsb
clc
ljmp
test
inc
in
sub
in
dec
dec
ss
lret
loopne
push
data16
loopne
jnp
inc
loopne
outsl
cmp
xor
fwait
jns
or
pusha
add
repnz
call
andb
cmp
cmp
jbe
and
pusha
popa
mov
xor
adc
pusha
add
sahf
xchg
call
inc
xor
add
add
adc
roll
xor
mov
jae
mov
ret
inc
add
jne
mov
loopne
mov
shlb
movhps
fisubrl
loopne
mov
clc
sbb
mov
rcr
mov
je
add
sarb
and
mov
mov
int
pop
stos
aam
and
loope
sub
inc
sbb
mov
and
mov
mov
inc
aaa
push
push
add
icebp
icebp
imul
imull
andb
sahf
ret
lds
jl
and
movsl
xchg
sbb
ret
push
jl
test
and
imul
pusha
add
lahf
mov
les
shlb
push
push
loopne
add
loopne
mov
mov
inc
jecxz
or
rolb
and
outsb
jecxz
stc
sbb
push
in
jo
pushf
das
push
inc
mov
popf
loopne
divl
jnp
mov
inc
mov
jmp
sbb
ds
aaa
mov
cmp
pusha
data16
cmp
inc
rorb
push
mov
mov
loopne
dec
inc
icebp
dec
sub
mov
pusha
jl
push
ljmp
fldenv
push
cwtl
xchg
pop
gs
idivb
xchg
xor
sarl
pop
repnz
dec
mov
mov
push
push
pusha
loopne
stos
ficoms
or
iret
jl
mov
test
cmc
add
and
shlb
rolb
pusha
jmp
pop
rolb
mov
cmpsb
loopne
dec
add
inc
dec
xchg
es
add
inc
push
mov
sbb
xor
stos
pusha
inc
es
adc
lods
pusha
and
movsl
je
aad
addr16
aam
fdivrl
addb
push
addb
je
adc
push
loopne
or
hlt
adc
jb
push
loopne
icebp
sub
loopne
jmp
inc
jbe
clc
andb
loopne
out
rolb
xor
adc
push
addr16
in
in
mov
gs
aam
push
stos
loopne
repnz
adc
fsubl
mov
xor
sahf
mov
inc
adc
sarl
and
gs
push
add
or
icebp
mov
xor
jl
repz
xor
dec
xchg
ficomps
inc
dec
fistpll
rolb
cmpsl
add
cwtl
lods
loopne
lea
add
sbb
mov
dec
int3
push
lcall
movsl
mov
testl
ss
cld
popf
push
and
push
inc
pusha
mov
push
test
cmp
dec
jae
mov
mov
sarl
pop
pop
push
adc
in
mov
add
mov
push
call
push
fdivr
adc
loop
andb
outsb
or
add
repz
cmp
mov
out
mov
int3
dec
jle
xor
addl
ret
inc
inc
ret
push
mov
add
pusha
shlb
xor
xchg
adc
and
xchg
mov
pop
push
mov
inc
lock
cmp
jae
push
stos
add
dec
pop
rol
cld
popa
jo
outsb
adc
cltd
inc
loopne
cs
inc
rorl
push
jecxz
divl
negb
ds
imul
pop
andb
hlt
nop
and
xor
sub
pusha
jne
and
lds
add
into
push
popf
jbe
pop
sar
aaa
leave
lret
jne
leave
nop
mov
data16
and
jae
mov
mov
adc
add
jbe
les
cmp
dec
call
mov
dec
sub
shlb
or
loopne
icebp
sbb
dec
loopne,pn
and
movsl
and
and
fmuls
inc
add
cwtl
xchg
scas
shlb
jb
cmpxchg
jle
xchg
test
add
iret
push
inc
pusha
mov
jge
sub
push
in
xlat
test
mov
rcr
clc
add
pop
ja
int
and
mov
push
stc
in
pop
aaa
or
adc
and
jmp
enter
cmpsl
mov
shlb
mov
loopne
repnz
jle
stos
and
sbb
into
sbb
lock
fisubl
pusha
shlb
bound
jecxz
in
bound
and
pop
mov
xor
addb
adc
push
push
sarl
jns
push
std
hlt
pop
adc
add
in
cmp
mov
stos
pusha
inc
jae
loopne
add
cld
adc
popf
fsubl
mov
imul
inc
lret
push
pusha
inc
outsl
xor
mov
pusha
and
jno
and
mov
fdivp
pop
out
mov
imul
inc
pop
adc
and
jl
and
push
or
repnz
mov
aam
inc
xchg
sub
mov
mov
mov
adc
inc
mov
call
je
push
jge
cmp
popf
test
lods
dec
dec
lds
pop
adc
addb
ss
and
shlb
ds
add
push
xchg
pop
insb
sbb
and
lcall
lds
mov
aad
fisttps
xchg
imull
sub
subb
mov
push
jns
add
sbbb
outsl
movsb
rolb
mov
loopne
mov
fldcw
fbld
add
in
xor
dec
popf
aad
xchg
xor
andl
ror
repz
pop
nop
roll
xchg
shl
lahf
sub
imul
jbe
mov
ljmp
aad
mov
mov
xchg
xchg
dec
lods
loop
in
sub
inc
mov
or
add
ds
dec
xchg
xlat
addr16
andb
insl
cli
out
addb
enter
xchg
sbb
or
in
adc
call
lods
inc
and
or
shlb
mov
mov
cmpb
movsl
test
sarb
cmpsl
inc
iret
inc
inc
or
add
ja
or
pusha
loopne
fnstsw
or
inc
inc
dec
push
cli
mov
push
aaa
insb
sbb
mov
shlb
fimull
shl
xchg
idivl
pop
pop
mov
push
stos
rol
test
test
lcall
in
rcll
jnp
pusha
add
lret
js
fstl
mov
or
inc
xchg
rcl
les
pusha
add
mov
inc
xor
add
add
xchg
and
push
loopne
ret
cwtl
mov
mov
mov
add
add
mov
inc
in
bnd
loope
add
scas
and
cmp
fldcw
cmp
and
es
pusha
je
inc
data16
stos
int
aad
pusha
add
adc
mov
sub
inc
pop
out
repnz
lds
xchg
lahf
movsb
mov
xchg
loopne
in
jmp
mov
push
jle
out
ret
mov
pusha
push
sbb
push
lock
neg
jecxz
mov
fs
rorl
or
rol
aaa
mov
idivl
cmc
and
pushf
jl
inc
aad
std
jns
push
sub
mov
sub
mov
mov
xorb
add
andb
fbld
fildll
jecxz
and
rolb
or
mov
mov
add
out
add
sarl
sub
fwait
repnz
and
xor
mov
int
int3
push
sub
dec
repz
adc
xorb
mov
rclb
or
add
fld
insl
cmp
aad
addb
and
dec
inc
push
and
adc
pop
fcmovbe
hlt
sahf
je
cli
mov
pop
or
and
and
repnz
or
jmp
mov
shlb
mov
gs
cmp
mov
sub
fidivs
cmp
mov
loopne
fisttpl
inc
fs
mov
push
push
mov
rorb
and
bound
addl
mov
add
and
push
sub
sbbb
push
mov
ret
pusha
pusha
jno
aad
mov
pop
add
fisubs
push
inc
add
addl
pusha
add
mov
inc
ffreep
sbb
cmp
xchg
jno
xchg
push
jbe
adc
andb
ja
xchg
pop
test
add
ds
and
xor
inc
outsl
fdivr
mov
loopne
movsl
mov
aam
rolb
divl
jecxz
sarl
cmp
aad
loopne
and
jno
dec
nop
shll
mov
cmp
shlb
xor
sbb
es
xchg
inc
xchg
inc
xchg
xor
mov
add
jb
inc
sbbb
add
ror
sub
cld
inc
adc
jmp
jge
loop
in
sbb
loopne
and
inc
iret
jmp
cmc
ffreep
jno
popf
jmp
hlt
addl
loopne
cmp
shl
test
hlt
mov
pop
xchg
sbb
scas
jecxz
xor
mov
mov
aaa
test
loopne
push
stos
xchg
loopne
pop
lret
jns
outsl
pop
loop
shlb
popa
cmp
adc
fbld
lret
pop
sbb
xchg
andb
pop
dec
jg
outsl
lcall
sub
insl
pop
nop
mov
add
out
fistps
loopne
push
notb
jecxz
mov
fimuls
inc
inc
inc
mov
cwtl
mov
pusha
aam
add
inc
mov
xchg
add
pop
jne
sti
add
mov
pop
jns
push
xchg
jle
int3
add
add
mov
inc
mov
sbb
test
add
cmp
push
mov
pusha
cmp
pusha
adc
dec
xchg
jmp
insb
adc
push
jecxz
push
xchg
mov
jnp
jne
loop
movsl
call
push
fs
movsl
mov
or
loopne
inc
add
pusha
sar
mov
adc
rcrl
iret
shll
orb
ret
scas
loopne
and
and
xchg
mov
mov
mov
xchg
xor
add
adc
loopne
jne
mov
add
inc
push
sbb
adc
push
or
rol
int
lret
mov
lahf
aam
loop
mov
mov
and
lret
sub
sbb
xchg
imul
and
pusha
mov
cli
xchg
clc
inc
mov
fwait
out
shlb
fs
test
lret
jno
or
push
test
and
loopne
inc
repnz
int3
xchg
adc
mov
jnp
pop
push
loopne
cmp
xorl
fs
ss
sahf
xor
xor
rorb
push
mov
movsb
add
push
clc
adc
or
outsl
xchg
shrb
out
mov
aam
icebp
mov
mov
inc
dec
lea
sbb
loopne
scas
add
pusha
pusha
pop
and
mov
loopne
pop
mov
lret
in
aam
mov
and
push
add
loopne
fldt
addb
xor
pusha
mov
orb
into
std
loope
jmp
jp
stos
cmp
addb
out
add
sub
call
pop
pushl
popf
shlb
pop
popf
sub
and
in
lock
std
insl
adc
mov
je
les
shlb
add
add
and
loopne
in
mov
icebp
mov
cmpsl
pop
mov
jl
or
pusha
add
shlb
nop
pop
jb
in
imul
xorb
add
out
mov
mov
xor
xor
scas
inc
inc
xor
cli
xchg
test
pusha
jno
sbb
sub
or
push
in
pusha
loopne
sti
rolb
loopne
lds
or
mov
ss
popa
int
pusha
sarb
fidivrs
cmpsl
rolb
movsb
pusha
and
ljmp
rol
inc
fiaddl
add
push
mov
jbe
pusha
add
and
or
shlb
mov
fwait
xor
jns
in
in
pusha
push
pop
test
inc
jns
popf
dec
daa
stos
pusha
add
in
xchg
push
sub
pusha
cmp
and
pusha
sbb
incl
mov
push
test
ret
or
jg
test
jo
shlb
and
loopne
test
imul
ss
dec
aaa
cmp
lods
outsl
lods
pop
shll
int
jbe
aam
clc
lret
repz
mov
pusha
mov
xor
and
pop
sbb
loopne
cwtl
js
xlat
pusha
and
sbb
lods
jns
pusha
cmp
xchg
pop
mov
les
jge,pt
xor
add
jmp
add
mov
nop
cmpsb
pusha
mov
mov
hlt
loope
rolb
lods
mov
fdivrs
stc
xchg
xor
pop
cmp
aaa
sbb
inc
int
sbb
cmpsl
scas
das
sub
ds
add
fnstsw
fisubs
loopne
push
cmp
jbe
cmp
arpl
dec
push
and
and
mov
ffree
outsl
nop
cmp
push
nop
outsl
pop
jp
push
sbb
pop
rorb
xchg
inc
and
jmp
sub
mov
mov
sub
cwtl
int3
and
std
ficompl
mov
fsubl
add
lcall
mov
add
aad
iret
in
push
and
inc
mov
lcall
in
inc
call
cmp
sub
and
and
inc
mov
inc
jl
addb
dec
fimull
sbb
aad
aam
ds
and
and
and
add
push
call
cmpsb
addb
jae
movsb
inc
inc
loop
in
mov
add
fcomps
or
mov
sbb
fsubrl
dec
loopne
fisttps
pop
repz
dec
andb
icebp
push
cld
fdivp
dec
and
add
mov
insl
pushf
int3
ljmp
or
orb
es
sarb
not
and
xor
and
out
rcl
imull
xchg
or
jg
jnp
leave
cwtl
lea
push
lret
sub
subl
mov
push
and
xchg
mov
mov
lret
lods
mov
addl
and
inc
sar
pop
cmp
jl
sbb
imul
sbb
arpl
rorb
pusha
add
and
sub
dec
les
push
outsb
adc
jl
adc
hlt
push
cmc
jb
add
lret
jmp
andl
pop
jp
lds
mov
out
sbb
outsl
outsl
int
and
inc
test
shr
add
andb
inc
xor
pop
pushf
mov
pusha
sub
mov
or
xchg
and
pusha
or
mov
sub
sbb
mov
mov
add
mov
pop
addr16
enter
and
aad
addb
add
pop
fcmovb
stc
fisubl
stos
xchg
mov
addb
out
inc
cmp
mov
clc
mov
leave
js
pop
inc
out
loope
bts
xor
stos
and
mov
int
data16
xor
paddd
xor
or
test
jg
push
loopne
add
loopne
mov
loopne
mov
pop
jb
mov
cld
lods
shl
or
add
rcr
xchg
mov
popf
stos
jbe
test
pop
sahf
push
repnz
pusha
je
dec
lea
and
pop
push
push
mov
add
and
test
sub
addb
cmp
mov
fnstsw
lods
loopne
and
rcrb
test
and
pop
sbb
fldl
rolb
divl
insl
bound
addr16
mov
mov
mov
jp
sub
add
mov
cmp
outsl
dec
pop
mov
dec
in
stc
xchg
cmc
out
ljmp
inc
and
jnp
mov
mov
addr16
shl
stos
adc
test
shlb
mov
gs
cmc
push
stos
pusha
and
jmp
loopne
mov
mov
addb
movsb
add
cld
fwait
lcall
xor
dec
rolb
decl
add
and
incl
mov
cmp
jb
sbb
sub
cmpsb
pusha
loopne
mov
pusha
cmp
loopne
dec
sub
shrb
test
mov
adc
xchg
movsb
add
ds
rorl
inc
rcrb
pop
sub
testl
lds
nop
insb
arpl
add
jl
lods
loopne
add
and
and
adc
call
addb
cmp
cmp
insl
popl
push
popf
aam
add
pop
sub
movsb
shlb
aaa
jne
pop
ret
outsb
pop
movsl
mov
clc
lds
pushf
mov
sub
and
andb
fnstsw
pop
popf
dec
fs
stos
shlb
and
pop
sub
pusha
push
fcomp
cmp
dec
lea
loopne
pop
lods
add
shll
out
adc
add
enter
xorl
xchg
or
add
mov
fsubp
pop
ret
sub
pop
adc
mov
outsl
arpl
jmp
jge
ret
push
add
loop
push
rcrb
jo
add
aaa
lahf
inc
jne
and
push
aad
cvtdq2ps
sbb
in
outsl
and
test
mov
push
std
movsl
icebp
jno
fnstsw
push
adc
push
and
add
push
fadds
jnp
stc
int
rolb
mov
das
fdivs
inc
push
in
test
inc
int
test
jecxz
pop
cmp
addb
dec
pop
or
fbld
std
or
and
pushf
and
dec
push
lcall
jge
push
add
sbb
mov
mov
dec
adc
bound
pusha
and
add
xor
call
cmc
mov
pop
mov
decl
lods
pusha
inc
mov
rorb
loopne
aad
jle
dec
pop
sbb
lret
and
xor
jl
fcoms
stos
mov
mov
add
jo
cwtl
sbb
jl
arpl
sahf
xchg
lock
scas
add
imul
addb
mov
sbb
pop
push
push
adc
xor
test
loopne
dec
jo
sbb
fldt
jle
mov
stos
fxch
in
push
adc
dec
add
dec
adcl
inc
add
repnz
lea
and
inc
inc
daa
gs
gs
sub
loopne
push
sub
and
iret
ljmp
xor
fs
mov
loopne
and
loope
pop
and
add
shlb
jno
dec
test
add
or
xor
call
add
add
and
cmp
filds
mov
add
rol
pop
and
pusha
pusha
aam
cltd
jg
insl
xor
and
lods
mov
pusha
and
push
pop
in
jmp
cmpsb
loopne
mov
dec
pop
ss
stos
rolb
push
inc
gs
ja
ja
xchg
out
adc
ljmp
push
mov
or
mov
ror
ret
pusha
add
mov
mov
xchg
sbb
es
and
jg
loop
adc
pusha
pusha
je
fxch
loopne
insb
or
adcb
lret
push
divb
adcb
shrb
mov
test
sbb
jmp
call
in
enter
pusha
add
mov
adc
inc
xchg
out
data16
shrl
and
mov
and
lods
lea
cmp
jp
int3
xor
inc
and
pusha
xchg
mov
inc
popf
add
add
sub
mov
pop
arpl
sbb
pop
in
jbe
xor
call
fmull
add
fmull
addb
mov
jg
roll
in
jmp
and
and
es
call
and
hlt
sub
shl
sbb
fs
adc
push
leave
xor
rorb
mov
jge
loopne
es
rorb
shlb
rcrb
add
je
push
repz
fwait
scas
and
idivb
psllq
push
dec
divl
add
cmp
jmp
xlat
push
rolb
cltd
js
add
mov
push
xchg
lret
ja
pusha
loopne
push
inc
and
cmpb
adc
dec
mov
loopne
sbb
mov
aas
inc
out
rolb
scas
or
lods
popa
dec
and
mov
and
inc
and
rclb
mov
adc
ret
notb
fs
cmpl
jecxz
cmpsl
mov
out
mov
ret
mov
insb
xchg
push
xchg
mov
loopne
cs
loope
sub
mov
mov
cmp
jb
mov
cwtl
aas
jle
push
fdivrl
and
xlat
cmc
clc
lods
stos
cs
pop
outsb
jbe
xlat
leave
sub
repnz
sub
stos
gs
sub
inc
jecxz
mov
inc
mov
and
cwtl
xchg
pop
out
pop
pop
out
shl
add
daa
pop
aas
mov
mov
das
sub
jb
pusha
dec
xor
gs
jno
jge
mov
mov
push
push
pop
push
and
mov
push
jg
jns
loopne
or
pop
ret
push
jmp
inc
cmp
xchg
add
xor
test
rorb
out
mov
into
mov
and
loopne
test
inc
and
mov
adc
shlb
pop
inc
pop
xchg
sub
rclb
sahf
in
cmp
inc
inc
test
push
mov
lret
shrb
inc
aaa
imul
xor
fstps
in
or
subb
imulb
ret
inc
out
loopne
sub
adcb
loopne
inc
hlt
xchg
mov
add
aam
das
aas
fildll
pop
or
fadd
sub
jnp
jl
mov
inc
mov
pusha
inc
popf
and
test
add
scas
pusha
xorb
icebp
sub
loopne
ficoms
xor
add
int
jo
cwtl
int3
pop
lock
mov
inc
push
mov
lea
cmp
and
mov
dec
adc
mov
and
in
pusha
mov
or
bound
add
cmpb
and
loopne
iret
pusha
pushf
mov
pusha
clc
in
data16
sub
sub
imull
outsb
mov
sbb
or
inc
xchg
cmpsl
outsb
fs
pusha
mov
lds
daa
in
aad
fistl
rep
sub
push
lret
and
movsl
xor
xor
and
and
mov
mov
in
repz
int
add
pusha
inc
outsl
inc
rep
addb
inc
jp
inc
and
and
xor
mov
in
rolb
int3
movsl
imul
mov
and
push
clc
lea
dec
jb
pop
xor
push
xchg
fdivs
pusha
ror
pop
and
and
mov
loope
mov
lcall
pop
lock
loopne
cmp
cmp
xor
cmpsl
pop
adc
add
dec
jns
in
or
mov
mov
xchg
pop
jae
sbb
clc
cmp
xor
movsb
andb
sahf
xor
mov
arpl
add
loopne
repz
ja
stos
xchg
push
pop
sbbl
mov
jmp
pop
push
addb
or
mov
loope
cmpsl
scas
pusha
add
addb
or
add
jg
push
inc
pusha
ret
out
int
inc
test
loopne
lock
cwtl
cmp
cmpsl
andb
outsl
cmpsl
inc
pop
mov
pusha
rorb
sbb
lods
andb
loopne
lods
mov
loopne
aam
adc
aaa
inc
xor
mov
pop
pop
jmp
jmp
xchg
ds
cmc
sbb
jecxz
push
lret
adc
adc
out
icebp
cli
in
jb
cli
loopne
cli
mov
out
ljmp
mov
add
shr
in
in
out
sbb
mov
pop
mov
out
pusha
loopne
test
and
add
and
adc
sbb
push
inc
sahf
call
add
scas
loopne
sub
cmpl
ljmp
mov
scas
std
hlt
fcoml
leave
cmp
fadds
xchg
pusha
pusha
fwait
out
inc
test
rclb
repz
ret
pop
shll
add
mov
loopne
loopne
add
pusha
and
mov
pusha
or
mov
ret
loopne
outsb
sub
gs
jae
sbb
jle
cmpsl
sbb
fbstp
add
inc
cmp
xchg
jg
aaa
imull
cld
fildl
out
adc
popa
cmpsl
shl
sahf
push
xchg
mov
or
jo
scas
loopne
aad
sbb
mov
pop
repz
xchg
mov
hlt
inc
jo
mov
mov
ds
popa
sbb
aam
inc
and
jno
aad
mov
and
sbbb
add
shrb
or
mov
inc
jl
push
mov
push
cwtl
les
xchg
andb
insb
and
inc
imul
scas
mov
negb
imul
rcrl
cmpsl
dec
ret
std
inc
fnstcw
sbbl
cmpsl
lds
leave
push
fstps
and
loopne
mov
and
in
jo
dec
push
xor
adc
add
imul
shlb
rolb
jl
pop
sbb
inc
jecxz
andb
sbb
inc
pusha
or
add
cmp
rolb
aam
add
lahf
rorb
arpl
inc
jle
adc
add
aaa
jns
and
pop
pop
repnz
or
ja
loope
shl
jnp
leave
daa
mov
adcb
gs
push
mov
cmc
stc
lret
lret
push
fidivs
adc
std
xchg
insb
mov
popf
ja
pushf
inc
add
mov
hlt
repz
ret
enter
inc
mov
pop
xor
outsl
mov
aaa
insb
fwait
push
inc
mov
cmpsb
andb
inc
mov
addb
and
rclb
mov
out
xchg
aam
push
add
inc
mov
xchg
nop
adc
dec
stc
dec
ljmp
aas
adc
shlb
xchg
xor
cmp
pushf
inc
cmpsb
inc
add
lret
mov
xchg
inc
jne
adc
fistps
cmpsl
mov
in
cwtl
inc
cld
jge
add
cli
dec
ret
add
andb
sbb
lods
pusha
mov
inc
fwait
sbbl
fcomi
mov
mov
aad
push
loopne
xchg
push
cltd
sbb
or
sub
pusha
and
je
mov
push
jmp
movsb
mov
loopne
arpl
push
jo
mov
mov
fldenv
mov
ret
adc
fstl
mov
loopne
xor
and
js
lret
cmp
pusha
fsub
inc
rcr
lret
aam
shlb
cli
sbb
add
cli
loopne
mov
xor
inc
adcb
bound
loopne
hlt
aam
pushf
dec
dec
mov
hlt
add
xchg
lret
add
shrl
add
andb
rcrb
inc
ret
sub
push
fidivrl
or
inc
in
in
add
insl
sbb
popf
adc
lea
sub
inc
jg
lret
lock
mov
xchg
mov
sbb
lret
adc
shlb
clc
sub
mov
cld
imul
rcrb
addb
jne
into
xchg
inc
outsb
push
xlat
popa
insb
std
sbb
outsl
push
dec
faddl
add
and
adc
jmp
shrb
fstps
shll
inc
xchg
cmpsl
and
rcll
sub
pusha
nop
xor
sub
rorl
add
loop
mov
sub
rolb
shlb
gs
outsl
or
and
pop
xchg
jno
or
add
iret
xchg
roll
pop
ljmp
les
cmp
pusha
loopne
popa
outsl
fidivrl
adc
daa
sbb
xor
lods
xor
pop
mov
adcb
lret
es
or
add
jg
dec
xchg
mov
sub
loopne
mov
and
lcall
decb
mov
jns
or
xchg
cwtl
push
inc
pusha
lret
into
ficoml
mov
fsubs
and
aad
stc
scas
data16
inc
call
fdivrl
enter
xor
shll
sahf
xchg
cli
adc
loopne
pusha
pusha
mov
pusha
mov
adc
cmc
jp
in
jecxz
iret
push
addb
and
loopne
mov
add
shlb
xchg
ret
cmc
adc
xor
adcb
rolb
rclb
inc
fucomip
xlat
mov
int
mov
cltd
xor
inc
mov
loopne
jno
xchg
into
mov
mov
adc
andb
push
shl
fs
pusha
add
jnp
pusha
sar
jg
shlb
and
mov
add
inc
pusha
xor
xchg
fidivl
xor
cmp
mov
or
mov
pusha
and
rclb
sbb
in
inc
in
arpl
lcall
or
xchg
mov
shlb
lcall
ret
hlt
stos
and
insl
pop
stc
xor
repz
add
xor
lods
inc
rcrb
jo
fldt
push
fldt
pusha
loopne
or
rol
sbb
scas
mov
shlb
int3
adc
stos
jae
scas
or
inc
cmp
pop
ljmp
jne
test
mov
loopne
fldt
xchg
pusha
push
push
xor
iret
push
rolb
loopne
scas
rolb
add
outsl
scas
adc
pop
lds
cmp
shl
popa
inc
sbb
fbld
pusha
sbb
repnz
shlb
cmc
stos
mov
andb
shlb
sarb
test
sbb
mov
jno
mov
and
sbb
stc
addb
pop
pop
and
and
popf
out
pop
jns
and
fcoms
push
mov
loopne
and
inc
ja
or
mov
bound
inc
loopne
add
mov
mov
aad
mov
lret
stc
mov
mov
rolb
stos
inc
loopne
hlt
insb
aad
inc
movsb
and
outsl
test
add
add
imul
mov
mov
push
shl
jl
je
cmc
and
loopne
mov
mov
pop
or
add
sbb
lds
inc
mov
add
ljmp
sbb
mov
pop
enter
inc
mov
cltd
ljmp
insl
mov
and
lea
mov
add
dec
rorl
test
pop
fistpl
sahf
sar
negb
add
push
mov
push
js
add
imul
enter
pop
or
and
imul
mov
arpl
loopne
xchg
sub
jns
shlb
dec
inc
dec
add
dec
sub
and
loope
insl
test
add
ljmp
sub
and
xchg
inc
xor
push
int
inc
loopne
add
pop
int3
rcll
jnp
push
mov
mov
js
lods
shlb
loopne
pop
xor
jg
lods
jg
add
loopne
imul
cwtl
mov
adc
out
and
inc
sub
push
xchg
out
xlat
and
add
add
mov
sbb
pop
std
andl
jl
cs
loopne
cmp
jl
sub
dec
lods
mov
bnd
pshufhw
xlat
fldenv
mov
or
arpl
lods
add
dec
dec
sub
mov
mov
loope
cmp
jmp
fistpl
inc
mov
jns
pusha
pusha
clc
insl
stos
dec
inc
stc
cwtl
cli
mov
and
add
dec
mov
mov
jg
add
pop
lcall
mov
pop
movsl
and
add
inc
fcos
push
fwait
movsl
or
pusha
test
add
les
adcl
popf
enter
orl
inc
pusha
mov
fiadds
loopne
out
and
loop
add
adcl
pusha
rorb
shr
bound
dec
cltd
fstps
fldl
scas
push
push
cmp
pop
aam
ret
push
lods
inc
addb
pusha
mov
scas
dec
cmpsb
inc
loopne
mov
movsl
outsb
test
and
mov
xchg
push
add
sub
adc
inc
pop
stos
nop
test
subb
and
and
shrb
push
aad
bound
xchg
dec
dec
in
pusha
add
orb
xlat
jle
out
jne
test
add
addb
push
adc
and
add
add
testl
inc
iret
adc
fcom
pop
push
sarb
fcmove
loop
rolb
aas
adc
divb
jp
sarl
adc
orb
mov
ljmp
pop
jp
fnsave
cmp
mov
shlb
xor
andb
icebp
mov
inc
add
repnz
inc
mov
adc
lods
addb
and
gs
hlt
mov
push
andl
and
fcomps
jecxz
sti
mov
adc
sarb
scas
iret
dec
push
aaa
test
mov
popa
add
mov
and
pusha
pusha
loope
leave
andb
in
lods
mov
loopne
test
cmp
pusha
inc
lahf
dec
out
nop
mov
popf
jo
and
pusha
out
cltd
adc
andb
or
sarl
jns
scas
repnz
adc
pusha
mov
aaa
loopne,pn
push
push
or
mov
push
jmp
aas
dec
jbe
not
or
push
addb
loopne,pn
xchg
hlt
dec
inc
mov
pushf
call
scas
and
push
and
lahf
pop
xchg
iret
test
inc
enter
cmp
rol
push
mov
jo
mov
mov
test
test
insl
xchg
ljmp
inc
cmp
pusha
inc
xchg
jns
mov
pusha
loopne
inc
mov
pop
pop
fisttps
enter
add
mov
xor
pusha
and
rclb
scas
jne
and
mov
or
mov
psubb
cmp
idivl
add
mov
mov
sti
or
rolb
aam
mov
add
fsubl
and
pop
lcall
pusha
jge
push
fisttpl
outsb
xor
jge
pop
das
push
push
inc
push
inc
mov
mov
cmpb
mov
bswap
sbb
jnp
sub
jns
cld
fisubs
test
insb
sbb
add
out
sub
add
cltd
or
shlb
and
pop
mov
add
bound
ret
sti
xchg
mov
pop
lret
mov
add
arpl
mov
addl
mov
jge
insb
roll
mov
mov
mov
xchg
jo
repnz
jmp
pop
mov
call
pop
adc
divb
loopne
and
inc
dec
xchg
inc
sahf
imul
and
in
add
inc
mov
add
jp
popa
mov
cmp
sub
mov
lods
jge
mov
out
dec
cmp
push
mov
push
cmc
jmp
or
loop
out
xchg
xor
mov
sbb
cld
pop
mov
shrb
loopne
roll
clc
jbe
mull
xchg
mov
mov
loopne
je
and
sbb
andb
loopne
addr16
andb
pusha
stos
xchg
insb
xor
jb
fwait
push
sbb
add
and
dec
xor
push
xor
mov
data16
jmp
adc
int3
mov
sahf
ja
fdivs
lds
and
into
je
cmpsl
lret
sbb
in
fsts
dec
pusha
and
imul
or
rolb
popf
scas
pusha
and
xchg
inc
jle,pt
add
inc
sub
nop
and
push
leave
add
mov
pop
cmc
in
push
cmpsl
lock
add
mov
in
cli
xor
in
rcrl
sarb
push
mov
aas
sbb
adc
inc
add
sbb
pop
xchg
xchg
add
add
mov
sub
jns
xor
ss
push
fwait
pushf
or
sub
mov
jne
xor
mov
adc
xor
push
sbb
and
ja
into
push
inc
mov
out
or
rolb
fcmovnb
mov
add
leave
cld
xor
push
call
xchg
jl
mov
push
xor
mov
sub
add
je
fsub
imul
js
rolb
mov
loopne,pn
push
scas
fndisi(8087
ds
adc
cmp
cwtl
out
out
and
dec
call
inc
jne
mov
dec
mov
jl
icebp
popf
add
and
lea
mov
test
add
in
mov
jne
mov
pop
pop
nop
ret
and
pop
sub
add
mov
lea
into
das
sbb
sbb
les
add
rolb
cli
dec
hlt
jne
adc
push
mov
test
add
xchg
inc
mov
shlb
xlat
fisubl
addb
push
inc
mov
sbb
ret
inc
dec
lods
inc
add
addb
je
addb
stc
xor
dec
dec
xchg
mov
jne
cmp
mov
sti
or
pusha
shr
push
add
scas
rolb
xchg
cmp
pop
lods
daa
adc
sti
arpl
sub
pusha
pusha
add
mov
fcoms
loopne
mov
sub
test
and
sub
test
pusha
sub
add
jecxz
iret
sub
and
push
filds
shlb
scas
loopne
add
les
loopne
outsl
xchg
scas
loopne
out
popf
push
pusha
shrb
xor
pusha
loopne
shr
xchg
cmp
sar
lret
push
ljmp
pop
pop
jae
mov
jmp
sbbl
movsb
rol
mov
lods
lods
mov
movsl
in
imul
stos
test
cmp
inc
sub
pusha
or
divps
jne
xchg
jnp
stc
popa
adc
pop
aas
scas
loopne
scas
and
jle
sub
sub
and
xor
in
sahf
cmp
sub
dec
andb
fucomp
xor
lcall
xchg
mov
jb
lods
imulb
mov
pop
jmp
bound
addr16
jnp
mov
scas
shlb
jnp
scas
cmp
jl
add
std
sbb
outsl
aam
mov
movsl
cmp
rol
popf
popf
adc
cmp
dec
mov
imul
jge
loopne
inc
xchg
inc
adc
nop
ret
mov
aas
adc
jnp
jg
sbb
movsb
add
inc
outsl
out
dec
andb
mov
xchg
into
test
mov
adc
add
mov
les
mov
out
and
inc
pusha
cmp
xchg
test
addb
shll
or
lahf
test
std
mov
subl
and
addb
cmp
inc
push
mov
and
pusha
xor
pusha
pusha
aas
adc
xchg
pop
lock
inc
xor
fs
rclb
mov
pop
loop
popa
xchg
loop
es
pusha
push
inc
xchg
fiaddl
add
and
add
add
out
in
cmp
add
xchg
addb
stc
cmpsb
addb
pop
movsl
fwait
cmpsl
aas
mov
xchg
rcrb
loopne
xor
arpl
repz
les
lds
jecxz
mov
mov
lock
pop
out
testb
jnp
adc
test
lods
mov
pusha
and
push
inc
and
lret
mov
shrb
xlat
cli
fldcw
cmpsb
add
mov
push
popf
cmpsb
addb
push
pusha
stos
xchg
lods
and
andb
and
orb
or
inc
fdiv
int
dec
pop
jbe
xor
adc
cwtl
cmpsb
shlb
loopne
and
lods
les
faddl
mov
inc
add
out
sahf
xchg
add
fdivrs
push
ja
xchg
rclb
and
xchg
mov
shl
inc
and
pusha
add
mov
dec
outsb
jne
popa
loop
mov
aaa
je
sbb
test
loopne
xor
push
mov
arpl
shll
mov
fcoml
in
push
aam
and
mov
outsl
loop
addb
and
mov
bound
mov
add
inc
lods
mov
addb
rorl
mov
add
into
jno
adc
les
cmpb
sbb
pop
insl
dec
data16
dec
aas
sbb
push
shll
pop
call
loope
sub
and
xchg
and
and
inc
dec
mov
and
popa
scas
addr16
add
xor
gs
or
push
cmp
call
in
sub
dec
cmp
lods
xor
lds
pusha
loopne
add
adc
pop
notl
rorb
mov
and
aaa
cli
mov
addl
in
adc
xor
leave
mov
add
decl
add
jecxz
sbb
loopne
shrl
dec
push
mov
and
cltd
lods
and
imul
sub
inc
jle
mov
mov
mov
mov
cmp
addb
loopne
mov
xor
pop
mov
pusha
insb
dec
fisubl
outsb
sbbl
inc
das
mov
pusha
xchg
dec
add
fmuls
leave
roll
add
shll
andb
sbb
orl
or
jl
mov
push
mov
cld
cmp
inc
jecxz
stos
call
inc
sarb
jb
jg
andb
pop
rol
mov
call
icebp
xchg
mov
mov
and
rcrb
sarb
push
xlat
or
addb
enter
cmpsl
jge
mov
mov
add
xchg
mov
inc
repnz
rorb
inc
shl
int3
dec
push
imul
rolb
xor
idivb
loopne
push
lcall
cltd
addr16
lods
and
stos
repz
jns
jae
lret
mov
test
lret
push
mov
add
add
add
