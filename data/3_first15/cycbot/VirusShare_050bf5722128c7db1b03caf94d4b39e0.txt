add
add
jo
inc
add
and
and
bound
add
add
inc
pusha
jb
inc
and
adc
add
and
xor
push
jo
jo
adc
and
add
adc
push
adc
add
push
jo
push
inc
bound
add
push
inc
and
bound
push
inc
push
inc
and
adc
adc
add
inc
adc
jb
jb
add
xor
add
and
add
jo
and
add
jb
pusha
add
pusha
jo
add
adc
add
add
and
add
adc
adc
add
bound
push
adc
push
bound
and
bound
add
pusha
push
inc
and
inc
add
push
xor
add
add
push
add
adc
inc
and
and
xor
inc
push
xor
inc
inc
inc
adc
push
pusha
add
add
push
push
push
inc
jb
xor
pusha
and
push
add
push
push
bound
inc
inc
xor
jo
and
add
inc
inc
jb
xor
adc
pusha
bound
add
push
inc
push
add
add
and
jo
add
add
and
inc
and
push
inc
inc
pusha
add
pusha
push
and
inc
push
inc
xor
inc
inc
add
xor
xor
add
xor
bound
jo
add
add
bound
inc
add
add
add
add
push
and
inc
push
add
push
pusha
xor
add
and
xor
jo
adc
and
jo
add
add
inc
pusha
adc
push
adc
add
xor
xor
push
jo
inc
bound
and
pusha
xor
xor
bound
adc
inc
bound
push
and
add
push
jo
jo
inc
add
pusha
adc
add
adc
xor
push
xor
xor
push
add
inc
adc
inc
xor
pusha
adc
jo
and
add
xor
add
jo
xor
bound
inc
and
add
push
add
add
jo
inc
xor
add
adc
add
jo
add
bound
bound
adc
adc
add
inc
pusha
add
push
add
add
push
jo
jo
inc
xor
jo
xor
add
adc
pusha
xor
add
adc
add
add
push
pusha
inc
adc
inc
xor
jb
inc
push
and
pusha
inc
and
xor
inc
and
jo
jo
add
add
pusha
adc
add
push
adc
adc
add
jo
and
push
inc
bound
push
pusha
adc
adc
add
adc
jo
push
inc
inc
and
adc
adc
pusha
and
add
add
inc
add
xor
add
and
push
push
inc
adc
and
xor
add
inc
and
jo
inc
and
and
and
push
add
and
inc
and
jo
xor
jb
inc
and
xor
and
xor
inc
xor
adc
adc
bound
inc
jo
pusha
inc
bound
xor
add
push
adc
xor
push
push
add
add
push
add
inc
inc
adc
add
inc
inc
add
add
inc
adc
jo
adc
and
jb
push
adc
push
add
and
add
xor
add
push
pusha
add
inc
inc
add
push
and
add
push
pusha
push
and
add
inc
jo
push
add
add
xor
inc
adc
inc
jo
push
inc
push
and
add
add
adc
jo
add
pusha
inc
and
and
adc
pusha
xor
inc
add
push
push
push
adc
adc
bound
adc
jb
jo
and
inc
inc
inc
add
adc
pusha
push
pusha
add
xor
add
inc
push
add
push
push
xor
adc
inc
bound
push
jb
inc
add
push
adc
adc
and
pusha
adc
bound
xor
inc
and
add
add
adc
bound
add
inc
pusha
add
add
add
xor
add
inc
and
push
inc
add
inc
inc
inc
add
and
and
push
bound
and
xor
inc
add
xor
add
push
inc
push
xor
jo
and
bound
adc
jb
xor
pusha
xor
pusha
adc
xor
pusha
inc
adc
xor
and
jo
add
adc
inc
xor
inc
add
add
jo
pusha
add
adc
add
xor
add
pusha
push
adc
add
add
xor
add
inc
adc
add
xor
add
inc
xor
xor
xor
inc
adc
push
add
push
adc
inc
add
jb
and
bound
and
inc
push
adc
add
add
pusha
push
add
and
jo
xor
inc
inc
push
adc
add
add
adc
inc
push
inc
push
inc
push
jo
jo
push
adc
push
jo
inc
push
adc
add
xor
bound
add
adc
push
inc
add
xor
xor
and
bound
pusha
jo
and
add
jo
and
xor
inc
add
add
inc
push
xor
inc
bound
bound
jb
inc
push
adc
inc
xor
add
adc
inc
jo
inc
inc
inc
inc
add
add
inc
bound
add
adc
and
xor
pusha
and
adc
add
pusha
inc
add
jb
adc
adc
bound
xor
xor
add
add
inc
adc
and
inc
add
push
xor
pusha
add
jo
jo
xor
xor
pusha
adc
pusha
add
inc
push
adc
adc
xor
add
push
and
and
adc
xor
add
add
adc
pusha
push
inc
add
xor
jo
and
adc
adc
add
jo
jo
add
jo
xor
inc
inc
push
pusha
xor
jo
add
and
pusha
push
pusha
add
inc
xor
add
add
and
add
push
add
xor
adc
push
add
push
bound
xor
add
jo
xor
add
adc
adc
adc
push
inc
pusha
xor
jb
pusha
xor
adc
adc
and
add
and
inc
and
add
and
xor
add
jo
add
xor
add
jo
adc
xor
xor
jo
inc
and
bound
add
push
push
add
and
push
push
and
add
jo
xor
add
and
and
add
and
and
bound
and
jo
and
inc
jo
add
pusha
adc
inc
pusha
inc
push
and
xor
push
push
jo
inc
pusha
add
pusha
inc
inc
inc
and
and
inc
pusha
adc
adc
inc
jo
xor
xor
inc
jo
push
push
jo
add
push
add
and
add
push
pusha
adc
add
jo
inc
add
add
push
add
adc
add
inc
add
pusha
add
add
adc
jb
xor
jo
xor
inc
xor
adc
adc
add
adc
jo
inc
xor
add
push
xor
adc
push
jo
inc
and
jb
add
push
inc
add
pusha
inc
add
add
push
jo
add
add
inc
inc
adc
inc
inc
and
add
push
add
adc
add
inc
adc
bound
push
add
add
add
inc
inc
xor
add
and
inc
push
add
inc
xor
adc
add
inc
pusha
jb
add
add
inc
pusha
adc
inc
push
pusha
jb
inc
and
add
adc
inc
add
bound
jo
xor
inc
add
add
adc
add
and
add
xor
xor
inc
add
jo
xor
xor
adc
xor
and
inc
adc
push
adc
add
pusha
push
add
pusha
add
jo
and
push
add
jo
xor
inc
and
xor
pusha
push
and
adc
pusha
jb
pusha
add
inc
adc
adc
adc
add
and
push
add
push
pusha
inc
inc
and
inc
xor
xor
add
jo
pusha
jo
adc
adc
push
pusha
and
push
and
pusha
xor
add
xor
pusha
inc
inc
and
add
xor
jo
jo
pusha
add
and
jo
jb
inc
push
pusha
inc
adc
xor
add
add
inc
and
adc
pusha
add
xor
pusha
jo
inc
inc
jb
adc
xor
inc
add
inc
add
push
and
pusha
adc
xor
adc
add
jo
adc
inc
add
bound
xor
add
adc
inc
adc
inc
pusha
pusha
push
push
adc
add
adc
push
and
inc
adc
push
push
and
push
and
inc
push
bound
xor
jo
adc
add
inc
xor
inc
inc
and
jo
pusha
push
add
jo
bound
add
and
and
add
inc
jb
inc
pusha
add
xor
xor
pusha
xor
adc
pusha
inc
inc
and
jo
xor
jo
add
jo
pusha
push
xor
inc
jb
inc
jo
xor
add
and
add
pusha
add
add
and
inc
add
inc
pusha
push
xor
inc
and
add
adc
and
inc
push
and
inc
inc
adc
add
jo
add
and
push
and
bound
push
pusha
xor
add
push
xor
pusha
pusha
add
jo
push
jb
add
jb
push
pusha
adc
jb
jb
add
inc
xor
adc
xor
and
add
inc
and
push
and
add
add
and
xor
inc
bound
xor
jb
and
add
jo
add
push
and
add
add
adc
pusha
jo
inc
jo
and
xor
add
xor
pusha
and
bound
jo
push
inc
add
inc
and
add
inc
and
jo
pusha
pusha
add
add
add
and
adc
jo
pusha
xor
add
xor
jb
pusha
inc
inc
and
pusha
xor
bound
adc
xor
inc
adc
and
jb
inc
add
inc
jo
and
adc
inc
inc
push
inc
jb
add
adc
and
and
pusha
push
xor
bound
add
xor
adc
jo
adc
bound
adc
add
bound
add
inc
inc
inc
and
xor
xor
inc
add
add
and
pusha
pusha
and
push
add
xor
adc
xor
inc
add
adc
add
xor
pusha
pusha
inc
inc
inc
jo
pusha
xor
push
add
add
adc
pusha
xor
adc
jo
push
add
inc
pusha
push
xor
and
add
and
add
adc
pusha
xor
xor
push
push
xor
jo
add
pusha
adc
inc
xor
add
adc
push
add
jo
add
add
add
push
xor
xor
add
adc
xor
inc
jb
jo
adc
adc
add
xor
jo
add
add
adc
and
adc
xor
add
inc
xor
push
adc
bound
and
jo
add
inc
xor
inc
push
add
and
pusha
xor
and
inc
inc
bound
inc
xor
inc
xor
add
jo
jo
add
add
jo
inc
pusha
push
and
xor
xor
jb
inc
xor
jb
add
xor
xor
add
add
and
inc
and
inc
xor
pusha
push
pusha
jb
and
adc
and
push
add
add
jo
push
adc
adc
pusha
and
and
adc
inc
and
jo
pusha
and
xor
inc
pusha
push
inc
and
inc
add
adc
xor
jb
adc
pusha
inc
adc
add
jo
pusha
adc
jo
xor
and
and
add
push
pusha
add
jo
xor
adc
add
jo
jo
pusha
jo
and
inc
push
xor
bound
jb
bound
inc
jo
inc
and
add
jb
adc
adc
and
jo
push
pusha
xor
add
adc
and
inc
jb
and
inc
inc
inc
add
xor
pusha
adc
add
adc
push
inc
inc
add
and
jo
add
adc
and
jo
push
adc
pusha
jb
adc
add
add
xor
pusha
jo
add
push
and
adc
push
add
pusha
xor
push
jo
bound
jo
pusha
add
xor
add
jo
bound
inc
add
push
adc
xor
xor
pusha
add
adc
adc
add
and
inc
adc
add
add
and
xor
push
jo
jo
add
push
and
bound
add
and
pusha
xor
adc
push
add
jo
inc
add
pusha
push
and
add
jo
adc
add
add
adc
adc
and
pusha
and
add
jb
adc
adc
and
jo
jo
add
add
push
inc
adc
inc
inc
add
xor
push
add
xor
pusha
inc
inc
jb
add
add
add
adc
and
inc
adc
adc
and
adc
xor
inc
inc
adc
add
inc
adc
add
and
inc
jo
add
add
and
xor
jo
xor
add
jo
push
add
push
jb
pusha
add
jo
jo
adc
inc
add
and
pusha
add
jb
inc
inc
push
add
and
pusha
adc
push
inc
xor
and
add
add
xor
pusha
add
adc
jo
add
add
add
xor
jo
bound
jb
add
push
push
adc
push
add
push
inc
jo
jb
add
bound
push
add
xor
pusha
and
pusha
and
and
inc
push
push
adc
add
adc
push
adc
and
push
push
inc
jo
push
xor
bound
and
and
push
push
jb
jb
jb
and
inc
adc
pusha
and
add
adc
inc
add
push
pusha
jo
and
pusha
add
push
jo
xor
and
adc
and
add
jo
jo
pusha
inc
inc
inc
and
push
jo
add
pusha
push
inc
pusha
inc
inc
inc
bound
xor
push
and
and
push
and
adc
inc
pusha
add
push
and
inc
pusha
xor
inc
push
inc
inc
inc
and
jo
adc
jb
and
xor
adc
and
adc
adc
add
xor
inc
xor
jo
jo
jb
jo
adc
and
inc
pusha
jb
push
inc
and
pusha
inc
adc
add
inc
adc
jb
xor
inc
pusha
add
pusha
add
inc
add
and
add
inc
adc
push
adc
jb
add
jb
push
xor
and
jb
xor
xor
push
inc
adc
pusha
jb
adc
inc
push
bound
pusha
jo
pusha
adc
push
push
jo
add
inc
jo
and
adc
jo
adc
and
pusha
add
inc
xor
push
add
inc
and
adc
adc
jb
bound
push
inc
inc
inc
add
inc
jo
pusha
pusha
add
inc
inc
push
adc
and
inc
push
adc
add
jo
and
and
xor
adc
push
adc
add
xor
push
pusha
add
inc
pusha
inc
adc
add
xor
push
add
jo
and
adc
add
add
jo
add
xor
or
dec
adc
aaa
rcrl
inc
mov
adc
add
xchg
add
jp
sub
mov
jmp
add
add
incl
push
jne
outsb
sti
sti
imul
ljmp
ds
imul
inc
lahf
dec
inc
xor
jl
leave
fidivl
adc
leave
frstor
popl
add
and
push
loopne
xor
or
daa
cmp
movsl
mov
rcrb
pop
lcall
adc
rorb
jbe
das
and
add
imulb
sub
in
push
inc
outsl
add
add
add
std
cmpsl
ljmp
rcll
subl
or
inc
inc
pusha
add
aaa
aam
xlat
mov
adc
mov
stos
pop
gs
inc
out
sahf
stos
scas
cmp
or
es
stos
xchg
repnz
clc
push
sarb
sbbl
mov
adc
pop
cmp
jno
nop
repnz
mov
mov
repnz
add
arpl
sbb
xchg
xchg
es
mov
pop
dec
mov
xor
jns
sbb
pop
mov
add
ss
hlt
repz
mov
ret
sub
rorb
fildl
mov
jmp
orl
push
push
mov
fdivrl
add
mov
and
mov
test
jo
xlat
sub
add
add
mov
pop
loop
cmpl
add
add
sub
es
jl
pushf
or
mov
sub
mov
pop
outsb
out
add
add
add
mov
pop
icebp
xchg
cs
adc
pop
mov
add
push
bound
mov
add
pop
and
add
add
lock
cmp
add
popa
lods
mov
outsb
in
dec
pop
divb
xchg
cmp
sbb
mov
mov
rcrb
repz
ret
icebp
sbb
push
jne
push
leave
jb
or
mov
add
fisttps
mov
xchg
push
sahf
push
test
subl
dec
mov
outsl
mov
add
add
call
adc
sub
add
add
lcall
add
add
rorb
sbb
inc
lds
sahf
mov
xchg
xor
mov
loopne
push
imul
std
mov
pop
cmc
push
ss
scas
call
jmp
in
movsl
dec
xchg
cmpsb
jp
psubw
xor
jge
test
js
and
cmp
sahf
xchg
jae
pop
jb
inc
add
das
mov
cmp
shll
test
jmp
push
add
xlat
jmp
dec
addb
add
mov
sub
mov
enter
add
in
sbb
pusha
add
add
clc
mov
mov
jno
int
loopne
add
add
imul
jo
jne
jbe
sti
out
lock
add
repnz
inc
cmp
leave
push
mov
pop
jecxz
out
in
xchg
push
shlb
mov
mov
add
push
pop
repnz
mov
add
out
test
ret
and
inc
sbbb
pop
push
jmp
fucomp
cmp
aad
sbb
in
sbb
inc
cld
mov
sub
test
out
dec
add
add
add
add
add
mov
enter
or
add
add
cmp
fwait
mov
mov
fwait
and
mov
movl
add
xor
bound
stos
pop
jns
mov
roll
add
test
popa
sbb
and
mov
dec
xchg
mov
and
mov
add
or
mov
sub
add
add
stc
xor
lret
add
pop
inc
add
add
out
mov
ja
push
jo
inc
inc
add
add
push
push
dec
and
cli
jmp
and
add
add
jecxz
cmpsl
addb
popf
add
ficomps
int
add
hlt
add
add
add
insb
add
add
ret
push
jo
repnz
insl
push
sbb
xor
add
imul
mov
add
rorb
int3
sbb
add
add
jbe
jo
out
fucomi
xchg
in
sahf
push
mov
jno
ror
aam
pop
mov
negl
rcr
aaa
xchg
repz
mov
mov
cmp
mov
add
push
cli
mov
aam
fimull
test
rclb
repz
repnz
aad
lds
insb
add
add
xlat
push
aam
test
mov
xchg
js
push
and
mov
mov
add
xchg
adcb
movsb
subb
jp
sbb
xor
addb
jl
sub
jle
or
xchg
pop
pop
aam
ficoms
jb
sub
add
data16
ljmp
add
add
outsl
or
add
add
and
add
add
stos
jbe
cmp
push
pop
mov
sarb
cltd
mov
repz
sub
cmp
ror
cmp
ja
jl
outsb
jg
js
roll
pop
push
mov
clc
cmp
mov
jno
aad
test
mov
add
test
add
pop
xor
cmp
es
xchg
mov
add
or
mov
bndstx
add
jecxz
fmull
add
add
rclb
mov
add
pop
movsl
popa
int3
repnz
push
jnp
fsubs
mov
push
test
push
inc
adc
lods
stos
insl
daa
subl
rcrb
stos
jecxz
inc
in
mov
add
cld
fimuls
pusha
add
add
dec
add
scas
out
pop
pop
xchg
dec
add
add
and
add
lret
repz
add
and
std
test
ret
xor
pop
pop
test
std
outsl
sbb
add
add
out
lcall
fadd
fmull
mov
push
push
push
pop
lods
mov
mov
repnz
mov
fldcw
sti
cmpl
lea
jno
insl
aaa
mov
in
adc
js
mov
add
add
xor
imul
pop
mov
xchg
jg
lret
and
jmp
push
lock
xor
add
xchg
in
inc
add
add
cltd
xchg
pop
and
mov
or
inc
xor
je
pop
xchg
mov
insb
add
add
bound
add
or
mov
sub
jno
dec
mov
pop
insb
add
add
and
pusha
add
add
push
cld
inc
add
inc
add
jp
push
xor
add
or
mov
insb
add
mov
add
add
add
or
mov
push
shufps
add
cld
out
aas
jl
inc
xor
adc
test
add
out
scas
push
fnstsw
xchg
inc
hlt
je
les
pop
out
popa
imul
btc
xchg
push
je
test
lds
sbb
insl
pushf
fwait
sbb
test
add
add
lea
inc
add
add
sbb
or
adc
in
mov
imul
adc
jbe
aad
xchg
popa
fdivrs
inc
jo
pop
cmpsb
xor
dec
xor
movsb
jo
xor
add
add
push
fstpt
push
mov
lds
mov
jb
xor
inc
sbbb
add
jle
jmp
cmpsb
lods
enter
mov
jle
mov
xor
and
mov
add
add
popa
stos
mov
lret
imul
fisubrs
cli
cmpsl
mov
sbb
add
add
out
push
adc
ljmp
leave
pop
mov
add
nop
cmp
int
and
mov
dec
enter
into
mov
cmc
movsb
sbb
add
add
mov
lahf
call
mov
call
daa
pop
leave
cmpsl
sbb
add
jo
inc
aad
add
mov
iret
movsb
and
add
sbbb
mov
bound
mov
add
cmp
add
lret
imul
vunpcklpd
add
add
push
jmp
ja
jge
cmp
jbe
dec
cmp
lahf
push
or
add
add
mov
cmp
xchg
ja
daa
inc
add
add
or
push
jns
cmp
mov
pop
mov
add
add
xchg
push
dec
cltd
adc
push
cltd
sbb
fistpll
lea
ret
sbb
mov
leave
loopne
mov
cmp
lock
pop
mov
xchg
mov
adc
and
add
mov
test
add
add
add
add
or
add
add
dec
add
add
adcb
add
cmc
cmpsb
pop
adc
lret
lret
in
xor
pop
daa
nop
push
stos
sbb
add
sbb
push
and
iret
xorb
iret
aas
arpl
lds
add
inc
add
jecxz
insb
add
add
push
add
je
scas
lcall
inc
add
add
ja
lods
arpl
jnp
xor
divl
mov
pushf
test
cltd
fsubrl
dec
dec
fsts
movsb
int
leave
push
fisttpl
add
add
mov
es
incb
cvtpi2ps
fisttpll
js
aaa
shll
or
inc
xchg
loope
in
mov
xchg
scas
lahf
out
fwait
xor
add
add
add
add
jae
jae
and
mov
or
mov
sub
add
add
dec
lods
push
pop
xorl
jp
push
negb
sbb
add
push
rcrl
inc
mov
mov
mov
lds
jg
cmp
adc
push
pop
aas
out
sub
mov
lcall
fcom
and
subl
xchg
out
stc
add
mov
ret
or
mov
inc
cmp
mov
adc
add
test
cmpsb
dec
add
add
fimull
lcall
pop
aaa
outsl
xor
push
dec
lds
add
adc
pop
mov
jmp
xchg
xchg
sar
xchg
pop
xor
iret
pop
pop
inc
add
add
jmp
cmp
add
jmp
add
fidivl
cmp
movsl
mov
add
aas
and
out
xor
add
add
add
insl
add
insl
in
jle
cltd
xlat
push
cwtl
jae
mov
cmpsl
mov
js
and
add
out
jns
add
pop
clc
inc
push
imulb
mov
jbe
xchg
sub
xorb
adc
jae
cmpsl
in
or
add
add
fmull
sub
mov
out
inc
xsha1
cmpsb
or
add
add
fsubs
and
or
mov
imul
hlt
xor
add
cmp
aaa
jge
push
lcall
add
add
add
xchg
ss
push
clc
push
mov
and
add
add
das
cmp
in
int3
fstpl
add
add
add
sahf
push
int
push
and
sahf
clc
sub
mov
and
add
add
loope
and
or
jmp
add
mov
add
add
add
mov
add
add
add
outsl
sbb
sbb
jp
clc
sub
inc
adc
aas
sarl
adc
lods
cltd
push
or
pop
add
cmp
dec
fcmovne
mov
add
dec
in
xlat
in
test
das
mov
add
insl
sub
add
test
adc
in
and
mov
sub
loop
cwtl
std
xchg
sti
das
cmp
mov
inc
jmp
mov
mov
imulb
sbb
imul
adcl
test
fcompl
lods
ja
mull
sbb
add
add
add
or
mov
js
lods
dec
dec
aam
pop
js
add
in
rcl
js
stos
xor
push
leave
pop
outsl
in
inc
nop
insb
add
add
enter
adc
sbb
loop
mov
jns
test
ljmp
xor
xrelease
loop
sbb
fcmovnu
and
mov
add
add
movsl
cmp
std
mov
add
add
or
mov
add
loopne
lea
mov
pop
mov
cmp
add
add
sub
add
push
lahf
cmp
add
add
add
cltd
push
test
fucomi
cmpsl
insb
add
add
or
add
add
sub
mov
add
add
call
and
lods
repz
add
mov
jp
xchg
je
imul
cmp
mov
add
add
mov
xchg
lret
movsl
push
xchg
sub
mov
jo
xor
das
sub
mov
shll
clc
push
iret
or
add
add
and
js
add
add
mov
incl
ret
out
aaa
daa
jge
jo
testb
ljmp
add
cmpsb
add
lods
aad
shrl
add
icebp
jns
mov
cltd
test
xchg
add
mov
dec
add
cs
jg
jge
adc
mov
inc
jmp
std
adc
fsubr
scas
mov
and
mov
cmp
pop
dec
mov
push
mov
aam
sbb
fdivp
cmp
mov
mov
aas
xorb
and
add
add
xchg
push
into
addr16
pop
mov
add
push
jecxz
aaa
fstpt
add
add
test
sub
sub
add
add
add
add
stc
pop
push
push
add
in
enter
or
add
outsl
sbb
push
or
add
cwtl
push
pop
testb
adc
push
add
add
stos
mulb
push
jecxz
sub
add
mov
mov
dec
lret
push
loopne
jmp
add
add
dec
add
add
fisubs
daa
cmpsl
repnz
sbb
jp
into
mov
push
xor
add
xchg
push
cli
stos
lcall
add
mov
add
mov
ret
inc
pop
iret
xor
inc
or
rcll
or
aaa
mov
adc
int
lret
sbb
sbb
inc
lea
add
add
out
es
xchg
push
add
add
add
xlat
addr16
sub
or
inc
aas
mov
add
mov
iret
mov
add
or
aad
idivl
shlb
dec
loope
add
icebp
aad
mov
or
add
add
add
insl
sti
sbb
push
cmpb
jno
ret
and
mov
mov
out
test
aad
cmp
mov
stc
nop
pop
in
push
mov
jmp
mov
mov
sbb
push
cwtl
sub
mov
cmp
shlb
sarb
jge
dec
add
add
es
add
mov
add
add
add
add
cmpsb
lea
lock
and
add
add
add
test
pop
xchg
dec
lods
insb
add
jbe
xchg
pop
popa
dec
sub
ret
es
stos
aam
outsb
pushl
pop
mov
fwait
add
add
add
push
cmpsb
dec
add
add
jno
aaa
mov
stos
bound
xor
out
inc
in
sbb
pop
mov
add
adc
inc
mov
pop
cmp
add
add
add
add
or
add
mov
add
stos
cmpsb
xchg
nop
int3
stos
aam
pop
mov
mov
mov
mov
add
cli
sbb
push
cmp
int
sub
repz
addr16
clc
mov
and
jne
jae
leave
sbb
mov
xor
mov
popa
mov
mov
jge
pop
in
push
sti
outsl
stc
mov
mov
sbbl
add
stos
xor
outsl
dec
adc
pop
pop
dec
je
dec
add
push
jo
mov
outsl
xchg
mov
mov
add
fistps
into
in
add
ds
mov
add
outsl
sbb
in
or
add
fwait
clc
repnz
add
or
mov
out
shrb
lret
add
add
js
mov
pop
aaa
mov
lea
cwtl
cmc
mov
cs
mov
idivl
pop
push
jl
sbb
mov
adc
fmuls
sahf
mov
add
out
mov
mov
mov
push
aas
lahf
loope
mov
xchg
movsl
stc
adc
movsl
nop
ffreep
imul
mov
dec
add
add
out
mov
in
out
sbb
lcall
jl
hlt
mov
push
scas
jo
jbe
add
add
lcall
add
add
pop
cli
adc
add
xchg
andb
paddw
imul
cltd
flds
jno
xchg
mov
inc
adc
addr16
sub
add
add
add
outsl
hlt
les
in
add
jg
js
and
cmp
jp
inc
jg
add
inc
test
mov
mov
jne
jns
outsb
rcrl
cli
into
mov
insl
cmpsb
ljmp
jnp
push
ret
int3
icebp
lahf
mov
shll
fidivrs
lret
jmp
push
jns
pusha
add
add
mov
je
test
loop
pusha
add
add
mul
xchg
das
daa
addr16
mov
add
mov
jae
fwait
in
fbld
and
jp
xchg
test
add
mov
add
cld
ds
and
inc
lock
inc
fstps
mov
jle
ficomps
in
xor
pop
sbb
add
ror
cmp
fucom
pop
sub
add
add
imul
roll
rorl
add
push
adc
add
jbe
mov
mov
jle
pop
jae
sbb
cmp
xchg
adc
xchg
xchg
push
sub
jb
add
lret
pop
sbb
insb
add
add
mov
xchg
push
cli
xor
ds
movb
mov
cmp
inc
sarl
ljmp
les
pop
and
jns,pn
ret
and
xchg
pop
pop
inc
xor
lret
int3
xor
push
out
mov
mov
mov
or
lahf
jg
mov
add
or
inc
lcall
add
add
add
add
jle
and
add
stc
insl
mov
mov
lock
fmulp
inc
test
popa
pop
and
jp
dec
add
mov
lods
in
adc
xor
inc
rcl
adcl
icebp
xor
adc
or
pop
cltd
xchg
lcall
adc
push
mov
sti
mov
add
add
mov
stos
mov
add
add
ret
cmp
cmpsb
nop
ror
hlt
test
sbb
outsb
lods
mov
add
mov
add
add
inc
int3
xor
mov
pop
loope
add
add
outsl
sbb
xchg
inc
push
inc
add
add
jmp
cmpsl
push
and
out
sahf
cmpb
ja
add
stos
pop
lahf
fisttpll
bound
sub
add
add
add
cmova
mov
movsb
sahf
out
and
push
jno
dec
xor
data16
add
add
cmp
add
cmpb
mov
pop
out
insb
add
inc
add
add
out
fistpl
sbb
ss
test
add
add
add
in
or
cmp
mov
pop
lea
fildll
add
add
push
inc
faddl
jbe
inc
dec
repz
lock
xlat
movsb
mov
mov
ss
pop
sub
add
pushf
dec
add
lahf
inc
jnp
prefetcht1
xchg
jmp
sub
add
add
dec
add
repz
sub
leave
pop
loope
int3
movsb
mov
adc
jp
lea
or
test
add
add
addr16
rol
inc
mov
lcall
add
mov
inc
xchg
scas
in
jle
mov
cmp
jge
push
ret
lcall
je
push
mov
dec
lods
dec
add
add
push
xor
jbe
pop
cmp
dec
add
or
add
add
aam
dec
add
add
mov
mov
repz
add
add
xchg
cltd
add
aam
sub
mov
imul
and
lret
mov
xor
jbe
shll
add
fcmovu
lahf
push
aad
insl
leave
mov
andb
add
inc
popa
pop
lock
fwait
out
add
add
add
insl
cmpsb
stos
dec
add
mov
push
and
mov
fmull
add
in
jne
jl
mov
mov
loop
dec
add
push
test
enter
mov
out
push
fsub
lahf
inc
add
add
cmpsb
fldl
sbb
add
mov
stc
mov
inc
dec
jae
xor
cmpl
outsb
pop
out
add
cs
pushf
jb
mov
cmp
sbb
lret
mov
add
sub
jb
and
add
add
xor
lods
sub
test
push
imul
ss
add
xchg
les
sbb
clc
outsb
mov
lcall
dec
add
add
rclb
repz
add
add
dec
les
add
jb
mov
add
adc
outsb
shrl
mov
cmp
ficoms
mov
push
cmpsl
or
cmpsl
rcrl
mov
add
add
adc
add
pop
insb
ficoms
int
subl
and
push
mov
add
cmp
jne
lea
push
push
xchg
call
cld
or
mov
shr
shr
mov
add
push
push
push
push
call
leave
ret
ret
mov
mov
or
mov
lea
lea
sub
shr
not
inc
sub
mov
clc
je
push
pop
add
lea
clc
jmp
ret
push
mov
sub
lea
orl
movl
push
push
push
push
push
push
clc
call
test
je
in
add
add
call
test
jne,pn
mov
add
lods
push
fmull
dec
add
add
lods
lret
gs
adc
ret
pop
scas
sub
das
std
mov
pop
icebp
ljmp
add
lea
add
add
in
sbb
cmpsb
outsb
and
mov
loope
imull
add
add
dec
mov
insl
andl
push
vpcomb
aas
pop
pop
and
cmp
testl
add
stos
or
mov
mov
add
push
push
push
pop
bound
cmp
mov
sub
add
sbb
roll
std
inc
pop
clc
lahf
fcoml
mov
dec
sbb
into
cli
lcall
add
add
in
mov
dec
mov
cld
test
cmp
add
stc
push
js
ret
mov
add
mov
jle
cltd
push
mov
inc
push
dec
loop
les
mov
addr16
xchg
call
stos
mov
add
add
fcom
ret
inc
sti
bound
mov
cltd
lea
sub
aaa
mov
dec
add
add
xchg
or
mov
out
push
xor
add
call
add
pop
insb
add
sti
rcl
mov
daa
cltd
adc
push
xor
dec
add
add
lods
movsb
mov
mov
mov
add
jle
mov
daa
push
dec
add
das
mov
lock
xchg
dec
cltd
pop
int3
or
jae
mov
lock
addr16
addr16
adc
jno
add
aam
jl
shld
pop
hlt
add
add
add
xchg
lock
mov
jge
sub
adc
jb
arpl
inc
pop
lds
pusha
add
jne
adc
mov
mov
stc
lcall
add
add
in
push
inc
add
add
ds
jle
xor
ljmp
aas
sub
mov
rcl
adc
add
add
add
push
push
mov
inc
dec
and
mov
lcall
add
ror
cs
loop
xchg
or
push
add
add
add
jle
adc
ret
mov
popf
push
ss
dec
insl
gs
ds
popa
pop
hlt
test
pop
mov
push
movsb
lods
xor
lock
je
shrb
shll
mov
mov
lods
cld
add
add
jecxz
daa
adc
test
push
add
mov
adc
xchg
pop
pop
push
lds
ja
pusha
add
jmp
push
push
popf
cmp
sbb
outsl
sbb
pop
jne
and
mov
iret
subb
out
sub
add
add
add
jns
push
sbbl
pop
scas
cmp
dec
add
cmp
movsl
sbb
pop
daa
mov
dec
add
out
mov
pop
cmp
xchg
add
add
cmp
flds
or
add
imul
aas
cltd
pop
arpl
pop
iret
pop
pop
mov
add
add
add
jge
and
enter
lret
add
add
adc
es
add
mov
jo
sahf
outsl
cs
test
aad
xchg
jne
ret
mov
dec
push
ficoms
mov
shl
jge
lea
inc
lahf
pop
inc
cmp
add
out
add
add
inc
add
add
in
imul
add
add
xor
fildl
notb
aas
push
dec
or
mov
out
or
mov
and
add
add
into
test
loop
jo
dec
scas
push
inc
sbb
push
pop
or
mov
int
stc
jl
lahf
pop
xchg
leave
int3
movsb
test
mov
cmpb
jnp
pop
sarb
dec
arpl
jo
pop
xchg
cmpsb
xchg
sbb
int3
test
test
lret
mov
add
add
jge
pop
addr16
cmpsb
fdivrl
jo
add
rorl
add
xchg
mov
stc
push
movsb
fcompl
ss
dec
add
movsb
sbb
add
std
fcos
lret
dec
xor
add
add
mov
decl
sub
push
popa
pop
add
int
daa
sbb
out
add
xchg
sub
lods
fwait
std
bound
les
in
mov
lods
dec
sbb
xchg
push
jmp
and
mov
lahf
pop
inc
ja
imul
mov
adc
mov
cmp
call
mov
add
jle
dec
dec
add
add
lods
cmc
dec
mov
add
add
pop
mov
dec
in
ret
pop
xchg
and
add
add
add
mov
add
mov
ret
addr16
add
cmp
lea
repnz
push
and
add
add
ss
stos
pop
pop
iret
in
xor
add
leave
or
add
add
dec
imul
add
mov
pop
jg
imul
ljmp
shll
das
push
push
test
mov
xor
fmull
push
insb
add
lcall
dec
add
add
add
add
xor
outsl
sbbl
add
add
notb
es
mov
je
shrb
aas
sbbb
mov
fsubrp
jle
push
stos
mov
add
xor
or
add
cmp
mov
sub
add
add
mov
in
lods
rorb
add
add
jge
scas
mov
fbstp
sub
add
add
add
sarb
add
dec
add
out
pop
cmp
fisubl
mov
std
pop
stos
jp
fsubrp
lods
mov
jle
jnp
mov
add
call
call
test
testl
add
add
adc
push
dec
mov
movsl
jecxz
repz
dec
add
add
push
mov
and
mov
mov
jns
mov
jnp
mov
and
mov
inc
pmulhw
inc
push
cs
xor
push
sub
add
add
push
cli
cltd
aam
adcb
je
cmc
cmpsl
dec
add
add
rol
dec
add
add
jge
pusha
add
add
enter
hlt
mov
and
xor
inc
cmc
pop
sbbb
fadd
outsl
sbb
pop
roll
xchg
or
add
add
add
mov
inc
push
mulb
mov
icebp
pusha
add
add
jae
aas
jo
divb
imul
add
rol
iret
sti
pop
adc
ret
add
add
mov
mov
add
lahf
mov
add
add
das
pop
stos
cmp
enter
add
add
gs
cmpsb
lds
popa
dec
add
add
xchg
dec
mov
push
pop
lcall
in
adc
frstor
insb
add
add
rorl
push
js
adc
cmp
aaa
nop
sub
pop
js
add
mov
cwtl
pop
mov
std
push
out
nop
cmp
stos
xlat
dec
add
adc
test
aaa
jmp
mov
dec
add
sub
jp
mov
mov
push
jle
decb
pop
repz
aaa
or
mov
mov
movsb
inc
daa
dec
add
add
pusha
add
dec
add
add
incl
test
sti
sub
in
fdivrl
pop
ret
mov
sbb
insb
add
add
and
out
sbb
fimull
adc
sbb
iret
mov
cmp
push
emms
stc
pop
insl
cmp
sbb
mov
movsl
push
out
jae
lcall
add
dec
mov
xchg
mov
sbb
repz
add
jne
xor
adc
add
mov
xor
add
dec
mov
fucom
push
xchg
mov
cmc
iret
roll
fnsave
add
mov
add
dec
add
call
loop
add
add
lret
je
adc
push
into
sbb
rolb
add
jo
and
std
jge
cmp
xchg
and
mov
push
mov
daa
cmp
or
add
and
notb
xchg
pop
cmp
cmp
push
inc
cwtl
pop
xchg
lock
test
add
aas
adc
and
mov
sub
mov
jne
ss
cmp
add
mov
sub
data16
inc
add
sbb
add
mov
add
add
add
xchg
xor
dec
add
imul
mov
dec
mov
add
stos
add
cwtl
out
dec
add
add
orb
aad
xor
add
add
movzbl
in
icebp
mov
sub
pop
ret
xchg
add
add
add
xchg
pop
ljmp
ljmp
jno
adc
repnz
rorb
adc
sbb
ljmp
push
inc
out
idivl
add
push
cmp
call
mov
mov
cmp
popa
fnstcw
pop
test
add
add
xorb
push
inc
pop
dec
imul
ja
adc
inc
xchg
mov
icebp
jnp
rcll
jo
lock
add
add
pop
xorb
cmc
pop
out
daa
icebp
arpl
mov
lods
or
sbb
pop
xchg
mov
loop
jmp
cmpsl
icebp
int
mov
mov
std
adc
ficoml
jne
mov
add
add
out
add
adc
nop
loop
bound
inc
test
test
es
in
dec
add
nop
daa
xchg
sbb
das
add
or
adc
movsl
jg
fwait
xchg
xchg
hlt
fmuls
pop
mov
pushf
addr16
add
xchg
add
xchg
push
sbb
add
imul
add
inc
dec
or
pop
jno
mov
lret
push
or
jmp
inc
add
add
adc
in
dec
add
add
hlt
mov
xlat
leave
in
arpl
jbe
cltd
ror
jg
lahf
add
and
jno
cs
adc
xchg
xor
pop
mov
jmp
daa
sub
dec
ss
bound
les
out
jbe
out
sbb
mov
dec
push
jbe
jecxz
out
push
mov
inc
add
push
out
hlt
ljmp
mov
push
mov
inc
out
push
xor
inc
mov
add
xor
in
or
add
add
jnp
je
mulb
pop
or
lds
dec
inc
xchg
hlt
xchg
mov
xchg
add
add
add
add
add
cwtl
dec
mov
mov
fmull
add
test
jmp
or
mov
sub
mov
pop
pop
inc
xchg
or
fwait
adc
clc
leave
lods
lret
mov
push
or
outsl
lcall
add
sbb
add
mov
mov
fstpt
cmpsl
xchg
xchg
jp
jnp
sti
bound
pusha
add
mov
mov
add
mov
loopne
xor
subb
icebp
add
mov
movsb
sub
mov
push
repz
add
add
xor
add
add
push
sub
dec
jg
daa
negb
in
dec
dec
add
add
xchg
fdivp
cwtl
mov
sub
add
pop
mov
cmp
out
popf
inc
clc
scas
cmpsl
je
add
add
add
push
push
mov
jns
xor
add
add
int3
inc
ror
lcall
push
mov
fimull
lock
mov
push
insl
mov
ret
and
loop
push
pushf
pop
jno
xchg
dec
add
add
add
add
add
fidivrl
jbe
pop
shl
dec
jl
call
add
sub
add
add
xor
jae
std
push
enter
add
in
pop
mov
push
sub
shrb
mov
test
or
add
sarb
add
lret
push
jb
movsl
repnz
dec
add
test
xchg
cli
add
cs
inc
test
imul
in
psubsb
jl
jno
lret
and
out
jl
scas
in
xor
add
add
add
add
xlat
xor
mov
ja
push
daa
sbb
jne
mov
and
ljmp
add
out
push
mov
add
add
add
add
arpl
pop
xchg
rol
pop
jmp
xor
or
jbe
pusha
add
add
or
lahf
ret
xor
outsl
dec
inc
std
xorb
add
pop
or
add
rcll
add
sub
fwait
test
add
add
lret
stos
or
add
sbb
sahf
out
jae
cld
roll
mov
arpl
xor
dec
add
add
add
imul
inc
add
add
ret
add
add
sbb
sbb
loop
fistpll
mov
arpl
cmpsb
mov
mov
das
xchg
sbb
add
pop
cmp
popa
push
pop
push
arpl
jae
dec
add
add
ja
push
sbb
repz
cmpsb
mov
sbb
fistpl
mov
inc
add
in
inc
add
fsubl
inc
jns
push
jg
add
dec
add
in
int3
sbb
movsl
or
mov
add
jno
aam
sub
mov
sbb
int
out
add
js
jo
std
jbe
add
add
inc
add
add
xchg
repz
add
mov
loop
xchg
cld
cli
test
imul
mov
andb
add
add
add
outsb
pop
xchg
mov
lds
bound
mov
inc
push
mov
jno
add
pop
popf
adc
ret
mov
iret
iret
fdivl
xor
cli
or
push
clc
repz
jmp
jae
mov
add
add
shr
nop
push
mov
leave
nop
jmp
add
int3
pop
test
or
add
sub
nop
push
mov
leave
nop
jmp
lahf
add
fiadds
fimuls
lcall
jmp
jae
add
add
add
mov
push
mov
leave
nop
jmp
add
lea
sbb
add
fdivrp
inc
call
clc
repz
jmp
jae
push
jnp
add
add
sbbl
add
adcl
add
add
mov
add
and
arpl
add
repz
jmp
jae
push
xchg
mov
add
add
add
jmp
lea
add
lea
inc
xor
add
sub
add
add
pop
fistpl
push
mov
xchg
ret
add
add
mov
cmpl
repz
jmp
jae
aaa
test
add
test
mov
mov
nop
jmp
add
divb
xchg
or
add
add
mov
xchg
ret
xor
add
aam
fiadds
and
repz
jmp
jae
push
add
lahf
in
sbb
add
fiadds
xchg
sub
push
mov
xchg
ret
add
add
outsb
int3
test
es
push
jmp
addl
add
add
push
add
je
pop
push
mov
xchg
ret
mov
add
and
add
push
mov
leave
nop
jmp
add
bound
xor
sbb
jne
clc
repz
jmp
jae
outsb
lahf
mov
lods
scas
pop
clc
repz
jmp
jae
sbb
add
add
add
add
xor
add
cmpsb
insl
inc
add
pop
outsb
add
push
push
stos
dec
push
clc
repz
jmp
jae
test
mov
add
add
push
orl
jmp
jae
add
clc
loope
jbe
add
add
add
repz
jmp
jae
inc
bound
aam
push
mov
push
push
pop
push
mov
popa
adc
push
jg
add
add
add
add
dec
add
fiaddl
jb
xor
nop
push
mov
leave
nop
jmp
lea
pop
mov
add
add
xor
repz
jmp
jae
jbe
adc
add
add
add
xchg
push
mov
xchg
ret
push
xchg
dec
add
add
add
test
clc
repz
jmp
jae
addl
add
in
add
mov
imul
add
out
movsb
test
add
adc
add
cmp
jo
add
clc
repz
jmp
jae
int3
jnp
add
add
clc
repz
jmp
jae
mov
into
ficomps
sbb
xor
add
push
mov
xchg
ret
adc
bound
aad
sar
repz
jmp
jae
add
add
loope
dec
jnp
add
ds
jne
clc
repz
jmp
jae
mov
movsb
mov
decl
mov
leave
nop
jmp
es
add
add
add
nop
push
mov
leave
nop
jmp
sbb
fiadds
or
test
add
clc
repz
jmp
jae
add
add
fidivl
enter
jmp
jae
add
sbb
mov
add
inc
add
push
mov
xchg
ret
fiadds
lcall
add
sbb
cld
jmp
jae
add
adc
and
es
mov
push
mov
xchg
ret
add
add
clc
add
add
testl
clc
repz
jmp
jae
aam
mov
jae
add
clc
repz
jmp
jae
fiadds
into
add
xor
dec
add
popa
add
clc
repz
jmp
jae
add
add
out
sbb
add
or
repz
jmp
jae
sti
add
add
pop
and
in
mov
mov
sub
repz
jmp
jae
add
out
add
fiadds
add
add
sub
in
leave
nop
jmp
add
adc
xor
add
popl
nop
push
mov
leave
nop
jmp
jnp
into
test
mov
push
mov
pop
ror
mov
add
mov
sbb
dec
mov
cld
jmp
jae
pop
add
addl
xorb
nop
push
mov
leave
nop
jmp
add
add
sbb
or
mov
leave
nop
jmp
pop
add
xchg
jl
add
add
add
push
push
mov
xchg
ret
jl
add
add
add
mov
movsl
push
inc
add
add
mov
add
add
sbbb
loopne
repz
jmp
jae
fdivrl
add
into
orl
jmp
jae
lea
outsb
mov
and
cld
jmp
jae
xor
jl
add
adc
clc
repz
jmp
jae
add
add
out
sbb
add
push
push
mov
xchg
ret
es
and
mov
add
inc
add
mov
mov
add
add
jne
clc
repz
jmp
jae
add
mov
jmp
clc
repz
jmp
jae
bound
adc
mov
in
leave
nop
jmp
lcall
add
add
add
cmp
push
mov
add
add
inc
or
add
add
leave
add
std
arpl
xchg
ret
push
test
and
or
in
add
pop
sub
negl
inc
add
add
nop
push
mov
leave
nop
jmp
movsb
sti
movsb
add
add
inc
clc
add
add
out
test
add
nop
push
mov
leave
nop
jmp
add
mov
inc
subl
clc
repz
jmp
jae
add
in
add
add
add
and
push
mov
leave
nop
jmp
mov
add
add
add
add
clc
repz
jmp
jae
mov
jnp
add
add
add
add
fimuls
gs
push
mov
xchg
ret
add
bound
and
mov
shr
clc
repz
jmp
jae
add
add
add
add
repz
clc
repz
jmp
jae
clc
out
add
adc
add
mov
leave
nop
jmp
add
add
roll
repz
jmp
jae
adc
movsb
out
aaa
test
je
or
mov
js
clc
repz
jmp
jae
lea
int
add
xchg
test
divb
add
nop
jmp
sbb
add
add
push
mov
je
sub
aam
inc
add
add
add
add
lcall
inc
add
aam
fcoml
sti
add
push
inc
add
sbb
add
mov
and
add
clc
repz
jmp
jae
add
lea
add
add
dec
add
add
clc
repz
jmp
jae
add
aam
xor
mov
add
clc
repz
jmp
jae
inc
add
add
jnp
mov
cld
jmp
jae
adc
fcmovu
xchg
xor
add
arpl
repz
jmp
jae
add
add
pop
jl
mov
jne
clc
repz
jmp
jae
add
add
add
fcompl
dec
add
add
arpl
in
leave
nop
jmp
and
add
mov
mov
clc
repz
jmp
jae
add
lcall
add
movb
repz
jmp
jae
add
mov
add
push
mov
xchg
ret
pop
lcall
add
psubb
cld
jmp
jae
in
xor
out
add
mov
mov
push
mov
xchg
ret
test
add
add
inc
nop
push
mov
leave
nop
jmp
lcall
in
fidivs
pop
cwtl
enter
call
inc
add
add
xor
sti
bound
jl
add
aam
add
add
bound
mov
mov
clc
repz
jmp
jae
xchg
add
and
mov
test
push
mov
leave
nop
jmp
add
pop
add
xor
xor
nop
push
mov
leave
nop
jmp
add
add
test
push
add
je
clc
repz
jmp
jae
addl
add
add
add
cmp
in
leave
nop
jmp
sbb
add
clc
add
add
xor
nop
pop
sub
repz
jmp
jae
jbe
sbb
mov
dec
push
mov
xchg
ret
sbb
mov
add
lahf
add
add
mov
clc
repz
jmp
jae
test
adc
add
fwait
push
mov
xchg
ret
add
sbb
add
push
add
add
mov
push
mov
xchg
ret
add
add
add
add
mov
nop
push
mov
leave
nop
jmp
add
add
jmp
rorl
mov
xchg
ret
add
add
add
test
repz
jmp
jae
add
cmp
xor
clc
repz
jmp
jae
test
add
aam
test
nop
push
mov
leave
nop
jmp
add
sti
mov
test
add
and
add
add
pusha
clc
repz
jmp
jae
add
fsubr
test
xchg
add
add
add
push
and
sti
mov
jl
test
add
mov
and
repz
jmp
jae
sbb
jbe
clc
aaa
add
add
lea
nop
push
mov
leave
nop
jmp
add
mov
add
loope
clc
repz
jmp
jae
enter
push
jbe
movsb
sbb
and
xor
jb
repz
jmp
jae
add
xor
mov
mov
leave
nop
jmp
xchg
add
add
add
add
add
nop
add
mov
mov
add
adc
add
ret
add
imul
add
jbe
lea
clc
repz
jmp
jae
add
add
dec
enter
add
add
scas
lock
push
nop
push
mov
leave
nop
jmp
sbb
mov
int3
jl
enter
mov
clc
repz
jmp
jae
mov
add
add
push
clc
repz
jmp
jae
add
mov
sbb
mov
push
mov
leave
nop
jmp
add
add
add
add
push
jecxz
clc
repz
jmp
jae
add
sbb
test
push
xor
cld
jmp
jae
add
dec
add
test
add
xchg
push
sub
clc
repz
jmp
jae
add
add
xor
and
aaa
add
clc
repz
jmp
jae
add
mov
mov
les
pop
xor
nop
push
mov
leave
nop
jmp
jl
test
adc
in
pop
mov
clc
repz
jmp
jae
add
es
add
add
clc
repz
jmp
jae
int
add
pop
add
movsb
push
fisubl
roll
jg
clc
repz
jmp
jae
add
fcmove
in
sti
ret
aaa
xor
into
into
aaa
bound
test
mov
add
add
xchg
add
mov
push
nop
push
mov
leave
nop
jmp
add
xor
xor
lea
push
mov
xchg
ret
or
add
add
fiaddl
add
lahf
std
mov
clc
repz
jmp
jae
lcall
add
mov
clc
repz
jmp
jae
bound
add
add
movsb
inc
xor
and
push
push
mov
xchg
ret
in
add
push
adc
add
jg
nop
push
mov
leave
nop
jmp
bound
sbbl
lcall
in
leave
nop
jmp
add
add
add
enter
out
out
clc
clc
repz
jmp
jae
add
out
loope
es
and
mov
inc
clc
repz
jmp
jae
add
mov
es
or
cld
jmp
jae
inc
add
fiadds
add
add
jnp
add
mov
mov
add
add
add
add
cmp
jns
add
cld
jmp
jae
add
dec
mov
push
mov
xchg
ret
add
add
sbb
out
add
pop
pop
add
clc
repz
jmp
jae
aam
test
mov
add
andl
jmp
jae
sbb
add
in
bound
push
push
mov
xchg
ret
sti
add
test
into
add
and
nop
push
mov
leave
nop
jmp
add
int
add
add
add
jl
mov
clc
repz
jmp
jae
add
es
dec
mov
add
jnp
inc
mov
nop
push
mov
leave
nop
jmp
add
adc
add
nop
pop
test
nop
push
mov
leave
nop
jmp
orl
add
xor
clc
repz
jmp
jae
add
add
add
aam
add
add
push
jo
lea
nop
push
mov
leave
nop
jmp
add
int
add
icebp
shl
clc
repz
jmp
jae
jnp
xor
into
add
jl
add
clc
repz
jmp
jae
mov
in
add
add
xor
stos
add
jmp
jae
add
test
loope
add
xor
add
jle
jb
nop
push
mov
leave
nop
jmp
or
add
add
sti
jne
clc
repz
jmp
jae
push
and
add
into
push
cli
clc
repz
jmp
jae
jnp
xor
add
and
push
mov
xchg
ret
add
loope
add
pop
add
jne
nop
push
mov
leave
nop
jmp
out
add
xor
add
les
push
mov
xchg
ret
add
jl
add
enter
jno
enter
jmp
jae
pop
mov
lea
add
mov
mov
clc
repz
jmp
jae
add
lcall
add
push
mov
leave
nop
jmp
test
add
add
push
int
aam
push
clc
repz
jmp
jae
and
add
add
add
mov
lea
xchg
ret
add
pop
outsb
push
add
int
add
mov
xchg
push
mov
add
add
jb
fwait
inc
add
iret
push
mov
arpl
add
push
add
jge
mov
loope
adc
cmp
int
add
cs
adc
pop
inc
add
add
lcall
add
add
mov
leave
nop
jmp
pop
lea
adc
add
add
loop
clc
repz
jmp
jae
sbb
xor
add
add
add
add
mov
add
add
and
mov
jbe
aam
mov
mov
push
mov
xchg
ret
and
in
add
add
bound
clc
repz
jmp
jae
lahf
fiadds
add
inc
test
mov
xchg
ret
add
add
add
add
int3
nop
mov
repz
jmp
jae
jbe
sbb
add
add
add
mov
add
repz
jmp
jae
add
clc
jl
add
add
mov
cld
jmp
jae
and
mov
or
fimuls
add
push
add
jnp
jle
add
nop
jmp
xor
enter
aaa
lahf
jbe
stc
je
clc
repz
jmp
jae
mov
mov
mov
xchg
ret
fmulp
add
add
add
in
test
add
pop
test
push
mov
xchg
ret
aam
add
add
add
fiadds
add
lcall
repz
jmp
jae
add
add
inc
inc
add
clc
repz
jmp
jae
dec
add
int3
test
add
add
pusha
nop
push
mov
leave
nop
jmp
add
or
xor
ficoms
int3
push
cltd
pop
push
mov
xchg
ret
add
in
add
dec
add
add
push
jmp
incl
out
add
aam
add
clc
add
mov
jbe
mov
jmp
jae
int3
fidivrs
fisubs
sti
inc
push
xor
mov
xchg
ret
into
sti
bound
add
push
loope
into
add
clc
repz
jmp
jae
push
lahf
fiadds
add
add
into
add
mov
repz
jmp
jae
adc
sbb
xchg
lahf
jl
stos
clc
repz
jmp
jae
mov
add
add
mov
xchg
ret
sbb
add
add
add
push
add
pop
repnz
clc
repz
jmp
jae
addl
add
jnp
push
push
mov
xchg
ret
add
add
add
mov
jb
dec
nop
push
mov
leave
nop
jmp
add
add
mov
add
add
add
repz
jmp
jae
add
and
push
mov
xchg
ret
aam
push
add
into
test
add
in
add
xor
inc
pop
push
mov
xchg
ret
lahf
add
xor
into
sbb
add
mov
leave
nop
jmp
mov
add
add
into
mov
add
clc
repz
jmp
jae
loope
mov
or
add
add
xchg
mov
clc
repz
jmp
jae
mov
add
add
xchg
xor
inc
xor
clc
repz
jmp
jae
or
add
add
jae
repz
jmp
jae
push
xor
add
xchg
add
clc
repz
jmp
jae
add
add
add
lea
cmp
jae
ss
add
add
into
test
enter
es
add
pop
clc
repz
jmp
jae
add
add
lcall
cld
jmp
jae
add
add
push
mov
clc
repz
jmp
jae
in
add
add
add
add
imul
jmp
jae
es
add
add
jl
add
add
aam
push
clc
repz
jmp
jae
add
int3
jnp
xor
push
mov
xchg
ret
add
add
add
and
out
pusha
clc
repz
jmp
jae
add
jnp
xor
sbb
xor
add
dec
cmp
repz
jmp
jae
dec
add
lea
addl
repz
jmp
jae
jbe
add
into
adc
xor
push
push
mov
xchg
ret
add
mov
add
fimuls
add
dec
mov
clc
repz
jmp
jae
clc
add
int3
add
clc
repz
jmp
jae
add
add
add
add
mov
test
call
nop
jmp
jl
pop
mov
pop
clc
repz
jmp
jae
es
add
jnp
add
push
sbb
dec
sub
ret
dec
inc
add
adc
lahf
adc
add
add
jmp
repz
jmp
jae
test
add
add
sbb
add
fwait
mov
push
mov
xchg
ret
mov
add
es
add
clc
repz
jmp
jae
mov
add
add
into
mov
clc
repz
jmp
jae
add
add
adc
outsb
push
pop
push
push
mov
xchg
ret
add
sbb
add
add
mov
and
clc
repz
jmp
jae
ficoml
xor
aam
mov
push
push
mov
xchg
ret
sbb
add
add
add
pop
lahf
add
add
and
clc
repz
jmp
jae
mov
add
sub
rep
nop
push
mov
leave
nop
jmp
mov
add
mov
add
add
push
mov
xchg
ret
add
test
push
clc
sti
dec
outsb
add
mov
add
loopne
add
outsl
and
mov
xchg
add
inc
cmp
jne
movb
adc
or
ret
add
add
add
add
bound
cld
jmp
jae
sbb
add
add
add
clc
repz
jmp
jae
add
push
lahf
xchg
xorl
fistpl
clc
repz
jmp
jae
add
outsb
add
add
outsb
orl
xchg
xchg
ret
push
add
push
sti
mov
dec
mov
lcall
push
mov
leave
nop
jmp
test
and
xchg
add
push
mov
xchg
ret
add
fsubl
adc
nop
push
mov
leave
nop
jmp
addl
xor
enter
push
pop
fld1
clc
repz
jmp
jae
add
add
add
adc
out
ja
add
pop
add
add
add
add
jne
clc
repz
jmp
jae
add
mov
or
repz
jmp
jae
add
add
in
add
sbbl
xchg
ret
add
add
xor
add
fidivs
add
clc
repz
jmp
jae
add
clc
add
add
mov
add
add
add
clc
repz
jmp
jae
add
and
enter
mov
clc
repz
jmp
jae
add
in
add
fcompl
mov
push
mov
xchg
ret
fiaddl
loope
add
clc
push
pop
push
add
mov
cmp
nop
push
mov
leave
nop
jmp
add
pop
adc
add
mov
clc
repz
jmp
jae
add
add
pop
add
in
push
push
div
clc
repz
jmp
jae
add
add
add
add
fistpl
push
mov
xchg
ret
add
add
sti
in
loope
xor
clc
repz
jmp
jae
lahf
add
add
add
add
push
ret
nop
push
mov
leave
nop
jmp
add
add
int3
add
mov
push
push
mov
xchg
ret
add
bound
enter
jl
or
push
mov
xchg
ret
mov
add
push
adc
push
ja
nop
push
mov
leave
nop
jmp
outsb
int
test
add
add
sar
cld
jmp
jae
fiadds
push
jl
add
dec
add
lods
push
mov
xchg
ret
loope
add
test
and
into
add
sti
clc
repz
jmp
jae
fisubs
in
adc
mov
add
lcall
jmp
jae
add
add
int3
into
sbb
outsb
or
add
add
outsb
sub
test
out
call
nop
jmp
add
mov
das
push
clc
repz
jmp
jae
or
adc
addl
push
clc
repz
jmp
jae
pop
mov
add
add
adc
add
repz
jmp
jae
sbb
add
aam
in
daa
lea
push
mov
xchg
ret
add
outsb
add
add
cltd
pop
push
mov
xchg
ret
sbb
push
test
dec
jl
jbe
jbe
add
sbb
push
mov
xchg
ret
jbe
in
add
fiadds
add
add
pop
push
mov
xchg
ret
aaa
add
add
ficomps
pop
add
mov
clc
repz
jmp
jae
jl
add
pop
in
adc
movzwl
clc
repz
jmp
jae
push
add
push
mov
insb
add
add
mov
bound
xchg
ret
and
sbb
inc
fiaddl
add
add
mov
mov
or
ret
mov
mov
add
dec
adc
call
clc
repz
jmp
jae
or
add
cmp
mov
leave
nop
jmp
mov
add
sbb
call
nop
jmp
mov
jbe
test
and
mov
mov
xchg
ret
add
add
in
add
add
add
xor
lahf
mov
clc
repz
jmp
jae
lcall
jl
and
rolb
add
nop
jmp
add
loope
adc
test
cli
mov
mov
cli
clc
repz
jmp
jae
add
push
adc
push
push
push
mov
xchg
ret
adc
lcall
es
popa
clc
repz
jmp
jae
add
xor
outsb
add
movsb
fbstp
rclb
jo
add
add
add
mov
in
outsb
call
push
add
je
dec
push
mov
xchg
ret
add
sti
add
add
addl
inc
add
aam
pop
add
xor
sbb
sbb
addr16
add
fiadds
add
push
pop
mov
shr
repz
clc
repz
jmp
jae
add
int3
add
add
jnp
inc
add
mov
clc
repz
jmp
jae
xchg
addl
add
icebp
sub
clc
repz
jmp
jae
add
add
jnp
and
push
xor
add
or
clc
repz
jmp
jae
into
add
add
push
push
mov
xchg
ret
in
mov
add
add
mov
clc
repz
jmp
jae
outsb
int3
add
add
fld1
clc
repz
jmp
jae
bound
in
add
add
movsl
pop
push
mov
xchg
ret
add
add
mov
sti
add
add
fimuls
call
nop
push
mov
leave
nop
jmp
add
xor
test
sbb
mov
add
nop
push
mov
leave
nop
jmp
add
add
sbb
and
add
call
push
mov
xchg
ret
add
fiaddl
fiaddl
add
adc
jge
in
sti
lcall
add
add
fidivs
test
add
sbb
jmp
nop
push
mov
leave
nop
jmp
and
lcall
xchg
imul
clc
repz
jmp
jae
xor
and
test
add
xchg
push
push
mov
xchg
ret
enter
sbb
add
addr16
clc
repz
jmp
jae
in
add
push
dec
push
push
movsb
out
sti
add
push
mov
leave
nop
jmp
add
sbb
into
xor
mov
and
mov
mov
clc
repz
jmp
jae
add
xor
out
mov
es
push
push
mov
xchg
ret
aaa
adc
loope
and
jecxz
push
mov
xchg
ret
inc
enter
pop
add
dec
into
add
pop
fsts
repz
jmp
jae
es
sti
add
add
adc
push
mov
xchg
ret
test
mov
test
add
add
mov
cld
jmp
jae
push
jbe
add
add
mov
xor
add
nop
push
mov
leave
nop
jmp
push
aam
add
add
add
push
and
repz
jmp
jae
add
add
test
pop
pop
push
sbb
into
inc
push
push
mov
xchg
ret
add
add
add
add
add
fisubl
cmp
cld
jmp
jae
add
mov
add
xor
je
nop
push
mov
leave
nop
jmp
add
mov
add
add
test
jmp
jae
add
add
add
inc
mov
add
mov
add
push
es
jecxz
repz
jmp
jae
add
add
add
adc
mov
xchg
ret
aam
pop
outsb
xchg
pop
int
clc
and
out
nop
aas
add
nop
push
mov
leave
nop
jmp
jbe
sti
add
int3
mov
or
mov
xchg
ret
add
lahf
add
lahf
enter
mov
add
repz
jmp
jae
and
push
add
add
add
add
add
mov
inc
add
mov
leave
nop
jmp
int3
mov
add
fiaddl
add
push
je
clc
repz
jmp
jae
add
add
pop
adc
push
clc
repz
jmp
jae
add
aam
add
add
addl
nop
jmp
add
push
add
add
add
test
daa
fld1
clc
repz
jmp
jae
add
add
adc
add
add
adc
fcom
add
push
mov
xchg
ret
test
in
in
mov
add
call
mov
xchg
ret
add
add
pop
push
in
push
push
loope
pop
lcall
add
sbb
add
fiadds
add
lcall
in
push
clc
repz
jmp
jae
push
int
add
add
xchg
add
clc
test
sub
push
mov
xchg
ret
mov
add
adc
add
nop
push
mov
leave
nop
jmp
add
sbb
outsb
inc
es
add
nop
push
mov
leave
nop
jmp
movsb
out
add
add
xor
lea
clc
repz
jmp
jae
push
add
add
and
cmp
push
push
mov
xchg
ret
mov
add
add
pop
adc
mov
clc
repz
jmp
jae
test
mov
in
cli
jbe
dec
nop
push
mov
leave
nop
jmp
add
xor
test
add
inc
add
push
mov
xchg
ret
add
add
pop
add
mov
xor
je
clc
repz
jmp
jae
add
add
push
mov
add
add
cmc
in
adc
sub
add
add
push
add
outsb
adc
filds
inc
and
repz
jmp
jae
add
add
add
add
clc
rol
roll
push
mov
leave
nop
jmp
mov
xor
add
pushf
jp
inc
pop
clc
repz
jmp
jae
add
add
or
push
add
add
pop
inc
push
mov
xchg
ret
jl
clc
add
add
add
add
add
data16
pop
xchg
push
mov
xchg
ret
add
test
pop
add
jbe
not
clc
repz
jmp
jae
xchg
jl
add
add
sbb
mov
clc
repz
jmp
jae
lea
fimull
in
fidivrs
add
add
leave
nop
jmp
add
faddl
add
aad
inc
push
adc
clc
repz
jmp
jae
fiaddl
or
xor
add
cld
jmp
jae
add
add
add
movsb
neg
call
leave
nop
jmp
mov
mov
add
xor
clc
repz
jmp
jae
int3
add
test
bound
mov
div
clc
repz
jmp
jae
add
lahf
mov
loopne
sbb
nop
push
mov
leave
nop
jmp
add
enter
add
mov
nop
push
mov
leave
nop
jmp
add
fiadds
add
inc
add
push
mov
leave
nop
jmp
add
mov
add
fiaddl
add
inc
into
xchg
pushl
clc
repz
jmp
jae
add
add
sti
push
and
dec
add
add
xchg
shl
clc
repz
jmp
jae
bound
adc
and
adc
test
xchg
ret
push
add
jbe
add
sti
add
int
rcll
in
jmp
add
cltd
add
inc
add
add
add
enter
jmp
jae
es
add
sbb
mov
add
add
stos
insl
add
clc
repz
jmp
jae
test
add
fiadds
dec
add
stos
clc
repz
jmp
jae
add
inc
add
test
scas
xchg
add
nop
push
mov
leave
nop
jmp
mov
add
add
mov
or
clc
repz
jmp
jae
pop
lea
add
xor
or
mov
nop
fdivr
incl
add
add
add
add
add
xchg
inc
push
push
mov
xchg
ret
add
add
test
lret
cmpl
nop
push
mov
leave
nop
jmp
out
lcall
fisubrs
les
repz
jmp
jae
xor
add
adc
call
clc
repz
jmp
jae
xorl
add
add
repz
jmp
jae
xchg
add
test
mov
push
clc
repz
jmp
jae
test
add
add
add
push
mov
xchg
ret
jnp
push
add
add
add
test
jmp
jae
add
add
into
add
aad
add
cld
jmp
jae
push
add
mov
lods
mov
clc
repz
jmp
jae
mov
and
add
add
add
je
add
or
add
add
add
fiaddl
jns
add
repz
jmp
jae
ficoms
sbb
mov
popa
nop
push
mov
leave
nop
jmp
fiadds
add
push
add
xor
add
xchg
clc
repz
jmp
jae
add
mov
popf
fld1
push
mov
xchg
ret
mov
add
add
into
add
and
push
mov
xchg
ret
fiaddl
add
or
sbb
pusha
clc
repz
jmp
jae
sti
add
lahf
jbe
add
pop
add
nop
push
mov
leave
nop
jmp
loope
movsb
pop
es
test
es
insl
add
clc
repz
jmp
jae
out
mov
fiadds
lahf
xor
repz
jmp
jae
lahf
add
mov
add
jne
repz
repz
jmp
jae
add
test
test
add
add
add
nop
push
mov
leave
nop
jmp
add
aam
add
pop
mov
clc
repz
jmp
jae
jl
enter
xor
xor
aas
add
imul
add
add
add
sbb
inc
sbb
repz
jmp
jae
sti
add
into
mov
out
cmp
jmp
jae
faddl
add
test
fsubrp
push
push
add
jle
call
nop
push
mov
leave
nop
jmp
mov
outsb
test
mov
cld
jmp
jae
add
add
clc
repz
jmp
jae
mov
push
add
xor
pop
mov
icebp
push
nop
push
mov
leave
nop
jmp
push
addl
es
mov
clc
repz
jmp
jae
pop
outsb
outsb
sbb
add
mov
nop
push
mov
leave
nop
jmp
addl
lcall
add
repz
jmp
jae
add
enter
jmp
pop
cmp
mov
xchg
ret
fidivs
enter
and
push
clc
repz
jmp
jae
add
add
add
sbb
mov
and
clc
repz
jmp
jae
pop
mov
lahf
enter
add
cltd
push
clc
repz
jmp
jae
mov
add
out
clc
add
inc
add
add
push
outsl
fwait
clc
repz
jmp
jae
add
add
add
add
add
pop
mov
clc
repz
jmp
jae
pop
fiadds
add
lea
pop
add
clc
repz
jmp
jae
aaa
int
add
add
push
in
call
nop
jmp
fmulp
mov
lcall
pushl
clc
repz
jmp
jae
and
out
test
add
push
push
clc
repz
jmp
jae
xor
mov
add
xor
push
mov
xchg
ret
in
add
test
add
jbe
in
repnz
sti
clc
repz
jmp
jae
pop
add
add
add
mov
jmp
jae
lcall
push
pop
fsubrp
and
cld
jmp
jae
pop
add
inc
in
add
add
in
add
clc
repz
jmp
jae
in
xchg
test
add
add
aam
add
repz
jmp
jae
add
pop
clc
aam
add
into
add
add
out
shr
push
mov
xchg
ret
in
add
add
fidivs
add
sti
sub
clc
repz
jmp
jae
test
test
movswl
clc
repz
jmp
jae
mov
pop
add
test
push
push
mov
xchg
ret
inc
add
add
add
add
add
int3
add
adc
repz
jmp
jae
adc
pop
add
pushf
lds
cld
jmp
jae
into
push
add
add
into
ljmp
leave
nop
jmp
outsb
jnp
add
pop
add
int3
add
repz
jmp
jae
add
bound
loope
mov
stos
clc
repz
jmp
jae
push
add
add
add
xchg
enter
mov
dec
sbb
add
mov
fiaddl
lea
out
push
es
gs
call
nop
jmp
test
add
or
mov
xchg
ret
mov
xor
fisubs
mov
push
mov
leave
nop
jmp
mov
push
jnp
add
add
mov
nop
push
mov
leave
nop
jmp
and
add
faddl
bound
inc
clc
repz
jmp
jae
add
xor
add
leave
sub
repz
jmp
jae
add
add
into
add
pop
pop
fwait
push
mov
xchg
ret
add
add
add
add
or
repz
jmp
jae
xchg
and
add
push
mov
repz
jmp
jae
add
mov
jl
xor
add
add
popf
push
clc
repz
jmp
jae
add
in
add
or
add
fidivrs
loopne
add
clc
repz
jmp
jae
add
push
or
test
lcall
inc
add
test
add
dec
aaa
add
dec
add
and
cld
pusha
add
clc
repz
jmp
jae
sti
mov
add
sbb
add
fwait
clc
repz
jmp
jae
add
add
pop
pop
clc
repz
jmp
jae
add
add
add
lahf
movsb
add
add
jbe
shl
mov
push
mov
xchg
ret
clc
test
add
es
call
clc
repz
jmp
jae
lcall
push
cmp
push
mov
xchg
ret
add
mov
enter
add
in
add
test
nop
push
mov
leave
nop
jmp
add
bound
inc
sbb
movsb
add
add
push
clc
repz
jmp
jae
inc
add
add
add
sub
clc
repz
jmp
jae
fmulp
jl
push
add
jmp
rorl
repz
jmp
jae
push
add
mov
test
out
add
add
xlat
div
nop
push
mov
leave
nop
jmp
push
loope
lea
xchg
test
mov
nop
push
mov
leave
nop
jmp
add
movsb
xchg
add
or
add
mov
clc
repz
jmp
jae
xor
add
inc
add
sbb
nop
out
clc
repz
jmp
jae
or
pop
xchg
sarl
push
mov
leave
nop
jmp
in
add
add
mov
clc
repz
jmp
jae
add
add
dec
add
sbb
push
push
mov
xchg
ret
bound
adc
sti
out
jbe
cmp
sti
fistpl
push
mov
xchg
ret
sti
add
add
add
add
sti
xchg
js
dec
clc
cmp
dec
mov
repz
jmp
jae
mov
sbb
and
or
repz
jmp
jae
adc
add
int
add
mulb
clc
repz
jmp
jae
add
add
ficompl
add
push
out
adc
mov
xchg
ret
add
add
ficoml
ficomps
jl
add
push
mov
xchg
ret
mov
dec
add
add
push
pop
push
mov
xchg
ret
add
add
es
add
add
add
sub
nop
jmp
push
add
add
add
mov
clc
sahf
in
shlb
mov
add
add
repz
jmp
jae
xor
add
add
lahf
out
enter
add
arpl
repz
jmp
jae
jnp
add
adc
faddl
add
add
inc
outsb
rorl
in
leave
nop
jmp
mov
int
add
push
mov
clc
repz
jmp
jae
add
add
leave
mov
nop
push
mov
leave
nop
jmp
add
pop
add
test
add
add
clc
repz
jmp
jae
add
push
into
clc
add
and
add
repz
jmp
jae
clc
jnp
add
add
fidivrs
push
mov
leave
nop
jmp
add
add
sbb
enter
movsl
push
push
mov
xchg
ret
add
sbb
adc
add
clc
arpl
sti
nop
push
mov
leave
nop
jmp
mov
add
dec
test
add
add
pop
dec
add
clc
repz
jmp
jae
add
add
pop
into
in
adc
lds
repz
jmp
jae
add
es
nop
push
mov
leave
nop
jmp
sbb
push
es
into
add
add
pop
mov
clc
repz
jmp
jae
push
push
fiaddl
enter
dec
dec
add
repz
jmp
jae
add
mov
add
xor
mov
leave
nop
jmp
add
inc
jl
add
add
es
mov
add
add
repz
jmp
jae
add
add
push
clc
repz
jmp
jae
jbe
es
add
push
add
roll
push
mov
leave
nop
jmp
add
adc
add
add
and
add
add
test
mov
leave
nop
jmp
xor
add
cmc
sub
clc
repz
jmp
jae
add
add
add
repz
jmp
jae
add
add
aaa
add
xchg
clc
repz
jmp
jae
add
sbb
add
add
push
sbb
push
loopne
push
clc
repz
jmp
jae
adc
fiadds
addl
add
repz
jmp
jae
add
add
clc
add
add
add
add
call
add
andl
incl
sti
add
adc
add
add
add
add
fistl
nop
jmp
add
mov
pop
add
and
mov
jmp
jp
nop
push
mov
leave
nop
jmp
sbb
sbbl
xlat
pop
clc
repz
jmp
jae
add
test
xor
add
not
push
mov
xchg
ret
dec
pop
add
add
in
push
add
ficoms
sar
cld
jmp
jae
lea
push
add
xor
add
add
ja
pop
clc
repz
jmp
jae
add
addl
push
add
cmp
lods
clc
repz
jmp
jae
add
into
pop
add
add
add
and
rorl
sbb
or
ret
sbb
movsb
add
aaa
add
cmp
nop
push
mov
leave
nop
jmp
add
add
add
mov
push
push
mov
xchg
ret
into
add
add
add
pop
and
mov
add
add
adcl
add
sbb
fmul
movsb
and
jmp
jae
and
push
and
test
mov
mov
clc
repz
jmp
jae
add
es
add
je
add
add
faddl
sti
enter
lcall
les
push
mov
xchg
ret
add
add
add
into
and
repz
jmp
jae
add
add
aam
add
leave
nop
push
mov
leave
nop
jmp
add
into
mov
add
add
add
add
push
clc
repz
jmp
jae
add
inc
mov
adc
test
clc
repz
jmp
jae
add
add
add
dec
inc
add
add
dec
mov
inc
xor
xor
inc
je
clc
repz
jmp
jae
xor
add
cmp
jmp
jmp
jae
add
movsb
test
add
add
add
add
add
call
nop
push
mov
leave
nop
jmp
add
add
mov
aas
xor
push
mov
xchg
ret
xchg
add
add
add
add
add
cs
clc
repz
jmp
jae
sbb
mov
add
jnp
out
add
add
push
shlb
rol
nop
push
mov
leave
nop
jmp
add
sbb
push
push
mov
xchg
ret
add
enter
add
add
cmpsb
lea
test
aam
clc
repz
jmp
jae
jnp
xchg
add
xor
popf
jmp
add
add
mov
into
add
mov
scas
adc
cld
jmp
jae
outsb
add
in
add
mov
mov
xchg
ret
xchg
in
lahf
sbb
jbe
lcall
add
lods
cmpsb
repz
clc
repz
jmp
jae
add
fiadds
lock
repz
jmp
jae
inc
add
jnp
add
mov
xchg
ret
test
add
in
add
add
add
in
jnp
or
fiaddl
add
mov
add
out
in
pop
movsb
pop
mov
mov
fcoml
xor
push
mov
leave
nop
jmp
es
xor
and
push
enter
lods
and
imul
cld
jmp
jae
add
mov
add
repz
jmp
jae
aam
lcall
in
iret
pop
push
mov
xchg
ret
add
add
add
push
mov
xchg
ret
mov
add
es
mov
add
dec
add
adc
push
mov
xchg
ret
add
int3
add
test
int
add
add
clc
repz
jmp
jae
enter
push
mov
add
clc
repz
jmp
jae
in
jnp
add
dec
enter
xchg
ret
clc
repz
jmp
jae
test
dec
test
clc
push
mov
mov
nop
push
mov
leave
nop
jmp
add
xor
add
mov
in
add
add
ret
jg
push
jecxz
into
add
mov
add
sbb
push
mov
leave
nop
jmp
add
add
add
add
add
fldcw
push
mov
xchg
ret
add
add
add
add
inc
ror
clc
repz
jmp
jae
and
fimull
add
ljmp
jmp
jae
fiaddl
lahf
add
xor
pop
mov
add
clc
repz
jmp
jae
add
add
jl
pop
loope
lcall
shr
nop
push
mov
leave
nop
jmp
clc
add
add
add
rep
clc
repz
jmp
jae
add
add
test
adc
adc
sub
call
nop
jmp
push
es
mov
jbe
inc
clc
repz
jmp
jae
es
sbb
mov
add
popa
shr
clc
repz
jmp
jae
add
add
add
fmul
add
add
mov
popa
mov
nop
push
mov
leave
nop
jmp
test
mov
enter
add
insl
lea
clc
repz
jmp
jae
add
add
test
ficompl
add
add
add
nop
push
mov
leave
nop
jmp
clc
aam
jbe
mov
inc
add
nop
jmp
add
mov
fiadds
jmp
jae
add
jnp
fidivrs
outsb
or
cmp
repz
jmp
jae
dec
aaa
add
mov
fwait
clc
repz
jmp
jae
aaa
xchg
aaa
push
add
add
lcall
repz
jmp
jae
sbb
add
add
add
pcmpgtd
jg
nop
push
mov
leave
nop
jmp
add
sbb
into
add
and
in
add
bound
add
or
mov
mov
cmpsb
xchg
icebp
jne
clc
repz
jmp
jae
add
test
add
clc
repz
jmp
jae
outsb
test
lcall
cmp
add
lea
push
mov
leave
nop
jmp
add
add
jbe
outsb
mov
mov
nop
push
mov
leave
nop
jmp
add
jl
sti
xchg
mov
icebp
fld1
jmp
mov
xorl
xchg
add
push
xor
clc
repz
jmp
jae
add
add
into
lcall
add
xor
xor
clc
repz
jmp
jae
mov
dec
add
push
pop
fwait
xchg
clc
repz
jmp
jae
int
add
add
sbb
mov
add
clc
repz
jmp
jae
add
add
test
dec
add
add
add
pop
inc
add
enter
add
jl
sbb
bound
jmp
jae
add
adc
es
add
fcomps
mov
xchg
ret
mov
add
sbb
and
clc
repz
jmp
jae
into
lcall
push
dec
mov
clc
repz
jmp
jae
clc
add
add
loope
clc
repz
jmp
jae
add
sbb
add
mov
push
mov
push
mov
xchg
ret
add
xor
xor
in
add
add
hlt
add
add
out
inc
or
add
cmp
xchg
dec
pop
xor
popa
clc
repz
jmp
jae
andl
add
cmpsl
movzwl
clc
repz
jmp
jae
xor
add
inc
testl
nop
push
mov
leave
nop
jmp
int3
add
add
lods
loopne
lcall
inc
add
sbb
add
xor
outsb
add
test
div
movsb
clc
repz
jmp
jae
clc
add
jbe
add
add
test
adc
mov
push
mov
xchg
ret
test
loope
add
pop
add
xchg
outsb
aaa
push
push
mov
xchg
ret
push
xor
fiadds
aas
mov
clc
repz
jmp
jae
add
add
in
jnp
movb
cld
jmp
jae
push
add
test
or
push
hlt
test
mov
push
mov
xchg
ret
add
test
clc
test
add
add
inc
ja
add
xor
dec
out
mov
cs
jbe
fistpl
push
mov
xchg
ret
aam
pop
mov
jnp
mov
push
mov
xchg
ret
outsb
add
add
movsb
test
jno
clc
repz
jmp
jae
mov
add
jne
clc
repz
jmp
jae
add
adc
add
sar
repz
jmp
jae
add
add
add
fiadds
clc
repz
jmp
jae
add
add
jnp
clc
mov
loop
jno
icebp
inc
dec
xchg
nop
jmp
xor
add
push
mov
xchg
ret
add
aam
add
add
cmpw
clc
repz
jmp
jae
outsb
test
add
xchg
add
dec
push
push
mov
xchg
ret
add
mov
add
add
pop
mov
add
clc
repz
jmp
jae
in
fidivrs
add
add
add
mov
leave
nop
jmp
in
add
add
add
fisubl
mov
mov
nop
push
mov
leave
nop
jmp
mov
pop
mov
push
cld
nop
push
mov
leave
nop
jmp
add
sbb
add
push
push
add
and
sbb
call
nop
jmp
andl
cmp
repz
jmp
jae
add
add
and
add
add
inc
nop
add
mov
mov
push
mov
xchg
ret
add
in
add
add
repz
jmp
jae
add
add
fisubrs
in
movsb
test
xor
rclb
gs
add
add
enter
outsb
add
add
add
clc
repz
jmp
jae
add
add
inc
add
add
push
mov
xchg
ret
add
adc
push
into
add
mov
jno
inc
add
add
mov
add
cld
jmp
jae
add
add
enter
add
jl
xor
clc
repz
jmp
jae
add
add
add
fiaddl
adc
add
pop
add
int3
add
add
jge
mov
repz
jmp
jae
add
dec
add
add
in
leave
nop
jmp
and
sti
add
sti
xor
clc
roll
clc
repz
jmp
jae
add
add
int3
add
add
mov
mov
xchg
ret
add
or
mov
in
movsb
add
add
nop
push
mov
leave
nop
jmp
aam
mov
pop
and
repz
jmp
jae
sti
add
add
bound
push
sub
clc
repz
jmp
jae
add
pop
sbb
add
add
lcall
clc
repz
jmp
jae
add
add
add
add
mov
arpl
clc
repz
jmp
jae
int3
add
outsb
add
add
xor
push
test
add
xorl
lcall
add
cmp
xorl
clc
repz
jmp
jae
add
inc
fistpl
push
mov
xchg
ret
mov
jl
add
loope
lahf
cld
push
mov
clc
repz
jmp
jae
outsb
add
mov
xor
sbb
mov
xchg
ret
add
add
add
aam
add
fidivrs
inc
jmp
fiadds
add
int
add
inc
enter
mov
mov
jg
repz
repz
jmp
jae
sbb
in
inc
aam
or
mov
nop
push
mov
leave
nop
jmp
sti
add
test
add
add
push
es
jb
inc
mov
clc
repz
jmp
jae
add
addl
test
xor
add
push
mov
xchg
ret
sub
xor
loop
add
clc
repz
jmp
jae
add
add
xor
mov
push
mov
xchg
ret
loope
add
enter
mov
push
push
mov
xchg
ret
add
add
add
clc
pop
and
sbb
xor
cld
xor
add
loop
clc
repz
jmp
jae
add
fidivs
inc
cmpl
jl
pop
push
mov
xchg
ret
sbb
add
outsb
mov
enter
mov
clc
repz
jmp
jae
add
add
jbe
aaa
add
inc
rcrl
mov
xchg
ret
add
mov
test
add
fiaddl
mov
add
test
or
ret
pop
adcl
xor
add
mov
dec
and
clc
repz
jmp
jae
test
add
out
inc
xlat
fld1
push
mov
xchg
ret
add
and
outsb
add
fiaddl
test
iret
pop
clc
repz
jmp
jae
add
add
add
fisubrl
pop
add
pop
dec
add
pusha
add
inc
pop
fistpl
nop
push
mov
leave
nop
jmp
and
jnp
add
and
push
clc
repz
jmp
jae
add
add
loope
add
inc
je
clc
repz
jmp
jae
mov
add
mov
clc
repz
jmp
jae
push
test
lcall
rorl
mov
xchg
ret
add
int
lcall
or
mov
nop
push
mov
leave
nop
jmp
es
add
add
add
flds
cld
jmp
jae
sbb
test
push
enter
or
repz
jmp
jae
test
out
test
mov
clc
repz
jmp
jae
pop
sti
mov
sbb
add
clc
repz
jmp
jae
add
push
faddl
pop
aam
rcrb
cld
jmp
jae
add
and
add
popf
call
clc
repz
jmp
jae
es
adc
add
add
nop
push
mov
leave
nop
jmp
mov
mov
sub
mov
push
mov
xchg
ret
push
mov
lcall
adc
daa
dec
nop
push
mov
leave
nop
jmp
sti
mov
add
or
aaa
add
adc
mov
xchg
ret
sbb
push
or
mov
xchg
ret
add
add
bound
clc
repz
jmp
jae
ficomps
xor
int
addl
sub
repz
jmp
jae
add
fisubrl
cmp
repz
jmp
jae
add
push
mov
lea
loopne
add
add
lcall
jmp
jae
addl
es
add
bound
clc
repz
jmp
jae
test
mov
add
xchg
mov
clc
repz
jmp
jae
xor
test
add
mov
nop
push
mov
leave
nop
jmp
add
push
push
enter
add
loope
pop
push
push
mov
xchg
ret
push
fidivrs
test
add
add
lahf
push
push
mov
xchg
ret
push
add
jnp
push
clc
clc
xor
clc
repz
jmp
jae
jnp
xor
add
mov
add
repz
jmp
jae
or
sbb
and
push
xor
in
dec
add
test
add
add
mov
adc
sbb
or
cmp
rol
int3
and
add
mov
fstps
xchg
jecxz
enter
cmp
lds
cmc
push
jbe
lcall
add
add
jne
rol
je
ret
pop
cmpsl
mov
lock
mov
sub
mov
mov
add
or
cwtl
xchg
in
cmp
gs
fdivrl
mov
int3
outsb
xchg
fimuls
mov
clc
lods
push
lds
imul
adc
xor
add
test
mov
gs
dec
add
add
mov
add
add
ljmp
ficoms
fsubrl
adc
sti
cwtl
add
ret
cmp
cmpsb
imul
add
adc
scas
loopne
xor
mov
popa
data16
add
add
and
add
add
mov
mov
lret
scas
into
mov
or
in
sbb
add
ficoml
aam
out
pop
test
add
add
add
fistpll
jns
mov
xchg
pop
sti
pop
mov
cld
mov
add
inc
repz
fldl
add
inc
add
add
add
mov
xchg
mov
les
fsubs
mov
jmp
fidivs
adc
and
mov
pop
insb
add
xchg
test
add
mov
enter
mov
mov
in
loopne
add
insl
push
movsb
outsl
movsb
fidivrl
push
imul
cltd
mov
repz
jno
pushf
push
ret
in
sbb
leave
scas
push
push
test
pop
aam
pop
mov
xor
ljmp
add
add
jmp
or
add
add
xor
add
add
or
sbb
lods
mov
dec
pop
mov
mov
xchg
and
mov
add
add
push
jns
or
mov
lret
push
lret
sbb
out
sbb
rcrl
pop
pop
decb
add
jp
cmp
mov
dec
mov
jne
lods
cmc
arpl
add
add
add
add
mov
adc
repz
movsb
dec
sub
pop
lret
stos
scas
inc
mov
insb
add
add
daa
mov
addr16
sarb
sbb
dec
add
add
dec
aaa
leave
gs
scas
insl
jge
jne
ret
inc
loope
cmp
arpl
pop
sbb
add
jns
xor
pop
dec
add
add
in
gs
mov
mov
mov
pop
out
out
in
pusha
add
addb
dec
jg
pop
pop
test
add
dec
subb
push
push
jecxz
daa
jne
xor
and
push
jb
cmp
shlb
xor
dec
push
or
add
add
loopne
inc
xor
lock
add
add
leave
clc
out
cmp
add
test
cmp
testl
add
aam
push
mov
add
add
mov
add
dec
inc
cwtl
pop
lret
add
add
cmovne
xchg
add
push
or
mov
ss
cli
addl
inc
out
adc
cmp
jbe
add
add
add
add
jge
aad
movsl
cmpsl
dec
xchg
mov
lret
pop
pop
mov
mov
test
push
int3
mov
mov
or
and
mov
mov
xchg
jo
add
add
add
popf
inc
add
mov
ret
and
js
add
fimuls
xchg
ret
add
in
in
mov
mov
je
negb
sbbl
sti
test
xor
push
xlat
mov
pop
push
fimull
pop
xchg
ss
ja
mov
pop
adc
ret
mov
jae
in
jbe
pop
jle
call
pop
or
xchg
fsts
cmpb
xorb
cmp
aam
test
add
daa
cld
insb
add
add
xor
sub
lahf
mov
test
or
in
lahf
mov
dec
push
rcll
scas
roll
add
add
ds
aam
out
xor
mov
push
icebp
sarb
aas
js
lods
cmp
loop
pop
bound
mov
mov
ja
filds
add
shl
cmpsb
out
jg
add
jne
pop
insb
add
add
jp
pop
outsl
in
stc
imul
adcl
push
outsb
sbbb
sub
inc
add
ljmp
idivl
push
push
inc
and
jmp
pop
inc
mov
nop
stos
fwait
mov
jb
stc
std
lcall
lea
add
add
jno
push
sahf
gs
and
mov
lock
aaa
and
add
add
add
sub
add
add
add
mov
add
add
add
add
out
push
pushf
push
sbb
pop
push
mov
daa
repnz
and
add
mov
or
in
inc
add
add
repz
lret
mov
push
pushf
add
add
inc
push
leave
lods
sub
mov
or
mov
adcb
xlat
testb
add
add
mov
add
add
into
addr16
outsb
adc
mov
push
clc
jns
jecxz
or
sub
add
inc
jb
popa
mov
fidivl
push
add
sti
dec
mov
add
cld
sbb
sbb
add
add
out
xchg
cmpsb
mov
pop
xchg
inc
add
pop
loopne
lods
sub
out
or
mov
add
add
aam
cwtl
xchg
add
add
iret
orb
mov
xchg
ret
repnz
push
and
mov
dec
fisttps
xchg
out
pop
and
add
faddl
out
add
add
mov
out
mov
xchg
xor
out
mov
popf
cltd
sub
mov
sub
mov
jne
je
xor
add
push
xchg
sub
notl
jnp
mov
dec
cmp
adc
out
daa
push
cmc
inc
add
add
aaa
pop
mov
or
add
mov
outsl
pop
icebp
adc
inc
and
add
add
jnp
jno
dec
mov
xchg
data16
pop
add
add
mov
pop
mov
sub
add
sbb
adc
nop
mov
ja
rorb
je
imul
xchg
jmp
rcr
xchg
ret
sbb
cmp
gs
dec
call
jns
mov
cmp
adc
add
lock
das
mov
xor
dec
add
mov
sbb
sbbb
fnstcw
jno
mov
mov
jecxz
enter
mov
push
push
adc
mov
rol
hlt
sub
add
add
stos
xor
sbbl
xchg
xlat
andl
mov
out
xchg
imul
push
stos
and
cld
add
dec
xchg
movsb
jecxz
ret
ljmp
xchg
inc
pop
or
add
push
addb
enter
mov
inc
add
add
xor
scas
cmp
xor
repz
idivl
shll
cmpsb
adc
jae
and
add
fwait
enter
add
ss
jmp
jl
jnp
aaa
inc
outsb
std
cmp
cltd
adc
and
mov
imul
add
fwait
idivb
jmp
mov
pop
data16
sub
add
add
jmp
jmp
add
in
rclb
test
pop
imulb
and
mov
idivb
add
outsb
rcl
push
xor
push
cmpsb
xchg
sti
shlb
pop
and
add
add
mov
add
mov
fldcw
negl
outsb
lock
jl
rolb
stos
iret
or
add
add
dec
push
cmp
jge
jbe
adc
add
add
mov
xlat
jecxz
inc
sbb
add
add
ss
movsl
cs
add
add
mov
movsb
rcll
and
fdivr
dec
add
add
enter
mov
sub
add
add
mov
and
or
pop
mov
push
and
jl
lret
fldcw
or
add
add
nop
xor
mov
mov
push
push
push
movsl
es
loopne
sub
and
xchg
leave
inc
add
mov
idivb
lods
cmp
int3
loopne
adc
mov
xor
sbbb
sub
add
add
xchg
pusha
add
add
mov
mov
lahf
int3
sahf
sbb
outsl
sti
sarl
shlb
les
add
nop
mov
sub
add
add
jl
adc
add
jg
jecxz
fidivrs
outsb
add
mov
add
mov
mov
pusha
add
add
mov
lcall
pop
repz
lcall
iret
ja
dec
pop
cmp
sub
inc
aad
fadds
pop
and
lods
inc
inc
jno
stos
and
or
add
add
dec
add
mov
stc
out
or
push
mov
ljmp
add
movsl
mov
mov
mov
pop
xchg
jg
sbb
jg
xor
add
add
into
xchg
xchg
or
xor
icebp
shll
ret
mov
push
movsb
sarb
outsl
adc
inc
jecxz
mov
and
mov
addr16
mov
add
add
pop
or
mov
add
add
mov
mov
addb
mov
pop
xor
add
add
and
cmp
loopne
inc
add
add
xor
popf
and
imul
add
add
add
in
jl
sub
mov
bound
nop
jmp
inc
or
rcl
mov
shll
stos
xchg
pop
movsb
loope
dec
add
mov
jecxz
std
jg
add
lds
ret
and
mov
aad
movsb
cli
jne
or
add
sub
add
add
push
adcl
jp
add
sbb
fwait
push
mov
push
out
scas
into
fstl
fwait
movsb
push
mov
adc
cmpsl
dec
lds
add
add
out
push
mov
cli
adc
add
js
arpl
addr16
push
push
clc
in
inc
repz
sbb
add
add
add
add
pop
mov
xchg
inc
stos
stos
lds
data16
lret
fstpt
ret
out
addr16
adc
jl
or
mov
sub
or
mov
push
cli
mov
add
add
hlt
gs
add
mov
leave
mov
pop
leave
data16
outsl
aad
or
add
dec
rcr
dec
inc
add
add
lock
ss
jge
xchg
addl
stos
in
test
and
mov
push
lret
jne
and
add
add
dec
cmpsb
in
rorb
mov
data16
scas
or
add
add
fsqrt
push
and
cmp
push
das
push
xchg
pop
stos
cs
jae
lcall
stos
test
xchg
pop
mov
add
add
adc
pushf
pusha
add
add
mov
jbe
fcoml
scas
test
aas
insb
add
fdiv
lahf
mov
adc
jle
mov
lds
mov
ljmp
mov
das
test
addr16
sub
add
add
pop
mov
jle
lcall
mov
lahf
movsb
arpl
jmp
testl
leave
sub
outsb
shll
cmp
and
add
add
jmp
mov
bound
nop
sbb
inc
loopne
pop
or
mov
dec
cld
or
jmp
sti
cmp
sub
dec
imul
mov
add
dec
fsubrs
add
shll
xlat
dec
dec
scas
jmp
mov
xor
fisttpll
xchg
pop
pop
push
and
inc
enter
ret
mov
and
imul
mov
orl
and
loope
mov
xor
add
add
add
mov
mov
inc
add
add
xchg
xchg
and
or
cmpsb
xor
movsl
mov
test
movsb
cmc
mov
fidivrs
addl
add
mov
bound
cs
push
adc
sbb
lods
mov
cwtl
test
jp
xchg
xchg
inc
mov
push
mov
mov
push
aam
xor
mov
xchg
insl
and
mov
xchg
or
pop
jns
inc
xor
jge
dec
xchg
out
sbb
cmp
push
ret
jns
pop
mov
sbb
mov
sahf
insb
add
pusha
add
popf
pop
in
mov
scas
and
pop
push
bound
pop
js
out
cmp
hlt
inc
add
add
leave
dec
inc
sti
cli
addps
xor
push
mov
jg
repz
mov
mull
or
sub
cmp
cltd
add
mov
jl
or
mov
push
out
add
lcall
add
push
jnp
add
add
aas
jne
jl
and
mov
and
add
add
cwtl
push
mov
mov
add
fidivrs
xchg
mov
jne
add
add
mov
add
mov
cmpsl
ror
add
add
pushf
push
adc
pop
movsl
mov
cmp
fcmovbe
xor
mov
adc
xchg
mov
stc
aam
shl
sub
sbb
cmp
cs
mov
mov
flds
insl
minps
mov
jp
mov
icebp
enter
das
xchg
out
outsl
push
mov
pushf
mov
scas
or
mov
jne
pop
cmpsl
push
or
in
push
xchg
fstpt
fcomp
lods
push
lods
dec
xor
mov
not
dec
divb
add
add
fsubp
clc
mov
icebp
loop
fcomps
inc
int
int3
mov
mov
loope
sbb
fnstsw
sub
mov
fnstsw
push
lock
mov
scas
into
lods
fsubs
add
sub
cmc
lret
dec
scas
shlb
mulb
dec
add
dec
mov
add
add
fwait
loopne
cld
push
lahf
enter
add
add
mov
test
sbb
sarb
imul
lds
movl
add
add
fidivs
sahf
or
add
add
mov
andl
test
cmc
push
iret
fcom
cmp
sub
rcrb
sub
mov
dec
rcr
les
xchg
lock
enter
andb
cmp
sbb
and
mov
pop
cmpsl
imul
add
add
jns
cmpl
inc
repz
aaa
ficoml
movsl
in
notl
scas
dec
lret
mov
sbb
dec
pushf
popf
mov
add
aam
cmp
test
xchg
mov
sti
in
mov
mov
mov
push
mov
cmpb
add
xor
into
and
stos
scas
loope
es
add
add
mov
mov
xchg
or
add
add
sbb
mulb
add
add
adc
push
je
mov
in
or
mov
shl
sub
add
add
stos
lods
mov
je
jecxz
idivl
mov
pusha
add
into
orl
and
add
sbb
scas
mov
loop
jle
dec
dec
cmp
sbb
push
incl
inc
push
aaa
bound
xor
sub
mov
fldt
mov
add
lret
lahf
push
ss
xor
cmpsb
mov
add
xchg
lods
jb
in
push
gs
or
jg
enter
push
fcomi
sbb
or
push
or
add
add
xchg
imul
fiaddl
bnd
paddw
cwtl
out
sahf
imul
scas
cmc
fistpl
add
add
aad
cwtl
push
mov
call
aam
dec
adc
or
add
add
add
add
sub
mov
insl
repz
inc
bound
lahf
test
movsb
subl
add
mov
add
dec
add
add
aaa
pop
inc
add
add
sbb
sub
push
or
shll
aad
outsb
fstp
jmp
scas
sbb
dec
cmp
subl
fidivrs
cmp
mov
and
add
add
iret
mov
push
hlt
insb
add
rcll
jmp
add
fstpl
and
add
add
pop
enter
dec
enter
das
fucomip
and
add
add
mov
push
mov
mov
sub
add
lods
inc
inc
add
xchg
popa
push
daa
lea
int
movsb
push
or
add
addr16
mov
lock
xchg
push
out
add
add
add
mov
int3
enter
cwtl
push
and
mov
add
mov
add
push
vmwrite
add
inc
add
add
xchg
stos
push
lret
data16
add
add
cld
adc
repz
sub
xchg
mov
sbb
orb
or
daa
push
ret
sub
lcall
mov
add
push
add
pop
ret
ja
inc
add
add
popa
and
add
add
cld
aam
mov
add
add
enter
inc
add
push
pop
sbb
outsl
mov
frstor
mov
je
jg
cmp
iret
add
add
or
loope
dec
outsb
pop
in
adc
add
add
lret
xor
jmp
add
xchg
dec
add
add
dec
add
inc
add
add
in
dec
fcomp
xchg
ja
fstpt
xor
and
add
add
mov
enter
cltd
or
mov
pop
sti
sahf
shlb
add
pop
pushl
inc
negb
and
dec
add
add
add
aas
sub
in
add
mov
int3
add
shll
imul
push
mov
fistl
or
add
sahf
out
jge
xor
dec
repz
out
movsb
mov
pop
ja
push
addr16
mov
ret
and
mov
popa
loop
add
or
add
add
xchg
cld
mov
add
add
add
add
mov
or
pop
stos
adc
add
pop
sbb
loope
dec
jmp
mov
or
sbb
in
sub
add
add
pop
xchg
push
add
rol
ret
in
mov
mulb
loop
push
repnz
pop
jno
iret
movsl
pushf
push
pushf
inc
push
lods
xor
add
daa
iret
mov
outsb
pop
fcmove
ss
and
nop
or
pushf
cmc
dec
add
test
add
ljmp
push
std
sub
mov
shlb
cltd
pop
mov
or
mov
aaa
xchg
ss
jnp
add
add
lret
adc
add
fists
shll
add
lret
icebp
and
or
into
out
out
mov
stos
jl
clc
popa
rcr
fistps
add
sbb
scas
jl
pop
or
sti
lds
cmp
into
push
popf
pusha
add
add
xchg
or
mov
pop
ljmp
add
insb
add
add
clc
ja
mov
into
leave
cmc
shlb
lods
lret
rcl
mov
dec
add
insl
pop
test
rorb
xchg
je
fdivrl
jle
pop
shlb
or
mov
add
add
lock
add
dec
shl
pop
inc
and
mov
mov
add
adc
sbb
mov
inc
sub
add
add
roll
cmp
dec
sbb
pop
xchg
insl
lds
std
cwtl
mov
mov
dec
or
add
add
and
add
add
add
add
mov
cmpsl
cmp
sub
mov
push
dec
add
jns
gs
hlt
unpcklps
fcmovu
jecxz
enter
jle
fsubrl
mov
add
mov
xlat
push
or
add
adc
popa
fwait
push
jo
jb
add
add
lea
xchg
add
rolb
hlt
jp
dec
add
add
pop
push
mov
sbb
adc
and
mov
pop
jo
push
ss
mov
xor
pop
lahf
or
mov
sub
adcb
stos
push
add
mov
and
add
add
rcl
mov
nop
sbb
cmp
mov
out
out
adc
mov
je
xlat
fldenv
xor
add
add
int
adc
jle
sub
mov
in
sbb
xor
add
add
add
aaa
ret
clc
mov
cmp
push
add
add
add
inc
push
jnp
sbb
sbb
xor
ret
mov
add
fxch
aaa
xchg
add
pop
aaa
rcrl
add
add
out
sub
add
lret
mov
xor
xor
stos
repnz
add
add
lret
mov
push
pop
or
add
add
fcoms
add
scas
clc
xchg
insl
xchg
mov
jmp
dec
sti
mov
mov
cs
adc
push
imul
pushf
outsb
xchg
in
add
pushf
aam
xor
fwait
xchg
rclb
mov
rcll
add
mov
mov
fld
push
ficomps
add
add
add
sub
add
pop
imul
jb
add
inc
add
rcrl
add
out
pop
inc
add
add
mov
inc
addr16
add
add
std
test
dec
add
add
dec
inc
xor
aad
push
jmp
add
mov
cmp
cltd
mov
mov
ja
pop
push
insb
add
add
sub
add
add
push
or
add
add
les
test
add
add
jmp
mov
add
push
loope
and
mov
mov
jns
cmpsb
icebp
cwtl
jno
jmp
ljmp
sbb
add
test
lcall
and
add
add
push
pushf
popa
or
dec
add
add
mov
pop
and
mov
lods
fmull
scas
lret
lahf
dec
add
add
int3
leave
out
pop
lretw
mov
movsb
out
jg
jno
xchg
push
and
push
lret
repnz
mov
add
add
dec
add
and
add
add
loope
push
aad
push
lock
fisttpll
movsl
stos
mov
insb
add
jno
fisubs
jmp
inc
ja
pop
test
ljmp
sbb
add
add
add
sbb
add
dec
add
fldt
add
add
add
or
jnp
sbb
mov
push
dec
insb
add
add
out
fwait
pop
xchg
das
xor
and
arpl
js
push
adc
push
dec
std
sbb
xchg
mov
or
push
inc
push
mov
imul
or
add
add
dec
fldl
add
push
cmp
xchg
add
add
add
mov
inc
aaa
lret
in
fsubrl
stos
push
dec
aad
sub
fucomp
jp
push
sbb
xchg
xchg
sub
add
add
pushf
icebp
push
sbb
pop
in
in
jne
sti
pop
xchg
addl
aam
movsb
adc
or
mov
repz
js
les
rcrl
mov
inc
mov
ret
jno
or
mov
mov
push
mov
or
add
pop
imul
movsb
mov
into
in
mov
jns
or
fisubrs
pop
or
and
add
add
add
xchg
push
or
mov
add
add
loope
dec
add
jbe
std
jne
and
mov
add
add
cmp
jl
and
testl
push
cmp
dec
imul
roll
rorl
out
jmp
jo
mov
add
repnz
dec
dec
add
add
enter
and
in
cmp
jns
jb
inc
fstl
addr16
mov
data16
mov
sub
mov
adc
inc
add
aam
cli
into
ljmp
out
xor
leave
jmp
aad
xchg
inc
unpckhps
jne
je
ljmp
adc
add
jl
pushf
dec
inc
add
sub
dec
out
xchg
push
in
jns
xchg
mov
pop
pop
dec
add
fldl
add
add
inc
imul
aas
dec
push
mov
lcall
cli
adc
jae
in
jle
dec
sub
add
nop
cmp
bound
mov
dec
scas
les
loope
jl
fsubrs
xchg
cmc
int
in
pusha
add
add
loope
int
and
add
loop
adc
les
add
add
xchg
lcall
imul
add
mov
xchg
test
inc
lcall
adc
push
cmp
add
add
into
or
mov
jl
adc
mov
je
and
addr16
inc
add
push
jge
ljmp
add
add
pop
push
imul
in
mov
sub
dec
add
add
and
mov
idivb
xchg
repz
dec
pop
js
lock
add
add
shr
jmp
adc
add
divb
mov
adc
add
int3
jge
dec
dec
loope
daa
int
add
add
xor
add
mov
das
icebp
and
mov
adc
int
jns
dec
mov
movsb
addl
ret
es
sbb
aaa
ds
into
xor
dec
popf
mov
xorb
xchg
and
ret
pop
xchg
inc
dec
jp
adc
cmp
add
mov
sbb
push
out
in
lock
adc
add
add
pop
push
jo
inc
add
andl
inc
pop
jbe
loope
add
mov
loope
cmpsl
jb
aaa
or
add
add
lock
mov
push
xchg
dec
dec
js
daa
xor
mov
fistpl
add
adc
fmul
out
repnz
insb
add
add
fidivs
pop
cmp
add
cmp
push
out
mov
cli
pop
xchg
das
mov
pop
inc
bound
inc
jmp
and
add
add
push
push
sbb
testl
xor
mov
test
push
pop
test
mov
xor
jbe
ljmp
shrl
add
pusha
add
add
jmp
add
add
movsl
adc
mov
aas
cs
cmc
mov
popa
out
cli
jmp
popf
rolb
add
add
add
add
add
mov
add
add
ljmp
cmpsl
sbb
or
mov
cmp
jb
out
lret
adc
xor
jg
inc
movb
mov
notb
or
add
add
loop
addb
ds
add
add
pop
addr16
add
add
jmp
add
add
add
jge
push
or
jp
xchg
jnp
addl
cmp
ficoml
dec
inc
mov
xchg
es
pushf
inc
sbb
push
decb
loopne
dec
sbb
jmp
push
popa
push
sbb
cmpsb
mov
inc
nop
cmp
ja
push
popw
clc
cmc
lcall
scas
inc
add
lret
jnp
test
cmp
shlb
into
loopne
mov
js
in
lods
mov
add
scas
ret
mov
aaa
and
mov
add
add
jge
adc
outsl
mov
add
jo
cmpsb
add
mov
add
iret
call
sub
add
add
add
add
fld
inc
lahf
jg
sbb
cwtl
inc
and
inc
pop
mov
lds
repnz
out
xor
lods
mov
out
mov
cmp
mov
mov
add
mov
movsb
ret
scas
cmp
jno
mov
popa
cs
add
add
add
das
mov
push
xchg
jmp
mov
add
dec
add
out
add
mov
xchg
enter
jle
xchg
data16
loope
lods
sbb
add
mov
mov
add
ja
test
add
push
fdecstp
jle
out
imul
or
mov
sti
std
mov
jmp
sbb
sbb
or
mov
in
fidivrs
fcomi
lret
rcrb
cmpsl
mov
test
add
movsb
js
sub
add
mov
loope
in
cs
je
lds
cmpsb
fdivrp
test
rcrl
ror
or
pop
xchg
mov
xchg
xchg
xchg
jo
cmp
add
pop
pop
mov
fstps
in
jb
cmp
aaa
and
mov
aad
jnp
pop
push
push
repz
sbb
xchg
sub
add
icebp
and
add
add
aaa
inc
add
inc
mov
add
add
xor
and
pop
push
stos
mov
push
cli
jmp
lcall
or
add
add
add
add
mov
cs
sbb
fmuls
cli
insb
add
add
mov
stc
je
pop
lods
jo
mov
lahf
mov
dec
sbbl
add
mov
shrb
add
xor
cltd
sarb
orl
test
bound
add
add
and
add
adc
adc
popf
dec
xor
xchg
cmpsb
and
push
push
bound
cltd
and
add
mov
and
in
xchg
mov
mov
cmp
cmp
add
add
cmp
or
fxtract
hlt
or
pop
jle
add
orl
add
add
scas
push
add
incb
insb
add
push
call
fildl
mov
xchg
mov
add
add
pop
push
add
das
or
cwtl
test
and
pusha
add
add
mov
shrl
mov
mov
out
enter
jbe
pop
and
xor
mov
scas
dec
add
add
xchg
sub
add
add
mov
inc
mov
outsb
icebp
loope
add
enter
sbb
cmp
jo,pn
add
scas
dec
in
pushf
aas
xchg
int
mov
sub
ss
repz
lahf
notl
and
test
repnz
mov
push
test
add
clc
addr16
push
adc
pop
jo
pop
or
int
enter
mov
fbstp
insl
inc
or
add
add
push
into
cmp
roll
inc
cli
in
call
mov
push
sub
mov
add
test
add
mov
inc
out
repz
test
add
inc
pop
push
cmpsb
lret
mov
fsubs
add
add
add
mov
jl
adc
xchg
nop
cld
dec
add
add
mov
or
xchg
decl
out
sub
xchg
or
add
xchg
iret
mov
or
add
add
cmp
mov
jg
jp
mov
outsb
pop
addr16
jmp
xor
xor
lea
stos
mov
add
cmp
stos
xchg
sub
and
sbb
mov
loope
adc
xor
pop
shlb
add
jns
add
add
and
repnz
arpl
popa
mov
lcall
mov
jbe
add
add
pop
aaa
and
insl
mov
jge
sbbl
std
hlt
test
add
add
fiadds
fsubr
mov
sbb
loope
sar
test
dec
nop
dec
outsl
sub
jae
mov
push
push
xor
push
xchg
jae
rol
or
loopne
add
fisubrs
sbb
hlt
push
sbb
cmp
mov
or
add
push
jnp
lret
jmp
adc
int
insb
add
out
es
inc
add
mov
jmp
jp
pop
sar
fmul
out
or
add
add
add
inc
js
sbbl
jbe
add
add
mov
adc
enter
or
fxsave
add
fwait
jne
lcall
sbb
xlat
or
add
add
add
push
sub
mov
adc
test
sbb
mov
add
enter
mov
add
dec
iret
bnd
pop
iret
push
push
push
xchg
add
add
shr
mov
aad
xor
mov
insl
stos
mov
mov
sbb
mov
mov
add
add
sub
mov
pushf
push
inc
pushf
mov
aad
xchg
inc
ss
and
add
add
sub
add
add
ss
ds
mov
add
adc
add
add
jo
fisttpll
sbb
add
int
push
ret
jl
mov
cmp
loopne
ret
mov
ret
lods
aad
cmpsl
push
xor
add
add
and
mov
xor
arpl
cmp
push
cmp
mov
and
add
add
aaa
in
add
xor
add
add
dec
scas
push
stos
pop
mov
xor
mov
aas
xlat
xor
add
mov
cltd
ret
sbb
adc
add
mov
cmp
add
aas
push
sub
add
add
add
add
xchg
mov
mov
hlt
imul
mov
push
cmc
xor
add
add
mov
add
imul
jne
pop
jno
sub
cmp
fldl
mov
mov
mov
rol
cmc
inc
addb
add
lahf
pushf
xor
xchg
adc
out
jp
sti
xor
mov
ret
inc
xor
fimull
add
add
les
push
out
xor
mov
mov
add
lods
je
pop
inc
add
pop
mov
add
mov
movsl
and
bound
mov
jg
adc
add
ljmp
adc
dec
adc
movsb
enter
js
addr16
leave
jp
sbb
outsl
mov
pop
ss
jo
test
cmpsl
call
cmpsl
mov
add
cmp
xchg
xchg
mov
into
mov
pop
lea
xchg
daa
loop
rcrb
sbb
iret
movsl
jnp
ret
jo
cmp
cmpl
add
icebp
push
mov
shrb
add
sbb
xchg
icebp
enter
jle
push
fwait
jo
mov
pop
pushw
add
add
add
xchg
ret
stos
adc
sbb
xor
mov
adc
mov
or
add
add
frstor
add
sub
add
add
inc
xchg
sbb
fimull
bound
add
push
mov
add
inc
sub
add
add
and
add
add
add
es
xor
push
xchg
aaa
mov
jno
xor
shll
pop
in
adc
scas
sti
mov
mov
add
outsl
sub
bound
push
ret
adc
lcall
les
aas
lods
cltd
sub
adc
xlat
test
mov
cmp
hlt
sbb
flds
add
add
xchg
or
add
add
fiadds
push
or
and
mov
add
hlt
add
add
add
mov
cmpsb
movsl
xor
outsb
mov
inc
add
add
je
rclb
add
in
ds
mov
ret
lock
or
rorb
test
pop
xor
imul
add
xchg
jnp
std
adc
xor
das
xor
add
push
jne
dec
push
mov
lods
outsb
cli
pop
incl
add
add
insl
bound
lcall
cltd
jmp
push
inc
dec
mov
in
xor
adc
test
ficoml
wrmsr
daa
add
add
repnz
jmp
jo
pop
pop
and
dec
out
cld
sarb
shlb
mov
in
pop
inc
push
fnstsw
mov
adc
outsb
jge
stos
gs
movsl
sbb
sbbb
or
or
popa
mov
xor
add
mov
add
sub
or
mov
sti
mulb
pop
jae
pop
ret
mov
scas
sub
mov
jge
lret
and
add
sbb
add
add
or
mov
add
imul
dec
jne
sub
mov
add
jmp
cmp
jne
push
sub
add
jo
pop
lods
adc
add
add
add
jmp
add
add
and
add
add
insw
dec
enter
es
int
jnp
iret
test
add
inc
lods
fbld
inc
xchg
scas
jno
mov
adc
test
into
loopne
das
call
enter
cwtl
mov
add
mov
lods
out
stos
jg
add
add
bound
add
xor
mov
clc
or
cmc
fcoms
add
mov
loope
inc
add
xor
sbb
negb
lcall
or
add
add
fdivs
mov
mov
add
test
aam
iret
ja
aam
loopne
sarl
sub
add
add
data16
add
push
stos
sahf
test
jo
sti
xor
jle
mov
add
add
xchg
add
mov
xchg
adc
repnz
stos
jp
sub
fst
inc
lock
pop
sahf
cmp
xor
arpl
pusha
add
mov
push
pop
lods
std
push
adc
lret
cmpl
add
add
add
test
mov
lods
pop
push
repnz
add
add
enter
into
add
les
xchg
xor
mov
repz
cld
pusha
add
add
popa
push
ljmp
sub
test
shll
mov
mov
sahf
loope
xor
add
add
mov
mov
add
mov
jne
mov
shl
mov
mov
add
sub
add
mov
call
lods
cmpsl
cmpsb
dec
mov
jae
sbb
jb
rol
mov
add
jmp
mov
dec
or
add
add
or
jb
xor
sahf
out
inc
es
ja
pop
or
clc
mov
jle
jbe
dec
lods
pop
cmc
cmp
add
mov
xchg
loope
jnp
ret
jp
mov
jbe
loopne
lret
bound
stos
dec
stos
or
push
mov
inc
mov
pop
cmp
int
add
and
xchg
mov
rcl
aad
stos
pop
inc
test
jns
xor
add
fimuls
adc
call
das
movw
daa
daa
les
add
jbe
pop
lods
mul
ja
xor
cmc
dec
pop
cmp
in
jle
add
mov
mov
movsl
add
pop
mov
icebp
das
cld
jno
imul
mov
aad
or
mov
add
add
sub
mov
xchg
gs
cmp
test
lods
pop
popa
mov
daa
pop
and
pop
shrl
loopne
addl
and
add
add
jb
pop
mov
push
fbld
mov
xorl
add
shll
imul
sbb
addl
add
daa
repnz
mov
mov
jae
add
je
sub
push
jp
and
outsl
testl
mov
adc
mov
mov
ret
mov
stos
xchg
mov
lret
pushf
cmp
adc
mov
inc
inc
add
dec
add
jne
xor
int3
jne
rcrb
fiadds
mov
popf
push
mov
adc
std
jp
cmp
negl
test
sub
add
add
jnp
cmp
mov
nop
imul
inc
add
add
mov
add
add
mov
add
add
adc
inc
iret
jo
nop
in
jmp
cmp
add
ror
mov
mov
addr16
push
lret
or
call
xchg
add
add
add
dec
popa
jne
jns
jl
imul
int
cld
mov
xchg
shll
shlb
cli
inc
pop
and
jle
add
add
jmp
cli
mov
in
cmp
mov
xchg
daa
dec
mov
or
lods
and
add
add
jae
sbb
stos
adc
aad
mov
add
add
mov
leave
pop
sub
xor
aad
cmpsb
sub
mov
sub
add
push
out
pop
and
mov
lods
jl
mov
xchg
add
pusha
add
mov
clc
cmp
dec
cmp
iret
test
jle
scas
pop
xchg
sti
pop
insl
fldenv
in
hlt
push
jecxz
add
add
ficompl
adc
mov
dec
add
scas
popa
mov
add
andl
mov
rorl
jnp
aas
mov
call
push
mov
add
add
sbb
or
fsubr
xchg
dec
imul
mov
jae
inc
add
add
add
out
jns
push
mov
in
outsb
ljmp
jae
stos
call
stc
loope
push
repz
push
aam
stos
xchg
int
xchg
and
mov
adcb
adc
or
mov
les
decb
ljmp
xchg
ficompl
adc
lret
add
dec
add
add
fistpll
mov
xor
inc
dec
add
add
add
int
outsb
les
mov
scas
out
aas
sahf
aaa
pop
inc
xor
mov
and
add
add
int
lock
jbe
addr16
dec
xchg
adcb
push
nop
pushl
pxor
dec
xchg
subb
xchg
mov
mov
in
push
das
leave
sub
jne
mov
add
add
fcompl
pop
es
aaa
icebp
lock
pushl
and
add
add
fst
lret
jmp
or
add
add
mov
push
and
add
add
ficomps
fdiv
add
out
outsl
int
iret
mov
jp,pn
add
add
arpl
mov
jmp
inc
add
add
out
ret
push
in
rorl
cmp
cmp
mov
je
jecxz
daa
dec
add
add
add
jecxz
and
into
mov
es
pushf
mov
adc
add
test
fcomps
mov
fidivrs
xchg
xor
mov
add
mov
loopne
or
mov
hlt
fwait
jnp
in
jp
or
mov
test
hlt
pop
clc
out
sub
mov
dec
fldenv
mov
jg
pop
inc
popl
pop
mov
push
iret
in
mov
push
push
add
add
pop
cmc
or
mov
add
call
loop
aas
xor
lcall
notb
lock
mov
out
bound
or
add
and
or
add
add
cli
push
pop
cmpsl
lahf
insl
lods
adc
and
mov
adc
les
into
add
add
add
sbb
outsl
mov
fnstcw
sub
sbb
into
inc
fcmovu
imul
hlt
movsb
rolb
mov
pushf
adc
sub
cmp
or
or
add
add
test
cmc
mov
jnp
pop
sub
jl
jle
or
pop
orb
inc
std
xor
imul
add
into
dec
add
fcomps
out
inc
insb
add
mov
xchg
xchg
adc
loope
fwait
push
js
sub
mov
adc
xchg
xchg
mov
dec
add
inc
in
xchg
jo
cld
lock
add
add
mov
mov
js
dec
sahf
lret
or
add
add
xor
popf
mov
add
add
add
push
popf
rcrl
in
xchg
xor
adc
pop
shrb
add
cmp
mov
pop
xchg
insb
add
mov
jmp
jl
and
shl
jg
and
repz
xchg
ffree
lret
call
data16
leave
scas
sbb
pop
dec
add
shlb
mov
fimull
inc
mov
pop
pop
sbb
mov
add
fwait
lds
aaa
outsl
jb
adc
xchg
mov
mov
dec
pop
in
dec
add
add
pop
add
add
sbb
inc
add
cmpsl
cmp
xchg
and
sub
jne
xor
push
mov
xor
sbb
pop
pusha
add
mov
add
or
dec
mov
mov
daa
sarl
add
mov
mov
dec
aad
pop
mov
push
xchg
add
out
sbb
mov
jmp
add
dec
sbb
push
stos
sub
bound
daa
lods
aas
bound
div
push
dec
pop
lea
xchg
fstps
cmpsl
shl
icebp
mov
mov
cmp
dec
jno
and
divb
lods
gs
pop
sbb
push
or
lret
popa
dec
inc
ficomps
repz
in
cmc
sahf
mov
lret
or
lcall
push
pop
in
fbstp
in
movsb
iret
mov
xchg
dec
jbe
cmpsb
cmp
fwait
mov
add
add
add
lret
or
shrl
pop
js
arpl
xchg
jge
cmp
scas
pop
cltd
inc
add
lock
add
or
loopne
out
pop
pop
adc
xchg
cmp
adc
fstpl
add
add
mov
add
add
add
add
enter
cmp
rcrl
add
add
mov
mov
jmp
and
jo
ja
xor
sbb
dec
es
repnz
incb
sub
mov
add
add
arpl
enter
or
enter
adc
mov
dec
mov
repnz
add
add
pop
in
sbb
inc
fsubr
mov
sbb
aad
sbb
cltd
mov
leave
mov
adc
test
cmpxchg
or
mov
cmpsl
adc
jl
int
pop
push
loope
jo
test
cmp
fwait
je
fdiv
mov
stos
push
fwait
dec
add
dec
add
test
cmpsl
jle
inc
icebp
mov
mov
mov
sbb
dec
add
add
add
jnp
add
add
mov
mov
jnp
cltd
pop
daa
ret
call
adc
mov
outsl
je
mov
add
add
ljmp
jl
outsl
sbb
add
dec
sub
sub
fbstp
out
das
adc
test
lret
stos
test
add
add
cmp
mov
outsl
jbe
mov
push
sub
sub
add
add
sub
aaa
sub
cmpsl
test
es
pop
in
iret
sarb
adc
add
or
cmp
lahf
jns
cltd
add
in
mov
pop
push
inc
xchg
add
xchg
out
mov
stos
jg
daa
cltd
out
jmp
jb
jo
adcb
mov
add
gs
dec
pop
pop
ja
sahf
adc
xor
and
mov
add
mov
cwtl
add
insl
out
cmp
jecxz
imul
mov
dec
add
add
idiv
jae
call
pop
popa
pushf
sub
cli
imul
mov
add
mov
or
push
mov
popa
imul
add
insb
add
add
mov
adc
jno
lds
popf
pop
sub
add
inc
sbb
dec
jb
imul
fwait
leave
mov
mov
push
hlt
aaa
insl
stos
aaa
mov
xchg
cmp
xchg
mov
add
mov
add
pop
sti
addps
test
addr16
in
andl
adcl
cwtl
and
movsb
push
push
aas
int
inc
mov
add
lcall
mov
fstp
in
aad
jno
add
repnz
mov
mov
fdiv
mov
add
add
das
lcall
mov
stc
je
aam
into
sub
xchg
push
jns
sub
mov
add
add
dec
mov
push
or
pop
rcrb
in
das
repz
add
aas
fstpl
add
mov
fadds
add
lods
rorb
pop
mov
sbbb
daa
das
add
rcrl
sub
add
add
hlt
sbb
cwtl
jnp
add
add
lahf
or
push
xor
aam
or
mov
les
add
xchg
lods
or
xchg
cwtl
jno
mov
and
sbb
push
lods
fnstsw
sub
mov
push
ret
hlt
in
fcomps
and
mov
add
add
sub
mov
dec
sarb
addr16
or
cmc
jmp
sub
mov
jae
leave
mov
add
add
mov
mov
inc
add
test
add
add
and
add
add
inc
push
mov
popa
or
add
test
in
insl
loop
xor
int3
scas
mov
andl
add
add
das
cmp
cld
pop
pop
jl
xor
fdivr
cs
inc
add
cmc
pop
jo
xchg
insb
add
ds
mul
push
mov
sub
mov
scas
cmpsb
jb
sbb
push
imul
sub
add
add
sbb
push
shrb
mov
incl
les
movsl
fcmovnb
imul
mov
mov
xor
sbb
add
add
es
fchs
negb
sbb
cmpsl
cmc
inc
mov
inc
sbb
stc
mov
sub
scas
xchg
jne
mov
xor
or
xchg
shl
andnps
popa
cltd
sub
mov
push
je
add
jb
pop
adc
js
sub
mov
sti
out
sub
mov
push
mov
add
fsubrl
stos
daa
lds
in
dec
dec
jnp
sti
lods
inc
add
push
fstps
mov
sub
add
add
jnp
add
test
xor
arpl
int
mov
sbb
jne
decl
add
cmp
add
add
out
imul
inc
out
test
or
mov
fwait
cwtl
jns
ljmp
loop
imul
js
and
jns
bnd
xorb
test
insb
add
add
pop
pop
cmpsl
add
les
pop
xchg
add
paddd
cpuid
pop
mov
lea
sub
mov
lds
sar
sub
mov
gs
int
sub
mov
lahf
mov
das
push
enter
ret
in
dec
xor
mov
mov
scas
xor
and
scas
add
lock
sub
mov
movsb
xchg
js
add
add
mov
add
dec
inc
imul
jecxz
testl
int3
pop
inc
pop
mov
dec
jnp
push
sbb
jmp
int
mov
mov
add
add
pop
mov
xchg
xorb
push
scas
fidivrs
stos
arpl
bound
add
add
repnz
mov
movsb
add
popf
sub
add
add
scas
mov
jae
sub
inc
in
in
ds
and
mov
jecxz
adc
subb
mov
add
bound
xor
mov
in
loopne
sub
add
adc
sbb
idivl
add
fisttpl
mov
psraw
repz
mov
push
mov
loopne
push
jle
add
add
lret
ja
fdivrl
pop
inc
mov
bnd
xchg
iret
and
mov
out
adc
add
add
add
aad
add
mov
icebp
je
mov
push
inc
add
add
clc
push
into
dec
adc
add
add
jmp
dec
jno
and
adc
movsb
mov
rcrl
frstor
add
add
out
clc
cmp
jbe
pop
or
add
or
repnz
mov
and
mov
lcall
xchg
pop
dec
repz
fwait
iret
add
add
add
mov
lret
jne
adc
jecxz
push
scas
or
sahf
ds
lods
xchg
adc
addl
xchg
sub
mov
fiadds
jl
les
negl
fdivr
push
insl
pop
loop
cmp
adc
sbb
ret
andb
mov
add
inc
mov
ret
and
int
sub
add
add
insb
add
sub
in
fisttps
test
dec
add
add
mov
hlt
stos
aas
dec
hlt
xchg
sbb
rol
inc
add
push
aam
xchg
sub
mov
lcall
add
mov
in
mov
add
jle,pn
fisttpll
inc
add
add
sarb
add
add
dec
add
mov
inc
inc
sarb
xchg
fnstcw
lret
push
add
add
add
add
add
sbb
inc
jno
loop
hlt
or
sub
inc
add
cmp
pop
aam
fmul
pinsrw
cs
es
test
mov
sub
add
cmc
mov
test
add
mov
add
add
ffreep
xchg
cmp
pusha
add
add
mov
xlat
in
cmp
add
sbbl
fisubs
inc
add
mov
fimull
push
data16
add
add
cltd
lret
jnp
andl
dec
add
add
add
add
jecxz
cmp
dec
icebp
inc
add
add
adc
scas
lods
xchg
dec
sbb
mov
push
sti
data16
push
cwtl
lret
inc
aaa
cmp
add
mov
nop
mov
jae
pop
xor
inc
outsb
loop
in
xor
insb
add
dec
lea
stos
or
scas
jbe
add
negl
mov
mov
out
inc
add
add
push
jb
inc
sbb
out
das
shlb
enter
sub
mov
js
inc
sub
jne
into
inc
imul
xchg
push
sub
sti
and
mov
lea
add
cmp
popa
cmp
add
cltd
push
fildl
into
dec
cmp
push
inc
add
sbb
push
jne
push
sbb
addr16
xor
mov
mov
lea
jns
sbb
lods
aam
mov
ret
inc
lods
out
test
jecxz
out
sbb
mov
push
xchg
cwtl
arpl
ja
push
jb
adc
xor
dec
cltd
jge
jle
sarb
aad
mov
inc
popa
repz
jmp
mov
cmp
popa
in
in
or
mov
add
incb
ds
das
or
dec
cs
int
stos
vpsubsb
jns
fsubrl
add
add
push
cli
cmc
dec
add
arpl
push
jo
adc
dec
adc
insl
data16
cmpsl
addr16
mov
add
in
add
push
clc
jno
out
mov
data16
push
mov
push
cltd
mov
add
xchg
inc
add
mov
mov
mull
loop
ds
mov
fadds
add
add
add
jle
mov
sub
add
add
test
in
daa
das
ljmp
das
xor
cmp
cmp
dec
call
adc
scas
push
adc
mov
lahf
popa
iret
test
add
and
jae
ss
mov
mov
dec
pop
pop
rorb
aas
sbb
push
popf
fsub
pop
cmp
test
push
mov
xchg
pop
lret
int3
or
mov
jns
fidivrs
pop
sti
mov
add
xor
aam
xor
xor
pushf
add
adc
push
xor
mov
sub
lcall
xlat
inc
out
and
ret
pushf
lock
cmp
push
jne
add
adc
repz
popa
push
pop
adc
fisubl
adc
mov
add
mov
jp
out
add
add
add
add
add
add
loop
add
add
arpl
and
mov
out
ds
and
mov
mov
add
scas
mov
push
flds
cmp
into
scas
mov
mov
sbbb
xor
bnd
ss
aaa
xchg
mov
pop
rcll
lods
leave
loope
rol
push
iret
sub
repz
jl
cmp
jmp
in
aaa
stc
nop
es
loope
jne
insl
mov
add
add
rcr
push
rclb
add
add
ret
push
xchg
mov
fadd
lods
gs
jns
rolb
inc
outsb
mov
xchg
lahf
hlt
cwtl
mov
push
repnz
and
add
add
subb
jbe
int
testb
jmp
dec
push
gs
push
mov
and
nop
and
mov
mov
jge
cmp
iret
bound
inc
mov
jo
subb
and
add
add
add
add
add
jb
rorb
add
add
dec
shlb
add
sbbl
loopne
mov
subps
and
mov
adc
jecxz
xchg
adc
pop
aaa
mov
sub
mov
mov
imul
movsl
test
loop
sbb
sti
pop
hlt
sbb
dec
hlt
outsl
out
addr16
sub
lds
push
popl
popl
add
push
xchg
cmp
scas
sahf
dec
ficoms
outsl
mov
popa
ss
jmp
jno
mov
std
cs
mov
inc
xchg
lods
mov
lods
das
imul
dec
push
cwtl
and
add
add
add
lret
ja
fcomip
jecxz
jp
loopne
ljmp
mov
mov
xchg
in
int3
cmpsb
cmpb
out
add
ss
dec
add
add
sub
add
add
add
push
lea
clc
aam
sub
mov
testl
icebp
dec
cmpsb
adcl
add
and
add
add
push
jns
fidivs
mov
add
mov
cmc
pop
and
addl
push
scas
sar
mov
add
add
repz
add
add
add
je
and
test
pop
mov
add
add
add
imul
into
cld
les
dec
mov
adc
add
add
fstpt
inc
add
in
inc
add
add
mov
mov
add
add
rcl
adc
cmpsb
jb
icebp
jne
xchg
sbb
jns
out
add
add
or
into
out
lcall
xchg
cltd
xchg
repz
add
add
add
add
xor
fmull
jg
xchg
xor
cmpsb
xchg
not
into
sbb
sarl
add
out
cwtl
fnstsw
arpl
mov
inc
add
inc
sti
sbb
add
lcall
ret
je
gs
lcall
sub
andb
add
int3
push
push
pop
xlat
add
and
mov
daa
shll
or
pop
mov
add
add
add
adc
mov
add
sub
in
pushf
daa
sub
ljmp
es
xchg
sub
mov
jno
ljmp
flds
add
sar
fwait
test
aad
popf
repnz
mov
lds
jae
push
push
lods
adc
pusha
add
xchg
inc
add
add
roll
dec
andl
add
arpl
xor
inc
into
gs
pop
xlat
sub
inc
int
frstor
add
sahf
outsl
ffreep
loope
add
lret
inc
dec
aaa
pop
jb
add
sub
inc
push
shll
adc
lock
cli
pushf
mov
add
mov
dec
add
mov
stos
pusha
add
add
int3
inc
add
add
pop
in
loopne
dec
mov
mov
cmp
inc
add
gs
stos
lret
fimull
gs
loop
icebp
ret
adc
icebp
xchg
xor
pop
or
jmp
mov
ret
inc
add
insb
add
add
ror
popf
mov
ficompl
add
mov
cltd
mov
mov
push
push
in
mov
out
lds
idiv
addr16
cmpsl
cmpsb
push
shlb
incb
test
stc
mov
jmp
pop
aam
popl
mov
mov
mov
in
cli
sub
mov
add
cmp
nop
or
or
add
add
and
dec
add
mov
jbe
add
mov
cmpsb
mov
repz
mov
adc
cmp
inc
bound
fldl
loopne
iret
pop
inc
cltd
mov
add
mov
mov
insl
push
xor
cmpsl
cmp
out
pop
mov
push
fisttpll
xor
sbb
add
mov
in
push
negl
mov
mov
sbb
mov
test
lahf
lahf
xchg
test
sbb
shll
add
add
pop
xorb
out
outsb
xlat
sbb
mov
push
scas
int3
ljmp
inc
stos
imul
add
roll
pop
mov
add
mov
movsl
pop
insb
add
pop
in
sub
xor
xchg
mov
rcll
add
add
adc
sub
shll
addb
repz
icebp
adc
mov
adc
pop
pop
lahf
mov
sbb
add
add
lock
js
aad
into
sbb
mov
add
push
movsb
cli
test
lret
repz
add
add
into
add
add
rorl
ret
and
dec
js
rcrl
push
popl
cmp
sbb
fsubrs
add
add
add
fdiv
aam
adc
sub
out
jg
add
push
mov
pop
sbb
xor
pop
loope
std
jbe
add
add
test
stos
jno
or
add
add
lods
cmp
repz
dec
pop
ret
add
add
cmpsl
enterw
add
int
sarl
popa
mov
jns
cmp
xchg
push
mov
sahf
pop
push
cmpsb
int3
testb
sub
mov
xor
ret
mov
sbb
out
shrl
add
aas
sbb
add
mov
and
add
aam
test
imul
mov
add
mov
orb
stc
mov
loope
add
mov
pop
sub
ss
out
add
add
ds
outsl
in
inc
add
add
and
mov
in
add
add
add
and
add
add
xlat
adc
enter
adc
sahf
cwtl
push
ja
test
jle
lea
add
push
out
outsl
add
mov
mov
aad
subl
add
add
mov
sub
jno
pop
ret
or
popa
mov
sub
mov
mov
adc
inc
sarb
xorb
jno
adc
test
add
addr16
mov
pop
fnstsw
push
ds
cmpsl
xchg
enter
xchg
sub
jmp
cmp
mov
add
and
dec
dec
mul
dec
test
jp
add
add
dec
xchg
or
mov
js
loope
sub
pop
test
sub
mov
mov
fnstcw
cmp
dec
int3
and
add
add
mov
scas
pop
dec
shll
and
mov
sbb
jno
lods
xor
add
cwtl
test
inc
stc
jmp
dec
dec
insl
inc
scas
loop
inc
xor
or
lods
and
mov
sbb
mov
inc
pop
xor
int3
mov
insb
add
and
sbb
xchg
jp
add
or
push
imul
daa
icebp
cmpsb
imul
addl
add
pop
mov
into
repnz
xor
mov
jmp
adc
push
push
inc
and
mov
adc
and
daa
mov
out
inc
cs
fdivrl
sub
add
add
cltd
imul
push
jae
jns
ja
sbb
dec
jns
adc
test
lds
add
pusha
add
add
test
push
inc
cmp
add
jbe
jl
push
insb
add
loop
inc
and
imul
fidivs
lret
out
mov
stos
fimuls
fwait
or
dec
add
add
xor
jmp
or
adc
xchg
adc
mov
add
add
out
data16
sbb
jl
ss
push
js
fistpl
xor
out
scas
xlat
or
loop
cmp
or
das
inc
inc
std
xor
shll
mov
loopne,pt
lahf
dec
scas
jb
lret
sub
movsb
int3
mov
daa
adc
insl
dec
in
int
aas
xchg
cmp
add
add
jbe
cld
inc
inc
sbb
clc
mov
rclb
test
add
mov
sbb
xor
jecxz
mov
and
scas
andb
xchg
test
jl
lea
pop
roll
dec
popf
lods
add
add
add
js
or
in
jp
add
add
add
ja
dec
fwait
sbb
mov
pop
imul
dec
pop
pop
cmpsb
test
add
pop
mov
dec
fdivl
jp
xchg
push
ds
ja
push
enter
inc
add
add
outsl
out
add
std
xor
adc
repz
sub
add
mov
sbb
jbe
iret
adc
pop
outsb
pop
out
movsb
adc
jb
xor
mov
inc
add
add
xor
loop
insb
add
add
subb
out
fcmovb
add
add
add
pop
mov
pop
inc
out
xor
fwait
call
add
jo
pop
test
je
call
call
add
xlat
push
data16
add
add
out
or
add
add
add
test
add
mov
pop
adcb
cwtl
xor
add
add
shl
push
and
add
add
dec
push
fdivrs
push
clc
mov
inc
lods
sbb
jno
pop
add
add
mov
sub
ss
rolb
xchg
in
mov
je
xchg
bound
hlt
cs
lock
mov
pop
daa
icebp
aam
cmpl
mov
adc
xchg
rol
cmp
adc
out
out
sbb
push
adc
lods
rorl
xor
testl
cmpsb
or
adc
cmpsl
aas
fcomp
inc
sub
addl
loop
mov
add
add
pop
out
addl
test
mov
fisttpl
mov
mov
mov
push
loopne
scas
inc
aaa
jecxz
xor
xchg
in
inc
add
jge
les
mov
mov
jae
pushf
test
jp
bound
in
inc
add
add
xchg
sbb
jae
adc
daa
inc
adc
sbbl
xor
addr16
push
adc
add
add
lock
roll
es
mov
mov
pop
cmp
mov
pop
push
mov
das
ljmp
add
stc
shl
fldt
mov
jae
or
mov
rorl
xchg
push
or
add
add
movsl
dec
cmp
test
aam
push
cmp
pop
roll
pop
jne
xlat
push
inc
hlt
xor
pop
mov
xchg
jge
sub
mov
or
mov
or
mov
jg
in
inc
add
add
xor
xchg
xor
sub
cmc
mov
add
cltd
dec
stos
push
movsb
mov
pop
pop
fistps
lods
js
out
shl
cld
cli
hlt
mov
loopne
scas
cmpsl
cld
cmp
test
sbb
mov
dec
and
mov
lods
repz
movsl
lahf
and
cmp
xor
pop
fwait
test
lods
and
mov
ret
xor
dec
dec
jp
push
mov
jo
scas
fidivrl
test
aaa
pmaxsw
add
add
add
add
add
push
pop
jno
mov
mov
adc
push
sahf
cld
dec
ret
xor
add
add
add
mov
add
add
syscall
ss
push
sub
jne
sub
aas
bound
pop
inc
enter
and
add
add
sub
add
add
jns
add
add
js
imul
add
or
add
sbb
ja
shrb
mov
add
add
aam
sub
dec
add
add
lret
clc
cli
ljmp
and
mov
int3
xor
mov
stc
lea
adc
push
adc
add
push
in
cmc
test
mov
adc
test
cmp
jbe
popa
lea
xlat
mov
stos
fsub
int
add
add
mov
or
fstpt
xor
and
pop
data16
outsb
mov
xlat
cli
iret
xchg
addr16
jle
push
or
add
add
jnp
mov
add
or
mov
stos
cs
cmp
add
test
add
add
add
adc
in
imul
fnstsw
add
jo
lock
push
add
pusha
add
fisttpll
dec
mov
add
fstpt
rcr
push
inc
inc
cmp
iret
mov
push
dec
mov
int3
pushf
mov
add
add
mov
std
mov
mov
out
push
dec
jecxz
push
inc
pop
cmpsl
pop
mov
mov
sub
or
add
add
mov
cmp
mov
jb
adc
inc
or
pop
das
push
mov
pusha
add
xchg
add
add
in
add
scas
mov
std
insl
lret
mov
add
je
mov
leave
push
clc
sbb
dec
adc
mov
inc
sub
lods
add
in
in
imul
pop
incb
mov
js
add
jle
mov
les
add
add
or
cwtl
iret
adc
mov
add
jb
call
sbb
push
jmp
jecxz
es
pop
or
push
or
mov
add
add
ficomps
inc
lcall
adc
jle
mov
shl
jmp
icebp
movb
repnz
add
add
enter
xor
mov
add
mov
add
add
out
add
add
fwait
pop
scas
cmp
dec
add
and
add
add
xchg
sub
mov
mov
das
ja
addr16
xor
outsb
jb
ss
sbb
cmc
and
add
add
add
sub
mov
fisttpl
dec
jle
sbb
cmp
push
push
aaa
fistl
dec
add
clc
xlat
add
loopne
adc
and
add
aad
add
in
call
adc
push
dec
sub
add
add
mov
stos
sub
jmp
mov
popa
or
rorb
mov
lcall
rcl
dec
add
add
popf
push
cmpsb
je
push
in
cmpsl
inc
daa
mov
adc
or
lcall
cmp
test
add
enter
stc
sub
dec
jmp
adc
xor
add
add
xchg
arpl
lock
sbb
jp
loop
inc
jg
les
jmp
sub
add
jno
xchg
cmpsl
icebp
inc
cmpsb
add
add
add
add
add
add
add
in
std
xchg
lcall
arpl
aam
pop
jne
loopne
jb
or
add
addr16
jmp
mov
fwait
push
dec
test
mov
push
test
inc
xchg
jl
adc
pop
or
add
add
add
stos
sub
mov
cmp
mov
loop
adc
mov
sahf
cmp
jmp
cli
pop
mov
jle
xor
test
dec
add
mov
dec
add
add
mov
push
imul
pop
lcall
ret
xchg
pop
shrl
cmp
int3
inc
xchg
xor
push
jle
fstpt
add
ja
mov
cmp
popf
cld
mov
add
fdivl
mov
pop
xchg
pop
stos
mov
mov
sub
mov
sbb
lods
mov
out
stos
mov
add
push
popf
dec
push
test
mov
cmp
pop
push
xchg
cmp
push
push
ret
push
jo
cwtl
sub
and
mov
sbb
mov
xchg
imul
mov
rolb
nop
das
lret
or
add
add
es
xchg
xchg
push
pop
and
int
sar
push
stos
cmp
pop
mov
ret
lret
sahf
mov
xchg
push
sti
mov
test
sub
push
pop
sub
test
mov
cmpsl
outsb
push
xor
arpl
cld
mov
add
rcll
mov
add
fidivrs
lret
or
pop
cmp
int
xchg
push
ss
add
add
aas
into
sti
rolb
add
jle
mov
cltd
lds
sti
testb
jg
dec
xor
icebp
ss
xchg
push
stos
mov
lock
fistl
loope
xchg
jl,pn
pop
dec
cli
loope
stos
std
cwtl
in
push
and
inc
pusha
add
add
or
mov
jo
ljmp
loopne
in
lret
push
repnz
add
add
pop
push
add
push
out
lcall
and
ret
fnsave
fldt
stc
loopne
stc
scas
test
push
mov
sub
jnp
mov
gs
int3
aaa
fdivl
push
dec
jne
xor
repnz
mov
inc
cmp
add
mov
mov
mov
into
into
push
pop
or
add
add
clc
inc
leave
mov
mov
ret
rcrb
dec
mov
aad
adc
mov
lret
or
jecxz
insl
sub
mov
add
add
jge
xchg
std
lods
fucomp
cmpsb
mov
insb
add
add
dec
or
add
mov
sub
add
add
push
cltd
pop
cmp
call
cmp
push
add
mov
loop
jnp
jae
mov
call
aam
jmp
jle
mov
inc
ret
les
add
nop
or
add
add
stos
mov
sbb
imul
push
lahf
and
mov
and
sbb
sub
int3
in
daa
aad
jae
push
add
mov
dec
frstor
add
int
xchg
and
add
pop
and
std
aas
mov
mov
orl
sbb
or
mov
cli
jl
xchg
lods
add
out
in
mov
xchg
xor
adc
sahf
mov
mov
outsb
sub
cmpsb
pop
mov
loope
into
outsl
fldenv
sub
cli
enter
cs
dec
psubusw
xchg
iret
fsubrs
pop
xor
add
call
popa
test
cmp
sahf
push
nop
sub
mov
add
dec
rol
arpl
sub
mov
cmp
and
mov
movsl
stc
stc
xor
push
mov
daa
ret
and
mov
or
mov
jns
inc
in
mov
add
add
jle
mov
push
stc
cltd
test
inc
push
jb
xchg
into
cwtl
ljmp
add
sub
push
inc
add
add
in
aas
mov
mov
roll
add
add
mov
add
xor
aam
cmp
push
and
xchg
or
test
cwtl
pop
jecxz
sub
mov
cmp
mov
es
mov
pop
fidivl
out
push
out
notb
pop
test
mull
icebp
sti
inc
cmp
mov
scas
adcb
or
and
add
roll
enter
dec
inc
mov
xor
or
pop
fimuls
dec
push
ret
cmp
mov
into
or
push
iret
jno
add
inc
sbb
movsb
movlps
push
jge
xor
adc
add
add
mov
ficoml
push
sbb
inc
push
fwait
ret
xchg
shlb
hlt
and
jle
xchg
xchg
cmc
inc
adc
leave
sub
cmovae
add
add
ret
std
aad
inc
push
mov
iret
push
loopne
mov
cmp
add
add
cli
fwait
dec
add
add
pop
xchg
nop
repz
das
in
jecxz
pop
push
cli
in
adc
fwait
cld
lea
and
out
daa
out
mov
or
mov
cmp
test
add
or
add
add
sub
mov
jmp
push
out
cmc
lcall
test
add
inc
std
lahf
add
add
add
mov
negb
mov
dec
pop
mov
fldln2
ds
sbb
inc
mov
pop
mov
add
add
out
add
add
push
pop
fwait
jge
in
cwtd
xor
add
and
add
add
lods
jg
inc
add
int3
xchg
fcom
jae
push
data16
mov
arpl
fstpt
or
test
sbb
ret
mov
das
shl
mov
dec
into
les
jle
jecxz
add
mov
cmc
stos
sbb
adc
clc
int
aas
fsubrs
add
mov
adc
stos
jl
cmpsb
add
lcall
add
pop
inc
outsb
inc
dec
add
add
add
test
jle
add
add
das
shlb
add
mov
test
lea
pusha
add
add
add
lcall
add
sub
push
dec
xorb
mov
add
mul
add
jl
xor
pushf
cld
xchg
cltd
out
sub
sub
mov
mov
out
sub
hlt
cmpsb
jmp
add
out
or
outsb
mov
popa
repz
mov
cs
scas
loop
push
jb
inc
add
add
fisttpll
ficoms
or
popw
clc
sti
add
push
pop
add
mov
test
add
mov
add
popl
bound
jg
and
outsb
pop
cmp
xchg
xchg
inc
add
icebp
sub
xor
and
sbb
add
cmp
add
add
sbb
push
push
ficoml
clc
mov
jecxz
shll
aad
ja
repnz
add
add
push
popa
test
pop
or
and
fsts
push
sbb
mov
add
jbe
or
mov
dec
lahf
pop
jg
insb
add
add
or
jl
inc
push
sti
mov
or
mov
add
jns
add
cld
lds
push
pop
jle
and
add
arpl
lods
enter
adc
fsubr
pop
ret
add
add
insl
negb
dec
mov
add
and
add
add
test
mov
mov
add
add
pop
sbb
nop
mov
std
sbb
xlat
lock
mov
jno
dec
es
out
dec
add
add
dec
cmp
add
add
jp
pushf
inc
jp
imul
add
add
cmpsl
jne
mov
aas
xor
loope
mov
and
mov
mov
aad
sbb
test
ret
fidivs
inc
dec
add
test
stc
sub
dec
xchg
sub
pop
push
movsl
aas
insb
add
or
add
add
movsb
adc
lea
xor
outsl
dec
cmpsb
dec
xor
lret
rep
shlb
add
dec
imul
add
out
xorl
jns
into
into
mov
add
jl
fwait
pop
jns
jmp
ds
inc
mov
movsb
pusha
add
repnz
or
mov
pusha
add
add
jbe
add
add
push
lret
int
cmpsl
push
xchg
xor
clc
mov
jns
shll
test
cmp
ljmp
shr
cmp
sub
cmpl
and
push
add
jmp
dec
cmpl
cli
imul
lods
mov
add
add
imul
aad
ja
icebp
rcl
and
mov
or
push
icebp
movsl
add
dec
dec
add
add
popf
sti
xlat
loopne
and
sbb
pop
pop
sbb
xor
je
andl
add
add
mov
leave
in
adc
andb
xor
in
add
add
iret
mov
cmc
add
xlat
pop
xchg
cwtl
or
jo
mov
adcl
pushf
push
sar
sbbl
iret
mov
cmc
jmp
cmpsb
shlb
dec
dec
add
rorl
clc
sahf
jns
add
add
add
fldt
inc
xchg
loopne
add
add
xchg
jne
pop
push
mov
dec
add
pop
sbb
jno
dec
xchg
xor
add
mov
xchg
push
fidivs
movsl
dec
leave
push
loop
sbb
mov
out
cmp
lret
cvtsd2ss
out
cmp
in
jmp
stos
mov
out
push
xor
popf
push
and
xchg
in
mov
or
add
add
ret
test
add
stos
mov
mov
add
add
jg
stc
mov
xor
inc
push
out
dec
push
sub
mov
cmp
add
inc
mov
push
mov
mov
add
cs
cmpsl
add
inc
add
add
loop
cmp
add
sahf
jp
cltd
and
add
add
hlt
test
jnp
out
and
mov
mov
mov
lods
adc
or
imulb
add
add
sbbb
scas
inc
add
add
jl
jne
movsl
sbb
das
push
cmp
mov
add
mov
add
into
out
and
add
add
lock
sub
push
lcall
ljmp
add
add
push
movl
add
mov
cmp
lcall
add
add
into
cltd
cmp
xchg
je
mov
test
aam
add
add
push
cli
dec
xor
sub
add
add
pop
push
jne
add
jl
or
jl
fistl
cli
aad
sti
in
scas
add
das
repz
andl
add
add
es
mov
xor
xchg
sub
push
ljmp
repnz
push
cmpsb
xor
sub
rol
lret
stos
xchg
mov
loope
cmp
sarb
add
xchg
mov
add
add
enter
stos
orb
inc
add
add
jae
or
add
add
add
add
nop
aam
andl
add
aad
in
cld
jno
add
push
sarl
or
lea
jns
sbb
pop
lock
push
mov
mov
xchg
loope
pop
and
add
pop
ficompl
jns
add
add
out
js
add
sub
mov
push
flds
add
and
mov
sbb
arpl
push
scas
js
and
mov
insb
add
mov
add
add
adc
add
xchg
cmc
mov
dec
pop
jnp
fwait
int
loopne
mov
repz
xor
loop
cwtl
and
das
jmp
pop
clc
push
and
push
imul
add
or
mov
sahf
or
add
add
cltd
das
adcl
add
sbb
cmp
mov
mov
cli
cwtl
ds
mov
dec
sbb
nop
cmpsb
jno
pop
mov
fidivs
aaa
mov
inc
mov
jp
dec
add
jp
in
popa
pop
jp
xchg
mov
shl
adc
pushf
rcrb
sbb
xchg
test
pop
lcall
add
add
jno
mov
jae
sahf
mov
add
push
push
rorb
mov
sbb
loope
sbb
add
push
sub
jmp
dec
out
jmp
jecxz
pusha
add
add
loopne
fidivl
add
add
cmp
inc
add
add
jg
cwtl
push
jb
add
add
cmp
sbb
sbb
add
add
insb
add
add
mov
aas
xchg
sub
add
add
leave
pop
fsubrs
mov
push
fdivs
lea
xlat
es
mov
push
cmp
cmp
push
outsb
pop
xchg
xchg
stc
xchg
pop
push
insl
roll
adc
dec
adc
pop
test
call
loop
jbe
xor
push
and
mov
jb
sub
add
imul
test
aam
sub
pushf
cmc
movsb
jae
jb
cmp
jno
push
loope
aaa
xor
add
mov
add
add
add
mov
mov
dec
and
jae
push
in
gs
jge
js
sub
xchg
xchg
cld
nop
cmp
add
call
clc
pop
mov
push
xchg
xchg
loope
leave
sub
cld
pop
mov
gs
loope
mov
mov
mov
sbb
add
add
xor
adc
fwait
push
ja
cmpsb
popa
enter
int
inc
test
mov
mov
mov
xchg
add
add
in
test
sar
add
repz
dec
test
dec
add
add
cmpsl
pushf
sbb
sar
imul
add
add
cmp
pop
pop
outsl
sbb
pop
inc
mov
fcomps
lea
int3
jecxz
inc
daa
jg
and
or
mov
mov
inc
cmpsl
adc
add
daa
inc
js
jnp
sub
inc
in
pop
je
xor
and
push
pop
cmp
and
mov
out
xor
push
aas
cmp
shl
gs
in
popf
mov
mov
mov
and
cmp
and
mov
add
mov
sbb
mov
add
add
xchg
out
add
ds
int
test
rcrb
insl
mov
dec
inc
jle
lea
pop
movsb
clc
stos
jle
clc
push
cmp
je
lods
xchg
mov
add
add
call
adc
lret
mov
add
add
add
add
fadds
jo
mov
cld
adc
add
mov
push
gs
lea
imul
test
add
mov
jne
out
arpl
aad
pop
cmp
and
mov
lods
fmuls
rcrb
fstpl
ret
and
add
mov
cwtl
mov
push
push
jae
movsb
and
xchg
mov
xchg
leave
jne
cmc
int
cld
bound
nop
shr
rorl
icebp
fimull
sub
arpl
xchg
mov
stc
mov
aam
test
scas
xor
and
add
add
sbb
stc
pop
sub
xchg
adc
mov
loopne
inc
mov
ret
lds
dec
jg
add
jp
sub
add
add
sbb
shll
and
fldl
add
add
lods
add
add
add
iret
pop
std
pushf
xlat
pop
adc
ss
test
add
repz
jp
and
mov
adc
arpl
es
sub
lods
mov
xor
lcall
out
inc
adc
es
add
add
stc
neg
or
pop
mov
into
dec
mov
and
mov
add
add
add
pop
ficompl
sub
add
add
add
in
cmp
pop
jo
mov
rcl
cmp
cmp
or
add
add
mov
inc
inc
fisubrs
imul
into
pop
roll
mov
mov
ret
mov
jmp
xchg
mov
dec
inc
gs
sub
call
popf
js
data16
dec
xchg
mov
imul
add
jp
scas
adc
mov
cmp
pusha
add
sbb
cmp
aam
add
add
add
mov
adc
pop
sub
mov
or
add
add
add
mov
pop
rolb
push
pop
push
adc
add
add
inc
add
add
adc
test
push
jge
add
xorb
into
mov
sbb
stos
dec
jne
push
cmp
mov
mov
mov
xchg
repz
and
loopne
cmp
add
aas
cmpsb
test
aas
shrb
mov
pop
mov
cmp
mov
ficomps
fnstcw
sbb
pushf
cmc
mov
xchg
dec
std
and
fimuls
jne
ds
add
pop
mov
and
add
add
inc
aam
repz
add
add
sub
mov
jae
push
push
inc
stos
xchg
push
arpl
mov
mov
dec
stc
rorl
iret
and
push
fisubs
mov
aas
pop
push
add
add
add
in
stos
xor
xor
and
or
add
add
in
outsl
xor
add
add
inc
mov
or
dec
jp
add
inc
mov
cmp
cmpsl
jbe
mov
add
cmp
mov
aaa
out
gs
push
stc
add
add
add
std
aad
out
mov
add
mov
pop
push
inc
xorb
xchg
call
xchg
pop
sarb
lods
test
jle
nop
xchg
adc
out
or
mov
sbb
mov
lock
sub
imul
pop
ret
in
cmpb
mov
mov
inc
sbb
stos
lea
xlat
lret
test
insb
add
add
sbb
jmp
xor
cmp
fdivrp
subb
add
xchg
lods
pushf
cmp
insb
add
add
xlat
mov
pop
jbe
lods
jp
das
sbb
xchg
test
add
fdivs
add
add
imul
fnstsw
mov
push
mov
dec
add
add
fnstcw
pop
leave
ficoms
dec
arpl
jmp
add
add
add
movsl
jnp
jp
sub
ds
scas
jmp
add
add
add
ljmp
add
pop
outsl
leave
pop
or
cmp
add
aas
notb
arpl
add
insl
xchg
jmp
adc
cli
dec
or
adc
out
clc
push
int
inc
pushl
popa
popf
sub
mov
sbb
push
arpl
mov
add
mov
inc
add
add
inc
je
mov
dec
lret
sti
mov
add
add
aad
jb
mov
mov
sub
movsb
mov
add
pop
ret
insl
jnp
mov
mov
in
or
mov
loope
ret
mov
rcl
jns
dec
add
mov
repnz
inc
xor
xchg
cmp
mov
dec
sbb
inc
aaa
xorl
push
aad
outsl
sub
mov
add
sub
sub
push
mov
inc
add
or
add
add
and
add
add
add
fwait
inc
mov
add
or
add
add
mov
scas
cmp
add
rolb
mov
mov
mov
add
add
pop
ror
lods
dec
iret
mov
xor
xchg
mov
sbb
push
arpl
sbb
mov
loopne
pop
xor
pop
aam
sbb
adc
xlat
or
mov
xchg
push
sar
xchg
mov
push
adc
jae
addr16
rcll
sub
add
add
addb
adc
xchg
nop
pusha
add
add
lods
movsb
addr16
cli
push
outsb
xor
inc
pop
insl
mov
in
pop
jl
and
jmp
push
ja
xor
inc
add
add
pop
push
addr16
or
add
add
ficoml
mov
cmpsl
mov
push
xor
and
scas
mov
pop
mov
cmpsl
loopne
adc
pop
fwait
or
mov
sbb
sbb
sub
mov
lret
rorw
pop
mov
xor
add
adc
inc
gs
gs
sub
mov
mov
mov
pop
lret
mov
bound
dec
es
jg
mov
in
rorl
add
out
xchg
push
divl
daa
push
in
inc
add
add
lcall
or
int3
cmpsb
mov
xlat
dec
add
add
jge
sbb
into
stc
or
mov
add
mov
add
in
mov
xor
jp
rcl
adc
aam
pop
sbbl
ljmp
add
adc
jo
add
xor
out
roll
add
cmp
dec
or
outsb
cltd
leave
popa
loop
or
mov
jne
push
xchg
fcmovnbe
mov
hlt
mov
add
mov
loop
add
xor
jnp
mov
pop
ud0
cmp
fcom
cmpsb
adc
js
fwait
or
fwait
dec
add
add
ret
pop
loope
jne
cmpsb
xchg
add
sub
mov
std
xchg
jae
hlt
jmp
scas
je
mov
xchg
shlb
mov
add
xor
xchg
push
ljmp
or
int3
sbb
push
jb
aad
mov
mov
jne
or
add
add
push
xor
mov
pop
mov
punpckhdq
push
inc
xchg
leave
xchg
dec
mov
shl
push
mov
jg
add
mov
fnstenv
add
jnp
push
mov
and
xchg
add
add
and
xor
adc
push
mov
or
negl
das
xor
inc
faddl
addr16
cwtl
and
insb
add
pop
adcl
add
add
gs
out
rorl
je
and
test
mov
scas
dec
aad
mov
imul
clc
mov
lock
repz
sbb
mov
add
shl
xor
jle
shr
and
mov
fistl
out
test
fadd
pusha
add
dec
sbb
loopne
push
sub
add
add
rorb
aaa
sbb
xor
test
or
add
add
add
mov
fsubrs
add
es
push
ficompl
add
or
add
rcr
dec
mov
ds
mov
push
mov
rcl
cmp
orl
jl
shll
sub
add
add
push
push
ret
je
andb
std
cmp
fstps
push
cmp
out
and
jno
lret
insb
add
add
ret
inc
jne
rcr
pop
cmp
roll
jno
out
pop
pop
pop
push
stos
addr16
das
sub
mov
in
sbb
loop
shlb
add
add
call
sbb
add
add
jno
or
add
add
push
xorb
lret
fisubl
mov
pop
insb
add
pop
inc
and
add
aam
movsb
movsl
inc
pop
icebp
sub
icebp
pop
pushf
xchg
subb
cs
dec
xchg
enter
fdivs
ret
mov
jl
cmpsb
clc
test
add
mov
or
cli
or
add
add
es
aam
cmp
add
aas
hlt
jne
call
adc
test
sbb
add
add
add
add
add
mov
xchg
push
andl
mov
shrl
mov
xor
jg
sarb
and
ss
out
push
cmp
add
add
jg
xor
sar
lock
add
xchg
dec
add
add
inc
add
add
scas
jne
jecxz
popa
fsubl
add
aaa
pop
xchg
mov
pop
lret
shl
insl
sub
mov
mov
mov
mov
jbe
ret
cs
xchg
lea
mov
insb
add
mov
add
and
and
cld
stc
jb
in
stos
add
xor
fidivl
lahf
inc
fcoml
mov
jae
fstl
shlb
add
add
sbb
mov
andb
ret
mov
and
in
fstl
sub
mov
add
add
add
xlat
push
subl
add
mov
or
inc
sub
add
add
jmp
lea
add
add
int
and
mov
jb
lock
call
pop
imul
and
pop
dec
sub
mov
adc
movsb
aam
dec
aas
push
or
mov
mov
aam
je
sub
add
add
sbb
and
mov
and
add
dec
out
loopne
add
add
xchg
fsubl
test
inc
xchg
iret
xchg
push
cmc
movsb
rolb
add
mov
add
add
pushf
mov
mov
das
mov
es
fsts
mov
mov
add
outsb
fistl
pop
pop
jae
scas
rorl
sbb
xor
add
add
pop
jp
fcmovne
jns
xor
jl
lret
pop
adc
mov
add
addr16
or
ret
popa
inc
add
ja
icebp
jne
mov
pop
and
stos
dec
add
add
inc
mov
xchg
pop
ss
jp
jle
dec
sub
mov
cwtl
mov
test
add
xor
and
mov
add
test
dec
add
add
or
add
rorb
mov
and
decb
cmc
leave
lret
add
add
loop
jne
xor
ret
sub
push
mov
add
mov
add
add
orl
aam
ret
xor
mov
mulb
pop
and
cmp
inc
into
movl
sarl
mov
jl
add
add
xchg
dec
out
add
add
add
xor
add
cltd
shrb
dec
imul
in
out
pop
cwtl
inc
das
mov
mov
cmpsb
in
in
imulb
rorb
add
pop
in
aad
add
add
mov
rcrl
add
sarl
cld
fwait
das
adc
dec
mov
cltd
shl
inc
add
add
xor
mov
xchg
add
add
inc
add
xlat
dec
cmp
push
mov
add
pop
cmp
adc
mov
add
fimull
mov
add
cli
int
sbb
fld
std
stc
pop
mov
jle
mov
push
in
out
cmpsb
add
cmc
mov
or
mov
mov
cmp
loopne
mov
add
fisubl
pop
popf
clc
cmpl
movsb
fldcw
sub
mov
add
nop
rorb
adcl
pop
jno
mov
mov
lea
mov
sbb
loop
lret
call
sti
push
mov
inc
or
dec
add
jle
mov
jecxz
jge
loopne
mov
mov
add
add
mov
call
inc
pop
xchg
mov
mov
test
jg
cmp
and
cmp
add
jo
jnp
gs
adc
add
add
incb
rcrb
enter
shrl
mov
add
add
imul
aas
cmpsb
cmc
inc
ljmp
jecxz
fidivrl
lahf
sbb
add
add
testb
xchg
out
lock
xorl
push
push
sti
adc
fsubrs
sbb
call
add
bound
and
dec
add
cmp
ljmp
add
xchg
mov
stos
sbbl
dec
lcall
xor
pushf
lods
add
les
daa
inc
inc
decb
inc
mov
mov
loop
mov
mov
mov
rorl
add
add
nop
andl
mov
sarb
outsb
out
mov
cltd
fnstsw
mov
test
sahf
xchg
jp
aam
mov
pop
mov
roll
mov
jp
push
test
add
and
add
add
ret
add
add
add
icebp
leave
rclb
push
add
add
add
dec
add
add
mov
and
add
add
pusha
add
add
lret
pop
stc
and
add
add
imul
add
or
jg
mov
xor
mov
test
add
xchg
mulb
in
cmp
mov
xlat
fsubl
push
cmp
outsl
adc
mov
es
sti
stc
jp
push
test
add
add
sbb
pop
insl
push
popf
pminsw
and
mov
js
mov
in
push
jl
test
jae
sbb
mov
add
sar
fisubrl
jae
cmp
mov
cmpsl
int3
loope
cmp
add
add
insb
add
add
gs
out
rcl
ss
push
xor
mov
clc
outsl
inc
xchg
pop
jp
add
add
outsb
or
repz
push
js,pn
pop
out
and
add
add
jne
inc
insl
int3
xlat
in
loop
dec
inc
xchg
add
add
add
xchg
pop
insb
add
add
fistps
mov
sbb
add
push
pop
add
sbb
aas
sahf
mov
add
rol
pusha
add
add
add
shlb
xlat
fsubl
xor
roll
add
pop
mov
in
mov
ds
sub
mov
add
add
add
xor
xor
fcoms
add
and
add
add
mov
iret
int3
xchg
rolb
sbb
pop
push
jg
mov
outsl
pop
dec
loopne
fdivs
icebp
mov
sub
iret
out
das
cmpsl
jmp
fisubrs
add
add
add
sub
negb
add
add
add
add
mov
in
push
fadd
mov
xchg
addr16
add
add
iret
dec
add
add
fwait
loopne
enter
inc
xchg
and
add
add
push
adc
add
add
cli
add
add
or
push
fldenv
mov
cmc
dec
adc
mov
push
movsl
mov
into
orb
add
add
add
addr16
xchg
jo
add
add
gs
or
lret
sarl
add
int
stc
das
pop
add
fimuls
jge
cmc
test
xor
xor
mov
sbb
mov
add
add
add
add
add
jecxz
adc
stos
outsb
inc
add
mov
pusha
add
mov
mov
mov
dec
andl
add
iret
pop
and
add
add
into
into
stos
jae
movsl
mov
call
jl
or
mov
mov
jae
out
call
pop
test
rcrb
cltd
cmp
cmp
mov
pop
ret
mov
test
add
add
pop
and
add
add
rorl
xor
add
pop
sbb
push
lahf
aas
push
push
mov
jmp
stos
int3
mov
mov
jge
cli
mov
mov
adc
ljmp
jne
jg
mov
in
mov
jne
ss
adc
dec
popf
mov
daa
jmp
fwait
dec
out
mov
mov
lcall
add
add
adc
js
or
add
inc
in
orl
xchg
out
pop
dec
arpl
add
add
loop
fsubr
insb
add
add
rcrl
and
mov
fisttpl
mov
add
add
fcomps
add
add
jnp
pop
mov
push
mul
mov
adc
lods
pmaxsw
arpl
dec
pusha
add
push
mov
sbb
aad
insb
add
lea
in
push
sub
mov
mov
out
jmp
and
add
add
jmp
shll
add
add
mov
decl
add
add
and
fwait
xlat
mulb
mov
sub
add
add
repz
das
test
dec
lds
add
fbld
mov
add
fbld
add
popf
xchg
leave
test
push
mov
hlt
gs
fidivrs
icebp
insl
ja
mov
cmp
jl
pop
pop
adc
fiadds
mov
addr16
fwait
adc
movsl
xor
scas
inc
mov
add
add
mov
imul
insb
add
add
push
push
mov
dec
out
push
pop
aam
test
inc
mov
xchg
cld
mov
dec
dec
add
add
push
pop
mov
xor
adc
mull
cmp
pop
dec
jle
int
fsts
xchg
adc
stos
test
add
and
mov
push
imul
dec
adc
jbe
xchg
jnp
xchg
cwtl
pop
fimuls
xchg
add
add
jbe
shl
movsb
mov
cmp
pushf
out
data16
fisttpl
add
adc
add
aad
cmpb
out
xchg
rorb
icebp
sub
sub
in
fwait
jl
mov
pusha
add
add
mov
fisubl
lds
add
jmp
inc
add
add
scas
inc
int3
mov
fimull
add
leave
add
add
inc
popa
mov
add
daa
mov
les
add
divb
mov
out
or
ljmp
add
add
inc
call
and
and
int3
shrb
arpl
add
or
ljmp
out
add
add
jo
fadd
push
fcomip
xor
push
xor
add
add
push
dec
repz
popf
cmpsl
mov
add
add
loop
or
mov
stc
gs
xor
jae
or
aaa
icebp
push
dec
add
mov
outsl
clc
pop
mov
jg
aad
cld
lods
pop
or
cwtl
mov
data16
inc
inc
cmpsb
lcall
jecxz
xor
jnp
adc
ds
pop
aaa
jno
rcll
test
push
mulb
pop
push
enter
cwtl
mov
lock
ret
negb
dec
add
lods
or
mov
sbb
mov
and
add
add
mov
push
push
hlt
imul
mov
mov
jnp
xor
int
je
clc
mov
outsl
cmpsl
add
add
add
add
add
lea
jl
sub
add
add
add
push
jne
aam
xor
mov
ljmp
adc
add
add
lcall
dec
add
add
loope
and
inc
add
add
or
mov
in
insl
pop
test
cmp
xorb
js
dec
add
mov
lock
loope
in
js
in
orl
movsb
inc
and
add
add
sub
cs
pop
sub
add
add
in
and
push
jnp
xorl
andl
jmp
lcall
mov
ficoml
fildll
and
mov
mov
sbb
add
add
scas
or
add
add
pushf
scas
mov
and
pop
pop
cmp
add
add
dec
xchg
mov
jbe
add
mov
imul
mul
jns
mov
imul
push
xor
pusha
add
add
jbe
push
test
adc
sub
mov
add
add
jo
sub
cmp
push
fcoms
xor
fdivrl
scas
mov
or
pop
xchg
in
lahf
mov
sbb
push
gs
add
cmp
add
lods
mov
scas
fwait
cmc
push
push
stc
jle
inc
or
mov
adc
sti
stc
xor
add
add
addr16
mov
outsl
pop
inc
pusha
add
add
dec
xchg
jge
and
ret
pop
sbb
jno
lods
adc
xchg
add
add
add
push
fwait
mov
jo
ss
test
leave
mov
mov
xchg
push
xchg
rclb
cmpsb
scas
out
pop
mov
add
std
pop
sbb
pop
in
lock
push
sbb
jbe
push
out
ljmp
mov
imull
mov
xchg
mov
add
add
pop
xchg
mov
test
lock
add
add
add
out
test
movsl
adcl
push
adc
push
pop
jae
push
std
jmp
nop
test
andb
out
popf
sbb
add
xchg
sbb
dec
repz
push
fucomip
mov
dec
push
fwait
imul
add
add
mov
jnp
xchg
ss
sub
mov
sbb
sti
shl
out
inc
inc
mov
mov
enter
mov
cmp
lret
dec
pop
dec
adc
sbb
into
scas
aas
inc
add
add
push
out
ffree
push
add
jle
mov
movsb
bound
loop
add
push
and
add
add
flds
add
add
ret
pop
xor
push
dec
cs
gs
jmp
jl
add
cmpsb
enter
pop
repz
loopne
or
push
adc
subb
add
movsb
shrb
mov
mov
pushl
mov
negl
xor
add
lods
push
test
jl
push
pusha
add
xchg
pop
cmc
es
xchg
add
out
mov
xor
popa
adcl
mov
adc
mov
cs
test
daa
movsb
movsl
add
test
shl
mov
add
add
and
mov
les
fucom
scas
xlat
mov
mov
repz
mov
push
sub
add
add
ret
and
fnstsw
add
flds
and
out
out
sub
mov
add
push
and
add
add
lock
add
add
sbb
add
add
leave
out
leave
xchg
mov
add
add
hlt
jnp
jno
sub
mov
pop
xlat
cld
aas
cs
cmc
test
andb
bound
sbb
add
sbb
ja
jae
jle
jecxz
scas
fdiv
push
mov
daa
mov
mov
and
xor
testl
sti
insl
aas
inc
std
loopne
mov
imul
jae
add
std
dec
jle
inc
add
sbb
jmp
lods
shll
lret
adc
xchg
into
xchg
mov
mov
jbe
fwait
jnp
js
adc
jmp
add
jb
pop
outsl
sub
or
mov
xor
call
add
iret
insl
pop
inc
add
add
in
in
pop
xor
add
add
rcrb
add
test
jns
inc
jb
add
call
add
add
add
add
add
add
out
mov
add
add
cmc
adc
mov
aas
popa
int
repnz
xchg
or
sub
add
mov
cmpb
dec
add
add
cld
dec
add
add
push
orl
add
aas
test
inc
loope
shlb
imul
add
add
sbb
cld
push
iret
test
popf
mov
mov
mov
stc
ror
jne
pop
push
cmpsl
fistl
xor
rorl
add
adc
loope
jmp
mov
add
xor
add
fimull
add
add
fsts
mov
cmpsl
xlat
leave
lret
ljmp
imul
repnz
xor
adc
lret
add
scas
cli
xchg
xchg
mov
adc
pop
cld
jmp
aaa
pushf
xchg
out
adc
xchg
and
push
mov
les
aaa
faddl
call
add
enter
shl
adc
add
pop
out
bound
sub
fidivl
iret
data16
add
add
push
adc
add
lret
cmp
pcmpgtw
jnp
aas
xchg
push
ret
pop
cmp
mov
lcall
call
mov
shll
adc
out
mul
sbb
pop
cmp
push
stos
mov
and
cmpsb
mov
loop
add
mov
mov
pop
loope
pop
mov
mov
add
test
xor
sub
add
add
add
outsb
add
xchg
out
in
daa
or
mov
imul
add
jae
ss
mov
xor
add
add
popf
jl
cmp
lods
pop
sti
sub
js
sbbl
add
add
jl
jo
std
jbe
inc
pop
jno
add
mov
bswap
push
nop
loopne
in
add
mov
popf
xor
sbb
inc
test
adc
je
stos
or
mov
mov
and
and
imul
add
add
inc
xchg
ficoml
aad
add
sbb
lahf
adc
fisubs
mov
add
add
add
add
cmp
jmp
xchg
lea
inc
mov
leave
das
lcall
test
sbb
xor
add
add
dec
ror
pop
cmc
xor
push
mov
xchg
aaa
pop
daa
outsl
cmpsl
jg
popf
repnz
es
xchg
pop
hlt
mov
mov
pusha
add
add
pop
xor
fwait
aad
add
mov
cmc
sbb
cmp
pop
loopne
or
addr16
cwtl
sub
push
pop
aas
lea
dec
add
xchg
and
js
pop
cmp
add
sub
mov
movsb
jl
bswap
aas
sbb
xor
lcallw
add
js
pushf
or
jb
add
pop
mov
add
enter
xchg
or
bound
add
add
xor
sti
aad
loope
jp
add
shrb
mov
hlt
inc
jb
xchg
popa
xchg
jae
add
add
cmpsb
int3
dec
fsubrl
push
lcall
fstpt
mov
mov
sbb
mov
mov
add
sahf
repnz
add
mov
xchg
push
cmp
xchg
popa
mov
pop
ret
add
xor
mov
hlt
and
mov
mov
mov
cmp
mov
jo
rcll
mov
xchg
inc
add
mov
mov
add
push
cli
lret
mov
lea
loopne
cltd
fldl
xchg
push
push
ja
add
add
add
add
fwait
gs
and
mov
sbb
hlt
movsb
imulb
add
repnz
add
loopne
int3
cmp
sbb
add
push
jno
add
inc
xchg
and
mov
pop
inc
nop
sbb
fbld
aaa
jmp
cmc
jle
out
or
mov
leave
xchg
inc
add
add
ss
clc
out
adc
out
ret
ljmp
into
das
pop
repz
mov
scas
mov
aaa
jb
dec
add
add
dec
add
dec
add
add
sub
and
mov
cmp
pmaddwd
mov
jmp
xor
inc
add
or
mov
add
add
add
add
xchg
out
add
add
add
out
push
lahf
repnz
lcall
mov
add
add
xor
out
into
mov
clc
mov
push
fbld
mov
lock
test
popa
or
repz
arpl
xchg
or
mov
add
add
add
mov
je
dec
mov
jl
adc
add
add
popa
stc
sti
call
xlat
ret
mov
push
fwait
pushf
stos
and
mov
addb
idivl
ljmp
imul
or
fiadds
loop
mov
dec
push
rcrb
jb
jno
mov
and
add
add
outsb
icebp
pusha
add
add
outsl
jmp
add
loope
movsb
div
repnz
lret
ljmp
fwait
mov
mov
pop
imul
repnz
xchg
inc
imul
push
lret
and
mov
xor
sub
mov
sbb
or
ss
cmp
pop
fmuls
insl
lds
add
mov
sub
sahf
jnp
and
roll
mov
rclb
into
or
add
add
add
mov
pop
pop
aam
aas
fwait
add
add
ja
fcomp
test
push
jo
add
add
add
daa
or
push
xor
xchg
pop
jo
jnp
jp
lods
mov
inc
add
add
pop
movl
add
cmp
push
adc
call
ss
jg
pushf
sbb
aaa
mov
nop
and
adc
les
add
add
test
jo
into
add
clc
adc
add
mov
xchg
fldcw
mov
mov
hlt
mov
enter
in
xchg
jp
mov
lods
sarb
mov
add
pop
cmp
sub
push
dec
int
dec
add
add
out
int3
mov
push
pop
ret
add
stc
add
nop
mov
mov
bound
push
mov
mov
daa
cmc
inc
cltd
adc
mov
pop
sti
mov
pop
mov
add
add
js
rcl
mov
jb
jl
push
xchg
ds
lods
pop
fldenv
add
add
inc
insl
jecxz
add
add
add
lods
and
mov
pop
les
lods
or
add
add
adc
add
cmp
push
daa
or
mov
adc
adc
aad
add
add
ja
or
mov
mov
add
loope
fimuls
add
mov
add
loop
cmp
jno
push
mov
mov
mov
push
mov
mov
ja
popf
dec
outsb
loop
inc
add
jne
fcoml
daa
aas
mov
adc
dec
aad
pop
mov
aaa
pop
xlat
addr16
and
shlb
add
sub
mov
inc
add
add
stos
adc
inc
inc
add
xchg
jmp
cmp
cmc
ret
pop
xchg
inc
fsts
aad
xchg
jge
add
add
add
inc
jns
dec
inc
adc
sub
xor
aaa
mov
arpl
cmp
dec
loope
add
cmpsb
loop
neg
call
cmc
mov
sub
add
cmp
hlt
xor
pop
cmpsl
das
push
pop
pop
ljmp
cltd
fwait
add
xchg
in
jl
and
imul
add
data16
sbb
cmp
leave
and
dec
mov
rcll
ljmp
arpl
add
je
mov
push
sbb
and
and
ret
and
jae
sub
mov
mov
out
and
popf
scas
mov
sbb
and
xor
dec
sbb
shll
dec
add
add
inc
cmpsb
cmp
xor
andb
shlb
icebp
xchg
icebp
mov
mov
inc
shll
dec
add
add
or
add
add
in
scas
xor
mov
cmc
xchg
xchg
or
pop
test
cmpxchg
add
lret
xchg
xchg
and
popf
test
leave
jmp
add
ljmp
and
movsb
add
repnz
add
adc
push
repnz
push
push
sbb
add
popa
cld
repnz
inc
push
ljmp
dec
loope
xor
andl
add
pop
shlb
es
bound
aad
mov
aas
into
sahf
mov
push
cmpsb
pop
cli
jl
adc
es
push
stos
cmp
dec
add
add
add
inc
call
insl
pop
mov
cli
mov
loop
rdpmc
push
std
lods
loopne
inc
add
rcl
lds
push
adc
dec
cli
das
jae
fsubrl
add
add
add
add
stc
bound
push
fistl
or
add
add
stos
hlt
push
call
and
fwait
adc
iret
test
lock
cmp
aaa
cli
adc
add
sahf
mov
je
xchg
repnz
cmp
xchg
mov
loop
lods
xchg
outsl
insb
add
add
dec
add
jge
or
add
add
mov
mov
rorl
sarb
pop
sbb
cmp
or
sbb
hlt
or
push
cmpb
mov
pop
pop
mov
lahf
xchg
adc
add
ss
xor
add
sub
xchg
call
dec
ds
adc
add
add
add
cmp
inc
fldenv
add
add
daa
mov
inc
lea
inc
xchg
ds
dec
cli
cmpsb
outsb
aas
xchg
aam
pop
dec
add
add
nop
into
insl
sbb
mov
pop
xor
insb
add
xchg
stos
push
mov
add
add
pusha
add
in
sbb
les
jne
and
int
ljmp
add
mov
clc
adc
inc
insl
adc
inc
inc
in
notl
insb
add
dec
data16
xorb
jae
cltd
out
fmull
push
jo
jbe
fdivp
inc
add
jb
mov
loop
loope
out
and
mov
mov
sbb
and
cmp
mov
add
popf
call
cld
pop
or
add
add
fsubs
add
add
or
cmp
rorb
add
sbb
movsb
sahf
pop
je
les
js
lret
push
mov
or
mov
outsl
rcl
xchg
out
xor
add
sahf
bswap
insb
add
add
cmp
popf
pusha
add
add
mov
xchg
mov
imul
cmpl
and
cmp
add
add
push
lds
and
jnp
iret
repz
add
add
push
xor
dec
adc
or
pop
leave
mov
hlt
push
push
mov
je
fsubl
xor
dec
call
xchg
and
mov
mov
fsubrl
out
iret
jge
insb
add
add
test
pusha
add
add
ficomps
shr
mov
add
add
ror
sbb
add
add
fcoms
push
push
shll
add
add
add
lret
iret
shlb
adc
inc
out
adc
mov
rcrb
outsb
aaa
xchg
xchg
add
notl
jne
sub
add
add
jg
lcall
sub
add
add
add
mov
mov
imul
push
sub
cmpsb
mov
add
add
add
add
add
add
push
test
mov
mov
push
stos
iret
rclb
int3
mov
add
movb
add
add
inc
xchg
xor
add
and
scas
lret
lock
pop
pusha
add
fistpl
pop
xchg
add
cwtl
xor
jmp
inc
add
mov
jno
pushf
jmp
add
inc
xchg
sbb
mov
out
or
arpl
div
adc
add
pminsw
clc
mov
shrb
add
add
lret
sub
mov
xor
movsl
push
nop
lea
pop
aad
repnz
pop
mov
jmp
test
pusha
add
add
mov
dec
fwait
add
movsb
rcl
push
cmpsb
add
mov
push
stos
into
adc
push
stos
xchg
arpl
jge
jbe
inc
add
sub
add
add
mov
jg
adc
test
es
add
pop
in
int3
mov
pop
popa
clc
jne
popa
lcall
xchg
scas
pop
jecxz
loopne
out
mov
add
bswap
mov
fisubl
add
add
xchg
xchg
adc
ret
sub
out
push
fbstp
xor
cli
jmp
mov
les
into
dec
sub
add
mov
add
adc
test
cltd
jle
xchg
ljmp
inc
mov
arpl
xlat
popa
aam
std
sub
into
jns
aas
lret
cltd
ljmp
pop
jle
ljmp
sub
add
add
or
add
add
add
push
faddp
push
icebp
int3
popa
mov
ret
mov
add
repz
push
arpl
dec
pop
leave
dec
sarb
xchg
add
out
mov
pop
stc
pop
adc
dec
add
add
add
pop
inc
inc
add
add
jmp
filds
dec
xor
mov
bound
das
push
push
push
adc
push
cmp
mov
push
imul
xchg
roll
add
and
dec
add
add
jmp
enter
add
add
std
data16
jecxz
pop
cwtl
xor
imull
xchg
test
fnstcw
sub
lods
scas
mov
add
jp
push
mov
lret
add
add
add
add
add
decb
pop
cmpsl
push
enter
add
add
add
mov
xchg
jmp
jle
in
mov
adc
push
movsb
iret
dec
add
xchg
xchg
dec
dec
and
mov
lods
mov
stos
mov
loopne
imul
mov
add
sbb
fwait
les
loopne
mov
fldl
add
pop
loopne
inc
or
mov
add
gs
jb
je
pop
enter
add
mov
inc
pop
leave
jbe
sub
outsb
or
push
mov
add
pusha
add
add
xor
mov
sbb
add
dec
inc
add
adc
clc
jg
add
nop
mov
cmp
out
xchg
cs
add
add
testl
xor
mov
int
xor
add
shl
sbb
notb
rcll
hlt
jmp
add
add
sbb
add
xchg
jb
movsb
imul
cs
stc
in
outsb
push
aam
popa
cmc
cwtl
add
add
add
inc
addb
mov
add
sahf
leave
sarl
and
add
add
out
add
add
add
arpl
mov
shll
add
add
enter
xor
push
sbb
add
add
add
out
test
add
das
mov
fisubrs
xor
aaa
jb
pop
outsl
cmpsl
jne
push
fimuls
hlt
insb
add
add
mov
add
add
mov
add
outsl
mov
jmp
push
popa
xchg
inc
jp
lret
orl
add
add
pop
or
add
add
adc
add
add
adc
jns
ss
aad
adc
push
in
fnstcw
xor
pop
dec
loop
push
add
jle
mov
rorb
lret
sbb
lcall
movsl
mov
jae
pop
out
sarb
sbbl
add
mov
jg
add
sub
inc
mov
jmp
xchg
call
into
mov
call
sub
add
add
adc
btsl
inc
int
sbb
sbbb
pop
sub
add
outsb
into
jge
iret
ret
add
adc
aam
cmp
ror
aaa
mov
mov
cmp
push
push
jl
xor
pop
add
and
mov
leave
aad
jg
fsubr
or
add
and
inc
jmp
ljmp
jno
repz
xor
add
xchg
and
mov
ss
mov
shlb
testb
mov
cmp
cs
in
add
xchg
mov
icebp
jnp
xchg
mov
fadd
or
add
add
jne
cmc
bound
cld
dec
add
xor
add
clc
enter
sub
cld
lret
ds
sti
mov
add
add
pop
js
mov
loop
js
jmp
repz
jl
shll
or
mov
ss
scas
popa
push
pusha
add
xchg
ja
add
add
xor
push
ja
mov
add
cmp
pop
push
rorl
add
jmp
add
add
jno
add
add
fadds
add
add
roll
aaa
out
and
mov
xchg
insl
lea
sbb
cmp
shrb
add
movsb
ss
sub
add
add
adc
lcall
add
shrl
cld
daa
inc
xchg
jno
inc
into
mov
jp
mov
lcall
imul
xor
stos
mov
or
add
add
sti
adc
cmp
ret
xor
aam
leave
punpcklbw
add
add
push
or
mov
add
add
cmp
or
popa
pop
sub
xor
enter
cs
jp
xor
insl
jno
cli
loop
mov
add
cmpsl
int3
ja
mov
add
xchg
cmp
xor
xchg
popf
lea
lock
daa
push
sub
je
adc
or
mov
add
add
pop
xor
test
nop
mov
pop
addr16
lds
adc
add
sbb
aad
push
mov
add
add
cmc
adc
add
mov
mov
outsb
arpl
mov
pop
mov
outsb
fldenv
jmp
cli
cmc
in
dec
mov
leave
sbb
je
mov
add
adc
in
and
add
add
outsl
inc
sbb
add
fldl
add
add
inc
test
js
add
xor
mov
push
push
add
add
add
mov
jne
lods
nop
sub
push
outsl
mov
and
stos
into
xlat
jmp
dec
outsl
jge
push
popf
lods
test
cwtl
sbb
xor
and
sbbb
sub
add
movsl
xor
mov
jecxz
jb
mov
fwait
mov
add
jb
pop
bound
dec
adc
inc
jb
inc
pop
push
sbb
psubsb
push
sbb
jns
sbb
add
add
and
bound
jle
gs
mov
mov
inc
mov
cli
aas
sub
adc
leave
mov
loope
mov
cmp
add
add
arpl
inc
inc
pop
std
lahf
dec
sbb
cmp
mov
fistps
repz
add
nop
dec
add
add
popl
add
in
xchg
xor
fwait
dec
cli
mov
jnp
mov
add
cmp
dec
lcall
sarb
dec
hlt
xor
add
add
inc
add
add
xchg
stc
pushf
andl
push
rclb
xlat
pop
mov
add
add
add
mov
inc
ds
imul
movsl
pop
fmul
mov
add
add
cmpb
vpshuflw
adc
dec
xchg
xorb
mov
or
mov
xchg
in
or
mov
aas
sbb
mov
enter
add
add
add
push
push
in
jne
add
add
add
sbb
movsb
outsl
lods
push
into
pop
and
loope
jecxz
out
js
int3
lret
sbb
mov
add
jbe,pt
out
jo
outsb
mov
add
inc
or
arpl
xchg
sbb
add
icebp
xor
mov
xchg
dec
and
mov
call
andl
bound
push
push
mov
ja
mov
push
dec
adc
imul
lods
push
mov
push
xchg
inc
push
push
test
pop
pop
test
xchg
imul
ret
aaa
lods
xor
pop
mov
sbb
sahf
outsb
lods
arpl
add
scas
pop
enter
add
je
addr16
add
add
add
add
mov
movsl
out
xor
aas
mov
lcall
add
cmp
mov
add
hlt
jo
sbb
pop
jno
mov
cmp
and
ss
add
stos
xlat
movsb
aad
add
add
add
pop
lods
dec
sbb
jo
dec
out
and
mov
push
daa
nop
in
inc
ljmp
push
popf
sub
ret
jae
push
xor
jnp
cltd
movsb
mov
xor
andb
inc
sbb
cmpl
add
add
add
es
adc
xchg
sbb
rol
stos
mov
jge
push
dec
and
test
mov
add
add
xor
pushf
scas
xchg
pop
lahf
std
popa
jo
cmp
push
sub
sbbl
and
add
add
pop
in
or
mov
lret
fcmove
lock
lahf
mov
add
or
cmp
js
mov
xor
lods
push
jnp
jl
mov
cmp
add
add
adc
data16
mov
push
push
jnp
test
divb
dec
or
jb
sahf
shrb
add
add
add
add
mov
aad
outsb
mov
mov
push
and
add
add
mov
idivl
aam
xchg
sub
mov
pop
xchg
mov
mov
scas
out
sub
pop
lahf
add
add
add
add
add
mov
dec
enter
pop
xor
mov
into
pop
ds
pop
mov
or
lret
pushaw
add
add
inc
xor
mov
mov
inc
decl
shrl
jge
push
adc
addl
add
dec
int
es
jbe
ja
fimull
and
mov
adc
aas
lret
mov
pop
fucomp
data16
cwtl
ljmp
incb
sbb
xchg
adc
push
cmp
xchg
das
mov
mov
test
add
add
mov
pushf
into
outsb
push
stos
inc
clc
jno
mov
aas
bound
push
movl
sub
mov
sti
sub
add
rclb
in
push
cmp
jno
les
es
xchg
jbe
pop
into
mov
add
in
out
cmp
sub
mov
lods
out
imul
lahf
and
mov
in
cmp
add
push
imul
cli
int
out
inc
in
jmp
add
add
lds
xor
add
add
fistl
mov
jmp
push
jecxz
jns
cmpsb
pop
adc
xor
add
add
pop
mov
cli
push
stos
out
sbb
sbb
add
add
in
ffreep
push
inc
mov
inc
out
aas
adc
scas
loope
or
add
add
pop
add
xchg
std
aad
and
pop
jno
outsb
cmp
and
add
add
sub
mov
add
add
cmp
fwait
in
pop
push
xor
sub
fisttps
je
add
pop
loop
out
mov
stos
mov
push
clc
cld
xchg
xor
imul
inc
and
mov
adc
jno,pn
inc
adc
call
dec
push
ret
jb
add
movsl
pop
hlt
xor
fidivrl
popf
xor
add
std
xor
mov
rorb
add
add
dec
lret
sti
mov
imul
mov
add
add
aam
add
inc
ret
aaa
sub
jnp
divb
sahf
xchg
pushf
jle
push
pop
inc
or
test
adc
dec
add
push
cmp
call
mov
sahf
add
arpl
aad
jnp
jp
jmp
xorl
lcall
mov
add
add
lcall
add
add
lret
jns
test
push
iret
cwtl
xor
cmpsb
test
push
pop
sarl
add
lahf
lea
xor
add
rorb
aas
mov
add
mov
lret
dec
arpl
jno
clc
rcrl
xchg
cmp
mov
xchg
add
add
add
sbb
mov
loop
xor
add
or
mov
adc
into
push
loopne
gs
add
add
pop
js
xor
add
add
jbe
add
add
rorb
add
imul
mov
jge
dec
add
add
mov
dec
adc
repz
hlt
inc
pop
inc
test
mov
dec
add
or
and
mov
addr16
add
repnz
xor
add
add
cmp
sahf
je
mov
mov
jmp
in
and
jle
xor
sub
add
add
lea
stos
jmp
add
add
pop
in
lcall
xor
sub
push
in
shll
iret
sub
add
add
xchg
inc
add
add
add
add
mov
insb
add
xlat
add
mov
jle
xchg
mov
std
add
stos
test
pop
ret
mov
out
repnz
loope
scas
into
sbbb
pop
xor
popa
out
insb
add
bound
sbb
stos
adc
cwtl
sahf
push
unpcklps
pop
push
lods
test
jnp
ret
inc
add
add
adc
pusha
add
fstps
out
shrl
inc
sarb
add
add
test
pop
cmp
add
ljmp
cmc
inc
mov
add
scas
add
push
cmc
imul
xor
lds
or
cmp
pop
cmpsb
sahf
insb
add
add
add
dec
add
push
xor
mov
movsb
icebp
lock
xor
lock
adc
adc
test
mov
and
add
mov
xor
lds
outsl
and
mov
test
test
mov
repnz
mov
inc
int
insb
add
mov
lahf
cmp
leave
or
add
add
dec
lds
shlb
adc
shrb
add
add
loope
sbb
mov
adc
add
sub
add
cld
mov
imul
or
mov
pop
popa
push
popf
pusha
add
add
or
in
add
add
add
sub
cmpsb
adc
outsl
mov
push
lcall
sbb
add
enter
and
mov
popf
push
xor
add
add
add
adc
and
add
xor
mov
and
add
add
pop
xchg
mov
sbb
aas
push
pushf
bound
cmp
jae
mov
xor
mov
outsb
lahf
data16
add
add
mov
ds
fsubs
jmp
fwait
push
xchg
loop
enter
sub
mov
fimuls
add
jbe
mov
out
push
test
add
mov
or
add
add
into
lea
mov
mov
mov
scas
rcr
jno
and
out
and
mov
adc
inc
cmp
enter
cmc
mov
add
mov
call
inc
jbe
push
pop
addr16
in
rcrl
add
test
sub
mov
fdivrl
push
lret
xchg
inc
add
add
and
mov
test
enter
jmp
pop
mov
add
nop
inc
jl
sbb
jns
add
add
pop
cmp
cmp
dec
cwtl
push
test
scas
insb
add
add
jne
dec
out
pop
cmp
mov
push
fdivrs
mov
hlt
std
js
push
or
xor
shrb
fnstcw
bound
add
xor
push
mov
mov
sub
mov
add
push
fistpll
loope
sbb
push
test
dec
xchg
jno
rorl
or
mov
lods
or
add
add
imul
lock
mov
les
adc
and
xor
out
jns
add
mov
pushf
push
mov
imul
dec
inc
add
lds
jnp
gs
fsub
mov
shll
dec
add
dec
ds
push
mov
in
push
jno
pusha
add
das
and
add
add
push
inc
add
mov
insl
cmpsl
cmp
add
jmp
adc
clc
mov
add
add
and
mov
int3
rorl
mov
adc
or
popf
ret
mov
cli
mov
or
mov
add
xchg
inc
mov
add
shrl
xchg
pop
insl
push
dec
add
add
fidivs
jb
bound
sbb
popa
jno
sub
add
add
or
mov
pop
push
fiaddl
mov
or
fldenv
jo
call
mov
hlt
sub
inc
or
dec
dec
jp
adc
mov
outsb
in
hlt
bound
add
in
push
push
fcomps
push
mov
cmp
cmp
scas
cmp
push
push
xchg
jmp
cwtl
push
cld
or
add
add
das
in
repz
aaa
shrb
add
and
bound
inc
lock
out
ljmp
test
es
mov
mov
leave
cld
std
shrl
pavgb
aad
jb,pn
mov
mov
and
add
add
cmp
repz
hlt
ds
shll
in
ficomps
jbe
jle
in
and
mov
aam
push
dec
cmp
add
mov
fwait
xor
mov
icebp
adc
add
in
cwtl
in
ds
add
add
je
cmpsl
push
jg
and
mov
dec
insl
nop
popa
mov
aaa
cs
iret
out
push
jae
dec
add
add
mov
stos
cmp
dec
add
add
or
or
add
jb
rcrl
enter
imul
aas
jns
or
test
dec
xor
aad
in
addr16
jg
fdivrl
add
add
jne
sbb
les
testl
inc
inc
push
or
mov
ret
or
mov
cmp
add
sub
xchg
fdivs
lahf
dec
jns
or
mov
sbb
fists
add
popa
cmp
es
lock
sub
mov
adcl
loope
adc
inc
dec
rolb
add
cwtl
jae
cs
ljmp
ret
sbb
cmp
shlb
inc
jbe
inc
jae
cmp
xor
shl
into
or
cmp
aad
loopne
cmp
mov
xor
mov
mov
mull
pop
sbb
and
mov
add
add
loopne
sub
sbb
stc
mov
fistpll
add
stos
scas
sub
add
add
jecxz
sbb
push
sbb
ds
lret
cmp
insb
add
aad
adc
out
dec
mov
add
negl
jbe
xchg
nop
sub
push
adc
adc
shl
lcall
push
iret
dec
ret
mov
add
stos
push
jp
mov
add
add
in
jge
out
lahf
cmp
arpl
sub
add
add
or
jle
out
jl
test
xchg
fadds
add
mov
push
xor
les
mov
test
mov
push
add
and
mov
sub
jle
xchg
ret
imul
lcall
loopne
notb
shll
and
jae
dec
mov
icebp
sbb
mov
add
add
insb
add
jg
pushf
enter
aaa
sub
add
add
and
and
mov
or
add
add
scas
cmpsl
rcrl
js
add
cmp
and
insb
add
add
cmp
mov
push
push
jnp
cltd
dec
sbb
cli
ficomps
mov
push
jnp
stos
shlb
adc
cmp
mov
into
mov
push
mov
jp
cmp
lret
int3
sbb
nop
int3
pop
imul
inc
add
add
xchg
pop
pusha
add
add
lret
enter
dec
sahf
xor
xchg
add
push
jg
push
and
lret
cli
add
les
dec
cmp
mov
cmp
push
adc
push
cwtl
mov
add
add
add
cld
mov
adc
jno
push
mov
push
mov
rcrl
mov
dec
add
add
push
aam
pop
out
mov
imul
xlat
xlat
iret
lret
pop
jno
inc
add
add
adc
fcomip
xchg
xchg
mov
sub
add
add
add
add
insb
add
add
shll
scas
jbe
ja
sbb
dec
or
add
add
push
xor
ret
xchg
imulb
add
hlt
cwtl
add
shrl
fcoml
push
icebp
or
lea
inc
rorl
pop
idivb
fmull
dec
jp
pushf
mov
sub
push
rol
inc
add
add
outsl
fisubs
jg
lret
mov
nop
jl
xchg
ja
clc
int3
and
mov
ret
rcr
pop
test
fisttps
adc
add
add
push
xchg
push
add
mov
movsl
cmp
add
jp
jno
cmp
cli
sti
dec
fcoml
sub
add
out
xor
sahf
sub
imulb
mov
add
imul
pop
cmp
cs
loope
sub
in
popa
vpacksswb
mov
pop
shlb
cmp
jecxz
popf
aas
repz
test
mov
add
add
add
repz
add
add
push
imulb
mov
add
cld
orb
xchg
insl
inc
add
xchg
jae
leave
xchg
dec
in
idivb
in
sub
add
fnsave
sti
or
loopne
mov
and
rcrl
pop
out
popa
aad
stc
test
adc
shrl
cmp
jecxz
mov
leave
sub
mov
mov
ja
mov
mov
add
sbb
test
leave
cmp
mov
fisttpll
pop
mov
add
sub
add
add
icebp
fmull
dec
push
push
loopne
inc
add
add
jnp
sbb
add
cmp
add
add
xlat
data16
adc
add
add
cmp
pop
xor
add
add
adc
ret
cmp
add
fcoml
inc
mov
add
sub
pop
push
sbb
push
mov
xchg
xchg
add
adc
push
mov
bound
xchg
das
adc
pop
sub
mov
push
jg
enter
dec
dec
pushf
nop
sahf
je
jge
dec
arpl
rol
adc
shrb
add
loopne
add
popa
or
add
add
icebp
add
sarb
cltd
popf
cs
adc
xchg
xchg
les
mov
bound
imul
add
imul
popf
popa
jecxz
lcall
or
add
add
cmp
cwtl
inc
adc
insl
inc
test
jle
or
add
add
cmp
jmp
push
es
or
mov
push
mov
inc
add
add
and
mov
lahf
outsb
ljmp
xchg
inc
in
bound
pop
push
add
add
add
mov
ja
xchg
add
add
and
inc
ret
mov
add
fistpl
push
outsl
push
ret
sub
jbe
add
add
add
xchg
inc
add
add
sub
add
add
mov
movsl
out
dec
into
adc
test
push
xchg
xchg
lea
add
add
jb
cli
fsubrl
mov
es
leave
out
cmp
sbb
add
add
sbb
ds
xchg
and
mov
push
repz
inc
js
add
add
je
rclb
aad
add
add
dec
add
cmp
pop
xchg
push
mov
jb
xor
cs
std
sub
add
add
add
add
add
mov
fldt
mov
and
fwait
jne
cs
xorl
pop
xchg
dec
out
fnop
dec
iret
cmpsb
push
adc
fwait
stos
and
xlat
mov
and
jl
pop
jne
add
lahf
in
sub
add
add
add
add
gs
into
mov
push
lahf
roll
mov
sbb
add
test
inc
pop
mov
rcll
cmpsb
add
mov
add
add
cmp
add
mov
add
xchg
xchg
add
add
out
push
int
jae
or
add
add
add
lods
aam
or
add
add
inc
daa
sub
xor
ja
cmp
cli
mov
or
mov
cmp
add
jae
add
jp
mov
loopne
xchg
cmc
mov
mov
mov
mov
cmp
sub
rep
jp
stos
push
ret
mov
outsl
and
fists
inc
in
adc
jnp
loop
popa
mov
add
ss
add
addr16
test
ret
add
add
leave
push
pop
inc
add
add
pop
add
mov
jl
inc
dec
mov
mov
loope
or
addb
jns
mov
xor
add
cmpsl
sub
push
insb
add
xchg
test
xchg
bound
push
lcall
fnstcw
xor
pop
daa
outsl
movsb
iret
subl
fmuls
stos
clc
cld
cmp
add
js
jl
jns
scas
dec
xchg
lock
pop
test
add
pop
push
xorb
mov
leave
pop
mov
push
xchg
aaa
lcall
adc
in
adc
xchg
cld
mov
add
add
xlat
adcb
mov
adc
gs
lods
fdivl
xlat
out
push
in
das
add
sbb
cmpsl
decb
add
add
les
pop
or
mov
sub
add
add
cmp
lahf
mov
add
pusha
add
add
mov
add
scas
and
mov
xor
and
add
add
sub
xchg
int
ret
mov
or
add
add
pop
aam
and
push
jae
sbb
add
fwait
mov
jb
fistl
lcall
loope
sahf
and
mov
pop
punpckhwd
imul
ja
xor
lock
adc
jae
push
imul
add
in
xchg
mov
jne
rcrb
pop
scas
dec
cmp
mov
mov
mov
out
ss
or
mov
repz
stc
sar
sbbb
nop
loopne
add
inc
mov
or
mov
ljmp
dec
fistl
xor
xchg
les
rcll
negl
xor
and
add
add
incb
add
add
mov
mov
cmc
jmp
in
push
adc
out
shll
jg
cli
ds
add
add
lahf
in
and
mov
mov
aaa
jg
test
add
push
lahf
test
aad
and
add
add
jb
jp
rorl
lahf
pop
push
xor
adc
mov
add
dec
dec
add
add
test
xchg
bound
jnp
inc
add
imul
shr
add
scas
popf
stos
push
test
mulb
mov
inc
mov
movsl
mov
sbb
add
rcrl
ds
mov
push
pop
nop
dec
nop
and
adc
loop
inc
pop
mov
mov
xchg
fwait
lahf
jbe
dec
add
add
jmp
testl
es
mov
mov
shl
xchg
aam
add
add
ret
test
outsl
push
rorl
adc
jbe
jae
cld
and
mov
adc
push
dec
sbb
movsl
cmp
sub
je
rolb
pop
int3
int
cmp
push
das
pop
xchg
stc
adc
add
add
ds
push
xor
add
inc
xor
add
lea
aam
dec
outsl
pop
jae
in
fimuls
cmp
dec
add
add
add
cmp
cld
repnz
sarb
add
add
inc
add
add
popa
pop
mov
leave
scas
pop
shll
sub
scas
ret
lcall
pusha
add
jg
int3
xchg
jae
mov
mull
pop
adc
enter
out
testl
cwtl
bound
pop
inc
dec
add
inc
add
sti
test
add
mov
add
and
add
add
inc
xchg
sbb
out
lcall
data16
test
or
xor
add
add
mov
mov
add
mov
jmp
subl
add
mov
shrb
pop
js
mov
add
sahf
add
xor
xlat
lds
mov
test
lahf
lret
push
sbb
add
add
add
mov
arpl
mov
iret
pop
push
xchg
mov
and
out
test
inc
add
aas
mov
add
pop
push
data16
popf
and
add
add
sbb
dec
sub
mov
xor
add
bound
mov
fdivs
adc
xor
add
and
mov
sub
or
mov
mov
stc
stos
enter
mov
mov
nop
mov
pop
sbb
sbb
push
pop
jb
add
add
push
jnp
xlat
ljmp
pop
and
add
add
shll
rcl
mov
inc
xor
out
jnp
in
pop
jl
jge
xchg
jnp
popa
sbb
aaa
inc
cmp
jne
or
add
add
dec
cmp
mov
mov
or
add
add
inc
dec
mov
stc
lret
aam
je
xchg
dec
add
jae
popa
or
lock
mov
add
add
sahf
sti
push
xor
sub
outsl
push
loop
mov
add
add
cmc
fbld
or
fst
sub
xorl
xor
bswap
fcompl
aam
je
mov
jne
and
add
xor
into
or
add
add
xor
add
xchg
int
mov
testb
ficomps
adc
mov
xchg
int
jle
je
add
add
into
dec
add
add
loop
aam
xor
add
out
sahf
imul
mov
pop
in
mov
roll
add
cmpsb
mov
add
add
dec
add
jns
cmp
push
mov
loop
fisubrs
shl
stc
mov
stc
push
add
add
add
inc
pop
sbb
add
inc
pushf
lea
push
int3
push
sbb
add
add
jbe
punpckhwd
hlt
cmpsl
call
int
cmpsl
jmp
and
mov
ss
pop
loopne
mov
rcrb
jns
sub
add
add
and
add
add
fnstsw
sahf
sbb
cmpsl
cmpsb
test
aas
shlb
inc
add
mov
cmp
insl
fsts
sbb
add
add
les
mov
shrl
leave
sub
xchg
pop
in
mov
dec
sbb
stos
cmp
add
in
data16
mov
sbb
and
jno
shlb
loopne
es
lods
sahf
push
cmp
add
push
cld
movsb
inc
pop
cmp
push
sbbb
dec
fdivl
fistpl
push
inc
add
add
data16
adc
jmp
loopne
addb
add
add
push
jb
add
mov
push
lret
dec
add
push
je
popa
icebp
int
push
sub
in
adc
add
xchg
insb
add
fisttps
pop
lcall
outsb
ja
xor
lea
mov
xchg
popa
inc
insl
negb
rcll
test
pop
mov
sub
arpl
jp
adc
lcall
add
add
xorl
add
add
jo
dec
jns
aad
das
loop
out
call
test
mov
xchg
cmc
iret
outsb
or
cmp
push
inc
mov
enter
jl
xlat
push
cmp
or
xor
add
add
pop
inc
push
and
mov
ret
test
lods
mull
add
and
mov
testl
pop
lock
dec
or
xchg
pop
movsl
outsl
push
enter
adc
push
andb
leave
and
push
data16
dec
fcomp
cmp
push
fidivl
mov
add
push
xlat
jo
lds
mov
cmp
aaa
mov
cmp
in
pop
xor
add
mov
sub
mov
and
dec
add
add
enter
dec
cwtl
test
push
and
adc
mov
in
in
pushf
mov
in
stos
jp
and
popf
jns
jne
dec
stos
jnp
or
ljmp
adc
les
add
jae
scas
or
add
add
mov
add
sahf
cmc
aad
daa
adc
test
add
lock
add
mov
scas
xchg
hlt
cmp
sub
pop
sub
mov
loope
shrb
sbb
jg
add
add
ja
scas
mov
push
lods
mov
add
add
loop
aas
pop
enter
ljmp
or
mov
arpl
cmp
aaa
add
add
add
sbb
add
ret
push
xchg
shl
jnp
cmp
mov
or
repz
jb
add
mov
pop
jge
and
dec
mov
les
out
jb
add
sbb
xorb
mov
pop
jecxz
sub
add
scas
pop
inc
fisubl
insl
test
push
test
test
fcomps
sbb
das
popf
or
jae
stc
push
or
dec
push
sbb
xor
divb
add
rorl
repz
repz
fcomi
cmpsl
jge
mov
xlat
sbb
mov
and
push
and
add
add
lods
jbe
in
adc
std
out
nop
mov
cmp
mov
les
mov
lcall
iret
dec
add
add
push
push
dec
stos
out
or
mov
cmc
and
add
add
inc
mov
push
adc
add
ljmp
add
inc
pop
std
push
mov
add
rcll
jae
aam
sub
mov
shlb
add
jnp
sbb
arpl
add
mov
mov
dec
mov
popf
sti
ljmp
push
fiaddl
in
movsb
addb
dec
add
push
and
mov
int
stos
and
add
push
xor
pop
sbb
mov
mov
add
out
push
push
leave
xchg
inc
lods
cmpsb
stc
or
mov
movsb
insl
jmp
xor
out
outsb
in
sub
sbb
inc
sbb
or
shll
sub
das
ljmp
stos
mov
cmp
cmp
inc
inc
pop
pop
out
and
add
add
and
add
add
daa
sbb
jl
shlb
and
lcall
adcl
test
mov
xchg
dec
subb
mov
mov
mov
add
add
sahf
sub
repz
pop
into
loop
cwtl
adc
pop
sub
push
shl
jae
inc
mov
inc
lods
mov
sub
add
add
jno
cmp
add
loop
pop
fstpt
add
xor
pop
hlt
mov
add
mov
movsl
ja
xchg
std
ret
pop
cmpsl
dec
bound
hlt
fdivs
cmp
push
sub
fstp
dec
add
add
nop
sub
fistps
cmpsl
pop
add
and
sub
mov
leave
cmp
movsl
cltd
rcrl
cs
pop
mov
rcl
xor
inc
add
add
cmpb
out
imul
jb
fwait
adc
pop
push
sbb
or
mov
inc
dec
xchg
sbb
ret
shlb
cmc
cmp
mov
and
sub
mov
loope
lcall
push
nop
dec
add
adc
dec
add
jecxz
mov
pop
imull
mov
pop
lods
fsubrl
add
add
push
push
mov
sahf
sti
cmp
inc
in
lock
cmp
add
add
add
xor
pop
xchg
pushf
xchg
ret
jae
pop
cltd
cmp
add
push
jge
add
inc
lock
mov
ja
add
add
es
mov
mov
add
addr16
arpl
xor
xor
add
xchg
add
add
shlb
add
dec
gs
and
icebp
ret
jmp
add
aad
shl
mov
and
add
mov
mov
mov
lret
mov
bound
fstpl
cmp
loopne
and
mov
mov
nop
cltd
cmp
mov
push
mov
cltd
addr16
add
add
test
mov
insl
add
lods
icebp
mov
mov
imul
pop
in
xchg
xchg
jecxz
inc
dec
fisttps
push
sar
in
or
shr
dec
push
or
mov
xchg
movsb
or
popa
in
adc
and
mov
xchg
lea
and
push
sbb
not
pop
aam
inc
add
mov
adc
add
mov
mov
ds
push
inc
add
arpl
mov
add
xchg
rcr
or
push
add
add
pop
test
jl
sbb
jp
scas
sahf
or
nop
add
add
mov
sbb
mov
test
stc
push
bound
add
add
jmp
pushw
xchg
mov
test
add
std
jmp
sub
mov
jg
icebp
push
lret
dec
fsubrs
inc
adc
jp
sub
mov
adc
leave
push
mov
fimull
add
add
xchg
mov
lods
jo
aaa
or
jo
push
mov
mov
add
aad
inc
mov
je
nop
jl
cs
ret
push
cld
dec
add
add
pop
lcall
sbb
sbb
aam
dec
movsl
and
dec
js
loop
mov
out
sub
add
add
push
jo
movl
mov
clc
lret
mov
add
std
jo
add
sub
add
je
pop
or
add
add
iret
int
or
cmpsl
enter
cmpsl
dec
add
add
shrb
ja
lock
jo
lcall
add
movsb
xchg
ljmp
add
lcall
adc
ss
add
add
sbb
or
add
add
add
xchg
out
fdivr
and
stc
mov
jno
and
mov
pop
sub
mov
xchg
jno
ret
out
mov
push
and
mov
cmp
ljmp
pop
shr
scas
stos
xchg
shll
mov
sub
add
add
test
push
inc
out
pusha
add
xor
sub
add
scas
push
dec
rorb
jae
dec
add
sub
jbe
inc
cmp
ror
dec
add
in
es
mov
mov
and
and
mov
js
push
cmp
push
test
jno
fcomps
nop
jg
mov
lahf
sbb
test
add
add
add
dec
adc
dec
sbb
add
jmp
mov
sub
add
add
in
mov
test
lret
cmp
add
add
dec
inc
in
add
jbe
fldt
fnsave
xchg
pusha
add
add
clc
cwtl
sbbb
lock
xor
xor
call
xchg
add
push
int3
lods
mov
add
add
xchg
test
add
sbb
lcall
xlat
test
dec
or
mov
je
add
add
divl
adc
sbb
sbb
add
and
mov
add
mov
dec
mov
add
fistps
and
mov
mov
shrl
add
add
and
xchg
jmp
inc
push
add
add
add
add
out
sbb
imul
add
cmc
ret
ret
push
push
pop
inc
cmpb
shll
add
enter
dec
add
add
inc
pop
mov
add
popf
xchg
out
cli
push
sbb
add
add
add
adc
test
dec
jle
or
into
add
mov
in
addr16
push
jle
cld
sbb
xor
cli
stos
test
mov
add
xor
daa
mov
pusha
add
pop
imul
popa
pop
jmp
add
add
push
push
aam
sbb
push
cmpsl
lea
xor
add
add
rolb
lcall
add
mov
ds
add
add
mov
mov
dec
add
mov
push
ljmp
fldl
insb
add
add
pop
sahf
and
in
add
in
push
mov
or
add
pop
xchg
mov
mov
cmpsb
lods
jo
pop
nop
sbbl
mov
lds
add
cmp
pop
xor
add
test
data16
les
dec
ficomps
push
clc
gs
xor
dec
pop
pop
or
clc
loop
jg
cmp
pop
push
mov
inc
mov
mov
enter
ror
add
push
jae
and
add
add
cmp
insl
cmp
rcr
data16
add
add
fldenv
loope
cs
inc
jp
test
cmp
pop
sbb
fsubrl
sbb
fldt
in
push
mov
adc
mov
add
add
jns
ss
icebp
sbb
mov
pop
mov
aad
inc
mov
insb
add
add
fcoml
pop
jno
mov
dec
lods
int
push
scas
xor
add
stos
gs
movsb
cmp
out
repz
pusha
add
cmp
std
and
sbb
jne
in
add
add
xchg
cmp
add
sub
adc
add
inc
add
cmpsl
cmp
mov
js
lret
sbb
jl
xor
inc
add
add
popa
rolb
mov
repz
jnp
inc
gs
das
adc
nop
sbb
cmp
pop
icebp
test
add
stos
clc
rcl
inc
cmpsl
inc
add
inc
repnz
add
add
loope
imul
mov
iret
push
xchg
jne
pushf
leave
jne
jno
loopne
test
es
and
add
add
pop
rclb
add
mov
mov
stos
sti
pop
jbe
popa
loopne
pop
mov
sbb
jp
lock
mov
lock
addb
imul
xlat
adc
and
dec
in
push
rorl
jne
mov
mov
nop
sub
push
pop
sub
mov
cmp
add
add
loopne
or
mov
sub
mov
outsb
sbb
add
add
add
ja
enter
push
or
xor
imulb
dec
in
cmp
push
jns
aam
push
dec
jae
adc
out
cmp
popf
es
sbb
pushf
jecxz
dec
push
stos
or
add
add
mov
cmp
mov
in
fnstsw
sahf
and
dec
cs
adc
or
inc
sbb
xchg
fcmovnbe
jl
fstl
fucomip
in
mov
pop
mov
shl
and
addb
add
add
mov
push
cmp
std
adc
mov
jle
sub
lahf
movsb
les
lcall
add
in
data16
mov
int
sbb
movsl
dec
add
add
adc
idivb
xor
sti
movsl
add
add
add
mov
jg
push
jg
xor
cmpb
scas
out
popl
add
mov
fiaddl
in
test
inc
stos
xor
push
jge
add
add
fisubl
pop
notl
cmp
xchg
outsl
or
jg
hlt
xchg
or
sub
test
push
push
cmp
scas
fwait
mov
adc
adc
scas
dec
lahf
mov
insb
add
add
push
sub
or
add
add
add
int
ljmp
lahf
or
add
add
sub
add
cmpsl
cmp
mov
jle
xchg
ret
aad
in
dec
les
add
cld
xor
add
add
aas
push
imul
scas
lahf
flds
mov
cmp
cmpsb
aam
lea
cld
xor
or
in
add
add
jo
arpl
mov
pop
adc
pushf
enter
mov
imul
add
jno
xorl
jns
dec
icebp
out
cmc
rcrl
jge
dec
adc
xchg
jmp
dec
mov
mov
add
xor
add
lret
std
call
mov
pop
andnps
mov
iret
mov
icebp
mov
imulb
mov
stc
test
push
add
subl
sub
dec
addb
add
loope
add
test
mov
jmp
add
add
add
add
mov
mov
sbb
test
shlb
add
add
add
aaa
dec
out
shl
daa
aam
pop
out
push
les
mov
adc
inc
out
adc
insl
fwait
pop
insl
inc
adc
repnz
loop
push
jg
loopne
cmp
add
and
add
adc
add
add
pop
xor
out
adc
add
jmp
addr16
push
mov
cltd
faddl
add
add
jae
aas
sub
mov
sbb
outsl
int3
aaa
and
inc
add
mov
data16
jns
cmp
sub
sbb
add
inc
add
push
cmp
xchg
popf
inc
inc
pushf
mov
sbb
mov
mov
out
out
xchg
jnp
fsubr
xor
call
adc
iret
cltd
adc
shlb
or
add
add
fmulp
push
jns
mov
ja
add
add
rcrb
add
push
sub
xlat
int3
adc
pop
ds
jle
aaa
xchg
add
fcomps
push
stos
push
ja
aaa
push
clc
jge
aad
sti
lods
push
mov
add
out
movsl
icebp
mov
fwait
push
hlt
cltd
pop
jnp
sub
add
add
xchg
leave
sub
or
add
add
pop
push
jae
mov
jle
add
add
add
or
add
add
scas
mov
add
out
pop
inc
es
mov
and
jge
jp
adcb
cwtl
testl
add
mov
add
ret
add
mov
push
icebp
push
imul
cwtl
add
add
mov
add
bound
imul
pop
and
add
jp
jmp
cli
sub
lods
es
out
dec
add
add
jae
out
daa
mov
out
mov
pop
jne
jg
pop
xor
shlb
mov
jge
repnz
add
cmc
mov
mov
add
mov
mov
inc
add
xor
out
add
std
test
aaa
call
add
xchg
mov
call
in
mov
add
add
add
add
clc
add
test
mov
sbb
imul
add
pushf
mov
popf
fdivl
adc
add
packuswb
add
outsl
or
mov
lahf
and
dec
pop
gs
adc
cmp
inc
add
add
jae
xor
add
fsubl
mov
rep
sub
push
movl
popf
xor
pop
or
sbb
mov
xor
ficoml
add
lcall
mov
movl
jb
push
lods
and
lods
xchg
cmpsb
aas
xchg
hlt
pop
paddsb
jo
add
jmp
xorl
jp
ds
enter
sbb
push
sub
push
xor
iret
cmp
adc
loop
les
jbe
ss
xchg
lea
or
mov
xor
mov
sbb
dec
push
inc
push
xchg
andb
push
cmp
and
pop
ss
nop
shlb
sbb
fstpt
in
call
push
outsl
js
out
arpl
jg
sub
jmp
cmp
sbb
lahf
lock
ficoml
add
fnstcw
dec
cli
jae
adc
orl
mov
pushf
xchg
scas
xlat
mov
adc
cmpsb
add
mov
xchg
push
lea
xchg
hlt
mov
ds
xor
and
insb
add
add
aas
jg
lock
sti
iret
pop
mov
rorl
pop
adc
mov
ja
lods
and
sub
inc
nop
push
in
add
pop
push
mov
jae
jle
in
lahf
rol
add
sbb
sub
mov
aas
sub
popf
call
push
int
xor
lcall
mov
ljmp
add
jbe
cmp
or
dec
push
in
cli
push
fnstenv
mov
sub
mov
ret
inc
sub
mov
add
add
ja
cli
stc
jl
icebp
in
js
pushf
mov
aam
add
orb
shl
push
leave
dec
ret
mov
shrl
sbb
add
sub
int
and
sahf
pop
or
add
add
cltd
lcall
and
add
add
fwait
movsb
mov
shlb
inc
lock
add
jae
cmp
xchg
jmp
jne
dec
dec
sub
add
add
dec
add
in
jp
das
fwait
mov
aam
mov
jne
mov
mov
es
in
sarb
test
add
mov
leave
xor
inc
or
fwait
lcall
mov
add
sub
inc
cltd
or
mov
xchg
scas
cmp
ss
movsb
fwait
xchg
movsl
je
push
das
mov
add
add
add
mov
sti
test
sub
xlat
dec
lret
jo
pop
inc
cmpsb
or
mov
cmpsb
jb
sarb
lods
inc
inc
test
stos
inc
out
adc
std
cmpb
dec
enter
adcb
les
lret
add
add
xor
sub
cmp
inc
mov
jo
inc
icebp
rcl
test
xchg
mov
add
add
mov
pop
xor
pop
inc
sub
mov
ds
clc
mov
push
shrb
add
add
ds
add
loopne
dec
add
add
std
out
fdivl
ja
stos
in
cmp
add
add
cmpsb
int3
cmp
mov
sbb
add
push
dec
add
ljmp
rcr
fcomps
mov
pop
decl
adc
or
add
add
aas
ret
int3
out
testl
add
add
scas
sbb
adc
add
add
lea
jecxz
pop
jno
cmp
ret
clc
and
add
lock
sahf
xor
add
add
fstpt
add
mov
inc
add
add
rcrb
sub
add
add
xchg
stos
inc
add
divb
add
sub
mov
pushf
sub
add
add
add
lret
add
std
and
in
daa
imull
add
sub
mov
pop
inc
push
jg
lods
pop
ja
insb
add
add
mov
mov
mov
push
or
mov
cmp
mov
into
jle
lcall
add
into
pop
nop
add
mov
and
sub
std
inc
pop
xor
pop
sbb
rol
lret
jge
lods
es
push
inc
and
mov
push
cltd
sbb
mov
push
aaa
add
addr16
rcrb
push
add
ds
fsubl
add
fnstcw
push
outsl
scas
xor
add
add
jl
jl
add
add
jp
add
add
add
int
or
add
add
jo
mov
sub
add
add
add
add
add
cmp
xorl
add
sbb
stc
or
test
jne
loop
cmp
jmp
xchg
adc
xchg
sub
mov
neg
xchg
int3
cmp
es
loopne
in
into
xchg
loopne
outsl
icebp
or
add
lock
pop
xchg
pop
outsb
cmpl
add
mov
sbb
mov
sbbl
xchg
add
or
out
pop
pop
sbb
dec
lea
and
ss
push
fstpt
aas
cli
rcrb
and
loope
dec
add
add
jo
sub
decl
add
sub
mov
ljmp
add
add
rcrl
dec
pop
xor
and
add
icebp
loope
popf
dec
add
or
add
add
cmp
fnstcw
stos
cmp
mov
mov
andl
std
add
add
xlat
mov
add
stos
or
leave
and
add
mov
mov
ja
add
sbb
add
add
fdivs
push
in
mov
dec
add
sbb
test
add
mov
mov
add
xor
mov
pop
dec
mov
sbb
add
add
fcoml
xchg
cmp
inc
in
xchg
add
add
xor
mov
int3
lret
ljmp
and
shrb
jns
mov
add
dec
pop
jmp
push
lret
lods
cmp
pusha
add
add
xor
imul
rcrl
mov
popa
repnz
lds
push
ljmp
arpl
mul
fsubl
add
add
sbb
mov
lahf
mov
jnp
adc
nop
mov
cmp
mov
xchg
sahf
lcall
fimuls
in
das
flds
add
add
jns
sub
mov
add
mov
add
pop
loop
pop
mov
rcll
in
stos
pop
mov
cmp
pop
cmc
loope
mov
or
add
add
fsubr
pop
std
call
add
sbb
mov
call
jbe
push
ret
or
cmp
xchg
push
mov
sbb
and
lock
xchg
daa
and
mov
xor
xlat
test
ljmp
sub
sahf
aas
jl
rol
inc
add
add
adc
xchg
add
add
add
outsb
and
mov
xchg
and
push
cli
aam
and
mov
icebp
mov
push
arpl
add
lea
add
cmc
into
cmp
jne
sub
add
add
jg
pop
xor
mov
aas
xchg
imul
cmpsb
fistpl
call
cmp
sbb
add
add
add
aam
in
xlat
sar
pop
mov
leave
inc
add
add
push
mov
dec
lods
je
out
clc
xchg
pop
push
jle
sbb
bound
pushf
fists
sti
fwait
repnz
int
pop
xor
xor
mov
adc
or
and
add
add
add
jae
xor
fistpll
xor
cmc
mov
cmpsb
clc
addl
fldenv
out
mov
dec
mov
imul
cmpsb
in
or
mov
cmp
sbbb
sub
add
add
into
dec
das
push
fdiv
dec
jns,pn
mov
pop
data16
leave
sbb
inc
cs
jns
pop
mov
add
test
sub
add
add
lods
lret
add
add
jmp
test
add
lret
cs
mov
jle
add
ret
jno
mov
dec
xchg
incl
icebp
push
adc
adc
add
add
add
add
sub
lahf
movsl
jg
push
lods
jne
add
add
xor
jno
add
je
dec
out
push
push
rorl
add
add
scas
jbe
cmpsb
movsl
test
add
cmp
or
add
add
push
sbb
sarb
cmp
mov
shl
xchg
cmp
push
xchg
inc
push
arpl
sbb
aam
mov
jo
sub
adc
xchg
inc
add
mov
lahf
stos
pop
inc
push
sub
inc
mov
add
add
jb
dec
mov
mov
popf
cmp
test
push
rep
lods
and
add
add
cmp
arpl
loope
or
add
add
mov
add
or
aas
pop
pusha
add
rclb
mov
pop
xchg
adc
gs
ret
mov
pushf
int3
inc
lods
movsl
or
mov
mov
loope
in
sub
cltd
in
pop
dec
pop
inc
or
mov
jno
jmp
add
mov
mov
add
add
add
mov
jnp
pop
cmp
sub
mov
int3
jl
mov
mov
movb
sub
pop
xor
mov
sbb
lock
jg
imul
lock
pushf
test
call
sarl
fisubl
imul
test
sbb
push
inc
fadds
mov
enter
divl
add
sub
add
mov
xor
cmp
inc
mov
fsubl
into
jnp
and
out
cmp
or
loopne
divl
and
inc
aas
xor
lods
push
mov
add
scas
add
das
adc
or
popa
sar
shlb
call
pop
jp
jle
cmp
aas
xchg
lcall
aad
jae
sbb
pop
sbbb
jnp
orl
inc
add
in
mov
add
mov
int
cmp
pop
jno
fcoml
xchg
add
adc
call
add
pop
and
js
stc
int3
int
loope
popf
and
mov
test
mov
push
adc
add
xchg
sbb
xor
jbe
aaa
sti
push
sub
add
add
or
add
mov
sub
mov
xor
add
mov
add
add
add
insb
add
daa
pop
out
in
ja
push
cmpl
jl
add
add
mov
jb
adc
dec
add
add
xor
jno
ret
push
pop
cmc
shlb
and
add
add
aam
and
popf
icebp
fucomp
sbb
dec
sahf
xchg
ficomps
cmp
mov
inc
jnp
dec
adc
push
jecxz
add
add
test
mov
enter
inc
fcom
out
mov
xor
add
lcall
in
lcall
add
add
inc
mov
xor
xor
mov
stc
xchg
pusha
add
add
push
dec
dec
cwtl
dec
add
add
mov
xchg
scas
es
and
and
add
add
decb
push
mov
adc
fisubrl
add
add
movsl
ljmp
sub
add
add
add
add
xchg
andl
adc
daa
sbb
mov
repnz
add
loopne
ja
push
call
add
cmp
daa
in
repnz
add
add
out
loope
test
leave
notb
sti
movsb
inc
add
icebp
pushf
into
push
push
int3
or
mov
mulb
int
loope
add
sub
mov
jg
aaa
mov
cltd
inc
add
add
add
add
sub
add
add
xor
lcall
stos
in
aas
vpslld
jae
cmp
ret
xchg
mov
mov
stos
inc
add
popl
add
insb
add
add
sub
mov
add
add
xchg
cmp
icebp
dec
cmp
cmp
sarl
add
add
cmp
dec
add
aam
sbb
adc
add
sahf
mov
sub
add
add
jne
stos
cmp
mov
js
jge
or
dec
mov
add
dec
negl
mov
ret
pop
mov
xor
add
add
push
cmp
cmp
mov
dec
mov
sbb
cld
xchg
aaa
std
inc
push
inc
adc
test
and
push
add
add
add
dec
add
mov
add
add
add
add
ja
pop
inc
mov
addr16
je
repnz
cmp
and
dec
add
add
test
cmp
loop
in
cs
inc
push
add
cli
or
iret
lock
rcl
clc
cld
imul
dec
dec
cmp
roll
jbe
imul
pop
xchg
jl
lea
movsb
popf
add
shll
xchg
jne
mov
pop
popf
sub
push
int3
pop
cmp
sbb
cmp
lds
in
sub
idiv
ficomps
jb
mov
mov
cmpsb
adc
cwtl
aaa
push
pop
adc
push
lahf
fwait
cs
inc
bound
and
dec
sti
sub
mov
movb
add
add
jno
mov
decb
add
add
andl
add
repz
cmp
je
push
rol
test
in
adc
stc
xchg
push
adc
jecxz
pop
insl
aam
mov
int
sub
adc
add
aam
arpl
add
add
dec
fists
aaa
jae
lds
add
add
arpl
adc
xchg
mov
jecxz
add
add
mov
add
add
cmp
cmp
mov
mov
mov
mov
adc
xchg
hlt
pusha
add
shll
mov
add
jae
addr16
data16
pop
ud1
aaa
jmp
dec
cmpsl
pop
jns
fmull
jle
push
add
ljmp
inc
add
add
loope
cmp
sarl
sub
mov
xor
sti
pop
test
push
pop
xor
xor
loope
xchg
jne
mov
or
and
add
add
and
and
setle
adc
add
add
add
cwtl
sub
fnstsw
mov
test
add
std
int
ficompl
jl
cwtl
dec
gs
inc
xchg
inc
lock
fisttpl
inc
or
sub
stos
scas
data16
dec
add
lahf
inc
add
add
std
add
add
add
push
mov
sbb
std
inc
xchg
or
add
add
test
add
add
jecxz
fdivl
fisttpll
jmp
fst
and
jb
add
and
add
add
lret
popf
hlt
jg
xor
jo
insl
mov
mov
push
mov
insl
cmpsb
xor
push
sub
add
add
cltd
push
ds
pop
popa
cmc
xor
pop
aaa
adc
ds
add
add
mov
add
add
ret
sub
fwait
mov
shl
mov
cmp
jno
popa
jge
ret
mov
xchg
mov
and
add
add
loopne
inc
jmp
dec
jle
repz
lods
test
repz
popa
mov
add
add
push
ljmp
add
es
int
pop
xchg
xlat
out
add
in
mov
das
xchg
pop
mov
shr
sbb
cmpsl
les
add
mov
mov
mov
es
xchg
dec
add
shl
xor
jno
sbb
js
add
test
or
mov
mov
js
sbb
in
add
add
add
push
push
jns
mov
movl
jo
jg
push
pop
sbb
xchg
cmp
rorl
enter
lea
imul
cmpl
xchg
sub
pop
lea
add
add
cmc
jg
inc
mov
into
mov
icebp
clc
aas
fimuls
loop
js
pop
push
jb
or
mov
icebp
sub
mov
pop
stc
pusha
add
pop
mov
rorl
mov
inc
movsl
jnp
add
add
arpl
decl
mov
lock
add
add
mov
add
outsb
cmp
add
push
clc
mov
shr
pop
sub
xor
cmp
add
add
xor
test
cltd
dec
subb
add
pop
mov
out
cmpsl
repz
pop
test
dec
add
jg,pt
add
lcall
add
lock
pop
push
aam
cld
stc
push
mov
and
add
outsl
or
add
add
jnp
dec
and
add
add
mov
test
adc
inc
stos
or
movsb
shrl
jecxz
xchg
xchg
cmp
popf
mov
rclb
rcll
add
add
jb
mov
mov
sti
pushf
loope
jne
jns
mov
dec
and
add
add
adc
sbb
sbbb
mov
and
mov
subl
mov
shll
push
sahf
sbb
test
add
dec
testb
add
add
mov
dec
std
scas
in
push
add
push
popw
dec
add
sub
mov
xor
mov
scas
jg
call
aas
inc
mov
mov
mov
dec
add
add
pop
roll
push
sbb
hlt
std
imul
add
add
dec
push
sub
jp
or
fnstsw
idivb
xchg
lock
clc
or
jo
ret
out
ljmp
jge
cld
mov
xorb
dec
pop
lds
xor
and
mov
loope
sub
addr16
mov
sbb
das
int
adc
gs
loop
lds
xor
je
dec
jns
xchg
shrb
ss
cmp
cwtl
hlt
or
xchg
pop
es
push
mov
insl
push
aad
cmp
cwtl
loop
loope
cmpb
int
cwtl
push
pop
andb
and
xchg
rcr
ja
push
and
push
cmpsb
stos
jmp
sbb
xchg
mov
inc
add
add
cli
pop
outsl
push
aam
adc
mov
xchg
add
shr
lret
xchg
sbb
inc
cmc
adc
imul
add
incb
jbe
add
add
mov
add
add
mov
push
jecxz
aas
loopne
inc
pop
jne
sbb
fiaddl
cld
lret
pop
sub
mov
sti
lods
pop
shll
xor
add
mov
dec
add
add
add
inc
out
sub
dec
inc
out
mov
inc
ss
das
lret
movsl
gs
sbb
add
add
fldl
add
add
nop
sbb
mov
cld
fdivrl
addr16
sbb
add
jle
mov
mov
int
jnp
fsubrs
fwait
ret
add
add
pop
stos
scas
pop
insb
add
je
adc
gs
adc
mov
push
inc
test
pop
mov
xchg
idiv
sub
mov
push
xor
out
iret
pop
mov
ljmp
pop
pushf
sbb
add
add
add
add
int
add
add
out
dec
leave
jbe
movsl
je
movsl
dec
cmp
mov
sbb
add
aam
cmovnp
pop
jmp
add
inc
add
add
fcoms
mov
fwait
mov
add
xchg
cmp
bound
xchg
dec
add
add
push
mov
and
add
xor
mov
mov
mov
mov
mov
ficompl
xchg
dec
xchg
push
mov
add
pop
jmp
add
add
mov
rcr
add
sahf
aas
scas
imul
jns
enter
ja
pushf
dec
sti
add
add
add
cmc
outsl
mov
add
add
je
ret
sub
mov
mov
lock
jecxz
jp
cltd
inc
add
out
inc
cmovns
add
mov
das
dec
add
faddl
add
add
push
in
dec
add
add
push
orl
add
jno
cmp
in
push
sbb
push
fisttpll
pusha
add
jae
ret
in
mov
insb
add
add
dec
mov
mov
sub
lret
cmp
lock
or
xchg
push
and
mov
add
add
add
sbb
sbb
cld
dec
in
inc
add
pop
ror
adc
fldcw
xchg
movsb
mov
add
add
add
sti
adc
or
mov
inc
fbstp
orl
ja
and
push
xchg
call
xor
or
adc
icebp
not
or
add
add
jnp
in
adc
stc
mov
pop
add
add
add
test
sbb
xor
sub
add
add
jb
imul
lea
stc
out
loop
mov
mov
outsl
in
movsb
shll
push
or
and
aaa
cmp
jno
jno
dec
std
push
adc
xchg
xor
add
add
mov
sub
sub
add
add
jl
inc
mov
sbb
and
andb
and
inc
out
pop
xchg
adc
push
add
les
xor
add
add
dec
pop
jb
xorl
add
shlb
movsb
js
ret
stos
inc
xchg
mov
fldt
jno
mov
shlb
mov
shlb
popf
add
daa
xchg
notl
add
add
in
clc
daa
adc
xchg
xorps
in
mov
dec
add
in
mov
add
add
mov
rclb
add
iret
push
fcmovne
push
movsl
mull
mov
add
sub
mov
mov
or
mov
mov
mov
orl
add
add
push
fdivl
in
jl
rolb
daa
push
mov
push
mov
mov
add
cmpsb
or
add
add
repz
inc
add
pop
and
add
add
inc
scas
rcll
sahf
movsb
inc
add
add
shll
insl
add
aad
jno
out
xor
xor
leave
jb
adc
mov
push
sub
mov
mov
cmp
into
adc
xchg
pop
dec
andl
add
mov
add
jl
add
add
sbb
add
test
jbe
jg
sub
add
add
add
shlb
mov
mov
pop
pop
xchg
xor
orb
add
pop
lret
test
repz
xchg
or
pushf
mov
add
add
xchg
mov
cmc
test
sbb
repz
jae
out
add
pusha
add
add
imul
sbb
sarl
daa
mov
add
add
pushf
push
div
cmp
gs
popa
and
mov
push
xchg
rep
or
cmp
mov
add
mov
dec
out
inc
out
mov
jbe
mov
nop
cld
repz
add
cmpsb
xchg
pcmpgtd
icebp
lcall
shrl
scas
mov
stc
xchg
inc
add
add
pop
pop
scas
lcall
fdivs
out
add
add
sub
lcall
add
out
pusha
add
add
push
aas
push
xchg
xor
lcall
out
cmp
mov
mov
sbb
imul
mul
loope
and
xchg
cmpl
add
aam
push
push
pop
dec
add
aam
mov
mov
push
out
mov
pop
adc
jae
cmp
mov
jae
mov
pop
jmp
int3
loop
fists
add
add
add
xchg
shrb
pop
sub
rcl
cs
mov
push
mov
movsb
push
mov
add
cmp
sbb
sbb
into
daa
xchg
adc
sub
out
pop
pop
popa
stos
push
test
mov
lahf
add
xor
add
add
dec
add
mov
cmp
sub
rorb
test
cmp
clc
cmp
enter
ja
aam
rep
fimuls
js
jae
cmp
rolb
or
add
fsin
sbb
mov
push
hlt
mov
sub
mov
je
push
movsl
cmp
mov
lret
loopne
add
or
add
add
adc
fldcw
cmp
ljmp
inc
xchg
lret
xchg
jnp
jno
nop
test
sbb
mov
add
xchg
loopne
add
add
mov
push
call
add
add
add
add
pusha
add
scas
mov
add
mov
mov
dec
and
cli
int
ds
jp
add
add
in
sar
imul
add
dec
mov
mull
call
mov
add
sub
xorb
ss
fildl
jno
xchg
add
add
lret
rep
mov
mov
adc
dec
cltd
pop
adc
subl
sarb
data16
inc
add
add
fimuls
shr
sbb
mov
inc
in
out
shrl
test
or
and
add
add
add
andl
add
cmp
test
mov
add
mov
xchg
mov
add
aad
push
test
cmp
adc
and
jg
aaa
pop
lret
add
add
xlat
popa
mov
mov
out
xorb
add
mov
shr
in
outsl
js
and
sti
adc
add
sbb
in
and
mov
inc
add
mov
mov
pop
add
add
mov
lret
ds
jp
sti
and
xchg
push
add
mov
jle
pushw
sbb
pushf
cld
or
jns
int3
mov
mov
aaa
cmp
add
lock
mov
push
xorb
mov
add
into
hlt
insb
add
and
mov
in
loope
add
add
add
sbb
data16
fsubp
sub
mov
mov
lea
fdivrl
push
aam
pop
dec
add
add
ret
icebp
add
mov
popa
push
jmp
popa
and
pop
leave
rorl
add
lods
push
add
dec
cltd
xor
cmp
mov
mov
jb
mov
add
add
outsl
dec
sub
adc
push
push
frstor
push
into
pop
shlb
mov
inc
leave
inc
add
adc
mov
nop
pop
push
mov
sarb
add
in
sub
mov
add
fidivs
mov
dec
pop
inc
add
popf
jle
jp
cwtl
dec
push
lcall
test
jecxz
add
mov
std
and
std
mov
aas
arpl
push
imul
add
sub
lahf
jo
xchg
xchg
ds
push
imulb
add
add
add
in
jns
dec
add
pop
rorb
fwait
jb
cmp
xor
pop
rcrb
stos
fxch
es
jmp
gs
mov
nop
push
scas
mov
add
or
mov
sbbl
scas
inc
mov
stos
jne
dec
leave
aaa
inc
add
and
add
add
shll
jnp
add
add
and
pop
setnp
fwait
pop
mov
addl
cld
sub
add
add
cmpb
das
cmp
cmp
push
aas
orl
add
mov
mov
pushf
jbe
xchg
fwait
pusha
add
add
add
int
xchg
add
loopne
sbb
mov
xchg
pop
add
sub
sahf
insl
sarl
in
add
add
add
cmp
sub
add
movsl
inc
sti
cmpsl
inc
lds
ja
jno
movsl
pop
pop
arpl
repz
arpl
and
add
mov
adc
push
insb
add
out
test
add
add
pop
xor
movsb
jne
cli
jp
dec
sub
push
outsl
inc
mov
add
sbb
xor
push
daa
cmp
mov
fsubp
xor
push
push
xchg
add
mov
jb
ds
add
add
ret
add
add
push
xchg
add
sbb
out
push
js
xor
cmpsb
notl
lcall
add
add
pop
stc
dec
mov
dec
sbb
mov
sar
xchg
dec
icebp
lods
mov
leave
mov
or
add
add
enter
push
push
ret
mov
adc
test
jle
pushf
loopne
dec
fsubrl
sbb
and
add
add
or
mov
jp
mov
dec
add
add
outsb
in
mov
fisubs
add
mov
clc
mov
cs
dec
mov
jno
dec
add
add
mov
sub
mov
mov
add
add
mov
test
lds
fwait
inc
jge
inc
add
push
call
lock
jp
mov
stc
jp
dec
enter
lods
dec
inc
scas
push
pop
loop
inc
decl
mov
add
add
add
fldl
add
add
in
xchg
adc
stos
out
mov
jb
mov
push
gs
aad
stos
rolb
inc
sub
scas
mov
pop
cli
mov
inc
xor
inc
test
adc
adc
add
dec
jae
ja
or
add
add
mov
add
jg
sbb
lcall
cmpsb
out
rcll
xchg
stc
repz
dec
add
add
sub
popl
cmc
daa
mov
mov
and
add
insb
add
add
mov
adc
dec
push
push
test
mov
mov
pop
or
shrb
push
pop
add
mov
sub
add
add
aad
stc
cmp
push
arpl
sub
inc
and
add
mov
int3
push
int
pop
clc
xchg
iret
cmp
aas
jo
lock
mov
add
add
adc
or
mov
add
add
lds
jb
inc
dec
in
enterw
xor
gs
xor
fisttpl
in
bound
ror
rol
dec
add
addb
mov
test
mov
dec
jp
xchg
mov
mov
mov
fcompp
pop
or
add
add
nop
and
mov
jae
xor
loope
pop
pop
push
cmp
dec
sbb
in
arpl
in
daa
mov
mov
mov
push
pop
xchg
scas
inc
xchg
mov
dec
add
add
push
es
pop
repz
push
icebp
cltd
notb
xlat
pushf
icebp
push
bnd
aam
push
in
mov
and
popf
jne
adc
dec
push
loopne
dec
pop
scas
lret
mov
lcall
add
add
add
jmp
mov
mov
cmp
enter
out
aad
int
add
mov
xchg
adc
add
xchg
push
inc
jge
adc
add
add
jl
cli
jg
cmc
test
add
popl
cmp
add
add
pusha
add
add
pop
xorl
mov
xchg
fsubr
push
add
mov
or
mov
daa
and
mov
add
add
add
xchg
lds
mov
inc
fwait
sbb
jb
xchg
jmp
lods
xchg
in
loope
scas
jne
gs
jb
ljmp
aas
std
pop
enter
stc
jne
or
lock
in
pop
rcrl
fwait
mov
add
sahf
cmp
add
icebp
add
add
add
bound
call
jno
ja
or
adc
push
push
out
sarl
gs
inc
or
add
add
mov
shr
loope
mov
cmp
or
add
add
sbb
rclb
add
add
cmp
pop
scas
sub
pop
das
std
sub
mov
mov
call
jmp
lret
add
add
mov
inc
adc
push
ret
daa
pop
inc
add
out
scas
dec
clc
adc
fsubl
add
mov
add
mov
mov
leave
rcrl
loopne
orb
test
mov
mov
xchg
outsb
arpl
sahf
scas
add
jb
and
fmul
jae
incb
lods
jecxz
lock
sub
add
add
repnz
out
int3
add
movsb
scas
hlt
add
push
sahf
aas
lods
add
mov
rcll
or
mov
cwtl
pusha
add
mov
lahf
dec
pop
fcomps
das
mov
add
ss
fisttpl
add
mov
pop
fsub
or
mov
scas
jb
stc
push
notl
test
push
nop
xor
out
xor
sahf
arpl
sbb
and
roll
add
cmp
mov
test
imul
outsb
cmp
xor
cmpsl
pop
fstps
fnstcw
add
in
mov
enter
out
push
push
sub
add
add
add
add
jbe
adc
adc
jo
shufps
jge
and
add
add
mov
jge
pop
inc
cmp
nop
xorb
sbb
jge
mov
push
in
xchg
into
icebp
sub
lock
fsubrl
dec
aam
pusha
add
add
movsl
jg
arpl
add
push
sub
dec
add
add
cli
into
cmp
call
xchg
push
outsl
cmpsb
xor
jp
mov
rclb
or
mov
stos
dec
loop
push
or
mov
loope
add
add
fsubp
xor
add
add
inc
add
mov
cmp
push
jns
cld
cmpsl
adc
push
les
or
stos
jns
mov
nop
sub
add
add
jg
fnstenv
add
xor
in
notb
out
lea
lahf
sub
and
cmp
adc
imulb
ret
sti
js
xchg
push
arpl
jno
add
pushf
pop
lods
xor
push
push
push
mov
pop
add
mov
dec
push
inc
pop
push
popa
jb
in
mov
divb
scas
add
mov
pop
mov
shrb
lods
sbb
imul
add
add
nop
add
icebp
lods
xor
lods
mov
mov
and
fisubs
jecxz
mov
pop
das
sbb
bound
mov
bound
cmp
andl
pop
push
jg
mov
ficoms
dec
filds
scas
cmp
xchg
sub
jno
loop
xor
add
aas
aaa
fsubl
add
pop
shll
mov
pop
cltd
adc
add
add
add
add
mov
or
add
add
bound
pop
jo
sbb
mov
loop
push
ret
js
or
in
add
add
xor
pop
aad
cld
and
add
inc
cmpsb
data16
ret
cmc
rorb
add
icebp
inc
pushf
outsb
xchg
push
rcrb
pushf
inc
enter
gs
ret
jmp
add
xchg
arpl
cmc
fcoml
pop
push
aas
aas
fcomps
popf
lock
add
and
mov
add
add
add
add
add
add
stc
jle
dec
and
lods
out
push
test
add
add
loop
xor
enter
push
jge
popa
insl
lahf
arpl
lods
inc
test
std
les
daa
push
daa
movsb
jecxz
sbb
rol
repnz
outsl
lods
movsl
lock
add
add
and
imull
shrb
push
ljmp
scas
add
mov
in
je
push
xchg
and
mov
loopne
test
mov
xor
iret
int
mov
push
rep
jno
mov
lock
stos
popf
shrb
and
nop
shl
mov
push
add
imul
inc
add
add
out
repz
in
or
add
add
dec
dec
xchg
arpl
out
int
notl
mov
sarl
fists
push
push
xchg
add
cmp
mov
adc
repz
push
enter
ss
sbb
add
jecxz
add
add
movsb
and
add
add
ja
push
adc
std
pop
sub
adc
cwtl
mov
mov
add
pushl
insl
sbb
push
in
call
rol
add
mov
incb
inc
add
and
sti
add
dec
add
add
pop
fstpl
icebp
ljmp
pop
ljmp
pop
ficompl
add
mov
test
push
inc
fnstenv
dec
cmpb
add
mov
aad
push
ds
mov
jno
add
mov
ljmp
imul
add
mov
xchg
and
add
add
outsb
sub
add
add
mov
sti
add
mov
sub
cmpsb
mov
xor
out
add
sbbb
test
mov
add
add
add
ret
or
or
mov
and
or
