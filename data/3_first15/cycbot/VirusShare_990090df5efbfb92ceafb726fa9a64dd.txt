add
add
add
add
add
or
or
or
add
or
add
or
or
add
add
add
add
add
add
or
or
add
add
add
or
add
or
add
or
add
or
add
or
add
add
add
or
or
add
add
or
add
or
add
add
add
or
or
add
or
add
add
add
add
add
or
add
add
or
add
add
add
add
or
or
or
add
add
add
or
add
add
add
add
add
or
add
or
or
add
add
add
add
add
add
add
add
or
or
add
or
add
or
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
or
add
add
add
or
or
add
add
add
add
or
add
or
add
or
add
add
or
or
add
or
or
or
add
add
add
or
add
or
add
add
add
add
add
add
add
or
add
add
add
or
add
add
add
or
add
or
add
or
add
or
or
add
or
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
or
add
add
add
or
add
add
add
add
add
or
add
or
add
or
or
or
add
or
add
or
add
or
add
or
or
add
add
add
or
or
add
or
add
add
add
add
add
or
add
or
add
or
add
add
add
add
add
add
add
or
add
or
add
or
add
add
or
or
add
or
add
add
add
or
add
add
or
add
or
or
add
add
or
add
or
add
or
add
add
add
or
add
add
add
add
add
or
or
add
add
add
or
or
add
add
add
or
or
add
add
add
or
or
add
or
add
or
add
add
or
or
or
add
add
or
add
or
or
add
add
add
add
or
add
or
add
add
add
or
add
or
add
or
add
add
add
add
add
add
add
or
add
add
add
or
add
add
add
or
add
or
add
add
or
add
add
add
or
add
or
or
or
add
or
add
add
add
add
add
or
or
add
or
add
or
add
add
add
or
add
or
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
or
add
or
add
or
add
or
add
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
add
add
or
add
add
add
or
or
add
add
add
or
add
or
add
or
add
add
add
add
or
or
or
add
add
or
add
add
add
or
or
add
or
add
or
add
or
add
add
add
add
add
add
add
or
add
add
add
or
add
or
add
or
add
add
or
add
add
add
add
add
add
add
or
add
or
add
add
add
or
add
add
add
or
add
or
add
or
add
add
add
or
add
or
add
or
add
add
or
add
or
or
add
or
add
add
add
or
add
add
or
add
add
add
add
add
add
add
add
or
add
or
add
or
add
add
add
add
add
add
or
add
add
or
or
add
or
add
add
add
or
add
or
add
or
add
add
add
add
add
add
add
add
or
or
or
add
add
or
add
or
or
or
add
or
add
add
add
or
add
or
add
add
or
add
or
add
add
add
or
add
add
add
or
add
or
add
or
add
or
add
add
or
add
add
or
or
add
add
or
add
add
add
or
add
or
add
add
add
add
or
or
add
or
add
add
add
or
add
add
add
add
or
add
add
add
or
or
or
add
or
add
add
add
add
add
add
add
add
or
add
or
add
add
or
add
add
add
add
or
add
or
or
add
or
add
add
or
or
add
add
add
or
add
or
or
add
or
or
or
add
or
add
or
add
add
add
or
add
or
add
or
or
add
add
add
or
or
add
or
add
add
add
or
add
add
add
add
add
add
add
add
or
or
add
add
add
add
add
add
add
add
or
add
or
add
add
add
or
add
or
add
or
add
add
add
or
add
or
add
or
or
add
add
add
or
or
or
add
add
add
add
add
add
add
or
add
or
add
or
add
or
add
add
add
add
add
or
or
or
add
add
add
add
or
or
or
add
add
or
add
add
add
add
add
or
add
or
add
or
add
or
add
or
add
add
or
add
add
add
add
add
or
or
or
add
or
add
or
add
add
add
add
add
add
add
add
add
or
or
add
or
add
add
add
add
add
add
add
add
add
add
or
add
add
or
add
add
add
or
or
add
add
or
add
or
add
add
add
or
add
or
add
add
add
add
add
add
add
add
add
add
or
add
or
add
or
add
or
add
or
add
or
or
add
or
add
add
add
add
or
add
add
or
add
or
add
add
add
or
or
add
add
add
or
add
add
or
add
or
add
or
add
or
add
or
or
or
or
or
add
add
or
add
add
add
or
or
add
or
or
or
add
add
add
or
or
add
add
or
or
add
or
or
add
add
add
add
or
add
add
or
add
add
add
or
add
or
or
add
add
add
add
add
add
or
add
or
add
add
or
add
add
or
add
add
add
add
add
or
add
or
add
add
add
add
add
add
add
add
or
add
or
add
add
add
add
add
add
add
add
add
add
add
or
or
add
add
or
add
or
add
or
or
add
add
add
or
add
add
add
add
add
or
add
add
add
add
or
add
add
add
add
add
add
or
add
or
add
or
add
or
add
add
add
add
add
add
add
or
or
add
or
add
add
add
add
or
or
or
or
or
add
add
add
or
or
or
add
add
add
or
add
add
add
or
add
or
add
add
add
or
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
or
add
add
add
add
or
add
add
or
or
add
or
or
add
or
add
add
add
or
add
or
add
or
add
or
add
or
add
add
or
add
add
add
or
add
add
add
add
add
or
add
or
add
or
add
or
add
or
add
add
add
or
add
or
add
add
add
or
add
or
add
add
add
or
or
add
or
add
add
or
add
add
add
add
add
or
add
add
add
add
add
add
add
or
add
add
or
or
add
add
add
add
or
add
add
add
add
or
add
or
add
add
add
add
add
add
add
add
add
or
add
add
or
add
or
add
or
or
add
or
add
or
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
or
add
or
add
add
add
add
or
add
or
add
or
add
add
add
or
add
add
add
or
add
or
or
add
add
or
add
or
add
or
add
add
add
add
add
or
add
or
add
add
add
add
add
or
add
add
add
or
add
add
add
add
or
add
or
or
add
or
add
or
add
or
add
or
add
or
or
add
add
add
add
add
or
or
add
or
or
or
add
add
or
add
or
add
add
add
add
or
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
or
add
add
add
add
add
add
or
or
add
or
add
add
add
or
add
or
add
add
or
add
or
add
or
add
or
add
add
add
or
add
add
add
add
or
add
add
or
or
or
or
add
add
add
or
add
or
or
add
or
add
add
add
or
add
or
or
add
add
add
add
or
add
or
or
or
or
add
add
or
add
or
add
add
add
add
add
add
add
add
add
or
add
add
or
add
add
or
or
or
add
or
add
add
or
add
or
add
or
or
add
add
add
add
or
or
add
add
or
add
add
add
add
add
add
add
add
add
or
add
or
or
add
add
add
or
add
add
add
or
add
or
add
add
add
or
add
add
add
add
add
add
add
or
add
add
add
add
add
or
add
add
or
or
add
add
add
or
or
add
or
or
or
add
or
or
add
or
add
or
or
or
or
add
or
or
add
add
add
or
add
add
add
or
add
or
add
or
add
add
add
add
or
add
or
add
or
add
or
or
or
or
add
add
or
add
or
or
or
add
or
add
add
add
or
add
or
add
add
add
add
add
add
add
add
add
or
or
add
or
or
add
add
or
add
add
or
or
add
add
add
add
add
or
add
add
add
or
add
add
add
add
or
add
or
or
add
or
add
or
add
add
add
or
add
or
add
or
or
or
or
add
or
add
or
add
add
add
add
add
or
add
or
add
add
add
or
add
add
add
or
add
add
add
or
add
or
add
add
add
or
add
or
add
add
or
or
add
or
add
or
add
or
or
or
add
or
add
add
add
add
or
add
add
add
add
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
or
or
or
add
add
add
or
add
or
add
add
add
add
add
add
add
or
add
or
add
or
add
add
add
add
or
add
or
add
or
add
add
add
add
or
or
or
add
or
add
add
or
add
add
or
add
add
add
add
add
or
add
add
add
add
or
add
or
add
or
add
add
add
add
add
add
or
add
add
add
add
add
or
add
add
add
or
add
or
add
or
add
or
or
or
or
or
or
add
or
add
add
add
add
add
add
add
add
add
add
add
or
or
add
or
add
add
add
add
or
add
or
add
or
add
or
add
add
add
or
or
or
or
add
add
add
add
add
add
add
or
or
or
add
or
add
add
add
or
add
add
add
or
add
or
add
or
add
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
add
add
or
add
add
add
or
or
or
add
or
add
add
or
add
or
add
add
or
add
add
add
or
add
add
add
add
or
add
add
add
add
or
add
or
add
add
add
or
add
add
add
or
or
or
add
or
add
add
or
add
add
add
or
add
add
add
or
add
or
add
add
add
or
add
or
add
add
add
or
add
add
add
or
add
or
add
add
or
add
add
add
add
add
or
or
or
add
add
add
or
add
add
add
or
add
or
add
add
or
or
or
or
add
add
add
or
add
or
add
or
or
add
add
add
add
add
add
or
add
add
add
add
add
add
add
or
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
or
or
add
add
add
add
add
or
add
or
add
add
add
or
add
add
add
add
add
or
add
or
add
or
add
add
add
or
add
or
add
add
add
add
add
or
add
add
add
add
add
or
or
add
or
or
add
or
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
or
or
add
add
add
or
or
add
or
or
add
add
add
add
add
add
add
or
or
or
add
add
add
or
add
add
add
or
add
or
add
or
or
or
add
add
add
add
add
or
add
add
add
or
add
add
or
add
add
add
add
add
add
add
add
add
add
or
or
add
or
or
add
or
add
add
or
or
add
add
add
add
add
add
add
cmp
ljmp
ds
pop
mov
lds
inc
mov
cmp
add
add
lock
sbbb
cbtw
mov
mov
int
cmp
push
bound
imul
add
adc
sbb
xor
mov
dec
add
xchg
dec
mov
mov
mov
out
idiv
xchg
mov
es
mov
pusha
mov
pop
push
imul
andb
push
outsl
repz
xchg
fildll
outsl
call
add
inc
jl
mov
add
add
fld
dec
jl
std
fnstsw
adcl
add
add
pop
aas
lret
ja
sub
add
add
imul
pop
add
add
add
push
add
add
mov
push
mov
or
add
add
mov
add
int
mov
ficoml
mov
xor
movsb
push
imul
add
add
xlat
icebp
popa
sbb
jl
inc
mov
sbb
add
add
fwait
and
mov
xor
or
ja
adc
jp
out
inc
mov
or
xchg
sti
mov
inc
inc
add
add
mov
fidivl
adc
lds
pop
and
add
add
enter
loope
arpl
mov
js
lock
mov
stos
lret
jb
popa
or
cmp
add
sbb
test
cli
jns
cmpsl
lahf
jns
inc
mov
std
cs
clc
cmc
enter
push
cmp
lcall
fcomi
add
mov
ficompl
out
or
ja
adcb
mov
add
movsb
popa
outsb
mov
sub
in
pop
mov
xor
add
mov
fcoms
in
push
mov
add
add
add
add
jmp
mov
int
adc
jnp
adc
cmp
movsl
dec
sbb
cmp
fwait
pop
popa
ljmp
cmp
jne
cmp
idivb
fadds
add
xor
fisttps
add
xchg
pop
pop
or
sahf
testl
lahf
add
in
adc
mov
add
mov
jnp,pn
mov
ret
add
sbb
out
aas
jl
pusha
mov
jne
inc
add
dec
cmc
daa
test
adc
adc
jbe
jbe
ss
lret
mov
ret
addr16
and
pop
cmp
icebp
xlat
scas
xor
outsl
or
lea
shrl
add
mov
add
add
pop
insl
push
dec
loope
add
add
daa
dec
jnp
mov
add
add
add
dec
pop
and
add
add
mov
add
fisttpl
leave
mov
aaa
inc
add
add
and
mov
dec
pop
mov
lods
les
xor
pop
pop
xchg
sub
dec
or
xchg
insb
mov
ljmp
add
add
movsb
and
xchg
cmp
mov
decl
std
aas
dec
cli
ds
and
int
adc
jp
adc
rolb
mov
iret
and
mov
add
add
fs
or
add
add
roll
push
dec
add
add
stos
jp
rclb
aaa
xchg
in
jbe
outsl
sub
mov
cmpb
add
add
out
pop
push
or
add
add
push
into
mov
xor
cltd
jl
leave
pop
mov
ss
xchg
mov
cmp
test
dec
sbb
jmp
push
addr16
or
add
add
add
loopne
outsl
mov
fcmovbe
rcrl
or
mov
mov
cmp
add
fwait
lock
mov
mov
dec
inc
sub
add
add
adc
movsb
ret
dec
mov
xor
add
add
test
dec
add
add
add
adc
or
lret
mov
inc
mov
jp
ss
mov
lea
sub
add
add
add
aas
jg
inc
add
add
add
add
add
in
push
jp
notb
adc
add
je
imul
lcall
push
adc
pop
cmp
rorb
add
pop
xor
aam
push
dec
iret
movsb
outsl
lock
push
int
add
add
icebp
or
adc
push
hlt
mov
jp
adc
scas
mov
ljmp
sahf
pop
out
mov
outsl
outsl
int3
pushf
dec
dec
mov
jecxz
add
add
sbb
out
add
nop
pushf
add
mov
mov
test
add
jnp
cmovp
mov
jg
xor
cmp
add
push
das
cli
lock
test
in
mov
sub
adc
add
dec
rep
frstor
add
hlt
push
jbe
xor
push
fwait
or
pop
cmc
xlat
fldl
xor
cmc
popf
pop
lds
xchg
add
add
into
xchg
or
add
add
loop
out
and
inc
mov
pop
ret
inc
ljmp
rcll
lods
lock
add
add
fnsave
into
ss
inc
dec
cmovb
dec
xchg
mov
mov
xor
mov
add
add
and
loopne
je
sub
add
add
jo
mov
inc
data16
add
and
add
add
add
add
add
sub
mov
movsl
movsl
cmp
xchg
mov
add
add
push
mov
push
lcall
mov
and
add
add
add
xchg
fstl
jge
lcall
mov
loop
stos
test
lock
aas
pushf
and
push
int3
mov
add
add
push
jbe
pop
xchg
mov
dec
push
and
add
add
sarb
add
hlt
xchg
cmp
add
in
xchg
add
add
cmp
dec
mov
add
add
add
add
dec
pop
push
add
sub
data16
cli
in
int
or
add
add
mov
inc
fdivrl
scas
std
or
mov
sbb
test
mov
movups
mov
jecxz
push
cmpb
mov
add
fmuls
add
add
jmp
xor
pop
or
lcall
push
lock
imul
pop
or
add
add
cli
loope
pop
fs
sbb
mov
pusha
mov
push
xorl
sbb
and
add
add
aam
adc
dec
dec
mov
adc
xor
add
add
inc
push
leave
decb
add
add
add
jle
jecxz
add
push
or
add
add
or
fs
inc
pop
xor
pop
arpl
and
mov
mov
ds
scas
repz
cmpsl
pusha
mov
mov
push
xchg
rorb
adc
add
add
cltd
jecxz
rdmsr
call
ret
add
add
arpl
add
add
fisubs
add
add
int3
in
in
outsb
mov
or
xchg
ficoml
xchg
dec
mov
adc
adc
jo
sbb
int3
jbe
sbb
scas
loope
fwait
jp
mov
test
add
pop
push
dec
mov
lahf
fidivrl
out
scas
les
inc
ja
push
lea
mov
enter
dec
lahf
shll
add
xor
fldcw
add
add
cmpsb
out
into
jne
push
pop
in
movsl
mov
dec
jl
ja
ja
xchg
sbb
fisubrs
add
js
sahf
sahf
push
pop
into
adc
cmp
push
loop
mov
lods
fsubrp
jo
cmp
jl
push
jno
pop
call
add
add
mov
in
sub
mov
xchg
jns
push
mov
and
add
add
fstp
test
add
fsubrp
cmpsb
dec
add
add
repz
jno
lret
pushl
add
add
ret
idivb
add
add
movsl
jge
adc
add
add
ss
imul
mov
in
xchg
push
xor
add
add
divb
cmp
jp
add
add
es
mov
bound
push
rol
cli
icebp
insl
idivl
cli
pop
sub
loop
scas
and
add
add
repz
sbb
add
add
adc
add
int3
or
xchg
mov
add
xchg
push
and
add
add
push
ret
mov
iret
jns
mov
and
movsl
push
push
test
jp
add
add
xor
outsb
pusha
mov
data16
xchg
sbb
cltd
add
mov
push
xor
lods
movsb
pop
cmp
mov
adc
or
and
add
add
mov
dec
or
rol
push
cmpsb
push
fbstp
mov
push
and
add
push
mov
mov
imul
add
add
cmp
jl
adc
add
add
mov
jae
dec
outsl
mov
mov
arpl
add
add
adc
add
add
rorb
je
pop
cmp
jecxz
lods
cmpsb
mov
lret
call
mov
adc
mov
int3
pop
scas
mov
rcrb
pop
mov
imul
jo
add
add
iret
into
inc
imul
or
loope
sbb
stos
aaa
aad
jmp
mov
push
in
jge
mov
out
cmp
pop
les
add
add
imul
xor
and
sbb
add
mov
add
add
xor
or
add
add
and
add
add
push
repnz
cmp
fisttpll
add
cmp
sti
lahf
cmpsl
mov
arpl
mov
mov
or
rep
mov
add
icebp
sbb
nop
daa
cld
or
add
add
xchg
in
jo
cmp
fisttpl
fisubs
testl
in
cmp
cmp
push
out
aas
xchg
fadds
cmp
add
mov
mov
sub
inc
add
add
popa
jns
jecxz
dec
jnp
push
fadd
xor
pop
add
adc
adc
mov
add
add
js
daa
mov
xchg
add
icebp
mov
add
add
xchg
cmc
shll
xchg
sub
int
test
adc
test
inc
out
jmp
test
data16
iret
into
in
xchg
arpl
les
mov
sub
add
add
push
mov
and
roll
mov
pminsw
jnp
jmp
push
add
push
cmp
out
adc
add
add
clc
stos
and
and
inc
add
add
pushf
push
inc
xor
add
mov
and
cmp
outsl
cmp
gs
sub
add
add
arpl
mov
or
ja
cmp
repnz
popa
jle
add
add
mov
loope
jb
dec
pop
mov
lret
and
or
ds
hlt
in
or
incl
add
add
insl
mov
rclb
aam
and
sub
outsl
cs
add
add
je
or
lock
mov
mov
cmpsl
or
or
insb
add
add
popa
sub
shll
mov
lods
push
jmp
jbe
call
fisubrl
add
or
mov
shr
push
mov
pop
iret
lods
stos
repz
push
sbb
inc
add
add
int
mov
cmpsl
jne
cmc
jbe
scas
sbb
add
add
sub
xor
outsl
jns
imul
dec
jo
andb
pop
jp
in
leave
iret
sbb
testl
movsb
and
add
in
in
cmp
sbb
stos
push
orb
add
aaa
sbb
in
dec
pusha
add
add
add
add
mov
mov
lock
xor
add
inc
add
add
add
lret
add
add
push
adc
js
mov
jmp
add
popf
mov
inc
add
add
mov
add
add
dec
push
push
dec
or
notl
add
add
and
add
add
incb
inc
fcoms
ret
loopne
dec
add
add
std
or
repz
nop
sbb
xchg
cmp
add
add
add
sub
and
or
adc
popa
cwtl
sub
fimull
push
cmpl
shrl
xor
add
add
xor
push
mov
sti
pop
in
fimuls
jle
ja
mov
sbb
or
imul
push
xor
aad
lods
and
lret
add
add
in
jmp
popa
sbb
xchg
imulb
add
add
push
mov
add
add
pop
push
in
test
repz
fcmovnb
mov
add
push
scas
adc
mov
cmc
jg
imul
inc
add
add
psllw
push
sbb
add
add
mov
mov
popf
fstps
and
add
add
adc
jno
cmp
dec
movsb
add
add
add
call
popa
out
clc
lods
das
or
add
add
lods
xchg
xchg
dec
push
jne
ss
sub
daa
scas
dec
mov
or
imul
aad
dec
pushf
xor
in
lret
jnp
mov
and
push
inc
mov
xchg
jns
jp
adc
insb
mov
and
das
push
xchg
mov
xchg
jmp
push
rclb
inc
add
add
rcl
jge
lcall
pop
push
mov
pop
cmp
test
outsb
stos
pop
call
cmc
lea
jae
incb
add
add
mov
fsts
mov
mov
sbb
xchg
jg
mov
jecxz
push
mov
push
test
cmpsl
fcomps
mov
xor
dec
pop
add
add
add
push
lds
sbb
pop
aaa
add
push
push
outsl
mov
insw
cmp
mov
add
int
mov
or
pop
dec
mov
add
add
add
icebp
jl
sbb
jbe
add
add
xchg
jo
andps
jnp
call
add
imul
inc
out
pop
cmp
and
mov
adc
jl
xchg
scas
pop
enter
mov
imul
icebp
fcmove
jno
fldcw
ja
cmp
pop
scas
pop
loope
imull
add
cltd
pop
xor
xchg
fsubrs
outsb
mov
pop
pop
push
cmc
mov
repnz
cmc
lret
add
add
mov
push
pop
cmp
cmc
negb
insl
pop
call
add
add
lods
out
sbb
xor
lcall
and
arpl
in
cs
and
add
add
insb
mov
mov
std
pusha
add
add
push
cmp
jp
hlt
hlt
push
adc
enter
icebp
inc
add
add
adc
fcoml
popa
xchg
cmpb
add
xor
pusha
mov
or
add
add
pop
or
or
add
outsb
pop
imull
add
add
adc
jl
adc
sti
xacquire
sub
sbb
jb
pop
mov
adc
add
add
mov
ret
mov
rorl
or
add
dec
mov
lahf
lods
ds
xor
gs
out
incl
mov
ljmp
pop
dec
inc
mov
shlb
mov
add
jge
xchg
inc
lea
dec
mov
js
dec
add
add
stos
repnz
add
add
pop
imul
push
movsl
int3
imul
adcl
out
divl
jae
push
int3
dec
add
add
add
jo
mov
ret
add
add
add
cwtl
push
mov
and
add
add
add
loopne
imulb
inc
mov
sbb
mov
cmp
dec
mov
jno
icebp
mov
add
mov
loopne
pop
xor
xor
js
clc
outsb
das
mov
sbb
add
add
sbb
enter
sub
xchg
sub
add
add
jo
add
or
add
add
adc
sub
add
mov
jns
mov
add
mov
adc
les
stos
sahf
shll
call
and
aad
push
xor
testl
add
xchg
and
rorl
add
add
dec
sbb
add
add
in
push
enter
test
xor
imul
idiv
adc
xchg
out
test
pop
lods
inc
aam
add
add
cmpb
cmp
jnp
int3
mov
int3
lahf
and
add
add
add
add
mov
add
add
test
xor
dec
add
add
ja
sbb
add
mov
ret
ret
add
add
add
add
add
add
add
cld
cmp
xor
cmpsl
jno
movsl
cwtl
adc
lock
shrb
and
add
add
sbb
cli
stos
lea
xor
mov
add
addr16
fdiv
ljmp
stos
cmpb
mov
sbb
pushf
test
add
rcr
aam
dec
mov
inc
or
cmp
push
xor
jg
rcl
flds
pop
add
add
push
adc
add
sbb
es
xor
mov
mov
fsubrs
mov
add
cmp
movsb
dec
mov
in
adcl
bnd
rorl
add
xchg
movsb
xor
stos
xchg
dec
shl
jb
xchg
pop
jmp
cli
mov
jo
sub
add
add
dec
mov
mov
cmp
scas
add
add
add
ds
add
add
lcall
add
fdiv
xchg
mov
mov
dec
mov
outsl
cwtl
je
mov
and
add
add
add
adc
and
add
add
inc
push
cmp
cwtl
scas
and
mov
adc
adc
add
add
in
sub
jl
rcll
pop
cltd
and
nop
and
add
add
xchg
sub
and
sbb
jmp
push
mov
sub
add
add
push
loope
lcall
mov
add
mov
arpl
cmp
inc
pop
notl
cmp
cmc
call
inc
mov
stos
subl
pop
cltd
add
jns
add
add
cmp
cmp
mov
les
aas
or
add
add
mov
rcll
pop
inc
add
push
pop
jl
pop
jl
nop
loope
xchg
inc
repz
adc
mov
add
push
and
xor
mov
and
mov
adc
add
add
push
pusha
mov
mov
inc
push
jecxz
cwtl
scas
lea
push
sub
add
loopne
stc
mov
mov
add
aas
ret
fidivrs
stos
and
ja
sti
mov
push
test
add
add
ret
aaa
cmpsb
mov
leave
mulb
add
add
push
mov
add
cmpsb
add
push
mov
and
lods
xor
jns
xchg
add
add
cmc
inc
leave
sub
fwait
je
fmuls
aam
leave
lods
xchg
stc
jp
push
rol
sbb
add
add
add
add
push
es
in
rcll
fwait
push
int
inc
add
add
pop
jbe
inc
shlb
std
out
mov
aas
dec
int3
es
loopne
jnp
mov
inc
fildll
lahf
std
cmpsl
stos
in
mov
xchg
cmp
push
and
sahf
cmpl
mull
rol
mov
in
xor
sbb
fs
pop
loopne
xor
pop
cmp
bound
add
bound
cmp
cmc
mov
loope
pop
or
add
add
pop
cltd
and
pusha
mov
loop
sub
shll
fwait
pop
rorb
add
add
and
add
add
subl
add
inc
dec
mov
addr16
mov
push
fwait
outsl
and
add
add
mov
insl
cmp
cld
push
movsb
mov
push
sub
pop
test
add
add
pop
or
loop
fmul
mov
cmc
test
pop
sbb
push
sub
xchg
sbb
add
jecxz
mov
xchg
pusha
add
add
loope
mov
jmp
mov
lods
mov
dec
xchg
jle
mov
push
mov
add
mov
xchg
dec
jmp
add
add
sbb
movsb
adc
scas
adc
popf
inc
pop
pop
cltd
add
add
add
hlt
ljmp
xchg
fisttpl
es
out
pushf
xchg
xor
add
add
cmpsl
sub
lret
xorl
jb
add
add
dec
mov
xchg
mov
add
add
or
add
add
shll
pop
adc
xor
and
es
insb
mov
inc
mov
psllw
adc
jmp
jg
add
add
push
repnz
cmp
mov
mov
js
lea
loope
add
add
add
mov
mov
scas
sbbl
add
add
add
add
and
add
ret
movsl
jg
lock
xchg
pop
movsb
adc
inc
rep
jl
imul
mov
jbe
inc
add
add
xchg
loop
adc
fisttpl
mov
mov
mov
mov
add
mov
pop
out
add
shll
sbb
loop
loop
sbb
pop
pop
cmp
shl
inc
cwtl
loopne
mov
jno
mov
add
jge
stos
dec
loopne
lret
pop
insb
mov
mov
push
pcmpgtw
push
xor
add
add
mov
popa
jl
ljmp
mov
mov
mov
imul
mov
mov
mov
aaa
aad
adcl
add
add
add
add
cmp
cwtl
dec
inc
pop
stos
lret
ss
sbb
mov
jmp
pop
mov
call
in
sub
call
cmp
jne
lea
push
push
call
or
mov
shr
mov
add
push
push
push
push
push
call
leave
ret
mov
mov
mov
or
lea
lea
sub
shr
lock
mov
je
mov
add
lea
clc
jmp
ret
push
mov
sub
lea
movl
movl
push
push
push
push
push
cld
call
test
jne
push
call
jmp
ret
cmpb
add
push
arpl
enter
add
add
cmpsb
outsl
jae
add
add
loope
xor
or
adc
aam
call
add
add
adc
add
add
clc
sbb
add
jnp
sub
lock
mov
mov
loope
and
popa
nop
cmp
fs
loopne
dec
mov
add
mov
shlb
jp
dec
mov
add
add
in
cmp
pop
lock
inc
ss
push
imul
push
jecxz
mov
cwtl
adc
sub
add
add
fwait
cld
shlb
popa
test
jmp
push
std
and
add
add
out
jp
ss
and
mov
lahf
jno
sbb
fstps
jae
xchg
out
mov
test
je,pt
dec
sti
adc
sahf
andl
or
pusha
mov
pop
lods
lods
roll
xlat
in
lret
add
add
add
xlat
cmpsb
mov
or
and
out
repnz
add
rorb
push
cmp
js
mov
cmpsl
mov
mov
mov
test
add
cmp
push
scas
mov
mov
adc
fdivrs
in
and
rclb
in
mov
mov
add
fcmovnu
and
mov
sbbl
add
scas
xor
js
mov
jo
cli
push
clc
ss
fs
sbb
cld
jnp
xchg
iret
addr16
lret
popa
mov
add
add
or
add
add
cwtl
movsl
mov
and
add
add
add
pop
jge
imul
adcb
loop
mov
call
or
add
add
inc
cmpsl
and
jno
aaa
inc
fisubl
add
add
add
add
sbb
movsl
sub
add
pop
ror
lret
hlt
pushf
int3
out
pop
xor
add
add
test
fcoml
outsb
jno
inc
scas
les
xor
adc
outsb
insb
mov
sub
add
add
fld
ljmp
jl
or
dec
add
add
lret
fs
jecxz
pop
adc
mov
lea
add
add
add
add
add
add
add
test
jge
mov
pop
mov
xor
pop
incl
jne
lcall
add
sbb
xorl
add
mov
add
mov
push
pxor
loopne
add
add
add
call
sbb
mov
icebp
jl
xor
cmpsl
into
push
cli
sti
mov
imul
add
add
out
sbb
dec
mov
mov
add
sbb
into
and
repnz
mov
dec
loopne
mov
cmp
mov
and
add
add
mov
popf
pop
adc
das
stc
inc
push
cmpsl
gs
mov
xchg
sub
add
add
popf
scas
jl
ret
dec
mov
xlat
xor
ret
movsb
test
push
out
jne
pop
shl
aam
jae
in
mov
mov
lret
jle
xchg
mov
xchg
sbb
jle
out
aam
mov
daa
pop
lds
fsubrl
scas
sub
cwtl
int
and
push
cwtl
daa
int3
clts
sbb
mov
push
jnp
jne
sub
add
add
mov
adc
mov
push
ss
inc
add
add
mov
in
inc
dec
lods
aam
test
xchg
in
xchg
iret
xor
add
add
add
int3
cmpsb
movsl
cld
mov
pop
fldl
js
pop
shrb
pop
dec
shl
lret
xchg
scas
pushf
mov
mov
andl
push
pusha
add
add
int3
cld
mov
test
in
cmp
and
addr16
inc
add
add
stos
inc
dec
dec
mov
mov
ja
pop
ffreep
jns
push
jae
dec
add
add
cmc
cmp
mov
jg
ja
in
idiv
andb
xchg
push
lea
outsl
psubb
mov
in
movsb
cmpsb
std
add
in
cmpsl
and
sub
add
add
jnp
sbb
popf
and
hlt
dec
add
add
enter
push
sbb
clc
mov
lahf
mov
cmpsl
pusha
add
add
sti
fwait
pushf
fcmovnb
repz
faddl
repnz
cmp
or
xlat
fstpl
mov
jg
fs
or
add
add
fisttpll
xchg
mov
add
jae
xor
test
test
ja
mov
adc
cmpsl
add
mov
cmp
aam
push
in
jle
dec
add
test
aad
lods
jnp
mov
add
add
sbb
mov
jnp
pop
xor
aas
leave
mov
xchg
pop
inc
adc
js
mov
lret
dec
mov
xchg
xchg
das
jg
das
or
outsl
mov
cmp
notl
es
or
pop
lcall
jmp
xor
mov
pop
or
add
add
add
add
add
jns
dec
ss
pushf
fidivs
add
add
pop
rorl
inc
add
add
push
pop
push
shlb
xchg
add
add
xchg
pop
cmp
cmc
inc
mov
sub
add
add
add
add
cmove
add
add
imul
add
or
popa
inc
pop
xchg
push
cmp
xchg
mov
ficomps
loope
sub
iret
insb
add
add
mov
add
dec
mov
mov
mov
fmul
leave
cmp
push
mov
lock
adc
cmpsb
addr16
add
add
xchg
mov
mov
jecxz
jae
xor
add
mov
or
call
fsubs
icebp
or
into
inc
rcrb
mov
mov
xor
sar
dec
push
je
sbb
mov
sub
add
add
outsb
dec
mov
cmp
add
add
imul
push
sbb
adc
cs
mov
dec
add
add
fcmovnb
scas
and
or
push
cmpsl
push
scas
movsl
ja
je
and
add
in
dec
lock
stos
add
push
sub
shlb
xchg
dec
mov
adc
out
xchg
xchg
sub
imul
xor
jl
push
pop
iret
sub
add
add
sbb
das
xor
add
add
jge
push
mov
add
cmp
hlt
mov
test
push
test
xchg
in
sub
or
mov
sub
fwait
decb
aas
imul
pop
testl
sarl
int
sbb
jle
les
push
mov
scas
inc
lcall
out
xchg
sbb
xchg
out
out
push
rcrb
add
add
cmp
mov
add
add
scas
push
inc
add
add
out
mov
mov
out
add
sub
into
pushl
jmp
inc
shr
sarl
mov
add
rcrl
sbb
arpl
dec
inc
add
add
lea
outsb
inc
mov
fiaddl
add
jae
insl
jmp
mov
xchg
sarb
lcall
add
add
jb
mov
cmpsb
sbb
pop
jmp
fbstp
add
pusha
mov
ss
stc
pusha
mov
jns
lret
fldl
mov
in
cmp
mov
or
add
add
or
out
jb
add
add
add
add
add
xlat
je
into
pusha
mov
add
test
dec
mov
push
jmp
cmp
add
add
add
add
or
add
add
mov
cltd
data16
xchg
lock
sub
sbb
sub
mov
bound
adc
sti
xor
xchg
mov
add
add
scas
cmp
mov
idivb
mov
xor
pushf
leave
orb
inc
scas
mov
push
repnz
add
add
loop
enter
add
add
aas
dec
shll
xchg
push
mov
pop
and
mov
add
pop
xchg
idivb
cmp
xor
push
push
shr
loopne
cmp
fadds
in
add
clc
outsb
stos
lret
pop
movsb
int3
cmp
repz
pop
xor
dec
mov
hlt
sub
popf
scas
fstpl
lods
or
add
add
fistpll
pop
adc
ljmp
sub
in
scas
jl
xlat
sahf
cs
pop
fwait
divb
mov
cmp
int3
movsb
add
add
fwait
fs
fnstenv
add
add
add
add
cmp
loopne
cmp
mov
inc
test
mov
xchg
or
movsl
popa
outsb
lahf
xor
adc
push
sub
add
add
xchg
sub
sbb
fdivrs
in
stos
lret
test
mov
mov
add
add
incl
ret
or
add
add
mov
inc
add
add
dec
adc
add
add
cltd
jg
pop
lcall
and
add
add
xchg
dec
cmp
mov
mov
add
mov
fistpll
ds
test
add
add
repz
mov
adc
dec
add
add
shl
dec
or
add
add
mov
negb
jge
sub
add
add
lcall
rolb
bsf
incb
jne
mov
pop
mov
push
iret
jnp
pop
adc
pop
cltd
push
add
fstpt
jmp
mov
data16
cmp
rclb
fcmovnb
mov
andl
sti
movsb
adc
das
push
sub
add
add
mov
sahf
inc
popf
sbb
loope
stos
xchg
add
add
fcoms
and
add
add
mov
lods
adc
push
mov
shll
inc
add
add
fdivs
add
cmp
testb
sbbb
pop
dec
and
add
inc
mov
arpl
flds
sbb
add
add
and
add
add
mov
repz
mov
rcll
fidivrs
imul
add
dec
in
jae
fwait
mov
lcall
test
add
adc
icebp
mov
stos
jne
jecxz
sti
test
mov
cmpsl
fsub
pushf
iret
into
lock
mov
insb
mov
fists
add
jl
movsl
mov
mov
pushf
pop
scas
jo
lahf
xor
add
add
cmp
lock
add
add
xor
xchg
add
add
add
mov
movsb
rcrl
mov
pop
in
add
insl
cltd
insl
in
xor
adc
jecxz
insl
in
sbb
test
add
add
or
mov
push
in
adc
ret
dec
add
add
and
pop
scas
adc
add
add
dec
ljmp
mov
and
add
add
ss
sti
jbe
mov
cmpsl
arpl
sbb
add
add
shl
cmpsl
leave
out
push
scas
mov
add
jns
sbb
mov
decb
add
add
xchg
stos
jg
adc
or
add
add
movsb
xor
cmc
jp
pop
cmp
mov
add
and
shll
jl
insl
test
dec
mov
mov
add
add
int3
bound
notb
add
add
sub
jle
push
jo
ret
xor
jnp
push
cmpsb
inc
mov
mov
cwtl
repnz
out
outsl
xchg
pop
repz
out
fs
lret
decl
scas
lret
dec
insl
test
scas
mov
stc
js
incl
movsb
adcl
fsubs
add
mov
cmp
dec
xchg
push
int3
sti
and
add
add
sub
add
add
ficoml
movsb
pop
insl
aas
pop
mov
add
add
ja
std
pop
imul
add
add
cltd
xchg
ret
ror
cltd
dec
and
data16
scas
ror
sub
and
add
add
cmp
and
push
jnp
jb
add
add
add
add
push
or
jl
sbb
jl
test
stc
push
xchg
ret
xchg
out
pop
or
iret
divl
mov
inc
dec
or
aad
add
add
cmc
adc
js
adc
dec
mov
in
shl
pop
pop
fimull
inc
push
inc
jns
cmp
cmp
sbb
push
call
data16
inc
shrl
mov
mov
dec
jae
faddl
xor
add
add
test
add
add
sub
add
add
mov
mov
mov
and
add
add
add
add
add
xchg
stc
mov
or
loopne
and
ffreep
xchg
pop
stc
mov
fsubs
add
add
push
int3
sub
add
add
lret
mov
adc
xchg
xchg
cwtl
push
pop
push
inc
add
add
add
std
fimull
mov
and
add
add
dec
jle
and
lret
xchg
or
jae
add
add
or
lock
mov
lods
mov
push
rcrl
int3
mov
add
add
add
and
imul
stos
shll
add
lock
mov
mov
mov
jne
test
jp
dec
add
add
xor
and
jl
jbe
and
add
add
test
ffreep
bound
add
popa
data16
imul
ficompl
adcb
add
add
sub
test
rcll
cmp
rclb
test
testb
mov
aaa
orl
decb
call
add
add
push
nop
push
mov
leave
nop
jmp
add
insl
movsl
out
je
clc
repnz
nop
nop
jae
in
jne
add
add
add
clc
repnz
nop
nop
jae
in
add
add
cwtl
and
add
add
push
clc
repnz
nop
nop
jae
add
mov
add
add
dec
mov
call
nop
jae
add
jp
jl
add
add
jb
push
mov
jae
lock
pop
mov
add
scas
add
rolb
mov
add
repnz
nop
nop
jae
mov
add
shrb
push
mov
xchg
ret
cwtl
mov
xor
add
add
loop
test
repnz
nop
nop
jae
in
mov
jne
add
add
jp
adc
repnz
nop
nop
jae
dec
jne
push
add
mov
add
push
loopne
repnz
nop
nop
jae
jnp
xor
mov
lret
xor
add
clc
repnz
nop
nop
jae
add
rorl
clc
repnz
nop
nop
jae
xor
add
add
sub
mov
mov
leave
nop
jmp
add
jne
pop
xchg
cwtl
fcomps
add
loopne
pop
clc
repnz
nop
nop
jae
add
add
sbb
add
cmp
add
mov
leave
nop
jmp
push
cmp
add
add
add
add
add
add
lods
sub
clc
repnz
nop
nop
jae
mov
leave
add
add
push
mov
leave
nop
jmp
add
jne
add
or
add
inc
and
repnz
nop
nop
jae
loop
cmp
sbb
pop
or
add
mov
clc
repnz
nop
nop
jae
dec
mov
jne
fsubrs
add
add
mov
mov
xchg
ret
add
add
add
or
add
add
add
sub
jns
test
repnz
nop
nop
jae
xor
add
movb
or
add
nop
push
mov
leave
nop
jmp
in
add
adc
lcall
ret
mov
clc
repnz
nop
nop
jae
add
sbb
jne
xor
pop
pop
push
mov
xchg
ret
add
add
in
add
add
add
test
cld
nop
nop
jae
add
lret
add
in
add
add
addb
scas
push
and
add
add
aam
stc
add
push
mov
xchg
ret
insl
add
add
sub
add
add
jbe
test
nop
push
mov
leave
nop
jmp
add
mov
add
or
dec
xor
nop
push
mov
leave
nop
jmp
xor
mov
add
inc
and
nop
push
mov
leave
nop
jmp
dec
mov
sub
pop
add
cmp
mov
cld
nop
nop
jae
add
add
add
cmp
add
adc
dec
push
mov
xchg
ret
mov
add
add
mov
clc
repnz
nop
nop
jae
dec
insl
add
sbb
add
xor
add
clc
repnz
nop
nop
jae
add
mov
hlt
orb
and
add
add
xor
pop
inc
add
add
add
add
add
sti
pusha
clc
repnz
nop
nop
jae
add
add
movb
add
dec
add
mov
clc
repnz
nop
nop
jae
mov
add
add
add
or
rclb
nop
jmp
add
add
add
sub
mov
xchg
ret
cmp
in
add
add
mov
add
clc
repnz
nop
nop
jae
add
add
iret
add
cwtl
cmp
pushl
nop
push
mov
leave
nop
jmp
xor
in
dec
inc
jne
add
mov
mov
xchg
ret
cwtl
add
jne
mov
xor
in
call
clc
repnz
nop
nop
jae
iret
add
xor
lods
sub
bound
ret
push
mov
xchg
ret
jnp
add
add
add
xor
add
clc
repnz
nop
nop
jae
inc
add
inc
add
add
sbb
add
add
sbb
add
mov
clc
repnz
nop
nop
jae
add
add
add
out
fwait
nop
push
mov
leave
nop
jmp
add
add
jne
iret
jnp
aam
pop
push
mov
xchg
ret
faddl
sbb
dec
add
add
add
pusha
add
add
clc
repnz
nop
nop
jae
add
add
lods
add
add
clc
repnz
nop
nop
jae
lcall
aam
in
fwait
push
mov
xchg
ret
add
add
push
xor
xchg
test
add
push
dec
jmp
or
add
fdiv
add
add
add
cwtl
movsl
sub
add
add
les
push
mov
xchg
ret
add
mov
dec
adc
xor
mov
push
clc
repnz
nop
nop
jae
xchg
xor
add
fmull
push
push
mov
xchg
ret
sbb
add
add
movsl
add
sub
inc
push
clc
repnz
nop
nop
jae
add
add
add
add
fdivs
add
into
mov
pause
push
mov
leave
nop
jmp
push
lret
roll
pusha
fadds
add
push
mov
xchg
ret
in
lods
sbb
add
xor
test
repnz
nop
nop
jae
dec
add
add
push
pop
push
mov
add
add
add
xchg
add
in
or
add
repnz
nop
nop
jae
iret
mov
clc
jb
dec
add
push
mov
xchg
ret
dec
lods
add
in
add
add
js
push
push
mov
xchg
ret
mov
add
jns
cwtl
jnp
loop
add
lahf
call
clc
repnz
nop
nop
jae
test
leave
cmp
and
add
add
add
lods
cltd
dec
or
cmp
popf
add
mov
fld1
nop
push
mov
leave
nop
jmp
add
aam
xor
add
repnz
nop
nop
jae
faddl
add
push
lea
mov
repnz
nop
nop
jae
add
lock
clc
mov
mov
push
mov
xchg
ret
lret
add
iret
cwtl
add
jns
add
repnz
nop
nop
jae
lret
add
jne
add
in
mov
shlb
mov
nop
push
mov
leave
nop
jmp
sbb
in
jne
push
mov
add
mov
outsl
push
flds
fists
mov
pop
clc
repnz
nop
nop
jae
add
or
add
inc
subl
clc
repnz
nop
nop
jae
add
leave
cs
adcl
cld
nop
nop
jae
sbb
lock
sub
aam
std
xor
clc
repnz
nop
nop
jae
add
jne
test
in
mov
repnz
nop
nop
jae
add
add
add
add
faddl
nop
nop
jae
cwtl
in
in
push
xor
add
nop
nop
jae
mov
add
add
add
stos
dec
stc
mov
clc
repnz
nop
nop
jae
or
add
clc
lcall
mov
leave
nop
jmp
add
sub
faddl
in
fistpl
clc
repnz
nop
nop
jae
add
add
sbb
add
clc
repnz
nop
nop
jae
jne
roll
jns
dec
in
add
out
icebp
nop
push
mov
leave
nop
jmp
cmp
lods
add
iret
add
add
add
inc
clc
repnz
nop
nop
jae
add
add
add
mov
add
mov
mov
pop
push
mov
xchg
ret
lret
cwtl
add
fmuls
test
outsb
mov
xchg
inc
add
add
jnp
mov
add
mov
lea
inc
add
test
jl
add
clc
add
clc
repnz
nop
nop
jae
sarl
add
insl
dec
clc
add
test
repnz
nop
nop
jae
in
dec
xor
test
nop
push
mov
leave
nop
jmp
add
pusha
insl
fadds
add
mov
add
insb
nop
push
mov
leave
nop
jmp
xor
inc
add
test
inc
clc
repnz
nop
nop
jae
push
xor
add
add
mov
inc
in
mov
xchg
ret
mov
in
sbb
leave
mov
sub
add
add
add
repnz
nop
nop
jae
xor
add
sbb
dec
insl
cmp
add
clc
repnz
nop
nop
jae
or
roll
jne
mov
add
mov
inc
nop
push
mov
leave
nop
jmp
dec
inc
dec
dec
add
add
add
push
cmpsb
bound
call
nop
jmp
add
fadds
add
add
mov
xchg
ret
add
mov
dec
add
mov
mov
rolb
add
add
mov
loopne
add
add
push
nop
push
mov
leave
nop
jmp
cwtl
sbb
add
add
mov
dec
xor
clc
repnz
nop
nop
jae
add
xchg
dec
add
mov
inc
or
add
add
add
nop
push
mov
leave
nop
jmp
add
add
mov
add
inc
sub
push
mov
xchg
ret
lock
dec
jne
in
add
insl
add
jnp
nop
nop
jae
xor
add
jne
add
add
lcall
stos
clc
repnz
nop
nop
jae
insl
adc
xor
in
cwtl
test
sbb
push
clc
repnz
nop
nop
jae
sub
cs
cmp
mov
clc
repnz
nop
nop
jae
dec
add
mov
add
add
in
lods
sbb
fisttpl
repnz
nop
nop
jae
add
add
mov
dec
cmc
push
push
mov
xchg
ret
insl
add
add
in
sbb
cmp
mov
js
clc
repnz
nop
nop
jae
add
add
add
in
xorl
clc
repnz
nop
nop
jae
add
in
jne
add
jne
clc
repnz
nop
nop
jae
lret
add
add
in
sub
add
pop
push
mov
xchg
ret
fcom
jne
add
jne
add
add
icebp
xor
clc
repnz
nop
nop
jae
add
dec
add
add
add
jb
nop
push
mov
leave
nop
jmp
push
iret
add
add
loope
push
mov
xchg
ret
leave
add
dec
add
adc
add
and
push
clc
repnz
nop
nop
jae
xchg
add
leave
add
mov
loope
inc
sbb
nop
jmp
add
lret
or
add
fadd
pop
nop
push
mov
leave
nop
jmp
lcall
leave
add
xor
clc
repnz
nop
nop
jae
add
cmp
add
add
mov
clc
repnz
nop
nop
jae
pusha
add
add
add
add
add
icebp
call
clc
repnz
nop
nop
jae
mov
add
dec
sub
insl
cmp
mov
sti
nop
push
mov
leave
nop
jmp
add
lcall
mov
or
push
mov
leave
nop
jmp
add
roll
add
add
jnp
inc
add
roll
add
sbb
push
push
mov
xchg
ret
mov
add
xor
dec
dec
jl
jne
push
clc
repnz
nop
nop
jae
add
add
jns
add
add
add
repnz
nop
nop
jae
in
add
movsl
cmp
add
clc
repnz
nop
nop
jae
pusha
add
add
or
add
add
repnz
nop
nop
jae
jp
jne
add
push
faddl
mov
cmc
mov
clc
repnz
nop
nop
jae
add
add
add
add
jne
dec
sub
push
push
mov
xchg
ret
add
fdiv
add
add
add
add
cmpsl
popa
nop
push
mov
leave
nop
jmp
dec
dec
jl
xor
add
xchg
add
pop
clc
repnz
nop
nop
jae
add
jnp
mov
add
ss
add
repnz
nop
nop
jae
fadds
add
mov
push
mov
xchg
ret
dec
iret
add
sbb
jl
add
in
fsubr
dec
nop
push
mov
leave
nop
jmp
add
add
faddl
add
add
add
sbb
dec
push
mov
xchg
ret
add
cwtl
add
cmp
add
cwtl
in
pusha
add
add
push
mov
push
mov
xchg
ret
movb
movsl
add
cmp
xor
add
cmp
lret
mov
nop
push
mov
leave
nop
jmp
in
add
pusha
cmp
pop
xor
push
mov
xchg
ret
jl
add
push
add
add
stos
add
mov
xchg
ret
add
or
add
xor
jns
testl
cmpl
jne
lret
jp
add
shl
movzwl
clc
repnz
nop
nop
jae
iret
add
jnp
lcall
js
push
sbb
clc
repnz
nop
nop
jae
movsl
add
jl
jnp
sbb
jge
call
inc
add
aam
add
add
jnp
mov
clc
repnz
nop
nop
jae
dec
pusha
sub
movsl
aam
add
xor
xchg
cmp
mov
nop
push
mov
leave
nop
jmp
iret
lcall
add
push
clc
repnz
nop
nop
jae
add
xchg
cmp
mov
xor
push
mov
xchg
ret
add
add
jl
push
nop
push
mov
leave
nop
jmp
leave
lods
add
add
mov
shll
cld
nop
nop
jae
dec
pusha
aam
add
add
add
lds
jbe
add
add
mov
jns,pn
mov
shrb
push
mov
leave
nop
jmp
add
loop
leave
push
jl
cs
mov
pushf
sub
add
repnz
nop
nop
jae
add
dec
mov
add
add
addl
add
sbb
inc
add
or
mov
push
mov
xchg
ret
jns
jnp
add
mov
add
add
leave
sub
repnz
nop
nop
jae
mov
add
mov
cmp
iret
add
push
mov
xchg
ret
lock
insl
adc
fadds
cmp
out
pop
inc
add
xor
or
add
jne
dec
add
leave
xor
push
mov
xchg
ret
push
sub
lret
add
add
add
adc
add
clc
repnz
nop
nop
jae
add
add
add
push
add
push
lods
cmc
pusha
push
mov
xchg
ret
xor
jnp
mov
add
mov
nop
push
mov
leave
nop
jmp
dec
mov
dec
pop
add
test
fmul
sahf
cmpsl
mov
clc
repnz
nop
nop
jae
add
add
add
mov
clc
repnz
nop
nop
jae
add
sbb
push
inc
loopne
xchg
clc
repnz
nop
nop
jae
add
dec
add
xor
mov
xchg
ret
movsl
push
in
dec
clc
add
cmp
add
pop
pop
push
nop
push
mov
leave
nop
jmp
lret
add
add
repnz
nop
nop
jae
push
add
cwtl
in
insl
mov
icebp
push
clc
repnz
nop
nop
jae
add
movsl
in
xor
jl
add
add
add
add
mov
cld
nop
nop
jae
jnp
mov
sbb
mov
add
ja
dec
or
sbbb
cmpsb
add
add
jmp
movsb
clc
repnz
nop
nop
jae
dec
movb
add
in
leave
mov
clc
repnz
nop
nop
jae
sbb
xor
clc
repnz
nop
nop
jae
mov
jne
add
or
lock
mov
push
push
mov
xchg
ret
or
add
add
add
add
xor
call
nop
nop
jae
add
add
add
jns
jl
fimuls
lea
nop
push
mov
leave
nop
jmp
in
clc
add
xor
mov
add
add
add
push
clc
repnz
nop
nop
jae
jnp
add
jl
insl
dec
or
mov
add
push
mov
xchg
ret
add
sbb
add
mov
add
add
aaa
nop
push
mov
leave
nop
jmp
sbb
add
iret
add
or
mov
in
leave
nop
jmp
add
inc
add
jp
lcall
xchg
inc
add
jne
add
sub
mov
mov
cmp
push
mov
xchg
ret
add
jns
add
sbb
leave
mov
push
mov
xchg
ret
add
sbb
fsub
xor
in
testb
cs
clc
repnz
nop
nop
jae
dec
xor
add
cmp
repnz
nop
nop
jae
mov
add
add
pop
add
mov
add
clc
repnz
nop
nop
jae
movsl
clc
dec
or
jne
sub
cwtl
mov
cld
nop
nop
jae
sbb
add
add
add
iret
mov
add
cld
nop
nop
jae
add
add
cwtl
add
add
adc
mov
add
mov
clc
repnz
nop
nop
jae
add
add
add
add
add
xchg
ficomps
das
push
push
mov
xchg
ret
in
in
add
add
add
adc
cmp
add
lods
push
or
push
xor
iret
add
mov
clc
repnz
nop
nop
jae
cwtl
add
or
sub
xchg
mov
cld
nop
nop
jae
add
loop
add
cmp
add
sti
lea
nop
push
mov
leave
nop
jmp
add
xchg
add
add
lcall
repnz
nop
nop
jae
add
add
add
mov
nop
push
mov
leave
nop
jmp
add
ror
add
add
add
xor
mov
pop
inc
add
add
add
add
add
add
add
xchg
test
repnz
nop
nop
jae
lcall
adc
mov
leave
nop
jmp
add
jl
mov
add
test
push
mov
xchg
ret
add
dec
sbb
gs
push
mov
xchg
ret
add
cmp
add
dec
mov
push
mov
add
sbb
add
add
inc
std
mov
aam
loope
cmp
and
add
add
pop
inc
add
add
add
push
push
add
add
mov
clc
repnz
nop
nop
jae
add
add
lods
add
loop
in
xchg
clc
repnz
nop
nop
jae
pop
xchg
add
add
sbb
fdivr
je
pop
clc
repnz
nop
nop
jae
add
jl
add
xor
mov
clc
repnz
nop
nop
jae
movsl
jp
dec
add
cwtl
sbb
mov
add
mov
sub
leave
add
sbb
push
xor
nop
nop
jae
sbb
jp
dec
sbb
add
add
in
add
clc
repnz
nop
nop
jae
dec
or
jl
jl
push
cwtl
add
mov
sub
mov
xchg
ret
add
movb
or
add
adc
add
lss
nop
push
mov
leave
nop
jmp
jl
add
clc
in
xchg
and
nop
nop
jae
add
cwtl
add
add
sbb
es
add
nop
push
mov
leave
nop
jmp
sarl
add
in
jle
fwait
push
mov
xchg
ret
fadds
add
jns
add
add
add
add
popl
clc
repnz
nop
nop
jae
add
sbb
add
lock
and
cmp
mov
xchg
ret
add
clc
jl
sbb
or
lret
add
cld
nop
nop
jae
add
lods
or
add
add
inc
call
nop
jae
add
jnp
adc
add
call
nop
jae
add
sub
push
add
movzwl
clc
repnz
nop
nop
jae
leave
add
sbb
pop
sub
pusha
mov
push
mov
clc
repnz
nop
nop
jae
movb
dec
dec
loop
add
add
clc
repnz
nop
nop
jae
faddl
add
add
clc
shrl
nop
jae
add
fadds
add
add
add
dec
pop
push
mov
xchg
ret
lock
mov
add
dec
mov
nop
push
mov
leave
nop
jmp
add
add
add
in
lret
fld1
push
mov
xchg
ret
add
fsubrl
or
add
sbb
push
mov
xchg
ret
cs
cwtl
or
add
jne
add
adc
push
mov
xchg
ret
jp
add
in
cwtl
jnp
add
int3
or
repnz
nop
nop
jae
jne
lcall
pop
fcom
repnz
add
clc
repnz
nop
nop
jae
add
fsubrl
mov
bound
mov
xchg
ret
add
xor
add
add
or
push
mov
leave
nop
jmp
add
add
sbb
mov
mov
clc
repnz
nop
nop
jae
xchg
fmuls
lods
push
add
dec
push
clc
repnz
nop
nop
jae
test
clc
push
mov
add
aam
jl
and
clc
repnz
nop
nop
jae
push
xchg
faddl
sbb
sbb
xchg
lea
clc
repnz
nop
nop
jae
lret
add
add
jns
add
add
add
clc
repnz
nop
nop
jae
xor
push
add
add
test
push
mov
xchg
ret
add
add
or
loop
popa
and
clc
repnz
nop
nop
jae
add
add
add
add
add
add
inc
lea
xchg
ret
add
cwtl
add
add
or
push
add
ja
nop
push
mov
leave
nop
jmp
add
xchg
add
mov
dec
cmp
push
mov
leave
nop
jmp
add
in
cwtl
sub
push
xor
push
clc
repnz
nop
nop
jae
dec
faddl
sbb
add
iret
push
std
jne
clc
repnz
nop
nop
jae
add
add
repnz
nop
nop
jae
add
lret
cwtl
add
cld
nop
nop
jae
or
mov
add
add
push
mov
xchg
ret
add
insl
sbb
lcall
add
clc
repnz
nop
nop
jae
add
fdivrl
add
cmp
pusha
add
add
aas
pop
nop
push
mov
leave
nop
jmp
leave
or
add
add
leave
iret
dec
or
clc
repnz
nop
nop
jae
mov
test
sbb
add
push
clc
repnz
nop
nop
jae
sub
or
mov
sub
xor
clc
repnz
nop
nop
jae
add
sbb
add
add
mov
nop
push
mov
leave
nop
jmp
sbb
loop
add
add
sbb
dec
mov
push
mov
nop
push
mov
leave
nop
jmp
mov
roll
add
roll
cmpsb
dec
push
dec
mov
jge
clc
repnz
nop
nop
jae
lock
add
jl
add
adc
inc
stc
mov
clc
repnz
nop
nop
jae
inc
sub
add
add
in
movb
mov
push
sub
clc
repnz
nop
nop
jae
rcrl
jne
add
add
mov
add
add
repnz
nop
nop
jae
add
add
xchg
add
add
add
movsb
movsl
xor
push
mov
xchg
ret
movsl
add
insl
add
lcall
cld
nop
nop
jae
faddl
clc
add
dec
insl
cmp
or
addr16
clc
repnz
nop
nop
jae
sub
jne
add
xor
or
add
add
call
repnz
nop
nop
jae
add
adc
xchg
popa
clc
repnz
nop
nop
jae
mov
mov
add
push
mov
std
jne
clc
repnz
nop
nop
jae
add
add
add
repnz
nop
nop
jae
add
mov
jns
add
js
inc
add
in
jns
inc
add
int3
sub
add
add
xchg
push
nop
push
mov
leave
nop
jmp
mov
add
add
jns
pop
mov
test
and
cld
nop
nop
jae
clc
movsl
add
lods
add
fistpl
clc
repnz
nop
nop
jae
cmp
dec
movsl
add
lret
jne
push
push
mov
xchg
ret
add
jns
add
add
add
mov
sbb
lods
push
mov
xchg
ret
add
add
add
cwtl
push
lock
sahf
mov
add
add
add
inc
lret
mov
push
jne
lock
push
clc
repnz
nop
nop
jae
leave
leave
add
add
dec
add
jne
xchg
push
mov
xchg
ret
dec
adc
mov
add
lods
add
sub
add
add
leave
clc
repnz
nop
nop
jae
cwtl
add
dec
add
test
add
jp
xchg
clc
repnz
nop
nop
jae
add
add
mov
mov
mov
xchg
ret
lods
add
add
add
add
add
add
add
push
mov
leave
nop
jmp
in
add
add
add
dec
lock
mov
nop
nop
jae
add
cwtl
test
jnp
or
push
mov
add
add
xor
add
rclb
jns
loope
add
push
ror
clc
repnz
nop
nop
jae
cwtl
jns
add
fdivrl
push
mov
leave
nop
jmp
lcall
add
jl
loop
in
dec
mov
mov
clc
repnz
nop
nop
jae
add
xor
mov
push
clc
repnz
nop
nop
jae
add
add
fadds
add
loope
loop
push
mov
leave
nop
jmp
mov
sbb
mov
add
add
push
mov
xchg
ret
push
push
sbb
add
add
in
add
xchg
mov
push
mov
xchg
ret
jns
add
add
jns
mov
jno
les
mov
xchg
ret
in
xchg
add
add
add
push
cmp
add
inc
into
push
xchg
clc
sbb
push
je
call
clc
repnz
nop
nop
jae
add
jnp
sti
mov
push
mov
xchg
ret
or
inc
cwtl
add
dec
mov
inc
shrb
mov
xchg
ret
add
or
add
add
sub
cld
nop
nop
jae
add
sub
jne
jg
adc
ret
xchg
xchg
ret
cwtl
jl
push
add
mov
add
or
cmp
repnz
nop
nop
jae
xchg
add
leave
add
imul
jae
movsl
mov
iret
jne
add
add
add
add
add
cmp
or
nop
jmp
mov
add
push
lock
enter
pushl
clc
repnz
nop
nop
jae
add
clc
or
sbb
add
fsubrl
fistpl
clc
repnz
nop
nop
jae
add
lcall
add
in
leave
nop
jmp
add
add
add
in
dec
imul
nop
jae
add
push
pop
test
mov
repnz
nop
nop
jae
add
xor
in
mov
dec
lock
cld
nop
nop
jae
dec
in
add
mov
and
mov
nop
nop
jae
add
add
dec
lret
sbb
lret
jno
clc
repnz
nop
nop
jae
xor
test
xor
lds
stc
nop
push
mov
leave
nop
jmp
add
add
inc
add
add
cmp
in
push
add
pop
xchg
mov
mov
dec
add
xor
clc
repnz
nop
nop
jae
add
lret
add
jl
test
add
or
add
add
or
add
jnp
leave
adc
add
add
mov
clc
repnz
nop
nop
jae
aam
movsl
add
lock
and
popa
jno
add
dec
cmp
add
in
add
push
mov
xchg
ret
add
push
xor
pop
xchg
push
sbb
mov
pushl
clc
repnz
nop
nop
jae
mov
dec
lret
jne
or
add
add
cld
nop
nop
jae
add
add
or
or
push
nop
push
mov
leave
nop
jmp
add
jp
lods
add
jnp
add
aam
int3
cs
xor
clc
repnz
nop
nop
jae
add
add
add
add
nop
push
mov
leave
nop
jmp
mov
mov
add
add
add
mov
mov
repnz
nop
nop
jae
add
add
push
mov
clc
repnz
nop
nop
jae
add
add
add
add
push
mov
xchg
ret
leave
lcall
add
or
iret
outsb
inc
add
or
in
add
add
cwtl
fwait
push
mov
mov
hlt
lret
jo
std
add
in
add
roll
repnz
nop
nop
jae
jl
pop
add
pop
fsubp
cld
inc
jmp
add
cmp
sbb
add
add
push
mov
xchg
ret
loop
in
add
sbb
movsl
pop
inc
call
nop
push
mov
leave
nop
jmp
add
add
dec
add
lds
cld
nop
nop
jae
test
add
add
fld1
clc
repnz
nop
nop
jae
add
pop
iret
xchg
add
sub
adc
sti
add
add
nop
push
mov
leave
nop
jmp
add
add
in
stos
xor
push
mov
xchg
ret
add
add
sub
add
shr
clc
repnz
nop
nop
jae
add
add
adc
shl
add
clc
repnz
nop
nop
jae
fmull
jns
jnp
lods
clc
iret
add
test
shr
push
mov
xchg
ret
add
movb
xor
push
mov
xchg
ret
add
test
dec
xor
add
cs
add
push
mov
xchg
ret
push
in
faddl
clc
xor
sbb
inc
add
dec
jns
or
add
add
add
add
push
mov
xchg
ret
add
mov
jnp
add
mov
adc
repnz
nop
nop
jae
add
add
mov
add
test
clc
repnz
nop
nop
jae
add
dec
leave
sbb
mov
rcl
outsl
call
nop
push
mov
leave
nop
jmp
in
sbb
sbb
sbb
jne
je
clc
repnz
nop
nop
jae
add
cwtl
add
or
and
repnz
nop
nop
jae
add
pop
xor
in
add
roll
mov
xchg
ret
mov
add
add
add
add
sub
in
leave
nop
jmp
sbb
or
add
add
clc
repnz
nop
nop
jae
in
iret
add
clc
faddl
add
add
ret
call
nop
jae
pusha
xor
add
cwtl
add
aam
pop
add
nop
push
mov
leave
nop
jmp
in
fmull
mov
add
jne
nop
push
mov
leave
nop
jmp
add
jl
dec
jne
inc
mov
clc
repnz
nop
nop
jae
cwtl
push
clc
add
jp
lods
add
nop
nop
jae
xchg
mov
aam
cwtl
add
lods
jmp
xor
sbb
aam
lock
add
iret
or
add
push
push
mov
xchg
ret
add
add
cmp
lods
add
add
mov
push
mov
xchg
ret
xor
xchg
add
in
add
mov
cmp
add
sbbb
les
add
or
push
mov
add
nop
jmp
dec
add
lcall
jne
nop
push
mov
leave
nop
jmp
mov
add
ss
clc
repnz
nop
nop
jae
xor
add
dec
adc
pop
pusha
nop
push
mov
leave
nop
jmp
dec
add
mov
add
add
add
idiv
repnz
nop
nop
jae
dec
add
add
add
add
push
mov
push
push
mov
xchg
ret
push
add
jl
add
mov
or
dec
shr
clc
repnz
nop
nop
jae
iret
add
cwtl
add
sbb
mov
clc
repnz
nop
nop
jae
jp
movb
xchg
sti
mov
clc
repnz
nop
nop
jae
in
push
or
add
push
push
mov
xchg
ret
sub
push
dec
movb
sub
add
pushf
xor
lea
clc
repnz
nop
nop
jae
fsubrs
add
add
mov
mov
fld1
clc
repnz
nop
nop
jae
lods
lcall
insl
add
ljmp
nop
nop
jae
aam
roll
cmp
add
push
scas
push
pop
push
mov
xchg
ret
add
add
fcoms
in
add
mov
xchg
ret
add
add
xchg
dec
lods
add
mov
or
add
add
lret
faddl
add
insl
add
add
pop
inc
add
add
loop
add
mov
clc
repnz
nop
nop
jae
add
add
insl
jns
lret
loop
mov
sub
add
add
js
add
fcomps
cwtl
add
add
add
mov
clc
repnz
nop
nop
jae
add
add
faddl
mov
fwait
push
mov
xchg
ret
in
add
fadds
add
arpl
nop
nop
jae
add
xor
xor
clc
jl
add
cmp
nop
push
mov
leave
nop
jmp
jp
dec
add
cmp
add
nop
nop
jae
mov
mov
add
dec
lods
lret
movnti
add
fmul
jne
add
add
cmp
add
add
add
add
pop
inc
add
add
or
xor
repnz
nop
nop
jae
in
add
add
push
clc
repnz
nop
nop
jae
add
lods
mov
jp
mov
xchg
lcall
cmp
add
add
or
fistpl
clc
repnz
nop
nop
jae
add
push
sarl
or
mov
xchg
ret
mov
add
add
add
mov
xchg
ret
add
add
add
add
push
sahf
xchg
push
clc
repnz
nop
nop
jae
add
add
lcall
add
cld
nop
nop
jae
add
add
or
add
cmp
repnz
nop
nop
jae
lock
sbb
lret
add
outsl
add
clc
repnz
nop
nop
jae
lret
add
cmp
add
mov
jb
sub
clc
repnz
nop
nop
jae
add
add
add
add
xchg
jne
test
pop
add
clc
repnz
nop
nop
jae
faddl
add
add
clc
repnz
nop
nop
jae
inc
dec
add
xor
add
icebp
inc
dec
es
repnz
nop
nop
jae
add
add
dec
xchg
push
cmpsb
inc
add
nop
push
mov
leave
nop
jmp
sbb
add
in
inc
or
cld
nop
nop
jae
add
lret
sbb
add
add
add
add
lcall
in
leave
nop
jmp
dec
sbb
add
add
dec
in
or
add
add
cmp
add
sbb
add
push
cmp
xor
sub
mov
push
push
mov
xchg
ret
add
mov
jl
sub
add
inc
add
insb
mov
cmc
pop
push
mov
xchg
ret
lcall
add
mov
cmpsb
les
add
clc
repnz
nop
nop
jae
lcall
add
add
pop
pop
ja
clc
repnz
nop
nop
jae
adc
jne
lcall
repnz
nop
nop
jae
iret
jne
jl
add
add
sub
clc
repnz
nop
nop
jae
add
clc
clc
insl
add
test
push
mov
leave
nop
jmp
add
add
in
insl
mov
push
clc
repnz
nop
nop
jae
inc
jne
inc
or
jne
add
and
push
mov
leave
nop
jmp
xor
in
add
dec
push
mov
mov
in
mov
cld
nop
nop
jae
jl
push
test
add
add
add
inc
mov
sub
clc
repnz
nop
nop
jae
add
add
dec
mov
xor
repnz
nop
nop
jae
dec
jnp
jne
cmp
loop
add
add
out
clc
repnz
nop
nop
jae
jp
add
in
pusha
lea
repnz
nop
nop
jae
add
add
iret
add
jns
add
add
nop
nop
jae
add
add
inc
jne,pn
add
int
clc
repnz
nop
nop
jae
roll
iret
dec
mov
add
dec
cmpsl
xor
clc
repnz
nop
nop
jae
push
add
lcall
add
and
add
add
loope
aas
add
imul
add
movsl
add
sbb
add
fs
cmpsl
push
clc
repnz
nop
nop
jae
pop
add
push
dec
lock
dec
add
add
add
jae
outsb
and
repnz
nop
nop
jae
in
add
add
les
add
add
repnz
nop
nop
jae
add
add
add
jns
add
nop
push
mov
leave
nop
jmp
add
push
add
add
add
add
repnz
nop
nop
jae
sub
in
add
test
data16
push
nop
push
mov
leave
nop
jmp
add
add
mov
mov
shr
xor
clc
repnz
nop
nop
jae
test
or
add
add
clc
repnz
nop
nop
jae
cwtl
iret
lret
fsubrl
xor
pop
add
data16
clc
repnz
nop
nop
jae
add
or
in
add
pop
jae
repnz
nop
nop
jae
mov
aam
mov
mov
nop
push
mov
leave
nop
jmp
add
add
in
add
inc
mov
add
mov
leave
nop
jmp
add
add
mov
add
clc
repnz
nop
nop
jae
add
cwtl
jne
mov
shl
nop
push
mov
leave
nop
jmp
in
add
add
cld
cwtl
cwtl
xchg
fwait
push
mov
xchg
ret
add
add
lock
add
add
add
lock
popa
clc
repnz
nop
nop
jae
add
cmp
mov
push
mov
xchg
ret
add
or
add
add
add
xor
push
push
mov
xchg
ret
add
mov
add
adc
cmp
add
call
clc
repnz
nop
nop
jae
cwtl
add
or
xor
adc
dec
mov
clc
repnz
nop
nop
jae
add
pop
clc
roll
add
add
push
mov
xchg
ret
clc
add
xor
add
add
add
or
push
nop
push
mov
leave
nop
jmp
mov
iret
add
add
adc
xor
clc
repnz
nop
nop
jae
jnp
dec
dec
lret
add
mov
jae
repnz
nop
nop
jae
sub
add
add
add
add
add
nop
push
mov
leave
nop
jmp
add
leave
add
enter
nop
nop
jae
add
add
add
or
leave
add
rclb
add
fadds
xor
add
cwtl
add
add
push
mov
xchg
ret
xor
add
loop
cmp
aad
or
nop
jmp
add
add
add
add
mov
clc
repnz
nop
nop
jae
add
add
lods
add
repnz
nop
nop
jae
add
faddl
add
in
cmp
add
dec
roll
nop
nop
jae
add
shl
add
loop
jne
or
clc
repnz
nop
nop
jae
add
in
add
add
or
add
cld
nop
nop
jae
add
pusha
jne
add
mov
cmp
nop
jmp
add
jl
mov
xlat
mov
clc
repnz
nop
nop
jae
mov
sbb
add
add
xor
repnz
nop
nop
jae
in
pusha
add
add
add
cwtl
inc
add
pop
push
in
add
add
jp
fmul
in
clc
addr16
clc
repnz
nop
nop
jae
mov
add
je
clc
repnz
nop
nop
jae
or
leave
insl
or
pop
add
add
nop
jmp
add
add
lods
loop
add
adc
cld
nop
nop
jae
jl
add
add
add
fistpl
nop
push
mov
leave
nop
jmp
add
sbb
aam
xor
loop
inc
add
cwtl
faddl
or
or
add
jl
xor
in
xchg
add
mov
fildl
cld
scas
pop
test
mov
leave
nop
jmp
or
clc
jl
loop
fdivrl
add
clc
repnz
nop
nop
jae
add
add
push
dec
cmp
add
mov
je
clc
repnz
nop
nop
jae
dec
add
mov
add
lahf
shr
nop
push
mov
leave
nop
jmp
jnp
add
lret
mov
pop
inc
add
faddl
add
jl
add
stc
push
push
mov
xchg
ret
cmp
add
push
add
add
in
sahf
cmpl
nop
push
mov
leave
nop
jmp
add
add
cwtl
jne
add
movsl
sbb
repnz
nop
nop
jae
add
insl
push
pop
mov
jp
push
jmp
incl
add
jp
add
jns
lods
leave
leave
add
jecxz
scas
clc
repnz
nop
nop
jae
add
add
add
add
mov
sar
repnz
nop
nop
jae
cwtl
add
add
sbb
push
iret
leave
add
clc
repnz
nop
nop
jae
in
or
roll
cmp
call
cld
nop
nop
jae
dec
or
cwtl
add
add
add
sbb
and
repnz
nop
nop
jae
add
xor
xor
mov
jne
push
and
add
repnz
nop
nop
jae
in
inc
fdivl
dec
add
and
and
clc
repnz
nop
nop
jae
add
sbb
add
cmp
add
clc
repnz
nop
nop
jae
add
cwtl
dec
in
xor
add
nop
push
mov
leave
nop
jmp
mov
dec
add
mov
and
clc
repnz
nop
nop
jae
fcoml
fadds
fsubrl
pop
sbbl
add
add
xor
add
mov
fcoms
ret
push
mov
xchg
ret
jns
jne
add
add
inc
mov
jmp
nop
jae
add
add
add
clc
loopne
jmp
add
leave
add
add
insl
clc
loop
add
sbb
fcomps
out
adc
clc
repnz
nop
nop
jae
add
add
add
xor
enter
push
clc
repnz
nop
nop
jae
add
add
add
mov
or
add
repnz
nop
nop
jae
add
add
push
mov
xchg
ret
iret
xchg
leave
ror
pop
add
leave
push
sbb
jae
ret
repnz
nop
nop
jae
push
add
inc
jp
in
add
push
lahf
dec
push
mov
xchg
ret
jp
add
lods
jp
push
add
insb
add
add
testl
sbbl
add
or
push
add
aam
pop
movswl
jmp
add
add
sbb
sbb
add
jl
lahf
add
nop
push
mov
leave
nop
jmp
add
in
insl
rcrl
push
add
clc
repnz
nop
nop
jae
insl
cwtl
add
add
mov
jne
gs
clc
repnz
nop
nop
jae
add
roll
mov
add
cmp
dec
xor
mov
clc
repnz
nop
nop
jae
mov
dec
cs
dec
shl
clc
repnz
nop
nop
jae
add
add
rcrl
clc
clc
repnz
nop
nop
jae
lret
add
add
pop
add
add
lods
lea
nop
push
mov
leave
nop
jmp
movsl
add
clc
jne
scas
jmp
or
add
add
add
lret
add
leave
or
ret
test
nop
push
mov
leave
nop
jmp
lcall
add
aad
leave
nop
push
mov
leave
nop
jmp
lock
add
mov
movsl
add
clc
repnz
nop
nop
jae
add
jns
cwtl
dec
add
cwtl
cmp
xchg
call
nop
jmp
push
add
scas
xor
clc
repnz
nop
nop
jae
or
add
imul
push
std
call
nop
jmp
mov
mov
xor
nop
jmp
test
or
jnp
inc
mov
clc
repnz
nop
nop
jae
mov
add
add
add
xchg
fistpl
push
mov
xchg
ret
add
aam
lock
mov
add
push
mov
xchg
ret
push
xor
add
xlat
push
clc
repnz
nop
nop
jae
add
cwtl
loop
roll
leave
or
in
ret
or
jbe
jecxz
cmp
add
test
repnz
nop
nop
jae
dec
add
loop
add
add
add
lcall
inc
add
add
add
rclb
int3
pop
inc
add
aam
add
dec
add
lock
cwtl
dec
push
clc
repnz
nop
nop
jae
rorl
lock
iret
movsl
add
nop
push
mov
leave
nop
jmp
add
add
cmp
add
add
add
add
add
add
adc
mov
push
mov
xchg
ret
fdivs
add
mov
imul
pop
outsl
inc
add
add
or
add
add
sub
arpl
push
mov
leave
nop
jmp
add
dec
insl
add
data16
nop
push
mov
leave
nop
jmp
or
in
shll
dec
cwtl
add
in
int3
in
fld1
clc
repnz
nop
nop
jae
add
add
add
pop
sub
clc
repnz
nop
nop
jae
aam
add
lods
add
push
jl
xchg
mov
push
mov
xchg
ret
in
in
cwtl
cwtl
add
add
mov
repnz
nop
nop
jae
in
add
add
add
and
clc
repnz
nop
nop
jae
add
add
add
jne
stos
icebp
clc
repnz
nop
nop
jae
jl
inc
push
jne
dec
in
imul
add
aam
sbb
add
inc
rorl
add
add
stos
push
inc
add
add
add
add
mov
push
clc
repnz
nop
nop
jae
add
add
add
add
add
add
cmc
mov
clc
repnz
nop
nop
jae
movsl
cmp
add
add
ret
rclb
nop
jmp
fdivl
xor
add
jl
add
fiadds
add
add
mov
nop
nop
jae
dec
faddl
lods
add
add
lods
add
test
int
inc
add
mov
or
shrl
repnz
nop
nop
jae
cwtl
add
add
xor
push
nop
push
mov
leave
nop
jmp
push
add
lock
add
add
and
cld
nop
nop
jae
mov
dec
jnp
add
ret
imul
nop
nop
jae
add
add
decl
nop
nop
jae
add
jns
add
adc
add
jne
nop
push
mov
leave
nop
jmp
loop
add
cwtl
add
xor
jne
test
clc
repnz
nop
nop
jae
in
add
jl
add
nop
push
mov
leave
nop
jmp
dec
sub
jns
test
add
and
nop
jmp
push
add
mov
lea
mov
xchg
ret
in
add
add
add
jl
not
clc
repnz
nop
nop
jae
add
cmp
add
xor
cmp
sbb
add
test
xor
leave
dec
mov
sbb
mov
xchg
ret
dec
add
mov
add
add
jnp
push
mov
xchg
ret
add
in
sbb
add
jp
jne
lods
in
mov
push
mov
xchg
ret
mov
sbb
cwtl
add
add
clc
repnz
nop
nop
jae
add
add
clc
call
nop
jmp
add
add
loop
dec
add
add
add
repnz
nop
nop
jae
roll
in
xor
push
mov
xchg
ret
push
dec
cmp
in
cmp
insl
mov
lods
test
mov
leave
nop
jmp
leave
add
lock
or
lret
add
clc
repnz
nop
nop
jae
test
sbb
add
movsb
clc
repnz
nop
nop
jae
add
add
add
mov
mov
mov
nop
push
mov
leave
nop
jmp
aam
add
sub
clc
repnz
nop
nop
jae
fadds
jp
add
mov
add
leave
add
cld
clc
repnz
nop
nop
jae
add
faddl
lret
add
sbb
add
add
cld
nop
nop
jae
or
add
add
sbb
in
mov
clc
repnz
nop
nop
jae
jns
add
fsub
add
clc
repnz
nop
nop
jae
adc
add
add
mov
mov
mov
leave
nop
jmp
or
test
add
lcall
add
add
xchg
add
add
repnz
nop
nop
jae
add
dec
add
mov
sar
cld
nop
nop
jae
leave
jl
add
in
lcall
inc
and
clc
repnz
nop
nop
jae
in
jl
roll
jne
jne
add
inc
cmp
repnz
nop
nop
jae
add
mov
add
add
adcb
cld
nop
nop
jae
add
add
sbb
lcall
inc
add
aam
dec
add
add
test
add
push
lea
nop
jae
add
dec
dec
add
push
lcall
push
movsb
lock
clc
repnz
nop
nop
jae
add
add
cmpsb
push
push
push
mov
xchg
ret
lock
add
insl
add
push
add
jle
clc
repnz
nop
nop
jae
pop
loop
lcall
popa
clc
repnz
nop
nop
jae
in
add
in
pop
pusha
fcoml
dec
add
shlb
cmp
cld
nop
nop
jae
jne
jl
jp
in
mov
cld
nop
nop
jae
add
add
or
add
add
pop
pop
inc
add
aam
add
sub
dec
add
add
dec
clc
repnz
nop
nop
jae
add
or
jne
add
test
call
clc
repnz
nop
nop
jae
test
add
add
or
sub
add
clc
repnz
nop
nop
jae
or
add
sbb
lods
add
add
dec
fistpl
push
mov
xchg
ret
add
jns
pusha
sbb
add
add
stc
dec
nop
push
mov
leave
nop
jmp
add
add
cwtl
movsl
add
push
pop
clc
repnz
nop
nop
jae
add
jns
add
jns
sti
mov
clc
repnz
nop
nop
jae
mov
add
lods
test
adc
add
xor
clc
repnz
nop
nop
jae
add
test
cmp
add
sbb
push
mov
xchg
ret
leave
xor
mov
or
or
in
leave
nop
jmp
xor
xor
add
xor
xor
repnz
nop
nop
jae
add
jns
cmp
je
clc
repnz
nop
nop
jae
add
jne
add
imul
ret
incl
add
mov
lret
mov
faddl
xchg
add
add
test
nop
nop
jae
add
jl
push
movsl
add
cwtl
sub
pusha
add
add
mov
inc
and
clc
repnz
nop
nop
jae
add
add
pop
nop
push
mov
leave
nop
jmp
add
add
iret
xor
lret
add
clc
repnz
nop
nop
jae
add
mov
cmp
add
repz
clc
repnz
nop
nop
jae
add
add
cwtl
add
add
repnz
nop
nop
jae
cmp
add
lret
push
fldcw
cli
clc
repnz
nop
nop
jae
add
push
sbb
push
cmp
fwait
clc
repnz
nop
nop
jae
lock
add
sbb
nop
push
mov
leave
nop
jmp
cwtl
cmp
jnp
add
jns
aaa
pop
push
mov
xchg
ret
jne
sbb
jp
aam
pusha
sub
adc
cs
add
nop
push
mov
leave
nop
jmp
test
jns
jne
roll
add
punpckhbw
push
mov
leave
nop
jmp
clc
mov
push
dec
adc
cwtl
add
clc
repnz
nop
nop
jae
lcall
add
xor
sbb
add
mov
lcall
nop
jae
add
add
add
add
add
in
imul
clc
repnz
nop
nop
jae
add
add
jl
add
mov
mov
leave
nop
jmp
add
add
add
sbb
inc
dec
add
clc
repnz
nop
nop
jae
add
add
inc
loopne
repnz
nop
nop
jae
pop
add
in
movsl
cwtl
add
ret
fld1
nop
push
mov
leave
nop
jmp
lods
pusha
add
add
add
xchg
dec
std
pop
push
mov
xchg
ret
in
add
cmp
add
sbb
xchg
dec
incb
mov
nop
push
mov
leave
nop
jmp
add
add
add
add
aaa
push
mov
mov
add
shl
add
leave
add
add
ja
sbb
nop
push
mov
leave
nop
jmp
cmp
cwtl
add
add
clc
add
stc
pop
push
mov
xchg
ret
add
add
add
or
lock
gs
repnz
nop
nop
jae
aam
insl
insl
lcall
push
mov
leave
nop
jmp
add
add
add
add
mov
or
add
xchg
jmp
pop
cmc
das
add
mov
fnstcw
xchg
lods
push
mov
xchg
ret
add
in
lcall
add
or
jg
clc
repnz
nop
nop
jae
xor
mov
or
ret
clc
repnz
nop
nop
jae
add
add
mov
or
add
add
add
jbe
xor
nop
push
mov
leave
nop
jmp
add
push
push
movsl
add
add
add
mov
xor
nop
push
mov
leave
nop
jmp
add
add
add
add
fistpl
nop
push
mov
leave
nop
jmp
add
dec
pusha
add
add
push
push
mov
xchg
ret
xor
add
add
or
add
jb,pt
nop
push
mov
leave
nop
jmp
sub
sbb
jnp
push
cmp
add
jl
pop
shr
clc
repnz
nop
nop
jae
add
add
add
add
add
jge
sbb
clc
repnz
nop
nop
jae
jns
add
add
jne
adc
xorl
clc
repnz
nop
nop
jae
add
sbb
add
sub
adc
rcrb
leave
nop
jmp
add
adc
add
xchg
add
mov
push
mov
xchg
ret
add
lret
mov
add
add
clc
repnz
nop
nop
jae
push
movsl
adc
add
add
mov
jle
push
push
mov
xchg
ret
add
add
cmp
add
add
clc
repnz
nop
nop
jae
sbb
jns
dec
add
test
push
mov
leave
nop
jmp
add
in
jne
add
call
clc
repnz
nop
nop
jae
roll
add
add
add
clc
repnz
nop
nop
jae
mov
mov
add
lock
add
enter
movsb
lods
call
push
mov
xchg
ret
fadds
jne
add
jl
add
clc
nop
sahf
add
add
nop
jmp
in
sbb
add
sbb
pop
rep
clc
repnz
nop
nop
jae
loop
add
inc
add
add
xor
jbe
clc
repnz
nop
nop
jae
add
insl
dec
jl
lock
add
push
mov
xchg
ret
iret
add
cwtl
add
inc
add
insb
gs
repnz
nop
nop
jae
in
add
jmp
mov
leave
nop
jmp
fadds
aam
add
push
leave
inc
add
nop
push
mov
leave
nop
jmp
dec
sbb
add
xchg
dec
xor
clc
repnz
nop
nop
jae
mov
add
xor
push
or
pop
pop
clc
repnz
nop
nop
jae
add
add
movb
or
aam
mov
clc
repnz
nop
nop
jae
add
in
add
movsl
mov
pop
shlb
sar
jmp
lock
insl
xor
xor
add
lret
test
nop
push
mov
leave
nop
jmp
add
jl
sub
aam
add
mov
clc
repnz
nop
nop
jae
add
aam
push
clc
repnz
nop
nop
jae
add
or
mov
add
cld
nop
push
mov
leave
nop
jmp
mov
mov
add
add
fs
cltd
fistpl
clc
repnz
nop
nop
jae
add
add
add
mov
leave
jnp
add
clc
add
fadds
or
add
add
nop
nop
jae
add
in
in
or
add
add
xchg
clc
repnz
nop
nop
jae
xor
or
xor
add
clc
repnz
nop
nop
jae
add
add
mov
or
loop
add
repnz
nop
nop
jae
add
dec
add
sbb
pop
add
add
or
fistpl
clc
repnz
nop
nop
jae
cmp
mov
add
jne
add
clc
repnz
nop
nop
jae
add
add
push
in
xor
test
add
clc
repnz
nop
nop
jae
adc
add
add
sub
out
mov
clc
repnz
nop
nop
jae
add
cmp
movsl
fdivrl
mov
xchg
ret
add
cs
add
jnp
add
movsl
lea
repz
repnz
nop
nop
jae
inc
lock
jnp
add
mov
repnz
nop
nop
jae
add
add
leave
jne
xor
mov
push
xor
in
xchg
sti
mov
add
add
jge
mov
das
dec
mov
jmp
mov
and
jle
push
mov
xlat
lret
mov
xchg
fbstp
jbe
push
xchg
cmp
add
ljmp
push
cld
ret
mov
add
cmpsb
mov
fldenv
mov
dec
mov
add
add
xchg
jbe
cmp
stos
inc
nop
dec
je
xchg
sti
cmpsl
pop
jecxz
pop
sbb
nop
cmp
xchg
stos
popa
push
xor
add
pop
aad
jge
mov
sub
mov
lea
add
add
add
in
rcll
stos
arpl
mov
add
add
pop
mov
fadd
jge,pn
push
add
inc
mov
cmp
mov
mov
cmp
add
add
add
add
leave
ret
movsl
fwait
push
jle
jae
cli
andl
mov
jo
cwtl
aaa
out
mov
fiadds
add
add
adc
popa
hlt
push
cmp
in
xchg
lea
xlat
xorb
dec
repz
call
inc
cmpsb
test
sub
enter
lret
add
add
xor
stc
jmp
add
pop
xchg
test
mov
and
enter
or
add
lcall
add
lea
pop
aaa
pop
add
lret
leave
mov
outsl
repnz
cld
sub
add
add
cmp
lret
cmp
pushf
sub
add
add
movsb
push
add
push
addr16
cmp
mov
jg
cmpsl
mov
rorb
sub
aam
mov
and
stc
shll
dec
cmp
js
test
add
add
mov
and
add
add
cmp
and
add
add
sub
mov
mov
lahf
test
adc
mov
sbb
add
add
push
bound
movsb
sbb
enter
push
lds
jle
mov
dec
push
adc
sub
add
cwtl
popf
mov
divb
mov
mov
jmp
jb
cmp
loope
fbld
es
lret
clc
and
add
add
mov
shl
int3
push
dec
jbe
jbe
mov
aam
inc
mov
cmpsb
dec
mov
aaa
jmp
push
lcall
inc
xlat
adc
pop
push
mov
mov
inc
neg
pop
stc
popa
lret
dec
lock
loop
mov
scas
rorl
add
add
mov
test
and
dec
call
or
xchg
out
dec
fidivrs
sbb
add
add
jb
mov
sbb
push
nop
lea
cmovae
sbb
add
lret
ss
sub
add
add
aad
xchg
add
add
add
add
push
xor
sub
cmp
mov
sbb
cli
xlat
cmp
rcrb
push
jmp
dec
imul
mov
inc
aas
imul
repz
hlt
lahf
dec
loope
sub
lds
mov
js
cmp
ret
lods
cmp
add
add
scas
aad
sub
add
add
data16
mov
out
cmp
sub
mov
push
inc
test
insb
mov
and
or
add
mov
push
cmp
lahf
cbtw
jg
and
call
rclb
sbb
push
dec
dec
add
add
add
push
inc
jmp
push
pop
insb
add
add
mov
movsl
push
or
add
add
mov
or
aam
out
mov
loop
and
jge
push
pop
rorl
add
stos
sub
stos
jo
ja
std
into
mov
jb
das
push
sbb
add
add
add
add
add
mov
lea
push
sub
add
mov
aaa
jb
outsl
inc
mov
add
add
add
add
dec
ljmp
add
and
pop
aad
xchg
xor
mov
inc
push
js
mov
mov
dec
fsubrs
add
mov
or
add
add
add
hlt
clc
lods
lret
lea
push
xchg
ljmp
pushf
jae
aaa
xchg
mov
cmc
and
adc
add
add
push
adc
and
mov
pop
and
add
add
jbe
xor
mov
mov
ud0
lret
xor
sti
push
repz
adc
fwait
in
je
dec
push
mov
mov
add
mov
outsb
xchg
shll
jae
insl
in
sarb
add
cmc
icebp
pop
shlb
xlat
cmp
outsb
sub
add
add
jmp
lahf
cmp
mull
or
mov
mov
mov
or
jl
jl
mov
enter
pop
push
push
inc
add
add
pop
push
adc
fstl
sahf
sub
cwtl
outsb
inc
icebp
mov
sarl
xlat
pop
jmp
push
lods
mov
daa
movsl
sub
cmpsb
mov
xor
dec
into
adc
sub
add
add
add
cld
daa
ss
mov
mov
aaa
sahf
aad
sbb
cmp
xchg
ret
mov
arpl
outsb
pop
or
loop
loope
push
insl
mov
mov
xchg
cmp
pop
std
enter
lahf
add
add
add
pop
xor
and
push
push
scas
testl
call
mov
test
sbb
jnp
push
pop
push
pop
xor
add
push
cltd
loopne
add
add
add
xlat
xchg
movq
jecxz
push
mov
and
add
add
add
add
pop
in
xchg
or
pop
in
lods
inc
and
and
add
add
xchg
ljmp
sarb
add
add
sti
adc
ret
in
loope
popa
notb
xchg
xlat
sub
add
add
out
add
mov
dec
push
push
cmpsb
ja
add
pop
ljmp
lret
mov
sub
sub
fnstenv
sahf
add
add
add
gs
mov
mov
fisubl
loop
sub
add
add
mov
xchg
mov
pop
add
lret
fsubl
push
ds
stc
xchg
push
pop
pop
std
or
jo
aaa
movsb
sbb
rolb
pop
dec
cmp
inc
ljmp
add
add
adc
push
xor
fwait
ja
dec
mov
movsb
mov
xchg
mov
test
nop
cmp
mov
sub
add
add
dec
ds
addr16
aam
mov
jl
mov
cwtl
aad
mov
outsl
adc
add
add
arpl
mov
push
test
fwait
arpl
xor
and
add
add
mov
lahf
lods
pop
mov
sub
add
add
add
xchg
jecxz
rcr
mov
inc
bound
add
add
imul
bound
add
add
push
sub
imul
mov
inc
das
loopne
jge
xchg
and
push
mov
xor
sub
loop
inc
push
je
cmp
sbb
jle
mov
jbe
dec
mov
pop
cs
ficomps
addr16
lret
cli
or
in
pop
push
mov
jl
enter
inc
pop
pop
cwtl
mov
jae
lcall
push
mov
pop
hlt
mov
out
outsl
mov
mov
shlb
add
add
cmp
add
cld
pop
fstps
mov
ret
popf
mov
shlb
add
pop
es
clc
fbstp
pop
mov
lcall
fwait
push
pop
roll
mov
mov
scas
hlt
xor
lahf
mov
adc
add
add
and
add
jl
test
adc
test
fwait
ds
add
mov
es
stos
int
jmp
mov
fnstsw
dec
add
add
fbstp
inc
addl
mov
aam
es
negl
mov
cmp
cld
jecxz
je
and
pop
add
add
add
mov
ficomps
dec
mov
pop
jle
xchg
mov
sub
aad
inc
mov
fldl2t
ljmp
adc
jl
arpl
xchg
lret
lods
lock
sub
add
add
stc
jg
bound
push
jbe
mov
shlb
add
loopne
sbb
pushf
cmpl
or
aam
mov
rcr
mov
leave
rolb
add
add
mov
insl
cmc
pop
add
pop
jbe
mov
cmp
ret
call
add
aas
push
popf
clc
lock
scas
push
lret
cwtl
xchg
mov
mov
xchg
add
insb
mov
adc
std
jnp
mov
mov
in
xchg
xchg
imul
pop
push
andl
es
mov
pop
mov
adc
and
jmp
aas
adc
out
in
ljmp
push
repnz
mov
sbb
adc
adc
jge
adc
pop
mov
sbb
js
cmp
mov
ds
lods
mov
push
lcall
or
add
add
sbb
xorl
and
adc
add
sbb
pusha
add
add
bound
adc
add
in
pop
por
or
xor
sub
movsl
jns
gs
and
push
and
ret
pushf
mov
rep
out
insb
add
add
lcall
mov
mov
sub
xor
add
and
add
mov
add
imul
add
add
add
add
popa
add
shll
lock
dec
pop
cmp
or
sti
insb
mov
push
jmp
cmp
add
sbb
or
fmuls
add
add
or
push
push
fcompl
xchg
cmc
add
imul
add
mov
xchg
push
shl
rcl
dec
and
mov
sidtl
or
add
add
rcl
pop
jb
xor
mov
pop
push
lcall
mov
pop
clc
popa
add
sbb
add
add
aad
push
or
add
add
movsb
xchg
lds
faddl
xchg
sti
rcrl
je
dec
ret
add
add
in
movsb
mov
ds
inc
mov
push
in
in
add
add
mov
mov
jg
sub
rcrl
cld
insl
jmp
mov
xchg
mov
xlat
cmp
and
fs
mov
mov
sbb
popa
pop
mov
lret
and
mov
xor
mov
add
mov
js
mov
fsubrs
int
stos
mov
jge
mov
mov
movsl
jno
jmp
sbb
stc
fnsave
jge
and
call
clc
std
and
fcompl
mov
pop
push
inc
aas
or
add
add
inc
mov
inc
aas
ds
jp
hlt
mov
arpl
push
lock
lret
orb
bound
jb
filds
inc
mov
sbb
add
hlt
jl
dec
cli
mov
add
add
mov
shrl
add
add
cli
xchg
add
xchg
pop
sbb
call
daa
dec
mov
pop
mov
add
or
cltd
aad
dec
loop
lock
ds
push
iret
popf
pop
fs
loop
xor
adc
xor
rorb
add
add
imul
dec
out
cmp
add
add
imul
xchg
imul
pop
xchg
lock
push
mov
fwait
pusha
mov
repnz
sti
inc
add
add
mov
sub
or
jl
and
mov
add
add
and
xchg
sahf
and
add
add
lods
jno
shl
xor
pop
mov
ja
cmp
std
jp
xchg
fisttpll
pusha
mov
sub
lock
add
add
insb
add
add
fsub
jo
pop
xchg
std
std
mov
loop
fstl
fwait
push
jnp
add
add
cld
mov
stos
mov
add
add
outsl
dec
xor
add
pop
push
lods
sbb
adc
rep
iret
imul
add
sbb
add
rcl
sub
xchg
mov
aaa
add
add
add
inc
cmp
movsl
dec
lahf
or
push
push
icebp
xchg
push
out
out
add
xor
test
arpl
mov
push
sub
add
add
stc
xchg
add
add
movsb
and
icebp
out
or
in
imul
mov
idivl
ret
add
mov
je
sbb
mov
mov
test
dec
mov
aas
imul
push
inc
std
out
mov
add
add
xchg
dec
jmp
mov
rclb
and
cmp
stos
cmp
fstp
xor
mov
sbb
push
and
add
add
add
add
in
mov
nop
cmp
adc
mov
push
add
add
add
jns
mov
out
xchg
pop
jmp
add
fcmove
ret
testl
pop
adc
stc
mov
push
push
mov
pop
jb
sbb
iret
jb
ja
pop
mov
inc
add
add
adc
lock
clc
sbb
dec
arpl
dec
clc
popa
adc
add
movsb
add
inc
push
dec
iret
add
mov
jp
repnz
mov
ja
or
xor
dec
push
in
or
dec
add
add
sbb
fprem
lea
repz
adc
add
add
jb
insl
test
or
icebp
outsl
arpl
icebp
ljmp
cld
out
push
fwait
ret
out
and
sbb
xor
bound
mov
ja
or
add
add
cmp
cmpl
add
add
dec
stos
std
xor
xor
pop
jnp
or
inc
jb
jnp
mov
shlb
add
add
add
xchg
rcl
sbb
out
or
mov
adc
ljmp
xchg
or
scas
fs
dec
out
mov
jb
in
dec
xor
sbb
jl
mov
nop
adc
je
push
leave
movsl
jle
xchg
cmpsl
fsub
leave
scas
inc
dec
fdivrl
xor
les
add
stos
pusha
add
add
popa
sbb
or
mov
dec
fisubl
or
add
add
je
push
test
cmpb
orb
mov
lret
daa
xchg
out
inc
iret
loope
cmpsb
push
or
add
add
and
data16
mov
pop
add
scas
aam
pop
mov
imul
add
dec
mov
dec
aaa
fisubs
push
or
add
add
add
add
adc
das
add
xchg
pop
dec
roll
mov
jp
test
enter
pop
or
add
cmp
jecxz
repz
adc
push
pop
test
lock
call
andb
add
add
add
int3
inc
ds
ljmp
add
add
popf
jmp
cld
inc
add
add
mov
mov
xchg
or
mov
ss
jno
mov
add
add
add
ret
jmp
cltd
pop
data16
sbb
lcall
loopne
lahf
hlt
pop
movsl
mov
xchg
pop
cmpsl
mov
push
mov
pop
je
call
addr16
shrb
push
lock
ret
xchg
push
outsb
icebp
jmp
add
lcall
push
adc
out
notl
mov
ret
dec
and
push
pop
xlat
mov
jg
ss
mov
insl
out
es
mov
add
ss
add
add
fdivl
mov
js
ret
xchg
insl
imul
add
sti
es
inc
enter
add
mov
adc
in
push
fcmovnbe
cmp
xor
add
mov
inc
add
add
fsubs
add
add
pop
ljmp
daa
inc
mov
pop
loopne
cmc
bound
inc
in
je
dec
or
add
add
rorl
sti
dec
mov
mov
jne
mov
add
sub
add
add
push
cmp
xchg
arpl
in
xchg
scas
push
popa
cmp
pop
mov
cmc
icebp
imul
shll
js
pop
mov
inc
add
xchg
cmpsb
push
pop
inc
test
fnsave
in
inc
xchg
mov
or
add
add
xchg
sar
push
xor
mov
sbb
adc
movsb
mov
jmp
add
pusha
mov
into
xlat
adc
ficoml
fsubrs
movl
push
mov
out
mov
add
mov
mov
pcmpeqw
add
add
add
push
mov
pop
push
lret
jbe
xor
xorl
sbb
cmp
subb
add
pop
das
mov
mov
lock
shlb
add
xlat
icebp
movsl
inc
push
mov
movsb
sub
add
pop
stos
icebp
sub
repnz
outsb
sbb
sbb
jb
inc
mov
xchg
scas
push
mov
or
in
or
insl
inc
ljmp
mov
in
pop
mov
mov
and
es
add
add
call
nop
xorb
arpl
enter
inc
xor
addl
add
fcmovb
add
mov
mov
add
ret
enter
mov
add
jnp
push
inc
das
mov
imul
fdivrl
push
xchg
add
or
and
jbe
jecxz
xchg
mov
pop
mov
inc
mov
outsb
xor
test
add
add
add
cmpsl
or
movsl
pop
popf
mov
scas
inc
mov
cltd
cmp
and
push
and
adc
call
cmp
push
sti
rcrl
mov
sbb
and
test
add
cmp
mov
cltd
ds
mov
sbb
add
pop
push
jne
in
or
mov
inc
movsl
fstl
cmp
add
cmp
test
push
jnp
sub
pusha
add
add
std
jmp
mov
mov
or
add
add
mov
cs
push
cmp
or
add
add
mov
test
sub
add
add
fucomp
pop
push
pop
mov
adc
rcrb
dec
add
add
stos
xor
add
add
jg
sub
jae
mov
das
loop
out
mov
out
jp
in
and
add
add
shlb
add
add
fcompl
pop
add
add
in
jl
sub
mov
in
mov
jmp
add
add
cwtl
ret
sbb
or
outsl
lea
pop
mov
fidivs
sbb
mov
dec
mov
lea
clc
mov
add
add
or
mov
rolb
add
add
lcall
std
mov
jae
and
push
enter
adc
adc
sbb
fwait
cmpsb
xor
push
adc
jbe
jns
mov
ss
outsb
mov
aaa
adc
add
push
adc
add
add
mov
outsb
in
rolb
sbb
loopne
jne
xlat
into
jne
cmpsl
in
mov
jbe
dec
dec
mov
out
pop
pop
aam
push
ljmp
add
add
add
add
add
leave
insb
mov
pop
add
add
add
pop
mov
daa
pop
enter
inc
mov
jmp
ror
mov
add
cli
adc
add
add
add
shr
das
int3
movsb
lret
adc
add
add
add
mov
add
mov
pop
dec
add
add
movsl
xor
mov
jne
mov
lods
pop
mov
add
cld
adc
push
gs
outsb
aaa
lods
sub
xor
sbb
inc
mov
xchg
xchg
adc
xchg
jg
stc
in
fnstcw
mov
push
jmp
push
mov
cmp
cwtl
mov
push
push
sbb
add
push
or
clc
cmpsb
ja
mov
iret
ret
push
add
add
insb
add
add
dec
nop
ja
add
add
mov
mov
jecxz
popf
mov
dec
imul
pop
xlat
rcll
jbe
mov
and
sub
lret
scas
imul
dec
add
add
pop
and
loopne
lahf
fadds
stos
lret
inc
add
add
jbe
mov
mov
sub
add
clc
int3
in
sbb
scas
test
out
pushf
mov
add
xchg
daa
movsb
or
je
adc
aam
leave
fnstenv
mov
mov
test
movsl
push
inc
int
cmp
cs
clc
lods
lahf
and
add
add
pop
scas
jmp
add
imulb
add
add
jae
out
fcoms
fs
inc
mov
add
xchg
mov
xor
jnp
lods
repnz
mov
jnp
xchg
pop
mov
cmpsb
gs
loope
sbbb
inc
mov
dec
or
add
sub
add
add
rolb
pop
popa
sbbb
add
rolb
add
add
popf
dec
mov
xchg
jecxz
popf
lret
pusha
mov
les
test
add
adc
add
add
data16
cmp
cmp
filds
xchg
and
fisubrs
mov
ds
aam
shrb
mov
pop
stos
js
mulb
add
add
int
mov
mov
cs
xlat
xchg
cmc
dec
lods
shl
inc
sbb
push
cmp
ds
mov
sub
arpl
xchg
out
cmp
ds
pop
shr
or
leave
mov
inc
push
fs
jno
pop
inc
push
ja
call
adc
add
add
inc
in
shll
mov
push
sti
shl
in
aam
icebp
jg
in
incb
add
jp
add
add
mov
xchg
pop
leave
inc
sub
add
add
push
dec
mov
mov
mov
mov
lock
rcl
icebp
push
xadd
sbb
cmp
jecxz
pop
mov
test
les
add
add
add
add
clc
add
add
imul
cmc
sbb
add
add
popl
mov
pushf
rcr
cltd
es
dec
add
add
xchg
pushf
sub
cs
in
mov
add
add
dec
test
add
add
add
adc
push
js
icebp
icebp
and
sbb
ja
inc
bnd
mov
push
pop
mov
mov
xor
sbb
add
add
add
pop
cltd
jl
test
jbe
jne
cmp
mov
mov
push
insb
add
add
cld
sub
fxch
nop
flds
mov
jp
sbb
add
add
cld
and
add
add
jno
das
adc
add
fmuls
add
arpl
sub
add
add
add
add
inc
mov
dec
dec
movsb
cmp
mov
mov
out
push
sub
add
add
jbe
cli
jle
adc
adc
add
mov
add
add
scas
push
or
add
add
add
add
dec
add
add
jp
dec
adc
add
add
xchg
xorb
cmp
lds
xor
icebp
gs
shlb
add
add
fstpl
nop
mov
fcoms
pop
call
xor
add
add
add
jmp
aam
call
pusha
mov
add
add
mov
or
mov
rolb
add
add
add
nop
pop
and
add
add
add
add
add
jns
mov
dec
add
add
lcall
dec
sbb
add
add
mov
in
xor
add
add
lods
testb
ljmp
testl
add
add
out
pop
popa
or
data16
cld
fimuls
ja
mov
adc
cmp
adc
mov
outsb
or
add
add
adc
cmp
xor
movsl
mov
pop
in
add
add
xchg
add
add
mov
pslld
rclb
filds
dec
and
add
add
outsl
add
add
js
nop
xchg
out
test
mov
mov
and
pusha
add
add
sbb
add
add
add
add
add
cld
std
lahf
mov
cld
jns
out
pop
not
or
adc
cltd
stos
cmp
dec
adc
lods
mov
outsl
push
xchg
out
sbb
mov
clc
add
inc
fcoms
add
add
or
popa
out
popa
pop
inc
rcl
push
fs
push
cmpl
leave
subl
lods
jo
cltd
mov
push
sahf
xchg
adc
sub
sarl
add
ja
dec
aaa
cmc
xchg
pop
sbb
or
add
add
lret
adc
xchg
cs
sahf
nop
in
mov
adc
or
sub
xor
movsb
pop
or
adc
mulb
ljmp
insl
mov
pushf
loop
push
or
push
xchg
es
sbb
jb
mov
sbb
and
add
add
sub
js
lea
hlt
sub
mov
int3
clc
pop
inc
mov
sti
sbb
mov
mov
jecxz
adcb
add
add
lods
shlb
fcoms
outsb
cmp
mov
add
push
push
jae
xchg
clc
int
fdivr
scas
iret
test
cmp
push
mov
mov
cmp
sbb
incl
jg
repz
roll
xchg
dec
add
add
rolb
or
add
add
scas
xchg
xlat
cmc
xor
ret
pusha
mov
jb
mov
add
inc
push
xchg
fisttpll
cld
movsl
push
jcxz
cmpsb
shll
add
add
add
add
mov
adc
mov
inc
xchg
pop
xor
andl
sub
jge
sub
add
add
das
popf
movsl
jp
pop
jb
or
mov
add
add
stos
dec
test
inc
leave
mov
imul
out
pop
jp
adc
aad
jnp
cmp
in
stc
inc
shl
imulb
add
add
repz
shlb
nop
and
test
pop
or
repnz
loop
inc
xor
inc
test
insl
mov
leave
fldln2
and
loope
dec
sahf
push
aaa
add
add
add
xchg
popl
movsl
sti
xchg
jl
hlt
jno
mov
das
pusha
mov
and
pop
jbe
movsb
adc
stos
leave
out
mov
jecxz
stos
fstpt
mov
add
add
pop
arpl
jle
mov
sbb
leave
mov
rolb
inc
lcall
pop
add
dec
bound
mov
loopne
call
out
dec
lds
mov
out
xor
push
test
mov
dec
push
xchg
dec
test
add
add
stos
add
add
add
mov
dec
jne
jmp
pop
hlt
iret
push
pop
mov
pushf
jno
dec
add
add
add
pop
adc
add
aas
or
add
add
mov
push
add
js
jb
lea
add
add
sbb
fmuls
or
inc
pop
mov
add
xor
lods
sarb
fnsave
pop
fidivrs
daa
in
cmp
ret
dec
add
add
add
div
in
lock
aam
and
jmp
stos
mov
add
js
dec
and
add
add
mov
add
lahf
push
mov
lcall
pop
dec
sbb
inc
mov
shrb
jns
pop
xchg
jae
sbb
jo
mov
xchg
call
add
adc
call
add
add
add
hlt
adc
fucomip
mov
sbb
add
add
xchg
aam
add
adc
push
mov
insl
iret
iret
jmp
jecxz
sbb
sub
fmulp
sub
add
add
dec
std
leave
xchg
les
mov
mov
pop
or
add
add
movsl
idivb
push
xor
imul
sarl
mov
call
call
xor
add
lods
inc
movsb
mov
outsl
loop
lret
mov
mov
xor
cli
push
jl
sbb
lahf
aam
pop
cld
mov
push
xchg
adc
mov
pop
call
push
jp
mov
adc
add
scas
xchg
cld
addb
add
add
sub
cmp
inc
lret
cmp
sub
add
add
mov
ljmp
addb
jmp
jl
fisubs
cli
pop
in
cmp
lock
adc
popa
es
test
xor
sahf
sub
or
add
add
add
sub
in
jg
mov
and
add
add
mov
pop
inc
mov
xor
or
lahf
cmp
mov
push
add
add
add
inc
mov
shl
jecxz
sub
aad
into
iret
andl
add
dec
inc
sub
add
add
or
xchg
loope
mov
add
add
add
add
add
add
add
bound
add
add
pop
dec
loop
adc
lods
stc
hlt
and
mov
lret
or
add
add
fiaddl
out
lea
sub
fwait
aas
inc
add
add
push
lcall
mov
sub
sarl
icebp
mov
gs
mov
dec
mov
icebp
cmp
aaa
repz
add
add
push
push
enter
mov
mov
mov
aas
sub
out
cmc
sbb
and
add
add
addr16
add
bound
loopne
in
jl
shlb
into
add
add
add
icebp
dec
add
add
int3
cmp
fld
dec
inc
into
mov
lcall
cmp
cmc
rcrl
loop
adc
das
sub
movsb
adc
add
mov
add
faddl
add
lock
bound
call
xor
or
add
add
inc
add
add
out
add
add
mov
add
add
xor
inc
add
add
mov
cltd
sub
add
add
add
add
jns
das
xchg
inc
mov
sarb
dec
mov
stos
in
cmc
xchg
or
shrb
add
add
add
add
test
add
add
loopne
add
add
orl
ja
xor
add
add
ja
pushf
jg
mov
sub
mov
inc
sti
rorb
add
xchg
shrl
add
add
lds
xchg
outsl
add
push
andb
mov
stc
jp
xlat
inc
mov
adc
xchg
faddl
lret
add
add
add
add
push
ficoms
cmp
lock
cmp
add
add
sub
or
mov
or
add
add
in
cwtl
pop
popw
push
stos
arpl
int
push
data16
push
cli
mov
push
aas
aad
inc
mov
mov
jge
add
add
test
loop
xlat
xor
mov
xorb
cmpsl
sub
jge
pop
sbb
pusha
add
add
test
add
add
cmp
std
repnz
pop
in
leave
mov
cmp
or
cli
adc
pop
mov
pop
mov
imul
cmpsl
xor
add
add
jo
jg
adc
add
inc
mov
sahf
add
enter
mov
hlt
pushf
test
decl
clts
xchg
cmp
adc
out
cmp
xchg
repz
mov
mov
loopne
out
xchg
push
jge
scas
and
cmp
and
add
add
shlb
mov
aad
push
fidivl
roll
add
fmull
ret
xor
add
add
xchg
jns
push
jae
jge
add
add
mov
or
cld
or
icebp
or
add
add
fisubs
repz
js
mov
movsl
ja
mov
add
add
xor
testb
mov
cld
je
push
adcl
incl
sub
aad
repz
dec
add
add
mov
xchg
aad
xor
push
repnz
fldenv
mov
cmpsb
sbb
lahf
push
cmp
movsl
and
add
add
dec
jge
mov
mov
xlat
pop
xor
pop
inc
mov
repz
sub
inc
add
add
movsb
cmpsb
std
dec
outsl
xor
mov
add
push
lds
mov
sbb
dec
pop
mov
aam
xchg
sbb
mov
leave
pop
fmuls
aaa
outsb
fnstcw
add
je
jo
add
int3
pop
lock
add
add
add
pop
cmp
fdivp
jmp
pusha
add
add
divb
mov
addr16
loopne
ror
adcl
shrb
dec
add
add
mov
in
imul
imul
in
add
mov
es
add
add
lea
add
add
mov
test
in
cld
mov
xchg
push
jbe
or
ds
sarl
add
adc
cmp
push
inc
dec
mov
std
testb
cmpsb
std
pop
cmp
ret
dec
stc
jne
jle
fsubl
add
fistps
ret
loopne
jmp
mull
jge
mov
scas
sub
pop
push
sub
in
ret
repz
mov
icebp
fcmovnb
mov
add
add
jno
fidivrs
lsl
cmp
cmp
add
addr16
add
add
sbb
adc
aaa
adc
add
loopne
lods
pop
push
mov
add
loop
fildll
pushf
pop
sub
sahf
and
nop
cmp
pop
xchg
sahf
faddl
add
fisubl
add
add
add
xor
mov
mov
lea
mov
inc
lret
add
mov
pop
icebp
adc
test
pop
icebp
and
mov
mov
dec
mov
mov
aas
push
movsl
movsb
ja
rclb
js
push
sub
pop
mov
add
sbb
movsl
sbb
popa
les
adc
xlat
scas
jmp
mov
subb
xchg
repnz
lock
into
sti
xor
push
aaa
jp
xor
bound
add
add
mov
inc
mov
addps
je
jle
mov
adc
repnz
xchg
add
xchg
dec
hlt
pop
mov
int3
bound
insl
and
repnz
add
add
lea
cld
cmp
push
mov
dec
clc
into
pop
movsl
out
imul
sub
lds
leave
and
ret
mov
push
mov
cmp
jg
repz
lock
add
add
cmp
add
add
mov
mov
lods
or
push
inc
mov
call
mov
cmc
or
mov
in
addr16
mov
sbb
mov
xor
cmp
dec
repz
sbb
mov
sub
cmp
lcall
mov
lcall
ficomps
cli
jbe
cmp
adc
out
and
data16
repz
mov
adc
sub
lds
dec
mov
call
pop
mov
scas
push
or
cs
sub
add
add
add
add
mov
jecxz
inc
mov
cs
add
add
add
mov
cwtl
mov
adc
xor
add
add
dec
leave
adc
inc
xchg
in
mov
add
inc
sbb
pop
mov
out
mov
ja
dec
add
add
andb
into
call
add
stos
jp
mov
ret
cmp
cmp
add
add
popf
lcall
mov
enter
into
int
mov
das
mov
daa
stos
gs
lods
adc
mov
mov
sub
add
add
add
add
nop
jp
les
jb
je
stc
loop
addr16
movsl
in
rorb
add
int3
not
sub
add
add
pop
test
jle
insb
add
add
cmpsl
rcll
scas
data16
cmp
mov
add
push
imul
jb
outsl
push
jo
in
dec
shr
pop
jne
jnp
andl
add
and
add
add
cld
iret
mov
scas
add
scas
fisttpll
add
fistpll
cltd
mov
lahf
fcomps
insl
and
stos
roll
sbb
and
ret
add
add
lret
or
pop
call
add
add
addr16
iret
outsl
les
add
add
mov
adc
add
lret
push
dec
cmp
aas
cmp
mov
stc
cmc
mov
shrb
add
insb
add
add
or
add
add
and
add
add
das
and
mov
inc
sbb
mov
add
add
jno
sub
inc
push
adc
test
aam
xchg
push
push
negb
daa
insl
sub
jno
add
loope
test
sbb
in
add
add
pushf
mov
xor
mov
gs
push
imul
add
stc
dec
lods
insl
sbb
dec
sub
pop
ffreep
fldcw
xchg
dec
add
add
data16
add
add
add
xorb
ds
xchg
xchg
cmpl
add
mov
mov
mov
push
jns
sti
cltd
dec
or
mov
in
aam
mov
jg
push
pop
bound
cs
jl
arpl
cmc
pusha
mov
mov
add
fcmovne
lds
xchg
aam
sbb
push
mov
mov
fcomip
inc
outsb
test
adc
mov
add
add
mov
add
js
arpl
imul
js
rcrb
mov
mov
aaa
rcr
sub
fsub
cmp
add
add
add
xlat
inc
and
and
out
xchg
popf
fsubp
add
rcll
xlat
pop
xchg
jecxz
jne
jg
popf
stc
cmpsb
loop
popf
dec
stc
inc
mov
les
add
add
mov
out
ljmp
sbb
in
jp
dec
add
add
pop
sub
mov
mov
or
aam
lea
add
add
imulb
inc
and
outsb
fndisi(8087
add
and
add
add
mov
outsl
int
data16
enter
mov
add
add
sbb
lret
mov
xor
add
jo
fmuls
arpl
push
test
test
test
mov
iret
iret
inc
adc
dec
test
adc
add
mov
xchg
incl
pop
insb
add
add
je
dec
mov
inc
adc
add
fnsave
add
add
ret
mov
clc
mov
pushf
push
xchg
je
mov
add
add
fnstcw
mov
popl
jns
add
loope
and
xchg
cmp
inc
or
push
push
lret
sahf
cmpsb
out
sbb
adc
add
shlb
jne
dec
mov
cwtl
fcoml
aam
sub
out
add
add
jno
jp
insb
mov
add
add
jbe
sub
jne
xlat
jg
mov
das
and
ficomps
call
pop
cmpsb
mov
mov
aad
mov
add
aaa
test
add
daa
jge
out
xchg
cmp
daa
jg
push
iret
clc
xchg
and
add
add
fistpl
add
add
pop
and
shll
push
dec
xor
add
add
fcomps
add
add
add
jmp
jmp
add
push
std
nop
xor
cmp
inc
es
push
fistpll
scas
mov
jp
xchg
jge
xchg
mov
aas
inc
aad
push
jle
test
out
mov
lods
cmp
add
lds
lcall
popf
clc
enter
pop
jbe
mov
and
add
xchg
popf
sarl
mov
push
sarl
cmp
xchg
sub
subl
add
mov
repz
mov
sti
sub
add
add
test
mov
add
add
push
xor
mov
mov
adc
in
dec
sub
cli
in
add
add
xchg
adc
mov
leave
test
fsubl
sbb
sbb
jae
repz
std
push
sti
int
cmc
jmp
stos
sti
inc
mov
fwait
dec
jno
insb
mov
push
inc
push
jmp
icebp
xor
add
add
call
outsb
sbb
jecxz
jmp
xchg
or
scas
mov
xchg
jge
dec
add
dec
cmpsl
push
outsl
arpl
lods
cwtl
pop
mov
sbbl
scas
jl
sbb
repnz
insb
mov
xchg
es
mov
ret
mov
sbb
add
fdivs
jge
aaa
jp
repnz
dec
jg
loope
lock
mov
push
fisttps
sub
outsl
dec
dec
lds
shlb
inc
add
add
or
pop
mov
xchg
int3
or
add
add
movl
add
mov
add
add
add
cmp
adc
std
iret
sbb
push
push
cs
fstps
xchg
xor
and
arpl
lret
and
add
add
add
add
add
fmull
mov
adc
sti
int
not
mov
pop
cwtl
push
push
lcall
stc
into
mov
aad
repnz
add
add
xchg
xchg
int
mov
xchg
into
cmp
add
add
mov
mov
stc
xor
les
xchg
or
add
add
add
mov
fimuls
add
add
adc
inc
into
add
insb
mov
xchg
iret
add
add
sbb
sti
cs
popf
imul
sub
xchg
test
aas
mov
test
inc
add
add
lcall
hlt
adc
inc
dec
and
pop
cmp
ret
pop
test
xchg
mov
push
mov
shlb
add
add
iret
out
xor
pop
into
lcall
pop
dec
jae
pop
mov
in
push
stos
xchg
jnp
add
lods
fld
test
cmc
cltd
inc
outsb
mov
lods
and
add
add
xchg
mov
shlb
add
mov
cmp
inc
aas
inc
jno
adc
push
xor
sub
cmp
insl
push
fildl
add
add
or
add
add
sbb
xchg
aam
jae
mov
cmp
shll
sub
add
add
js
aaa
mov
jg
jmp
mov
mov
mov
add
stc
sub
rcll
cli
fwait
scas
push
std
test
arpl
add
gs
mov
mov
insl
mov
jb
sbb
cmp
es
std
out
sub
add
add
mov
test
fstp
mov
mov
lahf
pop
cwtl
addb
add
out
testb
add
jnp
inc
pop
int
push
dec
sub
jle
js
sbb
stos
cmp
add
cmp
mov
pusha
add
add
arpl
add
xor
add
add
sub
add
add
aaa
add
push
fs
xor
jecxz
adc
and
add
add
mov
inc
mov
pusha
add
add
nop
xchg
jp
int3
sbb
inc
add
add
in
rcr
jge
fistl
inc
pop
pop
test
push
hlt
dec
stos
pop
adc
insl
jno
inc
adc
pop
jo
dec
rcrb
filds
nop
mov
stc
sar
dec
add
add
dec
xor
imulb
cmp
and
xchg
xor
cmpxchg
xor
mov
gs
mov
aas
cmp
arpl
or
add
add
das
mov
add
add
fs
adc
xor
adc
sbb
or
mov
aaa
ds
add
add
inc
add
add
das
sbb
int3
jnp
loopne
pusha
add
add
test
fs
sbb
add
cld
ljmp
add
jle
jmp
jbe
add
dec
xchg
es
jnp
and
movsb
or
lret
cld
add
mov
test
mov
dec
jns
push
pop
mov
ficompl
dec
stos
jae
outsl
ja
add
inc
xchg
mov
cmp
shll
ret
pushf
push
push
mov
or
mov
in
jae
or
loopne
outsb
push
mov
add
icebp
jp
add
add
or
mov
das
mov
xchg
subl
fiadds
cmp
fisttpl
add
mov
jb
into
lea
fisubrs
testl
pop
test
mov
add
mov
mov
add
cmp
cmpsl
pop
test
fpatan
aad
sub
xor
aas
and
add
add
popf
xor
and
cmc
out
out
sub
mov
jmp
setge
loopne
mov
add
add
add
daa
jge
sub
push
call
add
nop
mov
cmp
repz
add
add
add
leave
in
scas
test
mov
add
xchg
jne
mov
jns
out
inc
inc
add
add
and
clc
mov
add
insb
mov
ds
faddp
rol
insl
or
add
add
adc
cmp
insl
enter
jp
bound
mov
aas
mov
mov
cmp
inc
xchg
out
sbb
rol
movsl
mov
add
add
pop
jae
dec
in
adc
fwait
xor
dec
mov
and
push
mov
call
add
add
dec
cmc
loopne
bound
add
add
lock
negb
or
cmp
jecxz
dec
mov
add
out
add
ficoml
mov
test
push
idivl
lock
cmpsl
push
ficoms
rolb
add
add
adc
mov
add
push
cltd
mov
or
cmp
outsb
movsl
sbb
test
ret
add
add
add
add
jno
xor
xorb
jp
movsl
imul
mov
or
jne
or
mov
lds
mov
mov
fs
push
mov
lret
inc
cmp
add
loopne
movsl
loopne
rorl
jp
or
add
add
lret
add
add
add
add
enter
iret
adc
pop
cmp
in
fsubrs
add
mov
push
jne
cmp
mov
aad
add
add
pop
and
add
add
vminpd
imul
and
add
add
sbb
add
add
add
add
aaa
mov
add
add
cld
jbe
xor
or
mov
push
lret
or
in
jg
jl
std
jb
ds
sub
add
add
cmpsb
and
and
jns
inc
add
add
aaa
dec
dec
cmpsb
mov
jbe
decl
out
inc
mov
mov
sbb
add
inc
idiv
rsm
into
pop
shl
xchg
sbb
aad
xchg
stos
mov
call
scas
and
sub
outsb
cltd
push
cmc
cmpb
dec
mov
inc
push
lods
ret
mov
add
add
push
or
bound
adc
jmp
mov
sub
lds
inc
fistl
movsb
sub
push
xor
cs
jnp
popf
mov
add
xor
jb
push
adc
pop
inc
clc
jbe
iret
scas
pop
sbb
xchg
pop
ret
stos
mov
aas
mov
inc
add
add
adc
mov
inc
mov
mov
xlat
adc
add
add
stos
jnp
cwtl
fisubs
add
add
or
mov
jno
add
add
aam
mov
add
add
stos
push
xor
xor
mov
or
xchg
push
in
std
mov
xchg
es
out
xchg
in
or
add
add
add
xchg
cmc
dec
inc
mov
cmpl
add
popf
push
pop
outsb
inc
add
add
fisttps
jae
scas
lods
jle
fdivrl
stos
test
add
outsl
or
pop
pop
inc
lock
fsubrl
add
mov
mov
mov
je
jle
mov
mov
ret
aam
cmpsl
mov
fstps
mov
cmp
add
pop
mov
mov
icebp
inc
mov
push
push
out
push
lds
push
shlb
mov
sub
add
add
test
mov
mov
mov
shll
mov
jnp
mov
add
mov
cli
inc
into
mov
cli
pop
pushf
fldl
add
pop
push
ret
nop
mov
inc
add
add
mov
hlt
push
movsb
mov
jb
mov
je
fmul
test
ret
ja
stos
dec
add
add
add
dec
xchg
mov
sarb
aaa
pop
loop
or
movsl
out
cmp
mov
add
add
jmp
push
mov
cmp
lods
scas
sbb
mov
add
add
test
sub
add
add
mov
in
mov
add
add
jnp
int3
xor
leave
into
cltd
pop
and
sahf
scas
push
rcll
mov
sub
and
add
add
add
pop
mov
mov
mov
mov
pusha
mov
push
add
add
add
adc
add
xchg
lret
mov
fbld
add
add
cli
and
xchg
mov
mov
sahf
jmp
or
xchg
fwait
cltd
sub
add
add
clc
or
add
add
fcomi
cmp
fsubrl
nop
fistl
adc
push
add
add
add
jge
mov
mov
pop
or
pop
xchg
aas
sub
push
test
mov
cmp
push
pop
and
jle
clc
fwait
das
pop
cltd
adc
add
call
in
popa
sub
adc
jb
cmc
daa
stos
pop
sbb
iret
push
test
add
shlb
rolb
stos
mov
cli
pop
mov
ror
mov
jg
shrl
sub
dec
pop
push
test
xchg
scas
or
rcll
movsb
jae
mov
add
add
lahf
sbb
push
dec
movsb
mov
mov
in
push
les
add
sbb
popf
pop
mov
outsl
lcall
mov
mov
add
add
inc
add
add
test
test
ja
hlt
xor
and
xor
cmpsb
icebp
popf
je
push
lods
add
add
add
loop
jae
dec
shll
push
cmp
lods
sarl
sarw
mov
cmpsl
shll
xacquire
aad
mov
bound
std
add
mov
mov
enter
xor
add
mov
or
repz
push
test
cmp
mov
jg
pop
aas
data16
in
push
push
data16
mov
xor
clc
sub
cmp
mov
adc
add
mov
cmp
add
add
adc
jbe
call
add
rorl
add
in
dec
jb
out
mov
jp
stos
cmp
cmc
pop
call
inc
enter
aam
mov
sub
in
inc
mov
test
jp
mov
and
fldl
pushf
mov
xchg
outsb
inc
cmp
mov
mov
repz
xor
add
add
cmpsl
dec
sbb
dec
mov
add
sbbl
jle
hlt
cmp
mov
push
ficoml
xchg
mov
add
add
push
xorb
push
mov
dec
jb
push
sub
add
add
sbb
lret
sbb
iret
pop
xchg
mov
jmp
out
add
add
cwtl
pop
test
je
call
add
adc
add
add
push
cmp
ja
popa
fcomps
out
out
mov
pop
inc
add
jo
ds
stos
jle
rcrb
push
jl
test
mov
xor
shlb
fnsave
add
add
adc
jno
or
les
xor
in
sub
lahf
pop
push
push
lock
je
iret
fmull
jne
gs
inc
mov
or
ss
ss
pop
stos
pop
and
add
add
cmp
scas
pop
fmull
add
add
or
scas
mov
pop
pop
dec
adc
jp
scas
jnp
push
jmp
ja
inc
jge
mov
icebp
mov
mov
pop
dec
cltd
mov
stos
lock
xchg
xor
xchg
inc
mov
jnp
lds
enter
dec
mov
stos
jo
les
add
pop
mov
mov
adcb
jbe
jne
iret
sbb
inc
add
add
and
add
add
loop
cmpsl
mov
add
add
cmc
push
add
add
fsubrs
inc
add
add
jnp
jle
sahf
cli
dec
push
enter
lahf
or
add
add
jl
je
sub
add
add
cmp
xor
mov
or
add
add
stos
test
scas
cmp
cmp
or
add
add
idiv
in
insb
add
add
outsl
push
stc
scas
fcoms
dec
mov
fwait
xchg
cli
mov
dec
mov
out
cmpsl
scas
pop
xchg
pop
adc
sets
add
add
jb
xchg
jge
xchg
add
pop
imul
sub
cld
jno
sub
jmp
and
rorb
add
add
into
push
nop
add
popf
adc
add
add
stos
std
rol
pop
xchg
outsb
mov
add
pop
sbb
clc
loope
cli
sbb
fdivrl
push
or
add
add
add
add
mov
fildll
loopne
xchg
in
inc
add
add
xchg
and
sub
test
fcompl
jo
sbb
sbb
add
add
fdiv
adc
and
add
add
mov
out
pop
out
add
jnp
mov
pop
in
add
adc
add
add
add
xchg
xor
mov
repnz
into
cmp
sti
mov
add
add
or
add
add
xchg
jnp
daa
jae
sbbl
fistl
lahf
movsl
cli
xchg
outsl
pop
and
icebp
enter
mov
adc
scas
xchg
pop
mov
int
xor
sbb
fistpl
or
sub
xlat
xor
mov
cmp
lock
js
cmp
mov
cmp
data16
add
sti
stos
add
lods
loop
and
add
add
and
hlt
out
ljmp
rcr
adcb
mov
ret
push
sbbb
imul
cmpsb
push
mov
lea
add
add
push
mov
mov
adc
mov
cld
and
add
cltd
sbb
shll
rolb
mov
ljmp
mov
mov
cmc
stc
imul
repnz
je
bnd
push
sti
sahf
add
add
jb
lret
add
add
rorb
xor
ds
add
add
mov
mov
add
sub
push
push
lds
xchg
imul
mov
gs
add
add
int3
add
dec
cmp
sbb
xor
popl
add
add
pushf
daa
repnz
mov
cmp
add
out
jno
das
fmuls
fiadds
pop
cmp
cld
jecxz
ds
mov
push
mov
jl
loope
pop
loopne
push
hlt
xchg
adcb
push
pop
lods
lods
adc
and
adc
in
enter
call
or
adc
add
add
cli
cltd
shrl
add
mov
pop
stos
dec
mov
call
out
push
add
add
shl
movsl
mov
sub
add
add
loopne
push
adc
and
ffreep
mov
jmp
or
mov
cmp
add
pop
mov
cmp
add
xor
jmp
into
jns
push
xor
xlat
push
test
add
outsl
stc
call
gs
push
movsb
mov
stc
cmp
outsb
movsl
mov
mov
add
enter
push
imul
out
jae
fwait
fs
icebp
mov
decb
add
add
shrb
xchg
add
mov
shlb
and
dec
mov
adc
mov
stos
xor
or
add
add
lea
insb
mov
xor
adc
inc
mov
pop
sub
or
sti
das
xchg
jl
dec
mov
dec
mov
add
add
push
hlt
les
jp
add
xor
clc
fcomi
movsb
idivl
dec
mov
or
add
add
add
add
add
add
add
add
add
fists
mov
add
fcomp
repz
cli
adc
rorb
add
pusha
mov
or
jb
and
mov
mov
mov
gs
fldenv
push
icebp
push
xor
or
lret
in
push
mov
add
shlb
add
add
ficoml
push
out
add
mov
cmp
push
popf
and
fmul
ja
scas
fildl
adc
cld
fwait
xor
mov
movsb
call
jns
jb
mov
inc
add
add
fcompl
lret
pop
push
sub
push
cmpl
sbb
test
in
add
add
cli
pop
inc
jnp
ss
fwait
lret
xor
movb
in
pop
movsl
dec
sbb
cmpsb
cmc
mov
mov
mov
add
add
sbb
and
or
jns
add
xchg
pop
mov
cmp
mov
shll
rcl
dec
mulb
sahf
xor
sbb
jae
int3
inc
and
das
or
sbb
dec
xor
mov
adc
mov
jo
push
test
lods
dec
rclb
mov
mov
mov
or
add
add
dec
mov
ret
push
xchg
add
loop
into
push
in
sbb
mov
gs
cmp
sbb
jecxz
test
xchg
ret
pop
adc
jae
lea
ficoml
cld
cmp
add
jle
jnp
cmp
mov
mov
imul
movsl
in
push
movb
sbb
mov
lock
add
add
repz
push
pop
push
jae
and
test
js
fdivrl
leave
hlt
hlt
dec
pop
int3
idivl
mov
push
mov
add
mov
mov
add
add
add
add
lret
mov
pop
push
loope
pop
call
add
add
mov
stos
shlb
mov
inc
add
add
sbbb
adc
add
add
aas
stc
jecxz
push
lods
jbe
mov
jb
mov
repnz
scas
cld
sbb
add
add
int3
mov
xchg
cmpsb
cwtd
addr16
cmpsl
movsb
lcall
mov
jle
dec
add
add
push
lcall
adc
add
add
add
add
add
outsb
mov
lods
xor
dec
inc
mov
mov
daa
in
sub
mov
mov
hlt
fisttpl
add
add
mov
jecxz
or
add
add
mov
add
add
add
adc
sarb
adc
push
sbb
add
add
jge
inc
les
mov
into
add
iret
cmpsl
pop
imulb
mov
insl
lock
mov
or
sub
xlat
js
mov
mov
xchg
xor
xchg
mov
xor
jmp
jmp
jbe
shrl
popf
ror
inc
sbb
add
bound
mov
int3
arpl
or
add
add
lea
loopne
je
cltd
pop
inc
arpl
jmp
and
rclb
sbb
jg
or
mov
out
jae
add
add
xchg
movsl
es
js
jbe
and
add
add
sub
add
add
test
add
add
add
shl
cmpsb
repnz
leave
cmc
sbb
nop
xor
inc
stos
andl
out
negl
fimuls
mov
adc
les
sbb
adc
sub
add
add
in
adc
add
and
mov
cmp
or
leave
dec
popf
cld
nop
mov
xor
sub
pop
pop
inc
add
add
or
add
add
jle
push
mov
sub
sub
sbb
cli
xor
pop
mov
lret
add
add
jl
or
add
add
cmp
push
or
arpl
add
add
add
add
xchg
imul
sahf
out
mov
int
add
popf
popa
in
shl
xchg
sbb
inc
js
or
fcomps
ret
sub
in
pop
jnp
and
scas
dec
mov
dec
popa
xor
dec
mov
add
add
ja
sbb
adc
in
aaa
xchg
daa
sbb
mov
jns
insb
mov
add
add
xlat
dec
push
mov
or
loopne
loop
xchg
add
pop
add
add
add
stos
data16
cmpsl
cmp
xchg
or
fsubrp
xchg
jae
mov
jmp
orl
sbb
mov
xchg
and
mov
addr16
or
push
cmp
sbb
cmc
xor
mov
insb
add
add
cmpsl
pusha
mov
idiv
fldt
add
add
or
add
add
shll
jl
insb
add
add
insb
mov
lods
adc
lcall
sbb
push
adc
nop
sub
xchg
lods
fcmovbe
aas
mov
mov
ljmp
xchg
cli
mov
add
imul
and
add
add
scas
adc
ret
ds
popf
pop
and
add
pop
push
push
insl
aad
test
jnp
test
sbb
mov
in
iret
mov
cltd
scas
repz
sbb
xlat
mov
mov
xchg
aas
dec
pop
adc
add
add
add
movsl
pop
and
add
add
sub
jno
shlb
ja
push
sub
leave
push
inc
movsb
hlt
push
mov
and
jle
and
add
add
repz
adc
fsubr
clc
pop
jnp
push
and
add
add
repz
mov
add
add
or
add
add
cmc
dec
aas
cltd
inc
and
nop
xor
add
add
add
and
jnp
and
add
add
test
mov
or
add
add
mov
dec
xor
imul
jno
shrb
mov
xor
pushfw
pop
mov
inc
sbb
pop
pop
mov
je
sub
jae
jnp
pop
push
out
push
mull
je
add
add
mov
add
add
and
mov
add
add
cli
jl
sub
pop
pop
arpl
cmpsb
dec
adc
cmp
add
add
rcl
data16
aas
popa
mov
add
add
xchg
xor
jnp
sub
add
add
mov
addr16
lea
fld
sub
aad
cmc
and
add
add
pushf
sbb
cmp
ds
pop
fwait
push
test
add
add
xor
push
cltd
sbb
add
in
mov
sbb
mov
inc
jne
mov
or
add
add
add
add
popa
ret
sub
xor
hlt
repz
add
add
add
add
add
xchg
xchg
stos
push
or
es
mov
push
mov
cmp
xchg
add
adc
inc
xor
xchg
jns
into
fsubrs
mov
mov
out
mov
and
pushf
mov
bound
pop
jb
aaa
jecxz
mov
mov
mov
movsb
mov
test
sbb
add
sbb
inc
pop
lahf
push
sub
add
add
pop
enter
mov
jmp
xchg
push
jg
imull
add
add
add
push
sbb
push
mov
adc
lods
adc
int
repz
js
popa
dec
pop
pop
addr16
or
add
add
add
add
into
push
cmp
mov
add
adc
and
add
add
stc
pop
in
rolb
add
inc
add
add
xor
scas
adc
rorl
or
push
ja
adc
fneni(8087
inc
mov
xor
dec
mov
add
shl
dec
add
add
ljmp
add
loope
mov
pop
shl
std
mov
cmpsl
pop
mov
test
pop
pushf
jl
push
pop
mov
mov
loope
and
add
add
xor
pop
push
mov
pop
mov
mov
test
mov
lea
leave
fsubl
fadds
lahf
test
push
mov
pop
pop
ret
fcmovnu
adc
add
add
dec
clc
jg
lock
out
sti
dec
add
add
scas
xchg
cmp
mov
repnz
mov
push
mov
outsl
xchg
mov
push
and
popa
sub
add
add
add
add
mov
test
in
fwait
pop
or
add
add
xor
mov
mov
lods
int3
cltd
fimuls
pop
dec
mulb
inc
mov
xlat
cmp
jb
dec
add
add
add
in
inc
inc
test
jno
xchg
jbe
xchg
jmp
adcl
push
pop
ret
mov
test
pop
fnsave
jnp
pop
test
add
add
mov
in
enter
sbb
add
add
in
sarb
cmp
add
jmp
push
arpl
bnd
fcompl
add
lret
jge
mov
dec
mov
std
orb
and
inc
add
add
pop
dec
sahf
xchg
repnz
out
ss
dec
fimuls
xor
adc
andl
mov
in
mov
add
mov
mov
dec
mov
fcmovb
dec
xor
and
add
sub
add
add
add
add
insb
mov
add
add
add
mov
xor
bound
add
cmove
push
into
or
mov
mov
decb
add
add
mov
sub
insb
add
add
divb
xchg
push
ret
sahf
int
or
add
add
add
push
xchg
add
add
push
inc
lahf
mov
clc
in
add
add
push
sete
inc
test
add
arpl
mov
test
xchg
pushl
popl
mov
push
mov
test
jbe
jp
sub
add
add
stos
shll
int
jns
fadds
rcrl
ljmp
aam
add
add
mov
in
mov
ret
xor
push
pop
pop
adc
dec
mov
in
mov
cs
or
sub
imul
mov
clc
rcr
sahf
cli
jmp
cmpsl
inc
adc
mov
add
add
push
stos
stc
cmpsl
lods
xor
add
add
in
jb
jg
adc
test
add
add
sub
outsl
in
mov
mov
dec
add
add
mov
test
add
in
insl
push
repz
xlat
fadds
pcmpgtd
add
add
xchg
shll
add
add
add
movsb
jp
aad
out
mov
loop
sub
add
add
mov
jb
jl
stos
lcall
out
mov
add
mov
aas
jno
pop
push
xchg
mov
mov
shll
lods
pop
sub
jge
stos
mov
push
into
sbb
add
mov
lret
push
lods
mov
dec
rcr
or
mov
rclb
jp
sub
sbb
cmc
pop
dec
mov
rcl
mov
cmpsb
mov
jmp
jbe
push
rolb
lds
and
add
add
inc
je
cmp
incl
inc
dec
mov
cmp
jle
mull
xchg
xor
cwtl
mov
add
add
or
stos
add
mov
xor
dec
jg
cmpsl
into
mov
xchg
rcrl
push
out
ret
jecxz
jne
rcl
rolb
arpl
mov
lret
loope
and
and
fildll
xchg
and
mov
ret
jl
pop
addr16
add
add
push
xchg
inc
dec
jbe
ret
add
add
push
add
add
add
ljmp
mov
adc
sub
mov
rcrl
dec
add
add
add
cli
notl
jecxz
mov
mov
xor
sub
xchg
lcall
mov
sub
std
inc
add
add
jmp
or
ljmp
sbb
add
add
mov
mov
sti
sbb
xor
jge
mov
push
xchg
es
push
sub
add
add
add
add
add
fdivs
dec
add
add
xor
cmp
lret
add
add
xchg
mov
jae
mov
aaa
dec
mov
pop
pop
nop
push
bound
or
shll
cmpsl
imul
cvtps2pd
pushf
cmp
lea
cwtl
icebp
call
push
shll
add
xor
jmp
loope
pop
mov
sbb
cmp
je
pop
insb
mov
gs
dec
add
add
lahf
dec
in
xor
fstpl
xor
out
out
jb
daa
xor
mov
jge
nop
pop
mov
jnp
imul
add
rorl
xor
hlt
pop
lret
stos
dec
orl
mov
sbb
add
add
add
sbbb
and
lea
add
add
dec
mov
mov
ss
cli
xchg
icebp
mov
ficomps
xor
add
add
mov
jecxz
lds
xor
addb
dec
ret
adc
aad
pop
aad
cmp
add
add
mov
mov
pop
or
sub
add
add
scas
push
call
fists
push
xchg
xchg
rorb
add
add
mov
and
mov
nop
mov
inc
xchg
int3
cmp
jl
mov
lods
jle
lods
push
les
jle
pop
pop
addr16
add
add
jmp
shrl
mov
insl
adc
mov
lahf
cmp
add
add
imul
and
call
add
push
aas
nop
mov
js
or
add
imul
sub
jne
pop
cmc
popf
pop
pop
es
dec
shlb
mov
aaa
mov
fisubrl
fcmovb
test
pop
and
add
add
adc
leave
mov
inc
dec
into
jle
lea
insl
inc
mov
out
jno
xor
add
pop
xchg
sub
add
add
mov
nop
es
xlat
inc
mov
sub
mov
call
ds
movsl
das
jns
sbb
adc
or
add
add
test
loopne
pop
int
push
add
or
add
add
stos
adc
repnz
call
mov
mov
xchg
jmp
enter
dec
add
add
xchg
dec
mov
mov
xor
scas
cli
test
jb
pop
xor
jb
inc
mov
lds
mov
ljmp
jnp
adc
loop
sbb
sbb
push
ficoms
push
dec
mov
cmp
xor
mov
sbb
cmp
lahf
sahf
mov
leave
or
dec
mov
pop
ds
sbb
mov
mov
jge
roll
mov
ret
mov
leave
push
lods
push
nop
mov
mov
xor
cld
out
jge
sahf
and
add
add
pop
pusha
add
add
clc
int
xor
out
dec
pop
out
daa
dec
inc
movsb
or
xor
loop
add
js
or
inc
andl
test
insb
mov
push
test
add
push
xchg
mov
add
add
add
mov
data16
push
and
add
add
mov
add
add
fisubl
lds
xor
lds
add
add
cli
ss
lods
pop
mov
pop
out
or
add
cld
in
inc
push
ja
into
mov
out
xchg
mov
add
add
add
push
inc
dec
sub
add
add
add
push
xchg
ds
int
insl
enter
pop
stc
xor
aas
and
mov
jbe
sub
add
in
push
mov
xchg
push
or
add
add
xchg
lock
int3
push
xchg
dec
popa
cmp
xchg
enter
xchg
aaa
stos
gs
add
add
cltd
nop
addr16
loope
mov
inc
mov
adc
add
lahf
mov
jecxz
sbb
shlb
add
lods
incl
sahf
cmp
ds
xchg
enter
cld
cmp
mov
inc
ds
mov
outsl
fnstcw
push
cs
push
cmp
scas
add
add
pop
inc
mov
cmc
sub
enter
sbb
mov
imulb
add
push
or
push
pop
pop
out
notb
cmp
add
add
add
int3
pop
cmc
call
jp
pop
mov
inc
cli
leave
dec
vgatherqps
lods
inc
sub
in
int3
scas
cld
jo
enter
xor
cmp
icebp
jbe
adc
xchg
and
pop
xor
push
or
mov
add
add
jmp
scas
xchg
mov
enter
clc
jg
cmpsb
rcl
fldenv
mov
xor
cwtl
out
pop
inc
xchg
adc
fldl
mov
stos
sub
pop
rclb
add
cmp
lahf
iret
push
mov
pop
sbb
jbe
adc
add
add
push
cmpsl
jg
stos
out
pusha
mov
add
add
divl
fcmovne
pushf
jp
dec
ljmp
je
jbe
jmp
sbb
aas
jg
add
adc
add
jo
sbb
cmp
lock
fld
loope
mov
aad
pop
cmp
sub
outsb
pop
movsb
or
xor
jne
add
add
gs
scas
inc
cs
add
data16
out
xchg
xor
sbb
cmc
loop
inc
add
add
xchg
daa
pop
xor
mov
fmull
sub
add
out
xor
mov
mov
xchg
lcall
pop
fcomps
mov
push
dec
mov
mov
xor
cli
je
jmp
push
out
jle
jg
dec
test
out
sbb
mov
je
jl
mov
jmp
mov
and
in
cmp
gs
push
movsl
shlb
pop
int
push
les
in
js
aam
es
and
andl
aad
cli
cli
ja
repz
arpl
add
lds
mov
xlat
movsb
test
mov
inc
add
add
adc
scas
ds
or
add
add
jl
int3
push
xchg
in
loope
or
adc
add
add
xchg
and
add
add
mov
int
aas
add
add
add
jo
sbbb
insl
in
lea
jbe
stos
popf
xchg
cmp
loope
jb
dec
mov
mov
mov
mov
add
add
adc
mov
adc
fsin
xlat
sub
add
add
add
adc
call
lods
les
xor
and
push
jae
fcomp
scas
ret
push
idivb
mov
add
add
add
add
mov
add
and
jb
daa
xor
add
add
dec
movsl
std
cmp
lret
xchg
pop
stos
out
mov
es
jmp
add
add
add
mov
js
mov
jl
xchg
in
pop
push
addr16
cmp
and
add
add
sbb
xchg
jae
push
mov
dec
dec
mov
mov
add
add
jecxz
divl
and
add
add
insb
add
add
adc
jnp,pn
out
fstpt
cmp
add
stc
sahf
and
int3
cmp
stc
pop
push
test
adc
test
add
add
sub
add
add
add
cmpl
enter
pop
andnps
stc
mov
add
add
ss
imul
add
fdivl
pushf
inc
mov
push
add
add
add
jnp
sti
stos
aam
scas
imul
cmp
vmread
xchg
in
mov
pop
out
out
outsl
lcall
push
jp
js
rolb
sbb
aam
iret
nop
repnz
movsb
mov
jl
add
add
rcll
xchg
add
add
add
test
jae
roll
pop
scas
faddl
push
test
sbb
mov
push
pop
fisubrs
mov
mov
mov
popf
sahf
cwtl
cwtl
push
aam
sub
add
add
pop
pop
sbb
add
add
add
push
adc
imul
lock
popa
jae
pop
or
add
add
repz
cmc
cltd
xchg
rcrb
ja
mov
mov
jge
pop
out
repnz
mov
add
add
add
movsl
icebp
mov
add
in
push
sbb
lahf
mov
aaa
dec
mov
or
pop
add
add
bound
inc
insb
mov
dec
add
add
mov
icebp
dec
pop
sahf
mov
sub
lcall
xor
mov
jnp
mov
out
mov
cmpsb
mov
adc
fs
push
movsl
mov
std
push
pop
andb
movsb
inc
mov
icebp
mov
mov
lcall
mov
mov
lds
sub
add
add
add
daa
push
arpl
stos
call
cmp
daa
mov
add
imul
jne
mov
or
add
add
stos
in
test
subl
add
add
push
jg
dec
add
add
mov
push
add
inc
adc
add
add
add
mov
push
daa
add
mov
xchg
fsts
es
mov
into
mov
out
lods
or
stc
cmp
popf
sbb
adc
shll
ret
jae
mov
xchg
push
je
iret
xchg
loop
add
add
add
daa
fiadds
cwtl
cmp
rdpmc
in
mov
push
mov
lret
push
ret
scas
and
add
add
xchg
and
or
add
add
push
mov
xchg
test
add
and
add
add
mov
sbb
mov
cmpl
sahf
lds
sbb
add
add
pop
movsb
cmp
sub
mov
mov
add
mov
sbb
aas
out
stos
dec
mov
adc
gs
add
adc
push
int
lret
xor
add
out
call
jo
xchg
mov
lcall
add
add
push
lahf
in
mov
mov
cld
sbb
in
dec
addr16
std
or
jg
ja
adcb
leave
notb
cmc
add
add
add
sub
ret
xor
pop
imul
add
add
add
add
add
cmc
push
jnp
rclb
in
sub
add
add
jle
sub
cwtl
pop
lcall
add
add
xor
add
negl
loopne
imul
jp
nop
addr16
popf
mov
data16
jge
jb
pop
pop
popf
sbb
pusha
mov
fs
jl
mov
ss
adc
inc
mov
sahf
enter
add
out
xor
inc
add
add
in
mov
in
mov
push
xchg
adc
push
xor
hlt
ret
bound
add
add
cmpsl
jp
add
test
je
es
pop
jmp
mov
push
ret
test
jl
mov
test
xor
sub
mov
cmpsl
repz
dec
add
in
and
add
add
icebp
or
mov
jne
scas
movsl
nop
inc
and
add
add
shll
add
mov
sbb
mov
aam
jne
mov
nop
mov
jle
in
mov
inc
cmpb
stc
sub
lea
add
add
mov
add
add
add
add
enter
inc
mov
push
dec
add
add
push
cmp
push
mov
add
add
add
mov
xor
jae
push
clc
test
mov
dec
mov
jne
out
es
sahf
addb
insl
push
lods
stos
mov
sbb
add
nop
fisubs
push
imul
jne
add
add
ja
mov
enter
nop
and
xchg
xor
shll
or
repz
dec
add
add
std
lcall
add
add
in
popa
cmp
mov
fistl
mov
add
add
mov
inc
mov
cmp
sahf
push
cwtl
push
or
add
add
scas
mov
add
add
subb
cmpl
jb
push
fmull
arpl
lret
inc
sti
ds
pop
push
out
lods
xor
sbb
roll
and
add
add
lahf
stc
lret
mov
test
loope
mov
scas
in
mov
add
add
add
add
add
aaa
aad
movsb
and
sbb
xor
or
add
pop
jge
stos
test
add
add
add
add
xor
sbb
mov
mov
xchg
ss
add
add
dec
mov
fsts
adc
call
shlb
repz
mov
movsb
and
fidivs
xchg
or
repnz
roll
int
jb
mov
add
add
bnd
iret
cwtl
dec
mov
mov
sahf
sbb
std
push
push
loope
scas
fidivrl
mov
dec
dec
mov
sbb
mov
xchg
dec
bound
or
or
push
sub
push
mov
js
out
xor
pop
xor
cltd
leave
std
push
lock
xorl
in
xlat
add
mov
mov
mov
sbb
adc
jno
mov
lret
sarl
inc
add
add
sbb
xchg
and
fadds
roll
dec
push
dec
add
add
adc
outsb
push
or
xchg
ret
int3
cmp
push
cmc
aaa
mov
push
aas
or
daa
rorl
add
lods
dec
shl
ret
and
jb
push
jns
sbb
add
add
add
push
mov
cmc
out
repnz
dec
insb
mov
ja
pop
jo
cmp
aas
xor
add
mulb
sbb
in
jecxz
mov
outsl
or
fisubl
pushf
mov
add
test
pop
mov
nop
repz
add
test
pop
jne,pt
sbb
pop
lret
adc
aam
pop
sub
pop
mov
or
add
add
icebp
mov
add
add
cmpb
xchg
cmp
or
ja
jbe
mov
cmp
adc
or
add
add
adc
add
add
or
add
add
xlat
jo
in
das
stos
xor
add
push
xor
jmp
add
add
aas
fs
xchg
xchg
xchg
enter
jmp
mov
and
add
arpl
mov
mov
int
ret
push
jp
cmp
incb
xor
das
sub
add
pop
dec
or
add
add
outsl
jo
ret
sbb
jmp
nop
add
add
add
and
add
add
enter
aaa
jnp
ds
ror
mov
lods
mov
pop
pop
add
add
add
xor
rolb
icebp
xchg
adc
pushf
xor
adc
and
add
pop
jnp
adc
sahf
inc
mov
jno
xor
push
cs
mov
mov
mov
adc
testl
sahf
cmp
sahf
inc
add
add
jae
add
inc
inc
and
enter
out
popf
adc
add
add
repz
add
add
scas
mov
cli
rorl
mov
pop
out
das
jecxz
fldt
pusha
add
add
icebp
mov
gs
add
in
mov
or
iret
in
cld
leave
mov
xchg
mov
mov
add
cmp
shr
push
xor
ljmp
pop
pop
xchg
aaa
and
add
add
cltd
push
sahf
std
lods
inc
sbb
mov
je
pop
daa
push
xor
cmp
popf
je
sub
ret
sub
push
sbb
push
loopne
xor
jle
enter
jg
xchg
jae
ljmp
jl
imul
mov
sbb
cmp
add
add
inc
mov
sbb
mov
mov
inc
cmpsb
nop
xchg
cmpsb
adc
fsubrs
push
mov
jle
push
fs
lock
mov
xchg
lds
push
jo
ja
iret
mov
mov
fld1
dec
fidivrl
sub
or
or
add
add
adc
mov
adc
adc
mov
mov
push
aad
test
mov
ror
leave
cmp
dec
jp
mov
pusha
mov
lods
shll
xor
dec
sub
add
add
call
cmc
mov
mov
add
add
fdivl
xchg
roll
mov
jg
in
gs
sub
add
add
ret
movsb
loop
xor
inc
mov
push
ret
test
hlt
icebp
popa
scas
mov
mov
cmc
sbb
and
mov
sub
add
shl
sub
add
add
popf
cmpsl
gs
add
xchg
push
cwtl
add
xchg
cmp
add
push
icebp
push
fnstsw
mov
mov
sub
add
add
jnp
test
xchg
xor
ja
push
shr
pop
enter
add
add
jno
testb
inc
cmp
xchg
mov
adc
mov
mov
test
mov
push
pop
dec
daa
cmp
inc
mov
mov
inc
frstor
add
daa
mov
push
clc
test
lret
adc
enter
add
add
enter
scas
mov
dec
adc
sti
mov
jge
ss
lahf
pop
jle
mov
ror
adc
mov
jnp
and
add
add
ljmp
add
mov
out
cwtl
jmp
add
add
xor
pop
xchg
inc
adc
fwait
aaa
lods
lock
inc
mov
xchg
lret
adc
push
and
add
add
ds
dec
add
add
inc
adc
add
push
aam
and
sete
js
xchg
dec
fdivs
mov
add
int
mov
add
add
or
int
pop
push
je
leave
push
aas
fisttpll
mov
add
add
shlb
dec
mov
dec
add
add
loope
pop
mov
cwtl
mov
mov
push
and
mov
es
mov
inc
pushf
pop
ljmp
xchg
sbb
xor
insl
pop
test
add
add
ds
dec
insb
mov
pop
xchg
int
pop
rclb
add
add
gs
clc
push
pop
stos
dec
jae
cmp
enter
and
xlat
out
fldl
lock
sar
ja
test
negl
das
pop
adc
dec
lret
xor
sbb
mov
rolb
leave
or
and
add
add
mov
mov
ret
out
insl
fisttpll
push
jne
cli
pop
fstpl
add
add
xchg
add
inc
loopne
jl
cwtl
in
popa
pushf
mov
adc
repz
mov
out
mov
add
scas
outsl
mov
lahf
jbe
aaa
push
adc
add
mov
test
popa
inc
xor
imul
notl
subb
add
add
add
add
lahf
add
add
add
cmp
arpl
add
nop
popf
push
mov
mov
hlt
add
add
add
push
xor
cmp
cmp
cmpsl
in
mov
cmpsl
cwtl
mov
add
rorb
adc
mov
xchg
shll
mov
sbb
add
inc
stc
add
mov
add
jbe
jb
test
add
add
add
lret
incl
lock
push
push
daa
div
jecxz
push
out
mov
mov
dec
mov
fadds
dec
pop
xor
add
bound
loopne
mov
dec
hlt
enter
icebp
inc
and
js
add
gs
rorb
push
xlat
dec
pop
mov
add
mov
stos
movsl
and
add
add
xchg
xorl
scas
push
cmpsb
imulb
mov
push
mov
sbb
mov
les
add
add
xchg
nop
loopne
cmc
enter
out
jbe
cmp
jmp
mov
pop
je
mov
add
add
add
ljmp
add
add
add
add
stos
lds
popa
xor
outsl
xchg
data16
in
jne
xchg
pop
cmp
add
add
testl
add
xor
out
lcall
xor
adc
clc
jno
outsl
sub
pop
jns
fildll
stos
inc
shrb
add
add
add
add
add
mov
out
mov
add
jns
fldcw
adc
sbb
add
add
inc
test
lcall
add
push
cwtl
xor
push
inc
das
dec
add
add
mov
mov
add
add
ja
inc
push
push
mov
dec
jae
mov
add
movsb
clc
das
test
out
and
inc
xor
shrl
std
xor
inc
xchg
dec
hlt
leave
and
add
add
test
popf
rcl
inc
add
add
cmp
outsl
sub
add
add
fs
in
mov
add
and
add
add
cmp
lock
ret
push
push
dec
mov
pop
fidivrs
cmc
add
nop
adc
cmp
test
pop
xchg
xlat
push
jno
add
add
pop
pop
out
lods
iret
fistpll
fdivl
out
add
add
add
aad
sub
mov
and
add
add
add
in
scas
mov
mov
add
add
arpl
lock
xchg
push
mov
and
dec
pop
jno
lret
inc
ret
inc
xlat
add
mov
add
push
fldl
stos
mov
leave
rorl
cmp
fdivs
enter
fisubrl
xor
clc
add
pop
mov
mov
ja
jle
sarl
popa
add
add
sahf
cltd
jmp
mov
or
add
add
sub
mov
dec
mov
xchg
cmc
add
pop
adc
xor
out
inc
mov
jecxz
or
xchg
push
mov
add
add
add
add
mov
xchg
shlb
push
cmpsb
call
popa
lahf
and
add
add
adc
add
add
movsl
pop
aam
cs
mov
ffreep
fldenv
les
mov
cs
pop
arpl
add
add
shrl
xchg
arpl
inc
mov
add
add
adc
loopne
rclb
sbb
dec
mov
mov
sub
shr
out
cmp
outsb
cmp
rolb
cltd
xchg
xor
lcall
add
push
iret
out
jg
shr
mov
out
inc
xchg
push
push
sub
nop
add
add
cld
test
add
add
out
mov
lret
push
scas
imul
add
jp
gs
pop
adc
or
fcomi
or
add
add
cmp
jns
xchg
xor
mov
data16
sub
xor
les
sub
lcall
fcomps
stos
rol
scas
sub
add
cwtl
dec
cmp
mov
add
adc
mov
add
jmp
mov
jecxz
jmp
sahf
ret
jmp
jnp
add
add
xor
and
mov
mov
rcrl
push
sub
cwtl
sub
add
add
mov
rorl
pop
push
sub
add
add
jae
cmp
push
lahf
into
jle
xchg
add
jmp
mov
clc
push
enter
cmp
jnp
add
cwtl
iret
mov
add
add
adc
pop
test
leave
push
popf
pop
mov
aam
mov
mov
cmp
jne
pop
out
sbb
sbb
jl
sub
add
add
pop
xchg
fstpt
push
fmull
add
add
ljmp
test
inc
or
mov
lock
iret
out
mov
mov
push
xchg
add
add
cmp
add
add
mov
jmp
cmp
jbe
in
cli
mov
jg
ja
xor
xchg
les
add
add
inc
add
add
shrb
push
data16
push
xor
and
xor
lea
imul
add
add
sti
ljmp
add
add
lahf
sub
add
add
sub
cmp
push
xlat
in
mov
add
add
xor
cmc
js
clc
mov
mov
mov
pmaxub
push
add
cltd
cmp
and
insb
mov
dec
mov
enter
pop
push
out
xchg
cmp
dec
icebp
pusha
add
add
xor
dec
mov
add
add
mov
stos
ss
xor
add
add
je
or
add
mov
aaa
cmp
dec
adc
inc
mov
and
add
icebp
shl
xchg
rorb
pop
in
ret
push
repz
test
sbb
add
add
mov
out
inc
xor
xchg
adc
fstpt
mov
in
nop
and
add
sub
add
add
push
add
int
pop
test
mov
jp
pop
and
add
add
stos
jecxz
imul
inc
mov
xchg
push
lret
imul
push
or
lahf
rcrb
jecxz
loope
cmp
cmp
inc
sbb
pop
jno
and
add
add
clc
sti
push
cmc
or
adc
add
fs
nop
hlt
push
mov
jae
pop
cmp
in
imul
and
test
in
push
mov
and
add
add
add
add
lcall
xchg
movsb
jae
inc
sbb
rcl
xor
push
lret
loope
add
add
pushf
icebp
sub
lods
into
xchg
enter
mov
sub
fwait
pop
out
mov
xchg
jmp
add
add
data16
mov
jecxz
add
add
sub
add
add
mov
and
and
add
add
test
notl
cmp
jg
shlb
add
ds
lds
xchg
add
add
fwait
arpl
inc
rcll
je
fcoms
sub
enter
inc
inc
mov
sbb
into
xchg
sub
add
inc
in
push
and
outsb
xchg
addw
push
push
in
push
aaa
inc
loopne
cwtl
cmp
pop
test
in
or
dec
mov
jmp
mov
andb
mov
push
shrl
aas
push
pop
stc
bound
add
adc
mov
add
andl
adc
je
nop
and
or
flds
es
sub
ss
cmp
lods
cmp
stos
jp
and
xor
push
cmp
shll
mov
adc
int
and
add
add
stc
fisubrl
stos
mov
stos
int
mov
cwtl
mov
add
jns
mov
in
xchg
dec
mov
mov
add
add
dec
icebp
mov
xorl
xchg
or
add
add
and
pop
test
mov
rcl
insl
std
movsl
lods
push
pop
popf
outsb
leave
push
inc
outsb
sbb
jl
xor
lea
add
jo
mov
push
push
pop
std
push
dec
adc
lods
shl
dec
aaa
xor
and
mov
aas
test
ds
movnti
jae
push
push
lds
mov
inc
xor
faddl
or
add
add
mov
jb
lahf
jnp
pop
int
push
int3
js
repz
add
outsl
out
mov
xchg
cmovs
add
add
movsb
shlb
mov
sahf
es
jg
push
sub
add
add
mov
mov
mov
or
add
add
mov
imul
mov
out
cmpb
rcll
fs
xchg
add
int
outsl
aas
push
mov
sub
in
cwtl
adc
add
xchg
cmp
add
add
sub
add
mov
xchg
and
add
mov
test
popa
pushw
xor
pop
jecxz
mov
add
fisubs
add
add
sub
jo
push
insl
test
sbb
and
lahf
and
adc
shr
pop
mov
pop
push
sbb
into
ja
out
das
xchg
daa
imul
lea
lret
jbe
or
fadd
insl
mov
adc
push
add
add
add
mov
ret
inc
ss
xchg
popf
mov
rol
add
add
imul
sbb
mov
pop
je
xchg
mov
les
add
add
mov
sub
mov
icebp
insl
sbb
stos
sub
add
ss
mov
lcall
add
add
popa
mov
add
add
and
daa
mov
add
add
jnp
pop
ljmp
pop
and
fnstenv
xor
jo
add
add
pop
hlt
insl
mov
call
lds
sub
add
add
and
std
data16
sub
or
mov
pop
cld
push
push
add
add
dec
xchg
cmp
xor
push
js
pop
push
jnp
jle,pt
push
push
outsb
jbe
mov
into
and
out
je
cmp
ds
leave
mov
jnp
sub
bound
jae
xor
cmpsb
xchg
mov
sbb
cmpsb
dec
sbb
add
add
mov
add
sub
mov
popa
or
cmp
test
sub
add
cs
add
add
add
orb
out
movsl
nop
fdivp
fstpl
or
mov
jecxz
mov
sub
xor
test
and
add
add
sbb
push
add
out
xchg
test
mov
les
icebp
pusha
add
add
pushf
sarl
testb
cwtl
iret
sub
test
jns
dec
pop
jbe
and
pop
mov
add
add
pop
test
insl
jno
add
add
cmp
sub
xchg
dec
daa
inc
sbb
iret
sbb
mov
popa
jnp
add
daa
add
add
pushf
xchg
cmp
leave
je
clc
xor
mov
ret
popa
iret
pop
aad
fiadds
add
add
imul
xchg
dec
mov
dec
push
jne
enter
ret
add
add
add
sub
mov
hlt
dec
adc
jo
jle
mov
lret
or
mov
shr
mov
je
mull
add
add
cld
jg
jp
jge
insl
mov
ret
imul
mov
mov
mov
mov
mov
inc
int
mov
data16
pop
inc
add
add
movl
call
movsl
decb
sbb
dec
cmpsb
xchg
jecxz
or
inc
pushf
push
lods
push
adc
dec
ja
hlt
loop
inc
mov
vmread
insb
add
add
sub
das
fisubrs
or
mov
xchg
sbb
mov
popf
push
out
cmp
enter
jecxz
faddl
mov
cmp
int3
jns
or
add
add
or
cmpl
add
add
mov
inc
cld
fcomps
and
mov
out
loope
mov
push
movsl
insl
insl
cmc
fucomi
loop
pop
dec
mov
fisubrs
add
add
hlt
push
adc
cmp
add
jb
pop
xor
xchg
cmpsl
sub
bound
cwtl
sbb
stc
push
movsl
adc
jl
ret
cli
lret
into
sbb
xchg
add
add
sbb
cli
push
jbe
pushf
jecxz
shlb
xchg
cmp
test
imul
add
add
orb
cld
lahf
mov
pop
mov
mov
jecxz
sti
popa
roll
mov
das
call
outsb
call
push
cld
out
in
fcomps
dec
aam
cmpsb
clc
cmp
int
rolb
mov
or
add
add
mov
jg
add
adc
mov
jp
dec
add
add
sub
add
xlat
pop
dec
cwtl
inc
pop
rclb
inc
add
add
xchg
adc
sbb
xchg
cli
repz
mov
lock
adc
out
xchg
or
daa
dec
add
add
xchg
mov
imul
je
add
add
add
xor
mov
add
add
jns
mov
add
add
shll
or
rolb
lods
loop
xchg
dec
jbe
mov
adc
fdiv
bound
add
xchg
negl
or
xlat
mov
aas
push
mov
mov
push
js
mov
enter
xchg
movd
xchg
in
data16
xchg
mov
loop
mov
pop
hlt
les
add
push
mull
add
fdivr
je
xchg
inc
mov
mov
pop
push
jle
xor
add
add
mov
mov
loopne
sbb
pusha
mov
jno
or
add
add
add
adc
test
add
and
out
jge
pusha
mov
movsb
inc
adc
adc
jmp
loopne
mov
add
add
push
add
and
sub
add
add
add
add
dec
mov
jl
addr16
daa
push
pop
add
cmc
sbb
add
add
fisubrl
push
das
mov
add
add
add
std
lds
add
add
sbbl
out
xchg
mov
fmul
repnz
enter
inc
mov
mov
adc
in
fisubl
add
add
scas
inc
and
std
pop
lcall
xchg
ret
add
add
push
xchg
imul
mov
ret
outsb
cmp
sbb
pop
push
inc
shl
push
add
mov
jge
dec
ret
sub
lock
inc
push
aas
inc
xor
add
push
repz
ret
push
int3
arpl
inc
sub
add
add
pop
mov
xor
cmpsl
pop
xchg
cmpsl
add
add
pop
sub
mov
add
add
test
add
jno
push
dec
dec
out
add
add
data16
mov
inc
shl
ffree
xchg
push
dec
int3
mov
cmp
sti
mov
push
dec
add
add
into
loopne
add
add
sub
xchg
loopne
dec
repnz
xor
sbb
mov
out
mov
cmp
aas
fbstp
fmul
lret
and
add
add
dec
pop
mov
jo
das
mov
jecxz
mov
mov
rclb
add
push
or
mov
cmp
loopne
mov
fucomip
stos
fwait
adc
add
add
mov
lods
pop
in
mov
xchg
aam
and
outsl
and
call
add
xor
popa
jns,pn
adc
xchg
jo
inc
jb
push
cmp
mov
add
push
int3
mov
sbb
adc
push
mov
imul
aad
and
add
add
pop
lods
pushf
loope
push
fnsave
mov
std
add
loopne
lret
sub
add
add
mov
or
add
add
sbb
add
add
pop
sbb
cmpsl
je,pt
cmp
sbb
ljmp
aam
xlat
ds
out
push
mov
jno
aaa
dec
mov
push
and
add
add
leave
pop
add
add
add
mov
fcomp
mov
mov
fcompl
add
mov
add
xchg
sub
imul
push
rorb
mov
push
mov
add
add
mov
mov
mov
cmp
sbb
add
fisubrl
and
add
add
adcb
jp
or
add
add
addr16
into
push
dec
cli
and
add
add
push
testl
push
popa
stc
mov
jo
hlt
movsb
insl
int
addb
jne
imul
or
push
icebp
lret
fcompl
inc
mov
lahf
cli
fstpl
jno
data16
or
add
js
popa
cmp
mov
mov
mov
stc
sub
fwait
sub
add
add
jo
lahf
dec
pop
inc
add
ds
and
add
cmp
inc
dec
mov
inc
add
add
push
inc
test
mov
mov
aad
dec
or
andl
stc
jmp
or
inc
insb
add
add
adc
or
dec
es
lds
add
xchg
mov
push
aaa
lods
cmp
idivb
push
push
dec
xor
pop
pop
cmp
movsl
ret
adc
mov
cmp
pop
stos
in
test
aad
push
dec
std
mov
push
cld
and
add
add
jmp
mov
add
pop
push
xchg
adc
cmp
pop
sub
add
adc
jns
lods
dec
push
into
lcall
sub
scas
xor
bound
mov
mov
jecxz
adc
xchg
or
add
int
pop
mov
lods
fcoms
daa
outsl
stc
and
add
or
addl
xor
mov
lds
icebp
lods
cmp
stc
out
out
into
push
popf
pop
and
sbb
sub
xor
movsb
mov
arpl
or
mov
in
cmc
imul
add
jge
or
add
add
dec
or
pop
movsb
imul
add
cmp
mov
add
add
cwtl
je
or
add
add
push
lea
add
add
mov
push
test
xor
mov
push
inc
sarl
jb
fldenv
sbb
add
xchg
mov
sbb
jo
shl
pop
aad
aas
ljmp
add
add
ja
pop
sbb
add
xchg
pop
rolb
pop
lret
insl
std
popa
mov
int
sub
add
add
and
add
add
xor
dec
js
add
fbld
aam
loopne
pop
mov
loop
orl
mov
nop
cmpsl
mov
add
add
add
out
loopne
mov
loop
jg
rorl
add
insb
add
add
mov
inc
sbb
jno
fldcw
add
add
in
xor
add
add
call
outsl
out
mov
sbb
in
enter
add
add
xlat
mov
add
add
add
ja
ljmp
fisttps
sbb
fsubr
aam
mov
xor
mov
fisubrl
xchg
es
lret
out
mov
add
jle
sbb
add
add
jmp
sbb
sbb
cmp
loop
xor
add
xchg
push
aaa
aaa
dec
pusha
mov
sbb
lret
jbe
dec
decb
rcrl
fcompl
pushfw
lods
rcl
addr16
push
in
loope
and
push
add
add
add
bound
loopne
das
outsl
sub
lahf
rorb
add
or
and
add
add
dec
mov
mov
add
jg
cmp
ljmp
mov
jge
dec
add
xor
hlt
cmp
test
pop
push
push
call
add
add
add
mov
stos
push
jge
pop
int3
repnz
add
das
loopne
mov
fldenv
add
repnz
jecxz
fcompl
jmp
push
fsts
sub
xlat
imul
jl
inc
mov
jp
cmp
mov
es
push
test
or
pushf
sbb
lcall
mov
outsb
pop
cmc
push
stos
sbb
push
pop
jge
lahf
insb
add
add
imul
test
push
push
ror
cwtl
jns
jp
pop
cld
stos
add
stos
push
or
push
inc
add
add
std
mov
scas
push
pop
outsl
sub
sub
adcl
mov
add
add
ret
or
or
add
add
xchg
mov
add
lds
add
fcoms
std
add
iret
pop
rcrl
int
mov
dec
cmpsb
popf
mov
jl
mov
aaa
pop
stos
ret
lret
popf
clc
sbb
aam
subl
lods
hlt
imul
cmp
scas
in
sub
sub
add
add
mov
dec
mov
mov
push
inc
dec
add
add
movsl
into
jnp
add
add
insl
das
rcrl
scas
sti
cwtl
mov
add
rcrb
daa
pusha
mov
add
add
and
lcall
ret
movl
or
mov
mov
sbb
adc
add
add
add
add
js
and
jle
ljmp
ret
jmp
add
add
sub
sbb
add
cmpsl
movsl
sub
add
add
addb
pop
imul
out
fists
ret
mov
inc
mov
pop
sbb
pop
xchg
in
jle
mov
mov
push
ds
pushf
cmp
repnz
and
pop
je
and
add
add
pushf
inc
stc
aas
inc
push
mov
cmpxchg
add
add
daa
in
pop
ds
div
mov
jmp
rolb
mov
out
add
sbb
in
push
and
add
add
dec
fdivrs
fisttpl
add
push
movb
add
or
out
xor
mov
adc
mov
leave
clc
add
mov
jae
aam
add
add
push
xchg
inc
in
sub
mov
mov
xchg
shrl
add
pop
popl
mov
es
shlb
hlt
pop
mov
push
jg
inc
xchg
inc
rcr
lret
mov
js
push
stc
fwait
in
cli
inc
mov
int
mov
mov
pop
int3
mov
sbb
data16
mov
push
jecxz
cmp
pop
rcrl
add
add
loope
mov
add
mov
mov
test
jl
mov
dec
imul
jmp
push
lcall
xor
cmp
mov
clc
stos
cmpsb
xlat
fiadds
testl
fcoml
fldl
icebp
and
in
out
adc
mov
adc
movl
sbbl
aad
pushf
lock
push
pop
icebp
dec
addb
adc
cmp
loopne
fs
outsb
shlb
dec
mov
test
cltd
les
add
add
test
xorb
or
add
add
and
rcr
aaa
jle
mov
addl
add
jl
push
xchg
insb
add
add
in
outsb
cmpsl
cmp
fisttpl
sbbl
fisttps
out
sub
fldt
loopne
xor
lahf
dec
add
add
mov
fisttpl
mov
xchg
and
add
ja
pushf
enter
push
pop
dec
jno
pop
movb
cmpsb
pop
sti
data16
sbb
adcl
rolb
mov
je
mov
jg
xor
or
int
inc
mov
jne
jb
cmpsb
test
mov
mov
shrl
cmp
lret
inc
mov
jecxz
add
add
add
push
jg
pop
inc
add
add
cmp
rorl
xchg
sub
jecxz
or
loop
mov
ss
push
mov
dec
mov
das
jns
add
add
loop
es
jge
mov
ret
xchg
dec
cmc
pop
fcomps
loop
arpl
xchg
fildl
push
lock
and
push
movntq
out
repnz
push
adc
mov
jmp
daa
movsb
adc
lret
dec
adc
jmp
mov
add
mov
add
jb
mov
pushf
inc
adc
test
sub
cmp
add
je
mov
js
es
sbb
mov
mov
aas
sti
xchg
inc
dec
sbbb
mov
xlat
sbbl
repnz
add
add
pop
add
mov
sbb
mov
decb
hlt
loope
ja
aas
pushf
cmp
sub
cmp
fcomps
add
hlt
sub
inc
lahf
lcall
iret
adc
daa
ljmp
sbb
movsl
xchg
dec
movsb
sbb
add
mov
into
jecxz
add
add
filds
mov
sub
add
add
jl
cld
inc
stc
mov
inc
orb
test
add
add
sub
add
add
adc
cmp
add
mov
dec
icebp
call
add
add
jl
xor
add
sub
outsl
cmp
stc
lahf
rorl
inc
test
sbb
sub
iret
mov
mov
dec
lock
push
mov
icebp
dec
push
push
lods
aaa
cld
xor
mov
insl
rorl
jnp
push
adc
and
add
add
test
aas
or
cmpl
fisubrs
fnstenv
add
dec
leave
scas
mov
xchg
xchg
insb
mov
or
push
xchg
mov
add
loope
fwait
xchg
pop
mov
add
xor
cmpsl
stc
ss
ret
add
add
add
add
cmpsb
or
add
add
jg
sub
loop
mov
loop
cld
inc
fldcw
gs
add
add
icebp
into
stc
and
add
add
jmp
add
add
add
mov
out
fldl2t
mov
icebp
out
sbb
add
jge
mov
add
add
add
add
jo
shll
xor
mov
fcomip
repz
leave
mov
add
lds
jo
xchg
xor
xor
push
fnstcw
sbb
call
mov
repz
ja
incl
cmp
in
push
xor
sub
ljmp
jo
fcoml
stos
cmp
das
sub
mov
movsb
pop
jecxz
cmpsl
mov
cmp
test
sbb
loope
xchg
or
sub
add
add
add
xchg
int3
fwait
lock
mov
mov
js
lods
iret
pop
icebp
inc
add
add
push
cmp
es
rolb
add
ds
enter
inc
add
add
add
lahf
daa
pop
hlt
lahf
and
hlt
pop
sbb
inc
adc
xlat
or
mov
pusha
add
add
jmp
cmpl
sub
add
add
xchg
xchg
rcl
cmp
shl
xchg
push
cmp
add
or
add
add
add
scas
pop
cmp
ffree
push
lret
popa
pop
sar
imul
sub
jmp
push
jne
fistpl
mov
add
add
xchg
outsb
adc
cmp
into
mov
stos
mov
dec
add
xchg
cmpsl
bound
mov
add
add
add
add
add
add
inc
pop
imul
dec
inc
add
add
add
sub
sbb
add
add
fiadds
call
imul
sub
jecxz
xchg
iret
dec
movsb
fwait
mov
add
sub
add
add
cmpsl
jno
outsl
or
arpl
fbstp
fwait
movsl
ja
cs
mov
xlat
cltd
ror
cmp
mov
js
cwtl
test
sarb
pushf
adc
inc
mov
cmp
imul
in
cltd
xor
mov
add
pop
insb
add
add
divps
xchg
sbb
or
mov
dec
add
mov
adc
fdivr
aaa
test
popf
pop
ret
icebp
sarl
push
jle
imul
mov
xlat
popf
lock
mov
cmp
and
mov
jns
cmp
and
jbe
sub
pop
mov
jbe
mov
insl
or
add
add
push
les
and
xchg
jae
lock
mov
inc
imul
add
add
pop
or
cmp
pop
pop
sub
xchg
roll
pushf
loop
pop
mov
aas
dec
fucom
jae
mov
out
mov
pop
lret
inc
add
add
popf
sub
add
add
std
sub
fwait
mov
add
mov
cmp
xchg
and
push
adc
outsb
jmp
add
adc
cltd
loope
pop
mov
mov
jae
hlt
loope
push
xchg
jle
and
dec
dec
inc
add
add
jle
cmp
add
xchg
add
add
add
adc
add
add
add
xor
scas
mov
add
add
loop
mov
mov
add
or
jbe
clc
pushf
into
xor
jl
into
adc
in
push
pop
and
jns
inc
fmuls
mov
inc
in
pop
outsb
notb
add
es
push
out
insl
std
outsb
std
sarb
add
lea
int
popf
or
dec
call
mov
xor
inc
lock
inc
lahf
icebp
cmp
mov
add
add
add
add
add
sub
add
add
mov
dec
and
fimuls
add
add
jo
pop
ja
hlt
pop
outsl
shrb
scas
jno
xchg
mov
daa
outsb
fwait
and
add
add
stc
sub
add
add
arpl
pop
aam
or
cwtl
in
pop
fsubrs
nop
sub
ret
lock
icebp
movsb
fadd
mov
pushf
sub
mov
loopne
push
addl
jg
mov
test
fcmovbe
adc
add
add
mov
jge
jns
dec
inc
add
ljmp
xor
add
add
lock
add
add
lahf
pop
jnp
test
setbe
rcrl
or
add
add
add
add
and
hlt
mov
add
add
test
push
adc
inc
sbb
fistpll
ss
inc
dec
sbb
pushf
sbb
mov
leave
push
dec
lahf
push
pushf
sub
jg
xchg
js
mov
jb
ficoms
je
add
add
shll
xchg
in
jbe
repz
mov
xor
outsb
outsb
pusha
mov
lods
add
xor
fwait
cmc
aaa
fcmovnb
out
mov
mov
repz
dec
add
add
loopne
gs
mov
add
xor
mov
pop
gs
movsb
test
into
nop
mov
hlt
jne
inc
cmpsl
sub
sub
lret
pop
jg
adc
fsub
xchg
xchg
sbb
jle
mov
and
add
add
add
add
mov
jne
cmc
out
lods
mov
repnz
dec
add
add
cltd
pushf
xchg
add
sub
add
add
xor
cmp
das
ds
sub
sarl
xor
add
orb
jo
xchg
add
or
cmp
or
int
leave
sbb
add
add
lock
mov
or
stc
movl
add
add
loop
rorb
pushf
push
push
mov
push
cmp
add
add
sub
add
add
insl
adc
adc
push
dec
popl
call
pop
aas
testb
jmp
hlt
lock
fistpl
jb
push
xchg
push
xor
dec
in
mov
notl
add
add
mov
add
add
ja
mov
jo
dec
and
add
add
add
in
adc
or
dec
es
pusha
add
add
mov
xchg
mov
lahf
xlat
sbb
movsl
dec
push
nop
push
daa
test
add
int
push
out
filds
mov
mov
add
add
add
lret
sbb
or
mov
cmp
jno
fdivl
lcall
push
cltd
out
lds
push
xchg
iret
cmpsl
pop
out
lret
arpl
push
sub
add
jae
mov
imul
add
mov
out
adc
add
daa
jno
sahf
pop
test
into
les
fdivl
add
int3
jo
rclb
mov
add
push
and
add
inc
call
mov
mov
loope
add
add
sbb
push
pop
ss
mov
and
add
add
add
js
pop
dec
sbbl
mov
out
sbb
outsl
jg
fwait
fwait
jo
mov
or
je
cmp
pop
sbb
js
or
inc
out
and
cmp
dec
lea
jbe
push
jnp
out
push
jl
jb
fcmovu
test
movsb
mov
inc
and
add
add
mov
dec
cmp
jl
popf
push
xor
movsb
mov
addr16
sahf
loope
add
add
xchg
repz
sbb
or
push
sbb
xor
inc
dec
ds
add
fwait
in
mov
sbb
je
cmp
add
add
jl
outsb
sub
push
push
xor
fimull
out
dec
or
add
add
roll
lahf
and
fcompp
sahf
popf
mov
mov
int
mov
mov
inc
xchg
mov
lods
mov
and
ret
xchg
inc
mov
pop
or
add
add
ljmp
add
stos
enter
adc
mov
pop
fsubr
cli
sub
mov
int
mov
jbe
jo
lret
sahf
jno
dec
mov
cltd
mov
mov
mov
sub
add
add
jno
pop
inc
mov
jne
int3
cltd
xchg
add
add
add
mov
mov
push
mov
mov
add
add
add
or
add
shlb
sbb
mov
xchg
test
into
or
add
add
cmc
pop
insl
xlat
leave
or
test
sbb
and
add
add
stos
push
adc
add
mov
jmp
add
fadds
and
cli
inc
movb
scas
dec
add
add
pop
pop
adc
shl
pusha
add
add
imul
test
fwait
add
imulb
mov
dec
add
add
cmp
adc
adc
mov
stc
stos
pop
add
add
add
leave
pop
and
inc
cmpsl
or
add
add
es
je
mov
sub
add
add
ror
cmp
push
push
flds
mov
cmp
mov
scas
aaa
pop
popf
xchg
aaa
lods
pop
adc
arpl
and
add
add
add
outsl
repz
lock
mov
mov
bound
dec
loopne
and
vmovaps
jle
popf
and
add
add
add
lock
scas
popa
inc
mov
add
jp
add
push
cmp
push
and
push
adcb
movsb
push
addr16
dec
push
dec
mov
fldcw
into
mov
adc
outsb
mov
shr
dec
out
addr16
fidivl
mov
dec
nop
mov
add
stc
aaa
and
add
add
xor
push
jmp
mov
sbb
insb
mov
cmc
jnp
push
cmc
xchg
in
jbe
mov
daa
or
add
int
arpl
mov
fcomps
test
popf
push
gs
inc
mov
and
add
add
add
add
clc
stos
jmp
inc
aam
cmpsl
push
mov
mov
pop
fwait
jae
jno
xor
andl
cmp
adc
mov
jno
sub
scas
sbb
sti
xchg
shll
jle
add
add
es
out
push
iret
rorb
add
add
add
mov
pop
cmpsl
jg
push
loopne
mov
mov
add
push
ja
mov
sub
fdivrl
cmp
lea
orl
mov
bound
pusha
add
add
movsb
xchg
lahf
or
dec
mov
cmp
cmp
or
add
fadds
fidivrl
icebp
clc
stc
mov
add
jno
shlb
mov
mov
jb
sti
cs
mov
jns
mov
xchg
add
push
cs
lret
jae
shr
xchg
insb
add
add
js
xlat
clc
fwait
lock
push
cmc
xchg
add
add
add
lods
sbb
or
add
add
add
cwtl
es
adc
cmc
mov
xchg
push
pushf
mov
mov
sbbl
add
add
push
xor
notb
cli
rcll
lahf
and
add
add
pop
jle
push
lods
aas
dec
ret
xor
jmp
jmp
aad
outsl
jge
add
add
add
xchg
addl
loop
pushf
cbtw
and
dec
mov
push
xchg
inc
push
mov
mov
repz
imul
negl
add
add
outsl
sti
push
outsl
out
xlat
cmp
add
loop
add
add
add
shrl
mov
js
sbbb
clc
pop
jo
mov
ret
movl
es
clc
xor
mov
xor
pushf
call
inc
hlt
inc
fmul
jmp
inc
and
add
add
inc
push
loopne
scas
push
pop
mov
lcall
jg
and
mov
mov
daa
mov
mov
push
pop
stos
lret
repnz
jle
arpl
test
pushf
sub
ja
dec
add
add
cwtl
cltd
in
inc
rol
dec
cmp
sahf
pop
gs
sbb
pop
and
add
add
inc
push
xor
rorb
jno
aas
mov
stos
ret
das
xchg
loope
in
js
xchg
mov
je
sub
add
add
add
add
push
cmp
xchg
popa
mov
add
add
mov
sbb
add
addr16
orl
pop
shll
add
lahf
pop
xchg
je
push
sbb
add
jl
dec
add
add
add
sti
scas
stos
xchg
cmc
test
test
xchg
ss
sti
sar
shl
and
add
add
sarl
lret
dec
mov
mov
add
jecxz
rolb
dec
cmp
pop
push
addr16
pop
jg
mov
shll
outsl
push
xchg
jle
jns
inc
leave
dec
in
jo
xchg
loop
adc
fisubrl
add
add
je
stc
iret
sub
add
add
enter
add
dec
mov
sub
add
add
jmp
add
pop
jb
lcall
mov
mov
push
dec
and
add
add
add
cmp
xchg
pop
cmp
xchg
data16
push
xchg
enter
adc
xchg
ds
sbb
repnz
icebp
xchg
in
arpl
stos
jno
fnstsw
xlat
or
mov
pop
test
or
add
add
outsl
sub
add
add
pop
add
add
add
xchg
xorl
or
add
add
add
add
or
add
add
add
add
or
iret
sbb
scas
bound
mov
ja
sub
cmpsb
xchg
pop
int3
fs
xorl
jno
stos
lds
daa
jle
sbb
loopne
pop
les
push
iret
scas
sbb
aas
pop
add
mov
sub
and
add
add
mov
movsl
push
loop
clc
fistpll
add
add
fistl
cs
fnstenv
into
and
jg
imul
stc
je
mov
mov
xor
add
inc
pop
mov
push
das
sub
adc
shlb
sub
add
add
mov
fsts
add
insl
push
mov
or
nopl
pop
lcall
cmpsl
mov
out
in
adc
sub
add
add
ret
or
add
inc
add
add
rcrb
add
inc
mov
test
mov
push
dec
cmp
sub
add
add
add
test
pop
or
out
cmpsb
scas
insl
adc
sbb
and
out
jl
sbb
cs
shl
ja
dec
add
add
and
ss
jle
cwtl
xor
add
daa
psrlw
sbb
add
add
stos
lret
mov
sbb
cmp
xor
add
add
mov
mov
rol
mov
nop
jge
push
mov
repnz
fxch
fwait
pop
je
jge
xlat
jmp
add
add
addr16
push
dec
leave
mov
leave
adc
ljmp
jmp
movsb
xchg
inc
push
pop
adc
dec
mov
stos
add
shrl
enter
add
or
pop
and
add
add
sub
sbb
das
mov
test
dec
fidivrl
pop
pop
ret
dec
xor
mov
dec
mov
les
add
add
adc
sbb
push
pop
xchg
cmp
cmp
jecxz
add
add
add
xchg
inc
sub
add
add
stc
xchg
push
mov
mov
fstpt
out
xchg
sahf
cmc
rsm
insl
inc
mov
pop
xchg
dec
sbb
in
test
adc
in
mov
jne
dec
mov
add
add
add
aam
cwtl
xchg
or
add
add
lahf
int
push
mov
sti
jg
adc
jne
sub
add
fildll
iret
add
add
add
add
add
add
add
jecxz
lret
sbb
xchg
in
movnti
insl
mov
and
out
cmp
or
add
add
push
rolb
dec
lret
filds
leave
xor
fstp
inc
add
imul
dec
add
add
pop
leave
inc
mov
addr16
adc
jecxz
add
loopne
movsl
mov
sub
add
add
std
fisubrs
gs
mov
pop
popf
sarl
lock
ret
add
add
mov
int
inc
xchg
mov
lea
iret
push
mov
lcall
lret
scas
fsubs
add
add
adc
add
andl
add
outsb
add
repnz
xor
adc
add
dec
mov
fmuls
add
add
add
addl
jl
pop
movsl
sbb
mov
adc
mov
cltd
pop
or
add
add
leave
cmp
cmp
aam
jmp
mov
add
sub
add
add
inc
mov
pop
sarl
mov
lret
je
push
rorl
jge
in
sub
add
add
mov
and
add
ss
add
add
add
add
mov
nop
enter
in
jp
test
test
inc
test
mov
xor
jnp
sti
sti
int
pop
cld
sbb
push
or
popf
les
lret
aaa
add
insl
jmp
outsl
jmp
add
pop
inc
mov
data16
mov
add
add
jno
xchg
mov
fwait
ret
int3
int
cmp
add
add
lret
mov
clc
xor
mov
sahf
ja
and
add
add
and
add
add
xchg
dec
inc
mov
sbb
xchg
lret
inc
cwtl
inc
sub
add
add
and
or
mov
jb,pt
mov
push
mov
int
pop
cmp
lret
inc
mov
pop
fwait
enter
popf
frstor
lea
decl
add
test
jge,pn
in
inc
out
test
stos
cmp
out
fwait
sarb
arpl
jle
mov
test
inc
popf
lds
addr16
inc
sbb
in
and
inc
shrb
mov
jle
mov
push
outsl
cmp
lods
mov
add
and
add
add
add
add
out
mov
adc
jno
xor
add
add
loop
mov
jns
jg
sahf
fldenv
enter
ds
cmc
pop
dec
xchg
pushf
mov
mov
add
add
mov
or
xchg
adc
mov
in
add
add
push
fsubr
inc
andb
ljmp
rclb
add
add
add
dec
dec
mull
ja
xchg
insl
movsb
mov
nop
jnp
je
out
jbe
ja
cmp
shlb
fsubs
push
inc
repz
cs
shrb
das
xor
pop
enter
adc
jmp
rorl
push
pusha
add
add
sbb
mov
iret
das
std
pop
mov
ret
push
sahf
aad
add
add
cltd
clc
ret
mov
mov
les
mov
gs
pop
inc
mov
sub
and
or
daa
ret
or
push
repz
fcom
sbb
incb
stc
adc
shlb
aas
mov
iret
ret
scas
add
les
sbbl
add
scas
mov
das
cmp
jo
sub
jo
outsb
jle
mov
dec
sub
add
add
add
add
push
mov
fadds
add
add
add
add
add
add
aaa
sbb
adc
add
add
push
and
add
add
pop
push
addr16
push
mov
dec
add
add
push
lock
lods
fstps
inc
ss
outsb
pop
movsb
call
inc
jmp
xchg
fwait
cmpsl
push
int
shll
cli
pop
out
jle
jbe
lea
add
push
and
add
add
addr16
xchg
pop
test
subb
arpl
push
sti
sub
add
add
lsl
jno
sub
clc
pop
ficompl
dec
pop
dec
mov
dec
inc
add
add
sarl
das
js
jb
xor
outsl
dec
mov
add
sub
in
scas
adc
shrb
mov
jne
mov
push
imul
sbb
outsl
enter
or
add
add
mov
xchg
add
add
add
cltd
into
popa
ret
negb
add
add
cli
mov
xor
jl
addr16
and
mov
ror
xchg
clc
fisubl
and
cmp
mov
add
loope
inc
inc
lret
in
cmp
mov
add
add
test
sbb
sbb
lea
fistpl
lret
adc
ljmp
sbb
or
xlat
test
add
add
add
ljmp
xor
and
add
add
jnp
xchg
mov
mov
mov
insb
add
add
jg
imul
sbb
out
jmp
sbb
out
pop
imul
adc
mov
fnstenv
pop
pop
mov
cmp
aas
shll
test
dec
add
add
dec
mov
ja
xchg
mov
sub
fsubr
or
or
scas
mov
lock
les
mov
jge
mov
imul
inc
into
test
rcll
pop
and
in
in
outsl
and
out
ret
jl
mov
data16
int3
imul
stc
xor
add
pop
fadd
dec
dec
add
add
insl
mov
add
add
add
ret
ljmp
dec
mov
fsubrl
mov
bound
lahf
xor
add
add
add
ror
lcall
add
jo
push
and
mov
xchg
mov
adc
cld
dec
dec
add
lds
mov
dec
and
add
add
popf
pop
pop
leave
jne
add
out
adc
xchg
push
lret
jp
incl
or
add
add
push
lcall
add
add
mov
cmpsb
jns
dec
es
add
add
shll
xchg
jp
mov
pop
push
lahf
pushf
dec
pop
outsb
jns
or
sub
xor
fsubrl
leave
mov
add
int
mov
bound
add
gs
test
lahf
enter
hlt
testb
stos
or
add
add
xchg
add
add
sbb
inc
data16
inc
sbb
int
jns
mov
pop
push
aam
sahf
pusha
mov
les
sub
out
push
in
int3
mov
add
fcomps
push
jb
adc
add
add
dec
sbb
or
add
add
add
add
inc
add
xor
rcll
push
addr16
mov
jmp
fimuls
ret
test
shll
out
dec
mov
pushl
xchg
std
sbb
jbe
adcl
xor
add
add
gs
pop
in
mov
push
mov
add
fdivrs
adc
add
sub
add
add
add
add
jg
pop
add
lret
sub
jecxz
or
pusha
add
add
fimuls
aas
ja
andl
push
faddp
insb
add
add
adc
xchg
orb
lret
and
add
add
add
add
or
movsl
xchg
dec
add
add
inc
mov
add
adc
xor
sbb
mov
mov
fcmovnbe
out
insb
mov
mov
mov
add
add
cmp
pop
cmp
aas
sarb
mov
push
fcompl
shlb
pop
adc
jo
aas
nop
fidivl
inc
add
add
mov
add
test
adc
mov
dec
add
icebp
rorb
add
adc
cld
lock
filds
cs
and
jge
jl
mov
and
or
cmpl
add
mov
stos
xchg
inc
mov
xchg
inc
icebp
jns
imul
shrl
add
repnz
scas
jo
or
add
add
push
flds
mov
pop
lcall
dec
add
add
insl
add
dec
adc
pavgb
adc
mov
mov
mov
mov
pop
adc
outsl
xor
xor
iret
cmp
nop
mov
lods
scas
jg
inc
pop
movsb
sub
mov
ss
mov
mov
fbstp
ds
xchg
dec
xor
inc
jge
mov
add
add
jnp
lret
in
add
add
add
sbb
add
movsl
xchg
xor
pop
cltd
mov
das
lock
std
mov
inc
mov
mov
clc
and
jae
icebp
push
inc
or
sti
push
out
mov
lock
mov
push
and
sub
lahf
or
pop
push
pop
jp
jle
aad
mov
les
add
add
sub
add
add
push
cld
jp
insb
mov
inc
int3
popa
mov
sub
add
add
push
repz
add
add
add
add
adc
jno
push
jmp
addr16
mov
or
pop
jl
mov
add
scas
lods
icebp
cmp
push
addl
push
cmc
lock
cwtl
mov
cmp
sbb
mov
mov
mov
add
bound
fcmovnb
jae
leave
shrb
pop
ljmp
sbb
push
out
cli
jl
ret
aas
mov
mov
sahf
or
cmp
cmp
cmpsb
push
dec
mov
add
add
lods
mov
xchg
sahf
add
add
add
or
xchg
sbb
xchg
ret
bound
in
xchg
inc
aam
mov
add
add
leave
lock
xor
mov
sar
incb
mov
xor
mov
loopne
inc
inc
mov
fwait
xchg
in
mov
sbb
push
mov
add
add
insb
add
add
shrl
sbb
add
add
mov
nop
mov
add
mov
mov
adc
lahf
outsl
adc
inc
add
add
add
push
and
add
add
fadds
add
cmp
mov
cmp
stos
in
into
mov
arpl
add
jp
jbe
and
enter
mov
push
insb
mov
mov
out
loope
mov
ljmp
jb
or
add
pop
xor
incl
and
inc
jecxz
es
mov
jnp
adc
add
mov
insl
inc
mov
cli
push
imul
lea
leave
add
add
add
in
mov
push
mov
mov
add
add
test
out
fadd
sbb
mov
xchg
movsb
je
stos
aas
jp
ja
mov
jae
jmp
mov
dec
add
add
loope
cs
sub
popf
mov
lods
inc
dec
mov
filds
add
add
setbe
insb
mov
mov
sbb
movb
add
add
dec
pop
cltd
inc
sub
add
add
inc
aas
dec
jl
sbb
fwait
or
add
add
cmp
mov
jecxz
icebp
stos
stos
cltd
jae
add
add
xor
add
mov
add
sub
ffreep
sahf
adc
out
clc
sbb
push
mov
mov
xchg
xchg
add
add
add
divb
pusha
mov
and
xchg
dec
dec
add
add
pop
in
in
mov
std
insb
add
add
icebp
jbe
mov
pop
adc
aad
lock
sub
dec
ds
mov
aaa
push
jge
and
xchg
mov
inc
pop
xor
sub
add
add
cwtl
sbb
mov
lea
out
rcrl
add
add
lock
xchg
push
add
add
add
icebp
xchg
mov
xor
sbb
fcmovnbe
divl
mov
add
mov
loop
test
andl
aas
or
mov
cmpsb
xor
mov
arpl
push
pushf
sub
lods
sbb
lret
dec
movsl
xor
mov
js
adc
cs
lock
mov
mov
add
bound
xchg
xchg
and
lea
mov
push
adc
test
popf
adc
push
out
xchg
add
add
or
in
add
add
ret
divb
inc
push
cwtl
rcrl
jbe
lock
add
popf
adc
rorw
addr16
or
sub
xchg
xor
mov
iret
test
xchg
mov
das
dec
add
add
popa
dec
dec
xchg
add
mov
sub
add
add
push
cwtl
jno
outsl
es
add
out
imul
mov
lock
xchg
xchg
inc
add
add
stc
or
add
add
leave
les
xor
sub
fcomip
add
mov
or
sbb
mov
mov
jmp
xlat
mov
mov
cmp
lock
pop
adcb
daa
in
inc
add
add
dec
testl
inc
push
pmullw
sbb
hlt
pop
shrl
jge
jbe
lock
pop
movsl
iret
inc
daa
outsl
cmp
mov
xchg
and
sbb
push
push
aas
jne
mov
add
add
push
ret
inc
jae
incb
cmp
pop
sbb
add
adc
or
add
add
negl
in
hlt
and
add
add
pop
loope
inc
adc
jmp
adc
cltd
push
std
dec
mov
pop
cmp
xchg
add
add
mov
xchg
mov
add
add
ja
imul
jns
imul
inc
push
or
fcompl
stos
pop
dec
add
lret
mov
push
mov
pop
pop
test
push
add
xchg
jne
mov
push
test
ja
movsl
or
add
add
add
out
jl
add
add
xchg
scas
xor
mov
or
jge
sbbb
test
out
xor
sbb
push
inc
test
dec
mov
in
add
ds
loopne
add
jl
jecxz
jmp
add
add
inc
add
add
rolb
daa
xchg
dec
xchg
add
test
jl
add
add
ljmp
add
mov
or
push
outsb
jg
ds
push
shlb
add
add
add
xchg
inc
dec
loopne
add
add
adc
int
mov
fwait
clc
dec
add
add
fwait
lea
mov
cmp
add
fcom
test
dec
inc
and
pop
dec
mov
idivl
es
adc
xchg
add
add
jecxz
or
dec
and
or
add
add
add
add
sub
add
add
mov
shlb
ret
cmp
sbb
lock
add
add
xor
loop
aaa
jae
push
test
add
add
cmp
dec
daa
je
adc
mov
mov
add
add
test
push
and
add
add
push
notb
cli
pop
push
sbb
sub
jge
pop
xchg
inc
mov
inc
inc
fucom
inc
add
add
scas
dec
add
add
movsl
xchg
mov
sbb
mov
fwait
jns
fldenv
mov
inc
or
popa
scas
loop
jmp
imul
mov
add
add
add
dec
in
sub
test
cli
mov
jbe
popa
push
sbb
jl
lret
pushf
add
add
add
jns
scas
fwait
adc
out
push
push
std
sbb
or
rcl
xor
push
or
add
add
rcrl
adc
xor
out
cltd
cmp
pop
xor
loop
gs
aaa
hlt
outsl
sbb
cmp
sahf
sub
mov
add
add
adc
pop
mov
les
call
add
add
mov
loope
and
fists
or
add
add
sti
ret
outsl
lods
ljmp
fwait
mov
icebp
mov
add
add
adc
jl
decb
js
repz
sahf
xchg
and
mov
cli
push
daa
cltd
imul
mov
mov
inc
mov
loope
hlt
movsb
dec
add
add
cltd
cs
sub
sbb
lahf
dec
and
mov
push
mov
xor
mov
xchg
mov
add
stc
cmp
xchg
mov
add
mov
popa
mov
cmp
or
xor
mov
mov
jmp
or
add
add
fcoms
adc
mov
add
scas
scas
fcomp
xchg
insl
ja
mov
mov
cmp
add
add
mov
xor
mov
cmp
xor
sub
enter
orb
insb
add
add
stos
insl
mov
jp
mov
popa
pushf
and
bound
jmp
adc
popa
pusha
mov
mov
or
push
jnp
loop
ja
sbb
mov
lock
jo
push
addl
add
add
out
scas
push
lods
or
jo
in
loop
inc
xor
lret
push
test
pop
sti
data16
cld
lea
add
insl
sbb
or
mov
adc
mov
lock
xchg
negb
sub
push
cmpsb
sub
hlt
push
out
inc
inc
mov
xchg
mov
mov
add
sarl
sbb
lea
outsb
rcrb
imul
xor
push
cld
add
add
add
jge
jbe
imulb
mov
and
mov
popa
ljmp
mov
add
imul
or
pop
pop
mov
push
sbb
fucomip
jnp
push
imul
jg
lods
inc
jecxz
mov
sub
adc
loope
leave
dec
mov
mov
imul
mov
add
add
fwait
pop
xbegin
fs
fcoms
cmpsb
cs
pop
sbb
jbe
jle
cltd
xchg
incb
xor
cld
mov
lret
clc
pop
aaa
gs
fadd
ds
add
add
pop
sub
mov
add
mov
add
add
jno
sbb
xchg
jmp
popf
sbb
inc
ret
xchg
pop
ss
sahf
outsb
xchg
push
je
lds
ljmp
std
in
push
inc
mov
inc
mov
jle
adc
mov
scas
cmp
mov
popf
in
pop
scas
stos
scas
and
add
add
add
jg
loopne
mov
cmp
add
xor
inc
mov
stos
add
add
add
cmovne
add
add
das
sub
and
add
add
pop
cltd
popf
push
sbb
daa
int
ret
ret
inc
add
add
inc
cld
scas
in
adc
or
iret
push
ljmp
add
push
pushf
and
jecxz
aas
rcrl
outsb
nop
and
test
daa
iret
out
mov
adc
ja
testb
cld
int
mov
xor
add
add
mov
xchg
data16
outsb
pmaddwd
stos
lds
pop
push
pop
jge
addl
jae
mov
and
add
add
xor
and
mov
mov
xor
xchg
rol
xchg
mov
pop
imul
mov
jnp
lds
inc
adc
xchg
movsb
mov
sub
add
add
int3
aas
shlb
add
dec
cli
jg
ljmp
int3
icebp
sub
and
jg
stos
pop
sbb
xchg
pop
or
das
mov
test
mov
adc
movb
das
lods
call
icebp
ret
mov
xchg
aad
xor
push
pop
sub
cmpsl
sub
les
push
mov
pop
movsb
jno
pop
rorb
sub
add
add
pushf
cmp
cmpl
add
mov
scas
int3
sbb
imul
add
fnstsw
push
insb
add
add
imull
std
mov
loope
inc
xor
ldmxcsr
pop
jp
push
push
in
mov
sbb
jno
movsl
in
mov
pusha
add
add
dec
xchg
dec
mov
in
mov
sub
add
add
inc
fildll
cwtl
and
sub
mov
shrl
sub
add
add
sbb
add
add
test
sarl
fucomi
mov
add
push
shlb
xor
or
add
add
rclb
fs
mov
lret
insb
add
add
sub
inc
sub
add
add
mov
add
add
mov
imul
xchg
stc
xlat
mov
loopne
loopne
adc
nop
cmp
push
in
jp
mov
push
push
jae
pop
sbb
mov
add
add
cmp
push
xchg
dec
mov
push
inc
mov
fs
imul
inc
dec
mov
or
add
add
dec
xchg
ja
xchg
mov
mov
sub
add
add
rcll
add
add
add
add
mov
sub
pop
sbb
enter
mov
loope
int
cmc
pop
xchg
xor
inc
add
add
fisubrs
cmp
add
add
mov
xor
jne
cltd
cmc
push
jno
test
loop
repnz
jae
jnp
mov
shl
jae
add
add
jl
inc
fldcw
sbb
add
mov
add
add
inc
enter
test
add
add
xchg
pop
in
xor
in
ret
imul
sub
cmpsb
xor
cmp
mov
jl
inc
add
out
or
add
add
mov
xor
add
add
mov
mov
add
sub
xchg
xchg
pop
sbb
add
pop
sub
cmp
cmp
adc
xchg
jo
cltd
stos
jge
or
cmp
add
add
adc
mov
add
push
xchg
add
add
add
add
push
cltd
dec
les
push
or
jns
xor
cmpsb
mov
mov
mov
mov
add
add
roll
leave
fwait
inc
dec
lea
test
inc
jno
out
fs
dec
imul
pop
aas
loop
in
outsb
or
add
add
js
scas
push
aas
fisttpll
add
add
fisubl
insl
fldenv
or
adc
int3
cmp
add
add
add
mov
inc
lret
repz
xlat
cmp
je
or
aaa
inc
lods
xchg
es
xor
mov
fidivl
adc
hlt
sbb
sub
in
jmp
inc
iret
xchg
mov
adc
mov
test
mov
sbb
outsl
pop
ja
push
gs
xchg
lods
sahf
mov
mov
push
lds
add
add
xor
dec
aaa
mov
decb
mov
xor
pushf
ja
push
nop
mov
add
add
fmuls
mov
add
add
das
fiadds
add
add
sub
add
add
sub
xchg
stos
adc
sbb
mov
lds
add
dec
add
add
or
add
add
adc
add
add
imul
in
dec
lods
and
das
lods
fiaddl
adc
jg
mov
jmp
mov
aaa
lods
push
loop
add
add
add
icebp
or
add
add
add
add
add
push
push
sub
add
add
popa
out
xchg
lods
test
xor
xchg
in
xlat
xor
shll
add
repnz
out
sub
sbb
imul
add
add
xlat
jno
cmpsb
aaa
push
repz
add
add
fistpl
mov
push
and
fstps
push
push
sub
and
push
push
pushl
call
mov
xor
cltd
aas
inc
and
enter
xor
mov
roll
add
add
dec
add
add
add
and
imul
add
add
add
outsb
fcoms
leave
jb
mov
roll
add
fisubs
cmpsb
pop
clc
lods
ret
fidivrs
mov
sbb
les
stos
cs
clc
fisubrl
or
add
add
std
push
in
dec
add
add
outsl
jnp
pop
fmuls
ds
out
fidivrl
stos
lock
hlt
push
pop
stos
mov
lret
js
in
inc
dec
addb
add
add
sarb
insb
add
add
stos
pushf
dec
arpl
jp
cmp
into
adc
mov
mov
stc
lcall
jno
ja
in
imul
dec
push
imul
add
xor
add
sbb
mov
adcl
mov
sbb
add
add
mov
and
mov
faddl
add
sbb
sysenter
push
xor
add
push
imul
loopne
js
mov
cmpsl
js
loop
xchg
cmp
fdiv
mov
imul
push
pop
and
add
add
cmp
push
xchg
das
arpl
std
sub
repnz
add
add
popf
pop
push
mov
add
add
xchg
inc
add
add
cmc
mov
push
adc
sub
push
cmp
cmp
fidivs
popf
gs
cltd
mov
jl
mov
lret
cmp
xor
push
out
nop
movsl
push
mov
or
add
add
pusha
mov
rorl
je
in
loop
xchg
popf
into
sub
mov
jle
inc
push
cmc
adcb
and
add
add
pop
ja
push
dec
add
add
mov
mov
mov
xor
mov
je
stos
ret
ljmp
mov
popa
inc
outsl
sahf
fidivrl
and
or
add
add
insb
mov
in
test
add
add
rcr
xchg
xlat
data16
fwait
sbb
rolb
add
add
add
push
cmp
mov
mov
xor
pop
dec
cmpsl
dec
xchg
add
add
lahf
shll
pop
ret
mov
dec
add
add
xor
dec
xlat
iret
fidivrl
mov
pop
add
add
add
icebp
mov
jmp
lds
leave
lret
pop
pop
jno
inc
aas
cmp
icebp
mov
mov
fmulp
lods
xchg
mov
add
dec
mov
add
add
xchg
lea
test
call
popf
sbb
iret
enter
int
jb
repz
lret
out
mov
out
sarl
inc
out
sbb
xor
mov
add
add
inc
cmp
pusha
mov
push
push
pop
mov
xchg
pop
xor
mov
int3
or
add
add
pop
arpl
add
add
add
add
add
push
mov
add
je
adc
into
mov
jno
jb
mov
and
test
movsb
fdiv
sahf
out
mov
pop
xor
lock
sbb
cmpsl
and
add
mov
mov
dec
sbb
add
sub
add
add
js
inc
pop
pop
and
add
add
test
int3
mov
loopne
jne
pop
jb
lods
push
shll
test
or
add
xchg
jge
cltd
outsb
fcoml
and
add
add
mov
data16
add
add
movsb
inc
cmp
outsb
inc
cmpsl
mov
add
and
jnp
mov
sub
jae
cmpsb
fnsave
loop
jo
add
add
fisubrl
add
adc
fidivs
mov
mov
ret
les
outsl
ljmp
xchg
repnz
sti
pushf
stos
push
ss
jp
pushf
ljmp
addl
mov
mov
incl
jmp
mov
insb
add
add
and
xor
jge
daa
sub
add
add
add
fisttps
add
inc
dec
dec
pop
xorb
dec
ss
js
notb
add
lea
aam
repz
mov
mov
xchg
jb
in
rep
outsb
inc
repz
xor
rcrl
fwait
or
add
add
popa
scas
mov
jnp
cmc
inc
cmpsl
shll
add
fisubs
add
pop
int3
jbe
mov
jne
mov
popf
ss
mov
mov
pop
into
mov
cmpsb
sub
cmp
lahf
inc
xchg
movsl
and
add
add
ret
lret
mov
add
add
inc
rcrl
push
and
jbe
mov
sahf
and
add
add
jp
fildll
add
add
lahf
jo,pn
mov
sbb
pop
mov
es
call
dec
mov
pop
or
cmp
add
mov
push
aaa
orl
jmp
mov
cmp
mov
mov
addr16
cmpsl
addb
add
lds
push
test
loopne
xor
jmp
dec
lea
add
add
add
xchg
bound
add
mov
mov
cld
imul
add
add
add
test
insb
add
add
sub
and
ja
jb
adc
subl
push
ds
add
add
jb
push
icebp
out
sub
imul
dec
mov
cli
mov
test
push
push
popf
lds
push
xchg
test
and
insl
pop
dec
cmp
jmp
dec
mov
lods
aas
inc
mov
scas
cmp
add
cmpsb
and
pop
clc
push
rcrb
jecxz
in
mov
nop
cmp
je
push
int
mov
ret
add
test
sub
add
add
mov
or
mov
js
push
fldt
dec
mov
push
in
test
stos
mov
mov
add
mov
scas
add
add
add
lds
add
add
mov
xchg
push
sub
stc
mov
mov
in
out
adc
ljmp
pop
mov
aaa
std
jnp
adc
shl
fists
faddl
add
add
push
popf
daa
sbb
js
xchg
cmp
loope
das
test
mov
enter
faddp
movsb
mov
sbb
mov
pop
andl
sbb
mov
int3
rclb
cmp
in
loop
aaa
xlat
cmp
dec
fs
in
or
pop
scas
cmp
loopne
adc
add
dec
jle
fmul
xlat
rcrl
push
mov
inc
add
add
enter
add
push
lcall
movb
test
test
add
add
int3
cmpps
mov
add
add
out
xchg
add
mov
push
outsb
push
push
push
mov
aaa
cld
mov
imul
call
mov
jp
mov
mov
fstl
lahf
ja
push
imul
inc
mov
jmp
hlt
mov
roll
add
add
int3
push
movsb
dec
lds
jb
jo
inc
out
sahf
pushf
pop
mov
pop
or
add
add
pop
xchg
jp
hlt
or
andb
add
add
stc
mov
add
or
dec
xchg
into
fnsave
lret
inc
add
add
add
mov
jno
jecxz
shl
hlt
and
add
add
sbb
jne
out
add
lea
in
inc
mov
mov
or
dec
scas
push
lcall
xor
push
xchg
mov
add
add
xor
lods
mov
fnstenv
dec
cmp
pop
ljmp
xor
rcrl
cmp
xchg
and
add
add
iret
jge
movsb
inc
sti
mov
push
adc
mov
ljmp
sub
xorb
add
stc
jae
and
add
add
pop
hlt
stc
arpl
inc
push
mov
add
add
add
add
loop
arpl
mov
add
add
or
xor
sbb
add
repz
shll
add
add
add
add
out
xor
data16
jmp
add
pop
mov
xchg
repnz
mov
out
jge
adc
cmp
clc
out
xchg
sub
ds
loope
repnz
add
mov
ja
addr16
fcmove
fnstcw
jnp
or
daa
lods
or
and
push
push
sbb
add
xchg
fnstcw
fisttpll
mov
mov
call
add
add
scas
stos
movsb
or
hlt
jge
fisubrl
out
stc
pop
or
add
add
add
fistpl
push
daa
rcrl
inc
add
add
mov
jcxz
addr16
add
add
insb
add
add
fs
rorl
add
add
add
add
or
ljmp
mov
and
xor
sub
add
add
pop
das
sarl
inc
popa
scas
mov
gs
stos
pop
dec
sub
add
add
dec
les
imul
or
add
add
insb
add
add
and
mov
mov
add
add
add
andb
pop
cmpl
mov
lcall
fistpll
nop
lcall
outsb
insl
cmpsl
adc
aam
mov
jns
pusha
add
add
cltd
loopne
sbb
rolb
add
insl
nop
stos
js
out
mov
mov
jne
ss
jecxz
ss
ret
cld
test
mov
cmp
sbb
xchg
mov
lcall
sub
pushf
loop
js
fistl
cld
mov
data16
inc
push
pop
shrb
pop
and
pop
pop
mov
pusha
add
add
sbbl
add
pop
rcll
mov
rclb
test
loopne
mov
push
mov
pop
xchg
and
add
add
add
add
lods
movsb
dec
mov
pusha
add
add
mov
add
and
pop
mov
pop
jg
add
add
cmp
jle,pt
cwtl
shll
jne
xchg
adc
jo
xchg
arpl
in
pop
das
repz
pop
or
add
add
dec
adc
mov
sub
pop
jmp
pop
sub
ret
adc
push
add
add
push
test
mov
popf
add
mov
xchg
cmp
ds
mov
incb
adc
jg
rcr
jmp
shrb
add
add
cmp
add
add
xor
imul
cld
xor
ja
add
pusha
mov
cmp
cmp
cmpsl
add
lods
sar
leave
or
adc
fs
stc
ss
iret
pop
dec
in
inc
sbb
sbb
and
add
add
retw
mov
pushf
pop
rcr
addr16
xchg
mov
das
stc
testl
add
add
jecxz
repnz
add
add
mov
shrl
add
add
hlt
ss
imul
sub
add
add
add
adc
push
fmull
add
add
add
add
test
and
sub
loop
xor
mov
jmp
pop
idivl
or
and
add
add
mov
cwtl
xchg
mov
dec
mov
sbb
orl
add
dec
add
add
mov
jl
cmpsb
xchg
push
mov
cmpb
lock
into
test
add
add
inc
mov
out
into
xchg
mov
xchg
stos
sub
test
out
insl
and
insl
pushf
adc
cmpsl
enter
in
das
and
cmp
jae
push
xchg
sbb
shrl
es
hlt
and
dec
pop
pop
inc
mov
dec
mov
or
scas
dec
mov
cmpsl
in
mov
sar
daa
outsl
add
add
stos
and
add
add
rsm
cltd
addl
add
add
add
add
cmp
jmp
xor
mov
jl
fisttpll
mov
pop
cwtl
mov
loopne
loopne
dec
repnz
mov
mov
test
fdivrp
mov
cmp
fildll
xchg
adc
ss
int3
adc
jge
xlat
call
test
lea
test
cld
dec
jg
jno
pop
and
adc
fwait
adcl
lahf
mov
xor
mov
aaa
cmpsl
inc
dec
adcb
sbb
daa
test
mov
add
flds
jecxz
enter
xchg
notl
pop
daa
xor
push
repnz
stc
dec
or
add
add
aaa
lcall
push
mov
mov
add
add
notl
subb
adc
add
add
cmc
out
lahf
andb
adc
jns
adc
add
mov
dec
lret
ljmp
push
into
or
dec
add
add
out
jne
fcoml
movsl
loop
iret
mov
fndisi(8087
ljmp
je
xor
pop
fs
sahf
in
jp
sarb
mov
mov
cmp
pop
loop
ror
repnz
stc
mov
fbstp
enter
lds
mov
aam
rcrb
sbb
aad
std
enter
cmc
test
dec
mov
repnz
inc
add
add
movsb
xor
add
add
mov
xor
add
repz
data16
dec
or
push
cmp
lea
sti
pop
ret
sub
and
add
add
sub
sbb
pop
inc
mov
and
add
add
es
xchg
enter
add
add
add
push
dec
mov
int
xchg
cmpsb
or
add
add
add
add
sub
repnz
and
bnd
or
mov
ja
push
cld
inc
add
add
mov
sub
cmp
mov
daa
sbb
jmp
mov
pop
push
or
add
add
pop
mov
add
add
in
mov
sub
mov
jnp
cmp
push
pop
into
andl
movsb
add
add
add
xchg
xchg
or
add
add
mov
add
add
add
cli
js
cs
mov
fwait
arpl
jae
add
add
mov
js
fnstenv
ficompl
jbe
icebp
jmp
dec
xor
adc
add
cmpsb
pop
das
jnp
ljmp
or
add
movsb
mov
aas
xlat
cld
jg
ret
sub
add
push
movsl
and
add
add
add
add
add
and
jecxz
adc
sub
pop
dec
adcl
mov
jecxz
cmp
push
jg
in
cwtl
or
cmp
lds
cld
scas
and
rcrb
inc
mov
outsb
movsb
aam
adc
inc
mov
lods
or
add
add
and
add
mov
xor
dec
jbe
xchg
push
xchg
cmp
mov
rclb
sbb
add
test
enter
inc
mov
add
sbb
add
add
arpl
push
sub
gs
pusha
mov
push
mov
mov
adc
xor
mov
jne
int3
adcl
sub
or
mov
push
jns
shlb
add
add
cmc
imul
out
test
outsl
jp
fcompp
pop
insb
add
add
inc
mov
or
sahf
shll
mov
dec
mov
xor
add
add
adc
jecxz
lret
jg
mov
test
xor
add
or
add
jae
aad
jno
xor
arpl
jg
jmp
scas
fdivl
xchg
lahf
test
push
add
sti
popf
cmp
popa
cld
mov
pushf
and
sbb
xchg
mov
out
push
mov
xchg
jl
int
pushf
sti
add
mov
ljmp
and
add
add
push
sub
daa
mov
movsb
add
cmpsl
lahf
shrb
jae
jb
pop
test
mov
jl
js
mov
mov
insb
mov
je
jae
adc
popf
add
add
add
shlb
out
clc
xchg
add
add
jno
cmpsb
pop
xor
add
add
or
mov
mov
fldcw
push
add
add
add
mov
sbb
xor
cld
jp
mov
enter
cmp
fcmovne
mov
not
divl
add
add
xor
nop
arpl
pop
daa
lds
outsb
or
lret
mov
negb
mov
xor
mov
sbb
jle
mov
lcall
cmp
sub
out
aas
repnz
mov
jae
lods
sub
divb
inc
xchg
pop
into
in
fucom
call
mov
xchg
xchg
sbb
std
adc
mov
into
push
shl
dec
mov
pop
daa
cmc
jge
add
add
in
iret
stos
push
xchg
add
add
xchg
es
repz
in
xchg
mov
addr16
lret
rcr
lcall
iret
mov
mov
addr16
adc
sbb
xchg
std
inc
xchg
jg
iret
xor
add
sub
mov
mov
ds
imul
outsb
jmp
xchg
mov
add
add
pop
out
out
std
sbbl
mov
arpl
popa
movsl
push
cmp
cmp
pop
pop
xor
stc
ljmp
std
les
inc
pusha
mov
adc
jle
jmp
je
or
sti
sbb
daa
add
adc
mov
repnz
adc
arpl
shr
and
inc
repz
push
mov
sub
add
add
add
cmp
dec
add
add
fcmovnu
inc
clc
mov
pop
stos
adc
inc
mov
pop
and
push
scas
stos
cmp
icebp
pop
ss
je
mov
and
add
add
add
add
ljmp
flds
add
add
es
nop
push
pushf
aas
into
sub
add
lea
dec
adc
fisubrl
ljmp
dec
xor
ss
sahf
push
ds
stc
movsl
aad
mov
dec
scas
xchg
inc
mov
mov
push
inc
out
or
sub
add
add
dec
push
test
mov
sbb
inc
mov
test
xchg
jno
imul
add
add
add
add
add
xlat
push
pop
stos
sbb
adc
add
ds
inc
mov
ret
inc
add
add
fbstp
sub
movsb
aad
push
mov
inc
insl
adc
push
popf
scas
xor
pop
cmpsb
push
aad
dec
lods
pop
push
xor
xchg
fwait
or
cmp
ds
xor
std
mov
xlat
popa
inc
sbb
jno
std
je
xor
cltd
sbbl
pusha
add
add
pusha
mov
jg
hlt
sub
cld
lret
lea
add
add
add
pop
lea
mov
std
mov
add
add
sbb
add
add
lods
mov
push
mov
sbb
mov
mov
add
add
fildll
add
insl
lds
jmp
ss
ja
sbb
add
add
push
arpl
jae
repnz
dec
sti
rclb
add
dec
movsl
stos
jge
mov
jge
rcll
sbb
lods
out
movsb
fiaddl
add
jl
cltd
jnp
into
and
outsb
and
cs
daa
loop
mov
lods
adc
jbe
mov
add
add
inc
mov
pop
daa
lcall
jne
mov
je
in
mov
in
and
jns
mov
push
mov
add
add
pop
inc
jnp
ret
test
dec
ror
inc
mov
repnz
adc
fimull
lea
movsl
pop
jp
push
sub
add
add
add
cmp
add
add
pop
cltd
cmp
add
add
add
mov
mov
into
sbb
xor
xor
add
add
push
cmpsl
xchg
outsl
pusha
add
add
xchg
aam
sahf
cld
jo
mov
inc
add
add
add
mov
popf
push
pop
scas
ficoms
aas
popa
cmc
ja
loopne
insb
mov
and
add
jno
or
jns
dec
cld
std
int
cmp
mov
push
dec
ficomps
aad
mov
jno
movsb
int
xchg
push
loopne
cmp
pop
in
mov
pop
loop
repnz
faddl
add
add
les
loope
filds
pop
addr16
and
push
into
jno
shlb
mov
jo
sar
jae
in
lods
rcl
cld
add
add
add
cmp
pop
outsb
sub
add
add
add
mov
mov
aaa
xlat
jno
inc
leave
cmpsl
aad
jne
movsb
ss
test
outsl
jbe
lcall
sbb
mov
sbbl
add
adcl
cmp
je
cmpsb
iret
repnz
into
std
mov
sbb
shll
mov
in
push
pushf
loop
addr16
rorb
add
add
loopne
mov
call
add
test
cwtl
or
mov
insl
adc
sub
mov
add
adc
mov
xchg
mov
push
push
imul
js
or
add
add
mov
ret
add
mov
mov
call
jnp
insl
xchg
pop
sub
add
add
daa
sbb
inc
mov
cmp
scas
mov
jg
pop
jg
rcrb
push
scas
jae
or
adc
jae
adc
out
int
mov
xor
add
scas
sti
popf
mov
ja
popa
addr16
fldpi
xor
js
inc
sub
add
add
inc
std
int3
cmp
jno
jno
scas
idiv
mov
out
mov
mov
add
ds
mov
ds
into
in
pop
mov
xchg
pop
jns
lahf
ja
in
test
add
div
test
add
add
int3
pop
fisubrl
sbb
pop
xchg
leave
mov
popf
and
movsb
test
sub
add
add
xchg
lret
mov
dec
repz
add
add
mov
outsb
add
mov
jo
aam
add
add
mov
jle
ja
adc
cmc
xchg
adc
dec
mov
mov
or
push
icebp
jl
push
or
add
lods
stos
push
aaa
mov
or
mov
xor
scas
ljmp
add
rcrb
pop
cmp
sub
add
out
cmp
arpl
sarl
rcrb
jl
lods
jp
and
add
add
addr16
js
jo
pop
mov
test
add
add
add
pop
lods
and
add
add
gs
cmp
mov
jle
xor
mov
push
and
push
lods
mov
add
cmp
rorl
pmaddwd
sbb
add
out
xchg
mov
int3
push
adc
cmpsb
push
mov
subl
pop
ds
adc
push
cli
repz
iret
adc
add
add
cmpsl
adc
mov
aam
push
sbbb
mov
sbb
or
mov
jl
or
add
add
xchg
sub
add
add
dec
or
mov
sti
mov
inc
add
add
xor
stc
push
ljmp
sub
add
add
add
cli
adc
mov
lea
mov
outsl
jge
in
mov
xor
sbb
push
scas
xchg
mov
xchg
aaa
add
fisubl
add
add
mov
mov
sbb
mov
add
add
jno
movsb
lcall
add
add
adc
add
xchg
xor
add
add
dec
popf
pop
jb
mov
mov
pop
lcall
jno
lahf
or
ficoml
add
add
add
das
por
rcr
push
inc
cwtl
fwait
mov
add
fbld
add
add
mov
add
dec
pop
add
add
add
sbb
dec
jl
stos
or
xor
mov
push
push
std
or
iret
xchg
ret
sub
and
out
enter
fsubr
movsb
ficomps
push
xor
shl
jno
imul
cmp
scas
add
dec
mov
inc
mov
dec
das
cmpsb
or
mov
sub
cwtl
lods
jno
sbb
sub
add
add
jg
push
in
aam
popf
ret
subl
add
movb
cmpsb
cmpb
add
mov
pop
aam
jns
xor
xor
adc
jge
adc
scas
fdivs
mov
imul
add
inc
adc
out
jno
repz
push
inc
arpl
shl
push
loopne
sti
mov
stc
cld
mov
mov
in
or
add
aas
cmp
jp
inc
rcr
adc
mov
int3
pop
mov
arpl
or
inc
mov
xor
sub
lods
movb
test
mov
inc
add
add
mov
add
add
add
mov
add
add
or
add
add
nop
add
pop
push
in
xor
and
push
lret
pop
dec
xor
sarl
out
sbb
aaa
ret
add
add
add
in
mov
xor
dec
shll
mov
add
add
add
add
add
add
add
push
clc
cld
push
ret
mov
mov
mov
mov
mov
pop
push
pop
xchg
xor
daa
cmp
pop
dec
dec
push
xchg
enter
in
pop
in
dec
jecxz
mov
sub
pop
xor
mov
xor
jge
and
addr16
repz
pop
and
push
fists
mov
add
add
cld
push
push
outsl
jecxz
add
add
xor
push
jmp
push
push
nop
out
jecxz
into
test
xor
add
add
cmp
mov
iret
mov
lds
mov
repz
fwait
cmc
mov
add
lret
stos
aad
fld
movsb
cmp
add
adc
jecxz
out
pushf
mov
or
add
add
push
arpl
in
out
std
loope
icebp
pop
dec
mov
dec
add
mov
mov
mov
add
add
xor
pop
dec
repz
adc
rcl
jbe
sbb
fadds
push
in
fdivl
fcmovnbe
adc
push
rcl
jb
je
inc
je
sbb
mov
mov
xchg
jne
dec
or
rcrl
add
add
negb
inc
and
daa
mov
lods
and
ror
or
fistpll
inc
add
add
jno
pop
and
add
add
testb
sbbb
cmp
out
sbb
add
add
mov
add
mov
pop
adc
rcr
mov
mov
test
lock
add
sti
ljmp
add
add
sub
push
cmp
daa
pusha
mov
jmp
sarl
mov
ja
clts
popa
roll
mov
mov
inc
add
add
xchg
jae
mov
push
mov
push
nop
fucomip
xor
sub
psubsw
cmp
lea
pop
jae
jecxz
jmp
xchg
xchg
jle
outsl
cmp
add
add
add
or
push
inc
leave
les
stc
pop
mov
dec
inc
out
dec
add
add
mov
ret
jnp
add
add
mov
mov
nop
mov
and
add
add
lcall
pop
mov
bound
add
add
push
enter
add
add
jae
nop
push
stos
loopne
or
add
add
fiaddl
xchg
popf
jg
gs
xor
fcomip
push
or
add
add
iret
add
add
jmp
cmc
gs
ljmp
xchg
rcll
rcrl
insl
cs
dec
dec
cmp
stc
gs
mov
pop
icebp
mov
je
adc
test
and
mov
jae
in
sbb
push
cmc
adc
add
dec
sbb
jmp
cmovp
js
in
or
xchg
cmp
add
ja
ss
and
add
add
fidivrl
dec
mov
sbb
add
add
add
or
mov
mov
pop
jp
inc
hlt
or
inc
test
pop
subl
imul
out
inc
ja
and
adc
add
add
inc
pop
push
push
push
xor
xlat
lar
jnp
mov
add
xlat
mov
or
inc
mov
dec
mov
ret
inc
mov
add
add
pop
inc
mov
insl
push
fldenv
clc
or
ds
das
xor
add
out
jae
sbb
cmp
nop
pop
pop
lcall
jae
cmp
add
loopne
fnstcw
divb
xchg
insl
je
jo
lcall
push
inc
mov
lahf
jbe
mov
sub
adc
scas
mov
mov
clc
out
in
add
add
add
test
sti
add
xor
shrb
orb
int
popf
rclb
gs
push
mov
pusha
add
add
push
stos
jecxz
sub
pop
inc
cmp
sbb
lahf
roll
pop
movsl
jno
add
add
mov
adc
incl
mov
sbb
shll
add
add
cmp
outsl
inc
movsl
icebp
jmp
jmp
push
dec
mov
rcll
add
or
inc
cmpsb
mov
dec
pop
cmp
in
sbb
clc
sbb
in
mov
call
or
pushf
or
push
stos
out
les
ja
sbbb
cli
ss
ret
mov
test
lret
push
mov
iret
in
inc
sub
loope
cmpsb
xchg
ja
jbe
cld
mov
mov
xchg
test
add
add
dec
sub
ret
out
xchg
andl
inc
mov
push
popf
jo
add
add
testl
sbb
imulb
add
cmovbe
xchg
mov
mov
add
add
adc
dec
add
add
dec
add
decl
add
mov
add
add
sbb
mov
mov
push
mov
jp
notb
jne
xlat
mov
out
mov
movb
xchg
icebp
movsl
sarb
dec
xchg
jg
add
gs
subl
mov
mov
dec
insb
mov
sbb
xor
out
cmp
add
lods
xchg
popa
pop
popa
iret
mov
shlb
push
push
pop
mov
add
pop
xchg
xchg
and
cmp
add
add
test
sbb
lds
fildll
movl
test
pop
cld
xchg
popa
sub
add
add
pop
cwtl
jp
shrb
add
mov
in
out
call
sti
call
xchg
mov
mov
xchg
pop
das
ret
xchg
dec
adc
jecxz
xor
clc
movsb
sub
ss
sbb
push
cwtl
mov
loopne
sub
lods
dec
mov
xchg
and
add
cmpsb
fldenv
sbb
bound
loopne
movsb
imul
sub
cmp
xchg
cltd
out
adc
add
add
add
mov
pop
sbb
inc
mov
gs
push
add
add
add
scas
xor
jne
mov
add
lcall
add
jge
or
iret
sub
add
add
in
mov
pusha
mov
add
add
shl
div
xchg
ljmp
add
cmp
js
adc
out
and
add
lahf
xor
mov
pushf
jecxz
lret
shll
popf
fsubp
insb
add
add
out
jo
dec
cwtl
adc
mov
mov
ret
les
mov
xlat
dec
scas
pop
aad
pop
dec
or
add
add
negl
int
popf
mov
lock
movsl
out
add
add
cld
push
insb
mov
data16
pop
daa
insl
test
fimull
add
adc
mov
and
pop
xlat
jecxz
mov
cmp
aad
outsl
mov
nop
jmp
mov
cmp
out
xor
add
mov
ja
jae
inc
aam
add
add
push
arpl
imul
mov
add
push
movsl
push
jns
int
add
add
sbb
mov
push
push
ds
pop
or
add
add
add
add
lret
mov
sub
jne
push
loopne
fstpt
mov
and
add
add
cmc
or
dec
sti
ja
pop
cmp
imulb
add
add
movsb
or
mov
push
and
add
add
xor
add
lahf
dec
ficompl
sub
and
inc
das
das
es
insb
add
add
push
mull
add
lods
ror
ljmp
mov
xor
inc
jle
add
add
add
mov
add
push
add
mov
clc
jmp
arpl
gs
in
jae
jns
pusha
add
add
sbb
stos
lret
ret
cmp
add
lods
inc
xchg
push
ret
cltd
inc
mov
add
add
sbb
dec
enter
push
ds
jb
sbb
insb
mov
xor
es
pop
aas
popa
shll
add
cmpsb
pop
lods
leave
mov
xchg
cli
sbb
mov
outsb
or
dec
mov
ret
adc
pusha
add
add
dec
add
add
iret
ficoml
inc
add
add
out
ret
and
mov
sub
divl
or
add
sub
sbb
pop
xor
pop
lret
and
mov
xor
sub
repnz
test
add
add
jmp
xchg
or
mov
add
popa
xchg
test
loope
cmpsl
push
pop
or
add
add
add
fisubl
or
add
lahf
push
mov
mulb
mov
inc
mov
iret
push
or
sbb
outsl
cwtl
cmp
movsb
mov
mov
add
add
adcb
popa
or
stos
loopne
push
test
rcrb
mov
les
ja
movsl
xchg
add
mov
xchg
jmp
int3
cmp
push
pop
addr16
test
test
es
inc
lea
popa
add
add
add
out
and
sub
loope
shrl
add
mov
adc
dec
adcb
mov
jne
test
roll
mov
push
sbb
addb
add
xchg
movsl
movsl
inc
fidivs
stos
das
dec
cmpl
mov
mov
mov
add
jmp
jne
sbb
add
mov
adc
icebp
mov
push
fsubl
repz
cli
ds
arpl
xchg
test
loope
xor
adc
addr16
jb
mov
outsl
jmp
hlt
rep
cs
cwtl
scas
loope
inc
add
add
aaa
outsb
pushf
xchg
or
stos
loopne
pop
mov
in
jge
adc
add
icebp
pop
inc
pop
pop
mov
cmp
push
dec
jmp
inc
mov
fwait
lea
popf
fldt
sbb
addr16
mov
add
addl
cmp
mov
jbe
jg
insl
call
add
add
add
add
add
jmp
pushf
jp
pop
xchg
popa
jbe
fcmovu
je
or
add
add
rcrl
addr16
dec
mov
jp
sbb
or
add
add
or
add
add
ja
mov
jo
movsb
mov
jg
ljmp
sarb
push
ljmp
in
push
xchg
sub
add
add
fsubrp
aam
rol
push
jo
call
aaa
aad
and
imul
inc
xor
add
add
mov
stos
lret
movsb
fisttpl
sub
xchg
aad
jne
add
shll
add
dec
andb
mov
cmp
mov
cmc
jno
mov
and
mov
mov
and
adc
popf
movsl
cs
sub
add
add
mov
pop
cwtl
test
fcmovu
adc
repz
cmp
lcall
fbstp
add
add
out
cwtl
dec
cmp
mov
pop
outsl
adc
add
add
outsl
dec
add
add
in
lods
pop
repz
dec
or
add
add
fimuls
add
xchg
adc
stos
loope
fnstenv
pop
std
pop
leave
stos
hlt
add
mov
mov
pop
adc
ljmp
mov
add
push
lahf
sbbb
pop
push
jb
rclb
lcall
sbb
adc
imul
inc
or
sti
mov
mov
add
and
add
add
add
sub
fwait
test
mov
inc
mov
mov
mov
les
stos
fadd
jae
lahf
add
dec
add
add
add
jl
mov
adc
jbe
push
mov
pop
aad
out
pop
mov
pushf
lahf
mov
jae
jno
add
pop
insb
mov
pop
or
add
add
fs
data16
jle
lock
push
enter
jge
inc
mov
mov
sub
iret
insl
test
mov
not
fwait
mov
in
mov
dec
in
ret
fdivl
mov
sub
in
iret
into
add
cli
and
xorl
hlt
mov
xchg
fldl
mov
loop
repz
std
dec
mov
xchg
or
mov
inc
mov
push
movsb
int
dec
add
add
or
add
add
outsl
insb
mov
pop
push
repnz
add
cs
xor
cmp
mov
ss
neg
and
mov
jb
adc
add
add
xor
jne
or
mov
les
add
jae
pop
cwtl
or
das
in
mov
push
movsb
pop
inc
push
ds
mov
xchg
sarb
ret
and
dec
mov
js
lahf
sarb
pop
fcomip
cmp
shll
loopne
fisttps
ficomps
cmc
sbb
add
test
fwait
andl
add
add
scas
add
out
insl
adc
or
dec
insb
add
add
xchg
and
add
add
xor
mov
add
add
aad
adc
add
add
sahf
in
iret
or
add
add
in
cli
xchg
mov
lcall
add
mov
into
lds
xchg
xchg
inc
in
ss
iret
outsb
fcomps
add
jp
inc
inc
cltd
aad
inc
add
add
inc
push
dec
xchg
sub
add
add
sbb
add
mulb
stos
movsb
sbb
and
es
mov
push
int
das
xchg
jp
dec
test
add
and
mov
lcall
xor
dec
add
add
sub
add
add
xlat
pop
mov
in
or
add
add
dec
lods
out
std
pop
push
dec
xchg
or
rcll
lahf
pop
clc
ss
or
add
clc
mov
inc
mov
mov
add
push
inc
mov
add
add
inc
dec
add
add
loope
pop
inc
cmpsl
inc
sub
pop
push
sub
mov
movsl
mov
add
add
add
add
sbb
pop
jo
lods
mov
fcmovnb
push
pop
pop
pop
add
lret
sbb
js
lock
add
add
mov
movsl
fists
stc
pop
mov
mov
jo
shrb
pop
fnsave
adc
rsm
pop
movsl
iret
jns
lret
loopne
xchg
int
fistpll
sub
cmpsb
in
mov
pop
stos
outsl
mov
xor
add
inc
mov
cmp
mov
div
popa
xchg
shll
push
imul
add
add
xchg
add
and
int
flds
lcall
xor
imul
push
cmpsl
push
stos
loope
mov
add
mov
pop
mov
and
icebp
cmpsb
mov
stos
cli
push
cmc
push
inc
cmc
and
add
add
test
push
out
or
add
add
mov
mov
insb
mov
stos
add
add
and
add
add
test
lds
adc
dec
sbb
out
dec
adc
pop
idivl
lea
mov
push
xchg
cmp
mov
pushf
enter
mov
xchg
xlat
int3
xchg
in
cltd
dec
iret
cmpl
and
add
add
mov
pop
or
and
pop
push
and
subb
add
mov
test
mov
repz
mov
push
add
imul
and
js
loop
mov
fildl
pop
push
jge
push
dec
dec
sub
jbe
and
xor
clc
or
add
add
pop
roll
and
jp
adc
add
addr16
aad
pusha
mov
or
add
add
push
and
outsl
sub
cmpsl
dec
fidivs
sub
xor
lods
pop
push
sbb
shlb
fdivs
dec
add
add
or
add
add
addr16
dec
add
add
imul
int3
mov
add
cli
out
xor
add
push
dec
add
add
or
cmp
pop
lock
nop
fistpll
movsl
mov
sub
add
add
int3
test
cmp
adc
loopne
xchg
in
or
jg
pop
pop
fldenv
in
les
iret
xor
jns
adc
sub
fwait
mov
loope
and
adc
std
inc
icebp
inc
rep
push
xor
mov
mov
outsl
cmc
mov
gs
shl
idivl
pop
cmp
cmpsl
mov
gs
pop
xchg
push
push
sbb
sub
add
add
push
enter
in
dec
mov
rcrl
js
mov
fsubrl
mov
adc
inc
cmp
out
push
fadd
sarl
add
pop
sbb
daa
dec
mov
mov
xchg
and
sub
sub
add
add
push
jnp
sti
push
sub
arpl
mov
add
xchg
cmp
mov
mov
in
push
sti
jnp
pop
xchg
popa
sahf
call
mov
or
hlt
adc
out
jbe
cli
sbb
jns
mov
mov
pop
sbb
pop
inc
mov
pop
cmpsb
in
sbb
stc
mov
cld
mov
xchg
and
add
add
cmp
or
add
add
add
add
add
add
popf
lods
xchg
jbe
rolb
data16
add
add
outsl
jmp
insl
cmp
cld
daa
mov
add
scas
jno
cmp
mov
sbb
pop
pusha
add
add
call
movsb
inc
push
and
imul
add
rep
int
add
mov
add
push
push
int3
xchg
cs
xlat
jle
mov
mov
mov
cmp
movsl
sbb
leave
ss
das
xchg
lret
aad
add
cmp
movsb
mov
fisubl
pop
or
add
add
mov
data16
jecxz
add
lods
xchg
call
jecxz
lret
int
and
add
add
ss
ret
jo
pusha
mov
add
add
add
ds
inc
jbe
jg
mov
inc
and
add
add
stos
pop
fistps
and
add
add
xor
pushl
push
sub
add
add
ja
adc
jne
icebp
daa
inc
mov
ds
or
jo
xor
fisubrl
jbe
sub
sbb
adc
inc
add
add
lods
inc
add
add
and
movsb
aad
mov
mov
pusha
mov
cmpsl
adc
cmpsb
lahf
mov
fdivrl
jmp
test
mov
mov
mov
dec
add
add
push
sub
add
add
out
xor
mov
gs
std
mov
push
adc
push
inc
gs
jmp
fwait
pop
inc
pop
push
sbb
adc
add
mov
add
imul
cmp
in
jb
xchg
je
inc
mov
std
enter
and
mov
push
inc
xlat
xlat
add
add
add
pop
sub
dec
sbb
push
stos
cwtl
mov
sbb
xor
jne
sub
add
add
lret
mov
mov
stos
out
xlat
js
xor
mov
outsl
ss
out
frstor
add
add
leave
inc
int3
arpl
cmp
cmp
push
push
out
xor
mov
add
add
sahf
scas
mov
mov
or
pop
add
jb
add
scas
ja
stc
and
out
pop
pusha
mov
repnz
mov
add
add
add
aas
adc
icebp
lret
fisubs
pop
xor
add
iret
sub
jbe
xor
insb
add
add
or
add
add
icebp
mov
xchg
xor
lret
add
mov
sar
call
rcll
or
cmpsl
add
cli
hlt
test
mov
lcall
or
xchg
je
xchg
add
add
add
jecxz
pop
icebp
jnp
mov
mov
xchg
push
cmp
cmp
xor
loop
cmp
xchg
sbb
add
add
mov
jo
mov
pop
mov
xor
xchg
lcall
add
add
add
dec
mov
mov
mov
mov
xchg
push
filds
add
out
ret
icebp
out
js
cs
fsubrl
lahf
cmp
cmp
mov
cld
arpl
dec
xor
ret
jg
in
add
cmp
ret
dec
mov
pop
pop
stos
dec
push
decb
in
fwait
rcr
repz
pop
test
pop
stos
je
je
pop
ret
adc
sti
inc
add
add
mov
mov
test
sbb
push
enter
add
push
ret
and
add
add
mov
dec
mov
std
incb
in
loope
cmc
xchg
cwtl
dec
adc
mov
dec
mov
aam
shlb
jnp
scas
cmc
lahf
ret
inc
add
add
addl
sub
add
lret
push
push
mov
add
add
ret
pop
ret
add
add
push
add
add
add
add
add
inc
inc
mov
je
push
das
mov
mov
xor
pop
outsb
xor
in
fwait
orl
mov
dec
mov
or
call
jbe
movsb
push
fiadds
add
bound
fistpll
add
add
jmp
daa
enter
push
shl
xchg
inc
call
stc
and
mov
imul
mov
add
pop
dec
pop
inc
mov
enter
push
icebp
or
add
add
sbbl
cmc
inc
por
mov
std
sbb
jle
lret
adc
xor
test
push
cmpsl
dec
add
add
jo
xor
test
popa
pop
mov
and
push
pop
inc
mov
das
gs
sbb
adc
inc
scas
inc
push
dec
mov
popf
sbb
das
in
call
xchg
mov
test
jbe
orl
data16
enter
add
mov
add
inc
add
add
xor
add
add
add
add
and
add
add
add
lds
jg
push
mov
test
imul
xchg
fisubrs
insb
mov
and
add
add
sub
sbb
imul
in
mov
je
sbb
test
jmp
add
mov
fldl2e
add
add
add
pop
dec
mov
add
add
add
enter
addr16
orps
jo
lea
repz
imul
cmp
xchg
out
ret
lods
push
sub
pop
sahf
xchg
mov
add
pop
dec
add
dec
push
fwait
int3
adc
mov
mov
or
mov
nop
jg
in
in
cmc
loope
sub
iret
xchg
imul
aam
scas
xchg
mov
or
add
add
sub
dec
lock
loopne
push
sub
js
mov
fidivs
adc
adc
scas
mov
outsb
mov
sbb
sub
sub
inc
lods
movsb
icebp
mov
addr16
dec
add
add
fists
inc
std
es
cmp
pop
cltd
sbb
add
fisubl
push
and
or
adc
mov
add
repnz
dec
stos
jae
inc
jp
xchg
mov
and
out
popa
xchg
lods
mov
leave
lea
sti
in
hlt
repz
divl
mov
and
add
add
xlat
xchg
cld
mov
mov
sub
ljmp
add
dec
test
dec
mov
xchg
lcall
xor
repz
std
nop
out
pop
lcall
adc
pop
sahf
add
repnz
add
add
xor
add
add
add
jne
rcr
sub
enter
imul
pop
and
sbb
mov
mov
xor
stos
test
shrb
add
jmp
inc
outsb
inc
xchg
in
jns
push
mov
xor
outsb
in
cmpsb
lock
mov
xor
js
adc
add
pop
add
add
and
jp
mov
jne
loope
roll
push
mov
shll
cmp
inc
movsl
add
add
add
fdivs
hlt
stos
rcl
fldl
push
push
add
add
add
xor
mov
push
sub
insb
add
add
jecxz
das
fcomip
adc
sahf
in
dec
mov
out
cmpsb
mov
jo
and
add
add
loope
inc
mov
sbb
mov
aad
ja
out
cmp
jbe
xchg
xchg
repnz
inc
sarl
add
add
call
add
insl
int
xor
pop
mov
xchg
jp
sub
ljmp
mov
jb
mov
or
and
sub
add
add
add
add
adc
add
add
add
xchg
cmp
sbb
pushf
dec
add
add
mov
jge
dec
cmp
mov
add
gs
pop
fcmovu
mov
mov
fmuls
aaa
sub
add
add
bound
mov
dec
mov
inc
ja
lret
xchg
push
lods
adc
mov
xchg
movsb
adc
inc
xor
cs
or
mov
imul
imul
add
ss
insb
add
add
push
loopne
mov
inc
add
add
lock
mov
add
lock
cmpsb
movsl
sbb
imull
cmc
pop
or
cmc
inc
jne
arpl
add
aaa
push
dec
adc
push
out
pop
inc
int
stos
inc
mov
cmp
add
add
add
es
rolb
add
add
jae
cmp
dec
add
add
mov
inc
jae
orl
aaa
clc
mov
rcrl
repnz
xchg
mov
ja
cmp
jle
mov
mov
je
add
add
cmp
subl
mov
outsb
push
jmp
mov
adc
aad
add
add
and
in
mov
add
add
add
shl
push
xor
not
mov
fildl
addl
add
cmp
stos
pop
push
push
popa
mov
dec
fistpl
or
push
sahf
pop
out
inc
mov
push
pop
xor
add
add
add
cmc
jg
jb
andl
ds
mov
enter
mov
pop
dec
cs
ds
stos
mov
mov
fs
add
add
hlt
cmp
mov
inc
inc
mov
add
sbb
mov
test
mov
add
or
ljmp
lock
add
add
lar
ja
push
ss
add
lret
cmp
sarl
in
xchg
pop
rorl
es
loop
loopne
push
std
mov
add
add
fsubp
mov
lcall
add
pusha
mov
and
test
lods
mov
push
inc
add
add
mov
addr16
add
add
add
add
and
shrb
jle
adc
add
lret
fiadds
add
add
sub
jmp
out
out
insl
jmp
pop
cmp
outsl
jns
push
addr16
sbb
push
push
adc
fucomi
out
pop
popa
and
aad
add
add
inc
xchg
mov
mov
mulb
mov
in
or
pop
icebp
lahf
push
push
stos
mov
lret
push
in
je
push
add
add
add
sub
sub
add
add
pop
mov
push
out
fincstp
mov
add
add
mov
push
mov
aad
xchg
jb
int
add
add
fnstenv
imul
xchg
push
or
in
dec
mov
call
fisttpll
add
add
hlt
vpavgb
daa
mov
add
add
ret
and
mov
mov
adc
pushf
mov
mov
je
nop
push
and
mov
hlt
stos
daa
xchg
push
or
add
add
jae
movsb
mov
mov
jle
shrl
fcomi
jb
gs
lods
das
sbb
add
add
xor
incb
push
mov
mov
xor
daa
dec
add
sub
add
add
push
fiaddl
add
add
push
cmp
add
add
push
push
inc
stc
pushf
add
sub
add
add
add
dec
mov
adc
add
fdivr
std
aam
pusha
add
add
xchg
loopne
dec
add
cmp
add
mov
push
and
insl
stos
dec
jae
fisttpl
mov
sti
push
and
add
add
add
icebp
cld
dec
out
add
add
cmpsl
sbb
add
add
leave
int
dec
in
xor
add
mov
xchg
ljmp
js
lcall
andb
or
xor
cltd
inc
cmp
mov
add
mov
pop
or
sub
add
add
or
add
push
out
xlat
and
add
add
dec
cmp
xorl
sbb
mov
sbb
push
pop
repnz
and
jle
mov
jecxz
out
outsl
jb
mov
adcb
add
add
mov
test
add
add
cmovs
add
add
add
mov
lods
nop
fisubs
mov
test
add
add
xor
adc
imul
add
add
add
xor
or
add
add
cmp
xchg
inc
ret
sbb
fwait
dec
mov
inc
sbb
rorb
sbb
fidivrl
add
add
mov
and
mov
cmp
divb
and
popa
or
add
add
pop
cmc
lods
in
mov
sub
push
inc
push
lahf
fcoms
int
mulb
add
add
movsb
and
add
add
cwtl
in
cwtl
jg
adc
add
sub
add
add
aad
dec
mov
popa
cmp
les
sbb
ljmp
movsb
lea
loopne
sbb
rorw
add
add
push
or
aas
frstor
add
add
enter
add
add
and
inc
pop
scas
lret
cmp
cmp
inc
mov
mov
cs
mov
mov
add
add
loope
dec
mov
push
dec
cmp
and
stc
and
filds
pushf
xchg
xchg
movsl
cmp
push
push
loope
and
add
add
jg
dec
imul
mov
jg
subl
push
sbbb
add
aad
push
mov
jmp
mov
mov
adc
fstps
icebp
xor
lahf
daa
xor
push
pop
xor
add
add
jns
jnp,pt
fstpt
enter
add
add
jg
daa
push
pop
xchg
pop
in
mov
cltd
xchg
mov
enter
notb
add
xorb
lahf
sbb
inc
add
add
in
addr16
in
jp
add
add
xchg
jnp
xor
addr16
inc
movsl
mov
fadd
mov
sub
aam
xchg
xchg
ds
in
or
add
add
in
lock
jnp
insl
push
mov
add
jns
xor
add
add
push
outsb
adc
jge
pop
add
add
add
into
mov
dec
add
add
clc
mov
add
add
test
add
add
cmp
xchg
lock
add
and
jmp
arpl
add
add
push
add
jg
sarl
lret
enter
and
orb
sub
add
add
mov
mov
xor
ljmp
test
adc
and
lods
add
dec
cli
cmp
push
ret
adc
inc
mov
sbb
sbb
mov
mov
repz
sub
add
add
xor
adc
icebp
outsl
int
pop
sbb
sahf
insl
into
ret
mov
xor
mov
xchg
adc
add
add
add
add
gs
add
add
push
cmp
mov
xchg
mov
sbb
add
add
cwtl
imul
jge
jns
push
jo
fs
dec
movsl
ret
and
add
inc
xor
xor
rcl
vcvtpd2psx
add
add
add
mov
add
add
es
fldl
xor
dec
jbe
shl
xchg
jmp
jbe
mov
xor
mov
cwtl
or
add
add
imul
add
xorl
add
xlat
lret
inc
add
add
xor
jnp
lock
test
mov
cmpsb
dec
add
add
mov
add
out
push
sbb
mov
and
lahf
sbb
xchg
inc
adc
mov
pop
sbb
in
jno
mov
push
xchg
mov
push
adc
add
movsb
sahf
data16
add
add
rcll
mov
add
sahf
or
jp
mov
add
dec
std
mov
xchg
lds
adc
mov
mov
inc
mov
adc
push
hlt
mov
add
mov
xchg
mov
mov
sbb
scas
jae
push
and
add
add
dec
or
insb
add
add
pop
cmp
add
add
loopne
clc
jecxz
in
sbb
mov
mov
sahf
test
nop
enter
and
mov
push
cmc
cmp
lret
push
or
add
add
int
add
add
xorl
add
sar
adc
add
sub
add
add
in
xchg
adc
fdivl
mov
int3
xchg
or
mov
scas
ret
xor
add
out
nop
inc
dec
fld
cltd
xor
inc
dec
int3
and
insb
mov
pushf
xor
mov
aaa
add
and
xchg
pop
pop
addb
adc
scas
pop
push
es
js
mov
xchg
pop
lret
movsl
pop
cmp
push
js
addb
cmp
mov
xchg
sub
mov
es
leave
pop
in
adc
aam
popa
mov
mov
aad
jmp
push
fisubrs
add
add
add
add
adc
fstpl
ret
divb
mov
sub
add
add
sbb
adc
jnp
or
inc
fisubrs
je
imul
arpl
mov
popf
sbb
sbb
add
add
icebp
imul
andb
add
add
mov
dec
add
add
incl
stos
arpl
mov
pop
je
xlat
inc
add
add
push
mov
xchg
inc
cmp
ret
dec
in
pop
fists
cmp
arpl
add
add
push
scas
out
or
out
lret
dec
shl
fstpt
es
insl
fisubl
fwait
adc
mov
lods
xor
lret
and
add
add
inc
adc
cmp
mov
xor
sub
add
add
lret
xor
out
lock
into
or
jnp
or
mov
popf
xor
popa
lock
or
jns
scas
cmpsl
jo
mov
cmp
mov
jbe
filds
insb
mov
loopne
sbb
add
lcall
mov
ja
xchg
gs
lahf
ret
or
add
mov
cmc
mov
data16
add
add
add
cwtl
inc
mov
xor
and
add
add
mov
or
push
pusha
add
add
in
xchg
dec
std
mov
pop
lcall
push
mov
loopne
iret
fwait
aad
pop
inc
push
xchg
cmp
mov
lods
xor
stos
pop
cmpsl
xchg
and
movsb
repz
add
add
add
outsb
aaa
out
mov
dec
jle
mov
test
aad
cs
sbb
and
scas
fdiv
in
add
xchg
push
inc
mov
bound
add
rcrb
shll
pop
popl
and
sub
sbbl
cmp
cltd
testl
add
fistpll
in
dec
test
add
outsl
push
dec
add
add
enter
out
shrb
lret
imul
xchg
cld
sbb
inc
out
add
lock
push
mov
sbb
loopne
ret
adc
movsl
push
cmp
mov
add
add
add
add
xor
add
add
int
cmp
cmp
lea
pop
xchg
mov
sbbb
dec
lods
fisubrs
cmpl
incb
fcompl
ret
fs
mov
mov
pop
mov
shlb
iret
rorl
add
add
ljmp
mov
mov
ja
adc
xor
jmp
push
lock
add
add
es
mov
movsl
and
imul
imul
ret
aam
mov
add
add
shlb
add
add
lods
loop
inc
sub
cmpsl
add
clc
cltd
and
add
add
add
inc
mov
inc
outsl
jecxz
mov
std
stc
or
jno
and
add
popf
outsb
jbe
js
subl
xchg
addb
add
add
pop
mov
mov
hlt
pop
jns
dec
lods
pop
and
scas
cmp
add
add
std
jge
pusha
add
add
into
movsb
aam
jbe
lea
add
mov
mov
add
add
add
andl
add
add
add
dec
dec
add
add
incl
movsb
pop
mov
cmp
mov
adc
mov
xchg
push
xchg
push
or
add
add
subb
sub
add
add
dec
call
cmc
sub
or
aas
push
push
imul
inc
mov
cmp
adc
or
or
inc
add
add
mov
cld
cmc
pop
and
clc
imul
add
daa
lea
cmp
dec
xor
add
adc
add
loopne
rorl
mov
aaa
rcl
or
and
add
add
or
add
mov
loop
inc
mov
add
add
add
mov
mov
add
add
cmc
mov
add
add
push
subb
mov
and
add
push
inc
int
dec
jge
pop
lods
or
xor
add
add
push
pop
lahf
inc
add
add
fisttps
dec
add
add
popa
out
jb
insl
pushf
pop
jg
inc
mov
add
add
add
ret
sub
pop
cltd
sbb
xor
dec
sub
adc
sbb
add
add
pop
mov
inc
pop
cmp
add
loop
jb
add
dec
push
loope
xor
push
mov
fildl
jae
les
scas
lahf
sbb
cli
lods
pop
je
dec
mov
jae
mov
push
std
xor
jmp
add
add
orb
in
or
push
je
add
add
dec
mov
pop
jg
inc
rorl
adc
shrb
aas
pop
mov
mov
jb
push
or
cmc
in
dec
add
mov
push
js
rcrb
stos
hlt
movsl
add
add
in
into
insb
add
add
mov
mov
mov
mov
xor
ror
je
xchg
ljmp
movsl
xorb
adc
add
cmpsl
pop
insb
mov
int
lds
push
push
insl
mov
test
sub
push
mov
shll
fdiv
push
adc
mov
or
add
fwait
outsl
cmp
adc
gs
add
fisubl
add
or
xchg
rorb
inc
mov
xor
enter
add
add
lcall
mov
push
and
xchg
dec
mov
decl
add
push
mov
fcompl
jo
mov
dec
or
add
xchg
lret
addr16
lcall
or
jno
test
add
add
pop
fmulp
or
popf
lods
add
sub
insl
aaa
pop
dec
xchg
jl
push
jo
push
in
dec
sub
mov
and
jecxz
add
lret
mov
add
push
pop
or
add
add
cmp
add
add
test
mov
jl
sbb
mov
pop
imul
outsb
push
push
pop
cwtl
pop
xorl
push
les
add
add
je
test
aam
pop
pushf
psubq
movsl
pop
xchg
and
les
mov
add
stc
sbb
or
add
jl
rcrl
out
cmp
mov
mov
sub
add
add
push
arpl
enter
mov
mov
hlt
roll
push
pop
jle
mov
add
addl
add
add
mov
xchg
xor
push
add
and
addl
jp
add
add
test
add
add
pop
mov
paddw
add
add
or
sbb
xor
lods
mov
lret
adc
or
mov
mov
insl
test
mov
pop
xlat
repz
mov
add
xchg
enter
mov
xor
add
dec
fisubs
add
add
imul
or
das
inc
mov
mul
add
add
add
jle
push
push
sub
adc
jno
ret
lods
cwtl
popa
incl
dec
shlb
cmpsl
mov
add
add
es
xchg
fistpl
ljmp
adc
push
sub
add
add
test
add
add
jmp
adc
add
add
int3
and
add
add
xorl
xchg
jne
das
imul
push
stos
call
add
add
sub
fcoml
insl
sbb
and
add
add
add
add
out
mov
imulb
mov
je
rorl
cs
cwtl
pop
loope
nop
or
pusha
add
add
je
cmc
jo
cmp
pushf
in
jge
mov
sub
divl
sub
mov
cli
push
test
lock
sub
fdivrl
jb
xchg
mov
mov
leave
pop
lds
ret
fiaddl
push
mov
push
sar
add
add
cmpsb
repnz
fnsave
mov
xchg
mov
and
cwtl
cmp
cld
mov
add
add
dec
lock
jae
repz
adc
test
insl
push
push
and
pop
pmulhw
pop
sbb
add
add
sub
add
add
add
add
out
and
pop
out
cmp
xchg
gs
pusha
mov
push
imull
jle
xor
les
add
add
fwait
xchg
push
fstl
mov
mov
dec
pop
pop
sub
add
add
dec
sbbl
add
scas
leave
xor
add
add
cmp
sbb
pop
cmpsb
loop
shr
bound
add
add
add
les
and
add
add
dec
ds
in
or
mov
add
fnsave
add
sbb
mov
scas
inc
sbb
fistl
push
mov
push
adc
cli
scas
dec
jne
jge
lock
js
adc
popf
inc
add
fwait
cwtl
dec
add
add
mov
mov
rorb
mov
mov
incl
mov
inc
cltd
cmp
hlt
sbb
xchg
push
pop
xor
push
inc
dec
popf
js
int3
push
sub
add
add
insl
pop
mov
mov
das
ss
scas
xchg
push
sbb
jne
aaa
jns
ss
add
mov
or
add
add
xchg
jl
ja
or
loope
iret
test
sbb
imul
shrl
mov
xor
xor
icebp
pop
call
mov
push
popf
rcll
xchg
gs
and
lahf
mov
loope
cld
adc
stos
imul
outsb
es
cmp
idivl
mov
mov
fs
popa
sti
xchg
cmpsl
sub
cmpb
hlt
inc
notb
and
scas
loope
mov
push
stos
inc
mov
jbe
test
cmp
pop
pop
arpl
xor
add
add
add
popf
mov
cs
or
add
add
shlb
sbb
ja
aad
mov
stos
and
cmp
xchg
test
enter
aam
nop
in
inc
mov
add
add
add
add
es
pop
int3
std
adc
pushf
int
inc
mov
dec
add
add
dec
jb
js
mov
mov
pusha
add
add
xchg
inc
add
add
aam
aam
out
add
add
js
ss
nop
cmc
pop
or
xchg
xchg
cmp
add
loope
push
mov
adc
loopne
in
fwait
lea
cmp
mov
out
popf
out
call
sahf
jb
xor
add
add
add
add
in
int3
cmpsb
adcl
in
dec
gs
jne
imulb
and
fwait
out
pushf
xor
shll
add
add
pop
sbb
mov
loope
imul
shlb
std
xchg
xchg
push
pusha
add
add
repnz
jo
push
adc
xor
jmp
mov
xor
mov
add
add
add
add
dec
add
add
int
cmp
add
add
mov
jnp
mov
add
push
int
inc
mov
mov
scas
cmp
or
add
add
clc
ret
inc
xchg
stc
mov
add
add
cmp
xlat
shlb
push
or
add
add
clc
rcrl
sub
sbb
pop
aaa
mov
push
lea
add
add
mov
out
flds
scas
mov
inc
mov
cmc
cwtl
dec
fistl
dec
inc
cmp
int3
jb
jbe
sbb
mov
inc
movsl
xlat
pop
or
inc
cmp
rcrl
aam
pop
lea
mov
add
add
ja
xor
lret
cmp
inc
push
shlb
add
pop
and
adc
data16
clc
pop
and
add
add
mov
pop
sub
mov
add
add
fdivrs
sti
jl
lds
jp
mov
nop
leave
jae
jbe
mov
enter
add
repnz
push
in
js
push
out
scas
rcll
imul
mov
in
adc
jmp
mov
mov
lods
sbb
add
jmp
adc
pop
iret
in
xor
push
mov
stc
mov
imul
lods
sarb
jmp
add
movsb
sub
leave
adc
sbb
add
add
add
mov
add
add
outsb
ljmp
add
add
lret
pop
fimull
mov
int3
pop
or
add
add
jae
arpl
and
or
add
add
lahf
cmpsl
mov
iret
jecxz
rcrb
clc
xchg
pop
push
mov
dec
pusha
mov
icebp
inc
jle
mov
cs
or
add
add
jl
mov
fsubrl
add
add
xor
add
lds
push
stc
arpl
leave
hlt
pop
push
xchg
shlb
sbb
inc
fs
push
lahf
faddl
mov
and
add
add
push
ss
into
ret
cmp
ret
addl
cli
cmp
imul
test
vandps
mov
push
or
add
add
mov
in
je
jb
andl
ror
cmc
pop
jle
or
add
add
sarb
imul
stc
lret
inc
std
stc
stos
and
aam
mov
inc
mov
jnp
mov
test
jns,pn
incl
cmp
loope
in
stos
in
loope
add
add
push
dec
mov
popa
jmp
outsb
sub
add
xchg
aad
mov
repz
add
cmp
insl
or
mov
mov
insl
dec
push
js
adc
inc
or
pusha
add
add
in
rcll
adc
add
add
and
cmp
jle
movsb
ret
mov
jne
cmc
test
movsl
scas
push
js
in
clc
dec
add
add
xchg
shr
adc
adc
dec
pusha
add
add
inc
jb
xchg
lahf
mov
cmpsl
ret
test
push
je
adc
loopne
stc
adc
cs
ret
push
sbb
fcoml
out
xchg
xor
jbe
or
cmp
std
fstps
je
jmp
xor
faddl
add
dec
pop
fldenv
pop
movsl
mov
in
sahf
mov
repz
mov
or
xchg
cmp
add
add
add
lods
cmp
mov
gs
mov
mov
aaa
fldcw
add
add
mov
mov
mov
push
lods
add
ret
pop
xchg
jmp
jecxz
mov
shll
jo
and
add
add
push
scas
pop
inc
xor
mov
cli
aas
pop
mov
xchg
jae
cli
dec
popf
out
mov
in
lock
lret
lods
and
pusha
add
add
ficoml
push
adc
mov
das
hlt
fldcw
scas
ljmp
nop
out
push
loopne
les
call
add
xor
repz
cli
lret
add
add
jl
out
jno
mov
inc
dec
dec
insb
mov
sub
scas
out
mov
adc
cmp
push
bound
jbe
icebp
and
dec
sbbb
cwtl
aad
xor
xchg
cmp
inc
jecxz
jg
mov
sbb
lret
add
add
aam
pop
cltd
adc
xchg
add
add
ja
sub
add
add
outsl
add
inc
mov
lock
imul
mov
add
idivb
je
scas
aaa
int3
int
fsts
xchg
fildl
mov
push
stos
fidivs
aam
ja
out
scas
push
mov
add
add
cmpsb
adc
movsb
movsl
faddp
pushf
add
rol
popa
cmc
movsl
cltd
fiadds
mov
jg
cmp
mov
and
sub
ret
fcmovne
sbb
fwait
test
hlt
jle
rorl
add
add
jmp
mov
out
pop
mov
mulb
shlb
cwtl
mov
xchg
scas
test
jo
gs
add
add
add
xchg
add
add
add
out
int
dec
std
pusha
mov
push
scas
insb
add
add
pusha
add
add
lock
xor
and
pushw
and
mov
add
jns
mov
hlt
xchg
add
add
lods
lahf
adc
push
push
mov
add
add
add
test
xor
or
add
add
add
push
cs
add
add
cmp
add
add
mov
inc
or
add
add
jmp
ja
mov
jge
in
add
add
xchg
stos
scas
adc
pop
aaa
mov
pop
xor
xchg
out
lahf
mov
adc
mov
dec
fwait
test
testl
cmp
out
jns
mov
add
outsb
dec
xchg
cmp
xchg
sub
mov
push
xlat
mov
push
fnstenv
xchg
cmpsb
lret
push
aad
xchg
sub
lds
add
add
dec
add
add
sub
add
add
mov
sbb
mov
pop
test
xor
cmp
sub
pop
jp
outsl
test
sub
daa
stc
xlat
movsb
pop
insb
add
add
rorb
or
add
add
inc
lods
sbb
pop
cmp
mov
addr16
ds
pop
jbe
mov
mov
repnz
cmpsb
out
dec
enter
mov
push
fdivs
and
mov
je
push
repnz
sahf
sub
add
add
in
jae
xor
xchg
scas
jb
add
inc
push
mov
fdiv
fsubs
jne
arpl
adc
je
or
push
addb
add
mov
add
add
add
add
nop
mov
jge
dec
fucomip
dec
add
add
jo
in
iret
int
lahf
inc
mov
xchg
sub
add
loope
adc
xchg
add
jle
add
add
or
add
add
add
add
xor
outsb
outsl
push
mov
call
lcall
add
cmpsb
out
jle
aaa
mov
sub
add
add
scas
repz
stos
add
sti
outsb
test
std
mov
add
add
add
add
cmp
pop
add
add
add
notb
jl
fldt
sahf
insb
mov
mov
adc
fcoms
add
add
dec
cwtl
insb
add
add
sti
in
add
add
xchg
or
cltd
cmp
popf
push
xchg
ret
xor
jno
add
add
xchg
sarb
sub
fisttpll
popa
add
cmp
add
add
sub
add
add
mov
sub
xchg
das
shll
inc
insb
add
add
rcrl
add
adc
add
add
ret
cmpsb
addr16
add
lret
shrb
add
sub
jnp
jne
xor
pusha
add
add
fdivrs
xor
jge
lret
dec
sbb
add
push
and
out
dec
add
add
xchg
and
lds
add
inc
add
add
jl
jl
add
add
dec
add
add
inc
push
out
jae
test
clc
dec
jmp
add
add
daa
je
jnp
int3
enter
lcall
cmp
mov
mov
jb
cmc
leave
dec
daa
mov
jnp
dec
jp
pop
sbb
and
add
add
dec
cs
add
shrl
test
pop
xchg
jg
cmp
fnstenv
push
andb
or
jnp
and
fldl
add
add
je
inc
hlt
roll
shr
bnd
mov
dec
outsl
jo
clc
and
adc
das
jp
in
subl
in
addr16
jbe
int3
test
inc
push
fdivrl
pop
cmp
add
xchg
aam
gs
data16
dec
ss
pop
adc
dec
xlat
push
jbe
int
jne
xor
ja
xorl
add
add
add
fiadds
ljmp
add
cmpb
dec
std
mov
pop
test
sbb
add
add
decl
div
and
jae
mov
inc
xchg
fcomps
xor
sbb
push
or
aam
ss
push
jle
jl
lea
mov
fs
das
fmulp
hlt
loop
sub
lret
add
add
jne
add
add
rcll
fdivl
or
les
fisttps
scas
imul
and
inc
mov
inc
mov
inc
mov
and
adc
dec
sahf
ret
jns
scas
mov
jo
pushl
cli
adc
adc
inc
mov
rolb
sbb
and
mov
and
xchg
add
fmull
and
sbb
shrb
mov
addr16
sub
xchg
add
add
jecxz
adc
add
add
in
aam
inc
add
add
pop
int3
dec
mov
imul
add
mov
test
push
xchg
xchg
pop
mul
pop
add
pavgw
cmpsb
xchg
cltd
pop
popa
popf
ljmp
clc
add
add
sub
jl
inc
mov
add
add
into
sbb
loop
mov
fbld
mov
jge
popl
ljmp
cmpsb
lods
push
daa
xor
add
add
rcrl
inc
cmp
add
add
test
ret
sub
add
add
std
mov
add
add
mov
out
sbb
test
stc
sub
xchg
adc
stos
mov
add
test
or
mov
pop
add
add
add
xor
mov
repz
inc
sub
xor
cltd
push
sar
inc
aam
and
test
add
mov
icebp
mov
rclb
stos
dec
outsl
sbb
or
mov
jle
add
add
testl
in
xchg
xor
inc
dec
pop
inc
scas
or
fidivs
add
add
clc
clc
add
inc
dec
mov
sti
call
mov
call
jp
insl
sbb
add
add
cmp
sbb
fwait
jae
aam
and
add
add
jmp
dec
add
add
insb
add
add
mov
imul
int3
cli
push
cmp
das
aaa
and
outsb
dec
add
add
sub
add
add
adc
pusha
mov
cmp
lret
cltd
pop
cmp
dec
mov
and
mov
pop
mov
pop
cmpb
cmpsb
push
roll
add
xchg
repz
loop
mov
js
scas
sub
pop
mov
insl
or
sti
mov
sti
pop
cmc
cltd
add
test
add
iret
inc
inc
mov
or
cltd
adc
aaa
test
mov
xorl
pop
popf
sti
xchg
fisttpll
test
add
jp
jecxz
mov
out
push
scas
lods
mov
mov
out
lods
dec
mov
push
test
push
mov
stos
xchg
nop
sub
push
add
jecxz
loopne
xchg
cs
out
dec
fistps
add
push
ret
into
sub
cs
or
int3
repz
xchg
repnz
arpl
add
push
pushf
sbb
ss
jge
nop
add
js
mov
sub
add
add
add
add
sub
mov
mov
push
inc
inc
test
sti
or
add
add
lock
add
add
in
xor
pop
mov
outsb
jg
mov
icebp
sub
add
add
cmpsl
out
stos
mov
cltd
loope
out
and
cmp
addr16
movsl
mov
add
add
es
lret
enter
jo
std
jl
gs
jo
mov
shrl
add
xchg
push
fwait
imul
mov
dec
add
add
shlb
push
pop
lahf
mov
jae
mov
jmp
or
daa
lahf
mov
add
add
jbe
mov
dec
adc
loope
mov
sar
stos
test
mov
stos
aaa
or
xor
into
cmc
cli
inc
sti
nop
fwait
xor
bound
mov
fidivs
fnsave
add
and
outsb
not
shll
addr16
mov
sarb
mov
sub
testb
outsl
jb
and
ds
push
jae
lock
iret
and
add
out
lcall
mov
jmp
mov
iret
pop
enter
pushf
mov
sub
outsl
ror
pop
xor
mov
adc
inc
stos
imul
jecxz
push
push
loopne
lret
cmpsb
add
sarb
js
adc
xchg
lock
inc
movsb
jle
cmp
sub
add
add
shlb
bnd
shl
push
lret
cmovb
pushf
repnz
add
cwtl
xor
or
add
add
or
dec
xchg
inc
pop
dec
push
cmc
or
pop
adc
leave
popa
repz
lds
mov
or
xor
add
add
sub
scas
xchg
inc
lds
add
add
add
add
push
jmp
push
and
rcll
mov
add
mov
lcall
add
add
inc
push
or
xor
jecxz
jo
or
mov
pop
or
dec
pop
stos
rcrl
or
add
add
test
add
add
aaa
lcall
ss
movsl
push
pop
pop
loope
mov
inc
mov
xchg
imul
add
dec
dec
scas
xchg
insl
cmc
mov
arpl
xchg
int
mulb
repz
add
add
repz
cld
cmp
xlat
loop
pop
mov
test
iret
cltd
fimull
add
or
shl
daa
dec
mov
jl
popa
std
xor
mov
push
add
dec
add
xor
imul
cmp
int3
lcall
test
out
push
aaa
mov
fildll
xor
xorl
outsb
je
mov
pop
xorl
mov
mov
sbb
jns
pop
mov
nop
test
jns
pop
pop
sbbb
fsubr
lock
stos
xchg
adc
data16
fildl
and
and
add
add
sub
inc
fmull
mov
lret
mov
add
mov
rorl
jo
pop
dec
pop
dec
add
add
mul
loopne
jecxz
test
mov
add
imul
sbb
int3
loopne
jb
and
call
push
jg
inc
sbb
mov
add
aam
or
add
add
push
xchg
sahf
inc
add
add
cld
pop
cltd
movsl
xor
push
cmp
dec
andl
inc
add
add
fwait
mov
xor
add
or
sub
and
ss
or
add
add
sub
lods
popf
mov
mov
cld
jne
pop
out
std
mov
addr16
push
leave
jns
arpl
cltd
xor
mov
dec
call
or
add
add
dec
adc
popf
cmp
sahf
xor
js
popa
cmp
loope
repnz
mov
rolb
add
sbb
mov
mov
mov
add
movsb
bound
adc
fimull
mov
fwait
cltd
sahf
push
cmp
xchg
xlat
insb
add
add
imul
nop
call
add
iret
sbb
add
add
mov
mov
xchg
ja
inc
add
cmc
push
lock
mov
repz
sbb
or
push
sub
add
add
add
add
jne
pop
pop
lods
sub
add
add
lods
mov
sub
add
add
mov
repz
mov
xor
push
jmp
into
pushf
rorb
leave
sahf
xor
movsb
mov
push
and
mov
add
add
cmp
pop
mov
fmul
pop
dec
add
add
testb
movsb
je
xchg
arpl
es
add
add
pop
test
clc
enter
dec
mov
add
add
das
add
out
mov
jmp
mov
jb
fstpl
sub
mov
mov
adc
fbld
dec
sbb
mov
pop
sub
add
add
in
cli
mov
pop
stos
pop
stos
out
insb
mov
adc
out
inc
add
add
push
mov
or
add
add
lret
mov
cmp
mov
and
add
add
add
add
adc
xor
ret
and
subl
lods
add
add
push
icebp
int3
imul
mov
js
mov
mov
adc
add
add
push
xor
mov
xchg
outsb
pop
sub
cmp
sbb
push
fcoml
std
xchg
jb
mov
mov
inc
ret
sarb
xchg
test
insb
mov
into
data16
lock
mov
jl
rcrb
inc
sti
aas
imull
outsb
push
cwtl
or
add
add
jns
mov
xlat
jo
mov
add
xor
leave
hlt
mov
stos
cmpsb
ds
subb
icebp
ljmp
add
add
add
add
mov
scas
decl
adc
repnz
fbstp
xor
lahf
mov
push
jne
mov
cmc
xchg
sti
rolb
lret
push
cmp
gs
sub
xchg
popa
int
enter
jp
scas
rcrb
inc
pop
xchg
xchg
xchg
pop
lret
test
jo
fnstcw
rcrb
push
rclb
mov
mov
out
sbb
dec
stos
inc
int3
mov
int3
mov
mov
arpl
repnz
xchg
mov
xchg
xchg
fmul
gs
int3
or
add
add
scas
out
jne
gs
fwait
dec
add
add
xchg
ret
pop
cmp
sub
addr16
or
aas
jbe
inc
repnz
mulb
add
add
sbb
mov
jl
adc
fiaddl
xor
in
mov
movsb
cmp
add
add
sbb
add
add
xchg
adc
jnp
lcall
xor
push
movsl
adc
add
add
clc
jge
daa
cmpsb
pop
lret
add
add
in
test
sahf
daa
or
add
jge
arpl
jne
in
lods
xchg
into
and
add
add
or
iret
dec
dec
mov
add
add
push
mov
jl
stc
adc
add
add
pop
lea
movsb
dec
movsb
mov
add
add
add
arpl
add
add
inc
mov
add
add
mov
add
add
add
mov
nop
imul
add
add
cmp
test
lock
sarb
sbb
pop
and
add
add
push
rorl
add
pop
test
lahf
mov
sub
add
add
sbb
negl
adc
add
mov
mov
inc
pop
sbb
stc
test
ljmp
aad
lahf
sti
sarl
fcmove
fwait
mov
xchg
or
mov
testb
add
sub
popf
sbb
inc
cmovne
or
add
add
inc
pushf
roll
add
gs
add
adc
not
ja
jbe
cmpsl
fstpt
lods
bound
sub
add
add
aam
mov
fwait
repz
and
pop
insb
add
add
jle
test
inc
cs
and
add
add
mov
test
loopne
notl
xor
mov
jmp
bswap
jns
xchg
pop
out
outsl
or
push
insl
shr
bound
dec
std
sub
fcomi
es
loop
leave
scas
jo
insb
add
add
lds
shl
popa
insl
mov
addr16
fsubl
out
pop
movsb
dec
mov
push
pop
add
test
sub
add
js
test
dec
test
xor
ret
pushf
xchg
mov
sub
cmp
inc
imul
arpl
cld
mov
push
xchg
int3
lahf
jae
imul
mov
mov
lret
push
dec
jo
adc
add
add
dec
pop
out
mov
jg
pop
mov
fwait
jo
lea
pop
repnz
cwtl
movsl
push
adc
mov
adc
hlt
adc
rclb
rcrb
add
add
add
pop
fidivrl
int3
fildll
sub
push
push
clc
sub
repz
mov
mov
pop
pusha
mov
lcall
test
add
mov
mov
mov
mov
js
jl
leave
aaa
sbb
push
dec
adc
sub
adc
ret
adc
pop
or
mov
test
cmp
xor
and
inc
loopne
adc
insl
mov
sbb
mov
addr16
xchg
addb
pop
lret
ljmp
dec
push
test
cs
cmp
add
mov
inc
es
push
rcl
movsb
inc
add
add
out
rorb
mov
xor
add
add
mov
or
cmp
xchg
mov
nop
sub
add
add
add
ds
add
add
jnp
into
pop
push
cmp
push
mov
inc
add
add
std
adc
add
add
adc
sahf
jne
dec
incb
rorb
sbb
test
ret
mov
shll
sbb
sbb
cmp
mov
fs
inc
add
add
pop
outsb
call
test
add
lods
mov
add
icebp
lahf
sbb
push
push
popf
adc
add
add
add
cmpsl
inc
mov
mov
shrl
jne
add
add
gs
and
add
add
mov
add
add
cmc
inc
mov
repnz
in
xchg
sub
cmp
add
add
xchg
sub
adc
sbb
lds
inc
sbb
test
add
add
dec
or
loopne
jmp
adc
inc
push
out
clc
sbbl
adc
inc
add
add
pop
xchg
cmpsl
mov
dec
mov
pop
iret
fdivrs
or
xchg
jnp
int
jle
loop
inc
rcll
subb
push
jnp
js
xchg
cmp
fnsave
les
ja
ret
add
cmc
mov
mov
push
or
mov
mov
push
sub
add
add
imul
add
add
mov
mov
push
loopne
mov
cmpsb
xchg
add
add
fcomi
inc
dec
mov
or
add
add
xor
xchg
es
cmp
add
add
loope
jne
gs
add
add
test
cwtl
sbb
insb
add
add
enter
mov
ja
fldl
jo
add
add
jmp
leave
scas
insb
add
add
dec
jp
enter
repnz
movups
pmaxsw
and
add
add
int3
cltd
or
add
add
repnz
push
sarb
mov
dec
pop
pcmpeqw
cmp
sub
dec
push
popa
adc
mov
scas
mov
pop
pop
shlb
movsl
push
stc
push
mov
int
cmp
adc
sahf
test
mov
and
mov
pop
cmp
push
icebp
xor
cmp
in
insl
xor
mov
mov
into
jno
add
add
add
cmp
sbb
push
dec
rol
and
data16
add
add
pop
cld
push
daa
jne
and
lahf
gs
pop
xchg
jecxz
es
add
add
scas
aas
fmull
jg
add
add
pop
jae
pop
adc
sahf
mov
xchg
cmpsl
adc
add
cmp
rolb
or
add
add
mov
pop
push
dec
dec
ja
inc
imul
cmp
sub
or
das
pop
mov
aas
hlt
fsubrl
xchg
sbb
lcall
add
loope
ljmp
xchg
mov
push
push
inc
sub
add
add
cmp
push
ror
icebp
inc
and
add
add
outsb
mov
push
lock
outsb
or
pop
add
imul
add
add
add
add
push
push
lahf
mov
mov
pop
push
data16
scas
je
xchg
pusha
mov
call
cmp
imul
cmp
mov
push
jle
repz
insb
mov
cmp
xor
push
cmpsb
mov
xor
pop
outsl
xor
xchg
mov
pop
and
add
add
and
mov
and
add
add
arpl
sub
out
mov
shl
out
mov
mov
mov
xchg
aad
cwtl
sbb
aad
add
add
push
imulb
cmc
aad
int
xchg
adc
fld
hlt
mov
mov
rcll
cltd
pop
add
add
add
fisubl
xlat
cltd
jle
movsb
sub
push
mov
add
add
dec
add
add
push
or
pushf
sbb
fimuls
pop
dec
adc
add
clc
or
add
add
jge
adc
call
add
add
sarb
add
jae
mov
out
and
xchg
rcr
arpl
sbb
in
cmp
sub
add
add
sbb
lret
jne
std
jb
xor
add
dec
jo
test
sbb
stos
sub
add
add
add
add
sub
add
add
xchg
dec
xchg
cwtl
hlt
test
out
mov
or
cmp
hlt
imul
adc
jns
jae
repz
push
xchg
push
add
test
js
pop
jmp
jo
cmp
jle
cmpsb
add
cmpsb
push
insb
mov
cmp
imul
push
push
pushw
mov
in
dec
jb
dec
stos
push
daa
xor
stos
pop
push
cmp
or
dec
add
add
dec
adc
xor
ret
imul
add
insb
mov
adc
sbb
iret
push
outsl
jno
adc
fwait
clc
addl
std
xchg
mov
mov
shl
ret
add
add
stos
stos
xor
mov
into
push
mov
xchg
mov
pop
mov
rol
jp
loop
cmp
fsubs
das
dec
repz
leave
mov
ja
fs
jle
pop
jnp
cltd
adcb
nop
ljmp
sbb
mov
mov
add
add
jae
aaa
pushf
ljmp
push
scas
xchg
sahf
pop
pop
push
cmp
add
int3
jne
xlat
scas
ljmp
fildll
popf
cwtl
jbe
icebp
adcl
inc
mov
loopne
inc
adc
aam
gs
lahf
pop
repz
or
add
popf
mov
mov
fistl
ret
mov
push
push
int3
hlt
push
iret
inc
or
add
add
shrl
add
add
mov
add
ss
jecxz
out
cs
inc
and
inc
add
dec
xlat
cmp
sbb
pop
mov
mov
xor
sub
add
add
pop
jg
inc
mov
mov
test
xor
clc
inc
adc
cli
xor
inc
in
fwait
adc
stos
jg
or
scas
pop
pop
ljmp
and
icebp
xlat
inc
lret
sbb
add
add
or
add
add
add
add
or
sahf
hlt
je
lods
mov
int
movsb
xor
jno
or
add
add
xchg
scas
cmpsb
push
mov
test
nop
faddp
loope
daa
stc
push
inc
test
gs
aas
xchg
in
popa
cs
push
in
ljmp
psllq
lret
sbb
lods
mov
imul
dec
add
add
add
add
add
popf
int3
stos
pop
stos
dec
mov
rcrb
mov
in
or
add
add
movsb
add
add
jno
pop
pop
add
jg
dec
sbb
dec
fiaddl
fidivl
mov
sbb
and
add
adc
rcrb
push
and
jle
pop
cwtl
ljmp
movsl
cs
dec
adc
or
add
add
pop
and
add
add
xchg
mov
in
adc
pop
push
jl
or
mov
xchg
xchg
cmp
jns
sbb
je
add
add
and
sbb
mov
push
loope
stc
adc
scas
push
adc
inc
out
xchg
cmpsl
sbb
and
jno
xchg
je
hlt
iret
pusha
add
add
and
cld
jmp
xor
add
xlat
rol
xor
rcr
ror
in
and
mov
or
add
add
stos
jle
mov
fwait
les
shr
cmp
and
add
pop
cmp
mov
pop
test
cmpsb
popf
stos
das
in
pop
dec
jno
das
adc
or
add
add
adc
push
pop
adc
lcall
xchg
add
lcall
setle
and
insl
js
sti
push
daa
jo
add
add
sub
add
add
stc
pop
jecxz
pop
scas
sbb
jl
mov
in
xlat
stos
xor
add
add
adc
lods
sub
add
add
out
mov
cwtl
mov
inc
ja
mov
roll
out
pop
mov
cmp
dec
sbb
add
and
mov
lea
add
add
add
add
add
ffree
data16
mov
xchg
insl
sub
loop
jmp
out
xor
shlb
mov
loop
pop
mov
add
add
push
push
adc
cmpsl
push
mov
fildl
iret
pop
lcall
xchg
jmp
add
ret
add
add
mov
xor
inc
lahf
push
jbe
fwait
adc
cmp
jo
mov
dec
jne
xchg
lret
cmp
sbb
daa
fnstsw
loopne
sbb
addr16
pop
dec
xchg
out
movsl
jno
outsl
repz
or
add
add
jae
push
jno
cmp
mov
mov
js
fsubl
outsb
sbb
add
push
cmpsl
xor
enter
pusha
add
add
subl
add
and
add
add
clc
sub
add
adc
pop
dec
add
add
bound
aam
mov
cmpsb
add
jp
arpl
or
mov
pop
jb
arpl
cltd
inc
xchg
lods
adc
add
cmp
inc
add
add
jmp
mov
xchg
mov
or
outsb
ret
xchg
outsb
push
pop
ljmp
inc
inc
int3
push
push
jge
adc
in
xchg
jmp
out
sbb
bound
movsl
cmp
add
mov
enter
mov
inc
fisubrs
repnz
mov
insl
mov
add
jge
in
popa
pop
push
outsb
and
pop
cmp
mov
pop
repz
xchg
pop
in
xchg
out
mov
frstor
add
add
ja
stos
js
mov
aaa
cmp
fwait
xchg
jbe
add
push
outsl
cwtl
push
pop
xor
add
adc
cmpl
add
add
repz
ds
shlb
add
add
mov
cli
cwtl
aaa
data16
imul
jbe
pop
lret
cmp
jns
jb
adc
or
add
add
sub
add
add
and
add
add
repz
jp
ja
shl
inc
insl
mov
sbb
add
add
xchg
mov
mov
cltd
adc
sti
icebp
in
add
dec
or
decl
add
jmp
push
imulb
mov
xor
mov
pushf
fdivs
shll
cmp
xor
sti
sbb
sbb
ficomps
sub
add
add
xchg
push
testb
add
lahf
mov
popf
insl
xor
je
iret
pop
je
mov
insl
push
test
and
add
add
mov
in
lods
cmp
add
stc
dec
add
add
xchg
in
mov
imul
xor
jl
add
in
and
add
add
and
add
add
xor
int
push
mov
into
in
outsl
add
add
add
or
outsl
mov
push
pop
mov
or
add
add
dec
imul
mov
fidivrs
data16
lods
repnz
pusha
mov
adc
mov
push
sbb
cmp
or
add
add
add
cmpsl
ja
push
in
sti
pop
call
add
add
sub
stos
dec
dec
add
add
mov
mov
movsl
xchg
mov
adc
enter
out
jp
add
add
icebp
fs
ja
mov
bt
pop
shlb
jno
jo
mov
mov
sub
mov
add
add
add
add
add
out
aaa
clc
icebp
movsb
pusha
mov
cld
inc
outsl
add
mov
jb
mov
in
fistpl
mov
fcompl
dec
dec
divb
cmp
nop
sbb
jo
sti
lea
add
inc
dec
jo
pusha
mov
mov
stos
jns
jg
repz
adc
cli
jl
pusha
add
add
adc
ret
inc
add
add
push
shll
mov
push
sub
outsb
addb
les
pop
sub
add
add
in
mov
mov
lods
cmc
pusha
mov
and
pop
lahf
outsb
in
or
xor
add
add
sbb
cmp
je
lcall
mov
and
into
mov
scas
imul
add
movsb
pop
adc
pop
sbb
rcl
or
dec
add
add
or
test
sbb
mov
das
adc
inc
inc
cwtl
push
lahf
ret
fisubrs
add
xor
mov
das
cltd
add
sub
add
add
mov
mov
cmp
into
aam
jnp
and
inc
xchg
inc
mov
cmp
add
or
add
add
pop
ss
jmp
pop
pop
xor
sub
add
add
enter
aaa
out
cwtl
adc
add
add
and
mov
xor
fldcw
orb
add
add
or
add
add
add
sbb
popf
dec
mov
push
xchg
jl
or
add
add
ss
ja
ret
ret
mov
addr16
mov
mov
in
jecxz
add
add
jg
int
arpl
stos
adc
add
add
pop
lods
fcmovnb
lock
add
add
jne
imul
jle
leave
test
jae
int3
mov
dec
mov
pushf
mov
scas
jecxz
dec
fldenv
jbe
iret
in
scas
push
ja
push
sar
pop
fdivl
adc
jns
cli
in
add
inc
mov
mov
push
out
mov
push
sub
add
add
jbe
les
dec
stos
cmc
or
popf
jns
stos
stos
cmp
popa
mov
push
adc
cwtl
mov
jmp
xchg
hlt
mov
jecxz
push
call
insb
add
add
scas
mov
xchg
leave
mov
xchg
aam
mov
cmp
add
add
add
add
adc
jl
add
jmp
imul
leave
stc
hlt
sahf
push
dec
repnz
mov
decl
out
inc
movsl
sbb
dec
add
add
sub
mov
in
insb
add
add
sub
add
add
adc
cmp
daa
test
pop
cmpsb
or
add
je
jnp
into
jb
inc
lcall
pop
mov
aaa
pop
mov
sbb
mov
xchg
pop
out
mov
mov
sbb
add
mov
xchg
and
or
add
call
add
cltd
mov
movsb
xor
roll
cwtl
arpl
shlb
add
add
add
xor
call
add
add
add
sahf
xor
scas
pop
xchg
push
jl
subb
lds
add
daa
pop
dec
scas
repz
es
pop
scas
adcl
andl
add
sbb
pop
mov
loopne
in
fs
sarb
pop
jg
lds
je
push
dec
add
add
sub
add
add
orl
add
add
mov
adc
stc
lds
in
ret
and
mov
icebp
leave
lret
sbb
add
add
push
fnstsw
xchg
push
mov
adc
push
push
dec
rclb
add
add
add
adc
bound
stc
sub
add
add
addl
add
movsb
xor
xorb
inc
sahf
dec
movsl
xchg
repnz
add
add
add
movsb
cmp
jo
filds
out
pop
insb
mov
es
jb
adc
add
inc
dec
mov
lea
and
add
add
fldenv
imul
add
add
in
dec
inc
mov
aam
sbb
mov
enter
lods
cmp
cmpsl
jb
lock
bound
add
add
add
dec
dec
mov
mov
subl
add
add
mov
into
and
add
add
test
in
mov
fucomp
icebp
into
aad
push
fcmovbe
inc
cs
cmp
xchg
test
mov
add
add
add
inc
fdivs
pop
mov
out
add
add
lcall
loope
push
cmp
jns
sbb
adc
sub
jp
ss
add
add
clc
mov
jl
mov
jbe
daa
loope
jp
std
ret
je
addb
jl
ds
pop
lret
movsb
inc
es
pop
jae
add
inc
mov
jbe
mov
ds
mov
jmp
add
add
repz
repnz
fisubrl
xor
mov
movsb
lcall
test
ret
add
lea
add
sahf
cmp
rcrb
add
add
xchg
mov
push
pop
hlt
sub
add
add
test
sbb
dec
mov
jecxz
ja
pop
cmp
sbb
or
cmp
add
add
add
push
pop
dec
mov
add
jp
lret
lock
xor
push
es
lahf
ja
movsl
push
in
or
add
add
xchg
sub
mov
push
scas
pop
inc
sbb
jle
xor
inc
push
pop
pop
xor
mov
inc
add
add
fsts
xchg
inc
adcb
push
bound
jo
lods
xor
pop
xor
push
rol
jbe
inc
rol
mov
mov
add
decb
add
add
scas
xlat
test
shll
add
xchg
sbb
negl
lcall
add
insl
aaa
push
and
pop
dec
mov
jno
mov
loopne
imul
fidivrl
mov
shrb
movsl
cltd
and
shll
int
xlat
repnz
into
fs
jae
cmp
add
add
pop
jo
sbb
jg
cmpsl
clc
cltd
and
in
pop
ss
cmp
mov
mov
test
imul
or
add
add
insl
sti
sub
lcall
or
add
add
sbb
and
jp
mov
cmp
add
add
inc
xchg
sub
cmp
into
xor
jb
lock
loop
inc
incb
add
pop
adc
add
scas
pop
loope
push
dec
lret
add
add
pop
pop
andb
jg
xor
mov
fidivrs
ret
fnsave
mov
push
test
add
push
mov
add
loop
mov
fsubrl
push
shll
out
push
subb
out
inc
or
add
add
lret
mov
dec
add
add
cmp
jo
popf
cwtl
scas
or
dec
add
add
insb
mov
and
loop
mov
add
and
add
add
lea
add
add
add
dec
add
add
lahf
shll
mov
fldcw
add
jno
imul
sahf
mov
jmp
jmp
mov
outsb
jmp
data16
push
leave
fadds
or
add
add
sbbl
cs
pop
dec
xor
xor
add
add
test
sti
pop
mov
repnz
int3
sahf
xlat
push
or
arpl
enter
in
test
pop
ret
lea
add
push
pop
dec
xchg
pop
std
rcrl
add
add
adc
mov
mov
jl
push
xchg
insb
add
add
scas
push
hlt
and
add
add
loopne
cmc
mov
cmc
mov
ljmp
je
pop
popf
mov
add
add
add
mov
inc
add
mov
mov
and
cmpsb
fcmovb
pop
stos
sbb
add
add
add
add
xchg
je
movsb
inc
dec
ret
pop
cltd
mov
fucomp
dec
xor
into
js
mov
out
testb
scas
test
fstpt
mov
cs
xchg
mov
fisubl
xchg
ja
pop
mov
mov
iret
push
ret
test
add
add
add
addr16
mov
jecxz
mov
pop
inc
add
add
and
int3
fwait
inc
add
add
test
push
shlb
stos
mov
cs
out
jmp
out
mov
push
cli
cltd
add
rorl
sbb
pop
imul
mov
xchg
jl
mov
mov
adc
enter
jae
mov
imul
sbbb
pop
and
add
add
add
mov
xor
add
scas
loop
mov
pop
mov
lods
loope
pop
xchg
aas
ds
push
and
in
inc
jbe
jecxz
fwait
cwtl
fisttps
cmp
fadds
add
cmp
add
je
sbb
test
inc
scas
jns
and
add
add
lds
sbb
pop
int
mov
aad
pushf
sub
fwait
sub
add
add
cltd
ljmp
add
mov
dec
mov
inc
cmpsb
das
lahf
adc
adc
add
add
sub
add
add
add
add
adc
add
add
test
inc
mov
sahf
inc
mov
lret
mov
stc
nop
outsb
cmp
imul
in
outsl
sarl
es
aas
sub
mov
popa
aad
dec
insl
mov
add
add
add
or
arpl
mov
and
add
add
jb
test
outsb
push
sti
jnp
cld
fwait
mov
jbe
adc
add
fcmove
push
out
in
pushf
pop
insb
add
add
int
or
add
add
xor
mov
adc
gs
cmc
xor
cld
xor
aaa
hlt
lcall
cli
xor
out
and
add
add
add
xchg
outsl
add
add
add
pop
xor
sbb
add
add
rcll
shr
jo
mov
fnstsw
scas
push
mov
dec
xchg
add
push
sbb
mov
push
ficoms
movsl
repz
add
add
sub
add
add
das
or
pusha
mov
push
ss
mov
mov
sub
or
xlat
daa
clc
dec
pushf
xchg
mov
mov
add
add
sub
adc
dec
aas
pop
pushf
and
add
add
pop
fstpt
jnp
jbe
xchg
in
add
cs
add
add
outsl
gs
add
jb
lods
xor
imul
and
add
add
popw
mov
fdivrl
ds
mov
mov
hlt
pop
jnp
mov
xor
sub
add
add
mov
adc
cwtl
pop
add
in
test
lock
xor
xchg
and
add
add
movsb
sub
add
add
xchg
lods
data16
mov
pop
fsubp
push
adc
call
sub
mov
inc
outsb
int3
or
scas
clc
lock
mov
cmp
or
add
add
and
subb
adc
mov
jecxz
or
add
add
mov
dec
insb
add
add
push
into
xchg
sti
fs
ret
mov
add
mov
push
push
mov
aas
jp
sarb
add
add
cld
bnd
jp
adc
out
jp
mov
mov
cmp
dec
mov
out
arpl
add
push
and
add
sub
in
push
push
inc
in
jo
mov
jle
test
dec
mov
inc
dec
mov
cmp
push
fisubs
add
add
add
aam
sub
arpl
andnps
ret
insb
mov
and
add
pop
out
pop
test
pop
sub
add
add
and
add
add
jge
jo
stc
sub
test
add
lcall
jo
fmull
push
xchg
idiv
jp
and
add
add
pusha
mov
mov
rol
xlat
stos
icebp
sahf
pop
popa
add
sub
fisttpll
add
popa
mov
cli
mov
add
add
cmp
les
xchg
mov
add
sub
dec
inc
dec
aam
and
xor
inc
push
dec
add
add
or
notl
xchg
mov
negb
xchg
mov
fstpt
rol
mov
pop
rclb
push
scas
sub
xchg
orb
mov
mov
je
out
jl
or
add
add
std
das
and
add
cli
ja
outsl
aaa
add
dec
add
add
clc
dec
xorb
adc
adc
into
adc
xchg
subb
mov
sbb
mov
xchg
insl
pop
ss
cmpsb
pop
stc
inc
mov
add
push
ja
xor
or
add
add
out
sbb
cmp
mov
and
push
sahf
sub
add
add
js
xlat
cmc
lahf
jno
sbb
add
add
add
mov
add
lock
pushf
xchg
decb
mov
aaa
add
add
shrb
ficoms
jp
sbb
mov
cltd
mul
jmp
pop
sar
pop
inc
jle
pop
inc
lret
and
cmp
push
mov
lods
out
mov
pusha
mov
add
add
xor
add
add
jle
arpl
xchg
daa
lds
imul
shr
xor
cwtl
lods
outsb
rclb
pop
and
cmp
cmp
cmp
fidivl
mov
stc
mov
mov
mov
dec
lret
mov
mov
adc
dec
rcr
push
or
sbb
cmp
mov
cmp
push
jnp
in
and
mov
push
pop
inc
lcall
lcall
scas
test
mov
clc
lea
add
add
mov
inc
pop
jb
mov
add
add
out
pop
sti
pop
adc
mov
sub
or
ja
mov
jbe
jecxz
push
cwtl
inc
dec
pushf
add
dec
data16
adc
insb
mov
or
add
add
cmpsl
fadds
xchg
add
add
mov
shll
sbb
clc
mov
add
mov
or
call
cmp
sbb
add
dec
mov
mov
aam
out
cmp
xchg
xchg
add
add
add
add
add
mov
mov
jmp
xchg
and
lret
std
pop
mov
or
pop
js
mov
test
inc
in
in
jle
fwait
les
outsl
rorl
sbb
mov
mov
fsubr
repnz
pop
adc
test
repnz
popw
cmpsl
xor
aaa
push
int3
push
add
add
add
xchg
xchg
pop
sub
cmpb
lahf
lcall
into
push
and
adc
outsb
xchg
pop
fld
cmp
add
add
shrb
add
add
mov
mov
adc
or
add
add
and
mov
jns
mov
lods
adc
add
ss
sti
repnz
stos
cwtl
es
aad
fisttpl
xchg
xchg
test
xchg
scas
pop
int
pop
fsubrp
psrad
add
cmp
jne
pop
sahf
and
add
mov
pop
adc
les
push
orb
outsl
hlt
fwait
rolb
mov
dec
add
add
add
in
sbb
push
xchg
test
dec
shr
pop
xor
into
mov
xchg
mov
mov
subb
add
add
add
or
pop
sbb
or
or
jg
cli
lret
adc
cmp
mov
push
out
subb
xchg
mov
add
add
add
add
add
ljmp
cmpsb
add
add
add
adc
loopne
out
mov
add
add
or
cli
xchg
add
add
imul
pop
dec
xor
iret
test
or
fdivrs
popf
mov
cmp
repnz
fidivs
cltd
inc
mov
fidivl
jne
xchg
movsb
mov
scas
shrb
adc
lods
jbe
mov
enter
push
xchg
clc
or
cli
test
into
invd
add
add
pop
fcmovb
xor
push
cmc
mov
or
add
add
sbb
sub
inc
jae
ret
fwait
jecxz
fucomp
cld
lds
sub
loop
add
add
adc
add
add
jle
js
call
adc
push
enter
fcomip
es
push
adc
int
cmp
stos
icebp
rolb
inc
add
add
add
jb
mov
xorl
popa
fildll
add
sub
add
push
mov
pop
mov
push
ss
mov
sub
add
add
leave
and
inc
repz
and
add
sbb
sbb
pushf
mov
mov
add
add
loopne
cmp
xor
mov
roll
add
add
push
fsubs
in
pop
xchg
fbld
xchg
inc
or
test
fisubl
and
add
xchg
dec
mov
inc
xor
iret
fstpl
mov
rcr
cmp
xchg
mov
sub
jmp
int
push
addr16
add
xchg
popa
xchg
xchg
cmpsl
test
jnp
outsl
mov
jmp
mov
mov
test
jo
int3
mov
mov
push
pop
pop
cmp
in
and
add
add
jmp
add
add
lahf
mov
mov
push
pop
int
push
enter
add
daa
lods
or
add
add
xor
push
fbld
ret
add
add
add
add
fcomp
pop
hlt
adc
or
fwait
jno
sub
and
add
add
movb
sar
ret
inc
adc
mov
add
mov
add
pop
neg
cs
add
add
sbb
add
add
cmp
fwait
pop
inc
or
mov
mov
xchg
sub
mov
mov
xor
ljmp
loopne
xor
mul
loope
add
add
pop
movsb
xchg
dec
insl
or
add
add
xchg
mov
fnsave
jne
enter
shll
jb
jnp
jle
iret
into
pop
add
push
out
in
imul
das
push
sahf
add
add
stos
int
mov
jle
add
add
mov
adc
mov
mov
mov
roll
add
add
add
cmp
mov
sti
sti
jecxz
mov
add
pusha
add
add
scas
xchg
xchg
mov
in
scas
and
add
add
aaa
push
xor
mov
pop
movsb
loope
pop
lock
bound
sbb
add
add
mov
leave
cmpsl
cmpsl
mov
pusha
mov
add
add
and
add
add
daa
rolb
cmp
outsl
js
add
add
lret
push
dec
ja
add
add
sbb
fbld
mov
mov
xor
pop
cmc
test
ljmp
adc
add
add
or
add
add
int3
int3
add
xchg
mov
add
add
cmp
mov
pop
loope
add
add
pop
mov
xor
imul
xchg
push
bound
aam
into
data16
add
sub
cmp
ret
sub
dec
pop
sub
xor
inc
aam
sbb
cld
out
adc
jp
inc
add
add
outsb
pusha
add
add
repnz
dec
add
add
xor
and
stos
test
sbbl
movsl
dec
add
add
adc
add
add
imul
in
xor
mov
ficomps
into
loopne
ljmp
push
mov
pop
lahf
out
sbb
mov
rorl
in
rcll
mov
mov
movsl
fbstp
mov
lret
mov
out
push
xchg
mov
push
clc
dec
add
add
lcall
pmaxsw
sbb
mov
add
add
cmp
mov
nop
mov
int
jb
jno
sbb
mov
mov
xor
jne
fwait
xchg
add
pop
loope
jns
stos
push
mov
mov
shrb
xor
pusha
mov
jl
repz
ljmp
add
cld
daa
jp
int3
or
add
add
add
xor
adc
ljmp
xor
add
add
jo
ss
arpl
dec
loopne
push
mov
add
add
and
pop
mov
iret
int3
jl
js
or
add
add
mov
sbb
in
lds
cmp
ret
movsb
jns
loope
fwait
pop
enter
add
pop
cmp
xor
mov
sti
pop
dec
mov
or
or
or
add
add
mov
jb
in
pop
mov
mov
in
cmp
pushf
leave
mov
jno
adc
cmp
add
add
push
mov
sub
add
add
cmp
or
pop
scas
or
mov
push
mov
mov
int3
cmp
fisubrl
add
clc
shr
xchg
push
jmp
and
add
add
inc
mov
adc
push
out
clc
dec
push
sti
pusha
mov
in
fwait
xor
dec
pop
push
and
add
add
sbb
lret
or
jno
push
loopne
inc
xor
add
or
jns
sti
mov
mov
xchg
movsb
enter
adc
or
fdivl
js
push
call
xchg
je
push
dec
jo
dec
sbb
add
add
aas
dec
lret
fsubrl
add
add
out
divl
pushf
dec
sbb
add
add
add
add
mov
insl
xchg
mov
out
les
add
inc
xchg
fnstenv
ficoml
sar
loopne
jno
jo
add
dec
mov
sbb
int3
xor
fcomps
add
sahf
popa
inc
mov
mov
movsl
mov
arpl
add
add
test
add
jp
ja
fimuls
add
add
fsubl
add
add
lahf
xchg
push
dec
add
add
push
mov
mov
out
rcrb
sbbb
scas
ljmp
or
mov
stos
leave
je,pn
mov
idiv
ret
sub
pop
out
out
mov
add
sub
mov
sbb
fwait
jp
push
or
add
add
outsb
or
add
shl
xor
add
add
addr16
push
out
imul
jge
dec
stc
xor
test
mov
add
pop
arpl
popf
fisubs
add
add
mov
mov
or
add
add
xor
int3
or
add
adcl
std
sub
xor
add
push
inc
sar
cmp
icebp
adc
dec
mov
shr
jno
cmp
push
movsl
cmp
shll
jl
fwait
mov
cld
fisttpl
or
ja
dec
push
js
or
and
add
add
call
stos
push
xor
add
xchg
ret
add
add
add
add
add
dec
sub
add
add
add
mov
add
or
add
add
add
add
clc
push
lcall
ror
out
jns
jno
out
mov
xchg
pop
sub
imul
add
outsb
out
lods
testl
mov
leave
test
jnp
adc
std
mov
or
sub
add
add
int3
inc
mov
sbb
inc
flds
out
jp
mov
lds
jg
stos
nop
dec
scas
std
movsl
mov
xor
or
cmp
add
test
sarl
lahf
int3
xlat
fsubr
into
subb
or
cmp
int
stos
mov
xchg
jbe
aas
repnz
in
inc
sbb
pop
sub
mov
pop
pop
stos
push
cmpsb
and
ds
mov
addr16
or
push
pop
enter
add
add
xor
add
add
daa
mov
nop
xchg
dec
add
add
test
xchg
jae
fcmove
lock
mov
mov
sbb
lahf
cltd
pop
orb
mov
sub
add
add
add
add
dec
mov
aaa
pop
ror
and
mov
aas
cmp
adc
rorb
ss
pushf
or
cmp
lds
jmp
cmp
or
push
jns
fsubrs
mov
push
xor
xlat
fsubs
mov
fisttpl
cmp
mov
mov
jns
std
sbbl
mov
dec
add
add
add
ds
aam
cli
je
mov
clc
std
addr16
nop
cmp
cmpsl
mov
frndint
ret
jl
into
pop
xchg
mov
repnz
into
shlb
xlat
adc
sbb
clc
ficompl
mov
addr16
dec
add
add
sub
add
cli
lahf
or
nop
test
leave
int
add
push
das
adc
cmp
mov
add
add
repz
mov
add
add
fcmovnu
or
ja
xchg
cli
or
jnp
int
shlb
add
add
stc
data16
mov
add
mov
shr
nop
sbb
add
add
insl
sti
cld
push
push
or
pop
inc
mov
jmp
das
sahf
and
add
add
cmp
adc
push
les
dec
add
add
into
popa
sbb
das
cli
setae
xor
lcall
add
mov
push
and
add
add
loope
push
xor
xchg
push
jnp
arpl
add
add
add
aad
popl
pop
cli
mov
ds
inc
add
add
jne
test
add
add
data16
iret
aam
testb
add
add
arpl
lods
sbb
add
lcall
add
add
dec
add
add
add
notb
push
les
dec
xchg
aad
in
addl
add
add
adc
jmp
add
int
cmp
xlat
std
mov
and
movsb
or
jge
sti
les
add
add
mov
int3
push
out
iret
ficompl
xor
lcall
add
add
mov
add
adc
movsb
loopne
pushf
mov
scas
mov
add
add
lods
test
push
lcall
adc
add
inc
cmp
pusha
mov
aad
cmpsl
adc
xor
lods
dec
push
jg
jmp
fsubrl
test
or
cli
lock
out
negb
sub
add
add
add
add
add
add
jo
xchg
mov
add
cmp
mov
negl
xchg
fwait
rcll
add
add
icebp
sub
add
add
data16
jg
int3
sbb
sbb
loope
daa
xchg
lcall
add
aas
cli
loopne
sbb
addb
add
enter
add
add
loop
add
add
add
jecxz
xchg
pop
cmp
movl
shl
mov
ds
popf
lock
add
add
pop
fcoml
mov
jmp
sbb
adc
xchg
mov
mov
fcoms
stos
into
xchg
imul
test
and
add
add
add
add
movsb
dec
out
inc
mov
mov
xchg
dec
mov
nop
fmul
inc
loopne
fcompp
ret
mov
mov
mov
mov
in
add
sti
push
or
jns
cmp
push
arpl
ss
pop
fnsave
pop
insl
imulb
mov
sbb
movsl
out
and
dec
mov
dec
cmp
ret
rolb
mov
rclb
insb
mov
addr16
adc
icebp
outsb
cli
jne
lods
xor
out
jle
or
inc
jb
lret
push
xor
dec
mov
adc
pop
mov
cmp
nop
adc
shlb
jmp
jp
pop
enter
mov
xchg
movsl
mov
mov
add
add
adcb
add
add
iret
insl
scas
movsb
mov
js
sbb
sbb
add
add
adc
pop
sti
movsb
mov
ds
xchg
jmp
add
add
mov
mov
add
fidivrs
outsb
mov
add
inc
add
add
adc
stos
iret
fldcw
in
int
adc
dec
out
daa
push
pop
add
mov
pop
and
add
add
in
in
mov
mov
add
xchg
cmpsl
popa
pop
inc
sbb
test
cmp
add
add
call
xchg
in
push
push
jbe
lds
mov
cmpsb
pop
pop
mov
ljmp
iret
pop
pop
or
mov
add
cwtl
es
in
scas
rolb
add
inc
sub
insl
xchg
push
push
jnp
lahf
push
sbb
sbbl
int3
loop
mov
xor
pop
push
and
mov
push
mov
add
mov
sar
roll
add
add
or
imul
inc
mov
mov
mov
icebp
push
xchg
jle
aaa
ljmp
push
xor
adc
sarl
add
add
pop
js
loop
movsb
adc
xor
add
movsb
mov
or
mov
add
add
aaa
sub
roll
add
add
fidivrs
pop
mov
add
in
into
push
jb
or
add
add
gs
stos
dec
clc
dec
lahf
stos
pop
test
pop
inc
lahf
cltd
or
xor
push
jg
ret
and
lcall
sbb
ss
mov
in
mov
sbb
sbb
push
ret
inc
dec
testl
js
popa
fs
push
inc
dec
dec
jns
push
add
lahf
subl
add
add
sbb
push
add
call
dec
mov
outsl
cmp
dec
mov
add
add
xor
imul
test
popa
ret
daa
add
add
xchg
xchg
jo
ljmp
mov
faddl
add
lret
mov
int3
push
mov
pop
adc
adc
or
add
add
stos
ljmp
sahf
mov
add
out
push
lcall
add
rcrb
push
dec
add
add
loope
stos
pushf
xlat
testb
add
repz
xchg
sbb
jp
xchg
xor
add
mov
or
shl
mov
ja
mov
pop
mov
clc
filds
in
adc
test
fnstenv
mov
mov
addr16
mov
popf
sbb
stos
aad
scas
jg
mov
add
add
add
bound
sub
das
lea
add
push
mov
add
add
sbb
and
dec
cmpsb
jle
cmp
mov
jecxz
push
jp
push
out
jmp
add
sub
xchg
mov
inc
mov
nop
addr16
jl
mov
int3
mov
int3
xor
lds
add
add
lock
mov
mov
aam
dec
inc
or
cmpsl
xchg
jge
and
add
add
fidivrs
in
mov
sbbl
add
jmp
mov
jp
cltd
repz
mov
fstpl
sbb
xor
pop
stc
adcl
ljmp
or
movsb
ficomps
mov
loop
pop
mov
sub
std
fistpll
dec
add
add
ret
xchg
loopne
test
adc
jmp
push
mov
mov
xlat
in
iret
rolb
add
mov
inc
add
add
jp
loopne
inc
mov
mov
ffreep
cmp
or
ficoml
jmp
out
das
and
add
add
popa
clc
jmp
lret
push
lods
mov
aad
pop
sahf
sub
shlb
pop
dec
push
call
or
sti
popa
cltd
cmpsl
and
add
add
add
add
mov
add
add
mov
movsb
inc
push
shlb
out
hlt
push
jb,pt
xchg
mov
int
into
popa
mov
adc
fisttpll
push
mov
fwait
aaa
cmp
sbb
add
mov
outsb
call
aaa
xchg
adc
mov
frstor
or
add
add
xor
lret
cmp
sahf
fs
dec
mov
add
add
add
fdivs
mov
pop
pop
leave
lock
cmp
daa
fisttpl
add
pop
test
outsb
js
inc
pop
cs
pop
std
and
add
add
stos
dec
cmpl
add
add
push
lock
inc
fisttpl
xchg
ret
mov
mov
mov
add
add
cwtl
popa
mov
rclb
fwait
mov
in
fdivrl
and
inc
add
add
int
or
mov
add
fstpl
mov
add
add
data16
bound
add
add
mov
mov
add
and
push
push
jge
test
and
pop
lock
pop
insb
mov
pop
and
into
jo
out
aas
test
pop
xchg
repz
fcom
sti
lods
xchg
push
inc
mov
push
notb
mov
add
add
lret
add
add
das
jo
cld
movsl
int3
push
jecxz
inc
mov
mov
pop
sbb
pop
pop
mov
jle
add
add
cmp
mov
xor
fwait
dec
popl
add
add
mov
add
inc
push
mov
ds
add
lea
adc
push
jmp
add
add
shl
push
pop
cmpsb
sub
daa
or
add
add
add
add
sarb
pop
arpl
xchg
aas
sbb
mov
ss
mov
stc
xchg
or
add
add
mov
add
xor
add
sub
inc
fs
adc
jmp
push
cmp
sti
aas
pop
es
adc
into
popa
cwtl
sahf
jo
mov
cli
repz
jno
in
cmc
shl
in
mov
cmp
sti
addr16
and
scas
rolb
adc
nop
ljmp
imul
lods
xor
jle
js
dec
xor
xor
sbbl
add
cmc
and
add
add
and
add
add
add
add
mov
faddl
out
imul
mov
push
add
add
adc
incb
stos
mov
fldpi
imul
hlt
add
add
add
jmp
fidivl
inc
mov
cmc
iret
add
add
jns
popa
dec
mov
jg
mov
mov
mov
aaa
out
dec
mov
scas
pop
mov
push
cmp
pop
xor
push
mov
mov
daa
cltd
inc
mov
xor
mov
mov
jge
add
popa
psrld
out
mov
mov
add
cmp
add
cmp
loope
add
add
push
sbb
sbb
add
add
inc
mov
loopne
mov
adc
add
add
out
lret
dec
test
add
add
out
xor
pop
pop
insl
push
int3
int3
rcrl
loope
cmp
mov
enter
xchg
movb
arpl
cli
mov
pop
leave
and
add
add
adc
cmp
push
sbb
and
pop
xchg
cmc
mov
mov
mov
mov
shrl
push
addr16
dec
add
fimuls
cmp
jp
hlt
enter
add
add
push
jbe
add
add
sub
add
add
adc
mov
inc
stos
mov
push
adc
jbe
mov
dec
or
or
in
mov
and
ret
adc
add
add
and
sub
test
and
dec
add
add
pop
jle
pop
aad
jae
and
push
fdivrl
mov
jecxz
repnz
js
pop
icebp
popa
xchg
in
xchg
into
sahf
rdtsc
xor
iret
pop
xchg
sbb
pusha
add
add
test
cmp
divl
mov
mov
sahf
hlt
or
xchg
mov
jo
popa
in
loopne
lea
pusha
mov
add
add
in
enter
and
sbb
lock
jmp
movsb
aas
xor
into
les
sub
icebp
mov
jb
cli
rorl
add
add
add
add
stos
mov
or
add
add
mov
cltd
cwtl
pop
cmc
cmp
adc
and
add
add
mov
test
pop
or
add
add
stc
push
xchg
push
push
mov
add
add
fldenv
call
add
add
dec
pop
fbstp
pop
mov
add
icebp
bound
repnz
xchg
dec
mov
jge
mov
dec
or
test
xchg
imul
add
xchg
std
and
add
add
popf
stos
sbb
loop
aam
push
mov
adc
fsts
jl
lock
add
add
mov
ljmp
or
es
add
add
mov
add
add
mov
and
xchg
scas
je
cltd
inc
dec
testb
sub
add
add
dec
add
add
mov
jecxz
movsb
inc
dec
push
or
add
add
into
xor
inc
mov
mov
sbb
out
sub
add
add
and
add
add
sbb
or
insl
push
data16
xchg
and
add
shll
and
out
arpl
push
aas
movsb
pop
or
sub
fdivs
cltd
push
sbb
insb
mov
idivb
xor
pop
jp
mov
add
add
int3
mov
sub
add
xchg
mov
addr16
inc
inc
dec
mov
insl
mov
add
dec
adc
bound
pop
ljmp
jns
aas
scas
adc
lods
and
add
add
aam
in
mov
loope
shl
les
ljmp
add
and
and
add
add
lahf
je
mov
push
lret
dec
add
add
dec
cltd
cmpsb
adc
lods
popf
popl
bound
inc
jp
and
pop
repnz
lret
xchg
in
shrl
call
fstps
fists
lods
pop
shr
lea
add
add
add
and
xchg
enter
orb
in
inc
lock
imul
push
aaa
loopne
cmc
notl
jmp
jmp
fwait
shll
mov
call
sub
mov
xlat
lret
dec
shrb
add
add
fisubrs
mov
mov
xchg
dec
or
adc
pop
and
pop
pop
shlb
imul
adcl
sbb
xchg
push
outsl
test
xor
fistps
clc
adc
add
add
mov
imul
bound
enter
mov
mov
lret
add
add
add
add
inc
mov
and
xlat
stc
mov
push
push
push
cli
cmc
in
sub
pushf
pop
aam
inc
mov
std
adc
imul
mov
jg
sbb
fisttpll
je
inc
ficoml
xor
xor
push
je
mov
int
mov
enter
dec
inc
mov
hlt
dec
xchg
pop
xchg
xlat
sub
add
add
add
add
mov
cmp
push
rep
mov
sub
shrb
sub
add
add
jns
sbb
xchg
imul
int
out
sbbb
ret
adc
ja
and
add
add
jl
out
pop
shll
add
and
add
add
addr16
sahf
xchg
fs
or
repz
add
scas
push
pusha
add
add
pushl
jo
and
in
aas
jnp
mov
sbb
sub
push
or
xchg
test
mov
imul
add
add
cmpsb
cwtl
andl
sar
mov
add
add
stos
ret
add
add
push
js
pop
mov
add
add
das
cmp
mov
or
mov
push
pop
call
add
les
mov
add
mov
inc
xor
cmpsl
inc
negb
add
fldt
pop
aam
gs
mov
inc
rcl
int3
dec
mov
test
das
mov
add
add
add
je
aaa
mov
hlt
or
mov
es
mov
pop
test
mov
lret
in
jns
xchg
outsl
shr
or
add
add
inc
jae
pop
sbb
sahf
mov
stos
dec
and
sub
jmp
or
sbb
aam
lret
int3
mov
add
add
js
xchg
push
and
mov
inc
mov
mov
dec
xor
das
test
pcmpgtw
lcall
push
sub
fstpt
xchg
shll
mov
cli
jg
jne
imul
or
lahf
mov
and
and
jle
mov
jecxz
mov
aad
inc
int
ret
gs
cmpsb
mov
test
xor
jge
mov
out
mov
fimuls
add
xchg
sub
add
sbb
aas
mov
test
test
pushf
lods
dec
add
add
cmpb
xor
xor
aaa
mov
xor
pop
pop
mov
add
into
xchg
ret
in
call
add
add
add
aam
inc
inc
add
add
push
jle
in
outsb
loopnew
mov
xor
mov
mul
xchg
mov
xor
aas
les
add
adc
fldl
das
sub
scas
ja
add
add
add
pop
cmp
shlb
inc
add
add
rolb
add
add
pop
mov
sahf
sub
mov
cmp
pop
push
and
push
or
add
add
insb
add
add
call
add
add
and
mov
sti
jecxz
or
mov
shrb
add
clc
fisubl
pop
adc
push
das
in
sbb
mov
cmpb
sbb
or
mov
add
add
aad
cmp
push
mov
movsb
add
dec
je
sbb
push
das
mov
in
les
push
xor
out
and
popa
push
push
filds
pop
jbe
add
add
mov
ja
mov
inc
in
test
push
pop
sub
fisubl
insl
add
mov
mov
add
add
cmp
cmp
lcall
xchg
shll
xor
push
movsb
dec
add
add
inc
in
jecxz
data16
mov
add
add
adc
and
es
add
repnz
add
adc
push
push
dec
cld
scas
int
push
adcl
fmuls
add
add
add
add
dec
loopne
jne
repnz
mov
divl
add
add
mov
lea
cld
cmc
insl
mov
add
leave
push
jno
daa
and
lds
cli
clc
loopne
stos
push
xchg
cwtl
jmp
adcl
xlat
or
add
add
xchg
scas
hlt
push
add
add
add
or
aam
jl
loopne
inc
mov
or
add
add
mov
sti
sbb
cmc
sub
add
add
data16
lahf
inc
add
add
mov
add
add
mov
imul
add
add
loopne
rclb
rcrl
popa
mov
jne
arpl
mov
out
and
add
add
aam
das
inc
addl
sbb
les
cmp
xchg
jge
fsub
mov
add
xchg
fdivrs
and
xchg
stc
sti
xor
addr16
add
mov
sbb
xor
add
add
repnz
rcrl
cmp
dec
sahf
pop
mov
pop
sbb
ja,pn
cmp
sub
stos
adc
inc
adc
int3
adc
rorb
daa
sbb
stos
les
cmp
loop
data16
or
add
add
mov
adc
add
pmaxub
jecxz
mov
mov
outsl
mov
dec
movsb
ss
enter
addr16
movsb
or
es
fnsave
mov
mov
jae
cmp
mov
fucomi
in
int3
insb
mov
repz
cmp
pusha
mov
and
ffreep
adc
out
dec
add
ret
jo
fcomip
scas
jno
cwtl
mov
imul
add
add
add
sub
leave
test
jmp
dec
call
fwait
xor
mov
mov
es
jecxz
xor
sub
add
add
xchg
adc
out
and
aad
sub
add
add
mov
or
add
add
fsubrl
add
add
sub
loopne
mov
adc
lret
dec
cmp
add
aad
mov
nop
inc
inc
ret
inc
pop
jge
insl
and
add
add
das
sahf
dec
xchg
push
dec
cli
filds
add
add
iret
xorl
add
add
add
rcll
mov
add
add
jl
addl
add
xor
xchg
aad
icebp
adc
add
add
push
cmp
imul
dec
adc
jl
xchg
test
aas
shlb
and
add
add
xchg
sbb
mov
divb
jmp
in
lods
gs
sbb
add
add
cmp
inc
add
add
cmp
cmp
sub
xchg
sub
sbb
jne
loope
cmpsb
or
add
add
mov
dec
cmp
cld
push
inc
add
add
imul
dec
call
mov
je
mov
test
adcl
je,pt
adc
pusha
mov
inc
mov
jp
pop
sbb
add
add
xchg
jae
movsb
call
push
stc
mov
add
add
or
add
add
js
mov
add
inc
inc
iret
popl
loopne
adc
movsb
ss
mov
fbld
es
test
ja
mov
jl
cli
sbb
in
daa
cmp
test
lods
inc
ljmp
inc
add
add
popw
adc
add
add
imul
cmp
pop
mov
push
xchg
push
sbb
inc
cmpsl
inc
packssdw
bound
fsub
loope
loopne
cmpsb
adcb
sub
add
add
pop
or
add
add
sbb
shll
add
xlat
sbb
out
ret
subb
dec
lods
pop
dec
mov
add
add
js
btrl
sti
in
sub
clc
cmpsl
loopne
cli
popf
pop
imulb
mov
and
add
add
pop
out
or
mov
mov
inc
dec
repnz
fidivs
jae
jle
add
add
repz
xchg
adc
add
hlt
and
incl
add
dec
cmp
sti
cmp
pop
stos
mov
das
ficompl
arpl
call
mov
sbb
add
mov
enter
test
add
add
sub
or
jo
lods
btsl
mov
cmc
add
add
add
rolb
pop
add
cli
aaa
roll
mov
je
inc
notl
xchg
cli
les
cld
sub
add
add
cmp
add
add
pop
inc
mov
xor
in
in
cld
aaa
add
mov
in
xor
add
jl
movsb
mov
or
ja
pop
cmp
jecxz
and
dec
add
add
xchg
in
push
negb
or
push
pop
xor
and
add
add
add
xlat
subb
xchg
mov
sub
add
add
mov
jns
aam
add
add
and
mov
xor
das
mov
pop
mov
int3
push
mov
adc
xor
cmp
cmc
xchg
cmp
sub
scas
mov
es
in
mov
insl
shll
mov
mov
add
fisttpl
or
add
add
or
sti
mov
inc
cltd
xor
jne
sub
xchg
jmp
adcb
add
jns
fdivr
aad
sbb
daa
add
shr
ljmp
out
adc
add
les
cld
imul
sub
js
add
add
aas
xor
mov
jge
cmpl
pop
stc
gs
rol
mov
daa
loop
mov
ret
add
add
jl
mov
sbb
sbb
leave
mov
imul
add
fbstp
cmp
add
add
test
ret
lods
pop
pop
mov
stc
test
jno
scas
mov
mov
push
mov
adc
out
dec
add
add
lea
daa
lds
mov
and
aas
bound
xchg
mov
push
inc
inc
out
pop
out
jne
gs
or
inc
scas
add
add
add
push
jo
xor
cltd
insb
add
add
cmc
mov
vmwrite
sbb
push
sarb
test
pop
test
mov
int3
inc
xchg
out
add
mov
sarb
je
xor
lock
mov
jno
or
add
add
jge
mov
add
add
push
rcll
scas
dec
mov
idiv
daa
push
mov
push
dec
add
add
add
add
add
dec
add
add
aaa
inc
ret
jmp
jb
iret
pop
sbb
mov
cmp
add
movsl
repz
inc
add
add
mov
sti
rcrb
cs
jne
xchg
mov
sbb
popa
add
add
or
out
ret
sbb
pop
inc
dec
mov
dec
repnz
int3
add
sub
dec
sbb
fiaddl
adc
adc
aad
mov
std
mov
dec
lret
mov
dec
gs
fiaddl
add
and
push
cmp
adc
mov
jae
xchg
push
shrb
jle
and
in
jge
jnp
xor
cmp
or
push
jb
cmp
add
add
cld
pop
jle
mov
xchg
xor
dec
xchg
jne
mov
inc
mov
or
add
add
add
fiadds
lahf
cmc
pop
jg
sub
jns
retw
std
jecxz
daa
shlb
add
add
mov
pop
dec
and
add
add
mov
scas
mov
push
adc
mov
jbe
imul
add
add
add
add
add
dec
jp
add
add
xchg
or
out
cmp
add
sub
je
sub
add
add
dec
nop
lret
add
add
add
add
cwtl
and
call
push
stc
ljmp
cld
cs
iret
xorl
mov
fistl
movsl
xchg
mov
xor
shrl
and
xor
mov
dec
xchg
std
cmp
xor
shlb
add
mov
mov
call
sub
pop
nop
scas
rcrl
pop
sub
add
add
or
cld
aaa
push
fwait
sbb
or
dec
add
add
jne
adc
add
movsl
scas
jge
xor
sahf
insb
mov
outsl
jle
cmpb
scas
in
pop
xchg
stos
jmp
pop
mov
or
mov
add
add
int
sti
in
or
aad
ficompl
dec
add
add
mov
mov
enter
nop
mov
add
add
icebp
sub
add
dec
mov
mov
add
add
leave
ret
test
mov
push
out
mov
daa
push
mov
rorb
add
push
xchg
sub
push
mul
scas
in
cmpsl
xor
add
lock
add
add
inc
xor
lods
ds
mov
js
pop
mov
fisttps
and
flds
mov
cs
fisubl
cli
icebp
xchg
inc
inc
xor
jo
add
add
fcmove
or
add
add
mov
lahf
dec
mov
xchg
cwtl
ljmp
mov
aam
imul
add
or
dec
mov
dec
enter
add
mov
mov
ficompl
shrb
clc
gs
mov
sub
sbb
xchg
xor
add
std
pop
pushf
inc
jnp
loop
sub
mov
lahf
jo
jne
jg
jo
mov
mov
add
lods
and
mov
mov
lret
xchg
mov
ja
or
push
inc
mov
data16
sahf
jge
inc
clc
subl
adc
pop
adc
add
cmp
or
ret
dec
mov
mov
xchg
sub
cli
nop
mov
roll
add
add
add
dec
shlb
and
add
add
cmp
adc
xchg
gs
sub
add
add
repnz
xor
pop
sahf
or
or
mov
pop
mov
pop
adc
outsb
mov
cmp
add
lds
dec
jecxz
push
add
add
add
adc
data16
shr
sub
xor
xor
sbb
pop
pop
lods
rcll
add
ds
cmp
push
loop
xor
cmp
add
add
inc
mov
data16
and
mov
out
movsl
pop
push
outsb
cltd
outsb
out
fwait
test
add
add
outsl
or
add
add
adc
loop
es
jnp
mov
cmp
jmp
ljmp
or
popf
aaa
test
xchg
not
pop
out
or
cmp
pop
hlt
pushf
insl
xchg
jbe
push
mov
add
add
mov
xor
pop
push
mov
jo
mov
jo
sahf
mov
add
cli
jge
roll
xorl
imul
mov
arpl
mov
fdivr
cmp
adc
add
add
cmp
add
dec
mov
xchg
out
int3
ljmp
mov
add
pop
xchg
xchg
adc
stos
inc
popf
sub
mov
fcompl
cmp
mov
sbb
add
add
xchg
jp
pop
or
cmpsb
popf
mov
mov
push
popa
pop
and
dec
mov
aas
inc
xchg
cmp
mov
pop
dec
imul
add
add
add
jmp
push
outsb
jecxz
push
jnp
mov
shl
fwait
data16
mov
add
adc
loope
insl
cltd
jp
add
add
push
cmp
jge
mov
dec
dec
mov
jmp
add
add
stos
adcb
movsb
jmp
js
fs
mov
bound
add
add
mov
cwtl
lods
push
sbb
add
add
push
xchg
loope
add
add
cltd
repnz
xchg
stos
test
pop
mov
cmc
fisttpl
add
in
push
dec
add
add
cmc
xor
mov
addr16
mov
mov
mov
rep
fildl
adc
fisttpll
clc
je
dec
das
jbe
sbbl
add
test
ret
sub
dec
rcrl
rcll
outsb
scas
je
and
push
mov
xor
fwait
mov
add
add
mov
xchg
and
cmp
xor
push
fildll
push
lds
inc
lcall
adc
push
fistpl
scas
cmp
add
add
add
or
fiadds
sub
xor
pop
out
xor
pop
loope
fisttpll
jmp
fdiv
mov
adc
sbb
in
and
cmp
push
jg
push
jp
stos
cld
jo
add
xlat
outsb
jnp
xchg
mov
out
mov
enter
and
add
add
push
rorl
mov
sbb
and
jge
outsl
fidivs
mov
cltd
or
divl
std
mov
lret
push
bound
mov
push
negl
mov
mov
stc
sbb
mov
mov
mov
dec
inc
addr16
rcrb
fbld
adc
sbb
into
aaa
nop
xor
inc
add
add
ret
cmp
cmp
jl
fs
dec
mov
jp
sahf
addr16
xchg
cmp
data16
cmp
jge
inc
bound
mov
sti
push
sbb
bound
push
in
daa
out
push
in
int
or
add
add
sub
mov
add
add
and
add
jmp
inc
adc
cmpsl
inc
idivb
ja
hlt
popa
cmp
fs
and
in
lahf
add
mov
add
mov
push
jle
cmp
dec
mov
or
stos
addr16
ja
inc
faddl
arpl
add
add
pop
push
jge
mov
mov
sbb
adc
aas
insb
add
add
fldz
outsl
mov
sub
in
jmp
add
jo
out
aam
pop
out
push
lcall
add
push
mov
cltd
dec
subb
movsl
ret
pop
mov
mov
adc
add
add
sub
add
add
testb
mov
xchg
addb
das
pop
xchg
pop
adc
orl
add
add
sbb
add
inc
mov
xchg
data16
fistps
sub
push
mov
ljmp
lret
movsl
adc
add
add
add
add
add
add
add
add
push
adc
ret
cli
push
cmp
mov
dec
data16
mov
pop
out
loope
or
pop
inc
add
add
and
add
add
popf
scas
or
add
add
lcall
or
add
add
iret
dec
lret
lds
jns
cmpl
insl
cmp
push
xor
and
popf
pusha
mov
add
add
add
and
add
add
lods
std
add
add
inc
add
add
jns
aas
cltd
out
arpl
push
adc
and
lcall
xchg
mov
sub
mov
loopne
adc
sbb
test
js
cltd
xor
mov
or
push
popf
stos
cld
data16
mov
lret
mov
and
add
mov
add
add
add
testl
dec
daa
jmp
js
mov
je
je
mov
pusha
mov
push
into
insb
add
add
arpl
add
add
mov
lds
add
add
addb
lret
mov
add
add
or
jno
scas
mov
xchg
dec
ljmp
fcoml
jno
ret
cs
loope
xchg
arpl
mov
xchg
mulb
add
inc
and
in
pop
dec
rol
test
aad
aam
mov
popf
aaa
daa
fisubrl
or
add
add
and
add
add
mov
xchg
aad
cld
sbb
outsl
repz
or
add
add
sub
push
mov
stos
loop
pop
jne
pop
test
pop
or
and
aad
andl
add
roll
inc
mov
xchg
or
add
add
add
pop
sub
add
add
add
add
cltd
jb
test
add
pop
rolb
adc
in
fwait
mov
add
add
into
cld
decl
cmp
imul
int
add
add
add
add
add
cmp
shr
mov
stos
sbb
jne
xlat
inc
fld
and
inc
xor
add
in
mov
push
xor
leave
out
sahf
push
cmpsl
xor
push
das
hlt
jbe
push
ret
inc
add
add
ss
add
add
push
xchg
lods
inc
mov
es
mov
test
mov
pop
or
push
sbb
or
add
add
in
insb
add
add
jb
mov
movsb
mov
add
add
aam
xor
rcrb
add
add
rcr
sub
sub
arpl
das
adc
jae
dec
add
add
add
add
adc
add
add
sti
jne
lods
cmp
dec
jmp
jno
outsl
inc
lds
or
xchg
add
add
lock
add
add
pop
lahf
dec
aam
in
jmp
ret
add
out
sbb
std
and
mov
xor
sbb
inc
outsb
cmpl
mov
add
add
in
dec
pop
xor
mov
push
test
les
sbb
cmp
lds
cmpsl
es
and
add
add
fisubrl
add
add
mov
jmp
rcr
jp
das
xor
shll
ss
mov
iret
ds
dec
cmovs
xor
out
push
sbb
cli
mov
out
mov
and
add
add
pop
mov
add
out
ret
add
add
fstl
pop
cmpb
test
lahf
cmp
data16
dec
adc
mov
push
xor
and
dec
jb
mov
or
add
add
enter
xchg
lcall
add
add
push
shl
adc
sub
add
add
sbb
mov
stc
sbb
sub
pmaxub
imul
add
cmc
not
fidivl
mov
add
pop
pop
jmp
add
pushf
lahf
or
and
leave
jge
aam
lcall
mov
cmp
xor
jns
push
lods
cmc
push
mov
hlt
add
fisubrs
add
mov
add
and
add
add
hlt
outsl
stc
inc
add
adc
popf
enter
loopne
mov
push
sahf
icebp
sbb
fistpll
sahf
jno
popa
cwtl
push
push
fld
jge
std
lret
push
pop
rcrl
jne
add
add
lods
mov
cmpsl
sti
pop
clc
xor
out
add
add
add
push
sub
add
add
in
mov
inc
mov
movsl
and
add
mov
inc
mov
sub
add
add
fsubl
add
add
addr16
test
movl
sti
jbe
and
add
add
out
sub
push
cmp
xchg
inc
pop
fs
add
mov
add
gs
dec
mov
mov
mov
add
jo
pusha
mov
cli
mov
in
cltd
inc
inc
mov
inc
xchg
pop
jle
mov
dec
dec
out
or
add
add
push
jl
fcoms
fwait
popa
call
popf
je
add
add
add
push
lret
out
imul
into
out
dec
sbb
or
add
add
or
call
add
fists
dec
add
add
addl
pop
cld
adc
add
jno
pop
inc
movsl
int3
sub
push
mov
in
pop
fisubrs
inc
arpl
fisttps
cld
xchg
in
sub
mov
lret
test
mov
dec
add
add
mov
shll
adc
mov
cmpsb
movsl
aad
mov
jle
lods
lcall
add
add
xchg
add
repz
push
aas
test
adc
pop
outsb
cmp
mov
push
stc
aad
inc
mov
clc
push
push
mov
test
push
xchg
loopne
mov
mov
xchg
loopne
xlat
stc
and
fdivl
fwait
mov
int3
imul
repnz
or
add
add
push
and
dec
add
add
push
pop
adc
repnz
add
add
int3
in
lcall
pop
jnp
push
cmp
xor
cmp
inc
add
add
ret
adc
test
repnz
jl
pop
mov
push
add
out
cmpl
aaa
mov
outsl
xor
mov
pop
inc
push
or
aas
push
ds
movsb
adc
jne
or
cmp
mov
test
or
add
add
sub
add
add
int
jnp
jl
stos
add
test
arpl
dec
adc
mov
sub
add
add
std
cmp
nop
pop
mov
dec
out
mov
add
inc
mov
or
add
add
mov
lret
adc
ret
xor
in
inc
push
outsb
dec
dec
fdiv
or
fwait
xor
imul
scas
scas
out
vpor
inc
es
popf
xchg
call
jnp
jae
add
add
push
inc
or
adc
and
lret
int3
int
imul
cwtl
pop
or
jno
add
add
mov
push
shlb
add
add
stos
adc
mov
adc
sbb
jb
mov
clc
loope
push
or
insb
mov
pusha
add
add
xchg
push
das
cmp
mov
and
xorb
data16
and
add
add
push
xchg
fbld
add
jb
or
lcall
sbb
dec
push
nop
cmpsl
insb
mov
mov
push
mov
mov
adc
lods
add
add
add
cwtl
in
xlat
fsubs
push
sbb
or
hlt
xlat
rclb
rcrl
jg
mov
add
add
add
aad
dec
or
add
add
xor
mov
call
lret
dec
add
add
fwait
into
addb
add
add
or
mov
in
mov
add
add
repz
mov
stc
out
adc
mov
movnti
mov
add
add
add
rclb
bsf
outsl
cli
add
mov
push
add
cld
lcall
sbb
adc
and
inc
pop
dec
mov
jge
inc
xor
add
add
dec
mov
outsb
outsl
mov
add
add
jne
insb
add
add
pusha
mov
pop
les
mov
add
add
pop
push
inc
cmpsl
aaa
cld
push
shrb
out
mov
pop
fwait
cmp
je
add
cmp
out
inc
add
add
fldenv
aad
dec
pop
pop
cmc
insb
mov
jno
test
stos
add
add
add
xchg
mov
add
add
mov
mov
imul
xor
fidivl
add
cld
mov
mov
aam
jae
dec
mov
push
sub
and
jge
dec
add
add
aaa
ss
mov
adc
movsl
jae
les
add
das
inc
add
add
add
lcall
xchg
loopne
sub
out
or
add
add
xchg
xchg
mov
lret
lret
mov
xchg
xor
cltd
sbb
in
or
mov
inc
mov
add
stos
push
lods
mov
mov
imul
xor
dec
cli
sub
sbb
test
arpl
add
lret
rorl
add
sarb
sbbl
lds
mov
fldl
add
pop
jge
ljmp
add
shlb
mov
jns
push
and
add
add
orl
pop
ds
rcl
arpl
sub
add
add
loop
xor
or
add
add
add
add
dec
lret
push
push
xrelease
add
add
add
add
ficoms
aaa
gs
mov
lahf
jno
adc
push
inc
xchg
add
sub
icebp
repz
sti
test
or
sti
sbb
leave
into
and
add
add
ret
xchg
stos
pop
or
add
add
lds
lret
fsubl
arpl
inc
mov
insb
add
add
fisttpl
add
add
xchg
pusha
mov
dec
sub
mov
add
loopne
fdivrs
shrl
cmp
xchg
cmpsb
lahf
inc
push
in
cwtl
dec
lods
dec
inc
lcall
push
mov
cmp
add
and
push
or
sub
add
add
add
add
scas
pop
xor
dec
add
add
fistl
jb
pushl
stc
scas
adc
sbbb
scas
mov
dec
mov
pop
mov
add
or
add
add
sbb
cmp
inc
adc
jecxz
movsb
leave
je
lret
imul
stc
lods
xor
dec
sbb
cltd
add
jmp
rorl
push
xchg
enter
fsubs
pushf
xchg
jnp
std
int
into
push
inc
push
std
push
xchg
cmpsb
jno
fcomi
pop
addr16
pop
mov
cmpsb
mov
outsb
sub
and
ss
push
jb
and
loopne
pop
or
add
add
sub
and
add
add
jl
enter
out
xchg
and
add
add
pop
mov
jno
out
movsl
loop
and
outsl
jbe
fwait
mov
mov
push
cwtl
hlt
jnp
cmpsl
adc
mov
mov
mov
mov
mov
add
ss
dec
add
add
sbb
inc
add
add
and
add
add
add
add
pop
je
and
add
add
lods
pop
iret
adc
xor
sti
movsb
push
and
add
add
xchg
add
add
add
les
pop
jecxz
into
or
sub
loop
lods
pop
jns
shlb
push
int
je
jae
pop
out
int3
sbb
dec
cmpsl
mov
mov
lods
cmpsl
add
dec
add
add
xor
in
lock
popl
cltd
test
dec
add
add
dec
cmp
add
add
mov
inc
add
add
sub
add
add
bound
clc
push
and
movsb
notb
xor
mov
add
add
sbb
mov
sub
mov
lret
inc
mov
mov
add
pop
or
push
imul
or
push
iret
jmp
dec
mov
mov
add
add
push
xchg
imul
or
add
add
ljmp
jl
ret
test
push
imul
je
fcomip
and
mov
jae
cmp
mov
and
inc
add
add
mov
inc
cld
ficomps
dec
lret
or
lcall
ja
cld
sbb
mov
mov
add
add
pop
push
mov
and
rcrl
ds
lret
testb
add
add
push
jge
fmuls
add
adc
xchg
arpl
mov
pop
lret
test
test
add
add
lock
mov
lods
jmp
cmp
and
sbb
jnp
std
pop
adc
insl
and
add
jmp
xor
add
add
int
xchg
stos
loope
push
sarl
lret
mov
popf
push
jbe
lea
iret
xor
lret
mov
mulb
mov
in
sub
mov
fimuls
add
add
insb
add
add
cli
pop
negb
sahf
jp
addr16
and
mov
scas
sbb
test
pop
pop
ja
fimuls
shll
imul
add
add
add
int3
pop
mov
repz
mov
add
rcll
out
xlat
pop
rorb
pop
mov
add
inc
sbb
sub
je
cmp
movsl
inc
gs
hlt
dec
add
add
sbb
jbe
push
aaa
push
sarb
outsl
dec
cli
jbe
das
dec
int3
jo,pn
pushf
je
add
add
push
sub
pop
adc
mov
sbb
rcll
add
add
subl
xchg
orl
add
inc
lret
push
jmp
add
jbe
cld
push
mov
cmpsl
sbb
gs
pop
xchg
mov
cmpsl
nop
inc
mov
xchg
ljmp
and
sub
add
add
movl
push
xor
add
add
add
add
add
cmp
daa
push
gs
scas
sarb
mov
outsl
je
pop
jbe
popa
lahf
mov
faddl
dec
mov
movsl
push
jl
sub
repz
add
add
mov
jecxz
stos
repz
jl
bnd
lret
sti
int3
cmpsb
xor
or
jp
xor
mov
shl
xor
into
xchg
add
pushf
fucomp
mov
outsl
das
xchg
scas
mov
shrl
add
dec
mov
mov
add
add
dec
xchg
xchg
into
js
push
jle
push
adc
mov
nop
sbb
sub
out
xor
insb
add
add
es
pop
fs
es
shrl
or
add
add
xor
lea
imul
add
xchg
add
aam
jp
nop
xor
dec
int
and
add
add
das
clc
ret
mov
daa
clc
scas
rorl
sbb
push
jmp
sbb
pusha
add
add
jbe
and
mov
lock
stc
push
mov
inc
add
add
scas
cmp
mov
add
add
add
into
inc
add
add
xchg
in
sbb
add
mov
cwtl
mov
add
cmp
out
mov
pusha
mov
daa
or
mov
aad
faddl
push
rcl
aam
sub
xchg
pop
xlat
nop
cmpsl
lcall
xor
sub
mov
add
loope
inc
add
add
and
add
add
cmp
je
add
add
ficoml
out
mov
add
mov
xchg
pop
stos
add
add
add
inc
sbb
lods
cli
and
out
add
jbe
pop
insb
mov
fimull
adc
mov
test
sti
addb
fdivrs
cli
pop
inc
push
inc
cmpsb
mov
in
frstor
jne
xchg
add
add
call
inc
movsl
jl
adc
add
sub
inc
pop
xchg
call
add
sti
imul
mov
push
jbe,pn
das
imul
sbb
ror
lds
clc
int3
punpckhdq
mov
xor
push
movsl
mov
rolb
add
add
add
add
inc
mov
dec
scas
and
add
add
add
movsb
mov
cs
in
inc
mov
daa
add
lea
lcall
sbb
add
das
add
and
testl
in
inc
mov
popl
add
pop
sbb
cmpsl
div
xchg
pop
jg
cmp
out
jne
mov
add
add
jge
jb
add
add
xor
cmpl
add
cwtl
jb
adc
add
fists
cmp
sbb
ja
inc
outsl
int
fmuls
dec
data16
sbb
in
xchg
leave
mov
pop
xor
inc
lret
or
or
add
add
lock
aad
sub
add
add
lods
bound
add
addr16
xchg
xor
lods
test
jne
push
ret
dec
pop
pop
cld
push
push
das
jg
add
add
lea
sti
setp
push
inc
fnstenv
inc
outsb
repnz
das
lods
mov
mov
rcrl
dec
mov
add
inc
mov
sbb
mov
in
testb
add
xchg
sbb
lea
xlat
jne
push
cmc
push
dec
mov
xchg
sahf
mov
add
add
pop
fisttpl
aad
sti
negl
mov
pop
scas
mov
addl
adc
fbld
sbb
add
stos
fsub
inc
pop
nop
add
add
mov
inc
inc
or
sbb
pop
adc
aaa
mov
fsubrs
dec
sub
iret
or
push
sub
dec
cld
je
mov
sbb
sub
add
add
add
in
mov
into
or
add
add
dec
inc
lahf
jmp
rorl
std
push
push
loopne
xchg
sbb
out
jne
out
add
add
dec
mov
cmp
int
popf
and
jmp
add
add
add
js
inc
in
cmc
movsb
cli
push
jno
xor
mov
dec
add
add
mov
sbb
sbb
or
add
add
add
lock
mov
add
add
add
es
leave
daa
jb
xchg
or
dec
jne
aad
xchg
nop
jecxz
mov
loopne
lahf
push
pop
jge
cwtl
imul
in
leave
loopne
jns
xchg
rorl
add
xchg
in
pop
jb
jle
je
decb
sbb
in
add
add
add
mov
add
outsl
xlat
fmulp
in
shrl
cwtl
xchg
xchg
xlat
pushf
xor
and
incb
add
add
cs
sbb
in
inc
mov
mov
imul
xchg
add
in
cmp
and
cmpb
mov
dec
popf
mov
push
cmp
popa
add
hlt
aaa
inc
push
repnz
sub
mov
mov
fyl2xp1
je
lret
cmpsl
push
cmovbe
insb
add
add
pop
pop
dec
push
mov
mov
scas
rol
pusha
mov
pop
mov
push
sbb
inc
add
add
std
daa
mov
out
pop
push
into
jecxz
and
add
icebp
lret
out
lods
call
cmp
jmp
lahf
leave
out
xchg
adcl
add
add
jb
movsb
in
out
mov
je
lret
fldcw
and
add
add
add
add
add
lcall
loop
out
push
pop
sub
out
pop
and
add
add
in
das
jns
add
insb
mov
pop
mov
or
and
xchg
jg
je
popa
ret
subb
add
or
add
add
add
add
fisubrl
mov
loop
iret
loope
addr16
pushf
jp
mov
stos
into
cmp
xlat
push
gs
dec
rolb
cmp
jmp
gs
lods
out
sub
add
xchg
je
aad
mov
rcl
push
lods
cmp
push
mov
loopne
shll
das
push
and
ja
lret
sbb
and
add
add
add
add
fidivrl
lea
sub
xchg
jb
cmp
popf
cmpsb
int
xchg
xchg
adc
xlat
cmpsb
je
add
in
xchg
xchg
loop
xor
fs
mov
pop
or
cmp
or
shr
sub
add
add
shlb
stc
xor
or
add
add
iret
jecxz
in
out
mov
movsl
std
sti
cmp
stc
insl
movsl
fmull
ja
pushf
int3
mov
stos
mov
mov
adc
mov
mov
add
add
add
add
add
test
out
loopne
repz
in
enter
fstpl
enter
jle
jmp
add
mov
add
cmp
or
add
add
jl
int
aaa
inc
or
add
add
in
sbb
aas
dec
stc
mov
mov
scas
lcall
cmpsl
mov
push
adc
insb
mov
cmp
pop
xchg
nop
and
add
add
cmc
les
scas
clc
cmp
ljmp
adc
les
add
jb
or
sbb
aas
mov
add
add
gs
and
add
add
int
add
sbb
add
add
add
add
imul
out
popf
daa
or
stc
call
add
add
xchg
out
gs
pop
outsb
mov
lods
adc
mov
dec
mov
mov
xor
jp
mov
cli
mov
add
xchg
in
mov
add
add
or
mov
or
add
sbb
xchg
add
aam
mov
xchg
call
push
mov
stos
mov
add
mov
add
add
xor
scas
adc
lcall
aad
popf
mov
pop
and
add
add
add
add
push
adc
xor
mov
int
scas
xchg
ljmp
add
add
stos
jecxz
cmp
mov
mov
inc
mov
dec
mov
lahf
xor
test
add
or
pop
pushw
repnz
xor
fcom
adc
jnp
dec
sbb
mov
sub
pop
mov
add
pusha
mov
dec
fs
rclb
jg
iret
sbb
sub
sbb
inc
or
aaa
stos
scas
mov
mov
or
popf
stc
jp
and
add
mov
mov
sahf
gs
or
mov
popf
xor
data16
sbb
test
xchg
inc
add
add
add
add
add
ss
test
test
inc
int3
and
add
add
imull
scas
xchg
jbe
loop
dec
fisubrs
hlt
mov
aam
xchg
mov
insl
pop
push
add
add
loop
adc
add
mov
and
add
jb
mov
sbb
stos
and
add
add
ret
incb
mov
add
add
add
add
push
iret
add
add
xchg
popf
mov
mov
test
pop
packsswb
jge
cmp
mov
add
aam
jg
testb
fisubrs
divl
pop
cld
adc
add
and
add
add
out
jmp
aam
outsb
mov
add
add
sbb
mov
scas
stos
pop
inc
in
or
mov
mov
test
push
cmp
jns
inc
push
fstl
sub
add
add
insb
add
add
mov
dec
lods
aas
dec
leave
xor
sahf
lods
or
subl
add
add
jns
call
add
add
add
sbb
add
add
xor
stc
cmp
movsl
pop
inc
jns
das
add
movsb
lods
or
dec
add
add
pop
fcoms
sbb
aas
outsb
or
add
add
mov
dec
pop
mov
mov
xchg
lahf
shlb
add
add
or
stc
lods
movsl
push
mov
dec
mov
add
add
push
xchg
jbe
std
adc
jbe
mov
sbb
lods
jns
out
les
cli
push
pusha
add
add
mov
fsubs
jecxz
push
cltd
push
jno
jbe
cmp
add
add
add
add
jp
test
adc
pop
add
add
add
stos
test
mov
dec
add
add
movsb
or
add
add
add
mov
add
lahf
lock
xchg
fildll
add
add
pushl
or
pusha
mov
dec
add
add
rolb
or
xchg
loop
sbbb
mov
aam
cltd
call
or
sbb
mov
insl
call
mov
push
dec
lods
and
add
add
adc
in
pusha
mov
mov
adc
aam
std
sub
lds
cmpsb
pop
cmc
leave
cmp
ds
mov
and
mov
cltd
daa
lds
incb
fcompl
repnz
mov
dec
stc
dec
mov
cmp
dec
mov
ja
dec
add
add
cmp
aas
add
add
add
add
add
pusha
mov
shl
push
pop
mov
mov
test
inc
xchg
sarl
or
aas
je
cmp
adc
xor
add
add
movsl
xor
lods
mov
fdivl
add
cmp
lods
and
jge
sbb
ret
add
add
add
add
add
repz
add
add
fdivrl
jnp
mov
ds
test
dec
aad
pop
dec
fwait
inc
add
mov
push
movsl
adc
add
add
fldt
sbb
jbe
fistpll
inc
int
ds
enter
jmp
mov
sbb
sub
sub
add
add
out
sbb
inc
jbe
xor
cltd
nop
popf
imul
jg
jecxz
adc
out
enter
enter
add
loop
out
das
faddl
mov
mov
cmpsl
leave
mov
imul
sbbb
out
pop
jmp
fnstsw
cli
lea
in
mov
and
push
sub
add
add
sbb
jne
add
add
adc
add
test
loopne
in
xlat
stos
inc
in
jne
data16
xchg
lcall
jl
mov
fisubrl
xchg
lret
lea
insb
add
add
pop
out
and
insb
add
add
add
add
add
add
dec
lds
fdivl
pop
push
mov
faddl
push
jne
and
mov
push
lret
mov
add
add
jge
jnp
xchg
scas
lods
in
xchg
jns
sbb
lret
add
add
sub
jns
add
add
inc
add
add
cli
add
add
cld
nop
test
jle
movsb
lret
dec
mov
stos
int3
xor
aaa
dec
outsl
mov
mov
and
mov
sti
or
fs
aas
hlt
lahf
add
push
or
push
mov
xor
fmull
jmp
cmp
adc
jo
jns
pop
or
add
add
cmp
pop
sub
add
add
add
mov
mov
xchg
sbb
int3
mov
loop
inc
add
add
es
ljmp
repz
daa
dec
ja
push
subb
arpl
mov
add
rcrb
imul
xor
dec
pop
sub
mov
rclb
shll
hlt
add
xlat
add
jl
repnz
sbb
outsl
sub
add
add
arpl
sub
bound
popa
inc
add
add
loope
gs
add
add
add
add
add
and
sbb
xchg
sub
xlat
ficompl
ljmp
dec
sub
push
cli
push
push
cmp
sbb
cwtl
popa
inc
sbb
jno
negl
cmp
add
add
mov
lcall
add
mov
add
ds
cmp
ja
mull
fdivs
xlat
lahf
sbb
mov
add
add
shlb
stos
scas
jmp
jbe
or
add
add
test
dec
mov
sub
adc
pop
cltd
out
push
jns
add
add
add
mov
add
add
out
pop
dec
mov
test
add
add
loop
mov
ret
int3
cmp
cmp
xchg
or
imull
add
add
add
add
xor
stc
ret
sbb
mov
out
adc
iret
add
lcall
add
add
pop
in
inc
mov
lret
push
inc
cmpl
pop
lret
unpcklps
loop
pop
in
mov
mov
add
inc
mov
in
pop
cmp
rclb
es
add
add
add
add
or
cmp
es
adc
mov
dec
add
add
add
push
stos
fcmovnu
call
pushf
inc
mov
movsb
scas
roll
add
mov
jge
movsl
adc
add
add
jne
adcl
pop
dec
mov
jae
sub
add
add
in
pop
nop
inc
rcll
sub
add
add
aad
add
add
mov
data16
stos
cmp
scas
cmp
adc
add
add
pop
aam
add
sbb
es
popf
xchg
push
jnp
fmull
add
or
fisubrl
inc
mov
pushf
in
test
cmp
mov
xchg
ret
sub
add
jns
cmc
sub
movl
add
add
add
or
lods
cmpl
js
dec
and
add
pcmpeqd
xlat
insb
mov
pop
jb
cwtl
jae
aad
lcall
ficompl
cmc
mov
decl
jecxz
lea
dec
in
lret
cmpsl
adc
call
push
or
scas
lcall
daa
xor
sar
cmp
xchg
lcall
mov
jecxz
cmp
xor
add
add
jns
xor
mov
lods
sbb
in
fsubl
add
fistpl
fisubrl
adc
pushf
mov
pop
mov
cmpl
pop
jmp
mov
or
push
push
xchg
insl
mov
in
lds
testb
push
mov
add
add
cs
sub
adc
sub
add
add
stc
les
add
cwtl
mov
xchg
add
lods
adc
test
ja
inc
sbb
cmp
inc
push
dec
adc
rcl
movsb
decl
test
lock
fst
movsb
and
add
add
jecxz
cwtl
in
fmulp
push
shrl
in
sbb
xor
sbb
mov
add
add
insb
add
add
cmpsb
pop
or
movb
iret
mov
push
out
pushf
and
repz
addb
jl
dec
mov
cmp
fdivrs
popl
stos
jg
sbb
mov
push
dec
inc
add
add
scas
mov
test
ret
dec
mov
outsb
cmp
in
mov
pop
cmp
xchg
cltd
cwtl
cmp
add
cmp
mov
dec
mov
test
xchg
sti
mov
pushf
iret
je
mov
fnop
test
lods
adc
cmp
xor
dec
dec
mov
pop
and
dec
insl
mov
insb
mov
mov
lcall
add
or
add
add
cmp
inc
and
add
sub
or
add
add
je
loopne
ficoml
pop
adc
outsb
aam
sbb
or
inc
mov
mov
int3
cmp
and
add
add
add
add
test
out
fwait
and
loope
mov
add
cmc
gs
popf
jg
pop
fdivrl
add
cs
mov
sbb
xor
xchg
stc
gs
cmpb
fdivl
xor
dec
add
add
enter
rcr
js
jge
mov
xor
mov
sarl
inc
fists
inc
mov
mov
and
pop
or
fmuls
add
mov
lahf
fcmovbe
pop
jo
fisubrs
lcall
push
cmp
jecxz
mov
filds
add
cmp
add
add
pusha
mov
xchg
and
insb
mov
mov
inc
fisttpll
add
out
fidivs
dec
add
add
add
push
outsl
cli
mov
or
scas
mov
adc
push
rclb
out
pop
test
add
add
lock
ljmp
shr
into
sbb
sbb
mov
xchg
movsb
aas
testb
in
add
add
push
pop
sub
add
add
jge
pushf
fcmovnu
cli
push
in
adc
or
push
inc
pop
adc
mov
add
add
jmp
sbb
aad
mov
scas
cmpsl
les
xchg
aas
aam
add
add
sub
add
add
mov
add
shrb
inc
outsb
mov
out
nop
cmp
ljmp
stc
out
mov
sub
add
sbb
mov
es
jecxz
jb
mov
xor
mov
std
jl
int
sbb
xlat
jnp
jns
jge
fdivl
sarb
inc
fucomi
pop
cmp
pop
push
lcall
and
add
add
xchg
push
popl
add
in
xchg
and
add
add
mov
outsb
or
mov
add
jno
ja
outsb
or
leave
ret
je
dec
push
int
pop
mov
bound
test
clc
andl
add
add
int
pop
cli
sub
dec
adc
xchg
pop
dec
push
fs
mov
in
test
test
out
arpl
addr16
aaa
lret
in
aad
inc
dec
popf
outsl
mov
push
cmpb
mov
add
adc
enter
sub
add
add
add
add
inc
pop
scas
lret
sbb
es
sub
addl
add
xlat
sub
add
add
push
mov
jmp
jno
sub
sub
add
add
lods
repnz
add
and
add
add
add
add
lret
jns
addr16
push
scas
outsl
ret
imul
mov
push
sbb
bound
lahf
out
or
loop
push
mov
repz
mov
cmpsb
popf
mov
lock
add
add
xor
std
jne
ljmp
leave
sub
loop
jle
sbb
inc
imull
add
cld
sbb
push
fcom
add
adc
data16
loop
scas
inc
lcall
jge
push
pop
or
xchg
push
mov
pop
in
cmp
push
fdivrl
sub
add
add
dec
data16
repz
inc
add
add
and
add
add
cmp
adc
fsubs
mov
add
add
add
or
mov
pushf
sti
dec
push
ja
sbb
push
scas
fisttps
jb
subb
cs
loope
out
incb
mov
lret
flds
mov
jecxz
iret
gs
mov
add
cli
xchg
jg
bound
mov
and
loop
mov
add
add
out
push
test
pop
and
add
add
imulb
sbb
pop
fisttpl
jno
mov
add
mov
fcmovnb
icebp
scas
jmp
pop
addr16
add
adc
lods
aaa
mov
adc
into
pushf
popf
call
stc
dec
add
add
mov
pushf
aam
cmp
arpl
out
aas
sub
add
or
aas
or
add
add
add
add
xchg
mov
add
sub
sub
add
add
lock
in
pusha
mov
and
push
mov
test
sub
add
add
xor
lret
and
iret
dec
inc
leave
adc
jle
mov
xor
fadds
add
jl
add
add
add
sbb
loopne
xorb
xor
xchg
call
and
xlat
mov
mov
nop
pop
test
xor
mov
xor
stos
leave
div
or
add
add
add
add
add
add
sbb
jmp
adc
mov
add
add
xor
mov
mov
jl
ss
mov
cmpb
stc
cli
sub
inc
jmp
repnz
lock
mov
xor
mov
aas
int
inc
pusha
mov
or
jl
add
shl
movsl
and
movsl
mov
pop
cmp
mov
cmc
add
mov
imul
add
add
adc
mov
and
cmc
and
xchg
push
ret
shlb
fstpt
fbstp
mov
popw
das
out
mov
ret
cmpsl
jno
insl
pop
out
ljmp
xchg
cmpsl
adc
mov
mov
stc
iret
pop
sub
mov
push
mov
sub
nop
fmull
mov
sbb
xchg
or
add
add
mov
mov
cmpl
sbb
mov
mov
loope
cltd
ds
nop
or
add
add
sub
add
add
jl
js
out
shrl
fsubrl
or
adc
pop
adc
xor
pop
cld
mov
add
cld
into
fistl
shrb
add
add
pop
add
mov
add
out
shlb
dec
jne
addr16
shrb
mov
push
xor
loop
outsb
or
add
add
add
add
sbb
add
dec
pop
xor
sbb
mov
add
mov
movsb
inc
mov
sbb
mov
adc
add
jo
jnp
outsl
and
xchg
lret
lds
add
add
cltd
pop
sub
add
add
sub
add
add
sbb
add
add
add
xor
scas
in
adc
pop
xor
decb
add
add
mov
xchg
pop
aaa
sub
add
add
add
add
mulb
popa
lods
rclb
add
fildll
sub
add
add
xchg
cmp
inc
call
add
add
add
out
inc
jae
repnz
cs
xchg
pushf
pop
stc
mov
pop
shrl
dec
mov
add
add
stos
cltd
popa
mov
ss
loop
xchg
add
arpl
lret
jns
add
push
cmp
xor
add
add
scas
pop
in
rorl
pop
out
test
addl
int
mov
scas
stos
push
xor
push
xlat
outsl
das
xor
es
xchg
into
loop
ss
mov
stos
bound
cmp
sub
adc
jns
mov
flds
add
add
add
mov
dec
stc
xchg
inc
mov
xchg
and
add
ja
fildll
aas
lcall
loopne
int
ja
adc
call
add
imul
add
add
jmp
out
jbe
into
mov
jae
mov
add
add
testb
add
lret
cli
test
mov
inc
or
ficompl
and
dec
add
add
outsb
fisttpll
add
push
xor
or
stc
jae
inc
out
mov
push
fwait
leave
in
leave
fsubl
add
xchg
mov
and
loope
cltd
and
sti
popf
fistps
jae
mov
jl
mov
inc
in
jns
lcall
and
mov
in
aas
mov
add
shrl
pop
sti
pop
repnz
pop
int
leave
nop
mov
mov
ss
fcoml
mov
jo
imul
pusha
add
add
push
cld
fnstcw
add
add
add
xor
cmp
mov
out
jns
cmp
inc
and
inc
mov
pop
sbb
ds
add
lea
add
add
pop
and
add
add
loope
cmp
dec
xor
and
add
add
or
add
pop
cmp
pop
popf
jbe
mov
xchg
cmc
xchg
mov
add
dec
shll
std
dec
lret
jmp
sbb
scas
sub
cmp
xor
xchg
pushf
scas
rcrl
mov
add
mov
xchg
xlat
mov
ja
movsb
push
pop
sbbl
imul
push
add
or
sub
mov
push
fistpl
sbb
mov
cs
inc
add
add
insl
lea
mov
in
pop
scas
fcompl
mov
add
add
add
add
add
add
call
push
loopne
sub
pop
xchg
or
inc
or
jmp
popa
sbb
add
lds
push
es
xor
xor
loopne
fcom
adc
jb
out
push
mov
test
cmp
xlat
inc
add
add
fdivp
mov
xchg
add
add
repz
add
mov
xor
inc
mov
xor
lahf
test
sub
aas
mov
push
cmpl
sarb
inc
pop
in
sti
inc
cmp
adcb
cmpsb
dec
mov
push
mov
add
mov
les
cwtl
dec
add
add
jl
sub
add
add
add
cmpsb
mov
call
jp
mov
pushf
mov
subl
push
jle
xor
ljmp
ss
cmovae
xchg
xor
fnsetpm(287
es
dec
add
add
cmp
fwait
aam
fwait
cmp
add
add
add
push
out
inc
or
divl
repz
test
cmp
mov
mov
out
dec
mov
mov
mov
sbb
lods
scas
and
cmp
push
mov
mov
mov
sahf
inc
shrb
mov
aaa
xor
jno
sbb
ficomps
pop
test
or
mov
stos
mov
mov
cmp
jno
out
in
loope
jecxz
mov
mov
gs
mov
mov
add
add
and
lock
add
add
add
add
add
mov
push
das
ja
mov
xchg
cmpsb
cmp
or
mov
test
repnz
mov
sub
test
cmpsb
daa
adc
push
cmpsb
outsb
aas
test
mov
mov
fs
xlat
stos
das
lret
inc
pusha
add
add
daa
in
mov
add
mov
dec
jno
add
add
add
jl
push
stos
add
add
inc
ret
fstpl
and
add
add
js
int3
lea
loop
add
add
jae
out
xor
aas
xchg
xchg
pop
push
movsb
cmp
add
cmc
mov
push
nop
lahf
iret
out
test
jne
shr
dec
test
push
es
lds
add
add
js
cmp
mov
jno
icebp
ljmp
jnp
xchg
ds
push
mov
xchg
mov
mov
add
pusha
add
add
ficoms
iret
int3
adc
sbbb
xchg
push
mov
es
lods
out
movsl
aaa
dec
nop
sub
add
inc
mov
fs
add
nop
push
xor
push
dec
pop
mov
inc
mov
mov
add
xor
test
cmpsl
xchg
jmp
xor
scas
test
xor
data16
sub
add
add
push
xlat
sbb
add
add
dec
push
and
fadds
jns
orl
mov
xchg
mov
sub
jne
sub
lock
in
inc
mov
mov
xchg
data16
jae
stc
xor
loopne
int
pop
aaa
xchg
fisubs
add
add
add
cwtl
sahf
and
add
add
popa
pushf
fs
add
add
add
lods
ret
xchg
sub
and
mov
iret
pop
lret
xchg
add
add
add
add
add
xchg
or
add
add
js
jge
push
inc
loop
or
clc
mov
xor
test
addl
and
or
add
add
cmp
and
cmc
push
mov
dec
inc
jnp
test
adc
add
add
lods
push
mov
add
mov
or
cmc
pop
xchg
push
cld
test
add
add
sub
jmp
inc
sbb
outsb
sbb
push
mov
test
les
cld
lahf
shll
cmp
in
add
frstor
lods
ds
mov
cli
test
add
add
clc
daa
xor
pop
xchg
aaa
adc
in
cmp
xchg
add
push
lds
mov
sub
add
add
jecxz
fisubrl
mov
mov
les
mov
xchg
jecxz
sub
lret
xadd
and
lea
add
lretw
add
add
stos
push
add
add
add
add
mov
xchg
pushf
cld
mov
jo
push
cltd
out
in
in
or
mov
movl
add
cli
jle
pop
jbe
xor
mov
jno
pop
or
mov
xchg
dec
mov
iret
cmp
pop
jbe
sub
add
std
push
data16
sub
cmpsl
fisttpll
and
add
push
clc
out
or
mov
shll
and
sahf
jae
out
pop
pop
dec
imul
fxch
int
push
dec
mov
out
mov
add
add
and
and
add
add
jne
mov
repz
sub
adc
adc
xchg
test
mov
sub
jns
push
loopne
nop
xchg
lods
pop
icebp
push
dec
in
xchg
pop
xchg
jo
mov
cltd
clc
and
add
std
mov
pop
repz
push
ss
add
sub
mov
jge
add
add
lods
cmpl
test
add
add
and
cmp
outsb
and
add
jle
pop
in
pop
push
cli
cmpsb
insl
fcomi
in
mov
out
or
pop
mov
mov
add
xor
mov
imul
mov
loope
jb
inc
mov
dec
mov
add
add
pop
mulb
add
add
jnp
enter
sub
cltd
fwait
pusha
add
add
pushw
dec
add
add
adc
rcrb
push
push
inc
rorb
add
add
inc
test
jne
insb
mov
sub
xor
scas
dec
lret
fistpll
mov
add
add
add
fidivl
dec
or
sahf
or
xor
add
add
arpl
mov
shl
add
add
add
dec
mov
imul
add
add
push
sub
aaa
xor
mov
add
add
lods
in
jno
pop
mov
int3
push
and
nop
or
lea
pushf
cli
repz
add
dec
push
outsl
inc
add
add
jbe
dec
jmp
xchg
mov
jecxz
sub
sbb
insb
add
add
mov
xor
orl
dec
stc
pushf
clc
fwait
mov
js
fistps
cmpsb
lahf
add
add
add
cmp
jb
mov
mov
xchg
pop
subl
ja
mov
add
outsl
xchg
aam
movsb
aad
iret
push
aad
movsl
fdivrl
dec
adc
add
jle
or
add
dec
add
add
aam
sub
add
add
xor
pop
xor
add
add
cwtl
add
add
add
int3
je
sub
add
add
add
add
cmp
cld
mov
push
imul
test
and
add
icebp
and
jmp
aam
lret
test
add
aam
out
ja
pop
roll
add
add
int3
leave
loop
push
inc
mov
add
push
mov
in
cmp
mulb
add
fcoms
icebp
xchg
xor
push
ret
cmp
jecxz
mov
mov
add
cmp
cwtl
jo
adc
push
sub
sarl
add
hlt
jmp
mov
push
lcall
cmp
mov
rcr
addr16
mov
mov
push
mov
dec
call
cmp
lret
cli
call
add
add
push
mov
xchg
sbb
pusha
add
add
xor
test
sarl
lods
mov
mov
out
call
aaa
adc
repz
rcl
js
cmp
cmpsl
xchg
andl
or
cmp
jae
mov
mov
dec
dec
mov
sbb
shlb
incb
xchg
cwtl
xchg
add
add
aad
enter
sahf
xchg
int
pop
cltd
xor
gs
or
add
aas
cmp
mov
push
fwait
mov
out
nop
sbb
stos
sub
mov
add
js
bound
test
fadds
add
in
hlt
outsl
lret
and
add
sbb
dec
and
add
add
fldenv
pop
cmp
add
fwait
sub
scas
or
fisttpll
int
inc
add
add
xchg
add
adc
xchg
sbb
mov
adc
add
add
add
lea
add
add
aaa
xchg
xor
pop
pushf
pop
test
mov
les
push
adc
shll
or
mull
insl
aad
sahf
jp
xchg
cmpsl
fsubp
mov
out
pop
jmp
add
gs
jmp
add
mov
jle
cmp
test
dec
in
test
cld
aaa
adc
in
test
mov
dec
mov
dec
mov
movsl
gs
lret
out
push
dec
iret
nop
pop
mov
mov
xchg
mov
add
add
add
jg
push
add
pop
aad
mov
inc
mov
mov
daa
adc
jo
inc
and
adc
test
fisubrs
sbb
mov
adcb
dec
add
add
inc
add
data16
loop
sub
fldt
add
add
es
or
add
add
pop
pop
call
xchg
inc
cmp
lret
push
inc
repz
rorb
add
shrb
dec
idiv
das
subb
add
mov
or
sarb
in
jb
xchg
fdivrs
lret
fisttpl
push
dec
out
dec
xorl
inc
and
cmp
jae
mov
decl
add
fisubrl
insb
mov
mov
jmp
add
and
aam
roll
adc
mov
sbb
bound
xor
xlat
xor
adc
mov
out
jns
cmpsl
sub
add
add
mov
sub
add
add
andb
add
add
xor
sbb
stos
or
add
test
inc
mov
ljmp
add
add
sbb
mov
fbld
xor
and
sub
add
inc
hlt
jbe
rol
pop
push
arpl
dec
mov
pop
loop
cmp
cmp
add
add
jns
xchg
imul
popa
mov
sub
xor
jo
add
add
and
add
add
bound
int3
xor
jp
add
jae
fildl
rcr
jb
shll
mov
movsl
xchg
mov
ds
xchg
popf
repnz
lods
mov
cmp
stos
pop
addr16
pop
sbb
inc
in
clc
jb
and
dec
mov
rorb
mov
xchg
mov
das
add
push
std
pop
cli
shll
mov
inc
jge
sub
lods
inc
add
add
push
jne
sbb
lods
pop
cli
out
jns
in
cmp
jl
or
imul
add
nop
push
fists
mov
push
test
mov
pop
in
mov
ds
das
into
push
mov
mov
je
xchg
dec
dec
movsl
sbbl
push
decl
dec
sti
ds
push
mov
jge
inc
add
add
pop
movsb
loopne
leave
jmp
add
add
add
and
add
add
scas
mov
add
fs
pop
mov
outsb
jg
and
mov
push
aam
or
or
inc
inc
jno
stc
leave
sahf
cmp
pushf
sub
add
add
insl
fldcw
in
lods
fwait
mov
out
int3
jb
sub
repz
pop
les
add
addr16
in
mov
or
fsubrl
sahf
sahf
arpl
das
cmp
jno
xchg
rcrb
xchg
pop
cmp
lret
inc
fsubrl
add
pop
js
movsl
in
sub
add
add
ljmp
push
or
jge
cwtl
subb
mov
sub
and
add
pop
es
into
cmp
stc
add
pop
shll
add
add
outsl
inc
lret
mov
cmpsl
push
aam
scas
push
jge
push
jmp
mov
sarl
jno
out
jp
data16
xchg
call
push
cld
bound
das
mov
add
push
adc
push
xor
fldln2
jmp
push
sub
add
add
adc
pop
rcrb
sbb
sahf
mov
jne
mov
fucom
call
movsl
je
add
imul
sahf
fdivrs
test
sub
add
add
pop
daa
xchg
and
and
add
add
add
add
mov
addl
inc
cmp
jns
jns
mov
mov
test
ja
jle
fsub
lcall
add
insb
add
add
shll
add
add
mov
mov
inc
outsb
addr16
fidivrs
xchg
inc
add
add
add
notb
and
into
jae
testl
stc
jp
add
add
add
daa
add
and
mov
push
mov
ss
movsb
mov
ja
and
add
add
mov
in
jle
mov
cmpsl
xchg
pop
pop
jl
jnp
daa
or
outsb
xchg
out
imul
inc
rol
mov
mov
mov
inc
mov
movsl
inc
jp
pop
jecxz
sub
insb
add
add
adc
pop
cwtl
and
adc
and
pop
fdivrl
jno
add
mov
add
dec
add
add
push
dec
movsb
aad
lret
ljmp
fcoml
mov
push
adc
movsl
repnz
dec
and
int3
pop
dec
xchg
jne
add
mov
sub
ficoml
cmp
sub
jbe
incl
and
mov
add
add
adc
test
xchg
out
test
mov
add
add
add
add
add
cwtl
test
test
mov
jl
push
xchg
xor
push
data16
jge
fistpll
fcomp
xchg
adc
xchg
jle
daa
enter
lcall
cs
pop
outsl
loop
mov
jg
mov
add
cwtl
mov
aaa
aaa
and
mov
sbb
ds
mov
or
push
ret
pop
outsb
push
mov
stos
shrb
loope
xor
insb
add
add
mov
aas
or
shl
xchg
sbb
jp
in
or
add
outsl
or
and
push
xor
cmp
add
add
push
sarb
push
jmp
fwait
mov
add
add
enter
sbb
push
sti
int
lahf
out
cmp
dec
stc
adc
mov
and
add
add
add
pop
jbe
in
xchg
fstpt
xchg
mov
cmp
lds
add
cmpb
cmpsl
pop
inc
add
cmc
pop
test
cmp
cs
jmp
add
add
mov
shl
jmp
add
or
or
add
add
cmp
loop
mov
lock
es
cmpb
sahf
inc
mov
or
push
test
add
add
push
jp
mov
xchg
lds
add
jo
cmpsb
imul
sub
push
pop
insb
mov
cmp
add
add
lret
je
aam
mov
push
sub
lods
cmp
js
add
add
add
pop
sarb
pop
sub
add
add
add
das
pop
or
add
add
cmp
add
add
add
pop
mov
fldcw
mov
jns
cmc
dec
mov
add
fimuls
add
divl
cmpsb
xchg
add
add
add
es
idivb
pop
push
cmp
pop
pop
cmp
push
jae
sub
pop
popf
push
arpl
add
add
mov
xor
add
mov
sbb
jae
mov
jne
pop
pop
inc
mov
std
jmp
sub
mov
add
add
inc
mov
inc
push
out
lock
rorb
add
add
mov
adc
push
inc
jbe
jle
cmpsl
xor
jg
mov
add
fsubl
mov
mov
gs
jne
fdivrl
addr16
aas
lods
xchg
repnz
sub
stc
imul
int3
dec
pusha
mov
lahf
fildll
mov
cmp
xchg
ljmp
add
testl
mov
jge
or
add
add
test
dec
adc
jne
xchg
mov
add
add
jo
jecxz
aad
subb
sbb
cmc
xchg
and
adc
mov
repnz
jmp
add
repnz
aaa
inc
out
xchg
imul
insl
mov
and
push
mov
adc
add
orb
lahf
xor
add
add
push
mov
pop
loop
add
add
hlt
iret
fwait
jne
in
fisubrl
jecxz
fs
jbe
in
ds
pop
leave
xor
addl
dec
mov
add
lret
mov
test
add
push
jne
dec
jnp
icebp
pop
push
inc
fcoms
add
rorl
add
adcb
lret
inc
xchg
mov
inc
cmpl
in
mov
adc
push
imul
adc
mov
les
dec
jg
ja
lods
mov
sahf
adc
les
cld
mov
xchg
mov
inc
mov
jbe
clc
sub
cmpsl
cmp
xor
loopne
dec
test
add
ficoms
pop
sub
add
add
fdivs
push
cld
push
and
add
add
mov
jb
nop
sar
ljmp
add
into
shll
sbbl
sub
les
dec
add
add
lahf
jo
sbb
add
pop
ss
int3
inc
das
rorl
inc
cmp
pop
cmp
xchg
in
iret
mov
loopne
in
xlat
je
sbb
sbb
mov
into
ja
sbb
dec
jb
shlb
add
aas
push
popf
fwait
inc
mov
cmp
push
fs
xchg
inc
jae
mov
sub
add
adc
push
push
adc
jg
dec
jecxz
icebp
xlat
cmp
test
mov
leave
or
jae
mov
jb
jbe
test
imul
add
cmp
aas
add
adc
dec
add
add
shr
data16
sarb
bound
adc
mov
cmpsl
in
pop
nop
cs
mov
and
cmpsb
loopne
xchg
inc
nop
andl
dec
imul
and
das
pop
orl
add
jp
imul
mov
mov
dec
pop
cmpsl
mov
mov
dec
outsb
je
aam
add
add
hlt
jnp
pop
aad
es
fistl
adc
push
cli
cli
jl
lcall
xchg
loop
mov
sbb
mov
insb
add
add
imul
rcrb
sar
lods
outsb
sbb
fisttpll
push
sbb
jmp
repz
in
ret
repnz
add
sahf
test
inc
es
add
add
add
dec
imul
ss
mov
popa
std
scas
push
cmp
pop
mov
mov
test
ficoml
fidivs
mov
mov
jne
popf
and
mov
fiaddl
lds
ljmp
je
adc
test
cmp
mov
cwtl
dec
mov
outsl
mov
push
inc
add
add
jl
andl
dec
negb
jno
stos
add
add
add
scas
adc
and
or
jns
xor
add
sbb
notl
clc
sar
xor
add
jae
jge
setns
xchg
inc
or
fwait
jb
dec
dec
and
sarl
dec
add
add
or
add
add
mov
in
and
fstl
push
or
jae
lret
mov
fadd
ds
add
add
loope
cmp
fcomps
pop
adc
dec
add
add
mov
sbb
mov
adc
mov
ret
or
and
rcl
leave
push
in
ljmp
add
add
stc
xlat
clc
pop
push
pop
in
add
add
and
add
add
adcl
pop
mov
shll
mov
add
adc
or
xchg
mov
aaa
outsb
lea
negl
inc
add
add
add
xor
pop
jnp
pop
mov
xor
jecxz
adc
push
or
add
add
sub
add
add
cltd
xchg
add
cmpsl
mov
lret
inc
mov
jmp
mov
mov
lock
mov
push
cltd
inc
addr16
add
add
push
or
mov
orl
add
xor
nop
fsubs
and
insb
mov
cmp
lahf
cmpsl
xchg
fs
sahf
sub
xchg
movsb
push
scas
cld
pop
leave
mov
sbb
mov
add
add
and
add
add
testb
add
add
add
in
pop
int
xchg
lods
xor
arpl
jg
add
add
add
push
repnz
cmp
jg
xchg
jl
cmp
add
add
std
cmc
call
xor
xorb
inc
pop
and
mov
jecxz
aas
nop
ljmp
mov
add
cli
mov
xchg
mov
lds
mov
add
sbbl
add
add
pushf
ret
inc
aam
lods
xchg
js
push
inc
xor
push
sub
add
add
stos
repz
stc
sbb
pop
xor
icebp
leave
movsl
mov
outsb
and
sbb
xchg
js
and
aaa
js
adc
rcrl
jbe
ror
pop
cmpsb
ret
clc
push
and
add
add
dec
xchg
push
pop
dec
jle
mov
fildl
add
add
xor
mov
sub
add
add
out
lret
jb
ret
fisubl
arpl
inc
dec
xchg
movsl
out
jne
or
jmp
lcall
pop
int3
sbb
enter
add
in
insl
sbb
push
movsb
mov
test
insl
outsl
add
add
fistpll
gs
js
cld
sbb
loope
ds
pop
call
and
add
aam
jo
inc
dec
xor
inc
jge
inc
add
add
jmp
int
add
add
in
push
lret
int
add
add
lahf
iret
cld
sbb
add
sub
add
add
out
inc
dec
mov
mov
mov
add
lea
push
lea
adc
mov
xchg
aaa
cmp
add
add
or
add
add
mov
pop
push
lods
rol
lds
add
xor
fisttpll
xor
aas
test
lcall
mov
add
add
adc
adcl
lods
js
insl
inc
add
add
cmpsl
sbb
xlat
jbe
push
jl
sbb
adc
leave
lds
add
fwait
or
or
add
add
add
xor
std
and
fwait
or
loope
ret
mov
push
xlat
ds
out
lods
mov
lea
aas
push
push
sti
cmp
add
add
das
repnz
add
add
jmp
add
test
inc
add
add
fwait
enter
ljmp
notb
cld
sarb
mov
cmp
pushf
insl
push
jmp
mov
cmp
jl
sti
push
sbb
sbb
jl
inc
push
and
mov
test
add
push
stc
fildll
mov
loop
dec
dec
out
sbb
aad
adc
lock
pop
xchg
into
lcall
loope
arpl
mov
sub
fstps
add
add
fucomp
cmp
mov
mov
mov
or
psadbw
leave
dec
cltd
pop
mov
mov
pushf
inc
add
add
test
lds
lods
mov
add
ficomps
pop
cld
in
lcall
in
loope
rcr
xchg
add
xchg
aas
loopne
push
mov
in
cmc
dec
cmpsl
xor
call
cld
cltd
cwtl
add
add
add
sub
iret
push
js
lea
xor
shl
pop
je
mov
add
mov
pop
in
lods
push
mov
adcb
and
xchg
xor
sbb
add
mov
add
add
and
clc
ret
hlt
sub
pop
addl
add
ds
xchg
add
add
cmp
mov
xchg
lret
xchg
push
jae
jg
aaa
cmp
mov
pop
mov
adc
adc
sub
add
add
push
add
add
add
shll
adc
jae
sbb
jns
mov
add
add
scas
out
daa
loopne
je
sbb
cli
mov
push
add
add
add
lret
aad
mov
lcall
push
push
jae
add
lret
cmp
clc
fwait
orb
push
arpl
jbe
inc
lock
sub
movb
add
std
lret
mulb
add
int
sbb
sti
dec
sahf
or
jns
push
adc
dec
add
add
popf
jmp
mov
add
add
add
add
jno
mov
test
xchg
xchg
das
push
pop
insl
jne
mov
add
add
xor
divl
add
add
mov
push
lret
aam
xchg
inc
ret
mov
hlt
mov
adc
add
add
mov
or
add
add
movsw
sub
add
add
inc
cmp
add
stos
lds
sub
add
scas
stos
add
add
add
cli
lahf
outsl
sti
adc
jge
xchg
push
lock
cmp
mov
insb
mov
jecxz
mov
xchg
lds
mov
add
add
dec
or
add
add
mov
imul
out
sti
inc
mov
sahf
jg
cmp
insb
add
add
xchg
daa
repnz
test
lods
inc
cmpsb
sar
gs
mov
sub
mov
movsb
xor
dec
into
or
add
add
cmp
sub
add
add
pcmpeqw
add
fwait
roll
mov
daa
sbb
negb
fldt
data16
shrl
add
add
add
add
insl
scas
pop
mov
aad
clc
adc
jg
mov
mov
add
add
add
jo
mov
int3
dec
mov
xor
add
or
sub
add
add
mov
loope
xor
dec
test
sub
inc
add
add
mov
xchg
in
outsb
movsb
jb
mov
js
jmp
xchg
outsl
lahf
mov
subl
mov
sub
loop
insb
mov
les
stos
adc
xchg
inc
add
add
sarb
leave
lods
outsb
dec
push
sahf
sub
mov
dec
add
add
lea
add
add
sub
push
lcall
hlt
dec
mov
mov
add
add
test
add
scas
and
icebp
in
lahf
call
mov
in
in
mov
add
fcomi
sbb
add
add
jnp
and
cmp
add
call
dec
mov
pushw
scas
xor
cmp
xchg
test
mov
add
add
sub
add
add
lcall
add
add
push
push
jb
xchg
aad
mov
push
push
push
dec
cs
call
mov
cmc
sub
out
xchg
shll
sub
push
add
daa
xor
fistpll
decb
or
stos
aad
pop
aas
pop
imull
fnstsw
int3
jnp
mov
mov
insl
pop
xchg
nop
fistps
add
sub
mov
inc
add
mov
sub
add
add
xor
add
push
xchg
pop
sbb
mov
mov
es
push
cmp
push
rcl
mov
cmp
cld
inc
add
add
sub
sbb
pop
adc
rol
pusha
add
add
mov
xor
add
add
testl
rcrb
mov
add
dec
push
jmp
xchg
push
jge
mov
addr16
add
add
xchg
inc
les
cld
repnz
loopne
mov
js
cmp
xor
stc
jmp
ss
std
not
insl
pushf
dec
arpl
loopne
mov
pop
std
fistpll
pop
jl
lods
sarb
mov
data16
mov
pop
sub
filds
je
imul
xor
jno
jae
cmpsl
jle
xchg
shr
inc
add
add
jl
mov
dec
nop
stc
jl
and
add
add
jae
das
sarb
addl
mov
add
test
into
mov
push
cmpl
mov
mov
outsl
stos
and
add
not
xchg
adc
push
loopne
inc
lahf
out
lret
add
add
mov
mov
pop
push
inc
sub
sti
push
movsl
ficoml
and
scas
notl
sbb
or
lods
ret
mov
mov
jg
add
add
rcl
xor
sbb
icebp
shl
sbb
jp
outsb
adc
