sub
aaa
sti
popf
ss
rcll
lcall
test
pop
xchg
adc
jmp
lcall
inc
decl
icebp
ja
in
or
lcall
jnp
decl
in
lods
jmp
inc
jl
pushl
mov
sbb
mov
fimuls
mov
dec
movsl
lcall
decl
call
sub
ficompl
mov
aaa
imul
lock
js
mov
call
cmp
dec
mov
dec
push
mov
mov
repz
popf
lcall
dec
sub
mov
push
mov
incl
cmp
inc
dec
ljmp
pop
jmp
out
sti
jb
mov
scas
ss
add
lcall
or
ljmp
mov
int
pop
in
mov
mov
fidivrl
jb
mov
lret
and
add
call
lret
push
or
imul
add
test
imul
cmpsb
pushl
ljmp
aas
lea
or
sbb
mov
sbb
ljmp
incl
pushl
push
fdivs
popa
ljmp
and
aaa
cmpsl
jmp
jae
lcall
pushf
push
sub
ljmp
jns
lock
dec
fildl
or
call
push
xchg
mov
in
push
and
sbb
xchg
xor
popa
incl
add
incl
cmp
call
mov
cmp
popf
cmc
lods
int
inc
lcall
mov
leave
pop
je
mov
shrb
lcall
push
mov
mov
loopne
dec
pop
ljmp
lahf
cmp
test
pop
mov
call
sbb
ljmp
jmp
sar
aas
nop
pop
test
lahf
dec
cmp
fld
incl
jb
call
in
popa
lcall
test
dec
stc
test
cmp
pop
pushl
fstl
lea
call
jmp
decl
repnz
nop
dec
jle
call
incl
call
dec
dec
insl
cmp
int3
inc
ljmp
jmpw
outsl
mov
mov
push
mov
sub
dec
lcall
jmp
out
ss
cmc
push
pop
sar
inc
ljmp
clc
fidivl
xor
ljmp
mov
and
mov
sbb
mov
lret
mov
rcr
iret
ds
mov
cmp
or
pop
dec
add
decl
xor
shlb
sub
out
mov
cmp
or
add
decl
ljmp
mov
lcall
cmpsb
jmp
jge
sub
pushl
loop
loopne
jne
mov
fucomi
fistps
pop
add
lcall
xor
and
pop
mov
xor
pushl
adc
shr
rorl
call
push
push
mov
decl
push
add
jo
fcoms
rcrl
lock
mov
pop
mov
lcall
idivb
or
xor
mull
scas
movsb
ljmp
pushl
mov
testl
push
in
xchg
js
pop
push
ds
mov
std
push
jmp
jmp
jmp
jmp
cmp
mov
test
pop
or
mov
pushf
xchg
scas
lret
mov
decl
xor
rolb
insl
cmp
decw
mov
lcall
incl
daa
incl
lcall
scas
loope
shrb
xchg
call
pop
ja
std
cmp
jge
decl
das
xchg
xchg
cmpsl
fidivs
stos
xor
cwtl
pop
push
push
aas
and
cmp
inc
out
xchg
stc
jecxz
loop
mov
mov
jmp
push
cltd
lret
jbe
je
popf
popl
ss
popf
xor
inc
incl
jns
jns
mov
mov
sub
jmp
decl
mov
mov
stc
stc
xchg
push
daa
aas
jne
lcall
xor
jmp
call
xor
stos
sbb
dec
fs
cmp
lcall
xchg
and
in
inc
incl
pop
aad
sahf
nop
lea
stc
push
decl
mov
fistps
loope
xchg
adc
cmp
xchg
pop
jp
push
std
lret
jbe
into
std
and
adc
incl
jmp
call
lods
lods
add
mov
decl
and
inc
lcall
push
stos
jmp
pop
fiadds
lcall
push
into
rcll
sbb
jb
decb
pop
call
jp
mov
sbb
push
incl
ljmp
inc
xchg
jmp
lcall
xchg
xchg
out
mov
mov
incl
inc
pushl
repnz
xor
mov
cmp
lcall
cmc
enter
inc
ljmp
leave
push
xchg
inc
dec
adc
decl
inc
lcall
int3
fidivl
into
pop
dec
lret
mov
mov
cmp
pop
mov
jns
nop
into
and
test
pop
out
cmpsb
jmp
lcall
repnz
call
sbb
mov
dec
xor
or
jg
cmp
decw
jb
dec
out
insl
adc
jb
je
lcall
or
inc
decl
cmp
aad
jmp
incl
jge
ljmp
pushl
and
imul
dec
jecxz
jge
dec
inc
incl
add
sub
mov
shrb
test
jo
dec
cmp
jmp
dec
decb
es
incl
jmp
call
and
push
lcall
cmp
cmp
call
xor
xor
sbb
mov
pushl
and
push
mov
adc
cmpsb
incl
ror
out
in
xchg
sub
call
cmc
pop
decl
add
inc
aas
xchg
scas
push
push
mov
lock
in
cwtl
add
lcall
mov
cmpsb
jmp
xchg
jge
xlat
pop
mov
cwtl
scas
je
xor
test
jne
and
decb
pushl
sub
jmp
cmc
push
push
mov
ret
ljmp
jmp
jmp
fwait
sub
shll
dec
jmp
pop
data16
std
adc
xchg
cld
enter
jmp
adc
cld
shlb
xor
dec
adc
jb
xor
pushl
movsl
lcall
pop
filds
cmp
imul
sbb
cmpsl
call
mov
xor
mov
pop
jge
jmp
pop
add
sub
sbb
sub
cli
aam
fmull
lahf
inc
push
dec
mov
xor
js
sarb
decl
int3
scas
cs
loope
jge
jmp
cli
cmp
lcall
lcall
hlt
sarl
push
cmp
pop
stc
and
loope
jecxz
fwait
out
movsb
lcall
insb
outsl
cmp
and
pusha
lcall
sub
jae
dec
aas
aas
addps
push
mov
ss
sar
into
push
enter
lret
inc
pushl
adc
add
call
sub
jae
or
dec
enter
incl
sbb
pushl
and
js
and
popf
pushl
iret
sub
push
add
fildll
fstps
incl
ror
and
and
adc
push
mov
lock
call
jno
decl
dec
outsb
sar
cmpsl
decl
fbld
adc
mov
dec
into
or
pop
mov
sti
and
pusha
pushl
mov
cs
dec
lods
call
mov
push
cmp
loopne
ja
push
pushf
pushf
and
jl
out
jge
outsl
aad
jg
jmp
push
imul
out
jmpw
aam
adc
dec
jae
ljmp
incl
incl
call
mov
jp
jmp
mov
ljmp
push
lahf
int
push
fldenv
call
ljmp
xchg
adc
cvtpi2ps
add
lcall
testl
adc
in
inc
jmp
pop
cmp
call
mov
sar
ljmp
test
mov
call
ljmp
inc
and
dec
mov
mov
lret
push
jp
sbb
push
mov
sbb
incl
push
daa
jg
imul
ljmp
nop
stos
add
decl
ret
push
cltd
mov
aam
inc
decl
mov
adc
add
ljmp
leave
std
xchg
pop
insb
push
enter
movd
test
jl
pop
decl
sahf
nop
pop
dec
cwtl
push
das
mov
cwtl
xor
decl
xchg
xor
test
das
ficoms
jmp
incl
inc
ljmp
xor
mov
xchg
sbb
shl
decl
mov
adc
sar
lcall
idivb
pop
adc
lock
lcall
call
enter
inc
pushl
adc
mov
call
jns
test
add
cmp
adc
pushl
ljmp
cmc
sub
vorps
xor
mov
ljmp
incl
jns
call
in
shrb
cmp
mov
xor
addr16
push
loope
jp
int3
movsl
jmp
cltd
dec
cwtl
clc
cmp
lods
xchg
fmul
movsl
lcall
add
push
add
movsb
jmp
out
dec
decl
jbe
dec
dec
in
stos
add
incl
inc
ljmp
sbb
cmp
dec
imul
lods
and
fwait
movsl
jmp
pop
and
jae
sub
pop
dec
int3
es
cmp
sar
or
add
fisubrl
call
adc
lahf
jecxz
mov
sub
push
dec
daa
incl
idivl
cmp
int3
or
sub
push
insl
lods
int
push
call
add
push
adc
mov
push
mov
adc
push
into
outsl
cmp
mov
jmp
pop
mov
pop
loopne
dec
jno
ljmpw
ds
lcall
cwtl
cmp
in
push
leave
xchg
jbe
or
or
mov
aad
loop
xchg
xor
jmp
test
mov
adc
aaa
insl
cmp
loope
enter
lcall
inc
pushl
enter
jmp
add
lcall
lcall
xchg
sbb
add
xor
sti
test
dec
pusha
incl
push
and
hlt
sbb
cmp
std
popf
out
adc
cwtl
fdivrs
pushl
decl
xchg
xchg
inc
call
mov
call
add
pushl
ss
add
cmp
jmp
lcall
call
jg
nop
stos
sar
cmp
jmp
fbld
ljmp
jle
cmp
lcall
iret
mov
sar
mov
mov
pusha
pushl
int
scas
test
hlt
jmp
adc
jno
add
js
adc
pop
fdivl
in
test
mov
int3
or
lcall
outsb
mov
fstpl
sar
pusha
ljmp
inc
call
dec
add
in
or
in
aas
addr16
push
fstpl
sub
and
pop
es
mov
cmc
jg
lcall
cmp
xor
in
movsb
jmp
xchg
inc
jmp
call
add
call
cltd
and
mov
jg
xlat
dec
cmc
mov
scas
push
xchg
xchg
and
ljmp
mov
lcall
lret
cmp
int3
sti
in
pop
add
call
mov
inc
push
mov
push
cmp
out
aas
pop
cmp
push
test
lea
dec
pop
jne
call
test
stos
mov
mov
divb
imul
cltd
stc
int3
insl
test
fdivrl
cmp
std
fadd
mov
xor
sar
lock
mov
ss
int3
mov
add
mov
push
xchg
and
mov
sub
xor
call
and
jne
dec
push
call
test
je
movzbl
jmp
mov
add
mov
shr
push
push
addl
call
push
call
leave
ret
push
mov
cld
push
push
mov
lods
xor
mov
sub
add
mov
add
stos
xor
pop
pop
leave
ret
jmp
jmp
jmp
decl
push
sti
xchg
vmovsd
xchg
pop
jns
push
popf
aad
mov
jmp
decl
inc
pushl
daa
jmp
call
imulb
cli
xor
push
mov
or
rorl
and
add
incl
and
jp
pushl
sahf
adc
push
sub
movsl
lcall
inc
fmul
inc
ljmp
decl
push
ret
add
add
mov
inc
jmp
mov
mov
lcall
call
jmp
add
mov
mov
add
decl
mov
ficoms
push
or
push
push
push
ret
add
notb
mov
jmp
ljmp
or
jmp
add
add
cmc
aad
call
dec
push
or
pushf
and
std
mov
adc
add
mov
inc
lcall
jb
add
addr16
add
xchg
aaa
je
popf
sbb
call
add
add
xchg
add
rorb
aas
psubb
incl
jb
decl
push
mov
or
call
in
sbb
add
test
push
movsb
jmp
add
outsl
add
pushl
mov
out
mov
stc
pop
ss
lods
inc
call
pop
mov
decl
dec
mov
jns
incl
aad
mov
push
cmp
add
xor
pop
push
out
jmp
push
add
incl
jmp
ljmp
add
call
adc
fwait
testl
inc
out
xchg
adc
adc
ljmp
jmp
add
cmp
ud2
fildll
lret
pushl
incl
push
movsl
cli
cmp
push
call
cmp
fidivs
loope
fsubl
arpl
fwait
mov
call
add
sbb
call
ljmp
daa
push
test
imul
and
xchg
xor
lcall
mov
test
decl
int
decl
sbb
iret
adc
jne
lcall
add
jmp
lock
add
scas
add
sti
incl
add
mov
add
mov
mov
fcomi
cltd
ret
jno
jmp
lods
adc
and
mov
lcall
xchg
jo
pop
in
sti
lahf
mov
cmp
xchg
stc
ret
and
arpl
clc
sbb
push
int
pushl
ficoms
mov
dec
jecxz
pop
or
dec
fbstp
push
jmp
repz
pushl
sub
and
jp
insb
push
je
xchg
xlat
fwait
imul
xchg
out
inc
mov
push
js
add
jp
test
je
cmpsl
call
das
ljmp
sbb
mov
push
jmp
lock
cli
movsb
decl
lods
or
nop
cmpsb
incl
call
rorl
lcall
stos
xchg
inc
add
add
add
sub
jmp
add
push
add
das
push
add
popf
addr16
call
dec
sar
ljmp
call
jmp
add
add
pushl
sub
inc
jmp
sub
or
xor
push
outsl
and
lcall
stos
cld
and
inc
call
sub
dec
int3
cmp
jmp
mov
mov
adc
fnsave
jmp
cmpsl
lcall
push
mov
popf
cmpsb
jmp
dec
shl
inc
lcall
lcall
lcall
iret
and
add
or
mov
pushl
xchg
pop
js
and
stos
outsb
add
aas
loope
pop
pop
mov
fisttpl
loop
jmp
pop
repnz
cmp
and
xor
cmpsb
jmp
int3
mov
ljmp
cmp
pop
mov
loope
add
outsl
xchg
xor
dec
test
ljmp
inc
incl
and
push
inc
call
cli
inc
call
pushf
jle
jmp
call
cmp
xor
jbe
xchg
adc
jnp
cld
cmp
xchg
sbb
and
push
jae
push
fmull
enter
and
adc
lods
cmc
into
mov
fstpl
clc
cmp
arpl
test
leave
sti
mov
ds
push
jmp
test
ljmp
and
sti
mov
ljmp
lcall
jmp
incl
je
out
cwtl
cmp
adc
cmpsb
dec
shll
cld
adc
decl
sub
jge
and
dec
mov
pop
inc
lcall
loope
shrl
stc
pop
adc
or
jmp
fnstenv
scas
push
je
mov
jmp
mov
fsubr
jmp
in
ljmp
fwait
mov
vxorps
mov
inc
fadds
pop
jecxz
pop
inc
lcall
incl
push
and
into
imul
lcall
pop
push
jo
jp
and
lock
decl
mov
hlt
push
fsubrl
into
outsb
inc
add
add
popa
decl
ss
sbb
inc
add
add
call
pushl
adc
mov
rorb
lock
decl
inc
lcall
xor
jmp
ljmp
loope
xor
mov
clc
imul
clc
imul
push
push
ret
add
add
xchg
push
aam
inc
decl
jp
call
insl
sub
cmp
jbe
call
scas
mov
fisttpl
inc
mov
decl
jne
jmp
dec
jb
ja
jge
decl
mov
fadds
lcall
fwait
das
jmp
push
push
ret
add
cs
decl
outsb
loopne
fcmovu
and
push
cmp
pop
jmp
dec
nop
mov
out
push
insl
sub
ljmp
lods
ret
decl
jmp
movsb
jmp
incl
push
jge
call
inc
incl
inc
decl
adc
pop
pushl
add
mov
jecxz
jbe
push
push
mov
xchg
pop
mov
ret
sub
jno
cmp
push
mov
mov
rcrb
jmp
jmp
add
dec
push
out
or
xchg
fistpll
clc
cmp
in
pushf
mov
sub
xchg
adc
add
call
inc
dec
iret
scas
test
sbb
push
call
push
ret
add
addr16
cld
lea
rdseed
popf
cltd
popf
test
mov
and
mov
xchg
test
lcall
mov
inc
dec
lods
or
frstor
ffreep
inc
pushl
and
fcompl
pop
repnz
dec
or
fwait
and
cmp
push
jmp
add
pusha
dec
cmc
inc
pushl
and
adc
incl
xchg
sar
mov
pushl
ljmp
call
lock
push
ret
or
add
pop
cld
sbb
mov
call
int
mov
jmp
xor
or
test
fs
mov
ljmp
incl
decl
pop
mov
push
jne
jmp
add
fimull
xor
cwtl
fadd
incl
sub
cmp
sub
out
cwtl
loop
xchg
imul
xor
decl
pusha
jmp
lock
mov
add
push
cwtl
and
fwait
ja
ljmp
mov
mov
or
stc
adc
stos
lea
jae
fists
fs
cmp
xor
xchg
jp
xchg
jmp
pusha
sti
jno
adc
xchg
push
jmp
push
xor
adc
pushl
push
roll
data16
inc
call
out
into
inc
jmp
xchg
fs
int
aaa
xchg
inc
out
insb
cmp
out
arpl
imul
dec
dec
loop
in
adc
popa
push
ret
mov
or
mov
ljmp
repz
jnp
cmp
ret
decl
daa
decl
pushl
ljmp
xor
add
popa
add
inc
das
adc
push
ret
add
mov
insl
cld
cltd
mov
pushl
decl
jae
in
rclb
push
cmp
ficomps
pop
push
ret
add
add
pop
lock
push
sub
sub
testl
or
and
incl
jmp
add
jl
decl
pop
out
add
ljmp
ffreep
jg
sub
loop
jle
pushw
fistps
int3
pop
sub
push
xchg
and
mov
push
shrb
cld
pop
mov
mov
incl
incl
add
incl
incl
push
fsubs
jbe
lea
and
xchg
mov
add
jmp
mov
decl
add
xor
or
add
popa
jmp
sbb
jb
jp
ljmp
dec
jae
incl
dec
mov
lods
std
stos
lret
jmp
add
lock
fistpll
call
filds
mov
jne
call
lcall
mov
pop
dec
sahf
cmp
jb
push
jg
add
jmp
std
aaa
inc
mov
or
mov
sub
call
add
fidivl
out
pop
xor
mov
sub
ljmp
cmp
fstl
test
mov
mov
das
xor
pop
outsb
jo
mov
lcall
push
mov
mov
imul
idivb
sub
push
pop
push
fimuls
jle
aas
popf
push
js
xchg
jp
and
adc
xchg
pop
inc
decl
add
cs
fistps
cwtl
inc
js
aam
clc
inc
dec
mov
outsl
and
inc
cmp
xchg
fwait
xor
cs
aas
dec
mov
or
leave
decl
xor
dec
aam
jl
mov
outsb
push
incl
push
mov
in
shlb
decl
sub
pushl
mov
test
loopne
ret
mov
sbb
incl
jle
mov
call
adc
jo
mov
xchg
arpl
cmp
jmp
incl
cmp
cmp
pop
lock
call
jbe
adc
lcall
incl
jmp
in
insl
add
addr16
int3
cltd
sar
ficompl
repnz
dec
repnz
stc
testl
dec
xchg
dec
jl
incl
fistpll
jno
cmp
lcall
pushl
ljmp
jmp
xor
add
add
lcall
incl
arpl
ret
sub
add
incl
add
call
xchg
cmp
inc
sub
addr16
add
add
add
push
inc
incl
sub
inc
jmp
sarl
dec
sbb
sub
jg
mov
les
add
add
sub
add
stc
pop
cltd
add
fucomip
mov
pop
lret
fisubrl
daa
decl
xchg
inc
decl
divl
movsl
cmp
ss
inc
jmp
call
push
sti
outsl
fildll
xchg
jb
dec
lock
insl
sub
aad
daa
jmp
cmp
push
mov
adc
stc
loopne
sbb
loopne
adc
pop
je
push
add
decl
shrb
or
call
test
xor
call
and
add
jmp
incl
pushl
add
push
fmuls
xor
push
ret
lock
mov
xlat
lahf
pusha
call
mov
jne
add
add
xor
and
cli
lahf
into
call
out
add
mov
add
outsb
jb
ss
movsb
jmp
cmpsl
decl
sti
fcmovu
push
or
add
mov
mov
sbb
dec
pop
sbb
testl
pushf
test
dec
mov
ljmp
fisubrs
mov
add
jmp
add
pushl
and
mov
add
dec
decl
mov
mov
imul
cmp
icebp
sub
push
jmp
xchg
add
outsl
add
adc
inc
call
mov
aad
and
jmp
mov
xor
inc
ljmp
aas
add
jmp
jmp
incl
pushl
mov
or
sti
ljmp
jmp
es
cmp
loop
fcmovbe
mov
imul
aaa
xor
add
add
jl
call
and
inc
decl
or
lea
jle
cmp
fcoms
jle
mov
mov
out
inc
jns
jmp
out
ret
or
aam
shll
ja
push
sbb
pushl
dec
pusha
call
out
imul
ds
mov
std
and
stos
and
popf
pop
jnp
pushf
mov
loope
mov
ds
lock
call
incl
sahf
pop
rolb
clc
cmp
mov
lcall
jno
add
jp
mov
jmp
add
add
add
aas
aam
inc
call
push
mov
or
decl
iret
imul
aad
decl
fistl
out
sbb
inc
inc
jmp
in
inc
jmp
popf
add
add
add
gs
cld
out
cmp
decl
decl
sbb
or
jmp
lret
mov
pop
je
fwait
sub
push
jb
jns
incl
mov
pusha
call
mov
mov
sbb
dec
push
jmp
mov
lea
scas
pop
inc
decl
jmp
jmp
mov
loop
jb
dec
sar
jp
sar
pushl
lcall
mov
inc
ljmp
push
adc
jl
jo
cmp
call
push
and
add
jb
add
add
rcr
xchg
lahf
out
xor
call
in
sbb
decl
dec
jmp
inc
jmp
jle
loope
sbb
pushl
mov
jae
add
jmp
mov
sub
pop
aas
mov
inc
inc
incl
in
or
pop
idivb
cmpsb
call
mov
sub
incl
fbstp
sti
incl
das
add
add
add
cmp
jmp
jns
mov
incl
mov
cmc
sub
inc
pushl
mov
movsb
fnstsw
test
arpl
rcrl
inc
cmp
sbb
test
sti
out
cmpsl
pushl
out
imul
cmp
decl
out
stos
pop
pop
pushl
call
push
mov
jmp
add
jmp
xor
push
xchg
lahf
ja
dec
sbb
add
add
add
outsl
mov
sub
xor
cwtl
add
notl
je
pushf
jmp
ljmp
pushf
movsl
lcall
cltd
call
dec
test
repz
pop
push
int
jmp
rcl
mov
and
popa
mov
sar
sbb
jae
mov
call
mov
iret
sar
fwait
and
dec
ret
popf
cmp
sbb
jp
frstor
jbe
pop
sbb
cmp
xchg
cmp
rclb
pop
ljmp
cmp
jmp
leave
cmp
push
adc
jnp
push
mov
lcall
xor
fdivrl
jnp
decl
mov
decl
test
lock
add
add
and
xor
lcall
aam
add
jmp
daa
jmp
mov
cld
out
or
in
in
or
leave
pop
ja
fadd
pushl
or
stos
fs
clc
test
jo
adc
dec
lret
mov
outsb
mov
cmp
call
sub
dec
insl
pop
jb
imul
mov
scas
or
add
xchg
add
outsl
int
lcall
pusha
decl
add
ljmp
lret
lcall
adc
add
xor
add
add
cmc
mov
mov
adc
jge
pushl
cmp
xor
icebp
inc
incl
mov
cmp
mov
jmp
inc
ljmp
adc
std
add
jmp
jnp
sbb
sub
sub
ja
jbe
xor
jmp
add
add
add
mov
push
std
push
sbb
sub
lcall
loop
add
in
lods
ja
ficoms
pop
stos
outsl
test
arpl
mull
jmp
call
dec
inc
incl
movsl
aas
ret
decl
fcomi
mov
push
and
movsb
pushl
call
imul
out
movsl
fstpt
jne
jmp
cmpsl
mov
xchg
decl
sbb
xchg
add
incl
dec
into
xchg
sub
jb
imul
dec
cmp
popa
incl
push
pop
add
add
inc
lcall
pop
incl
mov
inc
add
add
add
decl
cmp
cltd
push
dec
jnp
add
push
jae
mov
inc
incl
pushl
decl
dec
into
xchg
sub
jmp
jmp
jmp
jns
sub
call
jmp
jmp
jmp
cmp
xor
pushl
dec
dec
cli
aaa
sub
inc
incl
inc
mov
cs
lcall
lcall
push
addr16
cmpsl
lcall
aaa
jle
jmp
incl
pushl
mov
lea
icebp
jg
decl
dec
push
out
cmpsl
call
outsb
sub
fwait
xlat
cli
cmp
cwtl
mov
push
xor
ret
incl
out
jbe
sar
decl
pop
xor
insl
xchg
scas
aaa
ljmp
insb
into
cmpsb
pushl
mov
lcall
pop
ljmp
add
cmp
incl
ljmp
mov
push
jnp
mov
call
test
push
mov
mov
inc
add
add
shr
hlt
nop
sbb
adc
movsb
inc
ljmp
sbb
jmp
lcall
ss
push
sbb
shr
cmp
add
pop
add
add
add
ljmp
popf
enter
divb
add
jmp
xor
lock
push
inc
ljmp
fiadds
pushl
mov
cmp
mov
ljmp
push
ret
sub
add
add
or
mov
call
sbb
sbb
in
or
repnz
stc
dec
add
pop
dec
lea
sub
js
lret
xor
mov
fwait
lcall
imul
add
popf
add
or
icebp
cmp
call
aad
call
pop
roll
mov
jle
ss
out
int
mov
push
inc
add
add
add
out
daa
jmp
inc
cmp
aad
mov
rorb
add
add
add
decl
sbb
sar
mov
clc
dec
aad
lcall
test
mov
jmp
mov
pushl
sub
dec
cmp
pushl
scas
lcall
ss
sub
cmp
loopne
inc
inc
decl
inc
inc
add
pop
add
addr16
cmp
lea
xchg
hlt
sub
loop
nop
ds
mov
mov
in
call
cmpsl
pushl
das
sub
lret
xchg
pop
adc
call
aad
sbb
inc
call
stc
sub
stos
rol
inc
ljmp
es
jge
ss
lcall
xchg
xor
xor
push
sbb
jmp
jmp
mov
xchg
xchg
fidivs
es
mov
sti
mov
lcall
lcall
pop
test
pop
stc
inc
inc
call
inc
jmp
cltd
je
pushl
cmp
outsl
rol
call
jns
mov
sbb
stos
jmp
sti
add
add
push
inc
jmp
jnp
mov
or
pop
rcrb
loope
filds
jmp
sub
push
popa
jmp
ljmp
fnsave
inc
lcall
hlt
mov
int
jmp
lcall
push
add
jmp
add
decl
and
arpl
push
mov
adc
pusha
fcoml
xchg
mov
repz
loope
pop
testb
xchg
mov
loopne
call
adc
adc
push
dec
add
add
mov
jmp
add
loopne
test
mov
mov
incl
clc
xor
hlt
xor
pushl
insb
push
lcall
in
jmp
ljmp
ljmp
push
pop
jmp
pop
or
add
add
movsb
mov
loope
mov
nop
in
call
ret
in
aad
jno
sti
mov
jnp
pushl
sub
sbb
push
pushf
mov
loopne
adc
mov
scas
pop
jnp
arpl
fwait
clc
cmp
fcompl
test
push
dec
jo
stos
fucomi
and
fwait
int
jmp
inc
ljmp
cwtl
mov
lcall
jmp
push
pusha
pushl
pop
add
jmp
ljmp
xchg
add
js
decl
dec
jne
out
in
adc
ret
inc
jge
out
and
lahf
incl
xchg
cld
fldt
and
dec
loope
fmuls
jb
imul
mov
pushl
jg
push
adc
xor
pushl
aas
icebp
mov
repz
add
lcall
mov
add
push
ret
cwtl
test
cmp
xchg
daa
incl
loope
jg
mov
pop
shr
sub
dec
callw
jmp
pushl
pushl
fnstsw
xor
or
mov
and
inc
jmp
in
push
fsts
jmp
add
popf
sti
mov
aad
call
repz
cli
mov
xchg
mov
mov
mov
sbb
fisubrs
jmp
jmp
jmp
push
add
add
mov
add
pushl
and
sub
incl
mov
fdivr
fldt
cmp
xchg
ss
dec
cmp
lcall
arpl
jno
call
call
call
add
add
scas
add
or
insl
nop
ja
add
add
js
add
add
mov
fmulp
xor
fadds
in
xor
push
push
pushl
ja
pushf
je
incl
std
cmp
jmp
xchg
adc
incb
cmp
inc
call
dec
popa
jmp
inc
cmp
call
mov
jmp
pushl
decw
xchg
mov
jmp
and
sbb
pop
jae
dec
mov
decl
pop
repz
shlb
sub
push
ret
or
add
sub
call
call
shrl
or
in
lods
das
ljmp
pusha
ljmp
stos
or
inc
jmp
jl
inc
mov
xor
adc
jmp
push
lock
popa
incl
sar
incl
lcall
mov
jo
ret
ljmp
adc
jle
xor
jbe
push
add
std
or
incb
xchg
sbb
test
pop
jne
add
add
lcall
jb
rcrl
rcr
ja
jmp
cs
jne
insb
jmp
mov
sar
xchg
mov
xor
sub
lcall
aam
mov
call
xor
cmp
imul
pushl
or
jl
int
call
inc
inc
incl
xlat
push
sbb
xchg
test
push
sar
inc
jmp
out
cs
aas
popa
dec
in
pop
incl
dec
lods
mov
out
sar
push
lret
out
loopne
pop
enter
xchg
pop
xchg
xchg
aad
xchg
sar
push
cltd
sbb
shr
adc
add
jp
cmp
in
sbb
pushl
inc
jmp
lret
decl
add
call
jge
jmp
aaa
and
mov
mov
in
pop
xor
xchg
jg
lods
ds
nop
jns
incl
lcall
pushf
xchg
sbb
je
aas
add
decl
cmp
testl
sbb
cmp
cmp
loope
repnz
inc
fdivrs
incl
inc
jmp
js
pushl
jmp
ljmp
decb
inc
jmp
out
fidivrl
adc
decl
outsb
pop
movsb
jmp
xor
jns
js
sbb
lcall
jb
jmp
ljmp
std
push
mov
call
cmp
aam
lcall
pop
cmp
mov
mov
dec
mov
push
rcrl
int3
pop
pop
sbb
mov
push
cmp
xchg
inc
add
add
or
and
adc
incl
ds
dec
mov
fdivl
ljmp
sbb
cltd
add
call
in
call
imul
sbb
hlt
mov
jb
lret
pusha
call
push
sar
and
mov
test
add
add
outsl
add
and
sbb
lcall
adc
popa
incl
push
jmp
mov
add
call
out
jo
fs
jmp
ljmp
ret
call
js
mov
sbb
mov
xchg
fwait
pop
pop
dec
shll
pop
ljmp
shlb
out
push
call
clc
pop
lret
aas
stos
mov
add
add
add
add
cmc
pop
gs
add
incl
cld
popf
pop
stos
psubb
mov
add
add
outsl
mov
test
cmp
jp
enter
push
and
dec
xchg
mov
mov
test
in
inc
jmp
dec
enter
mov
out
lods
fcmovne
out
push
cld
sbb
push
jmp
add
scas
push
fdivrl
das
shll
sbb
mov
fistps
xchg
fistl
inc
jmp
inc
call
mov
sub
dec
mov
fcoms
add
add
ficoms
pushl
insb
dec
inc
pushl
cmpsl
decl
inc
call
adc
push
xchg
add
lcall
jmp
call
jmp
dec
and
adc
pop
cmp
push
mov
call
push
ret
add
mov
in
xor
incl
inc
pushl
cmp
pop
push
ret
mov
add
push
incl
decl
cmp
lret
call
push
movsb
pushl
ficoms
jmp
decl
mov
push
imulb
cmp
popa
decl
cli
adc
hlt
lods
pushf
jge
pop
fnsave
test
ss
add
lcall
ljmp
stos
mov
test
je
repz
mov
pop
mov
jmp
jne
pop
push
mov
pushl
mov
stos
notrack
sbb
loope
ret
fsubl
pushl
cmp
jne
jmp
add
pop
sub
cmpsl
decl
aad
cli
int
into
add
pushl
lret
jmp
jmp
js
jmp
call
pushl
repnz
loope
xchg
lret
call
hlt
stc
jg
decl
jb
inc
jmp
push
in
outsb
call
in
lcall
mov
lods
dec
lods
push
mov
ds
fdiv
xchg
pop
pop
scas
lea
incl
adc
fnstsw
mov
push
divb
mov
ljmp
lcall
xchg
jle
test
mov
sbb
movsl
decl
lea
lcall
js
out
cmp
mov
jns
add
mov
add
ljmp
test
add
dec
inc
add
cmp
jb
call
cmp
jno
test
movsb
ds
cmc
dec
fidivl
mulb
icebp
decb
out
cld
stc
mov
jno
ja
fistps
clc
add
lcall
lahf
push
incw
and
int3
jl
stos
roll
inc
pushl
sub
sub
cmp
loop
lret
pop
fsub
incl
lret
push
scas
jb
call
push
ret
outsl
add
add
popf
cmp
jmp
jns
ljmp
pop
push
jne
fldl
call
pop
add
add
pop
mov
add
cmp
push
jmp
add
add
or
mov
jmp
add
pop
add
add
incl
jmp
pushl
and
inc
stc
stc
ljmp
mov
aaa
out
imul
mov
std
cmp
ljmp
ljmp
mov
sub
xchg
pop
xor
mov
inc
lcall
hlt
cmp
xchg
fimull
jmp
rcr
jecxz
jg
and
xor
hlt
pop
xor
xchg
add
jmp
cld
push
ret
pop
add
mov
sub
adc
mov
jg
jmp
add
add
mov
mov
xorb
add
pop
add
xlat
adc
xchg
scas
movsl
jmp
fimuls
xor
jmp
add
add
add
pushf
pop
inc
incl
mov
sbb
insb
into
jge
add
sbb
hlt
dec
js
hlt
xchg
push
push
and
mov
in
push
add
fdivs
jle
incl
dec
push
mov
fidivs
loopne
int
incl
pop
fdivs
es
frstor
ret
movsb
call
movsl
lcall
push
sbb
or
jmp
add
add
loopne
ds
sbb
incl
pushl
jmp
call
mov
lcall
clc
lods
popf
pop
dec
mov
and
scas
or
xchg
jmp
add
lock
or
mov
inc
ljmp
in
faddl
mov
and
mov
shr
and
add
jp
mov
daa
pushl
pop
cmc
je
mov
add
pop
inc
add
add
jl
dec
lahf
mov
pop
inc
ljmp
aad
aad
out
pop
leave
dec
mov
lcall
cmpsl
sti
fmull
call
push
ret
add
mov
jp
and
jle
shl
jmp
add
add
mov
mov
push
xchg
or
pushl
jno
cmp
rclb
ljmp
repnz
das
in
sar
mov
jmp
ljmp
push
xchg
test
jmp
popa
decl
fbld
jnp
push
inc
add
add
add
add
dec
add
incl
and
cmp
ds
cmc
call
daa
mov
roll
out
jmp
pushl
push
decl
decl
decl
cmpsl
mov
inc
incl
movsl
incl
adc
cmp
and
out
xor
incl
jo
dec
lahf
jmp
lcallw
cmp
gs
incl
pop
enter
jg
insl
mov
pop
sbb
jmp
add
add
nop
sar
lcall
in
add
incl
incl
mov
ljmp
sar
ldmxcsr
lea
rorb
dec
imul
or
jae
fiaddl
jbe
ljmp
decl
push
pop
pop
push
sbb
popa
jmp
add
or
add
dec
outsl
sbb
jne
or
stc
sbb
pushl
cmp
xchg
pusha
inc
call
add
add
mov
or
add
dec
push
pushl
aam
enter
xor
cmp
add
jmp
add
pop
sub
es
js
aaa
push
add
jmp
mov
fdivr
incl
add
add
popf
xor
inc
incl
loopne
int
inc
pushl
repz
jmp
jmp
in
arpl
sub
repz
mov
cltd
xchg
push
push
jmp
sbb
pop
jp
out
sti
inc
pushl
mov
mov
jmp
add
outsl
add
sbb
lcall
adc
inc
lcall
sbb
jmp
add
mov
ljmp
xor
call
loope
pop
mov
mov
push
jmp
mov
mov
xchg
popf
ds
fwait
mov
sub
test
jmp
add
add
inc
out
test
jle
xor
jp
mov
call
mov
cmp
push
jmp
add
lcall
call
xchg
inc
aas
or
fstpl
inc
push
cmp
ja
jmp
fsubrs
sub
add
enter
add
add
add
bnd
sti
cmp
pop
mov
xchg
decw
xchg
push
lret
xor
ljmp
repnz
cmpsb
jmp
ljmp
jne
jmp
add
add
lcall
ret
mov
adc
das
sbb
xchg
ljmp
dec
xor
fstps
adc
lods
sbb
add
mov
add
out
decl
fwait
add
lcall
pushl
lcall
push
xchg
leave
add
decl
out
dec
adc
inc
stc
sub
add
incl
and
jmp
popf
add
add
int3
stc
add
cli
lcall
incl
lcall
iret
rolb
push
and
dec
xor
add
call
arpl
movsl
call
mov
pusha
push
ret
add
mov
inc
pushl
in
addr16
mov
iret
in
cmc
sub
pushl
lcall
jmp
ljmp
divb
inc
lcall
test
fmuls
int3
add
decl
add
cld
cli
out
jo
mov
ss
pop
xor
mov
cmovg
pusha
call
xor
pop
dec
cs
jo
push
rorl
stos
push
decl
and
add
lods
repnz
add
in
sub
incl
jmp
jge
int
fbstp
fisubl
stos
inc
ljmp
mov
add
jmp
add
push
pop
clc
sbb
int3
mov
pop
mov
add
lcall
pushf
int3
adc
push
push
push
call
daa
jmp
cmp
lods
and
inc
pushl
out
inc
jmp
incl
mov
incl
inc
ljmp
enter
lock
mov
jo
jmp
out
cmp
inc
sbb
mov
add
adc
pushl
xchg
imul
add
decl
add
or
or
add
cmc
push
je
xchg
jmp
fisubrl
sti
nop
in
dec
xor
scas
push
cmp
outsl
jne
sahf
adc
lcall
push
sub
ja
jne
ljmp
out
jns
cli
imul
fs
dec
mov
insl
jae
inc
decl
mov
ret
dec
or
dec
adc
call
scas
pushl
ljmp
cmp
jg
inc
cld
and
sub
call
mov
decl
add
call
rclb
push
mov
push
ret
lock
incl
call
sbb
jl
mov
lods
rcr
mov
xchg
xchg
cmp
and
dec
cmp
cmp
test
jmp
add
jb
jbe
loop
xchg
add
mov
dec
mov
jmp
xor
sti
addr16
pushl
ljmp
fcoms
fbld
add
add
popf
add
movsb
call
call
in
xchg
aas
add
and
or
loop
cld
push
add
ljmp
push
stos
xor
pop
lret
sar
mov
xchg
out
mov
pop
lods
mov
mov
sub
jae
sarl
dec
je
mov
je
mov
sub
shr
push
add
mov
add
add
pop
into
adc
das
add
decl
push
cmp
jne
jmp
and
and
loop
call
in
add
ret
add
sub
loope
xor
sub
cmp
cmp
call
push
outsb
insb
jbe
call
mov
inc
jmp
call
es
jmp
inc
incl
ljmp
mov
inc
inc
in
lret
lcall
or
cmpsb
jmp
jmp
lcall
mov
jns
adc
jbe
pushl
idiv
shrb
ljmp
pop
sti
xlat
inc
incl
call
adc
dec
mov
cmp
nop
cmp
out
sbb
push
arpl
push
pushf
sub
insl
pushf
jp
pushf
cmp
pop
push
lock
test
call
adc
mov
call
jmp
add
mov
xchg
aas
pop
cmp
imul
sar
decl
pop
lea
sbb
mov
jne
push
or
pop
cmp
decl
outsl
xlat
in
ret
sti
or
popf
push
adc
call
pop
ret
mov
pop
jb
jmp
mov
ljmp
pop
in
or
lock
popf
ja
cmp
pop
jmp
fnstenv
sub
mov
mov
sub
dec
push
add
jmp
add
and
sar
rorb
outsb
mov
gs
ret
add
jg
mov
push
add
faddp
ljmp
inc
jns
pop
call
clc
mov
movsl
lcall
repnz
jne
nop
cli
or
mov
or
decl
lods
mov
int
push
jmp
addr16
add
sar
jo
and
popl
lcall
loop
and
repnz
ljmp
xor
xchg
popf
add
incl
xor
repz
add
add
jg
incl
add
sar
cmp
aam
pop
outsb
lods
sar
jne
jmp
add
push
cmpsb
call
and
mov
cmp
cmp
xchg
push
push
jmp
add
add
add
shrb
and
inc
mov
mov
mull
test
in
mov
or
aas
pusha
call
lcall
je
dec
pop
jno
cmp
xchg
mov
lret
jge
incl
mov
lahf
rcr
push
pusha
jmp
mov
lcall
mov
inc
incl
out
jecxz
push
sub
iret
loopne
lcall
sbb
fimull
or
int3
icebp
adc
ja
adc
outsb
jo
inc
out
scas
out
movsb
lcall
out
sbb
or
cwtl
cli
lahf
xchg
cwtl
push
test
jmp
add
dec
xlat
sar
test
mov
decl
incl
lcall
mov
fnstcw
cmp
call
and
and
inc
add
or
add
adc
mov
adc
mov
fisubrl
incl
ljmp
inc
cmp
push
and
cmp
push
popf
pop
mov
jl
adc
notl
push
ret
or
add
mov
jne
pop
mov
incl
ljmp
cld
adc
add
mov
add
add
cmp
mov
jmp
dec
pop
add
add
pop
jp
loopne
add
jns
jl
inc
lcall
test
jmp
add
enter
dec
leave
je
incl
mov
add
call
inc
call
or
jmp
jp
lcall
iret
ljmp
cmp
xchg
dec
aad
sar
loop
mov
fdivs
int3
sti
and
imul
mov
sahf
mov
repz
push
jmp
incl
add
jnp
add
call
sub
mov
jmp
xor
pop
das
mov
call
pop
dec
and
cmp
xchg
push
sub
decl
jp
cmp
and
lcall
xor
mov
call
mov
inc
call
add
mov
pop
ljmp
mov
sub
adc
leave
add
lcall
inc
call
lcall
cmp
incl
mov
inc
add
mov
add
dec
unpckhps
dec
cli
push
jno
jle
inc
decl
sbb
cmc
dec
in
shll
xchg
movsb
fildl
pushl
call
aas
push
pop
inc
decl
cs
cs
lea
sub
push
xlat
fisubl
shrb
push
mov
aam
ljmp
movsl
call
and
iret
ss
decl
or
int3
or
popf
pop
push
scas
add
jmp
adc
ret
xlat
jo
shll
out
call
aad
and
fcoms
inc
jmp
pop
mov
lods
jns
and
lret
add
jmp
pushl
inc
cmp
xchg
jbe
call
xor
jmp
add
sti
or
jl
call
std
insb
ret
lea
ljmp
push
cmc
sbb
test
out
jmp
add
jecxz
fwait
jge
or
mov
insb
in
out
dec
adc
push
cmp
iret
rcrl
mov
ljmp
xor
movsb
inc
pushl
fwait
stos
pop
inc
inc
inc
decl
lcall
sti
aaa
movsl
decl
jecxz
xor
fcomps
jl
push
jno
mov
xor
sub
sbb
push
das
jle
decl
sub
ljmp
push
push
jmp
add
popf
cs
aaa
adc
lcall
inc
decl
imul
loope
outsb
mov
ljmp
inc
call
movsb
in
pushl
outsl
add
add
dec
ds
lcall
push
dec
ljmp
dec
push
sub
mov
fsubrs
decl
call
aad
jns
decl
pushl
test
push
adc
jmp
pushl
mov
adc
ljmp
and
mov
mov
iret
xchg
rolb
test
mov
ljmp
dec
mov
stc
jecxz
or
pusha
pushl
inc
decl
ret
mov
dec
pop
pop
in
mov
ljmp
mov
adc
ljmp
cmp
jns
das
nop
stos
fistpll
mov
sbb
fucom
incl
leave
popf
pop
push
jecxz
imul
push
aaa
add
fnstcw
or
fbld
aad
decl
push
decl
xchg
dec
push
mov
and
insb
repz
pushl
adc
jmp
jl
stc
or
nop
dec
inc
decl
incl
ljmp
call
mov
lahf
cmp
cmp
xchg
out
cmp
mov
insl
in
in
xor
decl
sub
jmp
incl
dec
sti
divb
or
mov
loopne
ljmp
mov
jmp
test
imul
dec
push
dec
fildl
jle
incl
xor
call
pop
movsb
ljmp
or
inc
decl
aad
call
int3
jnp
jp
pop
stc
cmpsb
ljmp
fnstsw
push
lret
out
inc
push
jge
scas
inc
push
testb
ljmp
incw
cmp
leave
test
or
pushf
call
jmp
mov
add
imul
inc
incl
push
decl
stc
sti
pop
sbb
pushl
test
dec
lret
mov
sub
std
int
mov
cmp
fsubr
sti
adc
aad
cmp
out
push
mov
push
jmp
add
or
add
outsb
aas
aas
ficomps
fiadds
loope
mov
or
loope
jp
scas
fisubrs
std
pop
push
push
popf
xchg
pop
xchg
fidivs
push
mov
pop
cmp
ret
ljmp
push
ret
add
add
sub
fdivl
adc
mov
and
and
loopne
adc
pusha
jmp
lock
mov
push
into
xchg
inc
call
xlat
adc
add
add
add
add
in
into
pop
xor
repz
dec
sub
jp
mov
jmp
or
add
mov
call
jmp
mov
xor
iret
loop
or
xchg
in
xor
jmp
aad
cmp
call
out
movsl
incl
inc
lcall
mov
fnstenv
movsb
decl
jmp
xor
add
add
add
add
add
sar
nopl
call
cmp
jo
lret
sub
inc
ljmp
pop
inc
jmp
mov
jmp
adc
mov
incl
add
mov
add
data16
ljmp
addb
gs
cli
repz
cmp
pushl
lcall
stc
cmp
test
xor
cmpsb
jmp
mov
add
mov
sbb
push
ret
add
addr16
pop
je
jmp
mov
jmp
incl
pop
pushf
adc
adc
mov
jmp
in
scas
sub
dec
fsubl
pop
fstl
mov
dec
adc
call
and
incl
add
add
enter
imull
add
cmp
mov
dec
jnp
data16
cld
and
add
pop
call
lcall
push
call
sub
sub
mov
in
fnstsw
fsts
cmp
cmp
decl
decl
mov
sar
call
in
jle
and
aas
mov
or
decl
xchg
aam
cmp
add
incl
pushl
lcall
out
mov
mov
aaa
int
mov
adc
inc
pushl
pop
sbb
ret
lock
adc
call
inc
jge
inc
ljmp
mov
not
xor
mov
jg
ljmp
insl
dec
sar
mov
decl
into
sbb
xor
pop
ret
pushl
dec
inc
out
call
fisubrs
ljmp
jp
xlat
dec
cmp
outsb
mov
push
add
or
xchg
mov
jne
mov
cmpsb
jp
ficoms
dec
jp
xchg
fimull
inc
ljmp
fmuls
sbb
incl
addr16
add
xchg
mov
call
ljmp
imul
add
add
lret
call
test
or
xchg
scas
pop
sbb
jl
cmp
inc
jmp
jl
cmp
je
cmp
cmp
fcoms
adc
into
scas
aaa
push
iret
push
add
mov
add
push
nop
pop
stos
or
lcall
jmp
mov
jl
ljmp
clc
shll
add
ds
mov
cmp
pop
out
addr16
stc
cmp
test
sar
xor
jmp
add
add
add
mov
call
fcomp
movsl
incl
lcall
xor
push
aad
xor
jge
int
adc
stc
adc
decl
call
dec
cld
adc
scas
incl
and
popf
add
add
mov
ljmp
incl
ds
sub
xchg
dec
sbb
mov
jecxz
sub
incl
sub
call
mov
sub
ljmp
pop
xchg
cmpsb
ljmp
aam
cmp
ljmp
pushl
popa
lcall
adc
in
jmp
leave
ds
out
push
add
call
insl
pop
or
sbb
rcrl
loop
rcrb
pop
fs
fsubrp
pop
and
and
cld
mov
js
and
sar
fmull
xchg
mov
sar
push
fstpl
or
int3
xor
xlat
stc
sub
decl
cmp
jmp
cmpsl
dec
jmp
lcall
call
shrb
test
dec
add
add
jp
decl
mov
jmp
jmp
sti
add
sahf
push
lods
icebp
mov
dec
dec
push
jno
ljmp
incl
jp
pusha
jl
dec
pop
xchg
mov
mov
ljmp
mov
mov
test
xor
imul
jmp
mov
out
pop
loope
xchg
or
or
decl
mov
ljmp
aaa
cmp
jmp
jmp
mov
fcoms
push
lret
jns
mov
mov
lcall
mov
test
mov
push
lahf
mov
jmp
ljmp
sub
push
repnz
scas
iret
lahf
pop
gs
ds
pushl
jmp
xchg
popf
add
or
decl
call
jnp
call
jmp
icebp
mov
mov
jmp
push
jbe
arpl
std
mull
push
fs
add
or
ja
add
add
add
pop
cmpsb
decl
movsl
mov
push
add
cmp
cmp
fcmovne
movsl
cmp
inc
mov
push
cmp
push
ret
mov
decl
jmp
pop
pop
xor
outsl
pop
addr16
cmp
sub
jns
mov
call
movsl
dec
mov
lcall
lods
fdivs
adc
decl
cli
imul
inc
ljmp
pushl
int
jmp
lret
je
xlat
in
xor
mov
sarl
int3
leave
incl
add
addr16
xchg
lahf
push
inc
pushl
std
jns
ljmp
fcoml
push
aaa
out
or
call
mov
sbb
loop
stc
jne
out
mov
pushl
ljmp
lcall
sub
fstpt
add
pop
movsl
decl
repz
popa
jmp
jb
dec
jle
ret
imul
jo
cmp
push
ret
add
add
mov
xchg
xchg
das
inc
enter
pop
inc
add
popf
add
mov
mov
push
iret
inc
sti
inc
lcall
test
gs
ljmp
mov
jmp
add
xchg
push
call
dec
fnstcw
mov
mov
popa
ljmp
push
or
or
sub
ljmp
sub
cmp
push
ss
nop
cmp
ds
fcmove
fildl
incl
pop
push
scas
sbb
int3
incl
clc
jmp
add
mov
add
push
and
xchg
jbe
inc
ljmp
mov
mov
mov
mov
cmp
mov
loop
mov
shr
repnz
add
sti
xor
add
in
cmp
jle
jmp
incl
aam
push
xchg
add
out
mov
dec
mov
jge
incl
jecxz
dec
dec
mov
decl
stos
jmp
add
lock
clc
xlat
mov
insl
add
dec
inc
incl
imul
mov
jmp
popf
add
dec
or
dec
adc
loope
aad
lcall
scas
mov
cmpsl
decl
lods
cli
lcall
fadd
in
lods
sbb
shll
scas
sar
lcall
ljmp
aas
push
call
mov
push
jmp
cmp
mov
rcrb
xchg
mov
xor
outsl
sbb
ret
incl
push
imul
scas
fistpll
call
fimull
je
pushl
and
adc
jmp
cmp
xchg
sar
ljmp
pop
xchg
mov
mov
call
jmp
call
aam
pushl
mov
das
mov
pushl
mov
pop
cmp
mov
push
add
add
add
mov
mov
imul
add
jbe
pop
and
fdivp
call
and
fdivr
outsl
arpl
cld
fwait
loope
mov
inc
jmp
add
jmp
jp
inc
pushl
push
sti
out
inc
jmp
pop
jne
call
in
inc
pushl
incl
dec
ljmp
lea
jmp
sti
sub
add
pushl
pop
sub
jmp
push
fsts
call
call
mov
pushf
push
fistps
push
or
mov
arpl
jo
roll
xor
jg
and
outsl
inc
jmp
lcall
outsl
mov
jb
add
jmp
add
add
test
mov
jp
mov
decw
dec
call
xchg
cmp
pop
add
jmp
decl
sbb
add
add
stos
ficoms
out
daa
incl
pushf
nop
inc
aas
cmp
incl
mov
cld
in
mov
push
stos
test
stos
mov
cld
incl
add
and
jnp
clc
jno
jnp
jmp
lcall
inc
cld
clc
push
push
lcall
pop
dec
call
in
lldt
jl
cs
cmp
xchg
and
and
ret
lcall
pop
call
adc
js
decl
outsl
popf
mov
adc
cmpsb
pushl
jno
mov
mov
ljmp
mov
int3
jb
inc
in
cmp
daa
decl
lods
mov
push
jmp
pushl
int3
mov
or
dec
divl
push
call
rorb
pop
pop
mov
or
aas
inc
dec
jmp
call
pmaxsw
ja
mov
jmp
or
call
xchg
icebp
ret
incl
push
lods
jmp
pop
add
add
lcall
rcrb
mov
or
push
das
xchg
into
xchg
inc
incl
pushl
sbb
pop
lcall
inc
jmp
loop
inc
ljmp
mov
pushl
xchg
pop
push
lea
lea
xchg
add
inc
add
pushl
fimuls
or
mov
testb
call
dec
sub
sbb
int3
mov
and
testl
xor
push
roll
lcall
lret
ficompl
call
mov
inc
js
cmp
pop
lcall
sub
decl
call
fwait
cmpsb
out
lods
fistps
jmp
pop
enter
inc
ljmp
rep
jmp
add
add
dec
ds
dec
push
push
jmp
add
shr
jmp
add
add
and
popf
jbe
dec
pop
push
push
ljmp
adc
mov
mov
js
pop
out
es
lcall
sbb
pop
pushf
idivl
push
call
xchg
push
jmp
call
dec
push
sub
decl
popf
add
pushl
aaa
shrl
jmp
out
and
pop
mov
push
das
xchg
or
xor
and
fdiv
fisubs
popa
pushl
mov
or
mov
decb
xchg
movsl
push
inc
jl
and
stc
ret
jmp
call
repz
ljmp
stos
push
incl
jbe
jmp
or
add
push
incl
jmp
inc
ljmp
cmpsb
inc
inc
add
add
add
lock
lret
mov
ret
and
mov
lahf
mov
incl
or
push
add
incl
mov
cmp
mov
jmp
add
xchg
adc
dec
push
cwtl
adc
add
add
sub
ljmp
incl
decl
call
sub
popa
call
lahf
pop
dec
pop
mov
pop
stos
lahf
out
jg
push
add
fwait
xchg
pushf
clc
imulb
lea
fdivrs
add
mov
add
ljmp
push
popl
ret
xchg
add
mov
lcall
and
shl
xchg
mov
call
rcrl
mov
add
inc
lcall
in
pop
inc
ljmp
getsec
jae
add
push
test
ret
xchg
mov
add
sti
repz
xchg
incl
pop
cmp
scas
idiv
jmp
sub
xchg
loopne
lcall
rcll
insb
add
push
ret
add
ljmp
push
icebp
jg
decl
lods
sbb
cmp
icebp
adc
aaa
ficompl
xor
lcall
pop
dec
adc
add
inc
loopne
sub
pop
add
xor
mov
jp
popa
push
xor
cmp
cmp
fwait
mov
lcall
add
push
ret
xchg
add
jg
loop
std
jmp
test
sbb
adc
imul
in
pop
arpl
push
mov
ljmp
jae
call
loopne
mov
dec
adc
pop
mov
push
jmp
add
out
jns
xlat
and
movsl
jmp
jmp
cld
xchg
cltd
loopne
lods
cmp
cmp
inc
decl
ljmp
jmp
fistpll
and
add
ljmp
adc
pop
sti
mov
jmp
dec
xor
int3
add
push
inc
lcall
decl
and
aas
cmpsl
incl
pop
jmp
add
xor
mov
push
mov
sub
xchg
inc
decl
decl
cmc
xor
lcall
call
out
outsl
mov
mov
pop
dec
add
jae
cmp
jmp
pop
icebp
add
inc
incl
jmp
inc
decl
incl
lcall
cmpsl
ljmp
lock
lret
fistpll
pop
xchg
sub
jmp
add
add
mov
or
xchg
cli
cmc
or
test
xchg
loope
loope
jae
jmp
outsl
sbb
add
popf
mov
add
icebp
pop
add
jmp
mov
decl
jno
pushl
add
xor
push
pop
dec
decl
out
cmp
dec
adc
lret
in
popf
or
scas
push
or
jmp
fidivl
jmp
xor
decl
add
inc
jmp
dec
cld
addr16
mov
push
cmp
dec
cmp
jge
pop
sbb
push
out
ret
jae
scas
shlb
cmpsl
jmp
decl
mov
scas
rcrl
mov
jmp
or
add
cs
mov
mov
das
mov
lods
adc
pop
loope
jp
incl
stc
out
mov
jb
decl
cld
xor
pushl
in
test
jmp
push
aas
in
push
adc
jmp
sbb
sbb
loope
aaa
inc
jmp
cmp
dec
adc
out
sbb
jmp
push
addr16
add
mov
sub
jno
aad
sbb
push
or
dec
jp
call
jmp
add
add
or
call
cmp
jmp
add
mov
incl
add
sub
cmp
pushl
sbb
ja
push
dec
dec
outsb
mov
cltd
sahf
test
hlt
dec
xchg
rcl
daa
ljmp
test
jmp
add
aas
sub
jecxz
inc
out
loopne,pt
and
movd
ljmp
dec
mov
or
mov
add
cmp
pop
push
jmp
sar
push
mov
call
mov
add
add
aaa
sbb
add
cwtl
div
jbe
dec
cmp
inc
mov
inc
add
add
out
sbb
cmpsl
jmp
sbb
aaa
cmp
shr
cmp
add
xor
add
call
mov
lahf
sbb
clc
repnz
pushl
add
add
sub
test
dec
insl
sar
incl
push
incl
jl
jae
in
cwtl
or
dec
xchg
xchg
pop
mov
push
loopne
dec
jns
in
or
adc
incl
pushl
inc
dec
mov
mov
insl
inc
add
add
add
rcl
jns
repz
dec
jle
jmp
js
fsubr
mov
decl
loop
call
stos
push
divl
fwait
arpl
js
call
je
push
mov
jmp
add
add
enter
lcall
add
clc
sbb
ljmp
sub
mov
cmpsb
mov
push
icebp
jle
imul
jmp
decl
nop
ds
add
sub
popf
add
outsb
out
sti
sbb
int
jmp
movsb
ljmp
add
add
add
sahf
push
xchg
nop
data16
sti
add
ljmp
cmpsb
pushl
jmp
mov
or
call
fwait
in
xor
fidivl
or
xor
incl
pop
stos
push
shll
movswl
jmp
mov
lock
je
jmp
js
ret
pushl
aam
sbb
dec
mov
jmp
call
repz
jmp
sbb
pop
add
call
and
pop
ljmp
mov
mov
pushl
jbe
lcall
mov
decl
out
loopne
cmp
or
cmp
jmp
lock
dec
add
mov
mov
ret
incl
fcoml
sar
decl
incl
pushl
xchg
and
jecxz
das
outsl
in
sbb
adc
std
jl
call
xchg
scas
out
or
jno
ljmp
push
ret
add
repz
dec
shl
mov
imul
aad
incl
call
add
push
popf
stos
jle
sbb
jmp
or
sti
mov
rolb
jge
pop
pop
lea
outsl
mov
incl
sar
leave
or
mov
mov
decl
cwtl
out
aad
pushl
cmp
push
jmp
add
decl
add
or
add
incl
pushl
call
imul
mov
xchg
push
add
decl
adc
ljmp
fsubrs
cmp
push
ret
movsb
fstpt
fstps
loop
icebp
jbe
cmp
xor
pop
jnp
aad
mov
es
jns
mov
cmc
add
pushl
inc
inc
lcall
jmp
xor
jp
or
add
pop
test
adc
out
mov
cld
and
and
mov
ret
call
mov
sti
incl
mov
add
mov
ss
mov
jp
sbb
xchg
imul
mov
push
mov
and
add
push
cmc
lcall
popa
jmp
dec
pop
pop
out
dec
loopne
adc
dec
sbb
push
and
shll
adc
inc
decl
lcall
push
dec
lret
mov
call
out
jmp
mov
mov
rolb
pushl
aad
and
xor
stos
ljmp
and
jg
mov
js
ljmp
decl
xchg
jg,pt
pop
mov
cmp
loopne
loop
push
leave
cmp
lret
inc
jp
call
in
xor
xor
call
pushl
jg
pop
adc
add
or
fstpt
decl
mov
add
sub
incl
add
cmp
incl
add
ljmp
xchg
loop
cmp
decl
inc
jmp
push
sub
jmp
add
add
mov
add
call
push
jmp
lock
or
arpl
sub
xor
inc
mov
popa
in
in
sahf
iret
jle
jmp
cli
clc
sbb
aaa
xor
mov
xchg
and
mov
mov
hlt
icebp
mov
decl
jmp
mov
mov
ss
xchg
jnp
lcall
add
decl
pop
jl
mov
or
enter
add
ljmp
in
jae
jmp
cmp
lcall
cmc
fdivr
pop
int3
sar
or
gs
xchg
xor
rcrl
jmp
lret
in
test
mov
jl
mov
xchg
sbb
fcmovb
jmp
xor
push
jmp
add
add
or
or
ljmp
mov
ljmp
cmp
or
pushl
adc
sahf
xor
pop
decl
loop
sarl
mov
sbb
mov
jmp
call
mov
ret
lcall
call
fincstp
jl
cmc
adc
jecxz
ret
push
xor
or
jmpw
popa
in
and
sub
ljmp
dec
insb
mov
mov
add
add
add
add
mov
sub
jmp
ljmp
loop
insb
cs
xor
jne
cmpsl
cmp
pop
or
mov
mov
int
pushl
cmp
rcr
adc
ret
dec
ljmp
xor
decl
mov
jmp
mov
add
jl
mov
inc
decl
mov
mov
mov
pop
dec
iret
cmp
lods
ss
ljmp
lcall
incl
imul
test
mov
jmp
add
push
jmp
add
shlb
jle
out
pusha
call
negb
in
xor
dec
ficomps
mov
fidivl
test
cmp
popa
jge
ja
movsb
fcomps
jle
call
mov
mov
push
lcall
aad
decl
dec
test
or
lcall
popf
sub
mov
jbe
mov
ljmp
or
pop
in
pop
mov
lret
or
sub
incl
call
adc
sub
push
and
push
cwtl
cmp
decb
jge
jmp
dec
xchg
sub
out
pop
mov
mov
vcvttsd2si
call
xchg
jl
cmc
or
adc
inc
incl
and
test
pop
enter
adc
sar
mov
mov
mov
outsb
or
daa
add
sub
call
jmp
incl
jmp
fdivp
imulb
stos
ljmp
sbb
add
jge
test
inc
inc
ljmp
test
ljmp
add
jmp
add
lcall
incl
jmp
hlt
idivl
or
mov
fiaddl
ljmp
pop
prefetchw
ljmp
cmp
mov
in
notl
push
push
adc
loope
pop
jmp
xchg
cwtl
sub
jmp
xchg
xchg
lret
mov
mov
sub
outsl
das
fadds
and
xchg
or
decl
inc
incl
mov
repnz
sbb
push
ljmp
mov
inc
inc
lcall
cltd
in
fsubp
call
daa
lcall
in
mov
insb
fwait
lret
sbb
inc
jmp
add
lcall
and
inc
incl
mov
incl
or
outsl
add
push
movsl
lcall
in
mov
push
adc
movsb
push
add
or
add
pop
inc
decl
adc
popl
ljmp
inc
cmp
pop
add
jmp
stc
lcall
xor
add
ljmp
and
lock
jbe
lcall
insl
and
dec
inc
ljmp
inc
out
and
decl
xchg
jnp
sahf
aas
add
call
pop
or
mov
add
lcall
push
jmp
add
add
addr16
adc
ret
jmp
jmp
mov
fwait
adc
aad
in
cmp
push
add
dec
mov
inc
cmp
ljmp
xlat
call
ljmp
inc
push
sub
push
ficoms
cmpsl
jmp
pushl
mov
leave
jmp
std
imul
ret
pushl
dec
sbb
jmp
lcall
lods
pushl
add
inc
add
popl
ret
add
mov
lret
mov
insl
out
cmc
out
push
sar
mov
lcall
push
cmp
mov
push
insb
scas
push
incl
and
int
in
cmp
jg
inc
pushl
xchg
dec
daa
push
loope
out
sbb
sti
lcall
roll
stc
push
lods
sub
push
ret
add
add
dec
ficompl
call
outsl
fisubrl
fstpl
xor
call
leave
mov
incl
push
jmp
call
cmp
repz
adc
add
jmp
push
stos
enter
mov
rcrl
outsb
sub
sar
cmp
mov
loop
pop
cwtl
mov
mov
sub
decl
xchg
mov
decl
jmp
scas
cwtl
xchg
push
dec
mov
pop
in
stc
sbb
in
sub
ret
or
add
add
mov
jmp
add
mov
jns
lcall
mov
incl
ljmp
push
push
in
or
call
xor
sti
cmp
mov
lahf
cmp
add
pushl
repz
lcall
lods
in
inc
mov
test
cwtl
sbb
mov
mov
pushl
cli
mov
out
dec
lods
xchg
xchg
insb
sub
out
pop
inc
decl
or
fdivrs
add
or
outsl
popf
or
cmp
sub
inc
ljmp
fdivrl
dec
or
and
and
mov
decl
jmp
lcall
xchg
push
add
add
add
pop
add
lcall
xchg
pop
push
xor
adc
or
cmp
mov
test
pushl
popa
decl
aam
jmp
cmp
push
xchg
jmp
sti
add
add
sub
push
icebp
ljmp
jmp
inc
add
add
add
and
push
sub
incl
dec
cld
jno
es
or
pushl
pop
cmp
adc
incl
mov
cld
incl
fwait
sbb
ficoms
daa
call
and
jne
pop
jp
imul
call
sub
inc
jmp
mov
jmp
ljmp
je
jmp
mov
xor
xchg
pushf
clc
sar
jle
fwait
or
incl
jl
add
xchg
sbb
push
cmp
xor
decl
ljmp
jmp
xor
jbe
mov
add
push
ret
inc
dec
pop
jmp
jecxz
fiadds
mov
xchg
inc
jmp
ficomps
add
decl
cmpsb
jge
or
cmpsl
lcall
aad
or
mov
decl
jl
add
add
mov
xor
outsl
arpl
scas
cmpsb
inc
add
or
sub
ljmp
lcall
pop
jmp
aam
rclb
cmp
inc
lcall
and
lcall
mov
push
cmp
shll
cmp
repz
add
mov
or
int
clc
in
push
call
jmp
add
xor
jmp
pop
test
je
cld
jecxz
mov
lea
inc
jb
jmp
add
push
jmp
add
lcall
enter
push
cli
sub
sahf
rcrb
jae
dec
or
cmp
cmp
push
xor
dec
inc
call
cmp
adc
nop
inc
incl
jmp
xor
mov
bnd
add
add
sarb
cmpsb
ljmp
cmp
pop
sub
push
or
or
mov
incl
sar
movsl
incl
push
jge
dec
cmp
lret
push
decl
add
inc
incl
inc
ds
push
mov
cmp
in
sub
call
jmp
add
add
xor
mov
pop
stos
sbb
jb
mov
inc
in
pop
lea
dec
in
mov
push
jmp
or
add
mov
sar
lods
ret
ds
mov
xchg
stos
mov
fisttpl
push
mov
pushl
ljmp
inc
inc
lcall
repz
xchg
aaa
test
mov
fiadds
ja
xor
or
jmp
mov
mov
add
outsl
mov
ljmp
sub
add
add
imul
incl
dec
cmp
xchg
or
mov
iret
cmp
xchg
movsl
incl
incl
ss
decl
add
sub
sar
stc
or
ljmp
jge
out
and
cmpsl
lcall
clc
cmc
in
movsl
decl
pmaxsw
test
push
ljmp
jnp
or
ret
jmp
lcall
pop
inc
pushl
xchg
jno
shlb
mov
sbb
lcall
cwtl
aaa
push
pop
fwait
sbb
decl
jp
push
test
mov
jmp
decl
or
jnp
or
mov
loopne
shl
incl
lods
xor
cli
pushf
hlt
sahf
sub
faddl
pushl
call
or
in
or
dec
and
mov
and
ret
incl
jmp
rcrb
ljmp
mov
push
ret
mov
outsb
push
clc
pop
in
scas
xchg
mov
mov
dec
cli
inc
pushl
push
pop
push
imul
and
push
add
inc
jnp
ret
jmp
add
out
dec
ljmp
jmp
shlb
xchg
mov
and
dec
rcrl
shll
cmp
fwait
jbe
jno
insb
mov
push
lcall
mov
sub
repnz
mov
sub
int3
test
outsl
mov
call
sarb
jns
pop
sar
incl
mov
fdivrp
incl
pop
add
add
in
je
incl
incl
xchg
sar
pop
mov
fisubl
decl
inc
lcall
insb
push
cmp
repnz
cmp
jmp
call
jmp
sti
add
pop
dec
xchg
inc
ds
popa
call
inc
ljmp
jmp
add
lock
or
mov
cld
push
ret
xchg
add
pushf
cmp
out
ds
lcall
add
mov
pop
js
xor
push
lret
sub
cltd
mov
xlat
dec
dec
divb
and
sbb
add
pop
add
or
shll
sar
sbb
adc
insb
push
lcall
jmp
pop
movsl
pushl
and
popf
fdiv
pop
and
jp
call
pop
xlat
mov
adc
pushl
incl
cmp
jmpw
decl
hlt
jmp
mov
add
pop
iret
cmp
pusha
ljmp
jge
decl
add
jmp
call
ja
mov
into
ret
cmp
lcall
shrl
mov
add
push
mov
mov
push
adc
add
outsl
lock
add
jmp
ljmp
push
sub
dec
push
sub
inc
ljmp
and
adc
inc
jmp
jmp
push
mov
adc
inc
jmp
dec
sbb
daa
add
add
mov
scas
push
cmp
mov
std
rcll
cmp
push
mov
jmp
sub
lock
lcall
xchg
je
decl
adc
mov
fs
out
xlat
push
jg
call
out
fstpl
dec
insb
xor
and
jle
pushl
pushl
adc
pusha
push
xlat
push
pushf
jp
pushl
pop
jle
sub
lods
pusha
decl
pop
test
lcall
sub
jmp
cmp
incl
push
in
pop
aas
cmpsl
aas
cwtl
test
in
xor
mov
fstpl
lret
dec
shrb
cmp
incl
int
mov
loop
repz
cli
incl
mov
outsl
mov
decw
inc
decl
push
push
mov
push
ret
add
add
cmp
push
pusha
ficompl
aad
dec
in
aad
lcall
popa
pushl
leave
loopne
lock
sub
aam
adc
mov
jge
incl
sbb
lcall
je
jmp
add
outsb
repz
pushl
jle
cmp
incl
ljmp
or
lret
lods
adc
enter
pushl
push
xlat
xor
mov
pop
sub
call
jecxz
loop
jmp
fstps
lods
in
out
jb
lahf
cmp
cmp
mov
dec
xchg
loopne
jl
inc
call
mov
test
mov
inc
jmp
ret
incl
mov
dec
jmp
jmp
jmp
sub
jmp
ljmp
xchg
sar
and
adc
inc
call
mov
imul
adc
pop
add
loope
inc
add
add
add
add
in
xchg
or
pop
jmp
add
mov
add
test
jae
mov
inc
out
cmp
idivl
imul
cmc
fninit
ljmp
incl
fstpt
add
aas
lods
add
call
inc
jmp
sar
mov
jmp
inc
call
lcall
fwait
lods
test
mov
dec
mov
push
not
fcoml
sbb
incl
lock
popf
test
pop
mov
cmp
push
inc
call
loope
push
jmp
dec
xchg
call
jmp
add
add
into
outsl
arpl
mov
mov
jmp
add
add
aaa
mov
add
sub
sar
incl
xor
call
mov
insl
jl
scas
imulb
call
dec
adc
jmp
outsl
ror
sbb
adc
mov
sar
iret
ljmp
in
push
jl
incl
push
ljmp
inc
jg
xchg
cltd
outsl
aam
mov
jl
mov
pop
adc
test
lahf
cld
xor
lcall
lods
push
insb
cwtl
xor
in
incl
jns
decw
call
decl
mov
lahf
inc
jmp
cmp
dec
cmp
mov
and
cld
jmp
dec
fdivl
shrb
dec
push
dec
jo
jg
jmp
pushl
and
sub
fsubs
das
inc
call
xchg
callw
mov
or
fnstcw
call
nop
incl
xchg
loopne
inc
mov
call
sub
sub
decl
dec
add
decl
incl
jmp
jmp
push
fcompl
cmp
sar
incl
inc
lcall
sbb
in
add
stos
add
xlat
out
add
fwait
repnz
out
jnp
jmp
sbb
cmp
push
ret
add
mov
and
fiaddl
into
pushf
cld
pop
pop
xchg
popa
pushl
mov
dec
call
jmp
lock
add
mov
jbe
inc
ljmp
fwait
xchg
pusha
mov
ss
hlt
icebp
mov
ljmp
xchg
mov
push
sbb
sub
cmpsb
jmp
incl
ljmp
jne
pushl
lcall
std
fdivrl
cmp
fwait
pushf
adc
gs
incl
and
add
add
add
jmp
or
imul
incl
xchg
mov
ljmp
jge
lret
mov
jmp
incl
cmp
jmp
and
add
pop
add
xchg
nop
pushf
dec
xchg
sub
dec
cmp
sub
into
xchg
sar
push
dec
jmp
pop
add
mov
sub
ljmp
dec
add
lcall
inc
incl
ljmp
ret
jns
xor
jmp
sbb
lock
cmp
mov
jmp
jns
int
test
pop
cmp
mov
push
fisttpll
mov
jae
in
adc
decl
daa
dec
call
add
sti
dec
pop
xchg
pushl
mov
jb
mov
jmp
add
addr16
pop
ja
inc
inc
ljmp
pop
push
cmp
std
sub
lcall
pop
cmp
inc
lcall
aad
lcall
cmp
out
dec
test
sahf
adc
push
mov
mov
dec
mov
mov
cmp
or
pop
jmp
cmpsb
call
sub
ljmp
mov
inc
push
test
mov
enter
decl
or
insb
push
aad
out
add
lcall
mov
jmp
add
sub
fbld
cmp
pop
inc
lcall
ficoml
mov
cli
sbb
xor
push
popa
incl
decl
or
jne
pushl
or
out
push
mov
cmc
pop
pop
mov
int3
adc
dec
pop
cmpsl
decl
mov
ljmp
ljmp
xor
scas
test
int
jmp
cmp
inc
std
lea
stc
xchg
sti
loopne
pop
jmp
pushl
decl
adc
dec
in
sub
dec
cmp
ljmp
jmp
js
repz
arpl
std
add
call
xchg
sbb
loop
rolb
push
sub
loopne
repnz
leave
jb
inc
dec
add
cld
call
jmp
add
add
decl
std
jg
cmc
jl
cmc
sbb
mov
imul
jmp
xor
jmp
outsl
or
jmp
decl
sbb
jnp
out
xchg
jne
pop
lods
mov
fwait
adc
add
add
add
shr
mov
sbb
add
call
add
jmp
add
add
call
ljmp
push
incl
addr16
add
mov
pushf
sub
ret
add
add
adc
jae
lcall
mov
fwait
clc
sar
call
sbb
test
adc
adc
out
cmp
pop
ss
adc
sub
decl
mov
incl
mov
add
cwtl
popf
or
ja
clc
ds
lcall
xchg
and
push
add
ljmp
in
cmp
incl
call
cmp
out
xlat
adc
and
jp
cwtl
push
mov
faddl
call
je
inc
incl
call
xchg
xchg
add
jmp
or
incl
decl
dec
sub
in
call
add
call
scas
sub
fwait
rcll
out
int
xor
imul
enter
jmp
lcall
sub
jmp
mov
movsb
jmp
lret
jnp
lcall
mov
fmull
call
fldenv
mov
ds
cmp
mov
add
add
mov
jge
out
clc
idivl
ss
push
ds
cmp
jmp
out
cmp
mov
cmp
jb
jmp
add
add
arpl
lods
pushf
gs
popa
pushl
pushl
sbb
mov
mov
sub
jo
fsub
incl
leave
movsl
ljmp
sti
movsl
ljmp
sbb
test
sar
jmp
mov
sub
add
xchg
add
pushl
and
push
cmc
adc
outsl
repz
decl
lahf
mov
int
cli
pop
adc
or
mov
decl
fistl
or
cmp
ljmp
ds
add
mov
xchg
mov
sbb
lock
decl
addr16
xchg
dec
lret
ret
incl
pushl
push
jmp
outsl
add
add
enter
sub
aaa
jb
into
mov
push
ret
add
mov
cmpsb
inc
decl
cmp
jmp
lock
or
das
mov
clc
cmp
into
dec
out
mov
push
jo
hlt
sar
jmp
push
xchg
not
xchg
and
movsb
push
jg
or
ss
mov
jmp
jmp
in
push
mov
aas
pushf
jmp
push
and
xchg
adc
pop
iret
jp
and
clc
into
cli
fmulp
adc
xor
jmp
add
xor
push
adc
jge
mov
call
decl
cmp
mov
inc
dec
adc
fsubrl
notb
adc
outsl
cmpsl
call
or
test
or
loope
int3
inc
inc
ljmp
jg
in
fiadds
ljmp
gs
dec
push
mov
jbe
xor
lcall
psubusw
out
xor
arpl
in
lahf
sahf
cld
mov
ljmp
sub
imul
jmp
decl
mov
dec
and
jp
cs
jp
pushl
cmp
arpl
cmp
incl
adc
call
inc
cmp
push
lcall
icebp
cmp
and
scas
inc
ljmp
out
dec
in
lcall
call
dec
pop
adc
ljmp
mov
lcall
lods
jmp
lret
stos
cmp
adc
dec
sub
cs
call
fcomi
leave
mov
mov
decl
lcall
incl
fadd
pushl
pop
loop
or
jnp
ret
jmp
aas
or
sbb
fucomp
fcmove
cmpsl
push
mov
add
pushl
pushl
cmp
inc
add
add
add
xor
mov
fcomip
divb
lods
push
pushl
push
incl
mov
outsl
add
sbb
xchg
inc
jmp
pushl
aas
gs
mov
loope
incl
or
lock
iret
lcallw
loope
push
mov
cli
lods
pusha
call
xchg
ds
or
jmp
adc
adc
decl
cmp
incl
out
mov
jo
pushl
das
adc
call
fsubs
out
mov
ljmp
lret
ljmp
scas
enter
incl
mov
push
pop
stc
sar
and
and
test
ja
adc
dec
cmp
lcall
sbb
jg
inc
fldt
push
stos
cmp
test
cmpsb
jle
pop
mov
jmp
sbb
xor
ret
pushl
jg
jmp
add
add
inc
jmp
and
sbb
call
inc
pushl
mov
ret
push
movsb
jmp
sahf
push
dec
inc
call
sbb
mov
lcall
push
add
jmp
add
mov
in
sbb
out
in
incl
add
xchg
add
loopne
lret
pop
push
pushl
decl
cmp
pushf
mov
push
cmc
daa
jmp
call
xor
outsb
or
pop
cmp
jb
test
ret
jmp
js
incl
pushl
call
nop
ds
incl
incl
aad
mov
xlat
aam
xor
adc
fisubrl
and
inc
or
add
add
add
ljmp
ljmp
jnp
add
call
xchg
inc
pushl
jno
inc
ljmp
loope
mov
sar
jecxz
lcall
fdivrp
cmp
sbb
aas
test
pop
in
daa
push
cmp
fcompp
je
pushf
scas
cmpsb
mov
dec
cmp
cmp
and
and
arpl
add
mov
gs
decl
int
vunpcklps
add
decl
fwait
or
mov
pushl
jmp
incl
fistps
fcoms
ljmp
cli
adc
imul
insb
repnz
push
jg,pn
push
sub
inc
ljmp
lret
jmp
add
pop
pop
fbstp
ljmp
dec
callw
fadd
incl
pushl
js
push
js
fcmovb
js
xchg
aaa
cmp
pushl
xlat
sbb
decl
pushl
adc
call
pushf
fnstenv
pop
decl
mov
xor
jle,pt
push
xor
call
decl
out
push
mov
pop
ss
push
sbb
in
mov
add
int
jno
jmp
fs
mov
cwtl
fwait
imul
std
add
fiadds
or
aaa
sahf
push
mov
inc
decl
xchg
mov
ret
jmp
add
add
xor
ss
mov
adc
xor
dec
pop
stos
mov
ss
decl
inc
pushl
xchg
jnp
sti
xor
sti
imul
jo
jge
mov
sar
call
incl
and
pop
and
fbstp
sbb
fstpt
stc
pop
cmp
jns
mov
jmp
popf
sti
sti
add
rolb
clc
pushf
incl
add
xchg
push
mov
jmp
pushl
aad
decl
loope
inc
call
sub
cmpsl
lcall
sub
ficompl
pushl
jmp
cmp
jbe
dec
cmp
add
cli
pushl
sar
mov
pushl
cmp
inc
call
cmp
insl
repz
and
xchg
mov
jae
push
jmp
mov
sbb
add
call
and
decl
jns
or
inc
jmp
mov
or
btc
pushl
dec
nop
xchg
xchg
sub
pushf
std
imul
incl
mov
int3
sub
jle
push
dec
into
ds
pop
jo
sbb
loope
xor
test
pop
aad
jmp
jmp
jmp
jg
lcall
and
push
ret
mov
lock
xchg
push
sti
jmp
jl
ljmp
push
movsl
push
ss
jl
call
jmp
aaa
or
in
in
fldcw
rcrl
mov
into
push
push
ret
add
cmpsb
mov
daa
jmp
dec
repnz
cmp
enter
sar
jle
call
mov
cmp
push
cmp
ljmp
je
call
jns
mov
push
mov
adc
popl
outsl
in
xor
cmpsb
std
sbb
cltd
pushl
add
jbe
pop
mov
lock
sar
mov
xor
adc
jg
out
cmc
imul
decl
fiaddl
shrl
stc
dec
jp
sti
pushl
mov
fnstsw
call
dec
fsincos
push
notb
pop
push
xchg
fcomi
jp
pop
jmp
sbb
lcall
leave
sub
pop
pop
repz
dec
pop
push
jmp
adc
sti
decl
gs
mov
xchg
scas
dec
loopne
sti
cmp
call
jmp
cmpsb
decl
pop
out
incl
ljmp
add
add
cmp
fdivl
push
jnp
scas
cmp
pop
or
cmp
push
movsb
jmp
pushl
aaa
mov
pushl
iret
push
inc
call
sarb
lret
cmp
rclb
mov
out
cli
sub
lcall
jnp
jmp
lcall
xor
fistpll
into
push
fimull
mov
push
leave
scas
mov
inc
jmp
lcall
cli
xchg
std
mov
lcall
hlt
add
cmpsl
call
std
in
cmp
and
xorb
add
sub
call
push
ret
add
add
arpl
or
add
jmp
jmp
insb
inc
pushl
jmp
in
arpl
lcall
mov
lcall
cwtl
mov
lcall
adc
test
sbb
gs
adc
incl
ds
incl
ljmp
aam
pop
popa
mov
cmp
call
cmp
int3
pop
cmp
fnstcw
xchg
lea
lcall
decl
ljmp
sub
ror
vcvtsi2sd
test
pop
inc
call
icebp
sar
sbb
xor
inc
lcall
std
inc
jmp
test
dec
popf
xor
inc
jmp
mov
test
idivb
fwait
mov
pop
push
jne
int
decl
lods
popf
sbb
dec
xor
dec
push
mov
sbb
je
incl
sub
add
add
xor
ljmp
in
dec
cmp
fwait
adc
cld
sub
lcall
sub
fimuls
test
mov
iret
cmp
ljmp
fisttpll
mov
pop
movsl
out
fidivl
mov
sub
pop
ljmp
js
ret
call
mov
lcall
sub
mov
lcall
sub
cwtl
pop
push
mov
mov
dec
xlat
jp
jg
ljmp
enter
pushl
push
xor
mov
ljmp
push
inc
add
mov
jmp
mov
jmp
add
add
data16
cmp
jmp
call
lcall
xchg
jae
ljmp
sar
xchg
pusha
push
aad
call
jge
add
dec
ds
ljmp
add
jmp
inc
jl
mov
incl
push
lods
jno
push
mov
incl
mov
xor
jns
imul
call
sbb
frstor
aas
jo
jbe
incl
sub
sahf
mov
mov
pop
cs
fdiv
cmc
in
mov
call
sbb
popf
loope
mov
ja
xor
bnd
cwtl
jb
cmp
push
in
and
sahf
pushl
mov
arpl
aad
cli
or
lods
sub
xlat
cmp
lods
jno
push
pushl
aad
mov
xchg
pop
cmp
xor
jge
je
incl
mov
test
incl
mov
aas
xor
stc
ret
pushf
imul
dec
pop
xor
ljmp
or
lcall
mov
jmp
add
add
stc
mov
dec
dec
xchg
inc
lcall
push
nop
leave
lcall
imul
ljmp
sar
jmp
sub
or
lcall
call
decl
aam
incl
add
inc
pushl
inc
lcall
or
rcll
sar
jo
pushl
out
adc
insb
jno
repz
call
jns
cmc
shr
daa
call
adc
add
lcall
dec
fs
stc
ds
std
repnz
lret
stos
inc
jmp
or
inc
dec
adc
daa
lcall
stc
mov
fsubrp
pusha
jmp
add
ljmp
cmp
ss
int
push
fdivr
jmp
clc
pop
outsl
loope
add
push
sub
ss
inc
ljmp
fs
in
imul
test
int3
jp
adc
xchg
in
mov
push
out
mov
inc
jmp
lods
lcall
ljmp
call
cmp
lcall
fisttpl
cmc
inc
pushl
jp
incl
nop
call
xchg
js
jnp
mov
in
sahf
lcall
incb
xchg
fistpll
xor
ljmp
mov
lcall
call
push
mov
pop
adc
dec
cmp
pushl
jno
lods
arpl
mov
rcrb
xor
incl
mov
cmp
incl
mov
jmp
sub
or
dec
lahf
cmp
adc
lret
cltd
scas
mov
xor
pop
jmp
add
sub
add
movsl
call
decl
push
mov
outsb
pushf
js
outsl
jb
jmp
mov
test
jmp
lock
ljmp
test
pushl
pop
or
xchg
icebp
rclb
adc
mov
dec
add
decl
in
mov
cmp
jmp
call
ja
cmc
mov
push
aas
out
loop
inc
push
inc
push
repz
push
push
ret
add
out
dec
test
ljmp
mov
repz
sub
push
lcall
add
mov
mov
xchg
out
sti
shll
cmc
xchg
add
lea
mov
incl
jg
xchg
mov
decl
pop
sub
cmc
stc
out
sbb
movsb
lcall
pop
fcmovbe
adc
sar
ljmp
inc
push
mov
aad
push
ds
sti
add
js
inc
incl
inc
call
int
pop
jmp
add
pop
add
cmpsb
ljmp
cmc
push
call
sbb
add
add
dec
jno
and
inc
incl
and
jge
mov
pushf
mov
jl
repz
out
mov
pop
add
add
xor
add
add
push
in
inc
fidivrs
incl
ljmp
cmp
mov
imul
call
ficompl
add
call
insl
scas
mov
loop
popf
out
or
outsb
adc
dec
in
cmp
popf
call
incl
jmp
jmp
add
add
fxch
ss
clc
out
jge
push
push
mov
add
add
fldl
pop
imul
xchg
and
shrb
lcall
incl
cmp
lcall
cmp
daa
in
imul
sar
xchg
push
enter
incl
dec
push
add
jmp
mov
outsl
add
xchg
mov
xchg
xchg
push
jmp
shlb
dec
sar
mov
popf
aam
sub
mov
dec
sar
mov
lcall
lahf
push
push
mov
sbb
mov
jb
jg
decl
clc
fmull
xchg
scas
popa
decl
decl
fnstenv
adc
pushl
cs
inc
ljmp
ss
cmpsb
decl
cli
dec
jle
insb
loopne
add
lcall
out
mov
lcall
push
in
cs
mov
dec
pop
jmp
lock
inc
fdivp
mov
sbb
and
jge
sub
push
sbb
rol
incl
push
mov
push
cmp
lods
push
mov
pushl
sub
xor
jmp
add
decl
pushl
sldt
pop
add
add
dec
push
test
test
stc
push
repz
out
cld
fnsave
jmp
std
ljmp
lcall
jmp
ret
int
pop
push
ret
add
or
jb
mov
and
sbb
or
incl
ljmp
insl
lcall
out
dec
mov
lret
or
jmp
lock
add
or
je
call
in
mov
dec
pop
and
sbb
pushl
jp
lahf
or
decl
and
ljmp
push
flds
call
push
or
scas
test
push
ret
mov
add
lret
call
jmp
add
pop
add
push
out
pushl
dec
mov
pusha
jmp
incl
fwait
jecxz
pop
mov
and
imul
adc
jmp
pop
push
ret
add
pushl
pushl
and
xchg
mov
decl
out
sbb
xchg
push
add
std
pop
aaa
push
clc
imul
movsl
dec
jnp
call
and
and
dec
pusha
incl
mov
mov
ljmp
jae
ljmp
fcoml
jbe
xchg
sbb
xor
testl
loope
movsl
call
mov
cmp
daa
push
lret
cmc
fwait
dec
pop
fdivl
mov
cmp
popa
jmp
mov
jns
cmp
decl
daa
decl
sbb
movsl
lcall
sbb
push
inc
add
add
mov
call
std
and
cmc
sub
aas
in
xor
mov
ljmp
push
or
in
or
in
cmpsb
decl
stos
loop
sbb
fstps
adc
hlt
enter
mov
mov
pop
pushl
cmp
jmp
mov
sub
jne
dec
push
decl
pop
or
hlt
fimuls
outsb
dec
sbb
push
lea
into
int
cmp
je
jecxz
mov
jbe
fsubs
arpl
popa
incl
jl
repnz
ret
pushl
jmp
push
ret
add
decl
mov
pushl
ljmp
dec
es
ljmp
mov
fwait
addr16
in
sub
ljmp
das
push
dec
pop
test
mov
incl
xlat
jmp
daa
stc
mov
cmpsb
ljmp
pop
cmpsb
jmp
loop
adc
flds
decl
call
and
fcom
loop
pop
mov
decl
daa
dec
add
pop
xchg
movsb
call
xor
lcall
mov
jmp
add
add
fwait
ljmp
pop
lret
push
aaa
repnz
incl
add
sub
pushl
or
call
mov
popa
incl
mov
cmp
cmp
cltd
mov
ret
repnz
xor
call
sub
inc
incl
jp
adc
inc
in
adc
decl
dec
jmp
mov
jmp
add
pop
push
fldcw
mov
cmp
pushl
pushl
cmp
jecxz
std
or
inc
pushl
dec
daa
ljmp
inc
incl
adc
cmp
xchg
jne
outsb
and
pop
push
or
icebp
mov
jmp
mov
leave
jg
incl
in
daa
call
out
xchg
xchg
aas
out
aad
lods
mov
movsl
lcall
idiv
push
adc
mov
scas
and
callw
jge
cmp
add
lcall
std
lea
lock
or
adc
dec
mov
call
in
incb
adc
ret
sub
cmpsb
std
test
jmp
out
adc
pop
jmp
dec
mov
lods
iret
shr
pop
ljmp
jmp
lods
fwait
xor
cwtl
daa
dec
xchg
outsl
jp
pushl
xor
decl
or
out
mov
cmp
or
addr16
mov
ret
jmp
pop
dec
out
mov
pop
pop
jmp
jmp
cmp
stos
pop
sbb
push
in
dec
pop
inc
add
outsl
add
hlt
dec
mov
mov
inc
decl
cmp
incl
lods
jmp
call
in
push
and
sub
or
dec
push
push
ja
xchg
dec
dec
pop
mov
lcall
incw
cli
in
and
test
push
aam
xor
incl
ljmp
ljmp
xor
enter
lret
icebp
mov
cmp
jne
je
jge
cmp
push
sub
dec
mov
lcall
pop
jmp
add
jmp
sti
or
stc
adc
cmp
ljmp
incl
push
lret
test
mov
mov
xchg
mov
call
sbb
lcall
movsb
call
dec
push
mov
dec
icebp
stos
mov
jmp
push
mov
ljmp
lea
ljmp
je
add
pop
mov
incl
add
lock
sbb
in
add
xor
aam
inc
jmp
fmulp
sub
incl
sbb
pop
mov
int
jmp
xchg
aas
loop
adc
push
mov
outsb
pop
ljmp
inc
ljmp
sbb
dec
in
mov
sbb
cld
insl
shrb
dec
pop
and
jmp
sub
call
aas
jae
and
into
daa
lcall
mov
sbb
xor
jmp
ficomps
jmp
adc
rcrl
cmp
idivl
das
das
lods
sahf
in
dec
stos
leave
pop
push
fisubrs
push
ret
add
add
imul
cmp
ljmp
mov
mov
jno
call
xchg
in
add
jg
lcall
mov
jg
stc
test
fs
ljmp
lcall
push
jmp
sub
add
mov
call
mov
xor
decl
push
add
popf
add
or
add
imul
dec
sar
lcall
inc
call
inc
sti
push
gs
mov
sbb
pushl
lcall
jp
imul
add
jmp
pushl
fimuls
xor
movsl
jns
lret
or
ljmp
js
pop
cmp
xchg
fcoms
cmp
and
dec
pop
aad
decl
xor
clc
pushf
push
add
xor
pop
cmpsb
ljmp
push
ss
decl
jb
jmp
jge
fwait
jmp
ljmp
mov
lcall
cltd
add
jmp
decl
incl
lret
sub
dec
cwtl
out
xor
push
negl
push
decl
ljmp
lcall
or
add
incl
enter
rcl
cmp
push
ret
sub
add
lret
incl
icebp
mov
and
sub
in
call
add
sub
cmp
incl
lcall
inc
push
lcall
aas
ret
decl
and
pushl
pushl
cmc
dec
mov
mov
inc
decl
sbb
not
movsl
ljmp
call
add
fidivs
ror
jnp
stos
flds
mov
std
xlat
mov
loopne
xor
ljmp
mov
dec
mov
fdiv
push
inc
ljmp
fcos
incl
add
xor
sbb
popa
ljmp
adc
out
aad
inc
jns
push
movsb
call
mov
push
lcall
daa
dec
mov
cs
call
insl
test
fsubrs
cmp
repnz
jo
mov
lret
jmp
jmp
decl
push
aaa
mov
and
sbb
xchg
add
ljmp
fimull
pushf
mov
pushl
pmaxub
movsb
mov
dec
ret
incl
sub
sub
lcall
jmp
push
adc
fisttpl
or
adc
jne
jmp
mov
mov
cmc
test
jnp
loopne
push
sahf
jecxz
push
jg
decl
cld
sub
mov
pop
jmp
call
incl
scas
lods
jmp
xor
ljmp
xchg
sub
xor
xchg
lods
loope
repnz
out
lock
jnp
push
std
adc
ljmp
xchg
loope
fucomip
adc
adc
daa
incl
call
cmpsl
incl
push
js
cmp
mov
jne
xchg
arpl
push
add
cmp
adc
ret
cmp
push
in
cmpsl
call
mov
cld
testl
push
mov
sbb
or
add
add
insb
std
sub
mov
jmp
mov
pop
call
and
movsb
decl
jne
lock
dec
ficoml
decl
incl
add
sub
aam
pop
rcll
outsb
push
repnz
out
pop
adc
outsb
cmpsb
call
lahf
cmp
xchg
cmp
incl
jl
cmp
fisubrl
das
cmp
push
jae
push
cmp
jp
movd
jmp
add
add
and
lcall
dec
mov
jmp
inc
lcall
xor
fcompl
dec
popl
cmp
adc
mov
movsl
jmp
sub
xchg
mov
sti
out
lock
rclb
mov
push
mov
xchg
push
xchg
add
xchg
mov
add
call
into
leave
mov
cmp
rcll
or
or
test
ret
add
add
cld
mov
adc
das
es
lcall
pop
lcall
decl
faddp
decl
adc
push
or
jnp
sub
ljmp
mov
out
lock
mov
xor
popf
dec
mov
mov
test
pushf
sub
repnz
lcall
mov
sbb
mov
jmp
popf
addr16
mov
sar
outsl
sti
outsl
xor
mov
sbb
ljmp
mov
lods
adc
cmp
push
ljmp
push
call
jmp
add
lcall
int
cli
adc
lea
xchg
call
test
inc
decl
lods
cmpsb
call
mov
imul
test
out
decl
icebp
pop
clc
mov
mov
repz
dec
in
lcall
jmp
xchg
add
push
jmp
add
addr16
roll
std
cmp
out
fwait
loopne
jecxz
add
mov
push
or
int
inc
add
add
add
mov
xor
mov
jecxz
clc
cmp
jmp
cmp
sbb
inc
incl
add
jo
push
jmp
add
add
lcall
call
or
inc
lcall
jle
call
jmp
add
mov
lea
jmp
call
movsb
ljmp
and
shll
dec
ljmp
add
insl
mov
cs
mov
cmp
fdivrl
xor
ljmp
add
mov
clc
mov
iret
sub
decl
in
lods
std
sar
insb
mov
lcall
int3
sti
ret
call
outsb
and
dec
popl
aad
insl
xchg
mov
xor
add
cli
lahf
call
out
fmuls
int
fsts
add
call
aam
mov
cmpsb
call
sbb
fistl
call
icebp
mov
jmp
ljmp
cmp
adc
xchg
push
pop
imul
mov
into
adc
push
and
aaa
xchg
and
daa
call
dec
aas
outsb
inc
decl
cmp
jmp
add
inc
jmp
loopne
cltd
mov
mov
xor
push
ss
je
ja
cmp
jb
sbb
lcall
divb
loop
push
mov
dec
mov
adc
ljmp
add
jmp
mov
ret
ljmp
cmp
push
pop
add
decl
inc
push
jl
jmp
dec
fimuls
jbe
pop
or
jmp
sub
push
lods
out
xchg
pop
cmc
dec
imul
jecxz
add
jge
dec
aas
adc
decl
add
decb
call
mov
jmp
add
iret
mov
jmp
mov
or
mov
mov
jmp
mov
or
push
cmp
inc
call
dec
call
rep
lcall
jle
das
xor
jbe
call
movsl
incl
add
dec
xchg
mov
ljmp
inc
dec
or
add
lcall
testb
incl
add
mov
dec
pop
sar
pusha
out
inc
call
xor
popf
mov
loopne
push
cmpsl
pushl
ljmp
je
jmp
or
flds
pop
mov
ja
incb
jmp
stc
fcmovnu
in
nop
inc
fiadds
xchg
sub
decl
loope
xor
sbb
and
inc
lcall
ljmp
out
xchg
jns
cmpsl
pushl
push
leave
add
incl
xchg
jo
inc
std
test
cs
nop
cld
inc
pushl
movsb
jg
in
dec
scas
xchg
mov
inc
jmp
mov
ds
decl
pusha
decl
decl
cmp
in
cmp
xchg
push
cmp
push
and
push
ret
add
add
or
mov
mov
repz
ljmp
test
adc
dec
add
incl
jp
out
add
out
addr16
cli
pop
outsl
xchg
inc
fsubrl
mov
jb
pushl
adc
cld
outsl
xchg
pop
push
and
ja
or
ja
ljmp
call
inc
jmp
pushl
jp
aad
jmp
dec
dec
movsb
cli
cld
inc
decl
mov
addr16
cmp
adc
leave
enter
adc
inc
add
xor
sub
add
xchg
leave
push
imul
cmpsb
call
mov
lods
pop
sub
cmp
outsl
pop
out
das
mov
xchg
pop
enter
dec
dec
sub
jg
decl
test
inc
decl
enter
xchg
sbb
adc
add
jmp
pop
sar
push
push
mov
push
ret
add
cs
ret
mov
jmp
add
add
add
popf
and
cli
mov
lcall
pusha
ljmp
pop
jg
ret
lcall
and
pushl
mov
cmp
jmp
sub
pop
pushl
decb
mov
dec
lods
jmp
xchg
popf
push
cmp
imul
loop
push
jb
push
xchg
and
ret
ljmp
repnz
lcall
cld
sar
inc
call
mov
add
call
pop
into
jl
incb
mov
lea
ret
add
aas
enter
jmp
clc
hlt
jbe
sbb
dec
ss
ljmp
lcall
jmp
jmp
xchg
mov
insl
xchg
lcall
pop
fdivrp
std
pop
mov
xor
xchg
movsl
call
mov
imul
call
pusha
call
or
lcall
decl
repnz
sbb
in
jns
add
ljmp
popa
decl
jb
pusha
in
xchg
mov
push
lock
jmp
add
incl
pushl
insb
or
dec
dec
xchg
cmp
call
das
pop
insb
cmpsl
dec
add
call
fwait
test
adc
mov
cmp
scas
mov
movsl
jmp
push
xor
dec
imul
ljmp
mov
pop
xor
lahf
repz
sub
lods
or
leave
adc
hlt
aas
xor
shr
lods
add
add
mov
add
sub
aaa
outsl
and
cmp
int3
jnp
sbb
fsincos
incl
add
jne
cmp
daa
pushl
jmp
incl
call
mov
add
fisubs
cmp
jecxz
jnp
shll
cmp
incl
cmp
push
fistps
or
jnp
in
inc
call
iret
pushl
xor
insl
pop
insb
fucomp
dec
icebp
fsubs
jno
jmp
mov
and
xor
loop
jg
jp
imull
movsl
cld
add
cmp
stos
mov
pop
adc
cmp
incl
push
ret
loopne
mull
call
scas
lcall
movsb
stc
sbb
aaa
sti
incl
add
add
add
mov
mov
fstps
mov
int3
lret
decl
and
in
pop
int3
daa
decl
push
bnd
repnz
call
cmp
jmp
cmpsb
ljmp
push
ret
add
add
add
ljmp
push
sarl
push
out
inc
pushl
xchg
ret
fisubl
inc
iret
or
add
xor
or
mov
gs
loopne
cmp
sub
pop
out
mov
call
push
cmp
mov
addr16
lcall
int
out
jl
dec
dec
lahf
xor
incl
ljmp
test
mov
sar
mov
decl
stos
push
xor
push
scas
jae
add
jmp
cmp
dec
cmpsb
jmp
ljmp
cmp
lret
lock
ja
lret
add
incl
mov
rcrb
mov
incl
lods
pushl
sub
decl
decl
stos
xchg
stos
je
lods
testl
std
dec
cmp
mov
ret
incl
pop
stos
inc
call
jp
or
nop
cltd
jecxz
push
ss
loop
add
int3
cmpsb
ljmp
decl
sub
fldenv
inc
decl
incb
sbb
jmp
and
jp
inc
jmp
leave
pushf
mov
decl
push
mull
cmp
add
jmp
sub
or
in
xchg
xchg
sar
inc
decl
test
jmp
cmp
inc
jmp
mov
add
lcall
in
inc
add
add
add
xor
imul
jmp
mov
push
cli
push
in
mov
sti
aaa
sbb
pop
mov
xor
mov
test
add
incl
sub
imul
call
sub
in
sar
xchg
in
fiadds
cmp
loop
in
ds
add
ss
decl
fists
jbe
ljmp
shl
jp
rorl
movsb
decl
push
mov
jmp
add
add
jmp
call
adc
dec
or
cli
addr16
cld
mov
inc
ljmp
pop
inc
ljmp
adc
inc
jmp
mov
fcomps
mov
xchg
cmp
xor
inc
cmp
jmp
jmp
cmp
or
lcall
mov
shl
lahf
ljmp
jge
push
jo
std
test
push
call
cmc
in
cmp
push
jmp
xor
add
mov
push
cld
sub
ss
or
xchg
test
or
dec
sub
arpl
sbb
and
out
cmpsb
call
ja
dec
movaps
push
cmp
add
pushl
pusha
ljmp
push
decl
add
xchg
ffree
incl
jmp
aaa
mov
add
call
cmp
add
incl
in
xchg
adc
cmp
cmp
mov
pushl
test
ljmp
dec
icebp
push
add
lret
lods
test
xchg
ljmp
pop
inc
add
lret
loope
scas
xor
out
in
test
dec
xchg
and
jno
aam
cmp
adc
pop
test
mov
lcall
lcall
add
cmp
lods
jmp
mov
sti
add
xchg
mov
decl
mov
mov
add
jns
incl
outsl
pop
dec
dec
inc
lcall
test
xor
pushl
out
dec
or
out
jmp
insb
ljmp
dec
cmpsb
pushl
scas
inc
decl
inc
decl
dec
out
pop
xchg
push
dec
out
mov
mov
jmp
xor
mov
pusha
incl
iret
into
call
test
decl
xchg
mov
lock
mov
call
xchg
mull
call
push
pusha
cmp
frstor
jmp
int3
xor
pushl
mov
mov
fcoms
faddp
inc
ljmp
sbb
dec
cmp
je
incl
add
xchg
jb
lcall
pop
ljmp
pop
fists
push
mov
decl
push
cli
cmpsl
call
fiaddl
incl
call
and
xor
lcall
inc
dec
fsubrp
pop
inc
jmp
icebp
push
adc
js
xchg
fwait
xchg
aas
iret
stc
pop
push
pop
in
dec
mov
xor
in
cmp
lcall
pop
mov
lcall
test
pop
decl
popf
adc
cmp
push
inc
pushl
or
inc
jmp
add
pop
add
mov
push
ljmp
mov
pop
shrl
test
push
mov
jmp
jmp
sti
add
xchg
in
pop
scas
or
or
and
pusha
jmp
decl
popa
ljmp
pushl
mov
out
cmpsl
dec
pop
and
cmp
jnp
xchg
icebp
lcall
mov
add
incl
pushl
je
mov
cs
adc
jl
mov
out
test
lock
dec
jae
leave
jmp
add
xchg
rcr
aam
push
mov
rolb
push
int
add
call
mov
push
xchg
mov
mov
inc
dec
xor
jmp
mov
add
mov
decl
mov
xchg
int3
lcall
sar
nop
cmc
nop
nop
fisttpll
cmp
jbe
hlt
mov
out
push
test
lods
sbb
std
arpl
push
sub
pushl
decl
dec
lahf
or
push
dec
dec
sub
mov
aaa
lret
sub
js
push
xor
and
cmp
or
pop
in
sti
pop
jp
mov
jmp
decl
xor
ljmp
dec
call
leave
mov
in
mov
incl
call
in
inc
fildll
mov
in
jne
mov
testb
cmp
inc
lcall
test
adc
aad
in
xchg
mov
xchg
fsubrl
cmp
leave
out
cmp
push
pop
cmp
loopne
lret
cmp
and
insb
dec
inc
ljmp
movsl
call
xor
jmp
push
dec
sub
dec
aas
fadds
sbb
movsb
jmp
sti
popf
add
add
jl
pushl
ljmp
lock
ljmp
enter
push
add
add
loop
push
or
pop
fdivs
push
sub
jmp
xor
push
int3
out
sub
mov
push
inc
add
mov
pop
add
ljmp
mov
incl
add
mov
add
stc
cmpsl
lcall
dec
loop
lock
cmp
mov
je
mov
decl
dec
pop
inc
call
mov
inc
push
push
decl
ljmp
in
call
xor
add
cli
popf
xor
into
iret
fdivrs
cmp
xor
dec
out
pop
scas
push
idivl
sti
lret
jns
adc
jne
push
ret
mov
stos
jmp
add
mov
in
xor
add
call
push
scas
clc
mov
fsubr
mov
decl
add
ljmp
popf
pop
push
sub
xchg
mov
incl
push
outsl
cmp
decl
jno
add
aas
icebp
and
cmp
jl
and
jae
and
je
sbb
push
scas
cltd
xlat
sbb
lret
ljmp
outsl
xor
mov
nop
icebp
add
lcall
das
aam
sbb
mov
jmp
fwait
fwait
rclb
cmc
pop
stos
dec
adc
jmp
pop
incl
decl
xor
incl
call
loop
adc
out
sar
ret
call
call
jmp
inc
incl
inc
ljmp
push
notb
jmp
pusha
lcall
ljmp
xchg
sbb
xor
inc
mov
in
pop
int3
sub
sti
cmp
fucomip
xor
ljmp
into
out
pushf
mov
pushl
aas
inc
add
add
add
sar
jae
mov
xchg
fsubrl
inc
jmp
jmp
outsl
xchg
incl
jmp
call
lcall
outsl
inc
call
jecxz
add
ljmp
out
mov
mov
jmp
movsb
jmp
inc
push
add
cli
xlat
cmp
addr16
aas
push
ss
fildll
js
push
cmc
adc
lcall
jns
mov
fdivr
xor
lcall
out
aaa
pop
hlt
dec
cmpsl
incl
mov
loop
lahf
pop
push
cmp
call
push
ret
mov
xor
push
jne
icebp
jmp
int3
add
lcall
ljmp
jmp
cmpsb
ljmp
jmp
lock
add
mov
cs
in
lret
incl
cmp
push
inc
mov
clc
add
add
into
jnp
xchg
xor
lcall
push
or
pushl
imul
cld
movsb
mov
mov
adc
lcall
dec
jg
jecxz
pop
ja
js
fstl
mov
push
cmp
mov
sub
daa
call
sar
jl
incl
mov
call
xchg
sbb
pushl
jp
aas
cltd
imul
xor
cmp
jne
incl
cmp
jmp
aas
mov
ljmp
fst
cmp
lea
dec
test
incl
push
shll
xchg
push
sbb
aad
pushl
pop
shlb
or
cmp
xchg
call
cli
scas
iret
out
decw
fbld
inc
in
sbb
mov
cli
push
cmp
pop
fdivp
sub
cld
pop
fldenv
pop
cmp
out
insl
xchg
decl
outsb
mov
lcall
dec
scas
jl
int
push
icebp
in
loopne
std
clc
das
dec
mov
sar
mov
jnp
cmp
jmp
lcall
push
sub
das
mov
jmp
jmp
inc
incl
jmp
call
xchg
in
jae
insl
add
lcall
xor
xchg
sar
std
xor
sbb
out
pushl
jle
insb
dec
fnsave
xchg
push
and
xlat
movsl
decl
push
push
pop
inc
incl
jo
add
lcall
outsl
dec
pop
mov
add
call
mov
mov
xor
cs
mov
and
dec
pop
jg
sbb
jmp
ljmp
dec
sti
pop
xchg
int3
mov
push
cmp
mov
xor
jno
mov
out
fistpll
in
sbb
push
dec
adc
xchg
lea
vdivsd
sub
jmp
pop
incl
jmp
cwtl
inc
incl
lret
xchg
inc
decl
adc
ficompl
stos
mov
call
jecxz
mov
cs
push
outsb
lock
mov
cmp
ljmp
das
mov
sbb
decl
or
pusha
fdivs
lea
stos
mov
decl
sbb
or
lahf
sub
scas
paddb
in
rcrb
push
rcr
push
mov
sub
hlt
loope
dec
dec
lahf
mov
mov
push
jmp
incl
sar
cmp
mov
ljmp
imul
jmp
pushl
jmp
push
jns
jb
ljmp
insl
add
incl
jmp
jmp
incl
lods
in
mov
push
aas
xor
popl
fwait
int
cmpsl
decl
movsb
inc
call
push
mov
cmp
inc
pushl
jmp
lcall
and
inc
call
add
call
sbb
decl
adc
outsl
jmp
push
jb
in
callw
lcall
add
out
dec
clc
push
jge
mov
jmp
jmp
mov
or
xor
pushl
aam
outsb
aam
clc
mov
fcomps
clc
sar
pushl
out
xor
ljmp
ljmp
lcall
jnp
jnp
mov
and
aas
adc
cmp
pop
js
out
mov
push
xor
jp
cmp
mov
cmp
cmp
decl
inc
jmp
call
lcall
outsl
jg
mov
incl
fcoml
fimull
push
push
xchg
push
stc
sbb
decl
imul
adc
clc
mov
shl
movsl
pushl
pop
scas
pop
in
sub
inc
fucomip
dec
cmp
dec
or
cmp
out
jb
decl
popa
fimuls
mov
mov
pop
scas
xor
sbb
jnp
mov
call
pushl
xchg
jmp
incl
in
xchg
mov
cmpsb
ljmp
jae
add
mov
cmp
outsb
mov
ljmp
pop
jmp
ljmp
inc
jmp
repz
mov
jmp
call
sub
xlat
sub
loopne
cmp
push
pop
dec
pop
or
pop
dec
or
fisubrl
mov
mov
in
mov
jb
mov
jmp
hlt
adc
decl
add
jmp
push
insl
mov
ds
and
or
jp
mov
ljmp
mov
lcall
imul
call
in
jmp
lss
decl
imul
dec
mov
inc
lcall
in
jp
ds
xor
adc
pushl
adc
decl
cmc
dec
pop
adc
call
loopne
aaa
dec
test
cmp
mov
roll
ljmp
dec
or
out
mov
jmp
lcall
mov
push
scas
inc
decl
cmp
or
jmp
lcall
jmp
mov
incl
call
xchg
lods
repz
call
jge
shl
jns
ljmp
push
iret
mov
incb
incl
mov
jmp
pushl
decl
mov
mov
loope
inc
inc
lcall
ljmp
popa
call
call
stc
xchg
cli
fsubs
jmp
add
jns
test
ja
pop
mov
inc
push
stos
inc
pushl
cld
push
xchg
cmpsl
call
sbb
clc
push
ss
cld
ljmp
sub
dec
aas
pop
decl
dec
in
ret
incl
jmp
ljmp
sbb
pop
push
aas
sub
mov
fsts
call
aam
push
mov
sub
jmp
pushl
cwtl
scas
adc
pop
lret
decl
mov
paddusb
sub
in
mov
repz
arpl
scas
inc
call
add
dec
arpl
sar
jmp
call
icebp
cmp
movsl
call
pop
mov
dec
dec
pop
sbb
xchg
call
mov
push
jmp
popa
frstor
cmp
call
outsb
push
fcompl
jecxz
or
dec
cmp
sub
pop
push
fidivrl
jmp
incl
dec
movsl
lcall
fiadds
rorl
vmovsd
ljmp
push
test
dec
mov
std
sub
aas
lcallw
dec
xchg
dec
push
mov
incl
std
adc
and
push
pushl
xchg
ret
pushl
call
sar
call
out
cld
negb
fnstenv
adc
pushl
scas
jne
in
mov
decl
movsl
decl
push
mov
cld
sar
cld
push
jg
add
jp
or
icebp
rorl
xor
jb
push
in
lods
inc
lcall
ljmp
decl
mov
aam
or
pusha
push
hlt
push
pushf
cmc
adc
jl
mov
mov
pop
inc
lcall
test
inc
jmp
cmp
xchg
sub
loopne
adc
mov
mov
mov
jmp
pop
incl
mov
out
fdecstp
inc
pushl
jmp
jb
cmpsl
jmp
adc
clc
and
mov
jns
cmp
pop
loop
adc
xchg
inc
ljmp
call
cmp
lods
ja
add
jg
decl
fwait
mov
pop
xchg
cmp
lcall
ss
cld
popf
dec
popf
push
enter
inc
lcall
pop
call
lods
cmp
scas
pop
flds
or
xchg
mov
jmp
incl
sar
lcall
ss
fistl
lcall
nop
test
xlat
clc
lcall
lcall
jne
pushl
jmp
call
incl
movsb
decl
mov
pushl
adc
setne
call
sbb
mov
or
push
jge
fisttpl
call
loopne
or
inc
mov
in
adc
sbb
cli
popa
cmp
sahf
xor
pop
aad
cld
or
ljmp
dec
sar
inc
incl
sahf
scas
pop
push
xchg
in
add
push
shll
mov
mov
fsub
call
xchg
sar
lock
cmp
ljmp
sahf
jne
in
dec
popf
jle
push
pop
inc
js
mov
xchg
sbb
ficoml
cld
mov
xor
sub
push
call
xor
loope
cmp
jmp
xchg
test
pop
ljmp
decl
cwtl
sub
mov
into
sub
test
loopne
ss
mov
cmp
je
pop
add
jmp
pushl
sub
cmp
in
popf
scas
cmp
and
in
dec
imul
lea
jge
cld
add
incl
decl
decl
decl
pushl
inc
pushl
icebp
push
lods
mov
pushl
pop
add
jp
mov
std
pushf
cmc
pushl
sub
jmp
adc
insb
addr16
scas
sub
pop
cmpsl
jnp
ljmp
xor
jl
or
divb
or
decl
stos
mov
push
jmp
mov
xchg
popf
adc
call
jns
cmpsb
call
insb
sub
add
jmp
ss
mull
or
push
push
inc
incl
xchg
int3
int3
nop
pushl
xchg
test
imul
dec
mov
mov
jmp
incl
cmpsl
incl
fldlg2
and
loop
dec
mov
fs
pop
loope
std
sub
dec
ret
pushl
shlb
inc
decl
jae
xchg
sbb
out
pop
cmpsl
decl
dec
mov
jle
das
mov
outsb
xchg
nop
sub
iret
dec
dec
cltd
lock
push
push
dec
mov
push
or
push
lods
nop
pusha
decl
mov
das
aaa
cmp
inc
call
cmpsb
call
xor
dec
aam
sub
insl
add
incl
and
mov
pop
and
cmp
outsb
stc
cs
jmpw
dec
cmp
cmp
jecxz
arpl
mov
jmp
decl
adc
loop
lock
and
and
cmpsb
push
adc
cmp
cmc
cmp
in
xor
add
test
in
fcoms
jo
cmp
jmp
jmp
fcom
fmulp
scas
dec
pop
ljmp
lcall
cwtl
xchg
imul
call
jo
ret
scas
and
inc
jmp
jo
jmp
push
inc
jg
insb
mov
pushl
jl
loop
add
lcall
xor
incl
add
int
push
sbb
out
push
in
dec
into
push
cli
cmp
cmp
fbld
scas
push
lcall
cmp
sub
mov
repz
jns
dec
in
fnstcw
pusha
pushl
cmp
jns
decl
mov
call
xchg
jae
push
lcall
jmp
call
test
ljmp
je
je
jp
add
cmp
notb
dec
mov
loope
mov
decl
aam
popf
pop
dec
jmp
incl
jno
clc
ja
mov
cli
mov
sbb
mov
jmp
jmp
incl
xor
sar
pushl
pop
std
push
mov
ljmp
icebp
and
lret
cmp
in
add
out
insb
popa
push
cmp
sti
adc
testb
jmp
call
gs
cmp
mov
ja
ror
or
or
sar
mov
adc
inc
call
sbb
sbb
push
test
out
xchg
ljmp
test
jo
jmpw
cmp
iret
stc
push
lods
cmp
cltd
cmp
mov
stos
push
loopne
xor
loop
sbb
lods
pushl
mov
out
pop
jne
push
data16
cld
jl
jmp
ja
xor
incl
cli
jo
lcall
push
filds
icebp
rorl
dec
push
inc
inc
call
fmull
jno
sbb
sbb
push
aam
call
iret
cmp
lcall
ljmp
cmp
inc
jp
call
pop
mov
iret
push
dec
dec
mov
sub
jmp
lcall
inc
lcall
jmp
call
dec
jge
aam
lea
popf
rorb
rcrb
mov
push
mov
testb
call
mov
xor
in
push
pop
sub
xor
lahf
xor
jne
sar
or
incl
incl
cmp
nop
xlat
xor
lcall
mov
cmp
push
jmp
ljmp
inc
pushl
and
in
popa
ljmp
pushl
in
scas
enter
mov
shrl
sbb
ficoms
popf
mov
decl
jbe
or
jno
cwtl
push
aam
clc
mov
fucom
decl
mov
in
xchg
push
and
dec
xchg
loop
mov
dec
dec
lea
inc
mov
or
ljmp
in
xor
loope
adc
and
jae
cltd
jb
repnz
mov
jmp
js
xchg
xor
pop
and
sub
pop
je
jno
decl
mov
add
fsts
lret
sub
inc
ljmp
aam
clc
ret
lahf
fdivs
nop
jl
in
out
shrb
je
adc
jmp
clc
push
lcall
pop
xchg
in
ss
jecxz
push
js
icebp
push
push
xchg
jae
fstps
ss
ret
jae
test
fldt
iret
out
mov
movsb
dec
and
inc
std
aad
call
push
cmp
add
incl
xchg
jno
ljmp
dec
adc
cmp
ljmp
xchg
cmpsl
call
iret
cmp
mov
ljmp
js,pn
sbb
repnz
jmp
jge
xchg
mov
in
jl
push
jo,pn
int3
call
out
push
cmp
test
mov
pop
xor
cmpsb
mov
lret
sti
in
test
nop
sarb
cmp
xlat
xor
int
adc
sbb
call
cmp
pushf
fildl
jmp
lret
mov
pop
test
add
dec
xchg
mov
lcall
xchg
pusha
lcall
mov
in
xor
jmp
jmp
decl
mov
mov
pushl
mov
ds
call
sahf
scas
xchg
das
jne
pop
inc
jmp
inc
incl
jmp
jl
fld
decl
ljmp
fstpl
call
push
in
adc
call
fdiv
dec
cmp
jl
je
imull
and
pop
mov
mov
xchg
dec
xchg
mov
sbb
iret
ret
ljmp
mov
lcall
decl
push
cwtl
lcall
lcall
jg
inc
jmp
inc
decl
mov
add
ljmp
sub
sbb
push
pushl
sub
cmp
dec
inc
dec
xchg
lods
pusha
call
jp
inc
incl
ljmp
inc
cmp
aad
pushl
push
int3
incl
or
icebp
movsb
jmp
pushl
test
and
push
xchg
nop
test
jmp
add
incl
pop
scas
test
fstps
sub
jg
stos
ljmp
call
xchg
jo
call
lcall
ljmp
fmulp
mov
pushl
ljmp
or
or
pushl
mov
insl
js
dec
lock
aam
cld
mov
fcmovbe
vandps
ja
fildll
dec
hlt
loopne
sub
jmp
sti
sub
lock
pushl
shll
or
aad
mov
bndldx
jbe
fdivs
inc
decl
ljmp
mov
cmp
adc
mov
idivl
lods
insb
push
outsb
aad
adc
call
push
adc
sbb
pushl
push
pop
shrb
xchg
pop
pop
callw
rcr
xor
inc
call
xchg
xchg
rorb
incl
incl
mov
mov
cmc
cmpsl
call
cmc
mov
mov
mov
lock
mov
ret
mov
out
jge
rclb
fcmovnu
pop
mov
mov
aad
lock
call
into
mov
inc
decl
mov
ljmp
test
fstl
cmpsl
pushl
push
add
xchg
stos
ret
incl
stc
pop
sar
jmp
incl
push
cltd
stos
jg
mov
test
testl
push
mov
xchg
xlat
cwtl
push
mov
imul
xlat
jmp
add
pop
test
pusha
jmp
cmovb
nop
arpl
or
add
jle
mov
test
or
cltd
jnp
jmp
jmp
lcall
jle
ljmp
xchg
test
pushl
ljmp
call
adc
pushl
and
insb
ret
stc
xor
push
loop
jae
xor
leave
sub
ljmp
and
mov
imul
sbb
sbb
aas
pop
adc
aam
mov
js
jmp
inc
pushl
jp
jecxz
mov
in
mov
jmp
add
in
cmp
hlt
mov
insl
push
jmp
mov
jl
xor
push
movsl
std
cli
jns
inc
std
mov
aaa
pushf
testb
call
shll
js
std
and
mov
decl
incl
fcomi
insb
jecxz
rcr
aas
in
scas
in
scas
mov
lcall
inc
fld
call
lods
push
std
xchg
stos
push
adc
in
and
pop
add
stos
jb
pushf
inc
ljmp
xchg
and
push
or
xchg
movsb
incl
jecxz
mov
sti
xor
movsl
push
insb
cld
cld
mov
decl
ljmp
decl
jmp
lcall
in
insl
cmp
ljmp
decl
decl
pop
jle
jg
decl
jl
dec
jo
xchg
jne
inc
mov
incl
into
xchg
mov
sti
cmp
adc
adc
adc
or
sub
mov
inc
lcall
push
push
mov
jb
jmp
incl
testb
jmp
aad
jne
inc
incl
call
fists
jl
cmpsl
dec
sub
pushl
jne
xor
or
push
ljmp
mov
cmp
jmp
jnp
xchg
lret
punpcklwd
xchg
out
xor
or
jnp
fcmovne
inc
lcall
into
gs
fstl
call
dec
adc
pop
pusha
incl
movsl
decl
in
and
icebp
mov
fsubrs
inc
lcall
sub
push
repnz
incl
incl
cmp
pop
adc
adc
decl
movsb
call
mov
incl
call
enter
xor
cmp
mov
jmp
pop
fmul
into
aad
repz
sbb
fildl
jbe
incl
mov
jmp
inc
incl
xlat
dec
das
add
or
sbb
outsl
sbb
push
push
enter
loopne
ljmp
pop
push
mov
sub
fmull
inc
mov
test
xchg
out
xlat
sbb
dec
aad
loopne
cmc
mov
cmc
pushf
push
mov
dec
faddl
lcall
mov
decl
imul
stos
pop
repz
pushl
cli
outsl
lock
cmp
dec
jp
jmp
pushl
push
jbe
loop,pn
push
insb
js
mov
push
jae
mov
out
fwait
add
sbb
pop
ljmp
sbb
jno
push
push
or
xlat
repnz
pushl
call
hlt
jmp
call
pushf
lock
imul
outsl
cmp
jb
mov
or
ljmp
decl
jae
mov
call
imul
dec
jno
pop
jge
and
mov
dec
call
aas
incl
clc
and
cmpsl
incl
jns
lcall
icebp
cmp
lea
mov
lcall
jp
fnsave
mov
iret
jne
cld
imul
dec
mov
repnz
sahf
cmp
jmp
mov
nop
jbe
add
insl
dec
and
scas
sbb
push
pop
fists
jge
add
pushl
mov
mov
xor
cmc
ljmp
pop
jae
push
mov
das
es
mov
jmp
sahf
jmp
mov
repz
jmp
incl
dec
cmc
dec
push
push
lcall
fisubs
int3
mov
pushl
fistl
lcall
pushl
cmp
incl
call
add
pushl
mov
ret
decl
adc
jge
jge
cmpsb
jnp
xor
adc
decl
jne
pop
mov
add
sub
jb,pt
jg
mov
xchg
xchg
hlt
fisttpl
decl
or
mov
mov
enter
push
aaa
imul
pushl
decl
decl
cmpsb
ljmp
jmp
out
fwait
sub
popf
adc
mov
jecxz
mov
sub
decl
xor
add
jmp
incl
decw
ljmp
pushl
and
push
pop
cmp
jne
jg
xor
icebp
loope
mov
cmp
pop
pop
xlat
sti
insb
outsb
mov
jmp
pop
push
and
dec
faddl
out
out
incl
xor
insb
icebp
dec
jns
lcall
loopne
sar
cmp
call
addr16
push
scas
sbb
rorl
jmp
sub
jmp
call
dec
xchg
sahf
inc
lcall
adc
inc
decl
push
lea
call
push
decl
xor
push
cmc
sub
arpl
sub
xor
cltd
jb
and
lock
call
jb
fwait
adc
inc
jmp
outsb
cmp
mov
sbb
push
push
inc
call
push
jecxz
adc
xlat
jne
jmp
popf
inc
lcall
outsb
idivl
cmp
pushl
dec
ret
divb
out
fdivp
callw
pop
jne
mov
dec
push
jmp
dec
mov
ljmp
mov
imul
inc
incl
xor
push
enter
call
or
rorb
and
jae
mov
ljmp
push
cmp
fwait
cmp
push
xlat
dec
aad
fcomip
jae
call
mov
mov
cmp
inc
sti
aam
std
mov
jg
dec
jne
ret
repnz
incl
mov
pop
dec
popf
mov
push
and
aas
cmc
cmpsb
inc
mov
call
push
ds
sbb
cwtl
lock
and
push
and
jns
fildl
call
cltd
lcall
pushf
sub
adc
jo
ja
incl
sub
jl
mov
mov
xchg
js,pt
data16
cmp
decl
out
shrb
fisttps
jmp
jmp
incl
lcall
push
inc
ljmp
iret
and
fdiv
jb
inc
lcall
lcall
push
incl
dec
pushf
into
fcmovne
or
and
es
cmp
dec
jmp
or
ds
and
lcallw
jp
jg
std
push
xor
arpl
jns
jns
lcall
into
mov
xor
insl
pop
jp
lods
xchg
imul
push
hlt
sti
adc
xchg
out
cmc
insl
icebp
in
shll
and
ret
lcall
leave
fs
js
ljmp
popa
fcoms
sahf
repnz
lea
mov
ss
dec
outsb
xor
rorl
jmp
call
mov
call
shl
lcall
mov
pushl
lcall
pop
adc
mov
push
jg
cmp
sub
push
shlb
pushl
inc
lcall
cmp
test
ja
lcall
xchg
movsl
in
xchg
cld
push
cmp
decl
dec
cli
sub
movsb
lcall
pushl
scas
lods
add
ficoml
dec
lods
lods
and
in
shr
pop
and
pop
je
xchg
inc
decl
cmp
add
incl
decl
add
lahf
cmpsb
jmp
xor
xor
mov
aam
pushl
pop
incl
inc
incl
test
jns
and
fnstenv
call
ljmp
pop
mov
push
dec
inc
fisubrl
mov
stos
add
jle
addr16
jo
sahf
pop
and
in
int3
ret
mov
adc
xor
jmp
call
fidivrl
lcall
call
incb
cmp
call
pop
outsb
std
adc
out
push
and
dec
or
cmp
je
decl
push
pop
cmp
lcall
xchg
int
mov
incl
jmp
xchg
push
push
jno
mov
shl
ljmp
or
sahf
xor
xor
test
xor
sub
jno
mov
push
ret
jns
movsl
lcall
push
call
add
decl
mov
dec
cs
xchg
nop
loop
inc
pushl
mov
pushl
xchg
sub
mov
jmpw
or
in
sar
call
ljmp
xchg
sti
jmp
decl
popf
push
xchg
mov
sti
mov
jmp
pushl
std
and
pushl
incl
jmp
call
pop
or
fistpll
add
jmp
cmp
scas
scas
xchg
stos
int
ljmp
inc
jl
shrb
out
ret
ljmp
ljmp
lret
mov
cmp
adc
lcall
cmp
push
pop
jg
mov
xchg
xor
stos
jl
xchg
test
and
pushf
cmp
jmp
call
out
int
repz
adc
inc
lcall
mov
mov
lcall
insl
lcall
push
push
jmp
cld
cwtl
push
lcall
cmp
icebp
ljmp
jno
fidivrs
jmp
stos
insl
or
iret
dec
fists
call
pop
xchg
or
lea
fmulp
push
or
aad
cmp
dec
test
testl
jmp
dec
lcall
cmp
incl
and
mov
arpl
jmp
inc
decl
cli
jg
incl
pushl
jnp
jg
dec
cmp
pushl
testl
fisubs
mov
jbe
dec
out
xchg
enter
dec
leave
inc
incl
jmp
xor
ds
inc
incl
out
inc
lcall
and
sbb
jle
decl
adc
push
ror
and
repnz
push
decl
xchg
test
cmp
call
pop
mov
cmp
loope
aam
cmpsl
call
ljmp
call
pop
aas
sar
call
mov
in
sub
rolb
pop
lods
xchg
mov
decl
shrb
add
inc
decl
loopne
pushl
push
xor
sub
inc
pushl
mov
pushl
call
mov
push
jb
sti
push
in
in
ljmp
aas
mov
divl
incl
pop
add
fistpll
movsl
call
popa
lcall
sahf
or
adc
nop
fistpll
decl
sbb
mov
cmp
out
dec
ss
dec
mov
xor
cmp
cmp
ljmp
sar
add
lcall
pushl
jb
or
cmp
sbb
mov
push
lcall
mov
notl
cmp
decl
in
mov
pushl
pop
push
lcall
imul
arpl
faddl
cld
rclb
cld
xchg
and
sbb
into
ljmp
jnp
int3
pop
mul
jmp
mov
decl
call
rcll
pushl
jns
push
mov
jae
sbb
cwtl
add
lcall
mov
in
ljmp
into
test
das
std
jmp
decl
lret
call
mov
hlt
push
mov
out
rorb
decl
popf
dec
push
jp
xchg
cmp
adc
dec
xchg
popa
pushl
jne
add
decl
ss
mov
xchg
inc
inc
jmp
fdivl
jmp
jmp
fsubrp
cli
dec
adc
cmp
mulb
mov
jmp
ljmp
imul
dec
lahf
fcoml
mov
sbb
ret
dec
dec
test
enter
pop
pop
pushl
cld
jo
js
ljmp
jecxz
or
xor
dec
or
jmp
lcall
dec
pop
shlb
decl
psrlw
out
cmpsl
jmp
mov
sbb
ljmp
cltd
cmp
adc
inc
jmp
incl
fwait
inc
incl
cmp
xor
cmc
cmp
pop
lods
mov
in
stos
in
push
incl
lcall
call
arpl
push
jmp
incl
jmp
frstor
in
rolb
in
push
pop
push
xor
mov
jmp
lret
cld
fnsetpm(287
pushl
dec
mov
add
inc
stc
aaa
pop
mov
icebp
dec
sbb
push
and
repnz
jecxz
imul
push
xchg
mov
pushf
loope
pop
cld
ljmp
stos
data16
cmp
jmp
fwait
push
ljmp
sub
add
and
aam
clc
xor
push
pushl
fdivs
adc
arpl
cmpsl
call
dec
pop
lcall
push
ljmp
sub
cmp
cmp
inc
decl
int3
dec
shll
mov
incl
pushl
fwait
mov
insb
stos
stc
dec
inc
inc
jmp
lcall
push
sub
or
push
inc
incl
call
test
pushl
pop
inc
call
mov
lcall
cmp
incl
mov
pushl
cmp
popa
push
sub
movsb
cmp
sub
call
repnz
push
out
dec
xchg
in
out
sub
cmp
xor
cmp
pop
pop
addr16
lcall
mov
repz
call
pop
ljmp
decl
add
jmp
cltd
stos
jmp
sahf
notl
mov
jmp
int
decl
xchg
xchg
jb
ljmp
cmp
int3
cmpsl
call
jae
test
jnp
ljmp
cli
dec
insb
mov
in
inc
pushl
add
call
in
fiadds
mov
call
dec
sub
faddl
nop
cmp
mov
daa
cmp
xor
xor
ljmp
ds
push
pushl
incl
ret
call
sub
mov
push
adc
xor
pop
lods
dec
inc
push
fbld
inc
jmp
inc
mov
scas
mulb
popf
in
jns
arpl
cmpsl
decl
cwtl
inc
sti
dec
pop
ss
or
xchg
xor
cs
jg
leave
into
incw
call
inc
jmp
fcmovnu
scas
sbb
in
cmp
jmp
stc
xchg
sbb
adc
adc
pop
pushl
mov
cmp
mov
decl
push
into
xor
fimuls
adc
sar
cmp
xor
sar
incl
pushl
cmp
mov
loope
scas
clc
sub
sbb
lock
push
mov
lcall
loop
decl
insl
cmp
js
dec
in
lret
scas
add
pushl
mov
pop
add
cmc
adc
decl
mov
push
pop
ja
ljmp
adc
call
push
rorb
sbb
sahf
dec
stos
pushl
jp
call
nop
sub
mov
das
ret
lcall
sbb
pop
inc
ljmp
sub
aas
lahf
or
std
test
pop
cmp
jmp
ljmp
hlt
or
call
fistps
mov
push
mov
add
lcall
fisubs
xchg
inc
incl
pop
cmc
and
idivb
cmp
jmp
std
decl
imul
mov
aad
dec
dec
jmp
call
xchg
xor
xor
push
cmp
xor
inc
jmp
clc
sti
and
popf
xchg
xchg
adc
push
decl
arpl
dec
push
lahf
test
stos
mov
xor
pushw
mov
jmp
jb
pushl
cmc
nop
mov
pop
mov
push
ficoml
xor
ja
cld
int
mov
ljmp
out
xchg
imul
stc
mov
adc
add
ljmp
cmp
mov
int3
addr16
cmp
sbb
pop
push
scas
mov
daa
call
cmp
cmpsb
call
mov
push
mov
xchg
stc
outsb
sub
or
cmpsb
incl
xor
and
std
dec
sarb
call
or
inc
lcall
and
dec
fbstp
in
imul
outsl
jmp
call
add
push
dec
push
shld
push
add
xchg
pop
outsl
and
aad
outsb
mov
incl
decl
in
pop
aas
jne
cld
in
jmp
decl
int
incl
std
decl
mov
inc
incl
jg
inc
mov
pushl
cmc
icebp
repnz
incl
mov
pushl
cs
fldt
xchg
pop
incl
in
dec
sti
adc
lret
mov
xor
and
add
jns
push
pop
incl
mov
fstps
fistl
push
xor
xchg
adc
insl
mov
dec
sub
jle
stc
pop
push
sub
xchg
loope
pop
mov
sub
or
call
daa
push
mov
fdiv
mov
pushl
sub
xor
movsb
ljmp
mov
jmp
je
rcrl
je
push
push
in
mov
das
data16
in
mov
pushf
fisubrl
mov
test
adc
add
pushl
movsl
fcomps
data16
jle
repz
adc
xchg
fwait
pop
pop
adc
xchg
rorb
repz
push
cmp
insb
mov
xor
int3
mov
or
add
out
shlb
pop
mov
cli
sub
pushl
or
dec
test
in
fcomp
xchg
mov
jmp
jmp
pop
lcall
pushl
call
inc
call
cli
into
stos
add
call
je
xchg
xchg
mov
sbb
adc
add
jnp
je
mov
aas
or
decl
lcall
incw
movsb
lcall
pop
arpl
decl
test
mov
ljmp
incl
decl
nop
negl
lcall
jmp
decl
pop
lret
push
decw
xor
cmp
sbb
fs
cmp
push
cmp
lahf
sub
mov
cmpsl
incl
call
dec
popa
jmp
inc
decl
lahf
xchg
in
jns
je
cmp
movsb
jmp
lcall
jb
mov
call
add
ljmp
jmp
ja
mov
lcall
dec
cmp
push
lcall
jl
mulb
ret
ljmp
pop
out
xor
aaa
cld
push
add
fisubl
std
mov
inc
incl
call
jmp
adc
lods
lret
loop
popa
in
cmp
sbb
sub
xchg
cmp
sub
out
or
mov
xchg
or
mov
decl
sub
pop
mov
cmp
cwtl
xor
aam
push
in
pop
jmp
enter
cmp
xchg
jp
mov
cmp
in
mov
std
mov
loop
test
je
push
cmp
ret
pushl
mov
ljmp
mov
flds
sti
lahf
adc
test
aam
das
mov
xor
ljmp
push
pop
dec
sub
iret
mov
push
mov
xchg
sub
sub
mov
in
repz
jecxz
push
and
outsb
dec
jp
aad
mov
das
cs
adc
pushl
inc
std
roll
decl
xchg
push
and
rcll
fnstenv
push
dec
pop
xchg
decl
pop
in
mov
in
stos
xor
mov
decl
decl
lcall
inc
out
imull
xchg
je
add
cmp
jno
decl
cmp
loop
mov
mov
adc
clc
push
in
cltd
jno
dec
pop
cmp
leave
popa
pushl
push
sbb
pop
ljmp
scas
js
inc
call
incl
xor
xor
pop
sub
or
dec
jne
outsb
in
cmpsb
call
mov
mov
jno
inc
ljmp
popa
ljmp
sub
call
mov
inc
jmp
ja
pop
jmp
pushl
lcall
jmp
jmp
push
sti
shlb
flds
lock
jmp
arpl
ret
jmp
mov
icebp
test
loopne
adc
fmuls
cmp
sub
cmpsl
lcall
inc
decl
and
mov
push
lret
lods
imul
fdivrl
call
decl
pop
cmp
xchg
pop
mov
fdiv
mov
fs
cmp
xchg
fcoms
rcr
je
or
fs
aas
stc
inc
ljmp
lret
rcr
xor
lcall
jmp
scas
push
xor
lahf
dec
dec
xor
jp
nop
inc
mov
xchg
aad
shl
xchg
sub
sub
test
in
mov
incl
pushl
mov
xor
sub
and
decl
scas
mov
std
aam
cli
sbb
cmp
lods
fistps
fldenv
ljmp
jmp
jmp
jmp
adc
fisttps
incl
mov
dec
in
ret
jmp
pushl
enter
fiaddl
or
das
sub
add
jmp
jno
push
fbld
lcall
dec
dec
aaa
dec
mov
imul
jg
in
mov
dec
push
cmp
call
out
mov
lcall
icebp
pushl
insb
cmc
xor
xor
int
std
push
out
sbb
test
dec
jg
sub
cli
jmpw
call
pop
imul
push
mov
out
jb
cwtl
dec
divb
cmp
call
in
cwtl
sub
data16
jns
icebp
xchg
scas
nop
in
jmp
lcall
dec
test
adc
loope
pop
adc
pushl
lcall
mov
lahf
push
imul
xor
rorb
incl
lcall
enter
out
mov
jl
sar
repz
insl
mov
ds
xchg
xor
lahf
int3
mov
jns
cli
nop
inc
pushl
jmp
jbe
fwait
jnp
inc
ljmp
sub
ljmp
repz
ljmp
lcall
ss
lret
call
or
lcall
decl
sub
push
jae
cmp
mov
adc
out
lret
adc
int3
dec
hlt
pop
xor
call
mov
daa
pushl
lcall
in
dec
push
rorb
decl
mov
pop
mov
pop
mov
push
pop
inc
ljmp
jmp
lcall
stc
jge
loope
add
jmp
fstpl
aam
incl
mov
incl
jp
push
cmp
daa
jmp
pushl
inc
mov
or
call
xor
lods
in
jp
pushl
decl
lcall
pushl
pushl
push
cmp
movsl
ljmp
call
add
lcall
call
inc
jge
mov
jecxz
xchg
pop
fisubs
inc
decl
aad
jmp
std
or
hlt
clc
dec
mov
cmp
xlat
enter
call
inc
call
decl
or
int3
mov
int
ljmp
decl
jne
sub
cmp
shlb
jmp
pushl
inc
dec
mov
pop
stos
sbb
mov
xlat
inc
decl
mov
xchg
jg
aad
mov
decl
mov
mov
xor
jns
test
cmp
call
mov
push
adc
jge
dec
pop
inc
lcall
sub
push
negl
mov
test
jmp
call
lcall
or
jmp
pop
sub
inc
decl
xor
push
sbb
mov
sar
sub
dec
iret
add
push
fdivs
push
jno
jno
dec
bnd
cmp
je
lcall
flds
xchg
jo
js
ljmp
lea
mov
jnp
mov
or
push
inc
ljmp
pop
add
lcall
push
push
popf
std
inc
push
call
out
mull
jg
outsb
or
dec
jl
decl
test
and
mov
push
mov
iret
dec
arpl
cmp
jnp
and
push
arpl
and
jmp
xchg
flds
inc
sti
insb
dec
mov
lcall
pushl
jae
out
cwtl
sar
mov
call
mov
mov
jl
pushl
add
pushl
push
add
jmp
push
call
xlat
jmp
push
into
cmp
jmp
adc
inc
push
sbb
sub
or
cwtl
mov
stos
xchg
dec
scas
inc
ljmp
aas
test
jmp
ljmp
int3
push
adc
fcmovne
ret
insl
jb
decl
cmp
callw
mov
mov
stc
add
jmp
adc
sbb
pop
incl
call
call
add
dec
fcoml
call
push
add
mov
pop
notl
je
dec
loopne
dec
sub
incl
leave
and
push
pop
or
xchg
adc
out
push
add
mov
outsb
mov
call
decl
mov
rorb
jmp
ljmp
ljmp
adc
adc
mov
fwait
loopne
jb
cld
pop
inc
call
pushl
mov
lret
dec
jmp
lcallw
pop
xchg
sar
call
jecxz
incw
incl
cltd
icebp
inc
cmp
mov
dec
scas
fistpl
sar
sar
push
jnp
ljmp
add
ljmp
mov
imul
and
xchg
jmp
mov
stc
test
int3
int
in
adc
cmp
incl
je
mov
stos
mov
jmp
pop
fcos
and
pushl
daa
inc
call
sub
jge
sbb
repz
out
sbb
fisttps
call
repnz
cltd
loope
into
lods
pushl
jp
lcall
and
fsub
ljmp
and
nop
xchg
in
and
mov
dec
xor
hlt
cwtl
sbb
rorb
jno
inc
incl
mov
and
imulb
fmulp
rep
push
jmp
pop
push
vhaddps
lret
inc
cmp
pop
mov
cwtl
out
sub
fdivrp
sar
xor
jg
cmp
jb
xor
adc
ljmp
mov
loope
scas
clc
cmp
jae
ret
sti
push
push
pushl
mov
out
inc
in
ss
aam
sar
mov
pushl
adc
and
imul
pushl
insl
mov
enter
sbb
movsl
call
cmp
or
cmp
xchg
insb
sub
xchg
or
shrl
das
xlat
lods
addr16
fmull
in
mov
xchg
xor
lcall
incl
push
imul
mov
call
sbb
incl
pop
jle
ljmp
or
adc
pushf
add
int3
push
adc
das
push
negl
mov
lcall
xchg
pop
add
decl
sbb
push
imul
mov
sub
mov
mov
hlt
stos
fisubs
outsl
sahf
fmull
repz
push
cmovno
mov
lcall
sub
mov
cmp
xor
xchg
mov
xchg
mov
cmp
dec
shrb
test
lods
int
ja
cmp
or
cmp
fisubl
test
sahf
sar
cli
insb
and
and
push
and
sub
jns
push
lods
xchg
jae
leave
xchg
or
sub
mov
jg
add
inc
inc
lcall
adc
decl
call
cmp
js
lea
out
mov
jmp
ljmp
dec
js
mov
add
xor
inc
incl
scas
jmp
lret
push
test
ljmp
jg
sub
clc
jns
pop
insb
mov
dec
mov
xor
ljmp
adc
lret
mov
ja
adc
call
push
cli
push
pop
cmp
call
inc
decl
mov
int3
mov
call
pop
sub
js
adc
test
sbb
decl
pushl
or
ds
rcl
mov
in
cmp
test
jmp
daa
mov
jns
jmp
out
clc
ljmp
pop
lcall
lahf
cmp
inc
jmp
fxtract
mov
ret
stc
or
xchg
pop
sub
xor
sbb
cmp
mov
rcl
dec
push
dec
cmp
mov
or
sub
aaa
xor
pop
pop
jmp
push
sub
xchg
cs
popf
or
inc
jmp
fcmovnu
pop
mov
add
ljmp
lcall
mov
js
lahf
cmp
inc
lcall
xor
xchg
and
mov
incl
lahf
test
ljmp
mov
incl
std
test
decl
or
mov
fstps
pop
push
cld
sub
add
incl
dec
cmp
dec
aam
push
add
ljmp
in
enter
jns
mov
call
cmpsl
decl
ljmp
dec
sub
add
incl
decl
ljmp
jmp
scas
dec
jmp
rolb
cmpsb
incl
jmp
adc
mov
jmp
xchg
push
jmp
out
inc
decl
mov
decl
imul
and
xor
into
decl
ljmp
mov
jmp
inc
incl
imul
fildl
decl
xor
mov
sub
mov
jmp
enter
pushl
cmp
decl
lcall
mov
or
cmp
icebp
or
ljmp
sar
jle
xlat
mov
insl
fsincos
adc
stc
and
xor
call
sar
mov
pushl
push
pushf
cmp
mov
iret
clc
and
inc
mov
incl
jmp
push
ljmp
addr16
lcall
cmp
push
adc
dec
sbb
loop
cmp
arpl
cltd
xchg
jb
jp
outsb
enter
inc
cmp
call
mov
mov
out
dec
lea
call
inc
jnp
jbe
mov
int
dec
push
mov
in
pushl
repnz
xchg
dec
sub
sbb
cmp
cmp
incl
incl
nop
loop
fwait
xchg
stc
xlat
int3
xchg
out
mov
iret
incl
test
sar
mov
jmp
ljmp
pop
out
push
jae
std
pusha
ljmp
int3
xor
jmp
incl
incl
jmp
xchg
mov
aas
xchg
jg
lcall
cmp
out
dec
push
dec
aad
outsb
jbe
jl
call
cld
cmp
incl
or
push
add
ljmp
decl
push
push
incl
out
cmp
mov
out
cmpsb
call
clc
movsb
jmp
sahf
add
decl
fldcw
cltd
mov
int3
decl
cmp
cli
mov
push
mov
loope
mov
ljmp
lods
add
incl
pop
dec
in
cmp
and
stos
jmp
sar
mov
cmp
cmp
aaa
dec
sub
jmp
movsb
dec
xchg
xlat
add
pushl
inc
pushl
test
xchg
dec
cltd
es
incl
ljmp
cmc
adc
jmp
lcall
mov
gs
fsin
shl
mov
js
pop
fisubs
incl
lcall
mov
shll
xchg
jmp
pop
push
mov
inc
jmp
xor
adc
lea
fstpt
jmp
cmp
cmp
jmp
incl
bnd
nop
fisubrl
jecxz
loop
fwait
pop
jp
cmp
dec
adc
jmpw
mov
call
ljmp
sub
jle
mov
xchg
cwtl
test
fs
cmp
sbb
mov
adc
inc
clc
cs
push
mov
cmp
cmc
pop
mov
ds
pusha
call
mov
cmpsl
incl
jl
nop
lcall
add
cmp
hlt
inc
call
xchg
shl
aad
inc
call
mov
pusha
lcall
pop
sub
or
mov
ljmp
lods
xor
push
mov
jne
pop
pop
outsl
xor
stc
cmp
cmp
decl
inc
jl
mov
mov
push
cmpsb
pushl
fwait
cmp
insb
or
mov
sub
lcall
lcall
leave
add
mov
out
mov
add
pop
pop
fwait
mov
aas
lret
mov
cmp
pushl
stos
lcall
add
xchg
mov
call
ljmp
pushl
mov
sar
jne
shlb
shlb
movsb
lcall
pop
cmp
mov
arpl
dec
dec
sub
fwait
cmp
inc
jmp
pushl
jle
decl
pop
sbb
xor
inc
jmp
xchg
lock
mov
mov
add
dec
inc
ljmp
fstl
mov
mov
dec
jecxz
sbb
lods
xor
call
jmp
fisubrl
js
test
cmp
sub
ja
call
stos
mov
dec
xor
fiadds
push
mov
dec
fs
in
inc
jmp
call
push
mov
in
jmp
jle
and
shl
incl
jecxz
mov
in
outsb
xchg
jecxz
ljmp
jns
int3
xlat
lock
or
pushl
ret
jmp
mov
push
outsb
mov
adc
adc
dec
jg
notb
test
call
add
dec
scas
dec
sar
fsubrs
lcall
call
pop
pop
mov
mov
pushl
aaa
mov
cmp
inc
cli
pop
push
jmp
call
mov
push
adc
in
inc
fildll
decl
or
jnp
mov
pushl
cmp
lcall
in
in
pop
add
clc
inc
jmp
rcr
xchg
push
call
cmpsb
jmp
jp
in
arpl
jle
jmp
daa
incl
enter
inc
lcall
lcall
push
mov
js
pop
lock
push
lods
lcall
ret
nop
out
into
adc
pop
aas
shll
mov
mov
incl
jmp
jle
push
loopne
mov
pushl
aaa
aam
mov
incl
call
movsb
jmp
lcall
adc
mov
das
mov
ljmp
cwtl
mov
dec
ds
fldl2t
scas
cmp
enter
fsubrl
dec
push
xor
jecxz
dec
dec
push
push
or
call
mov
call
push
fistps
inc
jmp
pushl
xchg
xlat
fmul
icebp
loope
mov
imul
xchg
nop
inc
jns
sbb
arpl
xchg
popa
decl
jp
mov
stc
ljmp
push
call
lret
sbb
negb
outsl
jbe
dec
into
jb
out
mov
xchg
enter
daa
push
mov
adc
fldt
call
popf
push
cmp
add
sub
fwait
mov
push
lcall
cmp
mov
or
fldenv
decl
incl
dec
loope
aaa
inc
lcall
decl
push
add
call
mov
in
adc
sarb
jl
decl
outsl
repnz
add
dec
pushf
mov
call
sub
pop
xchg
aas
push
scas
pop
push
cmp
hlt
pop
dec
test
ficomps
call
hlt
push
xor
test
and
cs
aam
scas
dec
mov
mov
scas
mov
mov
dec
icebp
fyl2xp1
push
incl
rclb
cmp
lcall
arpl
cmp
cmp
push
pop
inc
ljmp
mov
int3
sbb
faddl
xor
and
add
lcall
repnz
jp
call
std
jo
ljmp
fidivrl
xor
lcall
movsl
ljmp
out
sbb
and
icebp
lcall
mov
lock
call
lret
push
mov
lock
pushl
lcall
or
inc
ljmp
mov
mov
push
jl
push
mov
mov
adc
or
adc
push
jmp
jge
lcall
xchg
loopne
adc
push
jle
inc
decl
xchg
iret
sbb
pop
pop
push
jmp
enter
iret
insl
idivb
inc
incl
push
xchg
ficoms
incl
ljmp
xchg
fwait
and
fnstsw
inc
ljmp
jae
inc
pushl
cmp
mov
outsl
aaa
dec
into
sbb
push
pop
jg
pop
inc
ljmp
ret
ljmp
cmp
mov
outsb
adc
ret
pushl
dec
lret
jmp
and
xor
pop
aas
jmp
incl
jmp
pop
fs
dec
int3
sub
gs
mov
call
cmpsb
jp
xchg
iret
inc
pushl
cmpsl
call
mov
clc
popa
cmp
fidivrs
push
das
mov
xchg
push
and
jge
jmp
pop
xchg
mov
pusha
jns
adc
bswap
pop
lcall
jmp
pushl
call
shlb
stc
or
aad
loopne
jmp
xchg
and
outsb
fistps
pushl
mov
cmp
incl
decl
jno
iret
add
mov
dec
aaa
pop
das
adc
mov
mov
cmp
nop
test
negb
test
jmp
incl
cmp
ljmp
stos
in
mov
xor
mov
mov
push
dec
mov
ljmp
mov
xor
ljmp
cmp
mov
add
ljmp
sbb
lcall
pushl
mov
xchg
mov
pop
jg,pn
movsl
incl
call
ljmp
call
jge
jnp
shrl
decl
loopne
cmp
pushl
jo
arpl
adc
inc
incl
fsubr
mul
jmp
faddl
stos
push
and
mov
je
lods
inc
mov
insb
int3
fbld
imul
mov
dec
arpl
jnp
fldcw
push
inc
inc
jmp
ja
cmp
or
lcall
adc
or
xor
fwait
clc
mov
dec
pop
xchg
mov
imul
fdivl
push
lcall
mov
or
cltd
and
cmp
push
in
lock
jne
sub
call
pop
cmpsb
call
xor
ljmp
test
pop
push
dec
fcomps
mov
sbb
in
ljmp
mov
jmp
sub
mov
ljmp
push
mov
add
pushw
pop
pop
inc
fnstenv
adc
jge
jmp
pushl
cmp
cmp
lcall
and
xor
stos
imul
or
ja
stc
mov
jecxz
jnp
sti
add
mov
cmp
pushf
xchg
mov
or
popa
push
pop
ds
call
jl
add
jnp
incl
pushl
sub
pushf
stos
and
jae
arpl
ljmp
push
lock
outsl
dec
inc
lcall
xchg
mov
mov
mov
adc
fidivs
pushl
pushl
dec
scas
xor
in
jp
mov
inc
pushl
jmp
loop
jne
std
lret
mov
loopne
dec
in
or
jge
jle
xor
lcall
push
sbb
inc
pushl
lea
loope
fdivl
add
pushl
pop
jns
adc
sbb
rdpmc
inc
aas
lcall
and
in
inc
decl
hlt
scas
mov
call
icebp
mov
cmp
call
pop
jge
int3
in
push
mov
xor
mov
jnp
stos
dec
stc
fptan
push
sub
inc
lcall
push
sbb
and
mov
fsubrl
incl
inc
decl
or
dec
mov
popf
push
jmp
decl
jo
xor
sbb
ja
jle
mov
jmp
decl
xchg
inc
pushl
jge
data16
in
in
fsts
lahf
inc
decl
xchg
cmp
pushf
mov
rorl
incl
ret
call
fwait
decl
ss
jmp
or
push
rol
jmp
push
lods
popa
call
pop
jg
sub
fdivs
or
xchg
outsl
push
sbb
jmp
cmp
xchg
arpl
mov
sti
dec
mov
jno
sub
incl
xlat
pop
jae
jmp
push
ror
and
sub
int3
adc
cmc
sbb
sahf
faddl
add
jg
mov
vcvtsd2si
loope
mov
cmp
jge
dec
cld
shrb
iret
jno
pushl
push
or
imul
xor
cld
mov
ljmp
inc
cmp
pushl
add
pushl
or
cmp
xlat
fstpt
cmp
incl
je
ljmp
iret
ds
insl
lcall
ss
adc
pop
or
lcall
popf
jle
pushl
lcall
or
mov
jmp
mov
cmp
lods
or
stos
stos
inc
ljmp
in
pop
out
lea
jmp
pushl
cli
sbb
adc
js
insl
ds
xor
push
and
test
pop
xchg
lea
sbb
sub
mov
add
jmp
call
fwait
xor
decl
incl
movsb
out
and
mov
sbb
dec
add
mov
cwtl
imul
mov
dec
xchg
sar
call
je
ret
pushl
ljmp
xchg
add
mov
ljmp
lcall
mov
call
insb
mov
lahf
cmp
ds
sbb
push
push
lret
mov
insb
sub
xchg
push
lcall
and
cltd
sar
cmp
adc
incl
stos
push
mov
incl
jmp
cmp
pop
inc
cmp
pop
gs
roll
jo
pushl
decl
lcall
mov
push
pop
jmp
call
push
lret
out
mov
add
decl
jmp
mov
fldl
rcrb
adc
outsl
pusha
jmp
cmp
ljmp
sub
ljmp
movsl
ljmp
mov
ret
decl
or
lret
insl
or
aad
std
push
ljmp
push
cmp
mov
rcr
dec
inc
decl
in
add
or
loope
mov
push
pop
xchg
test
pushl
aas
test
js
out
jnp
pop
lcall
add
cld
mov
into
push
xchg
and
xchg
or
sahf
shrb
push
pushf
inc
call
xchg
mov
lcall
sti
cmp
call
jle,pn
fidivrl
scas
aas
test
adc
jmp
daa
lcall
cmp
fldcw
lcall
mov
dec
ss
std
cmp
ljmp
ljmp
jmp
jl
test
std
out
scas
test
mov
nop
call
outsb
sti
sbb
fucomi
fcomp
lods
adc
xchg
push
incl
jle
sbb
call
outsb
sti
pop
jo
push
lcall
jle
ret
fadds
jmp
push
mov
in
insb
pop
fistpll
inc
ds
lcall
sar
cmp
enter
jl
ljmp
into
xor
decl
ret
pushf
mov
and
test
fistpll
push
test
imull
push
jb
sbb
cmp
scas
popf
scas
loope
sub
adc
xchg
push
mov
scas
sar
repnz
mov
das
cmp
sub
daa
sti
test
cmp
mov
clc
or
pusha
jmp
ljmp
and
cmpsl
decl
inc
mov
jecxz
pop
int
pushl
mov
jbe
repnz
lcall
je
decl
xchg
sbb
jbe
repz
pushf
jecxz
mul
ljmp
pushl
lea
xchg
push
cmp
mov
popa
ljmp
jmp
pop
lret
cmp
pop
jmp
push
inc
pushl
inc
jmp
jmp
incl
fcmovu
test
cmp
dec
decl
or
imul
call
ss
call
decl
ljmp
decl
mov
xor
sub
fwait
and
out
nop
movsb
jmp
ljmp
pop
sbb
mov
add
pushl
and
das
aas
aaa
lcall
mov
decl
xor
pushf
jne
xor
pusha
ljmp
shlb
movsb
ljmp
adc
dec
xchg
cwtl
mov
pop
call
decw
incl
fidivrs
or
daa
call
incl
jmp
adc
xor
mov
stc
repz
call
mov
pushl
jnp
aad
mov
stos
or
xchg
cmp
fnstsw
jmp
jmp
xor
mov
decl
pushf
sub
mov
mov
lret
or
mov
decl
mov
pop
stc
mov
in
pop
push
rcr
popa
push
xchg
in
sbb
pop
fistpll
nop
mov
pushl
mov
inc
cld
xlat
insl
jecxz
or
pushl
and
int
pusha
jmp
stc
ja
scas
or
aad
fisubl
decl
insl
dec
iret
sahf
mov
sub
pusha
ljmp
call
dec
jge
mov
push
mov
ljmp
jle
dec
xchg
call
iret
movsb
out
into
hlt
das
xor
sub
js
decl
jmp
jmp
lret
mov
cltd
in
fs
stc
mov
lock
enter
cs
add
jmp
outsb
sbb
pushl
decl
jb
pushl
and
xlat
outsb
xchg
add
jecxz
pop
lods
sub
jl
cmpsb
ljmp
pop
lcall
xor
jl
incl
jmp
dec
ja
inc
pushl
pop
icebp
push
call
mov
jnp
lea
stos
mov
insb
fisubrl
out
loope
dec
inc
push
push
frstor
incl
lcall
lret
xchg
push
fnstcw
and
ficoml
add
decl
int
cmpsb
clc
add
decl
daa
pushl
and
scas
aaa
mov
sub
sbb
dec
xchg
pand
decl
ret
add
incl
sahf
jae
push
loop
sub
lret
inc
incl
cmp
incl
lods
jb
cli
jge
decl
divl
and
into
inc
call
push
sub
inc
decl
sti
pop
dec
insl
callw
mov
dec
cli
iret
cld
outsl
inc
sti
stc
and
adc
movsb
lcall
cmp
push
mov
mov
call
decl
jg
lret
mov
lcall
cmp
lcall
add
mov
jae
jae
xchg
int3
xchg
out
pop
js
incl
lahf
enter
lods
push
aas
mulb
pop
call
jecxz
filds
daa
incl
inc
lcall
call
and
xor
daa
pushl
cmp
mov
pushl
lcall
int3
fildl
jmp
adc
sub
mov
cld
pop
dec
jmp
and
imul
add
lcall
ds
mov
mov
inc
call
arpl
pushf
jne
incl
pusha
jmp
jg
jmp
cmpsl
decl
cmp
mov
sar
jl
push
push
sahf
cltd
hlt
stc
pop
adc
into
sbb
inc
decl
add
jmp
decl
ljmp
imul
ljmp
sub
push
call
int
xchg
push
cli
clc
add
jle
mov
xchg
cmp
aas
sub
adc
clc
movsb
decl
in
xchg
xor
gs
jns
imul
ljmp
in
adc
xchg
or
cmp
jnp
test
cmp
repz
ss
mov
ljmp
jl
cmp
mov
lcallw
aad
fxch
test
pop
mov
inc
inc
pushl
pop
dec
lahf
and
dec
cmp
sbb
mov
jbe
dec
cmp
push
cmp
sub
or
mov
inc
incl
jae
decl
out
mov
dec
mov
stc
ds
decl
and
mov
mov
pushl
pop
stos
sahf
cmp
decl
decl
jnp
call
jg
test
push
scas
lock
mov
lcall
cmp
ljmp
jge
pushf
or
jl
int3
in
push
jge
decl
pushl
dec
pop
divb
stos
push
call
mov
out
ss
adc
mov
dec
sub
xor
inc
call
xchg
lret
jle
push
dec
jp
cltd
jp
sub
fdivrs
fcompl
xor
fs
jns
popf
mov
pushl
ljmp
int
out
jle
inc
ljmp
ljmp
mov
icebp
fdivrp
dec
xor
ljmp
jmp
add
ljmp
insl
dec
js
mov
icebp
sub
add
dec
and
mov
sbb
mov
push
inc
ds
mov
addr16
cmp
call
or
cli
shlb
decl
adc
decl
int
adc
in
jo
incl
inc
decl
ljmp
repnz
call
jo
insb
xchg
test
loop
pushf
aam
mov
decl
or
xlat
or
pop
and
and
stc
xlat
scas
vmovntps
minps
jg
dec
je
leave
rolb
rclb
adc
call
jae
call
fs
mov
add
dec
inc
push
popa
incl
dec
mov
ja
jmp
incl
stc
adc
int3
or
sbb
xchg
std
push
sbb
mov
jmp
mov
sbb
decl
pop
sar
and
mov
call
mov
cmp
ljmp
cmp
mov
repz
jge
ds
or
je
jmp
repnz
pop
or
jmp
ja
xor
or
test
decl
sub
xchg
rcrb
adc
mov
mov
cmp
inc
call
out
stc
mov
jae
mov
inc
inc
pushl
lea
jnp,pt
jmp
decl
push
jmp
sar
popa
cmp
pmulhw
adc
iret
loopne
ror
push
push
jae
lcall
std
push
xor
pop
inc
call
lret
sub
jbe
popf
out
inc
lcall
add
decl
inc
fisttpll
stos
lret
mov
adc
jmp
cmp
xor
insl
js
add
lcall
or
outsb
cmp
negb
decl
or
pushl
mov
ljmp
cmpsb
mov
cmp
fwait
ret
call
adc
icebp
aaa
fstl
imul
dec
inc
lcall
pop
movsl
inc
jmp
daa
call
mov
lock
lcall
xchg
mov
cmp
movsl
jmp
incl
pushl
pushl
call
ljmp
imul
dec
pushl
iret
decl
repnz
add
sbb
out
dec
add
call
out
cwtl
jle
movsl
incl
mov
push
push
dec
adc
lcall
repz
push
pop
jmp
jmp
add
mov
scas
or
decl
mov
lret
jmp
push
push
jle
call
and
inc
incl
rorb
xchg
dec
mov
mov
lss
jge
incw
jbe
add
cmp
mov
add
decl
lcall
out
sub
jecxz
insl
aad
jbe
decl
mov
es
cli
lea
jmp
adc
mov
push
lods
cltd
arpl
jbe
cmp
inc
sti
dec
xchg
ret
decl
jnp
jge
dec
sub
jge
outsl
mov
pop
mov
mov
insb
int3
cmp
jmp
jmp
jp
fnstsw
call
dec
cmp
int3
ss
xchg
mov
adc
inc
ljmp
and
stos
xchg
jp
adc
sub
jmp
decl
jmp
mov
out
dec
mov
iret
and
cmpsl
jmp
sbb
inc
dec
inc
fadds
dec
lcall
lcall
and
inc
in
popa
incl
jmp
decl
xchg
inc
incl
decl
setp
mov
fucomip
out
out
dec
cmp
outsb
push
mov
incl
adc
cwtl
dec
jae
shrb
mov
incl
movsl
jmp
mov
cli
pusha
cli
sub
dec
mov
out
in
lret
aad
cmpsl
fistpll
pop
jae
call
dec
imul
int3
pop
inc
inc
filds
fwait
ja
decw
cmp
cmp
jmp
popl
inc
ljmp
jp
fbstp
decl
mov
cmp
cmc
test
in
mov
nop
mov
sti
and
xor
pop
mov
lret
jmp
mov
push
lea
ljmp
lret
dec
pushl
test
or
scas
jo
fmull
sbb
fdivrl
incl
ljmp
sub
adc
scas
ja
es
mov
insl
sub
or
test
clc
or
leave
decl
int3
push
and
gs
lcall
outsb
fnstsw
push
decl
push
decl
jmp
xor
jmp
and
sbb
lea
pusha
jmp
mov
xchg
mov
lahf
sar
cmc
das
add
or
sahf
lret
sarb
mov
in
lcall
xor
incl
call
sbb
push
call
add
adc
sbb
pushf
inc
in
xchg
mov
jmp
pop
fidivrs
scas
xor
incl
pushl
and
xchg
cltd
push
mov
dec
push
or
call
pop
sbb
dec
xor
icebp
adc
dec
push
jae
dec
push
and
xchg
arpl
inc
incl
push
cmp
jmp
incl
push
inc
jmp
stos
inc
call
jne
xor
lcall
decl
mov
add
mov
hlt
cmp
push
jne
add
call
mov
pop
inc
decl
mov
add
ficomps
inc
jmp
jae
mov
decl
xlat
pushf
fsubrs
mov
test
nop
dec
out
inc
js
incl
lcall
stos
shr
adc
pop
jge
pop
add
lcall
mov
incl
and
cmp
xchg
inc
jmp
jmp
pushl
push
lock
fchs
incl
pop
sbb
out
fildl
decl
sbb
and
mov
pop
ds
push
jmp
mov
decl
js
loope
adc
inc
lcall
popa
in
sar
dec
mov
pushl
decl
push
decl
inc
lcall
sbb
or
push
mov
lea
or
lret
push
jg
pop
sub
inc
pushl
daa
lcall
pushl
push
jmp
ljmp
fwait
mov
ljmp
inc
jmp
push
pop
pushl
daa
lcall
mov
lcall
dec
jmp
jecxz
decw
mov
aad
inc
jmp
call
mov
push
dec
loopne
jge
imul
shlb
mov
scas
fistl
incl
rorl
cmpsb
call
lock
mov
cmp
mov
test
inc
inc
fcom
scas
jbe
scas
call
cpuid
call
fxch
out
adc
stos
cld
into
aaa
push
push
jmp
ljmp
mov
call
mov
lcall
and
clc
add
cmp
jmp
cwtl
add
shll
mov
pushl
and
loope
mov
and
xchg
and
jg
loop
push
mov
in
jne
jge
adc
outsb
xchg
adc
pop
xlat
decw
stc
mov
add
dec
rcll
pop
notl
lcall
mov
insb
stos
jp
incl
pushl
cwtl
rclb
int3
aam
lret
jge
sub
call
mov
fcoms
push
das
sub
push
push
add
cmp
js
adc
mov
inc
jmp
scas
out
add
incl
xor
insb
hlt
repz
mov
jbe
lcall
jmp
dec
adc
jbe
imull
test
push
jge
das
sub
call
out
mov
or
jo
pop
in
inc
ljmp
cmp
rol
jmp
pushl
mov
int3
pop
add
loop
xor
mov
jl
aaa
mov
fs
cli
push
mov
cmp
ljmp
cli
push
lahf
lock
mov
dec
cmp
mov
mov
xchg
arpl
cmp
leave
hlt
sbb
cld
in
test
jecxz
scas
cmp
test
loop
or
das
pusha
ljmp
lret
mov
mov
sbb
mov
rorl
sub
mov
pushl
jne
insb
lret
loop
xor
call
dec
pop
decl
incl
xlat
and
sar
push
dec
test
test
gs
fldln2
sbb
or
nop
mov
sbb
incl
call
dec
push
xchg
hlt
dec
insb
jns
fdiv
ja
adc
sbb
inc
call
popf
sub
fsts
push
cmp
stc
not
adc
fstpt
sbb
decl
xchg
inc
decl
xlat
push
xchg
lahf
jle
aaa
rol
fmuls
fcomps
aaa
movsl
jmp
jmp
pushl
decl
fisttpl
jle
decl
inc
inc
push
cltd
lahf
xor
or
idivl
jne
ficomps
xchg
push
xchg
mov
mov
aas
or
decl
adc
mov
arpl
repz
mov
cmp
dec
shl
out
jb
mov
jmp
mov
cltd
jnp
jmp
xor
aaa
mov
test
js
lcall
cmpsl
aas
adc
mov
add
decl
popa
lcall
jno
mov
incl
sub
dec
mov
ds
add
lcall
pop
add
mov
mov
dec
inc
pushl
push
pop
and
lret
mov
ret
sbb
xchg
lods
inc
decl
pusha
pushl
cltd
lret
inc
jmp
ljmp
dec
push
ljmp
rclb
jmp
fcompl
jno,pn
rcll
pushl
je
pushl
fdivrp
cwtl
dec
mov
pop
add
call
pushl
int3
aam
cmp
insl
pop
mov
xor
and
ljmp
fwait
movsl
ljmp
fnstcw
jmp
decl
jnp
lahf
mov
xchg
cmc
xchg
and
fstl
lahf
mov
cmp
pushl
shll
pushl
or
mov
push
test
lods
xchg
xor
cld
jmp
jmp
decl
ljmp
ljmp
push
mov
xor
rorb
cmpsb
decl
pushf
in
sbb
fadds
and
and
sar
inc
in
incl
pushl
call
lcall
jmp
pop
mov
outsb
dec
inc
call
imul
insl
sbb
stc
xor
cmp
call
incl
call
sbb
push
out
pop
mov
shll
inc
pushl
xchg
xor
ljmp
cmp
push
int3
imul
or
imul
lea
pushl
sbb
dec
adc
decl
in
add
fisttpl
xchg
push
push
ljmp
fwait
callw
lret
out
mov
decl
hlt
jb
push
decl
ds
lcall
mov
push
enter
xchg
sub
pop
incl
sbb
lcall
pop
mov
or
cmp
clc
imul
int3
sub
rcrb
jo
sub
jle
ljmpw
inc
decl
pop
outsb
mov
ss
pop
jb
mov
sub
fwait
enter
lods
push
je
sbb
call
je
sub
sub
test
xchg
xchg
add
inc
jmp
mov
frstor
adc
lcall
lcall
lcall
and
cmp
jmp
xlat
xlat
call
pushl
scas
outsl
testb
ljmp
sbb
pop
decl
sub
in
inc
jmp
jge
test
lret
scas
lea
jno
xor
inc
jmp
pushl
stos
loope
adc
push
ret
fcoml
sar
rolb
fs
jmp
lret
fwait
sub
cld
inc
call
iret
pop
mov
add
pushl
xor
mov
cltd
push
leave
adc
mov
push
sar
imul
mov
testl
push
cmp
out
repnz
add
daa
decl
scas
adc
jnp
incl
call
xor
pop
jmp
call
pushf
fnsave
push
cmp
adc
fbld
stc
xor
je
mov
lahf
mov
cmpsl
jnp
jmp
insb
or
sahf
inc
call
data16
out
lcall
inc
dec
lock
xchg
pop
lods
or
add
decl
imul
lcall
cmp
decl
loopne
push
lret
xor
pushl
decl
adc
push
ja
jp
fistpll
dec
ljmp
lcall
call
int3
lret
inc
pushl
sbb
jo
mov
loop
decl
jmp
aas
pusha
call
add
pushl
clc
jo
pop
call
pop
jns
and
mov
sti
fldenv
mov
pop
cltd
xor
inc
call
fcomps
inc
incl
inc
decl
xchg
lods
inc
fisubrl
push
pop
push
popf
xchg
jbe
addr16
mov
sar
incl
dec
mov
cmc
adc
pushl
outsl
add
mov
call
xor
and
mov
ljmp
stos
sub
out
outsl
push
ljmp
mov
dec
jp
cmp
shr
das
push
cmc
loope
ret
pop
jmp
in
xor
inc
incl
pop
std
mov
repnz
sbb
incl
pushl
lcall
sbb
loop
jns
cltd
add
jmp
mov
enter
push
rolb
jmp
lcall
push
in
mov
push
outsl
out
mov
aad
push
jae
mov
cmp
ljmp
dec
je
adc
or
pop
cmp
xchg
mov
jmp
stc
cli
mov
repz
std
loop
pusha
mov
fcoml
jg
pop
je
out
loope
scas
cmp
int
insb
jae
call
decl
call
fsubl
fiadds
div
adc
sub
push
jns
dec
jb
or
xchg
add
mov
std
cltd
dec
push
push
xor
call
std
push
add
lcall
call
and
cs
or
sti
jns
sub
pop
incl
mov
out
cmp
ljmp
cmp
cmp
add
incl
mov
call
insb
decl
incl
mov
lods
sbb
jae
inc
jmp
ljmp
adc
scas
and
mov
mov
in
in
or
sbb
in
inc
ljmp
xor
or
pop
jnp
jno
pushl
add
int3
call
inc
lcall
jbe
mov
repz
aam
ret
jmp
decl
mov
lcall
das
mov
fldenv
je
push
arpl
in
and
dec
pushl
cmp
push
xchg
test
out
ss
jle
incl
decl
into
or
push
sahf
stc
xor
mov
mov
add
jmp
fnsave
add
jmp
dec
outsl
mov
sbb
jl
test
popa
pushl
push
xor
jmp
inc
jnp
pusha
lcall
jmp
inc
jmp
jmp
ljmp
daa
lcall
dec
pop
fcomps
xchg
push
xor
fisubrl
loopne
iret
stos
rcr
call
out
and
adc
jmp
or
mov
mov
inc
push
mov
repz
mov
dec
decw
stc
jle
aad
pop
test
push
jmp
movsb
mov
repnz
lcall
mov
mov
push
ss
jmp
mov
incb
call
daa
jmp
fisttps
test
sar
pushl
iret
sub
inc
jmp
ljmp
adc
lahf
loopne
mov
sub
jmp
outsb
xchg
sub
dec
add
mov
dec
mov
xor
push
lret
hlt
lods
imull
jnp
incl
imul
mov
incl
mov
incl
call
jmp
dec
sub
jmp
lcall
xchg
incl
and
mov
push
ljmp
decl
pop
mov
out
repnz
cli
push
add
ljmp
fisubl
sbb
add
xor
jo
add
jg
push
push
daa
lcall
and
lret
je
ss
test
cmp
xchg
cmp
clc
frstor
or
ljmp
call
mov
in
insb
icebp
jne
mov
push
push
ljmp
pop
mov
or
ljmp
cmc
sti
repz
cltd
out
add
lcall
mov
dec
push
mov
popa
call
mov
and
jmp
fmull
call
int3
rolb
jp
idivl
out
push
sahf
mov
and
decl
cld
lods
out
or
int3
lods
push
loop
mull
mov
fldcw
stc
frstor
into
fwait
dec
in
and
imul
push
popa
in
mov
xlat
test
inc
decl
jae
ljmp
sub
jmp
mov
test
fimull
xchg
pop
xchg
in
fldenv
imul
and
insl
imul
repnz
je
ljmp
mov
fs
jp
imul
rcr
pop
movsl
jmp
jmp
ljmp
cmp
inc
fisttps
ljmp
call
dec
xchg
add
cli
mov
jns
ljmp
call
push
sti
pop
aas
pop
ljmp
jmp
inc
ljmp
lcall
jae
ljmp
add
jae
push
cs
incl
cmp
jmp
dec
fwait
cmpsb
ljmp
or
call
cmp
inc
pushl
mov
sbb
sar
cld
decl
ljmp
dec
imul
pop
jg
scas
fisubrl
mov
inc
lcall
stos
or
cmp
jne
ficompl
jne
pop
jp
xor
dec
cmp
leave
add
call
cs
xchg
lcall
call
or
fisttps
xchg
sub
push
xchg
cmp
js
pushl
jo
xor
dec
fldcw
add
cmp
pushl
pop
jp
sahf
callw
mov
test
into
add
sub
cmp
ljmp
dec
decl
add
jmp
jp
incl
push
add
lcall
jne
inc
dec
ja
pop
ret
pushl
push
incl
dec
and
adc
jmp
cmp
jmp
ljmp
add
call
call
fdivs
lcall
ror
mov
test
ljmp
jl
xor
mov
fdiv
int3
ret
decl
call
lahf
cmp
sti
insb
popa
dec
rcl
mov
aaa
jo
or
aas
stc
sar
cmp
push
push
add
incl
pushl
jle
add
decl
jmp
jle
insb
add
call
fildll
ret
dec
mov
pushl
je,pn
iret
xchg
das
je
cmp
and
lret
push
sub
sbb
lods
lret
das
out
fsubrs
fnstcw
js
cltd
cwtl
sbb
jmp
test
arpl
mov
xor
mov
cmp
call
cli
scas
mov
ja
sar
lcall
jmp
ret
jle
test
hlt
dec
fsubr
adc
arpl
stos
pushl
das
push
and
mov
shlb
pushf
mov
leave
inc
incl
nop
sub
pushl
push
adc
mov
push
push
fsubl
jmp
sar
testl
ret
jge
or
jno,pn
cmp
or
xor
fdivr
insb
fcmovb
inc
incl
cmp
and
add
fnstcw
pop
mov
mov
out
cltd
adc
aam
jmp
out
dec
mov
pop
push
pop
in
mov
mov
lock
xor
jmp
sbb
incl
add
call
aas
pop
out
and
notb
inc
lcall
call
cli
dec
sub
jmp
decl
jns
xor
add
jmp
cmp
ljmp
push
test
out
out
sbb
test
lea
mov
cmp
fsubp
jmp
lcall
cmpsb
decl
or
jns
dec
sub
aam
pop
cmp
mov
mov
inc
jmp
pushl
mov
adc
fst
xchg
test
pop
mov
cmp
mov
pop
and
add
decl
push
inc
mov
inc
call
jmp
jmp
decl
pushl
add
pushl
and
push
xchg
ftst
inc
ljmp
lcallw
stos
ljmp
dec
push
jno
lcall
pop
add
lock
and
or
mov
or
mov
cmc
xor
nop
add
inc
decl
das
fmul
popf
add
lcall
xor
repnz
pusha
decl
xchg
cmc
mov
cli
es
push
fidivl
ljmp
jmp
incl
add
decl
jecxz
ffreep
fucomp
sub
inc
decl
cmp
push
outsl
test
ljmp
push
fisttpl
stc
adc
jmp
cs
nop
jae
iret
cwtl
ljmp
xlat
cwtl
out
sub
decl
inc
call
mov
mov
pushl
out
add
push
and
fisubs
mov
mov
int3
jae
pushl
call
flds
call
idiv
mov
mov
fldenv
xchg
dec
lret
pop
out
mov
hlt
mov
inc
inc
jmp
pushl
mov
mov
sar
pusha
jnp
scas
cmpsl
jmp
rorb
sarb
jmp
xchg
ret
jbe
stc
or
lcall
lahf
sbb
test
fstpt
cmp
inc
ljmp
out
mov
cmp
add
pushl
mov
pushl
scas
xor
ljmp
mov
jp
mov
mov
lret
mov
push
mov
jg
call
add
jge
imul
jle
pop
mov
jl
call
jo
inc
pushl
mov
cld
push
add
mov
xchg
stos
lods
add
decl
sub
sub
mov
incl
incl
lcall
cmp
sbb
mov
fs
jge
movsl
incl
mov
incl
mov
lahf
loop
sbb
cmpsb
fldenv
mov
pushl
shlb
dec
ss
xchg
mov
lret
das
fistps
pushl
idiv
sti
mov
pop
pop
cld
xor
arpl
in
or
dec
and
out
jae,pn
out
and
mov
sbb
das
jbe
inc
decl
call
inc
incl
incl
