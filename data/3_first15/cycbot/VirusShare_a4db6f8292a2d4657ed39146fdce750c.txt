nop
dec
rol
mov
add
adc
fsub
data16
stc
leave
add
add
jl
sub
fmuls
mov
cmpsl
bound
mov
jg
popa
inc
add
pop
testb
add
xchg
cwtl
nop
add
add
add
mov
add
lea
jns
add
int3
adc
add
adc
aaa
loopne
outsl
cmovae
add
add
add
add
cmp
push
xor
mov
add
xor
cmp
add
add
loopne
sub
add
sub
add
insb
stos
push
addr16
mov
add
nop
add
xlat
cltd
out
shll
mov
gs
data16
add
pop
push
jle
add
lods
aaa
fsubs
push
rcll
sub
repz
mov
xor
and
mov
add
add
add
imul
adc
sub
std
dec
dec
xor
stos
rolb
mov
pop
mov
arpl
cmpsb
add
mov
ja
add
jl
or
jb
sbb
add
add
stos
mov
xor
sub
add
xor
stc
ret
add
fsts
data16
dec
mov
cmp
add
add
inc
add
sub
mov
pusha
add
stos
lock
int
add
jne
dec
mov
hlt
add
add
cmp
ret
mov
jb
sub
add
sbb
imul
mov
cmp
push
add
or
sahf
or
mov
lds
add
pop
cmp
inc
add
push
data16
dec
jecxz
add
add
push
add
sub
add
cld
dec
enter
jg
push
xchg
jl
add
xlat
cmp
add
in
and
mov
xchg
push
add
mov
add
and
mov
inc
popa
pop
mov
lock
rolb
push
add
ret
sbb
add
add
add
je
cmp
outsl
inc
rcl
add
mov
cltd
jae
add
loop
addr16
movsb
add
add
add
add
pop
adc
stc
rolb
aas
inc
inc
in
push
in
jmp
add
cwtl
jle
adc
lds
mov
dec
mov
scas
sbb
enter
mov
add
iret
push
sahf
jnp
xchg
outsb
push
loope
add
lea
jnp
mov
data16
mov
pop
pop
incl
jb
mov
add
xchg
add
movsb
add
inc
add
or
sahf
and
push
mov
add
add
pop
pop
icebp
jo
addb
mov
mov
unpcklps
incl
lret
js
sti
sbb
push
push
add
cmp
cli
sti
rolb
add
add
jno
add
or
cmp
add
pop
testb
add
add
add
add
mov
lods
jbe
in
je
push
aad
bound
mov
js
cmp
dec
rolb
add
xchg
xor
jno
stos
out
xor
add
mov
push
lea
inc
pop
arpl
add
test
sub
add
or
pop
bound
mov
mov
out
dec
xor
add
adc
add
add
mov
add
add
adc
push
in
mov
pop
pop
movsl
inc
add
mov
movsb
add
jp
lods
mov
call
add
add
lock
mov
pop
xchg
sub
add
ja
mov
cmp
add
aaa
lret
mov
add
mov
mov
push
add
jmp
lcall
add
add
addb
add
add
jns
push
int3
push
movsb
add
stc
xchg
add
bsf
test
add
xor
mov
push
add
adc
ffreep
add
inc
xchg
add
cs
sub
shl
add
leave
cmp
pop
xchg
and
jno
lea
es
cltd
add
mov
or
add
pop
popa
dec
mov
xor
stos
pop
xchg
inc
add
add
add
add
xor
add
add
outsb
sbb
pop
test
cmpsl
popa
mov
xor
dec
dec
inc
shll
ds
mov
ficompl
lret
add
add
addb
add
ret
cmp
add
xor
mov
or
mov
xor
pop
mov
mov
add
mov
popa
xor
call
pop
xchg
add
inc
cmp
inc
inc
push
popa
sbb
add
pop
add
push
add
cli
sbb
xor
xchg
pusha
add
mov
push
add
cltd
lahf
data16
rol
movsl
add
cwtl
mov
add
mov
lahf
xchg
add
sbb
xor
jae
enter
dec
add
mov
pushf
notl
dec
xor
or
sbb
loopne
xlat
xchg
add
jns
xor
push
add
sub
add
or
or
cltd
and
scas
mov
xchg
loopne
push
add
xchg
aad
jle
add
mov
sbb
adc
pushf
push
test
jmp
lahf
sbb
add
imull
add
mov
add
adc
pop
test
bound
mov
or
sbb
jnp
inc
add
lcall
xchg
test
mov
xor
aad
or
add
ja
ret
jo
in
enter
pop
cmp
push
sbb
lods
in
pushf
push
add
out
repz
mov
insb
cli
and
add
add
lahf
or
push
mov
cmp
xor
lret
adc
popa
cmp
add
bound
mov
push
jbe
jecxz
popf
mov
add
add
cmp
jne
pop
dec
aaa
pop
test
data16
mov
cs
pushl
mov
add
sbbl
add
pop
sub
ret
adc
push
jp
add
in
and
sbb
sbb
clc
shrl
sub
dec
les
data16
movsl
daa
testl
add
add
add
mov
or
add
adc
outsb
lods
adc
and
mov
aam
cmpsl
das
and
add
inc
add
out
pusha
add
add
dec
adc
ret
cs
xor
stos
mov
add
pop
mov
adc
std
and
mov
loope
mov
cmp
add
mov
add
adc
push
add
pop
xor
icebp
adc
cli
jge
test
cli
test
push
add
add
shll
arpl
and
or
or
leave
add
add
pop
add
add
cmp
mov
add
in
pop
sub
loopne
or
je
mov
add
dec
jb
and
xchg
orl
jno
add
add
add
cltd
lock
ljmp
add
push
je
rolb
fidivrl
xor
add
add
dec
mov
xor
pop
push
std
xor
sbb
add
inc
add
js
test
sbb
add
jl
nop
add
add
xor
inc
and
push
or
cmc
daa
in
push
add
inc
pop
nop
add
adc
and
xor
pop
mov
push
add
aad
sub
adc
add
add
add
add
add
sahf
add
add
dec
mov
std
pop
daa
cwtl
mov
adc
add
mov
in
negl
inc
push
fwait
sub
add
call
xor
fucomp
aaa
push
jecxz
add
mov
testb
stc
fcmovnbe
add
stc
mov
andl
add
add
push
add
add
mov
add
cmp
pop
fs
mov
add
loop
adc
or
mov
add
mov
test
push
add
inc
add
adc
sahf
aas
shrl
mov
or
add
sub
roll
add
std
sbb
mov
xchg
imul
je
sbb
add
add
mov
xor
add
pop
test
or
xor
xor
pop
push
add
dec
and
jle
xchg
iret
sahf
pop
xchg
or
dec
rolb
int3
mov
bound
mov
push
shl
add
in
les
adc
xor
xchg
in
push
add
add
jge
adc
push
add
add
movsl
xchg
sbb
adc
lock
add
add
xchg
in
adc
mov
mov
push
add
testb
sbb
mov
fsubl
jae
out
sub
or
addb
add
add
or
add
dec
int
xor
mov
out
and
int
add
loope
add
rolb
aad
lods
int3
xor
add
out
xchg
add
xchg
add
add
pop
nop
add
sbb
rolb
bound
mov
jbe
mov
jnp
jp
add
sbb
adc
mov
test
rolb
mov
push
add
add
mov
fimull
xor
add
mov
sahf
rolb
add
mov
cmp
or
xor
enter
sbb
jmp
add
add
inc
sub
outsb
lret
aad
add
out
lods
xor
sub
xchg
add
out
jo
sbb
sub
add
fidivl
mov
sub
jns
loopne
sahf
incl
fdivs
aam
inc
arpl
call
mov
inc
cmp
add
mov
fadds
std
sahf
inc
push
push
push
add
mov
add
add
and
jge
bound
mov
jbe
addb
pop
ljmp
je
pop
lods
pop
push
es
or
xor
push
add
jecxz
les
or
das
pop
sub
jne
hlt
add
mov
cmpsb
add
nop
add
sbb
add
mov
add
ljmp
inc
daa
pop
rol
or
ljmp
inc
int3
lcall
xchg
and
mov
cwtl
sbb
inc
add
xchg
add
add
lock
in
xchg
rolb
addb
pop
aam
cmp
pop
imul
and
xor
cmp
add
mov
sub
add
loop
add
pop
out
fdivl
stc
stos
sub
add
push
lret
inc
insb
jp
add
and
mov
add
add
int3
rolb
sahf
inc
add
in
mov
add
push
add
les
frstor
add
add
out
mov
add
les
mov
adc
jbe
and
add
push
stos
pop
sbb
xor
test
add
push
add
sub
add
fisttpl
sbb
sub
add
add
xchg
add
outsb
sti
xchg
xlat
push
add
dec
ljmp
mov
out
mov
add
sbb
xor
dec
scas
in
outsb
loop
rolb
mov
add
movsl
xor
pop
lock
addb
in
mov
add
test
mov
fnstsw
jo
cmp
add
mov
xchg
add
lcall
xor
sbb
jae
mov
push
add
clc
popa
test
inc
lock
fcoms
mov
xor
stos
mov
movsl
sub
lret
std
arpl
mov
add
clc
enter
add
cmp
mov
xchg
add
push
add
scas
cld
and
sbb
cmp
mov
add
mov
adc
push
xchg
inc
stc
mov
mov
add
mov
add
pop
cmp
lcall
add
add
xorl
jge
loope
cwtl
xor
inc
mov
xchg
jle
push
and
hlt
xchg
mov
sub
push
push
push
cld
call
sub
mov
cs
movzbl
cmp
ss
lea
push
lea
push
lea
push
lea
push
push
call
cmp
je
es
lea
cs
cs
es
call
test
jne
jmp
push
lret
icebp
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
lea
lea
sub
add
mov
sub
sub
push
pop
push
je
jmp
add
add
sbb
lcall
insl
xchg
lods
push
repnz
addr16
incl
push
cld
adc
add
ret
and
dec
xor
jno
imul
inc
add
add
add
frstor
add
add
add
rolb
add
out
in
mov
add
push
add
add
add
aaa
adc
movsl
push
add
addl
inc
add
stos
cmp
jno
add
xor
and
pop
test
mov
sub
add
ljmp
mov
jbe
into
fldt
pop
mov
mov
add
mov
repnz
add
and
mov
inc
add
mov
or
lret
out
mov
add
push
inc
mov
outsl
test
mov
add
mov
inc
add
xor
cwtl
push
lea
in
mov
sub
cmp
add
adc
rolb
leave
sub
dec
push
mov
idiv
push
inc
add
imul
push
fsubrs
inc
add
dec
fisubs
and
mov
jb
add
add
testl
daa
addb
xchg
jns
add
mov
add
mov
insl
movsb
add
xchg
add
add
add
and
mov
movb
inc
mov
add
inc
add
add
add
clc
pop
movb
cmpsb
add
add
adc
sub
add
add
pop
xor
in
movb
mov
mov
add
add
add
in
dec
sub
mov
add
add
pop
enter
mov
add
shll
add
xor
mov
sub
add
add
xor
aad
dec
mov
mov
xchg
in
jae
fisttpl
lcall
add
cltd
dec
mov
stos
cmpsl
sub
rolb
call
add
add
dec
rolb
push
fidivrs
mov
xor
addb
fisubrs
clc
mov
addr16
push
add
addr16
xor
push
add
or
add
lret
mov
add
add
ret
xchg
jle
inc
fs
dec
repnz
adc
add
add
xlat
adc
jge
add
les
xor
aaa
dec
aaa
fisubrl
flds
pop
xchg
add
cltd
dec
cmp
in
jbe
fdivrl
add
cld
fdivs
iret
xor
add
shrl
sbb
lea
scas
cltd
xchg
sbb
push
add
mov
mov
add
add
jg
xor
push
insb
mov
mov
add
pop
pusha
add
xor
mov
mov
add
sti
adc
or
mull
repz
outsb
test
sub
sub
add
mov
cmp
sahf
ja
and
rolb
std
xchg
add
add
jmp
or
mov
add
sahf
out
add
xor
pop
adc
inc
loop
jbe
adc
testb
ja
jno
add
add
out
dec
into
out
shll
add
inc
lock
fistps
xchg
mov
add
add
in
mov
imul
gs
add
mov
xchg
add
add
xlat
cmpsb
add
clc
mov
repz
jmp
add
dec
and
pop
nop
add
jle
add
add
adc
fcmovu
addl
pop
fs
add
in
cli
mov
xchg
fisttpl
and
push
ja
add
add
ret
imul
sbb
stc
mov
add
mov
fistl
in
add
gs
add
test
add
pop
push
jb
in
movsl
cltd
mov
insb
roll
add
out
mov
sub
add
out
add
add
pop
in
rorl
add
rolb
adc
add
icebp
push
add
movhps
daa
dec
out
movb
xchg
lea
sti
mov
scas
push
add
add
cmp
mov
jae,pt
test
gs
add
add
fsubrp
les
lods
mov
add
add
mov
je
daa
push
add
add
mov
sbb
or
push
pop
fsubrs
pop
dec
arpl
push
add
mov
mov
repnz
mov
das
ficoml
add
xlat
mov
add
cs
add
add
add
mov
and
pop
and
pop
push
pop
add
jae
dec
mov
stos
and
add
push
mov
adc
or
rolb
xchg
sbbl
adc
icebp
push
add
testb
scas
add
mov
mov
or
mov
add
jp
push
add
cld
dec
push
add
addb
stos
pop
xor
clc
add
add
add
stc
pop
addb
addb
or
mov
popf
and
mov
dec
xor
add
mov
mov
rolb
bound
mov
add
mov
cwtl
in
fldenv
lods
sahf
int
ficomps
inc
dec
xlat
ja
add
dec
data16
lret
mov
add
sub
add
jns
add
xchg
jp
add
ret
inc
add
out
cwtl
dec
nop
add
mov
inc
add
dec
fdiv
inc
mov
mov
xchg
adcl
dec
outsl
sub
add
adc
add
xchg
sub
cmp
inc
add
stos
push
add
test
mov
sahf
outsb
pop
cmp
out
cli
add
mov
mov
sbb
mov
pop
or
inc
mov
mov
mov
mov
cmp
add
aam
and
mov
inc
or
fildll
add
add
repnz
xor
push
add
add
int
jb
scas
push
out
cwtl
cmp
xchg
add
fiaddl
mov
loopne
mov
cld
inc
add
dec
clc
filds
add
sbb
push
sti
push
add
and
ror
add
add
dec
rolb
add
out
lcall
sahf
sub
add
add
pop
xchg
add
in
xlat
pop
aas
xor
and
mov
lcall
movsb
add
add
jecxz
data16
mov
mov
add
pop
cwtl
jle
add
add
mov
mov
addb
outsb
mov
sbb
pusha
add
add
sbb
pop
add
mov
add
jg
jno
dec
in
push
mov
jecxz
pop
jmp
sbb
aas
xchg
ja
cmpsl
cmp
in
mov
jl
leave
lds
or
or
popf
pop
cwtl
hlt
add
test
mov
add
mov
idivl
ret
lcall
mov
enter
pop
ret
mov
or
add
test
sti
mov
icebp
and
mov
popa
sbb
cmp
or
add
inc
mov
leave
lret
outsb
push
arpl
iret
sahf
pop
testl
dec
fs
xchg
xchg
scas
sbb
sti
xchg
add
movsl
mov
add
add
adc
mov
test
fwait
loope
push
pop
sub
and
mov
setno
sti
cmp
jge
arpl
or
mov
and
add
add
push
mov
sbb
jle
scas
pop
cs
push
add
add
int
bound
mov
inc
add
dec
stos
repz
add
push
add
add
and
inc
repz
add
addb
sbb
xchg
add
add
andl
add
add
shll
add
pop
fwait
ja
pop
cmp
xor
or
es
jge
jnp
add
cltd
inc
add
bound
mov
add
fnstsw
add
mov
rolb
sbb
push
adc
cmp
aam
icebp
out
dec
jne
cmp
shrl
stos
daa
push
push
movb
add
add
and
add
mov
pop
or
and
dec
les
mov
jne
fcompl
add
inc
adc
add
add
add
lret
inc
jmp
add
sbb
add
inc
add
pop
or
inc
add
add
and
icebp
adc
add
popf
inc
add
add
add
in
add
add
add
push
sub
add
pop
adc
pop
fwait
je
xchg
int3
cmpsl
je
sarl
test
testb
popa
fwait
mov
mov
add
daa
mov
loope
add
push
lcall
bound
mov
add
outsb
les
or
imull
out
mov
add
out
lods
enter
add
add
push
xchg
add
add
loop
jle
fldt
popa
xchg
add
inc
add
imul
add
sbb
insl
loop
xchg
add
pop
test
dec
add
push
add
mov
xor
repz
dec
pop
xchg
daa
or
push
add
mul
cld
stos
mov
sbb
add
and
dec
push
add
sub
add
in
mov
outsb
jne
mov
add
das
aad
push
and
cwtl
aaa
adc
std
imul
add
mov
mov
add
inc
repz
mov
xor
xchg
test
add
add
repnz
clc
jnp
loope
out
movsl
add
in
fldl
add
add
cmovo
mov
xchg
add
loop
xchg
add
scas
cmpl
cltd
mov
sub
imul
mov
test
cmpsl
cmpsl
les
out
out
sub
rolb
add
or
addb
pop
imul
add
adc
add
aam
dec
pop
ret
cmc
mov
ljmp
dec
gs
mov
pop
mov
add
dec
xchg
add
outsl
mov
add
test
add
add
mov
mov
xchg
addb
add
mov
and
mov
jecxz
push
add
xor
test
add
call
lcall
add
add
pop
stos
jg
faddl
add
xor
pop
push
add
add
out
xchg
add
add
add
ds
add
add
add
insl
mov
jmp
dec
pushf
xchg
scas
dec
pop
jne
or
adc
pusha
add
dec
ljmp
and
mov
pop
push
pop
rolb
arpl
add
add
sbb
ja
inc
add
mov
add
mov
sbb
addb
add
adc
add
aam
cmp
sbb
add
dec
add
and
cs
add
mov
pop
js
add
enter
mov
add
ret
inc
test
ret
mov
add
adc
add
je
addb
les
test
xchg
ds
xchg
inc
out
ljmp
add
add
adc
mov
or
xchg
in
shrl
add
cmp
dec
fsub
add
imul
movsl
adc
add
mov
add
pop
rolb
mov
push
add
add
cmpsb
add
dec
test
add
add
adc
add
push
xor
test
add
cld
cmp
add
cmp
mov
cmp
paddusb
mov
xor
sbbl
cwtl
cltd
mov
xor
data16
dec
push
test
push
add
arpl
add
lds
add
cwtl
jae
push
push
add
outsl
fstl
in
xchg
inc
ss
insl
addr16
push
and
pop
inc
add
ficompl
xor
xchg
adc
cmpsl
data16
mov
mov
add
add
add
stc
jge
dec
into
mov
add
xchg
add
add
fnsave
arpl
mov
testb
popf
mov
mov
rolb
lods
mov
add
rcl
popa
test
push
add
subl
lret
xlat
xlat
addl
or
fisttps
nop
add
add
pop
jb
lods
push
add
or
adc
addb
pop
adc
xor
or
daa
lret
cmp
addb
in
adc
add
fwait
imul
mov
cmpsl
hlt
add
add
mov
movsb
add
add
pushf
jecxz
add
add
fnsave
es
pop
push
add
push
add
mov
cmp
xor
adc
mov
pop
pop
in
add
jg
add
add
cmp
iret
mov
cmp
add
add
ret
push
fcomps
or
ja
xchg
out
add
nop
add
mov
sub
add
jae
repnz
or
jae
inc
add
xor
add
add
icebp
pop
js
add
or
cmpsl
mov
scas
pop
xchg
rolb
inc
mov
add
jge
add
xchg
outsb
outsb
pop
push
xchg
push
add
add
subl
fcmovnb
add
add
add
add
mov
add
mov
jb
cmpsb
add
xor
mov
add
add
xchg
adc
cmpsb
add
pop
jb
pushf
push
mov
sub
add
dec
cmc
sub
add
adc
out
rolb
lea
add
mov
lods
cmp
aas
xor
cmp
add
imul
sub
loope
inc
add
aam
mov
add
dec
xchg
push
add
add
mov
inc
add
add
add
adc
jmp
xor
jl
inc
add
rolb
roll
add
test
add
popa
rolb
pop
mov
outsl
mov
hlt
add
stos
jmp
fucomip
sahf
jbe
fcoms
sub
add
mov
cmp
add
mov
jle
mov
inc
add
fwait
repnz
push
xor
push
adc
pushf
adc
movb
leave
add
rolb
dec
lret
xchg
inc
cmp
add
ret
push
mov
add
dec
sub
or
mov
jmp
repz
push
add
add
idivl
add
cmp
add
sub
xlat
inc
scas
jo
pushl
add
bound
mov
and
mov
das
push
add
ret
insl
cs
and
mov
sbb
adc
push
add
xlat
xchg
add
add
mov
xchg
mov
add
mov
add
insl
lahf
push
scas
add
out
js
out
aam
mov
imul
push
add
add
add
mov
fnstsw
add
les
adc
pop
jecxz
jae
mov
push
add
std
mov
dec
addb
sbb
lds
pop
testl
add
xorl
pop
xor
dec
pusha
add
add
cli
xor
movsb
add
psraw
add
mov
mov
cmp
out
or
mov
jge
loopne
ret
add
add
das
add
mov
mov
add
inc
leave
mov
sub
inc
add
mov
scas
jns
add
out
rolb
or
add
scas
adc
test
shll
add
inc
add
sti
pushf
push
add
add
add
lea
jb
mov
mov
movsb
add
jmp
add
mov
add
jle
mov
mov
sti
mov
lret
mov
mov
add
mov
out
push
inc
aas
cwtl
mov
add
add
lods
or
imul
sub
mov
pop
iret
fsubr
jl
add
lds
cltd
fwait
js
faddp
jbe
icebp
imul
lds
mov
sbb
xor
mov
mov
jp
add
add
sbb
add
xchg
dec
call
add
dec
add
sub
stc
lock
mov
add
add
add
icebp
and
push
add
xchg
add
add
dec
sbb
add
loopne
icebp
inc
mov
add
out
mov
mov
jno
dec
lea
cmp
outsl
ds
aaa
jp
add
add
insb
dec
mov
dec
jae
xor
xor
mov
jle
mov
imul
push
jl
dec
jne
push
add
add
add
or
or
inc
add
call
add
addb
test
popa
jne
popf
movb
scas
add
je
pop
clc
or
add
jb
jmp
lds
add
pushf
mov
cmp
int3
stc
xor
pushf
sbb
sahf
push
add
add
fildll
dec
clc
add
mov
clc
test
and
mov
bound
mov
add
lret
mov
push
inc
adc
stos
out
das
mov
pop
rolb
test
or
sub
pop
xor
inc
add
gs
cs
sbb
outsl
and
mov
adc
add
mov
lock
sub
fldenv
pushf
leave
out
xchg
imul
rolb
xchg
add
add
enter
add
mov
iret
push
add
mov
add
mov
ret
push
add
mov
fcom
add
sbb
scas
fcmovnbe
add
mov
daa
addl
sbb
add
lock
pop
fcompl
roll
xchg
push
ret
shll
sbb
mov
sub
adc
adc
inc
addb
add
cli
xchg
or
pop
pop
std
ja
inc
add
add
addb
push
dec
cmp
ret
xor
clc
ljmp
stos
add
add
xchg
pop
cmp
dec
loopne
fisttpll
add
fidivrl
jns
add
rcl
dec
inc
add
out
cmp
mov
pop
nop
add
data16
xchg
rolb
push
and
jge
cmp
add
inc
add
mov
lcall
push
add
mov
add
and
pop
mov
adc
jo
aad
arpl
add
fidivl
mov
call
jo
das
pop
call
shll
add
mov
and
mov
arpl
je
clc
int3
sysenter
add
adc
add
add
add
es
xchg
jbe
mov
sti
ljmp
xor
mov
or
sbb
int3
xchg
cmpsl
xchg
mov
ret
sub
je
ljmp
xchg
dec
clc
fdivrp
jecxz
mov
or
jg
imul
cld
nop
add
add
xor
out
outsb
xor
ljmp
xchg
add
mov
add
add
adc
ja
mov
inc
add
push
cmc
mov
fidivrl
test
xchg
add
add
jne
add
or
icebp
push
add
sbb
js
xor
or
leave
stos
cmp
das
inc
xchg
add
lret
call
shll
int
add
mov
sbb
dec
and
mov
add
das
mov
loope
add
xor
dec
adc
pop
leave
jg
add
lcall
js
fisubs
add
cwtl
push
and
add
out
nopl
aam
jp
add
cltd
in
add
xchg
int
hlt
add
jno
push
add
push
aad
add
xchg
add
add
repz
jnp
add
xchg
push
ds
add
data16
add
rolb
jbe,pt
sub
addb
clc
and
mov
and
or
dec
xor
add
lahf
add
xor
inc
iret
fisttps
jne
add
add
sbb
push
testb
movb
add
add
adc
xor
fwait
add
iret
xlat
addb
add
out
int
insb
jge
add
mov
xlat
ficoml
std
and
add
mov
loop
xor
enter
std
ss
push
cmpsb
add
nop
add
mov
push
cwtl
jo
andl
and
mov
mov
ds
add
jp
push
add
aam
add
inc
add
hlt
add
adc
jbe
cwtl
dec
insb
mov
and
mov
add
add
add
add
hlt
add
add
cmp
mov
add
fwait
push
insl
cmp
add
lods
xchg
cmpsb
add
add
jge
or
and
add
movsl
mov
or
jbe
add
das
add
mov
mov
and
test
add
sbb
xor
in
add
dec
dec
testb
popa
int
add
sarl
sbb
movsb
add
aaa
sbb
add
add
inc
cld
insb
and
pop
dec
shr
cmc
das
push
add
jp
and
mov
mov
add
add
repz
add
sub
and
mov
arpl
add
mov
cmp
add
sub
add
mov
subl
add
jns
test
icebp
leave
scas
loop
hlt
add
add
jno
movsb
add
roll
stos
sbb
test
movsb
add
pushf
iret
pop
xor
fidivrs
add
sub
std
xchg
add
iret
aam
addb
inc
add
jmp
jmp
mov
fsin
push
add
add
pop
push
aas
sbb
in
add
clc
sahf
fwait
dec
out
dec
cmp
sbb
add
add
jne
adc
adc
ret
stos
adc
lods
insb
cmp
call
jmp
test
dec
popf
test
stc
inc
add
add
sub
and
add
jb
das
addr16
add
add
iret
fmul
fisubs
mov
into
out
add
mov
lahf
xor
mov
sarl
inc
dec
out
fnstsw
add
add
stc
push
mov
rolb
popf
nop
add
inc
add
jp
add
cltd
push
inc
add
cmpsl
dec
std
sub
xchg
jle
shll
add
add
add
rolb
dec
inc
inc
add
jnp
add
mov
leave
lods
mov
push
pushf
sub
inc
add
dec
dec
push
mov
sbb
pop
mov
and
mov
in
movb
add
mov
pop
add
add
test
pop
in
jb
add
or
repz
das
and
mov
add
jmp
or
mov
gs
das
dec
scas
dec
cld
pop
pop
data16
add
add
add
aaa
adc
mov
add
jmp
stos
out
and
cmpsb
add
add
ret
fcmovu
mov
mov
lret
add
add
cwtl
mov
loope
add
and
mov
add
add
jne
add
insl
adc
test
add
xchg
dec
jns
add
cmpsb
add
repnz
jmp
cmp
add
add
rolb
adc
sbb
add
push
int
data16
dec
aas
push
add
inc
add
add
add
mov
add
pop
psubsb
mov
cli
daa
sbb
jp
jmp
dec
out
iret
lea
and
xor
loop
mov
movsb
add
push
add
push
adc
or
popf
xchg
dec
or
mov
in
mov
or
push
add
rolb
add
sub
mov
mov
add
sbb
in
pusha
add
stos
test
cmpsl
data16
add
adc
add
inc
icebp
jg
xchg
leave
sub
pusha
add
add
dec
int
adc
jge
add
stc
daa
movsl
add
or
xchg
inc
add
fbstp
add
pop
lahf
mov
insb
xor
ljmp
add
leave
and
push
fcoml
inc
mov
testb
add
add
add
add
cmp
add
and
pop
cmp
inc
add
aam
mov
lods
test
pop
xor
hlt
add
out
inc
add
add
add
int
push
pushf
outsl
ja
lds
iret
inc
rolb
ret
pop
push
add
jne
ss
cmp
add
mov
xchg
repz
mov
lods
push
inc
in
inc
imul
bound
mov
xor
ss
cmovle
add
add
jbe
xchg
rolb
add
add
jbe
pushf
push
xor
jns
fwait
test
sbb
ljmp
add
into
aas
mov
fistps
testb
lret
rolb
mov
sbb
adc
lods
ud2
out
imul
add
inc
xchg
add
mov
add
push
cmc
mov
add
fcoms
add
pop
push
add
add
iret
int
mov
add
add
mov
test
sbb
xchg
data16
lock
add
pop
add
mov
ds
stos
imul
sub
jmp
add
add
leave
xchg
add
add
mov
pop
pusha
add
add
lods
xor
testb
dec
popf
push
add
adc
mov
nop
add
and
enter
add
aam
jns
push
xor
add
add
or
mov
dec
in
pop
roll
jmp
add
sbb
pop
nop
add
mov
iret
in
pop
fst
add
add
int
add
add
aam
inc
add
lret
add
mov
movsb
add
add
push
loope
fdivl
add
jns
push
add
adc
in
scas
dec
repz
add
add
mov
add
enter
or
add
aad
and
and
sahf
jle
aad
add
mov
rolb
repnz
test
notl
add
push
xor
call
int
or
in
and
mov
or
sub
dec
testb
mov
add
fcomps
or
in
aam
mov
lret
fcmovnu
stos
insl
add
je
cmp
add
mov
mov
loop
adc
add
divl
xchg
xchg
add
ljmp
add
add
push
add
add
pop
xor
add
lea
les
mov
add
leave
xlat
jo
pushf
push
lret
inc
outsb
int3
cmpsl
mov
push
mov
add
jns
lahf
push
mov
push
rolb
jecxz
add
add
dec
and
mov
add
lret
add
arpl
add
addr16
int
push
xchg
inc
aaa
lods
mov
and
aad
xor
xor
mov
leave
jno
idivl
test
dec
sub
sub
sub
xchg
jb
jmp
mov
sub
sbb
xor
les
dec
je
arpl
or
insl
cs
add
sti
pop
push
add
aas
in
movsl
arpl
test
add
mov
cltd
cld
jnp
or
clc
aam
mov
mov
in
cmp
mov
add
dec
pop
push
arpl
xchg
xor
cmp
adc
fists
addr16
add
cmc
xor
insl
sahf
int3
mov
cmp
sbb
pop
adc
add
cli
xchg
add
add
xchg
adc
or
add
mov
je
adc
daa
push
add
fisttpl
cmc
jae
add
mov
aas
fsts
ficoml
and
mov
xchg
add
lea
and
mov
mov
add
add
les
xrelease
jl
add
ja
xor
add
addb
jbe
add
aaa
xchg
add
pop
pop
les
or
add
adc
adc
add
jnp
aas
je
arpl
add
dec
cmp
out
inc
add
ja
jmp
sarl
lcall
sub
or
inc
add
js
mov
clc
sbb
xlat
sqrtps
rcr
daa
dec
push
mov
sbb
add
subl
add
sub
mov
int
sbb
ret
rolb
mull
pop
test
or
mov
add
add
add
mov
lret
jae
ja
add
add
mov
add
add
or
cmpsb
add
add
in
add
mov
xchg
add
aam
fs
sub
cmp
add
add
push
push
push
add
add
xor
lcall
jle
jnp
and
mov
data16
push
jns
movsl
imul
mov
add
movsl
test
jnp
jl
cli
dec
nop
add
outsl
sbb
mov
push
add
and
add
lret
mov
lock
push
dec
in
pop
rolb
xor
mov
add
mov
sbb
aaa
sahf
in
sub
testl
inc
in
shll
mov
inc
add
gs
push
clc
ja
mov
xor
outsl
aam
xor
xchg
inc
call
add
gs
mov
add
add
dec
ja
into
dec
rolb
into
xor
xor
imul
ret
fstps
add
dec
sub
shll
add
add
xchg
out
dec
or
lea
add
pop
mov
jp
pop
movb
or
mov
data16
add
pop
xor
testb
pop
cmc
pushf
popa
nop
add
movnti
aad
add
add
xor
mov
data16
add
jno
js
add
add
fldl2t
mov
lock
push
arpl
add
inc
test
adc
add
sbb
add
pop
sub
fs
jns
les
or
xchg
add
rolb
data16
sub
push
add
pop
add
arpl
add
jge
rolb
in
add
mov
fstl
mov
add
pop
andl
jp
add
stos
xchg
mov
lods
mov
add
mov
sti
cli
outsl
cld
mov
pop
sarl
push
leave
pop
scas
push
add
enter
push
dec
imul
out
add
pop
sub
add
cmp
jo
sub
mov
addb
push
add
out
jns
push
fcmovb
jnp
push
add
add
xor
push
add
cmp
add
add
fsubrl
add
add
fsubrl
push
push
ret
add
dec
xchg
outsl
mov
adc
add
mov
les
mov
add
mov
leave
sbb
jns
add
gs
add
bound
mov
or
adc
dec
and
mov
dec
and
movl
push
inc
add
jecxz
add
add
add
sbb
push
add
add
mov
pop
mov
jp
jbe
aam
adc
dec
mov
rolb
pop
call
and
add
add
add
outsb
add
mov
add
dec
adc
loopne
addb
lcall
insb
dec
out
cmp
shll
mov
sub
push
add
inc
add
add
mov
cld
mov
add
imull
mov
inc
incb
xor
enter
add
je
cmp
mov
push
xchg
fildl
push
pop
data16
add
xchg
add
cmp
push
add
cmpsb
add
xchg
add
and
bound
mov
mov
ds
and
push
out
add
imul
pop
cmpsl
mov
push
add
add
add
add
add
sub
lods
inc
add
add
fcmove
movl
imul
addr16
mov
movb
rolb
rolb
xchg
add
sbb
add
lods
add
scas
repz
push
push
add
add
pop
mov
mov
clc
fdivrl
notl
mov
jo
mov
imul
mov
add
fcmovbe
jns
mov
add
cmp
add
push
add
and
fnstcw
jmp
add
cltd
fidivl
jmp
or
add
and
and
mov
xchg
inc
add
add
mov
sub
add
add
pusha
add
add
mov
add
cwtl
cmp
lcall
add
add
xor
jl
cmp
cli
mov
mov
sub
add
pop
les
imul
add
add
addr16
jmp
sbb
add
add
add
lahf
inc
je
aam
addb
sbbl
daa
mov
add
test
push
add
test
pusha
add
inc
add
mov
push
add
add
adc
outsb
jbe
pushf
push
add
loop
ja
jae
add
rolb
jae
lahf
jne
dec
add
mov
add
cmp
add
rolb
outsb
cmp
add
mov
adc
jg
sbb
mov
xchg
int
push
add
mov
xchg
add
jnp
push
gs
mov
xorl
mov
jle
in
add
mov
add
cmp
add
inc
add
add
jp
sbb
add
add
add
sti
call
addr16
enter
push
jo
sbb
movsl
mov
add
mov
xor
push
add
add
add
add
adc
out
mov
sub
add
mov
sti
ret
out
in
cmpsb
add
add
xor
test
and
jae
pop
cmp
add
mov
adc
icebp
imul
add
mov
jae
in
cli
call
inc
addb
inc
add
in
sbb
out
mov
add
into
push
add
jmp
mov
dec
pop
sbb
idivl
js
mov
jbe
lahf
push
shrl
add
std
pop
outsl
aaa
imul
mov
and
sbb
push
push
add
add
imul
jo
bound
mov
insb
pop
test
add
pusha
add
nop
add
add
jbe
imul
out
mov
mov
faddl
xchg
sub
mov
mov
add
outsl
testb
add
add
js
jns
out
addr16
add
movsl
ljmp
cmp
loop
jo
mov
out
mov
add
call
ja
add
add
sub
div
add
add
inc
push
test
insb
lock
add
es
add
dec
scas
std
push
mov
fucomp
mov
and
ss
sub
test
fsubrl
pushl
sub
mov
cmp
sub
rolb
and
mov
add
aam
and
push
mov
cmc
jl
ljmp
sti
lea
add
and
cmp
imul
aaa
cmp
pop
cmp
push
add
xchg
outsl
in
mov
shr
xor
pop
add
scas
fstl
add
repz
add
jne
cmpsl
daa
daa
add
mov
xchg
jge
add
movl
dec
sub
add
mov
sub
imul
test
xor
stc
pop
daa
test
cld
test
repnz
mov
out
xorl
jae
int3
lock
push
add
xor
maskmovq
negl
pop
scas
xchg
cmp
insl
test
or
mov
addr16
test
adc
call
mov
xor
mov
fistpl
repz
adc
stc
loope
add
icebp
ja
ds
push
add
jno
out
adc
and
xchg
dec
add
sub
pushf
dec
adc
jno
xchg
add
fmuls
add
mov
or
cmp
cmpsl
push
pusha
add
sbb
add
mov
mov
add
inc
add
cli
repnz
fs
pop
inc
add
push
mov
lds
add
les
or
fisttps
mov
cmpsb
add
add
add
xchg
jge
add
add
stos
mov
adc
add
sbb
xchg
stos
mov
insl
mov
add
pop
rcr
push
insb
jl
jne
add
xchg
xor
add
add
clc
jae
jge
add
jbe
add
pop
pop
xchg
or
mov
fisubrs
in
lock
push
add
add
add
lds
adc
out
mov
js
stc
xor
pop
add
sbb
push
inc
cmpsl
push
loopne
hlt
add
add
out
call
imul
add
dec
mov
add
add
cmp
clc
jo
in
and
add
add
int
add
cwtl
inc
popf
xor
ret
xchg
add
xor
lock
add
jno
add
add
scas
test
push
push
add
cmp
sbb
adc
mov
enter
test
xor
imul
shll
add
dec
test
imul
mov
mov
xor
addb
push
daa
jle
add
add
add
sub
movb
xlat
mov
sti
add
add
add
add
iret
or
add
dec
mov
rcll
add
int3
push
add
insb
fdivs
xchg
add
add
movb
add
sbb
dec
sbb
add
pusha
add
cmc
ficompl
jno
add
sbb
add
repz
lods
inc
mov
add
cmp
lea
push
test
jno
mov
lret
outsl
jno
add
mov
sbb
and
mov
rolb
leave
xor
ret
push
add
testb
add
xor
xlat
jno
add
pop
sbb
mov
aaa
addb
adc
cmp
inc
add
imul
data16
xor
js
cmp
xorl
add
mov
inc
add
shll
sbb
mov
test
mov
popl
mov
add
cmp
pop
lods
pop
xchg
add
jg
ja
or
add
aad
fucomi
sub
sub
and
mov
movb
add
add
mov
push
mov
aaa
push
add
add
loop
mov
add
add
add
mov
ja
push
add
add
dec
sbbl
add
fisubs
mov
mov
add
and
int
inc
add
stos
out
add
add
pop
cmp
into
and
mov
mov
add
mov
ljmp
mov
stos
ljmp
add
les
or
add
scas
lcall
pop
pop
mov
lret
lret
pushf
data16
or
shrl
jnp
add
add
in
rolb
sahf
xor
add
jle
add
jp
loope
insb
mov
push
adc
add
lods
mov
mov
fcmovb
aaa
pop
out
inc
jne
add
fistpll
repz
loope
jmp
push
fsubs
fs
and
add
iret
dec
rolb
xchg
add
roll
add
adc
in
sub
push
add
push
xchg
add
add
mov
add
jbe
or
inc
add
fisttpll
imul
add
add
mov
xchg
add
pop
add
add
inc
add
add
inc
add
xchg
imul
ret
add
add
xor
jne
add
adc
mov
sub
push
and
mov
add
in
adcl
push
dec
enter
roll
lods
movb
mov
and
icebp
testb
mov
pop
rolb
jo
mov
movb
lods
push
add
add
xchg
in
inc
add
daa
popf
mov
cs
push
mov
pop
rcrl
push
add
add
add
fnstsw
xchg
add
rolb
add
fdiv
cs
add
pusha
add
add
add
cltd
xor
xor
xor
pop
sbb
lds
add
add
addb
dec
add
data16
pop
es
jo
and
nop
add
mov
das
jg
fcomps
pop
pop
fsubrl
subl
mov
fwait
icebp
jp
test
fdivrp
xchg
add
add
mov
add
nop
add
add
icebp
icebp
cwtl
aas
mov
xchg
push
add
xchg
mov
cmpsl
push
fisubl
add
inc
xchg
pop
lret
jne
add
mov
repnz
add
xor
rcll
addb
jmp
sub
pop
lock
ja
xor
inc
out
jge
cld
cs
std
xlat
leave
push
mov
movsb
add
mov
pop
mov
add
add
inc
add
mov
int3
push
add
shll
dec
sub
mov
rolb
add
dec
imul
pop
xor
mov
in
pushf
cmp
mov
jo
addb
in
stos
out
cmp
add
add
cld
jb
lea
rcrl
add
add
add
testb
add
add
test
or
fisttpll
js
add
adc
hlt
add
cltd
inc
add
cmpsl
sbb
add
cld
push
add
mov
add
movsl
fbld
adc
sub
mov
out
sbb
sub
push
add
sub
push
add
add
adc
add
jo
test
bound
mov
add
imul
mov
add
rep
rcr
push
outsl
jbe
xor
add
cmpsl
arpl
add
in
push
add
push
add
pop
dec
rcrl
repnz
add
repz
mov
lahf
int3
or
and
sbb
stc
lods
xchg
sbb
jle
pop
mov
add
call
push
add
add
test
insl
push
cmpsl
dec
mov
mov
dec
stc
pop
sbb
jno
dec
push
rolb
rolb
test
leave
add
aaa
push
add
out
out
mov
mov
add
inc
in
stos
cltd
repz
negl
fcoms
add
xchg
or
add
add
insb
add
or
in
cmp
inc
add
add
add
gs
mov
arpl
cs
pop
jnp
adc
inc
add
push
add
add
mov
add
mov
add
add
data16
add
add
cmp
addr16
call
fdivp
add
and
pop
call
add
les
in
gs
adc
ja
mov
xchg
add
iret
in
loope
mov
cwtl
and
inc
add
ljmp
add
pop
and
add
mov
out
cmp
add
add
insb
pop
dec
fcmovb
add
cmpsl
dec
push
add
adc
jno
jbe
in
xchg
sahf
dec
sub
jp
add
bound
mov
into
add
add
nop
add
cwtl
mov
or
add
movsb
add
add
mov
xchg
rcrl
mov
xchg
mov
rcrl
add
add
add
add
addr16
mov
rolb
add
iret
jmp
add
loopne
test
xor
mov
jnp
loop
pushf
imul
mov
mov
into
mov
ret
add
and
into
jmp
add
add
adc
push
add
add
das
insl
mov
repnz
mov
in
cmp
inc
add
ret
sub
add
xor
xchg
push
mov
mov
sbb
pop
dec
pop
scas
sub
xchg
add
adc
les
jp
dec
fcompl
add
jno
add
xor
cwtl
sbb
arpl
je
push
add
add
int
loop
stos
leave
testb
mov
call
sbb
push
add
aad
xchg
mov
bound
mov
clc
xchg
add
add
jl
adc
dec
xor
popa
adc
adc
push
add
or
inc
add
in
repnz
data16
movsl
data16
leave
inc
ja
add
scas
xchg
mov
je
or
xchg
adc
sbb
add
add
data16
push
jno
sub
add
pop
ja
add
sub
xchg
add
sub
sbb
xchg
add
add
roll
add
add
add
mov
add
sahf
fld
add
repnz
call
js
or
jl
dec
pop
in
sbb
pop
inc
mov
aas
test
movsl
jp
add
or
add
add
dec
adc
js
jmp
add
cmp
jo
testb
cmpsl
add
vmwrite
add
adc
fdiv
add
jmp
add
addb
sub
sahf
in
xchg
add
mov
inc
pop
jmp
cld
std
pop
jmp
dec
dec
pop
mov
sahf
and
shll
push
add
in
cltd
mov
jp
lds
add
ja
add
test
and
scas
pop
inc
add
push
add
movsb
add
add
jg
testb
add
pop
jae
faddl
jnp
xchg
adc
out
add
sub
dec
xchg
out
stc
sahf
add
adc
xor
insl
pusha
add
jecxz
add
subl
lods
hlt
add
add
add
es
loopne
push
nop
add
sub
cmc
xchg
dec
je
movsb
add
out
iret
mov
add
inc
add
mov
push
add
bound
mov
mov
add
fnstcw
mov
pop
push
or
mov
cmc
mov
add
mov
add
add
add
aaa
fnstsw
mov
add
add
xchg
cmpsl
out
nop
add
loopne
xchg
jle
pop
and
push
add
jmp
add
jbe
jp
cmpsb
add
xor
cltd
mov
xchg
and
mov
dec
pusha
add
cld
push
add
rolb
clc
push
pop
xor
in
add
sub
sbb
add
mov
add
add
sub
into
addb
movsb
add
add
add
dec
mov
scas
add
out
cld
pop
cmc
pop
xor
lods
repz
inc
xor
sbb
mov
cli
int
into
mov
rolb
outsl
add
in
mov
add
mov
mov
push
add
add
add
movsl
sub
aad
xchg
add
mov
add
lock
cmp
fbld
add
and
add
sbb
repz
adc
out
inc
add
and
mov
mov
aam
mov
or
imul
add
jl
cmp
pop
bound
mov
hlt
add
fcmovnu
mov
cmp
mov
xchg
add
jns
add
xchg
daa
fstpt
stc
mov
push
jmp
mov
sbb
test
add
sub
mov
sub
lcall
jp
jno
or
dec
inc
add
daa
adc
data16
fldcw
dec
daa
std
mov
add
add
out
adc
outsl
fisubrs
mov
xor
add
add
cmp
lcall
dec
rolb
add
imul
lock
add
or
and
mov
add
imul
fcoms
add
rolb
cld
dec
out
mov
scas
mov
mov
push
add
add
push
test
inc
add
inc
add
add
rolb
xor
mov
push
add
cmc
mov
fsubp
add
add
jb
fiadds
push
add
lods
fcoml
add
scas
mov
jae
pop
adc
add
add
bound
mov
cwtl
lret
add
jge
addl
pop
jle
sbb
sahf
sbb
fcompl
out
imull
out
and
sbb
or
leave
inc
sbb
mov
inc
add
add
out
mov
add
add
pop
and
mov
mov
cmp
add
fnstenv
out
outsb
push
add
out
adc
add
decb
push
or
add
jb
fdivs
lds
add
addb
pop
in
in
popa
and
mov
pop
pop
icebp
xchg
add
add
ds
or
xchg
add
dec
fbstp
je
shll
lcall
jns
dec
xor
add
mov
mov
testb
jge
add
mov
cmp
pushf
out
push
mov
sbbl
add
push
add
movsl
rcrl
sub
dec
adc
cli
stos
lods
data16
push
add
leave
sbb
adc
jne
fnstcw
sbb
inc
insb
and
rolb
sub
sbb
add
add
add
mov
add
in
lock
mov
add
add
adc
std
inc
sbb
add
lds
add
or
mov
cmp
and
mov
add
xor
mov
inc
add
mov
das
add
mov
inc
imul
add
call
and
xlat
arpl
add
mov
mov
jne
or
sub
loope
add
in
mov
mov
add
scas
jns
idivl
add
lcall
add
mov
cmp
add
add
adc
and
mov
add
inc
mov
incb
push
add
jmp
data16
insl
cmc
jns
ja
add
pxor
add
int
notl
add
mov
clc
push
data16
add
xor
add
sbb
dec
call
add
mov
std
bound
mov
mov
orl
mov
mov
add
add
pop
sbb
dec
pop
mov
jne
add
mov
add
add
int3
cmpsl
fisttps
dec
or
inc
sbb
stc
ret
pop
push
add
mov
scas
out
hlt
add
sti
imul
fisubrs
cmpsl
jge
lods
xor
jle
add
out
out
das
fcmovnu
repz
xchg
jge
add
and
xor
push
add
or
xchg
add
add
add
mov
and
mov
lret
ljmp
sub
add
inc
push
add
ficomps
add
mov
add
jmp
add
mov
add
lods
loope
cmp
loop
addr16
mov
in
push
add
mov
add
add
add
xchg
jg
mov
inc
jne,pn
or
scas
lret
stos
fstp
ret
jo
aaa
out
add
push
add
mov
jb
xor
mov
repnz
jo
adc
loopne
mov
dec
aas
int3
aad
fisubl
add
add
add
add
fldl
or
les
cli
pusha
add
add
pop
and
mov
mov
add
mov
xor
jmp
incl
add
add
sbb
xlat
mov
pop
scas
lret
mov
sbb
dec
movb
add
stos
dec
call
add
adc
pop
fisubl
inc
rcll
dec
jo
pusha
add
shll
add
add
add
xor
sbb
lea
pop
mov
add
add
add
lea
add
jg
addb
inc
add
add
inc
lock
add
cmp
data16
addr16
test
hlt
add
sahf
rolb
mov
add
add
pop
shll
add
add
inc
add
cmp
fldenv
outsl
cmp
inc
pushf
ret
imul
lock
out
add
add
lock
popa
pop
and
mov
jecxz
xor
inc
add
dec
jge
jle
add
stc
rcrl
add
js
add
add
fwait
adc
movsl
pop
test
xchg
add
leave
inc
add
adc
lock
add
flds
add
add
cmpsb
add
je
pop
mov
xor
xor
pop
out
lret
inc
sub
popa
add
mov
cmpsl
fwait
push
add
jns
rcl
out
jb
stos
call
add
add
add
dec
subl
adc
les
xchg
cld
inc
dec
xor
sbb
cmpsb
add
add
add
add
scas
mov
mov
xor
mov
daa
or
sahf
fcompl
cmc
in
cmp
mov
push
add
in
movsl
cmp
xor
xchg
aas
jne
inc
add
inc
neg
arpl
add
add
lods
movsl
adc
addr16
cmpsl
mov
repz
mov
jo
mov
pop
and
mov
add
mov
les
or
add
and
add
lcall
andl
imul
add
inc
add
add
mov
addb
mov
add
add
mov
call
or
cmp
in
dec
outsl
repz
imul
add
sub
add
add
das
cmpsl
push
mov
imul
pushl
insb
lock
fldt
add
add
pop
dec
cmpsl
shll
pop
push
sub
add
add
sbb
inc
add
testb
add
jecxz
data16
push
add
mov
lds
push
add
sti
push
add
mov
mov
mov
and
out
mov
add
sub
lds
add
jns
repz
mov
xor
mov
add
enter
xor
dec
loopne
dec
lret
push
add
test
rolb
stc
ljmp
sub
jecxz
pop
lret
add
inc
add
or
add
add
add
popf
add
xchg
add
push
add
jo
shll
sbb
push
add
add
add
pop
adc
add
and
mov
adc
mov
out
jae
push
add
jl
jno
repz
roll
push
add
add
add
lods
pop
pop
in
dec
fistpll
mov
cwtl
nop
add
mov
inc
add
les
aad
add
add
inc
dec
add
adc
mov
mov
sti
xor
hlt
add
or
subl
test
cmpsb
add
mov
cmp
in
and
mov
je
jae
rolb
in
test
cmp
in
add
mov
add
enter
mov
add
addr16
add
add
loop
xchg
dec
add
mov
inc
add
nop
add
add
lods
fsubs
sub
int3
fisubrl
mov
cmp
mov
add
mov
cli
xchg
in
mov
dec
stc
ja
add
rolb
add
adc
inc
aam
pop
jns
xchg
roll
mov
add
dec
out
mov
pop
sbb
les
xchg
jle
mov
xor
and
push
loope
add
push
add
and
mov
add
push
or
push
add
add
add
out
xchg
xchg
stos
add
ds
repnz
add
add
repnz
out
mov
ja
ret
stc
movsb
add
movsl
mov
mov
pop
cmp
push
arpl
add
add
add
sahf
insl
or
scas
fwait
add
stos
add
mov
pop
leave
push
pusha
add
add
add
cmpsb
add
movlps
add
ds
add
mov
bound
mov
in
add
add
add
insb
add
add
mov
add
nop
add
out
add
movsb
add
addb
rolb
add
mov
add
je
ret
and
mov
test
inc
xor
sub
add
sub
push
pop
test
sti
xchg
jbe
daa
push
pop
lret
sbb
pushl
mov
jo
dec
mov
add
rcr
push
pop
nop
add
xchg
add
sahf
test
outsb
add
data16
add
sbb
aaa
jmp
stos
mov
add
adc
pop
mov
ret
jle
add
leave
dec
adcl
std
jge
mov
sub
add
xorl
inc
dec
mov
sub
leave
sub
ljmp
add
add
arpl
popl
cs
cltd
jmp
daa
cmp
in
daa
fsubl
add
mov
jge
jae
add
add
les
jns
add
stc
jbe
dec
dec
sub
in
test
jge
jmp
add
rolb
sub
adc
outsl
call
mov
add
adc
add
js
daa
les
adc
out
nop
add
hlt
add
mov
push
jae
xchg
add
add
add
push
lods
mov
add
les
pop
cli
in
jo
pusha
add
push
adc
mov
adc
add
mov
rolb
outsb
data16
add
pusha
add
bound
mov
add
add
push
add
add
test
imul
repnz
mov
lods
sbb
cmp
push
sahf
clc
and
push
add
pop
dec
idivl
lds
dec
cmc
jbe
int
add
inc
add
xor
add
add
or
push
in
add
xchg
xchg
push
sbb
pop
cs
movsl
add
add
cmp
mov
xchg
inc
sti
into
movl
aas
dec
mov
shll
add
imul
addb
push
xchg
adc
jbe
in
mov
movsl
aaa
lods
push
add
add
jno
cwtl
mov
add
push
add
stos
fmul
push
add
mov
xor
add
cs
loop
mov
jno
xor
gs
xor
rolb
das
jnp
daa
push
add
cmp
mov
addb
mov
and
mov
push
push
add
inc
add
scas
and
mov
add
outsb
outsb
daa
add
popf
aas
daa
dec
clc
cmpsb
add
mov
imul
add
xchg
add
sub
add
sub
add
out
ds
cld
fmull
inc
pusha
add
and
mov
popa
call
cltd
cmp
add
cs
aaa
into
sbb
push
add
sub
or
add
add
xchg
add
mov
add
add
add
fs
jge
add
insb
pop
call
cli
iret
push
cltd
in
cmp
add
clc
daa
jl
mov
and
inc
add
popa
add
add
repz
lods
ja
inc
add
ds
sbb
add
jo
mov
pop
adc
icebp
jnp
mov
inc
xor
sub
push
pop
leave
inc
add
sbb
mov
push
add
add
add
add
cs
subl
add
insb
je
mov
add
insb
int
add
adc
pushf
fstp
nop
add
push
sub
add
cmp
nop
add
movsb
add
or
add
jnp
add
in
test
inc
add
sahf
or
jae
push
add
js
into
ja
xchg
add
add
pop
roll
popf
mov
aas
and
ret
mov
add
cwtl
dec
push
xchg
js
out
mov
add
ficomps
mov
insb
adc
std
or
repz
add
stos
or
icebp
in
out
testb
and
mov
arpl
add
cmp
sbb
scas
xchg
inc
mov
add
add
int
add
mov
mov
popa
and
or
stos
int
xor
dec
inc
dec
cmp
push
pop
addb
xor
in
mov
xchg
add
insl
xorl
into
or
movsb
add
testb
add
add
insl
push
add
xchg
and
inc
add
mov
add
add
pushf
test
add
add
inc
add
add
aad
cmp
add
add
push
add
add
pop
aam
mov
lcall
sbb
out
inc
inc
popa
mov
add
mov
out
out
xor
add
clc
repnz
pop
push
mov
mov
add
push
add
sub
rolb
ret
lcall
jnp
movb
add
or
add
sbb
xchg
lret
adc
insb
in
dec
test
add
mov
inc
add
inc
add
sbb
add
add
ret
jo
aad
add
and
mov
ret
clc
mov
repnz
inc
add
add
jle
jno
iret
mov
mov
aas
out
dec
and
or
adc
in
mov
ret
add
mov
outsl
pop
test
in
loopne
push
add
xor
inc
add
lock
lods
mov
mov
xchg
add
add
sub
jnp
mov
add
data16
ljmp
ss
xor
sahf
pop
mov
mov
inc
add
dec
adc
pop
rolb
push
inc
loope
mov
mov
in
subl
or
add
push
and
add
pushf
mov
push
data16
push
add
xchg
lds
and
mov
and
mov
push
add
add
push
rorl
inc
push
add
add
add
add
or
push
push
add
cmp
jl
add
push
add
add
mov
ljmp
aam
insb
fs
add
add
add
push
aad
add
lea
out
repz
ds
xor
test
add
lods
adc
lret
insb
mov
jg
jae
sub
add
push
pop
fwait
and
mov
add
add
jl
fisubs
stos
test
xor
out
mov
add
or
push
mov
add
adc
lock
xor
add
mov
loope
sbb
or
add
pop
adc
jle
sub
add
fdivrl
add
add
fadds
mov
enter
xor
dec
jg
lahf
and
leave
call
add
daa
pop
test
inc
add
jbe
xorl
sub
sub
mov
xchg
add
sub
lcall
adc
movsb
add
pop
jge
cmp
lcall
pop
hlt
add
add
add
push
add
sub
xor
repnz
add
leave
imul
inc
add
add
out
push
sub
add
mov
pop
dec
push
jmp
xchg
enter
add
or
dec
gs
mov
insb
test
cmp
add
inc
jg,pt
out
insl
ror
dec
add
lods
bound
mov
cmpsb
add
js
je
dec
nop
add
add
cld
pop
in
mov
fadds
rolb
mov
add
int3
fsubrs
jle
lcall
add
add
add
ficoml
mov
add
and
orl
nop
add
add
outsl
mov
mov
and
and
mov
ljmp
movb
dec
outsl
mov
xor
pop
add
and
add
add
ficomps
pop
jle
add
in
sbb
jecxz
lret
stos
repnz
loop
pushl
mov
repnz
add
add
dec
lods
imul
dec
test
movb
add
add
cmp
add
push
pop
push
mov
out
outsb
stos
leave
leave
jle
sub
rolb
clc
mov
out
cld
out
mov
xchg
add
add
addb
out
imul
add
mov
jecxz
jns
add
add
adc
push
fcomp
into
push
add
sahf
cmpsb
add
mov
arpl
pop
add
pop
mov
stos
push
out
fdivrl
jno
in
insb
lods
repnz
add
mov
add
or
lcall
scas
sbb
add
jg
mov
jl
xchg
rorl
pop
out
inc
mov
and
dec
testb
loopne
sbb
add
add
jns
addb
add
add
std
push
add
cmp
add
push
sub
mov
hlt
add
aad
add
add
add
add
clc
inc
add
or
add
add
mov
in
js
jb
mov
add
dec
in
pop
aam
cmp
pop
xchg
add
sahf
inc
add
xchg
add
add
icebp
stc
imul
xor
dec
xchg
add
mov
mov
pop
movsb
add
stos
xchg
lds
sbb
js
mov
mov
stos
xor
add
sbb
roll
add
adc
push
mov
pop
jbe
lcall
les
and
andl
ret
pop
add
mov
repz
inc
sub
mov
cwtl
mov
add
shll
mov
aaa
test
cmp
rolb
inc
add
dec
xchg
flds
movb
imul
add
add
or
inc
jmp
rolb
xchg
add
aaa
inc
sahf
xor
mov
and
js
add
add
adc
add
add
add
sbbl
lret
xor
inc
add
jmp
sub
mov
add
mov
add
in
mov
in
mov
mov
pop
add
mov
add
jns
add
mov
jo
fcomip
xchg
add
mov
add
mov
data16
mov
dec
dec
shll
add
dec
pop
cmpsl
test
mov
mov
sub
mov
pusha
add
xchg
or
pop
aas
dec
inc
addr16
bswap
push
add
push
and
add
sbb
jmp
mov
pop
call
aam
inc
and
xchg
mov
add
jmp
outsl
inc
add
push
add
add
mov
add
mov
or
push
add
ss
add
mov
add
sub
sub
add
add
add
add
xchg
jo
pop
adc
mov
lahf
mov
xchg
jge
add
addb
dec
in
jns
inc
arpl
fwait
test
test
add
jnp
add
outsb
mov
jecxz
mov
aad
add
cmp
add
lock
add
jb
enter
mov
out
faddl
pushf
lret
add
add
add
add
add
jmp
mov
mov
sub
sub
inc
out
mov
aas
enter
push
add
shl
add
add
movsl
addr16
jg
stos
mov
add
add
inc
outsb
xchg
pop
dec
and
mov
add
fwait
lcall
jb
or
iret
adc
leave
loop
push
mov
xor
inc
ret
pop
dec
repnz
test
push
jmp
add
rorl
push
dec
jno
add
add
xlat
sbb
test
loop
and
mov
icebp
rolb
enter
inc
add
add
pop
mov
xchg
or
add
sti
add
add
jp
add
rolb
inc
cmp
xor
adc
xchg
add
lret
mov
addb
or
loop
std
ja
add
add
pop
xor
mov
add
addb
add
out
ret
add
mov
mov
repz
rolb
dec
jecxz
add
xor
xchg
xchg
js
mov
add
add
faddl
fsubp
add
jae
insl
lock
xor
xchg
or
add
lods
mov
add
adc
mov
stos
jp
dec
cmc
inc
adc
cmp
in
fnsave
xor
xor
fistpl
add
lods
and
js
sahf
mov
or
add
data16
sub
or
push
add
and
mov
mov
test
sub
out
std
cwtl
inc
clc
pop
jle
sbb
add
lock
mov
add
dec
insl
dec
jns
rorl
add
cmp
pop
add
lret
outsl
sub
inc
add
iret
jg
les
inc
add
loop
mov
mov
push
cltd
in
fsubs
mov
dec
out
push
test
jb
inc
add
add
stos
push
add
add
add
pop
xchg
jmp
arpl
lret
push
inc
add
pop
pop
add
add
xchg
mov
add
add
add
jge
addb
add
inc
pop
adc
dec
and
jne
add
mov
and
mov
mov
popa
mov
xor
rolb
cwtl
js
or
dec
jecxz
dec
jno
push
faddp
add
les
sub
add
jp
xchg
in
movsb
add
add
xchg
add
add
mov
mov
dec
and
mov
push
mov
pushf
mov
mov
add
cmpsl
cwtl
rolb
iret
xchg
mov
cmp
addr16
add
add
call
xlat
std
dec
or
rolb
icebp
push
add
sub
fidivrl
add
lahf
push
add
add
bound
mov
add
in
aas
sub
nop
add
sub
mov
out
push
add
add
outsl
cli
jl
movsl
lock
mov
cmp
dec
adc
inc
cmp
dec
jl
cmc
outsb
cli
aaa
add
mov
jecxz
fwait
mov
add
add
xchg
adcl
add
add
add
mov
addr16
or
add
rolb
iret
push
cmpsl
xor
in
rolb
mov
add
mov
xor
test
add
lods
loope
add
mov
push
add
jge
add
push
jle
add
mov
pop
push
add
dec
push
add
pusha
add
and
outsl
or
ret
xlat
iret
daa
enter
add
add
ret
ds
add
add
add
add
lds
stos
sub
stos
push
dec
sub
inc
sbb
add
mov
add
inc
add
jae
mov
mov
pop
dec
push
add
push
add
mov
imul
inc
add
jecxz
pop
incb
mov
mov
xchg
pop
push
add
mov
rolb
inc
add
sbb
add
push
inc
or
movsb
add
xchg
fadds
mov
mov
add
add
jnp
add
pop
jnp
push
out
fsubrs
inc
add
int3
jle
daa
jno
mov
add
icebp
xchg
mov
mov
adc
add
sbb
add
rolb
sbb
roll
in
seta
pop
ljmp
ror
push
add
loope
fsubl
cmp
sub
pop
cmp
lea
add
push
xchg
add
xchg
mov
and
addl
insb
inc
add
push
or
pusha
add
mov
push
add
icebp
jmp
ss
out
inc
add
sbb
lret
js
add
jg
adc
ret
jg
add
adc
and
sbb
xor
stos
push
push
add
push
add
lret
ds
aad
ret
sbb
js
lods
icebp
pop
push
add
add
call
sbb
cmp
xchg
add
add
shrl
insb
dec
ret
sub
jno
xchg
add
test
or
add
out
dec
and
mov
insb
std
lcall
add
add
jno
gs
cmp
loope
pop
fwait
xchg
add
insb
sub
add
mov
and
add
cmp
bound
mov
mov
in
add
jb
xchg
das
in
add
jmp
xor
sbbl
aas
lea
and
mov
ret
push
add
cmp
add
mov
jmp
ret
dec
movb
popf
insl
add
stos
sub
or
add
mov
in
hlt
add
fimuls
xchg
add
loopne
jo
cs
mov
insl
xor
add
movsb
add
mov
pushl
rcl
add
addb
int3
add
mov
add
add
push
int3
jo
jl
and
mov
popf
imul
repz
add
add
xor
jno
mov
push
sti
push
xor
dec
lahf
js
adc
push
add
stos
inc
add
mov
or
test
imul
xchg
xor
add
add
sub
add
fildll
add
xor
lret
mov
filds
add
in
pop
arpl
mov
lret
lods
call
sub
jle
scas
sbb
out
adc
dec
mov
jne
fidivrs
sub
and
into
mov
add
add
xchg
cmpsb
add
jnp
pushf
pop
pop
repnz
lock
mov
imull
inc
cs
mov
lods
leave
pop
cli
push
test
imul
xchg
or
mov
adc
dec
add
mov
lock
test
mov
sbb
loope
and
mov
movb
add
add
pop
sti
mov
cli
lret
dec
je
movswl
insb
movsl
xchg
add
xor
cwtl
fdivs
das
out
xchg
push
add
sarl
gs
rolb
add
add
mov
xchg
add
push
push
add
mov
icebp
ficomps
out
mov
push
popf
rol
mov
mov
orl
jne
sub
lea
addb
addb
ja
not
inc
js
add
push
mov
addb
sub
add
movb
add
add
add
xor
mov
rcl
add
test
aam
jno
add
js
add
add
add
mov
mov
pusha
add
arpl
add
adc
aaa
mov
xlat
xchg
sbb
addr16
mov
add
mov
adc
mov
mov
jmp
cmp
test
add
inc
add
and
mov
mov
aam
aad
dec
std
movsb
add
add
add
add
add
xor
xor
mov
add
xchg
add
mov
or
fwait
jae
add
ds
add
mov
and
clc
dec
stos
pop
sbb
add
add
ret
addr16
testl
iret
das
sbb
call
add
push
add
add
mov
mov
and
or
mov
mov
or
jb
sub
bound
mov
xor
hlt
add
xor
push
add
push
add
jne
add
pop
movsl
pop
cmp
in
push
add
and
ficompl
fstl
add
mov
mov
into
fsubr
pop
cmpsl
or
add
cmp
add
add
addb
or
add
sbb
sub
pop
or
add
add
inc
add
imull
or
lods
mov
mov
mov
pop
cmp
cmpsb
add
rcll
add
rcll
sahf
clc
data16
add
mov
jno
jmp
mov
icebp
lods
add
jns
and
dec
aad
or
add
stc
mov
repnz
divl
add
add
pop
sub
or
add
outsl
call
outsb
rcll
addb
jne
add
xchg
add
sbb
addb
add
iret
ja
jne
daa
inc
hlt
add
insb
popa
and
sti
rolb
sbb
inc
add
in
addb
cli
iret
sub
mov
sahf
lock
sub
add
rolb
xor
insl
add
mov
add
add
add
inc
add
arpl
mov
fiaddl
mov
bound
mov
add
leave
pop
ss
fcoms
sbb
xchg
jge
dec
filds
add
cmpsb
add
rol
add
sbb
add
rolb
jg
add
push
or
mov
outsb
sub
stc
jo
addb
add
xchg
add
mov
filds
mov
add
push
sahf
cmp
mov
add
icebp
inc
add
add
add
out
pop
jmp
mov
inc
mov
mov
and
mov
mov
mov
add
add
into
push
jl
stos
xchg
xchg
add
mov
mov
sbb
insb
loopne
fwait
push
add
adc
pop
sbb
add
add
in
sub
cmp
pushf
shrl
fsubs
cltd
out
add
test
and
add
ret
or
jno
pop
loop
inc
add
add
enter
inc
add
cmp
insl
sub
dec
pop
faddl
add
jno
ret
add
or
jne
mov
mov
pop
stos
mov
loopne
mov
dec
mov
jb
scas
jno
add
mov
inc
das
jb
push
mov
mov
popf
pop
cwtl
mov
jns
add
jns
test
das
je
mov
scas
cmp
rolb
add
mov
dec
movsl
int
pop
pop
adc
sub
mov
scas
jno
add
imul
add
mov
add
mov
mov
add
cld
xor
int3
popf
fxch
into
push
loopne
shrl
out
xchg
add
call
dec
insl
or
aaa
lahf
icebp
push
add
add
in
add
or
jp
in
out
add
inc
into
rolb
cmp
add
add
in
push
sbb
lds
lds
pop
jns
add
inc
add
mov
fwait
add
inc
add
int3
rolb
cli
pop
dec
lods
popa
pusha
add
jg
add
in
or
pop
jo
fdivrs
mov
mov
dec
mov
imul
mov
push
add
mov
mov
test
addb
add
jno
int3
dec
dec
rorl
clc
test
or
fxch
sbb
rolb
roll
adc
add
loop
cmp
add
les
push
sub
jb
add
loop
xchg
add
in
jmp
adc
xchg
leave
dec
rolb
in
push
add
add
andl
mov
mov
add
add
dec
sbb
rolb
ret
adcl
test
push
sbb
stc
frstor
mov
push
add
push
jp
add
add
xor
fdivrl
rolb
push
cmp
testb
mov
pusha
add
out
incb
ret
in
addr16
xchg
jmp
ja
add
mov
mov
add
lds
add
mov
shll
add
sbb
add
pop
mov
jmp
data16
add
inc
jle
mov
add
adc
mov
add
jl
add
mov
add
add
cmpsl
testb
sub
add
add
out
sub
add
daa
xor
add
push
add
mov
add
ds
enter
loope
mov
xchg
addr16
or
mov
add
mov
and
mov
push
push
add
add
add
sbb
add
xchg
cmp
cmp
mov
repnz
enter
add
inc
add
repnz
jae
xor
add
inc
test
add
clc
repnz
jae
add
xlat
inc
add
fidivrs
clc
repnz
jae
inc
add
data16
add
fisttpll
jbe
inc
add
inc
jmp
add
clc
repnz
jae
sbb
add
add
clc
repnz
jae
add
pop
adc
je
add
add
repnz
jae
or
sti
pushl
push
mov
xchg
ret
xchg
add
jne
clc
repnz
jae
out
testl
dec
clc
dec
inc
clc
repnz
jae
or
xor
mull
repnz
jae
mov
popa
add
repnz
jae
testl
cmpsl
cmp
adc
cmp
ret
push
mov
std
xchg
xchg
sub
inc
push
mov
xchg
ret
add
mov
add
testl
add
scas
std
mov
add
adc
pop
popa
clc
repnz
jae
inc
add
add
sbb
nop
jae
add
pop
dec
mov
clc
repnz
jae
add
ds
add
js
in
pop
mov
clc
repnz
jae
mov
cmpl
outsl
loopne
repnz
jae
add
push
clc
repnz
jae
je
mov
les
stos
and
fwait
cld
nop
jmp
adc
xor
jae
push
ja
push
fwait
cld
nop
jmp
add
add
add
dec
sub
push
mov
xchg
ret
add
xchg
add
inc
data16
mov
clc
repnz
jae
inc
add
add
fwait
cld
nop
jmp
add
inc
insl
repz
mov
xchg
ret
mov
add
xlat
mov
adc
add
clc
repnz
jae
inc
add
out
xor
sub
clc
repnz
jae
jb
sbb
add
push
add
fwait
cld
nop
jmp
add
add
mov
test
repnz
jae
add
xor
clc
repnz
jae
jb
fcomps
push
add
add
je
inc
mov
adc
es
add
add
mov
push
mov
xchg
ret
movsb
add
sbb
push
cmp
fwait
cld
nop
jmp
add
add
adc
mov
xchg
ret
add
inc
dec
mov
nop
jae
mov
pop
xor
add
repnz
jae
test
add
mov
clc
repnz
jae
add
jmp
mov
repnz
jae
insl
xor
cld
nop
jmp
jge
nop
scas
insb
xchg
add
call
clc
repnz
jae
add
sbb
nop
jae
add
incb
jne
inc
add
pop
inc
or
je
fwait
cld
nop
jmp
out
mov
lds
adc
testl
test
repnz
jae
insb
add
mov
jae
mov
fwait
cld
nop
jmp
mov
pop
xlat
add
test
icebp
fwait
cld
nop
jmp
mov
jno
mov
jb
push
add
add
add
push
mov
xchg
ret
add
jno
insl
mov
jae
add
insl
testl
xchg
push
mov
xchg
ret
pop
std
jo
add
inc
nop
add
shl
fwait
cld
nop
jmp
add
add
add
clc
repnz
jae
mov
insl
addb
add
add
jae
or
movsb
add
xchg
loop
push
mov
xchg
ret
std
sbb
add
xor
sub
clc
clc
repnz
jae
repz
mov
add
sahf
pop
clc
repnz
jae
add
dec
add
or
repnz
jae
add
add
sbb
test
fwait
cld
nop
jmp
xchg
add
xchg
xor
add
xor
add
clc
repnz
jae
inc
add
add
push
mov
xchg
ret
push
jge
xchg
push
mov
clc
repnz
jae
sbb
xor
push
mov
xchg
ret
add
add
jno
cmpl
fwait
cld
nop
jmp
jo
inc
sbb
cmpl
fwait
cld
nop
jmp
xor
add
test
jmp
push
sub
jge
mov
scas
inc
add
repnz
jae
je
es
add
add
pop
push
clc
repnz
jae
add
add
xor
add
fwait
cld
nop
jmp
mov
nop
add
add
mull
inc
jp
fwait
cld
nop
jmp
add
add
mov
clc
repnz
jae
add
out
inc
outsb
add
clc
repnz
jae
add
add
adc
scas
jmp
clc
repnz
jae
std
sbb
es
xchg
int3
add
clc
repnz
jae
jno
jp
mov
mov
mov
xchg
ret
jb
jo
imull
clc
repnz
jae
movsb
out
add
add
movb
jnp
pop
lcall
or
add
push
fwait
cld
nop
jmp
adc
add
add
or
popf
and
push
mov
xchg
ret
stc
divl
fwait
cld
nop
jmp
add
add
push
add
adcb
pop
clc
repnz
jae
add
xlat
add
mov
fwait
cld
nop
jmp
jae
add
nop
or
push
mov
xchg
ret
or
xor
fsubrs
jne
je
repnz
jae
movsb
mov
adc
repnz
jae
nop
pop
add
mov
add
fwait
cld
nop
jmp
add
test
inc
std
push
clc
repnz
jae
inc
add
or
add
clc
repnz
jae
add
add
cmp
mov
nop
jae
mov
loop
xchg
adc
add
fwait
cld
nop
jmp
add
add
jp
push
add
push
clc
repnz
jae
add
push
andl
jae
jmp
inc
add
adc
mov
jae
add
jno
pop
add
add
push
clc
repnz
jae
je
add
add
add
testb
add
mov
clc
repnz
jae
add
add
pusha
add
clc
repnz
jae
ds
outsb
and
repnz
jae
scas
and
pop
xlat
pop
dec
push
clc
repnz
jae
xor
add
out
dec
ret
add
add
add
xor
xorb
cs
iret
mov
clc
repnz
jae
add
add
test
es
add
je
popa
outsl
mov
fwait
cld
nop
jmp
test
ds
js
add
nop
jmp
push
dec
stc
add
push
mov
test
roll
add
add
scas
pop
insb
mov
sbb
clc
repnz
jae
add
add
insl
inc
rolb
add
inc
sbb
cmpsl
ljmp
insb
addb
add
add
jmp
add
repz
add
add
scas
mov
clc
repnz
jae
and
addb
sub
mov
xchg
ret
add
add
push
mov
xchg
ret
es
pop
push
mov
xchg
ret
add
add
and
jae
fildl
sti
fwait
cld
nop
jmp
add
add
inc
add
cld
lcall
and
mov
push
fwait
cld
nop
jmp
stc
add
scas
testl
mov
clc
repnz
jae
push
inc
add
sbb
jae
push
clc
repnz
jae
add
add
add
add
lcall
add
add
testl
push
push
mov
xchg
ret
xchg
movsb
ds
fsubr
nop
and
mov
dec
fwait
cld
nop
jmp
xor
repz
xor
add
and
clc
repnz
jae
stc
add
xchg
jo
mov
nop
jae
mov
je
cltd
mov
clc
repnz
jae
xor
add
add
js
clc
repnz
jae
xor
es
add
add
add
add
insb
or
add
add
add
inc
fwait
cld
nop
jmp
add
sbb
add
add
mov
push
mov
xchg
ret
add
mov
jmp
mov
add
andb
add
push
add
lea
clc
repnz
jae
add
clc
repnz
jae
sbb
scas
mov
add
clc
repnz
jae
add
add
add
pop
pushl
clc
repnz
jae
add
ds
jge
sbbl
jp
add
add
jge
roll
push
fwait
cld
nop
jmp
sbb
add
test
ja
add
mov
xchg
ret
add
cs
imul
clc
repnz
jae
idiv
add
rep
push
mov
xchg
ret
jo
adc
pop
jge
mov
nop
jae
add
add
jb
fwait
cld
nop
jmp
addb
inc
add
add
clc
repnz
jae
sbb
pop
mov
lcall
adc
add
call
clc
repnz
jae
es
sahf
and
push
mov
xchg
ret
inc
stc
add
add
mov
push
mov
xchg
ret
add
add
add
aam
inc
add
scas
pop
add
scas
add
repnz
jae
add
add
std
je
clc
repnz
jae
out
out
lods
mov
clc
repnz
jae
add
mov
push
add
add
jmp
out
add
add
test
out
add
add
push
jge
outsl
arpl
add
adc
add
insl
aam
xor
fldl
je
sub
or
add
insl
push
clc
repnz
jae
add
inc
nop
jae
add
mov
jae
add
les
jno
jo
nop
add
add
clc
repnz
jae
nop
inc
add
jl,pn
sti
clc
repnz
jae
std
nop
repz
addb
repnz
jae
dec
add
mov
dec
push
mov
xchg
ret
add
add
nop
jae
add
xor
jmp
and
add
add
insb
add
std
jae
addb
dec
add
push
mov
xchg
ret
mov
cld
add
fwait
cld
nop
jmp
jae
add
add
scas
repz
add
jne
sub
loop
clc
repnz
jae
or
jb
add
mov
clc
repnz
jae
add
nop
insl
fld1
popa
adc
add
repnz
jae
add
mov
add
clc
repnz
jae
inc
add
add
mov
repnz
jae
add
test
xor
scas
inc
inc
add
repnz
jae
js
dec
mov
inc
push
mov
xchg
ret
pop
add
testb
lods
clc
repnz
jae
add
mov
movsb
jno
add
clc
repnz
jae
mov
add
outsl
imul
clc
repnz
jae
add
sbb
std
mov
incb
add
idiv
pushl
stc
add
add
repnz
jae
inc
add
les
add
xor
mov
jae
or
add
sbb
nop
jmp
sbb
add
add
add
add
push
mov
xchg
ret
add
into
notl
repnz
jae
jb
add
inc
jb
dec
test
fwait
cld
nop
jmp
add
add
push
mov
xchg
ret
fdivrs
mov
add
clc
repnz
jae
jno
add
std
shr
fwait
cld
nop
jmp
add
adc
add
and
add
push
push
mov
xchg
ret
mov
add
inc
add
shrb
repnz
jae
jmp
test
add
cmp
fwait
cld
nop
jmp
nop
jge
add
push
clc
repnz
jae
inc
add
insb
addb
xor
clc
repnz
jae
add
mov
es
and
push
mov
xchg
ret
xlat
or
mov
nop
jae
out
add
je
add
leave
add
clc
repnz
jae
out
add
push
mov
xchg
ret
dec
add
add
les
push
add
cli
hlt
lcall
pop
add
mov
jmp
adc
repnz
jae
add
jb
add
pop
jne
clc
repnz
jae
add
add
popa
clc
repnz
jae
add
add
mov
adc
faddp
out
fwait
cld
nop
jmp
mov
add
dec
add
clc
repnz
jae
jno
std
js
insb
scas
mov
clc
repnz
jae
test
mov
in
add
fldl
scas
add
add
mov
js
add
sbb
add
repnz
jae
add
into
add
sub
fwait
cld
nop
jmp
add
inc
jo
inc
add
or
clc
repnz
jae
add
popa
add
cld
nop
jmp
jno
add
add
add
repnz
jae
add
ds
pop
push
push
mov
xchg
ret
into
mov
xchg
lahf
push
push
mov
xchg
ret
add
add
les
push
jno
mov
push
mov
xchg
ret
add
jb
dec
push
mov
dec
add
hlt
fwait
add
lds
pushf
add
clc
repnz
jae
xchg
jp
inc
add
add
push
mov
xchg
ret
add
add
add
incl
nop
jmp
add
push
add
jge
and
mov
clc
repnz
jae
repz
mov
stc
push
mov
lea
mov
data16
jge
xchg
add
fldl
add
repnz
jae
add
add
add
mov
nop
jmp
mov
jno
add
pop
push
mov
inc
mov
or
add
jno
add
or
clc
repnz
jae
je
insl
sbb
fwait
cld
nop
jmp
add
add
add
dec
adc
repnz
jae
xor
add
add
clc
repnz
jae
es
sbb
inc
or
repnz
jae
add
lea
popa
add
repnz
jae
testl
push
insb
add
clc
repnz
jae
cs
add
es
or
nop
jae
insb
testl
push
push
mov
xchg
ret
add
add
dec
inc
push
mov
xchg
ret
scas
xor
scas
data16
add
fwait
cld
nop
jmp
or
add
add
mov
clc
repnz
jae
mov
nop
add
negl
add
add
repnz
jae
or
cmp
fwait
cld
nop
jmp
mov
add
icebp
aaa
mov
jge
cmpl
jmp
incl
add
adc
and
mov
repnz
jae
movsb
add
add
add
push
push
mov
xchg
ret
mov
inc
add
pop
clc
repnz
jae
add
inc
insl
test
divl
lods
clc
repnz
jae
add
into
add
and
clc
repnz
jae
test
add
mov
clc
repnz
jae
add
add
rolb
cmp
mov
cmp
ret
je
mov
add
xor
nop
jmp
stc
add
addb
add
xor
adc
cld
nop
jmp
xor
xchg
add
clc
repnz
jae
movsb
add
out
mov
lret
mov
clc
repnz
jae
add
inc
add
fdivr
push
clc
repnz
jae
jb
and
jne
inc
pop
mov
fwait
cld
nop
jmp
add
into
adc
dec
mov
push
mov
xchg
ret
into
add
add
add
push
fwait
cld
nop
jmp
add
xor
mov
add
jg
clc
repnz
jae
scas
adc
jp
addb
push
cmpsb
add
push
dec
add
xor
add
out
mov
inc
add
fucomp
cmpsl
or
add
out
add
inc
cs
add
xor
fwait
cld
nop
jmp
mov
int3
call
fwait
cld
nop
jmp
add
js
mov
clc
repnz
jae
jmp
add
mov
in
fmuls
add
arpl
jae
fildl
inc
push
add
add
je
clc
repnz
jae
mov
mov
idiv
lcall
push
add
movsb
or
dec
and
mov
mov
clc
repnz
jae
sbb
das
lea
push
mov
xchg
ret
or
jne
clc
repnz
jae
add
mov
xchg
ret
add
push
fsubrs
pop
movzwl
clc
repnz
jae
and
jp
mov
clc
repnz
jae
xorb
test
nop
jmp
inc
add
or
repnz
jae
add
js
dec
add
add
repnz
jae
add
add
add
clc
repnz
jae
into
jmp
dec
push
clc
repnz
jae
sbb
add
add
add
fimull
scas
enter
jae
add
out
push
push
mov
xchg
ret
mov
movsb
add
mov
clc
repnz
jae
test
movsb
push
out
jnp
nop
jae
inc
add
xor
mov
mov
clc
repnz
jae
nop
std
inc
sbb
call
clc
repnz
jae
es
adc
dec
clc
repnz
jae
add
add
add
jecxz
mov
nop
jae
add
nop
add
popf
push
push
mov
xchg
ret
out
inc
stc
add
mov
add
adc
add
ds
out
divl
adc
mov
mov
push
jmp
incl
out
add
add
xor
xor
push
mov
xchg
ret
jb
stc
jp
es
ror
push
mov
xchg
ret
xchg
add
jae
or
fwait
cld
nop
jmp
add
inc
scas
cs
push
clc
repnz
jae
je
out
inc
jo
or
sbb
repnz
jae
add
sbb
inc
call
jae
repz
jmp
xchg
mov
leave
mov
clc
repnz
jae
add
add
xor
rolb
sbb
add
or
add
testl
mov
clc
repnz
jae
add
add
repnz
jae
add
mov
addr16
and
pushf
push
fwait
cld
nop
jmp
add
add
test
add
add
mov
repnz
jae
mov
sbb
add
pop
and
repnz
jae
add
xor
cs
add
add
nop
jae
insl
out
xor
add
mov
push
mov
xchg
ret
or
cltd
pop
push
mov
xchg
ret
add
add
insl
repz
add
shr
clc
repnz
jae
jae
xor
call
fwait
cld
nop
jmp
sbb
sbb
jb
add
clc
repnz
jae
stc
jno
repz
push
mov
add
repnz
jae
sbb
add
add
mov
clc
repnz
jae
add
movsb
pop
imul
xchg
ret
mov
jl
test
cld
nop
jmp
jno
add
push
icebp
loop
cmpsl
jl
fwait
cld
nop
jmp
adc
add
inc
out
es
xor
fwait
cld
nop
jmp
add
add
add
les
and
add
add
add
repnz
jae
or
fwait
cld
nop
jmp
mov
mov
mov
pop
pusha
clc
repnz
jae
mov
sbb
clc
push
mov
xchg
ret
add
insl
mov
xchg
inc
add
sar
nop
jae
add
pop
add
push
lds
dec
cmp
cld
nop
jmp
add
add
mov
mov
clc
repnz
jae
add
je
add
add
decl
clc
repnz
jae
sbb
adc
ret
push
mov
xchg
ret
inc
andb
add
add
inc
push
mov
xchg
ret
jo
sbb
movb
scas
jne
clc
repnz
jae
addb
test
nop
jmp
add
add
cmp
clc
repnz
jae
std
scas
add
lret
repnz
jae
add
add
inc
lea
fwait
cld
nop
jmp
out
jae
js
add
call
repnz
jae
stc
xchg
add
add
repnz
repnz
jae
push
push
inc
add
es
xor
clc
repnz
jae
out
add
js,pt
xor
jae
into
je
add
pop
push
mov
xchg
ret
and
sbb
add
mov
push
mov
xchg
ret
or
pop
add
and
add
repnz
jae
stc
fadds
sbb
add
jb
add
push
mov
xchg
ret
add
clc
repnz
jae
add
scas
add
add
cmp
nop
jae
add
add
sbb
push
fwait
cld
nop
jmp
inc
mov
add
cs
adc
push
mov
xchg
ret
add
add
test
fwait
cld
nop
jmp
mov
add
nop
dec
mov
fwait
cld
nop
jmp
mov
jmp
push
mov
mov
add
xchg
sub
jmp
test
push
push
mov
xchg
ret
add
testl
call
fwait
cld
nop
jmp
inc
dec
testl
add
add
repnz
jae
add
inc
add
cmpl
add
add
adc
rolb
int3
add
clc
repnz
jae
add
jo
xor
dec
clc
repnz
jae
add
add
and
les
test
fwait
cld
nop
jmp
add
scas
sbb
test
or
cmp
add
inc
xor
mov
add
add
mov
xchg
ret
add
add
mov
add
add
sahf
cmc
inc
add
sbb
add
incb
adc
add
add
add
clc
repnz
jae
add
add
pusha
add
mov
inc
add
add
mov
add
mov
xchg
ret
test
add
add
arpl
cld
nop
jmp
dec
inc
inc
xor
adc
bound
mov
inc
add
pop
push
mov
xchg
ret
add
mov
or
lcall
loop
add
add
sbb
popa
add
repnz
jae
testl
push
clc
repnz
jae
mov
xchg
in
push
push
mov
xchg
ret
into
add
add
add
add
clc
repnz
jae
add
mov
nop
jae
add
add
repz
add
es
mov
clc
repnz
jae
add
add
add
or
test
repnz
jae
or
add
mov
add
in
add
xlat
mov
sti
or
clc
repnz
jae
xor
xchg
and
clc
repnz
jae
add
add
mov
adc
rolb
add
push
clc
repnz
jae
add
xor
or
dec
mov
push
mov
xchg
ret
add
movsb
mov
mov
pop
mov
jmp
add
xor
add
clc
repnz
jae
fadds
je
sbb
iret
and
push
mov
xchg
ret
push
add
insl
into
fiadds
jne
clc
repnz
jae
into
add
mov
pop
clc
repnz
jae
add
add
add
add
push
mov
xchg
ret
or
into
add
repnz
jae
add
sbb
xor
add
clc
repnz
jae
add
mov
jo
cmp
nop
jae
inc
add
cmpsb
add
add
clc
repnz
jae
nop
add
or
test
cmpsb
jne
push
movsb
add
add
and
and
mov
add
repnz
jae
push
add
cmpsl
hlt
add
add
mov
cld
nop
jmp
sbb
add
add
add
lea
clc
repnz
jae
inc
ds
or
jecxz
clc
repnz
jae
add
jge
je
clc
repnz
jae
mov
lea
clc
repnz
jae
add
jo
mov
clc
repnz
jae
xlat
add
add
ja
cmpl
fwait
cld
nop
jmp
add
add
jmp
clc
repnz
jae
mov
add
and
mov
xchg
ret
add
jp
mov
add
push
mov
xchg
ret
js
je
test
push
push
mov
xchg
ret
add
add
push
mov
xchg
ret
mov
es
add
repnz
jae
adc
add
dec
and
clc
repnz
jae
repz
int3
mov
clc
repnz
jae
xor
out
addb
nop
clc
repnz
jae
and
add
mov
add
popf
add
clc
repnz
jae
xchg
add
add
mov
ret
jge
dec
add
cld
nop
jmp
dec
add
pusha
fwait
cld
nop
jmp
add
sbb
js
dec
movsb
add
mov
clc
repnz
jae
jae
mov
mov
repnz
jae
mov
add
jae
add
clc
repnz
jae
mov
add
fcoms
xor
dec
add
mov
xchg
ret
add
add
xchg
add
mov
add
movzwl
fwait
cld
nop
jmp
add
into
add
jmp
js
add
movsb
add
pop
add
mov
sub
repnz
jae
add
insb
scas
je
mov
jae
out
add
add
add
mov
aad
and
add
mov
push
mov
xchg
ret
add
add
or
add
add
jb
inc
and
movb
mov
clc
repnz
jae
add
adc
sub
jae
add
inc
dec
mov
mov
clc
repnz
jae
add
or
ffree
fwait
cld
nop
jmp
js
add
add
add
sahf
mov
fwait
cld
nop
jmp
jae
dec
stc
xor
ds
cmp
fwait
cld
nop
jmp
dec
es
nop
or
inc
jl
jge
clc
repnz
jae
mov
mov
add
call
or
add
jle
push
mov
xchg
ret
add
add
mov
add
push
push
mov
xchg
ret
mov
or
add
cld
movzwl
clc
repnz
jae
or
jmp
add
jae
add
jge
out
scas
jge
mov
fwait
cld
nop
jmp
test
xor
pop
mov
clc
repnz
jae
or
jno
push
sbb
mov
std
sbb
add
repnz
jae
add
inc
add
jno
pop
clc
repnz
jae
add
insb
sbb
rolb
mull
add
mov
clc
repnz
jae
add
mov
push
fwait
cld
nop
jmp
add
jb
add
mov
clc
repnz
jae
inc
mov
xor
fwait
cld
nop
jmp
nop
jb
add
inc
add
add
fisttpl
test
cld
nop
jmp
add
ret
sbb
push
jmp
add
jae
add
clc
repnz
jae
add
push
add
aad
inc
add
jae
xor
fsubrs
xlat
xchg
call
fwait
cld
nop
jmp
add
stc
add
and
clc
repnz
jae
jb
or
inc
add
mov
clc
repnz
jae
mov
fwait
cld
nop
jmp
es
add
movb
add
in
sbb
nop
jae
jge
add
xchg
test
mov
clc
repnz
jae
mull
pop
add
mov
cmp
repnz
jae
adc
inc
add
xlat
pop
test
in
sbb
nop
jmp
jae
add
add
jb
stc
es
fwait
cld
nop
jmp
sbb
and
cwtl
jb
clc
repnz
jae
fadds
dec
xchg
add
add
pop
data16
clc
repnz
jae
es
add
addb
push
clc
repnz
jae
add
add
add
mov
mov
xchg
ret
jmp
add
mov
repnz
jae
cs
add
clc
repnz
jae
repz
mov
jmp
jo
add
xchg
js
dec
add
lcall
or
add
add
add
xchg
add
add
fwait
cld
nop
jmp
insb
js
add
inc
adc
jne
mov
clc
repnz
jae
push
jge
into
jb
sub
cld
nop
jmp
xchg
xlat
add
add
inc
xchg
mov
cmp
repz
cld
nop
jmp
neg
or
add
in
mov
push
mov
xchg
ret
cs
dec
testl
clc
repnz
jae
es
add
test
dec
imul
clc
repnz
jae
fsubr
fadds
push
push
mov
xchg
ret
add
add
in
add
mov
jmp
fwait
cld
nop
jmp
movsb
js
add
add
add
clc
repnz
jae
add
jp
add
out
add
add
add
add
add
add
fwait
cld
nop
jmp
out
add
add
dec
fwait
cld
nop
jmp
pop
add
add
mov
add
inc
add
and
fwait
cld
nop
jmp
add
add
mov
clc
repnz
jae
inc
jp
add
inc
and
mov
popa
clc
repnz
jae
add
inc
add
xchg
add
sub
clc
repnz
jae
mov
add
push
mov
xchg
ret
xlat
insl
add
out
mov
sar
repnz
jae
jo
add
add
add
add
add
add
nop
jae
es
stos
push
mov
xchg
ret
js
add
movb
add
ss
clc
repnz
jae
add
aam
std
xor
fwait
cld
nop
jmp
mov
add
inc
hlt
add
sbb
jne
clc
repnz
jae
xlat
add
sbb
add
cld
nop
jmp
add
stc
pop
inc
out
inc
ds
push
mov
xchg
ret
add
add
add
mov
add
in
incl
sbb
xor
or
test
clc
repnz
jae
jp
and
mov
fwait
cld
nop
jmp
add
add
push
fisttpl
repz
add
les
jmp
dec
add
repnz
jae
mov
stc
xchg
les
add
and
clc
repnz
jae
mov
scas
add
inc
sub
repnz
jae
insb
add
sbb
pop
add
ja
add
jae
or
insl
mov
jmp
fdivrp
repnz
jae
jae
add
add
add
repnz
jae
add
mov
fwait
jmp
jo
pop
stc
inc
sbb
xor
movzwl
clc
repnz
jae
add
stc
add
repnz
jae
mov
or
or
movsb
push
mov
xchg
ret
pop
xor
inc
outsb
mov
clc
repnz
jae
mov
push
mov
xchg
ret
add
jo
mov
add
call
clc
repnz
jae
add
add
add
clc
repnz
jae
add
je
je
cli
sub
clc
repnz
jae
addb
inc
add
add
mov
hlt
add
add
clc
repnz
jae
into
add
add
ret
clc
repnz
jae
inc
adc
inc
jmp
jg
fwait
cld
nop
jmp
add
or
cs
add
mov
xchg
ret
xchg
add
add
mov
loope
add
sbb
add
and
and
clc
repnz
jae
add
add
add
adc
and
imul
nop
jae
and
testl
nop
jae
stc
xlat
add
mov
push
mov
xchg
ret
add
add
imul
clc
repnz
jae
add
mov
sbb
repnz
jae
add
sbb
xor
clc
repnz
jae
adc
add
push
add
clc
repnz
jae
jge
adc
arpl
add
add
clc
repnz
jae
mov
add
or
jbe
clc
repnz
jae
mov
xlat
ds
clc
repnz
jae
add
mov
pop
push
not
push
mov
xchg
ret
mov
add
outsl
popa
fs
repnz
jae
push
xlat
xchg
add
pop
pushf
push
fwait
cld
nop
jmp
fmul
mov
inc
xchg
adc
repnz
jae
add
jmp
mov
stc
inc
add
stc
ds
popa
push
mov
xchg
ret
add
add
std
mov
clc
repnz
jae
jae
ds
clc
repnz
jae
add
add
add
xchg
ljmp
jae
inc
std
or
test
cld
nop
jmp
add
test
sti
clc
repnz
jae
inc
add
mov
mov
xchg
ret
inc
pop
add
mov
clc
repnz
jae
js
or
imull
add
clc
repnz
jae
add
add
mov
jmp
add
je
mov
movsb
add
and
jno
mov
stos
add
clc
repnz
jae
add
inc
mov
sar
repnz
jae
negl
jb
add
test
fwait
cld
nop
jmp
mov
mov
add
jl
clc
repnz
jae
add
add
push
add
mov
xor
clc
repnz
jae
dec
add
add
add
jae
cld
nop
jmp
mov
push
add
mov
xchg
ret
fdivs
add
mov
sbb
add
clc
repnz
jae
scas
std
and
cld
nop
jmp
repz
fdivrs
xchg
clc
repnz
jae
je
add
scas
add
ret
mov
clc
repnz
jae
inc
std
xor
adc
repnz
jae
add
xchg
mov
inc
push
mov
xchg
ret
pop
jb
and
into
xchg
mov
push
mov
xchg
ret
adc
add
insl
into
mov
xor
clc
repnz
jae
jp
xor
add
dec
cmp
mov
xchg
ret
mov
inc
clc
repnz
jae
inc
add
jo
add
inc
mov
cmp
jg
clc
repnz
jae
inc
jae
add
push
add
push
mov
xchg
ret
jmp
push
pop
clc
repnz
jae
add
add
mov
push
mov
xchg
ret
add
add
mov
or
nop
jmp
add
add
push
fwait
cld
nop
jmp
add
xor
js
scas
add
push
loopne
mov
xchg
ret
nop
add
movb
pop
clc
repnz
jae
add
add
movsb
mov
aas
mov
push
mov
xchg
ret
jp
adc
add
movsb
clc
repnz
jae
add
xor
cmpl
cmp
incl
add
into
mov
cmp
rclb
iret
inc
add
add
repz
add
mov
fwait
cld
nop
jmp
mov
add
call
mov
jmp
add
xchg
movsb
cs
push
push
mov
xchg
ret
add
mov
dec
xchg
clc
repnz
jae
and
add
inc
and
decl
push
mov
xchg
ret
mov
aas
movzwl
clc
repnz
jae
mov
std
add
test
jmp
jmp
add
insb
jno
add
insb
xor
clc
repnz
jae
jge
mov
pop
fwait
cld
nop
jmp
add
jb
add
add
sub
repnz
jae
jge,pt
xor
mov
insb
xchg
add
fwait
cld
nop
jmp
or
or
jp
xchg
add
fwait
cld
nop
jmp
insb
add
add
sbb
repnz
jae
out
push
std
add
mov
pop
inc
push
mov
xchg
ret
add
push
jno
mov
clc
repnz
jae
sbb
mov
clc
repnz
jae
add
js
add
jle
clc
repnz
jae
add
xor
add
mov
xchg
ret
sbb
add
mov
jmp
out
add
sbb
pushl
push
mov
xchg
ret
add
out
jb
push
push
fwait
cld
nop
jmp
add
add
repz
std
add
jmp
repz
inc
je
push
clc
repnz
jae
add
xor
mov
inc
fdivr
incl
jae
jge
mov
div
add
add
cld
nop
jmp
add
fadd
jmp
push
push
mov
xchg
ret
xor
inc
sbb
jae
repnz
jae
add
and
hlt
add
clc
repnz
jae
mov
out
out
clc
clc
repnz
jae
add
add
repnz
jae
add
js
jmp
push
clc
repnz
jae
and
testl
test
cld
lcall
call
test
pop
cmpl
fwait
cld
nop
jmp
mov
or
repnz
jae
add
add
push
test
test
sti
clc
repnz
jae
jae,pn
iret
pusha
push
mov
xchg
ret
xor
inc
add
nop
jmp
mov
push
mov
data16
sub
popa
add
repnz
jae
mov
cs
fwait
cld
nop
jmp
and
inc
xor
add
clc
repnz
jae
sbb
add
adc
mov
clc
repnz
jae
add
add
jo
testl
mov
xchg
ret
add
jno
add
push
add
xor
js
push
mov
xchg
ret
add
mov
rolb
in
add
clc
repnz
jae
add
inc
inc
fdivs
rol
push
mov
xchg
ret
jp
addb
add
pop
cmp
mov
xchg
ret
std
jo
add
loop
adc
dec
or
repnz
jae
mov
adc
repz
push
mov
mov
add
adc
jl
add
push
add
add
test
add
push
push
mov
xchg
ret
into
add
in
xchg
inc
lock
mov
xchg
ret
movb
add
add
insb
popa
clc
repnz
jae
xlat
and
add
xor
pop
pop
clc
repnz
jae
jae
mov
add
add
rep
clc
repnz
jae
scas
add
jmp
push
mov
fs
sbb
mov
in
lods
add
jge
lds
add
out
fdivs
add
pop
xor
not
add
add
addb
mov
cvtps2pd
pop
test
insl
mov
push
add
add
pop
aas
ret
iret
addb
gs
push
add
add
mov
add
mov
adc
loopne
mov
out
add
push
add
pop
enter
push
add
out
mov
out
call
add
add
fistl
xor
jb
popa
call
or
jbe
daa
xor
inc
add
jo
data16
in
lcall
aam
sub
fldt
pop
jae
lret
add
stos
sub
add
add
call
jbe
mov
mov
push
add
add
and
xchg
xchg
add
js
dec
adc
add
mov
add
add
mov
mov
inc
add
add
aam
int3
repz
add
add
mov
icebp
dec
insl
xchg
xor
loop
push
sub
and
out
aaa
cmp
pop
adc
add
sahf
mov
cltd
int3
scas
test
adc
mov
pop
cs
add
ret
and
push
add
mov
mov
addb
mov
adc
adc
fadds
aam
jg
add
sbb
outsb
nop
add
add
dec
shll
mov
xor
add
mov
add
js
add
xchg
add
add
mov
jl
cltd
mov
lods
les
push
jns
add
add
xchg
add
jbe
stc
xchg
pop
dec
insb
dec
insb
lods
fwait
bound
mov
add
add
add
mov
xchg
popf
and
mov
add
add
add
xor
sbb
fwait
mov
add
rorl
add
mov
add
add
or
mov
gs
fildl
test
add
loop
adc
xor
inc
add
jmp
hlt
add
mov
pop
inc
add
add
add
or
xor
add
cmpsb
add
clc
cmp
mov
push
pop
lret
cmp
add
inc
add
loope
jle
pusha
add
add
add
or
xor
sbb
dec
ljmp
add
add
or
mov
add
clc
inc
les
bound
mov
out
jmp
inc
adc
push
mov
cmpsl
out
pop
in
stos
add
out
mov
test
add
mov
insb
add
add
addb
rcll
add
add
bound
mov
test
mov
arpl
sub
cmpl
add
mov
inc
lcall
mov
inc
hlt
add
add
add
add
mov
push
add
cli
push
and
mov
add
sbb
add
add
fisubrs
xchg
pop
insb
mov
inc
add
add
adc
adc
negl
pop
mov
add
scas
dec
sbb
add
jle
adc
loop
into
sbb
add
mov
add
sbb
add
add
xor
push
jmp
or
xor
std
mov
or
add
in
cmp
data16
push
add
add
sbb
xchg
pop
aaa
mov
add
add
ljmp
pop
inc
aas
ljmp
mul
addl
jno
push
int3
fidivrl
mov
push
enter
and
mov
in
in
ficoml
jp
sbb
add
add
out
scas
xor
sbb
popa
add
sub
cmp
add
sub
dec
rorl
or
add
test
int3
jno
rolb
pop
adc
add
daa
mov
jge
lahf
out
clc
add
pop
push
add
add
daa
sbb
mov
cmpsl
cli
adc
jns
je
jns
add
mov
mov
add
shll
lea
add
jns
add
xor
mov
mov
mov
mov
add
mov
add
mov
rol
mov
add
test
mov
repnz
sbb
dec
cmc
or
add
add
mov
xlat
lock
add
std
leave
addb
xchg
inc
add
cmpsb
add
add
add
add
jecxz
lods
mov
cmp
add
mov
mov
inc
ss
add
int3
sub
fisttpll
cmp
testb
add
test
rorl
mov
iret
xor
inc
add
push
jnp
add
stos
rolb
sub
sti
rolb
test
add
add
inc
add
or
add
insb
shll
lds
add
je
jp
or
cli
incb
arpl
jg
mov
cld
jge
cld
repz
sub
sub
enter
mov
pop
adc
xchg
add
add
add
ret
mov
rol
add
sub
xchg
add
add
add
xchg
add
mov
lods
in
push
add
int
aaa
dec
test
add
je
jmp
add
add
loop
out
cmp
inc
jmp
movsb
add
add
add
add
cmpsl
adc
addr16
add
add
and
mov
ds
testl
fisubrl
popf
into
inc
add
ja
into
jge
test
sub
add
add
add
xchg
xlat
jmp
add
mov
fwait
jbe
xchg
add
add
cmp
ret
scas
cmpsb
add
sbb
mov
pop
shrl
repnz
addb
inc
add
add
dec
cmp
js
dec
mov
mov
mov
rolb
mov
push
mov
mov
jne
add
mov
das
sbb
add
stos
ret
lret
add
adc
jle
add
cmp
sbb
add
add
ja
lea
cmp
jp
cld
popf
repz
push
add
lods
imul
add
mov
mull
add
sub
lods
ffreep
add
push
add
add
add
add
mov
into
xchg
icebp
leave
gs
sbb
pop
add
pop
popf
stos
adc
outsl
pop
in
mov
test
popa
inc
in
in
add
das
arpl
dec
ja
mov
add
add
popf
and
fisttps
jge
add
xchg
jge
dec
scas
push
add
xchg
add
push
and
rolb
cld
cltd
bound
mov
scas
jl
xor
add
fdivs
push
add
imul
add
jg
mov
jbe
mov
cli
jmp
cli
sub
add
movsl
cmpl
pop
add
repnz
sarl
outsb
inc
jns,pn
pop
add
add
add
push
lret
jecxz
out
fisubs
add
jnp
fidivrl
dec
inc
cmp
push
add
pop
aad
dec
push
add
das
add
add
testb
add
aad
add
cwtl
shrl
push
add
add
sub
cs
dec
shll
or
pop
out
rolb
jmp
add
add
jmp
int
gs
iret
mov
addb
add
rolb
adcl
mov
add
add
add
in
aaa
mov
scas
mov
popf
dec
mov
pop
jb
popf
mov
xor
insb
ret
out
push
cltd
push
add
sub
sar
test
aam
mov
inc
add
mov
xchg
out
jmp
add
in
jp
add
addb
pop
dec
lods
into
push
add
lods
movb
xchg
scas
aad
lahf
mov
add
add
push
add
and
pop
inc
add
sbb
push
test
pop
ljmp
mov
add
add
test
out
lods
pop
dec
js
jp
scas
rcll
add
data16
ljmp
gs
data16
mov
or
pop
lea
add
add
pop
lcall
add
add
add
mov
stc
aad
in
push
add
fcompl
sub
cs
and
hlt
add
mov
add
add
add
jns
add
xchg
xchg
add
mov
fwait
jbe
pop
inc
ja
test
jnp
or
dec
mov
loope
dec
and
mov
lock
jnp
inc
lcall
inc
add
and
mov
add
cmp
sub
jge
lods
inc
add
notl
lret
mov
add
fistps
dec
push
xchg
add
mov
mov
add
add
or
add
add
fwait
lods
jae
in
xchg
add
add
imul
lahf
dec
add
aaa
add
mov
add
test
add
imul
add
dec
arpl
rep
or
mov
mov
notl
add
jne
movb
add
mov
cli
pop
sub
add
scas
lahf
sub
dec
jge
insb
inc
sbb
fwait
arpl
ffreep
add
popa
aam
mov
mov
or
add
in
add
pop
scas
je
sbb
mov
cmp
cmp
pop
cld
gs
cmc
cmp
aas
hlt
add
jne
add
iret
int
sub
js
add
add
add
mov
add
fsubl
inc
out
mov
push
into
jno
push
ljmp
std
loopne
and
add
add
ja
add
xlat
fldl
mov
scas
daa
enter
add
scas
pop
dec
out
shll
add
cmp
add
mov
dec
fldl
mov
xor
and
mov
xlat
dec
sbb
aad
or
testb
in
add
mov
add
and
add
dec
xor
ljmp
pop
lcall
loope
add
add
inc
aaa
lcall
rolb
leave
xchg
add
jne
cmp
push
cs
mov
xlat
pop
rcrl
xchg
mov
sbb
add
mov
add
add
mov
add
mov
add
add
repz
sub
mov
add
push
mov
add
push
test
add
cld
lods
mov
imul
add
mov
lods
fcmovnb
add
mov
mov
add
js
add
scas
xor
pop
pop
fs
add
cmc
cwtl
mov
movsb
add
or
jmp
fldl
add
dec
mov
xchg
add
add
add
xchg
pop
les
adc
fisttpl
inc
add
subl
add
pop
testb
add
cmp
add
repnz
push
inc
push
add
add
jnp
in
push
jg
jne
add
mov
or
mov
add
dec
xlat
movb
add
mov
insb
jle
lret
and
pop
jmp
add
mov
cmp
lahf
and
cmp
sub
pop
addr16
add
dec
adc
mov
add
add
pop
sahf
dec
xorl
mov
loop
cltd
clc
repnz
data16
add
add
add
jae
sub
xchg
add
mov
mov
dec
jne
add
push
add
add
movb
add
add
outsb
stos
adc
loop
mov
or
add
add
push
add
add
add
mov
ret
mov
int3
or
add
add
jb
rolb
ljmp
pushf
ficompl
push
add
mov
dec
call
mov
sub
push
add
pushl
or
add
add
mov
out
cmp
scas
xchg
inc
add
mov
add
mov
add
out
fstps
inc
add
push
rolb
add
add
scas
filds
add
out
lahf
mov
add
adc
cli
mov
sub
dec
addb
mov
mov
cmpsb
add
gs
aaa
or
sub
add
das
ja
add
dec
pop
dec
pop
mov
int3
rolb
fwait
cmp
xchg
shll
out
add
outsl
and
mov
add
fdivrs
repz
push
rolb
lahf
fucom
add
test
add
push
stos
add
daa
hlt
add
add
add
stos
mov
jl
cld
adc
xor
xlat
add
add
loop
pop
adc
push
pushf
pop
cmp
lods
call
jecxz
add
or
add
mov
inc
pop
xor
sub
fcomip
cmpsl
xor
add
add
dec
push
jnp
add
dec
lcall
lcall
cmp
mov
jp
or
popf
pop
mov
popl
pop
inc
add
sub
fdivrs
outsl
and
mov
mov
mov
data16
dec
add
mov
jg
add
dec
enter
add
add
mov
jb
cltd
push
stos
dec
push
add
add
in
mov
inc
imul
add
add
add
add
lods
outsl
add
pop
movsl
cmp
and
mov
add
pop
mov
add
pop
pop
mov
sbb
xchg
add
loope
mov
mov
mov
mov
push
add
into
cmp
sub
add
adc
js
xchg
add
add
xor
cmc
ret
aaa
rolb
adc
dec
cmpsl
addr16
add
mov
sbb
or
add
add
loopne
loope
add
add
dec
inc
add
ljmp
add
out
out
push
repnz
add
cs
xor
jne
xlat
or
push
add
pop
cmp
add
insb
movsb
add
push
ss
add
add
adc
addb
add
cmpsl
sbb
pop
or
push
mov
mov
sbb
xor
aad
addb
push
add
add
sbb
lods
shll
sbb
cmp
xor
and
mov
sbb
mov
mov
mov
addr16
sub
dec
xor
mov
mov
scas
in
sbb
popf
lods
adc
jle
aam
adc
mov
test
add
mov
sub
inc
add
add
add
pop
mov
fcmovnb
add
fstpt
insl
or
fcmovnu
adc
dec
pop
sbb
dec
test
ja
pop
pop
rolb
sahf
adc
sub
fistpl
cmp
add
add
sbb
add
lock
arpl
ret
fstpt
sarl
add
add
shrl
sub
ret
data16
ljmp
mov
repnz
adc
rolb
xchg
adc
jp
add
add
xlat
fildll
fists
add
pop
adc
arpl
jo
xchg
ret
mov
add
add
inc
add
add
shrl
call
xor
std
jnp
add
add
bound
mov
movb
add
adc
popa
inc
jbe
or
ds
in
cmpsb
add
add
add
mov
mov
das
fldt
stos
repnz
scas
adc
or
ljmp
movsl
xchg
testb
add
sub
movsl
dec
rcll
add
inc
add
dec
xor
cli
test
ret
stc
mov
loop
inc
iret
lahf
les
inc
clc
mov
mov
sub
mov
add
mov
addr16
or
xor
loopne
pop
leave
sbb
fucomip
repz
xor
xor
add
mov
pop
xor
jae
daa
pop
imul
mov
xor
add
add
jno
mov
add
jno
cmp
mov
addb
scas
ss
add
dec
and
pop
xchg
add
pop
pop
jmp
add
fistl
movsl
xchg
xchg
es
cmp
jecxz
movb
add
std
ret
dec
icebp
test
jb
inc
add
enter
fiadds
xchg
pop
and
add
add
clc
dec
mov
mov
ret
cmp
sub
jbe
lock
iret
jae
insl
pop
and
xlat
cmp
push
jne
add
adc
out
mov
pop
dec
lahf
inc
add
out
sub
out
cs
xlat
or
mov
mov
ja
add
insl
add
mov
push
fwait
mov
adc
mov
mov
sub
add
dec
pop
sub
mov
std
dec
lcall
add
mov
gs
in
push
add
xchg
pop
lock
cmc
xchg
add
add
mov
add
insb
inc
jnp
push
cltd
not
out
add
and
inc
loope
add
mov
mov
or
add
add
mov
out
push
add
or
add
add
add
xor
jecxz
cmc
jnp
stc
scas
stos
mov
sub
push
das
mov
movsl
lahf
testb
add
add
stc
dec
addl
mov
add
into
xor
or
xchg
push
add
movsb
add
dec
out
pop
je
fstl
rcr
or
lret
in
adc
jnp
pop
mov
insl
inc
jmp
and
pop
sarl
arpl
inc
pop
cmp
add
adcl
push
rolb
xchg
mov
xor
rcll
aam
or
jmp
inc
or
ljmp
cli
out
cmpl
or
mov
add
outsl
hlt
add
dec
mov
outsb
imul
add
add
add
pop
fcomps
iret
cltd
mov
dec
iret
xor
lds
xchg
sub
call
xchg
dec
dec
mov
add
add
add
out
jg
xchg
jge
add
pusha
add
add
mov
mov
add
aam
daa
cmp
andl
imul
movsb
add
mov
addl
add
add
add
int3
mov
dec
or
les
testb
sbb
addb
and
push
jge
xchg
fnsave
add
cmp
add
sbb
lcall
das
arpl
add
adc
test
mov
xchg
repnz
dec
adc
inc
data16
test
ds
and
decl
cli
leave
stos
lds
pop
lret
lcall
dec
mov
add
call
cwtl
xchg
inc
add
fistl
add
addb
add
add
adc
loop
das
sub
repnz
add
and
sbb
gs
add
jno
add
xlat
test
push
xchg
hlt
add
add
add
add
stc
pop
loopne
lret
xlat
pop
sbb
add
jno
add
mov
sub
adc
insb
fsubrl
or
add
add
mov
or
mov
loope
add
mov
add
xlat
push
add
jnp
add
rolb
mov
mov
add
adc
jbe
repz
sarl
push
add
add
ljmp
xor
lock
add
or
addb
push
fdivrp
scas
pop
rcrl
add
and
mov
movb
add
mov
clc
sbb
add
add
mov
mov
cmp
inc
add
daa
neg
lahf
jno
add
add
jecxz
add
add
mov
pop
sub
push
add
mov
lds
stc
push
add
mov
add
outsb
ljmp
pusha
add
dec
scas
dec
es
push
jnp
pushl
sbb
add
jae
add
out
lods
ljmp
add
iret
testb
fadds
add
out
xor
jne
adc
lds
lods
jp
or
mov
add
stc
mov
outsb
xor
gs
into
mov
arpl
sub
lock
add
js
sahf
adc
and
mov
mov
out
scas
sub
pop
enter
add
add
ds
mov
add
add
rolb
xor
hlt
add
push
out
mov
add
add
add
add
jge
sub
inc
add
cmp
int
mov
mov
add
mov
addb
push
cld
cmc
ss
fwait
push
add
in
pop
sbb
loop
ds
sti
add
add
test
ficomps
inc
add
loop
jle
rorl
push
les
mov
mov
mov
sub
add
add
mov
add
jo
loopne
fsubl
mov
test
add
sbb
inc
add
shll
test
jns
or
cltd
out
push
add
push
loop
lea
insb
xchg
in
out
lahf
add
xchg
fbstp
lret
lods
cmp
in
leave
addl
and
xchg
add
decb
in
or
add
add
add
cwtl
data16
bound
mov
xor
loope
add
add
add
add
xchg
add
add
or
test
xchg
mov
loope
add
cli
push
add
cmp
add
add
fidivl
enter
in
lea
mov
jecxz
call
add
add
add
insl
xchg
mov
popf
inc
add
push
dec
jns
add
popa
mov
add
inc
add
out
test
push
add
stos
jo
xchg
sbb
pop
les
out
add
int
mov
add
les
cltd
jo
mov
mov
pop
insb
fcoml
jl
repnz
add
cmpsl
inc
mov
testb
jle
fstpl
and
mov
xor
push
push
cmp
call
xor
mov
ja
fnsetpm(287
add
add
insb
movsb
add
add
xor
adc
add
add
push
mov
mov
rolb
test
add
data16
push
mov
ds
add
outsb
push
add
mov
filds
mov
fildll
testb
jg
imul
jns
add
jl
fstp
addb
aaa
inc
add
add
add
pop
jle
scas
aam
scas
add
shld
adc
xchg
lcall
addb
add
adc
jle
add
add
aam
adc
add
jmp
add
add
pop
int
or
add
dec
std
or
push
add
pop
jmp
mov
add
add
cmp
into
and
adc
jae
aas
cmp
add
in
add
dec
xchg
jnp
decl
lods
xlat
and
hlt
add
cmp
adc
loop
movb
add
out
rolb
fmull
out
push
add
add
adc
addb
jo
jg
mov
mov
daa
sbb
cmp
filds
add
test
loop
and
mov
aad
add
aam
icebp
mov
mov
push
add
mov
std
bound
mov
xor
div
cmp
clc
xchg
push
rcrl
add
dec
movb
mov
add
cld
add
mov
mov
pop
scas
jecxz
gs
xchg
je
jo
push
add
add
insb
cmp
xor
mov
push
add
mov
pop
lds
mov
add
inc
add
stos
std
adc
ret
outsl
pop
incl
add
in
stos
pusha
add
scas
mov
push
pop
jb
or
add
in
addb
and
lahf
xor
in
lcall
add
ja
add
add
or
xor
push
add
jmp
daa
icebp
xchg
rolb
movb
push
add
iret
cld
lods
cmp
popf
bndldx
xchg
or
decb
add
add
cmp
add
jbe,pn
adc
and
mov
lods
adc
xchg
fwait
outsl
adc
popa
sub
xchg
ret
enter
add
mov
jne
add
xchg
add
fmul
test
call
pop
and
sub
repnz
stos
insl
arpl
loopne
add
jo
jl
add
add
and
popf
xlat
dec
sarl
push
sub
test
and
xor
mov
add
add
mov
lcall
jns
xor
xchg
add
and
push
add
scas
dec
stos
ret
jnp
add
lret
xor
mov
add
push
inc
movsbl
add
or
jle
pop
adc
xlat
mov
and
mov
add
add
add
add
mov
push
xor
mov
insb
xor
pop
jns
aam
mov
add
sbb
stos
or
inc
add
xchg
movsb
add
xor
inc
inc
imul
sarl
fnstenv
mov
add
sbb
es
mov
mov
mov
add
icebp
outsl
add
clc
addb
imul
lea
lret
rcl
addb
int3
cmp
addb
push
add
mov
iret
rcll
dec
mov
adc
addr16
fcoml
and
and
add
add
add
mov
in
loop
add
lret
in
out
add
push
add
insl
cs
fistl
xchg
add
add
mov
cltd
pop
add
insb
clc
sbb
add
pop
addb
adc
mov
jge
test
out
xchg
add
jbe
pusha
add
mov
inc
jne
add
push
jl
ljmp
xchg
add
out
inc
add
xor
lods
push
add
rcll
xchg
add
xor
add
push
ficoml
mov
mov
xor
inc
jae
fwait
xchg
or
add
icebp
clc
filds
fisubl
mov
nop
add
inc
add
inc
mov
add
cmc
mov
sub
mov
and
add
imul
sub
inc
cmp
pop
addb
lock
dec
xorl
xchg
mov
addb
inc
add
aas
fimuls
add
add
out
roll
add
mov
imul
jno
push
add
ja
add
test
adc
mov
add
add
fcmovbe
add
cmp
stc
in
jb
outsl
lods
and
mov
add
dec
js
mov
push
add
cmc
mov
in
aad
xchg
add
add
add
test
push
add
sub
push
add
call
dec
hlt
add
sub
xchg
add
or
add
sub
add
xchg
sbb
add
pop
in
dec
shrl
cmp
xchg
test
nop
add
iret
les
xor
arpl
add
jns
add
inc
add
data16
lcall
lcall
addb
movsb
add
add
divl
mov
push
pusha
add
mov
mov
add
int
test
add
scas
add
add
test
xchg
bound
mov
add
pop
bound
mov
arpl
add
sti
popa
add
in
sub
sub
xchg
push
add
imul
add
jecxz
adc
mov
cmp
dec
and
mov
and
mov
add
ret
sub
pop
pop
add
mov
jp
add
add
add
stos
js
xchg
ret
add
add
add
xorl
add
jecxz
dec
xchg
add
jl
int3
sti
ja
add
cmp
jle
add
cltd
push
mov
inc
add
lods
in
and
add
sub
pop
imull
mov
movb
add
enter
mov
add
mov
add
adc
xor
icebp
jge
add
scas
lret
add
xor
add
mov
mov
cwtl
mov
repnz
mov
xchg
jbe
mov
into
and
mov
add
add
xchg
jae
push
add
das
icebp
shrl
enter
movsb
add
pop
push
add
jmp
add
leave
dec
aad
loop
out
lds
mov
mov
jmp
sub
or
add
dec
rolb
adc
ja
add
cld
lea
jp
inc
fcoms
movb
cmp
in
ljmp
aaa
sub
add
insl
add
add
out
orl
xor
and
bound
mov
add
pop
imul
add
add
xor
and
sbb
add
lcall
fcoms
add
mov
rcrl
add
add
push
mov
add
cmpsl
lret
fwait
stc
mov
pop
add
ret
inc
add
insb
xor
add
jnp
loop
pop
stc
inc
fildl
add
xchg
add
pop
pop
cmp
std
add
jle
dec
cs
xor
cmpsb
add
in
add
gs
lds
xor
add
inc
add
push
sub
mov
rcrl
cli
sbb
nop
add
add
add
insl
pop
pop
jmp
mov
lea
dec
mov
adc
das
cmp
dec
addl
mov
add
or
lea
jbe
jmp
jne
add
mov
add
sbb
data16
jl
pop
hlt
add
add
add
mov
add
add
pop
clc
std
scas
adc
imul
and
add
mov
cmp
add
mov
clc
cmpsb
add
pop
push
int3
loop
lock
std
mov
push
popf
aad
adc
sbb
mov
fnstenv
add
mov
add
inc
add
add
xorl
add
push
add
lods
test
fisubs
add
aas
lcall
xchg
pop
pop
rolb
lahf
jmp
add
or
sub
xor
pop
inc
add
push
insl
jns
add
pop
mov
movsl
sarl
pop
cli
scas
push
add
stos
decl
in
sbb
in
iret
enter
addr16
add
add
jbe
jae
add
cmp
mov
push
add
cmpsl
push
add
pop
inc
or
push
add
or
sbb
xchg
add
bsf
and
xchg
scas
sbb
and
sqrtps
in
jge
bound
mov
jae
add
scas
xchg
add
fwait
mov
add
outsl
out
cli
cmpsb
add
add
pop
scas
sbb
jg
cmp
dec
data16
dec
mov
sub
repz
add
rolb
mov
xchg
sbb
add
pop
idivl
addb
and
dec
cmc
popf
xchg
mov
add
inc
pop
lret
cmp
mov
mov
add
cmp
add
leave
fwait
movsb
add
mov
and
add
mov
and
mov
mov
dec
cmp
add
pop
mov
fnstenv
out
addb
add
into
cmp
aaa
stos
stos
pop
jmp
cmp
jo
xchg
add
scas
inc
add
push
mov
add
mov
shl
add
add
add
lahf
rolb
cltd
icebp
xchg
ffree
add
add
mov
and
push
js
add
mov
add
mov
xor
enter
dec
pop
ret
push
pop
scas
lods
test
add
xlat
inc
add
cmp
gs
add
jb
mov
cmc
in
push
into
int3
add
mov
add
xchg
pop
dec
xchg
pop
xor
adc
mov
pop
and
mov
jl
outsb
xchg
add
mov
push
add
xor
sub
jmp
add
ffree
into
lcall
mov
dec
scas
aaa
addb
add
xor
addb
or
add
pop
pop
cmp
movb
jge
pop
loopne
icebp
rolb
int3
hlt
add
ret
mov
in
addb
cmp
and
lods
nop
add
inc
hlt
add
sub
cmc
add
movsb
add
scas
rolb
call
mov
jae
into
iret
idivl
add
jns
cmpsb
add
popf
or
xor
or
add
movb
add
add
cmp
pop
repnz
push
xor
add
push
add
pusha
add
add
ficoml
int3
rolb
or
xchg
add
cmc
pop
push
add
add
insl
cmpsl
testb
mov
add
icebp
nop
add
add
mov
add
lods
fldcw
add
xor
aam
xor
cmpsb
add
add
add
lods
dec
in
mov
push
add
and
rcll
add
xchg
fwait
mov
cmp
daa
movsl
dec
adc
or
aam
iret
and
andl
popa
out
xchg
adc
dec
cmpsb
add
lods
test
or
loop
add
inc
add
lret
and
or
add
fcomip
add
clc
inc
mov
in
frstor
add
pop
dec
push
add
sti
lea
test
add
iret
cld
pop
int
add
mov
cwtl
cwtl
lret
daa
test
stos
and
add
addb
cli
movsl
lret
cmp
loopne
or
xlat
mov
rcl
sub
xchg
sub
add
movb
add
xorl
ds
push
add
mov
jbe
inc
xchg
add
popf
pop
addb
add
jl
mov
imul
lods
dec
jns
fsubrl
jne
sbb
push
xchg
pop
cltd
or
add
jle
add
lcall
aaa
ret
add
in
int3
ds
out
out
scas
movsb
add
stos
aam
out
cs
push
add
cmc
sub
sub
pushf
inc
add
jb
inc
add
mov
jg
and
repnz
ljmp
add
add
inc
add
or
add
adc
xchg
add
popa
jnp
int
add
add
or
lds
sub
and
mov
add
add
fs
imul
pop
adc
je
sbb
aas
mov
loop
mov
addb
or
mov
js
dec
cmpsb
add
add
add
add
mov
sbb
add
lods
or
outsb
loope
mov
jns
pop
daa
and
les
testb
add
lock
nop
add
pop
pop
lock
addr16
add
xor
adc
jmp
scas
sbb
add
mov
sahf
pop
cmpsb
add
mov
add
pop
mov
imul
dec
mov
xchg
movsl
jo
add
mov
mov
add
add
rcll
pop
push
test
add
ss
frstor
mov
add
add
hlt
add
mov
fnstcw
out
arpl
cmp
jne
or
into
loop
mov
add
xchg
add
add
add
cmp
add
mov
xchg
data16
add
add
add
bound
mov
sti
sbb
outsl
push
popa
or
add
mov
adc
outsb
aas
fsub
add
xor
and
mov
cmp
add
std
mov
stos
lock
scas
inc
add
fldlg2
testb
sbb
mov
or
mov
lea
xchg
bound
mov
add
fdivs
add
movsl
in
gs
add
mov
add
mov
add
add
jmp
out
cmovbe
dec
sub
mov
add
in
push
add
xchg
bound
mov
add
add
gs
xchg
mov
add
ljmp
xchg
ja
add
jno
mov
loop
lods
movb
add
clc
cmpl
sarl
add
pop
dec
add
mov
cmc
jle
dec
mov
mov
and
mov
add
and
mov
ljmp
xchg
lahf
out
xor
loopne
ljmp
mov
movb
add
add
mov
adc
pop
sbb
and
aaa
xor
add
dec
int
add
adc
inc
add
lea
add
cmp
add
cld
nop
add
add
scas
mov
xchg
add
add
add
push
or
add
lret
add
push
add
in
or
scas
cwtl
addb
add
addr16
cmp
jmp
jle
pop
mov
jecxz
mov
add
sub
add
mov
add
add
add
add
inc
lret
pop
pop
leave
into
sub
arpl
adc
mov
sub
dec
inc
add
sub
push
add
fcmovbe
add
xchg
imul
jno
movsb
add
add
testl
mov
arpl
cmpsl
mov
mov
add
imul
cli
pop
inc
add
in
fwait
jnp
and
jno
xchg
imul
mov
cmpsb
add
addb
outsl
decb
mov
hlt
add
stos
sbb
add
sub
sub
add
test
add
add
and
rolb
icebp
add
cmp
into
jge
iret
imul
test
sbb
add
in
cmp
add
iret
out
or
sub
add
jg
add
ljmp
add
arpl
imul
add
icebp
sahf
pop
add
aad
or
add
int3
fcmovbe
add
add
cmp
add
aaa
daa
xchg
add
lret
inc
add
mov
add
testb
add
inc
mov
push
into
pop
test
add
pop
aad
sub
add
test
inc
lret
jae
add
and
mov
add
add
push
mov
into
inc
add
mov
addb
jo
ds
lret
int3
in
mov
add
std
popf
rolb
cmpsl
cmpl
popf
cmp
jns
nop
add
stos
mov
jle
push
add
cs
loopne
jno
add
add
xor
insl
unpckhps
add
test
adc
sbb
jno
out
cmc
data16
xchg
add
add
mov
sbb
mov
rolb
dec
testb
add
add
jne
les
repz
add
mov
mov
les
xor
cmp
mov
cwtl
xor
out
shrl
in
outsl
mov
lret
lret
ret
scas
imul
jp
add
add
mov
push
and
mov
add
mov
sub
rorl
push
lods
insl
call
test
fsts
add
add
add
add
int3
mov
stos
add
loopne
inc
add
mov
cmp
add
lods
xchg
add
pop
jcxz
and
rolb
xor
add
lahf
insl
insl
aaa
addb
stc
jl
dec
rorl
movb
cmp
adc
fwait
inc
mov
mov
push
add
addb
add
adc
add
add
sub
in
add
jb
lret
cmpsb
add
sbb
add
add
sbb
dec
mov
je
jbe
add
push
xor
aas
push
add
mov
test
aaa
sahf
jmp
add
mov
inc
cmc
out
cld
cmpsl
cmc
shl
mov
add
and
add
pop
fs
fisttpll
movb
add
sub
push
repz
mov
add
cmpsl
and
add
add
and
add
add
into
xchg
add
in
add
and
or
les
mov
inc
rolb
cmp
das
push
add
add
jae
daa
mov
test
popf
fstpl
and
mov
add
cli
out
inc
ds
rolb
pop
inc
ret
add
add
add
pop
push
add
add
xchg
in
jge
or
jbe
xor
jmp
ss
sbb
mov
mov
lea
add
add
add
mov
addb
stos
jb
les
xor
add
add
add
add
je
data16
mov
add
rolb
inc
pushf
jmp
orl
leave
dec
add
add
inc
sbb
push
pop
outsl
jmp
imul
cltd
pusha
add
and
das
lcall
add
fstpt
jnp
xchg
add
mov
inc
addb
and
add
aaa
cs
add
mov
jmp
mov
mov
pop
dec
and
aad
inc
insb
jns
add
pop
or
insb
cmpl
jo
xor
add
adc
aam
jle
out
add
add
mov
inc
stc
pop
stc
xchg
in
mov
insb
and
bound
mov
mov
sbb
add
mov
fidivrl
pop
movsb
add
mov
lcall
add
xor
scas
and
mov
inc
cs
add
fwait
test
loop
addb
sub
xchg
std
out
or
xchg
call
mov
out
push
xchg
or
add
popf
push
mov
pushf
pop
or
addb
add
jne
push
je
push
add
adc
add
add
add
cs
and
add
add
rolb
cmp
bound
mov
sub
add
inc
add
push
add
aam
adc
jl
add
cmpsl
outsb
jmp
lods
gs
or
dec
mov
gs
add
add
les
jns
add
or
stos
bound
mov
test
mov
loope
dec
rorl
mov
ret
xor
mov
int
add
and
mov
test
add
xor
rolb
stos
mov
inc
cmp
push
add
add
inc
mov
add
mov
movb
add
movsl
stc
mov
add
sti
xor
dec
push
int
add
mov
add
xchg
lds
mov
sbb
inc
aaa
clc
dec
mov
sahf
mov
add
mov
mov
push
add
inc
add
call
addb
add
in
mov
icebp
outsl
sub
cmp
lock
clc
movl
mov
dec
lods
pusha
add
add
stc
mov
add
add
mov
add
add
add
add
movsb
add
add
repz
jle
outsb
jne
push
jmp
xchg
popf
add
mov
jecxz
add
ds
or
inc
pop
lock
add
iret
and
add
add
gs
jae
insb
inc
fstpl
mov
pop
mov
mov
mov
mov
add
or
pop
loope
icebp
data16
jmp
add
aas
das
xchg
fsubp
push
inc
add
add
mov
add
add
test
add
punpcklbw
mov
mov
add
mov
sbb
add
mov
or
jb
jae
rolb
mov
fidivs
lret
sahf
in
and
mov
xor
int
insl
movsl
xchg
add
mov
movb
add
adc
add
arpl
xor
les
and
into
push
add
add
add
add
add
add
adc
cmp
pop
js
cli
bound
mov
inc
add
add
sub
add
push
add
add
add
jbe
or
add
addb
clc
lret
push
lcall
test
add
sti
push
mov
test
and
mov
cmc
pop
xor
inc
add
mov
and
mov
scas
bound
mov
add
add
mov
add
je
les
arpl
xchg
mov
add
pop
inc
add
xor
std
or
cmpsb
add
sub
lcall
jecxz
add
and
mov
mov
sub
push
xchg
add
lds
add
aaa
fisttpl
out
out
cmp
dec
testb
lock
add
add
add
mov
jbe
in
pop
in
or
sbb
add
imul
stos
or
jle
adc
xchg
add
or
movb
pop
cmp
add
xor
and
adc
add
sbb
stos
fidivl
rolb
fisubs
jmp
add
push
adc
pusha
add
add
pop
imul
add
mov
add
scas
dec
call
add
loope
or
xor
sbb
add
pop
xchg
and
mov
mov
leave
add
add
pop
addr16
roll
push
add
test
add
mov
mov
pop
mov
daa
mov
add
mov
mov
add
ds
push
addb
scas
mov
add
add
mov
lds
add
mov
js
add
sbb
add
dec
sbb
test
xchg
add
add
lock
lahf
stos
or
fwait
ja
sbb
xor
lahf
sti
mov
add
add
in
cmp
jbe
mov
mov
mov
call
push
out
xchg
add
and
mov
test
js
add
and
cld
pop
sub
add
leave
push
add
aad
inc
add
add
cmc
lret
sub
pop
push
sar
int
xor
jge
stos
mov
and
mov
cmpsb
add
cwtl
jmp
add
jl
dec
xchg
add
mov
cld
cmp
add
pop
sbb
push
lock
mov
cmc
stos
inc
add
sub
mov
add
mov
cmpsl
mov
test
add
push
add
fdivl
cmp
in
xchg
add
cmp
add
add
repz
into
push
push
mov
mov
insl
loopne
xor
jnp
cmp
add
cmp
mov
pop
adc
cmc
dec
inc
or
stos
cwtl
les
popf
cs
mov
jecxz
add
add
add
imul
add
and
mov
add
mov
add
add
fcomip
inc
shr
cmp
in
dec
xor
mov
mov
addb
inc
jge
add
add
shll
cmp
mov
add
add
xor
outsl
lcall
aas
stc
add
loop
aad
xchg
add
sub
add
hlt
add
je
jb
cmc
mov
adc
push
push
cwtl
pop
mov
inc
cmc
addb
add
cmp
xor
push
add
lods
movsb
add
aaa
jno
xor
inc
pushf
popf
fwait
aam
mov
stc
stos
out
xchg
je
js
testb
add
add
add
in
mov
add
add
lea
sub
add
in
aaa
inc
add
mov
add
adc
sub
add
add
add
add
mov
dec
sub
add
mov
add
add
pushf
dec
into
popf
test
xchg
and
int3
sub
out
or
fld
add
add
aad
add
add
femms
les
xchg
lret
add
add
add
popa
lahf
cli
mov
push
add
pop
movl
xor
add
add
jg
mov
pop
mov
dec
mov
push
add
lcall
fdiv
jne
add
add
add
lea
loope
xor
pushf
imul
das
jl
and
mov
or
add
cmp
lods
xchg
pop
sbb
repnz
pop
mov
add
rolb
inc
pushf
iret
outsl
mov
cwtl
testb
dec
or
add
jle
xchg
sbb
add
cmp
jmp
fistps
xchg
add
sbb
cwtl
inc
add
mov
jmp
in
mov
add
ljmp
pop
pop
pop
movsb
add
lret
mov
addb
inc
add
push
in
ret
cmp
jle
jae
fdivr
add
jmp
test
aam
in
cmpsb
add
or
aas
addb
pop
add
add
jmp
add
adc
and
mov
mov
add
mov
sbb
mov
xor
jge
dec
aad
addb
int
dec
mov
cwtl
hlt
add
add
jns
cmp
add
adc
pop
push
add
xchg
add
xor
lcall
outsl
and
add
test
add
push
add
add
push
jne
dec
add
mov
pusha
add
mov
js
ret
addb
andl
lret
add
add
add
add
mov
jmp
xchg
bound
mov
jnp
bound
mov
xchg
add
add
sarl
jnp
ljmp
dec
jno
add
fdivrl
rolb
jmp
and
rol
and
mov
loope
mov
scas
movsl
out
fisttpl
ret
add
dec
push
add
popf
orl
mov
push
add
mov
push
add
rolb
in
jbe
out
cs
rolb
ja
rolb
push
pop
cld
sbb
jle
add
and
mov
push
add
add
cmpsb
add
popa
jmp
inc
add
adc
arpl
xchg
add
add
dec
jns
mov
fwait
xor
inc
add
addb
inc
add
jo
jb
in
or
add
test
add
pushf
ds
add
adc
cmc
fsubrl
xor
cmp
xchg
cmp
cltd
scas
xor
sbb
xlat
insl
jl
add
jle
xchg
add
pop
xchg
addr16
mov
xchg
pop
jecxz
testl
xor
fwait
lea
adc
test
add
dec
daa
cs
dec
in
gs
jno
mov
add
and
xlat
and
repnz
testb
ljmp
notl
push
add
pop
add
mov
sbb
cmp
filds
hlt
add
movsb
add
dec
ds
mov
lret
add
mov
add
mov
arpl
push
add
js
cmc
negl
mov
mov
add
les
jge
add
sub
add
idiv
sub
add
mov
pop
jno
ds
pop
pop
int
pop
test
lds
jae
inc
and
test
out
sbb
jnp
cmp
jne
push
add
addb
add
mov
xor
icebp
insl
sahf
sub
insl
dec
das
lds
outsl
out
jp
add
add
push
lahf
sbb
add
add
push
add
mov
add
andl
add
add
sub
insb
jecxz
add
mov
je
xchg
adc
inc
add
mov
jle
addl
mov
add
mov
mov
in
lods
fpatan
sub
in
xchg
add
mov
sub
pop
addb
sbb
fidivrs
sti
movb
jg
jbe
sahf
mov
les
divl
rolb
pop
mov
add
jp
add
add
ljmp
xor
incb
push
sti
xchg
fcmovb
add
iret
pop
jae
mov
into
icebp
and
inc
add
icebp
inc
add
add
data16
aad
mov
push
call
push
add
jg
add
aad
punpckhbw
pop
aaa
push
addb
data16
push
add
sti
jge
dec
pop
pushf
mov
or
add
les
rolb
mov
loopne
add
add
movsb
add
int3
fadds
add
aam
into
rolb
addb
in
lock
push
and
mov
fyl2x
lahf
cmpsl
add
xor
add
push
or
addr16
mov
add
cs
push
add
mov
popf
mov
inc
add
add
mov
pushf
into
mov
jp
clc
and
and
add
cmpsl
and
mov
sbb
add
nop
add
add
sub
repnz
in
mov
nop
add
clc
faddl
jb
jb
or
xchg
popf
pop
push
mov
imul
scas
lods
clc
jb
dec
iret
addb
addb
add
pop
out
sbb
dec
and
add
out
mov
add
jmp
leave
addr16
jge
dec
push
cmp
xchg
pusha
add
jmp
add
fiadds
lcall
add
in
test
sbb
pop
inc
stos
ja
sub
fnstsw
add
lock
sub
loop
icebp
push
add
jb
lret
sbb
xchg
mov
sbb
leave
sbb
mov
adc
cli
mov
add
add
mov
mov
aaa
jne
add
mov
add
fwait
rcrl
mov
ds
add
int
lcall
push
mov
add
jl
test
sbb
pop
xor
addr16
push
add
push
cmpsb
add
mov
or
pop
flds
add
add
lea
xchg
or
jmp
add
add
mov
mov
frstor
in
and
jae
out
push
add
and
mov
xchg
add
add
push
daa
nop
add
push
add
adc
add
les
out
lock
mov
repnz
push
sysexit
cmp
repz
adc
dec
outsb
aam
fisubs
iret
ret
xchg
sbb
cmp
inc
add
data16
lods
pop
fcoml
push
mov
pop
cmp
fcmovbe
add
add
sbb
add
call
xor
mov
std
jne
das
jae
cld
fimuls
ret
gs
mov
popa
popl
pop
push
add
in
adc
cwtl
sub
pop
pop
mov
pop
push
add
arpl
add
mov
jnp
sub
stos
lea
arpl
add
xchg
add
lahf
mov
pushf
js
sbb
popa
je
fnstenv
cltd
mov
lahf
adc
or
add
add
add
xlat
mov
movsb
add
movsb
add
add
add
adc
rolb
xchg
add
add
jns
loopne
adc
fmuls
add
add
jae
add
mov
mov
add
add
add
mov
movb
je
lea
stos
test
adc
cmp
pop
sarl
mov
add
mov
mov
add
iret
inc
cmp
mov
add
movlps
fdivrs
fcoms
inc
add
movsb
add
push
add
sub
movsl
repnz
mov
sbb
jl
adc
and
push
adc
mov
push
out
xchg
add
dec
push
mov
jnp
add
call
js
jg
add
and
inc
mov
add
fs
add
and
and
mov
addb
add
add
add
test
shr
ret
push
pusha
add
add
incb
add
cltd
adc
jl
mov
sti
inc
sahf
into
mov
hlt
add
repnz
jl
test
mov
mov
add
aas
xchg
jecxz
add
movsl
sbb
add
test
scas
notl
or
sahf
and
fbld
add
pop
mov
loopne
dec
adc
jmp
mov
mov
std
orl
mov
inc
add
sub
add
add
cmp
mov
das
imul
mov
sub
sbb
shll
and
mov
pop
jecxz
ljmp
add
imul
jecxz
or
push
add
inc
add
inc
add
xchg
in
cmp
rolb
insb
xchg
add
arpl
inc
sbb
add
add
add
aam
incl
add
out
jge
dec
testb
je
mov
sub
mov
daa
sub
dec
pop
mov
cli
and
mov
dec
jb
jbe
je
dec
mov
icebp
cwtl
inc
add
add
insb
popf
ret
cmp
jmp
bound
mov
xchg
into
push
add
lret
add
mov
loopne
mov
jge
add
add
adc
mov
sbb
fiadds
add
sub
ficoms
mov
into
push
add
add
rolb
das
int
add
sub
mov
bound
mov
ficoml
loop
mov
aas
sub
pop
ljmp
dec
pop
js
sub
pop
mov
add
and
mov
ret
add
cmc
lock
add
mov
sub
xor
insl
pop
sbb
adc
out
jno
add
add
add
push
add
add
popf
inc
add
add
mov
add
lods
popa
cwtl
inc
add
add
mov
or
bound
mov
xor
fidivrl
call
aam
and
mov
dec
pop
cmp
or
mov
mov
add
pop
lcall
add
dec
pop
dec
insb
inc
add
lret
sahf
cmp
mov
rcrl
cwtl
ds
push
sub
pop
gs
xchg
adc
add
add
pop
xchg
sbb
xchg
fs
push
add
sbb
or
xchg
popf
push
add
add
add
sub
add
cwtl
pop
out
lea
sti
testb
add
add
adc
mov
add
or
push
add
sub
dec
insl
and
lret
call
add
jecxz
nop
add
mov
dec
jmp
das
test
mov
je
hlt
add
leave
cltd
xor
add
add
sub
xor
aaa
push
add
imull
push
push
add
fdivrs
into
outsl
testl
sub
add
add
xor
sub
add
add
bound
mov
mov
adc
pop
scas
arpl
add
mov
add
add
aaa
sbb
xor
movsl
and
pop
or
add
out
mov
adc
fcom
pop
data16
add
mov
imul
loop
in
aam
iret
rolb
out
sbb
or
dec
sub
outsl
in
ja
lcall
inc
dec
cltd
pop
repnz
add
or
and
mov
add
pop
sti
int3
sub
inc
add
cmp
repz
mov
push
bound
mov
popa
data16
je
or
call
call
add
lods
xchg
add
sub
adc
testb
ljmp
pop
sub
test
add
inc
add
cmpsl
mov
jbe
insl
mov
cmp
dec
sub
jbe
hlt
add
arpl
les
std
push
pushf
add
mov
add
xor
or
dec
imul
dec
jno
inc
int3
mov
call
add
sub
testb
aaa
sbb
add
repnz
cmp
movsb
add
testb
xor
aaa
out
cmp
xchg
jb
jl
mov
icebp
sub
xchg
incb
out
movd
cltd
scas
mov
lahf
sbb
sbb
xchg
or
sahf
and
add
xchg
add
test
push
add
jae
mov
cwtl
faddl
add
sub
mov
or
add
ljmp
xchg
jle
sub
mov
xchg
hlt
add
add
inc
xor
add
add
add
repz
add
mov
lret
out
daa
lret
lret
add
push
add
mov
data16
gs
test
lock
mov
add
push
add
add
ss
xor
test
test
add
mov
mov
jb
push
hlt
add
push
add
mov
push
dec
mov
add
out
jo
mov
test
es
lret
add
push
add
mov
mov
push
fdivrl
cli
xchg
add
loopne
in
xchg
add
fisubrl
mov
aad
push
add
xchg
add
call
jb
call
clc
jnp
add
in
dec
pop
adcl
mov
add
push
sbb
sti
and
dec
imul
add
ficoms
inc
mov
adc
dec
cmc
sbb
bound
mov
add
mov
inc
add
sub
mov
mov
add
xor
shr
cmpsl
adc
add
inc
pop
in
sbb
add
inc
add
cmpsl
cmp
outsb
fdivs
push
lods
lahf
and
in
mov
add
lahf
adc
fisubrl
jnp
sub
lds
add
lret
mov
push
and
dec
push
test
xor
or
fsubs
add
outsl
cld
icebp
fcmovb
push
add
jl
xor
mov
pop
pop
in
mov
sti
icebp
das
and
mov
mov
xchg
add
cmp
cltd
in
jb
dec
mov
or
xchg
xchg
movsl
mov
inc
sbb
add
aad
repnz
mov
xlat
add
xor
mov
lea
imul
add
add
mov
lock
shll
mov
jl,pn
in
aaa
adc
jge
jnp
fucom
addb
inc
add
jle
add
sti
add
mov
fstpt
cmpsb
add
add
add
mov
rolb
cmp
xor
jo
add
cli
pushf
mov
xor
addb
sub
xchg
fisttpl
scas
pop
jmp
cmp
dec
mov
out
out
add
or
les
stc
lods
rolb
mov
xchg
jmp
dec
push
decl
mov
inc
fcom
add
add
fmuls
fwait
add
add
add
ror
jbe
ljmp
stc
dec
adc
sub
dec
insl
sub
add
push
mov
xchg
dec
xor
push
add
or
movsb
add
sbb
sbb
movb
sbb
add
cmc
sti
fnstenv
xchg
add
mov
add
add
les
lods
popf
dec
push
add
movsb
add
adc
scas
dec
jno
add
icebp
cmp
sahf
push
add
ljmp
add
add
inc
add
add
lock
cld
dec
imul
pop
les
data16
mov
add
pop
xor
add
sub
adc
inc
add
aaa
testb
add
cmp
add
push
je
js
xchg
or
fcoml
movl
jmp
or
pusha
add
add
sub
jne
sbb
xlat
cmp
mov
ss
aad
aad
add
lock
mov
sbb
xor
add
push
add
sbb
add
mov
lret
mov
or
xchg
add
fsts
ror
addb
inc
cmp
inc
mov
xchg
enter
aam
jmp
movb
add
clc
sbb
add
inc
cmp
push
xlat
dec
movb
ja
or
test
jnp
jae
adc
mov
push
inc
add
mov
push
and
mov
movsl
movsb
add
add
cld
addr16
outsb
cmp
add
add
data16
jne
add
add
dec
cmp
or
xor
jmp
add
enter
add
mov
dec
xchg
jns
sub
das
rolb
arpl
add
mov
sahf
or
mov
mov
and
dec
jmp
addb
add
add
sub
data16
fcomps
cli
pop
jmp
xchg
add
fildl
jno
mov
add
jg
std
push
shll
and
sub
dec
pushf
dec
dec
jne
les
sbb
pop
mov
and
in
jp
add
mov
inc
push
add
mov
jbe
push
push
add
dec
orl
mov
dec
fsubrp
add
add
xor
add
in
int3
imul
dec
bound
mov
push
add
in
clc
sbb
add
add
jno
sbb
arpl
fdivl
mov
and
mov
pxor
xchg
filds
add
and
push
add
mov
mov
les
jg
add
movsl
add
cmp
add
mov
sub
jg
imul
jp
rol
add
xchg
loope
mov
mov
add
call
scas
sub
push
pusha
add
pop
sub
or
push
add
jp
pop
push
repz
add
lret
arpl
add
test
add
fdivrs
or
dec
jb
cmp
jbe
pop
out
xchg
add
add
imul
addb
add
popa
xchg
add
mov
add
stos
mov
scas
and
and
push
imul
and
mov
xor
scas
popa
loope
add
sahf
call
data16
ds
add
test
cmpsb
add
mov
add
add
add
inc
add
add
lods
jae
add
and
jb
push
push
add
lcall
lods
pop
in
mov
mov
xchg
add
mov
shr
xor
sti
mov
in
ficoms
aas
xchg
dec
xchg
add
scas
dec
fidivrs
add
ficoml
mov
ret
stos
and
mov
or
add
mov
add
rolb
cmp
mov
sbb
push
add
add
xchg
sarl
add
push
add
adc
fmuls
mov
loop
insl
sbb
sbb
scas
lods
jl
inc
add
icebp
cwtl
xor
in
cmpsl
mov
stos
sub
push
add
lret
add
mov
adc
cmc
data16
push
add
enter
pop
daa
dec
push
add
cmp
xchg
cmp
ret
sbb
lahf
repz
mov
sbb
mov
cmpl
mov
push
testb
ficompl
mov
mov
js
add
dec
push
ja
or
repz
mov
add
xchg
add
mov
pushl
add
sub
movsb
add
xor
add
mov
aaa
aad
or
data16
add
and
out
fiaddl
adc
xchg
adc
mov
xor
inc
add
test
cmp
mov
jae
sub
xchg
ss
add
mov
popa
mov
jne
add
or
jmp
add
add
les
icebp
addr16
nop
add
add
and
mov
add
push
add
and
xchg
add
jge
add
add
add
add
mov
lahf
call
rolb
sub
aas
addb
addb
add
add
add
xchg
std
sysret
pop
and
mov
xor
jae
roll
add
pop
loope
aad
add
outsb
iret
cld
inc
cmpl
add
add
mov
cmp
lret
mov
psubsb
cmp
stos
pop
or
xchg
add
rolb
add
inc
inc
add
scas
imul
mov
dec
bound
mov
into
nop
add
add
push
add
adc
es
ljmp
add
sbb
xlat
push
add
mov
add
addb
add
dec
lea
add
or
dec
dec
in
cmpsl
push
int
mov
outsb
hlt
add
add
add
scas
repz
pop
dec
xor
add
pop
popa
dec
jae
movb
ja
add
repz
add
add
inc
adc
mov
ret
enter
add
add
shll
sti
test
icebp
add
mov
loop
sbb
add
fadds
push
add
sbb
dec
xor
push
rolb
push
sub
and
mov
jne
lcall
add
mov
jmp
and
mov
add
ror
rolb
shll
or
and
push
fadd
adc
mov
pop
adc
xchg
movsb
add
add
push
add
add
add
add
inc
loope
pop
cld
outsl
push
add
mov
ret
add
add
dec
mov
add
outsl
mov
add
sbb
add
insl
lret
add
mov
add
add
sub
push
xorl
push
add
add
aas
pop
sti
mov
rorl
movsl
cmpsb
add
mov
in
push
add
dec
cmp
add
dec
shrl
cmp
or
lret
add
cmp
add
fisubs
add
cwtl
movsb
add
fninit
stc
loop
pop
addr16
add
mov
addb
mov
jbe
pop
inc
cmp
daa
les
pop
fstps
push
add
add
cmp
imul
add
je
push
pop
test
add
insl
xchg
mov
pop
mov
lea
mov
jae
add
add
or
addb
add
in
ds
test
mov
outsl
xchg
sbb
dec
xor
in
push
add
lret
cwtl
mov
not
dec
test
int3
jg
adc
dec
push
repz
out
add
or
test
or
add
add
add
addr16
or
mov
cmp
fsubs
inc
push
add
mov
add
push
add
shl
add
and
mov
ret
sub
xor
inc
add
pop
push
mov
in
or
add
mov
add
mov
mov
mov
fsubrs
enter
add
add
dec
xlat
sbb
add
push
insb
pop
jno
mov
lcall
add
out
into
sub
fisttpll
sbb
into
insb
or
add
xchg
add
rolb
inc
mov
int3
addb
jge
jge
add
rolb
cmp
add
dec
bound
mov
mov
add
data16
sahf
inc
xchg
loopw
cmpsb
add
mov
scas
insb
sti
push
add
clc
lea
add
or
add
and
add
mov
add
adc
insl
inc
add
push
dec
push
mov
ret
pop
into
mov
add
sub
add
add
cmp
or
into
mov
and
xchg
aam
xor
or
add
add
add
mov
jo
mov
add
mov
sbb
test
add
add
dec
jne
mov
imul
dec
aam
add
push
loopne
pop
lock
add
mov
mov
iret
sbb
mov
cwtl
cmc
pushf
jno
fmuls
subl
add
adc
mov
mov
jg
add
repz
add
xor
jge
cs
daa
xchg
shr
lret
mov
hlt
add
jo
pop
testb
faddp
daa
sub
push
inc
and
sbb
dec
jno
fadds
add
mov
add
add
sub
cmp
aaa
push
js
xor
add
test
pop
and
add
into
and
mov
fists
xor
loop
mov
and
mov
inc
add
mov
outsl
add
add
in
sub
out
cmp
add
scas
aad
pop
scas
or
add
jmp
xchg
inc
add
and
add
jmp
adc
jns
xchg
dec
int3
and
adc
adc
addb
add
std
stos
imul
push
testl
mov
incl
xchg
jge
jp
jb
and
pop
jb
aad
fisubl
dec
fnsave
pop
push
jne
fucom
mov
leave
and
and
out
add
mov
cmp
mov
test
add
push
add
xchg
jns
add
mov
add
push
sbb
hlt
add
mov
fdivs
mov
add
mov
pop
mov
les
inc
add
mov
add
aaa
mov
gs
jno
fwait
jno
in
aas
je
xchg
add
pop
pop
insl
scas
inc
add
testb
movsl
xchg
add
jmp
addl
xlat
add
mov
cli
mov
call
add
into
mov
add
xor
int
mov
and
jb
rolb
add
sbb
add
mov
call
add
sub
icebp
push
add
inc
add
leave
fsubl
mov
add
fwait
jl
in
scas
lds
adc
sbb
add
add
cmp
add
jge
push
add
jge
out
setnp
jns
lock
jns
addb
pop
call
and
mov
loop
aas
xchg
fmuls
dec
mov
dec
sti
and
add
mov
movb
hlt
add
add
cmp
sti
mov
aad
in
pop
lret
cmp
add
stc
movb
fcompl
push
add
int3
add
add
aad
cmpsb
add
add
clc
testb
add
add
cmp
addb
dec
push
dec
movb
sahf
dec
pop
sub
ror
pop
fists
outsb
mov
add
movsl
pop
cmp
add
movb
xor
add
mov
add
std
push
clc
lods
hlt
add
add
fadd
sarl
mov
xlat
push
gs
pop
iret
loop
repz
add
mov
jno
dec
dec
imull
add
aas
sub
add
xor
push
add
hlt
add
jno
jae
pop
mov
loope
out
dec
sbb
add
movsb
add
int3
pop
lret
sub
inc
add
add
cmp
lret
push
add
add
jecxz
lret
test
add
mov
add
pop
cmpsb
add
jmp
imul
pop
xor
add
insb
mov
push
adc
or
fldln2
xor
adc
inc
stc
inc
add
adcl
lcall
mov
fstps
add
test
or
mov
outsl
sub
add
mov
add
mov
xchg
sub
add
mov
xlat
lret
and
mov
mov
adc
movsl
int
pop
popf
jp
adc
daa
push
and
push
add
add
sub
daa
xor
lret
int
clc
push
add
addb
add
jbe
sbb
repnz
repz
fs
add
pop
jbe
cld
dec
mov
pop
pop
sub
add
add
loope
add
or
adc
fmull
and
mov
sti
inc
arpl
imul
cld
test
cmp
movb
cmp
jno
add
enter
mov
adc
pop
or
add
and
aam
sarl
and
add
cmp
ficompl
ds
sub
xchg
dec
sub
mov
add
outsb
repnz
jbe
sbb
push
mov
xor
jp
and
mov
push
fsubl
mov
pop
cwtl
out
sub
lcall
add
mov
adc
add
add
jle
push
add
add
push
xchg
add
sbb
and
std
rolb
adcl
or
add
das
pop
popf
mov
add
sub
lret
xor
add
mov
data16
data16
lret
add
mov
cmp
sbb
add
add
outsl
aam
xor
jae
add
sti
and
mov
mov
push
xchg
dec
or
or
mov
imul
mov
lods
cmp
add
stc
push
and
mov
add
pop
xchg
add
add
add
jle
add
jb
sahf
dec
iret
dec
adc
and
bound
mov
add
out
and
call
in
into
loope
inc
cs
scas
fldenv
pop
sub
sub
jecxz
testb
addb
cli
fdivl
add
add
mov
jl
lods
jno
testb
add
jbe
pop
jg
add
xor
and
sub
adc
push
push
add
xor
pop
xchg
rolb
adc
mov
add
mov
stos
dec
mov
pop
lods
pushf
fldt
mov
add
add
aam
repnz
xor
fidivs
sbb
push
add
or
movsl
arpl
in
xchg
add
add
fldt
inc
mov
js
lea
xchg
add
jb
push
dec
add
fnsave
add
iret
xlat
mov
push
xchg
std
cmp
cmpsb
add
xchg
or
movsl
addl
add
test
add
fldcw
xor
ljmp
cli
lret
add
jb
out
in
popa
push
sbb
add
pop
fcompl
mov
and
mov
mov
dec
sarl
add
inc
add
add
imul
rcrl
add
gs
add
or
cs
or
add
add
xchg
add
add
xchg
movsb
add
add
sbb
iret
jp,pn
stc
sti
jne
scas
jecxz
dec
iret
adc
mov
inc
add
insb
call
stc
cmp
add
xor
aaa
and
add
rolb
add
add
sbb
add
ljmp
mov
mov
cli
in
ret
add
cmpsb
add
add
push
ret
ret
sbb
stos
lcall
pop
outsl
dec
push
add
jno
into
fistl
imul
mov
inc
aam
sub
add
cmp
mov
clc
cmpsb
add
add
dec
mov
scas
lods
repnz
dec
sub
mov
je
icebp
in
sbb
and
sub
add
mov
add
test
add
jge
sub
mov
add
pop
pop
inc
add
cmp
or
fbstp
cmp
add
sub
add
fstps
mov
add
je
or
out
adc
outsl
imul
add
add
lods
enter
xor
mov
add
mov
es
jo
jne
out
ret
movntq
add
add
mov
jbe
xlat
xchg
les
outsl
ret
scas
jl
fucomi
movsl
fsubrl
adc
xor
add
inc
add
add
popf
cmpl
add
lcall
rcrl
sbb
add
pusha
add
fisubrs
test
testb
std
add
pop
xor
and
sub
add
fsubl
test
add
repnz
insl
leave
push
cli
sub
jb
adc
ljmp
scas
xchg
and
mov
cmp
mull
and
mov
inc
push
push
add
adc
push
add
bndstx
add
add
mov
jbe
adc
out
cmpsb
add
pop
pop
pand
out
mov
xchg
add
add
mov
pop
sbb
add
add
mov
fcoml
add
addr16
add
mov
das
add
cli
addb
js
pop
add
popf
pop
hlt
add
add
add
pop
movsl
mov
add
or
add
add
and
add
add
xor
insl
or
addb
adc
mov
jmp
push
add
loop
cmp
ss
add
push
insl
sahf
int3
inc
add
inc
add
mov
or
les
add
mov
mov
or
or
into
add
or
sbbl
add
add
fwait
test
mov
popa
pop
movsb
add
xor
adc
fmuls
imul
data16
addr16
and
mov
out
js
jp
add
add
mov
inc
and
movsl
xchg
push
lahf
pushf
cwtl
sbb
dec
test
add
add
add
pop
ljmp
cmp
add
lahf
jle
add
add
add
mov
bound
mov
lea
add
in
rorl
les
or
cli
loope
add
add
add
mov
ljmp
in
or
add
push
and
pop
pushf
jp
sbb
push
mov
in
out
xchg
inc
push
add
lods
cmc
std
out
push
add
pop
lods
add
push
add
testb
loope
jns
sbb
scas
pusha
add
cmovne
dec
jge
add
inc
aas
adc
inc
add
dec
add
add
lret
into
pushf
out
add
adc
xchg
pop
inc
add
add
add
jne
push
add
stos
cld
and
mov
test
mov
xor
push
add
xchg
add
push
add
add
push
addb
add
jg
div
add
call
push
scas
xchg
add
add
sahf
out
jle
jp
xchg
inc
mov
and
dec
add
inc
sbb
test
ljmp
inc
sub
rolb
scas
jge
or
rolb
lcall
mov
xor
and
mov
mov
loopne
sbb
gs
enter
add
test
or
rolb
cld
insl
jge
xlat
shll
sub
add
mov
add
into
out
imul
and
popf
cmp
or
ljmp
and
cmp
adc
add
add
mov
call
add
fstl
loopne
les
mov
scas
pop
movb
ret
add
cmp
nop
add
add
add
add
ret
add
out
sub
pop
pop
test
in
pop
ret
call
add
out
jne
or
push
call
addb
sbb
loope
lret
jl
mov
push
xchg
notl
fst
cld
fcmovnbe
add
add
add
mov
xchg
add
add
add
pop
or
enter
ret
je
ficoms
add
nop
add
xor
jmp
xor
pushf
push
mov
mov
cld
jmp
add
add
outsb
cmp
add
orl
add
pop
into
sub
mov
repnz
add
addr16
test
add
fimuls
mov
cmp
adc
xchg
sub
cvttps2pi
call
dec
fldenv
jbe
inc
movsl
fcoms
pop
inc
add
add
pop
lret
ret
add
test
mov
lret
data16
xlat
push
fdiv
add
add
add
fstpl
add
insl
dec
xchg
xor
or
nop
add
or
mov
mov
inc
outsl
push
inc
add
add
push
cwtl
sbb
or
or
pop
adc
lcall
int3
mov
xor
jno
add
repz
int
add
aas
sbb
ljmp
pop
addb
add
sub
add
push
jae
lds
add
cwtl
lahf
sbb
add
xchg
add
inc
add
pop
aad
or
mov
das
les
jl
dec
add
xchg
data16
lret
add
add
hlt
add
jmp
fdivl
int
and
fldl
sbb
add
add
add
add
add
add
stos
ja
add
jmp
les
aaa
lret
push
add
lret
cld
mov
fwait
jno
add
dec
clc
sbb
jl
lds
add
popa
jbe
movsb
add
add
mov
test
in
sbb
mov
inc
mov
sbb
add
leave
pop
int3
mov
add
ds
jo
test
loopne
push
add
and
mov
pop
testb
dec
add
dec
xchg
fwait
insl
stc
shrl
mov
ss
add
inc
add
or
or
inc
add
jne
insb
jne
loopne
mov
les
xor
mov
cmc
dec
sub
add
aas
mov
xchg
jno
cmpsl
pop
push
or
xchg
frndint
push
add
add
add
cmc
ds
jmp
out
dec
fdivl
data16
mov
stos
mov
pusha
add
stos
loop
rolb
sub
int
add
icebp
dec
test
pop
xor
sbb
add
nop
add
es
or
pop
icebp
nop
add
jbe
xor
and
add
and
pop
negl
call
add
pop
notl
add
stos
sbb
test
mov
jo
add
pop
pusha
add
push
add
push
add
add
aam
dec
pop
dec
lock
add
sbb
addb
and
push
add
add
ja
add
popf
in
aad
add
push
add
push
cmpsl
adc
jo
push
add
add
mov
lock
add
addb
out
push
pop
inc
xchg
and
add
ficompl
jle
add
add
jns
add
adc
jp
cld
jns
mov
push
add
pop
sub
mov
mov
cmpl
inc
add
ja
dec
push
and
add
add
imull
cltd
fiadds
adc
xchg
add
and
mov
jge
xchg
xchg
add
pop
mov
mov
pop
push
xchg
lret
pop
sub
dec
jb
adc
addr16
add
adc
add
push
add
adc
gs
adc
testb
add
leave
cmp
and
mov
addb
mov
movb
add
add
add
addr16
pushf
pusha
add
inc
add
add
or
pusha
add
jae
mov
add
shrl
add
jle
bound
mov
addr16
add
mov
cmp
adc
add
push
add
test
rcrl
scas
gs
mov
mov
dec
add
mov
adc
mov
add
add
push
rorl
int
jp
sub
mov
jg
add
sbb
pushf
cs
sbb
roll
add
out
loop
fcoml
enter
dec
xchg
ret
bound
mov
add
mov
adc
jns
xchg
add
cmp
xor
sub
add
sbb
adc
add
jge
dec
data16
xor
pusha
add
push
or
ljmp
add
add
rorl
xor
jmp
lea
mov
std
add
add
pushf
cmp
add
pop
cmp
mov
mov
fistpll
adc
mov
and
mov
mov
add
lea
add
add
mov
fdivrl
addb
insl
lret
push
clc
jo
out
lcall
add
add
sub
aas
rolb
and
add
stos
sub
add
test
pop
rorl
add
add
pusha
add
add
mov
rolb
push
add
insl
sahf
jp
lcall
adc
inc
cmpsl
mov
push
mov
jbe
sub
mov
aas
mov
lret
outsl
xchg
add
aas
lcall
testb
or
cmp
add
add
fnstsw
xchg
add
push
xor
inc
add
add
jecxz
mov
xor
ja
dec
in
fldl
cmp
sub
add
add
add
mov
push
add
rcll
lds
jp
shll
inc
add
loopne
adc
pop
clc
jmp
mov
push
jmp
add
add
jmp
out
cmp
add
adc
cmp
dec
mov
movsb
add
add
in
movb
aaa
ficoml
add
mov
mov
aam
xchg
or
outsl
or
add
add
add
sub
add
test
repz
xor
push
loope
add
decl
fstl
lea
pop
push
and
mov
sub
xchg
test
sub
xor
mov
cmp
cmp
mov
leave
cmp
aam
stos
and
mov
add
mov
add
add
add
dec
lds
lret
aad
lahf
test
int3
iret
sbb
mov
mov
pop
fdivs
sub
inc
fidivrl
imul
fldt
sbbl
imul
jecxz
inc
add
add
add
ss
add
mov
lods
imul
add
jnp
lret
xchg
sub
lock
add
add
fld
push
add
add
lcall
insb
in
rolb
test
adc
inc
repz
pop
add
add
add
mov
dec
scas
fldenv
sbb
add
mov
rolb
jl
add
popf
jl
add
jbe
div
das
shll
push
add
lahf
ja
in
inc
add
add
mov
ja
mov
inc
add
add
fcmove
int
add
mov
add
add
add
xor
test
pusha
add
popf
stos
dec
jne
add
xor
enter
add
add
push
add
add
imul
pop
lods
mov
or
add
jnp
add
loop
inc
add
add
testb
outsl
push
add
mov
sub
mov
push
mov
push
add
add
add
pop
data16
add
add
add
or
or
cmpsl
push
insb
mov
jbe
pop
and
and
mov
pop
mov
sbb
add
stos
fcomps
add
xor
jb
xor
add
push
add
add
lods
mov
and
nop
add
add
sub
jno
add
rolb
lret
pop
mov
xchg
lret
hlt
add
add
addr16
enter
add
inc
add
movsb
add
push
add
xor
xchg
outsb
int3
pop
xlat
lret
sbb
xor
mov
int3
add
add
les
xlat
cmp
mov
cmp
addb
aas
das
roll
fstpl
rcrl
cli
lods
nop
add
cmpsb
add
gs
or
add
stc
mov
add
popa
call
enter
add
add
dec
gs
cmpsl
pop
push
add
inc
add
int
push
xchg
mov
and
or
test
out
cli
addr16
add
jae
sub
inc
add
test
add
add
add
xor
push
add
add
addb
add
dec
push
add
fadds
std
jb
or
mov
add
jl
pop
std
pop
in
add
jecxz
mov
mov
add
arpl
movsl
lret
outsb
dec
pushf
and
cmpsl
inc
cltd
xor
add
std
cmp
jo
mov
mov
or
add
sbb
jnp
add
fcmovnbe
add
mov
fdivrl
xor
cmpsl
test
push
sub
sub
dec
push
xchg
push
loope
push
daa
std
cmp
add
fnstenv
add
pop
ja
adc
fmulp
test
cmpsb
add
cwtl
inc
sub
je
imul
das
in
add
sbb
add
sub
xor
inc
add
add
and
mov
add
scas
incb
fsubrs
stos
loope
outsb
inc
sub
add
repnz
iret
jbe
add
mov
xor
mov
fwait
xor
jns
lods
lea
xor
push
add
add
mov
sbb
lret
clc
and
mov
add
fcompl
mov
xor
out
mov
rep
pushf
jo
add
pop
xchg
add
adc
xchg
filds
inc
add
iret
mov
mov
mov
push
psubsw
addb
or
xor
cmp
xor
mov
sbb
add
pusha
add
push
lea
cmp
push
dec
adc
adc
jo
movsb
add
adc
push
aam
cld
insb
fstl
xchg
ds
add
xchg
xor
stos
movsl
push
add
add
mov
sbb
adc
push
addb
sbb
hlt
add
in
adc
add
pop
stos
mov
bound
mov
pop
or
mov
cwtl
movsl
cmp
and
add
inc
inc
jo
repz
adc
rolb
mov
sahf
xchg
add
mov
aaa
xor
mov
xor
mov
inc
add
and
sbb
add
out
addr16
stos
ds
cmove
sub
push
add
add
xor
or
mov
jno
cmp
add
mov
add
add
dec
jge
jno
or
add
add
leave
scas
aas
imul
add
xchg
popf
outsl
insb
out
sahf
or
add
add
add
or
sub
ds
jg
add
add
add
mov
sbb
add
mov
stos
sbb
enter
inc
pop
dec
and
inc
add
in
add
xchg
leave
sub
mov
shll
arpl
cmc
add
add
xor
inc
add
sub
add
add
ret
add
popf
mov
pop
push
cmpsb
add
add
jno
add
or
sub
scas
stos
in
push
mov
bound
mov
mov
jmp
add
test
aas
xchg
out
or
xor
xchg
add
clc
loopne
insb
stos
popf
lods
dec
fldl
cmp
mov
jg
lock
jb
adc
addr16
xor
icebp
orl
in
xor
add
xchg
lods
dec
aam
hlt
add
cli
leave
int
adc
xchg
inc
add
add
gs
sahf
inc
mov
addb
cmpsb
add
dec
xchg
jns
inc
xchg
add
scas
push
movsb
add
pop
addl
adc
sub
add
movsb
add
in
add
cltd
lcall
ja
add
jge
les
test
test
add
ret
jge
imul
or
add
fwait
daa
xchg
add
addb
mov
test
mov
lds
add
jno
fldenv
sub
add
addr16
add
dec
xchg
lock
aas
adc
push
add
lret
adc
hlt
add
pushf
test
add
sub
add
dec
pop
xchg
lock
xor
xchg
lock
jno
add
add
fbstp
push
add
lahf
sub
stos
xor
int
add
cmp
add
add
mov
dec
add
js
out
fistps
add
out
aas
inc
and
mov
add
jb
push
add
push
ljmp
fnstenv
lock
daa
dec
jo
out
and
add
js
out
fsubr
addr16
xor
jbe
mov
xor
sbb
clc
adc
sbb
lahf
or
mov
and
push
xchg
add
insl
adc
ds
aam
or
pop
hlt
add
cmpsb
add
xor
add
mov
pop
mov
leave
insl
mov
add
sub
add
pop
xor
mov
xchg
aad
pop
xchg
xchg
dec
outsl
xchg
cmp
add
gs
push
add
gs
add
add
add
add
sub
ficomps
decl
add
or
scas
imul
les
sbb
add
dec
mov
int3
jmp
lea
ret
xor
flds
add
jmp
dec
mov
add
xor
push
add
outsb
aas
add
inc
add
add
ljmp
mov
pop
xchg
jge
filds
mov
push
adc
xor
jge
movsb
add
imul
dec
and
mov
mov
addb
sbb
add
add
add
xor
or
add
or
dec
inc
dec
inc
fsubl
pop
xorl
mov
movb
and
sub
xchg
add
add
je
cmpl
xchg
add
ljmp
test
lock
ror
insb
cli
push
rol
dec
fstps
add
adc
cltd
call
adc
mov
mov
push
add
add
add
fwait
scas
test
call
js
add
mov
outsl
dec
dec
cs
sub
inc
add
scas
or
xor
add
cmp
add
sub
cmp
xor
add
testb
cmc
iret
repnz
lods
jp
scas
aas
cld
imul
outsl
xor
jb
adc
add
sub
add
add
sbb
pop
inc
out
sub
sbb
mov
add
arpl
fbstp
out
xchg
inc
add
movsb
add
xor
mov
xor
mov
add
mov
inc
add
add
dec
push
addb
mov
add
out
add
mov
scas
or
and
mov
stos
adc
add
sub
add
mov
add
jecxz
add
sub
pushf
aad
add
dec
sbb
ror
arpl
filds
lods
arpl
add
dec
pop
xchg
add
mov
in
pop
mov
xor
stos
outsb
aas
sbb
add
add
jo
data16
jns
push
push
add
add
mov
mov
in
and
mov
xchg
or
push
loopne
mov
stos
testb
sub
add
sub
jp
call
or
pop
xchg
adc
jge
roll
add
adc
add
push
lcall
addb
mov
add
aad
add
arpl
inc
add
adc
add
mov
lahf
dec
ljmp
add
jbe
mov
xor
mov
mov
add
add
inc
mov
add
mov
fsubs
mov
imul
adc
add
and
mov
mov
add
pop
dec
or
mov
cmp
dec
adc
add
add
sti
fsts
xor
xor
cltd
testb
pop
adcl
mov
or
cs
add
data16
push
push
add
pop
inc
sub
add
add
mov
stc
dec
or
add
dec
mov
filds
mov
push
rolb
or
sahf
roll
fsubs
xor
cmpsl
pmullw
lods
adc
ljmp
and
xchg
mov
and
mov
jl
xchg
add
add
mov
cmp
add
and
in
xor
pop
push
cmp
push
add
add
mov
aaa
lock
add
add
in
outsl
pop
inc
das
outsb
cld
dec
popf
jo
and
cs
add
jmp
mov
sub
add
imul
loop
add
add
jno
fwait
cmp
or
fucomip
pusha
add
sub
cmp
test
pusha
add
add
add
jne
stos
in
xchg
data16
add
add
movb
aam
negl
das
movsl
jl
add
sub
add
or
add
lret
and
in
pop
lods
arpl
inc
add
cli
inc
pop
repz
cmpsb
add
ss
fnstenv
jno
aaa
subl
xlat
rolb
mov
lcall
fimuls
inc
add
or
add
add
add
add
pop
dec
testb
add
out
stc
inc
inc
add
pop
stos
jp
add
sbb
or
add
movsl
iret
dec
pop
scas
fisubl
mov
pop
testb
lret
test
stc
jp
add
fidivs
xor
mov
mov
fnsave
iret
call
push
add
cmp
ret
xchg
popa
testb
outsl
cli
jmp
inc
mov
mov
inc
add
xchg
push
mov
inc
or
add
add
out
mov
loopne
test
add
imul
jo
pop
enter
inc
add
add
or
mov
lahf
mov
jmp
add
sbb
xchg
xor
jge
pop
iret
pushf
cld
and
xchg
lret
and
add
add
std
mov
stc
je
mov
xor
nop
add
rolb
add
xor
add
orl
push
mov
jle
in
repnz
add
lods
push
gs
arpl
stos
out
or
cs
fnsave
add
repz
jb
stos
dec
popa
and
cmpsb
add
inc
add
add
lea
nop
add
push
scas
push
add
or
or
jmp
mov
push
add
loope
add
je
andl
mov
cmp
add
cmpsb
add
movsb
add
jno
imull
jmp
mov
inc
add
add
push
add
jbe
sub
add
int
leave
fadds
mov
dec
fwait
jnp
mov
and
mov
cltd
lcall
add
mov
add
popf
add
add
add
or
ret
jb
data16
out
add
mov
or
add
and
test
adc
mov
and
imul
add
rolb
fldpi
lods
cmp
add
ss
arpl
mov
enter
jne
pop
jg
daa
mov
ja
clc
dec
add
mov
xlat
popa
push
add
push
add
rolb
mov
lods
rolb
sbb
pusha
add
test
call
ret
stos
xchg
int
add
imul
add
loop
dec
out
add
addb
add
sbb
enter
add
add
lahf
mov
ja
add
dec
pushf
rolb
add
jecxz
iret
lret
pushf
adc
xchg
fisttpl
inc
add
fimull
add
add
add
pusha
add
add
add
dec
insl
dec
enter
arpl
icebp
iret
aad
dec
sbb
stc
out
pop
or
ret
push
test
mov
and
pusha
add
adc
add
add
add
popa
jg
mov
arpl
or
pop
lds
rcr
adc
mov
jg
add
add
and
fpatan
xor
sahf
sub
aam
push
out
das
mov
mov
jle
sahf
push
mov
rolb
cltd
jg
add
add
aas
jp
cmc
out
in
sub
xchg
adc
in
add
mov
pop
inc
add
adc
int3
movsl
je
je
push
enter
scas
cwtl
out
les
jbe
stos
dec
clc
inc
add
xchg
push
pusha
add
sub
inc
movb
add
add
push
add
add
xchg
icebp
pop
dec
cmc
data16
mov
adcl
cmp
das
sbb
mov
movsl
lcall
adc
adc
sub
add
pop
inc
xchg
add
out
add
sarl
insl
jo
sti
out
fcmovnu
pop
insl
mov
das
mov
test
pop
jns
add
lret
sti
push
add
ret
stos
sbbl
mov
data16
fimull
sbb
xor
add
sahf
and
mov
adc
pop
ja
or
enter
ja
loop
addb
add
pop
movsl
in
cmp
add
push
add
mov
or
add
mov
add
add
or
lds
push
out
dec
cmp
mov
add
popa
mov
sub
out
xor
rolb
xchg
add
add
jno
add
add
add
ds
int3
add
mov
add
mov
add
mov
and
xor
dec
mov
xchg
pusha
add
mov
popf
loopne
jbe
outsl
mov
jl
dec
int3
cli
xchg
dec
xor
test
add
add
add
adc
jge
cmp
xor
lret
cmp
rolb
movb
add
les
jmp
mov
xor
mov
sbb
psllw
jge
nop
add
sub
jmp
lods
popa
cmpsl
setge
push
add
add
popl
add
adc
stos
add
mov
mov
cmpsl
imul
icebp
in
push
add
stc
and
mov
popa
arpl
fcoml
inc
sub
sbb
cmp
sbb
jno
add
sarl
jno
sahf
mov
dec
xchg
add
sbb
add
cmc
inc
jno
outsb
shll
frstor
add
pop
data16
call
orl
xchg
addb
loopne
cmpsb
add
inc
add
repz
add
add
out
sub
add
jp
mov
hlt
add
push
push
inc
repz
mov
inc
add
or
rolb
int3
and
lret
cmp
add
out
mov
add
cmp
mov
add
adc
es
add
movb
add
mov
pop
mov
out
push
jnp
leave
test
pop
leave
ja
jmp
mov
test
jecxz
dec
push
int
xchg
and
shll
mov
inc
add
mov
mov
loope
roll
stos
rolb
mov
js
mov
filds
add
inc
add
and
and
mov
call
ret
adc
add
add
jns
mov
sti
out
mov
adcl
les
dec
iret
not
add
aas
cmpsl
enter
xorl
aas
pop
jno
lods
push
add
add
lret
loope
adc
and
add
or
int
add
inc
cmp
jg
add
dec
xchg
add
insb
repz
insl
add
add
sbb
ds
add
push
add
add
int
add
lahf
pop
lock
inc
add
cltd
or
mov
les
mov
add
out
test
add
test
sti
dec
out
and
mov
dec
add
rolb
sbb
add
pop
es
fdivs
xchg
mov
jle
jle
insb
rol
add
lret
add
add
ret
mov
jl
imul
pushf
or
add
add
add
add
mov
in
push
and
add
mov
rcrl
push
add
pop
or
mov
add
mov
pop
push
mov
add
and
mov
ret
repz
mov
lods
call
xor
je
adc
nop
add
cmpsb
add
ret
ja
mov
sahf
pop
push
push
add
add
add
add
rolb
je
cmp
add
sub
add
mov
add
adc
fwait
xchg
cmp
ret
pop
jl
lds
mov
ss
sbb
add
pop
xor
jae
lods
adc
push
in
add
push
add
lret
mov
out
fnstenv
into
cmpl
mov
add
lock
mov
rolb
fcompl
add
add
testb
lahf
dec
mov
add
cltd
rolb
fdiv
add
popa
pop
cli
sbb
rolb
inc
add
dec
xchg
inc
add
pop
loopne
lret
add
iret
xor
inc
add
ljmp
and
push
add
add
add
pop
outsl
dec
repz
add
mov
mov
mov
dec
cmp
fisubl
add
fistl
popf
data16
ja
inc
xor
add
loope
adc
out
popf
adc
adc
incb
fisubrs
add
pop
and
add
popa
icebp
loope
add
xchg
add
fwait
cmpsl
sub
xchg
jno
cld
inc
add
add
fdivs
les
fwait
xor
fcompl
xchg
add
adc
mov
xor
cmp
sub
add
adc
add
xchg
pop
data16
rolb
roll
adc
lahf
addb
add
das
add
inc
sub
cs
add
inc
ds
mov
add
xchg
mov
outsl
bound
mov
lods
inc
stc
pop
rcrl
sbb
pop
aas
adc
xchg
add
add
cld
fs
jmp
add
add
add
sbb
das
test
sub
add
lret
mov
jmp
gs
lahf
cli
and
mov
add
add
sahf
lcall
push
repnz
jp
test
mov
add
xchg
add
add
clc
jb
push
dec
stos
and
pop
mov
jg
add
xlat
xor
jns
shll
add
add
sbb
cmp
push
pop
inc
add
xor
ds
or
add
das
in
jns
jmp
add
pushf
mov
cli
jmp
xchg
push
add
hlt
add
add
mov
jno
add
mov
mov
add
fnstenv
addb
imul
scas
data16
mov
and
cmpsb
add
pop
pop
cmp
add
out
jae
xor
xlat
rcll
add
outsb
dec
nop
add
add
rolb
jne
add
testl
add
sbb
add
add
mov
xor
popl
std
aad
add
pop
sbb
or
add
mov
add
mov
pop
push
add
push
add
add
jg
adc
test
add
aam
in
add
outsl
pop
xchg
add
mov
cwtl
out
lahf
outsl
xchg
add
xchg
cmpxchg
int
jg
cmp
jecxz
add
bound
mov
adc
addb
add
add
pop
cld
jl
add
repnz
sti
mov
inc
push
push
cmc
pushf
aaa
cwtl
dec
add
shll
add
das
xchg
add
arpl
sbb
add
sti
add
add
pop
xchg
cmpsl
movb
popa
mov
sub
test
popf
fadd
dec
icebp
stc
clc
pop
dec
outsb
icebp
into
mov
add
sarl
inc
add
add
or
aad
cmp
add
add
add
add
jmp
add
lahf
in
add
in
xchg
addb
stos
adc
adc
jo
add
pop
mov
lock
jl
add
pop
dec
in
xchg
add
into
insl
inc
xchg
add
leave
std
cmp
add
mov
add
xchg
cmpsb
add
lret
mov
add
adc
test
cld
sub
sbb
or
push
add
inc
adc
mov
in
hlt
add
lahf
push
insb
mov
add
in
inc
add
clc
xchg
add
cmp
jbe
dec
or
hlt
add
add
mov
add
cmpsb
add
add
mov
movsl
cmc
or
sbb
lds
iret
cmp
scas
xchg
sub
xlat
cmp
rolb
add
add
push
jmp
add
frstor
aam
mov
xchg
cltd
mov
push
add
inc
add
fdivs
and
pop
push
add
mov
loope
into
pop
inc
pop
push
xor
aas
pop
sub
aas
lock
add
lret
das
sub
dec
mov
cltd
lock
fldcw
push
cmp
push
add
mov
mov
fdivs
jne
add
out
mov
addb
int3
mov
push
jle
jne
add
add
sbb
push
pop
inc
pop
pop
push
cmp
lds
xchg
add
cmp
cwtl
inc
std
push
add
pop
ret
xchg
lds
xchg
jnp
lahf
mov
ljmp
negl
insl
inc
pusha
add
mov
push
rolb
inc
push
sbb
out
rcr
aam
push
add
mov
xchg
push
add
roll
imul
add
mov
adc
add
adc
sub
add
scas
xor
movb
loop
sahf
daa
or
lock
mov
mov
jo
inc
ret
rolb
test
add
add
add
dec
mov
add
xlat
lods
leave
cmp
cmp
loope
add
orl
mov
mov
js
and
mov
movl
js
lret
std
in
add
add
add
sub
push
adc
xchg
sub
pop
jg
add
gs
cmpl
test
add
xchg
add
add
mov
push
add
lds
call
scas
xchg
arpl
push
add
inc
add
and
mov
das
or
bound
mov
mov
add
cmp
add
add
xchg
add
jbe
pop
popf
repz
add
mov
adc
aas
mov
loopne
aaa
pop
push
add
add
add
cltd
cltd
lds
in
add
add
sbb
movsl
addr16
std
lret
add
xchg
add
sbb
jg
mov
dec
and
mov
add
cs
rolb
in
jns
add
mov
cli
inc
add
jno
adc
add
mov
jbe
in
push
add
push
add
add
push
add
add
xor
mov
add
mov
fildl
add
dec
test
and
cmp
out
pop
xor
loop
xchg
add
or
cld
xchg
mov
rolb
mov
rolb
adc
add
push
add
fsubl
in
mov
add
mov
lahf
lods
pop
dec
imul
mov
pop
or
add
mov
test
and
stos
aas
mov
ret
pop
push
cmp
add
lret
movb
sbb
outsb
stos
test
mov
cld
mov
add
popa
testb
add
addr16
add
add
hlt
add
mov
add
add
rolb
jecxz
and
dec
dec
in
pop
sub
sub
loopne
mov
loope
cmc
inc
add
jb
pop
mov
xlat
pop
jnp,pt
sahf
or
jmp
pushf
mov
andl
inc
mov
out
sub
xor
or
lock
add
fcom
outsl
popa
push
std
fimull
pop
in
dec
test
add
mov
mov
mov
xor
xchg
add
mov
and
das
and
jb
sub
cmp
mov
mov
stos
rorl
pop
pop
sub
add
inc
add
sbb
imul
push
add
inc
add
icebp
aaa
dec
negl
add
add
push
lahf
pop
aas
xor
arpl
add
add
xchg
add
test
int
adc
call
add
add
movsl
mov
loope
xchg
xlat
cmp
js
or
insb
push
sub
nop
add
stos
int3
jae
add
mov
add
inc
or
js
xor
mov
add
add
bound
mov
lock
push
add
mov
addb
lret
jecxz
xor
xchg
fisubrl
add
add
inc
mov
int3
loop
jg
add
add
sub
cmp
dec
adc
add
mov
enter
fbld
add
mov
cmpsl
or
ficoms
add
fdiv
or
scas
push
push
dec
pop
les
test
aad
push
add
push
add
lret
mov
jmp
loope
cld
cs
add
aas
dec
cmp
add
add
mov
clc
imul
add
cmpsl
outsl
lcall
dec
gs
xchg
add
mov
fld
lock
add
pusha
add
add
add
or
mov
out
call
jl
add
addb
add
je
pusha
add
mov
mov
pop
mov
mov
pop
scas
stos
hlt
add
add
add
mov
mov
add
nop
add
dec
rolb
xchg
int
gs
mov
xchg
add
mov
xchg
add
add
cmp
leave
jo
xchg
add
add
ja
add
mov
sub
add
test
popa
in
mov
and
mov
jns
pushf
push
add
int3
fsts
sub
add
testb
add
xor
ja
aaa
mov
or
jo
cwtl
cs
add
imul
mov
pop
push
decb
std
mov
pop
mov
stos
inc
bound
mov
add
add
add
dec
iret
std
mov
cmp
jae
xchg
add
add
xor
ds
mov
sub
addb
xchg
mov
out
dec
mov
iret
ret
add
ret
popa
out
mov
out
add
jmp
fwait
xchg
push
add
mov
pop
test
add
repnz
je
pop
lahf
jbe
or
or
add
js
loop
pop
cwtl
insl
sbb
pop
jl
ja
add
mov
add
sahf
or
push
add
add
mov
add
or
add
add
stc
push
and
scas
pop
test
insl
stc
xchg
add
add
mov
insb
mov
outsb
sahf
mov
add
clc
or
testb
or
gs
cmpsl
xor
sti
fs
addb
xor
pop
pushf
lods
test
mov
push
ljmp
lods
add
and
pop
dec
cmp
and
mov
add
mov
add
jge
add
pop
sub
movnti
mov
jecxz
pop
jbe
cmp
aaa
rolb
loopne
rolb
add
outsl
xchg
fwait
jne
fistl
fisubrs
adc
int3
cmpl
add
std
inc
fwait
pop
rolb
jmp
add
inc
add
jno
nop
add
repz
jae
fsubl
xchg
cli
lcall
xchg
xchg
jp
sub
add
clc
add
push
push
push
add
xchg
jno
inc
sub
call
orl
cmp
xchg
popf
mov
dec
stos
dec
xchg
add
add
fcomps
cmc
scas
lcall
leave
mov
popf
push
cmp
mov
add
mov
mov
shrl
jmp
test
fcompl
add
mov
sub
testb
rol
dec
push
add
add
add
add
ja
add
sub
mov
js
mov
ret
xchg
inc
add
add
jp
jno
add
inc
xor
insb
or
test
add
push
add
add
adc
add
sbb
add
pop
sarl
add
or
mov
out
scas
jg
add
add
mov
loopne
movsl
out
fwait
inc
add
lahf
mov
add
add
add
pop
aaa
shr
or
adc
repz
add
dec
push
add
outsb
cmp
testb
push
add
add
bound
mov
add
mov
outsb
std
cmc
addb
lret
ret
call
pop
and
out
xchg
and
jno
fbld
add
add
cmp
mov
push
add
bound
mov
popl
add
add
aas
pop
mov
inc
sbb
int3
inc
clc
cmc
data16
push
add
add
sub
nop
add
ds
add
cmp
add
inc
push
inc
add
inc
add
mov
lret
out
movsb
add
repnz
or
push
add
testb
dec
cmp
xchg
mov
ret
xchg
iret
cmc
lahf
xor
addb
mov
pop
stos
xor
int3
in
adc
jnp
add
stc
cwtl
sbb
jno
pop
lock
add
sub
adc
lret
add
add
add
bound
mov
sub
sub
out
sub
add
add
pop
sub
mov
or
dec
mov
aaa
and
leave
ret
inc
rcrl
pop
push
add
push
cs
popf
sbb
data16
and
dec
sbb
cs
jl
scas
pop
adc
sub
cmp
pushf
stc
push
add
jecxz
add
add
push
add
xchg
cwtl
inc
mov
add
lds
mov
add
jno
jl
xchg
cmp
mov
fmul
out
sub
insb
mov
add
or
imul
inc
cmp
ret
xchg
les
dec
std
into
jge
add
add
mov
lods
dec
add
mov
add
add
inc
repnz
push
add
xor
pop
mov
add
add
mov
rorl
add
sub
add
repnz
lret
int3
sti
inc
inc
add
jae
or
movb
pop
jl
movsb
add
or
fdivs
movsb
add
sub
rolb
sub
cmpsb
add
add
sbb
hlt
add
movb
push
add
inc
add
add
pop
sub
mov
add
cmp
inc
into
mov
add
rolb
pop
data16
pop
jge
test
into
test
add
mov
push
je
out
sbb
in
mov
sarl
mov
add
add
jg
in
enter
dec
or
add
sbb
out
movnti
out
repz
cmc
fimuls
or
cltd
or
in
jns
add
enter
inc
data16
mov
mov
test
mov
or
jecxz
fdivs
add
nop
add
push
push
add
and
mov
lea
xchg
add
add
mov
mov
outsl
repnz
xchg
add
repz
lret
inc
add
xor
cmpsl
adc
mov
inc
pop
xor
add
clc
out
inc
cmp
sbb
cmp
fnstsw
in
lret
leave
push
test
lcall
sub
xchg
fimuls
add
test
mov
test
lahf
fisttpl
pop
pop
scas
lcall
mov
mov
adc
add
add
push
lods
imul
sub
inc
inc
add
xchg
pop
aam
das
adc
jbe
push
and
mov
add
add
add
mov
add
das
adc
sbb
pop
sarl
xchg
sub
add
add
add
dec
push
add
add
add
dec
sbb
push
divl
xchg
add
add
add
add
inc
add
mov
movsl
dec
inc
add
andl
adc
mov
add
mov
xchg
add
rolb
mov
add
movsb
add
pop
lods
ljmp
fsubl
or
lods
daa
in
lea
insl
pusha
add
add
cmp
sbb
jne
ja
xchg
cmp
pop
in
add
add
daa
adc
adc
rcll
add
cli
mov
pop
movsl
js
gs
jge
inc
or
repnz
lcall
add
jno
add
or
sti
mov
les
inc
sti
test
xor
xlat
addb
imul
add
aas
inc
xchg
addb
add
imul
rolb
in
adc
imul
dec
dec
mov
sti
pop
fstpt
add
add
mov
pushl
add
push
add
sahf
push
add
push
stc
sbb
add
shrl
clc
jns
pop
sbb
mov
mov
inc
test
inc
add
mov
add
mov
mov
mov
xchg
mov
mov
lret
std
and
mov
xlat
mov
cld
xchg
fimull
add
in
rorl
mov
insl
in
jno
mov
mov
adc
jmp
add
lret
add
add
aad
xchg
dec
jbe
dec
fistpll
add
add
rorl
add
push
add
mov
aam
inc
rolb
lea
add
pop
aam
pop
or
ja
sbb
add
or
jnp
xor
and
mov
sub
add
bound
mov
add
push
adc
add
addr16
clc
in
jbe
push
test
dec
sti
cmp
push
add
pusha
add
add
add
dec
mov
add
lahf
rolb
insl
lock
aaa
push
add
mov
add
dec
jbe
iret
aas
in
rolb
fsubrl
rolb
addb
pop
and
imul
lret
add
shrl
out
xchg
or
out
jl
lds
mov
stc
mov
mov
mov
std
mov
jle
das
lret
subl
mov
mov
add
ficoml
add
leave
mov
or
add
les
movsl
out
movsb
add
add
push
add
inc
add
push
or
rcll
loope
sahf
inc
sub
xchg
lcall
add
xchg
push
add
adc
test
dec
push
add
aas
jle
add
iret
mov
sub
int
mov
cmp
fpatan
dec
inc
add
add
sbb
imul
mov
add
mov
xlat
js
push
add
add
test
add
add
add
mov
and
mov
aas
dec
adc
rolb
dec
and
mov
jmp
dec
mov
aas
ljmp
add
dec
and
ja
xor
repnz
in
push
add
adc
jmp
fadds
add
insl
pop
jmp
cltd
nop
add
rcrl
add
mov
add
mov
std
fadds
mov
cli
cmp
adc
cmp
popl
sbb
add
cmp
cs
push
add
add
lcall
add
add
adc
dec
jns
add
add
mov
xchg
add
jmp
fs
aas
mov
loopne
les
sbb
pop
inc
faddl
jno
add
sbb
dec
or
jle
inc
add
mov
inc
add
rolb
testb
add
add
xchg
add
scas
enter
loop
cwtl
jl
adc
add
and
mov
add
add
pop
fistpl
xor
shll
add
add
test
outsb
push
add
add
add
outsb
jns
je
adc
add
mov
out
or
add
add
cmpsb
add
sub
add
add
add
add
add
add
xchg
fbstp
add
dec
testb
xchg
xchg
inc
add
and
loop
mov
bound
mov
xor
add
rcrl
push
lcall
jl
add
cmp
addb
add
outsb
stos
dec
pop
cmc
sub
fisttps
inc
insl
lret
add
insb
lret
cmp
aas
jle
in
les
loope
xchg
add
loopne
call
xor
into
add
loopne
cmpsl
xchg
scas
in
movsb
add
jp
add
sbb
xchg
addb
add
jbe
xor
dec
add
jo
pop
jbe
cmp
add
add
jbe
lods
dec
mov
or
push
push
add
je
out
add
add
add
inc
add
pushf
pop
adc
mov
mov
mov
jl
add
adc
lret
adc
jp
popa
sub
add
push
add
std
and
add
xchg
xor
cltd
push
sub
add
jne
add
andl
mov
cli
sbb
mov
jo
aam
aam
loop
inc
add
mov
test
ljmp
add
sbb
loopne
rolb
xor
filds
fs
add
add
ret
lahf
ret
imul
inc
add
out
test
mov
js
xchg
or
xchg
cmp
mov
pop
pop
test
sub
add
add
pop
daa
shll
add
pop
lods
xor
add
faddp
add
jl
xor
xlat
push
addb
pop
sbb
jae
ljmp
jecxz
add
add
add
leave
mov
dec
inc
roll
mov
arpl
xchg
xadd
adc
bound
mov
add
pop
xchg
leave
mov
mov
adc
jnp
jnp
adc
std
ret
loopne
jb
push
ljmp
loopne
movb
mov
add
add
lds
sbbl
dec
movb
in
lea
sub
add
dec
or
pop
pop
insb
mov
mov
add
bound
mov
push
loopne
dec
jmp
add
add
add
stos
int
add
call
adc
testb
out
xchg
movsb
add
leave
jns
mov
and
push
mov
sti
cwtl
out
add
dec
mov
sbb
push
push
add
or
mov
cmp
add
das
mov
jp
pop
and
pop
push
or
or
add
popf
push
cwtl
add
inc
push
add
add
rolb
test
add
mov
add
add
sub
sbb
pusha
add
pop
popa
cmc
je
sub
test
add
add
add
cli
cmp
nop
add
add
add
mov
inc
add
add
mov
fcomps
add
push
add
or
inc
mov
data16
push
or
ljmp
sub
mov
rcll
cmpl
cmp
push
add
data16
sbb
add
mov
mov
inc
inc
inc
add
add
and
add
mov
jbe
mov
data16
jg
mov
inc
jnp
mov
mov
mov
mov
add
xor
sti
lahf
stos
fisttps
add
add
movsl
test
pushl
add
incb
add
xor
add
ret
insl
sub
insl
test
les
movb
sahf
dec
imul
fsubs
popa
repnz
lods
lock
popf
aas
sub
add
movb
and
sbb
add
add
mov
jbe
in
inc
add
sub
add
add
in
loopne
scas
mov
movb
add
stos
or
add
mov
out
addb
add
add
lods
cmp
add
add
dec
cmc
sti
addb
aam
sub
in
adc
push
rcrl
add
ja
mov
je
pushf
xor
add
lahf
test
sub
add
push
add
jp
pop
mov
repz
jecxz
out
idivl
mov
add
mov
pop
mov
out
adc
fcomps
in
mov
inc
add
sub
mov
and
add
add
inc
add
add
add
pop
mov
ds
ja
or
add
mov
lahf
lods
bound
mov
xor
add
inc
add
jns
scas
push
cmpsl
data16
testb
sub
lret
push
repz
hlt
add
cmpsb
add
add
arpl
cs
add
out
xor
lods
or
pop
xor
sub
addb
add
lods
pop
or
add
cmpsl
adc
inc
add
or
daa
data16
and
add
add
or
cli
pop
imul
pushf
xlat
outsb
outsb
test
dec
in
insb
addb
add
int
xchg
nop
add
insl
dec
push
add
cmp
jg
push
add
imul
mov
fldl
add
inc
rolb
stos
jns
add
add
xchg
jmp
add
insb
mov
xchg
adc
inc
push
sbb
pop
sti
sbbl
add
add
hlt
add
add
mov
add
add
add
push
add
clc
sub
pop
xchg
add
inc
pop
loope
add
add
andl
pushf
cmp
mov
les
xlat
add
pop
les
lret
daa
mov
add
pop
or
and
add
add
dec
pop
cs
add
hlt
add
mov
aaa
jp
add
add
add
add
and
sbb
sub
mov
std
fbstp
testb
add
imul
in
pop
or
push
mov
shll
mov
add
add
add
loopne
sub
outsl
xor
add
pop
mov
or
xchg
add
sar
into
movb
sbb
push
add
test
inc
mov
fdivrl
inc
add
add
mov
hlt
add
mov
add
out
lcall
cs
movb
or
out
icebp
inc
jbe
add
mov
pop
xchg
mov
mov
shll
mov
add
add
xlat
cmp
push
xor
sub
dec
je
cs
xchg
clc
adc
arpl
inc
add
sahf
mov
add
add
mov
jg
add
in
xchg
jge
fnstenv
add
add
jmp
scas
clc
cmp
inc
add
dec
add
pushf
adc
mov
movsb
add
cltd
inc
add
enter
add
add
cli
popa
or
fdivrl
popa
les
testb
das
jbe
insl
stos
jb
movb
mov
sbb
jbe
ret
fsubrl
pop
aas
mov
xchg
rolb
add
movsl
push
mov
add
add
mov
add
add
add
mov
push
sbb
add
cmpl
out
push
add
aad
cwtl
or
push
push
add
outsb
adc
pushf
jne
insb
push
jmp
add
push
add
jp
inc
loope
push
add
sti
sbb
pushf
lahf
mov
xor
in
inc
adc
and
mov
mov
mov
inc
inc
add
jmp
add
in
adc
call
add
fldenv
jl
add
popf
mov
pop
xchg
je
xor
pop
inc
imul
test
subl
mov
add
out
inc
add
add
test
jmp
popa
repnz
push
add
cs
in
fwait
or
sbb
add
loopne
addb
and
add
bound
mov
lcall
jmp
add
add
pop
push
hlt
add
pop
movsb
add
ja
adc
push
add
mov
xchg
in
sbb
push
pop
sbb
adc
rolb
xchg
imul
add
add
push
xlat
mov
lods
aaa
repnz
inc
add
or
xchg
movsl
popf
pop
sub
fwait
xchg
lods
push
xchg
add
add
arpl
push
add
cwtl
rolb
sbb
popa
rolb
add
rolb
lcall
std
cmp
outsb
xchg
add
add
add
loope
pushf
push
inc
mov
mov
xor
add
xor
add
icebp
or
jae
add
aaa
mov
add
add
aam
pop
addr16
out
imul
addb
je
pop
sub
inc
arpl
add
sbb
test
aaa
push
sbb
sbb
mov
add
pushf
movb
mov
movb
repnz
bound
mov
add
nop
add
testl
stos
push
add
and
add
add
xchg
je
jg
out
sahf
adc
stos
xchg
inc
add
adc
add
pusha
add
push
add
dec
movsb
add
add
add
add
mov
add
mov
or
ds
xlat
mov
es
mov
scas
popf
lret
mov
add
add
add
add
add
inc
add
cwtl
and
add
mov
adc
dec
xchg
outsl
dec
push
insl
jge,pn
sbb
add
or
pop
gs
enter
cmp
add
pushf
les
and
mov
jmp
pop
add
and
mov
cmc
iret
pop
fcompl
or
add
add
add
cmp
fnstenv
filds
out
xor
loop
aam
movl
rorl
add
sbb
lret
push
add
add
lahf
add
add
lret
mov
jns
mov
pushf
mov
add
jmp
push
add
dec
js
add
push
push
add
and
mov
inc
jp
mov
or
sub
jp
add
mov
add
je
and
mov
fbld
movsb
add
xchg
add
iret
add
add
mov
test
ret
movsb
add
add
pop
rolb
scas
insl
call
cmp
add
jp,pt
push
add
ja
add
cwtl
movb
add
add
push
add
ljmp
fwait
lret
out
popf
lea
sahf
das
sub
bound
mov
lcall
mov
aaa
push
mov
fsubrs
jl
add
int
cltd
or
icebp
movb
sbb
adc
addb
sub
jb
fsubrs
dec
es
add
adc
repz
or
pop
mov
add
insl
repz
push
add
mov
add
mov
push
js
mov
add
imul
add
add
sarl
inc
jns
cmp
jp
add
and
add
addb
aas
pop
or
dec
jae
xchg
jb
ret
cmp
push
add
mov
out
xor
adc
pop
js
add
test
cmp
ds
pop
addr16
cmp
mull
sahf
cwtl
add
out
push
scas
push
add
fisttps
cli
arpl
mov
mov
ret
sbb
xor
loope
add
insl
push
add
adc
lock
push
add
cmpsl
mov
sub
test
add
add
dec
in
mov
outsl
adc
cld
cmp
or
inc
test
mov
mov
test
add
test
pop
fs
add
add
add
lret
push
sahf
jmp
sub
add
rolb
add
or
insl
pop
add
add
cwtl
stos
addb
add
sub
add
add
mov
sbb
out
dec
shll
pop
lcall
insl
sub
add
loop
or
push
add
add
lcall
add
test
fidivs
add
jbe,pt
outsl
je
sbb
fwait
mov
xchg
bound
mov
movsb
add
mov
outsl
jae
or
stc
cltd
enter
and
in
movsl
cwtl
xor
sbb
fidivs
inc
pop
push
push
add
add
mov
les
pop
adc
pop
pop
sbb
pop
dec
movsl
stos
sete
test
pop
ja
cmp
ja
add
pop
inc
add
xchg
add
xchg
rcrl
lods
outsb
cmp
add
jle
out
aam
xor
inc
dec
dec
hlt
add
stos
pusha
add
mov
mov
mov
dec
mov
fisttpll
mov
and
add
dec
push
push
xchg
iret
jae
pop
pusha
add
jle
les
jle
mov
add
push
rolb
out
call
pop
sti
cld
mov
jns
add
loop
jmp
mov
dec
lcall
fcoml
frstor
jb
pop
inc
add
in
jl
add
fcmove
xchg
jne
push
ljmp
add
add
adc
jmp
add
add
add
repz
add
cmp
adc
bound
mov
pop
sub
cmp
add
add
add
ret
mov
xor
mov
loop
add
inc
add
sbb
les
dec
mov
add
add
xchg
call
push
je
gs
cs
ljmp
mov
in
mov
push
and
add
inc
pusha
add
rolb
jge
jp
mov
add
shll
add
jae
loopne
into
sbb
add
cmp
jmp
into
xor
ficoml
enter
in
rolb
inc
add
sbb
xchg
and
mov
add
add
out
lcall
inc
add
inc
push
add
into
lds
jbe
mov
aam
push
lcall
push
pop
jl
add
xchg
pop
les
xchg
add
jge
add
xchg
add
enter
add
popf
mov
fnstcw
fists
fldenv
mov
cmp
ret
cmpsl
jmp
cmp
jne
mov
add
pop
add
rolb
divl
mov
push
add
mov
stc
ss
pop
push
test
dec
in
dec
adc
sti
sahf
aam
in
mov
popa
inc
lds
jbe
jae
and
mov
mov
add
add
sub
sbb
in
hlt
add
shrl
mov
mov
add
popf
xchg
pop
in
fs
das
and
xor
cmc
cmp
mov
cmc
sbb
popf
les
mov
add
add
call
mov
sub
add
stc
pop
cmpsb
add
cmp
add
movb
jb
inc
add
ljmp
mov
sbb
and
mov
lods
adc
mov
pmaddwd
add
add
add
or
push
add
dec
pushf
mov
adc
add
in
add
cmp
call
add
inc
pop
inc
add
ficoml
ljmp
loope
dec
dec
push
push
add
pop
inc
add
add
add
sub
movsl
cmp
add
sbb
mov
inc
jge
adc
fisubl
add
setbe
lods
add
mov
xor
stos
pusha
add
mov
mov
add
add
testb
add
loop
dec
push
add
add
add
stos
sub
xchg
cmc
cmpsb
add
add
push
add
xorl
push
aam
sub
mov
pusha
add
ljmp
add
add
add
add
add
dec
cmp
push
add
mov
sbb
dec
xor
call
add
and
mov
out
add
cwtl
rolb
fdivl
cmp
add
scas
das
movsl
ljmp
adc
test
mov
pop
lods
mov
add
aad
in
scas
movsb
add
test
movsl
test
mov
add
cmp
dec
rolb
inc
std
pusha
add
jp
add
jae
fwait
cmp
ljmp
in
movb
clc
add
clc
jmp
mov
mov
call
orl
push
push
xchg
ss
fcomip
add
lea
dec
loopne
add
add
movb
or
rolb
addb
loope
cld
call
xor
out
mov
movb
out
mov
mov
lea
in
int
xor
add
jecxz
outsb
ficompl
stos
jno
ljmp
add
add
movb
xchg
movsb
add
add
inc
add
add
add
test
and
mov
mov
add
add
add
mov
leave
jmp
fbld
rcrl
repz
rolb
push
xor
sbb
mov
add
add
sbb
add
push
jne
lods
push
scas
out
xor
les
in
std
jp
mov
add
mov
add
add
or
push
add
sbb
adcl
incl
inc
in
sub
add
lcall
pop
dec
les
pop
aaa
hlt
add
add
sbb
add
jno
add
xchg
pop
dec
xchg
add
add
add
cs
sbb
and
add
sub
add
cmp
add
add
adc
test
push
add
fstps
int
add
addr16
inc
add
and
add
in
les
xchg
jae
lea
test
mov
add
add
add
lock
add
jle
mov
mov
sub
xchg
push
dec
xor
push
jge
xchg
hlt
add
rolb
rcrl
add
call
add
movsl
dec
ljmp
dec
mov
cld
adc
xor
addb
add
outsl
cmp
add
mov
jne
add
add
into
add
add
dec
xor
lret
add
adc
in
sub
lock
aas
xor
add
movsb
add
add
add
lea
inc
add
mov
add
jl
pop
addb
ljmp
test
ja
add
cmp
hlt
add
sbb
imul
mov
out
sub
stos
or
dec
pop
test
add
dec
dec
fldt
pop
movsb
add
push
jns
add
mov
mov
add
push
imul
add
jnp
add
out
add
mov
out
sahf
adc
loopne
lods
mov
dec
addr16
lret
ret
rolb
xchg
gs
stos
mov
and
fmulp
daa
pop
mov
cmp
flds
mov
push
xchg
dec
fisubrl
sub
incl
scas
add
mov
push
pop
mov
push
cmp
or
sub
inc
add
pop
addb
add
and
mov
add
push
pop
add
xchg
xchg
add
testl
add
cmpsl
dec
jge
pushf
fwait
adc
aam
xchg
add
ret
push
stos
clc
xchg
add
adc
and
add
lcall
icebp
and
add
pop
adc
mov
mov
ds
loop
addb
or
pop
shll
insb
flds
add
out
cmp
dec
std
jns
dec
addb
mov
add
add
cmp
je
insb
inc
aaa
mov
test
add
mov
xlat
or
clc
push
mov
add
mov
add
xchg
add
jno
and
cmpsb
add
ja
add
aad
sub
negl
cmp
mov
shr
stos
imul
js
inc
add
fidivrl
and
dec
add
mov
sbb
add
mov
pop
test
fisubrs
icebp
cltd
add
mov
xchg
inc
add
ljmp
xor
xchg
insb
ror
jae
add
add
xor
push
inc
mov
add
add
add
or
mov
jmp
jno
pusha
add
cmp
rolb
xchg
add
and
mov
out
add
mov
push
and
mov
sub
xor
fstps
xchg
add
aad
in
mov
inc
xchg
mov
mov
pushf
ja
outsl
mov
addb
bound
mov
and
fmull
or
sub
xchg
ljmp
dec
dec
jge
add
out
repnz
testl
add
data16
add
test
fcomps
dec
nop
add
add
mov
cmc
mov
data16
insl
add
mov
imul
ficompl
cmpsl
mov
add
add
insl
rolb
inc
cs
push
mov
add
fldcw
add
mov
aad
dec
and
mov
inc
mov
or
sub
add
add
mov
inc
add
inc
in
pop
xchg
cmc
lcall
int
out
add
mov
add
aas
les
mov
jp
add
sbbl
scas
cli
push
out
xchg
add
