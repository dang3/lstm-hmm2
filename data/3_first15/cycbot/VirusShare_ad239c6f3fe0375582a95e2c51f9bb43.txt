xchg
pop
rorb
add
rolb
sub
rolb
lret
nop
add
cs
add
add
add
cmp
mov
jne
inc
addr16
add
in
addb
sti
mov
mov
and
cld
loope
add
xchg
add
rolb
mov
jge
imul
add
jge
pop
stos
push
cwtl
daa
outsb
mov
xchg
add
lahf
testb
add
outsl
add
inc
cmp
sbb
mov
add
add
push
add
mov
aad
add
fbld
add
mov
add
cmp
xchg
mov
inc
jb
push
add
add
sahf
xchg
xchg
jge
add
push
fmuls
mov
add
or
jmp
movsb
add
pop
les
std
sahf
imul
inc
ljmp
addr16
popf
cmpsb
add
add
ficoms
int3
push
add
loopne
mov
or
add
add
std
or
insl
insl
ljmp
repz
cltd
xchg
ja
jl
es
jp
push
mov
add
mov
dec
jle
adc
shrl
adc
sbb
add
add
add
mov
push
in
movsb
add
addr16
add
dec
adc
hlt
add
jbe
pop
cmp
lods
push
add
inc
add
add
push
inc
add
add
mov
dec
cmp
xor
cmp
and
xor
sti
addb
or
pushf
iret
sbb
rol
in
xchg
or
cmp
add
scas
inc
add
mov
pop
or
repnz
inc
add
add
or
or
add
cmp
mov
add
sbb
sub
hlt
add
push
add
in
mov
add
lret
sbb
arpl
dec
aam
push
fldl
in
nop
add
imul
loope
es
fdivrs
mov
xchg
jg
add
add
inc
xor
pusha
add
push
add
add
add
dec
mov
arpl
lock
inc
add
popa
rcll
mov
add
pop
mov
sub
jl
into
mov
daa
jmp
nop
add
xor
mov
xor
xchg
pop
jg
adc
adc
and
add
add
add
mov
add
int
cmp
mov
mov
fwait
add
mov
jecxz
add
xchg
rcrl
dec
cmp
add
add
mov
jb
push
scas
sub
ret
jecxz
loop
jns
test
movsb
add
add
mov
mov
out
pop
sbb
mov
stos
mov
je
sub
add
pop
cmp
add
add
mov
lea
xchg
add
lds
ss
add
out
and
add
add
add
data16
movb
adc
add
add
sub
add
int
pop
jmp
fisttpl
mov
mov
jl
or
mov
push
sbb
or
test
dec
int3
xor
fistps
xchg
add
fsubl
pop
push
adc
jecxz
mov
add
push
add
jb
or
xchg
add
jge
data16
inc
sarl
sti
sub
adc
pusha
add
add
mov
xchg
rolb
testl
add
and
adc
xchg
add
add
popa
add
in
adc
mov
push
add
inc
lea
in
out
stos
xor
inc
inc
ja
pop
push
add
add
add
add
add
add
or
out
shrl
lds
add
test
out
xor
fidivl
addb
inc
add
subl
add
add
add
inc
fstpt
popa
in
cs
xor
jnp
fnsave
add
ljmp
add
aas
aam
or
add
add
mov
push
add
pop
into
hlt
add
adc
in
mov
pop
or
scas
jg
dec
sub
mov
sahf
pop
nop
add
xor
and
add
nop
add
jno
add
mov
clc
jp
add
adc
ds
adc
push
add
adc
les
fldenv
add
add
add
push
add
dec
mov
add
or
adc
in
pop
nop
add
inc
add
pushf
out
and
mov
pop
daa
jg
mov
sbb
mov
mov
adc
xor
add
sbb
mov
jge
inc
gs
add
add
into
xlat
push
add
add
push
add
jno,pt
xchg
xchg
add
bound
mov
add
adc
adc
sti
lret
jne
add
add
pop
and
mov
out
push
jnp
fisubrl
add
add
in
je
cli
outsl
sbb
pusha
add
outsl
xor
rolb
xor
cmp
ljmp
pop
pusha
add
add
cmpsb
add
add
add
add
add
add
add
lret
push
arpl
add
add
or
mov
push
sbb
int3
and
enter
sub
add
pop
push
jge
add
add
mov
test
xchg
add
out
pushf
cmp
mov
ss
add
push
add
add
mov
add
mov
add
xlat
scas
push
xor
add
push
add
cltd
lock
adc
cmp
pop
xchg
loopne
or
add
adc
inc
add
pusha
add
nop
add
xor
add
mov
mov
int3
inc
add
dec
jb
test
mov
add
je
rolb
dec
or
iret
cld
or
das
es
movsb
add
fidivrs
cli
data16
add
scas
mov
push
lret
out
mov
add
mov
cli
push
add
add
xor
mov
sbb
xor
sbb
outsl
inc
add
jp
ljmp
hlt
add
sbb
movsl
push
add
icebp
jecxz
add
jp
push
or
adc
cmp
xchg
shrl
lcall
mov
add
fisttps
sarl
add
inc
add
add
repz
shrl
scas
lods
je
jle
push
dec
jno
add
mov
xchg
leave
cmp
pop
cmp
movb
into
sub
add
fwait
mov
popa
add
add
cmp
push
add
outsb
inc
add
adc
sub
add
add
loopne
lret
add
mov
add
in
add
and
dec
mov
mov
jb
mov
aas
jo
mov
nop
add
sahf
push
add
fists
mov
add
hlt
add
jl
add
or
pop
jg
inc
pushfw
xor
cltd
sub
in
sub
push
push
push
cld
call
sub
mov
cs
es
ss
lea
push
push
push
call
cmp
je
es
lea
push
push
es
call
test
jne
jmp
lret
icebp
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
lea
sub
repnz
mov
sub
mov
cs
push
push
jmp
jmp
add
add
lea
cmp
pop
int
add
mov
testl
sub
insl
fcomps
dec
aam
sbb
aad
pusha
add
pop
test
iret
xchg
rolb
inc
add
or
push
add
add
out
addb
test
aas
mov
add
mov
add
das
call
add
mov
xor
imul
fldenv
xor
push
or
add
mov
les
inc
sbb
scas
fiaddl
mov
xchg
add
mov
adc
out
adc
int3
sbb
add
jecxz
cmp
mov
ret
in
cmp
add
mov
call
daa
pop
push
cmovns
push
add
sti
mov
addb
push
inc
shrl
lret
inc
add
xchg
adc
push
mov
xchg
xlat
and
sbb
loopne
repnz
push
add
mov
mov
repnz
mov
dec
cltd
mov
xchg
jb
xchg
add
mov
nop
add
hlt
add
fiadds
imul
dec
jo
es
add
add
adc
ja
inc
cmp
mov
dec
mov
xchg
add
mov
es
dec
mov
int
xor
sbb
mov
jb
push
add
mov
pop
lods
push
add
out
xchg
fcompl
fiaddl
jg
add
fidivs
sti
fwait
stc
mov
add
pop
and
add
scas
xor
in
mov
sbb
cltd
sbb
xor
add
pop
test
xor
cmpsb
add
adcl
xchg
add
add
add
in
add
stos
add
addb
ret
or
xor
xchg
add
jp
icebp
pop
xchg
and
mov
pop
popf
push
mov
std
mov
xor
mov
arpl
pop
scas
push
fwait
xor
mov
movsb
add
ret
inc
out
sub
jmp
cmpsl
mov
add
sbb
fwait
mov
and
mov
loope
add
les
std
test
cli
add
add
out
ret
jg
dec
push
add
xor
rorl
push
add
das
xchg
dec
movd
fwait
cmc
sub
inc
push
add
inc
popf
pop
clc
loope
icebp
pusha
add
loopne
iret
cmp
add
int3
icebp
fcomip
jp
cs
jb
loope
sub
lds
add
bound
mov
add
xchg
cmp
mov
xchg
add
data16
in
gs
xor
imul
add
je
or
popa
push
add
cmp
pop
icebp
stos
sbb
add
xchg
add
mov
cmpsl
in
pusha
add
add
add
mov
mov
mov
add
mov
add
sub
push
sub
add
inc
push
popf
xor
jb
setle
add
jp
add
add
in
mov
nop
add
jl
lock
stc
ja
add
and
sarl
mov
push
arpl
push
iret
xchg
add
mov
add
lret
add
mov
xchg
add
add
add
cmp
cs
xlat
or
outsl
ss
add
ficompl
add
sti
addb
xor
xchg
repnz
push
add
sub
js
inc
addb
imul
pop
cmp
jmp
add
lret
or
inc
inc
add
add
jb
repnz
add
add
xchg
add
movsl
lret
sbb
add
testb
add
add
ja
add
pop
cmp
aad
add
mov
mov
and
aas
jb
addb
addr16
fwait
sub
add
movb
add
add
js
add
jae
dec
enter
jmp
popa
lods
std
cmp
scas
lret
cmpsb
add
add
mov
lods
aaa
in
xor
mov
add
out
xor
out
hlt
add
call
add
jns
fmul
and
fsts
mov
xlat
mov
add
push
movb
repz
rolb
fisubs
mov
pop
faddp
add
pop
pop
add
or
fs
add
cmp
add
pop
adc
mov
mov
out
clc
add
mov
push
add
xchg
aaa
or
xor
lret
arpl
jo
cmp
mov
clc
mov
xchg
inc
mov
push
add
add
add
inc
add
mov
add
add
cmp
add
adc
pop
mov
adc
push
pusha
add
add
mov
push
add
mov
add
dec
call
dec
aad
add
add
pop
xorl
add
and
mov
ret
ficompl
mov
inc
add
out
stc
add
mov
pop
lret
insl
shll
mov
add
test
add
inc
lahf
add
and
cmpsb
add
leave
jns
popf
adc
sub
sub
add
iret
loopne
aam
std
add
mov
sbb
add
add
fmull
sub
add
or
cmpxchg8b
enter
shll
add
sar
or
testb
lret
rcll
pop
jl
add
je
lret
adc
mov
in
adc
or
push
xchg
add
add
add
lock
mov
jl
xlat
push
xor
leave
xor
int
add
mov
xlat
mov
lods
lock
push
or
icebp
or
push
mov
rsm
add
mov
ret
fistps
test
push
leave
pop
loopne
nop
add
out
stc
test
add
call
and
mov
das
xchg
cmc
sbb
cmp
das
clc
orl
sub
das
add
mov
and
add
sbb
add
add
push
add
aad
inc
sub
xor
xlat
fmul
ret
and
mov
add
repnz
add
rolb
aad
daa
jo
addr16
add
jge
jo
repnz
lea
add
repnz
ror
pop
add
mov
mov
sub
lea
test
fdivs
add
jp
or
cmpsl
clc
ds
and
mov
sub
dec
inc
jl
xor
outsl
xchg
add
add
add
add
sub
add
add
push
add
cmp
add
mov
xchg
js
sub
sti
pushf
clc
filds
out
arpl
mov
loop
xchg
add
mov
test
add
add
movb
inc
add
add
add
xchg
and
jnp
xlat
daa
cmpsl
sbb
cmp
cmp
mov
add
lea
adc
movl
movb
cmpsb
add
mov
fcmovnb
add
je
data16
mov
pop
jle
insb
ficoml
add
jmp
insb
jno
add
add
add
add
mov
add
add
add
ljmp
inc
add
mov
add
cli
cmc
ds
xorl
and
mov
rolb
int
xchg
add
add
cmp
pop
loope
mov
mov
js
lds
incl
sub
add
gs
bound
mov
or
xchg
sbb
inc
add
jo
int3
xor
add
mov
pop
adc
insl
iret
xor
mov
leave
add
rolb
lock
sub
rolb
cmp
or
add
int3
sbb
dec
shll
add
add
add
add
add
ret
cli
rolb
leave
xor
call
add
mov
popa
cmp
insb
mov
add
add
cmpsl
out
push
add
add
add
mov
add
add
xchg
add
add
fnstcw
insl
add
mov
add
add
mov
cmp
push
pop
sub
aas
inc
add
imul
add
mov
je
in
outsb
adc
jp
dec
adc
rolb
jle
add
add
add
rolb
mov
add
imul
pop
cld
hlt
add
add
cmp
mov
dec
mov
insb
sbb
clc
rcrl
popf
rolb
les
adc
std
adc
das
jb
sub
lahf
lods
stos
loopne
in
into
test
nop
add
add
cmc
addb
mov
mov
add
sub
add
cmp
pushf
or
add
addb
sti
push
add
sub
pop
int
add
add
xchg
add
add
das
dec
addb
xchg
push
lret
xchg
add
sbb
add
lcall
add
cmp
xchg
sbb
pop
add
mov
add
out
outsl
sti
mov
jecxz
add
ret
adc
arpl
add
ja
add
add
test
mov
fnstenv
adc
mov
add
add
sbb
pusha
add
popa
int
outsl
stc
inc
add
into
xchg
add
add
into
clc
and
mov
jge
jno
inc
cmc
adc
push
add
pop
cld
sti
ficompl
or
cwtl
shr
loopne
and
addb
add
push
outsb
mull
add
inc
add
push
add
add
or
add
int
jge
add
or
mov
add
add
jae
dec
add
mov
push
add
jns
add
sbb
pop
push
bound
mov
mov
add
mov
add
mov
add
mov
js
mov
lret
cmp
testl
lock
add
imul
add
aad
add
lcall
sub
data16
loope
aam
lds
cmp
add
addb
pop
sub
cmpsb
add
dec
bound
mov
adc
xchg
or
add
cmp
jl
popa
movsl
stos
sub
ret
movsl
mov
lock
mov
add
jno
into
in
into
mov
test
aaa
iret
cmp
push
jae
mov
cs
adc
lcall
add
mov
roll
adcl
test
xlat
lret
add
imul
mov
cld
lahf
data16
cs
add
add
mov
mov
inc
int
inc
out
ficomps
add
lret
pop
add
mov
jns
add
lds
add
mov
ret
mov
push
add
add
push
in
xor
inc
bswap
sbb
and
mov
dec
pop
adc
dec
xchg
out
jno
ja
push
out
jb
int3
adc
mov
testb
jbe
and
mov
jle
mov
xor
lods
pop
jno
mov
jmp
add
add
rolb
je
xor
and
mov
bound
mov
or
add
pop
jmp
jg
xchg
add
adc
xlat
mov
stos
repnz
cmp
add
shrl
dec
sub
xor
add
lahf
mov
jnp
addb
xor
pop
outsl
and
mov
movb
add
in
cmp
in
sbb
outsl
xor
jp
lds
pop
add
add
loope
data16
dec
lock
test
sbb
add
push
xchg
pop
mov
rol
jno
enter
add
int3
add
bound
mov
adc
add
add
add
loope
add
pop
sub
pop
cmpsl
push
cmp
pop
lods
cmp
sbb
add
test
mov
lret
jnp
add
xor
aad
add
push
call
xchg
add
out
and
mov
sti
popf
aad
das
loop
pop
jno
bound
mov
pop
xor
mov
faddp
sbb
add
mov
mov
adc
mov
inc
xor
mov
sub
pop
mov
dec
xor
mov
out
lret
inc
cmp
jle
add
cmc
push
add
cmp
iret
xchg
jp
jns
movb
add
mov
das
leave
aam
or
sbb
pop
jnp
mov
mov
cmp
push
and
popf
fiaddl
adc
cmpsb
add
jnp
add
add
add
and
mov
sbb
add
jbe
cmp
dec
cltd
cmp
adc
jg
adc
xor
into
fnsave
cld
xchg
mov
add
add
mov
insl
nop
add
push
data16
add
cmp
xor
les
xchg
add
adc
inc
add
add
testb
add
xchg
add
fisubl
add
add
add
std
sbb
outsb
repnz
add
pop
pop
movsl
cld
mov
and
add
addr16
add
add
xlat
jle
mov
fbld
pop
cmp
in
add
iret
loop
jae
mov
pop
push
xchg
sub
add
fdiv
inc
add
mov
fimull
fisubl
add
je
out
sub
add
cmp
in
loopne
pushf
leave
mov
mov
add
add
and
add
dec
adc
add
dec
add
mov
pop
adc
mov
add
mov
std
push
sbb
add
or
add
add
fisubs
mov
mov
jmp
in
inc
fisubl
add
cmp
add
push
insb
pop
pushf
jnp
je
dec
lret
lcall
cmpsl
add
loopne
mov
cli
push
add
addb
jmp
mov
int
aaa
aaa
cmpl
add
mov
xchg
or
jge
add
inc
add
jbe
rolb
or
pusha
add
call
or
test
sahf
aas
mov
fst
and
mov
shl
inc
add
add
mov
fsts
add
mov
pop
out
add
add
add
add
mov
inc
jg
dec
test
fldln2
faddl
add
add
fwait
cmp
lcall
cli
testb
add
dec
and
xchg
xchg
add
std
sbb
pop
mov
add
xor
imul
jne
lock
rol
jne
jb
add
mov
clc
mov
add
imul
addb
lods
and
jle
mov
out
xchg
add
or
add
aaa
pop
sub
push
int
movsb
add
push
adc
jno
scas
xchg
add
sbb
add
and
or
test
add
stos
aaa
rolb
mov
jmp
add
add
add
add
add
add
add
movb
cmpsb
add
mov
pop
pop
xchg
add
add
scas
ret
add
popf
xchg
aam
ds
sub
vmwrite
mov
and
fildll
fwait
dec
lret
pop
mov
outsb
mov
add
add
dec
jbe
xchg
mov
pop
in
bound
mov
les
add
mov
mov
inc
dec
adc
lds
inc
mov
sub
mov
je
push
add
out
out
fidivs
xchg
sti
jecxz
in
pop
jns
inc
or
mov
stos
imul
add
add
cli
jle
sbb
rolb
add
and
mov
mov
add
cmp
xchg
add
cld
mov
lods
inc
add
mov
out
sub
pop
add
mov
popa
mov
sbb
add
add
fimull
mov
icebp
inc
stos
add
and
in
ljmp
add
inc
add
daa
xor
push
outsl
or
daa
mov
outsb
fistps
test
jns
adc
aam
xchg
add
mov
add
loopne
enter
add
add
cmpl
adc
cmpsl
or
aad
ret
push
insb
jb
xor
in
jbe
jb
jnp
dec
or
add
mov
xchg
add
sbb
enter
les
adc
clc
mov
add
mov
fistpll
and
mov
add
ret
add
add
add
mov
addr16
add
mov
pop
pop
add
add
add
push
add
push
fadds
in
pop
cmp
inc
add
aaa
fisubrl
mov
aam
cmp
addr16
cltd
rolb
gs
inc
add
add
fdivl
add
mov
and
cld
push
add
add
mov
out
inc
add
out
stc
cmpsb
add
add
cld
cmp
push
add
sub
xor
inc
add
dec
xchg
jmp
pop
or
add
add
negl
loopne
and
jge
add
lcall
pop
adc
das
addb
inc
add
aaa
icebp
mov
test
add
xor
or
add
add
adc
mov
sub
inc
add
dec
mov
add
sbb
xchg
cld
cmp
xchg
cmpsl
dec
int
rolb
inc
aad
or
pusha
add
mov
add
popa
fwait
mov
or
leave
cmp
add
inc
add
add
mov
mov
mov
add
add
add
ret
aam
mov
dec
mov
sahf
inc
icebp
ja
leave
cli
push
cmpsl
jne
ret
or
pusha
add
jg
popa
jmp
mov
cmc
add
pop
push
pop
dec
add
jne
add
movb
fstpt
insl
mov
xchg
mov
dec
daa
add
mov
cmp
add
mov
mov
sub
push
add
mov
daa
imul
pop
mov
out
mov
movsl
fs
adc
lret
sbb
add
jl
add
mov
data16
lret
icebp
pop
mov
test
mov
add
xchg
add
add
repz
in
stc
insl
imul
addps
jnp
add
out
imul
add
add
mov
add
shrl
stc
call
add
add
add
fsubrl
cmpsl
pushf
test
xor
xor
push
mov
js
popf
pop
xchg
add
add
lcall
jg
clc
cmc
in
push
add
cmp
push
xchg
add
add
ljmp
push
data16
stos
cmp
dec
loopne
jp
cmp
xor
std
push
add
add
mov
aaa
or
add
or
stos
mov
add
add
add
scas
push
jg
mov
add
mov
test
or
and
add
add
add
push
lods
cwtl
movb
push
loop
aad
push
icebp
lcall
jnp
add
enter
in
jne
pop
push
add
pop
es
jecxz
pusha
add
int3
mov
sti
aas
xor
mov
inc
add
cmp
add
push
add
add
add
cli
dec
cmp
jbe
shll
mov
iret
loop
fmul
jb
adcl
pop
into
in
loopne
loopne
rcll
add
add
movb
hlt
add
outsl
and
add
scas
into
das
testb
pop
dec
xchg
loopne
cmpsb
add
pop
pop
sub
mov
loope
push
add
sbb
andl
bound
mov
sub
add
and
add
push
add
lret
mov
inc
push
insl
inc
lret
pop
stc
loop
or
add
add
mov
ret
scas
mov
inc
add
jno
cmc
add
xchg
add
loopne
mov
fbstp
je
sahf
movb
inc
aad
inc
pop
inc
clc
sbb
loope
jge
add
xor
add
aad
add
loop
xchg
sub
push
sub
xchg
add
pop
pop
cmc
lret
add
pop
lahf
add
add
add
add
dec
mov
push
in
clc
test
xchg
pop
sbb
add
mov
mov
add
xchg
cwtl
adc
add
pop
imul
lds
add
fnstcw
mov
sbb
add
mov
jne
in
sbb
add
loop
hlt
add
pop
addb
add
xchg
add
mov
inc
add
cmp
call
or
rcll
sbb
in
add
inc
sbb
push
data16
ljmp
add
pop
cmpsb
add
dec
add
mov
je
pusha
add
inc
adc
stos
loope
add
fcomps
aam
pusha
add
pop
mov
add
push
mov
push
dec
mov
add
add
add
add
out
cmp
addb
in
cmp
sbb
cmp
mov
xchg
pop
dec
je
jecxz
jg
push
lock
add
sbb
xchg
fldt
sub
add
add
lods
jnp
scas
cli
mov
clc
and
movb
add
jp
add
out
out
popf
call
cmpsl
scas
mov
and
mov
add
add
xchg
bound
mov
rolb
testb
shrl
cmp
add
add
add
in
mov
hlt
add
mov
movb
dec
xor
sarl
add
mov
jmp
dec
pop
add
popf
mov
dec
xchg
push
add
jbe
push
add
imul
loopne
popf
sbb
add
jl
add
add
jge
add
add
scas
cmp
xor
in
pop
out
negl
cwtl
push
add
add
stos
test
out
lods
add
pop
mov
add
add
fsts
push
add
add
xor
out
mov
add
jns
mov
mov
push
mov
or
scas
aaa
mov
lcall
cmp
in
dec
test
sub
movsb
add
lret
cmp
add
sbb
push
add
popf
lret
sub
dec
xchg
add
je
cltd
lods
sbb
sahf
adc
pop
or
add
add
sarl
jbe
pop
std
jmp
add
dec
fildl
ret
mov
add
mov
xor
mov
data16
xorl
add
ret
adc
movb
push
addr16
fsubs
jno
push
jmp
dec
in
xchg
jno
add
add
scas
out
add
or
dec
int
les
fcompl
sbb
add
pop
push
add
push
add
push
addr16
out
mov
add
pop
xchg
jp
add
pop
jb
cmp
cs
rolb
add
mov
and
mov
outsb
and
mov
add
sbb
daa
cmc
sub
les
adc
cmpsb
add
push
add
add
js
adc
push
add
pop
mov
add
loopne
adc
or
je
and
mov
add
add
add
pop
pand
add
pop
adc
xor
xor
push
add
loope
push
add
add
movsl
or
xchg
ret
jg
notl
add
stc
repnz
add
nop
add
mov
vpmaxsw
das
push
mov
int3
and
mov
add
addb
rolb
mov
push
add
pop
ja
push
dec
and
loopne
aas
dec
mov
push
movsl
inc
or
mov
add
dec
sti
push
add
and
mov
add
push
jne
sbb
add
jbe
or
addl
add
pusha
add
dec
test
adc
inc
add
mov
push
add
add
pop
mov
xchg
add
add
push
pusha
add
add
jb
fcoms
scas
subl
add
and
mov
jae
xchg
add
icebp
gs
add
cwtl
lods
inc
mov
xchg
and
mov
outsb
dec
adc
cmp
rcr
inc
int
gs
out
and
push
shll
call
push
add
xchg
mov
add
xor
push
add
mov
adc
movsb
add
clc
fmulp
mov
mov
add
mov
loop
into
insb
in
les
push
add
jne
add
jg
add
ds
int3
sub
add
mov
movsl
insb
cmpsb
add
add
and
in
dec
arpl
test
pop
push
add
jo
jnp,pt
stos
imul
int3
fwait
mov
mov
add
mov
add
popf
pop
sbb
add
das
movsl
and
add
push
mov
in
jb
lods
fbstp
dec
push
repnz
test
add
mov
add
cmp
sbb
add
sub
add
int3
stos
leave
testb
fwait
cmc
int
mov
inc
add
cmp
add
mov
cmp
mov
add
mov
add
enter
add
pop
mov
add
add
fstps
ret
cmpsl
sbb
jecxz
pop
gs
mov
pop
cmpsb
add
add
xchg
fistpll
sbbl
lahf
pop
add
adc
aaa
or
add
xchg
jle
aad
jg
ret
mov
fcom
xor
movb
xchg
xor
jmp
push
add
pop
mov
gs
add
test
fwait
cs
sahf
stc
jno
stc
pop
imul
mov
xor
fs
add
testb
dec
insl
out
jno
add
inc
dec
sub
pop
pop
sub
popf
outsb
movsl
lret
jmp
add
push
cld
hlt
add
cmp
jge
add
mov
js
scas
addb
cmp
ret
add
push
in
dec
or
jnp
add
mov
loopne
jo
test
in
xor
pop
loope
xchg
add
out
cmp
xor
jbe
sub
ret
fcmove
les
stos
inc
add
repnz
pop
repz
adc
mov
mov
add
mov
fdiv
lea
je
insb
mov
xor
pop
pushf
fildll
ret
add
mov
add
iret
adc
jno
adc
add
inc
add
rolb
jmp
xchg
xchg
add
add
cwtl
shr
in
imul
arpl
bound
mov
add
pop
aaa
insl
loopne
out
cld
test
das
dec
pop
inc
dec
mov
and
mov
add
add
jae
je
pop
mov
outsb
cmp
add
pop
insl
cld
and
mov
add
add
lock
jge
cmpl
dec
adc
bound
mov
add
sbb
test
gs
xchg
add
add
add
push
mov
jns
mov
add
jno
add
inc
add
adc
and
test
adc
add
add
push
add
add
add
mov
dec
ror
mov
add
jbe
mov
fldl
fmuls
add
mov
and
lock
ret
lods
leave
inc
add
add
add
adc
out
mov
sub
add
push
add
jns
ret
pop
rolb
cld
insl
adc
lret
mov
addl
and
movsb
add
xchg
add
rolb
sub
daa
mov
mov
add
pop
or
in
adc
addb
xchg
je
sbbl
loopne
push
add
movb
add
push
inc
add
jmp
gs
adc
aas
jmp
add
xor
loopne
mov
cs
add
add
sbb
lods
inc
xchg
mov
xchg
push
add
mov
int3
outsl
bound
mov
gs
movsb
add
in
add
addb
add
loop
scas
push
add
loope
rolb
fsubrp
testl
dec
add
mov
add
jbe
jmp
iret
jge
leave
cld
push
add
fstps
add
mov
mov
ja
jae
add
cmp
or
out
repz
pop
imul
xchg
sub
test
inc
cmp
push
add
jg
add
mov
xor
inc
add
dec
stc
and
mov
es
add
lcall
movb
rolb
fcoml
pop
rcrl
mov
dec
xor
add
insb
fstpl
add
add
test
mov
fmulp
int3
fldenv
sbb
shl
add
sbb
jae
add
add
xchg
jne
jecxz
adc
pop
movsl
xchg
popf
push
jmp
call
mov
add
mov
add
les
lods
into
filds
dec
cmp
push
scas
pop
push
mov
cmpsl
jecxz
in
stc
mov
xor
add
dec
push
mov
pop
mov
cmc
rcrl
cwtl
dec
test
ret
add
lret
add
xor
mov
jp
xor
scas
call
push
add
dec
sbb
ret
add
loopne
mov
add
inc
iret
sbb
add
add
mov
aaa
mov
xor
push
adc
mov
adc
pop
xor
sahf
cmpsl
out
inc
add
mov
push
add
pop
sub
adc
nop
add
inc
dec
daa
cwtl
add
mov
and
lret
add
pop
test
dec
in
addb
add
add
test
add
pop
insb
outsl
stc
sahf
inc
add
pop
xchg
aam
sub
xchg
test
jno
movsl
lahf
mov
popl
add
inc
add
mov
xor
pop
mov
sahf
in
popa
xchg
mov
add
pop
xor
add
jp
jmp
add
add
inc
mov
add
lds
fs
dec
xor
push
xchg
add
cltd
fidivrs
js
add
add
decb
pop
lahf
ds
push
xor
add
add
add
add
clc
js
out
jae
add
mov
cmovne
add
lcall
mov
mov
add
sub
sbb
fiadds
fwait
in
into
xor
xor
jno
cmp
add
imul
add
aas
test
sarl
push
pushf
rolb
cs
aam
hlt
add
outsb
push
add
add
mov
fildll
movsl
sbb
add
mov
mov
mov
or
add
out
inc
add
movsl
aad
imul
mov
xor
mov
add
mov
add
rolb
inc
add
add
jg
cs
fistps
push
mov
mov
pop
xchg
add
add
add
fmuls
jae
push
add
adc
inc
dec
xor
push
add
add
rolb
sbb
lret
aaa
into
xor
push
push
mov
add
add
push
adc
xchg
add
sahf
lock
nop
add
in
addb
icebp
ficoml
add
cmp
add
sbb
cmpsl
outsb
add
rolb
sub
or
hlt
add
and
sub
push
add
lret
add
add
add
insl
fucomip
das
aam
inc
push
pop
fsubs
add
jbe
xor
inc
addb
int3
loopne
hlt
add
adc
mov
dec
push
fisttpl
insb
jecxz
out
jl
add
add
cmpsl
movl
testb
popa
mov
addb
icebp
jbe
cmp
xor
sbb
into
mov
movsl
adc
add
or
adc
movsb
add
addr16
add
sub
fsts
in
icebp
dec
jae
add
adc
fisubl
test
add
push
add
add
pop
mov
mov
adc
mov
pop
cld
sbb
sahf
xlat
xor
cmp
xchg
jb
aaa
shll
aad
mov
or
add
dec
and
cmp
dec
enter
xchg
add
add
push
add
sbb
mov
jle
mov
popf
jb
or
add
add
test
shl
add
addr16
sub
and
add
jo
popf
lea
add
hlt
add
add
popa
xor
es
fisttpl
adc
jns
push
add
add
adcl
pop
xlat
jmp
mov
sub
xchg
mov
add
add
arpl
xchg
stos
outsl
mov
cld
in
pushf
cmp
mov
cwtl
shll
enter
sbb
add
add
call
ja
adc
imul
add
add
cmp
cmpsb
add
sbb
loope
ficomps
call
xchg
adc
sub
mov
push
mov
push
xorl
xor
lods
add
call
push
jo
and
mov
add
dec
jg
add
cmp
mov
cmp
addr16
add
add
add
mov
incb
jl
push
aas
addr16
and
adc
enter
add
add
mov
mov
jg
and
and
nop
add
gs
add
add
add
add
mov
add
xchg
es
xchg
adc
push
xlat
jae
add
pusha
add
add
outsl
movsl
leave
iret
add
sbb
add
imul
add
jns
rcrl
dec
addb
les
jbe
je
decb
push
imul
mov
jns
rolb
mov
add
sbb
insb
mov
mov
cmpsl
xchg
add
mov
gs
sub
sbb
add
inc
je
mov
mov
add
rolb
testb
in
add
test
icebp
arpl
add
add
mov
inc
add
add
out
sub
jle
mov
add
aas
lcall
push
mov
jmp
add
and
xchg
adc
imul
add
pop
jo
mov
lahf
xlat
inc
add
dec
push
add
test
add
sub
xlat
inc
mov
mov
add
inc
add
mov
xlat
mov
xor
and
loope
add
lods
mov
add
addb
sbb
mov
add
xor
or
inc
add
jmp
and
mov
xchg
pop
es
add
dec
xor
in
mov
jecxz
testb
lret
call
dec
dec
ds
mov
add
add
adc
mov
movsl
test
sbb
mov
lahf
clc
into
add
adc
inc
mov
fcoms
dec
push
inc
add
add
imul
scas
xor
add
add
jns
jbe
mov
xchg
add
xchg
mov
add
mov
mov
mov
loop
in
pop
push
mov
or
push
add
das
repnz
lds
add
into
stos
shr
or
adc
push
add
push
add
add
arpl
and
mov
and
loopne
aaa
or
mov
out
and
mov
out
xor
add
out
popf
rorl
or
add
mov
add
test
push
add
add
adc
jmp
aaa
mov
lahf
jmp
dec
mov
add
add
add
xchg
add
movsb
add
add
mov
stos
popf
dec
lcall
test
inc
add
loope
cmc
cwtl
pop
ss
dec
or
sub
and
jno
push
add
test
pop
mov
movsb
add
adc
push
add
pop
sbb
inc
inc
pusha
add
mov
push
add
bound
mov
testl
xchg
sub
add
xchg
add
mov
push
add
jbe
mov
aaa
rolb
and
in
jb
scas
inc
cmp
push
call
mov
rorl
add
inc
test
add
aam
mov
stos
hlt
add
add
imul
subl
mov
and
adc
in
addb
pop
push
add
add
pop
add
mov
fildll
pop
and
and
add
dec
imul
jb
fwait
stos
jnp
add
inc
add
pusha
add
adc
pop
int
leave
push
inc
loope
dec
xor
mov
add
add
add
xor
push
add
lcall
pop
loop
pop
out
stos
push
ret
fstps
and
repnz
pop
aad
adc
push
add
add
in
pop
mov
mov
pop
dec
addb
mov
out
push
add
dec
add
movb
dec
dec
std
sbb
fwait
lcall
sub
cmp
ficoml
leave
into
add
mov
or
ret
add
aam
xchg
iret
xchg
add
ja
pop
mov
add
mov
sbb
push
and
lds
adc
add
out
add
pop
pushf
std
sbb
repz
xlat
aas
fldl
lods
add
mov
fisubs
mov
or
push
mov
xchg
add
push
addb
mov
adc
push
adc
movb
add
loope
pop
stc
dec
fwait
pop
and
mov
stos
cli
ljmp
scas
repz
inc
inc
js
stos
ljmp
sar
xchg
mov
sbb
push
add
movsb
add
jns
adc
ljmp
add
in
or
rolb
fdivs
cs
adc
cmpl
popf
das
dec
mov
pop
or
add
add
fbstp
push
add
pop
push
jl
test
cmp
add
push
add
add
ret
adc
push
add
mov
add
add
test
test
inc
add
add
dec
stc
dec
bound
mov
push
push
jmp
les
test
mov
mov
test
jae
std
rolb
cmc
movsl
xchg
loope
cli
movsb
add
adc
mov
push
add
in
inc
add
cmp
add
sahf
addb
data16
mull
jle
cmpsl
mov
sub
popa
outsl
mov
fadds
inc
rcll
jbe
sbb
cmp
repnz
loope
xchg
aas
cwtl
cmp
add
add
add
xchg
adc
mov
lret
rcll
fs
add
pusha
add
cmp
pop
std
cmp
add
add
cmp
add
cmp
movsb
add
lahf
mov
stos
cmp
adc
iret
pusha
add
mov
and
mov
mov
add
sub
shrl
xchg
add
adc
add
mov
in
mov
add
add
test
dec
mov
add
and
repnz
sub
or
repz
fwait
data16
notl
inc
mov
pop
add
inc
add
mov
arpl
add
xor
push
add
imul
nop
add
rolb
cmp
add
sub
pop
mov
mov
add
add
testl
repnz
add
add
add
clc
js
clc
dec
or
add
pop
enter
fwait
jmp
mov
incb
add
imul
add
insb
insl
xlat
mov
ror
add
push
mov
add
out
add
add
mov
dec
inc
xchg
or
add
or
add
call
cmp
stos
mov
adc
add
sub
sar
and
mov
add
add
mov
popa
push
add
icebp
les
les
loop
sub
insl
clc
inc
xor
add
add
push
add
je
rolb
adc
ret
mov
data16
add
stos
ficomps
add
add
test
rolb
hlt
add
xchg
mov
add
add
push
jno
movsl
dec
int3
inc
mov
add
scas
stos
rolb
mov
popl
mov
leave
pushl
mov
pop
xlat
push
sbb
nop
add
mov
loop
mov
ficompl
push
push
add
xor
add
add
add
cmp
add
add
mov
add
add
add
pop
pop
add
out
jle
mov
lods
popf
das
add
add
add
mov
nop
add
adc
pop
xchg
rolb
jbe
or
jge
add
push
add
add
dec
add
add
adc
imul
push
add
out
sbb
popf
cwtl
ja
aas
mov
or
sbb
repnz
add
test
call
add
mov
add
add
mov
jb
dec
stos
outsl
loope
aad
mov
mov
stos
mov
add
add
cmp
shll
aam
push
adc
mov
jl
movsb
add
bound
mov
add
add
sti
cmp
outsl
xchg
add
dec
lret
push
test
pop
aad
add
adc
pop
sahf
sub
push
add
ds
add
add
inc
add
lret
lock
or
add
insb
add
mov
nop
add
or
daa
js
jmp
pop
mov
and
inc
inc
add
xor
fwait
lea
mov
add
add
fisttpl
add
add
add
add
add
or
outsl
push
gs
xor
mov
leave
push
adc
test
ds
sub
insl
dec
add
mov
mov
lret
xchg
mov
xchg
pop
loop
xlat
mov
mov
hlt
add
and
inc
add
add
mov
add
int3
addr16
push
add
popa
cs
dec
mov
cltd
lret
push
adc
push
add
add
mov
xor
add
gs
xor
aaa
bound
mov
fucomi
or
orl
push
packsswb
loop
popa
cmp
mov
dec
rcll
cld
test
insb
push
add
jle
add
in
dec
push
add
fadds
addb
add
mov
out
pop
daa
dec
push
mov
jp
dec
jbe
test
add
mov
mov
add
pop
lret
out
push
push
add
add
testb
or
dec
mov
add
add
arpl
push
test
xchg
dec
inc
or
sbb
mov
test
push
add
vcmpps
and
insl
pop
ret
add
add
mov
add
cmp
adc
std
push
pop
sub
jns
movb
xor
mov
dec
or
scas
pop
data16
popf
and
test
add
add
rolb
xchg
add
and
pop
rorl
popf
gs
sub
sbb
push
adc
cmp
add
ds
rolb
adc
int
les
movb
nop
add
sub
add
rolb
push
add
cwtl
mov
in
xchg
pop
inc
add
aas
call
add
add
mov
in
mov
add
mov
iret
add
sbb
add
push
add
fdivrs
cvtps2pi
xchg
dec
xchg
dec
aad
subl
xorl
ret
mov
insl
mov
dec
and
nop
add
sbb
int
ljmp
fildl
add
mov
in
jne
out
xchg
xchg
inc
ret
stos
lock
ret
add
and
mov
xchg
pop
outsb
hlt
add
rolb
rolb
add
pop
add
mov
add
add
jo
xorl
push
ret
add
mov
add
jno
add
add
jb
push
imul
jbe
loop
cmp
mov
addb
pop
cwtl
and
add
add
add
push
add
add
add
addb
pop
add
add
mov
jo
cmp
xor
fcom
mov
inc
add
mov
es
arpl
add
and
icebp
insb
dec
mov
add
icebp
lahf
add
add
fistl
xor
pop
mov
out
lahf
loope
scas
pusha
add
in
pop
andl
and
icebp
push
add
cmpsl
jge
jg
dec
iret
push
jns
mov
add
mov
aad
add
or
add
in
jb
nop
add
add
lods
rolb
add
jg
mov
xor
push
add
add
aas
lods
cld
insb
outsl
mov
add
add
add
rolb
add
mov
loopne
sub
add
int
fdivrs
push
lods
mov
out
loop
int3
cwtl
shll
add
mov
jmp
add
imull
lea
add
lods
popa
mov
into
sbb
adc
test
add
add
sub
add
sbb
add
inc
sti
repz
mov
jge
add
add
and
mov
add
sbb
add
add
lock
cmp
xor
rolb
add
incb
add
push
add
imul
sti
jg
lret
ficoms
xor
cmpsl
ror
xchg
add
xlat
push
or
aad
add
pop
ds
shl
cmpsl
mov
jle
add
add
jge
mov
ret
rolb
cmp
add
dec
inc
jne
movb
add
mov
fiaddl
add
xor
cmp
out
jb
divl
adc
fcmove
adc
dec
xchg
enter
cld
adc
add
push
jae
add
js
adc
ljmp
or
inc
fldpi
mov
add
ret
adc
sbb
push
popf
addr16
imul
aas
ret
int3
scas
repz
mov
mov
outsl
sub
push
add
add
add
add
dec
out
cmp
dec
mov
psrlw
add
scas
xchg
jnp
add
mov
mov
mov
fcomps
push
cltd
mov
cld
xor
add
outsb
xor
xor
mov
dec
fldenv
into
inc
add
xor
jae
cmp
inc
push
add
push
inc
add
add
push
das
mov
mov
and
aaa
adc
inc
mov
aam
psllw
add
iret
mov
mov
idiv
mov
sbb
jge
add
testl
xor
jp
mov
add
dec
push
jbe
mov
add
and
push
fiadds
mov
push
add
add
mov
sbb
mov
fsts
mov
bound
mov
cwtl
or
jo
mov
add
lret
pop
fwait
add
xchg
cmc
jmp
mov
add
add
stc
fstpl
stc
adc
pop
mov
cld
ret
add
out
cmp
clc
add
movl
dec
setge
inc
xchg
push
xchg
add
dec
add
mov
jecxz
rolb
lret
inc
mov
add
add
lods
xchg
add
pusha
add
add
pop
out
add
add
sbb
mov
xchg
add
loope
sbb
imul
scas
nop
add
cmp
lea
cld
xchg
add
imul
lret
scas
and
mov
ja
add
cmpsl
cli
push
add
jle
add
lock
in
rcl
add
and
mov
sbb
mov
loope
dec
mov
bound
mov
add
data16
add
lock
jmp
icebp
xchg
xchg
adc
into
sbb
cmp
add
inc
and
push
add
jge
pusha
add
testl
out
xlat
dec
test
xchg
and
mov
movb
sub
xor
add
add
add
push
add
insl
inc
add
add
add
add
inc
add
sub
iret
mov
add
cmp
cmp
add
test
add
push
add
ficompl
jbe
pop
outsl
dec
and
mov
ret
cmp
xlat
add
inc
rolb
xchg
mov
cli
add
mov
cmpsl
dec
test
add
add
dec
ja
pop
xor
movsb
add
rolb
push
add
mov
xchg
add
jmp
add
mov
push
add
add
mov
movsb
add
jl
ret
mov
push
add
add
out
add
push
add
outsl
fnstenv
xchg
add
push
add
out
add
repnz
testb
cli
and
mov
add
push
jnp
sbb
mov
push
cmp
lods
popf
dec
dec
pop
pop
icebp
pop
vmovntps
add
push
add
test
adc
add
inc
add
add
mov
mov
mov
lock
xor
leave
test
add
popl
add
xchg
pop
xchg
pusha
add
mov
cmpsl
jne
rolb
fldcw
in
pop
ja
add
jo
stc
sub
dec
pop
cmp
and
mov
add
mov
xor
aas
insb
add
mov
push
add
pop
je
jne
add
add
push
sti
test
cmp
inc
xchg
add
or
push
or
test
jg
daa
push
add
xor
sti
out
into
push
mov
lea
popa
mov
testb
add
add
inc
cmp
xlat
rolb
inc
add
jns
xlat
cmc
inc
push
add
push
add
pop
push
add
int
push
add
lds
add
add
out
xchg
add
sbb
loope
sti
jns
add
add
cmpsb
add
mov
add
mov
inc
add
cmp
add
outsb
sbbl
out
dec
push
add
dec
or
dec
inc
into
mov
in
mov
std
push
das
xchg
add
cmpl
fnstenv
add
mov
negl
add
xchg
add
inc
add
mov
add
add
add
stc
cli
adc
dec
aas
jl
mov
add
mov
testb
in
out
push
add
push
nopl
add
jle
add
out
dec
sbb
ret
xchg
dec
sahf
outsb
mov
add
push
fisttpl
add
repnz
and
ljmp
mov
cwtl
out
pop
pop
das
and
cli
mov
add
sar
adc
adc
sub
add
add
xchg
mov
cmpsl
sub
add
das
jg
sbb
jle
mov
popa
mov
mov
and
mov
lret
xchg
lds
sub
push
add
adc
push
subl
and
add
and
stos
or
add
push
add
add
rolb
int3
sbb
pop
int3
jo
movsl
subl
jmp
and
inc
add
add
hlt
add
mov
jmp
add
cltd
aad
rolb
cli
fistpll
in
sub
add
add
add
add
inc
pusha
add
mov
add
mov
pop
mov
add
ret
add
push
ds
add
add
add
nop
add
jns
add
add
push
xor
out
and
mov
dec
insb
repnz
movsl
xor
cli
mov
imul
jmp
add
mov
cmp
sahf
fadd
cmp
add
xlat
cmpsl
leave
hlt
add
push
add
in
add
aaa
push
push
sub
mov
add
push
add
mov
pop
dec
std
dec
xlat
dec
xor
cmp
pop
enter
cmp
cmp
cmp
push
add
sub
call
push
jno
int3
cld
scas
fldt
mov
mov
cltd
inc
add
movsb
add
mov
ret
dec
cs
lods
rolb
cltd
jecxz
add
add
out
loopne
bound
mov
add
std
push
add
add
repz
add
add
mov
test
std
pop
sub
repnz
add
cmp
dec
insb
xor
fldenv
shll
mov
jne
cwtl
imul
adc
push
fcoml
or
mov
push
add
les
adc
stos
in
cld
mov
cmp
mov
xchg
aad
inc
add
add
fnstcw
lret
pop
mov
bound
mov
xor
sub
out
adc
xchg
out
lret
gs
ficomps
icebp
sbb
insl
repz
xchg
cs
dec
stc
std
dec
pop
les
out
dec
mov
cmp
fsubl
add
jg
aad
xor
out
push
add
push
add
call
and
mov
add
cmp
mov
sub
add
js
std
pop
inc
pop
pop
ja
add
add
or
out
out
add
andl
add
inc
cmp
add
lcall
add
add
mov
mov
pop
mov
add
test
xchg
imul
sub
jmp
sbb
clc
fbld
add
push
add
pusha
add
hlt
add
and
add
jno
add
add
ficoms
add
add
std
push
adc
push
add
add
add
fmulp
setno
fcompl
add
inc
add
add
add
push
add
insb
jae
add
add
add
fwait
or
shrl
mov
and
mov
mov
ds
add
clc
fwait
dec
test
add
mov
sbb
les
movsl
mull
add
add
mov
int
icebp
orl
dec
jle
push
add
repz
pop
dec
mov
test
add
sbb
inc
add
xor
sbb
add
add
cmpsb
add
mov
jo
mov
loop
roll
push
add
pop
xchg
inc
std
dec
fistl
test
data16
shrl
sbb
mov
mov
mov
shll
jae
inc
add
pop
loopne
shl
iret
add
mov
add
jae
out
rolb
cmp
in
sahf
inc
add
cmp
add
inc
add
xchg
mov
xlat
sub
cmc
mov
aad
pop
loop
loopne
leave
add
push
add
mov
jg
fsubrl
add
repz
push
add
add
js
add
add
add
inc
add
add
rolb
xchg
in
or
push
sbb
loopne
inc
add
mov
add
push
add
adc
add
mov
xchg
and
mov
ficoml
push
add
add
add
leave
xor
or
aaa
das
fwait
xor
movsl
addr16
movb
call
add
inc
add
add
mov
sbb
dec
add
imul
dec
mov
mov
push
add
xchg
mov
mov
test
add
cmp
lcall
ds
push
add
push
inc
add
inc
xor
cmp
mov
mov
fsubl
add
add
add
mov
adc
int3
mov
add
add
dec
sahf
adc
sub
aam
push
push
add
mov
enter
les
bound
mov
add
add
mov
xchg
xchg
punpcklwd
xchg
add
add
add
sbb
test
pop
insb
addb
clc
pop
inc
add
add
or
add
icebp
aas
mov
add
add
add
mov
sbb
out
sbb
sub
add
dec
pop
and
lcall
das
mov
xor
xor
dec
xchg
clc
lock
mov
lds
pop
cmp
xor
fcmovb
add
pop
push
add
add
jp
cmpsb
add
push
imul
loope
add
pop
repnz
inc
add
aam
ss
sub
add
add
add
xchg
add
mov
add
xchg
outsl
jbe
scas
or
add
mov
aad
add
add
in
rolb
push
add
add
ss
movb
cmpsl
dec
rcrl
rolb
push
add
add
movsb
add
add
jl
stos
pop
in
add
inc
add
dec
sbb
push
add
notl
ljmp
imul
mov
push
std
jl
add
add
insl
xor
adc
incb
aam
or
fnstenv
mov
adc
sbb
add
xchg
ja
jbe
js
add
popa
push
jp
push
cmpsb
add
in
mov
add
add
loope
push
add
testb
cltd
xorl
mov
dec
ds
fwait
imul
mov
push
add
add
xchg
je
sbb
mov
dec
push
cmp
xlat
and
add
pop
cwtl
push
add
sahf
pop
mov
add
les
ja
incl
mov
add
lds
aas
nop
add
add
add
add
add
add
jp
cwtl
ret
add
add
ds
out
test
icebp
inc
add
jb
test
pop
sarl
add
or
xadd
fcoms
jne
inc
sub
add
out
push
add
add
mov
lret
mov
pop
fisubrl
add
add
fcomip
add
test
or
out
cmp
push
add
scas
xor
add
stc
cwtl
dec
mov
jecxz
and
ds
mov
add
push
mov
pop
pop
daa
add
jno
shrl
push
add
mov
dec
xor
dec
adc
dec
mov
neg
mov
or
add
sti
pop
xlat
fdivrl
aad
addb
add
jns
dec
mov
inc
add
insl
jne
add
mov
pusha
add
dec
andl
xchg
cmp
xchg
add
jge
mov
push
add
mov
add
mov
mov
js
add
mov
out
jle
gs
add
repnz
sbb
add
fcompl
sub
addb
pop
lock
sbb
add
or
repnz
inc
stos
xchg
add
std
sub
sub
jne
mov
and
popf
into
and
xor
mov
mov
test
arpl
push
add
or
add
mov
bound
mov
in
out
mov
jns
out
pop
rolb
bts
imul
clc
clc
cmp
add
add
ret
outsb
das
xchg
pop
sub
jp
out
xor
pop
scas
sub
add
inc
aas
or
dec
jecxz
add
mov
inc
add
add
add
pop
rolb
repnz
aam
or
add
mov
push
add
xrelease
faddl
into
mov
add
add
sub
or
mov
mov
add
inc
test
mov
jmp
add
sub
jl
mov
add
mov
add
add
lahf
xorl
sub
mov
add
out
adc
pop
lcall
das
sub
lret
cmp
ja
add
jns
lahf
enter
add
xor
lock
jg
add
add
and
jp
add
dec
sbb
add
mov
push
add
stos
sub
pop
inc
in
cwtl
rolb
xor
mov
pop
pusha
add
xchg
mov
and
mov
add
mov
mov
add
pop
outsl
mov
add
cmpsb
add
fadds
add
add
lcall
addb
inc
mov
mov
push
ja
les
sbb
add
xor
xlat
and
adc
rorl
movsl
sbbl
add
js
add
clc
inc
add
pop
xor
inc
add
popf
out
mov
flds
add
jp
add
lahf
daa
test
call
out
xor
cmp
add
add
mov
xchg
push
into
cmp
jl
mov
jg
add
add
filds
push
add
add
push
add
adc
xchg
add
add
add
mov
test
adc
xor
xchg
mov
fmul
xchg
cs
stos
or
rcr
lret
xor
add
scas
cmpsl
xchg
add
pushf
sub
ffreep
sub
add
add
add
nop
add
mov
xchg
add
jo
add
add
mov
jne
add
mov
and
std
mov
add
pop
out
loopne
stc
adc
aas
testl
jae
ret
add
add
mov
stc
nop
add
stos
stos
mov
jno
sbb
mov
add
add
and
inc
add
loop
lods
pop
push
lret
push
add
sbb
add
pop
addb
rolb
addl
mov
inc
clc
incl
fmulp
sti
jns
xlat
insl
cwtl
movsb
add
add
add
add
jp
inc
xor
add
dec
cltd
push
add
add
icebp
jl
add
cmp
inc
je
rolb
loopne
or
pop
pop
ret
imul
or
mov
fisubl
mov
mov
addb
loope
imul
pop
add
add
in
add
xor
add
jmp
pusha
add
pop
inc
sub
mov
hlt
add
xchg
out
jmp
pop
mov
or
hlt
add
add
loopne
inc
add
mov
mov
out
notl
scas
rolb
sub
or
scas
dec
movsb
add
add
add
xchg
lds
push
je,pt
clc
loopne
jns
adc
rolb
xor
add
loope
add
add
push
daa
int
mov
divl
add
push
mov
lds
add
jl
add
inc
pop
mov
add
jle
add
add
add
mov
push
lds
adc
pusha
add
add
add
mov
jp
pop
dec
jno
mov
mov
dec
imul
les
push
xchg
add
add
pop
adc
rolb
mov
xchg
add
jg
push
add
inc
icebp
dec
jg
add
sbb
add
push
ljmp
fucomip
add
inc
add
lds
testb
dec
and
inc
test
add
add
add
sbb
add
add
mov
bound
mov
dec
adc
add
les
add
mov
pushf
ficoms
jmp
les
inc
add
xor
into
and
pop
cmc
xchg
jecxz
movsb
add
mov
cmp
sub
add
sbb
cmp
add
add
push
add
sub
addr16
xchg
add
or
in
leave
outsb
mov
add
push
and
cmp
cmc
pop
lock
mov
add
cld
push
add
add
clc
or
mov
dec
and
fcmovbe
in
and
pop
add
mov
sub
dec
mov
sahf
rcl
or
mov
movsl
add
movsl
add
push
add
add
ret
push
add
add
xlat
je
add
adc
ss
add
mov
xchg
fsubrs
popf
pop
insb
int3
or
outsl
jae
and
mov
add
add
add
xchg
add
push
add
add
stos
jmp
insb
stos
fidivl
add
mov
cld
ret
testb
add
add
clc
leave
rolb
mov
xchg
add
addb
jl
add
sub
rolb
icebp
lret
add
jnp
cmc
mov
into
ret
jnp
add
add
mov
jnp
and
jbe
push
add
repnz
cmp
add
rolb
cld
dec
cmpsb
add
inc
inc
add
inc
add
test
add
add
dec
ret
sub
add
add
in
lcall
sub
fsubrl
aam
mov
and
xor
sbb
jg
mov
push
pusha
add
in
outsl
add
add
add
add
mov
add
jo
daa
or
add
add
addb
rolb
add
add
inc
add
sbb
ror
fistps
shrl
sbb
data16
add
out
cmp
adc
lret
sbb
add
add
test
das
push
lcall
jle
add
add
sbb
add
add
lahf
dec
sbb
push
add
add
aaa
in
mov
mov
insl
xor
adc
add
sub
out
add
mov
add
data16
add
push
add
mov
pop
in
or
mov
add
add
mov
add
mov
and
push
pop
sahf
xor
fsubrl
add
add
add
ficoml
rolb
jne
loope
adc
hlt
add
add
add
mov
add
push
add
pop
jno
cmp
ds
add
pop
pop
aad
sub
add
leave
fwait
pop
jae
jmp
cmp
or
ret
fimuls
enter
add
add
add
add
rolb
jb
xchg
add
push
mov
sbb
cmp
xchg
add
add
test
cmpsb
add
add
scas
pop
testb
outsl
mov
mov
rolb
sub
fbld
mov
fldenv
xor
in
sbb
or
adc
add
adc
pop
pushf
mov
add
add
add
push
jae
jg
add
jb
push
add
push
rcll
add
add
add
push
sub
dec
sahf
movsb
add
add
lds
insb
aas
rolb
or
adc
adc
pushf
dec
push
add
inc
cmp
add
testb
addr16
fcomi
add
outsl
movsb
add
mov
xchg
ds
add
dec
lock
xchg
addb
add
rolb
repz
mov
add
mov
cmc
xchg
inc
add
les
pusha
add
daa
push
add
mov
add
add
push
add
iret
xlat
jg
inc
enter
add
inc
mov
addb
dec
xor
add
mov
add
leave
fdivs
cmp
add
cwtl
gs
mov
dec
addr16
ds
mov
push
add
dec
out
ljmp
add
add
sar
int3
push
test
mov
cltd
addb
pop
jp
add
or
sahf
daa
mov
aaa
push
lds
xor
addb
sbb
jp
jns
add
mov
dec
mov
add
mov
stos
iret
pushf
sub
jecxz
push
pop
iret
repz
add
dec
test
jae
add
jae
xor
test
or
jo
hlt
add
das
and
mov
mov
jecxz
jne
adc
xchg
icebp
orl
icebp
sub
jle
cs
add
bound
mov
jp
add
movsb
add
add
add
add
pop
daa
mov
ds
dec
divl
push
add
xchg
dec
xlat
ljmp
test
add
les
fdivr
mov
pop
arpl
clc
and
mov
pop
dec
imul
add
popf
lret
addr16
into
sub
and
shrl
push
cmp
and
mov
mov
add
mov
push
sahf
stos
ljmp
cwtl
jbe
jg
aaa
pop
les
pop
push
add
jp
dec
mov
sbb
add
add
sub
sbb
and
mov
push
sbb
clc
std
xor
jecxz
mov
xchg
add
add
add
push
jae
ja
cmp
fsin
fwait
or
sub
rolb
xor
in
push
add
add
add
pop
pop
negl
insl
push
repnz
mov
sti
sub
pop
pop
in
out
mov
sub
mov
add
push
add
xchg
addr16
add
mov
repz
cmpl
push
add
int
xchg
mov
mov
or
mov
popa
adc
aaa
lods
or
or
add
loop,pt
ja
stos
fcmove
and
mov
cmp
insl
pusha
add
mov
outsb
aad
adc
inc
lods
mov
xchg
xchg
push
cli
dec
mov
add
add
add
mov
test
add
add
adc
dec
lds
push
and
mov
iret
imul
mov
add
loopne
js
add
add
in
imul
inc
add
add
ret
mov
aad
out
push
cmpl
test
add
data16
mov
xchg
add
add
subl
cld
rolb
inc
xchg
push
add
inc
add
mov
add
xor
lcall
push
add
push
in
jns
add
dec
int
push
add
mov
mov
cmp
call
nop
add
add
sbb
leave
or
cmp
add
mov
insb
xlat
xchg
pop
cmp
je
test
cs
mov
iret
xor
ret
xchg
add
aad
enter
and
dec
es
sub
pop
xchg
stos
test
add
adc
je
pop
cmp
leave
fldcw
or
mov
add
mov
mov
jns
add
or
sbb
adc
dec
mov
sbb
add
add
pop
repnz
add
xchg
mov
add
pushf
lds
nop
add
test
loop
je
pop
icebp
and
mov
mov
add
clc
pop
xchg
lock
mov
jb
push
add
add
add
mov
mov
fcoml
xor
lock
add
add
sbb
rolb
out
fildll
add
inc
aaa
jle
push
add
add
mov
pop
sub
dec
arpl
add
xchg
add
mov
mov
loop
jno
sbb
sub
lods
jb
aad
lods
mov
add
out
fstpt
mov
cmpsb
add
cmpsb
add
and
mov
cs
jmp
mov
jp
daa
fldt
push
add
add
andnps
mov
icebp
dec
cltd
cmpsl
push
add
sbb
les
sub
add
jae
loope
add
xor
rolb
lahf
push
outsb
mov
jle
add
adc
int3
repnz
in
cmc
movb
add
mov
into
addb
rolb
sbb
ret
xchg
sbb
imul
or
add
testb
add
add
loopne
orl
jp
add
and
add
add
push
mov
jle
les
mov
mov
add
jb
or
cld
and
mov
xor
cmp
jge
ljmp
push
add
inc
std
nop
add
rolb
sti
hlt
add
enter
int
add
repz
jl
mov
adc
mov
jae
add
nop
add
jmp
sub
std
insl
mov
rolb
xlat
daa
mov
and
mov
imul
mov
cld
push
add
mov
jmp
add
sub
add
add
inc
add
jb
add
mov
pop
lret
mov
pop
jnp
addb
arpl
or
add
xor
rolb
cld
leave
fisubs
call
add
lea
mov
and
push
pop
ja
or
pop
aam
jbe
or
mov
inc
add
add
push
add
add
mov
mov
fldt
pusha
add
mov
test
add
shll
mov
aam
jb
sub
add
mov
sub
inc
add
fwait
or
mov
mov
push
add
add
arpl
inc
aaa
mov
movsb
add
xchg
pop
das
arpl
xlat
addb
jg,pn
add
add
mov
mov
cmpsl
je
in
test
jne
push
pop
pop
xchg
add
fldcw
or
add
add
sub
cltd
dec
iret
icebp
out
push
add
add
adc
js
movsb
add
add
add
and
mov
add
add
sti
lds
push
movsb
add
data16
add
stc
adc
data16
add
add
movsl
and
mov
in
stc
mov
jge
sub
cld
sub
add
nop
add
inc
add
jnp
call
and
lahf
repnz
bound
mov
nop
add
add
aad
or
sub
push
dec
stos
and
push
jns
cs
add
or
add
push
add
popa
mov
push
add
lcall
cmp
add
xor
xchg
jmp
rcrl
or
int
into
xlat
lods
mov
xchg
xchg
xor
pop
testb
cld
je
out
lock
sbb
movsb
add
and
add
mov
psrld
ret
rcll
and
add
mov
or
jno
fwait
dec
and
mov
lods
push
testb
and
jmp
cwtl
pop
test
add
popf
add
mov
jnp
add
inc
add
rolb
les
loopne
fstpl
pop
mov
adc
in
xor
or
mov
jns
stc
data16
std
add
add
add
scas
sub
repnz
adc
sub
sbb
ljmp
adc
repz
inc
sti
mov
add
data16
cmp
icebp
insb
dec
scas
cmpsl
imul
jno
inc
fadd
dec
pushf
sbb
jbe
adc
add
jbe
outsl
fstps
gs
sahf
mov
add
xchg
cmp
jl
mov
jnp
aam
inc
add
mov
add
mov
rolb
jae
notl
add
arpl
add
das
dec
mov
in
mov
repnz
inc
add
repnz
sbb
lahf
ret
add
cmp
call
add
add
xor
xor
jmp
scas
into
jns
push
dec
pop
or
cmc
out
mov
jle
dec
mov
cli
fsubp
cmpsl
sahf
pop
adc
add
aaa
xor
out
lds
shll
xchg
cmp
cmc
sub
add
imul
add
xchg
and
insb
add
mov
add
sub
clc
lret
and
mov
mov
jns
sub
add
addb
adc
xchg
jb
rcrl
stos
adc
and
jmp
jbe
ficoms
movsb
add
add
mov
add
movsb
add
add
add
sub
add
stc
push
mov
and
mov
and
mov
jmp
mov
add
add
repz
jns
cmp
scas
pop
mov
inc
add
adc
mov
mov
lret
fbstp
add
mov
add
xchg
add
mov
sub
add
dec
lods
jne
mov
in
sub
mov
jnp
jp
or
add
add
add
add
add
add
add
add
stos
jg
add
add
add
add
ret
or
add
sbb
xor
and
mov
push
add
mov
mov
daa
jo
rolb
mov
mov
js
push
add
add
repz
aaa
mov
fstpl
push
cwtl
or
or
inc
add
cwtl
sub
lcall
pop
xlat
aam
sub
jmp
mov
pop
test
lock
add
aaa
push
add
data16
add
popa
hlt
add
add
add
jecxz
in
dec
pop
cltd
mov
mov
test
inc
mov
rolb
jb
jne
rep
dec
inc
cmc
cvtps2pd
add
loopne
rolb
cmp
pop
cmp
ret
add
or
add
or
mov
add
xchg
mov
mov
or
pop
mov
repnz
daa
nop
add
and
mov
dec
in
aam
fndisi(8087
sbb
add
pop
cltd
cli
dec
js
add
jmp
cs
out
adc
lock
negl
jle
add
pop
nop
add
add
test
imul
add
sbb
add
loop
icebp
loope
mov
in
xor
cmp
gs
xchg
mov
add
mov
into
roll
icebp
xor
xchg
adc
jmp
xchg
add
sti
sub
inc
add
add
loop
xrelease
xor
add
inc
add
mov
add
icebp
pop
add
notl
loopne
sub
or
xor
or
gs
fsubs
ret
xor
ret
out
mov
cmp
add
scas
les
mov
stc
jg
lock
mov
add
xlat
add
out
push
fs
add
xchg
add
mov
pop
movsl
mov
xchg
loopne
xchg
xchg
dec
pop
sahf
out
push
mov
mov
imul
add
js
add
cwtl
xor
cmpsl
jle
je
in
mov
push
add
mov
add
add
movsb
add
xor
sbb
add
inc
add
add
ss
add
and
add
repz
icebp
addr16
mov
xchg
xlat
into
cwtl
or
out
mov
add
add
pop
inc
add
mov
bound
mov
push
add
add
add
inc
add
or
out
out
adcl
je
js
fdiv
mov
cmp
ret
adc
cmp
mov
cwtl
fwait
sbb
adc
and
mov
add
addr16
mov
dec
mov
sbb
arpl
pop
mov
lods
cmp
or
add
ret
nop
add
add
add
push
add
loop
add
push
mov
add
iret
mov
xchg
xor
sub
add
add
testb
add
cmp
mov
cmp
jnp
rcr
add
add
mov
add
hlt
add
in
or
hlt
add
add
xchg
push
add
add
cld
rolb
push
add
push
sub
xlat
aad
mov
xor
inc
mov
push
iret
push
pop
jp
xor
aaa
mov
es
add
add
xchg
add
shll
mov
xchg
add
add
mov
sub
add
iret
cmpsl
or
push
add
or
test
sub
add
cmp
add
push
dec
add
mov
add
arpl
mov
in
insb
enter
data16
add
add
test
inc
inc
add
jmp
out
xor
mov
add
and
cli
push
outsl
jge
add
lcall
add
movb
pop
or
mov
add
add
dec
cld
inc
cmp
mov
add
add
pop
push
add
add
cltd
xchg
cwtl
mov
outsb
add
mov
popa
das
or
popl
add
mov
add
add
mov
xchg
out
xchg
leave
jl
cmp
bound
mov
adc
int3
add
jo
mov
jg
loopne
pusha
add
mov
nop
cld
nop
jmp
xor
xchg
inc
add
es
add
add
add
xor
aas
mov
stc
nop
es
ds
ljmp
push
mov
xchg
ret
add
add
add
xor
stc
nop
es
add
sbb
enter
stc
nop
es
push
sbb
lret
stc
nop
es
adc
adc
add
jmp
stc
nop
es
mov
adc
xchg
xchg
push
sub
ja
fs
nop
es
add
push
mov
stc
nop
es
adc
add
cmp
test
and
add
nop
es
add
popl
nop
cld
nop
jmp
xchg
add
pop
add
add
stc
nop
es
add
cmpsb
add
clc
push
mov
xchg
ret
add
jmp
sbb
roll
xchg
ret
add
cmc
sbb
push
inc
add
mov
cld
nop
jmp
jns
push
aam
add
and
stc
nop
es
add
add
add
stc
nop
es
in
ljmp
push
nop
cld
nop
jmp
cmp
adc
add
add
test
xchg
add
xchg
add
add
stc
nop
es
lea
gs
sbb
add
push
push
mov
xchg
ret
push
xchg
into
pusha
stc
nop
es
movsb
add
or
xchg
jne
stc
nop
es
in
in
pop
stc
nop
es
push
lea
sub
es
movsb
in
sub
cld
stc
nop
es
push
ljmp
dec
ret
push
mov
xchg
ret
xor
pop
add
add
imul
stc
nop
es
addb
add
add
je
stc
nop
es
add
add
rep
nop
cld
nop
jmp
add
pushf
add
or
push
mov
xchg
ret
lods
insl
add
add
lea
iret
inc
add
in
add
in
shr
push
mov
xchg
ret
add
pop
push
sbb
es
add
leave
add
dec
nop
cld
nop
jmp
add
add
pop
in
gs
or
es
pop
lods
add
xchg
sub
stc
nop
es
add
add
aam
pop
add
add
stc
nop
es
gs
push
stc
nop
es
in
mov
mov
add
mov
loope
jmp
stc
nop
es
add
push
add
add
add
stc
nop
es
mov
add
push
mov
xchg
ret
loop
add
sub
add
push
mov
xchg
ret
dec
add
add
add
roll
stc
nop
es
add
add
lea
loop
iret
mov
nop
cld
nop
jmp
adcb
pushf
jl
add
push
mov
xchg
ret
add
sub
xchg
or
test
add
es
push
out
inc
add
xchg
add
cmp
nop
cld
nop
jmp
sub
inc
add
jg
nop
cld
nop
jmp
int3
loope
add
add
add
mov
cld
nop
jmp
add
dec
fsubs
arpl
cld
nop
jmp
ljmp
cmpsb
add
add
add
incl
nop
cld
nop
jmp
add
add
es
push
add
jg
add
aad
push
stc
nop
es
add
add
mov
loopne
add
adc
add
nop
es
add
loop
xchg
add
dec
nop
cld
nop
jmp
add
jg
push
jmp
add
jmp
jb
add
add
add
test
cld
nop
jmp
push
aam
mov
sub
nop
es
add
in
add
into
je
stc
nop
es
xchg
add
add
stc
nop
es
sbb
je
stc
nop
es
add
xchg
sbb
xor
add
nop
cld
nop
jmp
add
add
add
ret
stc
nop
es
loope
add
add
add
in
mov
stc
nop
es
mov
add
add
stc
nop
es
inc
inc
add
push
in
add
cmp
inc
add
add
add
add
add
add
jb
adc
or
add
mov
stc
nop
es
loope
and
mov
scas
enter
jmp
sbb
add
sti
ja
stc
nop
es
mov
adc
add
nop
es
jns
loop
add
push
add
add
cld
nop
jmp
push
add
or
popl
mov
xchg
ret
add
lods
xchg
add
inc
and
nop
cld
nop
jmp
add
add
lea
pop
nop
cld
nop
jmp
cmp
xor
movsb
loope
mov
stc
nop
es
add
loop
add
lcall
mov
xchg
ret
add
add
add
push
mov
xchg
ret
movsb
xchg
add
sub
mov
mov
stc
nop
es
movsb
mov
add
movsb
stc
nop
es
add
pop
adc
repz
nop
es
loop
add
inc
add
pop
stc
nop
es
jmp
push
stc
nop
es
vmwrite
add
mov
xchg
ret
add
ds
dec
add
stc
nop
es
xchg
jmp
add
outsl
sub
push
mov
xchg
ret
xchg
loope
add
test
jb
mov
movsb
lea
lea
nop
cld
nop
jmp
adc
push
lea
stc
nop
es
lods
sub
xchg
test
add
nop
es
mov
lea
add
stc
nop
es
add
aad
xchg
es
or
mov
push
mov
xchg
ret
mov
add
movsb
insl
call
stc
nop
es
add
sarl
add
push
mov
xchg
ret
add
daa
cmc
jnp
inc
nop
cld
nop
jmp
ljmp
ljmp
nop
jmp
push
add
pop
pop
mov
add
stc
xor
stc
nop
es
sub
add
inc
and
nop
es
addb
add
movsl
add
pop
call
nop
cld
nop
jmp
xchg
xchg
pop
add
add
jg
nop
cld
nop
jmp
pop
add
or
sahf
push
stc
nop
es
int3
cmp
add
int3
adc
mov
inc
in
stc
nop
es
sub
inc
add
add
stc
nop
es
add
ljmp
push
mov
xchg
ret
ds
mov
in
pop
push
mov
xchg
ret
add
lea
verr
les
push
add
leave
inc
add
addb
add
pop
and
and
stc
nop
es
add
xchg
add
add
xor
stc
nop
es
pushf
xchg
add
and
js
nop
es
jns
add
jb
or
cld
nop
jmp
pop
add
sub
dec
je
stc
nop
es
add
jb
pop
push
mov
xchg
ret
push
lea
in
add
mov
nop
cld
nop
jmp
add
int3
push
pop
pop
in
mov
stc
nop
es
push
add
xchg
cmpl
sub
add
add
adc
cmc
inc
mov
jb
mov
out
sub
add
add
stc
nop
es
push
add
sub
add
mov
push
stc
nop
es
add
add
add
add
add
stc
nop
es
add
xchg
add
cmp
sti
stc
nop
es
out
in
sub
add
test
nop
es
bswap
add
mov
stc
nop
es
add
add
mov
nop
cld
nop
jmp
add
and
nop
cld
nop
jmp
adc
add
pop
add
jmp
add
add
push
lods
aam
xchg
call
ss
stc
nop
es
add
mov
mov
xchg
ret
pop
add
cmpb
push
fildl
xchg
ret
mov
subb
or
jb
in
add
sub
nop
cld
nop
jmp
add
movsb
mov
mov
popa
stc
nop
es
add
in
push
add
add
pop
push
mov
xchg
ret
pushf
loop
add
add
mov
mov
stc
nop
es
add
sbb
add
loop
add
mov
nop
es
dec
xchg
add
add
add
jmp
cltd
add
add
xor
pop
repnz
sti
mov
stc
nop
es
pop
jnp
add
stc
nop
es
mov
add
int3
add
add
stc
nop
es
cmc
movsb
xchg
loop
loop
push
fimull
test
add
add
nop
es
mov
xor
push
mov
xchg
ret
mov
loope
loope
jl
inc
and
stc
nop
es
aam
sub
in
call
stc
nop
es
movsb
loop
int3
push
push
mov
xchg
ret
leave
adc
out
add
cmp
add
nop
es
out
sbb
add
add
adc
add
xor
add
add
add
push
mov
xchg
ret
inc
orb
dec
cmpl
nop
cld
nop
jmp
add
sbb
pop
sub
stc
nop
es
pxor
push
xor
mov
stc
nop
es
or
pop
add
add
stc
nop
es
loop
lea
inc
cmp
andl
jb
aad
add
test
les
sub
enter
es
adc
add
sub
lods
push
mov
xchg
ret
lea
add
add
add
nop
cld
nop
jmp
add
add
sub
nop
es
add
cwtl
inc
stc
nop
es
in
add
add
cld
dec
nop
cld
nop
jmp
dec
adcb
push
int3
add
or
in
and
add
nop
es
add
or
cmp
nop
es
add
addb
add
in
adc
xchg
add
add
sbb
dec
sbb
mov
xchg
ret
add
add
out
adc
jno
mov
stc
nop
es
push
push
nop
cld
nop
jmp
ljmp
add
or
nop
es
add
add
roll
movsl
fmull
es
aad
jns
mov
sub
inc
inc
add
nop
es
add
add
add
add
nop
es
add
or
test
nop
cld
nop
jmp
insl
int3
add
jg
cmc
adc
stc
nop
es
aad
add
sbb
jb
add
sbb
stc
nop
es
add
in
lea
add
add
stc
nop
es
sbb
add
nop
cld
nop
jmp
movsb
cmp
insl
add
add
cld
nop
jmp
inc
add
xor
or
inc
push
mov
xchg
ret
addb
sbb
add
mov
and
add
add
mov
xor
mov
xchg
ret
pushf
mov
aad
add
enter
jb
add
add
add
push
cwtl
mov
push
mov
xchg
ret
add
inc
add
push
mov
xchg
ret
add
lods
or
mov
stc
nop
es
or
add
mov
xchg
ret
add
jns
add
push
mov
xchg
ret
add
add
push
nop
add
mov
add
stc
nop
es
orb
push
mov
xchg
ret
add
lods
jl
hlt
add
test
nop
cld
nop
jmp
lods
add
add
ds
add
nop
cld
nop
jmp
add
movsb
add
inc
add
popf
push
push
mov
xchg
ret
add
sub
loop
add
jmp
add
xchg
add
es
add
fs
add
jb
add
add
xor
nop
es
movsb
add
add
es
add
unpcklps
add
leave
add
jg
mov
add
cmp
nop
es
insl
push
mov
add
add
sbbb
add
mov
cmp
cld
nop
jmp
jnp
jl
movsb
pop
add
ret
push
mov
xchg
ret
insl
lods
add
cmc
push
xor
or
sar
nop
es
add
add
add
mov
push
stc
nop
es
add
add
adc
nop
es
sbb
movhps
cli
jne
stc
nop
es
add
push
add
pop
stc
nop
es
add
add
lahf
push
stc
nop
es
out
add
add
loop
add
outsl
movzwl
push
mov
xchg
ret
add
cmc
gs
pop
push
mov
xchg
ret
pop
lods
add
mov
xchg
add
xor
add
stc
nop
es
movsb
add
xchg
stc
nop
es
push
inc
int3
add
dec
cmp
nop
es
jmp
add
mov
and
inc
add
sbb
es
push
mov
add
fisubrl
add
add
add
push
pop
mov
nop
cld
nop
jmp
add
or
in
inc
add
es
sbb
cmp
aad
push
cmp
jmp
out
pop
cmc
cmp
add
fildl
je
sub
in
inc
add
push
add
icebp
int
test
nop
es
add
add
sbb
adc
lcall
xor
fsubl
xor
add
stc
nop
es
aam
repnz
adc
push
mov
stc
nop
es
cmp
stc
nop
es
jmp
add
nop
es
add
add
insl
add
cmp
nop
es
add
add
testb
pop
stc
nop
es
add
add
add
cmp
add
nop
es
add
add
mov
stc
nop
es
out
xchg
add
loop
add
cld
nop
jmp
pop
push
add
add
add
add
dec
cmp
cld
nop
jmp
add
sub
cmp
ret
nop
cld
nop
jmp
addb
ja
cmp
nop
cld
nop
jmp
add
push
in
adc
mov
xchg
ret
add
leave
add
dec
dec
add
stc
nop
es
add
add
iret
not
push
mov
xchg
ret
and
loope
andb
es
add
ljmp
add
jo
inc
add
pushf
sbb
add
stc
nop
es
xor
add
add
loopne
nop
cld
nop
jmp
pushf
add
lods
ljmp
nop
es
add
scas
sub
stc
nop
es
aad
mov
xchg
add
push
mov
xchg
ret
or
jl
enter
and
stc
nop
es
loope
add
int
push
mov
xchg
ret
add
lods
mov
add
nop
es
add
addb
aad
add
rcrb
nop
es
addb
out
out
loop
push
stc
nop
es
add
sbb
add
mov
xadd
add
nop
es
add
xchg
or
stc
nop
es
add
push
movb
or
nop
es
adc
jl
add
lea
push
mov
xchg
ret
leave
jl
xorb
mov
xchg
ret
loop
add
out
mov
les
add
stc
nop
es
add
lods
jne
stc
nop
es
int3
sbb
imul
stc
nop
es
push
add
cmc
add
sbb
nop
es
jnp
add
movsb
push
adc
dec
add
stc
nop
es
add
add
jmp
nop
cld
nop
jmp
add
push
aam
repz
push
mov
xchg
ret
pop
add
add
mov
add
stc
nop
es
or
cmovns
es
add
jns
jmp
nop
es
add
gs
add
pop
push
push
mov
xchg
ret
cmp
add
add
inc
sti
nop
push
mov
xchg
ret
adc
sbb
in
add
mov
nop
cld
nop
jmp
mov
loop
push
ljmp
stc
nop
es
cmp
add
push
stc
nop
es
adc
aad
lods
aam
push
and
nop
cld
nop
jmp
add
add
add
push
add
stc
nop
es
addb
mov
nop
es
add
add
ds
out
cmpsl
ds
stc
nop
es
add
push
adc
push
stc
nop
es
loope
jmp
divps
popa
add
cld
nop
jmp
jl
cmc
add
or
add
stc
nop
es
shld
lods
push
mov
xchg
ret
add
loope
push
add
xlat
inc
add
sub
dec
add
movsb
lods
mov
stc
nop
es
ljmp
add
add
add
div
nop
cld
nop
jmp
pop
mov
add
mov
and
stc
nop
es
cmc
loop
push
shrl
adc
or
add
xchg
mov
loope
add
add
add
add
adc
loop
gs
add
nop
jmp
xchg
jmp
cmc
sbb
nop
jmp
insl
add
inc
add
and
push
mov
xchg
ret
add
xor
stc
nop
es
add
add
dec
es
rolb
xchg
out
je
stc
nop
es
jnp
adcb
stc
nop
es
add
add
add
adc
or
es
mov
add
rcl
arpl
lea
nop
cld
nop
jmp
cmc
add
add
stc
nop
es
xchg
add
add
stc
nop
es
push
ds
mov
add
mov
xchg
ret
add
add
push
mov
xchg
ret
movsb
mov
jns
sbb
test
cld
nop
jmp
add
dec
sub
mov
stc
nop
es
push
add
mov
add
push
pusha
rorl
add
inc
add
cld
nop
jmp
add
add
jmp
out
stc
nop
es
add
mov
push
sahf
call
nop
cld
nop
jmp
add
mov
push
mov
xchg
ret
add
add
psubq
push
mov
xchg
ret
add
lea
and
stc
nop
es
jl
add
loop
mov
mov
xchg
ret
sbbb
add
add
shl
inc
add
sbb
add
cmc
push
cmp
jb
stc
nop
es
add
add
xor
mov
cmpw
nop
cld
nop
jmp
add
push
push
mov
xchg
ret
add
add
cwtl
mov
stc
nop
es
pop
jnp
add
pop
addr16
nop
cld
nop
jmp
add
pop
sub
add
stc
nop
es
add
add
add
mov
add
add
nop
es
add
sub
mov
stos
push
mov
xchg
ret
add
add
add
add
stc
nop
es
pop
add
add
add
cmpsl
xchg
add
mov
cmp
ret
add
add
mov
nop
cld
nop
jmp
movsb
xchg
mov
jmp
nop
cld
nop
jmp
adc
add
add
addb
nop
cld
nop
jmp
inc
add
add
add
jnp
rclb
or
add
lods
add
test
mov
nop
cld
nop
jmp
loope
xchg
mov
jns
stc
nop
es
add
cmp
loop
loop
add
add
push
mov
xchg
ret
add
push
add
mov
nop
es
jl
add
add
add
push
mov
inc
test
add
add
add
aas
or
jne
mov
stc
nop
es
add
add
jne
stc
nop
es
jmp
stc
nop
es
mov
add
ds
nop
cld
nop
jmp
loop
add
push
inc
add
push
add
add
mov
add
call
adc
add
push
mov
xchg
ret
cmc
xor
push
mov
xchg
ret
add
movsb
push
add
stos
mov
stc
nop
es
add
loop
lret
mov
stc
nop
es
add
cmp
xchg
adc
mov
xchg
ret
pop
add
add
fadds
xchg
ret
add
push
jmp
nop
cld
nop
jmp
out
add
add
cld
nop
jmp
add
add
add
aad
es
sbb
add
or
stc
nop
es
add
mov
movsb
add
push
stc
nop
es
add
push
add
mov
xchg
ret
mov
gs
ja
push
push
mov
xchg
ret
xchg
dec
inc
es
or
nop
es
cmp
add
push
sbb
popf
mov
nop
cld
nop
jmp
add
add
add
add
nop
es
push
gs
mov
inc
add
adc
add
nop
es
ljmp
mov
push
mov
xchg
ret
add
loope
add
push
stc
nop
es
add
add
add
cmp
icebp
inc
add
add
adc
pop
out
push
push
mov
xchg
ret
sbb
add
out
pop
stc
nop
es
add
pop
adc
movsb
add
mov
stc
nop
es
jmp
add
add
stc
nop
es
mov
add
add
cs
nop
cld
nop
jmp
add
pushf
add
add
call
adc
add
add
add
sub
fldl
xchg
ret
add
movsb
add
jae
add
push
stc
nop
es
add
add
add
add
dec
add
stc
nop
es
in
push
in
add
mov
push
mov
xchg
ret
inc
add
add
lcall
andb
cmp
add
push
mov
push
mov
xchg
ret
add
ljmp
add
add
jmp
jb
loop
add
mov
xchg
ret
jmp
mov
out
add
stc
nop
es
add
pop
add
add
nop
es
add
push
je
mov
imul
nop
cld
nop
jmp
mov
add
addb
pop
push
push
mov
xchg
ret
jmp
int3
add
nop
cld
nop
jmp
leave
add
sub
add
add
add
stc
nop
es
xchg
add
inc
xor
push
stc
nop
es
add
add
sub
nop
es
add
add
push
int3
jmp
pop
jbe
movsl
jp
adc
out
incl
pushf
add
add
add
add
stc
nop
es
add
add
lea
mov
adc
nop
es
in
jg
add
mov
stc
nop
es
add
aam
add
iret
movzwl
stc
nop
es
add
add
jns
add
jae
nop
es
in
in
punpckhbw
gs
cld
nop
jmp
add
inc
lea
in
mov
nop
cld
nop
jmp
add
pop
push
add
in
sub
es
mov
sbb
mov
nop
es
add
out
cmp
nop
cld
nop
jmp
sub
xor
add
mov
stc
nop
es
add
loope
add
jl
inc
lock
nop
es
insl
jmp
jecxz
push
nop
cld
nop
jmp
add
add
jbe
stc
nop
es
out
jnp
adc
mov
cld
nop
jmp
or
push
adc
push
mov
lods
jl
mov
mov
add
add
stc
imul
test
nop
cld
nop
jmp
ljmp
xor
add
stc
nop
es
jl
jmp
lret
nop
cld
nop
jmp
dec
add
in
inc
add
add
mov
nop
jmp
push
add
xchg
add
mov
nop
jmp
add
sub
int3
mov
add
stc
nop
es
inc
pop
add
mov
push
mov
xchg
ret
xor
add
add
xchg
sub
push
mov
xchg
ret
bndstx
es
pushl
nop
cld
nop
jmp
add
jnp
add
icebp
stc
nop
es
inc
add
add
pop
add
nop
es
add
aam
sub
xorl
test
add
mov
stc
nop
es
add
add
mov
fiaddl
jne
stc
nop
es
sbb
add
xchg
xchg
add
rep
nop
cld
nop
jmp
add
pop
add
add
mov
push
mov
xchg
ret
push
jg
add
mov
es
out
add
add
ljmp
nop
cld
nop
jmp
cmp
add
loope
sub
pop
push
add
mov
and
mov
xchg
ret
lea
xchg
leave
jl
in
pop
nop
cld
nop
jmp
xor
xchg
inc
pushf
mov
addb
ret
stc
nop
es
int3
add
xchg
push
pushf
add
pusha
add
push
mov
xchg
ret
jns
add
mov
push
mov
xchg
ret
cmc
sub
cmp
pop
stc
nop
es
movsb
pcmpgtw
gs
add
add
stc
nop
es
jl
add
push
stc
nop
es
jg
xchg
lods
xchg
loop
xchg
sub
es
loop
add
lods
sub
in
inc
pop
mull
add
mov
add
add
outsl
testb
mov
xchg
ret
adc
cmpb
jl
test
es
aam
add
out
out
clc
stc
nop
es
add
jmp
dec
out
inc
add
xor
add
lea
out
inc
add
add
add
add
mov
xchg
ret
inc
add
loope
adc
inc
add
cld
nop
jmp
sub
pop
pop
push
stc
nop
es
aad
add
loop
in
add
filds
xchg
ret
pop
pop
add
xchg
lods
add
xchg
out
inc
add
jns
addb
aad
je
stc
nop
es
inc
add
stc
nop
es
pushf
and
jl
imul
nop
es
add
add
imul
add
push
add
repz
nop
es
add
pop
add
loope
xor
stc
nop
es
add
xchg
aas
mov
nop
cld
nop
jmp
add
or
adc
add
add
jne
nop
cld
nop
jmp
sbb
push
test
jb
add
movsb
add
jnp
add
pop
div
nop
cld
nop
jmp
add
jl
sub
add
mov
push
mov
xchg
ret
pop
add
add
lds
mov
xchg
ret
add
add
pop
shrl
push
push
mov
xchg
ret
mov
push
add
lock
add
nop
es
jns
jnp
ds
stc
nop
es
add
add
add
pop
stc
nop
es
add
add
lahf
jecxz
add
addb
add
stc
nop
es
add
mov
jl
iret
or
inc
add
sub
loop
addb
add
es
add
ljmp
mov
inc
add
jmp
add
inc
mov
jb
inc
mov
add
inc
add
leave
jne
nop
cld
nop
jmp
add
jl
sbb
xor
add
nop
cld
nop
jmp
jmp
imul
stc
nop
es
add
mov
add
add
stc
nop
es
add
in
push
add
stc
nop
es
in
add
mov
mov
sub
nop
jmp
gs
cmp
punpckhbw
push
push
mov
xchg
ret
add
add
test
insl
testl
nop
cld
nop
jmp
add
add
add
add
push
mov
xchg
ret
subb
jo
or
jno
stc
nop
es
jmp
cmp
cld
nop
jmp
add
add
add
add
incl
sub
pop
call
stc
nop
es
loop
loop
xor
dec
push
push
mov
xchg
ret
dec
add
add
add
push
popa
movsb
add
inc
push
add
stc
nop
es
pushf
add
jl
shll
nop
cld
nop
jmp
pop
add
add
adc
adcl
and
stc
nop
es
sub
inc
add
xor
in
push
stc
nop
es
out
add
add
add
mov
jmp
cld
nop
jmp
add
dec
adc
fsubr
inc
add
xor
mov
es
add
adc
movsb
add
mov
nop
jmp
xchg
adc
cmp
in
loope
stc
nop
es
add
loope
jbe
and
mov
jmp
add
cmp
out
popa
nop
cld
nop
jmp
add
mov
stc
nop
es
movsb
jmp
in
dec
push
push
mov
xchg
ret
sbb
add
and
lret
stc
nop
es
add
jge
movl
mov
es
add
nop
cld
nop
jmp
add
lcall
mov
xchg
ret
pushf
lea
sub
push
pop
add
lret
rep
stc
nop
es
add
add
add
loope
lea
stc
nop
es
add
inc
adc
add
mov
stc
nop
es
jns
jl
cld
lea
push
mov
xchg
ret
pop
adc
jne
jne
stc
nop
es
add
add
add
add
stc
nop
es
mov
sbb
add
inc
adc
daa
repnz
nop
jmp
add
movsb
jnp
add
jmp
stc
nop
es
add
testb
add
add
add
js
test
cld
call
in
jmp
ljmp
stc
nop
es
add
cmpb
add
sub
stc
stc
nop
es
add
add
add
add
lret
xor
stc
nop
es
sub
add
adc
jmp
stc
nop
es
add
sldt
ds
add
stc
nop
es
pop
add
add
mov
stc
nop
es
add
add
dec
loope
add
mov
xchg
ret
add
pop
adc
inc
ds
stc
nop
es
pop
dec
add
loop
add
pop
mov
stc
nop
es
lea
cmc
nop
add
decl
nop
cld
nop
jmp
add
aad
add
add
sti
mov
stc
nop
es
add
sub
mov
rolb
xchg
ret
inc
addb
pushf
add
mov
es
sbb
movsb
jg
add
sub
test
nop
es
movsb
icebp
stos
mov
nop
cld
nop
jmp
add
gs
add
lock
cld
nop
jmp
add
cmp
add
jecxz
add
loopne
stc
nop
es
loop
mov
mov
jb
nop
es
push
lods
cmc
andb
nop
es
add
add
pop
aad
mov
jb
add
pop
push
cs
cld
nop
jmp
pop
jmp
dec
nop
cld
nop
jmp
sub
add
add
add
add
add
stc
nop
es
xchg
add
add
test
nop
cld
nop
jmp
push
lea
add
add
xchg
aaa
push
add
roll
xchg
ret
addb
add
lods
add
inc
adc
nop
es
movsb
or
ds
mov
push
add
dec
add
inc
std
add
add
add
popa
add
nop
es
add
add
xchg
add
orb
incl
lods
add
add
jg
jmp
push
mov
xchg
ret
loop
add
inc
add
jmp
stc
nop
es
add
lea
enter
adc
cmp
ret
add
add
movzwl
stc
nop
es
cmp
adc
movb
pop
stc
nop
es
push
jl
add
add
add
add
stc
nop
es
add
movsb
movsb
sbb
jo
jnp
nop
cld
nop
jmp
add
xchg
loop
add
cmp
pop
add
nop
cld
nop
jmp
add
inc
movsb
jns
loop
add
mov
and
stc
nop
es
movsb
mov
pmaddwd
bound
mov
mov
repz
mov
xchg
ret
add
add
lea
mov
adc
nop
es
add
fsubp
stc
nop
es
add
inc
movsb
xlat
loopne
sahf
add
stc
nop
es
jns
add
adc
stc
nop
es
dec
jg
push
add
stc
nop
es
add
add
sbb
add
out
add
add
jb
add
add
add
add
nop
cld
nop
jmp
inc
jns
cmp
in
add
push
mov
xchg
ret
push
push
loop
add
jbe
stc
nop
es
jg
add
add
nop
es
add
cmp
add
pop
push
mov
xchg
ret
movsb
add
push
sbb
or
mov
xchg
ret
add
add
xchg
lea
push
mov
xchg
ret
add
add
loopne
loopne
add
je
js
mov
xchg
ret
inc
dec
pop
mov
add
mov
stc
nop
es
add
movsb
xchg
aam
scas
add
stc
nop
es
add
push
add
jl
mov
stc
nop
es
addb
mov
stc
nop
es
movsb
inc
sbb
add
loop
push
stc
nop
es
add
sbb
nop
es
xor
add
shrl
xor
nop
es
or
push
rolb
jge
sar
es
sbb
mov
aam
lods
dec
mov
push
mov
xchg
ret
or
add
add
add
loope
incl
aad
pop
lods
stc
nop
es
sub
add
dec
jne
nop
cld
nop
jmp
add
jns
add
stc
nop
es
aad
addb
orl
inc
and
stc
nop
es
add
aad
sbb
mov
xchg
ret
lea
mov
nop
cld
nop
jmp
gs
add
add
pop
xorb
lret
push
nop
cld
nop
jmp
add
add
and
imul
es
int3
sbb
movb
nop
es
sbb
push
mov
inc
xor
stc
nop
es
adc
mov
stc
nop
es
push
add
add
inc
jmp
mov
xchg
ret
in
aad
sbb
xchg
out
adc
jbe
call
nop
es
jns
add
add
push
add
movswl
stc
nop
es
dec
or
add
es
in
cmp
cmpb
inc
add
dec
push
mov
lret
mov
dec
add
cld
dec
add
xchg
lods
es
and
stc
nop
es
adc
add
jmp
push
mov
xchg
ret
add
ljmp
mov
stc
nop
es
add
int
stc
nop
es
add
pushf
xor
add
stc
nop
es
push
add
add
add
mov
stc
nop
es
jns
add
sbb
add
ret
stc
nop
es
add
add
add
push
stc
nop
es
lods
cmp
pop
xchg
push
addb
sbb
add
nop
es
sbb
adc
jae
add
stc
nop
es
add
add
push
push
mov
xchg
ret
add
add
xor
stc
nop
es
xchg
sbb
add
nop
es
add
add
stc
nop
es
mov
add
lea
or
push
mov
xchg
ret
push
mov
add
mov
jb
adc
add
add
push
mov
xchg
ret
add
aam
movsb
add
fisttpll
jb
sbb
add
nop
es
adc
add
mov
sub
stc
nop
es
add
add
fisubrl
stc
nop
es
jg
add
push
add
mov
out
add
int
stc
nop
es
pop
add
int3
xor
push
mov
xchg
ret
jns
lea
pop
add
jg
stc
nop
es
add
add
sub
mov
nop
cld
nop
jmp
inc
leave
add
add
push
cmp
mov
xchg
ret
add
mov
lea
ljmp
inc
add
add
push
add
push
stc
nop
es
add
add
jns
add
pop
push
mov
add
jg
add
mov
sbb
xor
add
stos
mov
push
mov
xchg
ret
pop
mov
add
rcrl
push
mov
xchg
ret
add
add
rep
nop
cld
nop
jmp
insl
jmp
jnp
or
loope
nop
es
mov
add
out
add
decl
stc
nop
es
mov
jg
cmp
add
addb
and
nop
cld
nop
jmp
add
adcb
stc
nop
es
leave
add
or
jns
nop
cld
nop
jmp
mov
add
add
es
adc
repz
push
mov
pop
add
iret
fs
add
dec
sub
add
add
shl
push
jae
add
add
pop
pop
or
add
add
add
addb
xchg
add
cwtl
mov
add
push
add
ja
add
es
data16
adc
xor
lret
sbb
enter
lret
cmp
jl
mov
jg
xor
dec
xchg
add
enter
inc
mov
add
sub
clc
mov
aam
and
or
or
mov
sub
rolb
push
add
pusha
add
sbb
adc
mov
jnp
adcl
add
pop
jp
in
cs
push
add
dec
ljmp
add
lret
sub
mov
inc
add
add
ret
xchg
jecxz
dec
fisttpl
xchg
lock
push
add
add
repnz
out
clc
inc
add
add
add
cmp
rolb
sbb
repz
lret
dec
xlat
mov
sub
and
and
xor
clc
icebp
lcall
add
sbb
add
add
pop
dec
add
mov
mov
add
insb
mov
pop
out
notl
jge
pop
pop
dec
pusha
add
mov
mov
rolb
pop
or
cmp
add
fldcw
add
dec
cmpsb
add
movsb
add
or
adc
or
jnp
pop
loope
test
add
add
add
cwtl
xchg
add
or
add
sub
add
add
add
add
dec
mov
add
in
xor
xchg
incb
mov
cmpsb
add
add
add
jae
mov
inc
xor
decl
sub
inc
add
jecxz
and
add
cmpsl
dec
mov
xchg
pop
repz
call
add
aam
test
jae
fs
add
inc
sub
inc
add
sub
mov
pop
push
add
cmp
mov
push
addl
testl
add
xchg
jl
scas
pop
mov
mov
add
add
add
jg
cmp
pop
repz
enter
cmp
adc
adc
add
sub
iret
sarl
xchg
add
jbe
add
addb
dec
decl
sbb
add
mov
add
cwtl
insb
loop
imul
cs
ds
add
lock
mov
loopne
and
mov
gs
les
filds
test
xchg
mov
mov
jecxz
push
jno
add
add
imul
and
xor
sbb
add
mov
add
add
jbe
mov
jp
add
mov
fisubrs
mov
xchg
dec
sti
call
or
cmp
inc
add
push
scas
pop
jo
clc
xchg
mov
sbb
add
cld
movb
add
add
add
add
stos
jg
add
add
subl
ds
add
mov
mov
testb
pop
rcll
add
fldcw
add
cltd
clc
mov
add
add
in
fimuls
and
mov
sbb
jnp
hlt
add
or
cmpsl
pusha
add
pop
arpl
sub
inc
add
scas
mov
out
inc
add
cli
mov
mov
mov
cmp
pop
mov
add
repnz
add
add
add
rolb
sbb
xor
aas
push
add
adc
sbb
pusha
add
popf
sub
nop
add
in
call
add
dec
roll
cltd
int
add
jb
mov
mov
xor
test
sbb
add
add
add
mov
jp
push
add
lods
outsl
lea
mov
mov
cmp
add
add
lea
lret
sarl
add
sub
add
mov
iret
loopne
add
add
rolb
xchg
push
pop
scas
jge
and
sbb
xor
add
mov
ds
xor
pop
popa
lahf
ret
cmp
cmp
mov
add
inc
add
sbb
jp
mov
stos
jae
add
pushf
lcall
push
add
xor
out
jae
mov
sub
add
mov
loop
nop
add
insb
inc
mov
add
call
push
add
push
les
push
addb
push
dec
sbb
adc
mov
mov
add
ret
dec
repz
repz
test
jne
push
rolb
insl
lock
shl
add
gs
popa
sbb
add
mov
add
mov
insl
rolb
push
add
sbb
lret
mov
add
add
fwait
add
testb
sub
mov
xor
insb
pop
repz
loopne
mov
add
mov
inc
cmp
add
add
jae
xchg
movb
in
sahf
or
cmc
sub
rolb
jo
in
cltd
fwait
sub
add
aam
push
cmp
add
add
mov
enter
imul
jecxz
add
lcall
aaa
sbb
fildl
jmp
inc
inc
add
pop
addb
xchg
movsl
or
add
mov
add
mov
add
jl
ljmp
add
dec
ss
push
mov
ds
adc
and
xor
jp
cli
scas
mov
inc
add
sub
ret
add
xchg
add
add
fcoml
les
fsubrs
jno
movb
add
movsb
add
xchg
add
pop
fwait
cmp
add
pop
xor
xor
lret
sub
push
add
push
out
and
dec
cwtl
sub
hlt
add
add
out
rolb
add
mov
arpl
xchg
inc
pop
loop
test
add
add
add
int
add
jg
jae
add
add
add
shr
mov
add
fwait
pop
notl
add
rcll
fldl
hlt
add
add
scas
add
ja
xchg
add
test
add
imul
test
popf
lret
out
fiaddl
add
add
and
mull
addb
add
dec
int
out
pop
mov
mov
jecxz
jle
mov
add
xor
nop
add
pop
jno
and
push
add
cmpsl
fsubs
inc
add
mov
add
add
sbb
pop
aad
add
inc
int3
inc
add
outsl
out
daa
cmpsl
pop
xor
imul
push
icebp
dec
mov
add
sub
xchg
icebp
bound
mov
out
and
in
aaa
or
sbb
push
add
pop
lds
push
addr16
add
in
push
gs
adc
pusha
add
mov
hlt
add
rcl
add
mov
sub
lds
add
add
add
incl
mov
gs
pop
cmp
dec
pop
pop
inc
rolb
lret
call
jbe
rolb
cmp
pop
push
sub
adc
cmpsl
jg
roll
shrl
scas
mov
inc
push
add
test
add
movsb
add
push
pop
pushf
inc
add
xchg
sub
add
mov
in
push
add
add
data16
add
add
test
dec
test
add
cwtl
push
repz
ljmp
mov
test
in
sub
add
cmp
mov
mov
loope
inc
add
add
in
mov
add
sub
add
inc
add
xchg
cld
adc
xchg
push
sbb
adc
sub
push
lea
sub
xchg
movsl
jl
aad
movsb
add
add
out
cmc
mov
push
jecxz
inc
jae
mov
add
addb
mov
add
rcrl
pop
jg
add
mov
ds
sbb
add
inc
aas
xchg
and
mov
mov
ret
adc
stos
pop
dec
cwtl
mov
mov
test
jg
add
sbb
add
jl
xor
adc
push
xor
mov
add
adc
inc
enter
mov
jo
cmp
add
mov
addr16
add
jno
outsb
dec
cmp
xchg
rolb
ret
cmpsl
pusha
add
das
or
push
add
push
lock
add
add
addb
repnz
add
test
xlat
testb
add
xor
sbb
cld
xor
jl
cltd
mov
mov
lcall
add
sahf
int
mov
xchg
jo
or
xchg
loop
mov
add
jno
in
sbb
aas
xchg
add
daa
shrl
imul
add
pop
daa
or
jge
add
xchg
imul
cmp
inc
add
push
add
mov
mov
incl
jbe
insb
inc
add
into
pop
sarl
fsubs
inc
add
js
aam
jecxz
test
mov
insl
sub
lret
lahf
popa
rep
scas
add
add
add
mov
add
out
mov
dec
push
test
repz
popa
leave
lahf
xchg
int3
sbb
mov
inc
add
mov
add
out
adc
cs
aaa
in
jne
add
and
jecxz
mov
add
fwait
out
lahf
sub
mov
loop
ret
aad
lea
xchg
sub
add
add
movsb
add
add
xchg
jg
and
mov
lret
adc
inc
add
add
xor
pop
in
cld
jbe
xor
inc
fistpll
and
mov
add
xor
inc
add
js
sbb
je
dec
jge
enter
sub
call
test
int
loope
inc
add
ret
add
add
out
xor
add
cld
push
add
or
add
je
lcall
add
add
mov
dec
push
add
mov
ret
popa
mov
insl
lahf
jno
add
add
leave
and
add
jge
mov
add
xchg
jmp
repnz
jp
mov
inc
add
add
pushf
leave
insb
xlat
in
testb
add
add
mov
xor
cli
fwait
in
push
push
mov
testb
inc
mov
add
mov
ds
mov
push
push
cli
inc
addr16
inc
add
add
pop
inc
add
sahf
dec
or
xor
add
dec
mov
add
iret
testb
mov
lock
lret
popl
testb
pop
mov
add
rolb
sahf
cld
jne
add
aas
addb
cmc
sbb
outsl
scas
scas
cmp
int
add
add
add
add
cmp
addb
cmp
fdivrp
sub
hlt
add
dec
pop
int3
xor
adc
add
imul
mov
sub
mov
in
les
push
xor
fisubrl
jge
iret
rolb
push
add
and
or
jp
xor
push
add
pop
ret
outsb
pop
popa
mov
rolb
cmpsl
or
mov
cs
and
dec
int3
dec
lcall
daa
or
add
out
push
xchg
add
jl
cmp
add
or
out
xchg
add
push
inc
add
roll
add
add
xchg
cmp
loopne
out
popf
mov
mov
add
fldcw
jmp
mov
add
inc
data16
iret
das
hlt
add
repnz
add
gs
add
add
test
fimuls
xchg
inc
add
pusha
add
pop
add
mov
loopne
iret
js
dec
mov
clc
mov
into
ljmp
lea
add
add
sub
lods
sbb
mov
add
out
push
add
add
cltd
cwtl
inc
add
add
fmuls
add
das
and
add
mov
mov
jp
idivl
imul
dec
fisttpl
jno
imul
rcrl
cmp
mov
add
cmp
stos
cmp
fcmovnu
stc
push
xor
sbb
add
or
dec
or
add
add
out
sub
add
outsl
inc
adc
das
popa
ret
dec
or
jmp
add
loope
sub
movb
addb
push
mov
add
add
push
add
pop
call
out
movsb
add
add
push
outsb
mov
bound
mov
lods
cmc
push
in
mov
cmpsb
add
add
pop
xchg
add
mov
stos
mov
gs
add
jbe
mov
out
scas
jecxz
add
cmc
xlat
mov
pop
out
push
add
mov
lcall
aad
ret
mov
clc
pop
add
add
and
sub
and
push
add
mov
push
add
and
mov
mov
add
out
insb
popf
rolb
sub
push
and
mov
dec
cmpsb
add
and
add
fistpl
mov
mov
insb
testb
mov
addb
mov
addb
add
xor
push
add
loop
cli
dec
out
fiaddl
push
rolb
out
shll
je
inc
out
mov
mov
jo
jge
pop
icebp
in
cltd
xchg
xor
inc
add
sub
mov
add
xor
pop
rolb
clc
das
mov
add
add
shl
inc
add
pop
mov
fwait
dec
cwtl
xor
mov
xchg
aam
ficompl
add
add
jp
add
inc
add
add
leave
adc
lret
out
xchg
sarl
lods
pop
fwait
testb
add
push
dec
fwait
cmp
add
add
sub
jns
add
fdivl
add
cld
xor
fbstp
out
sbb
mov
into
xor
xchg
add
mov
ds
imul
dec
push
add
mov
add
push
shll
outsl
cmp
add
add
into
mov
xor
mov
add
add
add
mov
loope
jb
jae
aad
pop
jnp
addr16
xchg
add
pop
lea
add
int3
hlt
add
add
jmp
mov
pop
sbb
cmpsb
add
add
xor
mov
mov
xchg
add
add
cmpsl
addb
pop
insb
add
cwtl
xchg
inc
test
imul
insl
xchg
lcall
jns
mov
hlt
add
add
addb
add
stos
push
mov
cmp
mov
or
jle
pop
mov
add
mov
adc
jns
add
cmc
dec
rolb
add
inc
add
adc
test
add
aaa
sub
or
add
popa
add
mov
cmp
int3
add
jne
pop
imul
or
cmp
jo
adc
or
cmpsb
add
add
pusha
add
inc
leave
imul
sbb
in
xchg
push
xlat
mov
jno
push
add
add
sub
fstpt
add
add
add
add
add
mov
stos
imul
js
push
inc
add
adc
add
sbb
and
scas
jge
add
add
pop
call
add
add
jae
pop
mov
add
mov
into
cmpsb
add
hlt
add
mov
pusha
add
rolb
sbb
jo
lahf
jnp
into
sbb
pop
data16
outsb
xor
ficompl
daa
and
mov
enter
aas
dec
add
insb
xchg
pop
add
xchg
add
into
lahf
into
test
mov
cmp
add
mov
add
add
test
movsb
add
out
movb
repz
call
add
mov
and
mov
in
cmp
add
and
mov
imul
add
dec
into
fisttpll
inc
xchg
adc
add
int3
fmull
test
scas
subl
inc
fmull
mov
add
add
push
ret
xchg
cmc
adc
imul
int
stos
rcl
add
jae
cwtl
dec
outsl
out
xor
hlt
add
lret
fwait
nop
add
cmp
add
ret
mov
rolb
pop
sub
ja
popa
mov
add
mov
add
cmp
jno
add
cmp
add
jmp
push
dec
insb
clc
push
add
add
mov
cmpsl
cmpsb
add
dec
popf
jne
dec
xor
add
mov
rolb
movsb
add
add
push
and
mov
cmp
add
add
mov
add
jmp
insb
cmp
dec
jo
mov
add
add
add
jne
mov
add
testl
sub
or
add
add
xor
and
jmp
add
push
add
push
int
adc
sbb
rolb
fwait
jo
mov
and
mov
add
and
call
mov
pusha
add
and
mov
mov
stos
popf
dec
cmp
addb
add
cs
jo
mov
rolb
add
popf
cld
add
enter
in
iret
sti
ja
xchg
push
jae
lods
mov
jp
mov
loopne
xchg
push
add
js
sub
add
add
xor
les
lods
clc
ret
add
rolb
dec
xlat
pop
xchg
add
lock
jl
ret
inc
add
movsl
and
add
adc
out
dec
sbb
popf
test
mov
pop
add
lock
lret
and
mov
pop
xchg
mov
pop
test
inc
add
insl
ret
xor
jle
imul
and
mov
loopne
dec
xor
add
mov
add
lcall
add
add
adc
outsl
pop
adcl
add
arpl
add
fildll
add
je
sub
or
jmp
xor
xchg
and
mov
xchg
add
mov
addb
add
add
add
lea
add
or
add
jb
mov
fisubs
mov
mov
inc
add
nop
add
push
add
inc
dec
ret
inc
add
ret
jmp
dec
sbb
push
add
dec
sub
jne
lods
std
mov
inc
add
add
pushf
subl
xchg
add
data16
push
add
add
loopne
testl
std
jbe
add
fimull
add
sbb
addb
add
push
jg
out
dec
dec
xchg
js
stos
testb
mov
sbb
scas
data16
add
aaa
addb
add
add
push
add
popa
popa
pop
stc
das
jae
push
add
into
mov
mov
mov
xor
dec
call
pop
or
and
push
or
cmp
dec
inc
add
in
pop
pop
push
add
inc
fstps
into
adc
add
movsb
add
fstpt
inc
mov
sbb
add
xlat
pop
jmp
add
andl
sbb
add
add
std
add
add
add
imul
add
fwait
mov
mov
add
data16
cmp
add
addb
push
add
push
add
add
push
add
inc
add
mov
or
add
in
sarl
rolb
inc
mov
dec
out
and
add
jl,pn
add
dec
pop
or
add
les
adc
push
add
or
int3
inc
adc
pop
sbb
subl
cmp
movsl
jno
xor
cmp
iret
mov
adc
aam
lcall
sbb
mov
and
mov
mov
add
push
rolb
mov
or
add
lret
addb
push
add
add
xchg
add
outsb
push
sbb
adc
add
scas
sub
iret
mov
adc
out
rolb
sti
sub
add
xchg
sub
inc
add
adc
shrl
inc
add
add
push
add
add
mov
cmp
add
mov
sahf
xchg
repz
cltd
ret
inc
adc
sti
inc
and
scas
rolb
add
loope
mov
insb
ret
stos
ds
loop
mov
je
data16
add
mov
sub
add
aaa
sub
add
cs
pop
loop
daa
sub
add
add
mov
push
add
insb
rolb
sub
mov
add
add
add
and
mov
loope
push
add
xor
adc
ficomps
xchg
hlt
add
xor
push
add
add
imul
mov
mov
outsb
fwait
in
jp
add
jg
fiadds
adc
add
xor
add
cmc
lock
add
dec
loope
lock
rcrl
fildll
dec
or
push
out
mov
mov
add
sahf
stos
mov
mov
add
jecxz
add
adc
dec
xchg
psubq
push
add
add
xchg
fwait
inc
add
mov
add
dec
hlt
add
icebp
aam
leave
or
xchg
incb
add
xchg
stc
lods
xor
push
cmpl
add
aad
and
xchg
cmp
push
das
test
in
add
dec
inc
add
add
jne
pop
mov
xchg
pop
addb
outsb
inc
add
iret
in
add
nop
add
mov
mov
stos
psadbw
icebp
adc
iret
mov
lcall
add
inc
out
test
push
add
add
xor
add
mov
add
test
add
mov
push
mov
das
xlat
mov
out
cmpsl
xchg
outsl
cmp
adc
pushf
push
add
cmp
add
fdivs
loop
fcomps
je
sbb
add
pop
scas
scas
and
add
push
add
jae
sahf
ds
add
addb
jecxz
cmp
add
ffreep
add
mov
out
jnp
loopne
test
jbe
in
mov
add
mov
sti
lods
push
fwait
pop
loop
loop
cmp
dec
sub
add
inc
add
and
mov
sbb
add
clc
leave
jae
sub
xor
int3
loope
rcll
call
jns
add
mov
add
or
push
cmp
gs
add
mov
xchg
adc
add
sbb
add
cwtl
je
dec
sbb
enter
data16
mov
rolb
clc
jno
pop
jmp
outsb
jbe
jge
test
mov
lret
push
add
mov
push
rorl
add
mov
rolb
int3
xchg
jge
add
add
or
add
movsl
sbb
or
data16
or
jno
dec
stos
cmp
or
mov
push
add
addb
dec
cmp
add
add
addb
stos
testb
adc
adc
ret
iret
rcrl
out
push
add
jmp
mov
outsl
and
pop
jmp
push
add
or
add
and
adc
inc
add
add
dec
in
adc
jae
fucomi
adc
jb
dec
mov
inc
ja
mov
add
ja
jb
mov
int
in
pop
mov
add
xchg
add
add
add
add
das
repnz
add
mov
jecxz
xlat
mov
mov
test
or
inc
xchg
xchg
out
mov
jbe
adc
test
add
add
mov
les
daa
adc
xchg
inc
add
insl
or
imull
inc
add
cld
push
add
or
inc
add
leave
xor
repnz
mov
rcll
add
jne
iret
aam
xlat
adc
into
mov
add
aad
scas
add
mov
out
movsl
icebp
jno
push
add
add
testb
lea
rolb
arpl
push
add
add
data16
mov
mov
out
cmp
inc
push
push
add
cmpsl
fistps
pop
mov
shrl
sub
xchg
jecxz
ja
add
xchg
mov
add
add
push
lret
add
add
add
jns
add
cmp
data16
lcall
push
jbe
gs
scas
adc
jecxz
add
aad
and
jmp
add
loopne
cmp
insb
mov
cmp
jbe
pop
mov
sub
lds
or
jg
add
into
adc
fidivrl
lret
std
filds
pop
dec
dec
mov
sbb
add
add
aad
jmp
lds
add
jb
test
add
add
lods
dec
std
cltd
je
and
mov
pop
stc
test
repnz
loope
add
iret
test
test
add
add
jg
add
rolb
jnp
loop
inc
sahf
lret
sbb
xor
movb
lods
sub
add
dec
add
jle
adc
das
rcl
lods
scas
ja
add
add
and
mov
in
ret
mov
add
movsb
add
scas
push
add
add
or
jb
movsb
add
push
add
loopne
xchg
xchg
cwtl
jbe
mov
ret
jge
dec
xlat
jle
nop
add
stos
add
mov
leave
lea
sbb
mov
add
xchg
in
div
add
xchg
clc
pop
sbb
das
lds
mov
js
into
xlat
fnstcw
data16
mov
xchg
add
mov
add
and
icebp
cmp
mov
movsl
dec
outsl
subl
inc
add
and
mov
das
jmp
xchg
rorl
rcrl
repnz
xchg
add
add
add
add
test
add
lea
mov
out
mov
jp
ret
jg
or
add
pop
sbb
cs
pop
rcrl
cmp
movb
add
test
lret
mov
add
mov
add
inc
adc
add
sbb
mov
and
mov
fwait
shr
popa
xchg
add
cmp
add
dec
fwait
test
mov
add
aam
add
in
push
dec
xor
jle
add
fwait
lahf
fldz
loop
and
mov
xor
mov
add
jb
push
add
jb
fucomp
add
mov
mov
fs
sbb
jecxz
out
and
inc
fistpl
sbb
add
or
or
sti
dec
mov
add
rolb
repnz
add
into
pop
mov
lcall
sbb
fiadds
xchg
add
fnstcw
lock
pop
ret
je
andl
cmp
lods
mov
xchg
xchg
std
inc
hlt
add
add
addb
mov
add
xchg
add
add
push
mov
rolb
inc
add
aad
xchg
mov
cmc
repnz
sub
add
add
ja
pop
fcomp
inc
add
in
mov
out
dec
push
cmp
fcmovnu
mov
ret
test
xlat
dec
add
xlat
mov
inc
add
jmp
xor
sbb
add
xorl
dec
movsl
pop
test
insb
mov
xchg
or
xor
push
add
and
mov
mov
add
mov
and
add
pop
lret
and
iret
xchg
sbb
add
add
into
push
outsl
rolb
cmc
mov
mov
add
aas
jae
pop
sbb
add
mov
add
mov
add
add
call
inc
fldpi
xlat
call
sbb
shll
add
scas
inc
scas
dec
adc
xchg
add
add
add
into
mov
in
xchg
adc
test
add
add
stc
cmpsb
add
mov
insb
rcrl
add
sub
cmc
jnp
aas
loopne
ret
inc
bound
mov
cmp
pusha
add
push
add
loope
add
ret
lahf
push
add
add
cmc
cltd
arpl
sbb
push
aaa
iret
movsb
add
sti
in
arpl
add
mov
ret
add
int
cli
dec
neg
mov
inc
lahf
jne
inc
nop
add
fistpl
add
sub
mov
add
mov
mov
adc
jae
mov
add
add
inc
add
shrl
data16
add
add
and
mov
daa
inc
add
addb
mov
add
pop
sahf
adc
out
test
out
add
fwait
rolb
std
mov
add
addb
jmp
add
in
pop
jg
xchg
movb
add
add
add
add
add
mov
mov
add
rolb
mov
mov
sub
jmp
out
lods
test
loopne
pop
pop
add
lock
aam
pop
imul
rcll
add
add
mov
add
fwait
lcall
add
sbb
lret
push
add
add
xchg
add
jb
pop
cmpsl
into
mov
cmp
mov
add
or
and
test
xchg
mov
add
add
add
push
add
push
rolb
add
movsl
mov
add
daa
xor
pop
in
scas
rolb
in
jb
adc
inc
mov
fstpl
pop
shrl
adc
clc
jmp
imul
sbb
add
adc
cmp
add
jbe
arpl
and
jnp
mov
insb
stos
cli
and
mov
add
sti
pop
and
in
repz
mov
jle
pop
jnp
ljmp
test
jg
jmp
mov
xor
dec
aam
jmp
cmpl
bound
mov
or
jg
lods
push
aas
mov
dec
adcl
pop
pop
jb
testl
mov
sub
mov
pusha
add
dec
jnp
out
loopne
cli
add
mov
add
mov
pop
pop
ljmp
pop
inc
pop
jle
or
jl
loopne
push
add
ret
dec
inc
add
cmp
add
inc
add
xor
addb
add
push
pop
pop
imul
sbb
sbb
xchg
out
mov
add
xchg
push
add
add
inc
add
dec
test
or
pop
inc
insl
sti
mov
add
cmp
add
scas
xlat
xchg
jl
push
add
in
popf
cmp
mov
cmpsl
cli
out
fbstp
add
fistpll
jle
jno
in
movsl
push
cmp
dec
and
mov
inc
add
lock
xor
pop
mov
daa
push
add
mov
out
mov
insl
orl
rolb
ss
jbe
xchg
pop
or
pop
movb
jg
add
add
fiaddl
sub
pop
out
xchg
and
mov
inc
pushf
in
xchg
lahf
jle
add
jns
repz
pop
movsb
add
pop
mov
addr16
adc
add
subl
mov
add
fstp
fidivs
add
xor
and
in
aaa
stc
sbb
adc
inc
mov
jmp
push
push
fwait
gs
mov
add
mov
mov
pop
data16
sub
push
dec
sti
bound
mov
loop
out
inc
push
sbb
mov
or
mov
iret
jmp
add
add
add
dec
lods
movb
stc
push
add
pop
jle
add
push
add
adc
add
add
mov
push
add
aam
repnz
mov
dec
data16
iret
dec
mov
add
xor
add
push
add
aaa
fidivl
sti
out
dec
ljmp
addb
lret
lcall
jle
pop
xchg
add
test
push
add
mov
inc
pop
aam
ja
or
out
dec
int
arpl
mov
inc
add
rcr
add
ds
fnstsw
aam
out
add
inc
add
insl
lea
int
add
add
push
dec
mov
xchg
add
add
scas
mov
rcrl
add
testb
add
jl
inc
into
addr16
lock
add
dec
or
jae
testb
and
add
pop
in
xor
add
subl
adc
popf
ja
pushl
mov
add
sub
movb
inc
add
sbb
add
add
or
leave
cmp
ja
add
add
cmp
sub
cmp
mov
fisttpl
fldt
std
add
mov
jl
bndldx
add
inc
jmp
add
add
lret
sub
inc
add
add
and
mov
movsl
in
jno
movsl
mov
add
adc
sub
out
lret
or
aad
insl
xor
add
push
add
sub
sbb
js
or
xor
add
add
add
add
cmp
adc
cmp
and
mov
add
cmpsb
add
adc
cmp
cwtl
xchg
add
clc
sahf
cmpsb
add
jbe
push
addb
add
push
add
pushf
ljmp
add
add
xchg
add
fucomip
dec
test
mov
rcrl
pop
lret
sbb
mov
mov
add
add
call
or
dec
ja
add
add
jne
push
add
dec
cltd
enter
aas
bswap
mov
pop
jecxz
jbe
cs
add
test
mov
sbb
jb
or
add
fadd
stc
andl
push
add
mov
mov
lods
pop
or
int
rolb
pop
jnp
fcmovu
push
fidivs
or
int
add
and
mov
push
and
add
int3
ja
add
lods
popf
daa
ljmp
add
mov
dec
cmp
mov
and
mov
jb
loope
xlat
push
sub
fsubrl
add
pop
cld
aas
ds
enter
add
bound
mov
dec
push
add
mov
inc
add
mov
add
mov
add
or
scas
insl
push
add
mov
mov
add
mov
add
sub
add
and
mov
fadds
gs
lret
nop
add
int3
enter
data16
add
add
lods
data16
movsl
add
mov
outsb
or
adc
adc
test
outsb
mov
fiadds
add
add
sub
jo
pop
cli
push
cld
xor
add
add
add
pop
sub
jg
nop
add
movl
sub
add
dec
adc
pop
repnz
lret
adc
cmp
mov
mov
and
mov
aam
pop
call
add
xchg
movb
sti
dec
dec
lods
sub
push
add
and
mov
clc
xchg
sbb
push
add
mov
mov
iret
push
add
add
add
add
dec
mov
pop
sbb
lret
pop
push
add
add
push
ret
cmp
jp,pt
push
add
std
aam
push
lock
test
mov
inc
cld
dec
out
int3
or
out
and
outsl
mov
add
leave
or
sbb
mov
xlat
lods
out
pop
hlt
add
add
push
dec
test
add
repz
rcrl
fsts
lods
movb
mov
test
mov
mov
add
add
pop
cmp
add
mov
add
mov
les
movb
mov
mov
dec
push
add
add
mov
sub
add
fdivp
add
rolb
popl
add
lahf
mov
push
or
movl
add
mov
mov
jne
xor
sbb
add
xchg
je
arpl
sub
sub
add
dec
push
fistps
sahf
sbb
add
aaa
aam
pop
xchg
sub
xlat
adc
das
outsl
jmp
test
pop
fsubrs
orl
add
add
outsb
adc
add
mov
dec
fildll
add
in
inc
add
mov
mov
push
add
lods
mov
jg
add
inc
add
or
mov
add
xchg
add
mov
add
push
add
add
add
add
cmpsl
inc
add
in
adc
lds
std
ffree
add
jns
movb
add
mov
add
add
or
in
push
add
insl
ret
js
imul
cmp
add
movsb
add
or
sti
add
mov
ficoms
mov
add
xchg
add
add
inc
std
inc
lods
mov
push
add
clc
addb
add
add
add
pop
mov
xor
cli
add
xchg
popf
stc
add
add
add
add
pop
pusha
add
rcr
jns
dec
scas
xchg
add
sahf
add
mov
inc
cmp
push
add
xor
mov
xor
imul
cmpsl
adc
mov
les
mov
add
in
push
mov
hlt
add
mov
add
add
mov
jb
pop
adc
icebp
adc
cli
dec
movsl
mull
and
mov
pop
mov
repz
mov
xchg
xchg
pop
push
jle
xor
xor
and
add
add
add
mov
add
add
mov
test
std
pop
mov
add
mov
loopne
mov
dec
or
mov
xchg
add
iret
pop
xor
inc
int3
or
add
inc
add
roll
mov
add
test
xor
inc
movsb
add
add
mov
mov
jge
jns
or
pop
and
sub
xchg
push
add
mov
hlt
add
add
inc
add
stos
insl
xor
outsb
enter
dec
loop
dec
dec
scas
mov
shrl
or
add
add
xor
hlt
add
std
xor
and
imul
cmp
adc
jmp
push
add
int
jle
jb
jbe
xor
inc
add
shr
ret
push
rolb
bound
mov
das
mov
jo
xor
inc
jge
add
add
lret
xchg
sbb
cli
in
xor
cmpsl
cmp
add
ljmp
pop
out
decb
loop
or
fwait
daa
pop
sub
pop
lret
sub
jl
and
outsb
mov
inc
lods
or
xor
sub
outsl
popa
push
add
add
sub
mov
dec
mov
push
add
xchg
add
xchg
add
add
cmp
lret
scas
test
pop
push
jl
xchg
out
fsub
pushf
dec
into
adc
sbb
jbe
push
add
lahf
mov
push
push
sub
lret
lret
pop
jno
dec
subl
loop
ret
aaa
jmp
cmpsl
je
push
dec
dec
jp
add
testb
add
loop
test
bswap
inc
add
scas
ja
nop
add
pushf
lahf
fcomps
push
mov
add
jo
jns
pop
cmp
and
mov
add
jle
add
stc
lods
insb
imul
test
iret
mov
xor
call
sbb
ljmp
jmp
subl
mov
add
mov
int
jnp
add
dec
sbb
add
add
testb
or
push
int
mov
faddl
or
add
fldl
movb
add
mov
mov
lahf
popa
jp
outsl
ret
je
imul
mov
push
cmp
xor
jbe
mov
es
daa
lock
adc
mov
add
mov
add
add
imul
add
cmp
xor
int3
push
stc
pop
mov
add
inc
jmp
pop
into
test
add
testl
int3
cmp
rorl
add
mov
mov
aam
mov
add
imul
lods
or
loope
add
add
js
pop
xlat
add
mov
jno
xor
js
imul
pop
fcmove
mov
mov
jae
add
mov
repnz
add
test
and
inc
inc
add
dec
pop
fdivrl
popf
jae
add
jb
imul
loop
push
mov
test
es
scas
lods
cld
shll
mov
xchg
add
add
jns
pop
mov
mov
das
shrl
adc
push
adc
adc
pxor
add
les
movb
add
mov
jecxz
add
scas
jbe
sbbl
test
add
add
cmp
cmpsb
add
dec
out
in
mov
nop
add
rolb
loopne
fld
add
push
sti
in
aam
loope
add
add
xor
xor
add
add
add
loop
pushf
push
push
add
arpl
jecxz
dec
adc
pushf
js
add
add
mov
cli
movb
aad
hlt
add
pop
xchg
maskmovq
inc
add
add
test
mov
add
rcrl
push
imul
ficoms
out
sbb
push
add
add
add
push
jb
pop
clc
push
add
jg
inc
add
mov
sbb
adc
sahf
jno
aas
mov
add
dec
icebp
loopne
subl
gs
add
add
add
add
stos
test
mov
add
aam
loope
out
mov
and
fwait
lret
add
repnz
add
fildl
add
fcoms
data16
fadds
mov
stos
jg
jae
addb
jg
add
push
mov
add
sub
sub
dec
call
jbe
fmulp
mov
bound
mov
sbb
outsb
mov
add
lahf
vcvtss2si
dec
arpl
add
test
aaa
and
mov
mov
add
add
cmp
dec
fcoml
ss
dec
in
outsl
test
add
clc
pop
or
xchg
adc
inc
xchg
dec
jno
add
add
movsl
jo
xchg
je
lea
add
push
das
test
add
add
add
add
lods
jge
xchg
daa
mov
ret
add
xchg
pop
repnz
aas
out
add
aaa
add
ljmp
mov
add
xchg
add
pop
mov
cmp
pop
jbe
pop
add
andl
push
add
add
jmp
or
xor
lock
dec
js
add
pop
or
sti
in
call
sbb
add
lods
and
addr16
add
jb
xchg
add
mov
jae
push
and
mov
cmp
data16
in
aam
lods
inc
add
in
out
das
add
mov
pop
hlt
add
popf
rcll
add
add
add
fwait
out
pop
pop
out
mov
cmp
add
lea
add
add
or
add
xor
dec
testb
lock
xchg
sub
push
add
aaa
mov
jo
outsb
xor
rolb
hlt
add
insl
and
xlat
or
add
add
loop
cmpsl
stos
mov
ret
xchg
xchg
add
testb
mov
in
in
das
iret
fmul
pop
scas
fadds
addr16
add
cs
add
mov
add
lea
mov
sub
jp
arpl
add
cmpl
fidivrl
fmuls
add
adc
add
icebp
scas
mov
xor
xchg
add
mov
adc
jp
add
add
mov
jle
cmp
rolb
sub
in
mov
mov
cld
cli
cli
push
inc
jb
xchg
add
sub
mov
add
pop
loop
ret
out
jo
test
push
cld
ss
xor
add
mov
add
mov
sub
add
pop
dec
dec
aam
test
sub
dec
test
cwtl
push
mov
adc
add
add
sub
bound
mov
add
push
add
add
add
or
mov
dec
push
add
inc
add
inc
add
or
fs
push
jp
or
pop
jmp
decl
inc
sbb
ret
cmp
dec
insb
imul
add
mov
add
add
add
add
imul
mov
dec
ds
dec
insb
in
pop
addb
data16
xlat
xchg
mov
xchg
add
ds
gs
jp
xchg
jae
push
and
ds
js
ficoms
add
addb
ds
cld
js
add
mov
pop
int3
add
mov
pop
shr
stos
mov
add
mov
push
pop
dec
dec
out
shll
rcll
js
out
stos
adc
iret
cmpsl
cmpsl
or
fsubl
test
je
adc
lret
add
addb
add
add
mov
sti
xchg
addr16
mov
stos
jmp
dec
jns
mov
push
aam
lret
test
int
add
and
add
add
jns
into
jo
icebp
ret
add
in
fdivrs
lock
into
cmp
cmpl
mov
iret
push
add
mov
bound
mov
jge
lret
daa
ds
mov
pop
push
add
add
mov
pop
cmp
int3
nopl
dec
mov
iret
dec
add
xchg
call
add
add
mov
mov
out
aaa
push
add
add
fldenv
movsl
mov
pop
xor
dec
add
fistps
std
jb
imul
add
fsubl
and
add
and
xchg
enter
and
mov
inc
nop
add
add
iret
push
add
cmpsl
pop
pop
pop
pop
pop
mov
test
add
mov
add
out
repz
and
pop
adc
push
add
cmp
inc
add
pusha
add
cmpsb
add
inc
add
push
push
iret
popf
add
pop
mov
inc
add
lret
shl
rcrl
pop
lock
add
mov
mov
push
add
movsl
fwait
jl
lcall
mov
repnz
add
out
pop
icebp
movsl
les
xor
sub
push
inc
add
push
add
aaa
lret
xor
mov
outsl
arpl
add
repnz
xchg
add
add
push
cmc
sub
loop
jo
xchg
and
add
add
sbb
add
add
bound
mov
mov
add
fnstenv
add
cmp
add
push
add
mov
add
adc
mov
lds
mov
aam
das
mov
sub
mov
stc
aam
push
out
and
mov
add
sub
add
mov
and
mov
iret
movb
pop
and
push
add
add
adc
aad
push
inc
into
imul
rolb
add
mov
popa
lret
inc
add
fldt
add
mov
loop
sbb
add
popf
pop
into
je
int3
push
add
sub
pop
and
cmp
xor
add
leave
inc
add
cmc
mov
lcall
add
add
lea
mov
xchg
mov
jbe
addb
add
mov
bswap
dec
mov
aaa
shl
js
mov
xchg
mov
or
cwtl
test
add
jl
pusha
add
jg
add
popl
jae
and
cmpsl
data16
jp
push
add
insl
xchg
sbb
add
add
lods
sti
hlt
add
pop
rcll
icebp
pop
ljmp
adc
add
mov
add
fdivs
push
add
jl
mov
add
cmc
pop
sti
insb
add
push
add
sbb
add
nop
add
pop
ljmp
add
cltd
pop
in
mov
push
not
add
ljmp
cmp
les
das
out
xlat
push
repz
jcxz
outsl
insb
or
lea
jl
add
add
pushf
jl
add
loopne
test
jnp
add
sbb
scas
inc
add
add
lds
add
inc
lods
test
pop
pop
jno
in
add
adc
les
mov
push
std
lds
add
mov
lods
cs
lret
adc
and
js
mov
dec
enter
add
out
cmpsb
add
fidivl
inc
add
add
das
outsb
xchg
pop
pop
popa
lods
mov
repnz
xor
add
ret
inc
jecxz
testb
add
aas
dec
xchg
dec
dec
dec
adc
add
add
pushf
pop
enter
leave
adc
mov
add
in
int3
aad
push
add
push
add
pop
popf
repnz
add
rolb
mov
add
xchg
mov
insl
pop
std
pop
pop
and
outsl
or
add
gs
push
add
loope
push
add
les
sbb
add
lcall
out
dec
popa
pop
inc
int3
ljmp
mov
jle
cmp
clc
mov
adc
lret
dec
lcall
add
add
pop
lea
add
pop
inc
add
rolb
rolb
std
push
add
add
movsb
add
pop
push
pop
mov
dec
dec
xor
inc
rcll
add
add
cmpsl
ds
cwtl
imul
lock
mov
mov
icebp
rolb
test
shrl
mov
mov
mov
add
push
dec
jg
adc
shll
add
mov
add
aad
insl
mov
push
add
loopnew
sub
inc
add
add
mov
adc
or
add
in
cltd
or
add
stos
mov
inc
fwait
cld
pop
je
pop
mov
in
cmp
mov
adc
jnp
xor
loop
movb
add
aam
push
add
mov
mov
mov
jmp
cwtl
add
add
popa
or
inc
push
add
ficoms
rolb
stos
stos
pop
loope
and
ficoms
es
mov
push
pop
jle
cmp
add
bound
mov
adc
mov
add
pop
shrl
and
push
add
jno
jmp
pop
clc
lcall
or
jo
dec
insl
add
cmpsb
add
adc
push
adc
xchg
fwait
jnp
out
xchg
add
mov
add
xor
sbb
cmp
aas
dec
mov
add
jno,pt
add
add
add
pop
js
pop
pop
or
mov
mov
mov
int3
push
add
sahf
mov
add
adc
fisubs
add
add
mov
add
out
and
add
push
add
jns
add
ja
add
test
pcmpeqw
add
add
sub
addb
lock
add
popa
xor
push
add
dec
int
subl
cwtl
lcall
cs
fdivrp
cmp
push
daa
jbe
inc
pop
daa
movsl
jb
hlt
add
in
iret
insl
daa
dec
lahf
jge
cwtl
jo
jae
inc
add
testl
into
xlat
gs
mov
add
inc
add
add
add
rolb
add
add
out
bound
mov
xchg
add
repnz
push
popf
lret
or
pop
push
and
sbb
add
stos
mov
icebp
stos
cmp
je
out
push
xchg
cwtl
inc
add
add
adcl
lahf
add
push
xchg
add
xor
dec
pop
pop
leave
mov
pusha
add
lea
add
add
add
add
sub
stos
fwait
mov
add
mov
add
out
add
or
out
add
and
or
mov
ds
push
add
add
fidivl
imul
rolb
add
xchg
add
mov
xor
add
jne
add
mov
add
jecxz
or
nop
add
add
adc
xchg
int
add
jns
add
out
mov
data16
iret
mov
cmpsb
add
dec
xchg
add
add
mov
popa
js
fcoms
mov
pusha
add
decb
lea
les
mov
sub
sbb
jg
jmp
add
ja
add
jmp
and
sub
mov
add
and
add
mov
add
cmp
jmp
add
sti
adc
jle
jno
sbb
or
add
mov
add
sub
sbb
repz
add
mov
add
or
jno
movsl
int3
testb
in
lahf
pop
cli
cmpsl
jo
fimull
xchg
add
add
sbb
ficomps
dec
cmc
pop
sub
les
cmp
cmp
cltd
outsl
push
add
add
add
mov
add
cmp
mov
leave
sub
mov
jp
mov
scas
jmp
gs
js
inc
add
fcmovne
xor
popa
std
fists
ja
dec
out
insb
repnz
addb
add
add
add
adc
jl
and
mov
xor
lds
je
jecxz
aad
add
popf
or
out
xchg
lret
add
adc
cltd
popa
pushf
xor
jb,pn
dec
mov
and
and
mov
addb
in
test
stos
cs
in
jnp
insb
and
add
pop
adcl
add
add
add
cmp
sub
dec
mov
push
cmpl
rolb
and
stc
cmpsb
add
imul
int
add
adc
pop
push
add
stos
lods
fstl
mov
push
add
xchg
add
add
add
or
inc
add
testb
into
jle
pop
inc
add
imul
add
or
test
les
cmp
push
add
push
push
add
add
dec
mov
mov
fsubrl
jbe
rolb
pop
call
rolb
jbe
xchg
add
testb
test
add
aad
inc
or
fucomi
jns
push
stos
jl
jl
and
mov
in
pop
cmp
xchg
sarl
add
pop
xchg
sbb
xchg
add
add
add
and
add
add
add
into
jo
fmuls
add
add
xchg
add
add
idivl
int
loop
rol
or
ret
clc
and
mov
mov
sbb
sbb
add
inc
lock
aam
sbb
push
add
aad
loop
jno
dec
cmpsb
add
dec
aaa
ficoms
imull
stos
ret
add
in
mov
incb
sub
fisttpl
in
xchg
add
imul
lock
mov
or
cltd
loop
ficoml
test
adc
jp
xor
add
add
movb
add
sbb
mov
add
test
sbb
hlt
add
push
fwait
and
add
cmpsb
add
testl
add
sub
addb
add
add
add
add
fiadds
cltd
push
add
add
add
pop
jae
add
mov
enter
xchg
add
add
and
mov
add
pop
sub
inc
and
jns
ja
lcall
cltd
sbb
or
add
mov
test
push
add
mov
testl
and
in
lods
sti
and
mov
loop
jo
dec
fisubs
movsb
add
dec
pop
inc
add
add
add
cs
imul
inc
inc
jmp
fwait
es
sbb
xchg
add
jns
in
mov
mov
adc
add
gs
and
add
cmpsl
jo
sub
add
pop
push
addb
add
push
add
test
cmp
push
int
add
pop
dec
add
cli
pop
into
ret
jl
das
dec
lret
xchg
mov
mov
inc
add
add
shll
sub
fstp
lds
add
je
inc
add
fidivs
adc
push
fnclex
add
out
lock
add
dec
mov
add
add
movsb
add
mov
pusha
add
test
push
xor
cmp
mov
mov
ljmp
xchg
xlat
add
add
add
and
and
mov
loopne
sbb
test
push
add
add
clc
xor
sahf
mov
add
or
add
mov
add
mov
jecxz
pop
jmp
xchg
and
add
push
add
int3
clc
cli
cmp
xor
and
and
inc
ja
lcall
add
jnp
adc
jge
add
adc
sti
add
fnstenv
adc
clc
jo
add
or
dec
sbb
outsl
pop
stos
int
add
add
rolb
xor
mov
mov
or
xor
xlat
enter
push
add
pusha
add
sbb
out
stos
insl
leave
xor
add
add
push
add
testb
sub
ds
sbb
jb
cmp
mov
or
add
add
add
mov
call
xchg
gs
stc
dec
gs
add
cmp
cmp
out
or
xchg
or
lods
loop
aaa
pop
cli
popl
jp
fwait
idivl
or
add
in
mov
push
add
mov
outsl
movb
aam
addb
fmulp
rcll
add
lret
mov
mov
cli
in
call
sti
addb
add
js
add
mov
daa
insb
mov
xchg
pop
pop
dec
mov
cmp
mov
xchg
pop
push
add
and
add
pop
cltd
ds
les
sub
add
adc
movsl
push
or
add
adc
sahf
aad
add
jmp
sar
test
jae
jns
in
jb
movsl
js
add
sub
out
sbb
push
outsb
mov
hlt
add
mov
add
pop
xchg
add
add
lahf
mov
add
xor
scas
repz
xchg
inc
or
pop
popa
add
mov
add
sbb
add
pop
lret
sub
scas
sbb
sub
mov
outsb
std
xor
inc
add
scas
sbb
jle
insl
dec
daa
adc
add
fisubrl
or
into
fcmove
mov
add
mov
add
push
inc
sahf
add
mov
lcall
data16
stos
ja
int3
call
add
xor
sbb
add
imul
add
jne
add
and
add
mov
pop
xchg
inc
add
jae
fwait
sahf
push
fists
add
dec
xor
xchg
dec
popf
inc
add
add
mov
test
icebp
mov
cmc
push
cmp
ljmp
dec
jp
push
add
pop
and
lea
xor
add
pop
mov
test
dec
push
push
jecxz
mov
fistps
leave
sub
fisubl
xchg
mov
add
mov
hlt
add
mov
pop
pop
add
inc
add
repnz
or
pop
out
cmp
add
add
mov
int3
fcmovu
cli
push
pop
iret
out
push
add
add
add
pop
rolb
in
pop
mov
rolb
jae
fucomip
xchg
iret
mov
adc
cmp
push
add
jbe
mov
je
fdivrs
lods
mov
add
loopne
push
mov
jns
mov
daa
cmp
add
sbb
or
add
mov
in
loop
sar
jo
pop
or
cmpsb
add
push
add
cmc
mov
insb
push
cs
mov
jl
lea
insb
push
add
mov
add
push
add
add
add
imul
movsl
adc
adc
xor
jo
sub
sbb
pop
cld
cltd
in
mov
mov
mov
add
mov
orl
rolb
cmp
dec
and
mov
add
and
jbe
add
add
loop
cmc
jns
insl
out
jo
push
or
pop
dec
rolb
in
arpl
mov
pop
add
sub
xchg
add
xchg
add
mov
mov
add
add
int3
repnz
movsl
xcrypt-ofb
cmpsl
jmp
movb
xlat
stos
xor
mov
add
add
add
add
test
mov
pop
xor
mov
daa
dec
sahf
lret
inc
add
jno
add
arpl
cmp
add
add
xchg
inc
adc
leave
cmp
sbb
cs
lcall
rolb
movsb
add
sub
setnp
stc
out
ja
xchg
jg
add
push
test
jb
mov
add
fisttps
pop
mov
inc
movl
add
stos
mov
and
mov
into
push
jmp
jne
cmpsb
add
add
inc
add
cmp
cmp
mov
xor
push
add
add
add
add
add
adc
gs
loope
push
les
lret
jno
out
mov
fisttpll
xchg
add
cli
outsl
cld
jno
cmpsl
sbb
cli
xchg
fadds
xchg
add
add
nop
add
add
mov
add
jl
add
add
xlat
jns
jmp
or
mov
and
add
jmp
jae
std
call
add
vhsubpd
or
add
mov
sbb
or
dec
not
add
pop
adc
add
adc
fmuls
add
or
add
jle
in
push
sahf
mov
mov
stos
hlt
add
movsl
pop
mov
lods
cmp
sbbl
fstpl
add
cmp
ss
add
adc
push
add
add
mov
sbb
popf
jb
push
sub
adc
push
add
fcmovu
scas
out
jns
add
add
pop
add
mov
add
push
push
add
pop
mov
add
xor
cmpsb
add
add
cmpsb
add
add
mov
and
mov
outsl
push
add
faddl
adc
pusha
add
push
gs
inc
mov
outsb
popf
mov
inc
add
mov
add
dec
jle
addb
pop
loop
leave
xchg
into
ret
add
add
outsb
sarl
adc
dec
xlat
xchg
mov
cltd
int3
cmp
call
add
fsubrl
cmc
fcmovnb
add
add
addb
add
or
mov
push
add
fisttpll
add
fmuls
mov
mov
aas
repnz
and
add
dec
cltd
cmp
adc
loopne
dec
insl
xor
ja
add
xchg
add
mov
add
add
clc
inc
cmpsl
push
xchg
inc
lds
movsl
aad
jg
pusha
add
add
pushf
xlat
imul
fs
cs
popf
cmp
xlat
mov
xlat
xchg
add
mov
notl
sub
dec
mov
add
test
push
lods
sbb
cmpsl
mov
push
add
mov
xlat
leave
cmc
sub
add
push
mov
stos
test
out
inc
add
sub
xchg
out
mov
adc
pop
mov
sahf
cld
mov
mov
test
mov
pop
movsb
add
popa
jmp
addb
das
subl
add
jle
push
add
adc
mov
scas
adc
outsb
lret
je
lahf
js
sub
cld
add
add
std
test
inc
xlat
add
add
add
mov
movb
add
dec
bound
mov
add
add
add
add
add
jecxz
lock
sbb
mov
dec
in
cmp
mov
jmp
add
lea
sbb
ja
jbe
jg
add
pop
dec
addb
xor
gs
mov
enter
lret
jmp
repz
inc
mov
in
mov
sub
insl
dec
rolb
pop
stos
hlt
add
mov
adcl
xor
movsl
adc
add
stos
rol
add
pop
mov
mov
insb
push
dec
or
mov
xchg
add
popl
add
add
into
loop
adc
and
add
add
into
inc
sti
imul
loopne
popa
jmp
out
or
xchg
lcall
jnp
add
xor
inc
add
fisubrs
pop
xor
icebp
sbb
mov
mov
add
push
loop
fdiv
imul
add
mov
sbb
sbb
repnz
push
add
cmp
push
mov
fisubrs
sbb
shll
jp
add
add
daa
movsb
add
fucomi
xchg
add
mull
add
movsl
mov
mov
add
push
add
mov
fbld
mov
dec
call
std
lret
rcr
jmp
dec
inc
jmp
adc
mov
push
ja
add
mov
cmp
mov
fistpll
ja
add
or
mov
or
add
add
loopne
mov
lret
fstpt
repnz
xor
ret
jl
ja
add
aaa
fcoml
and
clc
ja
jbe
pop
in
jecxz
sub
cmp
in
or
into
daa
pop
rolb
mov
push
add
ljmp
xchg
xlat
add
mov
add
into
and
mov
jecxz
movl
shr
mov
shll
xor
add
jp
push
add
dec
loopne
ja
xor
leave
push
add
pop
mov
jmp
adc
add
int
add
add
inc
add
adc
mov
pusha
add
daa
and
mov
data16
add
add
dec
inc
add
push
jecxz
out
cltd
hlt
add
lahf
add
mov
add
add
pop
mov
inc
add
adc
sbb
mov
add
mov
push
add
int3
mov
sub
add
add
jb
mov
mov
mov
xchg
add
sub
xor
or
dec
rcrl
add
jns
ret
addb
pop
or
add
int3
sub
xchg
add
movsl
lock
add
mov
dec
sbb
cld
fcoml
or
std
cmp
sub
data16
add
mov
xchg
add
leave
adc
insl
and
add
sbb
lea
add
add
cmpsb
add
add
mov
add
insb
jmp
mov
loopne
ret
sbb
push
add
add
mov
add
adc
xchg
add
sub
pop
mov
add
mov
outsb
push
test
inc
lcall
std
xor
adc
add
lahf
jae
fcomps
add
rolb
add
inc
pop
in
addb
xlat
lock
add
call
or
fsubs
clc
add
add
les
js
add
rcll
cld
push
mov
add
cmp
add
and
mov
push
add
add
mov
adc
cwtl
imul
inc
out
or
fcomp
je
mov
pop
filds
add
push
add
add
xchg
mov
inc
add
adc
dec
pushf
jb
arpl
mov
xchg
mov
ja
mov
push
add
jbe
in
rorl
adc
int
add
popf
inc
add
xor
or
or
add
hlt
add
addl
outsl
cmpsb
add
cs
dec
mov
add
add
and
push
push
jecxz
add
add
xchg
aad
push
add
add
jbe
mov
mov
or
sub
push
pop
pop
xchg
ret
arpl
les
jp
or
add
ja
add
insb
add
scas
mov
inc
add
nop
add
shll
add
add
mov
cmc
rolb
or
rolb
lea
add
and
mov
sub
push
add
int
leave
ljmp
nop
add
or
mov
jo
data16
jecxz
sub
outsb
adc
lods
mov
cmc
cmp
les
mov
add
aad
add
out
adc
mov
mov
int3
pop
pop
pop
sub
add
adc
cmp
lret
addb
js
mov
cmp
int3
ret
and
add
mov
add
lret
das
nop
add
add
add
mov
add
add
sub
or
sbb
add
outsb
jmp
inc
add
mov
xchg
jle
mov
add
jno
in
imul
ret
sahf
sbb
cli
dec
rolb
pushf
rolb
adc
adc
push
ja
add
add
add
add
add
fbstp
cltd
push
jp
sbb
add
lahf
aas
mov
jno
stos
jns
dec
or
dec
mov
cmp
add
mov
push
or
and
add
xor
sahf
out
fdivs
xchg
sub
cmp
sbb
xchg
add
pop
jo
jmp
inc
add
test
and
mov
sbb
repz
add
pop
mov
call
mov
jae
add
add
inc
arpl
push
jbe
lods
inc
add
add
mov
loop
sub
adc
add
mov
lods
mov
fcmovnbe
add
scas
or
add
add
dec
lcall
add
pusha
add
inc
add
test
movb
inc
mov
add
xor
adc
outsb
jl
pop
add
add
fdivrp
lds
mov
add
mov
push
add
add
rorl
sub
mov
jno
add
add
add
add
dec
testl
add
fsubrs
das
fsubs
mov
insl
cmc
int3
push
add
inc
add
mov
or
fstpl
ja
lods
jp
jg
bound
mov
add
in
or
xchg
es
fs
add
cmpl
subl
ds
ficompl
fcomps
add
in
or
pushf
cli
fwait
sub
push
add
add
adc
inc
ljmp
les
icebp
cs
pop
sbb
sub
and
pushf
das
mov
mov
out
fldt
stos
test
mov
sub
es
ficompl
add
int
rolb
jmp
add
cli
jno
lock
add
sub
and
imul
xor
lahf
xlat
test
add
rcll
pop
mov
pushf
mov
mov
xchg
sahf
add
xchg
mov
fnstenv
test
sub
mov
add
and
leave
jmp
sub
inc
add
add
insb
sbb
add
cmp
cmp
mov
sahf
sti
sahf
mov
sub
leave
das
in
inc
add
loope
and
insb
loopne
mov
addb
lcall
ds
insb
adc
in
inc
add
mov
mov
add
sbb
sub
xor
or
adc
nop
add
sbb
add
adc
mov
and
or
add
add
rcr
sbb
mov
mov
add
xor
adc
add
mov
scas
inc
add
mov
xor
out
inc
add
add
add
mov
inc
add
call
pop
sub
stc
gs
pop
aad
sbb
add
imul
aam
bound
mov
add
add
sub
sub
cmp
add
bound
mov
add
push
add
fcomps
push
push
lret
loope
mov
subl
gs
pop
adc
arpl
test
push
add
fcompl
cld
add
mov
mov
add
je
mov
out
xor
rolb
mov
push
push
add
fwait
subl
xlat
mov
add
mov
add
mov
bound
mov
ss
mov
add
mov
push
mov
add
add
mov
and
mov
sub
jno
adc
stos
and
mov
int3
neg
loopne
movsb
add
dec
xor
repz
lea
add
data16
scas
roll
sbb
xlat
dec
out
out
push
ficomps
jge
add
popf
sbb
or
lcall
add
add
rolb
cmp
into
dec
mov
add
inc
sub
imul
movsb
add
mov
add
out
test
add
call
pop
mov
pop
cmc
mov
mov
cmpsl
add
add
add
lea
pop
pop
push
jecxz
jb
xchg
mov
movb
mov
out
sbb
add
inc
add
mov
add
aaa
pusha
add
fldenv
scas
jp
jp
add
add
xor
inc
ds
in
cmpsl
add
mov
add
jns
xor
cwtl
xor
rolb
insb
xchg
or
mov
clc
add
mov
add
xchg
jp
xor
add
lds
add
add
stc
jbe
nop
add
jnp
add
mov
add
jg
jae
mov
push
add
add
add
jno
cld
dec
fidivrs
add
add
cmp
jne
push
inc
pop
or
push
add
iret
bound
mov
add
shll
ja
add
push
add
inc
cltd
in
cmp
jmp
mov
add
insl
bound
mov
add
sbb
xorl
cltd
int3
xor
jle
into
jne
add
dec
popf
cmp
cli
cld
sahf
gs
mov
xchg
cmp
add
add
add
fcomps
sbb
xchg
add
pop
popa
hlt
add
add
add
lods
rolb
pop
mul
add
ds
push
adc
add
xor
add
fidivrs
jecxz
or
push
cmpsl
xchg
add
xchg
loopne
stc
inc
pop
inc
add
stos
js
add
add
popf
add
lahf
sbb
jne
insl
sub
call
inc
add
int3
push
add
mov
mov
js
add
out
pop
cmp
test
add
add
add
out
test
add
add
add
mov
add
mov
mov
lret
leave
std
xchg
jbe
xlat
sub
or
movb
or
add
and
fimuls
cmovnp
cli
mov
add
add
aas
push
add
sbb
dec
inc
and
mov
sahf
pop
ljmp
xor
f2xm1
add
add
cld
les
test
push
int
add
rolb
mov
add
aas
rolb
push
add
jns
test
add
add
sbb
rolb
stc
lahf
movsb
add
incb
jg
insb
scas
popf
and
push
rcrl
cmpsb
add
xchg
add
add
add
test
fidivrs
push
add
cld
inc
rolb
xchg
add
or
add
scas
push
popa
adc
nop
add
out
aas
jno
add
add
gs
jb
cwtl
fldenv
insb
cmp
in
popa
int
add
inc
add
add
jmp
cmp
outsl
mov
loopne
push
add
jns
add
push
subl
rolb
inc
add
ja
mov
mov
push
filds
insl
jl
dec
loopne
add
mov
fdivrs
add
add
add
push
add
add
lret
mov
lret
add
xor
cmp
and
mov
js
xchg
lret
mov
add
adc
push
addb
add
add
inc
add
add
imul
or
insb
adc
jg
sbb
xchg
add
mov
mov
mov
pop
jbe
fsubrl
add
mov
cli
aas
mov
dec
sub
sahf
push
cwtl
xchg
and
icebp
out
and
sub
lock
jno
xchg
sahf
aaa
fcmovbe
std
in
pop
ds
add
add
in
add
push
sub
pop
ret
jnp
push
inc
pusha
add
add
incb
add
dec
xchg
cld
fisubl
faddp
adc
lret
add
inc
add
add
and
rolb
in
mov
add
les
daa
jge
mov
fisubl
add
fcomip
nop
add
add
add
xchg
push
outsl
fdiv
shr
add
sub
lcall
insb
adcl
or
add
movb
bound
mov
add
arpl
mov
add
xchg
xchg
pop
out
xchg
add
mov
lods
jno
add
lock
sbbl
xor
pop
movsb
add
sbb
add
enter
mov
addr16
iret
xor
jo
or
add
add
jnp
add
add
data16
mov
jp
add
add
bswap
shll
add
pop
cmp
lods
cmc
outsb
stc
lret
xchg
add
add
dec
loope
bound
mov
or
cwtl
add
adc
mov
add
add
sahf
repz
mov
or
mov
icebp
ds
cmp
jb
aam
ret
cmpsl
lods
xchg
add
ret
add
jbe
dec
setbe
in
rorl
add
add
add
add
add
imul
add
adc
pop
cmpl
xchg
or
xor
jo
add
xor
test
add
add
mov
cwtl
ret
jl
adc
add
icebp
pop
or
add
mov
mov
adc
add
add
jg
push
mov
les
push
ret
aam
pop
ljmp
mov
adc
dec
adc
xor
popa
push
add
loop
sbb
add
xchg
les
cmp
push
lods
in
pop
lock
sub
out
xor
stos
sarl
add
mov
aaa
call
add
add
push
add
xchg
xor
leave
dec
hlt
add
add
pop
jg
cs
cmpsl
jbe
jle
add
push
add
outsl
fldl
hlt
add
pop
cli
lock
mov
mov
sub
out
out
lea
xor
stc
xlat
pop
sahf
add
aas
lods
xor
dec
mov
std
mov
mov
xor
jg
call
daa
mov
add
testb
add
stos
dec
and
gs
arpl
mov
insl
cmpsl
cs
pop
add
dec
leave
cwtl
dec
fld
add
fwait
int
or
inc
add
add
push
cmp
xor
xchg
sahf
in
addb
roll
add
sbb
add
add
or
mov
mov
xchg
mov
inc
adc
insb
incl
cmp
add
stos
sub
xor
loope
pop
cmpl
pop
out
sahf
or
add
xlat
cmp
in
jbe,pt
sbb
add
std
cmp
adc
adc
add
add
das
cld
movsb
add
push
add
daa
rolb
add
sbb
add
mov
mov
add
or
test
lcall
gs
leave
rcrl
lcall
lea
add
add
add
movsl
push
add
inc
mov
push
add
add
dec
inc
mov
pusha
add
jg
iret
lock
add
std
pop
nop
add
daa
push
add
inc
add
icebp
js
sbb
jecxz
add
pop
out
mov
add
dec
dec
sub
add
pop
popa
jl
add
ret
xchg
fcomps
mov
outsb
pop
and
mov
test
and
mov
add
jle
fsubrl
add
mov
jecxz
add
fucomp
xchg
imul
mov
push
add
rorl
add
cmp
add
ljmp
add
add
mov
inc
into
pop
mov
or
add
dec
sub
add
or
lea
add
add
add
add
daa
idivl
punpckldq
mov
jbe
insl
sbb
in
sti
dec
ror
xchg
pushl
cmp
aam
movsl
sbbl
push
pop
sbb
add
mov
mov
lcall
push
pop
aaa
test
jp
xor
enter
mov
or
dec
loope
or
stc
out
loope
or
add
add
scas
lds
dec
cwtl
adc
aad
mov
imul
sti
jno
pushf
inc
add
add
shrl
jb
jg
dec
mov
add
out
mov
mov
add
or
mov
add
add
add
rolb
pop
out
cmp
cmp
add
in
aaa
test
rep
movsl
imul
mov
mov
or
pop
mov
inc
mov
sub
scas
dec
imul
add
movsb
add
fcomps
popa
mov
leave
repz
cmp
adc
jne
mov
ds
mov
and
ss
add
enter
add
cmpsb
add
lods
dec
dec
cli
cwtl
addb
cmpsl
nop
add
add
imul
je
sti
sub
int
sbb
cwtl
and
add
push
jecxz
add
lods
sahf
cs
ja
add
mov
aam
test
push
add
lret
sub
pusha
add
add
pop
pop
push
add
push
jle
dec
xchg
add
stos
jnp
add
add
cmp
mov
add
xor
repnz
jl
xchg
lret
cmc
arpl
sub
add
mov
addr16
add
testb
adc
dec
sub
scas
js
loop
mov
jl
mov
arpl
pop
nop
add
lock
inc
movsb
add
fsubr
ret
push
add
mov
adc
ljmp
add
add
push
pop
inc
add
add
pop
push
add
pop
aaa
popf
add
les
adc
add
jmp
add
cs
not
add
cmp
addr16
call
enter
add
fldcw
xor
andl
add
popf
and
add
add
add
je
sub
test
jne
dec
inc
insb
adc
add
decl
lret
mov
add
jmp
add
add
add
xor
xchg
add
and
scas
in
mov
inc
mov
sbb
and
sbb
add
in
loop
xchg
add
add
js
fdivs
mov
fnstenv
pushf
sbb
sarl
loope
sub
push
int
dec
repnz
dec
cmc
xchg
dec
iret
or
and
sub
stos
push
jmp
movsb
add
add
mov
push
add
sub
add
jle
adc
pop
out
mov
mov
stc
push
jae
fwait
loop
into
movsb
add
add
pusha
add
push
or
add
add
add
mov
int3
packssdw
and
std
or
adc
fisttpl
pop
inc
add
pop
jmp
sbb
pop
addb
add
add
scas
add
mov
les
push
push
add
mov
add
add
das
jns
fcomps
adc
mov
jmp
jo
test
jne
addb
repz
ja
out
xor
nop
add
pop
push
fcoml
inc
add
sbb
int
mov
mov
imul
repz
cltd
bound
mov
hlt
add
add
add
ja
add
movsb
add
addb
add
mov
add
push
add
add
lock
imul
add
add
jno
push
cmp
adc
add
push
pop
pop
push
add
mov
repnz
add
jecxz
testb
mov
mov
cmp
add
addb
and
mov
ficomps
add
ret
inc
mov
stos
loope
add
sbb
cmp
add
push
add
popf
mov
add
in
scas
imul
and
in
sub
add
daa
testb
dec
mov
add
add
lock
pushf
fstl
mov
jle
add
add
cwtl
or
in
cmp
inc
add
jne
adc
mov
out
jne
add
mov
xchg
add
test
and
add
push
and
push
repz
out
push
in
cli
mov
fisubs
add
mov
add
mov
nop
add
jg
add
cmp
mov
sbb
add
push
add
cwtl
cmp
repz
add
iret
test
add
mov
mov
in
pop
mov
pop
je
fistpl
add
mov
add
icebp
test
dec
aas
mov
mov
mov
cmp
loopne
cmpsb
add
dec
jno
jmp
or
jg
push
das
sti
add
xor
mov
movsl
dec
stos
push
add
neg
repnz
mov
xchg
add
xor
sbb
out
pop
xchg
sub
add
add
insl
aas
nop
add
mov
out
enter
jp
pop
testb
push
add
mov
scas
push
add
mov
add
jecxz
jbe
inc
mov
frstor
mov
add
adc
push
pop
add
and
sub
mov
or
xor
popf
sarl
mov
testb
cmp
add
add
mov
add
mov
mov
jns
test
sti
add
fsubs
push
add
add
cmp
mov
xor
lea
sbb
add
mov
add
pop
and
jne
push
mov
xchg
add
lock
add
add
add
add
add
inc
jmp
add
inc
add
jnp
arpl
ds
push
cmp
mov
cmp
aaa
add
xor
add
hlt
add
adc
jns
dec
ret
in
sbb
dec
incl
xchg
mov
jbe
outsl
xchg
aaa
inc
movsl
out
mov
sub
mov
inc
lods
hlt
add
scas
int
adc
mov
test
push
dec
dec
repnz
jg
adc
jb
sub
pop
fsubr
repz
add
mov
sub
inc
xchg
add
add
in
jae
ficoms
dec
int
add
add
mov
mov
add
scas
insl
or
add
adc
mov
push
add
xor
pop
scas
out
fsubrl
dec
jg
loop
ret
pop
cmp
add
stos
shll
add
sub
out
outsl
jbe
xlat
xor
cmp
mov
cmp
jae
pop
sub
dec
movsl
and
add
and
adc
xor
xchg
or
orl
xchg
add
aad
mov
pop
cld
sub
cmp
xor
pop
popa
push
add
mov
add
pop
push
add
add
out
add
sub
add
add
add
pop
ficoml
xlat
jno
add
addb
add
rolb
popf
daa
mov
xlat
les
dec
jnp
add
xor
inc
and
xchg
add
add
or
out
test
or
loope
add
xlat
push
add
ret
imul
hlt
add
inc
outsb
xor
mov
addb
rolb
ret
add
ljmp
mov
add
dec
xlat
sub
aaa
xor
filds
add
mov
add
and
add
push
add
mov
and
inc
add
data16
lcall
jge
pop
mov
mov
add
mov
xor
gs
mov
or
pop
js
add
add
cmpsb
add
dec
xchg
add
or
add
push
add
mov
scas
add
inc
add
roll
add
add
add
dec
pop
mov
loop
add
add
pop
enter
ljmp
add
push
pop
mov
add
add
add
adc
dec
faddl
add
add
mov
rolb
mov
mov
bound
mov
enter
dec
pop
xor
rolb
je
cmp
add
add
arpl
scas
xchg
dec
xchg
add
add
add
add
mov
inc
add
add
adc
add
add
cmp
sbb
xorl
lret
add
mov
mov
pop
dec
dec
xor
mov
add
xchg
mov
mov
push
add
xchg
fsubs
mov
testb
mov
mov
add
fucomip
arpl
or
mov
add
cli
push
add
xchg
imul
mov
add
inc
add
add
inc
xor
add
out
mov
daa
out
enter
icebp
pop
inc
jmp
test
jns
fdivp
fimuls
mov
dec
cli
and
enter
jp
sub
decl
imull
and
mov
add
xchg
add
add
mov
std
rolb
cltd
jmp
adc
mov
and
jae
mov
push
add
xor
mov
nop
add
cmp
push
sbb
ss
cwtl
dec
sti
push
dec
pop
in
mov
pop
ja
add
add
add
jne
push
das
sbb
movsb
add
add
add
pop
xchg
lahf
clc
bound
mov
mov
jnp
mov
les
add
sub
icebp
cmp
add
lods
movsl
insl
xchg
mov
add
aad
jl
jmp
inc
and
mov
add
add
add
add
insb
leave
xchg
xor
or
ret
mov
add
nop
add
add
add
or
cmc
and
add
cmp
sar
out
call
or
add
out
add
push
add
add
mov
movsl
mov
cltd
mov
push
mov
add
pop
jmp
push
xor
mov
mov
add
push
add
addr16
xchg
add
or
fistps
sbb
nop
add
divl
adc
nop
add
fnstenv
cltd
in
cld
sbb
sub
push
push
add
add
addr16
push
lret
loop
sub
mov
add
mov
test
mov
add
stc
xchg
pop
shrl
pop
mov
mov
mov
out
dec
iret
sbb
mov
fdivr
pop
mov
inc
fdivs
fnstcw
add
add
sbb
fst
add
mov
dec
dec
dec
mov
add
ja
add
lahf
mov
cmpsb
add
sub
in
mov
lcall
add
mov
fldcw
stc
sub
add
hlt
add
xchg
sub
repnz
push
add
add
inc
add
dec
jecxz
add
imul
sub
add
cmpsb
add
nop
add
es
rolb
out
pop
push
push
aam
add
add
arpl
add
mov
xor
lret
testb
add
sbb
cmp
out
add
add
testb
lcall
or
add
test
adc
fisttps
inc
jl
les
fbld
add
add
sub
mov
add
add
mov
std
xchg
add
add
in
cmp
add
loopne
loopne
lret
push
add
add
add
addb
into
cltd
dec
mov
scas
and
mov
mov
sbb
mov
fidivrl
mov
mov
sbb
cmp
mov
or
and
mov
add
add
add
add
mov
aaa
lcall
loopne
popf
xor
dec
or
mov
add
mov
sub
lods
sub
add
pop
aaa
fisubrs
cmpsl
xchg
jo
xor
movsb
add
add
push
push
dec
pop
xchg
jmp
add
sub
push
add
lahf
jnp
xor
hlt
add
add
add
lret
arpl
in
out
and
mov
fildll
sahf
testb
and
popa
in
rolb
data16
mov
ljmp
xchg
cld
mov
push
push
add
sub
add
sub
add
hlt
add
out
inc
add
in
imul
add
add
mov
dec
je
outsl
out
cmp
add
add
cmpsb
add
fdivp
add
lcall
xchg
xor
dec
pop
jb
mov
cmp
les
out
adc
xchg
add
inc
add
xchg
hlt
add
and
fisubrs
inc
ds
xchg
add
mov
jnp
push
jge
test
loopne
push
xchg
add
or
hlt
add
push
add
or
pop
mov
imul
xchg
add
movsb
add
mov
cmp
sti
or
add
lds
jne
add
jb
pop
inc
add
mov
mov
adc
jne
add
dec
mov
add
adc
push
add
add
mov
mov
add
mov
jbe
mov
add
pop
fisubrl
test
aas
or
jp
int3
pushf
pop
inc
add
add
add
sub
add
push
mov
or
fldt
push
add
cltd
cmc
mov
pop
js
add
addb
je
mov
mov
insl
in
std
gs
in
out
nop
add
dec
outsl
push
add
movsb
add
and
add
mov
rolb
dec
aas
pop
xor
add
mov
lods
push
jle
sbb
imul
sub
add
add
sub
mov
iret
dec
jecxz
mov
incb
add
jl
jno
cmp
jecxz
in
add
xchg
add
sbb
les
and
add
mov
mov
enter
add
push
cmp
adc
test
add
sahf
or
add
mov
add
sub
decl
clc
jmp
adc
add
add
dec
cmpsb
add
and
mov
adc
adc
sbb
add
mov
add
add
add
test
fisttpl
xor
inc
mov
pop
push
aaa
sahf
push
insl
xchg
add
xchg
cwtl
cmp
pop
loope
add
mov
mov
add
out
cld
mov
mov
imul
add
add
mov
imul
add
popf
fidivrl
jbe
jle
daa
bound
mov
mov
xor
add
and
mov
sub
add
mov
shll
mov
add
add
or
loopne
dec
jns
imul
hlt
add
add
inc
add
push
add
addb
add
add
push
lds
mov
repz
mov
add
add
xchg
add
dec
out
or
add
mov
aam
sbb
inc
add
add
add
adc
add
add
mov
xor
add
loop
jecxz
mov
fistpll
add
mov
aas
lods
pop
xchg
cltd
enter
add
mov
jmp
outsb
aas
pop
insl
add
mov
mov
add
xchg
xor
pop
clc
jmp
sub
jns
scas
fstl
jp
add
dec
sbb
pop
mov
inc
xchg
ret
mov
push
sbb
cmp
jbe
outsb
or
sbb
pop
sub
ret
jl
add
ja
jne
push
add
add
add
add
add
sub
jle
nop
add
jecxz
xor
mov
test
call
mov
dec
orl
add
cmp
lea
pavgb
cmp
cmp
add
dec
cltd
xor
jmp
add
mov
sub
add
mov
add
imul
add
cld
cwtl
sbb
jnp
mov
pop
les
or
out
mov
outsl
mov
shll
fwait
pusha
add
out
jns
dec
sar
pop
sub
and
shll
outsl
inc
add
leave
dec
xchg
add
jns
sbb
xchg
add
sbb
js
pop
movsb
add
mov
sub
pop
inc
add
or
fsubr
xlat
xchg
add
mov
pop
or
inc
addb
xor
inc
xchg
outsb
loopne
jp
fistpl
xchg
sub
test
add
add
add
hlt
add
xchg
add
outsl
dec
sub
addr16
mov
in
lahf
imul
add
add
inc
add
stc
adc
scas
aad
add
dec
mov
leave
mov
fcomps
clc
outsb
testb
pop
mov
cwtl
testb
sbb
add
add
add
mov
add
add
add
mov
imul
dec
dec
inc
add
push
pusha
add
add
dec
sbb
add
jl
loope
mov
bound
mov
mov
mov
add
js
add
mov
add
lds
bound
mov
sti
xor
jae
into
xchg
fcomps
rolb
movsb
add
mov
aad
add
sbb
xor
int
sub
push
add
adc
movsl
iret
scas
push
lea
in
testb
cmp
cmp
add
push
add
mov
pop
inc
pop
mov
lods
leave
sub
add
outsb
scas
fmuls
xor
add
or
pop
iret
loopne
lods
jae
iret
push
ds
add
mov
and
mov
loopne
mov
xor
insl
adc
push
add
rolb
sub
mov
stos
mov
outsb
push
dec
enter
add
ret
movsb
add
push
add
sarl
add
add
add
cmpsl
fiaddl
jno
test
jp
jbe
xchg
add
lret
scas
push
add
mov
or
add
sbb
jmp
jbe
or
adc
outsl
adc
inc
cmp
add
outsl
roll
add
std
ja
xchg
add
sti
fdivrs
add
stc
jg
aas
sub
add
mov
add
add
popa
in
add
add
mov
scas
pop
lods
jp
fiaddl
pusha
add
fdiv
loop
movsl
incl
ja
jb
mov
repz
add
add
das
mov
mov
int
jo
mov
or
loopne
dec
test
jns
jg
sbb
or
mov
add
xor
gs
cli
and
mov
jl
push
add
data16
int
leave
notl
xor
shll
sbb
add
sub
scas
leave
shrd
add
add
lods
sub
or
jns
xchg
mov
sbb
rorl
mov
jno
mov
push
add
cmp
or
inc
jb
cmp
and
dec
das
inc
add
and
lock
mov
nop
add
xor
pusha
add
add
shl
add
adc
push
add
sub
mov
int3
jb
sbb
mov
add
add
lcall
adc
imul
add
dec
push
add
ja
repnz
and
sub
sub
cmp
add
fistpl
or
add
add
cmpsl
cmp
nop
add
add
add
xchg
add
mov
or
js
sub
fldenv
xchg
pop
int3
mov
sub
mov
or
add
sti
insb
jno
add
ja
add
pop
jbe
push
arpl
inc
add
sbb
ds
add
jl
add
push
push
mov
mov
push
mov
in
inc
loopew
aad
inc
add
adc
fdivs
xchg
xchg
add
add
iret
or
push
add
jge
add
mov
cmp
mov
dec
test
cltd
enter
clc
push
add
cmp
ljmp
pop
dec
pop
push
cs
mov
test
add
and
mov
repz
xchg
add
cmpsb
add
addb
js
add
arpl
sub
ja
out
loop
jo
lret
add
mov
push
push
jbe
testb
add
sub
arpl
add
cmp
pop
fiaddl
xor
mov
leave
lds
xor
and
ds
or
inc
add
add
jmp
jl
add
in
or
add
add
mov
inc
mov
add
add
popa
adc
sub
add
jp
arpl
cmp
pop
rorl
flds
leave
imul
add
add
dec
daa
xlat
mov
add
add
and
in
call
add
add
test
sbb
add
add
dec
loope
add
dec
add
aas
sub
push
add
add
add
out
inc
add
add
jmp
movsl
shll
pop
mov
stos
cmp
dec
add
mov
xchg
add
bound
mov
aam
hlt
add
cltd
mov
aam
cmp
inc
pop
insb
push
insb
add
mov
lea
add
fadds
add
mov
add
jl
or
sub
add
push
add
fisttpll
or
scas
rolb
push
add
testb
loope
add
sub
lahf
cmp
movb
out
mov
ja
or
add
sbb
jl
add
mov
lods
rolb
pop
jmp
rolb
push
push
sbb
mov
aas
mov
mov
imul
mov
add
mov
nop
add
and
mov
sbb
cld
frstor
cmpsb
add
add
out
inc
add
mov
add
push
adc
add
xor
fisubrs
lahf
adc
xlat
decl
add
aad
mov
lcall
ds
add
add
push
add
out
mov
in
lcall
std
notl
add
add
sub
add
xor
out
push
add
bound
mov
add
sbb
push
in
lcall
cmp
test
imull
xchg
fdivrp
mov
cli
gs
fwait
push
sahf
pushf
sbb
add
lds
add
pop
add
mov
ljmp
pop
add
insl
pop
mov
hlt
add
cmp
dec
stos
inc
add
add
xrelease
movb
add
push
int3
inc
sub
insb
push
add
jp
jle
xlat
push
add
add
add
das
mov
scas
pop
addb
int
add
add
les
ljmp
gs
imul
test
cmp
test
cli
lods
and
rorl
add
add
lret
push
add
add
cltd
mov
xchg
mov
nop
add
out
testb
iret
mov
mov
or
add
add
add
cmp
jge
inc
add
testl
sub
adc
lods
jae
xchg
inc
add
cmpsl
xor
add
sub
movb
add
mov
push
incb
mov
and
add
add
ret
cwtl
inc
add
call
out
arpl
jle
fisubs
mov
inc
adc
push
add
add
push
add
loope
sahf
pop
popf
fiadds
scas
movsb
add
adc
data16
in
pop
movsl
xchg
stos
popa
out
loope
jo
sub
add
push
mov
add
mov
popa
outsb
push
add
rolb
rolb
add
in
mov
add
test
outsl
and
fiaddl
add
add
mov
add
mov
add
add
add
stc
push
add
leave
pop
dec
sub
mov
fcoml
jmp
cli
into
sub
out
xchg
push
add
add
add
lds
add
mov
add
loop
add
sbb
add
xchg
roll
add
sbb
add
fst
add
sbb
xchg
movsl
push
add
add
das
cmpsb
add
sbb
lock
add
add
stos
jmp
sbbl
lea
add
mov
ds
push
add
adc
mov
add
adc
add
push
sti
gs
rolb
aam
data16
add
cwtl
movsb
add
xchg
shll
add
and
mov
test
fwait
pushf
mov
ret
add
jnp
je
cmp
xor
add
cmpsb
add
cmp
add
rcll
add
add
cwtl
sbb
inc
add
out
sub
add
xchg
add
dec
adc
jge
add
mov
repnz
pop
shll
test
loope
sub
cmpsb
add
ja
add
push
not
cmpl
fsubs
stos
pop
roll
mov
clc
stos
xor
movsb
add
jmp
lock
popf
gs
add
mov
lock
add
push
add
add
mov
nop
add
xlat
add
add
rolb
sbb
into
inc
add
mov
add
add
testl
add
add
xor
mov
add
out
imul
add
dec
jb
idiv
inc
add
push
mov
xorl
mov
mov
xchg
mov
fnsave
add
mov
pop
mov
push
add
int
jg
and
add
jl
imul
add
xor
lcall
add
push
jae
add
xor
pop
add
mov
push
inc
add
sub
add
dec
and
mov
ret
mov
sti
in
dec
inc
add
pop
mov
dec
or
xchg
add
push
popf
aad
add
xor
xlat
sbb
push
dec
mov
add
add
dec
pop
icebp
fs
sub
push
cltd
or
mov
add
add
testb
add
sub
test
jg
clc
add
add
pop
fistl
ficoms
add
enter
ret
pop
sub
add
add
ja,pt
cltd
rcrl
cld
adc
xor
dec
and
mov
sbb
xor
out
add
int3
sbb
inc
popf
mov
out
xor
jno
add
loop
xchg
ja
push
add
add
add
add
add
inc
add
andl
add
imul
int
add
or
in
lods
insb
daa
jnp
test
stos
cmc
xor
rolb
stos
jns
pop
mov
dec
mov
pop
outsl
or
insl
xchg
mov
aad
shll
mov
mov
sub
add
add
push
add
mov
jnp
mov
cld
pop
fidivrl
add
mov
clc
and
out
jae
addb
sub
popf
lahf
pop
sbb
pop
js
add
sbb
add
out
lea
push
push
add
repnz
jp
add
xor
cmpsb
add
iret
fcmove
sub
pop
add
xchg
movb
les
pop
jg
gs
or
add
mov
scas
mov
lret
dec
dec
loopne
mov
aaa
mov
mov
pop
clc
mov
add
cmp
cmc
std
jmp
mov
fdivl
add
cltd
arpl
lahf
jb
sub
push
data16
mov
cmp
addb
enter
pop
push
add
add
push
leave
and
mov
add
xchg
add
pushf
sub
cmpsl
jg
popf
pop
and
xor
push
xchg
xchg
sbb
add
iret
lds
gs
mov
mov
sbb
or
mov
add
fwait
and
sti
mov
xor
xor
into
adc
xchg
roll
mov
add
and
popa
dec
mov
movsl
inc
adc
cld
add
add
movb
loop
or
add
xchg
cmp
add
xchg
mov
jnp
push
mov
outsl
cmp
xchg
das
inc
add
xchg
add
add
add
jg
add
add
sbb
enter
adc
sub
sbb
cmp
mov
add
lock
dec
jno
add
inc
add
fs
add
repz
mov
mov
mov
lret
pushf
imul
add
push
cli
pop
out
dec
pop
std
push
add
add
sub
add
jmp
add
add
or
inc
add
jecxz
add
add
add
cld
cs
insb
aad
add
lret
xchg
aam
sbb
in
testb
push
add
mov
xchg
add
daa
mov
lret
nop
add
mov
add
stos
mov
mov
or
add
xlat
test
mov
xor
ja
xchg
add
jnp
leave
aas
imul
mov
outsl
insl
in
xchg
add
add
push
add
add
repnz
pop
inc
pop
sbb
pop
push
add
dec
or
icebp
jg
add
cs
loope
lret
dec
popf
mov
add
jg
sub
dec
push
loop
cmp
mov
xor
int
lret
pop
push
add
and
mov
dec
ss
xchg
add
daa
int3
xchg
sbb
sub
pop
jmp
pop
push
add
cmp
jge
and
hlt
add
in
mov
fidivs
mov
mov
lret
add
add
or
xlat
pop
imul
lret
ljmp
mov
arpl
popl
mov
je
fsubr
jle
dec
xor
lcall
cltd
fstpl
add
add
add
add
ljmp
add
and
sub
or
pop
sub
sbb
popa
push
add
sbb
cmpsl
mov
cwtl
lcall
push
add
loopne
rcrl
add
and
js
pop
add
add
movsb
add
push
adc
xchg
mov
xchg
inc
add
xlat
xor
push
mov
xchg
add
add
mov
decb
cli
pop
mov
sti
dec
or
jecxz
cmp
mov
mov
inc
add
add
ja
add
xor
outsb
ds
add
inc
jl
push
add
lds
hlt
add
fisttpll
push
add
mov
int3
roll
add
cltd
in
add
mov
pop
out
adc
dec
cmp
jg
add
push
add
add
addb
add
testb
cmpsb
add
cmp
push
add
mov
loopne
aas
add
addl
daa
subl
repnz
add
in
cmc
je
xchg
jle
add
je
out
lcall
add
mov
or
and
cmp
dec
movsb
add
add
ja
add
cmpsl
add
add
insb
adc
and
sti
cld
mov
xchg
cmc
aaa
enter
lcall
scas
aam
or
add
jle
xor
xor
sarl
cld
inc
icebp
cmp
add
xor
mov
and
mov
test
add
add
jle
mov
add
test
test
add
add
and
mov
in
stos
mov
scas
aaa
std
jns
out
dec
adc
cs
stos
add
lock
sbb
add
add
scas
sbb
cltd
sti
mov
jle
stos
rolb
outsl
mov
addr16
mov
insl
mov
mov
add
pop
movb
sbb
mov
add
lret
or
mov
cmp
push
or
std
sbb
mov
adc
fisubrs
add
add
addr16
add
xor
js
je
int
sti
and
add
aas
mov
cmc
lret
icebp
push
roll
xchg
clc
cmp
push
add
aad
jnp
add
popa
cmpsl
or
filds
cmp
scas
add
mov
xor
push
add
iret
inc
add
sbbl
sbb
push
add
add
popa
inc
mov
repnz
add
mov
add
cli
hlt
add
cmc
fiaddl
imul
je
jnp
xchg
ret
jmp
pop
push
add
mov
add
inc
cmp
add
addb
ss
jno
int
add
movb
jno
xchg
push
dec
and
mov
add
testb
sti
out
jmp
xchg
add
clc
insb
xchg
lret
addb
add
or
into
jns,pt
mov
and
adc
loopne
ds
mov
xor
inc
add
sub
add
jns
or
mov
pop
loope
jle
jne
dec
pop
xor
ret
add
mov
xor
xor
add
cltd
movb
cmp
imul
mov
enter
adc
les
jl
jle
add
add
insl
out
pop
inc
add
jmp
add
gs
filds
add
add
lea
movsl
jecxz
jb
jle
dec
stos
xchg
mov
addb
push
jno
aas
out
pop
sti
push
add
mov
add
out
pop
mov
lock
rolb
xchg
fldenv
cmp
in
fucom
add
xor
cs
add
cmc
cwtl
ds
cmp
movb
mov
add
add
outsl
jecxz
in
add
jo
pop
push
inc
int3
stc
adc
aaa
xor
ja
add
add
rolb
imul
aad
daa
inc
add
ficoms
xor
add
cmp
add
add
xchg
stos
inc
add
push
add
mov
nop
add
mov
pop
lret
movsb
add
inc
add
mov
and
gs
cmpsl
push
mov
add
std
pop
out
or
sbb
mov
filds
mov
mov
add
out
pop
icebp
arpl
iret
iret
aam
imul
stos
int3
adc
inc
fildl
mov
add
add
add
inc
add
add
add
add
mov
ret
add
mov
mov
adc
dec
lret
dec
mov
add
mov
xchg
js
dec
lock
xchg
lret
ret
inc
add
jo
fnsave
addb
fsubrl
test
fiadds
pusha
add
xor
scas
inc
add
idivl
add
add
mov
push
add
mov
movsb
add
xchg
mov
repnz
addr16
add
fisttps
sbb
enter
xchg
add
add
stos
aaa
add
stc
mov
jbe
addr16
out
mov
lcall
mov
add
pop
out
das
movsb
add
push
add
ret
sbbl
inc
xchg
add
dec
pop
arpl
add
leave
add
mov
sub
mov
add
lods
das
jge
add
jmp
push
add
inc
movb
ljmp
int3
cmp
mov
sub
jne
ljmp
sbb
add
mov
leave
push
add
mov
imul
pop
jo
dec
sbb
xchg
xchg
pop
rolb
and
mov
add
pushf
jne
jbe
mov
pop
stc
push
add
jge
pop
lret
xor
or
rolb
hlt
add
mov
std
cmpsl
mov
sbb
inc
addb
lret
aam
mov
add
add
lods
dec
push
add
add
repnz
mov
ljmp
testl
rolb
inc
add
add
or
dec
or
insl
stos
in
jne
inc
add
xchg
add
jmp
bound
mov
stc
pop
lds
mov
pop
xchg
add
jp
add
push
add
add
inc
add
lds
das
mov
ret
add
int3
cwtl
and
mov
out
cmc
test
int
push
or
insb
js
sub
movsb
add
lea
xor
xchg
sbb
pop
jmp
add
pop
fstl
dec
rolb
xchg
popa
adc
pop
cmpsb
add
enter
add
sub
mov
pop
loop
add
and
repz
test
mov
addr16
pushf
iret
and
add
push
mov
xchg
add
dec
out
js
dec
sbb
add
add
add
popf
cmc
xor
adc
push
lret
pop
fidivl
mov
xchg
add
xor
mov
inc
js
push
xchg
lcall
in
dec
sbb
inc
add
out
testb
mov
movsb
add
stos
sti
dec
rep
add
addr16
or
sub
test
cwtl
pop
arpl
mov
cmp
cmp
mov
add
add
cmpsl
testb
add
rolb
adc
stc
fists
add
xor
push
das
ljmp
std
xor
add
je
xchg
imul
fistpl
xchg
add
add
leave
push
js
dec
fadds
jp
add
add
mov
cwtl
cld
js
add
lret
adc
add
mov
jns
jl
cmc
dec
jge
add
shr
ja
out
out
add
mov
sbb
add
add
xor
jecxz
daa
mov
add
pop
and
adc
jns
mov
scas
cmpsl
dec
sti
adc
jecxz
lret
test
add
iret
shrl
test
movb
jle
add
dec
pop
adc
add
stc
iret
ret
lods
dec
outsl
into
push
jle
insb
mov
scas
data16
or
mov
inc
bound
mov
mov
add
sub
or
out
js
xor
clc
cli
xchg
add
stos
ja
add
in
in
addb
add
xchg
add
dec
int
adc
pop
mov
leave
xchg
inc
add
add
test
test
cmpsl
test
push
cli
addb
popa
outsl
js
inc
mov
jo
sahf
add
inc
add
push
add
add
enter
xchg
add
addr16
sbb
jl
push
jno
xchg
int
dec
fimuls
mov
or
xchg
jge
jl
add
idiv
sbb
xlat
les
add
mov
mov
add
shll
add
pop
hlt
add
mov
add
push
sarl
lea
ss
sti
xor
mov
les
repnz
add
mov
out
popf
xor
cli
aaa
fcoml
jp
lret
pop
dec
scas
iret
sub
add
lds
adc
add
fwait
push
jbe
sahf
cli
hlt
add
aam
push
mov
mov
into
push
add
sub
popf
leave
inc
loope
sbb
imul
dec
push
add
add
mov
mov
arpl
adc
adc
outsb
inc
xor
pop
data16
mov
mov
add
dec
adc
loop
enter
out
mov
add
out
xchg
add
xchg
addb
mov
add
xlat
les
push
add
mov
add
popa
fsubrs
dec
jmp
ret
and
lret
add
cmp
cmp
cltd
mov
push
xchg
pop
xor
pop
addb
add
pop
jg
mov
mov
loopne
movsl
jno
mov
add
sub
ret
sub
jnp
add
xchg
out
rolb
rolb
add
scas
adc
add
lret
xchg
sbb
add
xor
repnz
add
stc
or
mov
out
lods
loopne
outsl
mov
movsb
add
fstps
or
lods
dec
mov
mov
adc
add
add
adc
pop
push
sub
push
add
std
mov
add
add
add
add
cmp
add
add
add
pop
mov
mov
cmp
sbb
add
dec
cmc
xchg
xlat
dec
and
add
bound
mov
dec
mov
mov
push
loope
sti
xor
inc
mov
addb
rolb
ja
jmp
jmp
lret
int3
daa
popa
jne
pop
daa
mov
out
fadds
mov
ss
cmp
add
iret
add
fnsave
add
mov
ret
dec
add
mov
mov
add
xor
add
add
mov
sbb
add
test
add
sub
daa
mov
stos
vmwrite
add
mov
add
add
shll
bound
mov
push
insl
sub
bound
mov
imul
mov
jb
cmpsb
add
mov
inc
add
adc
std
sbb
subl
aas
jecxz
sbb
insl
adc
mov
imull
add
lock
rolb
cmp
lea
pop
xchg
add
stc
cld
lret
cmp
add
dec
jp
add
pushl
and
rolb
sahf
cmc
and
add
in
mov
add
mov
add
push
add
loopw
in
hlt
add
loope
testb
dec
fdivrs
pop
xchg
test
push
add
divl
movb
cmp
or
and
mov
lock
leave
orl
ret
add
add
add
push
jnp
daa
cmpsl
mov
add
jnp
add
fcmovnu
scas
cld
stos
push
mov
adc
inc
mov
add
add
repnz
add
inc
add
imul
pop
pop
jae
leave
ja
add
add
stos
mov
xchg
add
pop
cmpsb
add
mov
xchg
add
add
xchg
add
dec
xor
push
ljmp
or
cli
fwait
rcll
mov
xchg
jl
add
jne
cmp
cmpsb
add
jmp
push
imul
add
or
cmp
and
mov
push
dec
or
insl
adc
inc
add
add
add
outsl
adc
push
adc
fs
jecxz
add
mov
add
add
or
popf
add
subl
fisttps
in
xchg
and
ret
imul
call
add
sbbl
pop
and
jns
scas
xor
sarl
pop
adc
sub
sbb
popf
sbb
jle
mov
jle
add
add
push
add
xor
push
add
add
push
push
add
cmp
mov
inc
add
adc
cmpsl
or
push
aas
stos
dec
pop
xchg
add
add
or
mov
xchg
sub
pop
add
loopne
push
add
enter
xchg
sarl
ret
mov
pushl
sbb
push
add
add
mov
mov
popa
add
mov
add
adc
cli
addb
outsb
fwait
int
clc
ds
add
sub
sti
out
js
push
add
testb
add
and
dec
jbe
paddq
mov
pop
adc
fistl
add
testb
mov
pop
nop
add
lods
aam
jecxz
sti
lcall
add
es
out
fimuls
les
dec
scas
push
inc
add
mov
jge
fimuls
mov
sub
or
movsb
add
add
add
outsl
or
dec
fistpl
cmpsl
out
lods
jp
and
fsubrs
add
jnp
movsl
and
sbb
adc
add
cmc
pop
loopne
xchg
push
add
sub
aad
and
mov
cmpsl
ja
adc
movsb
add
xor
fsubr
test
jnp
ljmp
test
add
inc
cmp
sbb
add
inc
add
add
aam
movsl
jl
add
mov
or
jle
sahf
lock
out
adc
add
fstpl
sbb
mov
push
call
xchg
add
ret
sub
pop
mov
lea
fimull
fdivr
dec
out
xor
jle
fnstcw
dec
test
testb
cld
nop
add
xchg
add
aad
mov
cli
inc
add
add
add
mov
insl
cmp
xchg
add
int3
pop
inc
add
cmp
jmp
or
lea
fsubl
push
cmp
add
cmp
add
aaa
mov
and
add
mov
das
jp
add
add
xor
cld
add
cs
cld
lret
lahf
lahf
sub
add
testb
add
arpl
mov
movb
mov
inc
add
or
enter
fmul
jmp
add
add
addb
add
mov
sub
jl
shr
jns
repnz
lret
inc
add
rorl
mov
or
ret
pop
mov
enter
out
sti
adc
mov
add
cld
call
add
daa
pop
lea
rolb
stos
cli
push
add
mov
out
testb
cmp
push
add
add
add
add
stos
xchg
add
cmp
xor
ds
adc
mov
mov
jae
cs
dec
xor
daa
dec
bound
mov
add
push
cmc
ret
repnz
add
cmpsb
add
add
fadd
xor
push
adc
add
add
pop
inc
add
add
jno
or
scas
or
add
test
daa
imul
shll
pusha
add
and
add
sub
add
push
add
test
shrl
les
jg
adc
sbb
xchg
pop
sbb
jne
int
lds
add
add
jg
add
add
adcl
in
addb
add
lds
sti
mov
add
or
xorl
in
fwait
adc
shll
cmpsb
add
data16
adc
inc
add
xchg
fwait
bound
mov
aas
xor
shrl
loop
cmpsl
sub
add
mov
add
outsb
jl
add
or
inc
add
add
add
add
add
rolb
or
das
xchg
pop
cmpsl
test
xchg
dec
and
add
mov
rolb
mov
decb
scas
jbe
pop
ds
dec
mov
scas
dec
pop
test
add
and
mov
add
add
jecxz
addb
add
mov
mov
stc
dec
push
jnp
rolb
loopne
addb
mov
enter
add
add
out
sbb
das
jb
test
enter
add
and
sbb
add
add
add
lret
jne
movb
sbb
add
gs
push
leave
jae
add
add
insb
cmp
hlt
add
xchg
out
dec
pop
mov
pop
jmp
cmpsb
add
add
inc
test
bound
mov
dec
dec
push
add
flds
jle
inc
add
add
xor
inc
icebp
insl
push
add
lcall
pop
jecxz
stos
cmp
mov
add
cmp
test
out
sbb
add
add
add
xlat
dec
ljmp
movb
imul
ret
mov
out
mov
in
scas
stc
mov
add
mov
mov
xchg
push
add
mov
dec
add
rolb
dec
fwait
push
imul
mov
dec
and
and
ret
dec
mov
int3
mov
add
mov
jmp
data16
xchg
cltd
fistpl
add
testl
mov
add
pop
in
daa
gs
lds
add
data16
les
js
or
dec
mov
pop
sbb
add
clc
pop
into
rolb
add
cs
out
imul
sbb
int
jle
xchg
add
xor
mov
fidivs
add
mov
cmp
pop
pop
vpsrlq
mov
jo
mov
jge
jecxz
das
inc
add
and
daa
sub
sbbl
cmp
mov
aaa
js
inc
add
iret
leave
cmc
jno
add
xchg
movsl
pop
das
addb
lahf
stos
mov
sbb
fstpl
add
movb
je
movb
cwtl
push
push
in
inc
mov
mov
inc
add
inc
add
popf
push
mov
push
add
cmp
das
mov
mov
sub
dec
mov
pop
mov
ljmp
js
inc
fdivrl
add
add
sub
adc
mov
add
outsb
nop
add
add
push
add
mov
xchg
push
add
add
add
and
add
add
xchg
xor
loope
add
add
add
add
xchg
lcall
add
add
bound
mov
dec
cmp
add
xor
jmp
push
add
xchg
add
jno
fs
inc
add
dec
adc
repz
push
xchg
add
int3
sub
add
add
inc
add
rolb
orl
lahf
and
mov
pop
cmpl
add
add
jle
adc
mov
sbb
add
add
testb
add
cltd
mov
add
aam
inc
int3
lods
pop
jns
add
in
jmp
jae
mov
popa
daa
sub
adc
sub
mov
add
add
clc
das
dec
xor
outsb
ljmp
or
and
repnz
sub
insb
push
jns
mov
and
add
jp
iret
push
and
out
and
jg
pop
inc
add
fucomip
sbb
add
divl
sbb
add
add
mov
gs
loopne
push
add
mov
add
sbb
xor
xchg
popa
or
jp
jbe
pop
mov
loop
sbb
add
add
add
jne
xlat
jb
inc
add
mov
cli
jae
loop
loopne
int
jl
xor
add
add
jb
mull
add
push
add
mov
mov
aas
and
mov
popa
cmp
mov
add
add
cs
mov
int3
pop
shrl
mov
push
jl
add
out
add
mov
stos
xlat
gs
mov
sbb
scas
mov
add
sub
fnstsw
daa
loope
addr16
sbb
cltd
jo
push
add
stos
test
mov
mov
arpl
add
add
and
mov
out
pop
movsl
outsl
pushf
enter
sbb
mov
ret
aam
pop
adc
mov
insb
push
add
inc
push
mov
mov
adc
mov
push
mov
jecxz
add
jbe
into
cmp
iret
rolb
push
xchg
inc
add
cmc
push
in
inc
add
mov
add
icebp
mov
add
add
shl
or
add
jns
add
ds
bound
mov
lret
dec
push
add
push
add
add
add
rorl
push
test
add
add
ret
fbld
mov
mov
pop
inc
add
lcall
cmpsb
add
cld
cmp
pop
mov
mov
stos
sbb
or
mov
sbb
add
mov
push
mov
cmpsb
add
adc
push
cmp
das
and
mov
add
cs
icebp
sub
daa
mov
add
xor
or
and
mov
jae
les
dec
mov
add
add
add
rolb
pop
jb
data16
add
insl
loopne
adc
les
mov
arpl
add
insl
xor
add
add
add
xchg
add
fs
lock
and
mov
add
mov
into
adc
push
or
push
add
add
mov
mov
add
add
test
and
jno
sarl
mov
mov
lods
pushf
mov
movsb
add
and
and
mov
sub
dec
testb
dec
imul
jnp
adc
add
inc
add
sahf
xlat
add
jb
daa
cltd
xchg
add
outsl
pop
push
add
add
mov
cld
mov
add
addr16
add
imul
mov
push
fsubl
stos
rolb
dec
sub
add
add
add
into
popa
inc
add
adc
jbe
jne
add
rolb
add
inc
add
imul
add
mov
add
add
test
push
push
pop
inc
pop
pop
int3
xor
stos
pop
inc
add
jge
stos
mov
in
fst
add
add
hlt
add
dec
push
add
enter
xlat
sbb
push
add
mov
sub
mov
into
std
incb
add
add
add
mov
ret
dec
push
add
ljmp
add
add
xchg
clc
lret
outsb
xlat
dec
mov
xor
sbb
leave
sub
out
add
add
sub
mov
push
cmpl
and
and
adcl
add
lret
mov
mov
add
fdivrs
add
addb
mov
pop
rolb
jecxz
jb
in
icebp
cmpsb
add
mov
rolb
sbb
add
inc
mov
cmp
pushf
push
sti
mov
and
pop
cld
pop
jns
mov
push
add
addb
pop
or
mov
ds
iret
jle
add
add
push
jno
in
lock
xlat
fxch
sti
pop
dec
pop
sbb
lds
inc
add
roll
sbb
adc
xor
ljmp
scas
lret
lret
jne
sbb
mov
sub
arpl
add
add
add
add
add
mov
xchg
adc
daa
or
test
add
or
mov
dec
stc
movb
call
fimull
fwait
lret
mov
ds
add
fwait
iret
rolb
popf
mov
mov
out
icebp
iret
and
add
call
and
mov
add
add
jge
add
ds
jo
scas
mov
add
lods
xlat
cmp
outsb
rolb
in
dec
push
add
imull
int
add
add
xchg
pop
daa
out
stos
jo
jnp
pop
lds
out
ret
and
mov
push
add
cltd
pop
mov
shll
mov
mov
pop
sub
popa
add
add
lret
pusha
add
xchg
rolb
dec
out
add
pop
jae
pop
sbb
into
dec
imul
adc
xchg
pop
jl
or
push
add
leave
dec
testb
mov
and
mov
in
xchg
clc
push
add
addl
div
adc
mov
mov
mov
jne
add
add
rcll
pop
xchg
add
insl
jne
and
mov
add
add
movb
add
adc
stc
jo
scas
add
dec
addb
mov
dec
jnp
mov
pop
in
add
push
add
xor
mov
cmp
add
rcll
add
mov
test
xchg
sub
cmp
addb
add
pop
ret
mov
inc
sbb
push
mov
sbb
xchg
jl
xor
cli
jge
outsb
sub
push
das
clc
stc
rolb
sbb
add
aaa
push
mov
inc
pop
jo
testb
cmc
loop
inc
in
sbb
add
frstor
mov
fsubr
jns
into
in
test
sub
cld
lret
enter
add
add
mov
sub
lods
insb
je
popa
addb
jp
fisubrl
popa
and
mov
jno
gs
push
pop
movsl
sbb
add
mov
cli
xchg
add
mov
add
lds
sbb
xchg
add
add
add
cmpsl
sub
lods
jae
out
dec
xor
add
xchg
fsubrs
shll
data16
add
lret
cmp
add
add
mov
lds
mov
adc
pop
mov
add
mov
rolb
push
add
fisubl
add
push
push
add
mov
cld
lods
dec
sahf
ficomps
cmp
cmc
arpl
aam
and
ret
and
inc
add
rcll
or
add
push
add
add
or
mov
sbb
jns
cmp
add
dec
push
add
xchg
rolb
aas
dec
stos
lcall
daa
das
pushf
add
cmp
lds
jecxz
mov
add
mov
jmp
add
test
fistpll
fnstsw
mov
cmp
mov
insb
into
lcall
mov
bound
mov
add
mov
lea
lret
ja
pop
sbb
imul
add
aas
repz
in
add
pop
lock
mov
pop
and
mov
cmp
mov
jecxz
add
addb
rolb
jg
mov
ds
js
add
push
sbb
mov
shll
bound
mov
sub
cmpl
mov
inc
add
mov
mov
add
sub
dec
lods
outsb
sub
std
xchg
add
adc
cs
add
mov
jecxz
pop
adc
or
add
das
pusha
add
xchg
outsb
lahf
lods
mov
add
or
sub
arpl
pop
xor
addr16
mov
mov
add
rolb
and
add
mov
cmpsl
add
add
test
sub
test
inc
add
add
pop
stos
add
mov
add
les
imul
mov
leave
lds
sub
add
add
out
xlat
cmc
daa
les
mov
inc
add
xor
jb
push
add
loopne
pop
mov
or
add
mov
xchg
cmp
add
fidivrs
fisttps
movsl
lahf
lret
lods
sub
orl
sub
add
add
and
mov
sub
lds
pushf
fldcw
imul
add
gs
mov
in
sub
push
add
int
inc
add
lods
dec
std
jae
add
jno
cli
pop
and
loopne
jae
pusha
add
hlt
add
iret
xor
xchg
add
xor
inc
add
mov
pop
jle
cmp
loop
or
add
add
add
push
dec
mov
cmpl
or
mov
bound
mov
iret
fsts
xor
add
add
add
aam
popf
mov
jnp
lahf
inc
add
pop
pop
dec
iret
movsl
addb
lret
add
xchg
movsb
add
add
pushf
dec
int3
jnp
add
push
add
cmp
mov
sub
sub
iret
jl
jns
cmpps
addb
lods
and
fisubrl
adc
ds
lahf
xchg
add
stos
push
dec
push
add
cs
mov
mov
inc
xlat
xchg
add
add
xchg
add
add
lret
add
adc
add
loopne
mov
jl
mov
xor
sbb
mov
data16
add
cli
loope
xchg
add
mov
mov
sahf
ds
add
gs
test
cmpsl
aaa
movb
add
add
adc
cmp
add
dec
stc
jmp
shrl
add
add
inc
add
loopne
cmp
mov
sub
out
arpl
add
or
add
cmc
outsl
pop
add
sub
arpl
add
and
mov
dec
out
sbb
add
pop
lock
das
pop
add
add
mov
add
add
lcall
add
jne
das
sub
add
or
add
gs
lcall
mov
mov
sarl
add
test
fstl
add
mov
pop
cld
add
add
mov
lods
sbb
and
rolb
cmpsb
add
cmc
and
mov
or
add
mov
pushf
lock
mov
lret
jo
out
inc
xor
add
add
jb
fnstcw
push
push
cmpsl
push
addb
add
sub
mov
adc
popa
clc
push
jmp
sbbl
push
addr16
xor
rorl
add
pusha
add
dec
cltd
insl
ret
and
mov
stos
gs
push
add
xor
mov
dec
adc
add
mov
add
fidivs
add
rolb
or
mov
sbb
mov
add
add
dec
or
add
rolb
jno
popf
into
jp
pop
test
pop
cltd
mov
add
mov
add
add
jp
add
mov
add
and
cmp
add
mov
sbb
sub
xchg
add
cs
push
add
add
add
addl
and
stos
pop
iret
mov
add
push
add
in
jle
gs
outsb
cmpsl
addb
pop
imul
cwtl
mov
xchg
mov
add
sbb
mov
test
pop
adc
pop
dec
pop
mov
shll
push
jmp
add
cmp
adc
mov
add
add
xchg
insl
loope
add
and
mov
mov
add
incb
pop
dec
dec
test
add
into
test
push
add
testb
add
and
mov
add
mov
mov
loope
add
mov
ret
cmp
out
sbb
dec
pop
pop
xchg
xchg
sub
mov
push
loopne
or
xchg
leave
adc
cmpxchg
bswap
cmpsb
add
std
dec
iret
adc
xchg
push
add
jl
movsl
or
into
dec
mov
cmp
loop
xchg
add
add
ret
loope
adc
cwtl
imul
xor
clc
adc
add
mov
loopne
fadds
mov
sub
mov
add
add
cmp
add
decb
cmp
jbe
sbb
cmc
scas
cmp
xchg
add
push
add
mov
mov
loopne
sbb
add
mov
je
mov
mov
or
movsb
add
add
add
dec
dec
inc
add
or
xor
inc
bound
mov
imul
adc
dec
xchg
add
into
push
sbb
hlt
add
test
add
fdivrs
push
add
add
mov
nop
add
add
