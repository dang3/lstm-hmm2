mov
add
or
je
mov
mov
mov
dec
mov
pop
loopne
mov
in
xor
mov
mov
dec
rolb
cmp
xchg
or
js
push
fwait
xchg
mov
test
add
mov
xor
jo
mov
dec
je
xchg
add
out
push
add
es
xchg
lea
ja
xor
aad
in
imul
xchg
sub
nop
add
test
pushf
dec
inc
mov
lods
popf
imul
add
pop
fdiv
addr16
ret
adc
mov
out
lahf
pop
fisttpl
push
fisttps
sahf
fiaddl
test
mov
das
jge
leave
or
aad
insl
jae
pushf
enter
and
pop
push
add
cmp
mov
mov
outsl
or
in
xchg
mov
lods
adc
mov
xchg
mov
push
mov
push
xchg
outsl
dec
lock
insb
and
xchg
pop
pop
les
in
jle
add
mov
fs
movb
xchg
outsl
in
vpaddusw
mov
mov
js
inc
adc
insb
or
xor
mov
icebp
popa
ficompl
add
pop
mov
enter
push
add
into
hlt
outsl
cld
fnstcw
dec
xchg
add
out
in
pop
push
addb
out
mov
loop
mov
xchg
add
jp
inc
mov
lret
in
or
jg
out
outsb
jmp
xchg
mov
mov
jg
pop
int3
in
addb
rolb
mov
add
inc
in
ja
add
add
adc
mov
add
jns
sub
xor
je
ja
call
push
add
cmpsb
call
add
add
js
mov
addb
mov
test
movsl
push
es
cmp
enter
jecxz
pop
xor
mov
arpl
ret
cmp
mov
faddl
fidivrl
das
mov
fistl
fimuls
dec
clc
fildl
add
aas
imul
sub
imul
xor
stos
lret
lcall
pushf
and
fldenv
add
xlat
outsb
jl
sub
jmp
leave
ljmp
xchg
fmuls
add
mov
cld
jne
ror
data16
mov
loopne
mov
push
dec
in
add
das
mov
stos
xchg
add
fwait
cs
pop
jle
lock
ret
pushf
stc
repnz
mov
por
or
push
and
lret
movsl
mov
push
add
mov
sbb
fcompl
add
fcomip
insb
push
sti
ret
iret
or
push
cwtl
jle
mov
jns
test
xor
mov
adc
sub
jl
test
jne
stos
pop
stos
sbbl
add
add
add
mov
rolb
mov
mov
push
add
daa
jae
push
mov
add
shll
out
adcl
lods
pop
fisttps
repz
jne
pop
mov
add
cmp
add
mov
add
stc
ljmp
clc
das
push
ljmp
das
xor
mov
mov
or
push
add
adc
mov
enter
and
mov
add
int
mov
popa
xor
add
mov
scas
adc
mov
mov
loop
mov
pop
xchg
xchg
add
fbld
sub
pushf
add
sbb
or
add
add
mov
add
fs
add
nop
add
jecxz
lcall
mov
cmp
stos
lock
icebp
lds
inc
cmp
pop
inc
push
enter
mov
xor
xchg
sub
cli
ja
push
cwtl
lea
mov
mov
imul
lods
mov
add
into
jbe
fsub
decl
ja
xchg
add
pop
xchg
dec
les
adc
test
add
test
add
orl
mov
sbb
mov
movhps
repz
mov
sbb
push
sbb
cmpsl
out
ficompl
add
mov
adc
mov
xchg
stos
fstps
setno
cmp
inc
add
pop
adc
int3
cmpsl
fldt
mov
add
pushf
mov
push
add
xor
repnz
je
add
mov
out
mov
out
fcomi
sti
stos
cmp
jbe
push
stos
mov
in
inc
lock
xor
lea
dec
sbb
dec
xor
mov
add
mov
pop
push
adc
adc
add
xlat
jle
pop
icebp
dec
jo
mov
ljmp
or
es
add
inc
add
clc
inc
mov
icebp
jae
stos
or
push
mov
sub
and
mov
test
fmul
sbb
stc
pop
pop
hlt
insb
rolb
ret
sub
pop
mov
add
mov
pop
and
or
push
ret
ja
in
ss
push
pop
addb
ret
xchg
xchg
add
daa
addr16
mov
add
mov
stos
push
cmp
xchg
pop
sbb
ja
in
mov
xor
mov
iret
ficoms
add
add
loopne
mov
aaa
sbb
mov
mov
daa
mov
inc
mov
cli
jnp
loope
mov
mov
popf
lret
add
adc
jbe
add
dec
pushf
scas
mov
test
and
add
aas
jnp
outsb
xor
sbb
sub
add
add
mov
mov
lock
push
test
mov
and
jp
jg
xchg
mov
or
arpl
jnp
add
mov
fcoms
add
inc
sbb
or
cmp
mov
add
dec
mov
add
adc
mov
inc
add
adc
mov
popf
je
testl
icebp
mov
fs
jnp
fimuls
xchg
sbb
jb
mov
scas
fidivs
mov
in
jg
pusha
add
add
shll
loope
repz
stos
out
addb
ja
add
mov
hlt
pop
push
add
dec
aas
sub
rolb
mov
inc
imul
mov
and
in
xor
or
inc
popl
popa
jg
adc
mov
and
xor
mov
or
mov
ffreep
add
and
sahf
mov
loop
mov
add
test
insl
lods
cmp
sahf
inc
add
lret
mov
mov
xchg
and
add
mov
divl
cmpsl
push
dec
jno
jo
mov
mov
add
jne
add
xor
into
bound
mov
mov
jo
mov
inc
test
mov
scas
in
push
cmpsb
outsb
add
add
sub
out
les
sub
pop
out
xor
mov
in
fsubrl
add
jmp
mov
into
add
mov
sbb
outsb
stos
adc
aas
loop
mov
xchg
sub
add
shl
addb
outsl
xor
stos
test
fs
mov
push
or
push
lods
xor
add
xor
mov
cmp
mov
add
mov
pop
push
adc
mov
sar
sbbl
mov
dec
jle
sub
movsl
sub
repnz
push
xchg
loope
sub
dec
std
movsl
fstps
fisttpll
jb
mov
ss
icebp
push
add
mov
mov
push
push
outsb
aaa
int
out
ficompl
add
mov
add
xor
mov
jg
cmpsb
add
adc
scas
in
mov
lret
and
push
xchg
add
cmp
ja
fs
xlat
cmp
mov
loop
mov
ja
test
mov
xor
mov
test
xchg
rolb
pop
mov
xor
popl
add
out
popa
js
add
add
jle
addl
add
xchg
pop
inc
add
mov
mov
dec
or
aam
jecxz
add
inc
add
push
not
inc
aas
cltd
outsl
sbb
pop
push
frstor
adc
push
sbb
mov
add
lcall
rorl
cmp
pushf
push
and
mov
add
mov
stc
addl
pop
mov
call
add
ja
addb
mov
insl
aas
xchg
outsb
adc
mov
xor
add
dec
cmp
add
add
xchg
sub
jmp
outsl
rolb
mov
add
inc
hlt
xchg
add
xor
adc
mov
cmp
push
pushf
mov
mov
mov
sub
push
push
push
push
push
push
call
lea
es
mov
movzbl
cmp
ss
push
push
push
call
mov
cmp
je
es
xchg
add
xchg
cs
sub
mov
push
es
call
test
jne
jmp
nop
leave
push
es
mov
test
je
bnd
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
nop
lea
lea
sub
add
mov
sub
sub
push
pop
push
je
jmp
add
add
inc
add
jge
repnz
adc
scas
fisttpll
icebp
daa
sub
pop
sbb
jae
das
arpl
pop
addb
sbb
jne
inc
cwtl
mov
add
add
mov
fidivrs
pop
ss
or
mov
addr16
popf
jg
mov
mov
inc
xchg
gs
pop
and
adc
mov
xor
mov
add
icebp
imul
and
aam
cmc
xchg
add
leave
fcmovnb
and
push
cmpsb
cmp
mov
pusha
add
xchg
jbe
or
pop
fidivs
mov
add
add
sub
or
mov
mov
mov
out
add
push
stos
xor
add
adc
fisubs
mov
into
loope
add
mov
cs
mov
pop
sub
popf
fcomps
add
rclw
and
mov
cwtl
ret
add
mov
cs
and
jo
mov
mov
mov
icebp
mov
mov
mov
inc
loopne
mov
xor
inc
add
adc
lcall
fildll
arpl
mov
cmp
mov
cltd
jecxz
addb
jmp
arpl
mov
push
add
mov
add
sub
lods
mov
mov
test
dec
sub
add
push
cld
ds
adc
mov
add
mov
cmovno
pop
push
xchg
add
mov
add
xor
loop
mov
mov
mov
add
fistpll
scas
jecxz
sti
subl
cmpsb
bound
mov
xchg
rolb
insl
dec
xor
int
inc
in
add
pop
hlt
jns
or
xadd
mov
je
add
mov
add
mov
inc
add
mov
call
adc
and
mov
add
imul
lret
adc
mov
lods
std
or
add
cwtl
xor
pushl
add
inc
xchg
mov
outsb
out
in
mov
ret
mov
mov
jl
rolb
mov
insb
scas
mov
mov
add
mov
mov
xchg
adc
inc
add
aaa
in
es
xchg
lods
pop
mov
pop
test
jbe
jp
out
lahf
insl
jns
xor
mov
xor
lcall
mov
push
aaa
add
jp
pop
pusha
add
push
jecxz
fwait
mov
subl
lea
mov
cmp
ss
add
adc
mov
mov
out
cld
js
mov
mov
mov
pop
xor
jmp
add
mov
xorl
js
add
push
popf
movsb
inc
loop
mov
aas
cmpsl
mov
add
add
bound
mov
aaa
int
es
rolb
mov
sbb
cli
sub
add
cmc
mov
cmp
and
mov
add
lahf
pop
out
add
mov
out
divb
xchg
pop
or
in
shll
cmpsb
and
push
repz
cltd
push
xchg
xchg
rolb
dec
ss
pop
scas
xor
mov
mov
add
std
in
or
fdiv
push
add
push
and
add
clc
adc
add
addb
or
and
mov
dec
test
add
add
mov
xor
mov
jl
iret
movsb
filds
add
hlt
cmp
aad
cs
gs
jbe
ja
add
xor
mov
dec
pop
addb
out
dec
in
gs
add
sbb
add
mov
add
pop
inc
pop
cmp
add
adc
mov
jne
add
add
insl
popf
dec
mov
mov
sbb
mov
jnp
or
mov
mov
add
incb
andl
pop
movsb
sub
add
push
pop
sbb
sahf
pop
mov
stos
xchg
repz
mov
daa
sbb
cli
outsl
negl
xchg
mov
jo
mov
mov
xchg
or
pop
das
mov
ret
scas
adc
mov
sub
push
test
add
adc
outsl
in
xchg
leave
mov
jns
addl
sbb
mov
in
add
pushf
mov
inc
loope
cmp
rolb
mov
jno
mov
pop
clc
enter
cmp
add
add
ds
jle
add
and
dec
test
mov
cmc
or
mov
mov
add
add
mov
mov
stos
mov
in
pop
inc
into
xchg
fbstp
add
pop
es
cmc
push
add
inc
mov
inc
ret
adc
inc
pop
lahf
jmp
jb
mov
or
lds
add
repnz
insl
adc
xchg
push
les
mov
lds
fs
mov
mov
popf
sbb
lret
orl
or
add
sbb
add
inc
push
rcr
lret
cmp
addr16
mov
mov
push
daa
xchg
gs
mov
mov
jp
add
mov
mov
mov
imul
jo
mov
lret
cli
iret
into
mov
das
mov
pop
outsl
cmp
movsb
lcall
xchg
add
in
das
lcall
mov
inc
add
orl
cltd
and
pop
xchg
cmp
out
hlt
pop
and
mov
sub
or
add
int3
push
sbb
aam
xor
mov
test
adc
testb
pushf
stos
push
sub
push
pop
push
add
pop
outsl
or
add
jae
add
pop
sub
jl
pop
lcall
mov
mov
cwtl
sbb
outsb
movsb
add
iret
mov
mov
pop
mov
add
sbb
gs
push
mov
mov
push
sub
mov
in
mov
bound
mov
jg
mov
xor
dec
dec
inc
xchg
fs
mov
or
call
sbb
add
andl
push
cmp
add
fsub
xor
pop
leave
push
xor
add
inc
movsb
out
rcl
xor
lea
xor
mov
xlat
push
mov
popf
push
or
push
add
sub
cmp
loopne
mov
xchg
sti
xchg
cmpsl
jmp
dec
lods
arpl
xchg
sbb
add
and
or
xor
mov
inc
add
scas
lahf
push
out
mov
iret
sbbl
add
sub
int3
cmp
movsl
or
xchg
mov
or
mov
cmpsb
dec
int
fsts
mov
sbb
or
fwait
idivb
psrlw
int3
lds
add
push
xor
mov
push
add
mov
add
fdivl
or
mov
xchg
pushf
dec
mov
cmpsb
xor
test
xor
and
pushf
sub
sbb
sbb
mov
pop
xor
test
dec
xchg
bound
mov
jbe
pusha
add
mov
add
ret
jnp
pushf
rolb
mov
add
call
pop
test
mov
pop
and
add
in
out
mov
xor
mov
cltd
push
cld
dec
jge
mov
or
ficoml
add
add
mov
xlat
rolb
mov
fimuls
je
stos
les
inc
mov
lret
pushf
push
out
add
mov
icebp
dec
fldt
imul
das
jmp
stc
mov
call
cmp
aas
cs
cltd
mov
push
dec
mov
lods
inc
test
push
add
dec
mov
loopne
mov
cmp
add
mov
mov
add
add
negl
jecxz
add
mov
loopne
mov
or
add
mov
iret
cli
int3
inc
sbb
mov
mov
add
fcompl
subl
mov
add
add
adc
mov
scas
int3
int
aas
mov
mov
std
adc
hlt
stc
in
jmp
bound
mov
jl
cmp
mov
add
mov
adc
mov
mov
and
push
out
add
sbb
add
rcll
push
mov
iret
pop
std
jmp
cld
fisubrl
jle
pushf
leave
jb
mov
adc
xchg
ret
push
jnp
mov
add
rolb
mov
mov
pop
mov
or
push
pop
repnz
lahf
xchg
aam
loope
mov
mov
rcll
frstor
xor
xor
add
jne
mov
fcmovb
mov
loope
movsb
aad
insl
dec
lods
push
cmp
mov
add
sbb
leave
into
push
jno
xchg
jbe
push
xchg
movups
or
ds
inc
add
mov
mov
mov
add
jl
xchg
add
adc
jge
iret
mov
popa
or
mov
add
mov
and
mov
sahf
mov
push
add
add
dec
jmp
add
adc
cs
pop
bound
mov
mov
ds
mov
xchg
mov
xor
mov
jae
adc
inc
mov
loope
or
or
cmp
cli
jp
divb
jae
aam
push
jo
mov
or
push
mov
cmpsb
je
pop
sub
lcall
cld
mov
mov
add
enter
cs
nop
add
mov
ret
mov
mov
mov
dec
add
mov
xchg
rolb
mov
movsl
stc
dec
mov
insb
repnz
mov
insb
lret
add
mov
add
add
mov
sub
mov
adc
mov
add
or
xchg
bound
mov
fbld
insb
cmpsb
sbb
add
fimuls
add
pop
pop
ss
add
nop
add
cli
mov
movsl
jno
lahf
pop
inc
add
push
mov
mov
mov
sti
inc
add
add
xchg
push
imul
mov
push
ret
and
mov
add
jns
cmp
leave
popf
arpl
jge
xlat
pushf
or
mov
add
mov
xor
mov
mov
dec
testl
mov
inc
add
mov
sub
adc
ja
shll
cwtl
cmpsb
push
pop
mov
mov
stos
in
add
loop
mov
cld
idiv
xchg
inc
add
mov
lds
dec
or
es
popf
inc
and
mov
add
xchg
and
mov
adc
ret
sbb
xchg
insb
sub
mov
ljmp
and
popf
or
rorl
stc
mov
stos
pop
or
add
pusha
add
mov
cmpsl
and
add
adc
enter
hlt
fmuls
adc
mov
arpl
mov
int3
pop
and
and
jne
lret
push
mov
lods
addb
xchg
in
cwtl
cmp
cmp
lahf
out
aad
testl
or
lds
ds
jbe
loop
mov
push
jo
mov
loope
lahf
stos
pop
cltd
jg
out
insl
test
push
das
ja
jnp
add
or
mov
fidivrs
fcmovne
cli
mov
sahf
das
lret
xchg
add
int
mov
jge
sbb
cmpsb
mov
mov
sub
lret
cmpl
mov
insb
sub
ljmp
cmp
sbb
cmp
lods
scas
xor
mov
and
mov
lods
push
mov
push
enter
mov
in
lods
push
push
adc
add
mov
add
mov
mov
cmp
mov
mov
add
dec
jbe
es
add
dec
push
inc
push
add
push
lea
enter
mov
or
arpl
push
insb
xor
sahf
lds
out
scas
push
lds
xchg
out
sbb
add
in
mov
mov
jns
rcll
mov
out
push
imulb
pop
lods
test
add
pop
inc
mov
mov
hlt
test
cmp
push
mov
add
mov
cli
pop
cmp
in
std
sbb
js
sub
mov
mov
loope
add
inc
and
jg
jne
xlat
inc
add
fadds
mov
mov
mov
mov
cld
mov
mov
xchg
outsl
cmp
cmp
add
jnp
aas
or
or
mov
fcoml
loope
ret
xchg
lahf
lock
fldl
push
or
jge
stos
out
sti
fcoms
sub
add
mov
add
insl
gs
ja
ret
cltd
jle
xor
mov
jp
call
add
cltd
ret
inc
sbb
insl
dec
sbb
mov
fcomi
add
or
add
mov
addb
xchg
add
mov
icebp
cs
mov
add
dec
mov
repnz
add
test
mov
add
in
ret
and
cmp
test
add
mov
sbb
sub
mov
rolb
mov
and
stc
xchg
mov
mov
inc
sub
mov
add
inc
sahf
inc
add
jno
push
leave
push
test
xchg
mov
sbb
add
push
subl
jg
rolb
mov
jmp
pshufw
int3
notb
arpl
fcoml
add
repz
mov
and
mov
popf
pop
psubusb
loopne
mov
sbb
pop
pop
mov
int3
push
add
cmpsl
adcl
pop
xor
mov
mov
push
add
push
xchg
or
inc
adc
mov
pop
pop
jle
sahf
gs
add
or
jp
popa
ret
gs
pop
xlat
xor
mov
mov
jl
push
add
movsb
adc
mov
cmpsb
lea
mov
fidivrl
out
mov
fisubrl
lods
or
add
mov
pop
add
mov
xor
xchg
mov
mov
mov
and
jnp
repz
pop
ja
rcrl
add
fldt
mov
pop
out
jo
mov
jle
insl
mov
cltd
fbld
mov
lea
sub
sub
mov
mov
mov
add
adc
insl
mov
pop
call
add
xchg
rolb
mov
stos
sub
lcall
inc
lods
add
xor
std
push
sbb
aam
add
adc
mov
fdivrs
push
or
add
mov
ds
insb
test
xchg
add
fbld
jmp
cmpl
jp
loopne
mov
add
andl
xchg
add
xchg
lds
ss
inc
shll
add
mov
add
add
mov
out
mov
popa
movsb
pop
lock
call
add
mov
cmpsb
xchg
popf
ret
stos
jmp
add
cmp
or
mov
add
mov
pop
fbld
addb
jp
addb
cmp
aam
int
pop
adc
divps
mov
sub
mov
inc
inc
add
mov
daa
mov
mov
stos
mov
dec
lock
adc
loop
mov
aas
imul
mov
cvtdq2ps
add
pushf
and
repz
les
cld
out
jp
add
je
xlat
insl
jbe
fnstenv
loope
mov
loope
push
add
jns
ljmp
mov
leave
pop
jge
or
mov
mov
push
xor
sbb
cld
push
mulb
ret
aad
mov
std
push
add
pop
lds
stos
pop
dec
mov
dec
pop
push
push
pop
std
pushf
fwait
pushf
cmp
push
notb
lock
mov
pop
add
daa
pop
mov
lods
repnz
pop
enter
inc
add
mov
fdivrs
aam
fwait
nop
add
add
mov
mov
add
mov
int
je
test
sti
out
scas
flds
jmp
add
and
mov
add
aam
push
mov
cmpl
popl
add
rorl
dec
out
adc
mov
lahf
push
mov
rolb
mov
push
add
jg
imul
mov
add
rolb
mov
jmp
mov
and
add
in
cmp
ljmp
sub
inc
sbb
lods
shrl
add
dec
test
into
jge
les
lods
rolb
mov
rolb
mov
cmc
and
bound
mov
scas
lret
add
xlat
push
inc
inc
call
mov
out
hlt
nop
add
stc
scas
xor
mov
loop
mov
lret
push
mov
mov
fildl
add
rolb
mov
daa
idiv
mov
rolb
mov
mov
imul
push
dec
or
mov
inc
addb
into
daa
mov
jb,pt
mov
cmp
xor
ret
cmp
in
in
mov
dec
popf
std
xchg
add
cwtl
addb
xorl
sub
push
add
ljmp
sbb
xlat
insb
xchg
add
lcall
pop
bound
mov
cmpsb
jb
mov
lods
xchg
inc
add
fildl
or
scas
in
adc
outsb
mov
out
das
std
cmp
lahf
dec
mov
sub
mov
add
je
mov
add
mov
sub
jp
jp
or
or
cmp
lods
jo
mov
fs
add
add
fisubs
add
cmp
dec
fadds
fwait
xor
mov
and
mov
aam
pop
out
cli
loope
mov
repz
cmp
cs
pop
lea
mov
dec
imul
movsl
adc
dec
sahf
sub
addr16
pop
mov
and
add
mov
leave
and
mov
add
arpl
xchg
adc
mov
in
cmpl
add
sbb
sbb
add
add
mov
adc
add
sub
popf
mov
leave
jae
cwtl
cmp
and
pop
or
adc
add
push
mov
mov
ljmp
ja
loope
mov
add
add
ljmp
add
lods
sub
cltd
mov
mov
add
imul
add
mov
popa
dec
mov
mov
mov
inc
rorl
dec
jp
add
add
neg
ljmp
imul
push
add
add
cwtl
mov
add
mov
add
dec
sub
xchg
add
push
addb
mov
bound
mov
push
inc
or
pop
mov
ret
fcoml
push
push
arpl
sahf
inc
or
ljmp
add
jl
stos
sbb
jg
shrl
add
cmp
or
jb
mov
jge
jo
mov
imul
add
movsl
repnz
bound
mov
out
ljmp
inc
add
xor
jp
inc
scas
mov
imul
les
add
mov
sub
mov
mov
or
iret
cmp
pop
aas
in
call
add
mov
loop
mov
add
repz
arpl
and
push
add
mov
add
pop
movsb
out
push
add
mov
mov
jb
mov
mov
sbb
jl
add
pusha
add
icebp
push
sbb
sub
mov
icebp
loopne
mov
movl
add
add
mov
out
stos
xlat
or
add
lahf
pushf
and
mov
ss
icebp
mov
ljmp
mov
mov
add
mov
jmp
ficompl
sbb
xchg
je
add
loope
out
xor
das
and
mov
xor
mov
in
shr
xor
mov
pop
sbb
sbb
mov
pop
mov
scas
sub
xor
mov
dec
xchg
mov
sbb
push
dec
loop
mov
or
pop
lahf
es
and
repnz
test
adc
mov
cmp
add
mov
hlt
mov
add
pop
sbb
mov
stos
ljmp
sbb
movsb
and
inc
add
subl
sbb
mov
js
cmp
push
add
mov
mov
into
mov
stos
stos
cld
mov
dec
pop
jne
cmp
cmc
enter
sbb
cmc
in
loopne
mov
pop
inc
pushf
jnp
mov
mov
out
rolb
mov
insl
outsl
stos
pop
mov
mov
rolb
mov
popa
lds
cmp
in
push
out
add
pop
mov
fildll
xor
mov
nop
add
aad
sub
add
pop
mov
ret
jns
test
xchg
add
mov
jecxz
dec
ja
add
ljmp
xlat
xchg
add
pop
push
cli
mov
cmp
adc
out
push
std
cmp
ret
dec
sub
adc
mov
pop
adc
je
je
mov
rolb
mov
jnp
or
add
push
loope
in
adc
mov
shrl
mov
mov
jo
mov
std
mov
add
ss
add
xchg
aaa
cmp
add
sub
xchg
in
pop
pusha
add
imul
nopl
sti
loop
mov
inc
add
jge
add
cli
cmpsb
andl
mov
push
fwait
mov
pushl
xchg
add
pop
mov
sub
pop
mov
jl
mov
mov
mov
dec
testb
vmread
mov
mov
lds
mov
add
add
pop
xchg
add
aad
std
sbb
aam
ds
mov
and
mov
mov
stos
into
or
movsl
fildl
inc
or
cmp
in
jns
add
jo
mov
and
add
jae
mov
iret
fnsave
mov
mov
sub
mov
xor
test
jne
sub
xor
push
dec
gs
or
xchg
mov
mov
enter
jne
test
push
jl
dec
or
jne
jg
add
mov
pop
imul
jns
push
or
and
mov
xor
push
add
jns
test
ss
push
imul
mov
add
cwtl
dec
xchg
cmp
dec
data16
mov
mov
stc
rolb
mov
stc
push
mov
sbb
add
pop
jg
adc
sub
jge
nop
add
mov
outsl
inc
pop
mov
mov
adc
mov
das
xlat
pop
mov
or
mov
jmp
lret
add
call
or
clc
mov
cld
fsubrl
inc
add
inc
and
or
fdivrs
mov
mov
mov
dec
mov
sbb
out
push
mov
push
fimuls
sub
pop
sub
insb
cmovnp
xchg
add
mov
sbb
dec
adc
mov
mov
stos
inc
nop
add
nop
add
popf
add
mov
mov
push
push
repnz
shrl
fistps
push
pop
addb
fdivp
add
lds
xchg
xchg
pop
pop
cmp
push
push
jne
mul
in
add
fists
inc
stos
ret
push
dec
stos
adc
mov
fldcw
icebp
pop
int3
mov
add
mov
rolb
sti
adc
push
add
add
pop
daa
cmp
test
cmp
xchg
cwtl
mov
hlt
pop
mov
mov
lds
mov
aam
aad
dec
testl
inc
lahf
cmp
popa
fsubrs
add
push
lock
repnz
pop
outsb
out
mov
mov
mov
outsb
fwait
setne
mov
xchg
sbb
fadd
jge
or
add
insb
jle
mov
mov
mov
test
lock
or
xor
mov
loop
mov
mov
add
add
inc
addb
in
push
jnp
sub
inc
repnz
adc
add
lods
loopne
mov
stos
cmp
imul
insl
cmc
popa
cltd
ss
sbb
mov
popa
xchg
add
call
lcall
out
mov
pop
aas
lea
add
add
pop
fisubrs
cmp
mov
jne
add
or
cwtl
dec
lret
adc
jle
cmp
mov
jecxz
pop
repz
cmp
add
addr16
or
addb
pop
adc
mov
mov
sbb
fmull
mov
or
sub
mov
jg
rolb
mov
lret
mov
lahf
xor
addb
lock
jp
pusha
add
mov
scas
cmp
add
popa
mov
daa
addr16
add
mov
add
outsl
hlt
jno
dec
data16
mov
nop
add
daa
test
mov
int
stc
lret
pop
fdivrs
xlat
lret
or
addr16
jecxz
addb
stc
dec
hlt
inc
add
aam
jmp
cmp
add
test
test
push
scas
aad
ret
negb
inc
add
loope
add
sbb
add
add
jle
add
enter
add
mov
jmp
push
add
add
mov
mov
xor
mov
or
rolb
mov
call
add
xchg
jne
fs
dec
pop
int3
addb
xlat
add
inc
cmc
cmp
add
cmp
push
icebp
ret
sub
mov
mov
jle
mov
fwait
int3
push
fidivrl
dec
rolb
loopne
mov
mov
hlt
add
daa
out
xchg
jl
add
inc
insl
cmp
aaa
xlat
jne
sub
push
cmp
xchg
inc
or
sub
dec
rolb
mov
call
and
jg
pop
xor
add
fists
add
push
shll
leave
pop
sbb
add
jmp
and
push
cmp
mov
setae
aad
add
add
notl
iret
rolb
and
add
mov
repnz
add
add
stos
mov
sbb
stos
daa
sub
and
mov
stc
addb
in
push
aas
mov
mov
sbb
cmp
pop
fs
add
inc
ja
loope
jae
jnp
testl
mov
add
icebp
sub
add
pop
or
mov
movsl
fistpl
cmovns
dec
fnsave
lock
arpl
add
pop
aaa
mov
scas
pop
daa
sbb
pop
test
mov
mov
push
add
adc
mov
mov
lea
jmp
xor
stos
not
add
cmp
push
ss
mov
popa
push
test
add
xlat
pop
insb
xchg
adc
mov
or
pop
adc
mov
stc
mov
les
mov
aaa
mov
xor
jle
ret
icebp
fnstenv
dec
sbb
nop
add
icebp
push
popa
dec
scas
jbe
and
mov
ljmp
mov
pusha
add
dec
lods
test
mov
xor
mov
jns
sub
xchg
dec
push
inc
or
add
fdivrs
es
test
repz
lods
loopne
mov
mov
xor
mov
loope
mov
jb
mov
xchg
hlt
cmp
add
mov
mov
xlat
cmp
dec
xchg
fdivrl
jbe
jmp
repz
pop
enter
ret
cmp
pop
pushf
push
add
clc
jmp
pop
mov
push
stos
push
add
loope
aaa
push
jnp
mov
add
popa
test
ret
cmp
or
sbb
add
xchg
add
sbb
les
add
rcrl
out
stos
stos
imul
cmp
out
add
add
mov
fildl
in
lahf
shll
and
mov
xor
ja
add
add
jecxz
push
aam
pop
xor
mov
add
fildll
cmpsb
ss
cltd
fs
fcoms
pop
call
rolb
mov
adc
mov
and
cltd
aad
mov
jp
addb
jmp
rolb
mov
popa
jg
cmpsl
rolb
mov
pop
in
push
in
arpl
jno
pop
pop
and
mov
mov
cmp
insb
mov
add
dec
push
push
ja
call
add
mov
mov
mov
lods
mov
cwtl
push
sahf
sbb
sbb
push
dec
mov
pop
and
mov
and
or
and
xlat
cmc
pop
push
ds
mov
dec
gs
lcall
in
subl
or
imul
in
sub
lods
dec
outsl
mov
add
fcoms
sbb
ja
jb
mov
ja
loopne
mov
xor
mov
jmp
pop
and
jno
or
xchg
test
mov
sbb
sub
push
push
add
pop
arpl
or
aad
adc
and
add
dec
jns
ss
cmp
cmpl
add
add
mov
mov
call
mov
mov
mov
je
mov
mov
add
mov
ss
jle
or
mov
xchg
mov
in
movsl
adc
or
jo
mov
or
adc
imul
loope
mov
add
sbb
pop
and
mov
or
dec
cmp
xor
mov
and
repnz
mov
fs
mov
mov
icebp
jmp
dec
dec
loopne
mov
lret
into
scas
data16
mov
fadds
mov
ret
scas
pop
xchg
xchg
adc
xchg
in
add
sti
or
pop
decl
or
add
adc
mov
add
jo
mov
pop
mov
sahf
sbb
mov
cmpsl
mov
outsl
or
ljmp
in
das
cmp
mov
add
hlt
aaa
in
push
push
das
lock
scas
cmp
inc
sub
add
mov
test
add
add
or
rolb
mov
add
popa
popf
fs
and
mov
mov
bound
mov
inc
enter
pop
rolb
sbb
rcll
bound
mov
push
add
add
sbbl
mov
inc
jle
xlat
int3
mov
jae
add
xchg
push
and
mov
cmp
add
cmp
pop
pop
pop
push
xchg
nop
add
sbb
jmp
mov
cmp
test
jecxz
xor
jb
mov
clc
mov
add
add
test
sbb
add
add
add
cmp
ficompl
je
add
call
dec
in
sbb
in
fildll
inc
add
rep
int3
mov
xchg
push
pop
icebp
adc
sbb
push
cmp
add
shrl
add
jl
in
cmc
pop
and
add
jecxz
mov
mov
dec
insb
mov
inc
out
scas
push
jge
mov
je
mov
fwait
fwait
imul
mov
jb
mov
rolb
mov
dec
mov
mov
sbbl
fcomps
pop
test
mov
pop
lds
sbb
xlat
in
push
fs
add
xor
les
mov
add
add
mov
mov
lret
push
mov
aas
jbe
add
popa
dec
dec
push
fwait
dec
mov
pop
jge
push
jne
fwait
rorl
or
jns
xchg
popa
xor
cmp
add
pop
std
jns
pop
or
pop
xchg
iret
xchg
push
dec
mov
addb
sbb
add
mov
loope
add
ret
mov
and
add
push
mov
hlt
jg
loop
mov
mov
insl
fwait
pop
add
add
mov
mov
dec
and
ret
xchg
cmc
repnz
pusha
add
and
cmp
xor
mov
jp
and
mov
add
mov
rolb
mov
out
sub
pop
lcall
cmp
loope
lret
adc
stc
out
inc
add
mov
add
add
fwait
adc
imul
pop
xchg
add
add
xor
mov
insb
add
aaa
add
mov
mov
add
push
mov
in
nop
add
sub
fldt
addb
addb
sbb
mov
mov
mov
lock
mov
rcrl
sub
cmpsb
pop
dec
push
cmp
in
pop
jo
mov
mov
lcall
push
push
mov
add
push
mov
hlt
inc
jae
mov
cld
insb
pop
out
mov
pop
or
cltd
enter
fimull
fstps
xor
mov
add
jno
push
xchg
jbe
lock
mov
add
and
mov
cmp
or
xchg
ss
push
mov
test
loopne
mov
test
mov
jg
jp
out
adc
mov
ja
adc
in
ffree
adc
test
incl
add
icebp
xchg
mov
mov
add
inc
out
jne
ret
addr16
xor
gs
add
out
sbb
fprem1
les
add
inc
push
inc
adc
inc
sbb
inc
add
add
arpl
inc
add
add
mov
pop
scas
add
mov
mov
out
lods
out
mov
es
or
fisttpl
mov
jmp
xor
pusha
add
mov
mov
fisubl
cwtl
adc
mov
scas
sbb
inc
cmpsb
push
add
mov
xor
mov
pop
mov
xchg
movb
mov
insl
xor
rolb
xor
bound
mov
mov
dec
xchg
dec
pop
cmpsb
sub
mov
add
push
in
cld
in
push
mov
dec
xchg
xchg
mov
add
mov
xor
inc
xchg
and
cmp
rolb
cli
cmp
jmp
cmp
cmp
jo
mov
and
cmp
sbb
pop
loop
mov
add
push
mov
mov
and
enter
mov
xchg
loopne
mov
xchg
pop
in
or
xchg
mov
enter
and
mov
xchg
ret
and
call
cmp
call
cli
in
call
push
imul
loop
mov
add
fisttpl
sbb
inc
sub
stos
pop
cmp
gs
lea
xchg
xchg
sbb
pop
cmp
xchg
pop
mov
add
mov
ljmp
jnp
jl
xor
cmpsb
imul
lcall
push
jbe
mov
lock
push
enter
lea
dec
inc
ljmp
add
and
cltd
test
aam
lahf
mov
or
mov
xor
mov
add
and
inc
add
aaa
pop
lret
xchg
jl
js
jg
add
mov
rolb
adc
mov
jno
add
push
add
mov
out
xor
cwtl
stc
outsb
ret
loopne
mov
test
in
add
add
push
mov
add
add
mov
dec
dec
add
add
xchg
gs
xchg
add
push
add
xchg
sbb
mov
dec
lods
inc
add
out
inc
add
cld
mov
mov
hlt
enter
insl
mov
cmp
adc
loope
dec
jnp
pop
mov
in
add
push
shll
aad
add
and
adc
mov
lret
insl
addb
inc
fnstsw
scas
in
adc
mov
pop
jo
mov
mov
mov
enter
and
push
ret
lods
xor
mov
les
add
test
add
xchg
sbb
xchg
iret
sub
jp
es
addb
mov
cwtl
and
mov
or
mov
fs
push
out
pushf
int3
push
mov
pop
sub
test
test
loop
mov
cmpsb
push
jb
mov
cmpsl
ret
cs
inc
testl
in
js
arpl
test
and
imul
sbb
jle
cmp
mov
and
mov
gs
imul
outsl
fidivrl
scas
cmp
nop
add
jp
add
adc
add
sbb
mov
mov
sbb
lret
xorl
mov
add
arpl
add
mov
mov
and
lock
std
mov
repnz
or
adc
inc
pop
or
fnstcw
addb
dec
jg
pop
test
bound
mov
roll
add
cmp
rolb
jae
sbb
fsubrs
fistps
leave
cli
aaa
jle
xchg
mov
add
mov
rolb
mov
jle
jecxz
or
sub
add
xchg
jmp
add
mov
cmpsb
xor
int
mov
mov
stos
jnp
add
pushf
sti
sub
mov
gs
pop
dec
fidivrl
mov
add
out
jmp
dec
stc
sahf
adc
xchg
test
mov
fmull
jnp
and
add
xchg
mov
cwtl
mov
push
je
insl
xchg
ret
lods
rolb
mov
test
mull
add
add
mov
test
outsb
loop
mov
add
xchg
aaa
cmp
push
scas
mov
xor
mov
repnz
js
xor
add
mov
lret
cmpsb
cmp
cltd
xor
sti
jno
call
mov
fstl
popf
mov
or
ss
lods
xchg
insb
fnstsw
out
add
mov
mov
imul
cmp
add
mov
sbb
inc
add
iret
outsb
fldenv
flds
mov
and
mov
inc
mov
mov
add
push
add
add
mov
pop
insb
mov
int3
xchg
fdivrl
out
add
stos
jl
mov
test
push
mov
mov
in
mov
cld
fsubrl
mov
hlt
xlat
or
mov
mov
add
mov
add
mov
adc
xlat
stos
pop
push
fsubs
mov
mov
add
pop
mov
push
mov
cmp
mov
fisttps
enter
jnp
mov
cmp
adc
push
xchg
add
push
std
inc
bound
mov
mov
sbb
jp
adc
push
jae
fcompl
inc
popa
std
es
ss
mov
cmp
add
mov
inc
in
cli
out
xor
rolb
mov
dec
fmull
xchg
mov
or
xor
mov
jl
add
aam
mov
ret
in
fucomip
repnz
push
mov
and
mov
mov
aaa
inc
clc
scas
xchg
outsb
jbe
sub
jecxz
pop
mov
add
cmp
mov
jo
mov
pop
cwtl
xchg
push
adc
mov
pop
adc
add
and
dec
add
lcall
add
sub
movsl
dec
add
inc
xor
mov
add
pop
ss
ljmp
mov
adc
mov
pop
sub
inc
add
std
hlt
mov
je
add
rolb
mov
cltd
out
cmp
and
add
cmc
nop
add
call
movsb
fdivrl
or
sarl
add
mov
cli
pxor
push
rolb
je
add
add
mov
add
mov
mov
jb
mov
sub
sub
movsl
and
fimuls
cmp
mov
add
mov
mov
add
mov
roll
les
sbb
push
sti
outsl
jle
out
test
add
mov
out
xsha256
cmpsb
push
add
add
jmp
add
mov
jmp
cltd
mov
xchg
jne
push
jecxz
jno
xchg
jg
xchg
adc
cmc
rolb
mov
mov
into
pop
inc
add
add
inc
enter
and
mov
fcomps
das
cld
xor
xor
mov
add
cli
xchg
or
fisttpll
mov
fnstenv
mov
mov
in
or
mov
xlat
fs
sub
rolb
mov
push
xor
imul
enter
push
lahf
push
fldenv
add
sbb
sbb
jb
mov
jne
inc
ret
call
mov
aam
add
push
mov
push
dec
lcall
xlat
fcmovnb
add
arpl
popa
insb
rolb
mov
mov
adc
mov
add
sbb
inc
mov
push
mov
fisttpl
jle
add
and
das
scas
adc
loope
add
or
mov
add
aas
in
sbb
addb
fldl
push
test
adc
mov
mov
mov
jns
ud2
adc
mov
test
xchg
add
add
xchg
je
mov
mov
pushf
xor
mov
cmp
inc
fucomip
insb
lds
adc
add
hlt
in
push
lock
imul
jne
inc
push
push
jge
xor
mov
call
add
addb
imul
jae
add
in
mov
mov
add
mov
push
outsb
lea
in
xchg
and
es
xchg
pusha
add
aas
ds
add
and
jle
and
push
xor
mov
mov
mov
ds
mov
inc
sbb
push
inc
mov
inc
int
out
sbb
sbbw
std
jge
mov
and
mov
in
mov
jmp
add
mov
mov
add
adc
inc
out
sbb
dec
lds
in
imul
add
add
jne
or
stos
jb
mov
add
mov
movsb
or
mov
movsb
jmp
dec
aad
sub
das
ja
adc
iret
push
add
lea
add
ffreep
add
sbb
push
lea
dec
lock
outsl
test
sub
arpl
add
mov
mov
pop
fnstsw
cli
xor
mov
fidivl
cmp
test
add
add
push
adc
or
add
jb
mov
int
pop
mov
push
sub
sub
out
xor
mov
repnz
call
outsl
lea
or
add
jle
mov
cltd
rolb
mov
mov
adc
mov
add
or
cmp
sub
jmp
dec
or
icebp
push
sahf
jno
inc
jae
repnz
jp
in
inc
jg
or
sti
ret
fcomps
je
push
cmp
je
add
jecxz
add
xchg
add
mov
fsubrs
push
cs
es
add
rcll
mov
add
jle
add
pop
addb
inc
pop
fwait
mov
mov
dec
lods
dec
ret
or
imul
or
xrelease
dec
rolb
mov
add
mov
fsubs
arpl
mov
jbe
movsb
mov
fnstsw
jle
lds
ljmp
add
cmp
scas
xchg
leave
imul
jae
mov
lds
inc
cmp
dec
xlat
add
jmp
loopne
mov
add
add
add
add
xor
fadd
lret
daa
add
cs
add
sub
les
xchg
stos
xchg
sbb
pop
inc
xor
mov
pop
scas
sbb
stos
jmp
jge
add
stos
or
add
and
add
call
or
movsl
adc
pop
push
add
mov
scas
push
add
repz
sub
add
mov
pop
mov
add
push
aaa
add
mov
dec
loop
mov
dec
xchg
iret
std
xchg
and
jmp
jecxz
ret
jb
mov
rcr
push
push
lcall
outsl
pop
xchg
dec
push
sub
filds
leave
xor
hlt
arpl
sub
add
mov
add
add
mov
js
movsb
mov
and
mov
and
mov
int
movsb
movsb
inc
adc
push
dec
push
aam
in
aad
arpl
fisubl
fs
jno
add
inc
add
add
mov
cli
adc
mov
add
jbe
add
xchg
add
mov
or
mov
nop
add
add
mov
xchg
dec
jge
jbe
imul
pop
xchg
add
in
popf
es
repnz
push
pop
mov
dec
jne
inc
add
add
cmpsl
inc
test
inc
adc
mov
enter
inc
add
jb
mov
in
pop
xor
inc
addb
dec
in
adc
mov
add
fucom
add
adc
mov
test
add
dec
bound
mov
add
sbbl
sub
dec
and
push
add
inc
inc
push
push
add
mov
outsl
shll
jecxz
bound
mov
mov
sbb
mov
push
flds
xor
add
inc
sbb
sahf
ds
inc
mov
pop
sub
dec
mov
aas
pop
dec
fs
addb
je
mov
mov
mov
add
mov
xor
mov
mov
add
mov
imul
cld
aas
xor
out
mov
jbe
movsl
cltd
fs
add
add
jg
bound
mov
add
pop
bound
mov
mov
les
add
sbbl
dec
xchg
add
adc
mov
dec
pusha
add
dec
pop
test
and
fs
fabs
cmp
cmp
pop
sbb
mov
push
in
cld
inc
outsb
pop
pop
loopne
mov
pop
rdpmc
sti
leave
xor
mov
jg
popf
sbb
imul
mov
bound
mov
add
add
lods
ljmp
dec
jg
aaa
xor
mov
scas
mov
xchg
loopne
mov
mov
mov
inc
cmp
fsubp
cmpsl
inc
sbb
add
js
sahf
and
mov
pusha
add
add
mov
in
pop
jmp
ds
stos
lcall
mov
data16
push
cld
push
scas
dec
pop
dec
jbe
jae
mov
fdivrs
filds
mov
mov
movsl
clc
orl
insl
std
or
mov
xor
pushf
cld
xchg
out
cmp
push
stos
push
add
divl
mov
into
movsl
mov
add
add
dec
dec
adc
mov
rolb
mov
sbb
mov
mov
js
sbb
adcl
add
mov
ss
out
add
sbb
push
dec
push
int
add
inc
add
lock
add
or
add
inc
or
add
fildl
lcall
sub
aas
addb
pop
push
fldl
mov
nop
add
jns
push
out
flds
std
std
iret
mov
and
into
mov
fmuls
rolb
mov
cmp
sti
mov
mov
or
bound
mov
shll
add
call
pusha
add
mov
bound
mov
loopne
mov
add
push
mov
in
iret
cmp
rorl
arpl
add
jno
mov
inc
cs
call
xchg
mov
mov
push
adc
mov
mov
mov
mov
in
lret
loopne
mov
aad
subl
rolb
lods
js
mov
fisubs
addb
add
mov
mov
jge
insb
cmp
cli
frstor
add
fistpl
add
dec
out
xchg
add
incb
sbb
push
js
add
outsb
jle
iret
cltd
shll
xchg
push
bound
mov
pop
rolb
mov
adc
mov
aam
adc
lahf
or
das
hlt
push
xchg
fldenv
pop
cmp
dec
mov
mov
add
out
ret
icebp
pop
xchg
adc
out
xor
xchg
cs
add
mov
mov
xchg
popa
rolb
mov
imul
fimull
in
int
insl
dec
cli
lods
enter
into
daa
popf
imul
pop
ja
lds
mov
mov
inc
popa
mov
cld
adc
sbb
push
in
cmp
fsubrs
rolb
mov
out
adc
hlt
xchg
jle
or
shll
cld
push
sub
inc
repz
jo
mov
rolb
mov
pop
lea
mov
sub
outsl
mulb
add
mov
add
xchg
stos
test
add
push
dec
mov
xor
mov
mov
add
mov
rcl
add
xchg
jns
lahf
je
dec
in
insl
add
dec
mov
xor
mov
mov
inc
xlat
and
mov
mulb
push
std
cmp
add
mov
mov
cmpsl
sub
add
fistps
in
add
sub
mov
add
out
cmpl
pop
fwait
and
mov
add
or
shll
lock
mov
mov
add
pop
cmpsb
cmc
bsf
jle
add
cmc
call
add
add
xchg
bswap
daa
cmpsb
lcall
mov
scas
xchg
mov
mov
addr16
inc
not
xor
mov
mov
push
add
or
pop
js
cmp
divl
scas
lods
in
cwtl
xchg
cmp
mov
inc
add
iret
mov
mov
add
jne
push
jnp
xor
dec
in
imul
mov
jp
mov
sub
jp
xchg
mov
push
mov
mov
iret
sbb
sbb
ss
or
js
ds
hlt
aaa
bound
mov
inc
xor
sbb
push
push
add
pop
das
xlat
pop
addb
sub
inc
dec
sub
fwait
inc
stc
xor
mov
loopne
mov
daa
sbb
dec
fisttps
outsb
lret
inc
xchg
dec
and
int3
lds
scas
clc
cwtl
mov
push
inc
jle
xor
add
popa
sub
iret
test
cs
leave
xchg
sbb
or
mov
imul
push
push
inc
add
jp
xchg
adc
xchg
ds
out
enter
add
xor
sub
fistpl
fwait
enter
daa
sti
roll
mov
mov
loope
int3
xchg
xchg
pop
pop
pop
mov
mov
push
push
add
insb
xor
les
push
fistpll
add
popl
mov
in
lcall
inc
xchg
mov
add
add
mov
adc
add
add
mov
mov
iret
xchg
fsubl
mov
jmp
mov
in
xchg
xchg
add
mov
outsl
push
push
jl
add
std
push
add
dec
sbb
call
jbe
sarl
and
lods
fidivl
hlt
mov
mov
mov
int3
bound
mov
add
arpl
pop
fisubs
addr16
mov
mov
inc
push
mov
ja
mov
data16
ja
xlat
cltd
outsl
outsb
int3
es
xlat
call
fcoms
mov
movsl
adc
mov
dec
lods
pushf
and
fidivrl
cli
mov
inc
cli
aaa
xchg
ja
jbe
ret
mov
mov
rcll
mov
cmpsb
jle
add
mov
mov
leave
aad
jmp
and
mov
xor
cld
dec
cmp
add
add
mov
mov
add
mov
xchg
dec
push
inc
xchg
cmp
inc
add
test
add
mov
mov
cmp
pop
add
add
ret
fsubrl
popa
dec
in
pushw
push
add
mov
push
pop
sbb
popf
push
push
out
sti
cmp
cmc
jge
mov
jbe
push
arpl
dec
inc
test
insb
xorl
cmp
stc
fcomps
and
data16
outsl
test
add
cs
into
push
shll
mov
mov
lea
or
leave
sub
and
mov
or
lret
scas
or
and
mov
test
in
outsb
pop
or
and
out
push
dec
out
les
fsubrl
out
out
fsubrp
pop
aaa
sub
ret
adc
daa
call
jle
sbb
sbb
mov
clc
clc
rsm
sub
rcl
in
xor
aad
mov
jge
lock
add
mov
cwtl
aad
in
cmp
add
jecxz
popl
add
add
mov
lea
jle
sub
add
sbb
xchg
add
xor
cmc
lea
cld
pop
pop
test
outsl
push
adc
mov
hlt
and
mov
xchg
and
daa
fadds
cli
stos
jl
ljmp
add
dec
xor
jne
add
push
imull
push
out
mov
dec
movsl
mov
add
jb
mov
into
pop
sub
mov
xchg
jno
adc
fidivrs
add
push
fwait
push
add
mov
mov
mov
mov
add
mov
mov
aad
dec
movsl
rolb
repnz
add
push
das
mov
aad
add
and
mov
add
sbb
ret
out
mov
popa
and
mov
jbe
add
cmp
jp
jle
xchg
pop
jmp
mov
in
pinsrw
jl
stos
gs
and
mov
rolb
inc
js
mov
jae
mov
xor
mov
push
in
add
xor
mov
outsl
xor
nop
add
ljmp
cmc
mov
aas
xchg
xlat
outsl
xchg
add
outsl
je
cmpsb
or
lea
in
xchg
and
inc
add
add
cmp
xchg
inc
mov
cmc
xchg
inc
out
add
mov
inc
add
das
mov
mov
mov
mov
add
add
je
and
mov
add
add
xchg
add
out
add
call
sub
mov
pusha
add
sub
sbb
fisubrs
aam
cmc
add
lock
mov
add
add
mov
sbb
add
mov
rolb
mov
add
dec
add
mov
xlat
test
loope
mov
enter
or
add
push
pop
aad
aam
sub
mov
mov
or
push
clc
inc
addb
cwtl
mov
add
faddl
fistps
jae
cli
push
mov
enter
mov
lea
add
add
test
sub
add
or
mov
test
mov
or
mov
aaa
addr16
cmp
lock
jl
addr16
jae
outsb
dec
xchg
add
cmp
mov
lods
xor
mov
lods
push
inc
test
ljmp
ljmp
mov
test
bound
mov
rcr
outsb
add
cli
push
jo
mov
cld
rolb
mov
add
das
rolb
push
rolb
lcall
xlat
scas
jno
addb
or
out
push
xor
mov
add
dec
adc
mov
inc
outsb
inc
insb
xor
mov
cmp
out
pop
fcomp
std
pop
clc
push
inc
jmp
mov
test
or
imul
pop
adc
add
fwait
loopne
mov
faddl
and
add
add
push
repz
pop
mov
add
mov
add
outsl
je
cmp
pop
sub
dec
xor
jle
add
loopne
mov
insb
mov
jno
mov
or
scas
in
push
out
add
add
js
adc
add
adc
sub
mov
cli
lret
xchg
mov
aam
add
add
call
mov
adc
mov
ss
adc
mov
ja
push
add
std
add
mov
movsl
inc
jo
mov
jp
mov
lret
inc
add
addl
lret
mov
push
add
dec
in
or
dec
jmp
cmpsb
loop
mov
add
aad
dec
rolb
pushf
mov
popa
fsubrs
scas
and
leave
frstor
add
daa
test
test
jno
aas
ret
jge
pop
rolb
mov
jl
mov
cmp
ss
push
push
add
adc
mov
inc
jne
mov
xor
mov
inc
fidivs
xor
mov
mov
lock
in
or
xor
mov
cwtl
icebp
scas
pushf
inc
jle
add
mov
add
dec
push
add
in
or
pop
inc
test
add
add
dec
jge
jmp
fidivrl
dec
test
jl
jne
add
test
nop
add
xor
mov
cmpsb
push
movsl
mov
sub
inc
and
mov
test
add
or
add
mov
call
call
in
rolb
mov
dec
mov
xor
mov
sarl
mov
lods
inc
daa
adc
mov
adcl
mov
mov
mov
ffreep
add
add
dec
out
popf
ss
fwait
mov
mov
mov
stos
fistl
pop
mov
rolb
mov
insb
fcoml
in
sbb
outsb
inc
ljmp
out
mov
stc
dec
or
or
add
mov
add
push
xor
add
mov
fildl
mov
xchg
cmpsb
jg
add
inc
add
add
inc
add
mov
stos
pop
ret
lds
pop
push
mov
mov
or
rolb
mov
lahf
fwait
iret
or
xor
in
add
add
add
pop
cltd
iret
jmp
ja
enter
adc
mov
addb
lcall
add
mov
cmpsb
inc
mov
mov
add
addb
decb
pop
pop
push
add
jno
enter
shrl
mov
dec
dec
cmp
in
lods
arpl
outsb
cld
fcmove
fmulp
mov
mov
jbe
aas
fwait
adc
dec
cli
dec
movsl
hlt
jnp
and
inc
add
and
dec
arpl
add
jmp
or
mov
or
mov
mov
lret
outsl
scas
aaa
inc
sub
ss
dec
aas
mov
mov
cwtl
and
push
mov
ja
mov
inc
jb
mov
inc
add
mov
xchg
arpl
and
add
dec
notl
cs
cwtl
inc
push
push
incb
add
or
ret
nop
add
add
push
mov
scas
in
lods
push
xchg
push
out
push
add
mov
and
push
mov
mov
pusha
add
mov
rolb
mov
cmp
push
xchg
add
cld
test
cltd
pop
pop
add
mov
cmp
push
mov
mov
sub
adc
mov
mov
add
fmull
inc
sub
imul
test
mov
cwtl
cltd
clc
xchg
outsl
repnz
lcall
mov
xor
mov
nop
add
adc
mov
nop
add
or
xor
iret
testb
sub
lods
mov
jno
addb
clc
popa
js
push
idivl
sarl
mov
add
add
pop
push
fisubrl
mov
mov
and
je
xchg
enter
lds
mov
scas
jo
mov
sbb
push
add
mov
xor
mov
push
push
add
adc
mov
xchg
outsb
sub
jae
mov
add
cmp
add
add
dec
mov
arpl
mov
cmp
lahf
push
aam
dec
cmp
jg
add
sbb
movsl
subl
add
mov
add
in
xchg
add
arpl
insb
sbb
jecxz
adc
mov
or
mov
add
or
lds
add
and
out
aas
mov
pusha
add
add
fsts
nop
add
xchg
leave
jle
add
scas
push
add
jmp
add
in
xchg
add
mov
out
mov
or
mov
imul
lcall
in
sub
mov
or
cli
addb
lret
out
mov
inc
add
add
add
xchg
arpl
clc
jmp
pop
sbb
gs
xchg
into
mov
jmp
gs
pop
push
mov
fstps
jbe
jne
xlat
inc
repz
sarl
add
jmp
fisttpll
adc
addb
into
stos
and
xchg
push
xor
mov
test
je
movsl
push
pop
inc
test
lret
mov
push
out
xchg
bound
mov
jecxz
mov
loopne
mov
mov
or
add
jae
jns
adc
mov
rolb
sbb
mov
push
jmp
addb
dec
and
mov
test
add
repz
mov
push
and
mov
cmp
loop
mov
and
or
lea
sub
push
xorl
sbb
and
je
sub
xor
mov
mov
ss
add
and
fsin
rolb
xchg
fwait
push
push
test
outsb
es
add
lea
mov
sub
cltd
mov
scas
sbb
mov
jbe
or
add
mov
mov
outsl
jae
push
add
mov
mov
shll
imull
or
and
ds
fdivrs
add
add
test
lock
pop
test
jbe
sbb
add
adc
mov
std
dec
push
pop
out
pop
adc
add
and
mov
push
jo
mov
sub
jbe
fnstenv
imul
add
lds
pop
fidivrs
add
sub
fsubs
mov
and
scas
mov
mov
stos
cltd
jno
add
mov
js
test
jecxz
ja
xor
add
add
sub
mov
mov
cmpsb
fmul
xchg
push
add
fldl
cwtl
rcll
sbb
aam
or
nop
add
imul
push
ret
add
fadds
in
cwtl
cmp
cwtl
bound
mov
movsb
jmp
stc
popa
lds
push
add
xlat
adc
or
rol
mov
add
das
roll
pop
add
pusha
add
cmp
stos
adcl
lock
mov
xchg
adc
std
mov
cmpsl
aaa
and
xor
mov
adc
jp
cli
cmp
jmp
inc
xchg
popf
imul
dec
movsb
jge
add
in
push
add
xor
mov
in
sbb
dec
xchg
in
in
sbb
inc
dec
push
clc
sbb
insb
outsb
je
add
test
and
mov
or
cmpsl
xor
mov
mov
sub
pop
mov
and
add
dec
adcl
mov
cmp
inc
xchg
in
add
add
mov
ss
lcall
aad
or
xor
mov
mov
loopne
mov
mov
test
pop
push
ss
cmpsb
in
add
fmul
inc
push
jnp
and
add
out
sbb
xchg
mov
add
mov
and
mov
add
xchg
pop
notb
push
aam
xor
mov
jp
jnp
pop
xor
mov
adc
mov
movsl
cmc
test
inc
add
adc
mov
add
cmp
add
sub
hlt
movsl
pop
arpl
and
mov
cltd
xchg
inc
in
fnstcw
xchg
add
daa
jns
xchg
dec
in
pop
das
mov
xchg
or
lds
hlt
xchg
jl
add
push
pop
repnz
add
popf
lahf
aaa
das
daa
fcmovne
imul
arpl
rolb
mov
dec
movsb
loope
ret
push
add
xor
mov
pop
push
xchg
addb
jo
mov
sub
lods
add
xchg
test
iret
daa
push
mov
dec
daa
push
outsl
mov
aam
pminsw
and
jmp
jno
cmp
dec
sbbl
xlat
mov
mov
dec
mov
push
sbb
ror
cmpsb
into
mov
dec
and
sbb
test
add
mov
rolb
mov
jb
mov
rolb
mov
sti
cmp
jns
jne
rolb
mov
mov
sub
sub
cwtl
repz
add
jne
ficomps
lods
add
test
mov
mov
fstl
add
adc
mov
xlat
sub
in
loopne
mov
or
add
mov
cltd
mov
add
sub
out
lret
outsl
add
mov
xor
mov
dec
pop
adc
test
daa
sbb
mov
add
jecxz
mov
add
add
add
les
insl
scas
mov
xor
mov
mov
fnstenv
cli
clc
jg
testb
out
mov
cld
mov
mov
mov
add
mov
push
lea
add
mov
push
inc
add
repz
cmp
cmpsl
xchg
iret
fwait
xor
mov
pop
cmpsb
fiadds
xrelease
lret
sub
je
add
xchg
outsb
jne
add
mov
aad
inc
add
jae
add
arpl
pop
pop
sub
xlat
decl
adc
pushf
mov
add
mov
sti
push
call
add
mov
adc
aam
pop
dec
push
fdivp
add
push
xchg
mov
fldcw
mov
std
xchg
lahf
xor
add
cmp
mov
iret
rcll
add
fistps
mov
lcall
add
xor
add
mov
pusha
add
aas
xchg
push
mov
rolb
mov
mov
jg
popa
aas
aad
outsl
lcall
and
add
adc
lret
mov
daa
xchg
sahf
adc
mov
add
inc
outsb
cld
sub
test
cmp
add
cwtl
inc
xchg
or
scas
sub
add
xchg
xor
mov
add
pop
xchg
sub
fldenv
fucom
imul
cmp
add
mov
sahf
gs
ret
sti
in
rcr
in
insl
jle
pusha
add
xchg
mov
jmp
mov
shrl
int3
dec
add
mov
mov
loopne
mov
and
cmp
jmp
rcll
jns
jp
mov
jge
setg
pop
push
add
add
mov
jns
add
xor
xchg
add
fs
lret
pushf
add
mov
add
add
mov
add
push
outsl
adc
scas
xchg
daa
add
loop
mov
mov
mov
inc
add
mov
add
add
inc
add
pop
pop
cli
pop
jb
mov
xor
mov
outsb
cmp
icebp
fcompl
jo
mov
insl
outsl
in
rorl
ret
mov
lret
mov
aaa
sbb
pusha
add
jg
repnz
add
pop
xchg
mov
imul
mov
add
adc
mov
lods
mov
mov
mov
mov
jns
push
add
mov
push
addr16
mov
push
fdivp
mov
and
fimull
ret
sbb
mov
add
mov
mov
int3
push
sub
jnp
lcall
mov
mov
out
inc
add
push
scas
jns
inc
and
test
cmp
mov
movsb
ret
adc
mov
or
jp
out
cli
pop
mov
int3
loop
mov
mov
imul
lret
mov
je
add
add
insb
dec
xchg
shrl
xchg
fnstsw
hlt
lret
dec
pop
rcll
mov
jge
stos
mov
xor
mov
push
add
rcll
mov
push
add
mov
mov
or
push
add
lods
pop
jae
sub
pop
cmp
mov
add
stos
and
add
xchg
movsl
pop
adc
mov
push
fs
or
pop
clc
push
loope
mov
mov
inc
es
mov
bound
mov
and
inc
cltd
cmp
icebp
mov
lods
jge
fnsave
jge
movsl
add
aas
inc
jmp
mov
mov
mov
add
mov
mov
add
mov
pop
or
jp
mov
icebp
jecxz
popa
sub
lods
repz
jo
mov
mov
das
sbb
push
cmp
ret
mov
dec
jge
rolb
jle
or
xlat
stc
ficompl
outsl
shll
sbb
mov
jae
sti
dec
aaa
loopne
mov
add
add
cmp
scas
stos
inc
add
fwait
inc
add
loope
mov
mov
outsl
imul
loopne
mov
cmp
mov
add
inc
add
pop
arpl
pop
mov
add
cmp
add
mov
inc
add
mov
jnp
addb
xchg
add
jb
mov
vmovdqa
paddsw
shll
mov
mov
adcl
sahf
pop
add
and
add
mov
or
mov
popa
in
fincstp
jbe
jno
add
xor
add
mov
mov
add
sub
inc
mov
and
int
mov
mov
mov
scas
add
mov
mov
mov
mov
in
or
inc
outsb
push
push
jo
mov
xor
mov
jl
add
mov
scas
outsl
jecxz
add
shll
aaa
mov
stc
fs
popf
push
mov
lret
js
add
pushf
jmp
mov
sbb
add
testl
add
mov
push
popf
js
jno
or
mov
data16
test
insb
rolb
mov
jle
lcall
flds
mov
bound
mov
push
ss
push
clc
sub
mov
mov
sbb
xchg
add
lcall
daa
std
rolb
mov
leave
lea
outsl
or
jl
jo
mov
pop
pop
push
inc
add
push
pop
jo
mov
cmpsl
dec
xchg
dec
decb
pop
ret
or
or
in
inc
js
leave
icebp
imul
and
fimuls
dec
adc
mov
jb
mov
adc
ret
imul
or
movsl
lea
and
fimull
addb
leave
mov
lods
jb
mov
jecxz
add
inc
fwait
mov
into
sub
cmp
rcrl
out
test
cmp
add
cltd
in
out
cmpsl
mov
lods
mov
mov
xor
imul
imul
mov
fs
xchg
add
rolb
mov
iret
gs
push
add
cltd
dec
dec
movsl
fisubs
loop
mov
add
out
add
cmp
jbe
xlat
addb
rolb
addr16
outsl
push
mov
or
mov
push
jg
add
imul
imulb
mov
adc
test
daa
out
mov
addb
rolb
test
pop
mov
ret
dec
mov
les
pop
add
mov
rolb
mov
rolb
mov
aas
xchg
mov
inc
xchg
test
xchg
mov
cmp
cmp
sbb
lea
dec
mov
fistps
push
add
or
lret
cmpsl
fwait
jecxz
add
ret
inc
and
insl
fwait
push
outsl
xchg
std
add
dec
or
add
std
push
popa
adc
mov
inc
add
add
sbb
add
cwtl
xor
mov
add
add
fnstcw
out
sub
pop
icebp
push
gs
inc
dec
es
das
jno
dec
ret
sbb
mov
jo
mov
dec
inc
add
push
pop
mov
add
cs
stos
rolb
mov
xchg
add
cli
mov
mov
mov
outsb
sbb
add
gs
jb
mov
push
lds
pop
push
xchg
pusha
add
mov
pop
in
add
in
iret
xchg
jle
xchg
das
int
add
mov
and
mov
movsb
push
inc
cmpsl
sar
or
pop
insb
pop
icebp
rolb
mov
jnp
add
jecxz
mov
xchg
les
add
imul
pop
out
sub
add
mov
repz
out
ds
dec
cmc
add
push
out
add
cli
mov
mov
sahf
stos
cmp
addb
sar
push
inc
add
mov
mov
out
mov
adc
arpl
insb
in
lock
in
ja
mov
or
xchg
and
jle
mov
add
add
test
inc
push
icebp
add
mov
add
test
lock
xchg
xor
lret
mov
negl
pop
sub
lahf
scas
push
cmp
xchg
mov
add
xor
mov
jge
pop
enter
outsl
stos
xchg
xchg
in
lret
sbb
mov
mov
mov
xchg
rolb
stos
nop
add
lods
ja
std
xor
add
mov
jp
mov
addb
mov
mov
mov
outsb
aad
cmp
add
mov
roll
insl
inc
pop
xchg
je
cltd
mov
cmpsb
fmuls
push
add
pop
jb
mov
pop
adc
rolb
mov
dec
xchg
insb
scas
testl
jg
add
mov
add
push
mov
mov
fstl
add
add
popf
cmp
mov
xchg
add
shr
xlat
pop
sbb
ljmp
mov
xchg
fstp
push
add
mov
mov
push
test
push
fsubrs
mov
mov
mov
push
pushf
das
xorl
add
data16
aaa
and
mov
xchg
lods
and
mov
cmp
lret
add
or
inc
aam
scas
enter
fwait
pop
insl
xor
mov
add
pop
mov
xchg
sub
jge
pop
es
add
test
mov
add
add
mov
mov
jnp
jne
add
imul
mov
jmp
adc
mov
jo
mov
cmp
and
jae
lcall
mov
and
gs
add
add
xor
in
arpl
out
cmp
loop
mov
aaa
dec
icebp
inc
jo
mov
add
mov
add
mov
mov
mov
clc
repnz
nop
cld
jae
add
idivl
mov
repnz
nop
cld
jae
cld
add
aam
mov
clc
repnz
nop
cld
jae
idivl
add
inc
add
lcall
add
jmp
jmp
lret
clc
repnz
nop
cld
jae
add
add
sti
cmp
mov
nop
cld
jae
push
add
push
add
jmp
repnz
nop
cld
jae
mov
add
add
lds
add
clc
repnz
nop
cld
jae
add
mov
adc
and
push
mov
xchg
ret
jmp
bound
jg
push
mov
nop
leave
nop
jmp
add
add
in
jae
fistps
mov
nop
leave
nop
jmp
add
add
popf
inc
sbb
rolb
repnz
nop
cld
jae
add
out
testl
push
mov
nop
leave
nop
jmp
add
add
cld
push
mov
nop
leave
nop
jmp
add
add
push
add
adc
mov
repnz
fiadds
xchg
ret
dec
mov
loop
add
add
scas
div
clc
repnz
nop
cld
jae
fiadds
add
fimull
pop
cld
inc
add
dec
add
add
aas
add
push
mov
nop
leave
nop
jmp
mov
add
inc
mov
clc
repnz
nop
cld
jae
add
add
add
add
add
loopne
add
add
add
push
push
mov
xchg
ret
add
add
add
dec
and
cmpsb
cmp
mov
xchg
ret
cmp
adc
add
fiadds
cld
rolb
mov
nop
nop
cld
jae
cmc
add
popf
add
in
jne
mov
inc
sldt
clc
repnz
nop
cld
jae
add
dec
push
clc
repnz
nop
cld
jae
loopne
xchg
add
and
loopne
clc
repnz
nop
cld
jae
cmp
inc
inc
icebp
jecxz
push
clc
repnz
nop
cld
jae
add
add
add
daa
xor
nop
cld
jae
jge
lods
add
add
arpl
mov
xchg
ret
xor
add
and
add
add
add
add
add
cmp
add
add
xlat
mov
nop
nop
cld
jae
add
adc
dec
and
mov
push
mov
xchg
ret
cwtl
negl
in
push
inc
add
mov
repnz
nop
cld
jae
int
add
add
push
mov
nop
leave
nop
jmp
add
add
pushl
push
push
mov
xchg
ret
cmp
mov
dec
add
incl
repnz
nop
cld
jae
cmc
jge
add
dec
add
repnz
nop
cld
jae
add
loop
in
add
mov
mov
inc
add
ret
mov
add
add
mov
nop
cld
jae
sti
dec
mov
dec
ljmp
jae
add
sti
xchg
mov
push
add
push
clc
repnz
nop
cld
jae
xchg
dec
or
sbb
fisubs
push
mov
add
data16
les
push
add
pop
add
int
jmp
pushl
add
negl
notb
mov
adc
mov
mov
pop
clc
repnz
nop
cld
jae
popf
push
add
add
add
push
in
mov
clc
repnz
nop
cld
jae
mov
add
add
test
push
mov
nop
leave
nop
jmp
add
add
mov
clc
repnz
nop
cld
jae
and
sbb
nop
nop
cld
jae
cmp
lods
add
add
repnz
nop
nop
cld
jae
add
push
and
add
clc
repnz
nop
cld
jae
adc
scas
testb
or
mov
nop
leave
nop
jmp
testl
add
dec
add
mov
xchg
ret
add
add
add
scas
xor
push
mov
nop
leave
nop
jmp
lds
sbb
xchg
clc
repnz
nop
cld
jae
add
add
cwtl
int3
push
push
mov
nop
leave
nop
jmp
mov
add
fnstenv
mov
push
mov
xchg
ret
add
scas
add
cmpl
in
nop
leave
nop
jmp
add
cmc
jns
push
mov
xchg
ret
fdivrl
incl
xchg
xor
mov
insb
mov
clc
repnz
nop
cld
jae
incl
mov
add
in
add
push
add
add
out
mov
push
mov
xchg
ret
add
add
nop
nop
cld
jae
idivl
xchg
pop
ret
dec
pop
clc
repnz
nop
cld
jae
ret
add
out
xor
clc
repnz
nop
cld
jae
add
add
popa
add
sahf
inc
push
add
add
add
mov
xor
mov
push
mov
xchg
ret
loopne
add
xchg
add
mov
imul
push
mov
nop
leave
nop
jmp
xchg
cld
add
fidivrl
clc
repnz
nop
cld
jae
add
out
scas
lock
mov
xchg
ret
cld
adc
incl
cmp
ret
imul
nop
nop
cld
jae
pop
mov
add
stc
add
push
add
add
repnz
nop
cld
jae
add
in
adc
cmp
outsb
and
repnz
nop
cld
jae
out
add
popf
pop
jo
add
clc
repnz
nop
cld
jae
mov
and
push
add
repnz
nop
cld
jae
add
add
lods
arpl
nop
cld
jae
add
add
divb
and
push
mov
xchg
ret
push
add
add
nop
nop
cld
jae
loopne
add
add
add
sub
in
nop
leave
nop
jmp
add
sbb
test
push
mov
nop
leave
nop
jmp
sbb
add
mov
clc
repnz
nop
cld
jae
roll
lds
add
inc
and
clc
repnz
nop
cld
jae
loopne
xor
ret
repnz
nop
cld
jae
xor
mov
add
push
mov
xchg
ret
add
pop
add
add
xchg
in
nop
leave
nop
jmp
testb
stc
inc
pop
add
mov
clc
repnz
nop
cld
jae
neg
add
ret
aam
add
clc
repnz
nop
cld
jae
add
add
fisttps
mov
adc
repnz
nop
cld
jae
add
cld
add
or
clc
repnz
nop
cld
jae
add
addr16
mov
xchg
ret
add
add
mov
clc
repnz
nop
cld
jae
add
add
test
cmp
repnz
nop
cld
jae
add
add
mov
nop
leave
nop
jmp
cwtl
adc
add
mov
jl
subl
jae
add
stc
out
add
clc
repnz
nop
cld
jae
xor
jge
mov
clc
repnz
nop
cld
jae
mov
lcall
ret
bound
push
idivb
fldln2
add
dec
int
fadd
mov
shl
pop
sub
mov
adc
repnz
nop
cld
jae
add
faddl
cmp
add
clc
repnz
nop
cld
jae
in
add
push
add
in
nop
leave
nop
jmp
lds
add
in
mov
clc
repnz
nop
cld
jae
add
in
add
int
inc
add
add
loopne
add
int3
movswl
clc
repnz
nop
cld
jae
mov
popl
nop
nop
cld
jae
scas
ret
mov
add
fpatan
stos
push
mov
nop
leave
nop
jmp
jmp
add
jns
inc
call
inc
add
in
sti
add
add
clc
repnz
nop
cld
jae
add
add
mov
xchg
ret
sti
add
add
add
dec
sub
cld
jae
scas
loopne
bound
add
add
clc
repnz
nop
cld
jae
jo
cmp
add
cmpsl
xchg
inc
xor
mov
mov
xchg
ret
add
mov
mov
jne
push
mov
xchg
ret
xor
pop
cwtl
in
aam
movsl
xchg
bound
mov
pop
cmp
push
mov
nop
leave
nop
jmp
add
add
enter
nop
cld
jae
lods
add
add
fmull
add
add
in
nop
leave
nop
jmp
add
stc
add
clc
repnz
nop
cld
jae
jge
add
dec
clc
repnz
nop
cld
jae
add
popf
in
in
pop
adc
clc
repnz
nop
cld
jae
add
mov
add
bound
sbb
mov
nop
leave
nop
jmp
add
add
pop
ret
rolb
pushw
sub
jp
jbe
push
mov
nop
leave
nop
jmp
add
out
add
ret
push
mov
xchg
ret
dec
add
add
add
clc
repnz
nop
cld
jae
add
inc
add
clc
repnz
nop
cld
jae
xchg
add
lods
cld
jo
cmp
push
mov
nop
leave
nop
jmp
mov
add
iret
mov
push
mov
xchg
ret
ret
xor
add
clc
repnz
nop
cld
jae
dec
jge
out
in
loopne
cmp
push
mov
nop
leave
nop
jmp
mov
movsb
ja
movzwl
push
mov
xchg
ret
in
fiadds
incl
cmp
mov
clc
repnz
nop
cld
jae
mov
add
pop
sub
repnz
nop
cld
jae
inc
sbb
enter
push
mov
xchg
ret
scas
xchg
lds
loopne
dec
add
nop
nop
cld
jae
add
dec
mov
push
mov
nop
leave
nop
jmp
add
mov
inc
clc
repnz
nop
cld
jae
ret
testb
add
jge
or
sar
nop
nop
cld
jae
add
stc
add
add
shl
xchg
add
add
nop
add
push
mov
nop
leave
nop
jmp
add
lods
add
cld
xor
clc
repnz
nop
cld
jae
add
add
add
add
add
clc
repnz
nop
cld
jae
adc
ret
add
clc
clc
repnz
nop
cld
jae
add
add
out
jmp
add
dec
and
loopne
add
mov
sbb
scas
add
jbe
clc
repnz
nop
cld
jae
add
lods
add
and
repnz
nop
cld
jae
xchg
enter
add
push
mov
nop
leave
nop
jmp
mov
add
xor
nop
nop
cld
jae
enter
jmp
add
fstl
in
sbb
mov
lea
cmp
stos
call
clc
repnz
nop
cld
jae
jmp
and
mov
popa
push
mov
nop
leave
nop
jmp
add
add
in
add
repnz
nop
cld
jae
add
scas
adc
pop
add
pop
call
clc
repnz
nop
cld
jae
add
add
mov
clc
repnz
nop
cld
jae
dec
jge
add
pusha
clc
repnz
nop
cld
jae
add
add
add
clc
repnz
nop
cld
jae
or
out
bound
jmp
or
cmp
ret
ret
pop
add
add
ret
clc
repnz
nop
cld
jae
add
add
push
mov
xchg
ret
add
sbb
and
mov
call
clc
repnz
nop
cld
jae
int
add
xchg
mov
scas
push
clc
repnz
nop
cld
jae
dec
or
fisubs
cltd
push
push
mov
xchg
ret
add
and
mov
mov
push
cmpl
push
mov
nop
leave
nop
jmp
add
add
in
arpl
repnz
nop
cld
jae
add
add
jge
sar
nop
nop
cld
jae
in
and
cwtl
jmp
add
add
testl
add
xor
xor
push
mov
xchg
ret
add
push
add
add
push
mov
nop
leave
nop
jmp
add
call
clc
repnz
nop
cld
jae
add
mov
fiadds
add
clc
repnz
nop
cld
jae
sbb
addb
cmp
in
nop
leave
nop
jmp
scas
jge
mov
dec
les
jmp
nop
cld
jae
add
scas
ficoms
into
iret
inc
add
jge
adc
add
xor
clc
repnz
nop
cld
jae
in
cmp
and
out
jl
clc
repnz
nop
cld
jae
add
repnz
nop
cld
jae
ret
mov
add
mov
cmc
adcl
push
mov
xchg
ret
add
add
add
repnz
nop
cld
jae
add
ret
add
iret
shr
clc
repnz
nop
cld
jae
add
add
decl
pusha
clc
repnz
nop
cld
jae
lcall
enter
mov
push
clc
repnz
nop
cld
jae
lods
add
out
in
bound
mov
add
add
repnz
nop
cld
jae
add
mov
clc
repnz
nop
cld
jae
cmp
ret
add
call
clc
repnz
nop
cld
jae
add
add
vdivps
loope
repnz
nop
cld
jae
scas
sti
add
add
add
or
test
repnz
nop
cld
jae
cmp
adc
push
mov
push
mov
nop
leave
nop
jmp
mov
add
decl
pop
adc
in
add
add
enter
mov
clc
repnz
nop
cld
jae
add
faddl
add
or
in
nop
leave
nop
jmp
add
in
ret
dec
mov
push
mov
xchg
ret
add
add
in
icebp
jo
mov
mov
clc
repnz
nop
cld
jae
xchg
add
hlt
clc
repnz
nop
cld
jae
loopne
out
and
clc
repnz
nop
cld
jae
add
ret
add
lret
sub
clc
repnz
nop
cld
jae
inc
dec
add
add
lcall
cld
jae
pop
xchg
in
add
add
dec
movzwl
clc
repnz
nop
cld
jae
cmc
add
popa
add
repnz
nop
cld
jae
xor
add
push
clc
repnz
nop
cld
jae
int
incl
mov
popf
ret
pusha
add
push
mov
xchg
ret
ret
xchg
add
sarl
mov
inc
adc
cmpl
nop
nop
cld
jae
add
scas
add
mov
nop
leave
nop
jmp
add
add
push
sub
rclb
nop
leave
nop
jmp
ret
enter
adc
mov
pop
pop
push
mov
xchg
ret
add
xor
adc
nop
nop
cld
jae
jo
lds
add
jge
in
je
clc
repnz
nop
cld
jae
dec
incl
mov
repnz
nop
cld
jae
add
in
add
sbb
nop
nop
cld
jae
xchg
add
push
add
mov
enter
push
mov
xchg
ret
add
add
add
push
mov
nop
leave
nop
jmp
sbb
add
pop
push
mov
xchg
ret
loop
loopne
loop
mov
mov
clc
repnz
nop
cld
jae
add
dec
ret
push
mov
xchg
ret
enter
int
add
or
pop
jne
clc
repnz
nop
cld
jae
add
add
inc
add
inc
and
repnz
nop
cld
jae
add
int
dec
add
xchg
fiaddl
xchg
ret
add
add
add
xchg
add
in
nop
leave
nop
jmp
mov
out
add
cwtl
sbb
call
clc
repnz
nop
cld
jae
add
stc
scas
adc
mov
dec
sub
js
inc
add
add
add
scas
out
add
clc
repnz
nop
cld
jae
adc
das
mov
clc
repnz
nop
cld
jae
dec
bound
lcall
nop
leave
nop
jmp
ret
popf
add
mov
push
mov
xchg
ret
add
add
cmp
cld
sbb
nop
cld
jae
or
add
xor
mov
clc
repnz
nop
cld
jae
sbb
add
pop
popa
clc
repnz
nop
cld
jae
roll
add
fsubrs
clc
repnz
nop
cld
jae
cmp
add
add
push
jo
mov
xor
push
mov
xchg
ret
ret
mov
add
and
dec
push
mov
nop
leave
nop
jmp
int
testb
mov
add
cld
clc
repnz
nop
cld
jae
stc
in
sti
out
add
push
mov
nop
leave
nop
jmp
add
add
mov
sub
in
nop
leave
nop
jmp
xchg
ret
dec
jl
push
mov
xchg
ret
sti
cwtl
add
xor
or
into
inc
add
add
mov
xchg
add
jne
clc
repnz
nop
cld
jae
add
add
inc
jbe
push
int3
imul
clc
repnz
nop
cld
jae
flds
add
test
in
nop
leave
nop
jmp
add
or
add
dec
sub
ds
inc
add
add
add
incl
push
fbld
mov
nop
leave
nop
jmp
add
add
add
jge
aam
dec
push
mov
jle
mov
add
pop
mov
and
rcr
lods
clc
repnz
nop
cld
jae
add
lods
xchg
hlt
inc
add
add
add
cld
ret
inc
data16
mov
nop
cld
jae
add
add
and
clc
repnz
nop
cld
jae
mov
add
popf
push
fsts
repnz
nop
cld
jae
and
add
add
add
push
push
mov
nop
leave
nop
jmp
add
xchg
add
jge
and
push
push
mov
xchg
ret
and
add
ret
out
add
add
push
mov
nop
leave
nop
jmp
add
jo
add
pop
mov
clc
repnz
nop
cld
jae
push
pop
enter
repnz
nop
cld
jae
add
add
stc
jmp
add
and
in
ret
add
lods
cmpsl
in
push
push
mov
xchg
ret
sbb
mov
add
sub
push
mov
xchg
ret
int
xor
mov
in
nop
leave
nop
jmp
add
enter
xor
mov
xchg
ret
add
xor
movzwl
clc
repnz
nop
cld
jae
cmc
add
jg
push
mov
nop
leave
nop
jmp
add
ret
add
sar
nop
nop
cld
jae
ret
pop
add
add
out
push
clc
repnz
nop
cld
jae
add
stc
jmp
cwtl
ret
push
mov
nop
leave
nop
jmp
mov
add
jl
sbb
repnz
nop
cld
jae
pop
mov
add
push
dec
mov
push
mov
nop
leave
nop
jmp
stc
add
pop
scas
add
repnz
nop
cld
jae
add
add
fiadds
lea
clc
repnz
nop
cld
jae
add
add
or
nop
leave
nop
jmp
add
adc
ret
es
push
clc
repnz
nop
cld
jae
scas
imull
mov
add
in
nop
leave
nop
jmp
add
add
in
in
nop
add
clc
repnz
nop
cld
jae
add
idiv
sbb
and
mov
push
mov
nop
leave
nop
jmp
jo
incl
add
ret
xorl
clc
repnz
nop
cld
jae
add
sbbl
js
add
push
mov
nop
leave
nop
jmp
and
jo
pop
rolb
mov
and
clc
repnz
nop
cld
jae
inc
add
add
xor
pop
clc
repnz
nop
cld
jae
add
mov
add
xchg
idiv
mov
clc
repnz
nop
cld
jae
add
add
scas
push
iret
add
push
mov
nop
leave
nop
jmp
add
ret
loop
rolb
mov
cmp
clc
repnz
nop
cld
jae
lods
faddl
add
push
mov
and
and
add
xchg
out
pop
into
stos
test
push
push
mov
xchg
ret
add
adc
add
xchg
push
cwtl
mov
push
mov
xchg
ret
add
add
testl
add
or
push
mov
nop
leave
nop
jmp
add
sar
nop
nop
cld
jae
popf
add
loopne
dec
add
sar
mov
xchg
ret
add
add
add
ds
push
mov
xchg
ret
add
xchg
loopne
lds
ljmp
nop
cld
jae
or
add
mov
mov
clc
repnz
nop
cld
jae
or
xchg
jp
movb
nop
nop
cld
jae
add
pop
xor
clc
repnz
nop
cld
jae
add
add
bound
add
addb
push
push
clc
repnz
nop
cld
jae
add
scas
xor
repnz
nop
cld
jae
inc
int
add
add
mov
mov
add
cmp
ret
add
add
jo
push
xor
xor
push
mov
nop
leave
nop
jmp
add
jecxz
lahf
lea
clc
repnz
nop
cld
jae
add
add
add
cwtl
stos
clc
repnz
nop
cld
jae
adc
add
in
loop
xchg
push
add
cmp
repnz
nop
cld
jae
adc
add
xor
pop
push
mov
xchg
ret
ret
ret
popf
add
add
cmp
nop
cld
jae
popf
inc
mov
ret
xchg
add
mov
clc
repnz
nop
cld
jae
in
mov
and
add
idiv
call
in
nop
leave
nop
jmp
add
sbb
push
and
push
mov
xchg
ret
divb
rcl
add
adc
add
repnz
nop
cld
jae
add
xchg
scas
cmp
push
mov
nop
leave
nop
jmp
loop
bound
add
clc
repnz
nop
cld
jae
mov
add
sti
mov
clc
repnz
nop
cld
jae
add
roll
add
push
mov
xchg
ret
add
xchg
ret
mov
stc
cli
shl
clc
repnz
nop
cld
jae
add
add
add
push
add
incl
jo
in
in
add
dec
scas
add
sbb
clc
repnz
nop
cld
jae
dec
adc
adc
fsub
fsubr
jnp
stc
add
add
add
add
add
rclb
in
nop
leave
nop
jmp
pop
add
and
add
mov
xchg
ret
push
add
adc
in
jmp
add
add
in
add
add
or
mov
repz
repnz
nop
cld
jae
int
add
loopne
bound
clc
repnz
nop
cld
jae
add
add
or
repz
clc
repnz
nop
cld
jae
add
adc
repnz
nop
cld
jae
add
loopne
xchg
daa
cwtl
dec
clc
repnz
nop
cld
jae
jge
scas
cmp
add
add
sub
nop
nop
cld
jae
add
ret
cmp
add
mov
mov
faddl
clc
push
mov
nop
leave
nop
jmp
add
cwtl
push
fiadds
add
pushl
push
mov
nop
leave
nop
jmp
in
mov
enter
mov
clc
repnz
nop
cld
jae
xor
add
push
mov
ficoms
leave
nop
jmp
add
fisubs
jo
add
nop
nop
cld
jae
and
add
popf
or
nop
nop
cld
jae
pop
cmc
add
in
add
clc
repnz
nop
cld
jae
ret
or
add
mul
jbe
pusha
clc
repnz
nop
cld
jae
xchg
fldcw
sti
cmpsb
outsl
mov
clc
repnz
nop
cld
jae
add
in
add
and
mov
or
repnz
nop
cld
jae
stc
mov
add
or
push
dec
push
mov
nop
leave
nop
jmp
xor
add
pop
cwtl
mov
clc
repnz
nop
cld
jae
add
add
ja
repnz
nop
cld
jae
add
mulb
mov
push
mov
nop
leave
nop
jmp
add
scas
nop
add
jb
clc
repnz
nop
cld
jae
add
add
popa
add
repnz
nop
cld
jae
faddl
add
fcompl
add
add
repnz
nop
cld
jae
add
out
mov
clc
repnz
nop
cld
jae
push
add
lods
cmp
cmpsl
out
jp
jg
clc
repnz
nop
cld
jae
mov
adc
jne
nop
leave
nop
jmp
add
pop
mov
div
push
mov
nop
leave
nop
jmp
and
mov
pop
add
mov
jl
arpl
push
mov
nop
leave
nop
jmp
out
add
add
adc
clc
repnz
nop
cld
jae
cld
in
pop
add
mov
sbb
add
in
nop
leave
nop
jmp
add
add
add
add
repnz
nop
cld
jae
jo
popf
fnstenv
mov
repnz
nop
cld
jae
add
ret
add
sbb
add
faddl
add
int
add
sbb
repnz
nop
cld
jae
add
add
pusha
add
test
repnz
nop
cld
jae
lds
xchg
out
mov
clc
repnz
nop
cld
jae
cld
dec
add
jo
mov
mov
clc
repnz
nop
cld
jae
jmp
jne
push
mov
nop
leave
nop
jmp
pop
inc
scas
into
mov
clc
repnz
nop
cld
jae
add
and
add
cmp
mov
nop
leave
nop
jmp
add
int
rcll
in
nop
leave
nop
jmp
and
or
pop
in
dec
pop
push
mov
xchg
ret
add
add
add
add
repnz
nop
cld
jae
dec
add
jge
jmp
xor
push
mov
nop
leave
nop
jmp
in
add
movsb
addr16
mov
repnz
nop
cld
jae
in
testb
loopne
inc
add
add
push
mov
xchg
ret
add
add
fiadds
xor
nop
nop
cld
jae
add
ret
dec
jmp
out
test
push
mov
nop
leave
nop
jmp
or
pop
loop
inc
add
mov
repnz
nop
cld
jae
add
or
mov
nop
leave
nop
jmp
sti
add
jecxz
add
mov
in
mov
clc
repnz
nop
cld
jae
lds
mov
stc
mov
clc
repnz
nop
cld
jae
int
mov
mov
in
pop
clc
repnz
nop
cld
jae
mov
cmp
cmc
mov
mov
cmp
ret
add
and
add
fdivrp
lea
clc
repnz
nop
cld
jae
mov
add
cmc
scas
pusha
clc
repnz
nop
cld
jae
add
loopne
in
cmp
sbb
push
mov
xchg
ret
or
add
jmp
incl
add
sbb
stc
scas
add
add
add
push
mov
xchg
ret
mov
add
adc
add
sub
add
repnz
nop
cld
jae
loop
pop
sti
add
mov
clc
repnz
nop
cld
jae
jo
dec
out
add
add
sbb
inc
add
lods
add
add
testb
mov
clc
repnz
nop
cld
jae
add
scas
in
add
inc
or
xor
clc
repnz
nop
cld
jae
add
add
clc
repnz
nop
cld
jae
ljmp
out
add
clc
repnz
nop
cld
jae
mov
push
xor
mov
sub
add
pop
add
add
fdivr
inc
and
add
mov
clc
repnz
nop
cld
jae
popf
add
bound
mov
add
in
clc
repnz
nop
cld
jae
in
jge
cltd
mov
push
mov
xchg
ret
xor
enter
lret
clc
repnz
nop
cld
jae
xor
scas
dec
mov
add
clc
repnz
nop
cld
jae
add
mov
fists
mov
xchg
ret
in
inc
and
pop
mov
add
add
push
mov
xchg
ret
ljmp
xchg
add
sub
push
mov
xchg
ret
add
lahf
push
clc
repnz
nop
cld
jae
lods
add
push
loopne
xchg
adc
push
mov
add
dec
testb
cmp
pop
sub
add
or
push
add
repnz
nop
cld
jae
add
add
ret
or
test
jecxz
clc
repnz
nop
cld
jae
fsub
mov
xor
mov
add
clc
repnz
nop
cld
jae
add
out
add
mov
adc
mov
add
add
add
loopne
mov
ret
add
add
push
mov
xchg
ret
add
add
mov
add
test
movb
nop
nop
cld
jae
add
dec
inc
mov
inc
sub
repnz
nop
cld
jae
xor
cwtl
xchg
push
mov
xchg
ret
jo
sti
in
fsubrp
xor
arpl
push
mov
xchg
ret
jo
in
add
add
cmpl
push
mov
xchg
ret
cmc
jo
scas
add
xchg
inc
xchg
repz
movsl
xor
dec
add
mov
nop
leave
nop
jmp
or
or
add
push
clc
repnz
nop
cld
jae
add
cmp
and
scas
stc
jne
mov
sub
xabort
nop
nop
cld
jae
pop
add
mov
sar
inc
add
cmp
sbb
add
clc
repnz
nop
cld
jae
add
dec
add
mov
sahf
mov
push
mov
nop
leave
nop
jmp
loopne
cld
loopne
add
test
clc
repnz
nop
cld
jae
and
jmp
push
push
mov
xchg
ret
cld
fdivl
loop
push
rep
clc
repnz
nop
cld
jae
enter
add
add
push
test
hlt
inc
add
and
int
or
sbb
xchg
add
data16
repnz
nop
cld
jae
add
add
orl
clc
repnz
nop
cld
jae
call
mov
push
mov
nop
leave
nop
jmp
add
add
add
loopne
clc
repnz
nop
cld
jae
jmp
add
jmp
add
add
xchg
jmp
cmp
dec
loop
mov
nop
leave
nop
jmp
add
cmp
cld
add
idivl
add
push
mov
nop
leave
nop
jmp
add
loop
dec
in
xchg
xchg
jp
clc
repnz
nop
cld
jae
loopne
roll
add
loopne
mov
clc
repnz
nop
cld
jae
add
ss
mov
push
mov
xchg
ret
add
add
roll
int
js
decl
lds
add
add
and
enter
ret
jge
clc
repnz
nop
cld
jae
flds
add
div
mov
movsb
clc
repnz
nop
cld
jae
mov
ret
ffree
clc
repnz
nop
cld
jae
add
add
mov
inc
and
mov
nop
push
mov
xchg
ret
add
add
add
add
jo
cmp
nop
nop
cld
jae
add
add
push
push
mov
xchg
ret
xchg
add
add
jmp
scas
or
mov
in
nop
leave
nop
jmp
add
ror
xor
clc
repnz
nop
cld
jae
add
or
add
data16
nop
cld
jae
mov
pop
add
xchg
add
pop
je
clc
repnz
nop
cld
jae
add
add
les
repnz
nop
cld
jae
add
add
add
call
in
nop
leave
nop
jmp
add
inc
add
and
clc
repnz
nop
cld
jae
push
xor
xor
add
and
mov
push
clc
repnz
nop
cld
jae
add
add
jne
sub
add
add
leave
nop
jmp
add
pop
pushl
mov
clc
repnz
nop
cld
jae
add
add
dec
sub
jle
clc
repnz
nop
cld
jae
mov
add
testl
add
add
repnz
nop
cld
jae
roll
hlt
cmpsb
push
add
mov
xchg
ret
add
mov
ret
cmp
mov
jne
clc
repnz
nop
cld
jae
add
pop
xor
add
popa
clc
repnz
nop
cld
jae
or
inc
add
mov
sar
cmpl
push
mov
nop
leave
nop
jmp
add
add
add
repnz
nop
cld
jae
in
add
out
pop
add
pusha
clc
repnz
nop
cld
jae
dec
add
add
cmp
add
test
add
clc
repnz
nop
cld
jae
add
add
and
push
mov
xchg
ret
mov
add
add
add
push
push
mov
xchg
ret
mov
add
inc
add
add
add
repnz
nop
cld
jae
faddl
add
push
clc
repnz
nop
cld
jae
ret
add
push
push
mov
xchg
ret
add
add
and
enter
ret
push
mov
nop
leave
nop
jmp
stc
add
adc
push
clc
repnz
nop
cld
jae
add
sbb
inc
jo
enter
inc
add
add
or
stc
xchg
sub
add
das
test
push
mov
nop
leave
nop
jmp
add
add
fsts
nop
nop
cld
jae
add
jge
inc
add
add
add
clc
repnz
nop
cld
jae
add
ret
inc
cwtl
rep
push
mov
xchg
ret
pop
add
add
bound
dec
cmpsb
out
xchg
clc
repnz
nop
cld
jae
cwtl
mov
in
add
pop
call
clc
repnz
nop
cld
jae
and
push
or
in
add
add
jl
scas
add
pop
mov
jb
clc
repnz
nop
cld
jae
add
sti
out
xchg
mov
repnz
nop
cld
jae
loop
jmp
sub
movsb
idiv
call
in
nop
leave
nop
jmp
out
adc
jno
fsubrp
je
clc
repnz
nop
cld
jae
lds
jge
sti
push
push
mov
nop
leave
nop
jmp
and
jge
pushl
jne
clc
repnz
nop
cld
jae
add
popf
incb
nop
cld
jae
loop
mov
add
or
jmp
add
add
scas
add
mov
pop
push
mov
nop
leave
nop
jmp
fsts
add
add
add
jbe
add
mov
clc
repnz
nop
cld
jae
loopne
iret
and
push
mov
xchg
ret
add
mov
add
add
out
clc
repnz
nop
cld
jae
add
popf
ds
push
mov
nop
leave
nop
jmp
or
add
add
mov
xchg
ret
lods
jo
add
inc
and
add
clc
repnz
nop
cld
jae
xor
push
rcll
mov
fimull
nop
cld
jae
in
dec
mov
lods
in
add
ret
push
mov
nop
leave
nop
jmp
add
scas
add
cld
and
or
mov
xchg
ret
ret
add
add
add
sub
xor
add
clc
repnz
nop
cld
jae
add
push
mov
xchg
ret
add
add
sbb
and
mov
add
repnz
nop
cld
jae
stc
add
push
flds
nop
nop
cld
jae
add
enter
repnz
nop
cld
jae
sti
add
add
add
mov
push
mov
nop
leave
nop
jmp
adc
pop
dec
push
mov
nop
leave
nop
jmp
add
add
rolb
mov
movzwl
clc
repnz
nop
cld
jae
jmp
ljmp
nop
nop
cld
jae
sar
loopne
jbe
push
push
mov
xchg
ret
add
add
push
je
clc
repnz
nop
cld
jae
add
fld
add
add
add
repnz
nop
cld
jae
add
add
pushl
clc
repnz
nop
cld
jae
add
cmp
add
data16
ret
clc
repnz
nop
cld
jae
add
in
add
mov
nop
leave
nop
jmp
ret
lods
add
adc
xor
clc
repnz
nop
cld
jae
add
add
dec
add
mov
xchg
ret
add
push
add
xchg
clc
repnz
nop
cld
jae
loopne
dec
lea
jmp
pushl
and
jge
add
mov
les
clc
repnz
nop
cld
jae
cld
jmp
inc
xchg
rolb
call
in
add
add
lea
in
jne
in
push
cmpsl
jnp
mov
sub
repnz
nop
cld
jae
lds
dec
push
clc
repnz
nop
cld
jae
pop
xor
add
jnp
clc
repnz
nop
cld
jae
bound
scas
add
out
cwtl
pop
leave
pusha
clc
repnz
nop
cld
jae
bound
decl
stc
push
sti
jne
jmp
add
pop
add
add
cmp
add
sti
push
push
mov
xchg
ret
testl
add
add
loop
mov
add
clc
repnz
nop
cld
jae
add
add
mov
mov
test
repnz
nop
cld
jae
add
add
add
js
inc
and
clc
repnz
nop
cld
jae
loopne
add
add
repnz
nop
cld
jae
mov
pop
add
xor
push
mov
nop
leave
nop
jmp
mov
add
ja
and
clc
repnz
nop
cld
jae
add
fld
push
mov
nop
leave
nop
jmp
add
add
add
sbb
mov
nop
cld
jae
ret
testb
push
dec
add
pop
je
clc
repnz
nop
cld
jae
mov
rolb
xor
clc
repnz
nop
cld
jae
add
add
mov
push
mov
xchg
ret
add
and
add
lds
nop
cld
jae
cmc
mov
loop
cmc
stc
add
nop
cld
jae
adc
cmc
adc
mov
add
push
mov
xchg
ret
add
bound
pop
add
repnz
nop
cld
jae
cmp
cwtl
add
add
add
mov
icebp
inc
ds
push
mov
nop
leave
nop
jmp
add
shl
push
clc
repnz
nop
cld
jae
stc
add
add
imul
ret
inc
loop
clc
repnz
nop
cld
jae
testl
mov
clc
repnz
nop
cld
jae
enter
push
mov
xchg
ret
mov
add
in
bound
mov
mov
bound
mov
add
nop
nop
cld
jae
sbb
add
cwtl
hlt
iret
inc
push
mov
xchg
ret
add
add
lods
push
add
add
push
add
nop
nop
cld
jae
jge
dec
cwtl
add
add
xchg
jecxz
or
mov
nop
nop
cld
jae
add
dec
idiv
push
push
mov
xchg
ret
lods
bound
faddl
in
add
int
pop
clc
repnz
nop
cld
jae
jmp
ret
cmp
nop
nop
cld
jae
xor
add
stos
movzwl
clc
repnz
nop
cld
jae
adc
mov
clc
repnz
nop
cld
jae
add
addb
pushf
mov
clc
repnz
nop
cld
jae
incl
add
sti
clc
repnz
nop
cld
jae
add
add
int
add
mov
clc
repnz
nop
cld
jae
lods
idiv
add
mov
into
push
clc
repnz
nop
cld
jae
add
add
or
repnz
nop
cld
jae
add
cmp
add
sti
loopne
or
mov
repnz
nop
cld
jae
idiv
adc
clc
repnz
nop
cld
jae
add
add
add
mov
or
add
mov
flds
fdivrs
pop
pop
clc
repnz
nop
cld
jae
add
mov
add
cmp
call
push
mov
xchg
ret
add
cmp
push
cmp
pop
mov
clc
repnz
nop
cld
jae
add
add
and
add
mov
clc
repnz
nop
cld
jae
cmc
scas
ret
add
add
clc
repnz
nop
cld
jae
add
ret
add
rclb
repz
add
sbb
xchg
add
mov
add
add
mov
test
add
push
ret
and
add
jo
mov
jmp
nop
leave
nop
jmp
push
add
xor
out
push
mov
push
pop
add
lods
push
add
add
cmp
push
mov
xchg
ret
scas
add
add
ret
jle
dec
cmp
mov
xchg
ret
cld
add
das
pop
clc
repnz
nop
cld
jae
add
add
inc
add
add
pop
add
clc
repnz
nop
cld
jae
add
add
cmp
clc
repnz
nop
cld
jae
add
add
popf
add
push
mov
nop
leave
nop
jmp
neg
sti
push
add
call
push
mov
nop
leave
nop
jmp
sbb
xchg
negb
add
add
leave
nop
jmp
add
pop
clc
repnz
nop
cld
jae
add
sbb
mov
jne
clc
repnz
nop
cld
jae
add
pop
sub
clc
repnz
nop
cld
jae
out
add
in
mov
jge
xchg
out
push
mov
repnz
nop
cld
jae
idiv
add
xor
mov
clc
repnz
nop
cld
jae
flds
add
daa
cmp
clc
repnz
nop
cld
jae
dec
add
add
push
add
inc
loop
mov
mov
clc
repnz
nop
cld
jae
add
jmp
repz
into
decl
push
mov
xchg
ret
add
and
add
add
cmp
push
mov
nop
leave
nop
jmp
loop
add
jge
jg
mov
add
add
repnz
nop
cld
jae
sbb
adc
repnz
nop
cld
jae
loopne
roll
popf
dec
je
clc
repnz
nop
cld
jae
in
add
mov
sub
repnz
nop
cld
jae
mov
and
mov
stos
push
mov
nop
leave
nop
jmp
xchg
dec
ret
add
jo
call
mov
xchg
ret
add
xor
call
mov
inc
add
add
add
mov
add
mov
mov
repnz
nop
cld
jae
add
scas
adc
test
add
jmp
add
in
add
add
loopne
incl
clc
repnz
nop
cld
jae
add
ret
ret
dec
fldl2e
je
clc
repnz
nop
cld
jae
scas
add
mov
clc
repnz
nop
cld
jae
mov
incl
mov
repnz
nop
cld
jae
add
mov
inc
push
lods
mov
clc
repnz
nop
cld
jae
pop
testl
or
repnz
nop
cld
jae
in
inc
jmp
mov
mov
nop
leave
nop
jmp
add
add
pushl
mov
or
push
mov
xchg
ret
add
add
fiadds
add
popf
call
clc
repnz
nop
cld
jae
add
rep
clc
repnz
nop
cld
jae
add
idivb
nop
nop
cld
jae
add
in
add
loopne
stc
mov
push
mov
nop
leave
nop
jmp
add
loop
add
jo
mov
aam
xor
mov
push
mov
mov
add
in
sub
insl
xor
inc
cmc
xor
mov
fs
repnz
nop
cld
jae
push
popf
add
sbb
clc
repnz
nop
cld
jae
add
add
sbb
add
repnz
nop
cld
jae
fiadds
and
outsb
sub
clc
repnz
nop
cld
jae
mov
add
add
popa
pushf
mov
clc
repnz
nop
cld
jae
stc
add
mov
sub
in
nop
leave
nop
jmp
add
loop
add
add
and
mov
nop
cld
jae
bound
push
cmc
add
add
mov
xchg
ret
push
cmp
cmp
add
add
repnz
nop
cld
jae
add
cmc
cld
popf
mov
add
push
mov
xchg
ret
add
dec
jmp
add
lds
add
add
push
out
in
dec
add
push
mov
xchg
ret
add
add
add
add
add
repnz
nop
cld
jae
add
add
jp
clc
repnz
nop
cld
jae
jo
or
jo
add
sahf
je
clc
repnz
nop
cld
jae
add
out
push
mov
add
jbe
cmp
cmpsb
movsl
enter
movsb
cmp
cmp
fdivs
mov
jle
fldpi
jl
rcr
mov
mov
pop
dec
mov
loope
and
mov
nop
add
dec
les
sub
sub
add
add
addb
cmp
pop
test
add
outsl
in
addl
movsl
popf
cmpsb
cmp
daa
rolb
mov
add
addb
je
add
xor
addb
js
pop
or
mov
inc
adc
xor
xor
mov
mov
repnz
pop
outsl
sub
add
pop
mov
mov
jns
adc
mov
out
pop
jg
add
push
add
xor
push
add
and
add
mov
push
push
jns
mov
add
pushl
mov
bound
mov
mov
add
jno
fcomps
fst
pop
add
mov
xor
add
test
sbb
push
mov
mov
lock
cmp
aaa
cmp
ja
int3
xor
xor
aaa
scas
jne
sbb
sahf
jbe
sbb
outsl
jp
xchg
outsb
push
jo
mov
mov
pop
outsl
pop
sbb
sub
xchg
int3
in
pop
pop
mov
int
into
iret
data16
mov
dec
dec
and
mov
mov
mov
mov
and
rcl
add
jne
fmul
rolb
int3
xchg
mov
les
scas
in
loop
mov
mov
add
push
jecxz
lahf
addb
loope
sahf
lret
xchg
xchg
loop
mov
cli
pop
nop
add
pop
pusha
add
es
xchg
es
repnz
add
test
xor
out
push
jne
pop
fmul
mov
push
cmpsb
imul
mov
aaa
out
mov
add
inc
add
add
push
add
inc
xor
mov
lods
daa
lahf
daa
fs
mov
in
xor
add
jo
mov
sbb
pusha
add
mov
mov
add
mov
in
add
add
mov
add
loop
mov
inc
push
xor
mov
or
lcall
add
lods
repz
mov
and
mov
mov
mov
mov
mov
push
cmp
add
popa
mov
mov
add
cmc
mov
lret
js
aas
pop
pusha
add
sarl
mov
ja
pop
outsb
push
cmp
test
add
sbb
rolb
mov
push
add
movsl
test
js
dec
icebp
xchg
add
icebp
dec
lods
hlt
out
jg
cmp
ret
fwait
and
mov
outsb
inc
add
fisubl
inc
jbe
mov
jns
and
mov
add
mov
stos
cmp
adc
mov
pop
repnz
mov
sbb
sbb
mov
sub
dec
cwtl
sub
mov
mov
mov
daa
data16
popf
jp
add
mov
fsubl
mov
cld
mov
jg
scas
push
jb
mov
add
inc
add
fdivp
add
sbb
mov
rorl
dec
lods
popl
fisubs
xor
cmp
add
inc
xchg
xchg
ret
movsb
jge
add
xor
mov
push
add
xchg
inc
xor
mov
mov
adc
test
push
xchg
sub
lcall
imul
sahf
add
mov
mov
notb
add
std
jmp
test
jne
sbb
js
cltd
xchg
cmp
mov
inc
add
mov
les
imul
mov
pop
cmc
adc
add
movsb
stos
es
mov
mov
xchg
nop
add
jo
mov
sub
add
cmpsl
push
rcll
sub
cli
fldcw
aam
jnp
xchg
test
insl
stc
leave
jb
mov
add
mov
push
cmpsl
push
xchg
pusha
add
mov
dec
or
add
jns
cmp
sbb
daa
sbb
in
xchg
add
mov
fwait
pop
xor
add
mov
data16
mov
add
push
add
cmp
sub
subl
sahf
inc
jp
cmpsb
clc
cmp
aam
add
fnstcw
inc
cmp
add
sub
mov
mov
or
sbb
test
mov
push
add
mov
add
jnp
push
mov
add
test
xor
mov
clc
ror
aad
add
sbb
sbb
mov
inc
icebp
jbe
xchg
add
cmc
rcll
into
cmp
aaa
inc
add
mov
mov
mov
adc
mov
xchg
jae
mov
cld
fwait
out
rolb
repz
mov
sbb
out
or
jmp
add
in
pushf
ret
mov
rolb
mov
sbb
lcall
mov
mov
es
jne
imul
add
push
mov
mov
clc
loope
popa
ss
adc
mov
popf
xor
and
outsl
out
icebp
stos
out
lcall
add
lahf
lret
icebp
jle
xchg
dec
push
das
icebp
mov
mov
add
cmp
test
scas
lret
das
insb
fdivrl
sub
add
lds
addb
add
and
fnstcw
in
push
jns
mov
popa
xor
aas
idivb
push
add
into
movsb
xchg
jns
inc
and
mov
js
fnstcw
aaa
jle
add
pop
ds
pop
push
aam
dec
inc
test
les
inc
jmp
addb
movd
lret
sub
add
repnz
mov
add
push
and
add
fcompl
ficomps
sahf
jge
add
mov
sub
rolb
insb
dec
fidivl
push
add
movsl
mov
mov
enter
mov
push
or
push
cmp
cmp
mov
loop
mov
cmp
mov
mov
scas
mov
mov
jge
add
mov
sahf
das
mov
aad
div
test
add
sahf
je
or
movsl
pop
inc
int3
pusha
add
cwtl
test
sbb
call
mov
and
mov
test
mov
add
xor
repz
jle
addr16
fcom
add
push
cld
loope
adc
mov
ret
int3
test
and
add
and
testb
mov
add
and
mov
jo
mov
xchg
add
fs
mov
or
pop
cmc
cmp
push
pop
jl
xor
mov
rolb
pop
cmp
cltd
sbb
xchg
add
push
movb
mov
mov
loop
mov
xor
imul
popf
mov
mov
rolb
or
jmp
mov
inc
push
inc
pop
mov
mov
jle
push
pop
ja
pop
iret
or
and
mov
push
mov
cltd
into
cmp
imulb
bound
mov
dec
fucom
add
addb
mov
sub
inc
add
add
adc
les
pop
xlat
xchg
add
ljmp
mov
adc
mov
inc
xchg
mov
dec
inc
adc
mov
jns
add
sub
pop
dec
xchg
sti
cmp
dec
jae
lock
stos
xchg
mov
lea
outsl
mov
mov
mov
xchg
adc
jns
int3
pop
fsubrl
or
adc
mov
inc
mov
mov
or
outsb
push
add
mov
inc
xchg
sbb
or
nop
add
push
mov
pushl
cmpsl
sbb
sbb
sti
scas
push
pop
icebp
hlt
mov
mov
loop
mov
mov
push
in
or
add
cltd
fidivs
mov
mov
ss
xlat
dec
pop
mov
add
lea
mulb
add
mov
add
clc
in
sbb
cli
cmp
pop
jle
aad
or
and
rcll
inc
mov
fidivs
aam
mov
jnp
xchg
popf
mov
mov
scas
scas
in
xchg
jp
add
adc
mov
sahf
int
xor
mov
push
adc
movsl
push
pop
push
loopne
mov
xchg
cmc
pop
js
dec
test
push
add
inc
add
jb
mov
mov
add
dec
xchg
add
add
mov
ficomps
in
pusha
add
inc
mov
mov
call
mov
test
xchg
add
adc
mov
add
add
add
testl
cmp
xor
adc
jnp
and
mov
rolb
mov
addb
pushf
fs
aam
subl
mov
cmpsb
pop
mov
push
jne
aam
adc
ds
or
and
cmpsb
dec
lds
ja
sti
repnz
data16
cmp
cli
in
xchg
int3
loop
mov
or
inc
add
imul
mov
shl
jo
mov
add
add
fwait
ds
sti
mov
dec
imul
sub
sub
push
push
mov
adc
push
lret
stc
sahf
lods
jle
jbe
add
mov
sti
jnp
js
mov
mov
jl
add
movsl
std
and
pop
stc
stos
sub
adc
add
pop
adc
mov
xor
mov
add
mov
sahf
or
push
gs
add
jg
cmp
test
jmp
jno
mov
test
push
stos
xchg
jnp
sub
in
jp
and
out
dec
cmp
pop
popf
aam
arpl
add
mov
adc
stos
es
dec
sbb
add
xor
mov
test
sub
pushf
dec
inc
lock
inc
dec
add
mov
xor
mov
lock
sbb
add
add
add
add
and
mov
or
iret
mov
jmp
adc
mov
loopne
mov
xchg
adc
jne
jmp
xchg
xchg
imul
mov
sub
mov
mov
sub
dec
lods
dec
mov
fwait
rolb
mov
add
xor
mov
aad
inc
add
neg
adc
jecxz
sub
call
das
xor
add
dec
data16
scas
aam
addb
fmull
mov
out
mov
xor
mov
adc
sahf
nop
add
imul
cmpsb
adc
mov
fildll
stos
clc
mov
enter
sbb
sahf
dec
ds
add
push
mov
mov
xchg
pop
adc
adc
mov
xchg
add
testl
ret
push
mov
in
add
push
sub
inc
pop
and
mov
cs
gs
mov
inc
add
mov
mov
hlt
cmpsb
test
push
repnz
jnp
cld
fst
add
mov
xor
mov
pop
mov
test
pop
sub
push
xor
mov
mov
mov
rcrl
pop
enter
mov
or
mov
xchg
jns
cwtl
sbb
das
out
pop
dec
xchg
and
adc
mov
pop
adc
mov
pop
jno
icebp
xchg
mov
add
add
add
push
add
sbb
hlt
stos
inc
add
in
and
mov
mov
negl
out
popa
lret
call
xlat
mov
pop
jg
inc
test
mov
loope
sbb
in
mov
cmp
fabs
test
add
aas
cwtl
test
mov
sbb
adc
add
mov
push
in
cmp
mov
add
mov
sub
out
addb
cmp
test
in
dec
and
add
inc
sahf
jecxz
cmp
add
lea
mov
mov
leave
rol
jne
and
mov
les
dec
ret
rolb
mov
mov
pop
repz
in
inc
xor
std
mov
mov
movsb
rolb
aad
aas
jge
nop
add
loopne
mov
aaa
loope
add
mov
mov
pop
cmpsb
sbb
cmc
gs
or
inc
add
add
add
arpl
add
and
xor
mov
bound
mov
lds
lcall
sbb
push
cmp
stos
dec
fstpt
sarl
ds
int3
mov
xlat
mov
mov
ret
or
add
lods
test
add
adc
mov
add
jns
mov
inc
roll
sbb
cld
outsl
insl
jmp
mov
mov
lods
xchg
popf
fldcw
fs
mov
and
mov
pop
cmp
push
add
pusha
add
inc
adc
cmp
loopne
mov
add
jecxz
jbe
add
mov
lret
test
imul
pop
in
icebp
sbb
inc
lods
repz
or
inc
add
push
dec
insl
mov
inc
mov
jbe
ret
popf
jmp
mov
ror
mov
mov
movsb
sar
inc
dec
and
mov
test
add
sar
mov
aaa
and
mov
xor
add
fidivl
add
jb
mov
cwtl
sub
add
add
mov
dec
es
push
jbe
lods
cmp
jnp
lahf
jp
cmpl
fwait
mov
xlat
mov
mov
or
sarl
out
cmc
fbld
sub
inc
add
dec
test
punpckldq
mov
mov
std
fs
xchg
mov
push
roll
mov
dec
loop
mov
xchg
add
xchg
or
shrl
add
push
int
sub
add
mov
or
and
sbb
repnz
push
pop
dec
mov
mov
add
mov
int
hlt
test
idivl
sahf
add
sub
mov
dec
jmp
mov
add
sbb
or
add
fldenv
repz
add
or
jmp
outsb
xor
mov
mov
lods
ret
mov
push
add
aaa
mov
mov
dec
push
and
mov
loopne
mov
xor
adc
jg
mov
push
outsb
stos
jno
xchg
bound
mov
je
testl
mov
cmc
and
jecxz
aad
addb
sarl
pop
add
mov
movsl
push
mov
sub
sbb
cltd
cmp
add
cmp
mov
xchg
cwtl
rcrl
push
std
jnp
scas
lods
call
repnz
or
movsl
mov
cmp
push
sub
mov
mov
frndint
jecxz
xchg
push
mov
insl
call
xchg
les
mov
daa
add
push
rorl
mov
sub
pop
dec
pop
push
dec
arpl
addb
insb
push
fadd
xchg
lock
les
insb
inc
and
mov
jne
loop
mov
push
or
cld
sub
cmp
aas
in
jg
push
add
mov
mov
cs
imul
in
roll
loopne
mov
scas
cmp
add
ljmp
and
mov
add
fmulp
dec
jmp
mov
fists
pop
sbb
cmp
add
cli
jno
xchg
add
mov
pop
pop
dec
cmpsl
sti
sbb
jae
inc
inc
add
inc
add
mov
jecxz
adc
ret
les
add
pop
push
in
xchg
loope
sbb
mov
xorl
mov
xor
add
fcmove
rolb
mov
ja
xor
mov
test
mov
addb
pop
cli
mov
mov
mov
cmc
mov
add
and
mov
outsb
adc
mov
je
gs
and
mov
loopne
mov
add
cmc
or
xor
pop
fcoms
addb
xchg
je
cmp
add
add
in
int3
jmp
sbb
sub
xchg
pop
sti
faddp
xor
mov
add
mov
mov
jmp
ljmp
mov
mov
das
pop
push
jno
sbb
jo
mov
add
mov
inc
add
iret
test
ja
nop
add
sub
mov
fsubr
je
hlt
push
add
enter
and
mov
test
add
jno
nop
add
pop
push
cmp
mov
leave
add
jge
inc
pop
inc
mov
mov
mov
insb
and
mov
jno
ja
nop
add
add
addr16
pop
fsub
add
rolb
mov
lds
sbb
add
idivb
leave
bound
mov
mov
orl
xor
mov
mov
nop
add
xchg
add
sbb
mov
mov
lock
cltd
xchg
or
sar
lea
mov
or
lds
pop
cmp
add
sbb
or
mov
in
add
aam
add
jmp
bound
mov
test
add
dec
push
dec
dec
aam
scas
cmp
or
adc
push
inc
add
jno
or
loop
mov
lret
lods
pop
out
mov
jno
xchg
adc
mov
mov
jl
jns
xor
mov
rcll
xchg
daa
fs
loopne
mov
xchg
and
cli
or
cld
icebp
cmp
or
clc
in
dec
mov
test
mov
aam
mov
loope
aad
add
jge
ja
inc
jnp
add
popf
lods
cld
out
notl
fidivs
and
rolb
mov
add
add
nop
add
push
mov
add
add
sub
mov
push
add
rcr
mov
push
cmc
jne
loop
mov
sti
inc
add
add
out
imul
mov
test
mov
pop
push
aas
mov
mov
mov
mov
mov
add
and
mov
out
mov
push
push
xlat
jg
xchg
push
mov
inc
add
out
xchg
mov
sti
fists
mov
add
add
in
push
sbb
push
jecxz
cld
sti
lcall
mov
lods
inc
add
popf
lods
jmp
repz
mov
add
mov
cmp
fildll
sbbl
testl
inc
add
hlt
xchg
insl
lahf
sub
jo
mov
jge
pop
xor
mov
sub
mov
outsb
adc
repz
hlt
gs
je
mov
pop
push
mov
insb
sub
add
fstp
lret
repz
cmp
pop
ret
jo
mov
push
add
add
mov
mov
aad
and
mov
cmp
mov
cld
sbb
dec
add
mov
mov
scas
inc
jle
jecxz
stos
jo
mov
into
xchg
add
or
ja
add
test
lahf
mov
repz
insl
nop
add
addb
orl
mov
and
mov
call
aas
jge
add
int
jecxz
out
add
dec
out
negb
add
mov
fcompl
shrl
adc
mov
mov
add
mov
pinsrw
push
pushf
push
das
rolb
mov
xchg
rolb
mov
mov
pop
scas
cli
aas
sti
aaa
movsl
add
aam
lds
adc
add
cli
xchg
movb
lock
add
cmp
xchg
mov
mov
push
cmp
jmp
add
add
imul
das
imul
mov
rolb
mov
fwait
push
mov
jno
push
icebp
sahf
hlt
mov
adc
imul
xchg
movsl
xchg
mov
dec
lock
sbb
jle
inc
inc
flds
mov
add
mov
inc
xor
mov
lahf
or
add
cs
mov
add
in
xor
or
inc
jnp
add
xchg
push
mov
push
add
push
stc
push
lods
ret
ljmp
cmp
fldcw
fimull
mov
or
xor
push
xchg
add
inc
lcall
add
mov
out
inc
mov
repz
push
dec
xchg
cli
pusha
add
icebp
dec
aam
mov
test
push
dec
pushf
out
loopne
mov
pop
adc
mov
cmp
aam
pop
dec
dec
dec
xchg
dec
addb
fmull
push
sbb
jns
add
mov
xlat
or
xor
mov
mov
pop
adc
add
push
xlat
mov
jmp
push
popf
mov
xchg
loop
mov
sahf
push
add
push
js
jbe
movsb
inc
add
jmp
pop
popl
lods
in
or
movsb
inc
mov
cld
out
xchg
std
sbb
mov
add
mov
rolb
out
pusha
add
xchg
mov
call
pop
test
dec
push
xchg
addr16
fcomps
mov
mov
aam
add
mov
mov
jge
mov
outsb
push
xchg
js
add
mov
mov
push
xor
loope
hlt
stos
inc
aam
mov
repz
sub
add
jne
sbb
push
cs
or
mov
mov
pushf
mov
add
mov
add
add
xlat
mov
jle
pop
popf
jmp
add
out
mov
pusha
add
fldenv
jge
xor
mov
inc
push
das
int
jb
mov
fsub
add
jmp
add
mov
arpl
mov
adc
int
dec
adc
mov
jbe
and
mov
cmp
mov
sbb
ret
add
movsb
jb
mov
mov
mov
js
and
fdivp
adcl
xchg
mov
xchg
add
adc
dec
lock
mov
or
pop
out
fdivl
add
add
mov
add
add
inc
cmp
add
popa
jb
mov
repz
add
sub
inc
xlat
mov
push
jo
mov
mov
ds
mov
sbb
sub
mov
sbb
popf
mov
aam
push
mov
mov
scas
les
push
push
xlat
xor
mov
jl
clc
inc
lret
push
xchg
icebp
icebp
insb
inc
daa
sbb
push
add
mov
mov
xchg
addr16
stos
xchg
jg
sbb
jg
addb
aas
das
lods
cmpsb
fidivl
add
mov
add
das
scas
ret
xor
or
stos
jne
and
add
pop
inc
push
les
inc
adc
mov
mov
mov
movl
jne
in
sbb
cmp
pusha
add
lahf
mov
inc
add
mov
mov
cs
add
mov
push
add
movsb
fldenv
add
sbb
pop
cmp
push
addl
dec
gs
xchg
add
mov
lcall
in
adc
and
mov
push
push
mov
mov
adc
mov
jl
in
es
xchg
pop
and
fs
cwtl
fldenv
cmp
addl
or
add
add
mov
cmp
sub
lods
pop
fnstcw
ds
mov
hlt
push
dec
mov
je
add
test
pop
dec
faddl
mov
inc
add
mov
push
sbb
fucom
mov
and
pop
inc
js
mov
push
inc
jnp
stos
ljmp
add
bound
mov
in
aaa
push
pop
mov
outsb
aam
sti
fldl
add
insl
in
or
add
pop
xchg
inc
cli
and
add
or
insb
jo
mov
jno
in
mov
dec
cmp
jg
xor
add
add
mov
add
push
cmp
cmp
push
xchg
add
xor
jno
jecxz
lea
pop
add
push
add
aad
cltd
push
add
addb
or
pop
aam
adc
or
sub
jno
inc
repnz
data16
mov
leave
addr16
push
add
pop
test
xor
add
mov
iret
les
sub
mov
sbb
jo
mov
repz
inc
xchg
jo
mov
add
jnp
add
xchg
cmp
xchg
test
add
aas
mov
xchg
push
add
fildll
xor
mov
inc
jmp
cmp
movsl
out
xchg
sub
es
or
cmp
sbb
and
mov
add
sub
insl
out
lahf
jmp
mov
cmpl
orl
decb
mov
add
mov
adc
or
jae
in
aam
je
pop
jp
add
pushf
xchg
xlat
push
xchg
ja
jo
mov
stos
cmp
mov
sub
adc
call
leave
cs
add
test
fildl
loop
mov
movb
push
pop
push
mov
add
and
fisttps
mov
int3
mov
add
and
mov
add
sub
xor
mov
scas
and
mov
mov
out
dec
xchg
pop
xor
mov
adcl
imul
lahf
int
push
push
ss
xlat
or
pop
lahf
xchg
rolb
sub
fsubr
add
add
call
lock
and
mov
stos
sub
mov
scas
clc
in
push
rolb
mov
shll
add
adc
xchg
add
inc
add
jae
outsl
pop
or
ficoml
lock
jnp
add
jno
xchg
jno
stos
popa
jb
mov
sbb
popl
mov
pop
arpl
cmpsb
or
dec
out
repz
sub
lret
divl
mov
or
lock
mov
in
push
cs
lods
cli
jp
mov
add
push
xor
mov
data16
mov
xchg
cmpsl
add
cltd
addr16
dec
in
lock
push
daa
out
sub
dec
ds
data16
outsb
xor
unpcklps
lret
sahf
setne
mov
add
add
loope
push
sub
adc
pop
and
mov
inc
cmp
mov
scas
data16
adc
mov
jle
insl
nop
add
add
ret
sbb
push
and
mov
out
xchg
adc
add
push
cltd
mov
stc
adc
mov
addr16
mov
mov
pusha
add
xchg
push
add
or
test
jno
outsl
lods
movsb
shll
in
jge
sbb
cmc
push
xor
mov
xor
mov
test
and
mov
mov
repnz
add
mov
mov
je
pushl
testb
scas
fstp
push
add
adc
mov
dec
andl
mov
rolb
fwait
stos
lds
out
shrl
rolb
mov
mov
mov
pop
jle
hlt
hlt
jmp
cmp
push
gs
push
add
loope
xchg
mov
cmp
add
fiadds
add
mov
add
mov
movsb
test
cltd
shrl
mov
test
enter
cltd
xchg
jae
add
mov
xor
mov
mov
in
popf
pusha
add
add
xor
enter
mov
pop
jge
lret
fnstenv
add
add
ljmp
dec
movsl
pop
mov
or
push
add
call
and
xchg
lahf
into
add
stc
mov
inc
test
add
mov
mov
inc
mov
inc
pop
lret
xorl
cs
mov
xor
or
test
pop
mov
add
mov
mov
mov
lret
add
int3
xlat
fdecstp
iret
enter
popa
popa
call
push
imul
sub
movsl
leave
inc
add
sbb
ljmp
mov
adc
push
add
je
icebp
jno
mov
add
mov
in
mov
mov
ret
fistl
fimull
stos
jp
data16
push
stos
lcall
add
test
and
popf
dec
repnz
cmp
cmp
out
mov
loop
mov
loope
sub
inc
arpl
add
scas
xchg
popa
out
test
icebp
sbb
in
mov
add
sub
add
fwait
lock
and
jle
jp
jg
sbb
mov
or
inc
roll
mov
imul
in
push
add
mov
cmp
stos
xor
cwtl
mov
mov
jmp
ss
popf
cmp
dec
and
mov
mov
lock
jae
jp
mov
add
mov
rolb
mov
fdivrl
or
mov
jns
daa
in
insb
lds
mov
mov
out
or
add
frstor
xor
mov
dec
movups
cwtl
insl
in
cmp
xchg
mov
mov
dec
add
add
add
adc
xor
add
mov
stos
mov
daa
sbb
pop
cmp
push
sahf
arpl
fcoms
push
leave
pop
jecxz
inc
pop
notl
mov
mov
add
imul
mov
pop
leave
rolb
out
add
add
aaa
mov
adc
ficoml
inc
add
xchg
add
add
mov
jg
dec
testb
adc
mov
pop
jns
cltd
out
je
stc
mov
inc
add
mov
add
insb
repnz
pop
mov
mov
loopne
mov
dec
inc
add
dec
imul
movsl
push
push
pop
mov
add
push
sub
cmc
rolb
loopne
mov
mov
test
jae
add
add
add
dec
ficoml
mov
stc
leave
mov
add
add
pop
int3
xor
mov
lea
imul
dec
out
hlt
jmp
imul
mov
adc
mov
xchg
mov
or
pop
out
cmpsb
frstor
add
ret
shll
xchg
add
add
mov
sahf
pop
and
add
sbb
add
mov
daa
push
add
out
inc
and
mov
sbb
pusha
add
jp
xlat
mov
sub
mov
shll
push
aas
or
addr16
fcompl
mov
hlt
jp
lea
rolb
fidivs
mov
in
roll
mov
inc
pushf
pop
xor
push
ja
cmp
ljmp
es
std
and
mov
sub
and
mov
mov
dec
pop
add
mov
btc
shl
bound
mov
add
add
cli
lock
jb
mov
mov
add
mov
mov
pushf
pop
add
fiaddl
cs
cmpsb
mov
mov
cmp
jb
mov
stos
pop
lock
js
gs
aaa
or
mov
ss
dec
dec
sti
jb
mov
das
loopne
mov
pop
inc
les
pop
xchg
rolb
mov
add
and
mov
pusha
add
add
bound
mov
imul
stos
pop
sub
es
sahf
mov
xor
mov
xor
mov
jb
mov
and
mov
add
mov
jae
mov
or
dec
xor
je
jp
and
pop
sbb
fs
stc
addb
aad
movsb
imul
das
push
test
mov
mov
inc
add
adcl
add
sub
or
inc
push
sub
sub
movsl
add
mov
push
ret
mov
mov
icebp
mov
jns
jno
sbb
add
xchg
push
add
add
lock
loopne
mov
aaa
clc
pop
adc
mov
fmulp
in
int
add
mov
test
cmp
std
sub
mov
lock
add
cmpsl
jno
mov
out
xchg
and
mov
add
xchg
ficoml
and
and
mov
inc
add
daa
sub
jae
fldt
int3
loope
sarl
jb
mov
sub
daa
testb
and
mov
repnz
loopne
mov
mov
jmp
xchg
cli
js
and
mov
lcall
xchg
dec
cwtl
rolb
fldt
int3
mov
scas
iret
sbbl
ficoml
fnstcw
out
mov
mov
addb
call
add
mov
or
pavgw
pop
bound
mov
cmp
add
mov
cwtl
addb
les
lahf
stos
movsl
fildl
sub
mov
mov
nop
add
aam
add
add
push
scas
sub
mov
ja
and
mov
stc
addb
and
mov
sub
add
adc
mov
or
xor
xchg
add
out
inc
xor
mov
pop
in
inc
jecxz
mov
push
inc
mov
xor
movsl
ret
nop
add
push
mov
or
addb
test
push
xchg
ljmp
inc
or
and
fwait
fs
mov
add
mov
out
loope
add
sub
lret
adc
mov
loope
sbb
das
fbstp
and
test
push
pushf
dec
icebp
cmp
mov
lock
mov
jno
inc
std
sub
sub
mov
add
cwtl
add
addb
add
mov
sub
test
ljmp
inc
jmp
cli
sbb
mov
sahf
inc
lds
movsl
inc
jg
aam
gs
out
mov
mov
jp
add
fimull
push
int
pop
mov
movsb
hlt
xchg
sbb
add
inc
je
mov
pop
loop
mov
pop
mov
ljmp
rolb
mov
fidivrl
mov
sbb
mov
jle
pushf
clc
pop
jo
mov
popf
lds
negb
stos
mov
add
mov
sbb
xchg
sbb
mov
hlt
mov
imul
mov
and
fistps
sub
mov
pop
das
lock
testb
xchg
add
add
aaa
insl
leave
jno
pop
into
scas
add
mov
fs
clc
mov
nop
add
in
in
test
dec
mov
shl
pop
aam
hlt
shll
sub
add
fildl
add
mov
add
add
mov
or
dec
mov
enter
pop
jge
js
xchg
add
inc
sub
add
xor
mov
arpl
xor
mov
add
insl
inc
ficomps
mov
iret
mov
stc
aas
loopne
mov
jnp
test
rolb
mov
and
mov
ljmp
or
add
mov
insl
mov
xchg
push
pop
fsubrp
add
and
inc
notb
adc
mov
enter
mov
mov
not
or
pop
addb
in
xchg
adc
test
push
cmp
add
cld
repz
and
pop
enter
mov
jl
add
ja
cmp
pop
sbb
push
or
sub
mov
mov
and
cmp
add
mov
jmp
test
fidivs
mov
aaa
std
test
fs
xor
nop
add
push
add
fldcw
add
neg
js
and
mov
xchg
rolb
out
pop
out
push
mov
pop
cmp
mov
cmp
sbb
mov
mov
stc
cmp
stos
cmpsb
outsl
inc
in
into
dec
cmc
pop
mov
xchg
push
push
xor
lret
mov
xchg
inc
adc
cwtl
or
in
dec
xor
insl
mov
mov
pop
out
mov
mov
mov
push
add
inc
jnp
jns
and
daa
jg
pop
movsl
fcompl
cmpl
hlt
or
cwtl
dec
mov
xchg
adc
xchg
test
in
cmpsl
and
sbb
push
push
fbstp
icebp
adc
mov
mov
mov
stos
mov
mov
add
movsl
dec
push
scas
dec
je
das
outsb
cmp
pushf
rolb
mov
sbb
outsl
jge
fsubl
sub
in
push
add
sub
jno
imul
mov
aaa
stc
mov
in
fldt
sub
jmp
add
xchg
fdivrs
xchg
mov
js
push
lea
ss
add
sub
add
add
fstl
fldcw
shll
out
add
pop
inc
rolb
mov
add
fildl
jns
mov
mov
bound
mov
add
add
jnp
xchg
neg
out
leave
xchg
sbb
add
mov
add
mov
stos
shl
or
add
cmpl
aad
add
add
xchg
push
incl
add
mov
scas
popa
cltd
mov
icebp
cmc
movsb
jge
js
mov
repz
jmp
push
mov
jbe
add
js
xchg
xchg
fstpt
mov
add
and
mov
lods
repnz
pop
pop
loop
mov
mov
imul
inc
cli
aas
lret
idivb
push
bound
mov
cmp
xor
push
or
cmp
data16
cltd
mov
add
pop
dec
jmp
inc
add
popw
push
js
lods
xor
jb
mov
mov
icebp
test
add
mov
mov
mov
add
xchg
pusha
add
add
pop
inc
add
mov
popw
and
xor
mov
add
cmp
and
mov
xor
add
mov
mov
pop
insb
das
fsubl
aaa
and
addb
rolb
mov
iret
add
mov
push
ret
sbb
rolb
divb
add
dec
add
jle
data16
mov
mov
cs
add
sbb
in
inc
cmp
adc
pop
adc
add
add
inc
sub
add
mov
std
jg
mov
test
mov
pop
icebp
lds
stos
xchg
dec
dec
lods
push
scas
cmp
mov
clc
dec
jge
mov
dec
in
push
lahf
jmp
mov
fadds
xchg
xchg
je
fisttps
add
add
test
adc
mov
fistpl
add
mov
mov
jb
mov
inc
rolb
push
in
xor
add
repnz
push
addr16
add
mov
jle
add
jl
out
pop
mov
inc
inc
jmp
fidivl
add
cmpsb
mov
mov
sbb
mov
rolb
nop
add
sbb
ja
gs
sbb
add
arpl
add
pop
ds
jnp
add
mov
add
add
mov
adc
push
dec
lret
inc
int3
sub
sbb
xor
test
fistpll
add
inc
add
xor
push
mov
mov
mov
stos
xor
addl
add
sbb
mov
mov
shrl
add
mov
mov
jg
aam
in
mov
mov
add
int
das
and
cmpl
mov
mov
adc
movsb
adc
mov
scas
aad
mov
mov
test
das
jae
fdivs
add
mov
insl
fisubrl
cmp
les
mov
or
pop
mov
xor
icebp
repz
sbb
test
and
mov
sub
mov
mov
clc
in
in
mov
add
adc
mov
sub
leave
push
nop
add
loopne
mov
push
add
scas
sbb
add
dec
ss
stos
push
dec
inc
rolb
mov
inc
inc
mov
sbb
bound
mov
mov
and
lret
arpl
mov
add
mov
jne
int
add
addb
jg
fidivrl
cld
aam
add
jecxz
push
int
jecxz
ldmxcsr
rolb
mov
fs
pop
sbb
inc
add
dec
add
add
mov
add
add
pop
jge
cmp
or
rolb
pop
stc
mov
add
add
mov
fwait
pop
xchg
inc
add
sub
insb
insl
or
mov
fidivs
inc
out
mov
sbb
imul
mov
and
das
bound
mov
inc
push
adc
or
cmp
mov
jae
fimull
ljmp
mov
scas
pop
add
cwtl
cs
hlt
iret
adc
in
lret
lds
out
rolb
jmp
test
add
into
sub
rolb
mov
fidivs
add
fisttpl
pop
sub
test
mov
loopne
mov
pop
out
movsl
lahf
jno
stc
test
jno
icebp
data16
aaa
mov
jle
rorl
add
cmpl
aas
mov
sbb
cmc
loopne
mov
add
sbb
add
mov
xlat
daa
add
mov
daa
inc
aaa
mov
add
add
sbb
add
cmp
add
sbb
add
mov
xchg
mov
or
shll
gs
add
test
jne
add
call
lcall
push
in
popf
inc
or
outsl
aad
add
rolb
mov
cli
dec
dec
aad
push
out
loope
xchg
adc
inc
sub
bound
mov
sbb
sti
shr
mov
mov
mov
imul
std
xchg
lods
mov
add
sub
sbb
jmp
hlt
mov
add
lahf
or
loop
mov
movsl
lods
jle
stc
inc
shl
dec
xor
arpl
and
test
cmp
add
cmp
mov
mov
or
dec
sbb
add
mov
mov
jg
movsb
icebp
push
add
inc
inc
jg
pop
outsl
and
mov
cmpsl
mov
mov
mov
or
movb
mov
les
add
add
add
sbb
leave
es
adc
add
xlat
sub
sbbl
mov
or
ja
add
outsl
sub
cmpsl
cmp
xlat
cmp
sbb
mov
mov
add
add
mov
xor
mov
scas
and
inc
outsl
or
lahf
dec
push
inc
add
movsb
or
add
into
cmp
add
mov
add
test
jno
sbb
sub
pop
pop
jae
sub
pushf
xor
jg
add
in
add
loop
mov
dec
aam
mov
and
mov
je
cmp
mov
jl
cmp
xchg
and
sub
mov
sub
mov
mov
dec
mov
dec
cs
xchg
lods
sub
fs
add
add
add
lods
adc
mov
shl
dec
lret
sub
add
test
fdivs
in
jbe
scas
mov
adc
mov
add
sbb
mov
out
ljmp
add
scas
ja
and
mov
mov
push
push
out
inc
inc
lods
movsb
cli
popa
fcmovne
dec
das
xchg
sahf
pop
xchg
f2xm1
add
jne
pop
jmp
lds
inc
add
in
cmp
jnp
xchg
add
push
repnz
bound
mov
jmp
jl
test
aam
inc
rolb
lahf
jmp
pop
sub
cwtl
xchg
int
push
add
add
or
mov
pop
inc
add
test
cs
cmc
adc
mov
mov
jo
mov
xor
in
jne
in
add
push
add
mov
pusha
add
stos
idivb
dec
stos
repz
mov
mov
xchg
add
add
push
xor
mov
mov
rolb
shll
xlat
sub
inc
mov
push
mov
mov
jno
jmp
sub
xchg
stos
aaa
lret
xchg
xor
jecxz
in
xchg
add
mov
out
mov
adc
cmp
cli
pop
dec
lea
lret
cmp
add
inc
jb
mov
pop
or
mov
push
jno
int
jmp
jne
cmpsb
bound
mov
rcll
sub
lret
sub
add
dec
stos
or
fldt
add
sub
shrl
lds
xchg
add
movl
gs
sbb
jno
jg
leave
mov
jg
cld
fcos
adc
mov
mov
mov
pushf
testl
xor
aam
push
fimull
add
pop
inc
inc
add
or
fs
sub
js
mov
cmp
adc
mov
inc
add
pop
mov
mov
xchg
add
mov
add
fsubs
btr
mov
sbbl
jl
push
sbb
fs
nop
add
adc
mov
loopne
mov
loopne
mov
inc
rolb
mov
jle
add
hlt
adc
mov
cli
daa
pop
sub
lea
pushl
pop
aaa
ja
rolb
jne
in
lods
mov
mov
pop
outsl
cmp
dec
lret
ljmp
xchg
call
rolb
pop
call
mov
shrl
shll
mov
push
fwait
push
aam
inc
add
add
add
mov
popf
jecxz
mov
xor
mov
or
xchg
loopne
mov
jg
mov
mov
lods
fs
add
dec
dec
clc
mov
inc
lcall
mov
add
into
lahf
xchg
pop
push
or
jnp
rolb
mov
aaa
test
dec
mov
mov
stos
outsl
and
aas
xchg
mov
mov
out
stc
std
push
pop
mov
add
mov
dec
jno
mov
les
adc
add
out
adc
mov
test
add
lcall
and
fs
arpl
add
js
xchg
push
pop
in
add
inc
mov
mov
mov
xchg
in
sub
mov
dec
xor
mov
xchg
add
js
or
sti
rolb
mov
lahf
cmpsl
and
mov
test
adc
scas
dec
mov
jbe
push
xchg
out
xlat
dec
push
insl
cmp
mov
outsb
cmpl
mov
stc
ficoms
aam
lcall
xchg
inc
add
cmpl
mov
pop
jl
in
fdiv
xchg
xchg
in
fnsave
or
into
sbb
lds
mov
push
rcrl
loop
mov
inc
add
mov
and
mov
add
stmxcsr
ds
addb
test
cs
loop
mov
inc
jl
popf
test
mov
sub
std
sub
outsb
cmp
ljmp
cmpsl
and
add
add
jb
mov
daa
dec
scas
xchg
mov
movl
jp
add
repz
mov
pop
inc
push
jecxz
sub
and
hlt
xor
xchg
add
mov
imul
jecxz
add
int3
imul
or
pop
pop
add
mov
or
dec
cmc
lahf
push
jmp
add
add
repz
fidivl
mov
xor
idiv
sub
movsl
fsubrp
dec
xchg
and
mov
fdivrl
mov
add
in
fstl
add
mov
mov
add
add
adc
fs
loopne
mov
adc
mov
sahf
and
mov
xor
mov
or
jge
xor
fldt
ret
or
add
mov
sbb
add
mov
sbb
pop
lret
rolb
rolb
mov
pop
dec
fcoml
add
mov
daa
outsl
push
add
pop
push
xor
mov
ja
or
clc
fnsave
out
mov
mov
repz
mov
and
sub
sbb
ret
cmp
add
cmc
lock
in
clc
xor
mov
xchg
add
sbb
vxorps
enter
push
cmp
sbb
stos
insl
in
jne
sbb
mov
jne
push
add
mov
rolb
mov
jle
sub
mov
push
mov
sbb
adc
cmpsl
cmp
cmp
sbb
xlat
push
stc
sahf
adc
xor
sub
dec
lret
dec
test
call
add
movsb
xor
pop
loop
mov
add
sahf
pop
cwtl
pop
or
inc
add
or
mov
lcall
adc
mov
jb
mov
push
lcall
add
popa
push
inc
stos
mov
fstl
mov
xor
mov
xchg
xor
xchg
pop
xor
xchg
jo
mov
sbb
mov
mov
jl
xchg
add
push
mov
ret
cmp
cltd
clc
jmp
add
js
xchg
mov
lea
jge
mov
and
mov
add
in
mov
add
mov
gs
add
add
rolb
test
add
nop
add
push
xchg
mov
add
rolb
jb
mov
adc
out
mov
stos
daa
xchg
inc
fs
in
jecxz
sbb
mov
mov
and
mov
push
aad
jno
negb
mov
adc
add
add
int
and
mov
mov
outsl
aam
ret
outsb
dec
adc
or
test
sti
sub
add
mov
out
insl
sub
add
mov
xchg
add
ret
popa
aas
fwait
or
or
lahf
sbb
addb
jbe
and
mov
adc
mov
pop
adc
push
pop
mov
call
mov
jp
pop
cmp
add
icebp
nop
add
fldenv
mov
mov
inc
push
xchg
push
jle
std
xor
xor
mov
fidivrl
add
add
mov
rorl
pusha
add
cmpsb
fcompl
sub
outsl
in
sub
jnp
adc
pop
out
pop
mov
jo
mov
pop
pop
push
ret
inc
mov
mov
lds
mov
sbb
imul
add
mov
cwtl
xor
dec
loopne
mov
stos
sahf
das
sbb
pop
scas
in
cmpsb
mov
mov
and
mov
jns
dec
and
mov
repnz
mov
mov
cmp
pop
push
or
leave
das
and
subl
xchg
xchg
sbb
loope
push
xchg
jb
mov
add
mov
addb
out
in
ja
mov
aad
jns
xor
sar
rolb
outsb
xchg
xchg
push
jecxz
cmp
cmp
pop
mov
fsub
mov
add
sub
in
ret
xor
add
jae
xor
cld
jp
mov
push
loop
mov
in
mov
add
mov
xor
stos
das
sub
add
stos
sbb
cli
mov
repz
js
cmp
mov
add
xor
decb
sub
add
arpl
add
mov
out
lods
cmp
ljmp
aaa
insl
push
imul
mov
or
add
cmpsb
add
outsl
mov
jg
addb
push
mov
push
in
dec
loopne
mov
cli
hlt
or
out
xchg
add
stos
movsl
test
push
push
push
fcmovbe
clc
sbb
movsb
xchg
movsb
stc
in
mov
add
mov
add
addb
icebp
fsubrl
add
stos
lea
mov
mov
arpl
add
add
fstps
loop
mov
add
mov
cmp
add
mov
pop
pop
inc
and
mov
or
pusha
add
dec
xchg
cmpsl
int3
cwtl
push
add
push
add
add
cmp
mov
mov
addb
rcrl
fsubs
add
inc
add
mov
add
add
out
inc
sahf
push
sahf
mov
mov
dec
out
aam
add
stos
les
add
insb
in
sti
sub
outsl
or
xchg
mov
add
roll
mov
xor
scas
fisttpl
mov
movsb
mov
add
mov
add
pop
hlt
in
push
and
or
in
mov
cmp
adc
mov
mov
call
lcall
test
add
mov
xchg
mov
rolb
mov
mov
test
mov
std
add
cmp
repz
in
mov
mov
outsl
or
cmpsl
sti
add
mov
mov
add
cwtl
fidivrs
rolb
fidivrs
inc
ficoml
add
or
jecxz
dec
push
ret
cmp
add
and
mov
dec
std
jle
mov
cmp
mov
insb
test
ret
cmp
push
repz
repz
mov
arpl
dec
and
add
jmp
adc
rolb
mov
cld
dec
jbe
test
lea
dec
int3
aaa
sti
int3
mov
add
mov
cmp
test
sub
aad
scas
push
add
ljmp
or
pop
inc
cmovnp
cmp
out
pop
outsb
scas
test
shll
add
movsl
mov
iret
cmpsl
mov
inc
pop
dec
nop
add
cwtl
or
and
mov
lret
add
mov
mov
fcoms
cltd
dec
jecxz
fildl
push
add
stos
pop
stc
jae
add
add
imul
add
sub
dec
fcmovnu
in
pop
cli
ja
add
xor
jb
mov
cmp
xchg
adc
fwait
pushf
cltd
repz
je
mov
mov
inc
jle
add
cmp
add
add
ljmp
add
mov
mov
dec
and
and
outsl
pop
push
sub
mov
mov
test
add
mov
add
add
add
mov
bndstx
jbe
orl
stos
mov
adc
imul
mov
add
adc
mov
xchg
add
or
pop
xor
ds
jns
mov
lret
xor
out
fwait
xchg
cmp
add
mov
test
std
dec
mov
push
popf
cwtl
mov
jae
add
add
push
xchg
arpl
jae
sahf
jbe
mov
add
in
or
pop
outsb
out
addr16
mov
mov
out
orl
cmp
jl
pop
jl
pusha
add
call
bound
mov
testb
push
mov
and
hlt
cwtl
xor
mov
jle
in
dec
adc
mov
add
jge
xorl
adc
xchg
mov
cmp
shl
pop
push
xor
mov
test
or
xchg
imul
lcall
sahf
rolb
mov
mov
add
out
mov
xor
add
popf
inc
movb
add
fsubr
in
push
in
add
xor
or
add
push
add
mov
mov
jmp
test
xchg
imul
cmp
pop
sahf
sub
cmpl
mov
mov
jl
add
in
adcl
inc
add
mov
add
insb
shrl
dec
repnz
sub
add
popf
and
mov
xor
fnstcw
arpl
cmp
dec
sub
add
jl
mov
inc
scas
repnz
mov
or
xchg
mov
inc
add
in
jns
lock
lods
sti
add
inc
push
or
fdivrs
mov
imulb
lahf
inc
inc
add
mov
mov
add
enter
sub
enter
adc
mov
sub
add
inc
jl
lret
popf
jns
mov
lods
fwait
mov
xor
or
push
sbb
cs
inc
cmp
clc
lds
pop
test
mov
sti
fldz
jl
sub
push
loopne
mov
lea
aas
fnsave
push
sbb
daa
push
add
mov
add
in
aad
inc
leave
add
mov
add
pop
gs
mov
push
add
cmp
out
adc
mov
pop
test
loop
mov
add
dec
jne
push
add
add
or
mov
xchg
cmp
movsl
lret
mov
pop
lret
jnp
std
leave
pop
repnz
mov
rolb
mov
dec
push
lea
add
in
jg
add
mov
into
xchg
repz
test
xchg
jo
mov
sub
mov
lret
dec
mov
cld
cwtl
bound
mov
add
push
sub
cmp
xchg
dec
in
adc
stos
scas
ret
mov
fldl
and
cmpsb
repnz
add
rolb
pushl
pop
test
aad
mov
jae
pop
jne
stos
pop
shr
sbb
pop
mov
jae
stos
enter
fwait
xchg
push
divb
or
gs
sub
add
dec
filds
les
jno
pop
push
add
aas
out
aam
add
mov
inc
add
add
into
jbe
mov
sub
add
loopne
mov
add
ss
cmp
push
arpl
outsb
xor
stos
cwtl
mov
les
lret
rolb
mov
mov
xchg
stos
cmp
or
repnz
jp
repz
sbbl
add
xor
add
inc
add
incb
insl
mov
jnp
addb
popa
mov
mul
add
out
aam
mov
mov
pop
jne
adc
aas
fstl
out
xchg
push
xchg
lret
stos
pop
scas
in
lret
movsl
cmp
add
add
add
push
sbb
cmp
loopne
mov
aaa
js
mov
push
dec
xlat
sbb
sbb
hlt
mov
mov
xor
mov
add
or
hlt
mov
stos
pop
addb
pop
cmp
push
pop
insl
xchg
sub
add
mov
sub
std
jg
aas
into
push
adc
mov
mov
test
jp
aaa
pop
lahf
jge
je
popf
fistl
add
pop
mov
movntps
imul
mov
mov
lods
mov
dec
mov
mov
pop
sub
movsb
add
mov
mov
mov
mov
lods
dec
mov
loopne
mov
outsb
mov
sbb
mov
add
pop
inc
push
push
ret
sbb
fisubl
and
push
aas
inc
jl
add
add
mov
lods
and
adc
mov
mov
sbb
sub
iret
out
add
sbb
notb
daa
jmp
or
add
add
mov
cmp
cmp
add
mov
push
test
jl
add
mov
fbld
leave
out
dec
dec
scas
cld
xchg
mov
lea
aam
push
sbb
or
adc
int
out
jo
mov
pop
jae
hlt
addb
xor
loope
lret
xchg
outsb
cmpsb
jb
mov
add
cmp
push
push
pop
jg
lret
cli
sbb
sbbl
add
push
add
xor
arpl
and
mov
fisubrs
sbb
add
push
mov
dec
push
pop
xchg
mov
pop
aad
mov
sbb
sbb
mov
fs
dec
in
stc
jns
out
movsl
pop
imul
xlat
dec
cmpsb
inc
aaa
and
mov
inc
mov
xor
mov
adc
icebp
fwait
xchg
sub
add
xchg
ret
popf
addb
push
pop
lods
repnz
mov
mov
frstor
in
lret
add
mov
add
add
mov
sub
add
pop
mov
mov
add
and
mov
rolb
rolb
mov
add
cld
sti
jb
mov
mov
in
or
in
test
sarl
dec
cmp
ret
cmp
in
mul
add
loope
mov
in
ret
imul
sbb
mov
pop
mov
imull
es
pop
inc
push
add
mov
mov
xor
rolb
mov
arpl
add
mov
mov
pop
pop
iret
adc
add
fildll
lea
cltd
cmpsb
mov
cmpsb
pushfw
adc
jp
scas
jbe
popf
xor
pop
cmp
fldcw
in
int3
mov
sub
xchg
cld
out
fnstenv
cmp
xchg
cmp
daa
std
clc
and
mov
imul
xor
xor
pop
fwait
adc
nop
add
out
cmpsl
test
xchg
push
incl
add
fs
mov
xor
lret
push
movsb
ja
fsubrl
sbb
jnp
add
lea
rolb
cmp
mov
jmp
add
mov
mov
mov
sbb
in
sbb
mov
mov
fs
mov
xor
mov
add
adc
cmp
add
xchg
fwait
lret
dec
mov
pop
adc
mov
jo
mov
int
and
inc
or
ret
mov
idiv
push
mov
aaa
pusha
add
and
mov
js
add
add
sub
fisubrl
jp
add
mov
imul
mov
adc
mov
stos
int3
cwtl
test
fldcw
mov
dec
push
push
mov
jge
or
int3
jle
rolb
mov
fists
fcomi
aas
pushf
jecxz
add
mov
add
inc
mov
mov
xchg
in
mov
add
jns
and
mov
scas
pop
fistpll
sti
pop
mov
rcrl
pop
test
mov
aaa
fnstcw
mov
lods
insl
pop
sub
mov
xlat
cmp
aam
aas
ds
rcrl
jbe
mov
pop
pop
inc
ds
cmp
add
out
sti
addb
fmuls
out
mov
add
arpl
add
faddl
and
mov
add
mov
xchg
adc
sub
lcall
add
mov
popf
push
and
add
rolb
xor
mov
add
shll
jle
add
mov
jmp
outsb
insb
dec
add
les
aad
test
pop
outsl
addb
gs
add
mov
popf
mov
in
clc
lds
loopne
mov
or
ret
cmpl
stos
nopl
int
add
add
mov
push
mov
add
dec
mov
dec
stos
lret
inc
mov
mov
inc
mov
nop
add
lret
pop
negl
jecxz
adc
mov
iret
test
pop
add
mov
add
and
mov
jne
ret
ret
enter
lock
popa
into
push
mov
ret
pushf
push
imul
hlt
xchg
test
mov
push
sbb
mov
fsub
or
insl
adc
mov
push
pop
dec
les
mov
add
dec
movsl
imul
or
in
sahf
cld
aam
movsl
dec
pop
inc
mov
fcmovbe
mov
mov
mov
mov
xchg
add
jg
fwait
outsb
mov
mov
insb
pop
mov
icebp
dec
clc
ljmp
repz
push
jg
pop
inc
jge
insb
mov
mov
pushf
add
mov
or
mov
and
mov
xlat
mov
cmp
aas
and
push
add
out
push
push
xchg
add
cmc
sub
mov
clc
je
add
add
mov
movsb
nop
add
cmpsl
mov
imul
cmpsl
jb
mov
add
out
stc
mov
and
and
mov
dec
shl
mov
mov
mov
add
cmp
out
repz
mov
jne
insl
in
decl
inc
cmpsb
mov
pop
aaa
sub
ss
pop
mov
pop
ja
inc
xor
mov
cmp
lcall
mov
cltd
or
xchg
add
je
pop
aaa
sti
sbb
add
push
xor
add
mov
lds
add
outsl
cmp
pop
test
sbb
add
add
repnz
mov
pop
mov
sub
and
or
add
mov
add
call
dec
jl
xchg
add
mov
add
sub
fadds
cmpsb
daa
xor
add
add
xchg
call
xchg
clc
jle
pop
sbb
xchg
out
outsl
mov
add
movsb
add
loope
pop
pop
inc
and
mov
ja
add
mov
jb
mov
pop
jbe
test
shrl
or
push
rolb
mov
push
call
pop
cmp
js
call
and
mov
div
popf
mov
les
inc
outsl
movsb
xchg
data16
xchg
sub
or
pop
mov
jge
in
test
push
test
add
jo
mov
cmc
js
xchg
sbb
mov
test
cmp
gs
pop
xor
jecxz
push
push
ss
adc
cmp
in
mov
add
sti
mov
fistps
movsl
sub
cmc
add
inc
fnsave
shll
or
add
rcrl
stos
inc
aam
cltd
gs
pop
test
outsl
or
mov
pop
mov
ficoms
or
mov
sub
push
andl
add
push
add
pop
mov
rolb
mov
popa
lahf
add
addl
sub
mov
push
insl
out
cmp
mov
add
adc
mov
popf
movsb
and
add
push
popa
mov
scas
enter
jo
mov
inc
mov
pop
loope
add
and
mov
push
pop
test
cbtw
loop
mov
fs
lock
nop
add
push
lar
mov
inc
xchg
rolb
mov
add
out
cmp
lods
aam
jne
leave
jnp
jmp
cmp
mov
int3
mov
mov
mov
unpcklps
sub
mov
inc
inc
add
add
inc
jmp
test
and
add
push
addb
ds
push
add
cmpsb
ret
adc
mov
int3
add
mov
mov
aam
sahf
adc
jp
aaa
bound
mov
add
mov
out
pop
into
adc
mov
mov
inc
add
add
into
mov
out
int3
es
add
pop
and
idiv
adc
mov
ffreep
call
mov
adc
mov
adc
mov
mov
mov
push
xchg
adc
mov
js
cli
jnp
sub
add
mov
adc
mov
pusha
add
dec
or
lods
add
sbb
cs
mov
out
movsl
lods
adc
mov
subl
fmul
and
in
mov
clc
mov
mov
test
pop
pop
lret
push
pop
sbb
xchg
or
imul
or
sbb
int3
addb
mov
divb
add
mov
lret
mov
cmovg
dec
xchg
mov
pop
jno
inc
fbld
add
int
mov
mov
mov
jl
xor
mov
xchg
mov
sbb
cltd
hlt
adc
fwait
in
pop
cs
daa
jno
add
mov
inc
add
mov
ja
iret
cltd
decl
adc
lahf
aad
push
xchg
gs
ss
mov
aaa
xchg
bound
mov
xor
mov
or
nop
add
add
mov
mov
mov
cmp
imul
push
xor
dec
sbb
sarl
pop
sbb
call
mov
dec
jne
jns
add
mov
xchg
loope
mov
sbb
maxps
aaa
push
mov
add
scas
cltd
mov
jl
cli
iret
cwtl
lret
mov
pop
mov
jmp
std
lret
jns
sub
add
adc
std
cmp
add
std
out
xchg
add
xlat
jbe
test
mov
and
sub
sub
push
jbe
push
jmp
dec
out
addr16
push
ret
xchg
and
mov
mov
dec
sub
lret
sbb
add
fimull
outsb
insl
jns
jmp
jae
or
mov
push
and
out
xor
mov
push
and
mov
pop
es
mov
or
mov
add
in
jmp
inc
add
add
es
add
lcall
mov
cmp
adc
mov
sub
sbb
fsubp
int3
xchg
loopne
mov
or
rolb
mov
std
mov
or
sub
push
add
jb
mov
faddl
mov
iret
addl
inc
sub
lcall
add
imul
cmp
test
out
mov
ret
and
add
add
jge
in
or
aaa
cmp
add
lret
mov
ret
out
sub
cmp
fs
add
jae
sar
rolb
sbb
or
movsb
mov
movsb
cli
and
mov
add
es
add
fwait
mov
xor
les
xor
or
xor
add
addb
cld
mov
test
jbe
add
stc
mov
testb
scas
stos
popa
xchg
sets
or
sti
jmp
pop
cld
rorl
jno
out
cmpsl
fucompp
xchg
add
popa
dec
add
jmp
jl
add
stos
pop
push
mov
insb
inc
adc
push
mov
mov
xchg
and
out
insb
in
test
or
pop
fldl
push
jae
dec
loopne
mov
sbb
mov
mov
std
or
stos
and
adc
push
rolb
movsl
iret
mov
sbb
cmp
mov
mov
test
push
fldcw
and
mov
cltd
cmp
add
or
adc
mov
inc
add
hlt
pop
data16
ret
aaa
jl
push
fisubrl
mov
dec
mov
enter
fwait
sti
or
jb
mov
add
add
int3
sbb
pop
xor
mov
dec
and
fadds
loopne
mov
adc
dec
jecxz
das
xor
add
add
ret
maxps
and
mov
out
rolb
mov
push
jp
rolb
mov
sbb
add
inc
sbb
jp
add
cmp
cmp
in
add
jbe
dec
push
ja
fisttpll
jl
xchg
rolb
mov
cwtl
cmp
rcrl
jne
mov
sub
cwtl
fistpl
movsl
mov
insl
cmpsl
shll
mov
aaa
imul
test
add
cmpsb
mov
inc
xchg
pop
movsb
mov
cld
xor
mov
push
sub
aad
xor
das
scas
push
inc
mov
cli
mov
dec
add
add
rolb
movsl
and
mov
add
sarl
fdiv
loopne
mov
push
daa
outsb
add
mov
add
bound
mov
and
iret
in
add
add
enter
mov
fstpl
mov
cmc
fucomi
stos
dec
sbb
mov
stos
fdiv
pushf
sbb
test
cmpsl
lods
add
mov
add
jp
mov
jle
ss
jl
add
test
es
ret
daa
clc
inc
add
repnz
xor
mov
mov
adc
popf
cwtl
ficompl
out
sbb
jg
negl
xchg
movsb
cmpsl
std
sub
mov
cmpsb
mov
jle
aad
data16
mov
rolb
mov
aas
push
or
xor
dec
push
xlat
cmp
rep
scas
jns
push
cmp
jecxz
add
mov
lahf
mov
xchg
ss
rolb
inc
mov
add
mov
mov
mov
sbb
inc
add
cmpxchg
jg
test
cmpsb
sub
mov
and
mov
add
icebp
add
mov
imul
mov
lods
inc
add
test
xchg
mov
mov
mov
add
sub
pop
inc
das
mov
xor
repz
lock
mov
jp
add
mov
mov
mov
shr
ret
enter
cmpsl
mov
add
add
push
push
add
out
or
call
mov
loopne
mov
add
cmpsb
jmp
mov
and
mov
call
cmp
test
add
adc
mov
jl
pushf
inc
cltd
mov
mov
sub
cmp
add
cmpsb
js
cmp
fldenv
rolb
mov
add
add
daa
cli
adc
add
gs
add
push
add
imul
mov
adc
and
push
mov
cmp
adc
ljmp
add
fdivl
fwait
jne
adc
pop
xchg
xchg
sub
pop
scas
xor
nop
add
sub
data16
inc
dec
push
and
out
js
jo
mov
es
mov
scas
aad
jg
lods
popl
mov
mov
jg
mov
lret
xchg
imul
add
movsb
cmp
dec
scas
mov
mov
mov
add
add
rolb
add
lea
loope
mov
jb
mov
lock
popf
stos
cmp
stos
push
data16
push
imul
xchg
inc
pop
pop
xchg
rolb
mov
jb
mov
imul
jo
mov
je
mov
inc
xchg
add
sub
leave
stos
mov
jb
mov
imul
add
lods
jb
mov
push
test
sbb
pop
scas
addb
push
mov
jo
mov
add
push
mov
mov
mov
cmc
dec
cli
testb
push
inc
cmp
mov
icebp
lcall
jb
mov
inc
aam
dec
aam
mov
sbb
lods
or
jmp
iret
out
adc
les
and
mov
outsb
jb
mov
add
or
sbb
das
sub
add
int
int
jle
or
sbb
arpl
push
fcmovne
pop
loopne
mov
jge
adc
add
int3
add
out
out
mov
jg
add
add
into
repz
mov
hlt
xchg
fcmovb
add
lods
jmp
mov
iret
or
and
into
lock
jl
inc
add
mov
jno
push
ja
add
aam
imul
test
and
push
cmp
in
sbb
add
dec
negl
int
addr16
mov
mov
nop
add
add
mov
add
mov
xchg
add
mov
mov
fwait
idivb
dec
movsl
mov
jl
push
add
ja
add
sub
xlat
or
mov
aaa
lods
lcall
mov
mov
cmpsb
jns
popa
push
add
pop
mull
pusha
add
and
fstp
mov
mov
add
add
jecxz
add
cld
ds
pop
outsl
push
fwait
stos
insl
mov
mov
addr16
dec
xchg
pop
cwtl
cmp
sarl
jne
push
xor
mov
add
add
jbe
xor
mov
pushf
neg
cmp
add
inc
iret
or
loopne
mov
test
dec
mov
loop
mov
imul
push
pusha
add
mov
xor
fidivrl
cwtl
mov
mov
scas
sbb
add
and
add
push
jno
push
sbb
mov
mov
pushf
test
fsubs
add
xchg
mov
call
mov
pushf
shll
adc
mov
cld
sbb
int
add
lret
mov
into
dec
adc
add
rep
js
aad
into
mov
cld
mov
testb
mov
pop
lods
jecxz
sub
call
mov
rcll
add
mov
rolb
mov
popa
pop
add
or
mov
and
inc
add
add
pop
sub
mov
addb
stc
add
popf
sbb
imul
cmp
add
xor
cs
mov
addr16
shld
xchg
push
add
jle
lods
sahf
mov
in
loop
mov
jb
mov
inc
xor
mov
lods
idivl
add
add
jne
das
xor
pop
jae
mov
gs
mov
xchg
cmp
mov
sub
xor
xchg
les
lds
pop
ss
fildll
ret
jne,pt
dec
dec
adc
imul
add
xor
add
mov
mov
add
enter
cli
out
xchg
jmp
mov
mov
cmp
lcall
nop
add
repnz
icebp
mov
inc
aas
inc
int3
inc
add
call
add
int
mov
gs
mov
pop
add
mov
jp
jmp
adc
mov
and
mov
pushf
cmp
mov
mov
mov
add
cld
xlat
jbe
add
xchg
add
mov
mov
out
sub
scas
cmc
inc
movsb
mov
aaa
es
mov
mov
pop
and
mov
cmpsb
push
out
xchg
push
jmp
add
add
out
lods
jg
cmp
add
cmpsb
or
jp
adc
int3
push
addb
hlt
cwtl
icebp
ret
inc
call
mov
add
adc
loop
mov
inc
add
add
aaa
mov
sub
mov
int3
push
movsl
shll
cmp
mov
mov
mov
test
cs
push
sbb
add
inc
mov
add
or
popf
repz
jmp
cmpsl
jne
adc
and
scas
dec
xchg
mov
insb
pop
xchg
adc
mov
cmpl
cmpsl
mov
cmpsb
mov
add
addb
dec
insl
or
mov
xchg
pop
cmp
clc
pop
and
push
cmpsb
shll
ja
addb
mov
jne
mov
inc
push
add
add
sti
movb
dec
add
and
and
mov
daa
sti
fwait
call
mov
add
xchg
es
sbb
fdivr
mov
idivl
mov
mov
mov
and
mov
cltd
xor
or
clc
sub
mov
cltd
and
mov
into
ret
fs
push
ficoml
mov
pop
insl
sub
cmp
mov
testb
add
fidivrl
adc
mov
mov
xchg
add
add
stos
sbb
and
mov
lret
insl
sbb
insb
and
repz
out
out
add
aad
lock
test
xor
add
add
xor
mov
ss
xchg
ja
mov
jmp
add
pop
jne
fcmovb
add
mov
cmp
pop
stos
call
add
xchg
add
dec
test
add
mov
mov
sbb
leave
cmpsl
int
aam
dec
xor
mov
inc
add
rolb
mov
jmp
movsl
sbb
or
imulb
add
xchg
pop
jns
ror
xchg
adc
mov
int3
rolb
mov
mov
push
jge
lret
xchg
nop
add
imul
pop
aam
hlt
gs
test
daa
mov
add
push
add
popf
xchg
and
mov
add
rolb
xchg
push
in
shll
dec
popa
repz
fcompl
xchg
add
addl
add
adc
mov
ffree
les
xabort
lds
popa
enter
add
add
mov
orl
incl
cmp
lds
rcr
add
mov
mov
push
mov
ds
adc
mov
mov
cmpsb
jge
lahf
ret
dec
add
push
pop
roll
jbe
sub
add
add
cmp
jmp
push
add
cmp
add
pop
mov
add
stos
sub
mov
mov
inc
add
mov
mov
sub
js
fdivr
and
add
cmp
fcmovne
push
sub
add
mov
out
mov
inc
or
push
mov
lahf
inc
cs
lock
jecxz
push
pop
lahf
mov
mov
inc
add
fildl
addb
loop
mov
mov
gs
sub
jae
cmp
out
or
fsubl
adc
mov
mov
sub
push
aad
lret
add
pusha
add
inc
out
add
add
cmp
add
add
dec
add
add
lahf
adc
xchg
mov
rolb
mov
pop
icebp
pop
xchg
in
cmp
and
mov
add
fs
aas
dec
pushf
push
jg
push
jb
mov
sbb
aad
adc
icebp
jg
or
add
das
das
dec
mov
add
add
mov
mov
mov
sti
jnp
jnp
add
adc
dec
movsl
jo
mov
sub
mov
push
add
pop
xchg
fdivrs
fmull
jl
or
xchg
dec
cltd
das
and
mov
mov
sbb
mov
cmpsl
jmp
daa
aaa
sub
mov
adc
pop
std
mov
mov
rolb
jno
leave
adc
mov
jg
dec
mov
jp
and
cwtl
lcall
sti
jne
out
movsb
sub
rolb
mov
jo
mov
ret
rolb
mov
mov
mov
mov
mov
loope
add
and
mov
rolb
jecxz
add
aaa
out
add
fadd
into
mov
push
mov
loope
add
arpl
mov
xor
mov
jb
mov
xor
dec
mov
mov
add
je
xchg
mov
add
jbe
lock
and
mov
mov
dec
xor
mov
insb
data16
lret
mov
repz
pop
push
lds
lock
adc
into
push
add
add
mov
xor
xchg
cmp
add
add
js
jge
arpl
mov
add
sub
add
ljmp
jl
imul
pop
add
pop
or
pusha
add
add
lret
mov
daa
cli
into
dec
aas
jb
mov
dec
adc
mov
pop
xor
mov
adc
push
test
xchg
test
sub
xor
jo
mov
lods
gs
test
mov
add
add
in
xchg
push
cmp
mov
mov
xor
mov
sbb
mov
xchg
stos
add
cwtl
sbb
pop
mov
mov
lcall
or
jb
mov
adc
mov
cmpsb
mov
mov
pop
addb
push
sbb
xor
in
scas
xor
and
clc
add
addb
cld
into
cmpsb
pop
enter
cld
test
inc
rolb
mov
mov
add
mov
lret
sbb
cmp
test
sub
clc
mov
jnp
mov
mov
add
sub
test
fwait
dec
mov
movsl
xchg
rolb
mov
add
movsl
push
inc
lret
cmp
dec
cmp
jno
fcmovnb
fcom
pop
adc
iret
cmpsl
jnp
and
leave
jnp
and
mov
mov
out
add
testl
pop
shl
inc
nop
add
mov
scas
or
jmp
mov
mov
add
mov
arpl
jge
adc
mov
add
sti
pop
fimuls
jle
xchg
fisubrs
dec
loop
mov
nop
add
jle
sbb
lods
adc
mov
jmp
cmp
popf
xchg
js
mov
lods
add
mov
fidivs
add
ret
cmpsb
lea
push
ljmp
adc
lret
test
fmull
popf
ljmp
xor
mov
xor
or
das
adc
enter
add
or
mov
push
add
mov
mov
add
in
out
dec
jmp
pop
mov
pop
repz
in
fs
sti
xchg
xor
outsl
sbb
iret
out
rolb
and
mov
mov
daa
mov
in
dec
mov
mov
xchg
mov
and
mov
inc
add
inc
add
pop
jne
and
sti
lds
mov
dec
xchg
or
xlat
adc
add
ja
into
xchg
xor
xor
mov
push
or
dec
fldl
stc
jb
mov
ljmp
aam
outsl
push
sahf
daa
sub
mov
or
add
and
pop
add
cmp
mov
aaa
push
fimull
or
test
cmp
cmpl
into
sub
movsb
repz
mov
cmp
or
call
fs
mov
and
add
add
and
mov
addb
ljmp
aad
inc
add
mov
lock
cmp
dec
push
rolb
mov
rolb
mov
out
popa
cmp
lahf
mov
mov
xor
sub
add
pop
mov
mov
sub
xchg
pop
outsl
sbb
imul
movsb
xchg
andl
daa
or
push
add
dec
sbb
ljmp
sub
lock
adc
mov
cltd
mov
cli
clc
outsl
mov
test
mov
add
inc
aaa
dec
mov
mov
add
in
and
jbe
or
sub
mov
setl
mov
pop
enter
mov
mov
add
nop
add
gs
int
aam
movsl
cmc
xchg
add
mov
aas
mov
jne
add
add
inc
iret
hlt
jecxz
mov
mov
fists
lods
leave
and
xorl
filds
sbb
call
add
add
leave
outsl
movsl
xchg
fwait
mov
mov
aad
lods
sbbl
loop
mov
popa
jo
mov
mov
mov
fwait
lahf
out
repnz
js
sub
xchg
add
sub
popf
adc
mov
popf
xchg
add
add
jge
add
imull
mov
xlat
imul
jge
in
push
and
mov
add
mov
xlat
insb
iret
add
mov
dec
imul
inc
loop
mov
repnz
rolb
mov
test
mov
aas
cmp
hlt
cmpl
sbb
cs
jno
add
add
and
notb
add
add
out
fsubr
das
jnp
add
insb
pop
or
inc
inc
mov
lret
push
orl
push
or
add
add
mov
lret
loopne
mov
add
rcrl
or
mov
mov
lret
adc
mov
into
sub
push
cmc
sub
mov
lahf
shrl
push
fcom
jno
lods
fldl
add
stc
subl
adcl
xchg
pop
jns
add
mov
mov
mov
mov
dec
je
into
out
arpl
add
adc
dec
mov
mov
mov
mov
out
cmp
movsb
mov
fs
dec
pop
aaa
inc
adc
divb
jns
add
sbb
fldt
add
mov
inc
add
dec
sub
mov
cli
dec
xchg
add
rolb
mov
mov
js
sub
mov
pop
add
mov
das
gs
bswap
xchg
adc
cmp
pushf
inc
adc
mov
push
mov
add
repnz
cli
sbb
addb
std
lods
insb
js
add
rolb
mov
mov
sub
adc
add
sub
push
and
enter
pop
mov
mov
mov
mov
mov
pusha
add
xor
cmp
lret
scas
inc
outsl
mov
lock
std
movsb
int3
add
mov
and
mov
push
mov
xchg
pushf
inc
fwait
or
pop
flds
addb
gs
aad
pusha
add
cmp
add
ljmp
stos
fmulp
fsubs
jle
and
mov
sbb
popa
push
pop
pop
mov
dec
push
xchg
jbe
and
add
ret
into
enter
test
andl
push
add
lahf
adc
mov
js
push
call
data16
ret
popf
js
clc
test
mov
add
sbb
cmp
xchg
push
xchg
ja
add
inc
add
xor
loope
jmp
nop
add
dec
and
or
jecxz
lock
rolb
mov
push
add
mov
pop
cmp
stos
arpl
fcomi
push
and
leave
and
jle
jle
add
mov
xchg
loop
mov
mov
lcall
mov
mov
mov
adc
addb
jne
roll
lock
sti
incl
mov
mov
ret
loope
inc
xchg
lret
adc
cmpsb
and
add
ss
insl
popf
shll
sahf
sbb
enter
mov
xchg
add
cli
lock
rcrl
aad
add
add
mov
pop
dec
iret
push
adc
xor
add
add
push
adc
mov
leave
fdivs
dec
nop
add
mov
mov
add
mov
mov
cmp
mov
cld
lcall
mov
add
xchg
add
add
dec
cmpsl
xchg
dec
fildl
jno
adc
je
aad
xchg
xor
mov
add
or
mov
push
mov
lods
ljmp
mov
cmp
in
lret
mov
xchg
lods
cmc
cltd
fwait
int
add
outsl
and
mov
stc
stc
mov
mov
frstor
xor
xchg
mov
iret
rolb
mov
jns
lea
add
mov
popf
mov
addr16
scas
xchg
pop
jns
xchg
es
mov
xchg
outsb
xor
mov
jp
add
mov
mov
outsl
ficoml
adc
out
lcall
clc
mov
cmp
add
mov
pop
arpl
xor
test
mov
outsl
lock
stos
pop
sub
lds
mov
add
call
cmp
mov
add
dec
fildl
jmp
add
jns
jmp
add
add
mov
push
push
ljmp
jge
cld
jbe
push
out
add
adc
sbb
repnz
mov
out
loop
mov
test
add
int3
push
jp
push
add
mov
ds
or
sub
or
int
repnz
add
mov
add
out
lods
iret
pushf
rcrl
jae
add
mov
stc
sbb
dec
push
inc
and
mov
clc
lea
scas
mov
xchg
into
vcmppd
jo
mov
pop
bound
mov
xchg
mov
aaa
push
seto
mov
stos
xchg
out
aam
sbbl
test
enter
add
movsl
xlat
stos
in
add
add
add
sbb
mov
push
shll
rolb
mov
add
sub
lds
add
test
loop
mov
adc
mov
push
xchg
xchg
icebp
xchg
add
add
sbbl
in
sub
mov
daa
lret
inc
push
add
mov
or
or
pop
rolb
jbe
add
insb
cmpsl
popf
xlat
jmp
filds
or
icebp
hlt
arpl
add
scas
mov
push
add
mov
jp
push
add
popa
or
adc
fwait
and
mov
call
je
loop
mov
divb
std
cltd
repz
stos
adc
dec
adc
call
imull
mov
dec
pop
mov
push
rolb
cld
lea
mov
test
pop
mov
xchg
inc
addb
out
add
sahf
and
and
test
jae
in
xchg
sub
inc
lds
ja
sahf
ret
sbb
add
mov
add
testb
ffreep
imul
mov
dec
push
add
push
add
pop
sub
dec
cvtps2pi
sub
add
popa
inc
add
aad
mov
clc
or
jnp
dec
pop
pop
les
vpmulhuw
inc
popf
lds
roll
clc
mov
mov
xor
mov
daa
xchg
fwait
rolb
add
jne
mov
mov
imul
repz
rolb
mov
or
sub
inc
cmpsl
in
add
mov
add
mov
mov
add
xchg
jmp
stos
mov
nop
add
or
insl
cmpsb
pop
jmp
push
add
add
and
mov
mov
mov
repz
mov
add
mov
mulb
push
aam
dec
push
lret
sbb
jl
add
mov
aaa
pop
mov
mov
and
jae
nop
add
add
enter
mov
add
mov
and
add
cmp
add
icebp
std
stc
fs
mov
add
mov
mov
mov
movsb
ret
aad
std
inc
dec
push
sub
mov
xchg
xchg
add
xor
and
inc
add
jmp
into
jp
add
xor
mov
add
mov
jne
aaa
adc
add
mov
add
mov
fdivrl
roll
mov
fldenv
xor
mov
add
cmp
adc
mov
add
mov
xor
scas
add
cld
jle
test
push
dec
clc
out
pusha
add
fnstcw
add
das
pushf
cltd
mov
and
decb
or
inc
add
loop
mov
jle
add
loopne
mov
mov
pusha
add
adc
add
mov
adc
or
mov
jg
lcall
outsb
out
add
add
out
ja
aam
add
mov
cmp
pop
das
push
adc
add
add
cmc
inc
jmp
cmp
pop
cmp
adc
push
jle
mov
mov
pop
or
xchg
mov
sub
scas
cmp
add
add
sbb
or
pop
adc
dec
xor
mov
mov
mov
test
add
jo
mov
or
dec
int3
ret
rolb
mov
mov
cs
setp
add
mov
ss
add
insl
fldenv
cmp
add
cmpsl
scas
divb
adc
mov
jmp
sbb
add
loopne
mov
xchg
add
add
xchg
lds
int3
test
dec
and
mov
test
xor
mov
mov
out
xchg
repz
add
imul
test
insb
sti
mov
add
mov
es
and
orl
push
loop
mov
mov
mov
push
cwtl
test
sbb
push
lods
mov
mov
into
pop
sub
add
sub
add
jae
pop
fidivl
mov
sbb
add
add
sbb
and
mov
lds
lret
mov
dec
or
jp
scas
or
add
mov
mov
push
xlat
jl
add
mov
add
mov
mov
adc
mov
test
xor
add
cmp
sub
fs
movsb
pop
add
mov
sti
cmp
dec
in
repnz
out
xor
mov
inc
add
add
inc
mov
mov
and
mov
clc
jge
jp
mov
mov
lea
add
xlat
xchg
sub
das
or
add
repz
pop
popa
dec
sub
loopne
mov
lock
and
out
mov
add
mov
cmpsb
gs
dec
jo
mov
rolb
mov
stos
adc
mov
in
pop
inc
sahf
test
fiadds
ljmp
outsl
pusha
add
add
add
add
push
les
add
push
fstpl
jle
add
push
mov
repz
sub
arpl
jo
mov
adc
add
das
xor
cli
ss
dec
in
add
ja
je
cmpsb
dec
mov
add
add
inc
mov
pop
cltd
and
mov
pop
cld
movsb
xchg
xchg
add
mov
mov
mov
add
add
jns
adc
push
jmp
jg
sarl
cmpsl
pop
xlat
push
xlat
clc
xchg
add
xor
pop
sub
add
repnz
mov
movsl
mov
add
scas
lss
mov
aaa
mov
jle
add
in
push
lret
push
mov
xlat
xor
jmp
fs
repz
sub
in
mov
xchg
dec
ss
jae
or
inc
add
add
adc
mov
sbb
stos
push
push
es
popf
enter
fs
xchg
in
add
inc
pop
mov
out
add
add
mov
rolb
mov
jl
push
mov
mov
mov
push
jmp
sarl
push
int
in
fsts
pop
outsl
loope
xlat
out
mov
jmp
fwait
lods
hlt
sbb
mov
xor
adc
mov
mov
repz
cwtl
cli
rcll
jns
ret
or
add
addb
jle
mov
add
add
das
push
pop
sbb
add
test
jno
add
mov
mov
pop
pop
inc
dec
pop
clc
and
mov
mov
sbb
pop
add
mov
int
add
add
rolb
mov
xor
add
jmp
dec
iret
pop
mov
sbb
push
push
adc
xchg
cmpsb
mov
rorl
cld
cli
fcom
add
mov
hlt
out
sbb
inc
add
add
icebp
fnstsw
fcomip
add
hlt
xchg
xor
popa
mov
loope
sahf
jmp
mov
or
mov
push
mov
add
inc
add
cmc
adc
mov
add
add
mov
fwait
xor
aad
arpl
sarl
adc
dec
mul
add
mov
nop
add
add
mov
sub
add
out
jae
gs
sub
dec
jmp
idiv
in
aam
repz
lods
test
push
aam
jp
fcoml
or
pop
or
mov
leave
fs
scas
lods
mov
fadds
add
jle
hlt
testb
mov
add
add
mov
dec
sub
add
mov
pop
jo
mov
push
push
inc
aad
mov
leave
jns
mov
lods
scas
bswap
cltd
or
jg
push
jge
aam
outsl
xor
xchg
add
add
popf
sub
sub
repnz
mov
jae
loopne
mov
sub
in
jno
lods
vaddpd
rolb
mov
mov
add
mov
jo
mov
mov
cmpsl
or
aam
fsub
add
mov
push
mov
insl
ljmp
jne
out
xor
inc
rolb
mov
cmp
cmpsl
icebp
pop
outsl
jnp
dec
and
mov
dec
cmp
neg
mov
add
xchg
xor
cmpsl
adc
mov
fcoml
xchg
and
das
daa
push
addb
inc
add
dec
hlt
push
and
mov
fidivrs
add
or
push
cmpsb
jne
add
push
dec
int3
inc
lods
cmp
cld
xlat
sbb
mov
jle
jg
xor
mov
xor
and
enter
add
mov
pop
jne
sub
ret
sub
pusha
add
add
inc
lds
cmp
pop
jp
lock
sbb
mov
test
or
adc
insb
adc
mov
mov
mov
je
xchg
add
xor
add
mov
add
dec
cmp
cmpsb
jge
movsb
int
out
inc
fstp
pop
cmp
mov
mov
inc
lahf
cmp
pop
sbb
mov
add
add
bound
mov
or
fisttpll
add
outsb
adc
mov
clc
or
mov
xor
lea
add
add
aaa
cmc
pusha
add
sbb
ss
mov
add
pop
jne
pop
or
pop
jge
push
repnz
imul
mov
mov
add
xlat
fmull
es
rcr
insl
enter
push
xor
add
rcll
mov
or
cli
ds
loopne
mov
add
mov
sub
xor
mov
add
inc
testb
pop
push
inc
sub
mov
add
lods
sub
lods
inc
lret
dec
sub
add
dec
mov
mov
mov
push
cmp
add
jle
js
mov
mov
stc
push
sub
or
mov
int3
popf
mov
mov
add
fs
mov
loopne
mov
scas
in
inc
aaa
test
addb
roll
insb
dec
mov
mov
test
push
inc
pusha
add
mov
add
add
add
mov
fs
rolb
mov
adc
cmp
cli
je
mov
cmc
pop
ret
cmpsb
addb
mov
in
sub
mov
push
add
aas
in
imul
jnp
std
addb
mov
aad
pop
movsl
inc
mov
mov
mov
orl
std
cmp
repz
adc
mov
lds
pop
scas
dec
mov
adc
adc
jge
push
scas
cmp
repz
rolb
int3
out
in
sub
sub
lods
sarl
stos
hlt
mov
add
and
add
lret
add
add
bound
mov
mov
add
mov
mov
cmp
mov
add
mov
pop
adc
mov
pop
decb
inc
out
mov
addb
aad
add
add
mov
cmpsl
xor
mov
sbb
mov
mov
xchg
push
inc
lret
addr16
subl
out
push
lcall
add
stos
in
adc
mov
testb
into
xchg
or
ss
add
sub
push
bound
mov
pop
add
jmp
mov
iret
ficompl
cmp
add
test
scas
movsl
int
popf
lea
cltd
test
rolb
mov
fldl
add
mov
das
jge
aas
in
out
jbe
inc
cwtl
mov
mov
add
mov
jle
rorl
mov
or
or
add
mov
dec
in
sbb
xchg
lock
test
add
cmp
insb
in
mov
das
addb
leave
sbb
fbstp
add
mov
pusha
add
mov
push
aaa
adc
jbe
mov
ss
ljmp
mov
rcll
int3
dec
and
dec
push
add
bound
mov
mov
ds
sbbl
subl
cld
pop
or
outsb
adc
fs
stos
adc
mov
sub
fbld
xchg
outsl
mov
pop
jns
lock
add
cmpsl
ret
mov
sti
sbb
add
out
push
lea
mov
fcoms
mov
int
add
push
pop
add
mov
popf
sbb
movsb
mov
mov
mov
add
sub
add
mov
xor
mov
rolb
outsb
mov
inc
mov
add
cltd
sbb
mov
mov
add
outsl
enter
sbb
xchg
lods
pushf
shl
nop
add
cwtl
pop
push
push
push
add
faddl
add
cmp
or
pop
iret
adc
mov
in
pop
bound
mov
jle
and
je
sbb
add
xchg
pop
in
pop
and
cmp
pop
cmp
scas
das
push
cmpsl
fldenv
add
mov
sub
das
mov
scas
imul
and
xchg
xchg
jae
cmc
call
jo
mov
mov
cmp
pop
pop
xchg
cmp
add
mov
stos
cwtl
in
adc
mov
jns
xor
mov
push
add
pushf
ret
inc
cmp
popa
dec
adc
jecxz
sti
ret
cmp
mov
lods
xor
mov
fdivr
push
add
mov
sub
add
pop
sbb
out
xchg
sub
add
lahf
lods
jecxz
dec
movsl
lods
daa
pop
mov
add
mov
push
mov
cltd
push
ret
mov
mov
in
pop
mov
orl
std
addr16
jns
les
add
mov
sbb
sub
mov
xor
enter
push
dec
fisttpll
mov
xchg
roll
mov
mov
push
jmp
sub
cmc
fildl
add
gs
in
out
cld
insl
icebp
xchg
into
pop
outsl
mov
inc
fldenv
cmp
mov
mov
mov
mov
das
fiadds
cmp
icebp
adc
mov
add
pop
filds
add
mov
pop
mov
mov
mov
xchg
add
jle
add
nop
add
stos
push
sub
iret
push
data16
sbb
stc
enter
cli
push
xor
mov
and
sbb
adc
mov
fstl
add
xchg
aas
adc
add
jle
xchg
pop
xor
mov
jns
aaa
lea
icebp
mov
dec
and
leave
stc
mov
repz
mov
cmc
jo
mov
mov
mov
add
xchg
xchg
add
mov
lcall
push
ret
clc
mov
mov
push
ffree
jne
stos
sub
out
aam
enter
imul
mov
shrl
icebp
push
add
aam
xor
mov
add
jle
add
in
adc
sbb
mov
cmp
sti
cmp
and
cmp
adc
dec
and
mov
cmp
aas
xchg
push
pop
dec
push
adc
and
addr16
inc
push
scas
jns
test
add
mov
push
scas
fidivs
pop
cmpsl
pusha
add
mov
xchg
out
xor
mov
lds
les
add
pop
lea
in
test
rolb
fistl
out
sbb
gs
add
jp
ja
inc
push
data16
mov
push
add
mov
mov
std
insb
loopne
mov
ss
inc
data16
pop
ss
mov
add
push
jecxz
cmc
cmp
daa
cwtl
addb
fld
cltd
loop
mov
xchg
and
out
push
stc
add
cmp
xor
sub
dec
outsb
adc
cmpsb
cmpsb
sub
push
add
mov
add
mov
mov
or
xchg
and
mov
dec
xchg
xchg
xor
fsts
mov
add
testl
pop
pop
cli
cmc
in
fisubrl
das
fwait
pop
ds
rcll
or
jbe
xchg
adc
mov
mov
mov
movsb
push
outsb
dec
sbb
add
mov
mov
push
mov
mov
popa
shll
add
sbb
dec
popa
cmp
mov
mov
movsb
inc
rolb
inc
add
or
or
and
pop
sti
lea
ds
popf
arpl
add
push
mov
dec
sub
mov
popa
loopne
mov
add
add
mov
mov
add
outsb
inc
fisttpll
fsubrp
addr16
fcompl
jbe
ljmp
jns
add
xchg
dec
or
pop
add
mov
mov
aam
sbb
repnz
adc
fwait
pop
aad
adc
mov
fisubrl
bound
mov
mov
mov
repz
jmp
add
cs
loopne
mov
pop
fnstcw
add
push
fstps
push
inc
xor
mov
mov
mov
jl
add
hlt
aas
aaa
enter
das
mov
jge
adc
fldl
add
mov
push
cmc
sub
testb
push
ficompl
mov
push
in
mov
mov
add
cmp
mov
mov
adcl
add
mov
leave
pop
mov
xor
outsb
sub
xchg
fcompl
movsb
push
xor
xchg
add
mov
int
add
mov
ljmp
sub
add
cmp
mov
add
das
mov
mov
cmp
add
repnz
pop
outsb
mov
add
adc
add
dec
cmp
add
bound
mov
loop
mov
add
xchg
sub
cwtl
rolb
adc
mov
add
add
mov
mov
xchg
pop
mov
jb
mov
pop
mov
sbb
add
sub
dec
or
jmp
sub
in
insl
push
or
pushf
sbb
les
outsb
imul
sub
mov
jmp
gs
cmpsl
in
mov
add
add
mov
mov
rcll
push
ficoms
mov
xchg
or
cmc
cwtl
mov
lock
cwtl
fisubrl
out
jmp
mov
mov
dec
jns
in
push
in
scas
idivl
lods
inc
push
cwtl
loope
add
jne
push
jmp
sbb
test
mov
mov
jle
xchg
sub
es
icebp
cltd
mov
sahf
jmp
mov
inc
add
xchg
in
pop
xchg
mov
out
push
xor
mov
sbb
push
ret
mov
cmp
push
and
mov
xor
add
mov
dec
jg
insl
scas
jns,pn
pop
mov
stos
aam
jns
sbb
imul
imul
add
mov
sbb
dec
mov
ficoml
jge
and
mov
mov
addb
xchg
add
mov
lods
pop
or
add
mov
add
mov
lods
sbb
add
add
stos
orl
outsb
adc
bound
mov
push
add
or
je
mov
js
into
inc
add
mov
push
push
arpl
notb
mov
sub
inc
arpl
outsb
inc
call
sbb
add
mov
mov
mov
add
adc
add
mov
add
xchg
push
notb
lahf
arpl
add
les
loop
mov
sbb
mov
mov
pop
and
mov
xchg
sub
out
pop
jmp
mov
mov
mov
les
in
ror
push
addb
rolb
mov
adc
mov
add
push
jmp
adc
lods
outsl
jecxz
mov
scas
pop
fnstsw
cmp
test
in
add
and
mov
cmp
int
inc
add
mov
decb
dec
and
mov
push
add
les
in
push
sub
xor
mov
pop
nop
add
leave
mov
mov
add
ds
bound
mov
xchg
dec
mov
sbb
add
rolb
xchg
nop
add
push
clc
jne
dec
repz
aad
add
mov
jae
and
xchg
in
ljmp
mov
pop
pop
jae
add
mov
add
ret
scas
adc
std
xor
mov
mov
mov
mov
add
mov
add
adc
nop
add
add
iret
sbb
pop
lods
cmc
out
lds
jmp
add
jno
lock
add
dec
cmp
add
into
dec
stos
mov
sbb
add
mov
ljmp
cwtl
addb
hlt
pop
out
aaa
xchg
push
add
inc
decb
flds
mov
or
out
sbb
sub
loop
mov
sub
mov
sbb
ret
sbb
mov
pop
xor
mov
call
mov
lret
lds
xchg
add
add
aad
fdivl
add
outsl
push
sub
cmpl
add
mov
repz
pusha
add
lds
rolb
mov
pop
inc
mov
mov
add
lahf
outsb
cwtl
xchg
insl
dec
fcomi
mov
add
sbbl
nop
add
insb
sub
int3
imul
xchg
rolb
mov
inc
imul
out
pop
mov
fdivrl
push
xchg
rcll
add
dec
sbb
mov
imul
hlt
cmp
xor
mov
lret
mov
mov
push
add
dec
lret
mov
stos
and
xchg
outsl
enter
mov
dec
stos
fdivrl
xchg
jae
pop
add
mov
mov
popa
rolb
mov
test
xchg
xor
xchg
xchg
insl
sti
pop
xchg
test
mov
lcall
xchg
pop
ja
out
frstor
mov
xor
add
test
ds
aad
add
and
mov
aaa
dec
jmp
mov
add
les
add
add
sub
shrl
fadd
jge
inc
add
ljmp
jmp
dec
mov
ja
add
ret
or
xor
ret
jne
das
out
inc
dec
mov
add
sub
rolb
mov
sub
std
push
loopne
mov
insb
xchg
xchg
mov
scas
sbb
jns
inc
imul
mov
das
push
pop
rcll
fdivs
mov
ret
rcll
xchg
mov
sub
mov
adc
mov
aas
pop
jo
mov
js
push
je
or
push
sahf
std
movsb
mov
xchg
add
mov
roll
ss
popl
push
mov
add
aaa
xchg
dec
test
lods
mov
js
push
enter
js
test
add
cmp
mov
insb
hlt
cli
pop
inc
add
mov
hlt
js
dec
or
inc
dec
imul
mov
jle
cwtl
sbb
aas
mov
xchg
xlat
scas
rolb
jmp
inc
sub
subl
adc
lods
lret
shll
mov
cltd
cmp
bound
mov
cmp
pop
pop
mov
dec
inc
cmpsb
sub
int3
lods
sub
ljmp
jle
fcmovbe
add
loop
mov
loopne
mov
cmpsb
in
test
pusha
add
ss
pop
lret
jno
rcrl
xchg
inc
add
add
rolb
mov
ror
les
fwait
or
out
push
add
inc
mov
push
add
dec
inc
aaa
inc
ja
add
bound
mov
add
add
jl
inc
stos
fisubs
sbb
mov
in
xchg
add
setae
pusha
add
jno
adc
mov
mov
cli
mov
sbb
into
inc
fs
push
add
loopne
mov
loopne
mov
xchg
mov
inc
or
sti
dec
xchg
fsubs
add
push
add
cmp
in
sub
enter
push
rolb
push
mov
add
mov
lds
add
rorl
das
iret
les
xchg
cvttps2pi
add
xchg
add
pop
dec
leave
mov
pop
mov
mov
add
out
out
cmpsb
lods
aas
out
add
pop
outsb
xor
pushf
inc
test
aad
neg
jae
enter
add
decl
repnz
add
std
inc
xchg
in
xor
mov
imul
xor
xchg
das
mov
lea
rolb
repz
push
test
adc
lods
xchg
add
stos
sbb
bound
mov
insl
std
add
out
add
inc
add
ret
and
sbb
out
jbe
addb
or
xchg
push
and
pop
adc
xchg
mov
ds
mov
test
add
mov
sub
nop
add
mov
add
add
add
gs
lock
mov
add
bound
mov
push
add
add
or
cltd
stos
xchg
add
andl
push
ret
xchg
add
add
jno
cmpsb
mov
mov
push
pop
push
ss
mov
sub
jp
in
mov
and
mov
cmp
push
add
pop
movsb
jns
ret
cmp
push
icebp
cltd
adc
pushf
push
add
push
push
or
out
and
leave
mov
push
mov
mov
mov
mov
imul
sbb
cmpsl
push
push
push
add
imul
mov
cld
or
push
add
mov
add
mov
rolb
xchg
add
add
and
pop
xchg
xchg
pushf
sub
enter
xchg
inc
call
test
xchg
pop
sbb
cli
sub
xor
mov
add
inc
pop
lods
push
gs
sarl
lcall
add
pushf
inc
add
enter
or
add
fisubrs
mov
add
mov
and
mov
mov
pop
lea
mov
mov
cmpsb
arpl
push
dec
pop
add
mov
rolb
mov
rorl
dec
xchg
add
cmp
push
leave
loop
mov
insl
mov
or
ret
fwait
inc
inc
addb
aas
bound
mov
rcrl
fwait
sub
push
mov
cmpsl
in
daa
rolb
out
sahf
addb
popa
das
push
xor
push
mov
add
add
mov
pop
jo
mov
rolb
mov
ret
xchg
lock
mov
mov
fsubrl
jns
add
fyl2x
mov
mov
push
inc
push
jg
pushf
dec
mov
xor
adc
mov
dec
mov
mov
adc
push
add
nop
add
leave
addr16
xor
add
mov
or
mov
hlt
lods
pop
mov
mov
pop
push
hlt
dec
insb
das
add
add
and
mov
sub
add
add
add
sub
inc
add
mov
mov
out
pop
xchg
into
movnti
jb
mov
add
xchg
cmp
pop
cmp
push
repz
sbb
xor
mov
lret
mov
enter
cltd
rolb
mov
add
scas
adc
das
adc
mov
bound
mov
add
sbb
cld
sti
jp
xchg
xchg
repz
adc
add
mov
jbe
aam
clc
mov
or
pop
pop
jnp
xlat
and
mov
pushf
xor
mov
ss
sub
cltd
ljmp
inc
add
addb
xchg
nop
add
add
xor
add
dec
push
lods
push
push
lret
xchg
sti
push
fisttpl
mov
fwait
into
jae
call
add
cmp
add
fsubrl
xchg
sub
enter
sbb
add
mov
mov
mov
mov
mov
add
mov
sbb
sbb
cltd
and
mov
dec
pop
lock
push
push
pop
sub
push
pop
clc
add
in
mov
outsl
add
mov
add
add
mov
cmp
add
mov
inc
jle
mov
movsb
repz
sub
lcall
cmp
or
mov
aaa
lds
dec
and
and
add
aas
fdivr
mov
sub
mov
add
pop
xor
pop
ret
push
mov
mov
lret
fiadds
nop
add
out
outsb
push
mov
or
pop
and
pop
push
xor
in
sbb
add
