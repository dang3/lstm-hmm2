sar
loope
ljmp
push
pop
adc
jl
mov
mov
sbb
push
add
adc
push
outsl
adc
sub
or
add
mov
imul
push
fists
add
sbb
add
mov
add
add
jne
add
push
call
aam
pop
mov
mov
adc
adc
or
mov
int
xchg
add
mov
gs
outsb
add
das
jl
dec
xchg
addr16
jl
add
add
dec
add
add
cmp
add
add
add
mov
sbb
and
mov
add
and
add
rcrl
hlt
add
in
mov
mov
mov
lock
dec
testb
sub
add
add
repz
in
dec
mov
xor
jp
inc
add
cmp
add
xchg
push
add
add
add
es
add
add
jp
rolb
addl
imul
add
push
add
or
js
fcoml
add
add
add
mov
mov
add
add
hlt
add
add
pop
mov
cmc
fisttps
mov
add
mov
filds
add
mov
rep
into
dec
cmpsl
int3
rolb
add
shll
add
mov
cmpsb
add
addb
loop
std
xor
add
cmc
addb
or
add
or
add
in
enter
out
jmp
inc
add
dec
pop
std
stos
stc
ljmp
lret
flds
or
scas
rcll
stos
in
pop
repz
mov
hlt
add
das
rol
add
add
add
or
add
icebp
addb
add
jb
aam
lahf
rcr
adc
jecxz
inc
outsl
fmuls
jo
in
imull
cmp
repz
iret
xor
lret
ret
push
add
hlt
add
add
add
add
add
add
xor
add
jo
int3
mov
jmp
adc
test
add
enter
rolb
pop
cmp
add
out
call
ljmp
in
je
fidivl
mov
add
call
add
call
popf
jp
enter
xor
cli
je
fidivl
ficoms
cli
cmc
fcmovb
add
mov
fidivrl
aad
lods
outsb
and
mov
hlt
add
nop
add
mov
xchg
add
add
mov
lds
add
add
movb
ret
hlt
add
hlt
add
adc
mov
inc
push
clc
ret
inc
fmull
ljmp
add
add
mov
cmp
add
gs
jg
xor
adc
call
fsubl
std
lcall
test
sti
mov
add
mov
mov
out
mov
jge
jecxz
jl
pop
call
cli
jae
mov
mov
mov
out
mov
mov
cmp
sub
sub
scas
jl
hlt
add
add
xchg
rolb
rolb
jecxz
mov
add
add
mov
add
mov
jecxz
jmp
ffreep
add
pop
fdiv
in
addb
mov
lahf
lret
data16
add
rolb
les
mov
add
mov
xchg
or
dec
std
sub
dec
adcb
sub
push
push
push
cld
call
sub
mov
cs
movzbl
cmp
ss
push
push
call
cmp
je
es
lea
cs
cs
es
call
test
jne
jmp
push
lret
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
lea
lea
sub
add
mov
sub
sub
push
pop
push
je
jmp
add
add
or
add
mov
pusha
add
rolb
cmp
andl
test
pop
movb
pop
das
pop
je
push
je
fbld
addb
add
addb
add
add
jl
add
add
lcall
jge
icebp
mov
add
mov
sbb
add
in
test
add
jl
sbb
jl
movl
xchg
mov
jl
ret
add
addb
add
add
mov
rolb
add
jl
imull
sub
dec
dec
xchg
jns
add
inc
add
loope
add
add
repnz
mov
movsl
pop
push
xor
jp
adc
mov
addr16
stos
ret
mov
add
daa
dec
cmp
push
testb
in
jl
add
add
loop
je
push
xor
sbb
inc
add
loope
aas
ret
cmp
inc
add
in
cmp
call
sbb
loop
test
inc
add
pop
dec
int3
adc
ret
add
mov
xchg
cwtl
mov
xchg
add
ffreep
sub
fucomp
sbb
stos
out
push
call
mov
test
add
add
add
addb
add
add
and
add
fsubr
popa
xlat
and
call
dec
addl
add
add
ja
add
clc
sbb
imul
sub
lret
lock
in
fbld
cmpsl
mov
aas
addl
jno
add
adc
movsl
cmp
cmp
jno
inc
add
add
and
jg
pop
dec
jp
add
outsl
dec
jl
push
push
call
push
jp
push
aam
test
je
nopl
jnp
xor
xor
mov
add
out
lahf
pop
lret
call
add
add
cmpsl
cmpsb
add
add
lods
cmp
jge
push
add
aad
cmp
jge
add
add
and
mov
mov
bound
mov
ds
movb
std
and
mov
mov
repnz
add
pop
jl
loope
mov
arpl
stc
fimuls
int
lret
add
jns
in
sti
scas
push
icebp
xchg
add
test
gs
add
insl
dec
mov
movsb
add
loopne
cmp
add
add
cmc
adc
jl
js
int3
jne
add
sbb
ret
add
scas
orl
add
adc
mov
pop
fistl
add
push
push
out
dec
mov
add
pop
jg
and
mov
bound
mov
add
mov
int3
test
loope
add
mov
aas
insb
sub
data16
mov
mov
add
int3
pop
lods
push
push
leave
mov
outsb
arpl
pushf
rolb
add
add
add
mov
lock
mov
pop
sti
lahf
imul
popa
cs
dec
and
jne
mov
add
sbb
pop
push
mov
add
movsb
add
add
mov
cmp
icebp
cld
mov
add
add
add
or
sub
sub
inc
add
jle
add
add
add
add
cmp
call
inc
add
cmp
add
mov
add
xor
or
jmp
sbb
es
add
pop
or
push
jmp
push
mov
add
push
push
xchg
add
movb
add
mov
push
pop
dec
xchg
add
addl
inc
add
add
fwait
add
mov
addb
les
and
mov
lock
add
mov
add
add
add
sbb
add
add
aas
out
adc
pop
add
cs
add
pop
cmp
add
push
add
add
add
cs
and
mov
cmp
fptan
add
lret
cmpl
cld
mov
add
xor
mov
mov
mov
sub
loop
inc
fwait
and
add
ret
jmp
repz
inc
add
add
add
imul
lret
add
xlat
mov
lea
mov
push
insl
lods
pop
push
add
cmpsl
int
xchg
add
add
sahf
roll
xor
mov
sahf
lds
add
push
rolb
sbb
dec
lea
cmp
mov
xor
sbb
mov
add
sub
jnp
pusha
add
add
add
mov
in
mov
add
add
mov
add
mov
ja
add
add
add
add
jae
adc
cmp
popa
ljmp
xchg
push
add
rolb
popa
adc
adc
clc
imul
and
mov
outsl
cmp
dec
and
mov
mov
add
xor
movsl
pop
inc
add
add
add
add
lods
jne
in
xor
cmpsl
movb
outsb
in
mov
mov
or
add
out
sbb
jmp
add
add
push
add
mov
add
xlat
inc
add
add
cmc
ja
loop
cmpltps
dec
ljmp
cmp
sub
add
add
aas
cmp
push
add
dec
popf
adc
std
lods
lahf
inc
out
mov
mov
mov
cs
mov
int
fdivl
jae
add
lock
jl
rolb
mov
jg
addr16
popa
daa
mov
add
push
stc
dec
mov
add
add
add
add
jnp
add
mov
push
add
nop
add
inc
add
ror
scas
push
add
inc
mov
test
xor
fwait
pop
inc
scas
in
shll
add
std
push
sub
mov
mov
mov
add
add
add
add
jmp
frstor
fbstp
pop
dec
dec
call
call
xchg
add
sub
add
add
add
outsl
and
sub
pop
pop
loopne
or
mov
pop
push
add
shrl
sub
push
add
fstenv
sbb
pushf
jl
test
cmpsb
add
imul
daa
push
nop
add
and
fmull
or
xchg
rolb
jl
sbb
add
add
test
push
add
mov
mov
leave
or
push
or
sbb
addr16
test
loop
add
mov
xor
popf
loopne
je
enter
jns
add
lret
pop
sbb
pop
nop
add
add
add
cmp
jmp
jmp
mov
add
cmpl
arpl
je
lret
add
jmp
inc
add
mov
xchg
add
mov
packuswb
int
aas
dec
mov
pop
pop
stos
push
add
sbb
test
xchg
add
andl
pop
sub
mov
sbb
add
inc
add
add
mov
pop
xchg
jle
add
add
jge
arpl
mov
sbb
add
add
rolb
push
cld
jmp
mov
add
bound
mov
cmovle
ja
jp
aad
add
add
jb
adc
sbb
mov
add
add
mov
add
add
or
imull
add
add
xchg
hlt
add
cltd
push
add
lods
push
arpl
push
pushf
or
add
add
mov
std
ret
or
push
inc
mov
add
mov
mov
lahf
add
push
xchg
add
hlt
add
jnp
pop
pop
xchg
mov
add
xchg
add
or
mov
add
adc
mov
insb
dec
mov
mov
add
cmp
add
aad
aam
push
add
jmp
add
lret
pusha
add
mov
sti
lock
push
loopne
sbb
sub
pop
pop
sub
movsl
and
mov
movl
add
mov
adc
out
insb
std
adc
stos
scas
scas
loop
andl
xor
movsl
insb
push
in
ljmp
stos
add
add
add
or
repnz
nop
add
mov
add
hlt
add
add
mov
add
add
bound
mov
dec
out
in
mov
mov
sub
movsb
add
add
add
inc
testl
or
sbb
inc
std
dec
pop
movb
scas
cmp
add
pushf
add
mov
sbb
add
jle
add
mov
add
sub
push
inc
add
loop
add
add
add
decl
ffreep
add
arpl
cmp
ljmp
sub
add
add
cmp
pushf
out
in
int
xchg
add
aad
xchg
ucomiss
in
sub
add
cmpsb
add
loope
add
test
jecxz
into
mov
and
mov
mov
adc
cmp
outsl
jp
add
pop
int3
mov
xchg
push
dec
repz
sub
add
in
es
loopne
push
loope
stos
enter
les
push
add
push
add
cmpsb
add
or
xor
adc
cmpsb
add
ljmp
in
cmp
cmpsb
add
add
push
mov
pop
stos
sub
sub
xchg
add
or
ja
jmp
add
add
add
rcl
add
movsb
add
jno
add
add
mov
adc
rcll
sub
arpl
loope
mov
add
push
add
movsb
add
outsl
cmp
fnstsw
sub
add
mov
test
das
jne
pop
mov
pop
add
sbb
mov
or
imul
mov
jnp,pt
cmpsl
add
mov
ds
les
bound
mov
sti
fwait
dec
test
or
add
and
mov
std
cli
popf
cmpl
clc
xor
dec
jle
push
add
mov
add
add
xlat
jno
cltd
cmp
jmp
add
sahf
lea
test
add
sti
mov
test
pushl
mov
add
mov
pop
xchg
test
pusha
add
mov
mov
and
mov
add
in
popf
add
jbe
and
cmp
cmpsl
mov
mov
xchg
add
mov
sbb
add
add
add
jl
add
leave
jmp
add
add
add
pop
jl
sub
jo
add
daa
sahf
adc
or
add
repz
fdivs
add
dec
mov
fidivl
cmp
test
daa
test
add
insl
sub
data16
dec
add
cmove
ljmp
insl
cmpsb
add
inc
add
add
push
add
or
or
add
mov
test
add
add
add
add
add
ret
jg
mov
dec
or
add
add
ret
add
ljmp
cmp
add
mov
add
test
cli
push
sbb
movl
inc
jbe
int
add
add
mov
pop
mov
add
das
roll
add
ficomps
std
lods
fnsave
hlt
add
add
ret
inc
aad
add
call
add
outsb
outsb
pop
cli
mov
mov
push
add
js
add
lret
mov
add
mov
sub
inc
add
xlat
adc
dec
lret
jl
add
add
sbb
push
add
pop
in
cmp
add
pushf
push
add
add
mov
xchg
add
stc
push
ret
jae
or
add
enter
push
add
cmpsl
mov
add
test
adc
inc
add
add
mov
std
inc
in
rolb
or
icebp
addb
xchg
add
dec
pop
xor
pop
jnp
add
add
pusha
add
repz
push
aaa
or
fs
dec
mov
mov
testb
add
jo
sahf
andl
movb
add
jl
add
mov
js
daa
lahf
xchg
add
pop
jl
push
repz
add
add
push
jb
mov
jbe
mov
mov
jnp
add
js
or
js
insb
mov
into
lcall
jo
push
addr16
add
mov
add
mov
pop
movsl
aaa
sbb
mov
mov
add
hlt
add
mov
add
loop
jno
add
pop
data16
leave
iret
xchg
fdivrp
xchg
mov
dec
in
mov
mov
in
loope
lock
lret
repnz
fsubl
jmp
pop
rorl
cltd
fdivrl
shrl
inc
add
or
mov
mov
into
mov
fidivrs
add
add
mov
xor
add
add
addb
outsb
mov
xor
jne
testb
xor
pusha
add
push
add
aaa
adc
pop
inc
add
adc
add
shr
aad
in
pop
xchg
add
cmp
rolb
bound
mov
xor
incl
das
and
std
pop
aas
arpl
or
add
cmp
sbb
pop
inc
movsb
add
add
cmpl
xor
add
jl
xchg
jae
add
pop
setno
push
add
dec
int3
rolb
icebp
jmp
test
bound
mov
pop
or
add
movsb
add
out
gs
adc
cmpsb
add
add
push
add
lcall
add
rolb
push
add
cwtl
outsb
imul
test
add
push
push
add
mov
pop
insb
jnp
jecxz
add
lds
push
add
je
xchg
icebp
nop
add
rolb
mov
ja
add
add
mov
sahf
repnz
add
pop
xchg
fs
cwtl
or
add
mov
xchg
add
add
filds
in
test
add
pop
jno
mov
add
mov
clc
jp
add
sub
ret
push
test
or
cmp
rorl
movsl
jmp
incl
add
dec
movb
xchg
adc
mov
outsl
aas
jge
cmpsb
add
rolb
or
cs
add
fldl
stc
xor
add
idivl
fidivrs
add
add
add
stos
mov
add
add
out
enter
outsb
mov
add
cmpsb
add
add
addr16
adc
add
add
add
in
xchg
and
addl
insl
mov
rolb
add
add
add
xor
inc
movb
add
lahf
mov
mov
pop
lods
mov
pop
outsl
jmp
add
add
lret
dec
push
add
out
addl
mov
mov
add
cltd
shll
into
lods
rcrl
add
push
add
inc
add
cmp
jmp
cld
cld
outsb
xor
fsincos
mov
add
add
in
adc
pop
out
aad
mov
hlt
add
mov
add
add
aaa
xchg
std
adc
pop
orl
sbb
add
add
add
mov
clc
scas
iret
xor
in
push
mov
lock
in
lret
bound
mov
lea
add
and
lahf
fimull
mov
data16
add
xchg
dec
xlat
dec
ss
addb
pushf
push
out
mov
add
pusha
add
add
add
add
add
test
push
add
add
add
rolb
sti
add
mov
add
add
add
push
add
sbb
ja
insb
jb
or
mov
test
iret
sub
jl
testb
orl
pop
dec
jecxz
lret
lcall
stos
lahf
pop
pop
jns
fcmovnu
push
add
sbb
bswap
mov
sahf
pop
jns
add
fcmovbe
inc
ret
lods
flds
add
add
add
addb
add
add
out
bound
mov
decb
push
add
testb
lds
test
add
arpl
mov
rorl
mov
add
add
leave
movsb
add
divl
scas
xor
or
add
cmp
lock
mov
add
fnstcw
hlt
add
mov
sti
xor
aam
dec
cmp
in
push
add
dec
add
adc
mov
or
add
add
and
mov
imul
call
xchg
add
push
add
push
icebp
and
xchg
bound
mov
not
inc
add
add
push
xchg
add
and
mov
fcoml
jp
in
add
add
fwait
out
movb
ljmp
call
or
add
loope
loope
add
int
push
js
push
add
mov
testb
xor
jge
and
sbb
rolb
enter
or
mov
mov
mov
add
and
push
add
popl
lea
add
add
lods
xchg
cmp
mov
lcall
ret
xchg
outsl
add
add
jae
or
imul
mov
add
add
add
mov
add
pop
xchg
repz
cli
testb
push
add
cmp
add
add
std
xchg
stos
fwait
mov
add
das
testb
mov
add
add
rolb
nop
add
mov
insl
test
inc
shll
sahf
es
dec
add
adc
popf
push
sub
ficomps
cs
add
sbb
imul
add
add
pop
inc
add
lahf
push
arpl
mov
add
inc
add
add
add
xchg
push
les
mov
pop
dec
add
mov
ret
dec
testl
sub
add
add
cmp
mov
cmp
fwait
pop
mov
push
icebp
cmp
add
fcomps
test
pushf
add
adc
int
int
cmpl
loop
add
fists
rcrl
dec
mov
add
add
push
pop
jmp
cmp
push
add
add
add
add
add
xor
add
add
push
add
add
ret
add
ljmp
sub
add
xor
imul
dec
rolb
add
add
inc
test
and
add
les
add
xlat
data16
add
add
mov
fcoml
adc
inc
add
add
dec
icebp
rolb
enter
imul
add
add
add
add
es
jl
add
add
data16
add
cmp
xchg
aaa
movb
mov
pop
sbb
mov
addr16
jmp
jmp
add
into
inc
add
push
mov
or
das
adc
cli
insb
jge
add
add
shrl
sbb
add
std
je
insb
mov
movl
mov
or
and
add
mov
sub
mov
push
add
push
movb
std
aaa
sbb
push
add
das
dec
sub
add
cmp
cli
cltd
mov
fisubrs
lock
or
jae
hlt
add
add
add
sub
scas
adc
dec
pop
inc
add
add
and
stc
outsb
in
dec
rolb
add
jbe
rolb
fisttpll
xchg
add
add
mov
inc
icebp
rolb
mov
sub
inc
push
add
movsb
add
mov
pop
iret
sub
data16
add
fldpi
sahf
dec
mov
rolb
xor
add
ja
jo
jns
ret
add
lcall
nop
add
add
mov
add
mov
mov
mov
xchg
addb
push
sub
xor
add
push
rolb
popa
aaa
pop
testb
mov
dec
fdivs
sub
pop
or
add
inc
ljmp
pushf
les
test
adc
add
ja
fidivrs
sti
lret
add
movsb
add
add
dec
inc
add
add
push
add
add
jbe
cmc
rolb
or
add
add
add
add
sahf
imul
lock
sub
sub
add
js
add
lret
xor
mov
pop
push
add
add
add
add
enter
mov
rolb
add
clc
ret
movb
inc
add
mov
add
add
lea
add
stc
adc
rcll
add
cmp
xor
mov
aas
into
mov
ds
add
add
test
adc
or
mov
push
xor
inc
add
add
add
dec
dec
nop
add
jecxz
push
dec
mov
ret
mov
add
out
icebp
jne
jp
add
aam
dec
nop
add
addb
sub
add
push
jmp
int3
sbb
sbb
sub
add
xchg
lahf
pop
mov
pop
in
mov
push
add
push
jge
adc
arpl
test
jno
pop
or
call
add
xlat
and
add
mov
add
loopne
nop
add
add
mov
pushf
repz
fcmovnbe
add
mov
pop
stc
lcall
and
mov
xchg
icebp
or
leave
jle
and
add
add
add
movsl
adc
push
cli
push
add
mov
add
les
lds
mov
fsubl
pop
xor
xchg
adc
xor
push
mov
and
out
jl
sub
pop
imul
add
mov
test
mov
mov
add
mov
jle
pushf
mov
add
pusha
add
add
les
sub
add
and
mov
adc
xchg
add
jb
mov
leave
fnsave
jecxz
gs
out
into
lds
adc
xchg
mov
sub
mov
inc
add
or
add
aad
add
jb
mov
int3
fprem1
pushf
cmpl
or
data16
loopne
xchg
add
add
lods
imul
lahf
bound
mov
add
add
jge
dec
js
add
aad
add
mov
add
inc
sahf
imul
repnz
mov
or
ret
rcl
add
mov
add
mov
xorl
filds
mov
xor
add
mov
xchg
add
add
cmp
add
pop
gs
add
testb
add
imul
inc
add
stc
movb
sahf
jecxz
jns
mov
imul
loope
dec
sub
shll
mov
xchg
add
jge
outsb
or
jnp
add
testb
pop
or
mov
jg
out
sub
xchg
add
add
mov
out
mov
stos
out
push
lods
add
mov
pop
and
mov
xor
cmp
jecxz
cmpsb
add
push
data16
orl
lods
pop
push
adc
clc
mov
and
mov
add
sbb
nop
add
cmp
pop
cli
inc
add
repnz
jne
add
cltd
jecxz
xchg
adc
movsl
mov
movb
lods
pop
adc
cmp
add
and
jecxz
add
mov
add
add
inc
push
dec
fmuls
dec
push
add
mov
adc
add
sbb
mov
add
and
data16
push
outsl
mov
adc
repnz
mov
adc
call
lahf
hlt
add
add
aad
add
inc
add
xor
pop
sub
pop
out
and
jmp
insb
incb
sbb
das
jnp
mov
loope
mov
inc
mov
sbb
xchg
mov
add
lcall
add
add
std
mov
or
add
jecxz
push
jge
adc
cli
enter
and
mov
add
pop
push
lock
movsb
add
test
sbb
pop
sbb
fcomi
push
add
pop
or
sahf
and
add
dec
or
push
add
movsl
nop
add
lds
inc
in
jo
rolb
cmp
add
cmpsl
adc
ja
dec
stc
in
or
sub
mov
push
add
push
insb
adc
movsl
inc
lock
ljmp
cmp
add
ss
sub
jge
push
add
enter
into
cmp
or
adc
add
icebp
shll
mov
mov
pop
call
stc
data16
pop
sbb
lret
fdivrl
push
je
imul
add
add
xchg
scas
into
cmp
add
popa
fwait
push
xlat
testb
add
mov
rolb
add
add
add
sub
add
fldl
mov
add
fstpt
jno
jmp
aas
cmp
push
push
xor
in
mov
popa
cmp
scas
out
lret
cmpsb
add
adc
imul
add
xor
mov
push
daa
xor
aas
popf
cmpl
push
bound
mov
add
mov
cmp
add
add
mov
in
push
sbb
or
imul
fwait
lods
das
rorl
add
jecxz
add
add
pop
xchg
add
add
std
push
add
test
lea
bound
mov
add
add
add
fsub
add
add
dec
jns
push
movb
jns
add
add
push
add
add
movsl
movsl
repz
std
testb
add
add
add
cmp
jg
mov
add
ja
and
cmc
inc
cmp
mov
adc
ret
ficomps
decl
cli
jmp
add
lds
pop
ds
xchg
pop
in
jae
mov
xchg
std
hlt
add
add
xlat
mov
hlt
add
imul
add
mov
cmp
add
mov
addb
adc
mov
add
or
jg
inc
add
sti
repnz
add
xor
add
imul
push
add
add
add
xor
imul
jg
jbe
push
add
pop
sbb
add
frstor
rolb
cmp
adc
or
cmpsl
sub
dec
mov
add
mov
in
out
ret
xchg
add
mov
orl
cmpsb
add
pushf
ret
out
faddl
mov
stc
jns
cmp
xchg
xchg
add
repz
loopne
add
aad
int3
dec
enter
ljmp
mov
iret
out
lods
sub
pusha
add
lahf
jmp
out
add
imul
int
jo
lods
fistpl
add
aas
clc
rolb
mov
jg
push
inc
add
add
addr16
ljmp
add
testb
mull
mov
add
add
mov
rolb
add
mov
mov
push
add
fisubrl
sbb
add
imul
cmc
inc
add
xlat
push
mov
mov
stos
sub
insb
jp
sbb
add
cwtl
into
cmc
fstps
cmc
add
cmp
add
jo
popf
aaa
aas
out
cmc
inc
inc
mov
add
test
stc
les
xchg
add
pop
or
add
xchg
add
add
bound
mov
jno
add
add
jb
clc
add
pop
jl
stos
xchg
jb
mov
jo
mov
and
rcll
mov
sub
scas
sti
sti
in
and
fldl2t
movsb
add
xchg
mov
cmc
pop
pop
mov
imul
add
popa
fimuls
mov
pop
xchg
add
add
mov
pop
and
dec
sbb
cmpsb
add
xchg
in
cli
pop
movsb
add
call
in
add
add
je
loope
and
adc
ss
add
add
xchg
pop
rolb
jb
jns
cld
addb
cmpsb
add
push
aas
pop
jg
xchg
out
icebp
leave
jo
dec
xor
add
sahf
push
xor
into
mov
arpl
add
push
pop
out
movsl
mov
shl
fnstenv
pop
inc
sbb
add
push
aas
push
add
add
mov
icebp
cwtl
sbb
jmp
add
insl
and
cmp
daa
loop
sahf
cs
cmp
lea
add
pop
push
ret
in
push
add
ljmp
fstpl
testb
xchg
adc
add
sahf
pop
add
hlt
add
add
cmc
xor
data16
add
add
lret
test
or
loopne
mov
dec
fcoms
add
add
pusha
add
jmp
add
jl
push
xor
mov
pop
or
inc
repnz
aaa
sub
add
add
lcall
sub
cmp
out
rolb
and
mov
bound
mov
movsb
add
orl
or
dec
and
mov
add
pop
jb,pn
add
addl
mov
push
jae
add
add
adc
push
loopne
sub
add
mov
and
sbb
inc
add
xlat
add
loope
pusha
add
data16
pop
push
add
aad
stos
gs
fiaddl
add
xor
arpl
clc
pop
push
add
add
inc
add
mov
jae
out
add
clc
adc
and
mov
or
push
mov
add
add
lret
movb
daa
push
pop
pop
popa
dec
enter
add
push
or
inc
add
mov
lock
pop
repz
stc
pop
daa
out
add
incl
cmp
movsl
mov
jno
pop
mov
push
add
rolb
inc
add
movb
clc
cmpsl
xchg
out
push
popl
jnp
add
addb
add
addb
add
add
cmpl
sbb
add
mov
icebp
xchg
clc
pop
mov
idivl
add
add
pop
fs
add
dec
xor
inc
add
fisubrs
testb
rcr
add
mov
adc
and
mov
push
add
jo
ror
push
test
in
add
add
aad
int
js
cmp
pop
int
mov
testb
sbb
sbb
loope
out
int3
jno
rolb
loope
mov
out
repnz
add
mov
add
add
out
insl
ret
jmp
add
cmpsb
add
mov
test
rolb
mov
mov
cmc
and
add
popf
pusha
add
jg
jnp
add
aaa
jo
out
jnp
lods
adc
pop
sbb
hlt
add
add
rolb
add
lret
pusha
add
inc
add
add
sbb
dec
int3
fnstsw
lods
and
pop
push
add
add
push
add
add
add
add
mov
add
mov
xchg
outsb
hlt
add
add
jns
add
add
sahf
sub
push
add
jl
adc
xchg
movb
mov
roll
add
call
mov
les
scas
cmp
add
cltd
data16
sbb
ret
bound
mov
addr16
sub
fisubrs
pop
imul
pusha
add
cmp
das
test
mov
testb
ja
add
jmp
cmp
ds
sbb
in
push
push
repnz
cli
pop
frstor
dec
addr16
jo
mov
or
add
cmpsl
test
push
pop
and
mov
add
out
in
dec
js
pop
cld
out
lret
add
repnz
mov
adc
add
mov
sahf
cwtl
lods
xor
ss
add
insb
add
mov
add
xlat
jns
add
mov
add
push
je
adc
aam
jb
clc
and
mov
cs
dec
sbb
mov
or
pop
sbb
inc
jb
or
scas
ja
xor
add
fmull
addr16
add
mov
std
jecxz
sub
test
xor
jnp
das
sbb
push
add
mov
sbb
mov
cmpsb
add
inc
add
add
jb
fwait
or
mov
add
xor
sub
adc
cmp
dec
add
mov
pop
and
loopne
lods
xor
adc
push
add
add
add
dec
lds
in
repnz
lahf
out
aam
outsb
in
push
push
hlt
add
sti
mov
xor
add
ja
insb
push
mov
inc
add
add
add
adc
mov
inc
mov
add
mov
xor
outsb
cmc
lods
shl
add
fdivrs
add
into
adc
add
jmp
mov
pop
xchg
out
or
cmp
sub
add
fiadds
mov
xchg
leave
jp
sub
rcrl
lahf
mov
inc
add
add
call
mov
add
jno
add
shll
add
add
addb
or
mov
add
jl
jg
or
les
mov
stos
add
jle
ja
roll
cmp
add
movsl
adc
pop
pop
sub
pop
add
mov
add
mov
add
add
mov
cld
push
cli
stc
mov
xor
icebp
call
jge
add
jmp
data16
popf
sbb
js
jge
jno
jnp
or
rcrl
inc
cltd
adc
mov
add
pushl
sub
in
jle
add
stos
stos
stos
jp
addb
mov
jo
int3
pop
iret
sub
mov
adc
jo
insb
xor
data16
imul
mov
mull
dec
dec
xchg
add
cmp
add
add
mov
loope
fwait
inc
and
xor
addr16
add
mov
out
lret
bound
mov
pop
mov
cmpsl
sub
mov
sub
pop
mov
pop
insl
test
xor
add
add
add
cli
sarl
rolb
mov
fistps
add
pushf
into
ret
hlt
add
out
fwait
out
out
or
mov
add
testl
gs
daa
mov
pop
loop
popa
add
pushf
push
add
push
adc
mov
dec
repz
add
add
sahf
mov
and
add
addb
add
add
adc
xchg
mov
leave
mov
add
add
mov
rolb
in
in
add
or
pop
mov
add
mov
orl
adc
add
add
movb
aaa
mov
add
push
add
cmpsl
jmp
add
push
mov
xchg
add
pop
mov
aam
outsb
add
clc
adc
pop
addr16
insl
add
push
add
or
push
add
out
dec
rorl
or
fs
pop
add
aad
mov
insl
sbb
add
leave
mov
fcomps
jg,pt
mov
repz
xchg
fmulp
mov
mov
add
add
xchg
inc
add
lret
popf
inc
mov
mov
in
push
adc
dec
incl
dec
ret
push
add
ret
add
jmp
jecxz
fdiv
add
repnz
jnp
add
mov
sti
or
add
pop
imul
fbstp
inc
add
idivl
and
clc
lds
add
data16
adc
dec
call
add
sub
repz
or
cmp
add
add
or
movsb
add
pop
xchg
adc
dec
add
sbb
es
add
stos
lret
out
pause
add
add
pop
movsl
movb
adc
add
mov
jns
arpl
les
sub
add
mov
jecxz
jno
das
addl
add
push
pop
lea
xchg
mov
aad
stos
xlat
lret
mov
addb
add
inc
mov
bound
mov
add
sar
add
in
aaa
dec
mov
add
adc
call
dec
cwtl
pop
mov
sub
sbb
repz
add
add
fisubl
add
mov
inc
push
add
add
xor
leave
xchg
pop
add
mov
inc
add
jge
add
xchg
adc
adc
pop
push
add
fwait
inc
add
fimuls
and
pop
insl
adc
push
or
push
add
mov
imul
movb
push
xor
cmc
xor
inc
jp
data16
cmp
sahf
xchg
sbb
js
pop
ds
dec
call
add
sub
call
add
add
fadds
or
arpl
mov
xchg
cmp
add
add
add
sub
mov
add
add
jo
and
mov
add
add
rolb
fstl
jmp
lcall
pop
xchg
push
pop
lcall
neg
inc
testb
mov
stos
aas
cmp
sbb
add
push
mov
lea
add
pop
test
mov
in
mov
test
pop
repnz
insb
addb
add
jbe
adc
add
add
add
add
mov
mov
into
jg
xor
lret
push
add
stc
shl
jbe
inc
add
add
mov
stos
adc
mov
add
sbb
add
mull
out
jle
mov
lods
les
je
testb
les
jnp
add
pusha
add
add
add
add
outsl
loope
add
sub
dec
addb
jecxz
out
int3
pop
pop
jle
pop
sbb
sarl
mov
mov
sti
sub
push
add
cmp
and
mov
lods
inc
cs
mov
add
push
or
arpl
xor
and
mov
popa
mov
add
xlat
insb
cli
and
lret
xchg
fnstsw
mov
add
push
out
das
ret
cltd
mov
data16
fisttpl
push
add
sub
aaa
xchg
add
testb
lret
dec
sbb
add
pop
out
lock
add
mov
sahf
pop
xchg
test
dec
jno
add
pop
sbb
add
mov
popa
adc
xchg
push
mov
jmp
sbb
cmp
xor
add
xchg
pop
fnclex
add
pop
fnstenv
pop
addr16
xchg
add
and
push
addl
mov
fwait
pop
mov
inc
js
add
add
jne
push
hlt
add
mov
add
mov
push
jge
add
mov
popf
out
mov
and
into
ret
repnz
sub
mov
add
and
mov
pop
adc
add
push
stos
xor
testb
js
leave
mov
add
mov
add
mov
lods
sahf
mov
int3
mov
push
add
add
mov
add
mov
addb
or
mov
add
add
jmp
add
ret
jno
add
add
cmp
xor
dec
and
mov
lock
add
mov
addb
add
sarl
popf
mov
rolb
mov
ret
pop
mov
cmp
fwait
stos
into
in
nop
add
or
push
add
je
clc
loope
and
mov
arpl
add
outsb
out
mov
inc
aaa
inc
add
mov
mov
icebp
mov
fstpl
add
sub
mov
sti
lods
cmpsl
stc
out
loopne
mov
inc
mov
jbe
sahf
sbb
fisttps
cmp
add
push
movsl
imul
add
mov
cmp
mov
adc
subl
fisttpl
test
les
mov
add
or
add
pop
jmp
dec
mov
add
bound
mov
iret
inc
mov
mov
inc
pushf
or
lret
cmp
or
and
mov
add
scas
add
add
cmovns
clc
js
add
pop
jl
sub
or
add
rolb
mov
sub
cmpsb
add
add
push
xor
pop
push
add
mov
xchg
adc
repz
in
push
add
daa
mov
cmp
add
add
nop
add
add
das
xchg
outsl
xor
dec
mov
add
add
mov
loop
mov
add
inc
movb
js
out
add
inc
add
fdivrs
out
cmp
cwtl
mov
fdivs
dec
cmp
sbb
out
out
pop
xor
add
lds
in
add
repz
call
in
xorl
inc
add
xchg
stc
les
mov
jnp
and
mov
cli
das
cltd
rolb
repnz
aas
lret
add
cmpl
add
add
add
add
ret
test
mull
add
data16
add
or
add
pushf
push
mov
lret
ja
xor
movsb
add
sub
dec
mov
add
add
add
add
add
add
rcrl
pusha
add
sbb
test
adc
in
xchg
and
fwait
or
push
cli
addb
jns
add
pop
xor
add
xor
pop
mull
and
clc
cmp
pushf
icebp
and
push
add
mov
xor
add
add
push
shll
xlat
icebp
js
push
cltd
push
add
pop
into
mov
mov
cmp
adc
xor
push
add
pop
xchg
add
lods
mov
fidivrl
xlat
xchg
jl
das
fisubl
and
sbb
add
add
rcll
pop
push
add
call
pushf
sub
loop
cmp
out
test
cmp
repnz
push
add
bound
mov
adc
mov
add
add
int
add
cmp
jne
mov
mov
jne
add
dec
fcmovnu
cwtl
pop
sub
lock
or
jecxz
gs
sbb
add
add
and
mov
mov
add
sub
data16
pop
or
sub
mov
aam
mov
out
sbb
add
ret
movb
cmp
add
jb
fs
add
add
dec
rolb
push
add
loope
lret
xchg
cmp
mov
mov
les
mov
add
lods
jecxz
fisubl
pop
ja
imul
and
jns
add
std
cmp
add
add
adc
imul
xor
push
cmp
push
add
add
mov
lcall
jae
testb
add
mov
push
jp
add
jbe
jb
push
fisubrl
push
dec
rolb
lock
mov
add
add
aaa
mov
add
xchg
add
mov
cmp
addr16
add
out
mov
pop
hlt
add
in
push
stos
dec
movntq
out
dec
leave
mov
cmp
sub
cwtl
shl
sub
xchg
add
add
fcoml
and
mov
push
xchg
js
mov
mov
mov
jb
mov
mov
cld
fnstcw
add
dec
jno
xchg
add
push
add
aaa
or
add
movsl
push
add
cmp
add
das
mov
inc
add
add
add
push
add
repz
jl
sub
lock
sahf
imul
movsl
imul
add
test
pop
cld
pop
arpl
shr
or
and
insl
loopne
xor
push
add
add
add
lea
add
sub
mov
jae
cmp
add
lods
aam
adc
aas
lods
icebp
pop
stc
push
add
add
add
add
cmp
jl
rcrl
cmp
xor
cltd
push
add
pop
push
add
push
push
add
pushf
call
aas
pop
je
and
add
xchg
add
xchg
add
sbb
add
in
xor
and
int
or
add
rolb
mov
mov
dec
aam
sahf
popl
push
aas
cltd
out
sub
inc
add
shll
add
jp
aas
imul
add
dec
mov
in
adc
or
into
daa
xchg
addb
scas
popa
sub
insb
cmp
dec
adc
push
rolb
ffreep
push
movsb
add
push
add
decl
mov
add
add
sub
sahf
scas
es
vsqrtsd
data16
aaa
das
add
mov
mov
sbb
add
add
add
xor
add
pushf
xchg
in
mov
add
lea
add
add
add
sub
add
add
add
or
int3
xchg
mov
subl
and
rcl
scas
or
sbbl
stos
jae
add
outsb
add
mov
jge
inc
add
data16
rolb
lret
sbb
ds
sub
add
add
add
add
add
add
add
add
rcll
add
inc
repz
scas
fcmovne
push
add
int3
pop
push
arpl
mov
arpl
les
or
lock
lret
mov
inc
inc
les
repz
inc
xchg
call
inc
mov
popa
call
add
rolb
int
add
xchg
xchg
dec
mov
xchg
pop
mov
inc
add
add
add
inc
add
xchg
add
mov
nop
add
lds
sbb
or
add
jl
or
mov
push
lock
add
add
add
dec
add
add
add
in
out
push
inc
add
cmp
add
push
add
out
fwait
dec
aam
mov
push
mov
insb
sub
add
add
mov
add
stos
push
mov
addb
mov
add
mov
or
add
add
lret
add
mov
add
orl
mov
add
add
sti
and
or
add
sub
jge
xor
fwait
iret
or
stc
sub
add
cmc
add
ds
mov
xor
add
jl
das
das
xchg
add
loopne
in
inc
add
pop
iret
sub
adc
or
mov
das
loop
xchg
mov
push
add
daa
xor
imul
lds
and
add
pop
std
jl
mov
add
xor
add
cmp
jp
lcall
sbb
mov
stos
fdivl
adc
jl
lods
xor
mov
in
lret
add
shll
add
push
leave
sbb
stos
mov
pushl
add
or
leave
mov
add
sub
mov
dec
in
test
add
mov
xchg
outsb
pop
cmp
add
lcall
nop
add
aaa
dec
xchg
out
inc
add
mov
dec
mov
add
cmp
fldenv
xor
mov
add
inc
loope
add
add
add
add
and
jmp
add
add
hlt
add
jnp
add
mov
dec
ret
int3
pop
mov
and
scas
scas
or
daa
ret
ret
cmp
add
add
add
add
push
add
in
fnstsw
popa
imul
add
adc
insb
pop
cmpsb
add
add
mov
xor
inc
add
push
add
add
add
lods
xor
dec
cltd
dec
mov
pop
mov
cmc
jae
mov
scas
inc
cmp
into
ja
jmp
push
add
mov
in
leave
or
repz
add
loopne
pop
adc
push
icebp
sub
cmp
add
leave
push
lret
and
addb
add
inc
push
add
add
jns
sub
lods
loope
xor
mov
xchg
lds
repnz
pushf
leave
push
add
push
add
push
rolb
xchg
cltd
pop
stos
pusha
add
mov
sub
or
jecxz
or
add
add
add
add
add
rolb
lret
out
pop
inc
xchg
or
out
dec
xchg
imul
xchg
add
add
sub
or
fsubr
dec
lods
add
push
push
fldl
push
jno
add
add
add
xlat
imul
add
mov
add
test
sti
nop
add
sahf
mov
sahf
push
add
add
hlt
add
ljmp
mov
cld
cmc
sbb
add
pop
jb
insl
jmp
enter
pop
push
add
loope
rolb
movsl
mov
pop
sti
aas
sub
and
mov
dec
inc
jne
cmp
add
jno
add
jbe
jne
jbe
cmpsl
cltd
fs
add
rolb
xchg
add
outsl
mov
add
add
inc
and
pop
or
add
lods
loopne
add
mov
shll
cmp
add
cmpl
mov
add
in
lock
add
push
add
test
ds
or
push
add
jmp
ja
add
jns,pn
jg
inc
add
pop
std
scas
arpl
daa
add
aad
repnz
cmpsb
add
inc
add
add
cltd
mov
add
daa
data16
add
add
test
inc
push
sub
testb
add
xchg
jge
push
add
cltd
cmc
bound
mov
addr16
inc
adc
dec
cmp
xchg
add
mov
fisubrl
and
addr16
fnstcw
test
test
jecxz
dec
xor
pushf
pushf
xchg
add
leave
xchg
adc
aam
jp
rolb
push
jp
dec
xchg
outsb
clc
mov
mov
sbbl
sub
xchg
add
test
adc
call
lret
jmp
sub
push
dec
and
mov
mov
es
mov
imul
sbb
add
add
xor
dec
cs
in
test
xor
jo
mov
add
jp
dec
lock
loopne
xlat
push
cmp
xor
in
icebp
pop
rolb
xchg
mov
fnsave
mov
xchg
cmp
and
mov
add
in
add
pop
sbb
sbb
add
sub
add
mov
mov
aas
addr16
add
mov
fwait
xchg
inc
cs
iret
dec
or
or
mov
into
or
dec
inc
jb
adc
ja
fwait
loopne
int3
xchg
push
push
adc
add
stos
je
inc
and
add
add
nop
add
add
add
iret
imul
hlt
add
sub
leave
push
add
xor
or
enter
movsb
add
pop
sub
cmp
xor
out
addb
inc
mov
push
add
inc
gs
jns
insl
add
mov
add
add
xchg
add
add
nop
add
mov
out
cwtl
cmp
adc
je
or
pushf
cmp
push
std
mov
dec
mov
je
outsl
mov
jge
add
xchg
pop
and
add
jge
sub
add
mov
lcall
mov
mov
scas
movsb
add
ljmp
pop
dec
jg
cmp
mov
inc
mov
jnp
aaa
icebp
popf
in
add
mov
or
xor
loopne
pop
mov
add
fnstsw
mov
sub
es
inc
add
inc
add
add
stos
adc
loopne
std
arpl
test
mov
inc
add
movsb
add
sbb
mov
cli
mov
or
incb
add
mov
add
or
lods
xchg
xchg
and
outsl
and
mov
xor
xchg
add
inc
das
push
xchg
leave
dec
adc
or
mov
inc
xchg
dec
sbb
nop
add
in
fimuls
insl
jge
xchg
add
ljmp
add
mov
pop
inc
into
dec
repz
out
mov
sets
adc
push
add
add
inc
add
jp
sub
mov
mov
stos
scas
dec
push
push
add
mov
cmp
inc
fnstenv
mov
jmp
add
push
insl
mov
pop
push
add
data16
bswap
mov
mov
sti
cmp
add
pop
push
adcl
bound
mov
sahf
jne
xor
cmp
xor
push
add
add
cli
shrl
sub
js
outsl
xchg
lods
into
and
mov
add
mov
mov
fs
xchg
cmp
test
rcll
mov
add
add
jbe
rolb
add
add
stos
xor
or
das
add
mov
in
add
cmpsl
mov
hlt
add
add
add
fdivl
bound
mov
mull
fisubrl
pop
mov
cmp
add
add
testb
mov
add
add
add
cmp
add
push
mov
mov
xchg
mov
lret
add
xor
popl
add
mov
add
add
fcoml
add
push
add
pop
cmpsb
add
scas
mov
mov
mov
add
add
in
pusha
add
icebp
arpl
fiadds
add
add
dec
jge
mov
fdiv
push
mov
js
cmc
xor
inc
push
add
ret
sub
cwtl
mov
mov
add
adc
jo
addr16
xchg
jle
mov
lret
ret
or
pop
mov
xchg
add
jae
addr16
scas
rolb
jp
lret
test
add
mov
cmp
insl
inc
add
jle
pop
popa
pop
dec
pop
std
ljmp
add
outsl
or
in
or
add
add
pop
out
or
cwtl
movsl
rolb
jb
scas
loopne
xchg
out
stos
ja
push
lea
push
add
jp
cmp
mov
in
xor
adc
mov
ficomps
add
add
rolb
std
std
or
mov
pop
push
pop
lret
push
add
lret
adc
movb
jecxz
cmp
mov
lret
aam
in
xor
jo
adc
add
rolb
popl
add
lcall
add
mov
mov
xchg
insl
and
daa
pop
sub
add
and
or
clc
dec
add
jmp
add
mov
add
nop
add
aas
xchg
add
add
jmp
inc
add
mov
dec
or
adc
mov
xchg
pop
mov
cli
push
fistl
add
add
addb
push
add
test
fwait
and
add
mov
mov
jg
pop
push
add
add
add
inc
pop
xor
add
aas
addr16
enter
cmp
dec
cwtl
addr16
add
jb
pop
sub
mov
push
clc
mov
clc
add
cli
iret
repnz
sub
adc
imul
imul
add
mov
xor
enter
add
add
add
les
movb
adc
mov
adcl
test
imul
add
out
mov
add
or
cltd
inc
add
add
lret
rcll
pop
addb
mov
pusha
add
mov
or
or
add
add
fldl
cld
add
mov
push
adcl
push
pop
inc
pop
sbb
jecxz
add
push
add
leave
into
rolb
mov
mov
ljmp
add
mov
xor
mov
xor
add
adc
push
add
xchg
and
mov
add
add
mov
mov
add
add
inc
add
movsb
add
add
repnz
xchg
fidivrl
add
movsb
add
mov
xor
add
aas
mov
ljmp
stos
sub
insl
or
arpl
dec
pop
lods
int3
mov
lret
adc
mov
lret
add
sub
enter
add
add
pop
stc
xchg
xchg
shll
mov
out
mov
dec
call
cmc
add
add
rolb
add
jae
bound
mov
fisttpll
and
iret
xor
add
mov
jbe
enter
mov
daa
add
dec
adc
fistps
ficoml
adc
jb
cmp
dec
push
add
arpl
sbb
add
lea
loop
jno
ffreep
popf
xor
adc
push
add
add
sub
pop
dec
jmp
inc
add
test
inc
add
stos
xchg
add
fisubl
add
rolb
add
fidivrl
out
sbb
test
mov
or
xchg
popf
in
mov
std
jnp
dec
jge
or
mov
add
push
add
ret
add
or
add
test
pusha
add
add
add
daa
dec
xor
add
jecxz
pop
out
xchg
lret
lret
les
mov
xor
cmp
jp
xchg
mov
add
lods
addr16
rolb
aad
push
add
cmp
add
imul
add
mov
loop
fstpl
popa
rolb
popf
dec
rolb
rolb
in
add
add
loop
mov
mov
je
xor
das
mov
jecxz
std
pop
pushf
cli
mov
push
loope
add
mov
add
mov
idivl
cld
mov
stc
push
add
leave
and
mov
xchg
add
add
cmp
xchg
add
mov
in
test
sub
ret
fwait
xchg
add
add
iret
xlat
dec
pop
mov
mov
add
add
daa
xor
xchg
add
mov
dec
add
mov
pop
test
add
lods
push
pop
pop
sahf
lods
ljmp
add
cmp
outsl
push
mov
mov
aaa
mov
push
add
dec
push
iret
rolb
cmp
nop
add
sbb
test
into
setbe
testb
fsubrl
mov
xchg
add
add
js
cmp
movb
dec
in
fisttpl
push
lret
add
mov
mov
xor
xchg
add
mov
add
jg
pop
ja
fistl
addr16
add
inc
ds
das
mov
aam
jle
int
push
test
add
ret
or
add
mov
jb
jae
push
inc
add
cltd
test
outsb
cmp
push
sbb
push
add
xchg
add
and
int
adc
ljmp
std
sub
sbb
add
or
testb
add
aaa
out
mov
add
pop
push
add
mov
add
popf
leave
xor
mov
mov
ljmp
out
sub
add
movsb
add
push
inc
mov
cmp
add
add
add
add
add
add
jo
xchg
inc
add
into
fistpl
add
pop
daa
pusha
add
testl
lock
add
add
cltd
and
add
and
mov
mov
add
pusha
add
aaa
or
and
add
mov
fmuls
add
mov
lcall
add
inc
add
mov
mov
mov
add
sub
add
les
movsl
in
sti
adc
cmp
add
aas
les
and
mov
jnp
in
xor
sbb
mov
push
insb
out
or
adc
sbb
and
out
bound
mov
lahf
xor
xchg
add
insl
sub
lcall
xchg
add
add
add
add
adc
mov
push
add
add
mov
into
cmp
add
add
mov
loope
mov
add
push
and
je
add
push
add
add
add
mov
push
add
or
pushf
pushf
fldenv
pop
push
adcl
fbstp
mov
sbb
add
push
xor
mov
pusha
add
pushf
fcoms
sarl
ret
add
mov
add
lock
lea
test
xchg
add
daa
mov
aas
nop
add
sbb
add
loope
mov
add
outsb
push
push
inc
add
mov
test
add
pop
and
add
mov
cmovb
mov
addb
push
add
int
mov
loop
sub
bound
mov
add
int
stos
xchg
add
mov
addb
add
addb
imul
add
mov
adc
inc
add
xor
add
and
mov
add
push
jno
out
push
mov
jp
jg
pop
movsl
data16
cmpsb
add
dec
mov
add
or
js
add
mov
jno
cmpsl
scas
icebp
aam
xchg
shll
xchg
add
add
sbb
add
dec
adc
sbb
add
fwait
push
faddl
aas
jbe
call
sbb
movsb
add
les
ja
mov
cwtl
push
add
add
add
imul
pusha
add
aaa
mov
pop
test
inc
add
adc
arpl
rolb
inc
push
add
scas
pop
xor
xchg
add
iret
jns
add
add
sti
imul
add
outsb
stos
pushf
aam
rolb
inc
rolb
push
add
add
jo
mov
add
lcall
mov
add
ret
aaa
pop
sti
out
and
fucomi
test
or
mov
add
addb
stos
and
add
ret
inc
push
imul
lods
push
sarl
sbb
imul
mov
js
test
add
mov
add
add
inc
add
mov
std
push
add
mov
add
add
jle
pop
add
cmpsb
add
fistpll
jns,pn
out
or
xchg
push
push
fwait
fs
add
add
add
dec
cmpsb
add
add
mov
add
cmc
pop
fdivl
mov
xor
mov
jne
add
iret
pop
pop
js
or
clc
test
sbb
xor
add
lods
outsb
inc
or
test
and
mov
mov
repnz
add
imul
add
imul
dec
or
add
add
fistpl
push
xor
and
popa
push
jmp
test
fsub
add
in
iret
leave
jae
sub
mov
add
add
mov
in
push
pop
add
mov
dec
scas
aas
fwait
popa
jb
add
mov
cmp
add
pop
arpl
add
mov
jg
gs
je
dec
push
pusha
add
add
mov
outsl
lret
cmp
mov
popf
push
icebp
add
mov
jg
add
sbb
pusha
add
out
jg
push
es
add
rorl
add
mov
add
pop
dec
inc
push
add
cmp
mov
add
fisubrs
push
add
addb
add
add
dec
add
mov
sbb
daa
sbb
add
mov
add
subl
int3
sahf
jno
or
add
adc
add
stos
and
mov
xchg
add
mov
je
movsl
fcomi
addb
mov
and
add
ja
and
addb
mov
addb
outsl
out
int3
roll
add
stc
imul
call
add
addb
xor
inc
mov
add
add
lahf
push
add
imul
aaa
add
mov
add
add
cmp
cltd
mov
mov
add
add
cs
xlat
pop
or
add
mov
mov
add
mov
aaa
jbe
lret
add
add
repnz
jl
add
leave
out
push
xchg
jp
popa
and
lahf
mov
jns
xchg
add
add
lock
add
cmc
mov
fisubrs
arpl
push
cs
mov
mov
push
jbe
popf
cltd
aas
or
jle
orl
inc
add
xchg
std
dec
jbe
insb
sbb
add
pop
pusha
add
movsb
add
xchg
add
xchg
std
inc
add
add
lods
iret
dec
fwait
add
add
mov
jp
dec
dec
ljmp
mov
add
rolb
fldl
add
jbe
and
add
cld
pop
pop
loop
cltd
inc
add
sbb
jg
cmp
add
mov
jle
and
js
sub
jp
add
add
or
mov
jp
add
rolb
and
sub
pop
movb
ret
jp
aas
stos
imul
lods
xor
pop
std
ret
add
cld
in
ret
or
jl
pusha
add
mov
add
je
test
add
ficoml
add
ja
add
ret
movsb
add
add
push
iret
push
add
mov
push
jmp
push
sbb
out
addb
lahf
cmp
movl
dec
and
in
jecxz
int
and
mov
aam
inc
add
mov
add
add
mov
add
or
outsl
mov
add
push
ja
mov
inc
add
pop
ret
outsl
pop
pusha
add
add
or
movb
xlat
insl
mov
rolb
mov
mov
ror
dec
repnz
dec
pop
lret
and
mov
mov
lcall
out
ja
into
add
mov
xchg
add
jae
add
and
mov
add
mov
push
add
inc
add
mov
sub
mov
pop
daa
sub
pop
add
jno
pop
xor
test
dec
push
add
mov
add
cmp
movsb
add
insb
jbe
in
ljmp
jmp
or
ret
fldl
xor
addl
rolb
and
add
repnz
mov
sbb
add
add
dec
sbb
add
adc
fadds
add
add
cli
inc
add
add
test
out
dec
hlt
add
add
add
add
enter
add
push
and
add
std
js
add
shrl
or
jb
sub
std
mov
imul
lcall
add
add
add
add
jo
addb
or
add
add
sub
dec
outsb
cmp
int
cmpsl
add
mov
pushf
mov
cmp
les
rcrl
inc
add
out
xor
mov
add
dec
sbb
mov
jno
lret
pop
adc
int3
testb
inc
pusha
add
dec
or
lcall
mov
xor
fstps
js
adc
loopne
jl
add
adc
cld
rolb
rolb
cwtl
dec
jnp
mov
add
insb
cli
ficoms
or
mov
jb
hlt
add
dec
pusha
add
pop
fsubl
test
adc
loope
xchg
pop
xor
cmp
add
mov
push
add
stos
mov
dec
in
jle
fnstenv
fmulp
push
add
add
fucomip
push
add
mov
jle
inc
add
pop
pusha
add
les
daa
addb
add
push
pop
xor
and
pop
pop
sti
frndint
sbb
dec
repnz
into
das
lds
pop
cmpsb
add
repz
add
cs
lret
xchg
pop
daa
repnz
inc
add
popf
roll
or
add
cmpsl
xor
add
push
add
add
add
sub
add
add
loop
jne
add
popa
push
out
add
add
mov
aas
arpl
or
add
sbb
inc
add
add
add
add
mov
aad
pop
adc
fidivl
rorl
icebp
pop
push
adc
xchg
add
loop
nop
add
add
add
fs
jae
call
mov
stos
cmc
ret
xor
outsl
xchg
add
mov
mov
test
add
notl
sbb
in
data16
add
sbb
mov
js
jmp
loopne
push
add
push
add
aaa
addr16
sarl
jg
fwait
jl
lock
add
sbb
dec
repz
add
add
add
sbb
pop
mov
sahf
rolb
push
add
out
push
in
inc
hlt
add
addr16
add
das
addb
sbb
sahf
dec
loopne
dec
push
add
movb
outsl
aas
add
add
rolb
fwait
imul
add
add
lret
int
js
movsb
add
adc
cmc
push
ja
dec
daa
push
add
add
add
into
add
int3
divl
push
int
or
mov
movsb
add
fsts
add
call
stos
les
dec
imul
add
or
add
add
leave
mov
shrl
inc
add
movsb
add
pusha
add
add
adc
rolb
and
fisubrl
je
lahf
imul
test
hlt
add
cmc
mov
add
out
cmp
jg
add
mov
ja
sbb
add
push
add
jno
sub
xor
cmc
mov
jns
dec
fldcw
pusha
add
add
add
cld
mov
loopne
mov
outsb
jle
sub
add
push
add
add
loope
sbb
xor
add
in
add
add
mov
stos
xchg
add
add
add
mov
out
mov
out
push
add
add
add
mov
les
sub
xchg
jp
add
add
mov
hlt
add
pop
loopne
lea
or
pusha
add
sarl
and
pop
scas
xchg
jmp
sub
mov
xchg
inc
ret
jp
sbb
test
dec
xor
mov
enter
add
add
mov
mov
mov
mov
or
adc
icebp
out
rcrl
clc
pop
in
cmovp
add
add
pop
aaa
mov
enter
add
pop
scas
jmp
add
mov
add
inc
lret
aas
mov
inc
add
push
add
add
cmpsl
sub
dec
xchg
add
in
loope
lahf
out
add
and
mov
mov
add
mov
add
jne
out
and
mov
fimuls
test
jnp
add
push
mov
lods
cltd
cmp
mov
add
add
or
mov
mov
testl
add
add
jbe
jl
add
popf
imul
add
shll
lret
add
xchg
add
mov
out
add
add
add
mov
cli
hlt
add
add
mov
add
add
pop
mov
ljmp
and
rolb
and
mov
pop
sub
fldenv
mov
add
add
add
add
xchg
sub
add
add
add
sahf
mov
int
adc
call
add
pop
jns
adc
mov
fsts
push
add
add
and
mov
and
and
mov
mov
push
add
repnz
orl
push
jno
add
stos
mov
ret
mov
adc
ja
xlat
addb
cmc
call
mov
xchg
add
pop
jg
add
lea
add
pop
mov
pop
rolb
inc
push
int3
pop
add
mov
in
data16
add
mov
cmp
das
movb
fcmovnb
xor
add
mov
add
fsts
adc
and
add
mov
pop
iret
xor
add
pop
mov
jns
mov
jbe
jbe
cs
jp
add
add
adc
stos
scas
repnz
add
add
hlt
add
insb
mov
mov
int
jg
dec
push
sub
xchg
clc
adc
inc
add
jo
mov
out
jns
add
shll
add
add
loopne
jp
cmp
add
bound
mov
mov
jge
popf
inc
add
mov
addb
add
add
add
mov
add
cld
stc
lock
mov
aas
pop
repz
add
mov
lret
jno
sub
add
and
cs
inc
add
add
mov
aas
dec
daa
mov
imul
mov
add
and
mov
add
or
jge
add
add
dec
out
hlt
add
pop
push
add
movsl
repnz
add
jno
xor
push
out
in
cmp
add
dec
mov
sbb
pop
jae
out
cmpsb
add
add
adc
rolb
inc
fldl
inc
add
add
push
add
sub
add
add
lea
test
hlt
add
add
and
mov
add
add
in
addb
test
pop
and
and
data16
loop
and
push
lret
add
mov
add
arpl
mov
loop
push
cltd
dec
out
hlt
add
add
pusha
add
mov
inc
add
les
fwait
jmp
out
add
jno
add
add
sub
add
scas
mov
dec
lods
and
mov
outsb
loope
jbe
push
add
inc
add
fwait
dec
dec
xchg
adc
or
add
add
add
ss
adc
add
pushf
add
mov
dec
sarl
mov
pop
mov
stos
scas
testb
add
push
add
das
push
add
add
add
fistpll
fdivrl
adc
jge
ret
cmp
loopne
mov
test
jp
mov
cmp
sbb
xchg
sbb
pop
adcl
cld
pop
pop
incl
jecxz
lods
jecxz
adc
testb
add
add
xchg
add
add
mov
add
and
mov
push
sbb
push
push
add
inc
cwtl
fwait
mov
adc
js
movsb
add
mov
out
cmp
je
insb
dec
lar
mov
hlt
add
rolb
jns
add
add
jp
jge
aaa
and
mov
loope
mov
push
or
add
inc
add
add
dec
outsl
mov
aam
xchg
test
scas
mov
push
push
add
aad
add
jg
push
cwtl
add
pop
imul
mov
or
mov
cmp
stc
jno
mov
pop
movsb
add
lods
mov
aam
sar
sub
push
push
test
xchg
xchg
mov
or
sarl
sub
mov
push
and
push
add
mov
add
add
sbb
add
rolb
or
mov
add
xchg
in
and
mov
mov
in
inc
jg
add
mov
add
add
adc
mov
and
mov
aaa
icebp
dec
test
cmp
insb
adc
cmpxchg
imul
cmpsb
add
adc
add
pop
data16
add
mov
popa
inc
push
add
sbb
adc
mov
add
add
adc
push
add
mov
pop
int3
inc
mov
fsts
adc
aam
ret
add
sbb
sub
sbb
mov
out
movb
add
dec
adc
dec
add
mov
and
push
lea
cwtl
push
add
add
mov
fstpt
pop
jge
pop
xchg
add
mov
xchg
add
fwait
pop
and
fadd
outsb
or
out
add
mov
add
cmpsb
add
fisttpll
add
mov
popa
jbe
push
xor
mov
push
inc
ffree
adc
add
push
add
add
sahf
std
xchg
push
cltd
jmp
faddl
fimuls
in
outsb
xchg
add
lods
mov
add
push
dec
or
xchg
jge
fistpl
add
inc
add
cmpsl
int
lea
add
add
inc
lock
xor
add
add
add
std
inc
out
mov
cli
mov
aam
push
and
mov
in
xor
sub
sbb
push
add
and
xlat
jg
sub
std
insb
shl
add
add
leave
sub
rolb
mov
pop
dec
adc
dec
push
add
mov
roll
or
pop
push
fidivs
into
inc
adc
add
mov
fsts
push
adc
add
add
xchg
or
xor
mov
lock
add
sbb
inc
add
add
and
mov
adc
add
add
mov
add
add
add
push
add
xlat
rolb
movsb
add
into
add
mov
cmp
add
xchg
dec
std
mov
ret
inc
push
add
shll
add
iret
push
add
jnp
dec
pop
das
scas
pushl
inc
add
jl
fdivrp
fmuls
arpl
add
test
popf
mov
mov
lret
rolb
adc
imul
xchg
or
push
add
mov
std
adc
dec
movsl
lret
pop
and
iret
add
mov
ds
lcall
movsl
xchg
add
add
dec
lret
cmp
cld
pusha
add
pop
pushf
out
pminsw
pop
pop
mov
lcall
cmpsl
adc
stc
push
add
mov
cmp
ljmp
scas
jl
in
sbb
xchg
push
sbb
fcmovne
repnz
pop
mov
xchg
add
mov
jle
or
add
add
xchg
fcompl
sbb
hlt
add
mov
adc
outsb
xchg
add
or
xchg
add
pop
and
fsubrs
push
add
mov
push
repnz
fwait
mov
aas
dec
ret
jo
inc
imul
mov
push
add
add
fistps
inc
add
add
lods
addb
repnz
mov
add
out
cmp
mov
jb
mov
push
dec
and
xchg
push
add
and
xlat
sti
xor
stos
jl
push
jb
push
push
push
add
mov
adc
in
or
pop
add
hlt
add
add
cs
xor
and
pusha
add
push
add
sbb
imul
mov
add
add
adc
sbb
fsts
pop
cmp
sub
hlt
add
fsubs
decl
dec
lret
lods
daa
in
cmpsl
and
mov
in
sub
cmp
jle
add
aam
mov
aad
addb
js
jmp
into
sti
dec
pop
mov
sub
pop
cs
loopne,pn
stos
lahf
cmp
icebp
adc
or
xchg
add
xor
enter
mov
outsl
mov
adc
cld
fisttps
xor
testb
cmpsl
aam
loop
push
add
mov
outsb
stos
mov
mov
test
add
or
add
add
push
das
call
pop
rolb
mov
mov
iret
sub
aad
jno
sub
mov
repz
adc
jecxz
pop
shll
imul
fucomip
push
add
add
nop
add
rolb
addb
cmp
lahf
mov
mov
adc
jmp
add
add
mov
out
inc
add
add
push
js
push
out
popf
inc
movsb
add
mov
jo
xchg
adc
dec
out
jmp
add
inc
add
sub
add
cld
xor
push
mov
xchg
ret
add
arpl
add
nop
jae
add
or
add
pop
mov
push
mov
xchg
ret
mov
adc
add
jmp
cmp
nop
jmp
nop
addl
or
cmp
mov
xchg
ret
and
div
fwait
cld
nop
jmp
cmpsl
add
add
and
clc
repnz
jae
dec
cwtl
cwtl
add
add
test
push
repnz
add
add
add
mov
mov
xchg
ret
add
imul
sti
push
mov
xchg
ret
sub
push
mov
push
mov
mov
add
or
add
clc
repnz
jae
add
cwtl
or
push
mov
xchg
ret
add
add
pushf
mov
jmp
incl
inc
add
add
jns
add
decl
test
nop
jae
mov
repnz
jae
jae
add
cli
add
add
xchg
clc
repnz
jae
aam
add
mov
add
mov
xchg
ret
add
rolb
mov
clc
repnz
jae
and
add
add
inc
nop
add
add
add
sbb
add
insl
pop
xlat
xchg
add
xor
jmp
icebp
add
inc
xor
xor
add
add
clc
repnz
jae
jae
inc
add
adc
fwait
cld
nop
jmp
add
daa
add
nop
jae
insl
or
add
clc
repnz
jae
add
add
add
add
add
add
icebp
out
add
and
xor
mov
mov
xchg
ret
jno
mov
add
add
repnz
jae
and
inc
add
clc
repnz
jae
scas
or
add
add
add
nop
jae
add
and
add
add
clc
repnz
jae
add
push
clc
repnz
jae
add
add
add
add
add
push
add
cwtl
mov
jae
pop
push
mov
xchg
ret
add
and
in
addb
add
sbb
mov
xchg
ret
sub
movsl
dec
addl
in
je
jmp
add
add
repnz
jae
add
mov
push
mov
xchg
ret
xchg
add
icebp
add
add
push
clc
repnz
jae
and
push
add
jns
add
push
jmp
jmp
cmpl
sub
add
add
dec
add
add
fwait
cld
nop
jmp
or
add
add
add
fwait
cld
nop
jmp
hlt
add
jno
mov
clc
repnz
jae
sub
push
add
add
clc
repnz
jae
add
or
mov
clc
repnz
jae
icebp
pop
test
jno
and
mov
stos
push
clc
repnz
jae
add
or
dec
cmpl
fwait
cld
nop
jmp
add
add
add
and
mov
xchg
ret
out
and
dec
gs
repnz
jae
add
and
add
ljmp
jns
pop
imul
add
mov
clc
repnz
jae
test
sub
repnz
jae
xchg
adc
add
mov
xchg
ret
cwtl
or
mov
div
fwait
cld
nop
jmp
add
add
add
mov
add
clc
repnz
jae
pop
add
pusha
adc
repnz
jae
add
add
fwait
cld
nop
jmp
dec
jae
dec
movb
cmpsl
sbb
repnz
jae
add
pop
movb
or
hlt
add
sbb
repnz
jae
add
jns
hlt
jnp
jmp
repnz
jae
add
add
add
dec
xchg
js
jne
clc
repnz
jae
insl
cmpsl
add
shll
mov
add
clc
repnz
jae
add
add
add
add
and
imul
nop
jae
jns
add
sbb
clc
repnz
jae
add
movsl
pop
jns
mov
xor
mov
clc
repnz
jae
dec
add
repnz
jae
add
mov
jns
dec
add
repnz
jae
add
add
mov
clc
repnz
jae
add
sub
add
fwait
cld
nop
jmp
add
add
add
movsl
mov
icebp
inc
add
and
sub
add
nop
jmp
dec
add
rolb
add
mov
sbb
add
clc
repnz
jae
mov
rcrb
jmp
add
jae
add
rep
fwait
cld
nop
jmp
and
add
fmull
jae
jns
add
movb
push
push
add
clc
repnz
jae
mov
cwtl
or
push
mov
add
and
sti
inc
sarb
jno
add
push
fwait
cld
nop
jmp
mov
add
sub
lds
mov
fwait
cld
nop
jmp
add
mov
sub
xchg
decb
add
repnz
jae
add
add
mov
jae
add
sub
add
mov
push
mov
xchg
ret
adc
cli
add
mov
into
jne
fwait
cld
nop
jmp
dec
add
add
test
push
mov
xchg
ret
xor
push
hlt
movb
rep
clc
repnz
jae
add
and
and
add
add
mov
clc
repnz
jae
xchg
add
clc
repnz
jae
add
mov
add
cli
fdivrs
fwait
cld
nop
jmp
sub
add
add
fwait
cld
nop
jmp
xchg
pop
and
inc
add
repnz
jae
nop
and
add
push
clc
repnz
jae
add
add
movb
add
in
mov
clc
repnz
jae
add
mov
call
clc
repnz
jae
sub
rolb
insb
cmpl
fwait
cld
nop
jmp
add
or
jns
cmc
cmpsl
push
add
mov
clc
repnz
jae
dec
add
repnz
jae
add
add
add
hlt
inc
add
jmp
incl
add
add
add
sub
add
clc
repnz
jae
or
add
push
add
mul
sbb
cli
fwait
cld
nop
jmp
inc
add
add
sub
add
nop
jae
cli
add
xlat
adc
push
add
push
clc
repnz
jae
dec
and
or
add
pop
clc
repnz
jae
jae
add
mov
add
add
clc
repnz
jae
add
aam
mov
jo
inc
add
jmp
loop
out
dec
add
add
add
add
add
fwait
cld
nop
jmp
add
and
jnp
jo
fwait
cld
nop
jmp
add
and
pushl
clc
repnz
jae
add
inc
addr16
jae
add
add
add
jno
call
clc
repnz
jae
xchg
add
add
add
add
and
add
add
clc
repnz
jae
add
push
gs
jmp
add
add
and
sub
or
repnz
jae
add
lea
add
je
fsts
cld
nop
jmp
cli
inc
jns
xchg
add
clc
repnz
jae
or
and
adc
pop
push
mov
xchg
ret
add
inc
and
add
ja
add
xor
dec
ss
clc
repnz
jae
add
mov
add
mov
fucomp
pop
sbb
nop
jae
adc
push
jno
sub
dec
or
mov
xchg
ret
add
add
add
repnz
jae
xchg
hlt
add
rolb
roll
jmp
add
add
subl
add
rolb
add
mov
sbb
fdivr
repnz
jae
mov
test
loop
and
repnz
jae
mov
add
add
fmull
repnz
jae
lcall
mov
push
sub
adc
inc
add
add
and
add
repnz
jae
add
or
add
sbb
mov
orl
clc
repnz
jae
mov
nop
and
add
xchg
sbb
push
mov
xchg
ret
cli
cwtl
add
add
std
dec
clc
repnz
jae
movb
shrb
movsl
add
add
add
in
push
clc
repnz
jae
jns
inc
add
mov
add
add
add
lcall
xor
push
add
xchg
cmpl
xorl
incl
test
add
pop
clc
repnz
jae
add
pop
add
add
ror
fwait
cld
nop
jmp
jns
loop
and
test
mov
push
mov
xchg
ret
pop
adc
nop
or
int
jl
and
push
flds
xchg
ret
xchg
add
sub
and
cld
nop
jmp
lea
add
sbb
add
add
mov
add
clc
repnz
jae
add
add
add
clc
repnz
jae
insl
movb
add
fwait
cld
nop
jmp
add
add
addl
add
insl
xor
clc
repnz
jae
add
add
stos
xor
clc
repnz
jae
cwtl
icebp
out
jns
mov
fwait
cld
nop
jmp
add
cwtl
sub
dec
mov
clc
repnz
jae
cmpsl
inc
pop
add
mov
add
or
add
rolb
mov
push
mov
xchg
ret
xchg
add
add
loop
lret
jne
clc
repnz
jae
test
add
push
fwait
cld
nop
jmp
xchg
jno
add
push
movb
add
clc
repnz
jae
test
add
jns
lods
push
push
mov
xchg
ret
xchg
add
add
push
mov
xchg
ret
hlt
or
add
repnz
jae
add
pop
add
xchg
add
mov
stos
imul
and
or
jns
adc
xchg
jne
push
clc
repnz
jae
add
add
shl
add
lock
jne
clc
repnz
jae
inc
sub
cmpsl
push
pop
xchg
clc
repnz
jae
or
and
adcl
or
clc
repnz
jae
add
mov
aaa
jno
add
add
clc
repnz
jae
add
ret
fwait
cld
nop
jmp
add
add
or
add
add
clc
repnz
jae
add
add
add
movsb
add
push
clc
repnz
jae
xchg
add
adc
add
repnz
jae
add
add
add
clc
repnz
jae
add
xchg
cwtl
insl
fisttpl
nop
jae
insl
sub
insl
add
nop
jae
jns
jns
jae
and
dec
mov
clc
repnz
jae
hlt
addl
xchg
add
add
and
push
mov
xchg
ret
add
cli
add
ret
daa
add
inc
loopne
repnz
jae
insl
mov
add
loop
mov
push
mov
xchg
ret
add
add
jno
add
push
mov
xchg
ret
add
add
add
ret
mov
xchg
ret
xchg
add
sub
cmp
inc
add
xchg
add
scas
push
add
repnz
jae
dec
add
cwtl
inc
mov
repnz
jae
add
add
icebp
xchg
mov
add
and
subl
add
jno
add
sub
testb
call
fwait
cld
nop
jmp
add
add
rolb
jne
clc
repnz
jae
or
fwait
cld
nop
jmp
add
inc
add
sub
push
and
leave
sub
repnz
jae
pop
loop
add
add
fwait
cld
nop
jmp
sub
movb
test
add
add
add
repnz
jae
lds
add
clc
repnz
jae
dec
imul
add
fwait
cld
nop
jmp
add
add
dec
jno
or
repnz
jae
out
mov
xchg
add
dec
cmp
repnz
jae
mov
push
add
dec
pop
add
fwait
cld
nop
jmp
out
add
cmpsl
add
add
adc
clc
repnz
jae
add
hlt
add
fwait
cld
nop
jmp
loop
add
mov
pop
sub
mov
xchg
ret
or
dec
icebp
add
push
mov
xchg
ret
mov
or
add
add
clc
repnz
jae
add
rolb
movb
mov
clc
repnz
jae
scas
sub
pop
pop
lds
lea
fwait
cld
nop
jmp
insl
or
add
push
push
mov
xchg
ret
insl
add
mov
fwait
cld
nop
jmp
rolb
add
aas
mov
push
mov
xchg
ret
test
add
aad
add
fwait
cld
nop
jmp
and
or
add
mov
xchg
ret
add
pop
inc
filds
nop
jmp
add
add
dec
add
repnz
jae
add
loop
pop
add
cld
add
fwait
cld
nop
jmp
or
inc
add
stos
movzwl
clc
repnz
jae
add
loop
std
mov
clc
repnz
jae
add
jne
clc
repnz
jae
sub
mov
push
mov
xchg
ret
lea
add
add
pop
jne
clc
repnz
jae
movsl
add
loope
sbb
add
push
insl
add
add
lds
insl
mov
jae
add
out
jns
push
mov
add
ret
loop
rolb
mov
sbb
add
add
sub
jb,pt
fwait
cld
nop
jmp
imul
add
inc
in
repnz
jae
xchg
add
testb
add
inc
mov
nop
jae
add
pop
or
jns
outsb
mov
clc
repnz
jae
nop
inc
mov
add
mov
push
mov
xchg
ret
pop
add
add
rep
clc
repnz
jae
mov
movb
add
pop
push
mov
xchg
ret
icebp
add
movb
mov
push
mov
xchg
ret
scas
jae
xchg
add
add
jae
test
icebp
add
mov
fwait
cld
nop
jmp
mov
add
add
mov
or
xor
add
fwait
cld
nop
jmp
sub
xchg
sub
inc
cmp
repnz
jae
imul
add
xchg
push
add
jg
ret
add
repnz
jae
add
icebp
loop
add
fwait
cld
nop
jmp
dec
or
add
or
dec
sub
repnz
jae
add
add
add
add
mov
xchg
ret
or
je
clc
repnz
jae
or
mov
mov
clc
repnz
jae
add
add
clc
repnz
jae
jae
sub
add
mov
test
clc
clc
repnz
jae
and
jns
push
add
add
push
ljmp
or
cwtl
add
clc
repnz
jae
insl
add
or
mov
adc
repnz
jae
mov
cli
insl
and
lods
push
push
mov
xchg
ret
add
and
stos
add
clc
repnz
jae
add
mov
cwtl
lea
inc
mov
cld
nop
jmp
add
test
icebp
inc
lcall
xor
add
clc
repnz
jae
icebp
out
push
mov
jne
je
repnz
jae
cli
add
cld
pop
clc
repnz
jae
rolb
dec
push
add
test
repnz
jae
loop
mov
dec
fwait
cld
nop
jmp
sub
add
add
jmp
icebp
jns
cwtl
add
and
rolb
add
xor
clc
repnz
jae
and
add
addr16
add
scas
test
cmpsl
add
add
push
loopne
cld
nop
jmp
or
sub
add
and
add
mov
fwait
cld
nop
jmp
mov
sub
pop
mov
push
mov
xchg
ret
add
add
add
add
add
repnz
jae
xor
dec
dec
clc
repnz
jae
lea
lea
gs
push
clc
repnz
jae
and
adcl
jns
add
jae
inc
add
addl
and
fwait
cld
nop
jmp
imul
icebp
xchg
jns
mov
push
pop
cmp
push
mov
xchg
ret
add
dec
and
and
jne
fwait
cld
nop
jmp
lcall
les
add
clc
repnz
jae
add
add
push
clc
repnz
jae
add
or
inc
hlt
out
out
test
clc
clc
repnz
jae
add
add
pop
insl
pop
adc
inc
add
clc
repnz
jae
mov
mov
or
adc
push
add
inc
add
add
add
cld
nop
jmp
add
xchg
add
nop
loop
add
rclb
repnz
jae
add
add
dec
movsb
add
add
repnz
jae
add
sub
clc
repnz
jae
add
add
icebp
inc
mov
mov
xchg
ret
add
mov
dec
cwtl
add
rep
clc
repnz
jae
add
add
add
inc
add
fcomps
hlt
incl
add
add
movb
pop
clc
repnz
jae
add
push
add
lcall
hlt
incl
icebp
add
and
fwait
cld
nop
jmp
add
nop
add
sub
repnz
jae
pop
add
xor
test
repnz
jae
inc
scas
add
add
add
xchg
test
inc
clc
repnz
jae
add
add
pop
add
fwait
cld
nop
jmp
and
adc
insl
push
push
mov
xchg
ret
xchg
add
push
jmp
int
pop
jae
repnz
jae
add
add
push
add
add
sbb
cmp
repnz
jae
cwtl
movsl
add
cmp
arpl
add
clc
repnz
jae
movsl
jno
lcall
clc
repnz
jae
or
add
push
clc
repnz
jae
movb
add
vunpcklps
cmp
xor
add
clc
repnz
jae
add
xorl
in
lcall
sbb
add
adc
mov
xor
clc
repnz
jae
lds
add
add
pop
add
push
mov
xchg
ret
xchg
add
jno
jl
pop
clc
repnz
jae
inc
mov
mov
clc
repnz
jae
add
add
clc
repnz
jae
add
jno
or
mov
test
xor
add
fwait
cld
nop
jmp
cwtl
add
push
push
mov
xchg
ret
add
sarl
test
cli
clc
repnz
jae
pop
add
je
clc
repnz
jae
lea
and
popa
push
mov
xchg
ret
and
jae
or
push
push
adc
testb
lods
clc
repnz
jae
add
lds
add
add
sub
clc
repnz
jae
aam
sub
add
add
add
repnz
jae
insl
addl
xchg
xchg
jmp
add
loop
add
dec
and
add
add
push
mov
xchg
ret
sub
jno
test
clc
repnz
jae
add
lds
mov
clc
repnz
jae
imul
add
inc
sbb
clc
repnz
jae
lds
mov
jae
add
loop
jns
loop
scas
movzwl
clc
repnz
jae
add
add
add
add
shr
clc
repnz
jae
add
lea
xchg
cld
add
clc
repnz
jae
movsl
mov
nop
push
sub
mov
clc
repnz
jae
add
cmpsl
dec
lahf
pop
clc
repnz
jae
add
and
cwtl
aas
jmp
add
add
insl
add
nop
inc
out
add
or
clc
repnz
jae
jno
cmpsl
add
sub
add
push
mov
xchg
ret
add
insl
add
outsl
push
clc
repnz
jae
add
insl
dec
pop
jns
hlt
jle
clc
repnz
jae
movl
movsl
insl
push
add
mov
push
mov
xchg
ret
mov
or
add
cld
imul
clc
repnz
jae
xchg
add
push
clc
repnz
jae
add
add
mov
clc
repnz
jae
cmpsl
add
add
and
pop
inc
push
mov
xchg
ret
nop
add
push
add
repnz
jae
add
movsl
lds
add
fwait
cld
nop
jmp
sub
rclb
add
clc
repnz
jae
add
jae
add
fwait
cld
nop
jmp
mov
add
add
insl
jno
add
mov
xchg
ret
add
sub
push
mov
xchg
ret
jns
add
sub
mov
xchg
ret
inc
add
add
mov
js
repnz
jae
add
dec
add
nop
jmp
pop
add
add
add
add
add
pop
clc
repnz
jae
test
add
add
add
cmp
clc
repnz
jae
add
movb
mov
mov
push
mov
xchg
ret
rorb
mov
push
mov
xchg
ret
dec
add
add
gs
mov
fwait
cld
nop
jmp
rolb
dec
loop
inc
add
mov
jg
clc
repnz
jae
movb
add
add
adc
mov
nop
jae
pop
add
add
test
lods
push
clc
repnz
jae
add
add
sbbl
jae
add
add
add
add
std
call
clc
repnz
jae
pop
xchg
and
clc
repnz
jae
add
pop
add
push
js
clc
repnz
jae
inc
and
pop
out
add
lea
clc
repnz
jae
add
push
add
mov
xchg
ret
inc
add
xchg
sub
repnz
jae
pop
cli
add
add
in
add
movb
xchg
add
add
or
cmpl
fwait
cld
nop
jmp
add
add
xor
clc
repnz
jae
lds
xchg
xchg
add
rolb
sub
fwait
cld
nop
jmp
add
sbb
nop
jae
add
or
push
add
lret
pop
clc
repnz
jae
movb
dec
add
sub
mov
stos
clc
repnz
jae
aam
cwtl
add
subl
clc
repnz
jae
inc
xchg
xor
push
push
mov
xchg
ret
add
cwtl
rorb
pop
mov
xchg
and
mov
inc
add
loop
add
nop
imul
roll
xchg
ret
sub
out
sub
add
loopne
clc
repnz
jae
add
add
icebp
inc
cwtl
push
push
mov
xchg
ret
add
add
sbb
clc
repnz
jae
lea
movsl
cmp
mov
add
repnz
jae
add
insl
dec
jns
sbb
repnz
jae
add
add
add
mov
push
sldt
clc
repnz
jae
add
std
rep
fwait
cld
nop
jmp
add
dec
movl
push
clc
repnz
jae
xchg
and
add
sahf
mov
push
mov
xchg
ret
add
push
clc
repnz
jae
add
inc
out
dec
jae
movswl
clc
repnz
jae
cli
inc
add
push
add
dec
push
clc
repnz
jae
xchg
add
add
daa
mov
jns
pop
add
pop
add
lcall
lds
je
js
mov
xchg
ret
loop
test
ljmp
push
inc
add
sub
add
pushf
test
fwait
cld
nop
jmp
loop
mov
out
dec
fwait
cld
nop
jmp
nop
add
add
add
lea
clc
repnz
jae
rcrb
push
add
mov
fwait
cld
nop
jmp
sub
xchg
mov
clc
repnz
jae
add
imul
or
mov
xchg
ret
nop
mov
add
cs
fwait
cld
nop
jmp
add
xchg
add
inc
hlt
sub
push
mov
xchg
ret
xchg
add
pop
xchg
movsl
add
je
add
clc
repnz
jae
mov
sub
push
lods
mov
clc
repnz
jae
aam
cwtl
dec
add
cmp
add
push
mov
xchg
ret
and
clc
decl
push
mov
xchg
ret
add
or
les
repnz
jae
add
fmull
nop
jmp
add
adc
xchg
repnz
jae
hlt
jno
cli
add
add
clc
repnz
jae
sub
aaa
dec
push
mov
mov
js
lret
xlat
rolb
out
shll
add
repnz
jae
jns
pop
add
add
or
and
repnz
jae
sub
cmp
je
repnz
jae
add
xchg
loop
add
jae
sub
dec
add
test
clc
repnz
jae
jae
or
jae
loop
add
add
add
xor
xor
clc
repnz
jae
add
add
imul
mov
fwait
cld
nop
jmp
and
add
push
add
mov
mov
add
repnz
jae
add
cwtl
lret
mov
clc
repnz
jae
lea
mov
add
push
push
mov
xchg
ret
add
pop
add
fwait
cld
nop
jmp
lcall
and
repnz
jae
jns
dec
pop
add
inc
push
add
lcall
in
incl
rep
clc
repnz
jae
imul
add
dec
add
dec
push
clc
repnz
jae
add
jmp
push
mov
xchg
ret
add
jno
add
clc
repnz
jae
xchg
sub
mov
clc
repnz
jae
dec
test
pop
add
pop
add
fwait
cld
nop
jmp
pop
movb
push
xchg
add
clc
repnz
jae
insl
mov
add
add
ret
clc
repnz
jae
add
add
test
add
jmp
add
movb
push
sub
add
add
nop
jae
add
lahf
xor
fwait
cld
nop
jmp
add
add
push
add
int
dec
add
cld
nop
jmp
add
add
add
cmp
clc
repnz
jae
adc
cmpsl
sub
and
xchg
movzwl
clc
repnz
jae
add
or
add
je
clc
repnz
jae
insl
test
rolb
mov
jne
clc
repnz
jae
adc
inc
inc
or
add
mov
mov
movzwl
fwait
cld
nop
jmp
dec
add
add
cli
repnz
repnz
jae
add
add
add
ret
add
clc
repnz
jae
nop
xorl
int3
add
clc
repnz
jae
jns
and
mov
or
jae
add
cli
enter
fwait
cld
nop
jmp
add
loop
cwtl
add
clc
repnz
jae
inc
inc
push
nop
push
add
les
clc
repnz
jae
add
jns
sub
icebp
inc
add
xchg
add
add
scas
test
fwait
cld
nop
jmp
add
add
sub
repz
cld
nop
jmp
scas
add
jns
data16
jl
add
aam
add
or
add
loop
call
nop
jae
add
adc
xor
repnz
jae
add
or
repnz
jae
pop
add
add
and
inc
adc
repnz
jae
add
add
jne
push
mov
xchg
ret
add
add
adc
fwait
cld
nop
jmp
xor
add
add
adc
mov
inc
add
add
cmp
cld
nop
jmp
add
add
add
add
repnz
jae
loop
cmpsl
add
addb
add
repnz
jae
add
sbb
pop
call
and
add
add
test
cmc
clc
repnz
jae
movsl
add
or
jbe
jmp
decl
xchg
add
pop
inc
add
stos
push
mov
xchg
ret
and
xchg
aas
mov
push
mov
xchg
ret
dec
add
inc
cmpsl
mov
enter
cmp
ret
or
cwtl
loop
add
pusha
add
add
push
mov
xchg
ret
xor
add
cli
je
clc
repnz
jae
add
popa
add
repnz
jae
or
jns
add
repnz
jae
addl
and
adc
add
add
popa
clc
repnz
jae
cli
add
add
add
mov
push
mov
xchg
ret
add
insl
lds
pusha
clc
repnz
jae
insl
loop
test
jo
lock
push
fs
repnz
jae
push
dec
add
das
mov
clc
repnz
jae
add
sub
mov
fwait
cld
nop
jmp
add
xchg
addr16
inc
jmp
pushl
and
add
inc
add
sub
repnz
jae
xchg
add
pop
or
mov
clc
repnz
jae
dec
add
sub
and
repnz
jae
test
xor
aas
push
clc
repnz
jae
sub
mov
roll
add
push
clc
repnz
jae
add
cmpsl
add
mov
fwait
cld
nop
jmp
aam
add
dec
pop
loop
cmc
xchg
jle
dec
adc
repnz
jae
mov
popf
push
push
mov
xchg
ret
cli
add
pop
add
fwait
cld
nop
jmp
add
lds
add
add
lods
push
mov
xchg
ret
scas
add
pop
jae
dec
mov
clc
repnz
jae
dec
cli
and
pop
clc
repnz
jae
or
pop
add
add
jmp
add
insl
xchg
xchg
xchg
add
test
fwait
cld
nop
jmp
add
add
fisubrs
clc
repnz
jae
add
mov
add
add
sbbl
add
mov
call
and
pop
addl
lea
add
add
mov
mov
add
dec
mov
mov
add
imul
lcall
call
or
clc
repnz
jae
and
xchg
add
mov
clc
repnz
jae
add
add
add
insb
test
push
mov
xchg
ret
sub
xor
xchg
int
clc
repnz
jae
add
add
add
mov
cli
mov
clc
repnz
jae
add
add
push
jns
jb
fwait
je
clc
repnz
jae
add
insl
movsl
cwtl
add
push
mov
xchg
ret
cwtl
dec
add
aam
add
imul
jae
add
pop
push
fwait
cld
nop
jmp
lds
add
add
loope
repnz
jae
add
add
add
add
add
push
cmc
add
jns
push
mov
xchg
ret
mov
add
add
jae
pop
push
add
add
mov
nop
jae
add
cli
add
add
add
push
mov
xchg
ret
add
add
xchg
cmc
mov
fsubrp
ljmp
add
movl
or
clc
repnz
jae
add
xor
cmc
mov
nop
jae
xchg
jns
inc
add
add
gs
add
clc
repnz
jae
xchg
cwtl
add
dec
push
aad
add
add
mov
clc
repnz
jae
xchg
adc
mov
sub
pop
mov
clc
repnz
jae
add
jmp
rolb
xchg
ret
add
add
and
clc
repnz
jae
mov
add
cmp
fwait
cld
nop
jmp
dec
add
push
cmpsb
add
mov
clc
repnz
jae
or
add
mov
inc
add
add
lea
and
push
mov
xchg
ret
add
add
nop
jae
xchg
lea
loop
loope
shl
clc
repnz
jae
add
or
dec
fwait
cld
nop
jmp
add
adc
add
cwtl
or
jne
xor
fwait
cld
nop
jmp
lcall
hlt
mov
lret
inc
add
add
sub
add
mov
repnz
jae
add
add
mov
jmp
nop
or
xchg
or
push
mov
xchg
ret
add
add
add
push
mov
xchg
ret
inc
add
dec
or
rolb
and
clc
repnz
jae
jno
add
clc
repnz
jae
xchg
scas
movb
add
je
add
clc
repnz
jae
add
or
ljmp
jae
add
pop
inc
out
mov
mov
clc
repnz
jae
add
add
jmp
mov
xchg
ret
add
add
clc
repnz
jae
pop
jae
add
add
jge
dec
push
clc
repnz
jae
add
mov
loopne
inc
fimuls
jmp
lds
mov
add
popa
add
repnz
jae
add
add
jmp
jp
fwait
cld
nop
jmp
jno
add
add
add
clc
repnz
jae
add
test
enter
jmp
aam
jns
pop
xchg
sub
push
clc
repnz
jae
add
xor
and
je
xor
pop
add
push
mov
xchg
ret
or
rolb
add
add
repnz
jae
or
mov
and
xor
push
add
test
idiv
clc
repnz
jae
xchg
add
mov
std
call
fwait
cld
nop
jmp
add
insl
movl
das
sub
clc
repnz
jae
add
aam
add
repnz
jae
xchg
inc
cmp
jae
or
add
movl
add
repnz
jae
add
add
adc
add
add
clc
repnz
jae
movsl
sub
xchg
loop
push
mov
xchg
ret
xchg
insl
movb
hlt
add
inc
clc
repnz
jae
xorl
add
add
cmp
hlt
filds
xchg
ret
pop
nop
add
and
xchg
repnz
add
stos
sti
clc
repnz
jae
cmpsl
add
fucompp
xchg
jmp
incl
or
cwtl
icebp
add
pop
add
add
cmpl
nop
jmp
movsl
add
mov
add
add
repnz
jae
add
push
or
cld
nop
jmp
add
mov
dec
pop
add
push
add
clc
repnz
jae
lea
sub
add
jne
fwait
cld
nop
jmp
add
pop
jae
and
fwait
cld
nop
jmp
add
movsl
and
add
push
push
mov
xchg
ret
dec
mov
mov
adc
repnz
jae
xchg
mov
add
and
jmp
add
add
dec
add
dec
add
xor
clc
repnz
jae
xchg
test
add
loop
cmp
rolb
xchg
ret
add
dec
cli
movb
add
pusha
clc
repnz
jae
insl
pop
dec
and
inc
dec
add
out
pusha
clc
repnz
jae
add
dec
cli
negl
jb
clc
repnz
jae
imul
pusha
fwait
cld
nop
jmp
add
and
movl
cmp
nop
jae
add
add
clc
repnz
jae
add
loop
mov
xchg
ret
xor
aam
add
cmpsl
fadds
sti
clc
repnz
jae
add
or
clc
repnz
jae
add
add
jno
add
adc
repnz
jae
push
add
dec
add
fsts
in
adc
lahf
add
add
add
cmc
add
add
jnp
pop
clc
repnz
jae
add
hlt
add
push
mov
xchg
ret
xor
aam
sub
sar
nop
jae
sub
add
add
test
out
movzwl
clc
repnz
jae
hlt
cli
insl
add
je
testb
add
clc
repnz
jae
or
clc
repnz
jae
lds
sub
or
rclb
mov
cmp
ret
movsl
sub
add
pop
inc
add
add
clc
repnz
jae
add
nop
pop
cli
cwtl
add
or
decl
or
add
cwtl
xchg
add
adc
cld
nop
jmp
and
lcall
or
repnz
jae
movb
add
jns
add
add
sub
add
or
add
add
push
push
mov
xchg
ret
mov
nop
mov
movl
mov
clc
repnz
jae
xor
jno
adc
mov
clc
repnz
jae
add
movl
add
clc
repnz
jae
xchg
add
shlb
add
jae
lcall
incl
pop
pop
add
loop
jl
movsb
clc
repnz
jae
add
movsl
add
add
repnz
add
push
mov
xchg
ret
dec
pop
insl
lcall
sub
cmp
ret
xchg
aam
and
repnz
jae
add
shr
add
pop
sti
mov
clc
repnz
jae
sub
nop
aam
mov
inc
push
repnz
jae
add
mov
add
add
clc
repnz
jae
pop
add
movb
mov
push
mov
xchg
ret
add
test
lea
mov
xchg
ret
addl
pop
sub
cmpb
clc
repnz
jae
add
push
decl
inc
xchg
add
add
push
lcall
repnz
jae
and
add
xor
mov
sbb
clc
repnz
jae
lcall
add
mov
clc
repnz
jae
loop
add
add
popa
add
repnz
jae
and
add
add
or
sar
nop
jae
add
cwtl
dec
lds
or
push
mov
xchg
ret
mov
dec
add
mov
pop
push
mov
xchg
ret
xchg
dec
add
pushl
clc
repnz
jae
test
xor
add
mov
clc
repnz
jae
lcall
leave
push
mov
xchg
ret
dec
sub
pop
or
in
cmp
stos
add
icebp
jae
testb
jecxz
adc
mov
clc
repnz
jae
or
aad
mov
fwait
cld
nop
jmp
add
test
dec
push
mov
xchg
ret
jns
add
out
push
mov
cwtl
repnz
in
push
sahf
lock
or
add
repz
mov
add
gs
aas
sbb
in
adc
push
jg
rolb
xor
fnstsw
pop
push
add
cwtl
sbb
insb
mov
outsb
ret
rcll
insl
pop
mov
test
add
hlt
add
add
cmp
out
cmp
add
sbb
add
aam
dec
gs
sbb
add
clc
cwtl
imul
adc
dec
test
xor
pop
ja
add
push
insb
insl
mov
inc
cmp
pop
sub
xchg
pop
movsb
add
ficoml
sub
dec
jp
sbb
test
rorl
scas
xchg
add
add
add
mov
loope
add
cmpsl
mov
add
fwait
adc
ficomps
push
movsb
add
add
sbb
lret
mov
or
add
add
add
mov
hlt
add
pop
loope
nop
add
xchg
mov
cmp
jge
add
addb
add
popa
mov
mov
mov
hlt
add
mov
movb
xchg
jae
das
mov
mov
pop
jne
and
mov
add
cmp
push
nop
add
shll
mov
fsts
add
test
fstpt
add
add
inc
add
add
mov
inc
jb
testb
cwtl
lret
xchg
hlt
add
xchg
add
or
add
add
push
mov
sarl
jle
add
inc
sbb
int3
popf
sub
mov
sbb
fcomip
xchg
das
js
add
adc
testb
lcall
cmp
dec
mov
stos
or
jmp
testb
add
add
dec
je
enter
pop
push
cwtl
mov
stos
clc
hlt
add
mov
scas
or
jae
add
cld
push
add
mov
mov
jg
into
jl
inc
add
add
or
ret
lahf
rolb
sub
nop
add
cwtl
xlat
pop
cwtl
lahf
xor
jns
add
push
add
add
test
jo
ja
aad
add
sub
add
pop
and
add
xor
pop
movb
adc
xchg
add
popf
mov
inc
mov
addb
leave
and
jnp
das
aam
add
shl
jl
xchg
push
dec
mov
add
add
fdivrl
jbe
fists
push
rolb
pop
xchg
stos
jnp
pop
mov
out
enter
add
add
aad
add
push
add
pop
pop
jp
cmp
add
xchg
dec
das
mov
add
mov
pusha
add
jmp
xor
cmpsb
add
gs
xchg
dec
push
add
mov
lahf
das
adc
sbb
mov
pop
out
es
cs
add
fstps
add
add
add
mov
stos
aam
cmpsb
add
rolb
jg
sub
cmp
add
pop
cmp
in
jbe
cmp
lock
fnsave
xchg
add
rolb
add
lcall
repnz
mov
stc
mov
mov
sub
inc
sub
dec
lock
cmc
xorl
push
add
or
add
aam
jae
mov
popa
pop
or
jmp
add
xchg
add
ret
add
jmp
mov
pop
cltd
test
pop
cmp
addb
aam
inc
add
mov
add
and
mov
loopne
test
jge
add
add
mov
imul
add
add
fidivrs
testl
sbb
mov
add
je
or
mov
rcr
repz
test
imul
movb
out
pop
fwait
aaa
shrl
test
inc
sarl
push
add
nop
add
add
jb
xor
add
loope
movsb
add
dec
data16
scas
push
add
ds
add
add
mov
add
add
cmp
xlat
adc
add
add
mov
mov
jp
add
pusha
add
sub
add
add
insb
bound
mov
test
stc
sub
ds
add
add
pusha
add
sti
lret
jle
jl
shrl
add
gs
or
pop
pop
mov
out
and
shrl
xchg
jmp
add
mov
add
add
xchg
add
mov
movb
add
pop
mov
fsubl
outsb
icebp
lahf
fwait
and
sub
call
stos
fisubl
add
cmpsb
add
xchg
add
test
cmpsb
add
out
sbb
mov
jmp
movb
lahf
outsl
adc
cmpsb
add
push
add
add
push
das
fucom
add
popa
cmpsl
pusha
add
lgs
in
inc
mov
out
dec
das
add
mov
les
pushf
addb
add
mov
lcall
data16
add
mov
mov
cmc
lret
mov
les
imul
je
jmp
or
dec
mov
add
mov
std
idivl
add
fisubs
jbe
dec
ds
mov
add
add
mov
je
jp
cmp
add
loope
add
jns
testb
add
andps
mov
pop
mov
sbb
add
mov
decb
add
into
jnp
sub
mov
sarl
jns
push
jecxz
out
or
mov
out
test
add
add
ss
cmp
stc
add
cltd
xchg
add
add
add
scas
loope
js
arpl
add
insb
jmp
pop
popf
jp
push
test
push
fisubl
sbb
loopne
mov
add
push
sbb
add
fwait
push
add
call
rcrl
popa
dec
arpl
mov
add
jne
mov
sbb
dec
repnz
add
cwtl
sub
gs
mov
out
popa
push
sub
dec
pop
roll
mov
pop
dec
and
add
mov
and
mov
pop
lcall
add
stos
jg
add
cmp
sbb
and
sahf
cli
sbb
pushf
addr16
inc
add
pushf
lock
add
jnp
cltd
das
mov
sbb
mov
pop
nop
add
push
sbb
int
pop
mov
jno
add
jle
ds
add
ljmp
cmp
xlat
push
fcmove
push
add
stc
pop
mov
mov
xchg
lcall
call
test
sete
jg
cmp
stos
sub
mov
scas
mov
mov
add
add
jno
nop
add
add
stos
in
dec
add
add
gs
repnz
addb
inc
xor
xchg
aad
ret
pop
fnstsw
push
jle
pop
and
mov
inc
add
adc
sbb
divl
mov
out
push
push
push
hlt
add
add
add
add
add
add
mov
add
mov
inc
sahf
insl
rolb
push
add
jns
loopne
je
jbe
sub
add
dec
sbb
pop
xor
add
insb
imul
add
call
mov
add
cmp
or
add
add
cmc
jns
or
adc
sbb
loope
sub
sub
add
mov
add
xchg
add
add
add
add
mov
push
add
pop
mov
iret
sbb
and
and
add
mov
nop
add
xor
inc
add
adc
mov
add
lods
pop
xor
movsl
aas
pusha
add
dec
dec
fbld
popf
fbstp
add
xor
add
add
adc
or
mov
mov
push
out
xor
sbbl
add
adc
int3
inc
test
movl
xor
add
mov
push
add
sbb
mov
loopne
iret
mov
push
add
push
sub
add
icebp
or
add
jns
add
push
add
ficoml
dec
repz
sub
mov
gs
int
xchg
lods
loopne
add
add
gs
insl
into
xor
sbb
lret
mov
loop
sbb
int
jne
and
cmp
add
in
addb
add
aas
adc
mov
or
xchg
add
xchg
lret
popf
xchg
cmpsb
add
in
add
mov
addb
sti
stc
insb
movsl
xchg
movb
dec
xchg
leave
add
iret
xchg
add
mov
mov
sbb
mov
inc
das
cmpsb
add
add
add
add
mov
mov
cmp
dec
sub
out
icebp
push
add
push
sbb
mov
add
and
mov
jb
inc
call
add
or
xchg
add
add
mov
sbb
sbb
into
fisubrs
mov
les
or
mov
add
sbb
fdivl
jl
out
pushf
scas
aad
jne
push
add
add
mov
incl
add
add
outsb
push
add
mov
jno
add
add
outsl
mov
sahf
xlat
sbb
add
mov
sbb
jg
xor
jb
mov
iret
call
ja
fwait
or
dec
js
loopne
mov
add
add
roll
das
push
add
scas
jg
stc
cs
push
add
into
adc
cmp
add
mov
add
in
stos
mov
test
xor
xor
sbb
add
push
add
inc
add
addb
imul
lret
xchg
fldt
jae
mov
dec
lret
pop
stc
cltd
mov
cmpsb
add
roll
or
xchg
shr
rolb
add
add
mov
jp
add
jb
and
mov
lcall
add
add
popa
push
add
add
popf
jl
fldt
add
xor
or
insl
push
in
mov
mov
add
aaa
icebp
jmp
out
sarl
xchg
add
lea
and
mov
inc
and
sub
add
ret
cmp
out
lods
cmpsl
xchg
or
cmp
xchg
ret
std
pop
fsubp
add
cld
mov
xchg
in
adc
inc
add
mov
mov
sub
add
xor
outsb
fdivs
push
add
add
xchg
push
add
enter
jle
aaa
cs
add
mov
mov
inc
add
popf
dec
cs
scas
fadds
das
sub
cmp
mov
add
push
add
into
push
cmp
or
adc
les
lcall
mov
cmp
add
stc
cmp
add
mov
lret
add
sub
sbb
mov
je
mov
add
dec
lods
aam
or
jb
pmaddwd
test
cmpl
mov
jp
adc
cmp
cli
pop
and
cmp
icebp
xlat
pop
out
sub
in
pop
xor
mov
sti
fcmovnu
testb
loop
jle
jge
loopne
addb
popf
aad
mov
pop
or
add
add
cmp
pop
xchg
add
add
dec
cmp
testb
add
mov
loope
inc
add
cmp
int3
or
jle
add
add
je
pop
sbb
div
add
addr16
inc
sub
add
add
sub
mov
mov
cmp
mov
mov
push
add
lock
inc
add
add
sub
cmpsb
add
ficompl
cmp
popf
or
les
lods
int
imul
dec
stos
mov
lret
jno
movb
data16
aad
sbb
cmpsb
add
add
and
xor
dec
dec
pushf
push
xor
fmuls
cmp
pusha
add
movsl
pop
dec
add
mov
xor
outsl
cwtl
sbb
add
push
push
add
jge
add
add
mov
iret
adc
dec
fcoml
add
mov
add
sbb
into
jo
add
mov
push
testb
mov
cmp
xchg
sbb
add
int3
movb
pop
addl
add
mov
mov
popf
pop
fldenv
dec
cld
fs
add
mov
mov
pop
in
push
add
mov
in
push
popl
loope
mov
push
arpl
mov
add
add
add
add
xor
and
mov
fwait
pop
inc
add
leave
cmpsl
sbb
stos
jg
add
clc
pusha
add
mov
mov
jae
add
cmp
xchg
call
add
push
add
adc
mov
sub
insl
lcall
test
ficomps
or
add
lcall
rolb
pop
pop
dec
jp
mov
add
add
xchg
add
test
or
mov
add
add
data16
dec
mov
push
add
add
add
pop
xor
pop
inc
pushf
mov
loop
mov
pusha
add
mov
sub
mov
lret
in
icebp
inc
in
add
lods
hlt
add
add
mov
loop
addb
or
cmpsl
mov
add
inc
aam
adc
jbe
pop
and
jbe
mov
add
cmpsl
insb
fcomip
loope
jnp
inc
lahf
and
mov
pop
insl
mov
xor
jmp
cli
mov
xor
mov
add
cmp
add
mov
and
and
mov
add
popa
test
sbb
sub
pop
frstor
repnz
pop
add
mov
movsb
add
int3
sub
movsb
add
stos
sti
aam
sbb
add
cli
dec
pop
popl
bound
mov
xchg
add
xchg
adc
add
xchg
add
add
out
loope
add
clc
xor
and
sub
mov
pop
mov
add
inc
out
mov
add
mov
adc
testb
mov
jmp
add
mov
push
add
add
pop
or
lcall
add
stc
mov
enter
xchg
dec
movsl
cmp
mov
hlt
add
mov
lods
dec
gs
or
pop
std
addr16
add
add
mov
add
jge
out
bound
mov
push
add
fidivl
add
cmp
addr16
add
add
mov
add
dec
fcmovb
add
leave
call
ja
add
add
xor
add
cld
sahf
nop
add
mull
add
mov
add
dec
adc
dec
inc
data16
fisttpl
xchg
sbb
xchg
add
jecxz
add
in
data16
push
dec
lds
add
sub
pop
cs
push
pop
aam
gs
add
add
jp
add
mov
aam
sahf
stc
xlat
and
sti
push
hlt
add
enter
mov
decb
and
cwtl
pop
or
xchg
add
mov
jmp
mov
add
mov
arpl
add
mov
or
dec
push
add
das
rorl
lock
add
add
test
data16
add
stos
fdiv
add
add
loop
cmp
jp
add
dec
push
add
add
ds
cli
sub
add
or
rcl
enter
mov
add
and
mov
in
cmpsl
xchg
clc
and
sbb
mov
sub
ljmp
shll
lahf
jle
add
fists
jg
add
pop
std
dec
aad
add
xchg
jb
and
xor
add
fisttpll
add
mov
lds
out
xor
sbb
and
pop
adc
jo
mov
adc
popf
cs
mov
testb
dec
pop
fld1
gs
les
mov
lock
ljmp
xchg
test
dec
aam
rolb
pop
add
ja
inc
lods
jl
addb
add
push
jge
add
add
femms
dec
sbb
add
mov
sbb
add
mov
mov
dec
xor
cmp
in
je
pop
xor
fstps
popf
and
mov
pop
dec
pushf
or
pop
cs
add
cli
mov
sub
rolb
sub
add
enter
add
pushf
xchg
or
add
add
or
lret
add
add
add
jb
lods
aas
and
mov
dec
test
add
test
mov
leave
lahf
mov
and
add
add
fiadds
aam
outsb
or
xchg
test
call
add
filds
nop
add
add
mov
fidivl
sub
mov
xchg
xchg
mov
fdivrl
mov
popa
out
push
mov
add
xorl
mov
or
inc
inc
add
mov
add
push
push
or
add
add
add
stc
lock
fdivp
addb
add
stos
in
xchg
add
mov
add
add
add
pop
xchg
lcall
xor
dec
stos
fcomp
out
pop
push
add
cld
cmp
les
imul
cmp
sub
add
inc
add
add
xor
cld
jecxz
mov
sbb
add
mov
inc
andl
add
sbb
test
mov
scas
sub
add
add
mov
in
inc
aas
cld
mov
add
fwait
add
lret
jle
lcall
mov
and
add
add
imul
push
add
roll
and
ret
pushf
mov
push
add
sub
mov
decb
cmp
add
test
jge
cli
arpl
add
rolb
and
mov
and
xchg
add
add
cmc
outsl
and
outsl
bound
mov
stc
xchg
insl
icebp
mov
cltd
insl
pop
daa
test
rolb
pop
xor
bound
mov
addb
add
add
add
xchg
stos
pop
jecxz
add
add
inc
add
add
add
mov
addr16
add
cmp
pop
stos
sub
add
adc
fldt
repz
lret
popf
nop
add
add
pop
mov
mov
or
xchg
add
add
push
mov
push
mov
jb
popf
fwait
pushf
pop
add
jmp
add
add
pop
add
in
mov
pop
incb
repnz
in
add
mov
add
movl
outsb
sbbl
lods
jo
push
add
imul
incb
and
add
add
loopne
inc
add
imul
add
add
or
daa
aas
fs
sub
add
add
test
and
mov
insl
add
pusha
add
xor
add
push
rolb
xchg
leave
jns
add
sbb
add
sub
xor
fdivl
mov
dec
cmp
push
add
adc
arpl
dec
mov
add
pop
clc
add
or
cmp
add
push
add
adc
cmp
sbbl
cmc
fldt
repnz
mov
pop
lea
mov
insl
inc
add
daa
outsb
mov
enter
sub
cmp
in
aad
mov
jmp
or
andl
jmp
sub
mov
fadds
aam
cmp
push
add
pushf
gs
loop
lods
int
mov
imul
or
rolb
mov
sbb
add
and
mov
cld
mov
out
jle
xor
data16
cmpsl
ficompl
add
mov
test
mov
add
fimull
stos
sahf
inc
add
sbb
mov
sti
add
addr16
jo
dec
clc
mov
sub
add
les
arpl
sbb
dec
mov
push
mov
xor
insb
xor
adc
in
mov
das
iret
inc
adc
jp
mov
add
rol
filds
push
add
sbb
addb
xchg
dec
lahf
push
add
xchg
pop
inc
add
loop
rolb
dec
sub
push
popl
in
data16
fidivrs
hlt
add
cmp
sub
ljmp
add
push
flds
out
addb
clc
pop
mov
xchg
add
add
pusha
add
ret
jecxz
xchg
into
stc
mov
add
mov
addb
push
pop
cmp
push
add
mov
add
test
add
outsb
cmpsb
add
ret
addb
pop
dec
das
xchg
js
inc
add
add
dec
lret
pop
stc
sub
cltd
push
add
inc
lea
adc
xlat
jecxz
inc
add
lcall
mov
pusha
add
add
add
add
add
push
add
add
sub
mov
add
adc
xchg
add
pop
sbb
add
movsl
push
xor
pop
aam
movsb
add
rolb
push
adc
dec
sbb
and
js
inc
add
ret
ret
add
add
test
test
mov
aas
push
fs
in
jo
add
leave
add
add
sahf
rolb
mov
pop
jne
xor
add
inc
mov
add
lea
dec
jp
add
shll
cmp
iret
mov
adc
stos
push
popf
out
les
mov
push
mov
cmp
add
iret
shll
mov
out
aam
addb
mov
das
int
movsb
add
add
sub
add
add
repnz
jmp
mov
mov
daa
push
add
movsb
add
add
push
adc
test
push
into
lret
int
xor
rolb
add
gs
jae
xchg
jo
xchg
popf
into
jae
add
js
add
popf
dec
push
mov
popf
inc
sahf
adc
add
add
add
jecxz
int3
scas
mov
cs
fdivrl
inc
add
out
xor
xchg
add
ds
cmp
add
loop
adc
xchg
sbb
add
cmpsb
add
loope
add
add
iret
add
or
add
mov
mov
add
push
xor
stc
int3
push
xchg
xlat
push
add
mov
popa
sbb
iret
fsts
mov
pop
sbb
sti
js
in
hlt
add
int3
jne
jle
add
sbb
leave
lahf
or
mov
jmp
push
add
add
daa
cltd
ja
add
adc
lock
add
in
inc
add
cmp
or
add
mov
pop
cmp
add
add
add
push
add
mov
xor
leave
lret
aam
add
add
push
inc
in
fisttpl
bound
mov
push
mov
popa
addb
adc
push
nop
add
popa
mov
push
add
pop
or
data16
dec
out
pop
or
add
push
add
add
mov
mov
add
mov
int3
dec
mov
je
add
add
mov
test
jne
cmpsb
add
fistps
add
add
ljmp
adc
pushf
std
push
fiaddl
add
xchg
add
data16
inc
add
lahf
out
sbb
add
dec
lds
mov
dec
push
add
push
mov
imul
cmp
mov
push
ret
add
lcall
mov
mov
leave
mov
sub
dec
adc
xchg
add
add
xorl
add
pop
add
out
mov
loopne
lea
adc
push
add
loopne
mov
movb
mov
pop
jp
fwait
adc
mov
mov
addb
add
add
mov
sbb
mov
add
out
int3
inc
add
cmp
push
add
add
add
repz
test
int
add
pop
and
ds
add
nop
add
jle
addb
loopne
cltd
test
add
push
into
xchg
stos
sub
inc
fisubl
add
add
into
testb
push
push
push
add
xchg
or
jno
push
add
add
cmp
sbb
add
addb
add
push
mov
cmpsb
add
jbe
inc
add
jl
cs
dec
sub
add
add
movb
pop
mov
shrl
fstps
and
jmp
mov
mov
mov
sbb
cwtl
in
mov
bound
mov
mov
repz
add
add
xchg
add
mov
pop
sbb
sub
outsb
ljmp
in
movb
arpl
jecxz
mov
movsb
add
mov
add
sbb
cmpsl
or
lods
and
stc
jbe
aas
or
add
add
jecxz
lods
lahf
rolb
push
dec
les
outsb
lret
adc
jmp
psadbw
leave
fsubs
add
mull
outsb
sbb
stos
mov
in
cli
shll
add
sbb
add
das
lods
icebp
movsb
add
mov
fsubl
cmp
adc
js
add
or
xor
xchg
dec
cmpsl
lret
ljmp
int3
cmp
add
cli
or
cmp
cltd
dec
testb
loopne
pop
adc
xor
xchg
jmp
add
dec
or
loope
popa
mov
icebp
imul
insl
xlat
cmpsb
add
fadd
pop
adc
mov
add
dec
inc
add
pop
ret
add
xchg
add
mov
add
test
jb
push
mov
add
in
lret
cmc
lods
imul
add
pop
mov
in
imul
add
movsl
cmp
add
mov
add
cwtl
xchg
mov
enter
add
inc
pop
addb
xchg
cltd
xchg
add
add
add
mov
add
and
mov
mov
ja
fstpt
push
ret
ret
dec
pop
mov
scas
jo
ljmp
loope
mov
add
dec
dec
ds
loop
rolb
addb
mov
fildll
jo
inc
cmp
add
stc
mov
add
add
dec
repnz
adc
lods
insl
addb
add
fstl
dec
data16
jecxz
dec
stos
sub
pop
nop
add
add
mov
inc
lret
fildl
cmp
add
pop
cli
icebp
adc
aaa
jl
add
jno
and
lods
movb
dec
mov
pop
mov
loopne
jnp
jmp
lods
movb
cld
push
arpl
push
hlt
add
addb
mov
or
pop
xor
movb
repnz
add
das
repz
adc
or
outsb
push
add
add
add
sbb
ja
mov
or
cmpsl
sbb
add
iret
lds
rorl
mov
add
lahf
in
out
mov
lea
outsb
jae
test
data16
add
adc
dec
fsubrl
push
pop
sbb
stc
push
mov
ja
add
xlat
mov
ret
add
add
jnp
inc
add
aad
cli
jle
adc
add
and
mov
lahf
add
add
cli
lea
inc
xchg
vhsubpd
add
movsl
outsl
addb
fiaddl
std
lret
dec
xor
out
pop
testl
cmpsb
add
cmp
fwait
jge
jo
pop
adc
fistpl
mov
add
add
in
pop
mov
or
add
jno
push
cmp
add
pop
pop
push
add
add
or
add
add
add
add
jno
pop
add
gs
mov
fwait
ret
add
sahf
dec
imul
pushf
repnz
add
lahf
ds
inc
add
xor
shl
add
stc
jle
jb
or
add
mov
bound
mov
and
enter
add
adc
push
lock
movsl
lock
or
jecxz
mov
testb
and
jnp
mov
add
and
or
addr16
jnp
mov
cmc
jge
les
ret
stos
push
add
add
mov
add
add
add
or
popf
add
mov
cs
add
push
inc
cvtdq2ps
repnz
mov
push
add
ror
scas
mov
push
add
add
add
mov
xchg
add
add
mov
add
rolb
lods
push
loopne
cmp
add
stos
js
movb
loop
clc
jmp
add
add
fwait
cmp
and
mov
repz
mov
aad
fcomps
add
mov
sub
insl
push
add
imul
or
cwtl
stos
mov
loope
inc
add
add
cmc
mov
add
pushf
out
rolb
into
mov
add
add
cmp
and
rorl
xor
cwtl
mov
shll
fdivl
add
add
add
or
dec
shrl
add
rolb
cld
cmp
jo
je
xchg
ljmp
fsts
dec
xchg
mov
data16
mov
je
push
add
xchg
add
pop
xor
rolb
dec
movb
add
add
js
out
inc
test
push
add
add
or
add
xchg
add
add
xor
ja
addr16
mov
jle
sub
sub
add
int
movl
pop
shll
testb
mov
pop
scas
push
lahf
sbb
add
lahf
cmp
mov
add
lods
sub
cmpsl
data16
movsl
imul
mov
cli
adcl
add
cmp
sbbl
sub
test
hlt
add
sbb
mov
jbe
cmc
cmc
cltd
negl
sbb
mov
and
nop
add
add
rolb
jnp
pop
fdivl
add
mov
add
add
add
or
add
xor
sbb
sbb
jmp
or
scas
les
addr16
xor
add
add
adc
out
jne
stos
pop
stc
js
inc
add
rolb
jge
test
and
mov
inc
xchg
ds
mov
mov
addb
mov
cmp
bound
mov
add
fldl
pop
cld
mov
pusha
add
test
cmp
add
addb
add
add
fldenv
movsl
sarl
inc
add
jl
pop
dec
fucom
add
xchg
add
das
jle
add
add
add
add
xorl
aad
add
add
lods
add
sub
add
add
add
in
popf
sbb
add
pop
mov
xchg
or
add
mov
or
into
mov
mov
add
push
inc
jecxz
add
xor
add
outsb
pop
fwait
movb
data16
dec
or
aad
movsl
cwtl
push
inc
xchg
xchg
cmp
mov
add
adc
inc
stc
dec
andl
ret
dec
mov
mov
arpl
icebp
adc
arpl
dec
jge
in
hlt
add
test
ret
adc
ret
lock
add
pop
and
push
lahf
roll
sti
mov
xor
add
add
mov
dec
jne
push
daa
icebp
fcomps
add
mov
jecxz
add
mov
sub
xlat
lea
in
push
add
test
inc
dec
and
add
cmpsb
add
xchg
add
mov
dec
data16
cltd
mov
sbb
pop
and
jns
push
add
xchg
dec
sub
lds
ss
add
rolb
aaa
rcrl
add
cmp
mov
add
jmp
enter
into
sbbl
add
arpl
push
add
inc
arpl
mov
push
add
pop
movb
imul
mov
stos
xchg
add
mov
add
pop
push
add
mov
sub
aas
xrelease
add
mov
mov
add
or
push
mov
aad
add
lock
testl
fcos
pop
cwtl
cs
das
in
xchg
add
push
add
jg
mov
arpl
adc
stos
dec
cli
mov
add
push
add
xor
popa
adcl
cmp
push
xchg
add
pop
outsl
fistpl
push
add
aam
xchg
enter
lods
nop
add
add
sub
push
add
mov
adc
sbb
mov
mov
push
mov
and
testb
add
mov
test
push
jge
stos
mov
push
add
add
push
add
add
js
popa
inc
adc
sahf
leave
and
jns
pcmpgtb
outsb
or
jne
add
les
cmp
fcmovnu
push
xchg
add
add
loope
cmp
mov
and
mov
insb
repnz
adc
scas
loop
arpl
shll
jno
mov
cmp
push
sahf
or
cmp
add
out
out
fmuls
rolb
push
add
add
adc
xor
and
sti
test
inc
imul
adc
and
dec
push
hlt
add
pop
cmc
cmpsl
mov
mov
xchg
jo
std
sbb
jp
repnz
movsb
add
add
jmp
add
add
pushf
mov
add
icebp
repz
xlat
repz
mov
push
add
mov
add
add
movsl
out
add
xchg
add
push
add
shrl
stc
ds
push
sti
clc
lcall
icebp
movsl
and
mov
jg
and
add
mov
add
in
les
cmp
inc
pop
cmp
add
mov
push
loope
lcall
add
add
mov
adc
mov
add
add
mov
add
int3
adc
ret
pop
ljmp
pop
adc
stos
add
mov
dec
mov
addb
add
stc
mov
add
sahf
add
add
add
mov
add
add
sti
add
mov
add
add
add
jmp
cli
pop
push
jne
xchg
add
lock
adc
or
xchg
dec
jmp
add
pop
mov
fdivrs
add
push
add
mov
movsb
add
xor
sub
cld
mov
addl
push
mov
pop
jae
sbb
and
mov
jle,pt
add
add
sub
mov
cmc
cmpsb
add
add
add
sub
pop
ljmp
sub
add
push
add
mov
xor
rolb
mov
add
addb
add
testb
hlt
add
adc
push
mov
cmp
xchg
movsl
add
or
add
add
mov
test
inc
adc
sub
add
mov
movsb
add
pop
mov
rolb
inc
add
add
mov
mov
or
movsl
sbb
mov
mov
out
cmp
popa
xchg
add
shll
mov
test
ja
dec
pop
in
pusha
add
mov
inc
add
add
sub
add
add
cmp
sbb
jnp
cmpsl
and
mov
add
add
test
add
sbb
aas
in
push
add
add
ret
xchg
loope
scas
adc
add
adc
mov
aaa
and
cmp
mov
and
mov
das
push
add
add
add
aas
into
jge
bound
mov
add
push
rolb
iret
cli
pop
pop
mov
add
jmp
add
jae
loopne
scas
or
adc
xor
dec
add
sahf
sub
test
add
jne
dec
movsb
add
stos
fwait
push
add
dec
sbb
add
jae
mov
mov
cmpsl
push
add
mov
rcl
mov
pop
addb
out
dec
and
mov
aas
cwtl
inc
add
xchg
jne
scas
add
xchg
add
inc
jl
add
jp
aaa
jle
movb
mov
mov
in
out
test
nop
add
sub
mov
mov
xchg
add
xchg
add
imul
rolb
xchg
add
nop
add
rolb
movsb
add
xor
movb
and
pop
movb
add
pop
repnz
lahf
or
mov
cmp
stos
or
add
cmp
inc
adc
add
lcall
frstor
fwait
sub
add
add
ljmp
add
call
add
jnp
adc
jmp
xchg
push
add
mov
add
jl
fldt
ss
fisttpll
addb
or
dec
jl
out
loope
add
dec
sbb
inc
lods
mov
cmp
std
push
pop
fdivrp
push
add
add
dec
push
cmc
mov
fdiv
add
sub
add
add
jl
push
add
cmpsl
add
and
mov
stos
je
lahf
rcll
add
sbb
bound
mov
mov
jae
jp
mov
cmc
add
add
addb
rolb
sub
add
fdivs
sarl
xchg
sbb
mov
add
add
testb
mov
add
mov
pop
out
rolb
rolb
fldcw
push
add
rolb
andl
into
aaa
adc
pop
dec
mov
in
into
mov
insl
lock
push
lock
jno
xchg
out
xor
xor
sbb
add
sub
jmp
add
jne
sub
loope
sub
add
scas
dec
movntq
pop
add
mov
add
out
cltd
ror
imul
sbb
pop
seta
dec
jb
stc
add
mov
xor
out
xchg
jo
add
mov
inc
add
scas
cmp
add
in
add
mov
sahf
gs
mov
inc
dec
mov
and
jae
add
jp
add
sbb
sub
aam
inc
add
fldcw
cmpsb
add
add
jnp
sti
inc
or
add
add
test
data16
add
fisubs
fisubrl
add
or
dec
aad
pusha
add
mov
add
and
mov
adc
pop
fcomps
jbe
les
sub
or
add
add
pop
loope
add
add
add
add
mov
xor
ja
sbb
lret
cs
sbb
scas
cwtl
shll
add
adc
xor
arpl
add
out
mov
jmp
add
testb
push
jge
add
lret
cmp
xchg
push
add
enter
jb
addb
add
push
add
xor
jmp
push
lods
stos
rolb
sbb
xlat
mov
add
call
push
cli
sub
push
add
dec
ret
pushf
repnz
add
mov
repz
and
lcall
adc
sub
add
fwait
cmp
imul
cmp
xchg
add
aaa
xor
sbb
mov
jge
xchg
add
stos
ja
dec
mov
cmp
add
stc
mov
jp
add
icebp
call
mov
xor
cwtl
mov
push
add
add
jle
add
out
cli
in
add
add
xchg
add
cmp
pushf
mov
push
add
xor
test
aad
adc
xchg
add
inc
add
lret
pusha
add
testb
add
int
inc
add
addr16
add
jo
dec
outsb
in
jns
dec
rolb
fcmovnbe
cmp
mov
pusha
add
pop
cld
in
sbb
add
sti
sbb
fadd
mov
jle
fisubl
add
pop
lock
sub
dec
das
out
into
or
add
popa
mov
add
inc
push
add
push
add
test
pop
fdivs
mov
pop
lds
js
mov
add
mov
cmp
test
mov
xor
pop
pop
loope
add
add
cmp
pop
mov
leave
add
out
xchg
add
mov
add
add
movb
add
pop
mov
mov
or
ret
stos
clc
stos
loope
add
pop
pop
or
pop
data16
xchg
add
add
add
xchg
leave
addb
jmp
add
jne
adc
dec
in
add
pop
in
iret
rolb
les
jns
repz
add
outsb
mov
jle
mov
xchg
add
test
sbb
add
dec
sub
das
test
and
clc
or
push
add
add
mov
xor
lret
mov
add
aas
mov
sub
test
jnp
add
add
add
fsubrl
add
and
cld
push
call
xchg
cltd
test
add
into
push
add
mov
dec
cltd
xchg
push
mov
lahf
or
adc
jo
mov
stc
mov
arpl
xchg
mov
mov
add
out
jno
mov
pop
test
add
movb
jnp
add
jecxz
test
jmp
mov
push
add
xchg
movsl
cmpsb
add
cmpsb
add
add
addb
popf
xlat
int3
jbe
mov
add
repz
push
add
adc
add
jno
push
mov
sbb
adc
or
xor
leave
add
adc
int3
stos
cs
add
mov
add
mov
pushf
jnp
cmp
mov
sbbl
add
addb
add
dec
shrl
jno
xchg
loope
test
hlt
add
jle
pop
jo
add
push
add
add
aam
xlat
and
add
add
add
test
leave
jge
add
cmp
add
pop
out
into
dec
jbe
addb
fistpl
cmp
add
loopne
mov
jns
pop
pop
cmc
or
inc
add
mov
xchg
or
repnz
in
pop
cli
xor
and
mov
dec
popf
xchg
add
sbb
add
ja
mov
xor
lret
test
add
add
imul
pop
loop
xor
add
add
add
or
add
push
mov
add
add
pop
outsl
or
sbb
jno,pn
add
mov
add
cltd
sbb
cld
rolb
xor
test
add
sbb
add
add
in
jl,pn
add
add
add
or
push
sub
mov
sub
jo
pop
js
out
mov
dec
rcrl
add
lea
addb
add
mov
pop
pop
sub
in
pop
daa
loope
mov
mov
push
loope
mov
leave
fbstp
ficoml
outsb
adc
push
or
lret
dec
fsubrp
gs
sbb
scas
sub
imul
sbb
lret
xchg
add
adc
insl
jmp
add
add
cmp
jne
add
pop
mov
add
nop
add
adc
cld
shll
add
inc
add
push
add
add
cmpsb
add
add
je
xor
adc
pushf
int
cmp
clc
mov
add
mov
and
add
insb
js
and
cs
dec
push
adc
andl
jne
adc
mov
add
out
cli
adc
dec
push
rolb
in
mov
add
mov
add
mov
add
jle
add
xor
mov
movsl
imul
stos
punpcklbw
mov
movb
add
mov
push
sbb
add
inc
add
jns
dec
out
out
mov
mov
push
lret
pop
inc
mov
adc
test
add
add
add
add
stc
test
mov
add
pop
xlat
sub
cld
pop
jb
ss
cli
nop
add
jmp
add
std
add
mov
leave
xchg
add
outsb
ja
jg
mov
hlt
add
lret
lahf
aam
imul
cmp
xchg
push
sbb
xchg
add
ret
mov
rolb
sub
add
add
sbb
add
add
lahf
gs
loop
mov
fildl
ficoms
shl
pop
stc
push
add
sbb
ds
les
pop
or
add
add
inc
add
sbb
cmp
add
ficoml
int3
inc
add
inc
add
movl
int
insl
push
add
push
mov
into
lods
pop
add
xchg
aam
sti
pop
adc
repz
mov
cltd
adc
das
ds
dec
pop
sbb
inc
bound
mov
add
das
push
icebp
sti
jo
ret
or
add
sub
jne
add
add
mov
sbb
add
inc
add
rolb
insl
jne
popa
jg
sub
add
add
add
add
add
xor
lock
pop
and
lea
mov
pop
and
mov
loope
imul
add
mov
mov
sub
add
xor
mov
add
mov
dec
sbb
addb
pop
stos
jbe
pop
dec
add
mov
jbe
popa
test
add
add
jp
inc
add
add
or
data16
adc
imul
mov
pop
mov
lds
push
cmp
add
inc
sub
mov
and
xor
jne
add
hlt
add
mov
mov
add
out
mov
inc
ja
lahf
out
filds
add
xchg
add
add
aaa
sbb
xor
push
testb
add
rolb
mov
jbe
out
push
sub
fidivrl
pop
cmp
sbbl
add
out
mov
add
inc
jle
sbb
add
push
rorl
movsb
add
mov
push
mov
test
sbb
data16
jo
xor
lahf
adc
add
push
bound
mov
call
mov
add
out
or
inc
add
mov
mov
mov
aam
or
adc
sub
sbb
jmp
lea
mov
ja
jo
outsb
int3
mov
in
loope
add
mov
aas
sbb
fmull
dec
sub
mov
les
add
mov
adc
cmp
add
ljmp
sub
pop
or
les
aam
push
add
mov
pusha
add
pop
jo
addb
sub
sub
adc
pushf
iret
jnp
icebp
aas
cmp
mov
pop
bound
mov
loopne
xchg
popa
inc
add
nop
add
dec
js
repz
mov
mov
mov
cmp
mov
mov
roll
cld
pusha
add
pop
ret
sub
mov
mov
dec
pop
pop
movsl
and
jae
xlat
iret
addb
add
add
add
push
add
rolb
lea
add
stos
jmp
jge
dec
loope
jmp
dec
ret
xchg
add
add
xchg
xlat
repnz
add
add
into
stc
leave
xor
pop
add
add
lock
xchg
add
das
jne
loopne
subl
add
xchg
add
addb
lds
dec
fdivp
xor
add
add
jae
mov
push
add
ficompl
xchg
add
sahf
insb
cmp
rolb
add
bound
mov
movsb
add
and
addb
add
and
mov
mov
or
into
dec
add
in
jecxz
add
xor
xor
mov
adc
lcall
sti
add
adc
out
into
xchg
push
add
test
pop
sub
add
add
add
fwait
and
mov
loop
add
mov
add
jns
add
pushf
and
mov
in
sub
mov
add
add
cmp
rorl
les
in
mov
iret
pushf
and
xor
dec
lds
xchg
add
sarl
add
cmp
pop
dec
add
jb
push
add
je
xlat
in
jl
add
outsb
out
test
jae
stos
imul
sub
pop
test
dec
lds
sbb
mov
add
jae
jae,pn
push
add
mov
iret
lcall
inc
and
aad
or
popf
ljmp
fcoms
add
addb
add
lods
inc
sbbl
addb
ljmp
add
jbe
fadds
jo
fwait
addb
lret
inc
daa
xor
flds
mov
push
icebp
cmp
popf
rcrl
add
cltd
inc
ret
icebp
inc
add
xchg
add
mov
mov
mov
add
add
add
ljmp
or
cmp
jno
hlt
add
mov
sbb
mov
and
mov
inc
add
sub
and
lahf
and
gs
add
pop
fcomps
mov
outsl
pop
push
sub
xor
add
cmpsb
add
rcrl
xchg
pop
and
push
add
pop
xchg
xor
pop
arpl
fucomi
jno
and
mov
in
push
cmpsl
push
test
lock
ret
push
xchg
add
add
add
imul
ljmp
add
push
cltd
js
addb
add
mov
ja
es
sub
dec
xlat
or
sbb
add
mov
add
adc
inc
mov
add
xchg
jns
add
out
jp
push
add
sub
add
xchg
inc
add
jne
add
mov
sub
fwait
icebp
stc
loop
stos
stc
movsl
sbb
js
imul
stos
ror
xlat
dec
jecxz
gs
lcall
fsubr
popf
jno
adc
add
in
jp
insb
mov
mov
es
add
mov
dec
repz
add
stos
xchg
addb
jb
jecxz
jb
jg
dec
pop
push
add
mov
rolb
dec
jle
add
add
add
imul
add
pop
iret
or
mov
xchg
xor
hlt
add
xchg
movsb
add
mov
insl
sarl
outsb
shrl
cld
enter
mov
sbb
push
int
or
add
xor
add
xlat
jb
mov
add
leave
loope
mov
cmp
add
pop
pusha
add
or
lahf
inc
testb
add
mov
jo
add
jae
sbb
inc
and
push
add
add
es
sub
push
add
imul
aad
in
dec
inc
cmp
add
xchg
or
mov
add
add
insb
into
lods
add
add
push
push
add
inc
sbb
mov
ret
xor
add
imul
scas
dec
jb
lds
add
xor
or
loop
andl
call
pushf
addb
pop
dec
add
out
push
mov
add
jno
add
cmovp
iret
icebp
jnp
mov
cmp
add
loop
pusha
add
clc
jl
lcall
add
testl
add
add
mov
add
push
add
xor
mov
rolb
add
xor
mov
jle
add
inc
repz
mov
lcall
loop
sbb
mov
shrl
mov
daa
jmp
add
add
int3
insb
scas
addr16
cwtl
adc
pop
in
in
outsb
dec
push
in
push
add
in
push
add
mov
cld
outsb
repz
ror
shr
imul
push
bound
mov
leave
arpl
scas
lods
lea
icebp
int3
rorl
add
add
jg
add
add
jmp
call
xor
xchg
repz
lahf
mov
cmp
push
add
stos
stos
mov
add
or
push
shll
cmp
pop
lea
call
cld
popa
les
ja
pop
mov
and
add
xchg
add
mov
add
add
cmp
add
add
mov
add
out
sub
repnz
mov
and
add
cmp
iret
and
add
inc
lock
jmp
xor
scas
jo
in
push
add
movsl
je
adc
lret
jle
outsl
mov
add
fbstp
dec
or
add
aad
ret
adc
add
repz
xchg
add
fcmovnu
xchg
add
dec
outsb
push
add
lock
add
mov
inc
add
pop
pop
mov
dec
fisubrl
mov
mov
jno
adc
cmp
and
mov
push
add
sub
mov
add
xlat
dec
pop
pop
scas
adc
sbb
add
push
add
mov
dec
fisubs
scas
rolb
jmp
add
jo
in
mov
mov
add
jnp
mov
fisttpll
and
and
push
aam
sti
int3
mov
std
dec
dec
test
xor
mov
mov
or
pushf
loope
mov
js
and
mov
popf
in
in
xor
or
and
xor
outsb
fs
fsubr
adc
rolb
addb
adc
mov
gs
mov
add
add
mov
rolb
add
std
pop
mov
add
xor
dec
mov
fwait
cwtl
loope
jb
mov
pop
push
mov
roll
add
mov
stos
std
int3
mov
add
inc
scas
jle
fwait
lcall
cltd
sub
adc
insl
aaa
fmuls
mov
dec
rolb
nop
add
add
jl
popf
stos
pusha
add
pop
sti
mov
mov
sub
lcall
loope
bound
mov
insl
icebp
jb
fimuls
mov
add
jecxz
mov
popa
push
add
and
leave
test
stos
push
add
add
std
push
add
sbb
jbe
add
out
xchg
sbb
lock
inc
shll
adc
cmc
mov
bound
mov
push
add
mov
jp
mov
add
mov
add
add
add
lock
sub
into
js
out
add
add
scas
mov
rolb
push
mov
sbb
mov
xor
inc
add
sub
add
sub
add
sbb
add
out
jl
daa
xchg
cmpsl
mov
jecxz
jbe
bound
mov
mov
add
stos
push
mov
sub
mov
les
mov
or
cli
push
add
add
mov
mov
jp
add
sub
cli
iret
xor
push
scas
pop
orl
add
push
add
fwait
out
addb
movsl
and
jb
xor
sbb
dec
cmp
inc
jl
add
xchg
push
mov
add
mov
sbbl
push
cmp
or
add
pop
les
shll
popf
cld
xlat
or
dec
xor
lret
add
add
mov
jle
or
dec
push
add
sub
data16
pusha
add
mov
addb
push
add
push
mov
cmp
rolb
inc
add
add
in
call
jnp
sti
add
mov
pop
pop
push
movsl
pusha
add
adc
cmpsl
out
add
pop
inc
add
push
add
add
add
sbb
adc
adc
int
rolb
adc
and
mov
pop
pop
clc
out
mov
mov
sbb
add
add
add
fdivr
popa
jg
lret
inc
addr16
stc
xor
rolb
cs
and
mov
add
add
lds
sbb
or
enter
sub
add
push
out
adc
add
test
aaa
fisttps
es
sub
dec
push
add
pop
jae
dec
das
dec
mov
mov
add
add
add
mov
xor
add
aam
push
add
add
outsb
lods
mov
jl
inc
add
xchg
add
clc
and
mov
movb
stos
mov
xchg
add
inc
or
adc
dec
xchg
fnsave
add
mov
addb
mov
sub
xor
adc
sbb
dec
ja
ret
add
jo
xchg
jno
js
data16
add
add
fdivs
frstpm(287
test
dec
popf
mov
dec
mov
lcall
add
sbb
sub
popf
mov
mov
outsl
mov
fildl
push
add
ficoml
add
and
add
add
add
inc
add
add
add
inc
mov
sub
xchg
iret
mov
add
stos
insl
mov
mov
add
add
xchg
add
mov
scas
push
add
pop
push
push
add
or
add
add
push
push
and
mov
dec
push
cmp
adc
rcll
add
add
pop
mov
iret
xchg
add
mov
cmp
mov
outsl
rolb
xchg
add
lcall
push
jb
iret
sub
mov
pop
mov
ljmp
inc
add
sbb
data16
add
xchg
adc
je
subl
test
or
add
fdivl
std
mov
and
fucomip
dec
pop
js
mov
out
sbb
aam
insb
cmp
adc
mov
add
or
aas
xchg
add
mov
dec
or
lret
add
mov
add
or
ljmp
and
rolb
mov
add
adc
push
add
mov
lret
cmp
mov
pop
lret
rolb
mov
lock
shrl
add
mov
movb
nop
add
movsb
add
add
add
jae
push
test
push
outsl
mov
add
repz
test
pop
pusha
add
test
jb
les
push
add
add
insb
lods
sti
popf
xchg
add
add
add
test
inc
add
mov
add
in
fsubrs
push
add
add
sub
rolb
out
add
cli
push
add
add
addb
add
add
pop
scas
jnp
add
cs
add
add
xchg
pop
mov
add
add
add
cli
les
sarl
inc
add
mov
jg
ret
rolb
jge
bound
mov
out
inc
add
and
icebp
imul
scas
push
add
adc
add
mov
mull
add
add
and
mov
jno
add
add
xor
push
add
sub
out
repz
lahf
scas
dec
mov
shl
add
push
add
rcr
mov
or
lahf
psadbw
pusha
add
dec
data16
add
decb
add
jo
cmp
jge
rcl
or
add
adc
add
dec
in
addb
inc
add
stos
setg
add
and
dec
xchg
addb
push
add
sub
xlat
inc
add
jb
into
add
add
add
or
jmp
add
enter
sbb
jmp
add
add
cltd
pusha
add
mov
add
mov
add
enter
add
inc
add
add
sbb
add
pop
pop
push
cmpsl
loope
jne
add
push
add
mov
pop
test
mov
lahf
mov
adc
cmpl
cmp
and
mov
add
std
jg
sbb
or
popf
xchg
and
dec
ret
add
xor
das
push
push
sub
add
pop
pushf
adc
dec
adc
ret
xchg
add
scas
or
cmpsl
dec
dec
daa
ja
jl
sbb
add
add
xchg
mov
lahf
and
dec
xlat
loope
rolb
int3
pop
add
mov
mov
xchg
mov
sarl
pop
mov
int3
cmp
add
dec
hlt
add
rolb
mov
orl
inc
repnz
jg
fwait
pop
lock
jle
pop
cld
pop
add
add
add
dec
xchg
cmp
add
sbb
add
mov
lock
add
mov
pop
hlt
add
icebp
aam
dec
pop
aas
pushf
and
leave
push
mov
mov
add
jle
add
dec
cmp
adc
rolb
fisubs
pushf
lret
pusha
add
add
push
loop
jg
adc
add
add
push
add
or
fsub
add
loope
add
inc
add
add
jno
mov
add
nop
add
test
dec
in
popa
loop
orl
xchg
sbb
inc
adc
mov
push
mov
add
cmc
lock
mov
jp
pop
mov
add
xchg
push
add
fucomip
je
stos
dec
add
xchg
add
xchg
cld
pop
rolb
cltd
cs
iret
and
mov
or
add
rolb
in
dec
pop
sbb
jmp
xor
inc
xchg
add
add
push
add
inc
add
loopne
clc
push
add
jp
add
pop
mov
ret
adc
lcall
xor
sti
repz
sub
movsl
mov
in
pop
push
jg
loop
enter
adc
mov
es
cli
inc
add
jge
add
push
mov
add
add
roll
addb
xor
add
jge
dec
cmp
mov
cld
popa
mov
and
leave
icebp
xor
push
xchg
add
jle
mov
add
or
xor
loope
xchg
pause
add
movb
add
into
sbb
shrl
mov
je
adc
std
pop
or
jl
add
or
repz
mov
addr16
push
and
aaa
jecxz
lret
cwtl
data16
mov
int3
add
bound
mov
add
pushf
add
mov
push
cmpl
das
xchg
sbb
cli
and
add
adc
adc
stos
mov
add
add
xchg
add
popa
fcomi
add
add
add
add
hlt
add
sahf
pop
stos
stc
scas
pop
lea
add
pop
mov
pop
mov
add
add
bound
mov
add
xchg
lret
push
add
loope
add
popf
add
in
rolb
imul
sahf
xchg
pop
sub
add
pop
adc
stos
in
mov
hlt
add
cmp
mov
mov
rolb
mov
es
add
lret
sbb
pop
fdivl
aam
out
icebp
test
add
sahf
sbb
mov
ss
mov
and
mov
scas
cmp
add
add
addr16
add
add
sub
lods
add
mov
test
cwtl
xor
mov
stos
xor
add
add
sahf
rolb
cs
pop
inc
fldl
add
je
add
add
adc
jle
int3
pop
xchg
out
jp
add
add
int
xor
add
add
in
push
fwait
push
add
add
and
fidivrs
mov
cmpsb
add
add
add
add
rcll
push
add
dec
popf
xlat
inc
xor
add
jmp
ret
mov
ret
add
inc
add
add
mov
mov
add
add
setnp
lcall
mov
jbe
lock
add
pop
sub
add
daa
in
mov
add
sbb
and
or
add
cmp
add
inc
xor
add
incb
pop
outsb
leave
mov
cli
jecxz
outsl
insb
pop
insb
sub
sbb
test
out
push
add
mov
add
add
xchg
add
add
movb
add
add
dec
iret
jns
js
push
add
loop
addb
push
pop
push
add
outsb
sub
and
xor
push
add
cmc
adc
loopne
repnz
les
js
addb
add
mov
pop
dec
sub
add
cs
mov
scas
sub
test
cmpsl
pop
idivl
sbb
stos
sbb
aad
incl
pop
enter
out
stos
pop
mov
xor
cmpsl
pop
or
jecxz
add
lret
pop
push
sti
mov
dec
pop
xchg
xor
add
mov
outsb
cmpsl
in
and
mov
or
mov
les
push
add
mov
lds
mov
adc
jo
inc
add
mov
add
cmc
stc
js
add
fwait
and
mov
push
lea
jmp
daa
out
mov
dec
jmp
pop
mov
loop
pop
add
mov
add
enter
dec
push
add
adc
rolb
cs
test
inc
cltd
testb
lods
xchg
pop
test
mov
mov
in
push
pop
sub
mov
data16
adc
add
iret
popa
push
add
xchg
add
add
aam
add
ja
repz
jp
sahf
aam
gs
dec
add
add
add
xchg
adc
and
mov
sbb
sub
arpl
add
add
add
pop
xchg
add
add
dec
cwtl
mov
add
mov
repz
ret
adc
pop
stos
fldenv
adc
sub
add
add
add
add
add
pop
or
sbb
push
daa
test
add
mov
sbb
movsb
add
add
popf
mov
inc
add
add
add
sub
add
pop
pop
pop
data16
jl
inc
repnz
add
inc
add
add
sarl
pop
xor
shll
inc
loop
push
mov
add
add
adc
add
add
or
outsb
pop
inc
decl
cmp
movb
push
and
xor
int3
push
add
or
jg
push
adc
stos
push
add
hlt
add
mov
mov
enter
testl
aam
mov
mov
pop
cmc
xchg
aaa
les
mov
int
fstps
pop
int3
aaa
adc
sahf
repnz
dec
test
push
xor
or
mov
dec
inc
add
adc
mov
ficoms
jecxz
jl
mov
xchg
jp
outsl
cmp
les
inc
add
hlt
add
add
xchg
add
add
add
mov
out
es
add
jge
sbb
add
iret
fidivs
addl
add
ret
adc
pop
and
shll
add
mov
sub
rdmsr
add
inc
add
fistps
sti
stos
loope
mov
add
jno
and
add
push
add
add
or
subl
add
xor
push
mov
jno
rolb
add
add
stc
add
sub
add
add
pop
inc
jne
mov
movb
sub
push
mov
dec
mov
add
ret
mov
movsb
add
inc
add
pop
pop
inc
add
pop
mov
add
imul
cld
dec
outsl
sahf
xchg
add
lock
inc
add
out
into
inc
out
mov
jle
add
xchg
add
add
adc
mov
pop
nop
add
lods
sbb
dec
movl
lcall
mov
add
das
cmp
cmp
mov
dec
popl
pop
inc
add
add
add
add
out
add
add
js
push
add
add
jb
mov
jb
jae
cmp
ljmp
shll
add
mov
sbb
aas
adc
jno
sbb
push
ja
lods
add
mov
cwtl
xchg
adc
aas
adc
mov
mov
addr16
in
pop
jae
add
aas
out
mov
push
sbb
add
mov
js
sub
iret
clc
test
add
pop
es
dec
in
sub
jbe
pop
push
add
mov
sbb
pop
call
sbb
rolb
inc
repz
out
call
mov
int3
mov
imul
add
add
xchg
stos
test
add
dec
mov
lea
add
stos
std
push
push
mov
mov
jbe
cmpsb
add
shll
mov
repnz
add
jns
ret
aaa
sbb
add
add
add
pop
data16
xor
popf
cli
mov
add
add
and
sub
mov
jecxz
inc
add
add
rcll
and
outsl
or
call
mov
dec
adcl
xchg
fcmovu
ljmp
add
mov
jb
loope
inc
push
and
add
or
call
add
add
jle
mov
fistpl
add
mov
mov
imul
add
mov
js
movb
leave
nop
add
int
add
or
add
enter
mov
mov
mov
mov
push
add
xchg
fwait
scas
jg
add
push
mov
add
ljmp
dec
ret
int
popf
pusha
add
cmpsl
rolb
cli
inc
add
pop
pop
arpl
add
ja
xchg
incl
xor
jne
add
jnp
dec
mov
xor
imul
pop
test
add
addb
or
pop
imul
pop
cmp
add
aam
mov
scas
mov
and
mov
push
add
or
enter
jle
imull
lock
cmp
out
push
enter
add
leave
call
cltd
out
pop
std
fcomip
dec
subl
or
add
lods
mov
mov
dec
adc
lret
rorl
movb
mov
pop
mov
pop
addl
mov
add
mov
mov
cmp
pop
lods
js
test
pop
add
mov
add
add
add
add
pop
push
aam
dec
in
ja
dec
lret
ljmp
fcmovb
sbb
lea
adc
mov
cli
rolb
adc
lock
or
sub
add
add
add
add
or
mov
add
popa
push
xchg
inc
inc
add
or
add
insb
in
jmp
or
or
and
mov
and
push
fwait
pop
mov
add
jmp
add
add
add
sub
dec
xchg
add
test
lret
sub
sbb
add
fs
testb
add
push
add
push
add
ret
add
aam
xor
add
dec
cmp
and
mov
add
adc
jecxz
fsubrs
lcall
add
push
add
add
imul
das
dec
push
mov
xor
add
jp
add
das
test
pop
sub
outsl
bound
mov
repnz
ficoml
xlat
aas
loopne
mov
push
add
add
ja
faddl
jo
inc
add
inc
dec
jmp
std
cmp
pop
iret
mov
add
test
push
mov
jge
popf
jecxz
iret
lahf
movb
and
push
push
add
add
xchg
stos
imul
add
into
fldcw
adc
dec
movl
mov
add
mov
sahf
out
dec
rolb
pop
xchg
addb
add
lret
mov
aad
add
sub
enter
add
pusha
add
dec
lret
and
xor
ja
aas
icebp
push
add
lds
mov
scas
jp
icebp
sbb
add
pop
sbb
mov
add
iret
push
sub
add
xor
jnp
add
add
mov
add
sti
xor
mov
sti
repnz
je
decl
pop
ljmp
imul
cld
jae
cld
adc
ret
add
add
add
lds
mov
mov
in
fbld
mov
mov
mov
push
or
add
mov
and
mov
aas
imul
ja
add
adcl
daa
fdivrl
xor
sub
add
mov
movl
add
lret
fwait
cmc
or
push
add
xorl
push
nop
add
add
push
adc
dec
cli
xor
xor
in
jns,pn
inc
fwait
push
add
lods
inc
test
int3
sub
add
sub
pushf
fcmovnb
add
mov
adc
add
add
nop
add
push
add
push
add
inc
sbb
add
popa
xor
fs
or
movsl
das
movsl
mov
out
mov
add
iret
xlat
call
mov
add
rcll
and
ljmp
mov
add
add
pop
jbe
insl
jno
add
inc
add
fnstenv
adc
mov
add
ret
fimuls
enter
stos
adc
add
mov
scas
adc
sbb
fiaddl
lods
and
pop
testb
push
test
dec
imul
fldl
repz
and
mov
fadd
add
adc
jae
jmp
mov
add
jp
mov
popa
imul
mov
ss
add
in
xlat
or
mov
data16
sbb
add
sub
push
mov
pop
lods
fucomp
imul
add
mov
add
push
popf
repnz
iret
mov
add
icebp
test
sbb
scas
popf
and
cmpsb
add
add
jns
insl
sbb
add
sbb
sbb
push
add
add
lahf
add
std
movsb
add
dec
push
add
pop
cltd
push
add
scas
xchg
popf
sbb
jno
add
pop
and
mov
add
add
cmp
cmpsl
popf
loopne
aas
jbe
adc
movq
mov
std
xor
pop
mov
out
push
ret
add
movb
mov
add
mov
mov
nop
add
or
add
push
add
cwtl
jno
rol
add
test
mov
aam
or
mov
inc
dec
rolb
cs
jno
pop
loope
dec
jne
ds
es
ja
mov
scas
mov
cltd
cmc
into
imul
mov
and
add
mov
pusha
add
insl
loopne
fs
iret
mov
inc
je
xor
imul
add
jno
mov
add
mov
aas
ja
jnp
add
add
add
add
add
gs
testb
cmp
pop
xor
add
add
xchg
add
and
repz
sub
addb
scas
out
jbe
inc
add
dec
add
add
ret
dec
mov
add
add
in
loopne
sbb
data16
add
inc
add
mov
add
pop
lahf
mov
dec
icebp
jle
xchg
adc
sub
rolb
dec
ds
lds
sub
add
xor
cmp
out
js
xor
mov
add
add
add
int3
adc
imul
mov
add
outsb
fcmovbe
fimull
add
cld
fmull
add
cld
pop
cmp
scas
std
adc
sub
sub
sub
mov
addb
add
pusha
add
and
mov
add
add
aam
mov
pop
ret
sahf
rolb
ds
add
add
ljmp
add
push
add
add
mov
add
and
mov
fnstcw
fwait
sbb
in
repnz
mov
repz
xchg
repnz
add
sbb
mov
add
lods
mov
add
add
xchg
add
sub
add
repz
mov
add
test
imul
xor
add
add
or
cld
push
pop
inc
add
mov
out
sti
pushf
fdivrl
repz
mov
push
inc
in
mov
dec
push
add
add
pop
jg
mov
call
add
adc
mov
or
or
out
mov
mov
jl
add
add
adcl
das
xchg
add
add
and
add
add
xchg
xor
mov
add
add
loopne
cmpsb
add
pop
pop
aam
dec
pop
cmp
add
xor
push
add
pop
in
aad
iret
test
outsl
fdivp
sub
jle
mov
shl
inc
add
mov
testb
adc
add
scas
xchg
pop
imul
and
mov
xor
add
dec
and
mov
cmpsl
xor
sahf
repnz
push
inc
add
bound
mov
add
fcomip
lret
mov
cmc
pop
mov
mov
pop
mov
mov
push
add
mov
or
add
add
add
test
add
add
sbb
cmpl
adc
and
mov
add
jno
mov
fmull
add
adc
lret
mov
add
lds
std
cmp
ljmp
inc
rolb
mov
daa
mov
fstpt
popa
adc
mov
ljmp
adc
jge
inc
add
ds
hlt
add
in
arpl
adc
add
sub
fmul
lock
add
add
jne
out
pop
and
mov
pop
mov
add
icebp
repz
out
clc
pminub
add
push
add
mov
test
fwait
pop
addb
add
lret
imul
jp
jg
add
add
nop
pop
sbb
jnp
jle
add
cli
cmp
fcmovne
add
mov
push
add
testl
mov
sti
addb
add
adc
push
add
mov
or
sub
sub
lret
adc
add
mov
add
fnstcw
enter
rolb
lea
sbb
repz
lret
aad
int3
ret
cs
xor
ficoms
sbb
or
in
lret
cmpsb
add
loope
cmc
out
or
movl
in
cmp
sbb
add
pop
and
insb
ret
cltd
mov
xchg
add
mov
loop
enter
add
ret
dec
mov
dec
and
out
dec
push
add
adc
push
add
add
gs
es
add
movsb
add
add
add
stos
test
mov
jmp
or
jecxz
lock
je
popa
sbb
xor
cmp
mov
and
cmovbe
std
push
add
out
jne
add
leave
adc
rolb
adc
inc
add
add
or
jo
jge
cli
popa
leave
clc
mov
mov
arpl
cmpsl
rolb
pop
les
pop
and
push
add
gs
cmp
nop
add
movzwl
mov
cmp
cmp
leave
xchg
dec
and
add
inc
add
testb
les
push
add
jnp
mov
add
cmc
or
jg
add
repz
testb
xchg
add
and
add
int
outsl
jns
sar
bound
mov
add
adc
jmp
xchg
cmpsl
and
fwait
dec
xchg
ret
add
cmp
pop
add
lret
ljmp
fldt
add
cmc
stos
dec
mov
add
gs
les
pusha
add
mov
add
js
cltd
xchg
xor
xchg
or
movb
dec
mov
sti
ljmp
inc
add
mov
ficoms
mov
xorl
dec
test
add
add
repnz
xor
mov
sub
adc
jmp
add
bound
mov
dec
fucomip
das
lahf
add
jmp
add
les
jno
and
sub
cmp
add
xlat
shl
xchg
add
and
mov
add
add
stos
cmp
test
add
add
add
add
mov
ficoms
add
sbb
xchg
mov
add
shll
pop
sub
adc
inc
add
push
lods
loop
mov
les
jo
cld
pop
add
xor
sbb
inc
int
cmp
mov
add
cmp
cmp
data16
insb
push
push
add
repnz
pop
rolb
jne
rolb
movsl
and
sub
dec
jnp
mov
in
enter
jecxz
xchg
add
pop
pusha
add
jne
jb
rolb
add
aaa
addb
lock
pop
dec
and
jo
imul
or
hlt
add
andl
mov
xchg
out
bound
mov
add
or
nop
add
jle
jb
lods
lea
mov
insb
pushf
sbb
add
jl
call
fistpl
mov
add
movb
mov
add
xchg
push
add
xor
inc
lret
fmul
cwtl
test
add
add
movb
add
push
add
mov
and
mov
add
inc
or
inc
inc
add
xchg
aam
jns
sti
movsb
add
and
stos
fwait
into
and
cld
test
add
lods
ja
andl
inc
js
push
add
out
imul
and
out
arpl
mov
mov
ja
dec
repnz
loope
sub
pop
popf
popa
test
iret
mov
loope
add
mov
add
add
dec
test
out
xchg
aaa
push
inc
add
add
insl
dec
sbb
sbb
jne
add
add
pop
nop
add
ljmp
xchg
cmp
add
add
mov
shrl
cs
add
add
sub
je
iret
jl
mov
insb
jnp
xchg
jb
stos
stos
jno
add
add
rolb
xchg
add
in
repnz
mov
inc
add
mov
sbb
add
shrl
xor
xor
or
add
add
or
sbb
add
mov
movb
xor
insl
adcl
jmp
xchg
add
mov
add
mov
pusha
add
mov
add
cmp
mov
add
sbb
cld
test
loopne
popf
jnp
add
sbb
inc
add
mov
add
add
jb
in
pushf
push
add
addr16
add
mov
add
add
xchg
mov
cld
lods
je
mov
cmp
mov
sbb
mov
or
mov
add
add
adc
roll
add
add
inc
add
inc
loopne
aaa
jae
push
xchg
add
xchg
pusha
add
xor
push
test
add
enter
sbb
add
loope
add
arpl
call
scas
lahf
mov
sbb
add
gs
dec
fwait
jae
push
mov
add
or
loopne
mov
add
outsl
push
movb
fmul
lods
dec
sub
movsb
add
aam
mov
addb
add
mov
mov
in
into
inc
add
iret
mov
add
pushf
pop
mov
push
add
cmp
or
lods
faddl
add
sub
sub
jle
cli
sarl
mov
or
hlt
add
repz
pop
xchg
add
push
add
add
aam
inc
add
fdivl
add
sahf
sub
add
sbb
xchg
mov
xchg
rolb
cltd
lods
jge
inc
xchg
add
adc
rsqrtps
in
lahf
inc
add
int
sub
xchg
mov
sub
aad
sub
add
add
xchg
rcll
and
mov
mov
in
inc
sbb
fcompl
add
pop
sub
mov
sahf
mov
popf
lcall
nop
add
add
mov
jbe
test
arpl
adc
sub
add
xorl
add
add
jmp
add
leave
and
mov
cltd
cmpsb
add
add
pop
add
jne
cmc
je
pop
addb
dec
cltd
dec
sbb
nop
add
mov
sarl
xchg
add
lods
fs
add
mov
sub
add
add
add
inc
into
push
add
or
imull
test
jnp
scas
loopne
and
mov
push
add
add
add
xchg
jnp
add
add
jae
xchg
and
xchg
ret
or
scas
mov
mov
stos
xchg
add
inc
push
movsl
rcll
xchg
pop
stos
inc
ds
mov
sbb
rolb
ja
lods
mov
jns
jp
add
hlt
add
mov
push
dec
rorl
add
add
insb
jmp
cmp
add
or
add
test
adcl
pushl
test
add
push
jns
in
movsl
mov
push
or
ficomps
fnstenv
add
xchg
add
popa
les
xchg
add
add
lret
add
loope
movb
add
push
add
lock
jne
add
push
add
add
mov
sahf
and
dec
jge
pop
addr16
push
add
add
mov
add
in
rolb
push
add
lahf
std
or
pop
fmuls
sub
insl
fstl
xchg
adc
pop
mov
inc
add
add
add
inc
lods
xor
rolb
cmp
push
in
push
or
xchg
add
push
add
rcr
outsb
push
mov
testb
add
mov
pshufw
nop
add
push
add
fidivl
movd
push
lds
sti
sub
imul
inc
add
fs
jns
pop
xchg
add
fisttpll
pop
into
jno
xchg
cltd
outsl
enter
pop
or
fldenv
mov
cmp
std
in
popa
pushf
rcll
jnp
insb
shll
fisubs
push
add
movsb
add
inc
or
push
add
loopne
jg
pusha
add
scas
mov
addl
cmp
jnp
lds
sbb
mov
add
add
sbb
mov
pusha
add
mov
stos
mov
add
xor
jnp
xchg
add
jae
xor
cmc
stc
pop
mov
jle
lret
sub
jecxz
icebp
pop
pop
mov
add
add
jge
mov
popf
lahf
sub
mov
pop
fidivrs
mov
add
scas
call
dec
or
add
arpl
add
jge
sbb
inc
jmp
std
xor
adc
add
cltd
addb
cmp
scas
cwtl
repnz
mov
xor
mov
add
add
repnz
xchg
lahf
and
mov
and
out
adc
out
in
insl
into
jmp
adc
push
test
add
mov
mov
jne
out
add
sahf
fdivrs
call
dec
gs
sub
pop
out
and
cmpsb
add
push
add
mov
iret
cmp
rolb
mov
mov
add
add
add
mov
mov
add
or
aam
stos
inc
add
loop
jae
popf
sarl
add
aas
mov
add
cmp
add
add
add
das
jne
adc
add
inc
add
jmp
add
add
mov
add
mov
add
pop
in
out
add
addr16
mov
cmp
cmp
insl
jne
adc
lea
rorl
addb
fbld
add
add
adc
in
or
fisubrl
lret
shll
nop
add
jl
test
mov
mov
add
cmp
call
ds
jnp
dec
pop
xor
loopne
test
lret
push
cmp
mov
push
add
jmp
push
sbbl
inc
pop
test
fistl
add
or
outsb
ja
mov
add
fwait
insl
stos
ret
out
sahf
push
lods
cmp
add
dec
and
and
int
add
xchg
or
xor
push
add
push
add
xchg
dec
add
cmp
add
sbb
add
add
ja
xlat
add
sbb
add
add
jbe
call
pop
mov
add
nop
add
or
add
mov
add
add
mov
in
call
xor
sub
lret
mov
xor
fdivrs
mov
inc
pop
enter
jl
add
mov
mov
add
notl
sbb
mov
add
outsl
pop
xor
lcall
into
push
addb
sahf
mov
prefetcht2
add
sub
add
sbb
mov
add
aas
cmp
mov
add
push
pop
lock
add
xor
shrl
xor
mov
add
in
pusha
add
push
loope
insl
mov
or
rolb
dec
xor
pop
addb
and
addb
popa
arpl
mov
sub
add
fucomip
gs
scas
call
inc
iret
jno
add
cmpsl
xchg
inc
add
mov
bswap
cwtl
imul
sti
addb
xor
das
jns
iret
dec
rolb
push
jmp
mov
dec
mov
jo
dec
test
inc
ret
rorl
aad
aas
clc
bswap
in
pusha
add
add
cld
mov
add
add
leave
andl
outsl
mov
or
movsl
lcall
add
xchg
add
inc
xor
jnp
jg
add
add
xor
add
add
les
jmp
add
in
dec
add
add
add
xor
cli
xchg
add
add
pop
cmpl
add
lock
data16
add
add
add
adc
scas
in
xor
mov
rolb
add
daa
and
or
push
xchg
leave
bound
mov
out
lret
lea
and
jle
lds
sub
add
push
data16
add
fcompl
add
add
add
add
pop
add
pop
or
popf
insb
lahf
add
mov
test
xchg
nop
add
hlt
add
into
data16
add
or
bound
mov
add
push
mov
mov
fisubl
xchg
mov
add
mov
mov
rolb
repz
add
outsl
jecxz
mov
push
add
jb
dec
idivl
sbb
add
das
divl
scas
mov
or
test
push
pop
push
jmp
ljmp
cwtl
jge
lods
movsl
movb
ficomps
loopne
xor
aaa
dec
adc
mov
je
in
inc
inc
add
pop
nop
add
mov
add
in
cli
sub
add
mov
mov
add
push
add
add
add
add
mov
add
loopne
inc
mov
mov
and
fildll
addb
xor
xor
dec
pop
lret
icebp
sub
mov
outsb
inc
add
add
into
lods
in
movsb
add
sbb
outsl
mov
add
xor
fnstcw
push
add
add
sbbl
add
pop
mov
cwtl
adc
imul
add
add
inc
add
mov
in
dec
cwtl
vpsadbw
popf
jl
cmpl
lods
inc
add
jno
out
xchg
or
in
sbb
addb
ljmp
add
add
in
fisubrl
inc
fimull
lds
mov
mov
decl
add
loopne
dec
in
sar
and
and
add
jo
aam
push
daa
aaa
inc
in
cmp
les
cld
test
add
inc
add
add
mov
push
add
test
movb
insl
add
add
add
dec
add
jg
cmp
daa
in
add
add
push
add
mov
mov
add
add
das
sbb
mov
sbb
add
in
push
add
lods
jb
gs
add
and
add
add
push
add
jp
les
add
push
cs
mov
mov
mov
add
stos
pop
inc
jb
call
mov
inc
add
cmp
add
leave
mov
bound
mov
mov
or
add
add
cmp
popf
rolb
cmp
aaa
mov
jge
rolb
test
bound
mov
pop
test
cmpsl
loop
inc
lcall
cwtl
ret
testl
arpl
xchg
add
cli
shll
add
add
das
mov
jne
jg
lea
inc
jo
mov
pop
xlat
jbe
cmp
add
cmc
xor
ja
add
aad
add
fbld
add
add
mov
jno
inc
add
add
add
mov
mov
idivl
fisttpll
sbb
icebp
push
adc
out
add
add
add
data16
add
xor
sahf
stos
xor
in
sbb
add
out
fwait
dec
mov
hlt
add
pop
add
add
jle
mov
add
add
jne
add
or
add
mov
sub
sub
jbe
adc
pop
inc
add
add
pop
push
pop
lds
add
outsl
cmpsb
add
test
pusha
add
out
loop
mov
cli
push
add
scas
int
add
add
add
cli
addr16
pop
lahf
addr16
bound
mov
xorl
inc
push
aad
add
push
add
push
add
mov
pop
aad
add
or
addb
add
lods
pop
fdivr
mov
cli
outsb
mov
loop
loop
icebp
les
inc
add
nop
add
mov
add
mov
add
mov
dec
dec
xchg
add
add
sbb
add
and
inc
add
cs
add
dec
scas
pop
mov
adc
in
pop
add
aam
mov
movb
cmpsb
add
add
lret
inc
add
pop
mov
int
add
add
mov
add
add
aad
inc
add
add
add
or
fsubr
ret
test
jp
adc
add
bound
mov
add
add
leave
andl
aam
lret
outsl
pop
add
mov
shl
int3
sub
movb
jbe
cs
add
aas
sub
in
test
ret
dec
or
repnz
adc
sub
test
xor
add
outsb
cmp
int3
cmp
cli
enter
inc
or
xor
mov
cmpsl
adc
ret
add
fistpll
vpcmpeqw
add
add
push
pop
fiadds
mov
lcall
fistps
add
mov
sub
add
xor
insl
test
loop
out
loop
and
cmp
push
mov
xlat
push
add
push
or
jmp
add
movsb
add
scas
sbb
add
scas
notl
add
aam
push
fildll
repz
lret
jns
add
add
push
rolb
xor
add
cmp
pop
inc
aaa
std
xchg
jle
fisttpll
add
xlat
pop
add
xchg
mov
in
lods
movsl
iret
mov
add
add
add
xor
mov
or
test
cwtl
mov
xor
test
cmpsb
add
add
push
add
jecxz
rcl
add
rolb
xchg
add
loope
pop
lds
out
add
movb
push
hlt
add
add
pop
add
add
flds
inc
add
add
cmp
sarl
in
cmpsb
add
movsl
nop
add
add
imul
test
add
add
stos
push
and
popa
movsb
add
lock
arpl
loop
aam
xchg
dec
lret
into
inc
add
out
lea
add
cmp
add
xor
cwtl
cmp
popa
pop
pop
cwtl
sbb
add
sbb
add
or
jp
inc
add
add
add
jge
add
xor
mov
mov
sbb
add
fcoms
add
add
add
xchg
add
lds
scas
les
arpl
jno
pop
sbb
pushf
mov
jnp
lds
rolb
inc
add
add
and
mov
xchg
add
sub
push
inc
add
add
add
mov
add
and
xor
arpl
add
arpl
popa
or
add
aam
fiaddl
ljmp
or
call
sub
movb
add
imul
lret
pushf
adc
add
sbb
mov
mov
add
stc
rolb
pop
repz
mov
mov
add
mov
push
add
in
clc
aad
lods
push
fwait
adc
test
enter
pavgb
aam
popa
push
add
fisttps
mov
gs
add
addb
hlt
add
pop
xorl
iret
add
cwtl
std
test
mov
ljmp
add
jp
push
test
add
jle
add
test
add
add
add
pop
pop
cs
repnz
lret
cmp
stos
out
lahf
dec
push
add
mov
mov
add
lods
ja
add
in
mov
in
popa
daa
stos
pop
popa
dec
fidivl
cmp
mov
inc
rolb
clc
mov
add
das
int
cmp
push
add
add
add
jp
push
add
add
test
push
mov
push
add
add
cs
add
rolb
das
add
add
mov
clc
mov
loopne
lcall
sbb
test
pop
pop
into
dec
or
arpl
add
add
add
out
add
jmp
mov
push
xor
stos
mov
mov
push
add
add
nop
add
mov
mov
push
add
add
or
leave
push
mov
adc
jo
push
pop
cmp
inc
add
add
add
fcmovnbe
add
sub
add
xchg
xor
test
xchg
jns
add
add
mov
cmp
cmc
outsb
cmpsl
xchg
clc
outsb
add
in
and
dec
dec
jne
jbe
dec
cmc
outsl
les
xchg
lds
out
add
xchg
add
jle
mov
add
cmp
pop
lds
sbb
add
add
add
xchg
or
std
repnz
sahf
out
int
add
sbb
add
mov
sub
add
jmp
jne
add
push
dec
andl
mov
clc
inc
add
in
pusha
add
iret
test
jns
mov
stos
out
lock
mov
hlt
add
mov
add
push
cs
push
sub
cmp
dec
dec
clc
std
xor
mov
imul
mov
add
add
dec
movsl
cld
decb
add
popa
mov
rolb
add
xlat
jl
test
add
adc
ficompl
test
adc
mov
pushf
jae
pop
add
mov
adc
jbe
cmp
add
add
mov
mov
scas
pop
std
test
cwtl
inc
add
sbb
add
inc
fstl
in
jnp
scas
cmp
push
add
adc
pop
imul
rolb
adc
xchg
add
add
hlt
add
jl
push
xor
ds
mov
aam
lock
mov
mov
push
add
push
add
mov
daa
rolb
add
hlt
add
jmp
mov
add
mov
dec
fwait
dec
mov
sbb
jb
incb
lods
push
mov
add
scas
ds
or
add
add
adc
lea
out
jns
mov
add
add
mov
dec
cmp
or
mov
rolb
scas
xchg
icebp
mov
testb
in
mov
add
outsb
mov
jo
xor
add
out
xor
and
add
jge
nopl
add
add
lcall
out
in
cld
fnsave
jae
aad
jo
inc
add
add
add
ja
sbb
push
add
dec
push
int
repz
add
gs
hlt
add
testb
add
int
and
xchg
add
add
popf
out
mov
leave
xchg
add
lods
lods
ret
int3
push
or
addr16
pop
adc
add
imul
add
mov
mov
cmp
add
inc
add
enter
sub
add
rolb
in
test
xor
test
add
xor
rorl
idivl
sahf
jae
add
test
pop
leave
and
hlt
add
mov
lahf
mov
xor
fldt
mov
pop
ljmp
rcl
jo
push
fbstp
dec
fnsave
add
add
pop
iret
repnz
jmp
fisttpll
jmp
add
add
add
inc
mov
add
add
daa
imul
jg
cmpsl
mov
sbb
setle
mov
movsb
add
jle
xchg
rolb
cli
inc
push
call
xchg
fstpt
les
or
xchg
inc
fimull
jle
popf
cmp
das
addr16
xchg
imul
push
add
lret
jbe
mov
pushf
rolb
xor
aam
xchg
pop
push
add
push
xchg
cwtl
aad
cmp
pop
add
mov
add
out
rolb
add
mov
add
stc
call
push
add
int3
jo
shrl
add
ficoml
add
pop
jp
pop
push
add
mov
mov
pop
dec
push
xor
mov
dec
push
add
dec
lret
add
xor
scas
ret
and
or
pop
or
dec
or
lods
mov
add
and
mov
mov
std
int
dec
outsl
mov
int3
test
xchg
add
add
add
add
add
and
mov
sysexit
aad
mov
mov
or
inc
mov
add
add
mov
add
inc
add
mov
rcrl
mov
xor
or
repnz
mov
ljmp
je
or
mov
add
add
es
movl
push
add
add
jns,pt
mov
xchg
add
inc
add
dec
or
rolb
sub
int3
pop
aad
lcall
add
leave
cmp
add
jne
dec
aaa
fimuls
xor
mov
testb
rolb
jno
out
xchg
cmpsl
cmp
jge,pt
add
inc
add
add
divl
sub
add
adc
add
cmpsl
pop
out
ret
push
test
icebp
sti
mov
add
pop
lods
pop
push
add
dec
dec
sub
vmread
mov
lock
add
add
call
in
mov
arpl
mov
pop
fisubrl
push
data16
xchg
cmp
js
xchg
add
dec
adc
add
js
sub
in
pop
adc
sub
ja
xor
cmpsl
aad
mov
lds
ds
pop
insb
imul
add
add
inc
add
adc
stc
out
cmp
add
mov
aam
xchg
jbe
sub
test
xchg
add
repz
repz
add
inc
mov
pop
cmpsl
mov
rolb
ja
rcrl
cld
push
add
cmc
mov
fdivs
rcrl
fnsave
cltd
sbb
push
add
cmp
add
xor
rolb
mov
inc
mov
push
add
add
mov
add
xchg
add
xchg
add
dec
sbb
mov
popa
or
mov
or
jge
mov
fwait
aaa
and
mov
rolb
out
mov
add
stos
into
mov
and
mov
movsl
shl
int
xchg
add
add
mov
add
rolb
movsl
iret
fsubl
mov
push
jne
leave
mov
scas
or
add
push
add
clc
shll
jo
movsb
add
xchg
add
xchg
ss
sbb
add
test
xor
enter
cmp
xchg
add
add
aam
pop
sub
cmp
xlat
jo
call
inc
add
mov
jl
mov
xor
sub
add
jge
add
mov
sub
dec
loopne
xchg
add
add
add
das
sbb
iret
pop
aam
adc
sbb
rolb
mov
fimull
cli
or
mov
leave
aas
out
mov
dec
xchg
arpl
and
add
pushf
jns
add
mov
dec
aam
movsb
add
jmp
xor
mov
add
inc
bound
mov
mov
repz
mov
add
jbe
sub
lds
ljmp
push
add
cmp
add
xchg
mov
test
std
frstor
mov
sub
jae
leave
addr16
dec
lods
addb
out
and
mov
xor
mov
cli
mov
movb
jmp
pop
push
daa
sub
add
dec
inc
add
aas
mov
sub
pop
ffreep
js
add
fadds
mov
add
add
add
sar
push
add
es
add
rolb
and
push
add
outsb
cmpsl
or
add
leave
int
hlt
add
repz
mov
lea
push
add
xor
add
subl
sbb
mov
add
inc
aas
ret
lds
pop
pop
inc
add
pop
add
mov
sub
add
ret
and
mov
add
xor
adc
mov
xor
and
add
insb
les
cmp
pop
sub
movsb
add
scas
ja
add
sub
sahf
mov
into
bound
mov
add
sub
fidivrs
mov
jns
aad
pop
mov
cmp
dec
aas
cmpl
cmp
dec
insb
add
cli
xchg
add
stos
movsb
add
in
ret
daa
addr16
pop
aad
in
and
xchg
cmp
add
in
add
mov
js
dec
test
push
add
and
pop
xor
jecxz
xchg
add
and
push
or
add
add
add
and
mov
and
mov
mov
or
add
mov
cmpl
mov
lds
jo
xchg
mov
jl
sbb
cmp
loope
shll
mov
paddw
gs
add
or
add
mov
cs
xchg
add
das
pop
stos
inc
add
cld
rolb
pop
mov
add
add
dec
add
stos
cmp
je
sub
add
add
push
jmp
cld
xchg
jns
mov
popa
das
pop
pop
or
inc
add
and
add
loopne
loope
ret
test
mov
push
scas
dec
stos
cmp
jo
js
add
aaa
pop
or
add
add
outsl
int3
push
les
xor
cmp
cltd
gs
sbb
cltd
adc
insb
xor
push
inc
add
xlat
cmp
scas
shll
insb
test
add
mov
mov
mov
or
push
cmpsl
xchg
add
or
cs
add
fwait
les
mov
add
xor
add
iret
xor
fcmovnbe
cltd
mov
mov
mov
aas
cmp
jno
pop
push
add
lahf
sbb
and
mov
mov
fstl
add
rol
and
mov
add
jg
add
pop
shufps
in
bound
mov
lods
aas
add
data16
push
add
add
push
xchg
add
ret
inc
add
add
mov
push
fistps
dec
jo
pop
sbb
add
fcompl
add
xchg
cld
lret
add
add
push
mov
outsl
pop
dec
inc
add
mov
daa
inc
add
into
dec
pandn
push
pusha
add
add
adc
cmc
mov
add
push
add
fnclex
add
mov
add
test
xor
sub
mov
cld
insl
and
mov
aad
out
lock
add
or
xchg
add
out
fdivrl
dec
mov
push
pop
pop
adc
rolb
pushf
sbb
icebp
mov
dec
push
in
jg
std
in
mov
add
add
dec
jmp
add
dec
arpl
es
dec
mov
and
mov
fsubp
addb
xchg
shrl
add
pushf
push
lock
add
add
ss
xor
adc
repz
arpl
movsb
add
imul
add
add
add
test
jmp
in
loope
push
popf
xor
test
imul
cmp
push
mov
aam
add
cmp
add
dec
call
add
inc
out
xor
add
add
adc
or
xor
das
xchg
addb
add
add
add
xlat
sbb
adc
or
into
mov
mov
jge
add
cwtl
popa
jle
add
in
cmp
push
add
add
add
add
mov
jg
add
add
mov
xchg
push
iret
ret
xlat
lods
add
inc
add
add
and
add
lahf
dec
test
add
cld
dec
pop
cltd
sbb
xor
cmp
cmp
lret
loope
xchg
push
jecxz
fildl
lock
mov
cmpsb
add
xchg
xchg
or
add
sahf
inc
add
add
int
add
fcomp
mov
addb
add
add
xchg
sahf
fs
into
repnz
mov
mov
movb
arpl
add
add
sub
cmp
dec
jne
hlt
add
mov
add
cmp
cmpsl
mov
subl
insl
xchg
out
mov
pop
mov
outsl
adc
jne
add
and
nop
add
adc
sarl
add
adc
jae
jo
xor
inc
add
ret
cmpsl
addr16
cmc
cmp
out
stc
lret
push
add
cmp
mov
add
add
jnp
inc
mov
repnz
pop
add
mov
stos
pop
dec
or
push
add
adc
xchg
add
mov
add
or
add
pop
push
add
pop
bound
mov
mov
and
icebp
xchg
mov
push
ret
inc
add
jp
sub
lods
fsubr
inc
test
pop
rorl
mov
and
dec
loope
les
popf
lds
cmp
add
movsb
add
add
ljmp
mov
imul
jecxz
jbe
pop
cld
sub
ret
add
dec
das
push
add
add
outsb
add
movsb
add
cmp
ret
sub
adc
je
and
push
lcall
jb
and
xchg
add
add
mov
sbb
add
add
add
mov
add
add
add
add
jno
jns,pn
lahf
pop
cmp
in
xchg
add
add
sahf
push
add
jno,pn
rcr
sub
data16
add
jae
add
call
scas
push
jo
mov
push
jle
dec
inc
add
arpl
cwtl
xchg
cmpl
jo
sbb
mov
add
mov
pop
mov
add
sbb
scas
addr16
shrl
ja
inc
add
inc
add
add
mov
sub
orl
js
test
movsb
add
add
cwtl
addb
lock
fldenv
add
add
xchg
add
mov
mov
add
add
mov
cltd
push
sbb
adc
lret
ret
leave
push
movsb
add
fldt
xor
sbb
add
les
popa
test
inc
ja
add
inc
mov
or
add
inc
mov
adc
mov
adc
mov
iret
or
mov
cmpsl
in
mov
add
daa
inc
pop
loop
int
add
add
clc
sub
movb
add
xchg
or
add
sbb
add
imul
test
add
mov
jbe
je
sub
hlt
add
pop
xor
rcrl
imul
dec
and
and
outsl
cs
dec
mov
add
add
push
add
xchg
mov
inc
jb
into
adc
xchg
add
and
mov
xchg
inc
add
sub
push
inc
add
inc
mov
and
cmp
or
add
add
jb
lahf
mov
sti
cli
cld
or
push
add
add
or
pop
sub
cmpsb
add
ljmp
movsb
add
clc
jmp
inc
add
add
cmp
imul
add
mull
nop
add
cmp
mov
mov
outsb
enter
ss
add
or
inc
add
pop
scas
fcmovne
scas
push
enter
add
mov
aam
xchg
or
aaa
lahf
sbb
cmc
nop
add
mov
std
push
jmp
aam
pop
test
inc
add
mov
les
dec
and
scas
aas
mov
push
add
sub
mov
adc
cmpsl
in
jne
add
inc
and
mov
push
add
add
inc
jge
pop
pop
push
add
mov
or
add
sbb
scas
mov
movsb
add
movsl
out
js,pn
inc
add
notl
cs
out
movsb
add
bound
mov
test
xor
rolb
jns
pop
sti
dec
lock
jno
add
add
add
aas
push
add
fnstenv
add
add
cmp
inc
add
rolb
sub
xchg
add
lea
das
xlat
js
adc
add
addb
add
lcall
loope
add
inc
add
das
and
mov
sub
cmp
sub
mov
stc
cltd
fnstcw
imul
fldl
sub
les
lret
rolb
or
push
sbb
pop
rcrl
inc
add
add
aaa
or
mov
dec
in
jno
add
add
add
add
add
adc
jns
add
add
in
dec
xor
ret
and
cmp
xor
mov
jl
add
cltd
inc
inc
add
mov
mov
xor
cmpsl
adc
add
and
push
aas
cmp
cmp
push
or
add
jl
add
add
add
cmp
add
mov
pop
fdivs
cmp
pop
lcall
jae
loope
imul
jno
scas
inc
add
dec
mov
mov
add
add
mov
add
add
int3
dec
fidivl
xchg
add
and
dec
adc
lods
sahf
repnz
into
test
xor
movb
out
add
mov
add
or
mov
xchg
add
add
cwtl
xor
mov
data16
and
in
push
add
and
mov
es
mov
adc
mov
sbb
add
add
testb
push
add
add
addr16
cmc
xchg
sub
add
mov
jns
into
inc
add
mov
xchg
jae
add
add
add
mov
add
adc
ja
scas
inc
dec
rolb
je
push
add
cmp
add
push
mov
xchg
lea
fmulp
outsl
mov
add
popa
jb
add
xor
pusha
add
loope
fs
fcoml
adc
notl
decb
and
mov
xor
jge
lods
inc
lret
lock
jecxz
pop
sbb
push
add
add
add
push
daa
addr16
aas
sub
xchg
push
mov
add
and
or
mov
mov
add
xor
mov
sti
push
add
jno
dec
add
cli
lock
sbb
jb
out
xchg
pop
sub
out
in
dec
test
nop
add
movb
outsb
ret
ljmp
dec
dec
add
test
add
data16
add
push
add
mov
ds
push
or
add
addb
jne
pop
xchg
dec
std
mov
addb
dec
and
add
add
fimull
outsl
dec
sub
ja
add
add
push
scas
xor
jg
jecxz
jmp
add
add
and
sahf
xor
dec
cmpsl
push
jns
pop
ret
ds
adc
cmp
pop
dec
jae
cmpsb
add
mov
add
sub
xor
sub
into
addb
add
idiv
sub
add
cmpsl
outsb
clc
mov
inc
add
sbb
jae
fnsave
pop
xchg
fmul
push
push
inc
add
imul
inc
add
mov
add
mov
pop
sti
cli
test
cmp
fcoms
xchg
repz
pop
sub
fsubrp
int
testb
adc
add
rolb
ljmp
add
add
inc
inc
add
sub
add
dec
pop
jg
hlt
add
std
sbb
mov
add
js
add
mov
add
cltd
nop
add
mov
stc
les
cmpsb
add
test
dec
jno
add
mov
xchg
addb
std
in
inc
ljmp
add
sub
mov
mov
out
icebp
jecxz
lahf
mov
mov
mov
add
add
mov
jmp
clc
imul
rcrl
sub
mov
les
jmp
add
adc
iret
les
mov
xor
fisttpl
add
mov
sbb
add
add
or
xor
add
scas
cli
sub
or
fsts
inc
sbb
add
insl
push
add
add
cmp
bound
mov
pop
pop
ret
in
out
sbb
add
add
iret
stos
rolb
dec
xchg
push
add
add
lock
stos
ljmp
ljmp
xchg
mov
add
mov
sub
mov
push
add
sbb
clc
enter
add
insb
dec
notl
std
aas
cmp
add
add
arpl
lods
ja
add
insb
xor
push
add
push
add
adc
and
fldl
adc
add
mov
add
mov
xor
outsb
sub
add
inc
add
xchg
add
add
add
test
out
pop
jmp
jno
add
sub
jge
add
mov
mov
push
push
jno
dec
sub
jg
out
add
push
xor
xchg
add
sbb
mov
rorl
aas
push
add
test
push
add
pop
xchg
mov
cld
ficomps
pop
add
jl
mov
in
hlt
add
mov
push
mov
add
divl
add
mov
jno
scas
xor
pop
mov
add
fldcw
rolb
add
adc
js
push
add
cwtl
mov
mov
sbb
test
pop
lahf
xchg
inc
mov
cltd
fld
add
outsb
jne
add
pop
mov
outsb
sbb
pop
lahf
mov
in
sub
xchg
or
add
inc
xor
fistpl
and
mov
mov
sahf
jp
add
testb
js
into
in
cmc
cmp
add
sub
add
add
adc
add
push
add
mov
lahf
or
adc
mov
loope
add
mov
xchg
add
pusha
add
adc
cmp
shll
repz
push
inc
add
cmp
shl
add
add
cmp
movsb
add
jb
jns
int
jg
lock
xchg
cmp
adc
hlt
add
mov
mov
test
or
dec
gs
jmp
jl
add
sbb
or
add
add
xchg
adc
cmp
mov
aaa
or
call
adc
iret
adc
stos
icebp
adc
cmp
repnz
jne
add
std
pop
mov
ljmp
aam
jge
add
adc
add
enter
add
sub
repnz
hlt
add
test
push
lea
outsb
aam
and
mov
repz
add
add
mov
xchg
fstp
outsl
lahf
inc
pop
ret
insb
dec
outsl
xchg
mov
imul
rolb
dec
and
or
hlt
add
mov
loop
loopne
sub
out
fsubr
pushf
and
or
cwtl
mov
cmp
adc
cmp
add
stos
mov
pop
pop
add
mov
sub
pop
pop
roll
mov
jge
add
and
cmc
mov
repnz
push
add
and
mov
stos
jle
push
int3
out
aaa
inc
sahf
das
mov
add
sbb
cmp
dec
jp
add
mov
pop
fcoms
push
and
mov
jbe
or
add
add
add
pop
out
dec
hlt
add
mov
cwtl
aam
dec
rorl
bound
mov
dec
iret
aad
push
add
xchg
addr16
add
add
sbb
add
mov
insl
loop
in
adc
and
mov
int
fmul
mov
imul
sub
addr16
add
add
stc
xor
xchg
add
and
dec
cs
jae
and
mov
add
add
add
mov
add
and
mov
or
add
add
push
add
js
das
cmp
pop
int3
adc
jl
lds
mov
or
mov
mov
add
incl
xchg
and
mov
mov
add
jb
push
add
lds
push
add
xor
fsubl
add
scas
neg
push
addb
xchg
add
and
mov
adc
jl
lea
cmpsb
add
add
add
add
insb
inc
add
pop
into
lret
pop
ljmp
add
dec
daa
cmp
cmpsl
add
add
jmp
imul
mov
rolb
add
mov
pop
pushf
pop
addr16
jb
inc
cmp
pop
xor
and
call
add
daa
test
outsb
test
add
mov
movb
lahf
dec
popa
mov
pop
in
add
int3
outsl
pop
lods
das
jg
jne
add
sub
and
mov
jg
test
aad
into
adc
jbe
dec
pop
inc
add
add
clc
adc
inc
add
cs
add
hlt
add
pop
hlt
add
adc
stc
cmp
add
inc
add
mov
mov
and
push
addl
pop
mov
inc
movsl
add
mov
dec
add
inc
add
mov
lret
sub
inc
add
dec
testl
jcxz
add
add
xchg
or
add
mov
stos
mov
rolb
andl
xchg
xchg
fldl
mov
add
xor
incb
or
fdivl
pop
popf
and
jge
in
xorl
add
lock
add
ljmp
out
push
mov
lods
roll
cwtl
mov
repz
add
cmp
stos
lret
inc
add
mov
test
xchg
test
out
xchg
fstps
add
sbb
add
mov
push
cwtl
dec
jl
cmpl
add
fcom
stos
add
mov
imul
mov
or
jne
dec
sbb
add
jns
mov
add
hlt
add
lock
test
and
mov
sub
add
and
or
push
add
ljmp
loopne
rolb
loopne
and
jp
mov
mov
add
add
aad
mov
jno
add
mov
xchg
cmp
add
add
cmp
pop
pop
rolb
adc
loop
mov
push
add
add
mov
add
das
pop
or
add
add
jmp
pop
push
add
xchg
add
add
pop
mov
add
inc
inc
sbb
cld
mov
addl
or
add
lcall
gs
add
sub
insb
ja
add
jo
aad
push
pop
insb
sub
dec
push
add
add
or
mov
cs
add
push
add
mov
inc
popf
lods
lds
inc
loopne
pop
push
add
cld
mov
stos
rolb
add
add
mov
sbb
pusha
add
add
mov
cmc
mov
push
add
mov
popa
dec
aas
xor
adc
iret
jge
pushf
mov
pop
mov
add
add
add
add
lods
enter
pop
enter
add
add
or
cmp
imul
lret
icebp
push
add
fwait
lods
mov
lahf
sub
add
mov
outsb
cld
es
mov
or
mov
dec
mov
mov
add
add
jnp
ljmp
dec
add
mov
mov
cmp
stos
js
add
fwait
add
jp
in
fildll
adc
xor
stos
sub
js
popf
jle
stos
mov
pop
jg
xchg
les
push
add
mov
mov
or
add
hlt
add
dec
mov
xchg
cld
gs
add
add
in
mov
lods
lret
add
rcll
add
lret
add
and
xchg
jmp
sbb
jne
mov
xchg
insb
jo
stos
fisubl
sbb
xchg
add
add
rolb
addb
fdiv
inc
pop
sub
and
mov
inc
dec
jle
add
loope
jmp
push
and
add
add
les
pop
jecxz
add
add
add
cmpsb
add
dec
lock
add
add
mov
pushf
add
mov
out
cmp
and
icebp
lcall
lcall
aad
iret
sti
out
jnp
enter
sbb
lock
fistpll
jecxz
popf
adc
test
mov
inc
add
psubb
sub
rolb
push
test
out
add
fistl
mov
cwtl
fsubl
pop
jnp
add
testb
cmovb
mov
pop
test
lret
scas
cmp
sub
add
add
pop
mov
inc
add
addb
jg
pop
loop
dec
inc
add
movups
or
sbb
push
add
and
mov
filds
pop
and
mov
mov
data16
mov
push
add
add
ret
jge
add
or
scas
data16
mov
push
lea
mov
inc
pop
pop
cwtl
xchg
xor
in
gs
std
xchg
jle
push
add
out
mov
iret
scas
sbb
add
aaa
xor
jae
lret
jns
and
mov
add
into
dec
div
cltd
in
rolb
sbb
push
add
pusha
add
mov
and
and
mov
nop
add
jo
mov
cmp
dec
mov
push
add
add
mov
ficompl
jg
xchg
pop
loope
add
out
clc
nop
add
inc
add
std
rorl
mov
sbbl
rolb
inc
lods
cmpsl
xchg
add
fwait
and
mov
nop
add
lahf
es
mov
scas
xor
xchg
nop
add
add
das
pop
jge
add
in
mov
sbb
add
lahf
mov
insb
outsl
mov
add
loope
sub
add
mov
pop
sbb
add
and
add
hlt
add
mov
loope
test
add
inc
dec
jmp
into
mov
add
push
add
jbe
inc
js
add
inc
adc
std
lret
addb
add
add
test
push
add
add
or
cld
xchg
addb
rcrl
jns
std
mov
pop
aas
scas
aad
jb
out
lods
mov
add
add
xchg
cmp
dec
mov
add
mov
xor
enter
add
lahf
in
aam
mov
nop
add
dec
aas
jno
rolb
inc
sti
popa
dec
das
cmc
js
add
insl
stos
jns
mov
and
mov
add
add
or
push
add
add
jg
sub
and
frstor
addr16
lds
add
add
in
adc
in
mov
fwait
into
jle
sbb
movsb
add
mov
outsl
and
xor
cld
in
xchg
mov
inc
loop
rolb
add
fsubs
inc
add
lret
je
lods
cmp
out
lret
out
push
add
sbb
addb
add
daa
enter
movsl
add
mov
add
add
lcall
test
inc
and
cmp
outsb
xchg
pop
mov
inc
add
add
fbstp
add
pop
jns
push
add
inc
jns
or
adc
add
sbb
or
xor
cmp
ljmp
add
sbb
add
add
add
add
add
add
lcall
js
add
mov
add
lahf
nop
add
addb
adc
sub
push
sahf
cmc
gs
or
sub
int3
pop
and
mov
xchg
add
mov
add
or
add
add
inc
add
inc
add
scas
mov
add
add
sti
dec
jne
add
scas
jecxz
add
jmp
add
mov
add
lds
xchg
add
sbb
movsb
add
pop
jle
sbb
add
scas
mov
in
jp
in
jno
add
add
xor
push
add
add
adc
add
fcoms
xchg
push
xor
jp
imul
push
data16
leave
arpl
popa
mov
cli
xor
outsb
mov
stc
out
fisttpll
insl
cmpsl
addb
add
sub
and
add
inc
add
add
loop
ja
xor
mov
cwtl
bound
mov
add
add
add
pop
daa
jo
lcall
les
xchg
fstpl
xor
sub
lock
jmp
or
jns
mov
pop
or
call
push
shll
push
push
push
pop
data16
add
xor
mov
add
add
add
xchg
add
int
lock
add
add
inc
add
add
add
cwtl
addb
js
add
jge
outsl
je
sub
ja
add
pop
mov
insb
jne
and
in
aas
jle
adc
adc
movsl
adc
jno
add
add
cld
nop
add
das
lahf
sbb
add
inc
pop
push
in
cmp
xchg
add
iret
push
add
outsb
lret
or
or
data16
add
xor
add
dec
pop
adc
and
sub
mov
cld
xchg
add
stc
cs
pop
xchg
call
pop
add
pop
test
in
push
insb
sahf
cmp
jns
add
sub
add
mov
icebp
sub
sub
lds
push
int
add
pop
dec
xor
sub
pusha
add
das
cltd
xchg
enter
fmull
sbb
aas
cmp
sub
adc
jbe
jl
add
add
lret
jno
push
inc
add
push
add
pop
mov
stc
jne
or
insl
hlt
add
dec
and
hlt
add
leave
pop
mov
popf
insb
inc
add
mov
add
test
xor
addb
sti
lods
mov
sbb
dec
push
test
add
popf
xor
xchg
mov
add
add
add
push
or
mov
test
add
loopne
mov
add
mov
sub
stc
push
out
mov
pop
mov
mov
push
push
add
adc
ja
les
sub
out
sub
add
inc
pushf
out
sbb
clc
mov
add
adc
add
add
jg
pushf
mov
sbb
jle
add
jo
lret
outsl
ficoml
mov
jno
add
push
add
je
mov
jnp
add
jno
pusha
add
xorl
cld
adc
add
add
push
mov
pop
cmp
push
add
in
jne
out
outsl
pop
stc
repz
xor
add
add
mov
insl
aas
insl
mov
jmp
aaa
sbb
sbb
add
add
test
add
mov
arpl
xchg
and
in
out
or
in
or
add
add
add
pop
lcall
push
add
add
add
add
adc
bound
mov
jno
ficoml
add
addb
stc
push
mov
test
ds
xor
add
add
lods
sbb
mov
mov
add
inc
add
or
mov
dec
pop
add
mov
stos
fwait
data16
add
aaa
mov
xchg
add
mov
mov
rolb
mov
mov
and
inc
add
add
push
cmp
movsb
add
add
stos
or
add
push
add
jae
jl
add
cltd
jbe
adc
and
add
inc
add
test
dec
pop
pop
cmp
add
lds
sbb
xchg
add
add
jge
dec
fcomps
add
test
adc
in
mov
push
add
add
rorl
xor
mov
jl
icebp
pusha
add
in
push
add
jbe
loop
mov
add
xlat
jecxz
fbld
xlat
out
add
xchg
mov
mov
and
mov
xchg
xrelease
cs
jg
pop
fwait
jmp
lods
js
repz
mov
mov
cli
adc
pop
add
add
add
movsl
and
mov
mov
out
test
adc
add
jp
or
loop
add
mov
add
fldt
data16
add
mov
fs
rolb
cmp
or
std
mov
je
sahf
jbe
out
mov
pop
mov
lds
jb
cmc
test
add
jl
add
cmpsb
add
add
add
scas
or
add
mov
popa
outsb
jecxz
and
add
inc
popa
popl
or
mov
fcompl
push
fstpl
add
mov
sbb
push
addl
movsl
push
pop
add
mov
inc
ljmp
jb
cmp
testl
add
add
mov
jns
xchg
add
add
add
dec
ret
or
add
sub
inc
xor
mov
mov
addr16
lds
inc
pop
sbb
testb
adc
sbb
xchg
in
jbe
push
jbe
arpl
pop
rolb
daa
out
into
jns
fs
pop
popa
add
xor
addr16
mov
pop
addr16
add
aam
inc
jb
enter
inc
add
movsb
add
adc
mov
mov
aaa
push
scas
ja
add
dec
or
dec
jns
imul
lahf
or
add
add
imul
add
xchg
xor
or
or
mov
imul
sub
add
jno
inc
add
scas
addr16
in
add
in
dec
adc
hlt
add
shll
push
cmp
pop
dec
adc
mov
add
add
sbb
or
mov
add
fisubs
add
push
int3
cmp
testb
addr16
xor
cli
adc
popf
stos
rolb
adc
mov
loope
pusha
add
mov
add
sbb
add
add
in
add
add
mov
add
add
lret
addb
movsb
add
jmp
inc
in
dec
movsl
xchg
test
add
mov
andl
shl
add
push
add
rolb
add
outsl
stos
jnp
adc
fmuls
aad
repnz
adc
ds
jnp
xchg
add
pop
cltd
jl
lods
movsb
add
sub
add
add
add
add
std
mov
push
add
ja
repnz
mov
push
and
mov
add
lret
add
mov
add
ret
jg
sbb
add
and
mov
pushf
pop
pop
into
inc
pop
xor
stc
pop
out
xor
mov
clc
test
lds
xchg
push
inc
and
mov
add
mov
add
pop
or
add
mov
push
cmp
shll
add
test
add
or
xor
xor
sbb
xor
inc
popf
pop
ljmp
add
jo
cmp
inc
add
repz
xor
pop
imul
add
nop
add
and
or
xchg
inc
add
adc
test
add
add
sbb
out
pop
cmp
xor
enter
xchg
add
out
jle
mov
test
scas
inc
add
leave
out
mov
mov
in
and
mov
xchg
sbb
add
add
cmpl
mov
cli
jg
lahf
sbb
add
add
ljmp
mov
lock
cmp
sub
and
lock
add
cli
xlat
int3
repnz
add
add
jne
add
icebp
add
mov
clc
sub
add
jbe
sbb
lcall
pop
pop
cli
jge
and
mov
ljmp
stos
adc
inc
add
arpl
xor
add
pop
push
imul
fsubrl
inc
xchg
mov
sbb
add
pop
add
and
cli
inc
add
jl
add
mov
cs
jb
cmc
xor
add
adc
xchg
pop
push
xchg
add
cwtl
aam
lcall
cmp
sub
sub
mov
xor
rol
add
pop
or
into
testb
push
add
dec
subl
and
cs
mov
dec
outsl
mov
add
push
clc
pop
in
xlat
push
add
pop
es
xor
add
int
add
dec
jb
fldt
xor
in
inc
add
lcall
mov
add
add
rorl
aaa
sarl
bound
mov
xor
or
inc
add
mov
add
iret
pop
stc
pop
or
inc
add
test
sub
add
inc
add
xchg
shrl
stc
sti
fisubrl
sbb
out
xchg
add
loop
add
std
lea
mov
xor
jae
fnstenv
test
nop
add
mov
add
pop
sbb
add
add
add
pusha
add
xor
mov
add
add
jns
inc
add
add
mov
outsl
cmpsb
add
push
out
test
repz
adc
or
pop
add
pop
cmpsb
add
mov
sbb
scas
lcall
mov
fwait
add
mov
cmp
jno
push
test
and
ficomps
ret
aas
mov
xor
cld
lock
push
add
addb
add
leave
int
xor
testb
xchg
add
inc
inc
add
out
add
dec
mov
cmp
popa
in
mov
xor
jecxz
add
mov
fwait
addb
add
das
frstor
and
imull
add
imul
dec
cltd
int
add
mov
incb
mov
fistl
cmpl
or
adc
ret
adc
scas
adc
ljmp
pop
sbb
adc
cmc
xlat
leave
sbb
add
mov
les
dec
dec
int
add
add
add
push
repz
push
push
addb
mov
fiadds
add
add
add
shll
rolb
ret
add
push
add
ret
sub
addb
add
lds
fildll
xor
int3
mov
push
test
or
add
mov
cmp
sub
fsub
sbb
fsubrs
or
add
jge
cli
fsubrl
sub
cmp
adc
rcrl
sub
loope
hlt
add
xor
stc
mull
add
add
or
push
rcrl
jge
lahf
in
mov
xor
popa
and
popf
push
or
aas
push
fstpt
add
or
add
pop
cmp
xchg
jae
cmpsb
add
add
rcrl
pusha
add
add
mov
dec
mov
cmp
rolb
add
mov
add
mov
ret
or
sbb
lds
add
das
or
pop
or
cmp
add
add
add
fbstp
push
cltd
lods
inc
add
add
jge
and
mov
add
xchg
and
mov
add
ret
test
mov
add
mov
jbe
fsubs
mov
test
add
lods
dec
jo
stc
mov
push
enter
mov
dec
fsubs
add
add
repnz
and
add
mov
cmp
aaa
fisubrl
lods
loopne
aam
int3
mov
in
mov
jno
pop
jp
jne
clc
dec
aaa
ret
add
xchg
add
add
add
jne
stos
mov
push
add
adc
andl
stos
nop
add
cmp
dec
pushl
lret
popa
aaa
fsubp
and
pusha
add
loop
pusha
add
pop
pop
sub
data16
das
fld
add
or
sub
add
jo
sbb
xorl
xchg
add
adc
fidivrs
add
vphaddubw
add
xor
ret
lret
ret
add
mov
pop
inc
pop
add
or
sub
mov
popa
sub
sti
idivl
inc
add
adc
je
sub
or
ret
add
adc
xor
arpl
pop
scas
and
mov
inc
add
aas
or
loope
mov
mov
add
inc
add
add
stos
aas
mov
insb
icebp
mov
dec
pushf
or
sti
pop
mov
add
fcoms
push
add
add
jne
das
and
sbb
push
add
arpl
and
out
add
loop
adc
dec
icebp
testb
test
pop
pop
ja
ret
add
daa
jg
add
ds
add
jns
add
into
lds
add
and
mov
add
inc
add
imul
stos
sub
add
loop
movsl
fadds
pop
mov
std
and
mov
pushf
test
and
add
fsubs
mov
add
xchg
sub
add
imul
arpl
lds
sbb
jb
pop
add
mov
