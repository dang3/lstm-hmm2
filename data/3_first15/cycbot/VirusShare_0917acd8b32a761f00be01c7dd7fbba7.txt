inc
add
inc
insl
and
dec
test
test
call
insb
sub
inc
sub
dec
movsb
shr
or
popa
subl
or
insl
and
test
add
push
and
add
or
insb
mov
sub
int
inc
lods
add
orl
add
sub
add
subl
dec
or
test
mov
insb
dec
test
add
in
add
fs
int3
test
sub
enter
gs
call
insb
sub
shlb
loope
mov
or
enter
insb
and
popa
lea
shll
add
add
and
or
imul
or
rolb
int
add
inc
lds
dec
or
rorb
dec
gs
add
add
pusha
sub
add
add
sub
mov
andb
mov
add
mov
test
or
add
test
mov
mov
leave
leave
test
test
rolb
and
les
call
and
add
inc
fs
in
add
inc
add
int3
call
test
add
add
in
leave
and
in
in
test
and
int3
gs
pusha
movsb
inc
loopne
enter
inc
inc
subl
enter
dec
lods
add
inc
or
test
lea
add
lods
int
loope
rolb
roll
rorb
lods
and
movsb
add
add
or
and
jmp
mov
add
mov
orb
mov
jmp
add
sub
int3
in
gs
add
add
sub
push
and
insl
lods
or
insl
mov
lea
inc
imul
push
sub
test
add
or
add
inc
movsl
in
rolb
add
popa
call
inc
or
fs
mov
rorl
inc
sub
inc
test
jmp
inc
add
pusha
addl
jmp
mov
mov
inc
in
inc
and
les
andb
mov
enter
loopne
leave
and
sub
loopne
add
inc
mov
push
fs
dec
mov
test
mov
int
insb
add
add
shrl
in
in
dec
in
and
inc
sub
in
add
dec
in
dec
add
addl
pusha
test
add
add
add
dec
subl
add
sub
sub
mov
andb
test
mov
test
push
loopne
add
lea
mov
leave
enter
add
inc
call
insb
les
addl
lods
sub
dec
inc
or
loope
pusha
mov
in
add
dec
loope
and
rorb
insb
add
int
sub
movsb
inc
loopne
add
inc
or
in
add
or
add
int3
in
int3
mov
dec
add
add
dec
in
add
sub
les
int3
sub
addl
movsb
les
add
enter
dec
add
lods
test
lea
and
and
test
or
lds
shr
add
movsl
imul
dec
push
insl
in
add
add
and
add
int3
subb
or
mov
mov
dec
mov
add
dec
dec
in
jmp
loopne
mov
dec
mov
lods
or
sub
add
and
in
enter
sub
test
lea
add
mov
or
test
push
test
add
jmp
inc
mov
mov
inc
dec
test
leave
test
lods
lods
and
pusha
shrl
insb
or
and
inc
les
sub
insl
shrb
in
int
popa
and
inc
insb
popa
rol
add
roll
add
or
or
int3
test
lea
gs
add
inc
test
mov
in
dec
mov
dec
insb
insb
push
test
add
enter
test
orl
lea
mov
movsb
leave
in
add
lods
sub
add
rorb
mov
int3
mov
and
dec
sub
sub
add
and
popa
sub
add
jmp
add
dec
int
add
mov
in
mov
test
in
fs
movsb
jmp
dec
sub
in
les
lods
addl
shrb
call
and
mov
lods
in
insb
jmp
fs
push
jmp
add
add
sub
sub
add
in
and
push
mov
sub
insl
test
add
addl
insb
test
jmp
sub
insl
mov
int
int3
mov
test
gs
movsl
addb
or
in
mov
add
sub
and
shll
test
int3
popa
dec
enter
dec
mov
leave
sub
mov
push
movsb
imul
inc
add
add
and
sub
in
subb
sub
dec
les
and
in
movsl
add
and
test
add
or
add
and
fs
sub
add
dec
rolb
add
inc
popa
sub
add
lea
sub
sub
or
add
mov
inc
shrb
loope
pusha
mov
in
mov
sub
shrl
inc
in
add
push
dec
gs
gs
les
inc
lods
in
in
inc
int3
or
and
test
popa
and
inc
or
and
pusha
add
mov
dec
dec
inc
rorl
insl
loope
insb
int3
test
leave
add
mov
push
lods
or
sub
mov
dec
rolb
imul
andl
add
test
push
dec
loope
sub
add
imul
add
add
mov
add
inc
movsb
mov
in
loope
and
lods
inc
int
gs
test
int
lods
sub
in
add
call
les
lods
int
lods
rorb
sub
mov
loope
shl
fs
test
sub
push
movsb
inc
in
mov
add
lods
test
or
add
rolb
mov
test
jmp
insb
inc
in
add
in
call
add
test
les
add
sub
in
lods
push
test
sub
pusha
in
loopne
int
insb
lds
dec
orb
test
or
in
add
loopne
sub
imul
test
movsb
in
gs
in
inc
leave
lods
les
or
inc
rorl
movsl
insb
popa
enter
test
int3
loopne
and
popa
int
add
sub
dec
movsb
sub
and
dec
shll
inc
sub
and
add
inc
enter
test
push
add
rorb
popa
test
inc
popa
inc
add
add
add
loope
test
add
mov
dec
lea
or
or
add
add
popa
dec
shll
in
lods
lods
lds
inc
lods
lods
test
addb
jmp
or
dec
sub
add
test
lods
insb
lods
test
test
orl
movsl
addb
inc
mov
sub
dec
inc
test
jmp
imul
lods
mov
mov
add
pusha
add
sub
inc
orb
sub
dec
add
in
inc
subb
popa
gs
sub
loopne
mov
sub
pusha
les
sub
push
loope
test
and
sub
mov
test
mov
inc
add
mov
movsb
mov
popa
pusha
and
inc
and
ror
enter
lea
test
push
inc
add
inc
lods
or
mov
imul
rolb
or
inc
mov
test
push
mov
int3
shlb
gs
lea
les
and
inc
inc
add
inc
lods
rolb
subl
add
inc
in
lods
mov
popa
test
rorb
in
gs
sub
mov
fs
test
mov
movsl
mov
mov
les
or
test
or
insl
dec
les
sub
add
mov
lods
lods
les
insl
and
movsl
add
orl
rolb
loope
popa
or
or
leave
lods
lds
test
add
add
in
int
int
in
lods
insl
movsb
or
les
in
add
int3
rorb
sub
imul
gs
rolb
add
and
gs
and
add
mov
dec
inc
mov
pusha
and
and
add
mov
add
insl
mov
in
add
add
inc
int3
add
dec
test
gs
int3
or
mov
sub
and
rorb
mov
add
lods
or
movsl
dec
addb
call
dec
or
lea
rorl
mov
lods
inc
add
or
inc
insb
or
sub
and
dec
les
dec
dec
pusha
subl
add
loope
add
jmp
fs
add
add
loopne
or
or
sub
lods
orl
or
or
test
inc
int3
inc
sub
les
or
test
mov
leave
sub
and
add
in
test
insl
add
add
lods
int3
test
sub
pusha
add
call
add
inc
and
imul
int3
add
popa
jmp
movsb
mov
shrl
or
imul
loope
movsb
loope
dec
sub
dec
fs
add
add
and
or
shrb
test
popa
loope
dec
add
add
test
jmp
dec
leave
and
lea
int3
popa
rorb
mov
imul
add
add
add
in
jmp
add
mov
in
loope
int3
in
movsl
or
movsb
add
movsl
movsl
insb
mov
and
and
add
and
or
shrb
dec
add
shlb
mov
test
pusha
inc
in
sub
leave
gs
int
shll
sub
mov
in
mov
or
les
add
and
in
dec
loope
in
pusha
push
or
and
add
inc
mov
enter
add
sub
test
mov
in
popa
add
add
add
orl
dec
imul
add
loopne
test
pusha
mov
add
lods
insb
movsb
in
addl
in
enter
shrb
and
or
or
gs
lods
dec
inc
in
add
inc
shrl
mov
pusha
sub
add
or
popa
push
movsb
add
add
sub
enter
and
add
sub
lods
add
movsl
and
and
add
movsb
mov
loopne
and
test
in
or
enter
and
inc
add
add
dec
or
les
sub
test
inc
int3
lods
push
imul
dec
inc
add
or
mov
shl
or
lds
in
loopne
movsl
mov
in
test
movsb
dec
lea
or
test
insb
lods
mov
sub
add
gs
add
add
in
and
add
les
mov
loope
sub
dec
lea
mov
add
add
call
test
add
rol
lods
add
mov
shlb
loope
jmp
loope
addb
loopne
mov
mov
insb
jmp
lea
add
loope
add
enter
push
gs
gs
int
dec
push
mov
int3
gs
rolb
imul
mov
mov
add
les
dec
loope
lea
insl
loopne
sub
dec
inc
int
leave
and
shrl
add
jmp
fs
and
add
inc
dec
inc
inc
add
gs
and
and
lods
inc
sub
add
and
mov
lea
call
call
dec
add
and
loope
mov
in
int
shl
inc
in
inc
in
in
sub
sub
add
fs
int3
test
add
loopne
lods
inc
pusha
inc
test
gs
les
pusha
add
movsl
sub
sub
loope
in
enter
sub
loopne
add
mov
add
loopne
add
insl
add
popa
or
sub
roll
add
shlb
add
or
shl
inc
mov
loope
jmp
inc
add
add
lea
movsb
sub
add
mov
inc
enter
popa
imul
mov
les
movsb
rorl
and
pusha
mov
lods
push
int3
mov
add
or
or
add
loopne
inc
inc
and
int3
in
test
add
test
add
add
test
jmp
inc
and
inc
test
movsb
in
add
subb
lds
lods
mov
int3
inc
sub
sub
test
add
test
leave
or
les
insb
and
rol
sub
addb
movsl
test
sub
imul
dec
lods
sub
or
insb
push
mov
add
int
add
rol
mov
inc
inc
add
add
test
or
and
or
shlb
dec
add
add
dec
mov
int3
lods
in
int
orl
inc
add
lods
add
mov
gs
sub
in
int3
mov
test
insl
add
test
inc
add
popa
add
fs
test
in
inc
pusha
sub
test
and
mov
test
add
lods
imul
mov
sub
mov
dec
loope
mov
or
mov
int
movsb
add
test
movsb
or
sub
in
test
pusha
fs
and
push
lods
add
sub
rorl
popa
mov
add
jmp
in
dec
insl
mov
rorl
mov
test
andb
sub
dec
mov
and
push
mov
in
add
add
mov
lea
or
dec
popa
leave
mov
mov
test
or
mov
dec
add
mov
add
movsl
add
sub
mov
mov
add
mov
imul
inc
in
test
loopne
and
mov
add
test
or
inc
lea
mov
jmp
sub
imul
or
lods
sub
inc
in
inc
les
inc
inc
popa
fs
sub
in
dec
or
lods
loope
lods
mov
lea
imul
inc
lea
inc
and
add
call
add
les
lds
inc
movsl
add
and
gs
leave
sub
sub
in
inc
shr
lods
mov
lods
movsl
sub
and
in
or
or
roll
sub
test
add
and
add
in
addl
lea
jmp
inc
add
gs
add
mov
add
or
shrl
shr
leave
or
add
movsb
add
inc
insb
add
and
shr
test
and
addb
jmp
sub
insl
or
int3
andb
and
imul
or
addb
test
and
and
enter
add
call
or
sub
loopne
in
dec
lods
mov
fs
and
rolb
call
sub
sub
add
imul
sub
and
add
mov
and
roll
call
dec
add
dec
loopne
and
in
orb
and
sub
mov
in
or
leave
mov
call
or
dec
or
orb
add
test
call
call
int
or
pusha
gs
int3
add
subb
popa
sub
add
add
les
leave
int
loope
and
dec
lds
movsl
shlb
add
insl
test
add
or
jmp
enter
shrl
jmp
insb
test
add
add
ror
lds
test
insb
dec
sub
inc
mov
jmp
add
or
or
lods
vpinsrw
dec
sub
sub
add
add
add
lds
in
mov
leave
rorl
in
inc
sub
sub
popa
in
and
leave
sub
or
and
or
insl
in
or
or
loope
movsb
lea
add
test
dec
sub
sub
int3
test
loope
les
in
add
insl
mov
les
or
movsb
loope
inc
insl
loopne
mov
test
subb
test
mov
int3
enter
leave
mov
mov
and
add
mov
mov
and
add
insl
dec
les
and
mov
and
popa
andl
les
mov
lods
add
int3
lds
sub
in
jmp
jmp
dec
in
jmp
push
or
or
add
loopne
and
inc
rorl
lea
add
jmp
add
dec
mov
mov
add
add
or
sub
test
test
enter
mov
mov
dec
add
in
mov
repnz
dec
sub
mov
mov
incb
call
lods
mov
push
cwtl
jg
aam
jle
adc
jne
cmp
xlat
dec
add
pop
pop
and
out
dec
add
mov
mov
xor
add
and
xchg
sub
xchg
out
jnp
jge
fadd
add
decb
int
test
dec
add
cmpsb
arpl
shr
sbbl
cmp
jns
ret
add
mov
repz
fstl
xchg
test
ljmp
enter
imul
sub
mov
ret
sti
push
mov
xor
cmp
fs
ret
mov
rcll
scas
addb
push
adc
adc
ja
nop
inc
icebp
aaa
mov
push
outsb
add
push
xor
adc
scas
pushf
lods
ds
sbb
cs
mov
stc
imul
ret
scas
movsl
push
js
addr16
insb
mov
sbb
lock
dec
fadds
scas
inc
lret
mov
dec
movsb
cwtl
jp
add
push
icebp
or
jle
scas
fldl2t
sub
test
and
dec
add
sbb
or
mov
add
cmp
xchg
inc
mov
dec
adc
dec
jnp
cmp
int3
lds
bound
test
test
fnstsw
add
rcl
jle
popa
ds
xor
int
mov
pop
mov
sbb
int
pop
push
aaa
xchg
pop
scas
ret
jmp
jno
mov
mov
cmpsb
push
add
mov
cmpsl
add
adc
adc
sbb
clc
inc
ds
dec
xchg
and
push
ja
mov
scas
aas
loope
scas
sub
fidivrl
inc
lret
outsl
movsl
jp
cwtl
test
add
mov
xor
xchg
mov
xor
add
adc
cmc
pop
add
incb
data16
jb
pop
add
and
xor
lea
bound
pop
rcr
nop
cmc
lret
fmull
sub
incb
ds
data16
bound
mov
jne
repz
xlat
dec
inc
jne
arpl
icebp
sbb
xchg
sti
xchg
jp
mov
or
or
pop
call
dec
add
dec
add
call
xchg
xlat
fidivs
jmp
inc
add
sbb
decb
dec
sub
add
mov
in
and
mov
incb
adc
push
dec
sub
int3
mov
addr16
mov
sub
cltd
or
sbb
je
clc
xor
decb
test
mov
popf
xchg
sarb
jne
jo
movsb
fisttpl
incb
push
add
xchg
pop
xchg
push
clc
adc
xor
adc
add
mov
mov
jle
dec
pop
push
pop
lods
xchg
and
push
divl
inc
cmpsl
and
xchg
pusha
pushf
sub
incb
add
incb
ss
jp
sub
lcall
mov
repnz
stc
scas
mov
lock
arpl
jbe
nop
dec
int
mov
cmc
psrlq
adc
inc
add
test
mov
add
imul
cmp
dec
add
ret
ret
mov
addl
xor
in
dec
aaa
rorb
leave
idivl
cli
dec
fisubrs
pop
and
lahf
cmp
inc
inc
cmp
sbb
adc
into
cs
adc
pushf
sbb
jl
js
add
inc
cmp
aam
aaa
iret
xor
rcl
das
pop
jb
and
mov
in
jo
cwtl
leave
mov
stos
mov
push
push
mov
je
pop
xchg
data16
aas
or
fbld
incb
outsl
sarb
jge
fcoms
nop
sub
incb
inc
pop
push
pop
call
add
sub
mov
call
push
fsts
hlt
pop
xor
rcll
sub
fidivl
hlt
hlt
or
mov
aaa
sbb
int
adc
add
mov
xchg
imul
adc
add
mov
test
mov
fldenv
add
mov
mov
xchg
mov
inc
jae
lret
jp
adc
aad
add
pop
ds
jns
int3
mov
add
cli
je
sbb
pop
stos
and
data16
fcoms
shrl
decb
xor
dec
lcall
clc
sbb
add
sub
in
into
xor
rcrb
xlat
lods
cwtl
ds
incb
roll
xlat
pop
mov
addr16
jne
xchg
nop
mov
ficoms
add
add
jns
push
incb
addr16
sub
jp
fwait
pop
in
xor
adcb
jns
mov
je
mov
sbb
cmp
lods
daa
lea
jns
xor
incb
mov
sub
sahf
adc
dec
add
mov
scas
and
fisubl
lea
ds
push
xor
pop
mov
mov
and
stos
xchg
push
inc
sbb
decb
arpl
or
std
in
jl
jp
mov
sub
dec
stos
inc
pop
mov
jg
add
fs
insl
das
add
mov
insb
mov
adc
pop
cli
out
add
jnp
sub
sti
and
xchg
pop
fistpl
roll
and
jnp
sbb
jle
stos
lods
je
pop
pop
std
fdivrs
dec
add
push
shll
lods
loope
add
or
ja
inc
fnsave
loop
push
jne
iret
ljmp
shll
jb
pop
mov
sbb
shll
xor
inc
data16
incb
enter
adc
mov
loope
lock
in
pushf
shlb
pop
fiaddl
decb
inc
shlb
mov
jg
sub
inc
mov
das
pop
loope
and
insl
push
and
mov
test
xchg
pop
ret
xchg
ds
mov
inc
rorl
adc
testl
in
cmp
decb
sbb
and
xchg
and
and
rcll
adc
add
push
incb
dec
inc
movsl
rcrb
mov
dec
mov
xor
jb
jae
pop
pop
lods
leave
mov
add
shl
or
lock
sub
jge
add
jmp
inc
add
sarb
repz
pop
push
lret
les
xor
push
rcll
scas
add
incb
fprem
mov
pop
or
shl
sbb
cmp
daa
cld
add
incb
jge
mov
out
xchg
sahf
mov
push
jns
bound
incb
decb
decb
stos
dec
pop
mov
push
incb
decb
pop
lods
addl
mov
inc
jne
cmp
fimuls
dec
xchg
adc
xor
mov
pop
cmp
les
or
loop
lret
test
cs
cmc
js
mov
push
push
cmp
call
mov
sbb
stc
call
adc
and
rcrb
int3
mov
les
movsb
pop
cld
xor
aas
mov
jp
add
cmp
or
add
jnp
out
pop
ljmp
jne
clc
and
xor
lret
in
outsb
cmp
add
fidivl
and
sub
xchg
ja
add
js
out
and
cmpsl
xchg
cmp
mov
pop
sbb
add
std
popf
mov
mov
jmp
lock
movsb
test
decb
add
jl
mov
gs
sbb
and
jp
xchg
rcrb
push
pushf
pop
add
je
adc
cli
and
cs
incb
testb
repnz
add
test
sub
test
push
mov
ret
fwait
mov
pop
adc
xchg
stos
add
lock
sarl
mov
fmul
mov
cmp
add
sbb
int3
in
pusha
xchg
pusha
sub
pop
xchg
xchg
std
fwait
imul
add
aad
stc
repnz
lods
dec
scas
jg
add
or
imull
xor
inc
cmpsb
fs
aas
and
leave
sub
sbb
mov
cmp
rcl
movsl
popa
xchg
push
add
incb
add
jmp
fs
and
mov
mov
je
mov
and
push
pop
mov
lret
nop
push
fisttpll
add
jnp,pt
int
out
int
sbb
test
inc
adc
sub
push
dec
jle
push
pusha
xchg
push
decb
dec
add
rorb
inc
decb
add
stc
jecxz
mov
xchg
xchg
xchg
xchg
sbb
pop
cs
push
icebp
cmp
mov
inc
decb
xor
sub
jmp
cmc
push
mov
shr
cmp
bound
incb
push
sub
loopne
lcall
lock
je
testl
mov
je
fcompl
in
ljmp
jne
test
andb
push
hlt
test
mov
cmp
cltd
int3
and
scas
and
push
imul
add
dec
lcall
je
push
imul
xchg
jge
add
dec
mov
mov
mov
inc
add
dec
pop
jg
roll
xchg
jnp
inc
cmpsl
aad
fstps
aas
pop
mov
lods
xchg
mov
popa
adc
xchg
sbb
mov
add
dec
mov
lea
loope
adc
add
mov
pop
mov
pop
mov
mov
jb
enter
pop
rorb
decb
incb
and
imul
or
iret
inc
or
push
out
movsb
movsl
dec
pop
ret
cwtl
hlt
cli
cmp
aas
xchg
scas
stc
dec
add
fists
int3
xchg
out
popa
xor
push
in
out
in
or
mov
mov
adc
mov
sbb
add
and
dec
les
pop
adc
out
and
mov
add
dec
push
cmc
pop
pminub
push
mov
int3
scas
into
aad
mov
clc
ss
push
dec
out
xor
std
fldcw
rorb
addr16
call
lods
push
add
bound
and
aam
fwait
cltd
icebp
fsub
lods
xor
lock
aam
xor
call
ljmp
mov
or
fbld
jnp
dec
decb
push
pusha
add
add
stc
sahf
xor
xchg
icebp
push
cmp
lods
pop
clc
add
clc
xlat
mov
je
sbb
xor
mov
add
aam
push
push
mov
nop
int
fisttpl
mov
int3
int
add
lret
inc
jl
xchg
addr16
dec
enter
adcl
fimull
jle
xchg
mov
jmp
aas
cli
test
xchg
and
sbb
add
sbb
pop
pop
ret
rolb
data16
mov
addr16
xor
mov
jle
icebp
out
loopne
test
out
test
mov
dec
and
decb
setl
push
inc
add
out
xor
jae
xor
jno
jne
and
movsl
aas
cmp
cltd
daa
out
dec
fnstsw
incb
ret
test
repz
nop
push
add
cmp
add
dec
add
outsb
add
pop
outsb
inc
mov
orb
es
jp
fwait
sti
in
sub
cld
data16
mov
adc
shr
jno
packssdw
sub
xchg
jmp
pop
xor
arpl
sub
xchg
js
shl
mov
dec
jbe
and
sbb
imul
fmull
clc
out
sub
push
sbb
add
sub
pop
lods
in
pop
dec
add
inc
add
xor
mov
mov
mov
pop
pop
xor
into
push
negl
loope
dec
add
ror
sub
add
xor
dec
aas
repnz
arpl
lods
gs
fisttpl
cmp
test
sub
hlt
add
test
dec
icebp
jno
sbb
enter
xor
add
lods
mov
and
decb
ret
cmp
pop
add
fidivrl
push
pop
and
repz
stos
fsts
call
movsl
mov
aaa
gs
add
xor
in
dec
pushf
mov
cmp
imul
push
push
fs
ja
add
pop
and
clc
sub
hlt
insl
sahf
rcrl
int3
mov
add
jnp
ljmp
insl
add
mov
pop
data16
xchg
int
dec
out
jb
aaa
xor
test
ret
int
das
adc
inc
dec
dec
add
popf
add
rcll
xor
in
aas
ret
dec
xchg
cmp
fcoms
in
mov
jo
data16
mov
loop
push
push
mov
jmp
inc
pop
push
pop
dec
out
sub
call
sub
sarl
xlat
xchg
xlat
mov
and
mov
mov
xchg
xor
fcmovnbe
movsb
xchg
hlt
push
test
add
pop
pushf
stc
fcmovne
pushf
dec
add
cli
jg
sbb
popl
cmpb
push
sub
cmpsl
dec
imul
and
incb
add
out
jmp
jp
push
push
rolb
and
jno
incb
fprem1
adc
shrb
fs
sti
xlat
cmp
push
leave
cld
fisubs
mov
pop
aad
cmp
jmp
call
adc
imul
adc
dec
cmp
in
mov
inc
pop
pop
aas
pusha
add
andl
mov
dec
enter
in
movsb
daa
cmpsb
out
xchg
pop
jns
add
lods
pusha
add
xchg
hlt
pop
notl
into
pop
sbb
mov
mov
hlt
and
mov
add
xor
xor
loope
pop
sbb
les
rcrl
out
call
pop
lock
inc
pusha
mov
int
mov
outsb
add
movsb
outsb
add
mov
xchg
add
mov
movsl
pushf
push
stos
mov
add
cmc
enter
xor
add
mov
add
psubb
cld
dec
lods
sub
je
sarb
mov
ja
das
cmp
arpl
popa
hlt
ljmp
sub
pop
fmul
xor
idiv
cld
or
sbb
push
imul
add
mov
push
data16
dec
lret
test
push
push
add
xlat
xor
pop
idivb
popa
xchg
push
cmp
jbe
and
mov
push
jg
pop
lcall
push
pushf
xor
jbe
mov
jp
jecxz
add
pop
or
pop
negl
jecxz
shrb
mov
pop
pop
and
mov
fs
ljmp
pop
fstpt
inc
add
and
mov
jne
xchg
bound
decb
xchg
adc
inc
adc
ljmp
test
cwtl
and
repz
mov
push
sub
data16
decb
sbb
ss
mov
dec
add
mov
sub
lea
cld
push
decb
fists
scas
leave
popf
stc
into
inc
jecxz
pop
gs
daa
jne
call
and
push
mov
add
lea
push
push
push
xchg
clc
test
je
jmp
adc
clc
lea
or
mov
shr
shr
add
push
push
push
push
call
leave
ret
ret
xchg
mov
or
xchg
shl
add
lea
sub
shr
dec
not
sub
mov
clc
je
push
pop
add
lea
clc
jmp
jmp
push
mov
sub
lea
orl
andl
cld
push
push
push
push
call
test
je
in
dec
and
push
push
push
call
mov
lea
test
jne,pn
lahf
inc
add
pop
push
dec
fwait
insb
incb
rol
je
rclb
rcrl
lods
bound
fwait
push
mov
mov
or
cli
ljmp
sarb
fisttpll
add
lea
fwait
pop
ljmp
lahf
pop
or
outsb
out
mov
add
dec
add
inc
sbb
dec
mov
cmpsb
fsubl
inc
stos
sbb
lret
fstpt
jg
in
xlat
push
xchg
pop
out
sub
dec
loopne
add
pop
daa
inc
add
sbb
test
lcall
and
cmp
fimull
adc
fcmovnb
inc
add
dec
jmp
xchg
jl
and
cmp
int3
repnz
pop
push
add
out
cmpsb
sub
and
incb
mov
inc
testb
dec
test
mov
mov
mov
clc
ljmp
aas
or
jge
rol
test
rcrb
xor
add
xchg
ljmp
fs
sbb
rolb
jae
cmp
cld
fnsave
pop
je
xor
decb
fnstsw
dec
push
in
or
xchg
cmp
pop
pusha
add
test
and
add
in
push
inc
add
jmp
xchg
js
fstpt
lret
push
mov
cmpsb
pop
loope
adc
es
popa
popf
test
adc
sbb
and
stos
push
stos
mov
dec
add
out
xor
xor
cmp
push
fldt
incb
add
mov
cmp
bound
push
sbb
nop
call
cltd
lods
push
or
mov
sti
mov
decb
mov
popa
movb
aam
test
stos
cwtl
test
add
pop
arpl
sahf
lods
imul
decb
aam
adc
pop
in
fimull
les
adc
fs
imul
cmc
and
enter
repz
dec
add
lock
cs
adc
sbb
add
adc
jne
cmpsb
aaa
cmp
inc
shr
ljmp
jge
mov
mov
rolb
add
push
mov
dec
mov
lock
lahf
xchg
pop
jns
push
movsl
je
and
cltd
rolb
pop
jp
sbb
popf
mov
fstps
fisttpl
or
xchg
pop
and
icebp
lcall
sbbb
or
fnstsw
inc
icebp
cmp
or
outsb
decb
xchg
loope
scas
xchg
cmp
sub
pop
lea
lock
scas
jnp
push
cmp
push
jno
pop
scas
sub
das
test
rep
inc
cwtl
adcl
pop
xor
inc
loop
jmp
adc
mov
test
rorl
in
in
mov
loopne
inc
add
or
lods
inc
sub
call
insb
decb
inc
in
xorl
pop
mov
add
loopne
inc
jl
cmp
add
dec
xor
add
or
idivl
mov
jbe
cmp
dec
int
or
incb
push
pushf
xchg
adc
aam
std
jl
xlat
ret
or
jge
icebp
js
sti
adc
lods
pop
std
jl
jp
rcr
loopne
cs
add
decb
fdivl
popa
push
pushf
mov
xchg
addl
pop
cltd
cmp
incb
inc
xchg
sub
gs
mov
int3
out
fstpl
sub
mov
and
push
xchg
loopne
pop
mov
cld
out
jge
cmpl
je
aam
add
cmp
push
daa
dec
add
divl
scas
xchg
mov
enter
clc
dec
or
decb
js
call
fnstsw
lahf
rorl
mov
or
cmp
mov
add
xchg
cld
sbb
stos
in
pop
push
add
mov
sbb
test
xor
add
mov
cltd
mov
pop
insb
add
int3
pop
mov
fbld
dec
cmpb
add
loopne
xchg
mov
frstor
pop
outsl
daa
idiv
mov
je
mov
fdivrs
mov
mov
mov
scas
scas
push
mov
sbb
jnp
add
decb
jmp
xchg
loope
pop
aas
or
and
push
ret
roll
push
sub
stc
gs
pusha
scas
pop
jne
insb
add
push
outsb
call
mull
sbb
movsb
jmp
jns
ds
xchg
aas
test
clc
jge
xor
xchg
jmp
jnp
inc
dec
pop
in
inc
add
cmp
mov
sub
jmp
test
adc
add
aad
adc
xor
dec
sub
inc
mov
cmp
add
incb
mov
out
mov
and
push
pop
pop
push
inc
add
cmp
add
mov
sbb
test
jnp
jecxz
stos
mov
mov
mov
pop
imul
dec
jbe
int
sub
fimuls
adc
orb
movsb
outsb
add
sub
int3
or
dec
add
test
add
dec
push
xor
cmp
dec
fistpll
xor
clc
test
lods
mov
clc
adc
mov
or
dec
insl
ljmp
add
repz
push
xchg
insl
add
lods
pop
cld
cmpsl
xor
add
dec
dec
gs
imul
lock
roll
cmp
cmpsl
test
adc
dec
add
les
outsl
popf
pushf
enter
pop
jne
xchg
pop
lret
xlat
xor
xlat
aam
xchg
ss
incb
call
add
aas
test
xchg
rorl
and
decb
sbb
mov
cmpsb
or
cltd
and
lods
out
add
add
gs
or
incb
iret
call
dec
mov
push
lcall
lock
add
lret
and
xchg
cmp
ja
gs
aas
mov
lcall
lods
mov
lahf
and
int
jbe
lea
mov
outsl
js
aas
stos
cmpsl
push
add
sub
jg
xchg
mov
dec
mov
sub
fxch
mov
cltd
pop
mov
nop
imul
sub
add
loope
ficomps
jno
mov
mov
incb
mov
mov
das
and
cmpsb
hlt
sahf
cmpsb
loopne
sbb
xchg
and
pop
jp
std
mov
mov
pop
imul
fldt
outsl
inc
push
mov
add
and
addr16
incb
add
incb
jns
popf
xchg
nop
adc
add
in
mov
iret
sub
mov
je
repnz
lds
add
or
scas
jno
add
loop
das
push
cwtl
xor
test
cmc
subl
pop
dec
scas
in
outsb
decb
repnz
xor
cwtl
sahf
jne
cltd
push
xor
xor
xchg
or
decb
lahf
jecxz
mull
fadd
and
mov
add
sbb
adc
lret
pop
xor
jle
idivl
arpl
add
nop
mov
loopne
incb
xchg
test
mov
cld
push
fwait
push
mov
inc
add
ja
pop
icebp
add
dec
jle
sbb
dec
incb
insl
add
in
pop
mov
shlb
mov
xchg
jle
stos
rcrl
int
aad
xor
mov
xchg
push
mov
in
les
pop
fsubrs
add
jmp
fwait
cmp
add
adc
sub
es
mov
lods
dec
add
cmp
xor
jmp
jge
outsl
gs
dec
push
sbb
jge
addr16
ret
dec
hlt
scas
or
lcall
add
xchg
push
xor
enter
sbb
stc
xchg
add
shlb
add
or
add
push
scas
pop
dec
push
fnstsw
sub
fisubrs
rcll
aam
lret
add
shlb
sub
cmp
lret
std
jnp
daa
das
and
aaa
add
mov
outsl
lcall
pop
inc
push
and
daa
cmp
enter
and
incb
mov
les
incb
stos
fidivrs
lcall
aam
out
xor
push
push
in
pop
out
nop
icebp
mov
add
add
test
mov
je
incb
push
mov
xchg
pop
wrmsr
addr16
and
aas
sbb
arpl
add
data16
cmc
mov
mov
jge
js
add
xchg
mov
pop
dec
inc
inc
dec
xchg
push
or
pop
addr16
add
and
test
es
aaa
pop
dec
cmp
add
mov
add
in
jecxz
add
aam
or
dec
add
decb
cli
sub
add
pushl
or
incb
movsl
ds
add
cmpsb
adc
mov
lret
ret
inc
add
mov
add
lahf
mov
add
cmp
mov
scas
cmpsl
xchg
pop
mov
mov
lock
add
arpl
pop
es
dec
andl
cmp
int3
sbb
repnz
xor
push
mov
inc
test
cmp
dec
decb
rcrb
out
sbbb
push
call
dec
add
leave
inc
add
jp
push
push
pop
imul
jl
xchg
jecxz
ja
adc
inc
add
jmp
test
dec
dec
add
lret
movsl
cwtl
cmp
decb
popa
xchg
jmp
mov
fnstsw
int
mov
adcl
addr16
adc
pop
aaa
fiaddl
xchg
mov
fsubrs
out
idivb
loop
mov
std
ficompl
pop
in
mov
clc
repnz
flds
add
incb
cmp
push
add
sub
jp
mov
inc
lret
push
xlat
repnz
jge
adcl
in
mov
push
cmp
sbb
inc
add
imul
jmp
movsb
mov
add
inc
in
leave
dec
add
outsl
jmp
fistps
pop
aas
cmpsl
jecxz
aas
cmpsb
test
dec
dec
push
add
jle
enter
es
lcall
xchg
jbe
movsb
mov
dec
add
xchg
mov
push
ja
sahf
cmp
cmp
pushf
xor
xor
je
jle
cmp
add
jo
sub
inc
mov
inc
push
pop
out
add
adc
add
jns
int
cmp
xor
and
mov
data16
mov
js
add
decb
aas
xchg
xor
decb
sbb
stc
std
jno
inc
insb
incb
lods
jle
add
inc
fidivrs
inc
xlat
ljmp
mov
je
add
daa
cli
jbe
pusha
add
push
add
addb
sti
rol
scas
es
xchg
sub
incb
decb
sbb
mov
sub
jg
add
sub
test
xchg
xchg
fidivs
mov
adc
add
mov
mov
cmpsb
repnz
or
clc
xlat
leave
mov
add
dec
xor
decb
gs
jb
inc
incb
dec
xchg
sub
and
mov
xchg
sub
aam
inc
in
add
das
push
push
js
ret
ja
cmp
pop
mov
cld
sbb
out
test
ljmp
push
cmp
pop
mov
mov
shll
mov
out
lahf
mov
pushf
inc
xchg
sbb
pop
pop
add
mov
add
testb
aas
adc
aaa
stc
mov
mov
ja
es
ror
popf
jno
test
or
adc
into
popa
int
add
incb
icebp
movsb
aam
sahf
outsb
add
sti
and
incb
add
mov
adc
arpl
leave
xlat
cltd
xor
push
decb
xchg
loop
divb
data16
jge
mov
arpl
mov
incb
jmp
mov
lock
jae
lret
cmpsl
push
data16
mov
loop
data16
jnp
jmp
add
mov
jl
into
inc
and
and
data16
sbb
add
repz
aam
sub
push
aas
aam
hlt
adc
push
rorb
add
push
inc
testl
ss
jmp
iret
ljmp
jne
cltd
jnp
jg
xlat
out
add
incb
gs
rcrb
lcall
add
sbb
fbstp
insl
lods
les
dec
adc
out
xor
add
mov
les
mov
sbb
ficomps
mov
clc
jle
mov
sub
out
inc
add
add
out
in
popf
adcb
test
and
fimuls
sub
nop
jp
inc
js
pop
xchg
scas
ret
jbe
mov
dec
add
and
xchg
les
loope
shlb
call
mov
insl
ja
sub
pop
das
movsb
inc
mov
add
in
jno
adc
adc
mov
lock
mov
subl
test
and
pop
mov
mov
jle
and
sbb
popa
lods
js
fs
mov
repnz
jo
fisubrs
sbb
hlt
xchg
dec
lods
dec
jge
pop
or
fs
incb
fwait
imul
nop
jmp
shll
and
enter
mov
mov
fbld
pop
cmpsb
inc
rcrl
xlat
dec
fs
push
js
mov
xor
cmp
mov
out
push
xchg
shrl
je
pop
fs
out
pop
nop
mov
push
sti
jns
fwait
adc
incb
jae
sub
or
xchg
sbb
and
add
mov
repz
pusha
fs
push
loope
cli
xchg
out
jbe
inc
add
jle
sub
mov
iret
adc
add
insb
sahf
es
incb
out
aad
add
aas
in
movsb
stos
bnd
add
out
adc
inc
cs
pop
or
in
mov
ds
pop
mov
popf
inc
es
xor
lods
cwtl
sbb
push
clc
nop
nop
nop
nop
jae
add
mov
add
push
repz
push
mov
xchg
ret
add
pop
add
push
jl
cmc
xchg
add
add
cmp
add
nop
nop
nop
nop
jae
add
outsl
xor
mov
clc
nop
nop
nop
nop
jae
or
iret
cmc
iret
add
mov
clc
nop
nop
nop
nop
jae
add
add
add
fs
adc
cmc
pop
jne
clc
nop
nop
nop
nop
jae
and
cmp
xchg
push
js
adc
ja
call
testl
inc
add
add
add
and
clc
nop
nop
nop
nop
jae
sbb
repnz
add
icebp
sti
pop
je
clc
nop
nop
nop
nop
jae
or
adc
mov
fdivl
jge
sub
add
nop
nop
nop
nop
jae
add
cmc
inc
add
push
push
inc
add
sub
hlt
addb
or
ret
sbb
add
and
test
xor
push
jbe
adc
mov
xchg
ret
add
add
jne
mov
repnz
sbb
add
iret
or
inc
add
add
add
push
add
dec
nop
push
mov
leave
nop
jmp
icebp
add
and
stos
jl
call
push
nop
push
mov
leave
nop
jmp
iret
add
jne
movsl
xchg
add
cmp
inc
add
aam
xchg
or
add
add
lea
push
mov
xchg
ret
and
push
outsl
mov
outsl
add
mov
clc
nop
nop
nop
nop
jae
add
aam
add
fwait
push
mov
xchg
ret
stos
faddl
jmp
add
jmp
sahf
test
cmpsb
mov
mov
xchg
ret
and
or
add
jno
cmpl
nop
nop
nop
nop
jae
add
mov
push
adc
nop
nop
nop
jae
or
mov
or
push
ljmp
dec
push
mov
xchg
ret
jmp
add
stos
add
sahf
add
add
or
inc
push
mov
xchg
ret
sbb
add
add
add
add
push
clc
nop
nop
nop
nop
jae
add
jno
add
iret
add
mov
clc
nop
nop
nop
nop
jae
add
add
sub
movsb
aad
rclb
jl
inc
add
inc
add
sbb
jmp
mov
pop
clc
nop
nop
nop
nop
jae
add
inc
add
add
data16
stos
sti
mov
clc
nop
nop
nop
nop
jae
pop
stos
mov
or
jl
cmp
or
inc
mov
clc
nop
nop
nop
nop
jae
xchg
add
add
push
add
and
jg
push
mov
xchg
ret
add
push
mov
add
xchg
ja
cmc
repnz
nop
nop
nop
nop
jae
stos
add
add
add
xchg
add
add
nop
push
mov
leave
nop
jmp
add
push
add
icebp
add
jno
mov
clc
nop
nop
nop
nop
jae
push
jmp
add
add
jmp
lods
push
nop
push
mov
leave
nop
jmp
and
pop
movsl
xchg
add
ja
test
sbb
incb
add
test
in
leave
nop
jmp
and
add
sti
add
inc
mov
inc
loopne
pop
clc
nop
nop
nop
nop
jae
add
outsl
xchg
inc
icebp
add
mov
sub
nop
nop
nop
nop
jae
movsl
lcall
add
cmp
push
mov
leave
nop
jmp
aam
add
jmp
xchg
add
inc
add
fld1
push
mov
xchg
ret
jmp
push
inc
add
sub
add
add
add
in
jmp
add
jno
add
lcall
add
iret
add
pop
ret
clc
nop
nop
nop
nop
jae
add
or
jnp
add
inc
xchg
add
dec
add
shlb
mov
repnz
imul
scas
addb
stc
add
test
mov
and
nop
nop
nop
nop
jae
ja
add
and
add
jl
filds
nop
nop
nop
jae
mov
push
add
sbb
mov
adc
nop
jmp
xchg
add
add
add
add
push
push
mov
xchg
ret
add
add
add
and
mov
add
pop
xor
nop
nop
nop
jae
jmp
add
mov
add
jbe
icebp
lods
clc
nop
nop
nop
nop
jae
add
pop
add
push
add
xchg
inc
add
add
add
mov
inc
test
dec
cmp
push
mov
leave
nop
jmp
mov
pop
add
and
repnz
in
leave
nop
jmp
add
push
aam
or
add
nop
nop
nop
nop
jae
add
and
mov
outsl
call
mov
xchg
ret
pop
jl
add
inc
add
add
jl
inc
aaa
xchg
push
mov
xchg
ret
sahf
add
add
add
sti
cli
icebp
push
clc
nop
nop
nop
nop
jae
sbb
sub
ja
and
ja
add
mov
inc
sub
mov
and
or
stos
pop
repnz
add
add
add
nop
nop
nop
nop
jae
add
icebp
aam
add
clc
nop
nop
nop
nop
jae
push
add
icebp
add
and
or
or
dec
pop
clc
nop
nop
nop
nop
jae
inc
jmp
add
add
add
inc
jmp
pop
push
mov
xchg
ret
add
faddl
add
add
loope
repz
nop
nop
nop
nop
jae
sti
stos
aam
add
xchg
add
push
add
sub
dec
ss
mov
clc
nop
nop
nop
nop
jae
add
add
add
incb
pop
cmp
nop
nop
nop
nop
jae
sti
add
stos
sbb
pop
mov
add
sub
and
add
nop
push
mov
leave
nop
jmp
add
and
cmp
jp
aad
add
add
leave
nop
jmp
add
jne
pop
push
sub
xchg
and
pop
add
mov
clc
nop
nop
nop
nop
jae
add
push
add
pop
and
or
xchg
xorl
clc
nop
nop
nop
nop
jae
add
push
add
dec
pop
nop
push
mov
leave
nop
jmp
and
add
sbb
faddl
xchg
pop
add
fwait
mov
clc
nop
nop
nop
nop
jae
add
push
mov
cmp
push
clc
nop
nop
nop
nop
jae
add
fs
add
add
push
push
push
jne
loop
push
mov
xchg
ret
fs
add
add
sub
pop
in
call
clc
nop
nop
nop
nop
jae
stos
sbb
sbb
ds
rclb
nop
jmp
jne
add
and
push
add
inc
jp
nop
push
mov
leave
nop
jmp
jno
cmp
pop
data16
add
pop
clc
nop
nop
nop
nop
jae
add
pop
pop
xchg
call
add
int3
lea
xchg
ret
jnp
pop
add
adc
add
sbb
nop
nop
nop
jae
add
add
repnz
add
add
push
push
cmp
mov
adc
add
out
jg
sbb
add
add
lahf
mov
adc
nop
nop
nop
nop
jae
add
add
pop
add
add
rorl
nop
nop
nop
nop
jae
add
repnz
jmp
push
jle
pop
push
mov
xchg
ret
repnz
add
add
movsl
cmc
add
jmp
imul
adc
add
add
outsl
add
pop
mov
xchg
nop
nop
nop
nop
jae
add
stos
add
sti
add
faddl
sbb
stos
clc
nop
nop
nop
nop
jae
sti
sub
stos
jl
add
mov
sbb
clc
nop
nop
nop
nop
jae
cmc
faddl
mov
push
aam
add
and
ror
fld1
push
mov
xchg
ret
add
add
add
add
jmp
push
add
push
add
aam
add
add
mov
clc
nop
nop
nop
nop
jae
call
sahf
fs
mov
push
mov
xchg
ret
push
adc
aam
jmp
add
inc
add
mov
and
sub
loopne
movswl
clc
nop
nop
nop
nop
jae
add
and
add
sti
xchg
pusha
add
mov
call
nop
jmp
or
push
add
add
js
add
push
mov
xchg
ret
add
sbb
iret
push
add
outsl
add
popf
mov
clc
nop
nop
nop
nop
jae
add
pop
inc
push
icebp
add
cltd
mov
clc
nop
nop
nop
nop
jae
mov
jno
push
sbb
mov
push
xchg
xor
clc
nop
nop
nop
nop
jae
or
add
faddl
or
mov
push
mov
xchg
ret
add
mov
add
mov
clc
nop
nop
nop
nop
jae
add
test
add
add
push
xchg
mov
xchg
ret
add
stos
add
jnp
add
xlat
push
clc
nop
nop
nop
nop
jae
sub
push
inc
push
and
add
add
dec
inc
nop
push
mov
leave
nop
jmp
add
add
add
add
add
jns
jne
clc
nop
nop
nop
nop
jae
add
jmp
add
xchg
push
jno
shl
mov
clc
nop
nop
nop
nop
jae
inc
add
add
or
inc
inc
add
nop
jmp
mov
add
add
out
decb
inc
clc
nop
nop
nop
nop
jae
repnz
iret
add
sub
sub
mov
push
mov
push
mov
xchg
ret
add
push
movsl
ja
add
push
pop
push
mov
xchg
ret
push
add
sahf
and
mov
lods
mov
mov
push
mov
xchg
ret
add
repnz
jmp
jmp
mov
push
mov
xchg
ret
add
or
pop
inc
call
jae
nop
push
mov
leave
nop
jmp
sbb
add
iret
lcall
sub
pusha
add
imul
nop
nop
jae
data16
add
add
stos
sub
stos
sbb
push
and
fmull
add
stos
add
add
push
add
sub
aam
add
add
shrb
xchg
jne
nop
push
mov
leave
nop
jmp
inc
cmp
sahf
in
ja
sbb
clc
nop
nop
nop
nop
jae
add
add
add
add
add
jmp
incl
stos
add
jne
and
push
and
jmp
inc
mov
mov
push
mov
xchg
ret
add
pop
pop
inc
add
add
push
mov
xchg
ret
add
push
pop
cmc
sbb
inc
data16
std
add
clc
nop
nop
nop
nop
jae
add
fdiv
inc
jl
inc
xchg
add
xchg
clc
nop
nop
nop
nop
jae
movsl
push
add
add
add
jne
or
filds
nop
nop
nop
jae
sub
sub
add
aam
call
clc
nop
nop
nop
nop
jae
add
lcall
ja
xchg
sub
mov
add
clc
nop
nop
nop
nop
jae
mov
add
jne
fwait
fwait
push
mov
xchg
ret
add
stos
add
ja
add
add
inc
int
dec
xor
add
ja
iret
add
jl
and
ja
add
sbb
test
adc
mov
leave
nop
jmp
add
add
jne
mov
mov
push
mov
xchg
ret
pop
add
add
add
sbb
andnps
add
inc
add
add
add
add
add
push
clc
nop
nop
nop
nop
jae
xchg
add
add
jne
and
sahf
add
mov
push
nop
push
mov
leave
nop
jmp
add
jne
add
push
add
add
clc
nop
nop
nop
nop
jae
or
lcall
div
nop
push
mov
leave
nop
jmp
add
add
add
add
add
dec
stos
push
mov
xchg
ret
pop
icebp
cmc
add
jl
jl
aam
add
mov
nop
push
mov
leave
nop
jmp
add
data16
add
mov
or
cmc
clc
nop
nop
nop
nop
jae
add
add
add
addl
nop
nop
jae
add
and
sbb
inc
ja
push
jl
cld
clc
nop
nop
nop
nop
jae
push
jne
add
add
sbb
faddl
and
xor
clc
nop
nop
nop
nop
jae
pop
outsl
icebp
add
sbb
mov
leave
nop
jmp
add
add
add
stos
jno
add
arpl
add
add
lcall
repnz
xchg
call
nop
nop
nop
jae
add
add
cmc
add
xchg
psubsb
or
add
nop
nop
nop
nop
jae
add
call
push
arpl
nop
nop
jae
push
add
add
add
fldcw
nop
jae
add
xchg
pop
mov
fwait
add
clc
nop
nop
nop
nop
jae
add
add
add
inc
add
clc
nop
nop
nop
nop
jae
inc
lcall
insl
xchg
nop
push
mov
leave
nop
jmp
adc
jmp
push
add
stos
add
pop
jmp
nop
nop
jae
repnz
add
lea
push
mov
leave
nop
jmp
add
stos
add
jno
adc
mov
in
int
in
add
add
add
add
xor
mov
mov
push
clc
nop
nop
nop
nop
jae
inc
add
add
push
jmp
stos
outsl
sub
nop
nop
nop
nop
jae
cmc
inc
and
add
mov
add
movsb
jno
push
mov
xchg
ret
add
adc
add
add
inc
and
add
incb
add
add
nop
nop
nop
nop
jae
jnp
add
and
fcoml
add
nop
push
mov
leave
nop
jmp
add
inc
jmp
add
push
loopne
xchg
push
mov
xchg
ret
add
add
push
jmp
xacquire
add
shr
clc
nop
nop
nop
nop
jae
add
push
add
add
mov
xchg
ret
or
call
jnp
add
mov
leave
nop
jmp
jno
sub
stos
jmp
and
push
push
xchg
and
adc
in
leave
nop
jmp
add
add
data16
clc
nop
nop
nop
nop
jae
sbb
xchg
or
add
jnp
push
mov
xchg
ret
add
repnz
and
jl
xchg
icebp
add
mov
ret
add
insl
inc
add
add
add
add
inc
push
clc
nop
nop
nop
nop
jae
call
add
and
sub
push
mov
rclb
ficompl
add
add
add
jp
jbe
clc
nop
nop
nop
nop
jae
add
add
add
or
mov
leave
nop
jmp
pop
add
add
add
push
push
mov
xchg
ret
sub
add
inc
and
iret
push
add
push
add
in
rclb
jbe
add
jmp
add
add
xchg
pop
nop
push
mov
leave
nop
jmp
add
add
add
lcall
leave
nop
push
mov
leave
nop
jmp
add
ja
and
jmp
pop
je
nop
push
mov
leave
nop
jmp
or
inc
call
clc
nop
nop
nop
nop
jae
add
sbb
stos
push
jne
add
sti
clc
nop
nop
nop
nop
jae
xchg
add
inc
sub
rorl
nop
nop
jae
pop
sbb
add
add
jmp
dec
push
clc
nop
nop
nop
nop
jae
jne
push
adc
add
sub
lret
mov
leave
nop
jmp
inc
inc
pop
inc
add
add
inc
xchg
add
fwait
clc
nop
nop
nop
nop
jae
add
add
and
add
add
mov
add
push
lods
nop
push
mov
leave
nop
jmp
fs
add
or
stos
add
push
jge
add
inc
push
outsl
xchg
add
mov
push
mov
xchg
ret
fs
add
add
add
outsl
mov
mov
clc
nop
nop
nop
nop
jae
cmc
add
inc
add
add
sar
nop
nop
nop
nop
jae
push
add
add
inc
add
add
nop
push
mov
leave
nop
jmp
add
add
pop
jl
add
add
mov
xchg
ret
fsubr
add
add
jne
add
sahf
xchg
adc
nop
nop
nop
nop
jae
mov
xchg
add
add
add
sub
push
popf
fld1
nop
push
mov
leave
nop
jmp
jl
jmp
add
inc
add
push
mov
xchg
ret
jmp
add
add
inc
push
push
add
add
nop
jmp
add
inc
mov
push
fdivrl
add
sbb
cmp
incl
stos
xchg
push
add
xchg
or
xchg
mov
ds
push
mov
add
imul
add
scas
add
add
mov
dec
pop
clc
nop
nop
nop
nop
jae
add
add
add
jne
xchg
add
test
jge
add
ja
mov
push
add
jmp
add
push
jb,pt
movzwl
clc
nop
nop
nop
nop
jae
add
add
or
call
test
add
clc
nop
nop
nop
nop
jae
mov
add
call
clc
nop
nop
nop
nop
jae
add
pop
add
fwait
clc
nop
nop
nop
nop
jae
xchg
movsl
add
push
add
add
pop
clc
nop
nop
nop
nop
jae
and
push
add
add
sbb
add
sub
lsl
clc
nop
nop
nop
nop
jae
add
xchg
and
add
push
mov
xchg
ret
sub
add
test
add
adc
clc
nop
nop
nop
nop
jae
jne
add
or
push
add
cmp
dec
cmp
nop
nop
nop
nop
jae
push
add
add
inc
jne
inc
call
inc
add
sbb
inc
add
add
add
push
test
leave
insb
inc
add
inc
add
add
cmc
push
inc
jl
sbbb
jmp
nop
nop
jae
add
push
adc
add
ja
sub
mov
xchg
ret
add
add
add
fisubl
roll
push
mov
leave
nop
jmp
stos
add
add
adc
nop
nop
nop
nop
jae
jl
inc
inc
add
adc
cmp
push
mov
xchg
ret
inc
jne
add
xchg
push
xchg
xchg
push
ret
add
jne
clc
nop
nop
nop
nop
jae
xchg
cmp
sbb
add
jae
nop
nop
nop
nop
jae
or
push
add
je
nop
push
mov
leave
nop
jmp
stos
add
push
push
push
mov
xchg
ret
add
sbb
mov
add
add
nop
nop
nop
nop
jae
mov
iret
add
stos
inc
xchg
add
js
xor
push
mov
xchg
ret
add
push
outsl
add
jmp
movzwl
clc
nop
nop
nop
nop
jae
add
inc
add
jmp
add
movswl
clc
nop
nop
nop
nop
jae
add
add
add
add
push
mov
nop
nop
nop
jae
jmp
jl
add
add
cld
push
push
clc
nop
nop
nop
nop
jae
jnp
add
inc
test
add
add
mov
test
nop
push
mov
leave
nop
jmp
add
add
xchg
xchg
test
inc
inc
cmpsb
adc
mov
xchg
ret
cmc
add
inc
sub
add
add
stos
xchg
daa
cmp
nop
push
mov
leave
nop
jmp
add
mov
jl
cmc
movsl
inc
add
pop
cmp
push
mov
xchg
ret
stos
add
add
aam
push
push
ljmp
inc
cmp
mov
xchg
ret
xchg
add
faddl
add
add
add
testb
test
dec
fildl
jo
add
add
mov
pusha
add
cmp
push
push
mov
xchg
ret
sbb
add
add
add
jmp
jmp
mov
leave
nop
jmp
faddl
add
inc
add
add
xorl
clc
nop
nop
nop
nop
jae
add
add
sbb
mov
clc
pop
inc
add
pop
xchg
stos
add
add
push
mov
pop
jmp
nop
nop
nop
jae
jmp
lcall
jle
decb
nop
nop
jae
sub
add
add
inc
add
jmp
jmp
or
nop
nop
jae
jmp
xchg
add
inc
test
add
fidivrl
push
add
nop
push
mov
leave
nop
jmp
and
add
pop
icebp
scas
dec
dec
nop
push
mov
leave
nop
jmp
or
add
and
clc
nop
nop
nop
nop
jae
add
mov
push
add
add
push
mov
xchg
ret
mov
and
add
add
cmp
pop
clc
nop
nop
nop
nop
jae
push
add
sbb
jmp
pop
add
push
jne
clc
nop
nop
nop
nop
jae
sbb
fs
inc
mov
imul
clc
nop
nop
nop
nop
jae
add
aam
inc
sti
add
aam
in
xor
nop
push
mov
leave
nop
jmp
push
cmc
test
add
add
mov
clc
nop
nop
nop
nop
jae
push
add
add
inc
add
pusha
incb
push
inc
add
add
add
add
aam
stos
add
push
mov
xchg
ret
add
add
add
and
xchg
mov
xchg
ret
add
faddl
lcall
sub
pop
fld1
clc
nop
nop
nop
nop
jae
add
add
mov
dec
fisttpl
nop
nop
nop
nop
jae
faddl
cmp
jno
xchg
cmp
inc
imul
add
and
add
add
add
add
and
dec
add
adc
xchg
ret
jmp
add
movsl
push
and
daa
pusha
nop
push
mov
leave
nop
jmp
sbb
add
push
lcall
mov
add
add
cli
add
repz
add
add
or
pop
clc
nop
nop
nop
nop
jae
sbb
inc
add
push
add
clc
nop
nop
nop
nop
jae
add
add
add
push
clc
nop
nop
nop
nop
jae
add
call
inc
add
add
nop
push
mov
leave
nop
jmp
sub
pop
add
mov
clc
nop
nop
nop
nop
jae
mov
add
add
sbb
push
nop
push
mov
leave
nop
jmp
add
add
add
jne
inc
aad
push
push
mov
xchg
ret
add
add
add
push
mov
xchg
ret
add
mov
add
call
mov
in
leave
nop
jmp
ja
sahf
add
inc
push
mov
in
add
inc
test
fadds
mov
imul
add
dec
add
pop
xor
jb
clc
nop
nop
nop
nop
jae
pop
pop
add
add
or
jbe
je
clc
nop
nop
nop
nop
jae
add
test
adc
push
decb
decb
pop
sub
mov
add
clc
nop
nop
nop
nop
jae
add
and
add
clc
jmp
in
clc
nop
nop
nop
nop
jae
cmp
add
push
add
lret
mov
clc
nop
nop
nop
nop
jae
test
add
repnz
jg
push
mov
xchg
ret
inc
and
add
add
test
pop
add
nop
push
mov
leave
nop
jmp
add
add
inc
lcall
nop
nop
jae
push
add
push
add
mov
and
dec
pop
inc
add
add
add
pop
add
sub
out
in
clc
nop
nop
nop
nop
jae
inc
sahf
add
xor
xchg
jl
mov
nop
push
mov
leave
nop
jmp
ja
add
add
mov
nop
push
mov
leave
nop
jmp
add
add
add
add
cltd
push
push
mov
xchg
ret
add
add
add
sub
data16
mov
leave
nop
jmp
cmc
inc
aam
or
add
add
outsb
add
mov
add
mov
nop
nop
nop
nop
jae
add
add
add
and
add
ret
nop
push
mov
leave
nop
jmp
add
ja
jmp
loop
push
mov
addl
add
add
inc
inc
mov
or
test
lcall
jmp
add
add
add
add
push
mov
xchg
ret
jmp
or
add
add
je
clc
nop
nop
nop
nop
jae
add
add
cmp
add
decb
call
inc
add
add
add
add
add
push
clc
nop
nop
nop
nop
jae
lcall
add
push
es
clc
nop
nop
nop
nop
jae
inc
sbb
inc
add
add
add
push
mov
xchg
ret
ja
jnp
jl
add
add
add
pop
cs
nop
nop
nop
nop
jae
icebp
add
add
add
sbb
xlat
add
push
mov
xchg
ret
or
inc
xchg
add
out
add
push
mov
xchg
ret
sbb
add
outsl
add
ret
stos
sbb
add
nop
nop
nop
nop
jae
add
add
xchg
add
in
add
dec
or
cmc
add
add
add
lret
add
jle
add
leave
push
push
mov
xchg
ret
add
push
push
lcall
add
out
jmp
add
icebp
add
sahf
pop
movsl
add
call
sbb
jmp
inc
push
int
test
pop
add
clc
nop
nop
nop
nop
jae
and
add
add
movb
dec
popa
clc
nop
nop
nop
nop
jae
add
mov
add
clc
nop
nop
nop
nop
jae
add
mov
add
xchg
je
fld1
push
mov
xchg
ret
mov
cmc
ja
ja
add
or
mov
or
es
cltd
push
mov
dec
add
test
add
shlb
aad
sub
xchg
add
mov
les
mov
xchg
ret
add
add
add
add
inc
add
or
incb
incb
nop
dec
mov
clc
nop
nop
nop
nop
jae
test
add
ja
mov
mov
cmpsl
popa
inc
add
add
add
jmp
int3
jl
hlt
popf
push
push
mov
xchg
ret
add
add
add
add
lea
push
mov
xchg
ret
add
add
add
add
push
mov
xchg
ret
stos
add
add
aam
add
add
pop
add
nop
push
mov
leave
nop
jmp
add
add
stos
cmc
add
scas
push
aas
clc
nop
nop
nop
nop
jae
add
add
inc
add
sbb
pop
jle
add
neg
call
inc
add
push
add
call
or
dec
add
clc
nop
nop
nop
nop
jae
pop
add
jmp
ja
aad
sbb
clc
nop
nop
nop
nop
jae
lcall
lcall
push
mov
dec
add
jmp
add
adc
nop
xchg
dec
add
popf
adc
add
add
nop
nop
nop
nop
jae
push
inc
cmc
add
iret
xchg
add
mov
add
imul
jmp
fstpl
add
jne
clc
nop
nop
nop
nop
jae
add
jmp
add
inc
push
mov
add
or
dec
add
xchg
add
jle
add
in
pop
push
mov
xchg
ret
add
add
add
inc
pop
add
add
in
sti
push
mov
add
pop
add
cld
xor
add
inc
add
jbe
xchg
jge
shr
nop
push
mov
leave
nop
jmp
jmp
add
mov
add
cmp
rep
push
mov
xchg
ret
sbb
add
add
adc
clc
nop
nop
nop
nop
jae
stos
iret
add
add
jmp
cmp
inc
clc
nop
nop
nop
nop
jae
add
xchg
add
jns
nop
push
mov
leave
nop
jmp
call
add
adc
shl
clc
nop
nop
nop
nop
jae
add
iret
push
add
add
xor
nop
nop
nop
nop
jae
mov
or
pop
pop
mov
sar
mov
xchg
ret
jne
push
add
stos
aam
cmc
add
dec
mov
nop
push
mov
leave
nop
jmp
jmp
pop
add
add
add
add
sub
xor
dec
clc
nop
nop
nop
nop
jae
and
or
add
and
and
push
mov
leave
nop
jmp
adc
add
add
and
jmp
ror
push
mov
mov
add
mov
ret
and
inc
xlat
outsb
push
je
clc
nop
nop
nop
nop
jae
mov
push
add
xchg
add
push
mov
xchg
ret
add
add
inc
add
add
cmc
and
push
mov
leave
nop
jmp
mov
xchg
and
je
cmp
call
nop
nop
jae
add
add
sti
inc
add
add
xor
and
push
mov
xchg
ret
add
add
add
add
inc
dec
add
int3
adc
nop
nop
jae
add
jmp
add
stos
icebp
mov
pusha
nop
push
mov
leave
nop
jmp
test
add
add
add
faddl
mov
nop
nop
jae
push
jne
iret
add
sbb
stos
push
add
lret
rep
clc
nop
nop
nop
nop
jae
inc
add
push
lcall
add
add
nop
jmp
repnz
jne
add
pop
pop
pop
nop
push
mov
leave
nop
jmp
ja
add
add
add
jmp
inc
jg
call
nop
nop
jae
jno
push
add
test
add
push
jl
mov
inc
clc
nop
nop
nop
nop
jae
add
ja
inc
jmp
stos
jle
fld1
push
mov
xchg
ret
add
add
jne
hlt
adc
nop
nop
nop
nop
jae
add
add
stos
aam
add
add
jbe
push
mov
xchg
ret
or
add
add
add
add
cmp
pusha
add
ljmp
testb
dec
nop
push
mov
leave
nop
jmp
add
mov
inc
add
add
arpl
nop
nop
nop
nop
jae
icebp
add
push
or
add
ret
push
clc
nop
nop
nop
nop
jae
push
add
pop
add
add
pop
push
icebp
xor
clc
nop
nop
nop
nop
jae
add
test
inc
push
mov
dec
add
pop
shl
jmp
nop
jae
push
and
push
ja
add
mov
fistpl
clc
nop
nop
nop
nop
jae
add
add
add
and
add
nop
nop
nop
jae
add
and
add
push
lcall
add
cmp
nop
nop
nop
jae
add
add
ret
sub
add
or
inc
add
adc
xchg
add
sub
clc
nop
nop
nop
nop
jae
mov
and
add
add
pop
clc
nop
nop
nop
nop
jae
add
add
add
jo
sbb
add
nop
nop
nop
nop
jae
mov
add
add
add
add
clc
nop
nop
nop
nop
jae
add
add
pop
clc
nop
nop
nop
nop
jae
add
add
add
test
gs
clc
nop
nop
nop
nop
jae
add
mov
fs
xchg
jmp
mov
nop
nop
nop
nop
jae
mov
stos
or
test
add
clc
nop
nop
nop
nop
jae
xchg
or
add
sti
pop
into
sub
mov
add
nop
nop
nop
nop
jae
jmp
add
add
add
sahf
mov
pop
add
add
add
les
movzwl
push
mov
xchg
ret
sahf
call
sbb
add
xchg
mov
clc
nop
nop
nop
nop
jae
add
inc
mov
add
pop
xor
push
mov
leave
nop
jmp
add
movsl
add
add
sti
add
sub
je
push
mov
mov
cmp
pop
add
cmp
jb
nop
jb
add
pop
add
pop
call
nop
push
mov
leave
nop
jmp
add
cmc
xchg
add
push
dec
add
dec
decb
clc
nop
nop
nop
nop
jae
add
push
push
add
fs
dec
push
mov
xchg
ret
add
stos
add
add
add
mov
push
push
mov
xchg
ret
cmc
xchg
pop
add
add
or
in
jns
adc
sahf
mov
std
mov
jge
lock
jge
std
incb
lea
clc
nop
nop
nop
nop
jae
add
test
add
add
mov
faddl
lods
push
mov
xchg
ret
add
add
add
lcall
sbb
nop
nop
nop
nop
jae
call
add
jl
mov
clc
nop
nop
nop
nop
jae
add
add
add
stos
test
repnz
jecxz
jbe
nop
push
mov
leave
nop
jmp
add
add
test
push
mov
ss
cwtl
xor
push
mov
add
jp
inc
fsub
repz
nop
push
mov
leave
nop
jmp
push
iret
add
or
repnz
clc
nop
nop
nop
nop
jae
iret
add
add
stos
add
add
push
clc
nop
nop
nop
nop
jae
cmc
add
jmp
push
add
add
add
test
in
call
nop
jmp
and
add
jnp
mov
nop
nop
nop
jae
push
push
or
add
or
lret
push
clc
nop
nop
nop
nop
jae
add
add
sbb
add
add
push
mov
xchg
ret
add
add
jno
pop
add
jnp
call
pusha
clc
nop
nop
nop
nop
jae
jno
add
icebp
add
jmp
cmc
das
mov
clc
nop
nop
nop
nop
jae
add
add
add
and
cltd
pushl
push
mov
xchg
ret
outsl
add
add
add
add
push
add
lea
xchg
ret
inc
add
add
add
pop
mov
clc
nop
nop
nop
nop
jae
jmp
add
outsl
xchg
push
add
add
add
nop
nop
nop
nop
jae
add
pop
add
add
push
push
mov
xchg
ret
data16
add
cmc
add
data16
lea
jb
inc
add
movsl
jmp
add
inc
add
sbb
clc
nop
nop
nop
nop
jae
repnz
add
test
jp
mov
clc
nop
nop
nop
nop
jae
mov
add
add
icebp
add
je
nop
push
mov
leave
nop
jmp
inc
sbb
lcall
clc
nop
nop
nop
nop
jae
push
add
add
data16
aam
add
popf
popa
clc
nop
nop
nop
nop
jae
add
and
ret
jne
clc
nop
nop
nop
nop
jae
sbb
add
sbb
add
add
cmp
loopne
mov
xchg
ret
inc
outsl
mov
add
push
add
cmp
fistpl
clc
nop
nop
nop
nop
jae
add
mov
xchg
fs
sub
push
mov
nop
push
mov
leave
nop
jmp
or
add
add
add
aam
add
push
mov
xchg
ret
repnz
add
add
push
mov
rolb
incb
sub
clc
nop
nop
nop
nop
jae
add
add
add
add
xor
nop
push
mov
leave
nop
jmp
add
push
or
add
add
test
cmp
sbb
add
mov
and
push
add
jno
sbb
and
add
repnz
mov
clc
nop
nop
nop
nop
jae
inc
add
push
add
push
add
or
add
clc
nop
nop
nop
nop
jae
sub
sbb
add
add
inc
or
push
mov
leave
nop
jmp
cmc
repnz
add
xor
movsb
nop
push
mov
leave
nop
jmp
jmp
add
or
pop
in
cmp
nop
push
mov
leave
nop
jmp
jl
add
add
add
nop
nop
nop
nop
jae
mov
and
adc
add
sbb
cmp
nop
nop
nop
nop
jae
pop
add
add
add
shl
clc
nop
nop
nop
nop
jae
add
push
and
outsb
add
loop
mov
clc
nop
nop
nop
nop
jae
aam
add
add
sub
nop
push
mov
leave
nop
jmp
jl
add
add
add
mov
push
test
in
mov
repnz
outsl
jae
add
pop
add
lods
repz
icebp
nop
push
mov
leave
nop
jmp
add
mov
push
inc
add
mov
call
push
add
test
repnz
stos
ljmp
nop
nop
jae
inc
xchg
add
add
add
push
mov
xchg
ret
mov
iret
call
pop
sahf
add
nop
push
mov
leave
nop
jmp
add
add
add
outsl
add
push
mov
xchg
ret
add
fs
add
add
add
add
nop
nop
nop
nop
jae
repnz
xchg
sahf
inc
std
fwait
push
mov
xchg
ret
outsl
call
adc
add
inc
add
cmp
pop
clc
nop
nop
nop
nop
jae
mov
add
add
outsl
inc
or
out
in
and
clc
nop
nop
nop
nop
jae
xchg
call
add
mov
mov
clc
nop
nop
nop
nop
jae
add
add
inc
push
mov
add
fucomp
call
xchg
dec
das
add
daa
int
clc
nop
nop
nop
nop
jae
pop
or
jmp
jmp
jl
push
add
push
notl
clc
nop
nop
nop
nop
jae
xchg
add
aam
lcall
mov
nop
nop
nop
nop
jae
add
movsl
jnp
add
add
xchg
inc
clc
nop
nop
nop
nop
jae
cmp
aam
outsl
inc
add
push
test
push
mov
xchg
ret
sbb
or
push
repnz
sbb
lcall
clc
nop
nop
nop
nop
jae
cmc
and
add
hlt
cltd
push
clc
nop
nop
nop
nop
jae
add
jno
pop
xchg
mov
mov
push
mov
add
notl
testb
add
nop
add
call
int
pop
jae
nop
nop
nop
nop
jae
add
jno
js
pop
ja
add
push
mov
xchg
ret
add
jmp
test
in
sub
shl
call
clc
nop
nop
nop
nop
jae
push
push
sub
add
add
add
push
nop
push
mov
leave
nop
jmp
add
add
add
add
jmp
sbb
adc
clc
nop
nop
nop
nop
jae
pop
mov
add
add
cld
sub
nop
nop
nop
jae
add
add
inc
mov
push
push
xchg
nop
nop
nop
nop
jae
inc
or
add
ja
push
push
cmp
nop
nop
nop
nop
jae
add
pop
outsl
add
mov
push
add
push
add
iret
jne
clc
nop
nop
nop
nop
jae
add
add
fs
js
push
clc
nop
nop
nop
nop
jae
add
add
mov
push
mov
sub
lret
cmp
test
dec
add
sub
inc
push
push
mov
xchg
ret
and
add
mov
sbb
add
add
popf
add
clc
nop
nop
nop
nop
jae
and
add
inc
add
fwait
push
mov
xchg
ret
xchg
pop
add
jmp
add
add
adc
ss
clc
nop
nop
nop
nop
jae
jmp
lcall
add
push
cmc
pushl
push
mov
xchg
ret
add
and
jno
aam
test
and
xor
in
addr16
outsl
add
pop
add
daa
add
xchg
push
xor
in
leave
nop
jmp
add
cmc
sbb
add
add
mov
incl
add
add
add
stos
add
add
add
je
fistpl
clc
nop
nop
nop
nop
jae
add
or
push
add
pop
push
mov
xchg
ret
sbb
inc
add
add
sbb
add
add
nop
push
mov
leave
nop
jmp
mov
fs
push
mov
pop
add
stos
add
icebp
mov
add
add
add
xchg
add
push
mov
xchg
ret
add
and
add
xchg
outsl
cmc
inc
pop
and
mov
scas
push
clc
nop
nop
nop
nop
jae
cmc
push
mov
or
mov
dec
es
nop
nop
nop
nop
jae
add
add
pop
call
clc
nop
nop
nop
nop
jae
inc
add
add
mov
pop
push
mov
xchg
ret
add
push
inc
add
push
mov
jl
fsubl
xor
pusha
clc
nop
nop
nop
nop
jae
sti
or
test
add
add
add
and
nop
nop
nop
nop
jae
add
add
ja
inc
add
mov
sub
call
nop
jae
add
add
add
add
mov
mov
clc
nop
nop
nop
nop
jae
add
add
add
pop
mov
clc
nop
nop
nop
nop
jae
add
add
inc
call
push
mov
xchg
ret
mov
push
jno
icebp
sahf
jmp
dec
jne
clc
nop
nop
nop
nop
jae
add
add
or
test
jne
clc
nop
nop
nop
nop
jae
push
add
add
pop
and
add
add
mov
ja
add
jl
enter
sbb
add
mov
popf
cmpsb
mov
nop
push
mov
leave
nop
jmp
stos
and
add
mov
or
cmpsb
jbe
jno
push
mov
xchg
ret
jne
add
lcall
inc
xor
clc
nop
nop
nop
nop
jae
xchg
add
add
iret
pop
push
or
xchg
inc
mov
clc
nop
nop
nop
nop
jae
add
push
cmp
push
dec
add
arpl
mov
xchg
ret
test
xchg
add
pop
jnp
mov
cld
clc
nop
nop
nop
nop
jae
and
add
add
add
add
mov
nop
push
mov
leave
nop
jmp
add
inc
add
pop
add
test
nop
push
mov
leave
nop
jmp
sub
jne
inc
push
iret
or
push
clc
nop
nop
nop
nop
jae
add
call
outsl
sbb
ja
or
nop
jmp
mov
mov
add
nop
nop
nop
nop
jae
and
lcall
and
add
add
jo
xchg
xor
clc
nop
nop
nop
nop
jae
push
add
jl
add
add
data16
xor
clc
nop
nop
nop
nop
jae
pop
stos
sbb
movsl
add
jmp
faddl
rcll
add
sbb
cmp
inc
addb
rolb
pop
push
add
fmuls
inc
adc
nop
nop
nop
nop
jae
add
inc
sbb
add
add
std
push
nop
push
mov
leave
nop
jmp
jmp
jne
add
add
inc
repnz
imul
clc
nop
nop
nop
nop
jae
mov
inc
push
adc
add
pop
nop
push
mov
leave
nop
jmp
sbb
pop
pop
sahf
movsl
add
push
add
call
clc
nop
nop
nop
nop
jae
jne
add
sbb
add
jl
mov
clc
nop
nop
nop
nop
jae
add
sbb
push
add
push
push
mov
xchg
ret
add
add
jnp
push
stos
fimuls
clc
nop
nop
nop
nop
jae
mov
stos
sbb
add
lcall
nop
jae
sbb
aam
add
add
xchg
stos
clc
nop
nop
nop
nop
jae
add
test
add
add
clc
nop
nop
nop
nop
jae
jnp
add
pop
add
inc
add
xchg
mov
clc
nop
nop
nop
nop
jae
fdivrl
fsubr
add
sbb
push
mov
xchg
ret
add
jmp
jmp
add
pop
lds
mov
xchg
ret
push
add
inc
add
mov
into
dec
inc
add
add
add
jmp
inc
mov
mov
mov
xchg
ret
push
push
add
mov
or
add
fwait
push
mov
xchg
ret
icebp
push
add
inc
inc
and
xchg
add
sbb
decb
clc
nop
nop
nop
nop
jae
data16
or
and
add
je
clc
nop
nop
nop
nop
jae
lcall
icebp
ret
clc
nop
nop
nop
nop
jae
add
add
jmp
add
and
call
leave
nop
jmp
faddl
test
faddl
add
add
add
clc
nop
nop
nop
nop
jae
add
cmp
add
or
nop
nop
nop
jae
add
cmc
add
inc
pop
testl
add
add
inc
add
add
pop
push
pop
mov
xchg
ret
sbb
lcall
inc
clc
nop
nop
nop
nop
jae
add
xchg
add
sub
ret
nop
push
mov
leave
nop
jmp
push
add
push
xchg
push
mov
add
pop
push
mov
xchg
ret
add
add
add
add
mov
or
add
add
mov
inc
push
and
jmp
test
stos
or
adc
add
sub
clc
nop
nop
nop
nop
jae
add
add
call
clc
nop
nop
nop
nop
jae
mov
xchg
call
outsb
mov
stos
xchg
dec
lret
add
jmp
dec
add
repz
nop
push
mov
leave
nop
jmp
add
add
add
or
jns
roll
nop
nop
nop
nop
jae
and
add
jne
inc
push
mov
clc
nop
nop
nop
nop
jae
xchg
movsl
and
add
sub
add
xor
clc
nop
nop
nop
nop
jae
inc
and
jne
inc
add
add
rorl
mov
xchg
ret
sbb
xchg
add
and
pop
add
pushl
nop
push
mov
leave
nop
jmp
icebp
push
add
add
add
daa
mov
push
mov
xchg
ret
add
sahf
add
inc
inc
add
jmp
and
xchg
add
jmp
mov
add
fs
incb
jbe
add
and
nop
push
mov
leave
nop
jmp
add
and
add
add
imul
and
mov
push
add
sub
je
pop
push
mov
xchg
ret
push
add
and
and
add
or
dec
leave
cmpl
nop
push
mov
leave
nop
jmp
add
movsl
jmp
or
add
faddl
nop
push
mov
leave
nop
jmp
xchg
and
sbb
push
add
add
add
shrl
mov
xchg
ret
add
and
add
stos
mov
jmp
test
out
clc
nop
nop
nop
nop
jae
add
add
call
cmp
clc
nop
nop
nop
nop
jae
sbb
outsl
add
and
dec
add
and
scas
aas
push
push
mov
xchg
ret
jmp
pop
add
add
inc
add
add
clc
nop
nop
nop
nop
jae
add
add
jl
ficomps
scas
imul
nop
nop
nop
jae
inc
sahf
faddl
cmp
push
and
inc
sbb
dec
push
inc
add
jmp
pop
stos
add
lcall
sbb
nop
push
mov
leave
nop
jmp
inc
or
push
add
add
add
jns
clc
nop
nop
nop
nop
jae
mov
fdivrl
fs
add
clc
nop
nop
nop
nop
jae
add
add
push
jnp
jne
add
imul
nop
nop
jae
sbb
and
xchg
add
aam
add
nop
nop
nop
jae
add
add
push
add
add
icebp
add
nop
push
mov
leave
nop
jmp
add
add
call
cld
push
nop
push
mov
leave
nop
jmp
cmp
jno
mov
cmc
sbb
mov
xchg
ret
mov
add
add
push
add
ja
mov
nop
nop
nop
nop
jae
call
add
fs
add
dec
out
mov
clc
nop
nop
nop
nop
jae
jmp
mov
push
jmp
push
pop
jne
nop
push
mov
leave
nop
jmp
inc
jl
xchg
xchg
pop
mov
add
nop
jmp
add
add
and
inc
mov
mov
xchg
ret
add
mov
add
pushf
jle
mov
clc
nop
nop
nop
nop
jae
add
add
add
add
pop
add
clc
nop
nop
nop
nop
jae
stos
add
add
add
add
add
xchg
add
clc
nop
nop
nop
nop
jae
jmp
icebp
add
add
push
add
nop
push
mov
leave
nop
jmp
adc
lcall
add
add
mov
push
push
dec
add
into
cmp
and
clc
nop
nop
nop
nop
jae
add
push
fs
aam
addr16
push
mov
xchg
ret
add
add
pop
jnp
pop
or
xchg
mov
xchg
ret
add
inc
pop
mov
sub
clc
nop
nop
nop
nop
jae
mov
add
jnp
add
cmp
add
push
mov
xchg
ret
sti
add
inc
add
add
fadds
decb
add
nop
push
mov
leave
nop
jmp
push
mov
and
add
mov
leave
call
nop
push
mov
leave
nop
jmp
xchg
sti
add
mov
sti
clc
nop
nop
nop
nop
jae
add
mov
out
push
mov
xchg
ret
jne
jno
add
adc
add
sahf
test
mov
nop
nop
nop
jae
iret
lcall
add
scas
fisttpll
xchg
nop
nop
nop
nop
jae
jnp
or
add
dec
cld
clc
nop
nop
nop
nop
jae
add
fs
xchg
and
pop
and
mov
jg
inc
add
add
lcall
add
jnp
je
add
clc
nop
nop
nop
nop
jae
or
cmc
sub
add
push
imul
jmp
incl
and
add
test
add
aam
add
jl
add
add
mov
leave
nop
jmp
xchg
add
lcall
test
jmp
rclb
cs
inc
add
add
add
add
mov
clc
nop
nop
nop
nop
jae
jne
add
xchg
jmp
add
shlb
nop
push
mov
leave
nop
jmp
outsl
add
icebp
add
mov
and
add
nop
nop
nop
nop
jae
inc
sub
add
add
mov
add
clc
nop
nop
nop
nop
jae
sbb
add
add
push
inc
add
imul
jnp
mov
add
add
jno
cmpl
nop
push
mov
leave
nop
jmp
or
sbb
add
js
mov
nop
push
mov
leave
nop
jmp
iret
add
or
lcall
nop
nop
nop
jae
add
add
pop
inc
call
nop
nop
nop
nop
jae
and
add
jnp
repnz
and
loopne
fistpl
push
mov
xchg
ret
icebp
add
add
icebp
add
scas
mov
push
mov
xchg
ret
add
iret
push
add
repnz
mov
out
push
mov
xchg
ret
outsl
add
repnz
fdivrl
add
outsl
add
xor
clc
nop
nop
nop
nop
jae
faddl
add
add
add
push
nop
push
mov
leave
nop
jmp
jmp
add
add
aam
dec
decb
push
mov
xchg
ret
call
or
ja
inc
add
add
clc
nop
nop
nop
nop
jae
inc
jnp
add
add
imul
mov
or
ret
sti
add
add
pop
and
add
cmc
add
nop
nop
nop
jae
add
add
mov
xchg
aam
notl
nop
push
mov
leave
nop
jmp
jl
add
lcall
jbe
sub
push
mov
xchg
ret
add
push
push
or
add
add
nop
nop
nop
nop
jae
add
movsl
jmp
push
xchg
add
pop
push
and
nop
nop
nop
nop
jae
add
icebp
icebp
lcall
add
clc
nop
nop
nop
nop
jae
inc
sbb
outsl
add
inc
xchg
add
nop
nop
nop
jae
add
movsl
add
mov
lret
clc
nop
nop
nop
nop
jae
mov
jl
xchg
and
xchg
dec
mov
clc
nop
nop
nop
nop
jae
add
mov
add
and
mov
nop
nop
jae
add
jno
faddl
add
add
push
jo
mov
cmpl
mov
leave
nop
jmp
add
inc
push
aam
mov
cwtl
and
mul
iret
add
add
bound
sub
inc
add
fs
add
push
or
add
mov
push
clc
nop
nop
nop
nop
jae
add
add
add
add
aam
add
pop
push
mov
jae
add
imul
push
xchg
cld
add
add
mov
push
push
mov
xchg
ret
add
add
add
add
fsubl
sti
xor
clc
nop
nop
nop
nop
jae
repnz
xchg
movsl
cmc
test
mov
inc
in
push
mov
xchg
ret
sub
outsl
add
movsl
mov
mov
add
add
in
add
add
inc
adc
call
jmp
pushl
add
and
add
pop
add
mov
lods
push
push
nop
push
mov
leave
nop
jmp
add
push
push
test
xor
cmp
fwait
clc
nop
nop
nop
nop
jae
add
pop
stos
add
lcall
repz
clc
nop
nop
nop
nop
jae
stos
pop
add
and
jecxz
nop
push
mov
leave
nop
jmp
push
mov
add
xor
shr
clc
nop
nop
nop
nop
jae
add
xchg
or
add
add
aaa
mov
clc
nop
nop
nop
nop
jae
mov
add
add
roll
mov
xchg
ret
add
stos
add
outsl
sbb
jp
push
mov
add
fsubrs
jecxz
add
hlt
into
add
pop
add
add
add
push
jmp
sbb
clc
nop
nop
nop
nop
jae
add
jl
add
add
pop
inc
adc
mov
leave
nop
jmp
sbb
pop
jl
add
add
xlat
pop
clc
nop
nop
nop
nop
jae
add
and
add
add
mov
push
mov
xchg
ret
lcall
mov
mov
popa
push
mov
xchg
ret
add
add
sahf
xchg
jno
ja
add
outsl
pusha
push
mov
xchg
ret
and
add
inc
add
add
add
add
dec
nop
push
mov
leave
nop
jmp
sbb
add
add
inc
add
push
push
mov
xchg
ret
add
add
add
fcmovnb
loop
clc
nop
nop
nop
nop
jae
call
add
xchg
icebp
test
pop
test
nop
push
mov
leave
nop
jmp
add
add
add
ja
add
aam
mov
clc
nop
nop
nop
nop
jae
add
sbb
mov
sbb
push
mov
xchg
ret
sti
add
add
pop
add
mov
xor
jge
add
add
add
add
add
add
fs
jmp
push
inc
add
add
inc
push
add
push
movsl
outsl
xor
clc
nop
nop
nop
nop
jae
add
add
add
stos
add
and
and
incb
push
mov
leave
nop
jmp
sbb
jne
add
push
add
xabort
nop
nop
nop
jae
add
and
icebp
push
add
clc
and
mov
xchg
ret
jmp
cmc
add
add
fdivl
add
mov
out
mov
xchg
ret
stos
data16
add
cli
push
add
clc
nop
nop
nop
nop
jae
add
pop
add
xchg
faddl
add
push
xor
mov
clc
nop
nop
nop
nop
jae
xchg
mov
add
loopne
call
nop
jmp
add
add
cmc
sahf
push
lea
clc
nop
nop
nop
nop
jae
pop
and
add
add
push
inc
add
add
clc
nop
nop
nop
nop
jae
mov
push
mov
mov
clc
nop
nop
nop
nop
jae
jne
data16
xchg
pop
add
clc
nop
nop
nop
nop
jae
mov
add
jmp
and
add
cmpl
nop
push
mov
leave
nop
jmp
stos
bnd
inc
iret
inc
adc
add
repz
push
mov
xchg
ret
pop
sbb
push
add
sub
add
mov
call
nop
jmp
stos
jmp
or
or
add
jae
add
add
cmp
add
add
jnp
add
mov
clc
nop
nop
nop
nop
jae
jne
add
ja
add
sbb
mov
or
ret
add
aam
add
add
or
mov
jb
add
clc
nop
nop
nop
nop
jae
and
add
add
add
push
push
mov
xchg
ret
add
add
add
sahf
add
add
push
lea
push
mov
xchg
ret
add
call
inc
add
add
add
nop
pop
mov
clc
nop
nop
nop
nop
jae
or
add
add
push
add
mov
rclb
arpl
xchg
ret
outsl
jmp
add
add
add
add
xlat
add
nop
push
mov
leave
nop
jmp
sbb
add
sub
inc
sbb
nop
nop
nop
nop
jae
pop
mov
stos
call
clc
nop
nop
nop
nop
jae
add
sbb
jne
call
push
mov
leave
nop
jmp
add
add
dec
add
stos
push
push
mov
xchg
ret
stos
add
jl
call
repnz
add
xor
clc
nop
nop
nop
nop
jae
add
add
and
add
push
clc
pop
jmp
add
and
pop
add
or
add
add
add
push
mov
xchg
ret
add
jmp
add
add
add
mov
mov
xchg
ret
add
add
iret
stos
add
or
inc
clc
nop
nop
nop
nop
jae
jnp
data16
add
add
fsubs
mov
nop
nop
nop
nop
jae
sub
cmp
mov
add
mov
clc
nop
nop
nop
nop
jae
add
and
shlb
inc
adc
nop
nop
nop
nop
jae
add
xchg
inc
call
mov
clc
nop
nop
nop
nop
jae
add
aam
add
loopne
mov
clc
nop
nop
nop
nop
jae
sahf
add
jl
add
add
fwait
push
mov
inc
add
add
pop
jno
jno
add
add
add
cltd
add
imul
xchg
pop
jo
adc
push
push
cmpb
xchg
jecxz
aad
and
ja
in
mov
test
popf
cltd
xor
push
add
lds
jns
cmp
or
lock
add
adc
mov
inc
add
pop
cmpsb
push
pop
and
sbb
out
andl
fwait
stos
inc
add
int3
xchg
mov
inc
fcmovb
add
xchg
cmc
push
jle
jp
cli
cmpsb
add
adc
incb
xor
cmpsl
mov
xor
sub
incb
jmp
mov
lret
sbb
jno
dec
das
adcl
sbb
aam
cmp
shrl
roll
int3
scas
jmp
jg
inc
pop
lret
pop
or
in
cmp
sbb
jae
jg
xchg
test
push
push
adc
pusha
add
pushf
movsb
data16
ror
popa
xor
idivb
sbb
push
sub
mov
push
mov
aad
pop
fwait
jnp
mov
loope
mov
add
pop
mov
daa
add
xorb
ds
clc
outsb
lods
xchg
xor
daa
in
jp
or
scas
sub
jge
pop
and
dec
jecxz
je
in
call
fiaddl
lahf
shlb
hlt
adc
add
add
aad
mov
lcall
scas
rorb
fstpl
das
push
mov
loop
cmc
push
data16
pop
mov
imul
shr
mov
xchg
out
jbe
lahf
imul
cltd
jle
icebp
xchg
mov
loop
add
imul
scas
repnz
push
and
xchg
pop
pop
imul
aam
or
jno
es
mov
rolb
mov
nop
test
out
and
xor
pop
mov
cltd
push
stc
cmp
jle
mov
and
jae
dec
ja
shll
fcoms
rcl
jnp
stos
mov
pushl
lods
loope
dec
jb
mov
add
xchg
movsb
inc
pop
cmp
lods
sbb
into
or
dec
loopne
add
gs
cmp
inc
sbb
das
xor
xor
jo
cmp
jmp
std
xor
sbb
test
or
pop
push
aam
loop
roll
test
repnz
lock
xchg
xchg
mov
or
mov
negl
jb
cmp
lods
mov
mov
decb
ss
add
stc
pop
adc
xor
fsubrs
in
gs
or
call
add
mov
cwtl
popf
push
pop
xor
adc
sbbl
xchg
sbb
icebp
push
les
movsl
mov
loopne
aam
xor
repz
mov
shl
das
or
loopne
fs
xchg
lods
push
outsb
decb
decb
xchg
repnz
push
mov
sti
mov
lods
out
fsincos
jle
pusha
add
lret
fildl
jp
stc
jmp
pop
push
movsl
pop
xor
dec
popf
fiadds
test
call
fisubs
and
add
pop
mov
out
jno
or
dec
fisttps
pop
xor
pop
jns
mov
adc
sub
clc
and
add
dec
icebp
call
mov
cltd
jbe
daa
out
xchg
rcll
mov
pop
inc
add
shrl
or
inc
decb
add
xor
push
mov
and
pushf
xor
pop
sub
lret
into
data16
mov
lret
cmp
jmp
inc
add
in
hlt
lods
mov
cmpsl
cs
decb
dec
push
ljmp
mov
out
mov
jbe
cmovle
mov
cltd
adc
push
add
xchg
aad
xlat
add
sahf
jnp
mov
dec
addr16
aas
mov
pop
jbe
lret
imul
cmp
add
movsl
add
and
and
arpl
pop
and
sbbb
loopne
add
push
iret
popa
pusha
sbb
xchg
insb
add
jne
and
adc
out
cmp
fcomps
fstpt
repnz
out
test
inc
incb
xor
cmp
push
sub
aad
xchg
movsb
or
fsts
xchg
addr16
jg
mov
insl
xchg
mov
mov
jnp
inc
hlt
jl
dec
imul
loop
imul
xor
push
in
fisttpl
out
and
outsl
and
js
inc
jnp
dec
mov
mov
addr16
xchg
mov
js
pop
adc
mov
scas
aad
add
fcmovu
mov
dec
lret
inc
shr
add
fimuls
dec
loope
ret
aaa
inc
fmull
cmp
sbb
lcall
pushf
push
or
push
bound
incb
outsl
scas
test
add
cltd
js
adc
cmpsl
fisttps
decb
popf
adc
mov
push
dec
jmp
mov
jmp
xor
inc
add
fs
inc
pop
cmc
mov
xchg
popa
cmp
push
or
fsts
into
lahf
pop
push
inc
sahf
int
push
addr16
addr16
ret
fs
incb
xchg
pop
mov
sub
addr16
test
shl
clc
fcmovbe
xchg
jmp
mov
into
je
es
lret
loopne
out
adc
pusha
lahf
dec
lds
incb
add
inc
add
add
mov
sbb
adc
test
add
cwtl
lret
push
fisttpl
lahf
push
stos
scas
inc
xchg
inc
cmc
stos
ljmp
jb
inc
mov
add
int3
and
or
pop
mov
cs
call
add
cmpsb
pop
inc
add
nop
outsb
icebp
insb
incb
out
pop
cltd
cmpsl
xchg
push
pop
jae
dec
int
data16
push
push
dec
push
decb
ljmp
sbb
xchg
cli
cmp
add
es
pop
and
push
pusha
add
inc
add
test
pushf
push
push
add
jecxz
in
inc
add
mov
push
sbb
sarb
jae
adc
pushf
dec
into
jp
scas
in
jno
xchg
sub
incb
xor
mov
and
out
jl
xorl
adc
inc
mov
push
adc
ficompl
jecxz
test
xchg
xlat
inc
add
add
mov
jg
mov
pop
jge
repnz
movlhps
in
add
add
stos
lahf
inc
mov
es
inc
push
and
xchg
mov
jns
push
jecxz
lods
clc
sub
incb
testl
nop
ficoms
cmp
repnz
mov
inc
add
push
incb
pop
call
sub
dec
jbe
add
test
sbb
adc
lahf
push
jl
push
pushf
arpl
outsl
pop
mov
fistl
incb
es
inc
data16
incb
and
ret
mov
push
jno
add
outsb
add
xchg
test
xor
fcoms
fs
xor
jp
fs
incb
and
incb
adc
sbb
fdivrl
add
icebp
and
dec
and
pop
nop
in
mov
pop
fiaddl
sbb
je
jne
stos
xchg
mov
out
in
rorb
ljmp
inc
add
pop
lcall
inc
mov
add
jp
sbb
ret
inc
add
js
mov
adc
lahf
dec
incb
aas
shll
mov
stc
or
decb
mov
or
daa
sbb
and
mov
cmp
mov
sub
je
add
add
scas
cltd
mov
inc
push
xchg
xchg
pop
insl
pop
inc
add
push
pop
jge
push
out
add
push
add
xlat
leave
cmp
add
imul
sub
sub
cmp
lods
mov
pop
mov
into
fnstsw
popf
lret
emms
cli
lret
cwtl
insl
lahf
adc
stos
xchg
in
insl
sbb
pop
call
mov
sbb
iret
scas
inc
add
call
je
mov
insb
mov
decb
add
ds
popa
nop
pop
lds
add
sbb
pop
push
mov
and
mul
aaa
pop
dec
add
aam
xchg
xor
dec
add
mov
lret
lea
jb
mov
cwtl
lock
sub
or
incb
mov
push
xor
es
incb
add
sarl
mov
fcmovu
sub
add
cltd
mov
add
mov
movsb
roll
repnz
pop
outsl
cmp
mov
cwtl
insb
lahf
pop
test
add
outsl
nop
xor
test
xchg
lods
ss
dec
incb
call
aaa
mov
sub
add
stos
imul
aaa
out
mov
sub
pop
stos
or
push
pushf
push
add
jge
inc
pop
fimull
push
mov
gs
mov
adc
add
xchg
ds
fs
imul
hlt
mov
xchg
fs
je
xchg
jne
mov
mov
or
mov
push
or
jle
push
sahf
adc
push
pushf
push
inc
add
push
jp
xor
incb
shrb
ja
dec
adc
repnz
lds
fimull
mov
rclb
and
fisubl
add
inc
sbbb
int3
int
js
add
adc
notb
add
or
inc
add
dec
add
test
cmc
sbb
shll
aas
cmp
in
jnp
push
clc
cltd
add
lds
mov
leave
fsubs
decl
icebp
xor
add
stos
out
inc
cwtl
xchg
fsubrs
cmp
pop
add
pop
vandps
pop
je
adc
nop
std
stos
inc
roll
push
cmp
outsl
jbe
push
fdiv
cs
lret
xbegin
je
push
push
add
cs
incb
add
sbb
ss
mov
add
or
incb
fnstsw
shll
adc
mov
push
pop
imul
push
sbb
imul
xor
adc
cs
jge
out
dec
mov
push
jle
dec
push
rcr
xchg
sub
or
out
rcll
add
ja
sbb
inc
add
out
cmp
cli
jb
test
nop
mov
jo
pop
fisttpll
outsl
mov
sub
incb
and
imul
mov
popf
les
xchg
subb
outsb
decb
outsl
adc
stos
xchg
stc
icebp
lret
mov
std
filds
pop
jo
mov
cmp
push
jecxz
add
push
add
or
dec
mov
sbb
into
mov
add
in
cmc
xor
add
fists
or
mov
cmp
call
incb
pop
je
mov
xorb
movsl
adc
mov
and
ja
iret
leave
fwait
sub
clc
sbb
xchg
lock
clc
dec
add
sbb
inc
or
incl
cli
loopne
mov
dec
fnstsw
add
and
testb
mov
cmp
loope
adc
imul
adc
and
arpl
sub
and
decb
mov
test
push
push
sub
mov
mov
add
push
movsb
xchg
inc
sub
mov
inc
rclb
add
aad
add
jmp
add
mov
ficompl
cmpsb
jnp
add
out
inc
pop
cs
add
pop
jnp
fwait
movsl
add
adc
addr16
inc
inc
jb
pminub
adc
jo
push
das
jns
andl
aaa
out
outsb
arpl
popf
fs
jecxz
cmpsb
add
repnz
aas
fidivrs
sub
xchg
divl
mov
or
sub
mov
data16
lock
sti
push
xor
bnd
add
adc
cmpsb
cli
jnp
pusha
add
lock
popa
stos
xor
fstl
push
fnstsw
inc
add
jae
pop
pop
mov
adc
inc
in
dec
fs
xlat
lret
inc
pop
repnz
pushf
ret
jge
cmp
cmpsb
lds
stc
mov
mov
cmp
add
enter
fsubl
dec
inc
add
stos
cs
cld
push
stos
cmp
mov
jle
add
das
leave
aas
mov
mov
add
inc
stos
cmpsl
add
lods
icebp
mov
cs
jmp
mov
inc
into
cmc
popl
mov
cmpsl
fldl
dec
les
rcrl
xchg
ss
adc
cmpsb
mov
adc
decb
mov
push
cmpsb
cmpsl
imul
mov
mov
incb
incb
incb
shl
pop
pop
sub
jae
pop
mov
add
fisubrl
adc
arpl
incl
add
pop
mov
or
mov
shlb
add
ret
incb
jo
mov
mov
fs
mov
sub
push
push
outsl
imul
dec
xor
lahf
hlt
les
fisubrl
add
insb
pusha
adc
mov
movsb
out
fistl
ja
or
xchg
rcll
adc
add
jnp
jne
jns
sti
call
xchg
sbb
stos
push
sti
pop
pop
mov
mov
dec
pop
jbe
popf
push
decb
mov
out
into
and
jmp
neg
rclb
jno
addr16
xor
xchg
add
push
mov
cli
jmp
push
enter
and
ror
add
add
decb
xchg
rorl
jo
add
clc
lock
stos
adc
cmpb
ret
into
sarl
jecxz
insl
fdiv
clc
iret
inc
add
ja
inc
add
int
jp
add
std
mov
cld
loope
test
mov
sub
push
sub
in
inc
xchg
push
push
mov
push
mov
xor
sub
pop
jno
les
hlt
jle
adc
add
cmp
add
into
mov
bnd
imul
fisubs
xchg
lahf
inc
sbb
stos
les
dec
aad
inc
outsb
add
jle
push
add
ja
xor
hlt
mov
mov
cs
jecxz
jns
inc
add
and
jbe
add
decb
add
sbb
jmp
add
outsl
cmp
xlat
insl
mov
add
fistpl
sbb
jae
pop
test
push
sub
in
mov
inc
adc
lcall
hlt
or
popa
scas
dec
xchg
add
out
repz
mov
dec
loopne
cmp
rcrl
cltd
mov
push
xchg
dec
pop
mov
cli
daa
rol
cwtl
dec
cmp
sti
test
cmp
xor
inc
add
out
bound
data16
push
mov
lret
imul
mov
jb
mov
jb
outsb
mov
cltd
les
fs
push
mov
cmp
xchg
inc
add
shlb
arpl
pop
mov
and
add
inc
xchg
mov
fcoml
sbb
shlb
push
sti
mov
adc
scas
lahf
pop
in
sbb
xor
out
iret
cmp
daa
add
imul
aas
jl
jmp
add
push
incb
pop
pop
mov
inc
mov
xor
sub
ds
aas
call
repz
pusha
add
ror
sbb
xor
cwtl
mov
lcall
lods
jae
push
sub
adc
out
sbb
cmp
insl
lret
jecxz
push
shlb
iret
xor
push
add
hlt
nop
mov
xor
enter
decl
mov
push
jecxz
pop
mov
push
sti
cmp
jge
movl
inc
incb
and
rcr
push
sub
and
in
mov
icebp
addl
dec
add
add
ret
and
decb
incb
mov
adcl
ficoms
xchg
and
and
add
sub
add
pusha
add
mov
add
mov
cmp
push
incb
imul
mov
jmp
fucomi
stos
cmp
inc
jp
push
add
stos
add
decb
mov
cmp
cltd
or
dec
addr16
movsl
lahf
out
mov
or
mov
popa
push
daa
stc
rcll
pop
mov
lock
adc
stos
jmp
push
loope
aam
add
pop
orb
gs
add
inc
int
push
lds
into
sbb
inc
fnstcw
inc
lea
aad
test
cmp
rolb
mov
gs
data16
aad
adc
push
imul
lods
mov
loop
cmp
sbb
lods
shrl
out
cmc
cmpsb
fs
xorl
jne
add
pop
ret
cmc
stos
lods
cmp
cli
jge
and
mov
mov
call
pop
cmp
gs
scas
dec
in
fs
sbb
mov
das
xor
in
pop
call
roll
fcmovnb
es
pop
lods
mov
rorl
sbb
pop
mov
or
jnp
dec
push
push
test
jno
mov
pop
cmp
cmpsb
sub
nop
scas
ja
add
mov
ss
pop
into
push
dec
or
mov
incb
leave
iret
mov
mov
mov
out
imul
fidivs
fistpll
lret
clc
inc
add
xchg
loopne
aad
ja
ljmp
dec
sbb
mov
mov
sbb
mov
in
mov
arpl
inc
lret
into
mov
dec
incb
cmp
mov
ja
and
decb
repnz
sub
loope
xor
addr16
cmp
jl
push
cmp
add
lahf
cmc
stos
ja
push
cmp
mov
cmp
repnz
aas
sbb
jnp
fmull
push
sub
mov
fimull
push
add
sub
sbb
jo
cltd
inc
add
subb
jge
movb
addl
hlt
ret
xor
paddq
push
minps
jp
jo
cvtdq2ps
lahf
xor
mov
cmp
std
test
push
mov
inc
push
das
cmpb
js
fistpll
pop
pushf
mov
add
addr16
inc
add
aaa
loope
in
popf
mov
add
aas
xchg
adcl
fadd
icebp
lcall
mov
stos
inc
and
add
sbb
pusha
xor
aaa
leave
mov
ljmp
repnz
pop
arpl
and
fimull
add
mov
enter
decb
insb
aam
je
adc
push
xchg
fucomip
pop
jmp
sub
decb
add
mov
and
push
xchg
push
adc
mov
cmp
mov
loop
std
mov
loopne
call
add
jp
cli
aas
movsl
sub
incb
and
lods
xor
clc
mov
jle
push
xor
dec
xchg
sbb
inc
add
orb
mov
inc
lahf
rdpmc
int
add
subb
out
lock
out
lcall
lock
dec
push
and
bound
push
decb
stos
lahf
cltd
popf
pop
in
adc
inc
out
popa
jge
fnstsw
add
add
sub
cmp
and
xchg
dec
add
mov
dec
add
sub
decb
jle
pop
in
out
cmp
test
pop
push
add
ds
inc
add
mov
add
xor
pusha
incb
out
xor
inc
xor
sahf
and
jecxz
jge
insb
aam
add
into
sub
push
cmp
incb
decb
test
sub
repnz
arpl
adc
mov
or
incb
inc
cmp
push
cmp
fldt
mov
add
mov
fnsave
add
cltd
in
mov
xchg
jnp
imul
cmc
andb
pop
pop
push
outsl
test
sub
jg
add
call
nop
testl
out
mov
cmpsb
daa
cmpsl
repnz
call
push
in
add
ret
lea
ja
xor
mov
fsts
fcomp
cmpsb
nop
push
inc
sub
push
decb
dec
mov
add
stos
push
xchg
fsubrl
clc
icebp
jecxz
mov
inc
lret
dec
add
mov
incb
popa
les
jns
push
out
xchg
sub
and
mov
idivb
cwtl
mov
pop
cli
push
decb
mov
movsb
popf
xor
or
dec
add
in
incb
ja
xor
ja
adc
mov
or
lock
jg
adc
decb
ja
sub
and
mov
xchg
pop
or
shr
es
incb
repnz
lcall
je
add
ret
frstor
mov
mov
mov
cltd
add
decb
mov
inc
cwtl
mov
push
int
ror
cmp
jns
mov
add
int
dec
les
out
popf
out
sti
and
decb
inc
sbb
mov
push
ror
ljmp
and
clc
xor
loope
xor
fimuls
push
mov
clc
pop
lret
jmp
decb
pop
pushf
out
call
push
dec
jbe
fnstcw
mov
popf
lret
pop
clc
dec
pop
pop
mov
xchg
sahf
gs
xor
add
jge
divl
push
mov
movsl
fs
sub
mull
pop
das
mov
adc
add
movd
data16
fldl
add
inc
xchg
test
sbb
sbb
sbb
dec
int3
addr16
decb
sub
sub
incb
or
rdmsr
sbb
cmp
add
sub
arpl
imul
mov
mov
loop
adc
dec
pop
xor
pusha
decb
aaa
das
lcall
jl
lret
and
cltd
xchg
mov
je
out
mov
mov
data16
jp
add
incb
test
fcmovnu
xchg
cmp
adc
cltd
xor
mov
pop
jb
cs
push
jbe
pop
pop
int3
fs
push
inc
and
fsubs
lods
add
daa
ljmp
incb
ret
js
movsl
xchg
mov
testl
es
xor
xor
or
js
add
addr16
mov
data16
xor
mov
xor
iret
sub
cwtl
sar
stc
sahf
fwait
in
cmc
fs
adc
sbb
jo
jno
add
leave
inc
mov
and
sbb
inc
sbb
push
bound
push
lcall
cmp
sub
sbb
push
add
jecxz
incb
mov
jns
lods
in
das
pop
sub
pop
hlt
sub
shlb
adc
add
lret
cmp
add
nop
push
lret
mov
icebp
shr
sub
and
decb
mov
subb
xor
loop
push
sbb
fwait
cmpsl
pop
jae
out
xor
and
out
sbb
add
mov
ja
mov
fwait
fs
and
stos
lcall
xchg
cmpsl
inc
sti
test
lret
mov
icebp
lods
mov
bound
incb
add
xchg
dec
add
icebp
rolb
mov
orl
xchg
lcall
cwtl
adc
loop
adc
loop
pop
test
ds
xchg
add
add
scas
mov
add
mov
dec
test
rcrl
out
mov
inc
fnsave
outsb
flds
xchg
inc
decb
mov
push
add
xor
adc
mov
sub
push
cmp
movnti
add
in
add
adc
pop
xchg
inc
add
dec
decb
push
mov
add
sub
cld
clc
stc
dec
add
imul
inc
add
xchg
imul
jecxz
jo
xchg
rorl
movsb
jo
add
pop
test
lock
xor
testl
xor
xor
sbb
je
inc
add
pop
add
mov
mov
mov
lods
xor
add
aaa
pop
out
mov
shrb
xor
iret
jl
cmp
and
repz
gs
sub
out
or
push
flds
cmp
sub
mov
push
incb
or
push
sbb
add
icebp
xor
pop
rcrl
insl
stos
mov
add
sbb
jo
jge
dec
add
les
std
add
ja
pop
sbb
add
dec
jo
mov
je
pop
xchg
fs
decb
rcrl
sub
incb
outsb
add
push
test
pop
push
sub
sbb
pop
mov
mov
pop
inc
add
test
out
fsubr
adc
mov
out
push
add
push
lahf
test
or
int
out
adc
movsl
cmc
pop
xchg
push
scas
cmpb
adc
popf
sahf
inc
fstpl
push
sub
js
xor
ret
rclb
jo
push
sub
test
add
daa
or
movsl
loope
push
add
out
dec
jbe
push
incl
dec
fwait
or
incb
incb
stos
pop
and
mov
nop
pop
dec
add
xor
xor
add
mov
decb
add
cmpsl
pop
mov
ds
call
mov
das
ret
outsl
stos
mov
fcom
loop
test
xor
push
jno
sub
add
out
nop
jne
fsubr
xor
sub
aaa
mov
enter
ret
fdivrl
adc
fsubp
mov
into
enter
dec
add
rclb
stos
std
mov
mov
sbb
scas
lahf
mov
jno
pop
ss
hlt
add
and
js
fs
leave
push
movsl
mov
pusha
decb
aaa
repz
cltd
out
inc
add
or
cmp
imul
push
add
xchg
push
mov
sahf
int3
mov
push
shr
fimull
pop
in
pop
mov
popa
out
orl
popa
cli
and
popf
inc
sub
rclb
mov
cmp
ret
enter
daa
xchg
sbb
push
movsb
loop
pop
subl
pop
push
jno
fists
sbb
xlat
jle
sbb
out
flds
add
subl
mov
push
and
decb
movb
add
inc
sbb
mov
imul
mov
sub
decb
rcrb
push
dec
add
aad
push
fidivrl
lods
xor
mov
inc
or
jbe
adc
xchg
or
out
lds
les
decb
mov
adc
test
cmpsl
les
add
dec
add
push
inc
shrl
fs
fiaddl
decb
add
clc
mov
pushf
and
push
pop
mov
in
lock
jae
pop
mov
loop
clc
jae
lock
scas
das
mov
call
add
daa
push
mov
pushf
pushf
out
or
push
jns
jmp
std
lret
dec
add
push
xchg
cmpsb
sbb
flds
aad
jge
mov
mov
push
pop
pop
fucomip
subb
mov
push
ljmp
in
mov
testb
dec
mov
int
jp
jg
loop
fsub
adc
push
push
dec
jno
pushf
jo
mov
xchg
clc
mov
adc
jl
mov
xchg
and
cmc
or
push
mov
xchg
dec
xor
cmpsl
jg
and
pop
mov
mov
mov
fwait
pop
jecxz
lods
cmp
loope
inc
push
jmp
aas
cwtl
mov
iret
sub
adc
add
dec
gs
sbb
cmpsl
xor
xchg
fwait
mov
pushf
out
mov
xor
sub
ret
cli
out
adc
incb
add
aas
enter
xor
scas
sbb
xor
cld
sbb
loopne
popa
lods
insb
loope
jbe
add
mov
pop
xor
repnz
add
decb
dec
add
sahf
or
inc
push
repz
fs
decb
mov
fwait
call
out
or
arpl
push
sbb
add
js
repz
mov
pop
jp
pop
push
fbstp
add
jno
mov
incb
pushf
mov
dec
add
rcrb
ljmp
in
cwtl
pop
in
aad
xchg
insl
mov
cmp
aas
sar
inc
incb
dec
mov
int3
lahf
call
and
notl
and
decb
jne
pop
imulb
mov
imul
arpl
xor
dec
xchg
sbb
ja
in
in
add
lods
xor
arpl
ror
xlat
cwtl
inc
loope
call
repnz
push
scas
xlat
movsb
into
addr16
add
jmp
movsb
lahf
call
xchg
push
mov
mov
loope
jp
add
std
push
stc
mov
dec
push
add
or
mov
nop
jle
rcll
xchg
pop
les
xor
mov
push
push
add
mov
decb
dec
fwait
hlt
mov
push
int
inc
jnp
addl
lds
and
decb
pop
je
cmp
fldcw
loopne
int3
mov
and
xchg
jge
shl
push
lods
call
loopne
ret
adc
rolb
or
dec
sbb
ljmp
in
xor
iret
jmp
add
stc
jne
cld
mov
lret
test
data16
in
mov
sbb
and
mov
outsl
push
out
adcb
mov
and
sub
sbb
push
cmp
aad
mov
stc
dec
les
or
sahf
and
sub
cmp
adc
mov
mov
inc
sub
push
jae
add
mov
cmp
pop
mov
rorb
je
inc
es
decb
inc
decb
js
sbb
decb
js
dec
add
sbb
inc
je
adc
mov
or
jo
push
sbb
js
mov
cmp
incb
mov
push
jg
cmp
push
and
add
adcb
mov
stc
roll
stc
je
jmp
iret
push
incb
sub
push
shlb
lock
pop
jne
subl
insl
cwtl
push
in
push
mov
stos
call
mov
inc
add
xchg
push
pop
xor
mov
loop
push
mov
or
push
mov
xor
xchg
pop
stos
sbb
add
cmpsb
sub
mov
inc
mov
imul
push
adc
pusha
add
popf
daa
shr
decb
je
mov
jnp
push
incb
sbb
dec
xchg
in
cs
push
call
add
sbb
dec
add
rcll
pop
out
enter
sbb
in
lret
pop
mov
test
cmp
add
mov
push
add
cmp
sub
pop
jmp
pushf
js
in
cmp
fs
imul
pop
js
into
xchg
lret
sbb
enter
sub
in
mov
dec
mov
mov
lret
push
add
out
add
incb
repz
fdivs
jl
lcall
fwait
inc
incb
xor
push
sub
in
test
add
dec
add
mov
add
push
xchg
sub
add
incb
jno
push
adc
or
fwait
xchg
cmp
clc
sub
fisttpll
fcmovnbe
mov
add
pop
jle
inc
add
sti
and
sbb
cli
mov
xlat
add
pop
enter
in
pop
cwtl
test
xchg
mov
lods
popf
pop
arpl
pushf
mov
add
cwtl
pop
stos
shl
lahf
scas
and
inc
mov
jb
add
xor
xchg
imul
and
and
shlb
dec
decb
orl
cmp
jns
pop
adc
inc
notl
nop
sub
aaa
test
add
cltd
sub
stos
aam
cmc
popa
xchg
rclb
hlt
push
lret
mov
lcall
out
stc
xchg
addb
int
add
sbbl
or
dec
int3
lret
adc
mov
push
and
sbb
inc
cli
lret
jecxz
incb
js
lds
sub
jae
cli
sti
or
decb
dec
cmp
fucomi
fadd
mov
dec
incb
aaa
inc
loopne
pop
addl
mov
pushf
ja
inc
mov
mov
mov
out
mov
add
xor
fnstenv
mov
hlt
aam
out
fs
inc
in
sub
xchg
fcomps
push
fucom
aad
pop
imul
push
xor
add
insl
add
loope
cmp
das
notb
pushl
out
cwtl
aad
and
and
mov
in
mov
movsb
mov
xchg
add
aas
repnz
add
jmp
loope
clc
test
xchg
mul
xchg
push
lock
ret
ja
sbb
cmpsl
shll
aas
or
sbb
das
add
scas
mov
mov
add
aas
fstpt
and
decb
jecxz
fsubrs
incb
xchg
icebp
mov
and
inc
jle
mov
fcmovbe
pop
dec
mov
add
mov
add
imul
ret
push
push
fcoml
mov
xor
addr16
pushf
pop
mov
dec
inc
incb
xor
push
cmp
push
clc
adc
cmp
gs
dec
sbb
data16
xor
fidivl
rclb
fmul
cli
pop
jb
repz
mov
sub
divl
imul
int
cmpsl
xchg
call
das
jae
inc
test
jge
pop
stos
sub
in
dec
add
test
test
pop
and
decb
adc
fwait
pop
pushf
test
aas
sbb
repz
pcmpgtb
jge
out
aaa
push
pop
cwtl
sbb
xchg
pop
push
cs
jae
mov
push
add
mov
aad
es
xchg
jecxz
shlb
ljmp
mov
add
lds
xor
adc
decb
test
push
scas
mov
add
pushf
in
xchg
lahf
sbb
gs
mov
call
pop
sbbl
add
pop
pop
xor
mov
leave
add
stos
loop
cmp
cmp
out
insb
xor
imul
nop
mov
sbb
add
mov
lcall
adc
jecxz
xchg
jb
pop
or
and
and
push
inc
aas
shll
decb
int
pop
jg
stc
vpunpcklbw
inc
xchg
or
pop
pop
xor
test
jae
decb
mov
shl
pop
adc
inc
mov
rcrb
add
push
sub
dec
add
xchg
pusha
mov
lods
and
and
xor
pop
insb
add
lcall
out
pop
xchg
xchg
xor
add
decb
ja
cmp
shl
test
or
das
fidivl
pusha
add
data16
pushf
fwait
push
mov
cmp
aad
jno
test
in
movsl
mov
cmp
mov
add
stos
lret
div
push
push
pop
js
add
sbb
fs
icebp
movsb
push
movsl
mov
aaa
in
mov
filds
rolb
cmp
add
push
mov
in
inc
pop
jae
insl
jmp
imul
inc
in
mov
cld
int
add
and
fbld
add
int
adc
sbb
pop
mov
movsl
sti
mov
or
push
cli
shll
arpl
add
gs
cmp
jp
cmc
out
cmp
js
arpl
cmc
push
pop
sub
popf
test
lcall
xor
dec
push
mov
in
pop
pop
mov
jbe
insb
pop
pop
dec
add
ljmp
xchg
icebp
push
into
sbb
jge
push
inc
pop
cmp
call
add
cwtl
pushf
outsb
inc
mov
lods
es
pusha
xchg
mov
cmp
imul
incb
push
push
inc
add
pop
push
add
jno
and
mov
fsubrl
in
inc
imul
incb
jmp
sbbb
mov
mov
aaa
rolb
and
add
or
or
les
sbb
fbld
fwait
pop
out
sahf
imul
lods
mov
incb
lock
iret
cld
test
pop
or
lods
xchg
jno
movsl
cs
mov
or
je
push
out
cmp
in
push
mov
mov
pop
sbb
pop
xor
lock
push
sbb
add
mov
xor
leave
repz
push
adc
popa
mov
xor
popf
aaa
clc
xchg
rcr
xchg
mov
add
jecxz
divl
pop
cmp
in
jl
xorl
add
repz
mov
insl
data16
jecxz
out
in
adc
push
decb
xor
fcompl
fdivrs
mov
inc
jmp
lock
mov
cmp
add
sub
fdivrs
incb
ret
and
out
shr
fs
xor
hlt
popf
loope
incb
sub
pop
ffree
seta
cmc
out
push
adc
ss
lret
add
jb
jo
fldcw
and
incb
fnstenv
push
add
decb
sub
es
push
sub
lods
mov
ret
sahf
cmp
pop
dec
cltd
test
xlat
push
jge
ret
loopne
cmc
jno
adc
add
test
adc
inc
lods
pop
mov
sub
das
mov
je
xchg
inc
jbe
inc
pusha
mov
sub
fldenv
out
sub
ret
cltd
test
jns
pop
add
das
push
inc
dec
add
jge
push
out
sub
dec
xor
pop
adc
fs
call
incb
data16
or
incb
icebp
das
sbb
je
adc
add
out
jbe
jns
mov
sbb
lods
inc
sub
pop
jne
sti
es
fisttpll
sub
mov
pop
push
sbb
lret
or
sub
jecxz
push
mov
lret
in
sub
shr
lods
adc
xchg
pushf
dec
ds
add
repz
arpl
test
mov
cld
cmp
rcrl
push
and
data16
xchg
cmp
aad
ss
imul
pop
jo
jecxz
add
sbb
add
dec
repnz
cltd
sti
popa
sub
rcrb
or
inc
repnz
push
add
pushf
sbb
mov
mov
rolb
xor
loop
stc
ja
fwait
jle
jle
imul
enter
inc
add
mov
data16
mov
outsb
sbb
imull
cwtl
popf
xor
xchg
and
ljmp
repz
adc
cmp
sub
xor
aaa
xchg
mov
dec
bound
push
imul
cmp
pop
sbb
fucom
dec
subl
sbb
out
fstpl
inc
add
xchg
scas
cli
jnp
add
pop
jmp
movsl
adc
ljmp
add
gs
cmp
inc
dec
decb
incb
mov
loopne
cmp
add
mov
sub
scas
test
decb
inc
lock
add
stos
imull
aam
rorl
inc
mov
jns
xlat
xor
and
pop
cmp
mov
pop
xlat
loope
add
fisttpl
repz
scas
adc
mov
cwtl
mov
scas
sub
cmp
fs
lock
add
mov
adc
ds
imul
out
incb
lock
mov
add
adc
lahf
mov
incb
add
jl
xchg
cmpl
cltd
daa
es
loope
xchg
add
imul
add
mov
repz
test
les
and
loop
std
sahf
cli
loop
addr16
testl
outsb
jle
popa
pop
mov
xor
imul
lods
lock
call
mov
cmp
cmp
mov
das
leave
add
loop
push
ss
fistl
cmp
pop
xchg
mov
mov
aaa
mov
adc
add
lds
loop
pop
pop
xchg
mov
push
xor
data16
jl
add
add
xor
xchg
jno
xor
nop
jo
jo
decb
dec
pusha
decb
incb
add
cmp
xchg
add
cs
insb
sub
pop
push
rorb
int
mov
sbb
scas
lods
dec
xchg
dec
arpl
aam
xchg
das
cmp
cmp
add
lahf
xor
ss
xchg
or
movsl
bound
dec
int3
gs
xchg
xor
mov
mov
inc
sub
inc
jle
xchg
movsl
adc
xchg
mov
nop
add
inc
gs
arpl
xor
cwtl
mov
out
data16
xor
adc
xor
lock
add
dec
pop
sbb
fisttpll
aaa
lods
loope
fs
push
lcall
push
mov
pop
in
pop
shrb
mov
incb
add
cmpsl
repnz
and
push
push
imul
cltd
adc
inc
add
cmp
aad
add
loopew
mov
out
pusha
xchg
jnp
or
xchg
fcomi
sub
incb
dec
push
divb
push
bound
call
out
inc
cli
cs
dec
adc
cmpsb
fwait
push
lods
aam
pop
xor
add
fstpl
add
cli
push
lock
pop
xadd
push
mov
decb
fldcw
lret
and
jle
int3
pop
jne
mov
sub
jnp
nop
lds
pop
inc
test
movsl
adc
sbb
dec
pop
out
shrb
pop
dec
add
mov
jp
or
out
inc
fucomp
fiadds
test
push
sub
mov
xorl
mov
test
add
decb
fbld
add
sahf
mov
leave
enter
out
in
fs
dec
xchg
cmp
pop
out
sub
adc
cmp
lcall
sub
or
adc
stc
lea
xlat
mov
repnz
ja
push
rclb
shr
cmp
push
movsb
data16
leave
jbe
adc
push
cmp
cmp
mov
cwtl
lret
or
jl
fimuls
mov
subl
in
cltd
daa
jne
sbb
xchg
aad
dec
add
mov
xchg
popa
mov
enter
cld
nop
enter
xchg
incb
mov
inc
mov
and
xor
xchg
mov
push
adc
mov
data16
jnp
xor
inc
xor
push
cmp
out
movsl
add
xor
add
fimull
incb
imul
xchg
outsl
frstor
xor
std
shrl
add
adc
mov
push
fsubl
pop
sahf
push
mov
incb
incb
movb
mov
out
int3
es
mov
stos
mov
shll
sbb
movsl
inc
add
push
test
adc
jecxz
pop
xchg
ret
in
jge
jecxz
repnz
jae
cmp
loope
or
add
push
not
shlb
sub
pop
cli
mov
jmp
add
and
dec
xor
jbe
aad
jg
add
mov
lret
add
clc
push
dec
pushf
es
daa
aaa
push
pop
jb
cmp
lahf
and
movsb
inc
add
frstor
decb
jo
movsb
outsl
mov
add
pop
inc
xlat
pop
sbb
jle
outsb
imul
xlat
xlat
pop
lods
test
add
lea
xchg
in
dec
mov
add
subl
jmp
out
out
xor
out
out
sbb
decb
add
xor
fldt
pop
jle
add
or
sbb
cmc
and
lret
dec
jae
int3
xchg
pop
jl
cmp
leave
jle
test
ljmp
scas
es
push
mov
sub
cmp
dec
mov
add
repz
inc
dec
cmp
mov
insl
rcr
add
jle
leave
adc
imul
xor
inc
incb
jns
repz
dec
add
adc
sbb
mov
mov
es
incb
add
insl
or
pop
push
jp
in
movsl
xchg
mov
cwtl
movsb
sub
fcom
lods
icebp
adcl
pop
rcr
cltd
nop
xor
fmuls
add
pop
fdivr
loop
and
incb
and
outsl
mov
inc
pop
pop
mov
xor
mov
clc
rolb
add
jmp
out
add
sahf
sub
decb
sub
fstps
pop
je
cmpsl
sahf
fnstenv
bound
incb
sbb
mov
gs
aas
mov
imul
push
lret
cmp
fincstp
loop
push
fstpt
std
add
adc
jae
jecxz
push
pop
test
sbb
add
daa
jecxz
or
cmp
pop
dec
add
jae
test
xchg
fs
jnp
mov
xor
cmpsb
scas
fdivl
xchg
fsubrl
add
orb
xchg
and
mov
push
les
mov
xor
pop
jne
pop
daa
adc
test
hlt
mov
add
cmpsb
ss
push
mov
or
cmc
ror
lahf
mov
cmp
or
inc
pop
or
sbb
xchg
push
lock
insb
add
push
stc
push
mov
pop
mov
data16
push
push
sbb
decb
adc
outsb
add
jl
mov
add
fisttps
mov
add
pop
clc
mov
mov
cltd
sub
incb
add
js
repnz
daa
iret
push
xor
inc
lock
and
movsb
or
movsl
pop
jecxz
leave
push
imul
or
fcomi
push
addr16
sbb
lds
lods
jp
incl
pop
jl
lds
je
pop
ret
add
aas
push
ljmp
xor
aas
jmp
lahf
repnz
mov
push
andl
xchg
mov
add
sti
arpl
pop
jge
sub
sub
sub
sbb
rcr
stc
in
es
lds
cmp
insl
xchg
add
sub
inc
ja
mov
dec
xor
mov
lea
add
or
fldenv
negl
lods
gs
add
xchg
clc
ficoms
iret
cltd
inc
add
mov
pop
bound
ss
push
add
sbbl
jb
jecxz
add
aam
add
sub
cltd
push
fdivrs
sbb
add
cmpb
inc
xor
xor
xchg
jg
fdivrl
push
adc
adc
mul
cmp
xor
pop
js
daa
xchg
pop
cltd
rorb
mov
dec
add
fcmovne
jae
jmp
mul
adcb
xchg
push
or
repz
movsb
loopne
clc
fs
daa
jbe
cmp
push
mov
lods
in
mov
or
cmp
rolb
pop
fsts
mov
frstor
lods
aas
cltd
xor
data16
push
xor
test
sub
pusha
stos
orl
jp
jl
jmp
stos
push
out
xchg
xorl
adc
sub
sub
xchg
imul
push
out
dec
fstl
push
into
xchg
push
pop
jo
push
mov
jle
mov
pop
inc
addr16
aaa
xor
stos
dec
jns
or
jp
sbb
mov
arpl
add
pop
cli
stos
jae
add
or
lcall
and
sub
lods
test
mov
mov
add
incb
add
mov
test
decb
ds
js
imul
sbb
lds
cmp
pusha
fwait
jmp
sub
decb
push
enter
repnz
incb
jge
mov
add
outsb
loopne,pt
ret
aaa
sub
mov
scas
mov
or
push
into
movsb
pop
shrb
cmp
insb
xor
lods
and
out
roll
pushf
lds
mov
and
arpl
and
das
pop
into
lea
sub
push
push
stc
push
mov
repz
fisttps
adc
jp
xchg
test
jg
jne
fdivrs
mov
sti
data16
xchg
sub
js
adc
xor
cmpsb
dec
lods
jbe
add
dec
dec
add
dec
notb
lea
mov
xor
or
add
pop
insl
fsub
jle
test
out
ds
add
lods
push
sub
fs
incb
rcrb
testb
cmp
sub
inc
fs
push
movsb
scas
inc
mov
ss
pop
jg
adc
xchg
test
mov
incb
adc
or
mov
psllw
lret
dec
enter
push
mov
xor
jg
dec
decl
iret
adc
nop
jnp
ss
rclb
sbb
fs
and
push
jl
aas
lahf
in
or
cli
or
sbb
rolb
loop
jp
push
decb
out
int
pop
fstl
inc
add
xlat
sbb
sahf
sub
cwtl
enter
popf
test
decb
aas
in
xor
xchg
jge
into
movzwl
mov
rcrb
addr16
popa
xchg
insl
arpl
je
fistpll
jle
xchg
cmp
stos
cmp
add
pxor
repnz
sbb
orl
xchg
dec
xlat
test
inc
add
inc
xchg
das
push
scas
xor
dec
loope
cld
xchg
shlb
mov
sbb
pop
and
popa
mov
add
mov
nop
test
jp
incb
xor
adc
mov
add
cld
pop
shr
cmp
xor
fwait
jae
lret
fdivl
imul
aam
sbb
lret
dec
incb
cmp
xchg
mov
and
out
xchg
loop
sub
incb
dec
decb
xchg
adcb
dec
jp
lods
mov
inc
in
fcoml
outsl
js
cmp
shrl
add
test
xchg
repz
es
mov
xchg
cmc
icebp
sbb
push
mov
daa
clc
push
add
and
dec
loopne
mov
push
incb
xchg
repnz
pop
push
adc
mov
mov
mov
mov
sbb
xchg
sub
and
xchg
out
jno
add
mov
push
add
js
lret
xchg
loope
pop
aas
sub
int3
cmpsb
fdivs
pop
cmp
xchg
xor
push
cli
adc
hlt
add
mov
mov
fisubl
test
scas
push
ret
out
lods
push
push
and
dec
push
or
fnstenv
cs
leave
aam
lret
sbb
movsl
push
std
dec
mov
add
jecxz
cmp
out
xchg
mov
pop
cmp
leave
mov
jne
dec
add
lods
and
pushf
dec
incb
add
clc
int3
sub
decb
and
xlat
ljmp
sub
popa
mov
adc
sbb
inc
aaa
fwait
bound
loop
out
fists
sysret
stos
pop
cmp
sub
xchg
sub
sub
sbb
scas
mov
and
pop
and
dec
add
dec
incb
arpl
add
push
insl
xchg
mov
nop
mov
sub
sbb
pop
ljmp
insb
add
stc
cli
call
out
ret
out
imul
shr
mov
lahf
ror
lods
ret
inc
add
aad
cs
push
cli
in
mov
mov
push
fstps
pop
push
add
mov
or
mov
fs
mov
mov
out
adc
cs
ljmp
bound
jno
push
add
adcl
cmp
cwtl
mov
and
adc
pop
xchg
or
xlat
ja
dec
decb
mov
adc
fcomps
xchg
inc
add
mov
mov
aad
lock
data16
jl
sti
ds
push
cmpl
add
jg
add
fdivs
shrl
incb
cs
incb
daa
arpl
mov
insl
jecxz
clc
test
lea
repz
in
rcrl
int
imul
outsb
add
inc
add
add
decb
mov
mov
mov
decb
mov
insl
dec
daa
lock
sbb
and
loop
popf
and
mov
xchg
jbe
jbe
sahf
sbb
aaa
xchg
incb
das
cmp
inc
ss
popf
adcb
add
or
ficomps
lahf
and
stos
jl
fistpll
jle
stc
inc
add
insb
xor
cmp
jl
push
and
add
lret
cwtl
and
xchg
inc
push
push
sbb
xchg
cmp
rolb
aam
subl
pop
stos
call
shrb
rcr
add
jge
jle
pop
xlat
add
repnz
push
pop
daa
add
xchg
sbb
adc
sti
jns
call
popa
sub
decb
incb
mov
and
pop
jno
notl
push
add
jl
les
test
cmp
jle
mov
sbb
adc
jb
stos
je
incb
rolb
push
push
iret
sub
jecxz
cmpsb
or
mov
cmp
add
pusha
add
mov
shrb
repnz
dec
add
push
push
je
iret
mov
xorl
incb
and
jle
or
in
gs
das
iret
ret
scas
mov
add
loop
mov
mov
cmpsl
lock
xor
mov
shlb
movsb
mov
scas
jne
mov
test
ss
add
loopne
add
andb
or
mov
xchg
incb
xchg
sbb
int
add
add
mov
cmpsl
cld
fsubl
notb
dec
pop
pusha
lods
xchg
mov
dec
mov
es
cmpsb
mov
jmp
jge
jo
jecxz
xorb
xor
out
decb
std
xor
sub
pop
enter
lcall
inc
sbb
add
mov
push
dec
scas
mov
in
push
xor
jne
out
sti
popa
dec
imul
xor
jmp
rcll
ss
mov
jp
add
push
leave
mov
add
loope
push
sbb
cmc
jae
daa
repnz
or
jbe
adc
test
pop
cmp
outsb
add
xchg
sub
arpl
push
or
mov
test
in
data16
xor
and
dec
jne
xor
mov
ljmp
incb
add
out
ret
les
incb
out
pop
pop
adc
out
xchg
xlat
cmp
push
movaps
ret
add
mov
jecxz
add
out
sub
decb
ss
jb
daa
jg
mov
dec
add
pop
sti
push
inc
and
lcall
sbb
aas
movsl
inc
push
test
mov
cmp
xor
pop
adc
lea
add
jg
pushf
adc
repz
and
cs
dec
loope
jp
and
sub
je
mov
mov
jp
mov
lock
call
push
lea
add
sarb
sarl
inc
sub
in
les
add
push
cmp
sbb
mov
inc
xchg
mov
dec
in
adc
icebp
or
push
cmp
sbb
xchg
mov
add
mov
and
xlat
or
decb
add
lock
mov
add
or
ljmp
stc
inc
add
rolb
lods
sbb
mov
jns
aam
fisubs
fstpl
adc
add
fcoml
add
cmc
push
popf
sbb
cs
mov
sbb
lahf
push
mov
test
sbb
fcoml
add
adc
xor
pop
in
sbb
into
mov
jle
out
mov
scas
dec
loope
cmp
mov
xchg
mov
lret
jg
fwait
dec
add
stos
loope
xor
mov
or
add
jnp
jb
in
xor
cmp
out
sti
bound
incb
cs
lahf
jbe
insb
add
adcl
push
mov
imul
mov
jmp
mov
das
push
imul
pop
ds
inc
jmp
adc
xor
shll
ret
mov
dec
incb
aas
mov
les
jno
movsl
sti
je
dec
inc
aam
jl
pop
adc
mov
adc
mov
jl
les
ret
out
std
xor
xor
pop
sbb
xor
scas
out
es
pop
xchg
insb
add
sub
inc
mov
mov
inc
dec
decb
add
cmp
pop
rcll
std
inc
xchg
push
shr
popa
insb
add
sbb
cmp
or
cld
lds
mov
pop
out
push
bound
lods
xchg
inc
in
jmp
nop
mov
cwtl
jg
ds
es
sub
sub
xchg
vsqrtpd
lret
xchg
adcl
mov
jne
sub
icebp
sbb
cli
cmp
sub
lahf
xlat
orb
std
and
sbb
mov
out
dec
outsb
add
loope
ret
mov
cld
out
and
mulb
add
sbb
push
sbb
add
pop
push
or
call
cmp
inc
pop
add
nop
inc
jo
cld
and
xchg
inc
lea
xor
add
enter
daa
fldt
mov
stc
adcb
out
mov
aam
add
int3
or
push
xchg
repnz
inc
add
mov
and
das
inc
sbb
pop
mov
add
pop
aaa
mov
sub
adc
outsl
pop
mov
cmp
fmuls
scas
add
pop
lcall
mov
addr16
sbb
push
iret
decl
and
sbb
repnz
out
mov
pop
js
mov
add
out
cmpsl
mov
and
inc
aad
jge
jmp
loope
iret
xlat
xchg
inc
fldcw
add
sti
cmp
mov
jp
or
pop
scas
sbb
pop
mov
jecxz
rorl
push
es
jbe
inc
shlb
jne
add
repz
fwait
repz
add
xor
leave
dec
nop
ja
xlat
sub
jne
daa
cmp
cmp
lock
cwtl
mov
mov
shll
data16
mov
sub
popf
mov
add
cmpsb
pushf
stos
adcl
xchg
adc
outsb
call
test
rorb
cmc
lds
dec
add
add
loope
shll
sbb
cmpsl
jb
or
cmp
fs
inc
push
sbb
pop
xor
clc
or
or
mov
cltd
adc
or
frstor
fcmovbe
add
xchg
adc
mov
cmp
mov
out
cmpsl
fldl
sub
mov
ljmp
nop
mov
adcl
push
out
mov
cmp
fisubrl
and
dec
push
adcl
das
jl
jnp
pop
pop
xor
sub
mov
mov
cmc
shll
in
and
push
push
repz
incb
inc
mov
out
jne
stc
sbb
dec
add
adc
decb
jge
sub
fnsave
and
xchg
hlt
push
imul
icebp
and
incb
testl
xchg
pop
loopne
and
jae
jae
fwait
jmp
test
lret
xchg
add
mov
ret
xchg
mov
out
add
arpl
std
cmpsl
lock
add
aaa
std
repz
loope
lret
fs
in
jg
rcrb
cmc
jecxz
mov
fdivrl
shrl
cmpsb
pop
stos
push
clc
cmpsl
mov
xor
xor
clc
jmp
fdivrp
das
mov
dec
mov
ret
movsbl
je
add
add
jmp
fnstenv
mov
test
scas
inc
add
adcb
cmp
mov
push
fidivrl
cmpsl
sbb
adc
scas
pushf
cwtl
in
fwait
jno
mov
mov
lods
lret
mov
hlt
push
xor
les
xchg
sbb
jbe
in
stos
mov
cs
das
lea
jbe
lock
dec
lcall
mov
fdiv
add
loope
stos
or
adc
mov
dec
sbb
add
sbb
nop
in
inc
sti
sub
mov
outsl
add
push
inc
sarl
sub
jle
in
cs
cld
mov
sti
dec
add
orb
add
sbb
add
add
decb
andl
lods
sub
decb
dec
push
out
and
mov
push
add
lea
incb
xchg
dec
add
mov
stos
sahf
pop
addr16
test
aas
sub
incb
scas
fstpl
xchg
lock
add
lret
outsl
sti
inc
add
ret
pushf
loope
add
lock
xchg
push
xor
leave
je
xchg
lret
mov
adc
outsb
incb
or
incb
shll
xchg
or
cmpsl
sti
pusha
xor
pop
inc
add
in
add
cmc
inc
add
pop
and
mov
int
and
fs
cld
push
and
add
add
fnstsw
clc
stc
jne
pop
jg
imul
cs
shrb
add
incb
add
mov
jno
and
sub
cwtl
jecxz
push
jl
movsl
lds
jmp
cmpsb
dec
inc
add
lea
stc
xchg
pop
ret
loopne
jnp
test
xor
push
mov
jmp
sbb
add
dec
add
loope
popf
xor
and
imul
rcll
lret
or
mov
push
cmp
mov
dec
inc
es
and
xchg
repz
incb
add
push
add
pop
lock
push
test
or
dec
add
loope
enter
sahf
sti
lods
xor
sbb
aaa
or
mov
jno
xor
add
dec
jns
add
adc
int3
and
iret
lds
add
repz
inc
cmp
or
xchg
sarl
adc
gs
xchg
loopne
sbb
add
loope
add
push
xor
mov
test
decb
add
stos
cmp
decb
decb
add
add
jb
ljmp
mov
cld
add
insl
ja
iret
cmp
outsb
xchg
test
ljmp
scas
and
push
or
incb
inc
daa
enter
out
add
jl
shlb
ss
add
xor
pop
fcompp
das
fs
or
add
int
add
mov
mov
rorb
sub
shlb
fstpl
cmp
jmp
pop
mov
pop
ret
push
pushf
lret
adc
cwtl
mov
cwtl
pop
lahf
ljmp
pop
fistpll
cmp
inc
mov
add
icebp
add
sub
add
mov
shl
enter
mov
out
pandn
sbb
add
vpackssdw
fs
sbb
add
push
in
orb
arpl
mov
xchg
mov
inc
out
popf
mov
xor
pop
je
pop
add
aad
adc
mov
pushf
xchg
push
lods
mov
fsubs
data16
push
push
insl
inc
fnstcw
test
pusha
add
incb
and
loop
in
movsb
cmp
incb
fildll
pop
cli
add
es
add
push
cmp
mov
xchg
fisttpl
add
adc
add
shl
ret
mov
decb
cltd
dec
frstor
add
xchg
aas
push
add
nop
push
cmp
data16
cmp
icebp
push
lock
add
mov
loopne
cld
outsb
mov
cmpsb
daa
stos
insb
incb
jge
movsb
dec
add
in
sub
aaa
nop
push
sti
test
decb
iret
xchg
mov
insb
xchg
add
repnz
jge
leave
add
mov
sti
hlt
or
mov
jo
repnz
cmc
cmpsb
cmp
add
icebp
sbb
add
test
sub
in
sar
pop
movsl
pop
mov
roll
jne
mov
test
inc
sub
aad
mov
orl
ret
push
pop
cmc
or
cmp
adc
mov
sub
incb
adc
call
lods
stos
push
decb
add
fwait
mov
pusha
outsl
pop
ret
mov
cmp
mov
imul
mov
xor
icebp
jb
push
sbb
cmp
pop
jp
add
cmpsl
pop
mov
xlat
stos
movb
pop
in
out
pop
and
pop
pop
pop
mov
pop
mov
cs
mov
dec
add
mov
jg
es
decb
jno
mov
mov
push
push
add
push
jno
test
leave
mov
sub
int
fs
adc
js
jns
lret
pop
mov
icebp
xchg
test
imul
fucompp
aam
pop
sub
cmp
cmpsl
add
incb
add
pop
inc
add
pop
les
clc
add
decb
add
stc
and
mov
mov
fwait
les
dec
add
jne
loopne
and
cmp
mov
cmc
test
fdivl
cmp
jge
addr16
and
call
pushf
push
ljmp
mov
aas
push
stc
cs
lods
sub
shrl
popa
idivb
aaa
dec
add
pop
test
and
decb
add
imulb
jnp
push
mov
ljmp
xor
and
iret
hlt
xchg
sbb
xor
cmp
lods
in
test
adc
jb
shll
add
loopne
xor
pop
push
add
add
pop
fldenv
ljmp
es
lods
aas
imul
fwait
xchg
inc
push
add
leave
mov
popf
mov
jae
icebp
stos
in
shlb
pusha
add
outsb
add
mov
push
jg
mov
addr16
add
jns
neg
mov
fidivrs
xor
sub
movd
call
test
inc
fcompl
aaa
test
dec
cmp
jb
jns
dec
add
mov
or
jp
iret
je
lods
lret
sbb
pop
and
pop
jo
loope
pop
incb
add
sub
cmpsb
into
jecxz
jl
or
xorl
rclb
sbb
daa
lods
sbb
inc
add
insl
sbb
push
stc
pushf
fisubl
xchg
sub
mov
testl
fsubs
add
xor
mov
sbb
ss
mov
mov
mov
pop
add
adc
or
add
mov
pop
xor
xor
cmc
rcll
xchg
je
inc
decb
lods
lea
cmpl
inc
and
cmp
mov
mov
nop
xchg
rclb
popa
arpl
lea
call
push
mov
pop
mov
or
jb
add
rcrb
push
fdivr
sub
lcall
gs
sbb
add
decb
fists
call
push
mov
sti
push
gs
clc
pop
imul
adc
and
mov
vphaddudq
dec
jae
xchg
sahf
inc
cmp
out
fsubrp
fdivl
adc
ss
sbb
or
ds
je
dec
shrl
loopne
add
nop
dec
push
cmp
test
sub
outsl
add
incb
add
cmpl
jno
pop
scas
pop
cmp
out
lahf
in
cmpl
jnp
shll
and
sub
stc
test
jno
mov
jne
mov
xchg
xchg
in
add
jnp
add
js
int
mov
inc
bound
scas
sbb
jb
or
sub
sub
fcmovu
loope
faddl
and
incb
xor
add
mov
imul
out
add
push
and
jp
imull
or
jnp
out
sahf
mov
and
inc
mov
push
pop
push
outsb
cs
out
das
and
lret
and
cmp
push
dec
movsb
sub
xchg
pop
call
pop
in
mov
call
ss
add
sahf
notl
jecxz
out
pop
xchg
shrb
gs
push
into
loop
push
dec
mov
scas
mov
ret
fdivr
adc
aas
iret
lahf
lods
es
imulb
jno
aaa
and
cmp
or
iret
and
and
mov
mov
add
negl
sbb
jne
dec
add
mov
pop
sti
in
pop
inc
aas
sub
cmp
push
xor
xchg
push
xor
push
cmpsl
xchg
in
and
dec
test
mov
jecxz
lea
icebp
dec
add
dec
add
imul
out
add
dec
and
mov
loopne
add
push
in
leave
lcall
jns
jecxz
daa
lds
cmp
lahf
cld
clc
xchg
addb
decb
jne
add
shrb
mov
xor
ss
mov
mov
imul
jl
test
inc
decb
mov
xor
data16
pop
and
sbb
add
neg
mov
decb
add
mov
mov
add
mov
mov
or
fsubs
add
pusha
repz
inc
in
mov
add
outsb
fld
mov
lods
sti
and
lods
rol
jae
orl
jl
sar
add
repnz
mov
iret
xchg
les
mov
add
inc
dec
xor
mov
mov
jmp
lcall
xchg
shrl
mov
add
int3
push
pop
push
cmc
mov
dec
add
mov
decb
incb
add
and
mov
aad
test
js
adc
push
push
fdivrl
sub
add
jns
pop
pop
jae
push
xlat
inc
mov
xchg
test
add
loop
pop
andl
mov
insb
cmp
sub
adc
adc
adc
adc
or
sbb
call
lahf
fcomi
dec
jae
outsb
add
jl
sub
xchg
cwtl
xchg
mov
sub
push
mov
pusha
decb
add
les
fwait
stos
mov
aas
inc
add
imul
add
shlb
popa
gs
aas
lock
dec
add
fsts
or
fistpll
nop
mov
jns
cmp
aas
bound
xchg
leave
mov
xchg
shll
cmp
movsb
and
xchg
xchg
dec
mov
cltd
aad
inc
add
test
dec
xor
add
add
decb
mov
cmp
cmp
jo
pop
imul
sub
decb
fwait
ljmp
loop
cmp
outsb
inc
out
mov
cmp
add
mov
or
xor
pop
push
sbb
xchg
pop
aad
push
xchg
fisubrl
or
dec
adc
cwtl
in
scas
push
mov
add
xor
inc
incb
add
movsl
or
loop
and
incb
cli
push
lods
in
push
dec
add
dec
xlat
scas
fstps
adc
xchg
lret
cli
cmp
test
jl
and
insb
mov
and
jns
mov
mov
xchg
int3
push
mov
popa
int3
pushl
push
fnstenv
push
in
ficomps
lret
jge
dec
add
mov
mov
scas
popf
or
out
add
mov
ret
cmp
mov
push
decb
incb
xchg
mov
aam
adc
mov
jne
hlt
sbb
rclb
xchg
pushf
out
add
mov
addr16
jo
cmp
add
mov
xor
mov
and
jne
es
and
mov
add
jle
add
repz
pop
data16
aam
fisttpll
jecxz
sub
incb
ja
bound
incb
add
adc
push
int3
mov
int
xchg
int3
push
pop
movsl
pop
leave
lahf
stos
arpl
cmpl
mov
sti
inc
add
in
popf
pop
pop
sbb
mov
lret
sti
dec
xor
xchg
mov
ss
sub
mov
sbb
dec
daa
dec
test
mov
pop
or
cmpsb
nop
adc
xchg
insl
stos
add
decb
and
sbb
pop
imul
add
lds
sbb
mov
mov
test
js
jmp
jmp
psubq
xor
and
mov
add
cmp
lret
or
mov
gs
cli
xchg
inc
add
gs
mov
xor
lret
lahf
xchg
sbb
push
or
clc
or
mov
mov
iret
jne
fwait
and
ret
rcrl
shrb
add
and
xchg
push
incb
adc
fstpl
inc
mov
sbb
hlt
or
pop
cld
andb
pop
add
aad
mov
sub
daa
inc
aas
xlat
movl
cmp
jo
popa
add
add
fstpt
push
push
cmp
imul
mov
mov
addl
jae
mov
movsl
push
rcl
xchg
adc
push
xchg
xor
jle
and
data16
decb
add
cld
lea
inc
dec
push
mov
inc
add
inc
and
pop
mov
pop
sbb
ja
leave
mov
ds
sbb
roll
fwait
pop
fwait
xchg
ljmp
in
xchg
dec
mov
popa
sahf
outsb
decb
and
mov
cwtl
mov
outsb
add
jb
inc
sub
ret
jbe
sbb
add
neg
lahf
aaa
test
cmp
add
jl
in
push
rorl
leave
out
add
loope
sarl
insb
repz
add
cmp
fsincos
jle
inc
mov
pop
xor
xchg
dec
out
adcl
push
arpl
sub
fistps
sub
jle
loope
adc
lahf
pushf
push
jns
adc
xchg
add
ja
sahf
xor
call
jns
mov
sub
fstpt
leave
jbe
xor
sbb
or
adc
nop
ds
stos
aas
ret
sub
insl
mov
jae
mov
imul
mov
roll
leave
shl
pop
adc
adc
in
sbb
inc
jmp
push
mov
push
lcall
jmp
sarl
pop
aam
mov
loope
test
leave
mov
mov
mov
data16
out
pushf
sahf
and
pushf
out
shl
pop
dec
inc
add
mov
daa
dec
cmp
decb
sbb
sti
insb
add
push
or
mov
pop
in
mov
lea
addb
imul
jmp
subl
hlt
jb
push
aas
sub
and
roll
pop
mov
outsb
add
and
enter
cmp
jl
cmpsl
adc
jbe
mov
fbstp
xor
lea
decb
jnp
int
inc
jbe
movsb
inc
adc
test
push
test
cmp
xchg
mov
mov
or
decb
push
adc
add
jnp
popa
push
leave
insb
cmpsb
mov
aaa
jae
cmpb
add
lods
mov
dec
popf
mov
push
std
pop
sub
and
cld
adc
pop
mov
sub
inc
mov
jb
int3
and
push
int
mov
data16
mov
loop
xchg
int
sub
decb
pop
hlt
movsb
aas
push
dec
cli
sti
and
lcall
mov
nop
data16
aad
adc
inc
pop
cltd
inc
add
loopne
into
frstor
mov
xchg
lea
lods
inc
in
fistps
push
cmp
clc
or
mov
cmp
jecxz
daa
cmp
mov
sub
incb
scas
mov
scas
lods
imul
add
pop
insl
in
adc
mov
dec
mov
xchg
push
push
cwtl
xchg
loop
adc
xchg
pop
jecxz
aaa
jmp
mov
mov
cs
mov
inc
sbb
lods
movsb
nop
mov
bnd
out
es
loope
jmp
add
sbbl
ja
add
loope
cli
inc
add
out
in
add
add
pop
rcl
add
cmp
rcrl
mov
inc
leave
fcoml
xchg
clc
mov
add
out
inc
dec
incb
pop
pop
adc
in
fisttpl
in
mov
outsb
pop
repnz
push
add
add
lods
insb
add
add
sahf
stc
orl
jp
in
mov
test
inc
add
repz
sbb
xchg
and
loop
mov
add
pushf
mov
pop
jo
sub
push
insb
add
xchg
mov
imull
sbb
incb
sti
xchg
insb
sbb
cmp
decb
cmpsl
xchg
add
in
ficompl
jp
fsubs
mov
dec
pop
movsl
push
imul
loop
push
jne
add
cld
pop
cmp
cli
push
xor
fsubp
lods
sub
jbe
test
orb
ljmp
jmp
inc
mov
inc
xor
and
faddp
mov
outsb
add
push
mov
xor
pop
aas
xchg
mul
fwait
ljmp
in
call
out
fs
jp
xchg
out
xchg
jecxz
sbb
movsl
aaa
int3
es
inc
insl
leave
sub
sbb
add
inc
pusha
add
fsubs
mov
push
inc
loopne
data16
imul
push
out
imul
adc
add
es
xchg
loop
movsb
cltd
and
ja
xchg
jp
addb
pusha
loopne
xchg
add
sub
push
cmpsb
xlat
mov
rcr
add
push
or
daa
xchg
adc
or
jg
stos
mov
jp
add
loopne
hlt
outsl
fadd
push
sbb
je
pop
push
mov
daa
data16
stos
jae
add
pop
shr
jp
out
fs
lahf
loop
loopne
add
dec
add
cwtl
cmp
fsubrs
sub
dec
pusha
repz
cs
mov
pop
jno
mov
mov
or
aam
dec
mov
add
imul
jne
pop
je
sub
fnsave
out
data16
aad
les
xchg
scas
inc
cwtl
mov
push
aad
rclb
add
decb
add
mov
js
cmp
add
add
mov
cmp
or
inc
std
in
push
incb
or
xchg
mov
mov
xor
inc
iret
jne
sub
test
out
jle
aad
imul
sahf
out
cmp
cmp
lcall
push
iret
xchg
cmp
xchg
mov
inc
cmp
int
cltd
jg
fisubrs
sti
and
push
or
xor
lahf
leave
lahf
fistpll
fwait
inc
adc
loop
fwait
xor
cmc
sub
into
add
add
incb
cmc
mov
push
xor
in
data16
mov
pushf
xchg
shl
out
stc
test
mov
flds
and
stc
cli
jp
pop
mov
fs
xor
ss
incb
add
mov
sbb
and
incb
incb
dec
add
sahf
fnsave
std
push
sub
out
xor
pop
dec
jecxz
add
out
test
and
decb
aam
xchg
xor
add
decb
in
pop
pop
imul
shll
stos
dec
negb
pop
jmp
fisttps
mov
fnstenv
stos
mov
aas
test
xchg
out
push
pop
xor
jb
pop
std
pop
shr
cli
ret
aaa
mov
xor
arpl
mov
incb
mov
cli
xor
inc
pop
and
loope
inc
xor
mov
aad
imul
pop
xchg
xchg
and
adc
mov
data16
xchg
in
add
fistpl
inc
rorl
mov
ret
and
jnp
js
or
mov
add
or
cmp
mov
push
movsl
add
cmp
es
mov
ljmp
mov
jne
jmp
xor
ja
mov
test
ret
push
adc
add
mov
vmwrite
je
cmp
fs
add
adc
addl
inc
decb
jno
fwait
xchg
adc
enter
push
push
cmpsl
clc
xchg
pop
data16
dec
dec
xlat
popf
out
aas
sti
jnp
inc
add
es
stos
xor
stos
mov
pop
orl
sahf
push
sar
xchg
lods
shlb
add
mov
jecxz
aam
daa
icebp
adcb
mov
jb
push
test
fcmovu
mov
dec
pushf
fwait
shlb
jp
add
pop
call
add
pusha
add
or
xchg
int
adc
test
gs
sub
and
add
cmpsb
jo
jp
pop
aad
inc
inc
adc
sbb
lcall
mov
cmp
xor
adc
incb
sbb
xor
incb
add
inc
pop
inc
adc
jecxz
lods
insb
add
shlb
dec
add
push
lods
xchg
and
sub
jne
mov
xor
inc
add
and
imul
fs
sbb
cmp
lock
xor
jmp
jbe
and
fs
mov
mov
xchg
pop
jae
push
bnd
out
cmp
jbe
adc
ds
nop
mov
pusha
add
sbb
test
fwait
scas
hlt
xchg
inc
add
pop
jb
pop
or
cmp
push
adc
jp
insb
add
frstor
js
add
popa
nop
jne
scas
add
pop
test
rcl
pop
ss
outsl
ljmp
or
call
add
cs
clc
and
andl
add
add
cs
adc
out
dec
imul
lods
pushl
int3
in
dec
add
adc
jno
or
push
lcall
cmp
jp
push
lods
xor
inc
pop
cltd
push
aad
repnz
call
inc
test
enter
insl
mov
mov
sarl
add
sub
incb
pop
dec
add
mov
shll
inc
outsb
decb
or
jno
pop
aam
shll
push
add
inc
push
pushf
add
incb
icebp
ljmp
dec
lcall
sub
decb
or
mov
sar
mov
push
push
mov
mov
pop
sbb
jo
ret
movsl
aaa
mov
and
inc
jno
dec
add
dec
outsl
pop
es
stc
setp
jle
inc
mov
pop
in
sbb
out
adc
popa
addl
aaa
loopne
lret
dec
add
cmp
movsb
es
addr16
hlt
mov
mov
insl
roll
popf
nop
insl
cmpsb
das
push
fs
scas
inc
add
popf
pushf
cmpsl
dec
add
dec
add
dec
decb
add
test
mov
ss
mov
push
decb
das
insl
add
incb
or
incb
mov
push
hlt
push
lcall
sarb
mov
add
pop
faddl
push
decb
add
out
mov
xor
jns
mov
dec
mov
call
in
mov
inc
jne
inc
in
lcall
negl
decb
clc
or
push
lods
mov
inc
rclb
lret
incb
mov
push
and
xchg
push
decb
incb
pop
pusha
imul
push
adc
hlt
es
xchg
add
test
fnstcw
inc
xor
fwait
dec
add
stc
push
push
push
add
and
push
ficoml
xor
adc
mov
lock
repz
and
daa
or
sbb
shr
and
shl
dec
idivb
jmp
decb
mov
lds
sub
sub
jns
pusha
add
mov
and
clc
add
icebp
push
fmuls
test
insl
push
push
jge
pop
mov
dec
mov
outsl
add
pop
push
xchg
lret
add
inc
decb
fwait
fwait
cli
push
es
cmpsb
push
sub
xchg
fsubrl
scas
mov
lret
push
jle
add
pop
adc
pop
mov
scas
push
add
jmp
xchg
aaa
test
ficoml
add
and
mov
pushf
dec
sbb
mov
popa
ljmp
inc
add
in
rcrl
jns
dec
push
test
pop
scas
push
cmpsb
mov
adc
nop
inc
mov
repnz
add
dec
incl
push
cmp
pop
mov
push
das
xor
sub
enter
pop
sbb
lods
rclb
loope
sub
sahf
and
lods
mov
xor
jb
push
jb
adc
sbb
decb
pop
xchg
add
jmp
loope
repz
push
and
shl
pop
adc
push
sbb
divb
pop
stos
stos
cmp
int
xchg
dec
rol
cmpsb
sbb
sbb
jns
or
js
lods
fldenv
outsb
add
ret
loop
cltd
fcoms
lods
add
pop
leave
out
sbbb
scas
push
cmp
add
mov
xchg
push
push
mov
jmp
dec
add
mov
pusha
add
inc
add
cmp
pop
pushl
daa
fdivrl
and
jne
test
push
loopne
in
add
in
fwait
mov
fistps
sub
jecxz
incb
into
les
adc
incb
inc
andl
hlt
jmp
dec
pop
outsb
add
xchg
jo
es
repnz
pusha
add
dec
add
pop
sbb
or
div
mov
je
mov
or
cli
int
jp
jge
dec
mov
imul
lcall
sub
and
mov
pop
jecxz
mov
xchg
ljmp
push
cmp
cmp
mov
arpl
cmp
inc
add
pushl
das
jne
stos
fsts
incb
lock
pusha
xchg
arpl
cmp
pushf
test
add
sahf
pop
outsl
and
pop
jge
push
call
add
add
push
lock
fstl
std
push
mov
cmpsl
fwait
es
shlb
push
cmpsl
fiaddl
add
repz
mov
adcb
add
xor
push
add
jno
mov
addr16
cmp
pop
inc
cld
or
push
popl
mov
js
repnz
in
mov
dec
data16
push
mov
mov
insb
add
cmp
adc
add
imul
ret
fcmovu
jnp
icebp
mov
xchg
and
push
incb
jg
push
mov
aaa
aad
fiadds
jne
lods
loopne
add
pop
bound
mov
rcrl
aas
outsl
sub
out
xchg
dec
scas
out
lcall
bound
pushf
das
mov
bound
in
add
je
dec
mov
pop
sbb
ljmp
leave
lcall
ds
loopne
add
push
xchg
or
decb
fsubs
push
test
inc
es
decb
jg
xchg
pop
or
insl
and
inc
inc
xchg
mov
cmpsl
jle
popf
mov
popa
aaa
roll
fdivrl
push
lahf
movsb
pop
jb
enter
mov
rcrb
xor
mov
adc
add
sbb
ljmp
push
movsb
xchg
fwait
add
xchg
popa
mov
ret
out
incb
xor
adc
fsubr
push
in
pusha
push
xchg
cmp
clc
adc
mov
ret
xor
incb
ficoms
mov
outsl
sbb
outsb
push
fs
mov
sbb
xchg
inc
add
popf
enter
dec
add
or
xor
das
repnz
mov
push
dec
add
pop
fsubrl
pop
enter
loope
xchg
sbb
jmp
jg
arpl
ror
push
lods
insl
add
jle
xchg
popa
aam
dec
arpl
xor
insb
movsb
fnsave
xor
pusha
inc
sub
sbbl
dec
into
lods
outsb
add
xchg
ljmp
and
add
inc
push
adc
stc
push
test
js,pt
out
mov
xor
fcomip
inc
decb
mov
mov
fsubl
popa
dec
add
pop
orps
jge
jge
mov
add
xor
rorb
lock
repnz
loop
jecxz
push
test
hlt
pop
mov
xchg
and
mov
subl
mov
insl
lcall
pop
inc
push
mov
cmpsb
movl
sbb
cli
jg
sub
decb
ds
incb
decb
cltd
nop
cmovle
decb
test
xchg
aas
push
push
int3
sbb
insb
add
loop
scas
mov
sbb
add
imull
incb
sub
decb
mov
or
lds
es
push
add
jp
fldcw
dec
add
cmc
sti
cmpsb
popa
aas
mov
jg
int3
sub
fwait
add
dec
test
cmp
mov
fildll
add
dec
xor
add
in
popa
cwtl
ja
add
test
xor
xor
add
or
add
jnp
mov
or
decb
jge
stos
les
mov
ret
adc
stos
scas
push
and
decb
insb
idivl
xor
je
daa
adc
cmp
hlt
dec
mov
rorb
pop
mov
xor
mov
pop
lods
cld
movl
adc
sarb
cmp
inc
fs
jl
xchg
mov
add
cmp
test
mov
test
add
fwait
sbb
div
mov
add
daa
fdivl
clc
cmp
lock
add
mov
push
pop
test
mov
pop
lcall
add
shrl
inc
movsl
mov
imulb
adc
adc
and
loop
and
pop
sahf
insb
add
sbb
stos
fs
cld
push
lret
dec
sub
decb
sub
aad
cmp
data16
mov
test
ljmp
std
leave
gs
inc
add
int3
movsb
fdivr
adc
fs
incb
pop
inc
jo
jmp
add
xor
xchg
and
outsl
jp
push
jns
aad
loopne
loop
pop
dec
fdivl
inc
sarb
mov
xchg
sbb
xlat
int3
mov
loope
sub
repnz
incb
xchg
xlat
sti
icebp
leave
jmp
test
cld
xor
xor
fnstenv
cmp
rcrl
decb
and
mov
pusha
add
js
sub
incb
sbb
pop
cmpsl
cmpsl
mov
mov
cmp
cmp
sahf
mulb
lret
sub
lods
imul
fcomps
inc
pop
fsubp
dec
add
stc
fwait
or
daa
orb
incb
leave
insb
out
imul
xchg
jle
pusha
imull
in
dec
mov
xchg
adc
inc
dec
add
cs
out
subl
je
mov
xchg
push
mov
pusha
pop
push
add
je
xchg
aam
pop
ficoml
mov
ds
out
mov
outsl
mov
cmpl
ljmp
imul
sbb
xchg
lcall
scas
das
xor
fwait
test
mov
jge
jns
push
push
sub
pop
and
dec
jae
dec
loop
mov
outsl
xchg
xchg
popf
hlt
aaa
ljmp
push
hlt
push
test
incb
ss
popf
int3
xor
ljmp
in
or
dec
adc
or
and
jnp
mov
incb
lahf
fwait
add
pop
pop
shl
mov
aaa
mov
jecxz
jo
repnz
jp
push
pop
push
inc
dec
jbe
push
mov
push
jp
xchg
sub
mov
xchg
cli
jae
loop
pop
call
repz
push
je
cld
push
das
mov
jb
cmp
data16
jl
dec
xchg
cli
dec
add
mov
xor
pop
fnstcw
and
adc
les
and
dec
sub
cmp
jne
cld
xor
dec
out
rcrl
and
ficoml
xchg
mov
js
jae
fwait
jl
and
dec
sbb
sub
fisubrl
clc
outsl
mov
int3
lcall
push
std
mov
imul
sbb
mov
xor
fidivrl
punpckhwd
test
inc
pushf
loop
stc
jo
int
cmp
cld
mov
out
loope
add
mov
adc
cwtl
jl
add
jp
adc
adc
inc
jg
add
imul
test
add
and
inc
test
arpl
imul
or
rcl
sub
cli
mov
mov
mov
cwtl
repz
add
std
mov
lds
xor
out
dec
lret
loop
mov
sbb
fs
incb
fdivrl
fwait
popa
outsb
and
data16
pop
icebp
xchg
sub
xor
add
mov
incb
inc
fucomp
mov
cmpl
jmp
ds
inc
cmc
incb
jmp
gs
nop
lret
or
decb
cmpsb
jecxz
cmpsb
push
push
jge
add
jbe
jbe
sub
fnstenv
aam
addl
out
xchg
jg
mov
jb
repnz
dec
push
pop
stc
popa
movlps
arpl
stos
cmc
mov
fisttpl
iret
mov
lods
and
pop
push
sbb
cli
push
incb
jmp
jne
add
loope
decb
mov
push
jl
mov
cmp
popa
mov
cld
outsl
mov
cmp
push
cld
xorl
xchg
imul
cmp
in
mov
stos
sahf
xchg
addb
xchg
xor
xchg
push
inc
add
ret
mov
sbb
neg
jg
ficomps
mov
mov
mov
push
push
hlt
add
add
push
scas
push
pop
loopne
add
adc
sbb
ret
add
aaa
and
aam
push
pop
xor
push
icebp
dec
add
gs
fdivrl
int
scas
je
lcall
mov
clc
sub
xlat
dec
add
or
cmp
push
sub
sub
pop
es
sbb
jbe
fwait
adc
jb
fmuls
into
and
jp
out
mov
mov
add
out
aad
cmc
inc
add
popl
iret
pop
push
jg
decl
dec
fwait
push
lods
fnstenv
jae
sti
outsl
nop
test
pop
insb
movsb
adc
sti
push
and
add
loop
xlat
xor
inc
jecxz
xchg
imul
stos
pop
push
lods
jecxz
lcall
sub
jp
out
popa
xlat
xchg
ret
adc
xchg
les
insb
add
dec
dec
mov
sub
add
ds
popa
fisubs
decb
add
lcall
in
jl
scas
ss
add
fldl
adc
jle
mov
jne
cwtl
jmp
or
ficoms
mov
or
push
mov
decb
add
xor
jle
pusha
add
ja
mov
pop
inc
insb
add
inc
enter
popf
mov
mov
in
dec
add
aas
fisttps
test
hlt
cs
mov
std
or
pop
jg
ficompl
pop
popf
insl
jmp
add
jns
mov
jne
cmp
xor
adc
add
nop
and
jnp
add
out
and
arpl
add
fcmovnbe
adc
push
aas
pushl
lods
push
push
sub
pop
lods
jmp
test
rclb
cmp
sbbb
aad
lret
faddl
incb
inc
mov
adc
push
xchg
in
mov
sti
cmp
or
mov
clc
jb
lret
cmp
cmpsl
popa
insl
cs
fstl
fistl
mov
mov
fs
jl
jae
in
push
push
pop
rcr
mov
pop
jae
add
fs
pusha
decb
stos
push
mov
xchg
sarb
into
mov
jno
cld
sub
imul
or
cmpsb
adc
push
decb
xchg
cld
xor
dec
jne
movsl
imul
mov
nop
or
js
cmpb
xlat
dec
add
mov
jno
sub
decb
xlat
mov
out
iret
xchg
mull
enter
mov
sbb
add
sub
bound
decb
leave
mov
mov
or
mov
les
push
dec
add
dec
add
jmp
orl
push
hlt
xchg
cmc
mov
sbb
sub
das
inc
fs
jbe
stc
out
jle
inc
adc
data16
aas
inc
add
mov
cmc
push
outsb
cli
in
jmp
mov
sti
inc
add
mov
ret
or
adc
push
dec
popa
lds
pop
stos
dec
in
lods
imul
or
push
pop
mov
cmc
lahf
pop
ds
cmp
lock
mov
push
fcmovb
popa
and
or
xchg
adc
mov
xor
xchg
jp
push
fnstcw
jle
jp
or
fucomip
push
xlat
idivl
push
cmp
push
stos
testb
adc
clc
leave
push
push
xchg
ss
stos
add
incb
push
pusha
add
in
popa
decb
xchg
inc
adcb
pop
fisubl
xchg
mov
cld
shll
rolb
add
mov
mov
mov
mov
jge
test
femms
add
int3
stos
mov
jb
push
pop
adc
in
movb
inc
add
push
cwtl
aaa
movsb
sub
jae
push
stos
sbb
clc
push
stc
insb
incb
xchg
sbb
decb
stos
sbb
rolb
jo
cmp
dec
xor
cmp
and
mov
mov
clc
cmc
pop
lret
cwtl
push
test
out
push
adc
je
add
dec
cmp
testb
test
and
decb
subl
cmp
sbb
push
cli
jl
das
fdivr
push
cli
pop
shrb
push
add
xchg
dec
addr16
incb
subb
dec
ficompl
sub
adc
pop
pop
sbb
mov
es
mov
mov
sti
and
mov
inc
add
xor
sbb
lret
fwait
shll
push
sub
aas
and
imul
loope
xchg
push
pushf
rorl
sti
inc
add
loop
mov
cs
lods
mov
cld
xchg
jb
lods
shl
ja
out
pop
xchg
cmp
cmpb
ret
dec
cltd
push
sahf
cmp
or
xchg
cmpb
cwtl
jp
add
mov
ss
sub
decb
rclb
leave
sbb
cmp
add
pop
movsb
aaa
jo
inc
insl
data16
shll
ss
mov
test
pop
lcall
loop
call
mov
das
push
add
cmp
add
stos
pop
addb
pusha
fwait
out
stc
adc
mov
add
xchg
cmp
pop
or
mov
pop
mov
aas
mov
js
aad
decl
decb
incb
aas
das
iret
adc
test
decb
daa
adc
push
jge
lds
into
mov
xor
adc
fwait
and
incb
pusha
mov
mov
inc
dec
mov
loopne
test
mov
sub
fwait
add
and
inc
cld
cmpsb
xchg
into
ljmp
cwtl
lret
std
add
decb
fdivrp
pop
clc
imul
decb
xor
imul
lea
add
dec
fildl
push
mov
add
jg
inc
push
jp
sub
pop
insb
incb
dec
add
inc
push
leave
inc
pop
add
ljmp
ret
cmp
jo
fadds
inc
movsl
cli
cli
in
pop
loopne
test
mov
xor
sahf
rcl
mov
mov
loopne
xchg
test
pmaddwd
add
decb
add
pop
dec
shrl
add
mov
aas
push
aam
pop
push
das
inc
pop
dec
dec
add
cld
outsl
adc
mov
dec
sahf
mov
sti
lret
arpl
fstl
std
push
fldenv
cmpsl
lcall
dec
add
ljmp
push
push
pop
push
xchg
lods
fucom
dec
movsl
cmp
insb
out
sbb
sahf
int3
iret
lods
adc
incb
pop
dec
incb
add
push
insb
inc
jbe
adc
cmpsl
mov
js
add
sti
cwtl
adc
loopne
dec
jae
stos
or
add
cmpsl
mov
add
add
or
cmp
lods
aad
or
fcomps
fwait
aad
addl
rcl
rcrb
pop
lret
mov
add
fs
lahf
inc
pop
or
or
mov
repnz
std
cmp
cmp
decb
xchg
sbb
lahf
pop
mov
lret
ret
pop
sbb
nop
adc
pusha
data16
and
dec
or
outsl
insb
add
xor
add
cs
ds
inc
add
add
mov
cmpsb
push
pop
mov
sub
lock
fdiv
xchg
adcl
fldt
cmp
pop
add
jae
roll
lret
mov
mov
fnstsw
pop
lcall
sbbl
push
cmp
rorl
inc
add
test
decb
js
inc
add
dec
add
or
incb
cs
jbe
xchg
enter
call
jns
aas
sahf
fs
push
loope
sbb
push
sar
adcl
in
jbe
gs
push
add
test
mov
inc
insl
jo
inc
xchg
xor
xchg
lret
pop
mov
inc
test
add
ja
mov
pop
lcall
addr16
jo
add
jmp
adc
in
mov
test
mov
out
shll
cli
nop
lock
pop
jmp
es
jge
sbb
xor
mov
cld
cld
sub
pop
out
lock
movsb
rolb
push
into
sub
sbb
mov
stc
sarl
pop
ds
mov
xor
mov
incb
mov
ljmp
decb
int3
mov
or
adc
test
add
pop
popa
pop
jns
push
je
test
xchg
add
dec
sbb
pushf
add
incb
jne
adc
in
or
add
das
js
pushf
xchg
bnd
lea
nop
das
or
xchg
and
xor
scas
std
aas
cmp
xorl
add
out
mov
incb
and
mov
sbb
lock
fwait
outsl
call
cmp
adc
cwtl
dec
movsb
pop
pop
int3
loope
jl
push
cld
xchg
sub
push
scas
fs
cltd
fldcw
incb
incb
dec
cmp
incb
ljmp
imul
loop
xchg
stos
pop
push
push
add
aam
stos
push
mov
add
pop
xchg
sub
insb
add
cmpb
pop
adcl
arpl
and
add
sbb
jp
xchg
jp
pushf
inc
mov
cld
xchg
subl
jmp
add
inc
jecxz
xchg
call
lahf
mov
fdiv
bnd
sahf
jg
pushf
xchg
dec
call
pusha
inc
mov
outsl
loop
jno
mov
je
fisttps
pop
vpandn
data16
xchg
int3
fnstcw
stos
mov
incb
sbb
fwait
aaa
dec
adc
jno
inc
xor
add
push
mov
enter
les
ret
enter
inc
add
lock
aam
ss
sub
lods
fwait
out
pop
xor
mov
incb
sub
mov
insl
stos
movsb
int
popa
pop
cmpsb
mov
daa
cmp
mov
add
xor
movsl
pop
scas
pop
sahf
movsl
jno
roll
decb
push
test
xor
mov
xor
cmp
test
jb
mov
sbb
imul
imul
or
sahf
cwtl
ret
ss
out
test
imul
incb
pop
adc
pop
addr16
mov
pop
faddp
mov
push
fs
scas
fdivs
nop
shlb
push
sbb
push
dec
in
adc
jbe
xor
ror
sarl
inc
add
push
addr16
jb
test
add
cltd
cs
decb
cwtl
dec
add
mov
sub
cmp
add
jl
add
mov
xor
sbb
stc
xchg
lahf
loopne
incb
sbb
test
lods
fildll
cmc
xchg
inc
jnp
jne
and
ja
decb
xor
pop
cmp
cmp
stc
sbb
fwait
in
jge
and
incb
lds
push
sub
addr16
fwait
sbb
jg
mov
cmp
shrb
scas
xor
xchg
mov
sbb
test
dec
mov
mov
call
int
xor
add
mov
sbb
push
push
add
js
xchg
and
fimuls
sbb
add
xchg
mov
pop
test
or
add
repnz
xlat
loopne
pushf
outsl
sbb
sub
stos
icebp
shlb
push
xor
fiaddl
incb
add
icebp
sub
xchg
inc
or
icebp
lcall
mov
cmpsl
rcl
dec
insb
adc
cmpsl
lea
cwtl
je
dec
add
cmp
jg
add
mov
repnz
divl
shlb
dec
cmp
shlb
lcall
cmp
dec
ljmp
push
add
add
cmp
dec
sti
mov
dec
add
push
push
pop
adc
add
stos
loope
aam
xchg
sbb
cmp
adc
mov
lahf
cli
push
xor
and
repz
fiaddl
pop
repz
mov
jae
cmpsb
cltd
inc
add
xor
or
decb
mov
pop
push
inc
add
fsubrs
mov
jb
and
clc
xchg
push
test
pop
mov
inc
inc
cs
mov
lods
loopne
jge
dec
add
sbb
scas
rcr
roll
cmp
sbb
add
fmull
and
inc
scas
ds
lret
add
fsubl
arpl
jo
sahf
xchg
add
xor
sub
incb
push
sahf
subb
icebp
and
xor
in
aam
mov
jne
mov
filds
add
add
incb
stos
mov
or
jbe
jge
inc
add
lds
in
sub
xchg
loope
sub
data16
fs
cld
pop
int
mov
mov
mov
scas
movsb
sub
mov
pop
dec
dec
orl
sub
add
aad
repnz
scas
jnp
mov
andl
int
and
adc
add
xor
mul
fbld
add
xorb
add
push
fs
ljmp
jmp
lock
cmp
push
adc
sub
scas
cmp
pop
or
decb
stc
dec
add
mov
pushf
dec
sarb
fdivrl
aaa
inc
enter
je
out
idiv
out
stos
push
inc
ss
orb
decb
pop
loopne
imul
and
push
pop
bound
push
jl
mov
mov
xchg
xchg
xchg
or
fcoml
and
addr16
aad
fwait
mov
push
into
dec
adc
scas
fsubrl
fists
sbb
push
stos
mov
les
js
mov
xchg
push
out
outsb
add
jb
les
pop
scas
cmc
shl
jmp
popf
mov
add
adc
lods
aas
adc
mov
xor
push
cld
in
xchg
inc
push
inc
gs
inc
and
iret
aam
sbbb
mov
popf
mov
or
lds
out
jl
das
dec
cmp
js
jle
adc
sub
mov
xchg
shr
mov
pushf
lret
adc
sub
dec
decb
jecxz
and
xor
pop
mov
sbb
loopne
mov
mov
loope
add
sbb
lret
dec
jb
cmp
imul
mov
popl
add
les
mov
ret
add
sub
push
dec
cmp
add
dec
ret
pusha
add
xchg
add
jecxz
lret
cld
adc
mov
addr16
or
mov
pop
inc
movsl
ror
jo
and
or
outsb
insl
imul
shlb
inc
repz
enter
sub
decb
mov
movsb
inc
cmp
ret
cwtl
outsl
and
subl
xchg
ds
dec
mov
out
mov
std
mov
dec
add
add
inc
imul
add
mov
xor
xchg
cld
inc
add
push
std
rolb
or
mov
hlt
cmp
xor
push
adc
fiaddl
add
inc
negb
shr
and
ja
mov
js
mov
in
insb
js
add
hlt
mov
lahf
icebp
imul
sti
dec
add
sub
repz
and
sub
hlt
and
sub
sbb
iret
insl
mov
orl
cmc
and
movsl
enter
add
jl
dec
rcll
inc
add
ret
pop
lds
imul
lds
pop
clc
push
inc
fdivp
dec
mov
clc
int3
or
dec
add
jmp
data16
decb
incb
jne
popf
dec
leave
xlat
fnstcw
iret
scas
and
pushf
add
scas
loop
enter
inc
andb
call
lods
cmp
gs
lahf
lods
xor
mov
es
mov
sbb
add
insb
inc
sub
push
cmp
inc
dec
test
dec
xchg
ret
outsb
cmp
sub
sub
pusha
add
cmp
mov
ret
decb
insl
and
add
cs
add
decb
mov
cs
aas
fwait
imul
sub
decb
inc
decb
jb
mov
and
sub
mov
aad
icebp
je
push
jecxz
cwtl
add
xor
and
and
adc
xor
jnp
add
punpckhdq
aam
add
cmp
jmp
cmc
testl
add
fsts
xor
sub
add
ror
push
cwtl
lret
call
add
add
addr16
pusha
add
xor
dec
or
adc
add
xchg
adc
pop
aas
lret
scas
addl
data16
push
cmp
int3
push
and
into
leave
and
fdivrp
cs
addr16
lcall
add
insl
fwait
int3
push
add
pop
dec
fists
mov
mov
addb
xchg
jo
mov
jae
inc
add
jbe
icebp
fsubrs
mov
push
push
orb
and
inc
xchg
data16
in
sbb
sti
popf
mov
rorl
jmp
mov
clc
pop
lods
fsubp
xchg
and
incb
sbb
inc
add
xchg
imul
push
cmpsb
nop
icebp
inc
mov
ret
loop
dec
scas
inc
dec
add
cmp
jne
sbb
mov
stos
cld
popa
cs
push
ljmp
popf
mov
rcl
loope
push
dec
repz
xor
xor
mov
add
pop
cmpsb
xor
sub
jmp
jp
call
jle
dec
add
mov
rolb
ljmp
add
inc
popa
movb
clc
sbb
decb
fcmovne
enter
sbb
xchg
dec
cmpsb
ret
pushf
movl
cli
loope
or
outsl
xchg
pop
das
mov
mov
fnsave
sub
or
rcrb
sbb
movsl
shrl
popa
mov
dec
dec
fs
jne
add
sbb
xor
jb
xchg
imul
int
add
jno
add
push
cld
push
fildll
mov
xchg
testl
decb
cmpsl
lods
mov
call
es
push
jmp
mov
lds
sbb
test
call
dec
fimull
cmc
ds
or
cmp
idiv
push
xchg
dec
add
push
mov
push
loope
scas
pop
sub
js
scas
dec
inc
outsb
decb
decb
sub
movsl
out
mov
leave
lahf
movsl
mov
fsubrl
pop
pop
es
mov
dec
lcall
mov
aam
mov
pop
and
jmp
incb
pop
cmp
scas
iret
dec
cmp
add
aaa
pop
popf
outsl
push
mov
loope
xor
xlat
and
dec
imull
add
aaa
xor
dec
ja
jmp
xchg
insb
data16
decb
movsb
ret
xor
test
jbe
xchg
cwtl
xchg
cld
lds
lahf
pop
cmpsl
loope
or
mov
jge
sub
cwtl
lock
push
sti
jns
add
mov
popa
add
mov
mov
insb
add
push
pop
mov
dec
imul
xor
int3
clc
mov
add
dec
loopne
adc
cmpsl
dec
add
and
jns
mov
mov
sbbl
adc
dec
mov
add
jo
dec
add
pop
js
push
xor
cmpsb
mov
insb
add
cmp
add
jns
inc
jns
call
test
pop
loope
mov
mov
unpcklps
pop
shld
int
test
test
cwtl
lahf
orb
push
jb
stos
mov
push
inc
outsb
add
adc
cmp
stos
inc
mov
insb
add
xor
push
divb
add
fwait
mov
push
das
cmp
push
dec
cmpsl
es
sub
das
xor
mov
jge
dec
arpl
pop
mov
stos
add
incb
cmpsb
fldcw
cld
and
cmp
cmp
mov
jle
aas
inc
aaa
or
jg
insl
orb
scas
mov
mov
fmul
inc
mov
sahf
shrl
jle
adc
jmp
cmp
test
xor
jns
add
adc
pop
jl
fidivrs
sbbb
jl
icebp
out
lahf
sub
xchg
mov
lods
out
and
mov
add
sub
dec
xchg
inc
dec
add
cmp
repnz
lahf
iret
pop
pop
sub
incb
adc
out
sarl
push
cmpsl
or
jno
pop
dec
push
hlt
adc
pop
pop
push
sbb
pusha
add
cmpsb
and
cmpsb
insl
jl
jge
aaa
in
xchg
mov
adc
and
dec
lods
stos
adc
out
add
rorl
xchg
add
push
dec
add
ficomps
push
push
call
jb
cmp
test
mov
sbb
ds
into
and
incb
repnz
push
imul
mov
repnz
and
or
cmpsl
outsb
add
repnz
pop
push
dec
ficomps
bound
cmp
movsb
sub
mov
test
dec
add
es
and
dec
mov
add
ficomps
fwait
outsl
mov
repz
and
adc
cmpsl
mov
xchg
enter
jb
decb
mov
in
into
cmpb
stos
cltd
mov
aas
leave
stos
loope
vmaxsd
cmp
jmp
adc
pop
out
out
xchg
nop
add
push
pop
pop
mov
inc
add
les
pop
mov
loop
mov
fs
cmp
xchg
sub
in
xor
sub
decb
sub
loope
lcall
inc
add
inc
add
mov
add
cld
pop
mov
mov
sbb
cmp
outsb
outsl
pop
mov
dec
sahf
hlt
dec
mov
sbb
sbb
jns
add
dec
add
imul
mov
add
jo
mov
add
daa
push
jg
add
cli
push
pop
adc
xchg
xor
mov
sub
arpl
fdivrs
xchg
aas
rcrl
dec
arpl
pop
stc
push
repnz
or
incb
ljmp
aam
fs
xchg
xchg
jns
out
push
push
imul
fisttps
incb
incb
sub
loop
inc
push
lock
decb
and
xor
jge
aas
je
push
push
test
cmpsl
cwtl
jo
aas
cwtl
out
popf
int3
aad
int
sbb
cs
decl
mov
sbb
jecxz
jnp
mov
ret
pop
je
add
and
cmpsl
or
mov
sub
xchg
cmp
and
mov
xor
add
mov
icebp
testl
imul
add
cs
jae
or
xchg
call
out
dec
idivb
jo
sub
mov
inc
jp
xor
popf
fisttpl
jge
xor
cmc
ljmp
sarl
test
or
mov
aas
fcom
shll
mov
xor
adc
cmpsl
lcall
adc
insl
into
data16
fldenv
jmp
push
push
call
mov
pop
push
mov
mov
xor
pop
test
out
ss
mov
pop
push
into
sub
mov
sbb
xlat
nop
mov
xchg
mov
fs
sbb
mov
fldl
cwtl
shlb
fcomp
cmpsl
inc
jns
lods
addr16
push
adc
clc
mov
mov
sub
dec
fwait
mov
xor
fnstenv
inc
testl
xor
outsb
incb
push
shll
ljmp
inc
dec
sub
pop
inc
cs
mov
das
xchg
lret
out
add
lahf
cmp
push
lcall
adc
add
out
xor
ror
push
movsb
push
xchg
aaa
jmp
xchg
dec
add
repz
mov
cmp
out
lds
add
out
cld
sti
in
shll
mov
and
shlb
adc
insl
aaa
inc
incb
decb
add
pop
cld
aaa
out
add
loopne
add
lods
and
incb
mov
jecxz
loope
std
outsb
shll
jae
fimuls
mov
mov
or
stc
mul
inc
aaa
and
fnstsw
js
push
jle
pop
fsub
pop
movsl
jo
in
cs
jmp
mov
pop
fcompl
mov
inc
rcll
mov
daa
cld
mul
int
add
jno
fsubl
mov
mov
sub
arpl
sbb
push
cwtl
pop
mov
outsb
add
sbb
outsl
mov
mov
xchg
jae
adc
and
fmuls
sub
mov
movsb
push
mov
inc
inc
jb
cltd
cmp
adc
incb
mov
pusha
add
movsl
push
decb
adc
incb
pop
rorb
inc
add
repnz
cli
or
mov
stos
scas
push
in
inc
aaa
add
inc
mov
daa
cmp
loopne
add
addr16
mov
ljmp
xchg
pushf
and
lret
stos
push
push
or
incb
test
jns
cmc
mov
adc
in
cmp
push
inc
add
mov
add
jbe
add
adc
cmp
test
in
push
or
incb
popa
mov
mov
or
inc
add
mov
inc
jne
into
sbb
out
sub
fildl
mov
cmp
incb
xchg
les
ret
cmpsl
dec
fnsave
loope
mov
fwait
dec
fists
cmp
pop
push
stos
jb
addr16
pushf
cwtl
pslld
rorb
cmpsl
dec
jbe
dec
outsb
decb
mov
pop
push
mov
jmp
je
cwtl
mov
push
xchg
pusha
cwtl
sbb
jo
movsl
jae
pusha
dec
fisubrs
and
mov
test
add
or
scas
movsl
ja
adc
or
sbb
xchg
pop
movsl
pop
adc
add
sub
lcall
mov
push
test
pop
xor
rcrl
xor
ret
add
sbb
fimuls
int
cmp
jg
mov
or
mov
push
and
dec
sbb
pop
push
mov
gs
mov
jecxz
inc
xchg
mov
hlt
mov
popa
fidivrl
dec
add
int
dec
es
pop
ret
loope
sbb
int3
cmc
add
decb
add
aas
mov
scas
pushl
pop
repnz
dec
loopne
inc
pop
imul
into
cmp
pop
lea
outsl
and
nop
pusha
decb
arpl
iret
and
decb
int
push
pusha
xchg
repnz
add
add
shlb
aaa
dec
inc
push
filds
fmul
pushf
repz
std
lahf
sar
push
xchg
setns
sbb
add
xchg
mov
icebp
sbb
sub
mov
sbbl
mov
dec
andb
push
mov
or
cmp
add
shll
incb
andl
arpl
lock
inc
dec
shr
cltd
cmp
or
mov
cwtl
or
dec
repz
push
decb
dec
sub
adc
jns
ljmp
repnz
es
decb
add
xchg
pop
sbb
xchg
inc
xor
add
rcl
je
mov
add
repz
jmp
inc
dec
stos
stos
inc
lods
mov
popf
fdivrl
cmp
add
insl
mov
push
xchg
ret
les
jmp
decb
push
lods
or
movsl
mov
test
jl
cs
and
xor
mov
ljmp
enter
xor
lret
jle
cwtl
dec
jg
fdivl
mull
pop
mov
call
mov
outsb
xchg
lcall
cmp
idiv
sarl
add
mov
mov
inc
dec
mov
rolb
test
es
adc
in
rcrb
pusha
add
daa
jmp
repnz
sbb
cmp
incb
add
hlt
jnp
cwtl
aaa
xchg
test
dec
adc
fidivrl
or
cmpsb
jge
cmp
sbb
bound
mov
out
int3
popa
insl
jns
fcmovnbe
mov
mov
in
mov
push
pop
jne
xchg
pop
mov
xchg
add
sbb
call
scas
mov
sti
sub
faddl
push
sbb
ficoms
movsb
orb
add
cmp
je
xor
in
cmp
xor
cs
outsl
pop
pop
pushf
mov
lret
adc
add
in
frstor
adc
loop
adc
pushf
adc
inc
decb
pop
xchg
pop
mov
mov
push
cli
pop
add
xor
cmp
pop
scas
fistl
or
incb
add
and
es
jbe
add
and
sub
incb
sub
cmpsl
outsb
add
cld
mov
and
sub
stos
push
inc
push
mov
sub
mov
decb
dec
jbe
adc
sahf
push
add
xchg
dec
add
mov
subl
inc
mov
insl
or
push
data16
sub
xchg
fs
cmp
sar
xchg
and
data16
mov
icebp
jl
in
lods
std
adc
add
jp
cmc
inc
out
loope
cmc
js
mov
mov
das
xchg
in
das
insl
sti
mov
loop
sbb
mov
mov
and
jno
sub
cmp
das
cmp
in
xchg
dec
call
fldcw
out
mov
push
mov
add
in
add
pop
rorb
adc
mov
fisubs
inc
add
jl
scas
mov
std
lea
pop
fs
pop
int3
je
cmp
icebp
mov
stos
std
lods
pusha
cmp
cmpsb
jbe
push
outsl
cli
divb
pop
and
inc
xchg
push
push
cmpsl
out
dec
xchg
out
cmp
or
dec
pop
jle
add
inc
sbb
add
mov
mov
incb
jne
and
out
out
pusha
jp
ret
cmp
out
fmuls
stos
xchg
iret
push
cmp
xor
xor
imulb
pop
add
dec
lods
inc
std
mov
enter
and
and
pop
push
aas
mov
fdivrs
iret
loopne
int3
pop
cmp
sbb
notl
cmp
lock
add
inc
loopne
dec
fmuls
xchg
xor
cmpsb
and
bound
mov
add
insl
stc
push
inc
inc
cli
pop
lahf
xchg
dec
sar
repnz
dec
decb
aas
repz
incb
mov
loop
addl
add
sbb
pop
or
push
incl
leave
or
xchg
mov
push
stc
dec
add
fstp
pop
mov
sbb
inc
lret
dec
add
fwait
out
pop
pushf
lea
pop
pop
aaa
inc
cs
in
dec
add
pop
stc
push
mov
push
les
aam
movnti
rolb
cs
or
fwait
push
lcall
push
add
mov
or
hlt
test
aaa
inc
imul
orb
and
fimull
imul
add
insb
pop
and
je
add
mov
repnz
add
movsl
sub
movsl
mov
mov
arpl
pusha
pop
rcr
clc
jmp
add
inc
add
icebp
mov
repz
dec
jo
adc
lods
ss
decb
loop
pop
stos
mov
cmp
loop
jae
cmp
dec
add
popa
in
inc
add
addr16
xchg
mov
aaa
cmc
dec
mov
xchg
aad
test
pop
xchg
fldt
add
adc
push
adc
decb
in
mov
mov
sbb
push
popf
sub
aad
mov
jl
loopne
sbb
jmp
add
mov
adc
xchg
repnz
jnp
push
mov
or
sub
decb
and
push
mov
js
and
mov
shlb
cmp
sub
incb
pushf
test
in
xor
fimuls
add
aam
movsl
orl
adc
outsb
xor
cld
test
xchg
jmp
cmp
scas
dec
aad
or
decb
mov
repz
add
repz
adc
and
jne
leave
pusha
cmp
add
fildll
and
scas
movsb
movsb
xor
je
daa
fsubrs
add
xor
adc
add
jl
divb
jb
sub
sbb
inc
jo
imulb
push
stos
into
ret
fst
xor
add
jne
imul
mov
cmpsl
fstps
and
and
inc
xor
adc
test
or
fs
cmp
jl
xor
or
stos
enter
fildll
mov
insb
cs
decb
insb
add
popa
mov
shlb
pop
ds
cmp
fldcw
decb
arpl
jns
faddl
ds
fcompl
movsl
xchg
arpl
aaa
xor
scas
add
aaa
cwtl
xchg
push
and
dec
adc
pop
outsb
pusha
add
or
repz
xchg
notl
dec
add
test
ficompl
pushf
push
mov
imul
or
mov
cmp
nop
insb
call
iret
stc
and
and
aaa
cmpsb
jecxz
adc
jno
lock
pop
arpl
inc
and
cmp
fwait
scas
dec
sbbl
fstpt
cmp
aaa
test
fsubrl
popf
mov
imul
je
sbb
xchg
in
inc
cs
stos
xor
ds
mov
pop
mov
stos
xor
inc
data16
dec
cmc
xchg
je
add
ja
insl
into
push
adc
jne
add
jmp
addr16
cmp
lods
inc
mov
dec
outsb
jp
sbb
add
add
js
xor
lcall
add
loop
insb
add
mov
lcall
mov
sbb
add
xor
or
mov
jecxz
dec
lods
adc
add
nop
out
and
sahf
andb
add
sbb
mov
pop
pusha
add
sub
decb
add
fldl
push
jl
aaa
push
sub
incb
mov
les
fcomps
push
incb
fimull
stos
cmp
lds
je
lcall
jno
lods
push
mov
push
ds
jbe
push
test
cmp
pop
xchg
insl
stc
into
in
pop
pcmpgtw
cpuid
lea
add
mov
jae
sub
mov
mov
mov
out
sbb
add
movsl
jmp
imul
push
pop
nop
fmul
cmp
pop
xchg
out
test
pop
pushl
add
inc
add
repnz
mov
jl
add
nop
popa
js
iret
not
call
ja
movsl
fists
popf
cmp
jl
das
enter
adc
in
lret
repz
sbb
les
xchg
jp
fiaddl
ja
or
xor
xchg
daa
out
sahf
inc
aas
les
int
mov
xor
lcall
imul
rcrb
add
outsb
adc
jne
test
into
fistl
add
add
mov
sub
cmpsb
inc
ss
mov
add
mov
sub
in
push
mov
xorb
out
mov
push
mov
pop
cmp
or
out
lds
mov
jecxz
int3
xor
push
sub
dec
pop
test
jno
dec
sbb
mov
mov
add
fdivrs
jo
dec
pop
dec
incb
icebp
inc
dec
out
sbb
flds
mov
pop
ss
mov
mov
add
sub
lea
scas
fmull
push
push
add
jnp
stos
dec
sbb
fisttps
rclb
pop
or
decb
ss
inc
test
loope
add
push
sbb
sbb
xlat
shrb
dec
add
fildl
outsb
add
pop
fiadds
out
sbb
add
mul
pop
mov
imul
jae
daa
out
gs
mov
rcrl
es
incb
cs
out
cltd
mov
push
add
insb
add
xchg
and
decb
loopne
push
or
sbb
inc
add
or
inc
call
inc
incb
dec
lret
and
jb
mov
or
popf
pop
orb
icebp
iret
push
xchg
cltd
in
movsb
mov
add
pop
out
mov
mov
inc
sbb
push
incb
incb
mulb
test
cltd
ret
rorl
dec
shlb
add
daa
xor
int3
push
adc
sar
pusha
and
out
gs
sbb
ss
inc
mov
mov
mov
add
fstps
and
incb
cmp
jmp
adc
divb
lret
xchg
add
fnsave
xchg
pop
arpl
in
add
push
mov
aad
dec
movsb
into
pop
pop
pop
and
jo
and
pop
insb
and
mov
xlat
pop
sbb
add
pop
jge
loope
aaa
pop
jg
jmp
ds
or
adc
sub
jp
sbb
pusha
sahf
jnp
cwtl
pop
inc
addr16
add
rorb
sbb
jno
or
imul
inc
adc
shll
std
and
pop
fmull
add
mov
sub
add
into
pop
enter
scas
push
scas
pop
into
popa
mov
mov
sbb
push
in
shl
sub
in
push
lds
subb
bound
fs
sbb
mov
jg
add
fwait
cmp
es
in
jbe
aad
loop
mov
ret
inc
add
insl
popa
out
fbld
add
jb
add
and
adc
dec
sbb
and
sbb
push
cmp
or
adcb
into
incl
inc
jg
test
xchg
and
data16
push
js
lods
mov
sbb
bound
fdivr
pop
add
xchg
andl
decb
cwtl
adc
add
pop
jmp
mov
jbe
inc
mov
pop
insl
scas
xor
add
and
imul
mov
movsb
iret
cmp
adc
and
inc
out
xchg
dec
stos
sbbl
fldl
xchg
adc
icebp
imul
cli
add
gs
dec
xchg
leave
dec
jae
dec
add
add
jge
cmp
imul
ficomps
fnstsw
add
mov
insb
add
outsb
add
icebp
jne
cmp
jne
mov
add
rcll
data16
push
mov
daa
insb
test
add
and
jae
adc
rcll
sub
sti
jge
add
pop
cmp
arpl
inc
jle
push
xor
add
cmp
sbb
sar
and
loopne
gs
decb
jo
shlb
mov
rcl
mov
ret
ret
dec
int
lret
incb
nop
mov
cmc
push
cmp
pop
sbb
xchg
sub
inc
add
cmp
add
incb
add
mov
adc
add
adc
outsl
jl
sbb
push
sub
push
insl
xor
out
add
frstor
push
add
add
mov
pop
xchg
and
inc
andb
sub
xchg
cltd
repnz
ret
xchg
add
push
add
incb
mov
loopne
mov
sbb
lcall
cmpsb
int
xchg
inc
ss
inc
mov
je
add
add
imul
dec
add
clc
lahf
adc
add
sub
add
push
sti
mov
es
xchg
inc
add
fidivrs
out
cmp
pop
jae
add
adcb
sbb
test
mov
stos
clc
lret
mov
adc
push
cld
cs
stos
jns
jl
sub
mov
ret
cmp
stc
test
incb
xor
fidivrl
push
sti
rorl
mov
add
dec
pop
aas
test
ret
push
sti
lahf
lods
decb
pop
cltd
sarb
jp
sub
jns
rcrl
xlat
mov
or
fsts
fisttpll
incb
int3
push
pop
ret
push
add
popf
mov
das
pop
or
cmpsb
pop
jne
push
lcall
adc
and
pop
idiv
cmpsb
out
jle
test
inc
rol
pop
mov
pop
mov
xor
pushf
sub
imul
adc
in
sahf
or
scas
pop
xchg
jecxz
add
loopne
jp
in
xchg
jb
inc
adc
inc
add
and
jle
cmp
daa
test
inc
push
outsb
hlt
ret
inc
scas
cmc
lea
push
jge
inc
or
cltd
or
jb
std
testl
dec
je
movsb
mov
enter
pop
mov
add
jnp
pop
sub
ds
bnd
mov
xchg
cmp
mov
pop
addl
xor
les
testl
enter
and
sbb
repz
cmp
and
decb
add
mov
sbb
loopne
mov
push
frstpm(287
jae
sbb
inc
ret
inc
adc
cmp
mov
add
push
loope
mov
mov
jnp
arpl
xchg
das
jle
adc
mov
mov
call
and
loope
mov
jb
mov
rclb
sarl
ss
loop
mov
rol
and
inc
icebp
fimuls
aaa
outsb
add
popf
shlb
neg
cli
sub
orl
xchg
sbb
js
clc
xor
adc
scas
add
dec
fcoms
cmp
outsl
data16
push
insl
lods
popl
movsl
ret
push
add
iret
cmpsl
fs
arpl
and
je
inc
add
sahf
popa
outsl
int3
jne
adc
repnz
test
pushf
push
loope
pusha
and
sub
aad
movsl
arpl
push
test
sbb
out
add
out
shlb
mov
cs
jb
mov
roll
jle
or
mov
outsl
dec
clc
xlat
mov
adc
das
inc
cli
scas
hlt
push
sti
mov
and
in
incb
dec
add
pop
movlps
mov
out
test
fsub
repnz
aaa
mov
jp
rorb
movsb
inc
cwtl
in
lds
add
pushf
pop
mov
lahf
inc
insb
add
and
cltd
mov
jo
cwtl
pop
ds
pusha
add
jmp
sahf
sub
mov
incb
xchg
lods
adc
jecxz
ds
scas
pop
in
pop
mov
xchg
or
incb
mov
and
negl
test
imul
cltd
popf
adc
jne
std
jns
inc
add
cmp
jae
call
or
stc
pop
cs
pop
leave
cwtl
mov
data16
fists
inc
ja
dec
add
pop
pusha
mov
inc
xor
stc
pop
jne
jecxz
divl
mov
pop
lods
mov
dec
sti
cmc
jmp
das
clc
mov
mov
pop
sbb
add
cmpsb
sub
decb
in
jmp
add
push
push
daa
jnp
add
xchg
mov
push
jmp
add
sub
mov
add
cli
sub
push
int
lret
decb
das
and
mov
inc
in
js
movsb
repz
incb
mov
data16
mul
xchg
shll
adc
jge
sbb
addb
pop
lahf
lret
sub
sarb
notl
adc
mov
jne
in
aam
dec
add
fs
mov
jl
test
sbb
shl
jg
adc
aam
nop
pop
jno
je
dec
xor
jae
mov
sub
je
xor
push
and
jle
mov
push
pop
cmp
cmp
in
jae
push
data16
decb
mov
xor
mov
loope
add
sub
ret
xor
add
incb
sbb
and
out
push
jp
add
in
jp
or
inc
mov
sbb
arpl
dec
add
and
js
xchg
mov
gs
mov
add
inc
push
cs
fs
sub
fdivr
xor
inc
lahf
dec
rclb
cmp
nop
gs
fnstenv
insl
dec
add
and
push
mov
incb
add
std
cmp
jecxz
xchg
unpcklps
movsl
mov
push
mov
push
add
xor
mov
arpl
xchg
or
ret
repnz
sub
pop
cmp
cmp
mov
add
mov
and
decb
adc
xor
jae
push
add
hlt
dec
add
or
in
ds
cmpsb
sbb
inc
add
mov
sub
incb
or
mov
add
mov
lock
jecxz
test
xchg
adc
out
movsb
inc
push
jb
incb
addl
data16
mov
loop
xchg
aas
cmp
pop
outsb
sbb
sub
push
add
in
lds
aas
pop
jno
sub
js
ds
enter
sti
loope
mov
xlat
sbb
fdivrs
dec
ficoms
add
cmp
fnstenv
and
decb
stos
and
cli
int3
jge
xor
inc
cltd
dec
fidivs
cld
inc
xor
add
loopne
add
xor
lods
sub
mov
cs
and
mov
sti
sbb
les
pushf
adc
enter
inc
inc
mov
adc
jnp
int3
mov
xor
sub
repz
pop
stos
outsb
call
les
decb
incb
add
jno
fists
cs
test
call
cmp
out
sti
jmp
add
inc
call
int3
fdivs
out
int
jae
add
cmp
push
negb
das
xor
and
jg
stos
push
jg
push
inc
jecxz
mov
inc
add
movsb
mov
subb
cmc
ret
add
jno
mov
sub
sbb
add
lods
jbe
sub
decb
jmp
xchg
mov
test
ret
or
push
outsl
mulps
xchg
pmaddwd
test
add
sub
inc
mov
imul
movsl
inc
mov
fildll
movl
push
adc
push
in
ret
call
mov
fcmove
rcr
test
insb
scas
pop
mov
cmp
dec
sbb
nop
and
mov
ja
pop
push
mov
in
and
push
mov
or
add
lods
mov
in
inc
mov
or
xchg
adc
push
dec
xchg
jno
mov
ret
pop
cli
mov
mov
test
nop
cmpsb
xchg
sub
mov
fwait
mov
and
jae
stos
mov
fwait
push
xor
lahf
loopne
mov
cmp
and
das
dec
mov
dec
sub
std
fcom
inc
in
jecxz
imul
imul
mov
lret
xchg
xlat
push
add
xchg
decb
idivl
divb
add
mov
jp
pop
mov
jo
testb
repz
movsl
add
mov
lods
enter
or
push
mov
cmp
iret
xor
insl
mov
add
ds
xchg
out
add
lret
push
test
out
mov
fmul
popa
xor
sahf
and
ret
or
out
push
cwtl
push
inc
cmp
mov
push
mov
incb
add
shrl
mov
arpl
jns
fsubr
cmpb
test
dec
add
push
fdivl
inc
add
out
sar
pop
dec
jno
pop
stos
sub
addb
sbb
sub
sahf
sub
stos
or
mov
shll
insl
movsb
lock
pushf
or
arpl
decb
fiadds
adc
dec
decb
in
orl
nop
adc
jge
xor
inc
inc
push
js
add
std
ss
add
test
pop
fs
fidivs
cmp
push
xchg
scas
sub
sbb
test
sub
jne
and
decb
icebp
sbb
call
add
mov
push
adc
and
inc
xchg
imul
pop
shrb
scas
jne
enter
xor
push
lods
mov
dec
dec
in
push
xchg
sbb
fwait
popa
cmpsb
mov
pop
xchg
incb
push
scas
ror
decb
incb
popa
add
jl
iret
in
xchg
mov
nop
push
mov
add
jg
mov
xor
insb
add
js
adc
jbe
lea
and
xchg
or
inc
push
decb
jl
jno
fistps
or
data16
icebp
inc
add
jb
or
pop
jecxz
jb
sub
push
xchg
gs
sbb
sbb
pop
xor
adc
jae
mov
and
fsubrs
add
sbb
jae
jmp
jo
push
sbb
xor
or
jecxz
mov
fwait
stc
push
out
in
dec
test
jne
add
subb
pop
sbb
popa
mov
cmpsb
loop
add
int3
jle
in
pop
sarb
pop
mov
mov
mov
ja
adc
mov
mov
incl
pop
into
es
repnz
cmp
xchg
into
inc
gs
sub
xchg
nop
insl
pop
cmp
ljmp
push
pop
xchg
popf
fnstcw
dec
add
rcr
shrb
inc
cmp
jmp
pop
jns
lret
add
sbb
mov
out
xlat
mov
repnz
xor
mov
repnz
mov
fcomps
dec
push
sbb
adc
and
jl
xchg
add
js
fisubs
movsl
dec
add
pop
adc
sahf
aam
adc
pop
das
fs
pop
in
nop
inc
add
cmpsl
dec
add
add
push
out
sbb
bnd
push
xor
shl
int
aas
out
pop
jb
decb
jle
jae
mov
mov
jo
mov
inc
stc
repnz
push
push
jns
add
lods
scas
push
loope
cs
cmpsl
es
push
xchg
stos
push
add
fs
repnz
pop
mov
inc
add
loope
mov
sub
fbld
aaa
std
xor
mov
pop
scas
push
arpl
and
mov
mov
and
decb
xor
mov
and
ljmp
pop
push
add
sti
jne
mov
cmp
push
jge
lahf
mov
pusha
in
imul
lret
push
negb
sbb
and
inc
out
out
add
rorb
pop
cwtl
mov
adc
out
cmp
push
fstl
cmp
out
push
mov
cmp
stos
push
adc
xchg
scas
xor
sub
outsb
adc
jge
ja
ss
dec
adc
stc
mov
mov
jmp
or
ja
xlat
lods
pusha
jmp
lods
pop
sub
and
xchg
scas
jp
xchg
or
add
ffreep
ret
xor
mov
div
xchg
call
loop
dec
jmp
jmp
pop
iret
mov
lock
and
add
call
ficomps
test
fnsave
mov
jo
and
sbb
push
icebp
fwait
dec
xorb
push
inc
add
sti
mov
std
and
movsl
daa
mov
aad
loop
cmpsl
xor
mov
out
dec
das
das
pop
test
stc
xchg
fldenv
roll
dec
fisttps
pop
aam
fistl
cmp
sub
mov
and
decb
imul
rorb
movsl
mov
test
mov
fidivs
fwait
bound
xchg
jp
lea
jle
or
inc
add
pop
negl
pop
scas
push
test
sbb
in
mov
sub
add
sti
xchg
and
dec
jae
mov
cmp
and
push
mov
shlb
pop
dec
and
jns
lock
dec
add
or
xchg
xchg
push
mov
mov
jo
loopne
inc
cmp
adc
lds
sbb
popf
adc
jl
bound
rcrl
fdivl
xor
add
and
sub
incb
out
test
cmp
nop
push
mov
add
roll
cmc
enter
push
add
push
xlat
push
cmp
adc
les
add
sub
xchg
sar
int
xchg
pushf
leave
push
push
sub
incb
push
pop
mov
sub
clc
divb
testb
dec
lods
jns
push
adc
mov
pop
cmp
add
sub
xlat
mov
push
mov
ds
add
scas
lret
dec
decb
clc
sbb
dec
add
jle
pop
mov
xor
lds
sbb
xchg
loope
or
add
xchg
mov
mov
out
fisubl
lahf
push
addl
cmp
pop
xchg
daa
jle
add
add
incb
or
xor
mov
jle
inc
cmp
xchg
pop
dec
shll
xor
inc
add
int
fs
mov
pop
insb
adc
sbb
xor
xor
and
mov
mov
add
test
add
or
mov
jne
rcr
iret
data16
or
fistps
mov
sub
sub
fiaddl
decb
in
mov
push
dec
repz
mov
sub
incb
fsubl
and
insl
loope
mov
rolb
repz
add
add
pop
sub
add
imul
jmp
mov
fildl
fldcw
add
adc
xlat
adc
lret
mov
fildl
add
xchg
mov
andb
out
icebp
sbb
adc
outsl
pop
and
data16
pop
cltd
dec
int3
std
lods
test
jbe
sbb
in
stc
xchg
fcompl
jl
add
and
pop
jo
xchg
xchg
mov
add
std
cmpsb
add
hlt
cltd
and
dec
sub
insb
add
aas
sub
dec
inc
movsb
mov
ljmp
add
add
les
xchg
xor
mov
imul
mov
dec
push
mov
scas
mov
testl
clc
mov
movsl
adc
sub
decb
add
ficomps
xor
cltd
ljmp
shr
pop
add
and
push
xchg
in
jmp
outsb
add
sub
stos
cmp
or
xchg
or
add
ljmp
ss
std
jmp
mov
add
mov
mov
mov
inc
push
in
cmp
out
sbb
xchg
inc
and
ret
cli
and
mov
in
adc
rorb
mov
mov
int
ror
pop
jge
jbe
out
adc
xchg
aaa
jp
aas
lock
and
mov
mov
push
call
and
inc
fs
loopnew
xchg
or
test
sub
sbb
hlt
addr16
out
imul
adc
push
in
aaa
mov
mov
jbe
add
cmp
dec
dec
add
sbb
push
incb
decb
inc
lock
nop
inc
loop
test
inc
push
lods
stc
mov
data16
in
je
dec
add
out
xor
cltd
sbb
dec
add
and
incb
fcomps
dec
add
je
adc
in
mov
pop
adc
adc
add
mov
xor
mov
push
mov
ds
jns
cld
jge
mov
vunpcklps
add
jmp
push
add
dec
es
jg
mov
loopne
movsb
test
pop
fs
outsl
cmp
stc
cmp
call
adc
mov
data16
decb
imul
mov
loopne
pop
stos
pop
mov
push
add
dec
or
fucom
mull
jg
daa
push
and
cltd
fstpt
jmp
mov
in
ficoml
rclb
add
inc
jmp
cltd
imul
adc
push
or
jp
mov
xchg
jp
pusha
data16
dec
andl
shr
ret
mov
int
xchg
test
xor
sub
decb
out
scas
and
decb
or
jae
mov
add
fistps
and
cmp
test
add
add
add
mov
sub
push
ljmp
cmp
add
cld
test
ficoml
fwait
adc
clc
lcall
cmp
sub
rolb
adcb
add
shll
and
test
call
stc
sub
mov
mov
mov
cltd
leave
sub
lahf
xchg
xchg
pop
nop
dec
add
xchg
sti
loopne
loopne
add
mov
sub
loop
je
mov
pop
xorl
rorl
add
xor
cmp
ds
test
mov
dec
add
sar
data16
fs
stos
sub
decb
decb
test
xchg
inc
add
dec
add
ret
push
lcall
inc
out
out
fucom
dec
in
xchg
mov
rclb
add
dec
movsb
popa
data16
shrb
jg
pop
lret
test
push
mov
sti
push
incb
add
inc
pop
cmp
fmuls
add
incb
xchg
out
sbb
adc
jo
fucompp
insb
and
mov
mov
rcll
jb
pop
scas
sbb
leave
mov
and
mov
loop
in
push
sub
xor
int3
mov
in
or
and
mov
jecxz
jp
insl
xor
jmp
fsubr
xchg
push
push
lcall
jg
aad
loop
jo
cmp
pop
ret
fsubrl
mov
sbb
mov
adcb
add
out
push
aaa
pop
mov
inc
mov
mov
add
add
loope
xor
push
stos
inc
incb
xchg
jle
adc
ja
or
decb
stos
xchg
add
outsb
cmp
jg
jmp
arpl
and
decb
add
shlb
pop
xchg
sbb
add
jg
out
outsb
add
aad
xchg
js
add
cld
mov
lds
hlt
sbb
sbb
inc
mov
mov
popa
push
data16
incb
add
push
push
add
pushf
xchg
in
push
lods
and
ljmp
ds
loope
or
push
imul
pop
and
cmp
push
pop
sub
and
and
incb
sub
jp
mov
movsb
jne
mov
fldenv
decl
jns
xchg
xchg
out
add
sub
insb
fadd
xor
push
fcmovnu
push
arpl
xorl
mov
add
dec
jl
out
call
orl
push
sub
dec
add
into
rorl
decb
xor
popa
scas
lods
inc
mov
dec
lcall
std
cli
push
fimull
dec
add
pusha
add
test
mov
mov
arpl
xor
pop
inc
push
jbe
rcll
into
movsl
loop
rcr
fisubrl
inc
out
jo
and
push
incb
stos
js
push
inc
push
xchg
push
jo
jge
je
or
sub
sti
enter
mov
jle
inc
fsubrl
and
incb
pop
adc
mov
lods
or
xchg
sbb
pushf
cmpsl
adcb
cmp
sbb
test
xor
repnz
push
adc
incb
mov
jo
sahf
movsb
dec
or
jg
mov
and
stc
or
sub
pop
pop
mov
push
sub
push
add
decb
incb
cmp
nop
bound
dec
aaa
jg
add
xchg
xchg
adc
dec
pop
mov
cmpsb
pop
mov
lahf
mov
call
sub
add
sti
int
dec
outsl
les
enter
popl
add
das
mov
mov
add
nop
out
mov
sub
cmp
pop
cs
incb
add
aaa
je
or
adc
mov
or
cmc
in
pop
mov
jg
pop
movsl
bnd
pop
negb
sub
movsb
adc
add
int
sub
arpl
cmp
inc
xchg
fldt
inc
add
inc
lock
popa
insl
lcall
shlb
mov
ret
shlb
shrl
adc
daa
rcll
sub
mov
mov
xchg
mov
in
pop
add
pop
mov
arpl
outsl
incl
add
push
jecxz
mov
lods
ss
clc
or
pop
nop
xor
add
incb
outsb
incb
jmp
lods
subb
fstps
or
jae,pt
cmp
leave
fstl
incb
incb
and
adc
push
jns
scas
mov
adcb
xchg
rcll
inc
add
xchg
outsl
sbb
incb
mov
movsl
sahf
xchg
cmp
mov
inc
outsl
repz
add
dec
push
push
jg
xor
push
inc
std
mov
addr16
mov
jecxz
stc
sbb
ret
mov
or
push
xchg
push
mov
cwtl
mov
xor
mov
jae
add
js
cwtl
loope
lds
xchg
xchg
sub
and
add
loop
xlat
ja
add
outsb
ss
mov
cmp
jb
mov
data16
and
gs
push
xor
es
imul
mov
mov
lcall
bound
push
cmp
push
adc
or
loopne
dec
jbe
cmpl
ljmp
addr16
add
mov
in
insl
test
dec
ret
fsubl
into
cmp
cmp
sub
js
or
mov
jbe
dec
add
jmp
loopne
inc
loop
fnsave
js
add
or
push
jne
test
and
decb
iret
pop
movsb
sbb
mov
dec
scas
pop
inc
pop
cmpsl
jno
pop
xchg
add
adc
cwtl
cmp
stos
stc
jmp
mov
pop
xchg
xorl
cmp
push
dec
push
xchg
inc
icebp
mov
xor
cmp
dec
jg
hlt
adcl
aad
inc
dec
cltd
mov
enter
je
data16
lret
movsb
sbb
cmpsl
sbb
test
arpl
hlt
and
inc
mov
insb
add
repnz
fisubrs
xor
ja
daa
sahf
cmpsb
movsb
stos
inc
repnz
cs
hlt
jb
jnp
mov
cmc
xor
sub
decb
movsb
clc
xor
mov
xor
xor
mov
std
adc
scas
add
cmp
xor
mov
leave
and
js
push
in
sub
movnti
lret
dec
add
and
add
sbb
cli
outsb
add
adc
fadd
mov
xchg
mov
js
decb
add
jo
push
nop
and
ror
fs
ja
cmp
je
test
jae
hlt
ds
cmp
cmp
sti
out
outsb
add
lcall
jp
mov
adc
sub
and
cmc
sti
scas
outsb
add
add
xor
mov
into
test
mov
cmpsl
inc
xchg
arpl
inc
mov
subb
dec
insb
add
aam
hlt
xlat
xchg
push
add
sbb
ljmp
test
add
jns
loop
mov
fs
inc
inc
mov
xorl
add
inc
add
dec
scas
fnstenv
sbb
push
lock
hlt
cmp
push
pusha
add
or
popa
dec
sub
imul
aaa
jge
clc
xchg
js
add
and
dec
mov
stos
mov
test
dec
pop
orb
jns
sti
cmp
out
jge
xor
dec
lret
sub
push
jmp
adc
xor
out
sbb
int
adc
aaa
sub
sahf
mov
out
outsb
aam
outsl
push
xchg
decb
cltd
jbe
xor
daa
xchg
fldenv
out
test
pop
sub
adc
and
cltd
mov
sub
in
and
loop
jge
dec
mov
add
data16
mov
int
adc
fs
in
imul
adc
scas
jns
mov
cmpsl
mov
pop
inc
int
xor
xchg
lds
insb
incb
mov
inc
jne
inc
add
add
fdiv
test
fdivl
test
outsl
pop
out
sbb
jecxz
repz
sub
decb
fs
mov
and
ficoms
push
and
leave
jg
cld
aad
sahf
xchg
inc
add
cmp
cmp
jno
movsb
dec
popl
sub
incb
into
adc
jne
xor
add
movsl
xchg
inc
fnstenv
jno
scas
add
das
scas
push
cmp
incb
mov
sbb
jb
int3
rorl
pop
cmp
incb
adc
call
vprotw
arpl
lods
stc
fists
xchg
mov
int3
shll
add
imul
rcr
iret
mov
outsl
aam
add
data16
pop
jo
sbb
outsb
scas
add
dec
stos
iret
stc
inc
xorb
pop
stos
pop
sub
decb
xchg
add
cs
inc
incb
push
incb
xchg
imul
decb
add
dec
add
fs
incb
loop
xchg
lret
iret
call
pop
dec
add
xchg
in
jbe
subb
adc
add
pop
addr16
ret
data16
mov
jg
add
xchg
int
inc
loopne
dec
and
fcoms
data16
push
and
jns
add
mov
xor
cmpsb
xchg
sub
cmp
dec
xchg
sub
mov
popa
hlt
and
movsb
in
popa
pop
mov
push
jne
mov
push
add
mov
fldt
sbb
decb
or
mov
movsl
fistpll
sbb
jb
inc
xchg
add
push
jecxz
mov
add
fimull
roll
cmp
movsb
fimull
loop
sub
std
fidivl
lods
shl
sub
ljmp
movl
ficoml
insb
add
push
daa
f2xm1
int
add
incb
fcoml
rclb
push
ret
dec
jmp
test
ljmp
xor
testl
add
inc
test
mov
add
stos
mov
xor
xchg
push
out
enter
xchg
ds
jl
and
and
es
or
cmp
add
ljmp
fs
jo
rcrb
int
adc
cld
mov
gs
psllw
xchg
pusha
add
and
dec
pop
imul
int3
mov
cs
push
loope
mov
lock
xor
movsb
inc
xlat
jo
fisttps
pop
jae
repz
mov
sbb
insb
decb
add
and
inc
xchg
hlt
inc
add
test
sub
xlat
push
subb
sar
mov
es
mov
cmpsl
xchg
lret
xchg
lds
mov
std
mov
xor
mov
xchg
ljmp
jae
xchg
adc
adc
out
jle
jns
mov
mov
push
jnp
push
or
jle
adc
decb
shlb
or
loop
ficoml
inc
popa
push
stos
outsl
mov
pop
xchg
daa
jmp
repz
mov
incb
mov
xchg
lcall
repnz
mov
mov
stc
addl
jg
xlat
rorb
cld
loopne
xor
and
or
dec
out
fisubrl
pushl
nop
pop
hlt
cld
sbb
mov
ret
sub
push
mov
lods
inc
incb
mov
or
sbb
push
rcrl
adc
cmp
jmp
cs
das
push
jb
inc
add
popf
inc
cli
insb
lock
dec
inc
neg
xacquire
or
pusha
add
test
jns
xor
adc
sbb
dec
cmp
test
add
adc
adc
loopne
xchg
cmp
add
cmp
sbb
ret
ljmp
movsl
sbb
incb
out
add
mov
clc
leave
or
sbb
call
sbb
sub
pop
mov
in
enter
dec
mov
cmp
shlb
add
incb
aaa
scas
aam
sahf
jp
xor
xchg
mov
jecxz
sub
mov
mov
mov
rcrl
pop
test
ljmp
cmpl
ds
xchg
sarb
std
fs
add
decb
jnp
xchg
jl
inc
in
fadds
pop
clc
pusha
add
mov
jg
bound
aam
adc
rcrb
inc
sbb
imul
fcmovbe
sbb
js
push
into
push
xor
mov
add
jl
cmp
into
es
adc
popf
rolb
push
lds
test
mov
push
orl
decb
push
or
arpl
xor
push
jne
pop
scas
shll
test
add
xchg
push
mov
scas
repz
or
rclb
ficompl
mov
dec
xchg
mov
hlt
cmpsb
jl
fiaddl
xchg
sahf
sbb
roll
pop
add
jne
les
movsl
or
movsb
xchg
add
dec
add
sub
push
aaa
dec
js
push
decb
add
pop
shrb
rolb
scas
sub
inc
icebp
xchg
xlat
sbb
incb
push
cmp
mov
arpl
stc
fisubrs
in
mov
ret
cmp
pop
mov
fldt
stc
cld
das
mov
bound
pop
jne
out
mov
or
lods
add
jge
pushf
sbb
add
movsb
imul
out
test
push
in
jne
es
and
push
pop
movsl
and
cmpsl
rcrl
stos
icebp
add
incb
inc
add
loop
or
pop
pop
jae
cmp
cmp
push
imul
jge
mov
adc
mov
mov
mov
mov
and
add
fdivrl
inc
mov
divl
dec
sub
arpl
push
fistl
je
fstl
xchg
cltd
fistpl
dec
gs
lcall
pop
pop
mov
mov
rorl
testb
lea
out
ljmp
inc
dec
mov
incb
aad
cmpsl
and
and
mov
adc
nop
ja,pt
xchg
in
cmp
sub
sub
xchg
xchg
repz
xor
push
stos
jbe
xchg
jle
js
add
pushf
add
icebp
xchg
sarb
fdivrp
dec
jl
lods
and
outsb
inc
push
repnz
xchg
shll
push
popa
aam
jge
lahf
xchg
lods
arpl
jle
cmpb
add
shl
fcompl
aaa
cs
incb
aad
cmp
jnp
sub
jns
add
adc
incb
adc
add
mov
pop
decl
decb
es
pop
xor
add
orb
mov
aas
sbb
repnz
push
movsb
outsl
dec
xor
xor
psrlq
mov
andl
test
decb
push
and
enter
sbb
jb
pop
sub
sub
mov
in
aad
xchg
lods
mov
add
cmp
imul
xlat
push
cld
push
dec
add
xchg
js
add
jg
mov
sub
cmp
jecxz
sub
call
cmp
leave
sarb
int
lret
pop
or
xchg
xchg
sub
xlat
xorb
add
or
outsl
cmp
xor
push
insl
push
xchg
hlt
or
rcl
adc
popa
pop
add
gs
cltd
cmp
into
cmpsb
out
ds
push
insl
sbb
mov
data16
aad
sub
iret
jmp
pop
stc
adc
push
lea
or
push
mov
and
mov
lret
bound
incb
add
imul
jl
call
inc
loopne
inc
movsl
std
push
jnp
cmp
pop
ss
pusha
ljmp
jns
mov
jmp
and
adcl
xor
loopne
push
sub
sub
push
cltd
push
pop
lahf
jmp
stc
pop
popf
dec
out
jnp
fnstsw
sbb
mov
add
xchg
mov
sub
popa
mov
pushf
stos
test
lds
mov
data16
push
sti
sahf
iret
fs
jo
jp
cmp
insb
push
mov
jae
cwtl
out
frstor
loope
inc
dec
add
jno
sbb
nop
rcl
sub
out
lcall
xor
add
icebp
push
xchg
sub
push
pmuludq
fldt
shll
aaa
pop
push
adc
add
popf
sbb
pop
or
mov
testl
xor
add
lods
jne
add
stc
shr
adc
out
dec
dec
shrb
add
lcall
stc
xchg
fadds
test
add
incb
add
xchg
popf
jns
sbbl
mov
fisubl
addr16
ss
xlat
mov
jmp
add
sbb
loopne
xchg
push
add
jae
pop
inc
repnz
sbb
es
incb
outsb
xchg
xchg
hlt
test
sub
loop
roll
mov
add
xchg
mov
xchg
cwtl
orl
or
xlat
pop
push
or
arpl
or
lcall
cld
adc
loop
pop
fiaddl
pop
dec
mov
inc
push
lcall
ljmp
js
into
dec
add
dec
add
sub
dec
aad
add
cmp
push
int
mov
aam
loopne
push
dec
add
imul
decb
decb
incb
sbb
add
imul
idivl
popf
sti
int
into
mov
add
popl
xor
sub
cmpsb
mov
add
push
popf
push
cmp
jbe
or
sbb
add
fwait
add
bound
cmpsb
call
dec
rol
sbb
xchg
or
int3
push
add
pop
mov
pop
pop
adc
popa
and
call
xchg
sarb
stos
jmp
out
adc
add
jecxz
cld
insl
push
lcall
cmc
pop
lret
cmc
add
stc
in
stos
ss
js
cltd
rcrb
add
daa
sub
orl
repz
lcall
pop
dec
xchg
lea
push
lea
movsl
fistps
fs
push
and
mov
mov
add
aas
ja
push
inc
incb
add
adc
add
sub
std
jnp
lret
mov
sub
mov
or
jno
add
or
addr16
sbb
sub
add
xchg
mov
add
mov
pop
mov
jnp
in
mov
sbb
mov
pop
repz
pop
push
js
jp
cwtl
popa
imul
movsb
sub
inc
jno
icebp
sti
xchg
test
decb
incb
add
es
mov
jg
aad
ret
pop
lea
fists
push
data16
decb
add
xchg
mov
fwait
cltd
or
arpl
pusha
push
dec
test
jmp
shll
aad
dec
sbbb
add
dec
add
incb
decb
fidivl
pop
dec
dec
add
outsl
fiadds
incb
inc
xchg
icebp
in
and
cld
js
mov
add
mov
lods
scas
ds
repnz
jmp
mov
mov
fs
fidivrl
cmpsb
and
js
push
xchg
incb
sub
pop
stos
xchg
mov
pusha
cwtl
sub
sub
sub
xor
mov
fistps
decb
hlt
xor
jae
mov
popa
fbstp
outsb
decb
fs
sub
pusha
add
dec
add
aas
addb
in
inc
ds
add
cmp
add
fxch
jmp
add
fisubrl
add
filds
xchg
out
ret
pop
andl
jmp
fwait
jb
fsts
fs
je
xchg
mov
add
leave
push
add
leave
pop
mov
push
inc
add
call
mov
sub
jb
icebp
mov
or
mov
jle
mov
pop
pusha
add
das
cmpsl
lds
jo
jb
mov
call
push
add
xor
into
fnstsw
add
repz
cmp
cmpsl
pop
pushf
or
dec
fldt
jmp
or
sub
incb
adc
incb
jge
add
cmpl
push
lret
pop
rcll
mov
ret
pop
pop
or
inc
push
ljmp
cmp
jg
sbbl
cmc
xor
dec
fdivrs
fwait
iret
xlat
imulb
pop
cwtl
cmp
sbb
push
add
xlat
insb
add
lods
mull
je
out
das
or
shll
lret
pop
add
decb
inc
add
dec
dec
sbb
mov
inc
ljmp
arpl
xchg
inc
jae
stc
loope
addr16
sbb
add
stc
push
jp
and
mov
dec
rcr
aam
push
or
repz
pop
test
cmpl
into
cmp
add
iret
adc
scas
inc
decb
decb
decb
mov
mov
fwait
lods
sbb
hlt
cltd
inc
add
mov
fs
pop
xchg
cmpsl
in
jecxz
cmp
mov
xchg
cmpsb
aas
lcall
test
orb
roll
pop
sub
addr16
ljmp
add
ffreep
mov
pop
jmp
jo
jno
cltd
sbb
fsubr
push
cmpsl
hlt
cmp
adc
push
cld
sub
movsb
mov
out
or
jecxz
sahf
push
cs
cmpsl
mov
add
loopne
enter
push
and
mov
dec
add
iret
pusha
add
push
in
xchg
push
xchg
lret
nop
test
rclb
jb
out
cmp
dec
es
push
js
mov
jo
add
ret
sub
shlb
into
cmp
cli
cld
aas
adc
jne
pop
mov
mov
pop
fcomip
testl
push
and
sahf
arpl
add
cmp
rorl
push
call
popa
sbb
inc
inc
lock
test
stc
es
daa
xchg
sti
addr16
xor
aas
in
sub
sub
stc
xchg
fucomi
lock
ss
daa
mov
pushf
or
cmp
fmuls
leave
push
xchg
push
adc
incb
mov
lods
sub
sub
inc
mov
ret
sub
xchg
in
mov
ss
push
jecxz
cmp
cwtl
lahf
fcmove
xor
mov
rcrb
fsubrs
outsb
add
sbbl
incb
lock
push
mov
cltd
cmpsb
mov
mov
fldenv
add
loopne
test
dec
add
cwtl
in
dec
mov
adc
xchg
test
or
mov
xlat
ds
mov
je
cli
iret
loopne
add
mov
mov
and
inc
add
xor
lods
movsb
sahf
inc
adc
or
push
mov
jne
cmp
sbb
stc
add
outsl
mov
xchg
push
cmp
stos
lcall
ret
mov
add
subl
push
pop
clc
pop
ja
adc
fsubrl
les
push
pusha
adc
mov
lods
das
rorb
and
in
hlt
daa
push
add
loopne
aaa
pop
fnsave
jnp
and
mov
rol
repz
add
xchg
xchg
mov
jmp
and
pop
push
popf
addb
dec
cmp
and
and
push
aam
loop
frstor
inc
es
mov
sahf
or
push
shlb
sub
and
dec
iret
lret
bound
stos
fstl
inc
xor
cmp
cs
mov
add
inc
add
inc
cmovns
push
pop
push
cli
or
shrl
vmwrite
push
mov
dec
add
add
movsb
insb
add
cltd
lock
cmp
sti
lods
imul
imulb
incb
add
dec
decb
sub
incb
sub
movsl
stos
cld
xchg
fstl
mov
push
mov
sub
add
lcall
das
out
popa
js
and
in
fs
test
stos
jns
out
push
push
add
out
push
adc
imul
pop
into
enter
mov
lock
pop
cwtl
xor
mov
adc
push
and
dec
xchg
in
fstpl
aas
scas
dec
lods
mov
inc
lahf
xchg
jge
dec
add
out
pop
lods
mov
cltd
mov
or
sbb
or
dec
add
movsl
adc
mov
ljmp
push
jge
inc
jb
inc
add
insl
inc
das
cmp
or
sar
mov
add
pop
notb
shrb
decb
cmc
nop
insb
add
ds
cmpsl
sbb
sahf
nop
movsb
jle
ljmp
out
fisubrl
in
jbe
xorl
shll
js
sub
mov
jne
or
decb
incb
or
aam
add
in
ljmp
cmpsb
icebp
in
add
jns
add
popf
into
add
inc
xchg
cltd
or
fcomps
or
outsl
adc
pop
stc
mov
xor
pop
pushl
add
inc
incb
insb
add
out
push
mov
shll
decb
jmp
cltd
xor
cs
incb
lcall
clc
mov
cs
movsb
ljmp
pushf
notb
pop
push
mov
jle
adc
inc
dec
pop
jge
jno
adc
gs
xchg
scas
imul
pop
push
add
mov
xor
mov
sbb
adc
pop
ds
aas
icebp
sub
mov
mov
or
popf
ljmp
mov
xchg
ljmp
push
mov
cs
sbb
mov
cld
repz
cmpsb
xchg
pop
test
add
xlat
cmp
add
aas
push
lock
pop
cmpsl
in
xlat
loop
mov
jbe
pop
pop
ss
mov
cmpb
decb
xchg
aas
fimull
in
lret
or
js
daa
cmpsb
addb
jo
jae
test
mov
adc
jne
daa
xchg
imul
push
in
sbb
imul
mov
push
test
adc
scas
jbe
or
mov
adc
jbe
or
sbb
inc
dec
lock
inc
test
stc
test
cmp
push
add
cmp
xchg
loop
add
push
inc
add
pop
fld
mov
stc
adc
and
sub
decb
pusha
in
mov
loopne
cmp
std
pand
call
adc
push
dec
add
sbb
sbb
adc
mov
repz
push
and
ljmp
ret
add
adc
dec
add
in
jb
rorb
cmp
nop
pusha
movsb
mov
mov
loope
adc
shl
das
arpl
jb
roll
and
enter
xchg
or
test
mov
jge
add
mov
dec
decb
aam
adc
sbb
in
dec
push
add
xchg
pop
pop
movsb
and
insb
add
in
aas
call
or
and
push
or
decb
pop
dec
add
mov
sub
add
rol
ret
sub
mov
loope
mov
mov
dec
xchg
and
sbb
add
dec
gs
and
mov
push
jnp
leave
aaa
xor
cli
enter
leave
shrl
xor
xchg
data16
ret
dec
push
lcall
ret
sub
imul
or
sub
push
lret
or
inc
js
or
incb
pushf
loopne
add
aas
loop
adc
fwait
cmpsl
in
adc
stos
sbb
nop
cltd
dec
incb
pop
repz
and
popf
add
jnp
jno
fs
inc
add
xor
out
dec
daa
jno
inc
fldcw
inc
les
adc
rolb
jge
jb
shl
or
jmp
mov
rcll
int3
xlat
inc
add
sbb
out
pop
and
adc
adcb
mov
jmp
imul
xor
xor
push
add
test
cld
pusha
add
imul
jnp
mov
sbb
outsb
fsubrl
cmp
pushf
enter
imul
repz
xchg
out
pop
jp
lea
call
fs
mov
es
xor
push
in
call
pop
aam
mov
dec
add
pop
jmp
out
lret
push
push
inc
ret
lock
lods
test
fists
in
or
aad
dec
out
dec
sbb
dec
inc
add
insl
dec
incb
lock
mull
mov
decb
cmp
or
repz
mov
add
sbb
mov
movsl
dec
sbb
mov
inc
add
movsb
shll
xor
popf
xlat
add
jmp
es
and
test
add
pop
cs
mov
imul
lahf
dec
push
jb
add
mov
cmp
fdivr
shrl
pusha
add
xor
add
push
mov
add
fcomps
rorb
scas
xchg
les
insl
jo
pop
mov
call
mov
dec
cmp
les
mov
sub
adc
clc
fmul
sbb
leave
lea
ror
dec
mov
outsl
cmp
les
add
push
or
mov
fld
test
push
xchg
mov
insl
iret
mov
push
mov
push
icebp
cmp
fcoml
add
mov
inc
add
sti
test
adc
mov
stos
xchg
mov
dec
pop
xchg
or
xor
arpl
jmp
mov
call
cs
ficomps
out
add
dec
add
lods
out
testb
add
repz
add
mov
dec
add
ffreep
pop
insb
add
lods
mov
incb
out
jns
add
cmp
mov
pop
jmp
xor
hlt
lea
add
dec
sti
sbb
pop
xor
in
jmp
mov
ja
add
insb
imul
fdivs
std
into
dec
mov
sbb
insb
je
sub
incb
test
sub
outsb
incb
add
fsubl
fs
jae
inc
cmp
add
cltd
xor
add
push
mov
in
les
outsl
ror
jnp
jno
cmc
daa
mov
add
cli
jecxz
sbb
rolb
mov
mov
imul
and
dec
add
clc
xor
or
and
es
jae
mov
mov
in
hlt
js
jmp
int
popa
je
sbb
inc
push
ja
incb
and
cmp
add
into
push
push
pop
ficoml
insl
mov
add
adc
andl
adc
rolb
mov
cmp
add
lods
in
fsub
and
repz
adc
aas
jmp
lcall
mov
inc
cwtl
arpl
imul
mov
pop
add
mov
xor
jne
loop
pop
push
inc
add
and
push
inc
lock
incb
add
or
jae
fmuls
incb
sti
add
pop
and
out
imul
repz
add
cwtl
inc
add
sbb
pop
pop
lock
mov
ficoms
xor
mov
jl
sub
incb
addr16
xor
jecxz
or
decb
out
and
mov
xchg
xchg
sub
lcall
push
imul
inc
add
dec
inc
push
mov
jb
and
stos
mov
lahf
add
xchg
jg
mov
inc
push
pop
int3
jae
and
pop
mov
cmc
in
jbe
fistpll
pushf
lods
mov
xchg
xchg
xchg
xchg
pushl
shll
ss
je
stos
insl
ret
rorl
add
pop
fdivrl
fs
insl
jne
rcll
sub
cmp
aas
adc
arpl
decb
rol
xchg
mov
add
mov
mov
add
call
in
cli
push
push
inc
push
lahf
inc
push
add
add
addr16
xlat
and
mov
add
mov
fstl
lods
pop
int
gs
and
xor
data16
inc
mov
pop
push
fwait
push
jmp
sbb
lock
in
pop
testb
xor
jns
stos
jbe
js
pop
or
xchg
xlat
in
out
mov
les
test
push
add
add
stos
mov
lret
jns
test
gs
mov
sbb
stc
aaa
mov
xchg
adc
ds
gs
int3
cli
jb
push
iret
mov
xor
and
test
sbb
in
lods
fnstcw
stc
lods
aaa
dec
cmp
popf
or
mov
mov
popa
fcmovu
jmp
dec
outsb
add
add
push
add
in
shlb
insb
add
decl
js
hlt
xchg
adc
hlt
fwait
jbe
mov
decb
repz
cmp
add
pop
cltd
push
jmp
mov
ljmp
decb
dec
jns
fcompl
ss
and
stc
fwait
out
xor
in
sbb
mov
xor
push
mov
fisttpll
imul
icebp
xchg
fisubs
push
shll
dec
cmpsb
or
repz
and
adc
or
decb
decb
aaa
fstpt
lods
jno
lods
jne
xorb
inc
dec
add
stos
out
adc
mov
mov
loopne
aam
add
xchg
inc
add
cmp
fisttps
int
fs
jge
in
mov
popf
pusha
cwtl
cmp
jo
data16
push
rolb
dec
push
cmp
mov
ret
movsl
push
jl
shl
pop
push
add
and
inc
dec
add
xchg
lock
data16
sti
sarb
add
pusha
add
fidivrs
les
xor
vmulss
test
xor
jnp
add
push
xchg
pop
jne
cmp
pop
cmc
fists
xor
clc
xchg
jo
add
ljmp
cmpsb
repnz
push
decb
hlt
aam
aam
add
jne
sbb
jb
add
dec
pushf
mov
jg
lods
leave
lret
dec
xchg
in
jb
insl
lahf
push
or
movl
cmp
decb
out
and
out
pop
push
movsl
ss
sub
out
insl
dec
or
incb
jecxz
cwtl
scas
push
or
decb
lahf
mov
pop
xor
inc
mul
cmp
mov
je
dec
add
jbe
xchg
mov
gs
mov
pop
int
sbb
cmp
fs
xor
cltd
mov
cmp
scas
pop
mov
cwtl
pushf
adc
rcrl
jbe
shrl
js
push
lds
outsb
add
mov
dec
add
cmp
lcall
pop
fmuls
cmp
addr16
jne
cld
pop
out
pop
lock
add
or
mov
lcall
stos
adc
add
les
mov
mov
iret
xor
mov
fiaddl
into
fldl
fistpll
or
pop
lea
push
xchg
xchg
sbb
and
decb
cld
inc
fisubs
add
sbb
mov
sub
out
mov
xchg
sub
icebp
jne
mov
addr16
jno
jno
mov
add
mov
xor
outsl
mov
push
add
mov
test
test
add
jmp
mov
mov
call
xchg
add
decb
xchg
std
jl
xchg
pop
mov
sbb
add
incb
push
xor
aam
mov
or
cltd
aam
xor
clc
push
mov
lcall
and
mov
xchg
iret
xchg
int
xlat
int
push
fwait
dec
add
iret
dec
add
jne
enter
fimuls
xchg
popa
dec
add
inc
or
xor
mov
xchg
xor
fs
dec
into
pop
call
js
fstpl
imul
stos
subb
jns
sbb
js
pusha
add
pop
inc
xchg
jae
ss
pop
xchg
xchg
jb
pop
cmc
mov
dec
add
jno
fmuls
decb
lods
or
xchg
xchg
gs
fwait
sbb
push
jmp
adc
jno
add
rcrb
sub
sbb
jle
sbb
outsb
add
int
cmp
mov
mov
mov
mov
incb
xchg
sub
mov
out
mov
xlat
lods
and
test
add
xchg
das
imul
mov
aad
push
xor
push
add
addr16
adc
xchg
pop
arpl
mov
shr
stos
movlps
sahf
popf
call
hlt
lret
pop
xor
lret
cmp
popf
jmp
aas
jmp
sbb
int3
addr16
fistps
cmp
add
dec
add
nop
sbb
dec
divb
sub
sub
xor
cltd
mov
mov
call
test
and
push
add
jmp
lods
fiaddl
jp
imul
push
adc
stos
jnp
fists
in
cmp
xor
and
inc
push
sub
add
add
dec
mov
jb
pop
and
lahf
mov
adc
push
adc
jle
fbld
adc
push
roll
jnp
movsl
nop
or
shll
pop
ret
ja
cmp
push
add
sbb
jo
mov
lcall
testb
icebp
lret
sub
hlt
sbb
adc
rcl
dec
add
cmp
cli
push
jmp
std
in
sub
cli
jmp
inc
or
push
xchg
loope
out
jae
jb
sub
aaa
sbb
cmp
push
insl
sbb
cmpsl
jne
dec
add
adc
pop
xor
data16
pop
mov
xlat
dec
or
dec
addr16
out
mov
pop
mov
adc
cmp
sub
incb
leave
pop
sti
inc
add
lret
js
pop
ja
out
or
mov
mov
xchg
add
mov
sarl
aam
add
mov
test
sbb
inc
add
xchg
insb
std
sahf
mov
pop
sub
movsb
or
pop
push
add
lods
or
add
cmp
insl
inc
add
mov
mov
decb
pop
inc
es
mov
push
jbe
sub
andb
decb
shrb
adc
lret
cs
aaa
or
decb
aad
jne
fsubl
nop
sbb
sbb
rol
cmp
movsl
loopne
jns
add
nop
jmp
ljmp
iret
pop
es
incb
loope
push
cli
sbbb
dec
sub
decb
fsubr
pop
mov
sbb
ret
stos
add
cmp
adcb
cmp
mov
mov
mov
int
arpl
lea
xor
add
xor
aas
pop
mov
push
mov
out
sarb
fs
mov
xor
dec
jmp
sbb
xchg
repz
dec
adc
adc
dec
jae
pop
and
mov
ds
add
and
cmp
add
jb
ficoml
dec
decb
decb
dec
pop
pop
test
push
jp
clc
dec
add
in
add
decb
decb
insb
add
bound
incb
add
orl
lcall
push
push
pop
jns
fcompl
inc
pop
shr
mov
in
icebp
inc
pop
inc
cmc
jb
lods
orb
decb
stos
xchg
pop
mov
scas
js
fs
dec
lods
and
std
push
popf
sbb
xchg
jo
mov
loope
int3
xchg
mov
mov
pop
adc
in
sbb
xor
inc
sub
loop
dec
rol
push
sbb
add
mov
es
mov
add
or
mov
push
xor
mov
bound
decb
incb
insb
add
ds
cmp
xchg
das
jnp
int3
jge
outsb
arpl
shl
pop
bnd
sarb
mov
jb
push
xchg
mov
jno
mov
insl
outsl
add
push
dec
test
decb
sbb
nop
negl
xor
ljmp
jl
add
jbe
shlb
jg
inc
fsts
adc
push
jg
and
mov
cmc
mov
aaa
jmp
jae
fld
and
test
repz
dec
add
iret
mov
cmp
add
jo
add
stc
cmp
mov
rclb
and
cmp
pop
into
jp
or
incb
push
or
mov
dec
add
ret
add
decb
pop
mov
loop
decb
add
sub
inc
les
mov
leave
andb
lods
stos
adc
mov
mov
and
add
and
clc
fs
jne
sub
mov
lds
dec
push
ret
imul
sub
ljmp
xchg
sub
aaa
push
add
xor
xor
iret
cmp
aam
jo
popa
cmp
mov
les
pop
push
jns
cmp
push
stos
pop
jo
jge
cmp
add
jecxz
mov
movsb
aam
fs
pop
std
cs
jmp
lods
mov
mov
subb
out
adc
add
jp
hlt
cs
inc
imul
push
fiaddl
in
lods
aaa
dec
adc
movsb
icebp
mov
incb
incb
lods
fdivrl
hlt
mov
stc
and
test
dec
sbb
mov
push
add
adc
mov
or
insl
and
je
add
test
clc
aas
inc
fistl
subb
std
jns
pop
cmpb
std
pusha
mov
loopne
xchg
jno
fs
xchg
xor
sti
stos
mov
jns
add
notl
sbb
mov
cld
setg
sbb
adc
adcb
mov
and
xor
cmp
adc
popf
adc
add
fcoml
sub
xchg
xor
cwtl
cltd
mov
mov
cmp
xchg
roll
sub
loopne
lock
mov
mov
fildll
in
jnp
enter
lods
repz
xchg
mov
sub
dec
rcrl
je
fsubrl
sub
jne
jmp
push
test
mov
xchg
movsb
and
cltd
pushf
lods
mov
push
cltd
ja
mov
push
add
imul
pop
fldl
test
mov
ss
movl
pushf
inc
cmp
fwait
not
sbb
stc
push
cmp
jecxz
popa
in
and
jne
test
and
sub
push
xor
cmp
push
dec
add
decb
cmp
cmp
mov
aas
push
mov
xlat
add
test
xlat
adc
dec
add
mov
pop
lcall
mov
cmp
dec
pop
push
test
cwtl
sub
rorl
and
das
arpl
imul
inc
mov
insl
call
add
cmpsl
gs
xor
xchg
aam
push
inc
mov
sbb
sub
sub
add
incb
inc
incb
xor
jns
push
add
adc
inc
cmc
pushf
sahf
stos
and
xor
xchg
cmpsb
xlat
xchg
jg
xor
add
push
les
repnz
in
fcmovu
out
cmc
dec
into
test
insb
add
xlat
mov
push
out
into
insb
add
sub
sbb
pop
outsl
push
rcrl
pop
or
jno
sub
jb
in
pushf
jecxz
and
jg
mov
or
incb
incb
sti
jb
push
rclb
add
test
lock
mov
sbb
mov
cmp
xchg
inc
add
insl
fdivrl
dec
stos
adc
inc
hlt
fs
lods
lock
in
jmp
or
xor
andb
pop
decl
decb
fwait
and
dec
mov
and
pop
hlt
lock
add
mull
xchg
or
incb
hlt
mov
or
adc
addr16
hlt
negl
dec
add
sbb
shll
jo
shl
imul
testl
imul
loopne
adc
push
leave
std
out
data16
out
dec
and
cmp
mov
nop
ja
ja
push
lret
fidivrl
jne
decb
leave
decl
push
shl
jecxz
mov
push
push
mov
and
dec
add
decb
push
sub
inc
jge
inc
lods
xchg
in
or
push
push
pop
pop
sbb
xor
pop
out
leave
fcompl
enter
movsb
cs
push
out
and
mov
xchg
xchg
out
cmp
jg
movsb
pop
mov
and
mov
inc
repz
xor
sbb
sbb
lcall
clc
mov
pop
jle
jl
pop
add
test
push
pop
fistpll
jns
sbb
pop
xor
cmpsb
pop
xchg
cmpsb
test
std
xchg
pop
pop
add
jns
inc
sti
adc
xor
cmp
iret
iret
dec
add
jnp
xor
xor
data16
and
shl
jb
jmp
xchg
jo
lods
adc
mov
data16
xchg
sub
decb
test
cli
cmp
lds
jge
mov
add
sbb
movl
xor
sti
icebp
jns
add
xor
xor
mov
scas
into
jmp
outsb
inc
jae
int
shlb
aas
or
repnz
jecxz
lahf
dec
add
xor
mov
pop
xor
add
lahf
ret
adc
cs
lods
bound
inc
xchg
push
aad
mov
push
out
mov
cmp
bound
and
adc
stc
mov
add
adc
das
sti
sahf
mov
pop
jbe
mov
icebp
arpl
idivl
mov
daa
jo
inc
sahf
adc
jmp
mov
rolb
int
cltd
mov
inc
pop
clc
data16
and
enter
and
scas
adc
sarl
add
daa
mov
fldt
loope
cmpsl
push
add
jp
add
sbbl
enter
dec
mov
add
test
xor
add
add
push
in
xchg
fdivs
jecxz
jno
inc
sbb
adcb
inc
push
es
mov
add
push
add
push
fs
jae
sti
push
call
jecxz
popa
pop
mov
adc
into
xchg
mov
ljmp
jle
add
in
fnstcw
loope
aas
mov
add
or
incb
pop
xchg
insb
push
loopne
in
test
rcll
and
pop
stos
xor
mov
and
sub
pop
shl
inc
jle
dec
jecxz
fs
incb
es
mov
inc
add
fs
in
jl
outsb
fbld
insb
add
adc
jnp
das
cs
movsb
xor
inc
icebp
sbb
and
hlt
pop
or
cmp
fisttpl
cmp
inc
mov
jmp
outsl
shll
fnstenv
jno
aas
xchg
jae
shll
test
test
int
fidivl
push
bound
inc
jp
into
movsl
push
mov
repz
dec
incb
add
push
hlt
jl
cmpl
inc
or
and
add
and
pop
xor
push
xchg
mov
jle
mov
test
lcall
incb
fdivrp
sub
push
and
add
sub
mov
dec
sbb
jmp
int3
cmovs
jge
lcall
aaa
mov
jmp
mov
and
push
adc
movsl
gs
gs
insl
clc
fwait
inc
jno
ds
xchg
incl
adc
loop
jae
dec
ljmp
adc
jp
pop
pop
pop
outsl
add
data16
cld
fcomip
fsubr
outsb
add
ret
jg
test
into
pusha
std
pop
fcoml
mov
fcmovnu
mov
push
push
mov
add
cli
xlat
js
sbb
into
pop
sahf
and
imul
add
sub
cmp
mov
negb
or
and
add
lahf
mov
mov
aas
fistpll
popf
insl
push
adc
lret
imul
imul
pop
insl
lods
faddl
pop
repnz
pop
jle
pop
rorb
mov
jae
data16
sbb
rcrl
xchg
adc
jno
add
test
iret
mov
xchg
div
sbbl
lahf
sub
fidivrs
inc
insb
add
add
bnd
pusha
add
mov
dec
test
das
leave
sbb
test
scas
rolb
pop
adcb
sti
mov
ret
adc
jae
xlat
js
arpl
add
inc
add
clc
mov
js
add
push
cmp
mulb
popf
lods
out
jbe
ss
jp
std
xor
aad
out
jne
aaa
and
cmc
cmp
sbb
cmc
popa
popl
mov
in
and
xchg
pop
cmp
rcr
dec
movsb
jg
sbbb
add
xchg
add
faddl
lcall
fwait
mov
decb
xchg
cmc
pop
dec
lds
mov
or
aam
xchg
lods
mov
push
cmp
mov
pop
dec
mov
ja
loopne
ljmp
add
shlb
lcall
aaa
into
icebp
imul
xchg
je
flds
xchg
ficoml
dec
pop
mov
incb
xor
inc
add
xchg
test
ret
inc
add
sub
mov
xlat
mov
mov
cmc
xor
lea
incb
lcall
inc
cmp
and
mov
aaa
xchg
cltd
push
add
neg
xchg
pop
mov
add
add
test
decb
test
cs
in
movsb
into
xor
ret
decb
fs
mov
in
xor
divb
sbb
mov
incb
push
sahf
dec
mov
cs
sbb
stc
dec
pop
in
add
enter
mov
and
es
inc
adcb
add
sbb
pop
adc
ret
in
int
mov
pop
out
mov
insl
imul
loopw
or
jmp
mov
mov
loope
push
scas
mov
fldl
mov
outsb
add
cmpsb
inc
add
incb
addb
sub
incb
cld
push
rcll
loop
push
jmp
add
mov
cmp
pop
pop
std
sbb
add
mov
std
and
pop
pop
xchg
mov
add
mov
incb
xchg
dec
sub
mov
shlb
pop
push
pop
popf
insl
dec
add
data16
mov
add
xor
fsts
fs
push
jmp
imul
cmp
idivb
lds
repnz
mov
add
cmp
adc
outsb
add
mov
lea
jmp
mov
sarl
decl
add
jbe
mov
out
ficompl
fcmove
lea
lret
inc
add
mov
jg
mov
lea
xchg
lods
mov
jmp
incb
decb
xchg
sub
xchg
data16
dec
pusha
add
add
dec
and
leave
adc
ss
daa
out
nop
mov
addr16
mov
incb
add
lods
jno
testl
and
decb
dec
sub
jge
xchg
push
xor
add
jle
jl
cltd
in
adc
sub
idivb
cli
pop
outsb
add
pusha
add
mov
mov
incb
loop
and
cli
inc
movsl
jns
test
add
ljmp
or
gs
out
mov
mov
xor
loopne
daa
fisttpl
push
pop
stc
adc
add
fsubrs
inc
add
push
jle
incb
mov
mov
imul
loop
popf
sbb
fcoms
into
jle
addr16
mov
lea
push
aad
push
jl
adc
adc
sti
mov
push
add
xchg
inc
out
data16
decb
xchg
mov
popf
out
mov
mov
repz
out
pushf
and
cwtl
js
insl
and
push
ja
clc
fildll
mov
test
inc
inc
inc
cmp
fildll
arpl
ret
push
lret
or
push
shll
repz
fstps
jmp
or
jg
push
ss
pop
sub
adc
jno
insb
jne
sub
pop
lods
sub
decb
decb
xor
mov
out
fs
das
pop
inc
decb
clc
lods
jmp
lea
pop
ret
std
mov
pop
lret
faddl
push
add
insb
dec
loopne,pt
or
decb
inc
repz
jl
jb
mov
fwait
mov
add
mov
fnsave
incb
add
xor
mov
jle
insb
cmc
in
stc
pop
lcall
mov
add
int
pop
sbb
sbb
mov
loopne
add
out
bound
imul
xor
lcall
add
mov
mov
or
pop
jb
js
clc
cmc
xor
imul
roll
fidivrl
sbb
pop
jge
clc
stc
push
fidivs
roll
dec
push
ds
out
jmp
pop
add
icebp
inc
cld
sbb
pusha
add
loop
outsl
adcl
pop
leave
and
add
xchg
aam
adc
out
pop
fcoms
loop
test
push
jle
adc
loope
mov
mov
test
imul
dec
add
jno
aas
cs
aad
inc
add
sub
jb
xchg
fsubrl
mov
inc
incb
adcl
cmc
sti
hlt
mov
adc
inc
pop
sbb
sbb
mov
dec
loope
adc
loop
add
dec
add
xor
incb
icebp
and
fsubp
and
xchg
and
mov
rolb
in
adc
mov
out
lea
repz
sub
push
imul
jbe
inc
add
repnz
jle
fnstsw
mov
ss
or
cltd
push
and
sbb
ds
cmpsl
inc
incb
fildl
imul
jnp
test
fldenv
les
push
hlt
rcrl
es
test
dec
std
ja
add
insb
mov
aas
add
cmp
or
decb
dec
aas
add
mov
shll
cs
test
add
push
pop
pop
inc
add
mov
jl
rolb
pusha
imul
mov
ror
push
sub
pop
xor
mov
enter
and
movsb
add
cmp
push
or
cmpsb
scas
inc
iret
inc
add
fadd
cmp
outsl
push
cmp
movsl
out
loope
mov
push
add
lods
inc
mov
jae
add
jmp
add
test
push
xorb
inc
add
sbb
insb
sbb
add
mov
push
or
cmc
sub
jns
mov
add
jae
cmp
cmp
decb
pop
jl
or
decb
repz
outsb
add
in
mov
ja
xlat
in
xchg
add
ja
jp
pop
in
push
add
adc
jbe
cltd
xchg
xchg
mov
mov
and
add
out
jg
lret
outsl
fistl
push
mov
or
std
mov
dec
imul
pop
out
mov
stos
aas
jno
mov
arpl
popf
sub
jmp
add
int
add
ficompl
popf
les
xchg
mov
js
andl
add
lret
cmp
pop
scas
nop
adc
cli
jne
das
hlt
add
decb
cmp
jbe
stos
pop
mov
sub
jecxz
mov
and
mov
sti
insl
xor
mov
dec
test
scas
lret
in
sbb
cmp
scas
aas
negl
pop
lods
ret
subb
fwait
xchg
mov
jnp
lods
inc
add
inc
add
sub
jg
sub
and
cmc
sbb
lds
cmp
push
xor
inc
ret
and
inc
sub
stos
loop
popa
lahf
inc
add
pop
mov
repz
sbb
iret
scas
imul
das
inc
and
les
pop
mov
xor
das
push
stos
cmpsl
pusha
call
cmp
push
push
decb
sbb
sbb
fidivrl
xor
cs
rorl
push
xor
in
popf
popf
inc
pop
outsl
data16
dec
adc
push
cld
js
cmp
add
pop
inc
add
fs
bound
shll
jns
es
decb
sti
mov
leave
xor
je
lret
cltd
mov
stos
mov
in
sahf
js
cmp
xchg
data16
loopne
jo
mov
incb
decb
cmc
movsb
sub
call
xlat
test
sbb
dec
lods
add
adc
push
add
xchg
sub
jl
in
aas
fwait
andb
sbb
iret
pop
xchg
xchg
mov
fists
in
cmc
arpl
je
mov
sbb
inc
test
pop
add
loope
push
loop
dec
imul
rorb
out
push
repz
xor
or
xor
lock
testb
mov
movb
aas
ficoms
int3
mov
mov
xor
jl
adc
mov
inc
imul
outsb
add
dec
dec
adc
push
mov
jmp
mov
mov
incb
aas
inc
mov
xor
lds
dec
lods
fdivrs
jbe
mov
dec
arpl
add
add
or
outsl
cwtl
jns
cld
fldt
out
pop
ret
mov
idivl
es
aas
cli
pusha
add
das
shlb
and
sti
mov
pop
data16
mov
dec
pop
insb
add
lds
adc
push
adc
inc
add
ss
rorb
pop
lcall
lea
outsb
add
shlb
and
incb
mov
imul
pop
push
push
mov
lahf
dec
xchg
and
mov
and
or
inc
inc
add
lock
adc
pop
add
decb
mov
cltd
cli
insl
rcr
insl
lods
movsl
xor
mov
decb
sub
mov
shl
popa
ss
call
rorl
push
gs
dec
sub
movsb
repnz
in
and
rcl
fidivrl
add
cmp
adc
push
push
push
fcomps
mov
mov
sbb
mov
mov
jmp
mov
dec
add
icebp
test
popf
or
jbe
in
add
in
xor
incb
decb
call
sub
test
mov
test
jg
sub
dec
mov
fdivl
add
testl
push
add
mov
shlb
repnz
sub
push
arpl
in
mov
mov
out
xor
or
cli
cmp
ds
push
cmpsl
loop
mov
dec
or
jo
dec
cmp
mov
fadd
rcrl
inc
ret
clc
add
mov
add
jno
push
incb
out
sub
sbb
adc
test
and
add
mov
mov
testb
rorl
movsl
out
cmc
mov
scas
cmp
je
xchg
jne
jmp
lret
arpl
or
incb
fstps
cmp
xchg
pop
dec
lods
lahf
adc
mov
ljmp
arpl
mov
bound
ja
push
ret
outsl
push
dec
sub
xlat
andb
adc
fcmovbe
add
pusha
add
flds
leave
dec
cmp
jmp
rcr
scas
leave
int3
fbstp
insl
fwait
mov
jb
jge
lds
push
mov
mov
dec
push
or
jne
cmp
add
fwait
lea
add
xlat
loopne
aas
ffreep
pop
fimull
add
inc
arpl
outsl
call
stos
adc
scas
rorl
fists
push
ja
iret
test
decb
frstor
incb
sub
dec
add
add
mov
cltd
lcall
pop
shll
fs
incb
mov
hlt
or
decb
xor
inc
pusha
cmc
adc
add
fisubrl
dec
add
push
es
inc
add
addr16
add
imulb
je
andb
dec
incb
sbb
mov
sbb
out
out
dec
push
add
dec
cmp
jl
adc
mov
stos
push
fidivs
and
adc
test
push
out
leave
cmp
and
decb
add
dec
pop
dec
xchg
popa
or
dec
xchg
idivb
loop
add
call
incb
sbb
sub
sbb
incb
or
and
mov
in
push
ss
out
movb
mov
jno
add
jmp
cs
hlt
mov
or
arpl
mov
jae
rclb
sahf
cs
and
cmc
mov
sbb
jl
lock
pop
xor
inc
lds
insb
add
dec
push
and
incb
add
mov
xchg
mov
sub
nop
lods
insl
cltd
hlt
pop
orb
push
sbb
xchg
cld
adcb
ljmp
mov
aaa
xchg
das
test
jo
mov
jmp
cmp
mov
xchg
jecxz
mov
and
test
mov
repz
sbb
or
incb
aas
leave
cmp
insb
out
jmp
movsb
cmp
jo
cltd
sti
fwait
loopne
cmp
dec
add
xlat
sbb
jl
rcr
dec
jae
adc
test
xor
cmc
fstpl
inc
add
cli
ret
hlt
mov
daa
mov
mov
jb
xor
decb
insb
add
xor
scas
pop
loop
or
pushf
add
dec
ret
xor
imul
dec
add
dec
loope
adc
mov
xor
leave
mov
mov
sub
clc
out
xor
mov
and
decb
mov
add
insb
decb
xor
add
out
mov
idivb
add
push
xchg
orb
loop
sub
push
cmp
icebp
loope
std
lods
xlat
mov
add
or
imul
jne,pt
aas
loopne
mov
xchg
ret
cmp
mov
arpl
shll
push
repnz
add
add
in
and
decb
sub
mov
cli
cmpsl
pop
add
jb
push
test
dec
sbb
lret
mov
sbb
jge
stos
and
filds
sbb
incb
incb
add
xchg
scas
add
xor
cltd
jle
xchg
je
and
test
enter
sbb
adc
and
arpl
xchg
idivl
stos
cmp
imul
add
fdivs
sub
call
push
incb
and
and
aaa
push
test
outsb
push
push
jg
add
popa
add
pop
push
and
add
hlt
inc
fimull
cmpsl
jg
incb
add
jae
lcall
or
fistpll
inc
aaa
icebp
fstpl
mov
xlat
jno
cli
or
rorl
jg
inc
dec
add
or
gs
add
push
test
add
cs
decb
rcrb
mov
je
add
xchg
dec
mov
push
popf
sub
test
paddq
cmp
cmp
or
lahf
es
add
ja
movsb
push
in
aad
cs
pop
push
pop
xchg
sbb
fildll
jno
xor
es
loopne
incb
mov
dec
test
sub
decb
icebp
data16
inc
cmc
or
gs
add
dec
jnp
xor
lret
push
add
ss
incb
sub
mov
ljmp
and
push
addr16
aaa
cmc
sbb
cmp
arpl
add
mov
cld
mov
stos
into
and
incb
fbstp
pop
mov
nop
mov
cmp
pop
mov
sbb
leave
adc
xor
cmpsl
or
mov
cs
ljmp
pop
or
sbb
fimull
lods
push
sub
and
mov
clc
idiv
mov
xorb
lret
add
in
scas
outsl
jmp
pushf
imul
test
mov
push
lods
inc
jge
push
pop
mov
pop
add
mov
dec
or
decb
jle
xor
test
or
add
fwait
push
outsl
xchg
cmp
ja
sub
idivl
fwait
pop
lods
sbb
rclb
mov
sahf
cmpb
add
insl
out
call
inc
pop
mov
and
sarl
fnstcw
add
aam
xchg
dec
lahf
adc
orl
lds
push
scas
xor
fstl
shl
xchg
fnstsw
pop
pop
jo
in
mov
add
movsl
pusha
add
imul
stc
popa
xchg
add
popf
test
lock
fisttpl
incb
mov
dec
decb
jbe
xor
mov
stos
mov
push
call
aaa
arpl
leave
inc
add
frstor
xchg
and
cs
test
ja
into
mov
jne
adc
mov
or
xchg
cmp
jo
xor
add
mov
and
lahf
xor
movsb
sbb
sbb
inc
or
jge
add
incb
test
xlat
fs
jg
xchg
mov
fisttpl
fisubrs
daa
outsl
cs
pop
jbe
ret
adc
pop
sti
mov
repnz
das
ljmp
dec
adc
lret
shl
mov
mov
jg
add
inc
add
dec
pop
push
cmpb
pop
mov
pop
sti
inc
add
pushf
arpl
mov
insl
sbb
sahf
cmc
in
pop
cmpsb
inc
incb
mov
xlat
mov
mov
ffree
imul
push
add
dec
stos
fmull
dec
imul
and
clc
les
decb
pop
jmp
mov
in
xchg
fwait
sarl
out
push
mov
jg
in
and
roll
data16
pop
push
dec
decb
sarl
fbstp
cmp
push
push
xchg
cmp
addr16
ds
shr
ret
xchg
or
cmpsb
jge
mov
add
lret
and
pop
stos
cmc
in
arpl
cmp
notl
mov
add
movsl
and
xchg
jbe
mov
pop
js
fldenv
pusha
xchg
mov
imul
sub
pop
sbb
lea
add
ss
xchg
pop
add
incb
cld
fwait
add
jg
stos
imul
rcll
mov
mov
scas
mov
incb
push
je
hlt
aas
push
jp
push
data16
xor
inc
cs
aas
adc
adc
mov
jae
mov
jmp
inc
add
shlb
xor
out
xor
pop
bound
out
pop
push
fmull
mov
inc
in
loop
std
and
sarl
push
cmp
lock
sub
loop
add
cmc
shll
jl
push
bnd
shll
dec
in
push
push
jne
rolb
fs
decb
push
sub
decb
lods
mov
xlat
jecxz
or
jp
lcall
addl
neg
cli
pop
pop
fdivr
jl
xchg
xchg
cmpsb
bound
push
mov
stos
js
and
xchg
das
push
imul
fidivrs
loope
inc
xor
push
out
add
cmpsl
aas
cld
add
repnz
mov
mov
cmp
inc
lahf
in
mov
rep
pushf
xor
lret
mov
push
clc
mov
cmp
push
stos
or
mov
push
decb
repnz
into
loop
mov
add
and
xlat
popa
test
jge
push
sbb
mov
pop
in
xlat
sti
es
xchg
rcll
add
mov
out
in
sub
decb
and
xor
pop
scas
out
dec
hlt
dec
inc
ss
adc
mov
incb
jge
push
fdivr
jmp
sub
inc
jo
add
roll
stos
and
and
inc
cli
push
out
and
decb
fsts
cmp
add
and
inc
loope
add
jge
incb
xchg
pop
insb
jecxz
pop
addb
mov
jle
ret
xor
mov
mov
xchg
cltd
popa
imul
jo
sub
test
pop
mov
rolb
ja
ret
insb
adc
lods
push
aaa
mov
mov
add
add
lcall
nop
das
int
push
push
stos
or
and
lock
popa
stos
arpl
pop
sbb
push
fnsave
cmp
fsubrp
out
in
inc
jo
mov
mov
push
int3
jle
loop
cmpsl
movl
mov
xlat
pop
sub
icebp
mov
out
add
inc
sub
pop
and
insl
repz
sbb
and
decb
into
jmp
adc
insl
push
rcll
loop
add
stc
fwait
rcll
sbb
sub
pop
add
shlb
pop
fwait
mov
xchg
or
sahf
mov
dec
pop
sub
add
out
fdiv
cmp
inc
sub
imulb
or
jns
xlat
pop
scas
xor
jge
add
lock
out
sub
or
xchg
adc
xchg
cld
aam
pop
cmpl
dec
add
jp
pop
or
fmuls
adc
mov
cwtl
pop
sub
dec
adcl
xchg
pop
cmpsl
fwait
dec
test
mov
add
adc
ss
mov
push
jp
push
lock
push
out
out
bound
push
out
push
inc
mov
pop
jnp
add
xchg
repnz
cltd
ret
into
insl
inc
cmc
sub
push
mov
pop
pop
inc
adc
in
iret
xchg
lods
arpl
push
adc
mov
cld
orb
xchg
faddl
xchg
sahf
xchg
shrb
inc
xchg
and
mov
jnp
arpl
addr16
icebp
xchg
sub
incb
arpl
push
dec
add
ja
out
aaa
dec
outsl
mov
dec
add
icebp
cld
inc
nop
sub
incb
push
add
mov
and
pop
rolb
cmp
add
dec
sub
je
lcall
xchg
arpl
xchg
xlat
push
mov
cltd
fs
mov
dec
movsl
xor
inc
decb
in
cld
and
add
xchg
lret
adc
movsl
incb
mov
cmp
ret
lock
aaa
icebp
jnp
mov
arpl
cmp
mov
xchg
lret
cmc
dec
xor
stos
inc
add
pop
jb
in
push
add
and
gs
stc
test
popa
adc
pop
clc
cld
mov
sub
decb
add
push
mov
mov
sub
and
in
mov
mov
les
add
xor
ret
xchg
sub
repnz
cmp
jne
mov
fsts
cmp
mov
fisubrl
pop
mov
call
mov
roll
lcall
mov
lcall
in
inc
decb
dec
adc
add
sbb
clc
push
mov
sbb
js
adc
sub
aam
push
sbb
test
pop
lcall
cmpsb
pop
aad
popa
std
in
scas
inc
inc
in
push
pop
leave
inc
or
ss
jb
rcrb
pop
stc
and
sbb
imul
loopne
push
dec
and
sub
incb
pop
outsb
dec
inc
dec
cmp
add
sbb
add
fisubrs
sub
jl
cmc
clc
imul
decb
psubq
mov
mov
pop
xchg
lret
fsubl
inc
push
aas
push
dec
add
ja
and
decb
test
aas
mov
addr16
enter
fistpl
push
push
lds
mov
jg
aas
jo
inc
adc
ret
pop
xlat
jns
fcomps
push
mov
jno
jmp
jecxz
add
sub
subb
push
in
push
adc
or
add
outsl
sub
lahf
fs
add
incb
incb
xchg
add
jae
pop
adc
xor
sub
cmp
in
imul
cli
pop
jmp
add
inc
bnd
fdivrs
out
or
xor
xchg
xor
ja
and
and
cmp
leave
mov
jns
mov
and
decb
lods
xor
push
sub
mov
mov
add
add
mov
jno
ds
std
cs
je
ret
jmp
int3
mov
add
gs
or
mov
rolb
push
add
pusha
pop
or
fisttpll
push
adc
add
call
and
or
aam
mov
add
mov
xchg
in
mov
std
imul
or
pop
adc
and
adc
sti
xchg
cmp
decb
stos
pop
fnsave
insl
adc
xchg
out
mov
movsl
ss
shrd
mov
xchg
jecxz
cs
inc
add
sbb
add
cmp
lcall
ljmp
ja
dec
add
lcall
jne
js
repnz
out
cmpl
mov
ljmp
lock
imul
enter
das
cld
mov
lea
jl
repnz
or
add
sbb
jnp
add
adc
negb
hlt
jne
mov
pop
notl
and
repnz
scas
sbb
repz
enter
inc
sbb
adc
call
xor
cmp
xor
int3
mov
push
or
into
xchg
add
sahf
icebp
call
add
insl
jp
xor
mov
mov
add
lods
in
out
sahf
xchg
cmp
dec
decb
push
add
add
mov
sbb
nop
jp
loop
add
pop
sub
clc
mov
nop
and
or
test
jo
cwtl
ret
imull
orl
cmpsl
jns
or
std
ljmp
roll
add
cmpl
stc
mov
std
add
decb
cmp
sub
adc
dec
sahf
sahf
push
mov
fistps
mov
push
add
xchg
or
jns
mov
jo
movb
cmpsb
inc
mov
add
das
and
add
ficoms
dec
add
mov
ss
sub
popa
and
mov
cmpsl
sbb
lcall
jmp
lret
inc
decb
incb
inc
inc
add
aaa
jl
int
pop
and
add
xlat
cli
inc
jmp
xchg
cmp
mov
dec
jnp
cli
inc
cs
scas
mov
sbb
jne
addr16
leave
scas
cs
mov
lea
pop
int
nop
jns
sti
dec
add
xor
out
fimull
xor
add
inc
pop
sbb
sub
stos
xchg
cmovo
aas
xchg
xor
pop
scas
cld
insb
shlb
lret
pop
cmc
adc
cmpsl
imul
scas
jns
mov
mov
lahf
dec
cwtl
dec
push
xor
jo
test
add
pop
loope
mov
xor
mov
cmp
jbe
mov
sub
sub
xor
movsb
les
dec
jo
shl
mov
mov
mov
or
aas
xlat
or
loopne
iret
mov
sub
outsl
xor
test
fwait
and
shll
outsl
clc
xor
xchg
jbe
jmp
cmc
xchg
inc
in
adc
mov
imul
data16
arpl
mov
into
scas
aaa
dec
push
pop
lds
movsb
push
add
in
data16
aad
lfs
mov
in
jge
cld
fxch
jl
sbb
out
and
mov
lret
adc
ja
mov
cmp
push
mov
xchg
xchg
or
mov
mov
xchg
rorl
mov
sub
lahf
mov
fs
sbb
scas
sub
scas
mov
xchg
push
inc
lods
ret
cmp
pop
push
dec
xor
movsl
inc
add
ret
mov
cld
push
mov
enter
inc
sub
add
in
xor
mov
dec
fimuls
push
rcrb
ja
push
pop
sub
incb
add
in
dec
mov
push
mov
ja
bound
jns
rclb
jl
jecxz
insl
xchg
popa
pop
push
es
fbstp
cmp
cmpsl
xlat
dec
add
mov
sub
divb
clc
lcall
outsl
add
daa
pushf
sbb
rcrl
jns
xchg
les
mov
out
mov
xchg
out
inc
inc
push
nop
jae
sbb
stc
scas
xor
lods
jp
repnz
int3
adc
pop
sbb
data16
decb
orb
rclb
dec
jl
addr16
addr16
mov
pop
xchg
and
in
mov
adc
sarl
inc
sarb
mov
sbb
sarl
mov
xor
cmp
cld
leave
inc
xor
cli
jl
jl
xchg
adc
incb
decb
cmp
shrb
fbld
and
rclb
popf
inc
sbb
inc
add
lret
push
cs
mov
daa
jmp
lea
lea
inc
inc
dec
and
sbb
dec
decb
bound
and
lods
test
xchg
and
xor
dec
add
sub
decb
mov
add
dec
add
push
fmuls
es
aad
mov
imul
adc
out
scas
push
movsb
xchg
sti
pop
sbb
mov
fsubrs
jecxz
lahf
add
jno
pusha
imul
cmp
ret
out
int3
sahf
sbb
movsb
jecxz
and
dec
push
clc
mov
pop
dec
pop
cli
aam
lahf
out
scas
out
lods
test
mov
mov
jnp
mov
test
mov
add
fs
test
cmpsl
adc
add
fwait
repz
dec
jo
loop
jge
shrl
test
inc
add
adc
sahf
dec
daa
mov
imul
jg
inc
mov
dec
jns
aaa
inc
or
daa
mov
cmp
add
or
cmpsl
in
rcll
test
aad
testl
mov
and
sbb
push
fidivl
mov
add
test
sbbb
jg
int3
mov
aas
sub
add
ljmp
aaa
aam
dec
lret
dec
imul
nop
pop
mov
lods
lods
push
std
and
mov
pushf
fidivl
jne
cmc
cli
cwtl
xor
inc
add
sbb
les
pushf
fldl
add
xor
and
lcall
incb
xor
add
cs
xchg
jg
out
scas
and
jle
sahf
jb
fcomps
mov
incb
gs
cmc
loop
jns
nop
insl
jecxz
push
cmp
dec
addr16
icebp
sbb
mov
icebp
ffree
or
add
cmp
mov
mov
aam
decb
mov
jae
fwait
imul
push
and
insb
insb
add
in
aam
mov
cmp
dec
add
pop
mov
jl
cmp
in
and
repz
fwait
push
incb
or
pusha
scas
movsl
jg
mov
cmpsl
pop
cs
cwtl
gs
mov
in
outsb
add
or
fistps
xchg
sbb
mov
dec
add
xor
shll
repz
das
fcompl
push
loopne
or
stc
lods
inc
add
cmp
add
mov
in
rcrb
xchg
std
pop
and
mov
out
in
lods
ljmp
mov
es
ffree
xor
xchg
jns
pop
sti
push
sbb
std
lods
sbb
cwtl
fs
cmp
lret
icebp
cmp
incb
push
outsb
add
adc
jbe
out
ret
jno
push
add
test
int
decb
test
xor
loopne
faddp
lret
out
pop
sbb
icebp
cmp
ljmp
mov
stos
sarl
aad
add
sahf
imul
sub
jbe
dec
add
mov
lods
dec
decb
daa
xor
aam
cmp
rorb
push
add
push
sti
aas
push
movsb
inc
push
cwtl
out
aad
add
and
incb
lods
adc
jmp
outsl
xor
out
in
mov
incb
jae
add
xor
add
movsl
pop
adc
cmp
cmpsl
cmp
add
jg
in
sub
add
lret
dec
push
pop
aam
xchg
jae
push
adc
int
push
or
xchg
jnp
inc
pop
adc
add
js
lock
and
jg
outsb
and
cmpsb
push
aam
fidivrl
test
data16
jmp
ss
sub
sub
decb
popf
mov
add
decl
push
jl
adcb
jmp
fldt
dec
add
incb
pop
or
ret
mov
sar
add
mov
add
mov
jnp
mov
add
lock
xor
push
jg
push
imul
xor
sbb
inc
decb
add
push
adc
xchg
mov
add
daa
test
insb
add
mov
add
push
add
xor
insb
inc
xchg
aam
mov
jb
mov
fcomi
out
sar
movb
mov
fdivrs
add
jl
int3
xor
rolb
mov
or
xchg
adc
cmpsl
arpl
ret
xor
or
decb
and
pop
xchg
cmp
decl
cmp
add
inc
sbb
int3
stos
inc
stc
mov
cwtl
xchg
or
decb
shll
and
xchg
mov
jl
lret
es
sbb
cwtl
inc
cwtl
dec
add
cmp
sbb
ret
arpl
decb
sti
dec
mov
js
push
aaa
dec
lock
in
test
sub
pop
popa
repz
outsl
inc
xchg
push
ss
and
test
pop
ds
add
add
sub
aad
jb
jne
jb
mov
mov
mov
loopne
jae
add
add
mov
test
frstor
mov
xorl
cmpsl
xor
add
nop
jg
daa
movsb
xchg
inc
int3
jno
mov
rclb
ja
add
add
push
pop
mov
incb
incb
in
addb
out
cltd
test
and
incb
jne
xor
sarl
or
ret
popa
dec
mov
adc
adc
jge
out
js
mull
fmull
push
jle
xchg
stc
jbe
fstpt
mov
and
das
jp
in
lock
xchg
jmp
pop
mov
cmpsl
fisubl
xorl
add
and
pop
das
ljmp
add
fucom
fidivs
fidivl
movsb
adc
aaa
mov
arpl
cmp
mov
sbb
mov
cmp
out
sub
pop
sub
pop
sbb
mov
insl
and
pop
aam
mov
pop
mov
sahf
inc
mov
je
mov
out
sub
decb
push
add
fwait
xchg
add
dec
iret
fisubs
mov
call
mov
pop
lea
fsts
loopne
push
cli
std
push
adc
enter
mov
call
add
movsl
adc
mov
pop
lahf
push
les
decb
or
mov
dec
lret
jno
mov
pop
jle
bound
std
sbb
mov
adc
scas
incb
mov
add
shl
sub
adc
stos
loop
add
cmp
ja
daa
jge
repz
fisubl
add
leave
xlat
mov
add
lret
pop
gs
enter
arpl
cwtl
cmpsb
sub
xchg
insb
imul
xchg
test
sti
pop
adc
scas
push
mov
xor
rcrb
repnz
xlat
loop
add
pusha
add
cmp
adc
cld
mov
lea
out
mov
xor
inc
frstor
inc
add
andl
adc
loope
imul
movsb
sub
push
fninit
mov
das
jo
decb
test
pusha
mov
mov
pop
clc
aaa
ffree
xchg
std
add
pusha
mov
mov
pop
mov
hlt
sbb
fistpll
sub
decb
decb
notl
sti
xchg
push
jnp
or
adc
push
and
daa
jb
lds
sbb
xor
loope
lods
pop
bnd
ja
aad
jg
and
negl
mov
sahf
sarb
add
push
insb
adc
add
cltd
cmp
sbb
in
in
mov
loopne
fwait
xchg
dec
add
inc
add
pop
sub
sbb
negb
js
scas
sub
outsl
rolb
scas
push
movsl
adc
add
sbb
xchg
lds
xchg
lea
decb
roll
sbb
decb
test
lahf
fucom
stc
out
pop
jecxz
and
daa
dec
or
adc
fadd
mov
mov
mov
mov
sti
ja
add
dec
inc
daa
mov
dec
xor
add
pop
pop
fs
jge
aas
jnp
cmp
push
pop
or
add
std
jg
pop
inc
jl
or
nop
scas
iret
data16
mov
dec
cmpb
jnp
pop
jb
dec
add
xor
xor
push
fidivrl
cli
test
inc
cltd
add
xchg
and
inc
mov
mov
xchg
mov
fwait
push
add
imul
dec
jo
stos
push
stc
mov
add
mov
push
repnz
jl
mov
xchg
aas
sub
decb
add
lods
stos
repz
inc
add
iret
mov
push
cmp
popf
inc
aad
mov
jae
outsl
xchg
ja
scas
pop
out
push
adc
mov
out
inc
lahf
mov
sub
xor
xor
add
rorb
push
cmpsb
xlat
jno
adc
incl
decb
mov
push
and
mov
repnz
mov
add
adc
jbe
sub
or
and
fs
clc
lea
mov
inc
pop
adc
fs
xchg
decb
push
push
jecxz
inc
xor
jnp
or
decb
sbb
xor
pushf
inc
add
push
pushf
or
dec
add
mov
mov
fisttps
xchg
je
add
sbb
int
incb
test
cmpl
pop
lock
add
out
inc
outsl
and
fnstcw
out
xchg
aaa
test
push
xor
sbb
add
xor
dec
cmp
nop
sarb
ss
add
lcall
aas
jp
sbb
fdivl
jmp
add
push
lods
lcall
ror
pop
leave
sti
push
pop
mov
and
and
incb
cmp
xchg
shrl
stos
add
mov
jmp
fadd
rclb
nop
pushf
rcll
outsl
enter
cli
jmp
xor
fmul
cmpsl
add
xor
js
or
jbe
add
enter
adc
insl
rolb
mov
xchg
mov
decb
push
pop
nop
pop
push
sti
lds
out
sub
and
pop
sarb
cmp
sbb
incb
jne
insl
jecxz
xchg
dec
add
dec
mov
and
pop
das
inc
add
cmp
fiaddl
add
add
mov
add
xchg
push
sbb
sub
sub
mov
test
cmp
mov
jmp
xchg
fistpll
sub
mov
incb
and
adc
jl
sti
cmp
les
mov
jb
mov
inc
scas
pop
scas
xlat
push
cmp
in
add
and
daa
xor
int3
lods
cmpsl
inc
nop
js
add
fildl
add
aad
jmp
leave
jb
jnp
idivl
ret
xchg
outsl
pop
in
xchg
mov
ficoms
jp
cmp
or
arpl
push
pop
mov
pop
pop
ja
add
mov
push
inc
lahf
inc
xchg
sbb
cmc
rcl
sbb
add
iret
mov
ret
add
mov
ret
sub
insl
mov
es
outsb
add
dec
arpl
push
cmpl
incb
add
mov
sbb
mov
testl
rorl
stc
dec
decb
add
add
adc
pop
xor
shrl
subl
xchg
sti
inc
add
sub
and
daa
test
push
adc
out
pop
nop
mov
jmp
mov
pop
and
das
xorb
scas
shrl
dec
sbb
test
add
stc
add
jg
xorl
scas
mov
push
pop
repnz
ds
das
test
les
mov
cmp
xlat
lds
push
fucomi
jno
sbb
add
push
ljmp
pop
cli
gs
jns
lea
lret
mov
mov
lahf
xor
int
lock
jbe
repnz
xchg
mov
rolb
and
lock
out
push
icebp
push
sbb
sub
loope
sub
incb
inc
idivl
pop
mov
mov
popa
push
jnp
mov
mov
and
lods
add
scas
mov
sbb
add
int
sahf
cmp
jmp
inc
mull
fsub
dec
inc
add
insb
sbb
outsb
loope
enter
outsl
sub
decb
cmp
cmp
cmc
data16
pop
xchg
out
imul
dec
fwait
adcb
xor
loop
xchg
test
or
fnsave
sub
decb
adc
xor
lret
lret
jle
add
cs
es
pop
and
xchg
push
cwtl
sbb
mov
mov
xchg
mov
mov
add
lahf
dec
aam
push
mov
jne
es
decb
dec
pushf
ret
sar
jns
fsubs
push
in
sub
incb
in
stc
notb
mov
pop
jl
push
adc
dec
fwait
sbb
addb
ljmp
dec
sti
hlt
mov
scas
orb
push
daa
xor
shll
pop
fwait
and
fldcw
idivl
and
mov
insl
xchg
or
loope
enter
sbb
dec
movsl
loopne
mov
pop
rcll
das
sbb
shrb
fidivrs
pavgw
out
filds
pop
lock
out
into
ja
mov
js
push
cmp
push
inc
pop
push
dec
add
dec
fs
cmp
lret
add
scas
jmp
lcall
mov
lret
pop
lock
divb
mov
mov
lcall
sbb
sbb
test
inc
sub
dec
in
mov
add
pop
ja
pusha
fs
adc
cs
jg
mov
mov
or
cmp
add
mov
imul
sub
add
psubsb
add
decb
add
pop
dec
rclb
pop
pop
push
mov
inc
add
mov
es
incb
add
fs
add
push
test
push
pop
pop
add
test
es
sbb
rcrl
add
decb
xor
push
insb
add
push
clc
pmulhuw
add
xchg
push
push
jne
mov
insl
in
mov
sahf
or
incb
mov
or
mov
inc
in
mov
and
jne
and
incl
mov
pusha
add
adc
ja
repz
or
push
out
sbb
stos
pushf
sbb
push
sub
aaa
call
pop
push
xor
xor
cmpsb
jbe
cmpsb
and
mov
push
outsb
sub
or
adc
test
popf
cmpl
pop
jns
sti
jge
fimull
mov
loopne
mov
or
decb
insb
and
sbb
imul
add
cld
or
incb
add
in
enter
jnp
ret
dec
add
adc
adc
lds
inc
sarl
or
add
pop
call
or
jbe
adc
mov
mov
fistpll
push
add
aam
cmp
pop
ret
xor
push
sbb
adc
pop
pusha
incb
pop
inc
decb
sub
popa
rorb
xor
mov
mov
jo
mov
inc
jns
mov
sbbb
add
and
sti
fcmovu
xor
insl
cmpb
int
ljmp
clc
pop
jp
mov
xchg
jne
subb
fwait
push
scas
mov
loope
and
incb
pop
pop
es
pop
divb
rcrb
inc
jg
and
rcl
sub
jns
mov
jp
mov
jp
xor
decb
mov
pusha
gs
add
out
enter
inc
add
subb
sub
and
cli
mov
mov
lcall
dec
add
mov
push
decb
add
fistl
jbe
mov
xchg
mov
mov
enter
inc
mov
ja
pushf
push
push
pop
pusha
arpl
mov
jmp
mov
jne
es
mov
xchg
test
push
pop
fs
inc
or
test
add
ds
addr16
push
inc
sbb
fs
xchg
cmp
mov
dec
icebp
fstpl
xlat
mov
mov
add
cmp
dec
inc
cmpl
lea
jnp
lahf
sub
in
xlat
lahf
les
push
sbb
test
mov
or
adc
and
add
sub
jle
mov
add
gs
out
and
mov
pushf
jp
add
dec
cmp
adc
pop
sub
decb
stos
das
rcrl
adc
insb
add
out
rcrb
fsub
mov
and
and
sub
negl
xlat
pop
loope
pop
mov
jo
nop
es
test
in
sub
aas
xor
mov
or
mov
jb
and
rcrb
shll
imul
fwait
pop
lea
rcrb
inc
dec
subps
adc
mov
add
scas
sarl
push
mov
adc
xor
test
push
xchg
ja
int3
inc
in
mov
xchg
nop
inc
add
in
mov
dec
add
mov
out
xchg
xchg
lds
imul
xchg
pop
mov
xchg
insl
add
mov
pop
repz
jbe
add
xor
inc
jno
icebp
mulb
add
cli
cli
mov
fs
inc
add
repnz
push
push
jnp
loop
aam
mov
add
sti
imul
sbb
sub
add
mov
xchg
fimuls
jecxz
nop
jge
inc
adc
jle
mov
inc
cs
pop
in
icebp
dec
add
aas
sub
enter
fcmovnu
mov
mov
mov
test
sbb
sub
sahf
frstor
sub
add
mov
loop
sarl
out
push
jo,pt
shlb
inc
sahf
push
push
in
arpl
sarl
mov
xor
cmp
mov
insb
add
dec
add
pusha
add
lods
lea
xor
lods
push
das
jg
add
or
cmpsl
int3
rolb
fmuls
add
testl
add
xor
in
jno
inc
incb
add
push
and
cmp
sti
lods
idivb
mov
add
add
ljmp
cs
xor
dec
inc
xchg
or
cs
mov
dec
ret
sahf
dec
dec
add
cwtl
outsl
mov
xor
add
ret
jp
xor
imul
jmp
cmp
pop
test
xlat
in
adc
into
scas
xchg
pop
cs
add
mov
divl
xlat
test
add
adc
sub
push
push
adc
data16
cld
jne
adc
rorl
dec
ds
in
xchg
mov
js
add
jge,pt
xchg
pop
in
push
add
lods
xchg
mov
dec
and
in
dec
pop
rcr
dec
ss
movsb
dec
cmp
cmp
out
or
and
add
mov
inc
or
jne
sub
dec
push
faddl
jl
repnz
add
enter
mov
dec
add
pop
fxch
cmp
add
out
lret
fisubrl
in
or
incb
add
xchg
leave
sbb
incb
call
rcr
mov
push
loop
fisubl
ja
sti
dec
adc
sub
out
cmp
ja
sbb
sbb
scas
icebp
dec
add
cmp
je
pushl
cmp
incb
ja
xor
imull
loope
mov
pop
aad
sub
pop
adc
in
add
sbb
sti
lahf
pop
pop
add
lcall
cmp
pop
jmp
push
xchg
jno
add
push
insl
lret
lods
jo
mov
xchg
vmread
icebp
cmp
in
add
jb
mov
xchg
fmull
hlt
adc
mov
push
hlt
shlb
icebp
stos
int3
or
pop
aaa
pop
cltd
adc
xchg
sub
inc
xor
add
xchg
in
scas
leave
push
int3
adc
icebp
lret
cltd
add
lock
pop
pushf
cs
rcl
xchg
xchg
mov
add
ret
and
adc
push
jge
dec
add
leave
push
jb
test
js
mov
mov
cs
or
cli
lods
xor
ja
sub
add
popa
imul
mov
dec
mov
jle
addr16
ss
cwtl
xchg
or
stc
nop
outsb
add
loop
repz
sub
incb
inc
add
xchg
jle
scas
cmp
fcoms
xlat
ss
loop
cmp
ds
movsb
addb
sbb
data16
int3
mov
add
testb
jnp
push
xchg
inc
add
movsl
in
and
cmp
loope
stos
notb
cmp
out
sub
xor
and
xor
inc
xor
pop
or
and
push
mov
sbb
imul
cltd
lea
xor
icebp
and
pop
pop
clc
daa
push
jo
mov
cmp
mov
lock
add
sbb
ror
mov
mov
sti
je
mov
lock
mov
mov
incb
mov
dec
jecxz
add
notb
js
fmul
lods
push
ja
data16
mov
dec
hlt
lock
pushf
push
cmp
pop
sbb
or
decb
add
scas
pop
fistpl
add
jbe
lret
mov
add
ds
cmp
jg
aad
popa
inc
in
cmp
and
incb
test
mov
cli
loop
sti
xchg
mov
or
incb
push
fwait
orl
test
shlb
adc
cmp
clc
pop
xchg
sbbb
add
dec
adc
sbb
adc
incb
incb
xchg
iret
and
push
xlat
std
stos
call
movl
add
add
decb
push
incb
mov
sbbl
jb
call
mov
ljmp
es
jmp
data16
pop
add
decb
push
fimull
int3
loope
ret
and
dec
mov
jne
cld
test
popa
outsb
push
mov
loop
in
sbb
es
shrl
xor
push
xor
jae
daa
and
decb
sub
roll
add
sub
xchg
push
mov
jle
cltd
lret
sarb
inc
mov
xor
push
stos
fldenv
outsl
and
dec
cmc
push
jecxz
mov
pop
xorb
add
adc
pop
lea
out
ret
lds
add
orb
jle
stc
xor
xchg
sub
test
je
or
stos
rorl
lcall
jg
sub
push
in
mov
and
adc
loopne
add
add
jle
mov
bound
decb
xchg
das
mov
insl
mov
out
enter
xchg
lds
mov
mov
mov
std
aad
xor
decb
repz
ret
imul
mov
push
cs
call
or
aaa
inc
add
in
lcall
add
dec
add
int
add
push
cmp
inc
add
pop
aaa
pusha
add
in
int
sub
xlat
jne
adc
cmc
adc
jno
aad
mov
popf
and
mov
movsb
adc
in
mov
adc
icebp
std
xchg
xor
add
xor
out
add
incb
add
js
pop
ret
imul
push
cmp
or
imul
decb
decb
arpl
stos
shlb
add
insb
add
inc
incb
push
scas
aad
inc
xchg
jnp
mov
hlt
cmp
dec
add
cmp
dec
in
mov
in
loop
jge
aad
out
fisubrs
jo
outsl
pushf
mov
adc
jne
out
loopne
mov
mov
loopne
push
int3
adc
std
aaa
mov
mov
stc
mov
incb
inc
add
loopne
mov
adc
hlt
sbb
mov
xchg
iret
leave
pop
call
mov
push
pop
sbb
jae
test
adc
decb
push
xor
jo
sbb
flds
imul
fwait
mov
jecxz
mov
mov
outsb
add
mov
or
adc
xor
adc
dec
dec
mov
js
mov
enter
out
std
xchg
mov
pop
jo
push
pop
lret
stos
fimull
inc
test
add
mov
sub
incb
push
push
push
xchg
ja
mov
movl
add
jbe
les
adc
add
xlat
fldcw
das
pop
xchg
cs
jmp
add
pop
hlt
testl
jle
test
add
incb
leave
addr16
add
add
cmpl
in
scas
xor
ja
test
mov
insl
dec
jbe
ret
mov
push
jb
cmp
cmp
cmpsb
push
xchg
cmp
dec
and
insb
add
movsl
adc
push
mov
decb
xor
test
stos
pop
dec
add
jne
cs
dec
add
lea
push
sti
mov
mov
add
outsb
and
cmpsb
test
std
sbb
xchg
int3
test
mov
dec
call
sub
pop
or
add
pop
mov
sarl
add
jbe
or
decb
fbstp
dec
jb
xchg
adc
pop
gs
addr16
push
or
loopne
xor
jg
jb
mov
mov
mov
or
mov
mov
pop
lock
xchg
int3
jle
cmpsb
jp
push
push
aas
lcall
cmp
bound
decb
jmp
bound
incb
int
sarl
add
jecxz
add
fwait
jo
icebp
pop
mov
xorl
es
lahf
adc
incb
add
outsb
add
jge
sbb
mov
or
add
cmpsb
push
inc
into
push
dec
cwtl
mov
xchg
mov
aas
push
dec
sti
in
cmp
scas
cld
inc
cmp
test
aam
xor
pushf
mov
repz
lods
dec
or
add
lock
mov
add
push
add
testl
push
stos
xor
cmp
cmp
push
flds
inc
jnp
cmp
fldenv
in
mov
push
daa
xor
mov
imul
mov
xchg
sbb
and
decb
push
dec
sti
outsl
mov
aas
mov
or
imul
pop
mov
ljmp
xor
into
arpl
lds
xor
movsl
or
mov
xor
inc
dec
mov
pusha
adc
mov
jp
stos
les
loope
out
sub
pop
sahf
adc
movsl
insb
push
imul
mov
popf
mov
pop
lret
mov
data16
xor
add
cmp
pop
ss
jp
mov
inc
negb
add
push
gs
jb
pop
aam
mov
decb
add
out
and
mov
sbb
add
pop
clc
nop
dec
add
inc
data16
jl
jl
je
pop
and
add
add
decb
cmp
xchg
decb
sti
aad
popl
inc
aam
lods
mov
aaa
in
shll
push
pop
push
ljmp
sti
mov
and
fsubl
mov
jl
mov
xor
and
cli
loope
mov
add
loope
mov
in
cmpsl
push
push
sbbl
mov
or
add
cmp
lods
pop
jp
imul
cwtl
dec
cld
aaa
pop
iret
popf
lea
and
decb
add
sub
or
push
aad
andl
lahf
mov
scas
inc
jge
mov
xor
ja
jnp
sub
pop
loopne
into
adc
in
sbb
out
lret
sub
xor
out
jmp
sbb
jp
stos
fimull
dec
lret
js
insl
mov
add
pop
sub
stos
jns
lds
daa
addb
mov
scas
xchg
js
push
or
incb
mov
imul
aam
ss
pop
adc
add
mov
lods
fstpt
ret
inc
add
or
inc
fisttpll
push
outsb
add
outsl
adc
imul
das
adc
imul
push
jne
out
sbb
sub
incb
jnp
adc
mov
sbbl
xor
repz
sbb
jae
daa
lret
push
sbb
out
cwtl
mov
jecxz
cmpl
pop
in
mov
mov
pop
jb
mov
movsl
xor
das
cmp
pop
gs
xchg
aam
loope
loope
lea
lahf
fldenv
add
outsb
add
jo
incb
insb
lods
fildl
add
repz
inc
add
dec
push
jle
add
xchg
or
out
aad
or
adc
pop
inc
aad
adcl
and
add
cmpsb
inc
hlt
cmc
fmul
ret
sub
scas
into
and
xorb
orb
or
scas
push
pop
jae
mov
movsl
stos
inc
in
add
out
cmp
insl
xchg
cmp
ficoml
jae
or
lret
arpl
xlat
cli
lret
adc
lds
dec
add
xchg
lret
pop
dec
decb
add
daa
sub
or
dec
sahf
mov
aam
lds
push
dec
lret
faddp
test
enter
xchg
adc
jnp
xchg
jns
outsb
add
xor
jmp
mov
mov
push
jnp
add
cmc
xor
icebp
jo
add
adc
adc
cmp
decb
sbb
mov
cmp
jno
xlat
mov
insb
add
mov
dec
dec
xor
lahf
mov
lcall
add
sub
decb
jmp
jbe
mov
or
sub
inc
decb
dec
daa
rorb
xor
scas
scas
add
jl
fcoml
into
aas
xchg
adc
push
lds
push
in
addb
lds
and
pushf
hlt
enter
jp
sbb
mov
inc
mov
je
cmc
ss
hlt
sub
idivl
enter
out
in
cli
idivl
add
mov
add
fwait
ret
notl
call
sub
aaa
dec
js
and
adc
fldcw
push
cmp
push
add
test
xor
lock
jecxz
jns
mov
and
adc
pusha
decb
decb
arpl
in
xchg
mov
imul
incb
mov
mov
pushf
dec
sbb
dec
cmp
aas
and
loope
mov
int3
lea
push
sub
test
cmp
sub
mov
cmp
pop
pop
dec
add
popa
pop
movsl
add
add
lcall
dec
dec
mov
mov
mov
inc
sbb
mov
xor
and
inc
shll
out
pop
jle
xor
cmp
mov
push
mov
mov
incb
sub
shlb
and
in
sub
decb
jnp
adc
push
fldcw
add
repz
add
idiv
jnp
mov
out
punpcklbw
and
aaa
aam
out
pushf
repz
mov
pop
add
outsl
jl
mov
ds
add
sahf
and
insb
add
push
add
sbb
jmp
add
arpl
fstps
and
adc
push
xor
lret
jecxz
mov
arpl
test
sti
fstp
aad
hlt
or
mov
add
xor
pop
int3
out
dec
add
sbb
stc
jnp
subl
stc
add
push
das
push
das
ljmp
fisubrs
and
pop
adc
push
mov
add
push
out
pop
rcl
insl
add
lods
sahf
lcall
mov
adc
repnz
sub
mov
add
les
push
push
xchg
mov
sub
sbb
int
push
je
pop
mov
xchg
js
xor
test
xor
add
add
and
stc
push
incb
fiadds
inc
pop
dec
pop
cmp
xchg
clc
aaa
push
cmc
and
incb
adc
nop
js
int
mov
push
and
dec
mov
sarl
push
add
fdivl
mov
adc
xchg
pop
arpl
push
mov
cwtl
rep
fucomip
fs
sub
incb
pop
push
decb
mov
sbb
dec
sahf
ror
cs
jge
ret
sahf
push
lcall
ficoml
and
mov
out
stos
push
incl
aas
mov
bnd
addr16
imul
lahf
adc
or
out
adc
jnp
and
mov
add
or
ficomps
lret
outsl
xor
shrb
inc
scas
mov
lods
mov
add
fildll
test
push
xor
adc
add
add
aam
or
inc
movsb
mov
in
mov
ss
xchg
or
cmp
arpl
test
push
js
cmp
cmc
mov
popa
addr16
aad
repnz
mov
fs
fistl
push
adc
sbb
sbb
loop
xlat
mov
repz
push
aas
loopne
xor
addr16
or
out
sahf
dec
dec
or
add
and
push
dec
shll
or
push
xor
in
xchg
mov
std
jns
movsl
lret
imul
enter
test
add
xor
imul
mov
inc
in
adcb
iret
into
jge
push
test
xchg
cmp
fs
dec
pop
shlb
fdivl
insb
add
andl
fldt
imul
es
inc
jno
jno
dec
add
push
jl
bound
stos
sarl
push
ds
test
movsb
outsb
add
shll
inc
add
lds
pushf
cld
inc
add
push
incb
xchg
xlat
inc
pop
push
sbb
sarb
lock
stos
xchg
mov
arpl
stos
mov
add
and
add
scas
mov
sub
and
lcall
jmp
or
jle
pop
fldt
imul
in
push
mov
cli
mov
mov
jecxz
jl
int
out
dec
add
mov
xchg
xor
xchg
loope
pop
xchg
adc
dec
add
jns
xor
fs
push
subb
push
sbb
adc
loopne
add
ficompl
jb
xlat
aas
sub
incb
clc
add
stos
mov
or
decb
faddl
popf
idiv
push
push
sub
sti
jnp
data16
sbb
jne
cmpsb
inc
add
add
imul
lcall
cmpsb
mov
into
cmp
xlat
mov
js
jae
xor
xchg
js
es
in
daa
sahf
ja
add
jg
repnz
jnp
in
add
push
push
fs
pop
inc
add
out
push
cs
jns
movsl
mov
or
push
mov
or
incb
push
add
pop
cmpsl
lock
pop
mov
jg
dec
dec
sub
inc
add
push
lock
mov
dec
push
ja
cli
or
jno
dec
add
push
and
pop
stos
out
jl
icebp
mov
adc
inc
push
xchg
fdivl
add
incb
mov
mov
icebp
xor
popf
in
pop
daa
jbe
mov
fsubr
mov
pop
sbb
clc
stos
mov
add
scas
dec
sti
test
psubq
fbstp
inc
pop
fnstcw
xor
hlt
ret
pop
subb
and
mov
dec
pop
gs
push
sub
xchg
sti
push
add
sbb
inc
fbstp
scas
lret
mov
in
fnstsw
std
jns
mov
incb
cld
or
jo
shrb
xchg
mov
mov
mov
push
fs
lods
xor
dec
jno
inc
add
sbb
mov
sub
mov
negb
mov
es
fmulp
out
adc
call
add
dec
add
sarl
adc
mov
cmp
push
incb
mov
test
bound
incb
cli
enter
pop
sti
xchg
ret
or
test
jns
stos
push
popf
addr16
movb
pop
stc
cmp
or
lds
in
dec
flds
mov
cmp
inc
sbb
decb
or
test
test
cwtl
mov
cmpsb
jne
or
inc
jbe
fstps
test
or
lods
xlat
mov
add
incb
cmp
sub
lock
pop
sbb
mov
dec
pop
unpcklps
mov
sbb
out
lds
jnp
adc
das
nop
sub
sbb
and
incb
scas
mov
out
sbb
pop
dec
inc
jnp
add
shl
addl
ret
cs
repz
xchg
ret
pushf
xor
cs
dec
xor
xchg
mov
mov
inc
decb
jle
icebp
xorb
popf
push
jmp
das
lock
add
mov
add
mov
pop
push
sub
mov
xchg
add
or
aad
pop
lds
in
imul
leave
and
adc
sti
push
adc
or
insb
add
loopne
add
lods
std
add
push
xor
out
xor
mov
add
mov
cmp
jl
cld
pop
jnp
sbb
and
xchg
push
cmp
aam
ds
sub
movsb
add
decb
jbe
mov
adc
push
adc
in
mov
fbstp
jo
xchg
sub
incb
add
lahf
dec
mov
lcall
cs
fsubrl
jg
mov
mov
jl
add
iret
mov
in
dec
mov
imul
iret
cmp
fs
incb
sub
popa
mov
shl
adc
icebp
in
pop
in
in
stos
repnz
mov
sahf
jb
xchg
hlt
rorb
sub
cs
and
inc
fisubrl
add
or
clc
adc
ficompl
adc
ret
sahf
push
cld
movsl
push
sbb
xchg
repnz
scas
es
inc
xchg
sbb
pop
xor
sub
or
add
scas
stos
shll
ljmp
js
dec
add
in
clc
iret
test
fs
cs
outsl
jecxz
enter
popf
testb
mov
arpl
fmul
out
popa
popa
clc
push
divl
mov
pop
xchg
add
xor
movups
cld
pop
add
mov
cmpb
rcll
sub
decb
xor
ret
andb
cmp
mov
dec
mov
test
test
mov
fidivl
aaa
cmp
std
shlb
sub
and
mov
adc
inc
into
mov
mov
inc
add
enter
movsl
cli
sahf
data16
incb
repnz
and
pusha
add
xchg
push
mov
daa
pop
pusha
mov
mov
fidivl
xchg
fwait
mov
enter
add
sub
in
insb
add
fs
repnz
add
incb
add
xchg
into
or
cmc
fwait
push
jecxz
mov
jno
out
aam
je
cmp
dec
jp
cmp
mov
pop
popa
pop
fsubrl
mov
aad
mov
decb
push
int
lea
stc
cli
call
jns
xchg
fs
cli
or
add
stos
movsb
jae
jg
pop
je
imul
ror
icebp
in
cmp
loope
add
stc
or
addr16
test
xor
ss
mov
sbb
loope
repz
pop
xor
dec
xchg
and
mov
and
lret
enter
sti
inc
jge
popa
loop
test
popa
push
or
ja
cmp
add
clc
xor
shrb
pushf
call
stos
sti
inc
add
mov
mov
sub
fs
aad
xchg
test
int3
sub
std
add
scas
data16
je
jbe
lcall
sti
mov
incb
add
ja
stc
int
fadd
lret
mov
in
sub
lods
cli
xlat
loopne
lock
lock
inc
mov
add
and
incb
pusha
cmp
add
fnsetpm(287
stos
push
sub
inc
push
lods
and
in
sti
fadds
add
dec
js
aad
out
call
pop
out
push
repz
mov
lahf
sahf
adc
insl
adc
daa
push
inc
stos
insl
mov
aad
inc
add
mov
int3
jl
mov
sub
inc
es
ljmp
scas
dec
jmp
push
in
push
out
jns
push
cs
and
dec
add
sub
in
xlat
je
loopne
pop
jb
outsl
cld
cld
push
adc
pop
or
sbb
add
inc
inc
add
sub
sbb
add
xor
jb
jge
addr16
lret
pushf
nop
lcall
xchg
daa
xor
pop
add
xchg
adc
add
imul
incb
add
dec
decb
xchg
ficoms
inc
cmpsl
lret
cmc
mov
or
mov
rcl
pop
int3
jno
sti
xlat
jnp
lret
aaa
fstp
icebp
add
adc
sti
pop
pop
sti
out
pop
ljmp
lcall
mov
xor
incb
sti
adc
mov
in
add
xor
xor
scas
pop
rcrl
loop
aad
xchg
dec
enter
rcll
cmp
fnstenv
cwtl
xchg
mov
pop
xchg
scas
pop
adc
mov
xor
das
mov
es
mov
scas
mov
cmpxchg
mov
icebp
into
push
rclb
sbb
sub
jo
pop
test
push
add
adc
inc
repnz
clc
cmpb
push
and
in
ficoms
cwtl
add
push
push
mov
daa
in
add
xchg
imul
in
jl
jmp
add
loopne
aaa
roll
mov
fildll
icebp
sbb
cmp
cwtl
test
rcrl
or
mov
xchg
repnz
and
incb
stos
sub
jns
scas
mov
add
std
icebp
pop
test
fsubrs
je
xor
ret
cmc
fsubs
decb
fiadds
adc
push
data16
aad
xchg
mov
cmp
fsubs
xor
push
ret
test
xor
jnp
mov
fs
cmp
inc
add
sbb
mov
mov
push
push
and
dec
xchg
mov
inc
add
pushf
mov
push
pop
mov
cmc
out
data16
stc
fisubl
push
ficompl
fcmovbe
jne
cmp
das
rorb
sub
push
push
add
pop
pushf
inc
dec
add
arpl
jge
enter
bound
xor
add
std
ss
sub
and
add
call
arpl
fistl
adc
dec
repz
jns
add
imul
jb
loopne
lods
aas
shl
push
add
push
outsb
jnp
mov
fcmovb
sbb
pop
aaa
add
incb
incb
cli
shlb
jne
add
sbb
lcall
cmp
inc
jl
jb
sbb
sbb
jg
push
push
popf
jecxz
test
daa
cmc
in
xor
adc
jg
orb
repnz
stc
pop
sbb
sbbl
ja
sub
mov
test
gs
imul
adc
jo
sub
or
rclb
rolb
cmp
outsl
pop
adc
sub
jmp
dec
sbb
xor
fisubs
inc
dec
mov
mov
loop
jno
loop
push
outsl
and
aaa
in
sarb
inc
adc
sub
sbb
test
iret
mov
dec
out
test
jne
jbe
and
lods
and
repz
push
dec
pusha
add
fs
incb
out
add
inc
fld
repnz
iret
in
out
mov
hlt
rorb
aaa
push
jbe
add
jge
orb
das
fistl
cwtl
xchg
hlt
repnz
ljmp
incb
out
xor
ljmp
xorb
test
and
jno
jle
add
jne
psubusb
mov
mov
mov
lods
jo
mov
scas
cmp
fidivs
adc
mov
mov
aas
fcoms
jae
cmp
inc
sub
stos
sbb
pop
dec
add
inc
and
lcall
ljmp
in
xor
aaa
mov
pop
ja
jg
insb
add
lret
xor
cmc
movsl
imul
lcall
aas
mov
mov
adc
test
mov
arpl
mov
jmp
xchg
dec
push
adc
cld
rcrb
xchg
cmpsl
push
ficomps
aas
mov
sbb
push
mov
and
add
or
cmp
cmp
test
imul
xor
mov
ja
sahf
xor
fmull
adc
add
sub
test
loop
sub
divl
add
fwait
xchg
fwait
divb
push
add
pop
stc
xor
mov
inc
mov
jmp
and
das
adc
jae
pop
in
lcall
emms
pop
shll
jmp
nop
jl
int3
int
jnp
scas
push
xor
mov
add
xor
testl
ss
in
ja
adc
xchg
daa
sub
mov
aas
cltd
jns
mov
mov
mov
pusha
add
dec
add
mov
stos
es
incb
add
outsl
push
sbb
mov
pop
lahf
test
jno
cmp
push
pusha
add
add
pop
or
add
xor
dec
popf
jo
pop
stos
dec
add
mov
adc
pop
push
mov
in
data16
sbb
es
sub
lods
test
cmpsl
hlt
xor
mov
ss
sbb
xchg
cmc
test
data16
incb
cmp
ja
push
jns
add
and
int3
or
cltd
mov
fs
js
test
cmpsl
call
sub
imul
andl
lahf
adc
mov
stos
pop
lea
aam
jne
or
call
or
mov
sarb
pop
mov
mov
sbb
es
fisttpl
xchg
filds
add
adc
cmc
arpl
lahf
dec
add
add
mov
faddl
add
dec
call
add
fmul
lea
adc
jb
pop
stos
xor
in
in
filds
cmp
mov
insl
sbb
lock
cltd
mov
out
mov
dec
mov
mov
rclb
jp
shlb
outsl
enter
add
int
scas
cltd
and
movl
push
inc
ror
push
cs
aad
sub
enter
out
add
push
loop
add
std
leave
cwtl
icebp
in
push
into
test
popa
mov
sar
ljmp
jge
clc
mov
aad
inc
pop
out
roll
add
add
js
add
loop
xor
add
outsb
sub
mov
push
jb
outsl
lea
jmp
sbb
divps
push
shll
mov
decb
mov
std
nop
sbb
out
adc
test
jecxz
xchg
divl
cwtl
dec
enter
cmp
scas
sahf
or
xor
out
ret
mov
adc
inc
add
mov
js
xor
in
jge
fbld
add
es
jp
mov
sbb
jl
ret
push
cmp
push
jb
push
fnsave
cs
mov
ljmp
repnz
add
shl
mov
jmp
mov
lcall
decb
out
cmp
call
add
xchg
jp
loopne
repnz
stos
inc
add
in
mov
push
decb
xchg
popa
cmpl
mov
jne
imul
enter
xchg
or
mov
mov
subb
decb
push
xchg
pop
outsl
out
jno
popa
insl
xchg
lret
sbb
insl
in
mov
fidivs
sub
out
sub
out
into
dec
and
aam
xchg
cli
add
mov
mov
add
mov
mov
hlt
pop
pop
cmp
jl
add
dec
cmp
mov
arpl
mov
out
imul
scas
xor
out
movsb
insb
cmp
xchg
call
push
out
pop
pop
or
jno
loop
repnz
stos
shrb
loope
fs
jg
sarb
dec
repz
aam
mov
fisttps
jp
popa
ret
incb
dec
add
or
decb
cmp
ds
mov
xchg
or
cmpsl
inc
pushf
mov
cmp
add
ds
sbb
out
adcb
das
mov
mov
aas
cmp
outsl
adc
add
aaa
mov
and
fistpl
sbb
sbb
adc
outsb
mov
test
pop
xchg
enter
sbb
aad
icebp
addr16
inc
add
add
cwtl
mov
mov
js
incb
xchg
cmp
scas
push
ja
jle
xor
data16
mov
add
negl
enter
aas
or
inc
pop
stc
cmpsl
mov
jmp
call
sub
sub
ja
inc
stos
xchg
in
arpl
in
inc
jge
adc
push
cli
cltd
ret
push
cld
cmc
orb
repnz
aaa
sub
clc
jmp
add
clc
adc
xchg
stos
mov
or
sub
out
mov
insl
sbb
leave
sub
pop
test
test
outsb
mov
dec
add
jo
addb
aam
pusha
cs
in
push
clc
sahf
les
loope
and
decb
mov
js
fidivrs
cmc
ret
xchg
movsl
std
loop
add
sti
mov
xchg
lahf
jg
mov
imul
push
in
in
enter
cmc
inc
lock
scas
aas
rcll
add
sub
mov
jle
and
cmpsb
mov
xchg
enter
arpl
imul
ljmp
lods
aaa
repz
xor
out
xor
clc
repnz
inc
add
inc
push
loopne
xchg
lea
pusha
add
leave
push
mov
mov
sbb
insl
jp
or
fdivrp
filds
add
inc
decb
pop
sub
out
xchg
ds
loope
rorl
iret
ror
mov
rorl
push
xchg
jb
push
adc
or
fwait
jno
cltd
xchg
lock
mov
mov
mov
incb
fs
inc
add
aas
icebp
iret
daa
sub
inc
dec
adc
sub
jge
stc
gs
sbbl
icebp
dec
lahf
xchg
dec
outsl
stos
int
mov
dec
mov
sub
mov
jecxz
pop
inc
mov
in
push
sbb
mov
pop
sbb
out
leave
fwait
repz
add
xchg
out
pop
jmp
gs
mov
jns
test
mov
incb
inc
jle
xchg
dec
add
int3
add
popa
and
decb
mov
push
rcrl
push
dec
aad
test
repz
add
fs
aaa
shll
xchg
mov
add
inc
mov
add
jl
sar
rorb
xchg
adc
xor
push
jae
test
rorl
add
mov
idivl
test
push
sub
lcall
mov
dec
in
adc
push
push
xchg
mov
insb
add
pop
enter
add
mov
decb
popa
mov
push
inc
decb
in
and
pop
leave
mov
add
push
pop
sahf
outsl
add
dec
fs
xchg
mov
outsb
add
pop
cmpsl
data16
mov
aam
jg
jns
mov
outsl
inc
js
js
dec
add
into
xor
rorb
int3
push
add
test
mov
xchg
cmp
xchg
mov
movsl
je
cs
arpl
inc
rorl
push
xor
jb
add
data16
enter
test
jo
les
decb
pushl
mov
aam
xchg
clc
cwtl
bound
xchg
push
std
out
adc
adc
mov
mov
jb
mov
mov
decb
test
loop
arpl
out
push
xor
out
adc
push
mov
lcall
xchg
stc
push
dec
mov
mov
icebp
cmp
scas
pop
mov
mov
dec
dec
add
xor
jle
adc
loope
incb
jl
cwtl
test
loop
jge
in
dec
add
add
decb
add
lock
pusha
add
std
mov
decb
dec
negl
xor
dec
dec
xchg
mov
push
arpl
dec
ret
mov
jae
lea
fisubrs
fwait
fucomi
ja
ss
mov
inc
inc
add
rcrl
add
rclb
je
cltd
cs
sub
dec
mov
cltd
pop
cli
js
enter
rcrl
push
cmp
aas
out
repnz
inc
cwtl
cmpsb
push
clc
jecxz
pusha
add
repz
cmp
cmp
mov
decb
decb
push
add
addr16
incb
push
sbb
sbb
pop
mov
sbbl
xchg
int
orl
data16
dec
sbb
and
pusha
mov
das
mov
cld
jne
sbb
ljmp
lcall
add
inc
inc
or
nop
mov
dec
add
adc
decb
sub
loop
mov
pop
movsb
sbb
dec
fistpll
orl
pop
fs
fidivs
add
aaa
testl
iret
iret
cs
sbb
dec
sbb
loope
jmp
adc
mov
into
in
pusha
lods
fs
mov
ds
add
ss
inc
icebp
add
mulb
sti
push
and
inc
int
add
lcall
test
dec
in
shr
push
cmp
xchg
or
in
out
mov
movsl
mov
arpl
scas
stos
hlt
pop
imul
cmp
push
mull
mov
mov
push
cmp
test
incb
enter
out
mov
into
shrb
incb
mov
out
clc
inc
out
in
sbb
or
incb
push
lods
mov
loope
fdivp
mov
cmp
push
adc
adc
int
mov
sbb
cmpsb
inc
jecxz
fs
cmp
in
sbb
pop
repnz
imul
xchg
shll
loop
push
add
enter
scas
and
sub
out
loope
sub
incb
and
incb
add
jp
vpsubb
lods
roll
arpl
daa
dec
jge
mov
lret
aas
call
add
mov
in
adc
jno
push
mov
movsb
xor
ficoml
add
shl
ljmp
add
dec
lret
test
ficomps
sahf
arpl
out
rorl
comiss
jle
mov
test
mov
cmpsl
outsl
jl
or
out
xor
cmp
push
leave
in
mov
out
clc
xor
lods
cli
and
push
xchg
jmp
mov
lret
jns
pushl
repz
enter
ret
push
in
xor
add
add
cmpsl
inc
add
mov
movsl
les
jmp
pop
xchg
adc
cmpsb
leave
mov
test
add
dec
sahf
adc
add
test
xchg
inc
movb
jp
xchg
out
pushf
mov
adc
scas
add
inc
jmp
loopne
add
mov
sub
popa
test
fcompl
mov
push
addr16
dec
jl
popa
add
pop
ljmp
pop
mov
outsb
add
addb
loopne
ret
ja
jp
stc
dec
add
test
test
icebp
jns
mov
mov
pop
dec
add
in
imul
mov
jnp
xchg
xchg
cwtl
mov
or
mov
push
xchg
mov
pushf
xchg
scas
lods
sub
sti
add
xor
dec
xor
shl
push
sbb
js
add
scas
dec
pop
jns
pop
xor
in
add
call
insb
sub
gs
inc
xor
sbb
call
inc
push
push
add
sub
int
add
sahf
outsb
add
jb
cmp
ret
fbld
mulb
xor
ljmp
test
sub
sub
imul
push
scas
pop
add
dec
cmp
jb
add
pop
xchg
ljmp
icebp
mov
mov
lods
stos
lahf
or
ja
jp
jge
daa
push
inc
add
into
jo
mov
inc
sti
lds
mov
fildl
stos
push
sbbl
add
mov
mov
push
jle
shl
sbb
ljmp
loop
imul
inc
clc
aaa
jo
adc
jp
fidivs
mov
stc
data16
dec
loopne
cmp
add
imul
sub
mul
lret
sub
pop
jmp
mov
stos
pop
add
incb
sahf
xor
scas
ret
pusha
add
jge
and
enter
add
adc
add
out
and
rorb
jne
ret
out
sub
inc
ss
mov
das
mov
add
aaa
pop
fwait
lea
movl
and
incb
outsb
add
xchg
lcall
gs
mov
in
scas
lea
cmp
cmp
leave
popf
adc
pop
fdivrl
stos
cmp
pop
insb
decb
sbb
test
cmpl
and
sub
mov
call
adc
leave
jno
faddp
xchg
cmp
outsl
jl
push
pop
movsl
pop
fsubl
push
int
incb
cli
cli
cmc
jns
je
mov
shr
mov
or
xor
cmp
add
mov
lods
or
fs
xor
xchg
sbb
icebp
lock
sub
add
leave
test
pop
insb
add
int
test
enter
or
shll
add
and
iret
adc
push
mov
and
divl
xor
imul
and
dec
pop
sub
in
push
dec
or
ljmp
xchg
mov
dec
data16
jnp
pushf
jo
pop
leave
stc
xor
add
enter
incb
data16
mov
popf
push
daa
lret
shr
pop
cmp
jge
ret
mov
add
ljmp
movsl
push
dec
add
and
negl
inc
jle
out
jbe
insb
mov
scas
inc
add
pop
das
lods
out
lret
add
xchg
mov
cmpsb
gs
out
cmp
xor
das
push
lahf
push
das
sbb
cltd
pop
repnz
add
outsl
sar
sti
pusha
loop
cmp
in
mov
popa
sbb
sbb
push
ljmp
in
loop
clc
iret
ret
shll
cmp
imul
push
xchg
les
rol
inc
incb
xor
xchg
cmp
in
mov
jb
add
or
mov
pushf
xchg
addr16
and
pop
aam
or
test
mov
inc
aas
dec
pop
lods
add
sub
std
les
sbb
nop
insb
incb
mov
pop
sub
fstl
jns
cmp
jl
cmp
lea
pop
int3
mov
in
jl
js
mov
and
mov
leave
sub
xor
and
xchg
int
sbb
fldenv
orb
rorb
out
mov
decb
sub
je
test
lcall
pop
cmp
xchg
mov
lcall
mov
popl
iret
adc
rolb
add
push
or
in
into
cmc
mov
push
sbb
testb
int
in
push
shr
jae
stc
jae
push
sbb
mov
in
pop
ret
add
pop
xchg
add
and
dec
pop
push
and
aas
insl
pop
pop
fbstp
lcall
aad
loop
and
outsb
add
lret
fimuls
mov
fwait
inc
out
xor
loopne
es
pop
push
xchg
stos
js
not
mov
fs
xchg
xchg
sub
decb
mov
lods
movsl
enter
jp
adc
add
add
push
xor
or
jnp
cmpsl
sbb
decb
cld
mov
jo
sbb
pop
int3
or
mov
ret
mov
xor
ficoms
test
lcall
xor
shlb
jbe
call
test
mov
and
pop
test
add
dec
icebp
outsb
add
es
imul
adc
pop
fidivs
inc
jae
ja
scas
pop
sti
rclb
insl
lahf
adc
popa
xor
push
push
mov
fsubl
mov
into
ss
rcll
inc
movsl
insb
add
in
stc
test
out
xor
add
fisttpl
in
add
mov
movsb
pop
aaa
in
mov
sub
sbb
data16
incb
movsl
sub
cmc
lods
jo
iret
jnp
adc
xor
add
bswap
adc
scas
sub
aas
mov
jb
cld
iret
cwtl
stc
idiv
mov
stos
sub
movsb
and
out
repz
jne
test
sub
test
sbb
xor
repz
call
mov
dec
pusha
ss
test
mov
mov
adc
sbb
sub
test
sbb
dec
pop
xor
imul
enter
and
incb
add
stos
cmc
cs
das
mov
xchg
mov
daa
add
inc
pop
insl
adc
dec
sbb
fisubrs
xor
mov
fmull
incb
and
incb
adc
enter
aad
jae
jp
push
fdivrs
jle
pop
dec
pause
pop
ss
inc
fsub
adc
xchg
mov
dec
inc
lahf
xchg
std
mov
loope
add
pop
mov
enter
decb
ja
inc
sbb
cs
out
es
xor
push
mov
pop
pop
out
xchg
in
mov
adc
mov
mov
mov
or
mov
dec
incb
pop
daa
test
out
add
ds
negl
add
out
add
xchg
test
adc
sbbl
dec
add
pop
push
into
les
sub
cli
nop
enter
add
jmp
mov
sbb
repnz
add
pushf
ja
mov
push
filds
push
mov
notl
fs
decb
jb
cld
adc
mov
fidivs
adc
loope
xor
xchg
lret
shlb
cmpl
push
sbb
jecxz
jg
aaa
leave
mov
cld
or
je
jns
jp
add
jg
jae
dec
add
jo
add
inc
insl
out
mov
push
add
call
faddp
mov
sbb
imul
jne
mov
and
push
gs
dec
add
aad
incb
cli
in
das
push
xor
aaa
dec
out
cmc
sbbb
inc
pop
fdivr
jno
imul
enter
xlat
or
decb
fwait
icebp
cmc
push
pop
ja
outsb
add
lcall
inc
inc
add
jns
hlt
pop
xchg
int3
or
pop
cltd
xchg
outsb
mov
sub
push
add
cli
pop
daa
mov
add
pop
sbb
repnz
sub
nop
repz
nop
jmp
cmpsb
sbb
pop
addr16
add
mov
adc
or
decb
mov
sbb
push
push
cld
jno
faddl
sbb
repnz
les
sbb
push
cmc
into
sbb
les
add
xchg
inc
add
cld
les
or
das
sbb
aam
je
add
call
add
in
nop
nop
sti
or
icebp
mov
add
repnz
add
sbb
mov
push
dec
je
popf
call
mov
jl
subl
jle
fdivl
mov
xor
xchg
pop
daa
cmpsb
mov
inc
mov
notl
mov
xchg
fcomip
mov
fstl
cltd
pop
mulb
movsl
sbb
and
pop
js
mov
add
rclb
icebp
call
dec
incb
xorb
mov
xlat
xchg
cmpb
push
xor
adc
es
adc
lcall
dec
incb
and
incb
addb
jne
js
add
mov
xchg
test
inc
add
mov
cmp
jb
mov
nop
jns
ja
add
jle
cs
data16
push
fwait
or
jmp
ja
mov
jns
cmpb
and
lret
mov
lods
and
data16
pop
mov
lret
movsb
xchg
cltd
ret
push
incb
and
jmp
cli
cmp
decb
outsb
mov
xchg
pop
sbb
out
or
incb
jo
nop
sub
fld
jno
jg
test
mov
mov
adc
add
lahf
nop
int3
sub
or
sbb
cmc
inc
dec
mov
sbb
les
imull
decb
data16
push
jne
shlb
ss
mov
jle
loop
cmpsb
loop
movsl
aam
adc
outsb
add
cmp
dec
add
stos
adc
pop
mov
jns
ret
pop
cmp
aad
es
xchg
jno
or
in
das
gs
shrl
decb
add
lret
pop
stos
xchg
pop
sbb
add
test
pop
imul
daa
out
jbe
and
in
repnz
add
inc
fwait
mov
arpl
sub
imul
and
xor
stos
sub
mov
out
in
sar
mov
or
sbb
lock
sub
out
pop
mov
sub
mov
incb
fisttpl
scas
aas
cmp
mov
add
mov
popa
outsb
add
es
cmp
mov
data16
xor
and
ljmp
jb
cltd
cmp
push
mov
data16
fsubrl
push
pusha
pushf
addl
loop
add
arpl
inc
imul
imul
or
test
cmpsl
xor
jmp
in
sub
pop
ljmp
inc
xor
mov
mov
cmp
lds
xor
or
stc
adc
nop
jmp
cmpsl
stos
jno
xor
pusha
add
cmc
paddd
int
mov
decb
dec
pop
inc
inc
lret
pusha
add
fwait
mov
popa
or
je
add
and
dec
in
push
js
fsubs
stos
sbb
add
scas
test
decb
aad
movsb
enter
ljmp
loop
in
js
push
adc
sti
add
push
ret
xor
push
loop
push
repz
enter
in
push
sbb
push
dec
pop
jle
fisttps
test
popa
mov
aam
shlb
push
add
cltd
aas
sub
dec
push
rcll
incb
xlat
rcrb
add
incb
mulb
lock
pop
mov
scas
cmp
lods
mulb
incb
out
adc
push
daa
add
daa
push
das
mov
ljmp
cs
sbb
push
aas
mov
lods
repz
rcl
scas
xchg
andl
push
push
xchg
or
inc
add
add
incb
lock
jp
jbe
add
sub
xor
cmp
mov
mov
pop
daa
pop
subb
inc
add
decb
movsl
cmp
repz
push
push
and
inc
add
lds
decb
mov
lahf
out
jl
add
or
xor
loop
data16
jmp
add
xchg
dec
hlt
mov
addr16
hlt
adc
xor
lahf
or
inc
add
cmpsb
ds
scas
and
and
pop
mov
sbb
imul
lcall
mov
popa
jnp
push
xor
lods
pop
sbb
xor
pop
inc
add
movsb
mov
lret
push
add
lret
out
mov
in
paddw
shll
inc
inc
cld
add
push
sbb
mov
adc
inc
fisubrs
jle
and
enter
push
cmp
add
pop
test
add
inc
dec
mov
cmp
inc
add
jnp
xchg
aad
dec
cmp
sarb
inc
cmpsb
or
out
xchg
int3
sbb
pop
adc
inc
out
ja
out
inc
pop
jne
dec
in
jb
leave
push
ljmp
jmp
cltd
jbe
add
fidivs
add
mov
sbb
mov
jbe
xlat
pop
cmp
test
inc
add
sub
aas
jge
mov
adc
test
iret
movsl
nop
inc
push
add
and
mov
adc
popf
icebp
jae
xchg
mov
add
decb
lcall
inc
jbe
daa
lcall
ja
movsb
jecxz
mov
pusha
cmp
add
xor
ret
fdivp
cmp
cmpb
cmp
mov
jge
sub
inc
cmp
les
xor
mov
add
cwtl
inc
dec
add
or
mov
repnz
outsl
and
dec
cmp
pop
rcl
dec
lcall
push
lods
scas
sbb
xor
mov
sub
es
mov
pop
xchg
add
decb
fs
incb
pop
xchg
aam
sub
daa
jg
push
out
add
aaa
dec
and
cmp
incb
add
dec
add
jecxz
pop
jb
jne
xor
pop
stos
inc
add
fadd
adcl
mov
mov
insb
mov
jae
and
xor
test
aam
pop
xchg
fisttpll
or
rcrb
in
pop
repnz
data16
jmp
add
sbb
je
imul
pop
mov
pusha
add
loop
in
in
mov
jae
outsb
mov
ja
ds
fstpl
daa
in
in
or
xor
and
jg
in
mov
or
and
adc
dec
sbb
rol
test
outsl
dec
sarl
leave
xchg
gs
stc
xor
rclb
imul
add
mov
mov
inc
add
andl
insb
decb
add
jo
decb
adc
and
adc
hlt
sti
pop
fnstsw
mov
xor
fsubrp
cwtl
imul
mov
ja
dec
push
pop
icebp
mov
into
adc
add
pop
mov
sarl
mov
pushl
adc
xchg
int3
dec
sub
and
cltd
cld
pop
or
push
pop
mov
adc
decb
mov
sbb
add
jns
test
sbb
cltd
ret
fld
aam
es
jmp
cmpsb
inc
add
loop
cld
xchg
lods
dec
inc
add
mov
pop
cmp
xor
pop
iret
mov
loopne
jae
es
and
mov
iret
dec
femms
add
nop
mov
add
das
out
push
inc
dec
out
fs
imul
or
incb
push
dec
add
stos
xchg
ja
jae
mov
xorl
jno
mov
rolb
cmp
add
bound
scas
push
outsl
jp
jns
repz
out
cli
lahf
ret
imul
mov
xor
and
push
nop
icebp
scas
pop
mov
inc
add
shll
dec
popf
mov
mov
sbb
xor
add
xchg
ss
push
jne
ds
lahf
mov
mov
adc
ret
adc
popa
dec
decb
inc
incb
sub
negb
mov
pop
fcompl
push
dec
mov
cmc
popl
ljmp
pop
test
adc
cmp
inc
push
decb
mov
dec
xor
daa
lea
xchg
xlat
loopne
inc
push
popa
lods
mov
fnstenv
mov
add
inc
add
call
xchg
movsb
mov
inc
add
mov
insb
and
push
xchg
adc
add
mov
std
cmc
cli
or
sar
stos
notl
aam
xchg
out
int
add
cmp
push
jl
nop
fldcw
cltd
fstpl
rorb
les
sub
test
adc
stc
add
decb
jns
out
inc
jnp
pop
lcall
arpl
incb
addr16
inc
decb
add
and
mov
mov
in
adc
push
incb
es
jbe
xchg
dec
add
jmp
sbb
xchg
addb
lods
xchg
addr16
gs
push
dec
mov
pusha
pushf
mov
push
fldenv
cmc
int3
in
in
test
xchg
loop
das
jo
adc
dec
out
aam
popf
xchg
pop
add
lcall
push
repz
add
dec
ret
fisttpll
push
stos
outsl
fucomp
ljmp
imul
adc
and
xchg
cmc
inc
push
push
outsl
int3
inc
incb
pop
fwait
dec
loopne
movsl
mov
add
dec
pushf
cmovo
xchg
mov
and
les
add
cmc
popf
xor
add
sub
and
in
idivb
push
sub
pop
fwait
xchg
sahf
aaa
cld
roll
add
loopne
push
test
cmpsb
ds
pop
loop
mov
or
scas
out
pop
pop
cmp
test
rcll
cmp
jo
dec
dec
call
fs
aad
dec
shlb
add
lds
ja
mov
stos
cmp
jmp
cmp
divl
sarb
popf
lods
push
add
push
jmp
sub
mov
push
sub
adc
dec
mov
nop
imul
insl
popa
pop
cwtl
push
repz
stos
xor
repz
stos
mov
aam
add
mov
dec
mov
es
jae,pt
mov
or
nop
cmc
shll
mov
add
dec
add
xor
decb
mov
add
xor
test
cltd
push
pushf
pop
sub
loop
je
je
push
dec
jl
stos
pop
call
scas
jnp
and
fwait
or
pushf
inc
xchg
pusha
add
and
mov
pop
fdivr
shll
jns
add
cs
and
dec
sbb
ja
lds
clc
imulb
cmp
pop
fwait
mov
je
aaa
iret
jp
dec
add
int
mov
ret
fprem1
inc
rcr
cmp
push
xor
flds
mov
add
cmp
rcll
pop
sub
mov
dec
fldpi
in
fdivrs
lods
and
fmuls
mov
fmul
xor
sub
or
incb
mov
add
dec
test
dec
sbb
fucomip
jno
clc
shll
data16
inc
icebp
test
mov
flds
add
jo
ja
insb
jae
push
push
jg
stc
sub
test
es
inc
add
cmp
mov
iret
cmp
shll
decb
sbb
lods
inc
push
xor
incb
mov
mov
fcmovb
cmpsl
jmp
xor
adc
ljmp
sbb
sbb
add
sub
decb
jp
mov
add
xchg
fldenv
adc
insb
mov
jp
push
ss
repz
adc
adc
mov
mov
mov
daa
xchg
ds
xchg
sbb
cmp
mov
or
dec
sbb
add
cltd
push
repz
or
adc
repz
push
inc
mov
cmpsl
xlat
rcl
xor
rcrb
incb
subb
incb
xor
in
mov
fdivp
shr
loope
xchg
out
pop
mov
cmpsl
test
push
in
fucomp
add
pop
xchg
jnp
in
xchg
aad
ret
pop
mov
repz
dec
pusha
add
out
dec
jge
add
mov
loop
addr16
mov
scas
xor
nop
cmp
ss
add
incb
shll
incb
dec
aas
cld
add
push
xchg
fadds
outsl
les
aas
mov
cmpl
add
dec
push
sbb
and
cmp
jnp
inc
add
fbstp
adc
aas
xlat
mov
fcompl
adc
pushf
loop
push
add
decb
inc
in
jno
or
repz
fwait
dec
repz
stc
ja
test
movsb
push
insl
xor
pop
fnstcw
jns
adc
add
pop
mov
add
push
incb
or
jge
or
mov
ret
xor
fcoml
jmp
push
test
iret
jle
xchg
loopne
lods
sbb
hlt
hlt
jns
lock
adc
mov
add
aas
mov
add
sti
inc
gs
xor
xchg
cltd
cmc
xchg
call
sub
and
push
ja
or
decb
pop
mov
xlat
aaa
ljmp
inc
adc
and
or
mov
xor
adc
int
out
mov
sar
out
jbe
add
cmpsb
xchg
cwtl
fidivs
sbb
or
mov
mov
sbb
xchg
adc
test
stos
movzbl
or
mov
and
mov
cmp
add
xor
jle
xchg
popf
xor
add
into
jnp
add
mov
xchg
imul
mov
nop
or
es
mov
mov
and
jmp
shr
inc
sbb
inc
dec
iret
push
jle
add
decb
jne
ja
adc
and
dec
sti
insb
incb
mov
sub
stos
and
loope
and
fdivr
ss
xor
rcll
rorl
xchg
fisubrl
je
xchg
add
rcl
mov
dec
aad
das
adc
jnp
xchg
lds
inc
or
adc
push
xchg
and
call
mov
andl
outsb
add
sub
arpl
out
xor
popa
movsb
lahf
outsl
adc
hlt
add
outsb
add
aad
adc
inc
mov
add
pop
imul
orb
decb
ljmp
das
into
stos
int
lods
out
mov
fnstenv
sbb
add
adc
or
adc
inc
add
mov
das
ss
xor
push
lock
cmp
fs
in
xor
dec
add
push
mov
mov
sub
aaa
push
incb
jl
shrb
add
sub
pop
pop
sar
pop
outsb
add
add
mov
jns
or
data16
std
test
mov
outsb
incb
test
cli
jecxz
fdivrs
jbe
dec
int3
dec
decb
sbb
lods
imull
ds
aaa
lret
test
es
repnz
mov
call
cld
cmp
scas
jle
loope
mov
xchg
int
add
in
mov
loop
mov
imul
push
lret
jnp
mov
mov
add
mov
mov
sbb
add
sbb
sub
jp
add
ds
jl
inc
sbb
mov
cmp
daa
fdiv
sbb
and
ret
xlat
aaa
loope
add
inc
sbb
in
outsb
out
std
push
mov
pop
pop
mov
pop
xchg
push
fnstsw
lds
dec
add
sub
es
test
fdivrs
add
repnz
xor
jmp
xor
cmp
xchg
fimull
xchg
xchg
inc
xor
notl
mov
jno
testl
setns
mov
lcall
jmp
add
mov
push
add
pusha
add
cmpsb
scas
adc
jno
push
pop
mov
popf
inc
incb
popf
xor
or
incb
incb
cmpsb
or
cmp
mov
add
sbb
aas
int3
dec
jp
xchg
mov
jle
lahf
flds
inc
sti
sahf
push
fidivrl
add
sbb
pushf
idivb
add
loopne
lahf
jmp
lcall
mov
movsb
into
dec
dec
ret
js
jae
mov
and
out
stos
pop
and
jg
adc
sbb
mov
inc
push
or
cmp
fucomip
loop
mov
jae
add
aad
jl
fildll
mov
dec
mov
fsubl
push
sti
pop
sarb
in
push
add
inc
stos
push
popa
das
cwtl
pop
cs
clc
sub
xor
ss
push
cmpsb
clc
ds
pop
pop
push
mov
dec
decb
and
decb
mov
imul
add
pusha
incb
decb
cld
or
mov
movsb
clc
insb
ds
dec
cmp
scas
data16
cmp
aad
incb
negl
stos
out
stos
into
insb
decb
add
dec
push
add
je
nop
cmp
stos
data16
idivb
incb
jmp
jg
xor
sar
insl
cmc
adc
jg
xchg
shlb
inc
sub
hlt
cmc
pop
cmp
jbe
movsb
add
dec
pop
aad
pushf
repnz
lret
mov
xor
lcall
pop
mov
decb
inc
sub
mov
push
ljmp
mov
push
mov
fidivl
rol
aam
inc
adc
int
mov
xorb
add
lcall
pop
das
sub
xchg
sub
dec
cmp
adc
das
push
inc
add
ja
movsb
iret
ljmp
je
sbb
push
dec
cmp
adc
cmpsl
arpl
pop
push
adc
sbb
mov
inc
addr16
enter
outsb
add
ja
incb
and
push
xor
push
mov
jl
insl
xchg
nop
cmpsl
enter
mov
cltd
sarl
pop
sub
popa
sti
sbb
fstpt
cmpsb
mov
lock
mov
inc
into
lcall
jae
pop
imul
add
negb
cmp
sbb
daa
mov
jne
shll
xor
int
mov
push
out
pop
jge
xor
decb
das
adc
incb
hlt
int
lret
add
divb
outsb
add
std
int3
iret
insl
or
adc
push
leave
push
ret
in
mov
sub
lcall
fnstsw
fcoml
inc
out
mov
jg
mov
ja
push
jno
sbb
sbb
test
jmp
lea
jg
sub
std
add
out
sbb
pop
loope
xor
in
or
roll
sbb
sbb
out
dec
add
fwait
cmpsb
les
mov
mov
into
inc
fwait
cmp
stc
mov
fiadds
mov
add
pandn
sar
mov
xor
sub
or
add
xor
loope
lret
sti
cmpsl
fldt
cmp
imul
fs
stos
insb
add
push
inc
cmp
add
mov
cmp
call
lcall
dec
add
pop
xor
lahf
gs
mov
add
repnz
cli
stos
dec
add
fisttpl
testb
lcall
mov
pop
xchg
dec
into
leave
pop
bound
movsb
xor
out
dec
xchg
aad
mov
push
sub
pop
push
jo
fidivs
or
cmp
add
cld
xor
dec
mov
and
lea
rclb
mov
int3
ljmp
lret
pop
mov
adc
les
psubd
dec
daa
ret
push
xlat
jne
mov
test
std
mov
dec
out
punpcklwd
in
adc
out
adc
pop
cmp
and
decb
out
dec
add
jbe
fidivrs
add
and
adc
adc
push
inc
pop
mov
fistpl
inc
cmc
pop
and
dec
popa
xor
outsb
dec
add
jl
cmpsl
js
mov
iret
sub
dec
xchg
loope
jae
push
jne
sbb
or
icebp
aaa
mov
decb
cmpsl
gs
dec
xor
fmull
decb
xor
cmpl
cmp
ja
xchg
xor
aaa
sub
dec
mov
movsb
push
mov
fbstp
das
jp
and
es
ffreep
in
lret
mov
dec
fchs
jge
loopne
js
fdivrl
shlb
sbb
cmpsb
add
adc
pop
scas
jne
or
push
sahf
adc
gs
and
cli
inc
loope
popa
and
and
sub
out
xor
outsb
and
pop
lret
inc
push
push
pop
mov
inc
jo
sbb
iret
mov
jo
out
mov
mov
mov
loopne
aas
mov
sbb
add
jbe
add
mov
rorl
pop
inc
test
and
mov
mov
cmp
add
sbb
or
incb
movsb
add
mov
pusha
add
mov
and
movsb
mov
push
incb
dec
das
mov
fsub
mov
out
movsb
inc
das
in
add
test
incb
testl
jne
or
je
out
decb
cmpsb
mov
cmp
push
shlb
outsl
or
xchg
addr16
lods
mov
xor
add
jo
mov
mov
jp
ret
outsb
add
xchg
arpl
jge
sahf
xchg
ja
lret
inc
and
pop
lcall
add
std
mov
imulb
push
cmp
lahf
shlb
mov
adc
clc
jmp
in
pushl
js
jg
lahf
mov
jecxz
add
or
jge
dec
add
adc
mov
add
lcall
push
or
ja
imul
dec
les
addr16
sub
decb
fcomp
sub
imul
xor
dec
loope
jns
add
mov
sub
mov
fists
lea
jo
dec
add
inc
jnp
add
mov
ret
jge
mov
mov
pop
ss
es
mov
dec
out
dec
std
sti
aad
in
dec
xchg
in
xchg
mov
adc
xchg
xchg
jno
add
es
stos
adc
inc
loopne
test
cmpb
jo
adc
adc
mov
idiv
fnsave
stos
sub
add
fidivs
adc
stc
into
clc
pop
cltd
dec
cmp
pop
mov
pop
arpl
pop
fwait
je
mov
jb
mov
sbb
les
loope
inc
iret
negb
mov
dec
je
mov
add
xchg
scas
shlb
loopne
add
cmp
decb
cwtl
dec
cwtl
xor
ljmp
fwait
scas
call
js
inc
add
aad
enter
aaa
lea
loope
pop
nop
jmp
test
xlat
loopne
adc
ljmp
dec
pusha
bound
mov
movsb
mov
xchg
xchg
adc
add
into
mulb
lahf
cmp
out
sahf
imul
and
and
rclb
addr16
int
bound
mov
mov
sub
es
xchg
mov
inc
std
sbb
push
cmp
int3
lods
xlat
push
xor
cmpsb
clc
jae
aas
inc
mov
test
push
into
adc
in
add
xor
jp
adc
incb
and
fisttpl
loope
inc
pop
sbb
popa
cmp
lods
xor
std
adc
cmp
xor
mov
frstor
push
lods
jb
shr
lret
in
push
adc
popa
test
loop
popa
cmp
outsl
stos
sbb
lret
fnstsw
mov
sub
aas
aaa
iret
dec
divb
dec
push
inc
cmp
test
cld
test
leave
lods
xlat
fldcw
incb
add
adc
dec
and
clc
sbb
add
cmp
mov
mov
inc
popf
pop
sub
aad
in
add
sub
decb
mov
ret
dec
mov
fisubrl
xorb
sbb
das
cmp
incb
mov
imul
shl
mov
cs
jno
int3
and
decb
xchg
jge
shll
xor
ret
jae
and
jno
popf
fisttps
cli
mov
xor
mov
add
add
cli
cli
ljmp
dec
and
cmp
aad
add
sbb
in
sahf
imul
push
hlt
push
add
sbb
jp
xorl
scas
ljmp
test
addl
loopne
adc
icebp
lods
hlt
in
fs
decb
sub
loope
and
arpl
out
push
sarl
add
je
and
or
mov
cmp
mov
sbb
lods
xchg
mov
mov
loope
enter
decb
sbb
or
daa
pusha
cld
call
push
adc
leave
cld
and
sub
cmpsl
data16
pop
cmp
imul
add
mov
push
sub
stos
adc
filds
add
push
cltd
or
hlt
jl
negl
pop
scas
push
or
enter
jle
pop
mov
pusha
adc
insb
add
lret
mov
xor
inc
cmp
mov
mov
ljmp
aaa
hlt
push
mov
cmp
xlat
test
and
sbb
lcall
mov
loopne
mov
lea
decb
add
jno
mov
neg
pop
pop
or
incb
add
fildl
add
mov
mov
inc
jo
stos
test
cmp
mov
psubw
rclb
lds
mov
adc
mov
push
mov
out
inc
jl
mov
add
repnz
mov
xchg
ljmp
fnstsw
mov
lret
pop
and
popf
lret
rclb
cmp
icebp
add
mov
cmp
mov
js
xlat
cmp
aas
rcrl
in
popf
enter
add
arpl
push
das
adc
inc
decb
mov
mov
sbb
arpl
notb
jg
sbb
xor
addb
pushf
xlat
jmp
and
incb
test
nop
adc
add
decb
xchg
rcr
push
mov
stc
mov
incb
pop
in
or
insl
test
xchg
jbe
push
mov
aaa
add
aaa
cs
dec
cmp
aaa
jle
and
push
dec
mov
pop
jae
jmp
add
fidivs
inc
add
mov
sbb
add
aaa
pop
adc
roll
decb
add
xor
cmp
repz
mov
adc
mov
cmp
clc
push
cmp
or
stos
dec
stos
push
stos
mov
dec
stos
cmpsb
mov
mov
cmp
ret
adc
insl
jns
clc
out
andl
dec
add
inc
add
lcall
lock
inc
mov
pop
or
outsb
add
push
cs
or
jmp
jecxz
adc
xor
lahf
push
add
inc
sbb
sti
ja
lahf
inc
sub
adc
pop
push
and
push
lret
scas
test
orb
pop
adc
sub
icebp
dec
push
jl
push
add
fcomip
jl
add
sti
sub
decb
mov
adc
fildll
inc
jnp
mov
rcrb
jo
sbb
int3
xchg
xchg
mov
hlt
ljmp
clc
das
add
scas
mov
fistpl
lock
pop
xchg
add
push
mov
outsb
add
hlt
ret
or
imul
mov
aaa
push
add
sbb
xor
out
incb
out
mov
andb
sti
lock
mov
lea
cmp
push
lods
mov
sbb
test
cmp
outsb
xchg
cmp
mov
fisubs
add
dec
pushf
icebp
sub
sbb
pop
mov
inc
add
push
add
int
dec
decb
scas
xchg
inc
incb
incb
sub
add
adc
sahf
ret
jns
int
les
inc
test
or
sbb
mov
insb
add
out
push
inc
pop
nop
rorl
lahf
testb
stos
mov
data16
stc
mov
out
jl
cld
movsb
dec
and
out
outsl
dec
push
mov
mov
cltd
call
roll
add
aad
lods
out
rorl
sub
incb
mov
incb
stos
mov
mov
stc
sbb
cmp
incb
sub
incb
push
dec
jmp
add
decb
mov
add
lds
incb
add
or
mov
pop
xor
rclb
lret
jl
enter
push
mov
popa
fucomip
mov
mov
cmp
out
sbb
sbb
pop
add
mov
push
out
dec
nop
pop
jl
cltd
sahf
jno
icebp
loop
xchg
mov
loop
pop
cmp
mov
mov
push
add
decb
mov
das
xor
andb
gs
int
add
imulb
add
mov
push
scas
and
inc
push
push
std
test
jl
das
jge
lea
out
xor
je
decb
mov
xor
inc
add
mov
pop
sbb
or
pop
or
push
and
pop
push
insl
testb
dec
push
incb
decb
mov
dec
inc
out
test
add
fst
cld
push
incb
icebp
stc
test
dec
lea
mov
inc
add
lods
jne
out
jnp
gs
sbb
dec
jmp
jno
xor
sar
cmp
sub
es
or
fdivr
mov
xchg
jne
mov
add
out
and
es
pop
cli
xlat
dec
sub
loop
stos
mov
jp
pop
stc
das
push
and
hlt
test
mov
cli
jl
pop
and
arpl
clc
jge
adc
rorl
jg
cmp
cwtl
test
and
incb
outsb
add
add
and
in
or
in
or
ja
sub
aam
out
inc
or
pop
hlt
cs
cltd
xchg
cmp
add
icebp
rorl
push
jo
mov
push
push
repnz
fimuls
mov
push
imulb
out
dec
add
cmp
jno
cmp
cmp
or
sub
hlt
sbb
cmpsl
lods
fists
jo
add
and
mov
dec
sahf
mov
pusha
add
out
mov
in
mov
incb
fldcw
mov
xchg
insb
add
adc
push
dec
ret
clc
fisubl
cltd
movsl
xchg
pushf
shll
cmp
repz
sbb
div
aaa
enter
in
arpl
ds
push
iret
add
mov
repz
in
add
rep
pop
mov
ja
mov
sti
sbbb
push
add
es
dec
inc
movsb
xor
test
inc
add
loop
fs
push
add
fiaddl
cmp
mov
incb
decb
jg
mov
xor
je
popa
push
ret
sbb
mov
aas
adc
lods
pop
mov
rcl
mov
sub
test
cmp
popf
mov
pop
test
enter
xchg
pop
xchg
aaa
and
nop
or
and
add
rorb
mov
add
incb
out
add
test
sub
addr16
mov
xchg
jae
lret
push
xchg
mov
cmpsb
out
ret
dec
mov
popf
hlt
push
push
fmuls
fsubl
add
lcall
out
out
insb
add
dec
add
pop
pop
inc
add
or
dec
push
fisubrl
aad
jno
movsl
sbb
std
icebp
or
nop
xlat
out
in
push
cmp
ljmp
ljmp
ret
aad
add
incb
mov
and
outsb
test
stos
repz
mov
push
shrl
add
push
fistpl
out
ds
adc
aaa
mov
mov
cmp
and
add
push
add
ficoml
dec
add
ret
adc
cmp
js
andl
xor
sbb
push
stos
push
xor
lret
lret
dec
dec
and
add
adc
clc
sub
mov
or
ds
dec
xor
stos
lea
fstpl
pop
mov
out
adc
dec
add
addl
cwtl
push
push
inc
lret
mov
jns
mov
mov
pushf
cmp
rorb
dec
xchg
push
int
out
cmp
pop
jecxz
xorb
xchg
jnp
add
dec
cwtl
roll
rcll
cmpsb
ljmp
add
lea
sub
sbb
nop
sarb
outsl
je
push
sub
fdiv
adc
push
xchg
addr16
out
icebp
faddp
add
cmp
and
insl
test
mov
mov
inc
sbb
fildll
call
decb
pop
xchg
push
lahf
inc
mov
outsb
add
lock
test
xchg
or
inc
ficoms
cmp
pop
mov
sub
cltd
push
mov
ret
and
aaa
and
in
pop
adc
cmp
popa
add
call
lret
mov
inc
fdivrs
adc
subl
shll
dec
repz
inc
add
mov
mov
lock
testl
add
pop
notl
inc
decb
xor
subl
pop
dec
aaa
je
lret
sbb
xor
jb
lahf
out
ja
adcb
repnz
flds
inc
nop
jno
in
mov
add
lahf
dec
add
rclb
jbe
leave
rcr
ret
sbb
pop
nop
aaa
cmp
out
jbe
dec
decb
sub
add
mov
ds
cmp
pop
rclb
xlat
jb
jge
mov
and
fs
push
dec
add
int3
lahf
xchg
inc
lea
mov
lods
popa
sub
xor
pop
xor
dec
xchg
loopne
out
push
and
mov
scas
test
icebp
lahf
bound
dec
or
std
vpmulhuw
decb
cltd
bound
aam
sbb
inc
xor
hlt
dec
pop
dec
xchg
imul
jno
ds
xchg
push
mov
mov
adc
pusha
stos
push
mov
lret
popf
or
stc
and
fildll
test
adc
pop
jge
lret
shlb
inc
ret
insl
mov
add
repnz
inc
inc
sub
data16
or
dec
in
jns
test
sti
and
adc
jmp
push
adc
ja
jns
push
mov
pop
pmaxsw
fsubp
sahf
cmp
add
arpl
dec
add
add
adc
mov
cs
daa
decb
inc
mov
fs
inc
mov
add
fbld
cmp
or
and
dec
ret
add
jnp
or
mov
in
mov
hlt
fstps
sbb
or
or
ja
shll
lea
fwait
enter
jb
sar
jg
aam
jge
xchg
and
pushf
enter
cs
pushf
xchg
sub
lods
insl
add
mov
mov
or
decb
xor
ljmp
outsb
popf
mov
push
and
xchg
enter
hlt
daa
das
je
test
lea
push
pushl
aad
fsubrs
mov
or
decb
outsl
test
jb
jmp
add
jecxz
jbe
nop
ds
sub
jno
xlat
shlb
jae
fmulp
pushf
std
dec
mov
add
jno
in
add
sub
aam
pop
sub
push
sbb
pop
pop
dec
out
jb
in
jns
pushf
pop
push
ret
and
test
popa
xchg
jp
dec
add
fwait
ljmp
lcall
jb
sahf
jl
add
fwait
cmpsb
xchg
and
dec
and
decb
mov
mov
sub
mov
imul
repnz
iret
adc
add
mov
jo
pop
jg
xchg
jl
movsl
pop
pop
and
jns
jno
incb
inc
out
repz
jmp
push
jb
lds
lea
lret
cmpsl
sub
das
int
push
add
push
outsl
mov
dec
mov
inc
jp
jno
into
cmp
frstor
ja
ret
in
in
incb
dec
out
mov
add
outsb
incb
sbb
fs
loop
adc
out
and
pop
jle
dec
push
sub
inc
push
pushf
xor
int3
or
lock
and
sub
ljmp
imul
fldl
mov
sbb
and
sub
hlt
push
inc
movsb
insb
pushf
jno
inc
add
iret
adc
inc
jnp
outsb
add
jbe
pop
in
and
outsb
add
andb
popa
cmpsl
aas
push
stos
pushf
pop
andb
inc
xor
mov
repz
sub
xor
out
enter
pop
in
int3
add
add
sub
push
push
jmp
decb
loop
add
lret
pushf
inc
jbe
ret
popa
push
es
ds
test
fldcw
rcrl
dec
clc
jecxz
popa
xchg
adc
or
sahf
sub
sbb
aad
jb
in
cmp
pop
aad
mov
adc
popa
imul
sub
mov
incb
dec
mov
push
mov
jge
jle
push
lret
in
lods
jne
pushf
xchg
in
or
dec
ret
pop
sub
decb
mov
xor
mov
daa
push
dec
add
dec
lods
sub
in
roll
cmpsl
fcoms
xchg
jnp
lock
sbb
cmp
repnz
cli
sar
sbb
es
mov
aas
and
cmp
insb
add
dec
add
test
outsb
add
ss
inc
and
cmpsb
add
xchg
pushf
in
jo
inc
add
popf
dec
movsl
mov
push
incb
jp
jecxz
mov
ret
add
out
mov
gs
imul
sbb
push
imul
xor
stos
out
mov
xor
xchg
add
cmpl
sub
dec
ja
bound
mov
xchg
bound
mov
mov
sbb
mov
add
out
cmp
add
mov
into
shll
sbb
pop
push
mov
or
aaa
push
jae
jns
mov
xchg
andb
and
cmpb
xchg
xchg
add
mov
mov
rcrl
jne
in
and
sbb
icebp
dec
add
inc
add
jno
outsl
inc
cmp
dec
add
outsl
out
add
xchg
sbb
data16
decb
cmc
inc
sbb
pop
push
push
je
or
in
test
mov
icebp
xchg
xor
sbb
and
fcoms
out
pop
and
testl
jbe
andl
frstor
dec
mov
xchg
push
mov
sti
lret
or
decb
es
mov
mov
or
incb
dec
lods
and
sub
add
sub
xor
xchg
mov
dec
ds
es
aas
dec
add
aam
cmp
dec
movsb
xchg
lods
jg
sbbl
push
mov
adc
lods
xchg
scas
push
pop
lcall
inc
add
push
add
loop
xor
inc
push
adc
cld
loopne
add
fdivrl
push
add
jb
sub
pop
mov
fldcw
jecxz
xchg
inc
in
arpl
lods
and
mov
popa
mov
fdivrp
arpl
push
xor
addb
cmpsl
mov
ss
mov
jecxz
imull
sub
mov
pop
mov
dec
add
pop
sbb
mov
sahf
inc
incb
sbb
mov
shlb
fcmovnbe
cld
adc
decb
in
data16
inc
and
cmp
loopne
add
mov
fs
mov
mov
sarb
leave
and
loop
cli
loope
pop
pop
testl
rclb
mov
ja
cmp
mov
dec
lds
push
jno
add
hlt
out
test
adc
add
repnz
and
push
fldl
sbb
sbb
stc
es
push
mov
outsl
pop
jns
push
gs
xchg
movsl
out
movsl
mov
jns
pusha
add
mov
mov
jnp
scas
inc
add
jo
mov
lock
sbb
popa
mov
or
decb
clc
lods
cltd
push
inc
add
add
mov
pushf
aad
into
fnstcw
addl
xchg
sbb
movsl
repnz
xor
arpl
pop
repz
sbb
add
or
cli
pushf
sarl
outsb
idivl
and
sarl
rclb
xchg
jnp
mov
jle
std
fcomp
scas
icebp
pop
fildl
inc
cmpsl
std
stos
lcall
daa
cs
xor
sbb
push
xor
subb
add
int
loope
mull
jnp
mov
out
mov
into
mov
daa
add
mov
pop
cmpl
mov
fsubs
inc
fsubr
in
fidivrl
dec
add
shrb
in
stos
ss
int
add
ds
cmpsl
or
stos
std
mov
fimuls
pop
movsb
add
jmp
xchg
loop
and
mov
pop
jns
lds
fwait
cmp
and
decb
shrb
push
and
pop
outsb
add
mov
add
dec
cltd
cli
jle
add
popf
data16
repnz
pop
pop
test
mov
cli
push
and
stos
jns
std
in
lret
clc
adc
aad
insb
in
shlb
add
incb
sti
stc
mov
leave
loopne
sahf
fwait
cmpsb
jg
and
decb
test
dec
in
repz
dec
pop
pop
jbe
aaa
aas
inc
js
loope
add
or
sbb
adc
lret
imul
fdivrl
mov
jb
outsl
lea
cmp
push
decb
mov
push
cs
and
out
cli
ret
dec
pop
int3
fadds
mov
arpl
inc
decb
add
mov
out
cmp
mov
rcrb
lods
adc
jecxz
adc
clc
add
pop
mov
mov
fidivrl
ds
mov
out
push
xor
je
hlt
inc
push
movsb
stos
out
push
mov
sbb
pop
bswap
ret
lea
xchg
pop
adc
mov
adc
sub
incb
incb
inc
call
mov
add
into
cmc
dec
xlat
imul
adc
fisttps
xchg
ds
add
cmp
sbbb
sub
scas
fdivp
setp
repnz
mov
roll
add
decb
push
stos
mov
xchg
push
jns
and
mov
addr16
mulb
mov
mov
out
mov
fs
mov
lret
leave
mov
stos
je
insl
cmp
adc
pop
jg
and
sub
aad
xor
and
ss
out
cli
sub
push
mov
add
mov
and
loopne
cld
and
lahf
jecxz
jns
or
arpl
in
ret
dec
add
movsl
push
adc
fs
add
jns
fsubr
popa
and
and
sbb
sub
outsl
ficoml
cmpsb
lods
popa
pop
in
mov
pusha
movsl
pusha
fmuls
adc
popa
xor
push
out
xchg
movsb
ret
gs
cli
sbb
scas
add
sbb
mov
and
inc
push
lods
in
jge
cmp
adc
sbb
add
and
xor
lcall
mov
sbb
mov
xlat
pop
rolb
out
rcrl
dec
scas
lods
inc
jb
sti
insl
mov
mov
stc
sarb
aam
and
push
mov
xor
sbb
add
cmovo
push
cmp
pop
pusha
add
pop
push
bound
and
xor
in
push
fisubl
je
int3
sub
xchg
pop
mov
add
cmc
arpl
xchg
in
cld
jbe
sub
lahf
xchg
movsb
in
add
mov
insl
out
push
shlb
fidivrl
jecxz
sub
push
cmp
out
xor
add
sbb
push
sbb
push
cmpsb
stc
lea
add
push
fdivrl
sub
push
fsts
je
rcr
mul
sbb
rclb
in
add
sub
jle
mov
mov
gs
sar
popa
std
add
aam
add
mov
xchg
xchg
lea
xor
in
mov
dec
cli
scas
movsl
loope
add
out
push
lcall
inc
ja
in
jbe
xor
rcrl
pop
rorl
mov
dec
add
rcrb
adc
and
sub
nop
cltd
pusha
decb
mov
sub
repz
into
adc
xchg
adc
sti
dec
loope
or
popf
mov
pop
adc
xchg
mov
add
cmp
mov
call
das
sub
decb
sub
cmp
popa
pop
xor
in
insb
incb
inc
push
insb
add
sbb
fwait
cltd
xchg
test
orb
and
insb
add
inc
inc
mov
sub
and
incb
js
dec
fdivrp
or
adc
cmp
add
call
mov
inc
add
cltd
fwait
cltd
jge
sbb
add
mov
bnd
add
push
in
cmpl
scas
mov
add
pop
fsubrs
inc
add
mov
lcall
test
cmp
sti
mov
pop
lods
cld
out
mov
mov
push
add
aam
pop
and
incb
jl
xorl
insb
in
rcr
jae
pop
lea
cmp
adc
pop
pop
pop
adc
sub
and
push
xchg
sub
incb
mov
pop
and
mov
dec
imul
pop
aas
pop
cmp
add
icebp
and
es
in
jp
insl
aas
js
outsl
test
ss
dec
xor
mov
out
adc
adc
mov
push
sub
fisubrs
out
iret
pop
rcrb
or
incb
decb
imulb
cmc
mov
fists
sbb
mov
ds
lcall
pusha
xchg
sahf
cmpsl
test
es
popf
lcall
repz
leave
stos
rorl
add
insb
add
and
data16
push
mov
lret
mov
rorl
pop
lods
lock
fiaddl
mov
xor
add
xchg
mov
push
leave
jecxz
scas
aas
cwtl
pop
mov
push
fstp
je
rol
in
lods
mov
shlb
div
fcoml
cmp
in
add
jmp
rcrl
or
pop
cmp
dec
outsb
out
out
int3
jge
fwait
xchg
mov
pop
out
movsl
add
adc
add
sub
testb
fsub
jo
jmp
jo
add
xor
std
lret
xlat
pop
insl
inc
icebp
jle
push
loope
inc
mov
fs
incb
jb
add
imul
xor
xchg
or
sbb
pusha
pop
inc
jo
dec
int
insb
incb
xchg
scas
pop
pop
jns
loope
add
xor
mov
cwtl
flds
dec
add
arpl
leave
je
and
leave
or
decb
push
jge
int3
sahf
adcb
adc
push
jp
xlat
loop
scas
fmuls
ja
push
jmp
pusha
out
jns
push
pop
das
fcoms
jnp
xchg
jae
jecxz
jbe
enter
filds
decb
jno
shrb
addb
outsb
add
mov
inc
adc
mov
in
adc
ja
cs
mov
mov
inc
mov
mov
jle
or
xor
cmp
sub
inc
lcall
pop
mov
inc
add
imul
incb
pop
dec
add
imul
add
pop
mov
std
fnstcw
jb
stos
inc
in
xchg
test
and
daa
mov
repnz
lea
jp
ret
inc
popa
dec
sub
incb
add
data16
es
addr16
xchg
loope
into
call
cmp
sbb
pop
inc
jns
xchg
aam
aad
or
mov
out
or
ljmp
in
mov
aas
mov
dec
ds
addr16
pushf
jge
lods
jp
jbe
cmpsl
push
push
add
lods
add
jo
pop
cmp
repnz
lds
dec
add
sahf
and
sub
push
daa
mov
aam
jmp
fst
aas
pop
xor
pop
into
xchg
push
es
push
hlt
and
clc
jl
inc
dec
add
inc
add
push
popa
or
sbb
cmpb
icebp
adc
pop
xchg
cmp
nop
cld
xchg
push
repnz
sbb
sti
mov
adc
dec
add
fnstsw
and
incb
lret
inc
inc
data16
arpl
jne
mov
mov
loop
add
jg
sbb
push
inc
add
pop
roll
cmp
sub
les
dec
push
sub
fmull
add
je
fs
sub
movsl
xlat
gs
ds
mov
imulb
mov
imul
incb
jae
adc
mov
popf
shrl
decb
add
xchg
add
xchg
inc
inc
or
aaa
out
in
in
push
mov
mov
daa
pop
adc
decb
gs
or
mov
lods
insb
add
ret
or
cmp
incb
dec
incb
ret
add
insb
add
lea
inc
mov
popa
lods
outsb
add
mov
add
insb
add
repz
rcl
cmpsl
sbb
inc
add
add
outsl
fwait
daa
pop
es
xor
adc
and
negb
es
jp
out
mov
xchg
cmpsb
fistl
adc
mov
decb
jno
movsl
adc
xor
inc
lcall
data16
ja
stc
fisttpll
cmp
cmpsl
inc
add
inc
inc
fcoms
ret
clc
add
incb
xchg
cmp
xchg
fistpll
clc
jbe
cmp
sahf
add
jo
xchg
pop
fs
outsb
add
sbb
ja
lret
in
mov
jb
xor
mov
fnstcw
fwait
out
adc
fisubs
cmp
fwait
mov
and
sbb
rol
push
pop
xchg
ret
sub
mov
mov
xor
repz
int
sbb
subl
gs
insb
mov
cmp
hlt
pop
xor
jl
inc
outsb
add
jle
call
aad
leave
mov
inc
je
cmp
mov
push
mov
ljmp
sub
push
sti
xor
and
stos
xchg
mov
movsl
das
outsb
add
sbb
add
mov
scas
ds
es
incb
aad
mov
cmp
lret
rcll
xchg
int
stc
shlb
divb
sbb
lahf
sub
push
push
leave
mov
mov
fidivl
testb
idivl
decb
incb
mov
sub
incb
ds
xor
lea
pop
ljmp
mov
scas
sbb
mov
cmc
icebp
bound
mov
jae
lcall
jmp
inc
add
mov
rcr
divb
es
push
jle
mov
outsl
std
mov
mov
fadds
stos
mov
ficoml
mov
lea
dec
dec
test
dec
sub
in
mov
add
and
pop
ds
ja
pop
and
decb
mov
add
hlt
push
arpl
decb
mov
loope
movsb
jecxz
add
inc
fwait
stos
jp
ljmp
shl
jne
add
sahf
add
arpl
cmp
adcb
loopne
clc
stos
addr16
add
clc
arpl
pop
mov
mov
xchg
scas
in
in
ret
pusha
mov
pop
cmp
divl
aas
cltd
push
test
pop
inc
data16
inc
add
int3
inc
adc
xor
fildll
shrl
sarb
lcall
decb
out
mov
cwtl
imul
add
divl
mov
or
xchg
add
jle
jno
xchg
dec
cmc
xchg
fstps
jecxz
push
inc
xchg
push
jmp
adc
add
inc
clc
dec
mov
test
out
mov
decb
add
xlat
data16
mov
popf
std
push
iret
bound
incb
push
fwait
or
sub
decb
das
add
call
inc
add
inc
jno
in
jmp
cmp
pop
ret
inc
mov
dec
add
je
and
dec
mov
scas
cwtl
in
sbb
aad
clc
mov
push
or
jl
sub
sbb
iret
clc
jecxz
neg
inc
loopne
rolb
add
mov
test
jb
mov
iret
inc
aas
adc
ljmp
add
dec
add
add
in
or
outsl
jne
sahf
sarb
addr16
sub
adc
jno
inc
add
cmp
xor
add
clc
and
mov
psrld
pop
nop
fsubl
nop
call
dec
push
dec
enter
cli
cli
cmp
jmp
ja
scas
repz
jecxz
add
cwtl
fbstp
mov
mov
add
or
pop
punpckldq
aam
jne
xor
sti
jno
lods
in
movsb
ds
dec
add
out
cld
add
mov
add
adc
pop
adc
lock
sub
adc
fstl
adc
mov
icebp
jl
add
inc
add
mov
add
inc
popa
outsl
xlat
aad
add
pop
dec
mov
adc
arpl
cmp
fwait
jg
inc
decb
cmp
mov
imul
pop
add
cmpsb
and
imul
mov
std
daa
jp
shll
scas
daa
or
mov
jb
test
repnz
push
incb
jge
popf
les
adc
cmp
jmp
jae
outsb
add
pusha
add
aaa
aam
inc
in
dec
sbbl
mov
and
sub
inc
arpl
loopne
scas
mov
and
push
fcmovnb
and
dec
jb
add
mov
movsb
mov
icebp
js
mov
mov
adc
push
loope
lods
ror
mov
xor
pop
add
leave
push
cmp
add
decb
add
xchg
jnp
adcl
add
adc
adc
dec
ljmp
jle
push
inc
push
inc
add
int3
dec
movsl
xchg
add
mov
xor
das
push
lods
aam
das
xchg
fistps
cltd
loope
dec
and
inc
xchg
add
jmp
jnp
cmc
test
cmovno
add
adc
mov
xchg
jns
cmp
fstl
add
add
test
lahf
push
mov
jmp
sbb
lcall
ret
mov
pop
imul
lcall
repz
cs
outsb
add
or
pop
and
out
fstps
inc
cwtl
in
inc
xchg
push
cmp
mov
mov
mov
inc
mov
lahf
pop
adc
cli
xor
jbe
imulb
hlt
out
adc
xor
jmp
sbb
outsb
add
and
test
ja
dec
call
jl
dec
add
and
rolb
xchg
imul
push
dec
movsl
xchg
adc
mov
jmp
mov
adc
cmpsb
hlt
xchg
xchg
mov
pop
sub
decb
test
cltd
pop
out
cs
sarb
pop
sbbb
cltd
mov
loopne
add
sub
add
add
movsl
test
sbb
dec
pop
es
test
jae
jge
scas
and
ss
sahf
in
out
add
dec
add
adc
add
mov
fimuls
cs
pop
lock
fwait
adc
cli
clc
pop
stc
adc
push
incb
pop
fcomps
cmpb
nop
out
inc
and
frstor
data16
or
jge
fcmovne
nop
pop
dec
addl
pop
pop
rorl
lods
dec
in
icebp
inc
add
repz
movsb
movsl
pop
jecxz
ss
push
add
std
jle
mov
movsb
push
add
xchg
jmp
xor
cs
das
cld
in
cs
cmp
cld
inc
pop
and
mov
adc
sub
sahf
dec
adc
aad
mov
les
decb
movsb
or
inc
ret
pop
aam
adc
inc
arpl
test
or
jmp
ss
mov
cmpsb
mov
cmpsb
scas
dec
jp
incb
add
rclb
xchg
repz
iret
int3
pop
add
lcall
cmpsb
ds
bound
in
es
es
sarb
add
pop
es
sbb
jp
fldl
jae
and
mov
movsb
or
decb
scas
jecxz
imul
fistl
pop
jg
inc
gs
mov
xlat
jle
add
clc
clc
js
or
jge
or
push
adc
pop
add
cmpsl
mov
pop
not
xlat
add
sti
xchg
rcl
lea
dec
and
stos
cmpsl
inc
popf
cmp
jo
add
xor
dec
pop
or
dec
inc
add
xor
stos
jmp
in
adc
lods
jns
jnp
mov
add
incb
add
and
pop
cmp
gs
jns
add
sub
pop
out
testl
int
aam
add
scas
call
adc
add
jg
mov
popf
lahf
jbe
int
es
decb
push
push
jbe
inc
pop
fwait
orl
mov
add
out
lahf
xchg
ficoms
imul
or
xchg
xor
pop
add
nop
ljmp
mov
adc
dec
and
push
loopne
add
subl
iret
jne
fs
cli
decb
and
decb
inc
add
xor
decl
jecxz
pop
imul
jp
xchg
dec
add
sub
sub
ss
add
loop
and
testb
lds
incb
dec
mov
decb
dec
lods
mov
or
or
add
in
pop
cmp
decb
test
jmp
imul
lods
jnp
out
inc
and
add
add
