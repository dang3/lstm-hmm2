les
dec
add
mov
sub
add
xrelease
outsl
jbe
cmpsb
add
xor
lret
adc
inc
xor
jmp
or
add
test
push
add
add
daa
xor
pusha
add
mov
add
add
jno
add
fildll
add
add
hlt
add
add
loopne
test
arpl
cmp
sub
mov
add
adc
cld
cmp
fisubl
add
jns
les
and
add
xchg
add
dec
mov
mov
add
add
add
gs
adc
dec
mov
adc
mov
xchg
push
add
add
xchg
pop
push
mov
ret
cmp
add
insl
icebp
scas
sbb
mov
mov
loop
inc
add
add
mov
mov
lahf
cld
popf
test
or
sti
lock
addb
in
data16
add
inc
enter
sub
mov
test
mov
call
jmp
sbb
and
bound
mov
adc
mov
aaa
push
add
add
add
lock
mov
mov
add
pop
and
mov
jnp
sub
dec
and
mov
jne
iret
and
mov
add
lret
outsb
xchg
sbb
iret
loop
insb
and
mov
add
cmp
add
add
add
mov
pop
pop
inc
add
add
pop
pop
adc
and
add
add
mov
add
dec
push
dec
mov
test
dec
shr
add
mov
xchg
pcmpeqd
lea
mov
and
pusha
add
and
mov
push
and
outsb
icebp
xchg
data16
outsb
clc
or
lret
lret
mov
jl
push
add
add
mov
inc
add
jecxz
adc
or
pushf
aas
popa
out
insb
jmp
add
lret
sbb
pop
push
jp
add
lcall
adc
aaa
leave
shll
push
hlt
add
sub
dec
and
add
pop
les
rolb
xchg
cmp
push
add
inc
jns
shrl
add
adc
add
fsubl
add
and
mov
stos
fadds
mov
cs
pop
mov
adc
mov
dec
adc
shll
add
add
add
nop
add
add
add
push
add
bound
mov
add
mov
js
push
add
testb
jns
ficoml
adc
fisttpll
inc
add
test
sbb
sbb
movb
sbb
sbb
add
add
sub
add
add
add
cmpsl
js
out
mov
mov
repz
add
fnstcw
in
insb
jbe
inc
add
or
cmc
mov
test
cmp
add
jne
sub
mov
mov
adc
mov
pop
xchg
add
inc
jne
add
add
add
cmp
add
adc
pop
rolb
popa
inc
pop
dec
push
lds
push
add
cwtl
insb
mov
push
repnz
push
outsb
sub
dec
cmp
add
mov
push
add
ja
fnstsw
add
mov
mov
pushl
rorl
ret
out
movsb
add
bound
mov
add
cmp
xlat
lds
inc
add
das
and
mov
or
mov
hlt
add
mov
xchg
add
cmp
add
add
addb
cmpsb
add
adc
jg
add
pushl
add
imul
add
lea
cmp
sti
add
jle
aam
sbb
add
out
add
add
add
icebp
movsb
add
dec
xor
sbb
divl
ljmp
add
stos
pop
sub
lds
pop
add
pop
xor
pusha
add
add
add
sub
pusha
add
add
leave
mov
push
add
mov
fsubs
add
mov
fiadds
add
mov
or
lahf
mov
xchg
add
rolb
push
add
mov
movb
addb
add
outsl
mov
mov
xchg
or
mov
sub
push
push
push
cld
call
sub
mov
push
imul
pop
movzbl
cmp
ss
push
push
call
cmp
je
es
lea
cs
sub
mov
es
call
test
jne
jmp
push
lret
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
lea
lea
sub
add
mov
sub
sub
push
pop
push
je
jmp
add
add
add
icebp
xor
dec
sbb
sub
pop
cs
add
inc
add
add
jne
inc
add
mov
les
in
dec
jge
adc
push
add
jnp
cmp
add
rolb
add
flds
mov
hlt
add
xchg
add
or
outsb
rolb
push
push
add
add
push
add
and
nop
add
push
rorl
mov
and
xor
paddq
nop
add
inc
pop
xchg
add
add
cmp
enter
pop
shl
add
add
lahf
cli
pop
in
and
or
dec
jecxz
popf
addr16
dec
sbb
lods
add
mov
xor
add
cwtl
movsl
sbb
mov
lock
jp
push
testb
lods
pusha
add
mov
inc
repnz
fimuls
xor
mov
leave
and
mov
mov
pop
jmp
add
mov
add
ret
mov
sahf
popf
mov
mov
fistps
add
dec
pop
movb
jno
add
mov
popa
sub
add
add
std
add
mov
sub
jl
add
add
inc
pop
repz
add
or
add
add
addb
mov
loop
adc
mov
movsb
add
outsb
movsb
add
jmp
xor
icebp
ljmp
xor
flds
add
ret
inc
add
adc
push
add
sti
push
or
add
sub
dec
mov
cmp
push
add
cmc
lret
mov
push
add
fidivrs
push
add
lret
std
js
push
add
jb
mov
add
sub
adc
add
fwait
mov
pop
pop
jecxz
movsl
jp
and
mov
inc
push
call
roll
add
adc
stc
add
inc
nop
add
ret
out
and
adc
pushf
add
add
mov
and
lret
mov
jne
add
add
jmp
mov
mov
pop
push
add
add
jp
add
popf
popa
cmpsb
add
jg
push
add
fldenv
mov
add
xor
out
dec
dec
aas
lock
add
add
add
and
mov
add
sub
or
add
add
mov
stc
sub
or
sub
add
sbb
jecxz
add
jmp
add
mov
or
bound
mov
add
mov
mov
or
jle
addb
add
mov
add
xchg
es
add
test
jns
xlat
add
mov
add
add
add
lahf
mov
xchg
add
mov
push
add
add
aaa
xchg
add
add
add
xchg
add
mov
leave
xchg
dec
lcall
rolb
decb
jp
inc
add
add
add
jae
mov
sysenter
add
sbb
adc
repnz
add
add
add
add
sbb
xor
push
mov
add
cld
jo
mov
bound
mov
pop
movsl
jp
add
xchg
int3
push
add
and
add
add
add
lea
dec
int
add
add
repnz
rolb
add
add
add
int3
mov
add
add
push
add
dec
je
mov
fs
sbb
mov
add
mov
cli
pop
in
mov
jo
and
add
add
mov
psrlq
add
cmpsl
inc
add
xor
stos
add
add
add
test
add
push
add
add
movb
fadds
je
add
mov
lea
add
add
out
rolb
push
add
jno
adc
xchg
mov
jns
fstps
call
mov
cmp
repnz
push
pop
cltd
ficompl
mov
pop
daa
jbe
fwait
lret
pop
loope
add
jns
dec
sub
add
rolb
adc
pop
testb
in
add
or
test
pop
or
inc
adc
xchg
adc
xlat
mov
imul
inc
add
rolb
push
add
add
add
jns
in
scas
mov
add
xor
dec
xchg
xchg
ret
out
loopne
jns
sub
mov
pop
popl
int3
jmp
testb
xchg
loop
mov
add
push
add
rolb
add
add
add
dec
and
addb
outsb
insb
pop
nop
add
push
es
leave
lahf
mov
movb
add
rolb
rolb
add
mov
add
fidivs
add
add
pushf
push
add
out
mov
add
add
mov
dec
pusha
add
add
movb
mov
add
mov
cwtl
ja
stc
stc
mov
add
clc
movb
ja
add
add
dec
dec
cmp
push
add
dec
push
add
mov
add
adc
and
mov
add
push
add
xchg
add
sbb
inc
add
xchg
test
sbb
mov
add
loop
call
repnz
add
int3
lods
jg
xor
lds
jae
int
add
mov
xor
add
daa
lock
lea
add
dec
into
sahf
jns
mov
shrl
add
push
rolb
and
add
sub
jo
movb
add
add
add
add
inc
add
sbb
dec
and
xchg
cmp
sub
mov
addb
add
and
add
mov
add
push
pop
xor
sbb
rcll
add
pop
pushf
xor
mov
bound
mov
add
add
enter
std
rcrl
xchg
add
add
add
add
ret
frstor
inc
add
sub
loop
push
mov
cwtl
dec
adc
dec
fcoml
cmp
popa
mov
sub
and
pop
adcl
add
ljmp
jae
jecxz
and
mov
jl
add
push
movsl
xchg
addb
xlat
imul
out
pop
xchg
inc
jle
push
add
add
push
jbe
mov
hlt
add
add
out
mov
fcmovne
iret
sub
add
mov
add
loop
inc
add
adc
inc
das
xchg
cmp
insb
xor
leave
dec
stc
cmp
sub
cmp
add
je
call
add
add
pop
sbb
and
add
sub
mov
add
add
loop
outsl
aad
fsub
pop
repz
add
add
xchg
cmp
rcr
adc
xor
pushf
mov
in
call
jb
adc
pusha
add
push
add
mov
add
mov
or
add
pop
push
sub
movb
adc
jge
jl
add
lea
add
loopne
jge
mov
pop
aad
add
add
or
add
cmc
push
add
decb
add
jl
add
scas
add
loop
xor
testb
adc
push
add
add
add
mov
add
push
js
mov
dec
add
add
add
xor
add
lahf
arpl
sbb
add
dec
push
add
cld
and
push
jg
push
add
xchg
add
imul
lcall
add
std
dec
cltd
jno
add
ljmp
mov
adc
xchg
add
lods
jnp
mov
mov
lods
and
adc
aad
and
mov
mov
push
inc
add
add
add
adc
push
mov
add
ja
insb
or
add
mov
pop
sahf
mov
add
inc
push
imul
in
cmp
mov
jl
pop
test
add
loope
jne
xchg
dec
insb
in
sub
ja
out
add
add
mov
sbb
out
sub
sbb
data16
or
fisttpll
adc
add
add
add
out
rcr
icebp
addb
xchg
dec
int
mov
push
add
ret
add
dec
add
aas
dec
sbb
add
add
loop
dec
mov
add
call
push
adc
cmp
jmp
push
add
lods
andl
mov
add
cwtl
and
jecxz
add
loope
out
sub
inc
add
ficompl
xor
cmp
jl
testb
add
add
xchg
daa
sbb
stos
mov
mov
lahf
insl
mov
add
movb
add
add
mov
fwait
repz
lahf
in
jmp
add
add
jecxz
add
add
iret
dec
cmc
out
mov
fwait
repnz
loop
in
idivl
xor
xchg
add
push
in
outsb
mov
std
stc
adc
pop
add
xchg
mov
dec
mov
jne
push
xchg
shll
sub
testb
pusha
add
stos
push
lods
addr16
mov
orl
je
stos
insl
fidivl
add
je
fdivrs
loope
xchg
lea
dec
push
xchg
add
mov
and
popa
pop
xchg
imul
push
pusha
add
xchg
add
mov
cmp
jne
mov
leave
fstps
leave
cmpsb
add
icebp
aad
push
sbb
sub
add
pop
fcompl
sarl
lock
enter
add
add
lea
daa
mov
add
imul
gs
add
testl
cmp
rolb
test
xchg
ljmp
add
mov
and
daa
repz
inc
add
mov
or
add
testb
push
add
bound
mov
in
add
je
jg
pop
jle
xchg
jae
adc
add
fwait
pop
and
add
sbb
clc
sar
add
nop
add
add
jl
add
xchg
stos
inc
add
cmp
add
push
add
testb
dec
jmp
add
adc
jae
mov
jo
mov
test
push
cli
xor
aam
inc
add
pushl
add
inc
add
mov
scas
adc
call
add
add
inc
add
mov
lea
movb
push
dec
mov
pop
add
adc
jo
cmp
stc
push
add
jo
or
nop
add
xlat
xchg
add
hlt
add
mov
cmp
loopne
dec
xchg
add
mov
fnsetpm(287
add
cmpsb
add
inc
add
aaa
add
jmp
jmp
fcoms
mov
inc
add
pop
pusha
add
rolb
lea
popf
or
pop
mov
add
cmp
popf
daa
shr
aaa
jmp
mov
add
lret
push
add
je
xor
xor
xchg
test
mov
pop
sbb
cmp
add
movsb
add
add
push
add
and
add
sti
add
mov
push
add
add
add
add
add
add
imul
gs
mov
dec
rolb
add
mov
mov
test
dec
fidivrl
mov
add
add
outsl
and
mov
bound
mov
and
xor
repz
add
xchg
jmp
int
add
add
add
add
add
test
dec
clc
arpl
inc
add
jb
nop
add
sarl
stos
cmpsb
add
loop
xchg
add
pcmpgtw
xchg
add
test
add
xchg
jns
push
mov
lods
call
imul
insl
inc
mov
pop
add
or
sub
inc
fists
mov
nop
add
adc
aas
adc
aas
push
add
mov
add
stc
push
cmp
jmp
sbb
add
testb
add
add
or
shll
mov
and
in
aaa
and
mov
cld
push
add
les
sub
add
add
addr16
adc
jbe
ds
test
adc
pminsw
mov
add
add
add
or
add
jno
add
add
add
int
add
cmp
and
mov
push
mov
jb
fidivs
cmpsb
add
aad
sub
mov
imul
enter
add
mov
mov
pop
int3
mov
add
add
add
push
add
mov
push
add
stc
lret
outsb
ds
dec
push
add
scas
ficoml
add
int3
sub
add
add
mov
lret
ret
inc
add
std
enter
cmp
and
add
add
jae
add
mov
aam
adc
xchg
add
inc
add
add
mov
fsts
add
sub
add
add
mov
add
add
cld
cmc
sbb
rcl
add
add
dec
sub
out
inc
loop
xor
sub
add
fnstenv
add
int
dec
insb
sub
inc
cltd
and
rolb
popf
xor
cltd
fucomp
xlat
add
mov
add
push
xchg
add
fisttpl
xor
xor
mov
mov
sub
loope
jmp
add
add
data16
mov
push
hlt
add
add
push
lds
test
pop
mov
add
or
mov
add
sbb
add
sub
add
or
scas
sbb
add
sub
add
add
add
add
xlat
add
add
sti
dec
xchg
cmp
bound
mov
cmp
pushf
and
mov
pop
inc
add
sub
add
add
xchg
push
push
or
add
sti
adc
mov
push
add
lret
push
add
mov
xchg
repnz
and
les
addb
add
add
mov
mov
stos
pop
mov
xchg
add
mov
add
popf
ds
mov
adc
ret
or
mov
mov
cmpsb
add
add
jb
scas
addb
nop
add
jmp
add
call
mov
add
ret
cld
test
add
add
cmpl
cmp
add
push
add
int
fldenv
mov
stos
fsubrl
add
arpl
sbb
sub
sub
sti
addr16
add
or
add
mov
push
call
xchg
mov
xor
add
jae
jl
leave
incl
scas
add
add
jbe
bound
mov
add
or
add
add
test
add
push
add
add
inc
add
add
rorl
add
das
inc
in
cmp
outsb
xorl
stos
add
xchg
imul
add
add
mov
jle
imul
shll
in
add
enter
outsl
cmp
or
inc
add
popf
mov
daa
pusha
add
or
pop
nop
add
gs
add
pop
push
add
pop
addb
pmaddwd
add
inc
add
inc
imul
add
inc
add
xchg
int3
sbb
jae
fnstenv
add
aaa
lea
jbe
je
mov
decl
add
sub
push
add
xchg
stos
popa
test
push
add
in
dec
mov
aaa
out
cmp
pop
dec
add
mov
pop
dec
mov
rcr
iret
mov
add
clc
dec
xchg
jnp
cmc
insl
fnstenv
sub
addb
push
and
add
int
lret
daa
xlat
pop
mov
inc
mov
cmp
enter
inc
add
iret
pop
mov
cld
mov
add
add
add
add
insb
addb
mov
pop
lahf
out
cli
mov
add
add
rcll
inc
xor
cltd
adc
leave
into
inc
cltd
inc
add
add
add
pop
movb
pop
xchg
in
mov
add
inc
insl
repnz
mov
mov
stos
dec
imull
add
mov
insl
rolb
shrl
addb
add
rolb
xchg
add
jo
mov
jnp
insb
push
add
leave
adc
lods
mov
mov
scas
test
jmp
jl
xchg
add
add
enter
jne
test
push
iret
xchg
cwtl
popa
jnp,pn
imul
movsb
add
cli
popa
pop
sub
stos
out
mov
and
mov
xchg
add
cmp
pop
sahf
jne
or
add
cmp
add
or
jle
add
repz
mov
aad
or
add
jg
ret
add
pop
and
mov
mov
addb
scas
test
add
add
add
push
add
aad
mov
pop
daa
push
mov
jne
mov
arpl
xor
int3
mov
mov
mov
imul
pop
jns
hlt
add
or
sbb
faddp
add
add
add
jg
add
mov
fstl
shr
ljmp
adc
fistpll
push
add
test
adc
or
out
sahf
mov
add
push
pop
inc
fsubrp
ret
add
push
lcall
jge
addr16
add
int3
cmp
shll
add
add
add
adc
popa
add
add
rol
add
mov
lds
movsl
xor
cld
jle
or
pop
out
sub
add
pop
out
pop
rcrl
add
mov
rolb
inc
add
add
add
call
test
int
adc
testb
fwait
inc
add
ss
ja
add
mov
xchg
add
stc
pop
mov
xchg
dec
mull
shrl
add
ds
jne
sub
inc
and
mov
add
sbb
add
imul
add
push
jbe
popf
xchg
add
fcoms
jp
add
xchg
add
sbb
add
dec
aam
and
xchg
push
imul
test
enter
add
inc
add
fwait
jg
add
add
mov
icebp
mov
pop
push
bound
mov
mov
xchg
mov
add
add
jl
pop
xor
lods
int
in
scas
add
mov
gs
push
xchg
push
add
pop
cmp
push
add
or
cmp
bound
mov
push
imul
adc
mov
mov
push
or
xor
setne
mov
add
xchg
add
adc
or
or
jb
add
cmp
add
sti
jecxz
das
sbb
jle
add
mov
sahf
xchg
add
cmpsl
add
add
xor
pop
dec
pop
daa
xchg
add
add
repz
lahf
into
or
inc
add
js
int3
sbb
add
movb
fdivs
mov
rcll
aaa
sub
add
add
mov
into
js
add
add
push
add
mov
jmp
out
mov
add
ljmp
mov
stos
in
sti
xchg
jge
cmp
insl
add
into
sahf
cltd
cmpsl
gs
inc
add
fdivrl
add
mov
sub
add
push
add
dec
cltd
insb
dec
lret
je
or
imul
add
add
call
int
adc
add
ret
and
mov
jo
sbb
sub
xchg
push
add
ljmp
sbb
xchg
loopne
or
add
dec
in
dec
xor
xor
lret
jmp
std
enter
rolb
pop
pop
jne
inc
repz
add
mov
cmp
fisttpl
or
mov
mov
data16
das
add
mov
ffree
add
xor
sbb
fidivrl
push
add
xor
sub
shll
pushf
push
and
mov
or
and
add
pop
xchg
repz
fimuls
mov
fsubrp
xlat
push
add
mov
inc
cwtl
mov
add
mov
mov
sbb
cld
aas
adc
das
sbb
xchg
jbe
xchg
add
add
inc
add
xor
push
clc
into
daa
push
mov
mov
add
or
mov
rolb
jne
add
and
test
cli
adc
pop
or
or
lret
insl
mov
dec
jg
in
movsb
add
add
ret
rolb
test
adc
add
add
xor
mov
mov
insl
xor
cltd
push
mov
add
jbe
call
cmpsl
add
and
mov
mov
add
xor
fnstcw
and
add
add
mov
and
cmp
add
data16
jo
pop
xchg
add
add
adc
or
inc
add
in
aas
stos
fcmovnu
popa
daa
jo
add
push
repnz
add
add
mov
push
add
mov
lahf
movl
fimuls
or
xchg
add
add
push
enter
and
sahf
mov
test
add
mov
lock
outsl
icebp
lea
addb
and
mov
mov
les
inc
in
mov
add
mov
xor
pusha
add
add
stos
test
out
orl
inc
jno
loop
addb
scas
xchg
or
dec
in
ljmp
test
jo
mov
testb
push
add
jbe
jno
movb
mov
add
adc
push
out
add
mov
loope
lret
cmp
lods
pop
je
imul
gs
push
push
add
add
xchg
or
or
aam
or
cmp
gs
jmp
xchg
pop
jge
add
add
int3
push
stos
imul
bound
mov
loop
mov
lret
push
addb
add
aad
ljmp
xor
cmp
add
cld
mov
sbb
add
mov
add
mov
add
mov
addb
dec
stos
test
testb
pop
mov
data16
add
fsub
add
push
mov
inc
add
add
mov
mov
test
push
xchg
add
xchg
mov
fs
lock
movsl
mov
addr16
mov
movsb
add
xchg
add
testl
adc
fbld
add
fildll
sbb
add
and
mov
sub
lcall
add
push
adc
jb
scas
cmp
out
xchg
dec
add
push
add
mov
popa
jae
negl
addb
jecxz
fldl
rolb
mov
fsubs
xchg
add
xor
addb
mov
insl
cmp
mov
add
lea
hlt
add
adcl
daa
push
es
xor
fdivrl
add
dec
lods
lahf
and
mov
fadds
add
push
add
imul
inc
add
add
xor
iret
cmp
jmp
add
mov
add
add
dec
js
adc
cmp
and
fistpl
imul
mov
add
add
jl
add
push
add
add
lret
mov
sbb
add
aad
add
dec
das
xchg
add
add
popf
lods
aas
js
xor
adc
test
lea
into
pop
cmpsl
inc
add
imul
add
add
add
add
nop
add
add
xor
xchg
leave
insb
jnp
xchg
fisubrs
add
add
or
mov
repnz
cwtl
test
add
add
inc
mov
rolb
out
mov
add
inc
add
test
mov
add
in
lcall
add
add
jb
mov
pop
test
adc
add
sbb
jg
fsubrl
add
into
lods
adc
add
adc
rcrl
dec
mov
dec
add
xchg
iret
dec
push
roll
add
xor
push
add
push
add
lahf
xor
lods
in
add
mov
jno
add
in
imul
jne
pop
cmp
add
jno
xchg
push
add
add
xlat
xor
or
push
push
push
add
dec
popa
push
mov
add
int3
lea
add
imul
add
add
pop
push
int
push
add
stos
add
mov
xor
mov
add
and
and
mov
inc
and
mov
sub
sub
add
les
insb
ds
add
pop
pop
enter
add
add
ljmp
add
sbb
cltd
add
and
mov
cld
insb
sbb
xor
les
insl
icebp
push
mov
add
in
push
mov
jmp
dec
lcall
add
dec
cld
or
pop
addb
add
add
add
xor
sub
ror
add
mov
or
movsl
cmp
dec
pop
inc
add
addb
add
les
cmp
scas
mov
and
add
add
mov
arpl
fwait
sbb
or
add
mov
sbb
add
inc
add
add
add
mov
jne
mov
add
addl
fstl
add
add
jmp
pop
int3
js
push
add
add
add
adc
das
mov
cmp
push
cmp
xor
ds
outsb
mov
add
stos
pop
popa
cmpl
aam
dec
cmp
mov
add
add
xchg
fwait
stos
jbe
push
add
xchg
add
lcall
add
stos
or
pusha
add
test
mov
incl
inc
lahf
push
add
xor
inc
add
pop
cmpsb
add
test
pop
pusha
add
add
bound
mov
out
movups
sub
mov
jne
mov
dec
rolb
add
mov
sbb
add
add
add
data16
mov
pop
daa
sbb
xor
aas
xchg
ljmp
add
add
stos
pop
sbb
cld
sahf
adc
fsts
sub
out
dec
addb
out
add
fwait
out
aaa
addb
pop
adc
sub
jo
jmp
pop
xor
lret
fsub
add
mov
mov
jnp
add
push
add
jmp
add
rolb
mov
add
add
rol
add
jo
sub
push
add
ret
add
cld
int
mov
insb
pop
rolb
push
add
rolb
popa
jnp,pn
aam
insb
faddl
std
or
sub
add
aas
lods
ret
cmp
sub
add
add
add
addb
aad
add
popf
mov
xchg
or
cltd
movb
add
std
mov
add
fisttps
add
sub
repz
sbb
pop
aam
cmpsl
stos
sahf
adc
rcll
add
add
mov
mov
sbb
testb
add
add
ja
jecxz
jno
int
std
out
pop
add
cmp
movsb
add
add
inc
add
xchg
mov
fsubs
mov
into
mov
add
xchg
add
push
add
aaa
pop
sti
in
arpl
add
xor
jae
repz
add
arpl
add
ljmp
xor
jmp
lods
xchg
add
add
sbb
ret
jl
pop
xchg
xchg
add
inc
add
xchg
add
iret
fmul
je
mov
ret
add
sub
mov
ds
push
outsb
inc
mov
add
cmpsl
mov
dec
xchg
mov
mov
adc
sbb
or
bound
mov
mov
adc
mov
cltd
out
push
clc
ja
and
jns
mov
add
jp
mov
int3
push
sbb
jmp
and
push
mov
mov
adc
hlt
add
mov
outsb
pushf
les
int3
lahf
aam
jge
add
mov
add
outsb
add
cltd
push
add
stos
pop
jno
add
add
jmp
out
or
push
add
add
push
cmc
dec
out
jecxz
add
inc
cmpsb
add
xchg
adc
pop
jmp
test
xchg
ficoml
sub
mov
sub
xchg
xchg
pop
std
fcoml
lret
fldcw
push
fisubs
add
mov
and
dec
loope
jecxz
add
in
add
and
mov
add
xchg
lock
sbb
nop
add
add
sub
dec
pop
leave
js
inc
xchg
inc
ficompl
sbb
add
cmp
add
out
out
shll
push
jne
mov
mov
popf
or
add
add
imul
inc
add
or
rolb
stos
mov
adc
jge
nop
add
ds
cmp
rolb
add
ret
hlt
add
lahf
xor
and
add
add
add
inc
insl
cmp
shll
rolb
rorl
inc
cmp
addl
or
push
lcall
jo
into
std
mov
pop
aam
data16
int
and
pop
insb
rolb
out
push
add
mov
add
stc
lahf
dec
loopne
xchg
push
or
dec
sbb
addb
mov
jno
out
gs
out
mov
xchg
add
out
mov
xorl
xchg
add
mov
cld
push
add
xchg
fistpll
push
push
add
add
inc
add
add
push
add
jge
fldl
add
xchg
out
add
dec
xchg
aam
or
pop
ret
jno
add
cli
adc
add
add
add
shll
add
push
add
loope
add
mov
ss
pop
roll
add
mov
mov
add
add
push
test
mov
repz
xchg
enter
cmp
test
add
add
mov
mov
or
cmp
popf
or
add
inc
add
lea
jg
shll
fcoml
push
add
add
jmp
push
mov
lret
add
dec
clc
movsb
add
add
add
int
outsb
and
mov
xor
repnz
pop
ja
jg
pop
or
repnz
dec
out
adc
adc
mov
rorl
inc
add
add
subps
add
rolb
icebp
dec
repz
inc
cmc
cmp
sbb
lret
testb
repz
dec
les
js
bound
mov
mov
in
aas
add
aas
lea
fsubr
jle
outsb
sbb
mov
add
fldt
add
add
arpl
imul
pop
hlt
add
cmpsl
in
stos
push
add
push
add
add
add
add
jle
add
mov
addr16
adc
in
cli
inc
add
je
pop
lods
mov
add
adc
imul
add
jecxz
add
les
addb
leave
cwtl
pop
outsb
popa
xchg
add
sbb
add
ljmp
sbb
pop
cmp
cmp
sbb
loopne
aad
imul
add
jle
dec
xlat
mov
adc
push
add
add
sti
or
add
xchg
ljmp
fisubl
sbb
add
add
movsb
add
mov
sub
ja
add
movb
mov
movsb
add
jp
outsl
pop
outsb
popf
jge
add
add
mov
testb
dec
in
add
fcmovu
push
push
add
xor
icebp
testb
data16
test
cs
shll
xlat
mov
scas
add
and
mov
int3
data16
mov
adc
sti
sub
imul
stos
push
pop
insl
je
les
jb
aas
pop
dec
lods
cmp
sbb
cmc
jge
lcall
mov
dec
adc
fnclex
add
add
add
lcall
xor
mov
mov
mov
fdivr
or
addb
sub
mov
outsl
out
and
mov
cmp
mov
dec
dec
fcomi
add
add
add
dec
adc
add
loopne
adc
jle
daa
popa
mov
add
adc
add
add
cld
cmp
and
add
sub
add
add
and
sbb
ret
add
add
push
add
stos
insb
das
in
call
add
add
xor
sbb
rep
imul
add
jmp
sbb
repz
add
add
add
std
mov
adc
xchg
insb
add
mov
in
mov
in
ror
dec
arpl
sahf
repz
pop
lret
scas
or
mov
sbb
into
fmul
or
sbb
int
or
add
push
add
mov
bound
mov
dec
pop
in
jne
lret
invd
cld
pop
sbb
fidivrl
add
sahf
push
pop
pop
mov
ret
out
dec
inc
sbb
add
mov
pushf
ja
sahf
pop
scas
in
outsl
pop
adc
fimull
sub
add
mov
push
xor
add
add
xchg
js
jne
psllw
add
nop
add
add
sti
ret
add
lods
lds
fstl
add
pop
pop
mov
jo
test
cmpsl
push
add
mov
ja
xor
or
add
pop
push
add
add
push
sub
add
push
add
dec
aaa
dec
add
dec
repz
add
cli
ja
add
add
or
add
das
push
dec
in
popa
mov
rolb
addr16
or
addb
add
add
jmp
add
add
and
out
jp
add
jl
add
pusha
add
add
pop
pop
xor
cmpsl
jb
addr16
pop
xchg
mov
bound
mov
pop
ja
adc
xchg
add
mov
add
add
mov
add
imul
mov
je
int3
dec
std
xchg
dec
push
add
and
mov
fld
add
ja
test
loope
add
cwtl
insl
ret
movb
in
mov
dec
cmp
ret
cmpsl
add
jne
add
lods
mov
add
lea
add
enter
push
into
xchg
adc
mov
mov
cmpsl
lea
mov
add
mov
fwait
xor
jne
mov
aaa
push
add
jle
rolb
leave
pop
jnp
pop
in
or
cmpsl
and
add
and
add
fcomp
movsl
mov
add
mov
adc
movsb
add
stos
push
cmpsl
jae
add
sbb
and
mov
cli
jo
push
imul
or
add
add
lock
mov
mov
lods
xchg
xchg
pop
jge
sbb
inc
add
iret
lahf
sub
pop
ss
add
testb
add
or
addr16
pop
jecxz
push
mov
add
add
add
dec
adc
addb
add
inc
nop
add
add
mov
add
add
in
les
fstl
adc
or
lret
lods
rolb
push
push
imul
pop
js
add
mov
shll
dec
lods
inc
mov
and
and
mov
jns
jmp
jle
cmpsb
add
cmp
cmpsb
add
cmp
mov
rcr
movsb
add
xor
int3
int3
imul
cmp
add
mov
dec
int
int3
shrl
movsb
add
xor
push
adc
shrl
dec
nop
add
mov
cltd
add
aaa
mov
sbb
add
add
aad
cmp
sub
add
pop
mov
xchg
pop
scas
jae
xor
std
and
or
add
sub
sub
push
mov
push
add
push
pop
push
add
jecxz
add
rolb
lea
mov
cli
pop
pmaxsw
mov
addb
xchg
inc
gs
addr16
add
add
addb
push
in
add
or
jl
add
add
lcall
sub
add
in
and
mov
mov
pop
inc
rcll
xchg
lods
inc
std
sub
add
adc
add
fldcw
xchg
aas
outsl
adc
sub
add
aas
daa
les
jo
and
inc
add
jg
add
add
add
add
mov
sub
xchg
add
add
pop
in
jle
lret
pop
adc
adc
or
add
jbe
hlt
add
mov
das
cmpsb
add
std
push
xchg
add
rolb
addb
jbe
inc
mov
jl
int3
xor
adc
mov
push
aas
xlat
jge
js
movb
ds
lea
lods
and
add
jge
mov
add
add
add
mov
out
jmp
add
mov
add
add
add
inc
add
outsl
sub
mov
mov
push
add
ja
adc
stos
ds
push
testl
cmp
lea
push
stc
mov
movl
sbb
addl
add
and
clc
xchg
add
adc
lods
mov
xor
add
ljmp
jbe
jg
push
add
les
dec
and
add
inc
movsl
aas
into
jbe
fisubrs
push
add
mov
jmp
aad
aas
ljmp
add
add
add
add
or
adc
call
sub
mov
push
add
adc
adc
lea
sqrtps
imul
mov
cmp
lret
movsl
push
add
loopne
and
add
add
imul
popa
jnp
add
add
inc
outsl
push
add
movb
inc
cmp
mov
jecxz
jae
cwtl
jbe,pn
loop
cmc
adc
xchg
jecxz
into
xchg
inc
cltd
rolb
pop
mov
mov
sub
inc
or
add
add
cld
scas
xor
push
cs
add
push
adc
adc
mov
mov
mov
mov
add
add
in
jno
add
add
cmp
pusha
add
popa
rolb
sbb
sbb
add
mov
mov
out
pop
jle
out
sahf
jmp
add
lock
adc
inc
add
xchg
add
cltd
lds
add
xchg
jmp
mov
and
and
pushf
ret
loope
add
add
add
xor
scas
out
sbb
add
pushl
mov
mov
cmp
aad
out
aam
and
mov
leave
mov
mov
mov
ja
xchg
add
jmp
dec
jnp
jmp
add
mov
enter
rolb
test
les
scas
ja
testb
add
cwtl
repnz
cmp
push
add
scas
out
add
adc
sbb
add
stos
into
jae
xor
push
add
cs
test
jle
pushf
xchg
insb
xor
add
inc
mov
dec
push
add
xor
push
mov
sti
pop
insb
sarl
rolb
add
lods
aas
movsb
add
mov
or
or
popf
adc
add
xor
scas
push
add
add
sbb
adc
lock
int3
in
adc
inc
rolb
add
add
mov
jecxz
xor
std
jg
cmp
add
pop
test
add
js
add
add
ds
movb
cwtl
jo
xor
add
cld
dec
xor
loopne
lods
or
mov
popf
sbb
mov
pop
sub
add
add
mov
dec
pop
pop
mov
sbb
add
add
jnp
add
lret
mov
mov
add
ret
clc
frstor
add
add
push
stc
jns
add
jp
mov
sti
dec
push
outsb
into
jnp
addb
add
test
lcall
push
add
gs
imul
lods
movb
mov
add
mov
das
pop
movsl
fs
add
repz
sbb
mov
test
add
cmp
mov
jo
out
pop
dec
push
test
push
add
sub
add
inc
add
sub
inc
add
mov
out
mov
or
mov
shl
data16
mov
add
add
or
add
mov
add
ljmp
jl
add
xchg
pop
lock
ljmp
dec
mov
std
cmpl
add
jmp
stos
xchg
push
add
xor
stc
fdivrs
mov
js
enter
out
fwait
enter
jl
add
pushf
insb
in
ret
add
add
add
add
mov
dec
mov
add
daa
dec
mov
ja
add
add
cmp
xchg
add
iret
sub
add
mov
adc
jb
test
jmp
add
jge
add
jp
int3
mov
and
sub
inc
add
inc
add
cs
add
in
lea
or
arpl
mov
sbb
jl
cmc
bound
mov
add
add
add
add
xchg
add
xchg
push
addb
cwtl
ret
jno
pop
movb
test
dec
dec
sub
call
add
mov
sbb
or
stos
lds
nop
add
mov
icebp
lds
add
in
scas
pop
loopne
adc
rolb
cmpsb
add
les
push
inc
std
cld
sub
rolb
icebp
inc
lods
cmp
mov
popf
sub
cmp
mov
push
sbb
mov
ss
cmpsl
insb
mov
cmpsb
add
mov
pop
pop
int
stos
xchg
add
in
rorl
mov
inc
add
add
sub
mov
dec
add
fwait
divl
xor
lds
or
add
rolb
sub
jns
add
mov
test
and
add
std
xchg
and
addb
add
add
cmp
loopne
inc
add
push
in
int3
xchg
ss
adc
insb
lret
cltd
xor
xor
jbe
mov
xor
ljmp
mov
jle
xor
sahf
imul
mov
or
add
jns
inc
add
add
cmp
cld
adc
scas
or
push
add
mov
pop
cld
int
adc
and
or
and
loopne
or
xchg
pop
add
mov
addb
aam
clc
aaa
inc
inc
cmpsl
push
add
add
add
mov
sub
lds
insl
xchg
add
out
dec
add
pop
sbb
dec
jge
add
add
enter
mov
mov
add
jnp
pop
hlt
add
fdivrp
mov
sub
add
jo
pop
push
add
pop
gs
mov
add
gs
sbbl
add
add
scas
mov
lods
test
add
aas
popa
push
pop
xchg
add
mov
rolb
pop
lret
dec
push
add
loope
push
fcmovnu
push
add
fisttps
and
mov
repnz
add
xchg
add
add
loopne
test
mov
push
out
inc
imul
mov
mov
out
push
mov
lds
mov
jno
cmp
xchg
xchg
xor
and
testb
xlat
movsb
add
mov
mov
xchg
mov
clc
imul
add
xchg
inc
add
mov
aas
cld
pop
hlt
add
fistl
das
sub
popf
pop
pop
loop
lods
or
mov
sbb
or
push
das
bound
mov
push
and
sub
add
mov
add
mov
fimuls
push
dec
rolb
cwtl
pop
insb
xchg
addl
sbb
data16
push
ss
add
rolb
cmpsl
xchg
int3
std
pop
test
cmp
and
mov
pop
pop
push
cmp
mov
mov
addl
mov
or
ret
mov
mov
mov
add
inc
add
mov
push
add
add
test
push
out
dec
xchg
movsl
push
xchg
and
mov
and
mov
add
mov
add
or
add
sbb
nop
add
jmp
cmpsl
inc
add
xchg
add
test
in
xchg
rolb
cwtl
clc
jne
filds
mov
mov
add
cmp
xchg
cmp
add
pop
in
push
loopne
call
cmpsl
mov
lcall
pop
or
int
lods
sbb
and
add
add
cmp
add
xor
int
add
xor
add
push
mov
fcomps
repz
xchg
sbb
add
cmp
shrl
sarl
jb
leave
sub
adc
push
add
addb
xchg
add
orl
add
mov
loopne,pt
mov
xchg
xchg
movsl
pop
cmp
xchg
add
sbb
adc
pop
loop
fucom
add
add
add
jnp
add
cmp
sub
sbb
add
or
xor
enter
xchg
add
or
pusha
add
sbb
jno
shl
add
add
out
add
mov
add
add
lock
mov
jns
add
add
js
lock
add
push
loop
pusha
add
rolb
call
sub
add
add
jecxz
add
sahf
xchg
mov
and
mov
mov
add
dec
enter
add
or
add
out
dec
pop
popa
push
mov
lds
jle
or
lret
add
add
ret
jno
ljmp
add
aaa
push
lret
pop
mov
add
add
mov
in
ret
push
repnz
sub
rcll
rolb
fildll
addb
jae
add
adc
add
sbb
sbb
add
add
enter
mov
stos
mov
mov
pop
pop
pop
and
add
add
add
aam
test
mov
lret
xor
xor
mov
push
add
pop
adc
jbe
push
loope
and
mov
add
adc
add
jp
add
loope
add
sbb
imul
repnz
fsubr
sti
movsl
insl
mov
add
mov
push
inc
add
add
push
add
icebp
add
add
xor
mov
mov
sbb
test
ficoml
inc
xor
addb
add
mov
cmp
jno
add
mov
jnp
xchg
add
or
add
add
and
mov
add
roll
inc
add
mov
into
mov
dec
mov
add
mov
scas
and
add
adc
mov
sub
rolb
add
add
scas
inc
or
add
jo
adc
imul
cmp
add
hlt
add
inc
add
add
add
add
add
cmpsl
jne
pop
ja
call
xlat
je
popa
cmp
add
jecxz
pop
xorl
in
lret
add
inc
hlt
add
add
jl
into
testb
add
add
add
data16
xchg
add
mov
sbb
jne
inc
add
add
testb
push
add
jl
testl
repnz
add
sub
add
insb
ljmp
sarl
cmpsb
add
adc
add
push
add
add
or
jmp
dec
pop
inc
cli
xchg
adc
add
fisttps
add
mov
pop
inc
add
ljmp
cmp
int
add
add
push
add
add
xchg
add
inc
pop
lret
inc
add
out
cmp
ret
add
sub
push
push
cli
pop
xchg
clc
mov
push
test
cmp
fwait
pop
or
add
pop
orl
push
iret
bound
mov
mov
xor
pop
add
ror
mov
add
les
add
mov
mov
add
mov
add
addr16
fisttpl
call
int3
mov
add
cmpsb
add
int3
test
pushf
inc
add
xchg
mov
add
add
mov
xchg
mov
add
jge
add
xor
das
push
jbe
dec
pushf
aaa
cmp
add
cmp
add
rcll
add
adc
stos
or
add
fistps
adc
lock
adc
add
int
sbb
pop
and
fistps
testb
rolb
stc
stos
je
xchg
add
out
sub
dec
sub
loop
fdivl
and
jle
pusha
add
testb
add
add
mov
add
sahf
arpl
pop
mov
testb
add
add
fsubrl
test
add
lods
dec
jmp
loop
adc
add
mov
add
lret
insl
cmpsl
shll
lret
add
pushf
lds
pop
dec
movsl
dec
dec
xor
cld
jnp
add
xchg
add
mov
xor
mov
add
cmc
andl
xor
lret
in
fistps
movb
fmul
ret
lahf
and
push
add
loopne
jmp
sub
cmpsl
xchg
add
xor
mov
add
in
pop
je
or
imul
add
or
sub
roll
fcomi
add
add
add
adc
scas
jecxz
lcall
cltd
insb
inc
add
lods
out
testb
mov
add
mov
movsl
dec
push
lret
cs
add
or
not
cmp
addb
inc
fwait
xchg
fildll
addb
sub
adc
add
mov
lock
arpl
or
add
xchg
add
and
mov
add
mov
cmc
add
add
mov
stos
arpl
add
movsb
add
add
sbb
jmp
cli
mov
mov
xor
mov
mov
jne
inc
add
add
mov
insb
push
add
add
add
mov
add
popf
lods
jae
cmc
std
rolb
out
mov
mov
xchg
add
sub
or
jecxz
push
add
push
add
mov
icebp
mov
add
les
icebp
xchg
add
into
jo
pop
push
add
add
mov
add
mov
sbb
add
adcl
add
jmp
call
xor
or
add
cmp
add
dec
cld
mov
inc
cmc
mov
add
xchg
xor
rolb
dec
stos
fnstsw
dec
testb
jo
and
add
call
xlat
cld
icebp
add
add
cmp
jbe
sarl
mov
dec
and
mov
pop
mov
or
xor
add
icebp
cmp
xor
mov
push
add
adc
adc
add
out
stos
cmc
jle
dec
push
add
add
add
jo
pop
int3
roll
pop
jle
add
jo
popf
mov
add
mov
jmp
add
or
out
jmp
and
mov
loopne
pop
test
mov
add
leave
call
push
push
add
add
add
add
add
add
outsb
xor
xchg
pop
cli
push
add
add
add
sub
adc
add
aas
int
ss
cmpl
and
mov
xchg
add
add
iret
shl
cmp
push
out
sbb
cmp
mov
push
and
mov
add
dec
les
lods
or
add
bound
mov
in
dec
jl
pop
mov
leave
sub
mov
mov
movsl
testb
ret
div
and
mov
in
and
pop
and
mov
add
jl
or
lods
std
in
sub
das
push
xchg
adc
add
add
lea
mov
pop
xchg
cld
js
aad
add
data16
mov
xchg
out
mov
cmp
push
add
add
movb
dec
rolb
push
int
add
add
xchg
out
mov
inc
movb
add
jle
sub
mov
and
push
add
adc
jae
add
lods
mov
add
add
add
ja
fsubl
add
add
stos
xor
jbe
gs
cmp
rolb
lahf
mov
in
inc
jbe
push
add
add
add
push
add
add
push
add
mov
stos
movups
fldenv
das
outsb
jl
lahf
mov
and
sti
jne
push
mov
add
stos
mov
ret
add
cld
sub
mov
push
add
je
gs
add
mov
outsl
sbb
push
add
leave
jno
xchg
push
add
add
xchg
add
in
icebp
mov
rolb
int
in
mov
jbe
fidivl
xchg
add
frstor
add
cmpsb
add
cmp
test
mov
pop
mov
or
add
pusha
add
leave
jp
out
popa
xor
add
fimull
or
repz
xchg
movsl
cmpsb
add
pop
cmp
add
jmp
sbb
cwtl
outsb
adc
and
je
iret
jo
dec
jle
mov
in
adc
out
rcrl
inc
add
xor
add
sub
add
add
mov
add
stc
fldcw
xchg
sbb
adc
ss
mov
daa
push
dec
lds
out
mov
nop
add
adc
mov
mov
fmuls
cltd
iret
fwait
xor
fisttps
jo,pt
or
add
or
int3
loop
cmp
add
fisttps
lea
add
lock
dec
cs
adc
cmp
push
aad
add
insb
push
fmuls
stos
sti
mov
loop
lret
call
jb
jbe
dec
pop
shl
and
mov
cmp
jecxz
add
pop
and
mov
pop
push
add
lock
jae
lret
inc
add
icebp
outsl
rolb
cmc
jae
out
out
add
add
add
mov
add
loope
sbb
ja
xor
mov
mov
sbb
add
add
add
add
sahf
xlat
bound
mov
add
movsb
add
sti
jmp
or
add
xor
mov
adc
add
pop
mov
mov
and
mov
add
stc
mov
push
mov
fcomps
jmp
js
xchg
add
push
add
jnp
jg
add
cmp
lods
mov
add
imul
add
add
xchg
cmp
adc
addr16
popf
jl
icebp
add
mov
mov
add
cltd
and
push
mov
add
out
mov
or
mull
outsl
addb
fs
push
out
lods
or
xlat
cmp
xchg
sti
or
sbb
loop
icebp
int
xchg
stos
xlat
or
icebp
addr16
add
add
mov
add
fstp
imul
inc
add
mov
add
mov
in
push
sub
push
or
pop
mov
ljmp
into
dec
xchg
add
add
ror
mov
adc
add
add
outsb
stc
fld
add
mov
mov
sub
mov
jmp
dec
setp
add
out
mov
outsl
mov
add
pop
lds
mov
lahf
in
punpckhdq
adc
sbb
pop
fidivl
outsb
mov
add
add
imul
xor
movsl
lods
addr16
js
test
loop
cs
ja
xchg
add
repz
out
jae
xlat
xlat
mov
notl
add
jecxz
lods
inc
add
mov
call
add
sbb
add
je
aam
or
push
add
pop
nop
add
xor
mov
add
rcr
mov
out
jge
sub
add
pop
scas
jle
je
push
add
out
cmp
mov
add
ja
add
decb
add
das
scas
mov
int3
test
jg
ja
aaa
addb
test
add
pop
pushf
xor
adc
xor
fstps
pusha
add
xchg
add
or
add
mov
mov
add
xchg
scas
mov
cs
add
pop
dec
hlt
add
add
xchg
test
fistl
les
mov
repnz
movsb
add
in
jbe
jge
jl
add
add
or
xchg
xor
enter
mov
js
add
add
add
sub
cli
movsl
push
int
jnp
cmc
outsb
jae
mov
addb
in
xchg
mov
mov
inc
add
push
add
mov
add
mov
mov
add
sbb
push
cmp
pop
call
add
mov
pop
pop
jecxz
lahf
adc
call
dec
pop
addr16
popf
pop
roll
add
in
add
fcmovnbe
add
ljmp
add
add
out
pop
test
adc
cmp
dec
cmc
lret
enter
add
cli
push
mov
add
test
xor
and
mov
enter
pop
lahf
mov
add
mov
fwait
leave
pop
pop
js
add
pop
inc
and
add
add
or
rolb
mov
adc
movsb
add
xchg
jge
dec
in
xlat
test
add
jno
add
jnp
in
mov
test
fisubs
inc
add
into
mov
loop
mov
sbb
inc
add
fidivrl
aad
add
flds
add
cmpsb
add
dec
int3
repz
mov
mov
mov
mov
or
and
add
add
mov
outsb
push
sub
cmp
add
add
xlat
mov
push
add
cs
in
lods
addb
add
or
mov
out
xor
leave
or
jne
push
add
pop
lret
xchg
cli
sub
inc
add
xor
les
movsb
add
decb
add
cmpl
add
pop
sub
xor
or
and
add
cmp
aas
pop
std
out
dec
push
add
aas
loope
sub
xchg
add
inc
or
add
outsl
pusha
add
and
mov
push
mov
lds
pop
stos
mov
add
mov
mov
pop
fsubs
add
add
in
add
je
lcall
dec
int3
dec
int3
mov
xchg
cmp
xor
addb
jbe
ffree
add
add
ficomps
sti
enter
sbb
sbb
add
ja
hlt
add
and
xor
and
xor
sbb
mov
cli
inc
xchg
add
add
ljmp
outsl
jno
repnz
and
test
scas
sub
vmovdqu
aad
cmp
or
add
fwait
lods
sub
sti
pop
stos
cmp
loopne
fmuls
je
cmp
les
cmc
cmpsb
add
incl
pop
and
add
mov
add
add
addb
and
mov
add
add
add
add
add
and
add
pop
jns
mov
sbb
sahf
jmp
cmp
mov
ja,pn
add
scas
fcompl
xlat
movb
add
mov
and
mov
fstps
mov
and
stos
daa
pop
push
adc
loopne
pop
mov
add
xorl
add
pop
cmp
sbb
xchg
add
scas
sub
lret
xchg
mov
xchg
add
or
add
dec
enter
xchg
add
push
mov
jp
les
mov
add
push
add
add
add
mov
jmp
movsl
in
jno
frstor
add
ret
icebp
sti
cmc
in
or
outsl
insl
push
push
mov
aas
fcomps
lock
add
loope
into
js
xor
mov
fadds
and
mov
xchg
add
add
sbb
rorl
dec
mov
in
sub
mov
xchg
push
add
mov
push
movb
add
out
inc
cmpsl
ret
hlt
add
mov
add
jns
fs
add
add
dec
into
sub
repz
add
and
mov
filds
jbe
mov
adc
movb
jo
cmpsb
add
cli
std
add
and
cltd
dec
lods
sbb
cmp
arpl
push
add
sti
mov
push
jno
add
gs
add
lods
add
jecxz
out
pop
pop
mov
fnstenv
mov
adc
add
mov
pop
mov
pop
mov
fcoms
add
out
inc
add
xchg
add
loope
add
add
sbb
add
and
push
or
lea
repz
dec
roll
sti
imul
rcrl
outsb
nop
add
ljmp
mov
xchg
add
add
test
push
add
cmp
adc
mov
push
sbb
lods
mov
dec
ds
add
add
add
add
inc
add
dec
adc
adc
inc
add
add
addb
push
iret
mov
xchg
jns
scas
arpl
add
push
add
mov
mov
mov
adc
sbb
ja
add
add
add
dec
mov
pop
lods
xchg
add
cmpsb
add
imul
test
cwtl
insb
data16
pop
pop
jmp
xchg
add
out
lahf
out
or
add
sub
out
add
xor
fnstsw
call
outsl
enter
inc
mov
js
ud0
lock
in
push
add
cltd
add
mov
add
add
mov
pop
fisubrl
aas
xlat
mov
mov
push
add
add
mov
push
push
imul
jb
cld
inc
add
add
mov
cmc
push
popa
fsubs
mov
or
push
add
add
dec
testl
push
add
jle
out
cli
or
les
sbb
add
leave
add
mov
add
out
inc
ret
cmp
lahf
imul
dec
jae
mov
mov
aas
lea
dec
out
in
lret
iret
ja
ja
cwtl
inc
dec
push
mov
loope
test
cmc
and
mov
dec
or
add
sbb
jmp
rolb
ret
aaa
into
mov
mov
dec
adc
jnp
sbb
mov
add
push
add
add
add
add
sahf
test
lcall
or
cmp
push
scas
mov
add
add
add
add
out
mov
jne
dec
in
mov
add
lea
sbb
lods
loope
mov
addr16
add
mov
sub
xor
cltd
leave
mov
mov
out
ja
add
add
add
add
movsl
jle
add
mov
mov
les
test
repnz
add
push
add
leave
push
xor
orl
sub
cmp
repnz
cmp
add
sub
cmp
ret
and
mov
sbb
add
add
inc
push
add
aad
push
cmp
sbb
int
outsl
bound
mov
inc
add
cli
faddp
add
shrl
mov
xor
xchg
add
lret
xchg
adc
cmp
inc
sub
test
sub
mov
mov
add
add
testb
add
outsb
jmp
in
in
repnz
add
dec
ja
xor
loopne
sbb
pop
fsubrl
pop
add
cmp
add
mov
sub
pop
dec
cld
mov
add
mov
cmp
mov
aam
mov
lea
add
mov
or
movb
push
ja
dec
leave
mov
add
push
add
mov
cltd
movb
fdivs
inc
iret
cli
pusha
add
rolb
xor
sbb
add
or
add
ficoml
arpl
and
mov
add
mov
add
cmp
mov
add
cmp
sbb
add
add
mov
add
sbbl
mov
movb
sub
and
xor
stos
push
adc
add
out
and
push
add
cmc
cmp
add
add
stos
insb
or
scas
mov
jns
popf
mov
sub
add
xor
mov
movsl
mov
add
add
cmp
pop
pop
push
mov
add
add
mov
pop
cmp
mov
mov
mov
ret
pop
jbe
push
add
add
add
push
add
mov
push
add
addb
daa
ljmp
add
outsb
add
mov
repnz
add
xchg
pop
outsb
push
mov
add
adc
scas
add
cs
pushf
pop
jne
xchg
add
add
add
sub
jl
into
test
pop
sti
add
jno
push
inc
adc
xchg
mov
pop
mov
mov
cpuid
add
arpl
enter
add
add
adc
sub
repz
and
pop
call
sahf
or
add
roll
add
insl
dec
fisttps
hlt
add
setg
insb
push
add
mov
mov
add
xchg
arpl
inc
xchg
add
jp
add
or
add
cld
mov
fmull
iret
loope
jp
jae
sahf
roll
pop
les
adc
sbb
add
push
add
daa
cltd
daa
sahf
sub
mov
pop
mov
testb
dec
sub
add
add
mov
add
outsb
mov
mov
mov
add
mul
add
add
add
add
add
add
ret
xchg
dec
jl
adc
aaa
insb
pushf
int
add
cmp
sub
ret
or
add
pop
adc
mov
dec
je
sti
push
add
add
xchg
or
sub
xchg
sahf
ret
jns
cmp
mov
add
adc
orl
fbstp
add
add
mov
fcmovnu
ret
lds
ret
dec
dec
cld
out
push
add
cltd
bound
mov
jp
xchg
xlat
cltd
pop
leave
testl
add
add
fwait
in
cmpsl
mov
add
shll
add
test
xchg
jecxz
add
sbb
xchg
add
dec
inc
add
add
add
xor
testb
add
cwtl
inc
test
cmp
mov
and
add
jle
sub
lds
das
js
arpl
imul
and
cli
push
adc
fadds
push
inc
add
or
mov
mov
xchg
jns
lds
jge
push
add
and
stos
push
add
add
fnstsw
mov
push
add
dec
in
insb
clc
sub
mov
aaa
cmp
repnz
add
mov
pop
dec
fcmovnbe
add
push
sti
push
add
sub
add
aam
hlt
add
mov
mov
push
mov
leave
aas
pusha
add
mov
bound
mov
jno
outsb
lret
inc
or
mov
xchg
add
mov
add
xor
cmpsb
add
and
mov
jbe
ret
cmp
daa
cmpsl
insl
inc
add
mov
pop
imul
mov
xchg
mov
mov
in
inc
add
pop
and
pop
or
les
in
sti
mov
adc
add
add
add
cmp
pop
lahf
rolb
mov
jge
dec
sbb
loope
sub
add
mov
add
add
incl
xor
cmc
in
loope
cltd
data16
add
negl
sub
mov
add
int
test
add
pushf
movsl
mov
mov
roll
and
mov
loope
ljmp
sbb
pop
jmp
nop
add
and
jne
xor
add
inc
cmp
movb
or
rolb
enter
das
xor
mov
popa
loope
sti
pusha
add
cltd
test
cmp
add
out
jnp
ficompl
add
dec
pop
mov
das
fcmove
sti
or
ficompl
pusha
add
add
stos
inc
or
adc
add
lds
jns
sbb
lret
sbb
pop
cs
imul
add
mov
jg
xchg
add
cld
xchg
add
xchg
push
add
add
jg
dec
inc
cmove
outsl
jae
add
pop
sbb
adc
cmp
aas
mov
pop
test
popa
and
adc
gs
add
add
loopne
push
add
pusha
add
push
add
add
fmuls
add
inc
adc
rcll
sti
mov
add
pusha
add
add
mov
pop
jne
add
push
xchg
sub
xchg
andl
jge
inc
inc
xchg
or
std
mov
call
out
mov
cmpsl
inc
add
and
in
inc
add
xchg
add
jnp
mov
rolb
cmp
add
cltd
jae
movb
outsb
lods
ret
outsl
and
mov
and
add
loop
or
add
ljmp
jb
rcrl
push
fldenv
in
popf
adc
out
xor
test
mov
sahf
mov
add
pushl
pop
lods
lea
add
mov
dec
cmp
jae
add
shll
cmp
add
mov
imul
add
mull
add
add
cld
cld
ljmp
pop
inc
loop
add
add
add
cwtl
and
inc
lods
xlat
mov
inc
add
pushf
adc
sub
push
add
add
add
or
movb
xor
test
add
xchg
ja
lahf
dec
lods
adc
in
stc
push
pop
dec
stc
cmp
add
xor
add
les
jmp
lcall
and
mov
mov
cltd
inc
add
inc
and
popa
ss
scas
scas
and
xor
jb
and
mov
jno
repnz
in
push
data16
xchg
inc
add
lock
dec
stos
jg,pt
add
movsbl
sub
ficompl
xchg
mov
sub
add
push
rolb
add
push
popf
ljmp
insb
xchg
std
jle
xchg
das
mov
jb
inc
add
cmp
or
add
mov
add
dec
aaa
or
arpl
icebp
loop
push
sub
and
pop
sbb
add
xchg
add
pop
nop
add
pop
push
mov
inc
jg
jbe
mov
dec
adc
scas
pop
sbb
add
lcall
fimuls
mov
jp
add
out
lahf
jo
stc
aam
ret
jecxz
shll
add
data16
mov
out
std
xor
push
add
and
test
inc
pop
inc
add
add
jnp
add
cmc
imul
cmp
mov
test
loope
pop
test
add
jl
jns
add
mov
add
pop
pop
push
mov
add
imul
cltd
repz
jle
das
rolb
shll
add
add
iret
mov
xchg
add
mov
add
mov
mov
stos
xchg
add
mov
push
rolb
adc
cld
push
add
add
std
cmp
jno
mov
push
out
mov
shufps
rorl
push
sbb
add
jl
fcoml
push
lea
sbb
or
add
clc
xchg
add
mov
cmpsb
add
add
mov
push
add
dec
xchg
adc
cmc
pop
cmp
addb
adc
out
rolb
jl
stc
push
jne
lods
rolb
sahf
rolb
push
cmp
dec
cwtl
lea
inc
jnp
outsb
enter
testb
add
mov
add
mov
mov
xchg
mov
add
add
out
xchg
xchg
add
cmp
add
add
rolb
add
cmp
add
xchg
sub
jb
push
add
out
mov
add
mul
add
cmp
add
outsl
cmp
addr16
fdivp
add
mov
sbb
cmpsb
add
add
xor
sbb
popf
cmp
mov
std
int3
fstpl
add
arpl
or
into
xor
pop
movl
add
lock
cmpsb
add
jns
xchg
or
ds
fxch
or
and
mov
pop
lods
incb
sub
jne
mov
mov
add
imul
data16
mov
add
add
jns
inc
lods
fwait
xor
int3
mov
test
add
lods
in
jno
pushf
jo
test
js
pusha
add
add
add
mov
or
add
or
lds
cmpsb
add
mov
das
push
add
mov
inc
xor
out
outsb
jae
aaa
pop
ret
pusha
add
jl
add
xchg
xor
std
loopne
insb
aam
addb
stos
add
pop
frstor
add
add
je
or
sti
loop
mov
mov
sbb
add
pop
xor
or
fidivs
popf
xchg
xor
xchg
add
sub
fmuls
int
fisubrs
sbb
add
movsl
or
add
lods
mov
add
insl
dec
enter
add
mov
addr16
mov
gs
mov
add
mov
mov
repnz
and
push
xor
dec
je
aad
iret
pop
je
mov
dec
fwait
sub
add
in
mov
add
add
mov
sbb
mov
xlat
arpl
add
push
xor
mov
or
mov
notl
imul
sbb
sbb
and
add
and
push
mov
xor
sbb
add
sbb
imul
add
add
add
mov
dec
adc
or
cmpsl
push
mov
add
xor
aaa
or
add
add
addb
inc
in
mov
sub
daa
ret
out
add
nop
add
jmp
push
add
dec
dec
popa
xchg
scas
mov
push
mov
loopne
cmc
jl
add
aam
dec
cwtl
push
das
xor
mov
je
mov
scas
in
add
loopne
rolb
scas
movsb
add
lock
add
add
add
lahf
mov
add
dec
je
outsl
es
add
std
movsb
add
aaa
nop
add
cmpsl
jge
add
mov
add
pushf
sbb
lock
dec
cltd
aaa
jne
add
addr16
add
add
add
xor
mov
add
add
stc
js
negl
cltd
mov
idiv
rolb
pop
mov
loop
dec
shll
xchg
add
mov
imul
dec
andl
lret
and
insl
ds
xor
movb
loope
dec
mov
add
add
iret
fiaddl
mov
jne
pushf
mov
sahf
sub
inc
add
cmp
jo
jno
xlat
and
cltd
cmp
add
ret
aaa
adc
scas
movb
dec
ds
xor
sbb
add
inc
add
add
push
sbb
pop
mov
adc
push
add
add
add
add
repz
fxch
movb
inc
add
mov
loop
jge
mov
je
aam
jae
jne
or
jne
mov
adcl
add
push
ret
fnstenv
data16
add
lcall
rol
add
add
add
cmp
add
add
imul
sbb
add
fidivrl
mov
add
push
add
ficomps
xor
rolb
adc
xor
add
mov
pop
enter
dec
fcoms
dec
stc
jae
add
dec
popf
lds
je
les
test
imul
shl
pop
xor
adc
add
mov
cli
rcll
out
lods
mov
sub
add
pusha
add
test
out
lods
mov
sub
inc
ljmp
add
clc
aad
add
add
cmpsb
add
sub
cwtl
mov
pop
mov
add
rol
add
add
jge
rolb
sub
mov
mov
or
add
push
add
push
add
test
inc
js
jge
add
dec
loopne
jns
in
mov
sub
out
jg
fidivrs
add
mov
add
add
add
xor
cmp
xor
bound
mov
add
add
rolb
xorl
popa
sahf
mov
divl
cli
movsl
call
add
xchg
mov
xor
popf
movb
movb
into
xchg
out
int
scas
stos
inc
add
dec
bound
mov
add
cmp
add
mov
jecxz
push
add
add
dec
daa
addb
add
or
das
xlat
cmp
sub
dec
inc
add
add
add
rolb
add
mov
jo
mov
loope
int
out
or
or
push
add
stos
inc
add
stos
dec
cmpsl
sets
cmp
mov
in
push
and
add
mov
add
xor
mov
pop
insl
mov
addl
in
add
lahf
push
add
nop
add
add
in
fs
fldenv
add
jle
adc
adc
aaa
cmp
jnp
into
imul
out
sahf
testl
in
nop
add
add
testb
add
lock
pushf
mov
sbb
sub
xor
out
mov
cmp
sti
cwtl
js
dec
add
mov
mov
add
mov
inc
add
xchg
adc
xchg
sti
adc
sub
fisubs
add
mov
pusha
add
pusha
add
add
add
sahf
nop
add
mov
add
sbb
pop
andl
add
popa
or
mov
mov
ficoml
test
xlat
movq
mov
rolb
pop
testl
stos
mov
add
loop
xor
popf
sub
fmull
sbb
jecxz
add
scas
sub
mov
xchg
jp
mov
push
add
lcall
xchg
add
add
add
mov
push
add
add
add
cmpsb
add
push
aaa
push
mov
sahf
stos
pcmpeqw
mov
mov
pop
aam
aaa
call
sub
fildl
data16
fs
into
push
iret
lret
mov
push
cmpsl
cltd
pop
sub
cmpsb
add
hlt
add
cmp
subl
insb
xchg
add
add
rcrl
out
jb
rolb
not
add
add
bound
mov
add
xchg
lahf
mov
movb
sbb
add
mov
jg
ljmp
das
adc
test
test
rolb
push
add
mov
fidivrl
mov
insl
in
enter
push
add
add
repnz
arpl
test
mov
movb
add
xchg
add
xor
mov
mov
add
out
adc
inc
jne
add
add
add
cltd
hlt
add
jecxz
add
or
jo
adc
adc
xor
add
cmc
fmulp
gs
push
add
popa
cmp
sbb
test
and
mov
ja
cmp
push
sti
movb
aad
mov
add
adc
movb
pop
xor
add
xorl
add
adc
add
mov
add
add
cld
nop
jmp
arpl
add
add
loopne
mov
add
add
push
mov
xchg
ret
out
add
add
adc
fwait
cld
nop
jmp
add
add
cmpsl
cmp
sbbl
add
leave
aad
cmpl
mov
clc
repnz
jae
lods
add
sub
sub
add
pusha
aam
arpl
mov
movb
mov
clc
repnz
jae
cmc
loopne
add
mov
or
push
mov
xchg
ret
add
add
std
push
push
mov
xchg
ret
fldl
xchg
add
add
lods
movzwl
clc
repnz
jae
and
lret
and
repnz
jae
in
add
inc
pusha
add
sbb
add
repnz
jae
add
negb
push
fwait
cld
nop
jmp
add
outsl
in
addb
add
add
repnz
jae
add
clc
repnz
jae
pop
mov
add
fmull
add
repnz
jae
cmp
lds
add
loopne
repnz
jae
add
add
add
inc
jb
sub
add
clc
repnz
jae
add
mov
xchg
ret
add
add
add
push
clc
repnz
jae
add
mov
add
in
pop
fwait
cld
nop
jmp
add
add
jae
add
faddl
nop
jmp
loopne
add
sub
clc
repnz
jae
stos
inc
push
add
das
rolb
jp
les
repnz
jae
out
add
add
dec
mov
fwait
cld
nop
jmp
add
in
aam
add
data16
mov
clc
repnz
jae
mov
add
mov
pusha
clc
repnz
jae
leave
in
cli
add
add
sbb
mov
xchg
ret
add
and
data16
ljmp
jmp
aam
cmp
add
lock
nop
jae
and
mov
cld
nop
jmp
add
add
or
add
ja
clc
repnz
jae
mov
dec
adc
repnz
jae
pusha
add
cmp
add
add
push
mov
xchg
ret
add
add
add
add
push
add
add
arpl
add
add
shlb
add
mov
add
add
add
jmp
add
in
jnp
jae
mov
add
xchg
lret
xchg
ret
add
add
add
add
add
push
clc
repnz
jae
je
add
arpl
add
clc
repnz
jae
add
cmp
add
stos
fwait
cld
nop
jmp
inc
sbb
popa
add
add
add
fwait
cld
nop
jmp
add
add
inc
in
sub
clc
repnz
jae
add
outsb
lods
adc
cmpsl
pop
push
clc
repnz
jae
inc
add
add
add
or
mov
xchg
ret
or
or
add
add
cli
add
add
push
in
das
push
push
mov
xchg
ret
cwtl
add
mov
es
ffree
clc
repnz
jae
lods
add
add
arpl
in
test
sbb
add
repnz
jae
add
je
push
push
mov
xchg
ret
outsb
add
add
sub
nop
jmp
mov
mov
adc
jg
mov
push
mov
xchg
ret
add
aam
lods
and
add
jae
clc
repnz
jae
add
inc
out
into
push
clc
repnz
jae
add
add
push
add
push
mov
xchg
ret
jae
add
inc
in
add
clc
clc
repnz
jae
outsl
add
outsl
add
mov
clc
repnz
jae
add
add
sub
add
repnz
jae
add
movsl
jo
xor
add
clc
repnz
jae
add
jns
outsb
sbb
or
clc
repnz
jae
add
mov
add
nop
jae
add
push
pop
add
outsl
mov
push
mov
xchg
ret
add
mov
nop
jae
inc
add
je
add
lcall
adc
add
add
fldl
sbb
push
mov
xchg
ret
add
in
jg
add
lods
clc
repnz
jae
mov
cli
mov
outsb
push
outsb
mov
xor
and
mov
add
add
repnz
jae
add
add
inc
add
add
and
add
mov
cltd
cmp
xchg
call
and
add
add
pusha
inc
sar
mov
clc
repnz
jae
add
cli
outsl
cmpl
pop
jae
cld
nop
jmp
add
add
and
mov
add
sar
call
fwait
cld
nop
jmp
add
outsb
je
dec
push
clc
repnz
jae
add
and
add
jge
mov
add
add
add
cmp
movsb
clc
repnz
jae
in
add
add
stos
add
add
repnz
jae
pop
mov
js
add
fdivrp
repnz
jae
add
add
add
or
sub
add
clc
out
add
xor
shlb
pop
mov
clc
repnz
jae
add
outsl
in
ret
test
dec
sub
fwait
cld
nop
jmp
in
cmc
and
or
mov
xchg
ret
sbb
add
ja
add
fwait
cld
nop
jmp
add
xor
js
addb
push
fwait
cld
nop
jmp
pop
pop
push
pop
xor
outsl
inc
jmp
mov
add
add
repnz
jae
adc
add
add
clc
repnz
jae
add
leave
push
push
mov
xchg
ret
dec
and
add
add
fwait
cld
nop
jmp
inc
cli
add
je
js
pop
add
add
push
add
clc
repnz
jae
add
push
push
mov
xchg
ret
inc
add
add
add
mov
xor
add
clc
repnz
jae
xor
stc
pushl
push
mov
xchg
ret
popa
lcall
jmp
add
add
cli
xor
add
cmp
jae
and
js
inc
lock
cld
nop
jmp
fldl
out
mov
inc
push
das
add
clc
repnz
jae
out
add
add
fiadds
inc
cmp
repnz
jae
add
add
or
repnz
jae
in
add
add
aas
push
clc
repnz
jae
xchg
add
add
fcoml
nop
jae
add
add
add
add
add
cmp
repnz
jae
add
add
inc
xor
out
add
add
add
inc
dec
int
lret
clc
repnz
jae
mov
aad
mov
fwait
cld
nop
jmp
js
leave
add
cmpsl
sbb
rolb
dec
lea
clc
repnz
jae
add
in
push
add
add
push
mov
xchg
ret
cli
addl
xor
clc
repnz
jae
cmc
add
pop
adc
pop
outsl
and
fwait
cld
nop
jmp
add
add
add
out
mov
clc
repnz
jae
mov
inc
stos
dec
outsl
pop
mov
push
mov
xchg
ret
add
add
xor
jmp
clc
repnz
jae
add
add
push
add
sti
clc
repnz
jae
inc
add
popa
add
ja
inc
or
fwait
cld
nop
jmp
jg
lcall
cld
nop
jmp
xchg
mov
add
push
clc
repnz
jae
add
mov
in
cmc
das
mov
jne
cmp
popa
add
repnz
jae
mov
add
add
clc
repnz
jae
inc
out
add
and
clc
repnz
jae
in
cwtl
xor
pusha
add
inc
les
int
dec
sub
aas
jecxz
add
add
add
sti
add
push
mov
xchg
ret
adc
adc
xor
mov
icebp
clc
repnz
jae
push
adc
push
je
sbb
test
sldt
clc
repnz
jae
in
add
jae
inc
add
outsb
xor
outsb
dec
out
loope
mov
clc
repnz
jae
add
add
pop
push
mov
xchg
ret
or
ja
mov
add
jbe
push
mov
xchg
ret
add
cwtl
mov
mov
clc
repnz
jae
shlb
mul
mov
gs
cld
nop
jmp
lods
push
inc
add
or
clc
repnz
jae
add
xor
inc
loopne
add
clc
repnz
jae
add
add
add
add
push
mov
xchg
ret
jae
add
add
mov
fwait
cld
nop
jmp
and
add
mov
push
push
mov
xchg
ret
in
add
js
inc
inc
push
add
nop
jae
mov
je
push
lods
cmp
dec
clc
dec
inc
clc
repnz
jae
cwtl
add
add
repnz
jae
das
cmp
xor
add
test
lcall
sbb
add
mov
push
mov
xchg
ret
cmp
call
fwait
cld
nop
jmp
cmpsl
add
fwait
mov
push
mov
xchg
ret
out
cmp
inc
outsb
dec
and
push
mov
xchg
ret
lods
xor
lret
jmp
add
push
add
add
add
xchg
rolb
fcoml
repnz
jae
lcall
add
idivl
dec
cmp
repnz
jae
cmp
pusha
mov
cld
nop
jmp
jae
arpl
mov
add
and
stos
movzwl
clc
repnz
jae
fldl
dec
add
arpl
mov
push
mov
xchg
ret
add
add
test
push
add
add
je
outsl
mov
inc
inc
mov
cmpsl
and
mov
popa
add
cld
nop
jmp
add
frstor
sbb
sbb
cmp
repnz
jae
add
add
xor
adc
sub
repnz
jae
mov
mov
inc
mov
lea
nop
jae
inc
add
push
clc
repnz
jae
addl
jae
dec
movswl
clc
repnz
jae
add
cmc
xor
test
fwait
cld
nop
jmp
add
loopne
les
push
add
repnz
jae
add
add
mov
clc
repnz
jae
cmp
cmp
push
cld
nop
jmp
add
inc
pop
rep
clc
repnz
jae
or
add
popa
add
add
add
push
mov
xchg
ret
add
add
add
mov
xchg
ret
add
inc
add
cmpsb
add
nop
jmp
inc
add
xchg
cmc
or
jmp
repnz
jae
fnstsw
pop
add
pop
mov
fwait
cld
nop
jmp
js
add
dec
pop
mov
hlt
add
jl
clc
repnz
jae
add
mov
xor
add
clc
repnz
jae
add
and
mov
icebp
and
inc
add
clc
repnz
jae
add
cmp
std
mov
fwait
cld
nop
jmp
xor
add
arpl
add
aas
test
fwait
cld
nop
jmp
add
add
add
inc
iret
and
clc
repnz
jae
add
cmp
xchg
clc
push
clc
repnz
jae
jns
adc
add
adc
clc
repnz
jae
outsb
add
imul
clc
repnz
jae
add
add
sbb
dec
jne
clc
repnz
jae
in
add
shr
clc
repnz
jae
in
fldl
mov
popa
jb
inc
xchg
fnstsw
fwait
cld
nop
jmp
in
loopne
add
lea
fwait
cld
nop
jmp
inc
add
add
add
sar
cld
nop
jmp
je
outsl
add
push
clc
repnz
jae
add
je
mov
clc
repnz
jae
add
and
add
mov
clc
repnz
jae
add
add
and
push
fwait
cld
nop
jmp
outsl
ja
arpl
jne
clc
repnz
jae
add
add
add
mov
add
mov
clc
repnz
jae
arpl
in
adc
outsb
push
push
mov
xchg
ret
add
stos
je
jg
in
dec
push
mov
cmpsl
add
add
cmpsb
add
rolb
mov
add
add
clc
repnz
jae
add
stc
lcall
add
add
sbb
popa
push
mov
xchg
ret
add
cmc
js
add
repnz
jae
add
je
or
add
push
push
mov
xchg
ret
or
add
out
mov
fwait
cld
nop
jmp
mov
in
cld
shr
clc
repnz
jae
adc
add
add
mov
clc
repnz
jae
add
add
push
mov
xchg
ret
or
add
mov
repnz
jae
push
cmpsl
jae
popa
add
repnz
jae
add
aad
add
pop
add
clc
repnz
jae
inc
loopne
lods
add
xlat
sub
cld
nop
jmp
arpl
dec
inc
xchg
inc
lcall
repnz
jae
add
cli
add
adc
add
repnz
jae
add
outsb
add
in
mov
clc
repnz
jae
and
jae
cmp
nop
jae
and
jae
add
add
adc
nop
jae
in
mov
push
push
mov
xchg
ret
cwtl
add
js
adc
or
nop
jae
add
push
je
jae
pop
fwait
cld
nop
jmp
add
add
add
add
aas
cmpw
fwait
cld
nop
jmp
adc
arpl
lahf
movzwl
fwait
cld
nop
jmp
add
inc
add
add
add
fwait
cld
nop
jmp
aad
add
or
test
sbb
add
repnz
jae
add
movsb
add
les
psubsb
idiv
clc
repnz
jae
add
add
sti
clc
repnz
jae
popa
fnstsw
add
pop
add
mov
nop
jmp
add
add
aam
pop
jb
push
add
push
mov
xchg
ret
add
add
mov
add
nop
jae
add
cmc
mov
xor
fwait
cld
nop
jmp
add
add
add
ja
jg
jmp
pushl
in
inc
je
adc
add
add
pop
add
sub
lret
nop
jmp
je
add
add
pusha
jae
mov
clc
repnz
jae
add
add
add
aaa
xor
add
popa
clc
repnz
jae
add
add
pusha
stos
leave
testb
push
push
mov
xchg
ret
add
mov
add
testb
jmp
jp
fwait
cld
nop
jmp
add
jns
repnz
cld
nop
jmp
add
add
pop
ljmp
push
add
add
js
je
cmp
pop
xchg
add
add
outsb
je
clc
repnz
jae
add
add
add
adc
add
repnz
jae
add
mov
mov
push
mov
xchg
ret
push
add
adc
mov
clc
repnz
jae
add
negb
in
lret
jmp
add
push
add
inc
add
mov
jbe
mov
sar
nop
jae
adc
add
aad
add
add
cmp
cld
nop
jmp
ja
sbb
mov
sar
repnz
jae
out
rolb
popa
jg
pop
ret
jge
test
push
add
clc
repnz
jae
cmp
add
jae
pop
mov
add
cwtl
jg
pop
push
clc
repnz
jae
inc
add
add
add
in
mov
push
mov
xchg
ret
push
das
shrb
add
mov
clc
repnz
jae
cli
add
movsb
add
mov
fwait
cld
nop
jmp
add
pop
test
fwait
cld
nop
jmp
add
cmpsl
cmp
jno
clc
repnz
jae
adc
out
mov
cmp
repnz
jae
add
add
mov
add
rolb
pop
push
mov
xchg
ret
lods
dec
add
add
add
cld
nop
jmp
aam
je
jns
add
cs
push
mov
xchg
ret
add
cwtl
add
stos
repnz
jae
mov
and
movb
xor
clc
repnz
jae
lods
add
add
repnz
jae
pop
add
jg
movb
push
push
mov
xchg
ret
je
fldl
add
mov
clc
repnz
jae
add
fcmovb
jmp
jae
add
inc
add
pop
and
clc
repnz
jae
add
out
mov
aaa
mov
cld
or
jmp
inc
add
lods
pop
insl
rep
clc
repnz
jae
js
outsl
xchg
sbb
add
lahf
mov
clc
repnz
jae
adc
add
shll
jb
fwait
cld
nop
jmp
cmp
out
add
clc
repnz
jae
das
lcall
imul
add
adc
add
add
out
mov
fwait
cld
nop
jmp
loopne
adc
xbegin
rorl
add
out
add
add
push
mov
sbb
push
dec
xchg
xchg
dec
add
sbb
clc
push
push
mov
xchg
ret
mov
add
clc
repnz
jae
mov
add
add
jnp
pop
add
add
stc
call
dec
popa
add
fisttpl
nop
jae
dec
add
add
loopne
add
push
mov
xchg
ret
add
add
add
jae
out
add
add
push
clc
repnz
jae
js
add
add
cmc
aaa
sbb
jae
add
dec
or
leave
add
add
out
and
inc
add
dec
pop
clc
repnz
jae
inc
lcall
sub
shr
and
inc
add
stos
push
add
loopne
add
fadds
repnz
jae
pop
mov
add
loopne
pushf
div
fwait
cld
nop
jmp
add
add
jg
mov
pop
pop
clc
repnz
jae
add
add
cmp
inc
fimull
test
cld
nop
jmp
popa
cmp
jle
clc
repnz
jae
add
outsb
add
add
add
repnz
jae
je
ja
adc
add
xor
add
clc
repnz
jae
and
shll
daa
fiadds
xchg
ret
jns
add
imul
fwait
cld
nop
jmp
arpl
leave
cmpsl
add
pop
push
mov
xchg
ret
in
add
in
and
clc
repnz
jae
inc
pop
cmp
jp
dec
and
clc
repnz
jae
add
xor
pop
push
clc
repnz
jae
add
add
add
xchg
dec
mov
clc
repnz
jae
add
outsb
leave
testb
mov
fwait
cld
nop
jmp
mov
add
xor
add
clc
repnz
jae
in
mov
icebp
lcall
add
add
add
out
mov
push
mov
xchg
ret
cmp
xorl
jae
add
add
in
add
mov
jg
clc
repnz
jae
add
mov
dec
out
pusha
push
mov
xchg
ret
add
inc
lods
cmp
cmc
in
jmp
pop
in
inc
add
stos
pusha
js
cmpsl
dec
mov
clc
repnz
jae
shlb
cmp
in
add
lret
pop
add
jg
inc
cmpsl
movb
add
clc
repnz
jae
add
outsb
add
clc
repnz
jae
pop
js
add
add
xchg
or
nop
jae
dec
cmc
add
mov
clc
repnz
jae
popa
lcall
pusha
add
mov
clc
repnz
jae
cmp
xor
add
add
and
repnz
jae
add
add
adc
and
mov
push
clc
repnz
jae
add
pusha
arpl
add
scas
mov
fwait
cld
nop
jmp
push
sbb
xor
add
and
mov
push
mov
xchg
ret
add
add
xchg
add
repnz
jae
popa
add
testb
cmp
mov
jne
push
mov
xchg
ret
add
aam
add
mov
pop
xor
add
sub
add
insb
stos
sub
add
clc
repnz
jae
fldl
pop
add
push
clc
repnz
jae
add
add
in
popl
clc
repnz
jae
add
inc
adc
cld
nop
jmp
add
cmc
je
jae
and
clc
repnz
jae
arpl
add
inc
aam
mov
or
repnz
jae
add
add
ja
add
fwait
cld
nop
jmp
ja
add
mov
add
jbe
loop
ficoms
mov
xchg
ret
and
jns
and
out
clc
repnz
jae
jg
add
add
add
mov
fwait
cld
nop
jmp
xchg
add
add
fldl
hlt
add
jmp
je
pop
push
xor
arpl
jb
push
jns
clc
repnz
jae
add
jg
mov
mov
clc
repnz
jae
add
mov
lcall
cld
call
popa
mov
and
mov
push
clc
repnz
jae
stos
pusha
add
in
adc
stos
mov
clc
repnz
jae
add
add
add
repnz
jae
leave
lods
add
pop
push
mov
xchg
ret
xchg
xchg
add
add
test
out
clc
repnz
jae
frstor
or
dec
add
add
outsl
dec
pop
out
add
add
jmp
mov
popa
popa
popa
in
inc
lods
add
jg
icebp
and
push
mov
xchg
ret
outsb
xchg
add
add
add
jae
add
fldl
add
adc
mov
out
clc
repnz
jae
popa
add
add
mov
clc
repnz
jae
and
add
and
clc
repnz
jae
add
and
mov
push
mov
xchg
ret
add
inc
inc
add
jb
push
cmpl
dec
sti
push
inc
add
repnz
jae
add
add
sbb
adc
mov
fwait
cld
nop
jmp
add
add
cmpsl
add
push
clc
repnz
jae
cmp
in
add
andl
mov
aad
push
push
mov
xchg
ret
adc
cmp
push
add
push
clc
repnz
jae
subl
or
jae
add
cmpsl
popa
add
dec
pop
mov
fwait
cld
nop
jmp
add
inc
add
add
mov
xchg
ret
adc
lock
pop
clc
repnz
jae
adc
in
add
leave
add
xor
clc
repnz
jae
jae
add
add
mov
scas
jmp
add
arpl
add
andl
xor
clc
repnz
jae
leave
add
aad
pushl
clc
repnz
jae
or
popa
aad
aad
add
call
clc
repnz
jae
fldl
jg
lds
mov
clc
repnz
jae
in
add
cmp
das
pop
mov
repnz
jae
lods
add
add
mov
lcall
jmp
not
ja
das
leave
adc
inc
add
movzwl
clc
repnz
jae
add
lods
ja
mov
and
mov
and
mov
loop
clc
repnz
jae
add
add
pop
and
pop
lcall
stc
pushl
mov
clc
repnz
jae
add
clc
repnz
jae
adc
dec
fstl
fwait
cld
nop
jmp
xchg
popa
add
pop
add
add
mov
jae
out
add
add
add
mov
out
mov
push
mov
xchg
ret
add
mov
pop
sbbl
dec
or
repnz
jae
pop
popa
add
out
stos
mov
clc
repnz
jae
aad
mov
xor
pop
pop
fwait
cld
nop
jmp
add
in
jg
je
pop
subl
mov
add
mov
outsl
cmp
ds
push
mov
xchg
ret
add
mov
in
add
leave
hlt
inc
add
add
jns
adc
testb
add
mov
aas
clc
repnz
jae
add
add
mov
mov
outsl
popa
fs
repnz
jae
sbb
add
mov
movb
cmp
ret
add
add
add
xor
mov
push
mov
xchg
ret
cli
add
add
sar
repnz
jae
add
add
dec
mov
fsts
mov
xchg
ret
jns
cmp
add
scas
and
push
mov
xchg
ret
dec
leave
pusha
add
add
add
push
push
mov
xchg
ret
xor
add
add
add
push
mov
xchg
ret
rolb
popa
rolb
add
lods
je
clc
repnz
jae
add
adc
nop
jae
adc
xor
rolb
or
repnz
jae
in
add
add
jne
clc
repnz
jae
add
add
clc
repnz
jae
dec
add
jns
add
mov
xchg
ret
sbb
add
add
rcrl
incl
popa
add
add
xchg
sbb
push
mov
xchg
ret
add
cli
add
lea
fwait
cld
nop
jmp
lcall
dec
and
clc
repnz
jae
jae
add
clc
clc
repnz
jae
add
outsb
jns
add
popf
push
clc
repnz
jae
or
pop
jg
cwtl
add
or
nop
jae
add
js
cwtl
lods
add
add
fwait
cld
nop
jmp
testb
inc
inc
xor
aad
add
scas
add
fwait
cld
nop
jmp
out
add
add
add
mov
push
push
mov
xchg
ret
pop
add
mov
add
adc
xchg
clc
repnz
jae
addl
pusha
or
add
sub
repnz
jae
add
add
dec
cmp
repnz
jae
adc
add
jg
cmp
clc
repnz
jae
add
cmp
add
pop
mov
clc
repnz
jae
pop
js
js
test
fwait
cld
nop
jmp
inc
add
dec
inc
inc
mov
pusha
add
nop
jae
in
pop
inc
lcall
push
push
mov
xchg
ret
out
js
js
add
mov
nop
jae
arpl
add
add
repnz
jae
push
stos
sbb
loopne
fwait
mov
clc
repnz
jae
add
lock
xor
add
clc
repnz
jae
stos
add
cmp
imul
nop
jae
xchg
add
mov
jae
add
add
add
sub
cld
nop
jmp
add
out
and
clc
repnz
jae
and
add
add
add
addl
pushl
add
in
inc
add
enter
jae
add
add
clc
repnz
jae
sar
add
rorl
push
or
add
leave
in
cmp
out
cmpsl
add
mov
jae
xchg
add
arpl
jns
jg
mov
push
mov
xchg
ret
add
addl
push
mov
xor
pusha
add
popf
mov
fistps
loopne
inc
jg
dec
sub
repnz
jae
add
mov
test
add
clc
repnz
jae
add
push
mov
xchg
ret
add
add
pop
aad
jne
les
pushf
movzwl
fwait
cld
nop
jmp
idivb
mov
mov
xchg
ret
add
mov
add
in
inc
fisubs
popa
add
repnz
jae
inc
loopne
js
arpl
ret
fwait
cld
nop
jmp
mov
add
rolb
into
rep
clc
repnz
jae
or
add
lods
add
push
jl
push
mov
xchg
ret
jns
add
inc
xor
jl
clc
repnz
jae
fnsave
add
loopne
dec
mov
clc
repnz
jae
add
and
add
clc
repnz
jae
add
add
decl
clc
repnz
jae
out
cmpsl
outsl
add
add
add
les
clc
repnz
jae
lcall
lret
add
clc
repnz
jae
add
add
dec
add
repnz
jae
popa
add
and
push
mov
xchg
ret
in
dec
popa
inc
in
dec
mov
clc
repnz
jae
add
in
add
mov
or
xchg
add
shlb
push
push
add
add
mov
xchg
ret
add
das
xor
add
jmp
sub
jmp
in
cmp
jg
add
adc
repnz
jae
leave
add
adc
add
lcall
add
add
add
jmp
add
repnz
jae
add
jae
dec
sub
push
mov
xchg
ret
add
adc
dec
add
loop
fwait
cld
nop
jmp
add
pusha
add
in
push
add
pop
in
clc
repnz
jae
jg
add
add
fwait
cld
nop
jmp
jns
add
add
add
add
add
out
add
add
cmp
jb
clc
repnz
jae
mov
mov
lret
fwait
cld
nop
jmp
ja
in
add
leave
leave
add
cmp
clc
repnz
jae
inc
add
jg
lcall
add
cld
nop
jmp
add
dec
add
in
ret
jle
inc
xor
clc
repnz
jae
arpl
mov
clc
repnz
jae
push
fisttpll
cmp
add
clc
repnz
jae
add
test
movb
cld
nop
jmp
outsl
add
push
push
add
add
add
nop
jae
jg
pusha
adc
subl
repnz
jae
lods
xor
add
add
sti
add
add
sti
ljmp
add
enter
jae
add
outsb
xor
cmp
sub
add
repnz
jae
add
add
add
mov
aas
adc
jmp
incl
out
add
je
xlat
testb
add
lods
fwait
cld
nop
jmp
add
stos
add
mov
cld
nop
jmp
addl
xchg
popa
sarl
clc
repnz
jae
fldl
stos
add
ja
popa
in
aas
add
fwait
cld
nop
jmp
add
add
iret
or
sub
add
lods
add
outsl
inc
adc
add
add
add
movsl
cli
cmpsl
and
loope
adc
jmp
xchg
jbe
xchg
add
sbb
push
fwait
cld
nop
jmp
add
add
mov
mov
clc
repnz
jae
loopne
add
movzwl
clc
repnz
jae
out
cmpsl
js
add
add
add
add
iret
ret
clc
repnz
jae
out
mov
add
add
repnz
ret
clc
repnz
jae
shlb
outsl
sbb
dec
pop
mov
add
push
clc
repnz
jae
add
add
cmc
mov
add
mov
clc
repnz
jae
fldl
data16
xchg
jmp
jg
sbb
add
add
arpl
add
mov
clc
repnz
jae
add
lods
add
dec
add
mov
xchg
ret
out
out
in
daa
insb
pop
fwait
cld
nop
jmp
dec
in
xor
mov
cs
fwait
cld
nop
jmp
add
add
jae
xor
repnz
jae
lcall
popa
in
add
clc
repnz
jae
and
add
sar
repnz
jae
add
xchg
add
rcr
add
clc
repnz
jae
inc
add
add
add
cmp
inc
add
add
add
ja
add
clc
repnz
jae
addl
pop
test
fwait
cld
nop
jmp
ja
add
aad
mov
andl
add
mov
xchg
ret
add
das
ja
fs
sub
clc
repnz
jae
add
adc
mov
imul
clc
repnz
jae
add
add
add
clc
repnz
jae
and
aad
xchg
clc
repnz
jae
add
and
icebp
clc
repnz
jae
adc
mov
lret
test
fwait
cld
nop
jmp
add
mov
dec
outsb
or
pop
push
clc
repnz
jae
cli
or
add
add
fwait
cld
nop
jmp
js
mov
mov
mov
add
repnz
jae
arpl
outsl
leave
shr
push
fwait
cld
nop
jmp
push
add
add
push
aam
adc
add
add
je
clc
repnz
jae
add
jae
pop
push
mov
xchg
ret
add
js
mov
shll
add
clc
repnz
jae
add
add
add
mov
add
clc
repnz
jae
in
add
outsb
adc
fwait
cld
nop
jmp
mov
in
fimuls
nop
jmp
add
add
add
push
push
mov
xchg
ret
add
add
add
xchg
mov
jae
add
add
mov
pop
push
push
mov
xchg
ret
in
adc
add
mov
out
rep
clc
repnz
jae
add
inc
add
testb
xchg
push
jne
fwait
cld
nop
jmp
add
xor
in
aad
ret
clc
repnz
jae
add
add
add
push
clc
repnz
jae
js
js
dec
call
fwait
cld
nop
jmp
jg
and
cmp
jae
mov
cwtl
add
push
mov
shl
clc
repnz
jae
je
add
sub
clc
repnz
jae
ja
cwtl
xor
aam
data16
rolb
popa
xor
shrl
clc
repnz
jae
dec
add
inc
ja
jmp
ja
xor
add
sbb
add
repnz
jae
add
mov
add
nop
jae
add
add
add
add
xrelease
repnz
jae
in
or
lcall
jge
inc
and
clc
repnz
jae
dec
cmpsl
pop
add
insl
mov
fwait
cld
nop
jmp
add
add
mov
clc
repnz
jae
in
das
add
pop
ret
clc
repnz
jae
aam
loopne
loopne
add
clc
mov
push
mov
xchg
ret
add
xor
fwait
cld
nop
jmp
add
cmp
add
repnz
jae
aam
add
add
add
push
clc
repnz
jae
add
pusha
out
repnz
add
clc
repnz
jae
notb
dec
aam
add
cld
nop
jmp
add
add
mov
add
vorps
repnz
jae
inc
popa
jns
js
je
iret
add
push
mov
xchg
ret
cmp
sub
sub
inc
add
add
add
enter
nop
jmp
loopne
adc
xor
in
arpl
mov
clc
repnz
jae
pusha
dec
add
cwtl
add
outsb
dec
fwait
cld
nop
jmp
add
loopne
add
mov
xor
fwait
cld
nop
jmp
adc
add
jns
add
fwait
cld
nop
jmp
cmc
add
add
add
je
fwait
cld
nop
jmp
add
aam
push
push
mov
xchg
ret
xor
outsl
inc
jns
add
clc
repnz
jae
testb
add
mov
stos
mov
push
mov
xchg
ret
cmp
add
sbb
fwait
cld
nop
jmp
add
or
xor
js
adc
repnz
jae
add
inc
add
xor
mov
add
add
repnz
jae
add
mov
cld
nop
jmp
cmp
add
ret
add
stos
push
mov
xchg
ret
adc
add
mov
add
cld
nop
jmp
leave
loopne
pop
outsb
add
ja
jnp
test
repnz
jae
cmp
dec
or
repnz
jae
add
lcall
fwait
cld
nop
jmp
add
aad
add
add
adc
pusha
add
loopne
clc
repnz
jae
in
adc
and
push
mov
xchg
ret
mov
add
in
xorl
clc
repnz
jae
inc
add
sbb
clc
repnz
jae
in
cli
cmp
idiv
clc
repnz
jae
inc
xor
add
jmp
cmpsl
pusha
add
out
in
lods
lea
stc
clc
repnz
jae
add
mov
add
mov
clc
repnz
jae
cwtl
add
add
add
orl
cld
nop
jmp
pop
in
dec
add
adc
mov
inc
add
cld
nop
jmp
add
out
add
cli
popa
add
dec
xor
clc
repnz
jae
dec
add
out
das
add
mov
clc
repnz
jae
inc
add
xor
pusha
clc
repnz
jae
add
arpl
add
cmp
push
mov
xchg
ret
add
add
pop
clc
repnz
jae
add
cli
add
add
add
inc
push
mov
xchg
ret
mov
xor
cmpsl
adc
mov
fwait
cld
nop
jmp
and
aam
mov
clc
repnz
jae
add
add
addb
call
clc
repnz
jae
add
loopne
std
call
clc
repnz
jae
and
rep
push
mov
xchg
ret
add
aam
pop
xor
push
mov
xchg
ret
xchg
add
add
cld
nop
jmp
inc
out
popa
add
jns
lahf
jmp
add
aam
xor
inc
adc
outsb
inc
and
push
cmpsb
add
and
les
shrl
fwait
cld
nop
jmp
je
add
cmc
add
ss
xor
stc
jne
fwait
cld
nop
jmp
add
js
add
add
mov
clc
repnz
jae
cwtl
add
or
cli
ljmp
pop
add
xor
pop
clc
repnz
jae
jns
jae
or
add
inc
add
repnz
jae
add
fldl
jg
pop
jmp
pusha
ja
add
add
aad
pusha
jae
add
add
in
cmp
in
rolb
pusha
sbbl
pushf
jmp
add
stos
adc
add
sbb
clc
repnz
jae
stos
adc
push
and
nop
jae
cmp
add
inc
scas
mov
clc
repnz
jae
add
imulb
rolb
repnz
jae
das
pusha
fldl
add
sbb
clc
repnz
jae
inc
xor
pop
cmpsl
dec
xor
push
mov
xchg
ret
jg
add
mov
jg
mov
sub
adc
and
add
arpl
mov
clc
repnz
jae
mov
adc
ret
cs
add
add
add
inc
add
jl
les
mov
xchg
ret
cmp
add
dec
sub
fwait
cld
nop
jmp
add
popa
add
add
mov
inc
fwait
mov
fwait
cld
nop
jmp
adc
loopne
dec
fnsave
clc
repnz
jae
adc
mov
nop
jae
stos
add
dec
adc
jns
pop
jbe
pop
push
clc
repnz
jae
add
add
mov
inc
mov
clc
repnz
jae
outsl
stos
add
addl
mov
xchg
ret
cmp
adc
pop
add
fwait
cld
nop
jmp
lcall
inc
andnps
add
outsl
cmp
add
stos
mov
inc
iret
add
mov
loop
adc
fcomps
xor
lods
push
xchg
add
or
lahf
mov
xchg
std
jnp
pusha
add
push
add
add
add
movsl
push
add
xchg
add
add
stos
faddl
mov
mov
jns
add
mov
addb
add
add
mov
aad
jg
add
stc
adc
add
pop
int3
call
add
add
add
mov
mov
iret
push
add
mov
add
cmpsl
sbb
cs
mov
popa
mov
adc
add
push
mov
xor
pop
jbe
mov
pop
adc
push
lret
std
ret
inc
out
mov
imul
out
in
notl
add
jns
cmp
and
call
jnp
add
cmp
sbb
jge
sbb
insl
mov
add
inc
add
cmpsb
add
add
mov
cwtl
dec
xor
jmp
shll
jnp,pt
xor
push
test
mov
shll
mov
ljmp
cmc
dec
cmpsl
and
mov
pop
mov
mov
data16
jns
mov
jns
add
and
in
ljmp
sub
add
imul
adc
xchg
add
sub
add
mov
lods
and
or
add
int
data16
push
mov
add
lcall
insb
xchg
ds
cmpsl
xchg
mov
add
add
cltd
aas
sub
inc
adc
add
add
jp
scas
jns
fadds
add
pop
mov
add
xor
cltd
cld
and
xor
stc
xchg
cmp
add
adc
lock
lahf
decl
add
add
add
lcall
add
add
push
hlt
add
sbb
add
dec
add
mov
add
rolb
std
jbe
mov
test
jo
sbb
daa
in
dec
lea
xchg
movlps
sub
mov
add
add
arpl
add
cmp
addb
push
ljmp
xchg
add
xor
add
adc
jp
sbb
rcrl
scas
xor
leave
les
out
jns
xchg
add
add
dec
out
mov
jnp
subl
add
push
out
or
mov
add
add
push
xchg
mov
ja
add
pop
mov
ficoml
xchg
js
push
xor
xchg
idiv
data16
popf
movsl
cmp
add
add
lds
add
add
push
add
out
dec
jne
imul
pop
cmp
mov
mov
cmp
add
add
fstl
sub
cltd
mov
popf
xlat
pushf
js
les
sbb
add
add
out
ds
out
js
cmp
add
popa
ja
pusha
add
add
push
xor
rolb
ficoms
add
jo
ror
dec
xchg
popa
aas
iret
aad
fisttpl
add
mov
mov
add
jl
and
inc
mov
push
das
add
cmp
add
add
test
shrl
mov
dec
scas
mov
insb
mov
lea
mov
sarl
inc
lea
mov
add
clc
xchg
adc
push
movsl
setp
push
call
add
mov
pusha
add
out
mov
add
add
inc
nop
add
sbb
add
add
ljmp
add
out
mov
add
aad
add
pusha
add
jb
mov
and
jns
add
lcall
imul
push
add
sbb
cwtl
loopne
shll
mov
sub
mov
inc
loop
lret
mov
add
mov
add
cmpsl
dec
sbb
dec
pusha
add
add
mov
add
add
movsb
add
add
pop
insb
aas
imul
add
add
and
mov
add
xchg
add
addb
pop
add
lcall
jp
xchg
push
ss
jne
add
xlat
movsb
add
add
pop
ficoms
stc
adc
add
sbbl
scas
mov
pop
sbb
add
add
bound
mov
add
cld
clc
ss
stos
mov
loopne
cmp
mov
bound
mov
adc
add
dec
aam
pop
jmp
add
out
push
add
jg
popf
add
cli
xlat
mov
push
push
add
xor
iret
jne
or
add
xchg
js
add
add
rolb
std
inc
out
add
adc
addb
cmp
add
add
add
add
addr16
jbe
stos
xchg
ficoms
add
mov
repnz
add
leave
imul
or
fwait
rolb
and
mov
in
push
lret
mov
jbe
cmp
and
mov
adc
jo
inc
nop
add
sbb
dec
xlat
roll
add
jns
mov
push
xchg
add
mov
insb
sub
cmp
inc
in
inc
add
adc
jns
add
sbb
leave
and
inc
xor
dec
xor
sbb
fsubl
push
je
inc
add
fwait
clc
loop
ja
add
cmpsl
cld
push
add
mov
push
jnp
mov
test
add
inc
add
pop
adc
dec
lret
add
xor
outsb
push
mov
mov
pop
adc
adc
dec
add
pop
jne
cs
and
mov
xor
jns
addb
mov
add
pop
pop
and
mov
or
add
xor
ja
jo
xor
popf
imul
mov
add
outsb
pusha
add
and
add
testb
or
pop
ret
add
add
lret
add
cltd
cmp
cmp
cltd
sbb
xchg
add
add
es
add
add
push
xor
inc
add
cmc
mov
xor
add
dec
ret
cmp
and
mov
jge
dec
sub
xchg
adc
sbb
sahf
ret
movsl
lea
loope
push
inc
xchg
jg
out
leave
add
mov
pop
cmc
lods
testb
add
cltd
jb
pop
mov
lret
outsl
cmp
mov
xchg
movb
in
sub
pop
inc
add
mov
sub
xor
inc
push
test
lods
std
mov
lahf
movb
add
jae
testb
ljmp
add
push
add
add
repz
cltd
and
add
push
add
cmp
add
add
mov
add
add
outsb
int3
arpl
lea
mov
or
add
add
adc
leave
add
mov
movb
fmull
rolb
or
movsl
rolb
aaa
addb
out
xchg
add
mov
jg
add
lods
adc
mov
add
je
addr16
add
mov
add
add
xor
and
add
andnps
stos
dec
imul
fsubs
pop
nop
add
sub
push
addb
sub
scas
mov
jno
jne
add
push
add
add
dec
mov
sub
xchg
add
fisubl
add
xchg
add
add
popf
and
mov
mov
mov
aad
push
scas
or
add
add
jge
mov
mov
add
loopne
or
stc
out
xor
call
mov
push
mov
pop
clc
in
jbe
and
out
inc
add
add
pop
testl
xchg
call
xlat
test
addr16
popa
outsl
and
add
addb
push
add
addb
in
icebp
insb
jne
add
and
sbb
cmp
add
add
xchg
push
add
mov
add
add
lock
add
insl
popf
sbb
sub
xlat
mov
add
aaa
sbb
cltd
sub
jg
add
xor
and
nopl
pop
in
inc
add
popf
add
dec
sub
add
in
stc
push
add
gs
push
jle
add
addr16
mov
dec
jmp
or
add
mov
xor
dec
je
imul
mov
ja
xor
pop
inc
pop
sub
fistpll
push
add
pop
sarl
pop
je
outsb
stc
sarl
cmp
add
xor
add
pop
std
in
pusha
add
fstpt
imul
mov
and
mov
hlt
add
dec
popa
loope
add
pop
and
mov
pop
xchg
add
ret
push
add
lea
mov
sahf
sbb
mov
add
data16
mov
mov
add
stos
jns
add
add
nop
add
add
add
inc
xchg
addb
sbb
add
add
mov
popf
mov
clc
cmp
add
add
les
xor
lods
xchg
add
sub
add
xor
add
movsl
je
xchg
fldl
jmp
add
lahf
dec
movb
add
mov
jl
add
sub
jl
call
pusha
add
aad
add
add
flds
aas
outsb
push
jne
lods
add
mov
test
cmpsb
add
add
mov
jne
inc
xor
jns
add
lret
rol
push
xor
rorl
sahf
sbb
add
aad
add
add
push
jp
push
add
outsl
fdivrs
mov
push
xor
add
leave
push
inc
add
adc
addb
ja
xor
mov
cmp
pop
jo
sub
add
xor
mov
mov
mov
add
cmp
ret
sub
add
mov
mov
or
mov
push
repz
sbb
sbb
outsb
arpl
stc
mov
call
nop
add
insl
mov
add
pop
lahf
aas
test
in
add
add
sbb
into
pushf
filds
add
jge
and
mov
add
dec
lfs
inc
add
add
lock
dec
prefetch
aad
daa
jg
add
xchg
push
add
jb
pop
mov
add
xor
pop
popf
les
aad
pop
loop
stos
cltd
fsubrs
mov
or
push
add
add
add
mov
ret
add
add
test
add
sbb
js
lds
jnp
stos
push
add
insl
mov
add
aam
ficompl
add
adc
rolb
push
add
add
add
add
and
pop
dec
mov
loope
pushl
mov
add
and
mov
cmpsb
add
pop
arpl
inc
sub
aad
add
fstps
mov
adc
and
add
add
out
xchg
addb
test
add
add
sahf
xchg
add
inc
pop
lret
adc
sub
dec
popf
mov
addb
call
cwtl
pop
cmp
out
xlat
movsl
imul
jecxz
out
add
add
xlat
lock
movb
repz
cltd
nop
add
mov
rcll
mov
mov
loope
sub
mov
leave
and
mov
add
rolb
push
push
fildll
push
add
inc
add
out
test
les
inc
fildll
add
push
xor
into
clc
loop
cmpsl
out
inc
add
push
stc
add
movb
pop
btr
xchg
add
add
sbb
add
ret
add
mov
or
inc
add
add
mov
add
cmpsl
sbb
push
pop
jbe
jl
cmc
push
push
arpl
jecxz
in
pop
sti
test
push
add
mov
fcomp
cmp
add
add
add
add
adc
sbb
xchg
push
add
add
aam
inc
add
mov
lock
add
dec
push
cld
aad
bound
mov
add
mov
add
add
sbb
jae
fsubl
std
sub
bound
mov
mov
add
imul
inc
pop
xchg
add
clc
sbb
sbb
add
jl
and
add
cs
into
and
mov
addb
jg
add
nop
add
fcom
aam
insl
xor
cmp
daa
inc
push
add
or
mov
xchg
add
add
cli
mov
mov
js
add
adc
out
xchg
loop
call
out
sbb
icebp
nop
add
ss
mov
int
and
mov
mov
add
mov
add
mov
data16
push
les
mov
loope
pop
hlt
add
rcll
jne
or
mov
fucom
add
inc
add
pop
sub
dec
push
daa
sub
cmp
add
pusha
add
add
push
add
lock
xorl
add
pop
xlat
push
repz
add
xchg
add
mov
cli
lods
cmp
add
mov
mov
ret
ret
movb
push
inc
add
mov
enter
add
sbb
add
push
pop
stos
cmp
xchg
mov
cs
inc
add
aad
fdivrl
adc
pop
and
and
lcall
mov
inc
add
mov
aad
in
sub
dec
pop
jl
loope
lods
or
into
mov
sbb
fstpt
inc
cmpsb
add
add
add
pop
dec
and
mov
outsb
mov
add
add
stc
adc
add
add
sub
call
add
js
data16
jmp
xchg
add
test
add
add
mov
ret
push
add
int3
push
mov
inc
rolb
mov
add
arpl
or
add
cmp
jecxz
call
test
add
flds
mov
adc
pop
sub
push
add
add
fdivrl
inc
jmp
sar
cltd
inc
das
dec
sub
out
sub
lret
fdivrl
fsubl
stos
xor
xor
or
jmp
push
add
int
movb
push
add
aaa
jmp
lods
roll
arpl
mov
add
push
push
or
add
add
mov
sbb
jge
clc
enter
cmp
jno
ret
dec
ljmp
sbbl
add
mov
add
add
fwait
mov
popa
jne
add
sti
arpl
add
jnp
push
add
xchg
adc
inc
lds
push
dec
sbb
leave
int
jns
test
mov
push
add
sub
adc
xchg
cltd
push
add
or
das
cwtl
push
add
mov
test
js
es
adc
outsl
repnz
mov
sbb
pop
or
cmp
lods
sahf
out
push
add
mov
scas
jge
inc
add
add
mov
add
add
sbb
lcall
mov
add
jae
cli
sbb
inc
add
jl
cmp
and
mov
add
inc
add
push
mov
loop
pop
jge
add
ret
test
enter
mov
lock
add
add
push
add
add
cld
push
in
cmp
adc
xchg
fadds
fidivrl
add
inc
add
add
or
add
sbb
hlt
add
sub
add
jge
add
add
jne
mov
lods
fcmovne
dec
jp
gs
rolb
test
cmp
popf
jg
pushf
jge
jl
pop
daa
fnstsw
fbld
mov
shll
add
inc
add
inc
mov
push
adc
aad
movsl
or
add
add
lahf
rolb
sub
rorl
int3
cmp
fcompl
mov
xchg
add
cltd
movb
jle
addb
add
add
mov
pushl
mov
sbb
or
lahf
daa
inc
aam
outsb
sub
add
addb
xchg
add
dec
jg
arpl
mov
out
or
loopne
jbe
addl
or
jns
lds
inc
add
pusha
add
jmp
sub
out
repz
pusha
add
add
sbb
fldl
mov
sub
mov
stc
aas
or
enter
add
adc
cmpsb
add
mov
dec
sub
leave
add
mov
mov
rcll
lret
cmpsl
add
mov
add
enter
cmp
test
fisubrs
bound
mov
add
mov
mov
mov
xlat
or
xlat
xchg
add
sub
mov
js
adc
xchg
into
xchg
bound
mov
push
mov
add
pop
out
iret
idiv
std
sar
xor
imul
mov
add
push
add
test
mul
out
sti
inc
imul
add
sub
cli
push
push
adc
sub
mov
mov
imul
lds
jo
pop
jle
loope
add
add
fidivrs
fsubl
aad
and
movb
push
rolb
aaa
and
mov
add
sahf
mov
call
sbb
mov
xchg
dec
out
pop
fcomp
rolb
inc
add
jmp
test
add
adc
cld
cmovno
or
add
rolb
mov
add
repz
add
xor
add
add
add
push
add
mov
call
fcompl
and
sbbl
mov
aaa
test
loopne
clc
movsb
add
add
add
data16
add
add
pop
cs
add
es
add
add
jecxz
movsb
add
fisubrl
lods
lock
inc
add
add
daa
mov
or
push
add
push
add
rolb
push
add
add
ljmp
jge
test
add
add
dec
inc
jae
add
addb
push
cs
sub
cmpsb
add
push
out
lods
testb
in
xchg
push
add
jb
jne
push
xor
scas
inc
add
add
iret
ds
xchg
xchg
mul
add
mov
rol
rolb
nop
movb
add
xlat
lea
fistps
roll
mov
add
add
les
orl
add
scas
mov
push
mov
sub
sub
add
push
add
mov
cmpl
push
add
enter
repnz
add
mov
adc
jns
add
adc
outsl
outsb
jp
fsubs
mov
xchg
add
fsubs
add
add
cmp
add
add
hlt
add
out
push
add
dec
mov
cwtl
or
mov
adc
in
mov
add
scas
jmp
popl
popf
data16
mov
js
add
add
jne
sub
add
in
mov
stc
aaa
pop
add
hlt
add
xor
add
add
pop
mov
testb
add
add
add
mov
push
cli
inc
add
int3
dec
ret
mov
icebp
jg
push
add
sub
add
jp
lods
adc
add
mov
add
arpl
add
mov
adc
fisubrl
out
sbb
add
scas
mov
int
add
add
add
ret
in
ret
les
jae
add
add
push
add
insb
std
xchg
lret
or
xor
adc
add
in
lret
add
dec
push
insl
push
add
negl
adc
sti
lret
jg
pop
call
adc
pop
sub
sub
sbb
clc
sub
leave
jnp
add
fsubrs
fld
pop
mov
lock
add
push
test
adc
lea
mov
mov
add
add
push
add
add
ret
stos
inc
add
sub
add
add
add
mov
in
add
add
add
add
push
add
aaa
pop
rcll
jno
add
add
jo
dec
inc
cld
jl
mov
mov
add
add
enter
add
lods
and
lds
call
xchg
in
rolb
sti
stos
stos
xor
ret
lret
je
mov
fstps
in
jmp
stos
xchg
out
push
add
sbb
mov
add
add
push
in
jge
mov
fistpll
inc
add
fnsave
mov
cs
outsb
movb
xchg
fstl
cltd
cli
loop
and
mov
and
sahf
and
mov
fmuls
dec
mov
stos
mov
iret
xor
adc
sub
insl
mov
dec
add
int3
cmpsl
dec
fstpl
add
add
ret
lcall
cmp
mov
add
add
add
or
add
add
aas
jne
pop
ret
mov
adc
jae
fdivrs
xchg
fldenv
mov
mov
add
dec
xor
jne
pop
fs
fsubl
xchg
add
stos
inc
jecxz
and
mov
jnp
mov
push
add
add
jbe
out
lret
add
inc
inc
mov
add
test
mov
jecxz
rolb
and
sbb
stos
push
fisubrs
add
leave
adc
sbb
push
hlt
add
sub
and
mov
push
add
outsl
into
popa
lcall
repnz
jns
dec
into
add
aam
clc
les
push
add
orl
ret
jle
and
xchg
add
add
push
add
ficompl
dec
cmc
and
icebp
add
pop
or
addb
sbb
aas
or
or
pop
mov
and
mov
xor
inc
add
add
add
mov
lcall
add
loopne
mov
je
loope
iret
data16
dec
ret
cmp
add
mov
cs
popf
cwtl
inc
pop
dec
lcall
add
repnz
add
push
add
or
arpl
sub
push
add
inc
mov
cmpsb
add
call
daa
dec
inc
rolb
add
or
inc
add
mov
enter
mov
mov
add
mov
adc
xchg
cld
aam
clc
loope
add
rolb
xchg
fdivs
es
mov
jae
jbe
dec
pop
add
and
mov
push
add
add
leave
clc
mov
xchg
add
rolb
lods
ja
add
cmp
std
dec
or
jp
add
jmp
xchg
or
push
cli
ds
add
add
add
pop
and
mov
dec
fcomps
jo
clc
jbe
inc
cmp
jne
loope
loope
add
xchg
test
cli
mov
mov
pop
les
pop
sahf
pop
lcall
inc
stos
ret
outsb
mov
rolb
add
cs
xchg
mov
add
std
das
ljmp
ret
inc
add
mov
mov
add
rolb
iret
lret
pop
nop
add
adc
sbb
nop
add
lods
rolb
jecxz
outsl
out
mov
inc
add
mov
add
dec
dec
inc
jns
add
adc
loope
add
scas
mov
pop
popa
paddd
xchg
cmp
jmp
add
jno
enter
lods
mov
cmp
in
add
and
mov
jne
or
test
lahf
enter
add
add
add
add
clc
mov
or
mov
sub
add
dec
gs
cmp
add
add
stos
call
add
add
xor
cld
add
mov
scas
roll
add
add
mov
add
mov
scas
fsubr
test
add
add
cmp
mov
in
mov
or
int3
add
mov
mov
fcomps
add
addb
rolb
add
dec
push
add
adc
add
les
mov
cmp
rorl
ret
dec
ljmp
push
stc
mov
mov
cmp
cmp
loopne
test
dec
mov
test
add
nop
add
add
add
in
sub
pop
lahf
mov
push
add
loopne
loop
mov
rorl
push
add
add
mov
repz
outsb
xchg
test
mov
cwtl
xchg
aad
add
push
roll
pop
addb
popf
js
shl
punpckldq
mov
add
add
int
and
mov
mov
das
xchg
add
sub
mov
pop
mov
imul
xchg
add
push
add
out
and
ja
jne
dec
mov
sub
add
add
mov
sbb
dec
sub
pop
pop
lds
stc
rcl
add
add
sbb
add
mov
cmc
pop
and
mov
add
sbb
inc
sbb
jmp
stos
adc
icebp
sub
pop
inc
add
add
mov
add
push
xchg
add
xchg
add
and
mov
icebp
movsb
add
iret
mov
cmpsl
les
jb
nop
add
hlt
add
xor
xchg
icebp
mov
jns
ret
dec
in
inc
add
xor
cld
mov
add
add
ret
test
cmp
jg
sub
ds
cmc
in
add
jl
jno
jb
orl
add
xor
addb
fistpll
outsl
push
add
add
test
push
push
add
dec
mov
bound
mov
lahf
mov
popf
mov
pop
loope
add
scas
int
lods
int3
cmc
in
sbb
jp
add
lahf
std
repnz
add
popa
insb
push
add
imul
outsl
call
xlat
adc
add
add
test
dec
rol
cmp
add
add
mov
add
pop
or
testl
scas
push
add
add
and
mov
add
add
clc
push
add
icebp
and
add
inc
add
mov
xor
jle
movsl
mov
cmp
mov
out
xchg
add
icebp
dec
movb
movsb
add
lds
jo
addb
mov
faddl
insl
push
dec
lcall
inc
movsb
add
add
sbb
pusha
add
add
call
out
cmpsl
inc
insb
xchg
bound
mov
cmp
add
test
mov
sub
mov
jbe
les
ja
test
dec
add
dec
or
add
and
add
in
mov
xchg
pop
addb
push
int3
jns
push
add
add
mov
fcoms
add
and
mov
add
scas
das
les
dec
add
add
mov
and
sub
add
inc
push
add
push
add
add
add
sbb
mov
add
mov
mov
xor
add
xor
aaa
xchg
xor
popa
in
aas
popa
jno
inc
add
cmp
mov
roll
sub
cmp
push
mov
add
add
sahf
xor
andl
pop
adc
pop
cmp
adc
lahf
adc
add
mov
mov
adcl
add
fdivr
mov
add
add
mov
or
sbb
xlat
ret
lahf
push
inc
dec
js
add
add
pop
sbb
movb
add
outsl
leave
adc
add
xor
loop
add
clc
mov
enter
lds
add
fiadds
inc
add
or
cltd
shr
mov
ds
add
push
pop
and
popf
pop
xor
add
add
add
push
add
add
add
jbe
xor
mov
add
lea
xlat
cmpsb
add
cwtl
enter
pop
int3
ret
add
out
pop
pop
imul
jp
add
ja
add
cli
mov
sub
into
andl
data16
ljmp
movsl
testb
xchg
iret
mov
push
std
xchg
es
sti
movsl
dec
mov
add
add
mov
xor
stc
mov
cmp
fistl
push
add
add
ljmp
pop
add
mov
pop
mov
int
add
push
enter
add
lods
mov
pop
into
cmp
add
push
add
out
sub
push
add
sbb
add
dec
test
in
cmp
mov
into
ljmp
sbb
cmp
lods
mov
jo
add
stos
pusha
add
add
add
xchg
insl
or
and
xchg
arpl
mov
decb
enter
pop
lea
xchg
mull
ds
mov
dec
mov
mov
cs
sbb
lcall
fimull
inc
add
outsl
add
add
mov
cmpsb
add
add
out
mov
add
add
add
cmp
add
add
mov
fadds
mov
mov
divl
pop
lcall
push
add
sub
add
out
std
mov
jnp
add
jne
mov
pop
dec
add
in
rolb
shl
jle
pop
add
mov
add
adc
fidivrs
inc
das
adc
shll
ja
add
inc
add
sub
jb
into
jae
inc
add
add
jge
add
scas
or
nop
add
cmp
mov
mov
adc
add
dec
stos
adc
xchg
dec
inc
add
sub
add
xchg
scas
mov
mov
iret
testl
or
jl
pushf
addb
pop
sub
jmp
push
add
pushf
inc
add
add
mov
mov
clc
pop
jmp
fisubl
add
inc
out
mov
add
jecxz
jmp
add
imul
add
add
add
add
lahf
sarl
ljmp
xchg
cmp
orl
imul
sti
push
sbb
pop
loop
ljmp
fmulp
dec
das
or
rolb
push
add
add
dec
pushf
ret
mov
ljmp
inc
add
movsl
and
mov
push
ja
add
add
icebp
nop
add
push
add
fcmovnb
add
in
add
mov
sbb
aad
addb
add
mov
or
sti
daa
jnp
add
mov
cmpsl
int3
dec
cli
jnp
add
adc
jae
add
xor
adc
xor
pop
rolb
push
cmp
cli
dec
stc
push
or
mov
jecxz
add
and
jmp
lds
add
mov
push
add
xchg
mov
pop
rcrl
dec
movsb
add
add
outsb
xor
ret
aad
jmp
add
inc
add
call
add
ffreep
inc
call
add
dec
loope
add
outsl
pop
push
mov
sbb
add
imul
xchg
sti
sbb
push
sbb
sarl
mov
add
inc
pusha
add
imul
add
add
dec
lret
movsl
push
add
mov
imull
adc
aaa
or
and
cmp
dec
arpl
out
push
or
ljmp
mov
add
sbb
add
pop
jbe
movsb
add
and
mov
push
add
jecxz
xor
add
clc
push
add
icebp
pop
add
push
add
roll
dec
pop
add
cltd
test
adc
sbb
add
mov
adc
jnp
add
add
mov
jmp
add
add
sub
or
mov
insl
repz
mov
add
aad
in
and
mov
mov
mov
inc
add
add
add
movsl
xchg
cmp
or
push
add
notl
icebp
add
fnsave
add
rorl
add
xor
sub
jmp
incb
mov
rcll
add
adc
xchg
cs
add
jecxz
push
inc
mov
add
add
mov
repz
iret
fldenv
cs
jno
inc
lret
mov
das
mov
inc
cmp
movb
sarl
mov
mov
add
jl
add
mov
int3
mov
sbb
hlt
add
xor
out
cmp
cwtl
lods
enter
out
xchg
add
lret
sub
sub
pop
jl
push
add
jne
add
jo
test
out
push
add
add
add
add
add
mov
add
inc
add
popf
in
add
mov
add
pop
lods
adc
xchg
jecxz
xor
or
adc
lret
popa
out
movsb
add
adc
les
ficompl
ss
jmp
pop
cmpl
add
add
mov
cmp
jl
or
jecxz
add
jge
push
add
out
pop
xchg
cltd
mov
or
xchg
fstpl
inc
fnstsw
lret
dec
xor
add
adc
xor
add
test
add
add
dec
cmpsb
add
jmp
int
add
mov
loopne
sti
xchg
add
or
jle
add
jns
stos
xchg
inc
ret
xlat
and
int
xchg
add
mov
pop
adc
mov
add
mov
add
dec
in
jp
push
push
pop
push
xor
add
and
lcall
push
add
add
imul
inc
add
loop
pop
test
out
mov
mov
jl
and
mov
into
movb
jge
sbb
into
sbb
add
push
add
add
add
mov
ret
mov
mov
enter
std
xchg
add
dec
jbe
jp
out
test
push
push
add
sub
add
or
fldenv
xchg
jmp
lods
sub
add
pop
dec
mov
adc
test
add
jmp
add
mov
add
push
popa
inc
lcall
clc
std
insb
adc
add
jecxz
add
mov
lahf
test
mov
test
ficoml
add
add
test
jmp
addb
mov
mov
add
xor
xchg
add
and
mov
sub
add
and
mov
add
nop
add
int3
push
add
add
push
das
dec
mov
add
pop
call
ss
addr16
add
sub
add
mov
pop
dec
lea
mov
enter
add
add
sbb
pop
mov
mov
mov
js
add
jmp
inc
mov
dec
mov
mov
test
je
div
add
add
test
cld
aaa
mov
add
pop
jb
jns
and
mov
add
add
ret
and
mov
add
mov
adc
adc
mov
mov
adc
add
cmpsb
add
cld
push
xchg
add
push
iret
mov
add
mov
test
cwtl
cli
pop
in
and
add
sbb
add
xchg
xchg
add
rolb
sbb
jmp
int3
dec
stos
test
add
add
lret
cmpsb
add
mov
adc
sbb
dec
pop
and
mov
adc
xchg
mov
ret
cmpsb
add
movb
add
mov
stc
adc
pop
pop
data16
cmpsb
add
imul
lret
add
mov
mov
lret
and
scas
rolb
adc
dec
sub
bound
mov
lds
out
xchg
jns
cltd
vmovsd
add
lcall
add
add
add
jo
or
bound
mov
movb
movl
mov
fimuls
mov
fidivs
in
rolb
fists
jl
sub
and
mov
push
add
cmp
sbb
mov
jb
jp
xchg
add
cs
add
sti
cmp
adc
aam
xchg
movsb
add
pop
ds
add
mov
add
add
sbb
in
nop
add
pop
adcl
ljmp
leave
popa
repz
adc
xor
pop
in
adc
pop
mov
add
sub
add
icebp
stc
adc
psraw
add
mov
push
add
mov
add
pop
out
xor
lds
add
add
add
add
dec
push
mov
pop
out
cwtl
push
add
sbb
dec
mov
fnstcw
or
jb
dec
xchg
add
xchg
add
int
loopne
test
divl
out
add
movb
mov
lret
pop
xchg
add
pop
push
jo
push
add
in
cs
mov
add
mov
or
pop
push
xchg
add
cltd
sub
ds
cmp
cli
pop
pop
mov
xlat
test
imul
add
mov
add
stc
lahf
dec
mov
add
jmp
cmp
push
add
sbb
add
clc
out
cmp
data16
iret
fwait
and
aaa
data16
xor
add
cmp
dec
push
add
loopne
xchg
int3
fidivrs
insl
les
push
add
mov
mov
cmp
cld
in
add
add
mov
test
fmull
add
add
dec
arpl
imul
fstpt
add
add
test
adc
dec
add
or
and
add
sbb
xchg
cli
jp
js
add
add
sbb
inc
add
cmpsb
add
loop
adc
rolb
sbb
out
insb
jns
xchg
aad
leave
adc
add
add
dec
das
scas
add
and
hlt
add
ret
in
ja
add
xchg
add
add
add
lods
mov
push
add
lret
mov
ret
loopne
cli
or
add
push
xchg
addb
lods
das
fcoms
movb
xchg
add
inc
ret
pop
mov
add
fistl
movsl
adc
add
mov
cmp
in
push
add
add
adc
mov
pop
fiadds
stos
add
mov
xor
rcl
add
addr16
cmp
call
add
add
leave
or
cmp
xchg
out
inc
add
gs
inc
gs
std
outsl
xchg
push
iret
xor
push
add
mov
add
add
add
mov
add
inc
add
add
mov
aas
call
sub
icebp
popf
sysret
pop
mov
mov
inc
in
mov
xor
lret
call
cmpsl
inc
add
invd
repnz
fidivrl
add
jmp
decb
add
pop
insl
mov
sahf
xor
dec
mov
insb
call
pop
sub
andps
add
mov
loopne
scas
inc
jmp
add
push
cld
adc
aad
or
lret
lahf
inc
mov
clc
mov
add
sub
fcom
add
mov
add
add
jecxz
adc
mov
add
xchg
add
xchg
adc
movsb
add
xor
mov
loope
cmpsb
add
add
cmp
jecxz
mov
bound
mov
mov
add
add
xchg
mov
add
push
ret
adc
sbb
lea
iret
dec
jns
xchg
aaa
xchg
data16
add
cmp
adc
jle
add
mov
int3
add
mov
add
ficomps
jns
pop
insl
jmp
add
jnp
jae
add
or
xchg
imul
dec
xlat
lock
sub
add
clc
rolb
mov
xchg
add
test
lock
mov
mov
mov
push
add
addb
mov
sbb
add
lahf
inc
add
jnp
add
out
add
add
roll
push
add
jg
add
mov
in
sub
xchg
add
add
add
jne
subl
mov
int3
imul
add
pop
cmp
add
mov
rolb
leave
and
mov
dec
adc
adc
add
loop
enter
push
pop
scas
jne
xchg
add
jno
xor
arpl
ret
push
add
icebp
test
jns
cmp
jle
sahf
mov
add
call
int
inc
add
out
lahf
xchg
sbb
fdivl
dec
xchg
jg
add
sub
repz
mov
cwtl
fstpl
adc
call
mov
add
add
int
fistl
add
adc
pop
mov
popa
mov
aad
and
mov
or
push
add
inc
ret
int
dec
push
mov
jae
add
pop
dec
dec
sbb
pop
ja
xchg
popf
sub
add
mov
add
pop
es
add
clc
jmp
ja
add
push
add
add
xchg
pop
imul
cmpsl
xchg
add
jne
rorl
add
xchg
push
add
add
mov
push
add
jns
test
add
aaa
cmpsb
add
add
add
jns
mov
add
pop
sub
loop
mov
cmp
out
dec
xor
addb
out
add
mov
mov
scas
repnz
mov
sbb
add
add
ret
inc
add
lret
add
rolb
mov
push
add
fsubrl
add
bound
mov
xlat
lods
and
pop
repz
mov
add
test
je
rolb
mov
aas
cmp
push
out
mov
add
xchg
dec
jle
add
xor
dec
gs
repnz
stc
mov
add
cmp
mov
cltd
cltd
pop
mov
fildl
add
or
inc
lods
pop
fsubr
lret
sub
imul
in
cltd
adc
adc
cmp
add
add
mov
aad
pusha
add
outsb
xchg
test
les
lods
testb
cmp
add
add
les
cmpsl
mov
and
pop
mov
mov
test
fimuls
add
lcall
add
and
jae
lods
pop
in
daa
xchg
add
add
mov
mov
cmp
mov
addr16
mov
inc
sbb
add
dec
leave
mov
mov
add
and
jmp
repnz
add
add
fmuls
xchg
sbb
jp
test
add
lcall
mov
add
add
or
std
test
add
dec
sahf
pusha
add
add
daa
dec
mov
add
addb
push
add
sbb
mov
sbb
mov
add
add
add
mov
add
add
loop
psrlw
xor
cmp
stos
leave
xchg
add
jb
jge
jecxz
add
imul
xchg
add
xor
sub
cmp
and
enter
add
testl
add
jecxz
push
push
add
cmc
jae
add
mov
sub
add
fsubs
lcall
lcall
add
sbbl
push
add
int3
mov
inc
add
mov
add
xor
pop
fdiv
stc
subl
mov
inc
add
jp
adc
pop
inc
jnp
and
cmpsl
adc
inc
mov
add
push
iret
scas
popf
add
mov
inc
hlt
add
mov
pop
pop
mov
add
add
jg
test
sbb
fsub
and
sbb
pop
sub
inc
add
add
add
jp
mov
popa
inc
add
dec
cmp
add
loope
add
pop
add
cmp
rolb
lret
cmp
mov
out
xor
pop
inc
pusha
add
fwait
dec
inc
add
ljmp
cmc
mov
jle
add
stos
incb
sub
add
mov
test
push
add
add
cli
lret
mov
std
movsl
cmpsl
mov
inc
cld
lea
repz
mov
add
cld
mov
inc
add
add
dec
xchg
add
jae
arpl
adc
dec
xor
add
dec
inc
add
add
ljmp
add
add
outsb
out
call
insl
sbbl
and
pop
xchg
adc
lcall
rolb
mov
rcll
dec
mov
jle
jecxz
add
add
push
cmc
and
in
and
adc
add
addb
jns
pusha
add
insb
and
or
movb
add
jo
jmp
add
mov
sub
lea
pop
pop
pop
loope
cmp
and
sbb
add
loope
mov
outsl
into
add
add
push
sub
cmp
mov
mov
jb
cmp
add
in
dec
mov
int
arpl
nop
add
lahf
ss
add
inc
inc
stc
out
aad
add
add
cmpsl
in
jnp
dec
cmp
or
cmp
jae
fwait
add
lahf
xchg
add
and
push
add
xor
mov
mov
add
xchg
add
push
pop
push
add
add
scas
jne
loop
lea
xor
pusha
add
cmpl
pop
int3
mov
add
add
inc
add
test
push
add
or
sbb
cwtl
nop
add
adc
movsb
add
lods
cmc
and
mov
aad
jno
icebp
jl
pop
pop
inc
jge
sbb
mov
add
testb
add
hlt
add
lea
pop
and
add
test
jg
je
jecxz
les
mov
rolb
cmpsl
adcl
imul
add
cli
sti
ret
insb
mov
dec
or
sahf
mov
mov
add
add
rolb
add
xchg
pop
xchg
add
jno
xor
push
jbe
adc
add
aam
scas
fldt
jnp
dec
push
add
and
add
dec
push
inc
add
jp
addb
mov
adc
adc
inc
outsb
repnz
sub
add
out
jge
and
cli
call
add
xchg
or
test
pop
mov
sbb
stos
inc
add
add
mov
mov
mov
fisubrl
xchg
cmc
lcall
mov
cmp
ret
pop
fdivrs
adc
jno
daa
pop
add
add
aas
sub
and
add
ljmp
add
daa
cli
int3
adc
lcall
lcall
jae
test
fcoms
add
mov
add
mov
dec
fnstcw
and
mov
addb
jne
out
xchg
icebp
addb
aas
adc
jbe
imul
int
add
add
mov
adc
mov
insb
and
insl
fwait
dec
int3
xchg
mov
add
addb
ss
das
or
adc
dec
xchg
add
lret
cmp
stos
test
push
out
loopne
push
add
loopne
fisttps
add
cmp
add
xor
or
mov
cmc
push
adc
jmp
jge
add
cs
mov
pusha
add
jge
add
add
or
add
cld
adc
and
loope
add
sar
imul
add
xchg
add
insb
popa
jns
add
fmull
iret
xlat
push
dec
lret
dec
bound
mov
filds
mov
dec
add
imul
mov
jl
loop
cmp
add
xchg
add
cmc
call
xchg
add
add
add
add
add
add
clc
in
add
xor
adc
add
call
data16
sub
sbb
add
imul
ret
faddl
add
dec
aaa
fwait
mov
test
jo
test
insl
rolb
dec
xor
test
add
mov
add
movb
add
mov
inc
lret
sbb
sbb
mov
cmp
push
add
add
loope
add
ljmp
add
mov
add
xchg
pushf
fidivs
vxorps
add
and
sbb
add
repz
mov
fadd
add
add
xor
jbe
fidivrl
jp
add
add
jno,pn
rolb
dec
loop
push
ljmp
add
inc
add
int3
pop
mov
add
mov
add
mov
outsl
pop
popa
lods
cmovge
jbe
push
add
jg
add
add
je
lods
ret
mov
jae
add
ds
jmp
adc
ds
sub
add
mov
mov
add
add
fsubp
add
adc
jle
add
add
movsb
add
dec
fistpll
cltd
add
push
add
std
dec
jle
add
add
xor
add
rolb
int
add
addl
sbb
cwtl
dec
testb
adc
fadds
cmc
jge
xchg
and
xchg
add
in
cmp
xchg
add
xchg
dec
inc
mov
add
add
jns
pop
fwait
push
add
out
xor
add
add
and
mov
add
add
stc
jns
testb
add
lret
inc
add
mov
push
add
add
dec
xor
sbb
data16
or
mov
sub
mov
cmp
outsl
das
fwait
cmp
sti
adc
cmpsb
add
pop
dec
testl
jle
movsb
add
lods
mov
add
das
lcall
fbld
jg
lahf
addb
add
add
mov
lret
xchg
add
add
adc
popa
add
xor
sub
add
add
mov
add
mov
test
test
aad
and
mov
add
mov
fisubrl
inc
mov
push
add
add
pop
mov
sub
mov
add
rolb
clc
sub
dec
jo
ja
mov
pop
fstl
xorl
pushf
popf
sub
push
lock
mov
add
bound
mov
addb
add
mov
add
push
dec
cmpsl
pop
mov
jne
add
xchg
sbb
add
add
add
add
add
enter
lds
lcall
sbb
addr16
add
add
rcrl
pop
xor
add
nop
add
cltd
repnz
pop
xbegin
cmp
adc
movsb
add
mov
adc
mov
repnz
int3
push
add
add
jbe
repnz
add
addb
add
fsub
add
cmp
mov
push
add
add
loope
stc
dec
bound
mov
jg
cmp
test
adc
push
add
loop
gs
in
ret
inc
loope
add
sbb
lea
aas
push
ds
adc
lods
fildl
jp
sahf
jae
add
mov
mov
add
xlat
push
bound
mov
scas
lcall
add
add
add
mov
sub
data16
jecxz
add
xor
add
data16
enter
addr16
sub
add
jg
pop
mov
and
fisubrl
in
dec
daa
jne
pushf
inc
add
sbb
add
inc
mov
push
pop
test
lea
into
rolb
imul
aam
aad
add
add
add
repz
add
lea
movb
add
add
add
xchg
mov
js
xor
lret
mov
lock
ljmp
push
xlat
push
mov
add
rolb
addb
insl
or
cmc
add
testb
arpl
inc
and
add
add
ret
testb
sub
push
add
mov
or
lret
add
test
and
add
add
js
sti
push
add
jbe
mov
xchg
js
inc
mov
xchg
lcall
add
add
pusha
add
cmp
iret
fisubrl
rolb
and
sbb
mov
push
loopne
pop
pop
hlt
add
add
add
push
add
add
scas
iret
mov
add
fstpl
add
xor
push
add
cmpsl
adc
add
mov
scas
es
stc
inc
invd
into
jb
mov
ja
add
add
add
insl
pop
and
mov
dec
daa
dec
clc
pushf
cli
push
add
std
sbb
add
cwtl
jp
lods
lret
mov
adc
inc
add
pop
xchg
inc
lock
insl
push
jo
push
push
add
stc
add
pop
cmp
add
sbb
clc
or
mov
pop
jnp
add
imul
sub
out
add
repnz
out
add
add
pop
push
add
daa
aas
mov
scas
xor
add
xchg
imul
xor
push
add
outsl
mov
inc
in
add
lods
or
int3
mov
add
stc
pop
jmp
imul
xor
jno
push
add
cmp
popa
cmc
add
cmp
lret
loopne
push
sbb
inc
add
add
test
xor
push
add
add
add
push
clc
lods
and
imul
pop
add
add
add
faddl
add
lds
mov
dec
ljmp
cmc
mov
add
add
xchg
out
jbe
add
adc
mov
scas
ljmp
cmc
or
imul
mov
pop
std
xchg
add
mov
mov
fbld
add
sub
mov
add
add
ficoml
add
dec
adc
addb
pop
mov
xchg
iret
cld
addb
lret
sub
movsb
add
loopne,pn
loope
add
mov
add
daa
jns
rolb
out
mov
add
outsl
sub
in
mov
test
mov
mov
xchg
add
inc
cmp
push
add
add
fstps
add
add
add
pop
cmp
scas
or
imul
movsb
add
pop
loope
stos
jns
add
and
pop
test
pop
int
adc
add
popa
cmc
mov
add
push
les
add
mov
in
jns
cs
mov
xchg
sub
add
jo
popf
jmp
mov
push
push
add
mov
mov
xchg
into
mov
add
mov
testl
push
add
pop
enter
add
in
sbb
add
add
mov
aam
xchg
add
addb
add
inc
loope
mov
push
mov
inc
fimuls
cld
sbb
adc
add
dec
xchg
imul
push
and
mov
sub
repz
mov
jne
stos
addb
lret
add
test
and
add
scas
sbb
aaa
data16
mov
aad
les
movsl
aad
pop
fsubr
jg
addr16
lods
mov
mov
aam
jno
inc
mov
mov
add
add
add
add
xor
push
hlt
add
add
push
add
lahf
cwtl
leave
fldcw
add
add
push
jp
xor
pop
cmp
adc
jnp
aas
stos
mov
lahf
call
cs
or
adc
sub
addb
cmp
add
add
add
into
aad
jns
imul
and
aad
add
add
js
or
cwtl
xor
pop
sti
or
lods
mov
inc
add
std
xor
leave
mov
mov
push
mov
add
int
pop
clc
xor
incb
jnp
imul
pop
xchg
scas
in
loopne
out
mov
or
add
xchg
xchg
add
stos
cli
jb
sub
cmp
movb
add
imul
js
insl
xor
jp
mov
inc
add
rcrl
mov
inc
xchg
out
daa
push
add
inc
lcall
jg
add
cld
repz
mov
add
push
addr16
and
imul
jno
lds
add
rolb
call
add
xchg
cld
js
inc
add
testb
mov
sbb
jne
add
out
add
xor
cmp
or
test
sub
add
inc
scas
push
cmp
xchg
add
jae
les
dec
jmp
inc
add
popf
scas
cld
lea
cmpl
les
in
and
mov
mov
add
add
inc
push
pop
push
int
rolb
mov
add
add
mov
mov
mov
lods
jbe
ret
out
pop
lret
add
pop
cmp
add
lods
add
xor
in
dec
ret
add
and
or
mov
lret
out
rolb
sbb
mov
rolb
adc
add
cmp
mov
rolb
rolb
add
ja
rcl
cmpsb
add
ficomps
add
nop
add
cwtl
mov
inc
fninit
movb
or
add
mov
add
movb
add
mov
add
mov
add
sbb
data16
addb
dec
dec
inc
add
icebp
aam
inc
add
add
test
jmp
test
je
fwait
loopne
push
add
add
adc
pop
cmp
mov
ljmp
or
sub
mov
add
inc
xchg
add
mov
add
loopne
inc
add
jns
imul
add
cmp
dec
ljmp
push
call
pushf
scas
sub
add
mov
mov
jmp
addb
and
mov
add
mov
pop
push
or
push
add
mov
js
rolb
xchg
add
cmovne
rorl
add
lahf
pop
scas
mov
add
add
add
mov
xchg
push
arpl
xor
adc
loopne
scas
js
lods
cmpsb
add
hlt
add
and
push
add
add
test
enter
inc
outsl
and
pop
arpl
add
rolb
addb
add
aam
adcl
das
cmp
add
add
int3
aam
jae
cmp
mov
mov
dec
cmp
jp
out
push
jmp
add
test
add
int
add
push
add
add
scas
xchg
dec
scas
ljmp
fsubp
mov
ret
add
push
mov
dec
mov
cs
push
add
repnz
adc
dec
stc
cmp
add
test
add
add
xchg
add
add
ljmp
add
iret
jb
adc
push
add
mov
subl
dec
push
add
add
add
mov
add
loop
mov
movsl
add
mov
mov
movsb
add
jns
add
pop
sub
add
sarl
js
movb
add
inc
scas
push
cmc
or
add
jns
cld
mov
add
xchg
add
stos
movsl
mov
cmp
add
nop
add
es
lock
jmp
mov
jno
cmp
pop
inc
je
gs
inc
sub
push
add
jnp
mov
lods
rolb
mov
xchg
pop
addr16
mov
aad
ret
nop
add
pop
dec
cmp
add
loope
add
addb
add
add
xchg
add
aas
ficomps
add
fadds
in
jg
cmp
and
ret
sbb
adc
push
add
inc
add
rolb
xor
shrl
xchg
mov
inc
add
arpl
je
out
rcll
jo
mov
push
jb
jl
cld
inc
add
add
rcll
jbe
scas
mov
mov
test
jnp
jb
adc
pop
add
cmpsl
push
add
int
aam
je
mov
add
mov
cmp
scas
push
mov
arpl
popa
cmp
ret
add
add
mov
xor
pushf
iret
fidivl
movb
lods
xchg
je
xor
leave
push
mov
and
jg
enter
add
mov
mov
lahf
jns
out
xor
add
repz
push
mov
movsb
add
inc
add
into
push
push
nop
add
ja,pn
add
add
fcomps
clc
xchg
add
add
mov
popa
xchg
add
xor
add
add
cmp
mov
lret
jl
push
jae
pushf
add
mov
adc
ja
jnp
push
ret
inc
and
mov
adc
add
outsl
inc
mov
add
fs
mov
inc
add
fld
mov
push
or
in
mov
add
cwtl
xchg
add
add
into
fiaddl
insl
jge
jo
sbb
add
add
ljmp
add
push
add
fwait
or
add
add
cmp
shll
cmp
and
leave
and
add
cmp
mov
jmp
add
jl
popa
movsl
inc
add
les
bound
mov
jnp
add
mov
imul
hlt
add
mov
in
mov
testb
jnp
insl
jp
lret
cmp
cmp
add
add
add
add
ja
add
lea
add
mov
add
cmp
add
add
or
add
jne
add
mov
std
jb
cmp
shll
fists
add
mov
add
fmuls
or
rolb
push
add
leave
pop
jmp
lret
jo
cmp
xor
cmc
mov
add
loope
lea
sbb
inc
add
pop
or
aam
xor
adc
pop
or
add
add
add
add
add
sbb
arpl
mov
push
add
mov
xor
xchg
cs
push
adc
dec
xchg
mov
mov
mov
and
mov
cmp
push
rcrl
loopne
in
pop
sub
add
add
mov
add
dec
sbb
dec
outsb
dec
mov
push
push
addb
push
add
lret
daa
sahf
xchg
pop
into
mov
add
pop
push
mov
mov
add
dec
shrl
add
jo
int
adc
jae
xor
adc
adc
pop
and
sahf
jl
jne
mov
add
pop
push
add
add
sbb
or
add
cmp
adc
sub
std
mov
add
rolb
cmp
add
dec
xor
inc
mov
fwait
jecxz
add
ja
xchg
jle
shll
clc
cmpsb
add
mov
insb
push
sbb
mov
mov
xor
insl
xor
imul
push
lds
mov
jae
add
pop
inc
add
adc
lcall
iret
repnz
mov
inc
add
add
or
push
jb
cmp
sub
push
xchg
loopne
subl
scas
insb
dec
mov
xchg
and
mov
clc
cmp
sbb
cltd
mov
cltd
stc
xchg
pop
mov
rolb
jbe
lock
jle
gs
add
add
repz
cmpsb
add
sub
mov
dec
bound
mov
lahf
cmc
xlat
or
add
out
push
add
addl
add
pop
cmpsl
stc
add
inc
add
testb
dec
scas
out
pop
or
movsl
push
add
add
add
repz
lods
jno
xchg
and
std
push
push
add
movsb
add
stos
imul
and
add
mov
mov
or
ljmp
mov
add
faddp
add
movsb
add
xchg
adc
jmp
xchg
scas
rolb
rcll
add
sub
mov
sbb
fbld
into
lcall
add
mov
pusha
add
inc
mov
sti
outsb
xchg
add
add
mov
repnz
adcl
push
add
jge
loope
add
xchg
add
pop
lds
cmp
mov
add
jmp
lret
jne
jmp
add
loopne
adc
arpl
push
cmpl
mov
mov
daa
pusha
add
mov
pop
cmpl
das
inc
xchg
pop
int3
or
rolb
jge
ja
insl
outsb
mov
add
jmp
add
inc
addb
add
dec
and
mov
add
push
add
add
add
push
dec
add
mov
add
add
add
inc
les
fdecstp
add
mov
add
fists
add
fwait
push
add
xchg
dec
arpl
jo
push
add
ljmp
les
mov
xchg
add
inc
fwait
jnp
testl
add
add
add
add
adc
xchg
add
ds
lret
push
add
inc
add
add
bound
mov
add
add
ret
loop
repz
mov
les
adc
cmpsl
mov
jne
lahf
inc
add
xchg
add
lahf
jb
sbb
add
inc
out
int3
add
mov
scas
outsb
xor
add
testb
stos
ret
or
add
jbe
sub
out
xchg
pop
jae
adc
cmp
xchg
mov
add
dec
in
and
xor
cmp
aam
dec
mov
add
mov
mov
pop
imul
test
jbe
dec
lret
add
add
dec
mov
add
xchg
imul
jl
mov
xchg
add
mov
sbb
add
xchg
push
add
movlps
sub
sub
add
jp
or
add
xchg
add
mov
xor
addb
add
dec
dec
movb
aas
mov
adc
les
popf
lahf
out
add
jmp
add
mov
sahf
push
and
add
jg
add
call
add
push
rolb
mov
fwait
mov
jb
hlt
add
nop
add
pop
loop
mov
pop
cltd
testb
scas
pusha
add
out
hlt
add
xor
ret
andl
ljmp
in
xchg
jb
out
divl
out
push
add
pop
add
add
aaa
movl
test
xchg
adc
out
xchg
ret
add
int3
fs
add
cmp
add
fiaddl
mov
pop
xor
fsts
add
mov
stc
imul
stos
rolb
loop
cmp
add
sbb
add
add
add
mov
fstp
in
test
lods
ret
int3
test
add
add
and
mov
or
movb
cmp
add
mov
pushf
sub
lret
cld
jmp
mov
xor
and
mov
mov
push
mov
filds
sbb
add
ds
add
rcrl
add
aaa
pushf
ds
add
mov
stos
fiaddl
add
mov
repnz
add
push
aas
add
cmc
addr16
jge
push
xor
inc
xor
into
icebp
add
jmp
add
add
jl
add
leave
repnz
in
ljmp
fists
xchg
dec
sub
loopne
nop
add
mov
lods
dec
mov
sbb
stc
xchg
add
or
stc
pop
mov
push
pusha
add
ret
sub
dec
pop
jmp
add
insb
and
cmp
add
push
add
add
clc
into
push
sbb
hlt
add
in
clc
roll
add
mov
aam
sbb
jle
add
int
add
fwait
cmp
push
add
lret
or
inc
mov
fdivrs
test
out
adc
jbe
or
pop
push
add
in
outsl
pushf
mov
je
idivl
out
mov
add
add
xor
movsl
data16
dec
aam
lcall
ljmp
stc
mov
cmc
rolb
add
inc
add
addr16
jl
add
add
sub
mov
xchg
arpl
add
push
aad
movb
lret
loope
mov
call
mov
add
add
inc
cli
adc
cmp
in
xchg
add
aas
mov
add
add
and
mov
mov
mov
call
inc
add
in
mov
adc
or
rolb
push
add
add
dec
sbb
xchg
push
add
scas
cmpsb
add
mov
add
add
mov
and
mov
push
add
mov
push
add
in
and
mov
lock
mov
cmc
sbb
popa
pop
sbb
cs
add
add
clc
test
push
faddl
push
add
ja
add
daa
aam
leave
cmpsl
mov
xor
push
add
arpl
add
testl
stos
ret
icebp
xchg
add
pop
pusha
add
add
dec
mov
jmp
pop
mov
add
add
add
add
jae
xchg
add
ret
insl
jbe
mov
adc
das
cld
add
mov
add
add
ja
add
lahf
rcrl
add
add
aad
mov
nopl
aaa
test
dec
pop
ret
add
int3
inc
add
add
sub
call
sbb
repnz
inc
add
mov
cmp
movsb
add
mov
icebp
sub
std
lret
add
mov
add
das
cli
jl
add
and
mov
add
lock
aad
add
add
push
dec
lock
addb
das
jecxz
aad
add
addb
add
jno
add
jno
add
mov
add
jmp
out
xor
add
add
and
and
cmp
hlt
add
inc
shrl
jns
pop
push
jmp
push
out
inc
jecxz
and
mov
bound
mov
inc
mov
js
push
in
xor
lret
loop
and
xchg
repnz
add
pop
lods
rol
adc
out
sahf
dec
mov
add
or
add
dec
lcall
add
imul
lahf
int
jno
xchg
add
sbb
add
or
xchg
add
add
cmp
add
mov
jmp
pushl
sub
in
mov
push
jns
pop
cmpsl
mov
mov
add
dec
mov
xor
loop
cmp
ljmp
add
fistl
add
imul
add
or
rolb
sarl
lds
pandn
mov
push
add
xchg
cltd
and
jae
imul
or
out
lret
add
inc
add
call
out
dec
inc
add
stc
sbb
loop
push
add
add
add
add
mov
iret
mov
cld
adc
mov
pop
xchg
cmpsb
add
pop
jecxz
lock
cwtl
rolb
movsb
add
popf
fcoms
sbb
pop
out
jmp
add
insl
push
inc
add
cmp
sub
call
loopne
fwait
dec
repz
inc
push
out
pop
and
js
mov
or
pop
inc
add
out
bound
mov
adc
addb
push
add
cmpsb
add
add
jbe
insl
mov
mov
out
nop
add
sub
or
test
ss
test
sbb
pop
arpl
loop
xor
xlat
jo
nop
add
jbe
pop
loope
add
xchg
in
imul
push
add
jae
pop
jle
and
cmp
add
lcall
das
push
scas
ret
iret
loope
add
inc
add
add
mov
dec
dec
fwait
ljmp
test
aaa
std
push
push
xor
dec
rcll
jmp
add
add
add
jecxz
add
lret
mov
jg
jmp
add
or
adc
mov
cli
push
add
mov
hlt
add
xchg
add
add
add
ret
push
add
add
mov
add
add
rolb
insb
mov
imul
cwtl
orl
movsl
in
cmp
push
stc
cmp
dec
or
int3
add
mov
lods
push
inc
add
add
std
imul
cmp
imul
lret
xchg
and
cmp
pop
mov
sub
mov
inc
cltd
xchg
add
mov
push
add
movb
stc
mov
jns
setge
add
mov
add
popf
movsl
push
inc
add
mov
sub
add
hlt
add
dec
iret
cmp
add
add
xlat
add
mov
cld
sub
out
test
adc
std
into
test
sub
mov
add
popa
into
outsl
test
ret
inc
add
add
xor
mov
enter
aad
dec
cmp
in
and
mov
xchg
addb
mov
add
push
and
mov
into
xor
cmp
add
or
add
add
pop
stos
stos
in
lock
pop
lock
fmul
and
pop
xchg
hlt
add
in
inc
mov
mov
xor
loope
roll
add
add
sub
lcall
cmp
add
fiaddl
add
xchg
add
movb
add
and
mov
push
mov
das
inc
add
and
mov
add
add
insb
cmp
insb
popa
addb
addr16
cmp
cmpsb
add
imul
add
add
jle
mov
push
and
mov
mov
inc
add
cli
ret
xchg
mov
outsb
jo
mov
popa
push
in
sbbl
ja
sbb
stos
outsb
out
aad
lret
xlat
mov
out
add
push
adc
xchg
pop
push
add
add
xchg
lret
mov
pop
movb
add
add
jne
inc
add
mov
sub
add
mov
jno,pt
enter
int3
cmpsb
add
add
in
loopne
cmp
add
push
aas
push
adc
jg
sahf
enter
add
add
add
mov
es
inc
add
stos
push
sbb
pop
xchg
inc
add
les
or
ljmp
add
pop
xchg
add
addb
add
sub
fistpll
add
pop
mov
add
add
push
sbb
xor
jnp
add
mov
add
xchg
fcmovnb
add
add
nop
add
adcl
add
inc
jmp
nop
add
add
pop
scas
ja
je
cmpsl
rolb
addb
add
inc
cld
mov
js
and
popf
inc
add
rolb
mov
inc
add
push
add
push
rolb
out
in
rolb
and
jo
cmc
pop
mov
add
add
mov
les
std
mov
add
jae
je
in
aaa
jnp
add
add
orl
push
pusha
add
mov
cmp
add
imul
add
add
add
add
mov
fistpl
imul
enter
jb
cmp
add
adc
pusha
add
scas
xor
add
add
loope
adc
scas
rolb
jg
jb
sbb
jno
and
mov
add
add
and
mov
lret
xlat
daa
leave
out
lcall
lods
lock
repz
adc
out
adc
and
add
inc
pop
xor
jp
into
sbb
mov
repz
in
insb
add
add
xchg
jne
call
add
add
mov
add
adc
std
mov
mov
stc
int3
push
xchg
orl
add
je
aas
add
scas
add
cltd
dec
bound
mov
pusha
add
mov
repnz
out
movsb
add
add
test
add
mov
mov
cmp
mov
rorl
add
add
xchg
out
jo
pop
outsl
jb
jg
mov
mov
inc
add
or
mov
push
add
xor
inc
add
sub
or
mov
add
add
into
stos
push
add
mov
add
mov
push
xchg
std
xlat
popf
mov
inc
jno
inc
add
dec
pop
jne
add
clc
jae
xor
adc
ficoml
sbbl
cmp
add
add
add
aaa
jbe
incl
mov
xor
push
add
push
add
int3
inc
add
outsl
in
fistps
ds
add
sti
xlat
pop
mov
sbb
add
add
scas
jae
push
push
push
jl
mov
pop
add
mov
addr16
arpl
out
fwait
jl
jg
add
mov
add
add
mov
lret
add
cmp
jns
cmp
mov
add
add
leave
addr16
mov
inc
add
in
les
xor
inc
jns
add
jno
xchg
fldcw
cmp
ds
lea
ret
add
mov
imul
sub
add
add
aam
dec
outsl
add
aas
xchg
add
mov
mov
mov
ss
add
sbb
push
add
jae
push
and
aad
add
sub
cltd
scas
mov
leave
cmpsl
dec
out
add
mov
mov
sub
add
add
adc
incl
iret
or
inc
fdivl
in
loopne
lods
add
sbb
add
je
enter
add
lret
push
add
add
sbb
add
mov
je
cmp
add
add
fld
ficoml
add
xlat
mov
lret
hlt
add
imul
mov
aam
xor
hlt
add
add
adc
movsl
mov
add
mov
mov
add
mov
add
jp
and
add
add
adc
add
add
add
add
add
and
push
loopne
push
add
mov
fldcw
xor
je
adc
lods
dec
pop
jbe
inc
add
fsts
mov
pop
push
add
aas
ds
test
or
add
add
cmp
add
add
jmp
inc
add
sahf
mov
iret
jo
xor
sub
rolb
aam
loop
pusha
add
add
inc
jo
and
add
add
loope
xor
add
popf
addb
inc
cmc
fwait
mov
in
data16
xchg
mov
mov
xchg
and
xor
mov
cmpsb
add
loop
pusha
add
stos
jmp
add
in
stc
add
add
xor
fidivrl
jb
push
lahf
aam
sub
pop
sbb
add
mov
add
add
push
mov
inc
add
inc
pop
mov
sub
icebp
aam
inc
add
xlat
xor
add
add
xchg
loop
mov
xlat
negl
rolb
loop
lods
and
popa
cmpsl
and
mov
push
add
lahf
es
inc
cmp
add
mov
data16
add
add
roll
jl
jns
or
push
add
add
lock
pop
aaa
lods
cmp
add
cli
lods
fmull
loopne
loope
dec
push
push
add
in
cwtl
data16
push
add
add
add
fisubl
cmp
pop
sbb
popf
popa
cmpsb
add
add
add
add
add
push
add
enter
add
leave
addb
or
jbe
pop
loopne
andl
add
add
inc
mov
add
cmpsl
jl
add
mov
jmp
insb
inc
add
lods
fdivrl
add
add
xchg
mov
sub
lea
je
addr16
or
add
mov
add
in
add
addb
add
sub
les
inc
add
add
and
mov
pop
mov
add
mov
add
add
mov
cmp
dec
pusha
add
lret
adc
out
fs
xor
sbb
pop
rolb
loop
and
and
jae
lods
mov
stc
push
add
add
in
ja
add
movsl
mov
iret
xchg
add
daa
or
add
cli
jmp
decl
ja
lret
leave
dec
jo
adc
inc
add
ja
add
test
pushf
pop
out
and
dec
adc
add
repnz
add
cmpsl
pop
ss
add
out
push
add
pop
push
add
pop
add
lock
cmp
sbb
adc
mov
lods
cmp
repz
adc
pop
data16
mov
movsb
add
jns
aam
adc
xor
mov
add
pop
pop
pop
movsl
fwait
lcall
mov
xchg
add
add
fcoms
add
mov
add
push
add
add
out
jbe
je
mov
insb
lret
enter
insb
cmp
xchg
add
repz
mov
add
add
ja
outsl
cs
push
xchg
add
add
adc
pop
xchg
rolb
jno
add
out
jns
jecxz
and
add
add
addb
sbb
test
add
ficoml
add
fwait
jbe
nop
add
sub
or
mov
push
add
fstps
ret
pop
jb
lods
cmp
push
add
mov
and
popa
pop
cs
xchg
jg
ret
stos
mov
adc
inc
add
insl
mov
pusha
add
push
aad
das
std
pushf
scas
loope
jne
and
mov
inc
out
jns
hlt
add
add
add
add
jae
add
lret
dec
std
sub
pop
mov
or
push
sti
movsb
add
xchg
insl
in
push
inc
add
add
std
mov
mov
xor
add
cmp
xor
enter
jne
add
add
mov
lahf
push
add
stos
int3
in
scas
sbb
add
xor
addb
mov
add
daa
pop
ja
sub
adc
imul
dec
lods
jecxz
xchg
add
cmp
mov
jne
or
fadds
cmp
and
leave
push
jp
adc
mov
rcr
push
sub
mov
add
decb
sub
pop
jmp
or
add
data16
add
into
pusha
add
adc
roll
add
add
aas
stc
stos
ljmp
add
and
add
lret
lock
xchg
test
pop
das
inc
add
mov
add
popa
xlat
mov
fmuls
pop
mov
mov
add
xchg
bound
mov
pop
imul
mov
idivl
add
add
fmulp
jae
add
add
inc
add
mov
add
add
push
lods
scas
movb
sbb
mov
out
jle
dec
pop
not
add
popl
add
mov
add
xchg
cmp
mov
add
add
add
dec
in
fadds
mov
add
lahf
and
or
lahf
outsb
in
xchg
rolb
cmp
les
mov
nop
add
add
jbe
imul
mov
add
mov
in
lahf
pop
fiadds
xor
add
mov
call
add
lret
mov
fiaddl
add
pop
hlt
add
adc
fisubrl
jbe
mov
movb
aas
fcompl
insb
add
mov
inc
add
hlt
add
cmpsb
add
xchg
inc
add
lock
add
xor
add
adc
push
cs
inc
add
add
popf
dec
jo
fildll
adc
dec
sbb
pop
mov
add
add
dec
pop
mov
and
sbb
inc
add
adc
cli
jno
add
dec
or
xor
xor
xor
push
nop
add
add
mov
add
out
add
mov
push
add
mov
and
js
sub
add
ljmp
add
inc
pop
add
mov
add
test
or
add
icebp
push
add
add
mov
add
xor
mov
je
icebp
loop
adc
in
lods
pop
sbb
int
add
xchg
xchg
xchg
dec
popa
out
ljmp
add
repz
and
aas
add
add
push
je
stos
test
cmp
add
xchg
mov
add
call
mov
sbb
add
mov
adc
mov
pop
sti
or
push
add
fldcw
add
mov
std
jmp
movb
cmp
add
add
cmp
and
add
add
add
add
mov
sub
in
outsb
rolb
jb
popf
aas
push
scas
in
xchg
add
add
add
add
add
xchg
xor
inc
les
inc
add
add
aad
mov
sahf
and
mov
outsl
sti
sub
sbb
call
push
testb
add
mov
and
mov
lods
sub
pushf
lods
mov
rolb
rolb
xchg
dec
ja
inc
add
mov
in
sub
cltd
dec
mov
sti
inc
add
cld
incb
mov
fdivs
into
dec
mov
xchg
mov
icebp
xor
cmpl
add
adc
out
jbe
testb
add
cld
mov
dec
out
push
add
add
mov
dec
in
inc
add
xor
sti
dec
jae
push
add
inc
add
bound
mov
mov
adc
dec
test
push
xchg
lods
push
lcall
cli
gs
add
cmpsl
add
mov
add
cmp
aam
jae
inc
add
push
add
sbb
xor
jl
jns
cmpsb
add
add
add
adc
add
and
pop
push
add
call
out
pusha
add
pusha
add
push
aas
leave
jnp
ret
loop
ljmp
sbb
inc
add
push
cmpl
xchg
aam
out
jbe
cmp
out
movq
mov
aas
add
jbe
in
cmp
lret
sub
popf
inc
add
sbb
pop
xchg
adc
dec
push
add
jge
fldt
or
pusha
add
add
push
add
cmova
add
add
stc
fdivrp
or
sub
cmpsl
fisttpl
add
pop
outsb
outsb
imul
add
add
xchg
outsl
jl
add
sub
iret
inc
cmpsb
add
lret
sbb
add
pop
repnz
add
fdivr
pop
or
pusha
add
mov
scas
in
rcrl
add
lea
pop
and
xchg
movsb
add
cmpsb
add
add
mov
sub
add
add
sub
repnz
int3
imul
and
lret
dec
cwtl
lods
adc
inc
add
dec
pop
mov
push
add
or
mov
cwtl
inc
add
xor
data16
mov
dec
add
je
cmp
dec
mov
insb
push
add
repnz
shll
scas
aad
add
add
lss
jle
add
das
or
inc
add
cmc
addb
jl
cmp
bound
mov
mov
cvtpi2ps
add
push
rolb
add
pusha
add
js
test
add
add
push
loop
outsb
sbb
addb
xchg
dec
xchg
push
add
add
or
fidivrs
shll
pop
pusha
add
push
sbb
add
add
sub
add
repz
mov
insl
shll
pop
xchg
add
add
dec
lret
pusha
add
sub
mov
pusha
add
pop
and
mov
add
mov
push
add
sti
mov
jmp
mov
inc
sbb
mov
testb
shl
pop
sub
xchg
jns
iret
movb
pop
out
iret
add
sub
out
inc
add
add
in
add
add
inc
add
lcall
jno
push
add
add
repnz
mov
jge
mov
sahf
scas
pop
mov
add
and
mov
add
sub
add
add
add
cmc
sbb
bound
mov
cmp
fsts
addb
pop
jge
add
mov
add
pop
dec
adc
data16
ret
mov
add
add
les
cmp
adc
push
add
and
mov
inc
insb
insl
addb
add
popa
xor
mull
leave
mov
push
imul
add
add
mov
mov
xor
add
or
mov
cmp
pop
out
ljmp
sbb
movsl
das
mov
test
xor
enter
add
sub
push
cltd
femms
pushl
add
xchg
imul
inc
add
fisubs
add
xor
les
icebp
cvtdq2ps
sbbl
dec
push
add
add
add
add
mov
add
pushf
fisubrl
movsb
add
push
and
xchg
ret
xor
mov
xchg
push
mov
in
data16
pop
fisttpl
lods
data16
mov
and
sbb
add
fdivs
mov
adc
xor
enter
xchg
shll
push
add
das
and
jbe
xchg
cltd
jb
mov
cmp
lods
and
mov
inc
add
jp
sti
insl
push
mov
rolb
add
xor
fstps
imul
outsl
sar
cmpsb
add
or
rolb
pop
movsb
add
pop
cs
test
in
clc
cmpsl
lret
sti
insb
jle
xor
lret
mov
add
inc
add
inc
sbb
add
int3
cli
xor
add
xchg
imul
xchg
xlat
or
push
sub
ret
lods
inc
cmp
add
add
add
mov
les
cld
add
mov
cmpl
add
test
mov
pop
jno
pop
inc
xor
iret
popa
std
xchg
mov
bswap
mov
add
add
mov
add
nop
add
add
add
cli
pop
js
add
xchg
leave
fisttpl
outsb
mov
add
mov
adc
add
mov
push
add
adc
add
adc
push
test
data16
pop
iret
in
mov
je,pn
rolb
filds
addb
in
lock
les
arpl
xor
mov
cmc
xor
rolb
popf
xor
sub
into
addb
add
out
std
movsl
mov
fisttps
xor
jl
rolb
aas
mov
adc
xor
out
xchg
mov
jne
add
add
add
xchg
add
mov
mov
add
mov
xor
add
add
addl
jns
mov
stc
mov
add
xlat
aam
sbb
js
dec
mov
push
outsb
inc
add
loopne
mov
add
mov
sub
mov
pop
popf
xor
sub
push
add
mov
lret
or
push
add
iret
dec
dec
je
xor
test
adc
add
jg
js
pushf
xchg
dec
or
ret
fistps
push
dec
test
and
js
add
sbb
sub
or
pop
ficomps
pop
push
jp
shr
push
add
pop
cmp
add
add
mov
sbb
icebp
or
add
pop
out
mov
mov
sub
movsl
shll
push
scas
addr16
mov
add
push
add
std
clc
orl
cli
in
and
mov
lods
mov
pop
jl
add
hlt
add
mov
bound
mov
add
mov
xchg
add
add
add
jl
mov
inc
add
add
add
je
ss
call
mov
add
mov
xlat
rcll
cmp
jns
mov
aas
out
add
popa
mov
sub
rorl
stc
clc
sub
in
pop
cmpsl
mov
add
or
cmp
dec
adc
mov
mov
ja
add
xor
add
repnz
add
scas
mov
jno
jmp
add
mov
cltd
das
fidivl
add
mov
add
loop
imul
inc
push
leave
xchg
add
add
pop
xchg
add
mov
sub
add
cwtl
adc
add
fcoml
mov
cmpsb
add
lret
dec
jno
inc
push
testb
inc
add
xchg
insb
bound
mov
pop
push
xchg
pop
cmpsb
add
idivl
jle
add
xor
adc
pusha
add
loopne
mov
xor
dec
pop
bound
mov
bound
mov
lea
add
sub
enter
enter
fstps
cwtl
mov
mov
out
add
and
repz
les
add
add
mul
add
add
pop
fisttpl
cmp
jne
fwait
mov
mov
add
dec
push
or
mov
jp
out
sub
add
testb
loopne
lods
jl
add
mov
sbb
dec
pusha
add
bound
mov
ret
add
gs
and
dec
bound
mov
add
add
movsb
add
loopne
jnp
push
add
sarl
mov
jp
sub
ss
fsubp
add
repz
test
dec
sar
add
cmpsl
lahf
cmpsb
add
cmp
add
mov
mov
add
dec
cld
test
dec
pop
mov
mov
sbb
sbbl
add
aas
mov
inc
mov
or
daa
jle
and
mov
push
add
add
addl
add
lea
fistl
mov
rorl
and
mov
inc
add
add
push
add
add
test
lret
xchg
add
in
bound
mov
int3
jbe
or
incb
lods
dec
push
add
data16
push
add
shll
add
xchg
push
stc
inc
push
inc
or
jnp
mov
add
add
add
add
nop
add
add
or
inc
add
fists
adc
testb
add
cmp
data16
dec
repnz
pusha
add
add
mov
imul
psrad
or
pop
jecxz
add
add
xchg
sub
mov
pushf
xchg
add
mov
stos
push
add
sbb
xor
jp
mov
add
add
mov
add
sahf
push
add
xchg
add
adc
xchg
jmp
arpl
add
xor
mov
pop
pop
bound
mov
xor
movsl
test
xor
lret
pop
push
or
int
add
xchg
add
add
add
mov
repz
mov
enter
add
ret
rorl
pop
gs
cmpsb
add
mov
pop
dec
sbb
in
cmc
mov
or
inc
add
aam
in
add
movsb
add
adc
mov
popa
loop
pop
cld
inc
add
daa
sbb
add
gs
repz
cmp
cwtl
decl
cmp
push
clc
jecxz
xor
test
mov
add
fcomps
out
sbb
fdivs
add
call
push
lcall
pop
testb
add
in
lret
mov
jp
add
xchg
push
cs
cmc
addl
sbb
xor
dec
outsb
femms
pop
lea
jl
add
add
data16
dec
jmp
add
push
add
add
sub
jo
adc
add
add
mov
test
add
push
mov
inc
mov
stos
xorl
inc
add
pusha
add
xchg
cmp
xchg
add
enter
add
push
push
out
ds
pop
inc
add
mov
adc
mov
add
ror
xlat
ljmp
ja
add
add
add
in
xchg
and
and
add
mov
adc
call
mov
inc
add
add
leave
sbb
movb
fcmovbe
add
inc
mov
push
add
and
mov
data16
bound
mov
and
mov
fidivrl
push
add
xor
ret
fcoms
add
sub
jg
add
adc
call
add
add
sbb
das
xchg
idivl
add
add
add
add
movsl
mov
add
mov
mov
xchg
jnp
mov
mov
cwtl
or
add
test
mov
jne
leave
lock
add
aas
lea
data16
insl
xor
inc
pop
sbb
cltd
mov
push
add
in
xor
lock
add
and
push
add
popf
imul
add
add
mov
mov
and
jbe
mov
xchg
ljmp
faddl
add
stos
lret
aaa
testb
addb
es
add
inc
add
outsb
cmp
aas
adc
mov
ret
add
cltd
mov
pop
lods
xor
push
addb
into
loopne
push
movb
add
test
loop
cmp
push
add
cs
loop
lds
stos
adc
sub
inc
sub
dec
push
and
add
push
add
dec
mov
jmp
add
add
jae
rolb
jle
cli
xchg
add
fwait
sbb
add
cmp
add
lds
cmp
add
jb
inc
add
cmp
add
fs
cmp
lods
pop
ret
push
add
jle
adc
lods
pop
or
add
push
add
pop
arpl
flds
xor
xchg
popa
cmc
es
insb
pushf
cmp
pop
js
pusha
add
in
call
add
add
rorl
mov
xlat
sahf
sbb
mov
testb
cmpsb
add
mov
add
dec
inc
xchg
inc
icebp
and
add
add
add
pop
xchg
add
add
jl
cmc
into
mov
test
mov
jae
add
add
add
add
dec
fldt
call
nop
add
les
push
add
insb
in
xchg
cmp
xor
orl
xchg
add
sub
mov
add
int3
mov
scas
pop
cs
adc
fidivs
inc
mov
xchg
inc
add
ret
movb
add
inc
add
pop
xchg
jecxz
jae
inc
add
add
add
add
push
dec
push
adc
add
add
mov
add
add
add
aas
jae
fdivs
fists
pop
sub
add
mov
add
add
xchg
cwtl
jo
int
mov
add
xchg
add
pop
inc
and
mov
push
push
movb
add
sahf
cmp
add
cmp
adc
inc
add
fcoms
add
add
shll
aam
out
pop
or
mov
jno
ret
mov
pop
rcl
add
or
add
xor
add
mov
pop
fldl
pop
fmul
mov
cmp
pop
into
mov
add
add
add
add
pop
inc
add
add
pusha
add
or
xor
jb
lcall
add
adc
sub
mov
add
das
imul
pop
push
and
mov
pop
addb
hlt
add
call
add
add
push
or
xchg
pop
jae
lock
fiaddl
call
push
sbb
data16
jb
popa
hlt
add
push
push
pop
aas
mov
rcll
ds
fidivrl
add
add
enter
and
jecxz
add
aad
pop
xor
mov
in
xchg
ficomps
xor
mov
xchg
push
add
nop
add
mov
jnp
mov
testb
dec
aaa
or
inc
add
jmp
inc
add
add
jmp
add
sbb
int
add
stos
mov
cmc
add
test
pop
or
add
sub
add
cwtl
addr16
aas
mov
mov
xchg
lahf
jl
outsl
sub
mov
mov
rolb
add
add
mov
mov
mov
xor
xor
sub
add
xchg
push
inc
add
add
add
dec
pop
mov
dec
stc
cltd
daa
test
div
add
mov
in
lods
pop
shll
xchg
jp
add
fidivl
jecxz
lods
outsb
xchg
ficompl
dec
mov
pop
std
adc
add
add
add
mov
add
ret
and
mov
add
add
add
dec
movsl
mov
sub
add
add
in
cmp
and
and
push
rolb
push
add
loopne
outsb
scas
inc
push
push
add
insb
jnp
add
sub
push
add
out
mov
test
sub
or
add
movb
fiaddl
add
add
insb
je
sbb
es
mov
scas
dec
and
movsl
jo
dec
mull
xchg
rolb
add
add
add
pop
push
push
inc
sbb
fcmovbe
fsubrs
data16
popa
cmp
clc
js
add
call
jle
addb
add
aas
dec
pushf
and
fcompl
add
add
cmp
add
leave
test
mov
jge
xor
add
movsl
jle
jo
aaa
inc
add
sub
addb
xor
add
aas
inc
add
icebp
mov
in
sub
clc
add
xor
dec
inc
in
loope
inc
add
sbb
add
pop
jns
inc
add
add
pop
ljmp
lahf
cmp
addb
add
je
in
cmpxchg
daa
rol
mov
mov
cmp
add
dec
mov
fld
pop
add
test
add
inc
es
aaa
movsb
add
add
mov
add
lods
add
loopne
cltd
sbb
add
sub
sbb
add
lcall
push
add
cmp
add
adc
out
adc
lahf
popl
sbb
inc
add
add
clc
jnp
and
xchg
add
xor
xor
test
int
add
sbb
cs
ficompl
mov
out
and
in
push
xor
std
mov
mov
fnstsw
xor
mov
sbb
xor
je
or
push
add
dec
pop
mov
iret
pop
mov
jno
add
add
loopne
xor
arpl
add
mov
push
out
lahf
cs
add
add
mov
add
mov
dec
out
and
mov
xchg
add
lahf
mov
add
dec
inc
mov
loop,pn
push
add
in
cmp
mov
mov
cmp
add
inc
add
stc
int
movb
loopne
stos
sbb
sub
add
aas
lea
mov
sbb
add
popf
add
mov
add
jg
daa
mov
add
pop
ds
test
xchg
loopne
icebp
jmp
add
enter
cmp
add
adc
mov
xor
lea
add
add
adcl
add
sti
int3
and
add
insb
mov
jnp
add
sub
mov
xchg
add
add
mov
add
fsubs
mov
js
jge
add
mov
out
xor
sub
add
addl
sbbl
hlt
add
testb
call
stos
add
mov
lret
ret
cmp
lock
add
stos
movl
lcall
sahf
lea
pop
pop
fistpl
cmp
fcompl
xor
aad
add
popa
mov
push
sub
pusha
add
insl
test
mov
adc
add
push
inc
add
xchg
add
rolb
add
mov
and
cmpsl
push
mov
jge
or
je
outsb
fidivl
cmpsb
add
pop
out
and
mov
ud1
cmp
and
fdivrs
rcrl
xor
imul
loop
dec
icebp
mov
pop
jo
mov
add
rcrl
insb
in
dec
cs
rolb
add
add
push
movb
add
jo
in
cmc
push
add
add
pop
enter
or
mov
scas
or
add
mov
or
sub
mov
fcmovu
daa
repnz
add
aaa
cld
testl
xchg
jbe
jg
cltd
ret
xor
cmpxchg
add
fcmovne
aas
lods
nop
add
push
add
lahf
cmp
xchg
xlat
call
jecxz
or
add
loopne
rcl
add
pop
fcoml
add
xchg
add
and
stc
mov
mov
and
mov
adc
push
add
je
xor
and
clc
bound
mov
daa
pop
push
lods
rolb
jne
lds
inc
add
imul
mov
add
testb
mov
add
dec
imul
fnstenv
jne
add
scas
dec
fisubrl
fldenv
add
lret
add
shrl
sbb
inc
add
jmp
add
add
mov
pop
xchg
add
and
mov
popa
mov
xlat
mov
cltd
sub
ret
gs
or
add
loop
fcmovbe
add
add
add
lcall
cmp
mov
add
filds
add
add
add
and
fisubrl
jmp
add
add
xchg
add
data16
add
inc
mov
lret
ja
fwait
rcll
add
add
add
push
hlt
add
testb
xchg
daa
int3
lret
ja
stos
cmc
sub
movsb
add
add
enter
add
xchg
aam
adc
daa
add
mov
add
or
loop
or
add
aas
cmpsb
add
add
mov
add
cmpsb
add
mov
test
dec
add
pop
adc
push
popa
loope
add
xchg
jns
pop
xchg
cld
push
outsl
dec
mov
mov
mov
adc
add
adc
lret
jns
cs
sahf
insb
enter
add
and
mov
add
imull
iret
inc
add
jge
cmp
leave
lds
add
push
cs
xlat
into
xor
fnstenv
das
mov
push
push
jns
aam
rolb
jge
insl
or
testb
pop
sbb
add
leave
adc
or
add
rorl
ss
shll
add
add
clc
insl
movsl
rolb
popf
into
mov
rolb
sbb
loope
mov
fistpll
stos
jbe
jnp
add
xchg
add
mov
mov
int
xchg
add
add
fldenv
mov
loope
xchg
nop
add
dec
jnp
add
sbb
gs
xchg
add
dec
in
inc
add
mov
add
add
mov
adc
sbb
add
add
outsl
push
add
add
jmp
mov
mov
jo
adc
cmp
mov
test
rolb
insl
adc
arpl
add
jle
dec
xchg
xchg
add
add
add
add
shll
arpl
aaa
pop
pushf
popa
or
add
or
scas
dec
test
add
or
add
mov
ss
cmp
add
inc
push
addb
xchg
jecxz
les
xor
in
inc
lods
mov
xor
roll
mov
lock
push
add
lahf
int
add
ljmp
add
lahf
mov
add
mov
sub
mull
mov
pop
jno
jns
mov
push
add
stos
clc
push
push
add
loop
xchg
call
push
mov
mov
mov
add
xchg
jp
mov
jns
add
insl
sti
js
add
xchg
add
mov
das
cmc
repz
add
and
mov
mov
push
dec
int
fldcw
mov
nop
add
jo
cli
in
data16
add
fiadds
sahf
mov
mov
mov
add
mov
jecxz
add
cmp
add
adc
ret
add
add
test
add
out
into
inc
add
aas
mov
and
ds
pop
fcomps
addb
push
add
sbb
add
sti
dec
fdivrs
fidivl
sbb
test
add
mov
lret
dec
pop
add
ja
lods
cmpsb
add
add
dec
icebp
push
popf
sbbl
cmpsb
add
pusha
add
pop
push
add
xchg
add
xor
pop
mov
jae
push
add
add
add
insl
sub
in
add
dec
aaa
push
test
lock
pop
test
and
mov
mov
add
mov
mov
push
add
add
push
sbb
mov
jecxz
inc
mov
dec
dec
pop
dec
cs
pop
pop
nop
add
add
mov
testb
xchg
in
bound
mov
mov
xchg
lds
hlt
add
test
sbb
std
ss
add
add
int
dec
mov
cmp
ffreep
add
dec
or
push
sub
add
xor
sahf
mov
and
mov
cmpsb
add
ret
xor
scas
mov
add
inc
add
mov
pop
mov
push
mov
sbb
out
in
add
fs
xchg
jo
testb
add
add
mov
cwtl
xor
sub
imul
pop
jecxz
add
sbb
add
test
xor
add
bound
mov
add
clc
pusha
add
cmp
sti
sub
inc
js
movb
jmp
add
pop
repnz
cmp
iret
mov
inc
add
push
add
jg
fldenv
cmp
add
hlt
add
or
fbstp
add
and
mov
insl
mov
mov
fdivs
push
mov
add
pushf
jb
popf
out
jmp
and
mov
mov
xlat
add
imul
or
add
mov
add
mov
test
mov
mov
fldenv
mov
add
add
mov
daa
addb
add
test
or
push
cmp
mov
arpl
sbb
add
add
das
pushf
mov
iret
movsb
add
mov
add
jmp
add
add
arpl
xor
add
or
std
jecxz
cmp
add
add
cmp
add
fsubr
in
push
pop
imul
and
mov
jl
add
pop
popl
add
push
add
xchg
add
add
minps
lret
jo
imul
add
add
bound
mov
xchg
data16
cmc
sbb
add
sub
xor
int3
mov
jg
add
fwait
outsb
sbb
mov
jecxz
push
add
fisubs
aas
int3
imul
out
and
add
mov
dec
fidivs
mov
in
xchg
lret
rolb
push
mov
mov
pop
daa
mov
sub
les
xchg
out
jmp
sbb
sbbl
add
sbb
outsb
xlat
data16
dec
xchg
mov
add
in
sub
or
add
js
icebp
inc
add
add
imul
sahf
add
and
call
imul
call
mov
sbb
add
mov
add
das
jg
or
xor
xor
popf
dec
mov
pop
icebp
lcall
pushf
pop
cmp
add
scas
xor
ret
xchg
lret
add
ljmp
mov
add
jp
or
rorl
add
dec
cs
lods
hlt
add
arpl
addr16
mov
mov
add
add
cld
movsl
dec
inc
fimull
add
mov
and
test
add
push
rcr
hlt
add
stos
sbb
mov
add
out
sub
add
lock
cmpsb
add
ficomps
lcall
add
dec
dec
or
cmp
push
jmp
mov
into
push
add
add
add
mov
nop
add
xchg
repz
jmp
movsb
add
fisubl
add
mov
inc
add
mov
icebp
int
daa
xchg
add
cld
xchg
lock
xchg
sbb
add
add
or
dec
out
in
std
cmc
and
stc
outsl
pusha
add
push
add
push
add
mov
sbbl
hlt
add
jb
cs
add
add
mov
stc
pop
addb
outsb
mov
jno
aad
mov
clc
lret
lods
add
test
addb
add
cmp
add
push
add
inc
add
ret
add
out
imul
push
add
popf
popf
dec
mov
lods
dec
incb
add
add
loop
jle
push
out
dec
ror
add
dec
je
dec
mov
add
lods
dec
jmp
add
add
pop
mov
dec
repz
add
add
adc
fcoms
and
mov
and
pop
jecxz
rolb
add
add
add
mov
mov
pop
dec
das
add
add
add
mov
mov
add
mov
adc
mov
sub
add
lahf
test
fstpl
add
movb
sub
incl
loop
aaa
push
jmp
rolb
mov
add
mov
add
and
rolb
in
repz
outsl
inc
add
add
add
push
add
stos
pop
inc
add
test
mov
add
call
add
mov
cmp
repnz
mov
mov
lods
cld
aad
out
or
push
add
xchg
add
xor
pop
cmp
xchg
add
pop
push
add
jp
inc
add
add
fsubrs
pop
iret
xor
add
loopne
xor
ljmp
push
add
jp
add
add
pop
pop
movsb
add
popa
or
roll
inc
sub
mov
aaa
add
add
outsb
shrl
push
sbb
push
jmp
sti
sub
push
xchg
add
mov
jb
xor
mov
add
mov
add
add
jle
nop
add
add
add
add
mov
loop,pt
sbb
sub
add
outsb
xchg
filds
fldenv
add
sub
add
push
add
testb
jg
add
lea
fisttpl
add
inc
xchg
add
add
fwait
adc
out
int3
hlt
add
sbb
mov
adc
cld
mov
bound
mov
add
mov
cmp
mov
pop
outsl
dec
or
add
shr
call
add
mov
vpavgw
xlat
cwtl
lods
inc
cli
adc
mov
in
cwtl
mov
inc
add
mov
add
inc
add
add
rsqrtps
stc
xor
in
jl
lock
lods
xchg
fmull
add
mov
add
lock
cmp
scas
mov
mov
mov
jb
xor
and
add
push
add
rolb
inc
fwait
xor
add
insb
sub
mov
ljmp
mov
inc
repnz
jae
jg
cmp
adc
or
sbb
add
insb
cmpsl
test
cmp
enter
dec
faddl
dec
pop
lds
out
and
add
movsb
add
dec
pop
inc
add
pop
divl
add
xchg
fcoms
dec
jb
test
pmullw
or
or
mov
test
int
out
jb
mov
loopne
icebp
stc
sub
je
and
add
mov
inc
add
lea
add
mov
mov
add
sbb
icebp
jle
add
add
cmpsl
sbb
xor
mov
lcall
add
sub
mov
add
add
imul
pop
bound
mov
xchg
add
mov
in
mov
add
jg
fmull
fidivrs
jle
testb
add
cltd
fldcw
add
add
add
addb
add
xchg
add
xchg
add
mov
addb
sub
dec
out
cmp
jnp
rep
xchg
add
repz
negl
test
into
rolb
mov
lods
mull
inc
add
popa
out
leave
mul
roll
sub
xor
push
add
add
mov
jns
add
add
add
or
add
jmp
outsb
mov
stos
sbb
jg
add
push
sbb
mov
push
insb
aad
mov
mov
arpl
mov
inc
add
add
out
mov
fcom
add
mov
xorl
add
sbb
fildll
push
gs
xchg
add
or
add
mov
mov
dec
scas
inc
mov
add
adc
jmp
push
add
in
insb
lahf
arpl
add
enter
add
push
add
rep
add
mov
ljmp
add
stos
int3
mov
pop
add
add
mov
fs
rolb
add
mov
add
add
mov
add
jae
add
add
pop
inc
sbb
jmp
push
cmpsl
mov
sub
add
xor
jl
add
jmp
filds
add
lret
push
add
add
add
jmp
add
or
idiv
daa
sub
add
bound
mov
aad
outsb
aad
add
add
add
mov
and
roll
add
add
cmp
add
movb
push
add
cs
inc
jmp
sub
add
xchg
fdivrs
addb
arpl
add
add
add
push
and
add
xor
outsb
lods
add
xchg
cwtl
dec
push
add
int3
call
jb
mov
pushf
movb
jne
push
fsub
add
add
and
sub
jge
mov
inc
int3
dec
jb
add
addb
add
dec
les
push
add
jb
rolb
adc
xchg
mov
mov
add
and
mov
mov
add
add
mov
dec
testb
add
mov
add
push
lret
arpl
imul
xchg
pop
adc
mov
adc
add
insb
or
cmpsl
scas
adc
lds
add
sub
add
dec
js
add
add
jl
clc
insl
cmp
jle
add
add
xchg
rolb
inc
add
scas
fisubrl
lahf
testb
inc
dec
jp
pusha
add
addb
out
add
add
fcmovb
out
pop
jl
add
cmp
add
mov
add
mov
mov
bound
mov
ret
lds
fildll
lods
fdivl
rep
sub
lods
cmpsb
add
adc
sbb
cmp
jnp
xchg
outsb
pop
shll
cmpsl
mov
sbb
mov
daa
jg
add
add
jmp
shr
push
add
adc
xchg
inc
cmp
cld
mov
add
fdivrl
push
add
and
mov
add
add
push
add
out
insb
inc
add
adc
or
add
or
or
mov
add
push
add
add
add
addr16
sahf
sbb
test
and
mov
xchg
add
gs
mov
add
add
push
dec
fildl
dec
lods
pop
js
imul
addb
hlt
add
scas
adc
stos
xchg
add
and
out
mov
add
add
jl
add
je
xor
and
mov
int3
add
push
addb
sahf
testb
pop
testb
scas
loope
das
adc
xlat
pop
lcall
dec
or
push
mov
add
mov
add
or
add
inc
aas
aaa
fldenv
mov
xchg
imul
add
mov
add
pop
pop
sbb
loop
lcall
mov
lret
jecxz
add
add
add
jae
mov
add
add
pop
lock
sbb
cltd
rolb
call
pop
add
mov
call
cmp
test
fldl
push
cli
jns
add
mov
push
add
sub
add
rolb
push
sub
add
enter
xchg
or
fimuls
loopne
mov
js
cmp
int
push
loop
add
add
add
add
add
jg
sbb
mov
jecxz
sarl
test
pop
rolb
and
mov
aad
mov
jnp
add
fisttpl
and
outsl
adc
dec
xor
add
add
mov
hlt
add
fsubl
call
xor
xchg
push
aad
jg
xchg
add
aam
adc
adc
pop
xchg
adc
adc
mov
push
add
dec
ds
adc
mov
or
in
sub
pop
popa
jge
add
add
popa
and
das
cmp
mov
rolb
notl
rolb
mov
mov
and
mov
add
push
mov
add
std
movb
dec
and
push
addb
xchg
jl
jo
enter
xchg
js
out
in
dec
xchg
add
pusha
add
incl
jge
loopne
call
cli
mull
add
xchg
mov
sub
add
call
add
jo
cld
mov
loopne
pop
or
imull
out
adc
in
pop
dec
nop
add
adc
adc
clc
call
adc
hlt
add
sub
jg
add
add
xchg
sbb
add
add
push
add
add
add
cmp
or
sub
adc
pop
repz
adc
in
pop
mov
test
mov
push
add
jae
mov
ret
pusha
add
add
xor
loopne
push
add
push
add
jg
add
add
jl
out
or
add
push
out
push
testb
dec
push
add
cmc
push
add
fadds
jmp
add
add
mov
add
leave
push
cmp
pop
cld
test
jne
scas
data16
mov
add
dec
ret
add
xor
cmp
jnp
add
or
popf
outsl
add
xchg
add
add
add
mov
cmp
add
inc
add
xchg
pop
add
cmp
dec
les
sub
nop
add
add
xor
mov
inc
add
insb
in
mull
mov
adc
mov
pop
jmp
add
ja
add
add
mov
inc
xchg
inc
jb
loope
push
lcall
add
add
mov
add
test
fsubs
add
adc
dec
inc
add
dec
mov
lods
inc
add
add
mov
paddsb
add
rolb
jno
or
rolb
or
sbb
pop
jae
add
in
push
add
ret
cmp
inc
pop
scas
xor
cmp
in
ret
and
mov
sub
in
xchg
add
add
jns
add
or
add
rcrl
mov
cmp
sub
in
dec
dec
hlt
add
movb
and
mov
push
add
mov
inc
test
aaa
add
subl
add
in
pusha
add
iret
addb
fdivrs
sub
scas
rolb
loope
push
fadds
add
addb
dec
sub
ja
add
enter
pop
loope
lea
mov
imul
add
and
out
fstl
fcompl
add
add
add
cli
or
mov
mov
add
sbb
adc
pop
sub
in
or
add
aaa
ret
mov
sub
sub
push
add
aas
nop
add
xchg
add
add
jge
push
test
stc
xchg
mov
pop
inc
add
mov
add
xor
add
add
add
pop
pop
fidivs
add
mov
nop
add
call
push
add
pushf
add
mov
add
int3
shrl
push
test
and
add
xchg
push
add
push
add
add
das
push
std
adc
jge
and
mov
add
insb
frstor
add
and
lods
sbb
mov
inc
add
outsl
lcall
mov
add
movb
lods
pusha
add
lds
dec
out
and
mov
mov
mov
add
adc
stc
cltd
pop
inc
jns
push
add
repnz
add
aas
sub
cmp
lods
cmpsl
lret
test
or
jno
add
mov
ret
pusha
add
and
sbb
repnz
add
loope
dec
push
das
add
add
pop
insb
cltd
cmp
aam
dec
mov
faddp
and
push
cmp
add
lea
pushf
adc
leave
adc
mov
add
mov
add
mov
adc
xchg
pop
divl
add
int3
or
loope
and
mov
xchg
aam
add
mov
push
add
cmp
add
add
xor
sbb
fmuls
sub
add
add
lock
adc
add
mov
dec
jg
add
repnz
aas
movsl
mov
cmp
shl
jnp
dec
jmp
push
dec
jl
add
add
inc
add
inc
add
mov
sarl
sti
pop
mov
add
pop
xchg
add
mov
lds
add
adc
sti
jnp
out
pushf
cs
xchg
add
or
xchg
mov
pop
in
flds
add
insb
stos
arpl
add
add
mov
stos
addr16
scas
push
add
mov
mov
stos
mov
loop
inc
add
add
or
sub
jo
push
test
repnz
iret
leave
cltd
or
mov
shrl
or
add
cmc
and
hlt
add
add
mov
adc
add
add
add
test
push
add
push
movsl
pop
add
mov
pop
inc
add
call
testb
fldcw
add
push
insl
ds
ljmp
add
addb
stos
rolb
fidivrs
sbb
mov
daa
scas
in
fldcw
add
jecxz
add
add
add
mov
cmp
and
add
das
and
lret
mov
sbb
dec
xor
scas
add
push
add
sub
ljmp
les
jno
add
mov
add
push
mov
in
add
mov
imul
icebp
mov
add
dec
lcall
add
mov
add
add
mov
aaa
and
mov
jno
popa
add
addb
mov
dec
popf
mov
push
fldl
rolb
xchg
add
inc
cmp
ficoml
add
stos
sahf
inc
add
push
andl
sbbl
add
add
add
lret
xor
mov
cmp
scas
insb
daa
movsl
sub
add
imul
xor
jae
cmp
add
cmp
or
bsr
add
cmp
in
jns
cmpsb
add
add
ret
arpl
sub
push
aas
shrl
sbb
sbb
cltd
ret
sbb
inc
add
stos
stc
mov
ret
dec
xchg
xchg
add
mov
jp
inc
add
insb
xchg
add
mov
mov
jb
mov
mov
sub
mov
push
add
add
add
mov
add
add
mov
mov
mov
insl
jp
add
stc
ror
push
enter
stc
xchg
imul
add
movb
test
xchg
addb
xchg
jno
in
iret
dec
stos
mov
add
dec
fs
cmc
push
add
add
add
mov
cwtl
pop
daa
pop
push
add
popa
mov
adc
loope
sbb
cld
les
adc
add
repnz
leave
push
add
mov
hlt
add
ljmp
add
mov
add
imul
mov
xchg
add
add
mov
repz
cmp
add
xchg
sub
add
mov
mov
fwait
push
add
das
sbb
cmpsl
pop
cli
xchg
sub
fisttpl
add
inc
add
add
frstor
add
or
in
aam
xor
mov
sti
dec
mov
sbb
add
xlat
adc
add
add
add
push
and
mov
add
out
imul
mov
add
push
pop
lahf
xlat
and
cmpsb
add
add
add
add
add
mov
dec
xchg
add
mov
enter
add
add
jg
das
dec
xor
mov
lods
scas
and
mov
xchg
icebp
fsubrl
jo
loop
es
pop
fmull
int3
jno
lahf
mov
sahf
clc
cmc
jb
pop
cmp
dec
mov
nop
add
sbb
push
add
xor
in
repnz
pushf
test
jae
addr16
rcrl
mov
push
add
lret
addb
pop
daa
and
dec
lcall
movsl
out
push
insl
in
pop
hlt
add
and
cmp
inc
push
add
ja
add
add
fimuls
jae,pn
inc
lret
add
add
mov
sbb
rcr
dec
jbe
fs
cltd
cwtl
mov
mov
sub
dec
cmp
imul
add
scas
or
dec
xor
xchg
add
jns
mov
and
mov
or
push
jecxz
add
dec
stc
inc
add
or
add
lds
adc
cld
add
jae
add
add
aam
test
fistpll
add
ja
in
stos
cmp
test
add
loope
add
pop
clc
inc
add
int
add
ficoms
pop
xchg
add
add
lods
adc
pop
mov
cld
sub
add
add
add
xlat
push
add
xchg
adc
or
add
inc
push
add
mov
mov
ljmp
test
sbb
pop
xchg
push
pop
dec
add
idivl
mov
add
leave
and
mov
cli
pop
and
mov
test
cmp
lcall
mov
add
insb
mov
aaa
sbb
into
jbe
cmp
add
or
outsl
in
les
xchg
sbb
add
add
and
mov
lods
xchg
add
test
xor
sbb
add
inc
xor
ds
dec
sarl
add
pusha
add
mov
mov
mov
mov
xchg
push
je
inc
add
hlt
add
jo
pushf
xlat
sar
push
add
lahf
dec
movsb
add
add
add
imull
xor
dec
jecxz
mov
ret
mov
adc
mov
cmp
mov
cmp
push
add
add
xchg
std
fwait
nop
add
add
das
fsubr
xor
mov
sbb
out
add
mov
add
in
int
aaa
mov
dec
inc
or
fsubl
jge
jns
add
mov
inc
add
lds
add
add
mov
loope
test
add
cmp
fisttps
bound
mov
inc
hlt
add
cmp
or
mov
sti
lds
mov
push
add
xor
jle
fistpl
das
and
mov
mov
jne
dec
add
xor
xlat
add
push
add
xchg
mov
push
add
add
pop
fnstenv
pop
iret
sub
mov
push
add
mov
jl
mov
add
mov
testb
xor
cmp
jnp
add
add
add
pop
adc
or
mov
fmull
add
add
mov
outsb
lods
push
mov
inc
add
addr16
add
add
lea
add
add
add
ficomps
and
mov
jns
mov
push
add
iret
pop
outsl
push
add
inc
mov
ljmp
roll
add
inc
add
jge
add
jle
jo
rolb
add
nop
add
add
add
jmp
adc
mov
cmpl
insb
ja
add
mov
add
add
add
inc
addb
out
jnp
add
imul
add
add
sbb
fistpll
sub
xor
lods
pop
pop
dec
pop
test
jns
out
aaa
jns
in
adc
repnz
add
es
add
aaa
add
add
inc
add
fistl
push
lock
out
push
addb
add
add
jg
ret
add
lret
add
add
dec
add
out
cmp
sub
add
push
mov
ficompl
int3
cli
and
or
popf
push
add
les
adc
mov
js
mov
push
mov
sbb
mov
mov
and
sub
add
add
js
mov
in
fbld
jge
add
dec
add
or
inc
pop
lods
dec
imul
addb
add
add
rolb
in
mov
mov
mov
mov
imul
xchg
dec
movb
add
add
cmpsb
add
gs
rolb
in
out
add
test
add
xchg
popf
cmp
dec
call
pop
pop
repz
nop
add
add
push
mov
cld
pop
outsb
sbb
bt
mov
pop
in
mov
xchg
mov
test
add
add
adc
call
out
push
daa
pop
inc
add
add
add
or
aas
outsb
jp
mov
mov
fildll
add
cmp
cmpsl
add
inc
lock
dec
decb
dec
sahf
xor
ret
or
ret
pop
or
testb
jb
popf
push
add
or
scas
xchg
arpl
test
sbb
add
push
add
add
add
add
add
les
sub
rcl
add
mov
add
sub
fwait
or
sahf
jp
cwtl
add
add
loopne
cmp
jo
negl
addb
add
add
add
pop
shrl
dec
add
mov
cmp
add
loopne
mov
movsb
add
add
sahf
out
push
add
push
testb
add
add
mov
arpl
add
out
scas
sti
mov
add
sbb
imul
fisttpll
mov
add
add
aaa
movsl
cs
sbb
js
push
je
inc
sbb
add
jae
insb
xchg
cmp
enter
add
stc
ja
addb
cmp
out
lret
sbb
add
imul
aad
add
add
push
add
movsb
add
and
add
add
nop
add
lcall
call
jp
xchg
cmp
inc
or
add
add
pop
sbb
fcmovbe
xor
sarl
add
mov
mov
ficomps
out
test
out
xchg
xchg
cld
aad
stos
out
dec
mov
lds
out
add
jns
cltd
mov
sub
add
dec
cmpsb
add
test
push
add
xchg
add
jecxz
int
add
push
sbb
add
add
testb
xor
aas
fs
add
rolb
add
add
sbb
aas
imul
mov
mov
inc
je
add
mov
add
aam
outsl
push
adc
dec
je
jbe
mov
push
add
rcl
jo
mov
add
mov
aaa
add
mov
test
daa
ds
add
or
add
mov
add
push
addr16
scas
push
add
popf
mov
push
sub
les
pop
xchg
add
call
addb
hlt
add
dec
jg
jg
push
add
out
push
add
xor
add
push
push
add
mov
add
sub
cmpsl
lds
lods
dec
lahf
in
or
adc
push
add
lock
into
inc
cmp
aaa
inc
add
add
cmp
insb
mov
mov
add
cld
repz
test
add
popa
mov
cmp
mov
pop
int3
add
nop
add
addb
jae
add
les
xor
cltd
pop
cmp
mov
jle
lcall
loope
cmp
lods
faddp
xchg
mov
aam
jne
xchg
add
int3
push
xor
add
add
pop
mov
sub
adc
or
add
mov
add
dec
adc
and
add
add
sub
add
add
inc
and
mov
popa
int
test
cmp
add
rolb
mov
add
mov
or
xchg
int
aas
popa
mov
in
out
lcall
xor
test
fadds
add
test
adc
mov
add
add
loope
push
add
jp
imul
cli
mov
jecxz
jg
add
getsec
pop
inc
add
std
jo
int
xchg
or
pop
push
cmp
cwtl
cmp
add
add
add
mov
fwait
or
mov
out
add
sbb
stc
and
leave
dec
mov
les
jecxz
push
or
aaa
add
add
push
add
div
add
add
adc
mov
in
addb
mov
dec
fistl
arpl
inc
add
dec
mov
pop
dec
aad
xor
jecxz
fisttpl
add
pop
jnp
sbb
xchg
add
fistpl
inc
add
arpl
filds
add
mov
insb
cmpl
jmp
cmpsl
jae
mov
mov
add
dec
mov
mov
jne
ds
sub
xchg
add
add
xor
pushf
adc
add
cmpsl
mov
add
mov
mov
lret
mov
fisubrl
add
icebp
mov
add
xor
xchg
and
mov
or
sbb
lea
mov
mov
add
mov
ret
jbe
ret
out
js
push
test
mov
lahf
xchg
out
sub
sbbl
cmp
jo
scas
jle
mov
repnz
add
add
test
add
add
es
add
mov
or
add
insl
lret
dec
xor
mov
add
jg
fldcw
rolb
das
inc
test
fildll
add
mov
mov
pop
testb
mov
or
mov
mov
add
lods
cmp
jne
dec
push
add
add
mov
aad
out
les
push
add
add
add
jb
and
mov
stos
imul
add
into
xchg
add
add
addb
push
sub
icebp
xchg
jbe
xchg
popa
lret
adcl
pop
imul
stos
and
iret
into
testl
jecxz
xor
xchg
and
mov
sub
add
cld
popa
scas
and
mov
ds
add
add
addr16
xor
dec
loopne
shll
add
adc
loope
ja
add
mov
mov
mov
mov
adc
dec
cmp
pop
push
into
sub
xchg
add
ljmp
loopne
js
add
push
or
xor
cmp
jb
std
lahf
pop
sbb
adc
mov
lods
push
loop
add
movsb
add
sbb
cmp
add
cmpsl
mov
mov
add
dec
imul
loopne
mov
cld
test
mov
xchg
dec
jp
aam
jo
cmp
add
leave
and
iret
movsb
add
ret
and
push
add
jmp
sbb
test
add
add
int3
sbb
add
jb
mov
mov
add
add
jbe
cmp
add
mov
sub
sbb
je
cli
cwtl
sub
mov
add
aam
jge
call
add
add
pop
leave
push
in
xchg
das
sub
add
les
xchg
dec
xor
scas
ret
adc
cltd
push
add
jnp
adc
pop
add
cmpsl
mov
leave
sub
add
in
mov
ret
mov
bound
mov
loopne
or
pushf
cmpsl
xchg
push
add
mov
add
dec
std
sbb
adc
lahf
mov
add
movsb
add
cmp
shll
movb
add
add
mov
add
push
out
stc
iret
cmp
lret
mov
mov
add
mov
fisubrl
xchg
add
inc
add
mov
add
add
add
push
add
into
adc
pop
cmc
and
mov
lea
add
or
add
decb
mov
add
cmp
add
mov
add
add
test
mov
je
sub
add
mov
add
push
add
test
or
add
arpl
add
fmul
inc
add
int3
sub
movsb
add
add
mov
jbe
jae
adc
pop
xchg
add
ja
add
xchg
fwait
stos
stos
add
in
mov
jecxz
pop
lods
lds
push
add
jbe
cmp
cmp
and
add
push
dec
mov
lods
pop
in
jno
fwait
pop
or
aad
push
add
add
mov
mov
test
fdiv
add
cwtl
mov
aaa
mov
popf
cmp
add
jno
mov
add
aam
popa
mov
pop
sbb
add
mov
push
and
mov
add
test
ljmp
rcrl
add
dec
jns
inc
add
pop
sti
jl
add
push
adc
enter
es
add
dec
sti
icebp
inc
cmp
mov
test
fildl
rolb
cltd
pusha
add
movsb
add
sub
jno
add
xor
cmc
imul
lret
adc
jb
test
jnp
jbe
sbb
xchg
sbb
add
repz
inc
add
je
jne
add
add
cmp
stos
addb
inc
imul
and
mov
scas
adc
testb
cmp
clc
pusha
add
dec
int
test
sbb
mov
rcll
push
add
add
call
xchg
mov
xor
add
das
pop
jb
sub
xchg
addb
add
add
push
add
fnsave
in
add
and
add
sbb
cwtl
jle
push
or
int
add
cmp
fsubl
add
add
shll
add
or
in
dec
clc
cmp
dec
ljmp
mov
movsl
mov
les
sbb
pusha
add
cli
mull
pop
test
dec
xor
testb
movsb
add
add
dec
movb
jo
mov
outsb
adc
jmp
movsb
add
add
out
movb
add
mov
add
add
icebp
cmp
sub
add
data16
arpl
aas
add
pop
push
out
push
add
add
mov
mov
scas
add
mov
sub
inc
add
jecxz
add
xchg
add
mov
mov
and
or
inc
add
push
add
popa
in
mov
mov
add
bound
mov
mov
cli
push
popa
add
mov
add
fdivrs
xor
jno
sub
repnz
pop
jg
andl
add
fcoms
adc
add
mov
daa
jns
add
add
in
fisttps
fcomps
popf
mov
insl
sbb
aad
inc
out
push
add
xchg
inc
add
and
or
call
mov
imul
mov
or
shll
add
and
sub
mov
xchg
add
outsb
cmp
iret
ret
add
mov
leave
xchg
add
shll
lahf
stos
int
rolb
out
mov
inc
add
aaa
into
jns
jae
sbb
loop
xor
std
scas
push
xor
cmc
fstl
xor
mov
fistps
cmp
add
add
add
loope
add
add
add
add
add
fbstp
int
add
fidivs
fwait
test
out
cs
mov
add
mov
mov
and
mov
leave
fcoml
add
mov
add
out
pop
or
xchg
add
iret
mov
mov
lds
push
lods
cwtl
das
mov
push
iret
ret
lret
add
in
in
and
movb
add
addb
mov
add
adc
jo
popa
sub
push
add
rolb
outsl
into
jecxz
add
xor
add
and
inc
mov
add
in
testb
aas
dec
std
or
add
add
out
add
jns
xchg
add
dec
pop
aas
xchg
int
sbb
add
popa
mov
add
lret
and
mov
or
add
sub
pop
add
aas
xchg
sbb
mov
mov
mov
add
in
arpl
jb
inc
add
inc
add
dec
jbe
testb
or
orl
lds
hlt
add
add
and
mov
add
negl
inc
push
jnp
arpl
test
addr16
inc
mov
sub
add
int3
stos
ror
dec
add
movb
mov
inc
fadd
add
mov
add
push
cmp
adc
cmpsl
fists
jmp
pop
das
xorl
pusha
add
or
add
in
cmp
push
cs
aas
add
out
sbb
sub
add
rolb
rcl
add
add
test
mov
mov
cmpsl
mov
add
insl
rcrl
sub
xlat
xchg
add
lock
dec
adc
lock
mov
add
add
add
push
cli
lret
into
mov
stc
mov
add
add
add
add
jns
sub
psubsw
add
add
lcall
add
movsb
add
cmp
add
add
cmp
add
mov
adc
add
add
add
out
mov
lock
lods
or
sbb
and
sbbl
sub
