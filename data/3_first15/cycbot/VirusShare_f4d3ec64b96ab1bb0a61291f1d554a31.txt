mov
iret
roll
mov
mov
addb
lock
dec
in
mov
jmp
add
add
in
icebp
scas
pop
outsb
adc
mov
add
mov
dec
and
cs
mov
adc
clc
lcall
mov
pop
daa
push
je
cmp
mov
mov
mov
popa
jmp
jg
dec
mov
insb
inc
outsl
dec
lods
xchg
repnz
add
loopne
mov
inc
loope
mov
sub
btr
dec
adc
xchg
pop
fnstsw
mov
dec
inc
sbb
aam
xor
sub
iret
ds
add
movsl
mull
push
add
push
add
mov
add
outsb
pop
stos
inc
push
add
cmp
ja
or
sub
add
ss
mov
add
jmp
insb
sbb
mov
add
or
add
mov
sti
mov
scas
addb
sbb
add
pop
cmp
mov
push
in
xchg
stos
fldl
cmp
mov
add
add
mov
int3
dec
pop
inc
pusha
add
loope
and
mov
push
sbb
add
pushl
pop
das
dec
addb
decl
fidivl
push
sub
jg
adc
mov
dec
repnz
or
mov
rolb
mov
add
mov
cmpsb
push
icebp
inc
outsl
push
mov
add
aaa
or
je
and
mov
scas
test
xlat
rolb
out
mov
test
es
jmp
test
add
mov
pop
adc
mov
add
or
cwtl
or
add
or
xlat
imul
add
cmp
movsl
testl
stos
lods
adc
add
add
imul
mov
push
and
sti
pxor
lds
fidivrs
lock
std
gs
cli
js
fwait
pop
inc
add
pushf
add
pop
xchg
sub
call
sbb
pop
ljmp
push
dec
sbb
mov
pop
int
add
sub
mov
mov
loopne
mov
jmp
add
add
mov
xor
sbb
add
add
add
xorl
mov
bound
mov
pop
pop
aas
mov
lret
fs
stos
push
xchg
cmpsl
sub
rolb
mov
inc
xchg
ja,pn
popa
mov
mov
mov
enter
stos
lods
xchg
icebp
mov
push
ja
and
add
xor
jno
adc
mov
jns
cli
lds
push
in
xor
mov
pop
into
das
xchg
add
mov
fmulp
test
add
cmpsl
dec
clc
outsl
jge
xchg
or
js
xchg
lret
xor
mov
pop
mov
stc
lahf
adc
xor
pusha
add
push
cmpl
jno
fbstp
aas
cmp
mov
add
mov
add
push
dec
aaa
push
into
jle
dec
gs
imul
mov
adc
mov
hlt
lock
pushf
push
inc
pop
inc
mov
mov
inc
add
sub
fwait
out
ret
and
rorl
add
cmp
dec
mov
xchg
add
xchg
not
add
addr16
inc
lcall
or
xchg
sub
mov
or
sub
mov
pop
int3
xchg
add
repnz
add
push
add
and
jne
fidivrl
gs
inc
add
je
jne
icebp
movsb
inc
popa
sahf
pusha
add
add
mov
add
jmp
leave
adc
mov
sub
add
mov
lahf
dec
pop
or
cli
popf
rcll
and
stos
sbb
out
mov
cmc
jp
scas
mov
mov
bound
mov
mov
call
dec
in
push
add
add
mov
lock
and
mov
out
lods
xchg
add
enter
fsubl
mov
mov
mov
mov
dec
mov
mulb
cld
les
sbb
jnp
ja
mov
sbb
pusha
add
xchg
hlt
enter
addr16
lret
mov
or
dec
jo
mov
addb
imul
mov
mov
bound
mov
mov
repz
and
pop
hlt
stc
ret
addb
inc
addb
inc
add
pop
popa
clc
inc
mov
add
mov
mov
add
test
sbb
xor
mov
sbb
dec
mov
add
add
jne
add
add
fidivrs
insb
decb
add
sub
add
mov
and
into
aaa
pop
ss
pop
fimull
add
pop
xor
pop
add
cmpsl
in
and
sub
add
push
push
xchg
imul
rolb
mov
repnz
inc
jnp
jecxz
add
dec
dec
enter
mov
mov
addb
shrl
insl
mov
ss
rcrl
sbb
hlt
xchg
aas
mov
iret
xchg
mov
or
push
jmp
or
mov
pop
push
icebp
pop
mov
fcomps
scas
jnp
add
iret
inc
add
call
push
scas
xor
adc
mov
add
mov
bound
mov
mov
daa
repnz
mov
add
inc
xor
add
add
test
jg
push
lcall
dec
sti
nop
add
in
arpl
add
push
in
sbb
add
mov
mov
out
sub
adc
xchg
pop
mov
cmp
jae
push
add
dec
cltd
loopne
mov
inc
add
push
mov
mov
xchg
inc
les
push
movsl
rolb
mov
into
inc
add
loope
ja
push
add
push
stc
dec
cmp
bound
mov
test
sbb
jo
mov
setno
data16
mov
dec
data16
push
fcomp
xlat
inc
xchg
clc
jecxz
xchg
nop
add
pop
adc
lcall
add
aaa
mov
add
daa
imulb
add
popa
addb
repnz
dec
sbb
cltd
movsl
stc
jp
js
pop
notl
arpl
fs
inc
add
outsb
add
mov
neg
mov
mov
pop
into
xchg
xchg
rorl
dec
add
rolb
mov
js
push
xor
mov
cmp
in
lcall
jecxz
sbb
mov
fisttpll
sbb
ror
jp
addb
or
addb
mov
dec
push
inc
pop
icebp
lcall
mov
push
add
and
das
out
es
mov
xchg
shrl
add
xchg
dec
mov
bound
mov
add
mov
lahf
pusha
add
mov
mov
and
push
aaa
loopne
mov
int3
sbb
add
add
add
adc
mov
rolb
mov
pop
js
mulb
cli
clc
ret
test
dec
loopne
mov
std
cmp
sbb
add
xor
mov
arpl
dec
dec
roll
add
outsl
leave
jne
add
cmp
fisubs
inc
add
pop
jg
xor
out
inc
pop
insl
add
mov
mov
add
jae
leave
xor
lahf
xor
push
icebp
mov
jo
mov
sbb
add
add
mov
dec
adc
mov
ds
mov
xchg
add
mov
lods
ret
leave
in
mov
sbb
pusha
add
xchg
inc
add
out
inc
add
add
xor
js
rolb
mov
jnp
xor
mov
add
add
mov
mov
outsb
ret
into
daa
push
xor
mov
lahf
test
cld
mov
cmc
and
add
mov
mov
leave
je
push
jecxz
push
add
mov
add
xchg
dec
fcoml
leave
inc
loopne
mov
adc
mov
inc
imul
add
loop
mov
add
mov
mov
fstps
push
sbb
adc
addb
cli
jns
adc
add
sub
inc
add
out
mov
bound
mov
cld
sbb
repnz
mov
pushf
loope
add
push
and
mov
mov
sub
mov
movsl
int3
mov
outsb
int
add
push
jae
xor
mov
iret
lock
add
inc
push
aam
add
mov
mov
add
add
inc
add
in
pop
xchg
jo
mov
mov
mov
insl
xor
mov
shrl
decl
add
add
jmp
in
out
sub
push
loopne
mov
pop
push
cld
sub
xor
shll
add
mov
lods
out
xchg
add
mov
add
in
push
add
mov
add
mov
jl
cmp
mov
jecxz
sbb
movsl
mov
add
scas
out
add
jbe
dec
in
addb
mov
mov
inc
inc
ret
in
fwait
rcrl
inc
mov
ret
fucomi
cmp
int
sub
scas
jl
add
cmp
ud2
lock
test
icebp
ret
stos
sub
js
hlt
jge
xchg
cmp
sbb
add
add
cwtl
dec
aam
cmp
add
mov
mov
mov
mov
add
push
sbb
repz
mov
sub
push
push
push
push
push
push
cld
call
sub
es
movzbl
cmp
ss
push
push
call
cmp
je
es
lea
cs
sub
mov
push
es
call
test
jne
jmp
leave
push
lret
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
nop
lea
lea
sub
add
mov
sub
sub
push
pop
push
je
jmp
add
add
int3
sti
je
xchg
jns
push
es
push
add
add
push
fildll
push
add
aam
icebp
call
jl
ror
jle
addr16
ret
lock
lods
sub
xchg
add
sub
cmp
rolb
mov
cli
cmpsl
cmp
and
mov
add
add
add
iret
xor
mov
cwtl
sbb
aas
decb
in
and
mov
test
ja
sbb
ffreep
sub
sub
and
pop
outsl
repnz
add
and
pop
lods
mov
pop
mov
add
cmp
or
int3
das
out
add
mov
xor
sub
sbb
sbb
push
hlt
or
dec
out
loopne
mov
adc
test
add
out
xlat
mov
mov
mov
test
aas
popa
pop
pop
scas
scas
leave
pop
ss
stos
mov
in
inc
out
popf
pop
aam
xchg
add
xlat
cmp
add
mov
mov
jl
pop
pop
jns
or
jmp
add
sbb
and
dec
outsl
inc
xchg
shr
jae
test
icebp
xchg
sbb
inc
sbb
push
add
xlat
xor
rorl
add
inc
pop
sbb
addb
out
jle
out
push
mov
add
xlat
mov
in
cltd
ret
inc
add
cmp
add
inc
add
add
imul
mov
jle
aaa
repnz
repz
js
xchg
add
cmp
mov
int
add
hlt
insb
xchg
xor
push
cmpsl
rolb
mov
in
sub
xor
mov
mov
add
push
add
inc
add
jne
mov
add
mov
jp
cmp
insl
mov
push
addb
push
add
xor
addb
inc
xchg
shll
xlat
iret
movl
ljmp
add
stos
aam
add
add
add
addl
lret
mov
add
push
adc
mov
mov
adc
dec
push
mov
push
lods
rolb
repnz
mov
add
aad
sbb
adc
lret
xor
cmp
mov
sub
stos
js
push
mov
mov
push
shll
mov
add
es
out
xchg
lods
movsb
sbb
add
mov
add
or
cmp
mov
xlat
cmp
mov
mov
add
push
add
sbb
lea
fisttpl
jmp
push
sbb
mov
repnz
hlt
fstl
add
mov
mov
out
mov
negl
xchg
ja
and
mov
iret
xchg
xor
mov
hlt
adc
mov
decb
in
inc
mov
data16
add
dec
mov
adc
mov
mov
dec
xchg
push
imul
aam
imul
add
enter
add
add
test
pop
cld
jecxz
dec
fwait
fwait
inc
sbb
mov
sub
cmp
add
jo
mov
jo
mov
mov
xlat
mov
add
mov
mov
fimuls
pop
lahf
push
addb
mov
lds
rolb
mov
out
jp
shl
push
and
pushf
mov
aas
dec
jne
jecxz
mov
lods
inc
and
mov
push
imul
sub
push
mov
jbe
movsl
in
inc
ret
mov
mov
shl
push
jge
adc
shll
add
in
add
call
pusha
add
imul
rolb
mov
mov
jmp
xchg
push
dec
js
movsb
xchg
pop
rcll
mov
add
mov
gs
aad
add
mov
clc
mov
push
add
mov
rolb
mov
mov
lcall
inc
jp
cli
int
fbld
mov
add
mov
xchg
mov
sbb
rolb
mov
je
jbe
add
add
mov
dec
push
push
mov
mov
lahf
push
xor
mov
in
jno
out
fdivs
sbb
movl
push
adc
mov
add
cmc
sub
ljmp
inc
add
cli
jo
mov
mov
nop
add
add
lock
int3
inc
jge
add
sub
push
pop
xchg
jle
ja
add
xor
dec
mul
lea
inc
add
adc
dec
bound
mov
add
jbe
outsl
ljmp
ret
inc
add
loope
inc
add
mov
fadd
xchg
adcl
sahf
sti
imul
add
push
nop
add
sub
sbb
dec
fwait
pop
jae
mov
mov
mov
popf
repz
pop
imul
loop
mov
imul
inc
mov
mov
mov
movsb
loope
movsw
adc
mov
nop
add
out
mov
mov
jp
adc
lahf
mulb
dec
lock
sub
xor
fidivs
sub
add
add
pop
add
mov
subl
add
ljmp
push
aad
js
add
cmpl
ficomps
cmp
int
lret
daa
push
scas
ret
push
mov
cmp
xchg
jno
jp
inc
push
add
mov
dec
mov
cmpsl
dec
push
mov
mov
and
add
mov
jmp
icebp
pop
push
inc
lret
xchg
push
mov
movsb
movsl
mov
and
jp
cli
inc
fsubs
pop
sub
xor
inc
add
add
xchg
jbe
xchg
sbb
flds
and
mov
add
xchg
scas
mov
in
fidivrs
in
jecxz
mov
sub
lods
loope
cmp
add
jae
and
in
jb
mov
cmp
xchg
or
dec
mov
mov
clc
rolb
mov
cmp
ret
push
jns
add
add
pop
mov
outsb
lea
adc
mov
or
rcrl
add
jno
filds
call
dec
mov
push
addb
incb
add
mov
insl
sub
mov
xchg
xor
ret
cltd
push
cli
ret
mov
add
add
out
loop
mov
jl
cmp
cmpsl
sysenter
xchg
mov
mov
sti
rolb
mov
inc
add
mov
int
loope
xor
add
je
mov
not
sbb
xor
idiv
scas
lcall
sbb
add
inc
mov
mov
subl
daa
cmp
dec
push
add
dec
shrl
push
xchg
jnp
rcrl
xor
mov
mov
addr16
mov
repz
mov
mov
mov
popf
adc
pop
cmp
rcr
negb
mov
add
add
inc
cmpsl
ret
andl
add
fildll
in
icebp
jne
addr16
mov
mov
add
and
mov
pop
popa
in
xor
mov
adc
mov
fisubrl
mov
mov
mov
ss
inc
xchg
sahf
aas
mov
sbb
or
sub
push
ss
repnz
or
and
jbe
hlt
cs
xor
mov
xchg
adc
mov
add
mov
pop
ljmp
outsb
push
add
imul
sbb
add
mov
add
iret
in
add
fidivl
or
mulb
pop
lds
out
jae
mov
stos
popf
inc
lds
outsl
les
dec
sub
mov
lods
push
negl
repnz
ret
addb
cmp
sbb
bound
mov
movsl
mov
cltd
mov
mov
xchg
ret
cwtl
jae
sub
testb
stos
mov
and
mov
mov
imul
mov
adc
mov
mov
mov
and
add
cld
mov
pop
fidivl
cmp
int
and
mov
inc
fcomps
mov
pop
decl
lahf
cmp
scas
xchg
mov
add
fistl
add
mov
add
xor
repz
in
outsl
pop
pop
test
addb
xor
add
cmp
fstl
mov
mov
into
je
xchg
movsl
into
les
adc
ret
jae
inc
orl
pop
scas
sub
xor
push
lcall
jmp
sbb
rolb
mov
mov
add
jnp
jnp
add
jl
cwtl
call
push
mov
add
mov
mov
add
add
inc
mov
test
sbb
dec
push
cld
mov
pushf
mov
inc
add
sub
or
add
inc
stos
mov
cmpsl
aas
cli
mov
test
stos
cmp
jae
mov
stos
inc
js
jnp
add
add
das
mov
stos
cmpl
add
mov
mov
mov
pop
gs
jb
mov
loopne
mov
add
es
ljmp
add
rolb
repnz
bound
mov
push
bound
mov
mov
cmp
xor
or
lock
add
mov
andl
mov
inc
xchg
add
test
mov
and
add
cs
cli
addr16
push
xor
sbb
jmp
daa
xchg
mov
add
adc
test
in
int3
jmp
mov
xchg
insb
bound
mov
stos
mov
mov
adc
mov
push
icebp
int3
testb
inc
ret
fwait
insb
insb
in
call
ds
imul
lods
and
mov
add
clc
mov
jle
insl
xchg
mov
test
and
testl
cmp
mov
xchg
jmp
add
cmp
pop
pop
mov
jg
imul
lods
subl
add
mov
mov
or
outsl
push
pop
jmp
mov
out
and
mov
lret
sub
inc
fs
clc
inc
cmp
sub
ljmp
dec
bswap
mov
pop
stos
leave
push
push
adc
mov
dec
inc
add
dec
lahf
adc
mov
int
mov
add
leave
repnz
add
jne
scas
dec
into
adc
orl
jne
pop
mov
inc
fnsave
sbb
mov
pop
dec
jnp
inc
add
mov
cmc
imul
mov
cmp
or
dec
dec
xchg
popl
out
inc
add
add
mov
neg
add
mov
xchg
stc
mov
mov
add
pop
nop
add
sub
aas
int
dec
jl
push
add
push
cmp
or
loop
mov
enter
pusha
add
addb
gs
add
jmp
imull
sub
les
pop
dec
popa
pop
or
loop
mov
cwtl
movsb
outsb
rolb
mov
iret
pop
inc
clc
dec
pop
addl
cltd
lods
test
insb
or
mov
pop
dec
sbb
add
mov
jbe
cmp
es
pop
addb
rolb
repz
fstpl
stc
cmp
movsl
sarl
add
test
mov
mov
add
jg
add
mov
call
lds
push
adc
jmp
pop
test
push
jp
or
sbb
xor
mov
subl
mov
mov
cwtl
and
mov
or
mov
je
fidivrs
xor
push
xchg
add
add
mov
aas
jns
sbb
jns
xchg
jl
xorl
mov
add
mov
in
jmp
lcall
mov
adc
fs
xor
cli
jnp
repnz
cmp
icebp
lret
pop
mov
fildll
mov
pop
ljmp
cmc
cmc
push
addb
pop
fwait
mov
mov
adc
test
jbe
mov
rolb
bound
mov
add
jnp
mov
mov
pop
add
js
jge
rcll
addr16
cmp
pop
inc
cmp
mov
mov
call
mov
mov
std
mov
jns
add
in
mov
xor
mov
sub
addb
into
adc
add
stos
notl
cs
add
push
cwtl
sbb
jbe
mov
mov
add
imull
in
ss
lods
add
cwtl
sub
ds
add
hlt
insb
insb
pop
inc
add
aaa
pop
in
mov
mov
or
mov
mov
outsb
add
inc
inc
outsb
int
fsts
sahf
dec
mov
repz
mov
dec
jp
lods
mov
and
mov
add
mov
add
jno
popf
and
mov
dec
xor
in
loope
mov
or
lock
mov
arpl
mov
sahf
lds
sub
add
je
adcl
add
mov
mov
mov
add
add
call
sti
rolb
arpl
arpl
pop
adc
mov
repnz
movl
pop
mov
mov
cmpsb
aaa
pop
addb
neg
mov
aaa
mov
mov
mov
cmpsl
addr16
aam
shrl
into
pop
lods
je
data16
mov
pop
out
or
mov
lea
add
add
mov
pop
mov
cmp
pop
mov
stos
imul
mulb
jno
in
dec
xchg
add
enter
inc
ficomps
jg
popa
ret
jp
add
stos
xchg
and
mov
mov
sbb
ret
adc
mov
je
add
movsb
xchg
and
mov
hlt
pop
dec
lahf
xchg
adc
mov
and
stos
adc
add
not
pop
fsts
pop
bound
mov
addb
aad
rolb
aas
inc
ds
push
mov
add
loopne
mov
jno
and
mov
mov
or
popa
jb
mov
rolb
mov
cmp
pusha
add
add
mov
xchg
add
mov
hlt
push
xchg
idiv
sar
fimull
and
xchg
xor
mov
cmovb
mov
clc
push
add
jne
push
fdivrs
pusha
add
and
mov
mov
jbe
pop
and
sub
in
call
out
leave
mov
clc
xchg
sub
je
jecxz
add
adc
mov
pop
push
adc
mov
ret
or
xchg
push
mov
rolb
mov
aam
mov
xlat
or
mov
mov
add
lds
mov
jno
jp
fisttpll
pop
inc
cwtl
test
sub
movsb
pushw
lock
imul
pop
dec
lret
mov
add
sbb
repnz
mov
inc
addr16
and
and
mov
add
add
mov
pop
mov
js
aam
adc
sbb
aaa
loopne
mov
add
lea
or
add
add
out
es
xchg
pushf
jne
divb
mov
mov
nop
add
hlt
mov
mov
nop
add
mov
cmp
jns
insl
pop
dec
mov
ret
push
pop
or
push
popf
arpl
ja
add
jb
mov
jle
in
sbb
ss
cwtl
push
sar
add
mov
xor
insl
ffreep
cmpsl
pop
sbb
pusha
add
mov
cmc
scas
stos
shll
add
jb
mov
imul
sub
push
mov
sbb
xor
jg
inc
mov
dec
mov
bound
mov
add
push
add
test
add
jecxz
push
xchg
jp
sub
cmpsb
outsb
out
cmpsb
xchg
rolb
pushf
imul
mov
or
or
adc
mov
mov
sub
sub
add
dec
pop
cmpsl
xchg
add
daa
lea
cmp
xchg
pop
test
add
add
jne
add
lret
inc
pusha
add
add
daa
inc
add
out
push
cmp
pop
lods
out
pusha
add
push
pop
dec
rolb
mov
lock
fs
das
mov
sbb
add
insl
inc
add
add
cmp
inc
add
scas
pop
push
cmp
into
mov
mov
add
out
jae
cwtl
sbb
add
jecxz,pt
inc
add
inc
add
add
push
rolb
mov
or
add
cli
sbb
dec
inc
push
mov
adc
and
jbe
cmp
or
push
xchg
pop
mov
add
add
neg
int
xchg
add
xor
scas
addb
jo
mov
mull
imull
mov
mov
in
jmp
aam
stos
cmpsb
pushl
or
ljmp
add
or
mov
clc
icebp
jle
add
add
inc
add
mov
addr16
mov
fmul
inc
lock
and
mov
jb
mov
js
sti
cmp
fcoml
push
hlt
or
test
add
sub
push
mov
loopne
mov
popf
testl
mov
xor
or
jb
mov
mov
cs
mov
sbb
out
pop
loope
lahf
inc
imull
pop
dec
out
xor
mov
add
movzwl
add
or
in
insl
adc
add
add
mov
push
lea
sub
inc
add
xor
mov
and
pop
sub
add
inc
add
adc
add
mov
jg
or
roll
mov
mov
mov
les
scas
lods
cmp
mov
pop
dec
sub
cmpl
cli
sub
outsb
lret
insl
ja
or
ljmp
mov
and
or
mov
mov
add
add
xchg
imul
add
jne
das
daa
jo
mov
and
jg,pn
je
sbb
add
popf
jbe
mov
add
sbb
sub
mov
sbb
loope
cmc
fisttps
add
add
cmp
jnp
and
mov
add
mov
dec
aaa
xor
mov
mov
lods
loopne
mov
jbe
inc
push
adc
mov
lds
mov
and
jno
call
inc
rolb
mov
into
mov
pop
in
in
daa
rcll
add
lds
push
xchg
add
jecxz
fcom
xchg
mov
fcoml
mov
test
lods
rolb
bound
mov
pusha
add
xchg
in
imul
sbb
mov
nop
add
ljmp
imulb
add
test
filds
jno
sbb
nop
add
inc
fnstcw
mov
mov
pop
xor
loope
inc
mov
mov
rolb
jl
ret
jl
fmuls
push
pop
test
aam
mov
add
cmpsb
or
inc
sti
je
add
addl
leave
inc
add
lods
mov
jecxz
movsl
out
xchg
decl
mov
sbb
sub
push
pop
xor
add
lret
mov
in
and
add
mov
mov
stc
int
das
adc
cs
adc
mov
pushf
and
and
into
or
add
add
or
push
cs
xor
adc
mov
out
push
lods
scas
repnz
mov
lret
push
mov
in
add
add
mov
mov
xor
divl
add
cmp
add
mov
popa
popa
add
mov
xchg
aas
dec
addr16
rcll
enter
aaa
cmp
lahf
mov
xchg
push
fucomip
sahf
bound
mov
jne
add
and
repnz
imul
std
roll
jne
pop
mov
mov
add
ror
fs
test
add
das
dec
insl
loop
mov
lret
leave
rolb
mov
xchg
in
cmpxchg
add
add
sbb
jbe
and
add
push
push
xor
mov
adcl
add
cmpsl
pusha
add
mov
push
add
add
sub
push
xchg
rcrl
arpl
adc
mov
gs
ds
scas
imulb
jbe
out
mov
stc
push
add
add
mov
lcall
shl
popf
sbb
outsl
addb
call
bound
mov
mov
inc
add
add
pop
aam
inc
mov
cli
inc
mov
mov
fwait
sbb
xor
mov
cld
fadds
sbb
push
jl
push
popa
mov
mov
add
mov
add
mov
mov
add
out
mov
mov
push
pop
movsl
xchg
add
mov
add
stc
adcl
xchg
out
pop
push
frstor
inc
jae
adc
mov
xchg
addb
fldt
jnp
mov
enter
aaa
clc
cmp
add
add
mov
sti
movsb
jns
add
add
add
push
push
sbb
arpl
dec
rolb
mov
add
fcmovbe
mov
add
mov
push
or
imul
add
add
addb
mov
push
inc
pop
scas
add
mov
loop
mov
xor
mov
add
mov
loope
add
loopne
mov
xchg
sbb
adc
mov
mov
add
push
jae
mov
and
mov
and
mov
adc
add
mov
push
push
add
aam
mov
inc
add
rolb
mov
mov
mov
inc
imul
sub
jne
inc
add
fdivs
xchg
adc
mov
add
jge
in
ja
add
jae
jbe
add
insb
stc
gs
flds
mov
dec
push
ret
sub
popf
cmp
xchg
add
mov
add
add
add
dec
dec
push
or
jno
fsubs
inc
push
gs
add
add
negb
lret
mov
add
rol
xchg
cli
hlt
mov
mov
xchg
adc
push
add
insb
ja
adc
pop
ret
adc
xlat
loop
mov
stos
jmp
mov
hlt
mov
pop
rolb
mov
add
jle
add
mov
cmp
dec
inc
call
add
aam
add
xchg
stc
and
add
mov
in
movsb
stos
and
shll
xchg
add
add
jg
jmp
mov
mov
add
dec
mov
mov
add
fadd
dec
cmc
xor
mov
sub
imul
mov
dec
push
adc
pusha
add
pop
dec
dec
fstl
xchg
add
mov
add
mov
rolb
rolb
mov
testb
jle
iret
dec
and
mov
jb
mov
mov
mov
and
pop
dec
or
int3
stos
sub
mov
mov
mov
mov
imul
aaa
mov
add
mov
je
inc
js
rolb
mov
cmp
push
out
or
cmp
mov
add
mov
into
jge
loopne
mov
xchg
aas
flds
and
stc
adc
mov
add
insl
loop
mov
or
sub
lea
sub
push
mov
scas
mov
pop
sub
aad
cwtl
rolb
mov
adc
add
xor
jp
push
out
into
pushf
mov
ds
push
lods
dec
xor
mov
or
mov
mov
stos
mov
testb
cltd
popl
xchg
add
mov
mov
adc
out
cld
js
add
mov
sti
or
mov
add
add
loopne
mov
mov
inc
add
iret
sub
fcmovnu
sub
xchg
mov
add
aad
mov
loopne
mov
add
push
jns
add
add
mov
add
xchg
aas
jno
sub
add
mov
mov
std
repnz
jne
jmp
loopne
mov
xor
mov
in
mov
xor
addb
aas
push
dec
test
test
aam
into
scas
jmp
mov
mov
jns
pop
rcll
inc
push
push
push
add
mov
dec
xchg
mov
mov
push
testb
lods
inc
jp
fcomp
add
cmp
xchg
inc
add
push
add
movntps
dec
scas
lret
mov
outsb
out
jmp
inc
add
lret
or
push
adcl
sbb
cmpsb
in
add
pop
fidivrs
jo
mov
add
sub
jmp
add
pop
dec
jmp
jno
pop
jno
rolb
pusha
add
mov
add
sbb
mov
mov
sbbl
loope
and
rcl
rolb
mov
mov
adc
mov
xchg
into
sbb
push
addb
mov
mov
lods
cs
push
ret
push
addb
add
cmp
cwtl
into
lea
jmp
nop
add
addb
and
adc
sahf
fwait
iret
xchg
fs
lods
leave
xor
mov
addb
jmp
xor
add
stc
arpl
mov
add
out
scas
aam
aaa
ret
xchg
aad
cmp
sub
fwait
adc
jp
jb
mov
inc
pop
and
mov
inc
xchg
add
stc
orl
jo
mov
pop
ja
jne
add
rolb
mov
mov
je
pop
fucomi
mov
mov
jecxz
popf
loopne
mov
popf
pusha
add
aaa
out
xor
mov
mov
cmp
repnz
or
cmpsl
mov
sahf
testl
jno
xor
or
icebp
ja
aaa
xchg
sbb
xchg
fcmovu
sbb
idiv
icebp
jnp
inc
enter
xor
mov
add
jbe
xchg
add
add
fmuls
mov
jo
mov
js
and
rorl
push
pop
mov
sbb
in
jnp
adc
scas
sub
loop
mov
mov
ficoms
mov
mov
add
test
lahf
cmp
dec
and
mov
jmp
add
xor
xchg
out
add
loop
mov
pushf
cs
bound
mov
add
add
outsl
push
xchg
addb
ja
lcall
mov
and
insb
imull
ficompl
imul
mov
add
mov
imul
jae
pop
push
fs
stos
push
or
and
add
mov
subl
inc
xor
sub
adc
rcrl
bound
mov
aas
xchg
add
push
mov
lds
fistpl
and
add
popa
stc
jmp
icebp
jg
push
jno
add
outsl
iret
clc
mov
push
and
mov
jg
mov
add
sahf
dec
mov
add
add
dec
sbb
fidivrl
add
push
sub
adc
sbb
mov
pushf
xchg
mov
push
add
ds
add
add
insl
js
or
add
bound
mov
rolb
mov
xchg
pop
ljmp
lea
mov
cwtl
adc
mov
ja
popa
mov
add
les
add
dec
dec
adc
mov
nop
add
jo
mov
add
test
pop
mov
pusha
add
mov
dec
mov
pop
test
not
or
and
clc
and
popa
jns
int3
xchg
in
addb
lods
or
mov
pop
test
cltd
fs
or
push
add
pop
xor
cmp
inc
cmpsl
or
add
mov
jbe
add
movsl
leave
insb
mov
je
dec
sti
sub
sub
add
scas
inc
add
xor
mov
push
jb
mov
xchg
in
sbb
arpl
xor
mov
mov
cmp
add
mov
cmp
add
fs
adc
mov
jp
std
movsl
ja
pop
pushf
mov
std
and
mov
pop
pop
or
cltd
cmp
subl
add
popa
jnp
test
repnz
pop
loopne
mov
outsb
mov
clc
das
add
es
mov
add
pop
mov
add
movsl
xor
mov
mov
stos
add
clc
ds
jg
inc
jbe
mov
add
sbb
ret
lret
push
inc
arpl
mov
sbb
cmp
jnp
or
ljmp
xor
push
fildll
fisubrs
or
mov
popf
mov
lods
pause
add
fidivrl
out
aad
or
inc
add
mov
nop
add
add
pop
xor
mov
mov
leave
pop
pop
xor
xor
mov
jg
inc
add
mov
lods
jg
push
and
sub
rolb
push
push
mov
add
add
mov
sahf
and
imul
mov
ja
add
and
mov
fbld
outsl
aas
mov
dec
ret
mov
add
xchg
cwtl
iretw
sub
insl
scas
jns
xor
rolb
mov
je
loope
xor
gs
loop
mov
out
xor
mov
enter
movsl
stos
js
inc
fcompp
mov
jmp
xor
mov
pop
test
push
xchg
call
cmpsl
addb
fidivrl
add
or
fsubl
lret
stos
add
lds
and
js
in
test
outsb
or
add
mov
into
not
add
insb
jg
repz
add
popa
test
aas
ficoms
mov
add
add
jno
add
mov
push
add
pop
sbb
dec
pop
aam
mov
mov
add
ret
test
add
and
lret
add
rolb
cld
fwait
rcl
stos
and
add
push
jbe
or
fnstenv
cltd
fadd
pop
sub
scas
cld
inc
addb
inc
pop
cmc
or
insb
mov
fmul
fs
mov
mov
adc
repz
ja
sbb
add
adc
pop
data16
xchg
add
dec
iret
xchg
sub
pop
jae
fmull
rolb
mov
xchg
mov
mov
in
in
cli
popf
mov
pop
in
push
sbb
scas
add
in
push
dec
xor
fwait
push
fs
push
add
call
pop
inc
add
loopne
mov
sbb
sub
pop
mov
std
push
mov
mov
add
rcll
mov
mov
ffreep
push
inc
nop
add
jecxz
add
add
sub
cld
je
into
sbb
or
mov
push
adcl
add
sbb
or
add
fdivr
xchg
push
add
mov
mov
cmp
rorl
hlt
jb
mov
mov
lods
out
xchg
pop
subl
jle
add
mov
repnz
scas
mov
xchg
data16
mov
mov
jp
add
call
adc
sbbl
outsl
adc
mov
rcll
fisubl
mov
mov
and
mov
movl
push
add
test
or
pop
dec
xchg
inc
fnstenv
push
bound
mov
lret
aam
rolb
mov
mov
loopne
mov
adc
pop
popa
adc
mov
push
outsb
jg
add
or
ficoms
popf
inc
add
sbb
add
ret
xchg
ljmp
and
cs
xchg
mov
mov
bound
mov
add
aam
add
pop
int
add
rolb
mov
sti
loopne,pn
mov
add
pop
out
mov
movsl
out
adc
das
sub
mov
add
xchg
fistl
add
das
out
xchg
add
cmp
loope
incl
push
adc
dec
js
mov
fmull
mov
dec
adc
add
add
sbb
movb
sub
clc
aas
adc
push
arpl
sahf
out
dec
mov
adc
shrl
nop
add
mov
jecxz
add
sti
xchg
add
jae
adc
stos
in
or
addb
push
jne
jb
mov
rolb
leave
xor
mov
lea
jg
add
or
xor
mov
push
fcomi
jae
jp
cltd
add
mov
add
lret
testl
sahf
mov
sbb
jge
fisttpll
fidivs
fwait
cmp
addb
fs
inc
push
xchg
add
in
mov
sub
dec
mov
clc
inc
xor
mov
adc
mov
pop
stos
stos
outsb
mov
test
mov
inc
outsl
adc
push
and
mov
mov
popa
pop
inc
cmp
mov
movsl
imull
incl
rolb
lods
mov
sub
in
gs
add
int3
mov
test
shll
mov
xor
mov
mov
addb
mov
fdivrl
out
cmc
outsl
lret
or
or
lods
icebp
enter
mov
je
inc
add
jp
add
mov
aam
and
sbb
ss
jg
mov
movb
rol
push
add
sub
or
dec
sbb
dec
insl
lcall
push
jbe
add
add
mov
je
cli
les
or
pop
jae
pop
dec
pop
inc
add
dec
ret
mov
mov
and
dec
cmp
add
jo
mov
cwtl
mov
add
gs
push
pop
jb
mov
and
stos
in
sub
jbe
call
add
stc
adc
mov
jge
enter
cli
mov
jb
mov
mov
add
les
loope
adc
push
pusha
add
and
mov
cltd
insl
out
adc
mov
mov
mov
jmp
xor
mov
ss
out
bound
mov
mov
add
cmp
es
adc
mov
sbb
jo
mov
int
sub
call
insb
inc
popa
pop
sbb
data16
add
pop
scas
mov
mov
addb
gs
stos
pop
lahf
call
fadd
add
mov
add
add
mov
xor
icebp
cmp
sbb
mov
mov
addr16
dec
hlt
and
and
add
ret
movsb
pop
adc
addr16
je
mov
add
mov
xor
mov
dec
sub
adc
mov
cmpsl
sbb
add
adc
sub
mov
mov
lret
cmp
pop
jmp
sub
test
add
ss
jae
mov
push
jecxz
add
push
add
lret
lahf
push
rolb
mov
push
add
sub
int
test
mov
clc
pop
js
cltd
repz
add
fabs
jmp
mov
mov
andl
pop
cmp
pushf
mov
mov
add
mov
into
cli
jne
fs
daa
int
lahf
push
inc
xchg
cli
and
int
mov
add
sub
loopw
mov
add
ljmp
mov
test
mov
sub
xor
mov
inc
or
cmp
adc
mov
cmp
mov
push
add
add
addr16
jae
sub
fadds
popf
push
mov
mov
jmp
add
or
cld
ss
out
lods
push
adc
std
adcl
fisubrl
adc
pop
ja
test
sbb
and
jo
mov
lret
mov
mov
iret
les
and
push
dec
xchg
jnp
subl
hlt
out
inc
cmc
fistl
add
aas
aam
repnz
mov
mov
add
add
mov
push
xrelease
sti
mov
bound
mov
add
loopne
mov
pop
xchg
xchg
jp
add
mov
js
sub
add
cmc
jle
xor
aas
jb
mov
adc
mov
add
add
add
xor
jmp
inc
pop
mov
mov
pop
leave
dec
xchg
adc
inc
push
mov
mov
add
and
lock
add
imul
aad
push
mov
imul
scas
lds
adc
fisttps
mov
mov
and
mov
test
adc
mov
xchg
pop
xchg
scas
sub
push
adc
fisubrs
dec
fisubrl
add
add
movsl
dec
mov
fisubs
xchg
dec
aad
lahf
ficomps
insb
rdpmc
inc
add
fcoms
add
add
pop
int3
hlt
jge
insb
jo
mov
in
aas
icebp
jns
mov
add
mov
lods
xor
call
mov
add
and
inc
out
dec
pop
addb
or
or
pop
cs
jne
lods
cmp
test
dec
inc
adc
inc
pop
repnz
hlt
xchg
lret
mov
icebp
xchg
pop
insb
mov
call
mov
add
add
sbb
imul
sbb
xchg
or
push
daa
or
jbe
repz
es
mov
add
add
in
and
inc
add
mov
mov
xorl
mov
sub
ja
dec
out
sub
adc
icebp
mov
mov
lods
push
jne
push
movl
mov
sti
test
ficoml
mov
in
and
mov
mov
mov
mov
push
mov
cmp
addb
rolb
mov
mov
mov
inc
add
push
ss
sti
pop
adc
mov
lret
cmp
lcall
or
mov
in
dec
pop
rolb
lods
sbb
ret
sbb
jle
fwait
lret
clc
cmp
or
add
mov
mov
or
jnp
inc
out
add
in
leave
mov
mov
push
pop
mov
add
lcall
mov
nop
add
les
mov
bound
mov
push
sbb
add
cmp
das
ja
add
cli
adc
mov
and
mov
add
test
push
js
push
test
je
jmp
jg
insl
out
repz
jg
bound
mov
inc
add
xor
mov
lcall
aam
dec
insl
lods
popf
pop
mov
int3
sbb
mov
mov
fs
mov
xor
ret
cmp
xchg
inc
mov
cmpsb
push
jle
int
add
mov
add
mov
inc
cmp
add
and
fdivrp
jo
mov
jle
xor
std
pushf
jp
sbb
inc
gs
mov
jo
mov
movsl
mov
sub
cmp
mov
xchg
add
repz
xchg
mov
imul
add
xchg
out
xor
fidivrs
shll
aam
xchg
lcall
in
sub
aaa
dec
and
sbb
add
pop
mov
int3
nop
add
aaa
push
test
js
mov
mov
add
adc
mov
in
adc
add
rolb
mov
add
add
test
test
or
add
push
mov
add
std
inc
hlt
ds
out
pop
inc
add
bound
mov
in
mov
ljmp
pop
stc
inc
sbb
loope
sub
lods
xor
imul
mov
xor
mov
mov
mov
dec
mov
mov
jg
add
dec
dec
sbb
mul
add
faddl
mov
test
push
add
mov
add
loopne
mov
addb
xchg
gs
mov
xor
cwtl
sbb
je
out
xchg
outsl
or
push
out
mov
add
cmp
fstpl
out
insl
jno
lea
mov
pushf
pop
adcl
add
xchg
addb
pop
push
outsl
and
adc
out
inc
filds
mov
shll
int
addb
es
addb
mov
mov
sbb
add
lods
scas
mov
popf
rolb
mov
add
cmc
fidivs
mov
push
add
mov
cwtl
aad
movsb
lret
sbb
add
dec
fstpl
imul
add
sahf
ficompl
pop
lret
cmp
add
add
or
pop
rolb
sti
cld
or
mov
out
pushf
pop
aas
aam
cltd
lods
fisubrs
sbb
mov
shrl
add
mov
frstor
mov
outsb
lret
mov
loop
mov
fidivrs
xor
or
mov
mov
outsb
inc
cmc
ljmp
mov
in
dec
dec
cmp
stc
movsl
iret
mov
in
sti
rolb
mov
inc
mov
pop
and
les
cli
push
aad
add
and
xor
mov
push
scas
inc
and
mov
or
sahf
jns
add
add
mulb
push
xor
es
push
mov
lcall
mov
mov
mov
movsb
sbb
jne
daa
dec
testl
mov
fnstenv
push
jae
in
pop
jg
mov
popf
mov
and
mov
pop
mov
mov
inc
pop
lods
mov
add
int
mov
and
jbe
push
sbb
int
add
js
add
add
pop
int3
cmp
cmp
cmp
pop
mov
add
mov
lods
and
mov
mov
push
push
jmp
dec
jl
sbb
push
lret
aad
mov
add
mov
ret
in
mov
mov
daa
shl
int3
add
add
js,pn
add
jne
add
icebp
pop
imul
insl
add
mov
add
add
pcmpeqd
mov
gs
out
and
sti
lea
in
mov
cmpsb
push
test
imulb
divl
in
add
loope
and
inc
jo
mov
repnz
test
insl
std
push
add
add
cmp
jo
mov
add
ftst
mov
mov
add
sahf
mov
add
mov
inc
mov
dec
push
mov
mov
push
pop
jne
rolb
mov
rolb
mov
nop
add
inc
sub
cli
cmpsl
leave
shll
mov
lahf
in
add
cmp
add
jnp
imul
pop
in
mov
add
push
cmp
push
xchg
add
xor
adc
test
lods
xchg
fs
sbb
add
lret
popf
xor
mov
jle
push
mov
mov
adc
mov
sub
xor
add
push
outsb
sbb
mov
adc
mov
push
push
fdivrs
dec
or
mov
daa
xchg
pusha
add
or
add
not
clc
idivl
faddl
add
addr16
jmp
pop
and
movsb
jo
mov
pop
or
add
xor
push
inc
out
inc
pop
and
test
into
mov
mov
shld
lds
iret
adc
push
jno
xchg
add
adc
jae
cmp
adcl
or
inc
pop
jl
mov
mov
dec
adc
mov
adc
bound
mov
mov
pop
or
inc
add
in
inc
imul
out
bound
mov
mov
cmpsb
add
hlt
xchg
mov
cmc
adc
mov
sub
add
adc
mov
mov
add
stos
and
mov
fidivrs
inc
dec
out
inc
xchg
mov
mov
mov
xor
mov
loopne
mov
mov
nop
add
add
les
pop
jmp
jns
mov
mov
and
lea
add
mov
pushf
pop
push
dec
sti
jb
mov
lods
lods
mov
andl
pop
addr16
lds
adc
inc
or
mov
add
mov
mov
add
add
ljmp
ret
aas
es
push
cmp
out
push
out
cwtl
lock
add
inc
xor
mov
nop
add
arpl
jb
mov
ss
mov
xor
mov
sarl
add
lock
mov
mov
add
movsb
jecxz
ficoms
add
addr16
add
jae
adc
add
imul
add
in
sub
mov
or
add
mov
lret
stc
xchg
xor
mov
mov
mov
pop
jae
xorl
int
popf
enter
add
add
mov
add
adc
add
cmp
rol
jne
mov
mov
aas
int
fsub
add
scas
pop
fucom
add
mov
inc
jmp
lret
jge
rolb
imul
xor
mov
lock
or
adc
mov
adc
mov
repnz
mov
jb
mov
mov
add
outsl
test
dec
out
inc
lods
movl
pushf
and
xchg
jo
mov
mov
lock
mov
cmp
test
mov
test
fptan
add
adc
push
jne
out
test
mov
mov
mov
and
mov
clc
decb
dec
pop
mov
repz
add
jge
cmp
push
fcomip
addb
pop
lods
in
outsl
push
mov
add
jecxz
mov
add
xor
mov
leave
push
add
or
add
shll
inc
push
add
push
sub
mov
cmp
insb
jbe
dec
insb
stc
xor
cmp
jmp
and
mov
lds
in
mov
pop
and
cmpsb
loopne
mov
cmp
sbb
mov
jbe
adc
jno
add
pop
fwait
xchg
add
or
push
pop
in
mov
xlat
pop
lahf
jl
or
adc
add
pushf
cmp
sub
add
push
nop
adc
and
divl
pop
and
mov
mov
test
test
rolb
mov
mov
lods
mov
dec
setp
jnp
fists
xor
sbb
out
out
fimull
ja
dec
in
fldl
stc
push
hlt
inc
data16
cmp
inc
or
add
pop
dec
mov
sbb
rolb
mov
add
add
mov
add
sub
add
mov
add
add
sahf
xchg
lock
sub
xchg
enter
mov
dec
insl
sub
sub
ds
jp
rolb
mov
mov
push
adc
mov
or
mov
rolb
pop
fsubl
pop
mov
add
lcall
rorl
mov
add
sbb
andl
pop
pop
rolb
mov
and
mov
lods
cmp
xchg
and
push
add
mov
mov
arpl
xchg
xor
sub
add
outsb
xchg
inc
out
jmp
imul
add
mov
pop
clc
sbb
pop
xchg
in
ret
inc
add
jp
xchg
lret
insb
test
lea
mov
add
push
pop
lret
jnp
ss
push
or
add
jb
mov
add
addb
push
jns
rolb
and
add
xor
jge
add
and
or
xor
and
add
sub
push
cltd
outsb
add
add
divl
push
add
mov
cmpsl
adc
add
mov
addb
nop
add
loopne
mov
enter
sahf
xchg
int
mov
mov
mov
mov
sub
jbe
nop
add
mov
orl
mov
push
dec
popa
test
xor
test
mov
xchg
add
sbb
cmpsb
inc
add
pusha
add
outsb
rolb
mov
mov
hlt
jne
sub
xchg
push
stc
and
mov
mov
in
fcomps
adc
mov
ret
sub
mov
push
test
add
cmp
in
dec
xor
push
pop
mov
mov
mov
enter
ljmp
add
and
mov
add
push
add
inc
idiv
stos
sbb
repnz
test
xchg
dec
fwait
inc
dec
rolb
mov
jecxz
bound
mov
cmp
pusha
add
pop
mov
aaa
clc
mov
cmp
xor
ja
int3
xlat
cwtl
cld
mov
cs
mov
rolb
mov
cli
adc
mov
fs
jmp
mov
movsl
xchg
sbb
scas
mov
movsb
int
mov
arpl
popf
mov
add
mov
sub
lods
mov
repz
rcll
repnz
int3
pop
pop
mov
add
cmp
inc
add
add
jmp
pop
mov
add
rolb
arpl
add
or
lret
lods
or
and
mov
cwtl
fldcw
add
sbb
and
lret
add
jle
movsl
mov
pop
mov
sub
add
push
repnz
xchg
rolb
mov
inc
add
mov
dec
jb
mov
inc
fistl
push
add
insl
movlps
jns
sarl
add
mov
add
mov
lock
push
push
loopne
mov
mov
mov
mov
add
lcall
xor
aad
aam
sarl
add
ficomps
adc
mov
cwtl
xchg
rolb
clc
sbb
filds
ljmp
adc
mov
aam
add
mov
mov
mov
mov
sbb
ja
out
jnp
jne
jno
xchg
mov
jbe
dec
cld
fs
mov
dec
aas
push
add
mov
mov
jl
ja
pop
in
lock
add
mov
or
jbe
add
xchg
add
arpl
aaa
lahf
movsb
inc
cmp
test
add
push
sub
repz
mov
bound
mov
pop
data16
xlat
loop
mov
mov
cwtl
xor
add
ja
shll
cld
fxch
xchg
enter
add
add
addr16
or
add
mov
mov
add
out
cmp
pushf
rcl
mov
add
mov
fnstsw
cmp
ljmp
pop
loop
mov
gs
add
fcompl
cmp
scas
es
cmpsl
mov
jg
in
stc
dec
and
mov
in
cld
xchg
bswap
subl
pop
test
sub
mov
add
xchg
testl
mov
leave
push
add
sar
cmpsb
std
dec
sbb
ret
andl
mov
cmp
lds
mov
add
pop
bound
mov
push
test
cmc
mov
mov
pop
mulb
add
cmpsb
or
outsb
xor
mov
mov
inc
cmp
lods
dec
inc
out
btr
add
sahf
les
iret
mov
loopne
mov
stos
scas
in
mov
sub
add
or
push
add
sub
sub
xchg
mov
xchg
add
mov
add
add
add
int3
ret
dec
scas
mov
mov
xchg
add
call
js
iret
sahf
cmpsl
das
lock
xchg
lock
sbb
mov
je
add
idivb
insb
call
or
lret
mov
mov
into
insb
mov
sbb
lea
add
add
pop
push
jb
mov
xor
push
mov
in
pop
mov
sahf
adc
add
out
mov
fs
enter
fistps
nop
add
mov
inc
sub
movsl
ja
add
in
sub
jl
push
add
js
add
ret
mov
ss
push
and
mov
add
and
dec
jbe
mov
mov
mov
fdivl
push
xchg
adc
enter
lcall
lods
stos
mov
loop
mov
xchg
je
addl
insl
dec
xor
add
or
inc
push
push
ret
inc
add
xor
mov
add
out
fwait
or
enter
sbb
pusha
add
enter
adc
mov
xor
mov
add
and
lcall
inc
jmp
testl
cmp
dec
incl
add
push
sbb
insb
mov
leave
jg
ja
stos
and
mov
pop
scas
mov
add
mov
negl
jae
inc
aas
data16
js
loop
mov
mov
iret
scas
inc
add
fiaddl
pop
movsb
add
add
mov
inc
mov
das
jb
mov
js
add
push
aaa
mov
sbb
mov
mov
pop
pop
jns
stos
adc
in
or
imul
rolb
mov
mov
mov
scas
add
repnz
mov
mov
dec
loope
xor
pop
cmpsb
dec
sbb
loop
mov
sub
mov
vmwrite
mov
add
mov
add
ss
daa
push
add
dec
mov
imul
ss
lret
pop
lahf
add
mov
mov
sldt
mov
jmp
shll
dec
insb
pop
push
fstl
xor
mov
add
add
add
sbb
add
mov
out
xchg
cld
xchg
push
jecxz
out
xchg
add
lcall
add
rol
xor
mov
cltd
cmc
xlat
sti
mov
mov
and
xor
mov
repz
movsb
sub
mov
sti
movsb
inc
xchg
add
stos
push
add
mov
mov
test
out
adc
lcall
movlps
mov
push
stos
mov
sub
mov
mov
dec
sbb
jbe
add
jl
xor
mov
xlat
jns
dec
xchg
mov
sub
mov
pavgw
push
js
jle
jp
sub
adc
mov
mov
push
jbe
add
add
add
test
add
std
divl
mov
xor
mov
shll
mov
or
call
add
add
sub
push
imul
idivb
lcall
leave
push
bound
mov
idivl
das
mov
out
addb
jbe
sbb
add
adc
mov
dec
repz
imul
ss
add
mov
mov
mov
mov
mov
or
outsl
add
lods
aad
mov
jmp
cmc
lods
jecxz
sub
and
mov
aam
pop
aaa
leave
inc
add
add
data16
or
mov
mov
mov
add
movsl
mov
xchg
aad
xchg
add
cmp
mov
add
mov
add
decl
cmp
bound
mov
mov
push
sbb
out
cmp
sub
test
fucom
add
push
add
dec
mov
in
pop
push
popa
gs
mov
mov
xchg
add
sbb
in
lret
dec
and
mov
or
testb
dec
dec
std
cmpsb
frstor
pop
les
jo
mov
and
shll
mov
mov
das
lock
add
sti
mov
mov
scas
test
outsl
dec
addr16
inc
mov
and
sub
dec
mov
out
les
rorl
popa
or
out
jno
scas
pop
dec
aad
cli
test
jl
dec
mov
and
mov
addb
jg
xchg
sbb
je
jmp
data16
mov
out
add
ret
dec
jle
pushl
add
dec
out
add
pop
cmpsl
push
mov
cwtl
push
mov
push
xor
jg
mov
aam
loopne
mov
push
addr16
add
mov
mov
fsubs
es
mov
jno
cs
mov
mov
xor
mov
cltd
out
add
jns
add
jle
jp
add
mov
mov
out
aaa
lea
add
mov
sbb
mov
mov
mov
add
jae
mov
pop
cmp
hlt
test
jmp
cmp
and
enter
fstps
jge
jmp
pop
mov
scas
cmpsl
je
int
cmpl
fnsaves
jns
outsl
dec
out
int
mov
mov
dec
inc
add
xchg
dec
out
in
jno
sbb
sub
jmp
ret
mov
or
add
bswap
pushf
inc
loope
pop
dec
push
xor
sub
or
sbb
sub
test
mov
mov
push
add
test
popf
mov
js
aas
jne
cmp
or
mov
movsl
or
mov
sbb
add
lock
add
test
movsl
unpckhps
cmp
push
jno
mov
addr16
mov
add
ss
or
mov
lret
call
icebp
and
jno
push
loop
mov
pop
or
fsts
pop
xchg
dec
jge
pop
into
in
mov
mov
xor
mov
ja
add
add
mov
es
mov
mov
jno
js
dec
mov
add
mov
adc
mov
add
add
in
mov
add
mov
add
xchg
pop
fwait
popf
pop
imul
call
inc
add
ret
mov
mov
aad
pushf
push
addb
push
add
mov
mov
add
push
stos
repz
imul
mov
pop
fmull
cmpsl
clc
mov
or
mov
add
dec
insl
pop
push
int3
sti
add
iret
cmp
add
mov
testb
inc
add
stc
outsb
or
jp
insl
cld
scas
mov
add
push
xlat
bound
mov
fdivl
nop
add
int
add
cmc
xchg
cld
out
incb
add
fcomps
add
mov
dec
jmp
xchg
push
xor
insb
lfs
aad
pushf
pop
insb
pop
sti
mov
mov
mov
inc
add
sbb
mov
add
add
sbb
add
xlat
xor
mov
push
sbb
cmp
sub
and
test
cmc
call
mov
pop
mov
stos
popa
jae
add
fxch
push
add
add
insl
jl
or
add
inc
add
add
mov
insl
xor
mov
mov
mov
insb
stos
jecxz
rolb
mov
mov
stc
cmc
push
push
pop
xchg
mov
rolb
mov
and
cmp
dec
int
and
mov
hlt
adc
add
addr16
test
fildl
aad
pop
add
mov
jecxz
xor
mov
sub
roll
movsl
ss
fcmovb
rcr
jns
pop
inc
and
mov
mov
add
mov
je
and
mov
mov
push
insb
sub
rcr
ficomps
add
pop
inc
mov
add
addr16
sub
dec
xchg
add
push
clc
rolb
mov
adc
mov
push
mov
popa
test
mov
push
loope
ret
or
call
test
sub
clc
notb
sbb
cmp
iret
cmp
add
cltd
imul
fistpll
pop
sti
leave
mov
push
dec
xor
in
jmp
add
aaa
xchg
adc
push
add
sbb
pusha
add
stos
jmp
ds
mov
rorl
mov
fcoml
add
fwait
and
add
arpl
div
jmp
push
mov
cmp
push
dec
sbb
popa
pop
xchg
add
lock
clc
inc
mov
and
cs
add
lock
add
cld
jo
mov
mov
jp
xchg
xchg
cwtl
jp
and
es
push
sbb
fwait
lea
push
add
or
xchg
add
mov
out
push
out
mov
scas
das
adc
and
pop
out
add
mov
xchg
and
mov
lods
call
rolb
mov
add
mov
fisubrl
mov
add
mov
pop
ss
mov
pusha
add
sbb
mov
xor
test
addb
push
add
pop
test
add
mov
add
add
jecxz
daa
jnp
sbb
dec
mov
add
and
mov
add
xchg
dec
bound
mov
fistps
inc
repnz
inc
add
sbb
push
xor
mov
scas
dec
in
mov
add
adc
mov
mov
cli
dec
xor
push
or
inc
jmp
addb
ljmp
notl
or
sub
enter
dec
lods
jmp
jo
mov
test
push
inc
add
mov
xchg
lahf
jp
dec
cwtl
rorl
add
lds
sub
addr16
mov
cwtl
sub
xor
mov
add
dec
push
add
cltd
or
add
lods
cmp
add
mov
sub
dec
loop
mov
jne
push
lahf
or
icebp
push
jne
mov
mov
ljmp
lea
mov
test
sub
stos
sbb
lahf
and
pop
repnz
sbb
mov
mov
je
and
mov
jg
cwtl
dec
mov
sbb
adc
std
xor
mov
xor
or
cmp
jo
mov
mov
add
mov
add
mov
loope
add
or
add
popa
xchg
loop
mov
add
mov
and
mov
into
addr16
or
push
add
mov
inc
cld
mov
int
sbb
ds
or
sbb
add
sbb
hlt
cmp
mov
je
js
stos
lret
mov
fldl
add
pop
sbb
in
iret
cmc
mov
int
xor
add
pop
roll
insl
pop
call
sarl
lods
mov
add
xchg
add
jne
out
add
push
repz
mov
pop
or
pop
ret
fsubrs
xchg
xor
hlt
mov
mov
inc
mov
pop
popa
lcall
aam
or
lret
mov
out
inc
add
lock
mov
nopl
mov
test
jge
add
fnsave
jno
mov
lret
pop
dec
mov
add
daa
daa
push
test
inc
add
dec
jno
push
mov
cmp
int3
ljmp
in
movsb
lds
add
mov
repnz
scas
or
add
add
stos
push
cmpsw
mov
mov
gs
xchg
inc
sbb
add
icebp
add
clc
or
addb
loop
mov
enter
mov
cmpl
sub
inc
test
adc
add
pop
fwait
mov
stos
lea
xor
clc
repz
cmp
add
lahf
mov
add
add
aas
xorl
xchg
push
add
aam
outsb
cli
lcall
mov
or
mov
add
js
jbe
fsts
movsl
movsb
and
icebp
sub
in
jmp
mov
and
add
add
jge
fadd
mov
sbb
add
jb
mov
addb
pop
jmp
sub
mov
add
mov
mov
stos
in
aas
jo
mov
pop
fidivs
mov
rorl
xchg
add
dec
push
mov
and
mov
rolb
mov
pop
jge
pusha
add
pop
testb
pushf
push
jno
mov
int
xchg
jns
fcoml
add
pop
nop
add
or
mov
notl
les
test
enter
jg
jbe
jns
data16
lahf
cmp
add
jecxz
lea
mov
and
mov
add
pushf
pop
mov
or
loopne
mov
and
add
or
fsubrl
out
jne
jmp
mov
mov
add
out
loop
mov
mov
lock
scas
add
xor
add
into
mov
hlt
push
aad
adc
iret
or
dec
mov
out
xchg
xor
mov
mov
dec
int3
dec
jp
out
xchg
mov
sti
in
stos
shll
add
outsb
or
or
xchg
repnz
sbb
jbe
jmp
icebp
mov
mov
outsb
or
dec
fadds
mov
out
std
insl
adc
xchg
ljmp
mov
movsl
stc
data16
mov
stc
cmp
std
mov
into
jge
mov
cltd
fcmovnu
sub
sub
adc
call
imull
rolb
mov
cld
push
dec
fsubrl
test
fnstcw
mov
mov
inc
int3
cmp
pop
lret
xchg
add
mov
add
out
xor
rolb
insl
xchg
add
mov
les
add
mov
leave
push
pop
inc
fnstenv
xchg
add
mov
pop
daa
aam
jno
add
push
jle
add
mov
imul
cli
pushf
add
dec
outsb
test
cwtl
stos
adc
fisubrs
sbb
mov
mov
cs
cmp
cmp
mov
mov
das
mov
add
lock
inc
add
mov
dec
add
ror
lock
pushf
lds
dec
loope
sbb
xor
add
out
push
add
sbb
fsts
add
mov
fimull
xor
cmp
jmp
movb
popa
mov
add
mov
mov
dec
jle
add
arpl
lcall
mov
mov
mov
out
cmpsl
push
dec
in
adc
roll
xchg
jmp
or
cmp
outsb
jge
add
jo
mov
add
add
cmpsl
mov
xchg
add
add
leave
xor
mov
add
add
xchg
mov
leave
jnp
insl
add
mov
lahf
enter
addl
push
mov
mov
mov
jg
add
in
dec
push
pop
mov
mov
jno
adc
mov
ljmp
mov
add
xchg
push
jge
je
out
out
ljmp
xchg
in
add
adc
outsl
or
sti
mov
test
sub
inc
add
add
leave
cmp
push
xchg
sbb
add
popf
adc
mov
sub
std
ss
ljmp
or
cs
aas
xchg
add
adc
push
xchg
addb
mov
mov
mov
or
cli
fidivs
cmc
xchg
int
daa
mov
xor
mov
enter
mov
add
jg
cltd
scas
add
mov
adc
mov
add
decl
negb
add
add
xor
mov
pop
mov
rorl
or
int3
mov
stos
jnp
jmp
or
xchg
add
jne
lret
js
cmp
test
cmp
call
mov
add
mov
mov
cmp
scas
jle
jle
jge
test
push
data16
fistpll
icebp
pushf
out
fisubs
pop
inc
add
pusha
add
jae
cmc
add
ljmp
pop
rolb
jno
pop
cwtl
add
out
adc
cmp
add
aam
and
pop
fsts
rcll
mov
add
arpl
mov
cmp
or
ljmp
lret
push
add
mov
mov
std
or
lea
cmp
push
inc
jle
add
xchg
push
and
mov
mov
repnz
cld
cwtl
jb
mov
mov
xchg
mov
test
mov
mov
and
pop
repz
pop
aaa
jecxz
add
ret
xchg
shl
push
pop
xchg
bound
mov
add
inc
aam
mov
shll
sbb
mov
cld
outsb
mov
pop
lock
dec
xchg
out
xchg
in
xor
mov
mov
jl
xchg
fnstcw
gs
insl
and
arpl
bound
mov
mov
dec
mov
ds
add
mov
mov
add
mov
rolb
mov
les
mov
push
or
cmpsb
jmp
sub
add
mov
add
mov
addb
in
into
je
or
jb
mov
mov
out
inc
add
lret
pop
jb
mov
out
and
add
adc
cmp
add
xor
mov
mov
int3
inc
add
add
push
lcall
mov
sub
add
add
rolb
out
enter
sub
add
sbb
mov
mov
push
ds
inc
xor
mov
or
add
add
push
popa
in
mov
int
mov
add
add
mov
cmp
mov
js
decb
jmp
mov
jge
sti
dec
lcall
push
in
and
mov
push
inc
add
ljmp
std
rolb
mov
mov
or
mov
add
imul
cmp
add
insb
adc
mov
jno
popf
fs
in
sub
mov
dec
lahf
repnz
and
add
mov
loopne
mov
in
outsb
js
lret
ficoms
inc
test
mov
cmp
cmp
out
xor
mov
mov
gs
js
xchg
add
xor
rolb
mov
and
jecxz
pop
lock
mov
out
popa
jmp
mov
add
mov
mov
fldl
out
sub
xor
add
bound
mov
dec
xchg
outsl
xor
pop
adc
mov
push
in
mov
call
lods
int
mov
loopne
mov
push
add
sub
sahf
rolb
xchg
popa
cmp
add
sbb
lret
pop
fistpl
or
sbb
jb
mov
xchg
push
sub
insb
addr16
add
add
ret
clc
add
mov
fdivl
insb
sbb
movl
addb
test
mov
aas
push
jg
hlt
mov
mov
pop
leave
mov
or
inc
xchg
clc
inc
add
loope
lcall
or
push
repz
test
loope
sub
add
mov
push
add
mov
dec
les
bswap
xlat
and
mov
into
dec
xor
mov
pushf
jne
outsl
add
sahf
sub
cmpsl
or
mov
repz
add
mov
jbe
mov
sub
sub
sub
jecxz
add
mov
adc
lds
gs
aam
inc
pop
sbb
jnp
lret
xchg
roll
arpl
fbld
repnz
add
sti
lcall
adc
dec
add
mov
or
add
push
enter
fimuls
sub
mov
jno
loopne
mov
mov
push
add
insb
int3
in
std
mov
mov
mov
or
add
inc
xor
iret
xchg
dec
and
mov
mov
or
mov
cwtl
inc
pop
dec
cmp
bound
mov
mov
jb
mov
pop
es
enter
add
test
sti
shrl
mov
add
sub
lea
add
dec
insb
movsl
mov
xchg
lock
add
jecxz
xor
lock
xchg
pop
cs
fdivrl
mov
mov
mov
imul
mov
mov
mov
idivb
ss
or
cmp
vpandn
xor
in
ret
xor
push
pop
or
mov
cmp
sbb
lock
push
mov
ficoms
pusha
add
add
add
mov
into
js
dec
or
cld
push
inc
jl
jge
inc
pop
xor
and
mov
bswap
mov
fwait
jbe
or
add
adc
cmp
push
das
int
sahf
mov
popf
idivb
fstpl
rolb
in
mov
mov
mov
gs
push
fs
pop
adc
mov
call
out
inc
and
mov
inc
cmp
repz
hlt
dec
push
movsl
inc
int3
ret
outsl
xchg
cld
icebp
adc
mov
pop
dec
push
icebp
push
movsl
dec
ds
out
dec
dec
mov
lret
jecxz
pop
and
mov
push
xchg
add
pop
cs
mov
cmp
test
push
add
mov
mov
cmpl
add
mov
int
mov
mov
in
mov
add
ljmp
xlat
jmp
jne
movsb
mov
push
push
add
add
cmpsl
clc
fistps
add
and
mov
add
frstor
mov
mov
cmc
rorl
js
push
sbb
rolb
test
add
inc
jp
or
add
test
repnz
mov
mov
mov
cmpsl
xor
aam
ret
cmp
imul
loopne
mov
cmp
or
jnp
gs
adc
and
mov
add
push
clc
adc
mov
lcall
cmpsl
testb
and
push
test
and
xchg
add
rolb
lods
test
mov
leave
outsl
mov
push
or
push
std
jbe
adc
add
mov
sbb
inc
cs
popa
inc
ljmp
mov
add
repz
call
mov
push
and
mov
ret
cli
not
add
arpl
mov
fcmovb
jo
mov
add
mov
add
ret
aas
sbb
pop
jns
arpl
test
xchg
movsl
add
fldcw
call
in
sbb
xchg
mov
xor
cmpsl
insb
imul
loop
mov
icebp
pop
mov
addb
and
mov
or
mov
cwtl
lahf
jp
add
cmp
mov
lcall
frndint
or
rolb
mov
add
jns
test
into
fs
fcoml
mov
add
add
inc
test
pop
and
mov
add
pushf
ljmp
or
mov
loope
add
add
mov
ret
push
cld
and
mov
mov
cmc
push
add
pop
loope
hlt
cwtl
rolb
mov
xor
add
jb
mov
or
movsb
mov
mov
add
mov
fdivr
cmp
sub
popa
xchg
add
jo
mov
imul
sar
pop
dec
mov
adc
clc
or
fadds
add
dec
lahf
mov
clc
xor
xor
mov
mov
add
mov
jno
fidivs
inc
add
repnz
jae
or
dec
add
cld
nop
jmp
add
add
cltd
add
push
jmp
test
sub
add
repnz
jae
add
test
mov
lock
push
mov
xchg
ret
lock
add
out
add
clc
repnz
jae
add
fdivp
sahf
mov
repnz
jae
add
add
add
add
add
push
mov
xchg
ret
cmp
inc
add
add
clc
repnz
jae
out
add
pusha
add
add
fwait
cld
nop
jmp
add
insb
add
jle
mov
add
add
add
add
fisubl
sub
add
repnz
jae
add
add
inc
add
loope
inc
add
outsb
add
add
push
jae
icebp
add
add
add
ret
sub
jne
clc
repnz
jae
lea
add
cltd
add
add
lock
add
inc
add
add
pop
test
test
cld
nop
jmp
add
ret
clc
repnz
jae
dec
inc
add
pop
add
xchg
xchg
add
test
fwait
cld
nop
jmp
add
add
pop
pop
push
scas
and
clc
repnz
jae
lret
out
lcall
repnz
jae
repz
repz
xor
cld
nop
jmp
dec
add
add
insb
mov
push
mov
xchg
ret
loopne
add
add
dec
add
xchg
loop
mov
repnz
pop
jae
cld
nop
jmp
add
add
add
add
mov
add
adc
clc
repnz
jae
add
add
add
xchg
push
add
clc
repnz
jae
int
icebp
or
add
adc
cmp
ret
add
add
pop
or
jne
clc
repnz
jae
outsb
add
mov
dec
rorl
jmp
lock
pop
add
sahf
or
sub
push
clc
repnz
jae
das
inc
add
lret
push
imul
xorl
add
mov
ds
push
mov
xchg
ret
mov
ss
mov
push
clc
repnz
jae
add
add
mov
push
mov
xchg
ret
add
add
loop
mov
or
repnz
jae
ficomps
sarl
push
mov
xchg
ret
jnp
mov
xor
push
mov
xchg
ret
add
lock
xor
mov
fwait
cld
nop
jmp
add
add
add
mov
sbb
repnz
jae
imul
dec
add
sbb
jae
add
cmp
add
lock
add
repnz
jae
add
out
add
add
add
clc
repnz
jae
dec
add
fidivl
push
fwait
cld
nop
jmp
fimuls
out
add
add
mov
clc
repnz
jae
add
lock
add
add
sub
fwait
cld
nop
jmp
dec
outsb
cmp
fsubr
and
add
clc
repnz
jae
pop
mov
add
sti
roll
xchg
ret
add
add
cmp
add
lcall
ret
add
add
int
fiaddl
je
clc
repnz
jae
pop
add
adc
mov
dec
cmp
repnz
jae
pop
int3
add
int3
add
ss
clc
mov
clc
repnz
jae
add
add
loop
clc
repnz
jae
add
cmp
add
sbb
mov
xchg
ret
add
add
sub
sub
add
fwait
cld
nop
jmp
adc
insb
add
mov
push
mov
xchg
ret
sbb
add
add
sbb
nop
jae
loopne
or
add
nop
jmp
pop
add
loop
add
dec
jnp
add
mov
jae
add
outsl
loopne
fs
xlat
mov
jae
add
push
insb
mov
add
fwait
cld
nop
jmp
test
add
dec
push
clc
repnz
jae
add
lock
mov
stos
push
mov
xchg
ret
mov
add
mov
jbe
xrelease
push
push
mov
xchg
ret
shlb
cwtl
sub
clc
repnz
jae
dec
dec
insb
out
add
outsb
cmp
push
mov
xchg
ret
rolb
cmp
fwait
mov
clc
repnz
jae
outsl
mov
insb
cmp
clc
repnz
jae
add
mov
jae
dec
add
jge
add
outsb
push
decl
nop
jae
lret
dec
fisubrs
in
fiadds
xchg
ret
add
add
add
out
clc
clc
repnz
jae
add
pop
add
mov
clc
repnz
jae
add
sahf
loopne
push
fwait
cld
nop
jmp
add
add
add
into
test
jae
insb
add
sbb
repnz
jae
dec
das
pop
add
outsb
cmp
mov
xchg
ret
add
dec
dec
repz
inc
xchg
into
mov
clc
repnz
jae
out
add
and
jae
add
add
in
and
push
mov
xchg
ret
add
int
add
xor
clc
repnz
jae
add
cltd
add
fisubl
mov
clc
repnz
jae
add
add
add
adc
mov
xchg
ret
cmp
mov
mov
or
nop
jae
add
fimull
sub
adc
repnz
jae
add
add
cwtl
movzwl
push
mov
xchg
ret
add
add
add
repnz
jae
lret
pop
adc
int3
and
clc
repnz
jae
add
mov
sub
repnz
jae
or
dec
add
mov
clc
repnz
jae
add
loopne
aam
es
clc
repnz
jae
add
repnz
jae
sub
add
fwait
cld
nop
jmp
in
add
outsb
adc
push
clc
repnz
jae
push
dec
sahf
add
adc
and
xor
clc
repnz
jae
mov
lock
outsb
push
jg
clc
repnz
jae
add
mov
sbb
fcmovnbe
inc
add
pop
pusha
fs
call
clc
repnz
jae
jge
insb
mov
mov
clc
repnz
jae
add
out
mov
clc
repnz
jae
add
maxps
pop
add
repz
jnp
int
add
lds
mov
xchg
ret
add
out
add
add
push
mov
xchg
ret
pop
add
add
int
push
sbb
rcrb
add
mov
or
add
add
inc
cmpsl
es
mov
clc
repnz
jae
add
add
clc
repnz
jae
popa
add
add
rolb
adc
mov
fwait
cld
nop
jmp
pop
dec
push
add
dec
add
lods
and
imul
nop
jae
adc
lea
shl
mov
push
mov
xchg
ret
pop
or
dec
add
pop
jmp
mov
xchg
ret
outsb
add
fs
dec
add
jnp
push
mov
xchg
ret
add
add
pusha
popa
jge
je
fwait
cld
nop
jmp
das
add
in
adc
out
movzwl
clc
repnz
jae
or
add
add
clc
repnz
jae
add
loopne
mov
pop
mov
clc
repnz
jae
int
fimuls
or
imulb
add
add
add
mov
dec
push
lcall
jae
add
repz
add
lods
decl
fwait
cld
nop
jmp
pop
add
add
or
dec
xor
clc
repnz
jae
mov
dec
xchg
aam
push
mov
add
arpl
add
add
add
add
bound
mov
jl
jo
fwait
cld
nop
jmp
dec
add
int
add
sub
mov
add
jns
or
dec
adc
repnz
jae
sahf
pop
add
mov
clc
repnz
jae
fimuls
add
push
mov
xchg
ret
add
add
sar
repnz
jae
pop
cmp
pop
nop
add
repnz
jae
mov
add
or
repnz
jae
dec
fiadds
outsl
add
add
push
mov
xchg
ret
add
add
rolb
mov
pop
clc
repnz
jae
int
add
add
loop
or
add
ljmp
and
clc
repnz
jae
add
add
mov
add
clc
repnz
jae
pop
or
js
icebp
adc
add
add
add
add
mov
push
push
mov
xchg
ret
add
dec
mov
jge
and
fwait
cld
nop
jmp
dec
sbb
add
insb
or
call
clc
repnz
jae
add
fiaddl
test
clc
repnz
jae
outsl
dec
add
mov
push
clc
repnz
jae
outsl
cmp
add
adc
mov
clc
repnz
jae
add
or
mov
xchg
ret
pop
outsb
dec
add
sub
enter
xchg
ret
into
add
mov
adc
pusha
aam
add
add
das
add
mov
push
mov
xchg
ret
int3
mov
xchg
ja
push
clc
repnz
jae
cltd
add
sbb
xchg
mov
clc
repnz
jae
sub
add
lea
test
adc
add
incl
adc
mov
or
add
clc
repnz
jae
out
lea
xor
push
clc
repnz
jae
add
add
cltd
lcall
nop
jae
or
or
adc
int
add
or
add
repnz
jae
loopne
add
add
incl
fwait
cld
nop
jmp
add
add
add
xchg
push
add
add
repnz
jae
popa
sub
mov
xchg
ret
outsb
add
add
dec
add
add
repnz
jae
add
mov
add
clc
repnz
jae
cmp
jnp
je
clc
repnz
jae
int3
sbb
pop
pop
fwait
cld
nop
jmp
add
mov
lea
and
sub
clc
repnz
jae
mov
add
jge
repz
ja
inc
add
into
pop
fidivrl
add
and
add
push
mov
xchg
ret
add
popa
add
negb
in
add
add
fwait
cld
nop
jmp
add
sbb
mov
lea
clc
repnz
jae
add
into
add
rcrl
push
mov
add
adc
push
lcall
mov
mov
sub
clc
repnz
jae
add
pop
mov
sar
repnz
jae
add
lret
add
clc
repnz
jae
add
popa
fiaddl
outsb
add
jae
add
clc
repnz
jae
outsb
adc
add
add
add
fwait
cld
nop
jmp
int3
cmp
inc
mov
rcrb
sti
incl
das
add
jge
or
lods
pusha
clc
repnz
jae
add
loopne
add
das
jmp
adc
repnz
jae
mov
add
movsb
push
mov
xchg
ret
fcmove
add
je
fwait
cld
nop
jmp
fiaddl
mov
mov
clc
repnz
jae
or
lret
xchg
xor
clc
repnz
jae
inc
sbb
mov
pop
push
clc
repnz
jae
add
mov
sar
repnz
jae
add
dec
add
add
cmpl
adc
add
add
add
adc
inc
jmp
add
add
add
mov
push
fwait
cld
nop
jmp
add
add
add
stc
mov
clc
repnz
jae
inc
add
add
add
mov
push
mov
xchg
ret
add
dec
add
call
jmp
add
inc
lock
add
cmp
mov
imul
and
loop
add
mov
xchg
ret
loop
add
mov
inc
or
repnz
jae
lret
cmp
add
mov
sar
nop
jae
sahf
popa
add
add
add
add
cmp
add
fwait
cld
nop
jmp
mov
les
repnz
jae
add
add
dec
add
dec
clc
repnz
jae
cmp
add
add
pop
test
add
add
repnz
jae
add
sbb
aam
subl
push
mov
xchg
ret
add
add
push
mov
add
clc
repnz
jae
add
sarb
adc
or
add
into
mov
outsl
loopne
mov
xchg
ret
out
dec
pop
add
data16
add
clc
repnz
jae
pusha
add
inc
add
fwait
cld
nop
jmp
in
add
add
add
sbb
push
imul
lock
pop
in
pop
int
mov
clc
repnz
jae
int
imul
jae
pop
add
cltd
insb
loopne
mov
fiadds
xchg
ret
add
add
insl
mov
clc
repnz
jae
pop
pop
add
lcall
add
add
add
sahf
pop
pop
clc
repnz
jae
insb
int
add
rep
clc
repnz
jae
rclb
add
lea
push
fwait
cld
nop
jmp
add
add
add
imul
ret
das
add
dec
fisubl
lock
pop
ficoml
repnz
jae
into
fiaddl
add
add
add
clc
repnz
jae
add
repz
push
stos
clc
repnz
jae
pop
dec
add
sar
inc
and
clc
repnz
jae
add
add
icebp
mov
jae
push
fiaddl
add
icebp
outsl
jmp
sbb
cmp
ret
add
add
pop
inc
sub
in
add
das
fiadds
imul
call
clc
repnz
jae
add
add
es
clc
repnz
jae
lcall
mov
clc
repnz
jae
mov
dec
add
dec
lods
pushl
clc
repnz
jae
mov
inc
imul
xor
add
clc
repnz
jae
add
ficoml
rclb
inc
add
fimull
insb
add
mov
fwait
cld
nop
jmp
adc
add
lock
cmp
sar
nop
jae
dec
mov
pop
or
and
add
add
add
lcall
mov
jne
clc
repnz
jae
jge
lock
pop
push
mov
jg
add
add
inc
add
add
scas
ja
push
mov
aaa
add
mov
mov
cmc
mov
mov
xchg
ret
adc
add
rolb
bound
mov
adc
mov
jmp
add
fwait
cld
nop
jmp
cltd
add
add
pop
clc
repnz
jae
add
add
sub
popa
or
mov
mov
in
lock
add
add
repnz
jae
add
loop
add
repnz
jae
add
popa
inc
mov
push
add
repnz
jae
pusha
add
fiadds
xlat
dec
lea
clc
repnz
jae
dec
lea
add
sub
add
repnz
jae
cmp
add
dec
ss
fwait
cld
nop
jmp
lock
dec
push
push
mov
xchg
ret
out
popa
add
add
clc
repnz
jae
sahf
add
inc
fisubrs
and
clc
repnz
jae
add
add
xor
mov
xchg
ret
add
add
and
mov
cmp
fwait
cld
nop
jmp
add
add
imul
cld
nop
jmp
int3
add
loop
dec
mov
sbb
fwait
cld
nop
jmp
fisubl
dec
int
push
pop
add
mov
nop
jae
dec
add
imul
add
xlat
leave
xor
push
mov
xchg
ret
add
sub
and
push
mov
xchg
ret
cmp
add
lea
and
mov
xchg
ret
add
jge
adc
out
add
mov
clc
repnz
jae
add
add
clc
repnz
jae
pop
rcrb
outsb
inc
add
clc
repnz
jae
lret
inc
rolb
xor
test
mov
xchg
ret
add
imul
clc
repnz
jae
dec
pop
loopne
cmp
adc
repnz
jae
add
and
add
add
cld
nop
jmp
dec
add
repz
add
lea
repnz
jae
add
lock
add
repnz
jae
add
sbb
ficoms
mov
fwait
cld
nop
jmp
popa
add
jo
mov
jmp
add
mov
add
add
ret
cmc
loope
pop
mov
clc
repnz
jae
add
dec
add
add
mov
clc
repnz
jae
add
int
add
mov
xchg
ret
gs
adc
in
sub
fwait
cld
nop
jmp
add
imul
push
mov
idivb
push
cmc
jle
test
jnp
add
xchg
add
add
add
clc
repnz
jae
in
dec
gs
adc
mov
lea
clc
repnz
jae
inc
inc
insb
lcall
clc
repnz
jae
out
dec
add
outsl
test
jae
outsb
add
add
mov
sbb
nop
jmp
lock
popa
into
add
clc
repnz
jae
lcall
mov
clc
repnz
jae
fisubrs
loop
or
push
fwait
cld
nop
jmp
in
add
add
mov
mov
nop
jmp
add
add
add
test
add
clc
repnz
jae
insb
int3
add
add
add
clc
repnz
jae
add
add
mov
jne
fwait
cld
nop
jmp
add
in
in
pop
and
js
add
add
add
nop
cltd
call
clc
repnz
jae
outsb
mov
lret
add
fwait
cld
nop
jmp
add
int
pusha
loopne
xchg
fwait
cld
nop
jmp
repz
add
add
add
add
mov
fwait
cld
nop
jmp
add
lcall
test
or
add
repnz
jae
add
ficoml
clc
repnz
jae
add
add
hlt
test
cld
nop
jmp
fiadds
pop
into
add
jge
mov
sub
test
add
in
cmp
repnz
jae
outsb
add
mov
imul
clc
repnz
jae
add
outsl
push
add
mov
xchg
ret
repz
das
adc
mov
jne
push
mov
xchg
ret
jnp
mov
jle
clc
repnz
jae
pop
add
fiadds
add
nop
jae
dec
icebp
add
add
inc
jnp
or
clc
repnz
jae
add
pop
pop
inc
into
push
cli
pop
fwait
cld
nop
jmp
cmp
add
add
rep
clc
repnz
jae
add
add
add
add
add
repnz
jae
popa
sarb
jne
clc
repnz
jae
outsb
add
repz
lods
clc
repnz
jae
and
mov
or
fwait
cld
nop
jmp
out
add
cmpsl
movsb
mov
aas
push
push
mov
xchg
ret
loopne
add
pusha
add
pop
imul
xor
push
mov
xchg
ret
adc
icebp
add
jl
xor
repnz
jae
add
pop
sub
add
clc
repnz
jae
add
xor
clc
repnz
jae
add
add
lret
adc
add
repnz
jae
add
add
push
fwait
cld
nop
jmp
add
add
add
lcall
nop
jae
repz
jg
cli
stc
incl
mov
int3
gs
or
repnz
jae
add
pop
add
int
int
fwait
cld
nop
jmp
add
fs
imul
dec
loopne
push
push
mov
xchg
ret
into
loop
or
add
add
clc
repnz
jae
add
in
mov
xchg
ret
mov
arpl
add
cmpl
fwait
cld
nop
jmp
add
add
sbb
in
add
clc
repnz
jae
dec
inc
add
lret
fimull
nop
jae
out
add
add
pusha
ds
fwait
cld
nop
jmp
mov
add
sahf
mov
lea
push
mov
xchg
ret
fiaddl
add
mov
aam
inc
add
add
test
pop
pop
mov
clc
repnz
jae
add
add
xor
mov
jae
add
add
sub
xchg
fldl
xchg
ret
out
add
pop
jnp
nop
jae
add
loop
hlt
mov
aad
push
push
mov
xchg
ret
dec
adc
cmp
cwtl
pop
push
mov
xchg
ret
out
add
add
pop
lock
repnz
jae
dec
add
add
jns
clc
repnz
jae
fidivrl
add
push
clc
repnz
jae
add
add
and
xor
clc
repnz
jae
imul
mov
clc
repnz
jae
add
add
lock
xchg
imul
nop
jmp
add
test
jae
rolb
outsb
add
loop
cwtl
push
mov
xor
add
xor
ret
mov
add
add
leave
mov
clc
repnz
jae
test
sub
repnz
jae
add
push
add
or
add
out
inc
add
lock
or
or
mov
clc
repnz
jae
lock
jge
dec
dec
add
dec
dec
fwait
cld
nop
jmp
in
add
rorb
add
add
clc
repnz
jae
insb
mov
cltd
push
sub
rolb
xchg
ret
add
add
add
add
mov
clc
repnz
jae
mov
out
push
add
loop
add
add
lea
add
push
clc
repnz
jae
imul
lock
add
test
nop
jae
sbb
sub
clc
repnz
jae
icebp
add
pusha
shrb
call
clc
repnz
jae
add
loop
js
clc
repnz
jae
pop
add
inc
pop
es
add
repnz
jae
fs
add
loopne
add
nop
jae
add
add
inc
dec
add
dec
add
fwait
cld
nop
jmp
popa
add
dec
fimuls
mov
push
mov
xchg
ret
add
popa
pop
add
int3
jne
clc
repnz
jae
lret
rolb
xlat
out
out
mov
clc
repnz
jae
lret
add
lods
cld
clc
repnz
jae
add
add
add
add
add
clc
repnz
jae
add
int
add
inc
imul
cmp
ret
imul
into
add
add
clc
repnz
jae
add
sbb
add
hlt
pop
ror
push
mov
xchg
ret
lock
icebp
pusha
sub
clc
repnz
jae
add
pusha
lock
add
ret
clc
repnz
jae
fiaddl
add
add
mov
or
clc
repnz
jae
add
sub
nop
jae
inc
add
add
popa
sbb
nop
jmp
add
add
add
je
clc
repnz
jae
mov
loop
mov
xchg
ret
add
fisubrl
outsb
dec
es
movswl
clc
repnz
jae
add
outsl
add
adc
mov
mov
xchg
ret
add
mov
fwait
cld
nop
jmp
add
insb
add
outsl
int3
add
clc
repnz
jae
mov
add
dec
popa
add
jnp
push
loopne
cmp
add
mov
out
adc
pop
add
push
mov
xchg
ret
add
adc
outsb
adc
mov
mov
repnz
jae
add
add
into
add
push
fwait
cld
nop
jmp
repz
dec
repz
sahf
hlt
mov
clc
repnz
jae
cmp
imul
mov
clc
repnz
jae
dec
add
add
push
add
mov
xchg
ret
push
insb
dec
add
add
add
push
clc
repnz
jae
dec
inc
add
fisubs
repnz
jae
popa
mov
cltd
jnp
lcall
loope
add
or
add
call
repnz
jae
pop
add
add
sbb
or
inc
add
dec
outsl
cltd
add
mov
push
mov
xchg
ret
dec
lret
add
mov
clc
repnz
jae
popa
add
out
decl
int3
inc
add
dec
sbb
add
in
mov
fwait
cld
nop
jmp
add
shl
add
add
nop
jae
add
pop
add
mov
clc
repnz
jae
add
jge
add
fisubs
clc
repnz
jae
sbb
jnp
int
out
mov
clc
repnz
jae
pop
add
imul
orl
add
mov
mov
push
mov
xchg
ret
fiaddl
imul
push
stos
mov
clc
repnz
jae
inc
add
add
add
lock
incl
add
pop
lds
imul
fwait
cld
nop
jmp
into
add
test
sub
adc
repnz
jae
add
add
add
loopne
mov
mov
cmc
rolb
insb
call
clc
repnz
jae
icebp
add
add
pusha
add
cld
nop
jmp
add
mov
add
add
jno
xchg
add
add
repnz
jae
push
sbb
pop
push
push
mov
xchg
ret
out
add
add
mov
jae
mov
test
add
nop
jae
insb
cmp
dec
add
dec
pusha
push
mov
xchg
ret
add
ror
loopne
cmp
cld
or
add
repnz
jae
pop
cmp
mov
pop
push
mov
xchg
ret
dec
add
into
add
pop
iret
add
fwait
cld
nop
jmp
add
add
mov
test
clc
repnz
jae
add
or
push
push
mov
xchg
ret
pop
into
cmp
add
push
mov
xchg
ret
add
inc
adc
fistl
in
fstl
add
insl
sbb
incl
into
adc
rorl
clc
repnz
jae
inc
add
jge
add
mov
xor
clc
repnz
jae
loopne
outsl
add
push
mov
xchg
ret
add
lock
clc
repnz
jae
outsb
loop
das
add
add
testb
cmp
ret
add
add
dec
lea
pop
fwait
cld
nop
jmp
add
repz
add
add
sub
clc
repnz
jae
add
lock
add
dec
and
mov
clc
repnz
jae
add
or
pop
in
mov
clc
repnz
jae
add
dec
add
fimull
call
clc
repnz
jae
dec
add
add
jae
das
add
into
add
int3
add
dec
mov
clc
repnz
jae
add
outsb
lea
add
dec
stos
jle
or
add
add
iret
cmpl
fwait
cld
nop
jmp
repz
add
push
or
dec
in
inc
add
sbb
icebp
pop
inc
add
dec
add
cltd
testb
cmp
ret
test
lea
pusha
ret
movsl
xor
mov
push
clc
repnz
jae
add
add
mov
test
add
push
mov
xchg
ret
add
sbb
cli
push
push
mov
xchg
ret
pop
int
loop
add
add
mov
xchg
ret
sub
cmp
nop
jae
into
add
lea
popa
pusha
jnp
sbb
dec
int
repnz
jae
add
mov
clc
repnz
jae
add
add
cmp
fwait
cld
nop
jmp
jge
mov
push
sub
out
fiadds
add
pusha
add
mov
cld
nop
jmp
cltd
dec
pop
outsb
add
jb
jae
fwait
cld
nop
jmp
sub
push
add
add
fwait
cld
nop
jmp
add
add
cmpsl
addb
push
inc
cld
mov
push
mov
xchg
ret
cmp
pop
add
clc
repnz
jae
outsb
add
add
hlt
or
cli
inc
add
add
fsubp
add
jmp
repnz
jae
sbb
cmp
pusha
clc
repnz
jae
add
add
add
add
jae
fiaddl
popa
add
shrb
scas
pusha
push
mov
xchg
ret
pop
lock
or
or
or
add
imul
inc
add
or
outsb
je
repnz
jae
add
enter
jae
int
fimull
add
add
mov
add
repnz
jae
mov
inc
add
or
stc
clc
repnz
jae
add
dec
add
dec
repz
shr
fwait
cld
nop
jmp
popa
outsb
cmp
add
idiv
mov
push
mov
xchg
ret
repz
repz
das
mov
push
mov
xchg
ret
out
or
add
add
add
add
clc
repnz
jae
add
push
clc
repnz
jae
dec
jge
cltd
loopne
fimull
mov
xchg
ret
add
lock
add
add
clc
repnz
jae
dec
test
add
repz
add
clc
repnz
jae
outsb
add
outsb
lcall
repnz
jae
add
add
add
pop
push
clc
repnz
jae
outsl
lcall
aam
add
push
mov
xchg
ret
jnp
insb
add
mov
clc
repnz
jae
mov
test
das
add
clc
repnz
jae
add
pop
add
xchg
mov
clc
repnz
jae
dec
out
rcrl
nop
jmp
inc
icebp
insb
add
add
push
mov
xchg
ret
pop
out
add
mov
repnz
jae
add
cltd
add
imul
clc
repnz
jae
add
cmp
nop
jae
add
add
add
inc
ljmp
repnz
jae
add
add
adc
pop
lea
fwait
cld
nop
jmp
add
sbb
adc
mov
test
jae
dec
cmp
add
add
loop
mov
clc
repnz
jae
add
lret
dec
push
push
mov
xchg
ret
loopne
lock
fiaddl
lret
movzwl
fwait
cld
nop
jmp
dec
add
add
cld
nop
jmp
add
cltd
add
add
add
mov
xchg
ret
mov
lcall
clc
repnz
jae
das
mov
add
mov
clc
repnz
jae
outsb
add
into
add
mov
add
push
mov
xlat
add
add
add
add
cmpsb
xor
fidivs
xchg
or
jb,pt
fwait
cld
nop
jmp
add
imul
shl
fwait
cld
nop
jmp
add
add
add
jg
pop
lcall
lock
incl
out
insb
mov
rcrb
incl
add
in
int
aam
pusha
clc
repnz
jae
fmulp
mov
add
ljmp
cmc
mov
add
cltd
rep
clc
repnz
jae
add
add
add
xor
clc
repnz
jae
push
pop
outsb
add
dec
out
mov
clc
repnz
jae
in
cltd
inc
out
add
push
in
mov
clc
repnz
jae
jnp
lock
add
jmp
mov
xchg
ret
add
sbb
add
add
push
mov
xchg
ret
insb
cmp
add
cmp
incl
add
lock
add
add
fwait
cld
nop
jmp
repz
add
shlb
cmp
fwait
cld
nop
jmp
into
dec
add
lahf
mov
clc
repnz
jae
int3
imul
cmpw
fwait
cld
nop
jmp
add
inc
add
sub
push
mov
xchg
ret
dec
add
add
add
clc
repnz
jae
push
imul
mov
loop
sub
clc
repnz
jae
pop
mov
mov
push
clc
repnz
jae
add
add
lods
movzwl
jmp
incl
add
add
add
mov
push
jmp
pushl
sahf
sub
add
fwait
cld
nop
jmp
loop
sahf
add
and
clc
repnz
jae
add
mov
mov
push
mov
xchg
ret
add
sbb
pop
addb
fstl
mov
xchg
ret
add
add
pop
lcall
mov
inc
add
loop
add
dec
pusha
push
ja
shl
clc
repnz
jae
add
out
add
lock
push
push
mov
xchg
ret
add
adc
dec
insb
add
js
repnz
jae
cmp
cmp
jae
test
push
mov
xchg
ret
add
fisubl
dec
scas
push
push
mov
xchg
ret
dec
mov
sbb
and
mov
loop
fwait
cld
nop
jmp
add
add
ficompl
jae
gs
lret
test
fisubl
std
je
clc
repnz
jae
mov
test
add
add
repnz
jae
inc
add
js
mov
dec
in
dec
add
add
lahf
mov
cmp
mov
xchg
ret
cltd
add
add
test
cmc
clc
repnz
jae
lock
clc
repnz
jae
mov
add
inc
mov
mov
add
clc
repnz
jae
sub
add
bound
mov
or
clc
repnz
jae
mov
insb
add
add
movsl
rolb
xchg
ret
add
loop
add
fiaddl
sub
jae
add
ficomps
imul
clc
repnz
jae
dec
add
lods
pop
clc
repnz
jae
or
add
lea
add
out
incl
add
add
das
add
push
lea
push
clc
repnz
jae
popa
add
mov
loop
int3
pop
pop
push
mov
xchg
ret
dec
mov
add
clc
repnz
jae
add
ficomps
mov
xchg
ret
add
add
into
add
add
rep
fwait
cld
nop
jmp
outsl
add
dec
pop
int3
add
sub
jmp
outsb
add
pop
add
sub
imul
fwait
cld
nop
jmp
add
add
add
mov
mov
clc
repnz
jae
add
test
mov
fwait
cld
nop
jmp
add
rolb
loopne
sub
cmp
clc
repnz
jae
sahf
insb
add
inc
test
clc
repnz
jae
das
add
add
add
add
push
mov
xchg
ret
cltd
pusha
dec
add
add
push
scas
add
clc
repnz
jae
or
pop
jns
push
mov
xchg
ret
add
cltd
pop
push
clc
repnz
jae
pop
fs
add
add
and
js
add
fwait
cld
nop
jmp
add
cltd
mov
sbb
incl
add
mov
int3
mov
add
jo
mov
clc
repnz
jae
popa
icebp
inc
insb
sub
mov
pushl
push
mov
xchg
ret
fdivp
add
add
call
fwait
cld
nop
jmp
add
add
add
in
inc
add
add
add
add
add
push
mov
xchg
ret
add
cmp
mov
mov
bound
in
push
add
aad
pop
push
mov
xchg
ret
pop
add
add
and
mov
movzwl
clc
repnz
jae
cltd
mov
inc
add
lcall
jmp
add
pusha
popf
push
fwait
cld
nop
jmp
mov
out
outsb
add
add
loopne
insb
lock
add
sbb
mov
popa
add
repnz
jae
add
das
or
dec
cmp
repnz
jae
sub
mov
call
nop
jmp
mov
add
sbb
cld
nop
jmp
add
add
add
int3
push
clc
repnz
jae
adc
jge
add
or
clc
repnz
jae
add
sub
repnz
jae
add
add
mov
add
mov
clc
repnz
jae
add
add
add
clc
repnz
jae
add
js
add
clc
repnz
jae
add
or
fdivp
sbb
jb
fwait
cld
nop
jmp
dec
add
add
add
leave
fwait
cld
nop
jmp
mov
inc
pop
insb
fsubs
popa
add
repnz
jae
sahf
add
pop
add
pop
push
clc
repnz
jae
inc
add
mov
or
nop
jae
outsl
add
add
lods
fwait
cld
nop
jmp
add
mov
add
ja
cmp
push
mov
xchg
ret
add
add
js
fwait
cld
nop
jmp
jge
into
add
add
add
and
call
and
add
lret
insb
pusha
add
decl
lock
repz
add
mov
jmp
out
add
cltd
outsl
add
pushf
rep
fwait
cld
nop
jmp
add
add
in
push
clc
repnz
jae
add
add
icebp
movsb
sbb
push
mov
xchg
ret
add
in
pop
push
push
mov
xchg
ret
add
add
add
adc
cmp
repnz
jae
pop
add
dec
mov
clc
repnz
jae
add
add
clc
repnz
jae
or
add
add
jle
mov
adc
repnz
jae
into
pop
cltd
lret
mov
clc
repnz
jae
out
add
mov
nop
jmp
fiaddl
add
mov
dec
add
add
add
clc
repnz
jae
das
jge
add
add
pusha
add
sbb
repnz
jae
outsb
ficomps
add
lods
mov
clc
repnz
jae
insb
loop
mov
clc
repnz
jae
sahf
fisubrl
notb
add
mov
roll
clc
repnz
jae
inc
add
int3
jge
cmpsb
data16
movb
mov
xchg
ret
popa
add
add
call
clc
repnz
jae
rolb
add
or
mov
add
mov
add
loopne
xchg
cwtl
div
fwait
cld
nop
jmp
outsb
inc
pusha
pop
add
add
lods
xor
clc
repnz
jae
dec
insb
mov
enter
jae
mov
add
pop
mov
clc
repnz
jae
int3
add
add
push
out
push
clc
repnz
jae
add
add
add
add
mov
push
mov
dec
int
add
sti
add
pop
push
add
push
out
xchg
xchg
push
inc
mov
jle
clc
push
mov
xchg
ret
add
lret
cmpl
fwait
cld
nop
jmp
repz
outsb
add
add
jge
mov
add
xchg
add
push
add
xchg
pop
add
add
jbe
add
repnz
mov
ret
scas
jns
add
pushf
mov
add
add
js
out
inc
add
loopne
mov
mov
add
xchg
lods
mov
fwait
nop
add
and
shrl
add
mov
xchg
enter
mov
mov
add
loope
pop
mov
mov
push
mov
adc
out
aam
cmpsb
in
in
or
add
mov
pusha
add
dec
addb
mov
mov
xchg
mov
add
mov
movsl
xor
add
fs
arpl
outsb
xchg
dec
ljmp
cmc
std
lea
push
mov
xchg
add
add
and
jl
test
or
and
or
stos
add
mov
add
xchg
push
add
mov
mov
dec
pop
or
add
stos
adc
mov
inc
ljmp
std
mov
ss
push
aas
imul
int3
mov
add
mov
je
pop
jge
dec
jns
xchg
das
scas
aaa
rolb
rolb
mov
cs
add
xchg
adc
inc
add
imul
or
add
jnp
add
adc
add
movsl
pop
ret
push
test
pop
les
rolb
mov
cli
dec
loopne
mov
aad
mov
addb
fdivs
mov
add
sbb
add
and
pop
rcll
and
mov
jg
into
ds
or
mov
add
rolb
mov
adc
add
dec
inc
ja
sbb
jmp
imul
push
mov
mov
and
cmpsb
mov
mov
fwait
push
mov
mov
pop
popl
ljmp
int
jge
dec
xor
xor
mov
divb
jne
pop
xchg
add
xchg
xchg
lea
test
jae
mov
loope
int3
in
adc
mov
add
sub
xor
lret
lcall
pop
cwtl
mov
jno
mov
add
add
mov
cld
pusha
add
in
add
mov
xor
mov
mov
sub
push
insb
fildl
cltd
jecxz
cmp
call
add
or
add
rolb
or
jae
fprem
icebp
js
inc
add
mov
pop
xchg
mov
int
int
data16
mov
jns
cltd
push
add
int
sub
nop
add
mov
mov
xchg
add
mov
push
sbb
cmp
cmp
add
mov
mov
add
cltd
pop
mov
mov
fstp
pop
gs
add
and
insl
pop
out
sbb
mov
mov
mov
mov
out
popa
add
mov
pop
and
mov
rcrl
inc
ficomps
rolb
mov
push
xchg
clc
ret
sti
adc
movsl
mov
push
add
sbb
jge
movsl
xor
pop
mov
test
mov
add
mov
mov
bound
mov
out
imul
scas
inc
add
mov
mov
addb
in
ja
inc
add
fdivp
stos
jnp
push
pop
mov
mulb
mov
mov
add
andl
sbb
push
inc
xchg
add
mov
int
mov
mov
mov
mov
dec
and
icebp
adc
mov
push
aam
or
addr16
popa
xchg
xchg
jnp
sub
jecxz
cmpsl
xchg
pop
mov
sub
iret
int3
es
xchg
js
lahf
push
mov
aaa
push
rolb
mov
ljmp
or
add
mov
or
nopl
pop
xor
cmp
add
pop
test
adc
mov
cwtl
jns
sbb
add
mov
or
adc
cmpl
mov
add
mov
je
cmp
pop
test
cwtl
std
das
sbb
mov
pop
jb
mov
add
cmp
pop
jns
ja
stos
mov
mov
add
lahf
add
dec
pop
pushf
int
aad
inc
add
mov
mov
flds
xor
insb
mov
and
mov
addr16
dec
leave
popf
inc
inc
pop
push
ds
test
mov
out
jl
xchg
cwtl
add
sub
mov
les
daa
test
xor
loope
aam
xchg
loope
addr16
inc
add
icebp
daa
mov
lcall
mov
mov
clc
repz
rolb
mov
pop
push
je
das
ret
test
and
js
add
mov
mov
insb
pusha
add
insl
loope
cmp
add
in
xchg
xor
push
imul
mov
and
cltd
mov
lock
mov
rcll
xor
dec
loopne
mov
ljmp
sbb
mov
nop
add
int3
xor
mov
sub
and
sub
sub
pop
mov
xchg
add
sub
xchg
hlt
dec
fldt
pushf
in
push
cmp
inc
dec
insb
pop
lcall
mov
in
stos
cmp
mov
dec
rcrl
lret
test
mov
dec
fldcw
add
add
repnz
mov
fsubs
daa
lret
cmc
mov
loope
les
sub
sbb
jmp
hlt
ret
in
faddp
and
mov
das
inc
insl
add
xor
xchg
call
nop
add
pop
push
cmp
adc
xchg
add
and
das
xchg
test
ja
push
adc
mov
jbe
in
cld
loop
mov
pop
pop
aaa
cmc
pusha
add
mov
xchg
lea
imul
jns
mov
mov
mov
fimull
cmp
inc
aas
cmp
int3
mov
mov
insl
push
mov
add
mov
gs
add
movsb
jae
mov
cmp
mov
cmp
mov
mov
add
movsl
lods
sbb
sbb
push
dec
dec
push
jg
fmuls
jge
jo
mov
sub
add
xchg
jle,pn
sti
xor
addr16
xor
rolb
mov
ds
or
dec
jp
add
push
dec
jnp
xchg
pushf
jo
mov
ds
jo
mov
roll
add
push
and
mov
out
mov
add
ljmp
mov
icebp
sbb
test
dec
cmc
mov
scas
xchg
lret
sbb
adc
call
mov
mov
mov
pop
pop
lcall
lods
daa
push
lcall
js
mov
sbbl
aad
stos
pop
xlat
ret
fsubrs
jg
add
and
xchg
lods
push
jge
scas
in
xor
mov
mov
pop
dec
xchg
or
add
cwtl
cmp
out
and
fcompl
scas
rcrl
add
stc
sbb
cs
scas
movsb
leave
pop
outsl
std
insb
mov
jl
rolb
loopne
mov
jecxz
or
jecxz
pop
dec
xchg
add
mov
sub
sbb
mov
test
add
rcll
sbb
lock
fisubs
cmp
mov
mov
rolb
clc
jmp
ds
pop
xchg
sti
cmpsb
loope
add
in
lock
mov
loop
mov
jae
xor
daa
lret
xor
scas
jl
xor
mov
loop
mov
mov
arpl
ljmp
inc
cmpps
in
call
xor
jmp
add
sahf
and
pop
pop
inc
es
addb
push
iret
and
sbb
xor
cmp
push
add
jp
xchg
mov
loopnew
mov
jo
mov
add
jbe
xchg
jmp
inc
cs
in
xlat
jb
mov
fsubrl
pushf
inc
sbb
mov
cltd
inc
add
lret
sub
mov
movsl
xor
inc
add
mov
mov
sbb
addb
dec
xor
mov
in
xor
jmp
mov
or
int3
stos
in
pop
loopne
mov
dec
dec
jb
mov
mov
mov
into
xlat
push
mov
pushf
test
sbb
cmp
adc
add
add
mov
inc
addb
rolb
mov
add
jge
inc
add
rcl
push
add
mov
pop
out
jbe
es
inc
loop
mov
jne
test
sbb
add
mov
les
call
mov
stos
dec
or
cmpl
rolb
mov
add
add
push
and
mov
cmp
pusha
add
mov
inc
add
ljmp
ret
cmp
mov
pop
notl
jmp
add
pop
mov
and
mov
sub
sub
inc
add
mov
bound
mov
mov
out
mov
sti
out
sub
cmp
pushl
pop
dec
and
push
pop
adc
mov
rolb
mov
cmpsb
je
in
dec
mov
xchg
es
movsl
lahf
lods
loopne
mov
cld
mov
mov
xadd
mov
mov
add
into
or
movsl
shll
mov
xchg
ljmp
aas
and
mov
imulb
sbb
pop
jne
jns
dec
cmc
mov
mov
cwtl
bound
mov
lea
mov
rolb
mov
push
add
xlat
loopne
mov
mov
or
mov
jbe
push
cmp
adc
xor
mov
arpl
add
sub
mov
add
mov
repz
xor
mov
in
mov
mov
sub
mov
push
lods
int
sahf
test
popa
cmpsl
out
ret
jl
add
xlat
sti
pop
sbb
add
mov
popa
loopne
mov
loopne
mov
xchg
nop
add
add
xchg
mov
fwait
jnp
sub
or
jbe
push
adc
mov
stos
pop
sbb
mov
rcll
add
sub
mov
jecxz
dec
fs
sub
aas
negl
or
dec
jbe
push
mov
mov
cli
jl
sbbl
add
fidivl
jp
int3
mov
mov
xchg
mov
or
mov
stc
adc
pop
bound
mov
adc
mov
xchg
rolb
push
mov
mov
add
enter
mov
xor
mov
into
sbb
add
add
test
cwtl
sub
test
sbb
and
mov
cmp
push
ret
adc
fnsave
add
rol
mov
mov
adc
xor
mov
mov
jp
sub
jmp
add
add
ficoms
clc
mov
add
jbe
and
mov
push
push
mov
mov
std
dec
adc
mov
rcll
add
in
incl
sahf
decl
ret
and
mov
in
aam
add
mov
mov
mov
call
add
jno
push
lock
mov
mov
sub
leave
push
in
mov
add
pushf
mov
jno
ds
cmc
dec
xchg
mov
xchg
dec
sahf
mov
xchg
call
ljmp
filds
and
sahf
lock
icebp
xchg
pop
mov
inc
add
int3
and
sub
push
and
mov
mov
mov
rcrl
cmp
adc
jge
loop
mov
ficoml
mov
add
add
mov
pushf
jge
cmp
in
lret
aaa
imul
push
xchg
add
loopne
mov
sub
add
mov
fstpt
mov
pop
stos
ret
imul
xchg
add
test
add
mov
jg
jecxz
cmp
add
push
jns
add
pop
inc
and
mov
sbb
mov
sbb
add
pusha
add
daa
inc
add
add
mov
xchg
mov
rolb
cmpsw
fsubrl
jne
add
testb
xchg
stc
pop
inc
inc
mov
dec
dec
gs
mov
aad
cwtl
rolb
mov
jecxz
lret
scas
jle
idivb
mov
add
jg
add
es
pushf
mov
jge
addb
mov
add
mov
testl
hlt
jmp
add
mov
mov
mov
xchg
dec
xor
mov
rolb
mov
inc
add
add
add
xorps
add
cli
xor
lock
mov
inc
mov
inc
fs
add
imull
cmc
adc
inc
sub
pop
hlt
andl
inc
lcall
test
mov
test
imul
arpl
jl
cmp
push
xor
mov
pop
adc
mov
jne
pushf
mov
dec
and
mov
or
mov
or
das
nop
add
scas
cmp
add
ljmp
inc
dec
arpl
insb
jmp
enter
mov
pop
inc
mov
mov
scas
push
repz
mov
add
test
add
xchg
mov
xchg
jle
psrlq
add
cmpsb
fwait
mov
scas
and
push
popa
adcl
push
jl
aam
mov
or
xchg
add
xor
mov
add
lods
jle
mov
mov
sub
add
dec
ret
push
add
sub
das
lods
push
inc
add
push
daa
pop
cmp
scas
fldenv
jns
push
add
test
inc
add
or
sub
mov
sbb
lret
ja
jge
fsts
mov
add
mov
lds
mov
mov
add
mov
leave
dec
pop
cltd
rolb
mov
add
mov
mov
movb
and
mov
mov
aad
not
cld
and
dec
push
push
and
mov
mov
push
cmp
xchg
add
movsl
js
fs
fsts
mov
inc
xchg
repz
mov
add
mov
inc
sub
das
adc
mov
mov
mov
popa
mov
and
int3
jle
enter
add
add
sbb
arpl
inc
xlat
mov
mov
stc
sahf
pop
iret
add
mov
add
and
mov
push
out
mov
xchg
add
sahf
add
mov
adc
pop
push
mov
fmull
cmp
xlat
sbb
in
jno
test
mov
lcall
mov
xor
mov
fwait
push
add
add
mov
mov
inc
mov
mov
mov
add
lret
add
pop
popf
dec
fistl
adc
pusha
add
mov
mov
in
add
lahf
add
jge
lods
mov
mov
adc
mov
bound
mov
add
add
xor
es
add
adc
adc
mov
add
mov
ret
leave
ret
jl
fwait
sbb
addb
aad
push
ret
fnsave
inc
add
xlat
pop
mov
rcrl
stos
cld
mov
add
add
sahf
dec
neg
jns
adc
mov
add
mov
mov
sbb
cmp
lock
dec
rol
add
add
popa
pop
pop
jae
add
outsl
movsb
cmc
mov
push
jb
mov
idivb
pop
rolb
rorl
imul
stos
int
fs
lret
add
imul
fstpt
or
mov
mov
andl
or
dec
imull
rolb
pop
sub
xchg
and
mov
lods
aad
cld
ficomps
add
std
repnz
jp
inc
xor
mov
outsl
movsl
jno
out
add
mov
add
adc
mov
into
jl
into
mov
mov
jo
mov
mov
dec
mov
mov
mov
adc
sub
popa
cmp
jns
int3
sbb
add
addb
stos
lods
lret
mov
push
arpl
xor
add
mov
scas
dec
pop
inc
add
mov
sbb
mov
mov
ljmp
xchg
mov
mov
mov
pop
pop
inc
dec
jmp
mov
cmp
adc
inc
je
iret
xor
mov
int
les
cmpsl
rolb
mov
out
push
ret
in
jo
mov
stos
pop
xchg
add
mov
xor
mov
imul
jle
fstl
add
mov
mov
in
mov
fstpl
xor
lea
dec
cltd
push
xchg
insb
rorl
addb
fmull
pop
loop
mov
aam
cmp
mov
js
add
in
xchg
popf
in
inc
inc
pop
fldl
add
add
add
add
pop
scas
test
xor
test
add
mov
mov
jnp
lahf
mov
add
aam
xor
and
mov
sbb
clc
movsl
addr16
ret
negl
mov
pop
rolb
mov
ktestb
into
dec
dec
pop
jp
lret
fs
jo
mov
xor
popf
shll
test
mov
fcomps
lods
dec
outsl
sbb
je
in
fisubs
add
add
sbb
mov
cmp
jae
push
nop
add
les
and
pop
pop
stos
arpl
outsb
and
icebp
fistps
hlt
popf
inc
jae
push
inc
dec
sub
fistpl
out
dec
jmp
in
sbb
xor
andl
pop
push
xchg
xchg
sbb
mov
scas
mov
sub
mov
add
add
or
repnz
add
roll
sbbl
mov
pushf
ret
dec
add
push
adcl
sub
test
test
jne
mov
add
mov
add
push
daa
imul
add
add
mov
stc
andl
rolb
test
nop
add
mov
cpuid
add
cli
pop
inc
cs
and
mov
fs
or
add
mov
out
int
adc
add
pushf
adc
std
iret
popa
push
add
xor
mov
push
dec
inc
sub
add
inc
add
repz
mov
add
cltd
repnz
sbb
add
jo
mov
mov
sbbl
jge
aaa
stc
and
div
imul
notl
imul
add
pushf
xchg
and
scas
mov
add
or
inc
cmp
mov
cmpsl
push
jae
or
xchg
xchg
push
add
mov
mov
dec
das
xchg
lcall
fstpl
push
repnz
mov
sbb
and
mov
mov
add
scas
or
cmpsl
inc
cltd
add
add
jae
inc
sub
shll
jp
insb
mov
sub
pop
adc
mov
adc
mov
adc
mov
mov
jne
mov
mov
xlat
mov
mov
add
test
mov
mov
add
add
xor
cli
pop
roll
and
add
mov
mov
lcall
mov
add
je
jp
add
mov
mov
mov
cmpsl
aad
sahf
or
addb
inc
addr16
inc
or
out
sbb
xchg
push
pop
xchg
mov
xor
mov
jecxz
sahf
shrl
push
add
and
mov
push
jns
add
in
mov
sub
mov
daa
jp
stos
outsl
int
add
popa
dec
rcrl
fdivs
add
mull
inc
movsl
ss
cmc
mov
xor
fidivrs
add
movsl
rolb
ja
lahf
into
fdivs
push
push
mov
outsl
fisubrs
inc
add
ja
lret
inc
out
add
shrl
mov
out
sbb
rolb
sub
add
ja
and
adc
bound
mov
cwtl
mov
or
mov
into
and
jecxz
repz
add
add
pop
dec
adc
mov
cmp
add
xlat
pusha
add
lahf
mov
mov
lods
inc
jmp
cmpsl
jp
dec
repz
pop
inc
xor
mov
cld
frstor
mov
add
fnstsw
xchg
xchg
add
fadds
movsb
aam
cmp
insb
stos
mov
dec
mov
xorps
lds
add
dec
aam
stos
add
mov
add
mov
fisttpll
xchg
add
mov
mov
mov
popf
ds
stc
pop
and
pop
cmp
add
dec
pushf
cmp
sub
add
sbb
sbb
mov
add
jg
add
add
jb
mov
pop
mov
add
add
mov
cmp
add
dec
std
fisubs
fistps
decl
add
test
dec
sarl
fcmovnb
fnstsw
add
jecxz
jbe
addb
repz
pushf
or
sub
popa
xchg
sub
ror
add
push
fstps
jmp
ljmp
lock
rolb
mov
fwait
pop
icebp
cld
and
add
and
or
sub
inc
in
mov
xor
fucom
lods
insl
and
add
mov
add
test
ljmp
lea
inc
sub
cmp
out
mov
add
fadd
xor
add
sti
jl
inc
add
mov
add
jecxz
mov
test
mov
add
jno
das
fdivl
add
mov
add
mov
hlt
inc
add
ret
adc
cmpsl
js
ja
cmc
dec
flds
mov
add
inc
mov
call
repz
add
arpl
and
inc
pop
jp
flds
add
xor
jbe
jbe
cmp
pop
insl
lret
add
cmp
mov
mov
adc
mov
lret
mov
mov
pop
addr16
sbb
push
push
scas
push
add
or
mov
pop
aad
cwtl
testb
test
sahf
bswap
pop
mov
aas
sbb
int
jmp
jae
and
cmp
add
add
fcomps
add
mov
pushf
mov
cltd
test
mov
mov
fisttpll
mov
push
js
mov
lock
fbld
lock
addb
mov
add
mov
idivb
cmpsb
mov
mov
jnp
rolb
xor
mov
and
mov
jae
adc
mov
aas
mov
mov
lea
rolb
xor
fadds
mov
push
add
push
add
add
fucom
add
aam
sbb
mov
pop
or
add
daa
dec
push
add
inc
cmc
xor
mov
adc
in
jle
add
pop
gs
xor
mov
in
fwait
rolb
stos
push
mov
lcall
punpcklwd
cmpsb
push
imul
shll
adc
mov
add
jnp
cmpsb
and
mov
push
add
mov
pop
imul
cmp
mov
inc
xchg
mov
mov
incb
add
adc
cmpsb
pusha
add
arpl
or
mov
xchg
cmp
and
int
stos
mov
cmp
insb
loop
mov
adc
add
mov
repz
adc
add
js
into
or
aad
pushf
jne
jae
add
popf
push
cmp
popf
outsl
loope
add
das
pop
sbb
mov
mov
lcall
adc
mov
push
pop
sti
mov
aas
fisttpll
dec
jbe
rolb
outsb
sub
inc
dec
inc
add
add
xchg
xor
mov
mov
das
out
lods
jae
add
imul
pushf
sbb
faddl
cmp
mov
xchg
repz
mov
mov
mov
frstor
mov
stc
push
and
xchg
rolb
mov
fsincos
xor
mov
add
add
mov
mov
mov
rolb
mov
add
push
add
mov
cmc
xchg
add
jnp
aaa
sahf
pusha
add
jb
mov
mov
test
mov
xchg
add
or
inc
pushf
jecxz
pusha
add
bound
mov
or
or
add
outsb
test
fistpl
movsb
test
or
jl
jmp
lea
add
cli
jge
divb
cltd
pushf
scas
inc
inc
add
add
ds
pop
in
cmp
or
popf
push
loope
in
xchg
fcmovnu
mov
loope
mov
mov
fcomp
mov
lods
mov
and
repz
outsl
cmpsb
add
add
scas
xchg
xchg
mov
and
jmp
shll
push
inc
mov
dec
jl
dec
pop
adc
mov
add
jns
and
mov
pusha
add
pop
adc
inc
add
mov
arpl
daa
ja
stos
scas
enter
and
mov
add
ljmp
scas
mov
in
scas
sub
pop
mov
inc
jecxz
add
pop
mov
call
in
mov
cltd
xchg
or
cltd
lahf
loopne
mov
mov
sbb
add
pop
outsb
cmpsb
mov
loop
mov
xchg
add
cld
into
jb
mov
pop
sub
sbb
xor
mov
nop
add
mov
mov
jnp
jno
and
add
add
and
mov
dec
jb
mov
daa
push
sbb
jp
jge
mov
mov
imul
mov
loope
jae
cmp
mov
mov
cmp
sub
add
xchg
add
add
cmp
push
test
cs
std
std
pop
xchg
sarl
mov
sbb
hlt
loop
mov
mov
and
enter
add
add
mov
dec
push
in
sbb
add
add
cs
jnp
mov
ss
or
xchg
mov
mov
inc
ret
xchg
and
mov
add
das
mov
mov
add
divl
and
sbb
sub
push
push
xchg
decb
pusha
add
dec
mov
add
dec
mov
call
stos
jno
in
lods
inc
add
mov
add
mov
add
mov
in
sbb
xchg
adc
mov
popa
jb
mov
mov
popf
push
add
add
ficoml
mov
mov
mov
sbb
enter
dec
or
leave
js
movsl
inc
push
add
jns
or
jae
cmpsb
inc
dec
dec
or
pop
sarl
cmc
jmp
or
add
mov
jge
push
or
pop
cmp
xor
mov
aad
inc
add
xchg
add
pop
pop
push
cmp
rolb
mov
add
sbb
cli
xlat
push
sub
or
es
push
add
add
fisubl
mov
jmp
add
mov
add
das
sahf
xchg
enter
mov
add
fwait
pop
jo
mov
int3
and
mov
mov
andl
push
mov
mov
mov
imul
add
mov
enter
mov
jp
int3
sbb
clc
movsb
arpl
or
and
lahf
mov
mov
nop
add
aad
jns
pop
in
sahf
lret
mov
adc
adc
sub
mov
push
pop
dec
fdivp
jns
mov
add
push
xchg
add
addb
mov
test
mov
shll
mov
out
add
in
stos
in
add
push
and
mov
xchg
leave
rolb
mov
mov
or
push
sbbl
add
jne
pop
lods
push
add
and
lcall
mov
adc
or
add
mov
jae
cltd
xchg
addr16
sub
mov
nop
add
push
add
jp
ljmp
jbe
cmc
mov
add
movb
xchg
push
and
pop
jnp
jns
pop
fdivs
sub
mov
add
fiadds
add
repnz
mov
loopne
mov
add
lret
in
js
dec
stc
sbb
push
xor
mov
aad
stc
imul
lahf
jbe
test
das
es
add
or
jp
insl
stos
test
jg
and
es
lcall
nop
add
fwait
sbb
cld
fidivl
mov
pushf
cli
popa
daa
int3
pop
daa
out
push
cli
jo
mov
mov
cmc
push
xor
mov
mov
mov
cmp
xor
mov
pop
adc
mov
insb
sbb
rolb
lds
adc
mov
add
aaa
mov
divl
dec
fisubrs
cs
xor
shl
add
mov
mov
push
cmp
addb
mov
repz
lret
jg
pop
push
add
or
push
nop
add
pop
cltd
jns
stos
out
add
adc
aad
lahf
mov
add
cmpl
add
pop
bound
mov
daa
insb
loopne
mov
bound
mov
add
push
jl
test
loope
in
aaa
sahf
test
popf
sub
arpl
and
mov
mov
xor
pop
or
jbe
mov
rolb
mov
mov
add
mov
test
jge
or
dec
cmp
push
dec
jnp
incb
xor
mov
add
add
xchg
add
mov
hlt
roll
dec
xchg
fsubs
add
xor
mov
test
fwait
sahf
in
dec
jg
add
mov
in
pop
ja
loope
decl
jae
jge
movsb
addb
loop
mov
mov
mov
push
dec
push
adc
mov
mov
cmpsb
adc
mov
dec
dec
mov
fists
insb
mov
mov
xor
mov
add
dec
cmp
jmp
test
add
jnp
loop
mov
scas
push
mov
add
sbb
mov
add
nop
add
popa
push
lahf
inc
and
sti
xor
mov
out
pop
add
call
popf
jle
mov
mov
and
leave
popa
mov
test
arpl
mov
add
lahf
dec
jg
adcl
mov
clc
fwait
pop
jle
add
mov
lock
movsb
sub
addr16
jb
mov
adc
addb
outsl
movsb
mov
dec
mov
push
popa
ret
jo
mov
xchg
add
add
adc
adc
aaa
sbb
sub
mov
pop
dec
or
popf
xchg
out
iret
sbb
jp
outsb
cmp
loopne
mov
mov
mov
mov
jne
push
pop
cmp
outsl
gs
push
fbld
mov
mov
mov
mov
mov
add
mov
cmp
outsl
and
mov
and
mov
pop
adc
mov
cs
sub
inc
push
add
pop
ss
jbe
xchg
add
cmp
mov
add
jle
add
lea
scas
inc
fldt
push
xlat
pop
inc
iret
cld
lahf
mov
lods
pop
xchg
pop
sbb
ja
cmpsb
cmp
dec
bound
mov
jle
xchg
add
sub
add
mov
mov
jno
add
adc
shrl
lret
sub
pop
dec
push
sbb
sbb
mov
adc
add
je
sti
jne
mov
in
fnstcw
popa
testb
lods
xchg
sti
int
add
xor
mov
test
test
mov
fisubl
add
pop
out
inc
fnstcw
enter
cltd
xchg
add
in
int
add
inc
add
test
adcl
lcall
fisubrl
mov
cmp
bound
mov
popf
push
lock
add
add
idivl
test
daa
mov
mov
add
xchg
jg
and
add
lahf
lea
dec
xchg
inc
add
jl
add
daa
popa
call
call
pop
xchg
insb
inc
add
mov
add
nop
add
push
sub
xchg
and
ljmp
imull
mov
inc
rolb
mov
push
jge
add
out
imulb
ret
add
mov
xchg
fwait
xchg
jecxz
inc
add
xchg
add
cwtl
rorl
addb
test
cwtl
pop
sub
jo
mov
pop
fildll
gs
leave
dec
adc
or
imul
mov
sub
in
xchg
notl
push
fistps
in
insb
call
or
imul
add
pusha
add
lret
aaa
idiv
add
rolb
mov
jns
add
jo
mov
add
lea
mov
aas
adc
and
and
pop
fwait
loope
and
sbb
addb
inc
add
insl
xchg
std
cmpsb
sub
js
popa
and
mov
jge
into
icebp
pop
xchg
sub
aam
jp
add
sarl
or
insl
push
add
pop
sar
outsb
aaa
insb
imul
adc
mov
mov
test
cmp
imul
mov
mov
and
lcall
and
fbstp
shr
inc
ljmp
mov
cli
xchg
in
into
popf
adc
mov
cltd
dec
adc
jae
add
mov
or
add
add
push
inc
inc
add
mov
add
into
addb
mov
add
push
dec
xor
mov
xor
mov
xor
bound
mov
sarl
mov
add
mov
daa
mov
out
push
sahf
sbb
mov
mov
dec
adc
xor
mov
lret
data16
pop
xchg
sahf
lret
jmp
loopne
mov
jno
cld
dec
mov
add
add
jmp
sti
mov
add
mov
mov
idivl
pop
fldcw
mov
std
xchg
mov
icebp
incl
aaa
int
stos
push
js
add
push
mov
das
nop
add
or
jecxz
jns
pop
dec
and
sbb
pop
popa
icebp
sbb
inc
lret
jns
mov
mov
jne
cmpsl
into
and
aas
and
shll
mov
pop
rorl
xchg
test
lret
out
cmc
pop
daa
sbb
cltd
cld
out
add
or
fwait
inc
dec
imul
dec
addb
xor
mov
mov
sub
add
dec
clc
popf
pop
xchg
add
repz
lea
das
mov
pop
dec
adc
mov
and
idivl
mov
hlt
mov
stc
pop
and
add
addb
hlt
dec
inc
push
inc
add
sub
mov
push
xor
mov
mov
dec
fs
and
mov
add
insl
dec
inc
add
in
bound
mov
pop
mov
loopne
mov
add
ret
in
outsl
mov
pop
pop
lahf
xchg
adc
mov
add
adc
shll
xor
mov
repnz
out
int
add
mov
add
xor
add
lods
and
mov
sbb
pop
and
mov
sbb
push
push
data16
mov
mov
aam
sbb
mov
add
push
mov
xor
mov
add
sbb
scas
xor
inc
fdiv
add
sub
add
ret
cli
xchg
add
push
mov
jno
in
or
xchg
mov
add
mov
and
mov
dec
hlt
ret
mov
test
and
popf
sub
pop
push
add
jno,pn
dec
sbb
movsb
mov
cld
out
rorl
pop
fsubl
mov
aam
outsb
pop
jg
cbtw
xor
mov
add
push
aas
ret
repnz
add
mov
popa
adc
mov
int
push
js
inc
repz
mov
add
or
or
dec
ds
xchg
push
add
cld
daa
lods
mov
ljmp
in
inc
int
xchg
pushf
lods
loope
add
rcll
lock
pop
cmp
sbb
mov
inc
add
jmp
mov
add
lea
add
fbstp
addr16
add
stc
push
cwtl
mov
mov
mov
mov
mov
mov
sbb
aas
je
insl
cmp
das
inc
add
add
mov
jo
mov
imul
add
xchg
add
sub
mov
mov
and
mov
add
leave
shll
cmpsl
lcall
xchg
mov
clc
mov
iret
fcmovb
jle
mov
mov
mov
mov
or
es
add
cltd
push
movsl
fdivr
pop
dec
mov
pop
int3
popa
cmp
push
lahf
and
mov
and
mov
adc
sbb
mov
test
ret
insl
punpckhwd
adc
mov
add
add
dec
cmc
cmp
add
sub
mov
push
xchg
dec
pop
jle
add
lret
rorl
insl
jbe
jno
mov
mov
jns
pop
mov
add
or
inc
lret
add
jmp
cmp
add
les
pop
add
add
fisttpl
jp
add
mov
add
lahf
aas
fdivrp
push
add
mov
popf
mov
inc
dec
out
repnz
fistpll
mov
out
or
mov
xor
idiv
and
mov
in
jae
int3
sarl
ret
popa
or
mov
outsl
icebp
dec
sub
inc
xchg
mov
push
mov
cmp
mov
add
jb
mov
push
add
push
popa
ror
add
sub
jb
mov
mov
and
mov
es
push
add
out
sub
inc
add
lods
call
mov
and
mov
add
xor
jns
xlat
insl
mov
add
testb
sbb
cmp
icebp
test
mov
leave
mov
pop
daa
loop
mov
andl
add
mov
add
add
add
inc
inc
add
das
inc
add
hlt
jae
add
rolb
mov
add
mov
bound
mov
loop
mov
xchg
add
mov
xchg
loop
mov
push
adc
mov
or
cmpsl
pushf
addr16
mov
rolb
mov
or
jbe
mov
sbb
loop
mov
sub
xor
push
push
fstpl
and
out
fs
aad
les
add
push
hlt
repnz
aad
pop
movsb
push
nop
add
add
pop
outsl
push
and
mov
sub
gs
inc
ret
outsl
ja
inc
add
loop
mov
mov
jle
lods
mov
les
add
mov
in
fwait
xchg
and
mov
mov
repnz
add
add
nop
add
pusha
add
sub
xor
dec
lds
push
es
inc
pop
push
imulb
cmp
mov
imul
out
inc
adc
mov
mov
or
mov
rcl
stos
sub
pop
outsb
dec
cmc
cmp
stos
add
mov
mov
cmp
cld
enter
pop
sbb
cmp
add
aam
cmp
add
dec
clc
jae
nop
add
test
mov
into
sub
mov
push
rcl
push
repz
dec
sub
aas
inc
je
loop
mov
add
mov
mov
scas
addr16
inc
rolb
mov
sub
aas
jmp
in
add
xor
lret
icebp
aad
dec
cltd
and
xchg
loope
jge
mov
adc
es
mov
push
sahf
xchg
inc
call
add
push
cltd
xchg
call
lods
jl
addr16
jne
add
pop
scas
into
insb
in
xchg
cmp
push
insl
fidivl
lahf
popa
shr
andl
add
mov
pop
lds
add
cmpsb
loope
and
mov
push
loope
lcall
dec
in
insb
movsl
jl
loop
mov
rolb
mov
ds
pop
push
inc
add
imulb
jb
mov
mov
popl
loopne
mov
mov
mov
and
mov
add
and
mov
imul
pop
cmp
adc
xchg
jle
cmp
cmp
fs
cmp
add
leave
aam
in
sti
repnz
xor
sbb
mov
cli
lret
push
gs
fcmovnbe
and
cmc
sbb
adc
fistpl
andl
in
addr16
cmp
nop
add
dec
clc
cld
pop
add
and
mov
sti
cmpsb
dec
push
add
rolb
mov
aas
ficomps
mov
jo
mov
mov
add
mov
scas
dec
scas
dec
jmp
paddw
int3
add
push
lret
push
add
rolb
mov
add
cmp
pusha
add
cmp
mov
sbb
lds
xchg
add
mov
stos
and
and
mov
lds
and
pop
inc
jmp
xchg
fdivrs
xchg
or
fistl
dec
push
xchg
push
fnsave
cmpsb
inc
mov
or
mov
or
add
mov
add
add
mov
inc
add
mov
dec
insl
mov
cmp
lret
das
in
pop
ret
lods
cmp
mov
mov
out
jo
mov
sbb
in
jl
add
fldenv
push
and
mov
pop
jb
mov
push
adc
add
mov
fcompl
inc
lret
stos
insb
lds
call
imul
jns
dec
jae
int
pop
aas
ds
sub
pop
fcmovnbe
cwtl
or
test
sarl
push
fcompl
pop
and
pushl
or
sbb
add
mov
dec
pop
and
sbb
adc
ret
xor
pop
shl
xchg
mov
cmc
sbb
add
mov
inc
push
add
dec
bound
mov
lcall
outsb
push
add
mov
mov
inc
and
mov
pop
push
addb
loope
icebp
xor
movsl
lds
add
lret
mov
mov
inc
add
cmp
into
add
ficoms
add
dec
and
add
dec
cmpl
push
aas
and
mov
add
mov
mov
movsl
cltd
xlat
daa
mov
add
outsl
addr16
xor
add
dec
add
mov
lds
xchg
in
mov
rolb
rolb
mov
cmp
inc
fmuls
push
add
mov
jno
addb
dec
lods
addb
stc
xlat
repnz
inc
fdivl
mov
and
mov
dec
shl
scas
inc
add
les
xchg
add
dec
das
in
cmp
push
mov
fucomip
dec
addb
lock
cmp
adc
mov
adc
mov
mov
mov
push
push
sbb
xor
mov
xchg
add
in
add
mov
icebp
ds
loop
mov
mov
cmp
jbe
mov
cmp
pusha
add
add
add
movl
and
lahf
xlat
xor
jnp
add
dec
fwait
outsb
clc
jp
sub
out
cmp
xchg
dec
fdivr
insl
das
or
cmp
ljmp
ret
leave
out
out
js
xchg
push
loop
mov
daa
jg
push
add
lods
pop
ja
xchg
add
mov
xor
mov
sbb
aaa
shl
clc
call
in
fsubp
cmpsb
or
adc
mov
aad
mov
xchg
sbb
mov
inc
sti
inc
stos
pop
in
push
add
adc
mov
mov
inc
add
push
lds
xchg
push
sub
xor
fs
cltd
scas
mov
add
xchg
mov
ret
dec
movsb
test
cmpsl
pop
imul
aad
bswap
jmp
imul
adc
mov
push
addb
inc
addl
mov
push
jns
mov
dec
sub
adc
push
out
imul
rcrl
std
sub
mov
mov
mov
add
xchg
push
push
and
and
scas
addb
mov
sub
and
push
sub
test
mov
test
inc
nop
add
pop
addb
and
std
repnz
scas
mov
push
mov
mov
mov
mov
add
ret
adc
or
mov
mov
push
add
add
xchg
add
mov
jae
add
dec
or
and
inc
add
mov
repnz
mov
add
add
mov
xchg
xchg
mov
lcall
hlt
mov
pop
loop
mov
adc
mov
or
bound
mov
test
add
rolb
xchg
fisubrl
xchg
xchg
pop
lea
icebp
sub
xchg
mov
mov
bound
mov
jecxz
cwtl
int
ds
cmp
add
mov
call
call
jb
mov
lcall
and
mov
sub
orl
mov
cli
or
jmp
xchg
aaa
dec
push
rolb
cmp
cmp
pop
loop
mov
add
cmpsl
and
cmc
add
mov
aaa
xchg
pop
es
outsb
mov
pushf
dec
int
adc
adc
lods
xor
pop
in
lcall
jle
and
mov
mov
pusha
add
jnp
sbb
add
add
out
pop
pop
sbb
lret
and
add
pop
cwtl
outsl
mov
mov
mov
mov
add
mov
push
das
test
push
add
mov
mov
add
or
shll
mov
xchg
fisubrs
or
xor
cmp
repnz
adc
mov
and
sub
push
aad
adc
cmp
dec
cld
loopne
mov
add
cli
mov
aaa
data16
add
add
add
add
repz
sbb
stc
dec
add
add
inc
sbb
add
inc
add
test
add
mov
int
jg
das
fldenv
xor
mov
stc
cmp
gs
mov
sbb
mov
je
jle
inc
or
jnp
push
add
xchg
lea
sar
outsb
pop
je
lcall
add
xchg
idivl
fnstsw
or
mov
mov
and
add
enter
fcoms
or
inc
add
mov
cltd
mov
mov
mov
add
aaa
repnz
in
and
add
and
mov
xlat
dec
fs
jl
xchg
arpl
add
add
dec
pop
mov
xchg
lcall
mov
mov
mov
clc
aaa
out
adc
inc
add
xchg
add
add
add
jg
inc
test
jmp
add
jmp
bound
mov
cld
dec
dec
pop
cld
je
adc
mov
jnp
cmc
rolb
mov
mov
add
add
loopne
mov
rolb
mov
mov
xor
test
add
dec
jmp
in
dec
popf
mov
fldcw
das
shll
mov
add
add
lea
push
jp
add
mov
add
xchg
ret
mov
lret
xchg
jecxz
adc
sti
jno
mov
mov
sub
push
add
jle
add
js
add
stc
sub
pop
and
mov
mov
jge
es
add
push
dec
cli
jl
sbb
push
adc
mov
mov
and
mov
push
repnz
jmp
nop
stc
cli
push
and
mov
add
add
inc
into
mov
add
incl
or
pop
jl
add
pop
scas
int
cs
lahf
dec
adc
add
mov
nop
add
push
sarl
jae
fsubl
mov
push
and
faddp
add
jp
sbb
das
push
push
push
jp
mov
mov
mov
int
push
or
add
ja
or
lcall
cmpsl
repz
mov
or
out
adc
adc
mov
ret
push
push
jbe
cltd
ret
mov
or
cmp
sti
cmp
push
inc
es
sbb
js
popl
int3
jb
mov
add
or
xor
mov
arpl
hlt
sub
xor
pop
outsl
jle
add
in
shl
sti
jnp
mov
lret
mov
lods
popa
les
push
lret
mul
add
add
adc
or
int
and
push
in
cwtl
fisubs
inc
mov
pushl
add
gs
jo
mov
push
add
icebp
mov
mov
mov
sbb
xor
les
cmc
mov
add
in
fstpt
les
jge
add
out
sahf
enter
fcoml
add
mov
and
sub
mov
push
stc
int3
cmc
cmp
ja
enter
mov
mov
insl
repz
aaa
fwait
mov
jns
push
adc
or
add
std
push
inc
add
xchg
fdivrs
aad
shll
imul
mov
addb
cmp
es
mov
insl
fs
dec
out
cli
push
addb
outsl
in
or
add
call
add
jp
adc
add
mov
sub
mov
fistpl
xchg
add
enter
mov
dec
sub
lret
inc
and
push
hlt
mov
add
dec
in
add
mov
in
add
xchg
jno
in
and
mov
jl
ret
and
gs
push
add
pop
xor
pushf
sahf
fidivrl
dec
jmp
or
fwait
into
jl
mov
mov
add
xor
rep
xor
sub
xchg
sahf
or
mov
add
out
incb
mull
mov
call
es
fs
mov
pop
push
cld
int3
sbb
lds
add
mov
jmp
repz
mov
sbb
adc
mov
add
mov
add
sub
jl
add
jmp
hlt
addl
cwtl
je
jo
mov
mov
gs
gs
ror
fwait
adc
add
mov
dec
xchg
xchg
dec
sbb
cmp
insl
mov
mov
dec
lods
xchg
add
adc
rolb
mov
mov
pop
das
movl
popf
cmc
cmp
fwait
imull
cmp
ficompl
xor
popf
cmp
xchg
lret
mov
mov
jge
test
dec
pop
ret
js
shrl
cmpsl
aam
cmp
add
fists
or
das
xchg
mov
mov
insl
cmp
or
ret
cwtl
pusha
add
arpl
test
push
sbb
fldenv
jle
js
sbb
sbb
pop
xchg
ret
int3
outsb
ret
negl
push
inc
add
popf
xchg
mov
inc
dec
movsb
daa
or
inc
or
mov
enter
clc
sarl
es
xor
cmpsb
divl
mov
xchg
filds
add
mov
sub
ds
push
and
mov
sub
ret
mov
adc
mov
cmpsl
cmp
repnz
or
test
les
mov
add
addb
mov
mov
movsl
fs
cli
dec
cmpsl
je
test
add
popa
adc
int3
dec
and
imul
mov
inc
movsl
xor
pushf
mov
adc
mov
fdivl
mov
lcall
cs
dec
adc
cmp
outsl
inc
arpl
repz
inc
out
adc
into
mov
adc
mov
lahf
mov
fisubrs
jg
pushf
sti
lds
bound
mov
aad
add
jb
mov
add
add
mov
sarl
pop
push
divl
xchg
add
add
cmp
lods
push
mov
mov
mov
and
and
imul
xchg
imul
inc
add
rolb
mov
mov
push
add
pop
mov
or
dec
push
outsl
das
hlt
aaa
rolb
mov
add
stc
xchg
into
shll
cld
lock
ss
pushf
scas
add
sti
inc
cmpsl
loopne
mov
addb
jecxz
inc
and
ret
add
pop
push
insb
inc
jg
xchg
dec
mov
in
cwtl
mov
add
in
cmp
xchg
add
dec
imul
mov
push
add
and
out
movsb
xor
mov
pop
jg
out
bound
mov
mov
mov
outsl
inc
and
mov
add
sbb
mov
fadd
add
jle
in
test
add
cs
mov
push
testl
add
add
mov
mov
cwtl
jmp
and
add
jmp
daa
dec
dec
mov
mov
and
popa
mov
sub
je
fldt
pop
jmp
addl
mov
add
mov
es
sti
adc
mov
aam
add
add
lock
jmp
adc
adc
mov
mov
mov
jbe
add
out
push
jbe
cmc
sbb
enter
mov
add
fnstsw
add
mov
mov
pop
lods
mov
jo
mov
push
cmp
and
fisubl
repnz
adc
mov
add
out
cmp
rorl
mov
cmp
add
inc
and
mov
hlt
lds
inc
pop
das
je
repnz
and
mov
add
xchg
jp
sbb
cmp
movsl
mov
dec
rolb
jmp
push
enter
mov
xchg
data16
add
jge
add
inc
stos
pop
test
iret
xor
mov
add
and
mov
test
mov
in
jl
mov
test
mov
pop
pop
out
out
jnp
mov
rcl
mov
xor
mov
mov
mov
cmp
cmpsb
repnz
sub
dec
leave
lods
mov
call
inc
add
rolb
mov
bound
mov
or
pop
sbb
sbb
addr16
dec
je
mov
pop
inc
addb
addr16
arpl
js
xchg
scas
inc
in
cmpsb
popf
daa
cwtl
popa
shll
add
mov
xor
dec
push
inc
bound
mov
mov
cli
fstp
in
push
mov
add
add
mov
add
add
sbb
test
test
loop
mov
insl
das
adc
cmc
mov
xchg
mov
add
sub
lea
rcll
add
mov
je
movsb
aaa
push
test
and
mov
add
sbb
cmc
sbb
mov
jp
add
add
pusha
add
iret
pop
lds
mov
sub
rcll
icebp
pop
les
dec
addl
add
mov
dec
js
mov
cmp
xchg
fs
rolb
mov
add
loopne
mov
mov
mov
cltd
push
or
lds
loopne
mov
cmpsl
pop
sbb
push
test
int
xchg
stc
mov
mov
add
std
mov
mov
xor
mov
fildl
out
add
call
popf
fcmovnu
flds
add
jne
cmp
jmp
push
mov
pop
neg
mov
mov
push
mov
jle
shll
add
push
lret
nop
add
sbbl
add
mov
jo
mov
add
mov
add
in
mov
faddp
scas
or
rolb
mov
jo
mov
inc
cmp
add
dec
pop
push
out
and
mov
mov
xor
mov
adc
pusha
add
pop
jb
mov
mov
mov
jo
mov
dec
call
add
add
bound
mov
lret
lahf
lret
scas
les
push
mov
popa
pop
ret
jmp
mov
fldl
add
ljmp
inc
add
mov
das
hlt
int
xchg
jge
add
ss
jb
mov
sub
dec
nop
add
push
jmp
mov
pop
jmp
add
test
sbb
add
lods
mov
fistpll
daa
and
imul
mov
mov
push
fnstenv
mov
mov
stos
imul
pop
add
mov
pop
sub
out
out
xchg
or
jbe
pop
sbb
ja
inc
mov
outsl
dec
adc
mov
or
sbbl
aaa
xchg
addb
out
mov
mov
inc
add
mov
mov
push
push
iret
sub
ljmp
into
mov
xchg
mov
jne
stc
pop
sbb
into
movsb
pop
movl
les
adc
lcall
xchg
sub
ficoml
mov
xchg
mov
and
add
mov
push
aad
shrl
sarl
push
lret
jne
cmpsb
insb
addr16
int3
lods
sub
enter
sbb
add
inc
xchg
fbstp
add
pushw
ret
mov
cmp
add
mov
and
ss
mov
out
movsl
add
adc
add
sub
les
jo
mov
gs
cmpsl
jle
loopne
mov
fwait
imul
add
fs
dec
mov
in
xchg
lret
cmp
mov
mov
add
cmp
cmp
pop
inc
pop
dec
lods
jno
movsb
aaa
jg
outsb
popa
push
add
fstpt
cli
jo
mov
add
cmpsl
mov
add
lahf
insb
fsubrs
cli
sbb
nopl
adc
repnz
pop
dec
int
outsb
sub
lahf
cld
mov
mov
fcomps
cmp
jnp
repnz
add
mov
jnp
rolb
loop
mov
pop
xor
sub
cli
mov
cmc
cmpsl
mov
cmp
mov
xchg
add
push
scas
sub
mov
add
pop
fucom
pop
insb
aas
mov
push
add
add
stc
push
add
mov
out
popa
aaa
in
test
mov
sub
mov
insl
test
out
mov
mov
pop
cmp
mov
mov
sahf
gs
cmp
add
lcall
int
add
cmp
je
add
je
add
jl
xlat
popf
sbb
mov
aaa
lcall
inc
jns
lock
xor
mov
ret
imul
pop
xchg
aam
mov
add
std
adc
repz
mov
rolb
mov
add
cwtd
jp
call
stc
dec
mov
push
jnp
add
fldt
je
inc
jge
add
loop
mov
or
addb
sbb
sub
mov
inc
ret
mov
xor
scas
stos
rolb
mov
cld
xchg
add
mov
repnz
pop
inc
out
inc
test
add
xor
mov
clc
jnp
add
mov
je
lret
add
enter
sbb
icebp
jmp
xchg
mov
sbb
add
mov
sbb
stos
xor
shll
add
inc
mov
pop
aas
rorl
or
mov
hlt
and
pop
fists
bound
mov
add
cmp
cmc
mov
xchg
outsl
enter
lret
fmuls
add
dec
daa
xorl
jns
lods
cmp
insl
push
xlat
data16
arpl
xor
xchg
push
push
mov
cmc
ret
push
push
add
or
and
push
mov
mov
inc
or
add
out
sbb
inc
sub
ds
add
mov
push
ljmp
mov
rolb
mov
adc
xchg
lock
test
inc
pop
in
push
jae
jmp
int3
inc
loope
mov
add
addb
ret
xchg
outsb
ret
dec
bound
mov
adc
mov
lods
mov
mov
mov
adc
mov
nop
add
repz
add
mov
inc
add
push
fs
xchg
mov
sub
push
push
cmp
xorl
inc
jb
mov
mov
add
popf
push
ljmp
add
add
push
add
mov
add
lahf
and
mov
adc
call
add
sub
lret
movsb
mov
outsl
mov
imul
ret
mov
stos
lock
jae
rcll
addb
lea
add
mov
add
fsubrp
sbb
mov
add
fisubs
bound
mov
ljmp
jmp
aad
and
rolb
mov
dec
loop
mov
adc
mov
sub
or
ja
ljmp
rorl
dec
sbb
stos
je
daa
push
and
adc
pop
in
cs
ja
adc
add
mov
xchg
sub
negl
repnz
add
dec
xor
mov
fst
add
scas
popf
xor
mov
xor
lods
ljmp
xchg
cmp
sub
sub
mov
mov
sbb
push
out
xchg
mov
cmp
jecxz
fadd
add
jns
add
inc
and
mov
bound
mov
inc
or
addb
or
jbe
ds
dec
lret
xchg
bound
mov
cmp
or
push
mov
in
and
mov
mov
dec
out
push
inc
or
mov
fwait
hlt
jb
mov
leave
mov
std
outsl
enter
add
inc
pushf
mov
mov
xchg
pop
es
xor
mov
push
loop
mov
xchg
into
scas
mov
push
test
push
ret
enter
add
mov
mov
and
mov
inc
add
icebp
cli
in
frstor
aad
loope
jmp
shll
add
cltd
jle
push
add
mov
mov
std
aad
mov
xchg
cmpsb
mov
sub
dec
imulb
mov
xor
fistl
in
mov
mov
cmp
add
out
push
cld
jp
xorl
push
mov
ret
mov
repz
mov
push
in
sbb
stos
out
lea
jnp
movsb
daa
lods
gs
xchg
add
and
mov
inc
add
add
inc
rorl
lock
cmp
inc
add
xchg
xor
add
jbe
repz
mov
add
popl
push
pushf
cmc
movsb
testb
fcmovnbe
lahf
xchg
lods
add
sub
mov
xabort
outsb
jnp
dec
sbb
push
jb
mov
pop
mov
inc
daa
sbb
ds
pop
je
push
lods
jo
mov
xchg
push
add
mov
addb
mov
insl
out
and
mov
test
loope
out
jb
mov
mov
add
cmp
insb
push
pusha
add
mov
mov
rcll
adc
xlat
outsl
jecxz
add
mov
mov
mov
cwtl
aaa
in
insl
addb
daa
lea
in
mov
nop
add
cmp
cmc
loop
mov
sti
add
mov
xchg
push
adc
mov
stos
lods
jge
xor
mov
lods
in
mov
test
add
imul
add
addb
aam
add
cmc
addb
or
mov
dec
jnp
mov
bound
mov
outsl
insb
shll
add
cmp
mov
push
add
ret
test
out
and
mov
fistpll
jle
adc
add
mov
outsb
out
pop
sub
sti
dec
and
and
mov
add
jl
imul
loop
mov
sub
add
adc
mov
xchg
push
add
mov
cli
jns
js
or
out
lods
mov
xor
lds
xchg
mov
sbb
out
jb
mov
dec
adc
fldenv
mov
push
js
lcall
sti
aas
mov
mov
popf
xchg
xchg
lds
sti
cmc
mov
add
mov
pop
inc
adc
or
and
cmpsl
or
data16
inc
add
fimull
add
adc
mov
mov
xor
mov
add
add
add
div
inc
icebp
add
imul
push
sub
mov
add
push
cmp
add
cltd
add
cmpsb
jle
dec
push
add
jg
add
mov
mov
sbb
jb
mov
push
fiadds
lahf
xor
mov
clc
ljmpw
xchg
adc
mov
mov
jle
mov
and
out
lret
mov
jge
adc
mov
xchg
mov
mov
scas
mov
xor
mov
dec
rolb
mov
test
cmc
loop
mov
jl
mov
aas
inc
xchg
jbe
add
sbb
adc
rolb
push
add
mov
cmc
or
rol
aad
adc
jp
adc
loop
mov
call
popa
xor
xchg
mov
outsb
push
or
cli
cmpsl
push
js
add
leave
sub
arpl
mov
popf
push
dec
xor
mov
cli
addb
popf
cli
out
push
xor
repz
inc
and
jnp
repz
mov
sti
mov
dec
push
pop
fcoms
pop
xchg
fiaddl
mov
sbb
mov
inc
and
cwtl
sbb
loopne
mov
pop
aad
adc
popa
and
mov
mov
daa
aas
jg
add
or
mov
repnz
cmp
loopne
mov
add
mov
mov
aas
sub
pop
gs
loopne
mov
ficoml
xchg
push
push
shl
add
add
dec
mov
add
gs
sub
jge
divb
add
mov
add
data16
xchg
mov
pop
mov
mov
add
in
les
mov
int3
dec
pop
lret
add
cmove
add
je
push
adc
mov
fildl
repnz
pop
dec
test
or
add
bound
mov
jnp
fisttps
xor
mov
pop
cmp
frstor
aaa
int3
cli
fwait
xchg
sti
flds
jb
mov
lods
add
mov
add
mov
iret
sub
sbb
sub
popf
inc
addb
mov
test
and
mov
dec
loope
xor
pop
push
xchg
cmp
mov
pop
loop
mov
test
mov
add
pmaxub
dec
lahf
push
sbb
add
add
and
mov
add
add
call
mov
in
stos
in
inc
xor
imul
out
mov
push
test
lods
insb
lahf
push
orl
jg
ljmp
add
pusha
add
sbb
jne
sub
sub
pusha
add
mov
add
xchg
xchg
subl
mov
mov
push
bound
mov
clc
bound
mov
add
cltd
adc
cmp
jl
xchg
addb
fcoml
jb
mov
and
pop
jge
mov
mov
add
xlat
fdivrp
add
mov
stos
xchg
add
in
out
pop
lret
sbbl
pop
aam
cmp
addb
jne
xor
or
mov
mov
data16
notl
pop
fistpl
fdivrl
insb
push
ret
mov
pop
or
es
mov
in
jmp
not
jl
insl
cmp
nop
add
xor
mov
popf
les
add
push
pop
mov
add
mov
mov
lock
mov
pop
sahf
push
add
dec
xchg
add
mov
or
add
fdivr
mov
stc
rolb
mov
or
shll
cmp
adc
ja
add
add
test
repnz
imul
and
icebp
push
cmc
fisubl
cmp
dec
xor
mov
add
mov
mov
movsb
dec
shrl
js
in
add
mov
out
inc
lcall
mov
jns
in
addb
gs
or
bswap
and
push
add
mov
cwtl
mov
add
add
add
stos
or
sbb
in
adc
mov
fcmovnb
add
jno
push
mov
push
cmp
rolb
mov
add
add
or
jl
imul
jg
cmp
sub
mov
gs
mov
cs
in
xchg
inc
cmpsb
sub
inc
pop
push
sbb
pop
xlat
sbb
push
addr16
cmp
mov
aas
and
aam
sbb
movsl
mov
fisubrl
add
pop
aad
nop
add
xor
add
add
adc
add
test
mov
and
mov
arpl
dec
pushf
add
jecxz
enter
negl
xchg
test
int3
fdiv
jg
cltd
mov
sub
xor
mov
mov
ss
fcomip
push
ljmp
xor
out
aam
xor
mov
sbb
fcoms
and
adc
mov
mov
sbb
mov
and
addb
data16
mov
and
pop
pop
frstor
mov
mov
mov
cmpsb
xor
add
mov
neg
out
aad
inc
mov
mov
lret
push
add
jl
fsubrl
imul
je
add
sbb
fdivrs
add
ret
mov
xchg
add
mov
std
call
add
addb
outsb
out
cmpsb
lds
cmp
jno
add
int
test
add
push
divl
mov
mov
mov
in
and
mov
cwtl
pusha
add
xchg
push
add
add
aad
sub
jg
cmc
int3
dec
add
mov
and
mov
mov
inc
popa
jbe
in
mov
addr16
mov
add
mov
xor
xchg
mov
test
adc
jg
hlt
cmp
add
mov
add
pusha
add
mov
mov
fwait
pop
in
push
add
mov
or
mov
push
dec
jl
inc
imul
add
mov
repnz
add
mov
and
pop
mov
jnp
add
sub
push
rcll
stos
roll
add
pop
aas
jmp
test
pop
xor
mov
scas
mov
add
bound
mov
mov
lea
push
sbb
mov
aaa
ljmp
std
jo
mov
enter
add
das
lock
lahf
jg
mov
cli
and
sbb
std
mov
push
sub
mov
mov
cwtl
loopne
mov
mov
or
mov
sti
dec
jl
mov
int3
cmpsb
and
movzwl
rolb
mov
je
sub
lret
xor
add
add
movsb
jge
or
mov
mov
inc
nop
add
jmp
inc
add
cmp
jmp
add
mov
add
sub
mov
or
mov
mov
dec
mov
outsl
inc
icebp
jmp
mov
loope
inc
daa
inc
rcrl
pop
bound
mov
cmc
add
mov
jb
mov
inc
mov
loopne
mov
push
outsw
xchg
test
mov
or
lock
addb
cmpsl
jb
mov
dec
dec
sbb
aam
or
outsl
ret
enter
adc
mov
inc
cmp
in
enter
mov
data16
and
or
iret
pop
push
insb
push
inc
add
add
ds
add
aam
pop
ljmp
add
and
add
add
mov
icebp
lea
or
sar
pop
xchg
add
mov
xor
add
scas
sbb
pop
pushf
hlt
sub
int
mov
jns
cmp
aam
fstpt
add
lahf
push
add
push
mov
ret
repz
dec
mov
loopne
mov
cmp
fiaddl
cmpsl
loopne
mov
sbb
nop
add
xor
mov
mov
daa
sbb
ljmp
lret
push
movsl
arpl
roll
mov
mov
lods
negl
or
inc
test
adc
add
add
mov
mov
cmpsl
push
adcl
or
add
lods
leave
add
mov
add
push
inc
add
cmp
xlat
clc
push
sub
add
add
call
mov
cltd
ret
js
add
add
test
jle
jno
rolb
mov
in
mov
sub
in
pop
lock
repnz
loop
mov
es
mov
push
jmp
test
ja
and
iret
je
and
mov
hlt
lods
mov
inc
decb
push
cmp
outsb
out
mov
lods
mov
mov
lea
inc
or
ljmp
mov
mov
mov
fisubl
mov
leave
bound
mov
push
fisubl
jb
mov
mov
mov
mov
pinsrw
rolb
mov
mov
cld
test
outsb
push
sti
xorl
jg
icebp
lock
mov
or
imul
jnp
add
mov
jmp
mov
push
sub
cmp
add
mov
xor
add
lods
das
inc
mov
mov
and
mov
adc
mov
add
xchg
mov
xor
mov
pop
or
cltd
call
add
push
addb
sub
push
adc
mov
xlat
sbb
cmp
xchg
add
add
add
mov
fistl
add
flds
jb
mov
rorl
rdpmc
rcrl
int
add
mov
pop
enter
test
insl
and
mov
fstps
xlat
arpl
pushf
shrl
mov
lcall
lods
les
sub
add
or
mov
filds
xchg
pop
pop
enter
lods
mov
mov
xchg
mov
xchg
ljmp
mov
rolb
mov
or
ja
test
mov
add
cmc
cmp
mov
push
bound
mov
adc
stos
inc
add
xor
mov
cmp
add
mov
add
ss
xchg
rolb
mov
sub
xchg
and
add
mov
hlt
mov
mov
aam
push
cmp
addl
and
mov
mov
pop
repz
andl
out
add
aaa
std
cmp
add
add
push
adc
aas
sub
add
add
hlt
sbb
pop
sbb
add
mov
inc
loope
mov
mov
in
mov
mov
pop
jae
and
mov
jl
test
jno
add
inc
rol
jae
sub
add
addb
cs
adc
mov
mov
enter
mov
addb
jmp
add
pop
repz
cmp
stc
jmp
jns
and
add
cld
popf
test
repz
sbb
xor
mov
movsb
popa
add
mov
aad
cmp
rolb
mov
jae
popf
imul
cltd
mov
aaa
xchg
loope
dec
sub
loope
sahf
pop
sub
in
xchg
enter
pusha
add
mov
mov
mov
inc
repz
push
sub
fistpl
fidivrl
add
mov
out
lds
add
mov
mov
inc
stos
adc
mov
idiv
ret
mov
and
jle
cld
xor
add
dec
mov
negl
test
daa
fadds
repz
pushf
hlt
adc
mov
in
icebp
mov
sbb
scas
cmp
or
add
add
addr16
or
cmp
push
cs
pop
ret
xor
mov
fwait
pop
loope
imul
lret
popf
jmp
daa
push
jecxz
fbstp
mov
daa
adc
mov
or
fsubs
add
mov
mov
add
mov
cmpsl
adc
je
ds
daa
jp
and
pop
xor
movsb
mov
icebp
lods
lahf
rolb
rcr
add
sub
pusha
add
add
xor
pop
mov
pop
daa
lret
or
mov
xor
ret
mov
das
add
mov
sbb
add
rorl
push
xor
ljmp
jmp
push
and
mov
fnstenv
popa
repz
mov
shl
shrl
add
mov
mov
pop
pop
xor
mov
jmp
sub
add
add
mov
and
adc
mov
outsl
fbld
push
test
sub
ficoml
mov
adc
mov
ret
pop
or
pop
xchg
mov
fxch
dec
stc
mov
mov
add
iret
mov
cli
pop
and
nop
add
or
add
sbb
lret
add
sub
add
xlat
cmp
add
mov
std
sub
nop
add
jnp
leave
fldenv
cmpsl
pop
xor
push
cltd
jbe
addb
addb
add
mov
addb
pop
loopne
mov
xor
add
mov
xchg
into
testb
add
dec
and
add
mov
mov
xchg
mov
add
rolb
mov
enter
mulb
sbb
add
add
add
xor
lock
mov
mov
add
iret
int3
fiaddl
daa
pushf
icebp
adc
mov
add
mov
add
dec
jl
add
dec
adcl
fs
jle
std
adc
xor
mov
mov
out
push
lcall
pop
cmpl
mov
mov
repz
mov
xchg
and
mov
adc
and
mov
aam
sub
or
repnz
out
jns
mov
push
cmp
fisttpll
add
mov
and
mov
mov
add
loope
xchg
add
frstor
popa
stos
sub
arpl
lret
es
pop
fs
and
mov
add
adc
mov
ffree
cmpsb
fwait
mov
add
loopne
mov
sbb
mov
test
ret
rolb
rolb
mov
stc
rep
dec
imul
mov
jbe,pt
add
xor
fmul
ffree
lcall
adc
pop
aad
aas
pop
loop
mov
add
clc
scas
dec
cmp
add
mov
stos
in
inc
add
add
mov
arpl
push
mov
fidivrs
movsb
lret
mov
lea
adc
dec
mov
fisubrs
daa
jo
mov
add
push
je
mov
stos
out
pop
arpl
add
sahf
loop
mov
mov
push
push
xor
insl
mov
push
or
leavew
push
pop
lret
mov
add
inc
pop
test
sbb
cmpsl
pop
push
add
aad
stos
pop
or
add
xor
jbe
push
cmpsl
lods
ret
pop
popa
jecxz
addr16
repnz
addb
bound
mov
sbb
xchg
ret
daa
orl
test
fists
add
nopl
lret
add
mov
inc
mov
sbb
mov
cmc
loopne
mov
ficompl
add
add
cmpsl
cltd
movb
loope
add
adc
cltd
jns
lods
xor
mov
pop
outsb
insb
dec
test
mov
mov
add
in
adc
cmp
cltd
gs
add
add
psrlw
cmp
add
into
cli
addb
out
je
xchg
pop
ds
mov
mov
js
xor
push
aaa
movsb
dec
popa
insl
add
add
mov
add
add
add
add
xchg
ds
jg
or
andl
dec
mov
movsb
add
mov
mov
add
fucomip
jne
mov
lret
mov
add
mov
insl
add
fcomi
add
sub
fwait
jp
pushf
xchg
xchg
add
xorl
push
fcoms
and
sti
scas
lahf
push
add
and
sbb
std
repnz
add
mov
add
adc
jge
out
push
test
repnz
test
or
scas
add
add
mov
dec
in
inc
add
sub
rolb
mov
push
push
jne
mov
add
mov
jge
popf
add
ss
mov
add
pop
dec
jbe
lock
inc
xor
sbb
mov
lahf
push
adc
add
xchg
mov
cmc
loopne
mov
add
mov
icebp
xor
and
shrl
lea
hlt
call
and
mov
lock
jmp
fsubl
enter
out
or
aad
lret
ficomps
sbb
out
inc
cmovns
pop
xor
mov
mov
inc
add
mov
ret
cmp
add
jl
push
xor
aam
rorl
int
aam
mov
mov
lock
push
add
push
in
jp
cmp
sub
push
jo
mov
jo
mov
pop
adc
sub
rol
add
test
inc
aam
mov
or
cmp
or
add
mov
mov
adc
add
mov
insl
xor
stos
lock
test
movsl
pusha
add
xor
sub
add
mov
loopne
mov
scas
sub
incb
add
movsb
stos
add
sub
add
add
nop
add
rolb
loope
add
rcr
repnz
jbe
pusha
add
mov
push
or
sbb
push
xor
mov
mov
or
jmp
cwtl
icebp
cltd
adc
mov
mov
mov
cwtl
jge
pop
push
int
jecxz
scas
shrd
addb
js
rcll
push
push
dec
out
add
mov
mov
mov
cs
add
cs
addb
cmp
mov
adc
pop
push
add
mov
mov
mov
inc
add
out
clc
lret
mov
add
fsubrp
xor
insl
mov
cs
sbb
xchg
in
mov
mov
add
stc
xor
dec
mov
jns
cmp
shll
jl
outsl
inc
add
mov
push
or
mov
jmp
addb
jp
aas
imul
sub
jl
jle
jnp
or
add
xor
out
stos
xor
dec
mov
imull
ret
ret
outsl
roll
sub
mov
mov
btc
mov
cli
iret
jbe
in
or
lds
insb
inc
cmc
mov
stos
lret
pop
pop
add
rolb
mov
sub
ret
fdivs
cmpsl
lret
aad
cmp
js
lock
dec
add
mov
add
push
addr16
jge
mov
add
sbb
ret
or
stos
inc
lret
sbb
std
aaa
je
add
aaa
sub
fildl
add
cmp
test
add
std
dec
inc
xor
ds
and
fnstenv
and
fldln2
fistps
test
es
cmp
jnp
outsb
dec
xor
jp
add
loopne
mov
add
push
jbe
lret
es
sub
add
popa
and
mov
loope
js
jl
mov
sahf
xchg
jns
and
sub
imul
adc
scas
jnp
cmp
cmpsb
or
jns
push
icebp
xor
mov
add
ret
or
mov
je
push
add
jo
mov
add
mov
in
jns
mov
int3
subl
add
add
ss
inc
xor
sub
mov
xor
pop
and
mov
repnz
movsl
mov
ss
imul
add
jb
mov
adc
mov
nop
add
ja
cmp
rolb
mov
cmp
lods
push
add
notl
xor
mov
xlat
test
add
popa
js
add
out
jne
push
add
movsl
push
dec
mov
loopne
mov
add
out
and
in
gs
pop
pop
add
mov
cmp
add
fcomi
add
and
and
and
mov
cwtl
jns
add
mov
xchg
mov
ljmp
xchg
es
sub
call
add
xor
mov
add
mov
cmp
mov
in
adcl
mov
push
lahf
gs
aas
rolb
mov
xchg
add
fstpt
xchg
out
scas
aas
test
or
movsb
xchg
add
mov
mov
cwtl
inc
pop
cmpsb
jp
adc
mov
es
xor
add
addr16
add
mov
dec
lea
dec
push
add
mov
rorl
imul
scas
push
dec
test
add
xchg
push
iret
cmpsl
adc
mov
mov
add
add
test
mov
rolb
push
lods
aad
jns
inc
clc
aas
addr16
adc
xor
es
push
shl
add
mov
lret
jecxz
add
add
test
clc
inc
pop
mov
or
stc
fiadds
jle
cmp
add
dec
jmp
in
fsubrl
arpl
scas
xchg
sbb
mov
dec
jbe
les
mov
dec
add
fmulp
cmp
lods
xchg
mov
mov
mov
xor
or
mov
sbb
add
daa
jp
jmp
add
mov
jmp
call
add
mov
daa
sbb
xor
sub
dec
cld
lock
sub
adc
mov
cli
stos
mov
mov
mov
out
cli
add
mov
add
and
orl
mov
and
add
add
mov
repz
add
dec
lds
sub
test
push
add
bound
mov
mov
add
mov
or
push
lds
push
add
jp
add
add
mov
divl
mov
push
pusha
add
call
aas
mov
and
dec
repnz
mov
cmpsl
popa
gs
popf
xlat
xor
mov
fwait
inc
add
call
and
mov
add
int
add
mov
sarl
mov
cmc
in
mov
add
loopne
mov
test
mov
add
jge
jae
or
add
jb
mov
xchg
pushf
xchg
inc
jb
mov
out
add
aaa
push
add
mov
jp
jns
fistl
icebp
sahf
cmp
cmp
clc
mov
add
cwtl
dec
dec
repnz
jecxz
cmpsl
jecxz
add
adc
mov
mov
or
pushf
push
imul
movb
pusha
add
lods
mov
xchg
add
sti
arpl
add
sbb
sahf
daa
xlat
les
outsl
or
cltd
mov
sub
lret
add
jns
shll
inc
add
addr16
sub
xchg
inc
dec
mov
bound
mov
leave
addb
rcl
sbb
add
lods
repnz
mov
sub
out
xor
mov
jns
inc
add
dec
lea
xchg
js
add
add
push
push
in
scas
out
mov
mov
push
sbb
dec
add
sub
xchg
or
add
and
add
jmp
pop
jne
popf
cltd
push
les
addb
add
mov
add
es
scas
dec
lds
add
mov
mov
lret
pop
pop
pop
sbb
sbb
dec
aam
push
addb
scas
xlat
and
push
add
xor
mov
fs
dec
stos
les
add
mov
or
es
mov
xchg
dec
mov
outsl
pop
inc
adc
mov
enter
mov
cmp
lret
mov
scas
loope
pop
lods
cmp
mov
insb
mov
mov
adc
mov
cld
cmpl
mov
add
idivl
add
adc
inc
pop
pop
jns
mov
mov
gs
dec
and
mov
add
test
sbb
arpl
pop
adc
push
add
push
shll
cwtl
sbb
push
adc
inc
sbb
mov
push
jns
loop
mov
mov
adc
mov
sbb
sub
jnp
add
xor
mov
dec
inc
add
outsl
push
add
push
pop
cld
mov
inc
imul
mov
mov
add
cmp
mov
and
push
add
mov
rorl
inc
insl
and
add
add
out
cmpsb
fwait
arpl
mov
int
and
add
scas
ljmp
dec
mov
test
push
aam
repz
push
je
das
xor
loop
mov
push
insb
jb
mov
xchg
xor
int3
mov
xor
add
mov
jmp
xor
mov
and
in
xor
mov
and
popa
dec
xor
mov
xchg
mov
testb
mov
pusha
add
mov
add
xor
mov
inc
popa
lret
in
nop
add
sbbl
mov
mov
pushf
daa
adc
mov
dec
mov
into
aas
fwait
xchg
jae
pushf
adc
mov
loop
mov
or
pop
sub
out
jmp
add
mov
or
xchg
adc
add
mov
movsb
aaa
jge
sbb
mov
mov
mov
mov
ljmp
mov
into
insb
cmp
insl
pop
aaa
sub
mov
or
mov
add
push
and
test
popa
xor
mov
lahf
clc
movsb
inc
sbb
dec
xchg
ljmp
scas
icebp
into
push
jne
rolb
mov
mov
int3
leave
paddsb
add
cmp
popf
inc
loope
add
loope
pop
daa
mov
or
adc
clc
push
rolb
mov
mov
cmp
mov
mov
fwait
pop
jp
add
sub
cli
inc
popl
dec
outsb
cmp
adc
mov
add
jns
or
add
out
jl
add
mov
xchg
mov
sbb
inc
dec
xor
lret
sbb
out
xchg
cmp
mov
fcmovnb
jns
add
mov
add
out
mov
and
mov
push
insl
sbb
sbb
and
mov
stos
adc
mov
loopne
mov
xchg
mov
mov
pop
and
mov
add
push
ja
jle
mov
dec
in
pop
faddl
testb
or
repz
in
cmp
pop
loopne
mov
add
out
add
mov
lods
into
inc
test
add
xor
into
adc
int
addl
mov
clc
jg
mov
test
push
out
mov
and
mov
jmp
jg
int
add
movsb
mov
add
or
stos
js
into
and
add
push
stos
outsb
xor
add
jne
in
adc
add
cmpsb
test
jns
add
xchg
add
mov
add
add
dec
std
mov
lea
add
jecxz
cmp
add
pop
sub
insb
aaa
and
mov
das
fdivs
add
gs
pop
insb
mov
mov
jmp
scas
sbb
pop
jne
xor
into
idivb
mov
add
inc
sub
inc
mov
mov
dec
sub
out
push
ljmp
mov
scas
aad
add
adc
add
out
je
jae
mov
add
add
add
dec
int
add
add
dec
inc
sarl
add
pop
push
fmull
mov
cs
push
cs
addr16
repnz
outsl
stc
push
xchg
jmp
sub
addr16
inc
add
add
xchg
cwtl
jnp
add
pop
imul
jae
addb
cwtl
lret
dec
xchg
or
divl
jmp
mov
outsb
dec
xor
mov
add
mov
sbb
out
inc
sub
cld
inc
xchg
stos
es
negl
pop
cmc
xor
mov
es
enter
shll
cmp
adc
inc
add
lea
bound
mov
add
push
dec
mov
frndint
cmpsl
call
add
mov
lea
testb
imul
add
mov
inc
or
arpl
cmc
cmp
add
dec
ja
test
fimull
add
in
sbb
mov
addr16
mov
sub
mov
aaa
in
loope
mov
js
rolb
mov
jo
mov
pop
push
jmp
mov
cmp
mov
sub
inc
add
ret
pop
mov
jne
lret
cmp
fcmovne
ret
test
stos
les
aam
imul
mov
rolb
repnz
pop
dec
or
mov
stos
aaa
subl
jbe
popf
xor
mov
ret
and
sbb
add
pop
into
out
add
add
mov
dec
sahf
bound
mov
xchg
jge
je
cmpsb
inc
add
mov
iret
and
jge
cwtl
lret
jg
imul
mov
sub
mov
mov
scas
sub
mov
fld
and
mov
add
push
sub
xchg
or
mov
mov
add
lcall
sub
dec
xorl
push
adc
mov
jbe
out
sbb
add
sbb
add
mov
xchg
in
adc
js
add
mov
add
mov
addr16
push
leave
fwait
test
lcall
adc
mov
add
jae
pop
into
mov
push
pop
push
int
mov
mov
hlt
xor
outsl
dec
cmp
xchg
xor
out
push
add
lea
add
mov
mov
adc
pop
dec
mov
shrl
push
push
cmp
mov
mov
mov
adc
popa
mov
mov
cmpsl
push
push
add
add
inc
push
subl
fdivrs
add
mov
js
pop
mov
fildll
inc
cmp
decb
movsl
lahf
sahf
dec
cmp
mov
mov
movb
popa
cmp
cltd
or
add
fwait
mov
add
add
add
add
dec
mov
pop
je
add
push
mov
ja
frstor
sub
add
div
add
sub
add
mov
xchg
adc
mov
push
lret
cmp
cmp
js
int
subl
mov
mov
cmpsb
mov
xor
mov
jmp
icebp
xchg
add
add
cmpsb
stc
daa
add
mov
add
mov
dec
roll
outsl
adc
mov
fstl
cmp
adc
pushf
sub
sbb
add
mov
cmp
out
aas
jl
sub
imul
push
jmp
or
mov
in
ljmp
jbe
movsb
push
mov
push
mov
pop
add
jns
lods
push
pop
mov
add
loope
add
adc
mov
adc
pop
mov
sti
in
outsl
mov
sub
aaa
cld
cmc
insl
daa
jle
not
push
and
mov
cmp
lret
and
add
jmp
pop
push
adc
add
pop
aas
mov
pusha
add
data16
cmpsl
jae
out
inc
add
sub
mov
push
add
mov
push
xchg
and
mov
xor
mov
out
pop
push
and
inc
mov
xor
mov
mov
mov
mov
and
mov
rolb
mov
aad
mov
fisttpl
sub
jg
add
popa
dec
inc
mov
aam
add
test
mov
push
add
pop
add
dec
hlt
and
mov
scas
movsl
sbb
movsl
xor
cmpsl
rcrl
rolb
mov
mov
jge
pop
xchg
jns
loope
add
adc
ret
jp
xchg
ss
sbb
fucomip
inc
add
add
xchg
jmp
jb
mov
mov
out
add
dec
scas
sbb
inc
cwtl
movhps
mov
lea
sbb
in
cmpl
add
mov
jnp
popa
mov
stos
fisubrl
in
cmp
add
mov
inc
stos
lea
mov
dec
sub
jg
add
and
dec
pop
shl
add
push
and
mov
mov
dec
or
lock
mov
stc
lds
add
sbb
std
or
mov
pop
lahf
repz
pop
test
jmp
popf
push
leave
scas
shr
mov
andl
mov
xchg
add
add
push
add
mov
jge
lcall
add
push
mov
pop
call
movsl
adc
mov
push
cmp
mov
mov
add
mov
mov
out
xor
mov
adc
mov
and
scas
ljmp
jp
pop
popa
es
add
insl
cld
pushf
mov
jge
inc
pusha
add
movsl
stos
popf
rolb
mov
dec
out
leave
nop
add
pushf
aad
add
mov
pop
sbb
icebp
arpl
jne
push
inc
pop
jns
add
mov
lahf
mov
addr16
push
movsl
cmpsl
cmp
push
and
mov
stos
sbb
sub
mov
mov
popf
fstp
repz
add
cmc
jbe
rolb
ret
ret
xor
mov
in
dec
pop
mov
lods
cmp
mov
cmp
adc
mov
add
outsl
sbb
insl
imul
fs
cli
jg
xor
mov
cltd
mov
outsb
mov
mov
repnz
pop
loopne
mov
fisttpl
rolb
iret
sbb
add
xor
mov
sub
add
mov
scas
inc
sbb
jbe
pop
shl
jo
mov
jnp
mov
push
in
rcrl
int
add
mov
add
or
push
js
test
cli
sbb
push
dec
loopne,pt
mov
adc
push
fs
clc
pop
lahf
cmp
adc
jae
iret
xchg
jp
imull
cmp
add
clc
add
add
das
into
push
add
fisttpll
in
cmp
aam
pop
inc
or
fldcw
mov
and
mov
mov
es
mov
mov
push
inc
pop
add
lods
cmpsl
pop
add
mov
dec
push
add
add
mov
add
nop
add
add
sbb
inc
add
add
insb
jmp
add
lods
dec
xlat
in
movsb
lret
xchg
insb
xor
mov
out
rolb
data16
ljmp
fsubl
cmc
add
mov
mov
jle
fs
in
pusha
add
adc
pop
lds
mov
dec
or
scas
sub
repz
jle
mov
jne
adc
add
nop
add
pop
in
cmc
outsl
add
mov
je
fidivl
xor
mov
push
add
and
cmpsl
jecxz
insl
mov
ss
popa
iret
inc
std
add
mov
add
sti
adc
mov
or
add
mov
sub
sbb
sub
mov
dec
aam
xchg
add
mov
add
iret
pop
and
mov
add
test
jge
test
clc
test
clc
enter
leave
push
add
add
inc
push
mov
gs
inc
and
mov
push
add
dec
fadds
test
add
add
inc
data16
fnstsw
mov
adc
mov
arpl
les
addb
sbb
je
lds
pop
aam
int
dec
push
add
addr16
push
popa
push
lock
dec
mov
adc
mov
add
cmpsb
dec
mov
mov
mov
add
cltd
inc
add
push
inc
adc
mov
int
add
stos
pop
add
cmc
add
inc
add
in
bound
mov
cmp
cmp
je
push
pop
xchg
inc
movsb
sbb
rcrl
rolb
xchg
ss
add
mov
mov
or
addb
sub
xor
mov
cli
test
and
mov
aaa
mov
mov
sbb
xchg
mov
ret
jg
addr16
mov
mov
je
add
add
add
or
add
add
dec
xchg
mov
mov
add
mov
lods
mov
add
rol
xor
and
mov
push
add
dec
loop
mov
add
stos
xlat
mov
xor
add
mov
loope
jno
call
push
test
mov
and
mov
push
add
cmp
in
aas
jl
adc
mov
in
sub
fs
and
cmc
movsl
aad
das
rcll
mov
add
aad
ss
pop
add
add
ja
push
scas
lods
dec
lods
mov
jge
inc
pop
adc
mov
dec
decb
mov
cltd
scas
dec
xor
mov
xor
mov
fistpll
mov
in
xor
sbb
das
sub
cmpsl
cld
add
mov
adc
scas
out
inc
adc
jl
add
loopne
mov
and
push
loop
mov
adc
mov
adc
bound
mov
inc
add
leave
loopne
mov
add
mov
insb
mov
mov
mov
sti
xchg
mov
lods
ret
jnp
sub
mov
fildl
inc
add
cmpsb
daa
jle
sbb
sbb
mov
cmp
push
dec
adc
mov
xchg
insl
filds
sbb
mov
dec
sbb
dec
xchg
mov
xchg
add
iret
out
bound
mov
add
cmp
mov
mov
add
pop
dec
insb
lahf
xor
xor
mov
js
add
jns
adcl
outsb
adc
mov
fisttpll
hlt
std
repz
mov
rolb
mov
add
mov
lods
mov
sbb
add
mov
ds
cmpsl
mov
add
add
pop
arpl
dec
scas
mov
imul
pushf
or
add
or
dec
arpl
push
add
lods
add
repnz
or
mov
dec
shll
add
add
dec
pop
rolb
mov
add
insb
jp
and
mov
sbb
add
mov
push
lret
decl
cwtl
pop
mov
dec
mov
add
mov
mov
add
and
dec
mov
outsl
rol
das
insb
pop
pop
nop
xor
movsl
jae
add
repz
add
cmpsl
jmp
cmp
cmpsl
push
out
add
in
and
aad
int
add
or
push
dec
adc
mov
dec
shll
rolb
mov
daa
jns
jmp
add
jns
xchg
lods
add
mov
push
in
mov
jl
aam
pop
in
gs
sub
lea
sbb
mov
mov
add
xchg
jp
ss
add
ss
ret
cltd
cmc
sbb
movsl
lods
addr16
enter
jo,pn
mov
add
stos
test
push
inc
or
mov
fistl
mov
dec
mov
imul
shll
out
out
sub
nop
add
pusha
add
mov
mov
adc
mov
test
cmp
scas
push
pop
addb
push
imulb
mov
push
into
and
rcll
test
bound
mov
movb
mov
add
pop
sub
add
std
xchg
ret
cs
jb
mov
cmp
test
jmp
arpl
xor
mov
cli
xor
mov
dec
push
add
add
add
add
jns
add
movsl
les
push
ja
or
lds
dec
shr
loopne
mov
mov
lret
mov
mov
cltd
add
add
add
sbb
not
mov
add
test
xor
pusha
add
pop
push
add
jge
lods
rolb
mov
sub
mov
jle
fistps
push
mov
addl
xor
cmp
loopne
mov
mov
jp
mov
and
add
mov
and
mov
add
fwait
jo
mov
xchg
dec
sub
and
mov
mov
add
ret
or
cld
rolb
jge
icebp
in
imul
dec
mov
cmp
out
stos
or
in
push
fsubrl
movsb
xchg
lcall
rolb
mov
push
add
push
xor
mov
out
add
and
add
mov
cmc
addr16
ds
adc
add
inc
lods
add
mov
mov
pop
cmp
fdecstp
fsubrp
pop
out
out
mov
pop
adc
add
add
add
xchg
add
int3
push
pop
dec
add
mov
das
daa
xor
mov
in
enter
mov
mov
and
mov
jmp
stos
mov
xor
popf
out
pop
ds
cmp
mov
jl
movsb
aas
ds
and
mov
mov
movsb
mov
mov
movsb
aaa
push
add
mov
xcrypt-ofb
cmpsl
in
mov
movsb
popa
jge
add
mov
inc
add
push
fxch
gs
int
movsl
mov
loopne
mov
sahf
push
mov
mov
bound
mov
sbb
lods
jmp
mov
mov
hlt
shll
xchg
jne
pop
jmp
or
mov
dec
sbb
pusha
add
inc
xchg
adc
mov
xchg
pop
das
movsl
sbb
mov
add
test
mov
cld
cli
jmp
addr16
xor
mov
shrl
dec
xor
xor
inc
cmp
addb
adc
fwait
xlat
test
mov
insb
cmc
mov
jl
addb
sub
add
and
xor
push
data16
add
push
outsb
xor
mov
test
mov
add
mov
add
mov
addb
lret
cld
sub
mov
add
sub
pop
ljmp
scas
mov
das
mov
sbb
cmp
test
subl
pop
and
add
jbe
testl
mov
ljmp
pop
cmpsb
xchg
add
add
jo
mov
scas
xor
mov
mov
test
fwait
mov
add
out
jmp
xor
add
jbe
add
jno
or
ss
xor
mov
inc
cltd
or
push
xor
movsl
fisttpll
jnp
xchg
mov
add
int3
xchg
loope
add
lods
pop
and
mov
hlt
or
mov
mov
into
out
loop
mov
inc
mov
add
lcall
add
adc
mov
loopne
mov
mov
pop
leave
xchg
pop
inc
push
aas
pop
and
xchg
sbb
xor
mov
inc
add
stos
xor
mov
adc
repz
loop
mov
add
dec
repnz
outsl
loope
mov
sahf
iret
loope
xchg
aad
enter
mov
push
add
rol
xor
pop
sub
mov
cld
lret
sub
add
mov
mov
jbe
add
in
mov
cmpsb
or
sbb
cli
pop
lds
push
push
pop
xlat
xchg
data16
mov
mov
adc
in
xor
adc
cmp
add
les
ret
test
adc
pop
pop
xchg
or
js
jns
rolb
mov
outsb
out
cmc
imul
mov
cmpsb
push
add
jge
add
rorl
cld
mov
xlat
dec
mov
mov
cmp
mov
add
add
jnp
push
inc
add
and
add
std
xlat
xor
mov
jae
and
mov
jo
mov
add
or
dec
jno
xchg
xchg
mov
fisttps
dec
lret
push
pop
dec
js
cli
adc
add
rolb
dec
cltd
leave
out
movsb
mov
add
add
mov
xlat
add
xchg
in
jae
add
mov
mov
adc
pop
sub
ds
push
lret
add
ja
ja
lcall
pop
orl
test
ret
ds
test
sbb
out
in
mov
inc
add
and
pop
rolb
mov
cwtl
sbb
sbb
mov
ret
push
ja
or
call
push
mov
ss
rolb
mov
adc
mov
cs
nop
add
mov
aam
repnz
pushf
scas
js
add
call
add
mov
push
pop
mov
cmp
jnp
ret
ret
ds
sbb
pop
jg
rolb
pop
outsb
je
inc
add
imul
or
ret
sub
dec
jae
inc
mov
lret
mov
mov
mov
mov
loope
loopne
mov
pushl
mov
mov
mov
sub
nop
add
mov
repnz
repnz
jp
jp
jge
setge
mov
adc
adcl
leave
stos
cmpsb
inc
xchg
iret
aaa
xor
mov
xchg
mov
nop
add
and
mov
add
mov
aas
cld
imul
add
mov
addb
or
imul
add
mov
mov
dec
inc
add
mov
pushf
cli
lahf
stos
dec
or
jg
push
hlt
stos
movsl
ds
push
add
cmp
add
mov
inc
mov
and
mov
add
jmp
dec
lea
movzbl
ja
outsl
out
lock
out
fmull
pop
inc
add
popf
add
add
jp
mov
add
movups
mov
mov
mov
inc
jge
xchg
addb
inc
std
mov
dec
call
outsl
test
rol
add
jmp
stos
fdivrl
jno
stos
push
mov
add
add
dec
int3
inc
je
add
push
test
add
mov
test
fisubrs
push
mov
jb
mov
add
pushf
ja
shll
stc
insl
jp
mov
into
or
stos
rcrl
add
or
lods
jg
add
xor
mov
sbbl
add
movl
shl
jns
and
mov
pop
add
cmp
inc
add
mov
add
mov
push
add
mov
xchg
jbe
jnp
jg
les
add
loope
mov
mov
popa
pusha
add
adc
mov
xor
lret
xlat
notb
aam
add
stos
xchg
clc
inc
cmp
pop
fwait
add
mov
test
mov
mov
test
jmp
add
pop
pop
in
je
mov
add
mov
adc
bound
mov
mov
pop
in
push
in
add
mov
or
add
cmp
mov
out
cmc
scas
fs
fisubrs
pop
mov
subl
push
add
pop
fs
and
add
xchg
shl
pop
das
pop
jmp
jne
add
pop
xchg
add
repnz
add
in
mov
mov
push
mov
add
int3
or
add
ret
repz
in
mov
mov
cs
add
inc
add
push
imul
add
mov
add
nop
add
je
xchg
int
pop
mov
aaa
jnp
dec
in
and
mov
addb
iret
xor
mov
fildll
add
pop
add
xchg
cmp
rolb
xor
in
sbb
xor
cli
and
xor
mov
add
mov
sub
test
data16
sarl
mov
repz
bound
mov
jo
mov
ret
mov
sub
pusha
add
push
fimuls
mov
add
cmp
jecxz
add
std
mov
mov
rolb
pop
pop
adc
mov
inc
mov
mov
mov
mov
adc
mov
mov
add
sahf
dec
iret
mov
mov
add
fsubr
filds
and
adc
mov
jns
inc
dec
ja
pop
add
add
mov
mov
add
mov
cld
push
add
or
add
cltd
fsubl
mov
inc
add
dec
sbb
inc
xor
aam
lahf
jg
add
jae
hlt
xor
mov
stos
lods
xchg
push
inc
add
mov
push
add
icebp
mov
in
fcmovbe
add
inc
je
cmp
mov
jle
addr16
cli
movsb
and
mov
ret
in
gs
mov
cwtl
jle
cmp
ret
mov
out
mov
add
sbb
add
lea
call
and
mov
out
xchg
rolb
cwtl
idivl
dec
jecxz
cmp
insl
pusha
add
inc
lret
inc
sbb
cs
pop
addb
mov
ja
mov
add
add
dec
fcoms
stos
mov
mov
and
cmp
cmpsb
xor
xlat
aam
ss
inc
test
and
add
jge
fnstenv
or
add
add
sbb
cli
pop
int
add
mov
test
dec
push
add
adc
mov
adc
mov
pand
xchg
ret
nop
add
push
push
and
mov
and
and
mov
lds
lret
mov
cld
push
cmp
scas
neg
rcll
ljmp
sub
ror
movsl
xchg
pop
dec
das
sub
jae
popa
jne
add
mov
add
mov
mov
dec
dec
xor
add
enter
add
jns
pop
adc
stos
push
add
mov
add
pop
call
push
add
test
mov
mov
push
test
jno
int3
inc
inc
add
lret
test
sub
pop
int
xchg
mov
jecxz
lret
cwtl
addb
insb
pop
add
mov
add
adc
sub
dec
pop
loopne
mov
lods
sahf
jl
std
xchg
add
test
push
add
jge
mov
jl
add
ret
sub
xlat
inc
pop
xchg
popa
pop
ja
add
insl
out
cmp
lahf
out
lret
add
jo
mov
cwtl
popf
outsb
mov
lock
push
push
addb
cli
dec
mov
add
mov
sub
inc
scas
pusha
add
mov
movsl
jae
sahf
dec
nop
add
push
mov
mov
add
push
fucomip
aas
scas
mov
in
pop
xchg
mov
jns
and
dec
jae
loopne
mov
push
push
inc
in
add
dec
test
push
pop
imul
mov
xor
cld
mov
inc
add
ret
xor
aas
push
clc
call
dec
movsl
stos
lock
mov
adc
jns
jo,pn
mov
stc
or
cmp
ss
mov
pop
and
mov
add
or
mov
dec
and
mov
add
push
gs
add
pop
sub
add
rcll
xchg
mov
cli
and
xchg
ret
dec
pushf
xor
mov
mov
add
cltd
or
mov
and
cmp
dec
mov
arpl
rolb
mov
xchg
stc
jbe
and
mov
jmp
mov
mov
xor
rorl
mov
pop
cmp
add
mov
and
add
in
adc
mov
cltd
jg
sub
xor
xor
fdecstp
les
mov
xor
aas
or
xor
push
adc
ret
clc
jl
add
mov
dec
pop
lds
dec
std
dec
rcrl
xor
or
les
ds
stc
cmp
adc
mov
sub
gs
mov
cmp
jne
or
add
sub
xor
add
sbb
add
mov
mov
xlat
and
inc
add
jb
mov
xor
xchg
pop
sbb
add
xchg
add
std
out
int
stc
add
clc
xchg
pop
test
inc
add
mov
xchg
push
rorl
push
repnz
daa
addb
add
xor
mov
mov
add
mov
popf
call
add
or
mov
jae
daa
mov
in
mov
sub
push
lods
or
bound
mov
das
inc
loopne
mov
cmp
fs
lock
pop
mov
iret
fcompl
mov
mov
add
scas
test
mov
int3
xor
mov
ret
sbb
xchg
bound
mov
add
add
add
mov
adc
mov
mov
loop
mov
jno
add
jne
rolb
mov
push
mov
cmp
std
and
loopne
mov
outsb
aam
pop
inc
inc
sbb
mov
lods
xor
mov
dec
test
cmp
iret
sub
add
pop
xchg
movsl
adc
mov
jno
loopne
mov
in
add
mov
test
addb
icebp
addl
lret
loope
ret
je
es
mov
xor
mov
jb
mov
hlt
fldenv
out
adc
sti
add
lods
inc
add
inc
add
cmp
adc
mov
aam
shll
filds
mov
add
or
pop
ljmp
add
add
mov
mov
cld
sbb
sub
fadds
mov
add
pop
daa
pop
fmulp
loopne
mov
outsb
lods
test
dec
outsl
mov
enter
add
mov
inc
add
in
loop
mov
and
mov
add
cmp
cld
sbbl
push
jbe
cld
movsb
dec
and
inc
adc
inc
add
add
mov
insb
dec
out
bound
mov
mov
outsl
scas
mov
std
mov
pop
iret
and
mov
mov
pop
xor
out
pop
scas
push
mov
out
pop
mov
mov
inc
add
push
daa
cs
out
adc
and
lret
enter
mov
add
rolb
mov
add
mov
mov
add
popa
xor
mov
mov
add
mov
enter
out
push
mulps
add
popa
adc
xor
add
aam
std
and
mov
and
add
fsubrl
add
andl
paddusb
add
mov
mov
sub
push
add
mov
popf
mov
cmp
cmp
int3
movsb
cmpsb
lock
jle
inc
add
das
push
add
mov
inc
push
cmp
mov
and
mov
ret
repz
jl
inc
out
add
repnz
data16
and
gs
sbb
shr
inc
adcl
push
ror
jl
or
mov
mov
add
add
mov
add
xchg
cmp
mov
or
jno
add
pop
add
in
shrl
or
pop
and
pop
adc
aaa
fcmovu
cmc
and
dec
out
push
sub
test
add
add
enter
add
push
xchg
pop
cwtl
imul
je
fcmovne
out
cmpsb
test
push
adc
les
outsl
jge
mov
scas
sub
inc
add
xlat
call
mov
mov
mov
cwtl
sub
mov
mov
mov
mov
xchg
clc
scas
add
out
popa
js
pop
fwait
sub
in
mov
ficoms
ret
xor
popa
push
lret
sbb
xchg
insl
cmpsl
jne
pushf
fs
fistpl
gs
pop
je
or
mov
out
xchg
int3
pop
leave
cs
and
mov
jmp
scas
jp
mov
jecxz
jnp
sbb
rolb
mov
mov
inc
mov
mov
lods
add
cmp
mov
out
in
test
jbe
add
lahf
aam
data16
sub
and
mov
or
push
movq
call
and
stos
fdivs
cmp
je,pt
fwait
xor
push
mov
push
push
bound
mov
mov
add
stos
out
stc
fwait
sub
add
inc
xlat
scas
hlt
jae
test
aas
hlt
or
inc
add
mov
hlt
cmpsl
jbe
mov
in
ffree
jo
mov
add
int3
dec
ret
dec
inc
dec
fstp
jbe
add
rolb
repnz
mov
add
ret
inc
push
xor
nop
add
adc
mov
mov
in
push
ja
xchg
fistpll
sub
imul
vpmaddwd
lock
mov
cmpsb
fs
fmuls
jno
fistl
fwait
add
add
clc
enter
and
cwtl
inc
loope
sbb
and
movsl
pop
push
shll
ljmp
aas
add
cld
enter
cmp
jge
rcll
test
push
shrl
add
fs
stos
outsb
outsl
andl
rolb
rolb
jl
loope
clc
lahf
mov
test
sbb
rolb
mov
neg
cmpsl
sbbl
mov
in
add
xor
mov
pop
xchg
add
out
inc
add
cs
mov
dec
lods
aad
cwtl
aad
es
mov
add
dec
mov
rolb
mov
xlat
xchg
or
mov
repnz
sub
dec
pandn
mov
mov
xor
adc
mov
addb
sub
int
add
mov
mov
add
xchg
ds
add
add
rolb
mov
push
mov
dec
lcall
add
jmp
lock
lcall
js
pop
add
int3
mov
roll
jns
jg
popf
push
loop
mov
pop
jl
add
add
aas
imul
sahf
stos
lock
int3
pop
lock
mov
inc
cmpsb
sub
cmp
or
mov
mov
incl
add
stos
push
sbb
jge
stos
push
addr16
xchg
push
push
lret
leave
aaa
scas
mov
ret
push
mov
mov
mov
arpl
jns
out
imul
mov
or
lahf
inc
pop
push
add
ret
xor
mov
mov
add
mov
iret
cli
pop
addr16
pop
test
xchg
add
ret
or
lsl
lock
xor
mov
sbb
inc
lcall
int3
adc
loop
mov
sub
add
insl
and
add
mov
add
and
add
mov
and
dec
inc
add
jne
add
pushf
scas
aaa
mov
mov
mov
mov
add
add
mov
add
xchg
into
pop
pop
xchg
call
leave
or
test
mov
mov
mov
pushf
xor
cmp
out
repz
add
jbe
addb
ss
andl
in
sbb
push
add
add
mov
mov
std
movsb
mov
dec
pop
push
movsl
or
addb
xor
add
dec
movsb
jb
mov
xor
addr16
add
dec
mov
push
ret
sbb
adc
mov
fsubl
jne
mov
add
pop
mov
add
pushl
mov
dec
xchg
cvtps2pi
mov
mov
dec
std
incl
jno
mov
mov
rcrl
mov
repz
pop
addr16
sbb
mov
mov
out
fwait
shl
in
and
push
xchg
repz
fsubrs
and
mov
std
mov
jo
mov
add
fistpl
inc
add
push
inc
add
fbstp
into
aam
frndint
mov
mov
mov
add
mov
in
mov
in
test
jge
les
and
pop
insl
jl
sbb
das
inc
std
mov
loop,pt
mov
dec
jnp
jb
mov
fs
mov
add
pop
pushf
test
rolb
mov
add
lock
push
sbb
stos
and
add
cmp
mov
xlat
xchg
sar
sbb
dec
lret
stos
lcall
jbe
rolb
mov
add
add
add
mov
sub
rolb
mov
mov
add
cli
xchg
mov
cli
loope
add
inc
mov
or
adc
jp
cmpsl
cmp
fmuls
dec
and
pop
pop
mov
add
cmp
cld
mov
push
add
imul
push
not
js
loope
sub
addb
pop
shrl
xor
mov
out
in
imul
xchg
cmp
dec
and
mov
out
lret
mov
add
test
mov
lea
and
mov
and
mov
lret
pushf
jne
or
add
add
in
cmp
mov
mov
loopne
mov
je
xchg
add
cwtl
sbb
imul
push
xor
lea
mov
add
sub
outsb
cmpsl
add
mov
mov
jecxz
lock
mov
add
mov
fwait
sub
lret
mov
mov
mov
add
dec
jecxz
lcall
popf
mov
mov
jg
les
add
and
add
stos
out
add
vandps
mov
pop
mov
mov
mov
sub
mov
cmc
aad
cmpsl
faddl
jmp
mov
lock
sub
in
pop
pushf
mov
out
das
stc
cli
test
sub
jg
mov
add
push
in
xor
int
jg
pop
cmp
daa
sbb
adc
xor
mov
pop
int
roll
mov
add
add
add
dec
inc
add
mov
in
pop
cmc
aad
or
mov
mov
mov
add
add
mov
call
mov
add
out
inc
xchg
add
rolb
mov
ss
sub
aas
pop
popf
scas
xchg
sub
and
mov
and
mov
out
add
imul
jecxz
push
mov
or
loop
mov
xlat
xchg
push
xor
jge
cmp
pop
js
mov
add
adc
mov
add
mov
cmp
or
xchg
adc
mov
add
add
jecxz
mov
mov
mov
sbb
gs
pop
daa
push
or
sbb
stc
and
mov
mov
add
push
mov
pop
out
in
cltd
aam
aas
stos
or
rolb
mov
test
push
sub
sahf
push
fwait
dec
jne
cmp
xchg
push
jle
sbb
in
jmp
add
mov
mov
add
sbb
mov
xchg
fldenv
loope
aad
add
add
pop
dec
nop
add
add
arpl
dec
mov
cmpsb
lret
mov
arpl
adc
cld
add
imul
addb
jg
lret
add
or
clc
sbbl
or
add
mov
mov
pop
sbb
gs
push
ret
int3
leave
sbb
and
std
loopne
mov
dec
ret
aam
int3
dec
xchg
std
mov
mov
jp
sub
add
and
mov
js
stos
add
mov
mov
rolb
mov
call
mov
mov
inc
test
cmp
int3
addb
add
inc
xor
mov
jle
add
