mov
jmp
in
add
inc
add
add
pop
add
lock
sbb
sarl
aad
lods
mov
add
mov
call
mov
jg
add
daa
add
xchg
stos
jg
push
rorb
xchg
jp
jg
add
add
sub
dec
mov
and
loop
jmp
les
inc
add
add
add
call
mov
add
cltd
mov
xor
add
in
mov
add
clc
mov
daa
add
test
add
add
add
add
stos
test
lods
popa
add
or
mov
addl
cmc
test
xor
add
jmp
aad
add
add
popf
movl
or
test
cli
jle
add
ja
add
pop
popa
add
mov
add
jbe
push
add
popa
add
add
xor
test
nop
iret
test
popa
add
push
fildll
add
push
lea
xor
dec
das
adc
outsl
rolb
jnp
lcall
add
push
add
stos
push
dec
xchg
int3
mov
out
out
inc
add
testb
mov
lods
mov
push
movb
pushl
loopne
xchg
jl
add
pop
mov
mov
add
or
addl
or
repnz
insl
jb
push
add
ljmp
jb
add
push
out
jp
sub
movsl
add
pop
mov
add
pushl
icebp
pop
andps
out
call
int3
sub
sbb
add
and
jb
jns
dec
jp
je
inc
add
add
je
add
insl
enter
push
and
movsb
add
ret
add
add
incl
or
jg
movd
loop
lahf
in
inc
add
roll
out
daa
add
mov
inc
add
add
call
mov
add
fisttps
mov
imul
mov
adc
test
add
add
jae
dec
cwtl
lret
fdivrl
xchg
sbb
add
add
jns
lods
jnp
add
add
or
add
incl
add
aam
add
xchg
mov
lock
sbb
jecxz
mov
xchg
xchg
xchg
mov
add
leave
dec
notl
sub
xor
pushf
scas
cli
cld
lds
aas
xlat
outsb
ds
add
add
sub
pop
je
pop
mov
add
lcall
out
inc
add
xchg
push
rclb
ret
add
add
addb
dec
rorb
movl
dec
pushf
sub
repz
movsl
add
insb
add
add
decl
in
xor
addr16
adc
cmc
fildl
in
aas
add
ds
or
add
roll
call
xor
add
and
lahf
sub
inc
add
sti
scas
mov
sti
loop
imul
xor
xor
mov
ljmp
cmp
add
jl
jg
add
add
cmp
out
or
push
fldenv
mov
or
out
js
jmp
add
mov
lret
fdivrl
jp
jae
mov
xor
pushf
lret
ret
inc
add
push
fidivrs
push
xchg
cmpsb
add
ja
ljmp
lods
movb
cwtl
add
xor
leave
mov
mov
cltd
cmc
repz
add
data16
add
and
push
outsl
mov
rolb
push
pop
jnp
inc
add
add
cld
mov
sahf
adc
mov
inc
add
add
push
loop
cmp
push
and
xchg
sub
add
movsb
add
std
push
std
mov
lcall
in
xor
jp
fdivs
es
add
popf
movb
add
aas
imul
add
movb
mov
pusha
add
add
jecxz
push
mov
add
sbb
add
jae
movsl
add
jo
mov
add
add
xchg
adc
add
push
mov
push
mov
add
xchg
int3
test
add
add
add
inc
add
jg
add
xchg
ret
add
dec
movl
into
mov
push
jb
addb
lods
imul
test
adc
nop
repnz
fistpl
std
mov
pop
add
jle
add
add
add
mov
lods
mov
push
ret
add
jge
lcall
fnstsw
add
faddl
aad
stc
and
imul
loope
icebp
addl
add
decl
test
dec
push
inc
xor
sub
xor
call
and
jne
dec
push
call
test
je
movzbl
add
mov
add
mov
shr
push
push
addl
call
push
call
leave
ret
push
mov
cld
push
push
mov
lods
xor
mov
sub
add
mov
add
stos
xor
pop
pop
leave
ret
jmp
jmp
jmp
xor
xor
adc
pusha
add
loop
sahf
js
dec
mov
add
xor
and
cmp
mov
sub
sub
push
sbb
adc
stos
dec
int
push
push
ret
sub
addl
sbb
cmpsl
add
loope
imul
adc
in
repnz
test
outsl
jecxz
les
fistps
clc
xlat
addl
xchg
xchg
xor
xor
mov
jecxz
fisttpll
inc
add
out
addb
sbb
enter
add
and
call
sbb
sub
sar
add
jmp
js
imulb
and
xchg
sub
add
add
and
mov
add
mov
add
sub
mov
pop
xchg
and
add
js
pop
sub
add
decl
sub
dec
jge
add
data16
inc
add
add
hlt
rorl
push
mull
std
xor
xor
test
add
xor
dec
xchg
push
inc
add
fisubrl
clc
sub
and
nop
clc
arpl
cmp
cmp
movsl
add
in
in
inc
add
jmp
insb
dec
lock
cmp
test
test
mov
mov
test
inc
add
out
addl
add
fistps
add
lahf
arpl
jno
add
and
je
add
and
mov
fcoml
mov
mov
sbb
add
xchg
and
add
mov
or
add
add
add
add
add
push
iret
pop
rcrb
add
or
add
mov
add
pop
insl
jnp
call
cmp
imul
cli
into
xchg
adc
ljmp
add
ljmp
fldenv
outsl
pop
outsl
add
dec
inc
add
sub
mov
mov
fsubp
add
cmp
movsb
add
jnp
inc
add
add
xchg
out
mov
push
push
nop
test
add
add
adc
and
mov
add
push
ret
xor
add
add
shr
dec
or
add
mov
pop
adc
insl
flds
dec
push
into
xchg
pop
stos
dec
jmp
add
add
add
fistpll
negl
je
js
ss
add
push
cld
imul
lods
mull
and
imul
add
in
sbb
xor
add
repz
jno
add
add
add
xor
add
cli
jnp
scas
push
lret
add
popl
add
rolb
pushf
jg
sbb
add
out
mov
dec
xchg
je
insl
push
fiaddl
dec
pop
adc
push
push
imul
add
cmp
add
lcall
loopne
cmc
rolb
add
jns
add
fcomp
lds
addl
add
sub
xor
loopne
lret
insl
scas
stos
iret
movb
add
in
pop
mov
add
notl
out
call
cmp
fwait
dec
xchg
ljmp
adc
cmp
add
mov
aas
addb
jne
jmp
aas
pusha
add
add
fistpl
in
sub
adc
pop
mov
inc
add
or
sbb
adc
add
fisttpl
outsb
push
imul
add
inc
add
add
dec
repz
adc
dec
dec
adc
pop
xchg
cmp
pop
add
sub
sbb
mov
repz
repz
jmp
inc
sbb
push
mov
incl
popa
add
jle
jmp
and
add
sub
add
add
pop
out
and
mov
fsubs
mov
jge
jg
add
ret
mov
jmp
and
insb
divb
lea
out
fists
push
mov
repz
mov
data16
aas
sbb
lock
pop
cmpsl
add
add
sbb
xchg
xchg
dec
pop
pop
dec
pcmpeqb
add
pop
or
add
sbb
push
add
or
cld
ljmp
mov
adc
sub
add
incl
add
sahf
sahf
add
push
out
jl
fdivrl
mov
or
cmp
aad
adc
xlat
mov
inc
add
jo
add
arpl
add
jge
or
pop
mov
loop
inc
add
sbb
push
shll
add
mov
js
jge
push
fwait
xor
and
movb
pushf
pop
in
mov
aas
aaa
xor
clc
and
pop
outsb
popa
add
pop
mov
add
xchg
sub
pandn
jp
add
add
mov
pushl
add
call
cwtl
adc
jb
add
xor
jg
cwtl
xchg
out
dec
es
fst
add
cmp
mov
push
sbb
add
and
dec
icebp
adc
cmpsb
add
add
add
add
xor
add
add
in
in
lea
ljmp
xor
add
add
xchg
sbb
and
fsubs
je
sbb
int
push
imul
dec
push
push
add
mov
add
xor
dec
mov
xchg
loop
out
jmp
dec
xor
mov
sub
add
out
jmp
addl
jne
push
mov
jmp
push
fildll
pop
jge
cltd
or
or
xchg
pop
and
cwtl
xchg
jp
xchg
inc
add
mov
add
rolb
fimuls
or
dec
inc
add
add
add
insb
adc
push
push
cmpsb
pusha
add
add
add
add
jns
out
call
jmp
aas
sub
cmp
push
in
lea
xchg
pop
sub
push
mov
call
inc
add
stc
add
decl
sub
addb
sub
inc
add
add
daa
add
add
add
cmp
add
ljmp
add
push
sbb
decl
pop
imull
add
mov
divl
sbb
add
adc
mov
fmul
add
add
jecxz
mov
addl
add
mov
or
push
stc
daa
add
rcr
adc
add
pop
jmp
adc
jb
sbb
push
pop
add
add
add
sbb
scas
adc
push
push
mov
mov
xchg
pop
call
add
incl
pop
add
dec
inc
push
lcall
or
inc
add
inc
add
jmp
sbb
decl
or
add
ret
jle
add
add
rcrb
movb
stos
roll
fwait
je
aad
xor
int
mov
sbb
push
fnstcw
jmp
adc
add
push
push
add
lods
push
cmp
jmp
and
mov
les
jo
dec
push
mov
jmp
in
js
loopne
je
add
bound
jne
pop
push
xchg
inc
add
adc
and
ds
xor
add
add
movb
gs
xor
add
or
icebp
pop
xor
sbb
repnz
shrb
nop
cmpsl
add
pop
jae
add
arpl
addl
mov
adc
loop
imul
and
faddl
add
sbb
jne
jmp
mov
int
xor
push
dec
out
or
xchg
ljmp
leave
loope
pop
add
add
out
xor
add
fidivl
mov
mov
xor
ljmp
sub
pop
imul
dec
push
pop
add
xchg
lahf
movb
jmp
in
sub
pop
jo
ret
add
popf
jo
mov
jmp
into
push
xor
cmc
movsl
add
add
sbb
popf
push
add
push
ret
add
mov
loop
lock
sahf
mov
add
sub
out
add
pushl
add
mov
movsl
add
xchg
and
out
cmp
xor
add
lods
lods
push
push
insb
hlt
dec
sub
int
fdivl
pushl
add
or
or
out
fcmovbe
xchg
test
sub
mov
cmc
mov
xchg
push
add
mov
addl
add
add
clc
mov
jge
add
repnz
push
cs
push
mov
xor
pusha
add
add
jmp
cmpsb
pop
push
fnstcw
add
imul
cmpsl
add
add
roll
inc
add
or
aad
mov
scas
addb
add
adc
add
add
pushl
fbld
cmp
les
sarl
push
add
sbb
js
push
cs
add
cld
or
popf
mov
pusha
add
add
add
lds
xor
adc
add
mov
sub
movsb
add
pusha
add
add
push
ret
inc
shrl
inc
add
add
incl
outsl
push
add
je
add
add
add
ret
add
mov
gs
divb
mov
add
test
pop
aas
ret
add
add
add
sub
rolb
add
mov
mov
jmp
push
push
push
je
iret
push
add
aam
xor
into
lods
testl
dec
mov
dec
roll
jae
ficomps
scas
add
pop
pushf
pop
add
scas
mov
add
mov
aas
push
or
in
movsb
add
stos
jle
lods
mov
jns
add
add
test
or
xchg
add
push
stos
jmp
adc
call
daa
add
enter
xchg
xor
stc
cltd
dec
pop
add
enter
add
mov
jecxz
mov
add
sbb
add
fmull
pop
sub
mov
stc
sbb
stos
adc
mov
les
inc
add
popa
add
cmpsl
add
add
add
pop
pop
push
add
rcr
sbb
imul
add
add
jmp
add
dec
push
push
jle
ficoms
add
int3
add
mov
mov
or
repnz
xor
add
int3
cmp
and
popf
jb
rcrl
cmpsl
add
mov
add
jmp
mov
add
or
adc
fsubrs
sbb
lret
add
add
inc
push
xor
stc
adc
mov
mov
stc
sbb
test
xor
add
xor
xchg
mov
mov
pop
xchg
addb
add
push
das
fmuls
add
int3
addl
add
jb
into
outsl
or
mov
sub
lahf
fbld
jns
sub
add
decl
imul
jae
add
add
adc
sub
outsl
fists
mov
ret
add
add
call
addl
aam
inc
add
roll
imul
cli
mov
dec
jno
jmp
cmp
cmp
jo
jnp
add
xlat
js
xchg
cld
scas
xor
xor
xchg
xchg
addl
fstp
roll
mov
jl
sti
sub
xor
add
inc
add
mov
shl
push
xchg
mov
in
mov
inc
add
add
sub
add
inc
add
and
arpl
xor
decl
push
ret
insb
push
or
add
or
add
dec
sbb
xchg
xlat
mov
lcall
cmpsl
add
aaa
imul
add
push
mov
add
stc
push
scas
mov
incl
add
mov
jmp
sbb
adc
mov
jmp
popa
lock
div
jmp
testb
mov
mov
incl
mov
dec
add
add
mov
add
cmpsb
xchg
sub
movb
movl
inc
add
aam
js
push
ret
add
mov
cmp
add
xor
jmp
add
test
mov
cmp
int
and
adc
push
jmp
cmpsb
and
add
addl
xor
dec
jge
movb
add
add
add
add
incl
mov
add
pushl
add
hlt
pop
loopne
mov
add
dec
pop
popf
pop
xchg
repnz
icebp
loope
and
and
pusha
jmp
cmp
pop
dec
lcall
mov
add
jbe
add
cmp
out
inc
add
add
cld
clc
mov
out
sub
add
mov
add
cs
add
jae
push
add
jnp
push
push
ret
pop
xor
add
mov
pop
push
add
add
pop
in
bound
push
jns
push
add
ljmp
addl
ljmp
loopne
sbb
aam
fcomps
pop
jmp
or
dec
in
in
push
add
cmp
xchg
inc
add
push
mov
add
in
jmp
ljmp
mul
add
test
or
add
push
push
add
sbbl
xor
lods
jmp
add
push
and
mov
add
decl
ficoml
add
add
jo
call
push
ret
xchg
push
aam
adc
add
add
jmp
adc
inc
push
enter
mov
add
jmp
add
nop
iret
jne
lods
data16
inc
add
movsb
add
add
daa
add
insl
sbb
xchg
and
add
ret
lcall
add
das
lret
addb
imulb
jae
add
mov
jp
sbb
sbb
push
je
add
adc
push
add
add
add
add
jle
add
cltd
cmp
add
push
inc
add
jmp
add
sbb
addr16
pop
add
arpl
cmp
ss
xchg
add
add
movl
out
in
jecxz
shlb
addl
add
add
and
out
mov
add
cltd
add
add
pushl
push
int
fisubrs
add
inc
add
add
mov
add
data16
xchg
pop
add
lcall
stc
das
bound
push
jae
inc
add
push
jmp
lock
mov
sub
std
imul
add
push
mov
je
jecxz
add
push
stos
xchg
test
cli
adc
mulb
add
pop
addb
add
cmp
rolb
pop
add
mov
add
add
in
cmp
mov
sbb
fsubl
in
in
add
ret
add
lods
lahf
jns
notl
jmp
addr16
sbb
rolb
add
add
test
add
cmpsl
add
out
push
pop
add
sbb
add
popa
cmp
dec
notb
lcall
pop
pop
pop
add
add
mov
pushf
loope
jnp
lahf
rolb
and
push
add
fwait
xchg
add
call
jb
mov
push
add
jmp
push
sub
cmpsb
sub
mov
fsubr
out
popf
popf
push
into
hlt
mov
jb
insl
xchg
and
ljmp
adc
push
std
loopne
mov
add
push
adc
filds
iret
add
jmp
in
xor
mov
cltd
pop
inc
add
add
and
xor
mov
push
repnz
jecxz
push
movb
mov
inc
add
xor
jp
insl
mov
add
lods
or
hlt
nop
in
icebp
adc
stos
push
pusha
add
or
pop
add
xchg
cmp
lcall
insb
cmp
int3
add
xchg
rep
fbld
mov
and
fstpl
stos
and
jmp
add
adc
jmp
add
lahf
das
and
pop
push
test
sbb
fbstp
add
mov
push
js
jo
add
dec
mov
and
xlat
aam
sbb
sub
dec
add
push
mov
nop
xchg
cli
ds
inc
add
sbb
add
add
mov
xor
lret
push
add
lods
sbb
outsb
inc
add
sub
add
add
lcall
pop
adc
cmp
stc
sub
add
push
push
repz
dec
loopne
push
mov
rorl
pop
pop
lcall
or
inc
add
add
aad
add
or
popa
inc
add
pop
add
cmp
int3
test
ret
fsts
mov
rcrl
xchg
fs
add
aam
aam
imul
pop
repz
incl
data16
data16
idivb
lret
pop
add
out
in
adc
jge
push
dec
push
ret
das
pop
lock
xchg
imul
int
add
decl
inc
add
add
ret
das
push
jmp
aam
pop
addb
or
fdivrs
lahf
shl
add
and
xchg
mov
leave
mov
mov
add
add
mov
add
aas
cmpsb
push
adc
sbb
stos
gs
push
ss
addb
and
loop
lods
mov
add
add
adc
fldl
xchg
cli
test
or
lret
add
popf
mov
aad
add
out
add
lcall
xchg
shl
add
ret
add
and
adc
add
mov
adc
add
add
sbb
js
inc
add
jle
cld
pop
cmpsb
add
push
arpl
shrl
in
data16
add
sub
push
push
ret
aam
push
adc
jmp
sub
leave
stc
stc
aam
cmp
popa
add
fidivl
push
add
xor
push
cld
inc
add
sub
add
iret
fildll
je
mov
xchg
or
add
add
jg
fcmovb
add
aas
mov
xor
ret
push
fbld
int
or
add
cwtl
call
mov
add
aas
lods
les
mov
repz
add
shl
jmp
push
push
push
testb
xor
enter
xchg
jge
add
dec
addl
addb
add
add
stos
loope
mov
jne
dec
arpl
std
add
sbb
out
push
lret
xor
add
cmp
add
stos
scas
jp
sbb
std
cmpsl
add
add
sbb
sti
mov
cli
and
hlt
jb
add
ljmp
push
push
jmp
sub
push
or
int
xor
push
rcrl
xor
shr
adc
and
addl
xlat
iret
mov
insb
pushf
lock
jne
outsb
decl
add
lock
ret
stc
or
add
movswl
jmp
push
push
and
xlat
test
cli
adc
cmp
mov
sbb
add
add
add
popf
iret
insl
dec
lds
sub
das
call
data16
jp
sub
mov
xor
ror
sahf
jle
add
ja
jmp
add
push
movsl
add
add
call
sub
push
jmp
cmp
push
cmp
arpl
data16
jo
add
jle
pop
sbb
and
jmp
inc
push
mov
aam
rcl
dec
and
testl
adc
cltd
and
push
cwtl
sbb
xor
add
jecxz
int3
ret
add
test
into
loopne
inc
add
pop
pop
aad
popf
outsl
jno
mov
sti
and
push
ret
push
pop
in
mov
pusha
add
imul
insb
inc
add
rclb
loope
repz
movl
test
cmp
jmp
push
add
inc
add
stos
xor
fdivrp
addb
fisttps
inc
add
stc
rorb
fucom
add
inc
add
movsb
add
add
not
jmp
mov
xchg
mov
cmp
xchg
pop
mov
pop
inc
add
popl
cwtl
popf
fistpl
cs
in
mov
lahf
add
jmp
jb
add
loopne
push
or
scas
and
push
call
jmp
enter
jge
add
push
je
add
test
lahf
pop
push
push
cmp
jmp
or
push
aas
sti
and
pop
xor
add
pop
cmpsb
add
add
add
add
sub
ret
das
inc
add
add
jb
add
inc
add
add
add
add
add
ret
add
mov
shl
add
lcall
jns
add
sbb
in
push
mov
add
add
pusha
add
pushf
xor
jo
sti
stos
ret
add
mov
add
add
shlb
leave
add
pop
rolb
mov
push
cmpsb
add
sbb
add
push
pop
stos
push
mov
jne
stc
push
mov
jmp
push
mov
xchg
les
loop
pop
bound
jg
add
xchg
jge
mov
std
sub
test
xor
push
and
push
ret
sbb
push
lret
ja
mov
call
or
xchg
add
ljmp
iret
jno
push
imul
push
push
roll
out
rolb
loope
jg
mov
add
xchg
lods
cltd
sub
add
pop
shl
das
addb
in
jb
add
add
dec
lds
into
or
or
cwtl
mov
fists
or
ljmp
mov
jb
add
cmpsl
add
dec
or
enter
sbb
mov
ret
or
add
decl
inc
add
jmp
add
push
push
inc
jmp
push
stos
cmpsb
cmp
ret
add
dec
and
cmp
add
nop
pop
push
push
jmp
mov
or
sbb
add
shll
jecxz
jmp
and
and
dec
icebp
jne
add
pop
add
pushl
add
out
scas
xchg
push
pusha
add
cltd
push
xor
repz
dec
rcl
xor
test
mov
sbb
or
bound
or
pusha
add
sub
mov
repnz
add
mov
adc
adc
add
mov
mov
pop
movsb
add
inc
add
pop
aam
das
jne
negb
movzwl
jmp
js
add
aam
add
stos
or
xor
adc
mov
cmc
inc
add
out
adc
sti
js
call
add
push
cmp
push
ret
aas
into
mov
lcall
mov
ljmp
push
lods
jmp
push
push
sub
int3
adc
add
mov
push
enter
jmp
or
flds
xchg
in
outsb
test
dec
add
sub
pop
push
push
int3
xor
incl
mov
xor
pop
xor
outsl
cmp
mov
out
mov
mov
fld
add
wrmsr
mov
add
out
mov
xor
loopne
mov
push
sbb
add
jge
add
add
mov
push
and
mov
jp
aaa
add
push
add
test
roll
add
add
lods
inc
add
daa
add
xchg
imul
add
loopne
rcl
xchg
push
pop
add
jl
mov
add
add
sbb
jmp
push
into
fstps
adc
add
jmp
push
pop
push
add
jmp
push
cmp
addb
add
and
test
mov
add
adc
jmp
fsubrp
or
roll
stos
cmp
sahf
jge
jecxz
xor
jle
add
mov
push
or
jl
push
and
xchg
mov
js
add
jecxz
and
add
add
cmp
jmp
inc
add
stos
inc
add
and
jb
add
xchg
push
mov
cmp
add
jl
lcall
sbb
inc
add
sbb
sub
std
xchg
mov
jecxz
sbb
popf
data16
adc
mov
sbb
add
cltd
cmpsb
add
add
cmp
adc
xlat
push
cwtl
cmpsl
add
insl
jecxz
dec
test
mul
add
scas
push
inc
inc
add
jle
add
add
leave
sub
mov
mov
pop
es
bound
mov
shl
aaa
push
int
xchg
fnstenv
add
mov
mov
jb
and
aad
popf
repz
mov
add
dec
loope
lcall
add
mov
popa
jmp
xor
mov
mov
jmp
pop
aam
cld
mov
mov
add
add
xor
movl
add
add
or
push
mov
js
add
mov
lds
roll
bound
add
add
add
sbb
jmp
xchg
mov
les
inc
add
mov
insl
fiadds
push
or
add
add
adc
jmp
and
sub
lcall
cld
dec
inc
add
pop
aam
push
insb
push
movl
test
cmp
add
dec
mov
add
bswap
fsubrs
outsl
arpl
add
test
ret
stos
fldt
ffreep
add
shlb
add
enter
pop
push
pusha
add
push
add
decl
mov
fidivl
or
add
and
ss
or
adc
add
sbb
mov
sbb
adc
or
add
aas
es
mov
xchg
push
add
jmp
ljmp
pop
test
mov
add
add
aaa
cwtl
repnz
out
and
pusha
add
das
mov
lods
data16
add
adc
jle
push
out
and
dec
push
add
jns
add
cld
test
add
or
add
decl
cld
addl
or
cmp
ss
add
add
sub
lret
addb
add
mov
add
add
jne
push
ret
jmp
add
add
js
rorb
lcall
decl
push
incl
cmc
aas
inc
or
push
add
stc
cmpsb
add
add
test
add
add
fisttps
mov
inc
add
lcall
add
sub
lock
add
add
mov
jmp
pop
arpl
pop
out
addb
mov
add
cwtl
add
aas
mov
or
jmp
add
push
pop
adc
add
jo
sub
pusha
add
inc
add
hlt
nop
mov
add
rolb
dec
jno
add
add
cmpsl
add
add
push
in
int
out
lods
jg
add
bnd
repnz
cmp
add
lahf
inc
jmp
inc
add
push
push
dec
mov
add
add
xor
adc
adc
and
xchg
mov
add
add
stos
jae
add
fwait
insl
dec
push
lods
sti
jl
add
ret
cmc
sbb
fwait
movb
xchg
test
mov
sbb
push
ret
xor
add
and
add
jmp
mov
xor
decl
dec
lods
add
call
pop
adc
out
test
popa
add
test
movl
stos
mov
int
arpl
sbb
fbld
aas
loope
or
mov
xchg
les
jo
les
or
add
xor
push
sub
mov
fistps
pop
push
xchg
push
add
jmp
push
push
push
pop
mov
sub
data16
lods
int
add
jns
cmp
inc
add
sub
data16
inc
add
call
popf
xlat
add
pop
inc
add
fcoms
repnz
fwait
push
mov
in
mov
jmp
add
inc
add
fwait
cmp
jae
add
inc
add
push
pop
lds
test
test
add
push
xchg
pushf
int
and
cs
stos
testl
ljmp
cmpsl
add
call
fisttpll
pop
pop
out
clc
and
les
ret
mov
push
push
push
shll
add
movsl
add
add
aad
dec
add
ja
aaa
mov
add
add
movsl
add
add
je
jmp
arpl
add
call
add
je
pop
jae
cli
adc
add
aaa
ret
add
ficoml
scas
test
xor
or
das
test
or
add
jb
jbe
add
push
adc
mov
sbb
sbb
or
jmp
push
lock
aas
cmc
dec
sub
add
add
movl
cmpsl
add
pop
mov
sbb
jae
dec
fwait
inc
add
insb
lcall
mov
test
lcall
lcall
in
loopne
sahf
daa
add
add
aas
fwait
jecxz
int3
jae
add
shl
add
add
sbb
jle
or
adc
add
and
push
int
aas
add
aas
push
mov
icebp
in
push
sbb
add
insb
cmp
xor
mov
add
cltd
inc
add
cmp
add
mov
aaa
pop
adc
addl
add
jmp
add
add
sbb
dec
cmp
xlat
add
add
ret
add
add
xor
push
jge
and
push
dec
xor
dec
push
push
lock
call
and
xchg
add
xlat
cmpsl
add
pop
add
jmp
and
stc
sub
add
cld
mov
push
xchg
sub
xor
and
adc
fwait
scas
and
mov
or
sub
adc
add
jmp
sub
jo
fcmovbe
mov
add
mov
add
bound
push
lcall
addb
mov
decl
add
jmp
repnz
add
movsl
add
mov
add
pushl
inc
add
mov
and
cwtl
and
ljmp
sti
int
mulb
addb
add
test
bound
roll
add
cmc
daa
add
add
push
push
push
add
sbb
bound
push
jae
sub
or
outsb
cmp
add
cmp
push
jmp
js
cmp
xchg
mov
data16
pop
inc
add
add
add
mov
divl
push
stos
mull
add
movsb
add
add
mov
mov
add
lcall
add
add
pop
add
fimuls
add
dec
movsl
add
add
add
add
aaa
or
add
rcrb
aam
add
sub
or
add
cld
lret
mov
add
pushl
push
jmp
ljmp
pop
lds
mov
sbb
add
jns
lods
ljmp
mov
xchg
mov
xrelease
imul
ret
jmp
fbld
push
adcl
sti
push
push
add
cmc
xchg
lcall
add
pop
int3
jge
add
and
enter
pop
jmp
inc
dec
xchg
and
cld
vprotq
add
cld
add
xchg
inc
add
xchg
sbb
or
push
ret
push
aas
incl
pop
inc
add
push
mov
cmp
mov
iret
in
mov
jmp
push
sub
add
add
pop
cmp
inc
add
das
aas
push
addb
and
or
add
outsb
jge
fistpl
push
cld
pushf
cmp
add
add
add
cmpsb
add
test
cmp
add
push
pusha
jmp
jb
stos
push
add
data16
add
addl
add
jmp
mov
add
add
jmp
pop
out
and
push
ljmp
loop
ja
decl
iret
stos
addl
add
add
add
jmp
push
push
sub
icebp
dec
outsl
dec
jmp
jo
add
daa
add
jne
jmp
lock
ljmp
jb
add
add
xchg
sti
sub
gs
popf
xchg
push
dec
psadbw
and
into
lcall
xchg
jno
add
add
aaa
lea
iret
xchg
mov
add
add
add
sub
jb
push
arpl
shll
inc
add
xchg
push
scas
mov
add
inc
push
ret
sub
daa
add
pop
cmp
add
add
xor
cmp
fcoms
shrl
mov
or
leave
bound
mov
add
push
pop
mov
jae
and
add
sbb
incl
cld
clc
pushf
enter
adc
add
add
mov
addl
push
xchg
add
jmp
add
mov
add
call
mov
stc
add
addb
push
mov
loope
cmp
or
add
pop
int
xor
add
jmp
add
aad
loop
in
lods
and
mov
jmp
push
addr16
push
out
adc
lea
cltd
cmp
or
push
adc
xor
call
jl
add
or
push
ret
inc
push
push
mov
ret
add
add
adc
repnz
dec
push
icebp
xchg
adc
and
add
add
decl
add
aad
add
ljmp
int
add
dec
scas
xchg
fldl
incl
ljmp
clc
or
inc
add
xor
fs
jb
pushf
mov
jmp
cmp
push
cld
out
xor
inc
add
scas
add
jg
add
sub
add
add
adc
add
sub
add
add
incl
sub
jge
mov
in
and
mov
js
cmp
ja
lds
pop
push
xchg
jne
mov
mov
mov
or
push
dec
roll
add
ds
add
inc
add
adc
adc
jmp
jne
jmp
sub
xchg
scas
frstor
cs
in
test
mov
push
jns
fmuls
insb
inc
add
pop
int
test
cs
jmp
and
jmp
add
sti
sbb
add
add
mov
fldl
mul
add
add
push
mov
insb
fisubrs
xor
add
lret
dec
dec
fwait
xchg
pop
fstps
add
pushf
loop
idiv
sub
push
jmp
cld
enter
and
sbb
jae
movsb
add
mov
push
fwait
lods
push
jae
inc
add
cli
or
call
add
scas
adc
repnz
or
adc
push
aaa
add
or
mov
or
add
test
pop
fists
js
push
rorl
mov
sub
roll
push
push
ret
mov
and
addl
jmp
add
loope
mov
outsb
pop
fwait
sub
dec
mov
mov
addl
imul
andb
add
js
xchg
jecxz
or
loope
int
fsts
pushf
or
add
call
add
inc
inc
add
and
push
push
pop
bound
pop
dec
sub
out
add
add
ret
add
cwtl
adc
add
and
cwtl
push
mov
push
jmp
cmpsb
push
cmpsb
push
and
int
add
add
cwtl
and
add
push
or
add
adc
mov
test
xchg
inc
add
fbld
pushl
fwait
ss
xchg
addl
mov
bswap
loop
lret
xchg
bound
adc
inc
add
add
mov
and
or
add
jo
pop
insl
mov
mov
xchg
lock
bndldx
cmp
mov
xchg
mov
sub
add
and
ret
aaa
sub
add
or
add
aas
mov
sub
xor
ljmp
inc
add
add
add
push
mov
xchg
mov
cmc
out
pop
add
mov
loop
fnstcw
add
dec
mov
add
cmpsl
add
mov
add
adc
cmp
mov
xor
gs
sar
push
mov
in
add
and
add
add
jmp
sub
add
add
add
add
add
call
cmpsb
add
jmp
ljmp
jecxz
push
sbb
xchg
ljmp
stos
xor
xchg
sahf
fstps
push
xor
jg
xor
pop
sahf
jecxz
scas
add
push
arpl
jb
outsb
xchg
pop
ljmp
add
xchg
and
ret
add
mov
add
mov
jmp
sbb
push
push
inc
sub
lea
sbb
out
pop
ficomps
movl
add
mov
repz
jg
mov
ret
add
dec
mov
rclb
xchg
xor
movsb
add
add
out
or
bound
mov
add
ret
add
ljmp
or
add
xor
adc
mov
sub
jl
jp
enter
sub
add
inc
add
add
dec
lods
loope
mov
add
push
push
inc
add
mov
adc
add
cmp
sbb
lcall
add
xchg
lods
lods
cmpsb
add
dec
jmp
out
sub
add
les
pop
stc
add
inc
add
pop
and
pop
cmp
stos
add
incl
dec
mov
pop
jmp
sub
cmp
xchg
movl
add
leave
mov
jmp
inc
add
add
push
add
cmpsl
add
sub
mov
in
icebp
data16
pushl
jmp
sub
insb
mov
sbb
mov
mov
pop
fld
add
dec
icebp
lret
xor
lea
loope
add
push
inc
add
add
add
mov
add
add
add
jmp
add
mov
add
call
cmp
les
add
pop
or
mov
push
ret
js
pop
sbb
xchg
or
test
test
add
pushl
out
lret
outsb
adc
jno
or
jne
mov
stc
push
rcr
push
jb
jns
mov
jmp
push
push
jno
cli
pop
jo
leave
jmp
pop
movl
add
ficomps
add
add
push
jecxz
bndldx
fsubrp
mov
call
cli
add
xor
stos
in
sbb
hlt
jns
mov
mov
mov
inc
add
loopne
push
cmp
stos
jg
jae
xchg
nop
fsubr
mov
add
mov
add
cltd
cli
fcompl
add
add
fidivrl
push
jbe
mov
rcl
pop
push
mov
popa
jmp
js
cmp
push
and
lea
add
js
add
add
xor
jmp
enter
push
in
and
std
inc
add
add
mov
rcrl
cmc
insb
sbb
pop
stc
dec
stos
push
xchg
cmc
jno,pn
shrl
cmpsb
add
ljmp
mov
cwtl
push
fisttps
shll
cmpsb
add
fnstenv
enter
add
jmp
test
xor
outsl
mov
pop
add
jbe
jne
add
xor
or
sub
cmp
push
pop
sbb
add
sbb
push
cmc
jl
mov
jge
add
incl
push
push
jmp
push
lock
ljmp
rorb
in
daa
add
mov
mov
xor
add
fwait
mov
xchg
jno
push
push
dec
out
push
fcomps
cmp
jmp
dec
fldln2
loop
adc
das
mov
add
popf
jb
cmpsb
add
or
rolb
add
add
add
and
add
pop
data16
loope
out
pop
jmp
ds
ds
push
stos
inc
add
add
lcall
loop
add
mulb
pop
and
lret
xor
cld
decl
add
add
add
xchg
aam
jbe
mov
add
pop
add
aad
xlat
add
aas
hlt
hlt
inc
add
fistl
sbb
sub
ret
mov
lock
aas
mov
add
sahf
out
cmpsb
add
add
int3
adc
insl
insb
movsl
add
cmp
add
ret
add
cmp
inc
add
pushl
mov
xchg
pop
xchg
adc
jmp
xrelease
jns
add
add
dec
mov
xchg
push
mov
in
xchg
test
add
incl
add
bound
mov
dec
sub
push
dec
int3
mov
rclb
lea
add
fisttps
imul
mov
aaa
mov
lcall
add
inc
add
add
mov
add
les
rcrb
xor
dec
xor
xchg
addl
out
or
rolb
add
xor
add
inc
or
push
pop
push
ret
dec
fbstp
mov
mov
inc
add
inc
add
dec
pop
pusha
add
insl
flds
add
pusha
jmp
push
cmp
mov
inc
add
add
enter
pop
cmp
les
decl
add
add
in
mov
ljmp
dec
inc
add
xor
xchg
jecxz
pop
dec
pop
and
inc
add
jbe
pop
mov
sbb
add
aam
cmp
insb
push
dec
push
add
in
out
pop
mov
push
add
es
ds
cmp
das
pop
sbb
int3
xchg
popf
loope
insb
add
jbe
mov
xchg
lahf
xor
push
jb
inc
add
push
add
sub
dec
xor
add
add
add
xor
xor
dec
dec
ds
add
decl
add
cmc
aas
addb
jmp
arpl
push
add
push
add
jmp
and
sbb
data16
add
add
push
push
fisttps
popa
add
jae
add
xchg
mov
aas
sbb
repnz
push
sub
jmp
push
js
adc
xchg
test
jge
push
jg
add
sub
sbb
mov
add
fwait
mov
ret
jle
mov
add
add
xchg
insb
mov
push
jns
daa
add
addb
add
add
mov
lds
add
push
xorl
in
xlat
xor
and
add
jbe
mov
mov
adc
jmp
jnp
fcoms
add
inc
add
dec
cmp
add
add
call
add
inc
add
add
adc
out
daa
add
add
add
loop
inc
add
je
test
mov
add
enter
stos
mov
dec
iret
or
add
mov
xchg
out
xchg
cmpsl
add
xchg
std
jmp
pop
or
or
and
cmc
mov
dec
and
pop
out
pop
mov
pop
lcall
stc
mov
addl
add
pop
mov
add
mov
add
scas
cwtl
xor
and
cmp
push
sub
ss
dec
xor
push
cmp
pop
test
dec
test
add
add
jmp
push
push
in
das
pop
mov
inc
add
add
add
adc
nop
dec
sub
clc
out
xor
addb
in
mov
decl
jbe
add
cld
inc
add
add
sub
and
fldenv
test
push
jecxz
push
mov
push
ret
jb
cmpsb
jmp
add
addb
add
in
lock
ret
add
test
ds
dec
in
fcomps
add
in
dec
dec
add
add
call
mov
add
add
add
fisubrl
add
sub
clc
add
mov
mov
add
mov
push
inc
add
push
scas
fcoms
into
pusha
add
add
loopne
leave
dec
addl
arpl
push
ret
insb
arpl
push
add
add
cmp
mov
clc
xchg
lret
adc
add
add
fsubrp
xchg
mov
popf
scas
in
cmpsb
add
cltd
ret
add
fdivrs
xchg
and
adc
inc
add
cmp
sub
cmp
add
mov
outsb
add
add
add
add
xor
add
ljmp
jmp
mov
notb
pop
out
scas
cwtl
frstor
jae
xor
aaa
rolb
add
pop
add
cs
inc
add
rolb
or
add
or
mov
addb
lret
push
adc
cmpsb
add
sbb
jb
add
movsl
add
sti
jnp
add
add
mov
xchg
sub
jae
xor
cli
movl
jge
inc
add
ret
add
add
ljmp
pop
inc
add
add
jmp
ja
add
xor
or
add
iret
mov
add
jg
xor
dec
sti
daa
add
adc
rclb
pop
sub
pushl
adc
jmp
add
xchg
mulb
scas
mov
cmp
bound
dec
add
insb
mov
insl
push
mov
cli
push
dec
jb
add
pop
add
call
pop
add
jmp
add
push
xor
jge
inc
add
movl
add
decl
jg
mov
jmp
add
adc
sub
jp
add
jmp
adc
add
sub
add
jns
add
js
ljmp
add
add
in
test
jo
rorl
xchg
rcll
sti
mov
add
xor
clc
push
popa
add
add
bound
fisubrl
decb
add
lcall
jb
add
add
add
xchg
inc
add
stos
data16
int
adc
jle
add
movsl
into
call
xor
fstps
add
inc
add
add
mov
std
inc
add
add
jbe
sbb
dec
mov
add
xchg
adc
adc
xchg
cmpsb
add
ret
sbb
push
imul
jmp
dec
and
stos
mov
dec
dec
hlt
add
cmp
add
data16
cwtl
lock
addl
das
push
rorb
add
lahf
lahf
mov
sti
aad
pop
cmpsl
add
mov
pop
ja
add
pop
cs
push
scas
cmp
adc
inc
add
add
cmc
cmp
decb
out
sbb
inc
add
inc
add
add
xor
add
jmp
fistl
jecxz
pop
add
call
xchg
xor
add
sub
add
jbe
xchg
dec
lea
jl
test
negb
dec
push
inc
add
sahf
add
cs
inc
add
dec
xor
add
jmp
dec
add
add
scas
fwait
adc
bound
not
pusha
add
test
mov
mov
and
add
jecxz
and
mov
mov
add
mov
outsl
lds
or
pop
mov
and
jne
push
add
cmpsl
add
jecxz
mov
movsl
add
push
jmp
lock
sbb
incl
sbb
add
lcall
cli
ljmp
jo
add
out
sub
jg
add
incl
int3
add
xchg
lahf
shl
add
shr
xchg
scas
cmp
dec
mov
add
xchg
faddl
lret
call
jl
add
jg
fisubrl
add
add
mov
dec
mov
pop
das
or
dec
and
dec
int3
mov
add
inc
add
add
es
jb
mov
jl
jp
mov
add
add
idivl
fwait
or
add
mov
add
std
dec
mov
add
jmp
mov
cli
scas
fdivs
ret
add
cmp
and
push
movsb
add
add
lods
sbb
lea
jmp
fcmovnb
add
sbb
add
and
cmp
pop
mov
cmpsl
add
aas
push
push
mov
add
call
xchg
sbb
aas
int3
out
add
dec
fidivrs
xchg
sbb
addb
add
rolb
add
add
push
jmp
enter
push
sbb
rep
jmp
adcl
stos
lds
xor
dec
jmp
arpl
pop
push
pop
dec
jmp
add
decb
and
push
sbb
movsb
add
add
add
ret
add
add
add
call
ficoms
add
add
add
roll
fldcw
add
add
mov
mov
jmp
test
xchg
sbb
icebp
daa
add
out
sub
add
inc
add
xchg
or
ljmp
icebp
ret
fidivl
imulb
jmp
push
rcrl
add
jecxz
sub
add
add
mov
cmp
popa
add
inc
add
pop
nop
jne
sbb
add
add
lods
lock
add
icebp
mov
mov
call
aas
add
and
ret
push
lahf
loopne
arpl
out
xor
xchg
or
sub
mov
mov
mov
push
mov
cmpsl
add
push
add
pop
into
imul
stos
or
push
inc
add
push
push
ret
and
sbb
icebp
icebp
fldenv
pop
or
sub
add
call
push
ret
push
xchg
aam
inc
add
int
add
bnd
test
xchg
dec
add
lods
std
in
gs
add
jbe
add
mov
mov
push
jbe
or
jmp
cld
or
push
push
pop
mov
pushl
or
add
jmp
movsb
add
adc
inc
add
add
add
mov
sbb
jmp
sbb
cld
lcall
push
adc
add
push
aam
sbb
and
mov
mov
jmp
adc
push
out
in
into
mov
add
push
loope
sub
mov
add
push
js
mov
cs
roll
add
add
add
push
aad
loopne
jo
fbld
data16
addr16
add
ret
aad
add
mov
add
add
add
daa
add
iret
xchg
push
mov
out
fsts
std
test
int3
clc
jmp
add
lea
les
test
adc
add
mov
push
scas
lds
out
idivl
add
rclb
add
add
add
add
loopne
call
in
or
into
fidivrs
out
popf
jo
mov
aas
dec
cwtl
lock
pop
cmp
cmc
stos
shll
add
add
mov
push
mov
push
lcall
sbb
fisubs
mov
adc
in
mov
push
add
cmc
mov
sub
test
loopne
mov
mov
cmpsb
push
sub
sub
data16
mov
lret
jecxz
mov
fldt
js
xchg
sub
push
add
add
and
filds
add
cmp
pop
sbb
xor
xchg
dec
out
stos
fnsetpm(287
add
repz
xchg
jnp
or
push
dec
out
mov
ljmp
or
add
adc
add
ret
add
fstps
cmp
mov
add
sti
xor
js
stos
movl
add
jne
add
es
fimuls
add
fsts
push
pop
cs
in
test
ja
movsb
add
jmp
adc
jecxz
and
mov
mov
add
in
push
xchg
or
add
add
adc
add
stc
jmp
out
in
push
push
mov
or
mov
dec
in
mov
add
ljmp
adc
sahf
cmpsl
add
jb,pt
sar
aaa
pop
mov
mov
add
add
stos
or
add
aam
add
push
adc
daa
add
xchg
adc
adc
lahf
daa
add
add
pop
rolb
jae
scas
jg
pop
or
loopne
mov
xor
xchg
adc
jmp
mov
add
dec
daa
add
dec
push
std
pop
xor
loope
fnstenv
movsb
add
push
lret
pushf
out
addb
mov
aaa
mov
icebp
mov
add
add
pop
mov
add
push
popa
cld
push
into
push
inc
add
pop
aaa
jno
sbb
movq
loop
jmp
lods
lods
ficoms
dec
movb
add
sub
icebp
addl
add
add
pop
jle
add
add
mov
addl
add
jmp
add
pop
jmp
ret
or
pop
sbb
int
loopne
das
sub
jbe
ja
call
inc
add
add
mov
push
loope
pop
loopne
popa
add
test
cmpsl
add
incl
dec
sub
add
cmpsl
add
jb
aaa
sub
iret
cmp
hlt
xor
pop
pop
mov
call
aad
lahf
dec
inc
add
add
push
sub
cmc
mov
faddl
std
jp
scas
jnp
add
add
add
add
out
out
scas
dec
cmp
lret
lcall
add
jp
add
cmp
mov
sub
arpl
repnz
push
push
mov
call
push
add
sub
add
add
enter
or
out
call
cmp
loopne
inc
jmp
add
aas
shlb
add
and
add
lds
xor
pop
inc
add
push
add
xlat
xor
add
bound
out
int3
push
add
add
dec
cmp
pop
add
pop
pushf
pop
sti
cmc
sahf
popf
pusha
add
imul
push
jecxz
decl
mov
add
aas
pop
adc
stos
mov
popf
sub
scas
cmp
add
mov
fldcw
add
adc
jne
loopne
lret
out
ss
out
or
testb
fs
mov
add
ret
or
adc
add
ljmp
insl
push
inc
add
mov
mov
aaa
sbb
out
je
add
inc
add
cmp
cmp
fcoms
cmp
add
sbb
addb
cmpsl
add
ds
xchg
out
dec
das
repnz
fisubrs
add
add
insb
sti
xchg
xor
jmp
add
jmp
test
jmp
stos
fstps
pop
dec
xor
out
insl
and
mov
comiss
scas
aam
xor
addb
ss
clc
inc
add
stc
addb
add
sti
dec
fdivrl
stos
test
ljmp
dec
cmc
ljmp
push
push
filds
adc
add
add
add
add
sbb
pop
and
pop
repnz
call
jmp
push
xchg
sub
add
add
add
add
jnp
mov
mov
add
add
pop
clc
icebp
idiv
mov
rolb
popa
add
add
movsl
add
sbb
or
movsl
add
pop
push
pusha
add
add
add
gs
pushf
fnsave
add
adc
mov
into
dec
pop
xchg
jmp
and
push
and
iret
jb
lcall
pop
jmp
popa
dec
pop
sbb
arpl
pop
out
mov
call
fdivr
int3
xor
fldl
and
jmp
lcall
inc
add
cmovp
add
in
addl
mov
jo
ja
movsl
add
xor
sub
xchg
jae
lret
divl
jmp
or
add
and
jmp
insl
cmp
jecxz
dec
and
sbb
lcall
aam
add
ljmp
mov
add
inc
add
add
push
jg
popf
pop
stc
add
lcall
mov
mov
cmp
add
pop
add
jg
add
push
push
mov
add
hlt
stc
repz
xchg
lods
outsl
pusha
add
hlt
cmp
sbb
jbe
hlt
add
out
shrb
addl
imul
add
mov
jmp
adc
jle
add
add
add
add
mov
push
rcrb
mov
push
ret
inc
inc
and
hlt
ret
add
add
add
mov
push
and
mov
add
adc
rolb
aas
mov
adc
pushf
mov
stos
pop
add
add
cld
imul
add
jmp
add
call
dec
inc
add
add
push
push
cmpsl
add
je
push
ret
mov
add
add
sub
sar
pop
add
pushf
rcr
scas
rcl
ds
add
pop
jne
into
inc
add
push
mov
jmp
push
js
push
insl
cli
leave
mov
add
incl
mov
das
sub
mov
push
int3
xchg
mov
add
fnstsw
sbb
and
mov
add
add
dec
nop
xor
out
lds
jae
roll
jg
mov
xor
cmc
idiv
mov
push
add
or
or
add
fcomps
test
fdivrl
xor
add
inc
add
add
add
popa
add
repz
xchg
and
mov
add
add
cmc
mov
mov
ret
add
pop
fwait
pop
sti
jge
add
adc
xor
mov
add
fwait
and
push
cmp
add
push
roll
lods
mov
lret
rcrl
and
std
std
out
test
push
add
inc
add
mov
dec
rolb
push
mov
and
repz
mov
adc
lods
inc
add
jp
jl
add
add
mov
roll
call
loop
ret
add
pushl
insb
das
or
loope
add
rolb
push
loopne
dec
les
mov
cli
repnz
ds
add
add
add
popf
jmp
ljmp
and
sahf
adc
sbb
mov
adc
mov
add
sub
inc
add
add
jnp
clc
cmpsb
add
xchg
sti
mov
repnz
add
lock
js
imull
adc
pop
fists
in
add
add
ljmp
test
jg
add
jmp
push
ret
jb
fstl
sbb
add
add
add
dec
sbb
add
and
out
int3
sahf
mov
jmp
mov
daa
add
je
add
add
or
dec
push
mov
push
ret
push
or
add
push
gs
ret
sbb
mov
add
shll
and
rorb
and
push
pop
test
ret
and
push
les
in
movb
sub
fcom
and
mov
shrl
jmp
push
push
sub
add
pop
movsb
add
jns
xor
sub
pop
aad
lcall
mov
mov
push
jmp
mov
push
addl
cmp
repnz
addr16
push
xchg
xor
add
je
add
icebp
jb
add
jl
out
lret
mov
add
nop
xchg
lahf
test
add
pushl
jmp
mov
xchg
js
dec
clc
cld
addl
enter
push
scas
loop
cmp
mov
sti
or
add
add
out
cld
and
add
outsb
add
sahf
inc
add
push
mov
jno
out
mov
mov
in
test
jae
mov
addb
loop
fnsave
daa
add
cli
cmpsb
add
dec
nop
sbb
and
negl
mov
fnstcw
add
sti
jmp
enter
mov
bound
mov
pusha
add
add
jecxz
adc
add
cs
int
dec
mov
jbe
movsb
add
or
add
add
add
insb
imul
call
arpl
test
out
cmp
pushf
push
push
xlat
adc
add
push
add
add
add
add
adc
out
inc
add
ljmp
dec
add
call
les
sbb
jl
cmp
jmp
push
mov
sti
addb
cmp
jns
incl
xchg
xor
jo
jmp
cmp
jnp
cli
jmp
or
xor
add
or
add
inc
add
js
jo
jns
add
aam
adc
sbb
imul
outsb
push
inc
add
mov
div
imull
movsb
push
ret
push
add
and
lods
cs
xchg
push
dec
repz
cmp
sbb
enter
add
xchg
dec
insb
push
insb
sub
add
add
add
outsb
jne
fsubs
les
xchg
aaa
mov
xor
push
xchg
jecxz
add
mov
das
dec
mov
jo
fbstp
addl
xchg
add
incl
mov
push
popf
inc
add
mov
test
jmp
scas
sub
sub
roll
les
mov
and
mov
add
add
pushl
jmp
push
arpl
add
data16
pop
add
addl
dec
sub
pop
push
sbb
add
loope
pop
pop
iret
and
loope
push
cmp
add
incl
mov
add
incl
cmp
addb
cs
movsl
add
movsb
add
sbb
add
roll
mov
rclb
add
xchg
inc
add
mov
mov
add
cmp
push
add
push
cld
lock
addr16
inc
add
add
xlat
aad
add
add
mov
mov
mov
xor
add
add
rorl
add
hlt
scas
lods
out
insb
jecxz
loope
xchg
leave
mov
dec
ljmp
xchg
jecxz
mov
xlat
xchg
add
add
mov
pop
inc
add
stos
push
fistps
add
sub
jmp
xor
dec
add
addb
add
loope
sub
pop
movsb
add
stos
mov
mov
add
ja
test
push
jmp
mov
pop
jmp
push
or
sar
scas
loop
cmp
add
sub
incl
sub
pushf
xchg
mov
cmp
pop
mov
pop
sub
or
sbb
enter
ret
sub
inc
add
mov
cwtl
pop
aad
aaa
mov
add
add
lods
movb
add
jmp
arpl
je
push
inc
add
fstps
inc
imulb
mov
mov
test
out
jmp
sub
pop
movsl
add
push
addb
in
outsb
add
dec
mov
mov
add
pop
cltd
dec
jmp
sub
add
add
icebp
paddb
add
pop
adc
out
xchg
in
jp
lret
addl
and
lahf
fcom
lods
or
addb
add
movsb
jmp
push
dec
jle
push
pop
fstps
bound
cmp
lahf
jo
ljmp
pop
add
ljmp
fbstp
add
add
add
add
inc
add
cmc
push
push
dec
inc
add
jle
push
cmp
leave
ljmp
pop
add
add
pop
add
mov
inc
add
out
add
pop
xchg
fisubrs
cli
lds
popa
add
jmp
sarb
sub
add
mov
add
jmp
jb
adc
sbb
or
jo
add
roll
jmp
add
add
loopne
jmp
dec
xchg
push
loop
cwtl
mov
sbb
add
dec
push
xchg
test
bnd
bound
cmp
add
add
adc
int3
call
lcall
je
add
fld
mov
add
repnz
add
push
jae
popa
add
dec
les
in
jg
add
push
js
push
and
ja
pop
add
stos
cmp
sbb
and
push
add
call
sbb
icebp
jecxz
mov
add
add
add
add
mov
add
hlt
push
jns
out
add
push
inc
add
lcall
add
call
jnp
cmp
pop
push
adc
add
jg
add
nop
movb
pop
scas
or
push
jns
add
add
or
add
add
jle
cli
and
shlb
xor
add
lea
add
sbb
and
add
movsb
add
xor
add
mov
dec
call
xor
inc
das
sub
fnstenv
pop
mov
add
loope
lds
jae
add
lcall
movb
add
lret
push
call
mov
inc
add
cmp
sbb
add
add
add
add
cltd
fmul
sub
add
test
aas
div
addb
mov
add
add
lods
mov
pop
ret
add
sahf
insb
addl
add
push
mov
push
mov
add
test
test
inc
add
int
pop
outsb
arpl
adc
stos
pop
movsb
add
cmc
push
cs
ficoms
mov
mov
jge
sbb
pop
leave
dec
jno
mov
push
cmpl
push
ret
fwait
aad
push
add
jge
jb
aam
or
rolb
cmp
jns
movb
add
aaa
cmp
std
pop
test
shrb
fwait
xchg
outsl
push
ret
ret
insb
mov
aas
xor
xor
rolb
cmp
dec
lret
add
aad
inc
add
fiadds
call
and
push
jecxz
test
push
addb
add
xchg
cld
loop
or
mov
repz
cmp
and
xchg
dec
sahf
in
add
mov
js
add
les
pop
push
outsl
arpl
push
add
int3
test
lods
mov
xchg
dec
and
sbb
add
incl
aad
add
jmp
cwtl
push
inc
add
lods
lcall
paddsw
jmp
aam
sub
add
in
in
les
enter
ret
add
lcall
fwait
out
push
adc
add
dec
pop
push
cmc
or
pop
daa
add
mov
sub
add
test
add
aaa
jg
ja
and
fcmovnu
mov
add
mov
test
ljmp
lea
lret
xchg
mov
fnstcw
push
push
jmp
sbb
push
adc
push
xchg
inc
add
add
mov
in
pop
and
add
xchg
mov
addb
rolb
or
pop
lea
test
mov
add
add
mov
xor
jmp
inc
inc
adc
push
add
mov
push
je
push
ret
pop
xor
imul
sub
add
sub
test
add
lcall
and
in
out
popf
xchg
jp
push
mov
jle
add
mov
cwtl
cmp
out
mov
mov
add
jmp
add
pushf
or
jle
add
or
add
lcall
pusha
add
add
add
lea
add
je
popf
or
xor
incl
in
push
add
adc
std
cmp
add
add
mov
scas
push
addl
clc
pop
cltd
je
addl
data16
jl
je
add
add
jb
sub
fs
stc
add
jmp
mov
jmp
sub
add
enter
mov
add
mov
insl
in
adc
add
cmpsl
add
xor
je
jmp
adc
add
pop
adc
std
hlt
out
inc
add
add
add
add
xor
in
mov
mov
shrl
dec
dec
dec
sub
add
and
lock
pop
das
incl
push
push
ret
push
add
sbb
ljmp
addl
out
push
les
int3
popa
add
add
sbb
mov
sub
out
and
dec
jecxz
addb
js
rolb
and
js
add
add
cmp
jno
add
add
jle
mov
add
ja
add
and
add
jo
rolb
xor
pop
lods
mov
ljmp
inc
add
xchg
sarb
add
ja
add
and
dec
loopne
fiaddl
add
push
mov
testl
push
push
jmp
jmp
push
push
addb
js
stos
addb
aas
cwtl
cld
sub
sahf
push
into
stc
xor
add
xchg
fmuls
cmp
mov
add
dec
and
fs
add
dec
clc
aam
add
iret
lds
and
add
mov
pop
adc
add
sbb
mov
decl
add
mov
and
jo
cmpsb
add
add
lret
mov
jg
add
push
dec
stc
fcomp
jbe
outsb
int3
inc
add
je
cmp
test
add
add
js
aad
in
inc
add
dec
inc
add
xlat
jne
add
repz
add
add
push
fstl
js
add
inc
add
pop
es
add
add
fsubl
data16
jns
mov
lock
cmp
mov
or
aaa
fiadds
add
or
dec
aad
add
loop
cmp
mov
xor
hlt
dec
add
fwait
pop
mov
ja
mov
decl
mov
xlat
in
mov
lods
test
cltd
incb
add
jl
dec
cli
movsb
add
jmp
and
push
add
add
test
test
and
loop
jmp
cmc
jp
adc
sbb
mov
add
xchg
sub
sbb
iret
mov
movl
call
jmp
cmp
add
mov
rolb
lds
movl
imul
ret
add
shll
add
mov
cwtl
stos
inc
add
add
mov
add
imul
and
scas
icebp
xor
inc
add
mov
pop
outsb
fldcw
stos
mov
sbb
test
mov
and
add
mov
and
testl
add
int3
or
iret
aad
aam
dec
and
popf
data16
leave
mov
xor
sbb
outsl
roll
pop
hlt
cmpsb
add
push
call
jmp
add
lods
movl
sbb
add
sub
mov
push
xor
stos
lret
add
pop
jl
add
dec
jnp
mov
mov
packssdw
add
icebp
jo
inc
add
push
add
pushl
shl
jb
add
add
aam
decl
cmp
add
pushf
mov
add
call
jb
add
into
test
adc
xor
xchg
mov
dec
decl
mov
call
in
mov
das
sbb
add
jmp
push
push
add
pushl
add
add
inc
add
bsr
les
push
lds
cli
int3
imul
cli
and
aam
and
and
filds
incl
sub
sbb
push
in
fmuls
push
mov
dec
test
jns
jae
inc
add
add
lret
push
loope
add
int3
mov
in
and
dec
pop
push
jns
or
xor
jmp
mov
jnp
xchg
jp
adc
in
arpl
neg
sub
dec
jle
mov
add
mov
add
pop
dec
test
mov
push
sub
sbb
stos
lods
jmp
arpl
add
pop
lret
pop
fnsave
add
add
xor
add
lds
cmp
add
pop
jg
add
add
add
dec
and
mov
hlt
call
push
push
lahf
cmpsb
add
sbb
add
insb
adc
inc
push
xchg
les
mov
or
cmp
add
into
fsubs
pop
dec
sub
mov
inc
add
inc
add
inc
add
add
push
fiadds
pop
lcall
decl
mov
push
cmp
add
and
and
mov
jmp
mov
cmpsb
negb
dec
imul
add
negb
add
sti
std
rclb
add
inc
add
rcrl
pop
fcmovnb
add
add
cwtl
add
dec
idivb
test
add
clc
add
call
addl
add
inc
add
jae
add
sbb
push
ret
sbb
inc
lret
and
cmp
xchg
inc
add
push
hlt
adc
xchg
inc
add
add
add
stc
xor
insb
mov
sbb
out
clc
repz
jns
sbb
mov
jmp
flds
jle
add
lock
ds
jae
or
mov
mov
clc
test
sub
jne
jmp
jb
repz
jge
and
or
dec
pop
sub
add
or
ljmp
dec
shll
add
dec
nop
cwtl
mov
leave
jge
add
add
add
add
add
add
out
daa
add
add
mov
lcall
jbe
mov
jbe
add
cmp
sub
push
stc
xlat
xor
popf
out
lock
add
jbe
pusha
add
add
add
stos
mov
cmp
push
mov
loope
dec
arpl
ret
pop
or
cmp
repz
mov
shll
sbb
add
jb
push
push
sub
fstpl
add
stos
jmp
xchg
test
push
push
loopne
push
rolb
rcl
aas
out
and
lret
add
aas
lret
pusha
add
xchg
push
add
push
ret
inc
xor
jecxz
or
add
xor
stos
aaa
testb
les
lods
pop
or
push
add
add
add
std
loopne
ret
add
in
mov
imul
sbb
stos
jmp
mov
or
cmpsl
add
add
mov
add
decl
mov
inc
add
and
negb
add
ljmp
shll
lcall
popf
sbb
inc
and
ret
inc
into
adc
stos
sub
mov
jbe
call
push
in
add
int3
jnp
mov
push
dec
push
mov
add
lock
enter
add
or
lods
or
add
add
addl
cmp
lcall
popa
add
add
mov
and
add
mov
pop
or
add
into
test
pop
mul
add
out
mov
mov
dec
mov
add
push
rcl
ret
add
push
push
ret
ret
sub
sbb
jno
mov
push
addl
push
push
jmp
mov
cld
mov
cmpsl
add
add
imul
add
pop
jne
add
enter
fbstp
stos
push
dec
xor
mov
adc
add
outsl
xor
repz
repz
add
jmp
push
mov
xchg
ljmp
mov
push
ret
push
push
adc
daa
add
popf
sub
pop
js
fistl
mov
add
incl
mov
stc
addr16
sbb
push
incb
or
fstps
loop
jbe
out
popf
adc
add
push
jmp
xor
pusha
add
mov
xchg
or
fisubrl
add
pushl
ja
arpl
out
and
cld
sub
add
add
or
aam
adc
add
lods
mov
add
pop
sbb
test
adc
mov
jmp
add
imul
adc
add
roll
sti
out
stos
loope
mov
add
mov
add
lcall
and
and
mov
push
ret
mov
pusha
add
sub
call
loopne
push
cwtl
dec
clc
pop
add
call
icebp
out
pop
rolb
pushl
popa
add
adc
xor
add
arpl
sti
xchg
int3
aaa
cmp
or
add
cwtl
push
mov
cs
xchg
mov
cmp
aam
inc
inc
add
cmp
add
or
push
insb
stos
shlb
add
mov
add
mov
add
lds
decl
mov
aad
ljmp
sbb
test
ljmp
cmp
iret
mov
add
add
push
addb
xchg
push
leave
cltd
repz
xor
add
cs
add
cmpsl
add
add
add
incl
dec
in
xor
out
xor
gs
add
std
adc
addb
test
hlt
push
aam
add
faddl
push
cltd
or
in
icebp
int3
jmp
out
sarl
js
addb
addb
fistpll
divb
in
or
fdiv
sbb
add
mov
xchg
mov
jge
add
cld
adc
add
clc
jmp
es
add
leave
push
icebp
lock
add
nop
cmp
mov
mov
out
push
mov
jmp
push
dec
ret
jmp
lea
mov
add
push
adc
mov
jmp
into
xchg
mov
icebp
dec
push
in
cmp
aaa
cmp
decl
adc
add
or
add
dec
mov
add
lds
or
mov
add
mov
or
cmpsb
rclb
cmp
push
dec
fdiv
adc
xor
pop
xlat
cmp
jnp
inc
add
outsb
stos
add
jmp
and
jl
or
add
call
mov
test
fldt
sub
loope
jnp
push
add
into
addl
fstpt
pushf
xchg
movsb
add
add
inc
and
xor
call
and
cmp
push
int3
jo
scas
jo
stos
mov
outsb
xchg
adc
cld
inc
add
add
mov
xorb
insb
push
inc
mov
push
add
jmp
mov
xor
adc
loop
lahf
mov
fnsave
icebp
outsl
cmpsb
add
push
xor
test
hlt
add
cltd
sbb
push
add
std
mov
add
scas
fdivrs
or
mov
sbb
sub
jg
and
in
dec
insl
fidivrs
add
add
ret
jmp
add
push
lock
outsb
aam
xchg
arpl
jb
fcmovnu
jnp
int
sahf
dec
jnp
add
mov
fwait
mov
jo
mov
push
ret
and
add
mov
jp
add
mov
popf
addb
mov
cmc
daa
add
add
repz
mov
adc
stos
jmp
aas
jb
push
sub
jae
repz
add
in
cwtl
fistl
mull
cmp
add
xor
cld
imul
add
add
dec
cmp
add
adc
sub
jmp
into
push
arpl
jmp
add
call
or
roll
scas
jmp
add
add
ljmp
test
add
add
adc
jbe
ret
sbb
scas
push
add
es
add
add
sub
nop
insb
add
jmp
add
add
mov
mov
stos
xor
adc
add
popa
add
imul
add
sub
jae
mov
push
mov
jmp
mov
sbb
addb
or
arpl
les
push
mov
outsb
lcall
add
add
add
addl
ss
out
repnz
inc
add
sbb
or
push
add
popf
pushf
in
cld
xor
jb
dec
add
adc
add
scas
mov
add
adc
in
dec
div
pop
mov
mov
add
pop
sub
pop
call
enter
or
xchg
stos
and
xchg
clc
dec
xchg
ret
add
add
add
cs
mov
add
xchg
js
inc
add
push
add
aam
jle
enter
add
stos
pusha
add
jo
insb
adc
add
aad
data16
inc
add
inc
add
add
out
dec
sub
shl
js
pusha
add
jbe
imul
scas
cmpsb
add
add
jnp
jge
add
add
adc
add
sbb
jmp
dec
add
xor
push
mov
hlt
cld
cld
sbb
fiaddl
jmp
std
pop
dec
sbb
add
jmp
add
inc
add
movsb
add
pop
addb
add
add
add
add
push
push
push
ret
ret
ljmp
add
inc
add
inc
add
push
rorb
add
sbb
add
ret
add
mov
addb
xchg
stos
xchg
sub
loopne
popf
xor
add
pop
rorb
xchg
mov
cmpsl
add
mov
xchg
mov
add
add
dec
lret
mov
call
lods
push
movl
sahf
out
sbb
sub
jnp
test
imul
out
fwait
js
or
ja
mov
outsb
push
lods
jmp
add
mov
add
addb
roll
adc
inc
inc
add
push
inc
push
or
lret
fsubrl
add
add
movb
pop
ljmp
addl
add
cmp
jmp
inc
push
popa
divb
cmpsb
add
mov
add
jmp
mov
rcll
add
mov
test
repz
int
add
cmpsl
add
jo
call
push
mov
cmp
movb
fistl
loop
or
pop
pop
out
addb
add
push
jmp
lock
push
inc
mov
push
mov
mov
mov
adc
mov
cmpsl
add
js
add
shlb
adc
add
add
jmp
fnsave
sub
add
add
sahf
dec
jg
stos
cmp
repz
push
ljmp
fistps
sub
mov
xor
add
jb
jbe
add
imul
jb
add
add
repnz
movl
rcl
les
int3
movsb
add
movl
call
add
jb
jns
stos
lcall
pop
or
and
push
cltd
pop
enter
jmp
add
popa
add
adc
addl
fcmovnb
add
xchg
fldenv
add
loop
jae
mov
ljmp
xchg
xchg
push
mov
mov
and
decl
test
cmp
add
sub
test
xor
add
add
insl
and
stos
push
pop
out
jmp
loope
daa
add
call
mov
cmp
adc
mov
xchg
and
sub
cld
or
data16
roll
add
push
sbb
imul
add
push
pop
jmp
inc
fistl
mov
lcall
push
jg
pop
aam
add
lcall
and
pushl
push
mov
nop
mov
mov
add
addl
mov
jae
add
sbb
or
add
sbb
and
push
mov
add
cmp
mov
jmp
push
sub
cs
add
add
add
add
nop
in
push
dec
fsub
add
add
push
inc
add
lcall
adc
add
inc
aas
cld
sub
pushl
out
mov
add
lcall
push
in
js
ds
clc
fsubrs
add
pushf
add
mov
pop
addb
cltd
lret
int3
cmpsl
add
jmp
pusha
add
fcmovnbe
test
jmp
add
and
jecxz
hlt
xchg
popf
data16
dec
popf
outsb
ficompl
xchg
pop
pop
sti
jb
lods
dec
pop
sbb
cmp
add
xchg
dec
lcall
xchg
gs
lret
incl
imul
add
mov
insl
inc
add
push
adc
sbb
dec
and
push
mov
aam
add
push
add
mov
push
ret
inc
sub
addl
add
cmpsl
add
incl
incl
or
push
cmpsb
sub
and
push
mov
and
mov
or
movups
dec
mov
add
and
jecxz
dec
roll
add
add
add
adc
pushl
call
jmp
push
fsts
mov
inc
add
jp
cld
mov
loope
cld
and
insl
aaa
test
loopne
dec
addl
pop
decl
pushf
incl
js
imul
jl
out
test
shll
push
add
pushl
mov
add
or
int
iret
push
pop
add
mov
pusha
fdivr
decl
popa
or
or
add
and
sahf
xchg
ss
fisttpll
sbb
inc
add
push
adc
or
mov
ss
call
ljmp
add
add
jmp
adcl
add
push
add
push
ret
push
roll
inc
add
jno
add
incl
inc
add
or
movb
jnp
push
in
aaa
adc
add
add
add
aam
out
scas
lret
popf
scas
jecxz
fwait
dec
dec
cmp
je
push
ret
aam
scas
enter
add
std
pop
insl
notl
stc
shrb
jmp
push
ret
push
and
pop
les
push
jle
or
add
cmpsb
add
test
stc
jno
mov
pop
dec
rcr
addl
adc
add
shlb
add
jns
test
test
add
sub
push
jmp
mov
sub
rcll
mov
add
add
xor
fildl
add
jg
add
ja
sahf
cmp
mov
addl
sub
push
mov
cmc
push
and
out
mov
movsb
add
add
aam
xchg
adc
and
popf
sbb
pop
mov
adc
add
ljmp
add
add
roll
sub
add
lods
push
ret
xchg
arpl
push
xchg
ja
add
cmc
cwtl
cli
popl
cli
and
lds
movsb
add
and
lcall
adcl
ret
add
nop
push
outsb
daa
add
test
rol
add
mov
jge
cmp
add
add
shll
je
dec
xor
add
cmp
xchg
ret
cmpsl
add
xor
sub
jbe
pop
movsl
add
add
add
in
mov
jle
inc
add
loope
std
pcmpgtw
pop
addb
pop
add
call
push
inc
add
repz
jns
add
rolb
jmp
add
cvtdq2ps
lahf
adc
or
add
adc
push
dec
or
add
jno
sub
push
lret
add
mov
incl
xchg
imul
addl
je
xor
add
sahf
adc
call
into
sbb
add
push
mov
outsl
popa
fs
ret
addr16
cmpsb
add
out
shl
add
addl
add
add
dec
fdivrl
movl
mov
and
dec
push
stos
lods
dec
sub
incl
mov
ret
add
int3
ror
inc
add
add
add
jg
les
or
mov
jae
dec
dec
jle
mov
push
mov
aam
sbb
add
add
jp
pop
mov
xchg
jle
xchg
jge
cs
sub
sub
mov
sti
leave
shl
add
repz
lods
sbb
aad
mov
jmp
push
or
int3
cs
mov
add
xchg
pavgw
test
test
inc
add
jg
or
add
enter
push
add
int
loope
cltd
xchg
ret
add
dec
imul
add
add
add
addl
mov
les
add
leave
mov
cli
xlat
lret
mov
jle
movl
jne
add
mov
addb
dec
dec
pop
inc
add
fs
add
pop
stc
cli
sahf
imul
add
mov
add
add
or
jle
add
mov
jp
dec
addb
sbb
add
add
sub
add
les
push
loop
mov
add
ljmp
xchg
add
scas
insl
fcmovne
add
add
jp
jnp
aaa
rorb
xor
cwtl
fsts
add
in
push
cmp
dec
cmp
pop
loope
cmp
add
add
roll
test
cmp
add
pop
mov
or
add
xchg
and
jge
int3
cmp
add
add
addb
push
push
cli
out
mov
fdivr
incl
enter
push
add
jle
add
cs
sahf
enter
fsts
inc
add
nop
loop
pop
xchg
or
das
push
jns
mov
in
push
add
cmpsb
add
add
ljmp
add
mov
add
jmp
pop
push
sub
inc
add
fcos
movswl
jmp
push
insb
cmp
add
imul
mov
add
lea
add
nop
push
add
push
mov
adc
into
cmp
push
add
add
add
lcall
popa
add
pop
or
add
incl
das
dec
enter
out
sahf
mov
loope
ret
lds
mov
inc
add
add
fdivs
jecxz
outsb
jp
pushl
shr
jns
add
add
aas
dec
sub
lcall
lcall
sub
xchg
push
aam
cs
cmp
mov
scas
daa
add
sub
add
mov
cmp
cmp
dec
xchg
pop
imul
adc
push
adc
mov
push
dec
dec
stos
xor
add
add
add
cmpsl
add
add
jns
add
inc
add
add
divl
push
imul
jmp
mov
lds
pop
inc
add
add
in
ficoms
add
or
push
test
mov
cmc
out
push
fidivs
aam
dec
mov
lcall
fcom
repnz
in
inc
add
jmp
push
add
cmpsb
and
add
ss
or
add
jno
dec
imul
or
lret
mov
incl
adc
test
mov
jb
lds
pop
push
add
jmp
test
add
rcrb
inc
add
add
push
call
push
pop
jl
in
mov
add
jg
add
jge
data16
movb
movb
arpl
addl
add
and
xor
in
in
or
out
or
push
lods
inc
add
add
rolb
addb
inc
add
push
fsubrl
in
sub
adc
ret
into
jmp
out
ret
jmp
jmp
add
mov
add
cli
lods
sub
adc
add
gs
incl
mov
test
xlat
addr16
fdivr
mov
sbb
add
mov
add
add
add
lret
pop
or
xor
add
repnz
push
ret
aam
jb
addr16
dec
and
add
add
ja
or
addr16
ret
add
bound
das
loope
hlt
ds
push
int
sahf
imul
repnz
add
mov
imul
dec
stos
loopne
mov
aam
add
in
movl
add
pop
add
jmp
push
enter
add
adc
add
add
mov
out
loop
xor
test
jmp
ljmp
push
push
add
xor
and
inc
add
add
aad
add
sar
jmp
and
aad
pop
add
lcall
inc
add
add
cmp
lods
sbb
mov
in
jb
movb
cmp
cld
inc
add
add
fwait
sahf
outsl
lock
jmp
add
call
int3
mov
leave
sarb
out
fists
push
insb
bound
dec
pop
lahf
pop
mov
jne
push
ret
adc
add
jmp
pop
and
pop
adc
jecxz
adc
add
mov
xchg
lock
loop
mov
stc
call
mov
add
push
jmp
xor
or
insb
mov
mov
lret
lcall
add
push
pop
cld
inc
add
sbb
sbb
add
jmp
into
insb
and
xchg
sub
add
dec
movsb
add
xlat
scas
cmp
aas
mov
add
add
add
call
mov
add
add
push
xor
in
inc
add
insb
pop
fcmovne
mov
add
addb
repnz
xor
pop
jo
sub
idiv
jmp
out
mov
add
sub
and
in
pop
mov
rolb
jne
add
push
jle
xor
into
mull
out
mov
or
inc
add
adc
int3
xor
cmp
outsl
dec
push
je
inc
add
enter
add
scas
xchg
adc
pop
and
xchg
int3
lea
rolb
fbstp
pop
adc
add
stos
out
jo
scas
in
jae
add
test
mov
pop
mov
push
fsubrl
addb
js
mov
repz
fildl
mov
add
clc
mov
sbb
arpl
dec
clc
rolb
add
out
and
arpl
push
add
push
push
add
add
mov
add
add
sub
mov
outsb
add
cs
and
cmpsl
add
add
add
shrl
add
add
cmp
add
add
cld
stos
cltd
push
aam
stos
mov
push
loopne
sti
mov
in
int
jecxz
jb
pushf
inc
add
inc
add
aam
jge
push
jmp
lcall
mov
fistpl
mov
add
mov
flds
mov
xor
add
add
cmp
daa
add
sahf
or
jno
add
aam
push
shl
add
clc
mov
pop
pop
xor
or
fistpll
xchg
fmul
or
scas
ret
add
fisttpll
and
add
push
call
or
push
push
dec
jmp
insb
andl
lock
faddp
add
add
add
mov
add
jmp
sub
aas
ss
push
sbb
xor
in
or
imulb
sub
and
lods
and
dec
push
pop
add
mov
ffreep
add
je
mov
jp
xchg
addb
add
dec
dec
mov
add
sub
or
cmc
push
add
mov
std
addb
adc
add
ljmp
add
add
add
add
push
lahf
jmp
push
push
push
mov
add
add
adc
add
add
jmp
mov
cmp
dec
adc
mov
jnp
movsb
add
int3
xchg
add
add
sub
cmpsb
add
add
addb
bound
sahf
lret
inc
add
sub
and
movsl
add
add
add
ficompl
dec
hlt
push
push
mov
add
add
add
in
add
outsl
je
ljmp
hlt
add
jmp
add
popl
les
lods
ds
fwait
ja
and
fmuls
add
add
roll
xor
movsb
add
add
jmp
pop
fldln2
sub
imul
and
movsl
add
inc
add
mov
fistpll
dec
xlat
mov
add
rolb
add
in
push
add
add
movl
addl
and
outsl
pop
lahf
mov
add
adc
sub
add
cmp
das
fistps
mov
cmp
ja
xchg
pop
call
push
enter
stos
and
xchg
clc
loop
out
ficoml
std
in
stos
sarl
add
sarl
pop
mov
into
std
push
jge
mov
cmpsb
add
stos
je
iret
sbb
xchg
mov
inc
in
call
push
das
inc
add
bound
jecxz
adc
mov
adc
fbstp
mov
adc
in
pop
data16
add
sbb
xchg
ljmp
adc
test
add
add
into
adc
stos
jg
add
or
insb
xor
cmp
pop
pushf
mov
aas
inc
add
push
add
push
imul
stc
add
add
mov
aas
push
gs
add
sub
push
or
imul
xor
add
add
add
add
add
push
cltd
mov
add
add
and
mov
std
std
push
lcall
pop
aam
stos
cs
xchg
pop
mov
outsb
cvtdq2ps
pop
push
or
stos
fcmovb
add
in
push
ret
sub
aas
or
xchg
adc
jb
add
arpl
or
clc
fbld
mov
add
xchg
push
mov
jmp
mov
jno
loope
pop
ss
std
mov
add
jmp
dec
push
inc
mov
jmp
movb
cmp
icebp
mov
mov
xchg
pop
imul
addb
test
xchg
fst
cmp
lret
or
add
xchg
mov
push
push
hlt
xchg
dec
in
pop
pop
lret
push
add
cmp
roll
push
shlb
jge
add
fldcw
filds
je
aas
sbb
lcall
xor
mov
jge
cmp
pushl
fsubl
addb
insl
fsub
add
add
add
jg
sbb
add
or
pop
sub
add
sbb
lea
mov
roll
add
out
pusha
add
add
or
imul
icebp
jae
movsb
add
inc
add
decl
mov
inc
call
add
stos
pop
mov
sub
call
std
imul
out
aam
dec
adc
out
adc
fiaddl
jns
out
int
mov
xchg
call
or
inc
add
mov
add
xor
jnp
aas
cmp
call
pop
stos
xor
add
add
add
and
fcmovne
imul
leave
dec
mov
repnz
dec
into
std
adc
and
cmp
push
ret
icebp
dec
dec
and
sti
jmp
pusha
add
lods
sti
cmp
addb
add
pop
or
insl
xor
add
sbb
cmpsb
pop
inc
add
adc
pop
in
lret
jne
imul
xchg
sti
inc
add
aad
popa
add
add
fdivr
leave
lcall
test
add
push
ret
push
and
add
push
in
sbb
add
inc
push
and
in
icebp
insb
addb
dec
cli
and
inc
add
mov
sub
cmp
and
xchg
cmp
mov
scas
mov
mov
jnp
add
jmp
daa
add
push
push
ret
jb
push
add
sbb
icebp
jmp
cmpl
addl
add
fisubl
add
or
add
push
lock
addb
add
lods
dec
mov
mov
addl
push
ret
mov
add
dec
cmp
loope
jmp
mov
movsl
add
add
jmp
add
call
ss
cld
inc
add
rolb
ret
push
pop
pop
jecxz
mov
and
fimuls
add
or
add
ljmp
add
add
mov
scas
inc
add
dec
and
movl
cmpsb
add
cmp
add
mov
pop
cltd
or
add
ljmp
data16
nop
push
add
push
pop
mov
add
fistpll
add
xchg
add
lock
add
call
jmp
add
add
js
mov
or
fwait
enter
mov
jbe
sbb
decl
sub
jl
add
shrl
adc
movl
pop
stos
add
loope
sub
fsubrs
jae
jmp
pop
add
pop
jns
clc
jb
add
pop
cltd
and
call
push
add
in
pop
cmc
push
jle
call
jmp
sub
ja
add
add
mov
add
xchg
cli
fmuls
icebp
sub
add
lods
in
jg
add
add
add
pop
dec
push
and
aam
sub
adc
nop
daa
add
ja
add
aam
or
into
mov
or
jo
movsb
add
adc
jp
ss
mov
movb
cltd
ljmp
outsb
aas
push
add
incl
mov
add
add
and
jns
std
test
sahf
pop
fldl
mov
sbb
and
enter
fwait
sub
add
add
decb
add
adc
aas
cmp
push
jl
add
jb
cmpsl
add
pushl
xor
add
std
cmp
data16
rolb
add
leave
add
fwait
test
pusha
add
add
pop
add
loope
cmpsb
add
ds
add
add
stos
dec
test
xor
or
jmp
push
add
out
push
ljmp
sub
lcall
mov
xlat
or
add
xchg
cmp
addb
out
roll
ljmp
xor
addb
jne
movsb
add
inc
add
movsl
add
or
popa
add
push
rolb
add
add
add
add
cli
add
and
pop
inc
add
outsb
aas
in
scas
jp
jg
cmp
add
mov
jb
jge
lcall
loopne
jmp
roll
jg
mov
and
dec
xchg
lret
lahf
cmp
addb
mov
jmp
lcall
outsl
arpl
inc
lcall
lods
lock
fildl
dec
cltd
lret
mov
add
add
jle
add
and
xchg
pop
rcrb
cwtl
imul
add
mulb
add
jb
aas
pop
add
ljmp
mov
shlb
add
daa
add
mov
push
scas
lds
mov
push
add
fisttpl
test
cs
inc
add
repnz
add
shrl
xor
sub
or
push
jno
add
push
push
add
outsb
mov
add
test
xchg
mov
scas
cmp
fs
rolb
shl
jmp
push
aas
add
add
popa
add
add
jmp
add
scas
in
cmpsl
add
insl
pop
cli
sbb
adc
mov
inc
add
push
inc
push
js
stos
jns
dec
lcall
add
xor
daa
add
lcall
movb
test
pusha
add
or
add
add
xor
pop
add
jnp
add
pop
push
add
leave
mov
incl
ret
data16
add
addl
add
add
add
lea
addb
add
mov
iret
jb
fiaddl
lock
sub
lret
sbb
mov
sbb
add
and
xor
xchg
xchg
push
cs
add
cmp
in
lea
or
pop
mov
mov
jmp
add
add
push
jmp
push
add
ljmp
fwait
add
pop
sbb
add
add
add
imul
add
adc
add
lcall
add
cmp
add
rolb
lods
adc
movb
pop
or
add
cmp
adc
add
inc
add
cmp
add
inc
add
inc
add
xor
mov
mov
cmp
std
ljmp
xchg
mov
out
fwait
lret
ds
adc
aam
add
add
mov
mov
ljmp
jecxz
and
repnz
mov
add
ja
mov
shl
add
mov
icebp
insl
test
pushf
sbb
push
call
loope
mov
inc
add
add
enter
test
arpl
add
roll
add
lcall
push
incl
aas
push
adc
mov
lcall
add
sbb
cli
ja
add
jmp
add
fmull
add
add
xor
test
addl
add
scas
jb
add
adc
call
sbb
add
pop
push
addb
pop
push
add
incl
sub
in
cmp
add
add
push
je
jmp
and
jbe
add
xchg
add
sub
jnp
add
mov
sti
in
dec
mov
or
add
aaa
xor
pop
mov
ljmp
inc
inc
add
adc
add
in
inc
add
mov
add
mov
cli
xlat
cltd
loopne
sahf
jne
sbb
push
ret
lcall
mov
mov
add
roll
leave
and
ss
sub
pop
push
jl
mov
sub
mov
pop
mov
mov
add
add
test
sti
mov
sub
jmp
sbb
add
mov
in
push
add
jmp
push
mov
inc
lds
sub
mov
inc
mov
call
push
in
sub
jp
inc
add
test
addl
add
scas
arpl
inc
add
roll
movb
cmp
mov
jmp
sub
lcall
add
sub
add
mov
pop
shr
xchg
addl
add
call
cmp
mov
aaa
jge
test
cli
mov
mov
rolb
jmp
jne
mov
adc
mov
frstor
test
call
jle
inc
orl
mov
pop
jnp
addl
add
add
add
jmp
jae
in
cmpsl
add
fisttpll
pop
cmp
cs
test
add
lea
jg
add
sbb
jmp
add
push
inc
mov
dec
in
push
sahf
ljmp
in
adc
add
scas
jbe
add
sub
das
int
sbb
or
jmp
or
inc
pop
fmuls
std
mov
cmpsl
add
call
arpl
xchg
cs
add
int3
aad
lret
mov
add
rcll
add
sub
mov
adc
sar
sub
xchg
sub
add
in
aam
add
add
add
scas
in
inc
add
ljmp
sub
add
mov
add
add
add
pop
movl
add
lds
lret
roll
add
mov
and
js
push
neg
sub
bound
cld
xchg
ljmp
ret
and
stos
mov
sbb
or
sar
jmp
and
pushl
add
mov
ss
xchg
fidivrs
cltd
mov
mov
xchg
push
ret
add
clc
add
dec
cli
cmp
add
out
inc
add
add
shl
add
jmp
push
fdivr
call
push
push
enter
add
hlt
int3
icebp
mov
dec
inc
add
push
sub
mov
lahf
filds
jl
add
inc
add
add
dec
mov
cld
fwait
popa
add
or
cmpsb
add
bound
cmp
loop
pop
jbe
addl
jecxz
ja
add
into
mov
ss
push
dec
add
add
and
mov
jno
in
add
movb
sarb
push
das
xchg
cwtl
mov
dec
aad
ljmp
dec
push
cmp
cmp
add
add
jb
jmp
repz
inc
add
fiaddl
movsl
add
xor
push
ret
inc
aam
inc
roll
add
in
add
pushf
add
add
sahf
lahf
sub
in
fistps
add
adc
add
add
jmp
add
adc
push
enter
add
add
add
loope
pop
aas
ret
pop
sbb
shll
dec
push
mov
test
clc
xlat
rolb
pushf
jge
mov
add
xor
jb,pt
lret
add
lcall
addl
sbb
add
push
lahf
aas
xor
mov
mov
jno
or
mov
testb
cmc
ret
add
int3
aam
mov
add
dec
mov
aaa
fwait
inc
add
push
idivb
out
pusha
add
jle
js
out
jg
mov
popa
add
repnz
add
aam
mov
add
aaa
jg
movb
das
sti
clc
outsl
inc
add
dec
and
jle
addb
add
push
add
sti
jecxz
add
pop
jp
addr16
inc
add
add
add
jl
pop
push
pop
lods
sub
lcall
add
add
add
add
add
cwtl
or
lahf
adc
dec
pop
jb
outsb
add
ljmp
add
xor
sti
adc
pop
cli
cmp
dec
xor
add
addb
in
add
outsb
xchg
fwait
mov
fsubl
sbb
nop
pop
sbb
popa
add
mov
in
mov
or
pop
jg
scas
addb
inc
add
faddl
loope
cli
pushf
push
mov
test
add
inc
add
decl
jmp
inc
sub
mov
add
xor
add
add
fdivrs
rolb
push
outsl
adc
mov
add
push
or
lods
ss
add
add
jl
add
xor
xchg
inc
add
leave
mov
loope
and
jb
add
jecxz
or
add
into
mov
stos
leave
inc
add
popa
add
add
shlb
xor
add
add
add
cmpsb
add
js
mov
dec
push
int
xor
add
movb
decl
jmp
cmp
addl
add
pop
out
test
jae
inc
add
loopne
imul
je
add
and
inc
add
pop
ss
add
dec
push
add
and
in
mov
in
cld
lret
addl
insl
mov
add
push
enter
add
push
add
addr16
push
pop
xor
jnp
jl
add
add
lods
daa
add
jl
push
jmp
push
push
cld
fildll
enter
jno
out
jns
sub
add
jle
mov
iret
add
cmp
mov
aam
add
add
fildll
mov
jmp
cwtl
test
int
enter
xchg
nop
push
add
in
and
pop
add
pop
add
add
decl
leave
inc
add
sub
ljmp
mov
icebp
adc
add
add
and
lods
loop
xchg
mov
dec
cli
cmp
and
jmp
add
ret
add
or
rolb
push
sti
push
mov
loop
loop
cs
mov
mov
inc
add
test
stos
xchg
sub
add
fadds
add
and
pop
imul
sub
add
ret
add
pusha
add
add
movsl
add
fcompp
add
nop
data16
xor
mov
cmc
mov
add
hlt
js
das
movsb
add
add
mov
pop
ret
lcall
testl
add
adc
or
push
lea
jmp
xchg
xorl
popf
cmp
pushl
inc
add
ljmp
jnp
add
adc
fmull
cmp
aam
pop
mov
rcll
inc
add
int
push
movl
add
sahf
test
mov
call
xchg
loopne
cmpsl
add
add
add
add
mov
in
pop
mov
cmpsl
add
add
call
lds
imul
add
jle
add
mov
addr16
add
jmp
or
scas
and
add
add
add
sub
push
jecxz
movb
jmp
shl
cmp
js
mov
jne
add
scas
fisttpll
add
jmp
lock
mov
stos
leave
rorb
or
add
addb
arpl
cmp
add
icebp
clc
lock
aas
lock
sub
xchg
jl
add
cld
push
xor
fxch
push
ror
jmp
jb
cmp
dec
pop
lret
movb
jmp
testl
dec
jae
add
repz
test
add
add
cltd
adc
roll
fiaddl
add
mov
call
push
and
mov
add
shrd
add
or
std
xor
add
inc
adc
add
add
std
ret
add
sub
ds
push
add
dec
lret
pushf
mov
test
mov
aad
roll
ljmp
add
and
pop
in
jl
movsl
add
add
add
push
jmp
add
xor
mov
roll
push
cmc
or
int3
pop
cmp
mov
adc
pop
divl
jne
or
cld
sahf
mov
xchg
dec
xor
testb
add
mov
pop
icebp
pop
movb
pop
jl
inc
add
add
add
fisubrs
mov
push
xlat
das
jle
add
gs
or
add
jnp
arpl
movsb
add
push
push
push
jecxz
movsb
add
repnz
push
ret
and
push
xchg
push
xchg
popf
out
nop
dec
add
call
jmp
inc
and
add
imul
stos
jmp
push
ljmp
add
add
push
jmp
pop
les
shr
xchg
dec
bound
jae
movsl
add
add
add
leave
jl
add
pushf
and
mov
jmp
sbb
push
nop
pop
and
shrl
cmpsb
add
add
add
mov
dec
bound
addl
dec
cld
rclb
pop
mov
jbe
insl
clc
add
mov
lcall
mov
mov
jmp
and
push
setle
call
jmp
jge
lret
add
iret
data16
into
ds
loop
movsl
add
jnp
add
add
call
add
adc
sti
ljmp
pushl
xchg
mov
jne
mull
in
sbb
push
or
sub
inc
push
cmp
mov
jmp
push
push
adc
mov
adc
jno
xchg
iret
jb
add
imul
scas
dec
jmp
int3
add
call
jbe
xor
xchg
flds
pushl
cltd
jb
mov
xchg
iret
loop,pt
cmp
aas
loopne
or
add
inc
add
ret
add
dec
fsubl
cmp
cmp
loope
outsb
xchg
addl
cmpsl
add
add
lcall
sub
add
cmp
sbb
adc
popf
int3
jns
push
mov
out
hlt
sarl
lock
or
add
stc
push
adc
fcmovu
fwait
rclb
shr
jmp
jb
fstps
dec
imulb
icebp
movl
add
push
cli
inc
add
add
ds
cwtl
xchg
fcmovnb
add
push
push
ret
push
ret
add
push
push
mov
std
call
add
and
pusha
add
lcall
mov
add
rcll
leave
jle
jae
movsb
add
cmp
pop
test
xchg
movl
mov
aas
movsb
add
stos
sub
jg
loope
adc
add
roll
adc
and
dec
cwtl
out
lds
and
add
ljmp
cs
xchg
mov
jbe
ljmp
add
add
and
push
aad
lret
mov
pop
aas
call
icebp
fimull
pop
into
adc
mov
add
int
movl
add
cmp
lahf
lock
add
add
stos
arpl
jne
mov
jmp
add
inc
add
incl
sarl
addl
insl
cmp
aaa
mov
or
pop
add
mov
xchg
test
cli
icebp
pop
testl
inc
add
ds
add
jle
ss
loopne
adc
roll
xchg
aam
out
mov
sbb
or
addl
sub
add
call
add
int3
loope
and
sar
loopne
setl
add
rcr
sbb
add
push
cmp
imul
mov
mov
addl
pushf
push
dec
adc
mov
out
insl
lcall
std
and
sub
call
jge
lahf
lret
inc
add
incl
mov
add
jecxz
aas
lret
add
dec
repz
mov
into
sub
add
sub
jecxz
lock
ret
lahf
sbb
movsl
add
pop
inc
add
add
add
add
mov
push
fcoms
add
add
and
push
push
int3
mov
cmp
or
add
sub
xchg
add
and
push
addb
add
sub
xchg
stc
sub
add
sbb
cmp
add
add
add
add
xchg
pop
aaa
addb
shrl
push
add
mov
in
xlat
data16
cmp
pop
mov
test
addb
xor
mov
shrb
movb
add
mov
add
cmpsb
add
xchg
enter
lcall
dec
aam
rcl
leave
jecxz
ja
add
add
data16
lods
daa
add
xchg
mov
hlt
push
mov
test
mov
inc
add
add
addl
inc
add
scas
and
push
add
ljmp
xor
incl
incl
rolb
add
push
jne
add
cmp
xchg
data16
xor
pop
inc
add
sbb
pusha
add
dec
sub
inc
add
ja
hlt
lock
cs
or
pop
rcr
or
insl
jl
sub
int
add
sub
add
add
add
add
inc
add
xchg
rcrl
mov
addl
data16
ljmp
jecxz
sub
add
add
jmp
dec
stos
loop
popf
push
jno
sbb
xor
adc
add
add
aad
mov
in
cmp
fisubs
jge
inc
add
outsb
jecxz
lahf
mov
pop
clc
mov
ds
add
add
pop
shrl
in
push
mov
lret
into
into
dec
into
sub
add
repz
mulb
add
lock
pop
lea
ret
fwait
or
in
testb
call
push
cmp
sub
mov
in
loop
jmp
and
pop
mov
fistpll
scas
imul
jle
inc
add
jbe
pop
xchg
lret
pop
out
dec
and
push
push
idiv
push
dec
out
and
or
and
mov
add
adc
popl
repnz
add
stos
adc
add
pushl
je
add
or
into
xchg
xchg
inc
add
add
mov
add
ret
ret
add
add
jnp
jp
inc
add
ljmp
jecxz
xor
push
addb
add
jmp
add
xor
fidivs
xor
mov
xchg
adc
rcrl
in
cltd
mov
add
testl
scas
add
pop
out
les
sbb
push
adc
jl
xor
add
mov
add
arpl
mov
push
add
decl
sub
add
add
int
addl
pushf
mov
xlat
mov
xchg
xor
add
add
add
rolb
add
cli
rolb
test
sbb
add
test
hlt
cwtl
pop
mov
cli
sbb
lahf
je
gs
add
add
jo
add
mov
mov
pop
imul
push
pop
lret
add
add
xor
inc
add
mov
sbb
inc
add
pop
add
loopne
pop
xor
add
mov
add
add
ljmp
add
out
icebp
dec
adc
incb
repz
add
out
cmc
jmp
arpl
mov
fwait
lock
or
aam
xchg
xchg
pop
sti
mov
lds
bound
aam
adc
inc
add
add
add
add
push
test
add
jbe
lods
test
cmp
ss
add
pop
jne
add
xchg
jns
jle
push
cli
lahf
inc
add
add
mov
lea
add
das
js
jae
add
jmp
add
add
mov
pop
fisubs
cmp
imul
dec
mov
push
mov
icebp
add
sbb
test
ja
sbb
rcl
stos
fcoms
jge
js
and
cmp
add
lods
push
xchg
add
decl
xchg
add
out
mov
test
pop
jecxz
ss
imul
add
addl
mov
jae
inc
add
bound
clc
aaa
in
std
aaa
add
jno
add
enter
inc
add
int
add
in
push
adc
cmp
std
cltd
pop
add
jge
mov
ds
pop
mov
sti
xchg
xchg
lods
xor
fistpll
jb
test
fisubl
jns
inc
add
add
add
hlt
scas
loopne
xchg
jmp
clc
cmpsl
add
add
add
out
movb
add
ret
add
pop
push
rcrb
jg
add
call
lret
pop
add
xchg
aad
shll
pop
dec
mov
push
or
push
add
inc
add
push
push
push
sub
movl
int
add
lcall
in
or
push
add
mov
jl
add
clc
test
lods
mov
das
add
int3
or
add
test
add
sbb
clc
inc
add
push
dec
pop
jnp
add
ljmp
pop
adc
add
es
dec
movl
repnz
ja
mov
add
mov
jl
out
das
mov
aas
sub
jnp
lock
enter
ljmp
imul
jmp
add
out
sbb
rolb
add
arpl
pop
sub
add
sbb
js
mov
fwait
add
jns
mov
xchg
pusha
add
mov
xor
xor
or
inc
add
add
jmp
lret
inc
add
add
lea
and
daa
add
lock
add
add
add
add
out
and
add
cmp
or
add
and
dec
cmp
incl
aaa
loop
arpl
push
sub
add
icebp
mov
xlat
push
lods
xor
pop
cmc
pop
and
shl
dec
popa
add
add
add
inc
add
pushl
lods
mov
cmp
mov
fdivrl
cltd
jb
jns
add
add
add
add
ljmp
testl
add
add
mov
fsubrs
cli
imul
popa
add
scas
jmp
mov
add
add
stos
leave
mov
xchg
jnp
inc
add
repz
add
add
jmp
std
and
clc
mov
xchg
data16
add
add
aas
lea
xchg
sbb
add
js
dec
ret
call
jp
jecxz
pop
xchg
mov
push
insb
sub
lret
cltd
lock
dec
outsb
jg
add
ljmp
sub
mov
lods
scas
imul
add
jb
xchg
sub
popf
fstpt
and
out
addb
test
xchg
ja
add
jb
aas
lock
scas
daa
add
mov
xlat
inc
add
add
add
add
pop
mov
dec
aad
jns
out
imul
add
push
into
les
dec
cmp
sbb
sbb
add
xor
push
add
cmp
add
add
add
bound
pop
add
mov
les
dec
pop
fucomi
repz
addb
add
dec
cmp
add
mov
add
add
add
add
xchg
leave
add
jge
into
in
mov
inc
add
scas
repnz
add
aaa
pop
in
xchg
pop
mov
scas
push
loop
jns
inc
add
xor
mov
jmp
add
lret
incl
fcompl
addb
add
jl
incl
inc
add
xor
add
pop
add
and
pop
dec
mov
add
and
add
sbb
shlb
sub
in
pop
jae
movl
push
addl
cmp
enter
pop
pop
pop
mov
cmp
cli
inc
add
inc
add
mov
data16
in
std
repz
pop
lods
and
push
js
enter
push
sahf
call
dec
sub
xlat
pop
inc
add
or
adc
adc
imul
xchg
adc
or
add
imul
mov
in
adc
dec
mov
lds
test
stos
mov
add
add
mov
loop
std
nop
ret
incl
ljmp
ljmp
add
pusha
add
out
cwtl
push
add
inc
add
test
repz
shrl
add
add
mov
shlb
add
out
fisttpl
cmp
add
pushf
les
fwait
mov
add
pop
je
sub
loopne
jmp
push
mov
sub
mov
add
push
mov
or
add
add
add
in
and
fsubrs
add
incb
js
loope
fstl
scas
jo
sub
stc
xchg
mov
jl
aas
in
mov
add
shl
movl
push
push
inc
add
mov
add
sub
sbb
fucomip
jnp
sahf
dec
neg
mov
add
decl
aam
pusha
add
sub
scas
add
sti
sub
ja
xor
jmp
sahf
adc
jnp
scas
pop
rolb
in
dec
jne
add
add
xchg
mov
add
push
jg
add
add
pushf
lea
pushf
add
adc
add
mov
or
arpl
mov
and
push
and
inc
add
add
push
imul
inc
add
add
pop
adc
jmp
sbb
xlat
mov
mov
and
xor
ljmp
and
adc
popl
add
out
push
fsubrs
sbb
adc
mov
rolb
add
div
call
add
call
inc
add
in
sub
imul
out
fstpt
add
lods
sbb
add
add
inc
add
add
cmpsl
add
cltd
add
jp
pop
xchg
jecxz
inc
add
xchg
mov
or
add
hlt
push
or
pushl
lret
nop
aam
add
mov
jl
mov
dec
inc
add
cmp
add
jae
push
adc
idivb
repz
cmp
jge
mov
aam
xor
in
das
adc
addl
jb
int3
sarb
inc
add
add
mov
dec
icebp
mov
push
xor
pushl
clc
inc
add
das
out
lods
push
in
lea
or
add
add
inc
add
lea
stos
mov
sbb
xor
push
nop
push
nop
packuswb
loope
mov
add
setl
pusha
add
ljmp
addb
rolb
add
sti
add
pushl
add
mov
xchg
lods
lret
cmp
cmpsl
add
add
add
lret
push
mov
add
add
mov
imul
iret
ficoml
call
addl
add
test
add
jnp
enter
add
add
repz
add
add
pop
idivl
mov
add
lea
push
je
jmp
add
stos
mov
xor
sarb
movb
add
add
cmpsb
add
mov
insb
fsubrp
int3
addl
int3
call
dec
dec
or
inc
add
mov
repz
inc
add
mov
mov
je
adc
out
jmp
into
mov
in
jge
loope
jp
add
inc
add
lcall
sub
push
xor
and
mov
pop
push
xchg
push
in
jo
add
call
xchg
jbe
in
jns,pt
add
loope
and
mov
add
add
arpl
adc
aam
mov
pop
add
fisttpl
clc
insb
fistps
out
mov
xchg
cmpsl
add
add
add
push
sbb
lahf
jp
mov
add
add
jbe
gs
pop
add
xchg
xchg
cli
aad
add
pop
sbb
add
add
repz
pop
xchg
pop
inc
add
pop
mov
add
add
add
xchg
and
or
test
dec
xor
lods
aaa
adc
rolb
in
cltd
mov
and
push
add
sub
add
add
jb
stos
addl
fwait
hlt
jmp
jne
add
decl
addb
or
adc
jge
mov
push
add
pop
and
cwtl
testl
add
xor
fcompl
xor
add
add
dec
xor
popa
add
add
bound
testb
adc
cli
test
ret
or
add
adc
sbb
sbb
sub
arpl
xchg
pushf
mov
add
test
inc
add
xor
outsl
out
push
add
call
leave
mov
add
les
push
call
fcmovnb
add
cmpsb
add
dec
imul
out
rclb
add
lcall
pop
mov
and
mov
add
iret
pop
in
mov
not
jg
xor
inc
add
add
push
cmp
into
rol
add
xlat
fwait
and
inc
add
cmc
mov
add
loopne
outsl
mov
fnsave
jg
add
add
add
add
cltd
mov
dec
xchg
add
test
int
add
pushl
lds
cmp
xor
add
stos
mov
add
add
adc
add
cmp
inc
add
dec
sbb
add
aaa
sti
and
xor
loop
popf
sbb
out
mov
add
or
adc
sub
add
add
fisubl
lret
pop
mov
xchg
movl
pusha
add
mov
cmp
mov
adc
nop
hlt
dec
out
out
or
inc
add
dec
add
in
mov
add
cmp
mov
mov
daa
add
add
push
xor
xchg
stos
cmpsb
add
dec
rorb
sub
add
xchg
loop
out
sbb
mov
jnp
stos
scas
rclb
add
out
lret
push
sbb
and
daa
add
int
sub
pop
lret
cmp
mov
cmp
add
inc
add
cmp
xor
add
add
data16
add
mov
bound
loope
pop
loopne
aam
cltd
jb
mov
add
and
cmpsl
add
mov
dec
xchg
cs
add
mov
mov
addb
push
mov
add
or
mulb
add
decl
add
fcomi
arpl
and
add
sub
mov
pop
pushl
add
mov
pop
rclb
add
xchg
jns
push
push
add
adc
mov
mov
fldt
xchg
movb
addb
xor
pop
pop
mov
pop
add
jmp
add
pushl
daa
add
add
mov
lret
dec
cwtl
rorb
test
add
bound
stos
repz
sbb
addb
sbb
stos
pop
xchg
addl
mov
fiadds
lcall
xchg
aas
pop
pop
js
call
jmp
inc
add
insb
cmp
add
sti
jecxz
sbb
icebp
out
mov
jb
or
insl
push
and
mov
mov
fcmovu
inc
add
data16
dec
outsl
mov
add
gs
fwait
pusha
add
arpl
ja
ljmp
les
mov
and
push
bound
inc
add
les
mov
insl
jns
push
add
call
add
dec
stc
push
add
add
xchg
jp
aas
loopne
mov
add
xor
sub
cmpsb
add
or
movsl
add
push
jl
jl
cmp
add
popa
add
bound
aas
hlt
cmp
add
in
scas
xor
add
outsb
sub
stc
inc
add
add
movb
cs
add
jae
and
rolb
dec
add
xchg
stc
fidivrl
cmpsl
add
pushf
pop
movb
aad
in
pop
push
scas
add
dec
fisubrl
aaa
je
decl
push
sbb
sub
add
mov
sbb
les
mov
inc
add
std
ret
add
add
xchg
imul
test
inc
add
mov
push
add
add
add
add
add
fsubrs
push
inc
add
add
aas
out
xor
mov
and
mov
dec
inc
add
sub
xchg
stos
xchg
sub
pop
sub
stc
xor
lcall
add
ds
jle
movb
jle
out
xchg
data16
addl
mov
add
ljmp
incl
add
fisubs
out
xlat
roll
pop
fdiv
add
and
or
decl
pop
cmp
popa
add
movsl
add
add
jmp
out
mov
out
xor
movl
mov
incl
add
sti
adc
add
icebp
inc
add
dec
outsl
xor
fisttpll
mov
or
add
sbb
add
pop
into
lcall
add
fwait
outsl
lcall
clc
dec
add
dec
jge
enter
imul
add
sbb
ret
add
data16
lret
lock
push
cli
in
rol
add
ja
shlb
or
mov
and
fwait
xlat
movl
add
and
sbb
jle
lock
xchg
jmp
add
inc
add
add
std
push
ficoml
pop
cmp
add
add
inc
add
push
mov
mov
fstps
inc
add
inc
add
or
mov
xchg
adc
adc
add
pop
push
add
popa
add
lods
test
xor
add
and
movb
fwait
das
cmp
call
push
loopne
xchg
stos
test
mov
inc
add
cs
incl
add
rcl
addl
xchg
loope
addl
pop
cmp
fwait
jg
add
add
add
add
mov
sbb
inc
add
sbb
icebp
push
in
add
faddl
xor
outsl
push
stos
sbb
jmp
xchg
fwait
push
fdivrp
pusha
add
push
mov
add
add
sarl
add
call
in
xchg
movb
add
cmp
lods
movsl
add
push
mov
add
call
loopne
out
sbb
out
push
mov
add
add
add
add
popa
add
fnsave
xlat
and
or
fwait
das
sahf
push
add
cmp
add
add
fisttpl
addb
and
fwait
cmp
rcll
jae
clc
jne
and
sahf
mov
repnz
mull
add
xor
push
addb
push
xchg
loope
das
sub
push
pop
fnsave
pop
lret
mov
sub
xchg
stos
scas
fdivrs
add
add
loop
dec
out
nop
clc
dec
add
lcall
pop
mov
lods
addl
cmp
add
jnp
pop
pusha
add
lods
and
mov
mov
mov
or
mov
adc
cli
aam
xchg
xchg
push
pcmpeqb
add
lea
xchg
inc
add
xor
add
sub
add
push
push
pop
jmp
aam
and
inc
add
jnp
fisubl
rcll
imul
insb
sub
add
add
add
mov
pushf
cmp
add
add
fisttpll
or
rorl
push
into
ss
addl
repnz
aaa
add
add
add
data16
jb
add
cmpsb
add
inc
add
lods
xchg
mov
sbb
inc
add
add
stc
or
test
xor
pop
push
and
in
cmp
pop
xchg
lcall
pop
in
jne
add
loop
pushf
push
mov
fsubrs
inc
add
add
add
jae
add
int
popa
add
push
add
roll
add
add
test
sarl
outsl
cli
aas
pop
fbld
pop
add
loope
or
xchg
sahf
les
mov
cwtl
sti
inc
add
add
in
cld
cmpsl
add
stos
call
mov
add
sub
enter
add
std
in
sbb
sub
add
pop
cmp
add
lcall
inc
add
fnstenv
add
mov
in
dec
lcall
fidivrl
inc
add
clc
mov
push
adc
mov
cmp
add
add
incl
decl
loop
fs
add
add
fadds
add
and
outsb
fcomi
int
setb
roll
add
sbb
xor
add
aas
imul
sti
lea
add
out
arpl
or
or
mov
xchg
out
int3
xchg
push
adc
data16
aaa
outsb
mov
mov
add
add
pushf
xchg
flds
push
ret
add
aad
scas
xor
addb
ret
add
add
mov
addl
pop
scas
cmp
jp
jbe
jo,pt
add
mov
add
mov
mov
add
loopne
xlat
insb
cli
mov
mov
add
add
add
add
lea
add
adc
inc
add
mov
xchg
call
and
arpl
and
test
add
add
add
aad
daa
add
scas
mov
pop
lea
push
jne
add
add
adc
xor
sbb
xchg
push
rcrb
mov
aam
add
add
add
add
rcrl
movl
shll
pop
pop
inc
add
sbb
push
add
in
push
daa
add
int3
sbb
xor
mov
jne
mov
fnstenv
add
test
add
loopne
push
addb
test
push
dec
addb
pop
inc
add
stos
xor
jbe
mov
mov
cmpsl
add
dec
jnp
imul
mov
sti
lcall
add
cmp
les
lahf
roll
add
jnp
add
and
adc
call
call
adc
icebp
push
sub
push
pushf
and
add
add
sahf
icebp
sub
add
jmp
dec
mov
add
imul
add
sub
cmp
daa
add
ficoml
dec
or
add
aam
sbb
aad
push
push
inc
add
add
imul
mov
lds
push
sub
push
fwait
push
mov
add
adc
add
inc
add
cmc
daa
add
push
dec
sub
push
add
add
add
push
or
cld
adc
sub
mov
les
pop
stos
shrb
mov
hlt
lock
pusha
add
mov
add
in
jecxz
lods
adc
add
cmpsb
add
ret
add
pusha
add
xlat
xchg
dec
mov
lods
movsl
add
enter
clc
push
xchg
cmp
lcall
fldl
add
aas
dec
jbe
adc
add
add
add
hlt
and
or
int
add
xchg
lret
ret
add
add
add
add
das
es
and
das
cmp
mov
imul
aaa
mov
xchg
adc
dec
mov
inc
add
pop
cmp
push
dec
leave
addl
add
push
insl
in
sbb
add
jg
add
pusha
add
adc
sub
add
inc
add
mov
jno
ljmp
movb
inc
add
icebp
cs
add
add
adc
push
sub
arpl
and
mov
iret
xor
mov
lcall
add
repnz
add
add
cwtl
add
rcl
addb
mov
adc
xchg
jo
add
add
dec
dec
out
jno
lods
mov
mov
add
clc
add
jmp
add
push
jo
mov
lahf
sub
sbb
add
out
addl
push
or
les
ljmp
pushl
shrb
iret
mov
icebp
and
bound
aaa
pushf
pushf
cmp
add
mov
cwtl
addl
sub
out
mov
add
add
daa
add
outsl
repnz
sbb
push
fs
add
xor
cmc
daa
add
out
scas
add
gs
pop
push
outsl
or
pop
into
fistps
xchg
mov
jmp
add
in
xchg
lret
add
add
lret
mov
out
mov
lods
scas
push
sub
les
and
aam
jae
add
push
fidivrl
xchg
lods
movb
incl
pop
fcoml
daa
add
stc
cwtl
lods
rcll
iret
daa
add
mov
add
daa
add
add
rclb
bound
and
add
jmp
add
mov
ret
add
xchg
into
jge
imul
add
jmp
push
scas
mov
sub
add
inc
add
stos
inc
add
mov
test
stos
pop
je
add
scas
sbb
jge
add
stc
cli
bound
cwtl
mov
xchg
xchg
iret
sbb
add
std
or
add
xor
arpl
in
dec
aaa
in
stc
and
and
inc
add
out
dec
adc
add
addl
popf
pop
jns
pop
adc
mov
mov
insl
push
mov
jg
add
jnp
in
faddl
into
popf
jl
add
xchg
out
sub
xchg
jge
in
pop
mov
cmp
dec
shlb
stc
add
mov
jp
mov
cmp
adc
sbb
add
call
inc
add
add
mov
movb
dec
push
movhps
nop
imul
add
ljmp
adc
mov
add
add
pop
mov
push
or
add
pushl
jo
add
popa
add
testb
jecxz
roll
das
mov
jmp
jb
push
test
mov
xchg
fmuls
les
test
add
pop
add
out
fmull
pushl
add
pop
adc
out
adc
add
sbb
add
add
jmp
xchg
add
into
add
jmp
add
add
add
jle
add
test
adc
repz
dec
inc
add
push
std
add
cld
adc
addb
scas
push
test
push
aad
ret
add
lock
loope
and
jmp
in
xchg
or
xor
add
arpl
push
pop
add
mov
leave
inc
add
pop
add
pop
jle
inc
add
pop
dec
jge
hlt
xor
jmp
jno
js
jnp
mov
call
dec
loopne
roll
mov
adc
sbb
add
movsb
add
int
add
add
and
inc
add
mov
add
js
add
mov
jno
mov
jo
adc
add
sbb
fidivrl
call
mov
add
and
mov
mov
inc
add
add
xor
and
insb
or
sbb
sbb
test
add
insl
fmuls
add
rcll
popa
add
ret
inc
add
add
pushl
add
pusha
add
inc
add
loop
push
mov
add
popa
add
pop
xor
add
add
das
add
call
add
addl
fidivrl
add
adc
cmpsl
add
aam
rcll
std
push
jns
lock
enter
mov
add
xor
in
sbb
mov
cltd
dec
test
add
jae
add
cs
addl
stc
adc
add
sub
ret
add
or
adc
mov
pushf
add
xchg
sub
std
addb
add
add
int
mov
mov
fbld
pop
mov
ljmp
xlat
movsl
add
fsubl
xor
rolb
pop
les
inc
add
adc
sarb
mov
add
lret
insb
lret
pop
jp
cltd
mov
add
je
mov
in
xor
or
or
mov
push
mov
shl
cmp
dec
fmuls
and
in
jb
xchg
xor
xor
mov
add
add
mov
jp
add
lahf
push
iret
mov
add
add
jns
xchg
insb
lods
iret
mov
pop
add
pop
scas
mov
shl
add
int3
imul
add
movb
add
add
mov
mov
jno
cmpsb
add
outsl
ja
leave
shlb
jmp
inc
add
add
pop
mov
dec
push
pop
mov
add
pusha
add
stos
cmpsl
add
push
and
push
xor
add
xor
inc
add
mov
sub
add
xchg
adc
test
mov
push
sarl
cld
lods
stos
or
xchg
jb
mov
add
push
pop
pop
sbb
add
add
sbb
dec
popa
add
lods
mov
in
xchg
lahf
cmpsb
add
mov
xchg
aaa
loop
sahf
insb
xor
sbb
ret
add
lods
add
fwait
cwtl
incb
add
jb
add
jecxz
mov
adc
nop
add
jmp
add
add
lds
inc
add
scas
outsl
test
add
lock
dec
adc
sbb
ljmp
test
int
or
lahf
and
or
divb
popf
addr16
xchg
sbb
stos
add
add
ljmp
add
decl
fdivs
add
test
push
js
push
jl
add
jnp
push
and
mov
mov
mov
out
mov
imul
sti
movl
cmpsl
add
mov
inc
add
adc
cwtl
pop
jnp
push
je
mulb
add
adc
incl
mov
adc
enter
add
mov
hlt
sbb
add
adc
push
add
sahf
cmpsb
add
add
dec
cmpsb
add
nop
jle
sbb
js
mov
add
lods
loope
jl
cmp
add
iret
imul
addl
adc
rcrl
data16
pushf
dec
icebp
xor
fisttpll
add
lss
pusha
add
pop
lahf
ret
inc
add
ret
add
add
in
movsl
add
xchg
adc
icebp
jecxz
or
mov
addb
enter
jle
mov
inc
add
mov
fidivs
mov
add
mov
test
out
sbb
pop
push
add
add
add
jbe
pop
jmp
das
rorl
mov
repnz
hlt
loop
cmp
icebp
pop
add
in
mov
jo
add
add
ret
stc
dec
jne
int
add
push
adc
sub
cmp
fildll
int3
jne
leave
mov
cmp
testb
addl
add
sub
cmp
dec
jo
ret
add
dec
and
fldl
add
lock
add
dec
jno
add
pushl
cmc
aaa
mov
ss
jns
add
cmp
or
fldenv
mov
add
inc
add
aas
jnp
add
lahf
push
arpl
sub
xor
sahf
add
in
mov
js
xchg
xlat
push
mov
jecxz
xchg
dec
or
shl
jnp
xchg
dec
cmpsb
add
mov
mov
adc
movsl
add
add
add
fists
add
add
je
add
add
dec
call
xchg
dec
add
lcall
ljmp
cmc
sbb
xor
jg
pop
pop
mov
mov
je
popa
add
imul
inc
add
mov
fbstp
mov
jecxz
mov
pushf
mov
add
add
incl
pushl
ret
add
add
inc
add
stc
out
sbb
dec
lcall
fsubr
out
mov
lods
mov
add
jle
add
movsl
add
add
cmp
push
stos
cmp
cmp
xchg
mov
adc
push
cmp
add
je
sbb
pusha
add
xchg
movsl
add
add
mov
add
rolb
add
pushl
jne
mov
jg
lock
stc
arpl
stos
addb
jmp
testl
pusha
add
scas
sbb
in
in
cmp
std
xor
jbe
xlat
mov
xchg
scas
iret
jmp
test
add
add
lods
scas
jb
jmp
add
cmp
fstl
ljmp
fwait
lahf
mov
mull
push
adc
sub
data16
mov
and
jecxz
ds
and
test
ds
jecxz
add
sahf
jo
mov
mov
add
inc
add
add
std
add
mov
add
mov
add
and
xchg
addb
add
add
out
pop
push
add
mov
inc
add
add
out
lds
pop
jecxz
mov
dec
out
std
xor
dec
imul
dec
mov
add
aaa
add
xor
add
fcmove
popa
add
jl
popf
sub
loope
xchg
dec
pop
jns
addl
push
arpl
iret
cmp
add
scas
cmp
les
cmc
xchg
xor
add
add
add
cmp
imul
cmp
pop
pusha
add
mov
mov
add
cmp
pushl
push
fdivrs
sub
pushf
je
add
lahf
xchg
push
into
aad
mov
inc
add
mov
insb
jb
add
and
lds
mov
xchg
inc
add
xor
stc
jo
jns
dec
xchg
stos
adc
xchg
cmp
xchg
push
loopne
lea
inc
add
sub
add
cli
pop
cmp
add
adc
sub
pop
add
out
push
push
mov
mov
call
add
inc
add
or
push
stos
jmp
cmp
jmp
pop
push
mov
mov
aaa
call
addl
das
inc
add
bound
aam
add
popf
arpl
push
and
lods
inc
add
add
stc
in
test
iret
aam
sbb
add
add
shrl
insb
mov
cmc
test
dec
stos
pop
ret
add
sbb
scas
sub
add
add
jmp
add
mov
add
push
cmp
add
mov
pop
divl
and
mov
jmp
jg
insb
fwait
rclb
popf
int
movsb
add
add
add
adc
push
je
pop
xor
cmp
cmpsl
add
pop
jne
add
iret
mov
add
mov
add
pushl
add
pop
push
xor
mov
stos
add
add
lds
dec
dec
push
push
mov
lcall
add
addb
testb
sbb
add
mov
add
roll
ret
push
add
add
mov
push
test
mov
pop
and
jl
adc
add
dec
inc
add
add
outsb
test
push
mov
imul
aam
xor
negb
ja
out
outsb
imul
rcr
out
xchg
sahf
cs
movb
sub
dec
jle
fadds
adc
add
mov
jae
repz
add
jp
outsl
lret
dec
xor
adc
hlt
hlt
sar
out
xor
imul
test
testb
jmp
dec
dec
roll
cmpsl
add
xchg
xor
bound
mov
sub
add
add
add
xor
scas
adc
icebp
fsubrl
xor
mov
dec
test
xchg
cltd
stos
bound
shr
inc
add
pop
add
fmull
insb
int
pop
mov
add
add
add
cwtl
nop
mov
mov
sbb
cmp
add
lods
inc
add
adc
add
add
add
test
jl
test
push
test
jle
add
in
mov
fcomps
imul
add
testl
fisubrl
js
js
clc
xchg
sub
sbb
mov
add
pop
pop
loop
movsl
add
add
add
add
jbe
add
fistl
sub
arpl
mov
repz
add
dec
fsubr
out
addb
add
add
add
add
mov
adc
pop
adc
jmp
add
cmpsl
add
jo
mov
add
jl
add
add
adc
add
add
lock
adc
sbb
sbb
bound
or
add
imull
outsl
out
sub
sbb
addb
add
add
mov
add
sbb
out
mov
add
test
test
imul
add
shlb
adc
add
add
lock
jne
shrb
add
insl
mov
pusha
add
add
add
sbb
ljmp
add
pop
lods
shrb
push
insl
imul
call
add
jp
fidivrl
rolb
addl
addb
push
lahf
or
jle
pushf
ljmp
pop
mov
pop
mov
add
xor
std
mov
dec
scas
add
icebp
inc
add
mov
loopne
pop
pushf
in
lea
dec
mov
rorb
sbb
inc
add
inc
add
xor
lcall
add
stos
sbb
aad
sub
xchg
or
enter
dec
aas
jl
and
test
hlt
add
cmp
add
add
adc
add
ficoml
push
xchg
out
push
lock
imul
or
add
cmp
pop
les
inc
add
push
push
cmp
std
bound
lret
add
and
xor
rcr
mov
das
bound
ret
movb
xor
add
sbb
fcom
xchg
sbb
add
push
sbb
imul
fisubrl
inc
add
xlat
iret
cmp
dec
jne
scas
ret
add
add
add
in
xchg
arpl
add
pop
add
sbb
movl
and
jb
push
dec
xor
cmpsb
add
add
int3
add
cld
sub
das
mov
pop
rolb
add
mov
or
pop
push
add
inc
add
decl
add
add
in
xor
jge
lahf
pushf
inc
add
add
mov
push
add
test
pushf
ljmp
add
or
out
add
lcall
adc
lahf
or
jg
daa
add
add
movb
add
push
add
add
pushf
fidivs
in
ljmp
mov
dec
scas
call
xchg
jns
movb
add
fldt
aam
lret
pop
add
sub
or
add
cmp
mov
sub
aaa
add
jns
push
pop
adc
cmp
add
aas
dec
fnstcw
add
decl
push
fwait
nop
filds
bswap
push
cmp
fcmovne
push
add
int
cwtl
or
add
in
jmp
mov
dec
outsl
scas
add
pushl
xchg
jecxz
push
mov
jbe
add
sbb
aaa
sub
add
jmp
add
int3
cwtl
inc
add
xchg
cmp
add
push
dec
push
add
add
xchg
mov
xor
mov
add
mov
jae
xchg
xchg
test
test
inc
add
push
add
jg
add
in
and
adc
roll
add
pusha
add
fst
xchg
daa
add
in
fmul
mov
push
sti
jg
add
decl
int3
xor
inc
add
enter
xchg
ja
add
js
add
mov
ds
xor
xchg
xlat
dec
push
xchg
inc
add
add
xchg
enter
xor
add
add
add
add
and
lcall
movl
mov
std
inc
add
out
int3
sub
add
sahf
fistpl
jb
in
data16
mov
movsl
add
xchg
test
in
icebp
aas
add
jmp
add
adc
xchg
push
xchg
xchg
lods
movb
add
add
insb
inc
add
scas
add
pop
push
or
push
xor
push
fxtract
fwait
dec
mov
and
or
add
dec
xor
add
test
inc
add
sahf
dec
inc
add
ds
cmpsb
add
ss
add
jns
lds
adc
mov
adc
aaa
gs
ret
add
jmp
add
cmp
inc
add
movb
loop
in
and
add
mov
clc
imul
fildl
pop
lea
movsb
add
add
add
jmp
clc
pusha
add
or
stos
fs
call
add
add
test
inc
add
insb
loopne
inc
add
push
mov
add
add
lods
call
mov
lds
xor
sbb
and
rcrl
cmpsl
add
idivl
add
shl
mov
lds
xchg
adc
sbb
add
add
sub
mov
adc
sti
add
mov
add
jmp
add
cmp
pop
mov
jl
adc
pop
add
repz
adc
fistl
add
add
add
aad
add
push
adc
fidivrs
xor
add
add
test
add
hlt
popf
adc
pusha
add
jae
adc
push
lret
and
inc
add
xchg
or
cld
adc
test
push
inc
add
hlt
sub
add
