inc
and
out
loopne
out
insl
inc
sub
mov
in
dec
or
imul
add
inc
inc
dec
inc
ret
push
movsb
dec
mov
cmpsl
lret
sub
push
xchg
inc
xchg
dec
and
loopne
lds
int3
out
mov
dec
data16
mov
lret
ret
andb
ret
sub
insb
pusha
es
mov
dec
in
push
add
in
inc
lea
cmpsl
mov
dec
add
jmp
loope
inc
lret
test
shrd
stos
out
das
lret
inc
add
insl
inc
es
mov
jmp
bswap
dec
mov
out
dec
arpl
in
andb
das
imul
movsb
add
or
lds
int
int
insl
jmp
or
sub
pop
shr
and
enter
ret
inc
sub
addb
push
add
es
ret
pop
inc
dec
and
mov
out
inc
ret
int
dec
in
lret
mov
scas
inc
and
andb
mov
mov
out
into
gs
or
or
daa
arpl
add
in
stos
orl
and
mov
ret
in
lods
test
jmp
test
dec
stos
imul
add
jecxz
dec
scas
inc
cs
dec
loop
addr16
int
gs
movsl
scas
mov
add
lods
and
in
scas
dec
punpckhwd
mov
scas
movsb
sub
call
enter
add
lea
mov
inc
movsl
lods
orl
es
cmpsl
into
stos
test
inc
jecxz
add
dec
push
push
add
addb
in
loope
dec
inc
test
ret
jmp
andl
mov
sub
or
pop
inc
enter
push
leave
in
mov
or
roll
or
daa
jecxz
sub
enter
add
test
sub
mov
outsb
or
add
insl
insb
mov
push
cmpsl
add
subl
dec
or
in
add
out
fs
dec
imul
mov
inc
imul
pcmpgtd
dec
test
or
subb
mov
add
lret
mov
inc
push
add
data16
lds
and
lret
xchg
insl
insl
andb
cmpsl
popa
into
add
mov
ret
add
lods
and
outsl
in
or
sub
dec
into
mov
call
lods
sub
and
cs
addr16
mov
jecxz
test
inc
jmp
test
insl
and
dec
add
mov
add
stos
bound
and
out
lods
jmp
mov
enterw
in
dec
or
pusha
mov
sub
dec
push
insl
pop
movb
movsb
test
dec
push
movsl
sub
mov
test
mov
out
inc
loop
mov
inc
mov
imul
mov
and
and
xchg
test
dec
dec
in
movsl
int
in
bound
jmp
dec
data16
ret
inc
addr16
sub
loopne
jmp
and
sub
add
inc
sub
dec
test
inc
ljmp
shr
mov
bound
mov
push
inc
es
daa
scas
jmp
inc
and
add
inc
imul
test
into
ret
int3
insl
fs
mov
lret
arpl
or
and
or
insb
sub
lods
inc
cs
imul
xchg
and
leave
and
or
iret
push
out
and
push
mov
iret
rolb
inc
add
dec
lds
int3
lret
lods
cmpsl
ret
ljmp
lds
cmpsl
or
lret
out
and
add
or
cmpsb
and
stos
lds
scas
addr16
loopne
test
scas
pusha
out
push
mov
stos
out
push
mov
or
arpl
stos
inc
jecxz
dec
sub
es
iret
cmpsl
scas
int
in
and
dec
in
push
movsb
sub
roll
inc
inc
imul
stos
daa
leave
loop
sub
enter
out
out
int3
scas
movsb
popa
les
sub
lret
and
test
data16
add
stos
outsb
in
subb
and
scas
push
cmpsl
cmpsb
ret
insb
dec
out
int
mov
gs
sub
mov
mov
lret
loop
sub
orl
ret
lds
out
mov
dec
shr
sub
loopne
in
dec
imul
int
ljmpw
andl
and
sub
es
or
ret
int
das
mov
daa
sub
add
or
ljmp
andb
mov
xchg
ljmp
dec
cmpsb
test
es
pop
ret
fs
imul
int
dec
stos
cmpsl
mov
inc
out
push
mov
insl
sub
in
dec
in
popa
les
dec
sub
test
lret
push
test
enter
enter
lods
inc
movsb
popa
lods
or
into
scas
and
loopne
imul
add
into
sub
outsb
movb
subb
add
outsl
and
andl
int3
popa
mov
fs
inc
add
cs
movl
insb
int
into
imul
lret
dec
inc
loope
addl
or
daa
out
mov
bound
dec
andl
and
enter
fs
outsl
stos
in
inc
inc
test
and
arpl
or
and
and
pmulhuw
wbinvd
push
inc
iret
movl
inc
and
in
inc
sub
or
mov
movsb
lods
dec
dec
inc
popl
movd
loope
movsl
sub
add
popa
stos
outsl
daa
mov
subl
daa
mov
add
arpl
dec
insl
and
gs
andb
mov
ret
add
addr16
orl
mov
es
and
stos
add
push
scas
inc
insl
dec
out
imul
and
mov
and
inc
out
in
out
add
arpl
out
mov
and
shlb
les
ljmp
insb
cmpsl
int
dec
sub
arpl
int
scas
lea
orl
mov
inc
outsb
dec
dec
push
into
stos
pusha
inc
loop
inc
call
mov
lods
andb
iret
inc
or
push
dec
and
and
pusha
inc
stos
or
ret
ret
mov
shr
dec
mov
data16
test
ret
lret
mov
shlb
call
push
jecxz
enter
inc
gs
mov
or
int
sub
dec
sub
rorb
sub
int
scas
or
ljmp
ret
or
das
daa
popa
call
test
stos
inc
push
scas
movsb
fs
and
sub
lods
and
mov
or
out
scas
cmpsl
or
push
lret
or
loope
scas
movsl
sub
mov
lea
orl
addl
or
enter
mov
test
iret
mov
mov
loope
outsb
sub
mov
mov
mov
daa
lret
scas
out
jmp
dec
mov
lret
cs
outsb
or
in
int3
push
or
push
and
sub
push
int
xchg
or
inc
ret
bound
mov
in
ret
sub
or
inc
or
call
addl
or
int
test
add
add
or
in
in
dec
jmp
inc
inc
sub
or
cmpsl
inc
sub
mov
add
loope
push
or
iret
inc
dec
movsb
pop
leave
loop
ret
inc
addb
iret
call
scas
inc
dec
int
and
ljmp
and
or
lods
dec
outsb
out
mov
mov
sub
test
inc
daa
in
out
rorb
outsl
enter
das
xchg
inc
in
or
movsl
dec
mov
and
inc
int3
das
inc
jmp
into
or
sub
and
add
outsb
arpl
lret
inc
mov
lds
sub
mov
add
inc
call
lret
popa
mov
into
jmp
dec
add
dec
lods
scas
cmpsb
or
dec
out
and
sub
mov
sub
call
movsl
jecxz
dec
movsb
add
pop
enter
mov
das
add
push
sub
out
insl
fs
inc
in
dec
add
call
movsb
stos
outsl
gs
dec
xchg
outsl
insl
xchg
and
cmpsl
push
xchg
cmpsl
and
inc
dec
and
imul
add
outsl
bound
out
test
add
pusha
popa
dec
dec
add
test
test
dec
inc
lds
mov
lods
sub
sub
jecxz
cmpsl
popa
subb
insb
imul
es
in
das
sub
mov
test
dec
out
int3
inc
and
int3
movsl
out
sub
cs
mov
popa
orl
cmpsl
subb
pusha
xchg
into
in
loop
rol
and
iret
mov
dec
cmpsl
cmpsl
xchg
test
mov
inc
xchg
test
mov
mov
subl
and
and
or
add
loop
scas
add
in
lret
push
imul
scas
or
out
add
mov
out
mov
inc
and
mov
inc
stos
sub
out
mov
mov
loop
in
and
inc
inc
dec
out
enter
mov
in
es
stos
in
loop
mov
dec
cmpsl
insl
insl
iret
in
dec
loop
sub
inc
stos
int
sub
push
and
in
gs
push
stos
outsb
mov
sub
das
sub
outsl
insl
movb
stos
mov
outsl
loop
or
inc
int
gs
shrl
mov
sub
daa
movsb
outsl
outsb
lret
in
jmp
pusha
and
scas
loope
push
mov
dec
insb
stos
inc
inc
daa
movsb
and
jmp
dec
push
dec
iret
arpl
dec
call
outsb
mov
andl
jmp
or
add
int3
lret
add
addr16
outsl
lds
loop
int3
or
in
mov
popa
movsb
out
inc
dec
movsl
or
stos
test
cs
test
lret
popa
inc
lret
and
add
out
enter
subl
outsb
inc
push
add
in
inc
jmp
dec
insb
lods
in
inc
and
arpl
scas
das
add
jmp
mov
in
movsb
mov
scas
stos
add
xchg
sub
loopne
daa
add
gs
test
and
and
and
and
into
out
imul
das
das
scas
in
arpl
out
or
outsb
stos
outsb
lods
in
mov
dec
mov
pusha
loop
inc
enter
outsb
movsb
shrb
or
dec
xchg
sub
pop
out
insl
popa
out
call
int
test
cs
stos
add
sub
in
or
into
ret
ljmp
cmpsw
dec
mov
xchg
push
lods
leave
mov
mov
inc
popa
or
out
scas
and
dec
in
mov
inc
or
in
lods
mov
iret
test
sub
inc
add
jecxz
add
mov
lds
sub
add
in
inc
movsl
or
int3
popa
enter
mov
daa
lods
dec
ret
arpl
inc
in
add
stos
xchg
or
shrb
addr16
push
out
das
movsb
mov
pusha
jecxz
inc
int3
lds
daa
in
or
out
arpl
add
andl
cvtpi2ps
scas
or
les
shr
ljmp
imul
add
mov
inc
ret
insb
or
gs
test
imul
out
subl
movsl
pop
lods
test
invd
cs
dec
and
dec
add
stos
inc
test
inc
in
lret
lret
pusha
and
sub
ret
lds
xchg
fadds
mov
mov
loop
movsl
cmp
les
add
loopne
or
loopne
cmp
lcall
fistps
xchg
fisttpl
push
cmp
dec
aad
ljmp
mov
xor
ss
loopne
adc
lret
and
cmc
pushf
dec
inc
mov
xor
scas
pop
or
andb
cli
aad
adc
idivl
pusha
xchg
add
add
shrb
jno
add
rolb
mov
inc
in
mov
in
sarl
and
cwtl
cmp
ret
mov
push
lock
xor
in
fistps
sub
xchg
je
mov
and
xchg
in
mov
lret
jmp
xor
rep
push
push
cld
cmpsl
cltd
mov
popf
and
sub
in
aad
out
in
iret
mov
aaa
sbb
enter
jecxz
dec
fbstp
adc
add
loopne
daa
sbb
or
divb
sahf
sti
cmp
ljmp
adcb
jb
fimull
out
add
add
enter
adc
loopne
sti
stos
mov
dec
loopne
cmp
dec
icebp
mov
add
dec
mov
pop
cmp
xor
mov
movsl
add
push
add
jg
mov
push
incb
pop
inc
inc
repnz
mov
add
adc
imul
lock
jg
fisubrs
fdivrl
divb
dec
fsubrl
jb
add
sbbb
lret
nop
adc
cmp
xchg
sub
mov
test
inc
jl
xchg
inc
push
inc
sbbb
loopne
sbbb
and
jge
je
imul
arpl
rorl
std
out
outsb
shll
pop
xchg
push
or
lock
mov
sar
pop
addr16
sbb
pusha
popf
stos
icebp
pop
out
and
adc
mov
addb
dec
fiadds
gs
xchg
outsb
xorb
xor
imul
and
sbb
stc
xchg
xorl
fisubs
jmp
das
in
ss
inc
xchg
mov
rorl
movsb
pusha
xor
xor
and
xchg
in
mov
lock
aas
mov
pop
outsb
sti
sarl
inc
or
push
test
xor
daa
fs
stc
sarl
push
cmp
lret
aad
ficoml
xchg
dec
loopne
and
movsl
ds
and
or
sar
enter
mov
ret
ja
pop
mov
xlat
icebp
mov
sub
push
inc
sbb
je
jns
add
dec
cmp
pusha
mov
jnp
outsl
ljmp
inc
int3
xor
jo
movsb
inc
dec
rorl
imulb
scas
or
cmp
ljmp
cmp
lds
mov
xor
sti
mov
mov
push
xlat
sbb
cli
jb
daa
push
xor
xchg
sub
xor
fdiv
pop
into
pop
sbbb
movsl
frstor
jp
iret
loope
rorl
adc
dec
andb
jmp
jns
push
mov
adc
and
mov
mov
jecxz
jne
fdivrs
push
je
aad
ret
shl
xor
push
jo
popa
sub
ljmp
pop
lods
push
mov
xchg
lret
add
loopne
call
and
fwait
sti
enter
pusha
fstps
push
or
mov
sub
pop
cmp
xchg
into
xchg
mov
iret
aad
jbe
mov
inc
iret
push
and
filds
fistpll
add
inc
pop
mov
add
xchg
nop
inc
popf
adc
ds
sub
xchg
cltd
lds
lea
dec
jle
gs
cmpl
stos
jg
int3
mov
sbb
inc
xorl
sbb
pusha
out
cwtl
fs
popf
popa
jne
mov
jge
mov
sub
test
fucomi
enter
pop
mov
jae,pn
in
ljmp
cltd
popf
xor
and
and
mov
test
mov
inc
mov
sbb
stc
clc
and
sbb
rcrb
lods
test
jp
sti
dec
push
outsl
jno
pop
ds
inc
out
adc
mov
lahf
fdivs
icebp
inc
fstps
xchg
fsubr
or
inc
sahf
leave
in
mov
test
xchg
pop
xlat
inc
mov
sbbl
loopne
lock
pop
movsb
cmpl
mov
loope
js
jge
int
mov
test
mov
fldcw
add
inc
lock
iret
mov
mov
cs
decl
xlat
rorl
in
loop
ror
stos
pop
loopne
xchg
orb
jae
lods
mov
pop
xchg
stc
push
push
xchg
lock
cwtl
mov
outsb
or
pusha
fisubs
das
inc
mov
add
cld
fdivs
in
mov
dec
mov
pusha
add
add
pusha
sub
andb
xchg
mov
push
cs
jle
mov
dec
enter
rcl
cmpb
pop
inc
scas
shrb
inc
test
lock
clc
or
mov
aas
cmp
andl
iret
push
dec
fidivl
ja
push
cmc
and
pusha
pop
negl
xor
mov
and
into
daa
add
inc
mov
std
xchg
push
mov
mov
dec
sub
lfs
sub
lcall
movsb
aad
adc
and
adc
sbb
push
cmpsb
mov
mov
sub
mov
fsts
jns
xor
loope
cmpsl
mov
mov
loope
ss
mov
rorl
inc
cmpb
out
cmp
inc
adc
and
cli
mov
adc
adc
add
mov
push
lods
ret
cmp
xchg
call
pop
bound
push
jnp
xchg
aad
jle
mov
adc
and
adc
imul
sub
or
rclb
shr
mov
and
dec
enter
add
lret
loopne
add
lock
dec
mov
push
mov
xchg
clc
imul
in
rolb
jnp
pop
testb
insl
jmp
stc
sub
jno
arpl
stos
mov
ret
xorb
and
js
popf
pop
dec
ljmp
adcb
inc
sahf
movsl
sbb
call
mov
xchg
test
ja
jo
xchg
pusha
add
test
loopne
pop
dec
mov
cmc
mov
jo
mov
fidivrs
bound
scas
jnp
push
mov
inc
pop
lods
sbb
pop
xchg
pop
add
insl
scas
cmp
xor
loopne
xor
addr16
das
int3
mov
jns
mov
js
fdivrs
jbe
add
cs
and
push
nop
fadd
mov
fcmovb
and
push
mov
in
xlat
add
cs
xorl
lea
jbe
in
jg
lret
mov
cwtl
add
test
or
dec
rcrb
mov
push
lods
push
xchg
shlb
sbb
std
xchg
movsb
mov
adc
fdivrs
mov
cli
sahf
pop
gs
dec
or
xor
mov
jecxz
hlt
jecxz
std
sub
jle
fidivrs
push
jns
in
aas
pop
push
mov
lcall
shlb
enter
dec
mov
sbb
add
shrb
lock
xor
mov
les
mov
in
hlt
sub
fidivs
aas
ret
repnz
adc
add
outsb
repz
ss
sub
xchg
add
loopne
outsb
adc
shl
add
add
sub
and
std
mov
adcb
cwtl
push
rolb
iret
scas
mov
jp
jns
jg
imul
mov
xor
pusha
lock
xor
jp
dec
add
inc
sbb
or
jp
test
push
xor
hlt
rcrb
jp
lock
xchg
aaa
lret
push
loopne,pt
mov
pop
pop
mov
cwtl
cwtl
add
loope
dec
sbb
mov
aam
addl
fs
inc
ret
lock
in
cmp
push
pop
push
lock
pop
aas
cmp
mov
mov
lods
xchg
and
es
or
popf
fwait
or
add
icebp
xor
xorb
in
pop
mov
dec
add
jbe
fnstcw
rclb
in
int3
xchg
pushf
rorb
ljmp
pusha
gs
xor
inc
push
rolb
or
ret
leave
xorl
sbb
and
jnp
inc
loop
dec
fisubl
mov
jno
cld
pusha
dec
add
add
inc
jnp
cmc
ljmp
mulb
pop
jl
sub
adc
data16
insb
inc
inc
enter
stos
loopne
adc
fcmovne
pusha
shll
sti
mov
das
mov
xor
lods
sub
adc
adc
add
inc
leave
and
into
sub
inc
clc
xor
mov
push
in
and
outsl
xchg
into
dec
mov
loopne
out
imul
adc
stc
pushf
pusha
loopne
or
out
add
mov
outsl
fldcw
xchg
inc
xor
pop
jb
adc
lods
orb
push
cmp
insl
adc
cs
pop
loope
clc
sbb
loopne
lds
push
ret
mov
loope
jo
sub
cmp
test
jcxz
lds
js
rcr
push
aaa
in
adc
hlt
shlb
push
inc
jmp
mov
push
fxch
movsb
inc
sahf
or
jnp
push
lock
lret
sbb
xor
xor
push
insb
data16
jp
lret
and
mov
movsb
add
shll
sub
scas
and
pop
jne
test
lea
jmp
loopne
movsl
push
mov
cmpb
mov
fnsave
aad
push
imul
mov
dec
shrl
cwtl
xchg
pusha
mov
or
xchg
mov
jmp
es
movsb
inc
sub
push
repnz
rcrl
popf
mov
cltd
aam
in
insb
sbb
sbb
rclb
fsubl
fwait
cli
dec
test
fwait
adc
loopne
mov
loop
out
in
pop
jp
cmpsl
ja
cld
insl
xchg
dec
mov
sbb
add
push
and
popa
cmpsl
mov
mov
push
testb
lods
subb
inc
movntps
cwtl
mov
xor
repnz
test
xor
mov
sub
jno
out
cltd
ret
daa
sbb
loop
ljmp
mov
cs
jae
test
inc
sbb
add
cmp
add
fcomps
mov
dec
lret
mov
cmp
push
fildll
and
push
scas
ret
mov
add
loopne
shll
push
dec
incb
and
in
lea
lods
push
je
ljmp
mov
sbb
adc
mov
xchg
lock
and
in
mov
inc
mov
out
and
mov
xchg
jo
cmp
adc
xchg
ljmp
mov
mov
mov
movsl
lods
mov
loopne
dec
iret
xor
jl
fadds
stos
arpl
push
repnz
pop
sbb
insl
pop
imul
mov
pusha
mov
rcrl
pop
js
in
cmc
mov
adc
mov
jo
mov
outsb
fimuls
mov
xor
nop
call
xor
in
test
jp
std
push
push
mov
sbb
clc
in
lcall
scas
xchg
mov
clc
add
mov
and
cmp
ljmp
or
test
sbb
xor
or
xor
scas
mov
push
popf
push
dec
lea
jbe
xor
adc
jge
push
mov
pusha
popa
aaa
xchg
jmp
sub
mov
pusha
push
xchg
pusha
dec
mov
add
fldenv
and
inc
outsb
loopne
cli
and
mov
jns
loope
ret
addr16
mov
adc
lock
push
movsb
mov
pop
cmp
mov
adc
xchg
testb
lret
xor
and
ljmp
jp
stos
js
es
iret
imul
jo
outsb
sbb
xor
das
push
fisttpll
clc
push
push
pushf
jo
mov
not
daa
movsb
xor
pop
push
push
xchg
jge
push
insb
jne
js
fldl
mov
or
arpl
push
mov
gs
xchg
xchg
notl
dec
sbb
mov
inc
fs
int
lret
out
mov
pusha
ja
test
mov
mov
in
adc
lret
xchg
mov
lods
lock
cmpb
inc
ror
leave
jle
addl
arpl
je
or
loopne
dec
mov
push
cmpsl
or
add
loopne
pop
jns
push
mov
cmc
cwtl
int3
and
in
sub
out
mov
jno
dec
cmpsb
stos
dec
mov
enter
xor
sbb
shlb
icebp
aad
in
sbb
jmp
mov
push
out
sub
popa
js
fidivrs
ds
cld
pop
xlat
cwtl
adc
push
sahf
fnsave
mov
adc
push
sub
mov
pop
mov
cmp
mov
dec
or
push
cmp
imul
cs
sbb
sarl
clc
ja
data16
lcall
dec
aaa
fiaddl
cmp
mov
inc
pop
pop
fadd
test
lds
das
mov
pushf
or
jle
push
inc
xlat
mov
iret
adc
mov
ds
shl
mov
data16
outsb
adc
loopne
packuswb
and
mov
push
adc
add
inc
cli
or
pusha
adc
mov
jge
xor
mov
xlat
sbb
pushf
les
out
mov
inc
push
inc
pop
sub
or
mov
sub
cs
add
popa
je
dec
and
cmpsb
cmpsl
ds
mov
aas
pushaw
push
jecxz
hlt
cld
test
cld
adc
sti
mov
mov
or
enter
sbb
add
add
and
repnz
dec
icebp
lods
sub
mov
imul
aam
shlb
push
popa
mov
sbb
inc
mov
pop
and
in
inc
icebp
sahf
jp
std
fstl
mov
or
mov
rcrl
bound
inc
inc
adc
loopne
decl
aam
xor
push
es
mov
mov
sbb
into
shlb
push
fstpt
push
jmp
cli
lods
mov
mov
lock
call
adc
pop
or
movsb
inc
inc
mov
mov
incb
xchg
jmp
fsubrp
test
cld
mov
mov
cltd
mov
shrb
xchg
cmp
add
test
mov
push
insl
arpl
jae
cmpsl
ss
loopne
sarl
lea
cmc
cmp
pop
lret
adc
int3
orb
mov
add
dec
ja
jl
pop
push
sbb
push
push
mov
sti
pop
or
in
mov
push
mov
popf
movsb
mov
loopne
aas
pusha
movsb
into
leave
dec
dec
sub
popf
rcrl
add
jecxz
lret
ss
pop
push
xchg
sub
cmp
jp
test
inc
mov
outsl
in
out
xchg
stc
rolb
movsb
push
push
pushf
adc
orb
add
fstp
jecxz
pop
sbbb
ja
sub
hlt
call
adc
test
add
cmp
jl
pop
aam
push
int3
inc
lahf
movsl
xchg
cmp
pusha
enter
xor
lods
add
xor
loopne
mov
movsl
mov
jg
push
aad
push
cltd
adcb
lock
and
fs
movsb
push
xor
dec
gs
lahf
mov
xchg
pop
les
and
adc
call
pop
imul
add
cmpsb
shll
pop
je
mov
pop
sbbl
pusha
mov
rclb
ljmp
and
mov
jp
je
sub
push
enter
or
js
shl
xor
lock
pop
in
jg
cmp
pop
dec
mov
sarb
inc
cmpsl
aas
shr
xlat
mov
inc
incl
sbb
icebp
pop
pop
dec
adc
ret
mov
fiadds
loopne
xchg
jns
xchg
stc
pop
sub
fdivs
pop
inc
loop
cmp
cwtl
loopne
sti
inc
mov
sbb
loope
int3
fsts
clc
fisttpll
leave
dec
outsb
aad
xor
clc
popa
aas
xchg
sbbl
outsl
jo
popa
fdiv
in
comiss
mov
or
mov
mov
sarb
mov
loopne
sub
movsb
popa
insb
sbb
inc
js
mov
sbb
sti
xor
push
cltd
mov
testl
pusha
popa
pop
fs
jno
lods
lret
pop
fs
mov
out
jae
fildl
aad
out
ret
mov
jl
jo
in
cmp
sbb
xor
lret
push
les
addr16
js
or
mov
xchg
in
outsb
push
cmpb
or
mov
cmpsb
pop
pop
xchg
imul
pop
mov
pop
jmp
mov
inc
add
in
jmp
xchg
or
loopne
xor
sbb
test
arpl
je
out
pop
push
repz
lods
or
mov
mov
xchg
or
cmp
cltd
in
pop
pop
gs
loop
mov
shl
sbb
loopne
push
sbb
sub
in
lret
mov
mov
push
shl
push
fldcw
mov
adc
imul
inc
jo
and
dec
xchg
xor
cli
or
jl
mov
stos
inc
mov
std
cld
pop
dec
ret
test
xchg
cmp
pop
pop
push
dec
insb
mov
movsl
aas
xchg
testl
xor
insb
movups
inc
sbbb
fwait
sub
pop
outsl
sbb
faddl
jge
sub
lods
out
je
sub
jl
shrb
lea
mov
xor
fucomp
xor
xor
mov
cmp
jo
ss
setne
mov
loopne
inc
gs
mov
or
xchg
test
pop
xchg
mov
add
cli
dec
add
mov
loope
sub
push
mov
out
push
or
add
pushf
fsubs
pop
xor
lods
iret
sbb
mov
adc
loop
js
cmp
mov
inc
std
je
push
xchg
call
and
mov
adc
xor
ret
pop
sbb
jb
ret
in
aaa
cmp
es
mov
jbe
inc
jno
jp
xor
js
stc
pop
fs
mov
add
fnsave
test
xor
dec
lret
inc
cwtl
jo
gs
sub
push
loop
jne
push
hlt
jle
cmc
aaa
jnp
jmp
lods
mov
pop
test
mov
xor
or
arpl
cmp
push
add
orb
js
and
pusha
mov
shlb
enter
add
lret
pop
fisttpl
pop
push
inc
cmp
fstps
mov
shr
adc
push
lds
add
push
dec
cmp
fiaddl
pop
lahf
jnp
sub
pop
jne
adc
dec
test
adc
rcll
or
jge
bound
adc
jmp
jge
inc
xor
jne
jecxz
cmpsb
sti
dec
fwait
clc
push
in
rcrl
sbb
fdivr
pushf
inc
loopne
or
inc
jb
out
xchg
cs
ret
sub
pop
cmp
xchg
test
push
mov
loopne
lret
pop
shll
cli
sbbl
out
mov
mov
ds
mov
in
shrl
mov
out
xor
movsl
pop
push
jb
adc
rorb
cmpsl
push
push
repnz
nop
and
add
movsl
pop
and
pusha
pop
int
ror
lods
arpl
fnsave
rol
push
sbbl
test
sub
jb
and
lock
jo
andb
push
mov
dec
aaa
sub
adc
inc
cmpl
mov
inc
aad
mov
addr16
push
and
jg
in
sub
in
sti
or
dec
lock
flds
enter
popf
inc
mov
xchg
sub
adcb
cwtl
pusha
arpl
out
pop
push
lds
xor
ror
sub
cld
sti
add
adc
mov
xchg
pop
loopne
dec
or
adc
pop
adcl
or
adcb
cmp
mov
jmp
hlt
aas
rcll
outsb
jae
mov
jns
jg
cmpsl
jle
shlb
into
repnz
sbb
loopne
and
xor
les
rolb
fisubrs
and
xor
ficoms
mov
and
add
ds
loopne
ja
cmp
shlb
cli
in
jbe
xchg
add
add
sub
dec
mov
add
subb
mov
test
pop
add
aad
icebp
arpl
push
movsl
insb
xchg
fwait
data16
das
fisttps
into
orb
stos
mov
cmp
pushf
pusha
and
jae
cwtl
insb
mov
mov
pushf
jo
popa
mov
inc
cmp
loope
orb
mov
push
pop
js
jcxz
insb
mov
mov
xor
cwtl
clc
loopne
pushf
sbb
aad
adc
mov
fisubrs
shll
fstps
jmp
xor
adc
movsb
and
movsl
neg
add
rorl
fsubs
imul
mov
ret
push
fsubrs
shll
imul
mov
inc
cli
adcl
mov
into
push
jmp
rcrb
stos
mov
cmp
inc
mov
int
imul
xchg
sbb
pop
xchg
or
cmp
xorb
cmpb
das
je
aad
popf
imul
add
clc
mov
mov
push
rolb
xchg
xchg
je
lds
xchg
mov
sub
iret
aaa
jecxz
sarl
mov
fisttpl
repnz
or
mov
mov
and
shlb
nop
pop
add
fstl
jne
push
add
jno
sbb
xor
lock
jno
xchg
adc
pop
movsl
es
pusha
std
xor
outsl
sub
add
dec
js
cmpsl
mov
jl
fsts
xlat
test
call
mov
cs
in
iret
gs
lods
jo
push
cmp
fcoms
cwtl
subb
int3
xchg
sub
ja
std
dec
rclb
ds
sbb
and
lods
mov
dec
inc
ss
std
pop
shlb
test
rcr
and
push
divb
subb
ret
stos
pop
xor
push
subl
mov
arpl
cmpsl
xchg
insb
add
fdivs
mov
xchg
sub
push
fimull
cmp
or
insl
loope
cmp
jb
jmp
mov
adc
cmp
data16
push
cmc
inc
fs
jb
xor
cltd
sti
leave
cmpsb
mov
jmp
xchg
adc
out
push
andl
imul
push
outsb
mov
sti
mov
pop
xor
mov
mov
insb
shlb
inc
cmp
ljmp
stos
fldt
cld
insb
jbe
dec
call
push
jge
rorl
stc
test
and
rclb
sti
push
movsl
or
mov
mov
pop
out
xchg
idivl
inc
pop
sahf
mov
in
jle
adc
inc
push
cmp
shrb
jns
or
mov
add
and
andb
and
add
and
mov
in
dec
push
outsb
sahf
jle
mov
push
mov
rolb
xchg
xor
push
outsl
cs
subl
pushf
and
mov
xchg
in
in
pop
enter
out
gs
jg
cmp
pop
in
imul
orb
dec
bound
sbb
pop
sub
sub
or
jnp
mov
dec
jbe
push
leave
in
jmp
mov
sub
inc
push
adc
xor
xchg
int3
inc
repnz
fldl
and
cmp
jmp
iret
mov
mov
dec
mov
mov
xchg
mov
jo
sahf
rcrb
mov
add
sub
mov
pusha
jo
jns
in
sbb
aas
insl
push
ja
pushf
add
mov
jbe
ficoms
movsb
les
xchg
push
stos
sbb
lds
xor
fisttps
cmpsl
jmp
sahf
subl
cwtl
adcb
popa
fxch
xchg
pop
jmp
loopne
sti
stos
es
repnz
ss
notb
push
shlb
mov
cmp
jb
call
cmp
imul
loopne
dec
add
mov
int
xor
pusha
adc
popa
leave
out
push
shll
push
mov
movsb
daa
lock
mov
addr16
ljmp
adc
pusha
in
xor
pushf
fsubs
adc
and
inc
les
adc
and
and
jge
in
mov
fadd
sub
xor
lret
jbe
xchg
sbb
shlb
jecxz
and
repz
or
add
or
mov
lds
insl
std
aas
mov
fsubl
test
inc
jecxz
test
repz
loopne
arpl
cmc
test
aaa
sbb
mov
xchg
rolb
lea
sub
lods
cmpsl
cmp
insl
inc
mov
dec
and
mov
jnp
iret
int
jg
ret
and
pop
mov
xor
ja
mov
jge
lock
rorl
xchg
stc
jl
pop
cmp
subb
mov
clc
ja
outsb
mov
test
mov
push
dec
lock
enter
aad
repz
rcll
jecxz
adc
int3
gs
xchg
sbb
jne
mov
cs
mov
jecxz
jg
sbb
loopne
sbb
xchg
cltd
pusha
enter
adc
mov
inc
adc
movl
add
loope
cltd
js
mov
inc
sub
mov
shl
lock
inc
dec
add
loopne
rclb
mov
lds
hlt
mov
mov
mov
mov
mov
dec
pop
out
test
fs
xor
cmp
ret
mov
push
sbb
loopne
adc
adc
pop
in
mov
mov
call
sub
push
mov
add
lea
push
push
push
push
and
push
push
push
add
test
xchg
je
jmp
push
jo
add
or
add
cmp
add
jmp
push
push
call
or
sub
leave
ret
ret
xchg
xchg
mov
or
add
add
lea
sub
shr
dec
not
sub
mov
jne
push
pop
add
lea
stc
jmp
jmp
push
mov
mov
push
loop
lea
orl
andl
push
push
push
push
cmp
jne
callw
and
jne
loope
lea
push
push
bnd
lea
test
cld
je
js
dec
outsl
mov
xchg
mov
fstps
xor
scas
and
sub
popf
les
mov
and
push
adc
xchg
jns
lea
fwait
mov
je
addr16
lahf
adc
xchg
jo
es
inc
in
push
inc
repz
adc
jecxz
daa
jo
adc
loopne
xor
and
mov
ljmp
sarb
jle
jne
push
inc
nop
test
xchg
in
add
push
imul
test
je
lret
ljmp
test
lea
fadd
cs
insb
mov
daa
jl
test
xchg
or
fsub
and
xchg
aam
mov
dec
loope
subl
pop
cwtl
sub
rorb
jae
mov
rolb
mov
adc
and
or
sbb
mov
pushf
mov
je
adcl
sbbl
test
dec
mov
mov
add
lcall
imull
lret
cld
sub
shlb
sub
sti
xor
pushw
iret
repnz
rcr
inc
mov
adc
adcb
sbb
fldl
mov
push
fsubs
jne
ret
fcompl
sbb
pusha
inc
dec
scas
test
xor
mov
outsb
pop
outsl
addl
cmpsl
icebp
aad
arpl
fcomp
cmc
mov
mov
sti
push
jb
jno
movsb
jb
dec
adcb
subb
sti
hlt
add
xlat
ret
xchg
inc
in
pushf
movsb
mov
xchg
mov
lret
sbbb
mov
shl
aad
dec
scas
orl
adc
cmp
cmc
leave
sbb
and
mov
fsubl
div
dec
inc
lret
cmp
mov
in
xor
cmpsl
pop
icebp
jp
andb
cmp
daa
fwait
adc
loopne
xchg
xchg
pop
push
xor
je
lea
jl
mov
push
jns
dec
cmp
xchg
cltd
fstl
pusha
ret
icebp
adc
mov
fsubs
xor
sub
add
mov
mov
mov
xchg
adc
negb
mov
mov
ja
scas
and
sub
imul
or
lret
shl
ja
push
jmp
subb
lock
push
inc
xor
dec
fdiv
push
test
mov
lock
es
mov
lret
ja
lods
xchg
fnstsw
insb
adc
scas
iret
popf
jns
pop
sub
sub
out
xlat
out
mov
les
mov
loope
shrl
test
fwait
ds
lock
test
shll
or
int3
mov
dec
dec
subb
adc
dec
out
mov
rcrb
hlt
mov
pop
sbb
add
sahf
rcr
push
mov
xor
in
fldt
xchg
fwait
xor
cmp
stos
push
test
fsubs
inc
xor
notb
inc
fisttpll
add
pop
into
dec
add
inc
je
fisttpl
and
dec
dec
xchg
pop
call
add
mov
negl
sbb
or
adc
pop
int3
movsb
sbb
scas
stos
lret
orb
into
leave
mov
popa
jl
jge
xor
std
or
and
mov
icebp
movsb
add
pop
and
mov
and
out
out
add
call
outsb
in
pushf
pusha
data16
adc
xchg
inc
aas
cmp
stos
sub
in
sbb
cmp
jbe
mov
or
sbbb
pusha
loop
push
js
in
cmp
sbb
movsl
mov
imul
xor
fs
es
xlat
fadds
ret
mov
dec
mov
decb
add
cld
out
push
rcrb
sahf
imul
sahf
mov
call
inc
dec
sahf
xchg
clc
and
enter
mov
pop
mov
out
pop
cmp
nop
call
xchg
cmp
lea
jg
test
xchg
pushf
xor
hlt
pushf
je
rclb
adc
mov
imul
imul
loopne
adc
inc
cmp
mov
mov
jno
push
push
call
and
and
add
fbstp
add
test
cmp
dec
shll
mov
add
cmpb
fs
ljmp
call
loopne
aaa
call
adc
pop
loopne
or
into
bound
ja
mov
sub
movsl
rcrl
mov
sub
lods
mull
pop
rcr
sub
mov
mov
jne
pop
sbbl
les
addb
lret
sbb
orb
and
imul
jae
fs
dec
and
popf
mov
repz
inc
cmp
pop
push
loopne
test
negb
adc
add
int3
jo
inc
cmpb
stos
push
arpl
pop
je
adc
addb
xorb
out
dec
into
int
jb
push
xchg
xor
dec
inc
test
bound
and
in
dec
vcvtsi2sdl
pusha
faddl
pop
dec
push
stos
xor
mov
insb
jae
sti
mov
jge
cmpsl
movsl
rcll
push
xor
and
mov
mov
push
loopne
push
test
jae
hlt
ja
cld
je
pop
ja
push
or
shr
das
add
rol
into
aad
stc
dec
mov
mov
rorb
inc
inc
ficomps
loopne
setae
xchg
in
xor
fs
xchg
sbb
jb
into
push
fwait
rolb
clc
dec
mov
mov
sbb
mov
outsb
scas
fstpl
xchg
mov
inc
ret
rcrb
cmp
loop
and
data16
mov
jae
pop
enter
fcoms
jno
cmpsb
dec
int
mov
xor
sub
mov
iret
push
pop
js
test
jge
push
or
dec
dec
jo
aaa
xchg
inc
sbb
cmp
stc
out
add
jne
fs
nop
pusha
je
lea
insb
adc
pusha
stos
mov
nop
faddl
jp
adc
hlt
gs
test
xor
movsl
push
pop
jp
adc
mov
gs
addr16
mov
fadds
cmp
daa
mov
lea
cmp
push
inc
mov
push
mov
mov
call
aam
into
inc
enter
xchg
mov
test
and
mov
test
add
and
rolb
mov
repz
je
push
push
mov
push
enter
pop
out
jbe
mov
or
xor
call
std
inc
sbb
int
imul
jns
aad
cmp
pop
xor
repz
stc
scas
aas
clc
or
dec
or
notb
loopne
imul
mov
aad
leave
and
stos
sahf
lods
sbb
pop
adc
sbb
out
xor
rol
jle
pop
stos
int3
fsubrl
clc
mov
sbb
dec
xchg
jbe
dec
mov
and
or
mov
mov
mov
push
fisttps
xchg
out
test
adcb
leave
sbb
loopne
mov
jne
push
cmp
jl
mov
in
popa
nop
jl
add
pop
sbb
js
shll
out
addr16
loopne
fnstenv
jmp
shr
push
mov
push
inc
dec
clc
push
or
sub
fisubl
out
frstor
inc
mov
lods
cmpsb
shll
jecxz
cmp
jg
rolb
xorb
or
dec
mov
outsl
mov
es
xchg
orl
call
fnstsw
out
add
scas
ljmp
add
icebp
hlt
jmp
int
or
insl
xor
out
mov
adc
inc
fisubrl
imull
int3
push
bound
js
xchg
sarb
push
mov
xchg
add
mov
pop
sarb
add
scas
mov
xor
aaa
jp
sti
in
add
jecxz
jns
enter
sub
pop
mov
pop
stc
sub
movsb
cwtl
faddl
jns
add
loop
push
and
fs
mov
inc
test
loop
inc
in
lock
pusha
pop
push
jne
fwait
mov
xor
test
pushl
gs
sti
dec
sbb
outsl
fistpl
pop
adc
cmpsl
ljmp
mov
mov
mov
xor
popf
xchg
or
gs
cmc
xchg
inc
es
push
aaa
and
and
pop
jne
fldt
sub
int
stos
leave
xor
push
jmp
push
mov
or
adc
pusha
sahf
lock
and
imulb
dec
lea
xchg
dec
rorl
add
test
mov
call
ljmp
pop
mov
fstl
mov
and
fdivrs
cli
lods
addb
pusha
mov
dec
push
jb
rcrb
and
test
mov
hlt
loopne
mov
arpl
push
cmc
dec
pop
add
push
insb
fisttpl
mov
aam
mov
sbb
sahf
jle
call
jp
and
out
fcoml
xchg
adc
rcrb
xchg
dec
lea
mov
mov
fs
cmp
insl
mov
js
sbbl
jecxz
pop
dec
loopne
repnz
xchg
gs
lods
dec
push
mov
pop
mov
ja
ja
push
inc
daa
popf
lods
shlb
add
and
addb
cmp
and
mov
jne
xor
popf
mov
popa
cmc
imul
dec
out
jmp
inc
xor
ret
pusha
jecxz
test
inc
xchg
in
paddb
sub
mov
adc
sub
mov
jmp
cmp
jmp
rorl
pop
mov
loop
loopne
loopne
xchg
loope
push
push
and
jmp
daa
dec
outsl
fidivs
outsb
jg
adcl
dec
fistps
or
add
and
inc
loopne
mov
cwtl
sub
aaa
leave
daa
or
sbb
lea
adc
xor
xchg
mov
push
xchg
jo
out
jo
xor
jge
pushf
loopne
cmp
fdivrl
enter
insb
loopne
jmp
loop
or
inc
adc
out
imul
push
dec
dec
push
sub
insb
jo
in
mov
shll
mov
fwait
dec
mov
sub
stc
pop
mov
xor
cli
cwtl
je
sub
and
dec
pop
sbb
mov
hlt
aaa
into
sbb
mov
and
sbbb
pusha
adc
mov
lods
inc
jns
adc
push
int3
cmpsl
lods
test
scas
test
xchg
bound
or
popf
cmc
lcall
push
lock
push
and
cmp
leave
mov
lods
xchg
cmp
sbb
test
iret
sbb
inc
enter
push
push
jbe
xlat
test
add
test
ret
sbb
push
ret
mov
rorb
pop
inc
nop
xor
lcall
call
loopne
dec
aas
sub
iret
xchg
in
mov
mov
mov
mov
fwait
pop
loopne
cld
aad
push
shlb
das
jo
adc
jmp
fidivs
loope
stc
cmp
mov
lock
mov
dec
daa
sub
loope
pop
je
cmp
mov
push
lods
and
loopne
bound
movsb
jl
jae
push
cs
and
and
dec
jo
shlb
aaa
cmp
push
out
subl
cltd
hlt
mov
cwtl
inc
and
pop
stos
insl
inc
mov
cmpsl
push
inc
jae
leave
mov
inc
scas
jl,pt
call
cld
sub
stos
sub
xor
mov
es
call
jo
push
mulb
inc
add
adc
adcb
inc
or
mov
lods
scas
inc
das
shl
int
xor
adc
xor
inc
test
pop
and
jo
push
shlw
cmp
in
rol
ljmp
pop
rcrb
lea
lds
shlb
adc
rorl
popa
or
pusha
xchg
ret
add
or
jnp
js
jmp
mov
cmpsl
xor
aaa
xor
dec
leave
cmc
daa
sahf
mov
pop
push
push
mov
xor
rorb
sti
jmp
cmp
out
push
roll
add
sbb
enter
iret
mov
ds
mov
pusha
cmp
xor
adcb
add
jmp
sub
sub
adc
loopne
dec
ret
pusha
inc
sub
push
or
mov
cs
or
sub
xlat
jmp
icebp
inc
lods
or
outsl
xchg
and
stos
cmp
lcall
jl
and
and
jae
mov
fnstsw
dec
incb
in
add
lds
fisubs
mov
sti
or
adc
and
dec
aam
and
call
fisubrl
pop
pop
push
sub
repz
mov
ss
and
cs
int3
icebp
hlt
pop
fcom
add
vcvtpd2psx
dec
ds
idiv
xlat
popa
nop
xor
das
mov
inc
das
scas
adc
inc
jbe
push
xchg
inc
lock
cli
je
add
sbb
mov
movl
rorb
pop
sbb
dec
das
jmp
les
popa
popa
inc
pop
xor
pusha
pop
mov
cmc
sbb
push
mov
inc
xlat
adc
push
mov
inc
mov
sbb
push
loopne
jl
aaa
test
cs
mov
inc
inc
dec
insl
jl
mov
sbb
adcb
test
jl
mov
and
inc
std
add
loope
shrb
xchg
jge
push
pop
popf
insb
mov
idiv
clc
nop
nop
nop
nop
jae
add
sub
add
pusha
push
mov
xchg
ret
inc
push
fldcw
add
cmc
into
dec
rep
clc
nop
nop
nop
nop
jae
add
adc
add
sub
push
add
clc
nop
nop
nop
nop
jae
add
cmpsb
mov
push
clc
nop
nop
nop
nop
jae
add
movsb
cmpsb
add
add
mov
clc
nop
nop
nop
nop
jae
fiadds
add
sub
mov
mov
mov
xchg
ret
push
xchg
add
and
mov
nop
push
mov
leave
cs
imul
add
add
adc
push
mov
lock
add
add
push
jmp
add
add
aas
dec
sub
nop
nop
jae
add
mov
add
addl
xor
addr16
add
push
adc
and
cmp
add
rolb
nop
jae
adc
movsb
fiadds
add
add
scas
add
clc
nop
nop
nop
nop
jae
and
xchg
imulb
sbb
add
add
incb
pushf
add
add
mov
xchg
xchg
add
add
add
inc
and
clc
nop
nop
nop
nop
jae
add
sub
cmp
aas
push
clc
nop
nop
nop
nop
jae
add
adc
add
add
cmpsb
lcall
inc
add
mov
neg
sub
mov
nop
nop
nop
nop
jae
cmc
add
add
adc
pop
sub
push
mov
leave
cs
mov
add
add
add
add
push
clc
nop
nop
nop
nop
jae
fidivrs
xchg
into
mov
loopne
nop
nop
nop
nop
jae
mov
add
xchg
add
add
faddl
sub
clc
nop
nop
nop
nop
jae
xchg
xlat
add
mov
fistpl
push
mov
xchg
ret
cmpsb
add
add
pushf
leave
call
nop
push
mov
leave
cs
mov
add
clc
nop
nop
nop
nop
jae
adc
add
xchg
jle
ss
addb
or
ret
add
add
xchg
add
inc
outsl
add
dec
inc
add
sub
add
fidivrs
sbb
clc
nop
nop
nop
nop
jae
sub
adc
movsb
cmc
fnop
pop
sub
cld
push
inc
sbb
nop
nop
nop
nop
jae
add
add
nop
nop
nop
nop
jae
add
fiadds
int3
add
sub
loopne
mov
xchg
ret
int3
jecxz
add
adc
pop
scas
cmc
add
shr
nop
push
mov
leave
cs
inc
and
add
push
add
clc
nop
nop
nop
nop
jae
addl
and
add
int3
add
mov
clc
nop
nop
nop
nop
jae
add
faddl
xlat
data16
inc
add
les
nop
nop
nop
nop
jae
add
add
sub
add
fisubrs
clc
nop
nop
nop
nop
jae
je
add
and
dec
movsl
push
mov
add
pop
addb
scas
add
add
add
add
xor
add
add
xlat
add
add
pushf
pushf
adc
mov
sub
mov
cmp
push
clc
nop
nop
nop
nop
jae
add
add
adc
add
xlat
scas
adc
loopne
clc
nop
nop
nop
nop
jae
neg
outsb
push
add
add
adc
clc
nop
nop
nop
nop
jae
mulb
add
adc
add
jmp
jp
nop
push
mov
leave
cs
add
testb
je
clc
nop
nop
nop
nop
jae
add
je
push
data16
nop
nop
nop
jae
add
test
add
sub
scas
mov
nop
nop
nop
nop
jae
add
push
add
je
inc
sbb
nop
nop
nop
jae
cmp
add
add
push
adc
inc
push
clc
nop
nop
nop
nop
jae
outsb
add
outsb
adc
sub
mov
xchg
ret
add
sub
int3
mov
testb
movsb
in
add
clc
nop
nop
nop
nop
jae
add
add
fimuls
fildll
clc
nop
nop
nop
nop
jae
add
add
cmp
in
inc
loop
push
mov
sub
or
adc
add
or
add
clc
nop
nop
nop
nop
jae
add
mov
int3
jecxz
mov
clc
nop
nop
nop
nop
jae
test
cmpsb
mov
decb
pause
push
mov
leave
cs
add
add
sub
add
add
mov
xchg
ret
add
adc
xchg
add
add
or
fistpl
clc
nop
nop
nop
nop
jae
imul
xchg
sbb
xor
nop
nop
nop
nop
jae
add
pop
adc
scas
add
lea
nop
push
mov
leave
cs
add
add
add
push
shrl
sldt
clc
nop
nop
nop
nop
jae
subl
add
mov
nop
push
mov
leave
cs
cmp
add
mov
sub
nop
nop
nop
nop
jae
xchg
add
and
iret
cmp
clc
nop
nop
nop
nop
jae
add
cmpb
mov
clc
nop
nop
nop
nop
jae
push
add
add
mov
mov
test
scas
push
push
mov
xchg
ret
int3
add
data16
xchg
add
clc
nop
nop
nop
nop
jae
adc
and
int3
add
outsb
dec
mov
clc
nop
nop
nop
nop
jae
add
add
mov
pop
mov
adc
nop
nop
nop
nop
jae
mov
adc
add
mov
clc
nop
nop
nop
nop
jae
xchg
add
add
clc
nop
nop
nop
nop
jae
add
add
mov
clc
nop
nop
nop
nop
jae
add
sub
push
add
cmpsl
and
add
cs
cmc
cmp
add
dec
mov
clc
nop
nop
nop
nop
jae
xlat
outsl
add
mov
test
jmp
clc
nop
nop
nop
nop
jae
add
add
sub
into
fdivrl
clc
nop
nop
nop
nop
jae
int3
fmulp
cmc
mov
push
add
in
clc
nop
nop
nop
nop
jae
sti
inc
ficoms
add
add
nop
nop
nop
nop
jae
outsb
inc
xchg
mov
add
add
leave
add
clc
nop
nop
nop
nop
jae
inc
add
cmp
sub
sbb
push
outsb
aas
jne
clc
nop
nop
nop
nop
jae
mov
sub
incb
orl
clc
nop
nop
nop
nop
jae
cmp
sub
int3
xlat
add
mov
clc
nop
nop
nop
nop
jae
add
add
fstps
jle
jb
nop
push
mov
leave
cs
movsb
imul
clc
nop
nop
nop
nop
jae
imul
sbb
add
sub
add
mov
or
ret
mov
add
add
mov
pop
clc
nop
nop
nop
nop
jae
mov
sub
and
add
sub
pushf
cmpsb
add
add
add
add
add
mov
mov
clc
nop
nop
nop
nop
jae
add
idiv
add
add
pop
loop
call
nop
push
mov
leave
cs
add
pushf
add
pusha
clc
nop
nop
nop
nop
jae
fwait
cmpb
push
pushf
add
xlat
cmp
xchg
nop
nop
nop
jae
add
and
jb
dec
shl
clc
nop
nop
nop
nop
jae
fdivp
sub
add
add
add
adc
nop
nop
nop
nop
jae
add
jecxz
add
add
pusha
xor
pop
push
mov
xchg
ret
add
and
xlat
pop
outsl
sub
xor
clc
nop
nop
nop
nop
jae
sti
sub
mov
add
jmp
rcll
mov
xchg
ret
add
mov
add
call
mov
leave
cs
inc
subb
xchg
imul
add
push
mov
leave
cs
adc
add
outsw
adcb
outsb
inc
add
add
push
add
push
movsb
insl
dec
nop
push
mov
leave
cs
je
add
add
sub
insb
add
nop
push
mov
leave
cs
scas
add
add
add
inc
jecxz
mov
add
clc
nop
nop
nop
nop
jae
sub
adc
add
sti
data16
jmp
add
push
cmc
sub
add
cmp
add
data16
add
imul
clc
nop
nop
nop
nop
jae
add
add
mov
add
add
clc
nop
nop
nop
nop
jae
cmp
xchg
sub
mov
inc
push
inc
add
fiadds
je
push
and
add
rclb
jbe
inc
add
sub
add
add
test
aad
push
mov
xchg
ret
mov
popl
add
add
xchg
and
nop
push
mov
leave
cs
add
outsb
data16
mov
mov
adc
loopne
fwait
mov
clc
nop
nop
nop
nop
jae
add
fldcw
mov
adc
cmp
jne
inc
add
add
adc
push
inc
int3
dec
mov
clc
nop
nop
nop
nop
jae
add
adc
add
adc
add
adc
jo
mov
xchg
ret
int3
add
add
cmp
scas
sub
mov
sbb
in
leave
cs
imul
sub
mov
leave
nop
push
mov
leave
cs
pushf
mov
add
mov
xbegin
jae
xchg
mov
adc
add
pushl
clc
nop
nop
nop
nop
jae
add
add
les
mov
xchg
ret
pushf
add
adc
mulb
and
mov
xchg
ret
outsl
pop
add
add
mov
adc
nop
nop
nop
nop
jae
add
and
cmp
add
add
add
push
mov
xchg
ret
cmp
sub
fiadds
mov
xchg
xchg
clc
nop
nop
nop
nop
jae
xchg
sub
mov
sti
leave
mov
add
rclb
sub
or
ret
add
add
adc
inc
adc
fimuls
add
add
nop
push
mov
leave
cs
fiadds
mov
mov
test
nop
nop
nop
nop
jae
add
imul
data16
fld1
inc
push
add
clc
nop
nop
nop
nop
jae
add
jecxz
add
add
call
clc
nop
nop
nop
nop
jae
cmp
add
mov
push
mov
xchg
ret
jecxz
mov
je
adc
idiv
fwait
push
mov
xchg
ret
adc
add
xlat
add
cmp
inc
add
clc
nop
nop
nop
nop
jae
add
add
leave
adc
sbb
nop
nop
nop
nop
jae
push
push
add
push
dec
sub
nop
nop
nop
nop
jae
add
add
sbb
add
arpl
cs
test
sub
add
outsl
push
push
mov
xchg
ret
add
add
movsb
xlat
add
inc
aad
mov
add
add
scas
or
test
les
cmp
mov
gs
nop
push
mov
leave
cs
xchg
idiv
cmpsb
and
dec
cmp
nop
nop
nop
nop
jae
sub
push
test
add
clc
nop
nop
nop
nop
jae
movsb
addb
add
adc
xchg
into
outsl
pushf
pusha
pusha
fistpl
clc
nop
nop
nop
nop
jae
add
test
mov
inc
call
in
leave
cs
adc
mov
mov
clc
nop
nop
nop
nop
jae
add
sub
add
int3
adc
inc
xor
nop
nop
nop
nop
jae
pop
add
leave
add
mov
nop
push
mov
leave
cs
pop
mov
mov
add
dec
xor
nop
push
mov
leave
cs
add
mov
mov
cmp
add
mov
leave
cs
testb
scas
push
add
add
leave
add
nop
nop
nop
jae
xlat
cmp
add
movsb
add
xchg
sbb
xor
push
mov
xchg
ret
testb
xlat
int3
outsl
mov
and
adc
nop
nop
nop
nop
jae
int3
add
mov
movsb
add
add
add
add
add
cmc
add
dec
push
clc
nop
nop
nop
nop
jae
imul
imul
sub
fisubrl
add
sub
and
push
add
movsb
sub
adc
pop
push
add
int
xchg
cmpl
nop
jae
cmp
testb
call
in
dec
inc
add
add
add
and
add
add
xchg
cmc
out
adc
addb
clc
nop
nop
nop
nop
jae
cmp
mov
adc
outsl
add
addb
div
nop
push
mov
leave
cs
add
add
mov
clc
nop
nop
nop
nop
jae
int3
movsb
add
add
mov
mov
clc
nop
nop
nop
nop
jae
mov
add
or
shr
pop
clc
nop
nop
nop
nop
jae
and
add
add
test
add
clc
nop
nop
nop
nop
jae
data16
add
cmc
popa
nop
push
mov
leave
cs
add
add
adc
dec
inc
add
adc
add
add
fdivr
nop
nop
nop
nop
jae
cmp
cmp
cmpsb
pop
xor
clc
nop
nop
nop
nop
jae
imul
pop
add
incb
enter
ret
push
mov
xchg
ret
or
xlat
incb
cmpsb
add
add
es
add
jmp
mov
xchg
ret
add
mov
add
mov
mov
shr
nop
push
mov
leave
cs
add
mov
add
clc
nop
nop
nop
nop
jae
outsb
cmpsb
flds
add
sub
clc
nop
nop
nop
nop
jae
add
mov
testb
and
inc
add
add
imul
push
push
xchg
aaa
fistpl
push
mov
xchg
ret
add
cmp
sub
adc
mov
jo
mov
clc
nop
nop
nop
nop
jae
add
add
add
fwait
add
imul
add
push
mov
leave
cs
xlat
add
cmpsb
testb
xlat
data16
sub
cmp
push
push
mov
xchg
ret
outsl
int3
add
adc
fwait
add
repnz
pop
adc
cld
nop
push
mov
leave
cs
pop
add
fmulp
add
inc
add
jns
les
push
mov
xchg
ret
mov
mov
jecxz
add
nop
adc
pusha
mov
fcmovnu
popf
mov
add
add
test
dec
mov
repz
clc
nop
nop
nop
nop
jae
incb
push
push
sub
add
xor
xchg
xchg
ret
add
inc
xchg
inc
and
add
add
rorl
test
or
add
nop
nop
nop
nop
jae
xlat
add
add
add
mov
nop
nop
nop
nop
jae
add
mov
add
add
call
leave
cs
add
jecxz
add
subl
nop
nop
jae
cmp
add
sub
add
add
movsb
mov
dec
imul
leave
cs
xchg
cmc
add
xchg
aaa
push
add
add
imul
fcoml
add
add
leave
faddl
std
pusha
clc
nop
nop
nop
nop
jae
cmp
cmp
add
add
movsb
mov
add
push
mov
xchg
ret
add
fwait
add
add
add
add
push
push
mov
xchg
ret
add
push
ficoms
cmp
add
out
push
je
clc
nop
nop
nop
nop
jae
add
mov
add
cmp
mov
nop
push
mov
leave
cs
xorl
int3
pop
jno
clc
nop
nop
nop
nop
jae
xchg
add
subl
pop
test
xchg
adc
fs
push
mov
std
and
add
pusha
push
imul
push
mov
xchg
ret
add
add
fwait
add
int3
loope
roll
mov
xchg
ret
cmpsb
add
add
nop
nop
nop
nop
jae
add
add
outsb
add
push
add
add
jecxz
fistl
cs
mov
mov
inc
sub
mov
add
nop
push
mov
leave
cs
add
add
add
clc
nop
nop
nop
nop
jae
add
faddl
add
add
int
enter
nop
nop
jae
push
add
int3
add
sub
add
nop
nop
nop
nop
jae
pop
add
movsb
sub
testb
clc
nop
nop
nop
nop
jae
add
sub
inc
inc
cmpsb
add
addl
lret
jmp
inc
add
mov
add
pop
into
add
outsb
mov
sbbl
and
add
mov
add
pushf
xchg
inc
nop
cmp
lret
je
clc
nop
nop
nop
nop
jae
inc
mov
adcb
and
add
cs
sti
add
sub
adc
add
push
adc
add
and
xchg
mov
incb
pushf
add
test
push
clc
nop
nop
nop
nop
jae
add
test
add
add
adc
and
nop
nop
nop
nop
jae
add
add
sub
add
cwtl
in
stc
push
mov
add
sbb
add
xlat
add
add
nop
nop
nop
jae
xchg
cmp
add
add
add
pop
clc
nop
nop
nop
nop
jae
int3
xchg
add
add
pusha
adc
dec
cmp
nop
nop
nop
nop
jae
pop
add
sub
add
imul
aad
ficomps
jne
lret
add
add
add
pop
add
cmc
mov
push
mov
xchg
ret
imul
sub
cmc
add
cmp
stos
add
nop
nop
nop
jae
add
add
leave
addb
adc
xchg
lret
add
push
mov
xchg
ret
fisubrs
add
add
je
fsubrs
mov
xchg
ret
mov
add
push
clc
nop
nop
nop
nop
jae
add
add
and
add
push
push
mov
xchg
ret
add
add
pushf
outsb
sti
add
add
icebp
cmp
push
mov
xchg
ret
push
add
decb
leave
add
mov
fisubrl
clc
nop
nop
nop
nop
jae
inc
outsl
pop
mov
add
popl
sub
mov
leave
cs
imul
sti
mov
faddl
enter
xor
mov
xchg
ret
mov
add
add
add
add
movsb
out
mov
clc
nop
nop
nop
nop
jae
outsb
add
add
add
mov
popa
nop
push
mov
leave
cs
add
add
add
movsb
hlt
decl
nop
nop
nop
jae
adc
add
add
add
mov
clc
nop
nop
nop
nop
jae
fisubrs
add
add
cmp
or
nop
nop
nop
nop
jae
add
add
into
mov
lods
push
mov
xchg
ret
outsb
add
add
cmp
add
mov
clc
nop
nop
nop
nop
jae
add
inc
cmpsb
push
add
test
nop
nop
nop
jae
sub
add
add
and
pop
aad
nop
push
mov
leave
cs
add
mov
add
add
icebp
push
mov
iret
add
pop
add
movl
add
cwtl
stos
add
push
clc
nop
nop
nop
nop
jae
and
outsb
mov
add
fdivp
push
test
pop
push
mov
xchg
ret
cmpsb
add
xchg
cmpsb
lea
sti
clc
nop
nop
nop
nop
jae
add
add
add
mov
fdivrp
shlb
pop
push
clc
nop
nop
nop
nop
jae
data16
sub
sbb
add
inc
add
add
adc
add
add
cmc
mov
push
mov
xchg
ret
add
int3
pop
sub
pop
add
add
pop
leave
pop
clc
nop
nop
nop
nop
jae
add
xor
testb
imull
push
mov
xchg
ret
leave
add
add
add
notb
pop
clc
nop
nop
nop
nop
jae
adc
mov
mov
xchg
repz
mov
xchg
ret
je
add
add
mov
adc
mov
fidivrs
fld1
clc
nop
nop
nop
nop
jae
mov
push
fmull
push
add
loop
clc
nop
nop
nop
nop
jae
cmc
add
xchg
add
push
mov
adc
dec
addb
add
xor
add
mov
mov
xchg
ret
adc
mov
xlat
cmp
add
add
xchg
add
nop
push
mov
leave
cs
fidivrs
add
mov
outsl
fcoml
les
jnp
xchg
clc
nop
nop
nop
nop
jae
sub
add
test
add
outsb
in
push
clc
nop
nop
nop
nop
jae
pushf
sub
imul
add
test
adc
mov
nop
nop
jae
push
adc
fwait
and
pushf
push
adc
cs
adc
pop
subl
add
sqrtps
xchg
ret
movsb
xchg
add
mov
cmp
pop
jmp
push
mov
leave
cs
add
add
add
mov
nop
push
mov
leave
cs
add
add
add
adc
fwait
add
mov
clc
nop
nop
nop
nop
jae
pushf
pushf
adc
add
test
nop
nop
nop
jae
push
scas
adc
sti
faddl
adc
mov
lret
nop
push
mov
leave
cs
mov
push
add
mov
nop
nop
nop
nop
jae
sub
add
inc
add
roll
inc
cmp
nop
nop
nop
nop
jae
je
mov
fimuls
add
add
nop
nop
nop
nop
jae
inc
add
add
add
push
mov
leave
cs
faddl
and
int3
add
add
in
add
add
and
add
add
loopne
sub
sub
mov
mov
xchg
ret
flds
add
add
add
nop
push
mov
leave
cs
add
sub
fistpl
nop
push
mov
leave
cs
push
add
add
add
cs
add
je
push
add
add
nop
push
mov
leave
cs
adc
outsb
add
cmpsb
xchg
js
insb
clc
nop
nop
nop
nop
jae
sub
add
popl
mov
mov
cmp
mov
xchg
ret
add
add
add
push
insl
inc
push
mov
xchg
ret
int3
je
fldcw
xchg
add
repz
nop
nop
nop
nop
jae
add
pushf
inc
and
add
adc
nop
push
mov
leave
cs
cmp
add
popl
outsl
int3
add
pop
clc
nop
nop
nop
nop
jae
add
add
add
sub
xor
in
add
rclb
repnz
pushf
test
and
nop
nop
nop
nop
jae
je
mov
add
add
in
leave
cs
add
sub
adc
sub
cmp
nop
push
mov
leave
cs
popl
sub
sub
ret
push
nop
push
mov
leave
cs
mov
add
add
test
gs
push
mov
leave
cs
pop
add
add
add
sub
and
clc
nop
nop
nop
nop
jae
add
fiadds
popl
filds
xbegin
jae
add
inc
add
add
add
adc
pop
mov
movsl
xchg
clc
nop
nop
nop
nop
jae
adc
mov
adc
push
mov
xchg
ret
adc
add
add
add
xchg
nop
nop
nop
nop
jae
imul
into
add
adc
add
sar
mov
xchg
ret
and
imul
mov
orb
enter
in
leave
cs
cmc
xchg
add
add
adc
sbb
add
nop
push
mov
leave
cs
pop
add
add
ret
nop
push
mov
leave
cs
inc
mov
popl
push
int3
fisubrs
mov
jge
nop
push
mov
leave
cs
add
add
fiadds
push
fistpl
clc
nop
nop
nop
nop
jae
xchg
add
flds
addb
add
addb
nop
nop
nop
nop
jae
add
add
add
add
imul
and
mov
push
mov
xchg
ret
xlat
add
addl
sub
mov
lock
mov
xchg
ret
sub
add
mov
rcr
mov
cmp
imul
add
mov
add
out
add
add
dec
xchg
fwait
clc
nop
nop
nop
nop
jae
add
push
flds
cmp
ficoms
out
mov
clc
nop
nop
nop
nop
jae
data16
add
mov
jne
clc
nop
nop
nop
nop
jae
and
adc
mov
clc
nop
nop
nop
nop
jae
adc
scas
adc
scas
push
mov
pop
add
add
add
push
add
repnz
push
mov
xchg
ret
mov
add
add
add
xchg
add
add
mov
clc
nop
nop
nop
nop
jae
push
sub
movsb
add
int3
push
dec
xchg
nop
jae
jecxz
add
inc
adc
adc
nop
nop
nop
nop
jae
add
add
add
nop
push
mov
leave
cs
sub
sub
sub
xchg
mov
clc
nop
nop
nop
nop
jae
adc
je
int3
jecxz
sti
sub
nop
nop
nop
jae
add
imul
add
sub
fmulp
adc
stc
subl
push
mov
xchg
ret
add
outsb
add
scas
ficoms
mov
clc
nop
nop
nop
nop
jae
add
scas
add
fiadds
movsb
add
inc
mov
call
inc
add
add
add
outsl
xchg
ficomps
and
push
mov
xchg
ret
xchg
mov
add
imul
add
fld1
push
mov
xchg
ret
add
pop
cmpsb
mov
add
push
lds
nop
nop
jae
scas
add
add
sti
add
call
leave
cs
add
xchg
add
inc
sbb
and
xor
clc
nop
nop
nop
nop
jae
add
push
add
add
push
mov
xchg
ret
add
xchg
add
mov
add
mov
mov
xchg
ret
add
leave
add
and
jg
nop
push
mov
leave
cs
inc
add
mov
mov
roll
mov
xchg
ret
int3
and
push
add
add
push
notb
xor
cs
movsb
adc
fiadds
cmc
push
sbb
nop
nop
nop
nop
jae
int3
je
add
add
add
inc
add
fcomps
jne
push
mov
xchg
ret
add
cmc
add
cmp
push
addb
push
add
clc
nop
nop
nop
nop
jae
add
movsb
sub
je
clc
nop
nop
nop
nop
jae
adc
mov
xchg
stc
clc
nop
nop
nop
nop
jae
cmp
add
fistpl
clc
nop
nop
nop
nop
jae
test
cmp
add
mov
nop
push
mov
leave
cs
push
add
test
clc
nop
nop
nop
nop
jae
adc
mov
outsb
push
adc
xchg
xchg
andl
add
add
nop
push
mov
leave
cs
mov
adc
fwait
sub
mov
leave
cs
pop
add
pop
data16
cmc
adc
clc
addb
ja
ret
sbb
nop
jae
add
outsl
pushf
sarb
dec
jp
add
xchg
sub
add
adc
push
clc
nop
nop
nop
nop
jae
add
add
add
in
add
add
lods
add
imulb
xor
jo
jnp
ss
inc
jae
rorl
nop
nop
nop
nop
jae
mov
mov
aam
incb
in
pop
mov
add
call
xchg
cmp
in
add
lock
add
add
add
pop
add
mov
in
add
push
mov
sbb
cld
inc
jg
out
pop
add
and
mov
gs
test
icebp
clc
nop
nop
nop
nop
jae
sub
cmp
add
push
mov
xchg
ret
data16
push
add
add
testb
mov
clc
nop
nop
nop
nop
jae
add
addb
mov
xor
and
nop
nop
nop
nop
jae
mov
int3
mov
add
das
fistpl
push
mov
xchg
ret
add
int3
cmpsb
adc
add
lcall
inc
add
sub
adc
add
push
and
pop
shlb
lock
nop
push
mov
leave
cs
outsl
add
add
movswl
clc
nop
nop
nop
nop
jae
add
outsb
add
je
add
movzwl
clc
nop
nop
nop
nop
jae
sub
add
cmc
jmp
sub
add
clc
nop
nop
nop
nop
jae
cmc
jecxz
add
xor
pop
pop
pop
push
mov
xchg
ret
xchg
add
xchg
add
add
add
nop
push
mov
leave
cs
add
test
mov
lss
xchg
cmp
add
rorl
nop
nop
nop
nop
jae
cmc
add
adc
push
lcall
nop
jae
add
add
add
add
cmp
pop
pusha
clc
nop
nop
nop
nop
jae
add
leave
add
add
push
outsb
addl
rolb
and
nop
nop
nop
nop
jae
add
add
add
add
add
cmp
mov
xchg
ret
add
scas
testb
scas
push
add
add
push
clc
nop
nop
nop
nop
jae
adc
fisubrs
fiadds
int3
int3
loope
dec
add
nop
nop
nop
nop
jae
add
add
add
es
add
inc
push
mov
xchg
ret
data16
sub
add
inc
test
push
mov
sahf
add
add
add
jbe
xor
rol
or
mov
mov
clc
nop
nop
nop
nop
jae
leave
add
mov
leave
imul
pusha
push
test
add
inc
jns
les
push
mov
xchg
ret
add
add
add
add
add
jo
add
clc
nop
nop
nop
nop
jae
mov
add
add
add
add
add
mov
push
mov
xchg
ret
add
into
pop
add
sti
push
adc
push
clc
nop
nop
nop
nop
jae
add
adc
mov
add
cli
clc
nop
nop
nop
nop
jae
add
sub
flds
pop
add
add
adc
nop
push
mov
leave
cs
add
add
pop
add
add
mov
push
mov
add
add
add
lock
jp
add
jp
jl
clc
nop
nop
nop
nop
jae
add
add
add
pop
push
mov
mov
add
leave
cwtl
xchg
jp
add
add
loop
mov
aas
pop
clc
nop
nop
nop
nop
jae
ficoms
adc
mov
add
jne
clc
nop
nop
nop
nop
jae
cmpsb
add
mov
add
or
add
add
sub
inc
add
push
add
jnp
lret
clc
nop
nop
nop
nop
jae
add
inc
add
add
or
in
xor
addr16
flds
mov
jge
dec
add
or
outsb
test
mov
xchg
ret
add
mov
add
jecxz
clc
nop
nop
nop
nop
jae
add
add
add
add
add
and
clc
nop
nop
nop
nop
jae
add
add
clc
nop
nop
nop
nop
jae
test
mov
add
in
lret
clc
nop
nop
nop
nop
jae
pushf
fiadds
scas
fldenv
fidivl
mov
xor
rolb
lea
in
add
jge
rolb
jbe
faddl
inc
add
add
test
sbb
nop
jae
add
and
add
mov
xchg
pushf
insb
loopne
cmpl
nop
push
mov
leave
cs
adcl
mov
add
sbbb
nop
nop
jae
add
popl
push
outsl
inc
cmp
push
mov
mov
add
add
sbb
add
add
mov
clc
nop
nop
nop
nop
jae
add
inc
add
push
leave
sub
clc
nop
nop
nop
nop
jae
into
int3
inc
xchg
addl
nop
nop
nop
jae
adc
add
jecxz
inc
int3
xor
pop
push
push
mov
xchg
ret
inc
add
xchg
add
add
out
inc
push
push
mov
xchg
ret
outsl
test
mov
int3
push
add
push
mov
jne
nop
push
mov
leave
cs
add
fiadds
faddl
pop
add
inc
push
add
nop
push
mov
leave
cs
add
add
add
pop
push
mov
xchg
ret
add
add
int3
add
add
cmc
inc
mov
stc
lods
push
mov
xchg
ret
mov
outsb
inc
sub
into
jne
clc
nop
nop
nop
nop
jae
add
add
push
mov
addl
int
add
out
movsb
add
out
icebp
add
sub
add
cmp
nop
push
mov
leave
cs
add
fsubrl
fidivrs
nop
nop
nop
nop
jae
mov
test
mov
outsb
fldcw
cld
clc
nop
nop
nop
nop
jae
mov
add
add
pushf
ret
add
ja
dec
mov
std
cmp
mov
xlat
pop
fmulp
sbb
jne
clc
nop
nop
nop
nop
jae
add
sti
adc
adc
mov
nop
nop
nop
nop
jae
int3
push
sub
add
add
mov
add
add
nop
push
mov
leave
cs
add
add
imul
add
push
mov
xchg
ret
sti
pop
add
movsb
add
testb
inc
nop
push
mov
leave
cs
cmc
cmc
pop
add
xchg
adc
xor
add
clc
nop
nop
nop
nop
jae
sti
add
sub
xlat
add
and
clc
nop
nop
nop
nop
jae
and
add
add
add
add
push
or
add
add
mov
negb
fistpl
nop
push
mov
leave
cs
xlat
add
xchg
add
push
add
mov
xchg
ret
data16
add
adc
test
mov
xchg
ret
add
outsb
add
xlat
add
cmp
orl
push
mov
leave
cs
add
adcl
pop
test
mov
leave
cs
add
cmc
add
add
cmp
nop
nop
nop
nop
jae
movsb
add
pushf
add
outsl
adc
pop
fistpl
push
mov
xchg
ret
add
fwait
sub
mov
jne
nop
push
mov
leave
cs
imul
add
add
xchg
add
add
nop
nop
nop
nop
jae
add
faddl
inc
xchg
add
stos
clc
nop
nop
nop
nop
jae
inc
data16
mov
add
pushf
je
fld1
clc
nop
nop
nop
nop
jae
add
add
add
mov
test
clc
nop
nop
nop
nop
jae
push
test
clc
nop
nop
nop
nop
jae
add
add
add
add
add
adc
nop
nop
nop
nop
jae
add
popl
add
xorl
and
clc
nop
nop
nop
nop
jae
push
mov
add
outsl
loopne
pop
and
dec
push
nop
push
mov
leave
cs
mov
add
cmc
add
cmp
nop
nop
nop
jae
mov
add
sub
lds
nop
nop
nop
nop
jae
add
leave
sub
sti
mov
mov
stos
mov
push
mov
xchg
ret
add
add
and
sub
xlat
xchg
xor
clc
nop
nop
nop
nop
jae
add
and
xchg
add
or
push
clc
nop
nop
nop
nop
jae
mov
outsb
add
add
add
add
push
in
std
call
clc
nop
nop
nop
nop
jae
sti
xchg
add
inc
and
adc
push
inc
add
mov
into
add
sub
adc
stos
inc
push
fildl
xlat
xchg
inc
add
add
add
pop
add
je
clc
nop
nop
nop
nop
jae
add
add
cmp
sti
popl
dec
cmp
nop
nop
nop
nop
jae
mulb
add
push
mov
leave
cs
add
add
sub
xchg
in
push
push
mov
xchg
ret
adc
add
adc
fiadds
cmp
mov
leave
cs
add
add
add
xchg
add
add
jp
pop
push
mov
gs
add
add
push
or
add
adc
xor
lods
adc
lret
mov
nop
push
mov
leave
cs
inc
imul
mov
add
xchg
and
inc
out
xor
nop
push
mov
leave
cs
leave
add
add
add
jo
push
push
mov
xchg
ret
add
fwait
add
inc
push
imul
pop
fdivl
or
pop
aad
cmp
nop
push
mov
leave
cs
add
add
and
inc
dec
clc
nop
nop
nop
nop
jae
add
add
push
xchg
add
pop
push
mov
xchg
ret
add
add
fdivrl
into
add
xorl
add
add
add
mov
add
lcall
xor
ljmp
clc
nop
nop
nop
nop
jae
jecxz
adc
xchg
je
cmp
ret
mov
clc
nop
nop
nop
nop
jae
push
add
add
add
add
ret
clc
nop
nop
nop
nop
jae
add
add
mov
pop
add
add
dec
mov
push
mov
xchg
ret
mov
pop
add
mov
cmpsb
aaa
push
jmp
incl
and
adc
add
fwait
add
je
sub
nop
nop
jae
add
cmpsb
movsb
add
add
and
cmc
mov
clc
nop
nop
nop
nop
jae
mov
outsb
inc
int3
xor
jmp
leave
cs
add
xlat
add
imul
fwait
add
aad
scas
enter
nop
nop
jae
adc
add
fdivp
imul
sub
nop
nop
nop
nop
jae
add
add
push
add
nop
push
mov
leave
cs
add
mov
fisubrs
in
add
sbb
test
add
clc
nop
nop
nop
nop
jae
adc
add
add
mov
je
js
mov
xchg
ret
push
mov
mov
cmp
sub
pop
lods
xor
push
mov
leave
cs
add
cmp
add
add
jo
add
clc
nop
nop
nop
nop
jae
sub
mov
add
mov
push
add
inc
jle
pop
add
jp
scas
jg
sbb
mov
add
push
shll
add
nop
push
mov
leave
cs
and
add
js
mov
clc
nop
nop
nop
nop
jae
push
add
add
add
and
nop
nop
nop
nop
jae
mov
add
adc
ss
nop
nop
nop
nop
jae
mov
notb
addb
imul
nop
nop
nop
jae
scas
sub
xchg
xchg
add
push
mov
leave
cs
add
flds
add
popl
add
xchg
outsb
and
scas
jne
clc
nop
nop
nop
nop
jae
int3
add
or
nop
nop
nop
nop
jae
sbb
movsb
int3
add
sub
inc
pop
inc
add
add
add
fwait
into
adc
rcrb
xchg
ret
fwait
pop
faddl
movsb
add
and
flds
ljmp
nop
nop
nop
jae
push
cmpsb
cmp
xchg
pop
fnstcw
jns
idiv
nop
nop
nop
nop
jae
add
add
outsl
add
sub
add
fld1
clc
nop
nop
nop
nop
jae
add
adc
adc
add
adc
nop
nop
nop
nop
jae
add
add
inc
pop
push
mov
clc
nop
nop
nop
nop
jae
add
imul
add
mov
clc
nop
nop
nop
nop
jae
add
add
sub
sbbb
aaa
je
clc
nop
nop
nop
nop
jae
fsubl
mov
mov
xchg
ret
xlat
test
and
sub
push
push
lcall
nop
nop
nop
nop
jae
xchg
adc
sub
add
add
add
nop
push
mov
leave
cs
add
add
int3
add
add
nop
push
mov
leave
cs
add
add
xchg
movsb
add
pop
add
mov
clc
nop
nop
nop
nop
jae
add
add
adc
add
push
push
mov
xchg
ret
scas
add
xchg
faddl
scas
incb
mov
subl
clc
nop
nop
nop
nop
jae
fwait
add
xchg
add
adc
and
push
mov
leave
cs
xchg
add
add
flds
add
add
xchg
mov
clc
nop
nop
nop
nop
jae
sub
add
andb
fists
in
add
sbb
cwtl
add
add
jecxz
add
add
add
jle
je
clc
nop
nop
nop
nop
jae
pop
add
xlat
sub
add
je
clc
nop
nop
nop
nop
jae
pushf
into
movsb
je
add
inc
stos
clc
nop
nop
nop
nop
jae
add
mov
sti
add
add
inc
add
movsb
push
mov
xchg
ret
inc
add
leave
pushf
add
inc
add
inc
clc
nop
nop
nop
nop
jae
add
pushw
adc
mov
nop
nop
nop
jae
cmp
add
adc
push
sti
add
push
clc
nop
nop
nop
nop
jae
fiadds
add
jecxz
cmc
adc
push
add
mov
nop
push
mov
leave
cs
mov
add
mov
jne
clc
nop
nop
nop
nop
jae
add
sti
add
add
int3
test
dec
inc
add
add
ficomps
add
sub
js
clc
nop
nop
nop
nop
jae
add
andb
repz
pop
lock
enter
rolb
mov
cmp
out
sti
mov
clc
nop
nop
nop
nop
jae
adc
add
cmpsb
adc
cmpsb
ljmp
nop
nop
nop
nop
jae
add
xchg
outsl
je
fwait
sub
add
xor
push
inc
add
adc
add
cmp
cmp
push
fiadds
jae
nop
nop
nop
nop
jae
adc
add
adc
cmc
gs
push
mov
xchg
ret
add
outsb
sub
dec
push
push
mov
xchg
ret
add
fiadds
mov
push
mov
bound
sbb
add
add
testb
xlat
add
mov
xor
add
clc
nop
nop
nop
nop
jae
add
add
push
push
mov
xchg
ret
fwait
add
mov
add
dec
mov
push
mov
xchg
ret
add
mov
adc
push
clc
nop
nop
nop
nop
jae
mov
fcompl
add
pop
nop
push
mov
leave
cs
add
add
add
test
push
mov
xchg
ret
int3
test
add
andl
dec
nop
inc
add
add
pop
cmc
mov
add
call
inc
add
add
add
mov
push
mov
xchg
ret
add
push
ficoms
call
clc
nop
nop
nop
nop
jae
adcl
xchg
enter
call
cs
add
add
ds
pause
push
mov
leave
cs
sub
add
adc
into
push
imul
clc
nop
nop
nop
nop
jae
add
adc
and
push
clc
nop
nop
nop
nop
jae
add
mov
add
add
cs
out
test
loopne
cwtl
mov
sbb
sahf
outsl
inc
add
into
add
adc
sub
add
leave
adc
push
mov
xchg
ret
adc
fmulp
add
add
pusha
clc
nop
nop
nop
nop
jae
cmp
add
mov
push
pushf
out
inc
adc
push
mov
leave
cs
faddl
fnstcw
and
mov
xchg
ret
addb
imul
sub
xor
and
xchg
ret
clc
nop
nop
nop
nop
jae
cmc
add
add
sub
mov
popa
call
clc
nop
nop
nop
nop
jae
leave
add
push
xlat
stos
clc
nop
nop
nop
nop
jae
add
add
xchg
add
or
nop
nop
nop
nop
jae
add
xchg
push
faddl
pop
add
pop
mov
push
mov
leave
cs
add
cmp
add
and
mov
nop
nop
nop
jae
leave
outsb
int3
add
and
movswl
clc
nop
nop
nop
nop
jae
incb
mov
adc
sti
leave
pop
pop
clc
nop
nop
nop
nop
jae
mov
add
fwait
add
mov
xchg
call
clc
nop
nop
nop
nop
jae
mov
fwait
add
ror
adc
je
sub
nop
nop
nop
nop
jae
add
push
pop
leave
inc
push
inc
clc
nop
nop
nop
nop
jae
push
adc
pop
cmp
fimuls
nop
shlb
and
nop
nop
nop
nop
jae
add
add
add
sub
push
mov
xchg
ret
add
sub
add
popf
rep
nop
push
mov
leave
cs
cmpsb
cmpsb
and
add
xor
mov
push
mov
xchg
ret
cmc
cmp
add
add
adc
add
rolb
xor
out
test
nop
push
mov
leave
cs
adc
xchg
add
add
add
xchg
int
clc
nop
nop
nop
nop
jae
push
inc
je
add
add
fdivl
fs
push
clc
nop
nop
nop
nop
jae
fisubs
add
int3
mov
clc
nop
nop
nop
nop
jae
mov
add
push
inc
imul
push
mov
clc
nop
nop
nop
nop
jae
adc
add
adc
test
push
mov
leave
cs
add
imul
xchg
pop
testb
add
nop
nop
nop
nop
jae
add
mov
xchg
add
add
sti
pop
movsl
call
clc
nop
nop
nop
nop
jae
add
add
add
or
nop
nop
jae
inc
cmpsb
add
mov
mov
xchg
andb
clc
nop
nop
nop
nop
jae
add
add
add
je
call
clc
nop
nop
nop
nop
jae
cmp
int3
add
sub
add
clc
nop
nop
nop
nop
jae
popl
sub
cmp
ret
lret
pop
add
fdivrp
add
sub
add
popl
add
fdivrp
add
sub
sti
push
push
mov
xchg
ret
add
add
xchg
adc
adc
add
ja
mov
mov
fadds
ja
dec
imul
add
in
dec
sub
in
leave
cs
fiadds
xchg
add
subw
add
push
mov
xchg
ret
adc
cmp
xchg
pushf
add
fcompl
shl
nop
push
mov
leave
cs
add
add
add
pop
loopne
stos
nop
push
mov
leave
cs
add
fiadds
xchg
cmp
cmp
add
mov
xchg
ret
pushf
xlat
push
add
add
cmpsb
add
add
ljmp
add
ficoml
mov
pop
pop
sub
xor
add
test
loope
clc
nop
nop
nop
nop
jae
add
add
nop
nop
jae
sti
sub
outsb
je
pop
cmpl
popa
inc
add
add
mov
add
subb
jne
outsb
and
nop
nop
nop
nop
jae
add
sub
sub
add
add
mov
push
mov
leave
cs
je
inc
cmp
add
or
push
mov
xchg
ret
add
add
add
add
jl
js
sti
xor
clc
nop
nop
nop
nop
jae
outsl
je
add
mov
add
cmp
cs
adc
orl
test
jl
mov
clc
nop
nop
nop
nop
jae
and
xchg
add
mov
roll
nop
nop
nop
nop
jae
adc
cmp
mov
clc
nop
nop
nop
nop
jae
ficomps
sti
into
ss
ror
nop
push
mov
leave
cs
adc
add
cmp
nop
nop
nop
nop
jae
sub
int3
fwait
add
fs
popa
inc
add
mov
ficomps
add
push
mov
leave
cs
fiadds
pop
add
mov
add
cmp
clc
nop
nop
nop
nop
jae
pop
add
add
add
add
pusha
push
mov
xchg
ret
idiv
add
ficoms
add
sti
jne
mov
mov
add
cmp
add
xchg
test
data16
clc
push
mov
xchg
ret
add
sub
pushf
addl
add
int3
dec
add
sar
nop
nop
nop
nop
jae
add
pop
push
push
add
jbe
clc
int3
clc
jo
cmp
in
imul
data16
and
ja
cmc
sbb
sti
add
add
add
cs
or
into
add
and
mov
xchg
ret
push
add
add
incb
insb
movsl
es
clc
nop
nop
nop
nop
jae
sub
cmp
scas
fdivp
cmp
nop
jae
inc
add
mov
sub
add
in
pop
jb
nop
push
mov
leave
cs
outsl
scas
add
into
int3
add
nop
nop
nop
jae
xlat
add
adc
cmp
lods
lods
clc
nop
nop
nop
nop
jae
add
add
add
add
jmp
clc
nop
nop
nop
nop
jae
jecxz
add
add
add
sub
cmp
nop
nop
nop
nop
jae
mov
mov
add
mov
rol
add
clc
nop
nop
nop
nop
jae
add
add
add
add
clc
nop
nop
nop
nop
jae
fdivl
add
cmp
scas
outsb
push
test
nop
push
mov
leave
cs
add
add
int3
pop
add
data16
roll
jb
inc
add
add
cmpsb
mov
sub
scas
add
clc
nop
nop
nop
nop
jae
add
push
push
mov
xchg
ret
mov
add
adc
int3
add
mov
push
fildl
nop
nop
nop
nop
jae
xchg
outsb
imul
int3
add
add
data16
ret
dec
push
nop
push
mov
leave
cs
and
add
mov
mov
xchg
ret
add
add
adc
add
mov
add
mov
cmpsl
add
add
add
mov
enter
in
leave
cs
testb
sub
cmp
popl
add
push
mov
xchg
ret
add
sub
add
add
mov
xchg
ret
int3
mov
add
inc
out
lcall
push
inc
add
fidivs
add
add
and
push
mov
leave
cs
xchg
sub
sub
add
xchg
sbbl
push
add
add
xor
add
andb
push
add
add
add
clc
nop
nop
nop
nop
jae
cmpsb
sub
add
add
add
and
ss
pop
add
test
push
mov
xchg
ret
int3
add
add
leave
shr
clc
nop
nop
nop
nop
jae
add
add
into
sub
add
add
push
mov
xchg
ret
add
add
add
sub
add
add
xchg
mov
push
jnp
add
int3
add
add
adc
add
clc
nop
nop
nop
nop
jae
outsl
add
pushf
add
xorb
clc
nop
nop
nop
nop
jae
mov
add
orl
mov
mov
xor
push
mov
xchg
ret
mov
xchg
add
je
add
add
add
imul
call
add
fiadds
imul
data16
mov
clc
nop
nop
nop
nop
jae
add
add
adc
mov
mov
addr16
add
jecxz
imul
add
pop
push
pusha
push
mov
xchg
ret
pushf
add
pop
sti
add
test
mov
cmp
nop
push
mov
leave
cs
add
add
inc
pop
xchg
mov
clc
clc
nop
nop
nop
nop
jae
push
add
add
adc
push
into
add
nop
fadd
sbb
inc
sbb
in
outsl
loopne
mov
xchg
ret
add
leave
add
div
clc
nop
nop
nop
nop
jae
xchg
into
and
add
push
pop
clc
nop
nop
nop
nop
jae
add
pushf
outsl
cmp
sub
add
add
aad
inc
add
add
popl
mov
add
cltd
mov
push
mov
xchg
ret
adc
adc
add
daa
fld1
clc
nop
nop
nop
nop
jae
outsl
adc
inc
sub
cmp
pop
push
mov
xchg
ret
xlat
movsb
add
add
add
fdivrp
pop
push
mov
xchg
ret
mov
add
adc
add
add
add
clc
nop
nop
nop
nop
jae
and
add
adc
add
mov
push
mov
xchg
ret
mov
scas
incb
cmpsb
add
iret
clc
nop
nop
nop
nop
jae
scas
add
add
and
mov
xchg
ret
adc
fcoml
int3
push
sub
jbe
nop
push
mov
leave
cs
add
cmp
cmp
pop
push
mov
xchg
ret
pop
adc
add
cmc
xchg
test
nop
push
mov
leave
cs
je
xchg
testb
fiadds
sub
add
add
jmp
incl
int3
add
add
cmpsb
add
loopne
fld1
clc
nop
nop
nop
nop
jae
xor
pop
test
fwait
je
mov
cltd
push
clc
nop
nop
nop
nop
jae
adc
add
add
add
add
fwait
add
pop
clc
nop
nop
nop
nop
jae
popl
add
add
add
sub
inc
pop
clc
nop
nop
nop
nop
jae
int3
add
add
add
nop
pop
sub
nop
nop
nop
nop
jae
push
cmpsb
fsubl
add
mov
mov
clc
nop
nop
nop
nop
jae
add
sub
add
sbb
add
add
sub
add
add
notl
in
add
add
dec
out
adc
addb
cmc
or
add
decb
push
clc
nop
nop
nop
nop
jae
add
add
sti
add
sub
add
int3
mov
stos
push
push
mov
xchg
ret
mov
add
push
push
mov
leave
cs
cmp
pop
add
add
push
fidivrs
loop
push
mov
xchg
ret
mov
push
add
inc
add
mov
mov
fiadds
add
add
pushf
xchg
jno
add
add
test
add
add
push
clc
nop
nop
nop
nop
jae
test
add
mov
add
les
push
mov
xchg
ret
add
xchg
adc
inc
add
clc
ljmp
in
pop
ss
cmp
add
pmullw
push
mov
add
leave
mov
add
clc
nop
nop
nop
nop
jae
add
data16
test
add
mov
xchg
ret
add
add
movsb
and
add
nop
nop
nop
jae
add
add
add
pop
cmp
mov
jmp
nop
nop
jae
push
adc
cmc
add
fiadds
faddl
lcall
pop
inc
add
outsl
flds
popl
mov
insb
repnz
arpl
nop
nop
nop
nop
jae
int3
add
flds
add
add
add
add
leave
cs
jecxz
add
xchg
mov
clc
nop
nop
nop
nop
jae
add
add
add
cmp
jb
push
mov
xchg
ret
mov
add
adc
int3
adc
cmp
push
mov
leave
cs
into
mov
outsb
pop
add
outsb
dec
lret
loop
sub
mov
clc
nop
nop
nop
nop
jae
add
inc
cmp
mov
add
clc
nop
nop
nop
nop
jae
add
mov
push
pop
pop
inc
add
push
fiadds
add
xchg
pop
mov
testl
nop
nop
nop
nop
jae
int3
movsb
sub
jne
clc
nop
nop
nop
nop
jae
add
add
add
test
add
clc
nop
nop
nop
nop
jae
add
mov
and
jo
sbb
nop
nop
nop
nop
jae
adc
push
xchg
add
jbe
push
clc
nop
nop
nop
nop
jae
leave
int3
add
pushf
add
jo
je
inc
and
add
push
mov
add
add
pop
mov
adc
rolb
enter
call
test
dec
sbb
inc
les
jg
pop
rcrl
ds
xchg
push
sti
ror
mov
into
mov
cmp
dec
or
xchg
or
sahf
jae
pop
ret
out
pop
outsb
mov
mov
cmp
cmc
rolb
lahf
imul
xor
lds
shrl
test
aam
js
repnz
pusha
popf
out
push
pushl
inc
and
push
fdivl
mov
aam
xor
cmp
push
in
sub
xchg
mov
cmp
in
adc
dec
movl
inc
es
lahf
ljmp
repnz
mov
shlb
xor
lock
inc
mov
adc
std
push
das
lret
push
inc
push
jecxz
mov
inc
sbb
mov
std
data16
adc
mov
aas
repz
mov
out
mov
mov
mov
mov
les
add
sti
repz
inc
xchg
nop
mov
cld
out
xchg
dec
or
sbbb
jbe
nop
shl
cwtl
cld
inc
lahf
pop
ljmp
sbbb
in
sub
sahf
cmp
jno
inc
shll
jmp
push
je
lahf
pop
mull
cmp
orb
cmp
ja
sub
pushf
int3
rolb
ja
icebp
jmp
stos
lcall
cmpsb
pop
cmp
jecxz
cmp
pop
pop
cmp
leave
ds
add
cmp
test
dec
jl
stos
stos
mov
jae
adc
jne
lock
dec
or
lock
mov
test
or
subl
cs
cmc
dec
push
adc
add
jecxz
sub
cmpsb
adc
andb
add
and
xor
sbb
mov
les
outsb
mov
dec
inc
push
insl
in
inc
push
in
mov
jne
cmp
push
jae
mov
inc
xor
sbb
xor
sub
fidivrl
out
nop
adc
jge
pop
iret
xchg
shr
add
lret
mov
xorb
mov
cwtl
sbbb
movsl
out
push
push
stc
mov
into
cmp
mov
daa
pop
lock
push
popf
mov
xor
call
je
ja
jne
fisubl
xchg
cmc
shll
xor
in
fst
pop
aam
andb
pop
jae
outsb
out
xchg
es
push
or
nop
test
xlat
sub
adc
mov
xor
or
push
lds
rcl
testl
pop
xlat
jg
xlat
insl
pop
inc
push
bound
ret
jmp
cmp
xor
add
sti
fiaddl
pusha
mov
test
mov
adc
andb
call
mov
pop
scas
stos
pop
lahf
sahf
in
sbb
ds
add
stos
mov
lods
and
mov
arpl
es
mov
mov
dec
cwtl
push
inc
imul
cltd
stos
sbb
test
sarb
push
cmpsb
pusha
mov
pop
or
pusha
adc
call
ja
fstpl
and
mov
in
fidivl
mull
pushf
or
cmc
fidivrl
fstpl
movsb
fisubl
adc
inc
adcb
ds
cmp
lcall
loope
cld
lds
pop
shlb
xor
icebp
or
inc
rol
pop
xchg
jle
les
add
push
dec
cmpsb
lock
rolb
sbb
inc
push
mov
xchg
daa
dec
rclb
adc
in
pop
in
inc
push
dec
imul
push
shlb
sub
call
push
in
mov
dec
lret
push
push
ja
cmc
adc
inc
icebp
mov
mov
sbb
xlat
ficomps
lret
loopne
mov
push
mov
test
push
stos
mov
icebp
sub
dec
jns
ljmp
push
jmp
adc
mov
aas
jle
cwtl
movsb
mov
dec
lret
jmp
and
fwait
stos
inc
lret
hlt
dec
scas
push
mov
fldt
fidivs
cli
fmul
dec
dec
cmp
rep
lock
loopne
mov
out
sbb
cmc
mov
test
cwtl
int3
inc
imul
push
push
push
jle
xorb
call
inc
popa
int
adc
insb
sahf
lret
inc
or
dec
shlb
add
mov
xchg
add
loop
pusha
pusha
xchg
mov
jo
xchg
fs
adc
add
adc
iret
xchg
or
inc
mov
ja
xchg
rcl
ljmp
enter
xlat
xchg
cmpsb
mov
testb
imull
xchg
xor
aas
into
imul
lds
mov
out
xchg
stos
pop
data16
popa
pop
mov
mov
mov
iret
das
inc
aad
pop
jns
xchg
mov
add
dec
inc
sbb
pusha
mov
loopne
mov
stos
sub
mov
push
loopne
leave
dec
dec
lret
mov
es
ss
imul
mov
std
jbe
add
dec
cmp
jbe
sub
outsb
push
xor
or
and
sbb
popa
nop
pushf
inc
pusha
mov
fwait
out
rcrb
mov
add
aam
sub
loopne
adc
mov
call
sub
sub
mov
mov
aam
loopne
or
loopne
popf
ds
inc
nop
les
xchg
pop
or
roll
ljmp
cmp
sub
pushf
add
stos
xor
pop
jns
adc
loopne
mov
movb
or
shl
mov
push
xchg
lret
mov
sahf
add
add
sub
sbb
and
leave
mov
hlt
or
inc
dec
jle
cmpsl
adc
leave
pop
loopne
pop
jne
push
mov
loopne
pop
mov
les
add
and
repnz
jne
lret
jo
and
add
inc
out
loop
jbe
in
test
jl
sbb
hlt
rcll
jae
sbb
or
mov
es
notl
out
adc
xor
js
jo
cs
loopne
imul
loop
and
cmp
subb
sbb
aas
pop
test
nop
mov
add
cmp
out
pushf
push
into
in
jmp
push
xchg
out
jae
push
dec
add
insb
add
and
cld
mov
cmp
shlb
push
sahf
fnstcw
dec
in
pop
sub
mov
aas
and
adc
and
addl
cwtl
add
jnp
insb
imul
add
and
jns
rorl
cltd
in
mov
lods
mov
int3
mov
xchg
das
xlat
mov
out
push
data16
les
testb
ss
push
gs
rcrl
push
push
fidivrs
addb
ret
or
loopne
cld
jg
arpl
push
adc
or
shlb
pop
mov
xor
mov
pusha
add
ret
xchg
int3
stos
dec
nop
or
cmpsw
inc
xchg
gs
out
xor
adc
xorb
cmc
jl
sbb
inc
cs
imull
ja
xchg
sbb
loopne
push
and
dec
das
loopne
enter
adc
add
pop
adc
adcl
pmaxsw
push
sub
sbb
pushf
mov
pusha
sbb
roll
cs
std
iret
mov
call
cld
jbe
stc
mov
and
push
daa
mov
xchg
addr16
mov
sub
and
pop
cltd
xchg
adcl
mov
cli
cmp
pop
cs
repz
sbb
inc
loopne
fildll
add
xchg
xor
xchg
sbb
lret
jnp
adc
and
fiadds
xchg
lods
push
or
incb
aas
iret
push
mov
push
cltd
xchg
out
adc
pop
cmp
xchg
int3
das
inc
lods
inc
int3
test
in
stc
div
repnz
out
data16
mov
sbbb
icebp
dec
xor
xor
je
fmul
xchg
or
loope
dec
mov
out
mov
test
lea
sti
popa
aaa
xor
into
add
sub
mov
fs
mov
mov
fwait
test
add
js
mov
inc
cltd
js
scas
ficoms
add
pop
adc
mov
jns
lahf
dec
ret
xor
sub
fistps
and
jg
mov
jl
hlt
ss
lea
shlb
lods
in
loope
mov
dec
mov
and
mov
adc
xor
jmp
cmp
imul
dec
imul
xor
dec
les
cmp
test
inc
cmpsl
inc
scas
js
icebp
xor
adcb
daa
ja
insb
mov
enter
mov
push
add
std
ss
inc
and
dec
sbb
je
stos
jecxz
and
jmp
or
fs
fnstenv
call
and
add
in
cmpsl
jne
pusha
das
mov
and
sbb
and
adc
sbb
add
pushf
pusha
fdiv
shlb
sub
or
fcmovbe
stc
and
fwait
mov
out
insl
repnz
call
test
mov
imul
cwtl
jo
push
das
jo
adc
int
ja
fmuls
jno
std
and
mov
cmp
out
into
fnstsw
roll
loopne
in
pushf
inc
mov
sub
and
dec
roll
outsb
mov
sahf
jne
ds
ja
ret
or
add
add
stos
cwtl
test
das
cmp
pop
xor
test
dec
mov
pop
adc
or
pop
in
bt
or
cwtl
clc
shlb
add
loopne
xor
fisubs
mov
mov
insl
sbb
cld
adc
mov
movsb
sub
aas
jecxz
out
inc
xchg
push
xor
cmp
sar
adc
dec
daa
dec
add
mov
and
fidivrl
andb
inc
mov
cmc
jne
hlt
push
pop
pop
pop
lea
push
and
push
mov
xchg
pop
int
mov
das
xchg
fwait
adc
rcl
cmp
inc
loopne
in
push
fisubrl
fldcw
pop
dec
add
add
loopne
or
insl
mov
xchg
and
nop
nop
add
xor
ret
sub
inc
cli
cmpsb
mov
mov
and
add
mov
pop
and
adc
push
mov
jne
negb
fisubrs
mov
faddl
int3
lock
int
les
sub
addr16
push
cmpl
mov
rorl
push
push
stc
sub
shll
jecxz
and
sub
cmp
jl
sub
xchg
cmp
pop
and
movsb
adc
std
push
repz
shlb
aas
jge
mov
dec
mov
inc
lock
mov
imul
add
adc
pop
shlb
iret
sar
rcr
inc
lahf
scas
lcall
lock
push
inc
add
pusha
lds
dec
dec
fldcw
mov
rclb
add
cltd
shl
jne
insb
ror
cmpsl
ja
fs
add
addb
mov
mov
xor
cld
call
cmp
rclb
loopne
dec
mov
loope
push
sbb
in
insl
out
mov
or
movl
mov
sbb
cmp
cmpsl
mov
mov
icebp
mov
xchg
adc
sub
out
in
or
fidivrs
fnstcw
scas
iret
cmc
xchg
jbe
cmp
mov
je
inc
cmc
push
add
movsb
test
inc
add
push
mov
mov
adc
and
ja
lret
jp
repz
mov
and
rclb
lock
add
sbb
lret
imul
adc
xor
push
arpl
jecxz
cwtl
sbb
jne
push
lods
inc
mov
enter
fwait
cs
dec
adc
loopne
rorb
xor
hlt
pop
jmp
shr
pop
sub
mov
sbb
out
ljmp
inc
mov
cmp
popa
in
dec
fdivrl
lock
gs
push
adc
loopne
repz
mov
pusha
lods
outsb
sub
mov
rcll
icebp
sbb
ds
jecxz
xor
add
in
sbb
push
sub
imul
mov
pop
pop
sub
rolb
out
pop
mov
jl
mov
clc
sbb
pusha
and
add
add
add
mov
pop
cld
jne
push
movsb
rclb
sbb
push
cwtl
cwtl
add
add
mov
xchg
stos
mov
shl
cltd
xor
xor
aam
and
jl
in
mov
xor
scas
dec
gs
into
cltd
ja
sub
pusha
lock
stos
push
aad
mov
mov
push
dec
lock
dec
gs
inc
mov
add
jmp
in
cmpsb
or
sbb
in
mov
ret
add
pusha
jge
icebp
dec
andl
sub
orb
mov
push
dec
ja
mov
fsub
mov
cld
int3
jecxz
hlt
aad
cs
std
dec
mov
stos
push
das
fnstcw
out
cmpsb
mov
or
js
adc
inc
in
popf
sub
pop
fnstenv
pop
testl
xor
imul
add
cmp
ret
and
mov
mov
sub
test
imul
cmp
dec
int3
cmpsb
dec
and
jnp
adc
sbb
push
loop
add
aad
testl
les
call
addr16
mov
data16
das
cwtl
adc
push
or
das
sti
cmpsb
aaa
xchg
push
jmp
ja
roll
adc
pusha
gs
call
add
xchg
fsubl
dec
ror
or
sahf
xor
loopne
mov
repz
push
lods
repz
cld
and
sbb
out
push
gs
mov
cmp
or
loopne
push
mov
into
hlt
jg
addb
aad
adc
inc
inc
push
mov
imull
repz
loopne
add
sbb
add
and
adcb
fisttpll
cmp
fidivl
and
sbb
ljmp
or
rorl
mov
or
and
or
pop
pop
xor
repz
leave
mov
and
xor
out
repnz
mov
inc
push
insl
sbb
lods
ja
jl
leave
stos
lret
and
mov
loopne
mov
sbb
lcall
nop
add
cmpsl
lds
ja
mov
fs
sub
mov
mov
and
push
cwtl
pusha
leave
bound
or
add
aad
pop
and
mov
pop
cmp
das
sbb
icebp
pop
add
rcl
pusha
fs
mov
inc
cli
inc
aas
int3
pop
ret
arpl
aas
test
mov
xor
dec
icebp
in
cwtl
xor
addr16
sti
js
xchg
movsl
nop
add
mov
xchg
iret
dec
movl
out
pop
test
insb
mov
push
mov
repnz
mov
xchg
or
stc
dec
push
mov
stc
sti
fidivrs
mov
xchg
and
leave
rclb
and
push
std
sbb
cli
jp
cmp
je
lret
rcrl
ljmp
push
ds
pop
cmpsb
push
cltd
adc
fldcw
bound
in
push
sti
pop
lret
push
xor
movsb
inc
or
pop
fidivs
xchg
sub
pusha
rclb
mov
add
rcrl
js
lret
mov
pusha
ja
inc
and
sub
and
shlb
fisttpll
push
adc
bound
stc
lods
cmpsl
clc
outsl
mov
sbb
pusha
mov
inc
and
lahf
shlb
lahf
cmp
cmp
lods
shrb
cmc
xchg
or
stos
jae
jl
xor
and
jb
das
je
cmp
in
inc
pop
push
cs
xchg
dec
jp
cmp
clc
pop
pop
push
pop
cmc
xor
movsl
mov
sub
and
andb
or
insb
mov
jge
inc
lods
loope
jbe
jg
test
sbbb
jns
xor
rorl
fsubs
push
in
lea
or
pusha
fimuls
sbb
sub
xchg
pop
lahf
mov
mov
mov
cld
inc
or
adcb
js
add
dec
fisubl
in
jecxz
sub
sti
fisubs
lods
xor
dec
rolb
and
mov
fsubl
pusha
loopne
jae
js
sub
mov
sub
mov
adcb
fbld
pop
ja
shrl
mov
inc
pop
cmp
fistl
pop
std
dec
or
test
out
ljmp
mov
adc
fistps
daa
jne
add
fstpl
pusha
cwtl
movsb
mov
xchg
test
mov
cmp
or
mov
jne
mov
jns
adc
pop
pop
int
inc
orb
add
test
pop
pusha
add
push
and
inc
inc
gs
sub
ss
push
fwait
jp
mov
aad
mov
adc
mov
fisubs
xor
sarb
out
fadds
fistpll
mov
movsb
cmp
push
popf
movsb
rcr
or
fsubrs
negb
pop
into
scas
mov
test
mov
fnstsw
lret
push
jecxz
fld
ljmp
mov
inc
xor
cmp
dec
cmpb
push
mov
sub
add
cmp
pop
pop
imul
rol
into
roll
and
cmpl
test
pusha
lds
scas
and
mov
cltd
and
pop
and
repz
fsubs
or
cwtl
int3
pusha
jae
mov
cmc
adc
js
ljmp
mov
mov
rorb
test
ret
mov
outsl
add
fsubs
or
mov
cld
loopne
inc
fidivrl
in
subl
notl
dec
push
cmp
cmp
pop
xlat
mov
test
loopne
xor
mov
mov
cld
mov
mov
pushf
pushf
pusha
xor
sub
cs
add
xor
mov
test
xchg
and
insb
jae
insl
or
sub
cmpsb
inc
or
lcall
dec
mov
movsl
pop
mov
insb
loop
clc
pop
je
mov
inc
and
sahf
jbe
pop
dec
hlt
sbb
shll
outsl
lahf
jo
fadds
aad
and
sbb
into
pop
mov
fldt
mov
ss
imul
out
xlat
jb
cli
push
mov
push
sub
mov
mov
sub
mov
jb
adc
loopne
loop
push
add
jno
add
shlb
enter
movsb
in
outsb
xor
mov
outsb
scas
jb
lahf
cmp
nop
mov
jne
inc
xchg
rep
xor
jmp
add
sahf
jge
lock
lock
mov
and
dec
inc
das
jle
xchg
add
dec
jmp
test
inc
mov
push
or
dec
roll
rclb
pop
les
jg
repz
dec
mov
adc
inc
inc
cmp
aad
mul
je
jmp
add
loopne
jne
pop
jmp
out
or
inc
rclb
ja
dec
cmp
mov
cmp
inc
xor
add
mov
add
add
aas
mov
adc
pop
es
xchg
push
jmp
or
fdivrl
push
cmp
in
xorl
ficompl
lods
mov
jmp
call
gs
jae
rorb
mov
std
dec
or
lahf
sub
ror
stos
jno
scas
and
sub
mov
inc
jb
lret
mov
sbb
cmp
ret
gs
mov
push
cmp
mov
pop
leave
fdivrs
mov
mov
jb
dec
lods
in
pop
inc
xor
inc
sbb
ss
jmp
mov
cmp
subl
push
fimuls
sbb
fstpl
in
loopne
in
pop
adc
fs
ds
inc
lods
inc
orl
sarl
cmp
pushf
pusha
pushf
insb
adcb
fwait
dec
push
inc
arpl
lahf
mov
mov
into
ffreep
pop
pop
dec
ss
sub
cmp
movsl
cld
out
or
aad
adc
pusha
mov
jnp
fisubrs
mov
adc
bound
adc
rorb
inc
xor
cwtl
pusha
inc
inc
add
mov
pop
mov
xchg
pusha
add
inc
fists
fcoms
into
ljmp
sub
pop
xor
popf
xlat
pop
clc
mov
add
xchg
movsb
in
inc
test
add
clc
adc
movsl
inc
xchg
lock
xor
enter
push
idivb
mov
pop
mov
and
js
setae
nop
xor
dec
sub
xchg
lret
pusha
cmp
sub
cmc
out
negl
loopne
shlb
in
push
mov
sbb
inc
ljmp
push
jg
fdivs
mov
sbb
push
test
gs
add
loopne
mov
and
mov
mov
aam
and
xchg
mov
mov
lods
loopne
xor
add
dec
jae
std
adc
sbb
and
sbb
les
ja
xchg
mov
xchg
and
in
cmp
sbb
adc
js
jae
leave
and
faddl
dec
mov
add
loopne
bound
adc
ret
cli
ret
std
mov
add
in
pusha
cmp
dec
out
jb
dec
int3
push
scas
scas
shl
fmull
pusha
push
or
loopne
aas
jo
adcl
jno
and
call
xchg
mov
adc
lea
mov
fisubrs
adc
sub
cmpsl
and
decb
pop
mov
add
mov
popf
ss
iret
mov
bswap
outsl
jg
or
xor
jecxz
icebp
dec
and
leave
jne
mov
and
fcoml
cmp
jle
sbb
cmp
and
out
add
sti
pop
mov
mov
inc
xchg
sets
rorl
in
stos
test
push
lea
inc
fwait
pusha
gs
mov
push
mov
xchg
mov
rorl
shlb
mov
gs
sbb
mov
mov
fimull
popa
ficomps
mov
mov
dec
xor
and
sub
jle
int3
stos
fisubs
aad
sub
lea
scas
push
add
sub
add
loopne
pop
subl
sti
push
scas
pcmpgtd
dec
pusha
pop
data16
loopne
xor
sub
addr16
arpl
jbe
add
call
icebp
and
in
loop
pop
ret
and
loopne
insl
xchg
mov
cmpsl
mov
adc
loopne
shlb
pusha
orb
adc
mov
mov
cmp
insb
inc
pusha
push
xchg
mov
scas
insl
les
dec
mov
test
inc
add
movsb
xor
setge
dec
sbb
adc
push
cmpsl
jl
xchg
sub
rclb
sub
jl
push
mov
mov
out
sub
xor
adc
into
jecxz
imul
or
xchg
mov
adc
andl
aam
ret
push
and
mov
decb
adc
rclb
and
dec
mov
lods
dec
mov
das
fwait
and
outsl
gs
je
insl
mov
cmp
sub
pop
or
hlt
adc
xchg
mov
scas
dec
insl
sub
in
into
clc
repnz
inc
repnz
push
cmp
je
pop
mov
enter
mov
cmp
inc
inc
adc
inc
jp
out
das
fstpt
les
das
mov
jl
xor
lock
xchg
add
mov
cmpsb
inc
inc
pusha
std
imull
es
or
enter
push
and
and
or
mov
and
bndldx
enter
adc
lahf
adc
and
jb
lret
popa
sti
xchg
daa
adc
pusha
rcrl
xchg
out
call
es
mov
xor
scas
or
cmpb
mov
aas
clc
test
or
jne
movsb
and
sar
mov
xor
sub
dec
rorb
adc
pusha
push
or
lock
in
mov
mov
push
roll
mov
mov
push
dec
cld
test
push
in
nop
cwtl
and
sarb
push
push
jno
fidivrs
jg
fwait
mov
clc
sub
fcoml
test
mov
mulb
nop
mov
mov
jmp
shl
ss
cmp
arpl
fcomp
std
adc
aam
mov
test
loopne
test
sahf
xchg
push
movsb
push
dec
aas
ja
mov
add
mov
lret
jmp
sbb
loopne
pusha
mov
add
stos
sub
add
push
xor
cmp
sti
ja
jecxz
ja
lcall
in
push
push
jo
mov
or
sarb
cmpsb
out
fstpt
jns
adc
pusha
jns
sub
and
stc
lock
push
mov
in
and
mov
nop
adc
mov
fmull
mov
negl
insl
scas
iret
adc
rorb
or
pusha
js
jle
hlt
sbb
shr
and
call
push
and
mov
jno
mov
push
mov
add
or
add
loopne
cmp
cli
mov
fnstenv
jmp
pusha
jae
out
fidivs
rolb
and
fisubl
or
inc
mov
les
daa
jnp
test
xor
lahf
cmp
mov
mov
pop
push
fnstenv
cmp
call
adcb
stos
mov
xor
test
pop
fmull
jmp
mov
adc
pusha
arpl
adc
or
mov
int3
mov
faddl
cmpsl
fs
push
fs
and
pop
mov
pop
test
adc
sub
pop
rcl
sbb
lock
mov
std
jb
pop
pop
in
sbb
cmp
cli
mov
xchg
mov
mov
test
add
enter
adc
pushl
cmp
loope
mov
mov
push
sub
adc
outsb
mov
sti
inc
or
rcrb
pop
in
sbb
mov
addr16
xor
aad
xchg
fistps
jl
call
pop
mov
call
mov
jno
les
xlat
cmp
hlt
neg
cld
clc
mov
xchg
inc
inc
cmp
sub
xchg
leave
aam
cld
mov
add
test
addr16
shl
and
subl
call
lock
xor
pop
cmc
addr16
lds
out
cwtl
push
and
adc
fdiv
adc
mov
clc
add
push
lretw
mov
ljmp
or
xor
je
das
jbe
sub
push
pop
scas
test
in
jne
jecxz
or
in
gs
and
sub
mov
repnz
mov
mov
dec
mov
xlat
cs
jl
dec
adc
xchg
sub
mov
adc
enter
shll
or
and
arpl
cmpsb
fisubs
test
ror
dec
sahf
lea
lods
cs
sarl
lods
shll
xor
inc
sbb
jbe
test
inc
jmp
icebp
jl
testl
pushf
lock
movsb
sbb
loopne
leave
mov
cmc
mov
hlt
pop
stos
dec
adc
aaa
push
nop
adc
or
push
mov
mov
lock
jb
loopne
sub
cmp
inc
sub
movsb
fwait
lcall
push
test
popf
pop
pop
ret
pop
and
lea
repnz
outsl
mov
lds
and
rcrl
je
fsubl
and
iret
repnz
push
mov
loope
cwtl
xorb
xchg
mov
adc
sbbb
mov
fidivrs
dec
push
pushf
int3
inc
test
add
movsb
jae
std
fbld
into
mov
and
cmp
cld
pop
inc
out
insl
es
and
addr16
cmpl
mov
sbb
jl
add
xor
cmpsl
and
xor
inc
int3
adc
adc
xchg
or
pushf
and
mov
push
add
lods
cmp
roll
pop
sbb
test
data16
sbb
test
pop
push
add
pop
cmp
push
cli
add
cmpsb
add
add
jo
sti
arpl
cmp
clc
add
in
and
lods
inc
sbb
ficoms
loope
mov
leave
fld
ja
mov
push
enter
ret
in
sub
pushl
mov
and
cld
test
loopne
js
pop
outsb
cmpsl
and
push
cli
lahf
xchg
nop
and
mov
ret
dec
insb
push
rcrb
fidivrl
movb
mov
mov
jne
and
popf
dec
aaa
mov
pushf
or
sbbb
xchg
inc
test
bound
or
add
mov
mov
imul
add
test
inc
cmp
or
mov
out
push
inc
sub
imul
xor
and
add
int3
sbb
xor
jl
jmp
mov
cld
mov
sbb
add
xchg
adc
loopne
xchg
or
sbb
inc
rorb
and
shlb
fmul
cmp
loopne
arpl
in
ret
inc
xchg
enter
sbbb
lahf
or
outsb
push
dec
fwait
inc
nop
in
or
adc
andb
in
push
and
sbb
xlat
pushf
movsb
inc
mov
xor
pop
fsubl
xchg
loop
call
inc
and
mov
int
add
inc
fldcw
mov
push
int3
sbbb
and
mov
and
sbb
adcb
mov
je
sub
loopne
orb
push
imul
test
jb
pop
mov
and
fcoml
sub
in
mov
inc
jnp
jl
cli
lea
xchg
sub
mov
or
or
sub
loopne
push
or
cmpsb
or
push
rcrl
lds
pop
or
das
dec
sbb
and
call
ljmp
xor
lret
dec
jle
sbb
sub
repnz
cmp
loop
stos
pop
xchg
dec
shlb
xchg
shlb
and
dec
inc
jmp
scas
daa
cmpb
mov
or
bound
shll
fidivl
pushf
je
cs
inc
xor
stos
add
imul
daa
movsb
add
stos
push
cwtl
mov
aaa
fiaddl
insb
lret
jb
lods
xor
cmp
push
js
jp
lcall
inc
in
or
sub
or
adc
mov
lock
cmp
push
mov
inc
jbe
clc
enter
or
pusha
leave
mov
cmp
sub
iret
fimull
in
pop
fists
ja
clc
out
sti
cmpsb
fs
lret
mov
cli
lcall
adc
movsl
jbe
or
push
sbb
mov
cld
loopne
sbb
sarb
and
jecxz
stos
out
clc
jo
movsb
sbb
loopne
sahf
shl
fs
out
popa
xchg
push
adc
nop
dec
add
push
and
fwait
stos
loope
xor
pop
inc
cmc
mov
mov
mov
jecxz
inc
mov
sbb
rolb
cmc
mov
mov
inc
add
jo
and
jno
add
cmp
iret
es
loop
movsb
inc
or
cmp
and
add
outsb
inc
bound
sub
push
mov
shrb
sbb
fbstp
adc
scas
mov
dec
and
dec
pop
inc
mov
pop
stos
mov
popa
cwtl
mov
mov
mov
xor
and
cltd
mov
test
in
inc
jo
jno
es
stos
mov
loope
ljmp
xchg
mov
mov
mov
cmp
and
push
pop
aam
cmp
and
sub
gs
adc
add
mov
stos
scas
xor
add
ret
mov
js
leave
jbe
push
dec
sbb
sub
fcmovu
into
hlt
fxam
add
loopne
sbb
inc
sbb
mov
mov
push
inc
das
jp
push
jb
in
pop
scas
xchg
push
shr
sub
arpl
cmpsl
ret
cs
sbb
inc
cli
cmp
ljmp
push
jmp
je
jb
out
pop
fisttps
dec
int3
or
inc
outsb
sub
mov
xchg
lea
leavew
dec
decl
in
stos
fmulp
mov
movsb
sarl
roll
xchg
enter
cwtl
xchg
loopne
aaa
push
mov
je
dec
xchg
in
xchg
inc
and
push
inc
stos
fidivrl
jo
sarl
and
inc
push
xchg
je
out
adcl
xchg
loopne
and
inc
out
aas
sub
js
out
push
jl
sarl
mov
arpl
fdivrs
jns
sub
fistps
push
cli
mov
std
scas
lahf
mov
mov
gs
in
sbb
and
outsl
movq
mov
test
mov
cltd
addr16
adc
test
pop
fbstp
andb
jl
gs
mov
jno
jns
sub
sub
stos
out
cs
inc
add
dec
inc
mov
mov
add
mov
dec
inc
lds
pusha
outsl
mov
lock
ja
push
out
cmpsb
jns
test
pusha
mov
pop
outsb
cmpsl
lds
pop
pop
in
hlt
movb
aam
ljmp
and
lcall
lods
sbb
add
push
mov
outsb
fisttps
call
push
add
cmc
pop
fcmovnu
xor
frstpm(287
lods
jae
inc
inc
push
mov
lcall
fs
push
inc
pusha
stos
or
or
adc
ss
jne
arpl
mov
and
aam
inc
negl
mov
js
mov
xchg
dec
lret
xor
lods
adc
inc
mov
es
in
stos
add
aad
icebp
dec
mov
movsl
or
cmp
shlb
jle
jle
push
std
pop
cmp
xorl
fisubl
mov
outsb
stos
leave
test
inc
and
sub
xchg
das
sub
fwait
cmp
push
pop
sbb
sbb
xor
push
repz
dec
aad
inc
cld
negl
pop
inc
cmpsb
push
jb
mov
add
fsubr
jb
icebp
xlat
sbb
stos
fldt
or
out
in
scas
sub
dec
popa
cmp
mov
sbb
popa
dec
sub
loope
movsb
pop
mov
loopne
sbb
inc
std
jmp
into
mov
jnp
ljmp
enter
inc
es
std
pop
into
fildll
lds
aam
mov
subb
cmpb
or
loopne
fidivl
sbb
fistl
popa
aaa
lret
stc
add
pusha
mov
add
pusha
popa
mov
pop
dec
fwait
or
inc
sbb
mov
mov
jl
sub
hlt
xchg
jne
lahf
jo
inc
jne
stos
add
stos
scas
sbb
and
pop
jl
jnp
inc
and
pop
loop
pop
addb
adc
mov
mov
gs
inc
out
mov
pop
dec
test
pop
adc
es
cmpsl
jmp
xor
out
push
dec
cmp
mov
xchg
inc
add
xor
lea
push
adc
pushf
cmp
push
or
and
xchg
lea
mov
roll
inc
loope
or
mov
ds
cmp
cmp
or
and
adcb
sub
call
xor
mov
push
int3
mov
push
fildl
incb
cmpsb
mov
inc
mov
jae
popf
insb
lock
ss
shll
insb
sbb
jno
pop
mov
arpl
inc
xorl
add
cmp
loop
aam
movsl
test
rclb
add
gs
popa
outsb
inc
in
cmp
jmp
sbb
sbb
std
test
inc
in
cmp
fcoml
and
sahf
dec
loopne
or
mov
rclb
aam
std
pushf
in
mov
push
mov
xor
sub
sub
call
daa
lea
cmovg
dec
into
jp
clc
adc
mov
push
shrb
out
and
mov
adc
add
imul
shlb
xor
xchg
xchg
mov
mov
pusha
push
icebp
lahf
jo
test
jle
lock
mov
je
in
xor
cwtl
push
add
jne
adc
and
push
pusha
loope
sub
fistpl
push
xchg
test
outsl
imul
pop
jns
fsubs
and
out
dec
mov
or
dec
jbe
shlb
sbb
mov
lods
int
icebp
pop
inc
mov
aam
cmp
xchg
inc
cwtl
je
lds
stc
sub
xchg
mov
adc
shlb
icebp
outsb
add
inc
dec
sarl
inc
xchg
movsb
lret
dec
mov
xchg
adc
xchg
test
inc
pop
repz
and
xor
icebp
sub
std
fwait
fwait
push
dec
test
out
lahf
mov
jnp
movsb
mov
cli
icebp
ror
push
or
jg
mov
and
lret
ss
or
mov
or
pusha
sub
in
out
ret
pushf
loopne
outsb
xchg
pop
cs
stos
test
nop
mov
popa
sarb
pop
in
iret
xlat
jbe
xchg
shlb
sbb
inc
loope
data16
dec
sub
jmp
pop
push
out
lcall
rolb
cmc
jo
aam
or
pusha
push
out
fimuls
fdivs
cmpsl
cmp
cli
pop
iret
inc
push
xor
in
shl
outsb
add
sbb
inc
mov
fistpl
xchg
cmp
push
mov
inc
push
inc
adc
mov
gs
aad
imul
in
scas
lock
mov
xchg
add
movsb
pop
xchg
jne
lods
int3
pop
mov
pop
jle
cmp
sub
rolb
jecxz
stc
lcall
fsubl
cmp
fs
jnp
les
mov
jne
packuswb
inc
adc
pushf
loopne
push
iret
push
xor
std
sub
xor
ret
mov
cld
push
sub
das
xchg
addr16
cmp
call
adc
loopne
fcmovb
push
inc
shrl
xchg
sub
gs
add
sbb
pusha
mov
mov
stc
insb
ds
stos
lock
mov
cmp
inc
addr16
es
dec
adc
mov
cmc
adc
push
jmp
mov
movsb
or
add
scas
pop
cmc
dec
ss
jl
or
cmp
cmp
cmpsb
pop
jmp
mov
xchg
sub
mov
mov
frstor
and
jb
or
cmp
in
sarb
dec
mov
dec
mov
fwait
pop
add
add
pop
mov
and
add
or
arpl
jle
dec
and
pusha
outsb
loope
xchg
or
ljmp
movsl
push
mov
daa
push
outsb
cmpsb
test
xor
aaa
adc
push
into
and
pop
xlat
jo
adc
inc
out
test
mov
push
mov
xchg
fs
stos
lods
push
call
jp
push
mov
mov
movsb
mov
pop
add
pop
test
xchg
xchg
or
test
mov
neg
push
pop
mov
xlat
sahf
or
loopne
mov
jmp
test
inc
not
hlt
mov
xchg
lahf
loope
in
cmc
idivb
repz
dec
das
stos
pop
dec
loope
repnz
pusha
test
vrsqrtps
outsl
and
add
cmc
nop
xor
push
aas
std
cld
inc
pop
sub
rorb
push
cmp
mov
or
inc
dec
mov
push
ret
repz
sub
iret
push
ffreep
and
or
add
sbb
add
pusha
out
movsb
cld
pop
mov
in
xor
jne
leave
ljmp
leave
mov
outsb
adc
addb
jp
ret
adc
jno
out
imul
jle
sub
imul
lea
mov
hlt
inc
mov
mov
sub
leave
je
loope
adc
mov
mov
mov
movsb
pop
es
jns
loop
cmc
cmpl
xchg
adc
mov
mov
xor
mov
sbbb
dec
ret
sub
push
jbe
jno
sbb
jl,pn
cs
cld
mov
sbb
in
cld
loopne
scas
scas
repz
je,pt
test
mov
sbb
sub
aam
push
or
dec
ss
scas
pop
pop
and
data16
xchg
and
movsb
or
add
orl
loope
test
mov
ss
into
stos
aad
addr16
and
mov
adc
daa
inc
sbb
or
add
add
push
in
cmp
je
in
imul
mov
dec
rcll
out
mov
add
pop
or
inc
mov
mov
sbbb
adc
gs
xor
xor
mov
jnp
arpl
je
and
jns
std
mov
je
pusha
adc
js
push
insb
adcl
ret
push
aas
sub
insl
lret
or
cwtl
test
loopne
mov
gs
outsb
or
mov
cmp
or
sbb
mov
aam
std
xchg
xor
cmpb
sub
sbb
out
jne
pop
or
push
pop
in
xchg
mov
add
mov
clc
and
cmpsb
loope
jle
mov
inc
xor
lret
mov
fsubl
xchg
es
pop
push
iret
mov
xlat
adc
sub
repnz
adc
fstps
mov
push
sbb
and
mov
into
mov
cmp
mov
jmp
dec
in
jne
addl
and
jmp
push
jle
and
mov
mov
xchg
fadd
js
out
push
add
shrl
and
cmp
stos
mov
mov
sbb
adc
popl
out
push
loopew
addr16
stos
xor
inc
in
inc
and
pop
rorb
mov
in
in
cmpsb
setg
or
out
push
sub
jo
cmovge
add
imul
inc
ret
lret
cmp
das
insl
mov
addb
dec
sub
cli
and
push
outsl
test
xor
inc
xor
aad
fiadds
inc
xlat
push
mov
push
cld
mov
fsubl
in
subl
push
mov
ret
fdivl
clc
xchg
cmc
ret
sub
cwtl
hlt
shlb
inc
arpl
loop
mov
loopne
jg
jnp
or
sbb
orb
push
xorl
jmp
mov
xor
inc
jno
mov
movups
ret
ror
cmp
outsl
jmp
jecxz
shl
sub
cmp
mov
jb
or
push
jne
push
shrl
pop
rcl
mov
jg
subl
mov
and
cmp
jbe
cli
out
jns
cmp
addl
mov
imul
lea
ret
jnp
push
decl
sub
pop
pushf
adc
hlt
or
add
mov
adc
iret
mov
out
push
in
xor
pop
icebp
cmp
cmp
push
orb
frstor
frstor
addr16
jp
ja
lods
fadds
jl
iret
cmp
loopne
jne
ljmp
mov
dec
cmp
pop
ljmp
mov
add
loopne
sub
cmp
mov
daa
mov
imul
pushf
dec
pusha
outsl
ss
pop
mov
mov
and
out
pop
inc
mov
rcrb
pop
cmp
xchg
int
mov
lds
xor
dec
adc
fcompl
lea
cld
in
jge
add
mov
addr16
pop
push
imul
stos
jg
mov
lea
sbb
xchg
mov
xor
jg
add
and
sbb
je
test
ret
ds
lret
test
xor
push
mov
jno
pop
aas
or
in
fistpll
add
stc
mov
outsl
mov
mov
mov
iret
gs
shlb
push
inc
cli
scas
push
add
fcoms
int3
int
inc
sub
mov
cli
ret
fildll
cmp
fsub
incb
mov
and
addl
add
inc
insb
and
ret
push
push
andl
andl
and
jbe
movsl
jl
cmp
fwait
dec
pop
dec
jae
lret
pusha
lea
lret
xor
sbb
dec
hlt
test
fwait
lods
cmp
mov
mov
xchg
mov
loopne
xchg
cmp
pop
das
aam
pop
jno
add
shl
xchg
xchg
std
or
pusha
mov
aaa
push
sub
fsubrp
sbb
xor
and
jo
mov
dec
push
xor
mov
repz
xor
and
adc
icebp
lds
sarb
ss
dec
imul
leave
cmpsb
orb
xlat
cmp
fisubl
dec
or
or
mov
jmp
int
push
sahf
dec
daa
aad
xor
sub
mov
mov
cltd
lret
adcl
mov
xchg
jmp
rclb
aas
sub
pop
mov
and
in
xchg
pushf
loopne
dec
xchg
jle
aad
inc
pop
cmp
loopne
xchg
sub
ss
call
cmp
sub
call
scas
testl
cmpsb
popa
imul
mov
or
in
cmp
adc
push
in
nop
lock
testb
xor
push
movsl
mov
mov
sbbb
rcrb
out
lcall
cmp
mov
adc
and
inc
cmp
inc
xlat
loopne
or
stc
sub
inc
dec
cmp
sarl
imul
pop
dec
sbb
pop
rcll
in
mov
and
jns
pop
or
mov
xchg
js
mov
jae
push
push
sub
xchg
data16
jae
ret
loopne
outsl
stos
adc
out
and
adc
cmp
movl
and
adc
pusha
and
lock
push
fadds
test
jmp
fs
jl
cld
mov
movsl
stos
imul
add
mov
jo
sub
in
sbb
xchg
sbb
lods
mull
jl
test
xor
insl
pop
daa
inc
dec
mov
mov
inc
lds
enter
xor
push
fiaddl
jecxz
das
mulb
and
push
push
js
imul
mov
lahf
not
mov
cmp
gs
lds
mov
out
and
in
cwtl
dec
add
movsb
hlt
jp
jge
xchg
std
xchg
xchg
je
inc
mov
cmp
mov
flds
pop
dec
into
scas
addr16
dec
push
push
test
test
pop
or
pop
dec
jo
fsubr
les
cli
cltd
sub
daa
aam
push
cmp
mov
adc
rorb
mov
int
fmull
mov
push
cld
aam
test
shl
out
cmp
xor
sar
xchg
bsr
jbe
pushl
sbb
orb
pop
test
movsb
mov
mov
fadds
dec
jbe
stos
popf
shrd
or
andb
mov
xchg
fbstp
adc
jno
mov
jle
push
mov
add
add
enter
hlt
shrb
cmp
mov
fadds
adc
xchg
fwait
setne
loopne
cli
loop
xchg
packsswb
cmp
hlt
ficompl
enter
dec
mov
cli
jmp
arpl
aas
mov
mov
mov
pusha
xchg
cs
ja
cmp
cmp
cmc
out
scas
xchg
stos
inc
push
faddl
ficoml
jecxz
sub
xchg
mov
or
fdivrl
repz
sahf
movsl
mov
sub
mov
sbb
lds
jg
in
outsl
mov
add
jp
pop
testb
jecxz
xchg
xchg
or
xlat
mov
addr16
sbb
mov
ja
cld
cmpsl
cmp
sbb
out
push
push
insb
loop
hlt
mov
int3
shlb
push
loop
push
push
add
or
sarb
data16
lret
fsubrl
fisubrl
jle
dec
mov
sbbb
xchg
sbb
add
sub
out
mov
sbb
add
add
xor
loop
sbbb
es
jno
cmp
inc
add
mov
mov
aam
test
sbb
mov
scas
outsb
sbb
mov
icebp
inc
loopne
and
dec
jbe
psubd
mov
mov
jmp
jbe
in
mov
fsubs
nop
adc
xor
imul
shlb
cmpsb
outsb
add
pop
addr16
mov
shrb
jmp
mov
and
or
add
sbb
mull
cld
sbb
std
cwtl
xor
and
push
lcall
cmp
jge
jge
cmp
fdivr
push
inc
xchg
ljmp
and
xchg
mov
inc
cli
das
mov
mov
les
mov
sub
adc
mov
out
jo
ret
push
jecxz
push
test
pusha
mov
xor
scas
sbb
stos
sub
add
int3
xor
ljmp
rolb
leave
lock
popa
fnstenv
dec
mov
pop
push
sbb
sub
imul
lret
or
test
xor
jmp
lods
imul
ljmp
dec
ret
shl
sbb
in
or
pop
das
icebp
lea
mov
sbb
mov
loopne
mov
pusha
cmp
movsb
mov
mov
or
mov
imul
cwtl
pusha
mov
cmp
mov
dec
mov
cmp
daa
test
cs
mov
or
pop
in
add
xchg
mov
icebp
dec
ror
pop
or
dec
mov
mov
xorb
popf
mov
mov
inc
decl
lea
mov
loopne
loopne
fxch
jp
ret
loop
mov
and
cld
pusha
pusha
lcall
push
jae
dec
push
cmp
ror
in
mov
inc
mov
and
mov
pop
stos
mov
inc
idivl
leave
lods
push
outsl
xchg
fimuls
sub
inc
or
mov
xor
xchg
and
lods
int
idiv
push
loop
dec
add
dec
push
xchg
cmp
mov
and
outsl
sti
outsb
or
mov
dec
aad
sahf
cwtl
cmp
in
in
inc
cmp
jnp
fucomi
cld
fwait
cmp
in
and
shlb
sub
xchg
mov
sti
stos
cmp
jp
pop
xor
mov
or
and
mov
mov
stos
mov
scas
outsl
mov
arpl
shlb
adc
shlb
lea
pop
lcall
rolb
mov
sub
xchg
sub
loopne
adc
jmp
push
dec
adc
loopne
sbb
pusha
inc
int
or
sub
adc
push
clc
aam
push
rorb
divl
les
cmc
out
orb
adc
cmp
push
and
xchg
jecxz
dec
cmp
sbb
mov
in
mov
sub
pop
jp
addr16
jo
inc
repz
lods
lahf
mov
pop
lods
mov
ljmp
test
fwait
push
je
sub
fisubs
repz
push
inc
mov
daa
cmc
pop
xchg
rorb
sti
add
jnp
xchg
adc
loopne
mov
movsl
pop
add
gs
mov
insb
dec
cmp
and
xchg
jne
test
lret
movsb
adcb
enter
jbe
push
std
out
or
and
cmp
cltd
gs
mov
stos
xor
sti
inc
fiaddl
dec
and
addr16
imul
push
xchg
push
mov
jp
mov
imul
mov
xchg
sbb
xchg
sub
jae
mov
std
call
repnz
and
jecxz
jno
aam
inc
lret
fcmovb
imul
mov
cmp
es
push
mov
adc
mov
pop
jp
mov
jnp
arpl
adc
xor
mov
adc
mov
shlb
lret
mov
cmp
dec
loope
test
pusha
cmp
mov
mov
xchg
gs
adc
loopne
imul
popf
jnp
pop
pusha
insb
jg
and
push
dec
insl
add
mov
jns
inc
or
adc
xchg
dec
add
outsb
mov
pop
cld
stos
sahf
inc
add
mov
fs
popa
and
je
cmpsl
movl
mov
je
stos
dec
push
fwait
imul
mov
dec
inc
in
daa
jecxz
cmp
mov
adc
inc
mov
ret
dec
mov
enter
cmp
xchg
shlb
sub
aas
lock
pop
outsb
inc
call
aas
mov
jae
mov
xchg
scas
sbb
mov
pop
cmpsb
adc
ret
add
addb
loop
fwait
mov
add
sbb
popa
jg
or
jbe
maskmovq
mov
cmp
push
addr16
bound
loopne
and
clc
pop
addr16
mov
xchg
jge
loope
icebp
loop
cmpsb
fsts
mov
sbb
push
addb
add
mov
mov
fbld
lock
cmp
add
in
push
popa
cmpsb
setbe
sbb
mov
stos
push
mov
mov
jbe
mov
dec
mov
adc
mov
push
subb
pushf
sbb
fldenv
pusha
adc
call
xor
pop
push
pop
sahf
xor
xchg
add
lock
and
cmp
cmp
sub
jae
jge
inc
outsl
outsb
adc
push
sub
nop
add
jnp
xchg
push
in
call
popa
enter
test
rorb
fcmovu
cld
sbb
es
shrl
in
mov
ljmp
push
add
mov
idivl
mov
js
cli
xchg
sub
mov
mov
lock
addr16
pusha
cmp
in
mov
in
repnz
pushf
or
les
and
fst
xor
enter
aam
stos
pusha
sub
aas
mov
sbb
push
pusha
pop
lret
push
inc
mov
inc
pop
movsb
xor
and
lock
sbb
sbb
das
xor
cli
insb
sbb
mov
hlt
and
shlb
imul
or
xor
pop
add
leave
jl
jae
mov
das
mov
fwait
lds
in
xchg
int
and
cmp
int
push
clc
nop
clc
pusha
sub
sar
dec
mov
pop
cli
outsl
fmull
mov
shrb
sbb
adc
inc
mov
inc
cmp
ficoms
xchg
rolb
mov
stc
cltd
sbb
adcl
test
enter
pusha
push
push
pop
push
cmp
xor
dec
dec
lahf
push
push
mov
pushf
pusha
popa
fsubl
and
dec
sub
jp
out
out
cli
inc
mov
pop
rorb
add
mov
and
xchg
pop
lret
push
outsb
mov
pusha
test
lea
aam
sub
pop
cmp
sbb
sbb
or
dec
dec
sub
inc
adc
sar
dec
sbb
mov
stos
jo
cltd
aaa
xor
lock
scas
or
adc
cmp
xchg
dec
inc
sub
push
out
push
jbe
pusha
and
test
xchg
pop
scas
push
inc
in
lods
into
scas
xchg
movsl
call
xor
jnp
mov
stos
fsubrl
jmp
dec
xor
loop
hlt
addr16
mov
icebp
and
subb
je
pop
jmp
and
push
jno
clc
loopne
jo
cmp
sbb
dec
mov
xlat
test
into
popf
add
mov
rclb
dec
lods
lods
sub
dec
mov
gs
das
lret
sahf
je
ret
lea
fdivl
fsts
out
addr16
xchg
pop
jle
stc
mov
sti
sbb
mov
xlat
je
jge
lcall
outsl
sub
jno
es
test
rcrl
sub
imul
and
int3
push
int
idivl
xchg
cmp
jl
outsb
cmpsb
insb
or
loopne
dec
mov
out
or
shlb
stc
in
inc
loop
and
shll
outsl
je
inc
clc
lds
stc
scas
das
ss
xor
lret
roll
cltd
lock
es
jp
sahf
dec
cmpsb
jle
mov
nop
loopne
fbld
sti
arpl
adc
or
and
cmc
in
xchg
test
cmpsb
imul
dec
xchg
pop
ror
inc
dec
and
push
loop
cmpl
xchg
nop
add
mov
xor
arpl
push
mov
pop
test
adcb
inc
add
sbb
adc
test
inc
add
lock
and
jle
movsl
or
movsl
push
fimull
xor
out
xor
mov
movsb
mov
cltd
xchg
int3
and
jmp
les
jmp
jle
mov
bound
jmp
pop
loopne
xchg
sbb
and
xchg
lds
jne
lret
cwtl
mov
das
sub
xor
mov
ret
scas
out
sub
sbb
stc
lods
test
fistl
popf
cltd
mov
mov
enter
stos
inc
pop
fwait
adc
push
rclb
cld
sti
mov
adc
int
imul
pusha
add
and
mov
xor
ds
mov
mov
cltd
pop
cmpsb
insb
test
mov
push
add
sub
pop
cltd
mov
lahf
adcb
fwait
sbb
shll
pop
addr16
mov
iret
popf
rorl
data16
sahf
mov
subl
cli
test
sbb
pusha
shl
ss
loopne
cld
sbb
jle
add
dec
cmpsl
xor
cmp
or
and
lods
data16
cli
les
jg
stc
in
pusha
out
daa
xor
ss
divl
mov
or
add
xor
jns
imul
xor
mov
dec
icebp
aaa
xchg
lahf
movsl
sub
or
adc
pusha
jle
inc
out
xchg
hlt
and
and
pop
movl
sbb
mov
cs
xor
mov
inc
cmp
enter
xchg
mov
xchg
sarb
mov
adc
rcrl
ds
repnz
pop
fwait
daa
stos
sub
xchg
js
stc
fiaddl
sbb
std
es
inc
sub
faddl
xchg
add
rcll
shlb
push
addb
xor
and
mov
je
mov
mov
or
pop
push
mov
outsb
cli
pop
std
sub
and
js
mov
sbb
movb
inc
push
add
add
movsl
or
int
and
in
adcb
cmpsl
add
shlb
adc
loopne
or
inc
gs
xchg
jg
lahf
call
cmpb
test
xor
movsb
xchg
das
add
dec
out
stos
push
push
xchg
dec
mov
fcompl
rorb
insb
mov
std
sarl
pop
and
in
jo
adc
adcb
bound
inc
xor
fwait
mov
and
lcall
dec
ja
xor
and
sbb
and
adc
enter
je
shlb
mov
lret
mov
lahf
addr16
jb
inc
adc
divb
mov
push
pusha
mov
pushf
addb
add
aas
push
mov
fdivrp
sbb
pop
mov
addr16
fwait
adc
aad
and
test
dec
mov
cmc
imul
mov
shll
xchg
cmp
imul
cltd
clc
dec
not
loope
and
mov
adcb
mov
mov
loopne
daa
mov
sarb
pusha
add
inc
cmpsb
cld
inc
cmp
jp
cwtl
aam
out
adc
push
push
and
push
lods
js
jmp
inc
std
push
and
test
fwait
mov
insb
and
pop
movb
cwtl
and
leave
roll
mov
xadd
fcoms
lahf
inc
mov
sub
mov
aam
aas
imul
iret
mov
int
push
sahf
std
arpl
outsb
pop
xor
clc
cld
outsb
add
test
pushf
cmpb
cmp
sub
jno
mov
cli
popa
pop
or
inc
mov
lcall
sub
mov
cmp
loopne
ljmp
daa
leave
cmp
mov
aaa
adc
pop
dec
mov
mov
adc
mov
pop
sub
push
out
sub
pop
scas
nop
rolb
pusha
adc
lret
ret
and
pop
rorb
stc
in
push
cld
mov
inc
inc
lods
xchg
int3
xor
sub
fisubrs
sub
or
imul
outsl
out
jmp
or
cmc
cltd
mov
cli
xchg
faddl
aaa
scas
or
inc
ret
push
lret
sub
add
mov
fxch
jmp
fiadds
dec
push
jp
je
fs
jns
pop
cwtl
add
test
cmp
out
mov
xor
sub
and
in
inc
xor
push
insb
dec
adc
lds
sub
xlat
adc
addb
test
inc
popf
int3
rorb
xlat
sti
adc
jns
xchg
ror
jge
pop
ljmp
sahf
gs
mov
insl
rclb
sbb
sarb
inc
cmp
nop
pop
pusha
rcl
pop
lods
in
repnz
dec
sbb
and
cwtl
les
xor
loopne
mov
push
repnz
rolb
adc
mov
mov
xchg
lahf
rorl
les
mov
add
push
ficomps
enter
movl
fucomp
mov
or
pop
out
sbb
in
xchg
pop
jmp
insb
insb
lret
jno
pop
cli
loop
clc
hlt
insl
rclb
fisubrs
adc
cmc
sbbl
leave
aas
mov
setnp
insb
add
xor
mov
hlt
xchg
rol
jne
ss
aam
push
push
in
mov
jns
test
inc
mov
ss
mov
or
mov
cmp
and
lea
and
inc
xor
jbe
fstp
push
xor
ret
ret
xchg
stc
sbb
and
loop
or
rcrl
pusha
pusha
xchg
imul
rcr
cmp
js
mov
fwait
mov
test
push
mov
push
lds
test
shl
fcmove
mov
ja
lods
and
dec
inc
cmp
cmpsb
push
adc
ds
lods
loop
mov
rcr
out
adc
stos
dec
jb
mov
into
mov
lods
mov
cmpsl
out
je
fists
and
xor
repz
or
call
jbe
out
xor
in
lret
xlat
jmp
sbb
mov
and
mov
jne
and
add
mov
push
add
nop
and
mov
xchg
sti
push
fninit
pop
mov
mov
outsb
int
inc
pop
inc
adc
add
and
mov
push
leave
movsb
dec
adc
pusha
fistpll
ljmp
lea
add
sub
push
test
sub
inc
and
lea
mov
push
loopne
arpl
stos
aad
dec
sub
or
push
push
xor
ret
test
mov
cmpl
sub
jbe
and
or
push
loope
scas
jno
inc
inc
iret
aaa
test
dec
aaa
pop
rcl
int
popf
int3
cmpsb
ss
ds
mov
xchg
nop
in
mov
or
lods
mov
fnstenv
mov
pop
or
pusha
mov
sub
mov
jge
or
jne
repz
mov
pop
and
pop
stos
mov
push
loopne
hlt
sub
popa
leave
fidivl
imul
loope
int3
mov
fwait
sbb
insb
inc
pop
mov
ja
clc
sbb
repz
subb
adcb
xor
push
jnp
lret
jmp
lods
mov
dec
pop
pop
repnz
mov
enter
pop
push
push
addr16
in
repnz
lods
in
mov
leave
sbb
ret
mov
icebp
je
jp
mov
orb
xor
stos
mov
nop
test
pop
ret
or
xor
outsb
or
or
add
lret
mov
push
push
aas
out
test
add
sbb
popf
dec
movsl
jecxz
pop
mov
dec
mov
rorb
lods
arpl
rolb
mov
mov
add
jl
xor
cmpsb
jns
notb
push
scas
adc
fwait
xchg
js
xchg
pop
sbb
add
subb
mov
sub
outsb
jle
xor
mov
cmp
inc
mov
pushf
mov
push
les
outsb
je
jb
mov
add
or
sbb
sub
je
jns
ret
fldenv
pushf
sbb
cmpsl
mov
fcomps
mov
and
xor
cmp
or
das
js
jnp
sti
loopne
out
and
lret
sub
lahf
cmpsl
mov
neg
stos
xor
rorb
push
push
negb
test
pusha
fcomps
loopne
sbb
jns
and
pushl
push
sub
and
mov
in
mov
and
insl
adc
int3
and
xchg
mov
cmc
adc
pushf
mov
popf
xlat
push
xchg
mov
test
sbb
test
mov
fs
dec
sub
inc
idivb
inc
stos
repz
into
aad
and
in
mov
mov
test
dec
xchg
push
mov
sbb
or
shlb
push
xchg
fsubs
add
fstps
iret
push
push
enter
into
aad
shll
addb
push
jbe
cwtl
mov
scas
pop
loop
dec
or
cwtl
lock
icebp
stos
sbb
fadds
inc
push
test
xor
dec
sar
imul
mov
inc
cmp
into
pop
push
mov
push
nop
add
push
in
aas
or
pop
add
inc
or
pusha
orb
shlb
inc
cli
xchg
lahf
xchg
inc
rcl
mov
test
in
pop
je
mov
lods
cli
int3
or
or
andb
mov
mov
bound
dec
inc
loop
sub
into
pop
xor
adcb
fdivrl
loopne
cmpsl
pushf
mov
pop
pop
add
mov
mov
mov
rcr
sub
and
lods
sub
bound
sbb
mov
push
outsb
insb
cmpb
add
push
jnp
orb
and
mov
clc
and
adc
push
sbb
xor
cmpsl
out
enter
jbe
inc
cmp
mov
jg
jl
mov
stc
mov
testb
add
mov
std
fistpll
adc
nop
cmp
jne
mov
sub
stos
xchg
repz
cmp
stc
stos
push
push
mov
xchg
xorb
cmp
mov
or
pop
push
cmp
jbe
or
enter
and
daa
fisubrl
in
aam
stos
xor
add
mulb
icebp
movsb
xchg
in
xchg
aad
and
inc
lret
adcl
jg
scas
lea
and
ret
repnz
xor
jle
cmp
cmpsl
out
add
jno
cmpsl
and
test
fxch
sbb
and
lock
or
dec
xchg
dec
cmp
xsave
je
sub
dec
xchg
icebp
pop
add
cmp
pop
lods
sbb
mov
negb
sub
cmc
fmulp
enter
xchg
xor
rolb
movsb
and
orb
or
in
out
mov
movsl
push
out
sbb
adc
loopne
inc
sbb
add
push
mov
cmp
and
pop
decl
inc
cmp
lea
movsl
adc
pusha
rol
jg
in
repz
pop
test
out
cwtl
test
pop
pop
mov
aaa
stos
or
push
movl
insb
es
scas
test
rolb
dec
lahf
lods
jle
imul
xor
sti
icebp
push
or
inc
mov
sbb
xor
daa
inc
pop
andb
sub
rcl
mov
sti
fdiv
outsl
fisttpll
cmp
sub
call
lds
rclb
mov
rcrl
lods
movsb
mov
xor
or
fs
push
jecxz
pop
or
std
mov
dec
add
popf
aas
aaa
xchg
cmp
bound
lods
inc
sarl
subb
sbb
mov
jl
or
mov
dec
sub
pusha
xchg
cmp
mov
adc
push
and
push
movsl
mov
cmp
cmp
and
nop
loopne
pusha
aas
fnstsw
add
aad
outsl
fistl
in
mov
in
addl
pop
pop
popa
cwtl
sbb
and
add
insb
dec
stc
or
scas
lds
das
cmp
mov
sub
mov
and
mov
dec
subb
cmp
and
jae
mov
lret
pop
push
leave
sub
mov
test
sub
sbb
sbb
jmp
das
adc
test
pushf
hlt
add
mov
sub
stc
xlat
add
adc
or
xor
or
and
lock
or
addr16
out
pop
or
push
insb
iret
xor
in
adc
add
inc
test
pusha
fidivs
lods
mov
in
cs
sbb
or
mov
rcrl
mov
int
mov
mov
mov
popf
cmp
sti
mov
push
xchg
popa
inc
mov
movsb
xor
ss
sbb
add
pop
ret
cmp
push
and
lahf
pop
sub
cmpsl
testb
cmpsl
fwait
cli
loopne
lcall
xchg
inc
shlb
cwtl
insb
loopne
pop
rclb
lea
lock
and
jo
mov
fs
mov
add
ljmp
aaa
xchg
outsl
out
mov
pop
mov
jbe
sbb
pushf
mov
jb
mov
mov
popa
mov
cmp
aad
mov
hlt
pusha
pop
xor
xchg
inc
sub
jb
mov
in
test
imul
push
lahf
cs
xchg
jnp
mov
aam
xchg
adcb
add
orb
mov
mov
push
inc
gs
adc
add
aam
insb
ret
arpl
loopne
jmp
sbb
mov
mov
mov
dec
sbb
cmpl
outsb
ljmp
stos
sbb
adc
inc
addr16
movsb
and
lock
pop
fsubl
jl
sub
ja
push
inc
fcoml
inc
shr
mov
and
ja
cwtl
sub
cld
ret
daa
jno
test
jo
sbb
mov
or
loopne
dec
xor
sti
xchg
fcmovne
jg
shl
loope
jae
xor
sub
mov
test
imul
xor
and
push
sub
inc
nop
and
and
lods
xchg
movsl
std
xchg
shrb
imul
das
xchg
sar
sahf
sbb
mov
lods
shlb
adc
add
ret
and
cmc
sti
xchg
xor
and
push
subl
pop
and
and
inc
pop
xchg
pop
pop
mov
jmp
jns
dec
add
pusha
mov
cmpsl
arpl
inc
shlb
inc
lods
fiaddl
ja
cmp
xchg
mov
pop
jb
loope
jp
imul
sub
push
rorl
repz
inc
repnz
jb
pop
mov
fnstsw
sbb
jl
xchg
jbe
xor
fidivrl
jbe
jbe
cmpsl
sti
jg
mov
imul
xchg
or
dec
push
scas
stos
pop
loope
rcr
popf
and
mov
sub
cltd
inc
mov
mov
or
and
cmpsb
dec
rcll
dec
scas
shufps
lock
les
dec
cmpsl
pop
xor
push
adc
scas
pop
push
dec
mov
mov
clc
adc
jp
mov
mov
xor
jmp
push
add
mov
js
bnd
push
pushf
les
mov
jne
mov
or
rclb
or
mov
bound
push
adc
add
out
fldenv
or
push
mov
cli
dec
pop
jl
lea
arpl
push
imull
or
sahf
cld
dec
mov
xchg
notb
xor
call
mov
dec
fcmovbe
stos
and
iret
out
scas
insl
ja
xchg
dec
dec
add
jnp
outsw
ret
sbb
add
xor
in
repz
jp
pop
mov
or
ror
lods
cmpb
add
clc
nop
add
fidivl
movsb
mov
dec
jb
clc
jmp
bound
push
test
lret
popf
push
shll
enter
mov
in
stos
fnsave
sahf
jg
sub
xor
cmpsl
sbb
pusha
repz
sbbb
jbe
lcall
or
pop
cld
lahf
push
mov
adc
sahf
ret
xchg
add
xor
repnz
jnp
int
mov
popf
nop
push
inc
cmpsl
call
data16
add
mov
fidivl
pushf
mov
in
repz
lds
dec
adc
inc
daa
lret
mov
pop
clc
xchg
xor
call
nop
andb
ret
push
leave
lret
cmp
aad
popf
lock
jne
or
scas
pop
cld
lret
hlt
mov
ret
loopne
jb
cs
inc
xchg
in
mov
hlt
cli
fs
pop
lods
sbb
and
mov
sti
jnp
sub
adc
sub
jo
test
incb
xor
xor
push
out
mov
pop
out
add
stc
mov
add
sub
inc
outsb
ss
rcr
jmp
pusha
and
and
xchg
add
mov
std
in
lret
gs
xchg
out
add
mov
int
push
loopne
mull
inc
call
add
xor
andb
filds
xor
mov
and
dec
jnp
mov
test
rolb
repz
nop
fsubs
cld
lret
popf
jbe
cltd
enter
dec
lds
rol
xchg
lods
outsb
sbb
data16
lea
jae
push
lret
add
add
shlb
ja
outsl
jo
lret
jmp
mov
jne
enter
stc
xchg
sub
ret
pusha
xor
add
push
xor
cltd
inc
enter
std
push
jb
and
and
sbb
pop
jg
out
mov
pop
dec
sbb
or
les
pop
movsl
sbb
daa
sbb
adcb
popf
inc
add
arpl
cmp
clc
mov
jae
insl
pop
cli
sub
xchg
add
and
mov
leave
ds
xor
je
adc
pop
add
dec
cltd
jg
xor
pop
call
xchg
ss
aam
jb
mov
inc
in
shl
mov
mov
xchg
push
adc
xchg
int3
loopne
pusha
sub
clc
pushf
adc
add
xor
jp
addl
shll
scas
push
inc
push
push
addl
xor
cmp
pusha
ror
add
lret
mov
sbbl
push
lahf
and
and
mov
inc
int3
mov
outsl
xchg
pusha
mov
jmp
xchg
xor
sbb
xchg
and
mov
sub
aad
add
stos
jp
xor
push
inc
popa
jbe
rorb
out
mov
arpl
and
mov
jne
outsl
pop
add
inc
add
pusha
inc
dec
xchg
xchg
jae,pn
mov
nop
push
inc
mov
push
dec
leave
lods
jge
mov
mov
or
movsb
dec
lcall
out
add
mov
rorl
jb
je
clc
je
mov
push
inc
mov
push
gs
xor
das
aas
dec
das
push
or
and
lcall
cld
pusha
jecxz
sbb
das
outsl
add
pusha
cmp
dec
xor
loopne
pop
jnp
pusha
and
sti
push
call
mov
xchg
push
xchg
pop
int3
out
xchg
add
cmp
inc
fldt
jecxz
mov
and
xor
cwtl
jo
mov
cmp
stos
inc
push
test
jno
test
std
jmp
nop
and
adc
push
push
das
mov
and
xor
ret
adc
sbb
sub
imull
inc
pusha
data16
cmp
inc
and
sbb
and
clc
or
imul
cltd
rolb
dec
out
or
mov
inc
sbbb
dec
sarb
adc
mov
cli
loop
xchg
or
sti
mov
out
shr
fwait
cmp
mov
lods
add
sbb
inc
aaa
xor
push
fwait
cs
nop
lock
aam
push
mov
mov
or
mov
cmc
pop
popa
push
nop
mov
dec
popa
stos
cmpsb
xor
loop
int3
dec
loopne
dec
mov
repnz
push
inc
popa
rol
out
mov
inc
lcall
push
pop
fildl
pusha
aaa
sub
cmpsb
decl
mov
les
scas
imul
xchg
push
orb
mov
sti
jg
dec
xor
jp
jg
std
cmp
cmp
lahf
add
add
jl
inc
dec
ja
movsl
sbb
pop
out
lock
popf
inc
mov
push
and
pop
or
jecxz
push
dec
loopne
xor
or
adc
and
inc
pop
sub
int
dec
cmp
add
je
in
pusha
push
gs
je
jbe
mov
mov
pusha
xor
scas
icebp
xor
cli
mov
les
jg
int3
add
sub
mov
nopl
push
int
xchg
cld
mov
inc
sub
jnp
xchg
call
in
sahf
xchg
subl
push
cltd
frstor
ja
jae
lods
arpl
sbb
and
lahf
fsubl
jl
sbb
mov
fdivl
psubusw
mov
sub
sbb
add
and
loope
in
popf
inc
in
mov
cltd
mov
sbb
add
pop
mov
nop
or
jae
scas
mov
sub
or
aas
push
jle
aad
jo
mov
stos
sub
sub
jge
shll
jne
mov
mov
sbb
mov
cli
and
push
add
inc
pop
sbb
fsts
and
pusha
das
dec
push
nop
shlb
movsl
repnz
dec
sahf
and
dec
cltd
mov
fistl
ffreep
sub
lret
mov
iret
push
ljmp
and
ljmp
mov
lods
movsb
dec
setbe
faddl
pop
clc
push
lock
push
xor
sbb
inc
cltd
push
ret
dec
lea
cmpsl
add
push
das
popa
add
cmpsb
popa
mov
cs
xor
push
push
xlat
inc
in
mov
mov
sub
popf
clc
push
sub
loopne
mov
sti
cmp
jl
jnp
mov
and
lret
insb
sbb
cmp
rolb
add
jmp
jp
shlb
ljmp
dec
inc
or
lret
nop
and
xchg
in
mov
cmpsl
cld
jecxz
add
xor
addr16
mov
jp
je
mov
sbb
test
sbbb
arpl
outsl
xlat
xor
xchg
dec
fiaddl
ds
mov
inc
bound
mov
jae
pop
jnp
xor
loope
cmp
mov
popa
fs
js
push
sahf
cmp
iret
jbe
dec
add
push
test
jge
jmp
adc
mov
cmp
mov
push
xchg
in
notb
cmp
push
adc
add
ja
dec
jno
mov
outsb
jno
out
pop
xor
lock
jl
popf
xor
out
shll
out
xchg
out
sbb
in
testl
sub
test
push
mov
insl
xchg
je
adc
push
pop
imul
or
outsl
rcrl
and
mov
jle
ds
cmpsb
iret
sub
sbb
mov
mov
cmp
pusha
push
out
mov
clc
push
xorl
xchg
or
jb
arpl
jne
mov
jne
in
les
push
out
cmp
lcall
dec
out
aad
and
test
mov
ljmp
jle
iret
in
in
and
cltd
push
fistpll
xor
stos
sbb
negl
mov
xchg
enter
cltd
push
mov
push
lret
xchg
jbe
frstor
push
out
ljmp
mov
lods
xorb
cld
or
dec
cmp
fsubr
adc
call
mov
rorl
or
pusha
in
lret
js
jge
repz
push
or
rcll
pop
fsubp
jno
jb
testl
dec
mov
int
into
mov
shlb
test
popa
mov
lds
sub
fs
imul
mov
sub
test
add
mov
hlt
inc
xor
out
sarb
mov
cltd
mov
or
rclb
add
loopne
in
dec
push
mov
dec
push
daa
mov
jns
xor
jns
iret
push
inc
nop
sbb
bswap
ret
iret
add
pusha
mov
mov
fs
clc
cmpb
mov
xchg
inc
push
or
add
jmp
xchg
and
and
cmp
jle
scas
rcr
dec
mov
ficoms
xchg
jne
pushf
fadds
orl
sub
sbb
dec
mov
mov
and
fidivl
stos
in
stc
clc
icebp
pop
mov
cltd
ss
je
mov
xchg
jnp
xor
xchg
ret
sbb
inc
cmp
loopne
je
sub
andb
or
inc
cli
clc
mov
pusha
mov
cltd
fcoms
xchg
mov
mov
mov
movsl
in
mov
sbb
and
in
lock
xchg
adc
pop
rcll
xchg
das
lret
and
mov
fadds
push
loope
xor
dec
andb
xor
pop
fists
pushf
xor
shrb
lcall
shlb
addr16
out
mov
xchg
jmp
fsubl
out
jg
xchg
lcall
and
mov
add
pop
imul
jge
jl
iret
out
push
and
in
in
ss
decb
jle
stos
scas
loop
push
std
cwtl
or
loopne
cmp
push
cwtl
jo
ret
add
dec
pusha
mov
aam
add
jp
lods
add
or
stos
sub
stos
daa
cs
and
and
roll
pop
and
lret
and
lret
pop
mov
addb
cmp
arpl
inc
ret
movsb
lret
cmc
mov
daa
jge
mov
imul
aad
sub
mov
js
xor
call
hlt
nop
adc
mov
icebp
cmpsb
xchg
insl
lds
xor
lods
add
cmp
dec
ljmp
jle
add
and
mov
mov
jmp
push
sbb
mov
imul
pop
fdivrs
rcll
mov
xchg
or
rcrb
mov
lahf
or
mov
pusha
sbb
cmp
xchg
lret
jg
dec
lcall
adc
and
loopne
xor
or
nop
test
xchg
adc
mov
pop
not
fsub
push
test
rcrl
dec
hlt
cmpsb
inc
scas
fisttps
inc
mov
cmc
mov
mov
sub
xor
jmp
cmpsl
xchg
arpl
cld
and
or
and
mov
popf
mov
mov
inc
outsb
cmp
clc
and
sahf
lds
and
cmpsl
pop
inc
inc
inc
mov
jmp
mov
mov
ss
push
pop
push
pop
push
test
cmc
or
movl
scas
jb
add
inc
inc
push
xchg
mov
sarb
icebp
dec
mov
inc
lret
jb
cmp
mov
or
push
insl
gs
out
lret
push
pminub
xchg
mov
nop
sbb
pop
mov
xchg
inc
or
sbb
xor
jo
shr
aam
add
rorb
loopne
push
pop
cs
xor
mov
gs
pop
xor
xorb
or
and
jb
mov
adc
sub
push
jnp
jge
inc
xor
rolb
fstpt
mov
dec
sub
dec
or
inc
cmpl
dec
jne
aam
subl
imul
and
xchg
test
nop
rolb
sarb
fadds
mov
scas
and
inc
adc
fisubrl
pop
mov
not
mov
xchg
and
in
pushf
inc
inc
mov
mov
xor
je
fstpt
xor
cmpsb
out
cmp
cmp
jbe
int
cmc
xchg
insb
loopne
and
inc
dec
testl
mov
fsubl
dec
or
mov
std
sub
icebp
push
into
mov
inc
fwait
jmp
push
inc
popf
push
and
xor
pushf
clc
mov
inc
mov
jle
cwtl
mov
insl
sub
pop
ret
int3
cmc
ret
add
inc
test
pop
test
jo
and
jmp
popa
movsb
ss
insb
outsb
popf
cmp
fiadds
push
mov
add
pop
addr16
enter
js
mov
adc
pusha
jne
popf
imul
push
fcoml
ret
xchg
xor
push
add
cmp
test
mov
push
ret
outsl
les
sub
mov
cs
sahf
adc
pop
jmp
fisttpl
push
cltd
das
popf
out
loopne
mov
xor
movsb
lret
test
nop
orb
inc
or
enter
sbb
loopne
adc
pop
dec
repz
dec
xor
jecxz
mov
add
cmp
imul
ljmp
push
out
enter
out
hlt
sbbb
add
pusha
ret
arpl
in
hlt
fwait
in
std
pushf
loopne
outsl
or
inc
or
movsb
in
mov
cmpsl
push
dec
lret
repnz
insb
shrb
je
cmp
faddl
pop
scas
fwait
icebp
out
xchg
faddl
aad
aam
aad
mov
pusha
mov
or
inc
pusha
cmc
sub
mov
xchg
fsub
mov
mov
sub
scas
pop
pop
mov
ljmp
inc
lods
push
rcr
xor
es
sbb
xor
mov
push
fcmovnu
outsl
jne
cmp
mov
xor
std
or
les
cmp
fcomps
push
cmp
xor
pop
inc
mov
jecxz
dec
or
aad
loop
inc
dec
mov
les
sub
xchg
imul
imul
push
jo
cmp
or
jo
setnp
push
pushf
fs
neg
fnsave
movsl
arpl
int3
lock
pusha
fiaddl
jge
or
jnp
inc
movsb
aas
xor
loope
cmp
dec
xchg
adc
mov
jnp
sub
mov
rcll
jmp
add
push
in
sub
mov
rolb
jecxz
push
sti
cwtl
je
dec
mov
push
adc
xchg
das
repz
cwtl
loopne
push
ljmp
ljmp
add
loopne
call
sbb
aas
mov
lcall
pop
lret
notl
xchg
call
shlb
add
mov
ljmp
dec
pop
mov
pop
test
jno
sub
add
out
cmp
mov
aaa
rclb
mov
adc
or
insb
or
aam
pusha
sub
dec
test
negl
jle
mov
add
and
mov
subl
stos
cwtl
fadds
gs
push
pusha
fwait
mov
test
imul
lods
adc
adc
sti
lods
inc
das
push
stc
movmskps
cmpb
sub
cmp
lods
test
imul
xchg
outsb
gs
xchg
testl
shlb
xor
xchg
adcb
or
inc
xchg
xchg
mov
mov
jo
cmpsb
and
and
push
inc
inc
sub
push
sbb
mov
and
add
mov
in
pop
lods
or
fisttpl
sub
jmp
icebp
sbb
pusha
lock
lret
or
sar
adcl
mov
cmp
jae
or
subb
cmpsb
int3
jo
jecxz
pop
test
shr
sbb
ret
fdivrl
dec
test
cmc
outsb
push
and
xor
rclb
cld
sbb
xchg
aas
dec
mov
mov
testb
enter
adc
sbb
test
andb
xchg
fadds
jae
add
movl
jle
imul
xor
push
jmp
push
in
xor
fs
sahf
add
jnp
daa
cmpsl
add
ljmp
jl
lds
pop
mov
stos
mov
mov
dec
fdivl
mov
cmp
mov
cmpsl
mov
sbbb
cld
inc
lahf
in
adc
xchg
lock
dec
pop
lods
sti
lahf
sub
lods
push
sbb
fsub
ss
shrb
inc
out
ljmp
and
arpl
jo
jae
hlt
stc
fs
aaa
fcmovne
out
in
add
cmp
add
fistpl
out
xor
or
cmp
fisubl
out
daa
mov
mov
mov
or
int3
xchg
cmp
push
jo
sub
sbb
pop
loope
les
sub
popa
out
mov
pop
sbb
mov
enter
dec
arpl
push
mov
rcrb
enter
mov
movsb
adc
pop
and
fwait
test
test
jmp
mov
bound
mov
add
add
mov
add
pusha
loop
aas
imul
enter
cld
sub
outsl
xchg
js
decl
jg
mov
sub
add
ret
rolb
aas
mov
and
test
cmp
es
inc
jns
and
faddl
mov
dec
adcb
pusha
gs
jp
xchg
ja
pusha
mov
je
cmp
loopne
call
jecxz
dec
add
cmpsb
jo
push
mov
inc
out
mov
jmp
cmp
imul
and
inc
sahf
xor
movb
inc
in
mov
fs
rolb
pop
shl
pop
lea
mov
sbb
addr16
repnz
jo
or
inc
mov
sahf
fdivl
cmp
popf
adc
and
push
inc
js
sub
mulb
stos
mov
adc
mov
js
push
cmc
xchg
les
sarb
fadds
inc
xor
fs
jmp
push
push
inc
xchg
popa
int
and
xor
adc
pusha
inc
sti
aad
es
gs
in
inc
sahf
mov
add
jp
icebp
cli
movsb
repz
loop
out
in
push
leave
fsubrs
scas
xor
lods
push
hlt
cld
mov
rorl
scas
movsl
outsb
mov
mov
pop
cmc
fsts
lock
jne
mov
mov
dec
popa
cld
ljmp
and
jae
mov
sub
dec
mov
sub
enter
jne
test
sbb
subb
cmpsb
in
pop
lret
mov
mov
insb
xchg
shlb
mov
add
std
icebp
in
and
pop
insb
cmpsb
outsb
mov
movsb
pop
jmp
lret
icebp
push
lods
jecxz
add
cmpsb
adc
mov
mov
aas
mov
imul
daa
xchg
imul
das
pop
sub
lret
mov
test
bound
xor
fnstenv
pusha
inc
out
cmp
mov
in
mov
out
adc
inc
mov
rcrl
rclb
add
push
arpl
je
push
pop
pusha
icebp
push
jb
rcrb
inc
aad
sbb
jle
jno
ljmp
mov
aaa
mov
sbb
or
add
shll
push
stos
xor
mov
dec
pop
push
cmp
rcrl
lcall
mov
mov
mov
roll
cmp
jnp
int
mov
test
test
rolb
mov
jo
test
pop
mov
aas
xor
push
nop
faddl
stos
in
lret
cmc
mov
mov
aam
rclb
or
test
ficoml
rcll
dec
loopne
bnd
jo
mov
ljmp
sub
out
clc
in
js
enter
jb
ret
pusha
shlb
xor
push
shrb
mov
add
loopne
aam
sahf
sti
sbb
xchg
das
and
push
xchg
xor
pop
mov
scas
mov
clc
and
mov
popf
or
pop
push
sbb
mov
cmp
push
fidivs
fsubr
push
mov
pop
xor
lret
push
mov
xchg
jecxz
xor
jle
mov
lods
lcall
push
rclb
push
push
push
cs
test
ret
jl
mov
mov
iret
or
add
or
xor
jo
aad
sar
push
sub
inc
jns
add
fstl
addr16
sub
pop
adc
dec
in
cmp
push
arpl
adc
adc
aas
push
mov
pop
xor
lret
fsubp
pop
testl
js
jle
and
sub
lret
popl
add
loopne
insb
jns
pop
aad
add
pop
into
bound
pop
iret
jmp
ret
pusha
fists
xor
push
push
pusha
pop
xchg
xchg
fnstcw
repnz
push
loop
arpl
xchg
ds
stc
call
inc
lcall
xor
jmp
push
hlt
inc
pop
sbbl
stos
cwtl
shlb
repnz
pusha
rol
in
jle
and
pop
call
aam
adc
sbbb
fildl
nop
hlt
loopne
cmpsb
mov
push
lcall
pushf
rclb
add
sub
out
xor
ja
or
sub
xor
jnp
stos
jecxz
sbb
jl
arpl
pushf
mov
inc
in
pop
enter
decb
sub
push
xchg
xchg
shlb
hlt
adc
dec
mov
mov
push
pop
and
and
pop
push
fistps
rorb
fs
sub
test
add
imul
adc
and
aam
ficoms
fwait
pop
arpl
xor
out
icebp
popa
orb
jecxz
les
push
dec
pop
in
lock
movsb
sbb
insl
adc
mov
aaa
movsb
fnsave
sarb
shrb
bound
clc
lret
cmp
mov
mov
dec
sub
sbb
jo
or
add
cmp
xchg
sub
or
xorb
pop
aam
or
add
sub
in
arpl
cmp
in
sbb
sbbb
nop
hlt
pusha
xor
jge
and
jg
addr16
mov
xchg
mov
mov
add
out
sub
shll
mov
cltd
and
lods
adc
ja
mov
jmp
inc
push
jae
enter
je
dec
mov
add
or
and
mov
nop
cmp
adc
stc
stc
cli
cmp
mov
dec
leave
int3
sbb
inc
sub
test
mov
sub
notl
mov
fs
cmpsl
adc
loopne
push
je
sub
and
xchg
jl
sub
ret
int3
pop
cmp
sahf
xchg
das
jnp
cld
aam
hlt
and
lret
fstl
movsb
lcall
mov
cmp
ljmp
iret
push
fmul
inc
xchg
push
push
xchg
pushf
inc
fisttpll
inc
sub
mov
add
test
mov
pusha
andl
push
fdivr
mov
push
aas
push
jge
nop
nop
shlb
js
add
dec
dec
pop
mov
pusha
sub
shr
sbb
mov
mov
jecxz
fs
lcall
and
rolb
cld
out
es
ja
sar
mov
pop
popa
pop
cmpsb
test
and
inc
or
adc
mov
in
pop
aam
inc
cmc
xchg
sti
daa
out
clc
jo
insl
mov
jns
lods
mov
dec
cmpsb
mov
mov
and
jb
clc
jge
cmp
xor
pusha
and
out
out
lock
xor
jb
pop
pop
sbb
fmulp
cmc
or
mov
add
stc
stc
int3
jb
in
and
and
lds
loopne
popf
add
and
dec
mov
sti
mov
push
push
es
and
enter
ljmp
adc
inc
sbb
pusha
into
xchg
loope
loopne
subl
and
sbb
pop
push
inc
and
pushf
les
cmp
mov
aad
add
aaa
pop
or
and
jmp
andb
enter
inc
sbb
sub
test
sub
xchg
push
xchg
jnp
fildll
xor
mov
adc
and
push
adc
and
push
out
sahf
dec
push
xchg
sub
mov
arpl
add
cmp
les
jecxz
dec
orb
sub
sub
daa
sub
shrl
popa
dec
jmp
sarb
fs
fdivrs
cmp
lret
sbb
shrb
mov
int3
mov
xor
outsb
sbb
in
jne
pop
mov
daa
fisttps
xchg
rolb
aaa
add
loopne
and
jae
pop
inc
add
xchg
repz
xor
xchg
in
or
jmp
test
push
movsl
insl
jne
sti
inc
fnstcw
inc
ss
sbb
and
shll
or
ret
scas
mov
fnsave
sahf
dec
aas
mov
and
or
shl
cmc
cmp
in
add
and
arpl
dec
mov
cmpsl
xor
es
scas
arpl
aas
push
mov
mov
insb
loopne
in
pop
xchg
sub
out
push
mov
dec
movsb
push
push
pop
jnp
divb
sbb
add
add
addr16
add
mov
fs
daa
inc
inc
sbb
mov
or
inc
int
cmp
dec
incl
cmp
cld
pusha
xchg
push
fisttpl
jle
and
cwtl
sbb
adc
mov
andb
cmp
xchg
cs
adc
push
lock
scas
rcr
ja
add
popl
loope
data16
pop
inc
std
nop
rolb
scas
lea
push
neg
jp
xchg
xchg
bnd
fisttps
fmuls
push
repnz
pusha
jmp
mov
rclb
fucomi
adc
jb
outsb
dec
movsb
push
xlat
pop
fisttpl
pop
push
cli
add
loopne
mov
cmp
mov
push
sbb
mov
jo
out
test
push
jns
out
lret
mov
sbb
jae
std
push
mov
nop
inc
and
aaa
add
cld
loopne
jbe
pop
aad
out
xchg
sahf
xchg
push
lcall
fstl
mov
lahf
push
adc
cmp
dec
stos
leave
rcll
les
inc
sub
add
sarb
push
dec
or
loopne
dec
lahf
adc
inc
dec
sub
push
lret
push
adc
inc
inc
rcr
jl
add
lret
sbb
or
lret
adc
fsts
jmp
xor
push
fisubl
dec
loope
imull
loopne
es
repz
je
xchg
aad
bound
xchg
pushf
mov
test
rcrb
jg
jp
mov
les
mov
jmp
fistpl
call
add
adc
mov
clc
js
push
pop
xchg
inc
stc
lahf
push
mov
stos
movsb
adc
pop
imul
xor
inc
xchg
pop
pushf
rolb
inc
ret
enter
inc
loopne
arpl
shrb
add
outsb
cmc
dec
daa
popf
test
mov
jl
adc
hlt
mov
mov
scas
pop
cmp
push
cmp
inc
insb
adc
ret
mov
add
mov
pop
inc
jecxz
mov
je
pop
mov
jns
xchg
mov
gs
xchg
lcall
jge
push
enter
les
or
fsubl
test
mov
dec
and
pop
ret
mov
jg
mov
sar
xchg
scas
dec
loope
sbb
in
movsb
pushw
and
mov
adc
and
movsb
inc
xor
int3
js
das
mov
cld
lcall
lahf
fnstenv
push
insl
into
xlat
lret
adc
pop
cmp
aas
sahf
inc
pop
repnz
mov
push
popf
data16
fiadds
cltd
cld
mov
push
adc
mov
xlat
jmp
fstps
push
jb
xlat
lds
divl
mov
leave
sbb
int3
call
mov
popf
jo
test
int3
mov
xorb
mov
cmp
call
mov
mov
xor
or
mov
pop
pop
fs
mov
jbe
addr16
sahf
stc
adc
shrl
inc
jge
mov
push
in
push
sbb
dec
lcall
pxor
incl
and
outsl
push
bound
sbb
sub
iret
pop
dec
inc
pop
adc
push
sbb
dec
sbbl
jecxz
pop
and
dec
outsl
cltd
aam
mov
aad
jbe
out
push
inc
push
jle
cs
sub
or
sub
and
cltd
inc
xchg
ret
fbld
in
adc
aas
fidivl
jne
fnclex
stos
mov
xor
mov
loopne
cmp
std
or
popa
mov
test
xchg
into
nop
test
loop
dec
scas
jae
mov
ror
orl
addr16
hlt
orb
aas
mov
int3
movsb
add
arpl
jle
sub
inc
push
sub
fadds
push
sbbb
adc
es
push
pop
add
shlb
inc
mov
xchg
ret
jb
or
test
outsb
roll
loopne
insl
ja
xor
mov
inc
pop
cmp
jecxz
pop
adc
cmp
into
bswap
in
inc
orb
stos
repnz
pop
add
adcb
loopne
lret
pushf
mov
cmc
rorb
mov
fs
mov
mov
sbb
mov
mov
cld
inc
aas
pusha
aas
and
je
xchg
mov
and
sbb
pop
mov
inc
mov
xor
push
shlb
ret
jl
inc
sub
mov
xchg
adc
adc
pop
jl
lods
sarb
fsubs
xchg
movsl
xor
aas
xchg
mov
test
xchg
inc
xor
adc
xor
outsb
mov
scas
push
sbb
loopne
negb
arpl
cmc
or
or
mov
cmp
loopne
pop
mov
insl
pop
std
cmpsb
in
jl
ret
ret
cmc
sub
add
popa
stc
stc
cltd
mov
add
aas
stos
fs
mov
xchg
sbb
push
hlt
aaa
out
mov
sti
add
mov
test
sbb
dec
mov
or
inc
loop
dec
push
push
scas
mov
iret
add
xchg
xor
in
pop
push
dec
inc
orb
jl
inc
push
pusha
iret
inc
test
into
enter
out
or
mov
xor
jl
mov
inc
cmpsl
sarl
repnz
cld
xchg
dec
sub
sub
inc
lcall
pusha
lods
push
xor
sar
add
sbb
ret
ret
mov
mov
test
inc
push
cmpsl
aam
insb
movsl
mov
mov
push
clc
repz
lret
lret
cmp
popa
into
xchg
in
pop
xor
sub
std
shl
xchg
xor
pop
jle
push
fdivrs
push
call
out
jo
xchg
xor
dec
push
out
popa
mov
ljmp
aaa
aam
inc
mov
dec
xor
xchg
add
xchg
jno
xor
mov
int3
and
mov
inc
jle
jno
inc
cmc
mov
push
and
sub
mov
and
fbstp
adc
test
adc
sub
fs
cltd
addr16
pop
xchg
inc
lock
in
inc
sbb
shrb
hlt
pop
mov
insb
shlb
call
rorl
and
mov
popf
mov
inc
pop
sbb
imul
cmp
pop
xchg
mov
mov
cmpb
sub
cld
sub
jl
push
mov
daa
mov
test
cs
xchg
enter
mov
add
les
loop
cs
ret
pop
sarb
sub
sub
mov
jo
pusha
inc
ds
cmp
mov
mov
mov
mov
stc
jnp
adc
negl
xchg
mov
cltd
test
xorb
mov
pop
sti
xchg
xor
jo
sub
mov
xadd
cld
loopne
sti
imul
or
inc
sbb
push
scas
or
lret
sub
and
mov
repz
je
mov
insl
dec
popa
sub
jle
pop
sbb
cmp
movsb
add
push
out
sbb
sbb
ljmp
outsb
out
pop
inc
inc
outsl
mov
mov
push
scas
shr
imul
out
subl
out
inc
push
cmpsb
push
dec
xchg
inc
sbb
dec
jge
xchg
push
aas
dec
xchg
mov
mov
mov
sahf
out
inc
das
cld
repz
jno
shlb
inc
or
jp
or
push
gs
fistl
and
jno
mov
scas
jae
inc
xchg
imulb
push
xor
or
loop
dec
or
dec
mov
loope
mov
aaa
fistpll
pop
xchg
stos
add
pusha
mov
jns
inc
cmpsb
pop
pop
orb
or
cltd
cmpsb
push
js
add
mov
leave
cmp
aad
mov
mov
sti
ret
loopne
adc
cli
call
adc
repnz
inc
cmc
mov
push
xor
xlat
out
mov
xlat
xor
int3
pop
and
call
pop
cwtl
enter
and
inc
out
ja
mov
sar
jno
xchg
int3
repnz
lahf
xor
adc
pop
mov
jl
or
jno
cmp
cltd
rclb
pop
loopne
in
jb
mov
cli
insl
inc
inc
cli
sub
mov
push
add
rcll
cmc
test
xor
sub
call
into
test
mov
add
loopne
test
adc
add
push
andb
ds
call
sbb
int3
xchg
mov
cmpsl
ss
or
push
in
adc
leave
cli
sub
dec
je
out
ror
xlat
dec
xlat
add
mov
nop
nop
add
fst
enter
jle
cmp
das
push
push
sub
or
das
stos
mov
pop
iret
out
add
insl
lods
sbb
das
sbb
push
push
enter
pusha
or
leave
movsb
and
mov
and
mov
xor
icebp
ret
ficompl
jo
sbb
mov
popf
adc
cmpsl
and
test
dec
xchg
mov
fsubs
push
in
mov
sub
clc
orb
bound
sbb
add
inc
lahf
inc
sbb
ds
and
xor
push
sbb
rclb
mov
xor
ja
sbb
jnp
pusha
fs
loope
mov
add
pop
pop
lds
inc
xchg
cwtl
pop
inc
pop
cs
bound
push
pop
jnp
pop
cwtl
or
xchg
inc
movsl
add
add
push
adc
inc
adc
aas
cmp
aaa
dec
imul
jno
push
arpl
bound
xchg
lret
es
sbb
fwait
and
sahf
mov
jecxz
cld
inc
xchg
mov
mov
imul
pop
repnz
cwtl
inc
pusha
out
rolb
add
repnz
inc
inc
popa
imulb
mov
pusha
mov
shlb
pop
lods
ret
xchg
das
iret
insb
pop
jns
mov
or
lods
push
inc
xbegin
inc
cmpsb
dec
add
sbb
jl
push
mov
add
scas
imul
dec
mov
fimull
jo
setb
mov
inc
push
out
mov
ret
dec
dec
cmpsl
jle
mov
repnz
or
push
mov
into
jl
imul
movsl
jg
test
cld
std
inc
int
lahf
out
xor
sbb
inc
divl
fdivs
in
les
and
or
sahf
scas
cmpsl
lds
mov
in
stos
mov
and
push
dec
out
inc
hlt
xor
jle
xchg
cmc
xlat
fistpll
pushf
in
jle
add
jnp
outsb
in
lock
xchg
mov
mov
lcall
clc
inc
stos
mov
jns
jmp
sub
xor
scas
fisubrs
dec
les
out
pusha
xor
sbb
mov
pusha
sub
mov
fcompl
mov
and
mov
sarl
addb
imul
daa
xlat
and
jge
outsl
inc
test
add
adc
inc
pop
popf
lcall
mov
xor
mov
lock
fimull
mov
pop
in
gs
aam
pop
inc
inc
cli
pop
dec
aaa
arpl
inc
mov
pop
xchg
das
or
inc
xor
cmp
push
and
adc
xor
jae
adc
xor
iret
pop
enter
lods
mov
ret
mov
cli
mov
push
add
or
pusha
adc
add
pop
lcall
mov
inc
stos
incl
pop
into
jb
js
sub
aas
insb
dec
xchg
push
sbb
rolb
pop
sbb
in
std
imulb
loop
and
pop
fisubrs
xor
iret
jo
arpl
mov
arpl
fidivs
mov
pop
mov
stos
adc
ds
das
sti
lods
mov
in
loopne
aas
inc
loop
jb
mov
mov
sub
bound
mov
das
insb
mull
enter
fisttpll
sbbb
cmp
in
mov
fsts
out
in
adc
inc
pop
je
mov
push
cmp
frstor
scas
add
mov
cs
das
jo
jbe
scas
lea
popf
cwtl
les
cld
insl
scas
in
aas
inc
inc
or
leave
add
loopne
or
and
test
mov
adc
inc
pop
push
inc
cmp
pop
xchg
pop
and
jle
mov
ds
jb
in
loopne
adc
pusha
pop
mov
fnstsw
imul
daa
into
add
out
xchg
cmp
xlat
std
gs
cwtl
pusha
jge
lods
mov
call
cmp
aas
xor
fisubl
adc
mul
cmc
fwait
mov
xchg
rcll
xchg
aas
adc
stc
fwait
sub
fcmove
sbbl
mov
dec
mov
lds
repz
jnp
enter
imul
rolb
inc
andb
or
js
test
lds
cmpsl
xor
pop
inc
inc
test
pusha
insb
xor
ljmp
inc
and
push
mov
push
aas
pop
ljmp
xchg
dec
jmp
jno
xchg
or
rorb
decl
loope
push
and
cmp
dec
cld
jmp
cmp
push
lret
std
ja
xchg
dec
xchg
cs
bound
lds
in
push
or
iret
outsb
inc
add
cmpsb
push
and
sub
out
popa
push
fbld
dec
in
cmp
clc
add
sbb
push
or
mov
sbb
inc
jb
xor
cmp
xor
dec
out
imul
mov
adcl
or
mov
cltd
pushf
mov
sub
xor
push
push
push
sub
das
dec
inc
pop
and
mov
fidivl
mov
mov
and
dec
push
sub
pusha
cltd
jne
jbe
in
push
hlt
and
dec
insl
fsubrl
inc
sub
out
mov
imul
outsl
scas
xchg
out
pusha
roll
ret
mov
and
and
mov
loopne
das
lea
jno
mov
lret
mov
jg
adc
scas
inc
outsb
lea
icebp
outsl
mov
push
pop
cmpsb
nop
addb
xor
jmp
mov
xor
int
cmpsb
loop
clc
adc
lret
fisttpl
dec
ret
xchg
jae
sbb
aas
in
sub
push
pusha
arpl
inc
xlat
push
push
ror
lea
sub
orl
xor
cmp
imul
pop
inc
mov
clc
jl
inc
cmp
shl
xchg
pop
inc
dec
sub
sub
pop
stos
fidivl
pop
or
mov
faddl
in
imul
lods
pop
inc
add
mov
and
sub
lods
and
popa
or
mov
es
gs
pop
and
and
adc
mov
enter
pusha
mov
fstps
xchg
and
cmc
cmp
icebp
std
fs
inc
repz
push
mov
dec
not
sub
pop
sbb
mov
add
and
fcmove
add
dec
lock
out
adc
xor
shlb
mov
nop
mov
prefetch
add
orl
popf
push
ret
pop
jno
jb
push
xorl
dec
inc
mov
cmpb
loope
loopne
outsb
push
xchg
jbe
arpl
adc
mov
sub
cmp
inc
out
shlb
push
out
cs
inc
inc
xchg
push
aam
lahf
xchg
mov
sbb
rolb
adc
add
xor
mov
mov
jmp
ds
data16
jnp
jbe
test
dec
aas
adc
adc
imul
lods
and
push
pop
push
test
cmpb
sub
inc
imul
int
lods
loopne
mov
imul
push
jmp
cmpsb
pop
daa
shlb
clc
cmp
ljmp
inc
test
mov
es
xchg
std
adc
xorb
inc
dec
adc
lock
push
ret
aam
adc
pop
xchg
push
dec
fldl
les
jne
mov
iret
adc
mov
jno
js
xor
sti
ficompl
dec
fisubs
aas
sub
in
loop
aad
nop
mov
xor
cltd
shlb
sbb
mov
sub
jg
int
movsb
adc
cld
inc
xchg
sub
loop
lds
inc
dec
stos
ljmp
rolb
inc
sbb
stc
cmpsl
cmc
jne
sub
into
xor
dec
lock
sbb
pop
out
inc
mov
stc
inc
pusha
xchg
jg
push
sbb
jl
mov
dec
movhlps
sbb
pop
stos
jns
aam
hlt
aaa
jmp
jnp
mov
add
lea
add
inc
insb
inc
pop
cli
pop
push
fsubrp
xchg
fsub
jo
sti
test
fidivs
fnstcw
pop
and
push
rcrl
mov
dec
or
inc
sbb
sbbb
int
pop
rorb
and
pusha
jo
ret
scas
mov
jle
adc
fwait
out
cmpb
test
push
int3
lret
les
adc
scas
mov
mov
sub
pop
dec
fnstcw
aad
add
jne
lret
xor
out
xchg
cmp
out
stc
int3
fsubp
add
andb
lods
hlt
cmp
repnz
push
mov
pop
cmp
or
add
ret
push
mov
pop
xchg
popf
in
jno
and
in
cs
and
inc
das
add
aaa
rorl
les
out
xchg
aaa
add
adc
shlb
mov
hlt
cmp
cmp
xor
xchg
je
push
cmpsl
mov
out
adc
jno
or
mov
repnz
mov
xchg
enter
aaa
les
xchg
sbb
xor
fisubrl
fisubrl
mov
lahf
xchg
pop
into
popf
mov
xchg
fisubrs
add
dec
imul
xchg
sbb
rcrb
out
cmp
out
movsb
nop
dec
pusha
adc
cmpsb
roll
in
inc
adc
mov
add
mov
sub
push
rcl
xor
or
mov
cmp
icebp
adc
or
push
jb
and
add
push
mov
jno
sbb
cmp
fcompl
mov
lods
xorb
adc
popf
xor
mov
les
outsb
or
movsb
rep
test
mov
inc
lea
sub
arpl
fdivs
adcb
daa
mov
das
out
or
mov
add
inc
jae
shrl
add
mov
pop
pop
call
push
push
push
bnd
lret
arpl
loopne
cmp
insb
add
xchg
rol
into
outsb
cli
add
mov
pusha
jge
and
cmp
fs
loope
or
xor
stos
mov
rorl
mov
mov
mov
pusha
jno
cli
xchg
int3
adc
sub
shl
push
loop
pop
movsb
cld
push
jne
data16
mov
mov
xchg
cs
rorl
pusha
push
dec
adc
lcall
push
repz
push
arpl
push
ds
mov
sub
pop
mov
fiaddl
jbe
cmpsl
lods
popf
fnsave
cli
pop
and
pusha
sahf
out
mov
mov
sub
xor
jmp
mov
sahf
push
lret
gs
cwtl
cmp
lods
cld
shll
mov
jle
push
cld
xchg
mov
mov
xor
jl
mov
lods
lcall
pop
aad
mov
add
mov
lret
and
xchg
in
arpl
scas
push
lret
cwtl
or
push
imul
icebp
and
inc
jno
cmp
xchg
stos
sysenter
pop
and
push
nop
mov
or
add
mov
pop
mov
cli
popf
loope
fisubl
loopne
int3
loope
int3
inc
inc
aad
ficoml
push
cmp
loopne
rorb
adc
enter
pop
fsubrl
add
inc
ficoml
mov
arpl
rcll
aad
ret
jo
idiv
jo
mov
push
mov
cld
and
addr16
xchg
and
repnz
dec
filds
divl
int3
inc
mov
sti
shrl
sbb
cwtl
mov
das
in
adc
add
inc
xchg
scas
dec
xchg
in
inc
rcl
fadds
arpl
out
adc
and
inc
sub
icebp
lods
sub
js
cmp
pop
inc
leave
mov
push
mov
inc
add
loop
sub
and
leave
jbe
leave
leave
lock
movsb
sbb
and
lods
les
jae
sbb
lods
mov
imul
clc
pop
sbb
jns
push
ljmp
push
mov
xlat
ret
mov
ja
or
adc
lahf
sbb
lret
mov
stos
xor
adc
in
pop
mov
stos
call
lret
out
loope
add
add
sar
mov
roll
stos
rolb
inc
inc
push
xchg
jb
mov
outsl
inc
adc
mov
push
jg
inc
inc
cmp
cmc
add
adc
lds
nop
fs
fisubs
cmp
fldt
mov
cs
mov
loopne
sub
es
pusha
std
hlt
push
xchg
dec
cmp
and
sbb
pusha
bnd
lret
push
lea
cli
jo
cmp
ret
std
clc
xor
jg
lods
bound
out
mov
or
out
jne
mov
cltd
xchg
int
dec
addl
icebp
les
iret
jno
addb
mov
cmp
jbe
test
cmpsl
push
popa
adcl
out
out
test
mov
adc
sub
clc
jno
or
sahf
xor
outsb
int3
xchg
scas
lcall
xchg
add
cmp
roll
test
in
fwait
pop
pop
lcall
sbb
out
add
lea
push
fstps
mov
pushf
cmp
imul
sub
scas
sub
xchg
imul
aas
les
dec
adcl
mov
xchg
int3
pop
roll
mov
sbb
stc
cmp
pop
mov
rorb
push
add
jnp
repz
decl
cs
push
pop
fadds
fisubrs
int
fwait
mov
mov
jo
les
lods
lret
aad
in
push
pop
mov
jl
arpl
jo
out
aam
cwtl
js
mov
dec
xchg
stos
jle
test
lret
push
lret
mov
aaa
ljmp
lret
and
es
std
hlt
mov
ret
gs
jge
push
loop
je
jno
adc
sbb
xor
jmp
out
adc
add
xchg
aad
les
pop
mov
pop
xor
and
ljmp
dec
cltd
jecxz
loop
lret
test
iret
xor
fisttpl
lret
loopne
aas
mov
pop
pop
je
cmp
add
push
jl
sub
jns
mov
leave
dec
pop
cmp
pop
xchg
out
jecxz
xchg
icebp
sbbb
cltd
jl
mov
insb
pusha
outsl
pop
fisttpll
dec
push
mov
adc
or
sub
sbb
loopne
cs
in
pextrw
push
mov
cmp
fistl
lahf
xor
dec
jne
inc
rorl
push
or
mov
les
inc
push
gs
shlb
cld
into
test
jg
lahf
jg
push
xchg
stc
fucomip
or
jae
mov
faddl
jl
mov
ss
mov
test
data16
out
push
cmpsb
xchg
lret
clc
sbb
add
lods
inc
sbb
inc
jno
mov
mov
jmp
cli
ljmp
das
or
adcb
loopne
faddl
sahf
mov
sub
inc
add
rcrb
shlb
dec
sub
push
les
rolb
pushf
pushf
loopne
sbb
andb
and
mov
jae
loope
xor
push
lods
dec
add
inc
fimull
push
sar
jae
or
shr
push
fcompl
jl
cmp
adc
xchg
cmp
push
std
jbe
push
mov
add
pop
ret
jl
sub
and
or
popa
adc
inc
icebp
aad
push
xchg
jne
lret
pusha
xchg
cwtl
and
push
xchg
jb
stos
sbb
loopne
cmp
std
fisttps
dec
clc
fdivl
pause
js
xchg
aaa
ds
sahf
xorb
xchg
xor
jne
int
lods
pop
mov
add
dec
hlt
in
inc
adc
adc
shll
pop
shlb
dec
inc
cmp
stos
negb
test
fdivl
mov
pop
faddl
or
and
dec
add
pop
mov
sarb
mov
mov
mov
call
cmp
xchg
loope
movsl
rorb
repz
lods
stc
sub
lods
inc
jge
push
jecxz
aaa
push
mov
xchg
jno
lods
sub
jno
push
inc
inc
popf
shlb
adc
inc
fsubs
rcr
iret
xchg
ss
loope
stos
cmp
fbstp
divl
mov
inc
nop
test
data16
fadds
add
mov
jl
dec
mov
jnp
lods
test
pop
outsl
mov
ret
sbb
dec
fdivl
cmp
add
rcr
les
push
mov
mov
out
sub
xchg
movsb
mov
mov
call
add
cmpsl
sbb
sub
xor
mov
cmp
lods
xorb
clc
dec
out
xchg
push
stc
jg
in
repz
in
pusha
mov
or
or
sbbb
popf
pop
iret
aas
xchg
xchg
push
scas
stc
push
mov
cmp
stos
ret
lcall
cmc
sub
jmp
fcom
hlt
jae
subl
cmp
mov
push
mov
fcompl
lods
fimull
pop
adc
mov
jmp
enter
xor
adc
and
adc
popf
ret
mov
cmpsl
sbb
js
pop
in
popf
stos
and
cmp
add
out
jae
mov
fists
sub
push
inc
dec
call
jecxz
xor
add
mov
popf
push
mov
orps
or
mov
adc
shlb
jp
inc
dec
jmp
pop
clc
into
sahf
mov
xlat
arpl
fbld
mov
mull
popa
or
jns
push
mov
nop
loopne
xchg
mov
outsb
push
fidivrs
xor
shrb
fld
jmp
xor
cmp
inc
xor
shlb
outsb
mov
push
imul
inc
sub
pop
loopnew
cs
in
fistps
and
rclb
sti
or
or
dec
inc
call
cli
sub
mov
xchg
mov
sbb
inc
inc
mov
rcr
mov
ffree
inc
jl
scas
and
mov
fcoms
jecxz
cmp
pop
xchg
fadd
jae
bound
xchg
cwtl
push
std
out
es
push
nop
enter
out
add
mov
sub
xlat
cmpsb
cmpsb
dec
inc
insb
test
rclb
xor
pop
mov
out
mov
imul
or
dec
outsb
hlt
add
cld
jl
dec
sub
les
xor
into
ljmp
pop
sbb
hlt
rorb
clc
ss
sub
out
ljmp
test
xchg
les
or
mov
add
test
adcb
fptan
clc
sub
jo
mov
fidivrs
xchg
pop
sub
lcall
inc
mov
test
inc
scas
pushf
fsubs
xor
jge
iret
mov
addb
test
mov
jmp
and
jbe
cmp
and
xchg
bound
and
mov
inc
lret
mov
mov
sbb
or
xchg
fadds
and
mov
xchg
ret
xor
jno
inc
sub
dec
jne
push
js
dec
fldenv
mov
xor
data16
pusha
dec
xor
icebp
int3
pop
or
sbb
and
jne
sub
inc
int3
pop
into
ljmp
cmp
fadds
mov
pop
popf
push
mov
mov
insb
les
ss
cmpb
mov
inc
mov
fadds
cmp
test
push
or
into
fs
add
outsb
jmp
mov
xchg
iret
mov
cmpl
out
dec
bound
xchg
xchg
pop
sbb
cmp
mov
pop
mov
mov
jae
andb
outsl
adc
and
in
sub
aad
and
adc
nop
mov
imulw
push
sub
lods
pushf
mov
jnp
sbb
mov
das
jmp
test
add
mov
ficoml
jb
sub
aam
clc
lcall
sub
les
int
in
inc
add
jb
adc
cld
push
jne
adc
out
inc
loopne
dec
fwait
loop
aaa
lahf
push
push
push
pop
push
sub
jg
push
jmp
adc
je
in
pushf
and
jno
mov
mov
push
ret
cmp
inc
es
sbb
jge
and
pushf
mov
mov
lods
loopne
addr16
and
pushf
and
mov
in
xchg
hlt
add
mov
adc
out
mov
jp
mov
jno
cmp
and
iret
jg
cltd
push
in
inc
or
scas
les
mov
mov
mov
jp
push
enter
or
scas
fs
ret
jmp
xchg
lcall
cmp
and
leave
sbb
jge
ljmp
adc
jmp
inc
jp
jnp
adc
shlb
xchg
fistl
lods
clc
add
lods
xor
xchg
call
xchg
dec
cmpsb
inc
lret
movsb
mov
and
fisttpll
and
scas
sbb
clc
jp
movsb
sbb
and
seta
aas
mov
and
add
imulb
jne
mov
jmp
mov
xchg
inc
xor
or
pop
mov
adc
xchg
aas
into
cmovno
push
inc
mov
stos
push
mov
lods
xor
call
sbb
adc
in
and
fidivrs
sub
jbe
adc
or
mov
outsb
test
dec
xor
xor
daa
in
dec
add
ja
popf
pop
fcomps
pop
cmpb
cmpsb
add
loopne
cmovne
call
and
rcrl
xchg
add
add
movsb
mov
sahf
repnz
push
dec
gs
imul
pop
mov
cmp
mov
xchg
push
push
and
jecxz
xor
push
lds
mov
mov
mov
enter
mov
dec
xchg
enter
movsb
pop
jno
stos
loopne
push
xlat
in
push
int3
cmp
sbb
leave
jno
out
sahf
or
loopne
js
xchg
imul
and
aaa
mov
std
imul
cmc
out
cltd
jae
adc
idivb
insb
fistl
xor
cmp
dec
or
inc
loope
mov
add
mov
aam
lods
imul
pop
jmp
jne
movsb
pop
sub
and
or
sub
jecxz
xchg
movsl
repz
jo
mov
rolb
out
sarl
hlt
out
adc
xchg
sub
and
ret
stos
and
in
mov
ror
stos
mov
es
add
iret
cmpsl
cli
in
pop
sub
add
sar
push
dec
mov
mov
pushf
dec
inc
fldcw
mov
std
or
sarl
add
fsubrl
mov
jno
mov
adc
inc
cmp
hlt
xor
bound
andl
push
inc
bound
repnz
bnd
icebp
out
inc
repnz
jne
pop
jns
mov
enter
icebp
das
aas
and
sub
sbb
add
leave
int
push
jmp
stos
das
add
cmpsl
mov
jb
xor
lahf
xchg
and
sti
or
jbe
mov
mov
xchg
faddl
adcl
je
sbb
add
nop
xchg
inc
cwtl
mov
lods
pop
rolb
pop
aaa
mov
push
jnp
popf
rolb
movsb
mov
dec
in
and
add
adcb
mov
in
cmpsb
mov
fists
and
push
or
les
jb
mov
int3
and
or
gs
inc
xchg
jbe
mov
pop
push
sub
ret
inc
mov
and
sub
leave
adc
mov
out
jb
cmp
loop
fwait
gs
inc
xor
push
mov
xchg
js
les
xor
loopne
data16
mov
xor
xchg
cmp
je
jo
xlat
insl
sub
fistps
mov
jns
shlb
and
cld
and
dec
outsb
jno
test
mov
in
std
or
inc
push
mov
pop
pushw
xchg
jns
cmp
in
pop
inc
push
hlt
ja
adc
pusha
nop
fsubl
dec
test
shll
out
mov
and
push
jne
cmp
rcl
sbbb
and
and
sub
shlb
adc
ljmp
xor
icebp
in
addb
stos
pop
xchg
mov
adc
loopne
imul
ljmp
xchg
adc
xor
jnp
adc
js
jno
sti
inc
pop
fdivl
push
pop
daa
mov
sbb
cmpsl
cmp
sbb
cmp
pop
pop
cmpsl
or
roll
or
outsl
cmpsb
dec
jae
stos
in
pop
in
or
push
push
insb
sbb
dec
and
and
popf
shrb
shll
cmp
xor
fildl
subb
test
xchg
xrelease
popa
mov
mov
and
dec
dec
cmc
mov
out
inc
sub
faddl
outsl
lea
jno
mov
pop
ds
push
imul
outsb
sub
pop
daa
outsb
nop
dec
add
dec
cli
mov
mov
fsubl
push
dec
jo
pop
jl
pop
mov
xchg
lcall
sbb
pusha
in
ficoml
jnp
mov
dec
mov
inc
clc
or
or
mov
cld
lahf
push
mov
xchg
rcl
imul
fisubrl
push
mov
xchg
or
or
pop
mov
loopne
repnz
loopne
sbb
and
std
cld
bnd
hlt
adcb
mov
inc
std
mov
mov
cwtl
lock
adc
mov
inc
dec
xor
pop
cmp
test
stos
push
sub
loopne
jno
out
sahf
cli
cld
pop
jge
rol
adc
add
shrl
sub
out
lea
or
mov
mov
gs
shll
sarl
andb
mov
lret
scas
addr16
ja
inc
out
mov
jmp
sbb
jp,pt
nop
jo
and
and
jae
and
mov
inc
mov
dec
ja
jp
jle
xchg
int
add
add
adc
popf
cld
adc
enter
lds
cmp
daa
add
inc
adc
faddp
out
fsubrl
or
lds
pop
das
notb
inc
inc
shlb
jae
mov
sub
jns
fwait
enter
mov
add
mov
adc
mov
mov
push
sub
daa
cld
aas
sub
imul
jnp
fildll
sub
push
leave
fldenv
sbb
gs
xchg
insb
pusha
jnp
adcb
push
sarb
xchg
add
sub
pop
jns
inc
and
and
pushf
xor
dec
stos
iret
mov
mov
rclb
xchg
arpl
addl
add
add
ss
ds
aad
popa
lret
cmp
lods
repz
shrb
adc
dec
cmpsb
and
hlt
fcmovnb
in
ljmp
ficoms
sbb
ja
sbb
add
adc
push
sbb
imul
cmp
lods
cmp
jl
icebp
pop
mov
lcall
jo
cmp
cmp
or
loopne
cmp
adc
jmp
pop
mov
push
jecxz
xchg
sbb
cmovne
andb
arpl
pop
sub
sbb
loopne
dec
inc
push
xor
out
inc
inc
xchg
imul
mov
in
sbb
div
movsl
mov
mov
jb
push
jns
adc
mov
shrb
adc
sarb
adc
mov
lods
adc
loopne
lds
call
fmul
xor
fidivl
cld
arpl
xor
dec
stos
andl
cmpb
outsb
lahf
movsl
aad
cmp
sbb
adcl
mov
pusha
inc
addr16
sarb
lcall
cmpsl
out
int3
jl
or
adcb
andb
jne
pop
add
mov
push
sub
add
aam
mov
loope
inc
jp
out
cmovne
leave
push
sub
cwtl
pusha
inc
shll
inc
inc
and
call
xchg
add
mov
push
jle
mov
aaa
inc
nop
pusha
loopne
inc
mov
jecxz
and
pop
and
push
adc
add
call
in
rclb
adc
gs
xchg
or
pop
sahf
ret
shl
mov
and
imul
xor
cmp
jmp
push
mov
test
leave
pop
pushf
cwtl
and
jae
fadd
sar
push
and
cmp
push
mov
or
inc
add
dec
into
mov
test
or
ret
pop
xchg
cmpsb
jno,pt
mov
lea
cmp
cmp
rorl
xor
xorb
repnz
mov
pop
add
cmp
jg
adc
mov
xchg
cld
orb
repz
nop
push
inc
push
test
pusha
inc
ljmp
cli
out
mov
enter
sub
add
xor
nop
mov
push
jo
lcall
xchg
jl
push
dec
shlb
add
push
or
jno
fcmovne
dec
sbb
loopne
push
popf
iret
icebp
loope
imull
dec
ja
jge
sub
clc
shl
mov
int3
push
jmp
sub
and
and
mov
out
inc
jle
hlt
mov
sbbl
adc
fwait
dec
xor
pop
jg
shlb
enter
inc
mov
or
mov
push
and
divl
jp
rorl
jns
adc
cmp
jg,pt
ret
popa
aas
mov
movsl
xchg
pusha
loopne
xchg
fdivs
iret
cmpsb
insb
testb
pusha
clc
push
mov
cmp
ja
cmc
jmp
addb
in
dec
testb
orl
sbbb
notb
pusha
mov
imul
inc
push
and
sbb
pop
pop
xor
cmp
test
cld
sub
push
or
mov
les
iret
cmp
test
xor
loopne
pop
xchg
scas
push
mov
cld
and
sbb
and
movb
cld
push
cmpsl
out
mov
roll
sbb
pushw
sahf
lcall
pop
dec
loopne
out
or
mov
test
and
popf
cld
or
pusha
mov
loopne
aam
decb
inc
loopne
lret
mov
xchg
add
push
inc
sub
enter
loopne
or
fcompl
adc
repnz
movsl
outsl
test
mov
add
xor
lahf
dec
fldl
rcrb
xor
mov
loop
js
jmp
sub
xor
xor
fisubs
sub
add
std
enter
int3
add
mov
loop
js
sub
ret
adc
into
xor
sbb
sub
sbb
shlb
fildl
ja
push
mov
add
jne
push
shrb
xlat
and
mov
jecxz
mov
mov
js
pushf
hlt
loopne
mov
lcall
pop
and
orl
ljmp
jecxz
xchg
ja
mov
jne
add
cmpsb
mov
lcall
mov
leave
xor
mov
mov
xchg
or
xchg
cmp
adc
pop
add
pop
fsubrp
scas
pop
vmovlpd
mov
repz
xchg
adc
pop
outsl
xor
xchg
cmpsl
or
add
and
icebp
lahf
fidivrl
mov
testb
fstpl
fisttpl
rclb
in
es
mov
test
lock
mov
outsb
shl
mov
lret
mov
xor
test
xchg
pop
lods
out
sub
xchg
sub
daa
mov
enter
cmc
lret
xorl
pop
mov
cmpsb
xchg
push
sub
sti
scas
mov
dec
add
sbb
out
fnstsw
pop
out
dec
sub
mov
and
push
repz
shlb
into
xchg
or
outsb
aas
outsl
mov
js
xor
xor
cmp
xchg
test
inc
push
shufps
mov
daa
push
adc
xchg
sbb
fwait
cmp
mov
and
loope
pop
cmpl
cmp
fisttps
adc
adcb
add
cmpsl
mov
addb
lret
cmp
sahf
jae
jae
mov
test
adc
scas
dec
pop
sahf
push
or
outsl
mov
std
mov
mov
adc
sbb
push
icebp
mov
dec
not
iret
je
shl
clc
mov
lock
mov
cmc
lock
fadds
sahf
cmpsl
pop
xchg
es
push
es
adc
pop
adc
movsb
jnp
dec
add
dec
or
and
xor
stos
inc
mov
push
and
std
fsub
pop
pop
out
xchg
mov
mov
jne
and
xchg
inc
pop
and
inc
sub
dec
repz
jne
repnz
jmp
mov
xor
loopne
lahf
xor
icebp
loop
fcomps
aaa
cmp
sub
pusha
mov
inc
lret
jno
cli
test
jae
je
and
pushf
xchg
shlb
adc
and
cmp
inc
inc
test
aad
lods
and
jle
mov
test
insb
inc
inc
pusha
insb
insl
jge
ret
push
xchg
in
loopne
mov
add
push
adc
pushf
insb
adc
and
loopne
dec
gs
inc
cmp
add
fs
std
std
xlat
pop
pop
push
mov
xor
xlat
jle
jg
aam
daa
sbbl
add
xchg
jno
jb
call
fsubl
xchg
sub
out
ds
mov
pusha
loop
mov
add
movsl
idivl
push
shlb
push
rol
pushf
mov
xor
pop
sub
adc
fs
out
bound
add
paddb
cltd
pop
mov
pusha
push
xchg
and
mov
or
pop
mov
push
add
loopne
icebp
frstor
testb
xchg
cltd
scas
mov
jne
mov
jae
pop
sbb
fstp
popf
lds
dec
sub
dec
and
fnsave
and
loope
clc
fdivs
aam
fstpt
push
cmp
sbb
pop
notb
mov
enter
js
xor
dec
mov
xor
or
iret
mov
out
mov
addb
cmp
js
pop
push
imul
loopne
xchg
sbb
subb
mov
xor
dec
mov
divb
jne
lds
nop
pusha
jge
push
mov
cmc
or
xorb
cmp
cs
inc
sbb
sub
into
ljmp
cmp
aas
dec
xor
add
or
pop
inc
out
cld
incb
data16
scas
in
fs
rolb
xchg
loopne
sti
scas
mov
testb
jae
orb
jp
aas
imul
movsl
xor
jbe
lea
and
mov
data16
inc
push
fsubs
dec
mulb
mov
sub
dec
mov
ss
sub
inc
adc
sub
xchg
jle
mov
lahf
hlt
inc
rep
cmpl
in
jg
cmp
mov
js
fildl
push
push
dec
orb
xor
sub
jnp
ja
mov
pop
dec
inc
pop
cs
pop
inc
movb
cmc
pop
mov
ucomiss
or
add
lods
jmp
cmc
pushf
mov
ficoml
aam
mov
push
mov
dec
adc
push
leave
jo
xor
pop
out
xchg
mov
xchg
ror
into
imull
mov
mov
fs
jns
lret
lcall
aad
xchg
sbb
rorb
jo
sti
jl
lret
dec
push
pushf
movsb
adcb
inc
scas
shr
push
fidivs
jo
dec
les
jmp
add
movl
popf
adc
sbb
and
rolb
inc
je
sahf
into
roll
sub
mov
aas
in
push
inc
shl
pop
cmp
imul
xchg
jp
adc
add
data16
insb
xchg
adc
mov
inc
jb
mov
out
push
dec
dec
or
pop
ficomps
iret
inc
push
sub
mov
lahf
mov
xchg
pop
jmp
adc
or
stc
lea
sub
pop
lcall
pop
imul
stos
out
inc
shll
adc
cmpl
and
sbb
add
pop
add
mov
push
leave
imul
adc
push
mov
adc
insl
mov
jle
push
inc
inc
setle
pop
mov
ds
and
lods
sbb
cmp
dec
lcall
pop
mov
fsts
sub
rcr
mov
cmc
sub
add
xchg
jbe
insl
xchg
pop
adc
inc
xlat
ja
cs
mov
mov
pusha
ret
jle
cmp
add
cmpsl
push
out
aad
xor
push
dec
sub
adc
aam
inc
jno
sub
cmc
daa
jae
mov
mov
mov
and
mov
je
lahf
push
push
sbb
pop
in
xchg
pusha
insb
inc
imul
ljmp
shlb
ss
and
dec
add
lahf
push
sub
jbe
daa
pop
aam
jnp
xor
hlt
inc
in
add
inc
or
or
out
push
adc
loopne
cmp
out
add
orb
mov
aaa
iret
pusha
pop
xor
jp
pop
and
xor
sahf
loop
inc
adc
outsl
lds
loope
sub
in
rcrb
add
aad
repnz
xchg
jl
add
cmp
mov
inc
mov
pop
inc
mov
lcall
stc
pusha
add
and
bound
mov
jmp
out
in
ja
add
mov
out
mov
mov
popf
mov
popa
mov
mov
mov
mov
ds
cs
push
xchg
pop
notl
xchg
dec
cli
mov
sub
out
mov
aad
addr16
xlat
inc
test
lahf
imul
sbb
pusha
inc
loop
loop
xchg
bound
sbb
fs
int
jae
cmp
push
mov
fstps
inc
lret
ret
adc
sarb
jns
sahf
outsl
cld
faddp
popa
inc
mov
cld
xor
rcrb
frstor
dec
add
loopne
mov
sub
inc
mov
icebp
hlt
hlt
mov
pusha
cmp
add
mov
iret
mov
test
mov
aas
ret
fnstcw
out
pusha
enter
sub
dec
cld
stc
lods
in
stos
mov
fiaddl
clc
mov
pop
daa
xor
roll
mov
flds
fmul
cwtl
mov
dec
sub
dec
jp
mov
cwtl
cwtl
add
mov
jns
mov
jnp
incb
sti
insb
cli
and
mov
test
in
xchg
ret
cli
sub
inc
bound
ret
lods
jp
cmc
sarl
and
in
aam
adc
xor
sarl
mov
mov
push
xchg
outsb
adc
sub
idiv
out
scas
jns
pop
fildll
sub
in
push
gs
adc
out
das
inc
sub
negb
sbb
cmp
mov
mov
dec
lock
stc
pop
dec
sub
mov
dec
ret
sbb
movsb
mov
mov
cmp
mov
mov
push
mov
sbb
in
and
sbb
add
and
mov
cwtl
nop
pusha
cltd
add
adc
loopne
sahf
sbb
mov
fucomp
int
push
adc
nop
jo
push
xchg
jl
dec
out
or
or
jnp
push
jmp
popf
and
push
icebp
ficompl
outsl
andb
mov
lods
sub
push
jo
pushf
add
loopne
sti
adcb
rcll
adc
push
mov
xchg
adc
movsl
enter
xchg
pusha
add
mov
arpl
jp
mov
insb
add
push
in
add
nop
add
sub
and
outsb
addr16
jnp
out
out
xchg
mov
cmpb
incb
pusha
adc
rorb
xchg
call
xchg
enter
or
ss
add
jge
cmp
stos
div
outsl
and
out
ds
fidivrl
aam
cmpsb
test
mov
lcall
push
add
and
movb
loopne
dec
aad
xor
cmp
rcl
cmp
push
mov
test
inc
movsb
sbb
and
cwtl
in
mov
jmp
fnstcw
dec
vcvtph2ps
mov
cmpsl
dec
mov
ficompl
sbb
push
xor
dec
inc
or
and
inc
sti
lret
loope
add
or
loopne
xorl
adc
adc
jae
jo
mov
hlt
inc
xchg
leave
sub
dec
jp
or
jle
inc
outsl
pop
and
xchg
jmp
adc
inc
cmp
dec
frstor
xchg
inc
inc
jge
mov
in
iret
stos
insl
ja
add
xchg
js
xor
sbb
in
push
cmpsb
cmc
dec
outsl
lea
ret
adc
and
cmpsl
outsb
insl
jo
push
fistps
push
or
and
mov
inc
iret
xor
pop
adc
inc
test
insl
ss
sub
inc
push
inc
sub
and
add
cmpsb
outsb
xchg
mov
in
pop
movsb
xor
lcall
or
loopne
ss
shrl
sti
int
mov
fdivr
in
jb
sti
push
jp
push
sbbl
push
bound
mov
cmp
cmp
stc
mov
orb
jno
scas
in
xor
mov
subb
loope
add
cmpb
sub
mov
lahf
je
dec
mov
mov
or
mov
add
jno
mov
je
mov
aas
mov
mov
xor
aaa
mov
js
loop
push
movsl
xchg
pop
add
xlat
loope
dec
fbstp
rcr
ret
ja
fdivl
outsl
lods
inc
stos
test
mov
jecxz
ret
mov
xor
filds
dec
fldt
into
shrl
xor
fwait
mov
pusha
shl
jno
xchg
jo
mov
add
add
int
jmp
aam
scas
notb
sub
mov
cli
lcall
call
and
xor
jecxz
jmp
inc
add
pusha
pop
icebp
inc
push
jmp
mov
gs
cs
dec
mov
movsb
loopne
xor
xor
fsts
imul
mov
jno
cmp
xor
lock
roll
andl
inc
jecxz
and
mov
push
pop
jp
je
outsb
jnp
jbe
je
push
inc
or
sub
adc
loopne
or
loopne
inc
jle
mov
lret
stos
ss
arpl
into
mov
insb
add
push
movsb
mov
cmp
jns
push
xor
inc
and
mov
movsb
into
mov
in
xchg
inc
test
jle
std
jne
repnz
ret
dec
scas
int
fptan
push
inc
sar
xchg
lcall
js
jge
cmpsl
das
addr16
repz
cmp
mov
sub
cltd
cltd
arpl
nop
inc
and
icebp
in
rcrl
and
xchg
fisubl
push
ret
xor
add
mov
sub
outsl
out
pop
repz
jnp
mov
add
inc
cmpsb
imul
lods
add
jb
jnp
scas
nop
nop
loopne
movl
push
je
push
aad
faddl
lods
jne
mov
mov
stos
popa
lods
xchg
movsb
sar
flds
xor
xchg
sbb
mov
movb
cmpsl
add
int
cld
pusha
orb
leave
add
pop
out
aad
fsub
xlat
loope
sti
std
orl
xchg
data16
sbb
push
add
sub
int3
push
jmp
fists
pop
ss
mov
mov
insl
cmp
sub
pop
iret
rcl
inc
das
push
xor
enter
insb
addr16
mov
stc
lods
je
cmpsl
jge
outsl
lcall
test
push
mov
adc
jg
inc
shrb
xor
test
cmp
jnp
mov
push
lret
es
mov
inc
xor
imulb
aas
xchg
push
and
cli
mov
out
dec
add
into
jbe
adc
sbbb
push
lcall
xchg
pushf
nop
inc
cmpsb
or
out
cltd
pop
pop
inc
fdivrl
xchg
sub
pop
sbb
cs
test
fwait
fs
jmp
mov
orb
loopne
pushf
and
popf
sti
js
adc
and
pop
and
inc
adc
add
sarl
shl
push
pop
mov
mov
cmp
cld
test
lock
mov
pusha
mov
cmc
out
lahf
pusha
xchg
inc
xor
add
shll
xchg
cmp
sub
mov
mov
pop
cmpsl
mov
int
test
idivl
inc
or
subb
adc
pusha
sbb
cmp
xchg
sbb
mov
mov
out
and
cwtl
push
mov
mov
fldl2e
addr16
push
fwait
iret
ret
push
adc
lock
adc
inc
popf
sub
inc
pop
ss
loopne
adc
jge
pop
insl
sub
fwait
xor
sub
jl
xorl
xor
sahf
jbe
mov
add
lods
jp
insl
in
icebp
adc
or
xor
jl
sub
movsb
mov
inc
es
and
scas
popa
push
dec
pop
mov
jge
adc
push
cmp
arpl
sbb
or
or
pusha
outsb
movsb
mov
loopne
pop
lock
mov
adc
das
arpl
push
push
xchg
adc
add
sub
test
xlat
in
pop
loop
cmp
cli
stc
into
jl
sub
pop
push
jl
or
pusha
ljmp
into
ss
test
xlat
jb
in
icebp
xchg
or
mov
jae
inc
and
push
jnp
xlat
sbb
adcb
cmp
dec
mov
cmp
dec
sbb
jmp
inc
loopne
sbb
sub
xlat
scas
cmc
jae
inc
ss
scas
push
and
xchg
mov
and
call
lea
mov
insb
dec
adc
sarb
mov
pop
adc
xchg
push
aaa
pop
frstor
leave
mov
shl
xor
mov
or
addr16
and
loopne
cmp
outsb
lahf
mov
faddl
sbb
cmp
and
sub
jo
and
orl
mov
repz
adc
rclb
and
pop
xor
cld
and
std
iret
cmp
sahf
mov
dec
lds
xchg
stc
pop
cmp
or
mov
dec
xchg
pushf
inc
pusha
and
adc
inc
cli
lock
in
out
es
mov
push
adc
mov
repnz
dec
mov
in
out
je
push
dec
loopne
fstpt
or
movsl
punpckldq
icebp
cmp
add
add
inc
dec
aad
xchg
stos
jg
adc
into
lea
add
jmp
inc
inc
int3
jg
mov
and
xchg
dec
dec
jb
lret
pop
xchg
xor
inc
jl
mov
arpl
mov
stos
or
mov
test
cld
or
mov
jae
sub
mov
jle
xor
xlat
and
into
mov
add
stos
shll
and
and
repz
sub
mov
out
pop
mov
mov
stos
mov
dec
addr16
das
dec
push
fdivl
out
mov
pop
ljmp
shlb
imull
sub
outsl
mov
aas
mov
lock
stos
sub
in
xchg
jae
mov
in
pop
dec
insb
nop
lock
lock
lret
sbb
inc
jl
push
out
bound
xchg
nop
sbbb
subl
mov
sub
call
and
notl
fiadds
das
jnp
movsb
pusha
ret
xor
lds
fwait
push
sbb
shlb
dec
in
rolb
add
insl
rclb
ljmp
out
mov
hlt
push
xchg
clc
and
ret
add
mov
add
shlb
mov
clc
mov
mov
mov
adc
sarb
adc
inc
cmpsb
adc
xchg
in
mov
jle
stc
xchg
icebp
iret
fsubr
push
scas
orl
addb
jge
xlat
mov
rcrb
jno
lods
mov
or
mov
fldt
mov
stos
mov
push
loope
pusha
sbb
aam
ret
jb
pop
cmp
jbe
fmull
sahf
mov
jbe
ret
mov
pop
push
xchg
es
test
mov
or
sbb
daa
or
dec
out
popa
ficompl
fucomip
int
mov
mov
ret
incl
sbb
push
loopne
outsb
nop
nop
sbbb
and
jne
movsl
mov
sbb
adc
sbb
jne
push
inc
repz
and
jno
pop
out
insb
sarb
jae
dec
andb
xor
out
xchg
int3
insl
add
add
in
jecxz
jmp
fstl
outsl
insb
dec
icebp
mulb
pop
push
mov
or
mov
fsubl
mov
loopne
imul
sbb
lods
push
and
mov
add
pop
mov
inc
enter
or
sarb
inc
push
jns
loop
cmp
out
jecxz
fsubs
add
add
pop
mov
dec
push
and
aas
std
lahf
mull
xor
out
inc
shrb
les
lret
loopne
insl
sbb
cmp
enter
popf
nop
movsb
add
inc
imul
add
add
lea
cmpsl
lods
jne
jbe
dec
inc
and
cwtl
insb
loopne
out
ds
push
push
add
cmpsb
cs
jg
stos
xchg
sahf
adcb
cli
into
repz
xchg
mov
and
dec
incl
jo
push
outsl
scas
jae
loop
cwtl
insb
andb
inc
cli
xor
mov
and
dec
movsb
cmp
sahf
ret
and
pusha
das
cmc
jb
loope
push
and
mov
in
loope
jb,pn
imul
fs
add
testl
shlb
jp
testb
fisttpll
sub
lods
mov
xchg
daa
adc
mov
xchg
ficoms
loopne
jno
mov
inc
jae
jp
insb
and
cmp
jp
aad
ret
jne
test
data16
sub
mov
fcmovbe
xor
mov
inc
jl
mov
incl
adc
pusha
or
adc
fwait
sub
pop
fbstp
loopne
fs
pusha
icebp
pop
push
gs
scas
pop
pop
incb
push
lahf
sub
adc
jo
outsb
mov
sarl
addr16
inc
push
jp
mov
pop
sbb
in
pop
jae
jns
mov
jecxz
in
pop
inc
std
ret
inc
gs
jo
add
movb
mov
mov
jno
sub
loopne
or
aam
es
fildl
pop
sub
inc
push
adc
dec
mov
lret
mov
loopne
cmp
mov
and
loopne
dec
mov
dec
cmp
decb
push
cmpsb
mov
int3
pusha
mov
jbe
mov
push
ror
adc
xchg
and
int3
aas
mov
lahf
push
adc
adc
int
xor
mov
inc
push
aas
dec
cwtl
push
shlb
mov
xchg
daa
push
add
add
rclb
mov
and
icebp
mov
xor
and
jo
sub
lock
mov
imul
push
and
and
or
push
or
lret
sub
out
inc
mov
andb
mov
sbb
push
dec
push
sub
daa
xor
fisubl
movsl
mov
and
lret
jl
jmp
add
mov
scas
stos
mov
pop
mov
test
addb
xlat
inc
cmp
rolb
idiv
cmpsl
xchg
cld
stc
push
lcall
pop
xchg
mov
mov
nop
mov
icebp
mov
xchg
fsubl
cmp
nop
enter
in
sarl
sbb
xchg
inc
and
ret
or
in
cmp
sbb
out
loopne
cmpsl
sti
dec
aas
pop
sbbb
pop
inc
and
xchg
aaa
mov
clc
add
mov
fstl
mov
mov
mov
int
test
fistpl
and
add
cli
xor
int3
inc
call
repz
repnz
pop
or
push
or
outsl
imull
insl
in
outsb
push
jle
push
aad
mov
aam
or
mov
js
outsb
mov
add
out
pop
or
sbb
and
jo
adcb
or
rcrb
lock
xor
jbe
lcall
add
cmpb
sbbl
and
push
jg
lahf
and
add
loopne
mov
cmp
xchg
adc
xchg
mov
cltd
jno
xchg
pop
pop
lods
mov
nop
cwtl
mov
dec
or
and
sbb
mov
notl
iret
add
or
add
test
sub
pop
test
stos
xchg
in
js
xchg
push
sarb
sub
mov
fdivrl
xchg
shlb
std
aaa
add
fwait
mov
and
and
push
xor
xchg
dec
dec
adc
mov
arpl
xchg
sub
fdivrl
lcall
push
aas
push
shll
insl
mov
mov
std
orl
aas
sub
mov
adc
add
in
aam
push
pop
mov
pusha
mov
adc
stos
pop
fs
rolb
and
jns
addr16
mov
mov
and
ja
push
and
aaa
inc
mov
int3
and
mov
lock
sub
pushf
shlb
xor
insl
xchg
push
add
daa
ficompl
and
pop
in
dec
leave
aad
mov
jne
stos
je
insl
fsts
mov
xchg
cltd
int
nop
rorb
adcb
xchg
cmpsl
sahf
pop
mov
test
adc
mov
cmp
sarb
xchg
scas
sti
into
pushf
sub
fists
or
inc
pusha
mov
xor
fwait
idivb
xor
xor
dec
mov
pusha
adc
loopne
mov
shl
mov
movsb
mov
in
pop
push
inc
add
xchg
jns
xchg
dec
and
cmp
cmp
add
pusha
cmpsb
or
addr16
pop
div
sbb
pusha
aad
sub
sbb
add
pop
dec
lret
inc
add
rorb
inc
bound
loopne
xor
and
add
dec
xchg
cwtl
sbb
adc
loopne
mov
sysexit
mov
cltd
cmc
out
push
cmp
decl
mov
lods
stos
and
ds
lods
cmc
sub
mov
inc
imul
push
pop
mov
jnp
out
inc
sub
cmp
mov
rolb
inc
js
mov
cltd
dec
xlat
ss
sarl
testl
int
icebp
xor
add
out
and
push
xor
xorl
mov
xchg
into
cmpsl
test
pop
loopne
jnp
dec
cld
dec
pop
mov
push
sbb
xor
push
das
push
data16
test
in
test
mov
adc
adc
jnp
sub
jb
std
lcall
sbb
outsl
jl
pop
dec
out
clc
pop
sub
rcr
and
cmp
notb
das
std
mov
rorb
or
cmc
ljmp
movsw
shl
lcall
add
je
push
add
pusha
push
push
insl
dec
mov
cld
pop
sub
push
movsl
cmc
jecxz
push
mov
js
enter
sub
and
inc
cltd
lods
xchg
mov
rol
ljmp
xchg
test
mov
cmc
fbstp
imul
dec
inc
aaa
repz
ja
and
cmpsl
mov
mov
shlb
cmc
lahf
std
sub
out
adc
shrb
push
cli
xchg
sbb
shrb
cmp
adc
inc
sahf
or
lret
fwait
cli
stc
xchg
cmpsb
and
pop
jbe
rcr
daa
inc
or
rorb
shll
aad
out
imul
pop
jns
roll
fwait
adc
lock
rol
fsubrs
int3
inc
jo
jle
inc
loopne
push
lods
add
add
clc
mov
jge
xchg
lea
push
adc
shlb
loop
test
push
xor
leave
fsub
inc
aam
jne
dec
out
nop
or
out
mov
cwtl
push
and
inc
sub
rol
jmp
and
nop
je
cmp
cmp
pusha
jae
jae
gs
adc
mov
je
mov
xchg
arpl
sub
push
fwait
adc
lods
jg
aam
cmp
rclb
mov
mov
jns
mov
ds
je
lock
push
dec
stc
add
push
cmc
mov
inc
mov
scas
shlb
pop
sub
add
aas
mul
dec
pushf
call
mov
pushl
ljmp
or
sub
addr16
pop
push
cli
rcrl
ret
push
jmp
loop
jg
and
es
or
inc
dec
popa
rorl
pusha
js
jle
mov
push
js
pop
popa
xor
loope
cmp
pushf
pop
inc
xchg
push
pop
sub
push
and
das
hlt
dec
mov
sbb
and
jmp
push
sub
aam
mov
daa
push
xchg
jae
enter
and
fstp
clc
jmp
fidivrl
sbb
pop
sahf
mov
mov
ljmp
loopne
scas
sub
mov
and
and
xor
xchg
dec
or
jmp
adc
inc
xor
lret
div
push
shr
cmp
lahf
in
test
xor
mov
insl
sub
sub
jno
jnp
imul
inc
rcl
popa
mov
popa
inc
popa
inc
sbb
ljmp
mov
xchg
sub
leave
jbe
ja
mov
xchg
push
dec
cmpsl
sti
movsb
dec
cs
loopne
adc
sbb
cmpsb
sub
sbb
cld
outsl
mov
lods
pop
bound
loopne
shll
mov
mov
ret
mov
sbb
dec
fdiv
dec
xchg
mov
mov
shlb
jge
int3
and
fldl
ja
jp
adc
cmpb
add
sbb
xor
push
inc
push
mov
ljmp
ror
ja
and
test
arpl
test
or
lcall
pusha
dec
mov
add
hlt
add
jb
lret
insb
xchg
ljmp
lcall
cmpsb
fistl
adc
stos
push
fisubs
push
mov
movsb
push
cmp
in
xchg
outsb
adc
cmpb
shll
das
mov
and
mov
mov
add
pop
ja
mov
lods
xor
dec
cmp
into
mov
ret
mov
sub
jl
pusha
daa
mov
jecxz
movsb
hlt
push
jl
xor
inc
and
xor
xor
pop
push
jp
cmpsb
fcmove
frstor
stc
jns
pusha
stos
inc
jecxz
mov
shlb
shlb
mov
hlt
in
and
jns
jmp
in
arpl
push
mov
jnp
jmp
sbb
arpl
sbb
sub
sub
outsl
add
pop
jle
and
push
push
or
add
lods
out
dec
cmp
or
jo
lods
jp
inc
mov
jecxz
lea
jne
mov
push
sahf
jle
push
and
mov
mov
push
aad
adc
sub
daa
mov
mov
ja
mov
aas
fnstcw
insl
mov
enter
lret
leave
xor
pop
and
cltd
dec
sbb
cld
bound
into
xchg
test
cltd
addr16
scas
inc
fcomps
hlt
rclb
dec
in
and
das
and
es
leave
ret
ret
mov
fcomp
in
repnz
ljmp
out
sbb
rcrb
cmp
add
jnp
iret
push
mov
or
js
rorb
rolb
scas
sbb
jle
cmp
cwtl
xor
cmp
add
jno
xor
and
and
imul
pop
inc
adc
pusha
test
mov
add
cmp
cltd
inc
fs
repnz
xor
gs
ror
enter
xor
lods
xchg
adc
mov
or
fdivs
iret
jecxz
mov
cmp
xor
and
rorl
out
push
rolb
into
shrl
in
mov
mov
repz
inc
mov
cld
or
add
mov
vroundps
lds
dec
mov
fstpt
sub
out
shlb
mov
xchg
add
pop
jg
lock
outsl
xor
mov
lods
adc
loopne
jno
icebp
jle
and
lret
scas
inc
dec
and
dec
push
push
xchg
cli
bound
repnz
xor
cli
sti
test
pop
out
test
push
aam
mov
jmp
lcall
sbb
in
xchg
lret
mov
push
pop
fisttpl
test
mov
mov
push
cmpsl
mov
jge
loope
sbb
jnp
in
cmpsb
jge
enter
leave
pushf
cwtl
and
push
jl
mov
jmp
movsl
insb
shll
inc
push
mov
push
pop
jp
or
ret
jmp
inc
sub
sarb
ljmp
or
out
outsb
movsl
stos
pushf
mov
mov
inc
jl
repz
mov
mov
push
and
pop
testl
adc
inc
jbe
pop
mov
inc
hlt
sub
jns
int3
jmp
jge
jg
xchg
test
ret
jge
ficompl
pushf
and
cmp
hlt
andl
inc
rorb
sbb
mov
mov
rcrb
rcll
jmp
cmp
shr
sub
inc
data16
rolb
cwtl
pusha
mov
in
mov
and
cli
mov
outsb
andb
cmp
push
push
xor
ja
dec
fwait
test
dec
pop
addr16
mov
insb
jns
cmp
fbstp
fsubs
add
fwait
push
shlb
or
add
push
push
and
fwait
pop
add
mov
ret
jecxz
mov
cmp
jb
jno
cwtl
shlb
mov
cmp
mov
inc
ljmp
outsl
mov
les
mov
dec
cmp
shlb
inc
xchg
aad
int
push
sub
ss
add
pop
sub
push
mov
les
nop
mov
dec
pop
add
gs
fstpt
mov
push
js
imul
je
adc
pop
adc
outsb
out
push
arpl
dec
mov
mov
cmp
pusha
aaa
js
sub
test
inc
mov
xchg
andl
cmp
in
ljmp
sub
and
into
addr16
arpl
in
pop
lahf
pop
xchg
cmc
in
inc
add
or
inc
pop
cmpsb
sub
bound
in
or
int3
sbb
jecxz
fwait
sar
push
mov
sarl
inc
jl
pop
mov
or
insb
rcll
outsb
out
dec
sub
scas
push
clc
jnp
js
ss
out
popf
js
loope
les
fisubrs
mov
fistpl
ja
lods
repz
mov
stc
ds
xor
arpl
jns
sbb
out
and
cmpsl
test
sarl
or
and
xchg
xchg
dec
stc
out
lock
insl
pop
jmp
mov
fsts
es
es
out
lock
stos
les
or
adc
mov
sub
adc
mov
and
stc
adc
movsl
aam
or
les
ret
jecxz
push
xlat
dec
fldcw
fisubl
into
outsb
sbb
inc
add
inc
leave
xlat
sbb
pusha
gs
arpl
cmp
inc
adc
stos
mov
pop
add
add
loopne
jae
iret
cmpsb
xchg
jg
stos
mov
jbe
enter
lds
imul
push
fcmovne
pop
lret
fildl
rcrb
adc
push
and
mov
sub
xchg
and
sahf
lret
cmp
insl
adc
or
fsubrs
mov
loopne
js
aaa
jae
cmp
lcall
dec
imul
into
movsl
mov
mov
aam
mov
or
sub
push
and
aaa
outsb
adc
cmpsw
lret
mov
push
dec
call
and
push
loopne
mov
jae
cli
ss
push
arpl
mov
push
mov
mov
inc
and
inc
add
inc
adc
cmp
lret
mov
mov
addr16
jns
push
add
fistps
or
nop
movsb
sub
inc
jmp
dec
jne
hlt
fwait
insl
in
arpl
jle
cmp
sbb
in
mov
imul
mov
ror
popf
cli
sub
push
lods
mov
int3
aad
push
jmp
lea
inc
enter
loopne
ds
daa
mov
dec
xchg
add
mov
push
jb
dec
cmp
or
add
xchg
test
pop
out
jno
aam
dec
imull
xchg
mov
stos
fsubr
mov
pusha
pop
arpl
mov
and
mov
sti
adc
sbbb
ret
sub
adc
xorl
dec
pop
dec
adc
pop
pop
fiaddl
movsl
mov
push
ret
daa
ficompl
cmc
fwait
scas
rorb
push
loop
testb
xor
daa
xchg
jb
dec
ret
dec
mov
lods
mov
loop
cltd
fmuls
push
sar
idivl
jmp
in
adc
xchg
fwait
les
push
dec
mov
push
daa
fdivrl
or
movups
mull
addr16
inc
mov
fnstsw
out
test
xchg
cwtl
dec
inc
adc
inc
das
out
dec
xor
lret
sbb
outsb
push
cmp
icebp
ja
rcr
or
fiadds
movsl
int
fisttps
and
imul
mov
aas
mov
adc
in
pushf
add
and
punpckhdq
jp
out
daa
in
pusha
mov
lret
in
outsb
pop
das
and
jmp
lcall
inc
movl
loopne
arpl
mov
addr16
xor
addr16
and
jmp
and
inc
gs
sub
out
aam
in
push
pop
ja
ret
in
lea
scas
xchg
movsb
rclb
mov
addb
adcl
add
stos
add
imul
inc
pusha
mov
inc
fs
cmpsb
sub
xchg
pop
add
inc
call
call
movsb
sbb
clc
pop
sub
cmp
mov
adc
mov
out
ss
cmc
mov
cltd
dec
mov
pusha
xchg
or
push
aaa
or
insl
iret
mulb
pop
shl
inc
in
inc
ficompl
aam
jne
jmp
ja
and
hlt
gs
mov
ret
mov
sub
jmp
ds
sub
push
and
push
cmp
cltd
mov
lret
dec
call
cli
jbe
sub
cmc
outsl
mov
cmp
pop
repz
cmp
push
pop
repz
dec
sub
and
loop
or
sbb
icebp
cmp
scas
pushf
add
inc
cld
mov
push
aas
xchg
fsubrs
frstor
push
das
movsb
mov
outsb
push
sbb
fidivl
sub
loopne
inc
test
xchg
sahf
xor
jge,pn
cltd
in
push
shlb
pop
ja
mov
ja
test
inc
lahf
and
insb
mov
les
adc
hlt
push
jb
pop
es
in
fcmovnb
aad
pop
inc
or
pop
sub
out
arpl
outsb
xor
mov
test
or
leave
cmp
mov
int
rorl
inc
xor
pop
fldl
repz
shlb
cmp
xchg
cmpsb
pusha
ficomps
fadd
sub
mov
mov
jns
sarl
lock
xchg
int
jno
jns
movsl
divps
jmp
js
cmp
sbb
fldcw
ffreep
popa
inc
sbb
in
stos
mov
xchg
pop
js
fdivrs
cltd
mov
sub
xchg
jne
test
pop
xchg
lds
xchg
hlt
add
js
lds
inc
ret
hlt
pop
mov
out
cmpsb
es
jle
leave
rcrb
loopne
shrl
xor
push
push
sarb
loop
xor
loopne
cwtl
add
mov
xchg
syscall
addb
loopne
xchg
sbb
cltd
insb
test
xchg
fisttpll
insl
mov
and
mov
add
insb
add
repz
jle
push
and
lods
and
cmp
push
int3
sub
sarb
shll
mov
mov
xchg
out
bound
pop
add
scas
adc
push
push
sbb
shll
jmp
pop
pop
push
into
imul
xor
mov
mov
test
ror
inc
notl
mov
les
mov
push
sbb
jne
pop
xchg
jne
inc
shrl
leave
add
inc
push
jo
jae
movsb
ss
push
cmp
mov
and
push
pop
lcall
test
jmp
xor
movsl
add
das
lahf
pop
orb
xchg
jg
lret
mov
testl
mov
lahf
mov
sbb
mov
sub
inc
and
lds
lret
xchg
or
scas
mov
pusha
dec
push
push
adc
loope
add
pusha
pop
rcl
fs
sub
je
std
dec
push
inc
test
pushf
add
outsl
rclb
ret
mov
sub
jae
lcall
repz
lahf
cli
imul
into
and
jbe
sahf
fildll
jge
lock
call
add
add
