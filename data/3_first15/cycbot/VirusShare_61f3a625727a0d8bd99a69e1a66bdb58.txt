fildl
cmp
testl
loope
rolb
ss
add
iret
fstl
add
fimuls
add
add
add
push
test
xor
add
cmp
subb
popf
icebp
add
pop
pop
ror
sub
add
add
add
add
fiadds
add
inc
add
jns
add
add
add
add
add
add
add
add
add
add
add
pop
or
mov
add
add
add
loopne
add
add
inc
add
add
faddl
add
xchg
add
add
or
add
add
add
add
add
xchg
add
aam
dec
fadds
add
add
add
adc
add
add
add
add
out
mov
add
add
push
add
xchg
add
add
add
add
movsl
add
add
jg
jae
add
push
rol
add
test
pop
add
add
add
add
add
push
add
add
add
daa
add
add
add
inc
dec
add
add
incb
add
add
add
jbe
add
add
add
add
add
add
add
add
loopne
add
add
and
orb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
or
mov
jle
filds
pop
addl
add
inc
dec
mov
add
add
mov
fwait
insb
std
gs
add
add
mov
or
movl
mov
mov
mov
add
stos
es
jl
add
mov
add
shrb
inc
mov
add
add
add
aad
add
add
add
add
inc
cmp
add
loopne
out
add
add
roll
or
add
cmpsb
add
add
add
lcall
add
and
mov
fists
pop
pop
pusha
lret
bound
cmpsb
imul
add
add
test
add
loopne
fmuls
add
fnstcw
add
jge
add
ret
add
add
add
dec
add
lea
add
add
fildl
add
add
add
add
pop
add
sub
sub
out
in
pop
add
addl
add
mov
loop
add
add
fmull
add
pusha
add
add
or
addb
push
add
out
xor
add
add
add
pushf
add
add
add
add
add
out
inc
mulb
sbb
clc
rcl
sub
add
add
bound
add
add
add
add
add
addl
icebp
add
jnp
add
add
add
incb
add
push
dec
add
add
add
add
add
add
cmpsl
add
add
std
rcr
lods
add
test
ror
lea
mov
add
add
jae
in
dec
stc
add
adc
lahf
add
mov
add
cmp
cmpsl
add
loope
add
add
mov
add
add
in
add
dec
add
add
add
int3
push
cmpsb
push
fldcw
or
sbb
add
add
add
dec
in
add
add
orb
add
add
add
jno
add
insl
dec
lea
add
add
add
add
add
jae
add
sub
in
add
add
add
add
add
add
add
add
test
adc
add
jae
data16
add
add
add
adc
cltd
gs
les
and
adc
add
add
add
add
push
repz
outsb
add
add
add
mov
add
inc
add
pop
add
add
or
add
add
add
cmp
add
add
add
add
add
add
add
loopne
add
dec
leave
pop
add
add
add
mov
xor
outsl
add
add
std
add
addb
add
add
add
add
or
add
add
jmp
add
ror
add
add
add
add
jnp
lret
add
cli
jne
aaa
add
add
and
scas
or
add
jae
add
jp
add
add
incl
and
add
sub
add
add
std
icebp
sldt
pop
add
lret
fsubl
add
add
add
add
add
add
add
add
filds
add
add
xchg
add
fldl
add
pop
mov
add
add
stos
add
add
mov
add
jl
add
add
mov
mov
add
stos
add
add
add
sub
add
add
add
add
and
add
cmp
cld
lods
hlt
add
jge
xor
addb
fucom
add
add
add
add
add
add
add
add
add
push
jns
add
add
jbe
add
imul
add
add
push
test
add
loop
add
pop
sub
add
add
add
inc
cmp
xor
leave
fwait
mov
add
add
add
add
jbe
add
mov
add
add
add
add
or
add
add
add
test
imul
add
add
add
xor
add
jno
faddl
add
add
idivb
add
rolb
add
lea
add
add
pusha
add
add
add
add
cltd
adc
outsb
or
lds
mov
add
cmp
xchg
add
add
add
add
add
sub
add
add
add
add
add
adc
add
and
add
add
xor
add
add
add
mov
add
insl
std
add
fdiv
add
add
aam
inc
add
add
add
mov
add
add
add
add
add
add
add
push
and
add
enter
dec
add
push
add
add
cld
add
ret
dec
ret
add
add
add
add
mov
mull
repnz
roll
add
mov
add
fiaddl
xchg
add
add
lret
add
add
add
add
add
mov
add
stc
add
add
add
jo
add
add
add
std
in
add
mov
loope
and
add
add
add
ja
add
add
add
xchg
add
add
add
mov
cmc
xor
xor
add
xchg
add
je
add
add
add
add
cwtl
add
add
mov
jb
add
mov
add
lock
into
add
add
lds
add
mov
add
push
aad
and
scas
scas
cmpsl
add
bound
xchg
xor
pushf
lahf
and
add
jl
add
add
add
xchg
pop
add
pop
pop
add
add
add
add
cmp
daa
add
lods
std
add
mov
add
add
add
add
pop
movl
add
pop
add
add
andl
cmpsl
add
add
add
adc
js
add
add
add
add
push
add
add
rolb
add
add
add
loop
je
add
add
repz
add
push
add
add
pop
add
cltd
mov
push
add
add
add
dec
add
add
mov
add
add
add
add
jmp
add
add
add
dec
add
add
add
add
add
scas
cltd
add
add
add
mov
roll
pop
data16
cmp
add
add
cld
or
add
add
add
jo
add
je
add
call
add
jo
fsubr
mov
add
add
add
add
cmp
push
add
xchg
add
and
add
inc
add
add
add
lds
jl
add
add
add
add
push
xor
add
mov
scas
pop
js
add
add
add
mov
cld
add
add
cmp
add
add
sbb
add
add
add
cmp
pop
repnz
add
add
add
add
add
in
fwait
popf
add
sahf
fsubr
add
push
add
add
add
add
add
jb
sbb
inc
test
add
push
add
add
push
and
xlat
add
or
add
add
add
mov
add
pusha
add
add
add
add
add
out
shll
add
fs
add
loop
andl
add
movsl
add
add
fildl
outsb
add
add
pushf
cmp
push
add
mov
add
add
add
cmpsl
add
add
or
jmp
in
add
jo
add
add
mov
jne
add
add
add
add
lret
add
test
popa
add
add
add
add
lret
add
out
mov
add
add
outsb
add
push
push
add
xor
add
add
add
add
hlt
lds
xchg
and
add
imul
jge
inc
add
lods
add
add
add
add
aad
add
add
add
sbb
cmc
subb
add
add
insl
lea
popf
add
add
sbb
dec
add
pop
repnz
mov
add
add
pop
add
lahf
and
add
add
cmpsl
dec
add
mov
testl
sub
add
add
add
add
inc
sub
add
adc
mov
add
pop
outsl
jmp
add
add
add
stos
add
add
add
add
pop
add
add
into
add
add
add
add
add
add
mov
mov
add
add
lahf
add
add
add
add
pop
add
adc
mov
aaa
add
add
add
mov
roll
jmp
add
inc
add
jb
add
add
add
lods
add
add
xchg
cmpb
add
fldt
sub
mov
dec
add
add
sub
add
add
add
fwait
add
add
xchg
add
mov
add
add
add
add
lahf
dec
add
outsb
add
add
pop
pop
add
add
push
add
push
add
in
aad
sldt
add
add
and
add
pop
rcr
jb
adc
cs
or
int
add
add
pushf
add
xor
jae
add
jl
push
add
add
scas
add
inc
add
add
add
loopne
inc
add
lock
or
fcomps
mov
add
add
in
add
add
add
add
add
adc
add
add
inc
add
add
fadd
add
mov
add
daa
add
pop
fnstsw
add
add
add
sbb
add
xor
add
add
rolb
inc
add
movsl
add
add
add
add
mov
add
pop
add
nop
mov
add
add
mov
inc
add
adc
add
dec
pusha
addr16
mov
add
add
push
add
add
add
add
sbb
out
push
imul
add
mov
daa
add
add
cmpsb
add
push
add
fwait
lods
popf
mov
cli
ret
fildl
add
je
mov
add
add
outsl
add
add
add
add
add
inc
add
nop
jmp
add
add
add
add
add
testb
bound
add
lcall
add
inc
add
mov
add
add
mov
add
mov
add
add
add
sbb
add
add
add
repz
xchg
hlt
rolb
add
ltr
add
mov
add
sub
add
hlt
adc
dec
add
add
scas
add
lret
jp
lret
add
dec
add
jl
addb
hlt
add
add
sub
or
mov
add
dec
add
add
mov
add
and
xchg
pop
add
dec
add
add
addl
movsb
std
add
rep
add
add
add
stc
add
add
add
add
add
add
push
add
and
add
jo
xchg
add
mov
mov
inc
sldt
add
lret
add
inc
aam
add
and
add
add
add
add
jbe
inc
add
add
add
fisubs
add
add
imul
fwait
add
cmc
jo
mov
add
and
into
jl
add
add
add
add
mov
clc
add
add
adc
add
add
jno
inc
add
and
fwait
add
add
cmp
fldenv
add
add
xchg
add
add
add
dec
sub
inc
add
add
add
sbb
and
add
sbb
add
add
sbb
mov
add
add
add
add
add
add
xchg
aad
inc
add
addl
xchg
add
add
add
add
add
add
add
je
add
add
loope
add
xchg
push
add
add
add
enter
add
add
add
pop
add
add
sub
add
add
test
add
add
mov
add
add
add
add
mov
push
icebp
add
add
and
fadds
add
add
add
mov
push
mov
test
add
add
addl
add
loop
add
std
mov
fiaddl
add
add
add
xchg
xor
mov
add
sub
add
add
add
add
add
push
jno
sahf
add
add
fldl
add
mov
add
lods
add
inc
xchg
sarl
xor
add
sub
add
add
sbb
shrb
inc
add
add
add
mov
add
add
add
add
add
push
repz
mov
add
inc
add
add
add
add
add
add
outsl
inc
add
and
add
add
add
add
add
add
cwtl
push
dec
add
cld
data16
add
add
in
add
cmp
add
add
add
add
rolb
add
add
add
add
adcb
add
add
sub
add
cmpsb
add
lret
pop
add
jle
das
jl
add
mov
add
add
add
add
add
mov
dec
add
adc
jae
add
adc
add
add
out
add
jne
push
loop
add
push
add
sbb
scas
das
dec
add
add
add
add
cld
add
add
add
add
add
add
arpl
add
or
add
add
add
add
pop
add
add
jno
repnz
add
add
add
add
add
add
pop
add
pop
sar
add
add
roll
add
add
pop
add
inc
add
add
add
xchg
pop
mov
add
add
add
test
push
add
add
icebp
add
add
wrmsr
add
add
addl
fidivs
jl
add
fisubrs
xchg
add
mov
add
mov
cmpsb
add
mov
add
dec
add
mov
imul
loope
add
add
ret
ljmp
add
add
add
lock
add
xchg
add
addr16
roll
add
dec
add
add
add
add
add
cmpsb
jl
add
add
lret
push
icebp
rolb
ljmp
xor
pop
xchg
pusha
add
insb
int3
jmp
add
add
jecxz
add
cld
add
add
pop
push
jmp
push
lods
add
add
fildl
jb
add
aad
add
mov
mov
add
add
add
add
fiaddl
mov
add
add
add
out
mov
add
mov
add
add
jp
add
add
add
sbb
adc
add
add
add
mov
add
add
mov
lcall
cmp
add
ret
adc
add
add
add
add
and
add
add
add
push
add
add
mov
add
add
add
push
pop
add
jb
add
add
pop
add
jle
arpl
add
add
add
add
add
jo
add
add
add
outsw
add
add
add
add
mov
add
add
add
add
add
pop
or
add
fildl
add
add
add
mov
add
jmp
xlat
push
add
mov
add
or
add
mov
add
add
add
add
enter
into
add
loope
and
sbb
loope
add
add
add
add
inc
add
add
add
jle
test
add
repnz
add
add
add
pop
add
stos
add
ss
rorw
add
push
add
add
cmp
add
mov
add
inc
movl
sti
add
add
add
xor
add
add
lcall
add
add
mov
lea
add
push
add
pop
pop
stos
add
add
add
add
lods
add
add
add
add
add
push
add
add
add
call
dec
cmpb
add
push
add
mov
repnz
add
add
add
add
add
add
hlt
add
pop
add
mov
ret
add
add
add
add
xchg
add
add
add
in
add
push
jb
in
add
add
jp
and
add
inc
fiadds
add
add
call
add
movb
add
mov
add
add
add
ret
aad
add
sbb
jmp
add
rolb
add
add
add
add
push
inc
add
popa
repnz
add
add
add
mov
mov
push
add
incb
inc
push
mov
add
push
add
xor
add
add
add
test
jg
xor
sldt
fcomp
mov
add
add
pop
xchg
pop
fwait
inc
scas
add
add
push
sub
add
add
add
add
movsl
add
dec
bound
add
add
add
add
add
add
pop
mov
add
add
push
adc
stos
add
mov
add
add
add
add
cltd
add
jmp
add
push
add
sub
add
mov
inc
add
add
xchg
je
into
push
xchg
xchg
add
or
add
add
add
add
add
add
add
cwtl
push
add
add
inc
add
add
dec
add
add
add
add
add
mov
repnz
push
mov
incb
inc
add
add
mov
add
add
add
or
xchg
mov
aam
in
xchg
movl
inc
add
sub
add
add
add
sbb
add
add
mov
add
add
mov
add
add
add
add
add
add
add
add
add
add
stos
add
add
inc
add
add
add
inc
add
add
loopne
add
add
mov
add
fnop
add
or
aaa
add
bound
add
add
add
add
add
add
add
add
or
mov
add
add
mov
dec
sti
add
add
dec
add
add
test
add
addr16
fiaddl
add
add
js
add
addl
add
insl
pop
mov
iret
lods
addl
ljmp
fiadds
js
add
add
add
add
mov
daa
add
add
add
fst
sub
push
xor
add
add
add
add
add
add
add
arpl
add
xchg
mov
and
cmpsl
add
add
stc
add
add
add
mov
sub
add
add
mov
in
inc
add
xor
outsl
add
fadds
jo
adc
bound
add
pop
out
jnp
add
sub
add
cmpsb
add
inc
and
pop
add
xchg
test
das
rcrb
adc
add
cmp
pop
sub
add
add
add
jp
add
sbb
pop
dec
add
and
lret
push
pop
mov
inc
mov
and
roll
add
add
mov
add
add
adc
add
add
add
add
pop
inc
add
add
add
xchg
push
in
add
add
in
jmp
adc
sub
add
mov
or
in
add
add
add
add
dec
push
add
add
inc
add
scas
add
fldt
add
ret
jnp
add
js
mov
and
xchg
jne
cltd
jmp
add
add
add
add
add
add
mov
add
pop
imul
sub
push
pop
add
add
and
bound
add
loopne
add
mov
popa
inc
add
xchg
adc
push
and
add
fadds
add
lea
add
add
add
lods
add
add
xor
jns
movsl
iret
mov
and
adc
ret
stc
nop
add
mov
add
add
imul
mov
add
add
movb
add
dec
add
add
add
add
sbb
pop
mov
add
add
push
add
add
nop
add
add
add
add
insb
add
cmp
sahf
stc
dec
add
push
pushf
add
push
sub
jecxz
jbe
add
pop
in
add
add
add
add
add
add
add
cmc
outsl
dec
jmp
add
pop
jne
add
add
add
add
lcall
mov
add
inc
add
add
add
add
add
rcr
pop
popl
pop
cmp
test
add
add
add
add
addr16
add
incl
mov
mov
outsb
add
add
cwtl
add
mov
push
movsl
add
mov
add
push
add
add
or
stos
sub
add
add
mov
sbb
add
add
add
add
add
add
add
lock
add
add
add
inc
adc
cmp
lds
mov
add
les
mov
xchg
cmp
add
add
add
add
sub
add
add
add
add
add
loope
mov
add
add
add
add
mov
add
add
add
flds
ret
add
stc
add
dec
add
add
add
add
add
add
add
add
rolb
inc
add
add
jl
add
faddl
add
add
add
lahf
in
jne
mov
add
testb
bound
add
das
int3
add
push
rolb
out
add
bound
les
push
add
dec
add
pop
add
add
clc
fwait
adc
add
add
cmp
cwtl
add
add
add
add
mov
sub
rolb
sahf
add
add
add
xchg
add
add
add
lret
filds
add
mov
jle
push
pop
mov
xchg
imul
in
add
push
xchg
push
add
mov
imul
add
mov
in
add
add
add
sub
add
dec
sub
add
add
add
add
mov
add
inc
add
add
add
add
add
stos
sbb
xchg
add
add
add
addb
rcll
add
gs
add
add
add
add
ret
add
add
add
add
mov
jbe
add
push
test
inc
test
add
add
add
add
add
popa
jne
add
add
lds
add
add
mov
shll
add
test
add
test
cld
add
xor
in
iret
add
lahf
add
add
adc
fdivrl
add
add
in
add
add
cs
add
outsl
das
inc
jp
ficomps
mov
add
add
xchg
add
add
pop
add
add
insb
fildl
mov
and
add
add
push
add
add
add
add
dec
add
add
add
add
pop
add
jne
mov
add
add
jg
add
add
add
add
add
add
xor
add
add
add
add
xor
add
and
add
add
add
add
add
jae
add
and
add
mov
add
add
add
dec
add
enter
mov
add
addl
add
add
add
add
scas
or
add
orb
add
andb
add
add
add
inc
add
pusha
add
test
add
add
add
jecxz
iret
lock
and
push
add
add
mov
repnz
add
add
add
in
jge
stc
aad
add
add
cmp
pop
inc
add
popf
pushf
xchg
add
jae
add
add
rolb
add
add
sbb
add
add
add
push
xor
add
mov
add
std
add
add
add
add
loope
add
jecxz
repnz
add
int
cmp
mov
add
add
lret
mov
add
add
pushf
adc
add
jns
add
out
cmc
jecxz
add
mov
add
add
add
add
add
add
add
add
add
sub
cmp
add
mov
add
sbb
cmp
filds
sub
add
add
add
mov
add
adc
addl
add
outsb
pop
add
add
int3
add
add
add
arpl
cli
mov
add
add
fisubs
sub
add
dec
add
rol
add
jnp
inc
add
add
add
dec
add
add
adc
cwtl
sub
jmp
dec
add
add
jle
add
fsubp
xchg
sbb
sbb
rolb
ret
dec
ret
lods
mov
and
add
add
add
add
or
add
add
rcrl
push
inc
cmp
add
add
cmc
mov
add
add
add
add
add
add
add
add
xor
add
add
add
rcll
lods
add
add
lret
cmp
mov
add
inc
add
add
add
add
add
std
add
add
mov
lret
add
add
inc
dec
jp
mov
add
add
xor
add
xor
jp
add
add
add
out
add
out
add
mov
xor
add
add
mov
mulb
add
and
aaa
add
add
stc
xchg
or
add
add
add
adc
pop
add
add
stos
add
dec
out
je
stc
fistpl
add
ret
movl
add
lea
add
add
dec
add
add
add
jo
add
add
mov
add
add
add
or
add
add
add
and
push
add
flds
std
add
iret
add
add
add
in
fldl
add
cld
add
js
add
flds
test
push
mov
mov
add
outsl
add
add
add
cmp
add
add
or
add
xlat
xor
add
add
xor
add
popl
add
add
mov
add
int
sldt
lods
mov
add
int
add
add
cmpsl
add
jnp
add
cli
add
scas
add
push
add
mov
add
add
cmp
add
add
jns
inc
mov
add
mov
add
add
xor
add
add
or
add
out
adc
add
add
add
ljmp
add
xchg
xchg
add
jp
addl
add
add
rolb
and
das
add
add
xchg
or
loope
orb
aas
add
add
and
add
flds
cmp
add
arpl
add
or
add
add
add
clc
jmp
add
add
outsl
add
add
add
add
add
add
add
sub
add
add
add
add
add
loopne
push
push
add
cmp
add
add
lods
add
add
aam
jb
add
add
mov
add
pop
add
add
add
xchg
add
add
add
pop
pop
rcrb
add
aam
add
mov
add
test
add
add
add
out
and
add
add
in
sarb
add
pop
or
pop
add
add
or
inc
add
add
add
jg
add
add
or
inc
add
add
add
movb
pop
add
pop
add
fiadds
add
dec
add
add
add
mov
add
add
dec
add
add
insl
add
xchg
add
dec
add
add
in
pop
push
mov
addb
add
mov
add
and
add
add
add
pop
add
add
adc
jno
add
je
insl
add
aaa
add
add
add
fsubrl
lods
add
add
add
add
push
ljmp
sti
and
dec
add
lcall
add
repnz
add
out
add
add
add
add
add
add
mov
add
add
add
fiadds
test
xlat
add
jl
or
add
add
add
sub
add
add
or
sub
add
pop
add
add
out
jl
add
add
push
add
movsl
add
add
push
add
add
add
add
xchg
xchg
mov
mov
add
add
sbb
inc
cmpl
add
xor
add
add
andl
add
add
add
add
sbb
pushf
jge
sbb
and
verw
add
add
add
xlat
test
hlt
add
inc
add
lds
test
add
pop
add
push
add
add
add
mov
add
dec
mov
add
testl
pushl
add
add
add
ja
fiaddl
or
repnz
dec
add
add
add
mov
add
add
adc
add
add
add
mov
mov
add
add
add
add
add
add
add
stos
add
and
push
add
testl
add
add
pop
add
add
add
xchg
add
loop
add
add
call
pop
add
add
add
outsl
movsb
add
add
rorl
rcrl
add
add
add
lds
add
push
add
add
add
add
xchg
test
movsl
cmp
push
xchg
add
add
add
dec
in
xor
add
add
adc
add
pop
into
add
add
add
mov
jmp
add
add
add
adc
test
add
nop
add
ja
add
add
add
add
add
popa
xchg
add
add
adc
push
add
add
lock
add
add
add
add
xor
add
push
xor
add
add
add
add
add
pushf
add
addl
add
add
stc
out
imul
lds
add
add
add
add
add
aas
add
add
aad
add
jno
outsb
add
add
pop
add
xor
add
add
add
jle
add
add
add
add
push
sti
lea
push
add
add
lea
lret
inc
fadds
popl
add
outsb
add
out
into
add
add
add
jmp
cmp
fdivrs
add
adc
add
jmp
add
add
add
adc
add
add
ds
aaa
xor
add
sahf
add
xor
add
xor
add
mov
adc
add
popf
add
not
add
adc
add
xlat
add
add
add
add
cmp
add
add
add
add
rcrl
mov
add
add
add
add
mov
add
add
add
add
adc
add
jl
add
mov
add
add
add
iret
pushf
add
add
add
add
add
add
add
push
add
add
add
xor
adc
out
add
add
add
ja
add
add
mov
or
add
xlat
mov
mov
push
fiaddl
add
xchg
add
add
and
add
test
xor
add
add
std
add
add
add
add
pop
add
add
add
add
add
xchg
je
push
add
mov
inc
add
mov
add
add
add
add
mov
scas
sub
add
xchg
dec
lret
sbb
inc
or
fimuls
nop
pop
push
adc
add
add
add
dec
enter
add
xchg
out
sub
and
add
add
add
xor
add
add
add
push
xchg
xchg
add
add
lret
xor
aas
test
in
popl
add
jmp
add
testb
add
xchg
incl
add
jns
cmp
add
xlat
add
add
dec
add
jno
testl
add
xor
add
add
add
add
add
add
add
add
stc
add
add
cmpsb
dec
sbb
add
add
push
add
les
add
add
ja
add
pop
add
add
clc
movsb
add
add
mov
incb
add
add
add
add
add
add
add
add
add
test
add
pushf
add
pop
add
add
aad
mov
xchg
add
add
add
les
add
les
add
add
add
dec
jecxz
arpl
sub
mov
mov
bound
add
add
add
and
in
jecxz
dec
add
sub
add
add
add
sldt
das
pop
and
mov
add
add
push
add
xor
add
incl
add
add
data16
add
add
add
in
roll
jle
cmp
add
add
add
repnz
hlt
add
add
icebp
add
add
cld
jp
add
add
add
add
aaa
or
push
stos
inc
dec
add
add
inc
add
push
xchg
popl
add
out
add
add
loopne
in
add
add
addb
add
adc
mov
add
add
ficompl
fwait
arpl
add
add
push
add
add
add
lods
add
add
add
add
cld
mov
loope
add
rcl
in
add
dec
mov
outsb
add
add
jbe
add
add
add
cwtl
add
push
jnp
add
add
add
out
add
jl
ss
add
sub
lods
add
add
sarb
add
add
add
int3
add
or
add
popl
add
add
add
add
push
add
cmp
mov
cwtl
add
add
das
mov
add
sbb
pop
cmp
add
in
jo
add
add
xlat
add
add
jno
mov
shrl
xchg
in
add
mov
lock
or
add
add
sti
adc
add
add
jmp
add
xchg
inc
push
add
sldt
add
add
add
das
add
add
sbb
ja
in
addb
add
xor
jp
stos
add
add
xchg
add
mov
add
add
ret
add
cmp
xchg
pop
test
popl
mov
add
or
or
add
add
lret
add
add
add
add
add
in
add
movsb
add
add
jo
add
divl
add
push
mov
rolb
add
outsl
add
mov
imul
add
and
add
sbb
add
dec
add
add
add
xor
add
ror
add
in
add
xchg
add
add
add
add
fsubr
dec
add
dec
out
add
add
add
adc
add
add
inc
dec
imul
add
xchg
pop
add
add
add
mov
add
sub
adc
add
add
add
add
add
add
add
add
dec
add
add
mov
sub
cmp
jp
add
add
add
add
mov
add
and
sub
add
add
mov
and
int
add
add
sbb
add
mov
inc
add
rolb
add
aad
add
or
mov
xchg
test
in
add
dec
add
cwtl
pop
cld
js
aam
jb
add
add
add
add
add
dec
bound
mov
js
add
dec
pop
add
add
add
test
cmpsl
add
add
add
test
add
add
cld
mov
add
add
add
add
add
add
sub
dec
jns
mov
jo
into
add
add
xor
add
add
add
pushf
add
leave
add
pop
cmp
sub
lret
dec
add
aas
stos
add
hlt
add
stos
add
mov
mov
add
pop
xchg
add
call
add
enter
add
xchg
add
or
test
ret
pop
add
int
xchg
in
mov
adc
add
add
add
add
loop
test
ret
ljmp
enter
add
loopne
stos
add
add
jo
add
push
add
rcrb
hlt
aad
mov
mov
add
inc
add
jmp
add
add
add
add
pusha
add
add
pop
xor
leave
add
aad
cmp
add
frstor
xor
push
push
add
add
mov
add
add
add
add
add
add
aam
sbb
add
add
sbb
add
add
add
lods
test
cmc
push
add
mov
and
add
mov
add
loopne
add
mov
xchg
add
aad
add
adc
add
hlt
add
add
add
add
add
add
dec
add
pop
add
add
sbbb
add
add
add
add
mov
add
jmp
jb
lods
and
sbb
inc
mov
sbb
js
add
add
add
add
add
jmp
mov
pop
add
enter
add
add
add
add
jnp
add
mov
or
aaa
add
add
mov
add
cwtl
jns
add
pop
add
add
outsb
mov
and
add
mov
add
pop
add
lahf
rolb
add
add
add
add
add
fldcw
add
add
inc
shlb
stc
pop
add
add
add
aam
add
add
add
add
add
addb
add
add
add
or
push
fiaddl
es
out
fiadds
add
add
add
push
cmp
add
and
inc
jmp
add
add
add
lahf
stos
add
je
mov
add
mov
ret
add
add
aaa
add
adc
add
add
outsl
add
jle
or
add
add
add
imul
cwtl
and
add
add
fidivl
outsb
add
add
push
nop
add
add
add
lret
add
inc
add
addl
add
add
jp
add
insb
add
cmpsl
add
cmp
add
add
push
cmp
add
loope
scas
xchg
add
mov
je
add
add
add
and
jg
add
add
add
xchg
jmp
outsb
add
add
ds
jge
add
test
les
inc
add
mov
add
add
fisttpl
pop
sub
les
cmp
out
xor
fcmovnb
and
test
add
mov
add
dec
mov
add
jmp
add
add
in
rolb
add
mov
and
cmp
fcomip
xor
add
add
punpckhwd
scas
in
ds
adc
ljmp
xchg
add
add
sahf
out
add
add
repz
das
xchg
daa
add
lock
sub
add
add
and
add
add
ljmp
xor
add
push
add
test
add
add
adc
push
jo
in
add
mov
loopne
pop
add
aaa
add
cmp
add
cmpsb
add
cmp
xor
add
xchg
add
add
add
add
add
add
add
add
add
add
flds
test
add
cmpsl
add
add
add
add
push
add
xchg
rolb
add
add
add
add
add
add
dec
or
mov
add
xor
sub
add
push
jmp
add
add
xchg
out
rolb
lahf
add
inc
bound
add
lods
inc
test
add
cmp
add
mov
add
mov
add
add
inc
add
das
repz
xor
add
int
movb
rolb
dec
and
add
mov
fmuls
add
add
call
cmp
xchg
add
push
add
jg
add
push
fisttpll
fadds
add
add
add
inc
add
add
rcll
add
bswap
add
mov
call
mov
add
ret
add
add
insl
div
pop
mov
imul
add
add
dec
add
add
add
fiadds
mov
inc
cmp
add
add
add
add
add
lea
xor
lods
les
incb
add
add
add
add
add
xchg
add
add
outsb
sbb
add
xchg
cld
add
add
add
add
jmp
add
sub
add
push
add
jp
pop
mov
fiaddl
mov
add
add
add
add
arpl
xor
add
add
add
in
dec
insb
mov
jne
add
lret
add
cmc
add
add
add
add
add
mov
stos
add
add
adc
add
xchg
add
int3
add
adc
mov
add
cmp
add
add
add
add
add
push
add
add
add
pop
test
cmp
ljmp
add
pop
andl
inc
pop
pop
add
add
push
hlt
add
or
add
add
add
push
add
cmpl
push
add
ljmp
cmp
add
add
add
add
add
or
add
adc
adc
add
adc
add
add
add
cmp
add
mov
add
add
add
fs
xchg
imul
jmp
add
add
leave
dec
jno
add
add
push
add
add
push
imul
inc
add
add
add
add
add
push
or
add
add
add
inc
add
fldl
add
add
add
pop
add
add
add
add
and
add
cld
mov
pop
add
ljmp
add
bound
sbb
add
add
adc
add
rolb
dec
add
add
into
add
cmp
add
push
jecxz
push
and
add
add
rcl
add
ret
add
add
add
add
mov
add
inc
add
scas
add
das
add
cltd
jno
add
add
lret
movsl
data16
or
add
rcll
pop
add
add
add
and
or
xor
add
adc
movb
or
shrb
add
add
pop
hlt
jmp
sub
pop
add
test
add
add
push
add
add
pusha
push
iret
add
add
add
sub
and
in
add
andl
out
add
testb
call
js
jne
test
add
add
add
movsl
xlat
cmp
lock
in
add
pop
ljmp
add
faddl
add
add
dec
add
adc
add
and
add
add
add
mull
add
add
add
add
push
add
add
push
inc
xchg
scas
add
dec
arpl
add
add
les
mov
stos
jnp
mov
add
add
add
add
add
xchg
add
add
and
jno
add
mov
lock
jle
add
xchg
pop
add
subl
add
xor
add
add
mov
aas
je
ja
repnz
add
add
and
add
add
add
xchg
add
add
inc
add
add
dec
and
ljmp
add
cmpsl
add
add
pushf
add
icebp
popf
add
cmpb
add
add
dec
add
add
add
and
dec
nop
add
loopne
mov
add
add
sti
lea
add
pop
add
add
add
insb
add
jecxz
add
add
add
add
add
cmpsl
add
incl
ret
add
add
and
or
stc
bound
dec
inc
pop
js
add
notb
xchg
add
xchg
add
loop
add
add
sbb
add
mov
push
lahf
repz
add
add
add
add
add
lcall
cmp
add
add
add
add
xchg
add
scas
add
add
std
mov
add
add
push
add
add
lock
mov
mov
add
pop
add
add
add
bound
add
inc
add
add
and
and
jmp
add
shlb
add
add
ds
add
popa
add
push
add
add
or
add
clc
mov
add
add
push
add
sbb
add
add
add
add
add
cmp
add
add
add
push
push
rolb
add
add
push
in
cmp
add
add
add
jns
roll
mov
mov
inc
add
or
fiaddl
andb
add
add
add
add
out
add
xchg
addl
add
add
add
add
and
insl
sbb
add
sti
add
add
mov
add
fldl
inc
cwtl
fldl
push
ljmp
add
adc
test
add
pop
adc
and
xchg
add
dec
add
add
repz
add
add
add
cmpsb
add
add
xor
fldl
and
add
mov
lods
add
add
jl
push
add
flds
add
jo
sbb
add
add
add
loop
add
mov
lock
inc
add
add
add
dec
dec
daa
add
roll
cmp
add
add
add
add
add
add
add
add
add
add
add
inc
pop
add
jae
loopne
mov
fldcw
pop
add
add
add
add
and
lock
add
add
adc
add
add
mov
add
mov
outsl
add
addl
add
stos
add
loop
add
add
add
add
add
ret
data16
sahf
add
add
add
xchg
shlb
fsts
sbb
add
add
add
inc
add
add
cmpsb
push
add
inc
mov
push
xchg
mov
add
add
enter
add
add
add
add
add
add
add
test
add
adc
xor
xchg
mov
add
or
testl
add
add
add
fildl
add
xchg
imul
repz
add
add
add
add
lods
add
add
popf
add
cmp
add
add
fiaddl
je
and
add
out
filds
add
adc
aas
add
pop
add
add
add
xchg
js
jno
add
add
movl
add
leave
jbe
insl
add
add
adc
add
add
adc
add
add
add
push
out
add
add
inc
sbb
add
mov
pop
stc
add
add
add
add
cs
add
enter
add
inc
add
add
add
add
add
or
add
sbb
add
mov
add
push
mov
add
add
adc
dec
add
add
add
add
add
add
add
add
aad
add
add
add
add
add
jne
scas
lods
add
add
add
jecxz
pusha
mov
clc
add
add
add
add
add
adc
fiadds
add
add
jo
add
add
mov
rolb
add
dec
add
adc
cmpsb
loopne
cmp
loope
add
add
add
add
aam
add
add
add
add
push
add
add
add
add
add
add
cwtl
mov
dec
cltd
add
add
jmp
add
add
add
pop
fiaddl
mov
add
add
add
add
fstpt
add
insb
xor
pop
mov
add
add
xor
adc
add
add
mov
add
mov
add
jae
andl
add
add
add
push
add
aam
add
add
add
popf
or
add
add
add
dec
dec
add
adc
add
add
add
scas
add
add
pop
add
ja
adc
testl
add
inc
add
add
add
add
sarl
add
and
add
add
add
add
add
add
jns
into
add
add
push
stos
add
add
add
jle
add
add
push
add
roll
inc
sub
add
and
int
add
out
add
add
add
das
add
add
add
rcrl
add
add
add
add
add
add
loope
dec
add
test
add
add
add
sbb
pop
add
add
pop
add
imul
add
add
add
add
add
jnp
push
add
add
jb
test
add
add
adc
add
fdivrl
add
push
sbb
loope
add
add
add
mov
add
add
add
rolb
add
add
dec
clc
repz
add
adc
adc
xchg
adc
add
add
add
test
cmpsb
add
add
add
aas
into
dec
fwait
mov
rolb
test
add
iret
in
add
add
dec
add
add
add
add
add
movsb
imul
inc
add
add
add
mov
xor
add
add
rolb
add
add
dec
add
add
add
or
leave
add
push
add
mov
add
add
add
add
add
add
add
mov
add
cmp
add
shrb
add
add
add
xor
mov
add
add
add
flds
test
mov
add
mov
add
add
lahf
lds
out
out
pop
add
add
add
mov
lock
add
add
add
add
add
add
pop
addb
movsb
and
add
add
add
add
add
inc
add
lcall
mov
add
rolb
add
jge
xlat
jnp
xchg
jmp
add
adc
dec
add
add
add
add
pop
add
xchg
add
in
mov
test
lret
jne
add
jne
push
add
sub
add
test
cmpsl
in
add
add
add
add
add
add
or
add
add
mov
add
addr16
add
add
shlb
add
push
push
xchg
enter
pop
add
add
rolb
add
lds
add
or
cmp
ret
push
add
add
push
add
add
add
mov
add
add
add
add
ss
add
add
sbb
add
xchg
cltd
add
add
add
xor
cltd
mov
pop
add
add
dec
add
add
inc
mov
sub
add
xor
add
mov
xchg
add
add
in
xrelease
jl
add
add
add
movsb
pusha
add
das
dec
add
add
pop
imul
dec
add
jo
rolb
add
pop
xchg
and
add
add
push
add
add
add
cld
push
add
add
xlat
out
add
call
add
add
pusha
or
add
sbb
inc
mov
add
add
sub
adc
add
jecxz
add
sub
lret
add
pop
pmullw
add
clc
add
xchg
int3
sbb
add
mov
pusha
andps
add
popa
lods
leave
inc
pusha
add
add
add
add
jbe
add
add
add
fwait
out
xchg
add
mov
add
add
add
aad
add
pop
add
lea
add
sbb
push
nop
ljmp
add
add
or
add
add
jle
in
roll
add
jns
add
add
add
mov
xor
pop
add
ljmp
add
mov
add
add
incb
and
add
lret
add
cmp
jp
add
add
add
add
add
adc
add
add
inc
rorl
leave
stos
add
add
rolb
add
add
add
stos
in
add
jg
xor
add
add
add
pop
add
add
add
add
shll
testb
add
xor
cli
add
add
add
add
add
sub
add
mov
add
incl
add
xor
fldl
ja
mov
add
add
mov
movsb
add
add
sub
add
add
mov
and
sub
or
pop
add
add
add
add
add
add
add
add
add
or
add
add
icebp
add
jp,pt
sbb
out
add
add
add
xor
add
roll
add
add
add
add
pop
add
add
and
add
add
ja
push
add
imul
add
add
sbb
cltd
add
fcmovnbe
add
add
dec
add
aam
add
add
add
sub
jo
add
cli
add
sbb
mov
push
add
mov
add
andb
int
sub
adc
add
filds
inc
iret
add
add
add
inc
add
fadds
mov
inc
add
sub
add
add
add
mov
add
add
dec
add
add
push
add
jb
iret
add
add
sub
add
loop
jb
loopne
add
add
cwtl
and
add
or
push
add
adc
nop
cmp
add
add
add
add
add
add
add
or
insb
pop
add
jmp
add
add
sbb
dec
add
filds
aaa
and
jae
or
add
add
add
jo
add
add
cmp
add
add
mov
icebp
and
add
sbb
add
add
add
hlt
add
add
add
dec
add
add
add
ret
sbb
add
flds
add
add
add
insb
aaa
add
add
jne
add
push
ja
xchg
faddl
ljmp
add
add
add
add
add
add
popl
sldt
mov
push
jns
sti
add
add
add
sahf
adc
add
xchg
sbb
push
sub
roll
add
leave
add
add
jno
push
scas
add
add
addl
mov
add
push
add
add
push
rcl
add
add
movb
push
add
add
stos
add
add
movsl
add
subb
mov
lldt
jmp
add
add
fsubs
add
add
cltd
add
inc
mov
add
add
dec
add
xchg
add
std
mov
xchg
lods
dec
add
add
add
add
ret
add
add
add
add
add
add
stc
add
mov
add
movsb
sub
add
add
and
repnz
add
add
add
add
mov
fnstenv
stc
add
add
add
add
add
add
add
addl
xor
xor
add
mov
add
add
add
mov
call
add
add
les
arpl
add
add
cld
mov
add
add
mov
add
adc
adc
xchg
add
jle
add
xchg
add
add
add
add
or
add
aam
pop
add
add
jnp
pusha
out
add
testl
add
stos
cwtl
add
mov
add
pop
ret
add
or
add
add
add
add
pop
add
adc
add
pop
fadds
sbb
cli
xchg
add
add
fldl
add
add
fwait
add
or
dec
add
add
push
add
xor
add
add
mov
push
sbb
sbb
insl
add
cs
add
cli
add
add
test
add
sub
add
int
add
mov
filds
add
imul
add
jle
add
add
lods
add
add
add
add
addl
mov
fstl
add
add
and
dec
loope,pt
add
add
add
add
add
add
mov
movsl
add
add
add
nop
add
add
add
addr16
add
add
int
add
add
add
lea
ds
or
add
add
inc
xlat
or
add
or
push
add
add
insb
dec
add
add
lahf
add
add
add
fiadds
add
lds
add
add
add
push
add
and
lcall
fstl
add
mov
out
xchg
loope
xor
mov
add
add
mov
add
je
fiadds
push
movb
add
adc
mov
add
lcall
dec
add
add
fldcw
jb
add
push
add
add
leave
sub
add
push
mov
add
dec
add
add
add
add
add
add
add
loop
cmp
add
add
add
add
les
into
inc
incb
sub
push
xchg
add
add
add
jg
add
insb
xchg
pop
add
pushf
mov
stos
out
add
fs
add
add
add
add
add
add
add
jns,pn
add
add
ret
add
ds
add
add
add
stos
add
add
add
popf
add
add
add
add
mov
cli
xchg
repnz
add
mov
add
add
add
and
add
ds
test
mov
mov
add
add
aaa
add
divl
add
add
and
or
add
add
add
mov
add
add
add
add
add
add
add
xor
xchg
add
add
add
test
inc
push
add
push
add
jmp
or
add
test
add
xor
add
repnz
add
or
add
add
out
add
stc
add
add
add
pop
add
add
add
enter
add
add
add
mov
add
add
add
add
add
ja
lret
add
pop
add
in
add
sub
jo
inc
add
add
dec
sar
add
jle
add
add
add
add
cmp
add
xor
add
mov
add
mov
add
add
add
add
jecxz
add
ja
add
jnp
pusha
or
add
ficoms
add
or
add
sub
ret
add
xor
add
add
cmp
add
add
adc
add
addl
mov
imul
add
add
xchg
mov
add
sbb
add
add
sub
add
fadds
les
mov
ret
add
movsb
add
add
pop
lret
or
add
add
add
xchg
ret
add
cld
add
add
xlat
dec
xchg
add
cltd
add
add
fcmovnb
add
or
add
lahf
mov
add
dec
add
add
sbb
add
mov
add
add
inc
adc
add
or
push
pop
add
add
addb
add
add
add
sub
add
lret
push
jne
add
add
lret
add
add
stos
add
add
add
add
add
jg
add
pop
adc
add
mov
sub
test
add
add
add
filds
add
adc
add
andl
inc
add
add
add
loope
inc
sub
inc
add
xor
mov
add
popa
popl
loopne
cmp
xor
outsl
outsl
or
ret
xchg
lods
add
ret
add
add
push
push
add
add
add
add
mov
jb
xor
insl
add
add
add
pushf
add
push
add
add
add
mov
add
add
out
sahf
pop
lds
mov
repnz
or
add
and
add
mov
add
cmp
cld
shlb
add
mov
add
sldt
add
cld
add
testb
add
sub
hlt
frstor
lods
filds
add
mov
add
mov
add
add
scas
jmp
add
ret
add
jle
add
add
xchg
jae
cmpsb
add
add
add
popf
lea
sbb
add
add
xchg
popf
xchg
add
inc
rolb
scas
add
add
add
sbbb
add
add
ss
sbb
mov
add
pop
addb
mov
add
lcall
lea
repnz
mov
add
add
dec
lds
add
add
add
add
add
adc
pop
add
add
mov
add
scas
xchg
push
dec
adc
add
add
add
pusha
sub
add
add
jno
sti
add
pop
add
add
xchg
add
add
and
add
add
add
int
loope
add
pop
add
data16
add
add
add
inc
add
sbb
xor
add
outsb
jb
mov
or
sbb
loop
sub
jg
add
loope
lods
adc
stc
add
incl
add
add
sysenter
or
add
add
stos
add
jne
add
xchg
add
jp
add
out
lcall
add
add
adc
add
add
add
add
add
add
add
cli
push
jo
add
add
add
add
add
cld
cmp
jae
mov
add
add
add
add
push
add
xchg
dec
dec
add
jg
stos
add
add
add
add
xchg
stos
in
add
add
add
push
sbb
add
add
add
add
add
add
add
add
rcrl
add
add
addr16
mov
leave
cmp
add
cmp
add
rcll
add
add
pushf
lea
add
mov
add
add
mov
imul
aaa
adc
add
jo
mov
jno
add
mov
add
jns
je
add
lahf
add
add
add
lea
add
out
add
clc
xor
add
movb
add
mov
jae
add
add
add
add
add
nop
add
add
add
mov
add
push
add
add
or
xchg
pop
or
add
lods
loopne
add
pushf
add
push
add
xchg
add
iret
add
add
jne
add
add
add
mov
inc
add
add
add
add
add
add
or
inc
xchg
add
add
loopne
add
into
add
repz
mov
add
add
dec
add
add
add
loop
pop
add
add
add
movsb
add
add
add
add
add
add
add
add
jmp
add
add
xchg
add
add
add
add
mov
add
add
in
add
insb
add
sub
add
add
add
add
sbb
jb
add
add
add
adc
ret
add
mov
sub
insl
mov
add
add
add
mov
jge
add
scas
out
sbb
nop
mov
add
add
lret
add
mov
loop
sti
add
add
sub
add
add
add
cmp
pushf
add
add
add
add
add
roll
and
nop
add
add
add
add
add
add
dec
add
add
add
add
add
test
stos
fadds
daa
stos
add
push
pop
arpl
add
add
aaa
mov
add
jno
add
add
add
out
and
add
add
aas
ret
mov
cmpsl
add
lret
sbb
add
add
add
lods
adc
pop
jno
test
mov
stos
cli
add
push
cmc
xchg
ja
add
xchg
push
add
lods
add
add
mov
add
jbe
add
add
sarl
fadds
sub
push
mov
add
add
add
add
mov
sub
fcmovne
add
add
add
add
jo
add
add
add
pusha
add
add
mov
cmpsb
and
add
add
add
incb
add
add
jle
add
ja
jl
add
add
enter
testb
jo
cmp
shll
add
add
add
inc
add
stc
outsl
lret
add
add
out
add
mov
mov
add
pop
add
rolb
add
cmpsb
lock
leave
out
add
inc
add
bound
mov
add
add
add
add
add
mov
add
add
add
add
add
mov
inc
add
dec
orl
add
add
add
testb
add
cmp
dec
outsb
ret
add
add
add
lods
add
add
add
add
jb
add
xor
iret
inc
add
add
add
add
add
add
pop
add
add
cmpsb
data16
add
add
add
add
add
add
add
xchg
add
lahf
add
add
daa
add
clc
add
add
add
pop
roll
repz
movsb
repz
add
sbb
add
stc
add
add
and
addb
sldt
add
or
add
test
add
add
add
cmp
add
add
add
sbb
aaa
movsb
mov
sbb
add
pop
add
add
sbb
ja
inc
add
add
push
add
add
add
add
mov
push
add
inc
sub
loopne
add
add
lret
add
add
add
add
dec
add
xor
mov
add
or
cli
add
push
add
add
xlat
add
add
or
add
add
adc
add
add
add
add
adc
addr16
push
add
add
pop
mov
xchg
movsb
test
test
jg
aaa
in
add
out
sub
add
sti
add
pop
push
add
add
decb
or
add
add
add
mov
or
add
add
rolb
sub
add
add
mov
add
add
add
add
jl
add
and
add
add
add
add
jo
add
push
add
add
incl
xchg
add
add
add
add
inc
imul
add
add
add
repnz
icebp
add
add
xchg
sbb
icebp
lock
add
inc
add
bound
xlat
add
cmpsl
sub
add
add
add
add
add
add
add
xor
cmp
leave
add
add
add
add
add
js
add
add
push
aaa
add
add
sbb
fiaddl
and
inc
or
add
inc
add
add
add
add
add
add
add
cltd
lret
mov
push
lcall
cmp
add
add
adc
hlt
add
add
lahf
add
add
lret
add
add
inc
adc
addl
add
add
bound
out
aas
add
push
pop
add
add
add
add
add
add
add
add
add
xor
arpl
sti
add
sub
mov
add
add
push
add
add
add
sbb
add
add
mov
add
add
add
ljmp
mov
in
dec
xlat
inc
add
add
dec
imul
shll
add
add
add
add
add
add
sbb
add
inc
jg
lcall
add
hlt
sub
jecxz
add
cmp
add
int3
add
dec
cltd
out
bound
add
add
add
sbb
mov
mov
jnp
add
push
add
adc
add
pop
adc
add
add
add
inc
add
std
push
add
add
add
aam
push
cmp
loopne
add
add
mov
add
add
add
add
add
dec
add
imul
add
add
add
add
add
add
add
mov
add
add
adc
add
lea
jge
sub
push
add
add
add
add
int3
mov
add
addl
add
add
add
mov
jp
sub
sub
add
flds
ds
adc
call
add
lds
lahf
sub
add
add
mov
add
add
add
add
mov
pusha
xorb
push
ret
sti
push
push
mov
mov
loopne
mov
sub
flds
scas
sbb
cmp
add
mov
mov
and
into
mov
add
mov
mov
push
test
pusha
shll
subb
in
into
jo
jp
jmp
loopne
and
mov
arpl
andb
aas
jp
mov
jecxz
testb
mov
imul
push
cmp
test
mov
loopne
daa
lea
push
mov
bound
dec
iret
or
mov
adc
pop
mov
stc
pushf
fisttps
mov
fstpl
push
adc
xchg
and
loopne
cmp
loope
dec
testb
inc
insl
push
repz
cmpsl
add
cmp
mov
xor
xchg
out
lret
adc
rolb
dec
inc
call
andl
test
xchg
push
sbb
cs
inc
popf
shll
adc
sub
pusha
push
fcmovnb
fcomip
rclb
add
cld
loope
out
ret
std
mov
add
pusha
jp
push
call
inc
cwtl
stos
inc
rcl
stos
pusha
loopne
addb
xchg
stos
and
iret
repz
je
aas
jecxz
movsb
loopne
movsl
into
mov
ljmp
mov
jne
mov
push
mov
jl
cmpsb
and
add
inc
push
pusha
call
dec
popf
xchg
jmp
repz
pusha
jae
push
scas
inc
and
add
mov
add
mov
rcrb
pop
lret
add
mov
xor
enter
addb
fnstcw
xchg
out
jbe
sbb
mov
cli
adc
mov
dec
and
jp
xchg
jl
sbb
xchg
add
ljmp
int
sub
and
add
je
mov
jb
mov
mov
sub
subb
push
mov
pop
cmc
adc
into
mov
addb
xlat
call
mov
movsl
fs
lock
xchg
pop
and
mov
stos
popf
pop
xor
scas
rol
dec
inc
repnz
imul
cmp
add
inc
cmp
enter
add
fs
lods
pusha
and
addr16
loopne
xlat
dec
sub
inc
scas
enter
mov
insl
shlb
pusha
ret
jae
mov
xlat
or
je
andb
mov
mov
andb
hlt
or
cmp
pusha
scas
imul
and
jne
push
lahf
out
jno
dec
out
pop
rcll
imul
add
ret
lret
add
add
shlb
dec
lret
rclb
jecxz
mov
mov
shlb
js
sub
adc
add
loopne
lock
leave
into
sahf
pusha
sub
rolb
loopne
aad
out
jmp
and
inc
orb
jmp
inc
inc
insb
lds
xchg
inc
clc
cmc
push
cld
fsts
out
jne
imul
test
dec
mov
rol
cs
add
nop
push
xchg
add
inc
repz
add
imul
add
mov
data16
inc
fdivl
stos
add
mov
popf
adc
xor
inc
sbb
sarl
jbe
adc
pop
mov
jle
addr16
xor
jg
sbb
xlat
mov
sbb
aas
mull
test
inc
jno
push
int
xchg
xchg
xchg
push
rol
lock
cmp
paddw
cmpsl
and
sub
imul
movsb
add
aaa
pop
mov
and
and
inc
into
das
xchg
in
jo
dec
js
jbe
mov
mov
pop
mov
jo
add
and
pusha
or
add
inc
loopne
jg
data16
ret
popa
in
xlat
mov
lea
pop
nop
sub
out
outsl
push
pop
or
clc
mov
cmp
lret
sub
xor
add
iret
and
sbb
gs
pop
xor
in
mov
shl
das
jno
mov
jo
es
ja
shl
xor
mov
mov
je
add
jmp
pusha
aad
shrl
mov
pusha
loopne
xchg
pop
out
aad
jge
outsb
hlt
push
sahf
cmp
sub
loopne
mov
fwait
pop
out
xchg
pop
lock
leave
aas
orl
mov
mov
jmp
test
adc
ds
add
mov
rol
fcoml
mov
sbb
cmp
push
dec
jg
inc
loopne
push
pop
xchg
rolb
dec
fildl
mov
mov
ds
in
or
mov
and
and
into
sbbl
mov
push
and
inc
jle
rcll
loopne
dec
xor
pop
push
xor
rclb
sbb
jg
loopne
dec
adc
rorb
aad
jo
mov
inc
mov
mov
jbe
jle
lods
ljmp
nop
call
test
imul
dec
insb
mov
ja
insb
push
stos
dec
lea
pushf
push
mov
cmpsb
and
inc
dec
cli
push
das
outsl
das
loopne
mov
dec
xlat
cmp
movb
pop
push
cli
pop
hlt
fwait
or
inc
xchg
es
inc
fistpll
add
ficompl
subl
and
loopne
xor
add
arpl
loopne
aam
xchg
jae
or
testb
loopne
iret
fidivl
lock
cmpl
shlb
push
insl
inc
repz
sub
add
loopne
into
lods
shl
fmulp
mov
imul
push
out
add
and
add
pusha
mov
sar
je
xchg
push
fdivrs
xchg
lahf
les
test
push
pusha
and
out
lea
sub
and
iret
gs
cmpsl
je
int
outsb
add
mov
add
add
mov
inc
clc
call
lods
mov
bound
andb
and
mov
stos
add
mov
icebp
shlb
jmp
in
pop
or
pusha
andb
fildl
pusha
or
dec
mov
rolb
loope
call
push
test
jbe
mov
mov
sbb
or
lods
adc
push
xchg
fs
in
ja
dec
xor
push
rolb
mov
repnz
lret
adc
loope
stos
pop
imul
loopne
or
lea
rolb
testb
add
sbb
rolb
ljmp
rolb
js
push
addr16
and
adc
add
jne
sar
ror
add
mov
loopne
cmovs
add
cmp
lcall
xchg
bound
xchg
cmpl
inc
data16
push
clc
jae
cltd
aaa
ret
pop
std
imul
add
sbb
aas
addb
push
dec
push
dec
dec
sub
scas
add
cltd
push
or
mov
sti
mov
adc
stc
sub
not
repnz
xor
fprem
stos
shlb
movl
sub
inc
cltd
loop
xor
adc
or
pusha
push
xchg
jle
out
xlat
repz
xchg
mov
popa
test
inc
inc
in
pusha
add
lods
mov
inc
loopne
lcall
and
addr16
pop
xlat
or
loopne
pop
mov
mov
in
jecxz
mov
lret
outsb
out
pop
sbb
addb
pusha
push
mov
mov
mov
test
and
int3
xchg
loopne
addb
mov
sbb
shlb
xchg
cld
fistpll
rcll
inc
loopne
mov
cmpsb
andb
loopne
and
dec
shlb
cmp
rolb
cli
out
sub
cltd
mov
inc
test
shlb
outsb
adc
fs
sbb
repnz
in
pusha
rcrl
mov
add
cmp
jmp
jo
rcrl
sbb
std
mov
jp
cli
lret
dec
sbb
and
loopne
mov
fsub
push
andb
mov
jle
add
add
das
iretw
sbb
fwait
gs
mov
xor
push
mov
pop
xor
into
ret
lcall
mov
fldcw
add
fs
sub
addb
js
cltd
int
pop
dec
testb
and
xor
or
in
dec
subl
cmp
stc
mov
mov
or
mov
ljmp
jb
and
sbb
sahf
mov
pop
daa
inc
scas
mov
inc
mov
fdivrl
gs
xor
xchg
sbb
addb
and
jns
sub
cmpb
push
aas
dec
popf
insl
or
sahf
xlat
jle
insb
mov
gs
inc
mov
xchg
and
mov
aaa
in
or
addb
add
fsubs
iret
mov
and
pop
pop
cmpsl
ret
mov
sbb
cmp
pop
sub
loopne
sbb
mov
fldcw
or
inc
xchg
outsb
or
mov
ja
or
mov
repnz
insb
push
cli
sar
je
sahf
inc
fisttpll
dec
xorl
pusha
inc
pop
std
imul
lahf
into
dec
arpl
jg
fildl
andb
jbe
pusha
pusha
pop
pop
mov
push
jae
xor
push
adc
and
mov
mov
jne
pusha
pusha
popf
cmpsl
mov
test
pop
lret
mov
imul
lahf
iret
fcmovu
lock
int
bound
jle
inc
and
je
mov
pusha
popa
sbb
mov
sub
dec
push
mov
mov
and
cmc
mov
push
pop
xor
pop
adc
jb
pushf
sar
dec
xchg
pop
xlat
mov
ja
rolb
rolb
mov
notb
andb
xor
dec
cltd
or
push
pop
xchg
call
inc
int3
mov
sub
lock
js
addb
mov
xor
sub
jge
loopne
add
shl
xlat
mov
add
or
pop
dec
gs
cmp
filds
pusha
pusha
and
aad
insb
scas
inc
inc
add
mov
pop
fcoms
lret
rcll
inc
scas
inc
and
shl
sbb
mov
mov
loopew
andb
mov
rol
inc
ror
rorl
sub
inc
pushf
mov
lods
pusha
shl
xchg
setge
xlat
jns
jp
and
jne
xor
pushf
fldcw
mov
xor
inc
loopne
imul
xchg
jo
in
mov
jnp
mov
ljmp
xor
mov
sbb
shr
or
loopne
jecxz
xor
mov
cmp
mov
in
inc
mov
aad
mov
xchg
sbb
shrb
lahf
insl
lock
inc
adc
push
sub
push
std
pop
mov
imul
rol
xor
pusha
mov
mov
cmp
in
cmp
and
mov
sbb
outsl
je
pop
out
xchg
aas
stos
and
jge
xlat
jp
fwait
adc
or
inc
or
pusha
pop
repz
pusha
loopne
inc
push
pop
mov
das
push
sbb
test
ret
adc
iret
inc
mov
pusha
add
into
pop
mov
push
jne
insl
movsb
and
andb
ss
ret
lods
mov
movsb
and
push
push
sbb
add
inc
decb
shlb
mov
jns
mov
cmpl
xor
sbb
fnstsw
push
shrb
andb
ds
out
leave
xlat
cmp
mov
shlb
pusha
loopne
js
push
loopne
sub
sbb
pop
icebp
cmc
lcall
cmp
sarl
push
jb
ds
int3
icebp
push
popf
dec
add
mov
pop
mov
mov
sbbl
mov
sbb
push
pop
cltd
jge
jle
mov
mov
mov
add
push
test
pusha
dec
jmp
repz
in
mov
sbb
mov
push
cmp
pusha
int
repz
stc
xchg
sbb
dec
movsl
push
sbb
mov
add
je
cli
lea
adc
lock
lds
icebp
and
lea
jle
mov
into
add
pop
aam
imul
and
movsb
and
pop
push
xor
cmp
cld
sahf
dec
popf
loopne
sbb
inc
sbb
mov
xchg
arpl
cwtl
jbe
push
fstpt
fistps
and
cwtl
or
nop
bound
ja
and
addb
pusha
fsts
inc
mov
sub
shl
adc
imul
mov
push
daa
sbb
and
loopne
lods
xchg
inc
add
nop
pop
xor
repz
adc
xor
pop
popa
push
pusha
loopne
pusha
pusha
pop
les
cltd
push
insb
push
mov
aam
inc
loopne
and
mov
adc
jmp
and
jp
dec
mov
mov
cmp
rolb
loopne
call
lret
xor
xchg
jb
adc
mov
loopne
or
call
cmc
mov
mov
or
sti
adc
shl
dec
stos
sarb
xchg
add
adc
add
rol
shlb
lret
inc
dec
mov
push
je
cmc
pop
pop
dec
test
xchg
int3
scas
loopne
mov
inc
andl
pusha
pusha
adc
and
sbb
call
xor
fdivp
cmp
inc
imul
or
dec
cmp
pop
mov
loopne
out
insl
adc
lods
lcall
and
mov
test
jmp
jb
push
shll
jp
cli
mov
mov
xorb
mov
xchg
lret
and
pop
mov
ljmp
cltd
push
cltd
ljmp
das
aaa
sub
dec
mov
push
ficomps
mov
je
loopne
sub
pusha
mov
sahf
inc
pushf
mov
leave
adc
mov
icebp
cmpsb
and
jmp
dec
add
inc
je
sahf
xchg
mov
scas
mov
jb
movsl
out
enter
sbb
and
mov
loope
cli
dec
sub
xchg
add
mov
adc
push
sub
pusha
jb
jmp
out
mov
mov
mov
call
sub
lock
shll
stos
mov
cmp
add
dec
cmp
jge
xchg
adc
loopne
jae
mov
xor
and
xor
and
mov
daa
jo
lcall
or
push
inc
sbbb
das
push
add
scas
rolb
xor
into
mov
pop
dec
push
inc
jge
cmp
ja
imul
xor
mov
addb
sarb
xchg
mov
stos
andl
sub
insl
lods
mov
pusha
repnz
push
push
inc
fbstp
mov
add
adc
sbb
push
pushf
xchg
insl
mov
pop
out
out
cltd
hlt
dec
ss
pop
mov
movsl
push
inc
js
xor
mov
inc
mov
and
insl
mov
push
and
mov
mov
xchg
negb
mov
pushf
repnz
adc
adc
push
xor
push
rorl
shr
ds
pop
adc
jno
jbe
popa
push
int3
push
leave
push
cmp
gs
loopne
repz
and
andb
subb
push
sub
orb
jmp
pop
mov
inc
mov
jl
xchg
fcoms
xchg
int3
sarb
loopne
test
and
mov
inc
movsl
sti
rorl
add
mov
test
shl
adc
pop
int3
mov
push
in
incb
cmp
clc
pop
repz
je
loopne
pop
dec
sub
inc
sbb
sahf
cmp
dec
js
mov
adc
in
rclb
mov
rclb
enter
loopne
imul
lock
xchg
pushf
imul
mov
loope
xchg
jo
inc
mov
push
mov
add
push
push
push
push
xor
mov
call
cld
sub
inc
add
imul
nop
push
pop
and
cmp
je
push
push
push
push
push
push
push
bnd
mov
cmp
jne
es
add
cs
add
stc
mov
push
push
clc
call
test
jne
push
ret
jmp
lea
movl
push
push
call
inc
test
lea
je
movzbl
or
mov
cld
not
imul
and
es
call
jmp
sbb
add
pop
push
sub
push
push
inc
or
xchg
lea
cld
lea
lea
mov
cld
add
mov
mov
mov
sub
xor
repz
test
jne
jmp
xchg
je
xor
mov
jmp
js
cmpsl
nop
add
and
mov
and
nop/reserved
adc
push
shlb
addb
push
pop
call
cmove
aad
rcl
mov
cmp
xchg
enter
push
ljmp
sub
addb
pushw
mov
fisubrs
mov
pusha
sub
rol
or
pusha
xchg
cld
roll
mov
jg
std
shrb
jns
hlt
sub
pusha
adc
mov
cmpb
pusha
pusha
sbb
loopne
imul
mov
jb
popf
pop
jle
pusha
and
loop
rcrl
xchg
sbb
mov
outsl
jle
mov
pop
dec
in
or
in
or
les
pusha
loop
cmp
outsb
jno
int3
jl
lods
and
xor
adc
pop
es
adc
mov
mov
jecxz
jbe
cmp
addb
dec
sar
push
out
push
dec
test
dec
lcall
mov
dec
mov
movsl
add
hlt
mov
lods
in
mov
mov
adc
xchg
sub
mov
movsb
pusha
mov
addb
or
adc
movsb
and
sub
shrb
or
es
pusha
adc
xchg
outsl
jae
shl
stc
mov
shlb
pop
arpl
push
push
test
add
dec
xor
nop
xchg
sbb
and
or
addb
and
inc
inc
sarb
adc
mov
sbb
mov
jmp
sbb
ror
repz
push
imulb
aas
dec
test
and
shll
mov
loopne
je
mov
jmp
mov
adc
loopne
iret
mov
cmc
or
and
push
push
hlt
adcl
sub
sub
rolb
incl
sahf
scas
mov
mov
inc
fistpll
data16
loopne
and
sarb
pop
ljmp
loopne
pop
sub
pop
outsl
shr
je
pop
xor
mov
sbb
add
pop
lret
imul
cmp
scas
pusha
mov
or
add
insb
mov
mov
in
pop
pop
data16
lods
addb
mov
notl
inc
pop
push
inc
mov
and
mov
adc
dec
repz
mov
pusha
and
cwtl
test
and
mov
inc
gs
loopne
lea
negb
or
pusha
aam
out
pop
idiv
fdivl
xor
loop
pusha
add
push
in
lods
rorl
or
into
or
mov
mov
xorb
sahf
inc
xchg
das
lods
loopne
cmc
mov
int
in
jnp
andb
jmp
cli
mov
les
aad
addb
xor
and
xorb
adc
testl
loopne
mov
orb
and
fs
xchg
fsubl
inc
mov
negl
in
or
rolb
shlb
js
mov
movsl
mov
sbb
xor
inc
shl
movsb
pusha
addb
mov
cmp
inc
repz
sub
popf
test
and
filds
jbe
andl
cmp
test
and
aam
xchg
das
fdivl
sub
jns
shlb
mov
addb
pusha
or
xor
add
push
pop
pusha
es
and
in
shlb
int3
jns
fwait
mov
rcl
stc
daa
push
addb
lahf
test
add
sarb
shlb
ds
jbe
int
pusha
addb
and
jno
clc
xchg
addl
or
stos
inc
lock
out
pusha
mov
push
iret
mov
push
mov
cmp
add
mov
lock
cmpsb
add
jecxz
mov
or
and
xchg
stos
and
loopne
loopne
test
out
ss
or
icebp
rorb
mov
dec
lcall
testb
outsb
cld
sarb
push
pusha
pusha
faddl
add
jae
inc
cmp
xchg
ds
and
and
push
pusha
sub
mov
mov
inc
loopne
cld
into
sbb
test
sbb
popa
cmp
andb
mov
call
inc
sub
in
sbb
in
int3
ret
in
stos
pusha
mov
movsb
shl
and
loopne
xor
cmp
js
dec
adc
xchg
repnz
mov
in
mov
pop
pop
in
sbb
nop
jne
jl
sbb
jge
js
dec
test
sarb
sub
orb
pop
movsl
scas
inc
inc
cmp
js
and
roll
xchg
shlb
shlb
and
pop
mov
jb
sub
and
cmpsb
addb
in
shlb
test
addb
dec
cmp
cs
rcrl
sbb
xor
push
jecxz
push
rol
inc
popf
xor
rolb
and
loopne
adc
and
xchg
xchg
mov
pop
pop
mov
push
andb
mov
mov
sub
pusha
imul
jp
ljmp
loope
inc
add
jp
cmc
jns
popa
pop
ja
sarb
or
add
adc
stos
pop
adc
loopne
and
pop
lcall
fdiv
fsubrl
sarb
pop
imul
scas
and
or
sbb
xchg
aad
inc
loopne
mov
int3
mov
dec
fistpl
pop
or
or
adc
xchg
push
stc
insl
mov
aas
out
div
rcll
cmp
push
sbb
test
in
fldt
jl
ja
or
jge
cmc
cmpsb
mov
fisubl
rclb
shll
sub
inc
xchg
mov
out
leave
jae
fsubp
and
aas
jmp
outsb
gs
push
js
ljmp
mov
orl
mov
bound
ret
out
dec
push
push
add
jae
sub
rclb
daa
enter
mov
xorb
fstl
das
lea
mov
adc
and
fldt
add
mov
lahf
testb
lods
pusha
inc
xchg
ss
pop
into
int
inc
subb
clc
cmp
ljmp
push
aad
mov
loopne
jb
inc
xor
jge
ret
inc
sbb
dec
sub
sub
dec
jno
outsl
ss
lea
adc
mov
loopne
inc
popf
and
and
and
mov
jb
jecxz
pop
mov
fldl
aam
iret
xchg
pop
in
das
jns
sub
mov
mov
mov
cmp
fbld
inc
and
inc
in
int3
mov
in
adc
inc
jno
cli
mov
mov
adc
lock
inc
mov
imul
lock
mov
in
ljmp
ja
xlat
fdiv
push
mov
aam
and
fisttpll
hlt
pop
mov
cmp
out
mov
pusha
xchg
xchg
push
or
pusha
aas
lcall
cld
dec
push
add
inc
mov
push
pop
add
add
pusha
add
adc
pop
das
test
loopne
or
or
in
inc
add
pop
mov
fdivrs
xchg
loopne
inc
fidivrs
lret
int3
subl
pop
mov
pusha
pusha
das
fldenv
add
inc
lods
addb
shr
adc
and
xor
in
or
sarb
fucomi
sub
pusha
xor
sbb
dec
lret
mov
dec
and
loopne
sahf
sbb
inc
sahf
add
sbb
or
cmp
dec
lock
inc
mov
fnstenv
inc
mov
loope
push
jle
inc
movsl
pop
lcall
es
pop
test
adc
icebp
inc
dec
mov
sub
pusha
jle
lds
cli
push
loopne
jl
push
inc
out
movsl
push
pop
dec
cmp
movl
fistps
roll
aas
mov
mov
cmc
push
mov
sar
mov
adc
add
mov
cmp
adc
xchg
popa
notl
sub
sbbl
dec
mov
inc
addb
loopne
add
pusha
andb
add
adc
inc
loopne
sti
jle
cmc
sbb
jns
rolb
add
mov
incl
pusha
inc
pop
scas
and
push
sub
sub
ds
pop
xor
cmp
rsqrtps
cmp
sbb
lea
loop
mov
mov
mov
cmpsb
mov
jmp
xchg
push
inc
adc
push
addb
cli
nopl
mov
and
loope
clc
ficoml
adc
or
add
loop
and
andb
jns
mov
add
cmpl
and
and
adc
repz
addb
jb
loopne
mov
adc
sbb
push
loopne
xchg
outsb
xchg
sub
loop
push
inc
movsl
aaa
jmp
ds
cmpsb
inc
add
loopne
push
loopne
add
sub
test
outsb
das
mov
xor
in
xor
inc
data16
loopne
outsl
lds
add
pusha
mov
mov
repz
in
sbb
inc
add
mov
orb
xchg
mov
adc
sarb
inc
and
mov
shrb
stc
mov
addb
in
mov
hlt
loopne
mov
mov
mov
and
jg
push
xchg
in
scas
sbb
arpl
into
leave
enter
jmp
clc
mov
pop
jbe
sub
andb
addb
rolb
ret
mov
add
pop
ret
adc
nop
sub
xchg
test
std
sub
push
mov
call
add
and
aaa
mov
xchg
insl
and
js
cli
scas
add
fsubl
ja
cmc
and
and
shlb
push
inc
stc
roll
insb
insb
repnz
push
or
fildl
out
push
mov
notl
and
repz
and
pusha
mov
dec
mov
sub
adc
pop
loop
add
dec
push
sub
jnp
adc
aad
jle
fmuls
rolb
in
repnz
rclb
jns
or
cltd
sub
mov
nop
adc
pusha
repz
movlhps
into
ljmp
mov
js
aas
xchg
loopne
addb
add
fildll
or
mov
mov
fldlg2
jl
insb
cmp
and
add
lock
push
xchg
ret
lods
movq
xchg
cmp
fbstp
mov
fisttpll
mov
pop
xchg
add
add
test
andb
loopne
inc
dec
addr16
lret
daa
imul
mov
pusha
mov
in
or
add
or
mov
inc
leave
mov
push
enter
popa
inc
arpl
and
jmp
and
push
mov
shlb
out
loope
mov
out
adc
xchg
iret
and
jmp
and
subl
push
or
add
sbb
add
mov
sahf
fcmovb
gs
mov
add
and
push
mov
out
andb
fidivrs
pop
stos
adc
out
out
testb
iret
fs
lahf
fimull
jae
jge
mov
loopne
ljmp
adc
lods
addb
rorb
loopne
sbb
test
add
lcall
lock
cmp
loopne
sahf
sbb
xchg
out
xor
out
pop
pop
push
js
inc
jo,pt
xor
lret
mov
movsb
mov
shlb
fs
adc
xchg
cmc
roll
sbb
negb
pop
push
ljmp
sarl
gs
sub
loopne
and
add
and
ljmp
imul
and
outsb
sub
add
dec
rcr
pushf
imul
outsl
mov
rolb
cmp
sti
addr16
shlb
add
add
xchg
mov
xor
lahf
popf
mov
fidivs
int3
lods
enter
hlt
outsl
push
or
dec
xor
addb
in
lcall
or
std
ret
js
loopne
xchg
pop
mov
add
loopne
insb
inc
pusha
je
and
add
xor
pop
jmp
mov
inc
dec
pushf
out
sub
shl
push
inc
sub
pop
ret
xor
testb
push
mov
das
xchg
mov
cltd
call
arpl
jmp
push
xchg
pop
out
jge
fldlg2
test
pusha
hlt
push
and
in
and
addb
dec
ja
push
cmpsl
or
adc
sti
dec
icebp
ljmp
mov
shl
fsub
inc
sbb
pop
sti
and
add
shll
pop
leave
xlat
call
sahf
test
test
pusha
in
mov
das
cmp
mov
or
mov
and
aas
fidivrs
popa
inc
push
js
jecxz
add
out
fldt
and
loopne
and
inc
ljmp
sarb
mov
jo
das
sbb
push
std
dec
sub
inc
push
inc
loopne
cmp
inc
fildl
pusha
shrb
mov
pop
popf
adc
jmp
icebp
jecxz
mov
mov
mov
or
loopne
sbb
sbb
addl
add
mov
inc
push
loopne
pusha
pop
lcall
add
mov
addr16
fisttpll
mov
and
arpl
or
mov
and
shl
inc
xchg
lds
sub
adc
and
mov
les
rolb
cs
loopne
and
pusha
inc
insb
mov
loopne
scas
and
xor
dec
jecxz
jmp
sub
xor
add
push
mov
nop
leave
nop
jmp
add
add
mov
clc
repnz
nop
cld
jae
cltd
sahf
add
popf
add
lods
and
imul
nop
leave
nop
jmp
add
dec
push
pop
push
clc
repnz
nop
cld
jae
xchg
add
push
clc
add
repnz
nop
cld
jae
adc
jecxz
xchg
mov
add
shl
push
mov
nop
leave
nop
jmp
cmp
xchg
mov
in
mov
push
mov
nop
leave
nop
jmp
add
lea
mov
xchg
ret
push
mov
add
rolb
add
clc
repnz
nop
cld
jae
adc
add
cmp
inc
loopne
repz
clc
repnz
nop
cld
jae
add
push
add
add
adc
mov
clc
repnz
nop
cld
jae
jg
add
pop
push
push
mov
xchg
ret
xor
test
scas
shrl
cmp
repnz
nop
cld
jae
add
add
add
xchg
inc
mov
push
mov
xchg
ret
pop
cmp
add
cwtl
inc
add
scas
add
jno
add
mov
clc
repnz
nop
cld
jae
add
insl
push
repz
push
mov
xchg
ret
add
add
roll
push
jmp
jg
add
cltd
add
add
add
cltd
add
sbb
test
add
clc
repnz
nop
cld
jae
insl
xor
push
push
clc
repnz
nop
cld
jae
add
add
shlb
clc
repnz
nop
cld
jae
inc
add
fwait
add
inc
xor
mov
xchg
ret
adc
add
neg
cmp
add
mov
xor
push
mov
nop
leave
nop
jmp
mov
lea
clc
repnz
nop
cld
jae
jno
add
inc
sahf
testl
xorl
add
add
fwait
mov
mov
clc
repnz
nop
cld
jae
and
add
push
mov
xchg
ret
add
fadds
add
mov
pop
push
clc
repnz
nop
cld
jae
and
push
xor
insb
add
jbe
clc
repnz
nop
cld
jae
push
pop
add
clc
repnz
nop
cld
jae
add
add
push
add
jmp
pop
add
add
adc
add
sahf
popf
and
add
repnz
nop
cld
jae
add
mov
xchg
inc
add
push
filds
add
add
mov
clc
repnz
nop
cld
jae
add
rcll
inc
push
and
mov
fmuls
and
test
neg
add
rcll
push
mov
xchg
ret
add
add
add
mov
clc
repnz
nop
cld
jae
inc
fwait
push
scas
add
sbb
repnz
nop
cld
jae
mov
add
add
aad
pop
add
clc
repnz
nop
cld
jae
add
add
in
clc
repnz
nop
cld
jae
test
add
mov
clc
push
mov
xchg
ret
add
pop
popf
xchg
add
loopne
mov
xbegin
jae
add
add
xor
pop
jae
mov
lret
bound
add
add
pop
in
shlb
add
subl
clc
repnz
nop
cld
jae
adc
xchg
jp
push
push
mov
xchg
ret
add
push
push
xchg
push
fists
adc
repnz
nop
cld
jae
filds
mov
loope
push
mov
xchg
ret
add
add
and
icebp
clc
repnz
nop
cld
jae
add
pop
push
add
add
jne
clc
repnz
nop
cld
jae
add
add
add
cmp
andl
in
nop
leave
nop
jmp
add
add
or
add
xor
add
in
nop
leave
nop
jmp
add
mov
add
push
mov
nop
leave
nop
jmp
add
add
clc
repnz
nop
cld
jae
sahf
add
inc
addb
or
and
dec
push
push
mov
xchg
ret
add
mul
add
cmp
sub
xor
cmp
ret
push
add
add
add
jmp
add
and
xor
test
add
nop
nop
cld
jae
add
pop
adc
pop
add
nop
nop
cld
jae
sahf
add
add
add
cltd
inc
add
pop
sahf
add
push
pop
push
clc
repnz
nop
cld
jae
push
rorl
incb
add
push
clc
repnz
nop
cld
jae
add
push
filds
loopne
adc
mov
nop
leave
nop
jmp
add
insl
add
mov
repnz
nop
cld
jae
add
push
add
shlb
pop
clc
repnz
nop
cld
jae
add
sub
add
cmc
push
clc
repnz
nop
cld
jae
sarb
add
fadds
xor
movsl
mov
clc
repnz
nop
cld
jae
dec
xor
inc
fsubs
mov
push
mov
xchg
ret
add
push
add
add
sub
in
nop
leave
nop
jmp
adc
sahf
roll
adc
call
cld
jae
cmp
mov
aam
mov
clc
repnz
nop
cld
jae
fwait
xor
subb
cmpl
push
mov
nop
leave
nop
jmp
hlt
add
push
add
mov
rorl
mov
xchg
ret
add
dec
xor
push
add
sarb
push
mov
xchg
ret
pop
xchg
jecxz
mov
pop
pop
add
cmp
push
mov
roll
add
rcll
and
pop
clc
repnz
nop
cld
jae
scas
add
add
popf
xor
bound
hlt
jg
jne
clc
repnz
nop
cld
jae
add
inc
sub
mov
mov
clc
repnz
nop
cld
jae
add
add
leave
xchg
push
mov
xchg
ret
add
push
mov
inc
add
imulb
nop
cld
jae
hlt
inc
add
add
cltd
dec
jmp
push
mov
xchg
ret
shll
mov
add
out
add
nop
leave
nop
jmp
cltd
add
add
repnz
nop
cld
jae
add
add
rcrl
inc
pop
clc
repnz
nop
cld
jae
xchg
hlt
cmp
add
push
add
push
mov
xchg
ret
roll
add
jecxz
add
into
xchg
dec
push
mov
xchg
ret
add
pop
ljmp
add
push
mov
nop
leave
nop
jmp
insl
mov
mov
mov
clc
repnz
nop
cld
jae
push
add
iret
push
clc
repnz
nop
cld
jae
xor
jecxz
lret
sbb
mov
nop
leave
nop
jmp
add
incl
cltd
xor
mov
nop
leave
nop
jmp
mov
insl
inc
add
and
stos
clc
repnz
nop
cld
jae
add
pop
add
add
mov
xchg
ret
roll
add
inc
add
mov
sub
repnz
nop
cld
jae
sahf
and
push
xchg
pop
add
clc
repnz
nop
cld
jae
add
hlt
push
add
xchg
xchg
clc
repnz
nop
cld
jae
add
push
fwait
push
mov
xchg
ret
insl
add
test
pop
add
add
test
push
mov
xchg
ret
rcrl
pop
inc
add
add
clc
repnz
nop
cld
jae
add
xor
push
clc
repnz
nop
cld
jae
add
add
add
sub
inc
pushf
pop
jne
push
mov
nop
leave
nop
jmp
jno
push
in
loopne
inc
add
push
mov
nop
leave
nop
jmp
add
add
xchg
and
add
add
jecxz
add
add
add
push
push
mov
xchg
ret
add
sub
out
clc
repnz
nop
cld
jae
add
mov
add
push
clc
repnz
nop
cld
jae
hlt
add
inc
in
mov
xbegin
jae
push
add
inc
add
add
jne
clc
repnz
nop
cld
jae
jecxz
insl
xchg
aam
popa
testl
push
mov
nop
leave
nop
jmp
insl
xor
mov
pusha
pusha
push
jecxz
sar
nop
nop
cld
jae
add
push
and
pop
mov
leave
clc
repnz
nop
cld
jae
lret
add
inc
add
fwait
push
mov
xchg
ret
scas
shrb
add
add
fld1
clc
repnz
nop
cld
jae
in
insl
mov
fwait
scas
mov
dec
fwait
clc
repnz
nop
cld
jae
negb
rcrl
push
mov
nop
leave
nop
jmp
insl
add
add
inc
testb
mov
mov
adc
lret
or
add
add
add
or
repnz
nop
cld
jae
insl
add
mov
movb
bound
and
pop
add
add
jecxz
mov
mov
xchg
ret
filds
dec
pop
add
cmpl
jae
and
push
and
popa
movzwl
clc
repnz
nop
cld
jae
inc
add
add
insl
mov
clc
repnz
nop
cld
jae
add
inc
fistpl
clc
repnz
nop
cld
jae
add
add
add
addb
adc
clc
repnz
nop
cld
jae
add
fwait
popf
sub
mov
shr
rep
push
mov
xchg
ret
inc
adc
add
pop
add
jg
outsl
arpl
add
repnz
nop
cld
jae
add
adc
mov
clc
repnz
nop
cld
jae
xor
push
test
push
sub
push
mov
nop
leave
nop
jmp
add
add
ror
andb
or
cmp
push
add
pop
fists
dec
fwait
jg
add
add
add
xlat
mov
clc
repnz
nop
cld
jae
popf
neg
add
add
nop
nop
cld
jae
add
pop
push
pusha
and
or
and
nop
leave
nop
jmp
dec
add
add
cmp
fisttpl
nop
nop
cld
jae
push
cltd
add
inc
push
mov
xchg
ret
add
add
insl
add
adc
push
push
mov
nop
leave
nop
jmp
roll
add
add
mov
add
jno
xchg
sahf
popf
add
add
add
sub
movsb
loopne
outsb
js
rep
clc
repnz
nop
cld
jae
push
inc
add
gs
clc
repnz
nop
cld
jae
add
repnz
push
mov
nop
leave
nop
jmp
push
add
push
xor
shrl
stos
clc
repnz
nop
cld
jae
add
rolb
mov
and
mov
xchg
ret
add
add
jg
adc
ja
mov
add
add
add
xor
inc
add
adc
add
add
jecxz
add
add
add
lods
jne
clc
repnz
nop
cld
jae
add
add
mov
xchg
ret
insl
add
cltd
add
roll
add
in
nop
leave
nop
jmp
incb
sbb
add
repnz
nop
cld
jae
add
add
stc
mov
clc
repnz
nop
cld
jae
mov
add
add
clc
repnz
nop
cld
jae
add
add
mov
repnz
nop
cld
jae
add
add
dec
insl
lret
push
push
mov
nop
leave
nop
jmp
addb
dec
add
jno
jnp
push
mov
xchg
ret
in
add
insl
inc
push
mov
pop
clc
repnz
nop
cld
jae
add
add
add
sar
mov
xchg
ret
add
addb
shrb
loopne
in
imul
clc
repnz
nop
cld
jae
mov
push
xor
sahf
or
inc
add
add
pop
add
add
loopne
shr
sbb
add
in
nop
leave
nop
jmp
xor
inc
mulb
pusha
mov
repnz
nop
cld
jae
sahf
add
pop
push
roll
fcmove
je
mov
and
in
pop
push
mov
xchg
ret
inc
xor
add
add
repnz
nop
cld
jae
add
inc
xchg
adc
jg
mov
clc
repnz
nop
cld
jae
add
popf
hlt
add
mov
push
mov
nop
leave
nop
jmp
add
incb
jnp
clc
repnz
nop
cld
jae
mov
add
jecxz
add
push
mov
nop
leave
nop
jmp
inc
add
push
add
sub
orb
mov
inc
adc
repnz
nop
cld
jae
pop
fadds
add
add
clc
repnz
nop
cld
jae
add
add
pop
add
aam
add
clc
repnz
nop
cld
jae
fwait
add
add
jp
mov
clc
repnz
nop
cld
jae
insl
add
add
add
movswl
clc
repnz
nop
cld
jae
add
push
addb
dec
cmp
mov
nop
leave
nop
jmp
add
add
add
cmp
andl
add
sarl
insl
lea
push
mov
nop
leave
nop
jmp
add
add
nop
cld
jae
inc
sahf
fcom
roll
mov
enter
add
repnz
nop
cld
jae
add
add
mov
adc
mov
nop
leave
nop
jmp
add
hlt
lret
pusha
inc
mov
nop
cld
jae
add
out
sarl
clc
repnz
nop
cld
jae
add
sarl
xchg
pop
push
mov
xchg
ret
add
push
pop
add
add
cmp
adc
repnz
nop
cld
jae
add
add
sahf
cmp
fs
push
push
mov
xchg
ret
mov
jno
add
incl
add
mov
repnz
nop
cld
jae
add
add
add
movb
repnz
nop
cld
jae
insl
add
add
mov
lret
push
mov
xchg
ret
add
add
mov
mov
add
push
mov
xchg
ret
add
add
roll
add
push
clc
repnz
nop
cld
jae
add
sarl
outsl
cmp
push
mov
nop
leave
nop
jmp
mov
push
clc
repnz
nop
cld
jae
add
sahf
push
push
add
push
mov
nop
leave
nop
jmp
add
cltd
rcll
mov
and
inc
and
clc
repnz
nop
cld
jae
mov
incl
decl
pop
clc
repnz
nop
cld
jae
pop
adc
dec
test
and
fistpl
push
mov
xchg
ret
mov
xchg
imul
in
nop
leave
nop
jmp
add
dec
add
aam
ja
roll
repnz
nop
cld
jae
cmp
jno
mov
cmp
fld1
push
mov
xchg
ret
hlt
add
xor
test
test
and
nop
nop
cld
jae
sub
dec
add
shll
or
lods
inc
add
fadds
add
ds
mov
clc
repnz
nop
cld
jae
push
dec
add
adc
pop
push
mov
xchg
ret
scas
popf
add
add
pop
xchg
jg
push
mov
nop
leave
nop
jmp
out
insl
sar
into
imul
nop
cld
jae
add
roll
add
popa
dec
push
mov
xchg
ret
rolb
idivb
cltd
add
cmp
add
in
nop
leave
nop
jmp
dec
add
add
nop
cld
jae
add
dec
jecxz
inc
mov
push
push
clc
repnz
nop
cld
jae
push
jecxz
add
repnz
nop
cld
jae
jecxz
add
add
outsl
call
clc
repnz
nop
cld
jae
add
add
clc
repnz
nop
cld
jae
add
jl
mov
clc
repnz
nop
cld
jae
insl
mov
add
cmp
nop
nop
cld
jae
mov
cmp
lret
call
clc
repnz
nop
cld
jae
add
mov
mov
nop
cld
jae
add
add
add
mov
mov
pop
clc
repnz
nop
cld
jae
mov
mov
repnz
nop
cld
jae
pop
out
roll
add
pop
ret
pushl
push
mov
nop
leave
nop
jmp
add
roll
push
push
mov
xchg
ret
xor
pop
inc
add
push
incl
clc
cmp
push
clc
repnz
nop
cld
jae
lret
inc
pop
push
push
clc
repnz
nop
cld
jae
add
sub
insl
jg
xlat
add
clc
repnz
nop
cld
jae
shrl
push
mov
sbb
in
nop
leave
nop
jmp
insl
push
pop
add
sbb
push
jne
clc
repnz
nop
cld
jae
add
dec
cmp
repnz
nop
cld
jae
add
adc
push
push
mov
xchg
ret
pop
add
roll
repnz
nop
cld
jae
add
add
clc
repnz
nop
cld
jae
jg
scas
add
add
test
push
mov
nop
leave
nop
jmp
fistps
cli
sbb
mov
clc
repnz
nop
cld
jae
xor
push
adc
out
in
push
mov
nop
leave
nop
jmp
add
out
add
add
add
fisttps
nop
nop
cld
jae
mov
mov
xor
clc
repnz
nop
cld
jae
add
add
jg
xor
clc
repnz
nop
cld
jae
test
and
inc
fmul
push
lea
push
mov
xchg
ret
add
add
add
rorb
add
in
nop
leave
nop
jmp
add
fcomp
leave
clc
repnz
nop
cld
jae
add
add
add
cld
or
nop
leave
nop
jmp
add
xchg
fwait
pop
push
mov
xchg
ret
incb
add
push
xor
out
scas
lahf
test
push
mov
xchg
ret
popf
inc
fadds
rcrl
repnz
add
clc
repnz
nop
cld
jae
addb
add
add
loope
clc
repnz
nop
cld
jae
out
add
mov
adc
pop
mov
clc
repnz
nop
cld
jae
xchg
notb
cld
loop
clc
cwtl
fildl
lock
inc
add
add
add
cs
adc
in
nop
leave
nop
jmp
cmp
fwait
mov
add
push
mov
xchg
ret
add
mov
sahf
negb
mov
xchg
ret
add
xchg
add
inc
fdivl
lods
clc
repnz
nop
cld
jae
add
add
push
inc
pusha
xchg
mov
clc
repnz
nop
cld
jae
add
add
insl
sar
mov
push
mov
nop
leave
nop
jmp
add
mov
aas
adc
add
repnz
nop
cld
jae
shrl
pop
push
mov
xchg
ret
rcll
add
mov
roll
pop
clc
repnz
nop
cld
jae
inc
add
sub
xchg
dec
mov
es
jmp
add
add
add
inc
add
notl
repnz
nop
cld
jae
add
dec
add
push
push
mov
nop
leave
nop
jmp
test
add
push
mov
mov
clc
repnz
nop
cld
jae
adc
add
mov
xchg
ret
xchg
hlt
add
mov
nop
nop
cld
jae
jg
add
sahf
adc
shlb
repnz
nop
cld
jae
testb
add
pusha
clc
repnz
nop
cld
jae
add
add
push
adc
fsubs
leave
sub
in
nop
leave
nop
jmp
mov
add
jle
xor
inc
inc
and
and
push
mov
nop
leave
nop
jmp
add
mov
pop
push
mov
xchg
ret
sahf
negb
adc
filds
adc
rolb
add
inc
cs
repnz
nop
cld
jae
add
inc
or
add
pop
add
clc
repnz
nop
cld
jae
add
xor
jg
add
fmuls
repnz
nop
cld
jae
push
pop
add
roll
push
in
daa
dec
push
mov
xchg
ret
scas
divb
xchg
sahf
xchg
inc
inc
add
clc
repnz
nop
cld
jae
add
mov
add
addr16
clc
repnz
nop
cld
jae
add
add
adc
add
std
xor
clc
repnz
nop
cld
jae
fwait
rorl
add
sbb
pusha
clc
repnz
nop
cld
jae
add
sahf
add
push
clc
repnz
nop
cld
jae
fadds
add
fwait
add
push
mov
xchg
ret
add
test
add
fsubrl
mov
xchg
sbb
nop
nop
cld
jae
add
adc
je
clc
repnz
nop
cld
jae
mov
insl
xor
mov
clc
repnz
nop
cld
jae
in
fadds
add
ret
add
add
roll
addb
mov
push
dec
add
es
pop
leave
cmp
push
mov
xchg
ret
insl
add
inc
roll
xorb
nop
nop
cld
jae
add
add
pop
mov
or
repnz
nop
cld
jae
add
add
hlt
add
clc
repnz
nop
cld
jae
push
pop
add
push
add
add
add
inc
or
mov
nop
nop
cld
jae
add
add
mov
inc
mov
sbb
jnp
inc
add
add
pop
int3
movsb
andb
push
push
mov
xchg
ret
fadds
push
pop
add
add
nop
nop
cld
jae
add
jg
add
add
push
loopne
xchg
mov
in
nop
leave
nop
jmp
add
cmp
add
cltd
lcall
cld
jae
add
add
shl
mov
fwait
clc
repnz
nop
cld
jae
rolb
add
add
mov
clc
repnz
nop
cld
jae
push
sahf
add
clc
repnz
nop
cld
jae
dec
in
adc
add
je
add
repnz
nop
cld
jae
add
clc
repnz
nop
cld
jae
scas
push
add
add
push
mov
push
mov
xchg
ret
add
add
add
add
clc
repnz
nop
cld
jae
add
push
mov
sahf
push
and
nop
nop
cld
jae
add
fwait
add
mov
test
add
clc
repnz
nop
cld
jae
add
mov
aad
popl
clc
repnz
nop
cld
jae
add
add
incb
rolb
fld1
clc
repnz
nop
cld
jae
push
mov
shlb
push
mov
nop
leave
nop
jmp
add
mov
xor
jmp
clc
repnz
nop
cld
jae
hlt
sub
add
mov
add
clc
repnz
nop
cld
jae
xor
insl
in
add
push
clc
repnz
nop
cld
jae
add
xchg
add
add
lea
mov
xchg
ret
filds
add
and
clc
repnz
nop
cld
jae
in
add
mov
add
clc
repnz
nop
cld
jae
push
insl
add
xchg
cwtl
inc
add
in
mov
add
or
and
add
push
add
dec
fwait
adc
ret
push
mov
xchg
ret
lret
adc
add
xchg
aaa
mov
clc
repnz
nop
cld
jae
pop
add
add
mov
clc
repnz
nop
cld
jae
add
pop
xorb
loopne
or
rolb
les
repnz
nop
cld
jae
add
add
add
insb
jb
andb
push
clc
repnz
nop
cld
jae
fadds
add
cmp
push
mov
add
imul
add
jns
test
push
mov
xchg
ret
roll
add
nop
leave
nop
jmp
fists
scas
fwait
and
inc
add
push
clc
repnz
nop
cld
jae
roll
mov
add
clc
repnz
nop
cld
jae
out
mov
insl
add
adc
mov
push
mov
xchg
ret
add
sahf
adc
inc
add
add
push
mov
nop
leave
nop
jmp
add
add
pop
cmc
mov
push
mov
nop
leave
nop
jmp
add
add
add
xlat
cmp
push
mov
nop
leave
nop
jmp
pop
add
add
add
push
mov
xchg
ret
push
add
add
add
add
add
clc
repnz
nop
cld
jae
inc
addb
adc
sbbl
add
add
fdivs
je
sub
repnz
nop
cld
jae
inc
add
add
clc
repnz
nop
cld
jae
out
incl
fwait
sub
xor
clc
repnz
nop
cld
jae
roll
push
mov
nop
leave
nop
jmp
add
add
adc
add
cli
orl
repnz
nop
cld
jae
mov
add
xorb
push
mov
nop
leave
nop
jmp
scas
push
xchg
add
and
and
and
mov
add
in
andb
mov
xchg
ret
xor
adc
add
add
add
push
clc
repnz
nop
cld
jae
inc
sahf
add
incb
inc
jno
andb
mov
push
mov
nop
leave
nop
jmp
push
push
fcoms
add
jno
mov
clc
repnz
nop
cld
jae
add
mov
fwait
insl
mov
shrb
mov
xchg
ret
jno
sub
fld1
push
mov
xchg
ret
pop
lret
add
add
incl
nop
nop
cld
jae
add
add
sahf
push
and
sub
push
mov
xchg
ret
sahf
add
add
rcrl
mov
push
mov
nop
leave
nop
jmp
mov
add
test
jl
clc
repnz
nop
cld
jae
add
aas
test
push
mov
nop
leave
nop
jmp
push
add
lock
nop
nop
cld
jae
adc
fwait
add
rorl
cld
jae
mov
cltd
add
and
and
addb
push
add
mov
clc
repnz
nop
cld
jae
add
add
push
insl
mov
xor
add
push
mov
nop
leave
nop
jmp
mov
dec
leavew
mov
push
mov
xchg
ret
add
xchg
out
add
pop
xor
lea
clc
repnz
nop
cld
jae
inc
add
add
add
mov
clc
repnz
nop
cld
jae
add
dec
push
push
mov
xchg
ret
in
add
inc
out
add
orb
push
mov
nop
leave
nop
jmp
fadds
add
rolb
cmp
popl
xchg
ret
add
add
sahf
sarl
mov
clc
repnz
nop
cld
jae
inc
add
add
sub
repz
repnz
nop
cld
jae
add
mov
sub
inc
imul
lods
scas
inc
add
add
push
add
fisubrs
clc
repnz
nop
cld
jae
add
push
mulb
inc
push
xor
add
repnz
nop
cld
jae
add
mov
addr16
push
mov
nop
leave
nop
jmp
jecxz
xor
repnz
nop
cld
jae
add
in
add
add
bound
je
add
push
mov
nop
leave
nop
jmp
adc
inc
add
mov
xchg
ret
add
push
add
add
mov
nop
leave
nop
jmp
add
pop
pushl
push
mov
xchg
ret
insl
add
fwait
add
ret
pop
push
mov
xchg
ret
xchg
add
decl
mov
repnz
nop
cld
jae
add
add
iret
or
cld
jae
xchg
add
scas
dec
movsl
lea
clc
repnz
nop
cld
jae
fadds
add
repnz
nop
cld
jae
cltd
add
incl
add
icebp
fwait
clc
repnz
nop
cld
jae
add
add
add
xchg
sub
xor
clc
repnz
nop
cld
jae
mov
in
cmc
pop
push
mov
xchg
ret
add
roll
xchg
add
shll
jb
clc
repnz
nop
cld
jae
add
clc
repnz
nop
cld
jae
mov
jg
scas
push
add
adc
mov
nop
cld
jae
inc
test
mov
and
add
clc
repnz
nop
cld
jae
incl
mov
ja
clc
repnz
nop
cld
jae
xchg
scas
hlt
mov
clc
repnz
nop
cld
jae
mov
add
repnz
nop
cld
jae
sarl
adc
add
inc
push
mov
xchg
ret
add
popf
adc
data16
inc
pusha
mov
call
leave
nop
jmp
jno
xchg
push
testb
sbb
mov
xchg
ret
dec
add
insl
div
filds
add
mov
clc
repnz
nop
cld
jae
test
add
pop
iret
pop
push
mov
xchg
ret
push
add
fistps
add
jno
lahf
les
clc
repnz
nop
cld
jae
add
add
clc
repnz
nop
cld
jae
add
add
add
mov
repnz
nop
cld
jae
add
add
mov
mov
adc
mov
nop
leave
nop
jmp
xor
add
cmp
clc
repnz
nop
cld
jae
inc
add
cmp
jno
push
mov
xchg
ret
add
inc
jecxz
add
insl
add
mov
push
mov
xchg
ret
add
add
and
popf
mov
ror
ret
clc
repnz
nop
cld
jae
insl
push
fdivs
inc
add
call
clc
repnz
nop
cld
jae
roll
fmuls
push
mov
xchg
ret
cmp
pop
fadds
add
add
aas
push
push
mov
xchg
ret
add
shl
inc
add
xchg
inc
mov
push
mov
xchg
ret
xor
add
lret
add
lahf
je
clc
repnz
nop
cld
jae
rcl
add
int
pop
jae
repnz
nop
cld
jae
add
push
clc
repnz
nop
cld
jae
insl
fadds
roll
fadd
mov
clc
repnz
nop
cld
jae
lret
add
add
jp
push
clc
repnz
nop
cld
jae
mov
add
insl
add
clc
repnz
nop
cld
jae
jecxz
fwait
inc
jecxz
add
mov
and
xchg
ret
jmp
incl
sahf
cmp
cltd
add
testb
pop
cltd
inc
push
add
adc
nop
cld
jae
add
cltd
xchg
dec
add
clc
repnz
nop
cld
jae
add
pop
je
clc
repnz
nop
cld
jae
add
xchg
jp
push
push
mov
xchg
ret
fwait
lret
shll
add
and
clc
repnz
nop
cld
jae
mov
ret
push
clc
repnz
nop
cld
jae
add
add
mov
jg
mov
nop
nop
cld
jae
mov
add
nop
nop
cld
jae
mov
xor
sub
and
daa
add
roll
add
push
add
xchg
pop
add
mov
clc
repnz
nop
cld
jae
add
pop
call
clc
repnz
nop
cld
jae
add
dec
sahf
mov
nop
nop
cld
jae
add
pop
lret
add
rep
clc
repnz
nop
cld
jae
adc
pop
add
insl
add
nop
leave
nop
jmp
push
add
adc
insl
fwait
xorb
fistl
sbb
and
insl
mov
jg
inc
mov
mov
xchg
ret
sahf
incl
cmp
jecxz
roll
fld1
push
mov
xchg
ret
add
add
sarl
into
jecxz
incl
adc
add
add
lret
add
adc
clc
repnz
nop
cld
jae
adc
push
add
xchg
push
clc
repnz
nop
cld
jae
add
jno
jno
inc
add
repnz
nop
cld
jae
popf
add
pop
push
mov
xchg
ret
insl
add
in
jecxz
add
inc
popa
mov
clc
repnz
nop
cld
jae
add
xchg
stos
sub
push
mov
xchg
ret
add
insl
pop
notb
clc
repnz
nop
cld
jae
cltd
adc
add
add
add
and
addb
add
add
and
sbb
repnz
nop
cld
jae
add
enter
and
nop
nop
cld
jae
add
add
push
and
ja
clc
add
in
nop
leave
nop
jmp
filds
add
popa
clc
repnz
nop
cld
jae
cltd
add
test
repnz
nop
cld
jae
inc
dec
add
lret
sub
clc
repnz
nop
cld
jae
add
add
add
push
clc
repnz
nop
cld
jae
adc
jmp
cmp
and
sbb
repnz
nop
cld
jae
cmp
add
add
push
mov
xchg
ret
jg
pop
add
xor
push
mov
xchg
ret
add
add
imul
nop
cld
jae
hlt
add
roll
xchg
push
push
mov
nop
leave
nop
jmp
in
out
dec
dec
insl
adc
imulb
push
clc
repnz
nop
cld
jae
add
add
xchg
xor
dec
mov
push
mov
xchg
ret
sub
add
sub
int
mov
add
add
mov
daa
add
or
xchg
add
mov
clc
repnz
nop
cld
jae
fadds
mov
call
push
mov
xchg
ret
xor
dec
popf
add
jge
and
push
mov
nop
leave
nop
jmp
inc
add
and
xchg
fsubrs
pusha
add
mov
nop
leave
nop
jmp
add
notb
nop
nop
cld
jae
out
add
add
and
push
mov
xchg
ret
roll
push
xor
dec
sub
jle
inc
add
out
add
shll
sbb
stos
clc
repnz
nop
cld
jae
rol
add
dec
lret
xor
shlb
and
mov
pop
filds
push
xor
clc
repnz
nop
cld
jae
fistpll
push
add
lret
and
icebp
jmp
add
mov
add
jno
add
add
fdivrl
repnz
nop
cld
jae
fadds
jecxz
push
dec
mov
mov
nop
leave
nop
jmp
sub
add
add
xchg
je
imul
clc
repnz
nop
cld
jae
adc
inc
scas
dec
jle
jne
clc
repnz
nop
cld
jae
sahf
add
mov
mov
mov
clc
repnz
nop
cld
jae
sahf
insl
add
push
push
mov
xchg
ret
mov
mov
sbbb
out
lret
add
push
mov
nop
leave
nop
jmp
xor
popf
add
mov
repnz
nop
cld
jae
xchg
add
add
mov
push
mov
xchg
ret
add
adc
jg
popf
add
addb
sbb
xor
repnz
nop
cld
jae
push
jg
push
je
push
clc
repnz
nop
cld
jae
rolb
add
add
push
or
mov
nop
leave
nop
jmp
lret
cmp
xchg
push
clc
repnz
nop
cld
jae
add
xchg
add
das
push
push
mov
nop
leave
nop
jmp
add
add
jne
clc
repnz
nop
cld
jae
and
add
push
push
mov
xchg
ret
add
add
stos
shr
clc
repnz
nop
cld
jae
pop
add
add
shl
mov
pushl
push
mov
nop
leave
nop
jmp
insl
xchg
add
add
repnz
nop
cld
jae
lret
add
popa
fwait
clc
repnz
nop
cld
jae
add
add
pop
addb
pusha
push
js
push
push
mov
xchg
ret
add
add
and
ss
clc
repnz
nop
cld
jae
pop
add
movb
mov
xchg
ret
mov
add
sub
pusha
adc
push
clc
repnz
nop
cld
jae
test
adc
mov
xor
add
push
mov
xchg
ret
fcoms
xor
add
add
test
repnz
nop
cld
jae
mov
dec
xchg
inc
add
add
xchg
add
jecxz
test
xlat
call
in
nop
leave
nop
jmp
mov
add
call
clc
repnz
nop
cld
jae
inc
add
xor
add
mov
push
mov
nop
leave
nop
jmp
roll
add
and
clc
repnz
nop
cld
jae
add
inc
lret
fistpl
push
mov
xchg
ret
xor
in
jg
add
sbb
add
clc
repnz
nop
cld
jae
add
add
push
push
mov
nop
leave
nop
jmp
add
cmp
sub
dec
add
mov
clc
repnz
nop
cld
jae
add
add
fsubr
mov
mov
xchg
in
clc
repnz
nop
cld
jae
rol
lds
repnz
nop
cld
jae
mov
rcrl
xor
push
in
nop
leave
nop
jmp
pop
jg
add
add
addb
and
pusha
sahf
add
rorb
pusha
cmpsl
xor
clc
repnz
nop
cld
jae
pop
push
fwait
shrl
add
add
clc
repnz
nop
cld
jae
shrb
add
loope
stos
sti
clc
repnz
nop
cld
jae
add
add
add
clc
repnz
nop
cld
jae
push
sub
in
mov
clc
repnz
nop
cld
jae
add
add
push
mov
nop
leave
nop
jmp
jno
add
add
loopne
js
shl
add
mov
xchg
ret
add
add
fistpl
push
mov
xchg
ret
in
pop
add
adc
mov
clc
repnz
nop
cld
jae
pop
xchg
loopne
nop
ret
xor
clc
repnz
nop
cld
jae
add
add
testb
xchg
cmpl
cld
jae
in
fwait
add
rcll
repnz
nop
cld
jae
mov
pop
add
push
add
push
add
in
nop
leave
nop
jmp
insl
roll
add
cmpl
push
mov
nop
leave
nop
jmp
push
add
hlt
cmp
dec
mov
mov
adc
repnz
nop
cld
jae
add
add
outsb
jge
mov
push
mov
nop
leave
nop
jmp
sahf
xor
inc
add
rolb
repnz
nop
cld
jae
mov
cmp
xchg
es
pop
je
clc
repnz
nop
cld
jae
push
idivb
repnz
nop
cld
jae
adc
add
clc
repnz
nop
cld
jae
add
add
add
add
filds
mov
nop
leave
nop
jmp
xor
add
mov
push
push
mov
xchg
ret
add
add
add
add
mov
cmp
ret
shll
inc
pop
add
pusha
push
mov
xchg
ret
hlt
pop
add
jno
add
stos
loopne
mov
stos
inc
push
mov
xchg
ret
add
add
cmp
sahf
mov
jae
clc
push
mov
nop
leave
nop
jmp
mov
add
add
push
mov
nop
leave
nop
jmp
add
and
add
test
pop
add
clc
repnz
nop
cld
jae
mov
add
clc
repnz
nop
cld
jae
add
int
sti
clc
repnz
nop
cld
jae
push
mov
mov
xor
lcall
cld
jae
pop
inc
mov
insl
mov
adc
test
or
add
repnz
nop
cld
jae
add
rclb
shl
push
mov
xchg
ret
adc
add
mov
push
mov
push
clc
repnz
nop
cld
jae
add
add
add
rcrl
les
add
add
in
nop
leave
nop
jmp
testb
add
push
fdivr
incl
add
dec
add
add
stos
clc
clc
repnz
nop
cld
jae
add
insl
sarl
call
clc
repnz
nop
cld
jae
add
fadds
mov
nop
leave
nop
jmp
sub
add
incb
insl
loope
xabort
nop
nop
cld
jae
add
incb
add
add
loopne
mov
sar
repnz
nop
cld
jae
shl
adc
add
push
mov
nop
leave
nop
jmp
mov
add
pusha
loopne,pn
data16
popf
pop
push
mov
xchg
ret
mov
scas
add
add
add
mov
push
mov
add
add
add
add
add
add
incb
pusha
inc
insl
je
clc
repnz
nop
cld
jae
xchg
adc
pop
push
push
mov
nop
leave
nop
jmp
xchg
add
add
cmp
out
fistpl
push
mov
nop
leave
nop
jmp
cltd
in
xchg
push
add
push
mov
in
xchg
inc
add
xlat
add
add
cmc
add
lods
mov
or
xchg
movsl
inc
add
xchg
out
roll
jne
clc
repnz
nop
cld
jae
dec
roll
add
add
cmpw
clc
repnz
nop
cld
jae
adc
add
in
nop
leave
nop
jmp
push
filds
xor
pop
lret
cmp
in
call
clc
repnz
nop
cld
jae
add
add
and
jnp
enter
nop
cld
jae
inc
pop
add
and
add
mov
inc
mov
nop
cld
jae
and
incb
scas
xchg
insb
ret
push
push
mov
nop
leave
nop
jmp
add
add
out
push
inc
pop
lret
push
clc
repnz
nop
cld
jae
add
add
popf
fadds
xchg
add
clc
repnz
nop
cld
jae
pop
add
add
insl
pop
cmp
repnz
nop
cld
jae
rolb
out
mov
inc
xor
add
push
mov
nop
leave
nop
jmp
scas
test
mov
test
in
clc
repnz
nop
cld
jae
add
test
mov
cmp
ret
add
push
rcl
mov
clc
repnz
nop
cld
jae
xor
and
mov
sbb
nop
cld
jae
xor
mov
push
mov
mov
nop
leave
nop
jmp
out
add
add
push
mov
nop
leave
nop
jmp
addb
inc
loop
cmpl
push
mov
nop
leave
nop
jmp
cmp
mov
call
clc
repnz
nop
cld
jae
add
mov
repnz
nop
cld
jae
cltd
inc
xchg
add
testb
mov
mov
clc
repnz
nop
cld
jae
fmuls
add
add
clc
repnz
nop
cld
jae
out
add
add
stos
lea
clc
repnz
nop
cld
jae
add
sar
mov
clc
repnz
nop
cld
jae
push
adc
mov
jb
inc
mov
repnz
nop
cld
jae
mov
test
das
add
push
mov
xchg
ret
add
add
inc
das
jne
clc
repnz
nop
cld
jae
add
mov
xchg
ret
roll
jecxz
roll
clc
sbb
ja
rclb
leave
mov
and
add
shll
adc
xchg
add
push
mov
nop
leave
nop
jmp
push
adc
add
call
cld
jae
add
add
insl
popf
mov
stos
add
push
mov
xchg
ret
add
fwait
and
repnz
nop
cld
jae
jg
and
add
fwait
clc
repnz
nop
cld
jae
fadds
add
cltd
jne
clc
repnz
nop
cld
jae
push
add
fidivl
mov
clc
repnz
nop
cld
jae
roll
fsubrs
add
push
mov
xchg
ret
add
add
scas
fsubs
and
add
clc
repnz
nop
cld
jae
jecxz
add
xor
clc
repnz
nop
cld
jae
add
push
add
add
jecxz
repnz
nop
cld
jae
add
mov
clc
repnz
nop
cld
jae
push
dec
add
mov
clc
repnz
nop
cld
jae
jg
add
incl
add
repnz
nop
cld
jae
add
repnz
nop
cld
jae
inc
add
push
add
dec
mov
clc
repnz
nop
cld
jae
rcr
insl
add
jb
mov
add
push
mov
nop
leave
nop
jmp
shll
mov
add
clc
repnz
nop
cld
jae
cltd
add
insl
fsubrs
shl
clc
repnz
nop
cld
jae
dec
add
push
dec
push
mov
nop
leave
nop
jmp
in
add
cltd
add
adc
leave
repz
clc
repnz
nop
cld
jae
dec
xchg
sub
sarb
dec
lea
push
mov
nop
leave
nop
jmp
jg
add
add
insl
add
clc
repnz
nop
cld
jae
out
add
add
jecxz
je
clc
repnz
nop
cld
jae
push
add
sahf
add
and
mull
repnz
nop
cld
jae
add
xor
or
push
mov
nop
leave
nop
jmp
hlt
adc
hlt
add
mov
sbb
clc
repnz
nop
cld
jae
push
adc
aam
shr
clc
repnz
nop
cld
jae
inc
add
cltd
fadds
pop
inc
push
mov
nop
leave
nop
jmp
mov
add
dec
in
push
jmp
push
add
fbstp
jg
icebp
pop
clc
repnz
nop
cld
jae
add
add
and
int3
mov
add
inc
add
inc
mov
push
mov
nop
leave
nop
jmp
push
in
jecxz
mov
dec
sub
push
cmp
ret
add
add
je
push
mov
nop
leave
nop
jmp
add
xor
push
lods
mov
clc
repnz
nop
cld
jae
add
cld
scas
loopne
or
nop
leave
nop
jmp
jg
sub
fstpl
mov
nop
leave
nop
jmp
cmp
fwait
xor
mov
add
test
idiv
clc
repnz
nop
cld
jae
rcrl
orl
nop
cld
jae
push
add
add
push
add
clc
repnz
nop
cld
jae
insl
xchg
add
cmpsb
rolb
push
mov
nop
leave
nop
jmp
xor
roll
adc
cli
clc
repnz
nop
cld
jae
mov
testb
clc
repnz
nop
cld
jae
pop
pop
fbstp
push
clc
repnz
nop
cld
jae
adc
inc
add
push
shl
jne
clc
repnz
nop
cld
jae
push
add
adc
rorb
leave
nop
jmp
sarl
adc
inc
add
pop
clc
repnz
nop
cld
jae
sarl
rcrl
rcll
mov
xchg
ret
add
add
sub
push
mov
xchg
ret
fwait
add
and
lret
add
add
leave
nop
jmp
cmp
inc
push
ret
xor
clc
repnz
nop
cld
jae
add
cmp
inc
fld1
clc
repnz
nop
cld
jae
pop
mov
add
fcompl
mov
cld
add
cmpsl
fisttpll
add
inc
inc
cmp
rclb
mov
inc
add
adc
add
xor
add
add
push
mov
nop
leave
nop
jmp
incl
sbb
in
nop
leave
nop
jmp
mov
inc
idivb
repnz
repnz
nop
cld
jae
roll
call
roll
sbb
push
push
mov
xchg
ret
jg
add
lret
pop
pop
fisubl
mov
push
mov
xchg
ret
cmp
mov
add
sbb
clc
repnz
nop
cld
jae
in
push
and
add
cmpl
in
nop
leave
nop
jmp
add
push
add
inc
and
clc
repnz
nop
cld
jae
jecxz
push
out
clc
repnz
nop
cld
jae
add
insl
add
fildll
movsb
push
mov
xchg
ret
add
add
fwait
add
push
mov
add
add
add
ljmp
jmp
incl
add
sar
test
add
stc
clc
repnz
nop
cld
jae
push
add
push
add
adcl
repnz
nop
cld
jae
add
mov
mov
outsl
add
add
add
add
icebp
inc
dec
push
mov
nop
leave
nop
jmp
add
shrl
call
in
nop
leave
nop
jmp
insl
add
xor
rorl
nop
cld
jae
push
add
mov
loopne
push
mov
mov
add
call
lret
add
imul
mov
lcall
andb
pusha
add
and
pusha
push
inc
cmp
ja
out
mov
adc
out
dec
xchg
xor
shlb
jne
negb
addb
cmp
loope
cmp
lcall
andb
andb
mov
loopne
mov
mov
inc
dec
stc
popf
test
stos
sbb
mov
shrl
mov
je
mov
sbb
push
pop
or
and
xlat
mov
push
fidivl
xor
stos
xor
sub
xor
das
fidivs
adc
or
mov
or
sbb
cltd
add
push
mov
jp
cmp
mov
add
inc
fiadds
add
add
mov
and
push
lahf
adc
pusha
or
inc
aas
imul
icebp
adc
clc
addb
loopne
out
inc
cmp
imul
mov
jne
xor
lret
rolb
insl
xchg
jle
add
add
jns
sbb
jecxz
in
fwait
inc
jle
out
or
pop
das
adc
cwtl
jae
pop
mov
loopne
std
mov
dec
call
jp
push
pusha
inc
pop
fs
mov
addb
xor
fsts
xchg
dec
ds
adcl
xor
loopne
jg
test
sbb
lahf
fsubl
mov
stc
lods
loopne
shl
cmp
jno
cmc
mov
add
sub
add
stos
dec
movsb
add
add
push
jnp
pop
enter
ss
sub
cmpsl
sub
mov
and
loopne
lock
andb
arpl
dec
xor
addb
inc
adc
sub
and
pop
or
rcll
inc
inc
mov
mov
cmp
sarb
xor
into
mov
jne
loop
sub
xchg
leave
cwtl
add
lods
push
pop
cmp
into
outsb
std
fisttps
lret
mov
inc
lock
aam
xchg
dec
xchg
xchg
sbb
stos
loopne
jb
inc
fsubrs
inc
test
idiv
pop
call
loopne
loope
mov
mov
cmp
or
addr16
cmp
jbe
or
jns
rclb
shlb
jae
outsb
adc
add
cmpsb
mov
aam
out
fistpl
xorb
inc
jecxz
xchg
mov
push
jbe
mov
sub
std
pop
mov
scas
mov
int
push
adc
shrb
add
sub
jmp
jb
and
and
and
lret
pop
lret
imul
insl
scas
imul
xchg
mov
mov
aam
xchg
fsubr
jp
stc
shrl
sbb
push
push
imul
xchg
dec
rcl
lods
lock
fmull
cs
dec
and
aaa
adc
xor
lods
andb
shlb
jno
jge
and
bound
loopne
nop
clc
sbb
popa
cmpsl
mov
sbb
inc
inc
shlb
pusha
xchg
gs
pop
les
pusha
mov
lea
pop
xor
stos
push
mov
in
or
inc
fst
mov
ret
lods
shl
pop
pop
pop
jo
bound
add
xchg
pusha
insb
add
pusha
repnz
lods
pop
sub
inc
or
mov
inc
ret
xchg
cmp
pusha
mov
call
push
int
adc
inc
shlb
inc
out
js
adc
sbb
les
daa
ret
and
imul
xor
jge
scas
cmp
movsl
mov
cmpsb
mov
cltd
mov
shr
rcll
or
js
and
or
jo
cltd
cwtl
dec
pop
push
jne
adc
jp
inc
loope
sbb
or
iret
int
add
or
loope
push
xchg
mov
pusha
loopne
cwtl
fwait
or
or
add
inc
dec
movsb
pusha
inc
xor
test
and
in
roll
push
sbb
sbb
and
das
int3
mov
mov
popa
out
inc
adc
sub
fwait
loop
subl
push
dec
cmp
mov
fldt
cli
xchg
push
cmpsb
mov
je
into
leave
mov
cwtl
mov
and
inc
lds
and
adc
fwait
test
dec
push
in
rclb
push
mov
shlb
pusha
pop
add
mov
pop
int
jg
repz
mov
shll
hlt
fnsave
xchg
jp
out
xor
bound
add
dec
mov
inc
sbb
out
subl
dec
jne
inc
mov
add
pop
iret
sub
pop
jl
ljmp
dec
xchg
sbb
dec
fimull
daa
sbb
sbb
cmc
stos
lcall
out
loopne
cmp
inc
jno
iret
mov
mov
dec
das
mov
pop
ret
push
adc
jl
outsl
shll
pusha
inc
pop
sbb
inc
sub
rorl
loopne
mov
mov
cmp
inc
adc
sbb
stos
add
das
test
shlb
inc
inc
mov
mov
cmp
jo
js
pop
in
sar
xor
lret
cltd
addr16
jmp
jle
or
rclb
and
and
xor
fdivs
fldl
xchg
and
push
out
sub
sti
cwtl
sbb
push
add
andb
lcall
gs
scas
andb
push
xchg
loope
add
or
adc
or
inc
dec
or
fstpt
sarb
and
jnp
dec
fcompl
iret
ficomps
cmc
ss
and
stc
sub
jbe
addb
inc
cmpsl
add
inc
cmp
daa
cmp
adc
shrb
mov
mov
pusha
pusha
lahf
popa
dec
adc
insb
pushf
std
xlat
rcll
ret
repz
or
pop
adc
push
pusha
and
jnp
push
popa
sub
scas
pusha
sarb
sti
lcall
pop
pop
pop
bound
imul
sub
mov
bound
jnp
es
loopne
movsl
in
mov
or
and
decb
pusha
mov
aas
std
and
mov
aad
add
inc
jne
fucomi
enter
lea
addb
add
cmp
sbb
push
ja
mov
lods
jne
roll
add
lret
fwait
and
cmp
add
popf
call
inc
jl
cmpsl
addr16
pop
push
push
push
cmp
daa
hlt
pushf
ret
add
cwtl
fiadds
mov
and
insb
leave
mov
add
dec
mov
lods
mov
mov
and
cmp
addr16
int3
jle
and
inc
sub
mov
pop
fldt
pushf
dec
mov
loope
jb
cmp
lret
je
test
cmp
movsl
sub
or
push
test
or
mov
push
sti
and
adc
ds
push
mov
lock
das
mov
xchg
xlat
inc
scas
and
inc
inc
cmp
lret
sarb
add
and
mov
lahf
mov
inc
mov
sahf
adc
adc
sub
fnstcw
test
cld
aad
push
mov
lret
fcoms
mov
add
shl
lods
push
insl
or
rcr
in
sbb
and
es
out
push
xor
pop
push
sub
repz
outsl
or
and
and
cmp
rcll
and
and
mov
stos
lods
loopne
lods
shll
push
inc
iret
xor
jne
cld
adc
js
add
push
jge
push
jo
pusha
mov
xchg
lock
mov
pop
loope
fucomp
adc
and
and
inc
sub
adc
mov
pusha
mov
test
pop
ljmp
add
inc
enter
inc
add
inc
sbbb
shl
enter
mov
cmpl
xchg
jmp
mov
popa
out
loop
int
lret
sbb
cltd
addb
icebp
mov
inc
call
and
add
js
mov
cmp
andb
pop
pop
pop
or
mov
push
dec
je
cltd
rcrb
pusha
jl
repz
add
cmp
outsl
inc
mov
mov
push
push
mov
add
jl
movntq
inc
shrb
add
sbb
imul
add
mov
subb
jge
outsb
aaa
push
mov
fs
out
nop
inc
cld
sbb
scas
shl
aad
das
fcomps
dec
mov
dec
adc
cmpsl
out
enter
not
lods
add
mov
mov
cmp
adc
rcrb
adc
and
repz
and
lds
xchg
mov
in
into
sub
iret
dec
jns
mov
aas
in
mov
das
or
sub
int
jne
mov
add
imul
inc
sbb
js
enter
mov
adc
xor
mov
test
lret
lods
add
sub
and
and
fiadds
mov
sbbl
or
lds
jns
idivl
mov
fstps
insb
lock
sbb
bound
jge
sbbl
jp
push
mov
mov
fldcw
mov
mov
fdivrl
adc
adc
clc
mov
inc
loopne
adc
push
popa
outsl
imul
nop
cmpsb
add
rol
shlb
mov
jmp
movsb
inc
pusha
imul
inc
or
add
or
xchg
mov
xor
dec
sbb
in
mov
dec
out
jge
xor
mov
icebp
push
loopne
adc
js
jge
cmpsl
mov
stos
sarl
sbb
mull
jns
jge
xchg
lahf
jl
add
mov
loopne
adc
mov
mov
add
mov
xchg
jecxz
push
icebp
in
xchg
int
sub
push
scas
mov
lock
push
add
sbb
sti
pop
jbe
loop
mov
loopne
xchg
jne
xor
sahf
and
loopne
mov
addb
ss
int3
and
cld
pop
pop
or
inc
aad
icebp
enter
add
pop
dec
out
jl
mov
addb
mov
and
xchg
leave
add
inc
loopne
sarl
mov
stos
stc
jecxz
andb
xor
in
mov
mov
nop
sbb
inc
loopne
jbe
aaa
outsb
daa
popw
imul
pusha
insb
sahf
sbb
xor
add
out
clc
push
ja
stos
shlb
add
inc
add
sbb
push
mov
xlat
fdivrp
fsubr
mulb
pop
add
std
daa
adc
minps
adc
out
call
scas
add
loopne
sarl
mul
fisubs
pop
jecxz
dec
adc
lcall
jns
xchg
jmp
mov
mov
mov
xor
mov
pusha
add
in
pop
or
mov
int3
and
and
cs
icebp
ret
xchg
add
cli
pop
pop
enter
fs
push
inc
loopne
or
scas
mov
fstps
dec
les
pop
sub
and
out
std
cmp
ss
jns
dec
fbstp
lahf
leave
mov
out
fnstsw
leave
sbb
int
ja
mov
rcrb
mov
mov
mov
imul
outsl
icebp
test
push
and
fldcw
jecxz
mov
inc
and
in
imulb
sub
sbb
inc
adc
mov
adc
adc
out
sbb
cmp
xchg
vshufps
leave
daa
mov
bound
push
addb
mov
jg
xor
insl
lods
loopne
popa
ja
push
xor
enter
daa
push
jmp
mov
dec
cmp
xchg
imull
lcall
sbbb
shl
rolb
addb
popf
xor
mov
jns
inc
rclb
mov
movsl
xor
lret
mov
sbb
lock
loopne
insb
in
imul
or
loopne
mov
xorb
or
out
mov
adc
cltd
mov
idivb
shrb
push
cmpsl
pop
mov
add
add
add
sbb
sahf
push
cmp
pop
scas
pop
sbb
into
into
imul
jb
lahf
cmp
and
mov
imul
adc
std
pop
cwtl
aas
and
adc
inc
push
sbb
jl
fisttpl
pop
jae
fidivrs
mov
inc
push
inc
mov
cltd
sub
andb
shl
fisubrl
inc
sbbb
inc
adc
xchg
jae
mov
ret
cmp
xchg
jo
aaa
cmp
outsl
in
lods
mov
pop
inc
lds
xchg
inc
das
clc
cmpsl
call
add
pop
lea
mov
add
mov
mov
push
out
ja
push
rep
lret
pop
dec
mov
in
jp
loope
cmp
and
jp
rcr
out
mov
nop
cwtl
mov
jl
je
sahf
repz
jge
hlt
shrl
ds
lods
and
test
fdivs
add
sbb
lock
int3
call
iret
pop
scas
inc
loopne
mov
add
push
inc
add
in
dec
mov
inc
pop
dec
loope
mov
addb
pop
and
mov
push
pushf
mov
jmp
mov
fs
shr
fisttps
inc
jge
mov
imul
mov
mov
xor
adc
aaa
adc
or
mov
nop
sarb
and
lods
loopne
mov
andl
add
pop
scas
pusha
or
mov
fisubrl
mov
cmpsb
rolb
inc
mov
add
cwtl
dec
jg
cli
mov
push
inc
jne
adc
cltd
pusha
mov
adc
and
cld
pop
shlb
add
and
test
add
mov
cmp
pop
or
and
mov
cmp
mov
mov
or
insl
lods
mov
mov
sbb
in
jno
imul
rclb
adc
cmp
out
das
pop
mov
mov
rep
cmp
out
xchg
sbb
dec
scas
lahf
test
call
push
aad
cmp
push
stos
add
pusha
and
call
mov
and
pusha
and
sub
xor
lock
scas
andb
lret
jns
pusha
pusha
jnp
std
shll
dec
or
sub
and
orb
add
lds
pusha
fucom
and
mov
fcmovb
sub
push
stos
loopne
push
fistpl
xor
pop
xchg
imul
or
mov
mov
popf
inc
aaa
lahf
push
mov
shrb
int
mov
push
bound
dec
roll
jl
in
mov
inc
enter
cmpsl
pop
or
inc
pushf
jmp
pusha
rcrb
cs
out
stos
addb
insb
ret
addb
sbb
mov
lret
insb
xchg
inc
sbb
and
mov
mov
shl
inc
xchg
push
jg
ret
call
scas
adc
add
pusha
orb
rol
and
loopne
cmp
and
aaa
in
and
decl
loopne
jecxz
mov
inc
dec
add
ret
loopne
push
sbb
imulb
and
mov
sbb
or
loope
xor
mov
test
jno
push
mov
mov
add
pusha
and
aaa
mov
cmp
pop
paddq
in
xor
js
mov
shlb
shrl
in
xchg
fsub
lahf
lea
add
mov
movsb
and
mov
clc
pop
mov
and
mov
stos
flds
mov
dec
lcall
and
mov
hlt
cmpsb
and
loopne
cld
mov
ret
xor
xor
mov
les
cwtl
jl
loopne
lret
das
adc
inc
nop
int
xorl
pop
out
add
shlb
or
sbb
pop
inc
jnp
jmp
in
adc
push
cltd
pop
movsl
ljmp
inc
push
fdivp
out
pop
pop
test
mov
jne
mov
nop
les
pop
push
int
sub
dec
jne
xchg
test
and
inc
mov
jo
and
je
fs
sub
jle
pop
adc
inc
mov
mov
and
adc
dec
jno
arpl
and
push
inc
stos
lock
mov
inc
add
push
loopne
dec
and
mov
mov
mov
dec
sbb
jno
cld
mov
es
rcrb
dec
jl
aad
ljmp
push
and
mov
rol
daa
xor
cwtl
ds
pusha
add
xchg
or
in
xlat
and
mov
push
or
push
sub
sub
int3
rsqrtps
rolb
jmp
mov
inc
loopne
mov
dec
loopne
loopne
push
and
xor
aam
add
mov
ret
jae
stc
mov
sahf
mov
jae
out
mov
sbb
push
lret
xor
sub
rcrb
add
pop
mov
mov
add
and
aad
andb
jle
add
pop
mov
xchg
fbstp
test
sahf
test
add
lahf
mov
je
dec
push
adc
ret
mov
das
ret
subb
stos
idiv
pop
leave
ss
test
rol
adc
pop
daa
aad
xor
mov
ljmp
inc
xchg
fdivs
in
pusha
adc
mov
lods
or
andb
arpl
nop
test
lret
sbb
cmp
push
sub
dec
inc
ss
and
jne
mov
cmp
cmp
push
adc
andb
add
inc
xor
sbb
mov
cmc
lea
pop
bnd
inc
pop
aad
jno
divb
add
mov
arpl
orl
mov
adc
and
push
out
add
pusha
lods
mov
or
test
lods
cmovns
fucomip
pop
dec
xor
adc
or
mov
inc
inc
pop
sbb
sbb
xchg
insl
ss
loopne
psraw
lret
push
adc
mov
add
loopne
and
addb
push
xchg
fstps
push
mov
mov
pusha
dec
popa
dec
push
mov
mov
or
loopne
clc
shlb
test
loopne
add
inc
pop
inc
psrad
inc
rcr
mov
shlb
push
imul
mov
adc
fdivrl
ret
sbb
lahf
mov
mov
push
xlat
mov
pusha
test
and
mov
insl
lret
xchg
pop
lahf
mov
call
sbb
imul
inc
shlb
sbb
sbb
jmp
mov
add
call
cmp
int3
addb
add
mov
loop
lret
xor
arpl
mov
inc
or
loopne
enter
or
mov
cmpsb
add
inc
mov
mov
inc
mov
and
into
xchg
mov
subb
pusha
adc
dec
jae
cmp
adc
movsl
xchg
out
bound
push
pusha
pusha
shlb
test
adc
popa
xchg
daa
je
pop
andb
outsl
and
clc
lret
add
or
dec
sahf
decl
xchg
push
and
shl
popf
fidivs
push
adc
out
dec
cltd
ljmp
pop
and
rolb
ss
mov
shlb
aaa
rcr
add
loopne
in
stos
loopne
ja
dec
jl
lea
pop
add
movsb
pusha
add
inc
adc
insb
inc
repz
and
int3
out
stos
or
cvtps2pi
sub
adcl
inc
fs
xor
pop
popa
int3
nop
sub
and
pushf
add
lcall
aam
pusha
mov
add
and
pusha
xchg
jp
dec
and
jnp
dec
insl
je
or
xchg
lods
loopne
inc
loopne
pusha
insl
ficoms
dec
cmp
loop
mov
cli
cmp
repz
push
mov
test
xchg
and
js
inc
gs
mov
shlb
ds
jbe
call
cmpsl
fisubs
nop
mov
pop
inc
sub
pusha
mov
imul
cmp
push
lods
inc
loopne
push
pop
push
jae
andb
dec
js
and
out
add
repnz
add
xor
xchg
push
xor
or
gs
jg
leave
shrb
add
enter
cltd
dec
sbb
adc
and
aam
cmp
nop
dec
lahf
sarb
shrl
inc
pop
xor
xchg
shrl
sub
add
fisubs
jne
shlb
clc
push
adcl
jp
into
dec
aaa
sub
jg
inc
repz
inc
imul
jl
test
int3
dec
lods
adc
pusha
loopne
jo
xchg
or
jecxz
dec
shrb
xchg
mov
xor
inc
jle
les
inc
mov
lock
test
mov
and
mov
js
pop
testl
add
push
jg
dec
pop
xchg
inc
mov
cmp
fadds
and
loopne
jg
and
bswap
jo
add
jge
iret
iret
sbb
fcompl
dec
mov
push
xchg
arpl
sbb
cli
gs
push
jmp
pop
xchg
jmp
mov
or
and
addb
shlb
mov
push
pop
aas
cmp
cwtl
stos
push
jne
fdivrl
add
clc
addr16
jbe
inc
mov
pop
adc
push
loopne
push
test
pop
inc
outsb
js
cmc
cmp
pusha
xlat
push
xchg
repnz
pusha
test
and
rclb
inc
and
push
lcall
sub
mov
dec
loope
sar
andb
aaa
js
mov
andb
lds
mov
xchg
movsb
pusha
add
ja
call
mov
out
and
mov
lea
int3
rclb
nop
les
xchg
movsl
sahf
insl
repz
shrb
push
inc
loope
xchg
jnp
xor
in
pusha
cmp
push
in
movups
xor
int
repnz
je
pusha
loopne
mov
sub
pusha
mov
rcrl
xchg
iret
mov
out
fsubrl
inc
loopne
ljmp
pusha
rolb
and
lods
and
iret
lds
lock
iret
mov
movsb
pusha
mov
fldcw
sub
inc
and
cmp
inc
loopne
and
pop
iret
out
loopne
mov
nop
xchg
jle
aas
mov
jmp
cmpsb
mov
rorb
and
inc
fs
popl
pusha
or
loopne
loope
jns
adc
and
cmpsb
mov
cmp
mov
pop
xlat
mov
ficoms
jns
mov
jg
lret
loopne
xor
pop
dec
xchg
push
shlb
mov
loopne
out
ja
jb
mov
ja
xchg
cmpsl
push
push
jp
inc
inc
fsubrl
out
cmp
inc
xchg
xor
mov
dec
dec
mov
arpl
add
fiadds
mov
pop
cltd
mov
add
pop
push
and
sub
add
enter
xor
mov
push
inc
into
sub
scas
cmpl
loopne
push
inc
rol
lcall
sub
inc
lock
pop
adc
shl
shl
mov
lods
and
dec
sti
popf
test
xorl
shlb
inc
mov
iret
jl
pop
imulb
and
and
and
or
orb
push
dec
push
shlb
mov
push
mov
sbbb
inc
into
sub
leave
sbb
push
jo
xor
scas
mov
nop
mov
aad
int3
cmpsl
je
mov
add
movsb
inc
add
rol
fistps
adc
xor
sub
jne
call
mov
and
or
adc
or
icebp
pop
jb
andb
lods
pop
out
or
add
test
imul
sub
sahf
sub
pusha
and
jne
lret
pusha
pop
nop
ret
cwtl
sub
mov
das
pop
lret
push
enter
adc
sub
and
cmp
add
mov
xorl
and
js
outsl
mov
call
rclb
test
jo
js
inc
add
loopne
imul
jns
fs
sbb
mov
adc
pop
cmp
addb
leave
xchg
push
jo
aas
popa
adc
movsb
addb
rcrb
shl
jnp
hlt
dec
adc
dec
dec
lods
sub
or
pop
nop
xor
test
and
fildll
pusha
shlb
ja
repz
stc
mov
inc
dec
hlt
xchg
mov
out
loopne
loopne
inc
mov
pushf
iret
pusha
lcall
into
sub
loopne
inc
lcall
xchg
repnz
stos
addb
and
ljmp
xchg
and
mov
pop
outsb
negb
or
mov
lods
repz
into
and
shlb
andb
dec
mov
repnz
mov
gs
mov
dec
notb
das
stc
dec
mov
add
andb
mov
sbb
or
mov
loopne
lret
add
loopne
stos
and
add
ror
add
adc
sub
sbb
les
loope
add
pop
dec
mov
loopne
andb
cwtl
xlat
add
xor
shr
add
pop
push
lods
jecxz
stos
jno
lods
movsb
inc
inc
aas
adc
or
add
jle
and
shlb
ret
jge
adc
mov
pop
mov
int3
mov
adc
rorl
ficoml
cmc
cmp
shl
and
jecxz
lea
shlb
mov
rolb
xchg
mov
je
test
add
je
xorl
add
popf
out
xor
sahf
push
cmp
push
cmpsl
test
outsl
xor
jp
pop
push
insb
jg
loope
push
js
punpckldq
and
loopne
jo
mov
dec
fwait
or
jle
aad
stos
or
cmp
push
add
add
andb
mov
add
jae
jmp
ror
addb
test
mov
inc
dec
mov
popf
jo
test
and
shlb
and
mov
and
add
ja
mov
stos
mov
xor
lahf
in
mov
inc
faddl
addb
ss
ret
hlt
push
loopne
xor
add
mov
pusha
and
das
sub
sarb
sbb
clc
sub
lcall
sub
cwtl
pop
pop
and
pop
call
pusha
and
xchg
repnz
cwtl
fwait
xchg
or
and
pusha
push
out
lods
aam
loopne
adc
mov
jne
add
jmp
xchg
stc
fwait
loop
xchg
in
pop
sbb
aam
loopne
sub
loopne
lahf
cli
movsb
rolb
incb
fldl
push
shll
cld
sub
pusha
dec
adc
lods
insb
pop
push
mov
loopne
jg
jcxz
push
or
dec
cmpsb
and
fnstcw
mov
out
xchg
dec
test
mov
ficompl
das
std
fsts
mov
sarl
into
or
lahf
roll
mov
loopne
add
inc
popf
in
inc
movsl
mov
jmp
inc
pusha
sub
inc
aas
cmp
fisubs
popf
test
andb
rorb
push
insb
adc
loope
imul
mov
pusha
fisubrl
inc
inc
pushf
data16
jnp
mov
and
and
and
mov
xlat
scas
pusha
shl
ret
sbb
mov
push
sbb
mov
mov
jo
into
push
aad
add
pusha
and
jge
cmpsl
push
xchg
mov
adc
rcrb
movl
mov
dec
das
mov
loopne
add
insb
jmp
pop
je
jl
addb
popa
out
lock
sti
fisubl
adc
int
mov
es
or
jne
mov
jecxz
jg
pusha
loopne
aad
mov
ss
add
add
add
loop
mov
push
or
mov
out
addb
push
test
inc
xor
loopne
flds
out
lods
mov
jle
mov
dec
sub
and
adc
xor
and
ljmp
rolb
inc
cld
test
andb
add
add
js
insb
int3
in
jnp
jecxz
push
fsubs
dec
add
inc
or
add
rclb
inc
pusha
pushf
jno
mov
stc
ja
aam
loopne
scas
rolb
push
adc
or
xchg
out
inc
int3
testb
add
and
shr
cld
and
add
stos
pusha
shrb
mull
pusha
and
and
ja
fistpl
pop
cmp
pop
cmc
mov
andb
inc
pusha
xchg
cltd
xor
lret
or
inc
add
mov
dec
aaa
imul
xor
rolb
mov
loopne
add
and
mov
sbbb
mov
inc
pusha
inc
mov
loopne
mov
adc
andb
cwtl
aas
sbb
call
fisubrs
dec
fsts
mov
shl
aam
inc
pusha
cwtl
and
add
sbb
xchg
inc
outsl
dec
ret
addr16
outsl
popa
pop
xor
add
jo
andl
lret
push
int
andb
mov
stos
pusha
add
pushf
ret
rolb
push
pusha
and
push
je
adc
inc
adc
jnp
or
aad
loopne
sbb
subb
sarl
ja
dec
xchg
repz
sbb
pusha
jecxz
mov
loopne
loopne
repz
xchg
cltd
clc
dec
push
in
adc
add
pusha
and
fstl
xchg
enter
mov
icebp
pop
add
push
stos
sub
lret
xor
push
and
push
test
add
or
inc
aaa
mov
mov
pusha
jbe
push
ret
dec
or
ror
xor
movsb
add
pusha
mov
mov
add
andb
shlb
xchg
shlb
pop
dec
pushf
and
loopne
sub
dec
nop
inc
xlat
pop
push
mov
push
stos
inc
add
push
int3
adc
cmp
out
loopne
andb
cmp
repz
ud0
lds
loope
push
mov
loopne
fstl
mov
out
pop
out
outsl
inc
rcrb
stc
int3
mov
mov
loopne
and
rcll
mov
outsl
mov
lcall
lds
mov
dec
and
inc
rcr
cmpl
into
ss
jmp
inc
pusha
jne
bound
loopne
mov
andb
mov
mov
aad
faddl
mov
and
addb
ja
mov
lea
push
add
in
into
xchg
adc
sub
and
inc
push
aas
or
popf
adc
mov
fs
adc
rolb
mov
add
pop
adc
push
scas
pushf
dec
jnp
mov
ret
cli
pushf
xor
loopne
std
orl
movsb
pusha
and
add
sub
mov
fistpll
loope
rcr
test
outsl
mov
and
xchg
jle
dec
hlt
xchg
and
push
sub
pop
xchg
imul
xchg
mov
loopne,pn
or
subb
inc
mov
addb
rolb
mov
in
sahf
rorb
push
shrl
dec
pop
sub
adc
leave
cmpsb
add
xchg
hlt
cmp
mov
xchg
nop
push
jp
mov
sti
pop
dec
and
push
loopne
dec
in
rolb
shl
std
pusha
cmp
push
dec
xchg
cmp
add
andb
subl
lret
sbb
cmpl
add
mov
ret
and
xor
loopne
lock
daa
or
shl
mov
mov
pusha
pop
adc
aaa
lods
fwait
xor
push
xchg
imull
out
jb
sbb
rolb
shl
sub
loopne
push
jae
push
stc
sbb
pop
pop
mov
lods
addb
jg
cmp
lcall
stos
das
ljmp
test
add
loopne
insl
sub
adc
sbb
repz
xchg
shrb
mov
xor
add
pusha
jecxz
ds
and
lds
rorb
and
mov
mov
cmp
pop
insb
pop
xchg
gs
push
mov
dec
mov
mov
and
inc
sub
jp
andb
and
sbb
pop
or
jno
dec
mov
add
inc
adc
rcrl
xor
xchg
pusha
or
out
or
xchg
ret
andb
xchg
jl
dec
cmp
in
xor
jmp
mov
ret
mov
pusha
sub
pusha
loopne
ss
xchg
add
lds
pusha
sbb
pusha
add
pop
pop
fs
fcmovbe
movsb
loopne
dec
pop
jnp
popf
pop
shrl
repnz
jle
loopne
xor
loope
movsb
inc
mov
jge
sbb
incb
mov
mov
das
inc
lahf
loope
rolb
and
push
mov
pusha
adcb
stos
inc
pusha
ljmp
pusha
fsubrl
loopne
adc
ja
sahf
mov
pop
or
arpl
pusha
cmpb
scas
and
fidivs
add
out
sbb
and
or
jns
adc
and
andb
dec
call
inc
cltd
pop
mov
cmc
shlb
data16
int
xchg
mov
and
adc
cs
rolb
dec
insl
repz
xlat
testl
xor
mov
movl
insb
add
sub
pusha
test
loopne
scas
mov
inc
mov
pop
mov
pop
or
cmp
xchg
mov
add
adc
shll
add
inc
push
push
jno
mov
mov
mov
ss
dec
idivb
lea
xor
lock
test
or
pop
inc
or
xlat
push
pop
adc
pusha
inc
cmp
repnz
ljmp
push
or
add
imul
sbb
dec
add
fbld
ss
mov
icebp
and
mov
sti
sbb
popf
push
pop
shll
addr16
mov
add
inc
dec
cmpsl
xchg
in
mov
aad
fdivr
test
gs
fs
pusha
pusha
xlat
jmp
mov
adc
and
js
loop
inc
popf
jecxz
sbb
add
inc
inc
sar
inc
lret
pop
jmp
out
and
mov
and
push
mov
xchg
lcall
andb
popa
loope
incb
out
ror
jb
jb
mov
dec
dec
mov
lcall
std
xor
int3
sbb
test
lea
mov
jge
jbe
mov
mov
add
stos
shlb
sahf
jmp
xor
xor
dec
outsb
jl
push
mov
mov
sahf
scas
xor
mov
rclb
dec
aaa
and
and
fstp
out
pop
lcall
fmul
xchg
mov
add
pop
fstpl
aaa
adc
int3
mov
xchg
jne
aaa
fsubrp
mov
loopne
addb
mov
fadds
inc
ss
sub
mov
xorb
sub
addb
lret
fldt
jp
ret
push
lcall
jg
ljmp
je
add
shrb
fdivrp
ficompl
push
sub
repnz
dec
fwait
sbb
mov
add
xor
adc
pusha
pop
clc
out
sub
add
int3
push
mov
lods
rolb
pusha
rolb
cli
push
outsb
mov
inc
sub
aas
inc
sub
lods
jg
mov
cmpsb
pusha
loopne
out
mov
pop
lcall
rcrb
rorb
inc
add
cmpsl
cwtl
pop
jnp
movsb
loopne
mov
lret
inc
pusha
sbb
call
jns
sub
add
adc
mov
sbb
cmpsb
mov
pop
adc
add
add
loopne
loopne
stc
cmp
inc
adc
add
bound
mov
mov
or
ds
mul
lods
mov
mov
or
movsb
shlb
xchg
loop
push
pusha
mov
cmc
push
imul
stos
pusha
add
in
mov
jp
movsb
and
and
sub
inc
or
add
mov
add
and
test
sbb
mov
aas
aas
testb
shlb
jno
dec
add
mov
and
jnp
mov
inc
mov
or
push
loope
test
and
mov
aas
stc
inc
and
pusha
inc
sub
mov
mov
adc
sbb
mov
sub
inc
sub
movsl
inc
inc
test
and
pop
sarl
xchg
adc
xor
loopne
mov
sbb
fdivr
aam
addb
add
in
mov
add
inc
les
rolb
imul
mov
jnp
mov
imul
push
add
push
inc
mov
lcall
lods
shlb
xlat
hlt
xchg
inc
fisttpll
test
andb
addb
pusha
orb
int
js
shl
adc
xchg
push
pusha
and
cwtl
jmp
scas
mov
mov
xor
shl
ror
xchg
cmpsb
add
dec
cmp
or
add
dec
lea
rclb
rolb
jmp
add
or
and
push
pop
inc
cmp
rolb
aaa
push
sti
mov
mov
mov
rcrb
jae
fcmovbe
dec
in
lret
mov
imul
idivb
or
and
jp
mov
xorb
ret
out
jmp
aad
or
pusha
lcall
rcrb
aam
cwtl
push
inc
dec
insb
in
adc
jmp
cs
mov
inc
shlb
test
inc
sbb
push
stc
pop
mov
inc
js
sub
and
shl
out
arpl
add
imul
pusha
popf
push
aam
xor
mov
and
dec
addr16
test
mov
pusha
mov
rcr
xor
cld
rcrb
mov
fistps
icebp
jno
imul
dec
andl
and
pop
jb
das
sti
lds
push
jae
adc
xchg
stc
fildll
pusha
add
mov
push
lret
loopne
fistpl
call
loopne
das
cltd
push
test
and
rol
sbb
rorb
jb
pusha
cmp
andb
and
mov
loopne
rolb
sbb
add
fsubrl
sbbb
lds
adc
aam
mov
pop
enter
or
rclb
sahf
sbb
jmp
fiaddl
and
sarb
idivb
addb
inc
jg
pop
mov
cld
addr16
fs
xchg
neg
pop
ret
ljmp
jle
addb
cmp
pusha
push
cmp
jbe
fsts
negl
pop
popf
add
inc
fiadds
jne
cmp
pop
fisttpl
or
cmp
rolb
cld
inc
mov
sbb
ret
add
mov
inc
mov
inc
push
aam
cwtl
mov
jl
test
add
cmpsb
mov
xchg
jb
bsf
xchg
mov
jnp
loop
pop
ret
sub
sbb
jmp
fistpl
xlat
lret
roll
bound
das
push
adc
roll
not
mov
push
stc
idiv
xor
or
jg
cmp
mov
mov
add
rolb
scas
pusha
add
pusha
mov
mov
add
cmc
dec
sub
mov
addb
lea
pop
arpl
add
test
mov
movsb
rolb
xorl
sbb
add
mov
lret
in
sti
sub
dec
dec
out
mov
andb
inc
push
and
pusha
scas
sbb
mov
add
pop
cmp
sti
popa
mov
lcallw
andl
test
sarb
cmp
fwait
push
test
and
mov
aad
and
andb
js
enter
cld
out
rcl
insb
inc
pushf
add
jl
ljmp
insb
fwait
insb
sub
mov
dec
cli
cmp
jp
out
sbb
adc
mov
inc
pop
rcrl
inc
inc
je
mov
shlb
sub
sbb
mov
dec
test
andb
add
or
sub
loopne
xorl
mov
lea
addr16
mul
mov
int3
sbb
inc
ja
or
mov
mov
mov
ret
push
mov
xchg
inc
pushf
mov
adc
sbb
into
outsl
add
and
ja
lods
mov
fimull
mov
dec
mov
cli
pop
cmp
push
cmp
add
popl
jp
mov
jl
sar
stc
shlb
cmp
pop
insb
mov
inc
aas
sti
mov
pop
sub
inc
into
fwait
int3
xchg
scas
fisttpl
mov
push
xorl
xor
lret
inc
inc
mov
rolb
loopne
and
pop
inc
pop
or
push
or
and
nop
addb
loop
push
cmp
push
sub
adcb
ja
repz
jg
mull
inc
add
aas
jle
pop
sbb
push
inc
lcall
cwtl
cltd
shrb
bnd
sbb
and
les
push
loopne
cmc
sbb
inc
and
sarb
pusha
pusha
mov
inc
fldl2e
mov
lahf
xor
out
std
jp
fdivrs
add
js
add
cmp
xchg
fidivs
pop
pop
inc
mov
push
jbe
pusha
pusha
movsl
dec
aad
shlb
std
sbbl
out
loopne
add
stos
push
nop
mov
scas
sbb
outsl
pop
and
pusha
pop
or
add
push
rorb
mov
cmp
add
push
in
mov
xchg
mov
clc
aas
pop
lret
out
dec
andb
xor
iret
aaa
or
lahf
mov
loopne
and
inc
pushf
sub
insl
repnz
add
out
jmp
iret
adc
loopne
inc
add
sub
ds
push
jg
test
inc
and
xchg
popf
push
outsl
ljmp
push
js
cltd
jecxz
jmp
dec
aaa
in
xor
movsb
and
and
xchg
jne
andb
and
aam
and
inc
add
icebp
and
push
ja
shlb
and
repnz
adc
mov
rclb
sub
jno
and
mov
and
cmp
adc
loopne
push
push
cltd
int
and
mov
pop
fs
sub
and
fs
and
sub
test
sbb
xchg
push
outsl
push
mov
scas
arpl
xlat
push
jge
andb
cmp
loope
rorb
repnz
or
pop
cmp
and
dec
jp
inc
and
xchg
insb
mov
jb
fiadds
pusha
push
mov
pop
and
add
inc
push
inc
mov
fwait
jmp
jae
nop
lret
dec
inc
in
mov
cltd
test
add
out
les
call
xor
cltd
pop
xor
jmp
or
and
pusha
insl
mov
bound
add
lcall
jl
xchg
add
subb
mov
pop
rcl
fdivp
mov
xchg
call
push
jg
iret
dec
mov
into
fidivrl
loopne
jmp
movsl
cs
clc
lods
pusha
rclb
mov
ret
call
inc
fisttpl
mov
pusha
aaa
leave
movsb
inc
loopne
pop
fdivrp
cmc
push
mov
mov
loopne
in
sbbl
mov
mov
fildll
mov
cmc
sbb
cmp
dec
pop
int3
leave
mov
add
lea
mov
pop
cwtl
jecxz
cmpl
dec
jecxz
loopne
pushf
mov
mov
rcrb
pusha
sbb
rcrl
aam
aam
test
mov
scas
add
mov
and
pop
incl
inc
xlat
jl
cmp
push
inc
and
dec
fistpll
inc
arpl
add
add
pop
cld
cmp
int
dec
in
clc
jg
test
mov
inc
inc
and
inc
cmp
iret
mov
cmp
shll
add
in
int3
push
jmp
inc
cltd
ficoms
cmpsb
loopne
pop
loop
scas
and
mov
xchg
xchg
pop
jns
mov
mov
xor
xor
or
add
pop
cmp
jns
test
inc
loop
cs
add
inc
mov
test
and
sub
add
xchg
outsb
push
inc
add
xor
add
shlb
andb
add
pop
jns
ret
int3
jle
clc
stc
sti
push
add
jo
out
add
cmp
push
push
xchg
jmp
shlb
dec
clc
inc
jb
aas
sti
xor
lahf
sahf
in
sbb
cmp
push
xchg
out
out
inc
frstor
addb
cmp
pop
xchg
lahf
cmp
call
vmread
dec
push
outsb
add
rcrb
mov
inc
jg
sbb
or
and
inc
jp
nop
lahf
sub
movb
loope
shlb
cmp
sbb
or
sub
inc
cmp
add
pop
inc
push
or
iret
or
lods
out
stos
jg
dec
adc
add
pop
adc
arpl
lret
add
add
in
mov
pop
add
inc
adc
mov
pop
add
andb
push
mov
mov
and
sbb
push
sbb
jae
or
push
mov
and
std
xchg
and
sbb
mov
add
pusha
mov
pusha
inc
popf
loopne
jp
icebp
int3
cmp
and
sub
adc
or
loopne
inc
dec
andb
and
adc
rolb
pop
or
mov
mov
mov
lret
shll
inc
cmpb
mov
mov
dec
incb
add
push
mov
inc
jae
mov
jns
push
ret
lret
lcall
cmp
out
mov
add
cmp
addb
sbb
lret
fstps
push
push
push
jl
cmp
les
jg
mov
and
addb
mov
inc
inc
lret
or
pusha
pusha
imul
shlb
or
adc
les
iret
addr16
pop
sub
mov
negl
hlt
scas
sbb
fcompl
loopne
fstps
rcrb
movsb
shlb
jle
xor
pop
mov
rcll
xchg
jne
fsts
sbb
lea
rolb
adc
add
inc
push
and
xchg
data16
addb
insl
in
pop
rcr
mov
and
mov
pop
inc
xchg
xor
cmp
dec
lock
stos
insl
rorb
and
sarb
in
and
stc
testl
add
shrb
shlb
add
sbb
xchg
xor
add
xchg
xchg
mov
adc
movsb
shlb
repz
and
gs
add
xchg
into
xor
xor
push
popa
xlat
inc
test
mov
jg
inc
jns
pusha
loopne
rorb
sub
and
jo
mov
loope
add
rcrb
cmp
lds
or
sti
fnstsw
jle
addb
push
orl
or
incb
inc
loopne
push
inc
lods
add
shll
hlt
dec
xor
dec
adc
iret
repz
lock
adc
lock
xchg
icebp
xor
loopne
movb
scas
in
stc
aaa
push
xor
lea
in
add
and
add
mov
add
or
sbb
inc
mov
mov
sarl
xchg
push
movsl
add
add
mov
mov
and
and
adc
jbe
pop
push
lret
mov
and
scas
sbb
and
mull
inc
loopne
sbb
stos
add
add
mov
add
lret
mov
xor
testl
xor
xchg
xchg
xchg
rolb
and
testl
nop
or
xor
addb
das
aad
iret
inc
mov
imul
push
arpl
test
add
orb
inc
mov
add
pop
mov
rcl
sbbl
bound
test
pusha
loop
adc
sbb
dec
inc
je
or
ret
mov
xchg
out
xor
add
shlb
or
sub
loopne
xchg
test
loopne
cmpsl
mov
loopne
and
divl
out
ror
xchg
sub
cmp
lret
movsl
clc
repz
fnstsw
fcmovnb
dec
ret
xchg
inc
imul
cmc
pushf
nop
pop
mov
add
adcl
push
push
cmc
cmp
lahf
iret
outsl
aaa
test
lea
inc
loopne
and
add
je
push
out
data16
or
outsl
iret
pop
sub
or
and
ja
cltd
adc
lret
mov
add
popf
mov
pushf
into
movsl
cmpl
or
jle
jae
dec
cmp
es
shlb
pusha
or
lahf
cmp
add
vshufps
lds
add
adc
loopne
pushl
adc
lea
frstor
xchg
and
jns
pop
shl
out
sbb
mov
pusha
add
shlb
pop
or
add
add
or
setbe
or
aaa
jle
add
mov
inc
or
adc
or
lock
add
xchg
push
mov
mov
lret
xorl
int3
es
rclb
jae
sbb
rol
mov
add
and
sub
shlb
adc
jb
loope
rol
fsub
daa
fcmovu
ret
push
inc
loopne
andb
outsb
pop
push
andb
add
rolb
mov
mov
lods
mov
mov
insl
popa
jge
mov
mov
sbbl
test
inc
push
pusha
pusha
pop
les
repnz
pusha
push
icebp
mov
ret
or
pusha
sub
xchg
cmpsb
add
lahf
shlb
mov
sbb
aad
sbb
decl
lds
mov
inc
add
push
add
rcrb
or
loopne
cld
xchg
inc
sub
idivl
mov
rolb
std
mov
cmpsl
lods
shlb
loopne
ret
test
pusha
or
add
loopne
aad
or
imul
jns
dec
test
inc
mov
iret
jns
mov
loopne,pn
mov
cmpsb
pusha
add
andb
lret
test
shrb
adcb
add
jo
xor
add
and
test
sarb
pop
lock
movsl
int3
shlb
sar
gs
ficomps
mov
jle
mov
add
pop
xchg
and
pusha
jns
add
mov
jo
cs
inc
loop
sub
jbe
insl
ds
push
addr16
pop
out
dec
sub
sbb
mov
in
sar
loop
and
hlt
xor
aaa
inc
insl
inc
mov
addb
es
add
ljmp
fcmovu
pop
shr
push
aaa
mov
and
mov
pusha
daa
sub
sbb
notb
stc
pop
adc
xchg
in
add
mov
and
aam
and
enter
sub
loopne
pop
ja
int
jp
push
out
ss
outsl
mov
stc
loopne
jl
fwait
dec
mov
movsb
addb
mov
cmp
in
inc
dec
cld
add
inc
mov
lret
fmul
xor
jns
push
add
push
mov
sbb
ss
add
loopne
jp
in
stos
inc
shlb
mov
add
mov
ljmp
in
sub
and
sub
test
addb
loopne
push
imul
mov
rolb
mov
andb
dec
lea
aas
mov
fs
ss
addr16
ret
addr16
shll
lods
and
add
addr16
rolb
mov
test
std
mov
rcrb
or
add
movsb
loopne
and
inc
rclb
sub
dec
leave
lcall
mov
lea
inc
mov
hlt
aas
mov
loopne
loop
xchg
shll
cwtl
pop
outsb
test
test
mov
inc
cmp
or
sbb
pop
outsb
addb
cmp
and
je
int3
fidivrs
outsb
mov
loopne
das
imul
and
sbb
fs
and
sbb
dec
ljmp
andb
add
inc
inc
fsqrt
clc
pop
insl
pop
imul
mov
adc
mov
mov
cmovo
sarl
mov
push
into
adc
out
popf
repnz
inc
lds
mov
sbb
xchg
dec
cmc
xchg
mov
and
mov
add
addl
rcrb
ror
jg
je
rcll
movsl
dec
loopne
jle
adc
cmp
ds
scas
rolb
pusha
inc
inc
pop
scas
push
andb
jnp
adc
pushf
in
aad
scas
and
outsb
outsb
outsb
insb
xor
ret
mov
jb
and
stos
sub
inc
test
shlb
or
aas
xchg
jge
pop
mov
lds
inc
inc
js
jnp
shlb
in
push
mov
out
dec
movsl
stos
add
sub
shlb
or
lds
mov
add
cmpsb
mov
sbb
leave
andb
pop
loope
push
xor
dec
pop
adc
jnp
jp
add
loopne
adc
sbb
xchg
add
mov
mov
inc
pusha
sub
out
add
adc
add
add
orl
or
and
jle
lea
or
adc
data16
sub
lret
imul
jp
shl
pop
cltd
jmp
loop
loopne
adc
out
fmull
jg
movsl
xchg
adc
scas
rolb
mov
dec
xchg
mov
adc
ja
pusha
mov
mov
jo
or
push
xchg
lds
mov
out
dec
shlb
loop
pusha
add
push
push
mov
jmp
rcll
aaa
xor
push
xchg
into
dec
icebp
adc
pusha
adcb
mov
out
sbb
out
aas
into
cmpsb
and
bound
cld
xchg
fidivrl
ret
sbb
aaa
or
pusha
dec
push
aas
lret
movsb
and
lods
fisttpll
jae
inc
inc
or
nop
loope
sub
xchg
xchg
dec
lds
fildll
addl
jb
mov
mov
mov
test
and
adc
pop
lock
rol
xor
adc
add
aas
clc
mov
mov
mov
mov
adc
dec
mov
test
loopne
dec
mov
pop
mov
int
push
and
shlb
call
shlb
orb
pop
or
jp
xlat
inc
shll
sub
sbb
insl
sub
cmpb
cmp
and
and
cmp
or
shlb
dec
inc
jno
insl
loop
sti
pop
push
inc
sbbb
inc
jb
adc
jno
out
cmpsb
addb
fistps
jne
push
gs
repz
bound
inc
pusha
add
pusha
fisubrl
addb
xor
fnsave
pop
dec
dec
add
mov
leave
mov
cmpsl
loopne
jge
fldcw
loopne
gs
pop
jno
mov
mov
or
jo
test
inc
loopne
pusha
ror
pop
xchg
inc
lods
test
subb
and
movsw
mov
and
add
nop
mov
and
mov
mov
sub
inc
dec
lock
push
xchg
or
mov
xchg
xor
jae
sbb
cmp
xlat
outsl
and
and
fs
jl
das
lret
mov
push
pop
pop
cltd
bound
adc
jge
cmp
call
and
in
arpl
aad
fwait
aaa
or
mov
push
cld
mov
sbb
scas
add
push
shlb
mov
shr
push
sbb
inc
mov
cmp
mov
int3
mov
aam
fisubrs
repnz
sbb
jmp
and
mov
mov
jecxz
jno
push
daa
outsb
addr16
or
in
jns
and
js
into
jne
in
sub
inc
or
pusha
pushf
stos
inc
mov
push
or
inc
divb
aad
shlb
xor
mov
mov
and
daa
cmpsb
loopne
xor
adc
js
xchg
pop
rcrb
and
jae
mov
cmp
mov
loopne
fadd
bound
push
rcrl
jns
dec
movsl
xor
repnz
hlt
pop
mov
into
test
add
aas
outsl
xor
sub
outsl
stos
fwait
cmp
xor
inc
loopne
in
inc
jge
out
pusha
subb
inc
inc
sbb
mov
inc
out
shlb
or
shlb
jge
xor
pusha
add
stos
dec
mov
stos
ds
rol
fisubs
scas
lret
lods
cmpsb
add
andl
sahf
mov
and
push
sub
loopne
jno
jae
add
pusha
mov
mov
mov
cmpb
mov
sbb
or
mov
push
insb
adc
shlb
dec
lret
ret
cmp
loop
das
pushf
xchg
add
outsb
in
loop
fldenv
or
mov
and
dec
loope
mov
std
and
add
sub
pusha
loope
enter
add
imull
enter
imul
mov
addb
inc
ret
pusha
sbb
divl
mov
shlb
in
mov
mov
pop
xchg
out
adc
mov
lods
addb
push
add
les
pushf
int
icebp
sbb
sub
ja
jge
gs
push
mov
rcll
inc
add
popa
pop
jp
pop
imul
add
mov
icebp
int
bound
jmp
test
and
push
sti
adc
outsb
or
push
push
in
movsl
shrl
inc
loopne
dec
mov
pusha
pop
nop
push
lods
push
xchg
pop
fcoml
add
inc
mov
popa
adc
jo
xor
adc
cld
call
adc
inc
enter
jecxz
mov
xchg
adc
mov
cmp
sub
mov
push
lock
mov
orl
pop
movsb
pusha
shrb
orb
pop
clc
in
xor
add
adcb
sarl
rcll
pusha
mov
inc
mov
sarb
jno
jno
stos
loopne
jo
add
inc
addl
and
outsl
pop
cmp
lea
pushf
and
mov
mov
test
fldenv
mov
jno
lcall
jge
sbb
add
fcmovu
or
mov
mov
push
add
adc
mov
jge
adc
addb
or
adcb
sub
cwtl
ret
mov
sarb
stos
and
test
pop
bound
jge
xchg
movsl
inc
inc
inc
popa
cmp
stc
add
jne
loopne
xchg
mov
add
jae
inc
jbe
out
pop
cwtl
mov
mov
and
movsl
pop
in
loopnew
add
inc
lea
and
fistpll
out
cli
pusha
imull
cmp
outsl
dec
in
and
andb
or
jne
scas
sub
dec
mov
fists
mov
enter
push
out
scas
test
sbbb
imul
mov
movaps
add
adc
std
push
and
jnp
push
movsb
mov
in
out
mov
loopne
pop
loope
mov
inc
insb
popa
and
mov
mov
insl
repnz
push
and
and
add
insb
pop
movsl
and
and
mov
mov
cmpsb
mov
pop
ss
ficomps
push
inc
mov
inc
jmp
dec
jge
push
hlt
xor
dec
pop
sti
lods
fwait
pop
js
stos
aas
popf
clc
and
add
xlat
inc
jnp
push
cmp
fs
sbb
out
and
mov
add
icebp
xchg
stos
mov
out
xchg
jne
out
in
inc
cmp
pop
or
loopne
or
pusha
add
dec
xchg
outsl
jecxz
mov
fiaddl
and
shlb
mov
mov
and
mov
sbb
dec
mov
mov
repnz
cmp
addb
add
inc
xor
popa
sub
mov
mov
hlt
cmc
sti
adc
inc
and
dec
pop
jle
push
xchg
mov
rolb
and
aad
iret
add
outsl
xchg
jo
andb
rol
cltd
xchg
fldenv
stos
pusha
loopne
out
jl
pop
test
push
clc
and
sbb
ja
mov
sbb
inc
or
dec
dec
aam
addl
shlb
mov
mov
ret
or
and
mov
enter
roll
jb
call
xlat
and
inc
sbb
sub
mov
negl
cltd
cmpsl
int3
fdiv
lret
sbb
push
repnz
outsb
ss
or
data16
aam
loopne
ret
sbb
faddp
paddsb
xchg
pop
daa
inc
add
loopne
out
jno
push
add
negb
mov
shlb
inc
das
and
loopne
pop
test
add
stc
int
xchg
cld
pop
fistl
mov
mov
sub
push
data16
out
push
mov
scas
add
sub
addb
lods
loopne
mov
sbb
mov
add
out
cwtl
pop
loopne
test
inc
jecxz
hlt
roll
or
inc
loopne
sbb
movsl
mov
mov
mov
inc
add
adc
mov
mov
mov
inc
mov
dec
lods
sub
jb
into
fsts
rol
call
xchg
out
in
jae
subl
add
push
fistps
rcrl
in
out
ja
mov
outsb
insl
mov
stos
jg
adc
shlb
inc
out
and
js
test
and
stos
and
andb
sub
mov
popa
iret
lret
rclb
push
popf
int3
push
ret
out
mov
xor
cmp
and
inc
pop
push
xor
adc
add
jge
or
cmpl
sbb
addr16
lret
push
ret
xor
mov
movsb
inc
mov
and
mov
lods
je
jmp
mov
mov
cld
mov
sbb
fnstenv
cmp
cmp
jo
cld
inc
scas
and
xchg
inc
push
movsb
pusha
mov
inc
mov
or
xchg
test
pusha
pusha
test
stos
loopne
sbb
mov
mov
and
adc
roll
mov
das
push
pop
nop
mov
js
or
loopne
enter
insb
lea
call
mov
mov
xor
inc
sbb
dec
cmp
loopne
mov
repz
cmp
mov
mov
sbb
inc
pop
daa
pop
push
and
rorl
inc
xchg
out
ljmp
inc
nop
repz
fcoml
jnp
inc
mov
rol
sbb
fs
aad
in
fadd
jnp
mov
fildll
loopne
es
sub
insl
or
mov
bound
pusha
inc
add
adcb
loop
adc
shlb
mov
mov
push
enter
mov
loopne
mov
rcr
push
roll
rcrb
fisubs
pop
ja
andb
fsubl
or
jbe
loopne
stc
sbb
hlt
xlat
mov
push
add
stc
cld
cmc
pop
mov
sbbb
addb
mov
shlb
and
outsb
test
jno
insb
add
rol
xchg
cmp
js
inc
out
lahf
xor
inc
push
lods
mov
lcall
inc
mov
pop
lods
stos
mov
jno
cmpsb
add
pusha
sarb
imul
dec
cmp
adc
dec
lds
outsb
xchg
sbb
inc
pop
es
pusha
test
pop
les
add
ljmp
sub
mov
nop
mov
cmp
scas
and
loopne
pop
or
pusha
mov
add
add
pop
inc
dec
fs
adcb
and
mov
xrelease
and
or
mov
dec
xor
and
mov
outsl
cltd
sub
xchg
cmc
dec
sub
pop
inc
or
and
inc
lds
ja
sbb
int
inc
inc
mov
icebp
mov
dec
data16
and
mov
cmpsl
push
loopne
add
mov
loopne
out
or
mov
sub
pusha
int
incl
jb
test
mull
js
pop
lock
inc
lret
xchg
mov
xchg
in
aad
inc
xchg
or
xorb
stc
das
loopne
sti
xlat
push
inc
repnz
add
add
scas
loopne
mov
mov
add
inc
xchg
enter
jb
insl
push
in
cmp
adc
dec
lret
stc
pop
lcall
loope
xor
iret
lret
pop
cli
or
shrb
mov
gs
cltd
mov
shl
sub
xor
inc
add
mov
mov
ret
ds
mov
shlb
xor
pop
shl
mov
loopne
push
xor
ds
inc
int3
out
ss
imul
inc
cmpsl
fisubrs
loopne
je
addb
pop
rol
sahf
jle
pusha
and
sbb
pop
inc
cli
insl
and
jae
mov
addb
cmc
divb
addr16
inc
fwait
clc
dec
adc
xchg
andb
dec
fstpl
push
inc
mov
andb
roll
cmp
jae
or
dec
ljmp
cmpsl
push
pop
repz
xor
sub
pusha
loopne
adc
or
cmp
push
ljmp
ds
sti
das
mov
xor
inc
add
jns
pop
jne
out
lret
mov
imull
push
inc
and
pop
and
sbb
push
add
push
fcomi
mov
sbb
test
loopne,pn
mov
xor
xchg
inc
test
orb
pusha
add
pusha
add
mov
jbe
std
popl
xorl
bound
sbb
dec
pop
aad
push
mov
pop
mov
pushf
xchg
popf
sub
orb
shl
pusha
mov
out
out
mov
mulps
fs
sub
mov
and
addb
push
push
fistpl
rolb
test
pusha
aas
push
inc
fsubs
in
scas
call
cld
fiaddl
add
cmpsb
and
pop
int3
xor
pop
scas
mov
adc
cmp
and
addb
inc
mov
loopne
fwait
mov
xorb
sbb
xchg
orl
fmull
xchg
mov
xor
clc
mov
pop
fcomps
push
jmp
shrb
mov
out
gs
hlt
test
and
divl
rcll
xchg
lods
sub
add
gs
addb
cwtl
cltd
push
ret
inc
push
add
adc
test
pusha
repnz
notl
cmpsb
rol
js
je
addb
loopne
pop
mov
ss
sub
shl
in
jno
imul
in
pop
xchg
call
aaa
dec
cmpsb
add
sbb
addb
cmpsb
mov
inc
fs
cmp
lahf
push
jns
xor
inc
aam
push
loopne
notl
leave
sbb
rolb
mov
or
or
incb
cmp
adc
and
inc
push
jl
mov
fnstsw
and
mov
add
rol
mov
inc
cmp
test
les
pop
test
mov
pop
pop
ret
mov
xchg
out
loopne
sub
stos
shl
shrl
mov
clc
push
mov
in
adc
mov
cmp
or
mov
xor
mov
aas
out
loope
lcall
pop
leave
cld
cltd
mov
enter
dec
mov
push
cmpsb
mov
pop
addb
cld
pop
insl
mov
les
popa
lret
inc
lret
sbb
cld
and
mov
mov
adc
or
inc
out
fildl
xchg
test
xchg
sbb
aaa
jecxz
or
xor
je
xchg
in
negl
adc
aad
sti
shrb
add
bound
mov
es
inc
inc
loopne,pn
sbb
stos
inc
add
push
out
mov
inc
and
pusha
jns
mov
mov
inc
call
icebp
mov
and
inc
add
inc
xor
and
mov
dec
lahf
jb
mov
loopne
mov
jae
ds
cltd
jno
inc
inc
dec
loope
pusha
sbbb
add
add
inc
mov
add
pop
jnp
in
out
or
in
fldl
xchg
cmp
cmp
cmc
mov
adc
shrb
aas
std
sbb
inc
or
dec
in
xor
push
je
and
addb
js
pop
pop
popl
cwtl
in
lods
add
adcl
stos
cmp
adcl
cs
pop
cli
and
inc
aaa
mov
mov
jmp
dec
jb
and
popf
stc
xor
cvtps2pd
adc
add
inc
shrl
add
addb
push
mov
test
cmp
sarl
js
icebp
lods
and
ficoml
in
push
push
cmovl
fs
push
jae
jb
cmc
xchg
mov
add
xchg
sbb
addb
lock
inc
scas
inc
divb
test
mov
mov
mov
les
push
pop
sbb
loope
and
vshufps
pusha
shlb
or
nop
out
mov
inc
pusha
scas
loopne
xchg
add
xchg
jae
inc
jb
xor
enter
flds
iret
xlat
fidivl
mov
cmp
mov
inc
enter
xor
push
rolb
add
and
scas
inc
add
dec
sbb
sbb
fsubrp
push
leave
clc
outsb
jnp
mov
out
ror
lods
gs
jg
andb
push
mov
mov
ficoms
in
dec
push
into
cmp
xor
fnsave
and
and
cmp
mov
imul
shlb
movsb
pusha
shrb
xchg
stos
pusha
pusha
movsl
ljmp
roll
fsubrs
push
mov
sub
loopne
shlb
cmp
iret
insl
mov
adc
mov
ds
mov
jno
cli
jnp
pop
das
lcall
repz
rolb
fwait
inc
mov
jns
xchg
aas
ss
rol
fldt
jl
ficompl
cs
xor
mov
pop
scas
mov
xor
xchg
mov
gs
mov
inc
lret
cld
pop
mov
pop
jnp
adc
xor
sub
add
push
out
outsb
adcl
pop
mov
lea
and
int3
out
sbb
cltd
rcl
or
subl
fwait
push
push
mov
pop
sbb
pop
sub
loopne
pop
mov
xorb
andb
inc
xorb
lds
xchg
add
mov
and
jnp
int
push
shl
test
mov
jbe
int3
dec
mov
mov
and
pusha
xchg
pop
mov
addb
mov
push
and
out
mov
inc
mov
cmp
add
push
or
inc
leave
dec
incl
clc
dec
loopne
inc
sub
and
or
mov
addr16
sub
mov
outsb
rol
mov
mov
mov
pop
add
movsl
or
add
mov
mov
dec
mov
mov
jge
mov
xchg
xor
jmp
rcrl
mov
cmp
adc
imull
or
push
mov
and
ljmp
add
out
xchg
and
sub
xchg
xchg
ja
pop
int
xchg
mov
nop
lcall
cli
fs
xchg
out
aaa
adcl
sarb
xor
loopne
incl
jg
pusha
mov
jg
and
pushf
aas
jecxz
fadds
jb
rolb
ret
pop
iret
loopne
mov
pusha
mov
or
xchg
mov
xchg
sbb
negb
loopne
int
inc
fstps
mov
jp
jecxz
add
xchg
or
aam
add
sub
inc
mov
cmp
shl
popa
ret
mov
shl
lahf
movsb
pusha
and
outsl
dec
or
mov
cmpsb
add
lods
inc
jl
in
cmp
or
add
out
into
shr
jno
outsl
loope
adc
push
mov
or
inc
and
add
mov
mov
pusha
lock
mov
imul
xorl
andb
pop
sarl
aad
push
dec
ficomps
jmp
pop
insl
lahf
andl
and
adc
or
out
pop
push
jbe
or
imul
jno
mov
imul
scas
add
addb
sub
and
fdivrs
inc
mov
xor
in
mov
inc
test
in
push
jns
or
rcr
cmc
xor
leave
imull
stos
andb
inc
cli
in
in
pop
dec
sub
mov
jmp
mov
and
loopne
jns
add
push
incb
in
gs
mov
test
pusha
xchg
or
add
jp
mov
mov
mov
roll
aad
inc
sbb
ret
addr16
aad
mov
cmp
push
jne
dec
and
pause
jne
cmp
mov
cwtl
data16
and
or
pusha
and
gs
les
andb
pushf
mov
es
inc
and
pusha
cmp
xchg
movsl
inc
cmp
pop
repnz
inc
inc
jnp
mov
sbb
xchg
sub
loopne
add
pusha
sahf
dec
into
sub
pusha
call
xor
int3
mov
or
sar
in
jae
push
or
and
scas
loopne
xor
out
xchg
inc
cmp
call
unpcklps
jle
stos
add
fiadds
cmp
inc
lods
mov
addb
inc
and
cmp
ds
xor
aaa
cmp
inc
pop
add
xor
and
add
and
sub
cmp
xchg
pop
sbb
mov
rcl
mov
pushf
mov
inc
inc
int
cmp
call
pop
fimull
arpl
mov
push
out
push
cmp
jo
or
shrb
imul
adc
jne
push
mov
inc
es
outsl
loopne,pt
scas
lret
aam
movsb
addb
mov
fstl
ret
xchg
inc
add
inc
xor
mov
xchg
lahf
js
pop
std
aaa
lahf
add
add
fdivrs
pop
sahf
xor
xchg
ret
or
pusha
jne
or
addb
and
xor
mov
addb
into
test
pusha
out
xor
xor
mov
nop
rolb
shlb
or
lds
pusha
sbb
inc
or
andb
xchg
cwtl
push
dec
adc
cmp
in
add
adc
pop
adc
loopne
inc
cmc
mov
idivb
test
inc
aas
lret
xor
and
rcrl
xor
shll
inc
adc
dec
and
cmp
fcom
sub
mov
inc
push
fsubs
loopne
andb
mov
push
loopne
pusha
mov
mov
faddl
and
pop
push
mov
popa
lods
mov
sub
out
xchg
xor
lahf
icebp
or
push
adc
add
ss
xlat
jnp
out
shlb
or
in
icebp
cli
hlt
add
xorl
out
ret
shrb
sbb
loopne
push
test
inc
cld
je
pop
outsl
xchg
imul
sbb
andb
out
cmc
xchg
clc
lock
xorb
inc
orb
scas
lods
inc
inc
or
loop
repnz
scas
add
loopne
outsl
lcall
jle
cmp
in
sarl
inc
mov
mov
cmpsl
cmc
push
loopne
cmp
daa
popf
adc
sbb
push
dec
and
mov
pusha
sub
out
sbb
dec
fsts
push
pop
lret
fwait
fwait
adc
adc
inc
dec
in
cmp
pop
mov
xor
adc
inc
aam
adc
pop
jb
popf
xchg
add
aaa
into
ds
push
or
into
inc
mov
xlat
mov
mov
and
adc
jg
incb
mov
cmpsb
inc
sub
pusha
pusha
cmp
leave
and
inc
sbbb
loope
xor
or
jb
inc
add
sub
sbb
dec
pop
shlb
sbb
pop
fisubrl
fmull
sbb
xchg
and
add
rolb
stc
jg
test
and
enter
mov
jecxz
addb
fdivrs
out
int
adc
inc
addb
push
dec
popf
enter
leave
cmpsb
loopne
mov
lcall
outsl
scas
inc
inc
inc
xchg
movhps
jno
mov
sub
loopne
enter
and
rclb
fs
jg,pt
pop
dec
dec
sub
inc
inc
pop
sbb
lcall
fld
push
mov
pop
je
mov
xor
add
lds
add
sarb
addb
lock
mov
pusha
movsb
loopne
hlt
or
in
and
sub
mov
inc
sbb
rolb
rorl
mov
lods
shlb
icebp
or
out
divb
icebp
sub
xor
dec
test
and
adc
mov
pop
ja
add
xor
inc
loopne
jp
cmpsb
pusha
mov
add
cmp
xchg
data16
mov
mov
dec
push
mov
and
sbb
sub
in
add
das
inc
cmp
pop
push
shll
cmpl
stos
aam
xor
and
cmpsl
bnd
sub
js
mov
out
dec
ja
pusha
pusha
cli
lcall
cli
xor
jo
shll
insl
insb
into
icebp
ret
pusha
mov
aam
andb
sar
ret
push
dec
movb
add
test
shlb
movsb
and
cmp
pusha
pusha
out
aad
dec
rcrl
je
les
test
mov
sub
mov
rolb
dec
mov
sbb
jmp
pop
cwtl
rcrb
loopne
xor
push
sarb
pop
push
stos
andb
lcall
test
mov
ja
pop
sbb
fisubs
dec
scas
jl
bound
jecxz
inc
ds
mov
test
and
lcall
repz
or
pushf
pop
outsl
push
cmp
sub
addb
add
xchg
and
addb
shll
mov
jae
arpl
jle
loop
out
adcl
aaa
add
mov
scas
mov
pop
add
adc
sbb
adcl
pop
pop
inc
mov
pop
test
je
push
rolb
cld
and
cmpsb
pusha
adc
and
inc
push
arpl
out
sub
scas
sub
loopne
ret
aas
not
stos
shl
stos
mov
cmp
out
arpl
push
xor
lea
xor
jge
das
lock
pusha
dec
pop
cwtl
mov
sub
adc
aas
dec
cmpsb
rolb
and
ljmp
cli
xchg
dec
push
xchg
xrelease
add
in
shl
in
inc
dec
jns
push
jnp
daa
pop
adc
arpl
or
inc
shlb
mov
xchg
add
loopne
aam
stc
das
push
inc
inc
mov
inc
rolb
and
mov
pusha
rorb
add
lds
orl
or
popa
addb
movsb
pusha
add
shll
sub
ljmp
cmpsb
mov
scas
and
lods
pusha
loopne
jg
adc
lea
inc
pusha
adc
mov
outsl
xchg
in
cmc
lahf
cltd
mov
int
mov
loopne
sub
in
push
pushf
ret
jns
rol
push
in
pushf
lea
add
js
jp
cwtl
enter
dec
or
loopne
in
and
jno
or
adc
sub
roll
and
mov
push
push
sub
cmc
sub
ret
dec
jmp
in
call
mov
mov
in
pushf
insl
and
cli
push
stc
sbb
xchg
in
pop
call
push
mov
hlt
ds
xor
mov
leave
xchg
out
cmp
push
loopne
inc
pop
jecxz
and
mov
cmp
bound
lahf
test
mov
aad
and
addr16
push
and
addb
imul
loopne
test
dec
dec
jns
std
cmp
shrb
cmp
jno
in
adc
mov
jmp
repnz
mov
xor
sarl
dec
repnz
xchg
movntps
nop
jno
mov
add
repnz
fstl
out
pusha
sarb
add
mov
repnz
andb
cmc
pop
cmp
jns
push
sti
pop
arpl
inc
loopne
fwait
mov
or
rclb
push
mov
xchg
sub
inc
stos
mov
and
sbb
mov
leave
adc
les
sbbl
inc
jge
push
and
clc
add
xchg
adc
imul
ret
mov
xorb
es
rorb
ret
or
fidivs
lcall
into
jns
xchg
adc
loopne
and
inc
or
pop
loope
xchg
aaa
sti
outsl
mov
clc
ret
mov
into
and
adc
lea
movsb
rolb
lcall
inc
push
pusha
dec
cmp
fstpl
int3
and
dec
jle
sbb
jbe
loope
and
into
rol
xchg
test
sbb
push
inc
mov
jne
xlat
mov
pusha
sarl
fstpt
cmp
in
test
inc
pop
movhps
or
sbb
mov
dec
popf
adc
fnstcw
lea
push
and
or
cmpsb
shlb
aaa
sahf
push
pusha
inc
int
add
add
mov
lock
dec
testb
add
add
aas
lahf
pop
inc
adc
ds
sub
lods
and
fs
rclb
cmp
xor
sub
loopne
xor
inc
leave
mov
cltd
scas
xor
fbstp
aas
movsl
adc
and
cmc
mov
popf
stos
jbe
and
fstpl
push
add
or
rcrb
xor
jmp
or
scas
mov
dec
aad
lock
dec
ret
jg
movsb
rol
lcall
movswl
pusha
andb
xchg
mov
pmaddwd
sub
addl
jge
pusha
mov
repnz
xchg
dec
cmpsb
loopne
int3
fmull
and
fcompl
adc
mov
popa
loope
add
and
gs
loop
inc
mov
popa
fisttpll
or
lods
mov
mov
mov
cmp
test
imul
pusha
orb
pop
mov
xor
sub
jo
lods
dec
xor
dec
movups
or
xchg
and
adc
add
mov
xchg
mov
pop
mov
iret
sub
inc
add
sub
pusha
repnz
sbb
out
cmc
mov
pusha
push
test
cmpb
loopne
xor
pushf
mov
add
fsubrl
pusha
adc
sbb
cltd
mov
xlat
call
cmpb
xchg
pop
push
xor
stos
and
xchg
cld
mov
adc
imul
sub
inc
ffree
fmul
mov
int3
mov
push
cmc
cli
addr16
sub
or
andb
push
and
sbb
push
scas
sbb
loop
hlt
inc
cmp
push
mov
addb
mov
punpckhwd
inc
add
loopne
pusha
sbb
jmp
pusha
xchg
pop
xor
jle
out
or
ret
inc
scas
add
sbbb
inc
cltd
mov
cmp
xchg
mov
sti
pop
leave
push
and
mov
jne
stos
inc
rolb
mov
loopne
adc
test
shlb
adc
rolb
jnp
sbb
jecxz
repnz
jl
inc
pop
cmp
fs
sub
ja
int3
push
push
stc
pop
decl
mov
notb
mov
popa
shl
mov
rcrl
mov
mov
loopne
loop
loope
outsl
or
add
add
ljmp
ret
xor
xor
pop
mov
xor
iret
cmp
add
clc
pop
or
or
xchg
inc
je
andb
iret
les
loopne
sub
sbb
pop
jge
cmp
mov
inc
and
int3
pop
test
rolb
fsubr
push
stos
mov
cmp
inc
xchg
loopne
sbbl
rorb
and
mov
clc
cmc
popa
rorb
mov
inc
loopne
cltd
xor
or
loopne
into
dec
xchg
repz
cmp
scas
scas
and
shlb
iret
dec
push
jns
fstl
leave
cwtl
into
fwait
dec
movsb
inc
loopne
mov
adc
pop
lcall
push
or
jp
testb
or
push
xchg
mov
sbb
out
adc
insl
cmpsl
mov
pusha
pusha
jl
mov
pop
test
shl
arpl
leave
cmp
cmc
test
mov
and
add
xlat
cmp
xchg
imul
and
popa
jo
inc
nop
xchg
lahf
js
fwait
sub
sahf
in
push
leave
or
cmpsl
jmp
dec
cmp
mov
or
and
sub
shlb
xlat
mov
lods
js
jecxz
mov
xor
pusha
loopne
inc
sub
mov
loopne
cmp
pushf
mov
addl
pop
inc
or
in
fmuls
pusha
rolb
push
mov
mov
xchg
xor
and
mov
xlat
aad
test
icebp
or
pusha
push
and
jg
mov
or
push
mov
scas
sti
das
sbb
mov
xchg
out
movsb
and
imul
mov
inc
lock
jnp
mov
push
test
dec
adc
js
nop
jle
mov
xchg
inc
hlt
cmc
xchg
jmp
aas
icebp
ds
iret
jge
jle
js
xor
add
mov
stc
add
pusha
dec
add
pusha
in
loopne
in
lods
loopne
push
cmp
add
jle
lock
and
insb
sub
mov
jns
and
loopne
stc
sbb
movb
inc
leave
adc
and
jo
loopne
mov
out
xchg
lods
loopne
mov
lret
ss
inc
jb
adc
xchg
jle
shlb
jns
sub
sub
and
ds
sub
pusha
sub
in
fucom
pop
mov
adc
std
sbb
mov
pusha
or
mov
xorl
inc
pop
repnz
inc
shlb
in
mov
cwtl
push
test
cld
scas
xor
dec
enter
sbb
in
out
dec
in
jg
pop
out
fs
inc
inc
dec
mov
addb
mov
cmpsb
rolb
fucomi
shl
mov
sub
xor
pop
pop
loopne
fwait
rcr
or
je
jae
pusha
subb
sbb
xchg
sarl
mov
rcr
or
loopne
dec
icebp
xor
stc
pop
sbb
mov
jl
test
pusha
in
mov
cmp
mov
testl
andb
div
or
or
add
lahf
mov
enter
mov
rolb
mov
bound
add
sub
add
pusha
mov
fwait
adc
mov
jnp
ret
inc
shll
push
mov
xchg
inc
or
je
ds
mov
sti
lahf
adc
jnp
mov
xchg
cwtl
inc
xchg
and
mov
ds
psrld
add
pushf
and
mov
pusha
add
jae
mov
inc
add
test
cmpsl
test
stos
aaa
loope
jo
aaa
jb
dec
adc
cld
cmp
sub
shll
mov
test
xor
cmp
xor
sarb
mov
sub
subb
enter
imul
mov
push
push
push
mov
and
test
aam
and
mov
adc
dec
inc
inc
and
adcb
push
ret
sub
and
rcrl
and
inc
mov
bound
loopne
and
ljmp
dec
adc
inc
rorl
addr16
mov
and
and
icebp
sbb
nop
rolb
aaa
and
adc
icebp
shrb
cld
sbb
cmpsl
mov
jne
jge
inc
loopne
andb
jns
mov
imul
mov
push
and
rol
mov
sti
pop
dec
cld
lcall
add
loopne
shl
pop
popf
test
inc
lcall
scas
add
lods
arpl
aaa
jl
add
mov
shlb
fmul
int3
or
xchg
loopne
dec
push
mov
pop
mov
movsl
inc
stos
and
ret
xchg
in
push
and
mov
addb
xchg
imul
addb
pop
pushf
imul
orl
and
in
shr
pusha
and
sbb
mov
mov
mov
int
inc
aad
movsl
bound
mov
outsb
faddl
inc
sbb
shlb
mov
insb
or
in
loopne
mov
rclb
jno
or
pusha
fsubr
lds
fwait
mov
pop
xor
insl
jne
pop
lods
rolb
jle
pop
loop
les
pusha
pusha
dec
xchg
mov
mov
xlat
shll
and
rcrb
mov
add
negl
rorb
andb
mov
lods
inc
pusha
outsl
jo
xchg
mov
inc
push
pop
repz
and
shll
cltd
mov
add
popa
xchg
inc
push
in
inc
jns
pop
std
idivl
mov
sub
popa
adc
mov
loopne
inc
les
cmc
lea
int
mov
sti
pop
mov
out
clc
add
add
push
fs
sti
aas
nop
sub
inc
rorb
pusha
loopne,pn
adc
push
test
inc
es
jge
xlat
cmp
mov
and
sbb
clc
xchg
in
movsb
and
test
rclb
addr16
and
jge
sti
inc
add
add
out
lret
pop
jnp
inc
add
data16
ds
jp
rorl
inc
mov
push
or
adc
cmp
loope
push
mov
mov
decb
test
mov
sbb
and
pop
or
bound
int
pushf
cmpsb
and
jge
ja
mov
inc
mov
fnstsw
and
lods
shl
adc
mov
and
mov
adc
das
dec
sti
xlat
icebp
lods
add
loopne
inc
pusha
jo
data16
fisubs
jae
or
add
or
rolb
and
rcll
add
and
adc
repnz
pop
pushf
int3
xchg
test
pop
jne
xor
pop
inc
shll
stc
or
mov
test
and
pusha
aam
adc
mov
je
rolb
and
sub
inc
orb
in
jg
sub
xchg
cmpl
and
add
aaa
lahf
lahf
in
shlb
fiadds
hlt
repnz
adc
and
inc
int
or
inc
jbe
call
test
pusha
test
ret
inc
call
fstpl
hlt
shrl
inc
lahf
in
or
sub
and
stos
xchg
mov
sub
adc
mov
cmp
sub
mov
out
xor
imul
lods
and
fistl
jp
rolb
stc
xchg
inc
pushf
add
xchg
sub
pusha
add
loopne
push
popf
mov
stc
cmpsb
loopne
push
adc
and
sbb
xlat
out
inc
xchg
sti
lret
mov
inc
and
js
cmp
xor
dec
xchg
cltd
loope
and
xor
movhps
dec
test
subb
sahf
mov
and
stc
cmp
mov
mov
movsb
pusha
inc
nop
pop
adc
test
loopne
mov
mov
out
lcall
and
in
mov
mov
fidivrs
dec
mov
aaa
mov
orb
inc
inc
pop
and
sbb
addb
sarb
adc
push
loopne
cwtl
dec
xchg
dec
sub
pop
xchg
cmp
add
add
stc
mov
or
loopne
mov
add
dec
xchg
inc
add
or
pop
xchg
xor
clc
movsb
rolb
sbb
xlat
cmpsb
pusha
inc
jmp
mulb
inc
int
rcrb
mov
push
jo
enter
pusha
adc
pusha
shlb
adc
pop
cmpsb
add
inc
push
pusha
and
inc
xlat
pusha
pushf
sbb
mov
inc
and
dec
xor
mov
sub
add
dec
xor
shlb
pusha
loopne
and
outsb
mov
hlt
sub
mov
shlb
shl
mov
enter
imull
ljmp
or
sbb
rcrb
and
loopne
dec
sbb
and
call
sbb
inc
test
and
or
mov
xor
pusha
inc
mov
inc
ljmp
jo
loope
pop
pop
aad
repnz
pusha
add
pop
jecxz
and
loop
loopne
cmp
loopne
push
pusha
and
repz
push
pop
pop
pushf
into
lret
ret
daa
cmp
sti
shrb
add
leave
out
mov
mov
divl
repz
inc
add
pusha
and
ljmp
into
test
adc
push
in
das
lahf
insb
in
loopne
xchg
pop
mov
add
sub
add
mov
loopne
xor
ficoms
mov
gs
push
cmp
fcomp
or
jo
push
rolb
int3
mov
stc
push
cwtl
or
push
loop
mov
push
or
into
outsl
lods
add
cltd
daa
out
enter
fadd
push
cmp
repnz
rep
shlb
cmp
bound
push
xor
dec
mov
dec
push
or
hlt
cmp
push
adc
loop
cmpsl
mov
jae
std
insl
stos
sub
outsb
fisubrs
dec
push
pop
push
not
sub
jmp
cli
pop
lods
inc
and
and
or
call
outsb
shrl
rol
loopne
mov
add
sub
lds
loopne
push
dec
icebp
mov
ljmp
add
in
push
faddl
shl
cmpsb
pusha
add
stc
mov
add
das
adc
add
sub
loopne
loopne
aaa
add
adcb
xchg
xor
cli
push
push
mov
dec
fmul
xchg
mulb
add
addr16
pop
and
xchg
test
add
mov
loopne
mov
mov
ds
sub
test
inc
push
call
xor
and
adc
and
jmp
clc
xchg
cmp
jmp
pushf
or
pushf
dec
repnz
idivb
pop
daa
mov
and
lods
inc
cmpb
iret
ljmp
push
mov
sbb
adc
inc
and
pop
xor
addb
inc
andb
loopne
loopne
inc
jp
mov
mov
mov
xlat
popf
sub
shll
inc
loopne
and
loopne
movsl
xor
movsb
pusha
loopne
inc
inc
into
loopne
sub
cld
sbbl
inc
lods
mov
xorl
pop
adc
dec
pop
adc
jb
push
std
fildll
rcrl
and
xchg
fidivs
addb
pop
inc
sbb
pop
push
mov
push
into
cwtl
or
pusha
sarl
cli
push
ret
cmp
rolb
sbb
dec
jne
loopne
add
inc
test
add
dec
cmp
xor
aam
shlb
clc
lcall
and
inc
lahf
lods
pop
xchg
pusha
and
inc
pusha
mov
scas
testb
xor
mov
add
stos
cmpsb
mov
stc
lcall
imul
cmp
mov
in
nop
repnz
pop
lahf
into
fucomip
cwtl
jne
repnz
call
pusha
repnz
jecxz
arpl
repnz
mov
aas
stos
and
inc
inc
rclb
sbb
movsl
iret
gs
mov
addb
inc
mov
frstor
test
pusha
inc
cmp
push
cltd
and
pop
mov
loopne
lret
test
push
leave
lret
push
sti
mov
bound
push
jo
mov
scas
mov
daa
push
imul
shll
push
adc
mov
mov
xor
je
push
and
add
add
mov
cmpsb
and
es
add
push
ja
inc
cmp
shlb
loopne
test
test
and
pusha
shlb
cmp
shl
sti
pop
or
xorb
xchg
mov
sarb
pop
cmp
call
addr16
inc
enter
inc
mov
loopne
inc
cmp
mov
cmp
xor
rolb
bound
pusha
je
mov
xchg
fs
stos
mov
and
jmp
jae
fstpl
lret
lea
flds
pop
pop
xor
nop
fbld
pusha
xorb
andb
popa
movb
ds
roll
pusha
inc
or
inc
jge
cld
movsb
andb
push
mov
mov
out
push
lcall
jbe
lods
addb
shlb
iret
mov
pop
sbb
shlb
adc
test
push
pop
push
adc
ss
sbb
insb
adc
test
fimull
add
cmpsb
and
xchg
inc
sub
push
xor
dec
mov
inc
popl
aaa
sbb
and
push
xor
jno
or
jne
out
popa
lods
pop
hlt
in
popa
mov
out
arpl
and
xchg
inc
add
sbb
mov
addb
push
pusha
loopne
addb
cmpsl
js
or
inc
mov
clc
mov
mov
imul
out
xlat
das
or
add
cmc
test
and
inc
jecxz
xchg
push
xor
push
incl
pusha
ret
dec
sub
inc
mov
rcrb
xor
fwait
lahf
je
lods
and
stos
mov
push
icebp
lcall
mov
rcll
sbb
lds
adc
test
loopne
pop
mov
and
aaa
lcall
rcrb
add
loopne
cltd
cltd
jnp
jecxz
lret
cli
call
stc
enter
inc
xor
dec
adc
shlb
andb
mov
shl
clc
test
inc
loopne
idivl
cmpsb
loopne
rcl
addr16
leave
jbe
and
lods
shl
and
jb
cmp
xchg
fiadds
std
push
inc
sahf
adc
and
lea
out
int3
mov
add
movsl
jns
mov
pop
into
mov
cmc
movsl
sbb
out
jb
push
cmp
inc
and
stc
scas
pop
icebp
loope
and
dec
jg
lahf
cld
mov
inc
mov
pop
sahf
jle
add
cmpsb
andb
adc
loop
mov
cmp
inc
adc
sbb
dec
scas
and
idiv
push
push
rcll
dec
sar
cmc
out
lret
and
adc
add
rcr
loopne,pn
mov
pusha
add
and
mov
jnp
imul
sbb
repz
shr
cmpsb
addb
mov
loopne
cmpsb
add
xorl
and
ret
lahf
out
out
jp
cltd
enter
ss
add
and
xor
mov
and
jecxz
push
fdiv
into
in
lcall
mov
sub
loopne
cmp
mov
sub
inc
xchg
xchg
sbb
xor
lret
mov
rcrb
xor
out
in
addl
jg
adc
movsb
addb
push
stos
mov
fdivl
push
xchg
adc
andb
jo
push
ljmp
mov
std
call
inc
xorb
pusha
mov
pop
mov
inc
inc
aas
add
adc
out
mov
add
movsb
and
and
jns
int
shl
mov
in
addb
int
not
gs
sub
loopne
push
mov
or
scas
pusha
pusha
les
adc
pop
mov
andb
inc
mov
mov
into
push
movsl
mov
hlt
mov
and
out
jmp
js
outsb
xchg
lock
cmpsl
neg
and
add
adc
and
xor
into
xchg
sub
dec
mov
popa
cwtl
dec
mov
mov
in
fidivrl
mov
xchg
or
add
jmp
mov
xorb
or
jmp
addb
dec
leave
clc
jmp
inc
movsb
and
rcll
orb
lods
pusha
pusha
popa
jae
add
sarb
sub
pop
lret
push
lock
inc
addb
jae
or
loopne
shlb
adc
inc
lods
int3
xor
idivb
xlat
mov
pop
and
shr
xchg
iret
mov
mov
dec
sahf
jge
cmp
dec
jns
fwait
jne
pop
stc
jp
fldt
in
inc
mov
mov
pusha
addb
jnp
dec
xor
mov
addb
pusha
orb
sarb
add
dec
sarb
shlb
adc
loopne
fimull
mov
in
out
mov
cmc
mov
jno
mov
movsb
pusha
mov
hlt
pop
mov
and
stc
and
and
adc
inc
leave
pop
ja
add
mov
dec
jno
add
loopne
test
rolb
inc
negb
pop
pop
aaa
cmp
in
jp
sahf
lock
addb
and
add
pop
adc
pop
or
out
dec
cmp
xor
mov
lock
std
and
mov
out
dec
mov
fistl
addb
mov
jl
add
mov
shlb
scas
mov
mov
in
loopne
inc
dec
cld
mov
cmp
mov
mov
pusha
mov
out
jne
dec
push
shl
lock
lret
shll
mov
push
mov
andb
lock
out
and
mov
xchg
pop
cmpsb
pusha
and
loop
mov
mov
mov
loopne
ret
lret
or
loopne
sahf
sub
and
xor
aad
jae
lret
inc
mov
mov
adc
and
add
out
or
aad
mov
add
faddl
cwtl
fcoml
aas
loopne,pn
xchg
dec
lret
mov
seta
and
popf
mov
jae
mov
mov
rorb
pop
fistpll
pushf
scas
mov
pop
test
jo
scas
or
addr16
mov
xchg
das
mov
neg
mov
xchg
cmc
rcr
leave
cmp
inc
iret
push
scas
jb
ja
sahf
mov
sub
and
sub
push
pop
xor
adc
ja
fcoms
pusha
loopne
into
ret
stos
add
inc
ror
or
test
ficoms
pop
rolb
imul
push
adc
xchg
push
inc
mov
adc
pusha
shlb
dec
cmc
mov
in
cwtl
or
mov
mov
sbb
inc
jo
lods
mov
adc
and
aaa
adc
mov
movsl
inc
xor
pusha
add
enter
les
loopne
xor
sbb
cs
shrb
mov
and
xor
mov
pop
cmp
data16
rcrb
cmp
xchg
jno
decb
inc
pop
or
lea
sub
arpl
ds
loope
rolb
push
pusha
andb
dec
loop
mov
andb
pusha
cli
xchg
outsb
cltd
cld
out
test
test
xlat
push
sbb
add
outsl
divb
fs
jne
lcall
inc
mov
lds
lods
push
lcall
inc
sub
sbb
mov
movsl
idivb
daa
jae
fiadds
iret
dec
lahf
xchg
xor
xor
scas
cmp
and
pop
mov
add
cmp
mov
and
cs
or
movsl
cmp
or
ror
and
test
rcr
mov
mov
push
in
mov
ret
test
dec
data16
or
inc
inc
std
aam
repz
addr16
xor
cld
jmp
mov
daa
push
add
mov
adc
into
outsl
inc
sub
jo
inc
jnp
daa
int
push
mov
inc
cmp
jl
push
mov
test
pusha
aam
jl
cltd
icebp
inc
pop
sbb
push
dec
and
jmp
xchg
aaa
push
cmp
cltd
or
pop
push
lods
inc
loopne
xchg
loop
sbb
mov
pop
arpl
and
adc
shlb
shlb
push
aad
in
fdivrl
popf
pop
push
inc
mov
mov
aam
xor
xchg
or
insb
mov
loopne
adc
loopne
dec
rorb
and
mov
sbbl
ds
popf
pop
aaa
std
lea
jmp
sub
andb
and
shr
mov
in
mov
test
movsb
rolb
sub
pusha
sub
xorl
xchg
fbld
and
mov
std
sti
jge
xor
es
pusha
xchg
and
pop
movsb
loopne
or
and
stos
and
pusha
mov
cmp
mov
jae
xor
out
hlt
inc
jnp
loopne
addr16
in
stos
add
sbb
sahf
cmc
jecxz
dec
in
iret
popa
ds
dec
dec
leave
mov
pop
jae
pop
bound
or
adcb
andb
jmp
xchg
mov
inc
and
push
in
imul
jne
add
inc
enter
lea
or
inc
dec
imul
mov
and
xor
lea
loopne
xor
mov
push
imul
sbb
lods
inc
inc
push
inc
loopne
add
jmp
loopne
xchg
sbb
mov
loopne
add
in
arpl
and
xchg
push
mov
out
adc
das
sbb
xor
inc
mov
or
rcrb
in
mov
sahf
cmp
push
inc
mov
test
mov
jno
ss
cmp
xor
add
add
cmpsb
add
insl
jg
jae
andb
dec
out
and
addb
xchg
cltd
lret
aas
and
pusha
std
push
aaa
inc
icebp
pop
iret
call
or
add
mov
or
aam
inc
push
pusha
add
and
divb
int
inc
and
out
xchg
xor
loopne
add
loopne
mov
ss
or
jle
inc
test
mov
andb
add
push
or
loopne
cmp
mov
and
stos
sbb
test
shrb
mov
fwait
mov
xor
js
aaa
push
sbb
jae
xor
mov
mov
xlat
push
into
sub
loopne
lds
cs
mov
mov
pusha
add
adc
repnz
out
or
dec
push
mov
cld
mov
jp
inc
ljmp
dec
cmp
push
sti
dec
das
dec
sahf
shll
andb
sti
push
mov
in
out
jg
xchg
pusha
stc
mov
jno
xlat
ffreep
mov
lds
mov
add
adc
pop
ret
push
cmp
stos
loopne
inc
push
lret
inc
pop
sahf
mov
inc
sarb
adcl
pop
cmp
dec
test
addb
and
mov
shl
mov
cld
lock
push
mov
inc
dec
fs
in
push
cmp
hlt
lods
pushl
add
loopne
inc
xlat
push
pop
xchg
stos
add
and
out
mov
sbb
sbb
push
aad
dec
dec
push
ret
dec
xchg
pop
pushf
test
dec
es
xlat
add
and
jmp
and
inc
add
xchg
adc
or
rcrl
je
push
ds
test
sarl
stos
loopne
adc
cltd
and
addb
pusha
and
and
and
mov
inc
jg
mov
adc
mov
test
lcall
call
sub
dec
and
dec
mov
addb
test
insb
pop
or
mov
dec
jns
flds
inc
test
jg
add
push
aad
inc
div
dec
adc
jmp
lods
addb
sbb
adc
jo
ficoml
sub
ret
stos
aam
pusha
rolb
add
mov
push
add
inc
add
pusha
and
mov
add
and
shl
and
mov
rcrb
iret
push
shl
imull
add
clc
cwtl
inc
lds
icebp
mov
sbb
mov
or
loopne
cmp
push
shl
loopne
sbb
sub
orb
dec
xchg
add
and
testb
mov
and
and
mov
mov
cltd
lret
rcr
and
and
fistps
mov
insb
cld
sub
and
cwtl
ds
int3
push
xchg
push
pop
data16
push
mov
jge
out
and
sbbb
add
clc
xchg
mov
add
outsl
mov
jp
addr16
lds
andb
aam
sbb
mov
ficompl
adc
pusha
mov
stos
and
pop
jl
enter
rcr
or
mov
loope
rep
fisttpll
push
out
in
jne
add
add
sub
add
pop
cltd
xor
or
addb
cmpsl
xchg
psubsb
andb
cmpsl
insb
and
ss
scas
outsl
push
test
mov
push
mov
pusha
cmp
loopne
cmc
mov
mov
or
call
push
scas
jae
add
sub
mov
xchg
mov
addl
inc
in
ljmp
pop
jne
sahf
aas
jb
loopne
imul
pushf
xor
push
ljmp
add
mov
inc
push
and
add
test
add
imul
push
ret
lea
aaa
out
xchg
shrb
or
stos
mov
rcrb
add
adc
pop
sbb
push
xchg
pop
or
mov
pop
sarb
mov
add
adc
clc
mov
mov
xchg
hlt
mov
test
push
mov
inc
mov
push
test
xor
sub
lret
loope
xchg
mov
mov
ror
push
rolb
pusha
inc
movsl
xchg
push
adc
and
jg
cmp
das
add
adc
std
sub
addb
test
loopne
mov
and
mov
icebp
pop
push
daa
push
push
bound
into
push
add
rcrb
pushf
add
push
pop
loop
imul
adc
mov
dec
jne
mov
lock
inc
jge
xlat
dec
mov
add
imul
pop
xchg
or
jne
nop
dec
lods
shl
shlb
test
or
rolb
mov
sti
andb
xlat
or
xor
in
lods
pop
push
fstp
icebp
sbb
pusha
inc
sarb
orb
mov
add
push
and
addr16
scas
loopne
sar
push
and
xchg
jge
pop
adc
stc
add
adcl
dec
sbb
jo
push
out
add
inc
fdivrl
inc
mov
mov
mov
xchg
sbbb
pusha
mov
pusha
loopne
add
stc
es
and
mov
dec
mov
mov
lahf
add
push
inc
lods
inc
loopne
in
sub
lods
push
sbb
andb
push
push
sbb
scas
andb
xlat
xor
push
ds
mov
fstl
dec
push
lods
loopne
popa
ret
push
and
mov
xor
data16
pop
dec
dec
pop
push
sti
test
and
cmpsl
add
cmp
test
test
pop
inc
and
stc
inc
mov
addr16
adc
mov
adc
aas
sub
pusha
mov
add
test
inc
push
inc
or
test
and
xor
and
pop
lds
inc
sti
loope
cs
mov
and
clc
inc
sbb
pushf
push
inc
or
cmp
shlb
shlb
inc
push
ljmp
xorb
rolb
in
ja
xor
ficompl
mov
pop
cmp
xchg
leave
sbb
xchg
test
test
fdiv
test
cmpb
cmp
mov
nop
fwait
or
inc
rcll
cmp
mov
or
dec
adc
stos
mov
inc
cli
and
push
test
pusha
lods
inc
inc
mov
pushf
pop
call
in
pop
mov
loopne
lahf
mov
jp
jb
ja
and
mov
aad
push
and
dec
pop
jle
movsb
shlb
fiadds
pusha
add
and
pop
das
inc
pop
int3
pop
outsl
pop
popf
pusha
cld
sahf
cld
push
pusha
inc
punpcklbw
lods
and
dec
xchg
cmp
mov
imul
daa
or
cmpb
lcall
xchg
int3
rcl
and
mov
adc
ja
jne
inc
lds
and
cli
sbb
pop
sbb
mov
jb
addr16
sbbb
faddl
add
mov
xchg
mov
xor
cmp
stos
pusha
mov
push
and
loop
pop
sub
xchg
xchg
or
scas
hlt
mov
add
inc
and
jo
inc
inc
mov
in
sub
sub
xlat
lds
or
scas
pusha
shlb
pusha
adc
cmp
cmp
das
inc
ficompl
mov
test
adcb
lahf
and
and
filds
mov
sti
jbe
sbb
mov
and
mov
sub
movsb
and
push
popa
adc
pop
mov
jmp
mov
sarb
xchg
pop
xor
push
or
pusha
dec
sub
inc
movsl
insb
shl
sbb
dec
push
rolb
mov
add
dec
mov
push
xchg
test
leave
jne
and
andb
div
lock
add
cld
inc
pop
jb
push
dec
std
jnp
mov
out
insb
std
pop
xchg
push
cmpsb
mov
and
xor
arpl
pop
mov
in
std
data16
ljmp
data16
sub
sub
mov
jo
lret
pushf
nop
adc
mov
xchg
in
iret
jne
mov
inc
push
nop
and
pusha
scas
add
andb
ss
mov
add
shr
dec
inc
fadds
andb
sub
mov
lods
mov
push
in
add
and
in
jecxz
jl
lcall
rorb
fcomps
lds
dec
loope
xchg
fwait
cwtl
js
inc
inc
or
inc
mov
fisttpll
je
push
adc
rclb
push
push
aad
loopne
xchg
fs
test
or
mov
add
xchg
cltd
ja
andb
out
loopne
loope
shll
outsl
imul
push
cld
loope
sbb
notl
pop
pop
loope
and
outsl
jae
sub
add
pusha
and
imul
pop
mov
stos
sbb
xor
adc
sub
je
cmp
xor
add
fistps
mov
lahf
cmpsb
andb
shlb
lret
and
mov
shlb
movsb
add
inc
xchg
outsb
adc
adc
xor
and
pusha
cmpsb
inc
mov
and
xchg
push
add
in
lods
and
test
loopne
add
add
fdiv
and
and
add
and
jne
hlt
scas
ss
lcall
xor
jg
cmpsl
and
add
daa
fdivl
xor
out
and
mov
push
mov
rolb
mov
and
add
xchg
nop
js
or
xchg
pop
dec
stos
mov
loopne
xchg
shl
pop
into
sbb
xor
lea
loopne
adc
push
imul
rol
imul
xchg
sub
mov
fisttps
andb
cmp
or
movsl
xor
sub
sarb
mov
mov
pusha
dec
scas
nopl
sti
jp
jecxz
shl
cmp
jns
adc
loopne
mov
and
pop
pop
idiv
mov
repz
in
frstor
arpl
out
movsl
mov
mov
loope
pop
push
test
divb
out
and
addb
sub
pusha
push
cld
sub
and
pusha
mov
data16
and
inc
pusha
fistpll
andb
jo
pusha
inc
mov
jl
fldl
and
push
pop
fwait
jno
or
ret
xlat
xor
jecxz
push
push
jmp
mov
mov
dec
cmp
movsb
loopne
lods
and
andb
and
addr16
ss
lods
inc
mov
fsubrs
mov
aas
loopne
jmp
lret
add
aad
pop
mov
add
dec
mov
repnz
pushf
sub
pop
sbb
imul
push
dec
pop
push
xchg
int
lds
jg
pop
mov
stc
pop
adc
mov
jae
test
sbb
imul
xchg
dec
adcl
popa
ffreep
xchg
fsub
lods
pusha
inc
or
add
scas
insl
dec
xchg
addb
or
sbbb
icebp
out
stos
andb
mov
cmp
shl
mov
mov
and
jno
pusha
add
jge
or
add
shll
adcl
loopne
and
stos
and
dec
andb
les
push
jb
cmp
ficompl
mov
fimuls
insl
icebp
pushf
lret
jl
mov
testb
loopne
loop
push
stos
dec
rcrl
push
fadds
inc
sbb
pop
and
pusha
xchg
scas
add
cwtl
push
mov
cmp
xchg
add
add
mov
stc
popa
leave
out
stos
inc
add
mov
stos
test
scas
rolb
and
mov
add
sbb
lret
dec
push
iret
xchg
shlb
mov
addb
scas
shlb
ret
cmp
rolb
xchg
inc
pushf
ljmp
in
enter
frndint
add
rorb
loopne
jecxz
mov
stos
addb
inc
rolb
xchg
xchg
lock
aad
cmp
xor
or
push
inc
add
fwait
push
and
mul
fsubl
dec
pop
xchg
xchg
sub
pusha
pusha
jo
sbb
mov
xchg
jno
fldenv
pusha
loop
fnstsw
pop
inc
adc
mov
or
sub
add
or
rcll
jmp
add
dec
ja
jne
in
imul
mov
sbb
sub
mov
loopne
pusha
rcrb
pusha
scas
fisubs
add
lods
xor
addb
pop
aad
test
loopne
daa
stc
xor
xchg
add
jnp
lods
add
loope
push
mov
add
pusha
es
adc
cmc
mov
sbb
pop
sbb
xor
imul
pop
mov
and
lahf
mov
inc
icebp
insl
stc
jns
mov
rol
loopne
push
shlb
mov
sbb
jp
das
nop
cmp
mov
pop
test
mov
sub
pop
pop
out
add
dec
scas
and
mov
loopne
scas
pusha
and
aaa
xlat
ja
mov
aas
dec
push
outsb
ss
divb
sbb
mov
sbb
inc
mov
aad
mov
and
xchg
push
pusha
loopne
mov
mov
pusha
loopne
shll
int
xchg
out
mov
loopne
push
addb
test
adc
out
cmp
sti
xchg
jmp
fdivl
add
test
mov
jg
rolb
xor
fucom
fdivr
addb
add
and
cld
outsl
jns
xor
mov
add
orb
out
cwtl
hlt
ret
mov
pusha
cmc
cwtl
repnz
shlb
inc
pusha
add
add
mov
push
add
dec
std
outsb
push
xlat
pop
cmpsb
pusha
and
popa
cltd
xchg
lcall
and
add
and
cmpsl
jecxz
adc
outsl
daa
loop
inc
rclb
repz
addr16
jle
pop
jae
adc
jne
inc
inc
les
ljmp
push
outsb
insb
pushl
sbb
mov
dec
dec
inc
pop
sbb
leave
addb
jmp
pushf
or
push
add
mov
adc
repnz
rclb
push
pusha
mov
add
add
inc
and
xor
int
lock
mov
cmpsl
sbb
xchg
addb
jp
and
shlb
ret
int3
loop
inc
cmp
addb
enter
sub
adcb
cli
scas
sti
inc
mov
jns
addb
push
sub
mov
push
stos
mov
pop
stos
out
out
mov
ljmp
inc
or
inc
inc
adc
mov
addb
outsl
mov
enter
xor
jo
call
out
fistpl
divl
dec
push
mov
jg
cmp
aaa
loopne
and
mov
movsl
addb
inc
test
mov
out
pop
add
bound
pop
and
sub
loopne
push
push
rorl
inc
mov
add
xor
adc
mov
and
leave
int
push
pop
inc
out
in
lds
lret
int3
mov
xor
enter
inc
rcrb
addb
xlat
pop
inc
push
inc
shrb
pop
pop
jne
adc
popa
sbb
lret
jne
sub
out
mov
scas
add
sbb
add
out
mov
ror
cmp
xor
push
scas
shr
in
pop
cmc
andb
xchg
mov
inc
out
push
jl
dec
or
add
fisubrs
add
enter
pusha
lahf
std
and
loopne
loopne
adc
pusha
xchg
clc
into
test
pop
sarl
jg,pt
lds
andb
cld
pop
jle
dec
push
push
aad
mov
push
data16
fnsave
loopne
dec
pushf
in
or
orb
xchg
cmp
jb
pop
lods
pusha
pusha
xor
jae
and
add
and
pusha
inc
lret
xor
jmp
xor
mov
les
or
add
xor
shr
add
inc
pop
mov
inc
and
mov
test
sub
addl
andb
out
cmpsb
loopne
xchg
push
add
pop
sbb
inc
stos
add
jge
jle
sub
negl
imul
imul
fstpt
fadd
push
nop
inc
dec
leave
repnz
andb
mov
aas
shlb
cli
daa
and
inc
mov
or
pusha
mov
cmc
clc
andb
ficoms
mov
mov
shlb
xor
mov
and
and
and
shlb
out
mov
add
inc
add
pusha
rorb
mov
shlb
in
xchg
imul
mov
inc
push
dec
rcll
movsl
call
dec
in
mov
pushf
pop
movl
mov
loopne
and
pushw
mov
mov
orb
mov
xor
and
push
je
pop
int3
xor
lahf
cmpsl
shll
das
xlat
mov
jns
cwtl
sub
enter
add
inc
shr
test
cmp
and
mov
lods
inc
rorb
into
pop
or
fwait
jne
call
stos
dec
stos
inc
add
subb
mov
and
and
add
xor
andb
dec
ss
sbb
jae
inc
mov
or
aad
stc
xchg
test
inc
xchg
sub
and
mov
pop
cmp
pop
test
leave
fs
add
and
in
insl
ds
push
fistps
sbb
test
dec
imul
dec
jmp
icebp
or
movsb
add
or
addb
out
jle
addb
popf
push
jnp
addb
lock
and
or
xchg
shlb
lret
and
stos
rol
mov
nop
test
pusha
xchg
sti
leave
popf
fsubl
or
add
es
addb
push
add
int
push
or
add
fcompl
dec
hlt
adc
lahf
sti
lret
movsl
add
sbb
stos
mov
push
rolb
and
shrl
add
fisubl
xor
scas
xchg
roll
rcrl
ljmp
xchg
imul
cmpb
sti
mov
loopne
xor
mov
mov
and
idivl
sbb
fs
or
or
or
loopne
push
mov
mov
roll
add
inc
mov
sbbl
pcmpeqb
and
fiadds
sarb
xchg
pcmpgtw
and
mov
mov
jnp
sub
out
pop
mov
xor
jno
dec
pop
pushf
jmp
rcr
mov
sarb
inc
jae
sub
addr16
andb
jp
mov
xchg
stc
cltd
jle
xchg
add
inc
mov
xchg
jp
xchg
lret
mov
inc
xchg
andb
rolb
or
mov
xor
pop
inc
jns
mov
pusha
cmpb
cmp
test
pop
pop
jb
pusha
add
sbb
shl
jge
addb
inc
loop
xchg
lahf
mov
adcb
jne
testl
fiadds
adc
or
inc
mov
sub
and
loopne
jecxz
jnp
ljmp
add
push
in
mov
and
divb
sahf
stc
sbb
xchg
outsb
xor
push
or
lock
aad
lcall
ret
xor
mov
cwtl
das
push
mov
packsswb
sbb
mov
out
mov
add
test
int3
sub
sub
ret
inc
mov
cltd
inc
test
dec
in
popa
sbb
pusha
ror
mulb
loopne
subl
dec
pop
push
mov
cmc
outsl
xor
enter
stos
and
hlt
jg
inc
ds
popf
jo
sbb
xchg
movsl
xor
push
pusha
pop
push
mov
xchg
sub
dec
cmp
push
addr16
inc
movsl
cmp
cmp
hlt
inc
rcrb
lds
xchg
test
cwtl
mov
lock
nop
outsb
mov
mov
in
ret
push
in
ljmp
shrb
cmpsb
mov
pusha
and
xor
rcll
and
loopne
push
and
add
pusha
and
std
sub
pushf
pop
adc
jp
mov
rcrb
call
dec
test
stc
mov
add
sarb
pusha
mov
je
mov
pusha
and
adc
add
mov
fwait
xor
shlb
in
cmpsl
pop
xchg
rorl
ja
test
inc
shl
loopne
inc
stos
loopne
sbb
in
pop
outsl
fsubs
and
lds
mov
inc
mov
dec
in
add
mov
lock
std
pop
imul
inc
arpl
loopne
sti
mov
aas
inc
adc
adc
or
out
mov
andb
jmp
sbb
mov
push
and
imul
xor
leave
jg
xor
dec
cmp
xchg
out
sbb
inc
mov
in
imul
or
andb
leave
mov
mov
adc
addb
jle
test
orl
pop
mov
xor
sub
inc
addr16
pop
andb
leave
dec
push
hlt
push
add
mov
in
inc
and
mov
mov
add
cmp
repz
pop
inc
inc
xchg
and
pusha
aad
out
inc
jge
lock
aas
mov
cmp
movsb
pusha
loopne
fsubrl
shll
cmpl
and
fs
shl
xchg
lea
cwtl
fmulp
jno
sub
mov
or
cmp
mov
ss
cs
push
cli
xchg
mov
pusha
sbb
pusha
loopne
addb
push
rcrl
loopne
movsl
xlat
mov
mov
loopne
mov
jne
test
fsubs
xchg
mov
insb
push
dec
jae
sbb
xchg
or
pusha
add
sarb
orl
ds
fistl
cli
icebp
or
outsl
sbb
arpl
popa
je
mov
aas
fs
pop
sbb
pusha
cmpb
cmp
push
pusha
inc
xor
outsb
sub
and
mov
adc
dec
in
xchg
sbb
inc
leave
aaa
and
jg
lea
jo
push
mov
mov
rolb
sbb
out
bound
je
les
js
stos
sub
sbb
cmove
or
and
in
cli
addr16
std
sbb
cmpsb
add
stos
inc
and
mov
aad
pusha
inc
pusha
inc
xor
inc
pusha
cld
enter
add
icebp
fwait
mov
mov
andb
pop
scas
addb
jno
add
loopne
sar
movsb
mov
jns
into
rcrb
cli
inc
sti
xor
jo,pt
dec
xchg
ret
mov
mov
jmp
lret
arpl
xor
and
data16
pusha
mov
or
inc
mulps
mov
or
leave
sbb
add
fmull
cli
and
loopne
scas
rolb
fcompl
and
and
jne
sub
xchg
loopne
addb
add
rcrb
xchg
fmuls
inc
or
dec
xchg
add
mov
xchg
repnz
xchg
iret
or
inc
lds
dec
or
mov
and
repnz
push
and
mov
sub
inc
pop
mov
inc
popf
pop
aaa
cld
scas
adc
inc
xor
fists
adc
pop
and
add
add
movsb
and
imul
pusha
test
mov
mov
push
popa
inc
scas
inc
inc
cmp
clc
testb
and
inc
out
jl
sahf
add
add
shrb
cld
ret
lods
xor
inc
mov
in
loopne
mov
adc
test
and
rol
andb
pop
cs
and
inc
sahf
xlat
or
orb
mov
mov
clc
aad
add
and
fnstcw
dec
xchg
mov
pop
repz
loop
out
jmp
in
imulb
sbb
test
pusha
jge
lds
mov
sub
cld
push
addb
dec
inc
push
movsl
cmp
mov
mov
loopne
mov
xchg
shrl
mov
sbb
rolb
andb
rorl
dec
sub
rcrb
pop
mov
inc
call
pusha
addb
mov
pusha
loopne
es
mov
adc
pop
cwtl
jnp
std
or
cmp
jns
pop
inc
jle
pop
add
xor
inc
ljmp
and
or
outsl
sahf
das
mov
andb
sbb
jb
imul
pop
jmp
fistps
cmc
cmp
dec
out
xor
sbb
outsb
jno
pusha
mov
cltd
dec
rcrl
add
ret
mov
andb
in
dec
daa
mov
pop
xchg
mov
add
and
sbb
sub
and
rolb
add
nop
rcl
addb
hlt
mov
lahf
dec
xor
adc
xchg
shl
insb
mov
je
sub
andb
ffreep
xor
icebp
jno
rolb
inc
inc
ret
bound
fs
stos
ret
sbb
pusha
pusha
cmpsl
cmp
dec
lock
fmuls
mov
cltd
xor
add
daa
adc
movsb
loopne
push
inc
test
pusha
cld
xchg
pusha
testl
mov
pop
inc
lods
add
ret
or
lock
addb
dec
sbb
and
loopne
mov
dec
and
inc
add
mov
rcl
sub
jnp
push
imulb
inc
loopne
jge
rolb
sbb
mov
sub
cmp
push
cld
frstor
and
and
les
es
orb
add
inc
pusha
adc
loopne
xchg
mov
mov
gs
or
inc
sub
pop
je
dec
rorb
mov
mov
adc
jns
scas
int
pop
jg
dec
pop
inc
xor
pop
std
ret
out
rolb
cmp
enter
push
cld
mov
push
jl
popf
movsl
out
ds
mov
inc
inc
scas
shl
add
call
stos
inc
xchg
jnp
jbe
push
or
pop
sub
and
aad
jae
and
and
jno
sbb
mov
lret
xorb
andl
rol
mov
xchg
addl
pusha
xchg
jecxz
and
mov
iretw
add
cli
adc
inc
add
out
shr
add
subb
shl
mov
test
sarl
loopne
pop
addb
ljmp
addb
adcb
imul
in
mov
shl
std
ss
popf
inc
mov
push
add
pusha
les
das
adc
sub
and
scas
or
add
addl
push
and
aas
xor
daa
pop
jns
cmc
push
pusha
shlb
dec
dec
pop
lods
rol
lods
and
or
xchg
hlt
jecxz
clc
leave
inc
xor
jne
mov
xor
rorb
andb
cld
pop
cmpsb
and
jnp
jge
loopne
sbb
in
repz
adc
addr16
add
cmp
mov
in
dec
int
fidivrs
ret
or
add
and
jecxz
mov
mov
dec
outsb
dec
push
xor
adc
jns
mov
addr16
lret
test
mov
add
or
inc
adc
or
inc
pop
aam
loopne
je
adc
and
xchg
sbbl
iret
in
dec
popf
unpckhps
leave
sub
inc
aaa
fadd
nop
lret
stc
testl
and
insl
lock
jno
cmp
pop
gs
leave
jl
lcall
push
add
shrl
or
mov
cmp
movsb
loopne
rcll
add
in
nop
inc
adc
mov
subl
xchg
ljmp
jno
xchg
push
pop
push
sub
orb
pop
sbb
icebp
movsb
and
mov
pusha
fistpll
mov
imul
nop
cmp
fstps
fdivrp
jmp
dec
stos
mov
in
pop
add
dec
mov
mov
test
loopne
xchg
xor
pusha
aad
sbb
hlt
mov
andb
testb
pusha
in
push
and
pop
cmp
fstpl
mov
popa
int
and
shrl
and
cmpsb
pusha
inc
or
inc
rorl
in
mov
inc
sbb
loopne
mov
push
jns
fisubrs
pop
out
push
inc
cmp
mov
rol
pusha
pusha
into
mov
ror
mov
push
jg
or
or
add
mov
pusha
bound
and
pusha
repz
fcompl
xchg
fcoms
and
xor
push
mov
clc
stos
push
inc
sbb
out
sbb
dec
arpl
pop
xor
sub
and
addb
test
sbb
mov
shlb
rolb
or
call
stos
pusha
loopne
rolb
push
pusha
call
and
pusha
cmp
andb
push
mov
outsb
cmp
aaa
adc
adc
adc
loopne
mov
mov
out
jae
imul
fadd
mov
add
pusha
mov
and
inc
in
pop
push
iret
popa
xor
mov
add
add
imul
pop
dec
and
pusha
test
cld
aas
or
rcrl
lcall
mov
mov
adc
and
xor
fld
sub
std
xor
idivl
inc
jae
pusha
loopne
mov
pop
fisubrs
sbb
cmpsb
add
outsl
stos
push
repnz
jmp
cwtl
and
inc
add
inc
aaa
push
xchg
inc
movsl
inc
cwtl
mov
dec
jge
sti
popa
cmpsl
fsubrs
adc
xlat
adc
pusha
mov
sti
mov
add
mov
mov
mov
std
inc
shrb
pusha
pop
out
xchg
cmp
and
mov
pop
push
dec
loop
sbb
cmp
xchg
add
pop
bound
mov
andb
jnp
loop
test
and
shll
push
nop
rolb
imul
lods
mov
cmc
jae
sarl
pop
xchg
int
inc
mov
sbb
bound
outsl
in
movb
cmpsb
shlb
sbb
mov
and
pusha
pop
sbb
mov
and
dec
lret
xchg
iret
or
push
and
ret
and
mov
pop
push
stos
add
arpl
xorb
lods
loopne
push
xor
aad
stos
addb
stos
pusha
and
jbe
or
dec
jbe
push
iret
lods
mov
popf
insl
or
dec
sbb
sub
lret
aam
cmpsb
and
push
ljmp
and
jecxz
mov
outsl
and
loopne
adc
les
mov
sub
in
leave
sub
loopne
gs
jbe
gs
sbb
andb
shrb
add
std
shl
lods
and
and
add
stos
hlt
shll
stc
mov
and
pusha
inc
mov
popa
cld
lds
lcall
insb
dec
cmp
push
add
dec
lods
call
mov
bnd
mov
mov
clc
daa
in
loopne
addb
sar
sbb
mov
lods
push
je
inc
pop
sarl
push
xchg
jmp
insb
jnp
dec
add
das
jnp
and
sub
rorb
or
fistpl
inc
xor
or
cmpl
setle
mov
leave
xor
pusha
inc
cld
pop
fwait
or
or
jmp
jge
or
push
dec
push
dec
sti
mov
imul
sbb
je
jne
mov
pop
dec
mov
insl
sbb
jg
adc
push
mov
jecxz
adc
adcl
out
loop
push
xchg
pop
inc
int
mov
or
lds
outsb
mov
and
push
repnz
repz
lcall
bound
hlt
inc
add
subb
mov
stos
or
adcb
andb
pop
loopne
add
push
lahf
jno
and
lret
and
sub
js
mov
and
in
sbb
jbe
and
cld
adc
pusha
adcb
push
xor
shlb
dec
inc
cmp
nop
lahf
mov
push
aad
roll
loopne
loope
mov
rcll
add
xchg
adcl
mov
pop
pop
inc
out
mov
and
test
mov
ret
sbb
xchg
push
mov
sbb
sbb
add
ret
imul
faddl
out
jne
add
shr
push
jmp
inc
cmpsb
pusha
and
inc
inc
pop
mov
dec
xchg
movsl
mov
and
adc
pusha
add
pusha
add
cmpsb
shlb
mov
mov
jp
adc
sti
and
push
jecxz
mov
xor
pusha
mov
mov
rolb
jns
push
insb
fwait
clc
cmc
jmp
sub
lahf
je
aas
mov
xchg
shlb
aas
fadd
jne
and
and
adc
loopne
sbb
mov
cmpsl
xchg
sub
push
and
jmp
mov
jbe
sbb
popf
sub
mov
rorb
shrb
and
rorl
mov
push
push
bound
mov
and
dec
sub
lret
rcrb
sub
hlt
dec
fisttpl
loop
addb
dec
andl
pop
lcall
xchg
pushf
pop
cmc
test
loopne
minps
sub
orb
inc
shlb
add
test
and
into
mov
add
push
scas
test
enter
mov
add
mov
fdivl
rclb
mov
jns
out
std
sbbl
shr
adc
mov
addb
inc
pushf
pop
jae
or
and
sub
push
pop
leave
bound
in
or
add
sbb
mov
into
fbstp
div
jmp
test
jp
inc
andb
xorb
sarl
lret
and
loopne
shl
dec
sbb
push
mov
and
dec
add
add
dec
cli
xor
pusha
orb
shll
data16
mov
loopne
fldt
mov
aaa
mov
cmp
es
sbb
ljmp
repnz
and
push
push
out
mul
inc
mov
lea
xlat
idivb
jl
fdivs
int3
test
and
mov
mov
add
and
out
das
mov
fmull
pop
mov
movsl
jecxz
pusha
rolb
pop
mov
loopne
jg
mov
std
mov
aad
andb
repnz
mov
or
add
ds
fdivr
loop
mov
int3
pop
lahf
xchg
test
inc
leave
lret
push
mov
push
push
das
leave
adc
adc
add
sahf
jp
sbb
bound
cmp
and
xchg
rolb
add
cmpb
or
inc
adc
mov
lret
hlt
sbb
dec
mov
sarb
mov
inc
pushf
popa
adc
jbe
pop
sbb
mov
dec
out
cmc
andl
sub
inc
ret
stc
mov
and
loopne
out
cld
test
add
jne
andb
push
inc
shlb
inc
pop
adc
xchg
sub
push
out
mov
divb
fsubrl
loopne
idivb
scas
inc
mov
in
negb
aaa
pop
movsl
into
in
les
ds
push
xlat
xchg
mov
imul
decl
sbb
mov
adc
jmp
popf
divl
bound
ficomps
je
xor
dec
xchg
push
andl
jmp
pusha
sbb
shlb
popf
push
gs
shr
lea
pusha
rclb
and
mov
jle
mov
pop
int3
sub
shlb
add
pusha
cmc
sbb
and
push
dec
push
out
gs
lahf
dec
sbb
pop
push
in
xor
movb
and
mov
addb
xor
ret
leave
bound
fdivrl
imul
and
mov
mov
mov
in
cmpsb
and
fldenv
pusha
and
cmp
jno
dec
in
cmpsb
inc
and
in
sub
mov
pop
push
adc
inc
jg
and
xor
adc
movsl
test
inc
cmp
mov
fstps
mov
xor
push
loopne
xor
jbe
adc
lea
fstpt
and
call
xor
and
rolb
iret
push
push
call
aam
call
dec
add
mov
pusha
mov
push
test
addb
mov
sbb
cmpsb
inc
pusha
xchg
mov
cwtl
push
adc
rolb
call
inc
out
filds
das
shlb
mov
mov
add
pusha
rcrb
adc
loopne
pop
inc
sub
xchg
push
sub
sbb
mov
xchg
popa
movsb
mov
cmp
jle
outsb
in
mov
fldt
adc
cmp
pop
mov
mov
and
sahf
jo
imul
push
out
add
inc
mov
inc
adc
push
cli
loop
mov
pusha
cmp
pushf
and
push
rclb
and
test
in
lret
fwait
dec
mov
inc
sbb
add
jecxz
inc
xor
aam
int3
scas
and
inc
pusha
dec
loopne
add
je
mov
jecxz
stc
or
add
jg
xchg
pop
in
inc
xchg
inc
or
loopne
adc
nop
mov
mov
shl
pop
sbb
inc
and
xor
mov
out
movsb
addb
pusha
pusha
mov
lods
rolb
push
daa
add
loopne
inc
add
pop
mov
sub
loopne
ljmp
mov
adc
jmp
mov
xchg
push
mov
std
stc
icebp
in
lcall
add
pusha
outsb
hlt
adc
xor
pop
out
lods
add
cltd
mov
adc
pop
pop
ds
mov
push
adc
xchg
mov
push
mov
flds
add
mov
cmp
loopne
push
andb
clc
insl
or
loop
test
sub
xorb
int
push
xchg
or
pusha
leave
adc
push
xor
mov
sub
stos
inc
inc
mov
push
aad
dec
lret
testl
loopne
xor
add
inc
shrb
mov
rcll
mov
add
icebp
mov
testl
and
mov
cld
rcll
mov
or
jmp
mov
jg
out
flds
inc
sbb
into
jbe
pusha
add
insb
push
sbb
add
add
mov
dec
mov
jmp
add
and
inc
push
stc
push
andl
add
cmp
or
and
mov
push
and
movsl
or
mov
pop
inc
mov
loopne
or
jbe
inc
jmp
xchg
sub
mov
insl
into
push
pusha
aas
xor
mov
loopne
pop
in
mov
and
push
fmuls
movl
xor
loopne
cmc
in
mov
daa
and
xchg
push
mov
add
loopne
and
jbe
cmp
xor
inc
adc
and
pusha
inc
fstpt
cmp
sbb
pushf
popf
or
inc
repz
aad
flds
std
addl
inc
mov
loopne
and
lods
pop
mov
sbb
lea
lcall
divb
stos
loopne
int3
cmp
xchg
leave
aam
add
mov
add
loopne
xchg
loope
push
ret
iret
push
loopne
sbb
stos
mov
jle
shr
loope
push
loopne
and
pusha
loopne
jbe
inc
scas
repnz
or
inc
loop
cmc
outsb
dec
push
jg
dec
sbb
loopne
popa
sbb
mov
add
iret
add
xorb
cli
sub
loopne
addb
outsb
mov
test
mov
test
add
imul
andb
fs
or
sbb
xor
inc
jae
add
shlb
leave
inc
loopne
arpl
in
subl
push
push
daa
jle
sti
jno
pop
inc
jo
push
sbb
sbb
ds
xchg
jnp
xchg
cmp
fiadds
and
test
inc
jne
rolb
push
jecxz
mov
test
pop
popa
lcall
add
shlb
jp
rolb
rol
mov
adc
loope
jp
mov
daa
dec
les
movsl
push
dec
out
stos
inc
loopne
mov
sub
shlb
inc
loopne
inc
and
dec
cmp
add
push
arpl
je
or
jmp
in
iret
lods
mov
ljmp
pop
inc
pop
pop
ror
inc
aas
cltd
or
inc
imul
out
inc
mov
jg
stos
inc
mov
sbb
mov
in
insl
nop
mov
inc
xor
mov
jecxz
sbb
inc
pusha
loop
test
mov
sub
shlb
add
add
rolb
pusha
subb
jns
cmpl
add
call
in
mov
and
inc
shll
loopne
inc
flds
and
inc
mov
jge
into
and
and
fwait
out
add
pusha
shlb
xor
rolb
mov
fldt
insl
push
shlb
inc
xor
pop
pop
scas
inc
pusha
pop
test
lret
push
mov
addb
jg
and
int3
hlt
add
xorb
sbb
sub
and
mov
adc
lret
cmp
shlb
cmc
jp
roll
xchg
pop
lods
pop
stos
inc
sbb
test
pusha
pop
or
imulb
std
jnp
jb
mov
scas
out
int3
pop
lcall
push
jnp
scas
sarl
scas
and
fcoms
pop
xor
dec
cmp
cmpsb
andb
enter
add
pusha
inc
dec
xor
add
inc
mov
in
and
xchg
or
add
in
cmpsb
and
pop
clc
sbb
sbb
ret
mov
inc
test
mov
ror
pushf
and
inc
or
mov
pusha
push
test
pusha
push
cmc
or
add
push
and
mov
es
sbbb
std
clc
insl
das
push
notl
or
mov
notl
push
and
pusha
mov
ret
ss
pusha
rcr
sbb
pusha
mov
imul
daa
test
mov
add
inc
rcrb
fldl
pusha
loop
xlat
jp
int3
cld
stc
stos
mov
inc
loopne
test
inc
pop
lcall
sbb
add
xlat
movsl
xchg
dec
xchg
and
mov
je
pop
aas
je
push
xor
pop
ret
shrb
cmpl
loopne
cmp
xor
into
aad
jne
mov
and
inc
test
loopne
mov
mov
incl
int3
fiaddl
mov
pop
push
adc
arpl
mov
add
mov
mov
add
mov
pusha
hlt
and
mov
xor
repz
or
lahf
xor
aad
mov
imul
arpl
cmpsl
das
loope
mov
movsl
xchg
iret
push
inc
dec
nop
cli
pop
shrb
add
mov
fisubs
mov
lret
mov
inc
sbb
xchg
xor
popf
dec
jo
push
test
shrb
repz
fwait
clc
data16
push
cltd
push
push
xchg
cmp
jmp
shlb
lods
and
movsb
and
mov
add
loopne
std
insl
or
xlat
leave
adc
mov
and
mov
mov
and
xchg
fwait
push
xlat
xor
addb
andb
xchg
mov
fistpll
sbb
pop
cmp
inc
jp
inc
pusha
fldl
das
sub
cmp
shl
push
dec
dec
scas
pusha
rcrb
push
cmc
lret
mov
mov
cltd
inc
lds
testb
cmp
jns
sub
xor
div
fdivs
cmpl
rorb
mov
sbb
out
test
lcall
mov
mov
jb
and
pop
movsb
add
mov
or
sbb
mov
test
xor
sbb
clc
dec
imul
sub
lcall
inc
scas
inc
loopne
fistpll
icebp
and
jnp
jmp
sub
add
add
inc
push
fisubl
out
or
cmp
loopne
sbb
xlat
ror
sub
xchg
es
and
and
lock
hlt
sbb
pusha
cmpb
xchg
push
sbb
push
cli
xchg
int3
mov
inc
std
cmpsl
sub
in
mov
arpl
dec
andb
fnstcw
int
xor
mov
inc
filds
mov
and
mov
push
inc
push
popf
push
loopne
in
mov
lods
loope
movsb
rolb
xchg
jmp
add
or
lahf
out
xchg
sbb
loope
xchg
rolb
adc
sub
loopne
add
outsl
mov
cmc
xchg
jbe
jl
add
dec
push
mov
and
add
in
add
add
das
xchg
rorb
inc
aam
into
pop
push
add
pusha
push
mov
sbb
and
add
and
mov
hlt
and
add
mov
xor
loopne
mov
and
dec
add
mov
out
lods
addb
cmp
in
push
mov
ss
push
inc
mov
jmp
rcrl
pop
add
filds
bound
popa
stc
pusha
sbbb
shlb
pusha
rorb
in
mov
pop
pusha
sti
imul
pusha
mov
dec
dec
fstpl
pusha
mov
add
adcl
xorl
push
int3
aaa
aas
mov
push
jnp
xchg
push
xchg
shl
lea
shlb
and
push
faddp
inc
gs
push
aaa
push
lcall
dec
minps
and
mov
das
xchg
inc
mov
loopne
out
addb
jge
sti
sub
ret
push
out
push
loop
mov
adc
outsl
rcrl
rolb
mov
and
or
and
sub
cmp
sti
andb
dec
pop
adc
mov
add
jns
ret
mov
or
loopne
mov
rcrl
push
and
xorb
add
add
sbb
lea
mov
jns
and
leave
add
push
or
sbb
inc
sbb
push
pushf
arpl
pop
out
outsl
mov
and
and
lret
jecxz
pop
std
cmpsl
jmp
imul
popf
add
pusha
sbb
or
mov
ljmp
pop
mov
js
lock
mov
mov
loopne
inc
movsl
stc
shll
addb
sub
out
fldl
andb
inc
mov
push
dec
pop
mov
fcoms
imul
xchg
je
mov
icebp
push
das
xorl
pop
dec
cmp
jne
mov
addb
rorl
mov
or
gs
mov
xor
loopne
xchg
sbb
pop
fistpll
rcr
mov
pusha
mov
mov
pop
adc
inc
push
add
cmpsb
inc
loopne
jo
mov
shrl
and
loopne
loope
adc
or
mov
adcb
shlb
cmp
and
test
inc
pop
in
scas
inc
shrb
neg
xchg
add
popa
fiadds
mov
push
rolb
jo
xchg
call
mov
fbstp
mov
jl
sbb
mov
cmp
sar
pop
rcrl
filds
xorl
andb
les
insb
in
sahf
shrb
scas
in
sbb
xchg
insl
cmp
pop
sbb
in
mov
inc
adc
shll
jl
or
jle
sub
pusha
test
pusha
pop
aas
int3
and
std
pusha
xor
mov
and
add
sub
pusha
mov
push
sub
rclb
add
test
push
or
and
sub
add
in
inc
xchg
movsl
out
jp
idivb
push
rcrb
loopne
out
inc
mov
popf
push
or
dec
xchg
jmp
mov
bound
pop
and
xchg
jle
lret
xlat
bsf
ja
push
push
sub
shlb
lds
mov
shlb
cmc
inc
out
aam
gs
andb
loope
dec
inc
push
jns
outsb
and
nop
sub
mov
rol
jg
or
pusha
lock
outsl
cmp
pusha
and
rorb
mov
add
pop
inc
jb
sbb
push
roll
aaa
dec
jl
pop
popa
xchg
add
lods
lods
mov
and
loopne
movsl
mov
lods
andb
popf
rol
push
fiaddl
mov
test
rolb
cmpsb
inc
loopne
js
dec
lcall
inc
cmp
arpl
sbb
movsb
pusha
mov
jle
jns
loopne
add
sbb
and
je
shlb
and
mov
mov
clc
and
in
mov
mov
daa
icebp
jl
in
imul
fadds
pusha
subb
inc
sbb
dec
inc
inc
lret
mov
add
pusha
loopne
push
dec
sti
mov
pop
fldl
std
insb
les
mov
xor
xor
and
add
sub
rcr
xor
mov
out
jge
scas
out
xor
decb
sub
mov
pop
in
shlb
or
cmp
add
addr16
idiv
test
jmp
and
add
mov
xor
and
andl
sbb
andb
aad
fmuls
mov
or
jo
push
inc
mov
add
loopne
in
sbb
mov
mov
pop
mov
push
add
fwait
out
aam
das
insl
int
js
lcall
jmp
adc
cltd
cmp
or
lds
pop
sbb
imull
hlt
cmpsl
je
negl
jmp
sti
cs
mov
pusha
inc
loop
mov
lret
lea
or
pop
jl
jle
in
push
pusha
inc
xchg
mov
mov
inc
dec
lods
sbb
mov
fwait
mov
mov
les
pusha
imul
xchg
jl
out
test
add
dec
xchg
shlb
inc
and
add
loop
adc
pusha
pusha
repnz
addb
cmpsb
mov
iret
cmp
leave
popf
fsubrs
xor
sbb
sti
jmp
jne
sahf
cmpsb
inc
inc
xchg
loope
jmp
sbb
xor
mov
inc
or
aam
pusha
std
pusha
mov
pop
pop
scas
rolb
jmp
loopne
sbb
int3
xor
fsubs
pop
mov
mov
fisubrl
addr16
xor
jb
sti
fnsave
sub
loopne
out
in
lods
andb
in
mov
rclb
sbb
mov
lret
aaa
mov
dec
ja
xorl
push
push
fs
pusha
mov
and
in
sub
inc
scas
loopne
cltd
adc
mov
test
dec
inc
mov
add
daa
arpl
or
inc
sbbb
push
or
mov
int
enter
pusha
and
inc
data16
rorb
in
jg
loopne
out
mov
jnp
int
addb
and
xchg
mov
stos
xor
mov
fisubrs
imul
and
adc
adc
sub
loopne
and
loopne
int3
inc
repz
ja
mov
pusha
push
and
imul
inc
xor
and
loop
adc
add
jge
mov
scas
inc
loopne
jp
or
mov
rcrl
sbb
call
mov
das
cli
xchg
cmpsb
shl
push
outsb
cld
stc
mov
aas
mov
loopne
andb
fabs
lds
and
inc
lret
xor
cmpsl
sub
add
push
pushf
jo
push
pusha
xchg
ljmp
sub
xor
rcrl
add
xor
addb
cmp
fmuls
lcall
cwtl
and
xlat
daa
sti
outsl
pop
test
fstl
sbb
jnp
mov
xor
add
pusha
loopne
out
xor
lods
cmpsl
sbb
and
dec
jno
incb
sti
push
imulb
ficomps
data16
mov
add
and
adc
mov
jg
jp
mov
mov
pusha
push
hlt
repnz
and
lret
bound
loopne
addb
mov
jge
pop
out
mov
icebp
shl
jmp
loopne
xor
ret
loopne
lods
repnz
lcall
mov
mov
adcb
dec
and
rorb
push
sub
iret
test
xchg
jbe
stc
std
sbb
cli
lahf
cmpps
add
inc
ja
rolb
sbb
pop
jge
inc
inc
xchg
jle
cmc
loopne
xor
and
fiaddl
cltd
jbe
pop
xchg
test
mov
add
cwtl
inc
jne
push
adc
jge
jge
and
adc
mov
sar
push
inc
and
mov
dec
lods
inc
pusha
sub
pusha
pusha
mov
pusha
jne
lds
adc
sub
inc
repnz
xor
mov
out
jmp
lods
inc
addb
rol
outsl
push
data16
sbb
mov
cmp
dec
repz
jae
and
xchg
pop
push
jbe
ficompl
adc
pop
je
jo
dec
sbbl
fsts
and
cmpsb
pusha
addb
mov
adc
pusha
add
fs
cwtl
enter
add
adc
test
sarb
cmp
add
mov
and
loopne
push
dec
jbe
mov
and
shrl
rolb
or
mov
push
xor
movsl
xchg
andb
or
fwait
push
adc
inc
mov
xlat
and
pusha
imul
daa
sarl
pop
popa
pop
pop
sub
pop
test
add
cmp
lret
popf
ljmp
push
and
shl
cmp
int3
push
test
jge
outsl
jecxz
pop
aad
and
daa
adcl
inc
aaa
add
dec
xchg
mov
das
mov
mov
fadds
add
sub
jbe
sbb
mov
or
push
mov
in
pushf
push
incb
jmp
xchg
negb
clc
pop
and
mov
and
pusha
loopne
outsl
bound
cli
je
push
or
pusha
and
loope
pusha
rcrb
adcl
or
fmul
jge
inc
jbe
and
add
test
movsl
ret
mov
and
lock
mov
cmpsl
dec
mov
inc
push
insl
scas
out
mov
movsb
and
jmp
repnz
loopne
subl
fbstp
aas
fwait
xchg
xchg
push
push
lcall
je
push
mov
out
mov
jb
leave
dec
xchg
mov
inc
cld
add
shlb
scas
push
push
push
icebp
fsubs
add
pusha
adc
add
rclb
inc
push
loopne
push
or
adc
shlb
inc
pusha
pop
mov
stos
and
adc
mov
adc
or
and
cmpsb
loopne
aad
or
and
mov
add
shlb
lock
rorl
fldl
test
adc
andb
andb
mov
cmp
mov
jl
cwtl
cmpsl
sar
imul
shlb
mov
pusha
pop
jbe
ss
testl
mov
jmp
fldcw
fmull
push
inc
mov
adc
mov
xchg
test
pushf
adc
addr16
cs
mov
and
and
push
ret
inc
and
xor
in
xchg
sub
pmaxub
loopne
cwtl
pop
pop
inc
mov
and
rcrb
std
adc
dec
call
mov
loopne
xor
inc
and
fs
inc
test
jg
addr16
adc
in
mov
lret
mov
add
lods
std
cmc
aas
mov
push
mov
test
mov
enter
andb
inc
bound
je
out
inc
outsl
sbb
out
stos
add
inc
pop
pop
pushf
mov
popa
mov
lcall
ret
loope
inc
loopne
xlat
lock
pusha
jle
int3
imul
jge
ret
mov
sub
rcrb
rol
std
rcr
jne
and
rcl
shlb
pusha
or
mov
ss
push
xor
call
push
popf
inc
stc
movsb
rolb
mov
mov
cli
jg
dec
jge
in
aad
lcall
adc
mov
fisubl
rolb
and
dec
shll
add
mov
mov
int
xchg
sar
sbb
and
loopne
push
sub
shlb
pusha
lock
adc
addb
xor
jno
dec
lods
andb
adc
ficoms
test
les
addb
dec
xlat
ljmp
sahf
rcr
adc
add
jne
pop
jg
andb
out
pop
call
divb
jns
add
inc
fdivrs
push
jmp
mov
in
sbb
das
popa
mov
insl
pushf
sub
loopne
pop
cmpsl
fld
jno
shlb
mov
mov
pop
pop
sahf
lods
icebp
sbb
lea
sbb
sub
imul
or
pusha
xchg
pusha
dec
loop
push
inc
out
xlat
mov
loopne
pop
cmp
cmpsb
and
rcrl
cmc
inc
adc
lret
pop
incb
mov
fs
pusha
mov
mov
rorb
add
dec
movsb
inc
xor
int3
fcomip
cmp
fs
int3
shlb
loop
sbb
jno
add
mov
push
sbb
xchg
inc
fisubrl
sbb
pusha
sarb
xchg
in
mov
xor
and
imul
add
and
adc
outsb
or
sub
sub
insl
adc
and
or
push
loopne
xchg
dec
jns
sbb
shlb
and
fists
pop
cmp
inc
lea
shr
xchg
in
add
jmp
test
inc
pop
cli
cmp
mov
cmpsl
adc
inc
inc
divb
insl
jecxz
aas
in
scas
leave
cmp
test
mov
mov
cmp
pusha
loopne
fnsave
loopne
insl
push
xchg
sub
fisttpl
add
jb
shll
mov
cmpsb
loopne
outsl
pop
jno
sbb
push
cmpsl
cmp
in
addr16
xor
add
enter
dec
fistps
dec
repz
xor
add
add
push
or
lret
subl
pusha
xchg
dec
mov
jg
push
pushf
ja
shll
into
out
cld
sahf
mov
addb
add
mov
stos
andb
and
pop
xchg
and
out
jns
add
fstps
insl
jo
testb
inc
add
inc
adc
mov
sar
popl
or
inc
flds
shlb
pusha
inc
andb
test
enter
cld
jle
sbb
orb
fdivl
push
jno
ss
inc
jne
ss
dec
repnz
repz
andb
push
pusha
xchg
daa
mov
mov
mov
loopne
xor
cltd
popa
repnz
aaa
adc
mov
xor
shlb
pop
xchg
mov
and
addb
xorl
push
or
sbb
rolb
xor
dec
fstps
and
jg
fdiv
js
loopne,pn
push
ja
mov
cmp
outsb
xor
sub
pop
mov
adcb
ljmp
pop
in
inc
sub
push
test
mov
imul
sbb
imul
addb
jae
add
mov
pop
adc
lock
addb
and
or
and
lods
fidivs
andb
xchg
mov
and
andb
and
or
ss
int
in
ret
or
leave
pop
cltd
mov
sub
out
movsb
addb
xor
fdivrl
dec
mov
and
ja
mov
inc
pusha
in
test
adc
shlb
mov
add
stos
shlb
cmp
lea
fmull
sub
cs
push
sti
and
pop
jp
mov
insb
nop
inc
cltd
cmpsb
andb
inc
fldt
pop
jg
and
cwtl
jb
xor
test
add
push
push
cmc
cmpsb
loopne
jnp
xchg
lret
sub
inc
test
pusha
movsb
pusha
and
ds
add
pusha
pop
sbb
sti
push
in
push
xor
or
shrb
sbb
addb
pop
test
loopne
pop
ds
loope
xchg
jg
push
push
add
mov
clc
push
inc
inc
das
or
jle
test
lods
xchg
test
and
inc
and
dec
cwtl
mov
in
out
dec
out
in
mov
cmp
loopne
mov
add
mov
mov
nop
out
cmp
push
or
push
andb
pushf
jno
pop
ss
pusha
lock
jb
lods
rolb
scas
jecxz
test
test
cmp
seto
cmc
rorb
sub
sbbb
mov
jle
xchg
add
xor
pusha
aas
lret
dec
xor
hlt
sbb
mov
or
inc
sbb
rolb
rolb
and
addl
add
orb
xor
lret
pusha
roll
mov
loopne
mov
scas
cmpsb
inc
inc
jecxz
add
inc
jne
and
mov
mov
pusha
loopne
cmp
out
fst
jae
pop
adc
jno
fnstenv
mov
mov
div
cmp
add
mov
lahf
cmp
jno
mov
movsb
add
xor
aas
ss
xchg
add
add
push
shlb
lods
in
xor
loopne
and
ds
lods
sub
xor
scas
jno
mov
insb
xlat
sub
into
jnp
sbb
out
mov
push
je
mov
inc
mov
push
adc
sbb
jo
lcall
aam
jg
jno
jmp
add
repz
sbb
sbb
mov
rolb
mov
push
addl
rolb
mov
dec
imul
sbb
sbbb
adc
cmpsb
rolb
in
pop
sahf
adc
in
sub
push
daa
mov
fadd
and
shlb
jae
testl
mov
rclb
push
push
xchg
shrb
pop
popa
pop
fadd
sbb
inc
repnz
jmp
lea
pusha
add
xor
insb
push
jp
das
ret
and
loopne
mov
jns
sti
inc
xor
test
mov
fcoml
pop
fdivl
sub
cmpsb
rolb
imul
mov
mov
pusha
jge
jno
xchg
cwtl
imul
enter
int
imul
arpl
fs
out
mov
repz
pushl
xchg
pop
adc
inc
pop
sbb
jmp
fdivr
popa
scas
mov
dec
jns
add
add
sub
add
fadds
shlb
addr16
sbb
insb
xchg
mov
xor
fimull
and
mov
rolb
inc
mov
or
enter
cmpl
pusha
mov
pusha
dec
jmp
and
fdivrs
arpl
cmp
out
dec
pop
js
add
subb
andb
inc
out
fisubs
test
push
pop
outsb
sti
fmull
mov
push
add
mov
pop
imul
add
es
mov
push
and
xchg
ret
shlb
enter
cmp
fadds
rol
mov
jo
mov
xlat
sbb
mov
push
jbe
add
and
add
cmp
adc
ljmp
or
mov
xchg
andb
fimull
gs
mov
or
push
movsb
and
loopne
jnp
adc
mov
lcall
fcompl
cltd
mov
pop
mov
pusha
xorb
jle
and
xchg
mov
xor
inc
add
xor
dec
imul
outsb
push
call
pop
push
pop
test
and
rol
pop
jae
pop
mov
mov
andb
pusha
mov
inc
xor
test
loopne
aam
add
insl
push
add
xor
xchg
cmpsl
repz
and
mov
mov
add
in
scas
and
add
xchg
sub
jae
mov
lods
loopne
sub
xchg
inc
out
fwait
pop
sub
loop
stc
int3
daa
loope
fildll
andb
sub
loopne
lcall
lods
loopne
pop
sbb
mov
out
subl
sub
and
add
jmp
pop
adc
add
or
and
fs
add
test
inc
icebp
jle
cmp
add
scas
and
inc
loope
repz
inc
cmpsl
js
sbb
and
lea
add
add
mov
jns
sub
or
jae
xchg
fsubs
mov
in
xlat
add
push
pop
sarb
aam
std
std
mov
aad
push
loopne
sub
and
daa
nop
in
popf
fsubrl
aaa
lea
loopne
lods
shll
shlb
inc
xchg
jno
scas
cmp
repz
hlt
scas
out
aad
dec
out
fildll
add
repnz
xchg
hlt
sarb
jl
jno
roll
stos
test
call
pop
and
in
inc
fcompl
inc
inc
inc
xor
orb
add
inc
in
cmp
nop
fwait
mov
add
cmpsb
shl
mov
outsl
retw
arpl
jns
xchg
add
cmc
and
pusha
and
sbb
rcr
jle
pop
and
xor
aad
push
pusha
loopne
cmp
loopne
mov
lock
push
mov
and
std
icebp
jbe
xor
popa
ret
pop
ds
addb
inc
mov
jo
sub
add
add
ds
in
les
jb
imul
sub
adcb
and
scas
addb
test
pop
fsts
test
inc
cwtl
cmp
scas
or
jp
leave
repz
push
mov
lods
add
sbb
adc
data16
xchg
dec
sti
in
mov
gs
lods
and
mov
lds
jbe
addb
and
mov
cmc
or
push
mov
xchg
testb
pusha
loopne
popa
jl
mov
inc
sar
loopne
or
and
addb
cmpsb
add
jge
mov
addr16
stos
pusha
pusha
mov
andb
icebp
ret
fcoml
jb
cmpsl
mov
inc
or
mov
or
pop
cmp
fstp
mov
nop
fs
and
outsb
roll
sub
scas
or
popf
cwtl
xlat
repnz
pop
lea
add
mov
inc
mov
scas
and
mov
and
shlb
inc
inc
andb
insb
aas
les
pusha
cmc
dec
dec
insl
push
inc
push
add
add
adcb
rorb
insb
insl
mov
or
add
test
imul
sarl
fsubr
in
imul
or
lea
das
test
pop
aad
sbb
dec
ret
loopne
jl
cmp
int3
pop
fwait
scas
fwait
push
inc
inc
pushf
sbb
leave
mov
insb
in
imul
xor
push
sbb
push
cmc
adc
les
loopne
xor
int3
xchg
jp
out
xchg
jbe
dec
imul
pusha
and
add
dec
xor
pusha
xor
dec
sub
in
jno
sti
ret
xchg
or
es
imul
push
call
loope
in
mov
adc
or
in
out
sub
pusha
pusha
push
and
sbb
mov
loope
xchg
ror
je
out
andb
sub
xor
or
fildl
inc
loopne
ja
xor
push
pusha
add
xor
add
cld
add
loopne
sbb
mov
lea
imul
and
mov
mov
shlb
pop
dec
inc
mov
ret
and
and
mov
mov
popf
arpl
in
jbe
inc
rorb
cmc
and
cmpsl
inc
mov
shrb
jp
in
xor
outsb
add
sbb
fdivrl
xor
pusha
mov
and
cmp
lcall
ficoms
ss
pop
divl
sub
aaa
inc
test
aas
inc
ja
loopne
mov
mov
mov
imul
nop
stos
loopne
scas
mov
mov
movsb
rol
jle
cs
add
jle
or
add
out
dec
dec
rorb
cli
arpl
inc
pop
and
pusha
leave
loope
test
movsl
loop
pop
dec
adc
pusha
addb
inc
add
aam
out
mov
xchg
scas
add
imul
mov
push
adc
aad
add
mov
add
cltd
sub
xor
shlb
pop
jle
test
and
inc
leave
and
inc
lds
insl
iret
jbe
popf
out
cli
sbb
mov
andb
movsb
pusha
orb
mov
shll
fldl
aaa
xchg
jb
cmpsl
add
pusha
dec
and
cmp
xor
fsts
lret
sbb
push
iret
daa
test
sub
stos
inc
add
loopne
add
cmpsl
gs
xchg
pusha
iret
or
insl
enter
inc
and
loopne
leave
rol
push
and
in
out
mov
les
lds
xchg
jnp
fadds
sub
sbb
sti
xchg
jge
das
js
loop
inc
and
loopne
adc
mov
lahf
ss
sub
loope
pusha
pusha
imul
out
xchg
loopne
jns
inc
inc
jp
aam
addb
sub
cmpb
ficomps
sbb
call
andb
rcl
mov
inc
jae
in
nop
sbb
push
jle
inc
je
pop
inc
movsb
pusha
mov
inc
rclb
mov
pusha
pusha
sub
xchg
fdivrs
pusha
add
stc
pop
leave
test
std
push
and
lahf
fstpt
repnz
sub
mov
in
mov
mov
shlb
loopne
jle
mov
jmp
mov
rorb
out
test
pop
fst
cwtl
out
fs
ljmp
mov
cmpl
ret
xchg
test
pusha
sub
ret
mov
add
cmp
or
sbb
add
iret
cli
hlt
adc
lcall
and
pop
jns
rclb
rol
inc
fcompl
xchg
icebp
movsl
fwait
xchg
pop
cmp
add
cmpsb
and
push
xchg
jb
mov
ret
push
mov
dec
cmpsb
loopne
dec
cmp
std
and
fcomps
push
mov
xor
rol
xor
loopne
rorb
fcomps
loope
push
and
repnz
inc
add
and
sti
cmp
sarb
mov
pop
shll
decl
into
out
sahf
adc
inc
in
mov
iret
dec
xor
dec
daa
and
in
sub
mov
ficompl
sarb
pop
dec
clc
repz
mov
testl
arpl
and
cmp
add
rorb
cltd
mov
pop
lret
adc
push
inc
push
dec
push
cmc
inc
jmp
mov
inc
inc
or
ror
imull
pusha
dec
and
cld
dec
outsb
or
add
inc
add
jp
and
mov
push
pusha
add
sbb
into
push
and
add
cltd
test
and
xchg
and
add
stos
rolb
enter
aas
ret
xchg
lahf
sbb
add
push
or
pusha
add
mov
test
add
mov
mov
and
sbb
cwtl
popf
inc
adc
shl
stos
mov
imul
imul
mov
rolb
stc
rcrb
pop
mov
sub
into
sbb
adc
fwait
jle
mov
cmp
jns
ss
xorl
inc
add
ret
mov
inc
rol
add
jne
add
shrb
sahf
or
add
addr16
repz
js
or
push
mov
push
rcrl
add
and
or
xor
add
add
xor
add
in
pusha
ret
and
scas
inc
stc
cltd
pop
loopne
mov
cmp
mov
rol
dec
jne
inc
loopne
cs
ret
jno
addb
loop
xchg
sub
and
jb
adc
int3
ss
sbb
ds
andb
jae
jno
fs
and
xchg
xor
sbb
int
inc
and
fs
adc
mov
in
xlat
mov
add
xchg
inc
aas
mov
inc
dec
rclb
dec
adc
inc
pusha
mov
pusha
imul
ret
push
hlt
pop
jecxz
pop
inc
inc
divb
inc
aas
or
inc
mov
out
cli
loopne
xchg
stc
mov
pusha
push
sti
cmp
ja
xchg
jnp
mull
add
aam
iret
gs
and
add
icebp
cli
pop
mov
push
scas
and
pop
jns
arpl
dec
mov
fimull
mov
add
lock
cmpsb
add
fwait
pop
add
and
and
pusha
lret
xor
std
cmp
aam
add
sub
mov
mov
mov
and
fbld
shr
test
mov
sbb
loopne
stos
loopne
xor
mov
mov
inc
lahf
mov
inc
or
cmp
inc
aad
jp
rolb
repnz
add
loopne
in
xchg
imul
mov
push
fsub
in
xlat
inc
shrb
sub
loopne
push
mov
insl
sbb
or
mov
js
pusha
inc
xor
shlb
fsincos
lods
and
mov
mov
idiv
pusha
fcomps
out
push
rolb
mov
cmp
and
and
leave
cmp
outsb
into
scas
pop
sarb
std
mov
scas
inc
inc
sub
add
dec
out
push
popf
sbbl
rolb
add
inc
mov
and
test
push
jb
or
inc
push
rcl
jne
addr16
mov
and
pop
inc
pop
ss
insb
push
fbstp
lods
inc
loopne
cmp
or
mov
negl
mov
out
ret
iret
mov
and
repnz
out
mov
daa
loopne
shll
sbb
mov
mov
push
xor
dec
add
loopne
jns
loopne
sub
push
and
mov
push
loope
cmp
mov
loopne
rolb
pusha
mov
lds
les
add
sub
loopne
call
mov
cmc
bnd
jnp
scas
shlb
loopne
push
ficoms
leave
mov
xchg
sub
and
mov
mov
sarb
push
fcoml
pop
inc
out
mov
shrl
add
pop
roll
js
ljmp
sbb
or
inc
and
adc
mov
mov
icebp
ds
mov
and
xchg
lods
sub
and
jns
add
idivb
inc
and
lcall
inc
cmpsw
test
orb
aam
mov
add
shlb
lcall
pop
mov
cs
adc
adc
add
rolb
sub
mov
outsl
sbb
cmp
and
pusha
pop
jne
xlat
add
cmp
lods
rolb
les
cs
pusha
or
mov
adc
sub
mov
icebp
sub
mov
adc
lret
cli
jb
fs
insb
adc
cltd
les
rolb
scas
sub
rolb
xchg
bound
adc
in
adc
js
and
loopne
add
sbb
adc
pop
pop
jl
std
aam
dec
imulb
sub
lahf
scas
and
rcrl
cmp
add
jecxz
loop
add
rclb
and
sub
mov
add
mov
loopne
mov
jae,pt
and
loopne
push
inc
cmp
adc
loopne
in
push
inc
or
sti
stos
mov
andb
fadd
pop
sbb
lock
adc
loopne
xor
push
icebp
jno
andb
shl
push
inc
mov
sarb
mov
lock
cmp
dec
es
mov
mov
lret
and
mov
dec
cmp
cmp
push
inc
cmc
sbb
out
test
lods
mov
jecxz
fldl
ja
scas
mov
cmpb
mov
loopne
fwait
mov
and
cmp
adc
dec
add
add
pop
adc
lret
test
inc
add
pusha
dec
push
mov
inc
inc
aam
push
icebp
daa
sub
pop
lea
or
shlb
and
insb
mov
fisttpl
test
xor
and
shl
pusha
and
test
les
dec
push
dec
hlt
outsb
movsl
xor
dec
icebp
dec
push
in
fcmovb
arpl
sbb
push
dec
and
push
addb
push
popf
cmc
cmpsb
pusha
mov
mov
int
sbb
mov
insb
pop
les
mov
mov
mov
inc
mov
jnp
jns
and
mov
sub
es
or
shlb
add
mov
and
rolb
loopne
adcl
insb
pop
fdivr
jl
ret
sbb
mov
and
fisttps
and
and
adc
insl
mov
xchg
fiaddl
pusha
loopne
subl
stos
and
inc
cld
push
arpl
push
jge
mov
add
test
loopne
add
cli
iret
jno
pusha
inc
dec
cmc
jbe
es
or
int
out
cmc
aad
out
call
and
inc
loop
andb
addr16
sbb
and
add
jmp
or
daa
icebp
imul
or
out
rclb
mov
xchg
pop
xor
scas
rolb
inc
inc
int
shlb
stos
cmp
inc
and
fstpl
push
loopne
ds
loopne
inc
push
insb
enter
jae
add
std
roll
mov
add
dec
mov
mov
int
lcall
adcb
cwtl
pop
aaa
adc
pop
mov
mov
mov
add
fcmovu
fildll
xor
sahf
xor
jno
inc
shr
jecxz
xor
fiadds
out
sbb
mov
cmp
sub
lret
dec
dec
loope
pusha
pusha
cmc
aad
adc
adc
and
xor
mov
cld
jecxz
addb
notl
mov
jl
inc
icebp
sub
pop
popa
dec
js
and
sbbl
mov
adc
dec
call
mov
roll
andb
pop
push
and
pusha
loopne
imul
out
add
pusha
cmpsl
dec
cmp
inc
and
pusha
es
addb
pushf
inc
pop
push
movsl
test
and
cli
mov
cmp
xchg
sub
subb
scas
add
push
pushf
std
xchg
cmp
xor
rcll
pop
inc
jle
enter
adc
mov
xchg
mov
ja
daa
cld
loopne,pn
mov
cmpb
mov
mov
mov
or
add
lock
xor
out
inc
ss
jbe
arpl
mov
mov
add
xlat
int
rcl
mov
cli
fsubl
sub
mov
dec
lcall
mov
pop
inc
int3
cmp
jge
aam
es
dec
push
into
inc
and
sub
and
lea
and
outsl
mov
in
into
and
add
cmp
cmp
stos
add
stc
push
xchg
jecxz
movsb
and
loopne
stc
xchg
hlt
out
inc
dec
lret
jne
mov
gs
pop
lret
ljmp
inc
pusha
xchg
sar
rorl
repnz
xchg
jmp
daa
icebp
jecxz
ljmp
int
and
push
cmpsl
ss
cld
leave
push
stos
jae
scas
dec
int3
jmp
xchg
mov
stos
or
or
mov
pusha
scas
add
push
sub
push
mov
popa
popw
mov
jl
pusha
add
add
ja
out
push
xor
hlt
mov
lcall
mov
orb
jb
xor
push
and
shrb
loopne
and
inc
mov
shll
and
movsb
pusha
inc
mov
ret
mov
clc
add
cmp
sbb
das
add
mov
and
lcall
enter
adc
rolb
lods
loopne
add
shr
aad
in
les
pusha
add
fisttps
loopne
iret
sub
mov
pop
loopne
and
rolb
mov
or
mov
test
rorb
and
push
stos
mov
adc
mov
shlb
mov
addb
rolb
in
ret
dec
jl
sub
push
pusha
je
fs
mov
dec
and
inc
mov
and
decl
adc
xor
and
fidivrl
data16
in
and
cmp
rorb
sbb
pcmpgtb
and
lods
adc
lea
mov
loopne
cmc
mov
dec
sub
rclb
jge
loop
iret
inc
add
pop
pop
or
pusha
inc
pop
xor
movsb
inc
inc
pop
faddp
lods
and
addb
cli
fmull
dec
xchg
mov
gs
pushf
dec
testl
sbb
mov
lods
test
add
mov
push
fmulp
jle
testl
jbe
out
inc
xor
leave
in
sbb
mov
cs
push
push
mov
dec
sub
repz
inc
addr16
fisubrl
add
mov
andb
adc
lcall
xor
add
fnstenv
sbb
dec
lods
mov
mov
mov
add
shl
dec
or
andb
stos
shlb
imul
popa
out
outsl
cmp
scas
mov
and
pusha
add
dec
imul
xlat
nop
xchg
lahf
popf
fsub
insb
cltd
outsl
leave
loop
loopnew,pn
lcall
mov
shll
xchg
sbb
mov
xchg
sub
add
cltd
push
rcl
in
fstpl
pop
push
aaa
push
int3
jns
xor
or
imull
sbb
mov
daa
movsl
jg
push
sub
pop
push
inc
mov
sub
sbbb
xchg
mov
sahf
push
test
mov
cmp
push
jo
call
push
sbb
fwait
pop
mov
leave
rorl
in
xchg
loopne
dec
bound
je
mov
lahf
ret
and
inc
test
pusha
cld
popf
popf
in
sub
jmp
lcall
sarb
push
and
mov
push
fadds
sbb
int
add
mov
cmp
out
and
inc
fistps
ret
shlb
loope
add
cmpsb
pusha
rclb
mov
dec
jns
jp
cwtl
das
ret
add
jbe
pop
sub
loopne
pop
scas
cltd
adc
sahf
leave
insl
into
stc
inc
test
aad
stos
xor
pop
call
pusha
shrb
dec
sub
je
cmc
pop
push
rcl
xchg
xchg
mov
adc
xchg
test
pusha
int
icebp
stc
inc
insl
shll
rolb
cmpsl
lahf
adcl
rolb
loopne
fidivl
sbb
sarl
lcall
inc
mov
pusha
and
pushf
fwait
xor
jl
test
inc
or
pusha
jp
xor
xacquire
adc
repnz
fmuls
aas
clc
daa
idivb
cmpsb
mov
fldcw
inc
andb
mov
fst
push
in
add
addb
pusha
pusha
pop
jge
iret
xchg
jo
cli
dec
dec
push
mov
les
jmp
add
loop
pusha
adc
pop
jnp
and
popf
andl
loope
inc
loopne
scas
add
repnz
jg
andb
jg
xchg
inc
inc
lcall
imul
jnp
inc
add
or
mov
inc
push
mov
push
lret
rorb
and
add
mov
push
lods
mov
inc
and
mov
add
push
aaa
mov
icebp
repz
loopne
ret
fsubs
sbb
mov
je
cld
imul
pusha
rorb
or
mov
mov
xchg
adc
pop
dec
out
or
cmpb
iret
jo
and
aad
or
add
mov
add
add
cmp
dec
sub
and
sub
add
jne
sub
and
and
loop
mov
xchg
and
loopne
push
and
in
movsb
pusha
and
std
sahf
inc
fisubrs
shlb
xor
jne
add
sarb
mov
inc
fwait
add
loopne
dec
and
and
cmp
inc
mov
cmp
leave
sbb
jp
loop
sub
rorb
movsb
inc
adcb
and
imul
push
gs
pop
push
idivl
loopne
mov
mov
inc
stc
mov
push
jge
or
ja
negb
test
lahf
jl
daa
je
shl
mov
inc
inc
daa
adc
rol
pop
insb
pushf
lcall
shlb
rcll
push
aas
pop
dec
mov
stc
jge
cmp
mov
push
outsb
mov
push
gs
push
rolb
inc
and
jae
xor
inc
xor
pusha
and
add
leave
nop
ficoms
int3
dec
cwtl
enter
push
jle
sub
std
pusha
and
pusha
out
mov
jb
aad
addl
rolb
jae
out
stc
push
mov
mov
loopne
fs
loopne
shll
jne
outsl
adc
sahf
mov
rolb
xchg
and
pop
pop
ljmp
inc
loopne
mov
pop
stc
lret
cltd
adc
mov
int3
jnp
js
mov
orb
aad
rolb
push
inc
cmp
lcall
out
popf
jmp
jne
fiaddl
inc
scas
jno
pop
mov
shll
xchg
out
mov
pusha
mov
dec
test
aam
push
pop
adc
add
test
pusha
int
mov
and
push
stc
out
ja
lret
lret
test
outsl
scas
and
and
and
pusha
cmp
add
ror
jmp
shl
fcom
jg
andb
xor
mov
loop
loope
xor
dec
lea
shlb
and
je
cmp
orb
and
rcll
lods
bound
mull
pusha
out
mov
test
mov
pushf
gs
pusha
popw
jmp
adc
push
pop
dec
adc
int3
repnz
call
add
lds
in
xor
pusha
and
mov
dec
ret
nop
mov
sub
mov
or
rcrb
pop
dec
fwait
cmc
jns
add
bound
rolb
or
outsb
aaa
nop
je
loopne
jge
add
negb
ss
xchg
dec
xchg
or
inc
test
add
add
add
insl
jg
inc
loopne
std
andl
add
pop
xor
mov
js
aas
and
xor
dec
adc
inc
repz
loopne
dec
cwtl
test
mov
and
hlt
inc
cmpsb
rolb
add
outsl
cmpsb
pusha
add
pusha
inc
adc
rclb
mov
ret
and
test
mov
shl
hlt
and
aaa
mov
dec
js
xor
lods
scas
dec
test
stos
stc
push
addb
ror
cs
shlb
pop
and
and
addb
pop
pushf
js
adc
push
repnz
xchg
push
mov
adc
mov
loopne
jno
dec
jnp
int
out
sbb
inc
ficomps
mov
std
fwait
lods
mov
push
outsl
add
int3
lcall
loopne
mulb
cmp
mov
dec
pop
jno
shlb
out
arpl
ror
dec
jmp
ds
pop
mov
mov
negb
pop
js
stos
and
add
fildll
xor
outsl
xor
pusha
add
shrl
inc
addb
mov
es
lds
xor
daa
sub
mov
mov
jmp
shl
out
rcrl
ss
adc
test
andb
mov
and
inc
pop
mov
push
dec
push
loopne
in
cld
fistl
stc
mov
addb
mov
inc
aaa
xchg
pop
mov
cmp
cli
pop
jg
mov
outsl
addr16
repnz
sbb
test
add
push
mov
sub
and
inc
or
int3
jge
int3
mov
adc
xchg
push
lods
aad
out
inc
minps
cmp
and
jle,pt
adc
aas
popf
sbb
sub
inc
loope
shrl
pusha
mov
xchg
pop
bnd
mov
shlb
std
lea
ljmp
pusha
ja
jecxz
and
mov
mov
pop
test
cli
adc
pop
push
pusha
pusha
repnz
inc
cmpsb
rolb
pop
dec
jo
mov
and
push
add
loopne
sarl
loopne
sub
mov
inc
xor
je
dec
cmp
add
out
lret
ds
scas
pusha
add
negl
pusha
pusha
jbe
and
inc
and
addr16
lret
and
ljmp
mov
je
jno
sbb
in
inc
test
fcmovnu
sbb
xor
ror
hlt
xchg
cwtl
mov
add
lcall
imul
and
js
in
mov
inc
aam
mov
mov
push
out
in
arpl
or
imul
push
test
xor
pop
xchg
aas
enter
les
out
jae
jno
dec
mov
xchg
add
xor
add
js
lods
rolb
sub
ficompl
shr
add
pop
dec
xchg
addb
and
mov
aad
push
loopne
push
fcomps
inc
add
inc
mov
loopne
stos
rolb
mov
mov
sti
jle
inc
push
fsubs
or
rolb
daa
push
fsubrl
jae
out
push
scas
loopne
movb
xor
leave
popa
pop
cmovne
xor
xchg
mov
mov
lahf
fistpll
pusha
loopne
push
jno
shrl
and
jb
int3
repnz
addb
gs
add
push
push
cmp
mov
cmp
ljmp
sti
repz
jmp
shrb
adc
mov
out
leave
fisttpl
icebp
lcall
fdivs
and
add
mov
inc
rclb
xchg
add
enter
xor
adc
mov
ljmp
inc
and
xchg
lahf
fidivs
aaa
gs
into
lcall
fsubrs
movsl
xor
mov
addb
test
add
pop
mov
push
push
loopne
cwtl
or
iret
aaa
out
mov
data16
out
xchg
sub
add
out
push
and
addr16
jmp
outsb
and
out
inc
mov
jae
inc
cmpsl
aaa
add
push
xchg
cmp
inc
imul
mov
xor
push
jl
add
inc
out
stos
mov
xor
mov
pusha
add
jecxz
mov
pop
outsl
push
in
mov
mov
stc
xor
test
jns
adc
addb
lods
pusha
loopne
jecxz
ljmp
sub
and
sub
adc
nop/reserved
and
mov
mov
nop
jo
clc
add
insb
adc
andb
mov
pusha
bnd
pushf
in
and
into
or
loopne
test
sti
sbb
fistpl
jmp
in
shlb
xchg
cld
and
push
fstps
mov
cltd
sub
shlb
xchg
aad
xor
mov
push
xchg
push
and
jb
add
test
push
aad
js
pop
or
imul
repnz
divl
xlat
incb
les
sahf
and
imul
int3
bound
or
movsb
and
inc
sbb
pusha
add
or
and
pop
enter
call
outsl
xor
ss
fcoml
add
inc
sbb
mov
push
dec
pop
loop
outsl
cmp
inc
add
daa
mov
inc
rorb
adc
ljmp
xchg
adc
or
movsb
mov
sub
aas
jns
cmova
fsubl
xor
and
dec
rcrl
pusha
rorb
shl
addb
pusha
inc
inc
bound
addb
imul
pop
push
jge
shlb
stos
stc
sbb
or
bound
aas
pop
sbb
fs
in
add
xor
stos
mov
mov
adc
loopne
pusha
mov
shlb
int3
daa
in
inc
cwtl
push
and
insl
loopne
in
ljmp
aad
gs
jle
mov
mov
ficomps
ret
into
loopne
mov
stc
mov
rcll
call
mov
cmpsl
leave
ss
add
mov
out
rclb
nop
xlat
jbe
and
sub
cld
in
inc
xchg
shrl
loopne
fcmovu
push
bound
cld
push
andb
rorl
inc
and
insl
pop
xor
or
leave
lods
adc
sbb
into
cld
sbb
and
and
xchg
fsubrs
or
dec
mov
mov
inc
inc
jp
arpl
sarl
add
movsb
loopne
clc
dec
repz
repnz
inc
pusha
or
decb
rolb
sbb
cmpsl
imul
out
push
pop
push
add
into
fdivrs
cmp
cwtl
pop
test
andb
stos
pop
push
out
xchg
jbe
push
cmp
stos
es
cmp
fdivrs
out
xchg
and
sbb
sub
cltd
sub
std
sub
loopne
xor
fmuls
loopne
jno
addr16
pusha
and
cld
iret
lcall
xor
int3
mov
out
mulb
mov
mov
and
inc
in
in
cmp
fiadds
pusha
andb
pop
jmp
in
rol
add
jmp
fiaddl
xchg
test
inc
xor
add
pop
sub
mov
ja
iret
lds
fcom
je
pop
push
push
cmp
aad
pushf
jo
test
cmp
xchg
loopne
xor
int3
rcr
jns
sbb
mov
and
rolb
or
inc
mov
dec
clc
je
lcall
pushf
or
inc
outsb
shrb
ret
mov
loop
jns
insl
daa
mov
gs
dec
in
add
pop
mov
lret
push
mov
add
sbb
rol
mov
mov
cmpsl
add
jns
test
rcrb
jl
add
cmpsb
add
inc
lret
fimull
loop
repz
scas
and
lret
push
addb
aad
add
neg
lret
jp
pop
xor
test
add
jo
sub
jl
data16
ficoml
sbb
les
or
mov
shlb
adc
or
rcr
cmp
jp
push
cmpsl
test
loopne
adcl
negb
les
mov
pusha
pusha
in
inc
dec
inc
sub
pusha
icebp
gs
inc
and
inc
ljmp
jns
inc
and
and
mov
cld
ret
outsl
dec
dec
xor
js
mov
and
mov
fsubrs
lods
addb
ret
hlt
das
repz
stos
adc
hlt
add
pop
cmpl
push
in
add
loopne
enter
je
cmpsb
shlb
popa
lds
cs
xchg
mov
cmpl
and
clc
sbb
push
call
addb
clc
in
ds
cltd
adc
sub
inc
pop
sbb
and
push
shlb
shrb
cmp
ja
jo
cmp
out
pusha
add
mov
or
sbbb
test
pop
xchg
loope
adc
add
inc
data16
and
orb
mov
inc
scas
jmp
loopne
xchg
fildll
addb
push
iret
aas
add
push
mov
pop
in
mov
clc
sub
mov
jb
mov
and
pusha
cmp
push
mov
xchg
pop
xor
lea
xchg
adc
int
pop
mov
cmp
adc
cwtl
mov
andb
int3
push
pusha
decl
lds
push
stos
fldcw
movq
test
pusha
xor
inc
addb
sbb
mov
add
dec
nop
movsb
addb
jno
mov
sti
popf
cmp
andb
dec
xor
add
mov
push
sbb
test
rorb
jmp
stos
inc
lret
jp
movsl
or
rcl
stos
push
ds
jecxz
sti
in
push
cmp
xchg
stos
rol
mov
imul
and
addb
std
cwtl
aam
jno
shlb
mov
sub
push
mov
out
in
pushf
iret
mov
add
leave
mov
imul
lahf
push
rcl
mov
inc
icebp
in
addb
int3
comiss
in
xor
add
fdivp
out
pop
mov
mov
and
fsubp
or
add
fwait
mov
fisttps
add
and
xchg
inc
popa
sub
pop
pop
cmove
fcoml
pop
mov
imul
xchg
adc
lcall
pop
sub
and
add
add
lock
push
fistps
ret
pusha
inc
xor
add
rorb
addb
loop
andb
mov
mov
movsl
push
push
sbb
ljmp
js
mov
inc
loopne
dec
sbb
push
add
mov
push
push
mov
adc
or
inc
roll
ret
xchg
lret
sarb
sbb
movsl
inc
inc
mov
repnz
movb
mov
sahf
lock
das
adc
imul
repnz
fimull
addb
adc
push
sbb
add
add
test
mov
add
add
pop
in
arpl
pop
lret
stos
shlb
int
outsl
jecxz
push
aaa
xchg
xchg
subps
call
jb
dec
cltd
push
push
or
cli
mov
arpl
pusha
fnstsw
dec
jb
add
xor
fs
add
bound
pusha
add
xor
fstl
xlat
addb
inc
pusha
pop
dec
adc
cmp
jge
aas
leave
jecxz
push
rcrl
pop
into
mov
test
and
ljmp
xchg
mov
subb
cmpsb
mov
jo
jge
dec
loope
add
push
add
push
sbb
iret
jl
rolb
inc
sbb
jecxz
mov
test
mov
aad
mov
add
and
sbb
mov
cld
ljmp
icebp
mov
mov
sbb
inc
addr16
sbbl
cmp
test
jge
inc
inc
push
loopne
inc
mov
loopne
stos
loop
xchg
pop
fsubs
jnp
and
or
decl
pusha
sub
inc
and
xchg
and
cmp
inc
or
loopne
mov
notl
inc
psubsw
push
add
aas
lahf
loope
jne
pop
push
mov
xchg
pop
aaa
xchg
mov
xchg
ljmp
repz
and
fldt
loopne
sub
int
insl
xchg
dec
je
leave
sub
inc
mov
pusha
mov
add
or
and
inc
mov
dec
ja
cld
sub
and
or
inc
shlb
inc
loopne
addb
and
adc
rol
sub
shlb
aad
shlb
cmp
mov
or
and
shl
jl
or
andb
jmp
push
dec
xor
cmc
pop
jmp
cmp
dec
aam
dec
inc
add
and
loopne
rorb
int3
pushf
sub
sahf
dec
push
cmpsb
and
cli
and
cwtl
fistl
cltd
push
add
mov
loopne
inc
xchg
add
dec
pop
stos
pusha
sarb
insl
sbb
out
js
lods
add
inc
fstpl
add
or
jg
add
cmp
or
mov
inc
jl
stc
adcl
dec
xchg
push
ljmp
repz
ret
sub
and
aad
push
inc
add
rolb
adc
icebp
dec
mov
xor
loop
adc
or
inc
adc
pop
test
inc
fsubrl
out
sbb
inc
xchg
add
add
jb
push
xchg
and
inc
inc
in
sti
insb
jp
pop
andl
mov
fcompl
not
aas
stos
jb
push
sarl
cmc
in
out
jmp
dec
xchg
jecxz
mov
add
cmp
loop
test
loopne
loopne
or
sahf
inc
xchg
cmpsl
inc
or
shlb
pop
jmp
mov
aaa
sub
test
add
into
cltd
mov
add
pop
pop
sti
scas
shlb
mov
inc
xchg
and
test
and
and
and
pop
jl
push
arpl
jae
std
insl
jns
push
push
andb
or
sbb
iret
mov
ja
inc
pop
jp
xor
loopne
aas
lock
mov
jg
loopne
aas
ret
scas
add
and
loopne
pusha
add
mov
cmp
fmuls
mov
stos
mov
pushf
and
andb
cmpsb
pusha
and
mov
mov
test
dec
sahf
outsl
outsb
cmp
test
loopne
xchg
cmpsl
inc
imul
push
dec
mov
shlb
ds
sub
cmpb
xor
mov
andl
xor
jecxz
dec
loopne
cmp
negl
jl
cmp
stos
loopne
nop
add
shll
mov
dec
nop
out
and
loopne
rol
dec
mull
inc
shlb
pusha
imul
rcrl
add
cmpb
mov
pop
push
mov
and
xchg
or
mov
rcrl
scas
mov
ret
stc
mov
rorb
push
adc
test
mov
add
movsl
sub
pusha
dec
scas
pop
pop
add
lret
dec
inc
jl
fldz
mov
popf
addl
aam
pop
imul
insb
jne
dec
fnstsw
push
adc
and
aaa
xchg
jecxz
andb
scas
insb
test
sbbb
pusha
and
and
idivl
mov
add
nop
adc
jae
xlat
sub
rolb
xchg
cmp
push
test
flds
dec
mov
add
or
and
ds
xchg
cmp
inc
jmp
bound
aas
loopne
hlt
cltd
data16
inc
loopne
lret
icebp
push
shlb
inc
mov
jp
xor
push
aam
aad
cmpsl
loop
rorb
and
pusha
mov
sub
mov
inc
andb
fnstsw
xorl
pusha
jp
loopne
enter
add
cmpsb
shlb
jp
les
push
sbb
jnp
ret
and
jp
nop
sub
mov
mov
dec
add
sbbb
test
cmp
test
xchg
sub
fsubrl
lods
xor
sub
and
inc
ljmp
pusha
or
sub
inc
cwtl
in
insb
ja
pop
sbb
movsl
jg
dec
packssdw
and
fistps
mov
jmp
aad
inc
in
std
sub
loopne
or
and
adc
cmpsl
mov
sti
fs
xor
xchg
add
lods
add
andb
pusha
rorl
add
hlt
mov
shll
pop
lock
inc
loopne
jnp
lds
rcrb
push
and
and
adc
pop
fistpl
pusha
jmp
test
repz
imul
ljmp
dec
gs
rolb
or
cmpb
inc
mov
loopne
inc
cmp
jne
pusha
je
jge
dec
push
mov
mov
and
jno
outsl
ret
push
xor
jp
xchg
mov
mov
add
rcll
sti
dec
jbe
jmp
insl
lods
mov
rolb
stos
pusha
loopne
int
xor
mov
popf
sbb
mov
sub
xlat
and
mov
loopne
xor
ror
pop
les
cmpsb
inc
add
rcll
push
dec
ret
lock
jae
mov
imul
or
mov
arpl
daa
hlt
or
inc
insl
xorl
mov
enter
adc
jp
roll
jle
roll
data16
xchg
mov
inc
rol
push
gs
imul
pop
add
lods
cmp
add
add
add
and
sahf
adc
fnstsw
mov
and
xchg
mov
mov
fbld
rdtsc
pop
xor
fcmovnb
and
inc
sbbb
shrb
inc
lods
loopne
pop
xchg
mov
jecxz
loopne
leave
lds
outsl
outsb
pop
add
mov
cmpsl
lods
addb
mov
fistps
and
adc
or
mov
aaa
mov
add
stc
dec
icebp
sub
inc
dec
int
lods
loop
cli
mov
rcl
jle
jne
xchg
inc
sub
add
leave
mov
cmc
pop
decb
es
inc
push
inc
rorb
nop
sbb
and
or
adc
icebp
pop
les
out
jmp
xchg
push
sbb
mov
inc
jmp
add
es
andb
fwait
push
enter
adc
sbb
lds
rclb
aad
pusha
mov
and
int
call
cmp
pop
cmc
mov
xchg
jne
call
repz
aad
mov
in
sub
shl
aas
or
mov
inc
sub
hlt
scas
inc
movsb
shlb
fneni(8087
aas
je
add
pop
std
pop
lret
sbb
sti
enter
pusha
sarl
xchg
data16
jmp
push
fmuls
cltd
stc
ret
andl
mov
ret
les
es
loopne
pop
sbb
in
aam
and
les
jmp
nop
test
lret
ja
scas
jb
push
push
addb
cltd
sbb
sahf
pop
loopne
or
movsb
pusha
mov
incb
fcoml
mov
inc
pop
and
push
rolb
mov
arpl
pop
popf
ds
in
push
jb
scas
ds
xchg
out
mov
lcall
fldl
rolb
je
and
mov
inc
xor
mov
orl
add
ss
push
mov
pop
scas
loopne
sbb
pop
lcall
lret
dec
push
add
push
pop
call
loopne
movsb
addb
lea
test
inc
mov
loopne
stos
inc
sbb
roll
out
movaps
das
sbb
inc
xor
mov
lahf
in
push
loop
add
scas
es
shlb
lcall
outsb
push
and
popl
xor
stos
pop
fiadds
lea
pop
clc
subl
xor
in
outsb
mov
dec
lods
add
sbb
and
pusha
sub
mov
inc
jecxz
or
and
cmp
outsl
pushf
cmp
test
add
lds
jecxz
lret
filds
ror
pop
lock
jae
adc
xlat
or
inc
xchg
test
sarb
inc
sbb
sub
sbb
pusha
and
mov
push
stos
pushf
xor
pop
popf
pop
lods
loopne
or
hlt
outsl
mov
add
and
cmp
push
rcr
lock
and
mov
xchg
xor
sbb
outsl
or
loope
add
mov
popa
or
pusha
push
jo
push
loopne
adc
in
mov
pop
das
aas
cmpsb
pusha
mov
mov
orb
clc
aaa
jle
loopne
sbb
mov
and
pusha
adc
repz
rcll
das
inc
rcll
test
push
pusha
rcl
xor
arpl
arpl
sub
pusha
mov
rol
mov
pop
inc
lahf
adc
repz
mov
rorb
rolb
mov
lods
cmp
push
pusha
and
repz
push
in
and
inc
mov
in
push
cwtl
test
sar
jbe
mov
sbb
pop
jae
sbb
pop
shlb
and
in
and
movsl
fiadds
mov
and
mov
add
andb
add
bound
mov
jmp
pusha
movl
idivl
movsl
test
xlat
mov
loopne
sbb
pop
in
push
repz
jp
add
adcl
loopne
xlat
and
and
mov
adc
xchg
jg
fwait
outsl
or
aad
push
cmp
cwtl
push
mov
popf
xchg
jns
pusha
and
lahf
jp
mov
dec
jae
push
and
mov
bound
add
add
fscale
adc
and
loopne
sub
mov
cmpsl
mov
mov
pusha
pusha
and
mov
sub
add
inc
js
inc
pop
data16
dec
mov
inc
push
addb
sub
rolb
cmpb
and
mov
out
repz
inc
loopne
sub
ss
or
ljmp
pusha
shlb
push
dec
xchg
lcall
rolb
pusha
bound
jmp
fiaddl
jb
mov
shr
mov
xorb
addr16
aad
sbb
inc
les
inc
rcl
cmpsl
jne
cld
push
lret
and
andb
cmp
imul
pop
push
addl
faddl
arpl
mov
enter
inc
mov
outsl
add
loopne
fbstp
sbb
cmp
pop
push
insb
mov
das
mov
inc
lret
jmp
and
or
test
inc
jmp
into
lock
mov
mov
lcall
dec
movsl
shr
jno
pop
jo
fstps
and
xchg
sub
dec
inc
push
inc
inc
push
or
out
aam
rorb
out
scas
add
mov
insb
inc
cmpsb
add
mov
add
pop
mov
pop
fldl
xchg
das
or
imul
in
push
add
lahf
orl
addl
add
lahf
pop
or
sbb
mov
push
xchg
xor
iret
inc
lea
or
or
imul
addr16
and
add
loopne
lea
sahf
lret
repz
rolb
adc
scas
mov
sbb
mov
test
dec
dec
pop
fimuls
addb
cli
out
cmp
pusha
inc
outsl
push
notb
xor
mov
cmp
or
sarb
or
dec
fsubp
inc
pop
test
les
jb
loop
lods
sbb
jp
icebp
jae
xor
pop
jl
jb
pusha
and
adc
fld
dec
dec
cld
mov
lcall
inc
inc
push
ret
push
push
jo
sbb
xchg
repz
sbb
fcmovnbe
sub
sbb
xlat
push
or
ret
pop
sub
out
adc
fcmovb
push
inc
inc
pop
adc
inc
push
and
cwtl
lahf
dec
sbb
jl
movsl
test
loopne
lds
and
mov
and
push
je
stos
add
pop
andb
call
repnz
lret
mov
inc
add
add
pusha
xor
cmpl
mov
shlb
lock
and
pop
jp
cmp
cltd
lods
mov
lods
shll
mov
dec
add
mov
add
mov
adc
pop
mov
and
leave
mov
fldcw
add
pusha
popa
mov
sarb
jb
ret
push
cwtl
inc
and
and
cmp
and
add
fadds
xchg
fcomps
icebp
add
sbb
fdivr
add
xor
add
and
sub
push
pushf
cmp
xchg
mov
cmp
loopne
adc
mov
pusha
mov
loopne
jbe
add
subb
mov
mov
sbb
mov
popa
lret
icebp
jge
mov
sti
mov
pusha
mov
loopne
jge
sahf
mov
and
jb
mov
addb
inc
in
lret
scas
mov
mov
jecxz
add
mov
divb
adc
shlb
and
sbb
cmp
lds
pusha
sar
andb
stos
pusha
and
mov
mov
scas
xchg
test
mov
imul
xchg
je
hlt
cmp
in
loope
xlat
ss
ret
movsb
mov
add
cmp
push
ljmp
mov
sub
pop
mov
add
pusha
subl
mov
shlb
jl
fists
shll
sti
and
jmp
dec
insb
and
loopne
mov
jo
pop
pop
pop
rcrl
lock
leave
push
push
mov
sti
outsb
mov
add
or
cmp
je
mov
gs
jnp
pop
inc
pop
cmpsb
pusha
inc
lret
jmp
inc
push
jnp
and
and
out
aad
xchg
in
xchg
stos
pop
pushl
inc
and
and
shrb
pop
fmull
cmp
lahf
mov
inc
adc
loopne
pop
or
shrl
add
and
add
inc
push
and
addb
jl
pusha
rolb
xor
inc
outsb
jne
mov
shll
stc
leave
pop
stos
inc
mov
jae
mull
or
mov
jns
sub
pusha
cmp
push
int3
dec
pop
or
add
vmovupd
in
nop
fisubrl
outsb
enter
sbb
fdivrl
mov
and
loopne
lock
sbb
jmp
push
stos
rorb
out
pop
addb
stos
jecxz
rolb
fstpl
inc
shlb
fbstp
test
add
and
xor
les
push
and
mov
xchg
std
lods
andb
dec
mov
and
in
push
fstp
adc
andb
js
cs
shll
fbstp
mov
push
add
int3
inc
mov
icebp
test
pusha
jb
in
or
mov
mov
add
loop
xor
pusha
rclb
or
in
sarb
and
cmp
sbb
loopne
loopne
outsl
mov
and
in
cmp
cmc
test
mov
loopne
aam
popf
xor
jg
pop
jb
icebp
or
pusha
push
and
aaa
iret
xchg
push
mov
jns
sbb
pop
test
xor
pop
xchg
pop
adc
add
and
mov
loopne
xchg
leave
test
add
addl
rolb
fdivs
lcall
test
subl
inc
fmul
jbe
xchg
sarb
addr16
loopne
cmc
scas
inc
xorb
pusha
rclb
mov
int
sbb
mov
adc
mov
rolb
sti
mov
cwtl
fnstenv
push
dec
loop
pop
push
and
pop
rolb
loopne
cli
mov
adc
inc
rcrb
mov
xor
mov
pop
mov
inc
jnp
add
or
pusha
inc
js
fs
inc
outsl
inc
sub
adc
sub
lret
insb
jno
loopne
mov
jecxz
rclb
or
cltd
nop
cmc
sbb
andb
mov
dec
fsubl
shlb
movsl
mov
in
aaa
jb
int3
scas
mov
inc
sbb
lret
test
pusha
cmp
add
sbb
jmp
cmp
cltd
mov
push
push
fstps
and
push
mov
je
repnz
push
idivl
aas
ljmp
or
ret
pusha
and
cmpsb
add
cmpl
shr
cmp
rol
cmp
cmpsb
and
mov
in
inc
pusha
jl
cwtl
arpl
lret
cmp
pop
and
add
lods
mov
inc
jne
sbb
and
jbe
rolb
lahf
and
lret
aas
test
daa
sbb
mov
and
pop
and
sbbb
jle
or
outsb
mov
pusha
mov
in
adc
cmc
pop
loope
ja
sub
pusha
jnp
out
xchg
and
mov
pop
add
rol
add
jnp
lock
shlb
pop
lret
out
add
xlat
dec
enter
mov
xor
inc
loopne
and
cmpsb
add
ret
daa
push
xor
popa
dec
push
push
mov
not
xor
push
adc
mov
out
pop
mov
lret
or
mov
cmpb
push
and
loopne
loopne
mov
adc
pusha
and
pusha
ss
addb
xor
shlb
sbb
and
and
push
andb
pop
aam
lock
loopne
rolb
pusha
or
pusha
shl
sbbl
pop
je
and
inc
aam
mov
mov
cwtl
subl
and
test
jmp
orl
cmp
ss
ss
insl
xchg
shrl
mov
rorl
pop
dec
rorb
mov
cmp
and
sbb
imul
jns
aad
int
shrb
and
loop
jl
sbbl
push
ja
and
inc
test
and
dec
mov
mov
adc
into
mov
mov
inc
mov
jns
insb
adcl
popf
daa
add
pusha
or
inc
loopne
clc
add
pusha
or
pusha
or
fdivrp
mov
loopne
inc
repnz
and
inc
cmp
cs
mov
xchg
sbb
push
aas
adc
js
mov
call
ret
sbb
xlat
loop
jg
adc
imul
xor
adc
popa
test
rcr
aaa
daa
enter
mov
loopne
adc
ja
and
mov
sub
sti
fdivrl
fistpl
inc
xchg
inc
add
mov
inc
mov
xor
shl
int
cmp
xchg
sub
in
jb
bound
mov
arpl
dec
xor
sbb
addb
sub
adc
pusha
mov
mov
addb
cmc
andb
or
rcr
inc
loopne
shlb
ja
mov
mov
cmpb
rolb
xor
out
test
loopne
jmp
xor
dec
xor
in
movq
inc
mov
sahf
aaa
adc
add
mov
add
andb
pusha
daa
sbb
or
outsl
js
jle
mov
ret
mov
xor
js
cmp
outsl
iret
and
push
stos
insl
addr16
fcomps
lea
mov
fbld
cmp
and
cltd
in
repnz
es
and
push
shl
and
or
mov
aam
mov
xchg
pop
test
or
fs
fidivrl
das
inc
dec
je
andb
inc
xorb
pusha
cmp
mov
pop
dec
cld
push
shlb
add
jp
jle
add
mov
mov
push
ret
test
loopne
movsl
xchg
hlt
xlat
inc
and
and
nop
mov
fcomi
cltd
fmuls
loopne
mov
insl
stc
cmp
xlat
mov
xor
pop
aaa
xchg
fdivs
sub
fdivrs
sahf
and
out
enter
push
movsb
inc
loopne
pop
fstpt
dec
enter
fcomi
sub
sarb
sahf
jp
xchg
push
fcoms
loopne,pn
leave
cmpsl
test
lods
test
inc
jae
add
or
inc
sbb
push
cltd
mov
mov
or
mov
cmp
loopne
push
je
scas
add
sub
rolb
lock
into
addb
add
add
andb
fcomp
jmp
repz
cs
mov
int
aad
enter
and
add
lds
pop
mov
pop
mov
pop
jns
loopne
mov
movsb
loopne
fwait
mov
dec
fcomi
push
iret
jbe
ja
loopne
ror
mov
pushf
repz
in
xchg
pusha
jmp
jne
fdivr
cmp
inc
lret
or
inc
loopne
data16
add
movsl
lock
ss
jns
sbb
and
enter
mov
test
jo
in
out
cmpsl
push
sub
xor
rdmsr
inc
add
jo
fdivs
mov
fsubl
bound
test
pusha
scas
shll
loopne
clc
fisubrl
outsb
cli
adc
xor
pusha
rcr
xchg
jmp
addr16
rcrl
add
inc
jp
into
pop
dec
hlt
sub
loopne
sub
movsb
mov
or
loopne
jae
sbb
jne
mul
xchg
insb
scas
xchg
cld
andb
cmc
cmp
jp
stos
rolb
dec
loopne
fists
popf
mov
xchg
xor
jae
xchg
insb
or
mov
out
pushf
jno
xchg
repnz
out
pop
add
loopne
leave
and
add
inc
ljmp
roll
add
and
rcrb
pusha
nop
adc
sub
sub
mulb
cmp
mov
jmp
xor
mov
leave
jmp
add
jbe
inc
insb
add
mov
mov
imul
ds
sub
xchg
fcmovu
jno
pusha
and
andb
dec
scas
shl
popa
and
mov
jp
icebp
sbb
sbb
ret
jmp
or
inc
shufps
enter
adc
mov
movsb
inc
adcb
dec
sbb
push
outsb
mov
cmc
mov
cmp
pop
pop
addl
cmpsl
dec
pop
gs
pop
lods
mov
mov
fmul
mov
pop
push
inc
aad
pushf
pop
cmp
sti
mov
and
and
mov
xor
inc
mov
xchg
and
dec
popf
mov
mov
add
pushf
out
xchg
mov
loopne
push
push
jb
fs
aas
bound
add
loopne
pusha
add
mov
in
das
inc
jg
pop
imul
cmpl
inc
das
mov
inc
in
dec
mov
inc
jne
jle
dec
pop
aad
cs
mov
add
sbb
adc
pop
jle
mov
and
cmp
fs
add
and
cld
inc
out
jmp
rcr
sbb
gs
testb
jns
test
mov
inc
incb
fwait
cmp
aam
ljmp
pusha
mov
add
rorb
jp
mov
into
jbe
shlb
aaa
inc
popa
int
xor
mov
pusha
jg
push
jae
imull
sti
sub
mov
mov
push
push
in
inc
ds
test
lea
test
pop
inc
repz
ss
mov
into
out
and
add
int3
addb
pusha
add
pop
ret
int3
cwtl
pop
adc
or
mov
data16
inc
jae
add
lcall
inc
loopne
add
lea
push
cli
addr16
xor
addb
adc
clc
cmc
mov
loop
clc
loope
inc
js
movsl
repz
imul
inc
inc
pop
mov
jb
lahf
mov
xchg
pusha
and
add
ljmp
pop
enter
mov
mov
iret
inc
rclb
or
inc
and
in
or
mov
pusha
and
and
push
enter
sbb
xchg
xchg
sbb
and
shrb
pop
mov
rol
test
mov
or
shl
push
xor
mov
xor
mov
cmpsl
xor
inc
rcr
mov
mov
pop
call
push
xchg
add
pusha
fiadds
jge
ss
std
jg
sbb
xor
je
arpl
addb
and
pusha
sbb
adc
sub
subb
add
out
inc
sbbb
xor
and
gs
adc
mov
sbb
les
push
insb
iret
xchg
cltd
ljmp
loopne
inc
scas
sahf
loop
mov
push
jae
rcr
jbe
inc
or
inc
pop
cmp
insl
addl
push
addb
adc
rolb
xor
andb
and
inc
xchg
shll
or
mov
movsb
shlb
andb
or
incb
std
pop
sti
add
aaa
insb
sbb
sub
loopne
mov
es
and
shlb
add
and
std
and
and
dec
and
push
shlb
xor
or
cld
jns
pop
pop
test
in
sbb
rolb
sub
dec
dec
les
cmpsb
shl
stos
mov
in
into
mov
movsb
pusha
and
adc
and
jb
call
xor
inc
pusha
loop
gs
loop
jns
xchg
adc
ret
mov
and
jecxz
xchg
mov
addr16
xchg
getsec
fistpll
cmp
lret
out
idivb
mov
out
cld
lcall
shl
jno
jl
inc
fsts
movsl
inc
addr16
or
xorb
pop
popf
dec
cmp
loopne
jnp
push
loopne
rclb
cmpsb
and
orl
pop
fcompl
out
add
jnp
add
mov
mov
push
fdivl
mov
ret
lret
mov
and
xchg
jge
and
inc
sub
mov
data16
les
pop
lahf
mov
ret
or
sub
out
jmp
lret
mov
sub
add
jb
sub
addr16
sub
and
mov
inc
cmp
repnz
and
rclb
std
pop
jae
xor
dec
dec
dec
xor
cmp
jnp
fdivs
andb
mov
mov
mov
mov
cmovl
sbb
pop
mov
pop
dec
call
xchg
mov
cmpb
scas
shl
rolb
mov
push
pusha
mov
and
and
jle
andb
lahf
mov
call
daa
add
repz
jge
and
adc
push
loopne
jno
sbb
sub
shlb
ljmp
jg
mov
mov
xchg
add
daa
dec
push
or
sbbl
inc
ds
and
fadd
cmp
stc
lret
inc
push
sbb
ljmp
inc
stc
enter
dec
push
clc
out
jns
add
push
shrl
adc
cs
pusha
inc
ja
rorl
loopne
pushf
fwait
repz
cltd
je
and
jnp
push
adc
in
cwtl
fdiv
in
out
add
xor
xchg
push
push
lret
and
push
in
pop
pop
fs
loopne
out
ljmp
sahf
popa
imull
adc
or
loopne
pop
jl
rolb
je
add
lds
out
pop
inc
dec
cmpsb
and
mov
andb
and
jns
aad
sub
inc
js
cwtl
add
lock
jno
dec
repnz
daa
mov
loopne
jge
cli
pop
xchg
mov
andb
push
xchg
mov
scas
es
and
clc
ljmp
fcmovnu
movsb
mov
rorb
mov
mov
loopne
data16
loopne
movsb
add
add
loopne
rolb
lds
and
cmp
and
pop
testb
test
andl
push
sub
loopne
mov
addb
sbbb
imul
adcb
pusha
and
psrlw
in
jbe
mov
mov
andb
pusha
ret
inc
jnp
fcoml
test
pusha
shlb
roll
add
enter
cmp
pushf
js
mov
and
nop
lret
mov
jg
sub
shlb
ja
js
or
pushf
roll
xchg
xor
loopne
test
and
xchg
push
mov
rclb
mov
rcrb
jge
pop
fcoms
into
xor
pop
mov
inc
inc
in
xor
test
subb
xor
push
add
dec
aas
das
cmp
aas
adc
sub
pusha
bound
sub
andb
add
fsubrs
inc
inc
iret
inc
imul
into
jnp
mov
pusha
and
imul
pusha
pop
push
add
int3
or
sbbb
rclb
test
pusha
mov
add
lret
jne
rolb
push
and
xchg
loope
mov
ret
out
cmpsl
fstpt
mov
push
pop
fadds
jnp
test
pusha
or
add
inc
mov
sub
mov
ret
push
loopne
and
and
fcmovnb
aad
sti
adc
inc
loopne
daa
popa
movsl
xchg
pop
adc
ss
outsb
loopne
sbb
inc
or
xchg
add
loopne
mov
inc
dec
pop
add
inc
mov
cmp
rolb
lcall
js
fstpl
pop
sbb
rolb
ror
jae
cltd
mov
and
jno
fldenv
sbb
mov
sbb
out
and
and
arpl
cmp
rolb
repz
jae
add
add
popf
pop
jmp
cmp
pusha
ret
inc
shl
fadd
cltd
ss
pusha
sub
add
xor
shlb
repnz
xor
inc
and
mov
push
pop
adc
fsubrs
and
or
pushf
sub
sbb
pusha
and
repz
cwtl
sbb
outsl
std
call
iret
inc
sbb
add
adc
clc
faddl
mov
jg
rolb
dec
adc
and
add
in
xchg
cmp
mov
pusha
pusha
mov
addr16
push
push
mov
and
and
lock
add
mov
ja
data16
add
mov
scas
inc
pusha
mov
out
in
push
fxch
es
mov
pop
nop
push
insb
call
cld
push
jl
incl
lds
scas
loopne
cltd
and
fwait
mov
add
das
cli
fldcw
add
jecxz
mov
ret
jp
mov
dec
lods
rolb
je
repz
pop
rclb
jbe
idivb
mov
add
mov
std
scas
loopne
dec
maskmovq
mull
fidivs
aam
lods
movb
add
fstps
and
and
mov
jp
jle
sub
mov
imul
das
repnz
call
orb
add
dec
ret
xor
stos
lret
inc
ret
andb
push
in
lods
dec
mov
icebp
push
sbbl
jl
pop
push
push
loopne
stos
rolb
and
inc
ds
add
xor
lret
dec
or
cmpsl
into
sbb
scas
test
pusha
loop
cmp
loop
push
mov
or
add
jmp
pop
or
mov
stc
sbb
mov
sbb
rclb
jle
sub
xchg
sbb
into
jg
adc
addb
imul
sbb
cmp
cmp
pop
out
outsl
std
jecxz
js
rcrb
loop
mov
addl
addb
jae
xor
pushf
jl
andb
xor
outsl
sahf
sub
and
pusha
inc
mov
mov
mov
sarb
add
fcmovu
addb
push
add
push
add
rolb
add
adc
repnz
xchg
pusha
clc
mov
and
insl
negl
and
mov
add
jg
inc
pop
xlat
push
cmp
lock
out
into
add
stos
inc
loopne
icebp
xchg
cmp
and
sti
test
dec
sub
or
adc
bound
pushl
ljmp
repz
test
mov
add
mov
xchg
and
push
xor
dec
and
pusha
lock
test
loopne
xchg
xchg
pop
cld
dec
ret
adc
cli
ret
andps
shlb
sub
and
and
and
mov
push
inc
in
mov
pushf
mov
fsubl
popa
js
fildll
add
test
mov
addb
cmp
test
xchg
test
enter
loope
jnp
sub
mov
dec
and
sar
sbb
loopne
adc
shrb
mov
insl
mov
imul
fstl
pop
cmp
std
cltd
mov
dec
iret
and
loopne
add
push
push
ret
ljmp
enter
inc
dec
and
andl
ret
adcl
fdivl
sub
pop
mov
shrb
sbb
shl
jp
mov
pushf
aad
insl
lcall
inc
and
fwait
and
cli
fwait
insb
add
xchg
fiaddl
adc
lods
cmp
pusha
and
mov
xor
test
mov
add
lret
in
xchg
addr16
pop
jmp
shll
inc
loopne
and
pusha
fxch
ljmp
loopne
push
out
sti
push
sahf
repnz
and
dec
mov
test
xchg
clc
and
ja
inc
pusha
push
push
in
icebp
add
js
jb
loopne
pusha
push
mov
insl
leave
push
rcrl
pusha
shlb
push
loope
aam
jle
fwait
int
push
rol
inc
jg
les
addr16
out
inc
mov
dec
jo
or
inc
and
mov
das
popa
insl
push
and
or
xor
cmp
rcrb
addb
pop
icebp
pushf
push
popa
inc
negl
mov
sub
xchg
adc
inc
loopne
lods
add
divl
cmpsb
inc
pusha
pop
adc
xchg
hlt
mov
sub
mov
pop
mov
ret
mov
mov
ja
jnp
mov
jge
adc
mov
add
mov
stos
iret
jp
fmuls
iret
or
out
hlt
inc
push
fwait
pop
mov
add
lea
and
rolb
and
mov
dec
mov
movsb
pusha
and
rol
cmp
mov
pusha
xchg
and
rolb
push
sub
sahf
mov
lds
dec
push
incb
pop
cli
sbb
shl
pusha
add
ret
add
dec
inc
pop
mov
in
pop
and
and
aas
in
xchg
cltd
sub
out
inc
inc
jge
cmp
jl
adc
adc
dec
into
add
pushf
sub
lods
js
adc
ret
das
cmpsb
and
jmp
cmp
or
xchg
pop
jl
mov
in
or
pushf
add
mov
inc
push
xchg
xchg
push
push
and
add
enter
xor
sub
test
jnp
jbe
aaa
mov
test
cli
mov
leave
sbb
loopne
and
xor
push
popa
mov
xor
jge
lcall
adc
sbb
mov
xchg
in
fwait
enter
fstpt
call
pop
stc
push
adc
jne
xchg
or
sbb
mov
adc
test
and
loopne
loopne
clc
inc
sub
inc
aad
test
popl
mov
cmpsb
and
cmp
jle
xor
inc
mov
scas
and
adc
and
mov
das
cltd
xor
and
notb
mov
push
out
outsl
cmp
mov
loopne
pop
jge
jae
mov
mov
jmp
push
adc
addb
pop
jnp
and
rorb
lods
and
and
enter
jg
xchg
inc
fwait
pop
lods
and
mov
add
jbe
loopne
jmp
add
aad
inc
cld
imul
cs
pusha
xorl
int3
das
sbb
cmovae
and
aam
xor
mov
xchg
roll
addr16
jecxz
fs
mov
cmp
out
push
movsb
and
mov
lds
mov
outsl
xchg
mov
int
push
sahf
fisubrs
ss
sbb
in
sbb
nop
psubq
mov
mov
xchg
push
rolb
dec
addb
sub
popf
int
xchg
or
inc
pusha
ret
pushf
imul
lret
mov
fnsave
add
fisubl
sub
inc
in
ret
mov
adc
loopne
out
out
jb
and
add
cmp
and
inc
lods
or
lds
out
jns
dec
arpl
call
loope
shlb
adc
rol
mov
ds
ss
dec
shlb
pushf
and
inc
adc
xlat
mov
jp
rolb
outsb
lods
push
pop
shll
mov
dec
repz
add
andb
and
cmp
push
sbb
loop
add
jp
and
cmp
aad
out
test
or
inc
dec
lret
pop
andb
addb
jnp
jg
xor
dec
into
pop
loop
cmp
pop
ja
or
add
or
pusha
icebp
push
jmp
push
xchg
jl
loopne
cli
sti
dec
xchg
pusha
add
loopne
push
pop
inc
dec
push
js
inc
adc
fwait
movsb
inc
rolb
shlb
cmp
sbbl
adc
lahf
inc
or
lods
shlb
stos
sub
inc
mov
fistpll
int3
cmc
sbb
and
loopne
push
pop
inc
imul
and
mov
dec
je
fists
sbb
cwtl
shll
les
and
test
sahf
incl
pusha
mov
sarl
mull
lods
loopne
lret
rcrb
popf
aad
and
and
add
push
adc
xchg
mov
testl
push
rolb
imul
mov
sbb
pop
inc
jno
iret
out
xor
xchg
pop
and
cmpb
sbb
cmp
mov
mov
jo
mov
mov
add
adc
sub
inc
inc
xchg
and
and
rolb
lods
fldt
loopne
adc
rcr
or
inc
jno
adc
inc
mov
in
out
pusha
or
data16
mov
sub
mov
sub
loopne
mov
shlb
sub
jbe
inc
pusha
fbld
subl
add
loope
add
cmp
cltd
mov
daa
enter
sub
add
je
and
and
pusha
mov
adc
loopne
sub
mov
out
mov
pop
push
push
loope
xchg
popf
xchg
shl
dec
sub
inc
pop
jl
scas
inc
sarl
lcall
out
sbb
mov
movsl
jecxz
pop
and
pusha
out
movl
popa
mov
jno
mov
xchg
cwtl
ljmp
and
fmulp
and
mov
sbb
push
and
insb
mov
pusha
push
add
sbb
jecxz
push
sbb
mov
xchg
leave
clc
dec
dec
sbb
or
je
scas
adc
and
cwtl
mov
out
in
xor
push
or
lds
and
loopne
cwtl
mov
sub
pusha
loopne
out
in
sub
loopne
xlat
inc
or
and
xchg
jns
test
inc
dec
push
cmp
push
nop
pop
in
push
mov
add
shlb
popa
in
pop
cmp
xor
ficomps
aaa
mov
and
in
inc
fwait
xchg
xchg
mov
mov
mov
xchg
xor
ljmp
fsts
pop
das
push
push
add
mov
mov
clc
cmp
mov
fsubl
adc
lahf
sub
adcl
inc
and
rolb
add
stos
mov
pop
ss
das
push
or
and
mov
add
in
fisubrl
arpl
inc
stos
loopne
inc
fcomi
scas
and
mov
nop
loopne
mov
cmpsb
inc
pusha
xchg
andb
cmp
xor
xchg
leave
pop
pusha
inc
in
sbbl
sarb
and
add
int3
pop
rorl
sbb
out
and
pop
or
add
in
xor
or
gs
andb
jb
add
mov
mov
loop
lahf
or
rcrb
jbe
not
mov
lods
mov
inc
mov
pusha
inc
jns
test
inc
sub
adcb
sbb
ret
fwait
xchg
cmpb
inc
ficoms
pop
xchg
jge
insl
out
aad
dec
cli
or
orl
pop
outsl
icebp
leave
push
outsl
pop
loopne
cmpsb
pusha
add
add
pusha
rcrb
inc
pusha
and
mov
add
inc
mov
cld
jae
leave
pop
mov
std
int3
jl
movsl
jnp
cwtl
enter
decb
stos
shlb
sbb
xchg
je
pop
out
and
jmp
jmp
add
adc
addr16
and
clc
pushf
fstp
pop
popf
std
imul
ret
inc
sahf
mov
jnp
shll
mov
aas
mov
mov
fidivrl
xchg
scas
inc
inc
cmp
ljmp
scas
xor
mov
mov
dec
pusha
mov
pop
jne
and
inc
test
mov
mov
xor
mov
jecxz
sub
out
inc
loopne
in
mov
pop
jl
dec
dec
pop
cmovae
add
shlb
mov
loopne
xchg
rolb
mov
and
adc
inc
cs
add
and
lret
xchg
mov
sbbb
pop
mov
stos
dec
js
rolb
and
mov
push
loopne
outsb
mov
ss
xor
and
loopne,pn
pop
xor
cli
std
fsubrs
mov
sub
scas
cwtl
mov
loopne
inc
inc
stos
cmp
and
sbb
adc
mov
in
je
dec
lods
addb
repz
mov
or
and
mov
andb
sbb
addb
pusha
add
stc
jl
data16
and
mov
or
jle
loopne
mov
xor
add
inc
add
in
fildll
sub
ret
pusha
and
and
push
ljmp
aam
addb
cmp
inc
fmull
fcomp
mov
incb
pop
ljmp
jae
sbb
lahf
push
cltd
andb
mov
loope
int3
dec
sub
inc
clc
mov
dec
xlat
mov
rcrb
add
addb
popf
mov
hlt
movsb
loopne
and
push
call
out
movsl
inc
je
push
fstl
mov
ret
sub
and
mov
sbb
inc
outsb
dec
jnp
ljmp
push
shll
ffree
addr16
fwait
or
pusha
addb
pushf
inc
lea
and
mov
lret
movsl
repnz
lods
loopne
xchg
inc
xchg
shll
add
arpl
test
sub
or
addb
aaa
cltd
add
mov
iret
push
dec
test
adc
repz
and
insb
lret
xor
push
aas
sbb
cmp
loopne
imul
and
into
test
outsb
xchg
xor
in
dec
push
rol
outsb
out
pusha
inc
loope
and
xorb
xchg
repz
inc
mov
orb
repnz
mov
fnstenv
or
xorb
pop
out
cmp
pusha
and
and
push
and
and
pusha
loopne
aad
cltd
mov
daa
mov
add
cld
repnz
roll
inc
pushf
inc
insb
cmpsl
cmp
xor
pusha
add
add
orb
push
mov
ret
xchg
repz
cli
lods
and
xor
insb
push
sub
and
sbb
imul
inc
xor
mov
andb
sbb
or
mov
jne
loope
cltd
sub
mov
lret
popa
hlt
mov
xchg
sbbb
stc
out
or
and
sti
or
and
pusha
sarb
or
pusha
push
pusha
and
out
or
inc
out
xchg
sub
repnz
enter
add
sub
loopne
sub
dec
jecxz
test
adcb
rol
fcompl
ror
mov
loop
and
mov
repz
pop
jmp
mov
or
mov
and
mov
rorb
mov
andb
bswap
mov
jo
push
mov
in
mov
les
hlt
sub
and
sub
or
add
nop
pop
push
rolb
pusha
test
imul
push
pushf
andb
pop
je
ljmp
push
and
pusha
mov
and
repnz
addb
mov
movsl
dec
cld
gs
iret
and
loopne
filds
hlt
and
mov
shlb
loopne
xchg
pop
addr16
popl
cltd
jp
addb
mov
sub
add
out
andb
push
xchg
mov
xorb
and
sar
notl
add
enter
cs
pusha
and
mov
arpl
sti
dec
push
les
inc
cmp
push
mov
xacquire
and
pusha
mov
and
jns
sbb
in
iret
xchg
lcall
sbb
imul
push
mov
in
xor
mov
rcrb
mov
cmp
andb
add
pusha
jecxz
dec
lods
add
add
loopne
cli
cmp
dec
iret
pop
test
andb
and
sub
sarb
movsl
imul
sub
shll
add
pusha
call
xor
neg
mov
test
xor
sub
mov
in
xchg
xchg
hlt
xor
enter
inc
push
push
nop
mov
sbb
mov
mov
pop
dec
fdivrs
xchg
mov
jne
loopne
out
repz
jge
je
pop
mov
addb
cld
jne
pusha
sarb
in
jg
in
faddl
inc
dec
xchg
out
out
adc
test
xchg
ljmp
xchg
lcall
mov
jmp
pop
dec
add
inc
xor
pusha
adc
test
in
pushf
aad
inc
push
cltd
ret
dec
xor
inc
and
je
insl
call
pusha
loopne
rolb
pop
xorl
cmp
les
sbb
push
int3
add
rol
cmpsb
loopne
pop
pushf
cmc
and
addb
mov
add
inc
mov
mov
xor
inc
jge
xchg
mov
and
loopne
daa
xlat
add
xchg
stos
inc
pusha
mov
xor
pusha
imul
sub
sarb
rorb
and
test
xchg
add
add
sbb
and
mov
pop
mov
lcall
in
hlt
scas
inc
adc
pop
jp
aas
lcall
mov
call
ret
pop
or
lock
js
sub
mov
pusha
add
adc
xlat
lock
movsl
data16
and
bound
nop
fcomp
xor
adc
lock
addr16
add
adc
push
pop
bnd
lods
pop
mov
and
pop
xorps
lods
addb
testb
add
nop
mulb
data16
aam
cld
pop
mov
test
insb
push
in
pusha
pusha
lods
shl
push
sub
cmp
insl
or
mov
ror
loop
push
rolb
lret
xchg
inc
mov
shll
rcr
jmp
push
jp
call
inc
jbe
and
lcall
mov
cmp
and
pusha
and
adc
inc
sub
loopne
addb
xlat
test
inc
sbb
pop
push
cli
pop
rol
test
inc
js
inc
dec
aad
inc
or
and
pop
or
mov
inc
out
std
scas
leave
add
sub
scas
loopne
cmpsb
addb
int3
mov
sub
fld
std
or
mov
mov
jg
or
pop
sub
imul
in
pop
adc
and
shrl
push
and
das
sbb
sub
pop
inc
insb
loop
in
cmpsb
shlb
dec
push
mov
fwait
and
inc
imul
inc
out
fwait
jge
xlat
xor
iret
pop
nop
ja
mov
popa
add
dec
loope
and
mov
popf
jno
pop
das
cli
push
pusha
sub
call
stos
lcall
inc
loop
cmp
add
push
leave
insl
mov
fs
out
out
dec
in
xchg
leave
stos
inc
loopne
js
lret
pusha
sbbb
lock
pusha
stos
mov
icebp
xchg
rolb
inc
cmp
pop
cmpsl
xchg
mov
dec
xorl
jp
inc
or
cmc
mov
sbb
mov
imulb
pusha
pusha
shrb
add
inc
xchg
jb
mov
add
shl
test
mov
andb
mov
adc
enter
and
data16
ds
addb
add
shl
pushl
aas
cmp
xchg
push
push
ja
in
mov
mov
movl
mov
addb
out
adc
adc
loopne
inc
or
and
mov
mov
cmp
inc
test
mov
jnp
or
aas
inc
xor
jge
stc
push
inc
sarb
mov
ljmp
fnstcw
rol
loopne
mov
addr16
sub
mov
mov
sarb
xor
inc
adcb
jo
push
xor
inc
mov
inc
rolb
or
inc
and
inc
cwtl
pop
push
mov
adc
xchg
popf
cmp
aaa
les
mov
sti
inc
cmp
ljmp
and
add
pop
bound
in
insl
mov
and
push
jae
push
mov
stos
add
inc
jns
pop
xchg
pushf
fnstenv
loopne
leave
lret
cld
xor
sbb
in
imul
mov
addb
adc
loopne
mov
out
mov
mov
fidivrs
sbbb
outsb
and
in
lret
test
and
inc
mov
cmp
fisubs
add
pop
icebp
jbe
mov
js
fsubs
mov
lcall
inc
push
and
sbb
and
addb
mov
sub
push
mov
sub
mov
sahf
popf
insl
lods
and
xchg
imul
rcr
push
add
sub
test
jns
pop
mov
cwtl
jmp
or
mov
clc
scas
add
mov
push
pusha
and
jecxz
mov
jmp
cmp
mov
leave
flds
mov
fldt
sahf
outsl
jns
pop
mov
add
rcl
mov
loopne
icebp
add
dec
cltd
scas
into
cltd
jno
addb
mov
and
rcr
bound
pusha
jle
andb
dec
push
loope
push
mov
pusha
inc
push
andb
push
pusha
mov
mov
mov
mov
sub
and
int
pop
or
loopne
or
xchg
lods
rolb
pop
dec
in
loopne
loopne
lret
inc
jns
lods
fs
icebp
pop
sahf
adc
xlat
ret
and
dec
mov
loopne
or
rolb
xor
pop
in
test
inc
fnstsw
pop
sub
xchg
dec
leave
fstps
lods
jbe
mov
aad
pop
and
xorb
cmp
push
out
cmp
outsb
scas
add
popa
and
daa
push
pusha
and
mov
add
mov
jb
test
loopne
notb
cmp
jb
and
or
pusha
pusha
or
lods
xchg
cmc
ljmp
imul
sbb
sub
xor
fwait
and
lock
sarb
push
sub
mov
jle
dec
dec
xor
mov
ja
cwtl
pop
jns
cmp
jno
xorl
add
outsb
popa
stc
out
xchg
cmpsl
pop
cmpsl
dec
add
xor
dec
les
xchg
ja
and
loopne
xchg
mov
pop
cmpsl
xor
add
add
cmp
xchg
ret
mov
inc
loop
gs
add
aam
idiv
nop
pop
shll
das
in
neg
jae
mov
push
test
sbbb
pusha
add
lds
jns
arpl
lods
clc
pop
mov
es
pusha
loop
rcrl
pop
inc
add
dec
dec
mov
cmp
mov
loopne
push
inc
and
adc
pop
add
cmp
andb
aas
lock
push
and
loopne
dec
stos
in
push
push
icebp
cltd
pop
mov
test
loopne
fst
xchg
arpl
jg
jo
or
loopne
pusha
orb
and
loopne
mov
insb
outsl
cmp
dec
add
cmp
sub
aad
adc
add
js
sbb
jg
xchg
inc
imul
arpl
popa
xor
loop
mov
aad
cli
insl
js
iret
mov
and
and
mov
mov
mov
xor
inc
dec
in
loopne
loopne
aam
mull
stc
xor
out
lahf
imul
cld
jmp
out
pop
je
inc
shlb
mov
test
mov
repnz
add
cld
shrl
sub
push
cltd
ror
jl
xor
push
xchg
xchg
adc
push
add
and
pop
test
and
cmc
xor
outsl
mov
pusha
test
pusha
xchg
stos
add
loopne
orl
pusha
xor
fstps
xor
inc
addb
sub
outsb
jg
add
in
pop
and
and
mov
outsb
push
sbb
outsb
or
inc
pusha
push
mov
push
das
mov
shlb
adc
mov
cmpb
inc
dec
add
sarl
pop
and
inc
movsb
mov
mov
das
fistpll
adc
or
add
rcr
fadds
pusha
inc
ja
pusha
imul
mov
stos
jb
out
mov
jle
jno
loopne
mov
mov
xchg
xor
rcrl
imul
cmpb
mov
les
shlb
mov
pusha
xchg
jb
insb
in
cmp
and
push
repnz
in
andb
repz
shlb
into
and
add
les
and
shrb
lods
add
and
ds
adc
std
insl
xchg
jo
sub
lcall
mov
add
loopne
pusha
add
mov
and
mov
add
and
ja
pusha
pusha
add
out
dec
mov
dec
ret
sbb
imul
mov
cmp
lret
jmp
imul
adc
adc
cmp
loop
insb
enter
jmp
out
mov
jo
loopne
lahf
sbb
sarl
enter
push
push
mov
xor
cs
fwait
les
sub
rolb
dec
push
push
xchg
daa
mov
xchg
xor
lret
loopne
rorl
cmp
dec
mov
addr16
adcl
fstpl
loop
faddl
aad
mov
subl
dec
jmp
outsb
pop
inc
adc
or
push
push
add
orb
jnp
ljmp
out
pop
xlat
js
test
sbb
aam
adc
sbb
jl
lods
shlb
adc
jg
pusha
add
lock
dec
mov
test
add
xor
dec
fdivr
jno
sbb
negb
mov
and
jecxz
mov
sti
aaa
addr16
push
jno
negb
and
inc
xchg
mov
fnstenvs
cmp
xor
stos
mov
shrb
addr16
add
add
fwait
dec
mov
mov
mov
loopne
sub
inc
adc
adcb
das
dec
add
rcrb
fdivrs
shlb
adc
outsb
and
xor
std
or
xor
ficompl
xor
cmc
andb
push
and
popa
jae
add
loopne
popa
push
rolb
mov
cmc
sar
aam
pop
sbb
mov
cmp
cli
es
inc
or
loopne
adc
and
mov
pusha
jnp
lcall
rolb
pop
xchg
mov
pusha
pusha
or
xchg
pop
arpl
sbb
rcr
scas
inc
pusha
lahf
ja
mov
pop
push
fisttps
fisubrs
or
inc
mov
dec
jae
scas
mov
jbe
pop
xor
popf
sbb
add
push
scas
mov
aam
lret
inc
mov
sbb
enter
mov
inc
and
inc
push
xchg
test
pop
add
adc
push
addb
bound
call
sti
cmc
xchg
xchg
mov
xlat
mov
pusha
pusha
sbb
inc
movsl
mov
stos
push
inc
add
shlb
shlb
fidivrs
jmp
mov
sbbl
xchg
push
sbb
and
rolb
cmp
xchg
sbb
outsb
fldenv
out
mov
pop
dec
pop
push
loope
mov
mov
mov
roll
add
les
mov
imul
test
leave
lea
inc
and
xchg
add
and
test
inc
rclb
cwtl
sbb
and
mov
inc
adc
push
jmp
iret
cmc
dec
ja
sub
inc
sub
clc
jp
mov
mulb
fcmovnb
loopne
xchg
mov
push
les
mov
dec
inc
pop
fmuls
pusha
mov
xor
repnz
stos
pusha
andb
add
push
addb
loopne
jb
push
aad
and
loopne
int3
sbb
ljmp
mov
add
mov
cmp
or
mov
add
psubw
push
lods
inc
loopne
push
in
jno
pop
hlt
mov
jle
pop
cmp
mov
into
cmpsl
xchg
popf
xchg
sar
out
ss
mov
int3
cmp
inc
mov
add
iret
mov
pop
sbb
stos
loopne
dec
cltd
xor
insb
data16
pusha
orb
addb
sbb
pusha
jne
shr
int
mov
push
mov
lcall
sahf
push
scas
mov
or
mov
mov
repz
imul
notl
filds
and
sub
adc
adc
pop
push
pop
sti
pusha
xchg
lock
outsb
adc
cmp
dec
cltd
arpl
fistpll
push
add
test
icebp
stos
xlat
pop
dec
xor
inc
jnp
pop
sbb
push
test
cwtl
aam
sub
and
inc
adc
sbb
cmp
adc
pop
leave
mov
shlb
int
cmpsl
call
rclb
xor
scas
and
subb
add
ret
andb
in
mov
push
cld
jp
mov
clc
testl
jns
int
cmc
in
imul
adc
loop
jmp
pop
inc
int3
lret
lods
add
ss
mov
push
test
or
cmp
dec
cmpsb
shlb
xchg
inc
mov
push
test
rcrl
arpl
add
cmp
fldl
lret
out
hlt
movsb
add
pop
leave
adc
sub
jno
shl
inc
sub
add
mov
add
ljmp
in
insl
clc
jo
jmp
and
fsubrp
mov
mov
add
jecxz
shr
push
push
xor
mov
pop
rcrl
lcall
fldcw
add
xchg
mov
shl
mov
or
adc
inc
movsl
and
int3
js
loopne
pop
int3
bnd
lea
flds
sbbl
dec
arpl
test
and
add
loopne
or
xor
in
jecxz
push
push
mov
loopne
ficompl
leave
xor
aam
inc
adc
inc
bound
mov
lahf
js
movzwl
add
aaa
loop
dec
sub
mov
mov
xor
cmp
cmp
ror
sarb
pushf
jmp
add
adc
lods
pusha
inc
mov
stc
pop
push
lret
f2xm1
test
and
sbb
adc
ds
sti
push
pusha
loopne
rolb
nop
and
rcl
jne
dec
and
sarb
out
inc
aas
pop
push
push
mov
js
jne
jne
xchg
and
jb
repnz
loopne
test
outsb
leave
or
push
pop
jae
movq
xchg
pop
xchg
cmpsl
pop
xchg
sbb
addb
add
loopne
adc
pop
jp
test
loopne
stc
adc
add
arpl
or
inc
and
loopne
loope
mov
andb
lret
call
nop
fs
shlb
mov
andb
roll
add
jl
jns
les
inc
mov
cwtl
addb
jbe
add
mov
pop
dec
mov
adc
push
rolb
mul
push
dec
sub
call
movsl
std
add
into
lock
cmp
push
mov
addb
inc
add
sub
rolb
add
inc
lcall
lock
loopne
cmpl
lcall
sub
xorb
mov
loopne
mov
stos
pusha
add
mov
add
inc
add
fwait
mov
loopne
leave
push
add
adc
mov
sbb
xlat
xlat
mov
sub
push
cli
xor
movsb
pusha
mov
shrl
mov
sub
rorb
shlb
mov
mov
adc
inc
cld
and
and
shr
sarb
pop
mov
popf
pop
push
lcall
inc
add
mov
xlat
mov
pusha
sbb
gs
and
cld
adc
jg
mov
pushf
inc
sub
jns
sub
pusha
and
inc
ficoml
test
addb
dec
or
add
loopne
je
inc
push
push
adc
xchg
hlt
sub
pop
xchg
mov
notl
outsl
out
in
js
fsubl
dec
or
pop
test
shrb
dec
stos
inc
add
arpl
call
and
loopne
scas
lahf
adc
and
es
loopne
mov
int3
sub
jecxz
mov
xchg
mov
sub
pusha
test
add
jmp
lcall
inc
adcb
lea
sbb
sbb
bound
cltd
jl
pusha
and
and
lret
or
shlb
repz
xor
leave
push
add
popf
iret
js
repz
je
gs
add
add
push
and
shlb
push
mov
lret
pop
push
push
insl
inc
cs
and
ljmp
out
shl
push
xchg
pop
ss
loopne
adc
jo
cmp
push
jge
lea
scas
adc
jmp
nop
lock
lds
inc
xor
sub
xor
cli
insl
rorl
daa
les
std
pop
test
out
push
inc
add
js
shlb
mov
push
and
add
icebp
outsl
loop
push
mov
int
cmp
pop
sarl
lock
popa
mov
push
sbb
sbb
das
sub
push
mov
push
jns
arpl
inc
loop
mov
imul
pusha
inc
mov
loopne
xchg
sbb
shrb
mov
ret
cli
mov
shrb
cmpsl
lds
mov
mov
rorb
and
test
sbb
xchg
loopne
lods
mov
jg
jns
je
mov
imul
sahf
in
fsts
mov
loopne
ret
mov
lret
push
pop
sbb
sub
mov
mov
add
sub
mov
bnd
test
dec
mov
or
scas
pusha
pusha
add
mov
roll
inc
movsb
addb
cmpsl
stc
mov
sbb
sbb
lret
cwtl
inc
iret
pop
xchg
mov
pusha
pusha
add
adcb
jb
xor
add
sbb
decl
loopne
xchg
xchg
repz
dec
in
cmpsb
pusha
and
jb
lea
inc
sar
test
mov
clc
push
fistl
or
shlb
jno
rcll
xchg
push
add
shlb
test
ds
outsl
test
mov
cmp
ret
inc
cltd
adc
leave
or
lret
fisttps
fsubrp
in
movsb
inc
inc
push
xor
or
clc
mov
push
and
aas
dec
stc
fs
fildll
mov
mov
jae
aaa
or
push
loop
ja
mov
adc
sub
pusha
inc
loopne
and
stos
rolb
out
rclb
shl
cmp
std
cmp
or
mov
rolb
mov
insb
pushf
gs
mov
mov
inc
lea
sub
push
pushf
sub
mov
pusha
and
mov
cltd
dec
mov
push
not
enter
daa
sub
test
xor
andb
mov
loopne
outsb
repnz
loop
cmpsb
mov
subb
pop
xor
cmp
pop
inc
xor
loopne,pn
das
inc
loop
shlb
push
fidivrl
jg
sbb
imul
daa
icebp
cltd
pop
fcoms
mov
loopne
lcall
pop
mov
andb
add
push
lds
mov
rolb
push
cmp
xor
popa
js
addb
jne
hlt
or
mov
into
xor
adc
lds
xor
andb
hlt
loope
cld
mov
movsl
stc
aas
iret
ss
or
xchg
ss
inc
movsl
add
mov
push
add
jmp
pusha
cmpsl
cltd
add
sub
insb
sarl
in
stos
jge
loope
movsl
cli
push
sbb
addb
loopne
dec
cltd
into
mov
sahf
sub
push
mov
shl
bound
js
test
and
pusha
lea
jl
andb
scas
cld
inc
xchg
faddl
pop
clc
ss
sub
loopne
hlt
dec
adc
shrl
add
addb
arpl
inc
test
add
lods
loopne
jbe
mov
cmp
lock
ret
ret
es
and
mov
dec
pushf
dec
jae
and
mov
cltd
mov
jle
cwtl
int3
addb
scas
xor
rcr
xor
inc
outsb
ja
cmp
mov
out
movsb
shlb
inc
xor
leave
xor
fs
dec
sub
and
shrb
sbb
jns
mov
adc
xchg
jge
lods
and
nopl
lods
xchg
pop
mov
mov
push
xor
mov
add
add
