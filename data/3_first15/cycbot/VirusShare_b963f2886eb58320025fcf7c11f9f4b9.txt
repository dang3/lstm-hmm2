add
pop
add
add
add
outsl
add
add
add
pop
add
add
loop
add
lods
out
add
add
pop
add
rolb
add
dec
inc
aaa
xor
or
add
add
jne
jg
rorb
add
or
push
add
roll
add
xchg
fcomi
lcall
rorl
mov
nop
ss
ds
add
scas
add
mov
add
lea
cmpsl
add
jle
add
sbb
add
add
addl
inc
add
add
cmp
sti
add
add
out
xchg
popl
xor
inc
add
sldt
add
add
add
inc
aad
add
add
pop
or
xor
xchg
add
add
add
pop
loopne
popl
and
out
push
repz
xchg
pop
add
pop
push
add
mov
add
addr16
fiaddl
add
add
add
les
mov
xor
mov
outsl
add
add
mov
xchg
adc
add
les
add
test
in
add
ret
add
bound
add
add
add
xchg
repz
sub
sbb
add
sub
add
xor
outsb
xchg
add
xor
sbb
mov
add
add
cltd
and
inc
add
ljmp
mov
adc
inc
stc
add
dec
push
and
add
add
add
call
out
xchg
lods
and
add
push
mov
ss
mov
add
jnp
add
add
add
add
mov
xchg
jle
cld
add
lcall
mov
stos
and
and
mov
xor
dec
add
add
add
dec
add
adc
fldl
jno
add
add
add
fdiv
cltd
mov
jmp
add
add
out
mov
or
imul
in
add
add
add
add
add
out
add
faddl
adc
pop
icebp
shlb
add
out
mov
jne
add
outsl
add
das
add
das
sbb
add
add
add
out
add
push
add
dec
scas
jecxz
sub
add
sbb
add
test
icebp
push
mov
add
add
add
add
xchg
imul
add
add
insl
aam
add
outsl
lcall
cmp
add
jnp
mov
add
outsb
add
pop
int
pusha
lds
sub
xchg
add
add
pop
add
pop
xor
add
cld
mov
add
add
inc
sahf
xchg
fdivs
flds
add
add
add
add
add
adc
add
pop
notl
add
add
add
add
jno
add
add
add
adc
add
add
add
jb
sbb
mov
add
mov
push
add
add
lds
or
lcall
add
push
bound
inc
add
jns
lods
push
cmp
push
add
aam
scas
add
imul
xor
sti
add
add
push
or
imul
add
add
mov
add
add
sub
mov
add
add
add
add
test
add
movsb
popf
add
in
cli
add
add
add
add
add
add
sbb
pop
add
add
add
add
pop
add
add
add
aam
outsl
add
add
add
add
add
dec
push
cld
push
out
add
das
add
add
add
add
add
lcall
add
mov
add
fisttpl
add
add
jnp
add
mov
or
fldl
daa
sbb
mov
inc
insl
add
sub
pop
add
add
add
add
add
test
pop
add
add
xor
xor
push
out
add
dec
add
add
mov
add
add
or
push
add
add
add
add
add
add
add
int
add
add
add
add
add
add
add
in
lret
add
fiadds
add
jge
incl
add
add
add
aam
add
ficomps
pop
movl
add
cli
add
aaa
add
hlt
push
add
xor
aad
add
mov
mov
add
add
xor
add
sahf
add
add
movsb
and
add
add
add
insl
add
add
dec
movsb
add
jle
add
add
fdivrs
add
add
push
add
add
insl
add
add
add
add
cmp
add
add
add
add
int
js
add
xlat
fnstenv
add
add
add
add
mov
xchg
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
nop
add
mov
add
add
add
enter
add
or
xlat
add
add
add
add
add
add
add
and
add
add
add
add
add
add
loopne
add
add
addb
add
addl
add
add
test
inc
add
orl
add
add
pusha
add
pop
aam
add
add
add
add
add
add
add
adc
add
bound
mov
add
add
add
add
clc
test
fstpt
add
mov
add
add
out
sub
sub
add
add
sbb
add
fisubs
add
add
add
clc
adc
add
add
add
add
add
flds
inc
add
add
sub
mov
add
shr
add
add
mov
sub
add
aaa
and
add
ds
add
div
add
pop
add
add
add
add
add
enter
add
add
add
jecxz
add
addl
add
add
adcl
pop
add
add
dec
add
and
add
add
add
add
add
inc
mov
add
add
add
loop
in
add
outsb
add
js
add
add
add
add
add
mov
lds
mov
add
add
add
add
add
add
sbb
add
inc
xor
add
add
add
add
push
add
add
add
add
add
loope
in
mov
add
add
add
add
roll
mov
push
aam
sub
add
out
incl
push
add
add
adc
sahf
movsb
add
fiadds
add
mov
inc
enter
add
lret
jbe
jns
add
lahf
mov
test
add
add
faddl
add
xor
pop
add
adc
add
inc
int3
jae
add
arpl
in
mov
add
add
stos
add
add
jg
add
add
sbb
add
xor
add
pop
add
add
add
add
add
mov
add
add
add
mov
inc
xchg
rolb
lods
jg
add
mov
add
mov
test
lret
add
add
push
jno
add
out
fadds
add
ljmp
incl
dec
jbe
negl
xor
adc
xor
mov
push
add
mov
add
fadds
add
add
add
mov
add
mov
dec
add
add
add
add
push
add
add
mov
add
add
inc
std
add
or
in
add
add
add
add
add
xlat
add
add
add
add
add
add
add
pop
nop
add
or
add
add
add
add
mov
add
add
adc
js
or
add
ret
add
inc
add
add
mov
bound
add
add
add
add
add
push
adc
add
adc
add
add
jno
add
add
jecxz
cmp
lods
cli
add
add
add
out
or
cmp
add
inc
add
cmp
add
add
out
add
nop
adc
add
flds
sub
mov
and
xor
fadds
add
dec
adc
add
sbb
add
add
add
movsb
add
add
push
add
add
jae
pop
add
add
dec
add
add
mov
add
add
add
add
add
aam
add
add
add
add
filds
jb
repnz
dec
add
lret
add
addb
incl
popf
add
jecxz
sub
in
add
add
jb
add
cmp
add
push
in
mov
shrb
daa
cmp
add
jmp
add
add
xor
xchg
add
add
adcb
add
inc
add
adc
add
imul
add
xor
add
add
out
enter
add
add
cmp
jle
add
xchg
cmp
add
add
add
mov
mov
add
testb
xchg
add
add
add
add
fldenv
add
add
or
add
jno
add
add
pop
add
push
clc
lock
add
add
cmp
push
add
add
in
mov
popa
add
cwtl
icebp
adc
test
xchg
sbb
add
add
add
mov
add
add
add
mov
add
nop
add
add
add
cmp
adc
in
add
add
inc
and
add
add
add
add
add
add
xchg
add
add
sub
xchg
add
add
pusha
add
sub
add
sbbl
addl
lea
add
add
add
dec
add
add
add
add
add
sarl
add
add
add
cmp
add
add
push
xchg
mov
add
sub
add
add
dec
add
add
add
add
add
add
icebp
add
add
fstpt
add
mov
add
push
add
add
addb
add
add
lcall
add
addb
add
add
pop
out
add
add
mov
add
xchg
add
pop
add
int3
add
add
sbb
jle
dec
add
mov
in
addl
jecxz
inc
sbb
add
add
loopne
arpl
int
push
shrb
add
sti
outsb
ds
add
add
add
add
add
add
add
dec
cmp
add
cli
add
clc
inc
add
jge
add
daa
bound
test
add
add
add
add
add
add
je
add
out
adc
lds
add
add
xor
push
xor
add
add
inc
add
add
add
xlat
movsl
add
sub
add
fnstenv
add
add
add
and
cmpsb
push
add
add
add
add
fwait
add
add
cli
add
add
add
add
mov
add
add
add
xchg
inc
jg
leave
add
fisubrs
add
add
mov
add
add
cmp
xchg
pop
mov
add
aas
and
add
cwtl
add
cs
add
imul
xchg
cmpsl
insb
aaa
add
fists
add
jle
enter
add
add
mov
add
add
add
add
add
aam
add
pop
add
add
add
add
add
add
or
or
jo
add
add
add
push
or
mov
in
add
sbb
or
fsubl
add
imul
bound
add
add
fldl
add
add
xchg
mov
rolb
scas
add
add
jle
jg
add
jle
lds
ret
add
sbb
add
add
add
cmp
add
add
xchg
add
push
outsl
add
add
xchg
or
xchg
add
add
stos
nop
add
add
pop
mov
add
add
add
add
add
mov
add
add
add
sbb
add
add
fiadds
and
or
jo
add
add
add
adc
add
sbb
add
ja
jo
dec
add
jne
in
add
add
mov
add
xor
cmc
add
in
add
cmp
jl
aam
add
add
add
add
add
add
add
add
ja
add
add
in
add
add
add
add
mov
xchg
nop
add
lea
add
add
xchg
add
add
jo
pop
add
add
add
mov
lea
add
ficompl
int3
mov
add
add
add
add
add
addl
jae
mov
add
stc
add
xor
leave
mov
add
dec
test
add
add
add
pop
add
add
testb
add
or
mov
add
add
add
out
add
inc
add
add
mov
pop
add
add
dec
mov
sti
add
add
lcall
add
cmp
les
pop
cltd
add
add
cmp
add
add
add
add
mov
lret
push
cmc
mov
add
sbb
movl
xchg
mov
add
add
mov
xor
pushf
xlat
add
dec
add
add
add
add
add
add
fs
add
fldl
stos
ret
push
add
jmp
push
add
in
add
add
add
mov
add
add
add
add
add
jge
add
pop
push
pop
add
jb
add
push
add
cld
shrb
fwait
add
adc
add
add
inc
pop
pop
shrl
or
pop
adc
lea
int
push
lcall
lret
add
lds
add
add
add
add
add
sbb
and
push
add
sarl
and
add
scas
xor
add
add
add
mov
flds
popa
jns
xchg
add
add
gs
add
loope
add
pop
add
and
add
add
add
add
inc
add
add
xor
add
add
add
add
add
add
adc
or
test
add
add
add
pushf
add
add
fiaddl
sbb
inc
je
and
pop
add
add
pushf
inc
pop
inc
add
add
ret
add
push
sub
add
add
add
mov
repz
add
add
add
add
add
or
add
add
sub
sbb
add
jl
push
xchg
add
add
add
cmp
add
lock
add
add
add
sbb
add
add
add
add
add
xchg
add
lcall
add
in
add
add
add
add
or
add
sbb
add
mov
add
pop
and
push
mov
add
add
icebp
add
add
sub
add
mov
int3
add
jne
add
incl
add
add
add
aad
sub
push
adc
add
add
add
add
mov
add
add
jle
addl
add
jae
pushf
add
and
add
jbe
ret
add
add
push
rolb
add
out
sub
add
add
sub
add
add
jmp
daa
add
add
add
add
dec
push
mov
add
add
add
aam
add
leave
push
add
add
add
inc
add
fs
mov
adc
cmp
dec
add
pop
movsl
inc
repnz
add
dec
popf
sbb
cld
add
lcall
add
sbb
add
fadds
mov
xchg
add
mov
hlt
add
or
inc
in
add
ja
add
add
mov
add
test
add
add
adc
or
into
add
add
add
add
dec
and
add
lret
add
pop
mov
add
test
add
xchg
add
pop
add
add
testl
mov
add
add
flds
mov
add
add
add
add
mov
add
add
add
push
add
add
mov
cmp
add
cmc
add
add
mov
jge
add
add
cs
hlt
sbb
jmp
add
add
add
add
leave
movl
insl
add
mov
add
aad
dec
pop
out
add
int3
arpl
add
arpl
add
cli
ret
enter
iret
jmp
mov
mov
rolb
add
add
add
add
das
stos
ljmp
push
add
fs
add
add
add
add
jmp
add
add
push
add
mov
add
add
out
add
add
out
add
or
add
insl
xchg
aam
mov
push
xchg
add
repz
mov
aas
fsubl
dec
add
jge
inc
hlt
add
push
add
rolb
push
testl
test
add
les
add
add
add
add
mov
add
clc
rolb
aaa
add
add
push
stc
add
pop
xor
test
add
js
add
add
add
mov
nop
add
inc
sub
add
ja
add
sahf
and
add
jnp
or
lcall
add
add
add
adc
cmp
add
add
imul
add
sldt
add
sub
lahf
pop
xchg
imul
std
in
add
add
add
add
jmp
pop
roll
les
call
add
mov
add
pop
add
add
add
mov
add
add
or
add
int3
mov
addb
add
add
add
add
add
hlt
das
add
add
add
add
and
add
add
add
imul
add
add
jnp
int
add
add
add
xlat
add
nop
add
add
adc
add
adc
add
add
adc
add
add
add
add
add
add
add
aad
jne
add
add
and
add
insb
add
enter
add
je
add
add
stc
adc
inc
add
push
add
mov
add
add
add
add
addl
xchg
iret
xor
hlt
add
add
add
add
add
xchg
add
add
adc
add
add
xchg
adc
add
rclb
pop
add
add
and
test
push
xlat
add
fimuls
add
add
add
add
mov
add
add
add
daa
xchg
add
sbb
add
add
addl
add
clc
add
incb
adc
add
add
stc
add
sub
and
add
iret
jle
test
jp
insb
movsl
add
add
insl
add
add
mov
add
shr
add
add
mov
add
add
add
insl
inc
inc
add
add
incb
add
cld
add
add
add
std
add
add
add
jno
add
add
jbe
in
je
push
add
add
dec
mov
arpl
add
add
adc
add
ret
add
add
add
add
add
xor
je
jns
xchg
dec
mov
add
mov
add
add
add
movsl
add
add
je
add
arpl
rolb
add
in
ljmp
add
loopne
add
add
add
add
add
add
out
add
sbb
add
push
lods
add
add
adc
pusha
add
add
add
cmp
into
add
add
add
int3
add
idiv
pop
addl
das
add
xchg
push
ret
sbb
add
add
int3
add
int3
add
add
push
cmp
or
add
add
add
mov
add
add
add
add
ficoml
add
fnsave
add
daa
add
adc
add
addr16
add
add
lcall
in
add
add
xor
add
loop
mov
add
add
add
adc
add
xchg
pop
add
or
out
aad
sub
adc
ret
in
add
test
sbb
add
add
add
sbb
inc
add
add
add
add
add
add
add
add
mov
mov
add
add
add
add
dec
roll
mov
test
push
add
and
add
mov
add
inc
add
into
add
fdiv
add
rcrl
add
add
ds
popl
add
xchg
stos
add
sbb
add
jl
add
cld
add
pop
out
rcll
add
adc
add
pop
clc
add
aad
push
add
add
sub
sub
add
add
pop
stos
rolb
sbb
test
aam
add
add
jns
add
sub
das
ret
add
ja
flds
mov
inc
add
fwait
add
adc
dec
add
sbb
fcoms
scas
leave
add
push
ror
popf
add
add
add
add
add
cmp
pushf
add
add
lret
push
dec
add
add
xor
test
add
inc
add
imul
add
pop
add
rolb
jg
add
in
popf
testl
add
add
mulb
add
sbb
add
add
rcrb
add
add
add
add
es
xchg
add
dec
dec
add
mov
add
push
mov
call
pop
add
push
add
sahf
cmp
cmp
add
incl
dec
add
stos
add
add
add
sub
add
add
add
add
xor
add
add
test
add
aaa
roll
add
jg
add
lcall
or
mov
add
add
add
add
fidivrl
repz
add
add
add
arpl
add
popa
clc
xchg
add
add
add
jb
add
add
add
add
in
add
add
add
in
sbb
add
xor
add
movsl
inc
add
sahf
in
xor
jno
sbb
add
add
add
add
pushw
add
add
add
and
add
add
mov
add
add
add
push
add
clc
add
mov
add
add
add
add
add
add
add
scas
neg
add
add
add
add
in
add
add
dec
fucom
data16
add
add
add
add
jb
add
add
add
add
inc
inc
cmp
bound
add
lea
add
xchg
test
mov
rolb
add
push
add
outsl
add
dec
add
add
jno
sahf
add
add
add
add
add
xor
add
add
add
add
popf
sub
add
in
add
add
mov
add
mov
es
add
dec
add
add
add
add
add
push
roll
movsl
aaa
add
add
pushl
pop
add
push
add
test
add
add
add
jg
mov
add
fstpt
add
ds
add
je
add
add
insb
lret
push
movl
rol
sbb
add
sub
add
stc
add
scas
lods
add
add
add
add
aam
mov
add
add
aaa
pop
aam
dec
add
fcomps
add
data16
add
lret
mov
sbb
add
add
jmp
jo
mov
add
inc
into
add
cltd
cmp
add
je,pn
add
xchg
mov
add
faddl
push
dec
add
add
mov
call
add
mov
test
add
add
pop
add
add
jp
cmp
add
cwtl
pop
inc
add
add
cltd
rolb
add
add
sbb
jmp
add
and
add
add
add
add
add
add
adc
stc
movsb
add
xchg
add
add
add
cmc
loopne
add
add
das
add
add
add
add
add
cmc
add
add
ret
dec
add
rcl
add
add
add
mov
jnp
cmp
pusha
add
pop
add
add
fadds
add
add
inc
cwtl
je
shll
xor
add
push
popf
sub
xor
add
add
add
push
add
xchg
add
add
popl
insb
add
add
push
add
add
add
add
add
add
add
add
add
add
add
sbb
jns
add
add
add
out
add
inc
add
add
in
add
outsl
add
add
popl
add
add
add
add
add
add
sub
add
add
sbb
mov
add
dec
jmp
ret
enter
lea
add
cmp
popa
jecxz
add
out
sti
add
dec
add
add
dec
add
fadds
add
cltd
cltd
push
add
add
and
cmp
rcr
insl
add
push
mov
dec
jo
pop
add
add
add
mov
push
sub
add
xchg
cltd
add
add
add
and
add
add
add
pop
add
add
fcomps
mov
add
and
pushf
test
add
add
add
add
imull
add
add
add
add
add
add
sub
or
add
xchg
mov
add
stc
add
leave
inc
xchg
or
or
jae
mov
in
add
outsb
add
add
add
add
addb
add
xor
add
add
iret
add
add
add
jle
xchg
dec
add
add
add
add
add
mov
rcl
mov
add
add
add
add
cmpsb
add
add
add
cmpsl
add
jbe
add
hlt
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
roll
mov
inc
xor
sbb
xchg
add
add
add
add
inc
add
and
add
add
add
in
add
lret
add
pop
add
add
add
add
adc
xor
add
add
enter
add
int3
add
mov
call
add
add
aad
add
out
add
mov
push
sub
stos
jge
sbb
add
add
add
inc
push
mov
add
push
push
add
jo
push
inc
add
add
add
enter
xor
pop
add
add
xor
in
cmp
add
or
add
add
add
add
add
add
mov
lods
flds
in
gs
add
add
roll
and
mov
lret
push
loopne
ds
arpl
push
cltd
push
add
loopne
add
add
add
hlt
mov
add
add
add
add
add
sbb
jo
icebp
xor
add
push
dec
add
aaa
mov
cld
add
push
add
add
add
addb
aas
add
add
add
add
jae
add
add
add
add
mov
add
enter
mov
sbb
leave
inc
jl
add
add
add
xor
or
mov
xor
loopne
movsb
add
xchg
add
jle
add
jg
add
jae
add
add
add
add
add
roll
push
add
add
add
lret
add
and
add
add
and
add
fiadds
or
add
pop
add
add
out
stc
inc
add
sub
add
add
add
mov
add
addb
add
add
add
add
add
repnz
add
add
and
roll
pop
rolb
cmc
pop
cmp
add
loope
add
add
add
rolb
pushl
add
add
add
add
sahf
add
mov
add
xor
add
repnz
add
add
ljmp
add
xchg
fs
inc
add
popf
fadds
es
add
push
and
jo
inc
add
rorl
add
or
add
add
lods
add
add
add
pop
add
roll
in
add
mov
add
add
mov
add
push
add
add
add
into
add
add
add
add
sldt
add
add
add
add
add
add
add
add
push
push
jne
add
add
add
add
add
add
and
fidivrs
add
add
add
add
add
add
add
dec
add
add
add
add
mov
add
add
add
add
or
add
add
add
add
add
mov
add
add
fbld
add
or
add
add
add
fiadds
add
add
xchg
out
cmp
add
add
add
stos
mov
loope
add
add
hlt
mov
leave
add
push
add
sbb
add
add
addl
xor
roll
add
add
add
add
repz
pop
dec
add
add
add
jne
popf
add
xlat
add
xor
add
add
add
add
add
adc
add
addb
add
movsl
add
add
nop
jp
add
add
add
add
add
add
add
add
add
fcmovnb
add
dec
sbb
js
add
add
add
push
add
add
add
add
or
add
add
jne
add
mov
and
push
add
add
add
cmp
add
add
into
add
jo
add
add
add
add
pop
hlt
push
push
dec
mov
add
mov
push
add
add
les
and
add
and
andb
add
mov
add
add
add
add
xchg
add
add
repnz
test
pushf
fiaddl
sbb
add
add
add
push
xchg
insl
add
test
mov
add
add
std
or
or
js
push
add
cmp
jp
add
stos
test
add
add
mov
cltd
ds
add
add
add
add
add
add
add
add
push
aas
jp
add
mov
jle
out
addl
add
outsb
add
js
add
mov
xor
add
add
add
insb
add
mov
add
roll
addb
or
xchg
pusha
add
add
add
add
std
add
add
sub
add
incb
add
add
sbb
add
add
add
add
mov
push
mov
add
cmc
add
sub
rcrl
add
add
in
add
xchg
add
add
sbb
aas
add
add
inc
add
stc
add
das
popf
add
add
add
add
add
sbb
add
add
ljmp
jle
add
mov
add
add
inc
push
daa
add
popa
test
add
push
scas
pop
xor
add
add
aad
add
add
add
add
add
lret
add
sub
testl
roll
add
add
add
jne
in
add
test
hlt
arpl
negb
add
add
add
add
lods
test
add
testl
add
add
lahf
add
add
xor
add
test
popa
add
add
popa
add
je
hlt
add
xchg
add
ret
aaa
ds
popa
xor
push
add
in
add
add
add
test
stos
add
lods
pop
add
xor
adc
add
add
dec
add
add
add
add
add
add
sbb
add
insl
cli
mov
loopne
xchg
bound
add
xor
add
add
sbb
inc
mov
add
fadds
js
aas
rolb
add
popf
add
add
jmp
leave
add
add
add
add
pop
add
jnp
pop
test
add
in
xchg
dec
add
add
add
les
test
add
add
jl
add
add
cmp
add
add
pop
add
jecxz
add
leave
add
add
add
add
mov
add
add
mov
add
add
mov
imul
add
add
add
hlt
add
jbe
arpl
cwtl
lret
add
jb
xor
faddl
fildl
add
xchg
enter
mov
inc
add
mov
sbbl
inc
adc
es
imul
push
add
movsl
add
add
jno
add
out
add
add
lea
fiadds
addb
add
add
add
push
aas
add
add
add
pop
add
add
add
add
jecxz
add
push
nop
add
add
imul
dec
sldt
add
ss
or
xchg
add
add
add
add
add
push
movl
popf
add
add
add
lea
mov
add
test
add
test
add
add
add
jg
add
insl
add
mov
sub
lcall
add
add
add
add
add
add
cmpb
dec
push
add
add
add
add
adc
adc
aas
add
sub
add
add
xor
add
add
add
add
mov
and
std
mov
add
nop
add
and
dec
add
xor
sbbl
push
sbb
add
add
mov
mov
loop
add
or
add
add
add
movsb
add
add
add
add
add
add
mov
add
icebp
cmc
add
inc
xchg
add
add
bound
into
push
sub
movsb
add
pop
add
add
add
add
aam
fiaddl
mov
add
add
add
add
scas
add
pop
and
add
add
dec
add
add
xchg
add
add
hlt
add
add
add
cmp
add
dec
add
adc
inc
mov
jb
add
mov
fistpl
jmp
movsl
mov
dec
sarl
add
or
dec
ret
push
add
add
add
add
pop
add
add
add
add
add
add
into
push
add
test
push
cmc
dec
add
popf
movsl
add
add
loope
sbb
add
add
call
add
movsb
add
add
add
fstps
lods
add
add
add
cli
add
dec
add
add
add
push
loope
outsl
daa
xor
aaa
add
fwait
add
jmp
add
add
inc
add
add
fstpt
sarl
add
add
inc
add
add
add
add
mov
add
subl
mov
add
adc
add
mov
push
movsb
add
add
add
or
sldt
int3
add
mov
add
mov
add
movb
dec
enter
out
fidivrl
xor
sub
add
add
scas
add
pop
add
dec
les
or
add
or
add
add
mov
add
repnz
add
add
adc
add
loop
mov
add
push
stc
add
add
add
jecxz
add
in
add
mov
ret
lea
add
add
bound
adc
add
jno
add
add
xchg
mov
out
mov
mov
in
push
add
sbb
add
add
add
add
add
add
pop
add
lret
add
add
add
add
add
add
add
test
add
add
mov
das
add
add
or
scas
add
add
add
stc
std
add
add
movsb
dec
mov
add
add
add
or
in
add
cltd
mov
jle
add
mov
cmpsl
add
add
bound
stos
add
jbe
add
cmp
xchg
add
add
cmp
sbb
sbb
add
add
sub
add
and
add
cmp
add
xchg
mov
add
jl
add
add
inc
leave
or
cmp
scas
pop
or
add
add
add
mov
add
push
add
add
fildl
jns
add
add
jb
fsubs
add
add
add
add
mov
mov
add
sbb
dec
aas
aas
add
add
add
xor
pushf
add
add
add
xor
add
add
add
add
ss
push
add
das
add
add
add
add
add
icebp
add
inc
add
sub
add
add
push
ja
pusha
inc
push
ror
add
add
sub
add
add
xchg
add
sbb
dec
les
pop
mov
inc
add
add
add
stos
mov
or
add
movb
fldt
add
fistl
ja
lahf
add
add
add
xchg
add
add
add
xchg
add
add
movsb
add
add
cmc
out
add
cltd
add
add
add
cld
add
add
add
inc
add
call
add
loope
imul
add
or
add
add
add
add
leave
add
data16
add
add
add
xor
add
add
add
add
fmull
ret
adc
cld
add
notl
add
add
add
jae
loope
adc
test
scas
and
and
addl
add
add
add
add
add
add
ds
pop
add
add
fildl
add
mov
movsb
add
aam
pop
add
in
add
add
loop
jbe
std
add
add
mov
sti
add
mov
add
lea
dec
add
add
add
es
inc
out
add
add
add
add
add
dec
add
add
add
add
push
addl
add
sub
xor
push
add
add
add
add
and
into
add
add
add
add
add
lahf
add
add
add
add
push
and
sbb
add
add
add
add
mov
add
add
add
xor
faddl
shrl
add
add
mov
icebp
mov
int
add
add
add
pop
add
add
add
add
add
into
add
int3
add
add
add
or
add
lahf
sbb
add
or
lods
add
add
add
jno
push
add
add
mov
and
xchg
cmp
add
add
out
adc
add
mov
mov
add
xchg
add
popa
mov
shl
add
cmp
add
add
add
fwait
add
add
add
add
add
je
jg
add
add
add
mov
add
add
mov
stos
add
add
add
push
add
add
add
add
mov
xor
scas
add
stos
add
cmc
repz
add
fwait
insb
add
inc
xchg
pusha
add
int
add
pop
add
add
add
add
add
add
add
add
add
add
jmp
xor
add
add
add
add
xor
add
add
add
dec
add
add
add
add
sub
add
xor
out
add
add
add
push
push
add
add
add
roll
add
lds
out
cmp
add
out
add
lahf
add
add
add
add
pop
add
add
fadds
inc
add
pop
add
add
add
mov
pop
roll
cltd
add
and
inc
add
add
add
add
cmp
add
add
ljmp
add
add
mov
add
add
push
add
add
sbb
mov
add
add
add
add
add
adc
lret
testb
add
add
cmpsb
push
add
add
enter
add
add
add
add
add
add
add
add
mov
jecxz
dec
add
add
movb
cli
pop
add
add
add
and
lds
repnz
add
xchg
add
add
inc
iret
add
lret
lds
add
add
add
cmp
pop
jl
add
xor
sbb
add
add
jle
add
in
jmp
push
add
sub
add
call
pop
insl
add
jno
xchg
icebp
add
or
add
xor
addb
add
add
add
repnz
add
cwtl
insb
or
add
testl
add
aas
add
add
test
add
xor
cmp
add
add
add
adc
add
add
add
add
add
add
add
mov
add
sbb
add
add
add
add
add
lods
add
or
add
insl
add
add
jnp
or
add
dec
fwait
out
clc
mov
add
add
add
add
incb
add
add
add
mov
xor
push
add
add
add
lock
add
cmp
add
add
add
add
add
icebp
adc
pushf
add
add
scas
add
add
add
add
add
dec
add
testb
sbb
cmp
add
stc
out
jmp
add
add
add
loop
sbb
cld
aaa
daa
add
add
add
jg
add
add
add
filds
add
add
add
adc
cmp
fadds
mov
add
add
add
add
iret
jecxz
add
cmpsb
sbb
add
add
add
add
add
jno
add
mov
add
adc
add
mov
add
mov
loop
out
or
mov
add
sub
roll
adc
dec
add
incb
add
add
add
sub
addb
add
add
add
adc
add
add
add
icebp
mov
sub
add
add
add
add
add
fmuls
add
lret
add
add
xchg
add
and
es
stc
adc
add
jno
pop
pop
add
add
incl
cltd
popl
add
add
add
add
sub
add
add
xor
add
add
or
add
or
add
js
add
sbb
sub
mov
add
outsb
add
mov
mov
add
push
add
enter
add
xlat
add
add
add
add
add
add
cmp
je
add
movl
dec
movl
je
push
mov
add
in
test
add
add
add
jbe
add
add
lods
sti
call
adc
nop
lock
add
add
add
nop
xchg
adc
add
in
add
mov
add
add
xchg
add
out
add
add
push
add
imul
cmp
mov
outsl
fbstp
add
add
flds
add
add
add
or
cmp
add
add
int3
sub
add
incl
add
add
add
add
mov
dec
imul
add
add
popf
add
add
notl
add
rolb
in
stos
xor
add
jg
add
add
add
add
add
pop
popl
rcll
mov
add
add
add
sti
add
mov
add
jg
and
popa
add
add
rorb
add
mov
cmp
stc
sbb
add
add
add
pop
add
arpl
repnz
add
pop
add
add
je
cmpsb
xchg
jns
add
add
add
ret
dec
add
jp
add
add
add
add
cltd
add
mov
add
add
add
in
test
sbb
int3
enter
add
add
mov
mov
pop
mov
add
add
add
add
add
add
aam
add
add
aaa
add
inc
add
add
add
add
push
xlat
hlt
cmpsl
enter
pusha
sub
add
add
push
pop
add
add
jge
add
jae
add
add
loope
cld
or
add
filds
les
dec
add
inc
filds
xlat
jns
add
add
dec
mov
cmp
add
add
pop
add
xor
add
std
add
add
add
add
add
mov
xor
add
cltd
fisttpll
add
mov
add
add
add
cmpsl
movsl
push
es
loopne
arpl
add
scas
add
mov
add
pushf
jl
or
inc
mov
fadds
add
add
incb
sub
dec
add
push
imul
add
add
add
add
aad
adc
add
add
repnz
imul
add
dec
testb
add
add
add
add
push
add
fistpl
and
add
add
dec
add
dec
add
sahf
push
add
popl
fiadds
add
add
add
add
add
add
add
add
and
add
mov
lods
add
add
add
aad
mov
add
add
add
mov
mov
add
lret
sub
add
add
add
hlt
add
add
and
add
add
push
sbb
fistps
sub
add
add
addb
xor
cmc
sahf
add
cwtl
or
mov
lea
lret
add
add
add
add
sbbb
add
in
cmpsb
add
add
cmp
add
sbb
add
add
dec
pop
add
add
mov
add
add
data16
add
into
int3
add
add
add
add
add
ret
add
add
add
add
push
add
add
add
fadds
add
add
insl
int
ret
jae
add
loop
int3
dec
add
jne
out
fldt
inc
insb
add
dec
add
add
add
ljmp
add
add
cmc
add
add
add
hlt
test
jge
add
jge
push
add
add
add
add
add
add
add
sbb
lret
add
add
cld
xor
add
add
add
mov
mov
fiaddl
mov
xor
add
inc
add
mov
fidivl
add
add
mov
add
fldl
add
add
es
pop
add
popl
add
mov
fadds
add
roll
imul
bound
jl
add
add
add
add
add
add
fiaddl
loop
fldl
add
add
sbb
add
jmp
cmp
jnp
pop
add
add
das
add
in
dec
add
int3
add
add
enter
xor
add
add
jge
add
add
in
xchg
roll
clc
cmp
test
mov
dec
jecxz
sbb
adc
add
add
add
cltd
loope
add
xor
repnz
jb
add
add
xchg
jb
clc
add
stc
xchg
dec
jl
add
add
inc
in
mov
pushf
jne
push
add
add
or
add
cmp
add
add
add
push
sub
cmp
add
add
add
ret
add
add
add
add
add
adc
add
add
pop
xchg
aaa
add
hlt
add
add
add
add
push
add
cmp
sub
rolb
nop
add
add
add
pop
aam
add
add
sub
lods
add
jae
faddl
pop
rcrl
add
out
jle
cmpsl
add
mov
add
xchg
push
add
xchg
and
add
mov
add
mov
mov
add
pushf
les
inc
add
add
add
mov
add
jecxz
add
fwait
add
add
add
add
add
loop
add
jnp
add
add
pop
add
mov
pop
insl
mov
mov
add
dec
faddl
add
sbb
add
repnz
cli
flds
jnp
mov
add
ret
push
aad
add
add
add
add
jb
lcall
add
out
jae
add
data16
mov
add
inc
add
add
add
mov
add
add
pushf
add
adc
daa
add
sbb
add
popf
cmp
aam
add
add
add
push
add
add
add
xchg
add
add
add
sub
add
add
add
add
add
movsl
ret
mov
add
fbld
push
add
mov
add
pusha
add
sbb
add
pop
ljmp
and
jbe
add
mov
add
add
push
add
add
jns
add
add
sub
add
push
add
cmp
repnz
add
call
mov
jmp
cmp
add
sub
add
mov
aaa
add
add
add
add
add
add
add
aaa
popf
add
jo
add
das
sbb
add
std
arpl
add
add
add
add
add
add
in
mov
add
bound
pop
aam
sub
add
add
ret
add
add
outsb
jo
add
add
mov
add
or
add
mov
loop
add
add
dec
add
add
add
add
add
add
pop
add
add
pop
mov
add
add
add
add
inc
xchg
add
add
add
std
dec
add
add
add
add
pop
add
add
popl
mov
xchg
add
dec
add
mov
jbe
jle
add
add
fiaddl
add
add
and
add
add
clc
add
add
add
add
add
out
cmp
add
insb
add
pop
add
add
sahf
xor
test
add
add
add
add
add
add
push
add
mov
add
mov
jnp
add
push
add
sbbl
add
add
add
add
add
popa
add
add
add
shrb
add
sbb
lods
sub
in
add
add
mov
add
ficompl
add
xor
add
push
sub
add
add
mov
addr16
sbb
jae
lock
add
jne
xchg
les
add
mov
add
xor
lret
out
add
add
add
add
out
inc
add
add
add
add
inc
add
add
add
xchg
gs
add
add
jno
adc
adc
add
add
xchg
add
add
add
add
addl
cmpsb
add
outsl
add
add
xor
test
paddsw
add
add
xchg
add
mov
add
add
add
add
add
adc
lcall
inc
sub
inc
ficoms
iret
add
add
add
push
lods
add
dec
mov
add
dec
add
pusha
add
add
add
add
cmp
add
add
add
add
add
stc
movsl
adc
add
out
addb
mov
push
add
add
adc
add
jno
add
adc
push
out
add
movb
add
add
call
add
add
add
leave
outsb
mov
cwtl
std
xchg
add
add
jns
add
add
and
les
pop
add
xor
add
add
addr16
adc
addr16
mov
add
dec
push
add
add
fildl
sbb
add
xchg
add
shll
adc
or
xchg
add
add
add
add
dec
add
jbe
add
out
mov
add
add
jns
add
add
jae
arpl
jg
add
scas
das
xor
add
add
add
add
mov
cltd
add
cld
add
imul
dec
add
add
add
mov
jle
add
fstpt
cmc
add
add
add
dec
add
add
add
mov
dec
add
mov
add
add
add
add
add
and
add
out
sahf
test
lcall
sub
popf
add
pop
dec
mov
add
dec
cld
cmpsl
add
rorb
add
add
add
add
add
test
add
es
add
add
dec
add
pop
aaa
aaa
je
sbb
add
mov
add
add
loopne
add
add
add
add
ss
incb
add
add
repz
add
add
pusha
int
hlt
ret
cmp
leave
add
mov
add
add
add
add
sub
xchg
add
add
mov
mov
roll
add
sbb
add
popa
cli
add
add
fildl
add
repnz
add
add
add
push
std
add
add
stos
sbb
pushf
adc
into
add
add
add
dec
add
add
add
add
repz
add
push
mov
add
std
add
in
xor
ficompl
mov
add
add
popa
add
or
add
add
add
add
movsb
aas
add
add
add
add
add
mov
stc
sub
add
add
add
add
add
mov
add
fiaddl
add
out
add
testb
add
add
add
stc
add
sahf
push
in
add
push
push
add
lds
loop
add
faddl
add
filds
out
add
rolb
fwait
and
andb
aaa
add
jae
add
add
mov
add
sbb
add
ljmp
add
jp
xor
add
add
jle
push
cmp
add
add
pop
add
add
sub
add
add
add
imul
add
add
add
add
add
add
insl
add
add
add
repnz
enter
or
or
add
push
add
jle
les
aaa
add
add
pop
cli
les
push
std
add
mov
stos
pop
mov
push
add
jle
add
hlt
imul
outsb
add
fildl
add
add
xor
and
add
fwait
add
fadds
insb
add
add
add
roll
add
add
or
or
add
aad
add
adc
dec
repnz
add
add
popf
add
dec
mov
add
add
fildll
insl
mov
add
add
cltd
add
add
add
add
add
lret
push
add
add
add
insl
add
add
or
mov
add
fdivrs
add
add
xchg
add
insl
mov
add
outsb
add
add
fiaddl
dec
add
add
xchg
add
add
add
and
add
cmpb
add
add
xlat
xor
xchg
add
ret
or
add
add
outsb
add
sub
add
aaa
add
add
add
add
scas
add
sldt
add
add
add
arpl
adc
inc
add
add
add
add
add
roll
xor
add
add
xor
nop
add
add
add
repz
add
in
add
add
push
add
add
add
xchg
add
addb
pop
add
cld
int3
add
add
add
mov
add
add
shl
add
add
pushf
add
add
add
add
add
add
roll
add
add
insb
sub
add
add
add
add
cld
add
xor
add
add
pusha
aad
mov
pop
xchg
fldcw
add
cmp
xor
add
xchg
loop
int
add
lret
mov
add
add
add
add
add
add
add
les
add
add
add
pop
xor
mov
xchg
aad
jbe
xchg
add
add
add
cwtl
je
add
sub
lret
add
add
add
add
add
add
add
add
add
cld
add
loopne
add
and
add
addb
jp
leave
mov
add
add
pusha
xor
push
add
jecxz
add
add
jnp
add
add
add
roll
sbb
add
xor
xor
add
add
pop
add
add
add
fmulp
dec
add
push
xchg
add
loop
popa
jae
add
add
add
add
sub
add
add
mov
add
add
cmp
add
jnp
xor
add
add
add
fidivrl
add
add
pop
sbbl
lods
sub
add
add
jge
imul
add
add
add
cmp
add
call
add
cli
add
xchg
iret
jne
loopne
add
xchg
add
and
add
mov
add
push
js
add
mov
cmp
add
add
add
add
xlat
add
imul
loopne
sahf
sub
insb
xchg
adc
add
add
xchg
movsl
add
shll
add
add
xor
xchg
add
add
add
add
imul
add
mov
sub
add
roll
add
pop
add
inc
add
add
mov
mov
add
ret
add
mov
add
add
add
sbb
add
add
aas
ret
add
cli
add
int3
sub
jb
add
add
xchg
add
int3
add
dec
mov
add
add
add
add
add
xlat
add
add
jnp
dec
pop
add
cmp
add
push
sbb
rolb
popa
add
jae
add
mov
add
add
add
add
mov
add
inc
or
arpl
add
fiaddl
es
jns
add
add
pop
add
jge
add
jb
add
add
mov
add
add
jo
add
out
addb
add
add
mov
sldt
mov
inc
jmp
cld
add
mov
adc
add
test
add
add
add
add
add
add
add
mov
incb
add
add
test
and
cmp
std
stos
ljmp
add
add
add
add
add
dec
add
add
add
mov
pushf
add
add
add
add
add
add
push
add
cmp
jnp
add
xchg
jge
inc
add
add
loop
xor
or
add
add
add
mov
jns
out
jae
dec
aaa
add
add
scas
add
nop
addb
call
mov
add
add
sub
add
add
testb
and
cmp
add
lret
add
jl
ja
push
int3
add
add
mov
popf
add
negb
push
fistl
call
daa
cmpsl
lds
add
incl
add
inc
add
std
movl
add
add
add
add
adc
add
fadds
test
into
adc
add
movsl
adc
add
rolb
add
aam
jmp
add
xchg
insl
add
add
add
add
add
xor
add
push
sub
sti
add
adc
mov
jne
add
add
add
add
add
add
add
fiadds
add
fiaddl
cmp
add
add
add
add
add
jle
cltd
add
jb
add
scas
add
adc
add
sub
mov
add
aaa
add
push
add
add
add
add
add
xchg
pop
fildl
adc
add
jecxz
add
or
sbb
bound
add
add
add
add
add
add
add
mov
add
and
add
add
dec
add
add
add
add
add
add
add
mov
out
add
fcompl
jmp
add
xchg
daa
add
mov
ret
add
add
and
add
cmp
js
cmp
inc
dec
jne
add
mov
add
add
xlat
add
cli
add
add
add
add
mov
jo
int
cs
add
cltd
addb
add
cmc
stos
add
push
add
add
add
add
out
add
add
add
and
bound
addl
add
mov
sub
stos
mov
add
fidivs
add
add
add
test
and
add
add
adc
add
add
add
add
add
add
testb
add
add
add
add
add
jg
cmpb
or
add
xchg
stc
add
add
add
add
lahf
jmp
add
xor
add
jle
add
add
add
add
insl
mov
and
add
add
cmp
add
add
add
add
add
add
daa
repnz
add
add
addr16
add
sub
sbbb
insb
mov
add
mov
add
fsubr
add
and
add
add
add
stos
add
imul
xchg
add
mov
push
add
add
aas
popf
add
add
add
add
push
add
das
add
add
mov
lea
addl
add
add
add
pop
add
add
add
mov
pop
add
and
pop
repnz
and
add
add
add
add
add
out
add
add
jp
push
add
add
icebp
add
add
add
add
add
push
iret
pop
add
add
add
add
mov
adc
add
add
add
add
xchg
jnp
pop
add
and
add
add
jg
add
add
add
pop
add
add
add
add
add
movb
add
cmp
add
push
faddl
cmpsb
add
add
add
repnz
add
dec
jmp
add
add
cmp
sbb
movsb
bound
add
add
xchg
add
jns
je
add
add
add
xlat
add
add
push
sub
add
add
addr16
inc
pusha
add
add
add
lods
add
add
filds
dec
add
dec
add
add
pusha
add
add
stos
add
add
sahf
add
jg
xchg
add
add
add
add
mov
adc
add
ljmp
nop
stc
xor
add
add
add
sbb
add
add
test
add
addb
xor
jb
add
js
add
mov
mov
jb
add
add
add
lahf
add
add
add
and
add
add
loope
add
add
sub
add
add
add
add
fildl
dec
int3
adc
add
add
dec
add
mov
movb
repnz
incb
mov
add
add
rcrl
add
fsubrl
add
fldl
leave
dec
adc
add
icebp
push
outsb
push
add
out
push
add
into
add
add
add
push
add
dec
pop
add
insl
ret
cwtl
add
ljmp
add
inc
or
add
add
in
rolb
add
adc
add
add
add
add
fldl
add
push
in
add
add
add
add
add
rclb
add
add
testb
add
add
incb
bound
aaa
add
push
icebp
add
add
cmp
lods
scas
pop
add
mov
popa
add
add
aaa
xchg
add
fdivp
add
add
add
cmp
movsb
add
add
add
add
mov
stos
add
add
cmp
aas
add
add
add
incb
mov
jge
add
mov
add
js
jmp
xchg
add
push
gs
jge
pop
xor
add
xor
add
add
stos
and
sub
xor
add
aad
cld
add
lea
add
adc
add
xchg
fs
add
add
scas
dec
test
sbbl
add
add
dec
icebp
aas
in
je
mov
add
add
add
call
add
add
add
test
sbb
add
add
add
add
stc
adc
add
add
add
pop
add
add
add
jmp
popf
add
sbb
push
out
xchg
sub
add
add
aad
cmp
stc
incl
out
add
lret
aas
add
add
add
inc
add
sub
mov
mov
add
add
mov
inc
stos
add
add
add
lret
repnz
add
add
add
add
add
jmp
add
test
add
add
addb
cld
es
addb
and
test
add
add
faddl
int
xlat
pushf
xchg
sti
imul
add
add
jl
add
add
add
or
mov
add
add
icebp
pop
add
test
add
add
out
pushf
out
xchg
add
add
add
add
sub
loop
addl
jno
ret
loop
add
add
xchg
add
aam
ljmp
add
add
mov
loop
mov
ret
lds
incl
add
add
in
add
add
add
add
add
add
mov
add
add
add
add
push
add
aam
imul
and
cwtl
add
add
add
xor
add
add
add
hlt
push
adc
add
add
scas
add
movb
dec
add
add
add
add
insb
add
dec
enter
mov
fidivs
add
bound
add
hlt
jmp
add
add
add
mov
add
addl
shl
add
add
add
add
jmp
add
loop
add
in
push
add
add
aaa
add
add
add
stc
fiadds
testb
add
add
add
ret
testb
add
in
add
add
mov
fiadds
add
fidivrl
jg
add
dec
add
add
iret
add
add
add
add
mov
inc
addl
pop
ja
mov
movsl
fldl
cld
add
add
add
add
test
push
add
rorl
aad
add
add
add
xchg
gs
add
jb
add
add
movsl
add
add
jmp
fiadds
cmp
add
cmp
add
mov
ret
add
sub
call
or
add
add
sbb
add
lahf
mov
add
out
add
add
add
add
add
add
addl
add
add
add
add
push
add
in
add
add
add
jne
add
add
cmp
jp
and
daa
mov
cmc
add
roll
add
add
add
inc
add
add
add
add
mov
add
add
add
fisttps
ljmp
add
add
add
in
add
add
add
add
jbe
add
add
add
add
add
js
fadds
push
push
add
add
inc
popf
add
std
add
add
add
call
shrl
add
add
add
add
add
add
add
je
add
add
xchg
jecxz
and
sub
add
add
int3
add
mov
mov
cmp
cltd
add
add
add
aam
insb
loopne
add
sub
fldl
add
add
add
mov
add
mov
addb
repz
ficomps
add
add
add
add
in
in
adc
add
add
add
add
add
add
sub
add
xor
loope
cli
add
scas
fs
in
xchg
ja
add
stc
add
pop
add
icebp
sub
pop
add
add
add
or
add
add
add
add
sbb
out
add
add
add
or
add
jl
add
stos
add
mov
add
xor
mov
add
out
add
lcall
stos
add
add
add
add
add
add
cmp
jg
pop
add
add
add
add
add
popf
roll
add
add
cwtl
add
sbb
add
add
add
add
adc
add
add
add
add
pusha
in
add
jno
add
test
add
es
xchg
popa
add
add
pop
add
add
add
add
add
aaa
and
sti
add
cs
and
xchg
add
add
add
push
add
shll
push
add
xchg
imul
fmull
add
and
add
test
add
repz
sub
out
push
add
add
add
add
jg
sbb
sbb
cmp
insb
add
add
add
inc
xor
lfs
add
add
add
cmp
and
xchg
rolb
add
add
mov
add
add
jbe
add
div
ljmp
clc
arpl
add
add
add
xor
cmp
lea
add
and
lods
add
in
pushf
rolb
dec
mov
add
int
or
push
mov
repz
mov
xor
repz
adc
add
add
add
add
pop
add
add
add
or
adc
xor
mov
add
push
out
push
js
add
add
add
jbe
dec
pop
mov
add
add
xchg
add
push
cmp
add
addb
inc
add
add
stc
sahf
test
add
popf
push
mov
je
int3
rolb
add
dec
cmp
stos
add
fsts
push
lock
add
add
add
popl
std
cmc
adc
inc
push
out
in
sub
data16
inc
insb
dec
cmp
pop
outsl
jl
and
xor
daa
pusha
rorb
inc
xor
add
outsb
loope
inc
nopl
push
add
cmp
les
lods
add
add
add
add
add
sbb
add
gs
jne
inc
lret
adc
xor
sub
add
inc
inc
add
add
push
push
add
popa
add
in
sbb
cmp
adc
insl
int
sbb
pusha
jg
mov
cmc
out
sbb
add
mov
xchg
inc
je
jp
add
aas
pop
cmpsl
cmp
stc
gs
pop
and
imulb
pop
ret
arpl
insl
mov
xor
or
add
add
add
push
addb
repz
dec
and
jne
sti
std
cmp
add
xor
stc
adc
add
add
out
dec
mov
and
scas
inc
rcll
add
dec
std
fstpt
add
adc
inc
rolb
add
lods
or
xchg
cmpsb
add
sub
add
sbb
xchg
js
pop
cmp
push
sbb
adc
sbb
testb
cli
fwait
je
ds
in
test
add
add
test
add
mov
add
int3
add
mov
cmp
mov
sbb
or
out
dec
aam
fdivrl
inc
add
add
dec
adc
add
cwtl
cmp
add
mov
mov
xchg
movsb
add
jecxz
push
sahf
lahf
adc
lods
add
mov
aad
add
pusha
pop
lods
loopne
mov
mov
cltd
mov
sbb
insb
jle
add
iret
bsr
add
dec
inc
pop
mov
adc
mov
mov
mov
or
add
iret
fwait
dec
xchg
iret
push
je
mov
dec
daa
popa
popa
push
pop
mov
add
adc
inc
sbb
xor
dec
dec
inc
lret
push
pop
xchg
loope
add
in
inc
int3
inc
sqrtps
xlat
dec
xchg
int3
scas
jno
add
pop
dec
or
add
lods
add
aaa
add
add
fwait
xchg
ss
mov
cmp
cwtl
jl
jo
push
ret
jo
push
inc
push
add
ja
add
lods
gs
adc
mov
sub
mov
dec
inc
adcl
cmp
mov
add
inc
iret
xchg
add
add
xchg
add
cmc
enter
popl
dec
pop
cmp
mov
add
inc
or
add
push
cmpsb
add
inc
inc
xchg
mov
inc
mov
and
add
arpl
inc
daa
aas
int
dec
pop
push
lock
jge
mov
inc
lods
lds
fsubrs
add
jae
cmp
or
add
mov
adc
cmp
mov
add
inc
loope
and
add
xchg
jo
daa
mov
cli
cmp
ret
or
pop
ret
out
mov
add
jnp
cmp
daa
lret
add
rorl
mov
int3
pop
cmp
test
mov
mov
clc
enter
int3
push
add
add
mov
dec
sarl
add
pop
int
ss
out
andl
mov
adcl
dec
sub
adc
in
add
and
add
jbe
aam
cmpsb
add
sbb
stos
add
repnz
inc
mov
add
dec
xchg
into
lret
add
inc
lret
xor
dec
mov
testb
add
pop
nop
stos
add
scas
add
push
sbb
inc
in
out
dec
or
scas
add
lret
add
dec
adc
int
and
sbb
mov
mov
inc
adc
stc
inc
repnz
xchg
shlb
stos
adc
andl
add
js
leave
sub
add
sbb
jl
lods
leave
pop
ret
pushl
add
ds
add
mov
add
add
stos
add
lret
add
add
aam
sbb
sarb
and
add
insl
xchg
add
add
out
cld
sti
adc
dec
pop
fcmovnbe
inc
pop
and
movsb
add
xchg
xor
add
add
add
mov
in
sub
sbb
add
add
fists
loope
out
sub
add
fmul
rorb
add
imul
daa
addb
and
repnz
xchg
ja
add
pop
hlt
ret
call
add
imul
sti
call
pop
sbb
mov
outsb
add
push
sti
jns
and
add
pop
hlt
rcr
enter
test
adc
je
inc
push
xchg
repnz
aas
ss
mov
sbb
lds
add
loop
add
repz
cmp
clc
sub
add
adc
jg
push
mov
mov
test
add
or
add
iret
cmp
add
lock
xchg
jle
inc
fstps
sbb
add
test
add
jns
add
jns
mov
add
addb
mov
adc
imul
mov
mov
jno
cmp
inc
sti
das
inc
mov
jge
mov
jae
add
ljmp
add
aad
aad
fbstp
xor
cli
js
push
arpl
add
or
add
add
mov
out
icebp
imull
inc
cmp
mov
push
push
add
jle
jge
mov
aas
add
imul
hlt
xlat
inc
lea
stc
or
add
push
sub
add
addr16
dec
lret
add
dec
push
add
ret
add
adc
jg
jb
add
cwtl
inc
pop
mov
or
cmp
addb
addb
lahf
xchg
dec
ds
imul
fucomp
cmp
mov
inc
pop
mov
add
mov
add
add
addb
jmp
dec
or
clc
add
add
into
inc
roll
cmpsb
add
rorl
cmc
jge
les
xchg
add
add
mov
addb
push
jae
push
add
and
add
xchg
push
ficoml
dec
out
inc
cmc
mov
add
aas
incl
add
call
aaa
mov
int3
mov
mov
add
add
enter
add
add
push
add
lahf
add
push
jbe
or
add
divl
mov
adc
push
addb
sbb
add
push
add
sub
je
push
add
adc
or
add
push
arpl
add
add
aaa
das
aaa
repnz
rcll
addr16
mov
sarb
add
in
add
insl
das
inc
mov
add
in
xchg
sbb
push
add
jg
rcll
sub
add
sub
add
add
lcall
pusha
sub
add
add
shll
add
sbb
mov
add
add
call
push
sub
stc
iret
cld
aad
or
hlt
ljmp
adc
into
add
add
dec
inc
dec
pop
add
add
add
add
xchg
aad
mov
add
lods
enter
pop
cmp
push
add
jae
add
xchg
pop
outsb
dec
pushf
jle
cmpsl
adc
add
out
cli
add
out
jo
mov
cmp
inc
dec
mov
inc
add
ret
cmp
cmp
add
xor
addr16
pop
mov
add
xchg
xor
setle
or
add
pop
mov
inc
int3
sbb
out
xor
js
add
cmpsb
add
pushf
fiadds
dec
subl
add
je
or
add
jmp
xor
sub
add
addr16
cmp
dec
add
add
xlat
jmp
insl
or
add
pop
popa
scas
fisttpll
cmp
in
add
popa
iret
das
xchg
pop
icebp
faddl
ret
xchg
adc
cmp
or
add
or
add
jno
fbld
add
lret
enter
aaa
inc
rorl
add
rolb
shl
add
sti
int
push
add
arpl
add
mov
sub
mov
outsl
fmuls
fnsave
jmp
add
or
add
push
jp
cmp
pop
push
push
cmp
das
test
and
jne
fistps
add
loope
pop
adc
fildl
dec
dec
pushf
mov
lods
ja
add
or
insb
pop
insl
aaa
jnp
pop
sbb
insb
cmp
shll
add
in
sti
cmp
mov
or
in
dec
jp
push
arpl
pop
negb
mov
add
dec
enter
pusha
push
test
add
cmp
lahf
mov
add
mov
push
add
daa
dec
and
add
sub
add
xchg
inc
pushf
mov
dec
cmp
add
add
add
add
mov
add
add
pop
je
cld
or
add
add
and
add
jne
mov
add
inc
add
add
add
shrl
push
cmp
sbbl
xchg
int
and
add
adc
dec
pushf
pop
jl
pop
ja
add
out
stos
sbb
mov
cmp
loope
ret
gs
clc
xchg
xchg
shl
xchg
pop
mov
dec
xchg
and
add
test
mov
add
inc
and
jp
int
mov
loopne
jl
ja
push
add
lods
add
les
rolb
add
js
xor
ret
add
add
add
ss
loopne
jbe
or
mov
jge
inc
mov
lock
mov
add
xor
int3
push
int
adc
pop
adc
ret
sub
add
sbb
mov
sub
add
add
pushf
inc
jle
into
fwait
test
add
jmp
sarb
subl
mov
scas
add
rcrl
jmp
hlt
push
stos
add
insl
add
add
add
lret
xchg
mov
dec
js
mov
add
add
sarl
add
loop
push
jns
lods
add
adc
adc
add
xchg
inc
test
add
popf
test
add
out
xchg
mov
sub
add
cld
mov
add
sbb
testb
sarl
stos
test
add
inc
add
jo
jns
or
adc
add
jp
add
pop
lea
rcrb
add
inc
addb
mov
das
xor
repz
pop
push
jbe
int3
out
jo
add
cwtl
push
add
add
add
rclb
jl
outsl
jb
out
aam
in
insl
loope
dec
fiadds
add
cmp
mov
dec
fwait
mov
add
ds
xor
add
add
inc
jnp
mov
fcomp
push
xchg
add
in
or
add
push
inc
push
push
pop
mov
add
imul
add
add
add
scas
jp
mov
aaa
addb
or
pushf
nop
jnp
je
rol
insb
aas
sbb
mov
dec
cmc
sbb
add
jae
mov
enter
add
psubb
sub
add
add
mov
add
inc
lret
fisttpll
aad
push
jno
and
repz
scas
add
xchg
test
fcmove
xchg
adc
add
add
punpckldq
adc
fdivrl
movsl
pop
into
sub
add
add
dec
mov
add
jecxz
arpl
add
fimuls
jl
lret
out
add
int3
sub
push
mov
add
mov
add
mov
jecxz
pop
clc
je
push
inc
mov
dec
mov
cmp
add
roll
scas
add
cli
lea
pop
mov
xchg
add
add
mov
jge
cmc
fs
xchg
xchg
add
lea
jns
xor
cmp
inc
pop
mov
add
add
lahf
push
add
mov
test
add
dec
rol
add
pop
push
push
nop
mov
add
inc
mov
add
data16
add
mov
loop
shlb
mov
add
dec
mov
add
sahf
loop
jp
push
loopne
mov
add
push
add
add
push
mov
hlt
hlt
xchg
add
add
add
push
bound
or
add
fldl
ss
mov
ret
movsl
push
pop
jae
xor
pushf
fsubs
push
aam
inc
lret
cmpsl
dec
or
add
push
add
mov
cmpsb
add
ss
mov
in
lret
icebp
dec
xor
mov
xchg
out
pop
lods
add
psubb
xchg
bnd
xchg
add
add
jnp
jns
push
in
data16
push
add
rcrl
mov
add
add
push
dec
mov
dec
jae
or
add
in
fmul
inc
sub
mov
cmp
arpl
pop
ja
adc
int
addb
dec
shll
add
mov
add
add
aas
aad
sub
add
mov
lods
xor
jl
sti
lods
add
jl
mov
add
jmp
add
cmpsl
adc
rorl
add
mov
xchg
and
add
popf
loopne
add
add
fadds
or
add
push
call
add
test
push
in
add
imul
cwtl
mov
add
add
sti
and
mov
pop
jbe
xchg
mov
aaa
adc
test
add
cmp
inc
mov
add
clc
jns
clc
clc
xchg
call
mov
rorb
rclb
cmp
add
xchg
lahf
imul
cmp
add
and
add
dec
add
add
scas
add
addb
mov
add
repz
add
sub
cmp
sbb
push
les
mov
ret
jns
or
enter
add
and
lret
mov
add
enter
add
add
push
sahf
rorl
mov
add
mov
add
inc
stos
add
add
mov
leave
inc
aas
mov
std
lock
cmpsl
inc
out
daa
sub
add
add
fadd
lret
pop
mov
and
add
fisttps
mov
xchg
movsb
add
sub
add
jbe
sbb
fldl
add
dec
add
pop
adc
sub
add
add
das
mov
add
add
push
add
add
adc
fdivl
fisttps
pushf
xchg
fwait
jnp
cwtl
mov
add
cltd
add
pop
inc
mov
mulb
popf
je
ss
add
sub
jmp
xor
test
cwtl
mov
add
add
push
movsl
je
sbb
mov
mov
add
loope
faddl
mov
jno
add
adc
add
mov
out
add
push
add
pop
gs
cmp
sahf
mov
add
out
ja
adc
int3
int
popf
jnp
lea
and
add
add
pop
inc
std
or
add
fdiv
push
cmpsb
add
lcall
add
push
pop
and
add
add
add
add
je
mov
bound
add
loopne
cmc
loopne
add
out
addb
push
fiadds
add
ds
inc
stc
iret
test
mov
add
lods
add
loope
xlat
jge
addb
or
add
out
clc
aam
hlt
out
add
or
addb
dec
outsb
cvtps2pi
or
sub
add
xchg
xchg
cmp
inc
lock
add
adc
cmp
aas
testb
add
adc
add
mov
enter
add
add
add
test
dec
in
bound
add
ss
out
xchg
xchg
pop
imul
dec
lods
pop
xchg
addb
or
sahf
pop
mov
add
xchg
push
mov
sbb
add
sub
aaa
dec
iret
push
fcmovnb
out
bound
add
inc
sbb
sar
cmp
inc
xchg
outsb
push
test
push
mov
add
push
push
push
xor
mov
call
cld
sub
inc
add
imul
nop
push
pop
and
cmp
je
push
call
mov
cmp
jne
es
add
cs
add
stc
mov
push
clc
call
test
jne
push
ret
jmp
lea
movl
push
call
test
lea
jne
movzbl
or
mov
cld
not
imul
and
es
call
jmp
sbb
pop
push
push
push
inc
or
xchg
lea
cld
lea
lea
mov
add
mov
mov
mov
sub
xor
repz
test
jne
jmp
xchg
je
xor
mov
jmp
add
add
lea
add
add
push
xchg
jmp
in
or
add
push
test
das
gs
movsl
mov
add
add
lods
add
dec
or
add
mov
pop
adc
sbb
mov
mov
add
out
aaa
addl
jecxz
inc
pop
dec
ret
test
mov
dec
pop
add
mov
mov
add
sub
adc
mov
dec
xor
or
js
jp
mov
add
add
out
push
mov
add
jne
int
mov
data16
add
pop
shlb
sbb
inc
rcrb
sti
mov
popf
and
add
add
add
add
xchg
jmp
aam
addr16
test
add
jb
mov
add
add
loopne
sub
fistl
cwtl
pop
pusha
jns
fmuls
mov
pop
repnz
testb
push
add
add
test
add
dec
and
add
pop
mov
add
les
inc
jmp
add
jl
fwait
adc
int3
xchg
add
add
add
jmp
xor
xor
xchg
lret
enter
add
in
jbe
add
mov
scas
add
cmp
call
and
add
add
call
add
inc
ja
ljmp
cli
xor
xchg
add
push
add
sbb
mov
scas
push
mov
add
test
xchg
mov
dec
push
inc
hlt
fcoml
dec
xchg
mov
add
add
mov
outsl
shl
push
cmp
sbb
add
add
xchg
push
add
and
fimull
add
jecxz
mov
add
push
fstl
popa
jl
add
adc
mov
shll
mov
test
add
add
add
fs
inc
sub
add
adc
loopne
add
je
mov
das
xchg
xchg
add
add
dec
sbb
dec
sub
lahf
or
add
add
adc
ficoms
subl
mov
roll
negl
lock
add
adc
scas
push
lcall
add
movsl
addb
mov
xlat
aam
mov
add
out
arpl
and
cmp
shr
mov
add
lret
in
jo
add
in
add
das
xchg
inc
push
sbb
mov
add
push
add
cmpl
add
loope
dec
cmp
enter
repnz
or
dec
pop
inc
cmp
xchg
inc
xchg
jne
cld
das
xchg
add
mov
add
or
add
icebp
cmp
fnsave
xor
fsubrl
leave
add
jbe
push
jge
push
jno
mov
add
add
addb
push
xor
das
mov
mov
pop
lds
add
jle
xor
lods
or
add
aas
inc
addb
dec
mov
add
stos
or
add
jns
inc
xor
cmpsl
rorl
push
sub
push
add
imul
add
sub
fisubs
add
pop
fdivs
add
xlat
addb
pop
cmp
addb
stc
jbe
xchg
adc
in
cld
pop
adc
fistpll
les
add
dec
inc
fcomps
adc
hlt
xor
xlat
sub
add
inc
adc
jg
imul
out
call
mov
outsb
in
call
das
xchg
sub
icebp
test
add
ja
push
add
dec
jnp
add
add
xor
xlat
push
push
inc
jl
mov
add
inc
pop
mov
in
in
jle
stos
xlat
sbb
adc
push
out
loop
add
pop
aad
bound
movsb
add
jl
pop
je
inc
sub
add
mov
scas
mov
movsl
fldt
add
test
jo
push
add
scas
add
psubusb
or
add
cmp
mov
mov
add
add
mov
leave
test
inc
mov
xor
test
add
dec
sbb
das
xchg
jmp
dec
pop
xchg
aaa
mov
push
cmp
add
and
nop
imul
test
add
add
mov
sub
add
out
mov
cwtl
sti
lret
lret
jp
jns
pop
jecxz
fcmovnbe
xchg
cmp
sbb
add
jge
add
je
repz
pusha
jno
gs
testb
adc
xchg
fdivr
sub
mov
inc
mov
dec
cmp
subl
sahf
add
sub
add
mov
iret
lods
add
das
pop
js
loopne
loope
lds
addb
push
shll
mov
sbb
push
rol
mov
add
jno
jb
add
test
in
ljmp
pushf
ret
add
addb
or
stc
inc
pop
fdivs
xor
mov
lods
add
out
inc
sub
add
movsb
add
pop
add
add
nop
mov
icebp
lods
add
pop
push
add
lds
das
clc
adc
daa
leave
nop
fs
or
add
mov
mov
fisttpl
int3
inc
sbbl
pop
and
add
rolb
popf
push
shrb
int
rorl
add
dec
les
xchg
add
inc
fcmovne
push
sarb
add
imul
sbb
into
or
sbb
adc
lods
mov
dec
fnstcw
push
add
add
jge
mov
arpl
fldcw
shl
or
xchg
jl
pop
outsb
jmp
jae
ret
scas
push
mov
xor
fistps
add
cmp
leave
mov
add
inc
adc
mov
jne
mov
add
add
popf
jg
adc
inc
inc
sbb
cmp
and
add
lret
xchg
push
cmp
add
add
push
add
push
sahf
lods
add
loope
add
add
add
pop
je
lret
add
jne
push
adc
add
mov
cmp
add
jl
push
loopne
add
pop
shrl
add
mov
pop
mov
add
adc
movsb
add
xchg
movsl
pop
and
mov
xor
xor
push
insl
lret
aam
add
ficomps
fdivl
pop
sbb
int
push
mov
push
push
add
cmp
add
mull
jb
fs
rolb
fiadds
xchg
jmp
addl
add
mov
imul
mov
mov
inc
inc
xchg
lea
hlt
xchg
rorl
xchg
shll
mov
aam
pop
in
outsl
rcl
mov
add
add
add
out
push
fcmovnbe
dec
in
and
and
add
jo
in
adc
ret
or
mov
iret
xchg
or
jns
imul
adc
add
xchg
xchg
stos
add
scas
add
xor
and
pop
inc
mov
push
mov
push
aas
jp
pop
loopne
nop
bound
dec
iret
jne
cli
inc
out
add
jb
and
push
stos
add
jg
and
clc
je
push
mov
xor
add
add
cmpsb
add
shlb
insb
cld
rorl
cmp
add
add
loope
pop
data16
movsb
add
add
addl
cwtl
or
test
add
pushf
lock
add
das
fs
fisubl
xor
pop
loopne
dec
adc
jnp
clc
dec
andl
pushf
sub
add
add
sbb
aam
add
daa
inc
or
add
xor
sar
out
add
add
push
add
ficompl
add
movsb
add
jb
sbb
clc
and
add
test
add
addr16
dec
mov
sbb
aam
xchg
add
inc
xor
pusha
xchg
sbb
sub
add
fwait
mov
add
add
mov
dec
push
les
add
aam
fidivs
add
push
add
cmp
add
xchg
add
mov
xchg
nop
mov
ds
iret
push
and
inc
adcl
mov
loop
add
mov
or
add
add
and
add
push
mov
add
inc
lahf
sahf
push
addb
cmp
ror
insb
and
cmp
add
push
test
add
or
add
icebp
xchg
add
in
sbb
fistl
lea
jbe
ret
stos
pop
dec
stos
add
shlb
inc
push
mov
add
add
push
test
add
and
add
hlt
scas
mov
add
add
add
add
pop
cld
xchg
ret
mov
rcrl
xchg
in
addb
xchg
fidivs
fimull
fs
mov
sbb
add
stos
jle
sub
cmp
fdivr
lret
stc
leave
mov
pop
leavew
pop
dec
pop
ja
repz
lahf
mov
add
add
mov
add
dec
push
sub
add
xchg
push
xorl
jns
push
and
xor
dec
cmc
rcrl
ljmp
add
lds
add
lcall
xor
or
add
js
and
add
mov
jo
inc
push
outsb
std
add
add
shll
add
inc
xchg
adc
loopne
fsub
imul
dec
in
mov
mov
jne
test
add
nop
sbb
outsl
add
add
push
lods
lea
mov
add
add
dec
push
ds
movsb
add
daa
push
add
inc
or
rcll
add
hlt
xor
add
cmc
leave
int3
xlat
test
add
push
jo
jne
enter
inc
arpl
or
adc
add
dec
add
add
cmp
insl
jbe
ja
push
xchg
imul
mov
add
push
add
xlat
ret
and
add
or
add
stos
bound
ret
loop
into
scas
cmp
ja
inc
adc
jecxz
je
fildll
add
sbb
dec
xchg
ret
test
push
fwait
sbb
or
add
push
xor
jge
mov
faddp
cmp
cli
jae
cmp
push
dec
iret
dec
fmuls
mov
mov
add
add
mov
rcl
cltd
out
xchg
jp
fldl
sbb
sbb
cwtl
adc
add
arpl
add
into
ljmp
mov
test
xchg
iret
xchg
add
fsubrs
add
push
push
fisubrs
add
add
mov
add
add
push
pop
pop
cltd
stos
add
mov
ret
adc
add
and
add
lods
mov
add
rcrb
insb
pop
mov
mul
cmp
mov
add
lea
pop
dec
enter
push
je
add
dec
or
add
outsl
lret
pop
aaa
pop
jnp
adc
outsl
or
add
add
or
add
stc
xor
sbb
jo
enter
in
aam
mov
xchg
pop
mov
add
or
add
out
xor
test
sbb
das
push
fs
movb
fs
mov
inc
daa
or
push
jmp
dec
pushf
shll
lock
nop
movsb
add
lret
adc
dec
mov
add
push
test
push
dec
xchg
mov
adc
add
test
adc
int
push
dec
mov
mov
add
ljmp
lcall
inc
pushf
arpl
ds
stc
cmpsb
add
loop
mov
or
add
jae
adc
fnstsw
or
add
addb
ret
pop
cmp
movsb
add
adc
push
pop
inc
popa
std
call
mov
add
cld
mov
dec
popf
add
adc
mov
sub
jge
push
hlt
push
lock
cmc
stos
shll
add
loop
je
inc
daa
cmp
pop
adc
xchg
pusha
mov
add
pop
sbb
int
sti
popa
or
cmp
lods
sub
add
fadd
repnz
scas
add
movsb
add
repz
dec
iret
addb
xchg
sub
add
mov
and
add
imul
mov
add
add
sub
ljmp
add
add
mov
add
add
fld
dec
add
add
add
add
add
mov
add
rcrb
or
pusha
mov
adc
add
and
jb
cmc
cmp
test
add
lea
cld
push
add
pop
iret
inc
leave
lock
shl
inc
push
mov
pop
out
sarl
add
mov
insl
pop
pushf
or
test
dec
js
and
add
mov
repnz
jo
push
add
aam
imul
negl
mov
add
pop
sbbl
mov
mov
add
dec
pop
lret
xrelease
inc
pop
add
add
insl
pushf
mov
add
or
add
dec
in
add
jb
lret
sarb
mov
roll
xlat
push
sbb
add
add
dec
fisubs
sub
or
add
pop
mov
xchg
xchg
dec
and
out
sar
cltd
adc
add
in
pop
sbb
inc
lods
add
into
and
add
add
lahf
rorb
add
clc
out
clc
bound
xor
add
ljmp
mov
repnz
push
add
add
add
mov
pop
cmpsb
add
nop
xchg
jp
jg
pop
sbb
ljmp
xor
add
rcrl
jbe
test
add
cltd
inc
jno
sbb
movsl
je
inc
hlt
cmp
dec
jb
add
shrb
icebp
pop
lds
pop
adc
mov
test
xchg
inc
loop
xor
sub
add
nop
arpl
adc
sub
add
pop
imul
add
rcl
leave
inc
sbb
jl
aaa
in
std
lds
pop
and
add
xor
test
in
xchg
ss
xchg
jl
sbb
pop
adc
mov
add
add
xchg
inc
movsl
insb
mov
mov
add
add
xor
out
adc
roll
in
call
sbb
add
mov
add
bound
cmp
int3
mov
add
add
jl
mov
ja
addb
stos
clc
push
ret
add
push
adc
fs
xor
shll
add
lds
dec
push
add
out
addl
mov
fwait
adc
outsl
jge
add
xchg
mov
sbb
adc
add
push
mov
add
sbb
inc
add
repnz
nop
cld
jae
aas
xor
add
add
push
mov
nop
leave
nop
jmp
xchg
xchg
push
add
data16
add
add
clc
repnz
nop
cld
jae
xlat
add
add
mov
push
mov
xchg
ret
add
add
mov
nop
leave
nop
jmp
outsb
test
test
mov
clc
repnz
nop
cld
jae
add
add
lret
inc
add
add
ljmp
add
add
jae
clc
repnz
nop
cld
jae
add
add
add
mov
nop
leave
nop
jmp
add
aas
add
sti
inc
add
clc
repnz
nop
cld
jae
jb
add
loopne
enter
and
mov
xchg
ret
mov
add
xor
push
mov
clc
repnz
nop
cld
jae
out
insb
jle
add
mov
add
clc
repnz
nop
cld
jae
push
add
dec
out
add
push
mov
xchg
ret
push
je
adc
lcall
adc
in
nop
leave
nop
jmp
lea
sahf
add
lods
push
mov
xchg
ret
add
lods
add
jne
add
aam
xchg
add
push
mov
xchg
ret
pop
jo
add
je
pusha
clc
repnz
nop
cld
jae
add
ja
rcrb
out
arpl
add
repnz
nop
cld
jae
jne
adc
push
cmpw
push
mov
nop
leave
nop
jmp
nop
jo
add
push
mov
nop
leave
nop
jmp
test
mov
fld1
push
mov
xchg
ret
sbb
add
add
pop
loope
clc
repnz
nop
cld
jae
ja
or
sahf
rolb
add
lea
push
mov
nop
leave
nop
jmp
xlat
jmp
add
add
xlat
add
push
mov
xchg
ret
pop
and
je
test
add
addb
pusha
sub
add
call
push
mov
nop
leave
nop
jmp
and
add
and
add
add
pop
push
clc
repnz
nop
cld
jae
pop
outsb
jne
push
arpl
loop
fwait
push
mov
xchg
ret
add
nop
add
jmp
add
push
and
repnz
nop
cld
jae
add
add
sti
test
push
mov
nop
leave
nop
jmp
leave
arpl
jo
pushl
clc
repnz
nop
cld
jae
add
dec
out
and
nop
cld
jae
xchg
mov
add
add
add
repnz
nop
cld
jae
scas
xchg
add
clc
repnz
nop
cld
jae
add
add
and
mov
xchg
ret
add
rolb
pop
pop
lcall
mov
xchg
ret
xor
add
jne
pop
addr16
push
mov
nop
leave
nop
jmp
inc
add
add
push
mov
xchg
ret
sbb
xchg
out
xchg
clc
repnz
nop
cld
jae
out
and
add
add
add
add
clc
repnz
nop
cld
jae
add
jne
add
mov
xchg
ret
data16
add
add
adc
shr
in
lea
add
add
lea
mov
popa
clc
repnz
nop
cld
jae
add
jle
jg
clc
repnz
nop
cld
jae
add
xchg
lods
mov
push
mov
xchg
ret
add
add
repnz
nop
cld
jae
add
dec
add
xchg
xchg
testl
push
mov
nop
leave
nop
jmp
lods
test
add
add
push
add
roll
enter
nop
cld
jae
add
test
clc
repnz
nop
cld
jae
nop
out
dec
ja
pop
add
ficompl
and
cmp
cmp
stc
push
mov
push
lcall
jge
add
add
mull
repnz
nop
cld
jae
rolb
pop
pop
clc
repnz
nop
cld
jae
or
jo
add
scas
call
push
mov
xchg
ret
add
insb
pop
add
loope
add
repnz
nop
cld
jae
jb
pop
outsb
add
push
push
mov
nop
leave
nop
jmp
and
add
jno
rorl
mov
xchg
ret
add
add
add
xorb
and
in
nop
leave
nop
jmp
add
or
test
sub
add
push
clc
repnz
nop
cld
jae
rolb
add
mov
pop
push
mov
xchg
ret
add
add
add
inc
inc
clc
repnz
nop
cld
jae
pop
xlat
aas
fiadds
xchg
adc
mov
repnz
nop
cld
jae
mov
add
add
clc
push
mov
xchg
ret
add
add
add
mov
mov
sub
repnz
nop
cld
jae
add
add
add
clc
repnz
nop
cld
jae
sahf
pop
add
popl
nop
nop
cld
jae
add
pop
add
add
inc
push
mov
xchg
ret
cmpb
xor
pop
cmp
mov
xchg
ret
jle
sbb
or
outsl
xchg
clc
repnz
nop
cld
jae
add
cmp
mov
xchg
ret
add
add
or
xor
add
dec
cmp
repnz
nop
cld
jae
xor
pop
add
add
add
push
mov
xchg
ret
cs
pop
add
aas
dec
add
in
push
mov
xchg
ret
or
ja
mov
add
rclb
test
and
cmp
inc
add
add
pop
insb
iret
mov
clc
repnz
nop
cld
jae
inc
add
sbbl
sbb
add
push
and
mov
xchg
ret
add
add
add
add
mov
xchg
ret
pop
xchg
add
div
clc
repnz
nop
cld
jae
or
scas
add
lea
clc
repnz
nop
cld
jae
add
xchg
add
data16
add
xor
mov
xchg
ret
add
dec
aas
add
push
add
add
push
mov
nop
leave
nop
jmp
xchg
or
nop
add
push
add
clc
repnz
nop
cld
jae
dec
add
mov
add
add
mov
add
add
push
pop
add
jne
clc
repnz
nop
cld
jae
pop
adc
push
mov
xchg
ret
mov
scas
sti
add
push
mov
nop
leave
nop
jmp
add
and
add
or
add
out
ret
push
mov
xchg
ret
add
pop
add
je
es
clc
repnz
nop
cld
jae
pop
jne
add
mov
add
clc
repnz
nop
cld
jae
add
push
clc
repnz
nop
cld
jae
insb
insb
sbb
inc
add
add
fmul
cmpsl
add
push
mov
nop
leave
nop
jmp
mov
pop
in
je
js
mov
nop
leave
nop
jmp
pop
jmp
or
insl
stos
clc
repnz
nop
cld
jae
push
shl
add
mov
test
mov
xchg
ret
add
pop
xlat
add
cwtl
inc
fucomp
scas
add
in
nop
leave
nop
jmp
xor
cmp
call
clc
repnz
nop
cld
jae
lcall
add
fiaddl
add
movsl
cmp
push
mov
nop
leave
nop
jmp
add
mov
add
repnz
nop
cld
jae
add
add
mov
clc
repnz
nop
cld
jae
adc
add
mov
nop
leave
nop
jmp
pop
add
dec
push
sub
repnz
nop
cld
jae
arpl
outsb
add
add
movsl
fld1
push
mov
xchg
ret
pop
add
arpl
add
add
stc
mov
clc
repnz
nop
cld
jae
xchg
xorl
fiadds
cld
stos
push
clc
repnz
nop
cld
jae
sahf
add
pop
sbb
add
sti
push
mov
xchg
ret
add
add
incb
sahf
push
dec
inc
clc
repnz
nop
cld
jae
add
add
lods
inc
add
add
je
add
addl
add
fwait
push
mov
xchg
ret
add
nop
add
add
xchg
nop
nop
cld
jae
add
je
add
repnz
nop
cld
jae
pop
add
pop
cmp
xchg
test
add
push
mov
nop
leave
nop
jmp
add
clc
repnz
nop
cld
jae
add
add
je
clc
repnz
nop
cld
jae
add
fistpl
cmc
ret
clc
repnz
nop
cld
jae
data16
add
rorb
je
add
repnz
nop
cld
jae
jmp
adc
pop
or
add
fnsave
clc
repnz
nop
cld
jae
add
add
push
add
inc
add
push
mov
nop
leave
nop
jmp
add
mov
jne
push
mov
xchg
ret
add
insb
sahf
add
in
xchg
add
add
fldl
out
int
add
dec
xor
lret
mov
adc
repnz
nop
cld
jae
popl
mov
das
mov
push
mov
xchg
ret
add
add
clc
repnz
nop
cld
jae
add
hlt
ja
mov
nop
nop
cld
jae
jb
rcl
add
add
sarb
push
add
add
jmp
add
aas
push
clc
repnz
nop
cld
jae
add
add
test
add
add
xchg
add
and
add
test
add
push
mov
nop
leave
nop
jmp
jle
adc
cld
push
mov
xchg
ret
pop
add
cmp
cmp
mov
nop
leave
nop
jmp
pop
add
test
add
nop
nop
cld
jae
add
loope
cmp
sub
add
mov
add
and
add
add
insb
rolb
clc
repnz
nop
cld
jae
add
xlat
add
push
add
pop
clc
repnz
nop
cld
jae
add
add
add
repnz
cs
and
add
add
test
add
add
clc
repnz
nop
cld
jae
fisttpl
nop
add
pop
repnz
nop
cld
jae
add
xor
add
jae
and
and
mov
ja
mov
add
dec
cmp
repnz
nop
cld
jae
jne
data16
jmp
push
jno
sti
clc
repnz
nop
cld
jae
sti
rolb
add
test
in
stos
inc
add
data16
push
adc
subb
add
push
mov
xchg
ret
add
add
add
pop
dec
fwait
push
mov
xchg
ret
add
mov
dec
ja
inc
in
mov
nop
leave
nop
jmp
add
rolb
or
jmp
test
add
clc
repnz
nop
cld
jae
add
lcall
repnz
nop
cld
jae
add
add
out
fimuls
add
nop
nop
cld
jae
jne
jb
incb
fimuls
mov
xchg
ret
add
adc
sbb
add
movzwl
push
mov
nop
leave
nop
jmp
pop
arpl
lcall
mov
xchg
ret
add
add
add
add
mov
fistpl
clc
repnz
nop
cld
jae
xor
add
call
add
clc
repnz
nop
cld
jae
add
push
add
pop
add
clc
repnz
nop
cld
jae
add
loope
mov
pusha
rcl
add
clc
repnz
nop
cld
jae
fimuls
mov
push
clc
repnz
nop
cld
jae
add
add
add
add
xor
repnz
nop
cld
jae
mov
adc
ja
add
clc
repnz
nop
cld
jae
test
ja
lods
scas
repnz
mov
xchg
ret
add
add
xor
fsubl
mov
push
mov
nop
leave
nop
jmp
add
test
add
clc
repnz
nop
cld
jae
scas
aas
rolb
adc
add
jmp
clc
repnz
nop
cld
jae
add
mov
jg
lock
mov
xchg
ret
xor
insb
sti
dec
jb
lea
nop
cld
jae
nop
leave
xor
push
add
popa
clc
repnz
nop
cld
jae
adc
add
add
or
rep
push
mov
xchg
ret
sbb
data16
add
add
clc
repnz
nop
cld
jae
data16
add
test
pop
add
call
sbb
inc
add
add
add
add
outsb
xor
cmc
fld1
clc
repnz
nop
cld
jae
inc
cmp
add
fildl
nop
cld
jae
jo
cmp
mov
sar
nop
nop
cld
jae
sahf
jle
fiadds
add
xchg
clc
repnz
nop
cld
jae
add
add
out
push
jmp
aas
add
test
mov
add
je
mov
roll
repnz
nop
cld
jae
add
add
popa
clc
repnz
nop
cld
jae
pop
je
dec
or
jb
dec
out
fdivr
repnz
nop
cld
jae
add
jb
dec
push
mov
xchg
ret
rorb
pop
add
incb
loope
subl
push
mov
xchg
ret
scas
scas
lods
ja
add
clc
repnz
nop
cld
jae
xlat
pop
pop
add
fisubs
popa
pop
clc
repnz
nop
cld
jae
test
arpl
mov
sahf
inc
add
and
leave
add
sti
inc
clc
repnz
nop
cld
jae
add
mov
add
nop
cld
jae
fldt
add
mov
mov
nop
nop
cld
jae
pop
sahf
xor
cmc
add
clc
repnz
nop
cld
jae
pop
add
rolb
cs
mov
call
in
nop
leave
nop
jmp
add
xchg
popf
push
mov
iret
adcl
bound
outsl
add
mov
nop
nop
cld
jae
add
add
rolb
add
hlt
push
xor
push
mov
nop
leave
nop
jmp
nop
add
add
add
and
jmp
add
jo
dec
add
ret
add
add
leave
nop
jmp
mov
sahf
cli
mov
add
xchg
inc
add
pop
data16
mov
jecxz
jle
add
xchg
push
add
lcallw
data16
adc
in
nop
leave
nop
jmp
add
or
mov
xchg
ret
inc
add
add
xchg
add
push
clc
repnz
nop
cld
jae
add
jo
sarb
add
add
clc
repnz
nop
cld
jae
adc
mov
nop
leave
nop
jmp
or
add
add
add
and
add
add
test
xchg
inc
add
add
and
xor
add
jb
jmp
leave
add
add
leave
add
add
push
push
mov
xchg
ret
out
leave
add
fistl
repnz
nop
cld
jae
or
test
cmp
nop
nop
cld
jae
scas
xchg
sbb
mov
nop
leave
nop
jmp
and
lcall
mov
xchg
ret
insb
add
add
add
xor
clc
repnz
nop
cld
jae
lcall
pusha
das
add
jmp
incl
add
jo
dec
mov
add
scas
add
cmp
jnp
add
repnz
nop
cld
jae
add
add
arpl
repnz
nop
cld
jae
adc
mov
add
fcoms
in
nop
leave
nop
jmp
add
and
xor
add
xchg
inc
jl
add
push
mov
nop
leave
nop
jmp
add
add
sub
clc
repnz
nop
cld
jae
push
xorl
xor
clc
repnz
nop
cld
jae
jmp
mov
leave
add
dec
adc
repnz
nop
cld
jae
add
sbb
add
sub
add
movzwl
clc
repnz
nop
cld
jae
add
add
cmp
mov
xchg
ret
sahf
fisttpl
fildl
add
clc
add
in
nop
leave
nop
jmp
nop
jo
jne
lea
cmp
push
mov
nop
leave
nop
jmp
pop
inc
jo
add
pop
push
mov
add
add
add
add
outsl
xchg
push
push
mov
nop
leave
nop
jmp
add
add
dec
add
pop
clc
repnz
nop
cld
jae
add
inc
pop
ljmp
push
mov
xchg
ret
add
addb
add
dec
stc
je
push
mov
nop
leave
nop
jmp
add
push
mov
push
mov
nop
leave
nop
jmp
nop
data16
mov
mov
xchg
ret
sbb
add
insb
and
add
clc
repnz
nop
cld
jae
xchg
adc
push
mov
push
mov
xchg
ret
add
fiadds
jo
adc
pop
push
mov
nop
leave
nop
jmp
fiadds
push
add
pop
pop
jae
push
mov
xchg
ret
add
outsb
orb
add
push
push
je
mov
dec
mov
nop
cld
jae
add
jo
add
add
sbb
popa
push
mov
nop
leave
nop
jmp
jmp
adc
add
xor
ja
adc
push
mov
nop
leave
nop
jmp
add
sbb
add
repnz
nop
cld
jae
add
loopne
jmp
add
add
add
adc
add
movzwl
clc
repnz
nop
cld
jae
add
fiadds
add
in
aam
aam
shl
clc
repnz
nop
cld
jae
add
adc
add
clc
repnz
nop
cld
jae
add
pop
add
arpl
push
add
push
scas
fistpl
clc
repnz
nop
cld
jae
sbb
mov
clc
repnz
nop
cld
jae
inc
add
add
jb
clc
and
repnz
nop
cld
jae
addl
add
push
popl
clc
repnz
nop
cld
jae
xchg
scas
mov
clc
repnz
nop
cld
jae
add
addb
arpl
add
push
loopne
mov
xchg
ret
or
add
cmp
icebp
add
clc
repnz
nop
cld
jae
or
je
add
pop
add
push
mov
nop
leave
nop
jmp
popl
ja
incb
pop
test
jo
push
mov
nop
leave
nop
jmp
add
add
mov
add
add
repnz
nop
cld
jae
lods
add
fisttpll
mov
add
jle
dec
add
clc
repnz
nop
cld
jae
add
add
add
mov
xchg
ret
adc
adc
cmp
imul
push
mov
nop
leave
nop
jmp
add
add
add
adc
repnz
nop
cld
jae
fisubs
mov
mov
add
fs
mov
nop
leave
nop
jmp
add
and
mov
xchg
ret
add
out
sti
push
fildl
or
add
mov
push
mov
xchg
ret
mov
pop
dec
lcall
repnz
nop
cld
jae
lea
xlat
loope
sahf
push
scas
add
push
mov
xchg
ret
lcall
jle
ficomps
xchg
cmpl
push
test
add
inc
loope
rolb
push
cwtl
jb
add
push
mov
nop
leave
nop
jmp
rcrb
cwtl
mov
add
dec
mov
clc
repnz
nop
cld
jae
adc
add
movb
clc
repnz
nop
cld
jae
add
adc
mov
xchg
ret
add
loope
incb
subl
nop
nop
cld
jae
ja
add
add
ret
add
das
mov
clc
repnz
nop
cld
jae
xchg
add
repz
clc
repnz
nop
cld
jae
add
out
add
mov
nop
nop
cld
jae
fiadds
dec
add
pop
add
aas
cld
clc
repnz
nop
cld
jae
outsb
xlat
nop
mov
push
add
push
mov
xchg
ret
add
add
fistpl
rorb
push
mov
xchg
ret
cmp
add
push
nop
je
push
push
mov
xchg
ret
add
add
pop
pop
add
movsl
dec
push
mov
nop
leave
nop
jmp
add
nop
add
add
repnz
nop
cld
jae
orb
add
add
xor
repnz
nop
cld
jae
add
add
dec
pop
push
clc
repnz
nop
cld
jae
add
or
sub
clc
repnz
nop
cld
jae
add
xchg
testl
xchg
ret
add
add
add
mov
repnz
nop
cld
jae
adc
add
xchg
xorl
push
mov
nop
leave
nop
jmp
add
fcoms
nop
nop
cld
jae
add
add
call
and
repnz
nop
cld
jae
jb
add
add
enter
icebp
add
push
mov
nop
leave
nop
jmp
add
jne
mov
clc
repnz
nop
cld
jae
jo
add
or
push
repnz
nop
cld
jae
jmp
sbb
iret
xchg
inc
add
mov
nop
jne
aas
scas
add
add
sub
cmp
ds
sbb
jae
loope
inc
add
add
scas
push
push
mov
xchg
ret
lcall
add
push
pop
fwait
push
mov
xchg
ret
add
add
jbe
jp
xor
push
mov
xchg
ret
sbb
aas
push
add
add
dec
push
mov
nop
leave
nop
jmp
inc
add
scas
je
add
add
cltd
mov
push
mov
nop
leave
nop
jmp
add
aas
xchg
js
test
mov
clc
repnz
nop
cld
jae
cs
sti
jle
add
clc
repnz
nop
cld
jae
add
add
adc
jmp
incl
add
cmp
add
or
jb
add
pushf
cmp
pop
push
mov
nop
leave
nop
jmp
dec
add
add
add
mov
dec
xchg
inc
add
pop
dec
aas
add
xchg
clc
repnz
nop
cld
jae
add
dec
mov
mov
nop
leave
nop
jmp
add
add
leave
and
add
push
mov
clc
repnz
nop
cld
jae
add
popl
stos
add
inc
push
mov
clc
repnz
nop
cld
jae
and
pusha
or
nop
cld
jae
loope
add
add
arpl
dec
imul
cld
jae
data16
add
insb
scas
mov
clc
repnz
nop
cld
jae
out
scas
out
xchg
add
add
addr16
clc
repnz
nop
cld
jae
add
add
jae
dec
cmp
repnz
nop
cld
jae
scas
add
pop
scas
jo
jne
rclb
mov
and
add
arpl
add
ljmp
cld
jae
add
mov
ja
add
mov
xchg
ret
jmp
push
sbb
test
add
fld1
push
mov
xchg
ret
addl
add
pop
pop
rorb
mov
clc
repnz
nop
cld
jae
pop
add
add
push
hlt
lcall
clc
repnz
nop
cld
jae
lods
sahf
add
lea
cld
jae
shrb
add
cs
add
repnz
nop
cld
jae
add
add
mov
push
mov
xchg
ret
add
pop
add
push
xor
add
mov
nop
cld
jae
add
dec
test
in
push
push
mov
xchg
ret
data16
pop
test
clc
adc
je
push
mov
nop
leave
nop
jmp
xchg
add
scas
add
rolb
repnz
nop
cld
jae
test
in
add
sub
add
in
nop
leave
nop
jmp
add
add
jmp
sbb
repnz
nop
cld
jae
arpl
adc
add
add
add
repnz
nop
cld
jae
addl
pop
mov
rolb
mov
xchg
ret
add
lods
lcall
pop
clc
repnz
nop
cld
jae
add
add
add
xchg
and
repnz
nop
cld
jae
or
add
out
push
push
mov
nop
leave
nop
jmp
add
lcall
clc
repnz
nop
cld
jae
test
add
add
jne
adc
mov
clc
repnz
nop
cld
jae
nop
pop
and
push
clc
repnz
nop
cld
jae
test
add
fiadds
and
add
addb
dec
jb
push
jo
test
push
mov
xchg
ret
add
subw
mov
nop
leave
nop
jmp
sti
outsb
add
mov
nop
leave
nop
jmp
add
dec
add
adc
sub
push
mov
nop
leave
nop
jmp
add
add
add
and
nop
nop
cld
jae
add
add
add
add
cmc
pop
push
mov
nop
leave
nop
jmp
pop
push
jb
rcr
xchg
or
add
cmp
in
nop
leave
nop
jmp
mov
push
lea
sub
cmp
ret
sbb
pop
popl
add
leave
mov
test
and
pop
add
notb
shl
clc
repnz
nop
cld
jae
jne
pop
test
imull
cli
add
push
mov
nop
leave
nop
jmp
lea
insb
gs
clc
repnz
nop
cld
jae
jo
outsb
add
add
add
cmpsl
mov
clc
repnz
nop
cld
jae
add
mov
pop
lods
inc
add
cs
add
add
and
add
mov
clc
repnz
nop
cld
jae
add
add
add
add
test
sti
push
mov
nop
leave
nop
jmp
add
add
or
mov
push
mov
xchg
ret
arpl
add
jne
add
jo
leave
clc
repnz
nop
cld
jae
add
push
xchg
add
repnz
nop
cld
jae
add
add
add
add
scas
xchg
clc
repnz
nop
cld
jae
add
add
dec
add
add
and
add
cmp
mov
clc
repnz
nop
cld
jae
mov
or
add
movsb
add
push
add
cltd
add
clc
repnz
nop
cld
jae
dec
add
sbb
xchg
xchg
shrb
repz
mov
xchg
ret
add
nop
add
sbbl
add
je
add
add
add
ss
dec
jne
clc
repnz
nop
cld
jae
push
add
add
rcl
out
loope
incl
add
repnz
nop
cld
jae
add
into
out
call
inc
add
and
test
add
testb
add
add
add
scas
test
les
nop
jmp
jo
mov
in
push
mov
xchg
ret
add
lea
add
mov
push
mov
xchg
ret
add
jo
add
icebp
inc
dec
xchg
in
nop
leave
nop
jmp
add
add
add
sub
mov
xchg
ret
arpl
scas
aas
pop
cmp
lahf
pushl
clc
repnz
nop
cld
jae
add
xchg
add
and
nop
cld
jae
sti
or
add
jp
jge
clc
repnz
nop
cld
jae
lods
add
lods
pop
adc
add
mov
push
mov
nop
leave
nop
jmp
add
pop
nop
jo
add
jno
clc
repnz
nop
cld
jae
add
aas
add
push
lea
or
add
clc
repnz
nop
cld
jae
fidivrs
scas
add
sbbl
add
repnz
nop
cld
jae
scas
sbb
add
je
mov
clc
repnz
nop
cld
jae
nop
je
add
add
repz
mov
nop
leave
nop
jmp
add
jo
add
push
mov
xchg
ret
insb
add
test
lea
mov
and
add
scas
add
xlat
sti
pop
icebp
pop
push
mov
nop
leave
nop
jmp
cmp
test
cmp
nop
nop
cld
jae
add
jmp
add
addb
adc
nop
nop
cld
jae
lcall
dec
mov
clc
repnz
nop
cld
jae
popl
test
inc
mov
clc
repnz
nop
cld
jae
add
add
mov
clc
repnz
nop
cld
jae
adc
add
add
sub
add
aas
dec
clc
repnz
nop
cld
jae
mov
add
add
repnz
nop
cld
jae
add
and
jne
push
mov
xchg
ret
add
outsb
test
nop
nop
cld
jae
add
je
pop
aas
shl
push
mov
nop
leave
nop
jmp
or
mov
stos
add
mov
add
out
test
xchg
ret
add
add
add
clc
repnz
nop
cld
jae
add
sti
or
push
mov
stos
clc
repnz
nop
cld
jae
add
test
add
jae
andl
nop
cld
jae
add
add
sbb
dec
pusha
add
data16
xchg
add
push
aas
sbb
repnz
nop
cld
jae
add
insb
add
mov
clc
repnz
nop
cld
jae
cmpb
fistpl
clc
repnz
nop
cld
jae
jmp
add
fistl
in
nop
leave
nop
jmp
add
add
add
iret
jne
push
mov
nop
leave
nop
jmp
aas
hlt
mov
add
push
push
mov
xchg
ret
adc
dec
add
add
rorl
add
call
in
nop
leave
nop
jmp
or
push
mov
add
xlat
je
clc
repnz
nop
cld
jae
test
mov
mov
xchg
ret
test
adc
mov
test
ja
fs
mov
nop
leave
nop
jmp
or
add
fistpl
push
mov
xchg
ret
sbb
push
mov
add
push
mov
xchg
ret
mov
xchg
clc
repnz
nop
cld
jae
rolb
lods
cmpl
push
mov
nop
leave
nop
jmp
add
clc
repnz
nop
cld
jae
xorl
add
add
pop
pusha
push
mov
nop
leave
nop
jmp
xlat
add
xlat
add
add
repnz
nop
cld
jae
add
mov
in
cmp
in
dec
sub
repnz
nop
cld
jae
pop
add
add
push
mov
nop
leave
nop
jmp
add
add
test
sbb
push
mov
xchg
ret
pop
xor
add
clc
repnz
nop
cld
jae
xchg
add
add
je
add
clc
repnz
nop
cld
jae
and
ret
clc
repnz
nop
cld
jae
add
mov
hlt
jl
push
clc
repnz
nop
cld
jae
add
dec
add
xchg
push
push
mov
nop
leave
nop
jmp
add
add
add
clc
repnz
nop
cld
jae
pop
aas
or
jle
add
add
call
in
nop
leave
nop
jmp
out
xchg
cmp
shr
clc
repnz
nop
cld
jae
add
insb
int
clc
repnz
nop
cld
jae
add
add
test
add
mov
push
mov
xchg
ret
or
add
add
add
call
in
nop
leave
nop
jmp
add
add
repnz
nop
cld
jae
xor
add
add
add
clc
repnz
nop
cld
jae
out
add
add
push
clc
repnz
nop
cld
jae
add
add
push
clc
repnz
nop
cld
jae
pop
add
add
add
and
push
ja
clc
repnz
nop
cld
jae
add
add
mov
clc
repnz
nop
cld
jae
add
lea
add
jae
push
mov
xchg
ret
pop
add
add
jne
clc
repnz
nop
cld
jae
push
loope
add
mov
or
add
in
ja
clc
repnz
nop
cld
jae
aas
add
test
nop
cld
jae
or
add
add
lods
dec
outsl
add
clc
repnz
nop
cld
jae
incb
add
push
orl
clc
repnz
nop
cld
jae
add
clc
repnz
nop
cld
jae
add
add
add
sbb
repnz
nop
cld
jae
add
outsb
lods
add
pusha
adc
jmp
lcall
scas
insb
add
adc
add
testb
mov
xchg
ret
fistpl
test
add
clc
repnz
nop
cld
jae
pop
pop
jne
mov
add
sbb
push
clc
repnz
nop
cld
jae
add
add
add
add
sub
add
xabort
nop
nop
cld
jae
lea
add
add
or
add
je
push
mov
nop
leave
nop
jmp
insb
test
into
and
add
adc
add
and
outsb
add
orl
add
les
clc
repnz
nop
cld
jae
add
jne
jmp
mov
add
add
repnz
nop
cld
jae
add
xor
xchg
push
clc
repnz
nop
cld
jae
xchg
adc
subl
push
mov
nop
leave
nop
jmp
add
jle
add
mov
in
jo
jmp
mov
add
add
add
add
mov
add
xchg
nop
cld
jae
add
add
leave
push
mov
nop
leave
nop
jmp
add
pop
aas
lods
adc
clc
repnz
nop
cld
jae
sbb
cmp
mov
nop
nop
cld
jae
lea
fildl
add
icebp
fistpl
clc
repnz
nop
cld
jae
sbb
add
fiadds
adc
repz
repnz
nop
cld
jae
add
or
add
jle
pop
clc
repnz
nop
cld
jae
cs
add
xchg
add
or
repnz
nop
cld
jae
add
pop
ja
or
in
inc
mov
clc
repnz
nop
cld
jae
outsb
and
test
in
nop
leave
nop
jmp
add
adc
add
je
clc
repnz
nop
cld
jae
add
push
mov
xchg
ret
add
test
mov
in
mov
mov
xchg
ret
pop
nop
rolb
add
ja
mov
sbb
add
add
push
add
dec
add
xchg
out
fwait
clc
repnz
nop
cld
jae
pop
add
add
mov
add
clc
repnz
nop
cld
jae
lcall
lcall
fistpl
push
mov
xchg
ret
add
test
dec
addb
je
push
mov
nop
leave
nop
jmp
add
scas
add
clc
repnz
nop
cld
jae
pop
or
adc
pop
push
mov
nop
leave
nop
jmp
add
add
jle
sbb
pop
mov
xchg
ret
out
add
add
cmp
sbbl
add
repnz
nop
cld
jae
lcall
clc
repnz
nop
cld
jae
add
cmpl
jae
or
add
xchg
inc
add
mov
add
test
mov
xchg
ret
jb
rcrb
add
nop
nop
cld
jae
loope
add
lea
mov
add
add
clc
repnz
nop
cld
jae
lea
add
xor
sbb
mov
xchg
ret
leave
sbb
add
scas
scas
adc
filds
jbe
push
mov
nop
leave
nop
jmp
add
inc
dec
lea
mov
outsl
xchg
xchg
ret
add
add
mov
push
mov
xchg
ret
cmpl
xchg
add
inc
push
clc
repnz
nop
cld
jae
add
xchg
out
adc
jne
push
clc
repnz
nop
cld
jae
add
arpl
add
popa
lea
push
mov
nop
leave
nop
jmp
pop
test
add
push
mov
nop
leave
nop
jmp
xchg
add
addb
lods
add
loopne
shl
clc
repnz
nop
cld
jae
add
push
aas
xchg
mov
xor
clc
repnz
nop
cld
jae
add
leave
cmp
lcall
nop
nop
cld
jae
xchg
add
xor
in
nop
leave
nop
jmp
add
movsl
lea
clc
repnz
nop
cld
jae
mov
test
call
inc
add
xchg
add
jne
add
in
nop
leave
nop
jmp
add
dec
add
dec
pop
push
clc
repnz
nop
cld
jae
add
insb
xchg
pop
nop
jne
mov
incl
rolb
ja
sti
add
data16
add
pushf
sub
push
mov
nop
leave
nop
jmp
fildl
lcall
inc
clc
repnz
nop
cld
jae
or
add
push
mov
nop
leave
nop
jmp
lea
add
decb
and
add
mov
xchg
ret
leave
xor
add
push
push
mov
xchg
ret
decb
add
add
lcall
inc
add
add
add
add
sbb
clc
repnz
nop
cld
jae
add
add
add
xor
repnz
nop
cld
jae
adc
mov
adc
adc
repnz
nop
cld
jae
add
add
mov
add
test
call
in
nop
leave
nop
jmp
outsb
add
out
mov
add
or
add
mov
add
add
repnz
nop
cld
jae
add
xor
hlt
mov
add
push
mov
xchg
ret
add
add
xchg
loope
call
clc
repnz
nop
cld
jae
add
add
add
int
inc
add
mov
add
aas
mov
clc
repnz
nop
cld
jae
add
pop
rorb
jecxz
ljmp
add
inc
jne
mov
mov
xchg
ret
scas
lcall
add
stos
fld1
push
mov
xchg
ret
ja
add
add
movzwl
clc
repnz
nop
cld
jae
add
add
rol
pop
push
mov
jg
jecxz
lret
leave
add
cmp
fisttpll
mov
xchg
ret
add
add
and
add
add
inc
in
add
clc
repnz
nop
cld
jae
add
fiadds
add
out
push
mov
nop
nop
cld
jae
dec
add
and
and
clc
repnz
nop
cld
jae
fiadds
add
cmp
push
clc
repnz
nop
cld
jae
add
jne
and
repz
mov
nop
leave
nop
jmp
je
add
loope
add
sar
repnz
nop
cld
jae
add
add
add
je
push
mov
test
aam
add
add
add
xchg
mov
adc
clc
repnz
nop
cld
jae
add
jmp
add
push
mov
xchg
ret
outsb
fildl
add
divl
add
push
mov
xchg
ret
and
dec
add
shl
add
clc
repnz
nop
cld
jae
fildl
jb
pop
push
push
mov
xchg
ret
xchg
sahf
out
and
sahf
inc
add
and
add
rcr
mov
clc
repnz
nop
cld
jae
fildl
mov
sub
add
fwait
clc
repnz
nop
cld
jae
add
jne
add
xor
movsb
clc
repnz
nop
cld
jae
add
jne
add
push
mov
push
mov
nop
leave
nop
jmp
add
dec
add
add
movsb
add
cmpsl
cmp
push
mov
nop
leave
nop
jmp
push
pop
dec
pop
push
mov
xchg
ret
fiadds
push
lcall
movsb
push
mov
xchg
ret
cmp
adc
add
mov
xchg
ret
or
add
pop
loope
js
dec
fld1
clc
repnz
nop
cld
jae
add
add
add
add
shrb
repnz
nop
cld
jae
inc
add
jne
arpl
add
clc
repnz
nop
cld
jae
shrb
add
arpl
mov
xchg
ret
and
add
dec
sub
add
push
clc
repnz
nop
cld
jae
dec
add
pop
mov
cmpl
nop
nop
cld
jae
add
test
add
pop
mov
push
mov
nop
leave
nop
jmp
arpl
inc
jnp
clc
repnz
nop
cld
jae
add
add
call
mov
xchg
ret
add
add
and
push
clc
repnz
nop
cld
jae
add
add
add
add
push
mov
nop
leave
nop
jmp
adc
pop
add
scas
add
push
lea
push
mov
nop
leave
nop
jmp
or
xchg
mov
clc
repnz
nop
cld
jae
aas
add
add
test
add
add
addb
sub
repnz
nop
cld
jae
popl
add
add
add
fcoml
xchg
xchg
ret
cmp
add
jp
push
push
mov
nop
leave
nop
jmp
test
push
mov
nop
leave
nop
jmp
add
push
add
add
adcb
nop
nop
cld
jae
add
add
add
repnz
nop
cld
jae
add
add
add
ja
push
mov
xchg
ret
out
add
or
add
clc
repnz
nop
cld
jae
add
push
xchg
decl
push
out
adc
xchg
add
jmp
jbe
mov
lock
clc
repnz
nop
cld
jae
push
add
clc
repnz
nop
cld
jae
add
mov
xor
clc
repnz
nop
cld
jae
ja
leave
xchg
push
push
push
mov
nop
leave
nop
jmp
add
add
add
pop
cli
push
xor
push
mov
xchg
ret
je
sbb
add
xor
clc
repnz
nop
cld
jae
add
arpl
mov
push
mov
xchg
ret
je
add
add
add
sti
xor
test
and
add
inc
lods
pop
push
pushf
xchg
leave
pop
clc
repnz
nop
cld
jae
add
add
lods
sbb
adc
clc
repnz
nop
cld
jae
test
push
push
mov
nop
leave
nop
jmp
add
mov
clc
repnz
nop
cld
jae
add
pop
in
push
push
mov
xchg
ret
adc
add
or
mov
pop
clc
repnz
nop
cld
jae
add
add
add
add
addb
sbb
repnz
nop
cld
jae
arpl
add
mov
push
mov
xchg
ret
aas
add
add
mov
clc
repnz
nop
cld
jae
rolb
pop
pop
sbb
mov
mov
nop
leave
nop
jmp
add
imul
call
loope
push
add
add
add
sahf
cmp
rolb
pop
nop
add
popf
mov
clc
repnz
nop
cld
jae
add
add
add
add
push
clc
repnz
nop
cld
jae
sti
or
add
add
mov
push
mov
xchg
ret
popl
add
jp,pt
clc
orl
xchg
ret
add
jle
test
push
mov
xchg
ret
xchg
add
add
xchg
xchg
and
push
mov
xchg
ret
sti
jo
xor
arpl
orl
nop
jmp
pop
rolb
jmp
add
pop
push
mov
nop
leave
nop
jmp
add
add
mov
add
mov
nop
leave
nop
jmp
dec
pop
add
loopne
xchg
jmp
fildl
add
dec
test
add
andl
nop
cld
jae
add
jo
mov
clc
repnz
nop
cld
jae
add
push
jle
imul
clc
repnz
nop
cld
jae
add
add
add
push
mov
nop
leave
nop
jmp
inc
add
scas
add
jge
push
mov
xchg
ret
add
xchg
add
cltd
call
clc
repnz
nop
cld
jae
je
lea
dec
jb
clc
repnz
nop
cld
jae
and
clc
push
mov
xchg
ret
mov
adc
and
repnz
nop
cld
jae
adc
fidivrs
outsl
pop
push
mov
nop
leave
nop
jmp
add
add
add
add
iret
rep
clc
repnz
nop
cld
jae
lods
add
add
add
mov
clc
repnz
nop
cld
jae
fildl
pop
inc
mov
mov
xchg
ret
pop
add
add
add
push
clc
repnz
nop
cld
jae
lcall
add
fwait
clc
repnz
nop
cld
jae
jb
jb
jo
scas
sbb
mov
clc
repnz
nop
cld
jae
sti
add
xchg
add
push
add
push
mov
xchg
ret
and
add
and
add
dec
push
clc
repnz
nop
cld
jae
mov
out
adc
cld
clc
repnz
nop
cld
jae
lcall
mov
xchg
ret
inc
pop
nop
add
jb
sub
nop
nop
cld
jae
ja
add
add
or
add
neg
call
cld
jae
pop
add
je
add
shr
clc
repnz
nop
cld
jae
add
out
add
lods
call
clc
repnz
nop
cld
jae
dec
xor
add
arpl
nop
cld
jae
add
mov
lock
push
mov
xchg
ret
xor
cs
addb
fdivp
out
adc
dec
push
mov
nop
leave
nop
jmp
add
jmp
add
add
add
clc
repnz
nop
cld
jae
add
add
pop
add
push
mov
nop
leave
nop
jmp
xchg
shrb
add
adc
add
clc
repnz
nop
cld
jae
add
ja
jb
pushf
fs
cmp
cmp
mov
nop
leave
nop
jmp
add
pop
lcall
or
repnz
nop
cld
jae
jmp
add
or
loope
clc
repnz
nop
cld
jae
jo
sbb
add
jo
addl
nop
nop
cld
jae
lcall
add
loope
push
mov
nop
leave
nop
jmp
or
add
push
add
out
jle
clc
repnz
nop
cld
jae
add
lods
outsb
add
imul
repnz
nop
cld
jae
add
dec
pop
push
mov
xchg
ret
scas
add
jle
repz
push
mov
nop
leave
nop
jmp
add
dec
add
pop
fcmovnu
inc
push
add
loop
mov
push
mov
nop
leave
nop
jmp
add
add
sti
cmp
cmp
repnz
nop
cld
jae
push
add
xor
clc
repnz
nop
cld
jae
insb
add
clc
repnz
nop
cld
jae
xlat
add
add
je
adc
add
arpl
clc
repnz
nop
cld
jae
adc
add
popa
mov
push
mov
nop
leave
nop
jmp
add
loope
mov
in
clc
repnz
nop
cld
jae
add
xlat
test
add
cmp
nop
cld
jae
add
add
adc
add
mov
add
add
stos
add
cld
int3
mov
mov
xchg
ret
add
and
cs
add
jno
jne
clc
repnz
nop
cld
jae
inc
incb
add
js
clc
push
lods
add
jmp
nop
nop
cld
jae
adc
ficoms
add
mov
nop
leave
nop
jmp
inc
test
scas
mov
clc
repnz
nop
cld
jae
aas
mov
jne
clc
repnz
nop
cld
jae
add
rclb
in
nop
leave
nop
jmp
pop
add
scas
shrb
mov
clc
repnz
nop
cld
jae
pop
add
add
add
mov
push
mov
nop
leave
nop
jmp
add
jmp
add
clc
repnz
nop
cld
jae
outsb
add
add
nop
cld
jae
jb
aas
lcall
mov
cwtl
add
add
mov
adc
add
add
pop
ja
cmc
mov
cmp
add
xor
push
sub
add
xchg
into
inc
hlt
cmp
jbe
add
adc
insb
pop
sub
in
aas
mov
imul
adc
xlat
add
andl
decl
push
add
ljmp
push
push
cwtl
addb
add
add
lahf
xchg
inc
xor
jne
cmp
clc
lds
mov
cltd
push
sub
add
cmc
stos
jle
and
add
add
cmp
lods
or
add
insb
or
add
cltd
lret
int
lods
push
cld
mov
sbb
sbb
and
add
jno
mov
add
and
add
and
push
out
or
add
adc
cli
xor
add
adc
cmp
xchg
or
add
jmp
sbb
imul
insl
subl
cmp
mov
jmp
xchg
add
add
add
aas
lods
add
subl
add
mov
dec
out
adc
add
pop
lock
jmp
ds
jg
mov
mov
xchg
add
fs
insb
mov
push
hlt
lret
sarb
movsl
mov
adc
mov
add
add
mov
or
add
das
pop
loopne
mov
cmp
push
js
sub
add
xor
scas
incb
add
jno
mov
cmp
add
or
add
or
icebp
in
add
or
add
jle
dec
xchg
or
inc
andl
push
fcmovb
jne
add
pop
pop
dec
fstl
mov
dec
jo
push
inc
int3
mov
ja
push
lods
add
ss
imul
mov
add
jbe
inc
cmp
cmp
mov
add
icebp
cmp
sub
add
jae
add
inc
sbbl
add
daa
stos
rorb
add
cmpsb
add
mov
je
call
add
inc
lock
add
add
scas
add
and
sti
mov
xchg
add
add
jg
push
sbb
gs
add
add
in
popf
cmc
add
adc
add
mov
rolb
cmp
add
mov
and
xchg
sahf
adc
mov
add
ljmp
add
jecxz
sahf
xchg
xor
xchg
jp
loope
add
add
add
pusha
lahf
xchg
idiv
mov
dec
or
mov
pop
cltd
test
add
and
add
insl
arpl
aam
pop
xchg
daa
dec
insl
dec
data16
or
add
adc
dec
jecxz
iret
test
jl
and
pop
push
test
add
add
sbb
repnz
add
addb
fsubrs
negl
push
add
lods
gs
add
outsb
jb
mov
sub
add
les
leave
movsb
add
cmp
movsb
add
inc
or
or
add
enter
jge
add
mov
add
pop
mov
pop
pushf
dec
aam
xorl
sub
add
jmp
lahf
lret
bound
sub
in
test
das
cmp
sub
add
out
xor
mov
cmp
add
xor
add
push
adc
add
pop
cli
dec
lock
add
add
add
out
xor
fwait
mov
lock
int
add
fdiv
sub
mov
push
add
daa
cmp
ss
dec
add
mov
add
add
push
add
and
push
cli
aas
mov
add
pop
rcr
xchg
mov
add
movsb
add
xchg
xchg
addb
and
add
xchg
mov
add
and
add
sub
add
add
push
add
jmp
popa
into
xchg
add
lret
add
adc
xchg
test
lea
add
add
loop
add
testb
sub
into
or
add
add
add
or
xchg
inc
out
pop
dec
fsubrl
xor
sbb
xor
pop
lods
sub
add
or
insl
bound
cld
adc
in
lods
mov
fs
jmp
insb
movsb
add
mov
xchg
inc
jmp
push
sbb
lret
pcmpeqw
adc
test
cmpsb
add
push
fwait
idivb
add
add
lock
xchg
nop
fwait
sbb
add
or
mov
jnp
push
pushf
outsl
punpcklbw
add
insl
add
or
pusha
xchg
lret
inc
push
xchg
jns
push
add
xchg
add
add
movsb
add
sub
add
add
pop
leave
sbb
movsl
push
and
add
data16
add
or
inc
sbbl
push
inc
jb
aad
add
add
stc
inc
gs
jp
rolb
std
mov
outsb
pop
add
add
pop
push
arpl
jne
dec
fucom
loope
jbe
xchg
rol
into
dec
mov
loope
add
scas
add
sub
add
jp
add
or
sub
inc
cmp
sbb
sub
add
xchg
testl
add
jle
add
adc
xor
dec
mov
add
dec
pop
test
movsb
add
pop
mov
add
mov
sub
leave
negl
add
das
adc
jne
test
add
mov
arpl
bswap
xor
sti
js
and
jp
sub
add
daa
xchg
ficompl
add
add
add
add
add
jecxz
addr16
cld
xchg
add
add
mov
xor
add
ss
dec
cltd
push
cmp
sub
inc
addb
movsb
add
adc
mov
mov
ficompl
ja
jns
add
sub
and
lcall
push
pusha
add
add
push
add
pop
dec
jl
stc
pop
pop
sub
add
cmp
bound
pop
or
add
inc
lock
inc
daa
add
push
dec
cld
fs
push
push
mov
xor
dec
mov
inc
inc
out
dec
xor
mov
add
jne
jnp
ljmp
in
aas
mov
repnz
or
add
xchg
jp
add
addb
dec
addb
hlt
mov
push
jecxz
add
add
cmc
pusha
xor
pop
inc
jge
pop
out
add
jl
xor
push
add
loopne
add
test
add
sub
add
rcl
or
add
addb
test
add
inc
mov
repz
dec
lcall
add
out
aam
sti
in
push
cmp
iret
lahf
push
outsl
leave
in
fimull
les
add
sbb
sbb
setp
jnp
xchg
dec
inc
aam
pop
imul
fcmovu
dec
scas
mov
jbe
adc
outsb
dec
add
add
insl
push
pop
dec
shlb
add
adc
add
ja
cmpsl
cmpsb
add
adc
idiv
or
dec
cmpsl
adc
add
scas
rcrb
test
add
inc
push
sbb
in
lret
test
add
fadd
adc
dec
inc
stos
add
insl
push
push
add
sbb
das
xor
pop
dec
sbb
les
sbb
mov
shlb
test
add
sbb
arpl
out
inc
cmpsb
add
sub
add
cli
pop
movsb
add
fcmovnb
lcall
add
test
add
imul
add
loopne
add
rcrl
pop
je
popa
cmpsl
xor
outsl
adc
dec
lahf
scas
add
popf
addr16
pop
das
sahf
jge
add
xor
sar
push
clc
dec
inc
mov
les
sbb
dec
test
sahf
and
iret
into
sbb
add
cmp
add
sbb
lcall
mov
jbe
rcrb
sbb
fmuls
push
movsb
add
rol
xor
test
add
xchg
insl
in
fsubrs
aad
xchg
lret
pop
and
add
add
sub
xorl
fmull
jae
xchg
add
inc
lods
add
movsl
xor
add
add
xor
adc
mov
dec
jns
xor
out
or
iret
mov
add
jae
jae
cmp
add
mov
sub
sub
inc
js
mov
add
add
add
jno
and
add
xor
clc
pop
mov
test
add
testl
call
mov
and
push
jg
scas
pop
cmp
xchg
clc
or
add
stc
jnp
insl
outsb
je
mov
add
orl
mov
add
mov
jbe
add
push
subl
add
sbb
inc
mov
add
dec
mov
mov
add
add
fcom
addb
push
jecxz
dec
mov
in
mov
add
add
outsb
xchg
add
add
mov
add
addl
cmpsb
add
or
cmp
pop
mov
xchg
shlb
add
mov
pop
xor
add
jns
cmp
mov
add
add
xchg
mov
aam
jp
add
adc
add
sbb
cli
mov
sub
add
add
push
das
sti
not
testl
add
mov
add
out
addb
mov
imul
inc
xor
add
sbb
mov
scas
jno
orl
adc
push
loop
xor
push
test
add
dec
loopne
and
add
lods
insl
aad
out
lea
add
jno
pop
insl
ds
mov
rorb
mov
xchg
xchg
dec
lock
jbe
jle
bound
add
scas
cmpsb
add
sub
mov
out
sbb
push
xor
aam
call
mov
push
xlat
add
add
jle
add
cli
push
sub
add
cld
sbb
and
add
outsl
repnz
test
arpl
int3
xchg
mov
add
movsl
cmp
fstp
aaa
dec
sbb
mov
ss
pop
pop
ret
jbe
rcll
push
push
add
in
and
cmp
js
cmp
dec
sbb
jnp
mov
add
cmc
ret
and
add
add
jb
add
in
std
lds
pop
lea
and
add
addr16
sbb
test
add
push
jmp
mov
add
dec
mov
add
add
add
jnp
jo
scas
add
xor
movsl
das
scas
cmpsl
jmp
pop
dec
cltd
jbe
and
add
aam
fdivr
pop
or
add
shll
jmp
add
repz
in
push
add
add
add
add
or
add
push
iret
dec
xchg
sub
mov
add
stos
add
clc
push
push
jno
mov
add
cmp
mov
adc
xor
sub
push
sub
add
add
fs
dec
insb
add
lcall
dec
lds
lods
mov
mov
cltd
cmp
mov
clc
mov
add
pushf
inc
into
mov
int3
test
add
addr16
addb
divb
xchg
jp
pop
fdivs
add
add
jne
and
outsb
push
lcall
or
and
fstpt
notb
shr
or
add
sbb
mov
add
test
nop
pop
outsl
lret
adc
add
ss
add
sub
add
jcxz
sub
add
popa
mov
add
dec
mov
add
add
xchg
in
mov
add
add
xchg
or
add
dec
xor
and
add
or
add
subl
add
add
fwait
outsl
xchg
mov
add
xor
add
xchg
add
xor
sub
add
std
stc
rorb
les
add
cmp
jecxz
add
jg
mov
push
gs
dec
push
fldcw
jae
add
lods
add
nop
mov
xchg
xchg
and
jnp
cmpsb
add
push
je
xchg
inc
or
add
push
movsb
add
mov
outsb
mov
add
leave
cld
mov
dec
fwait
repz
add
push
add
or
inc
add
jo
bound
mov
adc
in
mov
repnz
cmp
push
stc
xor
test
sub
add
xchg
mov
ret
dec
rolb
add
call
fisubrl
add
das
sahf
jg
imull
pop
insl
push
shrb
xlat
cmp
jmp
add
repnz
inc
mov
add
cld
cmp
popa
or
add
in
cmp
das
mov
add
shl
jl
cmp
mov
add
adc
mov
jecxz
jns
mov
adc
cmc
inc
mov
add
data16
mov
jp
out
push
addb
jle
dec
les
add
add
outsl
iret
push
lahf
jo
inc
aaa
sahf
sar
cmpsb
add
mov
fwait
popf
psubsw
mov
push
loopne
add
mov
dec
fucomi
int3
and
add
add
xlat
sbb
dec
sub
imul
clc
nop
push
fsubs
add
adc
mov
jp
pop
xchg
decl
mov
add
in
lret
add
add
cmp
fwait
icebp
enter
insb
inc
add
test
and
shlb
inc
les
lcall
sbb
add
add
add
xchg
add
int
add
popa
cmp
xchg
sbb
mov
je
add
mov
add
jno
xchg
scas
fbstp
sub
add
add
adc
lock
add
cmc
loop
sti
or
cmp
pop
scas
ljmp
push
mov
add
push
dec
addr16
sub
add
add
and
add
insl
hlt
push
add
icebp
filds
add
add
rolb
test
add
add
addl
in
dec
pop
jmp
xor
fstpl
movsb
add
aad
loop
adc
add
sarb
les
aas
pop
add
add
leave
lods
add
out
cltd
aaa
push
push
sbb
and
add
push
add
icebp
hlt
push
add
adc
pop
push
lds
lcall
clc
xchg
jl
out
add
addl
sub
scas
bound
or
push
lcall
pushf
outsl
cmp
and
add
sbb
add
adc
add
aaa
shlb
mov
jge
into
lcall
add
pcmpgtd
add
add
xchg
push
add
add
das
into
imul
dec
mov
mov
sbb
or
or
outsb
pusha
cmpsb
add
cltd
cmp
jo
scas
adc
xchg
fsts
fisttps
sub
add
sarl
jnp
add
or
add
lcall
add
add
jo
into
push
cmp
stc
scas
add
xor
add
cmpsl
sub
sub
add
lcall
add
popa
xor
inc
jp
clc
dec
out
daa
decb
add
or
add
popa
xchg
outsb
mov
jp
or
add
loopw
std
xor
add
adc
push
in
mov
mov
fwait
out
lods
and
add
lods
ds
and
add
add
jns
add
fsubrp
je
mov
add
mov
adc
rorl
xchg
std
out
adc
or
add
add
loopne
and
add
bnd
add
mov
scas
add
sbb
jp
cmp
in
fidivrs
adc
cmp
fsubrl
call
and
add
fdivrl
xchg
add
aam
add
ds
add
add
clc
cmp
xor
fdivs
push
mov
add
push
push
fistps
sbb
xor
test
mov
icebp
xchg
enter
cmc
aad
dec
dec
xchg
xor
add
and
mov
mov
hlt
mov
iret
cvtps2pd
adc
test
add
add
add
outsl
and
add
sub
add
ja
inc
mov
pop
xchg
push
cld
inc
ljmp
jnp
in
sahf
pop
sbb
mov
sbb
sbb
add
or
and
ss
xchg
ja
inc
xor
add
je
or
add
fisubs
scas
push
mov
add
pop
mov
clc
xor
inc
fdivrs
mov
pop
jo
iret
cmp
add
les
add
jb
add
insl
loopne
pop
sbb
dec
bound
sub
or
wrmsr
or
add
jae
outsl
pop
jbe
or
add
jge
xchg
jp
ret
push
xchg
dec
mov
lock
mov
pop
xchg
repnz
add
push
call
test
add
add
fwait
movsl
push
jmp
int3
int3
mov
cmp
push
jge
loope
testb
jle
mov
or
add
add
aam
add
jecxz
and
add
ljmp
and
loop
or
add
mov
or
pop
xchg
push
add
loope
int
fsubs
add
or
push
popf
ds
mov
add
xlat
pop
cmp
add
jo
inc
sbb
pop
idivl
add
push
pop
or
add
int3
andl
add
hlt
fildl
or
add
push
cmp
add
add
sarb
add
add
cmp
cltd
add
add
push
push
ret
imul
lcall
mov
ljmp
iret
cmp
add
pushl
pop
mov
sbb
int3
sub
push
inc
push
stos
add
int3
aam
popf
or
jecxz
sarb
add
jecxz
pop
ficoml
in
daa
in
jecxz
test
add
popf
sbb
test
mov
cmovbe
push
push
js
inc
notb
enter
mov
add
in
cld
aaa
dec
xlat
sub
add
or
add
jecxz
aas
and
xchg
add
clc
and
xchg
mov
mov
mov
add
pop
push
jb
sbb
push
sbb
sub
add
push
imul
inc
cmpsb
add
or
ret
ljmp
xchg
adc
in
test
add
push
add
enter
mov
mov
add
movsl
dec
adc
add
add
sarl
sti
lret
stos
add
lea
ret
jg
nop
xrelease
add
add
fwait
and
inc
ret
into
cmp
and
out
add
sti
jae
cli
addb
cmp
add
inc
and
add
aaa
into
aad
adc
cmp
stos
add
das
push
cmp
sub
and
add
or
add
add
xchg
dec
sub
xchg
repnz
push
jle
mov
add
nop
cmovbe
lods
jno
loop
xor
jl
idiv
outsl
add
addb
xchg
push
xchg
and
adc
movsb
add
fdiv
and
add
rolb
mov
lret
sub
add
divb
pop
sbb
cmp
inc
push
rcr
inc
jle
sub
add
push
cmpl
jns
or
add
pop
loope
or
add
addr16
add
add
add
or
add
std
sahf
sbb
add
pop
mov
jno
mov
call
add
push
add
or
add
fwait
mov
sahf
dec
ror
inc
sbb
dec
push
aad
add
sbb
and
sub
add
mov
add
add
test
cmpsl
or
add
lock
add
xchg
pop
cwtl
cmp
dec
movsb
add
cmc
adc
sbb
pop
sbb
cmp
or
add
xchg
adc
or
add
popa
add
cli
ljmp
out
cli
fwait
and
add
imul
or
add
add
test
add
out
add
or
add
add
in
aam
and
ret
into
icebp
mov
add
sarb
mov
mov
add
lcall
fstpt
add
add
aad
lods
dec
add
adcl
dec
ss
inc
in
leave
sbb
sub
inc
clc
jbe
jne
sub
inc
icebp
insl
shll
add
outsl
mov
scas
add
pop
mov
cmc
pop
into
js
arpl
cmp
daa
ss
cwtl
xchg
add
add
add
add
addr16
lds
pop
sbb
nop
ss
jns
cmpsl
mov
add
push
xchg
pop
jo
push
sbb
xchg
ret
adc
add
add
imul
or
adc
add
cwtl
xchg
add
dec
push
xorl
sbb
rorb
add
add
sub
add
test
add
mov
add
xchg
jno
add
cmp
mov
negb
fmull
popf
roll
add
subl
pop
aam
push
add
or
or
add
add
add
adc
push
pop
adc
enter
pusha
clc
jg
sti
xchg
stos
add
push
add
adc
mov
add
out
jo
mov
xchg
and
add
add
xchg
mov
add
or
add
lods
add
mov
por
add
push
jmp
add
xor
popf
inc
jno
sbb
repz
add
lods
sti
loopne
jae
cmp
ret
xchg
cmp
dec
dec
loope
cmp
aaa
and
add
jo
repz
jns
and
add
repnz
mov
add
pop
ss
mov
xor
add
mov
xchg
lods
inc
mov
jo
daa
push
or
jnp
xor
add
and
push
loope
add
inc
pop
test
add
in
loop
dec
pop
lret
lea
add
dec
test
sub
add
add
add
or
add
and
add
cltd
test
add
fwait
test
add
xchg
adc
jmp
outsb
xchg
inc
inc
fcoml
les
pop
addl
add
pop
in
push
fst
ja
jns
add
test
add
int
fwait
mov
mul
sbb
pop
je
ret
add
xchg
lods
add
scas
mov
push
add
js
in
sbb
add
rcrl
add
rcl
lea
add
add
add
push
aad
ss
add
in
movsw
jp
mull
sub
mov
add
cwtl
fbld
loop
lcall
adc
decb
add
add
repz
xor
add
push
lcall
add
add
pop
xor
cmpl
push
mov
out
and
add
je
jle
inc
in
js
push
cmc
loop
fbstp
xchg
addr16
xor
xor
sbb
mov
add
inc
and
add
arpl
pop
loopne
loope
out
pushf
xor
push
mov
add
jo
ret
add
xchg
pusha
pusha
into
push
lds
xor
jl
addr16
stc
aam
add
divb
xchg
xor
pushf
lods
add
mov
push
add
add
mov
dec
xor
xchg
lret
add
jbe
ja
xlat
dec
push
pusha
int3
addb
add
mov
add
ja
add
icebp
lret
lret
dec
jo
mov
data16
add
in
sub
add
stc
jb
adc
cmpsl
int3
xchg
push
sub
add
addb
jnp
jne
vmovlps
ja
inc
cmp
push
into
and
add
add
add
mov
jecxz
and
add
enter
imul
pop
mov
add
imul
fwait
jp
adc
je
in
out
dec
jp
pop
jmp
jle
mov
add
cmp
add
mov
add
sub
add
pop
inc
stos
add
sub
add
rorb
add
jg
enter
inc
cmc
mov
mov
imul
add
stos
mov
dec
or
add
jb
popa
sub
add
test
add
ljmp
adcl
sbb
add
dec
loop
or
add
cmp
add
mov
push
addr16
test
lods
add
push
xchg
add
push
add
fcoml
je
pop
push
dec
adc
add
and
add
add
das
push
add
mov
add
in
test
add
cmp
mov
add
xlat
cwtl
jo
je
cmp
mov
rdpmc
cmp
divb
inc
pop
push
add
sbb
add
xchg
add
fwait
mov
add
push
add
mov
js
out
fmuls
jb
mov
mov
add
loopne
sub
add
leave
scas
add
mov
sub
add
stc
lret
add
add
test
rcr
cmp
mov
add
fistps
jo
mov
or
sbb
fstl
dec
sbb
mov
add
add
addr16
add
push
add
aaa
ret
outsl
push
dec
das
outsb
push
xchg
or
pop
dec
inc
push
sub
and
add
sbb
gs
addl
add
stos
add
cmp
stc
mulb
repnz
add
xor
add
shlb
test
add
adc
cmp
push
pop
mov
rcr
dec
cmpsl
push
push
leave
push
pushf
pop
cltd
imul
shl
xor
add
popa
and
arpl
mov
out
arpl
add
adc
add
add
cmp
pop
mov
cmc
mov
fcoms
pop
pop
xchg
add
jmp
and
add
shl
jmp
jmp
out
adcl
subl
add
cmc
repz
in
repz
movb
add
rcll
adc
add
push
fsubr
mov
add
fistps
jo
adc
imul
add
jge
ficompl
sub
add
mov
xor
stos
add
mov
sbb
ret
arpl
sub
mov
pop
sub
push
nop
movsb
add
add
inc
and
add
test
add
or
push
add
cld
dec
dec
pop
jo
fcoms
in
dec
add
add
ror
fidivrl
adc
jge
jne
add
loop
or
add
add
inc
add
pop
mov
add
add
sub
add
lret
pop
pop
xchg
sbb
adc
add
ret
add
jge
repnz
dec
int3
sub
add
shlb
roll
andl
add
out
add
add
and
add
add
add
frstor
popa
push
xchg
fsubrl
add
cmp
add
pop
cmpsb
add
and
in
and
add
add
outsb
mov
loope
push
lea
mov
mov
nop
push
jl
push
jne
cmp
enter
pop
std
je
add
sbb
xor
mov
adc
aaa
lds
mov
cmc
mov
add
add
cmc
cmc
dec
push
loopne
add
addb
pushf
push
or
add
jnp
add
ja
mov
or
add
mov
sbb
add
pop
or
cmp
add
repz
mov
enter
xchg
add
sbb
pusha
mov
add
ret
adc
add
std
jne
mov
add
sub
cmp
add
xor
pop
cltd
popl
addr16
mov
dec
out
lret
sbb
or
add
pop
test
adc
add
push
fimuls
lock
gs
movlhps
inc
imul
add
mov
sbbl
addb
pop
mov
xchg
fisubs
mov
pusha
sti
fistpl
fbld
xchg
jno
or
xchg
lds
sbb
lcall
add
fimuls
add
and
add
dec
shrl
fidivs
mov
arpl
cmp
sub
add
mov
scas
add
fadds
sub
dec
inc
and
add
shl
push
jae
add
mov
movsb
add
mov
add
aam
int3
addr16
arpl
in
lods
add
push
add
loop,pt
fsubrl
into
pop
fdiv
xlat
lds
outsl
sub
loop
add
decb
add
jecxz
cmp
int
push
add
inc
lret
cmpsb
add
stos
add
in
jo
out
xor
mov
add
add
outsl
add
add
jl
sbb
andl
dec
sbb
cmpsl
sub
add
lods
and
xor
leave
mov
aas
loop
add
push
outsb
push
push
dec
sub
add
sbb
add
movsl
xor
add
add
sub
add
loop
mov
test
add
add
dec
fcmovbe
jne
mov
lock
inc
push
sbb
xchg
cmpsb
add
adc
pop
adc
rorl
out
add
or
mov
fcomps
outsl
shr
dec
out
ss
adc
cmp
mov
push
add
imull
jle
sbb
dec
lahf
call
hlt
cltd
fidivrs
mov
cmp
pop
ja
les
mov
xor
add
xor
in
push
outsl
mov
inc
jmp
add
daa
aam
repnz
mov
popa
or
add
add
testb
test
mov
mov
add
inc
in
cltd
or
add
xchg
dec
xlat
push
and
jg
dec
pop
ret
cmc
jp
aad
pop
pop
int3
xchg
add
ljmp
lock
add
bound
add
mov
add
jo
and
add
mov
add
inc
xchg
repz
add
add
mov
add
dec
out
enter
add
movsl
push
pushf
stc
or
push
fdivp
and
add
fldt
add
push
jle
add
addr16
xor
les
jp
repz
add
lahf
test
add
inc
push
pop
pop
aaa
add
add
mov
add
lret
cmp
xchg
pop
jne
adc
jg
jae
rorl
add
ja
xlat
adc
cli
sub
sahf
mov
add
inc
nop
sub
add
xchg
mov
jns
mov
outsl
xor
jb
addr16
scas
xchg
mov
add
adc
shl
push
jb
call
dec
clc
or
add
cmp
push
add
daa
scas
mov
jno
insl
stos
add
adc
jg
cmp
jae
addl
add
and
call
or
add
dec
cltd
fcomp
push
mov
ret
and
add
js
and
xor
add
or
add
cmp
aam
push
popf
mov
imul
add
cli
ret
mov
or
and
pop
sub
add
dec
or
add
xor
divb
daa
pop
xor
mov
pushl
xchg
push
adc
fnsave
scas
add
add
imul
and
add
movzwl
cmp
pushf
test
xchg
js
or
add
jge
sahf
mov
mov
add
dec
shrb
pop
push
scas
add
test
mov
add
inc
std
lock
add
xor
pop
mov
and
add
pop
or
add
and
cmc
inc
lcall
cli
pop
dec
movsb
add
lock
xor
cmp
add
lcall
add
pusha
in
adc
cmpsb
add
sbb
and
pop
add
add
je
test
add
cwtl
or
add
pop
inc
sbb
movsl
mov
add
cmc
pushf
jmp
lea
pop
outsl
fwait
rclb
add
lcall
cltd
pop
fs
stc
push
adc
xchg
adc
jne
sbb
mov
in
cld
cmovbe
push
lret
sub
je
pop
out
and
add
add
nop
mov
mov
dec
adc
ljmp
fdiv
imulb
add
adc
cmpsl
inc
scas
icebp
out
sub
adc
add
xor
into
cmp
and
mov
add
add
rolb
dec
shr
addb
aaa
pusha
nop
pop
lret
add
cmp
xlat
stos
add
or
add
pop
cmpl
push
sbb
mov
add
sti
push
or
addb
xlat
in
add
dec
jmp
xchg
inc
lds
push
mov
out
mov
outsl
adc
add
cmp
fwait
xor
jmp
test
inc
sbb
or
add
inc
pop
mov
mov
fsubl
adc
or
add
scas
add
insl
xchg
testb
cwtl
add
add
add
dec
add
push
add
cli
or
add
rcll
negl
push
add
pusha
lret
xor
in
adc
mov
add
clc
setp
jo
mov
xchg
aam
add
pusha
psubd
jns
ja
sub
cmc
sbb
test
add
inc
iret
lahf
mov
jbe
lahf
sarw
pop
sbb
pushf
out
add
mov
xchg
les
rorl
sub
add
inc
xor
push
sub
add
fadd
push
add
cld
adc
xchg
cmpsb
add
aaa
mov
mulb
pop
std
add
add
daa
rolb
or
add
xor
ds
pop
and
add
add
inc
pop
fadd
xor
add
lea
lret
mov
add
stos
int
push
add
inc
push
add
clc
paddsw
sbb
add
bound
testb
ficoms
jg
sbb
adc
add
outsb
mov
pop
mov
dec
or
add
mov
js
mov
sar
push
add
popa
cmp
nop
and
add
ja
pop
pop
int3
or
seto
pop
sahf
add
loop
add
pop
cld
imul
notl
add
sarb
pop
repnz
lea
daa
ja
jo
xchg
add
mov
add
data16
add
stos
int3
out
maskmovq
testl
mov
push
mov
je
mov
jb
mov
mov
add
and
and
add
roll
add
add
lea
loop
adc
push
add
add
leave
mov
add
add
mov
dec
and
js
test
in
outsl
push
push
push
fs
inc
inc
shlb
leave
popf
mov
js
lret
xchg
jl
mov
loopne
daa
daa
test
add
inc
jp
dec
movsl
ja
std
ds
mov
add
movsb
add
shlb
push
rcl
fisubrs
add
sub
sarb
mov
add
pop
push
cmc
test
add
lods
outsl
cmp
jg
adc
fisttps
call
add
pop
inc
out
sahf
das
sub
lock
add
adc
add
add
cmpl
add
lods
add
and
cmp
inc
imul
add
push
xor
or
repnz
mov
add
push
test
add
push
or
add
add
add
mov
add
mov
les
test
jg
xor
sbb
popf
xlat
js
add
adc
xor
push
add
or
jbe
jnp
cmpsb
add
add
sub
add
shlb
fstpl
xchg
adc
mov
je
and
add
ljmp
push
cmc
shl
add
add
xor
add
mov
add
lret
addr16
add
stos
add
or
add
dec
mov
add
call
scas
clc
pop
mov
add
add
cmp
mov
scas
add
hlt
fst
sbb
movsb
add
clc
pop
into
mov
add
sbb
hlt
sahf
jb
outsb
jbe
add
roll
inc
insb
mov
cmpsb
add
or
add
aaa
data16
xor
inc
dec
stos
push
mov
xchg
push
pop
adc
xorl
add
push
popf
inc
aaa
cmp
mov
inc
inc
dec
mov
add
add
cmpsl
mull
inc
arpl
add
mov
add
and
mov
push
daa
jecxz
inc
filds
int3
xlat
pop
sub
add
xor
add
fildl
aas
shll
add
cmp
add
pop
cmp
sbb
inc
jl
push
stc
nop
lcall
sbb
movsb
add
mov
add
adc
ja
pavgw
lret
dec
inc
xchg
loop
mov
popf
push
decb
repz
cmp
loope
mov
add
inc
push
lahf
pop
cmp
pop
into
mov
add
cmp
nop
jmp
lea
add
out
fadds
adc
inc
cld
shl
pop
jecxz
mov
add
out
pop
adc
cmpsb
add
cmp
dec
adc
xchg
aad
sub
add
in
ja
sub
add
adc
add
add
jns
add
imul
add
ror
dec
sub
add
push
pop
bnd
out
mov
dec
jae
mov
add
test
ja
add
dec
stc
ret
mov
mov
imul
outsb
push
into
or
push
add
adc
jl
add
repz
mov
add
add
jp
lods
add
pop
mov
or
dec
cltd
cmpsb
add
push
fsubl
add
call
pop
mov
jbe
pop
addb
push
aad
cmp
adc
loope
mov
add
and
add
cmp
sbb
inc
add
xor
pushf
iret
mov
inc
and
add
add
add
add
xchg
push
add
mov
mov
pusha
loope
add
push
repnz
pop
ss
mov
mov
add
inc
flds
push
jge
push
add
xlat
push
fdivs
js
adc
push
sti
daa
clc
inc
fldt
fsts
fmulp
ret
push
xor
or
mov
xchg
scas
mov
dec
in
mov
cmp
push
sbb
add
scas
in
test
add
sti
insl
mov
imul
xchg
stos
in
cld
add
add
pop
xor
sbb
add
add
sbb
mov
add
leave
daa
or
add
mov
lock
add
popf
pusha
xlat
pop
pusha
in
mov
lods
cmp
or
add
cld
ret
aas
pop
popl
mov
pop
and
add
xchg
mov
add
push
lret
sub
add
stos
lcall
sahf
cmp
xor
fisubl
add
pushf
cmpsl
mov
les
xor
cmp
add
mov
add
add
stos
clc
and
add
fisubs
add
pusha
mov
add
cld
sahf
mov
rcll
movsb
add
in
ljmp
add
popa
and
add
add
and
in
inc
mov
add
loop
inc
jnp
lods
add
fsubrl
add
pushl
add
aam
roll
adc
fistpll
adc
pop
or
add
xor
dec
adc
or
test
add
inc
cwtl
adc
test
aas
std
sbb
sbb
xor
add
sbb
cmp
and
aad
sub
add
lods
add
mov
xor
adc
fisttpll
add
fwait
shrb
add
dec
inc
adc
repz
sbb
ss
and
add
call
test
mov
add
aaa
xorps
xchg
jl
ss
pop
jo
adc
out
cmp
push
loopne
push
loope
or
add
std
addb
addb
push
data16
dec
lret
add
lcall
add
add
add
xchg
add
and
decb
cmp
leavew
add
rclb
jle
ja
dec
and
add
xor
inc
jno
add
add
daa
push
add
outsb
pop
mov
and
add
and
pop
push
add
aaa
iret
sub
jecxz
xchg
add
add
mov
test
mov
add
jns
lock
add
add
sub
mov
mov
pop
pop
lea
ss
jnp
aam
stc
jns
loopne
lds
sahf
and
add
scas
add
inc
shll
cwtl
push
inc
sub
add
mov
addb
js
and
add
out
repz
pop
xchg
test
outsb
pop
mov
vunpcklps
cmc
push
add
arpl
add
xor
push
or
add
add
inc
rcr
push
dec
adc
mov
femms
add
imul
fwait
push
fsts
aad
add
jbe
sbb
add
lods
pop
sub
loop
jnp
sub
add
outsb
loopne
clc
inc
fldl
push
xor
movsl
loope
je
add
pop
cmp
outsb
sub
ss
sbb
loopne
sub
jnp
cmp
outsl
dec
in
pop
lock
jl
sub
add
add
jb
dec
lods
add
outsl
dec
arpl
add
ror
sub
add
scas
popa
mov
pop
xor
add
mov
xchg
add
xchg
mov
add
add
shrb
loop
pop
hlt
xchg
aaa
ds
sbb
loope
roll
mov
add
add
pop
fwait
out
jbe
or
js
repz
xchg
fs
arpl
shll
sbb
add
and
add
mov
or
add
add
dec
pop
int3
loopne
add
fistps
pop
adc
stos
push
cmpsb
add
nop
pop
mov
add
jns
sti
aas
js
jo
pushf
je
nop
dec
lods
xchg
add
lret
mov
in
mov
add
cltd
rcrl
add
fcmovnb
outsl
icebp
in
push
pop
pop
xor
add
out
push
sahf
out
aaa
xchg
push
fimuls
call
pusha
xorl
fnsave
pop
addb
int3
int
addr16
popf
lods
jle
fwait
adc
fnstenv
cld
mov
pop
mov
rolb
stc
pushf
shrl
push
add
cli
sbb
ror
add
dec
add
add
aaa
xchg
ficoms
adc
fdivs
mov
sbb
int
adc
add
sbb
sbb
sbb
cmpl
cmp
sbb
inc
movntq
out
pop
clc
adcl
add
push
xchg
in
subl
pop
pop
pop
addl
dec
out
inc
outsb
loopne
call
add
clc
push
add
inc
and
add
insb
ss
push
clc
xor
cmp
add
sbb
or
add
add
dec
push
add
cmp
mov
out
imul
in
jle
int
movsl
fistl
dec
jp
arpl
adcl
push
loope
cmpsl
sub
add
call
scas
add
mov
inc
cmp
push
test
add
add
stos
add
sbb
add
subl
mov
sub
add
pop
jns
movlps
push
mov
add
fwait
adc
mov
ss
sbb
add
nop
jmp
add
jb
test
add
jns
loopne
add
dec
dec
adc
popf
insb
int3
add
std
mov
cmp
bnd
dec
jnp
add
mov
add
bnd
pop
lret
stc
lcall
repz
jnp
outsb
add
add
rorb
add
scas
add
popa
push
scas
add
clc
add
clc
out
mov
imul
mov
sub
hlt
pushf
cmpsb
add
add
pop
jmp
fs
popa
jo
add
lods
add
xchg
jg
rcrl
add
repz
or
bound
add
cmp
mov
mov
add
fwait
xor
clc
stos
aaa
jl
cmp
xchg
sbbl
cltd
sbb
add
mov
add
add
and
adc
les
cmp
push
inc
mov
add
or
std
mov
add
push
push
lds
or
movsl
pop
addb
clc
jnp
cld
in
jmp
imul
add
repz
lods
add
adc
add
inc
aad
cmp
rorb
add
or
loop
xchg
sub
inc
dec
jle
add
mov
dec
mov
push
in
inc
xchg
xchg
out
loopne
icebp
aam
das
push
mov
mov
mov
cwtl
lods
add
xchg
jmp
jg
add
xor
push
iret
and
js
add
sbb
add
pop
pop
mov
add
cmp
jg
daa
pusha
pop
je
add
add
addl
scas
add
enter
add
mov
add
add
mov
add
adc
in
sub
lcall
ret
push
adc
fs
movsb
add
cmp
adc
dec
jge
and
test
fs
popf
inc
gs
dec
dec
cmc
cmp
aam
xchg
add
add
lret
jmp
dec
mov
iret
mov
lods
adc
jecxz
mov
add
pop
lcall
cmp
add
dec
xchg
and
add
adc
cmp
outsb
mov
add
mov
out
add
pushf
dec
addr16
addb
cmpsl
jl
pop
fdivrl
add
fcmove
pushf
test
add
jns
lcall
add
add
mov
mov
mov
push
popf
sub
add
mov
add
pop
xor
mov
repz
cmc
sub
add
rolb
add
das
push
into
xor
add
sbb
fcompl
jmp
mov
cmp
lock
out
jle
ds
movsb
add
or
push
add
ss
add
je
prefetch
mov
add
push
out
mov
frstor
add
ds
add
dec
aad
sub
xor
pop
sub
add
add
xchg
add
fnstcw
dec
sti
mov
push
mov
dec
sti
mov
inc
mov
push
add
adc
repnz
add
add
add
loopne
int
inc
imul
add
cmp
das
push
add
sub
out
dec
mov
jle
fdivp
movsb
add
mov
add
add
out
mov
jge
and
sbb
ucomiss
add
dec
xchg
mov
cmovl
inc
in
adc
inc
jmp
add
bound
add
jg
push
lahf
xor
add
cld
daa
cmp
data16
popa
cmpsb
add
popa
push
fldcw
add
enter
movsb
add
lods
ucomiss
add
adc
jns
add
push
jge
xlat
lds
add
fistl
mov
int
addb
addb
jge
push
jne
out
and
add
add
in
add
add
mov
mov
add
fsub
cli
test
inc
pop
shrl
inc
xchg
add
stos
jo
cmp
xchg
sbb
or
clc
cmp
dec
scas
add
and
add
cmp
mov
dec
jecxz
pop
outsl
hlt
xlat
pop
push
sti
mov
add
jbe
cmpsl
dec
fistpll
add
inc
addb
cmpsb
add
inc
mov
and
push
cld
mov
mov
add
or
shlb
mov
add
pushf
inc
mov
add
dec
push
int3
je
shl
inc
jl
shrl
add
adc
scas
add
daa
int
pusha
aaa
aas
test
add
add
out
fldl
mov
ffreep
mov
cmp
arpl
add
fstl
and
add
adc
sahf
fs
sbb
movsb
add
loope
popf
inc
lods
mov
mov
add
pop
push
leave
std
add
add
inc
mov
fdiv
scas
add
jo
and
add
adc
mov
add
add
xchg
add
or
pusha
popa
ss
inc
cltd
rorl
push
xor
xchg
pminub
test
add
add
mov
jmp
call
add
adc
add
pushf
or
add
mov
mov
insl
add
add
daa
mov
add
mov
add
out
enter
test
add
movsb
add
lock
add
fisttpll
push
jnp
push
add
jo
mov
jne
mov
push
add
xchg
pop
pop
xchg
cmp
aas
mov
add
rcrb
or
jecxz
inc
imul
jp
jp
push
rolb
dec
sbb
data16
mov
add
dec
fs
imul
mov
inc
lret
cwtl
sti
dec
aaa
add
add
cmp
sarb
xchg
push
addl
add
adc
xchg
repnz
mov
ret
add
aad
add
pop
push
mov
js
pusha
cmp
add
outsl
test
and
cld
ss
addb
into
fs
add
outsb
sbb
gs
push
add
add
aaa
stc
sub
add
add
inc
aas
jl
mov
sbb
ret
add
or
add
sub
add
scas
add
pushf
jb
fsubrl
add
insb
or
jle
cmp
dec
xlat
fimull
pusha
inc
mov
dec
in
negb
lret
push
add
scas
lock
mov
push
push
mov
add
pusha
sbb
stos
jmp
sub
add
mov
ljmp
sbb
cmp
push
ret
add
cmc
push
push
enter
push
pop
movsl
cmp
mov
add
int3
push
cli
imull
and
add
mov
and
add
and
addb
fistpl
dec
jge
mov
add
shlb
and
push
add
mov
sahf
cwtl
fwait
dec
jl
mov
pop
sahf
adc
sbb
jnp
jmp
mov
sbb
mov
add
fidivrl
lret
mov
add
add
inc
mov
add
add
arpl
inc
adc
cmpl
mov
mov
add
add
inc
sub
add
inc
mov
add
filds
mov
add
add
mov
or
mov
repz
mov
pop
ret
add
add
jo
mov
add
lods
add
mov
sbb
outsl
hlt
shlb
add
push
add
dec
push
out
dec
sti
int
iret
push
dec
ja
push
daa
insb
push
add
fcoml
and
add
adc
push
mov
and
add
jge
add
ss
sti
push
and
add
add
add
shll
pcmpeqd
add
push
add
pop
dec
inc
dec
inc
or
add
dec
imul
stos
dec
outsl
scas
add
mov
add
cmp
insb
sbb
add
test
add
cmp
jl
add
pop
sub
adc
add
add
in
int
inc
fdivrl
scas
mov
inc
icebp
idivl
dec
sub
add
dec
adc
mov
into
and
cmc
cwtl
cmp
pop
xor
fucompp
dec
fmul
rorb
add
je
push
mov
sub
fldcw
add
add
push
test
jge
popa
test
cmp
add
mov
dec
outsb
jbe
jp
inc
sub
push
push
pusha
inc
sbb
add
mov
rorb
add
cmpsb
add
fisubl
imul
add
add
add
jl
add
push
cmp
shl
out
aad
xlat
add
daa
add
dec
ljmp
in
pop
xor
scas
add
sub
add
inc
cld
int
bound
fbld
add
sub
dec
loope
mov
add
inc
sub
add
mov
push
js
and
add
add
add
and
add
sarl
mul
lds
add
add
add
and
add
push
stos
add
fcompl
and
add
mov
add
dec
xor
inc
fldt
adc
add
pop
mov
jge
inc
push
sub
cmp
add
mov
xor
add
enter
jp
cmp
add
add
add
adc
sbb
pop
push
adc
mov
gs
add
repz
mov
and
add
shl
btc
xchg
push
push
xor
add
out
xlat
jl
jp
push
aas
xchg
outsl
gs
imul
out
add
adc
add
jns
or
mov
add
ds
mov
and
add
add
mov
mov
xchg
lds
adc
pop
xchg
neg
mov
cwtl
mov
add
add
add
popf
call
add
mov
add
test
inc
sbb
add
jmp
mov
mov
add
lcall
sub
add
lahf
push
add
pop
fadds
dec
push
push
or
add
mov
cmp
pop
nop
inc
sbb
add
dec
out
lock
add
add
and
add
mov
push
push
add
mov
add
imul
add
add
jle
pop
mov
xor
out
add
loopne
sahf
ficomps
jne
add
lods
mov
push
and
adc
jb
mov
test
add
lods
shll
add
cmpsb
add
ds
jge
add
in
outsl
fists
add
lret
jmp
push
sahf
or
add
sbb
rolb
push
bswap
repnz
xchg
pushf
xchg
mov
sbbl
pop
jne
sbb
add
fwait
or
add
cmp
add
add
add
add
mov
add
mov
sbb
out
xchg
fwait
sbb
dec
push
add
add
leave
add
ret
addb
pop
mov
cmpsl
jl
lret
test
add
int3
sub
add
rolb
mov
jb
jns
add
dec
push
add
sub
add
int
cmp
add
sahf
aaa
jae
add
mov
add
add
sub
add
cwtl
and
add
pushf
call
mov
add
in
out
cmp
push
add
movsb
add
mov
and
fdivrs
or
mov
add
jae
test
and
out
inc
and
add
stc
loopne
dec
add
cmc
fisubrs
mov
add
add
jnp
adc
aaa
mov
daa
pop
adc
add
push
jl
push
or
push
add
pop
loop
ret
dec
mov
add
xchg
inc
mov
add
int3
lods
add
push
inc
testb
or
inc
icebp
pop
pop
sbb
jo
push
mov
jns,pt
adc
inc
insb
cmc
in
jns
add
jecxz
cmp
shrl
add
xor
fwait
aas
movsb
add
repz
imul
push
add
js
or
fnstsw
push
sbb
pop
add
add
cmp
jecxz
xchg
add
gs
mov
add
cmp
sub
push
lahf
aaa
push
mov
add
icebp
inc
jmp
out
insl
xor
xor
mov
gs
das
adc
mov
sub
add
jg
cmp
inc
mov
jle
pop
dec
mov
add
pop
mov
je
inc
push
jo
xchg
ss
push
add
and
lcall
sahf
jns
inc
lcall
aad
add
and
loopne
add
lea
sub
add
push
les
popa
add
jno
pushf
add
add
stc
push
movsb
add
cmp
dec
add
scas
fcom
aas
xchg
scas
add
fmull
lea
push
mov
add
add
or
add
sbb
stos
add
bound
mov
adc
cmc
cmpsb
add
aad
adc
ja
cwtl
sti
or
add
insl
fwait
ljmp
add
cli
cmp
add
popa
dec
jg
jnp
repz
mov
add
pop
pushaw
and
add
push
std
loope
bound
xchg
dec
mov
shll
outsb
in
stos
add
mov
add
inc
push
inc
xor
aam
aaa
js
jo
xchg
bsf
add
jns
or
and
add
lret
ss
sbb
nop
add
test
sarl
aaa
add
add
add
add
jl
ljmp
xchg
push
mov
jbe
pop
xor
sub
add
test
add
je
add
mov
add
sub
add
add
loope
mov
shrl
add
xchg
xor
add
add
add
add
pop
mov
add
sub
add
jmp
in
mov
adc
test
ret
shrb
adc
adc
insb
add
add
add
add
add
ss
sahf
insb
insl
jns
jecxz
add
push
stos
cmc
fs
dec
dec
cwtl
adc
bnd
int3
add
add
xchg
in
jnp
pop
sub
jl
add
add
sarb
add
in
dec
rorb
adc
xchg
add
fsubr
jg
addb
push
idivl
mov
rcrb
dec
inc
aad
add
nop
sbb
scas
and
add
pushf
enter
add
push
inc
or
add
sar
or
add
jno
dec
aam
mov
cltd
adc
add
add
add
mov
ret
ret
push
loop
shrb
add
mov
fstps
mov
add
mov
aaa
call
fdivl
add
pop
adc
test
add
jl
sti
aad
loop
inc
inc
fidivrs
pop
ja
add
out
addr16
stc
mov
jl
lea
test
add
add
subl
or
add
xor
outsb
add
add
pop
outsb
adc
mov
lgs
fstl
arpl
mov
add
add
sbb
daa
or
sub
fimuls
dec
lret
scas
jge
sbb
add
into
dec
dec
push
sub
add
dec
roll
add
aaa
mov
lret
push
lock
imul
inc
adc
jnp
inc
filds
add
add
hlt
sbb
jne
pusha
xchg
mov
jne
dec
mov
sub
addb
stc
jne
mov
push
or
jmp
inc
stc
cmp
daa
mov
aaa
push
das
rclb
pop
add
add
add
add
aas
cmp
addr16
add
mov
shrb
mov
sbb
add
fsubl
add
sub
add
fnsave
add
xor
mov
push
shrl
dec
inc
test
pushf
mov
in
hlt
xchg
sbb
or
jae
ja
mov
add
div
test
add
addb
std
je
enter
sahf
ja
add
cmp
inc
add
add
ja
adc
dec
dec
mov
xchg
sbb
add
enter
add
jecxz
fcoms
or
jno
test
cmp
jae
sbb
and
add
inc
sub
jo
push
push
add
pusha
aad
lahf
jl
jmp
imul
ds
add
add
mov
aaa
add
add
movsl
jae
fwait
xlat
test
add
add
adc
add
scas
add
pop
or
add
and
cmp
lret
push
das
dec
jne
add
lea
add
mov
add
ficoml
push
pop
mov
rorl
imul
fidivl
mov
add
movb
add
add
push
xchg
push
xor
pop
aaa
divl
pop
pop
jae
xchg
jne
and
add
xorl
std
addb
das
popf
mov
cld
jg
xchg
add
add
add
incb
add
and
add
mov
sbb
pop
push
jne
sbb
lahf
jecxz
ret
dec
arpl
cmp
dec
xchg
add
hlt
inc
pop
fwait
inc
sahf
pop
pusha
sbb
cmp
mov
inc
sub
pop
arpl
aaa
shll
js
jl
adc
dec
mov
add
in
xor
popa
addb
or
add
xchg
mov
cmpsb
add
pop
das
sbb
add
adc
sbb
and
sbb
pop
ret
ja
in
hlt
call
in
fwait
pop
mov
add
aas
push
add
mov
ljmp
add
pop
jmp
xchg
inc
jle
adc
add
and
add
lock
cmp
xchg
pop
mov
shl
pop
cmp
mov
or
dec
xchg
push
mov
mov
cmpsl
pushf
outsb
xchg
mov
in
jb
and
add
pop
lods
add
and
add
mov
add
add
add
mov
roll
and
jg
mov
add
dec
incb
add
jo
ss
insl
mov
add
add
xor
push
ss
add
lahf
add
addr16
sub
cmp
add
addl
add
les
add
cmc
jge
mov
cmp
lea
push
in
arpl
sbb
add
lods
std
jmp
cltd
std
adc
cmp
add
ret
push
sub
add
add
xor
mov
add
dec
cmp
sbb
dec
cmc
jmp
or
add
mov
add
mov
out
cwtl
pop
stc
mov
fldz
addb
ret
sub
add
mov
imul
out
add
jo
std
cli
or
inc
mov
and
add
xlat
stc
mov
aaa
mov
cmp
mov
add
jnp
push
push
adc
or
add
add
add
out
or
mov
imul
mov
ljmp
xchg
rolb
inc
mov
fiadds
mov
xchg
add
mov
add
mov
mov
add
pop
hlt
clc
in
leave
aam
aad
xchg
cmpsb
add
test
add
insl
adc
test
add
add
fwait
cmp
add
add
out
outsb
call
nop
adc
add
xor
scas
jne
in
add
add
ds
test
add
add
add
inc
jmp
xor
or
xor
add
add
and
add
adc
jl
dec
push
fsubrs
add
and
icebp
lret
fisubl
je
repz
sbb
rcll
jmp
addl
outsl
or
add
std
cmc
jp
sti
push
add
jmp
jl
push
pop
inc
jb
jg
loopne
mov
push
addb
adc
add
imul
add
mov
lds
scas
cmp
pop
jo
popf
and
add
add
pop
mov
push
popa
jmp
test
add
adc
sbb
ds
mov
add
dec
popf
mov
out
addr16
add
je
notb
and
add
jb
add
add
add
addb
mov
add
and
add
inc
and
outsb
test
add
or
add
sub
sub
add
add
mov
cmp
int
or
lahf
adc
sbb
add
add
push
and
addr16
fcmovnbe
arpl
cld
loope
mov
add
sbb
add
les
add
mov
xor
push
add
jo
add
jb
add
insb
sti
mov
push
jmp
fldt
add
add
fdivrp
xchg
pop
js
call
add
mov
fcoml
dec
lret
dec
in
bound
pop
lahf
push
add
and
jmp
add
add
add
push
add
add
add
add
cmp
jbe
sbb
mov
mov
add
mov
add
cwtl
sbb
sbb
scas
add
mov
xchg
test
add
add
jle
add
mov
adc
mov
add
roll
cmpsb
add
daa
addb
pop
push
dec
inc
pop
xor
dec
std
mov
lods
int3
sti
jns
mov
adc
iret
or
add
pushf
dec
mov
and
add
adc
add
test
shl
adc
imul
sahf
rcrl
mov
out
pusha
daa
push
repnz
insb
cmp
add
jb
stos
cltd
cwtl
in
ret
or
imul
xchg
push
and
dec
in
xchg
xchg
test
and
loop
out
js
add
push
bound
add
std
aam
jbe
jl
xor
add
and
add
lret
rol
or
or
addb
push
add
pop
lea
sbbl
add
mov
cltd
xchg
jg
add
sub
add
loopne
push
add
mov
inc
sub
add
sbb
incb
add
sub
add
add
imul
je
push
dec
addb
inc
in
add
cmc
mov
add
pop
mov
sahf
dec
xor
repnz
add
popa
xchg
rcll
add
mov
mov
push
ret
add
jge
outsb
mov
add
mov
add
loopne
test
adcl
xor
shll
cwtl
or
add
shll
or
pop
jl
push
add
cmc
xlat
add
push
add
sub
jno
ljmp
mov
ss
add
js
andl
and
cltd
adc
inc
cmp
xchg
sbb
add
mov
adc
pusha
hlt
leave
mov
sar
sbb
mov
cmp
cwtl
addb
fidivs
sbb
mov
add
add
mov
fadds
add
stos
add
sbb
fmuls
adc
sub
mov
add
mov
lea
js
adc
jbe
mov
jnp
inc
ljmp
add
aas
insb
ss
lcall
jp
push
dec
xor
jns
mov
lds
jp
jne
push
imul
or
add
push
xchg
and
mov
test
add
xor
add
add
add
and
add
fwait
sbb
shrl
add
enter
shrb
add
sahf
mov
add
js
cld
rclb
fimull
iret
testl
dec
pop
pusha
fwait
mov
add
loopne
add
test
add
iret
sti
inc
mov
mov
daa
dec
movsb
add
faddl
add
leave
or
add
adc
daa
push
inc
movsb
add
movsl
jg
mov
bound
imul
add
mov
jae
int3
xor
neg
sbb
addr16
fwait
outsb
cmpsb
add
inc
add
rorl
mov
add
popf
mov
enter
sti
push
pop
out
stc
cld
aas
xor
ficomps
repz
push
movsl
mov
adc
and
and
fwait
and
testb
mov
arpl
mov
nop
sub
sbb
cmp
adc
mov
add
and
add
ss
test
aad
mov
add
loop
mov
stos
addr16
fcomp
mov
add
mov
add
add
arpl
test
xchg
pop
jl
add
jl
push
and
push
mov
inc
mov
add
xchg
sarb
add
lret
mov
mov
lret
adc
mov
add
cltd
sbb
inc
jno
add
xor
nop
jle
scas
add
dec
adc
scas
add
jl
add
scas
add
inc
fistps
xor
xchg
and
add
sub
add
push
and
add
mov
add
dec
adc
add
add
stos
add
outsl
push
add
xchg
jbe
enter
add
jno
push
jle
dec
fimuls
add
daa
out
addl
inc
int3
adc
add
negb
push
xchg
gs
mov
add
test
mov
addb
test
and
jl
add
lods
jge
lret
ret
mov
shlb
add
add
push
add
mov
aaa
fwait
std
test
add
sbb
std
pushf
lahf
jne
inc
in
repnz
mov
adc
dec
sub
add
sti
or
add
ds
enter
pop
sub
aaa
jle
gs
xchg
fs
sub
cli
repz
jae
cmpsl
insl
inc
jbe
add
mov
ja
les
jmp
mov
add
add
add
out
lods
add
lods
add
and
add
mov
and
inc
push
mov
add
push
lds
popa
push
jge
in
lea
add
inc
and
loope
mov
out
inc
mov
stc
push
add
into
sub
pop
addb
addb
fs
xchg
and
add
pop
xchg
inc
cmp
add
jbe
repnz
inc
hlt
dec
fidivrl
add
divb
xchg
add
cwtl
daa
lock
pop
loop
add
add
ja
or
lock
add
dec
sub
add
sar
dec
add
add
push
add
iret
ret
ret
push
mov
add
push
add
scas
jno
mov
xchg
xchg
stos
add
mov
int3
add
test
out
test
jp
sbb
jmp
inc
jns
add
les
add
imul
jl
test
in
sub
add
push
add
fisttpll
add
imul
stos
add
pop
sti
insb
xchg
aas
loope
add
mov
lret
insl
mov
add
or
add
add
or
add
das
fcom
lret
out
jle
fstpt
push
pop
dec
pop
push
lret
jle
xor
mov
xchg
xchg
add
shrb
push
aam
orl
add
scas
add
cli
outsb
inc
jecxz
push
add
stos
add
jns
das
repz
je
push
push
sbb
aaa
mov
cmp
call
add
add
dec
fcomp
add
add
outsb
lds
out
cmp
jae
adc
fisubrs
add
or
shlb
mov
dec
rolb
pop
mov
les
inc
nop
jecxz
movsb
add
push
cwtl
incb
add
ljmp
jno
add
add
addb
push
or
add
add
cmp
add
sahf
movl
jg
insb
jb
add
outsb
lcall
add
add
or
mov
rclb
pop
or
add
add
xchg
out
cli
add
scas
add
inc
push
xor
xor
push
push
mov
and
add
bound
pop
mov
push
nop
loop
and
and
add
xchg
mov
add
sbb
inc
sub
leave
mul
out
ja
scas
add
xchg
xchg
jp
aaa
in
push
and
xor
sbb
pop
jmp
mov
xchg
dec
add
add
add
fs
xlat
inc
jns
sahf
pop
rorl
movsb
add
add
adc
dec
or
add
shlb
add
cmpsb
add
lahf
fwait
pop
pop
jno
loopne
add
inc
dec
pop
out
dec
pop
add
pop
dec
mov
adc
xchg
sbb
iret
or
add
add
stc
lret
add
enter
cmpsb
add
cld
jb
push
jle
ret
and
add
add
pop
xchg
sub
add
pop
xchg
gs
lret
mov
call
adc
push
popa
fwait
xor
lret
rcll
bound
xchg
jno
enter
data16
add
xor
adc
lret
jo
divb
popf
add
add
stos
add
cmpsb
add
inc
push
add
addb
adc
add
adc
mov
add
ja
jg
out
xor
add
dec
pusha
out
adc
inc
push
or
add
pusha
adc
push
rcrb
daa
and
dec
jno
aam
add
add
push
inc
add
stc
je
imul
shlb
ds
lock
add
push
rolb
int
cli
and
roll
in
inc
sub
add
lcall
inc
xor
pop
xchg
xor
add
add
adc
add
add
hlt
repnz
add
push
mov
pop
push
push
ja
loope
inc
clc
xor
stos
sub
add
add
pop
js
or
enter
add
add
add
mov
push
cmp
pop
dec
int3
cmp
cmp
jne
xchg
jecxz
sub
add
movsl
call
add
ds
mov
add
inc
arpl
mov
add
test
add
stos
and
inc
mov
cmp
pushf
cmp
mov
sub
add
push
mov
add
and
add
sbb
ds
int3
sbb
add
add
jge
out
mov
ret
clc
addb
daa
sbb
jae
or
add
aad
or
mov
add
mov
add
add
test
add
jmp
or
fwait
aaa
mov
xor
add
test
or
dec
pop
add
xchg
cwtl
mov
icebp
pop
in
movsl
js
sbb
add
add
mov
add
addb
jecxz
and
cmp
add
rolb
mov
add
mov
mov
test
add
add
add
and
push
add
cli
xor
add
cmc
xor
add
sub
jnp
int
xor
add
out
cmp
imul
insb
cld
dec
xchg
mov
jmp
jmp
loope
add
fsub
jmp
add
sbb
das
and
add
push
adc
inc
dec
mov
aam
xchg
add
imul
add
and
and
add
mov
add
xlat
outsl
or
int
ror
mov
outsl
jns
lcall
cltd
shrl
shll
push
insl
jb
xor
bound
je
out
gs
xor
stc
xchg
adc
add
sbb
add
fists
fldenv
push
pop
add
add
add
inc
mov
push
data16
push
jae
mov
add
pusha
adc
cld
jmp
call
cmpsb
add
sbb
dec
leave
rorb
add
add
mov
shlb
enter
out
sbb
cli
push
add
fnsave
xchg
push
add
add
rcr
jnp
mov
add
aam
add
xchg
inc
and
xor
jno
fimuls
mov
add
sbb
mov
add
shlb
xacquire
mov
pop
sbb
gs
inc
lea
add
inc
into
fsubs
xchg
jecxz
add
push
movsb
add
cld
jae
test
lea
mov
cmp
lret
adc
dec
out
insl
insb
pop
cmp
add
or
add
push
push
dec
arpl
movsl
or
dec
cwtl
xchg
or
add
lret
bound
in
mov
clc
enter
add
test
add
and
dec
adc
add
sbb
xchg
mov
loope
fadds
add
ret
add
add
inc
jl
cmp
jae
add
cmp
sub
add
dec
lcall
fldcw
add
mov
sbb
cmp
cmpl
add
xchg
aaa
adc
mov
inc
xchg
ret
das
sahf
dec
push
ljmp
ds
inc
test
add
dec
mov
add
fistpl
ss
into
dec
mov
add
add
sub
and
add
dec
nop
movsb
add
push
add
cltd
pop
loop
stos
lret
mov
add
shll
mov
bound
mov
movsb
add
sbb
out
jae
adc
roll
mov
rclb
movsb
add
popf
movsb
add
xchg
push
jle
rcl
mov
loopne
add
test
add
add
loop
cli
andl
pop
or
add
xor
sti
adc
add
fdivrl
add
sti
cmp
lods
scas
add
xchg
pop
rcll
add
xor
sarl
and
add
sub
add
int
add
pusha
xor
iret
repnz
add
movsl
xor
out
int
scas
add
jmp
add
jmp
popf
adc
inc
mov
sub
push
pop
and
add
inc
pop
push
push
push
and
add
aaa
dec
push
and
out
mov
in
mov
insl
jmp
sub
test
add
add
xor
jg
adc
add
mov
lret
adc
add
xchg
add
pusha
push
dec
das
ja
inc
xor
sbb
add
push
xor
fstpt
add
int
and
add
mov
and
add
sub
cwtl
outsl
inc
cwtl
cltd
frstor
rolb
add
inc
xlat
pop
lods
add
dec
fists
add
inc
and
inc
xchg
jae
cmpsl
jle
lret
xor
loope
mov
pop
push
and
add
sbb
jmp
roll
sbb
ja
ret
add
fiadds
inc
inc
fwait
dec
xor
xor
push
fstl
lock
in
vpand
add
add
cld
pushf
pop
sti
shrb
dec
ret
iret
cli
int3
mov
shll
add
xlat
inc
xchg
and
add
outsl
stc
pop
cmpsl
daa
add
add
mov
add
add
fidivrl
adc
roll
add
push
loop
add
sti
xchg
lcall
pop
add
add
add
push
les
frstor
adc
jae
sbb
or
add
repz
outsl
sub
outsb
lods
add
add
add
fistpll
shl
mov
pusha
pop
bnd
dec
and
sbb
add
roll
add
mov
jne
sar
and
sub
add
mov
add
and
add
cmp
jae
into
inc
hlt
add
ja
xchg
aas
push
push
mov
fldenv
mov
add
shll
mov
imul
cmp
orl
add
fs
sbb
stc
dec
hlt
adc
add
rorl
add
add
add
test
jae
cltd
aam
push
push
repnz
faddl
add
push
addb
xlat
mov
lods
add
dec
push
popl
ds
push
inc
ret
xchg
add
dec
push
jl
sub
addb
xor
inc
test
ficompl
je,pt
mov
add
dec
jbe
mov
sbb
icebp
xchg
jge
or
sub
jae
ljmp
pop
test
add
scas
sbb
add
xor
add
push
add
push
jae
or
add
push
and
add
sub
add
jecxz
std
add
add
add
imul
add
inc
icebp
enter
test
and
add
sbb
add
pushf
in
shlb
sbb
hlt
or
cmp
add
gs
fcomip
xor
call
shlb
inc
ret
inc
js
sub
testl
add
pop
fwait
jge
add
stc
scas
in
jg
and
xor
add
fisubrs
add
sbb
lds
add
scas
add
test
add
cmp
and
add
les
add
jae
gs
pusha
cmp
push
popa
cmp
jbe
add
fs
lock
rcrl
adc
rcrl
add
add
push
xchg
add
icebp
rclb
mov
add
leave
adc
add
sub
into
leave
sti
clc
push
xor
add
jl
sarl
gs
add
cmp
pushf
pop
adc
fstl
scas
add
mov
add
bound
shrl
add
jnp
int3
xor
jg
xchg
add
leave
arpl
add
push
xor
aam
lcall
jo
jne
imul
or
cld
mov
je
rclb
xor
adc
jne
cmpl
mov
add
js
add
lock
add
add
sbb
jo
or
add
insb
test
add
fisttpll
cwtl
jo
jnp
mov
mov
mov
adc
add
nop
push
add
cmp
dec
jnp
ret
scas
in
xchg
mov
add
mov
add
lcall
adc
xchg
add
mov
pop
adc
cmc
and
fsts
enter
add
push
add
call
mov
xchg
cmp
xor
xor
int
or
add
jno
xchg
insb
stos
sub
lret
hlt
cli
les
or
add
xor
dec
xchg
rorb
jl
mov
add
fwait
pushf
add
test
insb
pop
mov
add
and
add
nop
shl
add
add
adc
jg
ret
xor
add
ss
test
add
ret
cmp
fsub
enter
insl
fdivrs
add
add
add
ret
xchg
mov
mov
add
push
adc
add
add
add
add
and
add
or
js
ja
in
pop
mov
imul
movsl
out
add
aaa
movsb
add
dec
pusha
mov
add
test
add
shlb
ljmp
add
add
push
xchg
inc
and
add
mov
mov
mov
stos
add
pusha
push
mov
cmpsb
add
jns
jnp
loopne
jns
add
mov
add
jge
push
sub
scas
in
aad
je
add
xchg
or
fiaddl
push
jnp
or
add
inc
dec
popl
imul
and
sahf
ljmp
cmp
cltd
add
add
add
js
fdivl
in
or
add
add
inc
push
add
repz
test
add
add
lahf
xchg
loop
pop
stos
add
push
add
stc
add
add
cmc
and
add
mov
jo
testl
push
or
add
scas
jge
or
mov
add
incl
xchg
sbb
or
test
add
pop
lret
adc
popf
dec
inc
stos
inc
lds
jbe
scas
add
adcl
clc
jge
mov
in
add
addr16
sbb
movsl
and
mov
ja
mov
int
je
fbstp
add
gs
loope
add
or
movsb
add
sahf
add
pop
pushf
and
lods
je
mov
push
push
push
icebp
push
inc
sub
popf
inc
movsb
add
push
add
stos
add
adc
add
add
add
or
add
jmp
in
insl
add
cmp
pop
push
sbb
flds
aaa
ss
and
push
or
add
popf
add
cwtl
mov
sbb
test
add
add
out
jb
add
lcall
add
jecxz
add
test
add
jno
add
mull
add
adc
push
aad
mov
add
xor
push
incl
mov
scas
inc
push
jle
in
pop
mov
inc
mov
inc
gs
cmpsl
push
repz
sub
les
ljmp
push
add
aam
add
mov
dec
loope
add
mov
xor
stc
daa
enter
add
add
cmp
leave
js
add
lret
dec
pop
mov
add
or
add
repnz
ja
ja
cmpsb
add
xor
ret
movsb
add
aaa
aam
inc
and
add
insl
mov
add
add
jno
dec
dec
mov
addb
cld
in
fcmovnb
xchg
sub
add
jmp
jne
add
mov
mov
je
addb
cmp
test
add
dec
mov
in
mov
pop
xlat
mov
rclb
lock
leave
out
gs
bndstx
add
xchg
jo
add
ja
das
daa
in
cltd
push
xchg
fisttpl
jns
add
sbb
mov
lret
stos
add
std
or
add
std
jb
ljmp
lret
sbb
xchg
fwait
sbb
enter
dec
cmp
outsl
inc
call
cld
sub
popf
push
cltd
ss
xchg
shlb
xor
dec
lret
adcl
mov
xchg
add
or
aam
mov
dec
sbb
add
pop
ret
add
jp
mov
cmp
into
push
add
pusha
xchg
push
jo
add
stos
add
jae
xorl
push
mov
sbb
ficoms
and
mov
jmp
jb
ret
adc
cmp
test
add
add
ret
in
add
mov
mov
addb
scas
popa
pop
jnp
pop
jno
add
xchg
mov
mov
out
rcrb
cmpl
add
notb
push
add
mov
out
push
add
ljmp
add
js
insl
js
rcl
add
add
add
add
add
fwait
xlat
mov
add
mov
add
ret
mov
mov
bound
push
mov
leave
andl
out
addb
sti
dec
xchg
int3
dec
iret
fnsave
clc
sbb
inc
sahf
inc
fldt
daa
cmp
add
add
dec
in
scas
add
inc
mov
mov
sub
add
add
adc
pop
jecxz
fcomi
stos
add
xchg
add
adc
xchg
inc
out
xor
pop
mov
add
outsb
add
add
mov
pop
outsl
inc
adc
add
sub
add
cmp
pop
push
xchg
loopne
pop
and
add
shrb
test
add
jae
xor
into
rorb
or
add
icebp
sbb
xor
lea
add
mov
or
inc
pop
adc
insl
lods
add
mov
add
fbstp
mov
add
pop
sbb
call
stc
cmp
pop
cltd
jbe
push
xor
push
mov
add
add
ss
inc
cmp
dec
jno
add
add
cld
int3
clc
sbb
xchg
aas
stos
add
cmp
xchg
mov
add
pop
xchg
lds
add
hlt
fwait
xchg
jl
dec
pushf
shlb
add
cld
jb
add
in
pop
sub
and
mov
lret
fcmove
mov
add
add
mov
add
ret
cmp
cli
dec
cld
addb
xor
adc
lcall
add
add
lock
or
add
add
ss
add
or
popf
cmp
sub
add
addr16
dec
ljmp
push
lods
add
push
int3
mov
cmp
jns
jg
add
mov
add
jb
std
shll
ror
icebp
cmp
push
cmpsl
dec
jecxz
dec
adc
fldlg2
mov
ja
mov
add
add
add
jge
aad
add
stos
lea
push
ret
aam
pop
shlb
xor
pop
jl
mov
inc
add
add
rcl
jae
add
xor
in
mov
fwait
movsl
dec
out
inc
das
inc
out
cmc
inc
sub
dec
xchg
sub
std
dec
adc
add
cltd
cltd
dec
rcrl
and
add
add
test
mov
pop
cmp
mov
add
pop
mov
xchg
addb
pop
adc
mov
cmp
inc
int
add
adc
int3
pop
lods
adc
sub
add
out
cld
lret
xor
repnz
xchg
xchg
xlat
and
out
add
add
shl
inc
sub
add
sbb
push
out
shr
sub
mov
outsb
insb
jne
call
mov
adc
in
mov
loopne
dec
fnsave
out
add
mov
rcr
cmp
jbe
jno
test
fsub
test
inc
lcall
shrb
hlt
sub
push
add
lahf
xchg
mov
add
push
inc
popf
xchg
cld
fidivrl
pop
cmpsl
ret
fildl
loope
add
cvtps2pd
leave
fcomi
or
or
add
shlb
push
insb
stos
in
into
ds
dec
shrl
xchg
add
add
sub
add
add
mov
add
add
add
push
add
pop
xchg
mov
add
jne
add
push
inc
dec
outsb
mov
subl
jo
xchg
add
clc
loop
xchg
xor
adc
dec
pop
add
add
adc
add
ss
in
add
out
add
mov
add
push
imul
ret
std
imul
or
add
jbe
add
mov
orl
jae
movsl
mov
add
add
push
push
fdivl
dec
movsl
sub
and
add
mov
push
pop
inc
sbb
test
add
ljmp
push
pusha
ljmp
inc
sbb
pop
xchg
xchg
jo
xchg
sbb
add
je
pop
jecxz
add
out
or
pop
and
add
push
xchg
pop
test
xchg
inc
mov
popf
out
mov
aas
fsubr
test
add
sub
add
mov
rolb
add
ja
cmp
mov
pop
jb
ret
add
rcrl
xor
add
cmp
inc
dec
inc
mov
pop
fistps
loopne
sbb
addb
fisttps
sub
shll
and
fadd
scas
cmp
add
push
inc
cmp
xchg
push
loope
inc
inc
fwait
xor
stos
and
dec
sahf
jnp
add
push
ljmp
add
or
add
xchg
cmp
xchg
xor
push
add
jb
repz
imul
in
mov
add
add
cmp
xor
mov
loopne
jmp
xchg
fs
cmpl
and
or
add
push
xor
jbe
dec
fcmove
and
add
sbb
addr16
push
jmp
mov
inc
xor
mov
add
aam
xor
bound
test
add
sbb
popf
cmpsb
add
lds
test
insb
lret
add
add
in
cmp
push
mov
mov
add
test
pop
clc
cmp
sbb
pop
int
add
add
lds
add
cmpsb
add
into
into
outsl
movb
in
cmc
jb
pop
mov
pushf
cltd
push
sbb
push
add
paddsb
jl
push
mov
add
clc
jle
add
mov
pop
hlt
out
mov
jge
into
push
xchg
mov
rol
and
cmp
mov
lock
pop
and
add
add
dec
pop
sbb
add
hlt
push
repnz
adc
add
loop
repnz
inc
xchg
idivb
push
pop
mov
add
lds
mov
pop
out
sbb
add
in
daa
xchg
inc
inc
mov
sub
add
addb
ja
dec
inc
cmp
dec
in
sbb
add
sarl
adc
out
sbb
fadd
jb
adc
xchg
add
cmp
addr16
add
push
insl
lock
into
mov
jo
int3
shr
inc
xchg
add
fld1
sbb
sbb
adc
mov
add
mov
xor
arpl
and
add
inc
shll
xor
dec
and
mov
outsl
pop
bound
add
rcr
mov
add
push
cmp
imul
sbb
cli
lods
or
add
loopne
mov
aad
fimull
aam
mov
jbe
add
scas
add
mov
bnd
shlb
ret
stc
xchg
mov
push
add
data16
mov
mov
insb
pushf
xor
push
add
jno
add
add
dec
inc
inc
je
add
adc
fdivrl
sbb
adc
or
mov
call
mov
add
cmp
nop
sbb
or
add
dec
mov
push
and
add
add
xor
add
sbb
add
incl
add
inc
pop
push
pop
jns
xchg
mov
add
lret
pop
add
sub
add
add
add
add
lret
jbe
stc
inc
mov
movsl
int
xchg
add
je
sbb
add
addb
xor
pop
mov
add
and
divl
add
jp
lods
fidivrs
push
bound
mov
add
idivb
jb
test
add
inc
xchg
jnp
ljmp
add
or
das
push
mov
addb
xchg
add
or
add
add
lods
add
popf
out
bound
jp
adc
push
leave
outsb
sarl
jnp
cmc
loop
insb
add
add
pop
xchg
xchg
mov
lcall
mov
add
push
add
pop
push
testb
add
add
inc
adc
pop
mov
add
push
dec
cmc
mov
add
inc
adc
xchg
ds
mov
pop
rcrb
cld
in
sub
add
sub
add
add
jl
add
or
jle
addr16
hlt
lods
add
mov
aas
test
add
jae
add
jp
jmp
mov
add
dec
mov
mov
fwait
mov
jo
adc
add
repnz
aaa
cmp
mov
mov
int
inc
and
add
fldcw
cmp
add
jp
add
inc
imul
mov
add
add
inc
rcll
sub
add
add
lds
ljmp
add
nop
jnp
int
xor
mov
lret
inc
and
add
adc
mov
add
push
cmp
add
xchg
ret
stos
sbb
jmp
and
add
pop
and
add
inc
mov
jno
add
mov
add
iret
int
data16
les
add
inc
jno
or
add
mov
cmp
sbb
mov
scas
add
and
add
mov
add
and
add
add
jle
pop
sub
xchg
das
dec
fwait
addb
mov
movsl
inc
into
lcall
test
in
cli
jne
push
dec
pop
xor
mov
outsb
push
leave
dec
mov
aad
add
cwtl
jbe
cmp
add
or
add
adc
ret
sbb
jg
dec
mov
push
mov
add
in
shlb
inc
sub
pop
jb
pop
pop
enter
and
filds
pop
rorl
sbb
je
mov
xor
dec
lcall
adc
stos
add
sahf
test
push
xchg
jp
add
jl
pusha
scas
add
lahf
lahf
xchg
inc
mov
pusha
sbb
mov
add
xchg
aaa
cld
inc
xchg
mov
aaa
push
in
dec
test
add
add
and
or
add
popf
jae
mov
add
mov
arpl
add
shrl
jmp
cmp
sub
sub
add
and
jns
mov
roll
cmpsl
iret
cmp
xchg
add
push
test
add
jecxz
outsl
movsb
add
int3
mov
iret
addb
xchg
cmp
mov
or
add
adc
xchg
data16
scas
add
jecxz
arpl
arpl
pop
data16
dec
inc
mov
add
clc
leave
pop
jp
push
icebp
nop
and
push
dec
and
sbb
aaa
cmp
add
dec
xchg
outsl
into
xchg
lret
out
test
add
add
stos
add
pop
cmp
imul
add
mov
add
add
hlt
aaa
and
push
in
jmp
or
and
mov
add
dec
xchg
aaa
mov
mov
and
add
jl
ljmp
add
pop
pop
lret
out
clc
sub
xor
repnz
add
imul
out
lea
sub
add
and
add
push
jecxz
push
add
dec
clc
loopne
dec
jg
jge
pop
repz
ljmp
out
sbb
loopne
and
add
add
xor
out
int
mov
add
mov
push
loop
ja
add
and
add
cmpsl
cltd
dec
lcall
push
pop
aad
out
outsl
ret
cmp
adc
xchg
jge
cmc
notb
mov
mov
mov
add
adc
pop
lcall
jbe
add
cmc
test
add
sbb
in
jns
jns
jb
or
add
fsubl
add
xchg
mov
mov
rcll
fildll
add
cmp
or
add
add
addb
add
mov
add
add
push
cld
xor
pop
mov
add
dec
call
and
add
adc
add
add
or
add
adc
mov
add
jp
fsubl
pop
into
mov
mov
add
ret
not
test
xor
repz
shr
pop
pop
jp
xor
pusha
push
add
test
add
add
test
add
inc
or
iret
and
add
fsubs
add
addb
and
add
sbb
imul
sub
xchg
push
out
dec
mov
shll
add
cmp
sbb
push
add
cmp
or
add
cmp
into
sarl
mov
cmpsb
add
mov
repz
add
enter
not
push
add
fs
pop
inc
hlt
sbb
add
mov
add
push
add
sub
dec
dec
inc
gs
xor
and
add
mov
add
dec
push
add
cld
addb
mov
movsl
dec
jmp
popf
int3
sub
jae
add
xor
neg
pop
addb
rclb
lds
adc
add
add
push
mov
clc
aaa
xor
add
loope
jno
jns
gs
insl
pushf
dec
mov
add
mov
lcall
aam
fwait
pop
push
dec
aam
add
jo
xlat
ljmp
fstpl
jae
mov
add
add
push
lret
jae
lock
popf
adc
shr
mov
pusha
call
mov
pop
adc
add
cwtl
sub
add
daa
add
add
push
sbb
add
add
add
rep
mov
testb
daa
adc
cmpsb
add
enter
mov
add
sti
daa
std
daa
mov
add
add
mov
cmp
cmp
mov
cmp
mov
lahf
cmpl
fdivrl
bswap
in
mov
xchg
add
adc
pop
je
in
push
add
dec
inc
aas
lods
add
jmp
xor
jae
inc
std
pop
xor
sub
addb
test
add
aas
sub
addr16
pushf
mov
lea
pushf
pop
icebp
or
mov
add
xor
add
adc
cmp
pop
into
xchg
add
cmc
jns
add
add
stos
add
push
add
addb
jmp
cmpl
or
add
clc
clc
cmp
pop
cltd
out
mov
add
mov
aad
add
xlat
fdivs
add
add
sbb
pop
xchg
and
add
lret
gs
add
add
test
test
add
movsb
add
cltd
mov
xor
fs
test
pushf
shrl
add
inc
jbe
out
inc
push
add
add
add
jae
inc
cmp
sub
jl
sbb
inc
jmp
or
add
cli
sub
add
sub
add
xchg
mov
and
add
and
add
xor
nop
pushf
ror
xchg
cli
jmp
add
pop
je
inc
test
in
jmp
unpckhps
arpl
cmp
mov
fidivs
mov
sub
add
add
sub
test
add
sbb
jp
xchg
sahf
add
push
insl
xchg
or
add
push
adc
push
add
fsubr
testl
jno
add
imul
mov
add
add
add
sahf
fidivs
inc
nop
sbb
sub
add
or
add
mov
dec
jns
mov
loope
icebp
dec
and
add
filds
add
mov
add
aam
adc
and
add
and
add
jae
mov
mov
insl
sub
ds
add
xchg
in
les
add
lods
sbb
jge
xor
mov
mov
xor
sub
stos
jp
mov
xchg
bound
enter
add
sahf
mov
add
inc
inc
push
aaa
jg
add
cmp
inc
cld
cld
gs
sub
add
lock
dec
test
add
in
lds
and
add
mov
add
into
or
add
sbb
add
add
add
and
add
adc
xorl
pop
nop
mov
pop
pop
insb
xor
mov
insl
dec
push
add
mov
xchg
bound
push
leave
ljmp
ljmp
stos
add
sub
rorb
pop
xor
fwait
daa
jle
dec
iret
gs
push
add
push
lock
fwait
sbb
mov
clc
cmpsl
fldl
js
lahf
fidivl
in
lods
add
shlb
add
mov
sbb
sub
sub
sub
add
std
inc
int3
sbb
in
jle
push
add
lahf
push
mov
mov
inc
cmc
in
push
call
rcrl
xchg
imul
add
fdivs
mov
iret
aas
loope
push
pop
mov
xchg
test
add
push
aam
inc
jne
xor
ror
cli
inc
ret
add
or
add
adc
push
adc
mov
mov
jns
mov
shll
addr16
xlat
pusha
incb
add
xor
add
mov
add
sub
add
or
add
out
and
pop
scas
add
or
pushf
iret
insb
rcrl
push
pop
ds
add
add
sbb
mov
jl
add
push
pop
xchg
int
adc
add
cmp
sbb
cwtl
pop
lahf
pop
rcll
adcl
add
call
arpl
sub
leave
cmp
xchg
sub
add
jbe
sub
into
or
add
pusha
sub
add
testl
xchg
je
add
sub
add
cmp
std
daa
add
add
jmp
aad
xchg
jno
add
test
mov
add
out
add
xor
addb
das
test
add
jbe
add
nop
xor
popf
mov
add
or
add
sbb
add
dec
jnp
enter
jne
mov
dec
jnp
into
sub
add
jns
and
add
dec
fwait
clc
imul
mov
mov
dec
xchg
mov
add
fwait
fwait
ds
push
or
add
add
ss
lret
loope
jp
and
add
in
xor
inc
sahf
adc
in
jno
mov
fiaddl
inc
or
add
call
jae
aaa
push
pusha
dec
fucomp
cmp
and
add
add
lret
push
sub
xchg
xchg
add
aad
cmpsl
jae
arpl
add
add
repz
push
mov
fldt
setb
cmp
shll
add
and
add
mov
add
dec
inc
lock
add
jns
stc
mov
push
pop
sahf
popf
clc
imul
cld
push
add
mov
mov
and
add
add
jne
or
movsl
je
out
and
add
add
add
add
mov
xchg
jecxz
fs
mov
add
or
xchg
add
negb
xchg
mov
push
adc
das
cli
fs
add
adc
dec
cwtl
das
inc
sahf
outsb
jo
mov
mov
mov
gs
add
mov
push
xor
add
push
jns
addb
hlt
xchg
cmpsl
mov
jle
xor
je
adc
into
sub
adc
sbb
fistpll
dec
shrl
jne
add
add
jecxz
inc
mov
call
fadds
add
int
imul
rorl
jmp
test
daa
mov
add
add
aaa
lcall
std
int3
pop
and
xor
add
xor
out
sub
shrb
cwtl
or
add
insl
mov
pop
lods
push
cltd
jecxz
xchg
scas
add
jno
mov
cwtl
js
adc
imul
lahf
xchg
add
add
xchg
js
pop
bound
shl
mov
push
nop
int
adc
push
aam
shll
xor
add
push
cmp
cli
loop
pop
add
add
fiadds
rcrl
pop
xor
mov
cmpsl
push
int3
jecxz
add
mov
add
ss
push
add
xchg
inc
out
mov
add
add
jae
lods
jns
cmp
bsf
je
mov
add
iret
dec
add
add
repz
addb
fsubl
add
mov
add
add
cld
add
jge
push
arpl
add
pop
mov
mov
add
add
mov
and
out
push
aaa
mov
or
mull
enter
add
and
add
fstl
inc
ljmp
lea
add
add
stc
mov
add
in
mov
push
inc
mov
and
add
stc
jge
mov
sub
mov
add
test
mov
add
in
test
add
xadd
xor
imulb
add
add
xchg
cmc
iret
push
inc
push
faddl
pop
test
add
xchg
add
sar
jle
jno
hlt
xchg
mov
out
xor
insb
sti
jae
add
mov
inc
cwtl
add
and
outsb
mov
mov
mov
add
inc
enterw
leave
add
movsl
cmp
add
pusha
pop
push
add
add
test
add
jb
fsub
jae
mov
add
cmp
mov
std
cmp
div
sub
mov
in
jp
jl
and
add
add
into
ret
jmp
icebp
addr16
popf
int
movsl
nop
shll
pushf
leave
ja
add
lret
loopne
sub
add
add
test
add
add
add
mov
xor
push
xor
add
push
or
or
xchg
sbb
fildll
mov
cmp
data16
lds
test
add
cmp
add
add
add
push
imul
pushf
dec
pusha
std
xchg
add
push
lret
sub
add
lods
int3
outsb
or
mov
cmp
jmp
or
add
stos
in
adc
lret
test
jge
sub
push
aad
add
out
mov
xchg
nop
loope
mov
add
adc
ja
push
jb
or
stos
add
add
mov
push
aaa
xchg
add
add
mov
aaa
sub
add
push
ds
mov
int
jl
test
add
scas
add
cmp
iret
test
insb
xor
je
pusha
or
imul
mov
add
sub
add
jge
cli
jecxz
rcr
add
addb
out
call
push
stos
int3
enter
cmp
rcrl
add
adc
add
or
add
push
sbb
add
add
push
lods
push
outsb
in
xor
aaa
mov
mov
cmp
lds
push
add
leave
lcall
dec
fwait
and
pop
and
jge
push
push
jae
das
push
sbb
sti
fcomip
pusha
add
sbb
sub
add
adc
add
or
je
cmovl
cmc
out
lret
or
add
ds
lahf
add
stos
mov
js
adc
mov
aam
adc
dec
sbb
add
xchg
inc
mov
pushf
dec
scas
add
ss
xchg
shll
xor
add
repnz
sbb
adc
ja
xchg
add
out
lret
clc
sahf
sub
add
pop
repz
into
sub
inc
cli
add
add
jnp
addb
inc
or
add
pop
push
and
movsb
add
jle
add
sub
add
jecxz
bswap
arpl
cvtpi2ps
add
cmp
push
cltd
imul
loopne
cltd
fsub
test
add
ret
mov
gs
dec
push
bound
dec
jnp
rorb
add
mov
add
je
loop
sub
add
fstp
mov
fs
call
fmul
stc
sub
add
add
mov
add
roll
mov
std
adc
push
mul
jge
add
mov
lods
add
adc
push
add
das
push
lods
aad
add
jnp
subl
fstpl
mov
mov
add
add
pop
cli
xchg
leave
sti
addr16
add
ljmp
jno
pop
sub
dec
mov
sub
add
ds
add
int3
add
add
lods
add
lahf
push
xchg
mov
add
add
iret
in
mov
add
mov
imul
xchg
add
sub
clc
adc
add
stos
add
xor
dec
inc
xchg
fsubl
push
out
mov
inc
sub
add
add
add
sub
ret
xchg
sahf
dec
and
add
push
push
inc
insb
add
add
iret
jnp
adc
out
je
jb
add
mov
and
add
push
gs
inc
push
cmc
dec
add
jmp
addb
cmp
xchg
xchg
stos
add
jg
adc
int3
sbb
ljmp
repnz
sbb
pop
inc
add
or
lods
and
add
xor
stc
dec
stos
add
sbb
lret
add
add
adc
pop
insb
je
add
xchg
in
inc
cld
out
movsb
add
mov
and
add
sbb
inc
imul
scas
add
jmp
add
imul
stc
lret
aaa
dec
xchg
jmp
pop
test
add
pop
and
add
divl
add
and
mov
jmp
movsl
aaa
and
add
movl
pop
xor
addb
pop
out
jmp
inc
or
add
add
stc
dec
mulb
inc
pushf
stos
mov
add
pop
js
pop
inc
stos
add
add
pop
outsl
fistpl
shr
add
add
mulb
add
push
fcomps
dec
pop
jmp
inc
adcl
add
ss
lock
mov
add
add
stos
lret
sbb
test
add
dec
push
fwait
movsl
jns
in
pop
call
imul
sub
add
mov
push
mov
xchg
and
or
add
pmaddwd
sbb
icebp
inc
pop
popaw
decl
test
std
xchg
add
add
sbb
jg
dec
xchg
iret
jnp
add
add
mov
cld
nop
popf
lock
popa
pop
js
test
add
xor
out
scas
add
addb
sbb
fwait
dec
inc
jb
xor
mov
rcr
jae
lods
add
popf
test
les
sbbl
add
jg
popf
inc
cmp
pop
lahf
add
ret
mov
sbb
pop
sahf
xlat
mov
aam
push
in
mov
jle
int3
aaa
mov
daa
cmp
popf
stos
cmpsb
add
call
cmpsl
out
ret
add
push
add
scas
add
sbb
scas
add
xchg
push
mov
sbb
popa
sub
add
adc
cwtl
outsl
dec
jb
push
pop
hlt
sbb
pop
push
add
push
add
psubd
push
add
shrl
add
dec
sub
fsubl
jp
int3
xor
fisubrl
pop
sbb
lods
pop
cmp
std
pop
push
pop
dec
sub
add
xor
dec
add
add
in
dec
jecxz
sub
add
add
cwtl
jae
jge
sub
pop
sub
add
and
add
push
cli
ja
repz
int3
sub
inc
xchg
lds
add
add
in
fcompl
add
cmp
jae
cmc
popa
jb
adc
loopne
cmp
loopne
cli
jnp
mov
add
insl
push
add
outsl
mov
add
jbe
rcll
jecxz
test
add
jmp
xchg
add
pop
mov
xchg
xor
je
repz
add
push
pushf
arpl
mov
jno
int3
mov
add
cwtl
in
push
xor
fcmovb
popa
int3
cmpsl
xor
inc
dec
jmp
in
mov
add
cmp
call
push
inc
repz
loope
dec
incl
sbb
idivb
inc
mov
xchg
lahf
dec
out
jo
or
jbe
adc
lea
pop
cmp
iret
add
in
fildll
add
pop
sbbl
iret
fnstenv
mov
add
pop
inc
mov
imul
add
pop
cmp
push
fdivr
jecxz
mov
sub
add
repz
pop
push
mov
scas
add
mov
add
addb
test
add
iret
mov
pop
enter
xor
mov
add
add
and
lret
add
das
movsb
add
btc
add
add
mov
jg
add
icebp
test
push
popa
add
add
andl
add
adc
jle
push
rcrb
enter
dec
sub
add
or
add
jg
xchg
xor
xor
in
fildl
jno
add
pusha
mov
add
lahf
imul
mov
add
cmp
adc
jb
add
mov
jnp
pop
fists
sub
stos
add
jo
push
pop
data16
int
cwtl
pop
sbb
xchg
add
add
ja
add
popf
int3
xor
add
mov
add
stos
add
mov
adc
xor
dec
shll
xor
sub
hlt
fcoml
mov
push
adc
xchg
in
stos
or
add
dec
pop
xchg
rcll
iret
mov
icebp
aad
addb
lcall
sub
ljmp
dec
dec
lock
imul
int
dec
movsl
push
xchg
add
mov
xor
sbb
add
call
add
mov
fs
sahf
dec
mov
add
dec
and
sub
add
test
adc
test
add
dec
nop
jmp
into
jl
mov
mov
inc
mov
inc
xor
js
into
or
add
clc
notb
pop
xchg
lret
sub
add
dec
adc
mov
fidivrs
lcall
and
add
sarb
out
xchg
mov
pop
lahf
aad
adc
mov
add
adc
pop
jge
jecxz
xchg
mov
cmpsw
sbb
adc
cltd
movsl
sub
adcl
inc
inc
fwait
xchg
mov
add
idivb
add
lock
adc
xchg
pop
and
test
in
xor
das
test
stos
jnp
scas
add
addr16
and
mov
stos
shl
imul
mov
insl
mov
mov
or
add
and
shrl
inc
mov
out
push
xor
sub
add
xchg
xchg
clc
mov
add
pop
iret
sbb
add
sub
add
movzbl
insl
jg
sub
add
out
lahf
out
sbb
xlat
mov
repz
stos
add
push
mov
add
aam
add
fcoml
sub
vrcpps
adcl
ficompl
data16
add
test
movsl
fnstenv
push
std
pushf
pop
push
mov
sahf
call
sub
add
stos
cltd
out
xchg
imul
add
pushf
loope
mov
xchg
fs
xchg
movsb
add
dec
aad
iret
lods
inc
shl
dec
adc
jmp
add
adc
in
shll
lods
pop
mov
int
sbb
adc
mov
jl
add
je
sub
pop
test
add
and
pop
and
mov
gs
add
add
add
or
add
test
mov
add
add
cld
push
sbb
push
stos
add
jg
jbe
or
pop
xor
add
cmp
and
add
inc
inc
lods
add
xor
ljmp
push
add
loope
xchg
mov
jl
jae
sub
mov
sbb
xor
leave
add
push
pusha
xchg
jge
test
add
or
add
enter
add
lret
jge
jecxz
or
add
out
sahf
jbe
scas
mov
and
sub
add
inc
shll
add
stos
add
rcl
movsb
add
stos
int3
xchg
push
cmp
xor
add
in
add
fdivl
inc
and
add
test
add
pop
out
ljmp
add
or
jmp
mov
pop
hlt
imul
add
mov
scas
and
dec
or
add
sub
add
push
dec
or
push
mov
xchg
loopne
iret
out
inc
rclb
jns
add
add
in
addb
jecxz
in
js
push
iret
aad
fs
cld
xchg
dec
add
add
sahf
push
mov
out
mov
push
adc
ficompl
dec
mov
add
add
adc
cltd
loope
cmp
icebp
mov
lea
pop
wbinvd
adc
mov
add
add
add
sti
cmp
xchg
add
movsl
push
mov
add
jno
mov
xchg
fsubrl
inc
lahf
shl
mov
add
jo
add
sbb
mov
push
ss
lret
dec
pop
int
dec
jl
pop
pop
pushl
add
add
add
lods
add
mov
cmpsb
add
or
mov
cmp
add
mov
mov
add
add
add
jnp
sbb
test
add
add
adc
inc
or
pop
popf
pop
loopne
lea
pop
dec
leave
cmp
ror
add
jbe
xor
pop
pop
clc
cwtl
mov
pushf
aaa
push
add
push
sarl
stos
add
sub
andl
mov
sub
add
fiadds
or
add
add
add
fsubrs
ja
gs
add
cltd
sub
add
add
cmpsb
add
push
call
ret
jecxz
or
add
add
sarb
mov
test
push
fimuls
push
dec
sti
je
mov
mov
pop
in
loop
sbb
mov
rep
jne
ret
add
sub
mov
inc
lahf
inc
xor
fdivp
pusha
arpl
stos
jns
add
clc
sahf
int3
xchg
repnz
in
mov
add
movsl
lcall
sahf
mov
bound
sbb
lds
add
popa
aam
add
xchg
cmpsl
int
mov
mov
add
icebp
mov
in
test
add
pusha
mov
and
add
add
add
rorb
fdivrs
push
xor
enter
inc
mov
pop
lods
add
dec
xor
add
fcomps
jg
pop
mov
repz
cmp
add
cmp
in
xor
jg
mov
add
add
and
das
iret
push
push
pop
popa
in
lcall
push
mov
add
scas
add
inc
cmp
add
cmp
lods
pop
cmp
std
jb
int
dec
mov
sbb
or
pop
test
clc
imul
add
lret
add
mov
cli
in
xor
int
pop
add
les
add
sub
add
in
add
mov
fbstp
inc
xorl
jae
push
dec
sub
popa
ljmp
cltd
xor
in
fisttps
in
fs
lods
add
add
mov
add
pop
xor
add
push
loop
loope
ret
mov
cli
and
nop
push
imul
add
xor
arpl
pushf
jno
lock
lods
repnz
xchg
push
push
add
cmp
outsb
pop
test
add
or
add
push
ss
insl
imul
popf
adc
add
push
negb
test
add
dec
cmp
add
iret
inc
icebp
ss
add
mov
add
jle
divl
jbe
fmul
and
sub
xor
lods
add
add
mov
jns
mov
test
add
repz
sbb
dec
jle
into
push
add
cmp
ja
ret
sbb
add
shll
cltd
mov
or
add
cld
aaa
fnstsw
and
add
cli
addr16
sbb
xor
cmp
rep
xor
add
cmp
and
xor
mov
outsl
fbld
add
mov
cmp
xchg
orl
call
add
pop
mov
add
and
out
add
cmovg
dec
sub
add
sbb
jmp
out
lcall
add
fdivl
icebp
xchg
mov
ss
out
pop
in
and
jne
dec
test
iret
popa
or
add
mov
fiaddl
xchg
sarb
mov
out
jne
orl
adc
push
push
add
movsb
add
xchg
cmp
jno
pop
incl
mov
or
add
push
loope
insl
or
add
push
rcrb
mov
scas
add
dec
fimuls
or
add
leave
add
jae
sbb
dec
gs
jmp
jl
add
mov
mov
psubb
and
add
push
popa
in
cltd
scas
add
sti
mov
add
add
ss
orl
add
sub
in
mov
scas
pop
sub
add
pushf
jbe
pop
movsl
and
add
push
adc
inc
inc
rcrb
into
push
mov
or
add
add
adc
sbb
sub
add
mov
lcall
add
add
ret
lods
add
rorl
mov
add
stc
lret
cmp
sub
add
jecxz
unpcklps
push
pusha
inc
mov
and
fdivs
ja
psubsw
and
add
or
xchg
leave
adc
mov
sub
add
in
rorl
aaa
dec
dec
call
add
add
add
ja
dec
pop
lahf
btr
push
repz
mov
add
inc
jle
xlat
test
add
int
in
pop
pusha
aad
push
add
jo
add
inc
pop
fwait
lock
add
iret
mov
mov
addb
sbb
mov
test
add
add
out
add
in
xchg
sahf
ret
jge
add
insl
imul
test
and
add
cwtl
mov
jns
ror
push
xor
add
scas
add
rcrl
and
add
add
add
adc
add
sbb
pushw
add
cmp
aam
push
jge
add
and
dec
jns
pop
add
add
sub
push
xor
inc
push
insl
clc
mov
fmull
pusha
ret
mov
add
int
lahf
sbb
cltd
je
mov
ljmp
add
add
add
jecxz
add
add
mov
pop
movsl
int
inc
or
add
add
jp
sbb
outsb
jl
dec
movsl
cmp
add
addb
imul
add
inc
gs
mov
scas
add
cli
insl
or
xchg
sub
mov
rorl
add
adc
test
add
push
ljmp
dec
sbb
add
popf
or
add
sbb
add
adc
mov
xor
pop
rclb
push
xchg
push
pop
pushf
test
add
int
sbb
arpl
outsl
mov
add
xchg
add
in
scas
adc
leave
inc
jl
cmc
dec
or
add
fidivrs
fsts
jle
adc
add
inc
clc
je
mov
mov
and
mov
add
add
ja
out
or
push
bound
cmp
push
add
movsl
cwtl
xor
mov
cmp
mov
out
add
cmp
pop
push
xchg
sbb
mov
add
pop
notl
in
jle
pop
xchg
add
aam
dec
fsubr
dec
stos
add
in
fsubrp
sbb
add
cltd
out
xor
cmp
xchg
decl
add
xor
dec
dec
movsb
add
mov
add
add
jg
add
push
sub
add
insl
stc
push
add
sbb
je
mov
cld
rorl
mov
add
add
inc
popa
popf
ds
and
mov
cmp
xchg
sub
add
std
or
add
cmp
add
rcl
addb
lahf
cwtl
pop
aam
dec
ss
inc
iret
in
out
add
add
adc
shll
add
and
add
jge
das
stc
fisubs
inc
mov
cmpsl
je
stos
cld
icebp
jl
sarb
gs
inc
int
sahf
iret
lret
cli
cld
jb
cltd
std
test
popa
jmp
icebp
push
dec
sub
add
sub
add
mov
jne
cmp
add
pop
cwtl
shlb
ret
repz
add
jbe
push
push
mov
test
add
add
cmc
scas
add
in
xchg
add
pushf
stos
add
adc
lods
xor
add
dec
mov
daa
pop
test
lea
daa
imul
das
addr16
mov
push
repnz
lcall
cmp
mov
or
add
xor
jns
dec
in
mov
sbb
data16
xchg
push
jns
addb
cmp
lret
xchg
add
das
sahf
sub
add
mov
add
add
mov
addb
mov
add
jns
fstl
fwait
push
aaa
arpl
pop
pop
xor
pop
popa
mov
and
add
cmpsb
add
mov
add
pop
cli
fs
sbb
insb
pop
add
add
add
dec
push
add
call
add
mov
ja
sub
jle
bound
fidivrs
jae
mov
add
add
bound
popa
ret
mov
push
sti
in
push
lret
mov
sub
add
sub
add
stc
nop
fmull
add
push
stos
pop
lock
add
push
into
add
add
in
das
pop
out
mov
ret
push
xchg
sbb
xor
aas
sbb
inc
and
mov
add
dec
or
add
mov
add
push
add
pop
sub
add
add
sub
adc
test
addb
bound
leave
push
lock
mov
pop
inc
or
sti
cmp
mov
jg
insl
jne
aad
test
add
push
cmpsb
add
cmpsb
add
cmpsb
add
aas
xchg
pop
sub
add
mov
movsl
lcall
add
cwtl
jmp
add
push
js
add
fiadds
dec
xchg
xor
and
add
add
push
js
int
cmp
xchg
sub
add
push
sub
add
mov
push
push
ud0
add
add
aas
in
cltd
popa
iret
addb
data16
leave
jo
lret
pop
repz
mov
cmpsb
add
and
add
shl
pop
cmpsb
add
lcall
shlb
ljmp
xor
jmp
fdivrs
bound
addb
mov
add
aad
aas
inc
push
aam
insb
fdivrl
lcall
add
or
add
push
add
jl
pushf
push
cli
xchg
mov
lock
add
leave
icebp
gs
add
xlat
idiv
add
ret
xchg
arpl
push
or
add
and
add
xlat
sub
add
and
add
scas
push
inc
xlat
ret
sbb
enter
sub
add
jnp
add
test
add
and
scas
pop
xor
add
lock
clc
ss
pop
cmp
sbb
shrb
pop
pop
outsb
push
lock
jns
stos
add
test
add
jns
add
add
addb
lahf
sub
add
cli
fisubs
ja
jg
rcrl
sub
lods
add
loope
xchg
sbb
add
ja
and
mov
mov
sbb
add
add
sbb
push
mov
mov
add
in
add
add
xchg
rolb
fstps
add
fbld
mov
add
idivl
push
xchg
jle
lea
fldl
add
push
mov
jg
add
addb
fwait
push
and
add
push
into
jno
dec
sti
push
jp
add
add
scas
add
imul
adc
loop
add
notl
push
push
xlat
fwait
sub
add
loope
add
daa
xchg
repnz
add
in
inc
cmp
nop
testl
dec
std
popf
and
inc
pop
jne
add
xchg
add
sti
cltd
pop
mov
repnz
mov
mov
mov
sub
add
mov
sbb
add
add
mov
rclb
add
push
test
and
add
out
das
mov
sub
push
push
imul
mov
add
lret
and
add
add
add
push
add
daa
cwtl
ljmp
cmp
add
aaa
inc
negb
xor
movsb
add
ds
daa
popa
fucom
adc
mov
addl
fwait
out
test
add
inc
dec
movl
add
fsubl
dec
adc
fistpll
insb
xchg
add
push
cli
lods
add
rcrl
sub
add
push
aaa
jmp
dec
ficoms
or
cmp
push
add
fcoms
fs
add
pop
mov
add
imul
add
sbb
xor
pop
xor
ljmp
add
vmread
ja
stc
cltd
and
and
add
aaa
push
dec
lret
xchg
mov
mov
add
cmp
loop
ljmp
addb
lcall
shlb
xchg
lods
add
mov
inc
sbb
inc
lahf
and
enter
add
pop
mov
sub
xor
add
lcall
inc
lds
fldenv
dec
scas
jae
cmp
add
repnz
push
ret
leave
sub
add
xchg
rorl
adc
icebp
fxch
xlat
jns
mov
inc
cmpsb
add
mov
push
add
iret
xlat
jnp
mov
add
pop
fwait
mov
sbb
add
out
dec
jmp
add
in
adc
add
fadd
pop
dec
shlb
add
cmpl
add
repnz
push
add
push
add
iret
push
inc
pop
jnp
dec
aas
fwait
mov
add
xchg
mov
jo
inc
cmp
push
sbb
jae
push
sub
add
scas
add
mov
insl
sbb
xchg
xchg
stos
jecxz
andl
aaa
xlat
jb
sbb
sub
add
sbb
mov
ljmp
push
xchg
cmpsl
test
mov
add
mov
add
sbb
push
and
add
push
add
or
add
in
divb
xchg
add
test
add
push
jmp
xchg
jns
cmpl
fdivrl
push
sahf
push
or
std
xchg
add
add
add
js
add
jp
xchg
add
cli
add
add
add
add
xchg
add
mov
add
xchg
lahf
mov
add
stc
jne
push
xchg
scas
jns
push
stos
add
insb
repnz
popa
ja
scas
add
inc
and
add
mov
add
add
pop
fsubl
add
pop
push
add
mov
add
add
mov
add
in
imul
add
mov
add
sbb
lods
add
push
pop
aad
cwtl
push
inc
sub
add
packssdw
add
lahf
add
add
or
add
and
add
sub
add
movl
cld
mov
movsl
lds
cld
jno
fldl
add
fcoms
loop
int
test
add
xchg
add
adcl
add
into
xchg
fnstcw
inc
jecxz
xchg
mov
sbb
add
stos
inc
rcll
add
push
jge
and
add
mov
xor
mov
ss
andl
add
insl
mov
testb
cwtl
dec
inc
push
mov
sub
add
mov
xchg
add
push
dec
mov
push
and
mov
das
lret
xlat
fistpl
into
add
int3
inc
rorb
add
push
int
int
call
add
add
mov
lretw
aad
js
xchg
sub
in
sbb
cmpsl
push
fwait
cmpl
add
inc
xchg
mov
xor
push
push
mov
xor
sub
add
mov
out
mov
sbb
pusha
adc
mov
push
push
jne
cld
cmp
mov
add
lcall
pop
pop
pop
call
mov
or
mov
dec
dec
push
lock
repz
dec
inc
add
add
xchg
outsl
inc
xlat
fbld
push
pop
add
add
rolb
notb
lret
jne
cwtl
dec
leave
push
testl
add
js
movsl
push
sub
add
add
add
out
fidivs
cltd
and
sti
lods
add
sahf
jge
inc
pusha
icebp
dec
pop
xor
ljmp
add
imul
push
or
xor
adc
adc
cmp
lds
btc
adc
add
lods
add
or
add
fldt
inc
out
mov
ret
lds
or
add
cltd
mov
mov
add
nop
adc
push
cmpsb
add
pusha
sbb
or
add
and
push
add
push
jl
lods
xor
push
xchg
sub
les
push
sub
add
std
pop
out
mov
test
add
add
add
bound
add
lods
add
dec
jl
jl
xchg
aaa
jle
sub
add
mov
add
sbb
xchg
add
daa
jno
add
xchg
fisubrl
xchg
stos
out
inc
loop
aad
test
add
test
add
mov
repnz
imul
jb
cmc
hlt
push
stc
ljmp
add
add
pop
add
add
push
cmp
mov
fdivr
xor
popa
adc
add
repz
sbb
dec
cmpsl
loop
mov
xor
outsb
xchg
fnsave
add
outsl
push
lret
jae
and
add
jno
add
pop
xchg
push
scas
add
jno
rclb
add
bound
js
mov
add
fidivl
cmpsl
int3
nop
testb
add
add
in
cmp
jne
imul
add
lcall
jmp
push
dec
pop
cmp
in
xor
sar
mov
fists
add
adc
add
add
mov
cmp
adc
add
leave
sub
push
add
xchg
add
add
data16
add
pop
sti
in
mov
adc
cmp
test
cmp
add
test
jne
data16
adc
jmp
dec
dec
ret
mov
add
lods
hlt
fnsave
std
int
xlat
add
cwtl
lret
mov
add
iret
add
add
xchg
jl
mov
int
push
add
ret
pop
xlat
arpl
jae
mov
mov
ret
pop
lret
and
add
pop
add
out
or
add
and
out
adc
movsb
add
pop
pusha
and
sub
mov
add
cmpsl
into
aad
add
mov
inc
xor
add
mov
add
in
mov
jecxz
imul
loop
add
out
repnz
jle
mov
add
xchg
push
aas
and
std
insl
hlt
in
imul
pop
aad
aaa
stc
hlt
dec
loopne
add
int
push
in
add
in
sti
pop
lods
mov
cmpsl
xorl
push
mov
scas
rcrl
enter
and
add
imul
cld
test
add
add
enter
sub
add
and
adc
sti
in
fsubs
xor
cltd
addr16
add
mov
inc
xor
add
int
pop
mov
fdivs
add
add
inc
dec
call
mov
pop
xor
leave
aam
and
add
adc
test
add
and
xorl
adc
js
inc
mov
add
out
dec
bound
push
push
popf
inc
add
xchg
ja
scas
add
jecxz
and
add
int3
add
imul
add
out
fs
mov
sbb
insb
mov
xchg
and
sub
add
xor
fildll
add
jge
in
ret
dec
loope
jns
add
icebp
pop
cmpsb
add
inc
pop
lea
or
out
pop
inc
jo
sar
outsb
sub
push
push
cld
mov
add
and
add
cmp
mov
mov
enter
add
popa
in
inc
into
lods
dec
loope,pt
call
cli
pop
mov
inc
xchg
lds
out
mov
and
add
les
add
add
xor
ja
cli
push
lods
add
and
add
xchg
add
lahf
fldt
add
je
add
cmp
call
fwait
sbb
aam
and
daa
dec
push
mov
mov
add
push
test
inc
imul
add
fwait
mov
mov
push
inc
jne
lret
shlb
lret
or
add
dec
sahf
inc
lcall
rcll
into
inc
mov
add
loope
xor
in
jg
fucomp
loope
add
aas
push
add
mov
add
xchg
inc
push
sbbl
add
sub
mov
push
and
fisttps
and
adc
push
adc
mov
mov
add
loopne
push
sbb
sahf
mov
fstl
cmp
xlat
ret
addb
loopne
stos
add
adc
inc
sub
add
or
add
jae
xor
pop
jne
sbb
add
and
add
add
pop
dec
in
int3
and
aam
xlat
fucomip
lcall
add
ficoml
xor
adc
xor
shlb
add
addb
test
add
out
lcall
stc
pushf
xchg
sub
add
lahf
mov
loop
add
div
enter
shll
in
mov
or
cli
test
add
adc
add
mov
add
xchg
cltd
mov
add
inc
jl
add
insb
or
lret
push
outsb
push
add
repnz
popl
add
mov
sub
sub
fucomp
rorl
pop
push
test
fisubs
add
loop
fsubp
jmp
sub
or
mov
mov
sbb
add
subl
mov
aas
cwtl
lea
jnp
dec
mov
add
push
lret
jns
dec
addb
sub
repz
repnz
sbb
sub
mov
dec
jo
mov
addb
aad
scas
dec
or
add
dec
test
add
fldcw
xchg
sub
add
adc
loope
scas
add
pop
stc
mov
or
add
jle
add
stos
add
mov
enter
lods
xor
add
repz
add
adc
vcvttps2dq
add
jae
negb
addr16
iret
test
add
mov
cmp
fsubr
jo
mov
test
insl
cmp
sbb
cmc
test
add
mov
add
cmp
int3
or
add
mov
jb
sarb
add
loopne
sbbl
add
add
add
in
xchg
xor
mov
scas
arpl
dec
ljmp
ss
dec
stc
mov
add
mov
test
add
or
sti
xor
push
add
sbb
jecxz
xchg
jae
scas
add
cld
hlt
push
inc
add
mov
imul
add
cld
ret
aas
call
mov
add
int3
ss
and
test
insl
mov
bound
adc
add
push
add
xchg
add
add
add
add
add
jmp
iret
add
jmp
xor
push
fdivrs
add
loop
sub
add
push
lret
mov
sti
jne
sub
add
add
mov
xchg
adc
add
leave
push
add
shrl
jg
int3
in
outsb
shrl
sahf
push
add
add
inc
and
add
fs
cmp
jmp
adcl
mov
xor
push
or
add
and
lock
ljmp
shl
cli
and
loope
insb
sub
pop
push
ret
out
cmp
add
stos
add
xchg
std
in
sub
add
pop
dec
cmp
add
lods
pop
mov
adc
add
adc
xchg
mov
fidivl
inc
mov
mov
add
pushf
add
push
lret
repz
das
mov
dec
lods
push
jge
sbb
add
jle
or
add
pop
xchg
dec
enter
push
xchg
inc
lret
push
and
popa
sub
add
add
add
inc
cmp
add
adcl
lds
add
add
out
sti
inc
addb
dec
cmc
xchg
seto
ficoml
data16
xor
mov
sub
add
cmp
push
ret
sbb
xlat
jge
or
add
add
mov
cmp
add
push
mov
cmp
enter
dec
sub
add
mov
add
inc
cltd
jg
dec
add
add
call
inc
sub
add
dec
test
cmp
inc
sbb
icebp
stos
add
jno
rcll
mov
cmpsb
add
fcoms
int3
shll
sbb
push
daa
addr16
int
outsb
dec
cmpsl
mov
add
cmp
pop
inc
push
mov
cmp
mov
ja
add
and
add
cmp
ffree
mov
xor
xor
mov
mov
cmp
pop
jae
dec
push
aam
insl
sahf
pop
ljmp
aaa
sbb
inc
or
add
inc
dec
push
add
add
add
testl
add
inc
addr16
sub
add
pop
sbb
cwtl
call
add
push
xor
ss
imul
xor
ss
add
jge
xor
repnz
jle
mov
xchg
ficomps
ss
icebp
push
jns
xchg
inc
cmp
pop
ret
and
jmp
dec
aaa
jnp
ret
out
mov
push
pop
xor
add
out
xchg
mov
adcl
add
push
fst
jp
pusha
cmp
in
fcomip
jmp
or
add
sbb
addb
out
lock
les
sbb
push
jg
std
mov
sub
add
xor
repnz
mov
add
loopne
xorl
dec
imul
mov
cmp
pop
xchg
push
stc
inc
ret
das
pusha
mov
inc
call
les
jo
mov
add
cmp
add
and
les
addb
mov
inc
fbstp
loopne
inc
jo
jl
aas
xchg
cmpsb
add
scas
add
test
add
in
mov
fwait
pop
push
aaa
dec
insl
xor
adc
mov
mov
and
in
add
testl
add
ret
imul
sub
lret
jp
leave
mov
pop
loop
cmpsl
lret
cmp
add
adc
push
xor
add
outsb
imul
add
fs
add
ret
mov
add
sbb
add
add
pop
out
add
out
add
icebp
into
jae
sti
push
loop
int
add
mov
mov
cmp
pop
jb
loope
test
mov
push
scas
add
inc
imul
adc
loope
rcl
pop
shrl
add
sub
sub
add
add
add
adc
add
mov
add
int
leave
add
shll
push
xor
dec
jno
rolb
add
add
xor
popf
sbb
add
popa
inc
and
add
sbb
je
xchg
mov
addr16
clc
xchg
cwtl
xor
inc
shrb
add
fildll
fadds
add
pop
push
push
xchg
cmp
js
add
in
xchg
add
pop
sbb
dec
jge
push
addb
xchg
add
mov
sub
add
add
lds
add
cmpl
push
adc
and
or
add
xlat
ss
xor
sub
dec
imul
add
insl
add
cmc
xor
ja
xchg
add
jno
je
icebp
push
icebp
push
call
or
lods
inc
mov
add
hlt
loope
mov
pop
jmp
movsb
add
mov
add
add
pop
pop
sbb
xor
mov
add
imul
add
movsb
add
stos
add
inc
mov
jo
cmp
inc
aam
rcrl
nop
add
repz
mov
rcrl
add
aam
fwait
sbb
out
pop
das
addr16
cmp
add
shlb
subl
shr
xor
int
pop
out
add
aam
insb
sub
add
jo
push
push
dec
add
loopne
loop
push
add
icebp
sbb
lcall
mov
testl
add
mov
add
lock
add
in
push
sbb
mov
add
add
mov
icebp
or
add
addb
loopne
jl
add
stos
cmp
insb
xchg
jge
lcall
fs
push
sub
add
add
call
or
add
mov
idiv
jl,pt
cmp
add
add
pop
nop
push
add
in
insl
xlat
xlat
scas
add
mov
add
aaa
xchg
mov
lahf
add
dec
xor
mov
add
add
cld
sbb
inc
push
add
stc
clc
stos
popa
add
add
stos
or
add
aas
dec
icebp
subl
pop
xchg
mul
adc
cltd
stos
add
xorl
hlt
into
sbb
loope
add
inc
cmpsb
add
ficomps
cmp
add
add
rcr
aaa
sbb
add
out
imul
lret
enter
or
jns
dec
and
add
add
inc
iret
das
dec
popl
push
pop
pop
jne
and
hlt
or
add
dec
pusha
dec
xor
call
inc
sub
test
add
ret
inc
inc
hlt
xlat
push
cmp
jmp
je
pusha
hlt
and
push
push
add
inc
push
add
xchg
push
cmc
fsubrs
mov
inc
sub
add
jae
and
add
rorb
push
mov
jbe
add
jne
jle
imul
add
lahf
add
add
jbe
sub
inc
cmp
xlat
dec
pop
and
add
mov
cli
add
add
inc
mull
into
mov
dec
fs
in
leave
cwtl
mov
loope
push
pop
jg
add
xchg
lea
add
lock
or
inc
add
dec
test
add
or
sbb
add
push
add
jecxz
xor
sti
mov
add
inc
ret
lahf
test
iret
adc
clc
jmp
jb
pop
xchg
mov
add
jp
sub
mulb
and
add
add
add
add
mov
add
shr
add
test
lahf
add
add
pop
adc
cmp
add
mov
xchg
fsubs
add
mov
add
enter
sub
add
or
add
mov
xchg
cmp
xchg
mov
add
jp
loopne
add
dec
mov
adc
daa
add
ret
lods
add
and
pop
insb
call
mov
add
xchg
into
mov
mov
add
fildl
add
add
add
pop
enter
orl
dec
std
mov
fs
ljmp
jmp
cmp
dec
dec
test
add
sbb
call
sub
add
add
push
scas
repnz
inc
sbb
or
add
push
imul
add
xchg
add
jb
lcall
imulb
add
pop
jecxz
sti
jl
aas
mov
sub
add
jp
fwait
jo
jg
add
out
xchg
ja
dec
pop
pop
mov
in
jl
ljmp
sbb
push
or
add
push
fmull
push
lcall
sbb
add
int
xchg
xchg
arpl
sbb
lds
testl
add
or
add
xchg
add
add
stos
int3
int
lods
inc
lock
add
roll
add
xchg
decb
add
mov
jp
lea
and
add
repz
imul
or
lock
cmp
into
sub
mov
testb
ret
cmp
add
jecxz
adc
out
repnz
rclb
add
mov
jmp
add
iret
hlt
push
and
add
stc
or
xchg
and
aam
insl
hlt
pop
xchg
add
jnp
in
push
jno
in
test
add
add
lock
add
mov
test
inc
or
add
push
add
jo
add
dec
push
cmp
push
shrb
add
ficompl
push
pop
add
add
add
jo
add
dec
lea
sbb
add
std
inc
push
add
mov
mov
out
rorb
xchg
sub
add
in
lock
add
inc
lods
xchg
add
cmp
int3
rorb
mov
shrl
adc
mov
fstl
mov
push
sti
push
push
xchg
adc
inc
push
jge
dec
push
adc
test
add
jl
mov
jle
add
sbb
inc
ficomps
dec
test
jnp
sbb
and
gs
add
mov
add
jl
in
sub
add
add
mov
dec
inc
dec
leave
and
test
add
add
add
cld
mull
add
jl
jno
sbb
cli
push
lahf
mov
mov
adc
mov
add
lret
ljmp
notb
insb
push
sti
loop
das
scas
add
jg
in
aad
daa
xor
das
dec
shlb
push
in
out
add
inc
int
popa
daa
stos
or
add
js
jne
add
ror
inc
lcall
sub
add
add
addb
lahf
inc
cmpsb
add
mov
add
xchg
xchg
test
add
add
popf
insl
sbb
div
js
jo
fwait
push
scas
jno
jb
dec
cli
push
cwtl
cmp
add
add
mov
add
sub
add
fists
outsl
fsub
sub
imul
sub
add
inc
lahf
xchg
repnz
aas
leave
dec
xchg
test
add
les
cmp
pop
inc
lds
stc
inc
insl
or
add
and
add
decl
add
dec
cmp
loop
add
ret
add
add
stos
add
dec
push
add
int3
je
pop
mov
rolb
rorl
cmp
in
mov
add
mov
add
mov
fsubrl
adc
adcl
repnz
clc
mul
fstps
mov
ss
std
jbe
sbb
lds
add
out
repnz
jg
add
jecxz
rcll
jae
add
mov
add
add
daa
pop
imul
mov
ret
xor
enter
xchg
push
imul
jecxz
adc
inc
dec
sub
cmc
insb
mov
pushf
mov
mov
dec
gs
cld
inc
enter
roll
int
add
test
add
add
in
push
ds
xchg
add
sub
jmp
xchg
sbb
in
mov
add
lds
jp
jb
cmp
cmp
inc
mov
ret
push
bound
pop
stos
push
mov
add
int3
jecxz
add
pop
cmpsl
bound
fcmove
dec
sbb
xchg
push
das
sbb
add
fidivs
mov
add
or
sbb
and
sbb
push
inc
repz
pop
xchg
xorl
xchg
xchg
xchg
add
push
negl
xlat
hlt
xchg
clc
sbb
pop
inc
mov
gs
test
lods
test
add
add
sbb
add
jg
push
cld
gs
push
inc
enter
push
mov
push
iret
add
add
add
inc
repnz
cmp
pop
cltd
jns
sub
add
into
fmull
add
dec
stc
cwtl
cmpsb
add
inc
cmpsl
inc
or
add
jmp
mov
adc
call
les
leave
jo
fst
mov
mov
add
and
add
add
inc
ficompl
out
or
repnz
push
jb
in
cmp
add
ja
adc
enter
jbe
add
pop
in
dec
add
add
cwtl
pop
movsl
lret
cld
add
mov
lods
jg
popa
mov
add
push
pop
jg
add
mov
add
xchg
out
pop
push
mov
jno
inc
mov
aam
loop
cmpsb
add
mov
addb
mov
les
out
add
dec
sbb
add
inc
shl
and
add
cmp
notb
add
jns
mov
push
and
pop
pop
int3
jle
pop
lcall
data16
cmp
adc
add
addr16
sti
sbb
add
aaa
jmp
add
popa
insl
jg
iret
test
add
aam
add
ficoml
sbb
jle
add
add
add
push
push
cld
clc
andl
adc
fildl
sahf
sub
add
cmp
ret
out
addb
mov
add
in
adc
sldt
add
sbb
stos
add
sbb
add
mov
add
sub
xchg
push
mov
add
mov
add
lds
inc
mov
aas
push
jle
out
jg
lods
adc
add
call
addr16
gs
mov
and
add
int3
loop
test
faddl
add
cmp
add
popf
xchg
call
add
add
mov
add
je
push
jmp
pop
or
lods
add
xchg
add
lods
add
fcoml
xchg
or
pop
inc
xchg
mov
mov
ljmp
add
loopne
shlb
dec
dec
mov
add
or
add
add
and
out
sub
push
xchg
in
pushf
stos
daa
mov
add
mov
rcrl
push
sbb
into
mov
add
popf
subl
mov
call
add
adc
push
cmp
xorl
add
mov
mov
inc
cmp
test
add
mov
shll
xchg
cltd
faddl
out
mov
add
mov
in
mov
lcall
or
add
add
gs
add
cltd
inc
jmp
fadds
fsub
add
add
shll
xlat
fbld
loope
add
lods
jae
sahf
jmp
dec
inc
add
add
stos
mov
mov
add
sahf
rorb
and
add
fs
add
xlat
dec
jne
or
add
popa
stos
ja
inc
out
jns
jmp
js
xchg
int
ljmp
imul
and
add
mov
or
add
xchg
add
into
andl
inc
sub
lods
add
adc
sbb
and
insb
mov
jo
ret
mov
add
add
loop
call
das
sub
and
mov
dec
pop
aaa
mov
add
aaa
out
ficompl
add
and
add
push
xor
mov
add
or
add
aaa
addr16
addb
pushl
int3
into
fwait
int
pop
jge
addb
jp
fs
scas
cmp
pop
ljmp
add
loope
dec
insb
push
jns
xor
mov
add
inc
add
add
lcall
sub
add
mull
add
pop
jge
add
pusha
cli
push
or
add
stos
roll
in
push
xchg
js
add
outsb
inc
pop
jecxz
in
addb
out
cld
mov
add
ljmp
jmp
adc
addb
rcrl
add
hlt
dec
push
sub
add
mov
and
add
mov
add
add
add
add
repnz
dec
lock
add
xchg
mov
inc
mov
dec
idivb
ljmp
mov
add
sbb
cmp
mov
add
or
add
gs
adc
pop
sub
add
adc
add
add
out
sbb
jns
jle
in
sub
pusha
int3
sti
sbbl
out
fldt
push
add
add
mov
mov
xlat
inc
inc
adc
lods
hlt
push
rol
xchg
xchg
sub
dec
dec
fidivrs
loope
mov
int3
dec
sub
add
icebp
lahf
mov
int3
or
add
add
ljmp
lds
daa
test
jle
mov
xchg
ret
dec
xor
gs
sahf
xor
push
les
shrl
pushf
jmp
jno
and
ret
or
dec
add
cltd
lret
pop
xchg
xlat
cmp
add
cmp
negb
add
mov
cmpl
aas
jnp
sbb
xchg
out
mov
data16
sbb
data16
cmp
adc
cmc
mov
add
xor
add
add
pushf
les
aas
mov
into
pop
pushf
and
add
or
fs
je
mov
add
in
mov
sarb
cmc
push
mov
add
jno
shll
imul
add
xor
jl
add
cmpsl
cmp
or
add
mov
add
and
xchg
mov
call
xchg
add
add
hlt
xor
addr16
or
movsl
call
sbb
shld
test
and
add
or
add
out
dec
hlt
pop
loop
add
add
add
cmpsl
jg
add
add
enter
jmp
add
add
xor
and
xchg
adc
nop
int3
and
aas
push
add
push
xchg
call
jg
add
xchg
adc
out
pop
movsb
add
jl
push
or
add
add
iret
inc
mov
test
and
rcr
jecxz
mov
add
pop
addb
adc
pop
scas
test
pop
push
add
shrb
add
or
jbe
addb
int3
pop
push
mov
ret
arpl
mov
add
add
je
loope
out
xorl
mov
add
dec
xchg
adc
jbe
test
les
add
add
in
incl
jmp
pop
dec
sarb
push
jl
xchg
leave
or
add
add
test
xchg
cmp
add
add
push
jb
add
sbb
adc
ret
cwtl
stc
cld
test
add
ret
cld
inc
push
pop
nop
jns
sub
add
add
dec
sbb
mov
cli
or
add
fldenv
pop
cltd
fcom
outsl
sub
add
in
jae
add
xchg
jle
shl
jb
mov
movsl
sub
add
sbb
in
bound
mov
push
rdpmc
pusha
imul
add
add
jl
add
mov
sbb
add
mov
add
fwait
addb
cld
xchg
add
dec
push
sub
add
addb
iret
out
test
add
fwait
in
clc
adc
addr16
pop
pop
adc
add
mov
add
mov
mov
loopne
add
orl
add
mov
testb
add
lds
sbb
mov
xor
add
bound
add
addb
sub
mov
add
mov
mov
dec
or
add
push
sub
add
push
mov
sti
inc
sbb
stos
add
movb
add
out
and
add
int3
inc
les
mov
add
ss
add
add
push
push
inc
pusha
inc
sub
lcall
mov
add
inc
outsb
sbb
mov
add
push
in
add
xlat
test
add
test
adc
inc
and
jno
xlat
cmpsb
add
dec
in
je
repz
add
push
cmpsb
add
push
into
add
sti
or
push
pusha
xchg
add
js
dec
mov
sub
add
addb
xchg
push
push
imull
add
ja
or
popa
or
add
push
sbb
xor
loopne
in
cmp
xor
outsb
idiv
stc
addb
lcall
sbb
mov
sbb
jmp
add
inc
sub
add
mov
lods
add
xlat
and
add
test
add
push
add
or
jmp
sbb
add
pop
and
add
inc
jo
loop
add
push
out
shrb
add
add
push
out
inc
icebp
cld
jno
out
jns
mov
add
arpl
pop
ja
insl
jnp
mov
add
mov
sti
jmp
fs
pusha
cwtl
pop
cltd
mov
mov
add
ja
mov
add
pop
and
cmp
add
cmp
push
sti
ljmp
push
push
pushf
sub
ret
add
pop
cmpsb
add
int
add
mov
add
lock
in
mov
add
add
add
add
inc
cmc
mov
add
das
out
inc
jecxz
add
out
xor
outsb
pop
inc
movsl
das
dec
mov
adc
mov
fsubrl
loopne
add
sahf
and
add
add
cmp
xchg
push
lods
pop
lods
add
dec
cltd
mov
push
sub
xor
xchg
pop
cmp
xor
test
out
add
add
test
add
add
add
inc
cltd
sub
cmp
or
add
inc
xchg
mov
add
sub
add
xlat
adc
push
mov
push
push
lods
add
test
mov
mov
aas
test
mov
mov
add
inc
mov
pop
cmpsb
add
cmp
add
stc
inc
lea
push
mov
add
jno
cmp
cmpsl
push
out
in
pop
push
cmpsl
loopne
push
icebp
xor
dec
xchg
addb
xchg
scas
xchg
mov
add
inc
rolb
dec
sub
push
add
push
add
cmp
sub
jns
add
add
add
add
adc
add
ror
pop
mov
shrl
add
ret
jae
jg
ds
movsl
inc
imul
add
xchg
add
hlt
mov
add
lcall
sbb
sub
hlt
out
jmp
or
add
jns
add
aam
popa
mov
dec
hlt
loope
imul
inc
dec
sbb
dec
inc
cmp
les
pop
xchg
shll
xor
call
mov
out
add
inc
mov
add
push
adc
mov
insl
imul
add
add
add
add
outsl
lds
jmp
scas
add
add
rclb
xor
pop
jo
mov
add
imul
orl
add
outsb
mov
add
xchg
iret
xchg
mov
add
add
jmp
xlat
jae
scas
add
mov
pop
push
add
lret
mov
or
add
cld
gs
jmp
add
inc
clc
inc
push
pop
les
fld
scas
add
ja
jmp
js
add
add
mov
add
add
sub
add
mov
add
lock
andl
cmp
incb
push
add
inc
mov
add
inc
adc
add
into
fwait
jne
push
clc
dec
lcall
mov
mov
lret
add
mov
mov
int
shrl
add
mov
add
inc
mov
add
add
stc
repnz
jmp
test
push
xchg
pop
psubusw
add
lret
xchg
repnz
push
insl
xor
add
lods
lods
add
mov
lcall
sub
add
inc
add
cmp
lea
repnz
fwait
mov
add
or
add
add
sahf
inc
push
mov
add
sbb
mov
pop
shlb
sbb
pop
push
pop
loopne
lcall
aas
jge
sbbl
nop
lock
add
mov
add
push
in
lret
mov
mov
data16
rol
in
push
mov
cmc
data16
inc
adc
stos
mov
fistps
imull
add
add
dec
adc
scas
add
sbb
mov
gs
push
cwtl
add
and
jne
xchg
pop
dec
jge
fcmovnu
dec
dec
fcompl
clc
js
sub
add
insb
std
daa
pop
roll
sbb
gs
mov
out
inc
adc
add
xchg
nop
addb
mov
popa
mov
and
push
xchg
dec
pop
lods
add
adc
ja
out
repz
cmp
ljmp
jecxz
add
nop
jg
popf
ss
js
cmp
out
rol
sbb
sbb
popf
pop
pushf
add
add
xchg
lahf
stc
push
xchg
xchg
add
mov
stos
nop
add
add
jo
adc
outsb
jnp
fyl2x
arpl
sub
add
adc
or
jle
sarb
add
or
add
fiaddl
add
add
inc
add
add
out
ss
leave
addr16
daa
push
scas
add
testl
push
add
push
mov
aas
sub
add
out
sti
sbb
add
addb
add
adc
negb
add
rcl
pop
test
mov
lods
xchg
inc
pop
jns
jbe
xchg
rcll
sbb
leave
sarl
in
inc
xlat
mov
or
ret
dec
pop
aam
mov
mov
outsl
pop
jb
add
push
fimull
cltd
fdivrl
leave
xor
mov
or
add
mov
push
jae
ja
nop
outsb
mov
pop
cmc
pop
pop
roll
or
add
repz
mov
test
add
push
iret
ljmp
movsb
add
rcll
iret
popf
mov
mov
add
push
mov
je
push
mov
add
sub
add
push
in
xchg
sbb
inc
jmp
stc
fisubrs
add
int
jo
shl
test
push
cmpsl
je
or
hlt
jl
push
adc
add
stos
add
fs
adc
addb
loope
les
sub
fisttps
add
mov
xlat
inc
or
add
inc
fstpl
jae
clc
dec
out
mov
add
pop
pushf
outsl
ss
add
add
jbe
out
test
add
add
jo
add
outsl
nop
or
add
ja
in
xchg
push
js
push
hlt
inc
jbe
add
xlat
ljmp
mov
mov
push
mov
mov
add
push
movsl
jge
mov
mov
insb
adc
mov
sbb
or
add
push
add
test
and
add
add
xchg
aaa
and
add
adc
push
inc
and
or
add
add
lret
lea
ja
inc
pop
stos
add
cmp
aaa
lods
add
push
ret
addb
xchg
mov
in
addb
mov
mov
add
pop
stc
jns
clc
mov
mov
or
add
mov
lcall
cmc
movsl
dec
dec
cli
lods
add
addr16
push
pushf
mov
add
lcall
or
add
add
xchg
loope
inc
add
add
int
or
add
out
decl
dec
sbb
movsb
add
jb
add
and
ret
pop
imul
mov
add
add
adc
insb
inc
jecxz
add
xor
stos
pop
daa
dec
cmpsb
add
and
add
add
pop
fdivrl
and
add
lock
dec
cmp
bound
jmp
cld
sub
push
iret
inc
paddq
aad
dec
push
imul
fs
stc
stos
push
jns
bound
in
mov
push
xor
cmp
add
ret
mov
insb
push
add
cld
jne
add
mov
out
mov
add
arpl
add
and
add
ficoms
inc
sub
add
mov
cmp
add
jb
and
inc
sub
add
add
add
add
add
cmpsb
add
mov
add
pop
pop
push
mov
icebp
sbb
xor
add
sbb
jns
arpl
filds
mov
push
enter
inc
xlat
shl
out
add
cli
inc
mov
or
insb
adc
add
das
inc
sbb
push
out
add
cmc
ror
mov
mov
add
cld
mov
sbb
adc
add
jns
ffreep
inc
cmpsl
addb
xchg
dec
cmp
add
xchg
andl
mov
ss
sbbl
inc
leave
mov
addb
or
add
sub
jb
lret
movb
stos
subl
ja
cmp
push
or
add
pop
mov
inc
loope
enter
dec
cmpsb
add
fidivl
nop
or
sarb
leave
adc
pop
xchg
xchg
jb
jmp
cmp
add
icebp
or
add
jle
or
pop
sti
cmp
sbb
stc
jp
add
mov
mov
xchg
add
pop
push
xor
test
add
cmpsb
add
inc
mov
hlt
ljmp
add
pop
xor
xor
sbb
repnz
fldl
mov
add
mov
or
add
sbb
pop
push
add
mov
jbe
xchg
in
lea
shlb
jb
in
pop
jl
mov
xchg
pushf
sub
add
lods
add
sbb
cmc
mov
mov
add
icebp
xor
push
dec
inc
jns
rorl
mov
push
aad
inc
adc
mov
imul
ds
dec
lcall
add
xor
push
into
clc
cmp
lods
add
jns
add
ret
cmp
mov
add
add
dec
popf
sbb
or
add
in
mov
add
dec
cmp
mov
fdivr
ljmp
iret
enter
sbb
out
cli
ret
out
leave
dec
mov
cwtl
je
inc
push
je
sti
cld
or
or
add
ljmp
iret
dec
cmp
xchg
push
bound
push
push
add
or
add
push
add
stos
jle
in
or
add
sub
add
jo
out
add
sub
add
cmp
mov
add
push
or
mov
mov
clc
pusha
cltd
sub
add
push
add
movsl
mov
add
hlt
jmp
pop
lock
fcomip
mov
add
icebp
pusha
enter
add
add
aas
mov
add
ret
dec
adc
vdivps
mov
and
xchg
add
mov
mov
into
xlat
dec
pushl
push
sub
add
inc
inc
lds
xchg
cmp
fsubs
imul
add
out
ss
add
mov
xor
mov
add
add
in
shrb
add
xchg
add
pop
mov
add
lcall
out
imul
add
adc
lcall
push
addb
jnp
imul
push
inc
cltd
push
mov
add
and
pop
nop
mov
dec
inc
fstl
add
add
add
adc
stc
inc
popa
mov
in
push
in
imul
push
hlt
sahf
inc
bswap
jl
icebp
aam
push
in
movsl
into
lcall
add
das
ja
jmp
jbe
cmp
lock
shr
iret
addb
inc
ja
lret
std
btr
cld
in
pop
test
add
in
lret
or
pop
lcall
jmp
mov
mov
add
jne
mov
add
add
ja
fs
iret
jl
scas
shlb
sub
add
shlb
ja
pop
loopne
add
jecxz
aad
mov
sub
push
push
je
iret
movsb
add
shll
xor
loopne
mov
add
fsubrl
push
loope
add
inc
cmp
push
insl
insb
jns
negb
add
dec
rclb
mov
add
call
mov
add
mov
insl
pop
inc
das
and
mov
push
xlat
lahf
fs
daa
add
cmpsl
into
shll
lahf
sbb
sarl
add
push
mov
out
mov
jge
fldenv
add
cld
pop
and
add
fisttpll
or
push
add
xchg
mov
shrb
loopne
outsb
push
add
push
add
add
jno
add
das
mov
dec
scas
fldt
adc
add
add
add
add
add
mov
add
mov
jne
cwtl
ja
cmpsb
add
popf
pop
cmpsb
add
lods
add
jne
and
sub
add
lods
addr16
and
add
lea
add
divb
xlat
cmp
mov
insb
fimuls
insl
sar
dec
jb
adc
test
sub
add
adc
fistpll
and
xchg
sub
add
and
add
dec
xchg
sbbl
dec
lea
sbb
add
addb
jl
lcall
std
add
add
mov
add
push
add
dec
mov
sbbl
add
das
int3
movsl
sbb
add
adc
pop
sub
daa
add
add
add
adc
dec
and
add
loop
add
inc
jo
mov
add
mov
pop
addb
andl
mov
sbb
mov
lds
movsb
add
mov
add
and
add
fidivs
scas
add
or
add
mov
scas
add
lahf
xchg
data16
or
sti
aad
mov
sahf
push
xchg
test
jg
mov
cmp
cmc
pop
mov
dec
ficoms
stos
add
mov
dec
repz
clc
add
add
repnz
shl
das
leave
or
cmpsb
add
mov
fisubl
les
add
mov
in
mov
dec
inc
dec
adc
add
shll
add
stos
popf
mov
add
xor
sbb
sub
add
cmpsl
mov
add
and
add
add
and
jae
ret
cmc
lds
int3
pop
lahf
sub
add
sub
add
and
add
dec
lret
jecxz
add
cmpl
add
aaa
sub
add
bound
mov
in
sahf
jnp
cmp
movsl
call
add
dec
jle
insb
out
dec
ds
sbb
mov
inc
sub
mov
sub
lcall
outsb
scas
add
adc
loope
add
add
add
test
add
divb
mov
ffree
push
pop
sbb
xor
jmp
test
add
sub
dec
dec
aaa
dec
icebp
xor
adc
add
ljmp
pop
mov
adc
cmp
and
add
loope
sbb
ljmp
add
cltd
mov
addl
outsl
push
cmp
out
loop
inc
push
add
gs
fisubs
mov
les
add
sub
mov
xlat
movsl
je
clc
mov
popa
sub
xor
pop
inc
cmp
lods
add
xchg
add
call
add
sbb
roll
imul
cwtl
xor
inc
ljmpw
stc
sbb
xor
sbb
inc
fmuls
shlb
push
cmp
call
incb
sti
jecxz
wbinvd
push
sbb
dec
imul
mov
add
addr16
insl
inc
add
mov
push
add
nop
add
xchg
xchg
add
inc
imul
lock
repnz
dec
lahf
fildl
add
pop
test
add
repz
in
add
aaa
sbb
jecxz
sbbl
fcmovnbe
mov
add
push
daa
mov
scas
xchg
add
addb
push
movsl
lods
add
mov
decb
cmpsb
add
xchg
mov
add
rcl
loop
call
addr16
dec
movsl
push
and
add
mov
loop
cmp
jecxz
or
add
add
inc
adc
xchg
pop
push
je
std
in
mov
stc
cmpsb
add
inc
ficoms
add
mov
movb
xchg
add
jmp
cli
push
outsb
or
add
repnz
mov
or
add
add
idivl
add
lcall
add
add
mov
lds
add
add
scas
std
pop
rolb
jne
ss
push
ret
add
imul
cwtl
xchg
inc
into
addb
push
mov
or
adc
add
add
ret
inc
ja
dec
mov
jg
pushf
xchg
add
add
xchg
add
push
imul
daa
and
mov
out
addb
xchg
ds
std
mov
loop
push
pusha
jo
loope
and
add
xchg
sbb
push
add
sub
and
add
add
call
pop
outsl
into
pop
push
shrl
add
inc
lds
adc
icebp
adc
test
ret
add
xchg
in
addr16
sub
je
fsincos
and
iret
pop
pop
test
add
movsb
add
call
cmpsl
add
add
sbb
clc
jae
and
add
xor
mov
mov
rolb
addb
pop
dec
sub
add
in
outsl
popf
inc
adc
add
mov
mov
add
ret
clc
inc
mov
inc
pop
sbb
iret
push
mov
loopne
lahf
mov
add
add
add
add
add
jle
addb
jb
push
jg
test
add
add
xor
jnp
add
and
add
add
push
sbb
xchg
stos
add
movsl
data16
stos
std
mov
add
add
add
push
add
cmp
jle
jge
les
ja
test
movsb
add
sahf
dec
push
mov
sbb
sbb
insl
sub
ficoms
mov
pusha
cmc
add
add
dec
mov
add
inc
and
add
cmp
add
sub
sub
add
pop
cmpsb
add
call
push
out
dec
push
add
sbb
jmp
sbbl
outsl
add
add
ret
xor
fimuls
jge
add
test
scas
push
dec
addb
repnz
dec
mov
xchg
inc
mov
stos
add
add
push
add
inc
or
add
insl
lcall
imul
fisubrl
dec
push
mov
xchg
and
add
jbe
add
fstpl
add
fwait
mov
add
arpl
add
js
dec
pop
repnz
cld
jg
pop
popa
subl
add
ret
in
int3
dec
push
rorb
push
add
out
aam
push
inc
xor
jno
push
adc
sti
pop
pop
inc
lcall
jge
push
add
push
pop
enter
ljmp
sar
lea
add
jns
adc
pop
shr
add
add
xor
popf
cmp
dec
shrb
jecxz
addb
sub
add
add
daa
jae
mov
roll
add
or
add
gs
out
add
or
add
das
outsb
dec
adc
jne
add
dec
lods
add
xor
add
mov
dec
pop
lods
cli
adc
dec
add
add
pop
pop
add
xchg
xchg
add
movsb
add
dec
fmuls
add
sub
add
xor
sbb
lea
sbb
add
ja
dec
mov
add
cmp
push
pop
out
bound
add
xchg
sub
add
fisttps
enter
imul
pop
cli
jle
cmp
pop
xchg
insl
mov
add
cmp
js
add
imulb
in
adc
sub
add
add
sbb
adc
pop
jg
add
adc
int
and
add
and
dec
dec
lret
repnz
lods
inc
arpl
add
cmp
fcmove
push
mov
mov
out
inc
inc
adc
jae
add
bound
add
xchg
cld
xchg
dec
sub
add
xor
add
mov
mov
xchg
test
add
lock
cmp
pusha
scas
icebp
je
add
mov
aam
and
inc
in
and
nop
rcrb
pop
add
add
sti
or
add
nop
or
add
aad
mov
mov
inc
xchg
sbb
push
add
mov
xor
bound
xchg
out
cmp
add
xchg
add
pop
fnstsw
adc
in
add
xchg
aad
xor
mov
pop
sbb
cwtl
fiaddl
test
add
mov
std
aaa
ljmp
gs
mov
aaa
dec
nop
addb
lock
push
cmp
add
sub
adc
incl
js
push
pusha
cmp
cmp
pop
cmpsl
mov
lock
adc
lcall
or
add
add
cmpsl
ss
cmp
add
mov
sarb
sub
add
enter
out
clc
push
jge
das
add
add
jle
add
xor
jl
dec
and
add
xchg
lcall
loop
in
or
add
scas
add
jg
dec
mov
and
add
xchg
add
sbb
pushf
xor
cmpsb
add
push
push
insl
push
fs
add
or
add
add
mov
add
mov
add
add
pop
sbb
add
clc
sbb
xchg
loope
adc
fs
lret
repz
repz
add
inc
pop
rolb
push
add
jnp
adc
mov
sarb
xor
int
ja
jmp
and
ds
adc
add
out
mov
fdivs
sub
fwait
pushf
pop
cmp
adc
xchg
outsl
mov
sti
gs
add
lods
add
mov
add
cwtl
iret
addl
add
add
cld
cmp
mov
lds
add
pop
pop
pop
push
inc
js
fmull
add
stos
cmp
add
inc
repz
addb
insb
sub
into
mov
rcrl
add
add
addb
dec
repnz
lods
add
stos
add
add
add
lret
testb
mov
in
push
pop
or
add
pusha
push
fadds
fs
lahf
mov
add
add
sbb
sub
les
xchg
xor
imul
and
fcmovnbe
xchg
std
inc
add
add
add
mov
cmc
out
nop
jp
add
scas
add
and
add
mov
bound
add
aad
mov
call
add
dec
cmp
das
add
loop
sub
add
call
mov
add
rol
add
scas
push
add
mov
adc
das
jl
push
stc
or
pop
lock
jmp
fiaddl
shll
enter
loope
popf
in
inc
fmuls
add
cmp
mov
idivb
cmp
aad
mov
push
add
stos
add
addb
xchg
les
sbb
xor
cmpl
add
loopne
or
add
mov
xchg
push
movsl
cmc
add
add
rcrl
lahf
inc
pop
rolb
mov
pop
pusha
xor
add
loop
sub
add
push
cmc
mov
push
add
add
add
xchg
sbb
adc
std
addb
jns
cmp
imul
das
sti
sub
xor
xchg
inc
stos
add
xchg
call
ljmp
fstpt
add
movl
call
lret
xchg
int
add
inc
mov
add
stos
add
push
in
jns
dec
jne
adc
pop
add
xor
je
mov
fadds
cwtl
jo
adc
icebp
mull
adc
cwtl
daa
xor
xorl
mov
andl
inc
out
add
jmp
insl
aad
popa
lret
cld
cmp
ds
mov
and
add
in
rcl
aad
xor
fstpl
scas
add
lods
inc
nop
fs
xor
fcom
and
decb
xchg
popa
sub
add
mov
add
scas
int
stos
add
outsb
call
mov
and
fdivrl
sbb
sub
xchg
insb
lock
add
add
add
sub
add
add
xor
cli
loop
lret
js
test
add
dec
inc
addb
cmp
pop
ss
addb
mov
xchg
adc
test
and
add
add
or
push
jb
add
xor
std
jl
jmp
insb
adc
outsb
call
fists
mov
ss
mov
mov
sbb
lea
mov
or
add
xchg
in
jg
xor
add
loopne
repnz
jbe
jle
mov
or
add
add
jo
xor
add
mov
add
pop
daa
mov
add
arpl
sub
add
inc
and
add
sub
add
shlb
and
jb
cmp
ret
jp
add
add
xchg
imul
aad
jne
add
fwait
add
add
add
add
test
add
push
cmpsb
add
cmpsb
add
int3
mov
add
and
adc
testb
cmp
add
fwait
je
fldl
add
jns
push
add
cmp
mov
scas
test
ljmp
add
jmp
enter
push
cmp
das
movsb
add
add
add
and
test
add
stos
add
add
xchg
mov
test
shll
xlat
jnp
add
pop
rcl
pop
mov
add
pop
rcl
roll
mov
pushf
mov
add
push
in
call
xchg
fsubrs
dec
jo
cmp
aaa
incb
add
cmp
mov
push
lods
add
push
add
pop
push
jmp
sarb
pop
ja
sub
movsb
add
lds
jb
dec
push
or
add
addb
mov
add
arpl
pushf
call
pop
lock
and
add
sbb
arpl
add
ud0
ds
cmp
iret
jmp
add
sub
add
pop
insb
shl
iret
pop
adc
add
add
jnp
in
scas
add
xchg
stos
add
and
push
mov
add
add
mov
add
pop
adc
inc
test
add
add
xchg
push
dec
sahf
jnp
add
sahf
bnd
jns
jo
sub
add
xchg
mov
xchg
adc
add
sub
add
stos
nop
mov
add
jg
jns
jo
pop
das
jl
xchg
dec
push
jecxz
add
dec
cltd
and
xor
pushf
jb
add
sbb
mov
mov
rcrl
movsl
cld
loope
dec
popf
xchg
enter
cwtl
xchg
mov
std
mov
dec
adc
add
subl
xor
arpl
jge
mov
xchg
push
lret
nop
pop
add
add
xchg
data16
js
cmp
test
add
add
pop
iret
mov
adc
stc
add
fs
std
sar
add
push
out
mov
xchg
dec
dec
pusha
fwait
aam
mov
pop
xchg
xchg
inc
jecxz
jns
aas
ds
cmpsl
sub
out
sub
add
push
loope
fsubrs
sbb
add
sahf
mov
clc
mov
sbb
and
dec
inc
loop
int3
add
pop
test
imulb
add
add
js
leave
mov
add
in
in
adc
xor
lods
ret
jmp
pop
je
mov
cmc
pop
push
popa
sub
add
add
sub
add
fldl
add
xchg
add
lock
mov
cmpl
orl
lahf
jge
orl
sbb
add
push
jbe
add
add
dec
aam
insl
sub
xchg
sbb
inc
stos
rcll
dec
inc
add
or
xorl
gs
jecxz
addb
mov
push
fcomip
jmp
inc
out
mov
cmp
movsl
push
cmp
jns
inc
lret
faddl
add
jecxz
fs
mov
cwtl
mov
neg
jno
pusha
decl
icebp
push
or
add
lds
jb
mov
stos
add
cltd
fdivp
sub
add
add
or
add
sbb
or
add
sbb
inc
xchg
mov
add
pop
push
lcall
mov
sub
add
adc
add
scas
add
add
sub
daa
inc
dec
sbb
fs
inc
outsb
jno
sbb
frndint
and
inc
dec
outsl
addr16
sub
add
mov
loope
jno
add
push
aas
lahf
addb
mov
push
jnp
cmc
xchg
jae
adcl
add
cmpsb
add
push
hlt
add
cmp
add
mov
lahf
cmp
ljmp
pop
sub
mov
gs
scas
add
or
add
push
stos
pop
sahf
aas
rclb
pop
and
dec
ficompl
cmp
sbb
sub
xor
outsl
faddp
js
mov
or
add
dec
dec
xor
pop
dec
jnp
pushf
pop
inc
movsl
and
icebp
addr16
and
add
outsl
jne
add
popf
movsb
add
mov
push
push
aas
rcll
mov
je
sbb
inc
cmpsl
jp
cmp
add
xlat
push
dec
mov
inc
repz
inc
test
add
cmp
jecxz
add
add
rclb
dec
and
mov
inc
movsb
add
scas
add
add
pop
insl
sbb
imull
push
sbbl
add
ja
cmp
ds
ljmp
add
pop
in
out
pop
scas
int
je
dec
rorl
outsl
rcl
mov
iret
adc
jb
data16
pusha
test
mov
jp
cmpsb
add
pop
ret
outsb
inc
movsl
imul
add
fcoml
dec
fwait
mov
out
jbe
scas
add
mov
add
mov
push
dec
push
mov
jle
add
in
xchg
cmpsl
lret
add
daa
sbb
cmpsl
mov
fwait
ror
pop
rcrl
imul
inc
sbb
sub
xor
push
pop
and
ljmp
out
lret
stos
add
xor
mov
mov
or
add
out
sbb
fcompl
add
fisubrs
repz
imul
add
add
pop
jno
pusha
xchg
add
aas
sub
add
sbb
xor
add
add
bound
push
mov
cli
xor
xchg
repz
sub
add
jo
sahf
mov
aad
add
sbb
repnz
and
inc
data16
add
inc
popf
sub
add
xor
inc
mov
rorl
or
add
mov
mov
add
mov
adc
jp
ret
mov
add
mov
test
add
add
xor
add
add
out
gs
jmp
add
fwait
arpl
mov
mov
jle
into
shl
pop
fs
leave
das
nop
pop
and
cmovl
inc
aam
cmp
sti
bound
add
sbb
add
cld
mov
mov
xchg
scas
add
dec
bound
add
push
add
bnd
xlat
std
fwait
ret
in
and
in
stos
js
aad
push
push
lods
add
outsb
shlb
mov
xor
sbb
push
lahf
fs
lcall
push
mov
xor
mov
sbb
add
inc
dec
in
test
add
add
loop
fbld
add
popf
mov
add
add
mov
out
in
in
mov
mov
jne
add
icebp
jp
loopne
aad
dec
mov
push
add
jno
add
cmp
add
jl
jecxz
push
mov
push
mov
mov
add
xor
cmp
je
cmp
add
test
add
int
mov
add
add
adc
mov
or
stos
xchg
fs
fistps
jecxz
outsb
jnp
add
push
jge
mov
mov
jge
sahf
dec
pop
sti
dec
cwtl
decl
test
stos
add
add
mov
sahf
adc
scas
add
sub
jg,pt
push
add
fsubrs
int3
xchg
test
add
dec
popa
sub
ljmp
mov
sub
add
add
xchg
inc
test
adc
push
xchg
jns
daa
int
pushf
pop
xchg
add
addb
cmp
aad
mov
sahf
mov
add
or
add
popa
and
add
mov
scas
add
cli
adc
ljmp
out
mov
shlb
outsl
cmp
mov
push
add
rclb
out
pop
or
add
add
inc
arpl
neg
push
jmp
and
add
sbb
xor
mov
mov
js
inc
xchg
inc
repz
add
mov
ret
sub
add
mov
add
fsubr
jnp
pop
and
js
fs
or
mov
add
push
add
mov
addb
add
pop
xchg
test
sbb
push
mov
aas
mov
pop
movsl
mov
add
sbb
add
add
push
inc
xchg
into
mov
add
mov
add
out
jge
out
test
add
add
fiadds
daa
xchg
adc
push
cmp
jns
addb
add
addb
xor
aad
jecxz
add
add
add
jle
inc
push
push
add
adc
fucomip
hlt
loopne
add
shl
jns
jmp
dec
fldt
inc
push
in
jne
fsubp
mov
in
push
cmp
inc
cli
add
add
aaa
push
repnz
ss
sub
add
add
sbb
fimull
jae
fs
fidivl
sahf
dec
dec
push
add
ret
add
insb
fiaddl
add
sub
add
int3
in
dec
push
add
enter
jns
mov
in
in
cmp
xchg
xchg
sbb
add
sbb
lret
add
sub
add
pop
stc
ss
in
popf
stos
add
fists
mov
add
sbbl
push
add
rcrb
add
inc
push
or
add
add
pop
nop
jno
mov
push
inc
shll
add
add
mov
add
and
add
add
adc
dec
sub
cwtl
inc
add
add
mov
lods
push
add
loope
aaa
lret
push
add
jle
xor
dec
dec
repnz
dec
inc
pushf
addb
or
add
xor
add
dec
mov
add
jl
add
orl
xor
shll
add
ja
lods
dec
adc
mov
add
cld
outsl
shl
stc
test
add
lods
add
jl
push
xchg
sub
or
add
cli
stos
add
ret
stc
dec
inc
or
add
gs
lock
cmpsb
add
push
pop
scas
add
out
rcll
add
daa
ljmp
add
push
add
lods
add
stc
mov
add
jg
aas
pop
fmul
xchg
pop
stc
cmpsb
add
mov
aaa
test
add
lods
call
ljmp
mov
add
xadd
xchg
add
lods
adc
xchg
idiv
push
pushf
orl
lock
mov
inc
insl
aaa
and
add
dec
pop
jnp
jg
or
add
repz
lss
insl
xlat
cmp
repz
inc
sbb
dec
cmc
push
test
add
jge
pop
add
bound
cmp
jnp
inc
addl
lret
cmp
xchg
jge
mov
sahf
push
add
aaa
inc
std
lahf
jnp
cmpsb
add
mov
add
add
xchg
je
mov
mov
add
sub
ror
add
decb
add
sbb
mov
clc
clc
incl
add
push
pop
dec
inc
cmpsl
hlt
or
add
adc
int
fs
fnsave
mov
adc
xchg
add
dec
shrb
adc
xchg
push
scas
mov
dec
pop
sti
cmp
leave
cmp
pop
pop
mov
add
fwait
dec
in
dec
insl
sub
add
ret
aaa
or
add
xlat
sub
add
mov
pop
pop
lret
add
cli
pop
jl
cld
jmp
jno
mov
jno
add
mov
push
movzbl
int
add
xchg
fld
std
add
cmp
bound
fistpl
imul
add
adc
aad
lea
pushf
cwtl
or
add
xor
xchg
or
add
ret
sbb
cmp
sbb
dec
ret
ret
mov
add
add
cmp
lahf
test
fcompl
xchg
pop
mov
clc
pop
movntq
add
add
fisubrs
mov
add
add
outsb
mov
sti
in
xchg
arpl
lds
add
add
or
test
add
mov
add
or
arpl
cmp
push
add
pusha
xor
pop
andl
add
jno
lret
sahf
mov
jnp
aas
test
das
and
inc
push
sub
rorb
add
cmp
or
sahf
xchg
aad
in
inc
out
xor
aad
jbe
bndldx
add
in
xchg
jge
pop
and
scas
jg
in
mov
imul
lahf
dec
pop
cmp
popf
fwait
mov
mov
xchg
test
enter
jmp
add
test
or
add
adc
add
add
add
das
mov
icebp
les
add
popf
push
xor
add
cmp
js
lds
ffree
out
mov
sbb
flds
adc
mov
mov
outsb
ror
push
aas
addb
xchg
js
js
addr16
fs
pop
pop
movsb
add
pop
and
outsb
in
jae
dec
ljmp
add
les
sbb
xchg
sbb
movsl
clc
or
add
cmc
in
xchg
fisubrs
ret
lds
inc
lock
mov
jns
stos
mov
ja
cmp
les
add
hlt
jp
pop
in
cltd
sbb
add
mov
cwtl
xchg
add
inc
push
or
or
add
adc
inc
mov
add
add
mov
xchg
lret
jg
cmpsl
cmp
push
add
add
adc
push
add
das
inc
negl
cmc
ret
fcmovne
xchg
add
add
sbb
mov
cmp
lods
jns
sbb
or
add
out
shr
jp
jns
call
push
pop
adc
inc
into
pop
mov
add
in
mov
aaa
push
out
lods
add
dec
xchg
jl
fdivs
add
aas
fidivs
xchg
loope
out
je
mov
xor
mov
or
cmp
shlb
push
ljmp
add
in
testl
jecxz
and
add
cmp
add
pop
xor
or
add
pop
jp
add
fisttpll
add
mov
add
and
add
or
cmpsb
add
aad
push
cmp
sub
jnp
inc
in
idivl
lret
test
leave
jbe
cwtl
sub
add
xchg
push
insb
popa
push
sbb
clc
xor
mov
inc
fisubrl
stos
inc
jbe
lods
add
dec
out
loopne
movsl
mov
pushf
cli
sbb
push
add
pop
mov
pop
aas
mov
add
xchg
cmpl
add
sbb
test
add
add
and
add
mov
inc
cltd
mov
xor
lds
pop
lods
add
add
jno
xchg
cltd
mov
out
test
add
sub
add
jno
xor
fists
das
mov
cwtl
cmp
add
xchg
movsl
cmp
push
cmp
or
add
std
add
nop
xor
lea
or
or
add
add
addr16
inc
mov
add
cmp
add
push
fisubl
add
jnp
add
xor
add
stos
add
adc
xchg
add
decb
add
add
dec
rclb
lret
jno
outsb
loop
and
pop
mov
jns
or
add
pop
shl
lock
cmp
mov
scas
arpl
sbb
and
mov
pop
aas
adc
add
jne
jmp
sti
xor
push
jns
mov
add
cmp
mov
and
add
mov
inc
lods
cmpsb
add
aas
inc
or
ja
xlat
or
add
shll
xor
add
sbb
loop
mov
jbe
add
fisubl
aas
outsl
mov
add
ds
add
fsubrs
sahf
popa
xor
fisubrs
add
push
add
jle
add
addb
movsb
add
lcall
push
mov
sbb
add
or
inc
pop
xabort
leave
cmc
int3
adc
mov
or
add
aam
pop
gs
adc
scas
and
add
mov
add
xor
ja
fists
adc
int
sbb
loopne
xchg
ljmp
cmp
push
cmc
clc
aas
sub
add
add
dec
and
add
add
sbb
add
and
add
fdivrl
rcrl
ja
repnz
ret
cld
pop
mov
add
subl
into
push
push
add
add
add
fcoml
mov
add
push
cmp
add
fdivl
sarb
mov
add
jge
add
pop
push
add
xor
push
push
push
push
clc
mov
mov
add
cmp
scas
add
jae
jae
pop
cwtl
push
xchg
add
mov
xlat
xchg
insl
loope
jns
add
or
add
or
add
pop
stos
inc
std
inc
in
icebp
or
xchg
xchg
adc
or
add
jl
add
mov
out
pop
push
iret
inc
je
xor
insl
icebp
stc
xorl
jnp
loopne
add
adc
or
lea
add
and
das
pop
sbb
inc
lea
pop
mov
push
movsl
pop
xor
add
test
add
add
jmp
dec
scas
leave
xchg
loope
mov
iret
mov
add
mov
pushf
push
lods
in
mov
pop
dec
xchg
js
cmc
insb
or
add
pop
cmp
add
cltd
sahf
imul
pop
in
mov
adc
fadds
andl
mov
fildl
sbb
icebp
int3
mov
sti
pop
sbb
xlat
adc
add
add
sbb
xor
ljmp
inc
pop
adc
add
xor
and
cmpsb
add
popa
and
sbbl
add
pop
and
add
mov
lods
dec
cmp
data16
add
add
pop
add
testl
lock
add
cmp
ja
add
scas
add
pop
shl
incb
push
cld
ret
lcall
hlt
push
insb
dec
sub
add
icebp
adc
sti
repnz
pop
dec
mov
jne
repz
fs
aas
outsb
gs
jmp
xchg
arpl
mov
leave
dec
dec
arpl
cld
inc
add
add
add
leave
fucomi
ret
test
add
fdivrp
clc
mov
cld
jecxz
sahf
mov
add
adc
add
add
jns
mov
add
or
add
add
adc
les
ficomps
mov
leave
push
mov
adc
push
add
scas
fucom
or
add
cltd
test
movsl
dec
loop
xchg
cmp
sbb
adc
addb
repz
jp
pop
xchg
sbb
jecxz
add
arpl
xchg
lods
add
inc
pop
repz
roll
add
popf
pop
mov
shlb
imul
add
dec
jbe
add
ljmp
out
jo
jno
pop
sub
add
mov
add
add
cmp
add
add
sub
add
mov
add
cmp
insl
sbb
addb
dec
pop
lahf
and
add
xchg
and
add
out
xor
xor
or
adc
imulb
jmp
add
popa
jecxz
and
ret
in
pop
fcmove
mov
jns
add
movsb
add
dec
sbb
add
push
inc
cmp
lock
mov
push
xor
aam
insl
cvtdq2ps
dec
pop
aam
clc
loopne
add
mov
sbb
cmc
int
pop
inc
mov
cli
ds
movl
mov
mov
inc
mov
add
faddl
add
lahf
repnz
inc
cmp
xor
add
int3
ljmp
repz
mov
cmp
mov
add
inc
testb
cmp
cmp
add
mov
xor
repnz
xor
add
lahf
jbe
add
lods
add
int3
or
add
movsb
add
push
repz
dec
lock
and
add
in
out
mov
jge
and
add
xchg
add
shl
cmp
push
orl
xor
cmp
fisubs
add
popa
int
ret
mov
or
cmp
push
and
imul
xchg
in
mov
add
adc
xchg
outsl
cmp
xor
add
sbb
add
jb
xor
outsb
xchg
mov
add
pop
aas
mov
lahf
push
and
loope
push
add
leave
adc
dec
test
add
dec
pop
shl
xchg
add
add
sbb
sti
rol
test
add
jl
data16
add
xchg
xor
fdivp
test
push
add
or
movsb
add
jle
mov
addb
mov
add
mov
inc
sub
sub
lret
push
push
add
and
add
add
in
add
ret
mov
adc
add
cmp
dec
lods
test
add
and
add
mov
addr16
xchg
sbb
add
pop
jmp
rcrb
jns
fsts
addr16
adc
sbb
repz
add
fwait
xchg
push
jecxz
outsb
xchg
test
add
jnp
fiadds
add
mov
inc
rcl
dec
jle
add
jb
shr
dec
cld
xchg
fsubrl
aas
pop
jmp
add
jle
cmpsb
add
push
sub
add
ror
ljmp
stos
add
popa
mov
jno
add
pop
xor
xchg
cmp
jmp
mov
add
repz
add
push
sub
add
add
xor
jecxz
add
sub
ret
mov
dec
push
lret
gs
sbb
add
xchg
mov
xor
mov
fsts
shlb
push
pop
lahf
aad
loope
das
or
add
outsb
sti
xchg
cmp
ds
add
jg
push
jbe
add
out
jg
dec
aas
outsl
lock
add
or
adc
add
mov
add
shrb
add
add
pushf
mov
jmp
lret
inc
lea
cmpsb
add
mov
shll
and
add
stc
push
add
add
fistpl
mov
cli
and
add
mov
add
or
add
and
pop
aam
pusha
pop
push
test
add
cmp
jns
mov
add
std
hlt
mov
xchg
mov
push
add
mov
rorb
shll
dec
push
mov
mov
lock
rcl
inc
pop
cmp
sbb
sub
add
add
data16
jno
insl
xchg
xor
add
pop
fiaddl
add
shll
movsb
add
add
add
movsb
add
imul
add
mov
xchg
pop
cmp
xchg
mov
add
add
addb
mov
add
sahf
fnstenv
push
enter
pop
mov
aaa
add
add
lds
jns
xchg
add
jne
jge
add
pop
jae
stos
add
idivb
dec
or
adcl
fbstp
xchg
loopne
add
insb
imul
xor
xor
imul
add
loopne
jmp
add
adc
jecxz
jl
xor
dec
and
add
push
add
xchg
lahf
dec
cltd
fcmove
mov
xchg
jne
mov
add
loopne
dec
xchg
xchg
add
push
add
sbb
inc
jo
add
out
inc
push
inc
xchg
cltd
push
add
mov
inc
add
add
and
add
mov
add
movsl
mov
scas
sub
sub
lea
leave
fbld
add
loop
pop
mov
add
out
in
mov
add
jae
out
mov
add
sub
add
add
push
lock
add
add
add
add
nop
hlt
and
add
mov
add
add
fistpll
out
imul
add
out
sbb
icebp
inc
sub
add
sub
out
cwtl
mov
add
inc
fcmovne
or
add
push
push
hlt
sti
insl
xor
cmp
int3
popa
add
lea
xchg
add
mov
add
add
lret
xchg
dec
add
enter
stos
add
sbb
add
xor
sbb
jnp
mov
add
fcomps
sub
and
add
add
add
push
cmp
fsubr
aad
fcmovnu
loopne
fwait
mov
jmp
lret
int
hlt
push
add
lret
add
sbb
add
roll
xlat
loopne
fwait
mov
add
or
lods
mov
fcmovb
adc
jp
out
repz
in
sarb
jmp
and
add
add
out
stc
pop
addb
in
cli
sub
add
mov
mov
movsb
add
addb
fmull
mov
lret
inc
insb
inc
call
add
add
mov
add
hlt
ret
add
fimuls
xor
xor
add
add
fisubrl
jns
add
mov
jo
test
add
dec
outsb
in
jecxz
ror
outsb
leave
cmp
call
xchg
push
lret
out
shrb
xlat
sub
add
addb
rclb
add
pop
jb
add
les
jg
sub
dec
out
cmp
loop
add
add
sub
add
sbb
jbe
jb
adc
iret
dec
xchg
ljmp
test
add
or
add
push
shlb
add
lds
je,pt
add
xor
dec
pop
lods
add
mov
add
and
add
inc
mov
add
repz
bound
pop
pop
addb
lods
push
mov
lea
pushf
and
mov
add
add
pop
enter
and
add
fisttpl
pop
dec
lds
mov
add
xchg
arpl
adc
add
pop
mov
cli
or
add
sub
add
add
addb
pushf
xchg
in
push
mov
xor
fisttpl
jp
add
loope
in
mov
add
dec
push
pop
mov
out
sub
jge
pop
jp
pop
mov
add
add
int3
or
add
test
add
in
clc
pusha
into
fsubl
add
sub
add
push
sbb
imul
bound
add
or
add
or
push
sub
add
sub
add
jbe
leave
and
dec
or
int
fcmovu
or
add
add
mov
movhps
cmp
add
sub
and
add
pop
ds
out
add
mov
je
lcall
jmp
stos
add
jg
add
mov
add
ds
and
add
add
cli
jecxz
push
repnz
icebp
add
lahf
xchg
stc
xor
cmc
lret
addb
mov
add
in
mov
jmp
dec
or
add
push
jmp
add
pop
cmp
xchg
sbb
in
lods
sub
add
add
mov
or
sbb
add
in
sarl
add
add
add
js
add
inc
sbb
lock
or
add
push
outsl
add
das
dec
push
pop
push
add
xor
jb
add
jg
loope
lods
jbe
jge
inc
push
add
dec
mov
cmp
jno
fwait
ja
mov
add
jmp
jno
pop
inc
adc
add
ret
jl
out
xchg
jno
push
jno
or
lods
fadd
mov
movsl
or
xor
add
call
inc
or
add
add
xor
add
and
add
stos
cmpsl
dec
out
inc
mov
add
sbb
dec
xchg
adc
push
jge
add
test
add
ds
cmp
jecxz
jmp
mov
add
add
add
cmp
jp
jbe
mov
add
add
and
add
stc
push
jae
insb
and
add
pop
add
and
add
add
inc
sbb
add
push
ljmp
push
add
jmp
add
inc
movsl
inc
addb
mov
pusha
pop
push
add
sbb
push
mov
and
add
push
sbb
int
pusha
add
add
ret
add
push
cmp
add
outsb
leave
adc
xchg
int
sbb
add
mov
hlt
dec
xchg
add
add
add
daa
arpl
mov
add
pushf
rclb
inc
and
add
stc
imul
sbb
add
movl
add
add
add
in
in
and
add
jle
shr
jl
add
imul
or
add
add
xor
mov
add
sbb
aad
movsb
add
push
adc
add
jmp
inc
testl
sbb
pop
add
add
push
add
xor
cmp
out
inc
xchg
jo
pop
in
or
icebp
mov
ljmp
call
mov
jne
cld
cmp
stos
add
arpl
out
enter
adc
add
enter
sub
jno
mov
add
enter
cmp
pop
xchg
or
push
push
add
in
mov
addb
or
add
add
loope
push
outsb
pop
jbe
inc
sbb
movsb
add
sarb
mov
push
mov
add
das
cmp
cmpsl
das
push
add
inc
jp
test
cli
xor
xor
rol
test
add
in
add
dec
mov
dec
or
inc
ret
mov
pop
xchg
mov
lret
push
cmp
test
add
pop
pop
cmp
sbb
pop
mov
lds
add
mov
sub
cmc
fisttps
jl
add
shlb
add
push
pushf
fstpl
iret
jle
pop
mov
jl
pop
jns
aas
or
add
inc
adc
add
dec
out
sbb
iret
cmp
stos
or
add
add
add
pop
mov
lahf
lea
add
jns
add
mov
xor
cwtl
inc
pop
pusha
sub
add
ja
int
or
add
add
mov
mov
push
call
insb
into
xor
jb
add
push
xor
test
add
into
mov
ljmp
mov
in
push
cmpsb
add
xchg
xor
xor
cld
cld
out
inc
addb
or
xchg
jl
mov
add
sbb
and
add
mov
add
xor
add
iret
add
xchg
leave
cwtl
outsb
sti
outsl
cwtl
notl
aam
test
add
loopne
and
adc
inc
loopne
sub
add
mov
mov
jmp
add
xchg
inc
icebp
iret
mov
adc
sbb
aad
add
add
aas
in
cmp
add
add
leave
js
xor
jl
and
add
addb
jae
jns
add
adc
add
mov
add
add
fsubrl
cli
mov
sbb
in
cmpsl
xor
cmp
fsubr
inc
lods
addb
pop
adc
sub
lods
mov
call
adc
inc
mov
gs
movsb
add
sub
add
add
push
add
push
jg
in
add
sarb
shl
jle
add
sbb
divl
addb
repnz
xchg
xchg
pop
add
shl
jne
add
add
and
add
and
xchg
shrb
lcall
dec
test
mov
xchg
call
inc
push
loop
add
add
jb
lcall
movsb
add
stos
add
xor
shlb
add
jle
adc
jmp
loop
ja
mov
add
shlb
fists
leave
iret
leave
jge
add
cld
xchg
sbb
sbb
adc
adc
xchg
xchg
pop
clc
mov
mov
add
add
jle
mov
fwait
adc
add
add
push
jmp
inc
std
mov
mov
add
jne
sbb
add
shrl
addb
test
mov
xchg
test
add
ljmp
addb
inc
push
inc
mov
add
hlt
nop
nop
and
mov
xchg
jb
lcall
or
rcrb
fwait
call
int3
add
xlat
jbe
mov
lret
jl
pop
sub
add
fwait
push
cltd
mov
xchg
push
loopne
xor
add
xchg
add
adc
mov
add
jg
arpl
loop
xor
xchg
test
pop
fstpl
test
add
icebp
mov
adc
sbbl
add
scas
sahf
popl
dec
jl
adc
mov
add
and
add
add
sbb
lods
add
icebp
lcall
in
hlt
lods
add
cltd
out
xchg
jle
mov
push
mov
addb
mov
out
repz
add
jmp
cld
mov
add
subl
or
add
int
cmp
shlb
rcll
add
add
and
add
add
popa
sub
fcoms
das
jo
inc
mov
stc
icebp
arpl
in
shlb
fists
add
in
or
add
add
dec
add
jmp
xchg
cmpsb
add
shr
imul
shrb
xor
and
rorb
nop
push
jne
mov
add
add
jnp
sub
add
add
or
fnstcw
fmuls
add
jl
fwait
mov
movsl
jno
repz
cmpsl
jle
jl
add
sub
add
jp
dec
addr16
jns
mov
rcrb
add
add
add
push
shlb
sub
add
add
xchg
jmp
mov
add
xor
lret
xchg
add
add
add
add
mov
add
xchg
add
fs
sub
add
mov
adc
imul
add
cld
push
push
out
aad
add
cmp
ret
stc
push
lods
add
jl
mov
scas
xchg
mov
xchg
and
stos
add
mov
das
test
outsb
push
repnz
inc
fldt
dec
mov
clc
and
mov
xor
dec
std
mov
rorb
add
dec
mov
rcll
push
add
mov
rolb
test
add
add
add
das
fcomps
iret
popa
incb
pushf
in
test
add
xchg
cmp
add
add
mov
mov
jb
aad
cmp
add
push
test
push
pop
add
xor
addl
xchg
cmp
push
test
mov
movsb
add
sub
add
mov
das
push
push
jae
sub
add
add
add
pop
rcrl
test
add
dec
testl
ss
sbb
inc
aas
arpl
add
push
orl
add
add
add
add
fs
xchg
loope
int3
gs
addr16
jb
shll
add
jle
stc
sbb
mov
lcall
jle
add
adc
ja
xchg
hlt
dec
imul
movq
pop
mov
mov
add
subl
add
insl
adc
hlt
jp
stos
push
lds
mov
aad
clc
pop
jg
add
cmp
imul
ss
pusha
int
dec
imul
fnstsw
das
rol
add
insb
addb
xchg
mov
cmp
sbb
mov
cmp
mov
xchg
test
jb
imul
add
adc
aaa
adc
rclb
stc
out
and
fxch
sbb
test
add
js
shr
add
add
and
ds
rorl
or
daa
outsl
jns
das
dec
clc
add
pop
jmp
jns
imul
in
xor
call
push
add
outsb
pop
nop
jg
mov
arpl
and
add
ss
xchg
add
stos
push
dec
pop
cmp
sub
out
jge
insl
loop
daa
inc
dec
add
add
aaa
push
jmp
xor
repz
into
clc
fidivrl
add
mov
les
add
add
dec
lock
mov
xchg
cmp
dec
xor
add
push
scas
add
fcoml
push
cltd
rcll
mov
add
add
addr16
lahf
leave
inc
fistpll
add
push
cmp
dec
adc
fwait
sbb
add
mov
faddl
mov
jl
fcmovne
cmpsl
adc
aas
jmp
xor
enter
lea
push
add
push
add
xlat
and
aam
add
cwtl
insb
sub
add
arpl
inc
xchg
into
mov
add
lret
add
mov
fadd
push
or
out
xchg
prefetchw
xchg
jae
xor
repz
and
pop
mov
add
mov
add
xchg
leave
lds
add
jecxz
negl
push
shrl
setg
add
lds
bound
mov
arpl
mov
pop
add
add
popa
mov
add
inc
mov
jl
lcall
add
push
add
daa
sub
add
mov
add
push
sub
add
inc
mov
add
sub
add
inc
and
hlt
push
mov
add
mov
add
and
ja
jl
pushf
inc
stos
add
enter
call
dec
outsl
addb
cmp
mov
leave
mov
mov
add
sbb
ret
xor
add
fistps
adc
inc
dec
jb
dec
cmc
loopne
into
scas
add
add
pop
les
add
lock
shl
shlb
add
jnp
addb
push
and
add
out
or
xchg
or
add
add
xchg
add
add
push
mov
or
out
rorb
lret
inc
pop
push
or
add
scas
inc
jnp
add
in
mov
add
add
fs
outsb
cld
pop
cld
jmp
bound
daa
mov
mov
push
fs
lea
bound
mov
add
add
dec
aaa
cmp
push
jbe
dec
mov
add
lock
lods
add
popa
mov
enter
add
inc
jge
xchg
add
pop
or
aad
push
jno
fisubl
add
mov
jne
and
and
add
add
fwait
xchg
adcl
xchg
std
inc
sti
xchg
mov
cmpsl
add
add
decl
xor
jnp
adc
add
or
or
add
add
cwtl
les
aad
xchg
and
add
cltd
push
iret
fisubs
add
sub
add
mov
add
xlat
cld
adc
jbe
je
test
add
add
xor
lods
add
xor
add
add
add
jg
je
pop
test
add
and
add
add
jmp
nop
lret
and
add
xchg
dec
shrb
add
repz
push
jle
cmp
insb
jg
jmp
lcall
mov
or
add
mov
xchg
xor
add
pop
out
mov
inc
and
cmp
cli
pop
js
or
syscall
rclw
fsts
addr16
aad
mov
out
mov
mov
enter
xor
cmp
add
adc
lods
add
pushl
nop
lea
add
ret
out
out
mov
add
loopne
dec
stos
add
shlb
ret
cli
push
jbe
pop
mov
insb
mov
add
cmp
addb
sub
add
cmpsl
dec
lods
add
add
and
add
add
dec
xchg
dec
add
mov
loopne
test
push
add
inc
in
pop
notb
dec
and
fisubs
add
stc
mov
add
add
adc
xorl
int3
mov
or
call
imulb
addb
inc
add
test
jg
adc
enter
push
push
mov
add
push
ds
mov
add
mov
push
xchg
nop
imulb
add
enter
les
idivl
mov
std
icebp
ja
ds
lods
add
push
iret
and
out
push
mov
adc
call
add
add
ds
mov
out
sbb
cmc
icebp
add
dec
bound
or
add
add
lods
mov
add
js
xchg
sbb
addb
add
arpl
add
push
sub
add
xchg
add
push
jecxz
add
lods
in
in
ljmp
cmpsb
add
sbb
sbb
aaa
mov
xchg
sarb
xchg
add
lret
sti
add
xor
mov
adc
add
add
flds
add
inc
push
add
loope
push
pop
mov
add
add
jg
test
repz
xchg
push
fs
ficomps
popa
addl
add
mov
add
cmp
xor
dec
sub
add
shl
out
and
add
pop
jae
inc
mov
pusha
sbb
fildl
push
roll
add
mov
push
add
cli
jg
lods
insb
adc
sbb
xchg
cld
sub
add
add
hlt
fwait
dec
loop
add
jmp
popf
sbb
add
add
and
mov
enter
inc
cpuid
add
cmp
push
add
cmp
inc
imul
add
cmc
push
jecxz
fistpl
and
jae
add
cli
lahf
inc
stos
add
lcall
ret
jb
lock
repz
int
dec
sub
cli
xor
aas
lret
dec
scas
xlat
sub
add
add
pop
and
stc
lods
add
jns
sahf
pop
out
jae
xchg
add
add
or
add
cmp
fistl
int3
pushf
aaa
xchg
sub
add
xchg
push
xor
fdivrl
mov
add
sub
add
add
mov
pop
mov
rcr
shl
or
add
loopne
insl
cmp
dec
mov
cmp
add
paddsb
jb
jp
rorl
enter
dec
imul
add
shl
loop
addb
lcall
add
add
push
add
pushf
inc
popf
xor
fnstenv
lret
ljmp
mov
add
cmpsb
add
mov
add
out
mov
add
mov
add
add
xchg
add
add
in
gs
push
pop
mov
fsubl
xchg
add
add
dec
adc
add
mov
std
lea
movsl
das
push
jbe
outsb
pop
inc
jb
enter
mov
into
lea
sbb
sbb
mov
rcrb
in
lret
ljmp
test
add
add
pop
inc
and
add
das
lock
pop
das
mov
lcall
imul
push
icebp
out
or
push
add
ret
jo
jbe
imul
add
xor
cmc
cmp
add
jg
dec
adc
cmp
mov
inc
mov
into
les
adc
add
add
mov
add
add
lods
xor
pop
loop
pop
rcll
add
stos
add
shll
mov
repz
sahf
in
adc
add
xchg
test
addr16
pop
xor
add
xlat
inc
xchg
add
jnp
inc
and
add
or
fxam
mulb
add
cmpsl
outsl
pop
test
add
add
outsl
dec
push
mov
mov
cmpsb
add
add
add
add
mull
jbe
enter
mov
add
xor
add
add
add
call
add
cwtl
mov
add
cwtl
mov
sarl
ja
and
popa
push
push
and
scas
add
adc
sti
push
fcompl
adc
push
inc
enter
testb
xchg
and
lcall
jecxz
and
add
cmpsl
and
add
add
ljmp
pop
inc
pushf
jno
or
pushf
add
add
jne
dec
and
add
hlt
mov
add
add
lea
xchg
out
mov
and
add
lcall
dec
sbb
adc
add
pop
frstor
xor
cmp
add
jp
jb
add
cmp
int3
fcoms
jle
or
xor
orl
add
lret
inc
enter
pop
pop
xchg
xor
mov
daa
in
scas
add
repnz
xchg
mov
insb
add
adc
or
add
ds
and
add
push
xor
xchg
adc
pop
dec
jge
shll
add
vmread
inc
loopne
add
jp
and
inc
stos
add
add
lods
inc
jno
add
pushf
adc
add
pop
jnp
add
addb
push
shll
add
lods
add
mov
jnp
add
pop
pushf
push
add
add
lcall
mov
xchg
mov
add
cmp
andl
mov
add
pop
imul
lahf
arpl
cmpsb
add
xor
mov
jo
pop
pop
dec
mov
nop
mov
add
pop
mov
add
and
add
add
mov
push
xor
add
and
xchg
lods
dec
jnp
fs
add
mov
add
mov
add
push
add
add
addb
mov
ret
lds
pop
dec
repnz
add
lods
add
sti
out
or
add
add
fdivr
xor
jle
lcall
add
dec
pushf
fsubs
add
fwait
cmp
adc
cmp
add
js
aam
div
fisubs
push
add
call
add
push
add
bswap
mov
ss
sub
add
xchg
jmp
iret
push
hlt
sub
loopne
mov
add
loop
add
and
add
xchg
int3
insb
xor
xor
mov
cmp
xor
add
add
or
loopne
cmp
mov
jp
add
js
sbb
imul
push
dec
jae
arpl
add
jno
mov
lea
mov
mov
flds
dec
loop
adc
push
test
fists
mov
add
add
icebp
and
add
add
les
mov
add
add
mov
fnstsw
fisttps
sti
or
ds
pop
push
sbb
mov
pop
jnp
dec
mov
mov
and
add
out
push
add
cmp
aaa
mov
add
push
rorb
add
dec
push
add
add
test
add
add
leave
push
add
insl
dec
repz
in
test
inc
fcoml
add
xchg
movl
add
lahf
pop
push
leave
stos
add
roll
jns
aam
add
insb
xlat
iret
sbb
pop
sbb
lahf
jle
test
cmp
mov
mov
add
aas
mov
mov
ret
and
add
add
add
add
test
add
add
mov
mov
jge
mov
add
inc
out
lock
aam
lret
add
cmp
jl
sub
add
push
jae
add
xchg
mov
cmc
mov
xor
add
test
add
and
add
add
mov
jno
add
xchg
shlb
mov
add
dec
jg
in
mov
mov
inc
out
fcomps
xlat
or
add
movsl
xchg
sbb
add
sub
jg
daa
add
push
inc
mov
popa
xchg
or
add
idivl
add
dec
sub
jg
addr16
inc
scas
add
shrb
bsr
cli
movsb
add
rorl
sub
add
dec
mov
fildl
add
add
add
sbb
add
add
outsb
ds
cmp
ret
add
xor
add
pop
inc
add
add
lcall
cld
sub
fidivrl
adc
gs
add
push
add
std
mov
mov
add
add
add
lret
int3
psadbw
xor
add
rcll
inc
mov
add
scas
add
add
add
add
or
add
add
mov
cmp
sbb
iret
dec
pop
cmpsl
cltd
lahf
push
or
add
adc
jne
and
icebp
inc
movsl
mov
out
sbb
xor
enter
addb
mov
add
fiaddl
add
add
push
clc
aam
add
lcall
pusha
call
mov
cmp
xor
mov
js
xor
add
call
sub
add
and
rdpmc
add
add
and
add
aam
aaa
inc
mov
sarl
xor
pushl
stos
add
jno
add
aad
ljmp
pop
std
push
add
pop
insl
sbb
cmp
stos
add
call
add
xchg
add
add
mov
add
mov
and
out
pusha
sbb
in
mov
add
dec
sub
add
add
enter
add
jp
mov
dec
xor
imul
popf
inc
and
add
sbb
outsl
or
add
and
add
lea
or
add
mov
add
sub
add
xor
xor
sub
add
add
addb
dec
addl
test
inc
outsl
addb
sub
add
bound
cmpsb
add
mov
add
fld
jecxz
or
add
lea
fwait
shrb
jecxz
add
dec
inc
fdivrs
pusha
mov
dec
cmp
dec
mov
cli
psrld
sbb
ficoml
xor
lods
insb
lods
add
push
dec
xor
loope
lea
and
add
xlat
mov
neg
xchg
mov
add
leave
jp
jge
add
daa
xor
je
cltd
sub
add
icebp
mov
push
add
add
push
push
add
stos
add
fwait
adc
mov
nop
rcrb
add
lds
pushf
or
add
imul
and
out
rcrb
add
inc
ffreep
clc
leave
pop
xor
add
bnd
jne
push
lcall
push
jp
cmp
add
adc
divl
gs
mov
cli
repnz
ret
cld
sub
shlb
outsl
or
add
add
fadds
pop
lods
lret
mov
out
outsb
jge
imul
dec
or
add
clc
and
add
ret
pop
pusha
mov
jp
loop
jl
in
sahf
pop
mov
sbb
outsb
pusha
movsl
pop
push
dec
jnp
jo
cmp
popa
fldt
add
add
mov
jle
add
dec
movsl
out
add
and
mov
push
stc
stos
adc
test
add
stc
addb
pop
xor
mov
into
lcall
test
add
sbbl
add
adc
add
add
add
jg
fists
in
mov
rcrb
cltd
pop
test
inc
jmp
je
pop
mov
cmp
inc
mov
shlb
aaa
push
out
mov
insl
insl
out
addb
jl
jo
addr16
and
and
add
add
in
push
mov
pop
jbe
das
cmp
jg
adc
mov
add
mov
scas
add
sub
add
sbb
add
fists
std
adc
aam
add
repnz
add
add
repz
mov
add
inc
testl
add
nop
mov
add
jp
lahf
xor
addb
mov
jne
xor
add
movsl
jb
xor
add
aaa
loopne
scas
pop
cmp
je
adc
mov
add
jbe
mov
jecxz
lret
fiadds
add
mov
add
add
xor
add
je
ja
and
add
cmpl
cmp
lock
clc
xchg
xchg
add
fsub
dec
pop
dec
aad
stos
fcoms
mov
push
add
stos
add
jbe
js
mov
ficoml
stos
add
adc
inc
test
add
out
pop
cmpsb
add
add
add
add
adc
pop
and
mov
add
mov
aam
movhps
add
inc
cmc
adc
mov
add
add
or
add
dec
notb
pop
jb
add
mov
mov
insl
jb
add
pushf
cli
add
xchg
mov
xchg
xchg
arpl
cli
mov
add
sbb
xchg
push
mov
movsb
add
pop
or
add
loope
out
insl
and
add
jae
addb
ljmp
add
xchg
out
pop
jno
add
testb
add
add
sub
add
mov
daa
jle
jecxz
fiaddl
jg
pop
aam
incb
fists
pop
add
add
std
ficoml
jbe
insb
loope
or
add
mov
add
sub
add
shrb
inc
out
fwait
mov
add
push
mull
add
cmp
mov
fcompp
pop
cmp
movsl
pop
in
cmpl
test
add
sbb
std
fiadds
add
jns
movsl
sbb
fcomp
cwtl
mov
adc
jno
add
loope
lcall
cmc
xchg
aaa
movsl
pop
xor
add
or
add
and
xchg
loopne
cmp
into
rclb
daa
movsl
cmpl
push
mov
add
add
adcl
add
fs
jmp
add
inc
fs
and
cmp
and
popa
xchg
or
add
dec
cmp
mov
push
add
mov
push
cmp
add
and
add
push
push
pop
lea
lods
sbb
aam
loope
sbb
les
outsl
or
add
add
add
lds
adc
mov
mov
add
add
mov
subl
jmp
mov
add
fcmove
addr16
icebp
inc
xchg
jno
addb
out
idivb
stc
or
add
mov
add
ret
add
add
push
std
roll
add
cwtl
cld
jmp
arpl
push
sbb
add
cmp
scas
sbb
je
add
pop
xchg
dec
test
add
sti
xchg
test
add
cmpsb
add
out
add
movsb
add
and
out
mov
add
sarl
mov
stos
xchg
lcall
add
loope
adc
imul
mov
incb
mov
push
inc
rorb
add
addb
push
and
add
add
sub
add
add
sub
jge
add
insb
or
ss
add
jno
jns
addl
je
in
in
std
or
loop
jne
fxsave
add
daa
add
ret
and
jmp
movsl
dec
push
inc
lahf
aas
gs
add
sbb
cmpl
dec
shrb
pop
imul
nop
jo
fcomps
iret
add
fistpll
push
add
jl
out
add
mov
cwtl
inc
jne
add
out
cld
faddl
xchg
pop
mov
pop
mov
jne
in
inc
jbe
and
add
lods
add
lods
add
add
hlt
cld
push
int3
insb
push
pop
push
pop
outsl
xchg
mov
jp
add
xchg
or
ds
add
lret
stc
out
xor
mov
pop
jo
push
sub
add
sahf
inc
inc
or
dec
sbb
leave
inc
les
lods
add
adc
in
repz
mov
xor
outsb
add
add
and
add
add
leave
and
rorb
mov
sbb
push
test
add
add
lret
xor
add
mov
add
xchg
xchg
in
add
inc
fisubl
and
sbb
test
add
int
mov
push
scas
mov
sbb
jb
test
rcl
cwtl
xchg
inc
enter
add
ret
mov
mov
add
jle
addl
add
cmp
pop
addb
xor
lcall
add
psubusw
bound
pop
inc
arpl
stc
fnstsw
dec
or
add
in
test
cmp
bts
les
add
dec
into
push
mov
mov
add
and
add
dec
xchg
aas
pushf
lock
hlt
icebp
out
dec
insb
sahf
cli
mov
add
xchg
aas
or
add
cwtl
add
mov
jl
push
fstpl
add
or
add
stos
add
stos
iret
sub
add
add
movsb
add
pop
pop
cmc
fs
popa
or
nop
mov
jp
jb
aad
in
addr16
hlt
int3
jo
xor
lock
add
xchg
push
pop
js
mov
cld
mov
add
add
jae
push
jmp
add
cmpsl
fdiv
jb
or
add
add
mov
and
mov
xor
jl
fsubrl
or
mov
clc
popf
pop
in
dec
ss
add
add
das
sbb
loop
test
add
addb
das
jne
mov
add
popa
add
inc
dec
sbb
das
test
add
in
mov
mov
lcall
lock
ljmp
in
push
jmp
lock
adc
xchg
addb
iret
outsb
clc
enter
lods
pop
pop
lock
add
lock
jns
ret
sbb
xor
mov
add
fs
leave
scas
jo
xchg
add
lcall
mov
mov
ficoms
lea
lea
lcall
adc
shlb
and
add
ret
sub
adc
popa
out
push
mov
cmp
enter
add
add
add
stc
jmp
push
in
dec
push
lret
aad
std
xchg
jb
inc
fildl
and
add
add
mov
inc
cltd
rclb
jne
push
roll
jp
push
add
nop
push
cmpsl
enter
inc
push
inc
bound
adc
pop
mov
mov
pusha
xor
mov
add
add
scas
inc
push
xchg
add
add
sbb
add
add
cli
icebp
cltd
dec
loop
jns
pop
fdivl
pop
lret
add
add
add
out
sub
add
icebp
mov
adc
mov
je
mov
enter
push
add
cmp
jl
iret
and
add
add
pusha
icebp
out
pop
jns
mov
cmpsl
xchg
adc
jl
imul
insl
mov
rorb
add
push
pushf
aas
cmp
add
add
mov
sub
cmc
cld
jl,pt
inc
std
mov
mov
push
mov
add
stc
out
aas
xorl
out
mov
call
addb
mov
push
add
and
mov
and
add
icebp
adc
fstps
movd
cmc
stc
sbb
and
add
data16
cmp
mov
add
add
adc
stos
in
xor
addb
loopne
sbb
add
insb
mov
add
push
das
aas
cmc
sub
jle
ss
cmp
cwtl
test
ja
jp
push
fcompl
js
jbe
lock
pop
mov
dec
dec
pop
xor
sti
scas
addb
or
dec
mov
adcl
addb
jbe
push
jge
add
not
and
add
movsl
mov
call
inc
sub
dec
imul
xor
push
mov
push
xlat
add
push
mov
add
call
mov
add
test
cmp
add
mov
add
fbld
addb
push
sub
call
ss
inc
jns
add
pop
push
jns
add
jno
jb
mov
movb
aam
add
mov
add
lock
mov
mov
add
push
mov
add
add
sub
add
ds
stos
jne
insb
je
or
insb
push
add
inc
or
add
mov
pavgw
xchg
add
pop
addb
add
add
sub
add
pop
push
lods
pushf
lock
insb
in
pop
cmp
popa
in
sub
add
daa
icebp
imul
add
push
add
push
scas
add
scas
cmc
stc
sub
add
mov
add
add
movsl
lods
add
mov
xor
and
add
test
add
ret
cmp
into
cmp
cmpsb
add
dec
add
fnstenv
repnz
or
add
jb
sbb
imull
add
in
in
test
add
add
cmp
add
shll
add
pop
mov
idiv
mov
sbb
add
mov
xor
and
rcrb
xchg
sarl
les
jne
xchg
mov
add
add
sahf
cmp
xchg
adc
insb
push
push
sub
add
outsb
jns
shll
cmovae
add
mov
push
out
pop
mov
add
icebp
jo
adc
mov
leave
inc
mov
sarb
push
add
adc
xor
roll
add
in
into
out
adc
mov
add
dec
mov
add
add
and
add
into
mov
pop
sub
add
xchg
xchg
test
sbb
xor
dec
mov
add
xchg
lods
add
push
jne
inc
mov
push
push
mov
gs
in
jg
adc
add
lcall
xchg
sarb
in
inc
or
add
jge
cli
adcl
mov
cld
xchg
inc
jge
sbb
or
add
mov
les
fcos
xchg
sub
push
add
mov
ss
stos
hlt
lret
xchg
mov
sub
lea
add
mov
stos
test
add
scas
outsb
bound
mov
cli
std
mov
push
add
add
add
or
insl
adc
nop
pop
idivb
lock
push
adc
roll
add
pop
push
add
outsl
daa
pop
mov
add
mov
add
ss
or
adc
mov
xchg
add
adc
outsb
inc
xchg
dec
addr16
lret
push
add
jmp
imul
add
add
hlt
xchg
add
sbb
ret
add
cld
xchg
add
xor
out
cmp
push
gs
out
push
push
add
adc
loop
add
jno
sbb
sbb
xchg
mov
add
add
je
add
addl
dec
pop
adc
inc
push
adc
mov
pop
outsb
cmp
dec
idiv
xor
pop
std
ja
das
ficompl
or
add
repz
mov
xchg
ss
ss
dec
in
or
add
adc
push
add
xchg
cmp
or
add
scas
dec
dec
add
add
add
and
add
imul
in
in
push
add
push
cld
pop
lds
add
add
adc
jmp
add
cmp
add
fnstcw
std
sbb
cmp
add
lds
sub
adc
sti
int
jl
das
cmpl
jns
jle
test
add
jne
add
jg
adc
cmp
fisttpll
sub
add
or
add
dec
pop
pop
jb
loope
insb
mov
insl
aas
jb
loope
mov
add
and
add
add
add
add
jae
cmp
inc
xor
pushf
out
mov
mov
fistpl
jp
rclb
jne
dec
repz
jle
test
std
aas
in
rorl
stc
stc
mov
add
dec
pushf
aad
add
add
add
pop
in
add
cmpsl
sahf
in
xor
xor
xorl
add
jmp
add
add
jbe
jnp
add
inc
int3
xchg
add
into
mov
out
ret
hlt
cltd
xor
mov
out
mov
cwtl
pushf
ds
int
cmp
mov
add
movsb
add
test
add
inc
xchg
add
add
js
test
add
sbb
cmp
inc
xchg
cltd
mov
shll
push
add
fbld
addl
add
addb
insl
lods
add
jns
add
fs
add
jns
add
push
adc
mov
sub
add
fistpl
mov
add
xchg
ret
dec
sbb
subl
jmp
add
inc
mov
or
pop
sbb
add
sbbl
ret
lods
out
pop
add
cmp
add
mov
mov
add
call
dec
lock
lahf
adc
add
cld
addr16
aad
mov
les
fcoml
aam
lods
add
dec
sub
add
add
adc
xchg
mov
cli
addb
test
add
mov
add
jae
jg
and
test
add
dec
repnz
add
mov
into
insb
jge
shl
mov
push
add
mov
add
inc
mov
jo
dec
adc
push
inc
mov
sub
in
sbb
lahf
fisubrl
add
dec
arpl
add
jmp
loope
inc
mov
pop
xchg
add
addb
xchg
or
cmp
or
add
pusha
lahf
inc
shlb
push
add
xchg
mov
addb
outsb
push
add
daa
jno
sub
enter
add
xor
dec
dec
inc
icebp
jg
add
mov
xchg
pushf
inc
in
int
inc
test
add
add
lods
add
sti
mov
add
loop
fisttpl
push
inc
pop
les
fwait
push
pop
inc
pop
loop
cmp
adc
add
cmpxchg
mov
out
mov
add
dec
inc
leave
sti
xor
popa
iret
ds
sbb
jns
add
adc
add
leave
loopne
add
loopne
adc
lret
or
add
lcall
fdiv
add
xchg
adc
mov
add
fistpl
add
aad
sbb
sbb
clc
outsl
lods
add
add
lods
add
adc
add
xchg
stos
and
add
sub
add
add
sub
add
lret
add
add
mov
mov
in
imul
enter
addb
clc
sbb
pop
dec
leave
and
add
dec
loopne
adc
loope
dec
int3
call
xlat
repz
dec
xchg
icebp
mov
add
jl
pusha
call
mov
push
add
cmp
jecxz
ds
test
stos
add
mov
push
lea
add
push
push
popf
inc
xchg
hlt
mov
mov
sbb
lods
dec
dec
out
sbb
or
add
inc
push
cmp
in
push
cmp
aaa
movsb
add
loop
fists
in
hlt
rolb
mov
nop
sbb
clc
sub
add
mov
cmp
aaa
int3
je
xor
scas
xor
pmullw
popa
and
lods
add
pop
or
inc
lds
add
xchg
sub
fldenv
addb
adc
push
popl
add
rolb
fcmovbe
dec
scas
xchg
inc
sub
add
add
push
aam
add
jle
xchg
fcmovnb
pop
jae
push
or
add
sub
add
out
lcall
insb
lret
and
add
jl
dec
addr16
pop
mov
repnz
push
dec
fs
jg
push
cmc
xchg
and
add
test
add
mov
push
add
jb
rcrl
mov
add
inc
jno
pop
ds
adc
mov
adc
shlb
pop
mov
add
add
add
mull
clc
repnz
cli
xlat
adc
jbe
sub
arpl
fwait
popf
pop
and
mov
add
inc
jg
mov
add
xchg
outsb
lret
scas
add
or
add
mov
test
add
add
or
daa
add
add
outsb
cli
cmp
adc
negl
cmp
mov
sbb
add
fildl
fs
popa
and
add
add
pop
fcomp
sti
test
add
add
test
add
mov
nop
inc
lcall
push
dec
lods
add
lcall
fisubrl
ret
add
fwait
shl
out
enter
rorl
add
sahf
cld
xchg
or
add
add
push
mov
add
inc
cmp
outsb
das
out
mov
add
mov
add
stos
add
xor
lcall
or
add
lret
xchg
cmp
add
mov
add
mov
inc
test
add
mov
adc
pop
xor
add
enter
add
dec
lds
leave
add
add
xchg
cmp
inc
je
push
mov
mov
lds
push
gs
sbb
add
cmp
lret
aas
and
xlat
jbe
hlt
inc
iret
push
jo
cld
mov
ds
outsb
xchg
jecxz
pop
out
pop
std
addr16
sub
aam
dec
pop
outsl
imul
add
imul
clc
pop
inc
pop
repnz
add
aas
dec
mov
idiv
mov
or
test
aas
xchg
push
das
movsb
add
clc
int
add
aad
push
add
sbb
mov
add
nop
leave
call
xchg
xchg
add
std
outsl
sbb
pop
xchg
fsubr
out
insl
xorl
add
sbb
add
add
pop
jmp
bound
cmpsb
add
xchg
lret
pop
xchg
nop
xchg
add
add
mov
add
adc
xchg
lret
inc
inc
mov
add
mov
xor
adc
and
test
add
mov
add
add
add
sbb
push
fisttps
ret
add
mov
cwtl
les
addl
sahf
and
add
pop
inc
rol
cmc
faddl
daa
pushf
cmp
inc
jecxz
cmp
add
ret
cmp
xchg
loopne
add
push
pop
testb
enter
add
or
add
add
iret
cmc
sbb
add
pop
out
inc
stc
jge
push
inc
add
add
pop
inc
scas
mov
sub
add
cmpl
fcoms
jo
or
nop
imul
add
lcall
fs
cmp
rolb
rcll
test
inc
inc
push
sbb
lea
mov
add
test
add
push
adc
and
repnz
add
sbb
movsl
and
add
sbb
xor
leave
or
add
test
add
sub
or
add
out
xchg
add
lahf
and
inc
inc
fldl
add
or
add
mov
add
addb
jo
add
add
add
gs
loopne
adc
xchg
lds
pop
adc
inc
pop
mov
cltd
add
add
mov
fs
add
imul
test
add
pop
or
add
add
add
add
aas
loopne
add
push
in
inc
mov
add
sub
add
fwait
xor
mov
xor
jl
and
cli
xor
fs
movsl
fdivp
popf
fsubs
add
gs
ret
js
pushf
fwait
data16
inc
mov
sti
mov
add
imul
jmp
pushf
xchg
xchg
addb
outsb
prefetch
or
jae
push
in
jge
push
into
dec
dec
and
inc
mov
add
add
addr16
mov
add
cwtl
and
add
mov
add
sbb
and
add
int
add
add
add
sub
add
loop
add
inc
cmpsb
add
ja
adc
mov
lods
add
mov
ljmp
inc
mov
push
pop
mov
add
mov
push
in
add
shrb
add
xchg
or
jb
lcall
sarb
js
sti
test
cld
push
and
add
fldt
jmp
insl
in
into
add
add
sbb
dec
mov
or
sbb
push
mov
adc
or
add
movl
add
add
push
sbb
push
nop
add
sub
add
je
xor
shl
xchg
xchg
test
pop
cltd
or
add
js
fcoml
push
dec
les
add
into
mov
add
dec
daa
jne
add
or
add
arpl
enter
add
stos
or
add
cmp
add
pop
rcrb
add
fidivrs
loopne
stos
add
stc
push
sbbl
push
in
ret
xchg
add
fdivl
cmpsl
ljmp
or
add
mov
add
add
ret
mov
add
inc
mov
fists
add
ja
stos
add
mov
sbb
mov
fcmovbe
cmp
push
lret
cmp
or
add
add
clc
jmp
mov
or
add
vmovsd
adc
pop
ljmp
add
and
add
xor
mov
xor
xchg
add
mov
cmpsb
add
and
mov
add
clc
in
mov
add
sbb
xlat
leave
jmp
leave
aaa
xor
push
cwtl
dec
push
out
push
cmpl
xor
add
add
push
cmp
int3
shrb
lds
xchg
xor
daa
pop
push
cld
cmp
add
daa
mov
add
addb
insb
ja
adc
jnp
mov
sub
push
add
rclb
adc
ret
push
push
pop
popl
cmp
add
pop
lret
sub
add
jmp
add
ljmp
add
add
add
jp
aas
mov
pop
push
add
and
or
push
mov
sbbl
or
add
add
out
xchg
ljmp
or
add
push
pop
add
pop
dec
jno
dec
lret
cmpsb
add
cmp
add
add
fnstenv
add
add
out
cld
test
add
mov
in
dec
xor
stc
cmp
jle
inc
xchg
das
mov
xor
add
add
cli
mov
lds
fisubrl
add
cmpsb
add
mov
xlat
and
add
adc
rcll
add
cmpsl
mov
not
xor
xchg
push
and
add
add
mov
add
lret
adc
loopne
dec
jbe
inc
lcall
cwtl
xchg
push
movsl
cmp
mov
xchg
xor
jo
or
sub
jg
dec
add
add
add
mov
cld
sub
addb
xor
sbb
push
lcall
in
inc
xchg
stos
add
fwait
mov
add
lret
mov
vcvtsd2si
push
xchg
add
loope
pop
pop
out
sbb
push
fstpt
dec
mov
inc
in
mov
add
add
pop
push
sbb
mov
in
clc
pusha
xchg
mov
add
vpackuswb
inc
addb
jno
test
jb
pop
aam
imul
jno
fdivs
icebp
and
add
fs
mov
jp
add
adc
xchg
add
sbb
pop
cltd
cmp
cmc
sbb
das
mov
cld
in
xchg
dec
imul
fildll
leave
sbb
xchg
and
add
cmpsb
add
adcl
cmp
add
mov
add
push
mov
idivl
sti
adc
cmp
sbb
jo
adc
xchg
add
fdivl
aaa
mov
or
sub
add
scas
jmp
enter
je
jbe
sbb
fbstp
inc
push
jge
pop
or
lock
add
imulb
les
fnstcw
mov
lods
add
out
loopne
add
mov
ss
imul
add
lret
sub
add
test
icebp
mov
add
add
push
add
dec
cmp
pop
pop
roll
addb
pop
mov
push
add
jecxz
pop
arpl
lret
add
test
add
or
add
xchg
xor
cmc
cmp
pop
or
add
mov
add
mov
add
daa
clc
or
add
xchg
inc
iret
push
add
cmp
orl
add
add
outsl
jge
ret
xchg
jmp
fiaddl
imul
dec
ljmp
popa
or
xor
add
push
daa
scas
add
je,pt
add
fs
mov
push
add
movsb
add
and
sbb
iret
jmp
out
sbb
mov
test
idiv
xor
sbb
imul
repnz
arpl
add
or
add
inc
add
loop
add
mov
add
xchg
pop
sti
in
xchg
push
out
mov
sub
add
add
dec
pop
jmp
cmpsl
call
sub
add
jge
into
mov
dec
aas
or
std
xchg
inc
mov
lahf
cmpxchg
sti
aam
cmp
in
add
aad
and
sbb
mov
addb
mov
mov
push
pushf
sar
dec
lock
stc
mov
std
pop
out
add
push
loop
add
dec
jne
pop
dec
and
add
mov
fiaddl
pop
fnsave
add
aaa
mov
mov
add
mov
inc
and
mov
je
sub
cmc
fldt
repz
add
jae
stos
add
cld
mov
lods
fistpl
outsl
outsb
pop
jg
sbb
jns
cmp
inc
pop
into
adc
mov
int
inc
ss
mov
add
add
mov
add
lods
mov
xchg
outsl
lahf
mov
add
int3
dec
fxch
push
add
lea
add
inc
sbb
jne
pop
cmp
and
add
mov
add
cmp
outsl
xor
add
add
int3
daa
pop
jno
xchg
fsubrp
jnp
rolb
popa
je
lret
lret
jge
cmp
js
out
mov
mov
push
in
push
mov
inc
and
aad
xchg
jo
out
imull
enter
out
xchg
mov
test
add
das
jmp
mov
add
rcrb
add
rolb
jle
js
add
fadd
jns
pop
cmp
xchg
push
sub
push
add
dec
xchg
sub
fadds
jno
cmp
loop
add
movsl
mov
and
mov
stos
push
pushw
adc
mov
outsl
into
addb
or
add
add
nop
scas
insl
xchg
or
out
add
in
xorl
inc
inc
sub
add
pop
and
pop
jmp
add
dec
jb
jg
mov
and
add
in
sbb
add
cmp
add
shlb
dec
jae
outsb
mov
add
xchg
sbb
cltd
adc
add
jmp
add
dec
mov
repnz
fsubl
dec
lods
add
pusha
or
mov
add
into
sub
hlt
test
add
aam
cld
out
mov
add
lea
dec
dec
xor
mov
add
inc
adc
mov
add
jmp
add
mov
add
add
add
add
add
add
mov
or
jns
lods
add
pop
in
aas
not
aam
jno
add
nop
fdivl
xchg
mov
adc
mov
xchg
mov
and
add
push
addb
or
mov
add
add
add
add
addr16
inc
outsl
pop
mov
adcl
mov
idivl
adc
repz
or
push
mov
add
sbb
lock
les
or
mov
mov
jb
add
int
cltd
inc
xchg
clc
sbb
or
pop
jecxz
mov
idivl
imull
add
adc
xor
sarl
dec
addb
addb
sbb
mov
fisubrl
add
jne
rcll
jo
nop
xchg
add
add
loop
and
addr16
add
xchg
fldcw
cmpsb
add
pop
fstpt
add
add
and
mov
add
jl
mov
add
add
aaa
dec
push
fsubs
push
and
mov
mov
gs
push
popa
adc
add
sahf
in
insl
jae
mov
push
lds
push
lret
test
add
bound
xor
insl
or
add
pusha
mov
rclb
mov
negb
lea
add
sbb
push
add
addb
fwait
dec
inc
aam
xor
jecxz
add
add
nop
hlt
lods
mov
and
and
add
sub
add
mov
add
addb
out
mov
lcall
push
aam
shlb
or
jl
fucomip
and
add
add
divl
mov
pop
adc
out
and
and
add
mov
gs
test
add
sbb
add
jae
mov
mov
scas
jle
addb
pop
or
add
sub
add
sbb
mov
add
xor
popl
add
push
mov
pushf
in
push
and
fwait
dec
fdivrs
stos
push
xor
test
add
mov
add
xchg
xchg
pop
insl
imul
add
and
add
add
or
imul
push
add
dec
and
add
add
add
xor
add
inc
fistpl
out
or
clc
frstor
add
mov
sub
add
add
add
adc
add
add
pushf
jbe
push
mov
add
pop
vmovaps
fdivr
imul
xchg
sbb
fildl
jecxz
rorb
add
add
add
add
add
or
add
loope
add
mov
or
jle
stos
add
add
adc
into
cmp
leave
jg
cvtps2pi
fiadds
scas
add
sub
add
add
cli
ret
sbb
add
fisubs
pop
add
add
rcrl
xchg
jnp
sbb
movsl
sbb
add
cld
call
icebp
icebp
stos
add
mov
push
mov
add
xor
lcall
loope
lock
or
insl
push
dec
dec
push
and
add
xchg
test
push
add
or
decl
add
ljmp
or
jl
nop
out
push
xor
dec
pushf
stc
or
add
cmpsb
add
je
mov
add
add
xchg
jno
cltd
ds
bound
add
mov
add
in
mov
lret
lcall
clc
rclb
lds
cltd
sub
add
and
add
inc
loopne
sub
and
add
adc
rorl
xchg
in
mov
divl
aaa
mov
add
push
add
add
add
add
add
push
icebp
or
add
add
add
bound
add
or
add
sbb
je
loopne
sahf
jae
inc
xchg
jl
push
into
push
insl
mov
add
sbb
sbb
stc
adc
mov
add
ds
adc
les
jb
lea
add
imul
pop
test
add
lcall
add
mov
add
movsb
add
ja
out
or
mov
or
add
add
fwait
cwtl
mov
mov
insb
xor
add
insl
fdivrs
addb
mov
add
dec
sbb
cmp
filds
xchg
je
dec
loope
fimull
and
or
add
mov
xchg
cmp
movsb
add
out
les
inc
push
dec
std
cmp
outsb
mov
ret
add
movsb
add
repz
pop
js
fwait
cmpsl
xor
jecxz
jp
pop
add
add
sub
jnp
mov
or
add
push
inc
xorl
test
add
sub
stos
add
stc
sub
xchg
insb
inc
jns
mov
add
ss
adc
add
sbb
jb
call
jb
cmc
or
add
jge
loopne
repz
add
js
or
add
add
sub
add
jg
repz
frstor
insb
inc
bnd
jl
sahf
int3
inc
jp
les
fcomi
push
add
pop
push
push
lret
fldt
call
in
rorl
cmp
sub
call
push
xchg
push
sub
icebp
add
clc
jmp
gs
add
add
imul
imul
add
je
add
add
pop
pop
addb
inc
adc
add
mov
jne
aaa
push
add
mov
addb
or
add
push
les
call
popf
mov
jge
add
xchg
mov
add
add
cld
inc
add
frstor
and
add
cmc
adc
pop
push
mov
xchg
loopne
and
add
mov
ds
jge
add
into
cmp
xor
add
mov
jns
or
inc
jg
add
add
mov
add
adc
sub
add
aaa
fisubrl
jns
fwait
inc
xor
cmpsb
add
mov
mov
popa
pop
xchg
dec
and
add
adc
add
xchg
add
dec
xchg
pop
pop
out
cli
inc
mov
add
das
and
add
je
stos
das
mov
pop
fs
add
addb
dec
inc
aad
rcll
push
in
ret
jo
rcll
fdivl
jmp
dec
stos
int3
dec
lods
jne
cld
das
push
or
add
push
sbb
add
push
ja
mov
add
push
cmp
pop
cltd
addb
pop
iret
or
add
rolb
mov
add
mov
xchg
cmpsl
sub
add
test
add
mov
jne
mov
ret
int
add
mov
lock
push
cmpsl
shl
mov
jl
fchs
inc
jbe
daa
xchg
add
adc
fdivrp
inc
push
add
xchg
cmpsb
add
mov
xchg
addb
call
add
add
inc
push
hlt
mov
idiv
daa
mov
mov
fbstp
dec
sbb
insb
mov
imul
cli
cmpsl
fists
jae
mov
inc
pop
inc
inc
int3
push
xor
add
loope
inc
push
sbb
add
idivl
or
add
sbb
sbb
sbb
add
add
inc
xor
mov
and
add
mov
aam
add
hlt
sbb
jns
xchg
xchg
mov
jns
repnz
sub
add
push
jg
je
idivl
inc
iret
jb
add
add
push
add
push
xor
jg
add
aad
lock
push
filds
or
add
push
mov
mov
add
mov
je
lcall
in
sbb
sbb
jecxz
dec
lea
add
sbb
xor
jmp
lahf
pop
out
sub
or
add
pop
or
add
repz
add
adc
add
add
dec
outsb
fildll
std
iret
inc
jbe
xlat
out
pop
ss
xor
xlat
or
and
add
add
mov
jne
mov
and
lods
add
inc
sarb
imul
lock
aaa
dec
and
add
clc
mov
add
fcoml
cmp
cmp
mov
cmp
push
mov
dec
push
movsl
dec
cmp
jno
add
movsb
add
in
mov
add
mull
mov
add
call
add
add
add
std
jge
imul
push
add
push
jo
pop
xor
add
jge
xor
add
decb
in
outsb
std
mov
xor
insl
fs
push
pop
aas
movsl
jmp
sti
push
pop
adc
fs
add
ss
mov
out
jb
jg
mov
leave
mov
pop
mov
sbb
mov
add
pop
out
lcall
loopne
jno
fmuls
add
add
add
dec
inc
adcl
popa
fisubrs
fs
fnsave
add
jmp
stos
aad
mov
add
add
xchg
xchg
and
add
les
out
bound
das
inc
pop
push
scas
cltd
popa
pop
ffree
mov
dec
out
cmp
inc
push
add
xor
push
loopne
add
push
or
add
add
out
dec
jg
lods
ret
jecxz
stos
add
fsubr
mov
fsubrp
imul
dec
mov
dec
pusha
xor
mov
inc
jmp
add
ret
mov
add
cmp
les
add
lret
fcmovnu
pushf
cli
push
xchg
aad
xor
and
add
and
add
pop
ss
repnz
mov
mov
add
jnp
inc
xor
inc
sbb
rolb
lcall
in
push
test
dec
jne
jle
adc
add
ss
arpl
leave
std
mov
shlb
leave
sub
add
leavew
cld
mov
add
pop
cmpl
add
xor
add
test
or
imul
dec
into
add
jbe
pop
sub
add
or
add
pushf
aaa
jno
add
fcoml
fs
in
imul
out
lods
xor
into
int3
add
nop
sbb
cwtl
scas
and
sbb
cmp
inc
std
lcall
pop
mov
push
add
pop
imul
add
dec
push
xor
fadds
out
mov
pop
subl
leave
hlt
pushf
das
std
pop
les
jo
sbb
clc
data16
notb
pop
pop
icebp
dec
mov
mov
fmul
mov
push
sarb
cmpl
fs
inc
inc
jo
add
fcoml
scas
xor
les
popf
call
xor
out
sub
add
outsb
push
add
sub
add
mov
sub
add
add
mov
cmp
sub
repz
sbb
orl
add
pop
mov
add
add
loopne
jno
test
roll
lea
add
sti
int3
sub
add
inc
xchg
aam
repz
inc
cmpsb
add
mov
add
jp
and
add
arpl
sahf
arpl
ret
cmp
jecxz
fimuls
popf
adc
mov
inc
pop
mov
add
dec
jnp
sub
add
add
lcall
ds
je
inc
mov
add
add
clc
inc
addb
and
jne
pop
popa
sbb
jo
mov
add
mov
add
sbb
mov
mov
shll
pop
aad
xchg
pushf
lock
daa
and
jb
sti
inc
mov
add
mov
jns
jp
imull
mov
mov
add
pop
add
jl,pt
inc
enter
stos
add
fisttps
add
or
addl
or
add
lds
mov
repz
add
jo
jnp
jbe
add
push
xor
les
shrl
add
sub
push
or
add
dec
js
add
hlt
mov
arpl
add
or
add
sub
lock
dec
push
adcl
out
lods
test
push
add
add
or
adc
add
fdivrp
xchg
ss
or
add
mov
add
pop
inc
js
jbe
mov
add
jo
inc
popa
outsl
mov
add
xchg
sarb
sub
add
stos
jbe
jo
add
mov
xchg
mov
addb
pop
push
imul
add
rolb
add
mov
jl
add
mov
add
adc
cmp
out
inc
shrl
add
pop
push
mov
mov
test
add
repz
dec
xor
mov
add
push
sti
and
add
sarl
add
popa
inc
push
or
add
popf
mov
add
xor
pop
iret
loopne
test
add
add
add
js
add
test
add
add
cmp
jo
mov
je
rorl
out
add
add
