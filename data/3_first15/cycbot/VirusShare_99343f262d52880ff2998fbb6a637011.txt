add
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
xor
xor
or
insb
insb
insb
insb
insb
insb
insb
inc
inc
inc
inc
inc
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
pop
pop
pop
pop
pop
pop
pop
pop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
inc
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
add
add
add
add
xor
xor
xor
xor
xor
out
out
out
out
out
out
jecxz
jecxz
jecxz
jecxz
or
or
or
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
repnz
or
or
imul
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pop
xchg
xchg
xchg
xchg
xchg
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
clc
out
out
mov
mov
mov
mov
mov
mov
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
out
out
out
out
nop
add
add
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
nop
cld
cld
cld
cld
cld
cld
lahf
lahf
lahf
lahf
lahf
lahf
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
mov
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
add
add
add
or
or
or
or
or
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
jmp
jmp
jmp
push
aad
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
add
mov
mov
mov
mov
mov
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
fcomp
fcomp
lahf
xchg
xchg
xchg
xchg
es
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
inc
inc
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
add
call
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
nop
nop
nop
nop
nop
nop
nop
mov
mov
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
sbb
sbb
sbb
sbb
sbb
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
or
or
or
or
loop
loop
loop
loop
loop
loop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
add
loope
loope
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
dec
dec
dec
dec
dec
dec
dec
dec
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
lds
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
rcl
rcl
rcl
rcl
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
enter
enter
enter
addr16
addr16
sub
sub
sub
sub
sub
sub
sub
sub
sub
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
mov
lret
lret
lret
lret
lret
lret
lret
lret
lret
nop
nop
nop
nop
nop
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
out
cmp
cmp
cs
test
test
test
test
test
and
and
and
and
and
and
and
and
jl
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
aam
aam
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
push
push
push
push
push
push
push
push
cltd
cltd
cltd
cltd
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
mov
mov
mov
mov
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
lcall
lcall
nop
nop
nop
nop
nop
nop
nop
nop
or
or
or
or
or
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
nop
nop
nop
nop
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
xchg
xchg
xchg
xchg
xchg
xchg
xchg
mov
mov
mov
mov
mov
mov
push
push
push
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
push
push
push
push
push
push
push
push
push
push
nop
nop
nop
nop
nop
nop
nop
nop
jge
jge
jge
jge
jge
jge
jge
jge
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
mov
mov
mov
mov
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
cmp
cmp
add
add
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
rcl
rcl
rcl
rcl
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
addl
addl
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
popf
popf
popf
popf
popf
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
add
add
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
shll
arpl
arpl
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmc
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
shr
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
stos
stos
stos
stos
stos
stos
inc
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
nop
and
and
and
and
and
and
and
and
and
and
and
and
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmp
cmp
cmp
cmp
cmp
cmp
xchg
xchg
xchg
xchg
xchg
or
or
or
or
or
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
push
push
push
push
push
push
push
push
push
push
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
test
test
test
test
test
test
es
or
or
or
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
xor
xor
xor
xor
nop
lea
lea
lea
inc
inc
inc
inc
inc
inc
inc
inc
inc
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
add
add
push
push
push
push
push
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
nop
nop
nop
nop
nop
nop
nop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
dec
dec
dec
dec
dec
dec
dec
dec
out
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
imul
imul
mov
mov
mov
mov
sldt
add
add
add
jg
jg
jg
jg
jg
jg
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
mov
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
mov
mov
mov
mov
add
add
add
add
add
push
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
test
test
test
pop
iret
iret
iret
iret
iret
iret
iret
iret
iret
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
or
or
or
or
or
or
or
or
or
or
mov
mov
mov
mov
mov
mov
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
mov
mov
mov
mov
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
push
push
push
push
push
push
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jmp
jmp
jmp
jmp
jmp
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
dec
dec
nop
nop
nop
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
mov
mov
mov
dec
dec
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
push
push
push
push
push
push
push
push
push
push
push
push
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
ret
ret
test
test
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
lock
addl
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
or
or
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
test
test
test
push
push
push
push
nop
nop
clc
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
cmp
cmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
loop
loop
loop
loop
loop
loop
loop
loop
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pusha
pusha
pusha
pusha
nop
and
and
and
and
and
nop
nop
nop
nop
nop
jmp
jmp
imul
imul
imul
imul
imul
imul
mov
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
push
push
push
push
push
push
push
push
push
push
in
in
in
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
adc
adc
adc
adc
adc
adc
daa
daa
daa
daa
daa
daa
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
ret
ret
ret
ret
ret
ret
ret
jno
jno
jno
jno
jno
jno
jno
jno
jno
fdivrl
cmp
cmp
cmp
cmp
cmp
cmp
cs
cs
cs
nop
nop
nop
nop
nop
out
out
out
out
out
out
out
out
out
out
lods
push
push
push
push
push
push
push
push
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
pushf
pushf
pushf
pushf
pushf
dec
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
push
push
push
std
std
std
add
add
add
add
add
add
add
add
add
add
add
add
add
add
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
addr16
addr16
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
decb
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
mov
nop
nop
nop
nop
sub
sub
sub
sub
jns
jns
jns
jns
jns
jns
jns
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
and
and
and
and
and
and
nop
nop
nop
nop
popl
test
test
test
test
test
test
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
push
push
push
push
push
push
push
push
push
push
jg
jg
jg
addl
addl
addl
addl
addl
nop
nop
nop
nop
nop
nop
nop
nop
ds
ds
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
ds
ds
nop
nop
nop
nop
nop
nop
adc
adc
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
imul
imul
imul
imul
imul
out
out
out
out
out
das
das
das
das
das
das
das
das
das
das
das
das
das
das
data16
or
or
or
or
or
or
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
imul
imul
imul
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
mov
loopne
loopne
loopne
loopne
loopne
dec
dec
dec
dec
dec
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
addr16
nop
nop
nop
mov
ret
ret
ret
ret
ret
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
mov
mov
mov
mov
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
dec
pop
pop
jne
jne
jne
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
les
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
xchg
xchg
xchg
inc
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sub
sub
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
push
push
push
push
daa
push
push
push
push
push
push
push
push
push
push
push
daa
sub
jbe
jbe
jbe
jbe
jbe
jbe
jbe
repnz
cmp
pop
pop
pop
pop
pop
pop
pop
pop
lds
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovbe
aam
aam
aam
aam
aam
aam
dec
dec
mov
mov
mov
mov
mov
pop
pop
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
fwait
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
adc
adc
adc
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
jne
jne
jne
jne
jne
jne
jne
jne
jne
mov
mov
mov
mov
mov
mov
out
out
out
out
out
out
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
and
stc
stc
stc
stc
stc
stc
stc
stc
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
mov
mov
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
arpl
arpl
arpl
nop
nop
nop
nop
inc
inc
inc
inc
inc
inc
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
addl
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
add
add
add
add
add
push
push
push
push
push
push
push
push
push
push
push
push
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcrb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
nop
nop
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
or
sub
sub
sub
sub
repz
sahf
sahf
sahf
sahf
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
add
add
add
add
add
add
add
add
add
add
add
std
std
std
std
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
addr16
addr16
addr16
addr16
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
pop
pop
pop
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
nop
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
inc
inc
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
pop
pop
pop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
and
and
and
and
and
and
and
and
and
and
and
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
sub
sub
sub
sub
jne
jne
jne
jne
jne
jne
jne
test
test
fcmovu
pop
pop
pop
pop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
pop
pop
pop
pop
pop
div
div
div
div
div
div
div
div
div
div
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
add
add
nop
nop
nop
nop
nop
nop
addb
lcall
mov
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
test
test
test
test
test
test
test
jg
jg
nop
nop
nop
nop
nop
sub
sub
sub
sub
sub
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
nop
nop
nop
nop
or
or
or
or
or
or
or
or
or
or
or
or
nop
nop
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcll
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
out
out
out
out
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
ror
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
loope
loope
loope
leave
leave
leave
leave
leave
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
or
or
or
or
or
or
or
or
or
or
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
ds
adc
adc
adc
adc
adc
or
or
or
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
or
or
or
or
or
or
or
or
or
sub
sub
ljmp
mov
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
adc
adc
adc
adc
adc
adc
adc
adc
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
nop
nop
nop
nop
nop
nop
incb
mov
cmpsb
add
pusha
fisubl
add
popa
sti
ret
pop
xchg
in
add
mov
sbb
jl
out
fists
sbb
gs
inc
ret
insl
mov
push
add
inc
out
mov
add
fwait
std
sbb
jne
jg
pop
leave
or
xor
fisttpll
push
mov
pushf
aas
rolb
pushl
test
jmp
mov
add
sti
mov
iret
mov
fs
and
add
add
insb
negb
lcall
into
insb
lods
add
icebp
nop
lret
pop
ljmp
cmp
push
add
imul
or
add
mov
add
inc
push
sub
pop
jnp,pt
pop
lcall
ljmp
add
repnz
sub
add
lret
mov
into
repnz
add
not
mov
xlat
aad
add
add
pushf
adc
add
pop
sub
add
add
push
pop
shlb
add
in
popf
mov
xor
add
add
scas
sbb
stos
add
stos
add
cmp
push
add
xchg
pop
mov
adc
add
stos
add
shll
add
sti
and
cmpsl
pusha
rcll
add
mov
add
cld
xor
add
les
or
add
add
pop
sbb
shl
lea
add
push
lods
add
cmp
add
or
add
add
mov
lcall
jns
add
incb
cmp
fisttpl
add
cmp
int
add
add
mov
je
cmp
add
push
int3
jmp
pcmpgtd
ret
cmp
add
incl
ljmp
jge
adc
bound
std
sub
add
dec
movsl
ss
jge
mov
add
mov
add
cmp
jle
lods
add
lods
or
add
xlat
outsb
cld
jp
aam
xor
jo
add
sbb
cmp
jmp
aam
mov
das
and
scas
add
add
sub
cmp
inc
call
jl
inc
jno
sbb
sub
add
out
jecxz
push
add
enter
add
add
xlat
sarb
iret
jne
dec
jne
jecxz
aad
and
add
inc
ss
xor
inc
mov
push
xor
mov
add
out
sahf
je
xchg
cmp
add
int
arpl
dec
lds
repz
inc
mov
ss
fbstp
xchg
pop
nop
testb
add
add
or
add
xlat
push
add
ja
addb
sahf
enter
dec
pop
outsl
mov
jmp
into
fmuls
movsl
or
xchg
pop
add
add
add
sbb
fsubrs
add
fwait
movsb
add
sbb
shrl
mov
add
add
inc
std
shll
xchg
aas
mov
add
dec
test
add
jmp
ret
iret
push
inc
or
push
nop
cwtl
push
add
lods
add
popl
push
cmp
xor
rolb
add
sbb
lahf
adc
push
add
pop
sbb
add
xor
jl
sbb
add
dec
mov
jecxz
in
bound
out
xchg
pop
xchg
addr16
sti
adc
mov
mov
mov
add
push
add
je
add
inc
and
add
add
pop
dec
cwtl
mov
push
popa
scas
test
add
add
inc
rorb
mov
hlt
cmpsb
add
dec
shrb
hlt
add
loope
fbld
jno
adc
in
add
outsb
clc
sub
add
sub
add
add
rorl
fdivs
add
movsl
test
mov
add
pushl
add
rep
pusha
in
aaa
aaa
lahf
lods
loopne
dec
sbb
loop
xor
jmp
iret
push
mov
add
mov
mov
add
cmp
add
aas
push
xor
pushf
lods
add
inc
sub
xorl
mov
int3
loop
fidivl
add
or
add
add
sub
jg
ds
add
and
fdivrl
aad
jne
in
push
jmp
cmp
in
add
dec
xor
cltd
add
inc
jg
pop
bound
mov
add
fsts
repnz
std
pop
imul
jae
ljmp
xchg
and
add
xchg
xlat
cmpsb
add
rorb
add
js
jno
xor
jmp
loope
popa
add
add
jle
mov
xchg
sbb
add
pop
push
mov
add
insl
mov
add
mov
add
xchg
pop
sub
add
adc
inc
pop
mov
add
add
sbb
ds
lods
add
sub
add
xchg
mov
xor
fnstcw
push
xchg
js
sub
add
add
add
add
mov
outsb
lea
add
in
fistpll
insb
xchg
mov
idivb
xchg
adc
dec
xchg
fs
pushf
ret
xchg
add
add
xchg
push
xchg
mov
outsb
add
add
arpl
add
mov
jbe
int3
cmp
rcl
in
xor
sti
pop
test
add
inc
or
add
imul
add
dec
and
add
enter
cmp
enter
sub
add
ds
sbb
add
add
inc
add
add
iret
dec
sub
add
mov
dec
xor
js
cmp
xchg
mov
mov
add
push
add
lret
lcall
test
add
add
push
adc
push
mov
add
stc
add
add
add
inc
xchg
pop
in
mov
xor
mov
xchg
cmp
cmpsb
add
arpl
inc
into
jb
mov
add
iret
mov
add
cmp
add
inc
faddl
dec
pop
jo
outsl
pop
xlat
popf
sub
add
add
add
add
dec
loop
add
addb
pusha
mov
into
mov
loopne
nop
xchg
dec
lock
dec
add
decl
xchg
add
mov
out
xchg
push
push
jbe
push
fwait
inc
addl
cwtl
outsl
nop
dec
mov
add
les
xorps
add
add
mov
mov
add
cmpsl
adc
and
add
dec
pushf
leave
add
sti
cld
mov
add
and
add
add
xchg
push
fstpl
add
lret
xchg
add
out
mov
cmp
movsb
add
cwtl
pop
pushf
movsl
addb
out
mov
xor
cmp
ja
push
add
fnstcw
std
mov
pop
std
aam
pop
mov
add
push
nop
rol
cmpsb
add
aaa
jae
loope
mov
inc
add
jg
mov
sbb
add
cld
jmp
call
push
in
int3
pop
fstpl
xchg
insb
lods
add
push
pop
mov
add
mov
or
add
add
mov
cmp
shlb
sub
xchg
add
add
arpl
lea
dec
shrl
pop
xor
cmp
dec
sbb
add
inc
sti
xchg
mov
test
xor
jae
pop
pusha
rcll
xchg
aaa
fnstenv
addb
fiadds
das
int3
unpckhps
add
pop
dec
jg
cmpl
add
in
xor
add
ja
add
fcompl
imul
out
stos
and
add
filds
or
add
pop
aaa
cmp
iret
mov
ljmp
repz
sbb
and
leave
xor
cmp
rcl
sbb
add
xor
add
cmp
stos
add
dec
fsts
and
sub
enter
dec
inc
imul
add
mov
inc
fildl
add
add
add
pop
arpl
xchg
inc
incl
sub
add
add
pop
in
outsl
rolb
shr
mov
scas
jb
int
lret
sub
add
push
xlat
adc
in
xchg
mov
add
cmovg
jae
mov
adc
mov
stos
add
mov
dec
loop
rorb
addb
mov
add
add
test
add
push
ss
sub
add
xchg
xchg
add
stos
mov
or
ljmp
add
andl
add
inc
das
jge
test
cmp
cmp
or
add
repz
add
add
loopne
add
add
push
jo
add
fucomp
xor
cmpsb
add
les
add
test
hlt
sbb
sbb
cltd
xlat
pop
or
add
mov
add
cmp
call
loope
jmp
pop
dec
mov
lock
add
or
sbb
or
mov
add
pop
xor
addb
add
add
and
add
sbbl
push
cmpsb
add
inc
loope
xchg
inc
xor
lahf
adc
sarl
add
add
ss
sbb
jl
andl
fnstsw
mov
sti
stc
xlat
jmp
push
add
ffreep
aaa
fcmovnu
jnp
inc
xor
daa
clc
cmpsl
xchg
sbb
mov
cli
loop
add
or
nop
and
add
cltd
xchg
jp
pop
enter
movsb
add
mov
in
lds
push
in
insl
xlat
and
add
out
xchg
xchg
fwait
jno
int3
sub
add
pop
mov
leave
sbb
addb
pusha
add
dec
sub
add
add
pop
push
lahf
or
add
add
das
jnp
into
dec
xchg
mov
cltd
push
inc
pop
add
jno
or
add
lds
rcrb
js
leave
dec
lret
in
xor
cmc
push
scas
fwait
js
add
add
pushf
data16
xchg
mov
pop
into
call
jle
cmp
adc
xchg
jne
add
jge
and
cmpsl
push
loop
rcll
xchg
or
add
add
xchg
int
cltd
popf
into
nop
int
test
add
add
add
out
jae
enter
fistl
mov
add
ret
xor
add
sub
mov
dec
mov
pushf
pop
adc
addr16
add
jne
add
dec
out
lret
clc
aaa
xchg
pop
in
sarb
inc
dec
jne
or
add
add
aaa
popf
push
add
scas
push
push
adc
pusha
or
ja
ds
iret
or
add
imulb
add
fmuls
lods
jmp
pop
jbe
les
sbb
dec
sbb
add
sbb
insl
xor
icebp
int
addb
sub
cmpsl
sub
sahf
ret
ss
sub
xor
loop
cltd
xchg
add
inc
add
lock
add
add
mov
decl
add
mov
add
mov
lea
sahf
or
sahf
dec
ljmp
add
and
xor
jl
inc
xor
add
mov
cmpsb
add
inc
push
add
dec
les
dec
icebp
adc
into
sbb
in
movsl
fs
gs
xchg
sub
add
rorb
add
inc
rcrb
cmp
cmp
jbe
jb
ljmp
pop
mov
mov
add
mov
pop
ss
jae
add
insb
push
arpl
adc
loop
shrl
enter
stos
add
cli
sbb
inc
sbb
fmulp
pushf
push
int
in
add
jp
sbb
test
mov
testl
loope
out
sti
xor
int
add
shll
add
dec
fs
je
adc
add
jb
sub
add
or
add
xchg
pop
clc
sbb
fdivl
xor
icebp
aaa
add
add
jbe
fwait
cmpsb
add
out
fwait
adc
add
call
add
or
loop
push
push
cwtl
ret
pop
xchg
mov
add
bound
add
loop
out
mov
test
add
fildll
add
mov
loop
dec
mov
jnp
add
mov
lcall
and
add
mov
add
int3
jns
mov
cmp
gs
sahf
negb
push
add
add
mov
movsl
mov
add
dec
loopne
loope
lcall
sbb
daa
repz
test
add
jb
ss
sbb
and
enter
add
mov
add
sub
fistps
fs
dec
or
add
add
ja
add
mov
movsl
inc
cmp
lret
flds
rcrb
adc
add
inc
movsl
mov
ret
rcll
iret
add
push
add
xchg
inc
leave
jmp
jle
adc
sub
push
dec
and
add
dec
lret
imul
push
add
xor
and
mov
add
mov
mov
cmpl
push
movsb
add
xor
cmpsb
add
jno
jecxz
push
sti
push
jae
pop
inc
jb
out
cmp
jmp
movl
lcall
test
js
repz
addb
hlt
inc
jmp
push
pop
jns
decb
imul
xchg
stc
mov
add
fs
add
push
scas
mov
add
xchg
mov
push
xchg
xchg
arpl
jp
aad
mov
fadds
loopne
cltd
nop
lret
fs
sub
add
pop
call
ss
mov
add
xor
inc
outsl
or
add
test
add
bound
or
add
psubusb
das
out
ljmp
ret
add
mov
push
jl
xchg
add
push
xchg
adc
add
les
fucomi
push
lret
inc
outsb
inc
shr
cli
pop
sahf
test
add
ret
test
subl
mov
add
push
adc
xor
jmp
add
jno
ljmp
out
push
jne
and
addb
dec
call
add
jl
cmp
ss
insb
mov
popf
adcl
scas
test
add
inc
ljmp
add
jb
nop
arpl
nop
cmp
sbb
jle
lcall
fcmove
test
add
mov
aaa
xchg
jnp
or
add
sbb
sub
add
adc
add
mov
add
scas
mov
mov
add
add
add
lds
push
add
insl
xor
or
in
div
ljmp
dec
daa
mov
add
sub
add
mov
push
dec
aaa
xor
add
add
pop
mov
add
das
scas
adc
clc
fcomp
daa
or
add
push
fnstenv
add
cmp
les
out
push
sub
add
data16
jnp
add
inc
lret
mov
add
xlat
cmpsl
rorb
inc
in
addb
rorb
or
cli
mov
paddsw
out
gs
lcall
jbe
push
mov
jg
push
push
mov
add
jno
lea
inc
inc
mov
add
add
dec
jecxz
in
test
add
lods
add
or
mov
add
xchg
mov
pushf
sub
add
xchg
add
cwtl
xchg
inc
and
fstpt
mov
aad
add
nop
aaa
push
into
and
inc
or
jbe
sub
add
mov
add
pop
ret
mov
add
add
mov
jb
addb
pop
test
and
add
jmp
loop
cmpsl
sub
add
add
insl
and
add
mov
add
pop
or
add
add
mov
add
fdivrl
xor
mov
push
mov
mov
sub
movl
lea
push
call
sub
add
and
mov
mov
and
test
je
mov
push
push
cld
call
test
jne
mov
add
push
push
push
push
call
test
jne
xor
push
ret
lea
andl
push
push
push
push
push
push
call
push
cmp
lea
jne
movzbl
or
pop
mov
add
not
cld
imul
cmp
jne
call
rorb
mov
jmp
cmp
mov
add
ret
mov
mov
mov
inc
or
lea
lea
add
lea
shr
lock
sub
and
je
push
mov
jmp
and
add
inc
clc
dec
les
lods
mov
jo
fsubl
loope
lea
ret
jae
lret
push
pop
push
stc
cltd
cmp
in
adc
sbb
add
flds
sbb
mov
add
int
sub
test
xchg
add
adc
adc
scas
lods
add
lods
and
add
add
stos
test
add
push
xchg
int
add
stos
add
enter
fidivrl
fdivr
in
and
stos
xor
add
add
std
add
add
mov
and
lcall
and
add
mov
inc
ljmp
inc
add
add
add
inc
dec
lcall
sahf
test
add
mov
add
loop
add
leave
xchg
sbb
dec
mov
std
push
rcrl
aam
loope
xor
loope
mov
shrl
jmp
out
fucom
jmp
add
icebp
mov
xchg
test
add
out
and
add
cwtl
lods
sub
add
mul
push
add
repz
sarl
enter
mov
scas
add
mov
add
pop
imull
cmpl
das
xor
add
aas
push
sbb
add
jle
data16
icebp
cmpsb
add
ja
cld
cmp
stos
mov
jmp
aad
add
add
dec
jno
add
mov
bound
mov
add
into
aad
movsb
add
xor
add
sub
add
cmp
mov
add
aaa
pop
test
add
ljmp
jae
add
js
cld
leave
add
mov
add
int
add
jl
push
cltd
mov
add
popa
mov
add
push
add
push
sbb
jmp
repnz
jns
fdivr
jnp
bound
add
decb
add
jmp
add
test
int3
xor
add
pop
insb
and
add
dec
mov
mov
add
inc
sub
add
outsb
add
mov
jns
mov
or
add
inc
cmpsl
test
add
xor
cld
mov
sti
cmp
or
and
lret
add
mov
add
gs
pushf
mov
pop
fists
mov
lret
shl
pop
xchg
xchg
lods
add
pop
scas
add
in
jle
shlb
or
vsqrtps
aaa
sub
scas
into
insb
or
scas
add
adc
repz
pop
pusha
sub
testb
or
add
fbld
add
mov
sbb
add
adc
push
or
adc
insl
xchg
pop
arpl
jne
add
add
enter
aas
push
leave
push
gs
jo
test
add
sub
add
ss
sbb
pop
pop
push
inc
inc
pushf
adcl
add
je
mov
or
add
add
mulb
add
fisttps
rclb
add
pop
dec
push
stc
mov
jg
and
add
add
je
or
add
dec
xchg
mov
loop
aam
imul
add
add
imul
inc
pop
pushf
pop
mov
xchg
mov
add
mov
push
mov
add
pop
adc
pop
sub
add
test
sub
mov
and
add
or
add
stos
xor
add
loop
xchg
je
jo
rorl
add
pusha
cltd
add
add
aas
popa
xlat
dec
push
stc
pop
push
add
add
mov
in
stos
inc
dec
jle
or
push
leave
sbb
test
scas
add
xchg
nop
push
insb
mov
imul
inc
xor
mov
aas
lods
add
cmp
xchg
notb
xchg
inc
insb
das
lcall
sbb
pop
cld
cmp
add
addb
cli
cmp
pop
mov
mov
inc
jl
lcall
pop
mov
aam
add
dec
fistpll
mov
ljmp
jnp
pop
jo
hlt
fmul
ja
inc
mov
mov
push
and
add
add
notb
add
cmp
aam
scas
add
push
add
dec
push
and
add
sbb
pusha
inc
jns
ja
sub
add
call
bound
or
add
add
loope
out
lods
jnp
andl
cld
xor
popf
cmc
add
cmp
add
sbb
fcmovbe
outsl
or
add
or
iret
ds
movsl
and
add
add
add
xchg
inc
add
sbb
out
mov
ljmp
jge
xor
ljmp
add
addb
mov
js
mov
fisubrs
add
add
add
add
push
fnstenv
xor
clc
dec
call
mov
add
push
dec
js
xchg
add
adc
and
add
adc
dec
or
add
sbb
mov
fsubp
mov
add
addr16
bound
push
ss
pop
mov
cmp
mov
lret
jns
mov
add
ret
xlat
lcall
xlat
mov
movsl
adc
and
add
add
dec
sub
inc
int3
sbb
inc
je
xchg
mov
pop
nop
and
call
mov
sub
dec
popf
addl
add
add
dec
xor
inc
aad
jnp
lahf
popa
imull
jmp
mov
cmp
cmp
cmpsb
add
lods
add
inc
or
dec
xor
xor
std
push
cwtl
stc
mov
xchg
into
adc
inc
shr
jb
pop
pop
push
jle
jmp
jae
jle
pop
aaa
jne
lahf
movsb
add
adc
jns
out
cmp
add
sub
jnp
sub
add
or
add
add
ss
add
stos
add
and
add
push
push
shrb
scas
addb
mov
imul
add
mov
adc
rolb
mov
add
or
add
mov
movsb
add
into
inc
fwait
or
add
addb
and
add
out
inc
mov
add
push
lahf
push
scas
pop
fistpll
or
sbb
add
ret
in
imul
dec
outsl
fstpl
dec
sbb
dec
sbb
cli
icebp
inc
push
push
add
xor
add
movsl
je
sub
add
add
mov
add
xchg
add
femms
add
sub
add
insl
xchg
push
add
cmc
jge
mov
push
nop
pop
leave
loop
dec
and
add
push
sub
add
mov
jge
int
jecxz
xor
add
mov
add
adc
addb
pop
cwtl
rorb
outsb
int
fnstsw
push
add
bound
add
stos
add
cli
out
js
cmp
sub
add
rcl
jnp
testl
mov
test
mov
fs
mov
xor
jne
insl
cmp
outsb
pop
jns
movsb
add
outsb
cltd
out
stos
add
orl
lds
mov
sbb
nop
xchg
add
push
jne
and
add
adc
gs
jb
adc
xchg
shr
cmpsl
popf
mov
xor
daa
mov
ja
xor
jmp
inc
jecxz
iret
orl
add
popf
push
movsb
add
push
in
mov
add
bnd
or
add
add
in
mov
cwtl
adc
repnz
sti
out
hlt
into
add
add
mov
sbb
add
add
ret
fnstenv
or
add
rol
in
fs
push
popf
lods
add
mov
add
or
add
loope
mov
flds
lock
sahf
into
push
fiadds
in
cltd
mov
sub
push
ficoml
aaa
push
and
mov
add
scas
add
rcr
lods
add
std
jnp
out
add
sti
cmc
push
add
add
pop
pop
out
add
xor
add
inc
aam
jae
mov
add
aas
and
push
ja
and
add
inc
leave
xchg
in
xor
ljmp
add
lock
rol
cmp
add
or
add
ja
add
cmp
xor
ficompl
dec
mov
add
addr16
jno
fimull
pop
les
xor
add
add
pop
mov
mov
add
js
jns
ja
out
adc
push
lret
add
add
push
add
push
pop
push
out
cmc
stos
dec
fistpll
ficompl
loope
add
mov
addb
mov
xchg
add
add
add
inc
push
add
mov
inc
add
add
add
push
int
lods
add
mov
xchg
add
add
insl
into
mov
add
jge
dec
lret
mov
xchg
iret
cwtl
inc
mov
add
cwtl
pop
ret
push
mov
jmp
add
fldt
sub
add
push
add
lret
loope
insl
add
add
add
add
jecxz
adc
imul
add
lahf
jg
mov
getsec
sub
inc
fistpll
jae
mov
fistpl
add
dec
insb
sbb
imul
add
nop
xchg
sub
pushl
cld
test
add
or
add
dec
mov
jg
add
pusha
dec
add
add
push
xor
or
add
out
imul
adc
icebp
data16
mov
mov
fs
pop
push
mov
clc
rcr
int3
cwtl
and
add
test
add
xchg
pusha
cltd
mov
mov
dec
sub
add
int3
dec
or
add
inc
pop
xor
pop
call
je
add
jae
mov
imul
or
ss
rcll
fsubrs
add
fmul
xchg
adc
add
lret
adc
movsl
xchg
add
repz
add
or
add
pop
mov
cmpsb
add
jo
out
xor
add
mov
add
inc
gs
mov
add
cmp
bnd
cmp
inc
in
or
pusha
lds
add
jne
add
push
add
imul
and
xchg
fcoms
inc
push
popf
out
push
add
lret
fidivs
adc
dec
repnz
shrb
add
lock
mul
ja
sbb
xor
daa
xorl
mov
out
mov
xchg
add
pop
push
dec
aaa
mov
movsb
add
add
jmp
addr16
add
sbb
or
add
into
sub
aaa
mov
sub
fwait
adc
loop
xor
add
in
mov
add
xchg
loope
nop
adc
add
out
add
and
add
imul
pop
jnp
xchg
or
add
cltd
pop
notb
dec
test
cmp
add
inc
das
pop
fisubrs
popa
gs
jb
xor
jmp
adc
imul
add
add
loope
jmp
mov
mov
adc
int3
xor
add
in
xchg
fsubl
add
dec
das
lods
inc
and
mov
add
xchg
loope
sbb
rcrl
or
add
cltd
jle
inc
fcmovu
mov
adc
xchg
add
add
lock
lea
ds
stos
mov
add
std
loopne
mov
jmp
jecxz
cmp
push
or
and
addb
rorb
mov
enter
iret
mov
inc
lods
add
dec
dec
lret
jno
push
jecxz
jmp
popa
mov
add
add
sti
inc
in
icebp
in
add
add
push
mov
mov
or
out
sbb
imul
add
roll
add
push
iret
std
lods
add
pop
sahf
xchg
or
jmp
xlat
push
jmp
bound
lods
fisubs
cmc
sbb
push
pop
cmp
xor
cmc
mov
pusha
jge
sbb
mov
add
out
shl
test
mov
add
add
cltd
mov
jo
push
stos
xchg
push
add
mov
pop
in
loope
scas
add
lret
cmp
movsb
add
aas
cmp
add
add
out
dec
or
add
xchg
cmp
add
ss
push
jg
xchg
pop
jne
add
xchg
out
bound
pop
sbb
adc
add
out
add
pop
popf
cmp
mov
shll
add
in
add
test
add
push
cmp
rclb
xchg
push
xor
sar
ja
push
cmp
jbe
add
mov
inc
outsl
test
roll
jb
add
push
js
les
lock
lods
add
fldenv
add
outsb
mov
add
push
stos
add
repnz
enter
pop
fadds
add
fimull
outsb
mov
add
inc
pop
mov
add
add
add
popf
imul
jo
aam
pusha
xlat
pop
stos
cmp
add
lods
add
or
add
add
xor
sar
mov
xchg
in
repz
add
gs
add
push
xor
test
pop
push
fidivrl
pop
mov
rcrl
xor
add
mov
add
pop
xor
add
lahf
sbb
add
pop
fstpl
add
add
and
add
sbb
or
aas
fwait
pop
push
jo
add
add
add
mov
mov
in
push
arpl
rorl
fisubrl
add
mulb
add
push
inc
lds
add
dec
ja
mov
add
mov
add
addb
mov
add
clc
xchg
movsl
idivl
adc
sbb
and
ss
mov
cltd
push
xchg
js
test
add
inc
mov
enter
mov
add
push
fwait
push
jl
inc
test
add
xor
popl
add
add
add
jns
addb
add
add
das
pop
mov
icebp
jl
jmp
sub
add
repnz
or
add
idiv
adc
int3
wbinvd
int
add
mov
mov
ret
and
inc
mov
add
pop
mov
pop
push
lods
pop
cmp
ja
incb
lret
into
pop
stc
addr16
imul
push
mov
add
mov
int3
jecxz
add
lock
jge
fnsave
rcrl
add
push
popf
pusha
jmp
add
jb
push
clc
repnz
nop
nop
jae
add
mov
push
mov
xchg
ret
add
and
rep
nop
push
mov
leave
nop
jmp
add
loop
jb
add
push
imul
jae
add
add
add
sbb
cld
nop
nop
jae
add
add
sbb
clc
repnz
nop
nop
jae
add
add
fwait
add
mov
xchg
ret
add
rolb
and
popa
mov
nop
push
mov
leave
nop
jmp
xchg
sahf
inc
sub
inc
lea
cld
nop
nop
jae
add
sbb
add
arpl
clc
repnz
nop
nop
jae
add
xchg
rclb
mov
nop
push
mov
leave
nop
jmp
sahf
add
repnz
xchg
call
clc
repnz
nop
nop
jae
sahf
add
movsb
addb
xor
in
inc
stos
add
popf
add
clc
repnz
nop
nop
jae
add
add
add
repnz
nop
nop
jae
add
arpl
add
dec
pop
clc
repnz
nop
nop
jae
sbb
sahf
add
add
loope
imul
jmp
add
add
popf
add
jmp
clc
repnz
nop
nop
jae
xor
sbb
xor
mov
clc
repnz
nop
nop
jae
push
sub
jns
add
add
ret
clc
repnz
nop
nop
jae
inc
add
add
sarb
rorl
mov
xchg
ret
add
popf
add
arpl
ret
inc
and
push
mov
leave
nop
jmp
push
dec
sahf
sahf
imul
loop
clc
repnz
nop
nop
jae
add
add
dec
jns
dec
mov
push
mov
xchg
ret
add
mov
clc
repnz
nop
nop
jae
add
loope
push
loope
push
mov
xchg
ret
xor
or
xor
cld
nop
nop
jae
adc
inc
addr16
push
mov
xchg
ret
out
add
aam
add
add
and
push
mov
xchg
ret
jns
movsb
aam
add
add
pushf
movsb
add
jge
sar
repnz
nop
nop
jae
add
dec
inc
ds
and
add
push
adc
mov
leave
nop
jmp
xor
cs
clc
repnz
nop
nop
jae
sbb
loope
push
add
push
mov
leave
nop
jmp
sahf
inc
add
push
sahf
lods
add
jecxz
nop
push
mov
leave
nop
jmp
addl
icebp
sahf
xchg
add
mov
clc
repnz
nop
nop
jae
add
or
ret
xchg
pop
clc
repnz
nop
nop
jae
xor
sbb
adc
jmp
jmp
or
or
sahf
enter
test
push
mov
leave
nop
jmp
inc
popf
or
mov
clc
repnz
nop
nop
jae
sub
stos
fwait
loope
or
nop
nop
jae
add
add
pop
clc
repnz
nop
nop
jae
xor
add
dec
add
add
sub
jns,pn
add
inc
sbb
xor
push
mov
xchg
ret
add
add
popa
add
jb
jbe
into
sbb
jnp
add
loope
sub
or
or
add
pop
nop
push
mov
leave
nop
jmp
out
add
add
inc
add
xlat
pusha
clc
repnz
nop
nop
jae
fwait
stc
add
add
jge
clc
repnz
nop
nop
jae
add
add
pushl
push
mov
xchg
ret
dec
cmp
push
lret
lds
push
mov
leave
nop
jmp
add
addl
add
stc
rorl
cld
nop
nop
jae
and
add
add
inc
add
mov
xchg
ret
popf
dec
jmp
xor
and
add
cld
nop
nop
jae
inc
sbb
nop
mov
add
call
push
mov
xchg
ret
add
add
inc
popa
push
mov
nop
push
mov
leave
nop
jmp
xchg
add
add
ret
rclb
sbb
add
add
push
cwtl
jae
mov
leave
nop
jmp
add
adc
lret
pushl
nop
push
mov
leave
nop
jmp
add
add
jns
push
nop
push
mov
leave
nop
jmp
xchg
out
add
add
aam
add
aam
pop
test
nop
push
mov
leave
nop
jmp
xor
movsb
add
nop
nop
jae
rolb
add
inc
add
ret
rclb
pusha
inc
add
jmp
xor
repnz
nop
nop
jae
inc
or
add
add
cmpl
into
bound
xchg
ret
das
add
jmp
std
pop
push
mov
xchg
ret
xor
popf
push
push
dec
xor
add
repnz
nop
nop
jae
or
jb
and
add
clc
repnz
nop
nop
jae
loope
dec
add
sub
add
popa
clc
repnz
nop
nop
jae
fiaddl
add
cltd
xor
clc
repnz
nop
nop
jae
inc
add
repnz
nop
nop
jae
add
sub
popa
fcmove
add
add
adc
dec
sub
repnz
nop
nop
jae
sahf
add
xor
nop
adc
add
nop
jmp
xchg
add
shlb
fld1
nop
push
mov
leave
nop
jmp
add
inc
mov
clc
repnz
nop
nop
jae
add
dec
out
add
mov
push
mov
xchg
ret
add
popa
aam
loop
add
jp
add
clc
repnz
nop
nop
jae
sub
add
add
pop
mov
nop
push
mov
leave
nop
jmp
adc
loope
mov
clc
repnz
nop
nop
jae
shlb
loop
push
xorl
bound
xchg
ret
loop
movsb
xchg
add
push
xor
cli
pop
inc
add
inc
add
popf
popa
sub
add
jge
nop
push
mov
leave
nop
jmp
xor
das
add
pop
pop
xchg
testl
nop
push
mov
leave
nop
jmp
add
add
les
pop
pop
inc
add
add
popf
inc
add
pop
pop
clc
repnz
nop
nop
jae
mov
add
jmp
cld
nop
nop
jae
add
jmp
insl
add
push
mov
xchg
ret
das
add
movsb
dec
add
and
add
pop
inc
add
add
add
popa
xchg
add
mov
leave
nop
jmp
aam
add
popl
in
leave
nop
jmp
mov
or
das
inc
adc
stos
fld1
clc
repnz
nop
nop
jae
add
xchg
pop
push
nop
push
mov
leave
nop
jmp
add
sbb
int3
outsl
lods
push
mov
xchg
ret
inc
jmp
add
add
ret
clc
repnz
nop
nop
jae
inc
jmp
inc
addr16
jmp
decl
popf
fiaddl
sub
add
add
add
in
inc
mov
mov
nop
push
mov
leave
nop
jmp
add
cmp
sbb
in
leave
nop
jmp
push
sub
adc
dec
cmp
cmp
repnz
nop
nop
jae
add
aam
lret
xor
nop
push
mov
leave
nop
jmp
lret
add
leave
sub
repnz
nop
nop
jae
add
add
xchg
in
pop
clc
repnz
nop
nop
jae
add
sbb
enter
aaa
push
clc
repnz
nop
nop
jae
xor
inc
xchg
push
sub
mov
leave
nop
jmp
movsb
add
add
or
and
repnz
nop
nop
jae
add
push
sub
stos
fisttps
nop
nop
jae
popa
add
add
jmp
add
push
mov
xchg
ret
inc
push
add
inc
add
push
clc
repnz
nop
nop
jae
inc
movsb
adc
rorl
add
clc
repnz
nop
nop
jae
inc
loop
stc
je
push
push
mov
xchg
ret
add
and
pop
xchg
mov
nop
push
mov
leave
nop
jmp
movsb
sub
ret
jge
clc
repnz
nop
nop
jae
add
mov
sub
repnz
nop
nop
jae
add
add
add
rclb
jmp
push
add
add
add
pop
mov
clc
repnz
nop
nop
jae
stos
and
inc
jns
dec
cmpsb
add
cwtl
mov
add
mov
leave
nop
jmp
sub
jmp
mov
push
mov
xchg
ret
movsb
add
stc
arpl
and
popl
notl
nop
jmp
add
xor
negl
repnz
nop
nop
jae
add
popa
cmp
subl
mov
xchg
ret
add
add
add
loop
mov
das
insl
inc
add
adc
add
add
int
pop
jae
repnz
nop
nop
jae
ret
add
push
clc
repnz
nop
nop
jae
add
movsb
jo
add
mov
add
xor
decl
add
movsb
loop
and
add
and
sub
add
in
leave
nop
jmp
inc
fiaddl
add
add
add
push
mov
xchg
ret
sub
add
sahf
arpl
add
xor
repnz
nop
nop
jae
adc
add
enter
jnp
seto
in
leave
nop
jmp
add
movsb
xor
add
mov
xchg
ret
adc
stos
popf
inc
or
mov
clc
repnz
nop
nop
jae
add
add
jl
fistpl
push
mov
xchg
ret
jmp
enter
add
fld1
nop
push
mov
leave
nop
jmp
add
add
arpl
lock
push
push
mov
xchg
ret
or
mov
icebp
add
add
stos
add
mov
mov
xchg
ret
sahf
jmp
push
add
add
test
add
push
push
mov
xchg
ret
sbb
xchg
dec
movsb
add
sub
add
push
mov
mov
xchg
ret
add
inc
sahf
mov
add
push
clc
repnz
nop
nop
jae
stos
sub
mov
add
ljmp
loop
clc
repnz
nop
nop
jae
add
movsb
add
inc
stos
add
cmpsl
pusha
push
mov
xchg
ret
push
stc
stos
push
inc
or
fld1
clc
repnz
nop
nop
jae
add
add
push
mov
xchg
ret
add
sub
adc
in
movsb
push
mov
xchg
ret
sbb
xor
arpl
sbb
popl
clc
repnz
nop
nop
jae
push
add
add
std
cmp
nop
push
mov
leave
nop
jmp
jmp
push
mov
xchg
ret
inc
push
add
inc
add
sub
push
clc
repnz
nop
nop
jae
jmp
add
cmc
add
nop
push
mov
leave
nop
jmp
loope
sbb
lret
add
mov
clc
repnz
nop
nop
jae
sahf
jb
add
dec
lahf
add
clc
repnz
nop
nop
jae
movsb
movsb
add
rorl
cld
nop
nop
jae
add
add
or
nop
push
mov
leave
nop
jmp
stc
add
pushf
sub
call
inc
add
stos
add
push
sbb
add
pop
or
add
push
clc
repnz
nop
nop
jae
dec
add
dec
inc
sbb
sahf
loop
add
nop
push
mov
leave
nop
jmp
add
add
add
pop
mov
add
jnp
jne
clc
repnz
nop
nop
jae
das
add
enter
cli
mov
add
mov
clc
repnz
nop
nop
jae
sahf
add
add
enter
rclb
nop
jmp
popa
xor
add
shr
clc
repnz
nop
nop
jae
push
add
add
or
repnz
nop
nop
jae
add
das
xor
jns
add
jecxz
adc
repnz
nop
nop
jae
add
dec
add
add
mov
leave
nop
jmp
or
sahf
add
sub
shlb
nop
nop
jae
add
and
add
dec
inc
and
add
mov
clc
repnz
nop
nop
jae
add
add
movsb
inc
or
add
fdivs
cld
nop
nop
jae
add
add
lret
clc
repnz
nop
nop
jae
add
sahf
sub
dec
add
xor
clc
repnz
nop
nop
jae
add
imul
clc
repnz
nop
nop
jae
sbb
add
add
adc
add
add
test
repnz
nop
nop
jae
add
xchg
lods
shl
push
mov
xchg
ret
add
out
add
add
bound
clc
repnz
nop
nop
jae
add
add
xchg
add
xchg
jo
pop
mov
cld
nop
nop
jae
push
or
jmp
inc
mov
add
inc
mov
add
repnz
nop
nop
jae
sbb
add
add
push
clc
repnz
nop
nop
jae
add
push
xor
rclb
popf
jns
add
add
ret
call
inc
add
popa
add
enter
jno
nop
push
mov
leave
nop
jmp
push
add
or
add
iret
fistpl
clc
repnz
nop
nop
jae
xchg
add
add
mov
clc
repnz
nop
nop
jae
jns
add
jmp
repnz
nop
nop
jae
sub
addl
stc
add
push
add
clc
repnz
nop
nop
jae
or
xchg
or
jne
clc
repnz
nop
nop
jae
and
add
push
mov
leave
nop
jmp
add
sbb
add
mov
add
add
repnz
nop
nop
jae
imul
arpl
repnz
nop
nop
jae
icebp
add
add
xor
clc
repnz
nop
nop
jae
add
sahf
add
iret
shr
push
mov
xchg
ret
add
das
add
das
xchg
xor
mov
clc
repnz
nop
nop
jae
jmp
add
xchg
dec
nop
push
mov
leave
nop
jmp
add
add
popf
jmp
add
add
sar
push
push
push
mov
xchg
ret
ret
inc
add
xor
sahf
mov
sti
clc
repnz
nop
nop
jae
das
add
fwait
das
inc
test
add
fwait
push
nop
push
mov
leave
nop
jmp
or
add
test
push
mov
xchg
ret
add
xor
add
add
clc
repnz
nop
nop
jae
add
inc
rcr
lods
add
inc
inc
jne
clc
repnz
nop
nop
jae
add
add
push
push
mov
xchg
ret
mov
xchg
adc
call
clc
repnz
nop
nop
jae
add
aam
lea
clc
repnz
nop
nop
jae
add
add
add
clc
repnz
nop
nop
jae
sahf
xchg
mov
jp
int
dec
cmp
repnz
nop
nop
jae
add
add
movsb
add
add
add
clc
repnz
nop
nop
jae
add
fwait
xor
adc
xor
and
movsb
add
add
fwait
movsb
mov
aas
clc
repnz
nop
nop
jae
cmp
add
sbb
lahf
mov
push
mov
xchg
ret
add
popf
icebp
inc
add
imul
cld
nop
nop
jae
add
xor
inc
movzwl
clc
repnz
nop
nop
jae
xorl
movsb
add
mov
or
add
clc
repnz
nop
nop
jae
add
add
add
or
cld
nop
nop
jae
sub
dec
rolb
lret
loop
xchg
cmp
dec
cmp
repnz
nop
nop
jae
jb
add
movsb
clc
repnz
nop
nop
jae
popa
popa
iret
xor
add
push
pusha
jne
pop
add
add
nop
jmp
add
xor
jne
sbb
clc
repnz
nop
nop
jae
arpl
add
adc
mov
xchg
ret
add
adc
add
jmp
xor
nop
push
mov
leave
nop
jmp
stos
or
mov
mov
repnz
nop
nop
jae
jns
xor
add
dec
imul
add
das
add
xor
add
fidivrl
mov
push
mov
xchg
ret
sub
add
sar
cld
nop
nop
jae
out
and
inc
add
addb
lea
nop
push
mov
leave
nop
jmp
rolb
push
xor
jecxz
jmp
clc
repnz
nop
nop
jae
fcmove
or
fistpl
clc
repnz
nop
nop
jae
inc
push
adc
add
push
mov
xchg
ret
sub
add
nop
push
mov
leave
nop
jmp
xor
mov
mov
repnz
nop
nop
jae
add
cmp
lahf
add
clc
repnz
nop
nop
jae
add
or
add
mov
call
clc
repnz
nop
nop
jae
add
dec
add
nop
push
mov
leave
nop
jmp
add
inc
add
add
nop
push
mov
leave
nop
jmp
add
mov
push
clc
repnz
nop
nop
jae
out
add
add
loope
incl
add
repnz
nop
nop
jae
or
add
pop
clc
repnz
nop
nop
jae
add
add
fidivrl
test
idiv
clc
repnz
nop
nop
jae
sbb
je
add
push
mov
xchg
ret
push
dec
jmp
add
push
sub
cltd
test
xchg
ret
out
sbb
add
and
add
pop
arpl
nop
jae
stc
add
add
rep
push
mov
xchg
ret
popa
ret
lret
add
xlat
push
push
mov
xchg
ret
add
add
add
sahf
add
sbb
insb
inc
jb
clc
repnz
nop
nop
jae
push
add
xor
add
add
out
ss
out
cmpw
nop
push
mov
leave
nop
jmp
inc
inc
or
orl
add
incl
fwait
popa
dec
add
fistps
mov
xchg
ret
xor
inc
ret
adc
add
mov
clc
repnz
nop
nop
jae
dec
adc
mov
rol
clc
repnz
nop
nop
jae
inc
sbbl
push
inc
outsb
scas
mov
push
mov
xchg
ret
dec
and
xor
repnz
nop
nop
jae
add
sahf
imul
add
push
psubsb
cld
nop
nop
jae
inc
popa
add
lods
mov
nop
push
mov
leave
nop
jmp
inc
icebp
add
jo
add
clc
repnz
nop
nop
jae
add
movsb
jmp
clc
repnz
nop
nop
jae
add
add
inc
add
push
mov
xchg
ret
add
or
mov
nop
push
mov
leave
nop
jmp
or
enter
clc
repnz
nop
nop
jae
add
add
xchg
add
inc
rorb
call
nop
push
mov
leave
nop
jmp
add
les
nop
push
mov
leave
nop
jmp
xor
arpl
cmpsl
fwait
push
mov
xchg
ret
fwait
xchg
add
push
add
add
clc
clc
repnz
nop
nop
jae
jmp
or
repnz
nop
nop
jae
and
add
dec
inc
gs
push
mov
xchg
ret
movsb
push
push
add
add
int
sub
add
or
and
add
dec
add
inc
push
xchg
clc
repnz
nop
nop
jae
sbb
add
addb
aaa
cmp
nop
push
mov
leave
nop
jmp
ret
add
mov
clc
repnz
nop
nop
jae
add
mov
or
or
cmp
nop
jmp
add
clc
repnz
nop
nop
jae
add
jmp
sbb
mov
clc
repnz
nop
nop
jae
add
add
sahf
add
add
clc
repnz
nop
nop
jae
add
add
push
clc
repnz
nop
nop
jae
add
jb
add
push
mov
xchg
ret
dec
add
jb
push
sub
add
push
clc
repnz
nop
nop
jae
xchg
add
add
pusha
clc
repnz
nop
nop
jae
add
sub
xor
add
add
add
mov
clc
repnz
nop
nop
jae
add
lret
aam
mov
clc
repnz
nop
nop
jae
add
xchg
add
inc
jmp
add
clc
repnz
nop
nop
jae
push
add
adc
mov
xchg
ret
add
inc
mov
add
clc
repnz
nop
nop
jae
add
jb
sub
nop
nop
jae
add
add
add
xor
and
clc
repnz
nop
nop
jae
add
push
fsts
mov
xchg
ret
add
loope
push
outsb
ja
clc
repnz
nop
nop
jae
add
aam
add
ret
je
clc
repnz
nop
nop
jae
add
dec
out
fs
add
clc
repnz
nop
nop
jae
add
push
add
cmp
cmp
pop
clc
repnz
nop
nop
jae
xor
jmp
inc
mov
clc
repnz
nop
nop
jae
inc
add
lret
add
add
add
js
sub
jmp
nop
jae
add
cmp
pop
leave
push
mov
add
mov
bound
xor
lea
clc
repnz
nop
nop
jae
or
sub
add
cld
mov
mov
pop
inc
add
add
add
add
add
add
mov
sar
repnz
nop
nop
jae
add
add
sbb
jo
adc
ret
xor
dec
add
loop
sbb
jmp
nop
nop
jae
movsb
add
add
xchg
leave
mov
push
mov
xchg
ret
dec
adc
cmp
cmp
mov
xchg
ret
sub
add
add
add
loope
inc
cmp
mov
xchg
ret
or
add
je
clc
repnz
nop
nop
jae
add
inc
daa
sub
push
mov
xchg
ret
add
add
push
iret
stc
jmp
add
or
jns
xor
add
pop
add
push
mov
xchg
ret
add
dec
sahf
jle
rcr
call
inc
add
inc
add
add
arpl
dec
mov
dec
sub
sbb
xchg
ret
add
inc
add
add
cltd
add
nop
push
mov
leave
nop
jmp
push
add
ret
clc
repnz
nop
nop
jae
sub
iret
mov
push
clc
repnz
nop
nop
jae
push
add
out
loop
or
clc
repnz
nop
nop
jae
loop
add
add
pop
push
clc
repnz
nop
nop
jae
add
add
notb
enter
xchg
cld
into
add
add
repnz
nop
nop
jae
add
add
popa
add
xor
push
mov
leave
nop
jmp
add
ret
inc
mov
add
pop
add
nop
push
mov
leave
nop
jmp
iret
movsb
cmp
ret
rorl
push
mov
leave
nop
jmp
add
add
add
incl
nop
push
mov
leave
nop
jmp
push
add
add
nop
push
mov
leave
nop
jmp
loop
xchg
add
add
adc
repnz
nop
nop
jae
add
add
arpl
add
lret
clc
repnz
nop
nop
jae
add
inc
inc
pop
sub
nop
push
mov
leave
nop
jmp
loop
add
and
push
mov
xchg
ret
add
add
mov
mov
clc
repnz
nop
nop
jae
add
out
add
movsb
add
mov
add
repnz
nop
nop
jae
add
inc
xchg
add
push
dec
rep
clc
repnz
nop
nop
jae
add
add
movsb
inc
push
call
clc
repnz
nop
nop
jae
fiaddl
cmp
mov
clc
repnz
nop
nop
jae
jmp
sub
clc
repnz
nop
nop
jae
and
inc
rorl
cld
nop
nop
jae
inc
adc
add
inc
add
repnz
nop
nop
jae
movsb
add
icebp
add
add
sbb
clc
repnz
nop
nop
jae
or
jno
cwtl
idiv
incl
popf
inc
inc
movsb
and
add
mov
add
inc
divl
rclb
jmp
add
xchg
xor
xorl
nop
push
mov
leave
nop
jmp
inc
sbb
xor
jnp
add
mov
add
add
push
clc
repnz
nop
nop
jae
xor
add
nop
xchg
sarl
clc
repnz
nop
nop
jae
xchg
push
add
add
iret
add
adc
stos
enter
sbb
pop
push
push
mov
xchg
ret
sahf
dec
add
add
push
push
mov
xchg
ret
jmp
sahf
inc
sahf
add
mov
repnz
nop
nop
jae
orl
out
sbb
addb
mov
clc
repnz
nop
nop
jae
inc
add
sub
cmpsl
add
push
mov
xchg
ret
add
out
add
clc
repnz
nop
nop
jae
inc
add
inc
sbb
inc
fcmove
mov
add
jae
rclb
nop
jmp
add
andl
test
repnz
nop
nop
jae
and
add
push
push
mov
xchg
ret
add
sub
loope
jmp
rolb
add
add
iret
add
xor
cld
nop
nop
jae
fwait
das
add
sbb
add
aad
dec
cmp
nop
jmp
or
add
jns
push
mov
mov
cltd
popf
pop
add
push
mov
movsb
add
mov
mov
clc
repnz
nop
nop
jae
add
add
das
add
cld
nop
nop
jae
add
inc
rolb
stc
or
add
add
mov
xchg
add
push
mov
xchg
ret
add
addl
add
sarb
add
int3
outsb
xor
mov
clc
repnz
nop
nop
jae
stos
add
push
dec
clc
repnz
nop
nop
jae
das
add
imul
inc
and
nop
push
mov
leave
nop
jmp
or
and
add
cli
popf
clc
push
mov
xchg
ret
push
add
add
out
add
inc
call
nop
jae
xor
inc
into
add
add
mov
clc
repnz
nop
nop
jae
add
das
movsb
add
rol
icebp
inc
and
add
add
fwait
add
xor
add
jae
roll
mov
xchg
ret
push
add
add
add
add
outsb
dec
cmc
imul
clc
repnz
nop
nop
jae
add
add
dec
mov
add
cmp
add
pop
add
add
jmp
stc
inc
das
xchg
inc
jmp
stc
add
jns
inc
jmp
add
jmp
sahf
ret
enter
gs
push
mov
xchg
ret
out
jns
iret
xchg
adc
leave
push
mov
xchg
ret
dec
add
add
push
rcrb
rep
push
mov
xchg
ret
fidivrl
add
call
add
mov
inc
loope
add
stos
xchg
add
push
mov
xchg
ret
sbb
add
lret
loop
in
in
add
nop
push
mov
leave
nop
jmp
add
add
inc
add
mov
xchg
ret
stos
arpl
mov
clc
repnz
nop
nop
jae
add
and
cmp
push
mov
leave
nop
jmp
add
add
inc
add
movsl
mov
push
mov
xchg
ret
out
add
inc
or
data16
outsl
push
mov
xchg
daa
test
add
int
adc
je
clc
repnz
nop
nop
jae
add
add
test
add
repnz
nop
nop
jae
or
add
push
sbb
repnz
nop
nop
jae
sub
imul
nop
push
mov
leave
nop
jmp
fwait
add
jmp
adc
nop
jae
imul
icebp
nop
push
mov
leave
nop
jmp
add
add
stos
add
cltd
movzwl
nop
push
mov
leave
nop
jmp
aam
icebp
add
pop
movzwl
clc
repnz
nop
nop
jae
das
out
inc
xchg
lahf
pusha
clc
repnz
nop
nop
jae
add
add
bound
repnz
nop
nop
jae
jb
add
add
loope
jno
mov
mov
leave
nop
jmp
add
pop
nop
push
mov
leave
nop
jmp
add
movsb
add
add
add
div
clc
repnz
nop
nop
jae
add
add
add
fwait
push
mov
xchg
ret
arpl
out
add
pusha
jmp
rclb
lahf
jge
add
add
and
add
pop
pop
clc
repnz
nop
nop
jae
and
add
mov
push
adc
mov
xchg
ret
sub
dec
add
stc
movsb
add
push
mov
xchg
ret
add
add
add
add
dec
cmp
repnz
nop
nop
jae
xor
xor
push
mov
leave
nop
jmp
iret
push
push
loop
add
rorl
add
nop
jmp
out
add
fmulp
push
nop
push
mov
leave
nop
jmp
inc
add
add
pop
fistpl
push
mov
xchg
ret
add
add
out
and
add
clc
repnz
nop
nop
jae
add
out
xor
clc
repnz
nop
nop
jae
xchg
sub
add
sahf
add
stos
clc
repnz
nop
nop
jae
add
add
inc
clc
repnz
nop
nop
jae
sahf
out
add
xor
add
popa
add
push
mov
xchg
ret
add
add
add
arpl
outsb
imul
out
add
mov
clc
repnz
nop
nop
jae
add
add
clc
repnz
nop
nop
jae
add
dec
std
add
clc
repnz
nop
nop
jae
add
add
rclb
mov
cmp
ret
icebp
enter
fwait
add
mov
clc
repnz
nop
nop
jae
or
add
add
repnz
nop
nop
jae
add
push
mov
clc
repnz
nop
nop
jae
add
add
xor
in
in
and
fildl
xchg
add
add
add
aam
cmp
push
mov
leave
nop
jmp
dec
add
pop
push
mov
xchg
ret
add
xchg
or
bound
inc
jne
clc
repnz
nop
nop
jae
and
repz
mov
xchg
ret
add
jb
mov
or
cld
nop
nop
jae
mov
add
adc
test
push
mov
leave
nop
jmp
mov
sub
push
mov
xchg
ret
fwait
add
add
add
xor
add
clc
repnz
nop
nop
jae
inc
push
dec
xor
cmp
push
mov
xchg
ret
iret
cmp
pop
pushl
push
mov
xchg
ret
add
iret
add
loop
mov
cld
nop
nop
jae
dec
xchg
add
mov
in
leave
nop
jmp
push
add
add
add
test
add
nop
push
mov
leave
nop
jmp
stos
add
fwait
stos
inc
xchg
inc
jo
xor
clc
repnz
nop
nop
jae
add
add
das
pop
fs
test
push
mov
leave
nop
jmp
push
add
clc
repnz
nop
nop
jae
add
jle
addb
pop
mov
clc
repnz
nop
nop
jae
add
loop
xor
mov
xchg
ret
inc
add
add
add
sahf
add
add
call
nop
push
mov
leave
nop
jmp
imul
repz
clc
repnz
nop
nop
jae
jns
insl
mov
clc
repnz
nop
nop
jae
or
add
scas
clc
clc
repnz
nop
nop
jae
sahf
sahf
add
movb
mov
xchg
ret
add
add
inc
loop
mov
jg
add
clc
repnz
nop
nop
jae
xor
dec
add
repnz
nop
nop
jae
jns
add
add
lds
add
inc
sbb
add
in
leave
nop
jmp
add
push
inc
add
add
clc
repnz
nop
nop
jae
sahf
add
push
add
sub
adc
in
or
dec
std
pop
mov
hlt
icebp
add
xor
cld
nop
nop
jae
or
adc
mov
nop
nop
jae
add
add
xchg
xor
add
clc
repnz
nop
nop
jae
add
xor
and
add
jmp
repnz
nop
nop
jae
add
sub
inc
add
clc
repnz
nop
nop
jae
movsb
aam
arpl
sbb
add
mov
clc
repnz
nop
nop
jae
add
add
jmp
xor
add
push
cmp
add
add
push
mov
xchg
ret
movsb
popa
iret
add
imul
nop
nop
jae
inc
add
arpl
and
nop
nop
jae
add
add
insl
and
clc
repnz
nop
nop
jae
imul
imul
mov
clc
repnz
nop
nop
jae
add
repnz
nop
nop
jae
or
push
dec
add
add
nop
push
mov
leave
nop
jmp
sub
sahf
inc
add
add
adc
push
mov
leave
nop
jmp
add
pop
push
mov
xchg
ret
add
out
add
add
cmpw
nop
push
mov
leave
nop
jmp
sbb
add
add
sbb
clc
repnz
nop
nop
jae
add
ficoml
cld
push
clc
repnz
nop
nop
jae
loope
add
add
xchg
enter
dec
cmp
repnz
nop
nop
jae
jb
add
jb
sub
add
clc
repnz
nop
nop
jae
push
imul
test
add
nop
push
mov
leave
nop
jmp
jns
add
sub
nop
nop
jae
add
jmp
js
sarb
repz
repnz
nop
nop
jae
icebp
add
push
fldl
push
mov
leave
nop
jmp
add
jns
add
lss
nop
push
mov
leave
nop
jmp
add
push
mov
xchg
ret
and
sbb
add
add
add
pop
pop
shl
nop
push
mov
leave
nop
jmp
dec
inc
xor
call
clc
repnz
nop
nop
jae
xor
adc
mov
xchg
ret
sahf
push
sbb
add
jns
xor
clc
repnz
nop
nop
jae
or
addr16
clc
repnz
nop
nop
jae
cmp
add
jge
sbb
nop
push
mov
leave
nop
jmp
push
add
inc
push
sbb
pusha
nop
push
mov
leave
nop
jmp
sahf
add
sahf
inc
add
mov
mov
xchg
ret
fwait
dec
add
or
sbb
push
mov
leave
nop
jmp
add
add
mov
add
pop
inc
push
mov
xchg
ret
movsb
aam
xchg
xchg
add
loope
add
xchg
jmp
loop
add
addl
add
loop
add
aam
lret
mov
clc
repnz
nop
nop
jae
add
cmp
add
mov
nop
push
mov
leave
nop
jmp
add
add
add
sbb
dec
mov
push
mov
xchg
ret
fiaddl
push
add
inc
add
add
sbb
add
nop
push
mov
leave
nop
jmp
add
push
mov
xchg
ret
out
add
add
mov
enter
mov
xchg
ret
add
add
add
and
push
mov
xchg
ret
add
out
mov
dec
or
push
mov
xchg
ret
arpl
adc
enter
icebp
jne
clc
repnz
nop
nop
jae
inc
movsb
add
mov
clc
repnz
nop
nop
jae
rorb
and
add
mov
nop
push
mov
leave
nop
jmp
add
add
mov
clc
repnz
nop
nop
jae
inc
mov
add
inc
nop
push
mov
leave
nop
jmp
fcmovbe
add
sahf
inc
add
repz
clc
repnz
nop
nop
jae
add
add
add
popa
inc
add
push
add
or
and
add
imul
inc
add
add
add
add
clc
repnz
nop
nop
jae
add
out
add
xor
test
add
add
das
add
nop
push
mov
leave
nop
jmp
add
xor
push
push
mov
xchg
ret
sub
xor
out
out
test
add
mov
leave
nop
jmp
xor
xor
add
nop
nop
jae
add
fiaddl
add
add
clc
repnz
nop
nop
jae
add
imul
add
add
mov
jecxz
push
mov
leave
nop
jmp
mov
push
add
add
mov
mov
push
mov
xchg
ret
enter
add
add
orl
in
leave
nop
jmp
add
push
inc
add
clc
repnz
nop
nop
jae
add
add
subl
push
mov
xchg
ret
popa
loop
or
mov
add
add
add
cmp
add
add
add
pop
lods
push
mov
xchg
ret
add
mov
add
andl
cld
nop
nop
jae
add
add
add
clc
repnz
nop
nop
jae
add
add
push
nop
push
mov
leave
nop
jmp
add
add
decl
nop
nop
jae
add
or
cld
nop
nop
jae
add
mov
add
add
pop
arpl
dec
pusha
inc
add
add
add
inc
pop
push
mov
xchg
ret
ret
cmp
add
add
out
push
push
mov
xchg
ret
addl
add
aam
mov
aas
adc
nop
jmp
add
xor
cld
nop
push
mov
leave
nop
jmp
inc
mov
sub
mov
mov
clc
repnz
nop
nop
jae
add
add
stos
pushf
or
add
mov
clc
repnz
nop
nop
jae
and
rcrb
nop
push
mov
leave
nop
jmp
jns
push
jns
add
xor
pop
xor
push
mov
xchg
ret
adc
icebp
iret
add
add
jecxz
test
add
add
enter
iret
add
mov
add
clc
repnz
nop
nop
jae
push
add
add
clc
repnz
nop
nop
jae
add
add
loope
dec
add
clc
repnz
nop
nop
jae
inc
mov
fs
push
mov
xchg
ret
add
add
das
das
add
nop
push
mov
leave
nop
jmp
adc
ret
push
ret
xorl
clc
repnz
nop
nop
jae
xchg
ret
add
add
movsl
je
nop
push
mov
leave
nop
jmp
add
rclb
sub
add
push
push
mov
xchg
ret
add
enter
xchg
adc
sub
add
je
clc
repnz
nop
nop
jae
adc
xor
mov
leave
nop
jmp
add
add
adc
mov
clc
repnz
nop
nop
jae
fiaddl
dec
add
mov
clc
repnz
nop
nop
jae
add
adc
add
call
leave
nop
jmp
xor
add
stc
add
pop
ret
clc
repnz
nop
nop
jae
add
add
adc
clc
sub
arpl
and
add
add
add
mov
add
push
mov
xchg
ret
mov
rolb
mov
clc
repnz
nop
nop
jae
inc
inc
lret
arpl
inc
pop
lods
push
mov
xchg
ret
inc
add
push
push
fiaddl
test
push
mov
xchg
ret
add
add
cmp
pop
push
mov
xchg
ret
inc
add
stc
sbb
or
clc
repnz
nop
nop
jae
xchg
add
movsb
cwtl
pop
push
push
mov
xchg
ret
add
push
jmp
add
mov
xchg
ret
inc
add
xchg
add
push
jl
sub
clc
repnz
nop
nop
jae
add
add
add
fwait
mov
loope
repnz
nop
nop
jae
add
clc
repnz
nop
nop
jae
out
or
and
clc
repnz
nop
nop
jae
add
arpl
cmp
add
clc
repnz
nop
nop
jae
sbbl
outsl
push
push
mov
xchg
ret
add
jmp
add
push
mov
xchg
ret
xor
add
out
pop
push
clc
repnz
nop
nop
jae
add
add
add
add
xchg
clc
repnz
nop
nop
jae
xor
add
mov
xchg
ret
add
add
mov
inc
ret
cld
push
mov
xchg
ret
xchg
add
add
xchg
and
add
nop
nop
jae
or
iret
add
cmp
sbb
clc
repnz
nop
nop
jae
out
stc
sahf
xor
pop
push
push
mov
xchg
ret
add
add
adc
add
repnz
nop
nop
jae
add
add
jmp
and
nop
push
mov
leave
nop
jmp
xchg
jb
add
pop
clc
repnz
nop
nop
jae
add
xor
push
jmp
clc
repnz
nop
nop
jae
arpl
add
dec
add
test
nop
nop
jae
add
mov
push
mov
clc
repnz
nop
nop
jae
loope
add
stc
add
push
push
mov
test
out
call
nop
jmp
sbb
rorb
clc
repnz
nop
nop
jae
jmp
add
dec
jecxz
clc
repnz
nop
nop
jae
fwait
icebp
add
and
ret
sti
clc
repnz
nop
nop
jae
xchg
sub
push
add
add
xor
clc
repnz
nop
nop
jae
or
aad
add
add
leave
nop
jmp
add
add
jno
dec
cmp
repnz
nop
nop
jae
add
xchg
iret
addl
xor
clc
repnz
nop
nop
jae
movsb
inc
inc
jmp
push
mov
xchg
ret
add
adc
mov
incl
xor
fcmovu
icebp
add
stc
add
xchg
mov
clc
repnz
nop
nop
jae
push
out
icebp
add
add
clc
repnz
nop
nop
jae
loope
add
aas
mov
push
mov
xchg
ret
inc
xchg
add
mov
add
clc
repnz
nop
nop
jae
xchg
add
add
lcall
xchg
repnz
nop
nop
jae
add
arpl
mov
xchg
ret
lret
inc
popa
fwait
add
or
add
mov
clc
repnz
nop
nop
jae
add
add
fistpll
repnz
clc
repnz
nop
nop
jae
add
push
push
mov
xchg
ret
add
push
add
mov
clc
repnz
nop
nop
jae
add
add
icebp
popf
push
in
mov
jae
adc
add
adc
clc
repnz
nop
nop
jae
add
add
or
add
nop
push
mov
leave
nop
jmp
add
add
add
popa
clc
repnz
nop
nop
jae
add
add
aam
add
into
jo
sub
add
add
or
add
clc
nop
push
mov
leave
nop
jmp
adc
sub
adc
mov
nop
nop
jae
add
add
sub
imul
nop
push
mov
leave
nop
jmp
popf
out
stos
add
add
inc
xchg
xor
clc
repnz
nop
nop
jae
inc
add
or
add
hlt
pop
cmp
nop
push
mov
leave
nop
jmp
movsb
xor
add
xchg
xchg
ret
add
out
xor
hlt
cli
xor
cld
nop
nop
jae
movsb
iret
push
add
push
add
mov
xchg
ret
inc
sub
add
add
scas
mov
clc
repnz
nop
nop
jae
das
adc
movsb
add
sub
add
movzwl
nop
push
mov
leave
nop
jmp
add
sub
mov
push
push
mov
xchg
ret
xor
xchg
add
sahf
lret
add
add
mov
leave
nop
jmp
or
mov
pop
add
add
int
add
clc
repnz
nop
nop
jae
jmp
aam
xor
clc
repnz
nop
nop
jae
add
out
add
add
nop
push
mov
leave
nop
jmp
arpl
dec
adc
mov
add
push
clc
repnz
nop
nop
jae
add
lret
mov
cld
nop
nop
jae
xchg
movsb
add
xor
add
je
js
push
mov
leave
nop
jmp
add
add
iret
dec
add
clc
repnz
nop
nop
jae
add
cmp
fld1
push
mov
xchg
ret
fiaddl
add
movsl
push
clc
repnz
nop
nop
jae
mov
sbb
add
jns
call
clc
repnz
nop
nop
jae
out
stc
add
push
nop
push
mov
leave
nop
jmp
add
add
cld
nop
nop
jae
xor
add
add
andl
in
leave
nop
jmp
add
add
pop
cmpsb
add
test
clc
repnz
nop
nop
jae
sub
add
fistpl
clc
repnz
nop
nop
jae
adc
arpl
mov
nop
push
mov
leave
nop
jmp
add
xor
ljmp
clc
repnz
nop
nop
jae
add
sahf
and
nop
jae
cmp
xor
mov
add
push
mov
outsl
lds
add
sub
add
aas
sbb
xchg
or
add
push
push
add
clc
repnz
nop
nop
jae
add
add
add
out
sub
nop
push
mov
leave
nop
jmp
add
mov
repnz
nop
nop
jae
xor
dec
push
jg
call
leave
nop
jmp
add
dec
mov
fistpl
clc
repnz
nop
nop
jae
add
dec
and
fistl
lret
test
xchg
ret
popf
add
add
add
out
dec
jmp
scas
enter
nop
nop
jae
add
add
aam
mov
add
push
mov
xchg
ret
add
stos
add
add
xor
add
clc
repnz
nop
nop
jae
add
or
les
push
add
ficompl
add
das
arpl
sbb
repnz
nop
nop
jae
xor
sbb
add
repnz
nop
nop
jae
add
dec
add
add
push
push
mov
xchg
ret
popa
add
add
enter
push
sbb
rep
clc
repnz
nop
nop
jae
add
inc
sub
add
loopne
stos
add
push
mov
nop
push
mov
leave
nop
jmp
add
mov
add
add
sub
repnz
nop
nop
jae
xor
add
nop
nop
jae
or
xchg
inc
add
add
mov
nop
push
mov
leave
nop
jmp
sub
add
stc
xchg
add
clc
repnz
nop
nop
jae
orl
add
add
add
pop
popl
xchg
ret
mov
inc
add
add
pop
add
nop
push
mov
leave
nop
jmp
aam
stos
lret
stos
and
jb
filds
xorl
add
nop
push
mov
leave
nop
jmp
sbb
mov
sub
clc
repnz
nop
nop
jae
lret
xor
add
in
sti
nop
push
mov
leave
nop
jmp
loop
sub
push
xor
test
mov
xchg
ret
sbb
inc
add
push
enter
xchg
push
mov
xchg
ret
out
add
stos
enter
add
add
pop
or
pop
loopne
clc
repnz
nop
nop
jae
rolb
fiaddl
push
pop
clc
repnz
nop
nop
jae
add
add
add
inc
add
ret
clc
repnz
nop
nop
jae
add
or
add
add
clc
repnz
nop
nop
jae
or
xor
jl
add
xchg
push
add
add
mov
add
xchg
add
push
mov
xchg
ret
sub
ret
rorl
mov
xchg
ret
imul
inc
aam
not
nop
push
mov
leave
nop
jmp
jmp
add
add
sub
add
call
clc
repnz
nop
nop
jae
sbb
push
inc
jb
not
push
mov
xchg
ret
add
ret
cld
inc
pop
clc
repnz
nop
nop
jae
add
adc
inc
filds
add
nop
jmp
add
add
imul
cmp
ret
add
movsb
mov
add
adc
repnz
nop
nop
jae
or
stc
call
in
ret
fldcw
outsb
add
shrl
sahf
add
add
imul
add
xchg
pop
inc
lods
mov
adc
add
xchg
fnsave
sbb
add
sub
add
jne
push
and
add
and
bound
add
mov
add
pop
addb
pop
mov
mov
add
adc
inc
daa
sti
dec
pop
sarb
cli
mov
mov
jb
adc
movsl
lcall
or
jo
and
jl
sbb
xor
out
push
js
movsb
add
mov
pop
mull
add
movsl
shlb
daa
or
cwtl
mov
xchg
fwait
ds
cmc
jae
rclb
or
xor
lods
add
aad
pop
xchg
adc
add
adc
test
inc
mov
shlb
js
xchg
add
add
adc
push
add
dec
mov
add
sbb
ds
lret
push
pop
cmp
cld
jno
in
lods
jl
int
push
ret
dec
or
add
inc
or
test
add
xchg
mov
add
cmp
dec
inc
les
add
mov
add
dec
cmpsb
add
loope
mov
in
and
add
jl
mov
mov
leave
mov
lret
movsb
add
push
lea
push
ret
add
cwtl
xchg
incb
hlt
push
ljmp
xchg
sub
add
xchg
sbb
jb
push
out
in
push
sub
add
scas
add
pop
adc
xor
pusha
mov
int
inc
xor
add
add
add
and
add
push
add
mov
in
out
mov
or
add
and
or
add
add
lahf
repnz
imul
dec
push
add
in
sti
push
scas
add
sti
lcall
leave
sub
add
andl
jmp
mov
clc
stos
outsb
in
lods
jb
into
inc
int3
mov
leave
push
cmpsl
daa
jg
and
cwtl
shl
dec
cmpsb
add
inc
imul
sub
add
jne
rorb
dec
jp
mov
xor
push
dec
pop
shrb
add
cmp
loopne
add
loope
push
aad
sbb
sbb
or
iret
imull
xchg
add
repz
inc
addr16
imul
ljmp
outsb
bound
inc
xor
add
add
scas
add
adc
push
popa
outsl
in
xor
cmc
jp
in
out
scas
add
loop
fwait
sbb
cwtl
ror
mov
push
rcrl
xor
dec
popf
mov
add
mov
add
shl
xor
mov
cmp
lcall
mov
pop
or
adc
add
jg
jno
out
rorl
cli
sub
add
cmp
add
cmc
lods
add
xchg
add
movsl
mov
or
add
xor
mov
add
cli
fadds
jne
jns
inc
cmc
sbb
inc
ja
add
pop
cwtl
test
adc
cmp
scas
jns
call
mov
in
and
out
fsubl
adc
xor
pop
test
add
pop
mov
cmp
jno
push
cmpl
add
inc
mov
add
xor
lea
xchg
popa
popf
or
sbb
mov
rorb
leave
push
mov
pop
xchg
sbb
mov
call
test
in
fcoml
add
pop
mov
dec
dec
cmp
pop
rclb
add
mov
popf
or
add
add
or
test
shrb
add
int
fsubl
pop
or
add
mov
adc
add
sbb
add
mov
add
inc
mov
add
lahf
fisttps
add
ljmp
add
cmp
jns
and
add
jns
or
add
add
mov
add
clc
inc
pop
mov
push
add
push
xchg
int3
inc
loope
dec
adc
test
add
push
mov
addb
test
add
addl
jno
int3
sbb
sbb
movsb
add
add
add
push
dec
inc
dec
fstl
fs
sti
cmp
cmp
js
popf
scas
add
pop
cmp
add
add
mov
add
adc
imul
sub
xchg
or
add
ljmp
jmp
fwait
mov
or
add
inc
xor
movb
add
test
lock
pop
inc
xor
xchg
add
add
fisttpll
push
pop
pop
xor
add
add
outsb
ds
addr16
bound
jge
cmc
mov
aad
call
and
add
pop
jo
cltd
ret
ja
add
mov
add
cmp
out
cmp
popf
mov
add
mov
sub
xchg
inc
mov
jb
xlat
ret
jae
ret
add
stos
lds
mov
pop
into
push
xchg
xchg
dec
nop
stos
add
sub
add
imul
into
rolb
loopnew
add
xchg
mov
add
into
out
add
add
add
ds
lcall
mov
or
add
mov
add
xchg
push
cld
ss
add
loope
jae
or
add
jno
mov
add
aas
out
arpl
dec
stos
xchg
jge
add
jl
in
jns
mov
add
add
push
enter
add
inc
pavgw
lahf
pop
pop
cmp
out
insb
shlb
pop
mov
add
outsb
insb
add
iret
test
add
and
insb
mov
pop
into
add
enter
gs
mov
add
dec
dec
jecxz
shlb
mov
and
add
or
or
add
sbb
add
cmp
sbb
jne
xor
adc
mov
add
scas
add
or
push
sti
outsb
adc
divl
mov
add
push
mov
add
add
mov
mov
test
add
and
add
cmp
add
mov
rolw
add
add
add
add
cmp
mov
mov
pop
adc
sahf
mov
add
pop
xor
add
mov
popa
pushf
fisttpl
cmpsb
add
add
dec
or
add
fs
fs
popa
movsb
add
mov
popa
sub
add
add
inc
xchg
mov
jp
push
fildl
cmpsb
add
pop
or
add
mov
inc
mov
xor
push
add
int3
stc
in
scas
add
repnz
or
and
add
lods
add
sbb
xchg
add
cmp
push
add
call
add
cmp
mov
add
dec
icebp
jb
add
ja
jmp
push
ljmp
ds
mov
push
mov
add
sub
add
stos
inc
xchg
xor
lods
adc
pushf
loope
loop
xchg
ljmp
jae
pushf
rcll
iret
push
outsl
sar
testl
mov
add
adc
ficomps
out
pop
or
add
add
sbb
rol
sbb
dec
add
or
mov
mov
gs
xor
rorb
loope
add
adc
in
push
add
mov
or
icebp
pop
sti
and
in
xlat
cmpsb
add
ljmp
add
sbb
push
cli
add
add
mov
add
add
add
pop
jns
dec
rcr
test
cmp
aas
fcoml
fisubs
jg
dec
xchg
pop
jns
loop
ret
push
addl
add
in
add
add
outsl
and
inc
jno
jb
push
das
jl
add
test
mov
inc
ficoml
add
push
popa
cmp
add
mov
rcpps
stos
or
pop
and
add
add
movsl
sub
add
out
and
add
push
add
add
addb
cltd
pop
lods
add
add
jecxz
dec
pop
insb
lds
mov
leave
ficoml
mov
sub
add
jmp
adc
mov
cli
mov
inc
pop
pop
in
fistl
lea
daa
sub
add
xlat
aam
in
cwtl
lret
nop
fucom
xlat
addb
stc
adc
mov
in
xchg
add
mov
daa
mov
add
loope
add
dec
pop
ja
push
adc
dec
shrb
add
xor
lods
xchg
push
iret
sub
ret
add
outsl
cmpsb
add
out
mov
jl
cwtl
xchg
mov
cmp
xor
mov
xor
add
or
add
xchg
aaa
xchg
loop
cmp
add
jns
rorb
add
lock
add
inc
ljmp
add
lock
add
and
add
pop
dec
incl
enter
xlat
int3
fisubl
xchg
les
ljmp
xchg
aam
insb
cmp
dec
imul
xor
mov
in
mov
add
mov
pop
insb
mov
mov
rclb
ret
add
add
mov
pop
nop
movsb
add
mov
add
and
xor
in
int
and
cmp
in
fwait
mov
add
icebp
sub
add
add
cmp
add
lock
add
imul
mov
push
adc
int
loope
pop
clc
xor
jnp
lock
out
std
hlt
aaa
pop
adc
push
cmp
or
add
movsb
add
sbb
ljmp
icebp
clc
adc
push
add
enter
mov
add
ja
adc
add
arpl
mov
aad
daa
adc
push
addb
dec
push
clc
addb
andl
addb
leave
push
add
cli
lods
add
jg
dec
push
repnz
add
dec
out
cmp
add
iret
mov
jge
stos
add
ficoml
clc
xchg
jg
mov
imul
gs
and
add
test
add
sub
jno
decb
and
add
and
cmc
je
mov
sub
add
add
add
add
inc
lods
add
adc
add
jmp
mov
add
cli
ljmp
rclb
and
add
add
pop
cmpl
stc
outsb
jmp
pop
addb
sub
add
adc
xchg
sbb
and
add
add
cmp
and
add
sbb
add
insl
ljmp
add
nop
rclb
icebp
cmp
push
add
add
add
movsb
add
notb
fsubl
fs
lret
add
stc
adc
jns
and
add
add
repz
mov
add
push
call
insl
test
add
xchg
sub
mov
add
jno
xchg
push
mov
jae
add
rcll
mov
sbb
jg
movsb
add
add
xchg
sub
popl
push
jge
std
lcall
out
xchg
aaa
mov
dec
flds
addb
lds
pop
loope
cmp
jle
fsts
idivl
iret
sti
push
sub
add
pusha
fwait
jb
mov
and
pusha
in
cmp
mov
call
int3
test
push
int
insl
bnd
mov
iret
pop
and
add
jne
add
pop
sahf
lock
addb
inc
pop
cmpsl
mov
mov
mov
add
imul
sub
add
test
addb
lret
mov
add
add
add
shlb
xor
add
dec
jp
test
add
cmp
add
mov
jmp
fsubr
mov
add
and
add
pop
sbb
add
cmp
enter
xchg
pop
ret
out
andl
add
add
fbld
jecxz
fcomps
adc
add
js
iret
adc
add
or
add
inc
mov
jo
or
add
jno
add
insb
xchg
fcoms
test
in
add
jg
hlt
cmp
mov
fldenv
xchg
bound
add
push
or
push
dec
test
call
dec
push
add
mov
add
push
push
push
mov
add
add
add
lcall
stos
sbb
add
jae
push
sub
add
pop
lahf
add
cmpsl
or
add
inc
inc
add
add
jae
in
mov
add
jmp
out
mov
add
pop
cmp
add
lahf
jns
test
add
and
pop
mov
add
or
add
icebp
int3
inc
popa
mov
add
add
mov
ficoml
sub
add
jle
insb
mov
add
add
aaa
mov
fcoml
xchg
add
notb
imul
add
push
add
xchg
fdivl
fcmovbe
and
pushf
aaa
pop
xor
push
movsl
iret
loop
and
fidivrs
test
ror
jle
inc
fildl
xchg
fstp
bound
add
addr16
add
stos
add
xchg
xchg
nop
or
add
je
lods
add
or
das
mov
mov
xor
add
imul
out
je
add
lret
addb
mov
xchg
in
adc
add
dec
push
mov
jmp
rcr
mov
pop
adc
and
add
enter
pop
or
add
aas
fistpll
pop
fwait
inc
xor
add
dec
or
add
add
mov
add
dec
xchg
add
mov
mov
add
mov
or
add
add
jp
dec
std
int3
inc
add
int3
dec
cltd
mov
and
add
lret
or
add
or
add
sub
add
aas
jb
movsb
add
dec
arpl
sbb
cmpsb
add
or
add
and
sahf
mov
add
add
imul
mov
pop
movsl
cmp
leave
mov
rep
add
and
add
add
imul
cli
movsb
add
outsl
aam
push
and
loope
lret
inc
xchg
add
aas
js
dec
out
notb
push
rcrl
add
dec
lods
loope
movsb
add
test
add
push
addb
add
insb
rolb
mov
adc
xor
cmpsl
aas
lret
aas
sub
add
add
push
push
out
mov
add
push
in
sarl
push
lcall
xor
inc
bswap
mov
cltd
sbb
sahf
mov
mov
inc
pop
test
add
outsb
cld
fcoms
add
xchg
mov
add
inc
fsts
repnz
loop
cmpsb
add
js
add
ljmp
add
mov
mov
add
xor
cmpsl
add
std
std
into
pop
jns
je
sti
mov
lods
add
xor
insb
ret
cltd
sbb
test
cmpsb
add
test
addb
mov
add
test
outsl
sarl
rclb
negl
adc
jnp
add
icebp
inc
loopne
popl
add
ljmp
add
xchg
add
and
add
fcmovnb
addb
out
cmp
cmp
add
jmp
cli
dec
pop
jo
push
push
jnp
mov
add
loope
cmpsb
add
shlb
and
lds
mov
aaa
xlat
inc
pusha
and
add
idivl
jbe
and
add
cmp
int3
dec
inc
and
add
incl
addb
add
bnd
mov
jecxz
lahf
ret
imul
pusha
mov
add
push
cld
pop
sub
push
add
sahf
rcrb
push
xor
push
imul
enter
ja
ds
mov
test
add
jbe
sub
mov
xchg
add
lahf
js
cli
mov
or
xchg
popa
xor
cwtl
jo
add
inc
add
cmp
add
push
cwtl
cmp
xor
test
sub
add
sbb
xor
add
add
add
mov
rcrl
outsl
adc
mov
cmp
mov
jne
add
pusha
jecxz
push
cld
push
and
test
add
push
int3
aaa
xor
int
adc
add
test
inc
inc
add
fscale
push
mov
add
dec
rclb
inc
add
add
add
push
pop
mov
enter
add
aad
mov
imul
cmp
sbb
add
add
pop
aad
add
jae
add
pop
loopne
xacquire
add
imul
add
pop
mov
add
add
lcall
push
add
mov
sub
and
add
jge
arpl
loopne
jg
pop
xchg
push
dec
sbb
dec
sbb
in
mov
loopne
scas
add
and
add
cmpsb
add
jo
add
cmp
mov
add
lds
aaa
sbb
lahf
inc
pop
fstpl
out
add
stos
add
inc
rol
das
scas
aas
sbb
rolb
lds
mov
push
out
test
sti
loope
imul
fs
fdivl
jns
mov
sbb
mov
loop
dec
shlb
fists
push
mov
sub
xchg
pop
int
mov
xchg
mov
in
aad
or
add
pop
mov
add
in
add
lods
add
mov
daa
jg
aas
xorl
stc
lods
aas
adc
test
cmp
cltd
in
je
mov
outsb
out
add
test
add
mov
pop
insb
jge
insb
insb
call
push
mov
xchg
add
add
sbb
adc
add
mov
add
or
mov
cld
mov
mov
mov
shrl
add
add
add
and
add
cli
adc
mov
adc
xchg
inc
mov
mov
pop
sbb
mov
adc
stos
sbb
in
aad
push
mov
xor
sub
add
in
outsb
shlb
adc
adc
shlb
cld
loop
add
or
add
mov
stos
push
je
int3
adc
sub
add
xor
mov
sub
lret
add
cmp
xchg
jb
clc
lods
mov
add
repz
cmp
add
push
cmp
pop
fcoml
add
adc
imul
mov
add
rcrl
mov
mov
add
xchg
cmp
pop
icebp
loope
cmpl
ret
fisubs
add
cmp
cld
mov
fimuls
add
lods
add
xor
mov
add
fistpll
cmpsl
lds
adc
xorl
jmp
aaa
jp
sub
adc
or
add
into
inc
adc
mov
add
pop
push
sbb
add
add
popa
cli
in
add
repz
xchg
push
pop
cmp
jg
xor
fldt
jmp
iret
je
pop
das
sub
sbb
out
or
add
add
cmp
ja
clc
cwtl
mov
add
cmp
add
sti
add
shll
xchg
out
icebp
dec
mov
add
loop
mov
add
outsl
inc
push
push
sub
and
clc
dec
xor
mov
add
lcall
xchg
xor
add
push
inc
inc
xor
add
and
test
add
cmpsb
add
dec
push
push
loope
in
pop
hlt
pop
cld
push
into
pop
roll
sub
add
ds
cmp
add
ljmp
scas
jge
clc
cmp
add
jg
inc
mov
ja
cmpsb
add
sar
pop
pushf
mov
roll
fnstsw
popf
sbb
add
ljmp
mov
add
sub
loopne
adc
in
cld
mov
add
mov
add
test
add
add
mov
add
cmp
fsubrs
add
inc
push
or
cmp
fcompl
fisttps
add
sbb
add
sbb
inc
and
add
mull
sbb
adc
mov
pop
imul
pushf
adc
inc
pop
or
pop
jb
daa
mov
fimull
add
mov
add
adc
into
mov
add
hlt
adc
les
enter
jbe
xor
add
sbb
add
mov
pop
jmp
and
add
int
push
pop
jle
pop
xor
xchg
or
add
mov
add
std
jp
das
ds
les
push
and
add
ret
xor
jmp
mov
lods
add
mov
add
push
adc
inc
int3
sub
add
stos
add
sti
pop
ljmp
jbe
add
xchg
add
out
push
pushf
and
lods
add
test
pop
xlat
and
sub
add
mov
push
cmp
xchg
push
add
addb
push
neg
pop
fsubr
pop
inc
pop
mov
add
and
ret
ds
mov
add
sub
mov
lret
push
xor
xlat
or
xor
hlt
filds
add
fwait
inc
dec
inc
or
add
lahf
jg
add
fcoml
in
mov
add
xor
mov
mull
mov
mov
mov
pop
or
jmp
addl
call
add
pop
sub
add
sbb
push
add
icebp
mov
arpl
add
incl
add
int
xchg
js
lret
cmc
xor
shrl
add
add
dec
mov
add
add
shl
push
push
push
inc
shlb
or
add
add
cmp
mov
add
bound
adc
sub
push
pop
add
and
cli
data16
add
je
add
nop
jb
in
fwait
lahf
cmp
mov
call
lea
repnz
pop
bound
cwtl
pop
xchg
dec
rol
mov
in
mov
sahf
in
lock
lods
add
bound
pop
pop
loope
cmp
jge
les
dec
add
sbb
inc
xchg
mov
add
out
inc
push
repnz
jnp
adc
cmpsb
add
cmp
pop
cmpl
add
adc
inc
push
adc
add
icebp
data16
insb
dec
mov
ljmp
fisubl
add
ljmp
imul
mov
add
rorl
add
mov
test
add
push
mov
dec
mov
or
dec
jp
scas
adc
mov
sti
insl
jb
jns
lock
faddl
mov
jbe
jecxz
shrl
add
mov
mov
add
outsl
mov
add
add
ret
insb
shlb
add
push
mov
add
arpl
or
xlat
jne
add
pushf
inc
lds
fadds
aam
pop
jne
sbb
mov
int3
popf
or
add
xor
orl
stos
mov
cli
pop
in
out
daa
shr
pop
sarb
int
push
jo
movsl
fstl
add
data16
shr
rorb
add
jp
jne
stc
movsl
mov
add
or
add
add
inc
lahf
mov
add
fwait
inc
movsl
xchg
inc
insl
fcoms
test
add
add
add
add
and
rcll
and
add
add
sahf
mov
out
outsb
mov
out
mov
cmpsl
gs
enter
adc
add
sti
mov
addb
jns
rorl
push
movsl
dec
jl
rcll
add
add
pop
ror
popf
int3
pop
in
mov
and
xchg
mov
lods
inc
aam
pop
repnz
xchg
hlt
test
add
add
xchg
push
out
or
add
add
shll
add
dec
xor
mov
mov
pop
adc
xchg
pop
mov
icebp
lahf
out
adc
add
out
push
add
lods
add
push
in
loopne
in
and
icebp
sbb
add
or
add
mov
add
xor
sub
add
sbb
jbe
jb
dec
clc
repnz
and
addb
fwait
xchg
or
push
xchg
xchg
repz
sub
add
jbe
xor
lret
or
jge
in
in
std
xchg
push
fsubrs
add
and
add
mov
add
dec
sbb
cwtl
daa
aam
test
add
or
add
add
add
or
xchg
insl
mov
add
and
xchg
sbb
jno
mov
inc
add
pop
xchg
push
pop
sahf
mov
push
pop
ds
and
add
add
shrl
jnp
jmp
enter
push
and
add
or
into
daa
or
add
test
mov
xor
aam
lds
add
sub
add
rcrl
iret
xor
pop
add
add
hlt
pop
mov
mov
add
pusha
jmp
add
lea
push
push
xor
cmp
push
sub
add
testb
and
add
mov
add
lret
ret
sub
add
jle
inc
or
les
clc
pop
sbb
test
mov
adc
or
add
add
test
add
cltd
addb
aad
test
push
mov
lods
add
push
push
mov
add
cltd
inc
add
cwtl
xor
add
mov
push
add
mov
add
jecxz
jmp
add
and
add
and
or
jmp
mov
data16
add
int
add
push
add
add
add
mov
add
scas
clc
daa
inc
mov
xor
mov
add
push
test
add
fadds
jbe
adc
mov
jg
pop
dec
repz
inc
and
dec
testl
add
dec
dec
sbb
push
mov
cmp
add
add
adc
cmp
std
fdivp
inc
mov
push
add
mov
dec
mov
add
aad
fmul
push
shlb
loop
sbb
cmp
aad
leave
mov
add
arpl
push
add
addb
and
add
xchg
add
xchg
add
xchg
add
jge
aam
nop
rolb
ret
nop
xor
mov
sub
add
roll
add
dec
push
add
add
add
add
mov
add
add
clc
les
fcoml
jmp
jo
push
mov
stos
jl
cwtl
cmc
mov
push
loopne
sbb
stos
sbb
jno
adc
ss
xor
add
xor
pushf
loopne
inc
shlb
mov
pop
mov
jae
mov
add
add
xchg
xchg
inc
mov
dec
nop
jmp
jns
mov
and
add
ds
jae
mov
add
out
mov
in
and
add
xor
add
inc
movsl
add
add
add
pusha
mov
enter
leave
je
add
pop
jmp
out
xchg
or
lcall
pop
mov
filds
inc
cmp
sub
add
repz
add
pop
xchg
cmpsl
xor
repnz
xor
push
fnsave
mov
add
or
add
add
dec
rcll
adc
lock
ds
add
xchg
dec
decb
add
roll
pop
enter
in
addb
inc
repz
mov
add
xchg
ljmp
add
inc
mov
aam
scas
ja
aad
and
add
cwtl
hlt
mov
add
adc
add
pushf
adc
xchg
enter
jmp
dec
fdivl
dec
iret
and
add
test
or
add
outsl
shll
add
xchg
orl
add
cmp
add
in
xor
add
or
jae
add
jle
icebp
mov
add
call
pop
xchg
add
cmp
fldl2t
shll
add
lods
add
arpl
jnp
jmp
jg
add
iret
stos
add
add
inc
add
add
sbb
in
int3
mov
add
mov
repz
cmpsl
cmpsl
sub
add
sti
xchg
pop
jns
add
mov
xor
push
jb
dec
xor
mov
addr16
inc
dec
add
add
pop
mull
add
sbb
sarb
filds
push
inc
pop
or
add
pop
popa
push
and
mov
add
add
jecxz
cld
mov
xchg
test
into
loop
add
stos
repz
xor
fsubs
aam
xchg
lahf
outsl
stc
bound
pop
jns
scas
add
mulb
add
mov
pusha
add
add
cmc
scas
add
sahf
shrb
add
jno
sbb
push
add
movsl
push
xchg
inc
gs
add
test
add
dec
adc
add
lcall
add
enter
mov
add
mov
mov
enter
cmp
scas
adc
int3
mov
add
xchg
add
mov
mov
movsl
clc
test
add
cld
call
movsb
add
mov
add
jg
add
add
add
enter
mov
add
pop
xor
cld
sub
mov
cld
js
loope
pop
sbb
daa
cmp
jecxz
mov
add
cwtl
negl
push
xor
lcall
sub
test
push
add
and
add
sbb
pop
mov
jmp
xor
pop
push
mov
stos
add
std
adc
pop
ja
xor
dec
add
and
addb
sahf
mov
add
add
dec
jmp
imul
add
add
pop
adc
out
popf
mov
fs
ds
pop
int
ret
inc
sbb
int3
dec
or
adc
mov
rcrl
stc
std
mov
hlt
dec
addb
out
sar
pop
sahf
repz
add
jo
ret
push
cmp
add
ljmp
add
out
loopne
xchg
cld
repnz
mov
leave
pop
ljmp
add
add
hlt
rcrl
mov
lahf
addb
rolb
loop
jp
fildll
or
add
add
add
mov
push
add
jp
add
jno
mov
push
ds
or
add
and
add
leave
popa
aad
in
or
add
add
jg
out
ljmp
imul
fisubl
pcmpgtb
inc
add
add
add
sub
add
cmp
cmp
out
dec
out
hlt
mov
push
add
add
fs
add
add
jae
add
cwtl
pop
mov
xor
scas
jle
cmc
into
inc
mov
add
pop
xchg
lds
adc
xchg
inc
add
xor
das
add
mov
jb
pop
cmc
lds
loopne
leave
lret
mov
add
lea
add
jmp
adc
cmovbe
jno
xchg
clc
mov
xchg
mov
inc
decb
push
add
addb
clc
jg
dec
out
mov
add
add
add
test
lds
add
jle
xchg
push
gs
xchg
inc
les
add
mov
add
ljmp
push
or
xor
out
in
xor
add
scas
add
push
mov
scas
add
jecxz
clc
and
add
sbb
add
roll
jg
dec
add
or
jae
inc
into
dec
arpl
push
xor
xchg
add
jg
add
xor
sub
pop
cmc
fyl2x
int3
sub
add
add
repz
ds
mov
mov
add
movsl
sub
add
add
test
add
xor
mov
add
xor
sub
add
mov
jo
inc
das
jp
bound
fmul
cmpsb
add
test
add
int
scas
aas
loopne
popa
scas
add
add
xchg
hlt
test
ljmp
add
popa
push
aas
inc
lcall
out
fidivs
sub
adc
scas
sahf
out
daa
push
cmc
push
bound
aas
adc
sub
add
jecxz
je
add
sub
add
cltd
mov
add
cwtl
mov
xchg
adc
add
pop
push
xor
sub
add
mov
add
add
movsb
add
bound
cmpsb
add
enter
rcrl
test
add
outsl
movb
fistl
push
insl
jnp
daa
sahf
cmc
stc
mov
add
sub
add
jo
xchg
add
xchg
add
fcomps
add
adc
add
jmp
add
add
out
mov
add
cmp
jb
addr16
lea
add
lds
sub
sbb
add
in
xor
dec
jb
xlat
movsb
add
mov
mov
add
cli
adc
pop
out
rcl
addb
mov
mov
dec
movsb
add
adc
add
jb
adc
mov
dec
cmp
add
add
sbb
out
cltd
js
and
add
pop
ds
enter
add
adc
add
in
xor
inc
sbb
dec
cld
pusha
xchg
cmp
data16
jmp
add
mov
sub
add
gs
xor
ja
std
imul
shr
insl
jb
and
add
roll
add
add
cmp
outsb
lods
pop
testb
imul
add
lea
pushf
or
add
push
movsl
lock
add
add
jle
push
add
movsl
rorl
add
or
add
and
shll
add
popf
dec
pop
cmp
out
leave
das
test
out
push
or
add
xchg
jmp
pusha
jle
cmp
nop
and
add
loop
xor
add
gs
int3
inc
leave
cmp
add
push
lods
jp
jecxz
repz
add
add
xlat
cmp
cwtl
push
dec
leave
add
mov
aaa
and
outsb
test
push
adc
sbb
add
test
fs
scas
fsubrp
cmpl
dec
mov
add
cmp
stos
das
add
outsl
xor
add
fcmovnbe
adc
fidivrl
adc
cld
pop
add
add
add
mov
cmpsl
pop
insb
repz
stos
add
imul
add
dec
lret
mov
cmpsl
jo
add
lret
mov
add
mov
add
dec
push
mov
pop
jl
inc
jo
sahf
mov
dec
cmp
cld
outsl
arpl
push
shlb
pop
fdivr
inc
dec
cli
fsubrl
or
add
hlt
stc
and
movsb
add
add
dec
sub
add
lock
lahf
jge
cwtl
add
add
testb
dec
and
add
push
add
repnz
mov
dec
div
mov
add
mov
add
push
mov
add
popa
into
stos
add
mov
xor
popa
out
sti
inc
add
testb
add
idiv
jnp
pop
sbb
mov
movb
in
idivl
fsubl
add
mov
add
pop
repz
jns
add
or
shll
nop
jo
pop
lcall
inc
pop
addb
adc
xchg
cwtl
sub
mov
mov
and
cmc
fisttps
dec
sub
add
icebp
fwait
andl
fsts
mov
inc
loop
mov
leave
ffree
ret
lret
add
push
or
cltd
mov
mov
jnp
loope
test
mov
and
fidivrs
repz
mov
lods
xchg
inc
push
ss
or
das
mov
add
sahf
in
aaa
xchg
aam
shrb
xchg
sub
add
jl
testb
add
loope
add
shlb
or
mov
fdivs
lret
mov
and
and
aam
mov
aaa
sub
add
fsubs
add
add
add
pop
jg
add
in
mov
pop
mov
int3
js
pop
ds
inc
hlt
shl
add
add
jmp
add
call
add
add
leave
add
insl
test
sahf
mov
add
clc
lret
inc
mov
pop
cmp
add
jecxz
add
pop
xchg
push
add
sub
add
cmp
mov
dec
ljmp
shlb
aaa
push
add
scas
add
sbb
arpl
pop
or
add
add
loope
enter
cltd
push
fwait
test
add
add
aad
int3
cmpsb
add
inc
test
add
addb
cmp
jl
jae
add
cmc
add
xor
push
stc
push
lcall
add
adc
ret
out
lret
push
inc
sub
add
mul
lock
jbe
add
dec
mov
sbb
sub
mov
lret
jno
loop
mov
les
add
stc
icebp
xrelease
add
pop
mov
add
rcr
cmp
xlat
cmp
sub
add
arpl
arpl
dec
mov
mov
add
pop
or
add
mov
mov
lcall
aam
xchg
add
lahf
sbb
je
add
pop
pop
shrb
flds
fnsave
jno
andl
cmc
dec
scas
xchg
bound
push
call
jg
push
loope
mov
add
outsb
mov
add
jecxz
arpl
xor
jns
ffreep
add
in
lods
mov
adc
ret
fiaddl
add
jno
fisttpl
pushf
loope
mov
add
dec
pop
int3
pushf
or
add
jne
xchg
sub
add
add
sub
insl
mov
cmp
add
mov
add
add
xchg
push
sub
addb
leave
mov
add
add
push
mov
add
sahf
push
mov
sub
add
push
popa
or
add
outsl
nop
clc
imul
adc
add
test
add
sar
int
call
mov
pop
movsb
add
push
gs
aam
sbb
add
stc
movsb
add
loopne
add
daa
ret
cli
cli
aam
or
add
pop
push
aas
pop
ret
adc
lret
or
addb
jp
inc
cmp
imul
loop
popl
add
out
push
enter
add
dec
push
add
dec
jns
or
out
sub
add
addb
jnp
inc
jbe
cltd
push
adc
popa
push
mov
add
push
imul
and
fcomps
pop
inc
xchg
add
xchg
dec
stos
add
adc
adc
cli
xchg
jp
lods
add
cwtl
movsl
sub
sbb
pusha
out
add
mov
adc
std
lea
fdivr
js
ja
imul
fiadds
add
mov
add
add
iret
adc
sbb
push
add
rcll
xor
fcomi
xor
lods
dec
xor
push
popa
jo
add
mov
add
sub
add
sarl
add
inc
and
mov
add
iret
xchg
jns
xchg
sub
add
xor
ret
lods
xchg
xchg
add
mov
inc
xor
sub
add
lds
loop
add
mov
mov
add
add
std
jne
jbe
test
sub
add
push
or
add
cmp
lahf
cmp
lock
or
add
sahf
frstor
vmread
add
dec
add
fimull
add
pop
cmp
das
adc
xchg
xchg
jmp
or
mov
pop
sub
add
pop
mov
add
pop
popf
mov
adc
fsubl
add
popf
jge
ja
sub
add
addr16
sbb
fiaddl
add
scas
add
mov
mov
fisubl
xchg
sahf
cwtl
adcl
xchg
xlat
xor
add
nop
lret
test
stc
push
inc
sti
lret
shl
mov
jge
ljmp
js
dec
fstpt
dec
pop
and
mov
add
fadds
rcll
cmp
mov
adc
mov
add
add
xor
bound
movsl
pmulhuw
sub
add
add
xor
add
enter
adc
add
sub
add
rcll
repz
in
inc
and
add
movsl
dec
repz
iret
or
add
cld
outsb
sub
inc
mov
sub
shr
imul
sbb
pop
jle
and
add
int3
xchg
lock
add
xchg
push
ret
lods
mov
add
push
add
jne
push
ds
imul
add
add
or
loop
push
cmp
gs
out
int
lods
xchg
add
aad
mov
add
lods
push
pop
call
add
add
dec
and
adc
fistpll
jge
or
call
add
mov
jmp
mov
add
loop
push
rol
mov
movsb
add
fdivl
mov
test
add
fwait
lret
pop
in
add
popf
cwtl
cmpsb
add
cmpsb
add
ret
test
add
add
add
aam
cmpl
add
mov
scas
add
mov
add
sub
add
mov
add
mov
shlb
shlb
xchg
sub
add
loopne
incl
mov
push
scas
add
ja
push
push
pop
repz
fiadds
and
add
mov
daa
cmp
popa
jle
leave
mov
and
add
je
mov
dec
sub
sbb
fcmovu
mov
mov
cmpsl
andl
inc
mov
add
movsb
add
and
add
stos
add
in
test
mov
add
iret
daa
xor
add
adc
add
cmp
clc
js
pop
cmp
aaa
pop
test
add
push
add
and
inc
adc
lods
dec
mov
push
pushf
dec
ss
add
and
mov
add
jmp
jmp
lcall
out
clc
or
add
or
and
add
jae
and
add
sub
add
filds
adc
mov
add
cmp
add
mov
add
enter
add
mov
loope
add
xor
imul
mov
add
add
lods
mov
ja
add
fwait
insb
fidivrl
or
add
pop
cmp
inc
flds
aam
popf
add
add
lds
add
imul
or
add
out
adc
add
pop
out
call
movb
add
xchg
lret
incb
dec
insl
mov
add
or
pop
clc
jp
push
push
dec
testl
xor
imul
adc
sub
cmpsb
add
adc
cmp
dec
imul
or
mov
ret
outsb
test
or
cltd
lret
add
or
pushf
outsb
pushf
fnstenv
jl
sbb
lock
sar
add
ja
adc
cmp
fsubr
ret
adc
shlb
lahf
jp
mov
mov
add
shll
dec
ret
jo
outsl
mov
lea
ret
scas
xor
ret
sbb
add
xor
pause
orl
add
add
shrb
insl
xchg
lds
loopne
daa
jno
inc
xchg
and
add
aaa
fs
test
mov
add
jbe
pop
out
add
fadd
test
cmp
push
shl
mov
leave
test
add
add
adc
jmp
sbb
arpl
dec
fstl
test
add
jl
cltd
int3
leave
pop
mov
subl
push
or
or
add
jbe
aas
xor
add
mov
xor
sub
scas
add
ret
xor
push
add
test
add
push
inc
mov
dec
sub
mov
addb
jg
add
mov
push
popf
outsb
xchg
test
add
pop
jb
add
lds
sbb
xchg
fcmovu
cmp
sbb
stc
add
add
pop
outsb
outsl
jecxz
ds
xchg
jge
test
add
inc
cltd
lds
inc
in
jmp
scas
lock
daa
pop
push
in
cmp
cltd
shlb
push
ret
push
xchg
add
insl
inc
fdivl
or
pop
enter
insl
xor
add
sbb
leave
pop
unpcklps
mov
fildll
add
jle
add
pop
xlat
scas
mov
cmpsl
dec
fwait
mov
dec
mov
jle
mov
add
cmp
cvtdq2ps
iret
repnz
add
testl
xchg
push
pop
or
add
stc
xor
mov
push
mov
mov
push
pop
lcall
mov
add
test
decb
xor
test
add
cmp
ds
pop
dec
ror
xchg
and
add
or
add
aas
fldcw
je
stc
push
mov
stos
ret
cmp
push
add
add
js
outsl
ss
and
add
outsl
lret
mov
add
xor
scas
adc
add
xchg
sub
add
nop
into
ds
jmp
ljmp
lcall
adcl
loope
add
aam
test
add
out
call
dec
sar
icebp
inc
pushf
mov
mov
dec
cmp
add
sub
push
movsl
movsl
add
xchg
jl
fsub
and
pop
faddl
sti
test
mov
imul
add
les
xor
insb
pop
test
add
incl
fidivs
fnstenv
adc
add
sub
add
ror
out
adc
sbb
sub
add
dec
add
mov
mov
aas
xor
outsb
js
add
imul
incl
add
sbb
les
ja
mov
add
test
cmp
xchg
add
stos
add
lods
add
jae
add
test
add
add
xchg
xchg
xchg
add
ljmp
sub
push
xor
sbb
push
sub
cmp
leave
add
add
jmp
sub
sarl
mov
mov
pop
xor
jno
xchg
mov
das
xor
adc
lret
fbld
jae
sbb
fildll
add
clc
push
outsl
fisubrs
mov
add
jnp
sub
xor
ss
fldz
addb
aad
add
movq
lods
add
pop
or
add
add
adc
add
add
and
add
dec
sti
jb
test
add
add
lea
jns
jb
or
add
mov
mov
xor
ret
imul
add
mov
add
and
or
add
int3
stc
jns
inc
in
addb
popf
mov
sub
je
rorb
add
imul
add
jge
jmp
add
and
add
jmp
pop
xchg
addb
push
lock
or
sbb
add
sbb
add
jge
add
hlt
push
add
fldenv
jp
clc
xchg
aad
xlat
cltd
and
and
add
roll
add
test
add
add
cmp
neg
popa
xchg
dec
into
imul
pop
xchg
jp
push
cmp
add
mov
btr
gs
mov
push
xchg
add
test
add
cmp
dec
mov
add
sub
cmp
stc
in
addb
int
lcall
mov
xchg
add
shrl
add
xchg
and
inc
lea
mov
add
add
dec
mov
or
add
shll
add
adc
arpl
inc
in
insl
scas
add
sbb
add
lahf
int
pop
lahf
jno
add
sbb
fidivrs
and
add
jecxz
add
pop
jo
daa
out
pop
add
lods
add
gs
and
add
jmp
sub
add
pop
stos
add
adc
stc
cmp
cmp
test
add
xchg
add
pop
enter
push
fidivrs
add
aad
mov
pop
out
xchg
rcl
add
add
loope
add
hlt
pop
ljmp
pop
frstor
add
or
mov
dec
mov
add
add
pop
push
add
popa
mov
add
add
cpuid
add
mov
add
ljmp
ss
add
cmp
sbb
mov
or
add
enter
fwait
jbe
add
repz
mov
lea
add
in
or
add
xchg
and
dec
scas
add
popa
jg
add
add
fdiv
jnp
imul
in
call
add
imulb
nop
sub
add
aam
aam
aam
add
cmp
push
test
add
aaa
sbb
cli
xor
add
imul
jno
mov
xchg
add
add
cmc
hlt
mov
test
lcall
outsl
outsl
idivl
inc
aaa
jmp
sub
scas
popf
sub
test
add
insb
popa
lret
in
mov
or
add
inc
outsl
mull
add
jae
icebp
cmp
mov
inc
and
add
mov
mov
add
stos
add
dec
notb
je
je
ret
int3
rolb
add
push
insl
mov
add
repz
dec
nop
adc
xlat
xor
mov
lods
add
hlt
mov
add
in
mov
add
xchg
add
add
aas
testb
add
jns
mov
stos
clc
mov
mov
lahf
or
add
neg
cmp
add
insl
std
push
sbb
add
pop
sub
add
add
cli
test
add
add
lods
add
fisttpll
add
xchg
out
test
xor
pop
add
add
lock
scas
mov
add
push
xchg
stos
pushf
add
jns
aaa
cltd
sbb
pop
and
add
stos
add
loope
adc
push
sahf
jle
addb
mov
add
add
cwtl
mov
fmuls
lea
popaw
sbb
cmp
add
sub
add
orl
addb
cmpsb
add
inc
push
add
jg
add
add
test
leave
les
add
aad
hlt
je
add
add
and
add
add
mov
pop
mov
add
leave
das
xor
and
add
mov
sub
shll
or
pop
int
inc
xchg
sub
add
inc
mov
pusha
jbe
test
cli
lcall
outsl
test
add
mov
add
adc
inc
mov
add
dec
add
add
sbb
out
push
iret
stos
adc
sub
add
mov
mov
mov
add
repnz
mov
outsl
je
mov
test
add
push
cmc
in
fstpt
xchg
filds
mov
dec
mov
add
push
xchg
enter
inc
aam
fs
pop
rcll
or
add
shll
scas
je
gs
cmp
aaa
dec
sub
out
inc
in
xor
dec
outsb
mov
dec
mov
jmp
ds
jle
rorl
add
add
mov
cmc
stc
push
mov
push
fiadds
mov
add
cmp
jmp
adc
xor
jb
mov
gs
cwtl
repnz
movb
add
add
shlb
arpl
xchg
out
inc
mov
add
mov
negb
add
fsts
mov
add
mov
out
push
movsl
inc
push
jp
in
out
sub
add
loopne
loop
add
loope
and
add
add
les
pop
in
shlb
aad
add
inc
jbe
int3
mov
add
add
push
sub
rclb
mov
mov
add
add
hlt
pop
ja
mov
sub
fisubs
add
sub
out
push
addb
xor
sub
dec
mov
push
add
int3
push
add
add
imul
mov
decl
add
push
loopne
adc
jb
pmaxub
xor
add
mov
add
sbb
lcall
add
add
jno
je
add
inc
pop
jg
pop
jl
cli
lret
fdiv
mov
or
push
xor
jmp
add
inc
inc
mov
add
and
add
cmp
int3
add
std
cli
and
or
add
adc
lahf
in
enter
jno
lds
clc
popa
lods
add
loope
popf
dec
add
mov
and
xchg
hlt
popa
push
fstpt
jecxz
jmp
add
lahf
cltd
pop
adc
in
push
mov
push
mov
outsl
in
inc
jo
fsubp
dec
pop
scas
add
cmp
push
bound
imul
push
dec
or
add
add
sub
add
fs
mov
sbb
ljmp
xchg
adc
add
rcrb
add
faddp
jg
jno
daa
pop
adc
xchg
cmpsl
push
mov
in
ret
xor
add
sarl
add
int
xchg
dec
pushf
pop
lret
les
cltd
sub
jp
in
add
lods
jg
jae
mov
jg
loop
jne
shll
and
add
xchg
sbb
dec
pop
mov
and
inc
dec
jmp
add
xchg
popf
mov
cmp
add
add
clc
lahf
mov
add
xor
mov
cld
stos
add
mov
mov
bswap
mov
sbb
add
nop
addr16
cmp
dec
mov
add
mov
mov
ds
cmp
dec
aam
push
lea
cltd
mov
add
mov
inc
fucomi
or
in
les
push
add
xor
lahf
shll
cmpsb
add
jge
cli
enter
rolb
add
and
inc
loop
lret
mov
add
inc
bound
fptan
xor
xchg
or
add
sub
loopne
mov
aad
xchg
addb
jns
inc
or
add
subps
push
push
outsl
nop
push
sarl
clc
cmp
into
rcll
fistps
sub
lea
mov
imul
cmp
test
add
stos
rcrb
add
pop
imul
dec
push
jecxz
pop
popf
inc
mov
je
add
push
add
or
add
add
add
add
inc
fxch
xchg
jbe
scas
mov
cmpl
clc
jb
sub
ss
jle
jmp
add
fisubrl
add
adc
iret
lea
neg
addb
mov
fstpl
ret
push
mov
add
add
pop
sub
xchg
scas
add
add
add
dec
leave
mov
out
jp
shll
call
add
mov
sbb
cmc
mov
pop
mov
divl
inc
xor
arpl
enter
pop
ds
inc
pop
cmpsb
add
mov
xchg
mov
sub
add
pop
sbb
jl
add
dec
or
add
and
add
sbb
push
xchg
add
sub
add
test
add
add
mov
add
add
add
add
sub
add
pop
cmp
movsb
add
shlb
add
xlat
nop
or
add
mov
inc
xlat
xchg
add
dec
popa
leave
mov
cmpl
adc
push
xchg
add
jae
iret
add
add
outsl
jb
jmp
movsb
add
clc
mov
add
xchg
pop
cld
inc
out
shr
divb
idiv
xchg
testb
movnti
pop
pop
daa
scas
push
add
popf
jecxz
mov
lods
add
clc
mov
je
popfw
fisubl
push
into
dec
jg
incl
sub
or
add
mov
add
notb
int
jmp
mov
add
iret
pop
xchg
clc
nop
mov
and
aam
mov
add
xlat
mov
adc
pop
xor
mov
push
mov
adc
add
jle
pop
addb
bound
add
dec
fdivrl
pop
cmp
add
rcrb
add
dec
sub
add
mov
add
add
xchg
add
sbb
daa
test
add
pop
xchg
add
jp
dec
mov
add
add
out
adc
dec
fisttps
push
dec
and
add
add
mov
add
scas
ljmp
cmp
add
mov
ret
flds
mov
add
and
add
adc
sub
add
xor
add
sbb
mov
mov
jle
add
in
xchg
mov
fldl
movl
movb
sbbl
add
mov
jl
pop
imul
stos
add
sahf
rolb
add
add
jae
lods
add
xchg
mov
add
mov
jae
aam
dec
addr16
inc
lret
add
mov
sar
jecxz
cld
push
add
adc
inc
and
add
mov
test
add
aaa
mov
add
dec
cmpsl
xchg
fsubp
push
add
dec
sub
lahf
sti
repz
add
jge
and
dec
inc
jnp
jbe
out
sbb
pop
adc
mov
nop
push
bound
gs
add
mov
push
not
and
outsb
push
add
bound
add
mov
ljmp
adc
mov
pop
xor
pop
fstl
adc
sar
in
ss
outsl
adc
xchg
sbb
add
dec
aad
add
add
sbb
ja
xor
add
push
add
jbe
push
add
sbbl
jg
push
js
bound
mov
test
add
push
sarl
add
ja
std
icebp
fisubs
loop
lcall
iret
out
rcll
jp
xor
add
sub
add
icebp
test
dec
lahf
xor
lahf
sub
movsb
add
push
add
pop
push
push
frstor
and
sbb
stos
dec
scas
add
mov
xchg
mov
retw
xchg
std
insl
jno
push
repnz
pop
pushf
jp
stos
mov
addb
mov
inc
cmovg
add
or
add
jl
dec
jp
ljmp
mov
add
jbe
add
faddl
pop
mov
push
movsb
add
cwtl
fmull
add
mov
add
jae
xlat
in
cltd
lcall
mov
cmp
add
and
add
lea
add
in
cwtl
hlt
pushf
add
ss
mov
add
sbb
jg
push
add
adc
shll
fdivrs
xchg
push
dec
mov
jle
shr
sti
xchg
pushf
push
and
add
std
jg
or
add
sbb
clc
sub
add
xor
adc
dec
fisttpll
mov
and
add
popa
addb
popf
dec
mov
add
addl
dec
stos
add
mov
inc
addb
lods
gs
dec
test
xor
xor
pop
stos
add
dec
loope
cmpsl
mov
add
mov
push
mov
fisttps
add
mov
xor
xor
add
add
add
jnp
pop
mov
imull
add
test
movsb
add
loope
lock
or
add
add
cmp
out
addb
add
add
fcomp
jbe
add
pop
loopne
jbe
jns
add
mov
loope
into
xor
mov
add
push
add
testl
dec
add
add
int3
adc
sahf
push
fcompl
mov
add
add
add
mov
outsb
repz
jne
add
js
mov
add
xlat
mov
xchg
test
scas
push
sub
add
enter
add
test
add
add
imul
or
addb
sahf
bnd
or
add
rorb
sbb
sbb
push
shrb
sbb
dec
insb
sbb
jo
shll
adc
js
add
dec
lret
push
mov
add
pop
pop
mov
add
add
add
mov
mov
lock
cmp
add
xchg
xchg
add
mov
add
call
dec
inc
out
and
cmp
cmp
add
aaa
sub
add
in
js
mov
call
and
add
ds
movsb
add
sub
add
mov
add
dec
hlt
jecxz
add
add
add
push
mov
inc
out
add
add
add
inc
mov
ds
jl
scas
mov
fidivrl
out
loopne
imul
ds
gs
jae
stos
add
lret
xor
mov
add
cli
divl
fdivrl
add
mov
movsl
adc
inc
adc
in
pop
fsubl
fs
mov
adc
pop
push
arpl
add
push
add
add
add
addr16
mov
inc
loop
adc
mov
add
jno
xor
aam
loop
insl
xlat
insb
or
add
fcmovnb
sub
cmc
mov
add
gs
add
les
aas
pop
jg
add
subl
popf
and
jecxz
pop
pop
adc
mov
add
add
scas
cmp
add
mov
sbb
or
add
xchg
push
mov
add
add
lds
lcall
pop
dec
inc
inc
or
lock
aaa
movsl
sbb
sbb
adc
and
add
fsub
or
not
je
shlb
mov
xor
push
outsl
jns
push
add
push
add
leave
push
xor
imul
add
add
or
add
xchg
add
insl
loope
aaa
sub
add
mov
idivl
lcall
dec
jp
js
in
xchg
ret
xor
outsl
mov
mov
xchg
mov
fisubrs
outsl
mov
push
or
add
cld
lds
add
cmp
fistpll
outsb
fcmove
mov
test
cwtl
stos
add
and
add
js
dec
add
or
cmp
add
jb
clc
lods
add
les
xlat
cmpsb
add
mov
mov
fildl
add
push
cwtl
icebp
pop
add
stc
mov
int3
push
inc
add
add
and
add
repnz
push
movsb
add
leave
sub
add
xchg
inc
cmp
mov
add
jp
push
insl
mov
hlt
out
inc
insb
cmp
add
add
movsl
imul
add
pusha
inc
sbb
das
stc
pushf
xor
pop
push
les
or
pop
jb
add
xor
js
add
add
add
jbe
add
jg
push
fcomps
lods
lea
leave
adc
mov
xor
ret
mov
popa
pop
sub
add
add
sahf
fistps
lods
pop
jbe
jns
add
and
add
sub
add
add
and
add
loop
adc
out
push
lret
inc
inc
xchg
lea
add
cmc
push
pushf
mov
cld
or
fidivs
adc
jns
add
or
add
xchg
stc
jle
jp
add
adc
pushf
xor
add
and
lcall
bound
add
add
popa
fmuls
jno
or
fcmovne
out
push
movsl
rorl
add
inc
ret
cwtl
xor
rcr
push
push
lret
std
nop
push
xchg
daa
push
js
and
icebp
xchg
mov
fidivs
call
mov
add
jmp
xchg
xchg
out
jle
out
add
xor
inc
mov
xchg
mov
shrb
lahf
rcrl
push
cmpsb
add
ret
cmp
test
add
add
pop
outsb
xlat
xchg
add
add
orl
mov
mov
add
test
pusha
push
sbb
mov
mov
lcall
add
or
add
push
lods
add
pop
sub
addr16
dec
cmpsl
iret
rorb
add
lret
adc
xchg
stos
sahf
lret
idivb
push
dec
test
add
jnp
sbb
inc
clc
xor
sub
jecxz
add
gs
dec
inc
leave
and
add
add
add
popa
sbb
enter
mov
add
jns
add
mov
bound
daa
jns
sbb
push
add
stos
add
dec
nop
ret
sub
add
push
mov
xor
roll
lea
cmc
sub
add
notl
mov
cmpsl
stc
xorl
jns
in
inc
dec
xchg
lds
fildl
add
inc
shr
cmpl
fildl
ds
cmp
mulb
add
roll
mov
add
add
xchg
sbb
inc
mov
std
push
and
add
jecxz
add
loopne
add
xchg
lods
add
pop
and
add
fistl
jp
add
add
pop
and
add
push
mov
jnp
add
outsl
les
add
or
add
sub
ljmp
sub
add
insl
inc
add
add
in
mov
lret
adc
xor
fisubs
add
add
sub
add
fucomip
fistl
sbb
jb
dec
push
pop
in
movsb
add
daa
fstl
test
add
lret
mov
test
add
xor
fs
mov
cmp
push
mov
popa
and
add
mov
aam
jae
nop
mov
lds
lret
xor
jnp
lahf
jg
add
and
add
and
ljmp
fmul
test
leave
rclb
add
cmp
repz
add
fadds
inc
xchg
xchg
add
cmp
shl
aam
sbb
jg
clc
rcl
stos
mov
aad
scas
dec
jbe
insb
out
or
add
ret
xlat
jb
lcall
push
ret
movsb
add
dec
pop
mov
dec
xchg
cmp
lea
jg
cmpsl
mov
add
clc
sbb
enter
idivb
sbb
jns
jo
adc
xchg
mov
add
or
jle
cmp
add
pop
push
test
add
xchg
and
and
fildll
xchg
add
pop
adc
add
cmpsb
add
lods
add
mov
dec
dec
or
add
addb
dec
jl
loope
inc
mul
lahf
ljmp
mov
das
fs
stos
jmp
dec
mov
cmpsb
add
xchg
mov
add
inc
pushf
dec
fdivs
inc
or
add
or
add
jmp
adc
repnz
push
movsl
jo
call
push
cli
dec
push
adc
add
cli
popa
lret
add
bound
aaa
sub
int
insb
or
lds
std
jle
add
push
stos
aaa
gs
pusha
pushf
adc
call
add
jecxz
jo
mov
add
fcomps
imulb
add
test
add
cmp
lods
xchg
adc
adc
fwait
test
lret
and
cmp
sbb
push
out
stos
add
pop
pop
mov
add
ffreep
xchg
lds
jl
in
test
add
jg
cwtl
mov
adc
add
jbe
ja
inc
adc
int3
repnz
jnp
adc
add
mov
test
add
int3
push
out
cmpsl
dec
xor
icebp
or
add
add
xchg
cmc
call
sub
sub
add
dec
lods
add
push
push
fnsave
movsl
sub
mov
add
adc
arpl
lods
sub
xchg
push
adc
mov
dec
or
add
pop
push
rclb
xchg
sub
add
and
inc
add
xchg
xor
test
popl
movsb
add
rorl
jbe
add
jmp
bound
int3
out
mov
add
sbb
imul
add
icebp
jnp
dec
std
jnp
add
inc
sarl
repnz
shr
das
sbb
mov
add
adc
mov
or
add
fmuls
aas
adc
leave
das
std
sub
add
cmpsb
add
icebp
xchg
aam
aaa
adcl
push
std
aas
cmp
rclb
ljmp
mov
fs
std
push
dec
adc
mov
xchg
cmp
add
cmp
add
mov
jno
add
iret
loope
mov
fsubs
add
out
out
inc
fcoms
jge
cmp
mov
xor
mov
add
add
xchg
fadds
push
aad
fisttps
cmp
add
js
jnp
inc
movsb
add
inc
adc
add
cmp
or
add
add
lret
pop
xchg
push
shl
mov
inc
dec
and
divb
add
cmc
or
xor
push
movnti
add
xchg
ss
push
lds
fiaddl
adcl
inc
adc
push
iret
xor
sub
add
add
js
addr16
pop
cltd
mov
push
cli
bsr
adc
dec
fdiv
and
rorb
arpl
test
add
faddl
add
add
push
sarl
fwait
lods
sub
add
test
add
insl
inc
push
pop
js
push
jecxz
aad
js
add
xchg
test
add
mov
xchg
sbb
jle
sbb
lods
add
xlat
lea
outsl
nop
mov
add
mov
lods
pop
divb
add
add
fwait
das
fmull
dec
push
lea
daa
push
enter
jle
cmp
inc
stos
add
and
add
add
adcl
out
xor
mov
rcll
fnsave
inc
cli
imul
out
sub
add
ret
mov
fwait
dec
frstor
bound
mov
pop
sbb
mov
out
xor
mov
cmp
add
add
cmp
psllq
test
add
jb
mov
add
lcall
jb
rcl
and
add
xchg
jbe
movsl
xchg
jle
rcll
add
loope
sub
add
pop
mov
in
push
test
in
loopne
add
add
mov
push
lods
int3
mov
pop
xchg
xor
jae
int3
push
add
add
cmc
arpl
add
xor
outsl
cltd
add
xchg
xchg
pop
pop
jecxz
out
sbb
or
jbe
scas
add
fdivr
jmp
lcall
jo
xchg
popa
fildll
add
pusha
sahf
add
in
ljmp
js
or
subl
adc
les
nop
cmp
ljmp
add
test
add
inc
outsl
nop
daa
mov
add
xor
inc
stc
push
and
add
inc
icebp
lea
rclb
and
add
add
cmp
fwait
inc
mov
add
aas
int
sub
add
mov
add
stc
popa
cmp
fcoms
add
and
add
dec
mov
add
add
jne
add
testb
add
cwtl
xor
xchg
lods
add
repnz
inc
aad
xchg
add
clc
add
add
add
aam
call
dec
int3
and
push
mov
add
add
out
cmp
inc
ljmp
mov
jbe
xchg
inc
mov
shll
add
dec
add
add
test
add
ret
data16
das
test
add
adc
leave
test
add
clc
pushf
adc
std
adc
add
sub
add
daa
adc
stc
xchg
ljmp
aad
add
sub
add
add
rcrb
shrb
add
push
and
in
dec
pop
gs
push
stos
mov
add
or
adc
sub
scas
shll
sub
dec
out
add
lds
fsubrs
xchg
lods
add
stc
dec
inc
cli
inc
add
add
add
insb
flds
xchg
push
mov
ja
pusha
pop
nop
jecxz
inc
fsubl
add
dec
add
add
mov
jl
add
xchg
stc
mov
cmpsl
and
add
add
sub
add
xor
mov
arpl
je
jb
aad
mov
mov
add
addb
ljmp
fsts
mov
addb
pop
dec
pushf
push
cli
sbb
cmpl
dec
or
add
imul
add
lock
aad
pop
cmp
and
or
add
addr16
out
test
add
add
lds
loopne
push
mov
sub
add
mov
and
dec
shrb
push
add
bound
stos
fistps
xor
and
mov
lret
clc
testl
add
inc
std
leave
mov
addb
push
add
cmp
scas
add
fdivl
and
add
push
leave
enter
add
int
add
loop
add
adc
pop
push
add
cmp
in
insl
mov
and
aam
decl
ret
in
clc
add
add
and
add
jno
sub
or
add
xor
add
rcrl
mov
lds
add
lock
outsb
mov
and
add
insl
pop
lods
xor
jle
addr16
imul
add
sub
add
sub
add
in
rorl
add
in
fs
repz
lret
pop
lods
add
std
sbb
jl
js
fisttpll
lcall
out
lea
push
scas
jne
jne
add
mov
add
inc
jo
gs
ja
jge
scas
push
xchg
inc
outsb
out
push
push
pop
mov
sahf
test
add
in
mov
int3
xor
add
pushf
inc
aaa
xchg
fstpt
dec
imul
pusha
xchg
add
sub
adc
add
add
add
add
push
mov
ret
sar
jbe
mull
add
sub
dec
jne
imul
mov
push
push
jns
or
or
add
int3
pop
xor
insl
mov
mov
jne
test
add
popf
cmp
add
das
push
cmp
xchg
add
popf
push
mov
cmpsb
add
jmp
ficoms
sbb
add
cmp
add
push
ss
ret
out
repz
rcrb
dec
xchg
add
pop
pusha
mov
xchg
push
test
add
pop
mov
add
insl
addb
sub
add
rcrb
pop
fsubl
add
pushf
imul
lods
add
or
add
xchg
pop
and
add
lahf
dec
add
add
or
add
ficompl
test
lret
shrl
add
scas
mov
adc
mov
test
add
mov
push
and
add
cmc
cmp
add
xchg
test
xor
or
add
stc
add
add
add
jecxz
shlb
jmp
add
xchg
mov
into
pop
out
std
or
add
das
test
add
arpl
in
mov
rorl
add
add
sahf
pop
rorl
push
sahf
xor
shll
jne
sete
jmp
xor
cld
out
add
dec
testb
cmp
rcrb
int
andl
push
mov
add
dec
std
faddl
add
shl
mov
add
add
call
cmp
mov
repz
add
cmp
add
xchg
add
out
sub
mov
add
lret
sarl
aam
pusha
rcr
cli
xor
mov
clc
sub
add
cli
test
call
add
jne
in
mov
add
and
and
dec
cwtl
mov
jns
call
add
push
cli
pop
pop
addr16
xchg
push
xchg
xor
lock
jae
pop
jno
mov
ljmp
add
mov
add
imul
mov
mov
sub
add
aas
pop
nop
mov
in
mov
jb
add
jb
add
and
addb
shll
or
add
add
out
hlt
movsl
push
movsl
inc
and
adc
ret
mov
lds
add
insb
jno
rclb
add
enter
rep
add
stc
insl
popa
cmp
add
leave
xor
or
add
addr16
dec
out
pop
push
ja
add
add
in
stos
lcall
fwait
leave
out
cmpsl
jl
inc
cmp
inc
sub
out
fisubrl
outsl
jno
dec
push
xchg
inc
xor
enter
cmp
lret
push
leave
pop
adc
mov
add
data16
inc
add
push
ret
and
sub
add
add
jo
cltd
arpl
add
ret
jb
stos
popa
fs
jmp
lcall
inc
pop
fcmovnb
inc
das
pop
push
sbb
adc
mov
adc
and
cmpsl
in
jecxz
add
fcmovu
sahf
mov
shlb
cmc
loope
ret
inc
or
add
pop
out
pop
clc
out
adc
popa
mov
add
jmp
adc
inc
inc
fcomip
iret
lds
add
insb
and
stos
add
rcrb
add
lods
das
xchg
pop
pop
in
add
dec
dec
xlat
in
dec
mov
repz
mov
push
or
add
clc
mov
ss
loope
aam
jl
dec
mov
add
add
xchg
add
lds
jnp
stos
idivb
add
xor
scas
movsb
add
jecxz
ss
cltd
lea
fdivl
or
add
loopne
add
sti
inc
jne
mov
mov
add
mov
test
add
add
sub
add
xchg
pop
cmp
dec
add
mov
add
pop
cmp
add
mov
lods
stos
add
std
sbb
pop
sbb
mov
insb
or
xor
jns
push
xchg
cld
sub
add
jo
fadds
add
mov
loop
in
aam
pop
push
push
cmp
cwtl
pop
jbe
add
cwtl
jge
add
cmp
add
inc
data16
cmp
popa
and
ret
ljmp
add
std
nop
add
add
adc
aas
dec
push
xlat
test
add
in
xchg
add
gs
mov
dec
mov
inc
push
ret
cltd
cmp
mov
add
cmp
pop
mov
lcall
addb
out
xor
pop
add
in
out
xor
mov
push
sarb
and
add
arpl
sub
mov
popf
in
jle
xlat
in
mov
xchg
add
rcrl
insl
pop
addb
and
mov
add
je
orl
add
pop
repnz
add
ds
sub
push
add
mov
jb
dec
in
dec
rcr
aaa
ljmp
add
push
adc
fcomps
sbb
cmp
add
mov
shll
cmpsb
add
lcall
sbb
faddl
add
ffreep
ret
imul
lcall
fstpt
pop
gs
pop
adc
movsl
xor
loopne
fildl
add
icebp
add
pop
shll
pop
icebp
out
xchg
ret
cmpsb
add
sub
pop
push
add
scas
mov
add
add
cmpsb
add
jo
adc
pop
imul
stc
cmp
mov
add
shrb
add
jmp
inc
pop
mov
inc
andl
add
and
bnd
push
scas
add
insl
inc
xor
lds
push
cmp
cmpsb
add
shr
add
xor
inc
xor
mov
mov
push
or
jne
mov
test
xor
imul
andl
sub
mov
mov
mov
movsl
test
add
iret
push
in
out
out
push
jecxz
jno
cmp
insb
sarb
inc
mov
mov
mul
inc
mov
add
mov
in
dec
sahf
popa
idivb
icebp
sbb
add
add
dec
cmpsb
add
mov
sbb
cmp
cmpsl
out
add
outsl
jmp
add
mov
sbb
mov
dec
or
lods
jae
adc
stos
imul
enter
jmp
xchg
mov
add
push
inc
push
add
adc
add
add
mov
ss
add
out
mov
cmp
sub
add
inc
rcr
jae
inc
mov
nop
cwtl
mov
in
in
cltd
pop
add
add
cmpsb
add
movsb
add
push
mov
xchg
pop
inc
or
mov
xchg
push
sub
jl
sub
add
add
add
lods
jg
scas
push
or
add
mov
jp
popa
xchg
jb
call
push
add
addr16
add
jmp
sbb
movb
add
popa
sub
scas
add
sub
in
adc
cld
into
mov
add
mov
shl
js
pop
pop
adc
push
stc
mov
add
xor
int3
lcall
fcoms
add
lods
jne
test
xchg
sbb
sahf
in
jbe
subl
push
bound
inc
inc
sahf
lods
add
into
xlat
mov
std
imul
ja
add
or
bound
nop
fnsave
adc
lret
stc
addb
data16
add
loopne
mov
mov
add
add
enter
or
sbb
mov
lcall
add
fdivrl
xchg
popf
xchg
test
out
aam
push
add
jno
fs
pop
repnz
shlb
ss
imul
call
nop
and
arpl
mov
insl
loop
mov
hlt
mov
test
add
jecxz
pusha
out
add
addb
loopne
test
add
adc
jbe
inc
clc
xor
add
jge
mov
add
dec
xchg
add
stc
jg
jb
aam
pusha
mov
pop
and
addb
sbb
add
or
mov
add
outsb
pop
out
pushl
push
mov
test
add
push
clc
cmpsl
in
pop
fsubl
test
add
xchg
dec
ret
add
mov
insl
pop
add
loopne
cmpsl
cmp
fcmovu
out
cmc
and
add
sbb
lods
add
loope
fxch
push
or
add
in
pushf
divps
jge
jle
add
xor
pusha
dec
cltd
test
add
xchg
popf
fstl
jge
ret
xlat
mov
push
cmp
add
lret
shl
dec
inc
inc
xchg
cmpl
lods
add
pushf
scas
add
pop
loopne
nop
pop
push
pop
mov
add
add
in
fsubs
fldenv
popa
and
add
add
and
add
rcll
add
or
cltd
cmp
repnz
add
xchg
dec
sti
ss
and
add
pop
icebp
jp
add
adc
mov
add
add
stos
sub
add
add
repz
lea
mov
jne
xchg
add
add
xor
sbb
xor
add
lret
popl
add
mov
cld
cmp
fnstsw
xchg
dec
loope
popa
les
add
push
mov
add
loop
mov
add
push
gs
sub
adc
clc
subl
mov
pop
mov
add
xchg
pop
fcoms
pop
inc
push
pop
xchg
into
fldt
cwtl
sub
add
mov
lcall
fs
ss
add
add
xchg
fldt
push
test
ficoms
mov
fs
add
add
incl
add
jg
pop
ljmp
or
pop
pop
fcmovne
addb
pop
decb
add
add
fsts
add
je
cmc
fistps
push
out
mov
jle
add
xlat
mov
and
lret
jbe
les
add
rcrl
cld
push
popa
out
xchg
mov
add
sbb
add
repnz
push
push
add
sub
and
add
jo
xchg
addr16
out
adc
movl
sub
pop
rclb
ret
mov
add
fs
test
add
jae
adc
ret
bound
mov
dec
push
lea
push
add
and
jge
rolb
add
scas
add
inc
pop
push
inc
orl
mov
mov
popf
mov
jnp
lcall
rcrl
cmp
call
jbe
lods
add
stc
jbe
add
stos
stos
add
fists
push
mov
test
add
dec
in
outsl
push
mov
and
insb
dec
lods
pop
sbb
add
mov
jmp
inc
arpl
aaa
pop
arpl
and
add
mov
add
stos
add
mov
add
xchg
ret
xor
fstl
loope
fbstp
add
sbb
mov
add
nop
add
cmpsb
add
popf
dec
int3
loope
sbb
add
cmpsb
add
test
add
xor
push
std
cmp
xor
repnz
nop
repz
add
mov
dec
movsl
aad
jae
mov
push
add
dec
push
add
addr16
add
cld
outsl
je
jno
push
cld
pop
mov
sub
add
jp
or
pop
inc
mov
or
add
jmp
add
pop
jns
push
lret
pop
mov
and
lcall
inc
idivl
add
cmp
pop
stos
dec
cltd
aad
push
dec
xor
out
jo
aam
add
mov
imul
jne
cmp
loop
add
clc
aas
pop
ret
repnz
fadds
add
and
aas
clc
lret
shll
lret
sbb
cmp
jno,pt
mov
add
jp
daa
mov
add
dec
xchg
mov
bound
xchg
test
dec
cmp
dec
and
add
inc
dec
mov
add
mov
add
mov
push
inc
adc
jnp
add
xor
sti
dec
sbb
test
add
cmpsl
cmp
jmp
jp
add
pop
js
or
add
popf
shll
add
test
add
add
dec
push
push
add
mov
mov
fidivl
add
add
xchg
add
push
add
into
or
add
pop
adc
inc
test
add
add
adc
jle
add
sbb
movsl
push
sarb
mull
add
fisubrl
add
addl
or
add
add
lret
pop
and
add
sbb
mov
add
ret
inc
adc
lds
insb
loopne
in
imul
add
or
int
add
jae
sub
dec
popa
add
add
xor
insl
pop
adc
movsl
mov
adc
sbb
repz
je
in
and
cltd
inc
nop
aas
mov
out
sbb
jno
scas
add
xchg
mov
add
add
rcrl
inc
sub
add
pop
cmp
adc
sbb
mov
and
lcall
bound
in
test
add
add
xchg
ret
sub
add
imul
mov
xchg
or
add
mov
push
addr16
pop
loopne
ljmp
lret
cwtl
inc
aam
sub
imul
xchg
and
add
dec
sbb
pop
inc
data16
cmp
sub
std
repz
addb
addr16
les
lcall
mov
fildl
stos
fdivr
push
bound
push
dec
pop
sbb
and
je
xchg
cmp
int3
mov
lods
add
les
mov
imul
add
ret
lods
add
mov
int
movsb
add
inc
pushf
addb
sub
lock
aas
sbb
mov
pop
cwtl
dec
dec
fsts
add
cwtl
adc
jecxz
mov
aas
sarl
fisttps
stos
fiadds
jae
adcl
add
and
add
rorb
push
add
mov
pop
push
mov
pop
push
ds
cwtl
out
imul
and
add
add
enter
mov
call
mov
fnstsw
push
push
push
sub
add
lahf
pop
add
add
sbb
jne
add
cld
xor
and
sbb
add
xor
add
in
cltd
add
add
add
outsl
mov
sub
add
into
pop
xor
and
add
cmc
adc
aad
inc
jns
xchg
sbb
add
mov
cmp
sub
add
psadbw
xchg
loopne
shlb
add
add
or
add
pop
xchg
js
push
out
jo
pop
jno
jle
subl
adc
and
add
rep
push
add
xchg
xchg
bound
icebp
fistpl
or
subl
cmp
add
jge
dec
ret
addr16
gs
leave
fwait
adc
add
dec
loopne
add
jae
xor
add
popf
xor
test
add
and
add
out
add
pop
sub
add
pop
adc
cmp
inc
fs
sti
xor
and
add
add
mov
icebp
loope
aaa
data16
loop
inc
add
add
in
mov
mov
imul
add
arpl
cmc
add
add
lret
inc
jp
fs
mov
mov
or
add
add
daa
cmp
add
add
push
xor
push
push
bnd
push
xor
fs
sbb
push
rcr
adc
add
lcall
sarb
add
add
and
add
insb
jns
jge
xor
add
jno
add
int
or
add
jecxz
bound
sbb
mov
imul
call
add
test
add
lock
rorb
add
iret
mov
add
jmp
add
scas
add
mov
rcll
rcll
add
mulb
push
add
sbb
outsl
cmc
insw
push
into
add
jb
inc
pmuludq
add
mov
aam
push
fnstsw
pop
push
push
stos
xchg
add
add
aas
ret
push
ja
or
add
je
addb
bound
and
xor
xchg
mov
setle
sub
add
mov
add
and
scas
add
cmp
out
mov
add
in
pop
fisttpll
lcall
lahf
addb
sub
addr16
pop
dec
fwait
or
add
mov
sbb
jns
outsl
xchg
shrb
jge
push
inc
out
dec
loop
pop
pop
pop
jge
into
xchg
push
xor
jb
mov
add
imul
movsb
add
lret
fidivrs
addb
aaa
repz
adc
hlt
inc
test
and
xchg
scas
add
push
ljmp
pop
push
cltd
pop
xchg
in
cld
sahf
nop
imul
xor
add
inc
lods
add
push
loopne
cmp
add
jns
add
jle
add
jne
mov
add
add
jbe
popa
sbb
xchg
cmc
inc
call
jnp
test
sbb
pop
pop
dec
cld
gs
add
jl
movsb
add
sub
mov
push
add
dec
sbb
test
add
stos
add
jge
adc
add
jge
das
fstpl
imul
add
decb
pop
push
mov
mov
and
add
xchg
xchg
pop
jge
dec
mov
lret
ret
mov
call
add
mov
add
nop
fimuls
rcll
mov
mov
add
add
sbb
add
movsb
add
sub
add
add
mov
gs
in
les
hlt
pop
push
sub
incb
add
in
mov
push
lea
cmp
aaa
xlat
push
add
arpl
jge
mov
dec
cmpl
jmp
faddl
add
adc
dec
and
in
int
xor
inc
shrl
mov
jns
loop
push
loop
or
sub
and
add
sub
hlt
lods
add
mov
add
arpl
fmull
xchg
pop
mov
addb
repnz
mov
add
popa
lods
add
mov
add
push
add
push
sbb
adc
imul
dec
fcmovbe
xor
adc
mov
add
mov
inc
test
add
pop
dec
cld
xor
xlat
mov
sub
add
jl
scas
jnp
mov
push
add
add
mov
add
sbb
sbb
add
inc
scas
add
fyl2xp1
or
add
inc
push
sbb
jle
clc
cmp
cmp
add
sbb
clc
sbb
and
add
mov
pop
cltd
out
or
in
sub
out
push
or
clc
and
add
add
repnz
test
add
pop
fwait
xchg
sub
add
sbb
sahf
out
jmp
lds
inc
mov
aas
sbb
loope
jg
add
jge
lds
sbb
int
sbb
ficoms
dec
pop
lcall
out
insl
cmp
sbb
popa
subl
dec
add
sbb
in
out
in
icebp
cmp
sarl
mov
pusha
mov
and
add
nop
out
mov
add
or
xor
out
data16
add
shlb
add
add
dec
inc
shlb
addl
mov
outsl
mov
add
cmp
add
add
fidivrl
dec
jecxz
push
add
nop
outsb
add
sbb
and
add
inc
lods
add
jb
add
outsb
sti
pop
inc
add
add
lcall
inc
xor
add
add
jne
jp
mov
sarl
xlat
and
adc
dec
add
adc
xlat
jae
add
mov
pushf
scas
mov
add
loope
cmc
push
call
jg
add
lea
sub
add
inc
adc
mov
cmpsb
add
addb
cmpl
jp
or
stos
add
lahf
sbb
popf
repnz
stos
add
std
mov
clc
sti
movsb
add
int3
mov
fcomps
js
xor
add
add
rolb
add
fxam
cmp
jl
sbb
divl
and
add
in
popa
addr16
movsl
pop
jb
xchg
sbb
movsb
add
unpckhps
and
add
add
je
and
cmp
add
pop
dec
push
sub
add
movsl
add
cmpsb
add
into
xchg
fldenv
fisubs
aad
loopne
push
mov
add
neg
adcl
add
clc
repnz
cmp
mov
add
movsl
js
sbb
test
in
add
inc
or
rcll
or
add
roll
adc
xchg
mov
add
xor
mov
out
jge
push
xchg
jp
adc
or
add
sub
out
xchg
add
inc
mov
add
in
arpl
pop
add
leave
or
add
pop
pop
int
add
add
adc
mov
add
jle
test
add
cmpsb
add
and
push
scas
add
push
loopne
test
add
inc
adc
add
imul
add
sub
add
mov
and
out
in
sbb
sub
jb
add
jbe
add
add
cmp
lret
cld
xchg
addb
mov
push
push
pop
leave
pusha
mov
out
std
cmp
inc
and
add
dec
inc
mov
dec
sub
int
add
xchg
add
push
lret
add
add
fsubrs
add
pop
add
add
fdivr
sbb
cmp
cmp
cmpsb
add
jnp
stos
sti
fldl
add
int3
inc
gs
das
mov
or
push
dec
shr
pop
push
add
xor
clc
fwait
mov
mov
lret
stc
wbinvd
push
test
inc
dec
fsts
mov
add
addb
mov
addb
mov
jmp
repnz
add
xor
mov
mov
xor
add
test
add
enter
add
push
adc
adc
xchg
xlat
adc
jg
scas
imul
testb
add
cmp
decl
push
das
cmp
add
cmp
pop
std
int3
dec
gs
sub
add
jecxz
clc
call
mov
add
push
cmpsl
arpl
dec
mov
bound
in
xor
add
sub
fimuls
dec
cmovne
add
add
add
adc
cmp
jns
outsl
mov
add
cmpsb
add
cmp
andl
xchg
sub
cmpsb
add
add
mov
roll
add
inc
dec
dec
mov
int
rclb
insl
fwait
sbb
add
add
adc
popa
mov
add
aaa
mov
add
cmp
sbb
add
mov
ret
fstpl
fwait
cmc
xchg
cmpl
mov
ret
ss
inc
inc
int3
pop
xchg
stc
jge
ljmp
fwait
mov
add
jns
aaa
jecxz
xchg
aaa
pop
stc
daa
mov
mov
aam
das
je
in
or
icebp
add
push
fimuls
cltd
or
sbb
xlat
aad
mov
push
pop
test
lret
xor
rolb
enter
mov
add
jns
xchg
add
in
add
call
fdivrl
ret
pusha
mov
inc
popa
push
push
mov
add
jns
xchg
jge
std
pop
cmp
cmp
xlat
sbb
xor
and
fisubrl
xlat
enter
call
cld
add
dec
or
add
sti
sub
add
hlt
mov
jg
dec
xor
cmc
in
add
outsl
xor
sub
sub
add
sub
fistps
cmc
mov
add
aaa
mov
xor
xor
ja
mov
push
lret
out
xchg
ret
pop
insl
jl
add
push
xlat
fsubr
les
add
add
add
push
nop
imul
mov
arpl
add
imul
orl
dec
jmp
add
dec
mov
add
aas
xchg
push
or
inc
popw
inc
ss
xacquire
add
add
add
xor
call
shl
pop
xchg
add
mov
test
scas
out
inc
jnp
dec
cmpsb
add
inc
add
mov
add
pop
shrl
add
add
inc
stos
add
add
add
dec
jg
stc
out
in
aaa
cwtl
pop
sbb
pop
cmp
pop
in
xchg
adc
jbe
sahf
cwtl
mov
lcall
push
pop
and
add
dec
and
arpl
ret
add
sti
int
outsl
int3
adc
lcall
idivl
iret
mov
add
cmpsb
add
or
popa
pusha
roll
or
sub
xor
add
add
add
cmpsb
add
xchg
nop
cli
ss
outsb
inc
jnp
xor
add
xchg
mov
mov
ffree
jne
cli
mov
sub
push
lds
mov
add
stos
add
cwtl
sub
add
loopne
outsb
mov
xor
add
mov
add
xor
add
push
add
int
push
push
push
cld
jmp
adc
lods
add
xor
cmp
outsl
sub
inc
mov
test
in
add
add
mov
mov
lahf
int3
in
mov
mov
lock
cmpsl
insl
mov
insl
or
add
dec
mov
add
mov
pop
xchg
lea
jl
mov
rcrl
mov
and
add
ret
mov
fldenv
in
aaa
xor
add
sub
add
test
add
lea
push
js
mov
outsl
test
add
dec
xchg
add
sbb
and
aas
pop
mov
add
add
hlt
lds
add
sbb
jg
add
cmp
jb
xor
in
add
add
dec
adc
fstl
pop
mov
add
sbb
add
jae
sbb
push
pop
stos
add
bound
dec
mov
mov
cmp
mov
add
pop
cli
pushf
lahf
mov
add
cltd
xchg
add
add
pop
cmp
mov
ret
mov
dec
decb
cmpsb
add
push
adc
and
add
pop
mov
add
pop
push
jno
int3
or
cmpsb
add
mov
lods
add
inc
mov
or
add
mov
add
jmp
add
bound
sbb
lcall
and
movl
sti
sub
add
sbb
addr16
xchg
test
add
imul
add
add
lea
or
add
lods
xchg
adc
iret
loopne
add
out
test
add
add
cltd
push
dec
xchg
add
add
aam
add
shlb
cmp
lods
add
add
call
cmp
add
gs
xor
loop
out
or
add
push
sbb
pop
cmp
inc
sbb
neg
push
jns
add
inc
cmpsl
cmp
cli
jp
dec
sar
cmc
stc
sub
add
sbb
iret
cwtl
sbbl
add
outsb
insl
iret
dec
aad
out
outsb
push
add
mov
outsl
or
add
fdivs
pop
sbb
jecxz
cwtl
incb
ss
mov
test
and
mov
or
add
dec
dec
jo
fcomi
cmp
add
push
ds
mov
inc
insb
sti
pop
mov
add
add
nop
scas
pusha
into
or
xor
add
shl
add
ss
add
add
jmp
add
xchg
cmc
addr16
movsb
add
adc
add
fstpt
mov
fldt
pop
inc
fldt
adc
xor
jbe
sahf
icebp
jp
sbb
scas
add
fs
popa
in
sbb
ljmp
repz
dec
data16
ss
mov
in
scas
in
push
or
add
popa
cltd
roll
add
sbb
lcall
test
add
sarl
int
rcrb
clc
lcall
add
sti
lods
movq
pop
push
mov
filds
add
mov
ret
adc
out
xchg
dec
push
aas
test
add
sub
add
cmp
add
xchg
gs
icebp
xchg
mov
std
lods
fisubl
add
jge
cwtl
movsl
scas
inc
mov
push
jo
pusha
mov
clc
push
pusha
nop
aad
imul
cld
and
cmpsl
dec
add
add
jg
add
jns
add
pop
imull
xlat
push
add
lock
push
sub
add
lcall
jno
inc
cmc
mov
add
or
jg
add
repnz
lods
ds
out
inc
sbb
jecxz
push
mov
add
xchg
jmp
fs
lahf
xor
add
add
adc
or
add
movsl
in
fwait
sbb
cli
imul
add
add
add
cmc
in
and
add
repnz
mov
cwtl
mov
add
add
scas
xor
adc
mov
add
enter
add
xlat
repnz
jb
jp
jge
xor
jp
add
pop
jnp
dec
xchg
ficoml
push
inc
xchg
out
add
add
fs
sahf
scas
add
stos
stos
add
adc
add
cmpsl
cmp
cmp
add
out
ret
addl
and
add
rclb
popa
jp
add
add
add
nop
jno
push
add
stos
xchg
inc
add
add
xchg
add
add
shrb
outsl
test
leave
dec
lods
shrb
pop
jne
or
add
ret
imul
push
out
fdivp
jl
add
jne
jns
sub
add
jns
movsl
in
cmpsl
inc
mov
jb
addl
add
cwtl
or
add
test
sti
add
add
add
cmp
adc
add
jae
fimull
sbb
je
lods
xchg
push
add
rolb
push
scas
xchg
sbb
ss
cmp
push
ds
inc
sbb
dec
mov
dec
inc
test
and
jnp
add
push
add
loop
mov
std
ljmp
add
dec
push
popa
mov
push
ljmp
add
add
cld
xor
psubw
add
push
aaa
cmp
add
repnz
push
sub
add
add
dec
jmp
add
out
stc
fildll
cmpsb
add
dec
addb
xchg
push
add
mov
and
test
add
leave
lret
sub
xchg
add
sub
add
and
int3
or
xchg
ret
test
add
add
mov
add
cmp
cltd
jns
sahf
fwait
ret
ret
and
mov
pop
ds
imul
sarb
add
leave
out
mov
dec
xlat
jns
add
clc
pop
lods
in
unpcklps
sar
mov
sub
add
imul
mov
dec
and
inc
pop
adc
add
lods
add
mov
stos
shlb
push
add
dec
jmp
repz
call
add
inc
fldl
add
rcrb
ret
push
inc
neg
test
add
add
sub
add
or
pop
push
clc
mov
mov
add
xchg
add
add
cmp
add
jecxz
add
mov
movsl
or
sub
add
dec
inc
cmp
imul
clc
rcrl
add
test
mov
add
bndmov
add
add
xchg
cld
mov
add
int3
pop
aam
in
jne
mov
ret
pushl
in
or
pop
fimull
in
adc
cli
xchg
lret
scas
add
addb
or
add
aam
and
add
jge
cmp
add
sub
stc
pop
les
add
scas
add
mov
add
pop
repnz
scas
add
scas
add
jg
pop
cli
test
add
sub
pop
sub
add
lea
xchg
inc
sbb
lds
stos
add
inc
stc
je
inc
sahf
xchg
daa
lcall
movb
mov
sub
add
std
out
add
add
mov
add
inc
xchg
and
add
jns
sbb
test
lds
xchg
addb
sub
add
add
add
push
fsubl
clc
subl
fisubs
add
push
ror
aas
int3
lods
add
scas
add
adc
push
das
cmpsb
add
xchg
push
adcl
add
bnd
and
mov
push
push
shr
nop
sbb
jnp
repz
pop
cmp
rcr
cmpsb
add
adc
cmp
scas
add
cmp
add
dec
je
jmp
mov
sbb
adc
shl
mov
add
cmc
adcl
add
lods
add
mov
daa
shll
jecxz
iret
cmp
packssdw
aam
loop
push
in
jb
add
add
add
and
loopne
repz
enter
out
ljmp
stos
sub
push
pop
rol
mov
lds
xlat
cmpsl
imulb
dec
cwtl
mov
sub
add
addb
jmp
add
test
addr16
in
loope
and
hlt
pop
pop
lcall
add
add
adc
xor
mov
push
lds
sahf
scas
add
xor
add
fcoml
xchg
dec
fcompl
dec
mov
add
dec
jae
mov
add
outsb
mov
add
stos
add
sub
add
add
pop
scas
add
mov
mov
stc
pop
insl
add
fs
jg
sub
dec
stc
mov
andl
int
lods
adc
jo
jg
sub
add
mov
push
xchg
roll
add
shrb
add
push
adc
add
xchg
mov
add
add
dec
mov
and
add
ja
add
dec
out
add
sbb
loope
mov
lahf
jmp
sbb
fwait
orl
dec
dec
push
mov
or
add
adc
ljmp
cmpl
clc
jae
xchg
xchg
add
and
add
sub
add
scas
fimuls
jnp
fiaddl
jle
xchg
pminub
push
pop
xchg
mov
adc
jl
and
mov
add
push
movsb
add
mov
or
cltd
insl
mov
ja,pt
out
test
xchg
outsb
out
fdivrs
mov
add
inc
pop
mov
and
sub
add
add
leave
aaa
enter
ss
add
in
das
inc
data16
add
pop
mov
mov
sti
xchg
jno
or
inc
lds
add
dec
out
or
push
int
adc
jb
or
add
add
test
add
repnz
mov
aam
add
add
add
adc
ret
add
adc
jno
sub
or
cld
pop
mov
scas
add
pop
pop
jmp
pop
add
sub
add
push
inc
push
and
add
out
cmp
pushf
jne
or
push
add
or
add
push
add
sahf
les
add
jo
add
add
mov
sarl
out
sbb
popf
fnstsw
mov
arpl
loope
lods
or
add
pop
les
jmp
add
push
cwtl
xchg
xlat
roll
scas
add
and
xlat
xchg
add
jb
inc
xchg
stos
push
and
push
add
cmc
scas
add
mov
jnp
mov
cmp
add
jmp
add
sub
lds
sub
add
add
loop
jg
xor
addb
add
icebp
sub
add
sbb
add
mov
add
gs
add
and
add
add
lret
adc
add
stc
jne
fdivrl
fisubs
lock
inc
outsl
xchg
rcrb
mov
inc
dec
cmc
push
pop
xor
add
mov
add
pop
mov
adc
cmp
adc
push
add
pop
scas
mov
xchg
orl
int
shlb
or
and
inc
fistpl
fcoms
addb
xor
adc
xor
jae
mov
add
stos
add
or
add
test
add
lret
mov
stos
add
andl
scas
add
pop
sbb
xor
add
push
add
or
cmc
xlat
call
add
jle
jbe
roll
dec
lcall
push
enter
add
in
nop
test
fsub
sbb
add
in
dec
std
cmp
add
or
test
mov
add
imul
push
sbb
int3
adc
lds
mov
add
add
or
add
out
pop
mov
add
jae
add
lret
or
add
add
aas
and
dec
cwtl
pop
mov
jno
inc
rolb
mov
lods
pop
jnp
adc
addb
jmp
mov
int3
xor
add
fldenv
add
hlt
aam
jnp
lods
mov
or
pusha
nop
or
cmp
add
inc
mov
add
or
add
adc
mov
pop
dec
cmp
push
cltd
fmulp
icebp
cmc
add
lods
sub
fiaddl
add
ret
add
insl
dec
pop
mov
sbb
add
add
xchg
add
scas
jg
xor
add
mov
add
fcompl
movsl
add
mov
and
add
addb
dec
mov
scas
lea
xor
inc
sub
add
sub
add
pop
and
out
xlat
fmull
shll
into
xchg
xlat
pop
negb
lret
inc
jbe
add
sub
add
xchg
mov
add
fisttpl
push
mov
sbb
pop
mov
xor
add
pop
sahf
mov
add
push
jo
mov
int3
decl
js
xchg
sub
add
add
add
in
mov
xchg
sar
xor
pop
push
mov
into
stos
sub
add
add
sub
add
ja
mov
movsb
add
jb
cmp
mov
add
icebp
lods
insl
or
add
cmp
sbb
lea
inc
push
add
ljmp
add
dec
jg
adc
repz
scas
add
mov
loope
xchg
add
add
push
enter
add
sub
add
pop
xchg
jbe
xor
sarb
mov
add
loope
sbb
add
lock
ss
jno
lods
add
test
int
and
int3
test
sarl
test
add
jo
add
xchg
xlat
int
or
add
daa
and
mov
pop
sub
add
out
andl
cli
add
and
add
call
xchg
sbb
sbb
push
jp
shll
add
sbb
add
int
add
cmp
daa
jmp
aam
jmp
shlb
xor
popf
push
insb
push
icebp
sub
add
add
shr
aam
mov
add
sub
add
adc
data16
repz
js
dec
loopne
xlat
jae
push
fwait
sbbl
add
jle
sahf
jno
sub
and
addb
and
add
addb
push
lret
or
add
fisttps
jmp
jo
adc
jp
push
addb
pop
out
jne
ret
pop
mov
out
jge
add
dec
roll
add
cmc
mov
cmc
xlat
sbb
adcl
mov
lods
lahf
xor
add
sahf
inc
jge
loop
or
add
in
add
scas
jge
xchg
and
add
jp
add
add
jbe
popf
xor
pop
test
add
add
fstpl
mov
cmp
mov
add
leave
xor
add
lods
fst
loope
test
add
outsl
jp
jle
loopne
inc
dec
mov
ds
jmp
inc
sub
add
orl
stc
insb
push
add
pop
ljmp
add
jecxz
aad
addr16
ret
cwtl
or
mov
xchg
add
xor
jnp
lcall
int3
lock
pusha
push
add
dec
add
shll
fbstp
sti
pop
xlat
jno
add
push
mov
ret
mov
addb
jl
pop
mov
add
jg
adc
cld
dec
jae
mov
fisubrl
and
cld
scas
call
jo
mov
mov
mov
cli
and
add
mov
pusha
dec
in
fidivrl
lock
out
cltd
push
sub
add
sahf
pop
addb
jle
call
and
xor
adc
loop
lcall
inc
push
add
xor
pop
ret
xchg
cmp
lret
add
aam
mov
pop
repz
mov
add
or
std
mov
or
adc
sub
add
call
mov
add
jne
loope
pop
cltd
mov
push
call
add
or
adc
ds
dec
fdivrl
add
mov
clc
or
add
pusha
mov
lcall
inc
pop
dec
xor
mov
jnp
pop
mov
iret
sub
mov
add
xor
dec
pop
mov
jno
addb
jnp
sub
xchg
mov
das
mov
sar
push
mov
add
pushf
mov
add
fdiv
sbb
lahf
add
add
push
mov
enter
add
stc
fwait
pusha
sub
cmp
add
fsubrl
fnstsw
jns
sbb
push
cld
xor
xchg
dec
pushf
jle
xchg
push
jb
ljmp
loope
and
add
push
lock
push
adc
sahf
daa
dec
call
and
add
push
pop
jmp
xor
or
add
inc
mov
or
add
mov
xchg
mov
sub
add
js
add
or
fidivs
or
add
jmp
mov
add
scas
xlat
hlt
mov
inc
mov
xor
js
fldenv
stos
jbe
fidivl
add
push
add
jbe
or
add
lcall
pop
mov
sbb
dec
dec
cmc
jae
xchg
add
mov
push
cli
into
pop
pop
idivl
hlt
push
repnz
js
insl
xchg
cltd
add
cmp
lods
add
fiaddl
add
cmpsb
add
fistpl
dec
sub
xor
movsb
add
lret
add
and
add
push
incl
sbb
mov
js
xchg
add
sub
mov
add
xchg
and
shlb
sbb
jge,pt
pop
jae
loopne
and
mov
add
lea
push
fists
add
out
add
ret
andl
add
push
test
rorb
daa
shr
mov
add
mov
pop
stos
aaa
xor
xchg
popa
mov
add
insb
pusha
in
sub
push
fadd
cmpsl
cmp
aad
mov
add
xor
jae
sbb
push
ljmp
add
add
lock
sub
add
jl
ja
mov
imul
scas
add
add
cld
mov
add
xor
aas
inc
dec
xchg
add
and
add
sbb
and
add
push
push
xchg
inc
sahf
lret
int
mov
mov
lods
fsts
rcrl
pop
mov
add
xchg
test
popa
sbb
clc
xchg
aam
adc
loope
gs
mov
add
xchg
pushf
inc
sbb
cwtl
mov
xlat
cld
mov
push
fcom
adc
addb
ret
imul
sahf
addb
mov
add
mov
int
mov
ljmp
sbb
push
xchg
int
add
xchg
xchg
int3
mov
jnp
xlat
push
int
ljmp
jecxz
add
sbb
out
cmp
push
mov
inc
and
pop
and
jmp
add
mov
add
or
add
cmpsb
add
sub
add
push
js
mov
mov
add
jecxz
movsl
out
or
add
inc
jge
mov
je
add
inc
mov
and
arpl
add
lods
add
in
fdivs
test
add
adc
out
pop
sub
add
add
or
xor
fidivrs
sub
add
add
popf
shld
fidivs
push
cmp
sub
pop
loope
sbb
add
xor
jmp
add
mov
jecxz
cmp
add
mov
push
sub
mulps
mov
add
add
jmp
sbb
xchg
jno
add
add
add
add
cmpsl
mov
hlt
add
ret
sar
and
add
or
add
mov
or
and
mov
pop
xor
add
aas
fdivl
ret
mov
add
add
add
ret
std
lods
pop
fisubrl
add
push
aaa
gs
pop
sbb
pop
mov
rcr
xchg
add
dec
jb
or
add
jne
sub
add
add
insb
out
or
lods
add
push
inc
sub
add
pop
jns
dec
dec
insl
bound
sub
iret
sbb
xchg
add
mov
mov
xor
xchg
test
popf
fimuls
push
jge
push
and
add
mov
dec
adc
mov
popf
mov
lcall
mov
add
add
outsl
je
add
insl
xchg
pushf
filds
add
lods
push
and
push
mov
daa
test
movsl
mov
add
ljmp
push
mov
add
into
xchg
daa
push
adc
gs
mov
lock
jbe
add
add
pushf
jno
push
fisttpll
push
mov
add
add
inc
xchg
pushf
push
jecxz
jle
addb
popa
adc
jl
jo
imul
arpl
jbe
insb
ficoms
cwtl
ret
inc
je
add
insb
ds
addb
call
push
xor
jecxz
jne
mov
add
xchg
push
insl
sub
or
add
ja
shlb
les
ds
add
sub
add
stos
add
nop
int3
lods
xor
add
push
scas
mov
negb
jmp
add
mov
add
xor
aam
add
mov
repz
jle
add
mov
cmp
add
jmp
add
aas
adc
and
in
add
sbb
add
add
pop
mov
sbb
add
sbb
shlb
add
repz
daa
jg
outsb
sub
mov
orl
dec
insl
add
add
addr16
xor
in
imul
xchg
addb
fwait
jecxz
jmp
outsb
and
add
jne
loope
lret
mov
cwtl
jae
je
and
addb
pusha
adc
mov
add
add
addb
push
add
dec
cmp
push
pop
inc
call
add
dec
inc
das
test
lahf
icebp
iret
mov
or
add
add
or
aas
xchg
outsl
jle
ds
mov
jbe
add
lods
add
mov
add
mov
add
dec
addb
push
repnz
pop
je
popf
mov
or
push
cltd
mov
cltd
cmc
test
pop
in
loope
inc
jle
lock
mov
add
mov
movsb
add
or
push
mov
lahf
mov
sahf
fadds
pushf
fwait
and
add
adc
xor
xor
cmp
mov
fwait
js
pop
loopne
rclb
cmp
in
mov
movsb
add
jge
push
scas
push
mov
inc
addr16
mov
add
pop
nop
sub
add
sub
add
stos
add
in
jb
bound
clc
sub
add
jmp
sbb
xor
push
jnp
push
xor
pop
mov
inc
pop
arpl
adc
bound
push
cwtl
insl
mov
add
aaa
mov
add
ljmp
xor
mov
add
jecxz
mov
dec
push
inc
dec
int
cmp
fnstcw
sahf
inc
sub
shlb
add
add
negl
sub
add
mov
jl
add
int3
pop
rorl
add
mov
sub
add
push
push
bound
mov
add
push
jp
cld
push
mov
add
lock
int
aas
lods
xor
jmp
xchg
xor
test
mov
jg
daa
push
adc
xlat
lods
pop
nop
push
xlat
push
sti
mov
testb
mov
inc
icebp
mov
add
push
shrb
add
cmp
aam
gs
fsubrl
add
repnz
in
cmp
add
add
pushf
in
jo
ja
fcmovnb
add
call
aas
sbb
in
xchg
add
loop
adc
push
outsl
xor
xchg
and
jl
add
idivl
incl
add
mov
fidivs
fdivs
pushf
popa
insl
fisubl
add
xor
xor
adc
add
xor
adc
jbe
add
cmp
fmuls
xchg
pusha
jmp
sbb
loope
xchg
fldlg2
fwait
movsb
add
push
add
add
decl
cli
jbe
in
add
add
ds
insl
repnz
add
in
out
mov
jecxz
inc
out
cwtl
sbb
add
and
add
cltd
xor
xchg
push
outsb
je
add
cmpsb
add
outsl
pop
cmp
imul
cmc
pop
push
imul
jp
sbb
jnp
jecxz
inc
mov
inc
lcall
add
addb
mov
fbld
add
movsl
cmp
add
add
sbb
lea
add
fidivs
cmpsl
or
add
sti
lahf
dec
in
addb
and
and
jge
add
cmp
xchg
push
add
and
add
mov
xchg
jne
push
add
xor
cmp
loop
addb
inc
xchg
jbe
cmp
add
scas
xor
dec
mov
add
mov
xor
enter
call
test
pushf
push
in
lea
add
add
xchg
push
imul
add
mov
sbb
lods
add
inc
pop
mov
add
xor
in
pop
repz
fildll
loop
imul
sub
jge
clc
mov
xor
jnp
push
xor
add
aad
lds
addb
sub
push
add
std
push
in
sub
add
jle
out
cli
btr
add
push
add
push
mov
clc
stos
add
push
std
outsl
test
add
mov
jecxz
add
out
outsl
ss
push
push
test
add
out
popa
in
andl
inc
mov
shll
mov
add
xchg
add
dec
adc
adc
icebp
dec
xchg
xchg
pop
push
sbb
add
add
mov
add
in
jle
scas
insl
icebp
inc
arpl
loop
add
cmp
mov
add
imul
add
aaa
pop
push
xor
sub
add
jb
dec
test
cld
test
add
scas
add
mov
add
add
divl
imul
pusha
lock
mov
add
inc
jb
insl
or
add
ja
lock
clc
dec
jo
add
sbb
cmp
or
add
pusha
xchg
loopne
add
xchg
add
sub
add
pusha
sub
add
lods
sbb
push
push
jbe
push
inc
aad
cmp
jbe
pop
pusha
add
add
pushf
ds
imul
sysret
mov
and
add
mov
or
add
stc
inc
les
icebp
mov
add
add
leave
enter
add
xchg
add
insb
fnstsw
leave
popa
into
pop
adc
add
sub
loope
inc
push
add
push
add
pop
or
inc
xor
pop
fwait
dec
or
ret
ljmp
lea
popf
mov
inc
add
add
and
test
sub
add
icebp
jbe
loopne
cmpsb
add
fistps
stos
add
fsubl
add
imul
outsb
iret
jmp
movsl
mov
add
iret
aaa
pop
popa
sbb
test
mov
add
jo
add
jb
ret
add
xchg
add
inc
mov
leave
jns
add
add
cmpsl
in
jmp
in
loope
aam
xor
xchg
mov
sbb
add
movsl
mov
jl
dec
pop
mov
dec
sub
add
mov
add
add
inc
ret
jb
add
sub
mov
push
ret
mov
or
in
jl
shl
test
add
or
test
add
xchg
add
ret
push
add
push
mov
outsb
push
outsl
ds
mov
fistl
mov
test
pop
test
add
ret
sbb
dec
outsb
xchg
add
xchg
ljmp
sarl
mov
add
jae
add
mov
call
push
pslld
add
push
jle
add
cmp
mov
add
lcall
add
xor
add
push
outsb
xchg
in
pop
add
add
push
cmp
push
add
cld
jle
ret
sub
add
xchg
add
add
xor
add
loop
mov
repnz
mov
mov
add
add
add
out
loopne
add
dec
insl
shrb
inc
fdecstp
std
shr
xchg
fmull
add
aam
fstcw
out
idivl
in
and
add
add
cli
fs
movsb
add
pop
mov
sbb
pop
sub
add
add
lret
insb
cmp
int
sbb
jle
mov
ja
pop
call
add
icebp
sub
lds
cltd
test
fidivs
sbb
mov
pop
insl
movsl
push
mov
add
add
pop
mov
aad
add
addr16
add
add
add
pop
add
sbb
add
cmp
add
jb
mov
pop
pop
jo
shlb
sbb
inc
test
add
push
nop
inc
in
and
add
arpl
loopne
adc
bound
mov
lcall
lods
mov
movsl
not
fs
gs
sub
add
sbb
in
cmp
lret
add
add
lods
addb
xor
mov
add
jae
jne
add
int
xchg
cld
addb
ljmp
add
push
fisttpl
lahf
js
inc
outsl
and
stos
add
loopne
add
xor
pop
push
inc
xor
repnz
add
add
int3
aad
pop
lods
jbe
or
fstpt
jb
into
pop
cmpsb
add
aas
jo
adc
mov
mov
add
test
loope
dec
stos
add
popf
repnz
sbb
and
adc
add
sti
cmp
mov
add
add
dec
push
xlat
lock
out
pop
mov
add
mov
pop
addb
xchg
push
aas
imul
add
cmp
out
cmp
dec
fs
shlb
mov
add
add
faddl
push
lahf
insl
jmp
loop
xor
testb
adc
ds
pop
push
dec
xor
add
adc
jp
sti
ret
in
movsl
int
add
xlat
int
icebp
jg
cmpsl
dec
cmp
add
xor
out
movsl
xor
add
imul
outsb
sub
adc
and
or
sub
add
mov
add
add
jb
test
daa
push
loope
in
aaa
xor
dec
lods
add
jmp
push
lock
mov
neg
jge
jge
inc
and
daa
add
lret
add
or
pop
mov
add
iret
push
sub
add
and
add
add
cmpsl
pop
mov
or
jp
sub
push
add
enter
add
in
add
cli
mov
cmp
xchg
add
push
in
mov
add
push
add
jmp
mov
add
aaa
dec
movsb
add
shll
dec
dec
adc
xor
lret
notb
xchg
xchg
adc
push
jnp
push
jnp
push
lods
add
fsubrs
pop
test
sar
pop
cmpsb
add
xchg
test
add
shll
xor
neg
dec
push
inc
movsb
add
lea
add
idivb
adc
mov
loope
push
cmp
jl
loope
imul
mov
push
js
jo
jno
js
add
in
rolb
and
int
pushf
enter
jb
add
lcall
and
inc
out
add
xchg
out
add
loopne
dec
lock
inc
push
sbb
nop
push
adc
pop
pop
adc
mov
inc
and
add
dec
stc
loope
jnp
and
mov
xchg
in
pop
in
cmp
add
dec
sbb
js
outsb
and
mov
push
sub
add
sub
add
movsl
push
jg
xchg
sub
add
add
in
out
push
mov
add
fisubrs
out
ja
decb
pop
into
sahf
shr
insb
pushf
call
add
aas
subl
jae
cltd
sarl
mov
loopne
inc
je
mov
mov
sarb
repz
add
mov
add
push
add
push
cmp
add
mov
add
mov
ficomps
xor
sbb
push
add
andl
and
add
pop
mov
mov
mov
mov
leave
and
add
lds
mov
mov
loope
hlt
repnz
xor
add
cltd
and
roll
int
add
xlat
dec
mov
add
movsl
add
add
jne
add
gs
add
add
inc
xor
add
dec
test
add
sub
add
inc
rolb
add
scas
add
rcrb
std
mov
sub
arpl
add
mov
enter
aam
ret
sub
add
or
add
lock
aam
mov
mov
xchg
push
sbb
sti
mov
sbb
push
jns
mov
add
dec
in
add
push
aas
cmp
adc
insb
inc
dec
sbb
imul
add
or
stos
rcrb
test
push
add
ljmp
add
ds
scas
dec
sti
adc
dec
xor
add
jl
and
add
inc
add
sub
add
mov
add
add
lds
dec
test
sbb
test
add
iret
repz
hlt
imul
mov
add
stos
shlb
inc
adc
dec
xchg
xor
add
loopne
fstpt
nop
test
add
add
les
fsub
mov
add
or
add
or
scas
test
xchg
jns
pop
sbb
js
jle
mov
add
mov
add
dec
js
add
loope
add
dec
mov
ds
pushf
daa
xor
addb
addb
mov
add
pop
pop
movsb
add
jecxz
add
rcl
adc
mov
int
iret
mov
add
push
in
jae
add
and
pop
dec
shll
dec
dec
lret
mov
imul
add
loop
aam
add
xchg
bound
add
aaa
in
sub
negb
int3
addr16
cmpsl
scas
add
dec
mov
pop
mov
xor
adc
dec
cmp
and
or
add
add
mov
lahf
stc
rolb
orl
les
rorb
lret
mov
adc
inc
jae
cli
das
loopne
outsl
hlt
inc
mov
add
icebp
and
add
add
scas
add
sbb
mov
add
insb
daa
fistl
cmc
pop
sub
pusha
dec
mov
add
add
mov
add
sbb
stos
ds
and
add
sbb
popf
out
xchg
add
push
add
mov
mov
fnstenv
mov
mov
adc
mov
or
cmp
add
add
push
cmp
mov
pop
ja
lds
add
int
add
sti
sub
add
scas
cvtps2pi
push
lret
imul
adc
loopne
xchg
test
insb
sarb
push
add
mov
add
sbb
inc
push
adc
xor
push
iret
je
stc
pop
aaa
mov
ds
iret
incb
add
add
sarl
jo
jb
pop
pop
push
mov
add
test
test
add
or
sbb
sub
add
mov
xchg
out
outsb
xlat
xlat
outsl
sti
orl
add
into
jnp
add
mov
add
add
lock
and
push
fnstsw
add
xor
das
jo
loop
jp
sbb
dec
cltd
outsl
xchg
loopne
adc
mov
jmp
lods
add
add
add
pop
jb
cltd
push
or
add
in
mov
xorl
fiaddl
mov
pushf
fwait
hlt
rorb
add
add
outsb
jb
mov
mov
add
movsb
add
negl
das
hlt
pop
fmuls
movsl
cmpsl
nop
mov
xchg
popl
gs
insl
cmp
add
jge
pop
sub
add
add
mov
add
xchg
inc
xchg
mov
test
add
inc
insb
jmp
add
sbb
mov
xor
sub
add
lret
test
add
pop
fildl
add
or
add
pop
std
insb
mov
add
imul
jecxz
ss
sub
add
sti
dec
add
sub
repnz
add
iret
mov
inc
insb
xchg
inc
test
add
dec
mov
xor
add
jbe
fistps
inc
mov
xchg
mov
outsb
add
add
add
leave
mov
add
pop
mov
fsubrl
mulb
les
std
dec
das
pop
sbb
sti
enter
or
inc
cld
sti
add
add
add
addb
mov
jmp
int
or
add
add
gs
xchg
outsb
pop
fucomp
out
sbb
adc
add
jge
add
mov
xor
rorb
fmuls
popa
lahf
shrb
lods
les
add
adc
inc
sub
add
adc
add
sub
add
xchg
cmp
adc
mov
scas
add
xor
xchg
pusha
lea
add
mul
aas
outsb
add
add
add
out
add
shrb
jae
imul
mov
add
or
mov
lods
add
adc
sub
add
add
test
sub
add
fldl
add
xor
adc
jns
test
dec
or
add
add
data16
scas
clc
lds
pop
call
pop
jo
dec
rcr
in
test
out
or
or
scas
add
dec
mov
add
call
add
cmp
add
mov
sbb
loopne
add
add
xchg
in
lock
dec
push
arpl
fiadds
add
push
and
sti
mov
jmp
fadds
cmp
push
lea
xor
add
mov
jno
aaa
mov
add
push
mov
add
add
lock
add
in
jo
jns
or
and
add
je
aad
cmp
add
push
pop
lds
add
pushf
xchg
adc
mov
add
inc
lret
adc
add
xor
outsb
mov
jno
mov
xchg
enter
inc
xlat
adc
lahf
mov
bound
mov
dec
hlt
outsb
out
add
mov
add
adc
fsubrs
add
cwtl
scas
add
cmpsb
add
xlat
mov
rorb
sub
add
push
mov
cmp
add
sub
in
jns
pop
int
mov
add
add
or
push
pop
and
add
add
movsl
leave
cltd
stc
push
xchg
outsl
les
nop
xor
mov
inc
mov
and
scas
xlat
ret
hlt
repz
push
adc
stos
xchg
jo
add
call
add
stc
popa
xchg
add
incb
xchg
mov
add
push
xor
and
add
jb
cmpsb
add
inc
and
add
jbe
dec
pop
shlb
add
and
add
movsb
add
int3
in
sbb
outsl
pop
mov
add
mov
add
iret
std
negl
lahf
aam
imul
lods
sbb
scas
cmp
xor
mov
mov
xchg
popa
ret
jnp
int
jmp
add
sbb
cmp
ret
add
mov
adc
push
add
add
or
add
add
iret
loope
xchg
add
shll
sub
add
pop
push
mov
add
mov
jp
or
add
push
jno
pop
fwait
push
call
or
add
lods
imul
lods
add
dec
mov
push
add
daa
repz
shrl
adc
loopne
add
dec
nop
js
xor
push
loopne
mov
add
and
add
sbb
aad
jmp
mov
xor
sbb
add
daa
adc
sub
cmpsl
jp
pop
shlb
add
call
call
test
clc
in
inc
push
aas
mov
xor
ret
sbb
addb
pop
jbe
adc
xlat
xchg
push
scas
add
jge
sti
cmpsl
push
cli
pop
mov
add
add
out
mov
cmp
or
add
mov
sbb
and
add
aaa
mov
gs
add
mov
pushf
pop
push
sbb
data16
or
add
andl
jmp
addb
pop
fisttps
adc
mov
push
sbb
dec
mov
js
stos
add
push
add
outsl
cwtl
mov
scas
jns
push
lret
mov
xlat
scas
add
cld
mov
add
fdivs
xchg
xor
aam
inc
xlat
cmpsl
dec
push
mov
loope
adc
iret
addb
pop
insb
loopne
add
clc
mov
add
dec
mov
or
mov
add
add
add
test
add
sub
add
add
das
push
rcrl
or
add
jmp
adc
sbb
jmp
add
lods
add
push
add
dec
push
insb
call
add
pop
xor
add
adc
cmp
add
sbb
push
pop
xchg
and
add
test
xor
pop
cmp
shll
fldcw
or
add
addr16
mov
add
add
dec
inc
addr16
nop
xchg
out
cmp
xor
cmp
aad
hlt
add
add
stos
add
jge
sbb
les
sbb
dec
mov
dec
pop
xor
xchg
add
add
mov
add
add
jle
push
add
mov
addb
movd
jae
adc
out
outsb
pop
insb
mov
mov
or
sub
add
add
adc
outsl
dec
or
add
out
outsb
mov
or
ds
push
add
and
push
mov
add
xlat
loopne
call
add
dec
or
add
mov
add
add
mov
push
shll
mov
jns
and
add
add
mov
inc
ret
sahf
xchg
fst
dec
jae
push
lahf
mov
mov
add
add
mov
shrb
hlt
and
add
cmovs
dec
pop
hlt
or
fidivs
cltd
jmp
pop
daa
mov
add
inc
neg
jecxz
cwtl
xchg
pop
jp
add
popf
pop
ja
pop
push
jnp
add
xchg
or
mov
cltd
or
inc
dec
movsb
add
fwait
stos
add
sar
and
add
add
add
mov
shrl
hlt
loopne
cmp
push
pushl
lock
mov
add
in
call
xor
xlat
jns
mov
add
dec
imul
add
push
add
mov
incb
gs
leave
xchg
ss
jle
mov
add
lahf
mov
add
add
cmp
lds
hlt
dec
xlat
push
push
mov
add
lcall
pop
pushf
call
lret
out
enter
adc
in
mov
mov
jecxz
add
jmp
outsb
jne
bnd
cltd
loope
arpl
stos
add
je
pop
sbb
fidivrs
jns
ja
dec
lahf
and
add
add
cltd
sub
add
push
ja
sbb
popf
lret
cltd
jnp
pop
pop
jbe
leave
jle
mov
adc
loope
sahf
in
popf
dec
test
add
call
shlb
mov
mov
movsb
add
dec
cmpl
dec
pop
sarl
dec
dec
aad
add
in
js
add
add
dec
dec
lock
pop
insb
xchg
mov
jo
jg
add
fistl
les
std
loopne
loope
nop
mov
imulb
fldl
add
sbb
subl
into
jecxz
addr16
in
pop
mov
call
sub
add
add
clc
pusha
fisubs
add
leave
shrl
inc
scas
add
adc
pop
and
fwait
inc
dec
jmp
jae
aas
lret
jo
add
sti
outsb
cli
xor
mov
sub
add
push
arpl
outsb
shrl
add
mov
add
mov
add
add
ljmp
inc
cmp
fdivl
add
mov
xchg
pop
add
ds
movsl
in
fidivrl
mov
pop
mov
aas
addr16
ja
cmp
add
lds
daa
icebp
sbb
add
xchg
pop
iret
int3
pop
mov
jns
leave
push
adc
cmpsb
add
aaa
inc
push
lret
pop
add
add
fdivrl
je
dec
gs
iret
pusha
inc
push
dec
push
and
add
inc
sbb
pop
js
cltd
inc
rcll
xchg
or
add
inc
jbe
push
mov
adc
xor
vcmppd
lds
add
and
add
adc
push
add
mov
mov
shll
add
add
add
enter
fnsave
and
adc
fstpl
add
lret
and
test
ljmp
out
mov
aam
add
mov
daa
into
pop
or
add
mov
mov
xlat
movsl
push
xchg
addr16
xor
cmc
lods
aaa
jo
leave
or
lods
add
sbb
insb
jmp
pop
add
and
jb
mov
inc
adcl
xlat
dec
add
add
test
add
enter
dec
vcvtps2pd
mov
xchg
decb
cwtl
pushl
or
add
and
add
cmpsl
jns
xor
cmpsl
add
jl
add
repnz
in
and
add
pushf
adcl
pop
mov
fmulp
popf
daa
pop
push
int
dec
test
add
jg
insb
or
add
add
ja
pop
leave
or
add
outsl
and
add
insl
jle
mulb
lahf
cld
nop
test
dec
jp
psubb
or
add
loopne
sbb
xchg
mov
pushw
add
lds
icebp
cli
cmpsb
add
add
add
add
ja
xchg
xlat
xor
mov
jl
mov
add
xor
je
fwait
pop
mov
jmp
dec
or
add
xor
mov
or
add
loop
mulb
xchg
in
out
scas
jae
sub
add
cli
jnp
fstl
add
add
pop
fs
sbbl
push
xchg
push
add
fisttpl
add
sbb
xchg
mov
push
in
cld
insb
fs
ds
xlat
add
pop
jne
and
xchg
mov
fstpl
aad
adc
stc
cmp
add
or
add
icebp
movsb
add
pop
stos
mov
call
fmul
test
add
add
or
add
push
loope
lret
add
add
hlt
push
fstpt
add
mov
popa
jge
xor
push
sbb
sti
dec
and
add
add
add
push
mov
add
sbb
outsl
mov
xchg
add
xchg
add
icebp
jecxz
fsubs
add
fsubrs
add
xor
xlat
dec
cld
xor
sti
pop
add
mov
add
test
add
hlt
lds
lock
add
pop
xchg
mov
push
xor
pop
nop
lods
add
repnz
subl
push
add
mov
add
add
jl
push
mov
jl
jecxz
mov
or
sub
add
pop
fnstenv
add
sbb
fbstp
cwtl
jo
cmc
notl
icebp
pminub
dec
dec
add
and
add
jnp
sub
add
push
jb
add
lods
fsubrp
lret
addl
or
inc
xor
add
ljmp
push
pop
enter
jecxz
aas
in
sub
add
mov
hlt
popa
xor
scas
dec
pushf
sar
add
pop
pop
js
pusha
call
stos
add
in
movsl
cmpsb
add
push
pop
push
das
push
negb
loop
add
mov
add
inc
adc
out
je
mov
add
add
test
add
int3
iret
addr16
cmp
clc
jno
mov
int
sarl
mov
into
addb
pop
cmp
sbb
lods
add
clc
cld
xor
scas
pushf
push
adc
in
in
sub
mov
ds
inc
scas
add
xchg
call
or
add
xor
mov
cmpsl
mov
add
pop
push
dec
xor
fs
push
sti
call
fisttpl
add
xor
pop
aam
add
add
xchg
fsubl
fldenv
cli
sub
add
xchg
push
xor
testl
jae
mov
add
stc
call
rolb
add
clc
scas
lock
jecxz
mov
call
mov
mov
mov
fidivrl
push
shl
addb
hlt
xchg
mov
xchg
push
pop
imulb
std
push
add
xchg
xchg
inc
adc
popf
adc
je
pop
mov
pushf
and
add
add
dec
mov
add
and
fsts
or
sahf
stos
pop
mov
lcall
or
packssdw
add
loope
int
add
mov
jmp
cld
mov
fsubs
mov
add
fcompl
pusha
shrl
lods
sbb
iret
push
shll
add
ret
add
add
mov
popa
adc
scas
add
repnz
sub
add
xlat
popf
mov
mov
out
add
cmp
add
or
add
orps
push
add
gs
add
lods
add
add
xchg
scas
push
rcrl
nop
mov
rcll
add
jp,pt
test
wbinvd
stos
add
add
mov
add
leave
mov
add
dec
cli
imul
add
test
inc
sbb
mov
sub
add
lea
push
mov
mov
insb
mov
add
xchg
pop
scas
add
sbbl
xchg
inc
pushf
lret
sub
push
lds
loop
push
mov
mov
fdiv
and
add
mov
add
or
add
add
flds
arpl
add
jnp
clc
sbb
mov
jl
adc
sbb
add
addb
push
add
aam
cmc
ret
mov
add
call
mov
sub
loopne
fsubl
lahf
test
add
pop
mov
movsb
add
add
add
lods
mov
jle
jl
jl
out
add
cmc
xor
pop
pop
push
cmc
std
out
test
add
push
popf
xlat
xor
add
loopne
test
insl
jmp
out
mov
push
push
mulb
add
sti
sbb
out
add
dec
jnp
push
sbb
xlat
mov
in
push
add
inc
test
or
add
mov
add
push
add
sbb
cmp
sti
pushf
in
push
stc
mov
sbb
in
stc
jo
fistpll
add
push
add
inc
add
add
add
add
and
add
cli
aas
push
add
sahf
sub
add
xor
add
in
lret
movsb
add
test
dec
call
popa
aad
sti
jecxz
packuswb
jmp
mull
fcomps
sub
add
mov
lds
add
mov
add
inc
jns
js
sbb
xor
pop
mov
add
lcall
std
cmp
shlb
add
mov
add
xchg
add
adc
xor
stos
add
addb
sarl
sbb
pop
fstl
mov
xchg
add
xlat
loope
mov
cmc
movsb
add
xor
lods
jb
rcrl
rcrl
push
cli
sub
ret
add
sbb
add
adc
xor
add
in
repz
add
jl
add
aam
jne
cmp
or
lcall
out
sub
sub
add
pop
push
sub
fcompl
imull
pop
loop
add
add
ss
hlt
pushf
jmp
addb
push
add
push
faddl
mov
pop
pop
cmp
in
mov
add
xchg
mov
into
mov
cmp
pop
sbb
xchg
inc
lret
rorl
mov
mov
mov
jns
clc
add
pop
clc
mov
add
lea
iret
and
add
nop
loope
test
add
add
cmp
lds
add
mov
das
or
cmc
xchg
hlt
test
add
or
ljmp
arpl
lods
loop
mov
add
mov
add
push
mov
add
inc
enter
and
add
sbb
ficoml
cmc
add
add
repnz
insb
cmpsl
push
push
add
xor
pop
lea
add
sbb
dec
lret
mov
data16
push
xor
or
add
add
dec
push
ret
add
sbb
lcall
add
jno
loope
xchg
sbb
mov
cmc
push
add
clc
mov
lcall
aas
jecxz
jnp
inc
jp
lods
or
add
icebp
adc
sbb
add
inc
aaa
sbb
fs
adc
aad
enter
add
jg
outsl
bts
repz
out
jae
or
add
add
add
add
add
cmp
push
ja
in
mov
add
mov
add
or
add
push
test
add
add
addl
mov
add
add
movsl
cltd
addr16
add
leave
pop
sub
inc
sub
push
add
add
add
dec
and
add
std
dec
jo
lods
add
jmp
inc
sbb
add
adc
inc
ljmp
push
add
out
mov
add
fisttpl
xchg
add
rcrl
add
add
mov
sub
add
pop
shr
or
add
push
add
cmp
or
add
shl
xchg
movsb
add
cmpsb
add
xchg
les
add
add
test
add
enter
or
add
loop
or
add
add
loopne
and
add
insl
add
adc
ret
jge
out
jle
or
mov
add
mov
add
mov
add
hlt
out
xchg
jp
cmp
and
add
mov
add
dec
sub
add
pop
fldt
add
lret
jne
push
xchg
lcall
mov
cmp
add
add
mov
add
mov
add
push
add
adc
and
add
roll
add
pop
insb
movsb
add
dec
addb
fiadds
sbb
leave
hlt
inc
push
sub
add
mov
add
mov
add
fistpll
add
add
outsl
add
ss
push
adc
mov
adcl
push
push
sub
arpl
add
mov
ret
and
add
js
fdivl
aad
xchg
mov
aad
pusha
popa
gs
add
add
and
add
xor
fsubrl
das
push
sub
in
xor
out
fimull
lret
out
or
sbb
testl
sub
add
mov
addr16
add
jge
ja
test
add
mov
addb
add
add
sub
add
add
ficoml
lods
loopne
mov
sub
xor
fcompl
cmp
xor
add
sub
add
add
aaa
jae
dec
inc
js
xor
insb
movsb
add
movsb
add
pop
icebp
stos
add
dec
dec
ret
add
cmpl
divl
add
enter
fldcw
add
repz
push
add
jle
jo
into
sahf
popf
inc
out
les
add
xor
add
dec
in
inc
pop
lock
loopne
add
stos
add
mov
add
inc
sub
out
add
nop
std
inc
jb
daa
int3
push
xor
ret
cltd
push
icebp
in
mov
outsl
test
add
shl
lea
inc
dec
imul
shlb
sti
xchg
jl
mov
add
mov
xor
inc
pop
sub
add
fs
push
jge
dec
adc
add
enter
movsl
fwait
test
add
add
pop
or
and
fnstenv
cmp
xchg
in
xchg
cmp
mov
lret
xor
dec
fimuls
add
stos
dec
sahf
adc
pushf
aas
int
mov
xor
punpcklwd
sti
and
xor
mov
dec
inc
add
cmpsl
jns
xchg
fdiv
test
fadds
add
gs
lods
mov
add
lahf
jb
pmaxsw
pop
insl
push
jns
jne
ljmp
add
cltd
nop
jg
push
inc
jecxz
mov
add
xor
dec
xchg
inc
xlat
mov
add
out
mov
add
mov
fucomp
push
sub
xor
adc
test
add
jbe
mov
mov
test
add
xor
into
sub
je
neg
ds
jb
add
loop
fs
ja
mov
fcom
add
add
dec
push
mov
bound
sub
add
pop
pop
mov
aam
add
add
adc
mov
scas
mov
add
mov
mov
add
jns
add
and
add
cmp
mov
add
outsb
mov
addb
jno
ds
aas
in
adc
movsl
ret
pop
ss
mov
add
add
add
lcall
add
iret
xchg
pop
inc
add
mov
je
sarl
vmovsd
adc
test
iret
add
dec
aam
or
add
mov
add
test
jae
xchg
add
xor
mov
add
stos
add
pop
xchg
aam
outsb
rcrl
jp
cmp
insb
mov
add
add
mov
and
add
into
popf
scas
cli
ret
dec
cmp
das
jns
mov
push
jmp
add
push
lods
add
jge
pop
jo
xor
mov
inc
push
push
or
add
add
shr
xor
add
pop
push
mov
inc
inc
pop
mov
rclb
iret
decb
jg
xchg
mov
enter
aas
pop
cmpsl
adc
aam
push
xchg
xchg
push
add
add
addb
add
add
add
push
jnp
pop
aaa
push
xor
mov
add
int
aad
fwait
jns
shrl
add
xchg
inc
test
add
add
jp
pushf
and
add
mov
ss
pop
lret
sub
add
and
push
adc
popa
lock
icebp
notb
mov
in
enter
adc
lock
adc
add
mov
add
add
xor
loopne
add
sub
add
add
and
add
movsb
add
inc
mov
roll
add
mov
add
adc
jge
cmp
test
add
rorl
insl
jno
add
mov
add
fwait
loopne
add
bound
daa
inc
mov
xchg
and
add
jb
sub
add
lea
cmc
sbb
cltd
hlt
mov
into
je
add
scas
add
sbb
add
mov
sbb
mov
mov
add
add
mov
test
leave
add
mov
aam
add
insb
jne
push
mov
add
adc
inc
mov
add
add
loopne
loop
lret
outsb
or
add
cmpl
jne
aad
add
nop
inc
xchg
add
mov
add
ret
rclb
add
add
scas
jg
add
adc
and
outsl
mov
loop
adc
icebp
cli
lret
ret
ret
push
jne
xchg
pop
mov
add
ror
xchg
pusha
mov
add
int3
popa
test
add
push
jge
xor
cmp
add
gs
ja
addl
add
cltd
xchg
outsb
cmpsb
add
out
push
pusha
ficomps
test
notl
scas
add
jmp
lahf
outsl
pusha
jb
cmp
push
cwtl
ret
notb
sbb
aaa
mov
push
add
adc
aas
or
pop
push
cld
out
nop
pop
rol
cmpsl
add
inc
outsl
cmpsl
cwtl
imul
add
insb
imul
inc
out
xor
add
lret
clc
rclb
cmp
push
add
and
add
add
fsubrs
xor
cmp
add
add
cmp
scas
mov
call
push
pop
in
add
xchg
das
sbb
cmp
add
mov
push
rol
dec
xchg
fbstp
add
add
lds
jo
and
dec
pop
push
stos
add
shrb
mov
add
sub
add
js
lock
cmpsb
add
fs
cli
push
shlb
and
repnz
jo
sti
arpl
add
cld
fildl
and
jne
dec
cmc
inc
ficompl
addb
imul
int
hlt
fucomi
and
add
ds
jnp
add
lods
add
call
add
mov
into
js
add
xor
arpl
imul
ret
inc
xor
pop
sub
pop
std
int3
pop
xchg
mov
add
add
daa
inc
out
jp
dec
and
imul
hlt
push
clc
or
clc
pop
add
add
add
loope
fadds
or
add
add
inc
loop
mov
mov
inc
rcrb
js
call
add
pop
pop
or
jmpw
cld
or
add
loop
lret
add
and
add
add
xor
dec
inc
repnz
cltd
push
shlb
adc
sbb
popa
imul
test
add
adc
xchg
add
test
add
add
nop
mov
add
or
lret
mov
add
decb
xlat
dec
popa
xchg
mov
add
adc
jmp
pusha
data16
mov
aas
xchg
jne
jecxz
add
sub
pusha
mov
mov
and
testb
add
add
fwait
daa
xchg
sbb
jl
dec
fcmovne
xor
scas
cmp
add
sbb
push
add
sahf
pop
cmpsb
add
mov
out
add
nop
test
add
lahf
or
xchg
out
pushw
add
out
mov
or
pop
jne
lea
fstpl
rcrl
add
andl
add
lret
bound
jns
and
std
xchg
jge
popf
and
add
mov
dec
les
cwtl
cmp
outsb
adc
cli
cmp
inc
scas
xchg
das
push
jmp
add
xchg
lods
ret
lods
pop
mov
mov
cmp
clc
mov
add
inc
mov
pop
cli
mov
sbb
add
ja
mov
test
icebp
mov
in
add
pop
mov
add
aas
sahf
lods
pop
fs
add
cmp
sbb
aas
ljmp
add
fwait
mov
imul
add
or
mov
add
jne
inc
mov
add
mov
add
cmp
add
jo
into
fsubrs
add
dec
out
lds
cli
sub
add
push
lahf
lea
add
shrl
or
into
push
movsb
add
les
mov
add
add
sub
add
adc
or
add
jp
fcompl
sub
bound
into
pushf
rcll
test
add
add
push
outsb
jmp
lret
lock
sub
cltd
push
je
lahf
and
and
add
ds
hlt
popa
mov
jle
jge
push
mov
adc
xchg
test
xchg
mov
dec
bound
push
lahf
popa
sbb
lods
add
js
pop
and
add
add
fwait
jl
clc
fwait
aam
jno
sub
add
hlt
aad
pop
mov
jnp
push
hlt
aaa
loop
inc
nop
add
add
test
testl
pop
inc
pop
cwtl
mov
sub
add
scas
xor
pop
test
add
js
dec
and
add
repnz
fsubr
icebp
pushfw
xor
shl
add
fidivrs
ret
add
mov
add
adc
js
ljmp
add
roll
jg
movsb
add
lret
xor
ljmp
jmp
add
imul
ss
les
insb
pop
daa
rcrb
lds
rorl
add
addb
or
pop
mov
add
sub
add
xlat
jg
stc
jb
div
mov
cmp
add
mov
rcrb
add
inc
pop
xchg
pop
icebp
xor
xchg
cmp
sbb
xlat
cltd
repz
cmpsb
add
xchg
jns
in
inc
addr16
xlat
rcrb
sbb
push
js
mov
xchg
fsubr
jns
pop
push
add
out
inc
aaa
sub
add
add
adc
aas
mov
daa
mov
shlb
ret
fsub
mov
mov
add
pop
and
pop
adc
or
add
push
scas
mov
add
add
mov
jl
push
mov
leave
sahf
dec
outsl
jb
enter
lahf
repz
adc
lcall
pop
mov
add
cld
cltd
pop
cmp
sub
add
jne
adc
pop
inc
or
pop
sub
add
dec
or
add
and
add
arpl
add
int
out
je
add
add
out
jns
loope
aam
mov
leave
adc
sbb
cmp
adc
add
pusha
jle
mov
push
add
add
lods
rorl
push
add
cld
mov
add
pop
in
mov
push
xchg
cmp
push
sub
add
add
push
mov
inc
mov
add
loop
fstpt
jne
jae
pop
fisubrs
adc
add
xor
jne
and
add
push
add
or
mov
add
lock
loope
lret
push
push
loope
mov
xchg
mov
mov
shlb
loopne
fwait
insl
push
sbb
or
add
add
sbb
jecxz
imul
or
xchg
add
sbb
add
cmp
fcomps
xor
rorl
lret
mov
repz
mov
lods
dec
mov
add
add
lcall
add
jmp
mov
and
mov
adc
add
dec
mov
mov
cld
adc
or
bound
subl
in
fsubl
clc
dec
pop
push
jns
arpl
test
add
fwait
les
add
pushf
pop
add
add
sub
sub
add
jae
nop
xchg
testl
add
mov
roll
add
push
repz
and
add
or
add
cltd
inc
xchg
mov
add
lret
hlt
ret
clc
and
xchg
cwtl
aaa
mov
add
loopne
mov
jbe
pop
and
adc
mov
mov
add
add
push
jo
jb
hlt
xor
fwait
mov
xor
int
mov
pop
iret
fistpl
add
and
add
add
add
fstl
mov
push
add
mov
mov
add
pushf
push
lods
add
cmp
add
dec
xchg
aad
cmpsl
je
jp
sbb
insl
pop
sub
add
jp
fs
leave
add
jmp
stos
add
gs
sahf
stos
add
mov
push
dec
xchg
lcall
jb
pop
push
push
movsb
add
jle
add
inc
push
shl
fdivl
ds
pop
pop
in
sbb
add
jge
add
cmp
mov
movsb
add
push
pop
pop
mov
and
add
arpl
add
jno
sbb
cwtl
in
xor
cmp
mov
mov
sbb
add
or
aas
popa
mov
add
adc
pop
xchg
sbb
test
add
sbb
jle
js
dec
mov
addr16
push
mulb
ror
add
sub
add
add
std
cmp
clc
imul
enter
pop
sub
add
add
xchg
add
jbe
add
or
ja
mov
mov
add
jbe
mov
repnz
cld
xchg
add
jno
add
mov
add
push
dec
inc
push
adc
push
pop
ret
in
inc
xchg
sub
jo
ljmp
jb
add
gs
xor
xchg
add
push
add
push
jmp
sahf
and
or
inc
cmp
jo
loopne
xchg
outsl
aam
push
loop
insl
je
push
jne
lret
mov
add
stc
mov
sub
add
mov
test
add
les
js
inc
insb
cwtl
xchg
cld
mov
repnz
add
fsubrs
lahf
add
add
and
add
xor
lock
add
daa
and
add
mov
test
add
lods
add
les
and
jge
adc
sub
add
jno
add
cmp
call
xchg
lea
mov
add
mov
or
add
add
lods
add
hlt
lock
addb
mov
add
add
add
jo
sub
add
cmpsl
mov
aas
into
repz
cmp
call
add
add
add
add
lods
add
jle
imul
and
add
bound
sahf
lret
jl
add
sbb
sbb
xchg
cmpsb
add
shl
and
add
pop
loope
add
sahf
mov
add
lea
insb
inc
dec
test
sub
add
mov
or
vpmaxub
add
add
insl
cwtl
xor
add
add
mov
cmp
and
add
mov
add
mov
add
inc
inc
sub
mov
push
repz
push
js
adc
sub
add
outsb
cmpsb
add
je
mov
enter
pop
sbb
pop
mov
fnsave
xchg
cmc
popf
andl
call
sbb
mov
mov
les
int
add
inc
jmp
add
das
or
add
mov
add
imul
add
add
push
add
test
add
jle
mov
pusha
je
lret
loope
push
jp
mov
icebp
lcall
add
add
push
stc
pop
popf
sti
pop
lret
xchg
add
addb
push
xor
sbb
mov
add
add
dec
pop
ds
sbb
cmpsb
add
or
lds
add
mov
add
inc
mov
add
push
add
sahf
rorl
xchg
or
add
mov
add
cmp
add
mov
jp
sub
add
sub
scas
add
push
shrl
pushf
notb
push
loop
add
movsl
push
add
and
add
inc
xchg
xor
inc
or
add
imul
cmpsl
sub
add
outsb
imul
add
in
mov
jle
add
mov
mov
add
popf
push
stos
hlt
push
add
jl
xchg
outsl
mov
add
jo
add
add
jo
push
add
add
add
add
add
sbb
sbb
xchg
or
add
inc
test
movsb
add
push
mov
add
add
and
add
faddl
xchg
inc
and
add
add
aam
add
cmpsl
test
mov
add
js
add
add
repnz
fmull
sbb
leave
mov
add
or
add
clc
outsb
pusha
xlat
outsl
push
inc
stc
inc
lds
pusha
scas
add
arpl
add
add
popa
cmpsl
out
arpl
xchg
test
jo
mov
add
add
add
movsb
add
into
jb
ds
loop
inc
repz
lods
add
sar
inc
jp
push
cmc
stos
dec
outsl
stos
dec
inc
and
hlt
push
cli
mov
or
add
add
lds
imul
ret
add
jnp,pt
inc
test
add
adc
and
add
adc
mov
add
adcl
adc
add
int3
or
add
lcall
sti
cli
lods
add
je
movsl
fcmovnbe
mov
and
mov
push
imul
mov
cmp
movsl
push
cmpsb
add
sahf
pop
or
loopne
cli
daa
xchg
add
loopne
int3
inc
inc
inc
xor
add
add
adc
movsl
adc
add
iret
lock
mov
add
sti
pop
roll
add
and
sahf
loopne
nop
mov
dec
inc
mov
nop
xchg
push
fnsave
popf
or
add
xor
mov
test
pop
push
lcall
in
loope
add
cwtl
and
add
add
ret
mov
add
dec
dec
cwtl
scas
addr16
add
mov
add
ret
ret
jo
cmp
jmp
cld
mov
leave
inc
lcall
fs
push
add
push
sarb
negb
das
sub
add
std
and
add
dec
lods
aas
mov
lret
push
inc
popa
adc
add
mov
movsb
add
imul
xchg
rol
sbb
jne
sti
fisttps
fisubrs
add
and
add
xor
and
add
mov
jge
sbb
dec
mov
pop
stos
add
cmp
xor
jbe
fwait
addb
mov
syscall
pushf
in
loop
cmp
add
aam
or
push
in
add
add
xor
inc
cltd
addb
sub
and
sbb
nop
int
push
dec
jmp
sbb
in
push
outsb
pop
jecxz
add
mov
cli
repz
inc
mov
mov
push
add
push
add
insb
fstpt
sbb
stc
sub
xchg
cltd
fistps
rcll
or
mov
add
xor
add
push
pushf
cld
adcl
loope
sti
adc
add
inc
xchg
and
aam
mov
adc
sub
test
add
rorl
jl
mov
lock
gs
bound
fcomi
mov
mov
inc
jg
pop
sahf
outsb
stos
add
and
add
sub
add
jl
pop
xor
xchg
cli
aad
call
js
shrl
ret
xchg
sarb
repz
cli
fnstcw
lret
jl
ss
pop
stos
add
or
xor
mov
or
add
add
arpl
shlb
jl
add
push
add
or
add
add
xchg
jns
sbb
add
push
imul
fldcw
pop
movsl
in
pop
dec
inc
mov
ljmp
test
add
flds
cmpsl
mov
add
add
add
add
add
faddl
xor
mov
jmp
shll
cmp
outsb
cmp
cli
test
add
add
add
add
adc
fisttpl
xchg
add
add
add
stos
add
push
add
add
repz
ret
ss
fistl
mov
xchg
adcl
mov
xor
add
mov
xchg
roll
jns
add
add
out
in
ret
je
sahf
pop
pop
inc
fcmovne
push
jb
hlt
int3
jmp
add
sub
leave
sbb
xor
movsb
add
jo
dec
xchg
add
test
mov
and
add
sti
in
mov
add
pop
inc
scas
sub
push
add
mov
adcl
fwait
inc
js
mov
mov
inc
ds
shll
mov
sti
push
rcrb
loope
pop
mov
xchg
jp
add
pop
fwait
out
sahf
inc
in
out
inc
fcoms
icebp
mov
cltd
pusha
cmp
data16
add
sub
mov
add
mov
inc
jo
jne
cmp
sub
xlat
fcompl
test
add
jl
ret
mov
iret
daa
mov
add
test
add
inc
and
add
push
nop
cmpsb
add
repnz
add
mov
add
les
mov
add
movsl
sub
or
add
add
or
movsl
addr16
adc
mov
or
lahf
nop
je
add
std
stos
lea
sbb
mov
add
loope
jmp
add
add
or
add
inc
cmpsl
insb
data16
stc
test
mov
add
dec
mov
pushf
pop
fcmovnu
mov
jg
lcall
inc
push
fdivs
sbb
add
fisubs
jns
cmp
adc
shl
cmp
rcrl
pop
push
add
lcall
cmpsb
add
jb
addb
mov
xchg
cwtl
and
add
negb
dec
adc
lcall
add
mov
add
push
add
adc
movb
pop
xchg
or
add
daa
jecxz
iret
insb
aam
add
and
add
dec
adc
mull
pop
shll
xrelease
add
negl
and
add
add
xor
mov
lock
pushl
cmp
push
jecxz
add
stos
loope
pop
ret
insl
sbb
fldl
jg
idiv
hlt
sub
add
inc
mov
insl
std
jp
outsb
mov
mov
insb
and
inc
inc
in
push
add
push
add
pop
sub
push
stc
in
ficoml
imul
add
sub
imul
inc
mov
add
add
dec
cmc
decl
mov
cld
adc
jmp
mov
add
jmp
mulb
repnz
sub
add
add
js
ds
call
aad
fisttps
add
cld
xor
push
push
jo
xlat
nop
ffree
or
add
dec
or
cmp
pushf
gs
jo
rcr
sar
scas
add
stos
add
inc
mov
add
fs
add
add
jmp
fcmove
fs
pusha
popa
jl
cmc
scas
mov
add
cmc
aaa
adc
imul
icebp
popa
xor
scas
pop
push
aaa
inc
jge
fwait
pushf
dec
sbb
dec
mov
sbb
xor
gs
xchg
add
jbe
add
jbe
inc
pop
lret
xchg
and
add
rclb
test
add
scas
add
mov
lret
add
and
add
or
add
fs
xor
fstp
xor
add
sub
hlt
sbb
push
push
add
int3
fiaddl
loopne
adc
add
add
push
cwtl
push
les
jb
call
jmp
push
out
outsb
sub
add
push
fs
add
stc
lcall
insl
pop
mov
add
mov
xchg
jb
mov
pop
jp
mov
ds
adc
enter
xchg
imul
add
scas
bound
or
stos
add
lock
out
xor
movsb
add
stos
icebp
push
stc
addr16
add
pop
movsl
dec
je
ret
push
add
pushf
cmp
mov
and
add
jne
fnstsw
add
sbb
add
jmp
sbb
mov
mov
add
outsb
bound
fmul
lds
dec
imulb
cld
test
int3
sub
mov
lret
mov
jmp
adc
pop
stc
aad
les
and
add
mov
sbb
and
mov
cmp
dec
mov
mov
mov
sar
push
add
add
add
cmp
inc
std
cwtl
push
inc
and
add
sub
add
call
add
mov
out
add
icebp
lret
xor
add
jge
in
xor
mov
add
add
lods
add
cmp
dec
call
pop
lods
add
pop
enter
cld
daa
cmpsb
add
dec
fcompp
scas
addb
mov
pop
pop
sbb
add
inc
das
pop
dec
push
lret
fsub
inc
test
mov
scas
repz
add
icebp
mov
mov
stos
push
lods
add
movsb
add
push
inc
cld
xchg
out
and
les
les
repz
add
repnz
add
sub
dec
cmc
rorl
mov
add
daa
push
push
xor
in
and
add
mov
add
insl
xchg
imul
fdivrs
add
xchg
out
xor
aas
push
mov
jnp
push
jo
mov
fcomip
cmp
and
dec
cld
outsb
sub
add
clc
xchg
or
add
xchg
sahf
aas
pop
mov
cmp
push
fidivrl
in
push
je
mov
add
sbb
add
adc
sbb
xlat
les
addr16
cmpsl
xor
push
add
cmp
or
std
pop
sub
mov
xchg
into
fistl
jmp
incb
icebp
add
add
push
add
sbb
add
and
add
int
mov
adc
add
pop
push
mov
add
stos
add
xchg
add
mov
lods
add
push
push
inc
dec
movl
push
dec
dec
sbb
mov
xchg
add
fwait
inc
inc
lock
aas
ret
orl
push
pop
add
lea
add
inc
pop
xchg
mov
add
popl
test
sbb
into
popf
sahf
add
add
add
les
outsb
xor
add
push
lahf
in
mov
jnp
movsl
dec
shrb
aas
dec
fnstcw
xchg
fldenv
loope
enter
and
pop
mov
clc
mov
add
sahf
cmp
add
jo
mov
add
adc
call
pop
sub
sub
add
flds
inc
xchg
imul
add
hlt
add
and
add
or
add
jno
cmp
add
mov
out
mov
add
add
jbe
ret
add
add
dec
add
gs
cmp
add
std
cmp
inc
ja
xlat
push
loop
aad
insl
adc
adc
add
in
adc
mov
push
rclb
jl
fcomip
dec
addb
call
and
add
push
pop
mov
inc
data16
add
push
fidivl
add
mov
add
mov
sub
test
fsubrl
call
add
pop
mov
fs
out
push
jge
jnp
jb
and
xchg
leave
sub
add
push
stc
mov
ret
cmp
or
add
push
stos
add
popa
mov
add
add
inc
sub
add
scas
push
pushf
jo
ds
addb
mov
add
add
sub
push
xchg
add
aas
push
add
xchg
inc
sbb
add
jmp
sbb
add
ja
adc
lods
push
and
mov
sbbl
enter
jecxz
add
int3
jae
addr16
add
int3
imul
add
add
push
jo
mov
movl
add
xlat
stc
or
add
jmp
mov
push
jmp
cmpsb
add
sbb
add
add
shll
std
loop
ljmp
ret
push
ret
lahf
cli
xchg
xchg
repnz
add
jns
jg
cmp
add
xor
add
test
bound
push
int3
sub
jecxz
jmp
add
add
rolb
pushf
push
jmp
or
or
add
ss
btr
push
add
inc
sub
add
test
add
xchg
add
popl
sbb
test
add
dec
stc
pop
aad
imul
das
dec
pushf
push
pop
cmp
cmp
sub
int3
mov
add
add
mov
leave
lcall
mov
add
inc
push
je
lock
sbb
jp
mov
mov
add
adc
add
jne
aam
cltd
inc
mov
stc
pop
ficoml
popf
pop
sbb
test
add
aaa
stos
push
std
addb
js
pop
icebp
fisttpl
hlt
scas
add
and
add
add
inc
lea
add
addb
mov
cld
inc
mov
inc
adc
fwait
aas
xor
add
pop
popf
adc
add
add
stc
insb
sub
add
push
daa
and
add
xor
add
mov
mov
dec
mov
add
xchg
inc
pop
lret
fldenv
add
into
ja
sub
add
in
daa
addr16
add
ret
adc
lods
add
mov
inc
sbb
sub
add
inc
nop
fiadds
adc
lea
out
fsubr
sub
add
pop
inc
jmp
jle
xchg
add
mov
sbb
cmp
jge
lods
pop
imul
mov
add
add
dec
roll
sbb
icebp
out
xchg
test
add
jno
add
adc
das
jns
add
shl
lods
add
mov
mov
mov
jns
add
add
and
dec
repz
pop
mov
ret
add
jo
fcomp
mov
jns
add
add
mov
dec
cmp
lock
push
xchg
xor
add
repz
outsb
pop
add
add
xor
sub
add
shl
rorb
xchg
lock
add
imul
mov
dec
add
daa
push
jp
std
sbb
cmc
sbb
cmp
mov
jl
enter
jae
inc
push
add
dec
ljmp
test
add
add
inc
or
add
add
push
add
xchg
add
add
inc
test
add
les
add
or
add
jns
test
sbb
add
add
add
imul
add
out
xchg
adc
add
add
cmp
add
ljmp
sbb
sub
add
imul
add
outsl
push
jecxz
lcall
test
add
test
mov
sahf
cmp
add
xchg
fistpll
inc
jno
add
xchg
jl
adc
sahf
xchg
in
mov
sub
jmp
add
jge
push
inc
out
add
out
or
pop
ss
divl
popf
mov
xchg
add
adc
push
loope,pt
add
into
imul
or
bound
ror
loopne
jne
add
sbb
sti
les
adc
sub
add
inc
sahf
and
jl
add
add
adc
adc
fiaddl
add
test
cmpsl
int
xor
leave
xchg
add
cmp
add
add
add
xchg
sub
scas
add
or
push
pop
xor
and
add
jno
jecxz
add
cmp
mov
ljmp
pop
xor
pop
jno
add
push
out
ja,pt
mov
scas
stos
add
dec
rcr
add
lods
in
mov
add
jns
cmp
out
xlat
pop
push
call
aam
mov
add
test
add
xchg
and
add
into
mov
add
add
mov
mov
add
add
sbb
mov
add
ret
dec
jb
pusha
stos
add
pop
mov
roll
out
and
les
repz
add
xchg
or
nop
iret
mov
into
pop
insl
int
shll
lret
add
test
add
add
lods
add
outsl
mov
add
mov
std
pop
mov
sub
add
add
into
jae
dec
xchg
fisttpll
icebp
enter
shl
jnp
add
ficomps
clc
push
add
popa
mov
adc
fcompl
mov
mov
pop
adc
movsb
add
push
jmp
jmp
pop
mov
fsubs
hlt
imul
xor
test
fstps
inc
adc
in
popa
notb
scas
add
shll
add
jb
out
dec
jbe
add
or
add
lcall
iret
fcomps
cmp
xor
inc
jl
lahf
js
stos
lret
test
push
insl
jne
arpl
add
mov
shlb
add
and
add
pushf
sti
jne
pop
loop
aas
ds
xor
insl
or
cltd
dec
ja
fwait
imul
mov
ss
mov
xchg
xchg
inc
sti
inc
push
lahf
sbb
dec
fcomp
sbb
frstor
bound
add
push
add
sbb
inc
sub
jge
push
mov
jg
add
aaa
addr16
sbb
fnstcw
fistpl
add
cmpsb
add
and
dec
adc
gs
call
add
daa
xchg
mov
das
shr
xor
and
add
mov
jno
cmp
mov
add
lahf
fcoms
jno
add
jp
repnz
ljmp
add
bound
mov
add
lds
mov
add
xchg
mov
mov
mov
inc
aam
daa
sbb
add
dec
clc
lret
adc
arpl
sub
jg
pop
mov
mov
add
in
decb
add
mov
add
repnz
dec
sub
add
outsl
mov
add
cmp
decl
mov
add
enter
jae
jne
scas
add
push
mov
leave
add
pop
aam
or
mov
pop
les
add
mov
stc
fcoml
mov
add
rep
aam
loopne
rol
jge
scas
add
xchg
aad
and
add
mov
add
xchg
push
or
cmp
je
sar
loop
add
and
sahf
out
fwait
lock
jnp
dec
mov
gs
aaa
and
add
jecxz
cmp
adc
jnp
mov
add
push
add
xchg
ret
cmpsl
aaa
mov
int
icebp
test
pusha
or
add
loop
imul
mov
add
fstl
pop
mov
cmp
jge
push
dec
ds
adc
repz
rorb
push
add
mov
mov
jo
push
imul
lods
add
xorl
mov
sbb
xor
jno
mov
add
add
inc
cmp
test
add
addr16
fs
dec
lea
pop
cmp
pop
mov
cltd
sub
add
add
imul
xchg
xlat
mov
add
je
fisttps
ret
call
mov
fs
je
scas
add
repz
pop
sub
aas
addl
add
pop
inc
push
add
lods
xor
call
xor
mov
dec
inc
adc
and
add
add
jo
sti
hlt
fnsave
add
out
jno
add
lock
add
popf
gs
jecxz
add
add
pop
lret
cmp
cli
xchg
imul
movsl
inc
add
add
cltd
jbe
add
add
les
mov
test
add
in
mov
pop
mov
xchg
fbld
sbb
cmp
mov
add
into
sti
cmp
add
push
add
out
mov
imul
pop
leave
fwait
shrb
loop
imul
popa
mov
add
lcall
or
add
sub
add
add
aaa
into
and
sbb
add
scas
or
add
mov
add
dec
out
jg
xchg
adc
mov
add
cwtl
mov
outsb
xchg
das
scas
xor
enter
cmpsl
inc
ss
pop
addb
xchg
in
push
hlt
into
mov
jno
je
cli
aad
out
ljmp
pusha
dec
addb
std
xor
and
add
aaa
cwtl
popf
sbb
adc
inc
pop
les
or
add
mov
add
cli
fldl
xor
add
add
mov
shlb
sbb
arpl
daa
daa
or
add
cmp
push
mov
test
add
ss
loop
addr16
mov
add
mov
add
xchg
aad
dec
mov
jg
lds
mov
add
push
lret
add
repz
aaa
sti
and
mov
in
push
fsubl
cmp
test
das
out
add
and
add
mov
xchg
add
dec
aas
out
in
push
push
pop
rorb
add
mov
addb
jle
inc
push
xor
pop
and
sahf
loopne
add
out
out
fiaddl
xor
dec
jns
xor
cltd
idivb
jns
les
out
shll
add
jb
sbb
or
add
rclb
inc
cmp
movsl
sub
shlb
test
lock
cmp
dec
xchg
daa
or
add
fadds
js
sbb
ds
jae
xor
int
insb
pop
add
add
add
call
push
add
mov
jmp
dec
push
or
add
jl
jns
mov
and
add
test
add
jmp
inc
addb
dec
clc
add
dec
data16
lods
add
loopne
adc
mov
add
inc
dec
add
sti
aam
xor
or
add
mov
rolb
adc
jae
jge
or
and
add
add
dec
clc
dec
in
xchg
aad
ds
mov
add
adc
fadds
mov
js
std
xchg
inc
shlb
test
add
inc
sbb
outsl
js
lret
adc
jo
jns
add
add
adcl
ljmp
repnz
add
lods
add
movsl
fcmovnbe
jp
and
mov
add
out
cmc
cltd
and
add
jmp
loope
xchg
loopne
add
in
push
add
cmp
xchg
add
cmp
cmp
shlb
add
add
add
std
std
outsb
test
out
and
add
mov
add
add
sbb
test
add
add
sub
popf
pop
insb
das
das
mov
aaa
or
repz
jnp
cmp
pop
xchg
pop
adc
icebp
mov
cmp
sbb
jp
js
fs
rorl
push
sar
push
out
add
add
popa
sbb
jno
loop
inc
sbb
push
sbbl
add
rolb
xor
dec
sahf
adc
add
add
add
into
ffree
sbb
xchg
adcl
add
scas
xor
std
push
add
js
cmp
inc
xchg
add
push
or
rclb
aas
aam
push
dec
jg
jl
and
add
mov
or
add
xchg
add
add
xchg
leave
or
add
orl
inc
rcll
xor
popa
and
add
inc
xchg
add
in
jle
fidivrs
jae
shlb
or
add
xchg
add
jbe
xchg
or
cmc
int3
jae
int3
pusha
mov
add
push
int3
xor
in
mov
mov
add
add
inc
mov
xchg
pcmpgtb
lods
xor
pop
data16
int3
mov
ret
adc
adc
enter
arpl
xorl
add
dec
or
xor
adc
hlt
int
inc
enter
xchg
pop
pop
out
imul
enter
xchg
out
xchg
cmpsb
add
adc
aas
mov
or
daa
jns
push
nop
call
sub
add
and
test
test
xchg
pop
sub
add
jo
push
scas
out
repz
cli
or
inc
outsl
sub
add
rol
je
int
add
push
or
add
add
add
sbbl
fdivr
clc
xchg
xchg
cli
xchg
insl
arpl
stos
add
and
popa
rcrb
lahf
ds
fidivl
xchg
fstps
test
cmp
jl
mov
inc
xor
and
in
jmp
mov
cmpsl
mov
xor
jmp
incb
add
sbb
loope
push
popf
xchg
dec
dec
xor
je
push
add
xor
daa
xchg
inc
out
sbb
adc
leave
jnp
pop
mov
add
or
add
mov
fdivs
aad
adc
test
add
mov
mov
fistl
jle
add
les
push
cmc
xlat
std
and
add
add
dec
xor
sti
stos
add
mov
add
jnp
inc
add
add
dec
jecxz
call
mov
add
and
dec
addb
gs
out
dec
lret
push
add
ret
push
add
and
lds
adc
add
mov
xchg
ljmp
mov
cli
shrl
xor
sub
xchg
stos
add
pop
and
add
arpl
js
sysenter
mov
fistpll
sub
sahf
jno
add
add
add
add
cmp
call
jb
mov
add
add
jno
jns
lret
ja
add
dec
vfrczss
add
pop
popf
ja
sub
jmp
data16
add
pop
adc
aam
icebp
daa
rorl
or
add
xchg
add
add
add
fnclex
jle
scas
and
add
add
sti
add
add
jg
jno
add
or
add
mov
add
jecxz
enter
sti
int3
loop
jb
push
pop
dec
cmp
gs
jecxz
test
pop
fwait
das
in
dec
push
inc
lret
aam
ret
lret
dec
test
add
jg
test
add
rcl
sbb
loop
jmp
push
xor
out
pop
xchg
lods
ja
fcom
popa
sub
enter
pushf
lods
xchg
in
shl
xor
xor
cmpsl
mov
mov
lcall
cmp
inc
subl
leave
push
testb
jmp
and
push
out
sbb
add
subl
add
dec
push
and
add
add
mov
arpl
inc
adc
mov
add
shl
cld
iret
push
add
ss
jo
nop
and
gs
movsl
xchg
outsb
pop
movsb
add
add
ljmp
sbb
add
push
mov
dec
mov
fld
aam
xor
add
push
mov
jg
mov
add
out
add
jg
vrsqrtps
sahf
jne
movsl
mov
mov
xor
add
push
mov
or
add
mov
and
psubusw
add
dec
mov
dec
clc
aad
je
add
mov
add
fld
ds
sbb
and
mov
add
xchg
or
adc
adc
add
mov
inc
push
repz
mov
add
lahf
add
add
fbstp
leave
mov
outsl
or
lret
dec
imul
xchg
mov
nop
lret
arpl
repz
add
sub
add
mov
mov
sarb
push
inc
aas
inc
adc
xor
add
add
and
and
mov
cmpsb
add
jns
jae
xor
stos
lret
inc
sbb
ljmp
nop
loopne
dec
or
imul
pop
pop
push
add
sub
add
pop
in
lods
add
mov
mov
xor
add
push
fs
pushf
mov
add
mov
add
or
add
pop
frndint
adc
cmp
xchg
add
adc
fwait
or
add
xchg
adc
dec
mov
push
je
sbb
xchg
pop
cwtl
addb
add
sar
add
jge
imul
push
add
cwtl
adc
or
add
lds
add
adc
add
add
push
add
or
add
addb
rol
pop
popa
in
mov
outsb
stos
mov
add
movsl
add
push
out
or
add
mov
xchg
add
rcrb
add
add
add
mov
outsl
sbb
fists
sahf
repnz
shrl
mov
add
in
mov
xchg
jg
add
mov
xchg
add
add
scas
add
repz
add
in
or
fsubl
add
cltd
adc
add
push
add
call
cli
test
lret
add
sub
add
scas
fstl
add
or
add
or
dec
pop
cmp
imul
ds
mov
jo
dec
loop
sahf
ja
mov
add
or
and
dec
sbb
aam
and
add
push
add
add
pop
stos
js
add
stos
add
jecxz
leave
in
push
xor
add
jl
add
repnz
bound
pop
mov
inc
push
jg
je
xchg
rcrl
sbb
int3
jbe
xchg
or
clc
jo
ret
cmp
cmpsb
add
ds
outsl
clc
imul
xor
out
fwait
lret
and
add
push
push
add
call
mov
add
mov
sub
add
cmp
add
pop
ss
les
add
pop
jo
mov
jecxz
loope
dec
out
or
add
adc
pop
xchg
push
into
xor
add
mov
cmp
mov
add
das
mov
rorl
add
iret
dec
int3
mov
add
je
into
pop
cwtl
iret
ret
xchg
ja
adc
sbb
push
add
dec
shll
scas
add
ss
mov
add
add
jb
cmp
inc
into
pop
dec
leave
add
divb
xor
nop
pop
cmpsl
test
add
jne
dec
addb
pop
cltd
daa
les
add
inc
loop
not
lea
roll
xchg
dec
mov
imul
rorl
bound
push
lds
xchg
add
and
sahf
add
add
add
add
aad
sbb
add
sahf
add
add
add
xlat
mov
out
inc
inc
mov
add
and
add
mov
xchg
or
add
dec
sub
add
cwtl
and
add
movsl
mov
int
pop
adc
xchg
leave
cmp
add
ljmp
nopl
aaa
xchg
jmp
mov
sbb
outsl
inc
insl
test
add
add
outsl
mov
add
adc
fwait
push
push
pop
aad
adc
add
adc
fsubr
and
dec
fs
jno
jo
xchg
lret
add
enter
adc
daa
jns
mov
add
sbb
jmp
adc
mov
add
hlt
arpl
jnp
cmp
add
outsl
in
xchg
imul
imul
add
sub
add
adc
push
jmp
push
mov
add
mov
add
adc
in
andps
pusha
ljmp
addb
adc
subl
mov
xchg
repz
add
adc
ret
push
xor
lds
in
cmc
mov
xchg
hlt
xchg
int
xchg
or
add
addr16
cmp
ss
rclb
out
mov
popl
xchg
fcom
ret
add
lock
add
push
jne
xchg
jne
add
add
mov
popf
xor
cmp
add
jo
mov
sti
pop
arpl
rcr
push
inc
mov
insl
push
adc
jnp
mov
add
xor
add
fldl
add
mov
sbb
mov
add
mov
add
add
add
add
in
fs
add
in
idivl
mov
xchg
add
cmp
aas
add
add
lret
add
movsb
add
add
add
sbb
add
xor
xlat
push
add
in
inc
imul
outsl
jecxz
mov
lea
pop
pushf
mov
sbbl
xchg
dec
mov
and
fwait
pop
ret
je
mov
shll
aad
cmpsl
inc
nop
fwait
xchg
adc
add
cwtl
xor
and
dec
sti
add
add
testl
into
xchg
add
adc
jg
adc
fwait
push
jl
lds
add
fcmove
dec
xchg
jecxz
mov
xchg
repz
cmpsb
add
jp
push
pushf
mov
mov
out
or
jne
xor
cmp
clc
push
jb
addl
sti
aaa
dec
mov
dec
daa
inc
je
mov
addr16
jo
add
je
cmc
outsl
push
sbb
jo
or
std
aas
cmovle
add
test
lahf
lods
add
mov
xor
popl
add
mov
push
xor
dec
cmpsb
add
inc
mov
adc
shl
jns
sub
shl
insl
mov
and
add
or
add
lret
fldenv
je
sub
scas
and
cmp
add
insb
xchg
mov
adc
iret
test
inc
imul
add
and
add
int
sbb
out
insl
push
fdivr
test
add
icebp
add
mov
add
add
dec
add
add
jns
add
push
push
fucom
out
or
aas
adc
mov
add
or
add
mov
add
aas
ds
imul
das
pushf
add
add
push
mov
add
imull
xor
outsb
insb
fsubrs
add
cmp
pop
test
add
add
cmp
ja
or
add
popf
cmp
insb
negb
add
xor
ret
dec
push
push
aam
and
add
daa
or
add
add
and
fimuls
enter
adc
dec
aad
xor
movsb
add
insb
push
add
jmp
ret
jle
pop
or
add
sbb
add
xchg
aas
and
add
pop
mov
rcrl
cltd
sbb
add
aad
scas
add
sti
cli
iret
adc
xchg
pop
decl
push
push
hlt
fsubl
insl
pop
bound
push
xor
add
xchg
add
add
les
std
loopne
fsubp
loope
sbb
add
movsb
add
mov
sahf
fdivl
add
sldt
add
cmp
xchg
repz
add
lgs
add
add
add
cmp
sub
add
pop
mov
test
add
lods
add
xchg
jle
add
add
cmp
add
add
add
int
adc
int3
lret
xlat
ja
add
mov
add
add
adc
lods
mov
add
arpl
add
fwait
call
and
add
xchg
loope
iret
aaa
jnp
adc
data16
inc
mov
add
in
cmp
or
dec
push
push
push
add
inc
popa
xor
sub
add
xchg
inc
jecxz
cld
imul
frstor
add
sub
xor
call
shll
lret
add
xor
and
add
xor
mov
mov
push
add
lahf
mov
add
sbb
das
xor
push
xchg
aas
jbe
add
mov
inc
mov
add
add
push
daa
lret
mov
jp
jbe
shl
cmpsl
jge
add
or
jle
jl
fcompl
sub
add
mov
ja
shl
rorb
subl
sub
dec
out
loopne
add
mov
add
jo
xchg
add
add
jl
pop
stos
cwtl
cmp
cwtl
cld
jg
scas
add
popf
sbb
addr16
or
add
add
cwtl
ljmp
xor
add
xor
push
add
adc
fisttpl
mov
std
ret
xchg
sti
mov
pop
mov
add
mov
in
push
out
add
loopne
mov
idiv
out
outsb
out
add
add
xor
mov
push
sbb
test
add
xchg
aad
inc
dec
nop
mov
add
lds
add
push
jmp
into
movsl
add
dec
sbb
cmp
add
mov
test
push
roll
dec
cmp
jl
aas
repz
inc
adc
jns
arpl
std
divl
pop
xchg
jle
stos
add
imul
xchg
or
add
lods
add
cmp
add
int3
mov
cltd
jae
adc
adc
add
lret
dec
lds
add
xor
stc
call
lea
pusha
mov
jno
inc
fisubrl
jecxz
inc
sub
add
dec
into
jp
mov
fisubrs
push
in
and
add
dec
jmp
cmpsl
lcall
add
xchg
add
stos
lods
add
sub
add
hlt
mov
add
add
out
push
mov
mov
pusha
ds
jp
sbb
add
fisubrl
mov
cmpsb
add
inc
aad
dec
outsl
shll
push
addb
out
adc
shll
or
add
mov
and
add
shll
sahf
cmc
sub
xchg
scas
addb
mov
sub
clc
mov
outsb
jae
xor
xchg
mov
cli
jno
push
mov
hlt
loopne
inc
lret
mov
push
inc
jg
inc
pop
lods
add
xchg
add
outsl
aam
popa
and
addb
sub
aaa
push
add
and
orl
add
and
add
negb
lods
add
dec
addb
rcl
movsl
les
jae
jl
pop
pmulhw
add
xchg
pop
mov
sbb
add
mov
movsl
out
xchg
mov
test
add
add
rclb
repnz
loope
mov
push
add
add
push
add
mov
push
pop
ficoml
ret
outsl
int
jae
pop
add
jmp
xchg
mov
sbb
push
add
push
cmp
add
dec
push
cmp
test
jmp
sarb
sbb
pop
js
clc
cltd
jmp
and
faddl
xor
and
sbb
ja
out
jg
mov
flds
lods
add
jle
pop
mov
mov
add
mov
mov
mov
sub
add
xchg
pop
adc
jo
add
cmp
jge
inc
or
ja
ss
mov
mov
add
jmp
add
jbe
pop
mov
push
add
adc
dec
sub
add
and
add
add
testb
add
addr16
hlt
jg
sub
add
flds
clc
lods
add
mov
add
adc
sti
clc
inc
mov
add
in
fsubrl
add
and
add
or
sub
add
mov
add
cwtl
push
pop
int
add
or
add
add
xchg
in
mov
sub
add
add
xor
insl
test
jmp
iret
cmpl
mov
add
add
in
lea
in
add
push
mov
or
add
sti
movsb
add
xor
adc
xchg
subl
cli
hlt
cmpsb
add
das
test
dec
sbb
adc
adc
jb
dec
stos
add
add
std
leave
fidivl
out
xchg
cmp
and
add
push
pop
xchg
mul
dec
ds
add
aad
mov
sti
fwait
icebp
cld
dec
jle
add
add
je
loope
dec
data16
iret
mov
std
push
inc
jmp
inc
imul
add
add
add
lahf
lret
je
outsl
dec
aas
std
push
pushf
cmc
mov
inc
dec
cli
aam
imul
add
out
add
adc
shll
add
stc
jns
push
or
add
pop
jo
std
sub
add
gs
in
pop
mov
sbb
pop
jl
push
adc
jo
mov
scas
add
xchg
add
add
add
subl
and
pop
dec
clc
repz
pop
rcl
aaa
pushf
adc
out
lahf
int
push
lods
add
push
push
clc
and
add
mov
add
dec
mov
add
add
out
aas
mov
add
jmp
cmpsl
popf
cwtl
xor
xor
push
or
ss
lret
cld
add
add
cli
xchg
stos
add
mov
adc
scas
mov
add
dec
imul
pop
loop
jb
xchg
xchg
mull
fists
gs
lods
pusha
out
pop
jge
fs
add
ds
mov
add
test
enter
cltd
cmpsl
pop
cmc
scas
jnp
or
add
dec
and
lods
sahf
imul
imul
sbb
mov
arpl
pusha
mov
jo
mov
add
add
pushf
rorb
add
lods
rcll
out
sarb
mov
js
mov
jae
or
jp
popf
cltd
add
leave
xchg
nop
into
popf
or
add
sbb
popa
pop
add
add
push
cld
or
pusha
test
add
fildl
add
inc
xor
mov
sub
outsl
ljmp
out
jno
mov
das
lds
js
add
in
cmp
cmpsb
add
shrl
ja
insb
sbb
sbb
add
push
push
add
or
add
xchg
sarl
imulb
add
js
out
or
add
pushf
sub
add
pusha
xchg
inc
or
xor
insb
out
inc
xchg
inc
mov
sub
add
js
xor
popa
push
add
insb
addl
aas
clc
add
dec
scas
add
xor
lods
xchg
pop
lea
daa
push
add
and
add
jb
add
arpl
xchg
push
sub
add
add
xchg
add
mov
pushl
dec
add
out
test
add
add
das
adc
inc
fsubs
pop
sti
mov
add
fcompl
add
aaa
sub
add
aas
cmpsb
add
sbb
pop
fsts
lahf
in
add
rcl
fs
repz
lcall
or
jg
mov
pop
adc
add
add
add
push
pop
fldenv
in
add
xor
daa
lret
inc
incb
add
dec
outsl
into
or
add
arpl
cmp
add
mov
push
fidivl
add
jns
inc
pop
out
out
xchg
repnz
add
int
enter
fistpll
ljmp
imul
add
mov
xchg
add
ljmp
add
lods
add
adc
ret
pop
xor
out
and
add
aaa
or
dec
mov
bound
rcrb
adc
sti
shl
cld
dec
popa
add
fucomp
addb
stos
add
push
add
sbb
insl
mov
pop
fisttps
ret
push
lret
mov
inc
lret
rcrb
and
add
add
mov
inc
dec
inc
mov
push
jp
sti
add
add
mov
add
aam
xchg
mov
dec
mov
shrb
fwait
daa
adc
mov
addb
mov
lcall
or
add
jg
add
add
add
outsl
mov
add
add
jns
or
into
fisubs
aas
std
ds
xchg
sub
fwait
and
add
in
rorb
hlt
jne
mov
out
orl
push
add
jge
add
mov
add
in
dec
push
das
sbb
in
mov
repnz
jb
add
push
jmp
dec
mov
add
stos
das
nop
sbb
sub
add
lods
jmp
fdivrs
test
xchg
imul
cltd
lret
add
inc
mov
push
pop
fwait
jnp
shlb
add
push
mov
jl
mov
add
sahf
push
add
add
cmpps
mov
scas
data16
adc
inc
push
add
sub
mov
pop
test
shl
in
ret
jno
mov
jne
jns
lret
popl
ljmp
push
jmp
test
scas
add
rolb
mov
cld
dec
add
das
cli
cwtl
call
add
push
mov
pop
std
repz
pop
shl
add
or
add
pop
xor
call
add
mov
test
shrl
push
jnp
cltd
sub
add
xchg
lcall
mov
test
mov
rcrl
inc
push
pop
das
hlt
xchg
adc
and
add
dec
rclb
add
adc
popf
lret
mov
and
add
push
das
xchg
push
sub
add
cmc
xchg
xchg
dec
sub
add
add
iret
add
xchg
and
add
andl
add
inc
dec
adc
sar
push
jo
jmp
add
add
xchg
pop
into
gs
dec
xlat
dec
mov
sbb
in
fwait
inc
add
rcll
aam
std
idiv
xor
xchg
and
add
xor
dec
inc
pop
push
xor
mov
addb
lcall
loopne
xor
mov
lret
iret
int
insb
and
add
fdivrl
into
outsl
jbe
jmp
add
mov
add
dec
scas
add
or
out
out
add
cmp
add
xor
mov
dec
cwtl
stos
add
pop
in
mov
xchg
sub
add
test
out
mov
inc
mov
dec
pop
mov
sub
add
clc
in
sub
add
dec
testb
cmp
leave
rcl
int3
cmp
and
mov
imul
xor
add
or
aam
adc
sbb
xchg
int
ret
pop
adc
aas
loope
adc
xchg
rcll
push
into
clc
daa
out
mov
jl
pop
and
add
or
jmp
jge
xchg
xor
test
add
cmp
xlat
sbb
and
add
fiaddl
add
roll
add
pop
mov
add
mov
add
inc
mov
pop
cmpsb
add
sbb
and
add
sbb
add
xchg
push
adc
pop
mov
add
mov
adc
fsubs
inc
pop
adcl
mov
add
add
add
mov
cld
fsubs
cmp
sbb
or
adc
test
add
mov
js
or
add
jmp
sbb
sahf
rorb
xchg
add
lahf
pop
mov
addb
clc
stc
push
add
lcall
push
incl
add
add
outsl
add
add
dec
fisttpl
push
cmpsb
add
cmp
dec
scas
loope
lock
sahf
into
push
xchg
cmp
jmp
test
add
push
fsubr
stos
add
pop
flds
add
dec
repnz
test
add
add
pop
or
add
lret
scas
lods
add
mov
sub
add
test
nop
repz
or
add
int
in
push
addb
pop
mov
jne
addb
mov
add
fwait
loope
add
sub
add
mov
outsb
ja
jns
mov
pop
scas
repnz
add
mov
aaa
ja
ja
xchg
jmp
repnz
add
add
cmp
pop
outsb
jle
lret
dec
lods
add
icebp
or
js
add
sub
add
cmpsb
add
fiadds
mov
adc
addb
push
arpl
or
add
call
add
add
add
push
lea
push
in
cld
cwtl
in
jmp
or
add
adc
dec
lcall
imul
jb
cwtl
lcall
inc
addb
dec
insl
and
insb
push
add
xlat
push
add
pop
adc
add
sub
add
cmp
imul
cmp
inc
testb
sub
add
mov
add
scas
add
dec
sbb
add
imul
mov
add
mov
out
adc
int
lret
movsl
lret
add
pop
fldcw
loope,pt
stos
add
lds
add
mov
inc
aam
cmp
xchg
out
add
ja
dec
or
add
ja
cmp
jne
imul
push
mov
mov
aad
dec
and
add
mov
add
add
cmp
out
fildll
xor
iret
imul
dec
pop
sub
dec
ret
or
std
add
add
cmp
and
xor
add
add
testl
add
mov
fsts
add
jmp
adc
lods
add
dec
test
push
jp
and
sti
jbe
mov
mov
push
add
daa
add
mov
jno
cmp
add
xor
add
ljmp
les
fs
dec
xchg
imulb
fmuls
arpl
add
stos
decb
xchg
into
mov
cmp
bound
aas
dec
movsb
add
stos
clc
test
and
mov
flds
jl
add
mov
add
enter
lcall
sub
js
dec
movsb
add
int3
jno
push
imul
sbb
add
lods
add
pop
int
add
loopne
jecxz
sbb
ret
out
test
push
mov
jno
mov
add
aas
cmpsl
sub
add
test
add
pop
jp
loope
and
mov
ljmp
or
add
dec
test
add
lock
jge
add
mov
add
jbe
cmp
xchg
scas
add
loope
mov
ret
add
out
xchg
pop
push
adc
sbb
dec
add
add
add
add
sarl
filds
add
cmp
cwtl
mov
je
cmc
xchg
or
add
add
out
icebp
inc
lds
push
stc
fdivl
cmp
dec
ret
mov
add
pop
push
sbb
push
dec
outsl
mov
add
rcl
daa
cli
in
xchg
adc
je
cli
mov
dec
adc
jb
popf
and
add
xlat
add
pop
inc
inc
fmuls
add
mov
add
mov
lods
xor
aas
push
lds
pop
lods
add
mov
add
movsb
add
loope
psrlq
popf
pop
sbb
add
push
dec
sbb
add
mov
add
sbb
and
jp
mov
test
add
or
add
xchg
jecxz
rcll
add
xchg
cli
sub
add
mov
leave
cmp
gs
push
inc
int
add
pop
cmp
pop
aas
inc
fwait
outsb
adc
stos
add
mov
cmpsb
add
add
aad
jae
xor
add
add
push
push
xor
push
sbb
loopne
add
mov
add
je
xchg
inc
add
add
loope
iret
int
dec
push
add
add
add
push
jmp
in
jb
add
pop
dec
cmp
pop
lock
add
adc
add
adc
add
rolb
clc
icebp
mov
in
dec
xor
outsl
inc
cmp
jae
lods
stc
cmp
adc
dec
js
popf
xchg
jge
notb
shrl
cltd
jg
movsb
add
mov
xchg
dec
stos
xchg
insb
cmpl
testb
std
clc
add
add
push
outsb
or
mov
inc
xchg
dec
ja
push
mov
cmp
jp
sub
add
add
or
inc
addb
call
fwait
jge
jge
popa
sub
jecxz
imul
add
jmp
add
inc
addb
or
sbb
add
pushf
fists
sub
add
mov
xor
in
inc
adc
out
cmpsl
push
movsb
add
shrb
or
je
in
pop
dec
out
mov
add
fstpt
add
mov
pusha
xchg
and
jno
sub
add
pop
jae
sbb
addb
push
rolb
mov
lds
sub
add
xchg
mov
mov
add
add
sbb
add
dec
sub
in
fcmovne
popf
pop
inc
push
inc
into
xchg
mov
or
add
shll
cwtl
test
in
mov
jg
mov
andl
add
add
cmp
mov
stos
add
push
jmp
mov
int
jne
addr16
xchg
inc
jns
hlt
and
pop
daa
xchg
out
ljmp
out
call
mov
das
cmpsb
add
or
add
das
movsb
add
stos
orl
sub
aad
add
aas
pop
xor
movsb
add
add
in
inc
ss
ret
inc
push
add
jb
inc
in
dec
xchg
ja
mov
add
sub
lcall
xchg
mov
sub
add
add
daa
mov
xlat
fimuls
fstl
scas
xchg
lahf
and
leave
push
push
fsubrs
pop
add
add
jne
add
pcmpgtd
add
dec
adc
stos
push
inc
add
add
add
outsl
cmp
dec
inc
inc
cmp
adc
add
loopne
fs
fsubrl
flds
movsb
add
mov
cmp
push
xor
nop
or
sbb
add
lret
jno
add
out
or
add
pop
xchg
imul
add
inc
mov
add
int
mov
lods
add
std
adc
hlt
int3
out
int
mov
add
push
stos
rorb
or
add
xchg
shlb
add
dec
xor
repz
jae
leave
and
lret
fcoms
movsb
add
ret
popa
push
push
ficompl
add
cwtl
jno
mov
pop
add
test
add
dec
lds
addr16
add
or
add
in
shlb
inc
fcmovb
jbe
lods
add
sbb
sub
xchg
shlb
add
scas
add
lods
jb
in
loop
loopne
xchg
xchg
outsl
or
add
pop
add
ret
popa
enter
cmp
shll
inc
mov
add
sbb
sub
add
movsb
add
bound
stos
add
fsubp
cmp
fdivrs
ret
jl
mov
icebp
imul
lahf
add
add
add
add
mov
add
xchg
fsubr
aaa
xor
mov
cwtl
das
ret
dec
add
cmp
and
data16
mov
popa
xor
dec
ficoml
add
xlat
xor
pop
jl
movsb
add
cmp
add
jmp
add
in
push
fsubs
add
movsl
mov
add
dec
bound
mov
xchg
add
add
sub
add
loop
add
arpl
and
add
jmp
xor
add
cmp
pop
mov
xchg
std
mov
add
mov
add
mov
mov
add
cmp
mov
data16
iret
jge
ss
fiaddl
shlb
xor
movsb
add
pop
mov
cltd
rcrb
add
scas
add
add
cmp
mov
add
mov
add
add
add
test
or
add
fcomi
cmp
and
adc
stos
fcomps
add
and
inc
test
add
fstp
out
mov
add
out
jns
pop
test
lock
fisubrl
xor
add
cmpsl
xchg
or
add
cmpsl
stc
ljmp
outsb
push
sub
add
icebp
pop
in
jmp
add
fwait
mov
xchg
or
add
add
mov
dec
pop
scas
imul
bound
clc
ret
frstor
add
mov
std
insl
imul
xlat
push
add
xchg
adc
push
outsb
insl
or
pop
leave
jbe
cmp
scas
inc
dec
dec
mov
add
add
testl
ss
sub
cld
push
jmp
add
fisttps
add
sbb
rol
push
or
mov
inc
mov
lock
in
shl
xlat
iret
or
add
pop
push
pop
mov
add
rcll
loop
cli
adc
add
repnz
mov
add
mov
add
lret
add
push
sub
add
imul
pop
xor
pop
xchg
push
or
in
dec
cmp
add
nop
lcall
shlb
das
testl
add
inc
test
add
sahf
xlat
xor
xchg
xchg
das
movsb
add
mov
add
jl
xor
fdiv
mov
fldcw
add
pusha
add
and
add
insl
ror
arpl
and
adc
cmp
push
pushf
sti
push
inc
dec
xor
repz
add
call
addb
repnz
add
sub
pop
dec
push
mov
add
mov
inc
shr
imul
loopne
mov
xchg
xchg
mov
xchg
add
divl
xchg
or
adc
or
add
add
fsubp
cmp
cmp
cltd
add
shl
push
jno
xchg
loope
daa
test
out
mov
xor
add
jg
mov
add
push
add
jb
sub
add
ds
daa
ja
loop
fldcw
jne
cltd
mov
pop
jle
sub
iret
push
pop
pop
sub
add
lods
add
lea
cld
mov
dec
out
jmp
mov
add
add
push
add
pushf
mov
sbb
stos
add
cmp
or
push
lahf
or
add
push
sbb
add
push
cmp
inc
jmp
add
inc
jne
mov
lods
idiv
popa
jne
add
fwait
pop
insb
cltd
adc
push
add
lea
mov
fnstenv
iret
mov
out
mov
pop
into
in
or
or
pop
mov
add
cld
cmovnp
pop
jo
pop
mov
add
adc
mov
imulb
lock
jecxz
mov
cmc
cmc
xchg
jle
into
movsl
data16
and
add
dec
leave
js
mov
sbb
out
adc
add
dec
xor
pop
dec
out
lock
scas
add
ja
jne
and
add
mov
jae
add
dec
cmp
popa
lret
in
jae
into
in
add
out
repz
push
pop
jbe
dec
mov
add
test
xchg
mov
sub
jmp
push
cwtl
stos
fstpt
add
icebp
mov
add
pop
sub
add
add
add
pop
test
add
idivl
sbbl
mov
pop
je
xor
add
int
add
jmp
cmc
mov
add
sahf
aam
xchg
inc
mov
add
add
addb
mov
mov
cmc
repz
inc
addr16
lds
popf
mov
add
inc
xchg
addb
mov
add
xor
add
add
mov
scas
add
jle
mov
jge
mov
add
pop
lods
add
jl
add
mov
add
imul
mov
add
rcl
mulb
pop
add
add
iret
roll
pop
jae
jmp
xchg
jb
test
add
cmp
push
add
out
dec
sub
add
add
cmpsb
add
and
add
xor
repnz
cmp
pop
inc
cwtl
data16
add
into
dec
shrb
dec
inc
dec
cmpsl
outsl
add
and
add
inc
jge
add
aad
ljmp
mov
cmp
jo
adc
mov
mov
scas
xor
add
aad
add
pop
int
add
dec
test
push
ds
xor
jle
add
scas
icebp
mov
add
out
outsl
add
cmp
test
pop
cmp
mov
add
push
les
add
inc
daa
test
add
sbb
sbb
sbb
push
in
cmc
mov
cmp
in
jo
repz
xchg
jns
push
add
out
add
cld
inc
int
int
jmp
fwait
arpl
lea
push
mov
jne
shr
nop
sub
loopne
add
fsubr
pop
outsb
and
push
add
mov
mov
rol
cmc
xlat
add
cmpsb
add
mov
push
pop
push
and
add
and
testb
push
outsl
stos
add
in
popa
sub
add
loopne
lock
push
lock
pushf
ss
and
in
mov
call
and
jae
notb
out
xchg
inc
addb
fdivrp
inc
arpl
test
js
pushf
fmull
add
aad
mov
jne
push
add
mov
add
ror
into
lds
mov
mov
add
imul
xor
add
imul
out
pop
jnp
add
outsb
push
add
or
add
add
mov
push
add
shrl
cmc
out
pop
ja
das
sti
lret
sbb
addb
pop
repnz
add
inc
inc
push
inc
stc
inc
sahf
fxch
push
inc
mov
mov
outsl
jle
fistpl
scas
ret
xor
push
addb
xchg
fildl
add
movb
mov
dec
data16
mov
push
lcall
adc
add
add
add
and
push
jnp
fnstsw
mov
add
add
pushf
pop
adc
lret
dec
lcall
dec
imul
in
add
or
out
mov
add
out
lahf
and
and
add
push
cmp
leave
nop
sub
add
dec
daa
je
add
add
add
pop
adc
mov
or
add
stc
ret
nop
dec
daa
pop
push
inc
and
add
lock
inc
ficoml
jp
inc
xchg
pusha
out
addb
int3
icebp
add
push
fstpt
loope
pop
sbb
jno
aad
mov
test
add
out
int3
add
enter
rcrb
jle
popf
ja
xlat
insb
and
add
pop
lock
sub
add
in
and
cmp
mov
xchg
pop
int3
in
addb
mov
add
add
std
and
mov
dec
ficoml
or
add
sub
add
xchg
and
add
add
fucomp
dec
data16
add
stc
pop
test
leave
push
dec
loope
add
bound
and
add
or
add
mov
cmp
jmp
add
pop
outsb
mov
loope
and
add
int
mov
lods
add
scas
insl
mov
in
ret
addb
lods
add
pop
pop
popf
shlb
add
jge
fwait
lods
push
adcl
push
dec
out
sbb
outsl
xor
fs
movsl
fsts
lds
push
or
fmuls
clc
cmp
mov
jo
imul
sub
add
add
stc
int3
cmp
inc
inc
fists
stos
std
cmp
ret
sub
add
pop
cmc
sbb
add
dec
lret
loope
cmp
add
push
add
ljmp
out
mov
insb
or
add
ret
pop
and
jae
lret
push
mov
lret
stos
dec
stc
xchg
sbb
pusha
xchg
lcall
mov
add
inc
js
or
add
mov
pop
sbb
adc
in
cmc
push
add
push
xor
shl
add
fnstsw
push
mov
rolb
cli
xor
clc
sub
add
add
int
data16
dec
mov
add
fsubs
add
loope
std
loope
add
mov
add
add
orl
insl
testb
jns
mov
js
add
cli
int
add
and
add
outsb
sub
jle
stos
add
popa
dec
mov
std
xchg
sbb
cmp
xchg
add
pop
sbb
fisubrs
sahf
stc
dec
lods
add
scas
add
icebp
scas
add
xchg
sub
add
add
cmp
lcall
add
mov
push
ss
adc
xchg
leave
push
lcall
lret
std
adc
inc
ret
in
adc
add
add
inc
jns
add
fst
mov
add
stos
jns
mov
enter
add
cwtl
cmp
das
jo
iret
leave
out
push
add
sbb
push
add
lods
add
cmp
cmpsl
mov
jns
push
sahf
sub
add
iret
xor
or
add
test
jnp
cmp
cld
mov
add
mov
xchg
push
dec
sti
jno
xchg
add
ja
dec
lods
add
jg
xrelease
add
add
xlat
hlt
jge
add
add
loopne
mov
add
adc
jecxz
stos
add
push
cmp
loop
daa
cli
xor
cmc
test
lods
add
stos
add
and
jmp
inc
stc
mov
or
add
in
repz
addb
pop
negl
aad
ja
hlt
cwtl
test
fidivs
rolb
and
mov
add
js
add
dec
xchg
lds
add
adc
add
xchg
fistpll
and
add
mov
aaa
movsb
add
mov
dec
fstp
loop
ja
mov
into
jle
push
xlat
aam
repnz
mov
inc
addb
sbb
fistl
or
add
mov
jl,pt
push
push
dec
in
xor
push
nop
je
js
mov
xor
mov
add
sti
fstpl
mov
add
add
add
aam
add
sub
mov
pop
imul
loope
into
cmp
test
add
mov
filds
and
add
sbb
pop
popa
inc
xlat
aad
push
add
ljmp
add
cmp
add
inc
mov
clc
adc
cmp
aaa
cmpsb
add
pusha
in
movl
in
lret
pop
lahf
sub
add
leave
sbb
sub
add
xchg
aam
push
push
sbb
sub
add
add
add
daa
or
fidivrs
stos
add
imul
nop
dec
or
add
jb
arpl
add
roll
sub
add
jmp
addb
add
add
test
add
sbb
bound
insb
test
jle
fldl
sbb
mov
add
mov
pop
fstps
lods
and
sub
add
pusha
fisubrs
mov
add
add
leave
rolb
add
mov
dec
int3
jp
pop
pop
movsl
mov
add
add
faddp
or
mov
xchg
rclb
sahf
push
cmp
push
addb
push
enter
add
call
clc
and
add
fucomi
icebp
idiv
int3
inc
hlt
mov
mov
add
sub
in
mov
add
push
push
fildl
jae
xchg
cmp
jmp
or
cld
xchg
fidivs
xor
test
add
add
lods
add
popf
incb
push
gs
pusha
scas
add
lea
flds
in
pop
adc
inc
jno
stc
push
outsl
and
add
adc
add
push
add
in
ljmp
pop
add
leave
push
test
cmp
xchg
aas
and
add
adc
add
add
xor
xchg
mov
add
push
sbb
daa
jno
shll
add
sahf
faddl
popa
pop
movsb
add
sub
add
dec
adc
out
std
jae
rorl
push
add
push
pop
nop
or
imul
cltd
rorl
cmp
lds
sub
add
add
nop
xor
cmp
add
test
add
add
enter
sbb
add
xchg
add
jge
ljmp
andl
mov
addb
mov
jge
mov
jo
enter
shrl
stc
rclb
jmp
xor
lds
add
fists
mov
push
leave
fdivrs
popa
sub
add
rcll
add
lcall
push
fsub
aaa
rcll
andl
cltd
jge
add
push
andl
pop
mov
addb
cmp
push
add
inc
cmpsb
add
sbb
lret
int
cmp
shrb
lcall
gs
sub
fucomip
add
shll
add
js
into
pop
push
ljmp
push
scas
add
push
add
aam
add
dec
out
fmulp
jge
les
ficoms
addb
or
add
fisubl
add
dec
pop
stos
add
stos
leave
shrb
sahf
mov
insb
push
sbb
fbstp
scas
add
leave
jbe
adc
push
pushf
lret
inc
xchg
pusha
sub
sub
add
jle
add
iret
pop
int
sti
ret
xor
stos
add
add
imul
add
or
add
add
mov
add
jecxz
das
push
fmull
and
push
test
sbb
addb
out
iret
fistps
xchg
push
ret
xchg
xchg
sub
add
jg
loop
add
adc
inc
jns
or
add
daa
pushf
inc
xor
add
dec
and
add
pop
xchg
and
sbb
adc
je
icebp
xor
sbb
nop
insl
imul
add
test
add
dec
add
add
enter
and
add
add
mov
add
sub
dec
cmpsb
add
inc
je
inc
jo
push
add
sub
pop
fucomi
ret
add
mov
add
mov
lods
or
add
add
jmp
test
add
mov
outsb
inc
daa
sbb
movsl
push
push
inc
dec
movsb
add
sub
add
add
rcl
or
add
cmp
jmp
fadds
add
add
add
repnz
dec
mov
mov
add
sbb
add
aaa
and
testl
jle
add
add
add
jecxz
enter
lods
fdivs
mov
add
test
inc
pop
and
add
add
stos
mov
add
sbb
mov
add
jp
mov
iret
dec
add
or
add
mov
add
add
jb
xchg
or
daa
cmc
dec
movsb
add
cltd
jge
dec
loope
movsl
lret
out
leave
mov
add
mov
mov
jl
cli
nop
mov
lahf
fwait
jns
adc
xlat
pop
popf
rolb
les
sub
add
mov
add
iret
dec
jp
jo
mov
notb
xchg
int
jmp
mov
add
jo
sub
ret
insb
fs
mov
pop
mov
mov
add
add
enter
addr16
dec
mov
add
arpl
cwtl
xchg
repz
add
clc
and
add
mov
imul
data16
mov
adc
dec
insb
in
cld
inc
jle
add
jno
cmp
inc
pop
icebp
aaa
ja
lea
push
xor
xchg
mov
add
add
add
mov
into
push
push
cli
cmpsb
add
mov
add
cmc
add
jnp
js
push
add
int
pusha
mov
xorl
add
xchg
mov
jbe
sarb
push
inc
sub
fmull
add
int
add
jo
push
add
or
add
add
into
test
in
pop
dec
inc
popf
loop
daa
or
add
mov
insl
stos
push
aas
in
jne
add
add
add
cmp
xor
test
jmp
add
jmp
ljmp
movsl
and
add
mov
xchg
cmp
push
idivb
cmp
add
inc
sbb
add
insl
add
add
fmul
rcl
sbb
add
sub
mov
mov
inc
repz
lea
addr16
dec
imul
mov
mov
call
fwait
lahf
mov
and
add
dec
mov
mov
add
mov
add
xor
cld
cmp
jns
pusha
add
pop
shrl
mov
test
add
in
or
pop
add
sbb
lahf
push
aaa
arpl
enter
int3
insl
addb
in
sbb
sub
add
sub
add
dec
mov
add
sbb
sbb
addb
xchg
insl
adc
mov
add
repnz
add
add
cmpsb
add
mov
and
add
add
add
mov
mov
inc
mov
sbb
cmp
stc
repz
iret
outsb
int
cmp
dec
cmp
push
sbb
add
ret
mov
add
call
stos
test
jge
xor
mov
add
inc
nop
or
add
in
shlb
adc
add
mov
pop
sti
shrb
ja
ja
mov
add
ljmp
add
adc
adc
add
addr16
hlt
shlb
leave
fwait
in
pop
jo
aas
ja
or
pop
test
stos
test
add
int3
into
and
add
push
jne
sub
aas
pop
cmp
daa
scas
mov
jbe
lods
and
stos
jl
lret
mov
sbb
dec
in
jg
jae
addb
ret
test
add
cmp
sub
add
rorb
xlat
mov
mov
mov
add
ret
movsl
inc
fs
fisubs
jl
mov
add
sub
ret
add
fisttpll
repnz
fiadds
pop
mov
add
addl
shl
fxch
xor
push
xchg
add
out
add
push
sbb
mov
pushl
sahf
pusha
stos
add
mov
inc
movb
push
add
mov
sbb
add
xchg
sbb
insb
mov
add
add
add
dec
scas
int
sarl
xchg
cmp
inc
dec
daa
cld
xchg
cmc
xchg
inc
jno
iret
cmpl
aad
popf
dec
test
mov
add
mov
test
add
push
cmp
stc
sbb
inc
mov
adc
test
add
dec
and
add
lcall
inc
jge
pop
hlt
add
add
in
js
pop
xor
xor
je
sub
add
xchg
cmp
xchg
in
xchg
out
add
lds
and
or
add
sbb
clc
aaa
fimull
add
fwait
clc
out
mov
mov
add
lods
sbb
adc
adc
sub
add
rcrl
cli
xchg
clc
cmp
add
sub
xchg
add
sarb
addr16
add
sbb
jle
ja
jge
fbld
sbb
or
add
push
insl
dec
and
pop
pop
xchg
addr16
and
ficomps
inc
fimull
add
pop
je
push
les
stos
add
mov
add
cli
hlt
dec
enter
add
inc
mov
or
add
and
add
fcmove
in
shl
movsb
add
push
inc
jle
addr16
mov
add
or
hlt
xchg
scas
jnp
add
test
xchg
mov
add
pushf
and
ficoms
addb
outsb
inc
inc
jmp
data16
ret
xchg
add
and
add
inc
inc
adc
lea
cli
dec
sahf
imul
dec
inc
cmp
or
add
add
repz
or
adc
rclb
mov
add
push
add
sub
add
gs
pop
popf
lea
and
add
xor
add
add
add
mov
mov
mov
and
add
enter
adc
adc
mov
adc
jge
dec
fcomp
outsb
ret
add
jge
adc
idivb
cmc
ljmp
add
addb
mul
jle
add
cmpsl
stc
lods
add
ficoml
addb
pop
xchg
sub
outsb
out
cmp
sbb
xchg
add
mov
outsb
in
push
add
adc
xchg
cmp
mov
jle
jo
ret
pop
or
add
popa
xchg
jecxz
cmp
adc
mov
adc
cmp
jmp
jae
ja
mov
dec
clc
ljmp
add
loope
sub
add
push
mov
jno
add
mov
subl
mov
xchg
sahf
adc
mov
add
fists
pop
mov
stos
add
cld
popf
shrb
add
sbb
fidivrl
inc
inc
push
pop
mov
cmp
movsb
add
push
add
jnp
test
add
mov
add
addl
push
div
std
cmc
mov
enter
lcall
aam
mov
push
add
cmp
testl
in
lods
add
xchg
nop
pop
lds
insb
mov
add
test
add
jle
nop
inc
sub
add
xor
movsl
cmpsb
add
xor
sbb
cmc
leave
xor
sub
add
sub
add
cmpsl
pop
arpl
cmp
xchg
movsb
add
sbb
sub
hlt
out
mov
jno
add
test
mov
add
lcall
outsl
xorl
lahf
cli
or
sub
jg
test
add
add
loop
mov
out
inc
xchg
add
add
pushf
dec
fsubrs
add
and
adc
sub
add
push
xorl
add
clc
xchg
xchg
sarl
jns
rcll
pop
sub
add
iret
jmp
adc
add
sti
pop
mov
sub
add
jp
insl
sbb
mov
add
sub
add
test
add
add
dec
int
mov
add
in
rol
stos
pop
test
add
loop
inc
cmp
pop
ja
fsubs
add
xor
mov
mov
movsl
push
pop
sbb
mov
add
add
rorb
adc
push
dec
mov
add
ljmp
and
add
add
push
pop
daa
xchg
pusha
push
add
sahf
and
add
test
sbb
mov
call
int
shll
stc
dec
mov
add
cli
test
call
xchg
in
sub
add
fisubrs
add
popf
jp
xor
fidivrl
pop
pop
repnz
lahf
sarb
add
addr16
xor
enter
add
fdivl
mov
lahf
mov
add
clc
lods
add
mov
addb
sbb
sti
ficomps
lret
int3
xchg
dec
jecxz
repz
bound
add
sbb
add
add
mov
jnp
inc
inc
js
sbb
add
add
dec
rcrb
scas
add
daa
jl
les
add
mov
add
xchg
sbb
push
insl
hlt
jmp
fucomip
cld
dec
lods
in
fnstsw
cmpsb
add
dec
arpl
lahf
lock
das
test
add
add
mov
fwait
sti
mov
add
cltd
ljmp
add
inc
int
insb
adc
sub
add
mov
mov
add
clc
mov
imul
mov
push
pop
stos
cmp
lret
add
out
cmc
adc
xchg
adc
mov
rcll
add
mov
je
xor
inc
pop
ds
add
add
mov
outsl
cwtl
ret
icebp
clc
gs
dec
or
pushf
jae
stos
inc
or
add
and
add
add
xor
into
out
in
je
inc
xchg
add
loopne
loop
ret
fwait
mov
add
loop
iret
xor
push
push
jle
jbe
aas
inc
xchg
jge
ljmp
or
add
push
push
mov
sbb
inc
cmp
mov
mov
add
in
add
out
aad
scas
add
arpl
testb
xchg
fs
add
inc
lahf
lds
add
pop
shl
subl
nop
jl
dec
ss
imul
add
sub
jne
and
add
lcall
cmc
sub
add
lahf
push
andl
dec
iret
mov
add
mov
xor
mov
add
mov
push
movsb
add
xchg
push
rcrl
and
leave
dec
shlb
mov
add
mov
add
xchg
mov
add
add
pop
shlb
add
les
scas
out
xchg
sarl
jle
push
cmp
add
lock
add
or
subl
test
pushf
das
xchg
call
mov
test
cld
cmp
and
pop
jge
jb
inc
enter
loopne
add
outsl
cmp
addr16
arpl
add
in
mov
add
lahf
movsl
jns
sarb
add
pop
push
add
jnp
sub
add
mov
add
loopne
jp
mov
mov
cmc
mov
push
add
cld
insl
adc
in
inc
xor
jl
outsb
cwtl
xchg
jp
outsb
push
insb
mov
xchg
cmp
add
sub
add
push
add
pop
inc
or
fdivrl
jl
mov
imul
pop
lock
ror
mov
sub
adc
add
add
sub
add
adc
add
and
mov
jno
add
out
xchg
mov
dec
xlat
or
add
and
mov
add
addl
add
xchg
test
ret
push
add
mov
mov
outsl
mov
cmc
notb
add
inc
lcall
or
add
xchg
pop
push
inc
ljmp
add
add
retw
aam
cld
or
add
add
add
lcall
or
jb
xchg
mov
add
mov
ficomps
stc
lahf
dec
inc
icebp
idiv
fsubr
js
fnstenv
cmp
daa
cwtl
jo
add
inc
cmp
inc
in
dec
sbb
into
or
pop
mov
imul
add
mov
insl
loope
fidivs
mov
cmpsb
add
fcompl
inc
add
add
xchg
popa
pop
roll
add
stc
mov
mov
mov
hlt
xlat
add
add
lahf
orl
jmp
mov
mov
fiadds
popf
lahf
dec
ss
add
jbe
pop
packsswb
xor
add
add
out
aam
xor
or
add
add
sbb
stos
mov
add
push
pop
mov
dec
cmpsl
adc
in
mov
mov
punpcklbw
lea
push
add
mov
add
loop
jmp
or
add
testb
jns
xchg
jns
add
mov
add
sbb
addr16
cmp
lret
incb
add
jle
add
push
add
jl
mov
enter
add
cmpsb
add
jo
ss
sub
xor
sub
or
add
das
test
enter
dec
xchg
add
mov
out
scas
addb
mov
add
sbb
scas
add
and
add
fildl
add
in
stos
or
add
sti
add
add
shrb
add
or
lahf
mov
add
add
add
add
cmp
add
add
fcmovnbe
mov
je
cmpsb
add
add
scas
add
and
add
movsl
and
add
aas
sbb
ss
mov
ds
push
lcall
sub
add
add
xor
mov
add
jae
sar
mov
adc
sbb
xlat
cmp
cli
dec
addb
into
lods
mov
xchg
xchg
pusha
addb
dec
mov
jo
cmc
call
std
lds
das
sbb
mov
mov
push
fs
mov
inc
jb
mov
mov
into
dec
cmp
push
add
les
fmull
jb
sahf
aas
test
fisubrl
cmp
ret
cmc
movsb
add
loope
loop
loopne
adc
int
mov
arpl
dec
or
pop
xlat
push
sbb
push
add
into
imull
into
xor
dec
out
sub
add
adc
add
add
add
or
inc
repz
dec
jne
mov
jg
dec
add
or
add
pop
jbe
add
mov
jg
xlat
nop
popa
cltd
xor
inc
xchg
cmp
addb
dec
sbb
xor
adc
outsl
jne
add
movsb
add
xchg
mov
push
mov
add
ljmp
stos
add
orl
cmc
adc
push
add
aam
adc
je
cmp
add
add
mov
ljmp
add
add
and
add
arpl
xor
cmp
testb
add
jb
inc
jge
subl
je
ljmp
add
aad
jns
push
xchg
insb
fwait
pop
and
xchg
dec
insl
bound
cwtl
pop
push
imul
and
push
mov
jle
cmpsb
add
jne
cmp
mov
cli
jmp
notb
test
adc
add
inc
sbb
pop
inc
adc
loopne
lods
add
sub
aas
mov
std
mov
add
pop
xchg
xchg
add
xor
addb
vmovdqu
js
sti
das
mov
in
inc
jg
add
push
mov
add
adc
jne
out
jbe
sbb
add
add
xor
mov
fldcw
add
push
inc
sub
add
outsb
add
inc
pop
xchg
repz
sbb
add
stos
push
fnstcw
add
add
cmp
adc
push
stc
test
add
loopne
in
and
addb
lahf
sub
add
mov
add
pushf
sub
add
add
nop
and
add
add
and
add
mov
add
push
cmpsb
add
sbb
add
scas
cmpsl
jl
xor
testb
sbb
inc
pop
jmp
add
add
mov
cli
mov
lods
add
mov
mov
je
xchg
sbb
shl
pop
add
dec
cld
shrb
add
mov
cmpl
cmp
addb
adc
add
add
add
lods
iret
jne
add
xor
xchg
js
in
nop
xchg
add
lcall
add
pop
jl
into
jle
fdiv
hlt
aaa
cli
lock
mov
pop
inc
and
add
subl
int
sub
add
and
ds
out
add
add
jecxz
clc
int3
pop
enter
sti
inc
dec
movsb
add
or
sub
add
fwait
adc
lds
lret
into
fisubrl
in
adc
add
int3
dec
not
leave
dec
or
add
add
pop
imul
add
ror
sti
jbe
adc
add
lahf
and
add
test
rcr
cltd
fs
xchg
jecxz
icebp
sub
lock
add
lcall
add
addb
test
jmp
xchg
add
adc
add
test
sbb
pop
add
jg
shll
push
out
add
mov
fldt
add
call
xor
xchg
out
insl
and
xchg
xor
mov
add
pop
pop
inc
repz
add
add
fwait
jbe
xchg
out
sti
sbb
in
mov
negb
fwait
push
sti
add
sbb
mov
add
add
js
testl
add
clc
mov
insl
mov
cmp
bound
into
faddl
add
push
idivl
mov
add
fiadds
add
fsubp
sub
mov
shll
add
aam
gs
add
call
add
inc
loope
popa
jne
insb
data16
mov
push
ja
jp
cmp
xchg
add
rorb
rcll
xchg
data16
jo
and
add
sbb
addr16
ret
lds
add
in
and
into
cwtl
xchg
add
jne
xor
rclb
or
test
add
je
mov
xchg
xchg
pop
inc
and
je
sub
add
int3
pop
daa
jo
or
add
lods
mov
add
add
stos
or
scas
loope
stc
add
add
rcll
xor
pop
lods
xor
add
mov
sub
pusha
or
add
aaa
fldenv
addb
bound
fcomp
push
push
add
mov
add
mov
test
add
add
nop
bound
xor
loopne
pop
aam
adc
data16
add
inc
and
add
into
mov
add
xchg
cld
adc
mov
fdivrs
leave
call
xchg
add
out
jnp
mov
jne
push
mov
push
xchg
shll
stos
push
adc
and
adc
clc
notl
test
add
mov
mov
jb
mov
add
daa
addb
xchg
jmp
jl
and
mov
add
adc
mov
add
lcall
mov
cmp
sub
add
add
add
xchg
adc
cmp
jecxz
push
jae
mov
or
aam
pop
shlb
add
mov
add
add
imul
sarb
xchg
add
inc
mov
test
shlb
inc
xchg
movsl
cwtl
addl
stos
add
insb
shll
fdivrl
enter
add
or
divl
push
add
enter
add
inc
je
cld
xchg
cmp
aad
inc
call
movd
pop
in
mov
and
dec
mov
add
loope
iret
icebp
or
inc
or
xor
add
cltd
xchg
xchg
fisttpl
lea
arpl
lret
xor
dec
scas
or
call
in
adcl
je
fidivrs
add
inc
sarb
add
cmp
enter
je
int3
mov
pop
daa
dec
pop
sbb
dec
test
xchg
fildll
lea
add
adc
push
mov
fldcw
idiv
lahf
ss
add
and
add
inc
arpl
stos
push
and
sub
add
leave
pushf
shll
add
outsl
mov
inc
and
add
and
dec
xor
fbld
ljmp
add
imul
push
ret
sub
les
pop
into
fbld
add
stos
pop
pop
inc
mov
inc
rclb
clc
xor
loopne
add
jne
ss
mov
pop
dec
shll
sahf
jns
mov
add
mov
call
add
sbb
bound
add
in
xor
inc
cmc
aaa
add
add
lahf
iret
dec
add
outsb
adc
pushf
stos
aam
xabort
ss
movsb
add
inc
aad
ret
jno
push
mov
jae
add
sbb
add
inc
fwait
or
add
cmpsl
in
sub
push
add
sub
add
adc
and
add
rorl
add
icebp
mov
add
mov
push
pusha
lcall
add
push
mov
add
movsb
add
and
mov
add
sbb
fwait
ret
add
pop
idivb
push
sbb
add
iret
aam
jecxz
xchg
xor
ja
imul
add
pop
aad
inc
and
fcomps
xor
add
int3
lods
add
out
mov
add
rolb
lea
add
mov
sbb
pusha
xchg
add
adc
pop
notl
add
popf
sbb
push
ret
fnstcw
push
add
xor
psllq
pop
in
add
pop
jb
repnz
pop
push
pushf
add
adc
jg
stos
xor
push
xor
and
pop
lds
jne
push
add
xchg
add
add
fdivp
or
mov
iret
jne
mov
add
dec
ret
and
add
fs
add
cmp
add
mov
mov
push
add
in
daa
jg
add
push
mov
add
add
xor
pop
popf
subl
cwtl
jg
add
lcall
xor
add
das
ds
push
lds
jp
add
adc
sub
add
and
add
push
pop
cmp
ds
iret
mov
add
popf
cwtl
in
pop
bound
jno
sbb
add
add
mov
mov
add
sbb
sbb
add
movsb
add
inc
addb
mov
push
cmp
mov
addl
lea
xor
fsubrl
daa
and
add
cmp
or
add
jbe
fistpll
cmp
jbe
xor
xor
mov
and
add
cli
inc
popf
repz
inc
in
add
bound
add
add
jmp
pop
mov
xchg
push
add
out
mov
or
add
pop
test
mov
add
and
fwait
inc
mov
repnz
push
dec
cwtl
insb
mov
add
push
cmp
popf
ss
adc
fadd
add
test
add
add
add
shlb
add
jmp
out
add
xchg
jl
cmp
lods
jmp
cmp
jle
add
icebp
pop
jns
inc
mov
push
adc
xor
fimull
test
add
add
add
xchg
push
fwait
mov
sbb
icebp
scas
cmp
adc
add
inc
bswap
add
sbb
stos
add
lods
xchg
inc
ret
dec
pop
mov
sub
add
inc
sahf
jle
add
iret
clc
dec
and
add
popa
add
xor
add
imul
vcmpss
lcall
jecxz
add
pop
pop
add
pop
adc
shlb
out
cltd
imul
outsb
pop
pop
fiadds
add
mov
icebp
jle
add
cwtl
xor
add
pop
mov
inc
in
mov
subl
add
bound
add
inc
dec
mov
add
add
in
gs
mov
pop
aam
add
and
add
add
shrl
add
cwtl
cmp
test
add
popa
in
out
sub
add
jbe
push
loopne
les
cmp
sub
add
in
cmp
mov
xor
aas
imul
adc
sub
add
xorl
lods
addr16
push
add
add
mov
add
addb
add
or
add
jle
rcr
push
add
push
push
mov
add
dec
stc
inc
mov
add
repz
lahf
xor
fistpl
add
push
int3
fsubrl
fstl
add
add
out
loope
xchg
pop
aaa
sub
add
add
push
cmp
enter
shl
push
add
and
add
and
pop
sbb
jno
stc
sub
add
roll
mov
shlb
shll
add
outsl
pop
add
fadds
mov
add
ss
bound
fnsave
add
add
stos
add
mov
add
shll
push
shlb
xchg
not
mov
cwtl
into
and
add
shrl
add
inc
fistps
add
adc
leavew
das
addb
or
add
add
xor
mov
add
clc
fs
shll
pop
mov
add
or
add
sbb
add
into
pusha
and
enter
dec
and
ja
sbb
jne
add
mov
add
sub
leave
jno
add
push
lock
cmpsb
add
pop
out
icebp
xchg
add
mov
inc
sub
mov
cmp
xor
add
sub
add
add
jnp
xchg
repz
mov
inc
cld
pushf
popa
mov
sub
add
pop
lock
push
add
cmpl
add
and
add
push
xchg
test
add
pushf
add
mov
ret
mov
ljmp
or
xchg
sbb
add
add
nop
cmp
cmp
shll
add
jl
add
ret
xlat
adc
dec
jmp
fs
mov
mov
mov
add
mov
add
adcl
mov
add
add
aaa
pusha
add
push
lods
aam
and
add
and
add
sub
out
icebp
or
add
aam
mov
add
ljmp
lods
data16
push
shll
test
and
add
and
add
pop
enter
add
push
clc
mov
or
add
clc
or
add
pop
pop
and
push
xchg
das
dec
gs
fildl
mov
add
add
or
hlt
nop
insl
int3
loop
mov
xchg
and
xor
dec
das
xor
add
adc
insb
or
add
add
lock
add
push
or
add
add
xchg
sti
jo
in
arpl
add
lahf
inc
pop
mov
jnp
lods
add
sub
out
mov
add
fdivp
xor
stos
add
inc
adc
xor
fcompl
pop
fstp
stos
push
add
mov
and
add
cld
popf
lods
mov
scas
sub
lret
repnz
add
rclb
pop
mov
add
mov
and
add
addb
dec
data16
jp
jne
push
fiadds
rolb
add
dec
shll
mov
add
add
push
lea
mov
add
mov
add
add
jle
lret
xor
pusha
movb
xor
lcall
ret
loope
popa
lea
ljmp
inc
mov
cltd
clc
inc
leave
or
mov
add
push
xchg
add
les
xchg
mov
add
jnp
dec
aam
clc
int3
loopne
sub
mov
mov
sub
hlt
lret
and
loop
cmpsl
inc
jnp
mov
jmp
and
ds
fidivrl
mov
push
sbb
stos
add
dec
fistpll
xor
rclb
add
mov
add
test
jge
or
add
cli
add
add
add
in
aad
xchg
cmp
xchg
jge
jecxz
mov
push
push
movsl
lahf
aaa
xor
lods
add
clc
ret
xor
mov
add
lcall
out
jmp
add
pop
mov
jle
add
add
call
lcall
add
sbb
ret
add
adc
int
xor
xchg
add
xor
sub
add
or
stc
ds
insb
push
cmc
cli
add
add
or
sti
pop
inc
xchg
add
add
push
test
add
mov
dec
daa
addb
push
mulb
xor
jl
or
add
dec
les
mov
ret
jecxz
add
aaa
ret
adc
push
sbb
or
add
and
mov
lds
xchg
mov
add
inc
rdmsr
nop
mov
add
add
filds
add
xor
test
add
js
sub
add
cmp
add
add
roll
push
call
push
repnz
inc
in
gs
fdivrp
pop
dec
into
repnz
imul
mov
dec
pop
enter
xor
push
xor
xor
add
sub
add
test
add
dec
filds
add
lods
sub
test
jl
add
arpl
push
jno
pop
call
test
jb
mov
and
fbld
stc
leave
cmp
in
pusha
inc
lock
leave
lret
inc
cmp
pop
sbb
loopne
jp
outsl
jmp
ret
fldl
bound
inc
and
add
das
test
sbb
repz
lea
add
mov
sub
add
sub
pop
push
inc
imul
add
dec
rolb
test
add
loope
aam
gs
add
xchg
pop
xlat
sarb
add
push
pop
cmpsl
inc
je
push
inc
fisubs
push
mov
aas
or
mov
add
add
adc
dec
outsb
fsubl
push
push
ja
repz
iret
lea
mov
rcrl
push
sub
add
popa
xor
popf
adc
shll
les
add
push
cmpl
add
add
stos
aas
ffreep
sub
lock
fsubrp
pop
lods
mov
add
jmp
pop
out
cmpsb
add
rorl
sub
add
rclb
lahf
pushf
adc
stos
mov
in
push
add
inc
sub
mov
arpl
jnp
divb
rcrb
out
test
add
add
jl
push
push
add
push
aam
xchg
push
lods
add
std
xor
jae
sub
ss
lds
mov
add
mov
push
repnz
add
frstor
push
out
mov
popf
ss
out
sarl
imul
add
dec
std
add
push
fs
xchg
imul
lock
inc
dec
push
add
test
add
add
js
fcompl
dec
test
cld
stos
add
jge
inc
jb
movsb
add
mov
add
dec
mov
add
fdivrl
hlt
inc
test
add
sahf
pop
sub
add
pop
popf
pop
pop
add
add
out
imul
sbb
insl
int3
push
aas
sbb
add
les
add
add
add
shll
dec
outsl
icebp
xchg
lcall
test
add
or
add
outsl
or
add
insl
xchg
jo
leave
fst
in
sub
add
or
add
add
imul
add
shr
call
sbb
jnp
rcll
add
stos
add
test
add
inc
movsl
pop
adc
push
dec
dec
ret
repnz
add
push
sub
jl
xchg
insb
dec
xor
mov
and
add
xor
repnz
add
add
xchg
push
imul
inc
movb
jb
add
stc
outsb
sahf
mov
arpl
pop
out
pop
mov
add
mov
mov
test
mov
pop
pop
ror
test
add
or
mov
jae
out
sub
pop
cmc
jecxz
push
xor
jl
mov
xchg
xchg
lods
adc
add
mov
inc
inc
or
push
jge
add
pop
adc
and
sbb
add
insl
or
add
jns
jmp
mov
stos
add
jno
xchg
hlt
xor
stos
add
jl
add
out
jae
out
sbb
add
push
leave
outsl
inc
loop
jecxz
mov
inc
loopne
into
mov
add
xlat
pop
in
sbbl
mov
daa
mov
in
in
xor
add
add
int
test
mov
imul
add
jno
aas
inc
push
into
js
mov
sub
pusha
jnp
notb
xor
aam
add
xor
inc
addl
dec
dec
cmpsl
out
in
push
adc
mov
add
or
add
insl
icebp
imul
or
add
xchg
ret
pop
fbld
das
imul
jbe
imul
mov
scas
call
mov
mov
lods
hlt
jge
add
pushf
add
adc
add
add
neg
mov
dec
shl
scas
add
loope
add
xchg
add
mov
sub
add
out
mov
add
xchg
add
add
mov
add
or
add
add
test
add
jae
cli
dec
inc
jp
xlat
ficompl
pop
xchg
insl
and
jo
test
add
add
pop
movsb
add
lea
ret
nop
jecxz
clc
icebp
fiaddl
dec
nop
je
dec
mov
add
fwait
lret
cld
ljmp
out
add
popf
jg
int
xchg
xchg
jl
cltd
mov
add
add
xchg
fidivrs
test
push
in
stos
add
adc
imulb
out
add
add
gs
loope
movsl
sbb
sbb
inc
cwtl
jnp
or
lcall
fsubs
add
pop
mov
inc
into
pop
daa
xchg
inc
inc
or
add
out
sti
sbb
add
sub
or
lcall
inc
or
add
movsl
repz
add
or
add
lods
add
jl
cmc
push
lahf
rcrl
mov
sti
and
sub
jns
imul
inc
push
pop
sbb
int3
mov
test
add
mov
sbb
add
pop
sarl
cmpsb
add
jno
add
xor
adc
js
xchg
clc
mov
dec
dec
scas
add
mov
sub
add
scas
or
add
cmc
addb
daa
lock
add
mov
add
cmpsb
add
dec
aam
jbe
sub
add
mov
add
add
lahf
fistpl
fistl
add
lea
imul
repz
lock
xor
jp
add
jl
fisubs
rorb
jp
xchg
cmp
pop
jecxz
bound
loope
pop
xchg
mov
cmc
mov
add
push
add
adc
add
jno
pop
mov
add
xchg
mov
add
cmp
add
hlt
jmp
jno
and
add
jns
cmp
addb
inc
test
or
add
sbb
cmp
orl
jmp
or
add
outsl
fcmovnb
mov
pop
inc
in
test
add
add
out
jle
shrb
mov
dec
adc
lods
dec
stos
and
cmpsl
ja
pop
loope
icebp
sub
add
mov
or
sbb
add
xorl
fstpt
add
xchg
add
cmpsb
add
rcrb
pop
fiaddl
in
xchg
mov
add
ret
jge
sub
add
add
xchg
and
add
add
jl
push
add
dec
mov
add
int
rcl
inc
or
add
cmp
clc
popf
cld
and
add
cmp
inc
or
push
loope
leave
sub
imul
or
sarb
outsl
or
add
adc
push
pop
mov
xchg
lret
shrb
add
mov
lret
addb
pop
sub
add
pop
movsb
add
pop
pop
adc
inc
das
xlat
cmp
loope
jmp
shr
add
mov
add
inc
pop
cmp
mov
xchg
adc
and
add
into
jle
rcrl
divl
add
dec
mov
xchg
scas
add
jo
nop
rcrb
add
jle
adc
add
jmp
ljmp
lods
push
clc
push
mov
fimull
enter
adc
out
add
dec
pop
cmp
mov
push
sti
lock
loopne
or
add
out
sbb
jmp
xchg
and
add
out
out
add
cmpsb
add
mov
add
scas
inc
mov
repnz
idivl
xor
push
cmp
add
mov
getsec
mov
popf
test
add
jno
cmp
addb
js
sub
adc
js
push
scas
mov
nop
mov
jecxz
test
add
sbb
rclb
add
cwtl
mov
dec
mov
mov
iret
inc
mov
inc
adc
stc
cmc
cmp
pop
sub
add
mov
jno
add
mov
jp
insl
test
add
pop
into
jns
dec
daa
in
xor
aas
flds
add
shrl
mov
add
cmp
cmpsb
add
and
add
dec
cmpsl
addb
inc
push
int
leave
fnsave
fildl
add
mov
nop
pushf
xchg
jns
jne
imul
jl
mov
mov
fs
fsubp
cmp
out
jge
add
out
clc
adc
cmp
fistpl
mov
add
mov
xchg
adc
pop
jg
xor
push
add
sub
add
fdivr
bound
add
mov
add
jne
loopne
sbb
xchg
dec
fildll
add
ds
add
fcmovnb
mov
add
dec
movsl
out
xchg
push
jecxz
mov
add
ret
mov
add
mov
add
cwtl
or
add
pop
data16
cmpsl
xchg
and
add
psraw
xor
add
les
adc
add
stos
dec
cli
aam
insl
add
add
aaa
mov
or
cmp
xchg
jns
jnp
add
jbe
add
stc
addr16
dec
loopne
dec
imul
add
xor
add
jo
xchg
pop
and
add
add
outsb
xlat
mov
add
rorb
add
xor
clc
loope
outsl
and
add
push
packuswb
push
out
mov
fwait
jg
sti
jno
dec
push
outsl
add
add
mov
test
in
inc
imul
add
je
stc
sbb
xchg
xor
add
push
fdivrp
pop
adc
jb
fidivl
call
push
test
add
in
jle
test
nop
movsb
add
int3
dec
sbb
push
mov
arpl
xchg
bound
add
add
xor
xchg
jno
add
out
cmp
add
add
mov
add
sbb
mov
out
sub
mov
add
pop
repz
and
dec
and
add
or
cmp
and
sub
add
add
mov
leave
int3
inc
mov
pop
mov
add
inc
popf
push
lret
jbe
add
xchg
mov
add
jae
loopne
lea
add
add
jbe
xlat
add
mov
icebp
cmpsl
or
add
mov
out
cmp
push
les
popf
xchg
mov
mov
pop
mov
add
jge
cmp
out
inc
out
sub
add
or
add
iret
insb
bound
stc
hlt
bound
jae
add
fdivrp
les
adc
add
adcl
fisubrl
add
push
add
add
xor
cmc
mov
add
dec
test
add
jno
mov
add
xorl
add
push
mov
jmp
add
mov
add
pop
dec
xor
push
jl
add
add
lods
out
int
movsb
add
into
mov
add
cmpsb
add
stos
shlb
rcrl
out
inc
mov
add
xchg
pusha
sub
aam
ja
xor
shlb
nop
fnstenv
sarb
push
mov
add
stos
add
add
cmpsb
add
aad
mov
add
imulb
add
sub
add
or
add
lret
dec
sub
arpl
loopne
out
fs
jo
sbb
lods
loope
add
into
lods
jno
sahf
ret
iret
xchg
add
sahf
ss
decb
add
push
faddp
stos
push
adc
mov
jecxz
cmp
int3
lcall
cmpsb
add
out
xchg
test
add
jnp
jae
push
adc
add
add
aad
aas
mov
add
jl
psrad
or
push
mov
add
pop
sbb
sub
add
aaa
data16
add
shll
out
pop
fisttps
xor
push
add
push
lock
and
jns
in
and
jo
dec
rcrl
test
add
or
add
stc
sbb
push
mov
fldenv
add
movsl
cmp
pop
pop
add
xchg
popa
sbb
sbb
cmpsl
xor
cmpsb
add
inc
call
pop
adc
sub
push
dec
lds
add
xor
cld
jmp
add
add
adc
popf
lcall
add
dec
and
add
sbb
lods
add
mov
add
add
and
add
mov
pop
mov
push
ljmp
add
add
imul
or
add
add
addr16
test
sbb
out
mov
aam
add
addb
in
js
add
jb,pt
jno
pop
push
out
xchg
out
inc
fisubl
jo
xor
js
mov
xchg
sub
add
add
sub
add
enter
pop
mov
fisttps
mov
add
pop
jecxz
cmp
mov
andl
add
movsb
add
addb
pop
add
add
mov
cld
xchg
sbb
xchg
sub
add
push
xchg
mov
cmpsl
ret
arpl
add
fsub
cmpsb
add
fistpll
mov
add
jb
or
inc
repz
add
mov
xchg
xor
jp
push
add
xchg
add
adc
jo
dec
inc
inc
add
ret
mov
add
push
enter
push
cltd
iret
dec
repnz
add
addb
cltd
in
jge
mov
iret
lahf
movsl
pop
lods
add
addb
shrb
add
fs
pop
test
add
push
xchg
jp
scas
push
lods
test
sarl
add
fprem
repz
movsl
mov
cmp
call
add
mov
add
outsb
cmpsl
outsl
mov
add
add
sbb
sub
in
loop
sub
push
in
or
add
add
cmpsb
add
adc
lret
aas
ret
push
mov
add
popa
xlat
loopne
add
addr16
jbe
add
pop
data16
insl
lea
stc
stc
xchg
fdivs
movsb
add
int
push
ja
fstpl
icebp
stos
mov
adc
leave
test
add
or
add
or
add
add
dec
push
dec
mov
sub
pop
les
pushf
mov
stc
test
add
in
add
add
fwait
cld
push
xor
or
or
add
add
mov
out
jle
aas
jns
je
stos
sbb
rcrl
rcrb
push
push
and
add
add
add
xchg
aas
sub
aad
arpl
push
out
lret
mov
loopne
or
add
fidivrs
mov
add
out
xor
add
das
push
add
add
mov
jecxz
add
jae
imull
add
int3
jge
push
add
push
jns
cmp
mov
clc
lahf
sub
test
add
push
fnstsw
push
cwtl
xchg
outsl
fiadds
mov
rcll
add
ret
sub
add
add
sub
lret
ss
add
hlt
adc
testb
inc
sbb
xor
imul
add
and
scas
xor
fs
leave
add
xor
jmp
enter
jge
cmp
inc
outsl
scas
add
jmp
bound
add
dec
or
push
add
push
or
sti
jmp
pop
int3
in
rol
and
imul
out
out
dec
jo
rcrl
leave
mov
lahf
cmpsl
xchg
lea
add
in
stos
xlat
in
fistpll
add
pop
add
add
add
push
jb
mov
fadd
adc
rcll
imul
add
int3
add
push
jecxz
bound
inc
lahf
out
test
add
xor
xchg
mov
cmp
test
add
xor
pushf
sarl
stc
add
sub
add
rcrb
mov
jbe
mov
sarl
add
jmp
arpl
and
add
add
mov
cmp
push
add
int
idivb
inc
add
cmpsb
add
pop
sbb
lods
pop
sbb
inc
rclb
lahf
inc
cmp
arpl
sti
sub
xor
fwait
lock
rcl
or
xchg
fmuls
add
add
rcrl
lds
dec
cwtl
push
lock
add
lret
jno
xchg
xchg
add
push
add
cmpsb
add
jbe
aam
jl
fisubrl
sub
add
pop
adc
stc
inc
or
inc
adc
add
in
xchg
stos
add
jns
add
dec
in
movsb
add
pop
rorl
add
mov
dec
movsb
add
daa
jo
cmpsl
xlat
mov
out
clc
nop
mov
or
leave
outsb
cltd
add
add
andl
ljmp
test
add
xor
or
repz
push
dec
add
add
add
pop
daa
pop
xor
ss
xchg
lret
repz
outsb
pop
cmp
sbb
fisubl
add
dec
adc
jp
fstpl
mov
fidivrl
outsb
mov
cmp
add
fwait
dec
lcall
repz
add
inc
jp
mov
lock
sbb
mov
rcll
add
mov
add
xchg
adc
cmp
add
add
scas
mov
hlt
mov
in
add
pop
das
mov
add
inc
loop
push
dec
ds
jg
cmpsb
add
xor
sub
add
push
or
add
push
in
notl
jns
xlat
call
add
push
out
testl
jo
popf
aam
hlt
imul
adc
sti
xor
xchg
jge
sbb
add
gs
aad
jl
mov
iret
in
mov
test
push
jns
add
cmp
push
or
outsl
adc
add
rcr
xor
pop
mov
cltd
cmp
push
mov
jle
ds
cmpsb
add
clc
inc
cmpsl
loopne
push
add
outsl
jae
popa
arpl
mov
rolb
pop
lds
or
sub
add
repz
jne
push
call
add
add
sbb
pushf
xlat
and
sbb
dec
jb
loop
repz
hlt
in
out
fimull
outsl
jno
add
addb
mov
add
mov
test
add
int3
push
add
push
enter
aad
jg
enter
or
add
jl
or
mov
dec
xchg
xchg
inc
imul
xchg
sub
mov
add
add
add
je
dec
out
cmp
shll
add
add
add
cli
xchg
xchg
and
add
mov
mov
ret
add
andl
add
sub
add
add
add
les
popf
adc
lcall
adc
add
test
sub
lret
dec
jl
inc
aas
cmp
aad
cmpl
pusha
mov
dec
shrl
xchg
add
mov
add
add
aam
std
inc
xor
or
add
add
sbb
movsl
pop
out
sbb
sub
add
add
push
mov
add
and
add
mov
dec
testb
mov
add
lds
push
add
mov
outsl
test
inc
and
lcall
add
sub
cmpsb
add
mov
add
push
int3
gs
gs
test
add
arpl
in
inc
loopne
fldenv
dec
stos
add
or
add
cmp
lcall
push
in
jg
jnp
adc
pop
xor
add
out
adc
add
gs
and
add
add
and
push
add
add
add
data16
and
add
jg
sbb
mov
outsb
jnp
gs
push
mov
add
repz
test
add
add
sbb
test
add
and
add
add
mov
add
ret
add
mov
add
jbe
inc
adc
pop
lret
add
fnstsw
lret
or
daa
addb
mov
xchg
lcall
sbb
add
jo
adc
sub
jno
add
xchg
jl
popa
movsb
add
mov
jns
movsb
add
xor
pop
mov
add
lahf
decl
add
gs
js
in
mov
test
sub
add
pop
jge
inc
xchg
inc
aam
fisttps
int3
std
sub
add
add
adc
add
cmp
add
jp
mov
add
icebp
pop
clc
xchg
out
jg
add
outsb
aam
cmp
fisubl
dec
shlb
or
and
cmpsb
add
inc
inc
cmp
lahf
jp
dec
pusha
aaa
cwtl
and
push
sub
add
shrl
xchg
fldt
add
loopne
mov
add
lea
stos
add
and
add
add
jg
xchg
add
xchg
add
mov
mov
adc
pop
stos
pop
sbb
addb
stos
add
test
add
sbb
jo
insb
adc
loope
shll
aad
les
addb
mov
add
clc
sub
std
pop
xor
lock
les
movsl
mov
test
aad
mov
sbb
add
dec
jno
inc
mov
sbb
xor
mov
mov
add
push
pop
cld
pop
enter
and
sbb
and
add
sbb
dec
push
add
daa
imul
enter
int
cli
fcomi
enter
xchg
nop
rorb
dec
js
mov
jns
add
jecxz
jl
pushf
mov
sbb
add
sub
sub
add
mov
mov
push
out
add
imul
cmpsb
add
int
push
sub
add
sbb
mov
xor
icebp
sbb
add
das
push
mov
push
add
int3
int
lock
sbb
add
loopne
shll
add
fsts
push
add
sbb
aas
rolb
or
pushf
adc
lret
mov
add
add
add
lcall
dec
int
out
iret
adc
roll
cmp
ror
xchg
pusha
repnz
lods
jns
add
iret
push
jne
xchg
xlat
les
add
mov
add
add
add
sbb
add
loop
pop
mov
int3
dec
cmp
test
add
bnd
inc
mov
fwait
subl
dec
pop
cmp
pop
inc
sbb
push
lods
inc
cmp
mov
add
lahf
and
lods
add
les
xlat
push
mov
enter
mov
mov
add
pop
mov
add
cwtl
push
jno
cmp
movsl
fiadds
and
add
lret
fwait
js
test
xchg
jmp
push
lock
sub
add
movsb
add
adc
mov
jae
add
addr16
pusha
adc
scas
sbb
add
pop
xchg
jno
xor
push
add
push
sub
add
add
or
add
in
mov
mov
mov
mov
fnstcw
loope
sub
add
test
sub
test
add
sti
mov
add
dec
rcrl
or
imul
add
repz
push
shlb
pop
negb
data16
xchg
mov
push
stc
cmp
cmp
mov
or
add
dec
aad
add
mov
xlat
fs
add
ljmp
cmc
add
add
add
adc
mov
add
inc
addb
cmp
xor
popw
add
push
addb
mov
sti
push
loopne
or
xchg
mov
fisttps
adc
add
call
ss
jnp,pt
add
sbb
lea
aad
jmp
add
leave
popl
pop
add
add
sub
add
sub
add
dec
adc
repnz
push
sahf
xchg
pop
pop
sbb
pop
js
dec
push
push
add
into
cmpsl
pop
test
xchg
movsb
add
mov
push
rclb
add
ljmp
lahf
fnstsw
xor
jmp
cwtl
or
icebp
in
sub
mov
dec
jp
jp
mov
add
aas
push
sahf
sub
sbb
sbb
sbbl
add
mov
out
popf
mov
daa
jl
lahf
jne
adc
inc
pop
dec
jl
clc
xor
mov
add
movb
xlat
in
outsb
in
lret
mov
add
sbb
mov
pop
pop
pop
hlt
xchg
mov
xlat
mov
add
push
addb
mov
push
add
add
imul
mov
push
add
popf
mov
sub
add
mov
xor
and
sbb
enter
or
cmp
push
add
inc
cmp
pop
push
dec
bound
cwtl
mov
fwait
dec
pop
jmp
xor
push
inc
add
add
lods
mov
push
and
dec
mov
ficoml
and
add
add
mov
add
adc
add
pop
testl
mov
in
mov
or
add
and
lds
mov
add
fwait
aas
inc
stc
lock
test
jb
pop
cmp
add
mov
lcall
adc
loopne
add
cmp
in
dec
push
add
jmp
add
add
add
sbb
push
sbb
sahf
mov
imul
push
testb
add
fs
pop
inc
mov
mov
aas
lret
add
rorl
add
push
outsb
add
adc
add
rcl
daa
and
add
mov
add
out
add
aam
add
aaa
ljmp
add
cltd
sbb
jo
add
sbb
in
lea
add
add
daa
and
add
jo
cmc
iret
nop
jecxz
lcall
sbb
jmp
mov
shlb
mov
add
ja
mov
add
dec
cmpsb
add
mov
dec
add
add
fcompl
dec
add
jns
pop
inc
adc
out
mov
iret
add
add
add
adcl
jg
mov
dec
sarl
add
fwait
jecxz
inc
jne
repnz
neg
or
in
outsb
repnz
sbb
add
das
scas
add
dec
cltd
in
mov
arpl
jo
sub
aam
add
inc
pop
jg
jo
add
sbb
int
std
xchg
push
inc
les
xchg
ljmp
add
inc
mov
pop
mov
and
add
xchg
leave
pop
mov
add
adc
add
mov
and
add
xchg
jnp
hlt
cmp
loopne
add
aam
mov
adc
add
std
movsl
xor
cli
stc
pop
lock
sarl
add
push
cwtl
movsl
sub
add
sbb
sar
and
sbb
ja
lea
mov
add
repnz
add
aas
shrl
cmp
sub
add
xor
sti
xchg
sahf
data16
adc
adcl
or
jg
int3
inc
int3
push
scas
add
stc
clc
or
add
mov
cmp
out
sub
add
jp
add
inc
leave
stos
cmp
das
adcl
int
push
add
pop
jb
adc
insb
push
cmp
add
in
xorl
addb
add
popf
push
out
add
add
jg
pop
aas
popf
lock
jb
cmp
pop
and
add
scas
imul
add
int
add
xlat
pop
push
add
mov
add
repz
mov
add
ficompl
sbb
or
add
add
cmp
jmp
stos
add
test
add
fcmovnb
xchg
push
add
add
or
add
loop
push
inc
and
add
nop
sub
add
or
add
cmp
pop
mov
ljmp
add
cmpsl
xchg
fdiv
or
les
add
out
addb
fstl
sub
or
add
inc
test
add
add
inc
push
out
cmp
xchg
pop
mov
add
add
xchg
lcall
add
add
fisttpll
add
add
add
mov
out
add
dec
out
xchg
push
in
out
xchg
arpl
add
sub
inc
sbb
fisubl
ja
in
outsl
add
add
add
sub
add
add
add
add
add
jnp
cmp
push
mov
cltd
aaa
test
add
stc
cmp
repnz
ret
adc
mov
lods
scas
mov
xor
sub
std
iret
push
add
jbe
inc
or
add
and
add
pushf
inc
testb
fisubs
add
shlb
add
addb
clc
pop
movl
add
sbb
fldcw
mov
xchg
push
rcr
and
add
stc
or
add
xchg
add
xchg
inc
mov
lcall
add
add
inc
ret
dec
shrl
add
add
add
sub
add
and
mov
pop
pop
fdivrl
dec
jle
add
ds
outsb
mov
add
add
movsb
add
fs
cltd
clc
or
add
and
call
enter
add
inc
push
add
sbb
or
jmp
adc
mov
mov
add
fwait
inc
fmull
inc
dec
pop
jp
iret
push
sbb
add
test
add
sbb
sub
add
jbe
and
add
in
cld
dec
aad
dec
in
jne
sub
iret
lahf
push
aam
or
add
inc
mov
pop
and
add
fs
push
decb
add
lds
rcrb
cmp
push
outsb
push
push
inc
jae
cmp
add
ds
incl
ret
mov
add
and
in
dec
loope
push
add
or
adc
aas
adc
cmp
cmp
add
add
pop
xchg
adc
insl
in
loop
fwait
sub
xor
jge
ret
icebp
mov
mov
outsb
xchg
add
add
mov
mov
inc
add
xor
xor
xor
add
lea
and
mov
jns
inc
loope
xor
sbb
adcl
inc
sbb
inc
popf
xor
jnp
sahf
add
sub
jecxz
lret
out
daa
cmp
pushf
mov
call
sub
add
sti
not
sbb
or
mov
das
sub
mov
add
adcl
add
in
je
add
jb
jne
mov
add
mov
mov
add
outsb
sbb
add
popf
mov
ret
je
push
lods
add
gs
lcall
lcall
dec
mov
pushf
dec
xchg
xor
fninit
ret
pusha
cmp
sbb
cmp
mov
cmp
add
add
mov
add
inc
outsl
jecxz
addb
shlb
add
mov
dec
push
outsl
lret
or
add
jne
push
and
add
lods
add
fistpll
shrb
loop
jmp
pop
add
add
jne
stc
sub
add
in
cmp
aas
mov
cmc
lods
push
mov
aaa
mov
push
ds
test
add
cmp
mov
fcoms
sub
add
xor
add
add
cmp
pop
or
add
add
outsb
je
add
mov
add
pop
sub
add
shrb
int3
loop
ret
jg
push
xchg
mov
mov
rcrl
push
and
push
push
add
dec
nop
cmp
jo
inc
xor
inc
lahf
sahf
jae
add
cmp
cld
dec
shlb
inc
outsb
or
add
test
add
add
sbb
and
add
mov
popf
mov
and
add
scas
add
sub
add
or
add
out
inc
pushf
clc
add
hlt
xchg
call
movd
fnstsw
inc
dec
xchg
push
stos
add
cmp
mov
pop
cltd
dec
mov
xor
gs
addb
jae
add
addb
xchg
in
inc
pop
adc
cmc
or
add
and
add
test
push
inc
inc
dec
xchg
sbb
add
inc
sbb
mov
loope
dec
ja
pop
arpl
adc
pop
adc
leave
int3
in
and
add
sti
imul
fs
xlat
popf
add
and
add
bound
add
ficompl
dec
sbb
jae
jmp
fwait
shrb
fdivrs
dec
lret
push
pavgb
add
or
add
lods
add
addb
push
add
fisubs
add
push
add
cmp
insl
in
adc
ja
jecxz
enter
dec
sahf
jg
push
decl
mov
add
hlt
imul
les
sbb
xlat
cltd
jge
dec
in
add
rcll
add
stc
mov
add
iret
push
aad
mov
add
leave
xchg
xchg
add
shl
add
add
add
mov
mov
xor
xor
subl
or
add
add
cwtl
jl
mov
add
cld
ret
iret
push
mov
dec
and
add
add
add
and
add
roll
addb
jae
cmp
add
ss
add
add
jp
add
add
ficoms
xchg
movsb
add
sub
outsl
sub
mov
add
addb
push
push
sbb
add
mov
add
std
insb
add
mov
and
add
sub
addb
sbb
pusha
adcl
add
or
add
xchg
add
insl
xor
das
add
add
push
punpcklbw
and
add
pop
jnp
scas
mov
add
adc
bound
add
mov
inc
cwtl
jb
inc
dec
xor
add
xor
push
mov
add
xchg
adc
jg
mov
push
pop
addb
pop
mov
pop
scas
add
sub
add
dec
add
jno
sub
mov
int3
scas
add
and
add
and
add
cmc
xchg
jno
add
leave
lret
sti
lds
aaa
fwait
adc
addb
push
add
rcrb
xchg
add
xchg
dec
add
lods
add
inc
ljmp
arpl
jns
add
xchg
pusha
call
push
inc
rorl
cld
ljmp
add
popa
xor
dec
dec
mov
shr
mov
fnstenv
jp
add
adc
dec
xchg
fsts
push
data16
dec
mov
xchg
adc
xchg
mov
mov
add
sbb
xlat
scas
daa
add
fcomip
popa
mov
sub
add
add
ja
gs
add
scas
add
xchg
aam
and
xchg
ds
sbb
cmp
jecxz
push
dec
cmpl
adc
movswl
repz
push
add
fidivrs
jbe
aad
mov
pop
push
clc
aaa
clc
add
push
add
inc
pushf
pop
jmp
jmp
inc
mov
add
inc
sbb
hlt
sub
add
sbb
imull
add
fstl
outsl
sub
add
std
enter
dec
fcomps
mov
add
mov
mov
add
lcall
add
out
dec
mov
add
dec
cmpsl
jmp
fldenv
jne
sbb
adc
daa
jae
mov
xchg
push
je
int
imul
sbb
pop
xchg
insl
sbb
add
mov
add
mov
fs
fdivr
mov
and
add
add
jae
clc
scas
scas
add
inc
sbb
add
add
adc
pop
frstor
add
inc
mov
add
cld
mov
add
add
mov
addb
mov
lret
test
xor
mov
lock
add
repz
scas
enter
inc
inc
in
jge
push
andl
lock
movsl
scas
add
mov
push
add
ljmp
add
mov
inc
sub
adc
push
inc
sub
shl
mov
add
movsl
mov
add
add
xchg
add
dec
dec
ret
xor
rcrl
addb
cmpsl
adc
xchg
add
arpl
add
test
add
push
inc
xor
add
sarb
sub
add
pop
jns
jge
xor
inc
push
sbb
lret
sbb
push
add
and
add
add
dec
not
in
push
pop
push
insl
xchg
dec
test
add
jg
rcll
sbb
jbe
mov
add
push
mov
add
mov
add
call
add
pop
mov
pusha
cmpsb
add
jno
push
scas
add
adc
pushf
test
add
add
stos
add
mov
nop
pushf
xchg
add
add
push
add
jmp
pushf
cltd
mov
xchg
sub
add
add
lods
imulb
add
sub
mov
add
cmp
call
mov
iret
fwait
xchg
cmpsb
add
or
add
addb
xchg
mov
add
shlb
cmp
cmc
add
add
xchg
add
add
call
add
aad
add
xchg
add
add
inc
mov
add
add
je
lahf
shll
mov
add
decb
add
push
hlt
xor
fisubs
fstps
cld
not
push
add
jl
push
sub
add
inc
pop
push
adcl
sub
add
jge
lock
dec
sbb
mov
jno
fs
inc
shr
sahf
push
pop
jae
jle
push
pop
xor
lcall
add
out
cmp
add
and
push
push
inc
lea
push
mov
mov
lret
add
add
scas
and
add
inc
pop
setae
adc
push
sub
add
jecxz
jbe
stos
add
mov
add
mov
add
fists
add
stc
addb
xlat
and
add
cmp
sarl
push
add
add
mov
fistl
xchg
js
imul
jmp
add
or
hlt
jns
push
jecxz
sub
add
loopne
fidivs
xlat
cmp
add
pop
push
xchg
fldenv
inc
dec
and
add
add
xchg
adc
in
pop
pop
rcl
dec
ja
mov
add
repz
repz
add
add
fs
add
addb
std
pusha
mov
clc
test
add
nop
inc
mov
imul
imull
adc
sbb
out
cmp
add
mov
je
xchg
lahf
jle
shrl
add
dec
sbb
add
in
sbb
pop
js
test
add
xlat
daa
push
add
leave
fisttpll
add
arpl
jb
popf
adc
cmp
sbb
bound
or
add
mov
adc
mov
sbb
divb
add
and
das
mull
sti
test
add
jge
mov
sbb
repz
scas
or
push
jle
nop
repnz
gs
pop
mov
cld
insb
addr16
xor
ja
add
icebp
push
je
sarb
stos
dec
call
imul
xor
cmp
loop
adc
add
add
add
inc
imul
insb
lret
adc
in
stos
pushf
xchg
enter
push
addb
in
scas
and
jmp
jl
mov
push
jbe
push
jle
add
inc
add
add
pop
lcall
lcall
mov
adc
sahf
cmpsb
add
enter
add
mov
dec
sub
lods
sbb
lcall
push
addb
fisubrs
add
push
jle
imul
add
add
add
lcall
add
add
and
add
cmp
jns
add
jle
iret
add
add
add
pop
in
mov
add
add
jae
add
stos
add
iret
pushf
mov
pop
xor
clts
add
scas
add
test
add
adc
aas
xchg
or
add
add
dec
and
add
sti
icebp
push
in
test
pusha
inc
imul
add
call
cmp
add
add
int3
xor
rcrl
lret
jns
xlat
jmp
add
push
or
add
dec
push
sub
mov
fiadds
add
xchg
push
xor
add
lods
add
scas
add
fidivrs
push
mul
int3
js
add
cmp
nop
aam
mov
pop
cmp
test
add
pop
and
add
dec
cltd
ljmp
mov
add
add
inc
repz
inc
dec
mov
xor
sbb
imul
inc
push
dec
movsb
add
daa
pop
xchg
repnz
push
cmc
std
dec
fimuls
ror
stos
add
sub
add
lcall
pop
ds
cmovae
or
add
mov
xchg
jp
xchg
test
add
adc
data16
outsb
xor
loopne
scas
icebp
aas
frstor
and
add
add
std
gs
cmp
add
dec
cmp
add
psrld
out
mov
les
add
add
test
out
dec
and
add
add
mov
adc
adc
stos
add
into
mov
sub
add
add
mov
addb
dec
mov
jle
popa
stos
add
cmpsb
add
sub
add
add
sbb
add
push
mov
cmpsl
dec
add
inc
sub
pushf
ret
xor
mov
cmp
popf
cmp
aad
jo
or
add
in
aas
jns
jo
xchg
pop
push
fildll
pop
or
add
movsl
push
add
aas
mov
jb
fwait
out
xchg
imulb
add
jecxz
mov
or
add
and
add
movb
fmul
ss
addb
inc
aaa
mov
add
lods
add
push
add
lret
cmpsl
popa
insl
dec
sub
add
repnz
js
ret
hlt
lods
into
mov
add
mov
imul
add
mov
mov
int
push
cli
xor
jbe
call
lock
pop
add
add
pop
enter
add
add
inc
xor
add
cmpsb
add
out
pop
mov
call
add
shrb
push
cltd
mov
add
add
rolb
push
push
pushf
fst
add
fs
mov
mov
cmp
sahf
movsb
add
xor
out
add
lock
mov
add
fwait
mov
movsb
add
sti
xchg
push
out
in
outsl
or
into
pop
in
jne
fsubs
add
xor
hlt
clc
xor
inc
fptan
inc
das
cmp
fcmove
add
lret
jne
mov
add
add
push
shlb
aas
pop
push
add
fldl
and
shrl
fdivrl
add
imul
mov
add
mov
orl
add
sti
mov
jp
mov
add
in
pop
dec
pop
fwait
jg
sub
notl
add
push
popf
lret
jb
add
popf
fbld
add
pop
les
jge
mov
xor
bound
add
loopne
movsb
add
adc
cmp
add
test
add
xor
add
gs
adc
lret
dec
xor
nop
dec
sub
cli
xchg
and
dec
cmp
mov
cmp
negl
pop
mov
add
adc
cmp
mov
xchg
sbb
or
add
mov
add
shlb
jecxz
xor
jecxz
mov
add
xchg
lcall
cmp
add
push
add
mov
add
xchg
movsb
add
xchg
jge
rorl
xchg
inc
inc
push
mov
add
jnp
clc
jecxz
out
lahf
mov
add
test
add
pop
out
push
rorb
or
hlt
mov
add
mov
addb
add
add
jl
fs
cmpsl
repnz
sti
in
xor
xchg
notb
and
add
push
ljmp
pop
mov
push
dec
mov
sub
add
dec
outsb
push
leave
mov
rorl
add
rcll
sahf
push
repz
add
add
jecxz
pop
mov
mov
push
add
jbe
adc
mov
add
pop
mov
add
add
inc
addb
inc
jmp
sarl
ljmp
adc
cmc
addb
xor
aad
shll
jge
lods
add
fstl
push
add
enter
push
add
dec
or
add
or
mov
add
cmp
ljmp
xor
and
scas
add
or
add
roll
sub
push
lahf
inc
push
add
and
add
call
pop
sub
add
adc
sub
xor
lret
iret
xchg
mov
pop
movsl
xor
push
sub
add
std
repz
mov
inc
or
test
add
imul
pop
nop
lret
jno
orl
dec
jmp
sub
add
add
and
add
fwait
js
add
dec
adc
add
test
add
cmc
pop
sub
daa
mov
jl
xchg
mov
push
push
imul
mulb
jne
cmp
adc
xor
jmp
add
repz
cmp
cmp
and
ficoml
mov
jp
add
push
jge
push
addb
xor
insb
lret
add
pop
adc
pop
into
inc
imul
and
xchg
pop
xor
mov
fistl
iret
not
rcrl
inc
ficoms
jbe
xchg
xor
ret
iret
bound
add
nop
xchg
in
enter
mov
add
add
dec
jbe
xchg
into
addb
and
mov
in
mov
fidivrs
iret
xor
fists
xchg
cmpsl
mov
add
fadds
add
jo
mov
test
mov
sti
jle
add
push
mov
scas
push
and
add
add
add
lcall
ret
add
test
add
popf
xor
outsl
js
pop
clc
jns
pop
cwtl
jo
sbb
add
adc
inc
in
push
ret
outsl
sub
add
mov
add
add
add
jb
add
out
dec
aam
xchg
fwait
out
out
int3
sub
test
sti
xchg
dec
adc
loop
hlt
mov
sub
add
jl
ror
test
add
push
xchg
and
add
jle
sub
lret
push
cmp
mov
lods
pop
dec
into
adc
add
xor
fdivr
add
and
add
fwait
xchg
pushw
add
cmpl
loopne
add
add
loope
push
cli
push
jae
addl
jmp
add
gs
jg
add
push
jbe
add
data16
add
test
xchg
add
ror
xchg
fadds
lods
lcall
adc
out
add
and
mov
dec
mov
push
add
negb
ret
add
bound
add
pop
movsl
outsb
les
adc
mov
sbb
add
ds
mov
mov
add
lret
lret
aas
xchg
sarl
addps
divl
imul
xor
sbb
add
in
pop
dec
call
add
push
sub
ret
bound
cmp
add
add
push
out
xchg
jo
fimuls
sub
pop
fists
mov
add
stc
mov
add
adc
popa
out
inc
pop
mov
cli
xor
xor
jo
out
fnstcw
mov
add
or
lret
cltd
cmp
imul
add
clc
jne
add
popf
inc
jo
leave
sub
add
rorb
out
jp
dec
test
add
aas
pushfw
ja
mov
and
mov
lods
add
add
mov
insb
sub
mov
add
xor
jl
sti
iret
jae
mov
mov
insb
jmp
dec
pop
rcrl
mov
mov
add
das
lret
or
mov
add
dec
fidivs
add
repz
cld
ds
pop
push
mov
or
add
add
and
add
xor
add
xchg
and
add
add
loope
icebp
js
cwtl
mov
add
adc
ret
loop
jp
push
cmp
mov
lods
repz
sbb
push
or
add
inc
jp
mov
movsb
add
or
add
add
data16
add
aaa
das
pushf
push
add
stos
test
add
stc
xrelease
add
add
xchg
lret
xor
dec
insl
pop
lods
iret
lret
mov
fcompl
rclb
test
add
add
sub
add
shr
data16
cmpsb
add
fs
add
dec
test
mov
cmpsb
add
mov
pop
inc
adc
sub
sbb
xor
xor
and
aad
dec
cmpsb
add
and
addb
xchg
add
xlat
lock
pop
ja
in
push
cmp
std
js
sbb
outsl
mov
mov
xchg
add
out
mov
add
jbe
push
push
xor
xchg
xor
loope
aas
out
in
mov
xor
jmp
fst
addr16
stos
add
xlat
push
lea
pop
mov
add
and
add
cmpsl
push
add
outsl
cmc
and
leave
xorl
stos
fidivrs
arpl
testb
add
xor
sub
add
add
in
pop
inc
jbe
adc
arpl
fmuls
add
xchg
xchg
mov
add
out
jnp
jbe
aad
loopne
stos
add
stos
add
notl
ss
sub
jge
adc
mov
add
push
and
divb
pusha
xchg
mov
add
inc
mov
and
add
cmp
mov
sarb
out
jae
cmpsb
add
fcmove
mov
add
mov
add
pop
mov
jns
xlat
ljmp
add
addb
jb
add
fcomps
and
test
sbb
rcll
fwait
jb
add
int
push
xor
loopne
mov
xchg
push
rol
enter
cli
cmp
pop
push
mov
and
add
adc
sub
or
lods
add
inc
xlat
add
add
addl
push
cmp
mov
mov
fld
fsubs
ror
xchg
lods
shrb
addb
addb
das
data16
mov
mov
add
ljmp
xor
and
add
sti
xor
or
cltd
adc
out
mov
or
je
out
pop
mov
rcrl
inc
mov
add
in
fwait
js
xor
dec
fsubrs
adc
push
pop
leave
inc
inc
mov
dec
je
adc
mov
xchg
fsts
stc
jecxz
pop
lds
xchg
mov
cli
adc
jmp
adc
int3
lcall
xor
and
les
adc
add
hlt
insb
xchg
mov
add
add
mov
add
pop
ret
fcmovu
lahf
lods
add
fsubrs
add
mov
add
mov
add
in
sarl
add
dec
pushl
aas
mov
dec
fmulp
xchg
cmp
dec
scas
dec
pop
mov
add
std
add
add
fadd
inc
into
in
cld
xchg
cmp
int3
cltd
test
add
add
mov
add
sub
scas
popf
in
in
rcr
add
aam
ja
or
add
sbb
push
adc
std
popa
bound
add
sub
lods
xor
mov
xchg
ja
sub
lods
dec
or
jae
sbb
inc
xchg
ja
push
aam
jne
jae
push
test
cmp
mov
jbe
pop
fdivl
rcrb
out
loopne
loop
loope
aaa
pushf
xor
pop
mov
add
bound
xchg
inc
sarl
cvtpi2ps
add
add
jmp
pop
ss
adc
add
scas
pop
out
xchg
pop
rolb
mov
popf
cmp
popa
cmc
and
add
xchg
shll
enter
add
add
cmp
fwait
stos
add
push
xor
loopne
add
dec
add
jae
pushf
xor
add
inc
jge
lea
cmp
nop
xchg
pop
jmp
add
jecxz
add
cmpl
mov
jns
add
push
cmpsb
add
mov
aaa
dec
xchg
fcomps
xchg
xchg
nop
adc
test
add
adc
int
add
xchg
mov
add
pop
test
vandps
out
adc
flds
push
add
push
bound
dec
loop
test
add
add
add
cmp
add
xchg
aaa
cmp
fisttpll
add
cmpsb
add
sub
add
lret
in
scas
add
mov
add
xchg
inc
adc
dec
add
add
das
ds
dec
movsb
add
jg
add
and
add
or
dec
mov
add
std
or
out
xlat
xchg
sahf
sbb
out
mov
pusha
push
sub
add
push
add
lahf
and
pusha
pop
mov
mov
dec
out
lds
add
or
push
lds
dec
rcpps
add
rcl
popf
fildll
adc
test
ss
cmc
call
aaa
lds
push
add
push
and
shrl
add
mov
push
jae
jge
mov
sub
add
mov
or
mov
mov
add
arpl
aaa
sbb
sti
outsl
popf
mov
int3
cmp
and
pop
jl
loopne
xchg
dec
ja
fwait
test
add
mov
adc
out
cmp
sub
lods
pop
test
add
add
in
arpl
gs
or
add
into
add
adc
push
mov
insl
into
sahf
repnz
push
pushf
addb
arpl
adc
clc
add
add
insb
stc
imull
add
dec
flds
add
dec
mov
inc
adc
inc
in
mov
loop
testl
xchg
out
sbb
fnstsw
xchg
mov
or
adc
add
push
push
mov
xchg
or
mov
xor
mov
lds
data16
add
inc
scas
add
push
out
out
cmp
add
xchg
call
jmp
addr16
push
cli
out
mov
add
and
add
add
stc
push
jp
add
cmc
mov
movsl
fcomi
lea
and
add
add
movsb
add
dec
dec
cmp
mov
cld
inc
xor
lods
add
xor
add
insb
xchg
aaa
movsl
call
imul
jno
inc
mull
add
out
sub
icebp
push
lret
cmp
mov
bound
iret
lods
mov
mov
push
add
pop
xchg
jbe
add
mov
mov
push
out
or
add
dec
ja
adc
mov
fstp
sti
or
cmp
daa
pop
xor
out
add
sti
nop
inc
out
addr16
pop
add
in
jle
insb
cmpsl
jnp
mull
mov
inc
push
in
lods
mov
in
add
dec
ds
add
add
add
cmp
and
add
add
scas
shrb
mov
popa
sti
out
mov
add
mov
sub
add
xor
lahf
sti
in
pushf
mov
hlt
add
add
jnp
test
pushf
jne
std
jns
pop
mov
or
add
adc
mov
add
xchg
add
mov
jno
dec
aaa
fdivrp
inc
pusha
test
add
cmc
leave
dec
push
add
pop
jbe
jl
rcl
add
ds
and
add
sbb
fsubs
cmp
inc
in
test
add
std
jno
ss
shll
stos
add
addb
ljmp
into
xchg
imul
iret
in
shll
add
mov
add
insl
fwait
test
add
fiaddl
add
adc
in
pusha
dec
lods
fbld
add
ficompl
pop
push
add
and
add
rep
jb
jge
pusha
inc
je
aaa
xchg
out
cmp
add
clc
in
into
jp
add
inc
jp
mov
jae
lret
loope
mov
add
add
adc
inc
adc
add
adc
flds
cmpsl
mov
push
lods
add
pop
test
add
sub
add
adc
cmp
add
add
enter
add
in
mov
add
outsl
cmp
loope
or
add
mov
or
popa
adc
sub
add
rcr
xor
lods
add
push
adc
leave
add
test
add
push
jmp
add
mov
test
loopne
add
jo
add
lock
inc
lret
add
out
adc
call
push
mov
cmp
sti
inc
sub
cmp
mull
add
adc
dec
fnstsw
test
mov
mov
add
movsb
add
fdiv
xor
pop
std
sub
xor
add
add
ss
or
add
lcall
cmp
mov
add
loopne
mov
std
popl
and
sarb
outsl
inc
xchg
iret
test
add
push
pushf
jae
cmp
add
xor
inc
mov
adc
ds
fimull
in
pop
mov
add
rcrb
mov
add
add
test
add
add
add
add
fldenv
and
add
cmp
test
movsb
add
subl
movsl
push
daa
and
call
mov
add
push
scas
add
cmp
ds
xchg
stc
arpl
pop
in
rcrb
int
loop
add
xchg
repnz
mov
add
ret
lock
add
jnp
sub
add
ret
shufps
add
add
push
jo
in
dec
mov
push
add
xor
fcoml
loopne
add
mov
add
mov
or
lret
negl
mov
popf
addr16
xchg
scas
scas
add
data16
scas
add
add
test
add
xor
dec
pop
push
add
pop
cltd
cwtl
cmp
js
movsl
add
push
xchg
dec
sbb
shl
mov
jne
add
adc
cli
stc
aad
or
sbb
pushf
pop
rcrl
cltd
pop
inc
in
rorl
mov
cmp
xchg
cli
mov
mov
add
add
aam
adc
cmp
add
pop
pop
xchg
out
push
add
out
add
and
add
pop
lea
dec
enter
ficoml
pop
outsb
fwait
arpl
cld
add
add
iret
mov
aad
testl
sbb
sub
cmpsl
pusha
scas
pop
in
pop
pop
mov
fcmovbe
sahf
jb
mov
add
addr16
or
add
push
and
add
fstpl
stc
inc
sbb
cld
sbb
dec
lods
add
arpl
pop
xchg
xor
fwait
and
add
mov
cmp
imul
sbb
xlat
imul
jb
or
add
test
add
cltd
aam
add
cwtl
sahf
adc
add
les
jb
mov
add
test
add
add
addr16
insb
pop
mov
sub
jg
aaa
insb
mov
mov
add
mov
ret
add
add
add
icebp
add
sbb
sbb
outsb
mov
out
pop
ret
push
add
out
jp
add
sub
pop
pushf
sub
fistl
add
or
nop
loopne
mov
add
fxch
xchg
arpl
add
lods
add
jl
fildl
enter
mov
cmp
add
sub
xchg
int3
sbb
add
xchg
and
add
popa
lcall
add
out
aaa
sbb
lods
popa
mov
sub
call
add
add
stos
add
mov
add
cmp
inc
pop
shr
pop
cltd
pop
jns
adc
mov
add
cmp
mov
add
repnz
stc
cmp
stos
in
xor
ret
dec
cld
inc
mov
add
xor
push
aaa
lret
add
pop
js
and
mov
sbb
add
lahf
add
add
add
add
add
ss
std
pop
addb
pushf
push
or
add
xchg
inc
movsb
add
addb
mov
aaa
xchg
out
loop
adc
add
xor
call
mov
inc
pop
cmp
dec
and
add
shr
call
add
in
cmp
xor
mov
add
mov
mov
or
addr16
add
push
add
cmc
pop
pop
mov
loop,pt
push
sbb
add
pop
push
pop
mov
subl
sbb
add
cmp
dec
jne
inc
xor
cmp
lock
sbb
add
jb
cmp
add
mov
add
arpl
cmpsb
add
mov
add
adc
jae
mov
sub
add
scas
add
pop
aam
inc
fstps
lea
clc
sub
add
notl
mov
test
out
push
pop
mov
pop
scas
add
mov
and
jo
mov
rcl
dec
add
not
mov
xchg
sbb
loop
fnstcw
add
mov
add
pushf
ret
add
adc
in
mov
mov
pop
mov
aam
fnstenv
push
jl
pop
shll
add
add
cmp
mov
shlb
add
fsubrl
add
xchg
cmp
loope
ret
mov
add
pop
mov
add
test
add
add
test
add
mov
mov
add
aad
add
sub
in
cltd
and
add
mov
inc
pushf
sbb
cmp
dec
stos
and
add
bound
inc
repnz
ljmp
push
sbb
mov
cld
fiadds
add
arpl
add
jmp
xchg
dec
in
mov
add
popa
movsb
add
and
jecxz
mov
mov
jp
inc
add
jne
add
movsl
rcrl
add
add
xchg
lock
das
add
out
outsb
lea
add
adc
enter
outsb
push
dec
pop
stos
addr16
inc
mov
xor
add
jle
sbb
dec
je
and
push
add
lods
lods
push
add
sub
xchg
sbb
add
popf
test
add
loope
pop
cmp
add
mov
mov
add
add
ja
mov
push
mov
shlb
inc
mov
jmp
mov
cmp
mov
add
mov
out
fs
cltd
fsubl
shll
add
add
fsubl
fldenv
sbb
call
xlat
cld
out
in
aam
inc
push
inc
inc
cld
xlat
clc
sbb
xor
or
add
addb
or
mov
fisttpll
addb
cmc
lcall
add
js
inc
or
add
test
add
xchg
out
xchg
sbb
adc
pusha
jo
clc
dec
lret
mov
add
mov
pushf
push
xchg
fs
int3
pop
or
xchg
shll
add
xchg
add
push
inc
dec
gs
xchg
adc
add
mov
pusha
sub
push
pop
and
fidivl
and
incl
pushf
pop
imul
add
xchg
aam
shrl
add
xchg
add
jecxz
and
add
rcrb
pop
icebp
addr16
movb
sub
add
add
inc
in
mov
mov
mov
add
in
xor
mov
lods
add
inc
push
divl
cmp
inc
jmp
add
repnz
add
rcr
arpl
or
add
sbb
cmp
push
add
add
xor
add
nopl
add
out
push
add
pop
leave
jmp
ja
lret
mov
insb
add
ret
jnp
add
enter
cmp
pop
mov
add
stos
add
pusha
inc
lea
and
add
int3
dec
das
inc
test
add
xor
xor
add
mov
sbb
xchg
fwait
jbe
jp
add
add
add
sub
sub
add
add
stc
mov
add
pop
sahf
xorl
dec
out
pop
dec
in
push
add
add
add
add
mov
or
insl
dec
mov
jns
int
jo
add
sub
movsb
add
push
or
add
cli
data16
pushf
mov
add
or
adc
nop
pop
cmp
mov
jae
inc
movq
pop
loopne
clc
out
jns
xor
mov
addr16
popa
mov
push
add
aaa
shll
add
jge
cli
push
mov
add
push
mov
mov
add
insb
test
std
sbb
mov
test
sbb
out
add
add
pop
cmp
sub
in
cmpsl
adc
xor
and
add
fdivl
adc
add
sub
add
add
add
outsb
xchg
push
fld1
outsb
cwtl
push
lahf
dec
mov
pop
cld
push
pop
imul
out
les
jnp
add
add
lods
add
jp
outsb
mov
mov
js
test
add
movsl
sub
add
adc
add
push
lret
and
outsb
enter
sbb
pop
pop
xor
add
add
push
mov
cmp
add
adc
jbe
shlb
lds
mov
add
push
jecxz
push
sbb
out
inc
sbb
sbb
inc
xor
and
leave
leave
int3
mov
mov
mov
mov
ds
je
pop
xchg
cmpl
inc
aaa
cmc
cmp
cmc
add
cli
push
dec
and
fistps
fwait
ja
add
into
rorl
out
pusha
mov
push
xchg
xor
add
xchg
add
stc
pop
sbb
adc
fidivs
add
add
imul
lret
or
add
shr
gs
js
mov
in
das
mov
mov
add
adc
leave
loope
imul
ja
lcall
add
sbb
out
insl
jb
ret
fidivs
inc
cmp
mov
mov
jne
enter
or
add
jo
add
pop
pop
inc
xor
hlt
lods
add
leave
ljmp
mov
pop
test
add
das
js
pop
jbe
push
lods
add
test
add
add
lods
add
add
inc
sub
add
decb
xchg
add
lret
repz
leave
inc
mov
aad
int3
dec
rorl
arpl
mov
idivb
or
sub
movsl
jne
mov
add
and
add
jp
add
inc
call
sub
add
dec
and
sbb
rcr
mov
ficomps
outsl
stos
out
ror
jbe
ljmp
lahf
mov
add
inc
sbb
cwtl
lahf
cwtl
clc
jno
icebp
enter
add
add
add
add
mov
sbb
insl
sub
add
add
jl
rorb
mov
adc
dec
lods
add
fists
jns
xor
add
cmp
aaa
add
push
sahf
jne
add
add
mov
mov
add
add
test
add
les
subl
mov
add
into
pop
je
pop
popf
mov
stos
mov
add
lods
add
repnz
and
add
add
jg
cwtl
out
icebp
push
pop
ljmp
mov
jne
std
mov
repnz
add
xchg
fcmovb
mov
push
add
xchg
add
dec
sti
insb
ret
jp
ja
pop
and
in
push
in
and
aad
call
pusha
ljmp
dec
fisubrs
add
cmp
rcr
mov
add
dec
fsts
mov
add
mov
bound
add
jae
icebp
add
add
or
xchg
add
add
nop
mov
add
add
mov
arpl
and
mov
stc
push
in
xchg
add
dec
add
add
fmuls
sbb
ds
add
add
bound
outsl
arpl
add
mov
add
test
ds
out
pop
jns
and
add
std
sub
add
repnz
add
mov
dec
sti
jnp
cmp
test
popa
xor
add
add
ja
add
mov
sub
addb
inc
dec
mov
notl
add
fnsave
jg
inc
push
cmp
popf
scas
addr16
sub
add
in
jbe
outsl
iret
inc
ret
sub
sbb
adc
add
and
mov
jb
int3
push
dec
popa
add
clc
das
push
pushf
in
mov
add
lock
push
lret
jge
insl
adc
sbb
xor
xchg
sahf
hlt
mov
pop
mov
dec
mov
add
pusha
test
clc
or
push
push
add
lock
add
add
xor
out
push
lods
add
mov
dec
or
daa
or
add
add
push
std
in
pop
and
pop
nop
mov
add
pop
inc
sahf
out
sbbl
test
add
mov
inc
and
loopne
xchg
mov
add
pop
mov
sbb
psubusw
add
or
or
sahf
mov
add
add
je
adc
jbe
out
repnz
imul
xor
pop
cmp
or
xor
mov
cmc
insl
xor
jae
pop
cmpsl
inc
push
push
add
shlb
pop
xor
push
ljmp
push
add
mov
add
mov
clc
add
pop
and
add
enter
or
dec
fwait
mov
mov
repz
xchg
lcall
dec
filds
add
lahf
add
add
xor
add
test
add
or
test
add
das
or
mov
rolb
aaa
inc
cmpsb
add
jbe
add
cli
ja
imul
or
add
mov
addb
mov
roll
add
adc
jge
dec
jno
test
out
stos
add
mov
add
add
cmc
jg
js
sub
add
inc
sbb
movsl
pop
jb
cmpsl
fcmovnbe
and
and
insl
out
push
add
lret
inc
mov
pushf
das
lea
add
add
pop
aas
xor
fisttpl
jecxz
jne
add
cmpsb
add
insl
add
add
add
add
adc
call
aas
imul
lahf
sbb
fwait
sub
cmp
and
add
jmp
scas
add
mov
push
push
xchg
sahf
nop
popf
xchg
add
sbb
add
jnp
push
sbb
cmpsb
add
or
add
sarb
test
mov
test
add
out
mov
scas
add
mov
out
bound
jno
loope
arpl
add
mov
rclb
les
scas
lcall
xchg
add
jl
or
aaa
jo
and
add
cld
and
add
mov
into
xchg
in
xchg
lea
add
and
add
jo
gs
sbb
dec
xchg
std
inc
std
dec
out
lods
test
sbbl
add
ret
sbb
add
bound
add
mov
add
fs
ret
push
mov
and
sbb
add
stc
mov
lock
add
sub
add
adcl
pushf
fisttpl
add
insb
mov
add
jnp
push
aaa
call
sbb
and
add
arpl
inc
mov
jbe
lods
test
add
inc
sbb
mov
out
insl
jno
mov
daa
cmp
aas
push
cmpsl
cwtl
cmp
cmpsb
add
dec
xchg
add
dec
daa
add
cmp
cmp
iret
inc
xchg
cmp
movsl
xchg
adc
jno
pop
xchg
jnp
scas
dec
mov
push
out
sbb
aas
jbe
andl
out
and
add
call
out
push
test
xchg
xchg
js
ret
ss
sahf
jne
add
and
add
xchg
mov
lret
enter
add
fndisi(8087
mov
mov
stc
test
fnstenv
xor
add
repnz
ja
add
lds
ffreep
shrb
cmpl
repnz
jno
out
add
sbb
lcall
xchg
jmp
add
xchg
add
add
add
dec
mov
add
xor
jo
in
lcall
inc
pop
out
xchg
dec
inc
ds
leave
stc
lds
add
jb
dec
aam
filds
push
repz
add
jle
xchg
nop
sub
cmp
jp
inc
loope
testl
add
enter
pop
incb
test
add
fistl
rorb
xlat
addb
scas
outsl
pusha
clc
addr16
add
int
fnstsw
ret
add
add
jmp
cmp
add
add
cmp
add
int3
or
add
std
cmp
cmp
sahf
cwtl
in
sub
add
add
dec
aad
scas
idivb
shrb
sbb
add
outsb
test
add
xchg
cmp
adc
push
sbb
add
xor
jnp
call
and
in
dec
hlt
pop
and
je
fwait
inc
cld
cli
xchg
mov
or
add
add
cmp
jo
fucom
lahf
pop
addb
test
add
push
jb
mov
dec
pushl
leave
inc
psubb
scas
add
jb
jg
add
in
lods
add
or
add
adc
mov
add
add
repnz
or
add
cmc
add
add
stc
mov
mov
lret
sbb
and
add
lods
subl
mov
aas
fsubrp
jo
aam
add
fbstp
out
pop
cld
call
add
add
and
mov
add
dec
lcall
inc
pop
sbb
xlat
jnp
repz
adc
or
scas
add
push
push
insl
and
add
pushw
outsl
sub
add
cmp
test
add
push
scas
xchg
add
mov
mov
add
popa
nopl
addr16
inc
gs
sti
pusha
leave
addb
icebp
loope
pop
xlat
pop
sarb
insb
popf
add
daa
loope
idivl
out
mov
or
add
ss
add
in
add
inc
cmc
ss
add
add
adc
add
sbb
inc
jg
inc
clc
add
sbb
xchg
int3
sbb
inc
imul
pop
addr16
das
or
add
or
add
shl
push
test
add
sarl
xchg
mov
inc
lods
add
push
les
and
in
pop
mov
jae
ss
dec
scas
movsb
add
adc
add
inc
fstpl
popa
add
cmp
pushf
lahf
xor
scas
add
mov
dec
adc
pop
adc
add
daa
xchg
add
dec
scas
add
mov
xchg
inc
jl
pop
ja
or
add
popf
pusha
pop
imul
pop
push
add
out
rorl
add
jb
insb
add
mov
sub
add
jns
mov
mov
push
dec
test
add
idiv
dec
les
xchg
fnstsw
aam
pop
dec
repnz
add
std
xor
sub
fs
add
lock
jo
or
add
call
add
jge
cmp
cmc
jg
or
add
push
add
inc
test
lcall
loop
pushf
xchg
mov
mov
in
dec
cmpl
ljmp
cmp
and
add
das
lar
add
in
loopne
clc
sbb
or
adc
xchg
add
add
cmp
xlat
stos
add
inc
sbb
mov
pop
or
leave
ds
neg
hlt
addr16
addl
add
mov
test
add
mov
add
jae
add
add
add
call
in
and
add
aas
stos
lock
jle
add
add
sub
pushf
pop
in
add
push
or
add
out
cmpsl
push
fisttpll
cmp
jbe
dec
data16
icebp
inc
movl
mov
jae
test
cmp
aad
jp
add
jno
das
fmul
pop
push
mov
add
and
add
adc
mov
jo
add
cmp
shl
add
add
xchg
mov
in
enter
mov
adc
add
adc
imul
xor
sbb
xor
adc
add
add
movsl
sub
add
sti
int3
xor
jae
jno
test
add
mov
add
xor
ret
sub
add
xchg
inc
jo
fbld
add
aaa
inc
and
add
mov
test
add
cld
push
pop
out
sbb
add
lods
add
lods
add
add
add
jno
jo
adc
add
rdmsr
das
ja
int
mov
add
xchg
fldenv
push
push
add
xchg
jg
or
add
or
add
popf
xchg
repnz
pop
jb
popf
rclb
xchg
pop
insb
inc
mov
and
lea
in
push
in
into
js
and
jae
decb
add
iret
pop
stos
fildl
ljmp
stos
into
mov
add
lods
add
std
in
outsl
sti
and
nop
sub
add
or
pop
orl
cli
imul
xor
js
xchg
aad
pop
nop
push
call
xor
in
inc
and
add
or
mov
add
add
scas
add
out
push
add
aad
pop
rcl
push
sbb
stos
add
lods
or
add
xchg
sub
add
mov
mov
lret
add
jae
add
push
jbe
mov
add
lret
std
pushf
jns
shl
push
xchg
cmp
shlb
dec
mov
add
lret
sub
add
and
add
fsubrl
add
sub
mov
push
mov
add
inc
mov
shrl
or
mov
call
add
stos
add
adc
add
cmpsl
aam
add
in
ret
add
loopne
leave
mov
cmc
push
xor
cmp
xor
outsb
imul
dec
inc
cltd
jmp
pop
hlt
xor
clc
fiaddl
cld
test
add
add
xchg
jne
ss
add
dec
cmpsb
add
xor
insl
sub
add
pop
scas
cwtl
ret
push
add
jge
push
dec
dec
cmp
inc
mov
bound
pop
xchg
in
shll
add
sub
add
dec
xor
mov
add
js
imul
add
xor
add
sbb
movsl
cltd
mov
hlt
cwtl
cmpsl
mov
enter
bound
mov
add
xchg
outsl
mov
add
aas
out
pop
imul
decl
adc
push
add
repnz
gs
sbb
loope
add
add
pushf
fiadds
mov
mov
jae
add
fisttps
pop
add
xchg
adc
inc
in
and
mov
add
cmc
fisubrs
push
lea
frstor
add
add
sbb
xor
sahf
test
add
add
add
add
push
cmp
add
fldenv
add
mov
add
push
fimull
sub
add
push
cwtl
cmp
adc
add
add
xchg
add
mov
aas
test
add
loop
aam
test
add
cld
lds
adc
mov
add
sub
out
mov
rol
js
stc
addb
stos
add
sbb
add
je
je
mov
nop
push
idivb
adc
mov
mov
outsl
xor
jae
fcmovb
xchg
rcll
add
jecxz,pt
aaa
outsb
scas
add
int3
imull
mov
add
icebp
cmp
movsl
jns
andnps
or
add
out
test
and
add
cmpsl
dec
sarb
add
test
mov
add
inc
ss
push
xlat
cmp
stos
xchg
add
mov
xor
add
insb
sub
xchg
inc
hlt
insb
imul
cmpsb
add
jne
dec
dec
sbb
and
add
jl
dec
sub
add
cmp
dec
and
nop
jl
sub
mov
add
imul
fadds
mov
add
push
loopne
int3
adc
add
cmp
adc
xor
cmp
fildl
cli
and
cli
fwait
cmpsb
add
add
addb
into
and
add
push
xchg
mov
jle
ljmp
addr16
jo
lds
add
cmpsl
xor
mov
mov
jo
mov
psubq
fsubrs
push
insl
lret
xor
idivb
movsl
fwait
arpl
clc
cmp
sub
push
stos
add
mov
lock
add
and
add
dec
cmc
mov
lahf
les
stos
out
or
dec
xchg
cltd
repnz
loopne
cmp
cmpl
push
xlat
mov
add
mov
add
hlt
push
loope
insl
cmc
call
sbb
movsl
mov
add
lcall
sbb
add
fsubp
sub
add
icebp
lea
dec
xor
lea
add
push
add
add
lcall
sub
jecxz
outsl
dec
adc
add
add
xchg
pop
test
mov
add
add
jae
and
test
test
and
pop
push
nop
popf
ret
mov
add
sbb
add
cmp
mov
adc
fsubp
dec
xlat
xchg
mov
add
jl
sub
add
into
adc
push
add
mov
sbb
leave
pop
adc
fistl
mov
out
jle
mov
xor
add
sbb
mov
add
and
add
fisttpll
xor
outsl
pop
jg
popl
add
mov
push
add
xchg
add
add
add
ficoms
inc
push
pop
pop
xchg
pop
test
mov
add
or
add
pushf
and
add
push
sarb
data16
scas
add
mov
jge
dec
fcoms
nop
arpl
outsl
std
cmp
dec
stc
push
cwtl
jmp
clc
orl
xchg
jae
incl
add
add
add
adc
sarb
int
sub
cmp
push
add
sti
pop
movsl
jle
cli
push
in
dec
jmp
inc
daa
movl
divb
xorl
add
mov
add
push
lds
js
add
add
xchg
mov
xchg
lret
test
add
jge
mov
or
add
dec
xchg
nop
cmp
add
mov
or
lea
add
outsb
repnz
imul
push
add
sbb
fbstp
shll
jne
xor
and
inc
aad
xchg
xchg
cmp
mov
jle
dec
fisttps
je
or
add
add
je
daa
push
hlt
popa
popf
and
fnstenv
and
add
add
frstor
lret
gs
and
add
in
icebp
mov
outsl
outsb
fistpll
and
shr
in
xchg
mov
add
repz
add
test
add
add
xchg
mov
pop
xor
sub
jl
std
pop
mov
push
sub
cmp
cli
comiss
add
dec
cltd
addr16
pop
and
add
aas
daa
push
cli
jb
add
outsb
mov
add
or
add
adc
sub
add
imul
add
lds
popa
jnp
mov
add
mov
add
dec
cltd
and
mov
add
outsl
cmp
outsl
add
push
mov
repz
stos
add
cmp
in
sub
sub
adc
enter
jg
gs
ror
popf
jb
jecxz
arpl
lods
add
add
popf
sbb
jbe
add
aas
mov
xor
popf
xchg
or
add
dec
xchg
mov
jne
mov
dec
inc
sub
mov
adc
add
idivl
mov
cmp
jl
xchg
fldl
cwtl
mov
cmp
out
sub
add
push
gs
cwtl
stos
add
mov
mov
add
inc
dec
sub
mov
adc
sbb
or
movsb
add
outsb
out
lahf
sbb
push
add
pop
in
and
add
gs
xor
mov
add
mov
jp
add
ljmp
repnz
mov
aam
add
inc
outsb
sub
add
push
loope
loopne
jb
push
adc
push
adc
addb
xchg
fstpt
mov
add
sbb
fwait
lds
jbe
sbb
popf
loope
add
jmp
add
sbb
loope
stos
add
test
add
xchg
sbb
inc
int3
mov
mov
sbb
add
sarb
mov
aam
stc
addr16
icebp
pop
dec
cmp
aam
mov
push
add
cwtl
cmp
add
and
add
in
pop
insb
or
add
add
adc
dec
mov
ljmp
mov
push
xlat
loop
xchg
rclb
das
xchg
mov
enter
and
add
sub
add
std
push
fstpl
dec
and
add
js
add
add
shlb
enter
add
cmp
pusha
or
imul
dec
mov
add
add
add
xor
pop
mov
xchg
loope
jns
mov
add
mov
add
fs
popa
sub
add
dec
paddd
sbb
jno
add
sub
add
jb
insl
outsl
inc
lock
add
notb
sub
add
outsb
fcmovb
inc
sbb
or
pushf
mov
add
add
jne
rcrb
sbb
mov
fsts
call
add
push
inc
xor
add
jle
sar
ja
push
ds
add
pop
sub
lea
jle
insl
jnp
leave
daa
xchg
dec
cli
sahf
popf
xchg
ja
lahf
cmp
add
add
popf
jb
push
movsb
add
xchg
mov
dec
cmp
pop
call
lret
mov
xlat
adc
cmp
add
push
pop
addb
xchg
stc
add
add
push
pop
fadds
push
adc
mov
pop
ret
aas
push
in
add
loopne
pusha
xchg
push
inc
cld
iret
lods
fstpt
int3
jae
jecxz
lods
add
mov
xor
or
add
push
subl
enter
mov
cmp
jge
add
sbb
pop
hlt
xchg
inc
lods
add
xor
inc
adc
test
add
add
cmpl
add
add
add
adc
dec
and
add
js
add
xor
add
addb
shl
cltd
inc
jb
sub
add
call
cmp
daa
jg
add
or
add
push
ja
mov
lea
add
popf
adc
fstpl
xchg
iret
mov
repz
sub
in
jp
ds
fsubrp
add
add
sbb
cmp
xchg
jnp
out
adc
inc
shrl
fsub
scas
mov
add
aaa
adc
xchg
shll
inc
sbb
popf
arpl
mov
mov
add
or
dec
lock
out
fcmove
jb
je
add
dec
xlat
test
add
add
addb
cmp
sti
jg
loope
call
hlt
cld
nop
enter
lret
add
add
je
js
ret
mov
mov
add
jae
adc
into
sbb
repz
sbb
cld
addb
jg
add
pop
cmp
add
jno
aas
addb
test
push
mov
mul
out
shlb
jo
jle
jmp
fdivr
and
add
bound
add
add
cltd
pop
cmp
xchg
jmp
dec
popl
repnz
add
lret
ds
push
sbb
xor
add
sbb
test
lock
mov
aam
add
imul
add
jo
pop
and
pop
pop
test
add
lcall
add
add
xchg
pop
notl
in
in
jmp
mov
add
add
das
daa
cmp
push
push
sbb
pop
lods
add
inc
xchg
ljmp
add
jecxz
mov
xchg
xor
add
add
andl
push
sahf
sar
sarl
and
add
stos
add
sub
add
stc
push
push
add
push
test
add
adc
stos
add
pop
movsb
add
mov
movsb
add
scas
jae
pop
std
aad
sub
rcll
inc
xchg
js
mov
xlat
pop
and
add
lods
add
adc
ficoms
xchg
mov
inc
push
inc
sub
add
out
sub
add
ja
fbstp
out
mov
mov
cli
push
aas
test
add
add
fldcw
mov
lods
add
bound
sbb
addr16
add
ss
aaa
ret
fs
hlt
jg
add
dec
adc
or
mov
mov
sub
jp
sub
add
mov
jp
push
repnz
daa
xchg
pop
mov
mov
push
add
sbb
mov
test
pop
sbb
call
mov
inc
ss
cmc
xor
or
mov
add
lcall
pop
addb
cltd
push
inc
ret
call
mov
add
jo
add
jmp
arpl
dec
sar
jmp
or
add
add
add
add
mov
adc
add
sub
mov
aas
xchg
xchg
add
add
cmp
pop
cmp
push
out
mov
mov
gs
add
das
addb
scas
aas
loopne
std
fsubl
pop
jb
adc
lea
xchg
add
add
test
add
fildll
add
das
addb
into
fcomip
mov
bnd
bound
add
mov
clc
out
test
add
add
imul
push
and
add
sbb
into
mov
lcall
pop
mov
or
add
iret
jbe
fdivrs
rcrl
outsb
negl
jp
std
mov
jno
aas
mov
add
xor
add
mov
mov
adc
addb
lock
sarl
push
push
add
inc
sbb
xchg
mov
add
xchg
push
popa
out
pop
inc
cltd
cmc
out
add
dec
xchg
in
mov
add
add
sub
add
sbb
or
push
or
mov
mov
jb
cmp
add
mov
jo
mov
add
ficompl
mov
mov
add
inc
sbb
add
mov
add
and
add
sub
mov
and
push
lcall
xor
add
or
add
mov
mov
inc
stos
add
lcall
les
cmp
in
test
add
sbb
dec
cltd
inc
daa
arpl
add
sub
add
and
lret
add
cwtl
mov
in
push
mov
cwtl
cwtl
and
add
cmovp
daa
leave
mov
add
dec
loopne
loopne
aam
aas
jp
add
xchg
jns
add
add
add
add
lea
cmp
inc
int3
add
add
pop
mov
add
jae
cmp
jmp
mov
xor
or
add
push
cmp
jp
add
push
add
stc
fsubl
sbb
add
loope
fs
cmp
pop
das
add
bound
add
or
pop
jae
jp
repnz
dec
sub
das
stc
repnz
or
add
cmpsb
add
mov
inc
cmpsl
xchg
xlat
push
les
pop
and
add
stos
add
inc
mov
in
imul
jns
loop
pop
ret
xchg
and
add
dec
and
pop
pop
out
xchg
add
push
repnz
add
push
jmp
pop
xor
cmpsb
add
movsb
add
pop
test
repnz
add
add
sbb
mov
xchg
add
addb
movsb
add
addb
push
sbb
push
xchg
cltd
push
add
pusha
push
adc
fbld
add
jns
fstl
fadds
add
ss
xlat
xchg
movsl
pop
popf
cwtl
lret
add
add
pop
sti
dec
loope
ss
mov
add
and
xorl
shl
add
mov
add
rol
sub
add
imul
test
lret
fwait
mov
add
or
mov
add
ljmp
insb
sahf
pop
mov
test
mov
add
bound
xlat
daa
xchg
dec
dec
arpl
push
cmp
imul
sbb
aas
push
pusha
rorl
add
add
sbb
add
add
fucomip
sub
add
pusha
int
and
outsl
jmp
xor
pop
cmpsb
add
mov
push
mov
add
add
push
add
leave
jo
jecxz
xchg
dec
ret
add
sub
push
cmpsb
add
divb
add
pop
addb
push
jb
pop
jbe
push
push
inc
out
cmp
inc
mov
add
ror
or
add
sub
add
adc
fnsave
push
and
out
stc
xlat
cli
popf
jp
jp
fbstp
jp
xchg
inc
hlt
das
arpl
push
ret
push
mov
add
ljmp
add
imul
mov
add
adc
loop
pop
jne
add
mov
fdivrs
cltd
or
adc
add
sbb
imul
push
jmp
add
mov
add
test
cmp
mov
add
hlt
pop
add
add
mov
jnp
pop
or
add
lcall
repnz
add
cwtl
xchg
push
addr16
stos
rorl
mov
add
adc
add
add
adc
adc
push
mov
mov
mov
push
pop
jge
das
jnp
pop
popa
cmp
mov
out
mov
mov
add
mov
in
out
aas
dec
push
inc
push
add
leave
or
movsl
movsb
add
jae
addb
ret
js
and
pop
dec
sbb
les
lods
add
and
add
xchg
sahf
sbb
add
rcrl
sbb
mov
add
or
add
pop
shlb
int3
mov
add
xchg
add
outsl
mov
cmp
add
add
add
fisttpl
add
adc
add
shlb
add
inc
pop
test
or
add
pop
mov
fs
or
and
add
xor
dec
xchg
out
xor
adc
mov
add
in
pop
dec
aaa
mov
add
add
mov
mov
add
add
fs
lret
repnz
int3
mov
add
test
add
lcall
add
loopne
stos
add
dec
xor
sar
lds
ret
xor
cmp
xor
bound
mov
in
repz
add
sbb
xchg
mov
add
outsb
pushf
fistpl
daa
fwait
add
add
add
mov
add
add
cltd
imul
add
cmc
and
add
xor
cld
xor
test
jne
ret
xchg
xor
sbb
adc
add
addb
adc
inc
adc
add
add
push
aad
and
out
xor
jp
addb
inc
dec
add
cltd
adc
add
and
add
add
mov
js
icebp
pop
push
fbld
add
test
add
test
add
sbb
jmp
add
add
movsb
add
imul
jne
aam
stos
add
xor
mov
add
mov
add
clc
mov
add
add
jb
xchg
and
add
add
add
add
add
push
add
adcl
add
sub
add
cmp
shr
jge
outsb
jns
push
add
test
xchg
add
add
jecxz
insb
loopne
fucomi
clc
mov
xchg
add
add
pusha
popa
mov
add
add
ss
and
cwtl
add
mov
push
xchg
loop
cmp
js
add
lods
dec
data16
mov
aaa
lea
add
mov
mov
add
in
mov
sub
lahf
repz
jmp
jge
xor
add
flds
add
add
add
cmp
add
xchg
jb
stos
add
cmp
shl
xchg
add
or
add
add
add
mov
sub
add
lahf
pop
jmp
fwait
cmpsl
pop
add
add
mov
jg
in
out
or
add
cld
imul
push
scas
mov
mov
add
add
jbe
clc
cwtl
jo
mov
pop
push
lods
dec
mov
fisttpll
jmp
or
mov
and
add
add
xor
mov
fisubrs
daa
sbb
add
addb
das
fsub
mov
aad
loope
xchg
mov
nop
pop
adc
testl
jmp
fstpl
hlt
lock
shl
out
jle
add
mov
jmp
mov
dec
mov
xchg
imul
pushf
jge
int
fidivrl
cli
or
add
add
add
cmp
decl
mov
add
mov
add
add
xchg
mov
movsl
js
sahf
fisttps
rol
cmp
cmp
repnz
pop
decb
add
add
ds
sbb
xchg
mov
sbb
add
imul
hlt
lahf
push
je
loop
in
mov
add
mov
jecxz
pop
push
stos
addb
xchg
jo
repnz
or
push
adc
sub
add
jo
out
out
mov
and
add
enter
jmp
xchg
push
jbe
repnz
ds
jecxz
loop
cwtl
into
ljmp
pushf
addb
lea
push
shr
add
add
add
jb
leave
jge
inc
stc
pop
outsl
cld
ljmp
xchg
pusha
sub
shll
icebp
fsubs
rorl
lods
mov
add
xchg
incl
xor
add
add
push
insb
or
add
add
cmp
jnp
xor
and
add
addr16
dec
inc
dec
and
add
jmp
movsl
outsb
outsl
jno
add
movsl
adc
mov
sahf
xchg
add
push
add
mov
mov
test
aas
pop
loope
fiadds
jne
imul
add
aam
into
roll
xor
mov
inc
push
gs
std
test
inc
xlat
dec
mov
ss
dec
daa
stos
add
add
add
mov
push
mov
mov
mov
add
sub
add
dec
fidivl
and
add
lea
loop
push
imul
add
pushf
rclb
inc
and
add
test
add
js
push
add
enter
add
push
add
lahf
rcll
and
sub
test
add
lahf
pop
mov
cmp
mov
add
xor
and
fcomi
sbb
fs
fstl
sti
mov
mulb
fwait
push
add
int3
shlb
and
add
push
jmp
add
jle
gs
pop
inc
outsl
mov
movsl
add
add
add
add
sarl
inc
fsubp
pushf
push
pop
jns
cmp
add
call
add
test
add
jp
test
add
mov
adc
out
jp
add
bound
cmc
scas
inc
xchg
arpl
lock
add
sbb
in
and
add
out
cmpsl
data16
out
fildl
addb
insb
push
add
push
add
mov
dec
mov
aaa
roll
pushf
std
fnstcw
jbe
ret
andl
in
add
and
add
add
aaa
and
jmp
outsl
adc
mov
add
add
rcrl
imul
cmp
cmp
pop
sbb
aaa
and
xchg
fdivp
push
add
int
sub
add
add
add
jb
shrl
cmp
enter
dec
dec
and
in
pop
xor
jae
push
mov
add
add
xor
cmpsl
scas
add
repz
add
stc
dec
lods
add
cmpsb
add
ljmp
sub
adc
add
in
mov
add
xor
les
xor
mov
sbb
scas
add
sub
add
leave
sti
mov
or
add
add
xchg
mov
aad
test
test
repnz
push
cmp
or
add
call
fcoml
add
sbb
shrb
test
cmp
mov
add
add
movb
jmp
pushf
lret
mov
aad
jo
ror
ss
adc
add
add
pop
push
popa
mov
push
jg
shr
and
add
test
jo
add
mov
push
add
cmpsb
add
imul
adc
push
sbb
xor
xor
gs
add
mov
mov
bound
shlb
adc
lahf
and
add
rclb
add
fldcw
add
dec
add
inc
add
cld
adc
push
addr16
sub
add
fcoml
cmp
add
dec
or
add
jmp
add
push
data16
mov
js
jmp
bound
fsubrs
add
jbe
add
incb
ret
stos
ret
in
inc
bound
sbb
sti
jnp
jg
push
mov
sub
add
xor
push
cmp
shrl
jecxz
movsb
add
test
add
add
flds
daa
sub
xchg
add
add
into
orl
addr16
xor
push
cmc
pop
fcomps
jge
mov
add
in
fwait
cmp
leave
ja
jb
outsl
inc
outsb
test
add
rcrb
add
xor
dec
icebp
movsl
gs
lds
mov
testl
xor
leave
clc
cwtl
jbe
loop
je
sbb
add
inc
insw
push
add
int3
jnp
jmp
sahf
cmp
pushf
pop
mov
mov
out
add
add
fistl
in
outsb
movl
add
subl
pop
mov
dec
xchg
mov
push
fildl
jge
test
add
and
add
sub
pusha
pop
imul
inc
jnp
mov
cmp
daa
rolb
mov
add
jecxz
inc
out
or
add
dec
mov
add
pop
insb
or
add
iret
mov
addl
ja
in
add
gs
add
mov
popf
dec
ffree
in
rcrb
add
xor
sti
inc
outsb
sub
push
mov
add
dec
aam
fstl
out
xor
sub
add
add
add
inc
call
ds
jge
ret
shl
pop
out
sarb
mov
mov
lods
add
das
pop
jns,pt
push
xchg
or
add
ds
clc
into
mov
mov
ss
decb
aam
push
add
xchg
push
jnp
mov
js
mov
add
mov
div
and
add
rcl
fs
and
add
int3
jl
mov
pop
adc
add
les
popa
inc
cmpsl
cmpsb
add
std
dec
xlat
sahf
adc
dec
aam
add
roll
mov
cli
enter
mov
fildl
scas
add
loopne
sahf
push
test
add
add
add
xor
scas
testb
jmp
or
add
scas
add
push
inc
scas
shll
test
sub
add
xchg
mov
add
xchg
add
add
js
sti
inc
addb
call
popa
cmpsl
sbb
icebp
movsl
or
add
fwait
mull
dec
fstp
seto
in
jbe
xchg
add
add
cmp
add
add
inc
mov
into
imul
out
loope
or
add
pop
out
add
mov
push
cmp
dec
lea
icebp
dec
sti
test
adc
dec
hlt
test
inc
dec
sti
push
cmp
fdivr
adc
out
add
jmp
adc
out
popa
leave
call
push
pop
je
mov
repz
stos
pop
dec
cmpsb
add
fmull
loop
into
dec
xchg
in
xchg
xchg
jg
scas
fwait
inc
rcrb
roll
dec
adc
inc
pop
testb
repz
dec
or
add
mov
add
mov
outsb
pop
movb
pop
jbe
pushf
movsl
cmp
movsb
add
mov
cmp
mov
add
out
pop
dec
xchg
add
pop
loopne
cmpsb
add
addb
jbe
jae
sub
add
push
xlat
pop
dec
xlat
adc
sahf
jle
sub
add
add
std
pop
add
jbe
sub
cmp
stos
add
mov
add
jp
cmp
ss
lcall
add
sbb
aas
in
mov
add
push
add
shrl
add
dec
test
add
push
or
outsl
mov
sbb
ljmp
sub
add
adc
add
or
fdivl
cltd
ja
add
or
add
ret
add
add
icebp
xchg
adc
add
pushf
adc
pop
fmuls
arpl
and
fists
scas
dec
mov
daa
mov
jl
movsl
push
xchg
pop
pop
sub
add
mov
add
push
push
add
jge
jo
sbb
mov
leave
aas
pop
adc
out
add
jnp
iret
dec
movsl
cltd
mov
add
imul
sbb
cld
and
add
loope
jmp
xchg
mov
cld
adcl
push
and
xchg
outsb
std
push
mov
add
sbb
lea
mov
in
idivb
