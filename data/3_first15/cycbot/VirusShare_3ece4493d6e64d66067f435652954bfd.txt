jp
in
dec
pop
fidivl
and
push
xchg
aad
js
idiv
aaa
jnp
or
inc
xchg
jae
add
jecxz
iret
and
mov
mov
rolb
cmp
stos
cmc
jo
mov
and
lock
mov
loopne
mov
jae
lea
jae
and
fsts
call
sbb
push
cmp
add
clc
sbb
jp,pt
mov
add
jge
add
out
movsb
flds
or
sub
add
jmp
pop
test
adc
xchg
fidivs
subl
pop
wrmsr
add
push
adc
mov
add
pop
lcall
mov
addb
jnp
add
and
mov
inc
jbe
push
dec
fs
rolb
gs
out
fisubs
and
mov
je
incl
test
les
loope
push
test
cld
lods
pop
add
jmp
std
arpl
test
add
mov
mov
push
inc
outsl
or
sub
fildll
mov
test
std
sub
dec
lods
push
addb
sbb
aam
sbbl
jge
and
mov
xchg
xor
mov
addb
sbb
sbb
loop
mov
loop
mov
repnz
jmp
jmp
and
mov
fcmovne
xlat
cmp
pop
xor
mov
lret
in
je
add
mov
add
idivb
fld
add
lcall
mov
mov
ret
add
mov
repnz
mov
mov
and
mov
mov
pop
jnp,pt
mov
push
add
or
dec
mov
fs
movsl
cmp
movsb
add
adc
or
add
xchg
jae
rolb
sarl
cs
jmp
int3
cmc
addb
cltd
dec
push
jp
popa
xchg
sbb
xchg
pop
lcall
mov
add
add
mov
xchg
cmpsb
rcl
sbb
repnz
mov
movsl
cmp
add
add
xor
mov
inc
inc
sbb
push
int
push
popa
jno
sbb
pop
outsb
mov
mov
add
or
add
jnp
rolb
mov
add
add
mov
adc
mov
jns
adc
sub
mov
hlt
nop
add
pop
dec
in
into
and
mov
or
outsl
das
lods
stos
dec
out
daa
lods
gs
mov
mov
loopne
mov
popa
pop
jb
mov
cltd
daa
lcall
adc
mov
or
dec
sahf
out
in
movsb
xlat
inc
test
fmull
xor
add
dec
xor
mov
fistpll
xchg
push
icebp
outsb
lret
into
sbb
add
mov
lahf
sbb
movsb
fwait
lods
and
mov
loopne
mov
add
xor
ljmp
fwait
test
mov
xchg
enter
or
add
add
push
cmp
mov
add
xchg
add
cmpsl
dec
push
sbb
jecxz
cmc
in
jne
std
enter
mov
sbb
xchg
insb
cmpsl
clc
addr16
cld
push
sbb
mov
add
mull
add
mov
rolb
mov
aas
mov
add
sbb
add
sbb
add
xchg
icebp
sub
je
bound
mov
add
add
mov
xchg
xchg
xor
es
push
dec
fnsave
outsb
mov
and
test
std
jmp
dec
les
addl
ret
and
mov
rolb
mov
mov
jb
mov
xorl
dec
dec
aad
push
inc
xor
mul
add
sub
add
dec
dec
repnz
stc
sbb
push
add
inc
add
xor
and
add
jns
add
mov
repnz
mov
mov
sub
push
lock
addb
mov
cmpsb
or
jg
enter
dec
push
mov
mov
xor
mov
and
mov
add
jmp
add
imul
repz
add
add
sbb
add
repz
pop
pop
scas
pusha
add
cwtl
mov
mov
cld
stos
sbb
xchg
fwait
cmpsl
pop
add
test
mov
fwait
cmp
xor
in
stos
mov
cmp
pop
popf
and
mov
sub
xlat
sub
mov
mov
fldenv
mov
add
std
cs
mov
mov
out
push
add
add
jnp
jmp
xor
pop
sub
xor
leave
cmpsb
cmc
cmp
nop
add
add
call
aad
add
push
or
cmp
clc
push
push
add
shll
jo
mov
arpl
add
push
add
pop
dec
push
jbe
xchg
aad
icebp
sti
or
add
push
or
test
in
clc
or
push
push
jmp
dec
jae
push
jae
sub
mov
out
pop
fcompl
mov
mov
xor
repz
mov
dec
pusha
add
pop
mov
cmpsl
scas
pop
out
add
mov
mov
mov
push
push
dec
leave
scas
sbb
aam
adc
and
mov
add
add
sbb
dec
fiaddl
or
popa
fdiv
add
jge
fmuls
add
mov
xlat
stos
inc
xchg
lret
mov
insb
jge
or
jge
fistl
fnstenv
mov
jmp
and
add
dec
mov
jp
ja
xchg
and
mov
add
push
push
add
popf
dec
lcall
mov
sti
add
jo
mov
sbb
repnz
mov
inc
add
xchg
cmp
push
jmp
loopne
mov
add
add
inc
cs
xor
add
std
loope
add
mov
pushf
adc
mov
xor
xchg
add
jge
push
out
sub
iret
hlt
cvtdq2ps
pop
out
cs
int
ds
lahf
lahf
xchg
sub
dec
addb
jo
mov
mov
in
mov
inc
popf
jg
stc
fimuls
into
addr16
or
lcall
jmp
daa
loope
add
sbb
out
add
xor
xchg
loopne
mov
push
pop
mov
pop
pop
push
add
xor
or
je
xlat
cmp
inc
xchg
and
push
repnz
add
pusha
add
inc
add
test
fs
push
jae
testb
add
std
mov
test
add
loope
mov
out
out
add
stc
dec
mov
add
mov
test
cmp
and
inc
add
scas
mov
loopne
mov
add
jge
mov
cmpsl
imul
cld
lods
adc
push
add
add
mov
dec
and
fldt
push
add
add
mov
jle
mov
add
addb
lahf
pop
outsl
xlat
xor
mov
sbb
int
add
sahf
add
add
dec
xlat
in
jecxz
call
wrmsr
add
iret
sub
enter
pop
std
cmpsl
inc
mov
push
sub
mov
mov
dec
and
rolb
mov
out
les
sub
cmpsl
fwait
movsb
pop
pusha
add
jecxz
add
in
ljmp
sti
cli
add
mov
lds
pop
jnp
out
js
and
addb
pop
inc
icebp
rolb
mov
movsl
and
xor
mov
cmp
add
enter
add
mov
add
push
mov
mov
push
jmp
dec
xor
mov
add
mov
mov
mov
add
mov
scas
repz
mov
push
jmp
aas
enter
mov
repz
mov
mov
add
or
push
xor
mov
in
pop
cmp
add
mov
fstpl
clc
push
add
xchg
fsubl
scas
loop
mov
test
addr16
mov
mov
push
std
push
cmp
pop
cmp
outsb
iret
jmp
pop
test
add
or
and
dec
loop
mov
jo
mov
adc
addb
inc
mov
pop
cwtl
xchg
add
sbb
rcl
pop
mov
out
pop
sub
push
mov
xorb
sub
push
push
push
push
push
push
cld
call
sub
es
movzbl
cmp
ss
push
push
call
mov
cmp
je
es
lea
cs
sub
mov
push
es
call
test
jne
jmp
leave
push
es
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
nop
lea
lea
sub
add
mov
sub
sub
push
pop
push
je
jmp
add
add
push
test
add
mov
mov
add
mov
add
jne
in
cmc
adc
aad
pop
adc
lahf
loopne
mov
scas
inc
repz
fs
pop
std
adc
mov
hlt
into
loope
sbb
xchg
xchg
shll
addr16
mov
sbb
mov
mov
mov
or
jno
les
push
xlat
sub
xor
out
mov
or
sbb
add
mov
cmp
cmp
sti
add
mov
fwait
push
mov
mov
imul
or
stos
or
pusha
add
add
mov
xor
push
add
sub
adc
mov
cmp
popf
scas
cli
cmpsb
mov
pop
jne
roll
mov
mov
stos
aad
mov
mov
dec
mov
aaa
inc
and
xchg
add
mov
mov
pusha
add
in
daa
ss
add
pop
les
mov
rolb
mov
or
add
add
mov
mov
jl
dec
in
cmp
pop
mov
or
and
mov
jnp
lcall
xor
aad
add
cmp
lahf
add
in
jae
aas
fbld
add
dec
repnz
mov
rolb
mov
clc
mov
fwait
std
das
mov
pop
add
test
jle
add
add
cs
jo
mov
add
add
lods
dec
push
lods
sti
iret
arpl
mov
add
mov
or
fldenv
xor
mov
stc
jecxz
add
lock
mov
sub
cltd
scas
pop
sahf
and
je
add
mov
shll
aam
mov
add
sub
mov
loop
mov
and
adc
add
js
pop
rolb
mov
add
mov
imul
mov
movsb
or
push
sahf
loop
mov
adc
mov
sahf
sub
rolb
mov
add
inc
push
fdivr
cwtl
inc
popa
or
mov
push
out
fstps
add
mov
add
into
xchg
push
lret
test
mov
add
and
push
add
add
add
jnp,pt
or
inc
repnz
sbb
jne
rolb
mov
lahf
sbb
inc
rorl
repz
mov
push
jl
add
mov
pushf
xchg
push
jo
mov
out
add
dec
sti
mov
jge
leave
lret
stos
jecxz
enter
xchg
mov
push
lds
mov
ret
xchg
mov
mov
add
xor
movsl
call
pop
inc
xor
mov
test
pop
loop
mov
outsb
dec
pop
dec
mov
bswap
mov
mov
add
ljmp
sbb
mov
repnz
add
das
lcall
clc
pop
xchg
xor
mov
inc
add
add
mov
inc
pop
mov
idivb
sub
cmp
fsubs
and
mov
sahf
mov
fmuls
mov
xchg
sub
leave
cmp
mov
add
mov
mov
mov
imul
mov
mov
lret
gs
push
cmp
add
add
mov
or
jns
mov
aas
xor
mov
adc
int3
aaa
jg
add
repnz
orl
jae
add
mov
sub
add
adc
cmp
push
lret
jecxz
stc
mov
mov
add
mul
add
fists
lods
cli
or
sti
mov
add
ficoms
dec
add
mov
push
fdivrp
cld
cmpsb
pop
push
lods
lods
cld
sbbl
sub
add
xor
mov
jbe
or
incl
add
add
pop
jo
mov
add
movsl
js
adc
dec
out
add
add
mov
add
mov
cmp
mov
bound
mov
sahf
addr16
adc
mov
add
aas
xor
mov
mov
pop
cmp
xor
mov
mov
mov
pop
sbb
jno
lcall
mov
xchg
loopne
mov
xchg
pop
dec
and
scas
jmp
outsb
stos
mov
mov
mov
push
push
int3
jl
push
movups
mov
int
cltd
inc
and
lret
mov
add
enter
pusha
add
insb
push
mov
mov
mov
add
or
add
mov
xchg
dec
mov
pusha
add
sbbl
addb
pop
pusha
add
add
mov
add
and
mov
xor
jg
and
xchg
add
push
fdivp
and
mov
add
xor
add
mov
mov
lods
mov
pop
aam
mov
pop
pop
mov
pop
sbb
and
add
lahf
testl
add
mov
ljmp
mov
out
pop
iret
jp
dec
adc
xor
mov
push
mov
xor
push
les
xchg
mov
inc
bound
mov
or
out
mov
out
pop
adc
add
ja
add
add
mov
f2xm1
add
mov
mov
mov
add
lret
mov
add
inc
sbb
xchg
add
mov
cmpl
mov
sub
dec
fwait
repnz
mov
idivb
jno
test
push
or
jno
jmp
fildll
lahf
push
xchg
cld
js
push
add
jno
add
out
lcall
add
and
divb
and
mov
out
popa
cmp
fildl
pop
shll
mov
lahf
leave
jae
adc
cmp
imul
popa
in
inc
add
sub
sub
pop
inc
mov
adc
jo
mov
adc
fiadds
mov
pushf
jecxz
add
rolb
sub
add
push
fsubs
lahf
adc
mov
sbb
ret
and
mov
cmp
add
add
xchg
mov
pop
ljmp
movsb
cltd
pop
add
mov
fsubp
hlt
repz
fstps
pop
mov
mov
into
xchg
aam
xlat
loope
std
decl
addb
xchg
dec
jg
add
push
cs
xchg
add
inc
or
mov
add
mov
mov
mov
mov
mov
cmp
cmp
mov
fadd
sbb
mov
or
add
aad
inc
hlt
xor
mov
push
adc
rolb
int
stos
mov
push
jl
add
dec
mov
mov
loop
mov
xor
js
add
ljmp
adc
mov
out
mov
clc
inc
std
cs
jmp
mov
lahf
rcrl
sub
jae
and
mov
pop
imul
inc
jp
xchg
xor
mov
or
and
jge
mov
pop
cmp
addb
in
loopne,pn
mov
ljmp
mov
iret
jmp
push
pop
inc
inc
adc
repz
xchg
mov
fstl
add
arpl
das
jl
stos
push
mov
fsubrs
mov
int3
in
and
mov
repz
add
lods
push
rolb
rolb
ficomps
fstpt
add
add
sti
cmp
mov
aas
mov
push
push
in
jns
jae
add
add
mov
jns
imul
dec
xchg
pop
xor
add
scas
aam
mov
test
scas
mov
out
test
pop
add
int
gs
mov
jno
insl
mov
mov
mov
mov
push
mov
add
dec
mov
sub
loope,pt
and
mov
adc
daa
cli
mov
testb
add
add
fsubrs
adc
loopne
mov
pop
mov
mov
jns
leave
dec
addb
test
jl
fnsave
pop
push
jne
add
pop
or
mov
int3
sub
lods
cltd
out
mov
jg
push
shrl
push
xchg
add
scas
movsb
fincstp
ret
mov
dec
pop
aam
dec
int
mov
sbb
and
push
aad
int
lods
push
mov
or
add
mov
out
xchg
mov
xchg
xchg
stos
inc
mov
mov
insl
test
aas
jo
mov
push
lock
adc
xor
mov
push
push
ror
xor
mov
or
ret
enter
sahf
ja
cli
jb
mov
xor
xchg
addr16
cmp
inc
lods
inc
stc
and
orps
mov
add
dec
xor
mov
not
stc
scas
jae
add
jmp
shl
int3
jmp
pop
xchg
addb
dec
ficompl
dec
rolb
mov
mov
in
jne
icebp
imul
nop
add
xor
mov
add
mov
jle
mov
shrl
nop
add
add
mov
addr16
cmp
add
jno
mov
pop
cmp
mov
pusha
add
dec
movsl
pop
dec
mov
mov
loope
dec
add
add
xchg
lods
mov
dec
xchg
cmp
mov
mov
add
add
and
add
add
jge
add
cmp
sbb
pop
pop
adc
mov
add
mov
or
leave
mov
push
bound
mov
add
andl
aas
sub
into
mov
call
add
jae,pt
add
jno
mov
cwtl
jmp
xlat
jmp
adc
popa
add
sub
sarl
jl
outsl
xchg
add
scas
dec
sub
add
add
imul
and
mov
add
pop
sbb
mov
add
jo
mov
mov
push
jmp
icebp
dec
idivb
ds
xor
rolb
mov
mov
lods
xchg
shrl
nop
add
jbe
mov
add
pop
sarl
ficoml
add
pop
cmp
add
cmc
mov
dec
decl
stos
mov
inc
out
faddl
mov
ljmp
sbb
push
test
add
mov
pop
jae
xor
iret
mov
push
cld
pop
lock
rolb
mov
and
mov
xchg
movsl
shll
mov
data16
inc
add
out
lret
cmp
loope
leave
inc
add
fwait
repnz
pop
sub
into
push
inc
pop
sti
ljmp
outsl
add
mov
mov
xorl
pop
lock
fcompl
mov
stos
push
ficompl
xchg
add
inc
jne
add
inc
cmp
mov
rcll
mov
xor
mov
add
jl
jno
rolb
mov
loopne
mov
mov
add
stos
pop
sbb
add
add
fs
jp
mov
add
jo
mov
imul
int
push
loopne
mov
std
sub
adc
mov
lret
xchg
mov
add
cmpsl
or
imul
jb
mov
sub
add
add
movb
jmp
sbb
enter
mov
jle
outsb
test
addb
fscale
mov
sbb
cmp
stc
mov
dec
jbe
das
mov
loope
add
add
jge
in
add
mov
pop
inc
decb
mov
int3
xchg
or
mov
dec
adc
mov
xor
mov
mov
mov
lret
mov
out
imulb
lea
loope
stc
cmp
aas
stos
or
sahf
jg
hlt
in
mov
stos
sbb
jg
mov
push
cmp
mov
adc
mov
mov
pop
sbb
sub
ljmp
add
dec
ds
ficompl
xchg
pop
xchg
addb
add
mov
fidivrl
add
fiaddl
rolb
arpl
scas
push
sbb
sbb
cltd
cmp
pop
sar
les
dec
dec
pushf
leave
sbbl
in
cmp
xchg
rolb
mov
inc
adc
dec
imul
jo
mov
add
mov
and
mov
inc
out
or
hlt
push
sti
cmp
add
ljmp
imul
popf
hlt
push
rolb
ja
pop
xor
es
stos
cmc
addb
addb
fs
sub
mov
fstl
jno
push
add
daa
rolb
mov
fs
and
movsl
adc
lret
fcomps
pop
jb
mov
into
and
mov
add
addb
shl
mov
xor
mov
dec
loopne
mov
mov
dec
insl
mov
mov
or
loopne
mov
add
mov
pop
mov
decb
repz
stos
scas
or
xchg
out
jecxz
add
mov
jge
sbbl
sarl
push
ret
nop
add
in
int
xchg
imul
and
addb
cmp
sbbl
jns
xchg
insb
push
cmp
mov
int3
dec
xorl
mov
inc
arpl
jae
aam
add
bound
mov
xchg
add
aaa
mov
test
ja
pop
es
jecxz
inc
add
pushf
pop
or
sub
lret
mov
je
add
cmp
cltd
outsb
mov
addb
das
nop
add
loop
mov
add
mov
stos
loop
mov
std
mov
mov
mov
add
cli
pop
popa
mov
arpl
mov
add
xchg
push
or
add
mov
add
or
push
add
fadds
fwait
leave
cli
pop
push
and
mov
sahf
aas
sbb
add
xor
pop
repnz
adc
cmp
xor
add
jmp
xchg
add
mov
adc
add
sti
cmp
push
xchg
arpl
movsb
sbb
push
and
xchg
add
cmp
insl
jnp
fisubl
mov
ret
rolb
mov
add
mov
jl
add
jno
mov
mov
mov
jle
pop
outsl
in
adc
cmc
push
cmpsl
inc
add
in
push
gs
rolb
inc
cmc
lret
xchg
loop
mov
mov
inc
add
add
xor
mov
sbb
push
lahf
adc
out
rolb
mov
test
xor
sub
xchg
js
adc
lock
dec
fcmovbe
ret
in
or
dec
push
add
lcall
add
daa
mov
adc
mov
add
add
add
mov
add
jge
daa
popf
iret
lds
rolb
mov
imul
mov
rolb
mov
je
pop
push
adc
mov
mov
lret
xchg
mov
lods
shrl
loope
sub
stos
mov
push
test
adc
mov
add
popa
sbb
sub
mov
cmp
rolb
mov
jns
loopne
mov
icebp
daa
mov
add
add
or
jnp
and
mov
ret
fisubs
add
loop
mov
mov
mov
dec
adc
mov
in
lods
jb
mov
xchg
add
push
imul
je
enter
sub
dec
adc
add
mov
jle
jb
mov
or
pop
pop
ss
and
test
add
mov
sub
cmp
add
mov
daa
loop
mov
xchg
sub
add
mov
daa
mov
jecxz
add
clc
sarl
scas
sbb
mov
dec
dec
cmp
sub
scas
sbb
outsb
dec
pop
xchg
pop
bound
mov
jg
lods
test
mov
push
ja
shl
add
add
sub
insb
mov
mov
add
jg
push
call
les
movsb
or
sub
jb
mov
stc
std
fiaddl
dec
ss
gs
mov
fsubs
mov
out
sbb
lea
add
add
sub
push
add
add
shrl
mov
add
addb
les
mov
in
mov
sbb
mov
adc
add
loope
inc
push
lock
inc
pop
outsb
pop
stos
jbe
jb
mov
add
add
jbe
mov
xchg
cmp
inc
ret
mov
lcall
ret
push
add
add
fisttpl
jns
cld
mov
mov
das
pop
push
jbe
fdivrl
out
bound
mov
jge
add
movsb
pop
pop
ljmp
icebp
mov
add
out
mov
and
mov
shll
add
mov
sarl
dec
popl
test
mov
sub
add
jmp
adc
mov
mov
out
fcom
ja
lods
mov
mov
aam
push
cwtl
pop
clc
les
cmp
mov
mov
mov
mov
sub
xchg
add
add
mov
and
mov
pop
dec
arpl
dec
fcomps
out
pusha
add
xchg
sbb
ja
add
mov
add
add
mov
mov
test
sub
add
aad
cmp
dec
inc
add
xor
call
mov
sbb
fldenv
stc
shll
mov
push
lret
popa
insb
in
mov
addb
ret
xor
mov
sbb
xorl
aad
add
fldt
add
add
repnz
xor
pop
adc
and
mov
inc
inc
mov
enter
test
mov
mov
add
rolb
pop
xchg
push
add
gs
cld
inc
add
pop
arpl
mov
sar
test
mov
ja,pt
repz
mov
mov
add
add
xor
inc
add
mov
add
mov
add
mov
punpckhwd
mov
imul
mov
mov
std
pop
mov
ja
add
fldt
ss
addb
pop
bound
mov
jge
stos
xor
mov
inc
clc
xchg
mov
xor
mov
dec
mov
sub
push
fsubrs
addb
nop
add
xor
ja
jo
mov
add
arpl
add
imul
or
jmp
fmul
jg
and
xor
mov
jns
cmp
add
add
push
add
popf
dec
pop
mov
ss
popa
and
mov
cld
mov
fldenv
mov
mov
add
xchg
mov
mov
cmp
sbb
aaa
fucom
add
push
add
in
sub
xchg
lds
cmp
addb
lods
xor
mov
push
pop
dec
mov
add
repnz
mov
pop
and
mov
mov
xor
xor
or
xchg
adc
out
jne
imul
mov
xchg
add
adc
xchg
jns
xchg
add
loopne
mov
add
fnstcw
rolb
leave
ja
mov
dec
xchg
and
mov
pop
adc
mov
xor
mov
mov
and
cmp
fistps
adc
mov
mov
add
scas
call
jp
outsb
and
mov
test
ret
in
outsb
sbb
mov
loopne
mov
imul
dec
mov
insb
lcall
inc
fdiv
mov
mov
addb
mov
mov
mov
add
mov
mov
jb
mov
inc
xchg
pop
push
scas
aas
popf
xchg
mov
or
rorl
es
add
add
xchg
xchg
out
imul
jl
sti
xchg
and
cmp
in
fstpt
push
loopne
mov
and
insb
mov
lret
mov
cmp
cltd
mov
mov
addb
sbb
ljmp
add
pushf
arpl
mov
pop
inc
mov
mov
aam
in
add
mov
int3
repz
mov
mov
jmp
mov
arpl
mov
test
mov
mov
xchg
jecxz
xchg
movsb
dec
sub
xor
test
std
jne
add
lahf
dec
jp
pusha
add
add
aaa
ds
out
pop
add
rolb
out
imul
fcomip
xor
outsb
fwait
andl
addb
or
out
ss
rolb
mov
xchg
push
lds
stos
dec
jns
fisubrs
gs
xchg
dec
sbb
adc
xlat
jg
pushf
sub
mov
movsl
mov
bound
mov
pushf
pop
or
add
jl
push
sub
mov
add
movsl
xchg
pusha
add
dec
push
out
je
push
add
sbb
sub
add
out
cmp
xor
mov
add
mov
xlat
sbb
ficomps
add
add
addb
in
sbb
and
cmc
inc
popf
pushf
push
adc
mov
mov
jbe
add
dec
addb
stos
mov
movups
mov
jo
mov
int
sahf
jno
movsb
int
mov
insl
cwtl
into
jge
ficoms
sbb
jo
mov
outsl
lahf
add
push
add
xlat
dec
xchg
jecxz
pop
mov
add
add
es
flds
adc
jae
inc
add
cmpsb
loopne
mov
scas
xchg
lret
rolb
mov
pop
popf
imul
leave
dec
je
inc
mov
out
lret
notb
aad
cmc
test
pushf
cltd
and
sbbl
popa
inc
add
cmp
aas
and
sti
push
add
out
jns
push
lods
push
cmpsl
xadd
xchg
add
pop
and
add
add
sbb
shll
add
mov
lahf
mov
add
mov
mov
fwait
and
mov
ss
andl
add
jl
lret
stos
adc
add
pop
lahf
lret
xorl
xchg
xchg
sti
jbe
dec
int3
aad
add
add
lcall
js
add
ret
sbb
dec
fwait
in
add
mov
mov
repnz
mov
stos
cmpsb
xchg
xchg
loope
sub
rorl
xchg
mov
cmpsb
movsb
in
jbe
mov
push
mov
add
mov
jbe
add
cli
stos
lahf
add
pusha
add
inc
add
fdivl
mov
arpl
shll
adc
or
fidivl
add
pop
dec
sbb
orl
imul
fistpll
push
mov
hlt
mov
sbb
pop
fsubrs
iret
xor
mov
and
outsb
pop
cltd
mov
add
fisubs
inc
mov
fstl
rolb
mov
fcmovnbe
pop
jmp
clc
bound
mov
fisubrl
xchg
mov
add
adc
mov
bound
mov
inc
ja
sbb
shld
add
mov
lds
int3
aaa
or
aaa
mov
mov
add
fs
mov
mov
ficoms
add
in
inc
mov
mov
mov
lea
inc
add
loop
mov
hlt
rolb
mov
ret
fidivrl
xor
insb
pop
popf
lahf
dec
adc
mov
cwtl
push
mov
scas
movsl
inc
cmp
xchg
out
repnz
xlat
cltd
repnz
mov
xor
add
orl
jmp
fsubrp
xor
into
mov
jmp
aam
lds
les
insl
pop
fisubl
add
les
mov
mov
aaa
mov
mov
mov
add
mov
out
test
mov
mov
mov
mov
add
mov
lahf
popf
pop
push
push
add
in
and
push
pop
sbb
xchg
xchg
mov
imul
push
xchg
in
mov
das
jns
mov
push
jns
add
mov
dec
dec
repz
es
jae
repnz
dec
sbb
add
cli
and
add
jbe
mov
sub
ljmp
add
mov
lret
divl
mov
inc
data16
add
mov
add
add
cli
fisubrs
add
icebp
and
inc
out
popl
addb
in
dec
cmpsl
icebp
iret
mov
add
cmpl
mov
loopne
mov
add
rolb
mov
mov
add
bound
mov
jg
cmc
cmp
pop
aas
out
bound
mov
mov
cli
pop
xchg
jge
lea
jp
out
or
ficompl
pushf
outsl
add
lahf
dec
scas
push
xchg
aam
pop
jo
mov
or
add
and
pop
aam
add
scas
xchg
fidivrs
push
aas
out
int3
leave
or
arpl
test
jae
flds
add
dec
or
test
push
fwait
enter
mov
mov
add
cwtl
dec
and
mov
mov
add
fstps
xor
call
xchg
push
jo
mov
mov
add
mov
dec
pop
mov
mov
xchg
add
imul
cmpsb
aad
xor
mov
mov
popa
fstps
pop
mov
adc
mov
push
pop
push
push
inc
test
add
rolb
mov
rolb
mov
xor
xor
stc
call
mov
lods
mov
adc
jnp
push
lods
in
lret
cmp
push
jns
incb
jp
out
inc
cmp
dec
add
xorl
add
or
aad
adcl
add
mov
xor
add
add
add
add
lds
add
jbe
rolb
mov
dec
push
fsubl
xchg
imul
add
popa
cltd
in
pushf
leave
inc
int3
cwtl
inc
push
jno
pop
std
cltd
jb
mov
jae
in
scas
add
je
sbb
sti
insb
aaa
add
dec
cli
mov
inc
cmovns
lea
popa
jno
add
cwtl
mov
mov
mov
cmpsl
lock
add
gs
push
add
mov
mov
sub
lret
ds
jnp
cld
xor
add
or
cli
je
or
leave
mov
hlt
and
xchg
add
cli
popa
lcall
cli
or
mov
add
pushl
testl
add
sbb
add
or
xor
scas
mov
mov
dec
test
adc
jns
in
pop
sar
adc
add
xor
imul
jmp
mov
mov
dec
and
xor
mov
ljmp
sbb
xor
mov
jns
jno
add
add
mov
fsts
arpl
imul
xchg
xor
mov
and
mov
testl
adc
mov
jae
les
mov
mov
add
mov
fucomip
in
mov
cmp
arpl
aam
adc
mov
adc
stos
dec
inc
movsl
inc
test
pop
fstl
and
xchg
adc
inc
rolb
mov
mov
adc
mov
xor
into
aaa
inc
xor
or
sub
in
jg
cmp
dec
hlt
ret
cmc
aad
inc
add
cmp
pop
or
jmp
movsb
sbb
mov
adc
mov
pop
movl
out
mov
iret
cld
inc
addr16
repz
adc
mov
xchg
pop
inc
add
lret
or
jp
add
ret
or
lahf
mov
in
sub
shl
cmp
add
add
jnp,pn
xor
add
sbb
push
pop
pop
jo
mov
aad
loopne
mov
fwait
mov
push
inc
cmp
cmc
mov
mov
mov
add
adc
mov
sub
mov
int
call
in
add
mov
nop
add
and
add
add
ja
push
ss
or
adc
push
add
int3
sbb
add
int3
les
outsl
rolb
mov
lret
adc
leave
jne
pop
test
add
fsincos
cmc
xchg
sti
inc
add
push
add
sahf
dec
loopne
mov
jns
adc
mov
jno
add
pop
rcll
mov
add
in
es
addb
jle
test
std
sub
inc
add
in
xor
sbb
jecxz
insb
push
lcall
add
jbe
mov
arpl
mov
adc
mov
sub
add
mov
jns
es
and
mov
add
xor
add
aaa
sub
pop
add
loope
cmp
out
jp
addb
mov
ret
xchg
shl
add
dec
mov
imulb
add
rolb
addb
or
mov
jg
loope
int3
xor
mov
fsubs
mov
fisttps
add
adc
mov
mov
add
sbb
pop
lret
scas
loopne
mov
mov
add
sub
xchg
pop
insb
or
push
xor
cmp
or
mov
cli
or
add
shll
push
iret
out
jno
pop
adc
mov
loope
add
mov
mov
mov
cmc
xchg
rolb
inc
push
test
mov
push
fiadds
pop
out
ja
aas
imul
push
stos
inc
add
mov
test
push
pop
or
dec
lds
jle
loopne
mov
lods
mov
xchg
mov
inc
cmc
push
hlt
frstor
out
dec
std
sub
jg
in
dec
mov
mov
lock
push
and
push
add
inc
add
add
add
mov
sbb
pop
nop
add
out
add
lea
mov
addr16
cmpl
loop
mov
jbe
inc
add
daa
data16
jns
rolb
mov
arpl
pop
sahf
jno
mov
mov
mov
arpl
add
add
pop
mov
lcall
pop
std
push
add
sahf
aam
inc
mov
cmp
mov
rolb
mov
sub
int
in
add
test
lock
repz
cmp
jo
mov
fdivs
inc
add
ret
out
aam
inc
pop
xor
repnz
inc
hlt
pop
xor
mov
add
and
mov
mov
mov
mov
stos
fdivrl
add
int3
fsubl
rolb
mov
data16
adc
test
hlt
jbe
test
jnp
fsubrp
fmul
arpl
pop
lods
movb
cwtl
clc
mov
cs
lcall
adc
aas
and
shl
movsl
sbb
adc
dec
xor
addb
mov
sahf
and
add
sbb
loop
mov
movsl
daa
xchg
mov
inc
ret
int3
imul
mov
cwtl
jg
add
mov
mov
sbb
mov
xor
out
bound
mov
pop
mov
sbb
push
bound
mov
dec
adc
add
inc
add
mov
push
mov
and
add
in
add
movsl
test
cli
loopne
mov
pop
cli
xor
cmpsb
fisubl
lret
ret
es
dec
pop
out
add
mov
enter
add
push
and
mov
mov
add
sbb
jns
jl,pt
cmp
mov
aaa
mov
add
mov
xchg
add
lds
xor
inc
mov
pop
xchg
enter
add
mov
pop
and
mov
xor
add
or
add
call
mov
cmp
add
jae
daa
arpl
jno
mov
jle
nop
add
xchg
dec
cmp
fists
loop
mov
inc
lret
jb
mov
imul
push
adc
mov
mov
test
cld
lahf
lcall
fmuls
fisttpl
mov
jb
mov
jg
int3
hlt
pop
repnz
mov
stos
insl
repnz
xor
or
lds
testl
mov
nop
add
mov
mov
inc
addl
iret
enter
mov
scas
add
mov
xchg
je
std
arpl
ja
or
out
add
mov
je
add
aaa
stc
ds
fiaddl
bound
mov
jno
jne
int3
addb
lahf
leave
imul
add
inc
sub
add
rolb
mov
xchg
sti
pusha
add
add
sbb
pop
clc
sbb
in
xor
mov
or
mov
mov
fists
in
xchg
es
dec
xor
mov
or
jno
add
faddl
lods
je
out
lahf
mov
sbb
add
inc
xlat
mov
mov
mov
fidivs
dec
bound
mov
inc
jns
out
xchg
lcall
jge
adc
fistpll
add
inc
add
jl
les
dec
inc
mov
sub
mov
mov
mov
sbb
insl
pop
dec
xor
fmuls
in
jbe
add
mov
add
add
push
sub
inc
add
add
fsubp
xor
and
mov
or
adc
mov
mov
pop
js
add
push
push
shll
sbb
test
xlat
pop
loope
mov
jb
mov
inc
cmp
les
icebp
in
ret
mov
mov
sbb
add
cli
pop
dec
sbb
mov
add
test
cmp
jb
mov
jge
and
mov
sub
mov
mov
neg
idiv
push
in
sti
push
inc
add
sarl
add
mov
loope
in
popa
jno
mov
lahf
imul
mov
or
sahf
pop
lock
add
bound
mov
mov
ljmp
mov
and
sbb
movsl
stc
sbb
add
add
inc
adc
ljmp
and
adc
daa
mov
xchg
push
jl
cmp
cmpsl
pop
mov
sub
add
mov
jle
shll
mov
mov
sub
mov
in
mov
cmpsl
lahf
jae
andl
mov
add
mov
mov
mov
mov
js
cmc
orl
stc
loope
subw
pop
or
inc
lcall
mov
mov
add
rolb
mov
cmp
lcall
ret
call
xor
stos
cmpsb
cmc
xorl
andl
das
inc
outsl
jb
mov
mov
jno
addl
cmp
add
sub
add
out
clc
mov
test
loope
add
mov
mov
add
lods
adc
aam
mov
call
rolb
mov
add
out
int3
dec
sub
addb
out
adc
pop
sub
hlt
hlt
mov
inc
rolb
inc
xchg
jae
jne
dec
push
add
add
loopne
mov
xor
mov
cltd
dec
sub
add
test
pop
popa
adcl
jl
pop
adc
lods
imul
out
inc
add
icebp
loope
addb
xor
sub
negl
or
push
popf
nop
add
add
pop
mov
mov
dec
cwtl
insb
cmp
mov
aaa
mov
add
outsl
xor
add
jecxz
test
add
ds
mov
cmp
test
cs
pop
jbe
mov
mov
add
popf
std
cwtl
imul
xchg
out
xchg
add
out
outsb
xchg
test
repnz
xchg
and
jl
jno
loope
add
add
mov
add
lea
cmpsb
scas
xchg
jnp
mov
out
andl
dec
sbb
cmc
mov
add
rolb
mov
daa
lea
xchg
add
jae
cltd
aaa
xchg
fwait
in
xchg
mov
cs
inc
jbe
cli
data16
xchg
into
inc
add
arpl
int3
pop
frstor
jecxz
aaa
call
movsl
sbb
jp
scas
sub
mov
mov
add
add
or
mov
popf
test
sub
mov
cwtl
daa
xlat
aad
mov
lock
mov
mov
pop
add
add
mov
dec
addb
jnp
inc
add
fstpl
nop
add
add
push
int3
sbb
sbb
push
cmpsb
popf
push
push
cmpsb
cmp
xchg
cld
mov
ror
jp
je
xor
mov
cld
pop
out
push
rorl
sub
jb
mov
and
jg
add
les
sub
mov
mov
pop
ja
in
faddp
test
mov
lea
add
call
add
inc
add
pop
out
pop
and
mov
mov
mov
mov
rolb
mov
sbb
cmp
pop
and
sbb
jae
out
hlt
mov
outsb
or
add
mov
imul
mov
xchg
fs
dec
out
dec
xchg
lock
and
pop
lods
dec
shll
inc
push
jge
rolb
mov
mov
push
lock
pushf
and
add
adc
mov
adc
and
cld
pushf
xchg
sbb
fldenv
lret
outsl
pop
insb
inc
mov
xor
mov
mov
pop
mov
mov
lahf
inc
ret
cmp
into
xchg
loopne
mov
push
add
push
fwait
inc
mov
add
mov
adc
mov
dec
ret
int
lods
mov
add
pop
adc
mov
adc
mov
dec
mov
lahf
add
rcll
lock
test
outsl
cmp
lods
xchg
addb
sbb
adc
add
cmpsb
into
js
in
in
sbbl
add
add
filds
add
les
add
dec
push
test
movsb
out
add
or
mov
sti
imul
mov
cli
mov
ljmp
jbe
imul
test
add
jae
popa
shl
hlt
ja
in
mov
pop
or
mov
mov
push
cmpsl
or
mov
sbb
repnz
out
adc
adc
mov
pusha
add
add
mov
stos
cs
mov
sahf
pop
aas
push
add
pushf
adc
mov
popf
mov
mov
scas
xor
push
outsb
push
faddl
pop
fstl
lods
jg
bound
mov
lret
push
ljmp
add
outsl
mov
sbb
add
add
push
out
in
popf
cmc
mov
add
mov
dec
lea
cmpsl
sti
or
movl
fldenv
mov
add
mov
jae
test
mov
mov
flds
add
or
xchg
repz
push
add
jbe
mov
sub
xchg
sbb
xchg
add
mov
jle
adc
mov
xor
mov
or
cmp
inc
outsb
stc
nop
add
movsl
inc
xor
mov
xchg
cs
pop
pop
mov
push
sub
ja
int
sub
add
scas
addr16
arpl
cmpsb
lret
xor
xor
mov
cmpsb
push
jo
mov
aam
sbb
in
je
cmp
loopne
mov
in
add
pop
outsl
push
sarl
mov
push
pop
in
add
outsl
int3
push
xchg
ret
mov
push
push
inc
jle
cli
test
mov
sbb
sub
add
mov
mov
stos
cmpsl
ss
jne
ret
pop
pop
xor
mov
data16
lock
mov
mov
lcall
cmp
mov
mov
enter
imul
int3
and
mov
push
push
hlt
adc
stc
mov
rolb
xchg
jg
jl
in
sub
dec
ja
push
add
inc
outsb
pop
xchg
stos
and
add
inc
test
rcrl
mov
xlat
mov
mov
fnstenv
add
cmp
addb
add
hlt
inc
adc
mov
xor
mov
add
jbe
cltd
fcomip
xlat
adc
mov
pop
ss
jns
dec
add
mov
add
push
test
add
and
mov
mov
mov
or
icebp
jnp
add
ljmp
add
fs
mov
fistps
add
xor
out
stos
addb
test
jge
jae
add
mov
sbb
out
mov
add
or
add
cmp
jo
mov
cmpsb
ficompl
add
sub
ss
dec
imul
js
push
inc
add
push
rolb
xchg
jp
pusha
add
mov
clc
dec
xchg
shll
mov
in
lea
mov
sub
and
gs
mov
xchg
xchg
add
add
add
outsl
cmp
pushl
dec
dec
mov
sbbl
lret
jbe
rcl
int
pop
xor
sub
add
add
mov
inc
push
push
mov
es
push
rorl
add
jnp
es
lahf
xchg
dec
jnp
and
mov
enter
mov
dec
mov
add
mov
xor
mov
mov
rolb
pop
xor
mov
clc
sbb
xchg
add
addr16
ficoms
mov
jo
mov
fucomip
jmp
mov
sub
add
add
mov
mov
add
and
sub
jecxz
mov
xchg
inc
add
cld
mov
pop
jle
mov
lahf
inc
inc
jl
add
dec
inc
sbb
sub
outsl
pop
adc
mov
imul
xor
jno
out
add
add
pop
mov
and
mov
dec
jb
mov
loope
enter
outsb
mov
fsin
and
pop
jae
xor
add
cmpsl
inc
add
cld
hlt
dec
sub
je
mov
sub
rcl
pushf
push
adc
mov
xor
mov
sbb
out
or
xor
mov
mov
fs
bound
mov
mov
dec
xchg
icebp
aam
repz
mov
addr16
mov
lahf
sbb
xchg
push
add
adc
pop
and
mov
rolb
ret
inc
push
int3
sub
in
xor
loopne
mov
rcll
gs
lcall
gs
dec
add
mov
imul
mov
inc
xchg
lds
mov
pop
fsub
push
mov
push
jp
divl
fdivs
mov
xor
imul
xchg
cmpsl
sbb
hlt
rolb
mov
add
add
mov
mov
mov
rolb
mov
add
and
mov
movsl
fdivrs
add
insb
sub
mov
mov
out
loopne
mov
add
pushf
dec
dec
push
dec
call
mov
mov
sub
add
add
mov
add
xor
sbb
add
add
adc
stos
mov
mov
cmpsb
push
or
and
xchg
mov
rolb
mov
lock
mov
rolb
mov
test
addb
lahf
cld
ret
test
addb
mov
add
std
fsubrs
icebp
mov
mov
fcomp
stc
cmpsl
jnp
movsb
test
add
xor
mov
jl
or
add
mov
lcall
jl
enter
or
add
cmp
add
aaa
aas
hlt
lret
ret
push
lods
gs
add
in
imul
pop
sahf
push
in
xor
gs
fldcw
mov
adc
sub
mov
mov
or
inc
outsl
loope
imul
outsl
cltd
inc
add
ficompl
pop
addb
xor
imul
add
dec
mov
xor
jo
mov
lcall
mov
shll
lcall
inc
and
mov
add
insb
pushf
ret
fmull
xchg
in
cwtl
or
add
or
into
mov
add
adc
sbb
add
mov
inc
add
mov
or
les
push
movsl
sarl
mov
xor
mov
lock
or
lds
add
lea
add
add
xchg
add
sbb
out
fiadds
add
popf
push
arpl
or
add
and
mov
mov
test
xchg
add
popf
mov
jle
add
mov
lods
jecxz
dec
cmp
in
jb
mov
int
xchg
insb
push
and
mov
inc
add
add
es
add
add
dec
push
add
rolb
adc
pushf
cltd
fnstcw
push
cld
insl
lock
cmp
js
call
and
cmp
fldln2
leave
lods
pop
jo
mov
addb
test
sbb
icebp
movsb
das
push
rcll
pusha
add
add
xchg
out
push
pop
dec
outsl
mov
and
mov
add
mov
add
imul
or
dec
mov
mov
insl
jecxz
add
sbb
aad
mov
sub
movsb
in
repz
lret
add
sub
addb
repnz
insb
sub
aam
xchg
mov
aam
dec
sti
div
push
add
outsl
xor
mov
sub
add
cmp
pushf
movsb
ljmp
sti
jg
pop
and
mov
xchg
lcall
mov
fimuls
lahf
in
jae
mov
jle
mov
int
loop
mov
mov
loop
mov
rcll
adc
mov
cld
dec
movsb
lret
loopne
mov
add
pushf
jg
int3
clc
xchg
add
mov
arpl
sub
out
lahf
fcoml
mov
add
and
mov
add
jb
mov
mov
push
and
mov
xchg
addr16
fdivs
add
and
mov
jno
add
pop
xchg
add
xchg
xchg
push
mov
repz
addb
xchg
add
movsl
test
mov
dec
aam
mov
dec
pop
fldt
test
mov
pop
jno
jno
pop
push
addb
adc
repnz
jnp
mov
jo
mov
cli
xchg
cli
dec
adc
mov
push
in
add
mov
inc
add
xlat
or
jno
in
dec
mov
cmp
add
mov
fwait
call
test
inc
adc
mov
popa
jne
cwtl
xlat
mov
call
prefetch
lds
jecxz
add
in
lods
into
xchg
mov
aas
das
cli
rolb
mov
add
mov
add
mov
es
mov
imul
daa
incb
mov
inc
cli
fs
push
inc
and
sbb
incl
sbb
lods
pop
pusha
add
sub
das
fcmovnb
pop
xor
mov
imull
mov
in
add
mov
mov
or
add
add
sub
clc
cmp
mov
cmp
or
add
mov
add
cmp
fnsave
jbe
add
aas
or
add
add
data16
fwait
rcrl
jbe
mov
sbb
push
mov
inc
add
into
xor
inc
add
pop
add
mov
cmpsl
int3
push
jnp
mov
int
sub
add
inc
add
in
pop
into
mov
dec
dec
lods
bound
mov
add
retw
addb
addr16
mov
in
sub
dec
rolb
mov
mov
repnz
mov
mov
lds
mov
fnstenv
sub
inc
sbb
outsl
hlt
lret
pop
movsb
or
mov
pusha
add
lahf
jle
pop
sahf
pop
in
lods
cmc
dec
das
push
dec
pop
gs
add
sub
mov
mov
movsb
loopne
mov
daa
cli
imul
mov
push
pop
fstpl
add
out
dec
pop
lret
mov
and
pusha
add
sbb
push
sbb
cmp
or
add
mov
mov
mov
mov
rolb
mov
mov
cmpsb
jno
cmp
clc
cmc
mov
add
xchg
shrl
and
mov
adc
mov
dec
inc
add
mov
imul
add
cltd
insb
cwtl
loop
mov
mov
mov
mov
mov
es
inc
mov
xchg
add
jo
mov
sub
cld
mov
inc
add
add
cmp
test
add
mov
scas
jmp
add
mov
insb
imul
lds
add
mov
add
inc
cli
push
xchg
add
aaa
inc
rolb
add
add
mov
int3
cmp
movsb
lret
pop
jne
out
pop
fs
mov
sub
repz
je
dec
xor
add
repz
cmp
cmp
fsubs
dec
pop
add
out
xor
mov
add
mov
mov
and
fwait
add
mov
lods
xor
jnp
rolb
mov
mov
jp
pop
jp
add
mov
pop
in
cmp
push
sub
in
ja
insb
aad
jge
lahf
push
inc
add
loopne
mov
ds
jmp
nop
add
xor
std
andl
push
aad
add
daa
jns
and
mov
add
jae
and
mov
inc
popa
sub
bound
mov
sbb
add
push
out
dec
cmp
fdivrp
xchg
cmp
std
fists
sub
ret
add
sub
leave
arpl
add
or
add
push
push
cwtl
insl
fidivl
mov
iret
inc
add
ficoms
sub
sti
addr16
cmp
gs
leave
lea
push
into
ja
f2xm1
add
inc
test
jle
arpl
rolb
mov
sbb
addr16
mov
movsl
addb
xor
iret
inc
add
pop
pop
add
add
mov
outsl
ret
sbb
in
dec
jp
add
mov
dec
enter
fcoms
cli
repz
popa
roll
leave
fldcw
cmp
add
add
mov
into
or
repz
mov
add
out
sbb
testl
lea
sub
shll
cli
push
push
push
lea
lret
dec
hlt
dec
mov
mov
clc
fiaddl
add
add
notb
add
mov
popa
lret
aaa
or
jnp
dec
jne
cmp
adc
jecxz
iret
sbb
daa
adc
mov
lret
and
mov
outsb
addb
xor
mov
add
mov
in
cmpl
test
mov
sbb
mov
sarl
push
add
mov
int3
add
cmpsl
lock
add
add
mov
dec
repz
loope
out
stos
add
xor
mov
lds
decl
lods
aam
mov
test
jae
sahf
add
mov
addb
clc
loopne
mov
add
mov
and
xchg
jb
mov
jmp
sub
mov
add
and
add
dec
inc
add
sbb
enter
xchg
pop
push
jbe
stos
add
incb
in
es
adc
mov
add
sahf
pop
je
jmp
out
add
sahf
stc
push
mov
scas
jecxz
cmc
add
iret
push
mov
mov
adc
cmc
in
inc
rorl
xchg
push
cltd
pushf
xchg
aas
int3
push
clc
loope
add
add
adc
mov
fisubs
cmpsb
mov
xchg
sahf
jae
inc
dec
ss
add
push
sub
adc
mov
xor
xchg
add
mov
jge
jge
sbb
adc
mov
push
and
mov
leave
movsb
xor
dec
fdivp
movsb
ja
dec
ljmp
lahf
push
jo
mov
and
ficompl
cmpl
loope
dec
loop
mov
dec
push
mov
mov
jae
pushf
addr16
cmp
mov
mov
xor
pop
sub
adc
push
pop
sbb
add
into
cmpsb
and
add
sub
lcall
mov
ret
ficoml
pop
xor
mov
lcall
fidivrl
push
sub
mov
stc
je
std
hlt
push
shll
mov
stos
cld
in
int3
pop
mov
cmp
cmc
mov
ret
mov
add
outsb
les
and
mov
es
popa
xor
adc
mov
jbe
dec
jae
xchg
inc
pop
call
add
mov
mov
and
mov
add
lret
mov
clc
mov
add
xchg
je
add
nop
add
js
inc
add
mov
cmp
out
inc
add
cld
mov
mov
mov
and
mov
ret
sbb
aam
mov
add
mov
add
pop
pusha
add
xlat
dec
sub
pop
js
popa
cmp
movl
sbb
icebp
das
in
imul
bound
mov
mov
mov
nop
add
mov
sarl
mov
add
stos
adc
mov
push
aad
scas
adc
mov
in
fiaddl
mov
jbe
and
repnz
jecxz
add
ja
jb
mov
dec
ja
rolb
mov
mov
repnz
cmpsl
mov
pop
pop
inc
dec
dec
mov
add
pop
iret
push
hlt
bound
mov
int
sbb
and
mov
and
pushf
cmpsl
mov
mov
fcmove
fisubl
mov
arpl
mov
jbe
adc
sbb
in
pop
dec
xchg
jmp
add
mov
lret
push
loope
out
xchg
jecxz
daa
sti
jl
jg
pop
lret
or
insb
hlt
cmp
mov
sbb
add
scas
mov
add
add
repnz
inc
add
add
nop
add
outsb
test
sbb
mov
enter
stos
push
das
jge
mov
add
dec
pop
push
jmp
add
add
add
add
stos
push
out
push
jl
loope
jecxz
int
sbb
lods
int
mov
add
jno
test
pop
mulb
mov
iret
xchg
out
loope
add
add
push
adc
mov
loopne
mov
lahf
pop
test
ret
in
sbb
xchg
loop
mov
add
idivl
mov
or
sarl
addr16
movsb
in
fidivl
adc
test
fwait
inc
int
add
or
imul
add
cmp
push
notb
in
jns
dec
sub
xchg
sbb
sub
aas
mov
ficompl
loop
mov
inc
add
in
insb
std
outsl
adc
mov
fsubrl
in
xor
inc
frstor
cli
mov
fisttps
lods
test
and
mov
mov
cmp
data16
inc
addb
push
add
inc
mov
lods
jecxz
insl
lods
xchg
add
cli
test
mov
adc
orl
add
add
push
mov
lea
sahf
popa
cli
add
mov
stos
push
fcompl
add
mov
push
js
rolb
in
add
mov
lcall
pusha
add
ret
daa
mov
push
push
push
add
mov
sub
mov
nop
add
add
sbb
pusha
add
xlat
stos
push
dec
inc
movsl
xchg
add
jle
repz
cmp
add
test
mov
mov
mov
mov
cmp
add
add
mov
add
je
add
push
and
mov
mov
ficomps
xlat
mov
into
stos
xchg
and
cmp
add
and
inc
add
sti
ds
mov
jmp
or
add
push
cmc
dec
xchg
push
pop
not
in
rolb
mov
arpl
mov
mov
mov
push
xchg
add
jnp
pop
cli
fcmovb
add
or
ret
dec
dec
mov
frstor
push
rolb
mov
mov
popf
mov
add
leave
push
mov
mov
roll
mov
mov
nop
add
mov
inc
or
or
imul
mov
les
inc
leave
push
lock
mov
mov
jbe
out
xchg
cmp
add
mov
dec
and
mov
sbb
pop
iret
xor
clc
push
shll
sbb
inc
out
test
int3
std
scas
add
or
rolb
mov
out
mov
mov
arpl
add
sub
push
movsl
insb
cld
adc
insb
fdivrp
push
outsb
div
mov
aas
loope
push
mov
and
mov
mov
in
pop
sub
push
outsb
gs
add
xchg
rcll
mov
in
dec
daa
push
add
or
repnz
xchg
mov
dec
mov
lret
cmp
cmpsl
mov
add
dec
outsb
daa
push
jne
add
xchg
jo
mov
addb
addl
mov
fistl
testb
mov
insl
shll
add
test
cwtl
movsb
imul
xor
pushf
mov
roll
es
adc
sub
xlat
jo
mov
add
das
mov
dec
insb
aaa
jmp
mov
mov
iret
rorl
inc
add
adc
cmpsb
lret
ret
push
inc
inc
add
sbb
dec
aam
dec
out
and
mov
xor
popa
cmc
jns
mov
test
lret
add
in
cmp
xor
adc
jne
imul
bound
mov
mov
int3
fcoms
test
stos
mov
fs
cld
dec
ja
inc
out
js
pop
mov
add
xchg
push
addb
outsl
or
add
mov
jg
rolb
mov
cwtl
pop
push
xchg
jne
enter
test
sti
push
cmp
jp
mov
add
mov
inc
add
fldcw
addr16
cmp
add
add
push
push
add
mov
hlt
or
mov
js
push
mov
add
add
jg
pop
xchg
lret
int3
sub
jo
mov
std
leave
ja
add
addb
and
bound
mov
push
add
mov
add
mov
add
sub
imul
dec
cmp
lds
push
mov
push
pop
cmc
out
icebp
pop
push
add
xchg
inc
cmp
aas
or
cltd
fwait
test
movsl
push
xchg
add
sbb
lods
dec
jnp
leave
jg
add
jbe
neg
aaa
push
mov
rolb
or
xlat
mov
mov
cmpsl
rcrl
jbe
jg
mov
int
loop
mov
sbb
mov
jns
insb
stos
cmc
or
lds
mov
scas
dec
push
add
rolb
mov
add
adc
or
popa
pushf
inc
inc
add
xor
popa
jnp
stos
dec
cmp
dec
jo
mov
dec
aad
add
mov
push
adc
push
lods
cmp
into
sahf
lcall
ljmp
and
mov
xchg
add
sub
add
add
pop
fstpt
inc
add
mov
and
push
mov
fistl
add
sub
aas
mov
popf
or
pop
dec
push
bound
mov
cmp
lahf
ja
in
popa
in
jb
mov
pusha
add
add
sbb
and
es
jne
stos
xlat
dec
mov
mov
jecxz
cli
jb
mov
inc
mov
pop
and
add
dec
pop
mov
push
in
cmp
sub
ds
js
notb
jne
out
inc
add
add
hlt
stc
inc
jbe
push
ret
sbb
and
mov
add
les
sbb
lds
stos
ret
pushf
int3
fmuls
fwait
xlat
cli
xor
mov
jb
mov
add
dec
fimuls
idivb
cmp
add
jmp
mov
mov
cmpsl
dec
ret
scas
outsb
xchg
sbb
push
add
add
adc
mov
hlt
adc
adc
lods
pop
iret
sub
mov
ja
lret
mov
sub
mov
mov
into
movsl
fistps
repz
sarl
lahf
fwait
pop
dec
push
pop
sahf
std
jno
ljmp
mov
outsb
data16
mov
add
aaa
aaa
ss
add
repnz
ret
shrl
sbb
add
inc
add
mov
mov
xor
mov
roll
and
cmp
add
hlt
sbb
dec
aad
rolb
xor
imul
mov
add
mov
push
mov
jle
fsubrs
scas
nop
add
mov
add
jne
cltd
test
inc
add
xchg
inc
mov
mov
daa
rolb
xor
lods
call
add
add
outsl
mov
pop
push
fs
lods
adc
add
mov
leave
insl
or
pop
dec
insb
sub
lock
mov
xor
mov
lds
add
mov
addb
popf
leave
push
mov
movzbl
inc
add
cmp
add
jl
lret
ret
cmp
add
mov
push
add
stos
decl
lret
push
clc
mov
pop
inc
add
mov
arpl
rcrl
frstor
lahf
xchg
test
jmp
lds
xchg
cmpsb
icebp
sarl
out
incl
dec
scas
int
cmp
js
lahf
jbe
iret
mov
mov
in
movsl
jg
divb
or
push
mov
add
fistpl
add
imul
add
mov
mov
mov
mov
push
or
ljmp
insb
adc
xor
and
mov
sub
add
ss
mov
mov
inc
shrl
add
sti
nop
add
jae
add
repz
mov
pop
fistpl
xchg
idivl
adc
mov
out
lods
out
xchg
adc
xchg
jae
sub
push
sbb
cltd
cmp
dec
mov
add
pushf
and
mov
cld
mov
xlat
jp
xor
mov
jge
or
add
add
fwait
pop
stos
lock
divl
es
ds
ljmp
add
mov
fistpl
jg
std
enter
cld
popa
bound
mov
jl
mov
push
jecxz
popf
out
inc
inc
add
sub
add
mov
outsb
dec
adc
loopne
mov
add
jae
sub
add
pop
pop
fstps
sub
mov
inc
jbe
aam
xchg
mov
inc
add
cmp
and
mov
repnz
int
sub
jne
ret
fs
add
icebp
fucomip
out
popf
mov
pop
sbb
sbb
push
cmp
xlat
fidivl
lahf
nop
add
add
ja
and
lret
mov
or
insb
jb
mov
xor
mov
xor
pop
inc
cmc
add
add
push
add
and
mov
jecxz
fiaddl
mov
add
in
mov
popa
sbb
mov
fimuls
repz
in
push
stc
jno
cltd
in
xor
inc
mov
addr16
lret
or
add
cs
and
mov
jbe
xor
add
ret
call
in
lea
add
dec
add
sub
mov
or
mov
mov
lcall
mov
gs
bound
mov
mov
add
jmp
rolb
mov
jle
cmp
pop
pop
jae
je
les
ficompl
dec
pop
sbb
add
add
mov
mov
jg
shl
xchg
outsb
popf
xchg
icebp
sub
add
rolb
mov
or
add
in
ja
cmc
fstps
add
mov
pop
and
mov
add
add
mov
mov
aas
lret
jl
data16
adc
add
test
push
subl
mov
pop
jl
push
hlt
pop
dec
push
add
jg
push
xchg
sbb
hlt
pop
mov
aas
push
xchg
mov
das
jl
xchg
mov
sub
mov
repnz
add
add
pop
cs
mov
add
inc
add
cld
bound
mov
lds
inc
add
call
cli
cs
fiadds
mov
mov
add
mov
push
shrl
mov
pop
inc
add
or
enter
mov
pop
adc
fdivp
mov
mov
repz
push
add
mov
mov
inc
add
std
xor
les
lods
fst
enter
stc
push
jnp
ret
bound
mov
mov
cltd
mov
or
mov
mov
fldl
andl
adc
mov
add
xchg
test
loopne
mov
add
add
add
imul
cwtl
aas
mov
mov
mov
add
push
mov
mov
mov
push
loopne
mov
faddl
insb
mov
dec
push
rolb
bswap
mov
inc
cli
cmc
jno
add
mov
imul
pop
push
ljmp
mov
movsb
fsubrl
xchg
lods
lcall
mov
mov
push
add
in
outsl
push
mov
dec
sbb
gs
jg
add
mov
mov
add
fcomps
or
fidivrl
out
dec
arpl
add
inc
repnz
stos
inc
scas
adc
xor
adc
mov
or
mov
mov
bound
mov
add
mov
add
sub
mov
jae
sub
cmp
dec
jae
fwait
jmp
inc
add
mov
mov
rolb
mov
sbb
sbb
add
popf
cmp
xor
mov
stos
aad
jbe
mov
test
push
mov
mov
clc
dec
and
aad
scas
rolb
mov
test
add
insb
xor
mov
xchg
xor
test
mull
pop
mov
int
std
lods
jne
push
fstpt
mov
dec
xchg
je
movsl
inc
outsb
push
movsl
mov
stc
fs
inc
add
pop
push
and
add
pop
xchg
stos
ds
je
clc
push
xor
es
push
mov
arpl
xchg
jne
and
add
xor
mov
cmp
scas
mov
cli
dec
pop
aad
in
inc
fnstenv
adc
and
add
xor
adc
mov
mov
or
push
aas
fsincos
xchg
or
add
dec
ret
sbb
loop
mov
adc
mov
mov
out
add
in
sbb
lock
mov
push
jl
sbb
mov
std
sti
mov
inc
inc
add
fildll
nop
add
jno
add
push
mov
les
fstps
data16
mov
push
insl
add
mov
mov
ss
hlt
sub
ret
xor
mov
add
sub
in
sbb
mov
mov
into
adc
mov
das
cwtl
sub
mov
inc
out
scas
jo
mov
jns
pop
int3
psubd
enter
mov
rolb
insl
push
cmp
mov
add
add
aaa
leave
int
cmp
mov
add
aam
sbb
mov
and
bound
mov
mov
push
lahf
pop
jae
loop
mov
push
shll
scas
jns
lock
xchg
das
arpl
xchg
xchg
xchg
add
mov
add
addr16
mov
dec
and
add
adc
mov
mov
lock
mov
add
xchg
bound
mov
fcmovnbe
add
and
mov
outsl
jnp
into
xchg
aas
mov
mov
scas
sub
xor
mov
rcrl
mov
mov
mov
xlat
cmpl
adc
add
add
jge
mov
mov
jmp
xchg
mov
aad
add
out
pop
and
mov
mov
fwait
repnz
jns
insb
rolb
mov
dec
xor
mov
mov
rorl
adc
mov
pmaddwd
xlat
push
add
mov
call
cwtl
jge
push
add
call
sbb
xchg
sub
jae
sbb
add
negl
addb
pop
into
lods
mov
or
sub
mov
xchg
sub
add
pushl
add
jl
add
shll
add
push
add
mov
in
stos
adc
mov
outsl
or
loopne
mov
mov
cli
pop
dec
fwait
mov
clc
pushf
push
xchg
scas
jnp
js
add
xlat
cld
addb
inc
inc
cld
push
push
add
rcl
jg
dec
outsl
cmpsb
cli
jl
cmp
enter
sbb
mov
dec
stos
or
adc
mov
mov
in
cmp
insl
popf
mov
lock
sub
push
push
outsb
jle
xchg
divb
ja
ds
push
inc
add
jbe
hlt
mov
rolb
mov
sbb
mov
testb
outsl
daa
push
std
sub
hlt
jle
mov
add
fs
lret
insb
dec
push
sbb
add
call
mov
jge
add
add
lret
jge
aad
or
repnz
mov
test
clc
fmul
mov
js
add
add
add
jae
xchg
sbb
add
cmc
add
or
cmp
jne
cmpsl
cltd
mov
mov
inc
mov
adc
pop
jl
adc
mov
add
mov
push
mov
mov
fcmovu
push
es
xor
mov
jbe
mov
push
insl
xor
mov
and
dec
jmp
pop
mov
xchg
dec
loop
mov
push
xchg
nop
add
leave
rcrl
mov
jb
mov
pop
int3
es
cmc
mov
xor
mov
or
cmp
push
pusha
add
mov
out
cmp
push
xor
add
cmp
aaa
add
add
add
jg
lcall
add
cmp
xchg
add
fisubrl
icebp
mov
inc
lods
scas
cs
inc
addb
loopne
mov
lods
ljmp
mov
push
or
sub
lods
mov
mov
cs
xchg
add
hlt
jb
mov
jne
das
xor
add
add
ret
out
jp
xor
push
push
imul
mov
add
cmp
and
mov
mov
push
enter
xchg
push
push
mov
test
test
add
jae
addb
xchg
mov
mov
sub
dec
mov
mov
mov
mov
arpl
mov
or
push
jnp
into
adc
inc
add
add
push
fsts
or
mov
sahf
push
add
lahf
fisubl
push
xor
mov
add
jge
jns
fidivrl
sub
add
dec
sub
add
fnstsw
negl
push
jnp
dec
sahf
or
add
dec
test
leave
push
repz
mov
add
sbb
add
lock
insb
push
dec
stos
or
add
repz
repnz
fldcw
pop
mov
not
add
mov
mov
loop
mov
cmp
mov
inc
xor
push
adc
sub
and
ret
and
mov
lds
mov
mov
xor
add
es
or
call
or
lcall
mov
sub
mov
dec
dec
push
sbb
aad
imul
mov
and
add
add
add
mov
dec
mov
js
jmp
sub
adc
mov
mov
arpl
test
rolb
mov
cwtl
mov
add
cmpsl
and
mov
inc
add
mov
inc
jo
mov
push
pop
mov
sbb
mov
mov
jge
push
loopne
mov
or
mov
or
pop
pushf
jp
inc
pop
out
xchg
pop
repnz
ret
cmp
add
add
stos
adc
mov
xchg
add
xchg
add
jnp
lock
dec
inc
fildll
sbb
aaa
push
rcl
mov
add
push
lods
aad
add
mov
add
ss
add
add
pusha
add
pop
js
xor
popf
sbb
lea
cmp
mov
decb
lods
push
stos
cmp
xchg
lock
mov
fsubrs
add
mov
mov
scas
or
jmp
xchg
add
sub
add
add
mov
add
adc
push
test
push
addl
adc
xlat
cmp
fnstsw
xlat
bound
mov
add
add
fsubs
addb
ret
push
push
cs
add
enter
fnstcw
ja
rolb
int3
jbe
and
mov
aam
pmulhuw
cli
dec
popf
jecxz
push
lods
mov
aaa
or
aam
lret
xor
mov
pop
lods
mov
xor
in
in
mov
xchg
or
out
sbb
addl
mov
add
xchg
nop
add
ja
stos
hlt
pushf
lods
mov
cmc
les
rolb
mov
jb
mov
bsf
mov
daa
jno
inc
test
add
mov
sub
mov
out
fucom
aam
iret
hlt
test
lock
jmp
cltd
push
pop
mov
mov
xchg
adc
cmp
pop
jb
mov
and
iret
lods
popf
jg
insb
inc
xchg
popf
sbb
iret
insb
jb
mov
pop
setnp
adc
xchg
sub
add
std
xor
add
mov
fdivr
gs
xchg
inc
add
xor
mov
adc
mov
inc
add
or
lock
add
add
mov
popf
icebp
inc
sbb
jmp
sub
popa
xchg
sub
mov
or
loope
arpl
push
add
add
mov
dec
push
aam
fwait
cltd
mov
addr16
mov
jae
add
jecxz
ss
mov
dec
mov
rcll
stos
aad
mov
add
inc
insb
push
mov
stc
insl
sub
mov
outsb
ficoml
push
mov
jns
stos
jns
jp
add
and
cltd
sub
aad
xchg
iret
imul
add
repnz
nop
cld
jae
add
in
ret
or
or
push
mov
nop
leave
jmp
pop
out
pop
add
repnz
nop
cld
jae
add
jae
add
add
nop
nop
cld
jae
popl
mov
mov
repnz
nop
cld
jae
add
fimull
fiadds
xchg
ret
add
add
sub
hlt
addl
push
mov
nop
leave
jmp
dec
mov
testb
test
push
mov
nop
leave
jmp
add
add
adc
nop
leave
jmp
xchg
pop
add
adc
scas
hlt
sub
inc
adc
repnz
nop
cld
jae
lods
add
add
push
adc
add
push
mov
nop
leave
jmp
add
push
add
xchg
push
clc
repnz
nop
cld
jae
add
xabort
nop
nop
cld
jae
jo
add
addb
test
movsl
faddl
xchg
ret
or
add
pop
call
clc
repnz
nop
cld
jae
add
mov
push
mov
xchg
ret
add
add
add
xor
cmp
mov
xchg
ret
add
flds
add
add
mov
repnz
nop
cld
jae
mov
add
add
testb
subl
push
mov
xchg
ret
add
add
lods
in
mov
clc
repnz
nop
cld
jae
add
add
add
adc
repnz
nop
cld
jae
add
add
add
repnz
nop
cld
jae
add
lret
clc
repnz
nop
cld
jae
add
and
add
push
mov
nop
leave
jmp
add
add
mov
enter
nop
cld
jae
or
add
mov
jne
push
mov
nop
leave
jmp
jns
iret
add
push
push
mov
xchg
ret
add
test
add
pop
rep
push
mov
xchg
ret
test
add
inc
dec
lea
push
mov
nop
leave
jmp
insb
outsb
popa
clc
repnz
nop
cld
jae
inc
nop
and
loop
add
cmp
clc
repnz
nop
cld
jae
nop
add
pop
push
mov
xchg
ret
and
add
add
clc
repnz
nop
cld
jae
add
add
lods
add
iret
adc
subl
clc
repnz
nop
cld
jae
mov
sub
nop
cld
jae
dec
add
and
add
cmp
repz
mov
xchg
ret
add
mov
cld
add
leave
push
mov
push
mov
nop
leave
jmp
sti
inc
push
add
repnz
nop
cld
jae
sti
add
add
push
mov
nop
leave
jmp
in
inc
pop
pop
add
ja
ud1
add
clc
repnz
nop
cld
jae
mov
add
xor
sub
add
repnz
nop
cld
jae
add
add
jnp
nop
nop
cld
jae
add
inc
sbb
add
leave
push
mov
nop
leave
jmp
add
into
cld
pop
push
nop
nop
cld
jae
and
add
add
mov
add
dec
add
add
test
add
js
test
push
add
clc
repnz
nop
cld
jae
nop
add
mov
repnz
repnz
nop
cld
jae
and
add
popl
add
lret
clc
repnz
nop
cld
jae
dec
add
mov
mov
add
add
in
nop
leave
jmp
add
or
in
mov
clc
repnz
nop
cld
jae
loop
inc
leave
adcl
mov
inc
push
add
add
sbb
or
sbb
call
clc
repnz
nop
cld
jae
add
clc
repnz
nop
cld
jae
nop
mov
add
loopne
mov
add
clc
repnz
nop
cld
jae
add
sbb
cld
or
nop
leave
jmp
sub
mov
mov
repnz
nop
cld
jae
add
dec
add
add
push
mov
xchg
ret
mov
add
pop
adc
fistpll
mov
xchg
ret
add
mov
mov
repnz
nop
cld
jae
flds
mov
lea
clc
repnz
nop
cld
jae
insb
add
add
add
repnz
nop
cld
jae
pop
add
add
xlat
xchg
mov
push
mov
nop
leave
jmp
add
add
add
lods
push
mov
enter
insb
mov
arpl
add
add
int
clc
repnz
nop
cld
jae
pop
xchg
and
add
add
nop
nop
cld
jae
add
add
add
popl
jb
mov
mov
push
mov
xchg
ret
and
filds
iret
filds
jo
pop
push
mov
xchg
ret
adc
add
add
add
push
mov
xchg
ret
sub
ret
push
xor
mov
xor
add
mov
nop
leave
jmp
nop
mov
sahf
pop
pop
xchg
xchg
bound
mov
outsb
push
mov
cmp
add
iret
enter
add
xchg
mov
mov
clc
repnz
nop
cld
jae
insb
and
sub
call
nop
cld
jae
add
add
ja
mov
clc
repnz
nop
cld
jae
add
rolb
loopne
mov
je
clc
repnz
nop
cld
jae
and
pop
cli
push
push
mov
xchg
ret
add
repnz
and
cld
add
clc
repnz
nop
cld
jae
cld
add
add
cmpsl
mov
mov
nop
leave
jmp
xchg
add
test
rcrb
repnz
nop
cld
jae
in
add
xchg
cmp
push
mov
xchg
ret
add
add
inc
add
mov
nop
leave
jmp
or
add
push
add
inc
add
xor
clc
repnz
nop
cld
jae
add
ret
ret
clc
repnz
nop
cld
jae
pop
add
adc
into
test
arpl
add
add
repnz
nop
cld
jae
popl
add
add
add
loopne
repnz
nop
cld
jae
inc
add
mov
iret
dec
je
clc
repnz
nop
cld
jae
hlt
loop
lods
push
push
mov
xchg
ret
leave
mov
add
and
add
clc
repnz
nop
cld
jae
mov
add
dec
push
mov
add
clc
repnz
nop
cld
jae
add
add
fwait
mov
clc
repnz
nop
cld
jae
add
mov
jns
aad
mov
add
push
mov
nop
leave
jmp
sub
sub
add
add
push
mov
xchg
ret
fxch
add
in
add
push
add
push
js
mov
xchg
ret
mov
add
add
movzwl
push
mov
nop
leave
jmp
leave
cld
add
add
add
add
repnz
nop
cld
jae
sbb
pop
clc
repnz
nop
cld
jae
push
mov
adc
mov
mov
xchg
ret
add
mov
mov
push
xchg
mov
clc
repnz
nop
cld
jae
adc
inc
pop
lcall
nop
cld
jae
add
mov
add
add
popa
add
repnz
nop
cld
jae
xchg
add
dec
and
or
movsb
push
mov
nop
leave
jmp
flds
test
addl
add
nop
leave
jmp
push
mov
and
add
pusha
clc
repnz
nop
cld
jae
cld
push
add
test
andl
ret
clc
repnz
nop
cld
jae
xchg
add
cmpsb
in
div
push
mov
nop
leave
jmp
add
add
mov
mov
xchg
ret
mov
add
test
xchg
lahf
cmp
push
mov
nop
leave
jmp
add
add
adc
add
clc
repnz
nop
cld
jae
add
add
cmpsl
jge
pop
clc
repnz
nop
cld
jae
sahf
jns
add
add
shl
imul
clc
repnz
nop
cld
jae
in
add
add
add
clc
repnz
nop
cld
jae
jae
mov
add
leave
dec
je
mov
push
mov
xchg
ret
addl
pop
fisttpl
nop
nop
cld
jae
fldl
mov
insb
add
mov
push
mov
xchg
ret
or
mov
cld
fldl
negb
movb
add
clc
repnz
nop
cld
jae
insb
add
and
jne
clc
repnz
nop
cld
jae
dec
nop
test
lods
test
ret
clc
repnz
nop
cld
jae
out
push
and
add
inc
mov
je
repnz
nop
cld
jae
add
add
add
push
mov
nop
leave
jmp
mov
add
nop
cmp
inc
int3
inc
add
cld
add
nop
add
das
dec
clc
repnz
nop
cld
jae
add
add
fldl
mov
xchg
ret
add
add
and
add
mov
mov
nop
leave
jmp
repnz
sahf
push
push
mov
xchg
ret
add
add
add
nop
cld
jae
add
pop
add
loop
mov
clc
repnz
nop
cld
jae
scas
add
dec
cmpsl
add
shr
clc
repnz
nop
cld
jae
in
mov
add
push
mov
xchg
ret
add
fistps
out
add
xor
repnz
nop
cld
jae
add
add
adc
mov
xchg
ret
mov
inc
add
xchg
push
mov
xchg
ret
and
add
leave
nop
add
leave
push
mov
nop
leave
jmp
iret
mov
add
nop
nop
cld
jae
add
add
add
mov
jo
add
add
lods
jae
add
in
add
clc
repnz
nop
cld
jae
add
in
xchg
repnz
das
push
push
mov
xchg
ret
cld
and
add
push
cld
add
push
push
mov
xchg
ret
add
cmpsl
and
sbb
popa
add
repnz
nop
cld
jae
sub
add
add
nop
nop
cld
jae
add
xchg
and
loop
sbb
nop
nop
cld
jae
add
dec
shr
clc
repnz
nop
cld
jae
add
fldenv
pop
mov
clc
repnz
nop
cld
jae
add
rclb
fildl
xchg
ret
mov
mov
add
mov
mov
jne
push
mov
nop
leave
jmp
add
popa
clc
repnz
nop
cld
jae
sti
jae
add
mov
mov
xchg
ret
add
or
or
sub
mov
xchg
ret
pop
add
sbb
jg
rclb
lods
in
inc
add
filds
add
add
add
inc
add
add
cmpsl
hlt
add
add
mov
push
mov
nop
leave
jmp
add
leave
add
inc
add
rolb
mov
push
mov
xchg
ret
add
add
popa
add
mov
nop
leave
jmp
and
inc
iret
pop
scas
add
nop
nop
cld
jae
add
pop
add
mov
add
clc
repnz
nop
cld
jae
dec
mov
addb
pusha
add
mov
xchg
ret
lods
sahf
add
add
out
addr16
and
nop
cld
jae
or
add
repnz
mov
repnz
pop
pop
add
add
add
repnz
pushl
push
mov
xchg
ret
loop
add
add
cwtl
mov
push
mov
nop
leave
jmp
add
mov
add
add
clc
repnz
nop
cld
jae
ret
mov
add
add
jle
push
mov
nop
leave
jmp
xchg
add
sub
repz
mov
nop
leave
jmp
add
push
pop
add
push
mov
nop
leave
jmp
add
jns
jns
add
test
mov
nop
nop
cld
jae
scas
ret
or
jge
clc
repnz
nop
cld
jae
notb
js
test
add
clc
repnz
nop
cld
jae
dec
and
jo
mov
add
clc
repnz
nop
cld
jae
add
add
nop
cld
jae
and
add
mov
jne
clc
repnz
nop
cld
jae
jns
add
sbb
clc
repnz
nop
cld
jae
add
repnz
lock
dec
popl
clc
repnz
nop
cld
jae
insb
add
into
xchg
add
add
mov
push
mov
nop
leave
jmp
testb
fucom
fldl
sub
incl
pop
mov
and
sti
loop
jae
mov
mov
nop
nop
cld
jae
cmpsl
add
test
add
jmp
incl
add
lods
xchg
nop
add
xorl
stos
clc
repnz
nop
cld
jae
add
mov
add
in
nop
leave
jmp
test
sbb
negl
test
push
mov
nop
leave
jmp
or
nop
mov
cmp
in
inc
jmp
pop
add
roll
add
add
iret
call
clc
repnz
nop
cld
jae
push
xchg
add
xor
mov
movzwl
clc
repnz
nop
cld
jae
hlt
insb
xchg
testb
dec
add
push
mov
nop
leave
jmp
push
add
add
push
mov
nop
cld
jae
add
or
es
test
push
mov
nop
leave
jmp
and
and
repnz
push
mov
xchg
ret
push
add
dec
sub
lods
clc
repnz
nop
cld
jae
flds
add
mulb
add
add
nop
nop
cld
jae
mov
leave
add
xchg
clc
repnz
nop
cld
jae
add
add
mov
mov
loop
mov
nop
leave
jmp
into
jns
add
add
or
icebp
clc
repnz
nop
cld
jae
inc
imulb
cwtl
cld
clc
repnz
nop
cld
jae
cld
out
inc
xchg
add
loope
inc
push
mov
nop
leave
jmp
mov
add
jno
je
clc
repnz
nop
cld
jae
cmpsl
inc
add
add
clc
repnz
nop
cld
jae
add
add
add
mov
clc
repnz
nop
cld
jae
cmpsl
and
fbld
mov
dec
adc
jmp
inc
add
dec
add
add
add
mov
clc
repnz
nop
cld
jae
leave
add
push
clc
repnz
nop
cld
jae
add
add
out
add
add
clc
repnz
nop
cld
jae
add
mov
pop
xor
push
mov
nop
leave
jmp
add
mov
add
add
push
mov
xchg
ret
add
inc
add
add
add
cmp
mov
nop
leave
jmp
jns
add
pushl
clc
repnz
nop
cld
jae
loop
add
mov
in
nop
leave
jmp
add
leave
add
sbb
repnz
nop
cld
jae
add
add
mov
nop
leave
jmp
leave
add
add
test
popa
enter
push
mov
xchg
ret
or
into
add
andl
inc
add
add
inc
add
sti
add
add
in
nop
leave
jmp
add
add
push
mov
nop
leave
jmp
push
add
cmpsl
scas
jo
ret
sub
rclb
sbb
inc
add
add
add
dec
andnps
jae
sub
push
cmpsb
add
testb
cld
jae
add
loop
mov
sub
clc
repnz
nop
cld
jae
scas
mov
sbb
push
mov
nop
leave
jmp
mov
mov
dec
jl
clc
repnz
nop
cld
jae
sbb
jno
add
clc
repnz
nop
cld
jae
cld
in
add
popl
add
mov
pop
out
aas
mov
clc
repnz
nop
cld
jae
push
sti
inc
rcll
mov
insl
ljmp
add
add
add
testb
sti
push
mov
xchg
ret
fstl
add
cld
mov
clc
repnz
nop
cld
jae
xchg
and
dec
dec
out
push
clc
repnz
nop
cld
jae
pop
inc
add
cli
push
mov
add
add
add
repz
out
mov
shl
mov
ds
gs
push
push
mov
xchg
ret
add
mov
adc
repnz
nop
cld
jae
sbb
loope
jae
jmp
cmp
ret
add
pop
inc
add
inc
add
push
push
clc
repnz
nop
cld
jae
mov
dec
and
dec
jmp
add
add
leave
and
in
insb
xchg
push
lea
push
mov
xchg
ret
testb
and
sbb
pop
push
mov
repnz
nop
cld
jae
jo
dec
pop
scas
add
mov
xchg
ret
hlt
pop
jae
fstp
loop
add
push
mov
xchg
ret
or
add
ret
les
clc
repnz
nop
cld
jae
add
dec
add
add
clc
repnz
nop
cld
jae
add
push
add
add
add
push
push
mov
xchg
ret
mov
add
out
ret
add
push
mov
nop
leave
jmp
add
xchg
dec
add
jns
test
or
in
nop
leave
jmp
add
add
add
mov
adc
mov
jmp
add
add
jns
add
push
add
mov
jne
call
clc
repnz
nop
cld
jae
out
add
mov
nop
leave
jmp
mulb
mov
add
add
add
clc
repnz
nop
cld
jae
add
xchg
add
imul
jae
add
add
sbb
jmp
nop
cld
jae
push
mov
faddl
clc
inc
add
addl
add
add
add
clc
repnz
nop
cld
jae
in
inc
jmp
sub
loop
add
add
add
add
and
dec
push
clc
repnz
nop
cld
jae
add
push
add
or
cltd
adc
add
repnz
nop
cld
jae
jns
add
add
add
repnz
nop
cld
jae
mov
add
mov
clc
repnz
nop
cld
jae
iret
add
push
push
mov
nop
leave
jmp
scas
mov
add
add
mov
xchg
ret
push
pop
add
sahf
push
add
dec
movzwl
clc
repnz
nop
cld
jae
popl
out
xlat
xchg
mov
rcrl
add
push
mov
xchg
ret
add
add
xor
add
push
mov
xchg
ret
adc
add
fnstcw
in
dec
push
mov
xchg
ret
add
popl
pop
mov
std
out
add
add
flds
add
add
ret
sbb
cld
jae
sti
leave
repnz
xlat
inc
push
add
clc
repnz
nop
cld
jae
lods
add
ret
stc
mov
clc
repnz
nop
cld
jae
or
out
adc
mov
ret
clc
repnz
nop
cld
jae
into
mov
add
test
mov
nop
leave
jmp
add
ror
push
mov
xchg
ret
sti
add
scas
add
push
dec
add
push
mov
nop
leave
jmp
pop
and
xchg
add
pop
pop
push
clc
repnz
nop
cld
jae
jo
add
add
add
push
mov
nop
leave
jmp
add
xchg
add
xchg
fwait
mov
clc
repnz
nop
cld
jae
mov
push
push
mov
xchg
ret
popl
scas
add
add
add
add
clc
repnz
nop
cld
jae
add
add
lret
push
mov
xchg
ret
add
loop
cmp
mov
adc
repnz
nop
cld
jae
loop
and
fsts
add
clc
repnz
nop
cld
jae
scas
add
add
mov
xchg
ret
sub
jae
sti
xchg
mov
nop
nop
cld
jae
add
add
pop
push
clc
repnz
nop
cld
jae
popl
dec
add
or
scas
cltd
call
clc
repnz
nop
cld
jae
dec
mov
jle
clc
repnz
nop
cld
jae
add
add
add
pop
xchg
clc
repnz
nop
cld
jae
test
scas
scas
test
repnz
nop
cld
jae
cld
pop
push
inc
add
loopnew
mov
mov
clc
repnz
nop
cld
jae
add
std
mov
clc
repnz
nop
cld
jae
repnz
fldl
add
push
push
mov
xchg
ret
add
push
add
test
add
adc
repnz
nop
cld
jae
into
fldl
test
push
push
mov
xchg
ret
mov
xchg
notb
clc
repnz
nop
cld
jae
inc
loop
add
nop
in
loop
inc
sub
loope
repnz
nop
cld
jae
add
in
cmpsl
mov
clc
repnz
nop
cld
jae
loop
mov
push
sahf
pop
clc
repnz
nop
cld
jae
mov
iret
push
fldl
repnz
in
call
clc
repnz
nop
cld
jae
cld
test
mov
push
mov
nop
leave
jmp
into
jo
add
in
add
jmp
call
add
cmpsl
add
or
pop
add
sbb
lea
clc
repnz
nop
cld
jae
add
cld
add
outsl
jmp
add
or
in
cld
pop
add
cld
mov
add
cli
mov
clc
repnz
nop
cld
jae
mov
and
clc
repnz
nop
cld
jae
add
and
leave
add
pop
clc
repnz
nop
cld
jae
add
add
xor
add
push
mov
nop
leave
jmp
fldl
add
pop
and
push
mov
xchg
ret
add
mov
jmp
iret
add
inc
mov
add
add
stos
push
mov
xchg
ret
add
ret
add
inc
in
clc
repnz
nop
cld
jae
mov
ret
cld
inc
add
adc
push
mov
xchg
ret
mov
hlt
add
mov
add
clc
repnz
nop
cld
jae
inc
add
add
pop
mov
push
mov
xchg
ret
mov
mov
pop
mov
clc
repnz
nop
cld
jae
add
scas
and
mov
fcompl
mov
xchg
ret
push
add
sahf
add
add
clc
repnz
nop
cld
jae
mov
cld
sub
fistl
in
nop
leave
jmp
add
mov
mov
push
push
mov
nop
leave
jmp
add
jo
add
call
clc
repnz
nop
cld
jae
test
rep
clc
repnz
nop
cld
jae
add
add
pop
cmp
push
mov
xchg
ret
cld
or
add
mov
clc
repnz
nop
cld
jae
mov
add
push
mov
cmp
repnz
nop
cld
jae
add
add
add
sub
into
pop
add
iret
in
add
sbb
add
add
ss
clc
repnz
nop
cld
jae
add
addb
fists
mov
xchg
ret
insb
add
pop
add
pushf
cmpl
push
mov
nop
leave
jmp
add
test
outsl
mov
clc
repnz
nop
cld
jae
or
add
add
in
nop
leave
jmp
add
fstps
adc
scas
add
call
clc
repnz
nop
cld
jae
add
and
add
in
nop
leave
jmp
dec
into
add
adc
les
clc
repnz
nop
cld
jae
popl
add
add
outsb
pop
clc
repnz
nop
cld
jae
dec
add
add
add
push
hlt
clc
repnz
nop
cld
jae
add
xor
mov
clc
repnz
nop
cld
jae
add
add
mov
clc
repnz
nop
cld
jae
out
add
je
clc
repnz
nop
cld
jae
repnz
cs
push
mov
nop
leave
jmp
mov
add
scas
jmp
nop
nop
cld
jae
add
add
add
clc
repnz
nop
cld
jae
add
add
sti
push
les
add
add
in
nop
leave
jmp
add
add
nop
leave
jmp
add
add
dec
mov
push
mov
xchg
ret
pop
test
pusha
add
clc
repnz
nop
cld
jae
add
iret
and
add
aas
push
mov
nop
leave
jmp
inc
mov
add
mov
clc
repnz
nop
cld
jae
add
add
out
push
push
mov
nop
leave
jmp
add
repnz
or
in
and
mov
clc
repnz
nop
cld
jae
dec
xchg
imul
push
mov
xchg
ret
add
pop
pop
add
test
xor
add
clc
repnz
nop
cld
jae
pop
xchg
test
push
mov
nop
leave
jmp
insb
xchg
mov
movsb
aaa
les
in
nop
leave
jmp
addl
ret
mov
mov
nop
leave
jmp
add
add
cmp
push
mov
nop
leave
jmp
in
test
add
clc
add
clc
repnz
nop
cld
jae
mov
into
and
mov
ljmp
push
mov
adc
add
and
test
push
mov
xchg
ret
mov
jae
add
test
cli
clc
repnz
nop
cld
jae
repnz
sti
test
call
cmp
ret
sti
add
cld
leave
push
jns
mov
xor
push
mov
nop
leave
jmp
sub
push
xchg
inc
adc
repnz
nop
cld
jae
add
add
push
mov
xchg
ret
add
add
add
dec
cmp
repnz
nop
cld
jae
mov
or
ret
aas
mov
clc
repnz
nop
cld
jae
cld
and
add
add
pop
adc
repnz
nop
cld
jae
add
add
add
mov
xchg
ret
add
inc
add
out
mov
clc
repnz
nop
cld
jae
add
lds
or
clc
repnz
nop
cld
jae
jns
vmovhpd
add
mov
mov
push
mov
xchg
ret
add
cld
add
add
and
mov
mov
push
mov
nop
leave
jmp
and
popl
mov
push
mov
nop
leave
jmp
inc
test
dec
push
mov
xchg
ret
add
in
jo
add
cmp
in
nop
leave
jmp
add
sbb
scas
cld
add
add
and
push
mov
nop
leave
jmp
insb
add
add
lock
mov
mov
add
arpl
je
clc
repnz
nop
cld
jae
mov
inc
hlt
rolb
in
pushl
push
mov
xchg
ret
mov
mov
xchg
add
clc
repnz
nop
cld
jae
fstl
add
mov
nop
nop
cld
jae
xchg
add
add
rcrl
jp
jbe
clc
repnz
nop
cld
jae
pop
add
mov
add
in
add
push
int3
push
add
faddl
add
and
mov
nop
leave
jmp
add
add
add
adc
mov
jp
repz
repnz
nop
cld
jae
add
mov
into
sbb
nop
nop
cld
jae
add
add
add
add
dec
mov
push
mov
nop
leave
jmp
add
add
add
add
fcomps
repnz
nop
cld
jae
pop
add
dec
and
add
hlt
enter
mov
xchg
ret
addl
flds
inc
add
jae
add
mov
nop
nop
cld
jae
and
or
add
movsl
cmc
clc
repnz
nop
cld
jae
add
sub
ja
inc
add
cld
and
add
add
mov
cltd
idiv
jmp
incl
iret
add
inc
sti
mov
jo
add
pop
clc
repnz
nop
cld
jae
jns
dec
sbbl
add
rcrl
or
clc
repnz
nop
cld
jae
add
addb
xor
repnz
nop
cld
jae
pop
mov
fwait
mov
clc
repnz
nop
cld
jae
add
add
pop
cmpw
push
mov
nop
leave
jmp
add
push
clc
repnz
nop
cld
jae
sti
cmpsl
add
or
les
repnz
nop
cld
jae
in
add
push
clc
repnz
nop
cld
jae
scas
negb
add
pusha
push
mov
xchg
ret
add
add
add
jmp
cld
jae
ret
and
pop
insb
add
mov
add
clc
repnz
nop
cld
jae
add
popl
and
sahf
jno
mov
add
xor
mov
inc
add
int3
add
add
mov
mov
call
dec
xlat
inc
add
cmpsl
add
sbb
clc
repnz
nop
cld
jae
and
add
filds
filds
add
add
inc
clc
repnz
nop
cld
jae
add
add
add
add
mov
push
mov
xchg
ret
add
inc
flds
pushl
push
mov
nop
leave
jmp
add
mov
or
dec
cltd
cmpl
push
mov
nop
leave
jmp
in
scas
push
lods
add
push
mov
nop
leave
jmp
add
add
mov
ljmp
cld
jae
scas
add
add
mov
mov
xchg
ret
ret
mov
flds
insb
in
push
mov
add
xchg
add
scas
scas
lods
xor
fdivl
addl
clc
repnz
nop
cld
jae
test
push
insb
add
dec
movzwl
clc
repnz
nop
cld
jae
add
sbb
into
mov
jae
repnz
nop
cld
jae
sbb
add
mov
inc
lock
repnz
nop
cld
jae
add
adc
mov
clc
repnz
nop
cld
jae
add
and
push
mov
nop
cld
jae
hlt
and
add
add
add
test
push
mov
nop
leave
jmp
add
add
dec
xor
push
mov
nop
leave
jmp
add
inc
and
cmpsl
stos
mov
clc
repnz
nop
cld
jae
sub
addl
add
lods
push
clc
repnz
nop
cld
jae
add
pop
add
mov
pop
push
mov
xchg
ret
lods
add
add
in
nop
leave
jmp
ret
add
add
into
inc
xor
mov
popa
add
repnz
nop
cld
jae
nop
repnz
adc
inc
push
mov
xchg
ret
add
add
dec
mov
clc
repnz
nop
cld
jae
cld
sbb
add
add
cmp
mov
xchg
ret
and
loop
add
clc
repnz
nop
cld
jae
pop
and
pop
into
mov
add
jge
push
hlt
clc
repnz
nop
cld
jae
pop
add
and
repnz
push
mov
nop
leave
jmp
lods
jae
add
add
int
dec
push
clc
repnz
nop
cld
jae
in
dec
add
add
mov
clc
repnz
nop
cld
jae
add
dec
je
push
mov
nop
leave
jmp
xchg
add
mov
clc
repnz
nop
cld
jae
and
inc
pop
scas
inc
shl
add
jmp
fldenv
lods
iret
add
mov
add
push
mov
nop
leave
jmp
add
add
add
mov
mov
xchg
ret
add
add
sbbl
mov
repnz
nop
cld
jae
add
add
dec
add
mov
xchg
ret
sub
nop
mov
pop
add
xlat
sbb
jne
clc
repnz
nop
cld
jae
jo
sahf
pop
add
sub
inc
and
mov
nop
leave
jmp
or
insb
add
add
jp
push
mov
nop
leave
jmp
add
scas
mov
shll
mov
inc
and
clc
repnz
nop
cld
jae
add
and
ss
add
clc
repnz
nop
cld
jae
dec
iret
dec
add
pop
pop
inc
clc
repnz
nop
cld
jae
leave
in
add
jnp
lret
clc
repnz
nop
cld
jae
add
dec
testb
mov
repnz
nop
cld
jae
add
sti
add
add
jbe
clc
repnz
nop
cld
jae
mov
filds
add
push
mov
xchg
ret
add
dec
scas
add
ja
add
push
mov
xchg
ret
nop
leave
loop
xchg
add
repnz
nop
cld
jae
pop
add
add
or
sar
repnz
nop
cld
jae
add
add
ret
mov
addl
popa
add
mov
xchg
ret
add
add
and
cmp
push
mov
nop
leave
jmp
add
dec
add
push
fadds
jne
clc
repnz
nop
cld
jae
add
mov
pushf
add
clc
repnz
nop
cld
jae
add
inc
icebp
mov
add
add
clc
repnz
nop
cld
jae
add
add
jnp
subl
jae
cld
repnz
xlat
sbb
nop
nop
cld
jae
dec
mov
out
add
je
clc
repnz
nop
cld
jae
add
and
mov
xchg
ret
add
repnz
scas
sub
in
push
cmp
mov
mov
icebp
pop
mov
clc
repnz
nop
cld
jae
add
add
push
mov
xchg
ret
add
inc
cld
add
je
push
mov
nop
leave
jmp
add
push
clc
repnz
nop
cld
jae
pop
lods
add
add
add
jle
or
in
nop
leave
jmp
mov
pop
cmpsl
popl
and
and
mov
add
clc
repnz
nop
cld
jae
push
mov
ja
mov
clc
repnz
nop
cld
jae
mulb
add
push
clc
repnz
nop
cld
jae
mov
mov
jmp
add
mov
add
testb
nop
add
call
in
nop
leave
jmp
add
jge
clc
repnz
nop
cld
jae
test
dec
jnp
popa
add
mov
nop
leave
jmp
jae
flds
mov
add
or
push
mov
nop
leave
jmp
add
in
out
add
and
push
mov
add
mov
sbb
jns
inc
lods
cmpsb
testb
mov
push
mov
xchg
ret
scas
push
dec
mov
and
mov
xchg
ret
mov
inc
jo
push
clc
clc
repnz
nop
cld
jae
scas
and
hlt
lods
add
cmp
cltd
out
clc
repnz
nop
cld
jae
mov
scas
inc
cli
es
push
mov
nop
leave
jmp
in
dec
add
clc
repnz
nop
cld
jae
or
add
pop
je
clc
repnz
nop
cld
jae
leave
testb
push
push
mov
xchg
ret
add
out
dec
cmpl
add
clc
repnz
nop
cld
jae
repnz
fisttpl
mov
push
push
mov
nop
leave
jmp
add
fstpl
dec
push
popa
or
xor
add
push
mov
nop
leave
jmp
mov
pop
inc
mov
mov
push
mov
xchg
ret
nop
add
add
and
dec
add
mov
xchg
ret
inc
add
xchg
add
sbb
in
out
out
add
xor
xor
add
jnp
out
dec
push
mov
xchg
ret
add
flds
adc
sti
push
and
in
add
add
test
add
scas
lret
and
clc
repnz
nop
cld
jae
and
add
jnp
dec
adc
mov
nop
leave
jmp
add
add
and
jmp
incl
mulb
add
hlt
add
dec
add
sbb
cmp
ret
leave
and
add
nop
push
clc
repnz
nop
cld
jae
push
sti
pop
pop
pop
add
xchg
mov
repnz
nop
cld
jae
add
add
test
mov
clc
repnz
nop
cld
jae
and
add
xor
nop
nop
cld
jae
pop
into
push
add
push
push
mov
xchg
ret
in
add
add
jg
clc
repnz
nop
cld
jae
scas
add
loopne
mov
xor
nop
cld
jae
jae
fstps
add
and
in
add
clc
repnz
nop
cld
jae
add
and
adc
jae
inc
push
push
push
mov
xchg
ret
sahf
scas
fbld
xchg
mov
clc
repnz
nop
cld
jae
mov
add
add
lea
clc
repnz
nop
cld
jae
add
add
cmp
repnz
nop
cld
jae
add
pop
add
and
cmp
repnz
nop
cld
jae
loop
add
add
mov
clc
repnz
nop
cld
jae
mov
hlt
add
mov
nop
nop
cld
jae
hlt
in
negb
dec
inc
repnz
sahf
pop
push
mov
nop
leave
jmp
push
dec
add
add
ret
bound
mov
xor
repnz
nop
cld
jae
sti
add
hlt
pop
mov
push
mov
nop
leave
jmp
add
add
in
add
mov
lcall
leave
jmp
add
add
add
add
jb,pt
push
mov
nop
leave
jmp
cmpsl
add
add
push
add
nop
nop
cld
jae
add
add
add
into
add
in
xor
clc
repnz
nop
cld
jae
add
fldl
add
xor
add
clc
repnz
nop
cld
jae
sbb
fisubrl
repz
add
dec
scas
add
add
call
in
nop
leave
jmp
add
pop
mov
and
mov
xor
clc
repnz
nop
cld
jae
into
pop
xchg
mov
insb
sti
cmp
repnz
nop
cld
jae
add
add
mov
add
sub
clc
repnz
nop
cld
jae
add
sti
insb
call
clc
repnz
nop
cld
jae
inc
add
jle
test
repnz
nop
cld
jae
add
dec
cmc
xchg
mov
clc
repnz
nop
cld
jae
add
inc
add
repnz
in
inc
pushf
cli
fidivrl
cmpsl
add
xor
add
stos
mov
clc
repnz
nop
cld
jae
ret
mov
add
nop
nop
cld
jae
push
add
lret
push
mov
nop
leave
jmp
add
and
inc
dec
pop
jns
movsb
push
xor
mov
jne
clc
repnz
nop
cld
jae
fldenv
or
clc
repnz
nop
cld
jae
cmpsl
add
sub
incl
add
sti
sti
fldl
add
add
push
add
mov
xchg
call
in
nop
leave
jmp
add
and
mov
nop
nop
cld
jae
add
add
add
add
dec
push
clc
repnz
nop
cld
jae
hlt
and
add
mov
jb
mov
nop
leave
jmp
add
add
mov
loope
add
pop
mov
and
mov
dec
outsl
popa
fs
repnz
nop
cld
jae
dec
add
and
mov
nop
leave
jmp
add
mov
xchg
push
dec
add
and
add
push
add
push
add
add
clc
repnz
nop
cld
jae
ret
and
add
jmp
clc
repnz
nop
cld
jae
ret
add
push
fdivr
incl
inc
add
add
add
and
fiaddl
je
sub
sahf
in
add
xorl
dec
or
add
add
add
add
add
sbb
mov
add
repnz
nop
cld
jae
imul
into
testb
add
stc
pop
push
mov
xchg
ret
add
sub
mov
fistps
or
clc
repnz
nop
cld
jae
add
repnz
nop
cld
jae
push
add
jns
dec
out
stos
push
mov
xchg
ret
mov
add
add
in
xor
add
clc
clc
repnz
nop
cld
jae
add
sahf
xchg
xor
addr16
clc
repnz
nop
cld
jae
add
add
loop
fldl
mov
pop
push
mov
xchg
ret
sbb
in
jae
and
mov
clc
repnz
nop
cld
jae
add
add
add
repnz
nop
cld
jae
dec
add
add
mov
mov
nop
leave
jmp
add
add
and
mov
add
in
nop
leave
jmp
nop
cld
add
add
add
and
repnz
nop
cld
jae
insb
push
dec
dec
and
adc
mov
push
mov
xchg
ret
mov
inc
adc
add
add
clc
repnz
nop
cld
jae
add
pop
in
lds
ds
push
mov
xchg
ret
push
add
adc
mov
or
inc
add
push
add
add
add
repnz
nop
cld
jae
sahf
leave
add
iret
add
int3
je
clc
repnz
nop
cld
jae
inc
sbb
push
outsb
add
clc
repnz
nop
cld
jae
add
outsb
xor
clc
repnz
nop
cld
jae
mov
lods
out
xor
push
mov
xchg
ret
add
pop
jns
sahf
add
mov
clc
repnz
nop
cld
jae
and
add
or
mov
xchg
ret
add
dec
dec
scas
add
and
clc
repnz
nop
cld
jae
add
sub
mov
xchg
ret
nop
add
mov
add
xchg
mov
adc
repnz
nop
cld
jae
add
add
in
cli
and
add
inc
lret
pop
adc
adc
aas
add
addb
imul
nop
leave
jmp
add
test
and
aam
mov
pop
add
clc
repnz
nop
cld
jae
add
add
es
xor
mov
clc
repnz
nop
cld
jae
add
add
add
clc
repnz
nop
cld
jae
lods
add
push
repz
add
add
add
add
mov
fs
mov
nop
leave
jmp
add
add
dec
push
clc
repnz
nop
cld
jae
mov
sbb
jns
xchg
out
mov
clc
repnz
nop
cld
jae
mov
add
clc
repnz
nop
cld
jae
add
push
add
jnp
mov
jb
add
lahf
push
rcr
push
mov
mov
mov
mov
clc
repnz
nop
cld
jae
mov
xchg
loop
cld
add
add
in
nop
leave
jmp
cmpsl
add
add
lahf
div
clc
repnz
nop
cld
jae
inc
mov
add
nop
nop
cld
jae
mov
insb
ret
into
addb
mov
nop
cld
jae
mov
add
add
add
jmp
je
repnz
nop
cld
jae
adc
sbb
mov
nop
nop
cld
jae
add
add
add
add
jae
push
mov
xchg
ret
nop
push
sbb
add
mov
repnz
nop
cld
jae
or
add
into
add
jo
hlt
pop
inc
jmp
mov
add
in
nop
leave
jmp
add
jnp
mov
clc
repnz
nop
cld
jae
sti
add
pop
add
clc
repnz
nop
cld
jae
inc
add
les
jmp
dec
jo
mov
mov
clc
repnz
nop
cld
jae
fsts
and
clc
repnz
nop
cld
jae
add
push
add
dec
push
mov
sbb
add
adc
cmp
cmp
test
in
clc
repnz
nop
cld
jae
fisttpll
lret
clc
repnz
nop
cld
jae
add
mov
mov
mov
cmp
ret
add
add
dec
dec
add
leave
xor
clc
repnz
nop
cld
jae
add
add
into
add
push
clc
repnz
nop
cld
jae
add
add
pop
cmp
nop
nop
cld
jae
fldenv
test
inc
push
in
nop
leave
jmp
and
add
scas
add
jae
push
mov
add
ret
lahf
lea
ret
add
xor
mov
inc
jmp
imul
xchg
push
jge
sbb
add
cmpsb
jns
leave
cmp
jae
lods
sahf
les
jne
addb
mull
imul
add
neg
and
cmp
add
test
add
clc
add
fldcw
scas
inc
add
or
jge
rcll
adc
xor
mov
mov
jns
aam
add
jb
dec
push
mov
aas
fstpt
ret
negb
int3
jmp
lea
enter
call
cmpsl
stc
mov
push
je
bound
mov
add
pop
jle
out
sbb
dec
cmp
jmp
sbb
clc
gs
add
cmp
ret
aas
loop
mov
cmpl
adc
lcall
xor
mov
imul
test
das
gs
adc
mov
mov
mov
paddd
insl
ret
pop
mov
dec
sub
jmp
iret
in
add
aad
nop
add
fisubrs
leave
mov
into
cmpsl
cmpsb
mov
mov
rolb
mov
add
pop
pop
xor
mov
cmp
stos
out
jge
stos
and
pop
add
lret
adc
xor
mov
xchg
mov
mov
fsub
mov
rorl
cmp
mov
push
adc
jmp
inc
sbb
jmp
pop
cs
sub
xchg
adc
mov
mov
sahf
stos
in
notb
add
por
cli
ljmp
test
inc
pop
inc
push
cld
imulb
aad
xchg
sub
in
into
sub
cmpsb
mul
shll
lods
jns
add
mov
push
fdivrl
adcl
ret
xor
mov
lcall
js
xchg
mov
lock
sub
jo
mov
push
push
gs
cld
test
sti
rolb
mov
pop
clc
int
call
adc
mov
push
cmpsb
fcomps
adc
mov
in
jo
mov
add
push
xchg
inc
fcmovu
enter
fs
xchg
sbb
les
add
mov
push
jg
cltd
push
add
ja
pop
iret
fisubs
addr16
lock
adc
mov
jp
sahf
es
xor
or
mov
js
rolb
mov
mov
into
jo
mov
mov
mov
cltd
sub
add
mov
mov
sbb
xchg
out
fstpl
aas
xchg
mov
push
add
mov
add
lret
pop
inc
imul
fdivr
mov
lods
cmc
outsb
ljmp
mov
add
mov
dec
dec
push
int
int
addb
scas
scas
sbb
mov
sahf
loop
mov
cmp
add
mov
xor
xor
mov
push
addb
mov
inc
aaa
fmul
mov
sub
sbb
sub
add
sbb
jb
mov
inc
mov
fwait
xor
push
out
sub
mov
stos
xchg
add
scas
add
mov
rolb
mov
add
outsl
xchg
jg
lahf
xor
add
mov
mov
sahf
addb
sbb
leave
xor
mov
mov
push
dec
popa
test
mov
pop
addb
inc
mov
and
xor
and
mov
pusha
add
test
xchg
addb
lcall
stc
or
add
int3
out
lea
add
out
jb
mov
mov
rolb
mov
mov
sub
pop
fidivl
add
pop
mov
mov
div
add
mov
jmp
call
fcompl
pop
or
add
mov
push
popf
out
pushl
xor
dec
cmp
fstpl
mov
or
into
and
int
movb
xchg
or
mov
mov
cmpsl
in
mulb
psubb
in
xchg
add
sub
sbb
andl
out
bound
mov
add
gs
loop
mov
and
add
lods
lods
sbbl
lock
daa
xchg
mov
adc
xchg
cmp
loop
mov
fisttpl
bound
mov
mov
outsb
in
loopne
mov
pop
push
push
add
xor
add
scas
push
add
repz
rolb
or
js
xrelease
mov
inc
dec
cmp
stc
or
andl
push
popf
pop
cmp
int3
mov
fadd
add
in
js
and
mov
mov
or
movsb
lcall
nop
add
or
mov
mov
cmp
inc
add
test
lret
fnstenv
out
add
int
pop
mov
push
in
shll
fnstcw
mov
sub
mov
mov
mov
fwait
rdpmc
cwtl
hlt
sahf
pop
fcmovnb
add
mov
in
dec
jp
in
lea
mov
pusha
add
fildl
add
sub
add
dec
js
adc
cli
dec
in
push
add
rolb
mov
add
add
add
mov
mov
jg
mov
add
mov
flds
sub
push
mov
std
or
push
and
jnp
mov
mov
pop
bswap
adc
mov
popl
or
rolb
mov
dec
repz
popf
inc
add
add
push
fsubl
mov
stos
pop
adc
sbb
mov
lret
xchg
cld
jecxz
rolb
mov
mov
mov
add
mov
sti
ss
std
mov
sbb
mov
aad
adc
jp
sub
or
rolb
mov
stos
adc
mov
or
fs
out
bound
mov
inc
lds
loopne
mov
push
xchg
scas
outsl
aaa
mov
pushf
das
mov
mov
loopne
mov
rcrl
mov
xchg
icebp
lock
aas
sub
bound
mov
add
inc
add
push
push
or
repnz
or
cmp
fiaddl
sbb
sbb
out
addb
les
sbb
outsb
in
mov
xchg
mov
cmp
sub
into
inc
add
add
jecxz
or
add
xor
mov
popa
fcoms
ja
or
jnp
scas
in
cmc
sbb
je
fcomps
mov
ds
xchg
rcrl
inc
xor
mov
clc
mov
loop
mov
and
jg
push
push
pop
in
inc
mov
test
mov
or
inc
setns
lret
adc
sar
jg
add
mov
and
test
add
movsl
xor
mov
push
popa
sahf
add
enter
in
mov
push
paddsb
inc
ret
mov
movsl
adc
mov
mov
jmp
pop
ret
jp
aas
or
dec
sbb
fldt
and
add
into
pop
cmc
adc
mov
lcall
aad
push
std
mov
xor
mov
fs
inc
bound
mov
or
cwtl
sti
into
sub
add
push
adc
mov
mov
push
call
add
lds
out
insl
push
pop
sbb
pop
jns
sbb
jge
in
dec
cmpsb
in
mov
push
test
cmp
je
add
add
add
es
mov
sub
fldt
add
ljmp
rolb
push
mov
cmovns
add
add
fdivrs
cwtl
xchg
pop
pop
dec
lea
mov
add
fs
push
xor
mov
add
mov
adc
dec
jns
dec
aas
out
cmp
and
pop
mov
mov
mov
pushf
or
aaa
cli
or
add
adc
add
add
or
lcall
add
push
ja
and
mov
ffreep
add
mov
push
shrl
jge
rolb
mov
add
leave
adc
ja
cmpsb
test
xor
mov
sti
add
mov
mov
jle
inc
cwtl
cld
stc
push
fdivrp
scas
lods
mov
add
add
incb
adc
sub
jmp
sub
outsl
pop
xor
icebp
int3
push
test
push
divl
cwtl
lds
ret
repz
jl
addb
hlt
rolb
cli
dec
push
cmp
sbb
mov
inc
mov
add
add
push
subl
icebp
xor
push
stos
inc
add
adc
int
scas
rcll
mov
loop
mov
fstl
inc
or
dec
sbb
repz
sub
jno
add
add
push
sar
inc
add
jns
sbb
lcall
jge
add
mov
out
push
out
pop
in
inc
lods
lsl
xchg
popa
push
xchg
loopne
mov
clc
incl
jbe
lea
ss
inc
sub
inc
lcall
add
dec
aas
fisubs
push
add
pop
test
cltd
ret
ds
leave
inc
add
dec
inc
add
mov
add
out
out
iret
mov
xor
sarl
mov
xor
sub
xor
jbe
and
mov
mov
popf
js
cmc
adc
mov
push
pop
cmc
mov
cltd
ret
sub
add
add
inc
jae
add
pop
bound
mov
add
popl
mov
and
mov
mov
sbb
xchg
add
lods
dec
decl
jle
mov
mov
xor
mov
lcall
enter
in
sahf
inc
add
mov
lods
xlat
enter
mov
or
mov
xor
mov
add
addb
xchg
pop
pop
pop
test
push
ljmp
cmpsl
push
jge
push
mov
bound
mov
in
ret
lods
xchg
mov
icebp
mov
dec
jne
add
mov
pop
faddp
add
fistpl
getsec
add
lret
xor
outsb
pop
xchg
sub
dec
add
fnsave
pop
cmp
inc
add
das
or
add
mov
add
data16
ljmp
mov
xchg
ret
mov
add
cmpsb
dec
enter
add
mov
add
mov
mov
add
dec
loope
push
insl
and
mov
add
adc
test
inc
int3
call
add
sysexit
adc
add
xor
sbb
push
push
mov
mov
push
ret
sahf
sub
mov
add
sub
cmp
mov
add
cltd
mov
fildl
add
xchg
popa
and
cwtl
cmpl
mov
or
daa
cmp
xchg
cld
mov
stos
and
fdivrl
jl
mov
mov
lds
jo
mov
lahf
lea
add
mov
roll
mov
sbb
add
inc
add
and
mov
jb
mov
xor
mov
jne
leave
enter
lret
mov
pop
repnz
pop
into
jns
std
cmp
add
ret
imul
jbe
add
add
addl
mov
xchg
push
add
in
pop
fmuls
xor
iret
cmp
outsb
push
or
cmp
mov
jb
mov
fisubl
mov
es
add
add
mov
jne
and
push
fisttps
loope
or
lahf
push
push
leave
add
mov
std
lahf
out
cmp
cmp
pop
lea
pop
jl
call
xor
call
adc
mov
mov
stc
jmp
or
add
xor
lea
addb
cld
call
int3
les
mov
mov
mov
out
icebp
dec
mov
loop
mov
add
push
lods
out
mov
push
roll
mov
cmp
lret
cs
xor
xchg
ds
sub
shl
inc
ficoml
pusha
add
movsb
outsb
adc
sbb
pop
fs
add
add
mov
mov
movsl
xchg
jns
push
outsb
push
inc
add
jo,pt
mov
das
rolb
mov
pusha
add
std
mov
cli
sub
negl
add
fwait
repnz
add
mov
push
insl
inc
cmc
jae
lret
push
push
fsubl
lret
mov
cltd
int3
jae
mov
push
outsb
mov
sbb
pop
or
mov
aad
pop
mov
cli
arpl
add
xchg
push
sbb
fdivs
xor
hlt
mov
or
dec
mov
add
popf
rolb
or
stc
pop
dec
aaa
fildl
call
and
mov
mov
rolb
stos
add
mov
sbb
inc
push
int3
jmp
leave
lret
pop
fnstcw
xchg
add
dec
arpl
pop
in
xlat
sarl
imul
jbe
dec
and
fidivrl
add
add
test
mov
cmpsb
leave
mov
mov
dec
sti
or
mov
loop
mov
leave
pop
mov
mov
mov
jbe
sbb
mov
push
out
inc
add
movsb
mov
mov
add
movsl
repnz
push
ret
mov
push
leave
fstpt
pop
ss
sub
leave
or
mov
int3
and
addb
jg
lahf
sbb
cmpsl
xor
lock
rolb
mov
mov
mov
ss
into
iret
popf
mov
add
rolb
cwtl
scas
dec
mov
dec
bound
mov
mov
jbe
xchg
shl
pop
pushf
repnz
mov
scas
jl
mov
insb
clc
jbe
loop
mov
scas
mov
mov
mov
sti
jle
rolb
mov
xchg
adc
add
mov
add
push
std
lret
xor
int3
or
xor
and
pushf
xchg
add
mov
loope
popa
loope
lods
in
cmpsb
cmc
scas
clc
insb
stos
ret
xlat
cmp
mov
or
pop
arpl
and
iret
lods
or
and
lcall
add
mov
mov
sub
add
xor
mov
add
fs
push
add
loop
mov
mov
pop
inc
aas
push
sub
jl
dec
cmp
xchg
cmc
or
cli
xlat
sbb
adc
mov
xlat
cmpsb
sub
push
pop
cwtl
mov
add
rolb
mov
inc
and
mov
cmp
add
mov
aam
cmpl
cmp
mov
add
cmp
mov
pop
loope
mov
mov
adcl
jae
add
es
xchg
mov
cltd
cmp
int
mov
adc
mov
add
cmpsb
insb
jo
mov
add
add
cwtl
insb
test
addb
xchg
mov
push
add
rolb
sbb
test
nop
add
mov
and
add
mov
sahf
jnp
add
xor
mov
mov
cli
and
mov
addb
sahf
or
mov
aad
mov
addb
in
mov
mov
xor
mov
xchg
xor
mov
push
add
out
sti
or
jnp
or
sbb
mov
add
add
mov
neg
mov
mov
mov
lret
or
sbb
push
add
jmp
test
xor
call
mov
push
jb
mov
add
fstpl
fs
pop
pop
xchg
lret
test
add
sub
mov
add
jecxz
add
inc
xchg
in
ret
in
mov
mov
fiadds
jg
xor
lea
sarl
sahf
add
mov
push
jnp
pop
xchg
cwtl
mov
add
push
out
ret
adcl
mov
adc
mov
popa
xor
mov
lahf
push
add
mov
sub
jo
mov
adc
mov
mov
clc
mov
sub
fstpt
in
sbb
add
mov
mov
mov
enter
add
mov
add
jno
pop
jb
mov
jns
pop
popa
stc
cmpxchg
lods
jmp
notl
lret
scas
pop
out
pop
dec
jg
in
pop
push
add
fildl
add
in
loope
push
add
mov
std
sub
push
add
add
add
jne
mov
loopne
mov
mov
mov
add
adc
push
ds
imul
inc
mov
mov
mov
or
xor
mov
fiaddl
add
jne
mov
addb
ret
aaa
pop
clc
test
add
add
mov
sbb
mov
add
ja
and
push
add
jp
dec
aas
daa
sti
lahf
movsb
mov
mov
lods
ss
pop
sub
lods
or
imul
push
push
aaa
add
imul
lahf
in
out
out
insl
outsl
xchg
stc
ss
pop
js
inc
add
or
and
daa
pop
cmp
xchg
add
or
insb
pop
jl
addb
repz
push
and
repnz
adc
cmp
int
sbb
stc
push
aam
in
cli
sub
mov
leave
sbb
add
ficomps
and
fcmovu
sub
dec
and
xlat
adc
sbb
push
lahf
and
mov
scas
inc
push
xchg
call
aas
addb
inc
stc
mov
addb
ret
sub
aad
sbb
push
ss
cli
ret
push
jno
movsb
js
sbb
ljmp
mov
sbb
loope
mov
and
cmp
mov
cmp
outsl
or
sbb
add
xor
insb
push
and
jae
add
cmp
jge
cmp
sarl
add
fsubrs
inc
out
mov
sub
cmpsb
sub
mov
mov
push
pop
mov
testl
mov
cwtl
adc
in
addb
mov
xor
mov
jae
lret
pushf
inc
fsubs
fldenv
inc
cli
call
bound
mov
jae
mov
sahf
adc
mov
xor
mov
mov
add
cmpsl
mov
mov
xor
into
jae
dec
ret
ss
push
add
and
mov
lcall
into
mov
movsl
mov
movsb
fsubs
enter
mov
add
mov
xchg
push
clc
inc
dec
jo
mov
jecxz
mov
add
or
add
xchg
ja
add
addl
add
enter
sub
add
inc
add
mov
dec
xchg
cli
stos
xlat
std
rolb
mov
test
aaa
iret
mov
add
pop
xor
dec
jae
in
sahf
adc
rolb
test
repnz
mov
and
mov
leave
push
add
pop
data16
icebp
inc
and
das
gs
pusha
add
mov
mov
mov
mov
xor
mov
sub
xor
inc
add
xchg
add
mov
adc
xchg
add
sti
adc
cmp
jp
dec
int3
popa
icebp
inc
add
xor
int
outsb
sub
pusha
add
push
add
mov
mov
push
add
push
add
sub
add
xchg
add
jbe
jns
mov
and
mov
in
rolb
mov
add
bound
mov
and
jg
mov
mov
pushf
addb
movsb
addb
and
pop
pop
fstl
mov
pop
sub
add
loopne
mov
mov
add
push
cmp
ss
inc
add
arpl
palignr
pop
add
mov
mov
xor
mov
out
popa
sub
add
pusha
add
inc
cmp
dec
clc
lret
add
add
es
xor
add
push
pop
popf
xor
insl
mov
stc
pushf
lahf
add
mov
xchg
push
xchg
inc
push
aaa
out
jmp
stos
popf
call
and
outsb
pop
call
mov
mov
int
pop
adc
aam
cltd
or
bswap
pop
sbb
sti
aam
add
lret
shr
out
inc
jno
je
xor
loopne,pn
mov
popa
or
hlt
subl
add
push
add
dec
fdivrl
inc
cmc
xchg
mov
das
or
add
into
cmp
js
push
outsb
adc
cmpsb
jl
sub
mov
call
inc
fdivrl
xchg
jbe
add
mov
mov
lock
push
int3
in
lods
test
jb
mov
cmp
mov
addb
sbb
pushf
addb
call
cmpsl
jg
jno
mov
add
fwait
cmp
add
mov
mov
mov
inc
inc
sub
enter
sub
in
scas
jnp
add
sbb
mov
add
cli
jecxz
bound
mov
mov
xchg
aaa
mov
or
enter
mov
or
ficompl
nop
add
je
inc
cmpsb
xchg
push
add
lahf
jb
mov
lcall
mov
sub
stos
cmp
mov
dec
inc
add
inc
daa
cwtl
mov
mov
repz
roll
add
add
test
daa
enter
imul
addb
or
push
loopne
mov
movsb
cmp
or
mov
mov
test
xor
mov
push
add
add
mov
pushf
push
testb
adc
push
shl
add
add
pop
clc
aam
sarl
sbb
jo
mov
add
adc
mov
pop
cld
js
sahf
fisubrl
scas
popa
push
movsb
jnp
or
push
hlt
aad
addr16
jle
imul
ljmp
aad
daa
mov
cltd
add
stc
aas
sub
mov
add
popf
push
outsb
scas
cmp
stos
iret
bound
mov
sbb
jne
inc
lea
das
adc
mov
fdivrp
stos
lods
and
add
pusha
add
add
shr
sbb
cmp
fwait
pop
test
fwait
sbb
repnz
add
sbb
cltd
scas
call
int3
sahf
mov
cmp
es
pop
add
pusha
add
js
and
mov
rolb
mov
lret
push
add
pop
pop
inc
gs
pusha
add
cltd
sbb
pop
inc
pop
sbb
cmp
mov
mov
or
add
mov
pop
mov
adc
mov
imul
sbb
add
dec
mov
add
imul
fimuls
test
ja
xchg
mov
and
mov
leave
mov
popf
jecxz
jmp
insb
es
js
ljmp
add
pop
and
add
mov
inc
clc
adc
add
call
mov
jmp
lcall
push
xor
mov
imul
cmpsb
push
push
cmpsl
fdivs
add
cld
rolb
adc
popa
push
pop
ret
push
aaa
sub
adc
cltd
sbb
add
mov
add
test
xor
stos
fldt
jmp
add
call
leave
mov
mov
xor
dec
loope
add
xchg
push
add
jnp
sti
cmp
add
push
add
mov
mov
and
jl
outsb
sub
addr16
out
mov
rolb
mov
add
mov
dec
mov
ds
mov
add
js
inc
imull
sbb
testb
add
jnp
push
out
rolb
mov
pusha
add
xor
jge
add
mov
fisubrs
jecxz
jmp
add
je
inc
pop
ffree
repnz
pop
mov
mov
hlt
repnz
or
in
jg
xor
ja
mov
xchg
xor
mov
adc
les
mov
dec
outsb
es
daa
add
mov
addb
sti
mov
lods
imulb
cmc
addb
xchg
jecxz
lods
in
xor
pop
mov
popf
and
mov
add
sub
adc
daa
add
mov
lret
push
add
mov
add
mov
popf
jg
or
xor
outsb
data16
inc
add
add
mov
add
nop
add
sub
mov
add
adc
jbe
sti
cltd
das
mov
add
pop
out
addb
test
ud0
xor
and
mov
repnz
add
and
xlat
divb
pop
lret
mov
addr16
mov
inc
fdivrl
jo
mov
hlt
aaa
or
lahf
mov
sub
call
inc
aas
addb
repz
loop
mov
sub
add
mov
mov
cmp
mov
add
mov
jbe
mov
mov
mov
fisttpll
aam
and
lods
and
mov
inc
add
movsb
or
fidivl
in
sbb
out
pop
adc
mov
mov
shll
add
movsb
jle
xchg
add
add
add
pop
nop
add
addr16
jno
dec
inc
add
push
pop
add
rorl
and
fwait
pop
sti
mov
mov
pop
sbb
add
add
or
add
push
lock
pop
pop
add
sbb
push
add
jns
adc
dec
out
add
dec
pop
fiaddl
mov
add
adc
xchg
aaa
mov
loope
rolb
mov
mov
inc
add
fcomps
lahf
outsl
adc
fistps
insb
stc
cmpsb
lret
cwtl
push
mov
test
ljmp
xchg
mov
add
mov
rolb
mov
or
jp
mov
dec
insl
xlat
push
xor
jg
add
in
sahf
jl
mov
int3
aaa
dec
jo
mov
out
stc
call
ret
cwtl
test
xchg
dec
or
call
push
daa
hlt
leave
cmp
add
in
ret
or
mov
cmp
hlt
or
add
sub
pusha
add
ja
jae
inc
popf
or
add
add
mov
sub
sub
push
js
jge
inc
xchg
mov
pusha
add
outsb
adc
mov
add
pushf
dec
push
mov
adc
sbb
rolb
mov
jo
mov
rolb
lret
inc
in
fsts
cli
into
inc
aam
addb
insl
movsb
in
mov
ficoml
or
cwtl
pop
xor
and
xchg
mov
lret
ret
or
repnz
sub
mov
fwait
mov
stos
sub
cmp
loop
mov
out
add
popf
pop
or
add
mov
aaa
push
push
or
sbb
add
lea
inc
mov
mov
pop
pop
stos
mov
push
pusha
add
add
pop
scas
and
dec
jnp
mov
hlt
rolb
test
inc
je
add
icebp
sbb
mov
testb
jo
mov
xchg
add
aad
mov
and
add
mov
ret
mov
push
jb
mov
xchg
mov
add
add
sub
cmp
stc
xchg
mov
jnp
add
mov
icebp
loope
xchg
adc
mov
add
mov
sbb
add
fcoms
mov
je
jecxz
bound
mov
xchg
negb
or
mov
add
insb
mov
dec
fs
movl
cmpsb
mov
adc
mov
pop
cli
movsb
clc
inc
add
pop
sbb
sbb
mov
pop
xchg
pop
jg
add
jp
andl
add
push
push
mov
fs
movsb
popf
dec
bound
mov
add
leave
aad
pop
and
das
mov
cltd
es
pop
cmp
and
add
cwtl
xchg
test
sahf
sti
int
jns
add
out
call
sub
jl
fdivl
add
popf
xchg
or
pop
repz
mov
mov
sti
sub
add
dec
movsl
std
mov
add
test
movsl
outsb
cmp
inc
rorl
sub
roll
test
inc
addr16
xor
or
loope
jp
xchg
out
add
mov
stos
add
cmp
cs
mov
mov
loope
mov
fisubrs
mov
dec
or
add
xlat
rcrl
push
daa
mov
lret
test
pushf
dec
arpl
mov
or
adc
mov
movsl
mov
lahf
cmp
icebp
mov
jmp
sti
dec
loopne
mov
imul
and
mov
add
mov
pop
leave
inc
mov
adc
xchg
pop
push
xor
mov
and
xor
mov
fists
mov
add
pop
cmp
sub
pop
cmc
test
pop
loopne
mov
inc
scas
int3
aaa
inc
cwtl
add
add
add
mov
jmp
or
add
out
aaa
lret
lret
clc
repz
inc
add
cwtl
lea
inc
add
pop
xchg
ret
rolb
mov
jmp
mov
mov
and
or
mov
push
mov
pushf
lret
mov
pop
mov
mov
mov
mov
imul
jmp
nop
add
add
pop
add
mov
cld
xchg
add
add
add
ret
sbb
movd
adc
mov
aam
mov
adc
xchg
add
lods
sub
dec
or
add
add
inc
add
daa
jo
mov
rolb
mov
ljmp
fcmovnb
addr16
stc
jno
mov
les
out
aaa
in
loop
mov
add
or
dec
cmpsl
das
stos
sarl
pop
test
icebp
shll
fwait
neg
outsl
mov
mov
lock
add
repz
mov
jbe
xchg
fcomps
lret
int
fdivs
add
mov
jnp
dec
jmp
add
mov
mulb
add
jae
mov
loopne
mov
push
gs
mov
dec
fcompl
push
adc
xor
mov
pusha
add
jb
mov
mov
ds
jp
add
sahf
dec
mov
mov
add
mov
mov
mov
fcmovnu
ret
adc
pop
dec
out
stc
mov
mov
mov
loopne
mov
les
and
sub
mov
ds
push
pop
lds
cwtl
fistl
or
jle
ljmp
xchg
add
add
frstor
mov
addb
stos
rolb
mov
das
imull
daa
pop
test
insl
sub
call
je
scas
das
scas
xchg
ljmp
inc
dec
shll
mov
stos
pop
push
ja
mov
jmp
mov
in
lcall
mov
jns
add
add
mov
add
pop
mov
leave
mov
add
mov
and
mov
mov
add
xchg
sbb
mov
inc
add
bound
mov
inc
add
into
mov
mov
dec
push
add
pushf
pop
mov
aas
call
mov
in
dec
lods
mov
sahf
enter
add
sbb
data16
test
arpl
jb
mov
jae,pt
push
addb
int
lods
js
xorl
mov
jmp
testl
cmp
scas
xor
mov
add
lret
inc
and
sub
cmpsl
push
rolb
mov
add
xchg
add
add
ss
or
add
xchg
dec
outsb
mov
add
icebp
ss
cmp
mov
sbb
cmpsb
xor
mov
cmp
adc
sub
mov
stos
xor
add
or
mov
dec
xor
mov
sbb
jns
add
mov
xchg
repz
add
mov
push
out
imul
or
mov
mov
xchg
rolb
add
mov
rolb
inc
add
inc
dec
pushf
mov
mov
and
mov
outsl
or
jbe
mov
call
add
mov
cmp
in
std
popa
addb
int
add
mov
repz
add
add
aaa
lret
push
xchg
jbe
jb
mov
daa
add
repz
addb
scas
jg
adc
or
repz
das
repnz
add
mov
fiaddl
incb
add
mov
xchg
inc
jne
faddl
add
add
add
jmp
out
xchg
lods
pop
adc
mov
mov
cli
rolb
mov
mov
add
sahf
xlat
sub
inc
into
mov
in
push
cmp
or
es
mov
mov
add
stos
popa
xor
inc
ds
in
pop
cmp
call
mov
add
push
or
add
cmp
mov
inc
and
jnp
xlat
xor
mov
cltd
aad
mov
or
add
dec
aaa
test
fidivrs
es
in
cmp
inc
test
add
add
push
xchg
lock
fists
add
mov
xchg
xor
addb
mov
leave
ret
sub
xor
jle
fcmovu
mov
test
mov
mov
dec
rcl
add
add
or
sub
push
mov
mov
mov
add
roll
adc
cltd
pop
cwtl
mov
cmp
jmp
add
push
std
lcall
stos
jl
add
lret
push
mov
jns
fiaddl
push
iret
notl
out
popa
fistpl
dec
cld
iret
lods
mov
sub
xor
mov
movl
out
cmp
mov
mov
or
add
mov
xchg
sub
jno
mov
mov
in
and
cmp
aam
dec
iret
gs
pop
fwait
cmp
push
out
mov
jp
add
bound
mov
jb
mov
lock
pop
or
or
mov
mov
mov
test
add
add
sbb
in
mulb
adc
insl
lods
stos
stos
mov
add
int
int3
out
fdivrs
add
add
pop
mov
or
sub
and
add
js
push
popa
dec
xor
add
mov
push
dec
out
or
add
or
pop
mov
pop
and
mov
addb
xor
pop
pushf
adc
jo
mov
aad
push
jae
jns
arpl
add
mov
mov
adc
mov
add
movsb
sbb
add
mov
inc
lret
dec
in
cld
xchg
dec
xchg
lock
add
enter
push
add
cmp
int3
sbb
addb
mov
push
jae
insb
out
aas
fcompl
mov
add
add
repz
or
adc
lahf
add
cltd
or
mov
insb
stos
iret
mov
mov
loopne
mov
sahf
sti
das
cltd
dec
insb
scas
jbe
cmp
and
in
pop
sbb
sti
movsb
adc
sub
ss
adc
or
add
addb
and
jno
sbb
inc
ja
adc
adc
or
sub
or
add
lods
imul
push
mov
pop
stos
mov
add
clc
mov
add
add
jmp
in
leave
nop
add
jne
add
shrl
scas
bound
mov
add
pop
stos
scas
mov
push
mov
xchg
cmc
rcrl
subl
cmpl
mov
add
rolb
nop
add
add
fs
test
jg
scas
mov
int3
inc
fidivl
mov
lock
cltd
pop
das
jae
sbb
mov
mov
pusha
add
cld
xor
mov
in
movsb
fwait
cmp
out
hlt
add
mov
je
dec
xchg
or
pop
or
add
ret
pop
mov
jp
jge
aam
test
mov
push
bound
mov
add
add
add
mov
mov
add
mov
cmp
pop
ds
lock
mov
mov
lock
dec
aam
add
and
push
test
sbb
dec
mov
xchg
pop
push
adc
mov
and
mov
out
jmp
add
mov
mov
fmull
adc
adc
add
add
mov
shll
pop
add
mov
xor
sarl
mov
mov
sbb
mov
mov
leave
jg
ret
inc
mov
fistpll
add
arpl
mov
add
lds
lret
aad
jle
pushf
sahf
pusha
add
lcall
andl
sbbl
in
repz
outsl
inc
add
lods
xchg
int
or
sbb
test
leave
mov
pop
jge
das
inc
add
add
not
add
movsb
or
call
pop
stos
outsl
leave
scas
adc
jbe
mov
cld
loope
add
add
mov
add
das
mov
add
add
cld
aam
test
mov
dec
and
fsts
mov
adc
push
andl
mov
lods
sti
jle
xor
sbb
pop
lret
mov
xor
mov
mov
add
add
pushf
dec
das
jp
adc
pop
in
aam
pop
enter
lds
add
pop
popa
into
pusha
add
decl
jae
out
cwtl
add
mov
add
lcall
shrl
jo
mov
scas
sub
mov
inc
add
cli
lods
jge
pop
dec
loopne
mov
sub
jns
add
popf
jl
ss
add
mov
add
fistl
sub
imul
or
adc
add
ficompl
insb
shll
mov
add
sub
adc
jb
mov
mov
pop
jne
int3
cli
lea
add
add
test
addb
and
mov
pop
jb
mov
xor
mov
mov
std
inc
add
insb
sbb
sub
je
ljmp
lahf
jnp
mov
adc
mov
jmp
add
mov
add
add
push
jecxz
dec
jle
loopne
mov
clc
inc
data16
jle
sbb
mov
jp
add
dec
cltd
add
mov
xor
mov
shll
mov
inc
je
ret
ds
out
sub
pop
outsb
ljmp
add
mov
sarl
mov
mov
mov
adc
in
add
add
cmp
mov
jle
cmp
add
iret
popf
outsb
and
add
pop
adc
mov
call
mov
daa
and
inc
sub
push
push
notl
add
test
add
dec
sbb
orl
cmp
add
add
cmpsb
das
in
jns
negb
sub
sti
in
test
fsubl
mov
ss
fwait
insb
push
add
push
mov
fisttps
jne
mov
add
stos
fcmovne
ds
in
pop
push
add
add
mov
mov
cmp
pminub
ds
jno
dec
inc
add
xor
mov
addr16
out
fstps
int
push
js
add
add
mov
add
xchg
xor
mov
push
rcr
mov
pop
jb
mov
mov
mov
add
mov
inc
mov
xchg
or
das
inc
jo
mov
pop
inc
add
add
ljmp
xchg
ret
cli
add
shrl
scas
cmc
stos
rolb
mov
fsubp
inc
lret
mov
and
jne
stos
mov
jmp
add
cwtl
inc
insl
cmp
dec
jmp
add
nop
add
ja
pusha
add
pop
inc
jle
lods
jecxz
or
pushf
mov
mov
out
aaa
mov
scas
sub
daa
je
lods
gs
add
adc
mov
inc
mov
mov
jns
popf
aas
dec
jne
aam
add
jge
cmp
popf
addb
les
add
add
popf
push
add
lock
rolb
sub
imul
add
or
inc
sub
aam
mov
inc
pop
fwait
sub
cmp
insb
cmp
xor
test
sbb
pop
fbstp
add
add
mov
sbb
pop
shll
mov
mov
cmp
xor
mov
fistpll
add
or
add
mov
stos
mov
test
add
push
add
or
call
dec
cs
ljmp
mov
sahf
cmp
add
cmp
push
movsb
shrl
or
xchg
and
inc
mov
add
testl
push
fcmovb
sub
cmc
mov
push
ret
push
sub
adc
pop
dec
in
test
fnstsw
shl
add
pop
push
dec
addb
sub
mov
xchg
adc
mov
fs
add
mov
inc
data16
mov
test
add
inc
stc
xchg
rolb
mov
mov
mov
outsb
in
loope
cmp
add
popa
leave
out
inc
inc
dec
jb
mov
lds
or
lcall
inc
sbb
das
xchg
mov
and
arpl
pop
jnp
aas
push
inc
gs
mov
hlt
addb
add
mov
in
lahf
andl
pop
mov
hlt
fcoms
mov
add
mov
add
hlt
cmpsb
pop
cld
pushf
fidivl
dec
leave
iret
cmp
add
bound
mov
add
push
ljmp
sub
fstl
sub
jo
mov
or
and
push
adc
mov
add
adc
rcll
adc
jbe
push
add
inc
pop
xor
stc
mov
mov
rolb
mov
dec
push
sub
cld
mov
outsl
insl
sub
or
int3
xor
repnz
mov
add
ja
jg
into
jle
jp
mov
into
jno
sub
sub
push
faddl
inc
xchg
mov
ss
loopne
mov
add
lds
lock
loopne
mov
xlat
cmp
cmpsb
loop
mov
adc
mov
and
push
xchg
add
dec
cwtl
mov
out
ret
adc
pop
jno
enter
cltd
adc
mov
add
add
xchg
mov
daa
outsb
sbb
fwait
in
add
and
addr16
add
add
or
add
fsub
test
arpl
leave
bound
mov
add
mov
popf
pop
lods
mov
fs
mov
les
add
cld
insl
mov
test
adc
push
movsl
and
mov
in
and
sub
pop
mov
add
mov
flds
mov
in
pop
jne
and
mov
inc
leave
add
add
add
mov
rcl
vmovq
lahf
ljmp
mov
addl
mov
inc
mov
push
push
leave
push
dec
fmull
cmp
mov
push
push
rolb
mov
push
add
pop
xchg
jmp
mov
add
loope
mov
ljmp
cs
sub
test
cmp
gs
cmp
mov
xchg
xor
or
sbb
pop
push
xlat
pop
mov
inc
js
mov
les
add
xor
cmpsl
inc
add
dec
xchg
dec
sub
xchg
sub
push
xchg
pop
add
mov
imul
mov
and
testl
hlt
iret
cmp
add
add
adc
enter
addb
outsl
rolb
test
mov
add
jmp
add
lods
xor
leave
jo
mov
ffreep
push
inc
movsl
sub
fsts
call
mov
test
push
arpl
out
and
mov
mov
cmpsl
sbb
add
push
add
dec
rolb
mov
sub
lea
sbb
ss
add
add
inc
add
add
pop
addb
mov
aam
dec
mov
fwait
testb
xchg
dec
js
hlt
ljmp
sub
lret
je,pn
into
lods
out
mov
je
jg
int
jbe
push
dec
out
addb
mov
jp
xor
add
movsb
pusha
add
sbb
add
mov
roll
xchg
out
mov
pop
jns
popa
in
push
jne
arpl
mov
add
movsb
out
cs
and
add
add
aam
loop
mov
inc
jnp
rorl
jnp
int
push
add
dec
dec
xor
mov
xchg
add
decb
jle
lods
iret
xchg
aam
add
pop
jnp
sbb
push
jmp
add
mov
add
mov
bound
mov
add
add
mov
in
sahf
inc
pop
test
dec
rolb
mov
add
push
cmp
lods
fisttps
out
adc
mov
inc
add
mov
mov
and
jbe
cli
in
cmp
and
aad
add
enter
mov
ljmp
push
sub
ss
jle
add
aad
popf
fldl
add
cmc
sbbl
add
fcomps
ss
pop
mov
mov
movsl
push
add
fidivs
fsts
mov
mov
push
add
add
inc
add
hlt
nop
add
inc
add
movsb
repz
mov
mov
add
lods
and
pop
xlat
or
mov
jl
icebp
push
push
add
push
loop
mov
cmc
lods
pop
pop
jg
int3
dec
ds
stos
out
xlat
loopne
mov
nop
add
cmp
xchg
repz
add
js
add
cmp
or
ret
fwait
push
add
jno
push
nop
add
out
jb
mov
mov
or
push
adc
add
push
popf
in
imul
insl
or
rolb
out
sub
into
mov
mov
pop
es
mov
add
adc
mov
adc
xor
pop
push
lods
cwtl
push
inc
and
test
push
add
mov
or
xor
mov
mov
add
adc
dec
cld
rolb
mov
and
mov
cmp
in
adc
cwtl
enter
adc
mov
add
mov
out
inc
add
add
or
or
mov
mov
push
and
mov
mov
add
sbb
add
mov
xor
jg
sub
roll
jl
mov
lods
ja
pop
inc
test
icebp
pop
pop
dec
inc
add
inc
cmp
add
mov
cld
hlt
sub
dec
pop
and
jb
mov
lds
je
scas
mov
add
popa
xor
add
jle
add
add
mov
cmp
daa
jmp
mov
imul
mov
loopne
mov
les
add
cmp
add
dec
nop
add
cwtl
ds
xor
xor
mov
xchg
jae
sub
add
and
push
jnp
loopne
mov
xchg
ja
test
mov
enter
loopne
mov
xchg
push
in
xor
loope
pop
loope
fisttps
inc
mov
loope
jl
xor
mov
and
push
sbbl
loop
mov
add
mov
icebp
jo
mov
and
add
mov
rolb
mov
std
add
mov
pop
aas
dec
mov
jl
imul
xor
or
add
popf
xchg
push
push
andl
mov
add
dec
xchg
nop
add
mov
mov
mov
sti
xchg
lods
or
add
leave
sub
in
cwtl
and
xor
add
pop
hlt
addb
in
adc
mov
adc
outsl
fiadds
mov
sbb
cmp
push
push
or
jae
xchg
mov
mov
in
mov
xchg
mov
and
ds
add
mov
add
pop
push
arpl
in
xchg
add
lea
insl
jnp
cmp
fidivrs
mov
sbb
addb
push
fistpll
fimull
xchg
and
out
dec
idivl
add
fistpl
mov
sti
xchg
add
mov
push
jp
add
insb
push
add
add
add
in
dec
mov
fimull
adc
fwait
or
insb
jae
ret
jns
pop
pop
lcall
xchg
gs
add
push
add
scas
sbb
add
leave
xlat
cmpsl
cmpsl
cmp
cli
imul
add
hlt
push
adc
mov
xlat
push
mov
xor
gs
or
imul
or
aam
test
pop
adc
mov
add
add
mov
sub
minps
jle
push
stc
dec
xor
mov
and
mov
inc
icebp
lea
test
mov
cmp
add
fdivrs
ret
addb
ret
xor
mov
push
scas
fstpl
lcall
bound
mov
push
fstenv
adc
cld
fadds
mov
jl
cmp
js
add
mov
lods
mov
or
aad
push
xchg
mov
sbb
in
push
gs
pop
addb
in
pop
out
xor
insb
mov
mov
add
enter
dec
bound
mov
add
jmp
push
inc
in
ficompl
enter
add
adc
jmp
adc
mov
mov
mov
dec
mov
mov
add
mov
add
sub
or
ficomps
out
dec
mov
add
rolb
mov
pop
or
add
mov
out
aas
push
bound
mov
add
add
mov
loope
mov
push
push
add
data16
movzbl
mov
mov
pop
xor
add
mov
push
dec
js
aam
lds
add
or
add
add
fdivrl
or
add
mov
scas
jno
push
call
add
lods
addb
mov
dec
xchg
sub
mov
xor
insb
ds
push
push
adc
data16
imul
mov
mov
cmp
add
add
movsl
push
out
or
dec
xor
push
jle
mov
push
jb
mov
add
inc
fidivl
ja
add
les
mov
gs
test
mov
frstor
sbb
adc
into
sbb
pop
outsl
cmp
movsl
mov
xchg
lahf
std
sbb
ret
js
add
test
push
add
adc
mov
add
mov
js
icebp
negl
fimuls
jl
dec
das
mov
das
clc
add
push
mov
mov
mov
out
cltd
xchg
add
cmpl
addb
int3
addb
scas
fstl
jb
mov
es
loopne,pn
mov
mov
add
cmpsl
cmp
jmp
inc
jnp
mov
ljmp
pop
pop
insb
add
inc
fcompl
in
aaa
push
add
xchg
mov
push
pop
push
add
or
mov
mov
fisttpll
sbb
and
mov
icebp
ja
cmpsb
iret
mov
daa
mov
adc
pop
mov
arpl
mov
mov
jno
fiaddl
mov
pop
aas
out
add
push
adc
adc
mov
add
push
jle
inc
or
mov
add
jl
adc
daa
inc
ss
test
dec
and
sbb
cmp
fstps
int3
ret
or
jge
dec
hlt
into
jmp
stc
mov
mov
mov
mov
mov
mov
add
ret
jbe
es
pop
ret
jecxz
dec
lods
dec
fcompl
or
fwait
insl
push
add
mov
add
test
add
sti
and
add
push
add
or
addr16
enter
add
add
jns
es
add
cld
ljmp
cltd
nop
add
jo
mov
repz
lock
or
jo
mov
mov
dec
sub
or
xor
fnsave
or
add
stos
inc
push
in
cmpsl
pop
int3
jge
push
lods
scas
inc
xor
mov
push
xchg
push
ret
mov
cmpsb
jno
add
rolb
mov
addb
stos
lea
sub
rolb
mov
dec
fsubs
cmpsb
jb
mov
inc
dec
mov
inc
add
xchg
push
rorl
stos
cmp
fisttpl
sbb
jnp
add
scas
push
inc
inc
push
xchg
add
stos
ret
inc
out
jg
out
add
rolb
mov
or
cmp
mov
sub
add
test
mov
loopne
mov
add
sbb
dec
lcall
scas
cltd
cmp
push
push
xor
cmc
pop
fidivl
xor
push
insl
das
rcrl
add
rolb
mov
hlt
adc
cmp
xor
mov
and
mov
rcrl
pop
xchg
sub
lods
inc
xor
mov
xor
add
xchg
pushf
xchg
popf
mov
lret
cmp
mov
xchg
sub
lods
rolb
mov
subl
add
out
pop
jecxz
xchg
nop
add
cld
push
lods
aaa
fs
fisubrs
pop
pop
aaa
lahf
fidivl
incb
mov
add
mov
imul
mov
pop
mov
pop
jae
sti
sub
inc
add
mov
lods
movb
add
mov
test
cmp
test
dec
inc
add
add
add
mov
inc
stc
addb
mul
add
stos
mov
mov
jmp
jns
mov
add
adc
mov
xchg
adc
mov
push
jecxz
es
ljmp
inc
jmp
cmp
insl
adc
jnp
mov
dec
add
dec
incb
jge
adc
rcll
inc
mov
add
add
pop
je
fisubs
add
popaw
add
mov
xchg
sbb
add
imul
mov
popf
dec
sbb
inc
int3
insl
and
mov
add
cli
inc
movups
add
mov
add
add
add
xchg
cmpsb
cmp
xor
add
add
icebp
jg
add
dec
xor
mov
push
mov
add
pop
out
jns
xchg
int
adc
push
bound
mov
cmp
jecxz
mov
xchg
add
pop
cwtl
push
or
pop
scas
pop
mov
xlat
loopne
mov
addb
jge
xchg
popf
mov
jb
mov
pop
leave
and
sbb
mov
mov
add
loop
mov
mov
cs
adc
add
mov
xchg
xor
inc
add
out
test
xchg
ja
sbb
add
psubd
nop
add
add
insb
ret
repnz
imul
adc
mov
xchg
add
fildll
or
outsb
sub
add
mov
sbb
mov
dec
pop
rcrl
pop
jo
mov
mov
mov
stos
bound
mov
lock
mov
dec
dec
xor
add
movsl
cmp
mov
push
mov
int3
dec
sub
sbb
add
add
lret
cmpsl
and
popa
sbb
mov
inc
add
mov
jle
popa
jl
test
mov
fwait
xor
mov
mov
aas
rolb
mov
xchg
sub
or
xor
loop
mov
add
into
lret
adc
mov
xchg
pop
loopne
mov
ja
js
pushf
sub
cmovl
popf
xchg
in
bound
mov
add
mov
out
or
mov
add
lcall
mov
xor
mov
lock
xor
mov
push
add
xchg
pop
push
adc
pop
lea
push
scas
faddp
and
mov
add
sub
mov
pop
sub
push
mov
push
add
mov
icebp
jge
push
add
add
add
dec
jne
rolb
mov
jp
adc
add
mov
cmc
push
add
movsl
std
stos
fsubl
inc
or
add
dec
push
lahf
xor
mov
jmp
add
mov
mov
add
xchg
push
sub
xchg
lock
mov
mov
jecxz
in
hlt
lahf
lcall
add
clc
mov
int
aad
pop
pop
sub
sahf
adc
mov
mov
ret
ja
lock
call
addb
mov
inc
xchg
aam
or
mov
daa
sti
sqrtps
mov
movsl
add
lods
add
mov
mov
popf
filds
leave
nop
add
mov
bound
mov
outsb
das
fwait
dec
pop
fsts
mov
add
mov
mov
mov
stos
xchg
pop
mov
mov
adc
jns
add
add
xor
mov
ret
and
xor
mov
mov
dec
scas
cmpsb
pop
lahf
push
cmp
add
mov
sbb
xchg
add
add
dec
scas
movsl
xchg
jo
mov
jno
push
leave
popf
ja
mov
push
mov
jns
sbb
and
mov
lcall
cmp
mov
lret
cmpsb
loop
mov
or
mov
shll
cmp
sar
sub
mov
add
mov
cld
and
sbb
loop
mov
add
sub
int3
in
sub
stos
rolb
imul
sahf
rorl
dec
mov
lahf
aad
cmp
xchg
bound
mov
add
pop
pop
fisttps
fwait
jmp
daa
aad
push
jg
rolb
mov
test
xchg
cmpsb
out
loope
or
mov
fs
stc
test
add
inc
push
mov
inc
adc
add
fbld
add
add
frstor
xchg
push
xor
ficompl
push
cmp
jecxz
subl
add
imul
add
add
push
sub
add
cld
addb
addb
aaa
lds
push
add
mov
lea
movsb
repz
jae
dec
jg
repnz
mov
ja
add
jmp
enter
mov
addb
push
add
mov
push
fmul
imul
mov
shll
in
cmpsl
sub
add
add
mov
push
xchg
js
repz
and
mov
xchg
push
jb
mov
divb
jns
lcall
addr16
and
add
stc
inc
add
mov
mov
adc
int
add
add
in
stos
jns
jo
mov
lahf
rolb
mov
dec
xor
mov
sbb
clc
clc
in
push
add
rolb
mov
mov
fidivrs
out
jecxz
adc
fbld
daa
push
sbb
icebp
stc
xchg
add
dec
stos
or
adc
add
add
xchg
add
sarl
inc
add
mov
add
mov
dec
stos
dec
daa
repnz
adc
mov
pop
stos
jns
cltd
or
adc
cmp
lods
rolb
mov
or
add
mov
mov
mov
sahf
pusha
add
mov
into
jle
in
enter
loopne
mov
add
test
inc
add
int3
rcrl
int3
scas
inc
pop
pop
mov
sub
lods
arpl
sets
les
add
or
js
clc
mov
jmp
imul
jg
pop
cwtl
adc
mov
mov
mov
sbb
dec
xchg
adc
test
mov
adc
add
rolb
mov
inc
add
sar
cmpsb
jmp
push
cmc
push
dec
lods
sub
mov
add
xchg
cmp
jge
push
mov
inc
add
or
loopne
mov
sbb
add
inc
mov
dec
mov
xchg
mov
fmul
push
add
xor
add
out
mov
and
mov
add
add
mov
mov
rolb
mov
mov
mov
mov
add
fldenv
mov
xchg
add
je
fwait
or
clc
sahf
mov
add
mov
loope
sahf
mov
jmp
pop
or
aas
or
mov
call
mov
mov
xchg
fnsave
mov
xchg
nop
add
fsts
mov
sbb
enter
call
out
in
dec
ds
xchg
into
aas
mov
sub
add
inc
adc
add
add
and
les
mov
adc
je
inc
add
mov
fs
aas
sub
add
xchg
xlat
loop
mov
repnz
add
mov
ljmp
mov
add
mov
cmp
mov
push
mov
mov
mov
pop
sub
cli
pop
cmpsl
cmc
mov
add
dec
pop
dec
mov
push
add
add
fdivl
add
cld
push
test
xchg
cmp
lds
add
loop
mov
jle
adc
mov
je
movsl
movsb
jmp
inc
mov
xchg
mov
sub
repz
inc
dec
sub
add
hlt
mov
mov
sbb
add
lahf
adc
mov
jmp
or
lahf
mov
lock
dec
mov
jnp
pop
or
les
addb
inc
mov
add
imul
into
and
push
jecxz
pushf
xor
mov
push
out
push
das
sbb
fnstenv
xchg
add
mov
dec
mov
mov
mov
mov
pop
fs
jecxz
add
mov
dec
mov
rcr
xchg
add
jle
add
mov
mov
sbb
xchg
ret
and
add
mov
or
shll
stc
pop
sahf
xchg
or
jecxz
bound
mov
into
test
add
imul
out
push
inc
mov
mov
stos
cmp
add
cmp
rolb
mov
int3
pop
add
mov
nop
add
and
mov
xchg
add
or
icebp
cld
cwtl
shl
dec
xor
mov
jae
lahf
mov
add
mov
add
mov
and
mov
pop
fsubs
mov
into
sbbl
lahf
mov
xchg
add
fstpl
add
mov
daa
xchg
push
and
fidivrl
add
jle
add
es
xchg
mov
gs
cmp
mov
add
cmp
cli
push
mov
addb
insl
fwait
xor
or
ja
stos
test
sahf
jno
push
ds
sub
jae
sbb
push
xchg
ret
pop
push
mov
add
scas
dec
push
add
mov
pusha
add
jge
lret
rcll
data16
add
inc
push
push
or
add
arpl
sbb
jmp
lret
mov
xchg
pop
adc
mov
out
pop
bound
mov
add
pop
jnp
push
je
push
add
call
mov
mov
mov
sub
out
xor
enter
push
xor
mov
outsl
icebp
sahf
sub
lods
int
cld
addb
xor
add
movsb
popf
lret
xlat
or
ret
mov
mov
leave
cmc
inc
and
mov
ret
addr16
adc
sub
add
bound
mov
jp
sub
add
gs
xchg
cmpsl
jbe
insb
stc
xchg
mov
add
cmp
add
pop
pop
push
adc
inc
leave
fs
xchg
add
ret
aad
add
mov
add
aas
sub
inc
dec
jae
fcomps
outsb
rolb
mov
es
and
and
insl
rolb
mov
add
jle
push
xchg
jbe
mov
test
add
add
out
outsl
icebp
stc
cmpsl
cltd
inc
cmp
pushf
ljmp
sub
addr16
add
add
add
jecxz
in
imulb
ja
add
mov
fsubs
push
cmpsb
pop
dec
sbb
icebp
or
pop
mov
scas
cmp
adc
mov
loop
mov
hlt
xor
xor
add
jmp
in
repnz
push
jns
fcmovnb
add
mov
push
and
mov
add
insl
aas
rcl
es
sub
xchg
mov
add
inc
add
pop
add
ds
lahf
fisttps
int
sbb
add
cmp
mov
sbb
hlt
mull
pusha
add
add
and
into
mov
sub
sbb
mov
mov
out
ja
and
icebp
xchg
and
scas
jecxz
lds
outsl
xchg
add
mov
addr16
addb
push
jp
xor
jo
mov
and
jns
sbb
and
insl
je
icebp
aad
push
push
add
sbb
lcall
jecxz
lea
add
mov
mov
mov
xor
mov
lret
and
mov
jae
sbb
sahf
ss
dec
sahf
nop
add
sarl
push
popf
movsb
and
adc
mov
jne
dec
out
mov
mov
test
jns
ljmp
mov
xor
and
lods
dec
lret
pop
add
in
pop
add
add
cmp
add
rolb
fs
mov
cli
rolb
mov
rcrl
xchg
pop
mov
xchg
in
xchg
push
fs
sbb
add
cld
adc
mov
sbb
lds
in
cli
rolb
mov
sbb
xor
mov
and
sub
out
je
mov
sbb
jnp
jp
rolb
call
mov
add
outsb
jbe
add
add
mov
push
add
jns
scas
xor
cmp
mov
mov
push
jecxz
jmp
mov
iret
mov
mov
push
imul
mov
xchg
out
cltd
test
xor
mov
mov
inc
inc
add
fcoms
sub
xchg
sub
mov
mov
pop
in
jmp
add
pusha
add
mov
loop
mov
add
inc
and
js
sbb
lcall
mov
mov
cmp
sbb
out
aad
aad
int
push
cld
adc
mov
fst
add
cmp
fsubs
out
adc
sbb
jge
in
mov
pop
cmp
add
cs
xor
clc
add
aas
adc
mov
ljmp
add
lret
ljmp
mov
adc
imulb
dec
inc
push
mov
xor
add
mov
xchg
add
push
adc
mov
aam
xchg
jae
rolb
mov
stos
ljmp
and
xchg
imul
clc
mov
jmp
mov
add
mov
adc
mov
test
pop
fsubr
and
cs
push
jo
mov
movsl
pusha
add
mov
cmp
push
lods
ss
cmp
cmp
mov
popf
cmp
mov
pushf
das
in
jns
add
xor
cmpsl
adc
mov
adc
ret
jns
lcall
dec
sbb
les
aad
cli
repz
aaa
jb
mov
sbb
and
mov
leave
push
push
in
jbe
aas
or
pop
mov
add
add
shll
mov
jg
add
jb
mov
inc
add
mov
add
aas
dec
subl
add
hlt
std
pop
mov
fbstp
and
addb
add
add
xsha256
cmpsb
xchg
xor
mov
add
cltd
mov
imul
pop
cld
jns
dec
daa
fistpll
xor
mov
fs
lock
das
sbb
cmpsb
xchg
imul
jle
inc
cmp
out
mov
ret
sub
cld
xchg
push
mov
idiv
and
add
jle
xor
push
test
stc
inc
add
add
imul
daa
inc
add
push
in
std
pushf
mov
mov
mov
add
nop
add
mov
fldt
mov
scas
das
fcomps
mov
or
mov
inc
add
pop
mov
add
fnstenv
add
stos
popa
inc
cmp
lcall
enter
testb
and
in
push
repnz
xor
mov
mov
aad
mov
mov
fldl
iret
lahf
sbb
xchg
inc
movsb
fists
mov
jmp
cli
aam
mov
mov
test
cmp
repnz
mov
push
rolb
mov
mov
and
mov
sub
movl
mov
into
in
cmpsb
jnp
andl
jnp
push
xchg
and
mov
mov
push
xchg
add
outsb
push
add
cltd
inc
xchg
in
cltd
cli
push
lahf
mov
mov
movsl
mov
rcrl
xor
lds
int
or
aam
loope
push
jae
test
shrl
add
mov
mov
dec
sbb
mov
js
xchg
dec
jge
sbb
clc
pushf
test
int3
xchg
hlt
clc
pushf
rep
cmpsl
lret
clc
hlt
in
xchg
add
sahf
arpl
mov
movsb
cltd
div
add
mov
cwtl
rolb
mov
mov
mov
or
mov
pushf
dec
mov
or
jns
xchg
push
jmp
push
outsb
fstps
sbb
loope
add
mov
add
dec
out
jo
mov
push
cld
std
nop
add
mov
mov
mov
arpl
lahf
addb
push
jns,pn
sbb
lock
fidivrl
sbb
stos
addb
fwait
pop
mov
addb
jl
inc
xchg
inc
add
and
stos
adc
mov
add
mov
cwtl
xor
arpl
insl
xchg
push
jg
inc
add
hlt
mov
or
or
adc
lret
sbb
cmp
fidivl
mov
ret
jo
mov
push
push
add
add
xor
push
sarl
psllq
aas
notl
mov
xchg
jns
mov
sub
add
mov
mov
dec
xlat
daa
leavew
enter
rolb
mov
cmpsb
test
mov
add
imul
add
xchg
add
mov
pop
addr16
test
popf
enter
inc
add
mov
aas
dec
imul
mov
adc
add
sbb
sbb
addb
arpl
pop
and
bound
mov
popa
scas
and
xchg
dec
popf
std
bound
mov
add
jecxz
js
and
mov
mov
add
adc
mov
sub
add
popf
lret
push
popa
and
enter
inc
fildll
out
ss
inc
rolb
mov
push
cmp
ja
fstpt
and
mov
mov
jmp
pop
pop
addb
xchg
cmpsl
out
addb
xchg
pusha
add
add
xchg
add
rolb
mov
add
jge
nop
add
add
push
test
out
add
add
mov
or
aas
mov
add
adc
mov
mov
mov
cmp
daa
iret
mov
sbb
pop
scas
in
dec
inc
xor
mov
add
mov
add
enter
addb
data16
mov
test
add
push
xchg
mov
test
push
sbb
je
and
andl
mov
add
fs
add
add
popf
or
insb
mov
aas
lds
mov
mov
mov
xchg
jnp
aaa
add
mov
xor
mov
fsubr
sti
pop
or
mov
fdivrs
add
test
jns
pop
cwtl
xchg
rolb
mov
add
mov
mov
add
mov
cmp
cld
out
xlat
push
sbb
xchg
mov
add
shll
repz
xor
mov
into
je
dec
lcall
mov
add
ret
mov
sbb
xor
mov
maxps
pop
mov
clc
inc
mov
mov
addb
xchg
in
lods
sub
lret
call
cmpsb
test
mov
xor
mov
iret
adc
mov
add
cmpl
mov
mov
ret
xor
mov
cmp
imul
cmp
add
and
pop
insl
cld
idivl
pop
mov
mov
pop
pop
hlt
in
push
sub
or
add
test
fcmovu
nop
add
inc
cmp
mov
mov
mov
xchg
add
sbb
xchg
in
pop
popa
jb
mov
into
mov
cli
or
mov
add
cmp
push
pop
test
scas
cmp
inc
add
stos
sub
adc
mov
ljmp
or
jne
jns
cmp
mov
test
test
add
sbb
jecxz
add
vphaddwd
add
lock
repz
push
add
mov
xchg
movsb
inc
sti
mov
fsubrs
in
lods
adc
mov
pushf
xrelease
mov
imul
rolb
mov
inc
add
mov
mov
push
scas
lret
mov
mov
shl
sbb
add
mov
inc
and
mov
jne
mov
nop
add
add
xchg
imul
lds
mov
inc
add
inc
dec
sti
ja
add
mov
sub
repz
adc
and
test
rcrl
xor
sti
and
mov
mov
lea
push
dec
push
mov
mov
add
pop
sub
pop
mov
or
sub
add
loop
mov
mov
inc
sbb
xchg
cmp
adcl
or
jno
add
outsl
sti
inc
movsb
ds
mov
mov
push
xor
mov
mov
jns
mov
fcompl
and
add
mov
jns
jbe
and
mov
mov
adc
clc
sbb
es
movsb
dec
xor
jbe
sub
jae
cmp
xor
mov
pop
mov
mov
test
scas
mov
or
lret
add
mov
adcl
xlat
ficoml
shrl
add
mov
add
stos
gs
pop
add
mov
jmp
push
push
jns
add
jp
pop
leave
rolb
mov
cli
es
std
cs
and
push
add
arpl
loope
das
outsb
loopne
mov
add
pop
adc
mov
out
addb
mov
adc
repnz
sbb
ljmp
pop
cmp
inc
lahf
add
out
mov
pop
stos
dec
pop
add
lock
cmp
movsl
mov
fmull
icebp
mov
es
sbb
add
push
push
lret
cmc
cltd
scas
je
push
inc
mov
add
mov
cld
mov
xor
mov
lea
in
push
push
lret
push
push
or
cmpsb
cmp
add
mov
test
fwait
lods
push
rolb
pop
rorl
pusha
add
mov
subl
loop
mov
mov
outsl
xchg
or
push
mov
call
lea
not
jl
mov
push
or
lahf
sbb
xchg
add
outsl
xchg
in
jle
mov
insl
mov
pop
cmp
xchg
add
mov
in
and
mov
mov
mov
ljmp
iret
mov
xor
mov
lock
push
mov
mov
loopne
mov
xchg
sbb
adc
mov
mov
mov
inc
add
push
mov
mov
sub
push
push
enter
aas
inc
cmpsb
sub
mov
pop
fisubrl
test
sub
mov
push
scas
mov
add
adc
mov
adc
cs
add
lret
or
arpl
adc
mov
or
mov
insl
mov
mov
cwtl
adc
mov
mov
add
sub
mov
mov
daa
push
jecxz
inc
add
cmp
add
add
mov
add
in
push
or
in
add
jbe
add
jl
mov
or
stc
jl
inc
or
roll
pop
inc
and
cs
jle
test
push
jmp
add
pop
cs
scas
dec
mov
addb
rolb
mov
sub
dec
xlat
jle
mov
add
addb
rolb
adc
inc
addl
add
mov
mov
in
das
sbb
dec
inc
add
xor
mov
cwtl
lret
mov
jmp
nop
add
popl
test
scas
push
addb
pop
push
mov
add
mov
mov
mov
adc
mov
jg,pn
xchg
dec
mov
into
mov
and
dec
stos
rolb
fcmove
sub
mov
jne
adc
mov
rolb
mov
inc
add
stc
repnz
mov
mov
add
pop
and
mov
jl
push
xor
and
mov
mov
dec
lcall
int3
xchg
add
jo
mov
and
mov
cli
sbb
cld
in
push
fdiv
daa
or
add
jns
test
pop
mov
in
lods
outsl
addb
pusha
add
mov
or
add
nop
add
mov
int3
fwait
push
fsts
add
add
test
and
int
pop
sti
lds
pop
jbe
add
mov
daa
jp
xchg
xchg
dec
mov
add
push
lret
bound
mov
dec
popa
xchg
cmp
movsl
sti
cmp
add
cs
icebp
lods
sbb
pop
fwait
cmp
add
mov
ljmp
jle
cmpsb
out
mov
arpl
and
dec
icebp
cmp
popf
int
ljmp
mov
jae
fcmovbe
out
sbb
cmp
or
add
jo
mov
fnstenv
mov
cli
stos
push
ficoms
cs
es
mov
fmuls
cmp
add
adc
mov
or
dec
sbb
mov
lds
adc
addb
in
xchg
push
add
es
aam
into
test
xor
leave
repz
mov
add
sbb
ret
xchg
lret
mov
mov
sub
mov
test
dec
mov
aas
imul
sbb
jne
jle
add
mov
xlat
rol
add
test
mov
fsubs
mov
inc
xor
pop
dec
aam
add
fiaddl
add
out
add
add
add
scas
out
outsl
mov
add
mov
dec
inc
add
inc
imul
mov
mov
leave
cmp
mov
add
movsb
inc
repnz
lret
mov
stos
sub
add
jae
int3
adc
mov
adc
mov
and
cmp
jle
andl
push
add
add
in
jg
int
mov
cwtl
adc
mov
sti
mov
addb
sub
fsubs
add
add
enter
add
jmp
mov
outsb
and
test
cld
inc
add
inc
xor
mov
add
push
int3
sub
mov
shrl
add
jmp
mov
xchg
mov
mov
adc
mov
xchg
std
gs
pop
xchg
imul
iret
mov
adc
jge
push
add
and
pop
pop
lods
outsl
scas
xchg
cltd
idivb
lahf
fs
pop
cs
stos
fldt
mov
add
addb
ret
addb
std
xor
mov
jg
js
fcoml
ss
data16
sti
daa
pop
cmp
and
mov
mov
loop
mov
mov
sub
inc
pushf
outsl
in
cmp
add
push
ret
stos
inc
repnz
mov
notl
mov
add
mov
add
mov
shll
mov
dec
jmp
add
cltd
fisttps
repz
mov
adc
inc
add
out
xchg
dec
std
js
xchg
or
mov
or
mov
and
aam
push
out
imul
xchg
fisubrs
mov
sbb
divl
add
orl
add
adcl
ja
call
push
mov
inc
add
cmp
call
or
sbb
cmp
std
lock
mov
mov
adc
inc
inc
inc
jnp
pop
mov
push
testl
pop
dec
pop
movsb
push
jmp
aaa
test
pusha
add
push
cmp
jbe
cmc
add
mov
jbe
add
hlt
or
mov
sti
sub
jo,pt
mov
push
adc
mov
or
arpl
data16
loopne
mov
ja
or
inc
push
roll
jnp
jae
mov
lods
pushf
lahf
insb
mov
sub
xchg
fildl
mov
dec
cmpsl
addb
in
and
add
lret
inc
add
jmp
push
add
addr16
xor
mov
adc
add
gs
add
aam
add
inc
mov
std
das
or
push
std
dec
stc
dec
mov
or
std
leave
rorl
sub
fdivrl
pop
scas
add
mov
sahf
faddl
mov
jmp
mov
mov
add
lock
jg
add
lret
jnp
das
adc
mov
mov
mov
cmp
cld
add
mov
fs
pop
fmul
jae
xchg
add
insl
adc
mov
add
xor
mov
xor
mov
xor
add
dec
in
lea
mov
or
adc
mov
sbb
sbb
cvtps2pi
sub
add
mov
mov
mov
mov
stc
rolb
mov
mull
addb
mov
mov
mov
add
dec
push
pop
addb
ret
mov
add
test
insb
jnp
insb
lods
sahf
xchg
and
pop
dec
xchg
mov
int3
xor
stc
mov
or
add
jl
and
les
add
jl
cmp
jb
mov
xchg
negl
mov
cmp
xchg
add
mov
mov
add
xchg
cli
sub
inc
clc
cvtps2pd
add
js
addb
xchg
sbb
notl
jmp
mov
mov
add
dec
push
inc
addb
inc
mov
mov
push
inc
add
mov
mov
in
or
mov
testl
popf
lods
cli
mov
mov
add
fs
test
sbb
repnz
mov
insl
add
xor
mov
add
aam
js
bswap
mov
rolb
mov
lods
jecxz
mov
rolb
mov
rcll
scas
dec
call
sbb
repz
mov
mov
imulb
lcall
mov
in
out
ds
sbb
inc
xor
mov
jns
mov
insb
addb
in
scas
in
movsb
or
insl
mov
es
mov
sub
xchg
jae
add
ret
fstl
mov
add
lods
test
add
jg
lret
scas
rorl
aaa
das
js
movsl
pusha
add
push
pushf
push
cmp
sbb
jmp
or
and
fisubs
mov
add
pop
imul
in
add
mov
mov
clc
fiaddl
add
pop
sub
fcoml
mov
xor
mov
mov
or
add
inc
adc
and
push
xor
sub
rolb
mov
sbb
lret
push
ret
test
aas
out
sti
mov
popa
movsl
lds
popa
mov
pop
add
jecxz
hlt
add
mov
mov
cld
push
inc
add
pop
pop
jb
mov
sbb
push
sbb
out
xor
jp
push
add
lds
and
mov
mov
cmc
dec
push
pop
sbb
adc
mov
sbb
insl
xchg
sbb
add
imul
pop
enter
xchg
cmp
push
push
add
mov
add
pushf
xor
mov
push
repnz
movsb
cmp
sub
loopne
mov
loope
in
pop
sub
mov
mov
fiaddl
add
xor
lods
push
hlt
and
nop
add
arpl
add
xchg
pop
movsb
neg
inc
add
mov
rcll
jl
pop
ss
iret
or
and
dec
xchg
test
test
fistpll
adc
jle
andl
dec
frstpm(287
jno
test
push
mov
inc
add
or
push
addb
jnp
test
push
loopne
mov
xor
dec
outsb
stos
pop
jns
push
inc
add
add
add
add
test
inc
mov
mov
dec
nop
add
ret
jp
cmp
addb
push
xor
push
mov
ss
ret
cld
jle
js
xchg
ret
loope
test
hlt
xchg
or
add
pop
sahf
add
divl
pop
sub
cmp
mov
xchg
enter
mov
ss
outsb
jmp
sub
ds
add
lea
mov
lret
jb
mov
fcomps
add
mov
mov
in
movsl
call
mov
xor
and
mov
fs
es
adc
mov
xor
mov
mov
jmp
cmp
rolb
mov
mov
pop
mov
addb
out
push
in
scas
jmp
add
inc
sbb
mov
cltd
call
mov
sbbl
cmc
push
xor
mov
inc
add
add
push
or
test
inc
js
push
add
mov
dec
das
in
addb
test
mov
pop
in
mov
xchg
pop
cmpsb
mov
mov
mov
dec
add
mov
inc
add
mov
je
in
mov
cltd
dec
push
mov
mov
aad
repnz
or
mov
int
cmovge
mov
cmpsl
sbb
in
rolb
mov
xor
fs
or
in
ret
rorl
movzwl
repnz
jbe
hlt
stos
clc
jo
mov
add
jecxz
inc
and
or
cmp
cmp
xor
mov
sub
js
addr16
pop
out
jae
add
icebp
sub
push
or
jecxz
jg
test
mov
inc
push
push
lret
dec
mov
jns
pop
jg
pop
mov
mov
adc
pop
push
xlat
jb
mov
mov
mov
movhps
add
jbe
xchg
add
add
int3
into
jp
lret
cli
lock
mov
movsl
flds
mov
mov
mov
xor
mov
add
add
jns
clc
add
mov
inc
add
add
dec
rolb
mov
pop
filds
icebp
mov
rolb
mov
xlat
mov
data16
je
jecxz
fadds
outsb
pushf
inc
add
subl
push
bound
mov
add
ljmp
cmc
les
mov
and
into
in
ja
cmpsb
out
lret
dec
je
imul
add
sbb
and
mov
xchg
pop
pop
jecxz
ret
pop
add
jae
add
in
rolb
mov
pop
test
add
call
ret
stos
mov
add
and
dec
cmp
mov
xor
mov
xor
add
xchg
flds
mov
push
push
inc
xchg
adc
mov
inc
xor
mov
inc
add
int
stos
insl
sub
push
add
sbb
popa
imul
ss
sub
fcoms
inc
aas
les
inc
adc
bound
mov
mov
cmp
add
pop
js
adc
mov
and
out
in
arpl
mov
xor
push
add
sbb
and
mov
mov
mov
mov
jle
js
dec
cmp
inc
sbb
pop
cmc
bound
mov
popf
mov
or
mov
jb
mov
pop
sub
dec
movsl
inc
rolb
fadd
add
aas
inc
add
add
adc
adc
mov
mov
fistl
jns
dec
mov
mov
out
loop
mov
and
mov
dec
lret
dec
test
lods
cmc
ds
test
mov
sahf
daa
mov
mov
mov
shll
lods
mov
inc
cli
adc
mov
xchg
mov
and
mov
add
jne,pn
roll
cmpsb
jns
pushf
xchg
add
pop
ja
sub
in
es
add
call
add
sbb
dec
sbb
mov
popf
js
mov
xlat
imul
add
add
and
mov
add
and
add
subl
mov
mov
addb
jmp
aas
mov
mov
popl
mov
mov
mov
jmp
mov
cmp
js
int
fstl
xchg
ljmp
ret
mov
js
jmp
sbb
add
mov
sbb
jle,pn
xor
add
xchg
jp
inc
add
test
dec
clc
rolb
mov
cmp
mov
movb
cmp
sub
dec
addb
push
aad
inc
add
das
cmpl
jl
add
xor
mov
movsl
mov
add
dec
sub
add
test
ljmp
lods
fdivp
and
scas
pop
mov
es
mov
aas
ret
add
mov
push
movsb
or
mov
rolb
mov
dec
out
add
mov
add
fsubrl
fcmovb
out
bound
mov
fsubrs
mov
cmp
dec
addb
clc
mov
mov
jne
rolb
mov
dec
int3
or
add
inc
add
gs
rolb
mov
adc
mov
and
mov
inc
repz
addb
inc
dec
inc
jecxz
pop
loope,pt
ret
stos
out
mov
lcall
mov
add
rolb
mov
insw
es
cmp
push
je
jne
mov
fs
sub
cli
lea
movsl
cld
aaa
push
lcall
lock
pop
jge
mov
mov
stc
push
icebp
stc
jbe
push
mov
add
pop
movsl
and
mov
popf
add
xchg
cmp
loopne
mov
mov
out
pop
lods
mov
mov
aad
aas
enter
or
or
pop
repz
shll
inc
pop
add
rolb
mov
jnp
and
mov
add
stos
add
sub
xor
mov
mov
int
and
add
mov
jle
fs
mov
sub
push
mov
push
add
leave
and
mov
dec
xor
lahf
or
mov
cmp
cld
dec
pop
xor
add
add
mov
test
add
and
mov
inc
fistl
and
inc
add
or
mov
mov
jae
inc
xchg
inc
add
es
fisttps
das
add
mov
dec
and
mov
sub
cltd
frstor
add
addb
stc
pop
pop
jmp
push
jecxz
in
cmp
add
or
mov
mov
push
xchg
dec
scas
movq
mov
add
fwait
sub
leave
hlt
es
mov
jl
sbb
add
add
call
and
mov
sbb
xor
mov
div
ss
fdivs
arpl
pop
adc
mov
cli
in
mov
stos
cmp
adc
mov
std
mov
dec
xor
mov
roll
xrelease
xor
xchg
fists
scas
pop
sbb
add
hlt
loop
mov
repz
mov
lahf
sbb
add
outsl
push
jp
add
sub
jp
out
xchg
sbb
add
dec
das
lea
imul
pushf
lcall
pop
pop
mov
cmc
inc
sbb
xlat
sti
add
out
rorl
xchg
cli
pop
fistpl
sub
add
add
fs
xchg
fsubs
pop
sbb
sbbl
iret
push
add
inc
jne
add
xchg
mov
add
cmp
adc
rolb
lahf
add
out
mov
mov
aaa
mov
mov
sub
into
aad
mov
add
out
enter
pop
rolb
mov
jnp
test
loop
mov
mov
add
cmpsb
push
idivl
pop
adc
add
test
lds
xor
mov
mov
add
sti
out
ljmp
mov
xchg
push
iret
fidivl
add
mov
mov
js
mov
mov
loope
and
pop
scas
mov
and
xadd
mov
dec
sub
jp
add
mov
shrl
lret
pop
add
mov
fists
sbb
jne
mov
icebp
adc
mov
pop
or
and
mov
add
jle
mov
add
mov
daa
outsb
movsl
cli
das
xor
push
pop
or
add
sbb
xor
mov
iret
clc
adc
ds
pusha
add
divl
mov
xchg
inc
add
mov
add
test
vpmacsswd
or
add
add
jne
push
adc
inc
add
inc
lcall
sub
push
imul
mov
xchg
xor
pop
pop
push
rolb
inc
add
mov
mov
stos
or
cvtps2pd
push
push
xor
mov
jg
or
or
mov
mov
adc
in
mov
add
mov
add
add
mov
lods
pop
mov
and
in
add
out
add
stc
push
add
leave
ffree
add
test
inc
push
mov
mov
cld
or
mov
mov
add
mov
mov
out
mov
ljmp
or
xorl
imul
jp
aam
sub
mov
iret
push
mov
lods
mov
add
nop
add
push
cld
mov
gs
mov
add
mov
test
negl
sbb
outsl
cmc
rolb
mov
dec
push
add
or
mov
fwait
loopne
mov
add
shll
mov
bound
mov
mov
jne
js
sbb
add
ss
xchg
mov
xor
mov
ret
inc
popa
inc
push
and
mov
movsl
rolb
mov
dec
push
jo
mov
sub
enter
mov
movsb
sbb
outsl
enter
add
sbb
pop
fnstenv
push
les
add
icebp
lahf
xchg
add
add
push
insb
pusha
add
add
jge
adcl
push
adc
mov
pop
arpl
mov
add
adc
mov
adc
and
mov
add
cmpsl
mov
adc
adc
mov
adc
mov
hlt
scas
inc
fiadds
stos
and
mov
cmpsb
adc
lcall
dec
int3
addb
cwtl
cmc
jecxz
call
push
push
bound
mov
mov
add
add
mov
repz
add
aaa
out
xor
push
jbe
add
bound
mov
jo
mov
mov
push
repnz
dec
fdivl
push
jge
mov
sub
push
add
mov
mov
mov
cmp
add
pop
and
fsubrs
mov
into
iret
push
popf
and
mov
jns
xor
out
mov
lods
or
mov
dec
mov
lods
imul
add
lock
inc
mov
aas
push
jle
inc
in
in
add
add
mov
add
out
mov
add
mov
pop
and
mov
mov
mov
pop
jne
mov
mov
jle
lds
mov
mov
imul
mov
clc
cmc
shll
outsb
cmpsb
mov
add
and
xchg
fcomps
push
and
mov
add
mov
sti
adc
inc
jne
pop
shl
sub
xor
inc
add
mov
add
mov
adc
mov
ss
sahf
frstor
mov
aad
loope
dec
or
push
push
sbb
add
movb
add
push
or
add
ds
je
push
insl
xchg
add
mov
sbb
and
add
sub
addb
test
mov
cmp
inc
imul
adc
mov
mov
mov
test
lods
inc
in
jo
mov
or
jp
aaa
sub
push
mov
add
lcall
jg
push
jmp
leave
aas
xchg
loop
mov
add
lahf
jno
int3
push
popf
jp
stos
or
push
sbb
add
loope
arpl
lds
mov
sbb
adc
sub
jns
adc
cmpl
and
push
sub
cmp
mov
or
push
add
add
leave
pop
test
mov
mov
pushf
jb
mov
out
fcoml
mov
sbb
mov
mov
mov
inc
outsb
ret
and
mov
fistpl
sbb
inc
rcll
add
mov
xchg
out
std
add
mov
cmp
movsl
push
add
mov
dec
mov
or
rorl
imul
loope
and
mov
cmc
adc
mov
add
js
negb
je
std
dec
movsl
xchg
xor
sti
outsb
je
test
testl
xchg
or
test
adc
rcrl
cmp
outsl
sub
sub
mov
push
add
and
add
mov
out
add
mov
add
mov
mov
add
mov
int
add
add
xor
mov
adc
jge
add
mov
in
in
xchg
sub
je
adc
mov
fimull
out
int3
xchg
lahf
mov
mov
jnp
add
cmp
lods
mov
das
scas
or
aas
and
mov
mov
lds
mov
add
repz
cmp
add
iret
dec
ja
adc
push
jnp
test
add
out
add
scas
div
loopne
mov
jg
mov
xchg
add
add
rolb
mov
mov
mov
pop
add
in
ret
xchg
and
hlt
pushl
jp
pop
ror
push
xor
rolb
mov
pop
out
gs
dec
je
inc
ja
pusha
add
cmp
fistpl
push
pop
lods
cmp
movsb
and
add
mov
and
xchg
in
mov
push
add
inc
add
sbb
sub
pop
lds
rolb
mov
add
jecxz
pop
push
or
jnp
ret
bound
mov
les
std
mov
xchg
imul
fwait
into
cmc
jp
not
sbb
in
outsl
jle
jl
jp
mov
xlat
addb
lds
mov
mov
add
cmc
sar
mov
mov
je
les
enter
je
xor
aaa
mov
lea
inc
add
addr16
add
xchg
lds
in
daa
mov
mov
add
lret
xchg
js
dec
inc
jl
add
clc
cmp
mov
jbe
add
and
mov
jge
stos
aad
lahf
imul
pusha
add
xchg
push
and
and
sti
fildl
xchg
dec
shll
dec
xchg
arpl
in
cmp
jbe
add
scas
sub
lret
xchg
js
movsl
add
pop
jge
jle
xor
mov
add
mov
mov
dec
lcall
or
mov
scas
popf
mov
add
add
test
cmc
sti
adc
mov
enter
or
ds
lahf
imul
add
insb
das
out
mov
test
pop
add
scas
lods
fdivs
pushf
xchg
add
or
mov
mov
sub
add
adc
xor
out
data16
lret
xor
mov
repnz
and
mov
add
mov
cli
and
sub
dec
xor
mov
sub
xchg
stos
scas
jbe
mov
or
or
add
add
sub
and
or
add
jmp
add
cld
push
sbb
jmp
out
movsb
mov
mov
jbe
inc
or
addb
mov
rolb
mov
jbe
push
je
xor
outsb
lods
dec
lcall
scas
sbb
fmuls
sbb
xchg
mov
stos
stos
loop
mov
or
add
mov
adc
add
arpl
imul
xchg
push
das
jp
jp
inc
add
sub
test
xor
sub
outsl
inc
test
cmc
cmp
jle
mov
ljmp
xchg
add
mov
popa
dec
shll
imul
outsb
push
push
or
mov
add
xchg
jg
mov
add
fcoms
pop
xor
ret
pop
xor
mov
mov
add
jno
sub
fsts
add
add
gs
hlt
stc
dec
test
jecxz
push
mov
add
insb
push
inc
xor
aad
test
xchg
add
push
add
inc
add
add
or
leave
jmp
xor
jb
mov
add
xor
mov
and
add
lock
sbb
in
out
mov
loope
sbb
push
ljmp
sbb
push
push
dec
into
repz
add
xor
mov
in
cmp
jnp
rolb
mov
sti
aas
inc
add
mov
ss
push
fsubp
repnz
mov
and
test
mov
sub
add
test
mov
add
dec
jbe
push
mov
mov
add
jbe
add
pushf
mov
outsl
gs
fistpl
sub
fnstenv
addb
sbb
movsl
xor
mov
push
arpl
rcrl
xchg
js
sbb
mov
data16
and
lods
mov
add
sub
std
sbb
out
out
inc
mov
insb
inc
add
call
push
pop
xchg
add
add
dec
int
ds
iret
jae
cmp
mov
and
mov
loopne
mov
mull
lahf
js
mov
idivb
fs
std
insl
xchg
push
add
pop
pop
or
sbb
movsb
or
pop
push
push
and
add
xchg
fwait
xchg
insl
mov
ret
rolb
mov
pop
jb
mov
add
mul
movsb
jae
cmpsb
and
mov
cmp
out
mov
add
jp
pop
mov
xlat
fucomi
js
add
add
cli
inc
lods
fistps
add
jge
xorl
lret
ljmp
sub
cmpsb
cmp
loope
add
jae
fldcw
mov
inc
add
dec
out
add
pop
into
sbb
or
dec
pop
jle
stc
add
cmp
pop
xchg
fwait
pusha
add
inc
add
mov
xchg
stos
jae
push
fwait
push
or
js
cmp
add
mov
add
js
mov
add
sti
and
sbb
mov
push
xchg
mov
fldl
cli
dec
and
mov
mov
jmp
xchg
push
pop
sbb
push
repz
sbbl
lret
push
sub
pop
mov
mov
adc
jp
dec
mov
mov
mov
lds
hlt
jo
mov
push
sti
mov
ljmp
mov
cmc
cmp
mov
add
int
add
cltd
push
push
and
mov
insl
lea
jecxz
fistpll
fildl
addb
stc
stos
mov
mov
jl
add
sbb
dec
aam
nop
add
int3
or
xor
jp
dec
xor
nop
add
adc
cltd
adc
mov
pushf
test
mov
mov
and
add
ficomps
imul
inc
add
mov
mov
mov
add
push
ret
les
rolb
pusha
add
sub
jae
and
add
pop
sub
jbe
mov
das
test
xchg
mov
jl
push
stos
mov
add
jmp
sub
sbb
add
jmp
adc
mov
int
test
add
push
mov
imul
test
icebp
jo
mov
and
pusha
add
mov
cmp
push
rorl
cmp
push
ljmp
testb
jmp
pop
test
jl
add
insb
es
out
outsb
mov
xchg
xlat
cmp
mov
lods
xchg
hlt
js
add
add
push
mov
jmp
mov
lods
insb
xor
push
fst
addb
fcomps
add
mov
mov
inc
dec
cmp
inc
add
mov
je
xchg
imul
addr16
add
inc
add
movsl
jno
fdivrs
mov
inc
out
or
scas
out
int
push
rolb
cltd
mov
test
add
dec
inc
add
clc
loopne
mov
aaa
ss
je
pushf
clc
xor
cmp
jb
mov
dec
add
dec
lods
sbb
add
mov
add
test
addb
movsb
lock
xchg
out
div
ret
notb
js,pn
add
cmc
jmp
push
fcoml
cmp
fisttpl
in
xorl
insb
fidivrs
mov
repnz
add
push
add
add
scas
add
jmp
add
add
js
and
add
sti
mov
imul
push
imul
push
pop
xchg
add
outsb
cmp
sti
sbb
xchg
imulb
mov
sbb
inc
xchg
imulb
in
cs
mov
mov
jnp
xchg
int3
push
mov
or
mov
ja
and
add
jecxz
add
jle
out
shll
fcmovbe
add
scas
mov
push
outsb
push
dec
aad
add
mov
add
xor
ja
std
fwait
push
sub
inc
in
lods
ds
lock
rolb
shll
mov
pop
pushf
mov
mov
movsb
inc
mov
ficoml
popa
and
mov
pop
mov
add
jo
mov
push
test
sub
xor
insb
add
xchg
mov
stos
sti
in
std
cmp
sbb
arpl
in
stos
and
mov
add
adc
adc
fwait
adc
sbb
sbb
gs
dec
inc
add
popa
scas
pop
sbb
or
sbb
add
add
push
repnz
mov
add
mov
add
fisttps
sub
ret
clc
sub
add
add
jge
dec
sub
push
es
fimuls
push
mov
or
inc
imul
or
inc
in
addb
lcall
adc
mov
or
mov
adc
mov
testb
cmp
imulb
adc
flds
mov
sti
push
mov
dec
jmp
sub
pop
push
lcall
push
out
fidivl
push
add
sub
mov
insb
or
add
lods
cli
pop
jbe
cmc
cmp
addb
mov
out
xor
mov
dec
push
mov
jb
mov
inc
adc
mov
ja
adc
clc
js
push
push
add
push
xor
jp
add
add
and
es
mov
sbb
or
aas
mov
bts
sub
test
fbld
outsl
or
add
popf
lahf
pop
sbb
cmpsb
mov
lgs
cs
outsl
jl
add
push
mov
mov
add
jmp
add
mov
push
in
add
mov
mov
mov
int3
addb
add
mov
shll
jns
mov
ds
or
mov
imul
jecxz
cmc
lret
aad
jnp
add
add
dec
mov
sub
or
add
jo
mov
ss
cmp
inc
mov
add
out
adc
mov
stos
cs
or
addb
repz
pop
ret
div
and
xor
adc
mov
xchg
mov
push
lock
outsb
stc
je
jns
push
add
jbe
sub
mov
adc
cli
es
and
mov
add
adc
mov
mov
adc
mov
and
fnstenv
push
frstor
mov
push
adc
clc
test
add
mov
jl
cmp
std
lahf
imull
dec
pop
shrl
mov
jnp
mov
repz
jo
mov
xor
out
mov
subl
enter
adc
mov
in
inc
dec
cld
movsl
pop
mov
sub
popa
icebp
and
push
in
xchg
push
push
aad
push
pop
mov
add
insl
stos
mov
inc
add
aas
lods
imul
sbb
ret
jmp
lods
nop
add
sahf
mov
mov
xor
mov
mov
mov
mov
add
dec
adc
mov
pop
rolb
jae
adc
mov
popf
ds
ja
in
add
mov
add
add
add
