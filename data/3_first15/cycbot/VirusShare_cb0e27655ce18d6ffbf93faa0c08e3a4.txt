add
add
add
ret
ret
ret
ret
ret
ret
gs
and
and
pop
pop
pop
pop
pop
pop
pop
pop
scas
add
add
add
imul
test
mov
mov
mov
mov
mov
mov
add
test
test
test
jl
jl
jl
jl
lock
stos
stos
stos
stos
stos
stos
stos
arpl
arpl
arpl
arpl
arpl
arpl
arpl
add
add
add
add
add
add
add
add
mov
mov
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
add
jl
add
add
xor
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
xor
push
push
out
out
out
out
out
out
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fiaddl
add
rcl
rcl
rcl
rolb
add
add
add
mov
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
cld
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
test
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
add
add
add
add
add
add
add
add
or
and
addr16
testb
inc
fwait
fwait
fwait
fwait
fwait
pavgb
loopne
dec
dec
dec
dec
dec
dec
add
add
add
add
add
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
push
push
push
add
add
and
and
xchg
xchg
xchg
cmp
cmp
cmp
sbb
addb
addb
addb
pop
pop
pop
pop
cmc
push
push
push
push
push
push
push
push
add
add
addb
addb
addb
push
push
push
push
push
push
push
push
fcmovu
fcmovu
fcmovu
add
add
add
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
sub
sub
sub
sub
addl
addl
aad
aad
aad
aad
aad
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
add
add
ljmp
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
repnz
add
fs
pop
pop
pop
mov
add
and
add
in
in
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
mov
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
das
das
das
das
das
das
das
das
ljmp
fchs
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
mov
ljmp
ljmp
rcl
rcl
rcl
sub
or
or
or
or
or
or
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
inc
inc
inc
inc
add
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
add
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
movsl
movsl
movsl
movsl
movsl
movsl
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
lods
lods
lods
pop
pop
pop
add
push
push
push
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
lea
lea
lea
outsb
outsb
es
aad
aad
aad
mov
add
add
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
insl
insl
insl
add
add
rcl
rcl
rcl
rcl
rcl
rcl
rcl
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
xor
xor
xor
add
add
xchg
popa
popa
popa
popa
popa
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sub
sub
sub
sub
sub
sub
sub
sub
cmp
add
add
add
pop
pop
clc
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
into
into
into
int
int
int
int
int
int
int
int
int
int
int
int
int
mov
mov
mov
mov
mov
mov
mov
add
add
add
sub
sub
sub
sub
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
mov
mov
mov
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
je
je
je
je
add
add
add
fcmovu
fcmovu
add
adc
adc
adc
adc
adc
adc
adc
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
pop
pop
incb
add
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
jmp
jmp
jmp
jmp
rcl
rcl
rcl
rcl
xchg
jno
jno
jno
jno
jno
jno
jno
adc
mov
mov
mov
mov
mov
mov
add
iret
add
jge
jge
jge
jge
jge
jge
jge
jge
cltd
addl
add
in
push
push
push
push
push
push
push
out
out
out
out
out
out
out
out
out
fstp
fstp
fstp
into
into
into
into
into
into
into
into
into
into
into
jb
jb
jb
jb
adc
push
push
push
push
push
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
div
div
div
div
div
div
div
div
testl
jmp
add
add
add
add
sub
sub
sub
sub
add
add
fsubl
fs
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
or
out
out
out
out
out
out
out
add
add
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
imul
xchg
aas
aas
add
add
add
adc
push
jne
jne
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
call
call
call
call
call
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
dec
dec
dec
dec
dec
dec
pop
pop
and
and
and
arpl
arpl
arpl
add
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
add
add
add
add
mov
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
cmp
cmp
mov
mov
mov
insb
insb
insb
insb
insb
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
push
push
push
push
push
rol
pop
pop
pop
pop
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
loopne
loopne
loopne
loopne
loopne
loopne
loopne
dec
les
add
add
add
add
push
push
push
push
add
and
and
and
and
and
and
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
in
in
in
in
in
pop
pop
pop
pop
pop
rol
rol
add
call
call
call
call
mov
jae
jae
jae
jae
jae
jae
jae
jae
iret
dec
dec
dec
dec
dec
dec
dec
dec
dec
popf
addl
addl
addl
test
test
and
and
and
and
and
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
jb
jb
rcl
rcl
rcl
rcl
rcl
rcll
add
mov
mov
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
jl
jl
sbb
sbb
sbb
sbb
sbb
sbb
sbb
jecxz
jecxz
jecxz
jecxz
add
add
add
popf
popf
dec
dec
dec
dec
dec
dec
dec
dec
dec
add
adc
adc
adc
adc
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rorl
insb
insb
pop
shll
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
xchg
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
mov
add
add
add
add
add
adc
mov
mov
mov
jmp
sbb
xor
xor
add
xor
xor
xor
xor
xor
xor
add
add
add
add
jp
add
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
pop
pop
mov
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
stos
stos
stos
stos
pop
pop
pop
pop
pop
pop
pop
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
pop
pop
pop
pop
pop
pop
ljmp
ljmp
mov
mov
mov
mov
dec
dec
dec
dec
call
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
add
add
add
incb
add
sti
sti
sti
sti
sti
sti
add
add
add
add
push
push
push
mov
mov
stos
stos
jge
jge
jge
jge
jge
and
and
and
and
add
add
or
mov
adc
adc
adc
adc
adc
adc
adc
clc
lds
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
inc
inc
fwait
fwait
fwait
fwait
fwait
incl
add
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
aam
aam
aam
aam
aam
adc
adc
adc
jo
push
in
in
push
push
push
push
push
push
push
sub
sub
jg
jg
jg
and
and
and
and
jecxz
jecxz
rol
rol
inc
inc
add
add
pop
mov
mov
mov
mov
mov
mov
mov
mov
ds
mov
mov
mov
enter
mov
mov
mov
repnz
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcr
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fiaddl
and
cltd
push
push
push
push
push
push
push
push
push
add
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
mov
mov
and
and
and
and
and
and
jnp
jnp
jnp
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
data16
data16
add
mov
mov
mov
mov
mov
mov
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
jp
jp
xchg
xchg
push
push
push
push
push
push
add
xor
sti
sti
sti
sti
sti
sti
sti
sti
sti
dec
dec
dec
dec
dec
dec
dec
dec
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
mov
mov
mov
xchg
xchg
xchg
xchg
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fidivrl
aam
aam
aam
aam
aam
aam
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
jg
xlat
xlat
and
add
add
add
add
gs
add
add
and
and
and
and
or
or
mov
cmp
dec
dec
dec
dec
dec
dec
mov
mov
mov
mov
mov
popa
popa
popa
popa
popa
popa
add
add
mov
rol
mov
mov
push
push
push
push
push
push
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
out
out
out
pop
pop
pop
pop
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
mov
mov
mov
xchg
xchg
xchg
xchg
xchg
xchg
xchg
add
lahf
lahf
div
div
div
div
div
div
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
jno
jno
jno
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
pop
pop
pop
pop
pop
pop
pop
pop
mov
mov
mov
mov
mov
mov
mov
lea
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
sub
sub
sub
sub
sub
add
cmp
cmp
cmp
cmp
cmp
cmp
cmp
rcl
rcl
roll
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
jne
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
add
add
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
jae
jae
jae
jae
jae
jae
rol
rol
rol
test
test
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jne
jne
jne
jne
pusha
pusha
repz
add
add
mov
mov
mov
mov
mov
mov
mov
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
mov
mov
mov
push
push
push
push
push
push
push
push
push
push
push
push
push
push
daa
daa
daa
daa
daa
daa
daa
and
and
and
and
and
and
and
and
and
out
out
out
out
out
out
out
out
jae
jae
jae
jae
jae
jae
jae
jae
mov
add
jmp
jmp
test
jmp
jmp
jmp
jmp
jmp
jmp
add
add
add
div
div
div
div
div
testb
inc
xor
add
pop
and
jns
jns
adc
adc
sbb
or
or
or
add
add
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
add
and
and
loop
loop
loop
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
or
or
or
or
or
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
add
add
sub
sub
sub
sub
sub
popl
add
add
pusha
pusha
or
or
or
or
add
ficoms
lods
lods
lods
sub
and
dec
dec
dec
dec
dec
dec
dec
dec
dec
in
in
in
in
in
in
in
in
in
or
or
sub
sub
inc
inc
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
cmp
cmp
cmp
sahf
sahf
sahf
sahf
sahf
add
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
add
imul
imul
imul
adc
std
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
push
les
test
daa
jg
jg
jg
jg
sbb
sbb
js
add
ja
ja
ja
ja
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
pop
pop
add
add
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
es
int3
fcomp
fcomp
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
lock
popf
popf
popf
popf
popf
popf
popf
popf
lock
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
test
test
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
out
out
out
out
out
out
out
out
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
add
add
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
cld
cld
cld
cld
cld
cld
repnz
add
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
push
push
push
push
push
push
push
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
rol
rol
rol
rol
rol
imul
imul
imul
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
add
or
or
or
add
add
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
and
and
and
incl
addl
addl
adc
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
pop
add
inc
inc
inc
inc
inc
inc
inc
mov
mov
mov
mov
mov
mov
mov
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
out
out
out
jmp
jmp
jae
jae
jae
jae
jae
jae
sti
sti
sti
sti
sti
sti
sti
and
and
and
jno
jno
jno
and
and
and
rcl
rcl
roll
add
add
add
and
and
and
mov
add
add
add
mov
out
out
out
out
icebp
icebp
icebp
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
push
push
push
mov
mov
mov
ret
ret
ret
ret
ret
add
add
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
sub
sub
sub
sub
add
push
add
dec
ss
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
lea
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jno
roll
es
es
ds
sbb
jge
add
add
fs
add
pop
pop
pop
pop
pop
pop
jge
jge
jge
sub
sub
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
addb
addb
addb
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
xchg
dec
dec
flds
dec
dec
dec
dec
dec
dec
dec
dec
dec
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
add
add
add
add
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
rcl
rcl
rcl
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
lret
push
push
push
push
push
push
push
push
push
push
push
add
add
add
div
div
push
push
push
push
push
push
push
push
push
push
push
push
push
push
fs
fstp
fstp
fstp
fstp
fldl
add
add
add
adc
adc
add
add
adc
adc
adc
adc
add
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
adc
adc
adc
add
add
add
push
add
addr16
add
ss
push
push
push
push
push
push
push
or
or
jl
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
enter
hlt
hlt
add
add
add
add
cmpsl
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
add
es
es
pop
pop
pop
add
add
pop
pop
hlt
hlt
hlt
hlt
hlt
hlt
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
add
add
add
mov
jl
jl
jl
jl
jl
daa
daa
daa
daa
daa
daa
daa
add
add
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
push
or
or
or
pop
pop
pop
pop
pop
pop
pop
cmp
cmp
cmp
fcmovu
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
add
add
add
lea
mov
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
add
add
add
add
add
fs
cmp
cmp
add
imul
imul
imul
inc
scas
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
add
add
imul
sbb
sbb
sbb
sbb
sbb
sbb
push
push
push
push
push
push
push
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
out
out
out
out
out
out
test
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
clc
pop
pop
cs
cs
cmp
xor
xor
xor
xor
xor
xor
pop
pop
pop
pop
pop
pop
pop
stos
stos
stos
stos
stos
stos
stos
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
mov
add
add
jmp
jmp
jmp
jmp
test
test
aas
aas
aas
js
js
js
mov
mov
mov
mov
mov
mov
mov
add
arpl
arpl
add
add
and
and
and
and
and
and
add
add
mov
mov
adc
sbb
add
xchg
jg
jg
jg
jg
jg
jg
jg
add
add
pop
addl
addl
addl
outsb
outsb
xchg
mov
mov
mov
mov
mov
mov
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
xlat
xlat
xlat
in
in
in
in
in
in
in
rcl
rcl
rcl
rcl
rolb
add
add
clc
clc
clc
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
mov
mov
mov
mov
mov
add
add
xchg
xchg
xchg
fs
or
or
or
and
mov
add
add
xchg
xchg
xchg
xchg
xchg
xchg
xchg
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
insl
insl
insl
insl
insl
insl
insl
pop
add
mov
ljmp
fcomp
fcomp
add
fmull
mov
mov
les
add
insb
insb
insb
insb
insb
insb
insb
insb
insb
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
add
add
add
push
push
push
push
push
push
push
push
push
push
push
push
jns
jns
jns
jns
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
sub
sub
sub
sub
sub
sub
sub
rcl
rcl
rcl
mov
mov
mov
addr16
sbb
sbb
div
div
div
div
div
gs
and
and
and
and
and
and
and
cltd
cltd
cltd
cltd
cltd
je
je
je
je
push
push
push
push
push
push
int3
int3
int3
add
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
dec
dec
dec
dec
dec
dec
and
and
mov
add
cmp
cmp
cmp
cmp
cmp
cmp
and
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
aas
aas
aas
aas
aas
sbb
add
mov
mov
mov
mov
rol
rol
rol
rol
ret
ret
ret
add
xor
xor
xor
xor
xor
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
dec
enter
enter
enter
enter
enter
sub
add
add
add
add
push
push
push
push
push
push
push
push
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
out
or
or
or
or
or
add
add
loopne
loopne
add
sub
sub
sub
sub
sub
sub
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
add
add
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
ret
ret
ret
div
div
div
div
div
div
div
push
push
dec
dec
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
jmp
push
push
push
add
add
or
test
test
fstp
fstp
fstp
dec
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sub
sub
sub
sub
sub
sub
sub
add
rcl
inc
inc
inc
inc
inc
inc
inc
inc
push
push
push
push
mov
mov
mov
mov
and
xchg
xchg
cltd
pop
inc
andl
test
sub
add
loop
lret
bound
or
int3
lcall
jo
sbb
adc
dec
cmp
repnz
adc
add
sbb
popf
scas
xor
pop
flds
push
add
dec
dec
aas
jo
aam
in
dec
push
mov
xor
in
popf
leave
movsl
xchg
adc
pop
icebp
shll
loop
add
sbbl
add
notl
add
in
and
das
lds
clc
mov
adc
test
in
pop
arpl
xor
mov
mov
add
outsb
roll
add
add
arpl
fcmovne
pusha
enter
add
pop
cmp
nop
in
inc
insb
adc
mov
fcmovu
push
or
add
dec
ds
fwait
sbb
pop
sbb
les
xor
cmp
shlb
add
enter
add
rcrb
mov
dec
into
sbb
adc
loop
sbb
add
add
inc
sbb
lret
jnp
sbb
and
add
ja
sub
add
add
inc
pop
xchg
xchg
test
mov
add
and
add
add
add
add
xchg
add
add
add
out
pop
test
add
adc
sub
add
int3
lahf
jle
cmp
in
inc
push
adc
add
dec
add
in
push
sbb
add
jmp
leave
out
ss
mov
add
add
addb
dec
push
xchg
ds
push
inc
sbb
arpl
mov
fcmovb
or
sub
pop
mov
aad
hlt
fisubrl
pop
sbb
xor
cmp
add
movsl
cmp
mov
add
cwtl
ljmp
sti
popf
push
out
arpl
cmp
push
out
orl
mov
mov
add
lahf
andnps
mov
mov
add
push
data16
pop
dec
sub
add
mov
dec
leave
jp
in
std
mov
add
outsl
jnp
fwait
std
pop
out
sbb
and
add
out
mov
sbbl
cmp
pop
shlb
lods
add
adc
xchg
divl
enter
or
movsl
inc
fiadds
mov
movsl
in
mov
jl
jne
push
inc
push
xchg
pop
or
imul
inc
jns
xchg
add
mov
mov
add
inc
add
mov
je
add
imul
add
pop
mov
ret
push
add
lea
add
jmp
repz
inc
xchg
mov
add
sbb
jo
dec
add
add
ret
iret
or
add
and
xchg
sbb
and
leave
push
mov
mov
add
mov
mov
add
lds
std
and
mov
je
outsb
lret
daa
xor
xchg
xlat
outsl
push
mov
lock
or
add
into
pop
insb
clc
jl
push
sub
add
add
stc
push
pop
sub
xchg
jae
push
dec
add
add
add
xchg
xchg
fistpl
les
jbe
jbe
add
jg
inc
pop
mov
add
lcall
jp
adc
jle
iret
add
insl
incb
add
and
xor
xchg
in
mov
sub
add
xlat
inc
push
das
mov
jmp
mov
jg
ljmp
loope
faddl
add
or
add
int
mov
lea
add
dec
data16
and
sbb
sub
insl
aas
sbb
mov
adc
mov
enter
leave
or
add
adc
add
lods
add
pop
push
hlt
xchg
add
jbe
mov
add
pushf
xchg
or
add
mov
add
fsubrs
add
inc
ss
add
push
fistps
add
xor
add
inc
or
push
sbb
popa
mov
dec
push
rcr
cld
flds
mov
nop
jno
add
add
ja
jbe
mov
mov
add
xchg
aas
mov
aaa
pop
push
das
add
add
pop
dec
jo
arpl
roll
mov
cmp
pop
mov
jbe
or
add
add
stc
dec
cwtl
imul
add
push
sbb
add
aam
cmp
push
add
cmpps
fsubl
add
or
shrl
add
stos
rclb
mov
dec
or
add
add
mov
push
aam
lret
decl
adc
xchg
notb
je
shll
add
push
enter
pop
adc
xlat
push
add
lods
add
cmp
xlat
in
push
shrb
add
int3
or
add
pop
pop
daa
xchg
cmp
push
jmp
and
add
cwtl
pop
ret
ja
jmp
add
pop
and
xor
add
mov
xchg
sub
add
mov
mov
add
cmp
int
xchg
xor
daa
mov
jg
mov
add
add
add
lret
jle
cmp
clc
xor
ss
add
shr
ficoms
mov
add
add
pop
cmp
add
int3
inc
mov
sbb
add
mov
add
testb
add
jbe
rol
mov
cmp
mov
mov
int3
fdivrs
aam
fcomi
ds
cmpsl
shlb
loope
xor
jne
xchg
xchg
hlt
loop
xor
push
addb
mov
dec
sar
test
movsb
add
xor
ret
cmp
shll
xchg
xor
jbe
adc
pop
imul
add
jnp
je
pop
dec
mov
add
lods
add
sub
add
push
xor
dec
xchg
jle
insl
int
lods
sti
pop
sti
or
add
add
lret
fimuls
add
mov
in
repz
ret
je
hlt
out
cmp
jb
aas
ljmp
jns
lock
mov
add
cmp
int3
hlt
jle
adc
inc
push
rorb
les
cld
movsl
aam
movsb
add
sbb
inc
mov
cmpsl
sub
add
sbb
add
add
mov
add
add
cmpsb
add
mov
push
add
and
loopne
adc
and
fidivl
add
mov
imul
das
sbb
lock
ljmp
subl
imul
jp
test
adc
pop
push
add
and
add
pop
rcrl
lods
add
lret
mulb
aaa
ror
add
push
test
mov
adc
push
cmp
movsl
inc
or
push
add
lcall
pop
fcmovb
cmp
test
add
xchg
imul
add
ret
and
add
nop
fidivs
sub
add
in
addr16
jno
sub
add
add
dec
bound
sub
add
sub
add
mov
add
jnp
mov
add
insl
stos
mov
push
add
cmpsl
sub
add
xor
mov
mov
add
mov
enter
sbb
sub
add
fwait
leave
inc
jp
inc
jnp
dec
mov
test
add
inc
sbb
ss
ret
aad
testb
push
stos
add
in
pop
lds
add
dec
or
pusha
imul
add
int3
cmp
insb
dec
xor
arpl
add
into
shrl
inc
icebp
mov
jns
and
add
cmp
add
sbb
and
mov
add
inc
dec
dec
addb
and
add
sbb
andl
bound
mov
push
xor
das
repnz
and
add
test
movsb
add
pop
imul
mov
sub
add
pop
out
xchg
pop
cmp
jg
aaa
xchg
jge
jns
cli
data16
ret
lcall
cli
push
xchg
jnp
cmp
pop
cmp
mov
fdiv
xchg
add
inc
inc
mov
add
mov
leave
inc
aam
add
add
mov
add
mov
add
push
push
jmp
dec
jns
or
loop
sub
adc
dec
dec
nop
xchg
cmp
test
stos
and
mov
mov
pop
inc
cmc
and
pushl
pop
sti
mov
fs
les
pop
or
rorl
add
push
and
add
ss
and
roll
push
mov
pop
mov
and
pop
inc
and
add
pop
cmp
hlt
pop
in
or
push
mov
add
add
sub
outsl
js
or
xchg
clc
pop
jns
adc
add
mov
aaa
lds
add
fistpl
das
adc
mov
add
loopne
cmp
loope
sarb
add
adc
arpl
xchg
sbb
push
repz
hlt
or
add
jae
jecxz
mov
add
ds
aad
mov
add
add
inc
lds
xlat
add
add
add
outsb
scas
add
into
push
add
dec
or
add
lods
call
mov
add
add
in
dec
inc
dec
dec
scas
jmp
jno
add
stos
add
cld
out
shrl
jne
dec
cmp
fwait
repz
nop
fmuls
jp
xchg
jae
jo
xchg
pop
xchg
xchg
add
insl
sbb
lret
test
mov
add
and
add
out
cmp
lea
xchg
leave
cld
push
mov
jp
add
sahf
add
push
out
pop
xchg
nop
notl
xchg
add
pop
jnp
lds
add
pop
mov
add
fcoms
inc
dec
rcr
jo
imul
jae
jg
data16
add
sbb
jge
add
or
xchg
adc
mov
lds
jo
lods
add
mov
cmp
gs
sarb
cmpsb
add
or
add
roll
add
jae
add
dec
out
hlt
sbb
add
xchg
imul
and
add
add
sbb
add
mov
pop
push
add
into
dec
lock
push
add
xchg
add
dec
imul
sbb
add
mov
insl
ja
sub
add
dec
mov
add
xchg
add
mov
push
add
outsl
ficoml
mov
add
xchg
inc
sub
daa
test
add
add
add
scas
add
dec
mov
jecxz
outsb
sbbl
adc
leave
test
popa
shll
divb
imul
or
jge
fsubr
aam
lods
add
int3
or
and
add
add
repz
jecxz
and
shll
bound
add
pop
sahf
mov
add
sti
lock
push
add
dec
int3
sub
add
add
mov
add
dec
mov
add
in
fstpt
sahf
or
add
adc
jbe
and
add
add
rcrl
dec
loop
setge
inc
cltd
dec
mov
mov
pop
stc
stos
push
add
stos
lods
add
outsl
push
add
and
pop
or
add
sub
add
jl
mov
xlat
pop
dec
add
add
push
adc
add
roll
xor
out
mov
pop
push
push
mov
hlt
sbb
jbe
mov
dec
jp
inc
test
add
je
addb
lea
sbb
push
xchg
mov
sub
add
add
add
add
hlt
xchg
add
mov
add
add
lret
cwtl
mov
je
pop
pusha
notl
add
mov
add
sub
add
jb
or
cmp
and
add
sub
stos
add
nop
in
aad
push
pop
fisttps
pop
push
dec
jg
enter
add
cli
in
ljmp
jb
sbb
sbb
pushf
push
add
ljmp
lahf
xchg
stos
pop
loopne
add
inc
add
add
pop
sbb
mov
add
add
cmp
jmp
adc
xchg
jle
lock
das
push
ss
inc
mov
push
into
lds
push
push
mov
add
add
xchg
xor
faddl
dec
sub
ds
rcrl
lds
and
add
add
inc
nop
mov
fdivp
push
add
inc
aaa
dec
cld
dec
add
xchg
push
jnp
inc
dec
lds
adc
lcall
push
xchg
xlat
out
add
pop
dec
jnp
bound
xor
add
imul
ret
sbb
sbb
add
push
shl
add
push
dec
or
add
add
add
loope
add
add
add
test
out
loop
loope
add
out
xor
sarb
cld
addb
push
das
mov
add
inc
stos
mov
and
enter
add
add
test
push
mov
add
leave
or
add
sub
add
mov
sbb
mov
das
push
add
out
xor
je
add
inc
test
add
outsb
push
inc
inc
fisubrs
movsl
inc
add
imul
add
in
sarl
xchg
mov
push
cmp
add
and
hlt
cld
sub
add
xlat
ret
xor
sub
add
jg
mov
add
xchg
cmp
lcall
sub
adc
loopne
inc
je
cmp
mov
std
fwait
adc
repnz
add
shl
je
bound
iret
mov
in
insb
mov
pop
and
and
mov
or
add
add
mov
ret
cli
leave
jg
in
dec
and
add
add
test
add
add
out
cwtl
test
fwait
mov
pop
out
pushf
sbbl
push
dec
push
push
add
xabort
and
add
add
ljmp
xchg
add
adc
mov
xor
lds
jbe
in
mov
sbb
sbb
je
add
stos
add
sub
movsb
add
add
dec
xor
dec
dec
and
add
push
add
cmp
mov
push
and
out
add
por
push
hlt
rcrb
ficompl
mov
or
sbb
jge
loope
add
inc
sbb
sbb
arpl
mov
or
add
sti
or
fistl
loop
leave
aas
testb
lahf
inc
pop
leave
jne
cmp
cmp
or
add
xchg
push
xchg
sub
nop
xor
mov
jns
mov
ss
ret
add
or
push
repnz
incb
add
jmp
sahf
jb
add
lahf
push
fildl
mov
mov
dec
inc
and
add
ljmp
hlt
ljmp
hlt
jae
push
mov
xchg
or
add
adc
xchg
movsb
add
movsb
add
scas
xchg
add
aam
mov
add
movsl
dec
mov
inc
fdivl
ljmp
pop
inc
add
xchg
xor
pop
arpl
dec
add
sti
fnsave
gs
jbe
repz
inc
pop
push
adc
mov
xchg
adc
jecxz
cltd
and
add
add
add
xchg
add
add
xchg
out
add
dec
push
shll
mov
loopne
add
push
dec
je
addb
inc
addb
and
add
std
add
bound
jp
mov
inc
dec
lcall
add
sub
cmp
jge
inc
mov
cli
adc
add
mov
add
inc
into
cwtl
inc
je
and
add
xchg
pop
lods
add
clc
jecxz
addb
jno
mov
add
mov
inc
inc
mov
iret
dec
sbb
fs
out
add
or
add
icebp
gs
push
add
ret
push
mov
outsb
jl
fs
loop
add
rorb
pop
push
lea
int
cmpsb
add
daa
loop
xchg
push
stos
lret
xchg
push
add
and
add
add
xor
add
add
jmp
nop
mov
lret
cli
adc
cmpsl
cmp
mov
outsb
divl
mov
push
add
pop
popa
push
fcompl
ret
test
add
xchg
and
add
repnz
xchg
sub
add
add
jno
add
rolb
add
add
cltd
mov
cmp
dec
loopne
lods
add
das
rolb
xchg
pop
xchg
lret
push
and
add
add
cli
insb
and
pushf
dec
mov
add
fidivs
cmp
adc
add
das
and
add
dec
push
je
mov
addb
mov
repz
hlt
movsb
add
and
add
or
mov
add
add
add
cmpsl
mov
add
jo
mov
into
jle
sahf
inc
xchg
out
int3
or
pop
fimuls
add
push
das
inc
adc
jmp
mov
mov
add
sti
in
sahf
xchg
add
add
lea
add
add
add
jp
mov
sub
add
cmp
mov
add
jle
sti
jno
xor
add
sub
add
faddp
cmpsb
add
into
lret
addb
push
jle
aam
pushf
jbe
dec
sub
add
test
add
mov
shll
cmp
mov
mov
divl
in
inc
push
add
and
add
out
mov
mov
add
lret
inc
mov
add
outsb
push
or
jmp
xchg
bound
xchg
addb
jbe
add
cmc
sahf
or
add
pushl
push
int3
ret
xchg
xchg
in
test
add
sbb
mov
add
xchg
add
add
cmpsb
add
aad
addb
iret
outsb
inc
mov
push
arpl
xchg
sahf
add
mov
roll
or
add
pusha
sub
add
pop
pop
hlt
dec
sbb
call
in
mov
ss
mov
add
cmpsb
add
sbb
xchg
push
mov
add
sub
add
add
push
testb
lahf
mov
mov
add
cld
add
add
sub
scas
fistpl
cmpsb
add
mov
mov
mov
add
fyl2x
add
aas
inc
jp
xchg
ret
test
add
ret
sbb
das
xchg
or
adc
sbb
jbe
mov
add
test
add
xchg
and
add
push
add
add
add
add
add
out
mov
mov
inc
cmp
pusha
addr16
jp
pop
mov
xor
push
add
push
sbb
inc
cmpl
in
insb
bound
xchg
add
insl
sbb
inc
mov
mov
add
fbld
dec
test
out
sub
add
xor
add
into
cli
mov
add
add
add
out
cmp
jne
and
add
rcr
pop
push
movsl
sti
dec
ret
cmp
xchg
mov
mov
add
cmp
jle
int3
mov
int3
in
or
add
xor
hlt
push
and
add
inc
outsb
adc
add
sbb
add
shlb
add
mov
lahf
adc
call
mov
ret
xchg
jno
push
xchg
xchg
add
add
xor
xlat
mov
add
js
pop
adc
cld
data16
xchg
fldcw
add
push
push
add
test
add
aad
mov
sbb
out
sarl
dec
and
add
call
xchg
fwait
jae
test
xchg
or
add
add
pop
pushf
repz
mov
add
jnp
notl
add
outsl
mov
push
mov
add
push
add
mov
push
rorb
add
js
pop
stos
xor
addr16
sbb
mov
aaa
and
add
xchg
loopne
fisubl
out
add
cmp
add
add
sub
add
xor
mov
add
mov
pop
mov
mov
addb
push
scas
add
adc
ljmp
add
or
add
mov
add
das
inc
repz
mov
loop
add
movsl
int
jg
aam
mov
add
leave
and
add
mov
add
mov
hlt
mov
xor
pop
sbb
add
sahf
addb
push
push
add
xchg
add
not
cmpsb
add
int
stos
sarb
fs
stos
mov
add
pop
gs
ds
add
int3
gs
add
or
add
jle
mov
add
and
lahf
or
lea
add
add
ja
aas
mov
mov
sbb
stc
insl
rorb
jg
mov
aas
popf
and
add
mov
idivb
in
mov
add
mov
pop
xchg
sub
lds
add
mov
lcall
pop
sbb
push
mov
mov
sub
movl
lea
push
call
sub
add
and
mov
mov
and
test
je
mov
push
push
cld
call
test
jne
mov
add
push
push
push
push
call
test
jne
xor
push
ret
lea
andl
push
push
and
call
push
cmp
lea
jne
movzbl
or
pop
mov
add
not
cld
imul
and
jne
call
rorb
jmp
cmp
mov
add
ret
mov
mov
mov
inc
or
lea
lea
add
lea
shr
lock
sub
and
je
push
mov
jmp
fadds
dec
dec
rorb
mov
rcrb
xchg
cwtl
lods
icebp
mov
xor
jl
inc
cmpsb
add
in
aaa
cmpsl
addl
inc
lock
test
lret
int3
jae
add
add
std
jl
dec
mov
add
pop
int3
ljmp
pusha
aad
mov
add
push
add
xor
rcrb
xor
add
dec
sbb
add
xchg
inc
mov
jbe
lcall
out
inc
add
and
add
add
push
jle
cmc
mov
add
or
rcrl
lcall
inc
xor
mov
add
mov
jecxz
mov
sbb
mov
int3
scas
inc
inc
mov
add
sub
add
add
cld
xlat
mov
add
pop
sub
add
add
out
add
add
sbb
das
add
xchg
insb
sub
add
xchg
add
sbb
pop
dec
jbe
xchg
pushf
mov
ja
aaa
sub
add
cmc
pop
aas
adc
and
mov
add
pop
in
imul
cmp
das
dec
test
add
mov
cli
sub
into
inc
jge
xor
sar
dec
je
xchg
or
xor
fidivrs
xchg
lods
cmp
add
add
std
cmpsb
add
adc
aaa
jb
out
rorb
add
cmp
add
dec
push
xchg
add
jmp
pop
xchg
push
sahf
pextrw
xor
pop
adc
inc
and
add
scas
ja
shl
mov
sti
cmc
inc
inc
lret
xchg
pop
imul
into
or
add
pop
or
add
sti
inc
mov
add
add
mov
fdivs
fwait
adc
push
test
and
add
orl
xchg
xor
aas
inc
jo
icebp
out
add
outsb
pop
or
add
xor
xor
add
xor
mov
add
lock
dec
add
and
add
push
inc
inc
int3
pop
xchg
adc
out
adc
add
push
out
or
add
push
and
add
int3
ficoml
ret
mov
add
repnz
xlat
xchg
jns
shl
test
mov
stc
ljmp
aas
fidivs
stc
inc
ret
sub
ss
leave
jb
loopne
mov
add
add
xchg
shll
xchg
in
imul
addr16
add
or
mov
inc
adc
add
mov
add
test
add
in
jp
icebp
jle
xchg
add
frstor
das
push
mov
add
sbb
xchg
push
or
scas
add
mull
add
mov
sti
pop
das
adc
add
inc
or
inc
jne
clc
pop
in
inc
xchg
push
mov
add
pop
pusha
cmc
mov
push
int3
in
inc
jmp
add
test
add
int3
and
add
and
add
cltd
lods
add
pushf
jbe
repz
add
pop
call
sbb
jo
xchg
cmp
add
addb
cwtl
sub
sub
fidivl
cmp
sahf
push
add
push
into
mov
in
xchg
jmp
push
arpl
cmp
jl
mov
bound
pop
ss
mov
ret
lods
add
adc
add
add
stc
movb
add
mov
add
das
les
add
sbb
int3
iret
xor
push
gs
jno
inc
sahf
sub
add
pop
cmpsb
add
cmp
push
add
push
pop
out
mov
xchg
fwait
out
gs
inc
cwtl
jo
cmp
testl
mov
mov
sahf
ljmp
jne
add
mov
add
inc
mov
sub
add
out
cli
jae
scas
add
mov
add
shll
loope
xor
add
popa
cmpsb
add
cltd
sbb
or
add
push
add
mov
add
rorb
leave
stos
add
push
movl
add
jnp
insb
pop
loope
add
push
lcall
loopne
cltd
adc
repz
pop
fs
in
push
lock
stos
mov
add
add
inc
push
std
add
add
and
add
ss
cli
pusha
shrb
aad
jge
inc
mov
add
add
movsl
push
jle
stos
add
lds
inc
push
test
test
add
xchg
mov
ss
enter
xacquire
add
cli
push
sub
int
add
add
rcl
out
xor
loop
lds
add
pop
adc
add
movsl
cmp
push
cmp
fwait
jno
dec
mov
test
add
pop
icebp
jecxz
add
adc
ss
bound
sahf
mov
mov
and
jae
stc
xchg
mov
cmp
idivl
add
mov
add
ss
sub
cmp
xor
call
incb
add
sub
lcall
mov
add
add
push
add
lahf
sbb
pop
loopne
add
negb
push
add
outsb
xlat
inc
outsb
lds
sub
add
jmp
pop
add
adc
loope
dec
push
ds
lock
mov
addb
xchg
jae
int3
movsl
mov
pop
jns
mov
popa
popa
dec
bound
add
dec
enter
xor
out
cmp
mov
add
int
sub
add
adc
insl
adc
add
movsl
mov
xlat
clc
sahf
add
add
xchg
out
ret
add
inc
clc
in
inc
addr16
sbb
add
lret
imul
push
jae
enter
add
fs
inc
data16
add
test
push
orl
out
push
lock
out
fsub
jge
fs
add
add
sub
add
add
into
lea
test
add
aaa
cmp
xor
inc
addb
add
adc
test
add
inc
in
lods
jns
jg
lret
mov
xchg
add
add
jne
jo
dec
movsb
add
jbe
addr16
jbe
push
jg
insl
push
iret
ret
jg
or
xor
cwtd
data16
add
rcll
incb
add
add
add
adc
inc
out
jbe
add
in
into
loopne
fadd
and
add
add
add
mov
add
rolb
push
fs
arpl
dec
cwtl
or
add
in
mov
aam
inc
ss
sarl
mov
add
idivb
mov
mov
inc
dec
movsb
add
aaa
data16
testl
cmp
xchg
xlat
and
add
popa
jecxz
iret
jns
sti
push
add
lock
add
ror
mov
repz
cmp
jb
push
neg
iret
xchg
sbb
push
mov
add
sub
or
add
ret
jg
cmp
dec
mov
hlt
add
add
mov
icebp
rorl
add
xlat
pop
inc
mov
cmpsb
add
cmpsl
pop
xchg
stc
sahf
stos
add
sbb
push
js
lods
sbb
add
and
add
push
add
mov
sbb
movsl
xchg
add
out
cmp
add
je
mov
add
ljmp
int3
xor
shll
andl
or
inc
bound
add
add
mov
fwait
fwait
loop
ret
pop
jp
pop
arpl
pop
ja
jae
cmp
lret
std
ljmp
and
add
shlb
fs
fstpl
add
add
cmp
push
pop
rolb
add
push
outsb
loop
mov
cwtl
mov
add
pop
xchg
mov
cmp
add
into
sub
add
push
fidivrs
test
add
sbb
pop
insb
inc
mov
add
sub
add
add
add
add
and
das
repnz
sub
add
sub
add
or
add
addr16
das
icebp
mov
cmp
loop
outsl
xchg
add
or
inc
sbb
add
add
lea
adc
rclb
mov
and
add
add
fwait
test
add
add
xchg
inc
in
mov
add
add
mov
js
or
add
and
add
cmc
lret
insl
xor
inc
into
add
pop
ljmp
push
pop
rcr
xor
popf
or
add
bound
add
add
add
aaa
push
add
hlt
sub
add
cmpsb
add
and
fcmovnu
sahf
adc
ret
sub
add
mov
mov
fwait
cld
fs
or
cmpsl
aam
or
add
jle
pop
mov
rorl
test
add
xchg
push
icebp
lret
add
mov
popf
push
inc
js
add
jl
shll
insl
adc
sbb
cmp
hlt
xlat
jne
out
pop
int3
xor
xchg
mov
add
cmpsb
add
mull
xchg
int
cmpsl
push
add
or
add
rcrb
mov
dec
cmc
add
fs
ret
add
ror
les
add
mov
add
adc
sbb
idivl
jmp
je
or
add
clc
mov
push
push
add
lods
add
add
sti
lcall
mov
add
insl
and
add
test
loope
rcrb
hlt
xchg
push
pop
push
not
ljmp
in
cmp
out
add
sbb
loope
dec
inc
imul
xchg
add
adc
xor
mov
add
call
mov
or
add
inc
add
adc
pop
add
add
push
sub
add
push
sbb
dec
test
push
add
pop
ljmp
jae
jg
pop
dec
inc
cltd
mov
repnz
adc
hlt
imul
inc
jnp
shlb
pop
or
ret
or
add
push
jge
pop
mov
or
add
mov
punpckhbw
push
push
jle
xchg
xchg
add
imull
cmc
cmc
lret
add
sbb
div
fwait
add
out
mov
popa
addr16
jo
cmp
add
imul
add
mov
lret
imull
push
mov
add
lret
dec
jo
lea
add
idiv
sti
hlt
data16
xchg
xor
inc
mov
btsl
int
add
inc
fcoml
imul
push
testl
test
push
add
cmc
and
xlat
add
jmp
popa
jno
jns,pt
das
ljmp
mov
and
mov
repz
mov
jne
and
add
add
cmp
mov
push
rorl
add
add
sbb
in
jmp
stos
addb
fs
in
dec
push
mov
jae
sbb
add
or
add
in
or
add
fsubl
mov
pop
imull
mov
bound
add
mov
mov
test
add
sub
add
mov
add
hlt
push
fisubl
add
sub
cmpsl
addb
stc
adc
imul
out
inc
mov
jmp
xor
mov
rclb
stos
add
adc
xor
in
add
ror
mov
add
pop
out
mov
cwtl
addb
and
add
inc
sbb
pmaxsw
mov
add
stc
jb
add
cli
or
add
mov
fcompl
cmp
add
movsb
add
sbb
mov
sbb
fstps
add
fldt
mov
mov
jge
dec
fs
inc
sub
add
sbb
popf
xor
aam
lret
lahf
mov
add
inc
xchg
add
ss
sbb
stos
mov
push
add
push
add
lahf
push
inc
jl
add
popf
jl
xchg
in
loope
add
sbb
sbb
cmc
add
aas
imul
push
cmp
add
add
fdivrs
mov
ficomps
cltd
les
add
jmp
aaa
lcall
fadd
xchg
aaa
fnsave
pop
call
aam
push
add
out
addb
adc
sub
add
ljmp
int3
roll
add
inc
mov
lret
cmp
sbb
lods
add
pop
dec
addr16
inc
sti
imul
add
add
mov
lods
add
cmp
or
cld
in
repnz
jae
add
test
add
cmp
pop
and
add
add
cmpsl
mov
sbb
sahf
pop
lret
or
add
out
addb
daa
nop
xchg
shll
in
or
jnp
imul
push
fmul
fstl
xor
add
xchg
rcll
inc
int3
out
inc
pop
roll
in
in
jge
mov
mov
lds
add
mov
add
or
ljmp
add
pop
add
pop
popa
and
add
mov
stc
cwtl
sub
add
mov
daa
mov
push
int
add
iret
in
fistl
adc
fldenv
add
lods
push
jmp
cmp
sbb
add
xchg
sbb
in
bound
add
jecxz
jb
xlat
sub
add
outsb
pop
mov
lods
add
fldt
out
mov
mov
mov
add
add
or
add
ret
iret
jp
jmp
data16
std
dec
addb
addr16
mulb
add
mov
iret
inc
xchg
push
add
sti
mov
loope
cmpsb
add
pusha
ss
mov
add
or
add
add
lahf
and
add
sbb
push
shl
pop
lret
mov
add
add
repnz
inc
jl
jb
fldenv
add
inc
fcomp
add
add
cwtl
test
add
xchg
add
add
negb
push
and
mov
mov
lahf
push
adc
repnz
add
ficomps
mov
cmp
add
loopne
add
and
add
mov
add
outsl
dec
dec
xorl
rcrb
out
add
aaa
jne
das
ds
imul
sbb
sbb
sbb
cltd
mov
add
lods
aaa
push
jo
xchg
mov
sarb
movb
stos
add
add
out
add
clc
fldenv
mov
arpl
pop
push
clc
repnz
nop
nop
jae
fcomps
aaa
add
clc
repnz
nop
nop
jae
add
mov
clc
repnz
nop
nop
jae
popl
jbe
pop
jbe
icebp
add
and
add
clc
repnz
nop
nop
jae
add
dec
data16
shl
xchg
cld
nop
nop
jae
cmp
dec
stos
mov
push
mov
xchg
ret
pushf
mov
jl
add
push
hlt
scas
add
imul
andl
add
mov
jl
add
and
icebp
clc
repnz
nop
nop
jae
cld
mov
and
add
decl
push
mov
leave
nop
jmp
add
lret
movzwl
push
mov
xchg
ret
add
lock
fadds
call
inc
add
adc
cltd
add
lret
add
clc
repnz
nop
nop
jae
add
int3
jge
add
push
clc
repnz
nop
nop
jae
inc
add
mov
add
push
xor
sub
dec
cmp
repnz
nop
nop
jae
jge
mov
add
dec
fld1
clc
repnz
nop
nop
jae
cmp
add
add
xchg
xchg
nop
push
mov
leave
nop
jmp
jl
add
ja
jbe
clc
repnz
nop
nop
jae
jge
ljmp
push
add
push
mov
leave
nop
jmp
add
add
push
mov
xchg
ret
add
add
dec
inc
inc
and
add
nop
push
mov
leave
nop
jmp
cld
mov
cmp
ret
rorl
mov
xchg
ret
faddl
add
xchg
mov
fistpl
nop
push
mov
leave
nop
jmp
pop
adc
pop
jp
pushl
clc
repnz
nop
nop
jae
adc
push
icebp
test
nop
push
mov
leave
nop
jmp
pop
fmuls
sbb
add
push
ss
mov
nop
push
mov
leave
nop
jmp
data16
add
add
fwait
clc
repnz
nop
nop
jae
inc
and
lock
icebp
adc
dec
pop
nop
push
mov
leave
nop
jmp
add
dec
add
jle
add
nop
jmp
add
add
add
mov
add
clc
repnz
nop
nop
jae
mov
leave
call
clc
repnz
nop
nop
jae
add
sbb
push
nop
push
mov
leave
nop
jmp
add
add
daa
add
sbb
add
sbb
add
add
push
pop
xchg
test
add
sbb
clc
repnz
nop
nop
jae
add
dec
mov
add
push
mov
add
push
mov
xchg
ret
add
add
bound
mov
push
mov
xchg
ret
add
pop
add
jbe
add
xorl
clc
repnz
nop
nop
jae
data16
add
adc
shlb
add
dec
pop
clc
repnz
nop
nop
jae
pop
add
add
jno
subl
push
mov
xchg
ret
add
add
jl
sub
add
in
leave
nop
jmp
ljmp
add
sbb
nop
push
mov
leave
nop
jmp
add
mov
mov
mov
add
lret
jmp
incl
sbb
add
add
inc
add
add
inc
push
push
mov
xchg
ret
push
add
data16
push
mov
xchg
ret
mov
icebp
adc
cld
nop
nop
jae
sbb
sub
add
add
add
add
pushl
clc
repnz
nop
nop
jae
jge
popl
dec
cmc
add
add
clc
repnz
nop
nop
jae
add
pop
mov
cmp
pop
push
mov
xchg
ret
jge
add
in
jno
add
add
ret
clc
repnz
nop
nop
jae
pop
icebp
add
add
or
inc
add
add
lahf
dec
clc
repnz
nop
nop
jae
mov
push
jl
data16
sbb
out
inc
add
je
add
add
loop
add
or
add
push
push
mov
xchg
ret
add
mov
add
xchg
add
add
push
mov
xchg
ret
pop
je
popl
push
add
ret
sbb
nop
jae
add
enter
mov
clc
repnz
nop
nop
jae
add
fsubl
add
clc
repnz
nop
nop
jae
sbb
lock
push
mov
xchg
ret
inc
dec
push
add
lods
add
add
xor
inc
add
and
cli
stc
mov
clc
repnz
nop
nop
jae
cmp
icebp
mov
add
dec
cmp
push
mov
leave
nop
jmp
add
cltd
jbe
cmc
pop
jne
clc
repnz
nop
nop
jae
add
rcll
jo
mov
xchg
mov
push
add
add
jl
data16
dec
jl
add
je
fmull
push
clc
repnz
nop
nop
jae
add
jl
jbe
add
jle
mov
push
mov
xchg
ret
mov
add
mov
add
xchg
xchg
ret
add
add
jl
rol
clc
repnz
nop
nop
jae
add
dec
mov
clc
repnz
nop
nop
jae
push
add
ljmp
nop
push
mov
leave
nop
jmp
jbe
lret
add
push
mov
xchg
ret
add
jbe
add
icebp
add
jno
roll
mov
xchg
ret
rolb
add
add
pop
push
mov
clc
repnz
nop
nop
jae
add
scas
add
loop
mov
clc
repnz
nop
nop
jae
std
fadds
add
pop
inc
xor
test
repnz
nop
nop
jae
add
mov
add
cmp
add
mov
inc
jecxz
repnz
nop
nop
jae
add
add
inc
and
repnz
nop
nop
jae
mov
dec
in
dec
add
add
xchg
jp
popa
clc
repnz
nop
nop
jae
add
mov
add
push
mov
test
add
nop
push
mov
leave
nop
jmp
add
jge
clc
repnz
nop
nop
jae
jge
int3
add
add
xor
add
stc
lss
clc
repnz
nop
nop
jae
add
sub
push
mov
xchg
ret
add
add
add
add
decl
push
mov
xchg
ret
add
add
adc
add
add
clc
repnz
nop
nop
jae
push
fdiv
add
add
xchg
mov
push
mov
xchg
ret
cmp
jl
mov
push
clc
repnz
nop
nop
jae
add
add
pushf
add
vpsubsb
nop
jmp
xchg
add
dec
cld
outsb
add
add
repnz
nop
nop
jae
add
mov
adc
push
mov
add
add
add
jecxz
cmc
or
pop
daa
add
add
insl
mov
clc
repnz
nop
nop
jae
jl
add
add
sub
repnz
nop
nop
jae
faddl
in
add
dec
dec
cmp
pop
push
mov
xchg
ret
add
mov
jl
add
pop
lea
push
mov
xchg
ret
add
dec
rcrl
mov
xchg
ret
add
cmp
or
add
sbb
push
mov
xchg
ret
add
inc
jbe
push
add
xor
clc
repnz
nop
nop
jae
std
int3
cld
icebp
pop
dec
popf
pushf
or
add
pop
clc
repnz
nop
nop
jae
and
add
ds
jge
push
shlb
add
add
leave
pusha
clc
repnz
nop
nop
jae
rorl
add
add
add
ret
clc
repnz
nop
nop
jae
add
add
dec
dec
std
loopne
pop
mov
clc
repnz
nop
nop
jae
fmuls
dec
pop
push
mov
xchg
ret
popl
add
add
mov
add
push
mov
xchg
ret
add
jbe
aaa
jmp
ljmp
pop
dec
sbb
jl
mov
inc
and
clc
repnz
nop
nop
jae
add
add
add
clc
repnz
nop
nop
jae
add
add
dec
mov
add
repnz
nop
nop
jae
int3
cltd
pushf
insb
daa
xor
clc
repnz
nop
nop
jae
sbb
inc
add
shr
clc
repnz
nop
nop
jae
add
fdivrs
test
add
push
mov
xchg
ret
adc
dec
popl
test
cld
nop
nop
jae
inc
and
jbe
jae
sbb
push
mov
xchg
ret
and
add
add
mov
repnz
nop
nop
jae
fdivs
in
test
nop
push
mov
leave
nop
jmp
add
in
lret
testl
jae
add
in
add
push
mov
in
inc
call
add
lods
pop
add
test
sbb
add
imul
nop
jae
add
add
mov
cmc
mov
push
mov
xchg
ret
add
push
pop
jbe
add
in
leave
nop
jmp
add
add
inc
rcrl
repnz
nop
nop
jae
add
je
add
add
pand
push
mov
xchg
ret
add
add
add
repz
repnz
nop
nop
jae
add
add
dec
inc
add
test
add
sar
sbb
jmp
enter
in
leave
nop
jmp
jbe
inc
dec
jno
add
es
nop
push
mov
leave
nop
jmp
ljmp
add
jae
dec
sub
scas
xchg
xchg
ret
je
dec
add
js
nop
push
mov
leave
nop
jmp
add
dec
add
dec
push
repnz
nop
nop
jae
faddl
rolb
adc
jbe
clc
repnz
nop
nop
jae
enter
add
add
clc
repnz
nop
nop
jae
add
sbb
dec
push
testl
jmp
add
add
add
lcall
nop
nop
jae
jno
add
add
mov
add
mov
xchg
ret
data16
add
add
mov
clc
repnz
nop
nop
jae
add
mov
xchg
sbb
cld
nop
nop
jae
jno
add
icebp
add
jl
push
mov
add
add
push
addr16
mov
roll
add
repnz
nop
nop
jae
add
pop
add
jge
inc
push
mov
xchg
ret
add
add
dec
mov
les
push
mov
leave
nop
jmp
pop
popl
pushf
cwtd
and
add
fwait
clc
repnz
nop
nop
jae
int3
popl
sbb
adc
repnz
nop
nop
jae
add
int3
add
mov
into
cmp
mov
add
push
mov
leave
nop
jmp
add
push
sbb
mov
push
mov
xchg
ret
add
and
sbb
clc
repnz
nop
nop
jae
mov
dec
cltd
add
int
pop
jae
repnz
nop
nop
jae
adc
add
gs
clc
repnz
nop
nop
jae
add
add
mov
push
mov
xchg
ret
dec
je
add
dec
jo
jne
nop
push
mov
leave
nop
jmp
pushf
add
mov
leave
nop
jmp
pushf
inc
mov
add
das
push
push
mov
xchg
ret
ljmp
sbb
add
mov
clc
repnz
nop
nop
jae
cmc
add
enter
push
nop
push
mov
leave
nop
jmp
inc
pop
add
int3
push
das
call
clc
repnz
nop
nop
jae
fadds
add
pop
pusha
nop
push
mov
leave
nop
jmp
adc
stc
add
sarl
nop
push
mov
leave
nop
jmp
add
and
cli
mov
popl
xchg
ret
sbb
dec
jl
add
cmp
nop
push
mov
leave
nop
jmp
push
std
faddl
rorb
or
repnz
nop
nop
jae
rorl
push
clc
repnz
nop
nop
jae
add
mov
ljmp
mov
mov
xchg
ret
inc
add
dec
fld1
push
mov
xchg
ret
jbe
add
in
add
scas
jne
clc
repnz
nop
nop
jae
jbe
cld
cmp
add
repnz
nop
nop
jae
icebp
add
add
add
pop
pop
push
mov
xchg
ret
add
add
add
add
pop
add
add
imul
mov
xchg
ret
add
mov
rolb
sbb
cmpsl
add
add
add
adc
dec
add
add
mov
dec
mov
clc
repnz
nop
nop
jae
add
add
sbb
sbb
repnz
nop
nop
jae
icebp
add
add
pop
mov
push
mov
xchg
ret
mov
add
pop
add
clc
repnz
nop
nop
jae
je
dec
data16
or
add
cld
nop
nop
jae
popl
inc
jl
add
push
push
push
mov
xchg
ret
jl
cmc
pop
jl
add
icebp
jae
adc
push
mov
xchg
ret
xchg
add
add
mov
nop
nop
jae
add
add
push
add
testb
nop
push
mov
leave
nop
jmp
mov
add
mov
push
mov
leave
nop
jmp
add
pushf
add
pop
push
aad
clc
repnz
nop
nop
jae
add
jno
rorl
rep
clc
repnz
nop
nop
jae
je
pushf
inc
add
in
imul
nop
jae
add
push
mov
add
and
insl
inc
add
roll
add
data16
mov
jmp
push
mov
leave
nop
jmp
ds
push
fadds
add
mov
xchg
ret
add
add
movsl
mov
push
mov
xchg
ret
add
add
cmc
add
mov
add
xor
clc
repnz
nop
nop
jae
add
jbe
add
daa
push
nop
push
mov
leave
nop
jmp
jno
add
mov
or
add
dec
les
or
repnz
nop
nop
jae
add
add
pop
ja
clc
repnz
nop
nop
jae
lock
cmpsb
add
jge
cmpl
mov
leave
nop
jmp
add
jbe
imul
test
xchg
ret
add
add
stc
push
and
test
repnz
nop
nop
jae
in
rcl
fwait
nop
push
mov
leave
nop
jmp
enter
mov
inc
add
fwait
clc
repnz
nop
nop
jae
jbe
enter
cltd
add
pop
clc
repnz
nop
nop
jae
add
add
add
add
nop
push
mov
leave
nop
jmp
add
add
testb
repnz
nop
nop
jae
and
in
fmuls
cmp
clc
repnz
nop
nop
jae
dec
add
mov
add
lea
nop
push
mov
leave
nop
jmp
pushf
add
dec
mov
shr
clc
repnz
nop
nop
jae
je
fcomps
rcl
sub
add
repnz
nop
nop
jae
cwtd
inc
dec
add
mov
push
push
mov
xchg
ret
jl
stc
sbb
icebp
add
sbb
add
repnz
nop
nop
jae
std
jno
and
push
popl
jae
add
std
dec
add
xchg
add
add
jecxz
ljmp
jae
add
je
add
push
push
mov
xchg
ret
enter
stc
push
add
pop
mov
clc
repnz
nop
nop
jae
add
mov
stos
nop
push
mov
leave
nop
jmp
lock
add
jbe
jl
add
clc
repnz
nop
nop
jae
dec
in
add
int3
add
leave
push
mov
xchg
ret
dec
add
ds
pop
clc
repnz
nop
nop
jae
adc
add
add
mov
push
mov
xchg
ret
popf
add
inc
mov
nop
jbe
cmp
nop
push
mov
leave
nop
jmp
jbe
inc
call
add
clc
repnz
nop
nop
jae
popl
add
add
add
add
mov
mov
xchg
ret
add
add
add
add
add
push
mov
xchg
ret
jbe
pop
adc
add
lea
repnz
nop
nop
jae
mov
fadds
add
add
int3
jle
fcoml
add
data16
add
push
push
mov
xchg
ret
in
ds
std
xchg
pop
pop
push
mov
xchg
ret
mov
add
adc
push
mov
xchg
ret
popl
add
add
leave
nop
push
mov
leave
nop
jmp
rolb
add
popl
add
inc
mov
sti
nop
push
mov
leave
nop
jmp
in
add
add
into
addb
stc
or
clc
repnz
nop
nop
jae
push
popl
add
mov
push
mov
xchg
ret
add
dec
rclb
mov
clc
repnz
nop
nop
jae
popf
dec
data16
cld
add
clc
repnz
nop
nop
jae
inc
add
add
sub
clc
repnz
nop
nop
jae
add
dec
pop
add
mov
xor
sub
add
add
or
pop
cmp
mov
xchg
ret
rolb
add
sbb
add
mov
leave
nop
jmp
inc
add
je
add
add
nop
push
mov
leave
nop
jmp
add
add
test
repnz
nop
nop
jae
dec
std
aam
pop
push
mov
xchg
ret
in
add
add
and
add
push
clc
repnz
nop
nop
jae
add
add
or
repnz
nop
nop
jae
mov
sbb
cld
nop
nop
jae
sbb
cmc
leave
mov
clc
repnz
nop
nop
jae
add
add
repnz
nop
nop
jae
sbb
add
sbb
movsl
add
clc
repnz
nop
nop
jae
inc
add
data16
movzwl
clc
repnz
nop
nop
jae
int3
sbb
add
imul
repnz
nop
nop
jae
add
add
add
sti
mov
push
mov
xchg
ret
lock
mov
pushf
pushf
data16
jno
clc
repnz
nop
nop
jae
add
mov
pop
add
sub
add
mov
nop
push
mov
leave
nop
jmp
mov
mov
and
push
dec
push
mov
xchg
ret
xchg
adc
add
add
mov
ret
push
mov
xchg
ret
add
cmc
add
mov
add
repnz
nop
nop
jae
mov
add
sbb
clc
repnz
nop
nop
jae
add
add
add
jge
and
add
add
clc
repnz
nop
nop
jae
jl
pop
pop
add
add
inc
push
push
mov
xchg
ret
add
cld
add
std
push
xor
push
mov
xchg
ret
je
add
add
dec
and
add
mov
push
mov
xchg
ret
stc
mov
cld
dec
inc
add
test
add
clc
repnz
nop
nop
jae
dec
add
loope
dec
adc
add
nop
jmp
add
sub
add
call
nop
jmp
mov
jne
clc
repnz
nop
nop
jae
dec
sbb
cld
decl
nop
nop
jae
add
push
mov
add
ret
clc
repnz
nop
nop
jae
add
in
pushf
iret
and
push
mov
xchg
ret
sbb
pop
jno
dec
sti
push
clc
repnz
nop
nop
jae
add
add
add
ds
xor
test
add
jmp
dec
add
add
push
add
or
add
fld1
clc
repnz
nop
nop
jae
add
cld
add
add
stos
add
and
in
leave
nop
jmp
add
add
pushf
push
ljmp
enter
add
std
inc
mov
dec
out
andl
nop
nop
jae
add
clc
repnz
nop
nop
jae
dec
add
mov
push
add
mov
nop
push
mov
leave
nop
jmp
shlb
fadds
dec
fdivs
fistl
adc
ret
jno
cld
jbe
add
repnz
nop
nop
jae
add
enter
cmp
ret
mov
clc
repnz
nop
nop
jae
push
lock
fidivrl
mov
clc
repnz
nop
nop
jae
fsubs
dec
ds
pop
clc
repnz
nop
nop
jae
fadds
pop
dec
mov
add
xchg
jne
clc
repnz
nop
nop
jae
push
add
add
clc
repnz
nop
nop
jae
and
inc
add
clc
repnz
nop
nop
jae
xchg
ljmp
adc
add
add
add
data16
add
add
add
mov
push
mov
leave
nop
jmp
add
popf
pop
fmuls
add
clc
repnz
nop
nop
jae
jl
pop
add
add
fdiv
mov
push
mov
xchg
ret
add
cld
stc
mov
loop
mov
xchg
ret
sbb
add
rolb
js
lcall
leave
nop
jmp
add
ds
pop
jno
pop
call
nop
jmp
add
push
clc
repnz
nop
nop
jae
mov
pop
adc
mov
nop
push
mov
leave
nop
jmp
add
lock
adc
add
clc
repnz
nop
nop
jae
pop
mov
add
mov
adc
clc
repnz
nop
nop
jae
add
mov
xchg
ret
xchg
mov
add
mov
nop
push
mov
leave
nop
jmp
add
add
cmpsb
add
xchg
call
clc
repnz
nop
nop
jae
push
xchg
sbb
jns
push
mov
xchg
ret
je
add
add
add
clc
repnz
nop
nop
jae
sbb
mov
cld
nop
nop
jae
add
pop
inc
push
push
mov
xchg
ret
add
add
add
add
pop
ret
clc
repnz
nop
nop
jae
icebp
add
add
add
mov
push
mov
xchg
ret
add
add
mov
clc
repnz
nop
nop
jae
add
jge
and
add
mov
clc
repnz
nop
nop
jae
dec
lock
ss
je
clc
repnz
nop
nop
jae
cld
add
or
add
mov
repnz
nop
nop
jae
mov
add
clc
repnz
nop
nop
jae
add
ds
add
add
jmp
xchg
inc
add
dec
add
popf
add
aad
test
repnz
nop
nop
jae
dec
add
out
add
add
mov
push
mov
xchg
ret
dec
ljmp
add
nop
push
mov
leave
nop
jmp
dec
inc
adc
and
daa
mov
push
mov
xchg
ret
rolb
pushf
add
popf
mov
setnp
daa
pop
inc
add
push
pop
lret
jbe
enter
jb
add
repnz
nop
nop
jae
add
add
je
mov
clc
repnz
nop
nop
jae
add
roll
cltd
add
rorl
mov
xchg
ret
add
add
add
add
cwtl
jbe
add
add
cltd
add
add
pop
mov
nop
push
mov
leave
nop
jmp
add
adc
mov
nop
push
mov
leave
nop
jmp
add
add
adc
cld
nop
nop
jae
add
add
add
clc
repnz
nop
nop
jae
dec
int3
mov
sti
add
add
nop
push
mov
leave
nop
jmp
add
cltd
ss
adc
mov
push
mov
xchg
ret
mov
stc
and
add
mov
clc
repnz
nop
nop
jae
popl
add
ret
sub
clc
repnz
nop
nop
jae
dec
add
add
add
mov
cmp
nop
push
mov
leave
nop
jmp
cltd
jno
add
cld
lea
repz
repnz
nop
nop
jae
add
add
pop
jne
add
xchg
jge
add
cltd
add
jbe
dec
add
pushf
add
clc
repnz
nop
nop
jae
add
fcoml
or
repnz
nop
nop
jae
sbb
push
icebp
sbb
addr16
clc
repnz
nop
nop
jae
lock
add
inc
add
fisttps
test
clc
repnz
nop
nop
jae
in
add
addb
sbb
mov
leave
nop
jmp
add
data16
add
adc
add
addr16
push
mov
xchg
ret
add
add
jno
idiv
repnz
nop
nop
jae
sbb
mov
sbb
push
clc
repnz
nop
nop
jae
push
cmp
xchg
push
clc
repnz
nop
nop
jae
enter
add
add
mov
clc
repnz
nop
nop
jae
lret
add
data16
dec
push
mov
xchg
ret
add
add
sbb
pushf
sbb
lods
fwait
clc
repnz
nop
nop
jae
mov
add
int
mov
outsb
out
sub
mov
popf
mov
add
xor
pop
call
clc
repnz
nop
nop
jae
lret
add
fdivrl
cld
nop
nop
jae
cmp
add
inc
add
push
mov
xchg
ret
fadds
add
je
clc
repnz
nop
nop
jae
add
icebp
pop
fistpl
clc
repnz
nop
nop
jae
add
fadds
aam
mov
clc
repnz
nop
nop
jae
fsubs
out
push
push
mov
xchg
ret
cltd
add
dec
cmc
jbe
repnz
mov
clc
repnz
nop
nop
jae
add
add
nop
nop
jae
add
add
jl
add
add
repnz
nop
nop
jae
mov
add
adc
clc
repnz
nop
nop
jae
add
pop
add
cwtl
dec
pop
nop
push
mov
leave
nop
jmp
add
add
push
mov
xchg
ret
enter
dec
dec
sbb
dec
test
mov
xchg
ret
pop
add
mov
add
popf
popa
nop
push
mov
leave
nop
jmp
fmuls
add
cs
clc
repnz
nop
nop
jae
xchg
add
push
clc
repnz
nop
nop
jae
in
add
mov
cmpl
nop
push
mov
leave
nop
jmp
pop
int3
enter
cld
xor
xor
push
mov
xchg
ret
dec
jl
add
icebp
or
add
mov
push
mov
xchg
ret
jl
sbb
adc
test
add
clc
repnz
nop
nop
jae
pushf
mov
or
inc
add
inc
pop
push
mov
xchg
ret
popf
add
ljmp
xchg
mov
clc
repnz
nop
nop
jae
xchg
add
add
add
arpl
inc
xor
clc
repnz
nop
nop
jae
add
add
aaa
mov
clc
repnz
nop
nop
jae
icebp
mov
add
nop
push
mov
leave
nop
jmp
adc
add
jae
jmp
nop
jae
xchg
ljmp
mov
nop
push
mov
leave
nop
jmp
add
mov
clc
repnz
nop
nop
jae
add
lret
adc
cld
nop
nop
jae
add
add
pop
add
leave
sub
repnz
nop
nop
jae
push
sbb
je
add
fbld
repnz
nop
nop
jae
add
dec
lock
mov
xchg
cmp
nop
nop
jae
inc
add
data16
mov
adc
repnz
nop
nop
jae
add
push
push
mov
xchg
ret
add
mov
add
inc
push
mov
xchg
ret
jno
add
sub
sar
repnz
nop
nop
jae
add
sbb
add
cld
nop
nop
jae
add
rolb
add
dec
add
nop
push
mov
leave
nop
jmp
add
add
mov
nop
push
mov
leave
nop
jmp
pushf
cmc
popl
das
push
mov
jmp
ret
jmp
add
add
clc
repnz
nop
nop
jae
mov
add
clc
repnz
nop
nop
jae
cmc
jl
dec
jno
roll
or
add
push
mov
xchg
ret
jl
enter
adc
add
clc
repnz
nop
nop
jae
in
lock
fcomps
clc
repnz
nop
nop
jae
mov
add
add
cld
nop
nop
jae
add
mov
pop
ds
adcl
mov
cmp
ret
sbb
adc
sbb
pop
push
mov
xchg
ret
mov
add
and
pause
push
mov
leave
nop
jmp
add
push
mov
jl
std
pop
push
mov
xchg
ret
dec
push
faddl
and
add
push
clc
repnz
nop
nop
jae
add
mov
add
cmp
jae
push
mov
leave
nop
jmp
add
pop
add
add
not
push
mov
xchg
ret
add
add
sub
repnz
nop
nop
jae
rorb
add
ljmp
inc
add
add
push
fwait
add
clc
repnz
nop
nop
jae
mov
add
push
add
cld
nop
nop
jae
add
add
add
add
clc
repnz
nop
nop
jae
add
adc
cmpsb
add
adc
sti
nop
push
mov
leave
nop
jmp
add
add
add
inc
cli
adc
gs
add
add
add
icebp
add
add
push
mov
xchg
ret
jl
int3
popf
add
pushf
cltd
add
mov
leave
nop
jmp
add
dec
movsl
stos
clc
repnz
nop
nop
jae
pushf
inc
mov
add
jbe
outsl
call
clc
repnz
nop
nop
jae
and
dec
rep
clc
repnz
nop
nop
jae
add
mov
add
je
clc
repnz
nop
nop
jae
add
add
push
add
cld
nop
nop
jae
add
cltd
pop
enter
add
push
push
mov
xchg
ret
add
sbb
je
inc
push
push
mov
xchg
ret
jno
fdivrl
popf
add
cli
push
add
jb
mov
nop
push
mov
leave
nop
jmp
add
nop
push
mov
leave
nop
jmp
add
add
dec
add
mov
in
push
mov
xchg
ret
stc
dec
dec
rorl
add
pop
pop
push
push
mov
xchg
ret
lock
add
add
add
ret
clc
repnz
nop
nop
jae
pop
mov
add
mov
adc
repnz
nop
nop
jae
xchg
dec
add
cld
nop
nop
jae
add
data16
repnz
xor
mov
add
cltd
ljmp
mov
push
mov
xchg
ret
data16
popa
pop
push
mov
xchg
ret
add
pushf
add
jl
jbe
xchg
nop
jae
add
add
add
mov
xchg
xchg
ret
adc
pop
fdivrs
adc
or
repnz
nop
nop
jae
cmc
int3
add
pop
dec
add
clc
mov
lret
add
add
std
dec
add
add
cwtl
jbe
ja
jmp
in
leave
nop
jmp
add
and
int3
add
nop
nop
jae
add
add
cmp
nop
push
mov
leave
nop
jmp
mov
stc
add
add
clc
repnz
nop
nop
jae
add
add
repnz
nop
nop
jae
popl
pushf
add
xor
add
repnz
nop
nop
jae
add
fistpl
leave
nop
jmp
add
cltd
add
add
sbb
clc
repnz
nop
nop
jae
inc
jge
jbe
dec
iret
add
nop
push
mov
leave
nop
jmp
mov
pushf
jl
add
inc
clc
repnz
nop
nop
jae
mov
add
fmull
add
xchg
dec
push
mov
xchg
ret
add
inc
in
add
add
and
add
push
push
mov
xchg
ret
add
int3
stc
ljmp
add
add
dec
out
fistpl
push
mov
xchg
ret
and
add
add
add
psubusw
clc
repnz
nop
nop
jae
lret
add
mov
jl
add
std
add
push
mov
xchg
ret
cltd
add
sbb
sbb
push
mov
xchg
ret
enter
mov
ret
mov
clc
repnz
nop
nop
jae
enter
data16
push
push
mov
xchg
ret
lock
pop
add
pushf
sbb
pop
push
mov
xchg
ret
je
dec
dec
in
add
icebp
inc
mov
clc
repnz
nop
nop
jae
roll
popl
add
test
add
pop
clc
repnz
nop
nop
jae
pushfw
add
add
lock
add
add
jne
clc
repnz
nop
nop
jae
cld
faddl
add
add
pusha
clc
repnz
nop
nop
jae
rorb
fdivl
xchg
jb
add
addb
ss
add
push
mov
xchg
ret
dec
rolb
add
add
cmpsb
stc
incl
add
std
jge
add
adc
popl
int
push
mov
xchg
ret
mov
adc
add
enter
push
mov
xchg
ret
add
stc
pop
inc
enter
aad
nop
push
mov
leave
nop
jmp
int3
add
ljmp
clc
repnz
nop
nop
jae
inc
jge
jbe
adc
dec
icebp
clc
repnz
nop
nop
jae
add
inc
push
mov
nop
nop
jae
add
add
ds
cmpw
clc
repnz
nop
nop
jae
stc
add
lret
movsb
push
mov
xchg
ret
add
jno
add
add
inc
addr16
clc
repnz
nop
nop
jae
add
dec
lods
clc
repnz
nop
nop
jae
fcomp
add
enter
mov
inc
and
clc
repnz
nop
nop
jae
add
mov
mov
cltd
push
clc
repnz
nop
nop
jae
add
add
add
add
nop
jae
cmc
pushf
add
mov
push
clc
repnz
nop
nop
jae
add
add
fisubrs
add
jmp
jb
add
dec
mov
add
call
clc
repnz
nop
nop
jae
add
add
or
cld
nop
nop
jae
pop
mov
mov
xchg
fisubrl
nop
nop
jae
dec
sbb
pop
pushf
xchg
sub
clc
repnz
nop
nop
jae
dec
push
fmuls
sldt
clc
repnz
nop
nop
jae
sbb
jbe
jae
test
push
add
clc
repnz
nop
nop
jae
sbb
add
add
test
add
add
rclb
clc
repnz
nop
nop
jae
jl
jl
push
clc
repnz
nop
nop
jae
push
add
popl
shlb
mov
xchg
ret
add
in
add
insb
xor
clc
repnz
nop
nop
jae
in
data16
jle
add
inc
pop
add
in
cltd
add
and
push
pop
inc
add
add
add
adc
mov
push
mov
xchg
ret
sbb
add
jbe
orl
addl
cmp
ret
push
add
sbb
shlb
xchg
clc
repnz
nop
nop
jae
in
sbb
dec
add
lahf
push
clc
repnz
nop
nop
jae
mov
push
dec
add
cmc
dec
in
clc
repnz
nop
nop
jae
sbb
jl
mov
inc
push
mov
xchg
ret
dec
add
dec
add
add
and
nop
nop
jae
add
lret
add
clc
repnz
nop
nop
jae
jbe
jbe
jl
popf
popf
lahf
mov
clc
repnz
nop
nop
jae
jge
std
jno
cltd
adc
push
clc
repnz
nop
nop
jae
add
dec
add
pop
fdivl
push
push
mov
xchg
ret
add
mov
adc
add
aad
nop
push
mov
leave
nop
jmp
add
cld
sbb
sub
repnz
nop
nop
jae
and
add
mov
mov
xchg
ret
add
add
add
int3
add
mov
mov
xchg
ret
add
add
add
popf
fld1
push
mov
xchg
ret
inc
inc
rcl
add
jl
add
sbb
mov
clc
repnz
nop
nop
jae
sbb
add
fisubl
add
push
mov
xchg
ret
mov
pushf
lock
add
lea
mov
xchg
ret
mov
jno
rcr
pop
push
clc
repnz
nop
nop
jae
add
add
add
pop
cld
xchg
pop
push
mov
xchg
ret
pop
add
mov
add
test
repnz
nop
nop
jae
add
mov
dec
add
push
clc
repnz
nop
nop
jae
add
mov
xabort
cld
nop
nop
jae
add
add
mov
nop
push
mov
leave
nop
jmp
add
add
jl
clc
repnz
nop
nop
jae
add
add
cld
nop
nop
jae
add
data16
rclb
nop
jmp
popl
add
call
jbe
push
push
mov
xchg
ret
add
pop
mov
cli
popf
add
clc
repnz
nop
nop
jae
pushf
jbe
mov
add
call
mov
cmp
ret
add
add
add
push
jne
nop
push
mov
leave
nop
jmp
push
pop
enter
clc
repnz
nop
nop
jae
add
sbb
inc
mov
clc
repnz
nop
nop
jae
add
mov
add
mov
clc
repnz
nop
nop
jae
cld
add
add
dec
loopne
aad
movsb
clc
repnz
nop
nop
jae
add
add
in
dec
add
push
mov
xchg
ret
add
add
add
lods
mov
clc
repnz
nop
nop
jae
mov
add
int
clc
repnz
nop
nop
jae
add
add
nop
nop
jae
pushf
add
dec
or
add
push
push
mov
xchg
ret
add
faddl
jbe
sbb
mov
inc
rolb
add
cmp
xchg
clc
repnz
nop
nop
jae
fdivs
add
add
and
add
jmp
clc
repnz
nop
nop
jae
popf
data16
add
add
clc
repnz
nop
nop
jae
lret
cmpsb
add
lcall
clc
repnz
nop
nop
jae
add
movb
mov
add
sbb
in
add
dec
aaa
popl
clc
repnz
nop
nop
jae
add
mov
mov
test
cld
nop
nop
jae
inc
inc
faddl
and
add
xchg
clc
repnz
nop
nop
jae
jge
cmp
dec
push
push
mov
xchg
ret
lret
add
lret
mov
add
clc
add
bound
add
add
lock
test
sbb
nop
push
mov
leave
nop
jmp
add
add
add
pop
mov
clc
repnz
nop
nop
jae
and
add
popl
add
stos
add
add
repnz
nop
nop
jae
pushf
jno
leave
shr
clc
repnz
nop
nop
jae
add
icebp
jno
rolb
add
add
xchg
add
nop
push
mov
leave
nop
jmp
popf
mov
icebp
add
add
add
or
add
mov
clc
repnz
nop
nop
jae
jl
shll
sar
cld
nop
nop
jae
add
add
add
add
xchg
mov
clc
repnz
nop
nop
jae
add
pop
je
clc
repnz
nop
nop
jae
add
dec
data16
push
clc
repnz
nop
nop
jae
data16
pushf
stc
add
cli
je
fwait
clc
repnz
nop
nop
jae
jl
sbb
push
sbb
mov
nop
push
mov
leave
nop
jmp
push
add
push
mov
xchg
ret
add
add
add
inc
push
clc
repnz
nop
nop
jae
add
push
int3
lret
add
ljmp
nop
jae
add
add
nop
nop
jae
lret
add
cltd
sbb
repnz
nop
nop
jae
add
add
nop
push
mov
leave
nop
jmp
and
dec
add
in
sbb
add
clc
repnz
nop
nop
jae
sbb
in
std
add
adc
dec
jb
add
enter
pop
add
and
clc
repnz
nop
nop
jae
add
sbb
push
minps
dec
jno
add
fcomp
sbb
add
add
es
repnz
nop
nop
jae
mov
mov
mov
clc
repnz
nop
nop
jae
cltd
jno
add
push
clc
repnz
nop
nop
jae
add
pushw
pushf
xchg
push
mov
leave
nop
jmp
mov
std
sbb
lea
push
mov
xchg
ret
add
jl
xchg
repz
repnz
nop
nop
jae
in
add
pushf
adc
clc
repnz
nop
nop
jae
and
rorb
dec
nop
push
mov
leave
nop
jmp
dec
add
in
cmp
clc
repnz
nop
nop
jae
add
add
mov
add
sbb
pop
sub
clc
repnz
nop
nop
jae
lret
add
mov
xchg
ret
in
adc
add
and
js
repnz
nop
nop
jae
inc
add
dec
push
mov
clc
repnz
nop
nop
jae
popf
pushf
add
add
add
pop
push
mov
xchg
ret
shl
add
add
cld
ljmp
nop
nop
jae
add
jbe
aad
clc
repnz
nop
nop
jae
jge
add
add
add
test
nop
push
mov
leave
nop
jmp
add
push
add
add
jge
nop
push
mov
leave
nop
jmp
sbb
add
cmp
and
rclb
dec
xchg
inc
add
in
add
jbe
in
push
add
clc
repnz
nop
nop
jae
add
inc
xchg
add
push
mov
leave
nop
jmp
add
insl
pop
clc
repnz
nop
nop
jae
sbb
add
sub
cld
nop
nop
jae
icebp
fcom
pop
stc
pushf
pop
xor
clc
repnz
nop
nop
jae
add
mov
push
nop
push
mov
leave
nop
jmp
pop
add
add
fsts
repnz
nop
nop
jae
icebp
add
mov
mov
push
mov
xchg
ret
cmc
icebp
fcom
mov
pushf
mov
clc
repnz
nop
nop
jae
add
add
and
add
push
mov
repz
mov
xchg
ret
pushf
mov
add
push
cli
lret
lods
and
imul
cld
nop
nop
jae
jl
add
cmpsb
add
cmpl
push
mov
xchg
ret
sbb
add
repnz
nop
nop
jae
sbb
sbb
nop
nop
jae
add
cltd
sbb
add
xor
add
repnz
nop
nop
jae
mov
add
nop
nop
jae
add
fadds
add
add
lods
outsl
inc
add
add
sbb
lock
push
clc
repnz
nop
nop
jae
and
ljmp
mov
movswl
clc
repnz
nop
nop
jae
data16
push
xlat
xor
nop
push
mov
leave
nop
jmp
inc
adc
incl
add
repnz
nop
nop
jae
add
in
mov
clc
repnz
nop
nop
jae
pop
add
pop
adc
mov
add
mov
jne
clc
repnz
nop
nop
jae
in
add
fadds
clc
repnz
nop
nop
jae
add
add
mov
repnz
nop
nop
jae
add
add
add
aaa
mov
clc
repnz
nop
nop
jae
inc
stc
add
pop
push
and
mov
xchg
ret
add
cld
add
stc
lea
nop
push
mov
leave
nop
jmp
add
dec
je
nop
push
mov
leave
nop
jmp
cmp
add
clc
repnz
nop
nop
jae
mov
shll
mov
dec
cmp
nop
push
mov
leave
nop
jmp
popf
add
pop
add
clc
repnz
nop
nop
jae
lret
enter
cmp
push
mov
xchg
ret
add
push
add
fld1
clc
repnz
nop
nop
jae
sbb
cld
add
add
push
mov
xchg
ret
inc
add
dec
add
stos
clc
repnz
nop
nop
jae
add
cld
in
incb
fisttpll
push
mov
xchg
ret
cld
mov
add
add
call
clc
repnz
nop
nop
jae
jbe
jl
repz
clc
repnz
nop
nop
jae
pop
sbb
test
mov
leave
nop
jmp
add
mov
add
cld
nop
nop
jae
add
add
rcll
repnz
nop
nop
jae
add
add
ja
call
repnz
nop
nop
jae
add
fadds
cmp
mov
xchg
ret
std
add
add
jno
mov
mov
inc
add
cmc
add
in
cld
add
bnd
add
ljmp
add
cld
nop
nop
jae
mov
dec
mov
mov
push
clc
repnz
nop
nop
jae
add
add
mov
push
mov
xchg
ret
add
add
add
adc
push
mov
xchg
ret
add
add
rcr
lret
xchg
add
rclb
mov
xchg
ret
jl
pop
add
mov
dec
fistpl
push
mov
xchg
ret
add
cmc
add
add
into
js
jns
push
sti
call
cmp
sbb
add
adc
mov
clc
push
mov
xchg
ret
inc
mov
inc
add
stos
add
outsl
xor
push
mov
xchg
ret
cld
and
add
add
ljmp
in
and
mov
out
and
stc
sbb
fnstenv
les
movsl
fwait
clc
repnz
nop
nop
jae
data16
rolb
cmp
add
clc
repnz
nop
nop
jae
add
jl
and
add
add
repnz
nop
nop
jae
jl
xchg
cld
push
inc
sbb
repnz
nop
nop
jae
dec
inc
push
add
je
add
clc
repnz
nop
nop
jae
std
jl
fsubr
and
add
add
clc
repnz
nop
nop
jae
fcoml
add
lock
xor
clc
repnz
nop
nop
jae
add
add
pop
push
mov
xchg
ret
add
std
add
in
and
jg
jne
push
mov
xchg
ret
add
inc
sbb
push
mov
ret
clc
repnz
nop
nop
jae
inc
dec
add
add
add
pop
push
call
nop
push
mov
leave
nop
jmp
int3
adc
cmpsb
add
int3
iret
xorl
nop
push
mov
leave
nop
jmp
dec
mov
ret
add
cld
add
add
add
add
stc
mov
push
clc
repnz
nop
nop
jae
dec
jbe
add
mov
lret
push
nop
push
mov
leave
nop
jmp
add
add
and
nop
push
mov
leave
nop
jmp
pop
dec
xchg
inc
dec
xchg
add
pop
add
add
nop
jmp
add
add
mov
push
mov
xchg
ret
add
add
stc
mov
push
mov
xchg
ret
cmp
add
sub
repnz
nop
nop
jae
add
add
add
jl
add
clc
repnz
nop
nop
jae
add
and
push
mov
call
incl
cmp
pushf
add
mov
pop
add
int3
orl
in
leave
nop
jmp
inc
add
cmc
add
fld1
nop
push
mov
leave
nop
jmp
add
add
add
pop
push
clc
repnz
nop
nop
jae
add
mov
and
add
add
nop
nop
jae
mov
add
jmp
sar
repnz
nop
nop
jae
push
add
data16
clc
repnz
nop
nop
jae
add
add
add
mov
popa
inc
add
popl
add
add
dec
push
lock
add
clc
repnz
nop
nop
jae
add
add
ficompl
clc
repnz
nop
nop
jae
adc
sbb
inc
xor
cld
nop
nop
jae
add
push
popf
call
nop
push
mov
leave
nop
jmp
add
add
and
add
cmp
nop
push
mov
leave
nop
jmp
int3
dec
add
rorb
add
add
add
add
add
out
pop
pop
inc
mov
add
xor
add
add
mov
in
pop
clc
repz
add
and
add
pushl
cmp
add
mov
data16
cmp
lcall
pushf
pop
je
jo
add
push
or
jge
mov
fsts
add
cmp
dec
inc
xchg
xor
push
cmp
adc
or
fs
movl
dec
cmpsl
sbb
add
xor
and
add
fmuls
pop
cmp
xlat
jg
sub
add
aaa
cmp
iret
cmp
cmp
inc
push
push
clc
adc
aas
mov
loop
push
lcall
sub
add
add
into
lods
add
js
fs
insb
orl
add
mov
add
xchg
adcl
jle
in
shrl
xor
cmp
lock
add
mov
jmp
adc
sbb
mov
add
out
dec
add
add
push
loope
add
jg
icebp
aaa
mov
dec
mov
call
fistpll
add
mov
sub
add
leave
mov
add
in
movsb
add
test
add
pop
cmp
push
xor
xor
xchg
mov
test
and
dec
stc
add
add
add
test
add
push
mov
add
pop
lahf
mov
xchg
sahf
inc
loope
or
dec
inc
std
fs
std
mov
adc
push
sbb
out
shll
xchg
add
enter
test
add
mov
popa
sbb
fidivrs
lret
cltd
mov
ret
add
sbb
repz
add
add
add
fldcw
andl
cwtl
dec
xor
dec
data16
add
add
add
add
and
les
call
std
push
cmp
cli
rorb
addr16
add
mov
int3
scas
mov
add
daa
sbb
push
add
loope
sti
adc
add
sbb
aad
dec
add
push
int
lock
fiadds
xor
xchg
out
jne
add
add
and
add
cmpl
sbb
push
xchg
or
test
jle
mov
into
cwtl
call
inc
test
add
shrl
dec
int
gs
push
ja
fadd
sbb
add
popl
add
and
add
popl
pop
and
add
sbb
iret
addb
das
pop
ja
fidivrl
pop
mov
mov
cmp
inc
je
lods
sahf
sbb
add
mov
or
movsl
iret
scas
add
lea
test
add
sarl
jns
add
add
or
add
ret
movb
add
or
sub
add
xchg
mov
mov
scas
ja
adc
dec
push
pusha
sahf
jo
add
mov
add
pop
push
int3
mov
add
jb
stos
add
cmp
lcall
push
dec
adc
inc
sub
add
add
cmp
add
push
add
stos
add
jmp
sbb
or
add
js
int
insl
xor
add
add
mov
in
xor
pop
roll
sar
stos
leave
mov
xor
jo
sub
push
dec
in
fwait
loop
xor
add
add
jae
mov
cld
dec
sbbl
add
push
add
mov
add
add
sub
mov
jbe
subl
insb
xor
dec
sbb
popf
add
add
in
mov
add
cmp
add
das
jns
fwait
xor
inc
and
add
sbb
dec
in
and
add
add
sbb
mov
inc
mov
add
add
add
xor
mov
and
add
and
push
mov
xchg
xchg
fs
jnp
call
cltd
shrb
add
rorb
add
add
les
sub
add
push
aas
ljmp
push
jnp
hlt
cmpsl
outsl
movsb
add
adcl
fisttps
add
cmpsb
add
ficoms
inc
les
lret
loopne
addb
mov
enter
lahf
mov
inc
cli
addb
mov
pop
and
push
add
jp
outsl
adc
push
fisubrs
sti
mov
cmp
int
jmp
push
add
sbb
xchg
mov
push
add
jp
sbb
mov
add
adc
add
push
mov
add
push
mov
lcall
dec
inc
leave
sarb
and
icebp
aaa
mov
add
iret
or
f2xm1
xorl
inc
xor
add
xchg
incb
or
add
sub
add
movsb
add
mov
push
add
ret
add
and
mov
add
arpl
xor
test
add
add
test
cmp
les
sub
add
fiaddl
xor
stc
mov
xor
xchg
pop
xchg
mov
shll
fbstp
add
fmull
pop
in
iret
push
add
imul
insl
repnz
nop
sbb
cwtl
roll
or
add
pop
push
add
sbb
cmp
xchg
cwtl
or
aam
and
add
inc
pop
cwtl
jmp
call
add
sub
add
lahf
and
or
inc
jae
popa
jnp
jne
add
out
and
add
pusha
add
mov
popf
in
int
mov
xchg
mov
add
rorl
scas
or
add
mov
jp
jne
push
nop
lods
add
add
inc
addb
dec
test
add
in
add
mov
je
add
mov
add
add
divl
and
add
stos
add
pop
pop
add
add
mov
pop
pop
std
adc
int3
xchg
fwait
lock
in
mov
mov
cmp
add
sbb
add
jbe
add
mov
dec
call
add
rcll
fiadds
add
aad
sub
add
mov
inc
jge
inc
loop
inc
sub
add
out
push
add
mov
push
add
shlb
cmp
imul
mov
ret
ficomps
aam
push
call
xor
push
adc
leavew
adc
add
int3
fsubrl
addb
xchg
mov
ss
jmp
add
inc
sub
sbb
sbb
sbb
enter
sbb
dec
aas
cld
or
add
inc
xchg
add
add
xchg
or
add
loopne
cmp
outsl
out
das
xchg
fidivs
add
loopne
add
mov
add
pop
sbb
add
jp
mov
inc
or
add
add
andl
add
pop
push
dec
fdivrl
jmp
add
and
pushl
cmp
push
out
fmuls
addr16
fdivrp
das
mov
clc
pop
faddl
add
ret
pop
jne
lret
xor
add
sub
add
ds
popf
int
clc
mov
or
adc
cmpsb
add
fwait
inc
cmp
cbtw
jmp
dec
into
mov
loope
into
les
sbb
jns
inc
jecxz
cmp
jne
xchg
stc
lcall
add
mov
push
add
xor
lahf
pop
inc
sbb
cltd
push
punpckhbw
cmpsl
push
sub
in
ret
dec
cwtl
out
int
add
adc
fldt
push
mov
and
sbb
add
add
xchg
negb
outsb
stos
add
mov
inc
add
lea
inc
imulb
xchg
add
cld
mov
rol
mov
out
test
add
cmp
in
sbb
cld
mov
lock
jb
push
into
and
jne
add
sti
and
add
fmulp
jns
add
int3
push
mov
add
mov
add
addb
jae
add
imul
cmp
sub
loop
arpl
add
iret
lret
add
clc
cmp
sbb
fcomps
xor
cmpsb
add
out
and
add
dec
dec
mov
sar
add
lock
inc
jae
outsb
mov
push
add
lods
add
cltd
aad
fldt
lds
mov
inc
daa
mov
scas
and
mov
push
mov
add
pop
xchg
pushf
fwait
mov
add
sbb
add
mov
mov
stos
sub
add
add
add
and
add
add
addr16
xor
lods
add
repnz
sbb
jne
push
add
outsb
mov
ljmp
push
and
add
fistps
pop
pop
repz
add
add
mov
cmpsb
add
xor
shll
gs
add
int3
loope
lods
fwait
inc
les
add
add
fmull
add
push
jo
sbb
add
hlt
adc
dec
sarl
imul
pop
and
in
mov
shl
xor
add
stc
add
add
dec
add
dec
jb
add
fbstp
out
ret
add
or
pop
rep
cmp
jbe
add
pop
mov
add
sub
add
mov
lcall
fwait
inc
in
mov
add
xor
jb
arpl
inc
cli
jne
push
call
lea
add
ficoml
cmpsb
add
inc
not
sub
mov
add
cmp
xlat
fwait
lret
js
jnp
rcr
pop
enter
add
sub
addb
and
xor
dec
sahf
sub
adc
fiaddl
and
xchg
add
orl
scas
jl
negb
pop
adc
in
xchg
gs
insb
adc
pop
or
mov
pushf
aad
sahf
call
jmp
xlat
jo
and
push
sarb
add
cmp
in
inc
jb
mov
jae
call
rcl
repnz
and
add
jge
jg
add
lret
sahf
fistpll
mov
xor
pop
int
dec
test
add
sbb
add
push
push
push
repz
add
jb
sbb
pop
outsl
pop
mov
popa
push
test
test
in
xor
add
jns
divb
ret
mov
push
push
and
jg
pop
aas
js
lret
stos
add
inc
mov
mov
cmpl
mov
and
add
xchg
add
push
mov
add
xor
add
xchg
and
add
add
sub
add
push
fdivrs
xor
xor
and
add
pushf
and
leave
mov
addr16
inc
mov
add
or
add
mov
xchg
ja
jmp
add
dec
imul
lods
testb
add
push
add
xchg
test
add
into
icebp
push
and
add
jno
add
adc
mov
aad
jmp
lods
add
dec
fidivrl
add
and
in
ja
add
xchg
fstps
fs
ret
cmp
ds
aam
subl
ja
fsubr
adc
xlat
mov
add
daa
sub
add
pop
sahf
or
add
lcall
pop
cmc
mov
and
add
or
out
js
mov
jb
mov
sti
das
sub
inc
je
add
outsl
pop
ja
loope
xchg
sbb
add
inc
enter
cld
ud1
fs
js
int3
mov
add
push
xchg
add
and
add
lret
add
dec
mov
shr
into
push
lods
add
mov
add
lret
add
addb
ficoml
ret
in
fstpl
data16
cmp
jmp
movsl
or
add
sbb
add
inc
mov
lret
std
dec
scas
add
sbb
fildll
xlat
mov
mov
push
xchg
movsl
mov
imul
xchg
or
add
add
xchg
xchg
decl
adc
sbb
add
iret
stos
cmp
dec
mov
sub
add
fisttpll
dec
test
pop
int
jp
inc
shrl
pop
cmp
adc
iret
mov
filds
jb
mov
and
add
add
clc
cmp
arpl
add
fisttpll
inc
mov
and
push
js
lahf
sbb
out
test
add
pop
fwait
jns
mov
inc
pop
out
xchg
dec
adc
xor
sub
mov
add
mov
add
ret
sbb
mov
jp
mov
jmp
mov
or
add
iret
mov
sub
add
and
add
add
add
add
sti
rorl
test
add
lret
mov
pop
stos
add
push
dec
adc
cltd
loop
cmp
aas
sub
add
add
push
add
cmp
lds
add
stos
add
and
add
xchg
xchg
out
je
add
movsl
sbb
inc
test
add
add
and
add
repz
cmpsl
imul
sub
add
xchg
mov
add
mov
add
addb
mov
dec
xor
adc
xchg
pop
mov
arpl
sahf
sbb
out
add
insl
lahf
add
add
push
add
mov
and
add
push
add
mov
or
xchg
add
pop
out
cmp
add
mov
add
lahf
mov
sub
mov
pop
and
dec
scas
pop
cld
sbb
add
pop
ret
in
xlat
stos
add
daa
mov
add
jo
icebp
dec
add
jo
loope
adc
cmp
add
push
or
add
test
mov
add
mov
add
push
add
std
ja
cmp
pusha
adc
push
add
fstps
push
fcomp
or
jp
xchg
mov
hlt
sub
add
add
add
mov
add
fdivr
repnz
pop
xor
add
adc
sahf
mov
xor
adc
sbb
jnp
pop
mov
add
add
add
sbb
jnp
scas
add
clc
scas
add
mov
add
shlb
add
pop
dec
push
push
add
pop
mov
pop
cmp
out
out
push
cmp
jnp
mov
adc
add
add
jp
push
add
push
push
jle
adc
arpl
lret
cmpsb
add
fcom
push
in
je
stos
push
add
mov
icebp
outsl
out
in
adc
lret
add
sarb
mov
jge
add
popf
lods
outsl
std
jno
dec
addb
mov
pop
add
fs
pop
pushf
pop
in
daa
add
add
mov
fists
push
mov
loopne
xchg
sbb
pop
jae
mov
add
add
xchg
hlt
aas
mov
cli
sub
add
pushf
xor
sub
add
ret
or
add
das
sub
add
cmp
mov
fwait
xor
jl
mov
xchg
jp
push
dec
pop
pop
leave
inc
repz
fsubs
dec
pusha
add
into
cmpsb
add
and
add
in
js
add
xchg
in
movsl
xor
gs
add
pop
inc
in
mov
cli
lods
add
mov
ja
nop
sub
push
and
add
test
add
add
cmp
pop
sbb
sbb
mov
aam
xchg
lcall
pusha
aas
jp
pushf
xor
mov
test
add
add
push
mov
lahf
adc
inc
xor
xor
lods
pop
ja
and
rcll
and
xor
stos
ret
imul
add
sbb
mov
add
faddp
js
add
out
sbb
add
outsb
pop
or
add
pop
ja
les
add
rorb
add
lret
cmp
pushf
cmp
and
add
mov
add
and
add
cmp
add
add
add
lods
add
pop
jge
je
pusha
mov
add
add
movsl
data16
nop
in
xchg
mov
jno
add
and
add
pop
rolb
add
lret
scas
add
out
insb
dec
loopne
add
popf
sbb
push
sbbl
add
pop
mov
imull
xchg
xchg
add
insb
jnp
sbb
movsl
push
imul
popa
lds
lods
add
bound
and
push
out
add
mov
adc
add
pushl
test
add
int
gs
in
jns
mov
xor
das
lods
movsb
add
rcrl
or
add
js
add
cmpsb
add
pop
notl
lock
push
mov
add
add
or
add
mov
add
mov
add
dec
loope
mov
add
cltd
loopne
add
insb
dec
lock
add
inc
aam
test
jg
aad
add
add
test
add
pop
mov
push
mov
rcll
add
into
lret
jnp
add
mov
popf
mov
icebp
jge
pop
jg
and
add
dec
lock
push
adc
jns
fsubrs
arpl
notb
sub
add
sbbl
and
add
jo
add
lock
jg
imul
test
add
cli
jno
scas
add
out
mulb
test
add
mov
add
cmp
daa
arpl
push
and
add
add
das
addb
push
add
dec
jns
xor
into
stc
and
add
icebp
dec
data16
out
or
stos
cmp
add
xor
mov
push
int3
add
cmpsl
mov
lods
add
out
jl
movsl
cmp
leave
aam
adc
std
into
sub
jns
xor
mov
add
movsb
add
push
mov
add
xchg
add
int
push
stos
add
dec
sbb
and
fsts
mov
and
add
dec
or
add
mov
add
add
and
add
lahf
and
add
xor
insl
and
shlb
dec
xor
pushf
add
and
fdivrs
insb
or
add
lock
xchg
imul
ds
hlt
dec
sub
fwait
pop
jnp
add
stc
mov
mov
sbb
push
add
add
pushl
dec
test
aaa
repnz
jae
dec
dec
xor
or
hlt
push
iret
cmp
in
inc
sahf
push
gs
push
sbb
pop
jo
add
jbe
xor
add
mov
sbb
pop
lret
or
add
add
punpcklwd
mov
add
sbb
ret
add
sar
sbb
add
cwtl
lret
push
push
shl
jo
jecxz
add
imul
and
push
lret
jle
inc
pop
leave
jbe
scas
mov
push
xchg
fnstcw
frstor
cld
repnz
and
add
inc
add
add
or
add
dec
ds
dec
mov
aad
xchg
pop
test
add
aad
enter
pop
or
xchg
add
ds
dec
push
adc
add
repnz
dec
rcrl
shl
jbe
add
add
test
add
mov
pop
test
xor
add
std
divb
popf
fs
add
adc
jae
fcoms
pop
inc
loop
loop
mov
iret
or
mov
lret
shl
add
fistpll
fs
lret
sub
add
adc
outsb
lcall
cld
and
add
add
cmp
test
add
push
cmpsb
add
inc
ds
fcomps
jae
aam
pop
push
lret
add
dec
pop
fdivrl
add
fists
or
add
or
add
dec
fbld
add
repnz
add
dec
jmp
sub
add
lds
lods
sub
sbb
add
jecxz
add
in
ljmp
and
add
gs
jg
test
fs
roll
xchg
cmp
add
outsl
outsl
adc
jmp
push
push
fidivrs
sub
inc
xlat
jnp
add
add
xchg
mov
add
or
add
add
ss
shr
pop
lret
add
xor
add
imul
add
cmc
push
mov
fnsave
cld
int3
cmp
out
push
add
cmpsb
add
movsb
add
adc
jne
add
xchg
mov
add
add
mov
loopne
fldenv
add
or
add
imull
mov
loop
inc
aam
inc
call
jnp
nop
mov
gs
jle
add
rorl
outsb
sti
repnz
add
incl
and
mov
inc
lahf
imull
add
add
xlat
dec
mov
nop
xchg
jg
jmp
and
add
add
in
insb
stos
icebp
adc
shl
clc
sti
push
shrl
xchg
pop
lea
pop
sub
add
mov
add
pop
add
add
punpcklwd
add
dec
jns
imul
flds
sub
add
cmpsb
add
loopne
xchg
stos
std
das
leave
or
dec
or
add
stos
add
scas
add
adc
or
lock
add
mov
stos
loopne
push
jnp
xor
les
cmp
jg
outsb
sti
pop
test
cmpsb
add
lock
call
mov
lock
jl
arpl
add
loop
jae
test
pushf
ss
jg
sbb
enter
or
add
xchg
cmp
push
add
mov
add
jns
cmp
or
add
pop
fwait
mov
add
ljmp
mov
add
je
push
out
sbb
in
movsl
std
loopne
add
sub
add
and
aas
out
sbb
add
jp
add
mov
add
hlt
dec
cld
cltd
lea
jl
movsb
add
shr
mov
rcrb
fildl
outsb
pop
and
cmpsb
add
out
lds
out
in
pop
cli
xchg
out
or
add
sub
add
and
fwait
fwait
popa
mov
add
lret
fsubrl
push
nop
stos
push
mov
mov
dec
outsl
cmpsl
add
add
aam
add
add
add
add
push
sbb
inc
mov
sub
addr16
adc
sahf
or
add
sub
add
add
mov
xor
add
pop
iret
mov
js
inc
add
add
shrl
add
pop
xchg
cmp
shll
push
push
notl
add
add
add
mov
shlb
std
mov
jnp
insl
mov
and
add
mov
cmp
mov
add
sub
push
add
cmp
xchg
push
xchg
or
test
mov
aam
push
fldl
jnp
jo
pushf
dec
daa
pop
jne
add
jecxz
mov
fwait
movsb
add
add
sub
add
loopne
inc
pop
addb
orl
or
movsl
cmp
add
push
dec
rclb
pop
mov
add
mov
xchg
roll
sbb
add
movsl
int3
adc
and
add
inc
inc
lock
cld
pop
imul
movsb
add
ljmp
bswap
push
je
stos
add
lcall
cmpsl
cmp
out
repz
xor
or
xchg
jno
mov
add
cmp
or
add
addb
fidivrs
add
repz
add
add
sbb
jae
pop
cwtl
shl
rcr
add
dec
fldt
jmp
add
mov
cmpsl
xor
fs
add
hlt
pusha
sbb
mov
ja
sub
lock
mov
pop
out
cmp
fcompl
sbb
push
or
mov
fiadds
clc
mov
add
loop
lock
test
add
shll
cli
push
inc
push
add
iret
daa
mov
stc
test
movntps
pop
mov
add
addb
xor
outsl
sub
pop
aam
push
add
add
rorb
add
push
add
pushf
fnstenv
addb
je
add
test
pop
dec
hlt
jg
fbstp
sub
add
bound
add
or
stos
push
or
cld
dec
movsl
iret
fnstenv
add
in
or
add
in
loope
pusha
jmp
jbe
add
lret
jge
ja
mov
mov
add
fs
loope
scas
loop
mov
xor
add
sti
mov
popl
add
je
add
cli
aas
stos
add
int3
inc
mov
or
dec
inc
mov
pop
fst
inc
push
insl
sahf
and
add
sbb
adc
pop
rorb
sbb
xchg
test
dec
jne
ror
out
hlt
sub
add
push
ja
add
js
add
and
fcmovb
pop
out
sahf
arpl
xchg
in
mov
add
add
mov
xchg
pop
and
mov
cmp
inc
cmp
addb
std
loope
daa
or
add
jb
inc
jns
push
lds
add
mov
mov
mov
mov
adc
push
add
xchg
sbb
cmp
sbb
push
add
push
inc
test
add
adc
xorl
pop
gs
add
sub
jg
dec
stos
xchg
loopne
jecxz
jno
mov
jnp
and
sub
pusha
icebp
cmc
sbb
xor
xor
add
add
mov
and
xchg
insb
mov
add
jnp
add
xor
imul
pop
sub
cmpsb
add
les
add
xchg
inc
push
jns
dec
adc
arpl
push
add
pop
fisubrl
mov
add
push
or
int
mov
rorl
sbb
pop
testl
mov
hlt
adc
add
push
jnp
and
test
add
rclb
add
mov
xchg
pop
inc
mov
add
add
loopne
xlat
icebp
sub
hlt
jp
push
push
xchg
jno
xchg
add
sub
add
sarl
mov
add
xor
leave
push
push
jnp
roll
xchg
inc
add
sbb
or
cmpsb
add
pop
add
add
scas
add
inc
push
push
add
add
jp
pop
scas
sbb
into
insb
pop
aad
cmp
mov
aam
lret
addb
fcom
sbb
ja
jns
mov
adc
and
add
add
shrl
or
add
pop
dec
das
xchg
hlt
addb
inc
and
cltd
pop
pop
jbe
imul
jb
xor
and
add
int3
push
xchg
sub
add
adc
or
add
xor
movsl
xchg
add
mov
scas
or
add
add
nop
and
add
nop
scas
add
out
xchg
push
xchg
add
push
std
in
jo
mov
shll
sahf
push
dec
xchg
sbb
popf
fildll
insb
movsl
hlt
int3
rclb
loop
sbb
aam
jmp
add
mov
xchg
outsb
mov
std
lret
ret
and
roll
inc
imul
sbb
add
popf
fisubrl
and
add
popa
test
push
not
cmp
cmp
out
mov
jno
push
or
add
cmp
lret
cmp
jecxz
jp
mov
loope
adc
add
jle
insl
ficompl
inc
mov
or
lods
mov
add
jb
and
add
push
cmp
xor
cmc
sub
xor
lods
cmp
add
jb
mov
mov
push
add
mov
xchg
lods
push
bswap
jl
rcrl
dec
jecxz
mov
add
std
add
add
icebp
lods
sub
add
cmc
or
insl
arpl
adc
mov
cmpsl
push
cmpsb
add
ljmp
inc
or
mov
and
add
out
inc
xchg
inc
ret
add
je
inc
adc
fiaddl
add
daa
sub
add
inc
mov
aad
ret
add
mov
aad
cmp
jo
imul
jo
loopne
mov
sbb
sbb
ret
shlb
inc
push
add
in
and
add
jo
lret
and
add
ljmp
pop
dec
jb
ljmp
mov
add
pop
cmpl
inc
shrb
add
adc
add
xlat
sti
xor
addb
outsb
xor
pop
cmp
in
pop
add
fdivrs
imul
inc
mov
add
sub
add
xchg
push
jno
mov
xchg
jl
jle
dec
addb
and
add
lock
outsb
rcr
mov
add
ds
stos
mov
add
xor
mov
pusha
test
dec
xor
add
push
adc
imul
jno
mov
inc
in
rcll
clc
outsb
mov
mov
mov
add
stos
faddl
inc
cmpsb
add
cmpsb
add
or
add
sub
mov
fldcw
sub
test
add
dec
sub
add
daa
sahf
mov
out
aas
and
add
scas
add
or
cmp
mov
popf
jmp
or
add
add
pop
jge
mov
add
add
xor
mov
push
or
sbb
pop
cmp
ret
add
add
add
dec
push
push
popf
sbb
push
sub
cmp
mov
mov
add
cmp
inc
addb
inc
movsb
add
mov
cmp
in
rol
dec
lret
in
xchg
pusha
mov
mov
add
daa
mov
add
and
add
add
into
mov
push
or
repz
add
enter
in
push
add
adc
in
cmpsl
pop
mov
mov
or
lock
add
repz
repz
push
add
in
clc
dec
faddl
fdiv
push
add
xchg
and
ret
pop
in
inc
cmpsb
add
iret
pop
cmpsb
add
addr16
nop
arpl
fdivl
inc
aas
or
add
jmp
add
mov
add
fcompl
jecxz
arpl
sub
cmpsl
int3
mov
mov
add
jae
shl
dec
addb
jne
and
sahf
push
pusha
push
popa
xchg
lcall
xlat
repz
incb
pop
mov
sbb
lods
int
aas
inc
shll
mov
mov
leave
mov
and
add
push
pop
lods
add
jecxz
mov
mov
sub
add
xchg
icebp
sbb
add
icebp
push
das
das
or
sahf
add
jle
rorl
add
pop
add
push
fistpl
mov
mov
add
xchg
gs
jmp
dec
lods
add
sub
add
adc
add
jg
cmp
and
mov
add
add
add
xchg
add
add
add
or
in
adc
sub
test
je
add
pop
push
dec
cmp
adc
add
scas
add
cmp
push
push
addr16
lods
push
mov
add
pop
mov
cmpsb
add
add
inc
xor
add
sahf
test
addb
adc
push
fwait
or
add
xchg
sbb
jecxz
sub
add
pusha
ja,pt
add
cmp
add
out
add
iret
pop
jo
mov
dec
sub
sub
add
add
pop
push
xchg
sbb
aam
out
into
xchg
add
les
pop
sbb
pop
jle
add
mov
mov
dec
sbb
flds
add
sub
add
inc
xchg
lds
emms
pop
shlb
xor
push
arpl
imul
mov
add
sbb
jl
repz
sub
add
xor
add
push
add
cltd
stc
mov
lahf
mov
add
lea
cmp
jmp
fsubrs
lods
add
mov
pop
mov
push
int3
or
mov
add
jmp
add
add
mov
add
call
jecxz
mov
shlb
pop
addb
xor
aam
add
ja
mov
add
xor
add
jg
push
shlb
sbb
adc
mov
add
push
dec
sbb
cmp
xlat
adc
jne
pop
mov
mov
jecxz
add
addb
or
das
imul
test
lcall
test
add
push
lret
push
cwtl
xchg
push
push
inc
lea
dec
adc
adc
pop
jg
fisubl
mov
add
sub
add
add
jle
rcl
jbe
xchg
aad
mov
add
ds
add
and
add
fmull
add
in
jl,pt
dec
mov
add
inc
insb
rcll
xchg
mov
adc
ds
sub
add
or
or
add
sub
add
rep
add
adc
ljmp
ss
mov
add
aas
or
fistl
mov
add
pop
xor
dec
in
aam
int
pop
mov
ljmp
adc
pop
stos
int3
daa
sub
fidivs
xchg
int
add
std
push
addb
lret
fisubrs
add
add
lret
add
fs
mov
add
xor
and
addb
aas
add
add
call
std
shr
adc
add
cmc
pop
clc
inc
jl
mov
add
add
push
dec
sub
add
and
add
add
dec
xchg
add
pop
adc
std
pop
enter
add
into
push
cmp
xor
pushf
xchg
add
add
pop
xor
outsl
jmp
pop
dec
xchg
lcall
mov
cmp
decb
pop
repnz
mov
addb
jle
inc
or
jmp
pop
xchg
std
cld
cltd
jo
cmp
lock
fnstsw
mov
cmpl
add
repz
sub
add
sbb
mov
hlt
add
std
mov
xchg
fs
pop
pop
in
clc
xchg
add
add
and
fxch
push
cmp
pop
xor
lds
xor
sbb
inc
cmc
dec
dec
or
add
adc
mov
add
add
hlt
mov
add
or
cmpsl
pop
mov
add
xchg
add
dec
or
add
out
cmp
push
sbb
gs
lret
roll
sbb
pop
addr16
sub
add
std
mov
add
jge
adc
movsl
pop
jmp
nop
mov
add
add
add
add
pop
dec
xchg
leave
jge
fists
ret
into
and
add
xor
scas
aam
daa
cmp
add
popa
repz
leave
mov
aam
les
add
dec
gs
scas
add
aas
jle
push
jns
cwtl
inc
aaa
inc
bound
add
mov
inc
call
sbb
insl
push
loope
out
call
xor
fwait
inc
movsl
icebp
add
add
push
jbe
stos
pop
repz
add
xchg
cmpsl
jmp
push
mov
push
add
cmpsl
add
and
out
popf
js
pop
mov
out
add
jl
cmp
mov
add
jg
scas
add
test
add
loopne,pt
imul
and
lahf
std
sbb
adc
add
pop
mov
outsl
enter
mov
addr16
add
mov
in
add
cmp
add
add
mov
add
and
add
cmp
in
lea
aad
cmpsl
mov
add
add
sub
add
add
rcl
adc
mov
add
ficomps
sbb
inc
test
lret
cmp
add
jp
add
mov
add
jb
outsb
xor
and
add
xor
mov
sub
add
sub
add
sarl
add
or
add
scas
push
roll
sub
sbb
fdivrs
push
add
lret
dec
pop
dec
push
mov
cmp
daa
mov
add
nop
dec
pusha
mov
add
jge
outsb
xchg
and
push
int
add
aaa
mov
cmc
lret
loop
mov
adc
push
add
into
jnp
mov
cmpsl
addb
push
add
nop
cmp
loop
push
stc
divb
xchg
mov
jecxz
ss
sub
add
cwtl
fimuls
hlt
shll
add
add
push
mov
xchg
mov
stos
rcrb
push
mov
inc
dec
mov
add
loopne
in
ds
add
push
sub
add
leave
adc
add
cli
sub
add
dec
pop
loope
sbb
pop
mov
dec
mov
add
add
gs
ljmp
popa
sbb
mov
xchg
jmp
add
icebp
into
inc
sub
add
push
pusha
add
sbb
lds
mov
mov
pop
push
leave
je
add
push
ret
adc
dec
addb
cltd
insb
and
add
mov
stos
add
in
sbb
xchg
les
add
adc
out
rep
or
dec
cmpsb
add
cmp
xchg
js
xchg
dec
cmovb
loop
movsb
add
inc
jp
push
hlt
stos
sbb
clc
push
push
mov
add
test
add
sub
divb
jp
sarl
fldenv
push
je
outsb
cmp
dec
imul
adc
mov
mov
aad
jmp
divb
jb
dec
sbb
mov
out
mov
xchg
or
add
sbb
ret
xor
dec
in
mov
add
jno
jg
out
cmp
push
add
pop
mov
pop
sti
cmpsl
mov
cmpsb
add
out
push
add
std
negb
pop
pop
xor
pop
loop
rclb
inc
rorl
mov
push
pusha
inc
std
xchg
jnp
add
mov
lahf
push
add
mov
mov
add
addb
jns
shrd
adc
ret
cmp
jb
cwtl
push
xor
xchg
push
inc
sub
out
and
pop
push
imul
add
gs
add
mov
xlat
mov
add
and
add
add
cmp
leave
into
xor
cmpsb
add
aam
out
clc
mov
add
movsl
sub
add
leave
lret
push
mov
ret
sub
and
add
mov
xchg
push
pop
sub
add
popf
mov
mov
ss
sbb
sub
add
pop
jno
pop
lret
divl
jmp
push
or
add
fistl
push
cmp
les
mov
add
sahf
mov
add
sbb
mov
sub
add
mov
add
mov
jno
pop
push
addb
out
cmc
xchg
mov
add
inc
popf
sub
xchg
jge
dec
xchg
stc
pop
jle
adc
cmp
mov
mov
add
lcall
add
lea
cld
inc
and
dec
in
lret
add
xor
loopne
stos
add
sub
add
jp
mov
add
add
in
mov
add
aad
push
push
add
cmpsl
pop
test
add
mov
pop
mov
lret
stos
add
xor
fwait
icebp
mov
sub
add
add
or
pop
add
or
add
adc
nop
push
add
or
add
inc
adc
pop
sahf
sbb
aad
mov
outsb
push
adc
dec
js
and
pushf
push
add
test
add
fisubrl
add
mov
sbb
mov
addb
das
xchg
add
bound
add
add
xor
sub
jae
jge
test
add
mov
add
add
add
or
adc
scas
add
mov
or
add
jecxz
fiadds
push
add
jns
xchg
in
pop
enter
add
fdivl
add
mov
xchg
mov
mov
add
pop
popf
addb
adc
mov
add
dec
inc
mov
mov
mov
xchg
lcall
push
in
fisubrs
or
fadds
shlb
add
stos
ljmp
push
mov
imul
sub
add
pusha
pop
jg
mov
add
mov
addb
lods
add
mov
std
or
add
mov
aam
popa
aaa
fwait
daa
imul
add
lock
and
add
lahf
into
fisubrl
mov
add
sub
add
pop
je
or
imul
and
xchg
push
ss
imul
jge
sbb
add
mov
xchg
rorb
clc
xor
add
adc
jne
xlat
and
add
add
cltd
cld
fwait
push
mov
adc
loopne
jle
bound
loop
jno
add
jae
jb
outsb
sbb
add
movsb
add
jl
popf
inc
or
add
imul
add
push
or
add
hlt
test
add
mov
shr
add
sub
dec
add
pop
push
add
push
mov
add
bound
add
jle
inc
xor
imul
xchg
dec
mov
mov
add
add
dec
int3
xor
adc
add
xchg
xor
test
add
imul
add
mov
add
int
xchg
add
mov
add
xchg
dec
addb
lods
add
mov
fucomp
lods
add
jb
gs
or
add
add
xchg
jl
and
add
inc
adc
out
addb
jno
test
clc
mov
add
push
pop
sub
rcl
lods
js
int3
add
add
inc
jns
fstpt
das
div
inc
iret
push
mov
jae
mov
or
inc
xor
xor
int3
repz
add
je
and
rcl
jno
add
sub
add
push
add
pop
push
sub
add
add
push
aad
xchg
rcrb
ss
lods
hlt
aam
pop
aad
mov
add
addb
xor
scas
dec
in
mov
add
jae
out
cmp
dec
dec
or
les
negb
add
aas
test
add
pop
sbb
dec
and
lahf
ljmp
jo
cmp
arpl
fwait
or
add
and
or
add
cld
dec
outsb
xchg
inc
stos
add
test
add
cmpsl
cmpl
and
add
aas
test
push
inc
ret
stc
add
add
add
lea
ss
mov
add
jno
lea
add
cmove
dec
adc
mov
add
add
shrb
cli
jb
mov
les
test
add
sub
dec
addb
fwait
sarl
movsl
pop
adc
dec
pusha
xchg
sub
add
mov
and
sbb
push
push
add
fwait
daa
loop
sbb
stos
cmp
mov
cmp
test
leave
cmp
mov
popa
mov
sub
rclb
add
inc
mov
inc
lret
add
add
rorb
adc
and
xchg
add
mov
mov
xchg
lock
shl
mov
shrl
add
push
lret
add
loop
outsl
dec
xlat
fwait
ss
add
nop
xchg
add
inc
test
sub
xchg
dec
dec
out
scas
add
scas
jg
and
add
jg
bound
add
push
add
or
add
mov
dec
jbe
test
add
mov
push
add
sbb
mov
add
lds
cmp
movsb
add
sbb
cmpsb
add
xchg
popf
lods
cld
mov
pop
aas
sub
xchg
add
sahf
adc
add
nop
cmp
inc
push
cmc
stos
add
imul
rcr
in
lcall
out
pop
repnz
add
leave
pop
shl
sysenter
lret
add
jecxz
xchg
adc
and
add
aaa
and
and
add
dec
mov
jmp
jno
add
nop
out
xchg
jge
std
pop
jp
loope
push
add
sub
test
add
stos
cmp
mov
fstpl
push
out
cmp
iret
sbb
cli
iret
daa
jo
sbb
inc
lret
cmp
dec
imulb
loop
fdivrl
outsl
xor
or
add
pop
fnstenv
hlt
mov
push
popf
dec
repz
add
add
cmp
add
dec
mov
dec
sbb
test
add
push
pop
push
add
sub
mov
aas
outsb
xlat
jmp
lret
xchg
xor
out
cmp
xor
cmp
shl
jl
jmp
add
xchg
mov
add
adc
int
lcall
jne
std
cltd
fsubrs
int3
inc
sahf
and
mov
cmp
int3
mov
push
push
mov
mov
add
cmp
mov
loopne
jg
xchg
jns
stos
ficoml
cmp
mov
sti
clc
dec
in
scas
add
fdivrs
aaa
mov
and
push
sarl
pop
pop
call
add
or
cmpsl
xchg
addb
pop
pop
xchg
sub
add
nop
dec
subl
daa
or
add
aam
add
cmpsl
add
fisttps
add
add
xor
mov
add
cmc
mov
add
cmp
sub
flds
cmp
xchg
out
dec
xchg
push
sub
rcr
add
xor
add
je
hlt
pop
jae
movsb
add
sub
add
arpl
or
add
inc
in
testb
xor
sbb
daa
aam
orl
repz
push
iret
les
sbb
adcl
das
and
add
jmp
aas
inc
shl
test
cmp
mov
add
and
add
in
cltd
add
add
icebp
cmp
mov
add
lahf
mov
xor
stos
add
loope
rclb
clc
add
xor
pop
lcall
add
ret
add
data16
add
add
add
mov
pop
andl
add
rclb
jae
push
or
push
add
repnz
add
or
add
add
mov
rolb
xchg
add
mov
xchg
xchg
jge
mov
add
add
dec
cmp
adc
add
push
add
jmp
add
cmp
out
daa
test
add
movsl
outsb
imul
les
stos
dec
add
push
add
add
mov
push
jl
insl
push
aad
jne
jl
fldpi
adc
xchg
add
dec
fiaddl
push
addb
out
enter
daa
mov
adc
add
mov
add
jecxz
mov
xchg
adc
pop
hlt
outsl
jge
mov
hlt
out
or
add
aad
pop
dec
imul
mov
add
add
mov
popa
cmpl
or
movsb
add
inc
daa
sti
stos
test
add
pop
mov
add
add
add
add
dec
adc
das
movsb
add
cmpsb
add
les
add
insl
add
add
sub
add
out
jb
out
add
cli
sub
xchg
xchg
xchg
pop
adc
mov
add
aam
dec
mov
add
add
add
in
addr16
jl
cltd
jge
insl
arpl
mov
and
and
add
mov
inc
push
dec
and
add
push
add
mov
add
jg
aam
xchg
data16
loope
and
add
cmp
xchg
push
mov
out
fstps
add
les
add
push
add
add
mov
push
fwait
or
add
add
and
add
push
shlb
lods
clc
test
lcall
add
xor
popa
pop
mov
std
xor
or
and
add
pusha
push
add
pop
lahf
std
sub
add
enter
loope
rolb
fidivs
add
mov
dec
sub
add
jmp
mov
jo
add
add
mov
mov
testb
add
out
cmp
pop
daa
stos
rorl
add
xchg
xchg
movl
pop
xor
xor
add
aam
jo
push
rolb
mov
add
add
jb
dec
dec
gs
ret
xchg
add
sub
add
testl
fisttpll
cwtl
pop
adcl
xor
int3
mov
xor
test
xor
frstor
arpl
xchg
dec
nop
or
add
mov
add
ja
pushf
mov
jns
jl
add
sub
out
add
add
add
pop
jge
xlat
repnz
or
lods
push
insl
scas
add
jmp
push
push
cltd
popf
lods
add
dec
push
add
adc
mov
push
fists
and
add
add
add
fstps
sub
add
movq
add
clc
aas
test
add
fistpll
dec
imul
loop
mov
cld
sarl
add
sbb
add
adc
sbb
add
aas
stos
add
add
add
xchg
and
aam
add
add
jle
jmp
and
add
or
add
mov
add
dec
mov
out
inc
adc
and
add
pop
insl
push
pop
adc
inc
ficompl
hlt
call
push
add
push
xor
add
scas
add
or
imul
jbe
rcrb
mov
repnz
add
sub
add
into
and
add
mov
and
add
xchg
add
movb
add
add
insl
fs
lea
add
mov
push
fcompl
aas
or
aam
cmp
std
jo
push
add
push
lahf
aam
mov
ljmp
jmp
das
sahf
addr16
addr16
inc
xchg
add
sub
add
jmp
add
and
inc
addb
cmp
lds
xchg
gs
outsb
lock
add
jp
pop
sub
add
sbb
rorb
push
mov
xor
adc
add
mov
add
add
jmp
insb
mov
add
dec
add
and
cmpl
or
into
test
add
jl
mov
hlt
sahf
dec
dec
into
xlat
jae
push
jp
dec
pop
xor
dec
jae
mov
add
or
xor
mov
in
dec
aaa
add
pop
sahf
cmp
loop
add
cmpsl
outsb
jnp
loopne
out
dec
clc
scas
add
push
xor
add
dec
fimuls
mov
add
les
test
das
mov
add
ret
add
out
jo
cmp
ja
sbb
cmp
pop
pop
or
add
aaa
cmp
and
add
out
fcmove
scas
add
out
test
pop
jo
iret
add
add
dec
insl
out
lock
sub
add
xchg
in
in
mov
add
int
jmp
add
test
add
jmp
add
inc
test
mov
add
pop
testb
add
fidivrs
add
rcl
add
sbb
and
add
add
sub
ret
gs
movsl
sub
fldl
cwtl
ss
aaa
leave
jne
mov
cwtl
cmp
mov
mov
push
add
mov
add
fwait
add
out
push
popf
jae
addr16
add
mov
repz
adc
out
xor
shll
sub
add
int3
flds
jo
sbb
rcll
add
fcoml
pop
sbb
icebp
add
xor
mov
add
lock
int
out
xor
fiadds
add
add
mov
out
inc
pop
mov
add
pop
inc
outsb
cmpsb
add
pusha
prefetchwt1
or
insl
sbb
add
dec
les
outsb
pushf
inc
les
pop
test
add
stc
mov
add
mov
and
add
sub
add
arpl
fdivp
add
cmp
shr
mov
add
nop
or
add
sbb
jb
add
mov
add
add
shlb
inc
imul
add
ficoml
push
mov
rcr
out
or
add
out
pop
rolb
loope
mov
mov
repnz
cmp
xor
inc
mov
out
jnp
jmp
das
add
add
jle
jecxz
fmuls
add
mov
dec
mov
idiv
pusha
push
mov
outsb
mov
mov
push
add
jae
cmpsb
add
pop
loop
push
add
into
mov
add
mov
push
sub
and
add
add
arpl
dec
stos
repnz
cmpsl
pop
mov
jle
nop
mov
add
cmpsl
and
add
lds
insb
xchg
add
dec
jne
pop
incb
xor
mov
rcrb
pop
or
add
pop
ret
xor
xor
xor
xor
add
xor
rorb
scas
add
add
add
and
add
jmp
data16
cmp
add
cmp
xor
rcll
add
mov
add
and
add
out
jns
mov
mov
add
push
sbbl
shrb
add
dec
lods
sub
add
or
add
insb
push
add
jge
gs
inc
add
add
in
mov
movsl
rorl
fsubl
pop
jge
cmc
lock
xor
lret
mov
add
in
stos
add
bound
sub
push
data16
cmp
aam
adc
xchg
fwait
xchg
add
add
cmp
aaa
pop
jge
add
scas
add
dec
cmp
jmp
push
jle
stos
mov
sbb
fistpll
addr16
imul
insl
adc
fsubp
add
stc
movb
add
in
cmp
add
sbb
inc
add
add
ds
xor
call
jb
add
add
adc
add
adc
xlat
addb
inc
ret
xlat
add
add
add
movsb
add
jmp
inc
insl
int
popa
ret
mov
jnp
adc
aaa
dec
cmc
sbb
xor
shr
incl
add
addb
addb
sbb
pop
mov
jmp
and
add
xchg
add
jns
mov
or
movsb
add
or
inc
inc
cld
inc
jne
mov
add
push
nop
test
jle
imul
add
lds
fcmove
addb
cmp
test
add
imul
lds
add
or
add
test
mov
add
addl
add
mov
aas
mov
add
les
das
bound
dec
shr
ret
mov
or
add
bound
pop
ja
aad
fadds
sub
add
pop
mov
add
sub
add
shl
mov
test
add
push
add
jo
stos
fdivs
test
add
lods
int3
cmc
xor
or
cmp
mov
sub
adc
pop
pop
push
mov
lods
call
cli
add
sub
add
add
or
add
mov
mov
std
in
incb
add
arpl
xchg
insb
test
int
sub
add
sub
add
pusha
and
add
pop
and
add
xchg
add
inc
movsb
add
or
add
add
adc
lods
daa
jg
mov
adc
push
push
add
pusha
cmpsb
add
rol
idivb
out
mov
add
add
mov
test
mov
xchg
pop
mov
adc
fs
push
in
xchg
add
and
add
rorb
scas
add
xchg
push
jl
popa
in
jge
and
add
inc
out
push
push
dec
inc
jbe
and
add
add
sbb
cmp
into
sub
add
lahf
enter
cwtl
lods
sub
add
add
shll
int3
ljmp
mov
adc
imul
add
xor
add
repnz
xor
sbb
add
ret
gs
add
push
arpl
mov
add
inc
decl
mov
add
outsl
test
add
out
inc
inc
in
dec
fidivrl
sub
pop
ljmp
add
jbe
add
ljmp
mov
cmpsb
add
mov
int3
mov
xchg
xchg
lods
shlb
movsl
jge
pop
ja
pop
jo
insl
jns,pt
add
add
ret
inc
insl
sub
add
mov
add
xchg
add
add
push
inc
jl
mov
cmc
push
lods
add
dec
xchg
mov
lahf
scas
out
stos
bound
add
js
and
add
movsl
or
add
sbb
add
jle
mov
fs
lods
out
lds
sbb
push
cmp
add
add
add
xchg
out
ret
std
movsb
add
leave
data16
add
ja
mov
add
dec
xchg
push
add
call
jmp
add
inc
ret
movsl
test
push
mov
add
pop
int
lds
add
adc
jae
add
add
jl
shrl
pop
cld
jo
sti
xchg
ljmp
dec
add
add
or
add
cmpsb
add
or
ds
pusha
stos
add
ret
pop
gs
sbb
jae
shlb
mov
add
lret
pop
sub
add
xchg
pop
stos
aas
dec
pop
test
add
and
add
xchg
mov
dec
cli
add
jg
xchg
pusha
insb
push
add
mov
add
add
xor
jp
jle
inc
push
add
mov
add
fildl
jnp
dec
pop
pushf
jecxz
adc
mov
jecxz
push
jle
add
adc
jge
mov
and
add
xchg
shll
adc
mov
add
jo
je
add
data16
pop
cmp
xchg
add
jno
insl
gs
stos
ljmp
out
add
divb
out
mov
addb
stos
inc
out
daa
notl
push
add
fcoms
jnp
xor
loopne
add
clc
xchg
push
add
cmp
pop
iret
mov
cld
aas
mov
add
outsb
aas
xchg
mov
stos
or
add
add
mov
jmp
jp
out
xchg
and
data16
or
dec
sub
add
mov
mov
add
add
call
or
add
push
insb
mov
add
outsb
mov
pop
and
add
cli
jne
enter
popw
jb
lods
add
subl
test
add
jnp
sbb
gs
jmp
add
push
into
pop
mov
bound
popf
imul
lcall
jae
mov
ds
push
cltd
ret
mov
mov
add
pop
add
xchg
out
or
add
add
mov
lahf
leave
mov
mov
push
mov
add
test
add
mov
mov
pop
xor
or
add
add
jp
fnstcw
lods
daa
fs
cmc
lcall
int
enter
pop
sti
insl
or
sub
add
xchg
add
mov
jle
add
add
add
xchg
sbb
sbb
clc
aas
stos
pop
cmp
arpl
iret
push
popa
xchg
or
fdivrl
add
jl
add
roll
fsubrs
add
push
aam
repz
fimull
add
add
enter
testb
add
cmp
push
add
pop
adc
imul
xor
push
pop
add
inc
and
add
add
sbb
fsts
into
fdivrs
push
mov
in
add
inc
pop
jg
addb
mov
sbb
xchg
mov
shr
mov
adc
jne
inc
pop
mov
leave
mov
sub
and
add
xchg
sbbl
jo
xchg
dec
mov
jl
push
cltd
daa
jnp
daa
int3
xchg
jecxz
inc
jp
sbb
and
lret
dec
loopne
add
ret
add
adc
call
fisttpl
add
in
push
adc
lock
gs
mov
daa
xchg
aam
fldl
cmp
xor
loop
add
fwait
daa
mov
mov
add
xchg
subl
pop
adc
movsw
loopne
xchg
mov
sub
mov
and
adc
aas
adcl
das
inc
sbb
jle
add
mov
lods
xor
dec
and
add
fisubl
add
inc
or
add
adc
add
cmp
hlt
lcall
add
adc
dec
cmp
addb
inc
push
ficomps
sub
add
add
mov
pop
add
cvttps2pi
add
add
sar
mov
popa
cli
push
jmp
inc
dec
arpl
popw
lock
adc
movb
lds
add
cmp
leave
fwait
add
or
add
sbb
or
stc
inc
pop
pop
je,pt
push
add
add
add
orl
push
jge
movsl
cmp
add
int
mov
add
gs
pusha
in
aad
fwait
test
add
rcrb
mov
add
mov
add
aam
jecxz
inc
mov
add
addb
cld
dec
dec
pop
repnz
adc
push
or
add
sbb
add
lods
add
add
cwtl
or
add
add
push
pop
pusha
push
add
popa
add
add
add
add
aaa
mov
add
sub
add
test
add
add
xchg
cli
cli
push
adc
and
add
jb
pop
ja
sbb
add
loope
add
push
fstl
add
ja
dec
dec
push
cld
push
add
cmp
xor
mov
xchg
xchg
cli
adc
mov
scas
add
add
aas
ljmp
mov
add
push
add
push
rcl
pop
push
add
push
mov
adc
add
test
add
int
push
les
add
mov
add
pop
mov
scas
add
js
jbe
shrb
inc
mov
cmc
jg
push
cmp
ret
leave
lea
sub
add
push
fbstp
mov
jb
pop
add
add
mov
or
gs
jb
mov
push
jno
push
add
adc
inc
int
cltd
dec
mov
mov
add
add
push
add
lods
add
pop
xor
push
ficompl
cwtl
mov
add
add
sbb
ret
daa
sub
aaa
or
add
add
ret
addb
mov
leave
adc
cmp
add
jl
pusha
pop
dec
ret
and
aad
mov
mov
add
les
in
in
lods
add
or
add
or
add
add
or
sub
add
xchg
out
cmpsl
lea
into
arpl
popf
cmp
add
xchg
jo
enter
jp
jo
jne
or
add
lds
jl
ljmp
push
int3
inc
jle
das
data16
mov
sarb
pop
dec
std
xchg
sbb
jge
sub
add
add
add
mov
into
pop
fidivrl
mov
js
push
adc
mov
incb
insl
stc
sub
add
stc
iret
das
pop
loope
movsbl
lret
in
pop
mov
repnz
add
cli
scas
add
mov
lods
and
push
cmp
outsl
test
add
out
out
imul
cmc
cmp
add
sub
add
add
add
dec
incb
mov
add
lret
icebp
add
add
pop
nop
cmp
push
inc
shrl
addr16
jecxz
das
and
add
push
pop
jbe
jns
arpl
outsb
xchg
sub
pop
inc
das
lret
jbe
push
add
out
cwtl
inc
inc
and
add
repz
mov
dec
and
add
imul
leave
xlat
pop
mov
add
cmp
xor
add
std
jle
sub
aam
shr
popa
movsb
add
pop
addb
xor
repz
push
cwtl
imul
clc
xchg
lret
outsb
cwtl
imul
xor
add
addb
or
jle
sbb
add
stos
rolb
add
add
and
add
aad
nopl
adc
lret
add
cmp
dec
jmp
add
jp
or
add
add
repz
add
dec
fstpt
xchg
cmp
cmp
add
or
add
jnp
push
std
mov
cmp
add
add
add
cmpsl
xchg
sbb
cmp
mov
add
add
out
repz
ror
cwtl
pushf
mov
and
xchg
repz
sub
mov
push
stc
sarl
push
sbb
shll
jmp
push
ja
lock
loope
lret
add
mov
jmp
loopne
sarb
mov
xorl
add
test
add
enter
dec
dec
je
mov
add
push
mov
add
push
movsb
add
jno
addr16
push
and
add
add
inc
push
iret
mov
mov
hlt
loope
je
add
push
or
cmp
ss
out
sahf
sbb
adc
mov
add
popf
cmc
pop
add
shrl
jbe
add
jnp
mov
sarl
xchg
xchg
xchg
aad
add
xchg
push
pop
cwtl
cld
inc
ja
in
inc
sub
dec
call
rorb
mov
add
clc
insb
in
fists
push
sub
add
add
fstpl
push
stc
mov
add
jmp
jmp
and
add
add
ss
xor
add
shll
add
fsts
add
mov
pop
lods
add
jg
sbb
in
jno
lret
inc
adc
cmpsb
add
jg
daa
dec
in
out
adc
cmpsb
add
mov
fwait
cmpsb
add
inc
xchg
dec
or
add
push
mov
pop
xchg
test
add
stc
lret
mov
add
xor
add
fwait
int
dec
push
sbb
aam
adc
mull
add
daa
lods
push
xchg
cwtl
or
add
gs
add
clc
adc
add
js
repz
add
add
add
fs
xchg
add
in
and
imul
lds
nop
dec
xchg
adc
cmp
adc
loopne
lret
mov
add
test
add
add
mov
test
xchg
xlat
sbb
jp
add
loope
jp
mov
add
add
add
mov
mov
add
push
jecxz
je
jp
stos
xor
arpl
or
add
fimull
add
push
mov
xchg
add
out
sbb
add
leave
shll
add
enter
xor
aad
aam
nop
and
add
out
test
add
add
cli
dec
xchg
and
add
cmpsl
iret
je
xchg
std
cmpsl
pop
xchg
aaa
mov
add
xor
push
cmp
add
jge
popf
fisttpl
inc
pop
ja
cwtl
push
iret
shll
xor
jge
push
add
mov
xor
mov
pushf
push
sub
add
mov
fwait
outsl
mov
scas
add
cmpsl
adc
add
das
movsb
add
mov
add
jne
imulb
loopne
repnz
jae
lcall
add
add
push
add
aad
pop
and
add
jg
dec
jl
gs
xchg
push
xor
add
xor
or
add
add
dec
imul
dec
cltd
shlb
insb
mov
and
add
stos
add
les
repnz
lock
or
add
adc
sub
sub
cmpsb
add
clc
xchg
cmp
das
jo
adc
mov
sub
add
add
sahf
xchg
add
sahf
jo
lea
add
repnz
inc
sbb
add
adc
adc
xchg
nop
mov
xor
bound
add
sub
add
jbe
icebp
je
loope
add
shrb
insb
movsb
add
std
hlt
aaa
inc
mov
add
add
and
sub
and
add
in
out
sbb
jge
mov
or
add
mov
add
fidivl
arpl
aam
sbb
lea
lods
add
sub
add
ret
sbb
je
outsl
adc
add
mov
add
add
mov
jne
inc
jb
adc
jb
pop
xchg
dec
lret
pop
lock
push
sti
and
add
sub
add
lods
in
add
push
pop
xchg
push
mov
add
cmpsb
add
mov
pop
xor
addb
add
add
push
dec
rorb
mov
rorl
int
mov
out
sub
add
jmp
adc
mov
outsb
bound
add
insb
push
add
test
pop
dec
lahf
xor
leave
sub
add
rcr
test
add
call
pop
jmp
mov
stos
mov
bound
or
add
add
mov
je
roll
add
sbb
lods
jecxz
jecxz
sbb
dec
xchg
mov
push
sbb
sub
add
add
rol
inc
mov
dec
mov
and
cmpsl
fisttpll
or
add
mov
push
movsl
inc
mov
or
add
rcrl
int
add
test
add
xchg
xchg
inc
push
xor
push
pop
xchg
mov
jae
rolb
movsb
add
push
into
test
addb
xchg
cmp
icebp
decb
fisttpl
dec
int
mov
sbb
aam
add
mov
add
sub
add
mov
add
add
add
push
add
xor
pop
push
cwtl
gs
add
popf
mov
add
add
cmp
out
jmp
add
cmp
add
sub
ljmp
addl
push
pop
pop
sub
sub
add
add
ja
call
scas
insb
add
add
add
ret
mov
add
pop
stos
daa
js
fadds
add
jae
add
jae
mov
jmp
cmpl
pop
shrb
sti
and
leave
data16
push
loope
mov
loope
add
add
aam
pop
or
add
add
cli
pop
sub
clc
outsl
rcl
adc
push
jle
js
add
mov
jo
je
js
in
adc
out
test
add
add
nop
jp
mov
sub
add
mov
cmp
jae
das
stos
push
shr
mov
add
lret
mov
pop
ja
in
ret
sahf
pop
mov
add
mov
add
out
inc
sbb
and
fwait
push
je
jo
loop
fnstenv
xchg
dec
icebp
icebp
pop
ss
adc
cwtl
fldt
int
jbe
add
fwait
hlt
test
rorb
sub
add
sti
rcrb
cltd
fcompl
xor
add
shlb
mov
adc
jmp
rcrb
or
add
pop
push
adc
mov
mov
data16
add
jb
sbb
jg
mov
add
xchg
enter
push
ret
dec
cld
dec
lret
sub
add
add
stos
add
addb
xchg
ss
out
jle
shrl
jge
imul
ret
add
and
test
add
insl
push
mov
jmp
fwait
cli
mov
adc
mov
add
je
testb
push
roll
mov
add
dec
ja
scas
add
sub
add
or
add
add
jle
movsl
in
pop
adc
test
lret
or
add
add
sbb
sbb
fmulp
out
stc
mov
mov
add
sti
leave
popa
mov
das
xchg
pop
in
pusha
psrlw
nop
cmp
or
add
pop
or
add
enter
ds
insl
push
xor
imul
add
lret
ret
or
add
jmp
rolb
xor
ret
xor
xor
leave
sub
add
std
jo
add
mov
in
adc
out
pop
xor
xchg
sahf
mov
lahf
mov
push
and
bnd
out
dec
mov
add
adc
fsts
mov
test
add
pusha
addb
lcall
popl
add
add
jne
jge
push
negb
xlat
push
dec
in
scas
add
jb
dec
sbb
add
xor
pop
mov
push
ret
add
pop
push
sub
loop
cmp
add
dec
pop
cmp
jo
add
push
xor
cmpsl
aas
add
add
dec
out
mov
mov
subl
add
aaa
xchg
mov
cmp
add
scas
add
icebp
cltd
pop
in
mov
add
mov
icebp
mov
lock
pop
xlat
int3
xor
pop
mov
fcomip
js
sbb
add
add
pop
cmc
les
mov
daa
adc
fdivrl
mov
dec
dec
xor
int
pop
adc
add
sahf
dec
dec
mov
icebp
pop
lock
add
loop
sahf
and
add
and
add
lods
add
icebp
addb
imul
mov
add
into
jp
divl
mov
jge
mov
add
ds
pop
xchg
iret
jg
cwtl
lcall
mov
scas
cltd
not
cmp
ffreep
pop
add
int
jbe
or
movsb
add
and
add
jns
imul
popl
shrl
sbb
adc
add
pop
pop
cwtl
lods
add
clc
call
fdivrl
mov
add
sti
inc
aas
into
ret
xlat
add
add
add
mov
dec
pop
pop
pop
call
add
push
mov
fdivrp
dec
xorl
jl
push
push
iret
sub
je
jb
shlb
add
std
add
add
cld
jno
les
dec
mov
add
jbe
in
or
lret
dec
jo
out
loop
jl
and
add
add
clc
lcall
add
gs
test
sbb
cmpsl
dec
jle
cmp
pop
enter
js
mov
adc
add
or
sti
sub
into
stos
add
fistpl
add
movsb
add
push
lahf
loope
pop
mov
push
hlt
push
loop
sbb
add
sbb
sbb
fidivs
out
pop
outsl
fcoms
jp
adc
mov
sub
add
add
fildll
or
sbb
add
jae
or
pop
sbb
xchg
dec
int
lret
push
dec
stc
ja
mov
and
jnp
xchg
add
js
into
pop
xchg
dec
sbb
inc
ficompl
cld
or
add
jo
add
mov
outsl
or
add
fcmovu
sub
sub
add
cmp
lret
xchg
sbb
lret
imul
cwtl
dec
test
add
rolb
jp
dec
in
add
ja
sub
add
add
mov
ljmp
das
inc
repz
aas
xchg
add
xor
scas
movsb
add
into
jnp
adc
cld
arpl
lock
and
inc
mov
mov
adc
mov
fistpll
lea
sarl
sub
add
test
adc
popf
mov
add
mov
sub
add
hlt
psubw
mov
pop
mov
or
add
dec
adc
add
in
pop
mov
mov
std
mov
and
add
or
add
xchg
inc
mov
shlb
mov
add
mov
add
jecxz
test
add
xchg
test
mov
xchg
pop
call
out
jbe
ss
sbb
dec
addb
mov
add
out
lea
dec
jle
add
inc
hlt
sub
add
call
add
mov
add
mov
add
sub
add
jns
and
add
sub
loope
cmpsl
nop
lods
lods
add
out
icebp
add
sarl
aaa
in
push
mov
clc
jae
sbb
jle
lock
shlb
push
add
jmp
xor
and
add
rolb
add
mov
add
mov
add
xor
add
xchg
mov
sbb
outsl
notb
dec
outsb
sub
add
add
jge
lods
add
mulb
ss
and
add
loopw
add
push
add
xchg
and
xor
iret
or
add
insb
outsb
popf
lret
lods
add
call
sahf
pop
daa
cltd
imul
addr16
inc
orl
pusha
add
add
adc
pushf
dec
pop
add
push
mov
stos
adc
dec
sbb
jecxz
pop
fists
ss
sbb
and
and
movsl
sub
lea
add
add
bound
dec
mov
add
add
ret
add
xchg
xor
add
sub
lods
dec
jmp
rcll
add
add
popa
ljmp
pop
rorl
iret
jnp
pop
addb
lret
or
add
add
enter
pop
xchg
loopne
add
iret
cmpsl
fstl
pop
ljmp
or
add
sti
outsb
lcall
dec
shl
addb
imul
add
add
sub
add
shll
in
adc
fildl
jg
cli
add
add
xchg
test
add
add
outsl
add
sti
xchg
jmp
and
add
add
pop
lock
iret
shlb
cltd
jmp
add
push
xlat
or
add
xchg
and
add
jne
xchg
andl
iret
cmc
in
call
xor
stos
push
push
mov
pop
pop
sbb
fsubp
jl
out
js
pop
dec
pop
push
push
add
push
jbe
push
std
pop
lods
add
test
add
shl
repnz
loop
sub
mov
out
mov
add
jnp
add
out
sub
add
or
add
add
ret
push
add
or
add
aas
mov
mov
add
fst
icebp
and
imul
add
dec
cmp
jae
add
and
add
xor
dec
lcall
add
add
add
aad
jb
push
scas
dec
sbb
xlat
test
add
jnp
or
nop
fildll
add
xchg
mov
add
push
loop
sahf
enter
add
add
xchg
jge
fimuls
add
aad
adc
cmp
add
xor
je
add
int
adc
inc
lods
add
sbb
rcl
andl
bound
xchg
lret
add
add
int3
pop
or
xchg
add
stc
push
call
lea
add
mov
mov
scas
add
jno
jecxz
rcll
adc
pop
dec
sbb
dec
dec
movsb
add
mov
add
cmp
push
adc
nop
loope
inc
push
dec
out
test
add
inc
dec
mov
out
insl
cli
jle
lock
test
popf
jne
jae
push
add
adc
outsl
inc
pop
xor
xor
sar
mov
add
inc
xor
xlat
cmp
test
add
sub
add
cmp
add
arpl
add
pushf
mov
add
add
addb
inc
stos
add
mov
add
xor
jmp
imul
mov
pop
mov
add
aaa
mov
ss
add
add
push
add
mov
aaa
ljmp
add
icebp
aas
xor
inc
dec
daa
insb
imul
push
xor
xchg
mov
shll
fistpll
sub
add
add
add
dec
mov
jb
cmp
add
xor
mov
scas
imul
add
push
shrb
add
xchg
dec
ljmp
push
popf
js
in
mov
repz
sbb
iret
mov
out
push
sub
add
push
rorb
and
fcomip
je
push
aas
add
leave
mov
jo
jge
inc
mov
add
lret
push
add
xchg
popf
xchg
adc
add
cmc
aas
xchg
add
loopne
xchg
pusha
mull
nop
sbbl
add
inc
mov
enter
add
lods
pop
pop
cmp
out
xchg
xchg
loop
adc
ds
in
or
add
add
out
call
stc
movsl
jae
bound
add
dec
add
add
add
add
mov
add
ljmp
add
sbb
fisubs
jmp
push
dec
lea
in
jne
pop
mov
mov
ret
or
add
das
ja
xor
mov
fldl
cmp
movsb
add
sub
add
xchg
push
cmp
adcl
add
jnp
mov
mov
adcl
lock
imul
out
test
add
cli
ljmp
icebp
xlat
or
add
adc
jnp
test
push
add
add
add
add
loopne
dec
les
add
fimuls
aas
out
xchg
add
lock
roll
in
daa
pop
push
add
sahf
adcl
insb
inc
int
push
pop
gs
sub
stos
mov
add
mov
dec
jle
xor
enter
push
add
mov
outsb
insb
mov
add
jl
and
add
add
add
das
std
mov
add
add
shlb
cmp
ret
ja
add
add
push
or
add
inc
out
sub
add
scas
fistps
add
add
add
nop
inc
out
adc
dec
lret
add
rdmsr
dec
into
lock
jo
test
add
sbb
push
cmp
mov
testb
add
jp
pop
out
jo
jbe
add
xchg
add
or
mov
add
mov
add
add
stc
addr16
jl
imul
or
add
dec
and
add
inc
xchg
add
jg
inc
sbb
pusha
lds
mov
inc
pop
inc
and
xchg
add
add
out
jle
pop
mov
dec
mov
aaa
loopne
js
insl
or
adc
add
cwtl
std
call
pop
das
and
add
push
dec
push
aaa
sub
add
mov
repz
cli
fildl
add
inc
mov
lahf
mov
add
stos
add
add
add
add
mov
mov
add
sub
add
ja
inc
add
add
add
xor
inc
xor
cmp
xchg
pop
sub
lds
jno
das
test
xchg
add
sub
add
loop
cmc
add
xchg
or
add
add
clc
pop
loopne
push
cmp
jbe
mov
jl
jbe
nop
je
add
add
mov
add
pop
jle
cmc
and
add
cmp
inc
sub
lods
add
daa
loop
cmp
cwtl
or
add
faddl
addb
or
movsb
add
outsb
out
cmc
push
std
enter
mov
xchg
jbe
dec
xor
lcall
int
in
clc
mov
add
add
shll
pop
jne
xor
add
test
add
test
add
xchg
and
add
out
fistl
add
incb
ror
lds
mov
cmp
fnstenv
cmp
and
dec
std
popf
mov
jno
lcall
xor
xor
add
pop
addb
dec
lret
stos
add
lea
sar
insl
pushf
xchg
imul
adc
sbb
popa
pusha
mov
and
jo
and
add
adc
mov
mov
cli
and
add
add
mull
add
sar
div
fwait
jl
or
lds
addr16
xor
fists
std
sbb
nop
lods
add
dec
or
add
mov
add
add
ficoml
add
call
aad
mov
add
lahf
sbb
aaa
fldt
jae
sub
out
jmp
lods
add
pop
leave
mov
add
mov
add
sbb
add
xor
insb
cmp
out
push
push
add
int3
shl
add
cwtl
stos
add
bound
add
mov
add
mov
add
cwtl
jns
lock
add
add
pop
loop
or
add
add
sub
add
add
jbe
mov
in
fwait
jmp
xor
cmp
inc
pushl
loopne
jae
xor
lods
add
rcl
ret
lea
pop
mov
ficomps
add
js
nop
ja
mov
lret
push
fwait
add
add
bswap
mov
leave
add
and
add
lock
add
push
add
pop
jb
mov
les
ss
mov
insl
aad
xchg
jmp
add
je
inc
lods
sub
add
xchg
std
mov
and
add
scas
add
sbb
mov
add
and
add
inc
inc
mov
push
push
js
loop
loope
add
inc
adc
lret
adc
in
adc
add
add
push
push
je
mov
add
pop
jns
ljmp
out
add
cmpsb
add
fs
add
xor
lret
adc
xor
add
mov
jmp
pop
out
add
loopne
add
sbb
pop
inc
inc
xchg
ds
mov
jg
scas
add
call
sbb
dec
add
or
add
out
or
das
aam
adc
mov
addb
cmpsl
cmp
lcall
lods
add
jl
or
add
add
add
adc
push
add
pusha
test
add
add
push
add
push
movsb
add
stc
cwtl
sbb
mov
add
test
fs
or
jl
aad
xchg
addb
ss
inc
jnp
popa
sbb
mov
adc
add
adc
add
push
add
adc
and
add
cmc
xchg
add
add
jle
add
out
addb
push
mull
adc
add
je
xchg
add
pop
mov
in
cmp
scas
leave
mov
inc
xchg
aas
ret
mov
add
mov
scas
add
mov
hlt
enter
add
add
popa
push
push
pop
adc
inc
inc
call
mov
sarl
in
imul
jp
sub
add
shrl
add
addb
and
addr16
addb
add
add
mov
ffreep
loop
jp
adc
das
mov
inc
pop
out
add
lea
mov
aas
xchg
add
lods
add
add
push
insb
subl
jb
jge
add
insl
pop
pop
test
out
pop
xchg
add
jecxz
add
jge
mov
loop
jo
lcall
popa
into
push
add
mov
or
add
sub
add
sub
add
daa
loop
imul
sbb
movaps
add
or
pop
scas
push
add
add
add
js
sbb
insl
call
pop
xchg
outsl
dec
xchg
repz
or
add
std
outsb
and
add
add
and
imul
pop
pop
loopne
cmpsl
nopl
out
divl
add
testb
add
and
add
push
sub
push
add
addb
aaa
or
add
add
add
add
adc
adc
add
add
shll
xor
pop
push
adc
cld
repz
or
outsl
lahf
adc
add
add
mov
mov
add
mov
add
add
out
test
add
imul
pushl
add
xchg
mov
jge
cld
push
outsb
pop
insb
popf
jmp
add
add
mov
add
data16
cmpsl
fisttpl
jl
xor
enter
pop
sbb
mov
mov
add
sti
rol
lea
adc
cltd
lds
mov
add
repz
mov
lds
push
fwait
add
add
shll
js
in
push
pop
jo
push
jl
ja
negb
clc
lret
add
add
or
add
out
sub
dec
xchg
std
loop
mov
jno
jle
test
add
add
subl
imul
loope
add
cmpsb
add
push
cmp
test
or
sbb
inc
mov
cld
inc
lods
add
shrb
icebp
fidivl
or
cmpsb
add
pop
xchg
dec
out
scas
test
mov
add
or
add
test
push
setns
or
add
loopne
push
icebp
cmp
xchg
inc
mov
add
fstl
mov
mov
dec
or
add
adc
ret
or
and
and
add
or
ss
sub
add
add
lea
fcomps
jns
gs
sbb
stos
fstp
sti
lret
sti
movsb
add
add
popf
insb
sub
test
ja
mov
dec
mov
add
add
ffree
rcrb
lods
mov
iret
sbb
je
cmp
mov
or
add
jl
add
clc
xchg
add
jl
cmp
mov
add
push
inc
lods
xchg
movsb
add
push
shrl
lcall
xchg
mov
add
shrl
sub
dec
xchg
outsl
push
rclb
mov
add
gs
jp
hlt
inc
inc
dec
mov
add
faddl
add
jae
add
xchg
cmpsb
add
push
pop
mov
and
add
inc
shll
mov
dec
in
iret
xor
add
mov
shrl
int
cmp
imul
dec
and
nop
test
add
pop
push
add
or
lahf
lret
xor
sbb
xchg
add
fs
icebp
mov
icebp
pop
ret
mov
mov
lds
xlat
mov
add
mov
mov
outsb
jp
das
pop
adc
sbb
add
mov
pop
add
add
push
mov
add
jp
add
ja
outsb
jmp
rcrb
jae
rorb
jecxz
jecxz
dec
cmp
into
ss
add
inc
cmp
push
mov
lahf
sbb
call
shrb
sub
movsb
add
adc
add
adc
add
push
mov
add
mov
add
sbb
dec
jne
jg
clc
mov
aad
push
and
int3
in
and
add
add
pop
dec
pop
ja
aad
add
pop
or
push
add
add
add
ss
fstpl
and
add
jne
pop
push
inc
add
dec
arpl
jno
push
xchg
pushf
in
addr16
pusha
clc
xor
sbb
test
sub
add
shlb
mov
jle
mov
dec
xchg
call
fildll
outsb
pop
clc
and
add
sbb
inc
bound
mov
inc
popf
ds
xchg
div
repz
in
in
sbb
add
and
add
ja
movsb
add
push
popf
imul
cld
jp
jle
sbb
addb
or
add
add
dec
fabs
cltd
pop
or
inc
push
add
lods
add
push
in
lret
rorb
push
je
xchg
bound
add
arpl
add
lcall
adc
add
mov
pop
daa
sub
xchg
push
add
jbe
add
cmpsl
ficomps
inc
or
add
sub
push
add
adc
add
xor
nop
add
add
add
fwait
and
inc
in
inc
dec
rcrb
testl
add
add
movsb
add
incb
add
hlt
pop
sbb
add
cmpsb
add
insl
ret
in
pop
mov
add
enter
int
jae
jns
iret
das
movsb
add
lods
add
cmp
or
add
mov
add
stc
and
mov
push
add
push
cltd
popf
loopne
and
add
mov
add
data16
add
jo
mov
add
mov
std
inc
out
ljmp
test
add
jge
add
add
add
mov
sahf
out
jnp
xor
inc
xchg
and
mov
add
push
sti
jno
ja
cmp
sti
push
mov
lods
adc
jecxz
lods
or
add
mov
fbld
mov
add
mov
mov
xchg
aad
add
ljmp
je
pop
push
das
push
out
inc
lods
pop
repz
add
in
dec
xchg
xchg
add
test
repnz
add
add
lret
sbb
or
add
add
jo
push
jo
lods
add
xchg
inc
stos
adc
call
ja
fimuls
add
add
add
add
in
les
and
add
add
xchg
out
mov
xor
jl
mov
add
jecxz
add
cmp
movzwl
fcoms
pop
adc
orl
add
and
add
mov
push
mov
add
mov
loope
push
mov
xor
loope
mov
jmp
mov
add
mov
add
arpl
dec
out
add
inc
mov
add
pop
rolb
out
jle
cmp
mov
cmpsb
add
jg
sahf
jmp
icebp
stos
insl
sahf
cwtl
push
add
add
jmp
adc
orl
lods
add
pushf
jns
add
daa
ss
xor
inc
dec
xchg
ret
mov
add
mov
add
outsl
outsb
out
movsb
add
add
add
fsts
clc
dec
push
lahf
sbb
stos
add
outsb
ret
fnstsw
add
popa
push
addr16
clc
jmp
add
mov
fbld
movsl
dec
mov
add
movsb
add
addb
dec
fbld
pop
lock
jmp
negl
loopne
ret
pop
shll
xor
sub
add
jle
pop
je
pop
hlt
pop
dec
ficoml
mov
add
and
loop
addb
iret
cmp
or
add
sbb
pop
ror
sub
add
mov
add
das
scas
add
adc
sbb
loop
insb
dec
mov
add
cmpsb
add
rorl
add
cmp
or
mov
add
mov
stos
sub
sti
pusha
mov
pop
add
mov
not
pop
movsb
add
mov
bound
dec
and
add
mov
and
cmpsb
add
in
test
push
ja
dec
dec
int3
xlat
enter
add
adc
add
sub
imull
push
add
rcrb
pushf
ss
shl
int3
mov
xor
lods
in
pop
push
out
pop
int3
insb
pop
out
clc
pop
push
cld
clc
sub
add
in
sbb
mov
push
stc
ret
xor
mov
add
mov
cmp
inc
lahf
and
add
mov
dec
mov
adc
xlat
mov
and
add
xor
popf
mov
paddq
jno
sbb
add
fcompl
sahf
movsl
mov
jne
inc
xlat
push
push
and
add
mov
je
push
imul
dec
movsb
add
fsubrl
xlat
cli
std
out
mov
add
xlat
xchg
movsb
add
jne
push
mov
lret
lcall
sbb
xor
mov
xor
fistpll
add
mov
dec
mov
repnz
lret
pop
fildll
imul
fsts
mov
bound
das
cmpsl
dec
mov
jno
inc
lahf
fcomps
call
sub
add
decl
cmp
test
cmc
icebp
inc
add
add
dec
call
in
add
add
sub
add
pusha
addb
sbb
jl
in
lods
or
add
add
add
add
add
hlt
mov
iret
mov
add
add
lock
addb
insl
push
pop
inc
pop
mov
in
and
cmp
add
xor
push
xlat
jle
jge
sahf
cmp
pusha
cltd
dec
shr
mov
sub
add
addr16
inc
insl
lea
add
sub
add
adc
and
add
dec
pop
adc
mov
cmpsl
mov
add
fbld
add
fisubl
aaa
jns
scas
add
test
add
hlt
mov
jg
add
mov
add
push
or
add
mov
add
sti
xchg
clc
jmp
sub
add
add
sbb
test
add
and
add
cmp
les
add
mov
add
sbb
cld
xorl
outsl
pop
sbb
add
xchg
add
dec
push
jge
dec
jne
add
shll
add
gs
jne
mov
mov
add
pop
icebp
call
xor
sub
add
pop
jbe
repz
add
pop
pusha
xchg
xor
add
das
cli
add
mov
scas
add
stos
add
add
add
pushf
pop
sub
add
inc
add
ja
xchg
add
insl
cwtl
sbb
aas
lret
test
cmp
std
add
cld
and
xor
ret
pushf
fistpll
add
mov
add
inc
push
or
add
pop
push
jno
and
fwait
sbb
dec
push
add
adc
icebp
pop
dec
ss
int3
sbb
test
add
std
inc
add
je
into
outsl
pop
mov
push
pop
sbb
push
add
xchg
leave
imul
jge
fmul
mov
add
fwait
insl
cli
lods
add
push
add
mov
add
pop
fistpll
cmpsb
add
je
add
add
mov
in
mov
cmp
dec
or
add
mov
add
mov
xor
fwait
push
rcrb
leave
mov
xchg
addb
imul
cmp
add
lea
rol
xchg
mov
les
add
adc
testl
rorb
fmuls
insl
sub
add
add
or
add
mov
lret
push
cmpl
test
add
sbb
pop
inc
lcall
xchg
adc
pop
mov
cmpsb
add
int
add
add
je
lahf
clc
mov
add
addl
aaa
cmpsb
add
xor
add
pop
sti
xchg
cmp
stos
add
push
loope
mov
add
or
add
addr16
and
add
jg
cltd
sti
jo
jae
mov
add
jnp
movsb
add
dec
jle
test
add
mov
lret
adc
pop
dec
fldcw
das
adc
add
sbb
add
std
sub
add
xlat
je,pt
adc
add
add
imul
sti
negb
in
ss
outsb
and
mov
rdtsc
xchg
add
add
dec
jo
imul
add
jbe
push
jl
daa
enter
adc
cmc
lods
in
test
xlat
addb
mov
inc
inc
clc
add
dec
pop
mov
adc
xlat
enter
adc
mov
add
ror
fdiv
xchg
sbb
xchg
add
dec
cmpsb
add
mov
adc
lret
movsl
enter
xchg
iret
pushf
into
cmp
mov
push
dec
sub
add
mov
add
pop
jge
xchg
sub
lods
add
add
add
inc
dec
mov
add
sub
stc
adc
xor
cmp
repz
pop
jo
jecxz
add
ss
fstl
or
add
call
stos
add
dec
mov
leave
xor
loop
sbb
mov
roll
add
or
add
lret
imul
inc
test
pop
adcl
loope
push
add
arpl
lahf
or
add
cmpsl
dec
cmpsb
add
repz
cmpsl
out
mov
add
add
hlt
sub
add
add
xchg
cld
inc
ja
pop
icebp
test
add
add
pop
arpl
ds
add
out
dec
cmp
lea
add
pop
sbb
add
out
add
xchg
loope
mov
add
mov
mov
add
jae
jp
add
add
and
dec
inc
mov
add
lods
add
in
add
pop
xchg
add
add
lcall
mull
xor
sub
mov
mov
sub
add
aam
mov
push
leave
loop
gs
lret
push
jl
jnp
lods
rcrl
mov
popf
sbb
or
add
add
push
insl
popf
xor
add
loope
add
addb
call
add
call
jne
fnstcw
ljmp
jnp
addr16
cmc
ficompl
add
mov
repnz
in
cld
mov
dec
dec
mov
pop
push
add
cmpsb
add
mov
mov
rcrl
and
add
idivb
fbstp
jle
adc
add
adc
addr16
sbb
or
push
add
jnp
fsubrs
xchg
std
mov
rclb
je
sub
and
add
into
jno
add
int
pusha
and
add
pop
ja
daa
jg
push
cltd
sti
std
nop
std
push
popa
mov
push
mov
lahf
or
add
adc
add
cld
mov
xchg
xchg
add
xchg
insl
mov
add
xchg
pop
dec
xor
sbb
add
sbb
repz
aaa
push
pop
rcl
jge
add
or
testb
addr16
add
adc
fwait
pop
loope
push
mov
xor
sbb
add
xchg
add
xchg
add
or
inc
xor
mov
cmp
add
add
add
pop
push
sbb
sbb
add
wrmsr
pop
sbb
add
outsl
ja
call
xor
loop
out
fninit
fbld
ror
mov
add
dec
bound
add
loopne
mov
pop
daa
cmpsb
add
stos
add
lock
add
add
push
add
xor
rclb
inc
xor
gs
insl
mov
add
cmp
and
add
or
add
mov
add
cmp
add
pop
adc
mov
fwait
ja
mov
or
add
out
popf
sub
add
lea
addb
sti
mov
jge
insl
xchg
rcl
and
add
or
in
sar
mov
jbe
add
sbb
add
mov
sbb
pop
pop
push
cmp
pop
rcrl
add
xor
mov
xchg
in
aad
popf
sbb
cmpsb
add
mov
in
cmp
xor
xor
add
sub
add
jle
fdivrs
sti
mov
xor
add
test
add
dec
push
in
sbb
iret
mov
andl
add
add
push
xor
xor
xlat
loope
xor
push
xchg
cli
inc
sbb
repnz
addb
sbb
lret
lret
sahf
lea
inc
jg
ds
in
jmp
leave
lcall
add
imul
negb
add
fnsave
cmp
mov
lock
add
repz
ficomps
cmpsl
bound
jp
jnp
mov
lods
jmp
mov
add
movsl
in
out
mov
dec
xor
cmp
cmp
add
jp
jle
inc
lcall
int3
rorl
scas
add
hlt
cmp
pop
jno
dec
inc
ljmp
or
gs
cmp
adc
mov
and
inc
and
sbb
stos
add
push
repnz
dec
mov
add
add
add
inc
cltd
insl
rcrl
add
lock
dec
stos
add
dec
leave
and
add
add
or
add
add
add
sub
add
add
and
add
ret
add
dec
mov
add
and
add
adc
aam
lock
fs
inc
push
imul
pop
fs
xor
jno
cmp
add
test
add
add
inc
loop
addb
sti
xor
dec
iret
push
int
add
ret
ficoml
and
add
outsb
mov
xor
das
push
std
int
sub
add
jg
daa
or
mov
scas
cmp
add
out
fbstp
sub
add
ret
add
loop
int
mov
jmp
jecxz
mov
jg
data16
add
nop
adc
add
test
cmpsl
xor
cltd
test
add
adc
add
sub
add
mov
inc
jp
fwait
mov
fcomp
mov
add
rcll
jnp
aas
sbb
push
adc
add
pop
pop
rcl
pop
and
add
fildl
mov
jp
cmp
ss
nop
ljmp
popa
xor
int
test
add
xchg
ret
push
add
add
test
sahf
or
add
sbb
xchg
add
add
add
adc
addb
push
add
aam
jo
in
add
add
or
add
fs
mov
add
scas
add
dec
push
or
add
pop
cmpsl
sub
add
or
add
xchg
pop
jb
add
xchg
arpl
add
add
push
lea
cltd
mov
mov
std
sub
add
push
incl
add
mov
cmc
imul
sbb
repz
add
clc
mov
jp
add
sub
jmp
push
inc
in
sub
add
mov
add
daa
cmpsb
add
add
imul
mov
lahf
mov
add
xor
push
add
movb
push
mov
mov
addb
xor
push
jp
icebp
mov
ret
xchg
add
mov
das
sahf
lahf
outsl
icebp
push
lcall
inc
pusha
push
xor
sub
lods
add
push
shrb
notl
gs
cld
loope
mov
sbb
push
add
sub
inc
dec
lret
aam
mov
mov
scas
add
imul
add
mov
mov
add
shl
movsb
add
or
cmp
add
mov
inc
ljmp
mov
jp
add
or
jo
out
shlb
add
and
mov
pop
mov
add
pop
out
sbb
mov
add
insb
cmp
mov
mov
push
sub
add
add
movsb
add
mov
shl
outsl
xchg
out
jo
insb
scas
add
test
test
xchg
add
jl
add
lret
in
mov
add
add
xchg
add
jge
lret
and
add
push
sbb
mov
add
and
add
inc
std
sbb
cmpsl
into
mov
or
xchg
loop
cltd
fldenv
xchg
movsl
gs
lret
add
ss
mov
cmp
ljmp
add
pop
mov
add
add
enter
fisubl
outsb
mov
dec
pop
imul
add
outsb
pushf
popa
in
pop
inc
repz
add
add
lahf
inc
xor
sub
add
push
shrl
push
sbb
fcompl
add
dec
movsl
cli
xor
cmpsb
add
cmpsb
add
outsb
pop
pop
dec
cmp
add
cld
fnop
mov
add
pop
jno
in
mov
js
mov
add
mov
in
leave
jp
inc
repnz
dec
dec
roll
add
xor
xchg
daa
push
add
jno
dec
dec
pop
or
idiv
fs
imul
push
add
in
lea
stos
add
mov
add
hlt
cmp
lods
add
shlb
cmpsb
add
sbb
add
sbb
add
leave
data16
add
lea
pop
fnstcw
rorl
mov
add
test
add
mov
cmp
dec
adc
xor
mov
add
pop
mov
ds
inc
and
pop
ret
ljmp
add
mov
add
mov
loope
or
popa
popa
inc
jnp
add
xor
std
mov
in
nop
lods
std
lods
add
or
js
add
and
aaa
sahf
mov
addb
pop
inc
dec
add
out
push
jb
imul
test
add
clc
jns
dec
int
sbb
jg
adc
adc
inc
dec
add
aam
shl
in
mov
mov
push
movsl
inc
dec
cltd
mov
daa
fcoms
jl
xchg
push
add
jle
mov
jo
and
loope
push
add
cld
addr16
xchg
and
xchg
mov
loopne
aas
mov
xchg
lcall
cmp
mov
in
mov
or
add
test
push
mov
push
jmp
add
and
add
or
add
outsl
mov
jle
pop
jae
mov
add
pop
movsb
add
cmpsl
inc
stc
cmc
dec
sub
cld
push
sub
add
cmp
inc
adc
pusha
loope
outsb
push
jle
cmp
stos
imul
iret
mov
lcall
mov
add
pop
pop
inc
idivb
pop
jmp
add
pop
outsb
inc
push
add
add
ds
xor
insl
and
sar
into
sub
lcall
adc
sub
add
mov
add
or
add
push
and
pusha
add
addb
pop
dec
in
add
xchg
call
mov
test
add
adc
xor
repnz
xchg
add
push
scas
add
addb
dec
std
stos
add
inc
stos
add
insb
jp
lahf
lds
dec
adc
ljmp
add
sub
add
sub
add
add
repz
lret
mov
adcl
add
mov
push
add
mov
add
jmp
sar
push
mov
cmp
enter
sub
repnz
lods
pop
clc
pop
gs
dec
jl
xchg
popf
loope
sahf
pop
out
imul
push
je
aaa
sbb
and
add
add
pop
mov
jns
jbe
in
cld
lock
imul
add
in
cmpsl
push
loope
lods
mov
add
push
mov
addb
add
jno
addb
mov
add
in
cwtl
stc
adc
add
add
add
mov
add
out
scas
add
int
cmpsl
mov
mov
mull
add
movsb
add
sub
mov
push
cmpsb
add
das
pop
dec
or
pop
adc
idivl
mov
movsb
add
and
jno
push
sbb
xor
inc
shrb
inc
imul
sub
add
cmp
xlat
pushf
and
add
in
and
add
jb
jp
pop
or
add
aaa
idivb
xchg
int
add
fistpll
sub
add
push
mov
das
cmp
add
cmc
cmpsl
mov
shll
add
fcomp
add
test
add
lea
jl
sbb
adc
sub
add
test
add
sarb
jl
ja
imul
enter
inc
jge
stos
movsb
add
mov
add
add
std
mov
add
and
cmp
inc
pop
adc
in
sub
add
cmp
jp
into
cmpsl
rclb
xchg
ljmp
aas
lods
cmpsl
dec
loope
scas
xchg
jo
add
jmp
sbb
repz
jo
add
rol
xchg
mov
xlat
mov
cwtl
jp
add
outsl
mov
mov
sbb
and
cmpsb
add
mov
add
sub
add
cmc
cmpsw
leave
xlat
jns
xor
mov
out
ja
subl
test
cltd
push
icebp
jno
inc
jge
cltd
push
adc
add
inc
in
and
lret
jp
pusha
aad
jb
xlat
movsb
add
out
movsb
add
add
inc
loopne
fwait
loop
xor
or
enter
lods
ss
cmc
fisubrs
into
xchg
add
jae
cmp
add
cmp
repz
lea
aaa
xorl
jbe
adc
mov
adc
add
cltd
inc
movsb
add
pop
leave
xchg
add
divb
add
sbb
push
add
gs
in
and
mov
aad
sub
add
cli
scas
add
mov
add
dec
cmpsb
add
sub
out
gs
lret
sbbl
data16
cltd
cmpsb
add
push
inc
int3
xchg
add
repz
fistl
add
sub
add
xchg
cmc
shl
loopne
mov
or
add
sub
inc
xor
add
dec
jecxz
aaa
inc
push
aam
xchg
punpckhdq
mov
add
das
xchg
add
jnp
push
shl
imul
add
popf
shrb
add
sub
add
inc
sbb
mov
lret
negb
inc
in
or
add
add
aas
les
out
sti
out
jne
push
imul
dec
leave
add
notb
mov
clc
add
cmp
stos
clc
xor
cli
pop
leave
sub
sub
add
pop
shlb
add
add
add
arpl
adc
add
sbb
add
out
cmp
mov
mov
add
lret
mov
push
jne
add
sarb
dec
sbb
mov
add
pop
dec
and
add
push
das
pushf
out
movsb
add
push
inc
shl
je
sti
pop
pushf
cmpsb
add
jg
sub
out
stc
cmpsl
dec
pop
into
cmp
sbb
outsb
jno
icebp
and
add
push
adc
outsb
arpl
lock
cltd
and
add
fnsave
in
and
cmp
push
out
popa
inc
testb
add
inc
lods
arpl
subl
and
jecxz
adc
add
add
push
sbb
sbb
into
mov
add
mov
add
in
sub
dec
insl
xor
insb
popa
cmp
sti
lret
mov
ss
mov
mov
add
add
add
test
inc
and
lcall
out
loopne
mov
add
pop
adc
push
jb
add
sbb
outsl
sub
add
pushf
push
daa
jns
cmp
out
fcmovne
das
insb
jno
mov
pop
push
cmp
lcall
nop
in
out
into
imul
mov
and
add
mov
xchg
dec
inc
and
in
mov
jle
or
add
fdivs
lahf
repz
add
add
icebp
cmpsl
adc
out
push
adc
mov
and
xor
push
cmpsb
add
sub
rol
fwait
pushf
lcall
cmpl
add
adc
insl
jb
shr
push
push
out
shrb
mov
add
xchg
data16
add
pop
mov
or
add
or
add
jb
sub
add
push
dec
std
inc
cmp
das
in
pusha
mov
and
jno
add
mov
loop
stc
add
cld
mov
jae
xchg
imul
daa
test
stc
dec
fistpl
testb
add
dec
daa
ja
add
sbb
mov
fnsave
add
gs
jge
rcrl
repz
int3
hlt
push
addb
arpl
mov
xlat
cmp
jne
ss
pop
pusha
xchg
lods
add
dec
mov
mov
test
add
add
loope
add
into
out
movl
adc
jb
or
add
outsl
call
add
arpl
mov
add
xchg
mov
mov
iret
lods
dec
adc
add
cltd
mov
dec
cmc
aas
jnp
sahf
mov
add
sbb
and
add
cmp
shll
out
cmp
dec
out
pop
les
bound
cltd
mov
pop
iret
pop
pop
flds
sti
cmp
lods
dec
mov
xchg
add
cli
ret
xor
out
fwait
xchg
add
add
push
or
add
sbb
add
daa
mov
jne
add
push
cmp
mov
lods
or
lcall
adc
mov
movsb
add
in
add
add
add
add
dec
or
add
repnz
add
add
add
cld
inc
sub
add
into
jmp
out
arpl
push
lock
mov
loope
add
pusha
inc
jne
ret
cmp
jl
inc
jecxz
mov
fwait
pop
xchg
lcall
jns
mov
xchg
aam
push
fisubrl
cmp
pushf
xor
movsl
fistps
mov
jns
rcll
call
jmp
add
xchg
pop
push
daa
pop
push
xchg
dec
bound
out
out
outsl
or
add
sub
add
dec
add
add
dec
out
push
inc
push
add
frstor
add
cmp
fidivrs
fucom
out
mov
add
cmc
into
scas
xchg
ror
imul
push
push
cmpsl
xor
aas
sbb
add
scas
bound
add
out
ja
mov
sbb
inc
fidivrl
lock
pop
mov
lret
lret
adc
add
mov
push
fildl
add
add
mov
mov
sub
out
test
and
add
mov
add
add
and
add
in
hlt
fidivl
inc
xor
lret
je
scas
jecxz
push
xchg
add
subl
add
xor
gs
fistl
loopne
lock
imul
mov
add
sub
lret
push
rcll
add
push
and
dec
aad
inc
loop
add
inc
ds
add
mov
add
outsl
bound
add
pop
clc
lea
addb
nop
xchg
mov
push
push
mov
add
jmp
out
push
fsubrs
inc
adc
and
add
stos
add
and
jnp
arpl
mov
push
insl
adc
movsl
add
add
jle
jno
andl
cmp
xor
mov
add
add
xchg
sahf
incb
popa
adc
sbb
mov
pop
aas
sbb
push
mov
test
and
add
loope
das
addb
out
out
cmp
fidivrs
pop
sti
push
push
mov
xchg
add
nop
daa
clc
rclb
xor
test
aaa
stos
add
add
insl
sbb
test
add
stos
add
sub
mov
sahf
lcall
push
lcall
mov
in
test
add
pop
mov
enter
addr16
and
iret
jb
adc
addr16
popa
mov
mov
mov
divb
sub
sbb
out
sahf
hlt
shlb
add
pop
pusha
push
adc
fsubr
ja
jge
fiadds
add
mov
outsl
mov
aas
cld
rclb
jmp
or
add
add
cmc
lods
and
add
pop
add
jle
sti
cmp
iret
dec
shl
fst
add
mov
fiaddl
add
and
test
addb
aam
add
sbb
bound
les
add
ljmp
lds
mov
mov
add
sub
icebp
pop
repnz
xor
aad
xchg
and
js
mov
jo
fsubs
add
pushf
js
xor
out
sbb
mov
lock
and
cmp
mull
add
arpl
add
push
push
dec
lds
neg
cmpsl
cmpl
jne
sti
test
adc
das
push
dec
push
add
xchg
mov
add
add
push
xchg
pop
xchg
adc
add
mov
add
mov
add
and
stc
je
fnstenv
or
add
decb
add
hlt
jle
leave
dec
call
xor
mov
data16
add
scas
add
ss
jl
sahf
mov
add
dec
outsb
cmp
lret
lds
lret
jle
add
cmpsl
ret
dec
dec
pushf
jle
fldt
add
xchg
push
pop
mov
xor
aad
cmp
pushf
fdiv
mov
repz
push
inc
mov
add
lahf
testb
std
xchg
lds
pop
inc
xor
mov
sub
add
addr16
sbb
add
dec
pusha
dec
mov
sahf
adc
mov
fidivs
dec
sarl
push
fdivrl
sarl
add
add
inc
cmp
cmp
lods
iret
insb
into
pop
cmp
cmpsl
mov
into
in
or
add
jp
daa
stc
je
cmc
mov
xchg
cmp
stos
add
dec
pop
inc
clc
stos
xchg
stos
gs
cltd
or
add
int3
dec
xchg
add
inc
out
push
mov
or
jl
add
jle
lea
loope
add
sub
pop
add
dec
aaa
or
add
sub
add
fldt
mov
iret
mov
add
push
dec
in
aas
sub
add
shlb
add
jge
adc
add
stos
add
aas
sub
shlb
jle
add
mov
out
sbb
out
jnp
cmpsl
xor
ss
sti
lea
outsb
imul
push
add
imulb
add
pop
les
loopne
jg
xor
pusha
lea
inc
repz
out
inc
aam
add
clc
cmpsb
add
cmp
add
loop
cld
repnz
pop
fnstsw
dec
add
mov
or
jle
stc
std
lock
push
add
and
add
add
pop
retw
shrl
sahf
cltd
inc
xor
jb
jp
xchg
shll
hlt
les
add
repnz
add
cli
jg
leave
cmp
in
aad
xchg
inc
in
fdivrl
sub
dec
movsb
add
sbb
add
repz
push
add
cmp
add
hlt
mov
add
repnz
pop
call
popf
dec
fcmovu
and
add
cld
scas
add
inc
leave
outsl
jnp
jo
inc
imul
enter
clc
cwtl
and
inc
mov
addb
xor
roll
add
insl
ffreep
mov
jb
sub
jnp
sbb
jg
leave
sub
add
sbb
jg
fs
aam
mov
cmp
add
daa
adc
fsubrs
lcall
xchg
or
add
adc
popf
inc
xchg
rol
xor
dec
xor
add
mov
add
das
into
jb
gs
xor
mov
test
add
and
xlat
ficompl
stc
ret
push
adc
mov
jbe
fdivl
sub
add
jecxz
sub
add
push
jb
pop
call
add
add
cmpsb
add
in
add
into
dec
outsl
out
sbb
add
stos
add
shlb
sti
inc
cmpsl
add
add
call
jae
inc
ret
push
imul
inc
hlt
clc
jnp
mov
pop
lret
pop
and
add
mov
add
xor
cmpl
jnp
jmp
fs
insb
ljmp
inc
xor
push
add
cld
and
jge
fildll
mov
dec
mov
add
add
xor
xchg
add
xchg
add
mov
add
or
add
sbb
movsb
add
sub
movsb
add
pop
xor
add
add
je
jge
pop
or
shr
sahf
xchg
pusha
fimuls
jne
or
add
push
add
cmpsl
data16
pop
sub
ret
pop
aaa
jnp
xchg
repz
push
xchg
addr16
nop
and
add
add
xchg
cli
pop
push
mov
add
add
add
add
cmp
mov
pop
cmc
lods
shll
mov
push
add
aaa
lods
add
int
call
push
and
js
xchg
jbe
add
lods
dec
sub
add
mov
add
je
fstpt
iret
jl
jns
cmpl
add
add
jg
push
xor
pop
mov
dec
mov
add
call
sub
cmp
inc
std
aam
cld
hlt
fcmovne
mov
add
add
lds
scas
in
loope
dec
and
pop
dec
add
xchg
ljmp
daa
in
or
add
add
in
add
mov
mov
sahf
imul
enter
add
rcrl
cli
shr
lock
in
sub
add
lods
add
std
fwait
enter
add
fistps
das
jle
jns
lods
cmp
inc
icebp
rcll
add
jp
fiaddl
add
and
add
add
js
aad
add
add
dec
call
jnp
or
add
pop
mov
cmp
adc
add
lock
push
mov
sub
add
add
das
sbb
jge
add
in
fcoms
jl
jle
add
int3
cmp
add
aad
and
add
add
add
scas
add
push
repz
fdivs
xchg
mov
add
mov
sbb
add
push
dec
sub
add
pop
cmc
fcmovu
sbb
mov
xchg
add
pop
or
add
xlat
push
push
or
hlt
xchg
mov
add
add
cmp
add
xor
add
fst
outsl
inc
aad
adc
adc
loop
mov
add
fucom
inc
iret
rorb
popf
call
add
cmpsb
add
and
add
mov
add
and
int
push
fwait
outsl
mov
mov
add
push
cmc
icebp
mov
add
push
mov
xor
rcrl
add
scas
add
push
add
inc
mov
sub
add
and
mov
mov
cmp
pop
aam
data16
add
mov
add
add
pop
push
xor
addb
cmp
pop
cltd
fisttpl
mov
mov
adc
into
and
add
add
out
sub
pop
dec
in
sbb
push
sbb
loope
nop
jae
add
inc
xchg
sbb
hlt
int
cld
jo
add
cmp
ss
sub
add
push
add
mov
lock
pop
jb
test
add
fstp
sub
fdivl
add
repnz
int3
mov
add
and
add
sub
add
test
add
mov
add
sti
pop
jae
aaa
mov
xchg
add
cwtl
fwait
lds
out
add
int3
pushf
loope
xchg
lret
mov
pop
jo
adc
jb
add
lock
xor
jbe
mov
add
add
or
mov
add
stc
mov
pop
pop
pop
xor
add
ret
jno
adc
test
add
push
outsb
and
add
shlb
or
add
xchg
sbb
add
xlat
loop
movsl
lds
std
inc
inc
loop
sbb
jp
xlat
inc
pop
mov
add
setl
add
pop
adc
and
add
out
mov
lcall
mov
add
push
dec
mov
sbb
std
or
cld
dec
and
add
cmp
sub
mov
add
in
dec
add
add
daa
sub
inc
call
addb
ret
dec
lods
fucomi
aad
aas
sar
cmp
add
pop
inc
sahf
jge
cwtl
adc
xchg
add
sti
cmp
add
mov
mov
and
mov
sbbl
xchg
cmpsb
add
js
mov
add
sbb
push
data16
mov
add
add
fiadds
icebp
dec
pushf
aaa
iret
xlat
lods
inc
pop
xor
add
add
lock
add
xor
jb
add
add
xchg
mov
add
mov
adc
push
xor
cmp
gs
ret
push
frstor
pop
lret
add
push
outsb
push
movsl
sbb
gs
lds
add
sub
add
nop
data16
mov
dec
pop
xor
into
test
mov
add
std
sub
add
in
lods
add
fdivs
add
pop
cmp
add
or
add
or
add
add
adc
add
mov
add
sti
test
add
imul
or
cmp
jp
add
leave
adc
add
and
add
jns
add
rcr
movsl
mov
sub
ljmp
push
loopne
sbb
add
mov
mov
mov
add
push
leave
enter
add
cmp
cmp
add
in
ja
les
nop
jmp
shll
sub
and
add
mov
and
add
test
movsb
add
push
xchg
icebp
sub
add
pusha
das
imul
shrb
push
lea
push
add
rorb
call
sbb
shlb
ja
add
lcall
add
add
ficompl
sub
jo
stos
add
cmp
mov
add
add
add
push
and
xor
mov
add
aas
imul
pop
mov
or
clc
and
or
add
mov
hlt
cmpsb
add
push
adc
xchg
add
in
mov
lahf
mov
dec
test
add
cld
movsl
adc
add
repz
sub
adc
add
push
add
sbb
add
add
dec
jmp
loopne
mov
add
ret
or
ret
fidivs
add
sbb
add
xchg
push
jecxz
pop
or
adc
ss
add
sti
push
cli
xchg
fimull
add
xor
add
test
lods
mov
mov
add
repnz
jmp
cmpsl
repnz
add
xchg
int
ss
mov
aas
add
add
sub
jp
add
cmp
and
scas
add
fmuls
or
add
outsb
add
add
add
or
dec
add
add
lret
insl
sbb
je
xor
lock
mov
repz
or
mov
movsl
addb
pop
je
test
add
push
push
jle
stos
stc
pop
or
add
sub
add
dec
out
sarb
add
cwtl
cmp
scas
add
inc
push
leave
jle
add
imul
add
jo
or
fxsave
add
lahf
jge
sti
jge
lea
jb
or
ret
adc
arpl
add
mov
cmp
inc
test
add
std
add
test
imul
add
clc
dec
mov
jle
add
add
pushf
sub
add
add
icebp
lea
xor
scas
add
pop
sub
add
add
or
add
mov
add
sub
sbb
add
dec
fdivl
pop
icebp
pusha
jae
std
in
push
mov
xor
add
sbb
sar
add
add
push
repz
cmpsb
add
mov
and
add
and
mov
or
add
rolb
loopne
xchg
xor
fildll
add
push
xor
int3
xchg
hlt
fistpl
imul
call
gs
add
test
add
or
add
outsl
insl
addb
inc
outsb
push
and
add
jl
cmp
push
add
pop
lock
add
ret
add
push
inc
push
and
shll
add
scas
mov
add
test
test
pop
adc
mov
add
pusha
loop
push
and
lret
or
add
and
xchg
je
aas
sub
stos
adc
stos
add
dec
add
cmpsb
add
outsb
pop
aad
dec
out
xor
jle
push
adc
jns
int3
pusha
loop
pop
fs
adc
enter
pop
sub
add
movsl
cmp
in
dec
jecxz
test
add
add
jns,pt
sub
add
fimuls
sbb
jge
dec
in
adc
bswap
gs
mov
add
fscale
inc
sbb
add
pop
xor
insl
popa
inc
aaa
cwtl
icebp
cltd
mov
add
stc
fistl
out
std
xchg
add
cmc
or
popl
arpl
aaa
aaa
inc
push
mov
sub
add
jp
rclb
rcrl
pop
stos
movsb
add
repnz
lret
mov
repnz
les
pop
pop
shlb
xchg
add
aad
lods
shl
ljmp
sub
add
sbb
ret
in
roll
movsl
addb
fdivrs
lahf
sldt
add
add
mov
add
add
outsl
jmp
push
xlat
inc
into
xchg
add
sti
in
clc
mov
and
add
xchg
add
mov
add
mov
push
and
add
add
xchg
add
push
adc
jmp
hlt
test
add
out
dec
mov
lods
add
popa
pop
inc
mov
adc
and
add
in
subl
mov
xor
add
test
fidivl
xchg
inc
mov
fwait
popf
dec
cmp
int
jb
add
push
add
cwtl
and
sub
add
add
and
add
push
lret
out
xchg
xchg
jle
push
test
mov
clc
dec
out
cmp
cmp
adc
xchg
add
sub
imul
push
add
loope
and
add
or
add
daa
add
mov
add
lea
dec
enter
pop
mov
add
not
das
fimuls
sti
scas
push
sub
sub
add
add
mov
inc
stos
test
add
pop
lret
lcall
call
cmp
loop
hlt
sub
lock
cmpsl
pop
dec
lods
pusha
push
and
add
add
xchg
in
test
notb
jbe
les
or
add
cmp
lea
movsl
sbb
xor
or
sahf
pop
out
mov
fsubp
imul
dec
lods
push
push
je
addr16
sti
mov
inc
les
xchg
and
push
add
fbstp
adc
mov
pop
mov
int
xchg
adc
mov
add
or
fldcw
js
sti
sub
add
mov
pop
movsb
add
test
add
add
xchg
push
ds
into
lock
add
push
mov
add
or
add
das
mov
lock
add
mov
or
add
add
xor
adc
mov
or
add
popf
sbb
out
nop
push
insl
aas
rcrb
add
icebp
mov
cwtl
xor
mov
jmp
rorb
dec
mov
add
or
add
lahf
sarl
push
pop
in
push
mov
mov
add
mov
inc
xchg
ljmp
add
mov
pop
jg
rorb
add
outsb
xor
push
fisubrl
ja
mov
add
dec
mov
cmp
and
add
lods
add
in
push
popf
lods
fs
cld
test
add
and
repz
sbb
test
sbb
add
add
sbb
mov
popf
test
add
sahf
pusha
fimull
add
cmp
add
lds
add
jle
dec
dec
xor
add
dec
daa
in
in
push
jge
fnstcw
inc
push
add
jb
dec
mov
add
pop
push
jnp
jmp
incb
out
jne
lods
scas
add
dec
add
dec
outsb
jle
call
add
dec
sahf
mov
sub
js
adc
add
into
lcall
sbbl
loope
out
pop
add
add
add
add
add
xor
jae
clc
enter
or
add
cmp
add
sbb
lods
add
fldl
mov
fmull
and
mov
loop
xlat
or
dec
pop
les
push
int3
cmp
xor
fildll
add
add
add
enter
call
clc
notl
test
add
mov
orl
out
pop
popa
mov
out
sarb
mov
add
mov
in
mov
mov
add
fdivp
test
add
xchg
jnp
std
jl
mov
xor
adc
std
fstpt
fistpll
jbe
cmp
fs
out
mov
add
mov
aas
mov
add
pop
xor
adc
aam
push
mov
daa
fisttpll
xor
push
jb
mov
in
flds
out
lock
ret
ret
jecxz
sti
outsb
std
xor
or
xchg
sahf
pop
lea
sub
add
dec
stos
lret
cld
jns
outsl
dec
pusha
mov
add
mov
add
xor
xchg
sbb
add
emms
xchg
xor
add
clc
adc
ss
and
add
fnstcw
addb
sbb
movsb
add
or
add
cmc
and
xor
add
xor
and
add
pusha
mull
add
xor
add
cwtl
xchg
outsl
push
add
jne
sbb
rclb
add
sbbl
jnp
add
mov
ljmp
pop
and
add
dec
insl
pop
js
dec
mov
fsubl
add
leave
std
cmp
add
imul
daa
rorb
add
or
cli
dec
jb
sbb
mov
icebp
sbb
add
fs
pop
add
add
inc
push
add
aad
fisubrs
and
mov
pushf
jbe
add
dec
add
stos
pop
sub
int
lods
lea
fisubrs
add
repz
mov
cli
pop
cmpsb
add
cmp
add
inc
jg
add
adc
stc
xor
outsb
pop
jb
pusha
insl
fidivs
test
or
add
xchg
push
icebp
mov
sbb
add
add
stc
rclb
cmpsl
and
add
mov
add
sti
xchg
fnstenv
or
add
popa
push
add
add
inc
cmp
push
mov
add
xor
add
mov
jns
xchg
sub
add
test
pop
fisttps
add
std
inc
pop
jg
mov
dec
int
clc
imul
adc
addb
int
out
imul
mov
mov
add
adc
push
in
mov
lods
int3
je
imul
xchg
mov
cmp
add
or
inc
pop
fimuls
pop
sub
add
push
add
cmp
ficomps
inc
enter
adc
pop
mov
out
fistl
adc
lret
stos
sbb
mov
add
divb
test
xchg
pop
sub
add
pushl
xchg
jnp
pop
push
addb
fnsave
fbstp
pop
mov
xchg
hlt
inc
das
pop
mov
or
jle
add
enter
mov
push
mov
add
fwait
lods
xchg
mov
add
out
push
decb
add
pop
push
imul
add
in
xor
mov
add
jb
add
cmp
cmp
daa
loopne
adc
add
hlt
shl
fldl
addr16
shll
add
or
cmpsb
add
push
aad
and
and
add
add
call
lcall
sbb
push
add
push
add
fcomps
movsl
inc
je
and
sub
mov
in
divl
add
add
sbb
or
daa
sbb
sbb
sbb
add
cmp
push
add
dec
xor
xchg
fidivrs
in
xor
loopne
rcll
add
xchg
xor
add
add
mov
mov
xchg
add
sbb
pop
add
sti
inc
cmp
add
add
add
jmp
addb
sahf
loope
add
add
mov
inc
cmpl
je
test
add
in
add
jmp
xor
out
int
jb
repnz
ret
add
pusha
rolb
int
xor
inc
imul
add
or
add
mov
cmpsl
lds
add
nop
xchg
fisubl
add
xlat
mov
add
loope
inc
sahf
nop
and
add
xor
mov
imul
add
add
lret
add
jmp
sub
add
cmc
outsl
addr16
push
clc
movsl
and
pushf
jecxz
insl
in
cld
adc
enter
pop
or
add
add
das
mov
jmp
push
out
push
mov
cld
cmp
decl
push
rcl
ror
adc
jno
loopne
fs
xor
in
xchg
mov
add
dec
sub
add
dec
out
add
add
ret
or
push
mov
add
ss
xlat
out
iret
stos
add
data16
mov
ret
scas
movsb
add
inc
inc
icebp
popf
ret
xchg
add
out
lea
add
xor
sahf
jae
lods
call
add
add
scas
cld
ja
mov
lds
in
and
add
add
pop
aas
and
enter
add
add
jmp
or
imul
mov
add
jne
addb
push
add
leave
test
add
jo
sbb
stc
repz
shlb
xchg
and
adc
lods
add
xchg
add
or
add
test
add
out
xchg
add
pushf
stos
test
add
jmp
mov
sub
add
push
add
dec
loopne
sbb
adc
bnd
pusha
push
xor
xchg
dec
test
add
ljmp
test
add
mov
clc
fmuls
stos
add
add
add
insb
cld
in
repnz
cltd
sbb
push
fs
and
add
or
add
pusha
in
add
lret
xor
and
add
iret
shlb
addr16
add
add
add
stc
mov
mulb
jne
and
add
cmc
adc
adc
loop
out
adc
mov
lahf
mov
add
xchg
inc
pop
fimuls
add
xor
mov
rolb
add
mov
add
out
aas
or
add
fwait
pop
mov
les
add
mov
add
test
add
mov
lock
push
xchg
jg
mov
push
popa
in
pushf
mov
add
mov
or
add
xchg
jg
dec
or
or
add
arpl
fnstcw
push
adc
dec
loopne
std
adc
push
xor
mov
add
pusha
cltd
or
add
data16
add
addb
ja
stos
lock
add
fmuls
or
int3
mov
pop
pop
pushf
das
addb
sbb
add
jg
push
call
daa
add
movsb
add
pusha
iret
jns
insb
lret
mov
add
ret
mov
xor
push
sub
ss
add
push
add
pop
cmp
mov
imul
add
aam
mov
xor
jno
ja
negl
push
or
push
add
add
aam
jnp
xor
add
add
add
push
adcl
int
add
add
add
popf
sbb
add
cwtl
dec
enter
ss
jae
fucomp
arpl
adc
mov
push
jne
cmp
addl
ret
mov
mov
add
mov
in
add
pop
mov
push
push
fldenv
add
out
push
data16
pop
test
jg
aad
test
add
inc
addb
loope
xchg
push
or
add
add
pop
out
lcall
add
xchg
scas
add
mov
out
outsl
das
cmc
inc
in
mov
mov
repz
jnp
pop
push
mov
mov
jnp
repz
sbb
pusha
out
add
pop
jno
lcall
mov
add
dec
rclb
addb
push
int3
decb
push
icebp
mov
fs
xchg
add
mov
hlt
shll
pop
jl
add
pushf
xor
bound
mov
movsb
add
pop
test
add
sbb
loope
jle
cmp
or
add
mov
je
add
xchg
js
add
pop
test
sbb
inc
inc
adc
add
pop
loop
aad
mov
add
cmpsl
and
and
add
adc
fcoml
arpl
xchg
rep
mov
mov
aam
xchg
std
sarl
fs
adc
and
add
xchg
repnz
lret
inc
adc
cmpsb
add
fildl
lods
mov
ja
fidivs
sbb
xchg
or
mov
lcall
sub
ret
add
add
mov
add
adc
add
add
push
mov
cwtl
fidivrl
inc
add
xchg
rol
in
jb
aas
mov
add
icebp
mov
add
add
jmp
add
cltd
dec
or
loop
hlt
inc
sbb
mov
imull
int3
hlt
mov
icebp
cld
adc
lods
jmp
pop
mov
add
add
pop
push
push
push
xchg
repnz
repnz
cmp
pop
mov
imul
scas
in
jns
shl
sti
fnsave
imul
fiaddl
cli
xchg
add
mov
shll
jle
leave
mov
add
and
sbb
test
push
xchg
leave
sub
add
fldcw
adc
jge
push
enter
mov
add
or
mov
fwait
push
push
mov
movsl
sub
mov
add
xchg
fs
lds
xor
ret
iret
mov
imul
add
cmp
mov
addb
jno
test
add
jae
jl
data16
dec
push
daa
pop
or
xchg
push
xchg
jae
add
sub
add
sbb
mov
js
scas
dec
mov
xchg
test
add
fsubrl
jecxz
add
add
add
shrl
push
add
loopne
cmp
loope
stc
pop
push
sbb
push
lods
add
divl
jno
hlt
inc
adc
lcall
sbb
addb
aam
push
lods
fdivr
outsb
mov
add
xchg
mov
xchg
leave
and
test
shl
mov
aas
jne
cmp
push
add
mov
xchg
add
push
add
xchg
jp
add
vmovups
bndstx
add
ljmp
adc
lds
sti
nop
or
in
cmc
fs
mov
xchg
add
push
pop
push
addb
jae
push
arpl
pop
sti
sahf
loop
add
cld
scas
and
push
mov
cli
fnstenv
adc
mov
xchg
push
add
lock
pop
dec
movsb
add
and
add
add
xor
xchg
movsl
cmp
into
mov
fcmovnbe
stos
add
stos
mov
dec
mov
sti
cmp
clc
dec
inc
and
add
mov
add
into
mov
xor
sbb
add
ds
add
jg
int
jne
ja
pop
pop
jno
cmp
hlt
lcall
shlb
add
js
gs
out
sub
add
or
add
add
out
jmp
cmp
jbe
ret
cwtl
ljmp
or
add
dec
mov
in
gs
add
lcall
add
shll
mov
test
add
fdivrl
xchg
xchg
cwtl
cmpsb
add
or
add
mov
cltd
mov
add
or
addr16
sub
pop
jl
add
mov
addb
test
aad
xchg
rcr
cwtl
shrb
fcmovnu
out
fidivrs
cltd
pop
ds
mov
jns
jo
loope
out
rcll
movsb
add
daa
push
xor
add
add
addb
jp
add
inc
add
add
fisubrl
clc
pusha
ret
int
ret
mov
add
popl
mov
adc
xchg
add
adc
jne
movsb
add
icebp
insb
xchg
push
int
loopne
dec
pop
loop
pop
in
mov
rcl
xor
clc
jle
incl
xchg
cmpsl
or
add
mov
add
add
mov
cli
sbb
add
dec
pushf
adc
or
cmp
ljmp
pop
loope
ret
repnz
push
mov
clc
mov
add
dec
fildl
pop
or
add
lods
add
adc
and
loopne
and
xor
push
add
pop
int3
adc
inc
pushf
mov
inc
pop
mov
mov
xor
jbe
add
std
cmp
daa
inc
ret
add
ret
fcmove
cld
dec
popa
add
and
add
cmp
push
dec
jbe
or
add
sbb
pop
out
adc
sub
sub
add
dec
dec
sbb
fsubrl
out
and
jne
sti
jns
xchg
pop
push
leave
leave
xchg
and
add
dec
enter
imul
xor
shrl
add
add
xor
cmp
xor
sub
mov
adc
addr16
addr16
mov
add
cmpsb
add
adc
mov
add
dec
and
sub
add
pop
fwait
xor
shrl
add
inc
xchg
xor
add
mov
add
add
add
inc
flds
add
cld
jge
in
out
mov
loopne
cltd
in
popa
popl
les
add
add
dec
aam
sbb
cmp
add
add
icebp
add
add
mov
add
add
push
add
popf
insl
jmp
sub
add
add
out
ret
lret
add
xchg
add
pop
xor
popf
xchg
jnp
xchg
sub
add
add
cmp
dec
or
add
sub
add
add
push
outsb
adc
add
je
dec
in
popa
nop
sub
add
repnz
add
ficoml
add
ss
pop
jg
lods
add
jmp
pop
pop
add
mov
add
add
jl
mov
add
adc
add
cmp
popf
pop
add
and
inc
mov
sub
jns
jne
aaa
sar
mov
add
mov
mov
add
push
inc
adc
lock
add
shl
mov
popf
or
add
mov
add
aam
stos
add
aas
repnz
and
add
fiaddl
add
bound
outsl
push
gs
and
add
fcmovnu
push
dec
popf
dec
int3
sbb
mov
add
push
cld
sub
pop
in
in
insb
loop,pt
adc
or
add
push
mov
add
add
mov
jp
add
repnz
or
add
push
call
and
add
loopne
lds
shrl
and
add
sbb
xchg
cmp
add
and
addb
jmp
add
add
add
pop
mov
add
add
std
or
add
jae
or
ret
or
jo
adc
sbb
out
mov
cmpsb
add
lahf
out
pop
dec
dec
and
add
add
movsl
dec
cli
das
mov
xchg
mov
imul
add
cmpsb
add
or
into
out
dec
mov
cmp
jo
pushf
into
out
pop
imul
lods
add
in
jae
fsubs
cltd
not
je
xor
inc
loop
shll
adc
je
repnz
mov
mov
add
outsb
test
movsl
scas
ret
add
cmp
out
insl
mov
mov
add
add
push
int3
jg
jbe
inc
pop
in
jnp
testl
add
mov
add
dec
sbbl
add
adc
mov
add
test
push
sti
cmp
out
inc
push
mov
add
fmuls
add
sbb
add
lods
add
xchg
mov
xor
pop
out
idiv
imul
andl
add
outsl
dec
insl
add
scas
mov
mov
cmc
jecxz
pop
jmp
add
das
int3
ffree
insl
cmpsb
add
into
add
add
add
pop
pop
or
jae
ss
add
leave
jae
push
nop
sbb
add
xchg
daa
popf
int3
push
ret
xlat
mov
or
add
dec
inc
nop
xchg
repz
out
or
add
dec
xor
mov
sarl
jg
add
mov
adc
add
jl
inc
mov
jecxz
mov
add
add
mov
stos
add
test
clc
adc
clc
xchg
add
add
or
add
js
add
jae
add
and
fstl
push
or
add
add
or
dec
and
add
sub
add
pop
adc
xorl
daa
jmp
in
sbbl
sahf
shlb
cmc
jbe
add
sarl
ja
xor
add
cld
lock
loop
aas
mov
adc
lods
add
aaa
add
add
and
add
test
add
mov
imul
add
lock
push
mov
add
out
xlat
jg
add
inc
addb
xchg
repz
inc
or
cwtl
imul
add
add
mov
cmpsb
add
xchg
cmp
aad
jp
fistpl
sarl
ds
pop
lahf
pop
repnz
jo
enter
jns
leave
xor
add
cmp
mov
adc
sti
lds
fwait
inc
mov
adc
jne
frstor
mov
sub
push
mov
sub
inc
sbb
outsl
fisttpll
add
ljmp
add
add
jmp
jo
nop
add
add
mov
add
loope
lahf
das
out
dec
cmc
out
add
les
mov
add
mov
xchg
xor
js
or
add
push
lahf
cmp
inc
dec
out
jb
out
mulb
add
pop
movsl
mov
sahf
push
jns
add
or
add
das
stos
dec
jns
xchg
inc
xchg
movups
xchg
jno
cmc
xchg
push
adc
ss
dec
fnstsw
movsb
add
test
and
pop
repz
sub
mov
add
cwtl
add
add
rorl
add
add
pop
lret
js
dec
pop
push
add
adc
push
push
jmp
hlt
mov
sub
push
mov
mov
xor
lret
and
add
xchg
leave
pusha
fs
test
dec
lea
cmp
sub
add
add
in
sahf
in
inc
pop
xchg
repnz
add
lods
add
mov
mov
add
pop
iret
arpl
repz
jne
rcr
imul
add
dec
iret
aaa
and
loopne
add
sahf
sbb
push
pop
std
xor
add
mov
inc
jo
int
test
add
iret
and
add
mov
add
sub
add
mov
data16
xchg
lahf
gs
ds
sbb
ficompl
addr16
add
outsl
jp
lods
push
into
mov
mov
shlb
add
add
jb
cmp
xor
jg
mov
insl
mov
xchg
lret
xor
add
adc
push
adc
push
add
aas
cmp
imul
call
fmull
push
jmp
lcall
add
jmp
adc
ljmp
pop
and
add
shlb
fs
int3
jge
mov
xchg
inc
mov
add
sbb
add
add
xchg
fsubs
ss
jns
add
faddl
add
add
test
fld1
fidivrs
xlat
mov
add
ss
bound
add
insb
or
add
add
mov
add
xchg
add
cltd
sahf
out
loope
lods
jnp
mov
stos
add
in
add
mov
jns
add
xor
sbb
jg
add
xor
iret
mov
xchg
jae
push
sub
mov
add
mov
ds
pop
mov
add
and
mov
add
dec
dec
fcos
add
bnd
cld
sub
add
add
sti
pop
jl
lods
in
jns
iret
sbb
ljmp
add
fstl
adc
adc
inc
xchg
mov
jecxz
xor
loop
or
bnd
call
addb
pop
lret
lods
add
mov
or
add
imul
aam
cmp
add
xchg
ret
outsb
add
mov
add
add
jb
pushf
jb
sbb
add
cwtl
jg
and
add
popa
adc
fucomp
pop
int3
mov
outsb
popf
in
adc
add
lcall
sub
add
inc
and
add
arpl
scas
mov
add
or
add
sub
jne
sbb
imul
fs
cmp
insb
xchg
dec
mov
xor
stos
add
mov
in
fdivr
mov
mov
das
mov
das
movsb
add
sarl
add
jo
test
add
lods
or
add
inc
and
clc
int
add
cmp
jnp
pushf
lods
add
add
adc
lret
cmp
add
add
in
ja
add
in
cld
jmp
sub
add
sbb
int
movl
push
sbb
rorl
add
ds
mov
ret
pop
jo
aad
pop
and
add
mov
add
mov
add
cmc
and
add
push
pop
int
jbe
mov
lret
add
fs
loop
jmp
add
cmp
push
mov
mov
mov
addb
jle
aas
or
add
xchg
or
add
in
sbb
fwait
mov
xchg
sub
add
popf
mov
in
mov
aas
outsl
aad
add
lahf
pop
outsl
lcall
iret
nop
pop
add
fst
in
outsb
stc
inc
sbb
add
int3
or
add
push
add
mov
add
lock
popa
jg
fbld
push
out
mov
cmp
xor
inc
jp
cltd
mov
mov
sub
add
lret
lret
idivl
insb
rcrb
add
int3
or
add
pop
mov
enter
add
mov
add
push
fiadds
add
push
das
inc
adc
add
or
add
fsubr
dec
sub
pop
pushf
inc
enter
ss
test
in
mov
test
push
ficoms
fldl
arpl
pop
adc
push
xchg
xlat
xor
and
add
sub
add
fcoml
dec
or
add
push
mov
dec
add
stc
mov
mov
add
mov
fstpt
stos
mov
add
ds
imul
lods
add
pop
addb
daa
cli
mov
popa
sbb
aam
add
pop
jo
popf
adc
inc
push
xor
add
add
mov
xchg
dec
test
add
push
cmp
jecxz
mov
and
add
ret
add
dec
fsubp
mov
add
sub
clc
loop
rclb
fs
daa
push
in
das
sbb
xchg
popa
jns
add
mov
popf
xchg
xor
lea
lds
mov
sbb
clc
stc
shl
push
add
pushf
and
ja
pop
loopne
sub
push
aas
adc
pop
sub
stc
adc
fistpll
add
dec
lods
cmpsb
add
xchg
push
sbb
add
add
add
dec
orl
stc
fbstp
adc
add
and
or
pusha
bound
mov
inc
insl
adc
mov
xor
add
cmp
add
cmp
data16
jle
xor
push
jp
jge
mov
aad
dec
mov
add
add
js
add
sub
add
push
sub
add
add
xchg
push
test
add
add
fidivs
test
outsl
add
add
jb
mov
test
add
aaa
xchg
add
data16
xor
lcallw
xlat
or
add
add
fsubrs
mov
jb
add
nop
cwtl
add
push
xlat
mov
add
xchg
out
popf
sub
adc
push
addb
add
add
insb
fimuls
add
jl
pop
jb
movsb
add
inc
mov
mov
or
xchg
xlat
inc
cli
push
js
mov
push
jb
mov
push
test
mov
sti
cmp
js
mov
add
inc
pusha
xor
aam
scas
add
insb
in
lcall
popa
int
shr
mov
bound
in
jecxz
popa
and
add
push
lret
sahf
loop
add
cmp
inc
int
lds
xor
into
and
sub
add
pop
fstpt
adc
jns
add
add
add
into
int3
aam
add
add
mov
xor
sti
cmp
or
loopne
add
fsubs
mov
iret
jae
pop
lahf
loopne
jge
and
imul
add
std
mov
add
mov
out
jae
imul
jae
call
mov
aaa
mov
add
ret
idivb
pusha
repz
mov
add
lods
hlt
mov
in
push
scas
add
mov
fcmovnu
and
mov
sub
add
add
and
pop
sti
gs
add
push
shrl
add
adc
lock
add
repnz
addb
in
pop
jb
mov
cmp
enter
adc
scas
shl
incb
add
dec
mov
add
insl
cmpsb
add
dec
nop
pop
mov
add
add
add
add
pop
jmp
notl
imull
fldcw
dec
add
cmpsl
popf
stos
add
xchg
cli
into
iret
push
arpl
push
add
push
cmp
ret
dec
mull
add
test
add
sbb
rolb
pop
add
add
sub
add
lcall
mov
add
aaa
subl
pop
hlt
stc
cmp
pusha
push
add
sarb
dec
mov
add
gs
xchg
add
push
stos
or
add
lcall
and
ret
add
dec
mov
xchg
cwtl
int3
mov
rorb
sbb
les
sbb
sbb
stos
mov
xor
mov
xchg
out
add
fnsave
add
mov
add
push
loope
idivl
inc
movsb
add
shll
sbb
xchg
pop
sbb
aas
cwtl
or
or
add
cmp
mov
ret
or
add
and
add
out
call
mov
add
cmp
pusha
lret
adc
pop
fcmovnu
and
jp
add
adc
jle
adc
pop
popf
and
add
lcall
add
add
insl
pop
xor
rep
add
xor
add
icebp
jo
mov
add
add
inc
addb
push
inc
movsl
inc
imull
xor
add
inc
clc
fcompl
idivb
and
jns
fistps
dec
out
add
repnz
or
add
push
cmc
pop
cmc
pslld
adc
inc
jae
sbbl
add
add
enter
cmp
push
scas
add
lahf
or
add
push
in
gs
add
push
movsl
out
jne
sbb
xchg
xchg
mov
cmpxchg
add
das
adc
xchg
hlt
aas
inc
sbb
add
fs
fidivs
retw
and
add
inc
cmpsl
rolb
push
xchg
xor
sahf
pop
or
pop
xor
adc
insb
push
test
add
test
adc
or
or
add
out
add
aas
jle
pusha
push
jno
pop
fisttpl
sbb
pop
leave
mov
add
ds
push
cmc
sub
add
mov
add
and
add
sbb
adc
cli
inc
pop
push
pop
mov
add
add
leave
push
cmp
sahf
xchg
cltd
push
aas
pushf
xor
pop
scas
cmp
fdivs
and
add
and
add
pop
mov
sub
loop
mov
add
cwtl
leave
adc
add
add
adc
push
bnd
adc
sbb
adc
add
fucomi
lods
jno
pop
mov
jbe
mov
cmpsl
mov
add
push
xchg
mov
imul
add
lods
mov
add
jnp
mov
pop
dec
jp
aam
and
add
xchg
pop
imul
inc
enter
loopne
lret
add
xor
cld
push
imul
add
mov
add
jnp
fst
cltd
stos
mov
addr16
dec
push
jp
jle
add
sbb
jp
loop
cmp
ja
mov
ret
fistpl
jmp
shlb
pop
pop
or
add
fnstcw
addb
js
add
leave
inc
rorb
push
mov
repz
xor
cld
cmpsb
add
mov
xchg
xchg
lret
out
jns
stos
fisttpll
pop
xor
int
add
jp
bound
cmp
add
sub
xchg
das
cmp
add
ds
repz
add
mov
add
into
sti
or
cmpsl
sbb
outsl
add
add
or
add
mov
adc
cltd
cmc
call
aaa
jp
cli
add
add
mov
rclb
add
mulb
mov
add
pushf
fsubs
scas
mov
repnz
mov
mov
add
mov
adc
fsubrl
call
in
loope
fisttps
add
mov
add
pop
or
mov
adc
sbb
and
out
mov
mov
jle
ret
sarl
or
add
xchg
in
dec
jae
mov
mov
add
jecxz
imull
add
fistpll
dec
sbb
into
in
addb
jecxz
enter
add
mov
mov
mov
push
adc
xor
jp
mov
mov
ds
fldcw
and
add
add
std
loopne
loop
pop
adc
xor
out
or
lods
sbb
add
add
js
push
xor
movsb
add
mov
out
mov
xchg
or
popf
test
add
pop
pop
or
addb
outsb
cld
addl
push
add
mov
das
pop
sbb
icebp
ljmp
nop
mov
dec
pop
and
add
fiaddl
arpl
add
mov
mov
cmp
or
add
add
mov
mov
push
clc
scas
adc
push
cmpsl
repz
add
jg
sbb
mov
cwtl
aam
pop
pop
push
movsb
add
cmpsb
add
cmp
xchg
lods
add
iret
mov
fstpl
add
mov
adc
aam
or
fdivl
test
enter
repnz
dec
sub
sub
add
pop
addb
push
fidivl
push
lods
cld
mov
pop
icebp
xchg
jg
sub
pop
loop
inc
inc
aaa
or
ljmp
add
adc
out
pop
sbb
pop
les
xor
fstl
add
lret
sti
je
lahf
fsubl
add
adc
or
add
add
add
cmp
cmp
mov
ljmp
add
pop
ret
sbb
add
cmpsb
add
rcll
add
add
ret
add
ror
test
sbb
fs
or
add
test
add
add
adc
xor
cmp
cmp
pop
out
and
dec
push
shll
add
xlat
iret
in
add
or
add
add
jae
add
stos
pop
or
stos
add
xor
mov
sub
fmulp
sbb
fimuls
pop
fdivs
into
je
mov
scas
pop
stos
add
or
add
jb
testb
leave
scas
ss
adc
cmp
jmp
add
loope
pop
imul
pop
xor
mov
add
out
scas
add
inc
mov
add
add
in
xchg
sbb
adc
mov
push
loopne
call
dec
pop
xchg
sub
add
movsb
add
lea
add
adc
xor
inc
outsl
je
add
iret
fidivl
add
sbb
dec
and
add
fcompl
push
mov
dec
jo
bound
dec
dec
xchg
lret
jmp
das
mov
add
lret
mov
mov
dec
inc
jne
incb
mov
mov
mov
nop
pop
mov
inc
out
add
cmp
mov
lds
sbbl
or
imul
cwtl
iret
mov
and
add
ret
adc
cwtl
sub
insl
jmp
out
xchg
cmp
pushf
or
push
movsb
add
sub
add
push
jne
aaa
insl
adc
xchg
add
outsb
mov
xor
cmp
dec
cmp
add
mov
add
cmc
aaa
xchg
bound
or
add
push
add
or
add
lds
int
dec
xor
xchg
data16
add
xchg
mov
in
daa
sbb
add
jge
insl
lret
sbb
mov
add
lahf
adc
add
dec
shll
movsb
add
jmp
cmp
dec
repnz
add
rcll
add
ret
mov
sbb
mov
add
das
fcoms
inc
xchg
in
iret
or
push
add
lret
mov
add
xchg
inc
mov
ds
or
add
add
cmpsl
cmp
add
mov
sarl
repz
jno
xchg
ret
test
push
cmc
and
or
pop
xor
add
add
add
add
add
pushf
fs
add
bound
ret
mov
pop
adc
add
add
add
mov
add
jp
lds
lcall
movsl
bound
add
push
xor
sub
add
imul
popf
cli
arpl
push
out
lock
add
mov
pushf
popa
push
adc
mov
or
add
sub
and
dec
dec
lods
aaa
xchg
add
xchg
cld
xlat
sahf
nop
inc
js
add
add
insb
scas
xorl
std
addb
cltd
popa
movl
mov
icebp
mov
pop
mov
sub
pusha
mov
mov
add
add
jecxz
aaa
leave
xchg
jmp
repnz
shl
pop
mov
add
orps
push
cmpl
repz
adc
or
add
jb
aad
sbb
jae
adc
add
dec
jecxz
orl
xchg
add
jns
mov
xchg
pop
jge
sub
add
dec
add
add
pop
mov
add
pop
jmp
mov
fs
test
add
not
fistpl
cmc
cwtl
adc
add
cld
adc
rcll
and
add
ja
add
mov
leave
std
jecxz
arpl
add
sahf
lods
mov
add
or
add
lahf
inc
push
ja
mov
add
xchg
adc
mov
add
lret
aad
add
cli
mov
add
add
jb
jns
fiaddl
add
stos
dec
les
jbe
ljmp
stc
or
add
nop
icebp
xor
mov
loopne
scas
sub
add
int
faddl
aam
inc
push
out
mov
add
add
add
lods
add
fsincos
ljmp
pop
outsl
adc
mov
in
data16
add
std
pop
ss
inc
mov
push
xchg
jg
lahf
bound
in
or
out
xor
in
enter
fimuls
lcall
int3
inc
pop
xchg
add
add
fildll
ficoml
push
mov
add
mov
add
stc
mov
add
daa
cmpl
pop
icebp
jle
orl
add
fsubl
cld
cmpsl
xor
testb
add
mov
add
pushf
cld
rcl
xchg
add
cmc
dec
sub
add
mov
mov
add
mov
add
inc
sahf
sahf
push
mov
fcoms
sbb
add
int
add
imul
fs
rclb
jl
pop
in
das
sub
add
fnstsw
divl
add
mov
fs
xchg
dec
int3
pop
lods
add
cmpsl
inc
and
add
mov
sub
jl
add
cmp
out
mov
add
addr16
aad
stc
or
add
add
push
xchg
loopne
mov
movsb
add
ret
fcom
lea
add
fstpl
adc
add
sbb
add
dec
rcll
stc
pop
add
aam
jg
scas
ret
mov
popa
cmpsb
add
sbb
ss
fisubl
add
push
cmp
and
add
add
add
add
pop
int
jns
das
pop
lock
adc
add
aaa
lock
and
movsb
add
rclb
loop
sti
fs
xor
out
sub
add
ja
dec
pop
mov
mov
les
dec
xor
add
bnd
push
mov
add
pop
adc
push
repz
cmp
fwait
xor
add
xor
mul
mov
cltd
mov
rcrb
sub
add
addb
sub
xchg
add
dec
add
add
rcrl
push
mov
add
push
outsb
rclb
xlat
mov
jns
cmp
scas
add
add
add
ret
or
pop
mov
dec
out
inc
fnsave
dec
push
mov
push
cmp
jp
jg
mov
mov
shlb
and
mov
add
push
mov
push
mov
sub
and
sbb
pop
lods
add
push
je
mov
add
cmp
dec
mov
dec
jp
cwtl
cmp
dec
mov
cmpsb
add
xchg
mov
inc
jle
lret
fdivl
add
jge
dec
out
lea
lret
jp
add
sbb
push
or
add
adc
cld
adcl
add
lea
outsb
push
cmp
inc
rcrb
into
mov
add
hlt
jbe
push
mov
leave
jo
mov
pop
push
add
cmpsb
add
push
addr16
cld
xor
push
add
rcll
jns
inc
jns
inc
inc
xchg
sbb
test
add
jmp
out
jecxz
mov
add
cltd
fs
cmp
xchg
add
cli
or
mov
add
add
orl
clc
dec
push
mov
mov
enter
or
add
jo
gs
mov
add
cmc
fs
and
add
xor
subl
or
add
push
jg
mov
loope
sti
add
add
mov
aas
loopne
out
mov
jns
and
mov
xchg
inc
insl
xchg
inc
and
add
add
loop
mov
cmpsl
push
out
mov
inc
decl
add
ljmp
mov
sbb
scas
add
lods
test
in
int
add
cld
mov
sbb
addb
lahf
ret
scas
pop
sub
add
loopne
xchg
das
push
jne
jg
add
mov
jg
bound
leave
sbb
movsb
add
sub
add
add
int3
out
in
leave
pushf
push
inc
and
fstps
xchg
imul
jns
mov
lds
pusha
and
mov
stos
add
clc
mov
mov
mov
in
sub
jmp
cmp
add
mov
push
loop
in
xchg
cmp
mov
rol
outsb
jne
mov
dec
jle
ret
cmp
add
add
add
push
ja
in
xchg
mov
mov
add
adc
push
add
pop
cld
xchg
rcll
add
cli
jle
or
add
popf
xor
push
xor
shrb
and
add
or
or
aam
mov
add
xor
inc
jne
add
add
sub
add
dec
mov
sahf
xor
inc
mov
js
dec
aad
or
jg
out
mov
jne
and
mov
inc
jae
add
add
add
movsl
mov
add
or
add
push
mov
adc
add
imul
sbb
cmpsl
lahf
mov
add
jae
and
add
jbe
mov
or
add
cld
fmuls
loopne
sub
orl
and
add
popf
push
xchg
mov
jmp
dec
cmp
lcall
int3
jge
inc
sbb
add
jmp
add
xor
adc
imul
add
arpl
add
sbb
dec
push
lds
add
dec
inc
ljmp
add
sub
add
inc
fcmovb
sbb
push
cmp
add
sahf
add
add
add
shrb
add
xchg
mov
arpl
popa
sub
add
out
mov
add
and
add
aad
add
movl
add
mov
add
inc
dec
cli
lds
add
les
out
rolb
enter
add
add
out
popf
mov
add
add
ja
insb
push
lock
inc
ja
stos
push
add
cwtl
cmpsb
add
jne
mov
clc
lahf
std
xchg
jge
pop
add
int3
in
add
or
add
jmp
add
addb
in
iret
jbe
add
mov
or
add
adc
inc
mov
or
add
adc
cld
push
push
add
das
jae
mov
and
add
jno
je
repz
add
add
movsl
call
add
pop
psllq
push
lahf
pop
ja
ror
cmp
sbb
jb
pop
add
xor
sub
add
xlat
mov
or
leave
inc
jno
inc
rcrl
repnz
mov
mov
adc
fwait
inc
sbb
cmp
xor
push
pushf
cwtl
sub
add
and
add
add
cmp
xchg
flds
push
mov
lods
add
or
mov
js
push
add
inc
jge
dec
ss
enter
inc
jge
add
idivb
mov
add
in
push
daa
jb
add
adc
mov
jns
push
out
push
sub
add
add
mov
add
test
pop
jo
sbb
push
sbb
je
xlat
stc
in
pushf
loope
jp
mov
or
push
add
fisubrl
mov
mov
sti
mov
test
add
scas
add
push
shl
or
add
mov
sti
xchg
add
xchg
fstps
inc
and
add
pusha
fmulp
lcall
jae
cmpsl
movsb
add
mov
xchg
mov
add
add
mov
lods
add
xor
jae
mov
pop
cwtl
xchg
mov
loope
popa
test
add
sub
rcrl
add
and
sub
add
das
inc
push
je
add
mov
pop
and
add
cmpsb
add
jno
add
mov
add
or
add
aad
lahf
push
sbb
or
lahf
pop
xchg
sub
sbb
add
int3
cmp
add
push
leave
jno
add
ret
punpckhbw
add
stos
aam
cmp
add
add
add
cmp
shrb
inc
lret
pop
add
pop
ficoms
arpl
cli
push
inc
bound
inc
cmp
movsb
add
out
outsb
fs
mov
mov
dec
pushf
pop
add
fsts
cmpsb
add
test
add
sahf
cmc
cli
andps
or
add
imul
pop
scas
stc
les
mov
cmpsb
add
femms
add
adc
jae
fcompl
add
cli
ljmp
cmp
push
add
lret
sti
push
cli
enter
add
sbb
into
outsl
push
pop
sbb
inc
xor
push
out
jle
inc
outsb
in
arpl
cwtl
inc
dec
fistl
push
push
cmp
pop
inc
sub
nop
bound
add
dec
mov
or
add
cmpps
add
add
or
add
add
add
adc
add
pop
mov
add
fnsave
add
mov
dec
ret
and
add
lods
add
push
mov
and
jl
pop
testb
add
cld
jle
daa
lahf
jecxz
and
push
mov
add
pushf
mov
sub
add
out
pop
add
xchg
and
add
mov
leave
sbb
add
loope
and
sub
xorl
xchg
jnp
sub
outsl
ret
add
pushl
push
idivl
sbb
add
add
add
fdivp
addb
clc
adc
mov
add
add
mov
sbb
imul
push
aaa
pop
fldcw
sub
add
dec
push
and
add
jmp
and
add
fimuls
add
lock
and
jbe
add
mov
sbb
out
cmp
outsl
dec
and
cmpsb
add
ret
fs
inc
stos
add
jnp
and
add
fldcw
std
dec
or
add
push
fnsave
pushf
test
in
mov
add
loopne
sub
inc
dec
push
inc
jo
daa
mov
pushf
jno
mov
jecxz
mov
jae
pop
inc
jbe
jmp
dec
test
add
dec
adc
add
mov
add
add
cmp
imul
cwtl
popf
mov
add
add
mov
push
daa
add
in
pop
lea
add
lahf
mov
test
add
jnp
sbb
mov
add
xor
xchg
fs
mov
shr
ljmp
xor
pop
mov
add
test
add
lods
ret
insl
enter
lea
mov
xlat
sbb
add
jg
jns
or
add
imul
add
aam
and
push
jb
jbe
mov
out
fidivl
push
xchg
jecxz
rorb
and
or
add
adc
repz
inc
stos
adc
sti
adc
xor
bound
aaa
cwtl
mov
cmp
inc
dec
cld
mov
add
add
add
jne
add
push
loopne
mov
stos
in
int3
xchg
rorb
add
out
fs
jno
negl
add
jae
iret
and
push
pusha
mov
cwtl
ret
push
xor
adc
test
add
dec
cmc
mov
pop
mov
push
push
loop
out
lods
add
sbb
mov
add
xlat
mov
add
test
add
xor
shrl
push
pushf
and
add
rep
add
fdivrs
movsl
add
add
pop
mov
add
imul
repnz
addb
pop
test
add
adc
fildll
xor
fadd
pop
and
mov
jnp
jge
or
mov
add
mov
popf
call
add
mov
lods
add
push
loope
add
inc
or
jnp
sbb
divl
add
aad
pop
and
add
xor
stc
pop
sbb
clc
hlt
push
jns
dec
je
mov
add
xor
mov
or
add
add
inc
ds
push
jo
std
push
shrb
pop
add
xlat
pop
rcll
mov
add
pop
bnd
cmpsb
add
loop
pop
add
add
xor
scas
add
shll
push
add
jl
xchg
push
mov
pop
std
add
add
aaa
push
roll
fcmove
mov
add
jne
add
and
add
push
testl
aas
aad
xor
add
pop
dec
imul
out
in
out
aaa
arpl
dec
insb
adc
add
js
xor
inc
les
xchg
out
test
shrb
sbb
sbb
loope
test
cmp
lret
test
push
add
jo
aas
sbb
pop
sub
scas
in
jmp
iret
fsts
movsb
add
pop
mov
push
sti
fcoms
add
xor
add
fwait
mov
mov
add
data16
cmp
popf
push
fmulp
icebp
out
mov
into
sbb
add
add
mov
dec
xlat
cmc
or
add
adc
mull
add
scas
mov
bnd
dec
scas
mov
sub
add
xor
add
mov
sbb
adc
add
sub
loopne
lret
add
out
add
mov
add
and
add
pop
rorl
arpl
add
add
cmc
das
das
ror
orl
mov
add
xor
add
push
les
test
add
pop
addb
cmp
sub
add
sbb
mov
pop
out
cmp
aad
addb
mov
push
push
add
mulb
add
add
push
add
xchg
jmp
data16
mov
stos
add
repz
push
popa
test
dec
rclb
std
sub
sub
leave
jno
repz
inc
and
add
adc
or
add
das
pop
test
add
mov
std
inc
dec
adc
xchg
and
aad
ja
xchg
add
adc
sub
add
sub
add
pop
call
test
sbb
cmp
icebp
and
add
in
das
cwtl
and
xlat
movsl
negb
add
jbe
inc
ss
pusha
ficoml
sarl
add
jb
add
jl
or
add
mov
pop
lods
inc
movsb
add
aam
adc
int
sub
inc
push
js
add
push
xchg
aad
xlat
lret
add
loopne
cmp
and
pushf
mov
aaa
add
in
add
xor
or
popa
das
mov
fdivr
lods
add
sub
add
sahf
push
dec
nop
sti
mov
xchg
sbb
ja
and
add
or
add
mov
add
push
pop
test
add
test
mov
add
popa
test
add
rolb
add
out
add
cltd
mov
pop
xor
push
adc
push
dec
ds
shrb
add
je
popa
aam
pop
sub
add
mov
pop
lret
mov
add
add
mov
push
nop
arpl
cmpsb
add
into
and
add
test
jno
stc
add
icebp
push
fidivrl
jns
pop
mov
add
add
js
adc
mov
mov
jp
outsl
add
jmp
in
jo
sub
add
add
test
fs
push
dec
addb
push
sbb
and
add
and
mov
add
jns
dec
icebp
sahf
mov
pop
in
xchg
add
adc
add
xchg
push
pop
loopne
or
push
stos
test
js
xor
sub
cmc
repz
and
add
xchg
add
insl
fcoml
in
xchg
aad
add
and
add
insb
shr
dec
test
add
and
add
sahf
shrb
add
pop
or
add
mulb
or
jmp
and
outsb
lret
mov
or
into
cltd
test
add
add
xor
inc
mov
lods
add
in
aas
sti
sbb
leave
add
hlt
mov
repz
inc
repnz
add
mov
in
test
add
sti
mov
stos
mov
xor
sub
add
ljmp
divb
addl
xchg
icebp
loop
popa
ja
iret
jns
sub
add
sbb
or
add
mov
add
pop
cmpsb
add
mov
add
jns
add
add
pop
xor
shrl
pop
shlb
jl
je
aaa
in
add
movsl
mov
xor
mov
dec
int
mov
add
mov
add
dec
mov
add
aam
mov
mov
add
xor
xchg
adc
add
add
add
add
outsb
int3
mov
adc
inc
aad
mov
lret
shll
in
and
add
xor
stos
bound
jno
icebp
and
xor
add
and
add
xchg
insl
les
jb
pop
cli
call
add
sbb
push
xchg
add
bnd
mov
add
add
dec
fldl2e
aad
shll
sti
push
add
add
cld
sub
add
cmp
dec
out
sub
push
std
mov
dec
mov
add
cwtl
adc
add
add
dec
xor
scas
add
sub
add
les
add
add
mov
add
mov
dec
clc
inc
cmc
cmpsl
pop
stos
add
fmulp
push
sbb
pop
imul
call
cmc
pcmpgtb
add
jne
jl
mov
bound
and
add
hlt
push
mov
fiaddl
add
push
mov
add
or
add
add
out
push
jo
or
add
ret
or
out
icebp
inc
lds
sub
add
loop,pt
outsl
aam
add
std
add
test
add
lret
xor
pop
movsb
add
xchg
add
add
test
sarb
data16
add
and
popa
imul
add
dec
movsl
cmc
sub
out
and
add
dec
test
mov
add
add
ficomps
mov
mov
jge
icebp
mov
add
sti
jp
inc
cmp
dec
jns
xor
cwtl
lret
jne
or
add
cmp
cmp
addb
scas
pop
shll
xor
cmp
fwait
cli
sarb
loope
jmp
cmp
cmpsb
add
sub
add
and
add
pushf
xchg
imul
loope
add
in
add
add
add
mov
mov
imul
jmp
add
fwait
jo
pushf
rcl
stos
mov
xor
add
xchg
imul
xchg
std
mov
loopne
out
scas
add
insl
mov
jmp
inc
push
push
xchg
or
push
xchg
mov
pop
mov
sub
add
xchg
jecxz
mov
push
addb
decl
test
add
add
insl
sub
add
push
inc
inc
or
sbb
lahf
pop
nop
ds
add
clc
arpl
sbb
icebp
pop
dec
fsubl
fistpll
push
fistpl
subl
insb
fidivrs
in
adc
dec
sarb
bndstx
add
or
dec
into
xor
pop
xchg
movsb
add
mov
add
push
add
cmp
pop
push
add
fimuls
fisttpl
popa
movsb
add
and
add
add
and
add
mov
add
ret
dec
lds
xor
xchg
lock
add
add
pop
iret
gs
add
icebp
in
clc
pop
or
add
push
repnz
add
add
arpl
arpl
movsb
add
sub
lret
int3
adc
ds
add
jmp
jle
out
imul
mov
inc
cmp
mov
cltd
data16
or
cmc
jnp
add
aaa
sbb
and
aaa
lea
xchg
add
nop
mov
push
adc
lds
xor
jl
add
and
add
imul
mov
aas
rclb
add
lea
add
call
add
stos
and
cmp
jg
add
jle
add
add
jg
addb
mov
ret
add
test
rolb
pop
inc
test
bound
int3
cmpsw
movsb
add
dec
mov
leave
or
daa
add
jl
add
add
pop
xor
inc
enter
push
jae
ffreep
jle
jae
inc
and
push
add
test
mov
or
add
fsubl
add
mov
popa
lods
add
push
shrb
add
add
pop
movsb
add
dec
inc
decl
sbb
loope,pt
mov
test
lcall
hlt
and
push
negb
push
mov
add
and
mov
ss
daa
das
pop
push
add
sub
add
scas
add
stos
in
add
cld
aad
mov
aaa
out
inc
rolb
add
dec
mov
test
add
aas
popa
pop
je
imul
push
adc
gs
pop
mov
mov
jecxz
cmp
add
push
addr16
aaa
fstl
loop
jmp
or
add
addb
repz
aas
sub
add
lret
adc
or
or
add
add
loope
dec
cli
mov
adc
pop
or
add
push
inc
js
dec
sub
add
xlat
add
adc
inc
sti
cmp
sbb
ja
push
mov
stc
int
cmp
push
insl
mov
add
pop
mov
add
mov
push
mov
ret
cmpsl
bnd
add
pop
cmp
lcall
jno
loopne
popa
add
mov
pop
pop
sbb
lret
xchg
xchg
and
sbb
push
aas
mov
sbb
cmp
cmpsb
add
idiv
mov
sub
add
mov
cmp
xchg
jmp
xchg
jb
cmp
aaa
add
jmp
add
cli
lahf
mov
jb
imul
jns
scas
std
fnsave
mov
mov
adc
mov
inc
rcll
repnz
dec
gs
inc
cmp
xor
lahf
mov
lret
push
mov
repz
stc
insl
cltd
jle
das
push
mov
add
add
movsl
add
add
inc
pop
dec
pop
out
push
ds
lret
loope
cmp
int
add
insb
sti
stos
add
call
scas
fstps
push
add
cli
or
xchg
add
add
adc
das
or
add
add
sub
add
add
push
test
add
adc
orl
les
sar
push
lods
jle
cmp
cmpsb
add
int3
cmp
adc
icebp
pop
arpl
jg
sbb
jp
std
loop
push
sub
add
pusha
mov
movsb
add
pusha
push
add
cld
mov
adc
add
loop
add
add
add
arpl
add
mov
cmc
rolb
add
in
push
lock
addr16
ficompl
cmp
addb
pop
mov
cmp
mov
and
add
xchg
testl
fsubrl
sbb
sbb
not
sub
add
nop
lods
imul
js
xchg
dec
mov
add
repnz
call
insl
mov
test
xor
add
push
push
ret
in
in
add
jns
add
xor
add
or
add
clc
dec
int3
cmp
stc
mov
mov
test
js
dec
outsl
insl
fisubrs
int
cmp
pop
lret
insb
sbb
cld
lea
jbe
loop
add
jle
xor
add
add
add
add
shll
pop
mov
dec
into
mov
test
in
hlt
push
fwait
test
add
mov
sbb
add
pop
roll
arpl
loope
add
outsb
sub
icebp
xor
aam
jp
add
or
add
in
mov
add
jns
adc
xchg
kxnorw
aas
imul
xchg
xor
lcall
add
sti
hlt
pusha
fs
pop
inc
in
into
out
in
add
loop
xor
xchg
mov
mov
iret
dec
rcrb
push
jbe
jno
add
in
mov
add
add
mov
add
jnp
repnz
fcomi
fsubr
add
add
sub
addr16
push
sbb
pop
int
jp
nop
into
dec
pop
xchg
inc
xor
hlt
mov
push
dec
scas
ljmp
mov
add
push
repnz
in
ficompl
add
cwtl
dec
pop
jae
push
lds
dec
cmpsl
adc
xchg
clc
aam
jno
cmp
js
lahf
fistl
sti
push
jnp
add
xchg
add
pushf
pop
in
scas
add
sub
push
fisubl
and
cli
inc
aam
jle
repnz
jmp
std
pop
scas
mov
dec
push
test
add
in
in
add
push
jmp
add
cmp
insl
mov
add
add
xchg
mov
or
add
ret
clc
pop
divb
add
rol
xor
mov
add
aam
hlt
cmp
xor
and
add
push
add
jae
push
popa
mov
aam
jp
and
add
in
jnp
out
sbb
add
add
insb
pop
imul
xchg
and
into
cmp
add
push
inc
clc
xchg
add
mov
add
push
cltd
jbe
cmpsl
out
dec
sub
and
add
shlb
fstps
pop
lods
and
add
out
mov
sbb
ret
inc
pop
int
je
cmpsl
addb
add
add
jle
lret
enter
jl
mov
cmpsb
add
jl
je
add
push
xchg
cmpsb
add
js
push
mov
in
mov
out
mov
dec
adc
add
mov
inc
sub
lods
add
xchg
pop
divb
pushf
xor
mov
add
xor
add
mov
fnstcw
leave
cmp
sbb
movl
xchg
inc
daa
push
cmp
sbb
xlat
mov
mov
cmp
xor
nop
shll
add
rolb
inc
je
xor
lret
int
inc
mov
sub
add
mov
add
xchg
dec
inc
mov
add
add
in
imul
cmp
sbb
add
mov
add
and
add
add
jae
shlb
imul
add
sti
data16
addb
sbb
xchg
jae
pop
xor
push
loopne
out
pop
cmp
fistpll
sub
dec
pop
div
cmp
jae
jp
js
add
pop
scas
add
or
jae
lds
dec
cmp
jge
je
and
loop
sar
xor
push
add
pusha
ja
rolb
push
dec
pop
sub
add
add
shl
repnz
in
push
mov
in
sahf
xor
and
dec
mov
repz
leave
add
sarb
jle
test
repz
pop
loopne
sub
add
test
add
dec
iret
push
add
pop
mov
mov
add
add
rorl
insl
sub
add
jecxz
movsb
add
jno
pop
add
sub
xor
xchg
mov
ja
incl
and
add
or
add
inc
leave
cmpsb
add
arpl
push
mov
repz
out
mov
fsubrs
add
lret
dec
mov
mov
add
out
mov
add
inc
call
inc
mov
addb
mov
test
cli
lock
add
enter
adc
dec
leave
ret
sbb
sbb
fidivrs
jno
stc
sub
add
adc
push
dec
jno
mov
pop
dec
iret
sbb
cli
hlt
pop
imul
addr16
gs
add
cmp
cmp
add
sbb
adc
out
ret
or
add
iret
mov
mov
add
mov
bound
fisttpl
add
ret
scas
add
in
mov
jl
aad
cli
fnsave
or
add
cmp
and
add
pop
aas
out
pmaxub
ja
out
add
add
pushf
mov
add
xor
mov
out
repnz
mov
enter
sbb
popf
daa
mov
jl
lods
sbb
add
lods
add
jbe
add
lea
aas
dec
xlat
pop
stos
xchg
roll
add
add
add
or
xchg
cltd
pop
and
add
add
std
pop
mov
cmp
aaa
int3
out
add
dec
push
bound
test
jmp
bound
mov
movsb
add
fwait
push
imul
adc
js
addr16
push
adc
add
add
add
addb
push
lret
xor
add
dec
lds
mov
jno
mov
add
or
add
push
mov
leave
dec
ja
loop
sbb
int3
xchg
into
push
ret
mov
stc
out
sahf
add
add
cmp
pop
adc
add
adc
add
cwtl
imul
pop
out
dec
into
mov
push
add
add
fisttpl
lahf
shl
shrl
add
test
add
add
nop
fisubrs
sbb
adc
add
int3
stos
ja
fbld
addb
idiv
ja
rorb
add
loope
les
repnz
in
ss
mov
adc
ret
dec
lods
add
push
add
inc
lock
insl
addb
or
mov
add
add
imul
add
mov
into
or
ja
add
iret
mov
add
add
sbb
add
ss
xchg
mov
add
jge
add
push
dec
mov
add
add
mov
ljmp
out
mov
iret
in
inc
sub
add
aas
scas
add
ret
je
pushf
mov
xlat
out
idivl
cmpsl
repz
sub
add
add
jecxz
fbld
add
popl
add
add
xchg
cmpsb
add
mov
push
out
iret
pop
pop
pop
add
add
sub
add
push
mov
adc
cmc
xchg
repnz
decl
mov
cmpsl
imul
xchg
stos
add
mov
add
mov
add
or
add
ficomps
jb
cmc
push
push
jne
in
dec
sbb
aaa
cltd
lcall
cld
pop
mov
stos
push
xor
add
addb
add
add
pushf
addb
push
cmp
test
add
fmull
add
add
mov
das
inc
xor
out
jno
pop
sub
add
in
mov
orl
or
add
xor
cmp
fs
ljmp
clc
mov
push
add
out
js
lcall
and
add
xor
mov
cmp
movsb
add
cmp
add
push
add
push
jmp
addb
xor
add
add
push
add
add
add
xchg
lods
inc
aas
jecxz
fmull
add
loope
rclb
movsb
add
inc
inc
mov
push
addb
outsb
mov
fbld
cli
push
mov
add
mov
xor
cmp
fadd
cmp
in
pop
mov
and
out
ja
js
shrl
scas
add
arpl
add
icebp
enter
fildll
cwtl
mov
rorl
mov
arpl
adcl
add
sbb
add
sub
add
and
push
xchg
mov
ja
dec
pop
data16
inc
and
addb
js
lea
cmp
cmp
add
add
mov
cmpsb
add
movsl
xchg
test
ret
cli
imul
je
fcompl
and
mov
add
lcall
add
add
pop
insl
icebp
aaa
stos
inc
lea
scas
lds
push
mov
add
cmp
hlt
loope,pt
pop
dec
out
mov
je
fdivrs
push
test
add
enter
jno
bound
cmpsb
add
shlb
addb
pop
dec
sahf
in
hlt
js
push
add
or
add
repnz
bound
std
xchg
in
inc
jb
aas
jg
xchg
adc
addb
inc
rcr
ror
decl
mov
call
jecxz
cmpsb
add
and
add
mov
test
add
jns
outsl
dec
pop
xchg
outsb
jle
xlat
test
add
dec
add
add
imul
add
add
ja
test
sbb
xor
add
fidivl
ret
loope
inc
push
inc
pop
mov
sbb
jns
cwtl
bound
push
xchg
sub
add
addb
push
mov
add
xor
add
add
add
xlat
push
add
jecxz
or
add
aaa
and
add
inc
add
sbb
add
add
add
and
add
add
adc
adc
adc
pop
loope
or
add
icebp
xchg
dec
inc
mov
or
bound
and
pushf
pandn
roll
mov
add
jnp
jle
idivl
add
adcl
cmp
pop
and
add
add
mov
mov
adc
lea
mov
dec
test
add
xchg
dec
out
sti
js
movsb
add
pop
sub
fildll
add
addb
sub
add
stos
add
adc
call
inc
cli
aad
sub
xchg
push
dec
cli
insb
in
add
push
push
push
test
add
lods
add
and
push
add
pop
sbb
add
add
or
aas
getsec
ljmp
aas
push
pop
cmp
push
ja
cmc
and
add
xchg
add
fcomps
repnz
add
imul
adc
divb
insb
mov
add
cmp
inc
or
frstor
movsb
add
mov
iret
pop
mov
cmp
jmp
dec
cld
lea
popa
cmp
mov
xor
inc
scas
and
add
mov
ja
fwait
push
push
or
add
add
dec
fildl
lea
stos
add
dec
adc
movl
pop
push
cmp
arpl
add
stos
add
mov
mov
add
outsb
inc
addl
imul
jmp
lcall
add
mov
popa
jns
jp
mov
add
roll
fiaddl
inc
mov
fwait
rcr
and
imul
push
add
adc
mov
dec
jmp
add
add
aaa
or
in
mov
add
insl
sub
add
into
cmp
cmp
insl
or
push
lods
fwait
pop
gs
int
shl
dec
call
pop
sub
aas
leave
and
add
int3
jecxz
sahf
sub
dec
shlb
jle
xchg
pop
in
adc
add
gs
int
adc
jae
test
jmp
test
add
cmp
std
std
xor
push
or
mov
add
mov
ljmp
leave
mov
popa
stc
xlat
insb
cmpsb
add
mov
mov
add
pop
aam
add
xor
adc
je
xchg
test
cmp
pop
mov
add
lock
scas
add
adcl
ja
jle
cmp
add
jle
xor
ficomps
ds
sbb
add
dec
sbb
loop
ret
insb
mov
inc
and
add
sub
add
pop
mov
cmpsb
add
cmp
pop
jg
in
test
add
add
int
jge
out
pop
inc
xchg
mov
inc
popf
rorb
add
dec
shrl
add
jns
cmp
arpl
add
lcall
in
add
xor
adc
ja
mov
stc
push
inc
mov
add
cmp
jb
fdivrl
imul
add
pop
in
lea
or
inc
cmp
inc
fdivrs
call
imul
mov
pop
addb
sbb
incl
cmpsl
ds
push
xlat
insb
cld
in
or
xchg
jmp
xor
or
push
mov
in
std
pop
mov
add
repz
jne
pop
jae
mov
ret
add
add
ss
bound
pusha
adc
sbb
add
mov
jmp
inc
fidivrl
aaa
or
fimuls
insl
out
mov
add
mov
ljmp
rorb
fsubrs
xchg
sbb
add
scas
ja
aas
sbb
std
dec
shrb
nop
cwtl
imul
add
add
xchg
cmp
repz
adc
pop
ds
add
adc
xor
and
add
bound
iret
jns
dec
xchg
push
icebp
movsb
add
inc
or
dec
xchg
inc
xor
mov
jno
aam
xchg
xlat
or
addb
sarb
ret
out
clc
out
dec
or
add
pop
sbb
add
xchg
mov
lods
add
xor
icebp
js
pusha
jmp
nop
ret
jp
dec
dec
sbb
add
std
addb
xor
add
sub
aad
pushf
xrelease
mov
jp
clc
scas
sti
stos
push
cmpsb
add
fbstp
xlat
jg
dec
cmp
dec
sti
add
add
add
pop
cli
mov
mov
arpl
pushf
fnsave
mov
int3
sub
inc
popf
inc
sahf
clc
pushf
stc
test
add
add
mov
add
je
aas
cmp
mov
enter
xlat
push
add
mov
push
popa
sub
call
loop
xchg
add
add
sbb
lahf
lea
in
push
mov
add
lods
ljmp
or
adc
xchg
shr
enter
cmp
push
add
cwtl
orl
lcall
add
mov
jno
push
and
xchg
add
int3
and
mov
pop
add
add
mov
ficompl
jns
jecxz
mov
add
add
test
add
and
add
jno
jbe
add
fwait
stos
ja
mov
add
test
add
dec
pop
cmp
fisttpl
or
add
and
add
xchg
pushf
xor
mov
dec
out
in
cmp
fadds
add
lds
xor
add
or
imulb
add
add
je
stos
add
push
add
test
xchg
cli
movsb
add
fisubrs
and
sbb
mov
dec
add
add
add
shll
mov
stos
add
sbb
add
pushf
xchg
dec
push
cli
cmp
in
inc
aam
mov
inc
sub
add
xor
js
xor
ja,pt
leave
outsl
adc
mov
insb
call
add
adc
mov
jge
stos
add
pop
lods
add
adc
add
in
fistl
adc
loope
in
mov
add
loopne
push
out
sbb
add
adc
pop
shl
jmp
add
add
ret
and
add
add
inc
xchg
out
insb
xorl
pop
test
push
mov
cli
ds
js
push
inc
std
adcl
sub
sbb
sub
add
jns
inc
jb
popa
nop
insb
gs
aam
add
adc
mov
ljmp
adc
push
mov
add
cmp
pop
dec
push
in
adc
cmpsb
add
pop
jle
insl
js
ret
xor
int
hlt
ss
sahf
xchg
add
dec
insb
adc
ds
fdivrs
mov
fwait
sbb
scas
add
pushf
test
addr16
mov
lods
add
jb
sbb
loopne
fistpl
daa
test
add
nop
and
add
inc
iret
cwtl
cmp
add
stc
mov
loopne
data16
lea
mov
cmpsb
add
adc
pop
sbb
mov
add
xchg
jp
enter
add
add
jae
pop
jge
or
mov
add
lods
jl
in
xor
mov
les
ds
or
jne
add
xchg
sub
lahf
arpl
mov
add
mov
add
add
je
add
mov
andl
or
add
outsl
xor
cli
in
cmp
add
cmp
xor
das
lret
add
lods
add
mov
add
into
lods
sbb
lret
mov
add
in
sub
mov
stc
das
jo
or
loopne
cmp
shl
daa
add
cmpl
cmpsl
add
aad
sub
add
add
stos
cmp
cltd
push
lock
sbb
add
sub
add
xor
ret
enter
adc
mov
add
pop
xchg
test
xchg
iret
add
add
les
addr16
mov
or
add
call
adc
ss
add
push
in
jg
lret
xchg
adc
ljmp
or
jmp
fldenv
lods
push
jno
test
add
jle
stos
push
addr16
inc
xor
jnp
test
add
lds
push
add
imul
add
add
shl
mov
enter
in
std
or
add
dec
ret
adc
addb
mov
add
jge
add
mov
jbe
add
jl
add
push
add
pop
insb
js
add
jl
push
pushf
and
pop
push
push
sbb
nop
sbb
adc
cmp
add
dec
loope
hlt
add
add
adc
cwtl
sub
add
ja
jnp
add
sbb
mov
add
add
push
ret
sbb
add
pop
adc
add
mov
add
add
bound
add
xor
out
add
add
mov
xor
enter
or
add
aam
js
imul
add
inc
testl
add
fsts
lods
add
pushf
mov
add
in
pop
aas
pop
pusha
and
mov
add
sub
add
loopne
add
add
mov
add
scas
and
lahf
int3
loope
add
into
mov
mov
imul
mov
into
out
dec
dec
or
pop
js
icebp
inc
jns
mov
or
xchg
cld
jmp
add
lods
add
out
into
pop
inc
dec
mov
adc
pop
xor
pop
or
addl
add
add
xchg
add
add
jge
and
add
inc
fcomp
scas
add
xor
mov
add
add
or
add
add
dec
out
jno
mov
cld
inc
dec
hlt
add
jns
out
jge
cli
cmp
out
pop
pushf
sbb
cli
rolb
insl
mov
ss
mov
mov
adc
leave
dec
pmulhw
xor
shll
jb
aad
push
add
ljmp
and
add
adc
pop
ljmp
inc
add
add
rcrb
xor
add
addr16
scas
fidivl
add
add
int
jle
lods
add
jns
add
xor
push
cmp
dec
jns
sub
jmp
das
push
push
xchg
xchg
bound
lret
mov
add
addb
arpl
shrl
lea
add
setle
add
cmpl
icebp
xor
insl
jno
jg
mov
xchg
xlat
xchg
incl
add
push
cmp
add
add
fbld
dec
pop
dec
incb
stos
aas
lock
add
inc
into
popa
cmpsb
add
test
add
daa
or
add
fsts
repz
add
mov
add
sbb
adc
imul
testb
jle
adc
add
cmp
les
xchg
cwtl
inc
orl
jb
and
and
add
leave
std
daa
pop
out
mov
pop
movsb
add
rcr
adc
out
add
mov
lock
sti
fwait
adc
xchg
or
xchg
xchg
mov
push
test
cwtl
pop
inc
jg
xchg
mov
add
add
push
popa
fiadds
add
pop
push
out
push
std
push
dec
xchg
push
cli
cmp
add
jl
ljmp
cmp
aaa
sbb
das
stos
add
addb
jnp
daa
shlb
add
jle
dec
addr16
jne
add
fildl
sahf
ljmp
add
sub
mov
xor
scas
hlt
cmp
inc
fcmovnbe
popf
in
ja
mov
scas
rcrl
std
fs
jb
xchg
scas
add
jno
pushf
aam
add
cmpsl
iret
je
inc
scas
add
mov
shll
lock
bound
inc
xor
adc
imul
jbe
dec
push
add
fbld
out
test
inc
mov
add
addb
adc
cmp
out
add
pushf
decl
add
mov
dec
mov
jl
inc
sub
mov
or
and
add
and
scas
pop
and
add
mov
push
adc
sarl
mov
mov
test
jnp
sahf
or
pop
cmc
sbb
ret
add
xor
xchg
push
stos
add
add
xor
jno
imul
mov
test
add
add
inc
arpl
ret
jle
fs
pop
je
mov
jmp
xor
cltd
mov
add
add
add
mov
add
xor
push
jl
mov
mov
xchg
imul
cmp
in
mov
xor
xchg
jle
enter
sti
add
add
lea
ja
outsl
popa
je
in
xor
fwait
add
add
test
add
add
add
les
inc
adcl
inc
test
dec
pop
repz
into
sbb
cmp
push
mov
add
jnp
pop
xchg
pop
mov
push
dec
out
xchg
mov
lcall
adc
jae
add
sti
or
add
and
and
or
add
cmp
add
test
mov
cwtl
mov
lods
pusha
pushf
subl
add
jg
or
clc
clc
out
push
adc
shlb
lahf
cmpsb
add
push
mov
jg
xchg
aam
add
jl
sub
add
add
add
add
add
hlt
xor
pop
cmp
lret
mov
xchg
jge
mov
lahf
or
or
add
leave
out
mov
dec
inc
outsl
ljmp
stos
testl
in
leave
stos
lret
fcoms
fidivl
add
cld
add
push
cld
sub
add
push
add
movsb
add
and
frstor
ret
adc
add
sbb
inc
pop
jns
add
add
bound
shrl
xor
jge
and
add
lock
adc
jo
js
rorl
jne
mov
add
test
xchg
dec
push
sub
sub
add
mov
cmc
ja
clc
stos
xor
enter
jo
add
add
mov
movsl
dec
daa
inc
mov
add
ljmp
dec
ss
push
lret
sarb
jge
cmpsb
add
lret
push
add
repnz
mov
add
add
adc
in
pop
push
popf
adc
out
xlat
adc
add
movsl
xchg
popf
mov
inc
and
add
add
mov
add
add
stc
jno
gs
das
push
jno
rcrb
xchg
push
mov
push
js
mov
cwtl
ja
push
mov
mov
add
mov
js
dec
rclb
push
add
add
add
push
lahf
ret
repz
outsb
scas
dec
dec
sub
add
add
xchg
or
add
outsl
xor
lds
push
inc
cmp
pushf
shll
lock
lahf
mov
add
jmp
stos
aam
fwait
mov
in
add
test
add
popf
hlt
push
xor
outsb
jmp
pop
inc
sub
add
loopne
add
sub
add
jne
cwtl
dec
les
jo
mov
jecxz
andl
cltd
das
insb
jecxz
testl
push
add
aas
xor
xor
in
cld
mov
insb
push
add
or
add
outsl
push
test
mov
add
add
add
ds
or
add
add
loope
add
add
mov
dec
cltd
mov
push
mov
add
push
dec
inc
imul
addb
mov
add
fildl
add
test
outsb
pop
jle
nop
push
sub
pop
pusha
lds
data16
flds
add
add
cwtl
icebp
pop
cmpsb
add
lds
add
or
pop
jae
add
pop
mull
pop
out
xor
jb
add
adc
roll
popf
add
add
les
out
addb
leave
inc
add
push
in
xor
dec
repnz
add
add
stos
add
inc
cltd
pop
sbb
repz
mov
add
add
lahf
or
add
add
popf
mov
jns
fwait
xchg
add
add
mov
add
adc
push
sub
add
mov
dec
aam
mov
add
pop
inc
push
pop
xor
xchg
add
fs
popa
jbe
xchg
in
mov
icebp
push
add
lds
test
add
in
dec
outsl
arpl
inc
imul
imul
stos
add
dec
xlat
mov
lcall
dec
stc
or
add
ret
add
add
fwait
insl
orl
add
stos
add
sahf
xchg
add
dec
xchg
int3
or
add
scas
add
aad
pushf
jl
jns
pusha
fidivrl
inc
fldl
add
fbld
adc
sbb
out
scas
add
ror
dec
addb
dec
xor
mov
add
add
sbb
and
add
jmp
adc
fdivl
icebp
push
xor
push
add
xchg
add
xchg
fdivrp
lds
test
add
mov
scas
add
movsb
add
sbb
nop
pop
in
scas
add
sbb
rolb
and
add
into
orl
icebp
jne
or
jb
sti
xchg
dec
xor
mov
cmc
mov
fs
lret
xchg
cmc
mov
mov
and
ret
aam
sub
add
fxch
icebp
or
add
stos
add
mov
add
je
mov
adc
sub
inc
pop
mov
add
add
ds
lods
mov
repz
add
js
or
mov
jae
sbb
add
add
cmc
sbb
inc
lar
add
push
add
stc
mov
in
imul
not
outsl
stos
jne
add
js
rcrb
out
fisttps
mov
cmp
movsb
add
shrl
add
add
add
or
add
xor
scas
rclb
fists
andl
sub
cld
lahf
pop
leave
repnz
add
push
cltd
hlt
bound
jmp
and
add
add
mov
add
mov
xchg
add
cli
jg
rorb
pop
pop
jae
jno
push
mov
or
add
add
ds
test
add
add
add
dec
pop
mov
add
jno
out
lods
add
add
and
mov
add
add
adc
xor
and
add
add
jbe
xor
stos
add
into
cwtl
xchg
add
add
and
add
add
mov
cmpsl
loopne
add
jge
add
dec
jle
xor
js
int
dec
jecxz
sub
lods
push
and
xchg
sbb
add
or
xchg
adc
xchg
popa
xchg
sarb
jmp
or
add
lods
sub
add
insb
add
add
test
add
cmpsb
add
jge
jp
add
mov
mov
add
sbb
xchg
stos
add
pushf
push
popf
jnp
mov
add
push
sbb
cmpsb
add
into
orl
orl
xchg
inc
gs
add
add
and
add
adc
add
xchg
or
das
gs
mov
add
inc
das
dec
jmp
mov
cmp
add
cwtl
je
mov
add
out
loop
or
add
movsl
test
nop
push
adc
sub
stc
jnp
jno
outsl
xchg
in
mov
mov
add
data16
test
add
jne
sbb
jle
xor
add
je
add
addb
repnz
ljmp
add
mov
pop
bound
mov
ja
add
mov
and
das
ss
stos
add
arpl
adc
add
xchg
jo
mov
cmp
cmp
jns
ljmp
addr16
lds
inc
sbb
add
pop
movsl
pusha
mov
xor
add
mov
add
add
mov
add
movsl
sbb
hlt
cmp
dec
mov
test
pop
push
add
out
lock
nop
jmp
sahf
ljmp
dec
adc
loopne
movsl
sar
aam
out
add
gs
faddl
add
mov
cltd
sub
xlat
test
add
aas
sub
pop
bound
rcll
add
rorl
daa
cmc
push
movsb
add
imul
jb
dec
scas
add
cltd
jge
lret
fucomi
xor
cwtl
push
mov
add
xchg
or
add
add
loopne
or
leave
ljmp
jnp
add
pop
inc
out
mov
adc
movsb
add
mov
add
dec
dec
pop
sbb
cmpsb
add
shr
dec
pop
mov
nop
push
mov
addb
or
add
xchg
mov
add
jo
jecxz
sbb
aaa
sbb
adc
xchg
mov
jnp
add
sub
pushf
lds
rcll
dec
push
aam
lcall
push
test
add
or
add
jno
dec
outsl
mov
add
fisubrl
push
outsb
push
add
fs
add
repnz
add
dec
adc
sahf
scas
add
cwtl
sbb
cmp
aam
adc
fwait
aam
add
lods
add
mov
lock
add
test
lret
jecxz
cmpsl
nop
sub
and
add
popf
push
cmc
xor
rcll
int
ret
add
insb
sub
sub
add
pop
xor
mov
add
in
sub
add
jae
fs
push
sbb
dec
inc
rolb
das
sub
add
inc
and
dec
addr16
xchg
in
loope
shlb
test
jnp
mov
ror
inc
gs
inc
fistps
inc
xor
test
add
lret
orl
add
pop
push
out
mov
add
data16
add
add
mov
pop
xor
adc
or
lret
ljmp
lea
ficompl
add
fsubp
ja
mov
xor
add
aad
dec
out
in
sti
lea
add
stos
add
and
add
dec
aaa
scas
pop
lods
add
outsb
add
add
pop
push
popa
push
add
xchg
lods
cmp
xlat
xor
xchg
dec
adc
or
add
mov
cmp
xchg
pop
popl
dec
or
rorl
add
mov
xchg
push
dec
cli
pop
in
cmpsb
add
jnp
inc
outsb
and
add
arpl
pop
movsb
add
bound
add
inc
xchg
cld
out
fidivl
mov
add
fldpi
mov
in
sub
add
test
add
add
mov
add
lds
xchg
add
jb
into
fisubrs
sbb
mov
das
mov
lahf
mov
dec
test
add
add
outsl
mov
ss
mov
add
push
adc
xchg
add
stos
add
xchg
in
pop
fdivrl
pop
inc
push
and
add
mov
icebp
dec
nop
or
add
ljmp
add
xchg
pop
mov
add
data16
mov
fimuls
pusha
lcall
add
je
bound
jecxz
dec
xor
out
int
sbb
insb
loop
mov
mov
add
add
adcl
pop
cmc
and
add
aam
cli
xchg
add
mov
add
fimull
movsl
push
stos
sbb
add
add
or
add
and
cmc
xchg
xchg
push
scas
fnstsw
adc
cli
push
movsl
add
cmpsb
add
test
add
jl
add
test
shrl
fmuls
mov
jle
jo
arpl
mov
add
je
add
jo
xor
add
lea
add
ja
jbe
add
lea
add
jecxz
push
dec
enter
adc
inc
ss
mov
add
lret
ret
in
aad
sbb
movsl
and
or
inc
mov
add
out
mov
lret
dec
call
add
cmp
inc
leave
fsts
sub
add
sbb
add
ret
inc
iret
mov
subl
cli
cmp
add
movsb
add
jge
inc
jb
or
add
fisttpl
hlt
sahf
in
mov
add
jecxz
mov
scas
add
bound
add
imul
add
xchg
add
hlt
push
xchg
sbb
add
add
int3
out
ret
mov
sbb
negb
inc
jge
ljmp
pushf
sar
faddl
arpl
nop
jge
add
sub
add
inc
sbb
inc
and
add
jge
push
add
sub
add
sti
or
mov
jmp
xchg
dec
mov
add
sahf
xchg
int3
pop
inc
les
push
sub
add
and
sbb
add
mov
jle
mov
sarl
or
add
xor
int3
repnz
lret
add
cld
arpl
dec
add
add
sti
loope
adc
adc
fistl
icebp
dec
aam
clc
movsb
add
scas
add
cld
scas
add
jecxz
mov
add
jp
jo
js
jae
sbb
add
or
add
jg
aaa
test
add
or
add
jmp
test
add
add
xor
fmuls
imul
test
mov
add
loop
in
ja
loop
add
out
popa
xchg
add
add
sub
lcall
mov
jb
xchg
stc
pop
pop
daa
loopne
add
xchg
xchg
pop
out
ret
addb
inc
ds
add
add
lcall
jg
sbb
inc
or
cli
fisttps
aas
add
add
shl
aas
pushf
inc
addr16
add
xchg
roll
add
pop
and
or
icebp
jno
imul
jg
fldt
add
add
push
add
add
pusha
xchg
sbb
mov
add
xor
add
add
add
fistps
in
mov
mov
and
add
shrl
cmp
xor
and
add
add
push
add
adc
inc
mov
push
in
ja
jmp
cmp
push
pop
mov
aad
mov
in
test
rsqrtps
loopne
add
popl
mov
add
das
repnz
mov
add
pusha
mov
add
jno
add
jg
and
add
sarl
leave
mov
dec
lret
add
pop
inc
popa
add
add
and
push
sahf
stos
insl
lock
add
ljmp
scas
push
in
in
mov
or
add
jno
add
pop
mov
hlt
movsb
add
test
adc
pop
inc
ja
inc
adc
clc
icebp
scas
add
mov
add
push
repz
add
adc
add
pop
push
adc
adc
sahf
adc
add
insl
insl
into
push
sub
movsl
jp
out
leave
push
add
lds
add
in
adc
popf
stc
rol
sbb
or
add
add
dec
or
cmc
mov
add
rcrb
add
gs
add
bound
xchg
popa
lret
dec
movb
aas
mov
xchg
mov
add
jnp
cmp
add
inc
call
push
addb
adc
add
mov
add
push
jge
add
sub
add
bound
enter
cmc
and
sub
mov
xlat
sbb
pop
push
fistl
sbb
outsl
imul
cmc
cmp
loope
sbb
add
add
mov
jnp
jge
test
add
add
dec
divb
movsb
add
xor
inc
dec
jl
xor
mov
ljmp
add
lods
add
mov
xchg
inc
mov
cld
adc
cmp
lock
call
pop
rclb
add
in
add
fs
fistl
cmp
cltd
mov
add
jns
sub
add
mov
add
add
add
subl
add
dec
push
in
add
sbb
cmpsl
fs
jae
mov
fcomp
jne
fwait
xchg
ds
add
or
add
ret
imul
jno
mov
mov
popf
push
aam
shrl
daa
dec
xchg
addb
xlat
lods
add
jo
sarb
aam
mov
add
and
add
push
add
insb
cmp
add
jns
cmpsl
lods
add
enter
int3
jo
out
mov
femms
add
pop
scas
add
addr16
test
rcrl
add
out
mov
enter
cmp
imulb
jo
push
add
outsl
pop
push
psllq
mulb
cli
sub
lret
rorl
fstl
lock
test
add
cmp
xlat
inc
mov
add
loopne
add
aas
sbb
int3
mov
add
add
stc
jg
cld
xor
sahf
or
adcl
int3
pop
lcall
pop
sub
add
out
idivb
cmp
dec
push
add
lea
mov
and
mov
jno
mov
cld
mov
add
ljmp
pop
pop
addb
sub
loopne
push
push
add
add
in
push
cmp
add
adc
aaa
inc
lahf
add
mov
adc
add
mov
xor
scas
add
or
add
add
mov
add
xchg
jp
add
cmp
andl
xchg
add
add
dec
stos
add
sub
add
jno
movsl
inc
cld
lea
add
mov
mov
and
add
outsl
sub
add
int3
loopne
nop
xchg
add
add
cli
lahf
dec
ret
loope
shrl
push
test
stos
add
fdivp
jl
lods
add
fistpl
in
or
add
jp
push
add
mov
push
add
mov
add
dec
ss
test
add
sub
add
cld
xlat
and
add
lret
shll
jne
call
adc
push
jecxz
inc
sbb
add
jnp
mov
jno
jo
bound
add
push
jne
ret
adc
dec
jo
std
das
mov
and
cmp
or
add
push
or
add
pop
js
pusha
insb
in
mov
loope
cmp
add
mov
push
cmp
and
add
aad
add
push
lret
jbe
outsl
adc
andl
mov
repnz
xor
mov
mov
inc
push
inc
sarb
inc
pop
push
sub
add
inc
and
mov
lods
mov
fmuls
int
cwtl
rorb
mov
or
lods
add
xchg
popa
aam
mov
adc
add
push
sti
or
add
clc
add
push
lcall
mov
add
cmp
add
out
roll
mov
movsl
subl
dec
mov
add
testb
insl
mov
add
mov
add
mov
add
add
outsb
inc
xchg
movb
popf
push
inc
rcll
cltd
xchg
out
fisubrl
or
call
int
add
lret
fs
cmp
sahf
sbb
mov
mov
test
add
shl
pop
test
adc
cmpsl
das
sahf
in
sub
stc
adc
popl
mov
rolb
mov
pop
and
add
jp
inc
pop
into
sub
add
outsb
or
aad
sbb
lcall
add
xchg
fiadds
jmp
mov
cmpsl
rorl
push
int
add
pop
lahf
movb
xor
xchg
cmp
insb
pop
cmpsl
add
lret
leave
daa
ja
mov
repz
iret
scas
add
repz
add
test
add
roll
add
movsb
add
cmp
sbb
xchg
sbb
arpl
add
nop
sarl
dec
cmp
add
mov
inc
xchg
mov
xchg
sbbl
inc
mov
add
dec
popf
xor
add
sbb
push
add
xor
add
add
mov
push
xor
mov
add
pop
aad
out
addb
loop
and
add
jne
add
lock
add
push
sub
dec
adc
test
add
cmpsl
pop
pushf
dec
jp
or
add
adc
pusha
into
addr16
add
add
and
add
je
mov
mov
mov
add
inc
mov
das
in
fwait
push
add
out
call
pop
jle
imul
les
shl
dec
sub
pop
add
add
imul
jo
stc
psubsb
mov
loopne
push
jmp
mov
xchg
add
dec
ret
dec
sub
add
pop
pop
add
add
fcmovne
xor
push
add
stc
imul
add
cli
mov
add
aad
xor
add
mov
lock
xchg
mov
add
hlt
inc
pop
inc
test
add
or
add
sbb
add
sbb
in
add
inc
xor
fldt
add
imulb
daa
push
mov
adc
mov
aad
add
insb
lods
add
pop
sarl
out
pop
push
inc
std
addr16
add
xor
mov
xor
cwtl
add
add
push
adc
gs
add
mov
add
add
mov
movsb
add
jle
inc
cmp
add
gs
add
push
add
sarb
add
jo
xchg
loopne
aas
cmpsb
add
jno
mov
adc
sbb
sbb
add
sbb
movsl
cwtl
mov
dec
leave
stc
mov
add
jecxz
addb
inc
int3
movsl
mov
add
popf
xchg
add
icebp
test
add
or
add
push
rcr
loop
inc
shr
add
add
js
add
shl
mov
add
cld
rorb
mov
sub
mov
push
or
imul
cmpsl
pop
jno,pt
sarb
and
inc
adc
jmp
jge
sbb
add
popa
in
int
adc
add
add
xchg
hlt
or
jg
jbe
aaa
rcll
negl
js
mov
add
jl
or
add
jb
add
out
ljmp
stos
repz
pop
cmp
dec
jle
mov
add
cmp
test
add
jbe
add
mov
sub
add
add
in
sahf
vcmpps
add
sbb
addb
stc
jle
jg
add
call
add
lret
adc
add
mov
sbb
cmc
and
add
scas
add
jo
mov
push
js
push
pop
pop
inc
jns
popf
cmp
add
add
add
add
int3
mov
xor
adc
jae
sbb
mul
pop
addb
mov
add
data16
out
add
cmp
jnp
add
ljmp
xchg
push
rorl
push
or
jae
mov
xchg
add
add
lret
add
movsl
mov
add
and
add
xor
sbb
push
jmp
nop
mov
cld
push
add
clc
daa
dec
dec
mov
add
cmp
cmp
daa
negb
add
out
shlb
push
add
push
or
add
mov
add
pop
lock
sbb
ja
ja
add
inc
or
mov
sarb
add
arpl
xchg
jae
sub
add
mov
add
pushf
mov
pop
addr16
ss
ret
test
add
add
add
insb
test
add
pop
js
add
mov
popa
xlat
pop
jo
mov
call
push
lods
repz
adc
outsl
icebp
push
add
and
add
jb
jnp
add
sbb
lcall
add
add
addb
pusha
cltd
iret
or
add
add
sti
test
add
mov
add
jl
mov
add
xlat
mov
xchg
lds
addb
jae
mov
lret
data16
add
add
add
add
scas
add
das
flds
jle
daa
int3
or
add
push
lods
add
movsb
add
nop
rcrb
add
icebp
jno
lcall
xchg
jns
and
add
jb
and
add
pop
jnp
cmc
cmp
or
loop
push
pop
sbb
add
cmp
dec
int
jecxz
jbe
xchg
dec
jno
ja
xor
call
test
sbb
mov
cltd
shl
sarl
inc
test
or
add
sub
add
add
test
add
mov
daa
xor
mov
mov
push
add
mov
pop
fisttps
add
add
add
xchg
add
or
xor
mov
add
add
xchg
pop
int3
out
jp
addl
sbb
popa
push
push
mov
pop
inc
fcom
pop
fmuls
xlat
mov
sbb
jo
pop
daa
mov
inc
jecxz
sti
pushf
pop
jge
das
int
add
mov
jne
mov
repz
and
xchg
aam
out
add
dec
mov
rolb
into
cmpsl
or
add
iret
xchg
jmp
add
test
add
ljmp
jmp
add
sub
add
add
test
add
add
xchg
cmpsl
mov
rclb
lret
test
jnp
push
mov
inc
mov
add
push
mov
test
aaa
aaa
add
add
xchg
lea
add
js
out
mov
lods
ljmp
in
int3
test
add
mov
adc
xor
ficompl
or
add
test
mov
add
mov
xor
stos
sub
lcall
aaa
pop
scas
add
cmp
mul
movsl
dec
sub
add
pop
enter
xor
mov
cmp
dec
and
fcmovnu
push
mov
pop
adc
shlb
mov
cmpsl
aad
imul
loope
sub
idivb
jno
call
sub
lcall
xchg
stos
add
inc
mov
outsb
xchg
add
lahf
jb
jb
jb
fmull
and
add
cmp
add
sbb
aaa
cli
sub
add
in
push
pop
sti
sti
test
addb
repnz
inc
dec
cmpsb
add
mov
std
jne
sahf
inc
stos
movsl
pop
fwait
in
cmp
in
dec
in
xor
add
addb
outsb
pop
pop
lcall
jl
mov
cli
hlt
cmp
and
add
inc
decl
add
dec
mov
add
dec
adc
ss
inc
mov
popa
or
add
int3
cmp
add
add
cmpsb
add
jbe
faddl
add
add
leave
jl
scas
popf
lea
out
jns
fwait
shlb
imul
add
pusha
bnd
das
shl
xchg
cld
push
lods
add
push
inc
inc
lahf
notb
xchg
mov
add
push
lods
add
jbe
shlb
rcrl
sahf
jg
cmpl
add
in
bound
or
pop
lret
sbb
gs
movsb
add
mov
test
add
push
xor
out
jmp
fs
pop
mov
mov
and
add
out
xchg
inc
xlat
mov
add
pop
sub
cwtl
sub
dec
sbb
mov
add
dec
icebp
cwtl
push
xchg
push
xor
rcr
stc
cmp
je
jle
adc
jb
add
mov
or
add
add
jecxz
push
add
testl
jmp
loope
xorl
xchg
pop
adc
orl
out
icebp
das
mov
std
rolb
fwait
and
insl
or
add
push
dec
mov
jne
sar
sahf
hlt
int
mov
mov
lcall
sub
add
pushf
cwtl
push
jne
mull
fmulp
cmp
fistl
add
xchg
test
add
loop
add
cmp
add
cwtl
dec
rcll
add
imul
add
das
cmp
lea
add
jns
ret
mov
push
mov
add
std
cmp
je
sbb
mov
adc
inc
pop
xchg
add
add
dec
cmpsb
add
mov
inc
mov
sbb
add
add
imul
add
sbb
bt
repz
add
into
sbb
nop
in
lcall
add
pop
fnstenv
aaa
clc
xchg
test
add
aam
sbb
sarb
call
add
add
out
jp
xchg
pop
test
sub
add
pop
sbb
xchg
cmp
mov
mov
jns
mov
jmp
js
add
dec
add
add
xor
call
add
xor
push
jmp
pop
ds
add
add
loope
add
push
andl
mov
xor
push
push
mov
mov
add
jmp
lock
pop
repz
or
push
sahf
out
dec
mov
test
xor
xor
xchg
push
outsl
mov
add
jl
mov
add
adc
mov
outsl
iret
inc
ds
rcrl
and
int3
sub
add
or
in
mov
add
mov
sbb
mov
add
add
subl
add
add
and
and
incl
add
jb
in
mov
push
sub
add
idivb
jnp
mov
add
shll
or
ljmp
cmp
in
jne
add
mov
or
add
adc
adc
test
add
fsts
add
pop
jp
in
sbb
and
jns
icebp
mov
add
jns
mov
add
and
add
hlt
or
add
jnp
add
sti
mov
add
in
fdivs
add
les
enter
add
push
sbb
addr16
xchg
adc
aaa
pop
daa
adc
notb
stc
inc
add
add
add
fwait
cmp
adc
push
loop
jecxz
mov
adc
shll
subl
enter
jno
lea
into
ja
fwait
cmpsl
je
adc
movsb
add
outsl
rclb
sub
push
icebp
xor
inc
pop
push
add
in
lods
test
xchg
xlat
mov
test
outsl
rol
fcmove
fnstsw
add
jmp
adc
push
cltd
sti
cmpsb
add
insl
mov
add
add
ljmp
jp
and
mov
jg
mov
nop
js
add
push
xchg
sbb
rorb
xor
inc
int3
fcoml
mov
mov
add
and
push
mov
push
xlat
fs
add
pop
lock
mov
cmp
mov
adc
adc
pop
js
out
dec
lock
or
add
sbb
scas
add
cmp
loop
pop
mov
fisubrl
cmc
loopne
mov
pop
jmp
movsb
add
dec
mov
jo
ret
push
add
mov
repnz
rorb
mov
mov
sub
add
jp
mov
add
dec
leave
push
hlt
repz
hlt
or
add
insb
jg
inc
xlat
testb
aas
cmp
mov
mov
add
add
add
dec
or
add
ss
gs
mov
cmp
ret
imull
add
data16
imul
stos
add
imul
icebp
cmp
add
adc
or
add
adc
out
nop
jmp
out
and
push
add
into
mov
mov
add
xchg
lea
fwait
inc
cmp
into
lds
add
imul
addb
add
add
inc
and
cmp
xchg
mov
add
aaa
jecxz
inc
lahf
repz
popf
scas
out
dec
lods
nop
fmul
add
ds
add
pop
cmp
outsb
out
add
aam
outsl
and
xlat
mov
out
add
add
inc
stc
cmpl
mov
insl
icebp
imul
std
mov
jno
add
add
add
pop
mov
fwait
jmp
sahf
scas
add
pop
cmpsl
mov
add
xor
pop
and
adc
mov
inc
fldl
mov
pop
pushf
sbb
jne
enter
popa
cmp
pop
in
addb
xchg
add
mov
add
push
lahf
mov
ja
add
loope
add
mov
and
add
mov
ficoms
sti
negl
lret
cmp
movsl
add
ficoml
or
add
in
add
push
fs
ja
into
xlat
sarb
push
mov
jmp
add
jo
pop
adc
add
mov
xchg
pop
movsl
bound
addl
loopne
add
lock
lods
add
add
add
test
add
xchg
add
add
das
and
lahf
and
mov
pop
inc
jmp
bound
sbb
rclb
in
out
jle
add
shlb
mov
xchg
xor
jne
and
loope
ljmp
dec
pop
jo
test
add
jmp
jbe
insb
movsb
add
jmp
cmp
add
pop
sbb
gs
push
add
inc
dec
outsl
jno
cmp
aam
negl
dec
mov
sbb
add
dec
lods
fistps
les
and
add
add
sahf
dec
xor
jns
shlb
sbb
cmp
fiaddl
adc
add
inc
ljmp
mov
movsb
add
jg
add
adc
lds
data16
xchg
ficompl
xor
push
aad
xchg
and
add
add
insl
push
fisttps
add
arpl
scas
add
in
xchg
pop
outsb
rcl
mov
add
or
add
add
in
js
push
sbb
xor
cmp
or
add
add
sub
popf
and
mov
add
mov
add
push
loope
add
add
lods
adc
in
test
inc
loop
roll
out
adc
ss
add
test
fucomi
movsl
add
sti
jge
ss
cmp
jb
add
popa
jnp
fidivs
inc
lds
add
xorl
and
add
jb
stos
into
mov
add
or
add
jne
aad
push
rcrl
xor
out
add
or
loopne
mov
or
add
and
fmull
add
sbb
enter
dec
adc
pop
push
mov
lea
inc
dec
push
roll
inc
jne
add
in
out
fwait
and
add
bound
inc
jnp
jmp
cli
dec
jecxz
mov
xor
fimull
add
out
add
mov
les
movl
push
int
add
lret
js
jg
xor
mov
xchg
mov
aas
lods
arpl
inc
fwait
rorb
dec
daa
and
out
lods
add
sahf
pop
out
fmull
arpl
lahf
daa
insl
in
add
add
add
add
mov
xchg
adc
add
aaa
xor
adc
add
pop
dec
out
add
shrl
add
jo
inc
push
add
mov
add
mov
push
mov
dec
mov
or
xchg
daa
xchg
and
add
add
or
add
adc
push
fwait
call
add
movsl
popa
adc
inc
push
in
push
jno
mov
add
add
cmp
addb
ja
rcll
cmp
nop
jg
jecxz
add
pop
stos
add
sub
bound
pusha
jne
and
add
sbb
sbb
repz
mov
jecxz
jmp
jg
lock
dec
mov
mov
jp
rcr
jle
btr
add
ret
sub
add
jp
add
jge
dec
xchg
or
adc
add
add
add
lcall
or
add
add
mov
ret
mov
mov
rol
aaa
gs
cmp
add
lea
dec
int3
add
add
inc
clc
sti
outsl
mov
add
sti
mov
add
pop
mov
gs
cmp
in
jo
popf
cmp
iret
shll
mov
add
cld
pusha
jbe
push
inc
gs
cmc
cmc
fiaddl
imul
and
sub
add
scas
add
add
inc
mov
mov
adc
mov
push
daa
dec
in
pusha
fbld
mov
dec
ja
jne
cmc
into
test
push
add
out
cwtl
stc
sub
add
mov
ss
ja
lods
add
or
add
jb
repz
sbb
add
jp
adc
cmp
add
lods
add
rcrb
pusha
fnstsw
iret
in
add
or
add
xchg
divl
shrl
add
add
push
add
xchg
jge
jecxz
and
add
jecxz
push
pop
adc
and
rcrl
daa
jae
ret
dec
xchg
add
dec
inc
fcmovne
jp
ljmp
in
dec
fisubl
add
xchg
std
jb
dec
hlt
push
add
in
mov
mov
add
mov
mov
insb
bound
or
add
cwtl
movsb
add
and
add
test
add
xchg
jb
or
jp
xchg
jmp
xor
xchg
test
push
insb
xchg
jnp
mov
mov
add
sub
sub
add
das
and
add
xlat
dec
pop
popf
mov
add
aas
popa
in
out
mov
cltd
sbb
xor
enter
pushf
and
dec
scas
cmp
push
add
xchg
cmc
in
mov
shll
mov
add
cld
pop
je
cmp
addb
je
cltd
sarl
hlt
incb
sbb
cli
test
loope
lret
pop
pop
insl
add
add
addb
negl
mov
add
sbb
add
ss
out
orl
add
fstpt
fwait
out
add
aas
push
mov
gs
outsl
fwait
hlt
cmc
aaa
sbb
sbb
inc
lret
jp
jb
adc
call
xchg
add
xchg
ds
sahf
xor
add
pop
jno
adc
pop
jns
or
add
xchg
add
add
test
int
mov
lods
enter
lds
add
clc
xchg
rorl
add
add
add
movsl
push
aaa
jb
pop
inc
xor
add
leave
jno
in
sub
add
add
or
outsl
aas
rclb
icebp
into
push
data16
cmp
mov
into
pop
sbb
mov
add
mov
arpl
data16
add
add
loope
mov
mov
xchg
add
scas
mov
add
adc
pop
mov
add
add
cmp
xchg
rclb
mov
outsl
sbb
inc
mov
add
call
add
jp
and
add
add
add
lds
sub
pop
add
add
adc
add
xchg
add
call
fwait
mov
inc
pop
and
cmp
add
xchg
add
aaa
jl
daa
das
outsb
add
mov
inc
pusha
sub
test
add
mov
lods
sub
add
scas
fsts
jg
or
fiadds
sbb
movsl
call
sahf
in
loop
mov
and
add
test
add
add
lret
inc
jae
stos
add
ja
test
sbb
add
add
xchg
cmp
mov
add
push
movsb
add
and
add
jmp
cmc
clc
xor
jmp
add
subl
add
add
out
pop
dec
xorl
dec
jle
sbb
xlat
and
pushf
repnz
add
pop
scas
sub
call
lea
in
das
adc
jmp
not
add
jmp
push
fcmovne
out
cmpsb
add
cld
mov
pop
mov
arpl
sub
add
shll
mov
push
jo
mov
mov
xor
nop
or
add
add
loopne
mov
pop
mov
push
and
add
mov
sbb
ret
inc
xor
dec
or
scas
add
sbb
sub
add
xchg
mov
pushf
add
add
pop
test
add
arpl
add
add
aam
addb
ds
push
sub
add
mov
loop
mov
cmp
add
sbb
sub
add
jo
push
repz
sahf
mov
add
nop
dec
push
cli
in
stos
add
aad
cmp
sub
add
add
add
test
add
jbe
stc
sub
add
sti
das
inc
in
add
icebp
and
test
add
or
inc
jae
cmp
lods
aam
addb
mov
clc
out
call
inc
call
xor
icebp
ss
pop
mov
sub
add
adc
lret
sahf
dec
insb
cmp
mov
add
dec
sub
cmp
mov
add
fcomps
mov
mov
or
sbb
add
add
lret
and
add
sbb
mov
sti
cwtl
mov
dec
xchg
push
jecxz
adc
jbe
je
xlat
xchg
pop
ljmp
cmp
addl
add
rorl
add
shll
xlat
aam
scas
inc
or
add
mov
add
cmp
jno
pushf
adc
sub
inc
leave
inc
sub
add
enter
add
jmp
fstpl
rclb
add
ret
jns
rol
ffree
int
sub
inc
data16
add
add
lods
add
sub
add
cmp
cmpsb
add
call
sbb
add
roll
dec
adc
adc
mov
leave
cmp
add
adc
xor
imul
add
movsl
push
test
add
pop
xchg
pusha
outsb
test
shlb
daa
ret
les
jno
mov
add
jns
mov
push
aas
pop
inc
out
add
pand
add
pop
or
xchg
outsl
outsb
add
add
popf
out
mov
push
add
sahf
pop
push
add
sub
out
inc
addl
add
push
add
add
add
sbb
xchg
dec
or
add
jo
xchg
sti
test
jmp
add
add
inc
pop
sbb
mov
add
jns
pop
mov
pop
into
lahf
out
in
cmc
inc
movsb
add
cmp
or
movsl
jg
jg
out
hlt
xor
out
mov
sub
add
pop
cli
imul
in
xor
outsb
and
cmp
rclb
in
xchg
mov
out
and
add
add
xor
scas
cld
in
dec
and
add
adc
add
xchg
popf
adc
add
add
out
aam
add
and
add
cmp
sbb
lcall
xor
push
cmp
addl
mov
add
ss
xchg
jbe
outsl
lock
pop
test
push
mov
mov
bnd
nop
mov
add
insb
mov
xor
sub
hlt
loop
mov
imul
cmc
jnp
loope
mov
add
push
sti
xor
add
add
aad
pop
aad
jae
inc
sbb
shrb
mov
push
add
decb
pop
pop
jbe
rclb
add
add
mov
add
ss
jl
inc
mov
add
pop
cmpsl
push
mov
or
cmp
dec
sbb
scas
cmp
inc
in
in
movsb
add
xchg
ds
push
pop
in
push
lds
add
xchg
jle
pop
aas
shrb
push
addb
cwtl
and
movl
mov
add
sbb
add
mov
cmp
icebp
stos
add
and
add
xchg
add
fcmovu
or
add
shll
scas
add
in
jae
pop
movl
sti
and
add
lods
xbegin
sbb
movsl
gs
cmpsl
adc
dec
imul
in
jnp
add
add
pop
mov
add
add
je
pop
repz
add
cmp
sub
add
popa
stos
add
faddl
enter
push
xor
add
add
dec
cmp
add
inc
fdiv
imul
pop
or
add
insb
sbb
fwait
mov
in
push
das
ret
add
int3
mov
lock
dec
sbb
mov
cld
ss
add
aas
sbb
and
dec
cltd
shll
cli
inc
dec
stos
add
or
adc
xor
adc
mov
cmp
mov
popl
mov
popl
scas
mulb
inc
ficomps
xchg
add
mov
mov
add
imul
adc
mov
add
and
add
scas
push
add
add
sub
lds
jmp
xchg
add
into
dec
psubsw
jno
xor
add
sahf
ds
js
mov
add
xchg
fiaddl
enter
mov
icebp
ds
out
aas
shrl
add
stos
add
out
mov
push
xor
jl
clc
mov
add
jmp
and
add
or
add
dec
jne
push
add
pop
push
sti
shr
dec
jb
inc
ficoms
fcmovnbe
mov
or
add
mov
divb
mov
add
xor
repnz
add
xchg
mov
or
adc
mov
add
jns
add
fwait
mulb
fisttps
mov
jnp
or
add
jae
inc
dec
jbe
mull
out
sahf
into
aam
cmp
ret
insb
and
add
dec
sbb
push
add
gs
and
or
add
and
add
add
addb
mov
aam
mov
sbb
sbb
add
or
ret
adc
scas
pusha
adc
stc
loope
ss
shrb
mov
in
push
mov
mov
out
add
cmc
push
xchg
repz
xchg
mov
add
sbb
and
add
add
adc
insb
push
in
in
adc
jg
push
add
inc
das
mov
imul
push
cmc
jb
dec
lret
add
or
add
push
stos
rol
insb
shr
pop
fs
pop
sbb
dec
cmp
push
stos
mov
add
aad
add
add
movsl
mov
fisttpll
sub
add
add
jle
shlb
sti
xchg
mov
jmp
adc
in
cmp
insb
dec
cmp
fwait
xor
add
mov
push
sahf
and
xchg
leave
fsubl
dec
clc
ss
in
lock
fs
cmp
pop
cltd
or
fadd
or
jle
les
out
mov
leave
rclb
hlt
cmp
fwait
mov
add
pop
cld
pop
sbb
pop
sbb
js
add
pop
loopne
in
pop
push
popl
dec
nop
mov
iret
std
sub
add
jg
jnp
clc
sbb
stos
ret
test
jge
xor
ljmp
popf
adc
push
inc
mov
iret
xor
dec
and
mov
add
mov
add
mov
bound
fisttpll
add
in
stos
add
je
iret
push
lret
jno
sbb
fsubl
aaa
test
add
iret
aas
mov
add
mov
pop
push
fxch
outsl
aad
dec
nop
sahf
pop
clc
cli
jne
pop
adc
sbb
repz
mov
add
push
push
add
adc
mov
sbb
imul
add
stc
gs
xchg
pusha
jg
add
sub
add
shl
xor
mov
add
push
or
add
push
fcomps
or
add
mov
sub
inc
mov
pushf
sbb
out
and
add
add
mov
add
stos
add
pop
jno
call
push
js
add
jl
inc
out
sti
push
push
add
add
in
xor
ficoml
inc
inc
xchg
out
insl
sub
mov
add
dec
jno
scas
add
push
add
or
fimuls
enter
rolb
test
shll
incl
mov
cli
mov
ret
popf
sub
add
pusha
roll
add
mov
sbb
testl
add
add
add
ret
fiaddl
xor
aad
jecxz
adc
add
pop
dec
aam
xor
add
pop
jmp
adc
imul
push
mov
push
cmp
add
push
pop
jo
ds
add
xchg
add
inc
out
xchg
rorl
repnz
xchg
cmpsb
add
popf
push
cmp
mov
mov
add
add
add
outsl
daa
adc
stos
add
test
aam
add
add
and
dec
xchg
add
add
stos
add
imul
mul
inc
sub
add
add
mov
aad
push
add
fnstcw
or
pop
leave
pop
mov
add
int
dec
lret
push
adc
gs
ljmp
orl
or
push
add
jp
mov
stos
add
aaa
sbb
loopne
adc
or
add
inc
out
fnstsw
pop
addb
jecxz
loopne
loopne
adc
jno
pop
dec
aam
add
in
xchg
rcll
push
inc
aaa
pop
fnsave
or
or
cmpsl
repnz
pop
xchg
add
add
fwait
rcll
xor
test
add
push
jp
lret
add
push
add
mov
add
xchg
jnp
aaa
and
add
repz
add
add
add
inc
push
xchg
jmp
add
cmp
aaa
mov
inc
insl
push
push
pop
jbe
scas
add
shlb
add
mov
add
add
out
jecxz
add
mov
jge
jp
jecxz
add
ss
inc
adc
add
les
xor
add
mov
and
add
mov
xchg
add
push
dec
inc
xor
jnp
imul
lahf
dec
xchg
leave
push
ret
pop
xor
xchg
pop
addl
fldl
or
add
aaa
clc
into
addb
out
jle
add
pop
loope
add
add
add
cmp
add
out
jae
xchg
lds
int
mov
or
add
jl
cltd
mov
xor
shl
add
leave
enter
push
cmpsb
add
add
jnp
mov
add
std
dec
jecxz
xor
jno
mov
sar
or
nop
je
int3
sbb
jnp
add
movsb
add
mov
fsubl
jecxz
out
push
add
xor
mov
add
add
jl
add
rorl
addr16
shll
push
mov
add
xchg
add
icebp
fdivrl
stos
cmpsl
dec
inc
mov
pusha
xchg
sub
add
sub
add
bound
out
pop
jnp
mov
add
scas
ret
or
add
int3
dec
add
add
cmpsb
add
mov
ljmp
iret
cmpsl
mov
add
add
popf
lods
mov
adc
adc
les
mov
mov
jnp
push
mov
mov
addb
push
mov
dec
cmp
je
lcall
push
mov
mov
stos
sti
add
add
js
imul
mov
jmp
outsb
leave
in
add
cmp
push
xor
jmp
add
pop
mov
ljmp
adc
mov
out
sub
add
pop
mov
add
add
and
xchg
mov
cmc
ja
int3
sbb
mov
add
das
add
add
mov
jl
std
sub
add
add
in
or
push
cmp
jbe
add
mov
fisubl
add
in
jl
cmpsb
add
push
fwait
pusha
loope
popa
nop
nop
aas
insl
clc
or
dec
inc
lcall
loop
mov
dec
jmp
mov
or
add
add
add
or
inc
or
imul
mov
add
addb
cmp
add
jno
loopne
add
cwtl
out
inc
mov
ja
shll
add
dec
pop
gs
mov
jo
add
xor
mul
ss
leave
or
inc
jmp
out
movsb
add
push
das
push
add
mov
in
mov
add
enter
jecxz
mov
add
add
and
repz
add
pop
add
in
out
shrb
add
inc
popf
sahf
mov
add
hlt
imull
sbb
add
push
jnp
add
aas
pop
mov
xchg
fsub
mulb
rcll
pop
out
add
movsl
xor
fnstcw
or
add
add
add
add
addb
lahf
sbb
push
addb
cmp
popl
inc
popf
outsb
call
arpl
push
mov
add
push
adc
add
pop
mov
add
imulb
in
add
or
add
cmpsb
add
xor
push
je
pushf
into
pop
ljmp
add
movsb
add
int
add
push
add
lahf
jo
jmp
cmp
outsl
sbb
pop
outsl
fsubl
add
mov
add
add
mov
push
add
dec
idiv
movsl
mov
enter
sbb
xlat
adc
add
push
add
iret
and
add
add
test
clc
loopne
dec
mov
add
ljmp
stos
inc
or
add
pop
push
or
insb
js
pop
xchg
dec
cwtl
std
lock
nop
addr16
adc
add
pop
mov
jmp
out
sbb
xor
add
fwait
rolb
add
out
push
sti
push
jecxz
enter
loopne
mov
dec
cld
dec
sub
dec
mov
mov
rcl
add
jecxz
pop
imull
add
test
add
lock
iret
inc
mov
sbb
pop
push
adc
mov
add
in
int
sub
pcmpeqb
fistps
mov
add
or
add
imul
mov
add
aaa
in
cwtl
icebp
lock
add
adc
aaa
cmp
rclb
stos
sub
fdivl
add
aaa
daa
enter
je
shlb
in
xchg
or
add
in
icebp
rorl
add
cltd
cld
imul
add
jecxz
cmp
add
cmpsl
sub
add
cmp
lahf
aam
xor
inc
cmp
mov
jg
movsl
and
add
in
and
pop
dec
pop
mov
pop
pop
aas
leave
hlt
sbb
sub
add
lret
iret
outsl
add
add
sub
add
add
inc
in
jo
faddl
add
adc
loope
mov
push
shrb
cli
inc
mov
add
sub
add
in
xchg
add
add
adc
daa
jmp
add
mov
push
sbb
add
rcll
push
fstps
shlb
push
pusha
shl
stc
aas
xor
dec
xor
pushf
sbb
addb
mov
add
in
rcrb
fistl
push
ficomps
and
add
and
add
clc
xchg
jl
mov
daa
xchg
add
test
add
sti
and
add
pop
mov
add
and
stc
cltd
loop
add
mov
add
mov
add
add
ljmp
data16
ds
inc
push
mov
add
ret
and
add
bound
loopne
add
lret
lods
add
mov
add
add
add
add
pop
and
add
push
mov
add
add
pop
je
add
je
push
mov
into
ficoml
add
int
dec
sti
adc
cmp
xchg
jmp
movsl
xor
adc
sbb
add
cli
jmp
addr16
xor
sbb
fdivl
add
sbb
sub
and
repz
add
add
sti
inc
roll
das
punpcklwd
nop
sub
add
out
data16
pop
faddp
fxch
xchg
pop
inc
xor
push
push
dec
ret
dec
ss
and
pop
ficompl
or
add
ror
add
xchg
repnz
push
adc
out
add
rcrb
add
mov
add
add
aaa
jae
jae
aad
lcall
or
add
ds
mov
and
pop
ret
sbb
add
sbb
inc
das
into
test
add
lret
rcl
inc
and
ja
mov
push
add
popf
sub
inc
push
cmp
outsl
or
add
sbb
mov
and
add
and
add
or
add
mov
add
iret
adc
jno
ljmp
arpl
jae
mov
and
add
popa
in
mov
mov
add
jbe
cmp
outsb
xchg
mov
mov
dec
insb
mov
add
add
shlb
scas
subl
rcll
pop
stc
lods
adc
xor
arpl
outsl
pop
fnstenv
add
test
mov
mov
cwtl
push
xchg
les
add
repz
push
mov
pusha
mov
add
dec
and
add
xchg
pop
stos
push
fidivl
inc
add
mov
push
in
jb
add
hlt
in
jnp
iret
mov
xor
add
stos
std
and
push
test
movsb
add
xchg
push
int3
jmp
testb
add
add
push
adc
add
pop
out
inc
add
add
movsb
add
daa
mov
cwtl
push
push
out
fimull
add
mov
fldenv
enter
nop
mov
mov
and
add
xchg
add
add
das
sti
repz
mov
imul
repnz
inc
in
mov
ds
mov
pop
or
fbstp
mov
loop
rcr
mov
test
add
mull
iret
mov
xchg
mov
shrb
add
dec
lret
mov
add
add
lcall
mov
std
imull
add
mov
add
dec
pop
xor
xchg
loope
push
mov
add
add
movb
add
testl
loop
insb
cmpsb
add
dec
lret
dec
mov
add
add
add
scas
cmpsb
add
sub
add
sarb
inc
aas
cmc
pop
lahf
jae
sub
sub
add
mov
add
add
mov
add
lret
scas
jmp
add
push
gs
addb
stos
mov
add
cmp
mov
add
pop
invd
add
test
add
pop
lahf
inc
stc
in
cmp
sub
add
ljmp
incb
add
add
add
and
scas
dec
sbb
in
leave
mov
add
ds
into
add
add
add
and
add
sbb
ja
mov
loopne
add
add
addr16
movsb
add
aad
dec
mov
mov
and
repnz
and
mov
add
pop
adc
fdivs
stc
mov
push
add
pop
sahf
nop
je
ret
xchg
mov
lahf
cltd
mov
pop
mov
test
cld
imul
add
mov
add
hlt
xor
bound
add
add
fdivs
push
loop
dec
mov
mov
adc
xchg
jg
add
icebp
insl
sub
sahf
jp
out
xchg
mov
dec
cmp
xchg
add
sbb
cmp
xchg
sbb
ficoms
xchg
sarl
mov
add
add
add
dec
ret
xchg
loope
xor
add
add
dec
mov
dec
cmp
fcoms
sub
add
lods
sub
add
pop
or
add
mov
add
xor
xor
xchg
and
add
subl
add
aaa
hlt
pusha
fldcw
add
add
mov
inc
in
push
or
add
fisttpl
shlb
mov
xchg
mov
mov
and
popf
pop
leave
xor
stos
add
shrl
pop
add
push
add
js
add
icebp
adc
sbb
add
push
das
daa
in
ja
sbb
jl
loope
jmp
fldt
add
push
add
adc
imul
lods
add
out
notl
das
pop
notl
cmp
push
inc
pop
mov
and
add
xchg
xor
pusha
xor
orl
pop
call
addb
sbb
loope
xchg
or
add
addr16
add
push
jnp
in
pop
stos
inc
mov
popa
fistpl
push
fbld
xchg
imulb
xor
pop
lahf
lret
subl
xchg
scas
lods
sbb
sti
inc
push
stos
push
cmp
and
add
jno
insl
test
mov
or
add
mov
stos
jbe
insl
leave
data16
out
in
jecxz
movsb
add
mov
cmpsb
add
jno
fmull
repz
add
xchg
clc
mov
xor
insl
mov
add
sub
xlat
xor
cmp
dec
mov
add
add
pop
push
pop
cmp
jp
add
add
add
mov
hlt
pushf
testb
cmpsb
add
mov
insb
mov
add
fcompl
xlat
cmp
add
sub
rcll
push
iret
push
xor
and
shrb
call
icebp
push
add
add
in
cmp
and
xor
aad
roll
hlt
adc
pop
mov
add
jge
add
pop
sbb
xchg
popa
lock
int3
and
add
sub
add
dec
fldt
add
cmp
add
add
shlb
push
aad
fcmovnbe
mov
and
cmp
xlat
addr16
cmp
lret
popa
das
imull
cmpl
add
xor
jp
test
add
addr16
push
add
pavgw
cmp
jmp
mov
scas
imull
ljmp
add
fdivs
xchg
fcoml
add
or
add
call
loope
outsl
jl
push
jo
add
cmpsb
add
jns
test
jae
daa
sub
enter
decb
xor
loop
add
add
inc
pop
test
add
lods
add
cmpsl
lods
xchg
add
push
dec
movsl
lsl
add
cmp
sti
inc
mov
repz
push
adc
add
jo
out
addb
ja
dec
test
mov
and
add
and
add
lock
movsb
add
ljmp
mov
add
push
into
inc
and
mov
orps
adc
jg
dec
test
mov
add
push
sbb
jns
dec
inc
mov
mov
stc
inc
cmp
orl
cmp
sub
adc
loope
add
jl
loopne
add
xlat
mov
xchg
neg
and
add
in
mov
gs
add
xchg
scas
pop
jp
and
add
fs
cmp
add
add
xor
add
mov
add
dec
jp
xchg
pop
push
mov
mov
imul
bnd
push
loopne
in
enter
fdivrs
imul
imul
jmp
jecxz
add
jbe
cmp
lahf
jns
in
mov
add
dec
outsl
negl
pop
mov
add
bound
call
repnz
adc
test
add
dec
jle
push
call
repz
mov
add
push
add
push
mov
mov
push
jae
jl
aaa
mov
add
or
add
mov
rcll
inc
lea
pushl
dec
jbe
sahf
push
or
add
sbb
and
add
jg
nop
jnp
add
xchg
push
jne
push
push
jmp
or
add
stos
add
xor
lret
ffreep
and
jbe
popf
ja
adc
push
imul
add
iret
sarl
test
add
mov
sub
add
jno
add
pop
mov
sub
add
cmpsb
add
mov
scas
add
clc
shl
pushf
inc
adc
fnstenv
insb
push
dec
xchg
add
push
inc
rolb
add
out
pop
adc
jae
aaa
fisubrs
mov
shll
dec
jno
loopne
mov
add
in
pop
or
add
sub
ret
add
cmp
std
imul
dec
mov
jno
xchg
aas
lahf
out
dec
out
mov
mov
add
adc
fnstcw
mov
pop
outsb
jbe
xchg
adc
or
or
int3
fwait
dec
popf
mov
add
jbe
sub
push
bound
jmp
cmp
mov
out
fsub
jg
lahf
out
and
add
imul
add
sbb
mov
test
lods
add
cmpsb
add
leave
sbb
jge
fcompl
fs
cld
xchg
and
add
repnz
and
add
or
add
inc
hlt
push
add
jl
jne
aas
push
add
jns
xchg
pop
dec
mov
mov
aam
mov
mov
faddp
scas
add
add
inc
mov
or
add
mov
addr16
clc
add
aam
addb
addl
sbb
mov
add
adc
add
cltd
jnp
add
outsb
aas
jle
add
jge
mov
aam
cld
inc
les
cmp
outsb
mov
in
mov
add
pushl
and
push
add
out
and
je
vmovaps
sbb
dec
mov
add
sbb
xchg
popf
test
add
mov
fstl
or
add
ja
jo
lret
insb
arpl
mov
inc
and
add
js
ds
mov
add
jne
add
push
or
add
dec
xchg
push
pop
mov
fcmovne
cmp
pop
cmpsl
rcll
add
add
scas
movsl
cmp
adc
jne
lret
movsb
add
push
push
xor
add
sub
add
jae
push
dec
sub
add
jnp
and
add
mov
add
add
fs
aad
mov
fisttpll
add
mov
jnp
jno
fsubr
adc
lcall
call
push
push
cld
xor
push
cwtl
test
add
inc
loopne
xor
add
lea
test
or
xor
or
test
add
add
insl
add
add
or
add
cmp
or
inc
dec
dec
lret
les
gs
push
inc
mov
cmp
lock
push
xor
pop
mov
addb
ret
pop
mov
push
add
xchg
int
cwtl
xor
add
push
push
hlt
fdivp
enter
mov
add
dec
dec
out
popf
push
pop
mov
dec
int
add
xor
jle
fdivr
sub
add
or
mov
data16
add
xor
push
cmpsb
add
xchg
fisttpl
rcr
sbb
enter
gs
ds
dec
mov
add
mov
push
cmpsl
clc
xchg
test
add
fdiv
stos
movsl
loop
rcrl
cwtl
paddsb
add
arpl
add
dec
xchg
add
add
mov
add
daa
or
xor
sub
jns
fisubl
ret
stos
xchg
push
add
push
stc
or
sbb
or
sbb
mov
sti
lea
mov
mov
pop
mov
push
popf
cmc
mov
add
push
cmp
je
xchg
lret
out
xor
xchg
clc
mov
add
ret
mov
mov
push
mov
sti
std
shll
ljmp
sbb
pushf
into
lds
add
mov
jmp
lahf
jg
add
add
jns
ficoml
loopne
je
push
push
push
sub
addb
scas
test
test
add
out
xchg
movsl
mov
setb
add
push
shl
outsb
cmp
movsw
fcoms
adc
pusha
and
add
in
or
add
lods
xor
push
xchg
loope
addb
or
add
in
jl
stos
push
dec
push
jl
in
dec
add
add
jmp
mov
adc
or
add
lahf
pop
mov
adc
popa
push
movsl
aaa
dec
inc
outsl
pop
pop
or
push
pop
in
test
arpl
cmp
dec
push
sub
add
fchs
add
add
addb
ret
cltd
test
xor
xchg
dec
cld
lret
enter
addl
gs
stos
add
pop
dec
aam
cmpsb
add
xchg
fldenv
xchg
or
add
lods
add
add
add
and
add
lods
add
mov
cld
sbb
loop
lret
jle
inc
xchg
push
add
and
add
mov
inc
ja
push
cltd
and
ja
movsb
add
mov
cmpl
add
mov
sti
pop
mov
cwtl
adc
push
dec
outsl
jno
and
jecxz
add
in
ss
jne
movsl
ss
cmp
sbb
mov
shrb
add
push
enter
popf
sete
lahf
ljmp
add
out
popa
xchg
outsb
jle
jno
movsb
add
stos
arpl
add
dec
mov
add
inc
xchg
into
dec
ss
xchg
add
outsl
cmp
jo
sub
add
scas
jle
xor
das
imul
fucomip
mov
inc
rolb
or
mov
jmp
test
add
jae
leave
sbb
sub
js
and
jo
cmp
loope
fisttpll
inc
xor
arpl
push
add
pop
mov
pop
test
add
bound
add
add
loopne
jae
add
out
flds
xchg
add
fs
faddp
ss
stos
add
add
scas
mov
add
leave
adc
xchg
cltd
pop
mov
jmp
int3
mov
js
add
test
add
add
out
fdivl
fdivr
sbb
push
cltd
rsm
add
lret
pop
push
ja
or
xchg
arpl
mov
addl
add
inc
mov
add
and
dec
inc
push
xchg
xor
int
insl
pop
shrb
scas
dec
mov
add
xor
xchg
add
ret
loopne
jmp
adc
lock
add
fdivs
sbb
add
jns
ss
aas
jb
sbb
shlb
lret
pop
xor
cmp
mov
in
daa
mov
add
test
add
fs
adc
sub
sub
add
or
add
lret
test
add
add
push
xchg
xor
gs
inc
js
or
add
add
into
sub
add
add
mov
mov
movsb
add
jbe
lret
pop
sub
add
cmp
mov
add
ljmp
ficompl
sahf
addb
lcall
enter
jge
xchg
add
dec
fistpll
cmp
mov
push
add
sub
add
jbe
sbb
in
std
ss
stos
add
sarl
add
in
clc
rol
cmpsb
add
mov
inc
cli
mov
inc
out
push
cmp
decl
lods
xchg
add
push
add
mov
xchg
sub
add
add
ds
loop
add
insl
add
mov
cmpsl
stos
add
ret
add
add
ljmp
add
add
push
add
int
repz
sub
add
jne
movsb
add
sar
and
add
lret
addb
fst
shll
fildl
add
in
jb
aas
je
arpl
and
outsb
out
aas
sbb
xor
cmp
movsb
add
in
add
add
mov
pop
sbb
mov
mov
add
ds
scas
add
push
sub
push
loop
imul
mov
fsubl
add
test
add
xor
roll
add
inc
mov
cmp
push
push
sarl
or
add
inc
mov
mov
push
dec
cltd
ja
or
add
mov
add
cltd
jmp
repz
mov
adc
loop
add
add
push
in
aas
jbe
aaa
das
ja
xlat
sub
add
test
pushl
xchg
add
add
cmp
xchg
mov
fwait
clc
mov
dec
int3
imul
add
add
mov
add
add
or
inc
inc
xor
dec
pusha
adc
add
push
stc
adc
sub
shll
add
lcall
xchg
cmp
add
fsubl
inc
inc
insb
addb
fcomp
fimull
cli
adc
test
add
inc
push
scas
sbb
mov
add
insl
add
xor
and
jge
enter
pop
loope
inc
sbb
outsl
cmp
jo
lcall
add
add
aam
dec
inc
in
rcr
and
ret
jb
sbb
jp
add
adc
addb
cmp
mov
and
dec
mov
mov
add
aas
dec
fiadds
xchg
add
enter
jae
aam
out
sarb
xor
add
mov
add
int3
out
fiadds
add
add
add
xchg
adc
add
fsubrs
add
jge
or
add
pop
push
sub
bound
add
ret
add
mov
mov
add
aaa
iret
aam
add
xchg
add
add
sbb
push
xor
or
adc
mov
lret
aaa
jecxz
inc
bnd
add
add
out
pusha
test
push
mov
sbbl
mov
add
sub
add
sbb
sbb
cmp
push
or
add
jns
xchg
cmp
imul
or
add
jle
jo
cmpsl
in
enter
jns
add
adc
lret
out
aad
dec
hlt
and
add
jns
nop
adc
mov
add
addb
dec
call
cmc
xlat
pop
mov
sub
cmp
xchg
loopne
mov
add
dec
xor
mov
pushf
xor
clc
add
lods
add
pop
lahf
cmc
xor
xchg
scas
loopne
adc
add
insb
shll
push
into
jne
xchg
or
add
dec
mov
test
add
add
or
cld
pushf
popf
sar
pop
cmp
lret
fsub
aaa
testb
add
add
jns
loop
js
xor
and
xor
inc
dec
leave
dec
inc
push
mov
adc
add
mov
pop
cmp
sbb
inc
add
std
loopne
cmp
add
add
loope
adc
xor
add
pop
xchg
sub
add
add
sbb
add
repnz
xorl
cmpsl
addb
adc
add
addb
xchg
add
arpl
jbe
mov
add
xchg
out
push
fwait
jmp
fisubs
add
mov
add
add
pop
xchg
ss
adc
imul
add
mov
repz
pushf
add
add
sub
xor
insl
push
popa
addr16
add
cmp
out
inc
sbb
mov
add
fnsave
cmp
add
lret
sbb
adc
cli
xor
test
add
popf
test
pop
mov
mov
add
mov
sbb
and
add
mov
add
mov
add
rcrl
call
dec
jb
cmc
mov
add
add
xchg
xchg
add
pusha
mov
dec
or
add
addr16
add
outsb
dec
jo
add
inc
jne
mov
dec
add
pop
ljmp
cmp
mov
hlt
cli
sarl
dec
test
mov
add
sbb
mov
push
mov
add
adc
mov
add
pop
sysenter
and
xor
cltd
fwait
loopne
cmc
cmp
pop
jno
add
cwtl
inc
loopne
add
dec
iret
dec
mov
fs
and
mov
add
test
add
xor
sub
pop
lock
or
add
inc
int
pushf
and
scas
std
sbb
add
and
ds
cmpsb
add
jae
lea
addb
adc
push
pop
js
jmp
mov
jno
dec
das
jae
push
subl
add
push
add
sbb
adc
add
outsl
in
mov
add
fucomip
shlb
roll
out
xchg
mov
fimull
adc
add
sbb
mov
pop
add
add
or
add
ds
add
mov
add
inc
push
in
into
ds
xlat
jecxz
test
lds
subl
mov
sbb
popf
in
dec
repz
add
push
cmp
ja
add
push
das
in
xlat
pop
test
dec
cmpsb
add
sbb
jl
pop
clc
cmp
xor
xor
rcll
xchg
lods
add
jnp
cld
sti
loope
jmp
pop
cmp
add
add
add
add
pslld
stos
add
sbb
cmc
lock
fsubp
pop
mov
cltd
cmp
cmp
lahf
test
cmp
push
add
add
inc
dec
shlb
pop
movsl
pop
mov
add
and
addr16
stc
jne
mov
int3
out
xor
mov
and
inc
and
js
out
sarb
dec
and
add
imul
movsb
add
jbe
push
fstpl
mov
add
or
add
test
not
cmp
jb
icebp
mov
add
jnp
lock
data16
enter
aam
cmp
das
xor
xlat
jbe
or
add
add
fsubl
add
lds
xorl
pushf
outsl
cmc
rcl
dec
or
loope
xlat
mov
xor
add
add
add
dec
sbb
addb
outsb
mov
sahf
in
sbb
js
stos
add
scas
mov
cmp
scas
add
add
jnp
adc
xchg
mov
ret
cld
jae
out
cmp
jl
sub
pop
shrl
sub
imul
add
cli
test
add
mov
mov
fstps
popa
push
in
in
cmpsl
mov
and
jo
xchg
xchg
jle
mov
mov
add
fst
into
fwait
leave
push
arpl
jecxz
in
xor
add
add
jl
sbb
pop
movsl
enter
add
sbb
mov
int
pop
inc
std
out
test
nop
inc
shl
jp
loope
inc
out
cmp
xchg
add
add
adc
cmp
inc
int3
dec
jb
pushf
outsb
and
in
jnp
cmpsb
add
push
sbb
and
add
or
addl
dec
fdiv
outsl
stos
add
aas
jb
xor
hlt
inc
or
add
add
xchg
out
lcall
mov
add
sbb
loop
iret
rol
ficomps
push
icebp
rolb
lret
aaa
loope
lods
inc
sbb
inc
mov
add
les
add
adc
pop
sub
add
inc
cli
pop
inc
flds
jo
sbb
test
add
push
out
cmp
ficoms
je
pop
mov
cmp
add
add
add
test
pop
pusha
adc
insl
dec
jmp
jae
mov
cmp
cmp
dec
mov
scas
dec
leave
fwait
pop
or
test
add
nop
cmp
cli
sub
dec
sub
add
jae
incb
insb
jmp
out
icebp
fsubl
and
adc
add
scas
add
test
add
sbb
add
mov
ret
add
and
add
add
pop
fwait
add
aam
add
adc
fwait
jo
add
xchg
inc
in
and
add
add
add
out
pop
push
scas
add
test
sbb
cmp
add
or
lret
movsb
add
and
add
push
les
add
add
add
add
mov
and
lret
outsb
jl
shrb
hlt
or
add
pop
mov
add
add
test
xor
repnz
add
sbb
jecxz
xlat
imul
inc
push
jbe
push
lods
add
or
add
add
add
les
or
add
lods
add
fsubl
and
add
add
in
add
ss
out
aad
add
dec
sub
add
pop
xchg
hlt
jb
jnp
pop
out
push
inc
sub
add
pop
mov
inc
dec
aam
stos
cli
sub
add
negb
sahf
testl
popa
out
lahf
hlt
and
add
jo
add
insb
xchg
mov
pushf
test
or
add
cmp
addb
hlt
sub
add
adc
movsl
jl
mov
add
cli
xor
clc
imul
add
xor
pop
pusha
adc
sub
add
repnz
hlt
adc
dec
sbb
pop
dec
jnp
mov
mov
dec
jp
cltd
xor
sahf
jp
outsl
or
add
add
clc
leave
dec
push
add
cmp
xor
xor
mov
arpl
in
mov
scas
add
icebp
push
add
cwtl
and
stos
add
lds
add
popa
and
add
enter
push
pop
rorl
add
in
xor
or
add
push
mov
jnp
sbb
mov
mov
enter
add
xor
sub
pop
xchg
stc
push
adc
push
and
jle
stos
add
pop
addl
lahf
ja
hlt
adc
pop
cmp
mov
add
das
adc
or
cwtl
stos
test
add
sbb
pop
aam
add
rorl
add
inc
scas
xor
xchg
shl
lea
sbb
add
pop
cmc
or
add
into
and
add
push
sbb
mov
sbb
add
fptan
xorl
aaa
jae
add
fldenv
out
adc
movsl
adc
mov
jb
push
cmp
add
addr16
addr16
mov
add
add
add
mov
add
sbb
pusha
cmp
adc
adc
xor
or
add
or
out
mov
xchg
adcl
sbb
sub
add
aam
lahf
aas
adc
add
add
icebp
std
mov
add
add
mov
xor
xchg
sbb
shll
add
add
dec
dec
mov
add
lods
add
clc
dec
pop
pop
jbe
jno
int
aas
adc
lahf
int3
pop
lds
dec
jecxz
aam
test
add
std
mov
sbb
sub
xor
xor
ret
into
sahf
adc
xchg
add
sub
add
add
add
mov
push
stos
adc
add
loopne,pt
leave
dec
jo
pop
mov
outsb
into
mov
add
and
add
stos
popa
jnp
mov
loope
mov
aad
movsl
andl
add
jo
int3
pop
jecxz
add
into
dec
pusha
fs
or
add
insb
push
cmp
popf
fsubl
fcompl
sub
pushf
stos
in
jb
xor
int
add
xchg
pop
fcomps
jo
dec
fdivr
aam
les
pop
aad
add
push
in
addb
or
add
sbb
add
icebp
jecxz
add
std
push
int3
nop
xchg
ja
dec
mulb
loop
add
test
add
data16
test
add
sub
add
add
or
mov
add
and
mov
ds
mov
sarb
test
add
jg
xor
push
jl
ljmp
mov
gs
mov
xor
push
test
test
add
cmp
add
add
push
pushf
ret
xor
movsb
add
push
jecxz
sbb
in
sbb
add
divl
mov
data16
adc
add
mov
add
das
and
add
mov
cld
mov
test
add
or
shl
in
jb
repz
add
inc
icebp
push
mov
fcomps
setle
cmpsl
test
or
lea
add
repz
scas
add
repz
add
add
add
and
jmp
sbb
nop
xchg
add
shll
loope
add
cmp
xchg
aaa
cld
mov
push
add
or
add
push
inc
sub
add
pushf
add
add
mov
add
cmp
add
mov
fldenv
add
mov
add
into
fldt
add
jnp
add
add
push
je
add
pushf
jle
push
add
sub
add
test
mov
adc
nop
popa
adc
subl
ljmp
sbb
add
iret
xlat
xlat
lret
shlb
jge
jmp
mov
add
repnz
shl
or
and
add
add
adc
dec
imul
mov
fnstenv
js
test
fidivrs
rol
sbb
xchg
pop
enter
sub
xor
pop
in
inc
mov
mov
call
xchg
add
add
sub
add
add
sub
out
icebp
sahf
pop
mov
out
fnstcw
jl
lods
cmp
cwtl
sub
add
add
loopne
jno
insl
ljmp
add
addr16
adc
xchg
cld
loop
adcl
les
or
add
mov
fwait
or
add
mov
mov
add
leave
pop
cmpsl
jle
fidivl
jnp
cmp
sbb
xchg
xor
pushf
jg
add
mov
add
popf
jle
loopne
jno
adc
pop
pop
popa
jne
jb
add
jecxz
add
loop
mov
add
fmul
ss
fldcw
dec
cmp
rcrl
jecxz
cmp
add
imul
add
add
push
in
jbe
mov
enter
mov
fmull
add
addb
out
sar
jge
dec
cmpsb
add
insb
nop
je
xor
call
add
clc
dec
movsb
add
adc
cmp
mov
cmp
add
dec
in
add
dec
xchg
add
pop
jl
int3
add
add
in
or
add
cmp
inc
cmpsb
add
pop
mov
add
or
add
mov
add
add
test
add
addr16
add
add
add
les
ret
mov
add
daa
inc
inc
shll
sub
lods
add
pop
pop
je
add
test
add
add
test
mov
add
iret
jp
dec
xchg
add
sahf
ljmp
adc
mov
aas
and
add
push
add
nop
and
add
pop
out
ds
sub
add
cmp
add
mov
cmpsb
add
add
pop
fldt
mov
dec
adc
add
pop
mov
dec
push
loop
push
mul
repz
jmp
add
xchg
add
add
or
outsl
push
pop
or
add
jl
mov
add
or
add
fmull
add
mov
scas
mov
ret
adc
push
lods
add
add
icebp
inc
jns
out
dec
sub
add
sbb
out
loope
sbb
bswap
push
inc
sahf
adc
xchg
add
fidivs
push
imul
jne
mov
add
addr16
inc
divl
outsb
iret
mov
in
xchg
lods
mov
jb
movsl
loope
std
mov
movsl
ror
addr16
stos
add
xchg
and
lods
add
xor
and
add
and
add
mov
push
outsb
cmpsl
pop
pop
cld
fisubrs
add
sbb
jmp
add
cli
rolb
cmp
push
xlat
mov
add
les
add
inc
push
add
loope
fimuls
push
jge
or
fs
aad
in
out
cli
push
xor
cmpsl
fwait
sbb
dec
aaa
cwtl
outsb
or
hlt
or
add
add
xor
mov
movsl
sbb
rorl
xchg
sbb
xor
sub
add
adc
mov
cmpsb
add
out
je
mov
dec
lock
pusha
xlat
fs
xchg
pop
push
and
mov
cmpsb
add
cmp
cmp
rol
fnstsw
cltd
cmp
fs
dec
or
add
mov
add
fbstp
xchg
sarb
xor
mov
dec
pop
popf
sbb
stc
jne
jp
pop
fsubrl
add
add
add
jbe
jmp
lcall
add
jmp
pop
jl
add
add
add
bound
add
xor
leave
push
cvtpi2ps
add
push
jns
sarb
mov
insb
push
cmp
lea
test
movsb
add
lods
ret
out
add
add
add
add
add
add
add
mov
add
and
or
and
adc
out
mov
add
xchg
dec
loope
pop
adc
pop
test
add
add
adc
mov
in
dec
jmp
mov
push
push
add
ret
mov
or
mov
clc
mov
add
mov
xchg
mov
xchg
sahf
xor
add
adc
and
add
add
mov
add
in
mov
dec
test
push
jecxz
test
add
sbb
cltd
iret
xchg
inc
rcr
add
shll
fnstsw
add
stos
add
pop
in
add
in
call
cmp
sti
mov
add
addb
aas
push
lds
add
mov
cmp
sub
add
pop
xor
add
lock
xor
mov
add
cli
xor
add
in
cld
mov
test
add
xchg
add
hlt
sbb
add
add
mov
add
push
pusha
ret
lret
cld
ret
iret
xor
adc
and
xchg
cwtl
addb
mov
jbe
jns
ss
loopne
mov
add
jns
push
iret
adc
ja
sbb
cmp
mov
fldcw
add
xor
jno
sub
add
bound
mov
icebp
xchg
mov
add
xchg
in
mov
fisttpll
add
pop
test
add
add
mov
add
xchg
lret
add
aaa
inc
jl
ficoms
fists
mov
add
cmp
movb
add
jae
jne
add
xor
dec
pushf
bound
nop
std
jge
add
xlat
xchg
add
movsb
add
lock
sub
xor
cmp
loopne
add
mov
sub
add
jg
addb
fcomps
add
fisttpl
add
mov
lret
xor
jo
jmp
push
jbe
add
call
xchg
enter
loopne
sub
add
add
inc
test
xchg
enter
and
add
divl
cmpsl
ds
scas
add
cli
fwait
pushf
cmp
add
std
std
jnp
cmpsl
lock
aam
add
inc
mov
push
jo
addb
jge
cmp
add
inc
and
add
add
int3
dec
mov
scas
mov
adc
jecxz
jns
add
cmpsb
add
int
sub
add
imulb
mov
add
xchg
cmp
pop
das
sbb
sbbl
imul
dec
and
push
xchg
addr16
cmp
divl
add
adc
add
add
push
or
add
test
add
push
cmp
xchg
sub
clc
pop
pop
push
or
add
ret
add
test
add
jo
mov
jbe
add
popf
xchg
pop
out
fnstsw
popa
xor
sbb
insl
jae
mov
add
ljmp
dec
sbb
inc
or
push
mov
add
jmp
cwtl
out
add
sub
and
cld
out
jecxz
out
push
mov
add
pop
jb
incb
add
outsb
push
add
rcr
loopne
lahf
fdivrl
movsb
add
fisubs
add
pop
cmc
sbb
imul
aad
cmpsb
add
clc
mov
add
add
icebp
adc
imul
insb
sbb
cltd
xor
sbb
push
std
bnd
xor
jno
addr16
push
jne
scas
add
push
aad
roll
sub
add
mov
outsb
pop
daa
subl
sti
ja
shlb
lcall
lea
jge
adc
xchg
arpl
neg
scas
add
add
push
push
xchg
add
addr16
dec
lock
push
cmp
dec
pushf
fistpll
add
pop
icebp
pop
dec
aam
rep
cmp
ror
xchg
jo
jb
add
add
jge
mov
add
jo
sub
hlt
mov
add
and
add
outsb
mov
mov
pop
dec
je
hlt
or
add
stc
movsl
mov
sahf
cli
into
cmp
lods
add
or
add
cmp
add
xchg
add
or
add
mov
mov
add
mov
add
add
add
sub
add
add
addb
fimuls
aam
test
add
mov
fisubrl
add
add
xor
xor
imulb
add
call
xchg
pop
add
jnp
pop
sub
push
lret
addr16
int3
push
add
test
add
xchg
stos
repz
jno
add
fidivs
inc
in
jno
mov
mov
mov
jbe
cmp
add
or
add
inc
mov
stc
jne
or
add
sbb
add
push
push
pop
shrl
sub
add
mov
nop
mov
fldenv
stc
mov
add
xor
add
jge
dec
push
mov
insb
adc
inc
adc
ret
inc
push
or
add
push
leave
push
mov
std
sub
outsl
jp
test
add
push
inc
pop
fisubl
inc
push
cmc
lret
adc
pop
sub
fisubl
fisttps
or
add
std
jle
lock
jmp
aas
mov
mov
mov
pop
sahf
sbb
mov
add
ds
lds
xlat
fsubr
scas
add
lret
cmp
adc
insl
mov
in
add
sbb
clc
and
add
push
popa
cmpsb
add
and
add
cmp
add
sti
outsb
mov
add
sub
add
clc
arpl
addb
jo
pop
out
pop
push
cmp
add
sbb
dec
mov
add
test
scas
shl
imul
mov
add
mov
int3
push
or
xchg
add
add
xor
loope
dec
nop
scas
add
inc
sbb
add
dec
jae
mov
or
cld
mov
mov
add
lret
je
sbb
into
dec
decb
add
sbb
roll
add
nop
jmp
cmp
sub
add
cltd
jle
into
dec
or
add
roll
mov
add
mov
add
jmp
mov
add
into
mov
cmp
mov
and
add
add
fdivl
lea
add
lock
add
ret
ds
mov
add
xchg
sbb
mov
lcall
or
add
pop
fs
lret
das
cltd
mov
add
add
mov
je
mov
addr16
iret
mov
test
mov
inc
sbb
push
add
fpatan
adc
jnp
daa
cmp
out
lahf
push
add
mov
jb
add
iret
aam
mov
add
mov
add
xor
pop
insb
jmp
loopne
mov
cmp
or
test
cmp
sbb
mov
push
add
mov
mov
mov
ss
add
add
sub
push
push
add
icebp
xor
push
int
lea
add
out
jo
push
hlt
sti
push
addb
outsb
dec
adc
mov
or
add
inc
push
add
or
test
add
shl
inc
mov
out
mov
out
repz
add
lret
xor
adc
lcall
imul
xchg
push
add
jbe
xor
add
mov
fdiv
jecxz
cmp
insb
movsl
and
add
add
or
add
sbb
inc
sub
add
mov
add
inc
das
pop
jp
add
into
out
mov
fs
bound
push
sbb
push
movsl
testl
add
test
add
add
dec
mov
add
mov
inc
idivl
mov
add
in
ljmp
and
add
lahf
jae
add
mov
add
pop
repnz
add
xchg
push
testb
add
xacquire
fimull
dec
pusha
cmp
cmovbe
out
or
add
and
add
push
jo
addr16
mov
sub
add
sti
add
pop
xchg
ja
lret
repnz
sbb
add
test
add
sahf
or
push
push
add
inc
pop
ja
mov
inc
jnp
roll
add
add
and
add
outsb
lea
add
and
add
test
hlt
sahf
mov
dec
jb
xchg
inc
dec
movsb
add
dec
aaa
fstl
push
lods
add
xchg
xchg
mov
insb
lret
mov
pop
test
add
pop
pop
clc
addb
add
mov
lret
mov
test
cmpps
mov
add
inc
addb
in
lods
add
add
add
mov
dec
insl
sbb
jg
xor
sub
jo
pusha
loopne
adc
outsb
bound
jo
in
std
pop
addr16
cmc
push
add
and
add
cltd
dec
add
fimull
add
dec
inc
mov
mov
dec
adc
cli
std
cld
popa
call
push
add
out
xlat
mov
add
dec
ljmp
cmp
addb
lcall
add
icebp
aam
scas
add
sub
add
push
ljmp
pusha
jb
push
mov
jns
and
add
add
add
add
insl
pop
roll
add
inc
pop
mov
or
arpl
pop
sarl
push
enter
fdivs
add
push
xor
add
push
and
jae
add
mov
mov
add
aam
jbe
cmpsl
adc
call
pushf
xchg
mov
add
fs
xor
mov
push
cmp
xlat
ret
or
add
adc
inc
inc
testb
add
dec
jp
xchg
push
cmpsl
loop
dec
pop
arpl
dec
add
add
inc
pop
or
add
add
fdivs
add
gs
cmp
imull
sbb
clc
lds
add
mov
cmp
push
jl
mov
add
loopne
sbb
xor
out
insl
add
rcll
xor
loope
addr16
xor
fdivl
cwtl
dec
fabs
mov
add
add
dec
pusha
jmp
ja
cmc
cwtl
scas
add
mov
add
loope
aad
lods
cmp
add
repnz
add
or
loop
xchg
xlat
sub
cmp
add
test
and
adc
or
jb
gs
out
gs
add
sbb
dec
jnp
add
inc
cli
int
sbb
add
inc
stos
jno
inc
sub
add
shl
xor
add
scas
sbb
add
outsl
jnp
add
dec
dec
lods
add
mov
loopne
and
pop
lret
push
dec
addb
adc
or
add
cmp
mov
push
popf
add
add
or
add
pop
in
pushf
push
add
or
dec
adc
xchg
add
add
add
icebp
push
cld
push
jnp
push
inc
sti
ret
gs
push
xchg
mov
fldt
add
sbb
add
sub
add
movb
add
mov
repz
push
shrb
add
add
sbb
xchg
xor
push
rcrb
jg
cld
jp
xor
jne
fsts
push
add
ret
jbe
insb
fbld
lock
dec
pop
fdivl
jmp
outsb
xchg
jp
jp
outsb
push
mov
add
add
add
ret
out
add
jb
stc
push
insb
rcll
ljmp
add
mov
add
push
jnp
rcrb
lea
add
jl
pop
xchg
rcrb
testb
in
dec
dec
push
push
sub
add
add
outsl
mov
aaa
lea
rcrb
lods
add
add
and
add
jecxz
addb
mov
add
jp
mov
add
xor
rorb
add
mov
add
stos
add
jae
add
out
inc
dec
cmp
adc
add
xor
push
add
scas
xchg
movsb
add
xchg
add
inc
inc
and
add
add
addb
cwtl
cmc
mov
cmp
add
idivl
cwtl
push
add
mov
add
insl
sub
add
sub
add
add
int3
and
or
call
jae
ljmp
lds
add
fcompl
pop
rcll
jne
add
dec
inc
nop
and
add
insl
xchg
mov
testl
addb
mov
pop
dec
lods
add
aad
mov
add
mov
les
fstpt
add
sti
dec
xor
rcll
and
mov
add
add
shl
or
mov
idivb
add
mul
cmp
stos
add
mov
add
ja
addb
jbe
mov
dec
jg
in
add
push
addb
pushf
arpl
cmp
inc
mov
inc
push
xchg
xor
icebp
inc
lods
add
add
add
addr16
popf
add
dec
add
add
xchg
ss
ss
pushf
dec
out
sub
add
jae
icebp
jns
adc
ret
lock
add
or
add
idivb
add
add
aad
dec
push
add
mov
mov
aas
outsl
leave
out
jb
jnp
mov
add
xchg
sar
xor
add
inc
mov
inc
daa
push
sbb
add
mov
pop
out
push
xlat
xchg
test
add
hlt
and
add
movsl
push
add
pop
pusha
iret
enter
outsl
mov
dec
les
clc
repz
dec
mov
xchg
stos
sbb
jnp
push
clc
xchg
jl
add
ret
lcall
add
aaa
addb
int
push
fsubrs
daa
mov
les
mov
add
and
add
push
out
pop
lcall
sub
add
sbb
jmp
mov
lock
and
inc
add
add
push
sub
xor
add
mov
into
in
or
add
ret
mov
dec
xor
and
add
enter
bound
ret
mov
cltd
imul
xchg
arpl
jbe
test
add
ret
add
lods
add
push
add
fadd
jnp
sbb
sub
add
inc
sbb
fdivrp
push
mov
add
lock
js
add
or
mov
filds
adc
add
sbb
movsb
add
std
fxch
sbb
pop
inc
inc
cmpsl
mov
sbb
adc
add
leave
jns
fnstenv
add
mov
add
adc
push
sahf
sub
add
add
dec
out
pop
cmp
popw
loopne
add
cmpsb
add
pop
pushfw
jo
jle
fbstp
push
sub
lods
cmc
mov
add
add
add
jns
imul
dec
adc
or
add
mov
jge
jae
in
add
add
add
dec
pop
fdivrl
cmpsb
add
das
sub
mov
in
sbb
mov
add
pop
xchg
imul
add
loope
enter
sub
sub
xchg
cmpsb
add
enter
or
sbb
jl
test
js
add
push
mov
das
mov
scas
add
sub
add
add
xor
js
aam
add
dec
pusha
and
add
xlat
pop
and
add
inc
out
mov
scas
and
popf
xor
mov
add
push
les
lahf
mov
mov
jp
add
push
mov
add
push
jo
mov
cmc
std
in
xor
mov
add
lds
xlat
xor
aaa
popf
cmp
and
add
inc
lods
in
cmp
jge
xor
push
sbb
add
mov
xor
sbbl
adc
aaa
cmp
mov
add
add
mov
fcomip
imul
ljmp
add
inc
sbb
pusha
cltd
loopne
mov
jecxz
popa
pop
add
jp
fwait
pop
xor
add
mov
mov
add
daa
bsr
dec
fldcw
jns
fwait
std
xchg
ret
add
push
add
add
add
clc
xor
mov
add
add
sub
aas
xor
mov
push
jb
repnz
mov
add
dec
jmp
mov
dec
mov
add
add
inc
inc
js
pop
dec
xor
push
jecxz
dec
fwait
xchg
add
test
xor
int
add
loope
pushf
dec
leave
lcall
xchg
mov
add
out
lods
addb
ret
lock
push
stos
subl
xchg
divb
jns
out
xchg
xor
test
in
int3
mov
add
jge
add
lock
les
loope
add
jg
ficompl
add
outsl
shll
loop
add
or
add
cli
adc
adc
xor
or
add
mov
stc
inc
dec
fadd
movsl
dec
jns
sbb
add
ss
pop
cmp
and
add
jbe
dec
les
add
sbb
add
jnp
out
dec
dec
cmpsl
inc
aam
xchg
jg
inc
jae
fldcw
insb
pushf
pop
add
add
fucomi
pop
sbb
fsubrs
pop
scas
fdivr
ds
sub
subl
push
push
add
addb
mov
pop
outsl
push
xchg
add
sbbl
cmp
je
mov
pop
push
shrb
xchg
data16
ret
addr16
std
shrb
and
fmuls
add
gs
sub
add
sub
jmp
clc
iret
gs
sub
add
fs
dec
xchg
shrb
into
xchg
out
mov
add
push
cld
scas
xor
cmp
cmp
das
rcl
add
dec
ds
clc
int
cmc
call
add
add
dec
popf
iret
jnp
jmp
dec
sbb
adc
push
add
push
addb
imul
addb
and
add
cld
inc
jg
mov
mov
add
jbe
or
cwtl
pop
sub
xor
loope
fiadds
add
inc
inc
pop
xchg
sbb
stos
add
push
adc
cwtl
addr16
add
add
sub
add
stos
add
add
push
mov
sub
ja
hlt
mov
insb
loope
and
add
sub
add
rcrb
cld
popf
dec
sub
add
negl
loopne
dec
pop
mov
ffreep
mov
icebp
adc
cmp
add
mov
call
add
mov
inc
push
stos
fcmovnbe
jp
push
pop
mov
andl
sbb
aam
insb
mov
add
mov
jl
mov
dec
leave
sahf
in
loop
dec
mov
add
xor
push
cli
sub
add
outsl
popf
repnz
pusha
mov
add
add
stc
mov
xchg
sub
insb
pop
in
dec
adc
clc
push
sbb
mov
add
push
dec
loopne
and
popf
lock
mov
sub
iret
dec
aad
add
pop
enter
jae
mov
adc
les
scas
fisubs
add
ret
add
add
xor
mov
jbe
pop
int3
loopne
scas
jecxz
pop
addr16
sarb
push
pop
cwtl
outsl
ja
fidivrl
rcr
iret
fadd
jbe
mov
aam
add
jae
dec
adc
jmp
add
mov
add
cmpsb
add
adc
xchg
cmpsl
mov
mov
ss
sub
sub
add
lret
daa
movsl
mov
negl
fnstsw
xchg
inc
mulb
in
adc
mov
dec
mov
dec
loopne
dec
sbb
sbb
add
and
add
pop
lcall
pop
sbb
push
pop
pop
lods
cwtl
push
aad
out
jmp
mov
movl
jle
add
push
mov
sbb
add
xchg
xor
push
add
cmpsb
add
sahf
jae
das
add
add
inc
push
sub
jns
mov
add
add
inc
pop
jne
mov
xor
pop
outsb
sub
add
stos
dec
cld
push
test
add
cmp
aas
loop
add
ljmp
int
das
push
xor
add
push
sbb
out
pop
leave
idivb
fiaddl
fsubs
add
jns
xchg
das
mov
add
ret
add
push
mov
jle
in
addb
bound
push
or
sbb
aaa
in
int
leave
sbb
pop
lock
cmpl
or
sub
add
add
add
mov
add
in
inc
sub
lock
add
mov
add
lods
testb
pop
bound
cmp
mov
add
fs
jmp
jl
xor
add
ss
decl
sbb
jbe
xchg
xchg
add
lds
cmp
xchg
inc
mov
jo
fidivs
add
xchg
xor
cmovge
and
add
add
push
out
add
sahf
nop
add
add
add
xchg
inc
js
push
mov
add
add
add
push
pop
jns
xor
and
add
push
add
std
fstl
add
jl
mov
icebp
jae
and
mov
dec
jnp
pop
lods
add
rol
jmp
sub
add
cmp
dec
fstl
add
or
icebp
xchg
cmpsl
iret
push
mov
and
add
jmp
add
or
xchg
add
add
ss
jno
lods
add
cmp
cmpsl
cwtl
mov
add
fbstp
scas
add
xlat
addb
mov
add
out
mov
add
je
lods
add
scas
add
push
mov
stos
popa
inc
jl
add
mov
int3
repz
rol
test
add
sysenter
pop
inc
pop
push
mov
ret
cmpsl
ret
and
jae
cltd
pusha
push
pop
out
shr
xchg
add
push
in
xchg
add
les
ljmp
dec
dec
repnz
mov
push
mov
add
lret
xchg
aam
add
pop
in
scas
add
sbb
jne
mov
jmp
add
xor
jecxz
jbe
sti
shrb
sub
add
add
add
add
aas
stc
inc
inc
insl
fidivs
pop
xchg
loope
push
xor
add
and
add
dec
sbb
mov
add
fidivl
add
adc
dec
sbb
idivl
stc
jno
fldenv
sbb
push
add
mov
push
adc
imul
pop
gs
loop
arpl
mov
or
add
sub
add
or
add
pushf
dec
sub
add
add
jb
inc
or
sub
inc
inc
daa
pop
push
or
add
bound
adc
push
or
add
dec
mov
add
add
add
add
add
mov
add
addb
and
add
add
fldenv
push
rcrb
add
fdivl
sbb
scas
mov
push
js
add
mov
jns
addr16
add
cmp
add
les
add
dec
xchg
jp
mov
cmp
add
cwtl
push
sti
shl
add
int3
popf
hlt
les
xchg
js
add
arpl
addb
jns
add
lods
shrl
ret
in
mov
negb
inc
dec
addb
adc
mov
ficoms
add
or
add
add
push
add
std
in
dec
cmp
out
add
cmp
cld
dec
fstl
in
add
jnp
add
add
add
add
mov
in
xchg
add
xchg
and
add
and
add
push
add
add
add
add
xor
sbb
das
stc
repnz
push
ret
sub
loop
pop
xchg
mov
push
add
addb
xchg
insl
outsb
stc
xchg
sub
add
fld
pop
rcl
popf
inc
in
lcall
sbb
add
add
mov
lahf
add
jg
push
adc
in
push
test
cwtl
xchg
add
add
pushf
popf
sar
ficoml
cli
mov
cmc
and
add
dec
xchg
sbb
add
xchg
add
imul
and
add
mov
add
xchg
fsubs
add
iret
mov
stos
add
dec
xchg
mov
gs
push
jg
or
add
add
fcmovnbe
push
in
std
mov
add
testl
fs
mov
dec
addb
nop
fwait
test
add
push
inc
lret
jmp
test
cmp
push
inc
pop
test
add
xor
xchg
dec
mov
add
pusha
int
xchg
iret
jl
push
sahf
sbb
outsl
test
add
cli
hlt
fsubl
add
call
add
fwait
in
fadds
nop
jae
pop
and
add
lret
jnp
fidivl
dec
inc
and
add
xchg
or
addr16
popf
xchg
add
dec
test
add
cli
dec
test
push
add
jge
aam
cmp
adc
add
dec
xlat
mov
jnp
add
lret
add
push
in
add
add
mov
add
inc
xor
mov
add
out
ret
or
cli
imul
rcr
add
outsl
mov
dec
jg
xchg
xchg
cmp
fdiv
fisubs
in
mov
hlt
mov
mov
add
jp
cmp
push
cmc
out
call
jl
push
add
fcompl
ret
add
jns
add
add
cmp
data16
outsb
leave
stc
das
test
add
push
addb
push
lcall
test
xor
mov
in
pop
pop
pop
add
add
and
add
pop
cmp
cmc
xor
das
rorl
insb
cmp
cmp
push
add
adc
js
int3
sbb
ss
or
inc
cmp
scas
add
push
dec
leave
inc
push
jge
jg
inc
mov
pop
adc
jns
or
add
daa
lds
xor
movsl
inc
cmpsl
movsl
cmpsb
add
nop
loopne
push
fsubl
add
xchg
mov
add
out
mov
addb
shll
sub
ja
add
jb
mov
add
mov
dec
repz
cmp
add
popf
jecxz
mov
aas
inc
out
fbstp
add
cmp
leave
adc
add
push
mov
add
or
add
test
add
jne
xor
add
clc
jae
mov
loopne
jle
add
mov
sbb
add
ret
fcomp
popa
bound
icebp
push
fbld
add
jo
cli
cmp
in
mov
cmp
dec
pusha
jo
xor
filds
add
fwait
jae
push
ss
repnz
cmpsl
ja
add
sub
add
sarl
push
adc
pop
mov
aam
sub
lahf
out
das
push
shl
adc
rol
insb
insl
mov
adc
cli
dec
pushf
inc
into
aam
mov
adc
sarl
roll
out
mov
add
mov
mov
and
add
push
or
add
jl
xchg
jne
add
addr16
add
stos
daa
stc
rolb
add
add
into
mov
ja
add
xor
add
lahf
cmp
pushf
jnp
aad
in
repnz
or
add
pop
xchg
in
gs
add
push
add
jo
add
jne
and
add
out
mov
add
popa
nop
shr
xchg
mov
add
or
mov
and
add
in
push
add
movsb
add
test
add
jecxz
add
push
mov
add
or
cmp
nop
cmp
pushf
std
mov
mov
add
add
data16
data16
stos
jmp
push
popl
mov
add
sti
jns
push
pop
rcl
aaa
js
out
cmp
add
iret
fcmove
stos
add
shlb
or
add
cmp
addl
fidivrl
add
cli
aad
add
int
add
and
inc
push
pop
lods
add
cmp
mov
add
mov
out
js
dec
cmpsb
add
lcall
cmp
outsl
filds
dec
notb
jmp
and
add
add
add
mov
add
xor
loope
inc
outsb
push
repz
add
lcall
add
mov
out
sub
add
stos
add
sbb
cmc
inc
adc
dec
add
add
jle
pop
xchg
fs
mov
popa
pop
test
sbb
dec
dec
cmp
outsb
add
add
cmc
cltd
in
shrb
add
ds
rcr
jno
nopl
das
add
add
or
add
cli
aas
inc
cmp
pop
aad
mov
cwtl
push
pop
push
add
addb
mov
jne
dec
lods
xchg
or
or
add
mov
daa
cltd
push
mov
pop
fiaddl
jne
mov
fcmovbe
add
add
add
sti
or
add
inc
lods
jb
add
or
add
adc
repz
idivb
out
shlb
add
add
roll
mov
sub
add
push
mov
add
cmp
dec
mov
and
add
or
cmp
negl
loopne
out
daa
flds
adc
scas
add
sbb
xchg
xchg
pop
lods
add
test
cmp
add
mov
test
les
or
add
add
add
mov
add
insl
mov
pusha
jmp
in
pop
loopne
add
add
addb
mov
gs
sbb
outsb
mov
push
gs
or
or
cmpsl
mov
std
shrb
sti
mov
out
iret
jp
std
inc
push
pop
push
pop
xor
add
fs
out
cmpsb
add
mov
add
pop
addr16
lret
outsl
cmp
xchg
iret
add
mov
imul
add
jbe
sbb
loopne
sar
mov
fisubrl
mov
repz
push
jbe
loop
add
sbb
inc
mov
leave
jmp
add
mov
add
ret
mov
imul
aas
adc
add
add
imul
xor
scas
add
int
popa
xchg
cmc
repnz
js
sbb
in
adc
dec
data16
jmp
cmpsl
fcomps
jg
in
xchg
inc
add
mov
fstpl
and
add
int3
stc
jmp
add
sbb
adc
pop
shrb
sbb
mov
add
add
sub
jo
mov
lret
ret
push
and
xor
adc
xchg
mov
hlt
movsb
add
addr16
fdivrp
loop
push
add
jmp
repz
nop
test
add
mov
aad
cltd
xchg
add
add
add
xchg
out
mov
add
sub
add
jbe
jbe
lock
push
add
fsubs
add
add
add
loop
cmpsl
ret
imul
add
ss
adc
rcr
sbb
sbb
lock
add
fists
jecxz
fdiv
sub
add
add
addl
imul
push
mov
add
popa
addb
lods
add
mov
repz
add
pop
add
add
inc
pop
fcoms
in
add
xchg
add
mov
fidivrs
punpcklwd
rorl
add
inc
push
add
adc
inc
push
push
sbb
and
adc
add
dec
jmp
fs
rorl
add
mov
ljmp
jge
sbb
aaa
stos
add
or
add
mov
iret
inc
pop
in
add
movsb
add
or
add
out
insb
inc
mov
add
add
ret
pop
leave
push
das
push
mov
inc
stos
add
adc
jnp
push
stos
add
xchg
push
inc
lods
fiaddl
adc
lock
xchg
or
inc
xor
lret
add
mov
jbe
jg
adc
out
movsl
daa
sarl
test
add
fnstcw
sbb
loope
push
pop
sub
add
xchg
bnd
jl
add
jno
fidivl
adc
mov
in
sub
add
lahf
mov
add
xchg
mov
sbb
popf
sahf
dec
fidivrs
xchg
cltd
lods
jns
aas
frstor
rolb
mov
mov
add
ret
add
loope
xchg
in
fiadds
mov
add
sbb
add
cmc
lahf
add
sahf
push
jne
jmp
cltd
mov
mov
add
ret
scas
lahf
xor
testb
loope
out
add
add
stos
add
add
add
jecxz
sbb
xor
push
das
inc
inc
outsb
push
in
xchg
ficoms
and
add
insl
out
jnp
popa
cmpsl
adc
test
add
les
mov
add
pushf
or
add
mov
outsb
lock
lea
lods
mov
sbb
loope
fucom
xchg
pop
pop
mov
jns
add
xchg
test
stc
mov
add
lock
iret
push
out
faddl
xchg
xchg
add
add
jnp
aam
sub
add
cld
pop
xor
andps
data16
sti
fisttpll
push
add
cld
xor
nop
sub
cwtl
sbb
fisttps
mov
add
sarl
pop
movsl
in
in
scas
add
ss
xor
rcr
insl
out
imul
mov
jnp
add
test
push
daa
loopne
push
rorb
add
xor
or
add
repz
je
rcr
and
add
iret
add
hlt
add
add
pop
add
add
stc
push
add
fstl
cmpsb
add
add
add
cwtl
mov
enter
fnstcw
insl
movsb
add
sahf
into
inc
adc
sbb
xor
jecxz
sahf
cli
add
sub
add
pop
cmp
movd
stc
int3
mov
add
pop
jno
sub
mov
jns
push
out
sbb
out
add
movsb
add
xchg
fcoml
add
add
xchg
addb
xor
out
jle
cmp
loop
aam
sub
add
jae
add
jge
insl
sti
scas
scas
add
jno
cmc
test
mov
ja
push
sub
add
add
out
addps
pop
xchg
mov
pop
leave
sub
add
mov
mov
into
movsl
adc
add
mov
movsl
add
and
add
push
add
add
js
dec
imul
pop
pop
je
icebp
lret
shl
nop
adc
push
xor
add
push
sahf
pop
jne
add
mov
loopne
rorl
add
add
add
mov
adc
add
movsb
add
inc
dec
outsl
push
repnz
add
and
or
les
inc
ret
mov
add
insb
roll
mov
jbe
into
cmp
fldcw
add
popf
fcmovnb
outsl
xchg
insl
xor
addb
jnp
pop
jl
add
adc
pop
leave
push
clc
in
cmpsb
add
push
and
push
in
mov
add
mov
sub
inc
ja
mov
add
imul
clc
pop
daa
xchg
in
addb
push
fbstp
mov
add
insl
pop
in
cltd
push
pusha
ja
or
add
add
push
std
addb
out
push
mov
daa
pop
adc
add
add
mov
adc
shlb
push
add
rorl
add
add
cmp
mov
add
add
mov
add
rcrl
fadd
lds
adc
add
popf
pop
jle
call
cld
enter
mov
jecxz
xor
mov
or
push
das
mov
add
jo
stos
add
ret
lret
push
add
in
xor
stc
scas
add
sti
rorb
add
jb
out
mov
adc
add
popf
xchg
xor
sub
add
push
cmp
push
push
xlat
sub
jb
mov
dec
loop
cmpsl
call
jns
faddl
mov
jmp
loop
insl
dec
cmpsb
add
mov
xor
or
add
fcmovb
mov
add
iret
je
sar
and
add
add
mov
add
add
add
pop
push
out
cltd
push
sarb
cmp
repnz
sbb
add
loopne
insb
dec
test
add
add
jp
fs
push
mulps
jmp
xchg
push
aam
jnp
call
mov
dec
add
add
mov
pop
mov
push
pop
adc
lods
add
pushf
mov
out
sti
push
cmp
xchg
jns
add
mov
jle
add
imul
add
das
pop
xlat
or
add
sbb
add
std
mov
dec
ds
stos
pop
or
add
dec
cmp
imul
pop
mov
dec
and
add
dec
inc
pop
push
add
cmp
adc
aas
inc
iret
aam
jge
add
fidivl
mull
xchg
jno
add
or
add
in
add
scas
fcmovnb
add
add
iret
jge
xchg
ljmp
pop
sahf
leave
outsb
push
mov
xor
add
popa
add
adc
bound
pop
insb
jge
nop
push
mov
sbb
pop
dec
push
addr16
xor
push
gs
test
add
dec
shlb
xchg
mov
inc
jnp
popa
flds
call
pop
je
jmp
mov
jle
sbb
sbb
jne
imul
sub
std
bound
out
test
add
pusha
xor
push
and
cmpsb
add
fisttpll
unpckhps
push
aas
and
add
imul
test
xchg
sahf
or
add
fscale
or
fidivrs
icebp
dec
repnz
ds
cmp
outsl
and
xor
addb
in
mov
adc
sahf
inc
xor
mov
out
adc
sbb
les
addb
or
add
xchg
arpl
test
add
push
inc
jbe
mov
push
stos
add
imul
movsb
add
jno
inc
loope
and
mov
mov
out
test
or
shlb
pop
popa
pop
fucomi
dec
push
bound
lock
mov
cmp
push
sub
add
sub
add
clc
push
adc
dec
lret
inc
push
add
jo
or
jbe
test
add
jnp
lcall
add
clc
subl
ljmp
add
mov
add
lret
adc
add
add
add
add
xorl
outsb
mov
add
out
mov
push
int3
ja
loopne
fisubs
ljmp
xor
and
mov
push
jmp
add
push
mov
add
add
inc
jae
fscale
xchg
mov
fisttpl
into
pop
sarl
or
loope
push
filds
call
add
sbb
mov
add
mov
jle
dec
xchg
lret
add
les
jbe
adc
xchg
add
jp,pt
fucomip
dec
iret
inc
pop
or
enter
or
add
add
icebp
mov
add
cwtl
adcl
add
iret
and
add
add
jl
push
add
jno
bound
add
pop
push
xchg
movsl
iret
sbb
loop
add
addr16
push
add
stos
add
push
pop
xor
ret
jmp
hlt
data16
add
pushf
xchg
mov
add
mov
jp
add
push
dec
pop
stos
add
cmp
mov
clc
clc
or
push
mov
lock
lock
dec
pop
push
and
add
jl
add
xchg
jge
movsl
pop
or
leave
ss
arpl
pop
mov
xchg
add
lcall
aaa
xchg
out
lcall
inc
ficoml
gs
add
jl
jbe
add
add
sub
push
xor
add
push
add
les
inc
ss
movsb
add
add
add
pusha
sbb
out
pop
push
mov
add
xchg
dec
sti
sahf
pop
lret
inc
sub
pusha
clc
out
mov
movsl
cmp
out
test
add
pop
std
adc
push
cmpsl
xor
fsubrl
pop
cltd
imul
add
test
cmp
add
in
dec
push
cmovb
stos
add
scas
cmp
jo
popa
shlb
fcmovb
sub
add
lock
fcmovbe
data16
mov
lret
lea
subl
or
add
or
add
add
pop
dec
push
push
pop
adc
add
add
mov
add
jb
mov
ficoms
add
dec
pop
in
repz
stos
add
and
nop
mov
and
add
imul
add
add
add
pushf
jo
add
inc
and
and
add
in
je
cld
addr16
test
cmp
insb
push
fdivl
xor
inc
adc
mov
lock
add
add
or
jg
roll
add
call
lahf
shrl
add
mov
cmp
add
adc
in
and
push
add
add
jo
sbb
xor
sbb
mov
add
add
and
add
mov
and
add
mov
popa
ss
lods
add
xchg
or
pop
and
add
js
add
insb
imul
xchg
jge
lret
stos
rcrl
inc
mov
add
and
xor
add
mov
aaa
inc
test
add
cmp
cmp
push
cmp
lret
pop
or
pushf
xchg
lcall
mov
aad
mov
add
enter
cmp
push
mull
sbb
cli
cmp
std
xchg
dec
lret
xor
cli
and
add
add
dec
call
add
loopne
pop
jae
sbb
mov
pop
in
iret
push
push
fstps
jge
popf
add
lret
sub
add
aaa
int
xchg
add
push
hlt
inc
loop
add
inc
fisubl
add
aas
rorl
add
or
push
add
hlt
dec
xor
int3
inc
jns
mov
add
ljmpw
je
xor
add
adc
push
add
cltd
cmovo
shrb
mov
or
xlat
fwait
push
sub
sbb
xchg
add
lods
push
dec
sub
add
fs
dec
outsb
ss
add
xor
add
jge
and
sub
add
jecxz
push
mov
add
mov
add
popa
xor
mov
in
add
push
adc
cli
push
mov
push
mov
lods
add
sub
add
jno
outsl
and
add
and
out
sbb
hlt
or
add
add
ljmp
enter
daa
inc
test
add
add
add
rorb
pop
out
jmp
in
push
sub
or
add
cmpsl
mov
sub
dec
and
add
je
ds
xchg
popf
daa
xor
stos
add
push
add
pop
lea
xchg
shrl
jno
sbb
sub
add
add
mov
sbb
jl
pop
pop
loop
insb
aaa
std
cmc
clc
divb
fwait
mov
sbb
les
mov
add
scas
stos
add
cmpl
inc
mov
in
insl
and
push
mov
mov
popf
cld
pushf
std
xchg
add
mov
dec
inc
sti
sbb
add
sbb
rol
inc
cmpsl
mov
ss
insl
sbb
fildl
mov
add
inc
pop
inc
adc
push
sbb
jmp
daa
mov
fwait
out
and
add
in
cmp
rclb
pop
test
push
stos
adc
push
add
mov
scas
add
or
add
add
pop
dec
xor
xchg
ss
fs
clc
shlb
mov
sbb
fisttps
add
cltd
test
add
xor
add
mov
add
cmp
xor
add
gs
rorb
add
test
xchg
xor
dec
sbb
sbb
add
test
add
adc
bnd
jo
js
cmp
jo
data16
mov
adc
add
inc
inc
test
adc
and
add
ret
and
add
pop
jge
add
rcll
enter
fcmovnb
outsl
jb
lcall
adc
call
arpl
mov
add
shl
mov
ljmp
fs
xchg
sbb
jp
add
ds
aad
ds
addl
lret
dec
psrlw
stos
add
inc
je
and
add
cmp
addr16
stc
sub
mov
push
cli
or
add
icebp
out
das
out
and
sub
add
jl
sahf
dec
out
stc
cmp
and
add
aad
int
scas
add
cmpsl
sti
lock
popa
xchg
in
pop
pop
or
add
jo
or
add
addr16
mov
xlat
pop
xchg
shrb
cmp
pop
fmulp
nop
sti
xchg
cmp
push
fnsave
add
pushf
scas
mov
xorl
push
cmp
and
add
pop
cmp
dec
addb
js
lock
icebp
das
imul
cmp
or
gs
jns
add
pop
lahf
mov
scas
sbb
fxch
outsb
and
add
lahf
mov
cmp
testb
adc
or
add
rorb
add
lea
mov
std
popa
mov
repnz
clc
dec
in
and
lods
lock
fidivrs
mov
stos
test
mov
in
sub
add
cmp
add
ja
add
and
scas
pop
xchg
gs
mov
add
ret
add
sarb
push
test
mov
pop
push
mov
sub
add
test
add
sahf
out
fwait
adc
mov
add
sbb
add
sub
add
imul
shll
sahf
xor
sbb
bound
testb
inc
clc
add
add
ret
or
jno
dec
lea
add
fistps
shll
sub
add
add
loop
insb
mov
add
jnp
addr16
dec
pop
das
sub
or
add
cmpsb
add
rclb
ds
push
jle
push
add
je
sub
fwait
jbe
push
inc
adc
sub
mov
add
das
outsb
sahf
adc
call
add
fwait
cwtl
xor
out
std
mov
pop
jmp
or
push
push
je
mov
push
fcom
xchg
mulb
push
jle
mov
pop
std
mov
jns
add
adc
xorl
and
add
add
sbb
xor
push
lock
stos
call
xchg
jp
and
add
sahf
lcall
insb
and
add
xor
add
add
xchg
gs
jb
jmp
pop
pushf
loopne
sbb
out
scas
add
mov
add
lret
fcoml
scas
add
mov
sub
push
fidivl
stos
add
clc
push
hlt
mov
sbb
adc
xchg
outsl
inc
adcl
add
and
add
dec
adc
fs
out
lea
lock
add
add
jmp
cmp
add
push
stc
test
frstor
lcall
and
add
add
push
ds
fwait
add
add
add
cld
mov
jp
sub
add
out
jae
add
pusha
outsb
rcrb
inc
sbb
daa
cwtl
pop
jns
fs
cmp
add
les
pop
jae
mov
decb
add
mov
cmpsb
add
pop
pop
jno
add
mov
jecxz
leave
repz
inc
repz
addb
inc
xor
push
clc
imul
rclb
add
cmpsb
add
mov
adc
add
test
or
cmp
add
aam
and
add
iret
cmp
add
cmp
sti
rcll
loope
aas
mov
std
out
test
jo
out
sub
add
fistl
xchg
add
and
push
add
pop
hlt
pop
mov
mov
add
add
scas
add
add
add
lahf
int
pop
iret
movsb
add
mov
fstl
or
ja
call
sbb
mov
push
or
add
sbb
scas
decb
repnz
add
sahf
out
inc
sbb
jecxz
cmp
jnp
shrb
test
add
add
adc
cwtl
bound
and
add
adc
add
fistpl
and
add
mov
imul
xchg
mov
mov
add
add
cmp
notb
popa
mov
stos
add
fdivs
adc
aam
mov
sub
add
jae
mov
dec
bound
sbb
add
add
add
inc
mov
cmp
add
jmp
add
mov
pop
stos
imul
pop
push
xchg
cmpsb
add
scas
add
push
or
add
je
lds
data16
push
and
add
mov
test
add
dec
scas
add
test
dec
and
dec
bound
add
and
add
xchg
or
add
sbb
lahf
add
add
add
dec
fucomi
xchg
movsl
punpckhbw
mov
add
or
imul
adc
add
or
orl
cwtl
jae
mov
fwait
cltd
mov
loop
mov
and
add
mov
repz
mov
jne
add
aam
add
cmp
test
add
sarl
rcr
sub
add
jp
daa
pop
pop
add
or
ja
mov
add
xchg
adc
add
push
pusha
aaa
jmp
data16
std
cmp
add
sub
add
add
add
push
pop
ret
hlt
hlt
xchg
add
jg
into
or
add
ficompl
add
xlat
sbb
rorb
imul
les
test
add
add
mov
pushl
out
jg
rcll
test
add
out
rorl
add
dec
xlat
xchg
add
fnsave
mov
dec
add
int3
inc
fsub
clc
mov
popa
fucom
addr16
aaa
pop
lea
push
mov
cltd
loopne
dec
sbb
add
and
add
add
popa
jp
jb
and
jp
adc
mov
add
add
leave
addb
or
adc
add
sub
xor
add
or
add
add
xchg
test
push
add
pop
in
push
and
add
add
add
mov
cmpsb
add
dec
fdiv
sbb
jbe
addb
addb
sarb
add
into
sbb
inc
push
stc
mov
loope
loopne
mov
add
std
inc
push
jecxz
out
out
movsb
add
loope
loop
addb
out
mov
inc
cmp
sysexit
push
xchg
add
adc
jne
push
dec
mov
push
and
sub
add
add
push
cmp
pop
push
fisubrs
add
mov
lds
stos
add
adc
add
pop
insb
mov
add
dec
in
xlat
sbb
adc
or
movsl
mov
jle
jo
xchg
loop
add
aaa
lret
sbb
add
push
and
cld
loopne
add
inc
clc
xor
push
inc
mov
add
add
mov
fcoms
insl
andl
add
cwtl
cmp
les
sti
xchg
lret
dec
out
jne
sub
aam
add
add
cmp
sub
add
adc
cwtl
xor
cld
pusha
pusha
addl
jge
add
shrb
mov
in
popf
push
push
lahf
je
loop
gs
xlat
xor
dec
mov
add
stos
add
inc
or
add
add
add
add
add
xor
add
add
add
addb
dec
mov
pop
cltd
je
sti
stos
add
fwait
test
add
fnstcw
popf
out
arpl
add
inc
xlat
shlb
cmp
ja
or
add
nop
ds
daa
xchg
daa
stos
or
add
and
add
aas
out
add
xchg
lock
jno
out
jl
add
in
daa
pop
ret
daa
in
mov
add
sahf
dec
xchg
lahf
arpl
add
and
add
ss
stc
sahf
addl
or
add
add
xor
add
cmpsl
mov
push
mov
and
adc
or
add
jb
in
mov
sbb
fdiv
mov
rolb
lret
add
adc
add
and
add
mov
add
std
fmull
xchg
das
and
cmpsl
mov
rcll
add
mov
dec
mov
movzbl
xor
add
sub
add
add
add
bound
iret
addr16
add
std
or
add
add
sbb
out
add
inc
out
data16
add
add
mov
add
shlb
adc
xor
in
cmp
or
rorl
add
add
imul
addr16
notb
jb
adc
cltd
cld
cwtl
cli
or
add
sarl
outsb
mov
test
pop
or
clc
inc
push
add
sub
xor
push
inc
sahf
notl
ror
mov
les
imul
add
out
add
pop
cmpsl
stos
add
xchg
lods
int
inc
loopne
nop
and
add
loop
add
outsl
rorl
add
out
add
icebp
or
gs
fnstsw
cmc
xchg
frstors
ret
dec
ljmp
add
push
ds
ds
xor
sub
add
pop
pusha
ljmp
add
test
add
adc
or
add
scas
insl
cli
push
add
pop
nop
je
shll
add
jne
ss
lock
leave
mov
and
add
ret
xchg
jge
add
dec
sbb
cmpsb
add
rclb
cmp
lret
add
aam
das
scas
add
push
loope
push
or
test
or
add
dec
sahf
test
pop
pop
imul
cld
insl
addb
movsb
add
push
mov
add
push
sahf
test
nop
sub
xor
sub
add
mov
add
push
jecxz
dec
pop
adc
dec
cmc
test
add
add
dec
or
add
add
loop
push
add
add
add
in
pop
adc
xchg
pop
pushf
out
mov
pop
xchg
sub
add
rep
push
dec
fsubp
push
popa
cltd
and
stc
inc
jns
add
push
adc
sbb
and
push
iret
lds
sub
int
rcll
dec
arpl
add
ds
add
add
add
loope
scas
add
into
lock
pushl
popa
out
mov
add
je
fstl
add
push
mov
cwtl
sbb
and
add
popl
mov
add
sahf
cmc
imul
movsb
add
and
add
adc
dec
fisttpl
sub
push
xor
push
add
dec
das
xor
add
add
add
js
push
inc
mov
add
scas
add
icebp
loope
mov
pop
inc
mov
inc
out
or
aaa
mov
adc
mov
sub
add
stos
pop
or
add
add
inc
jae
repnz
lahf
lahf
xchg
add
add
scas
scas
fnstenv
dec
mov
add
adc
aad
add
cmp
mov
xchg
fs
xchg
mov
dec
cld
pop
jno
addr16
add
sti
out
ljmp
sti
out
or
add
repz
popf
mov
repnz
test
add
cwtl
jae
je
imul
add
mov
imulb
add
push
add
xchg
repz
and
add
cli
insb
mov
add
add
xor
mov
add
xor
mov
fdivl
sbb
add
xor
fdivr
test
cmp
add
add
lret
outsl
or
lods
add
inc
push
add
cmp
inc
mov
add
lahf
mov
mov
mov
add
adc
dec
inc
pop
jle
sbb
add
push
pusha
push
push
mov
aaa
ret
xchg
cmpsb
add
mov
add
xlat
add
inc
pop
stos
je
add
icebp
push
xor
cld
jecxz
fisubrs
add
mov
mov
push
add
xchg
inc
jo
push
mov
mov
in
movsl
jecxz
add
cmp
out
sahf
xchg
test
xchg
cmpsb
add
cmp
cmpl
cltd
jnp
out
cmp
dec
and
add
pop
sub
repz
dec
sbb
repz
add
fs
push
push
and
add
xor
mov
jns
rcl
and
add
imulb
add
jne
daa
adcl
mov
aam
xchg
add
jno
fidivrl
mov
adc
and
shlb
test
add
icebp
into
scas
lret
dec
inc
ljmp
mov
mov
add
in
jo
add
outsb
push
push
add
scas
add
mov
add
ss
xchg
sbb
add
mov
loopne
add
mov
addb
popf
in
rorl
add
add
aad
inc
pop
insb
lock
jle
lcall
addb
or
add
and
jg
inc
or
adc
add
pop
and
sti
stc
mov
lret
xchg
gs
sbb
add
popf
lahf
ja
jbe
rclb
test
repz
push
cmovne
jl
lds
sbb
bound
add
push
decl
inc
in
sub
jb
lods
sbb
adc
xchg
stc
cli
popa
cmp
cmp
add
test
arpl
lret
cltd
adc
iret
or
add
mov
aad
nop
stc
dec
push
jns
sub
add
add
inc
clc
jo
add
cmp
add
xchg
addr16
add
outsb
dec
add
cmp
pop
fstl
add
and
cli
adc
or
add
lahf
xor
add
inc
scas
add
xor
push
add
cmp
aaa
mov
adc
lahf
inc
leave
add
add
cmp
je
or
add
add
in
and
adc
add
lea
arpl
icebp
gs
mov
push
add
or
js
xor
call
inc
cld
push
xchg
pop
sub
add
in
mov
mov
in
or
add
aad
xorl
jno
out
sti
addb
movsl
ret
cmp
sbb
jno
pushf
cmp
decl
push
leave
in
jae
ret
xor
xor
mov
mov
add
pop
add
add
repnz
mov
add
lods
add
and
insb
xchg
add
add
inc
inc
add
add
mov
into
mov
jle
add
pop
sub
add
cmpsl
nop
jmp
lods
add
divb
loop
mov
add
add
sahf
sub
push
and
aam
mov
xchg
addb
jle
loope
mov
ja
or
jmp
add
cmp
std
xchg
jecxz
jne
mov
mov
lahf
and
pop
push
decb
stc
mov
in
dec
in
mov
mov
add
lods
add
jno
xchg
add
mov
jne
fldl
sbb
pop
scas
add
or
add
add
aaa
fcoml
paddusb
add
push
loopw
out
push
push
mov
add
mov
jecxz
push
lcall
inc
iret
xchg
leave
jmp
jg
add
add
jmp
push
aaa
sub
add
push
pusha
mov
or
add
iret
shlb
dec
inc
popf
mov
inc
popf
adc
and
movsl
jge
jecxz
add
addb
push
inc
inc
mov
xlat
les
inc
dec
mov
and
aaa
jnp
fwait
lcall
add
add
push
cmpsl
pop
and
mov
add
stos
add
jmp
sti
aam
mov
xchg
add
pop
je
lea
add
ret
mov
in
adc
jl
fs
xchg
repnz
add
pushf
arpl
int
push
pushf
xchg
mov
xchg
nop
pusha
adc
inc
rcrb
daa
test
or
add
fsubp
add
mov
add
add
adc
dec
sbb
sub
inc
cld
adc
add
sub
add
jns
mov
pop
xchg
add
adc
add
add
loop
dec
cmp
or
add
in
repnz
rolb
js
pop
ret
les
jbe
repz
pop
clc
clc
cmpsb
add
stos
add
aaa
pop
mov
stos
add
addr16
xchg
mov
push
add
fnsave
and
or
add
push
add
xor
add
aam
xchg
add
daa
test
loopne
inc
out
movsl
and
mov
arpl
incb
pop
push
fwait
lret
jb
std
jne
adc
cmpsl
out
ret
or
add
add
mov
mov
outsb
shll
stc
add
add
add
insb
push
leave
dec
aaa
push
add
xchg
aaa
ret
jecxz
aaa
pop
mov
dec
ret
mov
in
dec
mov
add
popf
jns
pop
jne
xchg
rcrb
mov
add
negb
out
push
sarl
add
add
fiadds
std
sub
add
scas
jo
sub
sbb
jnp
divl
xchg
lods
add
pop
mov
sub
add
add
mov
cmp
xchg
sbb
adc
pop
imul
leave
inc
aam
add
add
add
aad
aaa
int3
push
xor
ror
add
add
add
and
xor
xchg
and
push
add
loope
dec
mov
sbb
push
inc
out
out
fisubl
iret
xchg
jno
into
fistps
ret
xor
je
pop
or
add
mov
out
pop
cltd
xchg
daa
xchg
mov
add
jbe
or
pop
pop
js
fucomip
fstps
jno
pop
fwait
shl
jl
xchg
cmc
int3
loop
ljmp
nop
xchg
loopne
inc
sbb
ret
xor
inc
mov
loopne
sahf
aad
lods
add
imul
inc
push
cltd
fldcw
add
iret
aas
cltd
flds
stos
dec
iret
std
push
mov
cmpsb
add
cmpsb
add
xchg
enter
add
add
add
sbb
push
lahf
lea
add
ret
cmpsb
add
mov
cmpsl
jmp
add
imul
lahf
fstpl
add
add
aam
xchg
in
pushf
in
or
add
arpl
lods
popa
aad
xchg
mov
add
addb
or
add
addb
inc
push
daa
movsb
add
lcall
jge
cmp
repnz
notl
add
ret
and
addb
loope
daa
lock
or
fdivl
fwait
sbb
mov
call
dec
add
pushf
xor
sub
popf
mov
add
pop
stos
add
inc
and
xchg
sub
add
add
add
out
inc
add
add
scas
out
pop
inc
xlat
jle
je
xlat
cmp
fimuls
shrl
add
add
xor
mov
add
adc
mov
mov
lods
or
add
add
and
add
add
push
xchg
in
cmp
add
mov
push
mov
mov
and
add
and
out
fdivrs
addr16
mov
add
dec
idivb
dec
inc
and
add
push
add
and
mov
push
repnz
add
inc
jb
scas
add
inc
test
add
divl
out
lret
mov
unpckhps
ljmp
push
pop
add
mov
aam
jno
mov
mov
data16
mov
add
addb
jl
test
jbe
sub
pop
test
add
arpl
in
lret
lret
stos
add
filds
add
addr16
fstpl
mov
addb
mov
fdivrl
mov
ror
aas
pop
fbld
jge
mov
add
cmp
notl
fimuls
icebp
stos
add
jne
push
dec
pop
int
nop
pop
cwtl
cmpsb
add
pcmpeqb
adc
add
mov
sub
add
add
xor
add
dec
add
add
mov
mov
mov
lock
pop
cmpsl
or
inc
xor
and
add
testl
mov
hlt
add
add
ret
aam
xlat
loopne
push
dec
jge
jmp
loope
or
add
add
add
ljmp
mov
add
jge
movsl
testb
addb
in
add
lea
sbb
movsb
add
enter
js
mov
psubd
push
xor
xchg
loopne
and
add
add
hlt
push
add
leave
scas
mov
lahf
jle
cli
mov
sub
pop
pop
out
push
sbb
jg
arpl
add
jnp
add
lods
pop
mov
add
xchg
add
cmp
add
mov
push
dec
mov
shlb
repnz
popf
cld
out
lock
push
or
addb
out
and
test
push
mov
add
push
and
adc
ja
add
jne
rcrb
pushf
cmp
or
icebp
repnz
in
adc
lret
jns
add
mov
add
test
add
addb
push
add
rcl
rol
pop
mov
add
add
add
and
clc
and
add
lret
jo
add
jge
dec
xchg
push
loopne
cmp
jmp
inc
jo
or
add
repnz
and
add
mov
jmp
add
in
pop
gs
fwait
arpl
mov
das
push
loop
pop
shlb
in
pop
cmp
or
add
add
add
jmp
mov
xchg
aad
popf
push
addb
add
jb
inc
lcall
fistl
inc
xchg
nop
dec
adc
add
fnop
ficompl
xlat
mov
xor
add
add
push
jns
mov
add
push
cltd
mov
shr
scas
add
dec
dec
ja
dec
rcl
ret
test
add
mov
add
push
mov
add
and
add
jns
sub
add
pop
sarb
gs
add
outsl
idivb
arpl
add
add
add
add
sbb
add
aas
lret
or
int3
jp
leave
pop
add
notb
inc
cmp
mov
clc
outsb
fwait
outsb
jge
lret
add
dec
in
push
ljmp
add
add
mov
js
outsl
pop
addb
in
and
add
mov
xor
jnp
add
lds
arpl
dec
mov
push
add
outsb
ljmp
lahf
aam
addb
fbld
pop
or
add
pop
fisubrs
aad
cmp
mov
dec
and
add
rorb
add
jo
mov
add
aam
fwait
out
insb
addr16
dec
outsb
loop
sub
fnstenv
sub
add
or
fstpl
mov
add
adc
xchg
mov
add
movsb
add
xchg
add
add
add
push
add
dec
inc
fdivl
in
cmpsl
rcrb
pop
jmp
icebp
lahf
repz
add
cld
leave
lds
fbld
add
jmp
sbb
or
add
cwtl
push
add
add
mov
add
add
test
add
jp
add
sub
rcrl
and
cmp
dec
dec
insl
mov
add
inc
dec
out
jge
stos
add
and
loope
jg
push
adc
xchg
bound
hlt
push
ss
add
adc
fstpt
imul
pop
dec
push
add
cmp
jg
add
xor
xchg
or
cmp
add
pop
in
mov
xchg
sub
add
add
add
xchg
jle
cmp
mov
add
or
add
mov
mov
xchg
test
add
inc
pop
or
add
and
add
lds
mov
sbb
add
sbb
push
out
sbb
stos
add
cmp
mov
imul
arpl
int
add
dec
push
push
pop
and
add
pop
out
jno
dec
cli
push
push
sahf
shll
add
or
add
sbb
cmp
pop
jae
mov
repz
stc
fsubr
xor
push
jns
fnstenv
sub
pop
loope
pop
sbb
xor
add
aas
outsb
lret
imul
add
inc
cmp
lds
addb
xlat
movb
cmp
add
pop
les
and
push
scas
loopne
jl
adc
add
push
hlt
mov
push
or
add
add
in
inc
or
add
lret
lods
add
fwait
xchg
daa
cmp
mov
testb
adc
add
addb
jne
xchg
push
mov
push
jmp
mov
add
add
lea
pshufw
add
xchg
andl
push
ss
mov
rorl
add
fsubl
add
pop
in
pop
movsl
push
cmc
imul
repnz
cwtl
pop
sub
fbstp
add
xor
add
outsb
xchg
dec
mov
stos
add
ret
in
cltd
sub
mov
or
add
jl
int3
push
mov
popa
cmp
xchg
inc
pop
mov
loope
in
addb
pop
sbb
sti
add
add
xor
enter
jp
add
sbb
sti
push
jno
cmpsl
test
in
faddl
mov
add
dec
icebp
cmpsb
add
xchg
adcl
pop
bound
mov
out
sub
add
andl
arpl
cli
cmp
lods
add
call
add
shll
sbb
mov
push
int
add
int3
push
mov
pop
addb
in
arpl
mov
add
push
add
add
add
push
dec
cmp
cld
jle
ss
mov
sar
rcrb
cli
mov
imul
add
mov
add
test
add
jmp
fs
stos
add
pop
nop
insl
sbb
dec
mov
push
in
jnp
lea
add
sub
aas
sbb
cmp
jge
cmpsb
add
popa
inc
cmp
add
call
add
mov
int
test
add
lret
scas
add
pop
lahf
mov
cmc
jo
mov
pop
mov
add
scas
add
sub
add
leave
add
mov
xchg
and
cmp
pop
lcall
fildll
dec
adc
add
mov
xchg
jge
sub
add
lock
cmp
sbb
in
mov
add
xchg
lret
add
xchg
sti
and
insb
jecxz
dec
xchg
subl
add
negl
jo
enter
add
stos
jae
jmp
movsl
aas
nop
or
aaa
sarl
add
lahf
and
add
ret
add
repz
std
sarb
add
inc
sbb
fmuls
add
mov
testl
xchg
push
lea
std
int3
pop
scas
push
xor
add
imul
imull
ret
pop
cmpsl
lds
inc
lds
movsl
push
add
mov
sub
add
insb
sub
add
ja
mov
stos
mul
leave
inc
and
add
loopne
arpl
push
bound
add
fnsave
mov
add
cmp
mov
jle
push
add
mov
add
inc
scas
add
mov
shrl
lds
add
fcomps
cmpsl
and
add
mov
sub
add
cmpsb
add
gs
push
ljmp
add
add
mov
mov
clc
scas
add
push
mov
xor
or
add
xchg
jecxz
add
lcall
cmp
insl
adc
mov
add
jp
add
xchg
jl
outsl
inc
jns
fcmovnu
imul
add
sbb
outsl
incb
add
int
stos
jmp
and
add
jge
push
imul
add
jge
cmc
sbb
add
cmp
jae
pop
aam
repnz
add
jb
ljmp
add
xor
out
test
add
testb
dec
and
add
fmuls
add
icebp
or
add
xor
dec
inc
mov
adc
sub
sbb
fiadds
cltd
dec
cmp
out
std
mov
in
stc
pop
add
xor
push
add
lahf
jno
and
clc
mov
ret
cmp
cmp
pop
push
add
mov
mov
jo
test
add
add
sbb
scas
add
jb
dec
cli
outsl
loop
or
mov
add
cmp
add
add
add
shll
aas
stc
dec
inc
adc
mov
xor
mov
sbb
out
push
cwtl
inc
xlat
push
cltd
and
add
push
addb
mov
add
repz
test
jmp
hlt
scas
xchg
sti
std
pop
test
add
jb
lahf
popf
cmp
pusha
mov
add
mov
pop
add
add
add
add
add
adc
add
xchg
ljmp
add
test
cmpsb
add
imul
daa
mov
add
mov
add
ror
stc
test
add
add
adc
rcrb
dec
xchg
sbb
add
pop
cmp
lea
push
and
dec
xor
and
add
mov
ljmp
addb
cmp
sbb
stos
mov
addr16
add
scas
add
in
cmc
pop
jnp
mov
add
arpl
mov
mov
addb
inc
inc
dec
icebp
lock
add
mov
push
repz
in
jg
out
mov
test
data16
cli
lock
data16
cmc
mov
push
rorl
add
jge
bound
fstpt
mov
dec
cmpsl
or
sub
add
pop
mov
add
add
repz
mov
add
insb
loopne
add
and
add
loop
jns
int3
aaa
or
add
ss
shr
in
mov
add
xor
cwtl
ret
fbstp
cmp
loopne
cmp
add
lahf
frstor
sbb
add
sbb
sbb
add
adc
add
int
add
mov
add
dec
outsl
test
or
add
leave
push
xlat
movsl
das
pushf
lcall
add
add
add
mov
add
xor
cmpsb
add
fdivrs
pop
mov
dec
inc
fcomps
cli
pop
aaa
scas
add
jp
into
cwtl
ror
cmpsl
repz
pop
sbb
mov
inc
les
push
xchg
aas
pop
scas
add
cltd
jbe
add
jg
mov
fildll
add
ljmp
test
rol
xchg
mov
add
test
add
fs
mov
out
jge
add
jne
test
mov
lods
inc
aas
or
add
sub
add
add
cmpsl
stc
js
outsl
cmc
dec
xchg
pop
mov
mov
jle
dec
out
jmp
push
add
into
cmpsb
add
mov
sub
add
add
jg
mov
push
sbb
add
adc
add
fsincos
insl
xor
add
fwait
pop
loopne
fdivs
add
mov
in
dec
mov
dec
sub
add
add
add
adc
rorl
cmpsb
add
mov
add
flds
push
or
add
int3
inc
subl
inc
fwait
aad
aad
iret
adc
push
imul
xchg
popa
jns
bound
dec
mulb
add
add
adc
and
add
adc
int
popf
in
call
sub
mov
in
mov
fimull
jb
lahf
jmp
sub
or
add
les
addb
add
insb
sbb
pushf
fists
adc
mov
cmc
inc
sub
add
xchg
add
inc
loope
das
je
add
mov
mov
add
orl
adc
pop
stc
ss
negb
mov
imul
lods
addb
ds
shll
movsb
add
iret
rcll
push
in
add
outsb
addr16
xor
dec
inc
jg
cwtl
pop
inc
cmpsl
jo
dec
inc
js
mov
mov
add
add
add
add
mov
add
mov
and
lret
cld
push
sbb
fadds
add
imull
sub
add
add
jb
cmpsb
add
lods
in
mov
adc
cld
fldl
push
js
pop
cmp
inc
mov
lcall
jo
xor
add
add
js
addb
mov
lea
mov
xor
add
mov
js
les
jg
jo
pop
stc
jnp
adc
add
add
push
sahf
lods
add
pop
sbb
dec
xor
iret
mov
jecxz
add
cwtl
inc
test
mov
in
inc
xchg
add
xor
ret
add
add
shlb
add
add
cwtl
imul
cmp
out
pop
jmp
insl
int
pop
push
and
jbe
jp
push
cmp
mov
popf
push
mov
mov
add
jno
dec
pop
add
add
outsl
xchg
scas
push
out
xor
sub
add
mov
ret
cld
lods
push
rcrb
add
lsl
add
sbb
pop
sub
xor
scas
xor
adc
jb
or
add
out
shlb
jns
mov
add
mov
add
add
in
dec
mov
pop
insb
or
ss
ret
loope
dec
mov
fistl
lret
ljmp
add
cltd
or
add
add
mov
mov
arpl
add
add
add
inc
pop
mov
arpl
add
add
add
popf
inc
cmp
addb
and
add
pop
mov
add
xchg
nop
dec
pop
sbb
add
mov
lods
xchg
push
mov
testb
lods
add
inc
mov
jbe
mov
ds
lock
cmp
out
sar
sub
add
lret
int3
out
out
ds
or
mov
dec
mov
pop
rolb
add
mov
test
add
xchg
lret
iret
pop
js
je
ret
add
adc
lods
add
cmp
push
imull
movsb
add
push
cmp
add
icebp
inc
jecxz
bound
sahf
lret
xchg
add
mov
add
add
mov
add
push
push
add
mov
sarb
stos
out
ds
mov
adc
addb
setae
cmc
sarl
clc
mov
adc
jo
cmpsl
scas
addb
in
fnstsw
gs
ret
rorb
insl
outsb
arpl
shll
pusha
and
cltd
push
jb
imul
add
rclb
pop
sub
adc
inc
lock
xchg
mov
cli
xchg
add
mov
into
rcrl
mov
arpl
dec
jg
xchg
int3
sub
inc
fisubrs
jns
scas
movl
add
sub
add
add
iret
xchg
aad
and
add
nop
cmp
add
add
add
xor
mov
ret
shrb
dec
adc
insl
ss
pop
mov
rclb
movsl
into
xchg
sub
iret
lods
or
pop
xchg
dec
sub
fwait
mov
cwtl
addr16
cmc
out
jp
loopne
fists
inc
ret
outsl
imul
xor
dec
xchg
xchg
loopne
into
out
pop
dec
pop
cmc
xor
dec
aad
adc
popf
aad
or
cltd
ljmp
add
add
and
add
clc
int3
add
add
add
dec
test
fstl
push
aas
and
arpl
imul
mov
mov
add
mov
mov
xchg
insb
mov
add
add
loopne
add
mov
add
fnstcw
xor
clc
cmpsb
add
inc
rcr
outsb
enter
sahf
push
sub
fimuls
mov
test
add
mov
aaa
jo
lcall
dec
mov
inc
scas
add
push
dec
sub
add
lret
fwait
dec
imul
icebp
sbb
xchg
aad
push
add
xor
or
add
mov
out
adc
and
dec
sub
inc
js
jo
add
push
add
cmp
add
add
adc
mov
decb
add
xchg
popa
rcrb
sub
add
xorl
mov
add
in
mov
fstpl
lcall
add
in
jle
call
and
add
addb
loope
test
add
popf
cmpsl
popa
pop
sarb
add
jae
int3
inc
xor
repnz
sub
add
add
mov
or
add
fcoml
add
or
add
icebp
sbb
mov
add
