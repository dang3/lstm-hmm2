loope
popf
or
int
aad
sbb
add
xchg
xchg
xchg
xlat
cld
push
lret
jbe
movsl
pushf
stc
xchg
cmp
loope
jbe
mov
fstps
pop
xchg
mov
ja
add
mov
xor
push
inc
cld
inc
fcompl
sbb
rorw
ljmp
out
or
sbb
out
test
lds
push
rolb
stos
mov
xchg
mov
popf
sub
inc
aaa
dec
repnz
addb
add
out
clc
je
movsl
adc
hlt
and
jg
int
cli
or
loopne
je
addb
jnp
add
xchg
and
xchg
jg
adc
addb
mov
stos
notl
movsl
cmp
xor
xor
aas
ret
ficomps
out
cmpsb
or
sub
mov
push
cmpsl
repz
add
jmp
scas
sti
xlat
push
insl
scas
out
aam
fmull
js
test
dec
mov
add
lea
daa
push
push
movb
jbe
sub
or
sbb
popa
sahf
jecxz
add
movups
and
lcall
mov
out
aam
jl
out
out
ja
mov
and
adc
ds
add
sbb
or
aas
jg
repz
add
mov
nop
popa
xchg
jg
cmp
aad
xor
sub
gs
pop
pop
cmp
lret
stos
sub
int3
mov
icebp
mov
add
adc
xchg
mov
aam
fbstp
test
ds
mov
mov
inc
add
inc
jl
jmp
push
push
rcr
bound
xor
add
mov
push
bound
rolb
mov
lcall
jnp
push
fadds
ffree
add
out
mov
jo
add
xor
jmp
inc
add
adc
stos
addr16
pop
les
pop
dec
mov
loope
aaa
out
jb
xlat
mov
ret
dec
lret
stc
jbe
stos
les
fiaddl
test
frndint
in
icebp
mov
popl
adc
cld
mov
lret
loope
and
fcompl
cmp
add
jns
ja
lods
xchg
jl
and
cmpsl
or
mov
mov
sti
mov
pop
inc
lret
push
iret
fmull
shlb
xchg
or
mov
push
jno
insl
loope
mov
push
lea
mov
fstpt
dec
fwait
stc
mov
rcll
add
xor
inc
xchg
lret
add
ja
cmp
dec
push
fdivs
xor
lods
inc
add
in
lea
xlat
xor
xchg
dec
jo
add
les
or
or
jle
pop
ss
sub
sub
outsb
pop
pop
adc
iret
inc
pop
push
aad
ficompl
pop
out
js
xor
cmc
enter
sti
adc
dec
pop
ret
loopne
mov
xor
xor
add
aad
pop
pop
sub
push
add
mov
xor
scas
rolb
mov
or
add
push
mov
lret
add
jmp
fs
fidivrl
rolb
add
mov
mov
mov
fstps
xchg
dec
cmpsb
mov
add
or
xor
lcall
pop
and
mov
test
mov
push
add
mov
pop
push
jb
dec
outsb
scas
sub
jne
jne
adc
sbb
dec
dec
jge
cmp
cmp
mov
xchg
cmp
inc
add
sub
jo
add
cmp
xchg
push
jge
lods
push
stos
es
jmp
push
shll
clc
in
shlb
sub
jbe
adc
scas
mov
iret
pop
cmp
ret
xchg
imulb
fldcw
nop
gs
pop
sub
data16
add
jnp
pop
inc
add
dec
xchg
imul
ret
add
add
es
inc
add
jle
inc
add
add
add
add
ficoml
fisubl
pop
sbbl
cmpsb
scas
insb
fsubr
sub
add
lock
sub
fdivrl
das
sbbl
or
in
fs
xchg
repz
mov
sbb
add
out
repnz
inc
mov
dec
mov
xorl
sti
popa
pop
or
pop
popa
sub
sarb
mov
sahf
cltd
pop
out
dec
fidivl
fdivrl
mov
and
jne
xchg
mov
pop
mov
imul
inc
add
adc
mov
je
pop
gs
mov
mov
outsb
sbb
sub
int
add
test
fucomp
xchg
repz
mov
popf
insb
sub
out
sbb
add
add
add
xchg
and
adc
and
jns
es
cmp
dec
addb
and
mov
mov
push
inc
jmp
sub
inc
jmp
out
mov
push
push
mov
addb
inc
add
xchg
or
mov
enter
in
test
pop
addr16
adc
shll
lea
mov
mov
and
sbb
sbb
mov
mov
mov
jo
mov
fiaddl
push
lahf
jp
nop
mov
hlt
test
push
add
jns
std
and
leave
jb
jbe
cs
test
mov
add
xchg
cmpsl
fst
test
add
fiaddl
fistpl
stos
leave
push
jns
pop
push
jae
std
mov
mov
rorb
mov
jnp
in
add
inc
add
sub
sahf
es
mov
add
xchg
stos
and
cltd
je
popf
cmp
or
add
ja
mov
cmc
adc
add
dec
notl
sbb
out
pop
inc
adc
mov
mov
cmp
sub
and
addb
imul
daa
je
cmp
imulb
cmp
sbb
add
iret
jl
push
aam
mov
jl
add
add
inc
add
mov
inc
incb
cmp
mov
sahf
xchg
mov
addb
leave
add
push
out
push
fcmove
add
sbb
pusha
add
pop
push
cs
sbb
mov
int
movb
lahf
jecxz
xchg
pop
rcrl
and
sub
mov
lods
adc
scas
cmp
scas
icebp
inc
addr16
test
je
add
and
dec
cmpsl
jne
std
aas
pop
or
scas
scas
iret
loope
bnd
cmp
add
push
adc
xchg
xor
xor
movsl
xchg
test
testb
sahf
inc
mov
addb
sti
jo
add
rcll
loope
ds
filds
jbe
loopne
push
xor
add
stos
cmp
push
les
inc
add
fcmove
push
add
sti
pop
and
sub
movsb
cmp
movsl
sub
ljmp
lcall
push
sti
dec
gs
movsb
xor
add
in
or
inc
add
xchg
data16
aam
rcl
test
jae
lcall
jb
stos
xchg
mulb
mov
mov
outsb
push
jb
movsl
je
dec
adc
ds
into
popa
sub
lds
scas
xchg
ror
addb
pop
xor
orl
addr16
dec
pop
mov
dec
dec
jge
loope
int
or
icebp
lcall
and
pop
and
lret
jns
inc
add
jnp
popf
jg
es
mov
les
xchg
cmp
test
fisttpl
pusha
add
lods
pop
jge
add
shrl
mov
sbb
das
push
fistps
jmp
mov
jb
dec
adc
mov
inc
add
xchg
scas
or
in
in
addb
add
aam
xor
add
lret
add
pop
popa
out
and
scas
shlb
cmp
and
insb
jns
aaa
es
lock
popf
or
mov
cmp
push
movsl
lods
sub
negl
scas
pusha
add
push
pop
aas
jnp
add
pop
ds
inc
add
lds
or
pop
into
mov
or
add
sub
xchg
fwait
cmp
ud1
xor
hlt
cs
int3
push
outsl
xorl
jno
pop
iret
daa
dec
das
imul
cmpsl
jmp
lcall
orl
mov
pop
outsb
push
cmpsl
leave
cld
sti
adc
mov
push
ret
push
add
xchg
roll
ljmp
outsb
inc
add
fmuls
add
rolb
mov
in
aad
bts
inc
add
jnp
scas
inc
add
adc
mov
push
je
mov
popf
sub
fwait
movb
cmp
orl
xor
or
cmp
mov
jmp
adc
fimuls
cld
jge
faddl
inc
xchg
clc
mov
popa
adc
mov
pop
inc
add
pop
mov
mov
push
jmp
xor
sahf
lea
xorl
je
sbb
xchg
gs
mov
add
jmp
lods
dec
pop
imul
lea
dec
sti
fbstp
or
movsb
inc
mov
dec
and
mov
out
and
fadds
stos
xchg
xor
and
xchg
and
test
push
mov
loop
aas
and
scas
xchg
push
inc
sar
popf
push
and
out
rcrb
cmp
stos
iret
sbb
das
add
push
rolb
cmp
repnz
fidivl
xchg
mov
into
jl
add
pop
xor
imul
add
lret
ret
xchg
cmc
psrld
add
leave
addb
dec
jecxz
jo
repz
inc
mov
sbb
leave
movsl
jmp
and
insl
xor
loop
pop
inc
push
inc
add
popa
mov
pushf
pop
jnp
xlat
arpl
jle
add
adc
add
shll
mov
add
ds
mov
arpl
sub
sbb
int
adc
sbb
int3
inc
dec
loopne
mov
std
adc
cwtl
orl
mov
divl
stos
lods
cli
mov
jge
movb
out
cmp
aad
sahf
addb
fld
add
mov
mov
jge
lods
cld
ret
mul
aas
mov
sub
jne
jns
add
push
add
dec
xchg
mov
fisubrs
int3
cmpsl
mov
or
ss
and
cmpsb
loopne
xchg
mov
lods
mov
cmovp
add
xor
or
sub
mov
add
mov
add
pop
icebp
xchg
dec
and
fnstsw
and
mov
sub
add
add
pop
push
and
mov
gs
fldcw
cmp
mov
add
add
icebp
jno
xor
xor
push
mov
sub
push
mov
push
push
push
push
push
push
push
push
bnd
mov
pop
dec
imul
cmp
ss
push
call
cmp
je
mov
lea
push
push
es
call
push
jmp
icebp
mov
nop
cs
lea
xchg
or
lock
lea
repnz
pop
add
ss
cs
push
lret
add
add
xor
sbb
lods
jns
add
iret
ja
add
add
enter
add
mov
bound
testb
inc
cmp
add
and
add
mov
inc
add
sbb
iret
xchg
jbe
lods
pop
mov
mov
inc
add
dec
es
add
dec
mov
lds
lods
and
xor
mov
cmp
push
aam
std
and
testb
fdivrl
repnz
fwait
jmp
jecxz
scas
xchg
xchg
addb
or
je
aas
xchg
dec
ret
inc
out
imul
push
pop
rcll
xor
jmp
mov
ret
pop
mov
stc
xor
mov
fisttps
add
aam
add
rorl
jl
mov
insb
pop
ficomps
dec
jg
lahf
sti
or
pushf
sbbl
push
jbe
std
mov
repz
xchg
lret
enter
rolb
aaa
push
mov
push
movb
fdivrl
push
mov
pop
dec
dec
repz
add
add
stos
lcall
push
sarb
test
mov
dec
jbe
and
add
add
dec
mov
jae
sbb
das
lret
repz
add
sahf
outsl
fsubl
adc
idivb
dec
inc
inc
push
and
lret
xchg
in
add
repz
dec
test
add
iret
sarb
cmp
rolb
hlt
or
dec
in
or
daa
nop
add
add
mov
test
pop
sub
lret
add
rolb
add
push
jmp
mov
icebp
jb
add
fmull
xchg
cld
ds
mov
scas
jbe
lcall
fcoml
xchg
mov
cmp
mov
les
xchg
lods
xor
xor
pop
push
fsts
mov
mov
out
out
lock
push
push
push
mov
fidivrl
lea
je
xchg
sbb
and
fistps
scas
dec
push
mov
sub
or
dec
fcoms
fldt
imul
push
sub
add
adc
or
add
rolb
cwtl
xlat
xchg
mov
add
add
div
lods
repz
add
mov
stos
adc
lock
sbb
sbb
std
push
mov
cmp
enter
loopne
adc
int
and
xor
out
shlb
std
add
js
in
fildl
leave
adcl
ret
mov
add
cltd
push
mov
aas
and
mov
jge
mov
nop
adc
js
push
inc
add
ficoms
ja
add
add
test
xor
cmpsb
adc
add
sub
popf
and
les
and
push
inc
add
pand
hlt
call
mov
das
push
jle
test
or
daa
push
dec
std
sti
stos
mov
jmp
cmpsl
outsl
das
sub
nop
dec
in
popf
lods
pusha
add
popf
int3
test
cltd
push
push
jae
fstl
add
pop
mov
add
add
aas
dec
jp
jmp
pop
fiadds
ljmp
pop
je
fdiv
push
loope
mov
jp
add
sbb
sub
mov
adc
mov
addr16
add
push
int3
inc
add
lcall
sahf
mov
outsb
jbe
sub
jp
add
pop
insb
fistpl
addb
jmp
sub
inc
pop
data16
out
add
push
inc
mov
xchg
or
sub
pusha
add
sbb
mov
sbb
add
pusha
add
inc
xchg
adc
or
test
add
pop
and
add
adc
add
pop
aaa
jle
imul
or
push
repz
cmp
fndisi(8087
nop
popa
push
int
xor
fcoms
shrl
aam
in
pop
jmp
cmc
cmpsb
pusha
add
inc
add
cmp
fwait
xchg
xchg
cwtl
or
fisubrl
es
mov
aam
int
lret
pop
mov
push
sahf
enter
adc
or
mov
sti
xor
mov
fs
mov
stc
push
adc
xor
sti
mov
jecxz
and
pop
popf
lds
xchg
aas
and
add
inc
add
add
call
movb
cmp
mov
push
or
cltd
xchg
xor
mov
mov
jecxz
daa
enter
sbb
loope
addb
fmuls
lds
add
inc
mov
sub
popa
jns
lahf
and
or
sub
or
and
outsl
and
inc
add
sub
xchg
inc
shll
pushl
sub
int3
hlt
dec
cwtl
shrb
jnp
or
and
or
int
mov
dec
in
cli
aam
aam
ret
dec
daa
cmp
xchg
add
sub
icebp
clc
into
jae
mov
mov
icebp
sub
sbb
and
popf
add
or
pusha
add
mov
jg
jns
sub
mov
push
inc
lfs
testl
pop
cmp
test
clc
leave
add
pop
fxch
or
dec
movsl
xchg
les
mov
mov
cmp
out
push
mov
arpl
cmp
sub
call
xchg
fimull
jmp
std
and
mov
add
lcall
adc
xchg
incl
movb
addb
xchg
push
ljmp
lods
and
mov
cltd
fs
jle
push
clc
out
icebp
jle
push
add
nop
fsubl
jecxz
fwait
jae
fiadds
mov
push
gs
add
sbb
pushf
cmp
mov
enter
mov
cli
adc
sbb
fdiv
movb
popf
mov
lret
movsb
sbb
or
xchg
dec
cmp
jno
or
ret
mov
lcall
cwtl
mov
push
push
mov
mov
add
adc
imul
pop
inc
add
jns
push
inc
add
adc
js
cs
push
stos
mov
xor
add
lds
cli
mov
inc
imul
add
and
out
icebp
jnp
fisttps
cwtl
lahf
addb
push
dec
cmpsb
xorl
aad
adc
sbb
repnz
ret
cmp
addr16
add
jnp
or
mov
xchg
bnd
push
stos
repnz
into
cmp
xchg
cmp
sub
mov
call
mov
mov
push
sbb
sarb
and
and
jp
sti
push
jnp
jno
nop
xchg
inc
add
sub
int3
roll
mov
jmp
mov
lock
sub
pop
lock
sub
adc
adc
xchg
jne
rorl
push
add
pop
jl
inc
mov
nop
pop
dec
push
add
sti
dec
adc
cmpsb
push
dec
mov
test
lcall
lds
daa
adc
jmp
repnz
push
add
cmp
add
mov
mov
pop
jmp
fs
lret
mov
xlat
cmc
xchg
call
aam
xchg
pop
enter
jo
push
cwtl
or
xor
fcompl
mov
and
icebp
je
inc
add
repz
addb
mov
movb
mov
lret
push
aaa
dec
call
aam
bound
inc
mul
inc
add
ljmp
pop
pop
adc
adc
push
add
jnp
and
nop
sub
es
mov
out
inc
and
rcr
js
pop
jns
fidivs
inc
imul
adc
push
jb
rorl
idiv
arpl
inc
add
ficomps
jp
add
fmulp
mov
call
testl
xor
pop
mov
and
gs
push
sbb
jo
and
int
adc
pop
and
enter
loop
or
add
inc
mov
sti
pop
pusha
add
mov
adc
outsb
cld
jns
mov
sub
ret
adc
inc
add
jmp
daa
sarl
imul
pop
ja
cwtl
mov
mov
movsl
or
addb
test
dec
mov
push
popf
stos
push
sub
sbb
cmp
add
pop
lods
cmovae
fsubl
shr
stos
jno
out
setne
mov
mov
out
int
push
xchg
push
adc
add
std
loop
jno
sahf
adc
adc
inc
aaa
les
stos
pop
mov
lds
rorl
adc
cmp
xchg
test
add
mov
inc
pop
inc
add
pop
xor
push
or
negb
inc
add
cmpl
add
dec
push
rolb
cmp
fcomps
test
jb
add
out
out
ljmp
add
test
stc
std
scas
jmp
cmp
lret
push
add
mov
lret
add
cmp
xchg
inc
or
push
pop
test
pop
inc
add
jg
hlt
sbb
add
mov
mov
or
add
dec
push
add
in
sbb
jnp
dec
clc
leave
clc
loop
jne
jb
lret
and
jo
in
popa
sarl
add
fwait
mov
xor
xchg
inc
add
andl
lods
inc
jo
add
loope
add
add
xchg
mov
xor
test
adc
push
les
clc
pusha
add
sub
xchg
inc
cmp
add
cmpl
inc
add
xor
pusha
add
ret
dec
sub
aam
add
push
and
lret
push
pop
arpl
xchg
sbb
fmuls
sbb
mov
scas
dec
dec
lret
pop
fcmovu
std
jae
mov
adc
cmp
jmp
int3
out
cwtl
push
push
movsl
cmp
pop
adc
pop
cmp
mov
mov
add
pop
cmp
mov
xchg
int3
cs
arpl
add
stc
push
ja
add
int3
arpl
xchg
mov
adc
jnp
add
sbb
jno
xchg
int
mov
in
int3
test
int
sub
cmc
popa
sahf
hlt
xor
add
movb
sub
xor
stc
dec
imul
push
cmc
shlb
inc
add
xchg
push
add
in
sti
scas
addr16
icebp
and
insb
mov
in
movsl
or
push
out
and
add
fistl
stos
pushf
cmpsl
pushw
add
hlt
aaa
rcll
pop
mov
dec
lret
cmp
popl
rcrl
mov
xor
xchg
mov
aas
sub
fdivs
cltd
dec
clc
sbb
aad
adc
sub
addb
mov
loopne
pop
jecxz
in
outsb
fildl
add
aad
lret
dec
xchg
mov
pop
int3
cli
jge
movb
lcall
rolb
aaa
pop
in
mov
sub
jo
add
dec
add
xchg
loop
icebp
mov
dec
or
or
leave
or
dec
stos
movb
test
push
mov
addb
jmp
movb
add
push
lods
outsb
outsb
cmpsl
daa
mov
mov
pop
aas
pop
add
bound
rcrb
insb
in
fmuls
aad
pop
xor
mov
mov
sarb
sbb
and
addb
cli
cli
lds
fcompl
aas
cmp
bnd
iret
mov
aad
pop
jg
mov
pop
pushf
cmpsb
lods
in
test
scas
imul
mov
push
lret
cmp
xchg
loopne,pn
call
xor
popf
xchg
fildl
popf
loop
pop
mov
outsl
rorl
cmp
mov
fdivs
jns
bound
push
inc
cmp
gs
add
mov
xchg
jno
mov
mov
imul
jmp
outsl
cmc
mov
dec
lcall
filds
jo
imul
in
cli
push
fcmovnb
lock
int3
fdivr
jecxz
jge
cmp
loopne
fisttpll
or
inc
gs
mov
add
push
idivl
mov
xlat
inc
nop
xor
negl
outsb
movsb
mov
mov
push
mov
xor
cmc
lahf
negb
cmc
aas
dec
mov
mov
leave
rolb
mov
outsl
sbb
sbb
xchg
dec
adc
nop
adc
stos
dec
cli
mov
and
push
sbb
fidivl
into
sub
sbb
jg
icebp
pop
cli
or
call
sbb
adc
mov
mov
inc
test
mov
push
adc
mov
loope
sbb
inc
loop
mov
int3
fucom
fbld
gs
add
add
push
dec
out
aad
sub
and
push
dec
add
pop
add
imul
cmp
dec
or
mov
add
rclb
les
push
int3
mov
data16
sub
enter
xor
scas
fldenv
rolb
push
test
stc
stc
adc
dec
lcall
mov
scas
out
push
or
jbe
jle
xchg
and
int3
pop
xchg
shl
and
cld
fidivl
inc
cmc
mov
mov
inc
add
popa
sub
std
mov
push
decb
je
dec
dec
testb
in
repz
mov
ljmp
inc
mov
add
push
insl
sbb
pop
enter
add
movb
inc
add
movb
out
into
lods
test
mov
vmread
adc
mov
dec
push
add
mov
jno
sbb
adcl
fstps
inc
icebp
outsl
sub
adc
add
fisttpll
sbb
pop
dec
push
mov
jl
lahf
scas
lcall
repnz
cmp
decb
mov
mov
xchg
aas
push
sbb
and
insl
in
xchg
jmp
ret
cmp
icebp
ret
pop
test
mov
mov
push
hlt
outsb
ret
inc
push
imul
push
sbb
mov
popf
ret
test
int3
add
aaa
les
sti
inc
add
add
pop
fwait
call
add
adc
pushf
mov
mov
mov
pop
xchg
jmp
add
push
and
and
mov
ficomps
loope
add
mulb
repz
jo
lock
mov
or
jns
andl
js
xor
xor
cmp
arpl
cli
popa
pop
cmp
mull
and
fmul
mov
imul
mov
xor
mov
data16
inc
add
dec
into
jne
loope
jl
cmp
dec
xchg
lcall
add
jbe
mov
xchg
adc
popf
movb
add
cmp
mov
mov
mov
sub
mov
arpl
rolb
fcomp
mov
xchg
hlt
lods
lds
int3
mov
push
loopne
adc
xchg
pusha
add
pushf
pop
sub
dec
sub
nop
les
cmp
pop
pop
xchg
mov
roll
rolb
adc
add
inc
add
dec
mov
jmp
stos
iret
shll
mov
das
or
dec
cmpsl
rcrl
and
fcoms
add
lods
inc
add
cmc
ja
push
pop
fidivl
rcr
cmpl
cmp
out
add
jnp
into
das
dec
enter
or
out
add
add
mov
push
push
inc
add
jmp
inc
movsl
pop
int3
ljmp
movsb
xor
push
imul
add
int
and
idivl
pop
nop
lcall
xor
mov
lcall
mov
mov
xchg
jns
aas
xchg
pop
push
push
add
dec
jmp
mov
fldenv
add
fisubs
fsubs
repz
les
leave
lods
stos
jae
loope
stos
dec
dec
out
xor
hlt
mov
scas
out
out
xchg
xor
sti
or
iret
push
addr16
xor
mov
add
adc
xor
into
lods
addb
arpl
out
and
addb
push
fists
dec
sub
add
jmp
dec
pop
out
sbb
mov
lds
decb
sahf
push
sbb
pop
push
loopne
xchg
jge
sbb
in
inc
add
lods
inc
add
ljmp
xlat
shlb
add
rolb
ds
pushf
jo
push
add
sbb
xor
addb
mov
cmpsb
xor
or
add
loope
add
jg
lcall
ss
pop
mov
dec
shll
mov
xor
push
pop
sub
mov
ds
jne
test
sbb
ret
jo,pt
lods
rolb
cmp
outsl
aam
dec
lods
out
lock
cmp
das
pop
jge
jp
adc
add
cmp
sbb
mov
mov
mov
sahf
mov
add
cmc
adc
cmpl
cmp
dec
hlt
mov
insl
hlt
cmp
scas
xor
imul
lods
xchg
cmpsl
mov
mov
stc
mov
addb
popa
adc
add
jbe
ficomps
or
jnp
ja
and
mov
test
in
or
dec
mov
test
add
gs
hlt
mov
stos
and
xchg
and
jge
mov
mov
fsubrp
insb
dec
loope
push
mov
cmp
movb
jp
jno
xor
pop
mov
jl
mov
enter
jmp
sub
mov
test
mov
add
aad
testb
out
mov
push
sub
clc
mov
inc
adc
pop
and
pop
stc
mov
ds
dec
sbb
xor
sub
mov
ret
out
mov
out
add
insl
mov
or
popa
int
test
test
addb
push
jl
mov
lods
fimull
mov
mov
add
rcrb
setbe
lfs
or
es
cmpsl
sbb
and
jb
int
xchg
mov
and
mov
jnp
test
cmp
jbe
or
add
fs
bound
out
divb
adc
push
out
sbb
or
sbb
inc
ljmp
bound
data16
sti
pop
movsl
ja
add
mov
pop
jb
stos
xchg
roll
xor
add
das
inc
subl
xchg
sub
icebp
xlat
xor
and
jb
adc
mov
add
add
sub
movsb
cmc
mov
lcall
sub
out
outsb
cmp
ds
fnstsw
out
int3
andl
sbb
pop
sub
leave
clc
lcall
call
aas
imul
fisubrl
and
out
xor
xchg
jle
sbb
push
dec
push
cmp
test
adc
add
cmp
in
adc
add
xchg
in
data16
jbe
popa
movsl
cli
ljmp
cmp
iret
pop
jmp
pop
ljmp
or
fdivrl
and
loopne
divl
and
add
scas
pop
out
add
movb
add
mov
or
add
ret
pop
bound
jmp
jns
cli
and
in
fnstenv
or
cwtl
in
xchg
test
fidivs
jg
push
adc
iret
stc
lock
xlat
in
es
push
sbb
or
inc
add
imul
and
out
jp
sbb
sub
sbb
lcall
fs
mov
jl
jnp
jnp
jo
push
rcrl
adc
adc
inc
outsb
fwait
fs
mov
test
sbb
ljmp
jns
sub
cmp
add
dec
iret
or
adc
xlat
cmpsb
adc
and
fdiv
cmp
mov
flds
add
ja
cmp
loope
arpl
pop
repz
aaa
popl
push
push
add
ja
and
fdiv
repnz
add
pop
mov
add
adc
sub
inc
add
mov
jecxz
sub
call
rsm
mov
xor
sbb
add
sub
mov
loop
jnp
daa
mov
add
js
add
pop
inc
add
iret
xchg
sti
das
leave
jmp
add
cmp
fidivrl
add
mov
sub
or
aas
pop
inc
out
arpl
add
fcoml
jle
jl
adc
sub
push
lods
ds
movsb
lahf
adc
pop
movb
or
xor
add
mov
or
add
cmp
into
xchg
pusha
add
enter
xor
inc
add
inc
add
aaa
and
in
pop
add
cwtl
xor
fdivr
dec
test
lods
or
leave
std
pop
popf
repnz
and
dec
add
pop
popa
ret
push
out
clc
filds
add
outsl
cmp
es
mov
cmp
jp
push
rolb
aaa
lock
push
cmp
add
and
adc
mov
ss
sub
lods
inc
add
xor
repz
add
add
lods
fdivrl
cld
mov
push
adc
cli
ret
das
inc
add
and
repnz
add
add
or
je
je
mov
push
int3
aam
add
out
mov
pop
jne
shld
adc
mov
mov
push
push
push
mov
test
jnp
jmp
mov
xchg
mov
dec
out
lcall
push
xchg
sbb
add
push
bndstx
aas
inc
cltd
and
cltd
push
dec
pusha
add
add
scas
sub
std
hlt
dec
jle
and
xchg
rolb
daa
fsubrl
mov
je
add
insl
jne
test
fisubrl
push
lea
pop
ds
xchg
lret
push
sub
cwtl
rep
adc
imul
add
mov
xor
outsb
std
or
mov
push
clc
xchg
aam
stc
rolb
add
je
jg
lea
fbld
add
sbb
rcrl
call
pusha
add
sbb
xor
dec
add
xchg
daa
or
add
fimull
out
mov
stos
test
cmp
scas
sahf
fcoml
out
icebp
cmp
ja
adc
adc
inc
add
sahf
lcall
add
dec
addb
cmp
mov
cmpsb
jns
dec
aaa
repnz
or
cmp
cmc
in
xchg
test
scas
repz
leave
add
outsl
into
mov
add
lock
and
xor
in
xor
add
pop
dec
sbb
int
pop
cmp
xor
push
inc
es
add
mov
es
add
cld
shrl
ss
jbe
add
test
lea
xor
pop
jbe
aad
xor
shlb
inc
add
mov
and
mov
inc
js
add
sub
pop
mov
mov
add
out
rorb
pop
out
inc
add
adc
movsl
fildll
pop
xor
push
cmp
push
xor
mov
bound
add
ss
sub
mov
or
cs
jbe
and
sahf
imul
pop
dec
inc
movb
fimuls
arpl
fwait
popa
jecxz
add
test
add
addr16
or
mov
sub
push
push
mov
sbb
sbb
and
xchg
movl
adc
addb
mov
mov
inc
cmc
xchg
in
xchg
push
movsl
popa
fisttps
add
dec
mov
dec
icebp
pop
sub
dec
mov
out
sarb
movb
add
stc
push
lahf
test
aas
adc
fidivl
add
ds
add
iret
pusha
add
mov
fstps
int3
sbb
das
pop
push
cli
xchg
mov
or
out
jo
aad
jo
add
ret
sbb
clc
jns
and
and
cmp
sub
js
dec
dec
push
add
pop
hlt
int3
dec
mov
xor
xchg
insl
xchg
xor
push
insb
mov
xchg
pusha
add
test
and
js
xchg
inc
stos
inc
add
add
das
int
cmp
cmpsl
mov
and
xchg
fimuls
fucomp
sbb
ficomps
shll
pop
jae
xor
mov
iret
mov
vandnpd
ret
pushf
addb
xor
iret
jp
pushw
cmp
add
jns
cwtl
sbb
das
movb
xchg
adc
push
sub
pop
inc
add
add
les
pop
or
mov
xorl
mov
aas
sub
xchg
loopne
ficomps
cmpsb
stos
push
hlt
jnp
mov
mov
add
add
jp
stos
adc
cmp
jp
add
add
stos
and
add
sub
jecxz
leave
jno
cmp
lds
pop
inc
cmp
pop
dec
sub
outsb
rcll
jp
das
addr16
stc
aad
std
cs
mov
and
push
add
dec
scas
xchg
or
cmp
cwtl
mov
sub
mov
outsl
pop
movsl
add
add
add
stos
mov
mov
mov
add
test
scas
hlt
push
scas
jg
call
mov
cmp
add
shll
jle
xchg
jmp
ficompl
push
sub
xorl
pop
jl
xor
inc
mov
icebp
and
hlt
ds
stos
sub
and
pop
sbb
andl
mov
mov
lret
lahf
int3
iret
es
das
xchg
addb
nop
sbb
sub
jbe
cmp
add
inc
jae
mov
in
xchg
test
or
sbb
je
into
in
lds
inc
aam
daa
adc
clc
mov
fstpl
fwait
dec
and
leave
testl
sub
ds
add
popf
and
icebp
out
xchg
insl
aaa
aas
pop
or
dec
xchg
rcll
fs
loope
out
mov
pop
xor
shll
into
aas
in
gs
sbb
mov
and
ret
xchg
or
pop
enter
or
add
add
push
sbb
jo
jmp
push
pop
xchg
lret
mov
push
jl
xchg
cli
cmp
popf
mov
add
inc
jns
testb
push
cli
inc
add
mov
mov
mov
sub
aam
dec
shrl
stos
pop
aas
cmp
or
add
sarl
sbb
mov
mov
add
mov
loopne
test
add
push
sub
add
mov
add
adc
mov
and
lret
movsl
mov
and
push
imul
push
add
cmpsb
xor
add
mov
inc
add
adc
loope
cmp
cwtl
push
ficoml
fidivrl
fstl
inc
push
ds
es
cmp
std
xlat
rcr
mov
add
pop
jecxz
dec
rcll
jae
jl
mov
aas
jle
popf
jle
lods
lds
fcomps
testl
and
add
add
xlat
in
rolb
inc
add
sub
adc
repnz
xchg
pop
push
fs
xchg
lds
enter
add
sbb
push
dec
mov
stos
sub
push
add
aad
inc
add
test
lds
add
pop
lods
inc
xchg
scas
int
and
int3
lock
das
in
lcall
out
bound
fwait
xchg
scas
mov
mov
jmp
iret
js
pop
push
pusha
add
adc
mov
out
dec
imul
dec
leave
mov
add
jns
lods
repz
flds
add
add
add
in
shll
imul
lahf
movsl
and
sbb
int3
mov
push
fmull
and
decl
call
cmp
cmp
add
ja
cmp
repnz
push
fcmovnb
add
push
sbb
mov
lods
int
cmc
enter
loop
arpl
inc
add
push
loopne
and
mov
aad
testl
jg
out
sub
pop
out
int3
in
mov
aad
sti
ret
subl
push
xchg
or
stos
cli
mov
aaa
push
sbb
cmp
jns
pop
jne
nop
int
push
test
adc
enter
push
pop
pusha
add
jo
inc
mov
add
lock
push
cwtl
js
xor
fcoms
aam
aam
stos
scas
fcoms
test
or
sahf
ficoml
xor
pop
es
add
cmpsb
je
xchg
inc
popf
mov
inc
add
cmp
mov
mov
add
jp
dec
sbb
sub
xlat
or
imulb
push
pop
fnsave
xor
mov
mov
dec
and
add
xchg
les
sarb
iret
jmp
mov
mov
mov
outsb
dec
sub
xchg
fnstcw
cmp
dec
mov
jae
int
add
or
xor
sub
jle
add
lock
pop
inc
add
cmp
add
fsubrl
lods
xchg
pop
xchg
or
xor
add
dec
insl
aaa
fbstp
jo
movsl
sub
xchg
inc
add
data16
rol
imulb
dec
push
jno
mov
popa
xchg
out
sbb
dec
add
sahf
shll
mov
xor
mov
lahf
sar
bound
xor
mov
cmp
add
outsb
xchg
and
fs
push
repz
aas
jns
pushf
fsubrl
jnp
lret
adc
and
jl
push
leave
sbbl
cmp
inc
add
adc
jnp
and
mov
jecxz
mov
mov
inc
sub
adc
and
ss
cmc
popl
and
xor
aam
pushl
rcl
dec
dec
lret
lret
out
inc
add
push
lock
imul
add
sub
cmp
out
jle
xlat
cmp
mov
dec
dec
out
push
std
xor
das
xchg
xchg
xchg
jne
add
add
add
ds
orl
adcl
push
add
les
rorl
push
mov
movsb
test
pop
pop
mov
adc
std
lods
mov
aaa
repz
jecxz
push
out
adc
mov
sub
add
pop
adc
sbb
das
pop
mov
nop
repz
add
mov
js
or
bound
clc
jno
xchg
bnd
push
push
ds
lods
testb
and
inc
xchg
or
mov
sbb
pop
mov
aas
and
data16
iret
push
ret
push
mov
sbb
incb
push
fcmove
push
rcrl
mov
lcall
out
and
cmp
or
add
cmp
sbb
shrl
lock
cli
add
pop
jle
int
add
add
test
cmpsl
cmp
lret
cmp
in
jno
add
roll
sub
mov
add
rcll
add
mov
out
sub
pop
je
xchg
movb
xchg
sbb
jnp
gs
mov
jmp
dec
mov
imul
xor
decb
xor
pop
sbb
xor
movsb
sbb
mov
sahf
loopne
andl
push
mov
xchg
dec
ret
add
lock
mov
add
push
shll
or
negb
push
xchg
hlt
inc
iret
and
mov
add
out
repz
inc
cwtl
shll
xchg
push
test
popf
test
imul
sbb
sub
ljmp
fwait
mov
ret
push
insl
xor
pop
push
les
or
cmp
sub
movb
xchg
mov
cmp
xchg
addb
out
xchg
jb
push
mov
mov
pop
loope
mov
fadd
sarl
mov
add
dec
jl
mov
add
popa
in
hlt
or
movb
xchg
pop
xor
bound
push
rclb
les
fnstenv
rolb
cmpsl
stc
and
out
lds
adc
xchg
mov
sbb
push
push
adc
dec
fadds
add
mov
xor
dec
sbb
push
insl
xor
xlat
lcall
add
adc
jmp
sbb
cmp
icebp
cmp
pushf
and
imul
insl
adc
add
mov
add
xor
jge
lock
inc
add
pop
and
push
es
push
add
add
pusha
add
and
sbb
int
xchg
dec
push
insl
mov
in
jae
loop
in
push
dec
sarl
mov
sbb
pop
gs
push
sahf
fbstp
add
push
aad
cmovb
mov
sub
add
add
add
lods
pop
movsl
sub
sbb
pslld
sahf
push
pop
xlat
loopne
or
cltd
inc
add
pushl
lods
sbb
hlt
stos
fs
pop
pop
jns
adc
arpl
ljmp
mov
push
inc
add
add
xor
mov
cmp
add
fnstenv
jg
cmovnp
pop
pop
mov
sbb
rcll
mov
dec
mov
js
aam
push
add
xchg
sarl
out
out
cld
jns
dec
fisubl
pop
in
and
xor
xchg
add
jge
ljmp
lcall
fcomps
adc
aad
and
aad
add
xor
inc
add
js
outsb
or
enter
inc
add
mov
mov
imul
lcall
dec
add
in
lret
insl
sbb
mov
add
push
add
push
jmp
pop
icebp
out
add
jl
xchg
ds
xchg
jmp
sub
mov
arpl
andl
push
jl
data16
out
add
push
or
roll
dec
mov
jl
inc
add
jb
add
leave
andl
mov
shr
or
or
lea
xchg
mov
outsb
iret
repnz
jnp
arpl
jbe
outsb
fwait
jmp
rcll
arpl
arpl
cmc
fldl
add
mov
into
movsl
and
xlat
lods
jb
cld
call
pop
xchg
int
pusha
add
in
or
adc
sub
mov
push
pop
in
and
cwtl
cmp
pop
jmp
fcmove
pop
jae
fldl
jne
push
pop
fistpll
xor
aad
mov
and
rorb
mov
or
imull
inc
add
outsb
inc
rcrl
jbe
add
add
add
ret
xchg
push
scas
xchg
jecxz
adc
popa
movsl
mov
movsl
jo
xchg
mov
sub
mov
leave
popa
or
dec
and
mov
popa
jo
pop
insb
cs
addb
xor
pop
scas
shlb
leave
leave
jg
jmp
fwait
xchg
inc
stc
lea
add
pop
mov
add
scas
leave
push
popf
mov
inc
add
pop
sub
sbbl
shlb
sbb
ds
fistpll
rolb
dec
or
mov
incb
mov
addl
rorb
cmpsl
ds
push
icebp
leave
push
sub
loope
jmp
lods
sub
add
or
daa
mov
mov
push
xchg
movb
adc
inc
add
in
ds
pop
cli
out
inc
dec
xor
mov
rolb
add
xor
addr16
add
xchg
mov
jg
pop
data16
push
add
cmp
pushl
add
mov
xrelease
loope
lds
mov
daa
je
add
add
add
rolb
ret
sub
sti
sahf
jne
nop
or
mov
sbb
in
xchg
push
aam
add
aaa
in
and
mov
add
push
test
cmp
or
pop
pop
push
scas
xchg
pop
mov
ret
lock
sub
add
out
xor
jne
aaa
mov
in
mov
dec
sub
rolb
outsl
mov
call
fdivrl
insb
addb
sub
shrb
xor
push
add
xchg
jns
movsl
xchg
mov
outsl
pop
test
loopne
add
adc
add
inc
add
or
mov
sub
add
ljmp
sbb
sub
sbb
add
sbb
btr
dec
outsb
add
test
push
or
add
mov
jmp
dec
pop
sbb
ja
dec
cmp
sahf
lock
test
sub
pop
mov
fwait
jl
dec
mov
sub
scas
or
inc
cmp
or
mov
in
aam
mov
popf
mov
sti
inc
add
addb
stos
mov
dec
ret
jb
add
movsb
hlt
bound
xor
push
jo
fldt
in
cmpl
xchg
dec
push
add
aas
pop
cmc
outsb
push
loope
sbb
sub
ja
add
fsubs
add
pop
and
fimuls
shrb
cmp
add
add
push
inc
add
loop
sbb
or
add
leave
stc
movsl
lock
std
cmp
push
inc
add
in
gs
pop
adc
scas
lfs
pop
mov
mov
xor
add
jne
mov
pusha
add
pop
inc
add
mov
sahf
movsl
rolb
dec
loop
mov
push
push
xor
daa
lods
inc
add
mov
sbb
mov
lock
dec
sbb
bound
into
mov
int
xorl
dec
fdiv
mov
lahf
xchg
sbb
add
jmp
inc
cli
mov
cli
cmovg
repnz
clc
lods
lahf
mov
ror
adc
int
xchg
and
sbb
dec
adc
mov
movsl
hlt
cmc
cmp
add
in
sbb
xlat
movb
idivl
shll
add
mov
arpl
out
hlt
popf
dec
push
mov
ljmp
cwtl
test
dec
pop
test
in
int
jecxz
shl
xchg
inc
add
mov
icebp
inc
add
add
addl
ficoms
cmp
jl
mov
ds
sbb
push
sub
lret
imul
pop
lods
ljmp
inc
mov
sbb
inc
es
lods
xor
or
pop
loopne
mov
jmp
addb
in
add
ja
or
dec
stc
rolb
cld
or
inc
add
pop
call
mov
movb
sbb
lods
cwtl
add
sub
add
jl
pop
mov
add
sbb
nop
lcall
mov
inc
fldt
es
es
cs
add
fists
jb
jno
cli
xchg
leave
out
shll
int
jb
push
mov
dec
addl
xor
fidivs
pop
neg
mov
jle
dec
pusha
add
rolb
movsb
jo
es
cs
add
add
pushf
xlat
rolb
scas
xor
add
xchg
pop
test
sub
push
push
lahf
mov
or
and
add
add
iret
lock
fdivr
rol
add
dec
dec
push
arpl
bound
jns
jmp
add
aad
sti
xor
add
push
movb
add
or
pop
xlat
leave
cmp
add
pop
sub
add
jle
or
add
js
add
js
mov
scas
jnp
inc
add
sub
por
ja
addb
sub
in
cs
push
iret
lret
sub
movsl
lock
mov
add
loope
push
or
jge
out
mov
pop
adc
out
cmpsb
push
xor
cs
cltd
mov
push
ss
fdivr
cmp
insl
ffree
push
push
or
cli
mov
sbb
sahf
lds
cmpsb
xchg
mov
lods
jae
addb
and
cmp
fsubr
sub
rclb
daa
stos
bound
sarl
pusha
add
call
mov
xor
addr16
and
dec
loope
aam
addr16
add
test
add
add
rolb
inc
fs
xlat
jp,pt
lods
lret
dec
imul
push
xor
dec
jae
sbb
cmp
add
xrelease
scas
iret
xor
inc
ljmp
push
lret
ja
popa
sahf
jp
and
mov
xor
loop
lds
ror
leave
sbb
dec
insl
push
sub
into
mov
sahf
in
dec
fdivrl
sbb
test
sub
add
jl
add
fstps
and
or
adc
jae
popa
push
aam
xor
loopne
add
fnstcw
adc
adc
cwtl
movb
rcr
icebp
mov
mov
stc
mov
jnp
ds
aad
cld
das
inc
push
xchg
fmuls
pop
into
sbb
mov
nop
push
add
and
fnstcw
mov
mov
into
es
dec
pop
xchg
cmc
dec
mov
and
cmp
xor
mov
mov
cmp
xor
jmp
sub
dec
mov
cld
lret
lea
adc
and
mov
outsl
nop
iret
in
fbstp
in
xchg
xchg
pop
bound
dec
fsub
mov
xor
push
jb
inc
cli
and
jo
test
mov
add
push
test
stc
dec
nop
fwait
pop
add
add
idivb
push
push
dec
mov
sub
sbb
inc
add
xor
xor
xor
sahf
cmpsb
in
lea
jmp
mov
shl
cs
add
jae
popa
dec
inc
add
mov
fxch
mov
add
add
leave
push
dec
outsl
data16
xlat
out
subl
fs
jl
or
sub
jl
xchg
and
addb
xor
mov
dec
iret
mov
push
pop
decl
repz
mov
pusha
add
mov
adc
push
add
ja
loop
mov
dec
ret
mov
ds
pop
inc
add
mov
jb
int3
jg
out
ss
mov
dec
dec
dec
pop
jne
dec
jecxz
or
lahf
mov
sub
pop
inc
add
cmc
out
jecxz
iret
mov
jnp
add
mov
inc
add
js
pop
mov
pop
cmpsb
pop
lcall
mov
xor
enter
add
int3
ss
sub
adc
mov
add
pop
imul
das
xlat
addb
jg
add
mov
cmp
ja
add
addb
pop
pop
xor
push
arpl
mov
lds
or
mov
and
std
cli
mov
xor
popf
cli
data16
daa
fdivrs
aas
ss
or
dec
lcall
mov
jp
test
mov
inc
add
add
push
sbb
loop
mov
xor
and
clc
call
cmp
dec
inc
inc
add
and
repnz
xchg
add
lods
insb
in
out
xchg
mov
push
xlat
idivl
mov
jecxz
shl
inc
add
daa
movb
mov
pcmpeqb
rcrl
xchg
shll
mov
lcall
movsb
sub
rolb
into
rolb
dec
fadd
add
addr16
ljmp
insb
and
add
and
xchg
lret
addb
sub
add
or
and
mov
dec
stos
ret
loop
mov
bound
imul
add
lods
ljmp
lods
subl
and
fstps
fsub
out
int3
mov
repz
jecxz
add
sub
pop
cmpsb
movsb
lret
icebp
into
or
and
inc
add
pop
push
push
popa
addr16
mov
xor
cld
jp
sbb
xor
jg
adc
xor
lret
push
inc
push
jae
sub
dec
pop
lock
icebp
cmp
lods
sahf
sbb
loope
mov
sub
adc
add
cld
arpl
and
or
ja
movb
es
add
pushf
ja
sarb
mov
sbb
popa
icebp
cmc
push
aas
inc
pop
xchg
xor
dec
mov
mov
sub
rolb
dec
imul
es
insb
push
fstps
and
add
mov
jg
xor
xor
fldcw
jne
sarl
fsubs
cmp
add
fsts
movb
sub
stos
inc
push
cmp
jmp
jne
loop
jo
cmp
and
fsub
mov
add
ljmp
imul
add
dec
fdivrl
inc
add
xor
push
and
pop
and
out
movb
sbb
mov
jo
dec
repnz
outsb
inc
pop
push
mov
loopne
pop
sbb
testl
and
subl
and
mov
and
cwtl
addb
xor
out
jp
or
push
fadds
aam
test
adc
jbe
mov
fistpl
stos
xchg
fistl
ret
out
and
inc
addb
add
xchg
mov
push
popf
addb
aaa
adc
xchg
push
xor
mov
sub
movb
lahf
repz
test
ss
sarb
lods
bound
lods
push
dec
lret
xor
cmpsb
inc
pop
or
mov
mov
dec
clc
pop
and
in
jnp,pt
test
repz
xor
mov
scas
lret
adc
push
sarl
sqrtps
add
fstpl
inc
pushl
stos
movb
xor
dec
sub
adc
or
mov
popa
add
mov
loopne
rolb
lret
cmp
shl
xchg
and
das
jmp
in
cmpsb
xchg
add
mov
loope
jnp
lods
sahf
xchg
xchg
push
das
fistps
mov
jmp
add
or
pop
mov
xchg
pop
jmp
loope
push
out
fadds
pusha
add
add
add
add
lds
mov
es
jge
mov
mov
and
lock
inc
add
pop
inc
add
pop
and
add
clc
mov
add
cld
mov
leave
pusha
add
add
dec
and
push
cs
scas
xor
dec
addb
gs
jmp
stc
inc
add
bound
adc
lret
add
jmp
push
popa
cs
daa
addb
scas
and
push
and
cld
daa
push
rcll
jmp
test
or
jbe
gs
int3
push
xchg
cmp
fs
insb
cld
in
pusha
add
xor
mov
cmp
loop
addb
dec
out
aas
cmp
and
mov
mov
jb
filds
popa
mov
outsb
cmp
loope
add
add
dec
stc
lret
cmp
xchg
loope
add
or
add
xchg
pop
dec
stos
dec
xlat
cmpsl
mov
leave
xchg
push
add
lods
bound
push
sbb
in
inc
push
mov
pop
mov
sub
inc
add
popf
mov
in
pfcmpge
movb
xor
cmp
btr
pop
inc
stos
insb
test
cmp
imul
mov
sub
idivl
mov
and
adc
jne
add
mov
cmp
add
jbe
mov
dec
pop
jmp
outsb
pop
shrl
jne
cmp
and
fbstp
push
xchg
xchg
or
pushfw
fldcw
mov
dec
stos
aad
push
xor
sub
adc
roll
jge
xchg
mov
add
test
inc
xor
sti
jb
imul
daa
push
les
les
addl
xchg
mov
add
roll
out
fsubr
icebp
mov
jl
movsb
cmpsl
enter
sub
sbbl
jg
add
ds
movb
mov
push
cltd
pop
bound
enter
mov
sahf
out
mov
in
mov
imul
add
iret
sbb
out
fsubrs
imul
cmp
inc
add
mov
add
lock
lds
insb
add
inc
int3
sub
repz
add
add
pop
cwtl
pop
out
push
pop
fsubr
or
cwtl
or
cmp
cmc
xor
or
repnz
addl
push
sub
imul
add
push
sub
push
and
fildl
mov
mov
mov
popf
nop
loope
aam
inc
aas
faddl
stos
or
cwtl
or
imul
cmc
mov
mov
lods
fcomps
add
jnp
in
pop
repnz
jecxz
or
cmp
add
insb
int
imul
and
lock
mov
inc
add
adc
aas
xor
cmp
fimuls
mov
mov
pop
mov
push
test
push
lds
mov
xchg
int3
out
dec
sbb
dec
adc
daa
jae
es
or
add
popf
sbb
mov
add
mov
lcall
inc
mov
xchg
mov
test
add
test
movb
lock
mov
roll
add
and
and
and
add
clc
int
out
sbb
fisttps
in
xchg
or
xchg
pop
xchg
pop
mov
adc
pop
mov
pop
xor
sbb
insl
mov
add
sbb
adc
add
cmp
ljmp
xchg
add
je
push
or
lahf
roll
xchg
pop
jne
fcmovb
cmp
push
mov
mov
push
repnz
pop
fs
addb
sbb
movb
out
lahf
sahf
dec
or
mov
pop
push
add
mov
repnz
add
les
jg
cli
pop
es
rolb
out
jbe
imul
mov
pmullw
fldl
cmpsb
addb
or
loop
xlat
in
jo
mov
add
ljmp
mov
cli
flds
mov
add
fdivs
xor
cltd
cld
mov
add
xchg
dec
dec
mov
mov
sbb
ret
sub
mov
dec
inc
int
mov
je
repnz
shll
lcall
add
jb
sbb
adc
rorl
add
ficompl
test
jp
fcmovne
xchg
or
sbb
lret
push
push
push
adc
sbb
int
mov
push
aad
mov
sarb
add
mov
imul
jmp
mov
adc
cmp
ficompl
and
pop
scas
xor
int3
mov
xchg
push
push
add
andl
sub
mov
stos
aas
scas
stc
icebp
ja
out
push
out
jno
cmpsl
xor
mov
jge
arpl
mov
add
pop
push
movb
shlb
xchg
in
repnz
or
adc
and
aad
mov
iret
int
add
mov
xor
cmp
fdivrs
ds
outsb
and
push
and
mov
fdivr
xchg
rolb
add
popf
adc
loope
dec
int
pop
test
gs
add
inc
add
fsubrl
dec
movsb
stos
int
cmpl
xor
mov
popa
sahf
mov
sub
jb
add
int
ja
sbb
std
or
ds
mov
sub
cmp
cmp
aam
pop
mov
mov
aam
mov
xor
inc
add
push
cmpsl
pop
mov
cli
jp
in
pusha
add
pushf
fs
nop
lods
sub
jns
push
arpl
out
insl
dec
pop
int
jnp
dec
pop
mov
mov
mov
cmp
dec
ss
ret
daa
dec
xchg
lods
mov
cwtl
lock
mov
add
loope
pop
ret
add
dec
fsubl
repz
push
push
aas
and
movsb
cs
push
pushf
or
loope
sub
fsubrp
cld
sub
push
cli
loop
enter
add
outsb
loopne
loopne
rorb
jp
or
out
push
into
xchg
sub
push
test
subl
inc
add
ret
xchg
cmp
pop
jns
dec
mov
mov
and
xlat
lahf
loope
sbb
and
mov
cmp
mov
clc
push
and
imull
mov
or
pop
mov
cmc
fidivl
xchg
and
test
jbe
loopne
add
inc
add
push
add
and
es
test
sub
dec
dec
mov
mov
dec
pop
insb
ficomps
cmpsl
addb
fldt
std
outsl
mov
pop
mov
xchg
addb
and
mov
dec
xorl
loopne
insl
divb
push
dec
inc
add
xchg
cmp
bound
cmpsb
cwtl
je
push
cmc
mov
jno
mov
xchg
add
popa
and
cld
adc
sahf
in
mov
outsl
cmp
xchg
je
mov
aas
sub
sbb
add
and
mov
xor
mov
nop
test
sbb
or
push
dec
cltd
sbb
movsl
fcom
mov
add
inc
pop
add
aaa
cmc
test
lds
popf
dec
mov
imul
shl
out
and
mov
imul
out
ja
add
xchg
mov
pop
mov
insb
xor
mov
icebp
add
or
test
dec
ret
leave
mov
movsb
leave
xor
add
hlt
insl
fnstsw
cmpsb
insl
movsb
sub
mov
or
adc
clc
mov
add
into
xchg
int3
rcrl
rclb
sub
adc
add
aad
lock
xor
mov
mov
mov
fimuls
or
push
stos
sbb
mov
add
jmp
in
or
push
test
lcall
ret
pop
fnstenv
dec
xchg
insb
adc
lret
mov
push
add
addb
cmp
add
jmp
rcrb
inc
insl
lea
iret
mov
cmp
mov
outsl
xor
stos
test
sbb
lods
add
aam
in
insl
loopne
adc
sbb
frstor
xor
adc
jbe
add
fsts
sbb
rolb
rorb
clc
xor
or
movl
bound
xor
pop
dec
mov
scas
xchg
je
jbe
pop
leave
xor
lcall
push
testl
divb
cmp
das
add
test
lds
or
jbe
mov
lret
roll
out
xor
push
inc
add
dec
sub
pop
outsl
cmpsb
fstpl
lods
mov
jg
or
je
sub
mov
jmp
add
mov
sbb
sub
xor
es
pop
shll
out
mov
out
and
ret
loop
imul
insl
ja
or
shrb
lock
test
dec
push
mov
aaa
call
test
clc
sbb
mov
pop
mov
and
xchg
fstpl
fstps
int
or
in
fsubrs
adc
lods
mov
out
mov
fdivrs
jne
repnz
add
jne
mov
and
add
pop
imul
add
jae
jb
shlb
pop
testl
cltd
mov
out
add
rclb
cmpsb
adc
mov
fcmovne
pop
shlb
call
in
into
xor
mov
pushf
sub
and
add
out
jnp
cld
add
pop
add
dec
lock
out
ja
popa
xchg
movsb
shlb
adc
cmpsb
cmp
add
add
mov
xor
xchg
jo
push
repnz
repnz
std
jl
and
add
loope
inc
jnp
cmp
cmpsb
sarb
push
lahf
cltd
addb
movb
bnd
sub
add
pushf
test
add
call
cmp
or
sti
nop
and
or
pushf
pushf
pushf
sahf
sub
push
add
and
adc
aas
push
inc
add
imul
xlat
sub
jmp
adc
addb
cltd
cmpsl
push
add
sub
std
adc
scas
js
les
lret
pop
xchg
fcompl
mov
aas
sub
mov
pop
lahf
scas
pop
xchg
add
and
pushf
repnz
mov
notb
outsb
xchg
sub
push
cltd
jle
xor
ljmp
sub
loop
cmpsl
xchg
aas
mov
mov
push
cmpsl
jl
scas
int
add
clc
std
popl
and
loopne
jno
cmpsl
sbb
lods
jb
stos
decl
or
push
add
add
js
add
dec
push
clc
cmp
inc
lret
push
push
xchg
pop
mov
into
ret
mov
mov
or
addb
dec
inc
add
pop
movb
or
aam
inc
add
ret
das
mov
add
cmpl
fcomps
int
push
add
dec
ljmp
mov
popa
mov
sarl
nop
clc
das
push
popa
pusha
add
mov
aaa
lcall
or
or
sub
jo
add
xor
mov
cmp
mov
xor
fstpt
ljmp
in
in
jg
push
aas
inc
add
xchg
xor
mov
mov
mov
push
enter
xchg
inc
add
push
xchg
test
sahf
dec
sub
inc
pop
push
add
addb
sbb
add
je
jb
mov
jbe
stc
inc
add
jmp
jp
jl
aam
and
push
ja
mov
mov
or
add
scas
cld
jecxz
adc
sub
in
xchg
mov
add
add
es
nop
enter
inc
pop
out
xchg
pusha
add
in
add
pop
in
jnp
cmp
add
out
ja
out
int3
mov
push
mov
popf
push
mov
push
outsl
cmc
int
xchg
repnz
testb
hlt
jmp
aas
add
add
icebp
add
and
lea
push
imul
sub
mov
xchg
mov
call
add
mov
push
add
mov
add
sti
fstpl
add
lds
lret
call
mov
popf
mov
ds
ja
leave
pop
sub
shrl
jo
sbb
adc
lret
add
and
jne
and
inc
add
cmpsb
outsl
ss
push
add
dec
sub
mov
mov
push
cli
ror
push
push
mov
push
clc
sbbl
inc
ret
stos
jg
rolb
in
cld
push
addb
mov
mov
push
lret
xchg
rorb
cmp
cli
loope
push
add
jecxz
pop
out
mov
test
addr16
push
inc
add
int
cs
rcrl
xchg
aas
dec
in
pop
mov
imul
jle
and
ret
mov
xchg
mov
sub
inc
add
lds
clc
xchg
pop
mov
scas
pop
and
imul
jae
inc
add
iret
mov
push
outsb
jbe
cmp
pop
and
jl
fdiv
clc
scas
outsb
out
sub
jae
ret
and
pop
dec
adc
cld
stos
mov
push
pop
lret
scas
popa
out
fisubrs
inc
xlat
rorl
pop
jl
sbb
mov
push
sub
pop
sahf
dec
mov
sahf
pushf
out
add
gs
push
jp
push
dec
loopne
mov
add
add
mov
movsb
push
mov
data16
clc
fidivs
add
mov
jl
dec
xlat
jne
jle
pop
ret
pusha
add
dec
push
or
pop
jno
fsin
inc
add
mov
push
popf
mov
aaa
inc
xchg
shlb
pop
pushf
rorb
sahf
pop
xchg
cmp
lock
pop
adc
mov
lahf
cmpsb
add
push
adc
and
mov
push
clc
xor
cld
push
fwait
notb
out
xchg
and
lea
xchg
fsubl
add
jle
std
and
sub
and
pop
mov
fwait
xor
movsb
cwtl
sbb
add
or
dec
mov
andl
pop
push
sub
pop
scas
test
add
lret
add
out
inc
add
mov
aam
add
add
insl
xchg
cmpsl
jo
sti
jecxz
fidivrs
lcall
call
jl
jge
enter
mov
add
lods
stc
outsb
push
rcl
cmp
jg
xchg
adc
or
xor
sbb
xlat
xchg
xlat
enter
rolb
aam
and
mov
movb
in
add
jb
movb
fisubrl
xor
add
cmp
and
mov
mov
into
xlat
dec
clc
ds
int3
sbb
xlat
or
mov
jecxz
pop
xchg
inc
add
xor
push
adc
push
xchg
in
jmp
add
popa
xor
mov
add
sub
cmp
icebp
outsb
in
push
add
add
inc
add
mov
mov
test
movsl
rcl
ds
inc
mov
add
add
inc
call
mov
cltd
push
or
aam
mov
loop
and
add
pop
and
arpl
add
add
rolb
out
lock
or
or
js
mov
in
jg
icebp
mov
mov
add
loopne
xchg
out
mov
fst
fbld
pop
xchg
fdivs
add
inc
add
ret
in
dec
das
cmc
adc
das
pop
cwtl
aas
addb
mov
adc
sahf
adc
dec
test
and
mov
cmp
int
inc
add
mov
fimull
loop
loope
into
cmp
add
in
dec
test
insl
push
les
pushf
inc
add
add
sahf
ffreep
add
or
pusha
add
add
mov
add
adc
pop
enter
jecxz
loopne
out
adc
pushl
pushf
call
push
mov
addb
mov
mov
dec
js
sub
sub
je
push
fsub
jns
and
pop
jbe
sbb
add
xchg
add
fdivrs
xchg
lahf
fdivr
mov
pushf
push
dec
mov
cmp
int
cmp
dec
push
stc
sub
xchg
sahf
dec
pop
jne
jae
repz
jp
lds
dec
in
in
imul
mov
iret
mov
cmpsl
daa
es
xchg
cmc
or
imul
jle
xor
cli
test
pop
mov
push
jp
data16
ret
lret
imul
xlat
mov
fcomi
mov
fiaddl
mov
nop
movsl
sahf
pushl
insl
xor
add
mov
add
scas
jne
sahf
xor
sbb
cld
add
jae
sub
cmp
aas
sbb
add
cltd
fidivs
rolb
inc
add
jnp
mov
iret
inc
cmp
mov
repz
into
xor
sbb
jmp
inc
popf
iret
add
loop
fcmovne
fbstp
push
mov
fisubs
add
add
or
cmovp
xchg
inc
add
iret
and
nop
mov
cmpsb
and
fs
in
pop
push
mov
insb
jl
push
lret
xor
push
xchg
mov
add
cmpsl
cwtl
bound
push
js
ds
fwait
dec
dec
jp
push
in
in
pop
sar
test
push
popa
lahf
push
dec
sbb
aam
add
xor
fs
stc
and
add
scas
lock
push
mov
addb
add
pop
xor
xor
sbb
sub
shrl
aad
xchg
icebp
jo
adc
inc
add
mov
fwait
js
mov
sbb
daa
sahf
ret
nop
ret
addb
enter
add
pop
nop
push
xchg
mov
jnp
les
push
rolb
lock
dec
daa
jns
cmc
push
push
and
xlat
or
mov
add
inc
add
push
mov
test
fcmovnu
inc
add
mov
push
push
lahf
loop
lods
ret
ss
mov
aam
in
jbe
jmp
xor
add
inc
hlt
aad
dec
bound
dec
clc
cltd
fimull
stos
mov
push
xor
add
dec
jne
push
xchg
xor
add
jle
sahf
addl
imul
decl
or
gs
jno
mov
xor
testb
cmp
stos
adc
add
push
sub
cli
gs
and
or
movsb
add
outsl
out
out
jb
inc
pop
adc
xlat
lahf
lock
sbb
xor
add
movsb
js
pop
mov
sub
and
jecxz
pop
mov
pusha
add
aaa
mov
imul
jle
sub
mov
pop
sbb
stc
jno
dec
jae
repz
ficompl
cmp
fstl
sub
add
adc
in
test
in
add
xchg
insl
xor
sub
rcll
mov
adc
pop
and
test
sbb
mov
xchg
mov
mov
jle
dec
inc
mov
insl
es
dec
ds
clc
pushf
cmp
push
lcall
popa
in
dec
lods
stos
push
mov
lahf
xor
fsubrl
mov
xchg
or
mov
jge
mov
movsb
lret
shlb
add
sbb
push
and
mov
mov
jmp
fs
pop
fcompl
test
fsts
out
cmp
lcall
pop
dec
fpatan
adc
leave
jns
cmp
add
or
jo
shlb
add
dec
les
push
rcrb
push
mov
sahf
inc
add
das
xchg
add
aam
stos
andl
movsb
push
adc
adc
mov
dec
ds
shrb
sbb
lea
xchg
pushf
cmp
cltd
movsl
or
cld
aam
sbb
push
fbstp
daa
jo
xchg
leave
lock
mov
outsb
or
aas
push
popf
mov
cmc
jnp
or
enter
add
jp
jg
xor
lea
or
lea
lock
cli
inc
add
push
add
dec
cltd
loope
pop
xchg
arpl
js
enter
cwtl
xchg
xchg
pop
xchg
scas
pop
js
pop
aas
jge
or
add
jge
add
sbb
and
cmpsb
fnstcw
mov
mov
inc
iret
call
and
lahf
sub
mov
jns
ret
decb
push
add
adc
adc
pop
sub
sbb
shl
mov
jne
add
or
or
rol
daa
xor
stos
sub
mov
xor
outsl
test
add
out
test
or
test
mov
add
les
xor
push
pushf
movsl
nop
test
xchg
imul
addb
ret
sahf
and
addb
add
movb
loopne
out
inc
add
sbb
les
or
sbbl
popa
add
test
jnp
sbb
test
sbb
mov
call
pop
xchg
test
add
dec
lahf
add
inc
mov
sub
cmp
xor
add
adc
dec
xor
notl
test
mov
sbb
mov
mov
ds
dec
movsl
lock
mov
pop
clc
iret
imul
insb
dec
test
xorl
add
jno
pop
xchg
pop
lret
repnz
popa
adc
aam
adc
or
mov
adc
mov
and
mov
addb
test
mov
imull
pop
mov
jle
sbb
jne
lods
pop
leave
pushf
mov
add
mov
and
les
mov
mov
sahf
shll
es
sub
mov
enter
pusha
add
mov
pusha
add
dec
fsubl
jge
jmp
mov
adc
add
or
pop
cmp
cwtl
jmp
jp
out
fildll
fwait
out
dec
and
add
loopne
jle
mov
lcall
add
cltd
mov
aas
add
loop
add
mov
cli
cmc
shl
xor
or
pushf
mov
loope
ds
cmp
push
pop
or
jmp
leave
mov
push
shll
lret
jecxz
ja
mov
pop
adc
push
mov
inc
add
cld
outsl
mov
mov
les
xor
add
call
sahf
push
mov
bound
mov
shll
inc
int3
mov
and
test
or
cs
inc
add
nop
mov
ja
mov
imul
jge
add
add
jmp
inc
add
jnp
into
mov
das
mov
jecxz
scas
fnstenv
xchg
aas
ss
int3
ja
cli
int
lds
pop
psubq
aaa
dec
mov
inc
add
push
in
mov
jno
dec
push
adc
adc
add
test
mov
fdivl
sub
fcompl
dec
cmp
je
pusha
add
imul
stc
test
test
mov
and
rclb
mov
out
je
add
scas
addb
fadd
add
add
rcll
pushf
sti
xchg
je
xor
mov
xor
mov
jmp
pop
lret
mulb
repnz
iret
call
mov
mov
int3
cmc
cld
fwait
mov
push
test
call
mov
popf
sbb
mov
hlt
cwtl
std
push
mov
jge
push
inc
mov
dec
jmp
out
fs
movb
shlb
add
aad
les
cmp
rcrb
fimull
push
push
test
jle
sbb
push
imul
scas
stos
dec
call
push
inc
pop
xchg
inc
or
dec
mov
sbb
movsb
pop
movsl
mov
mov
jae
icebp
outsl
and
add
push
and
mov
loope
pop
adc
add
sti
rdpmc
inc
test
lea
sbb
pop
xchg
mov
int
dec
ljmp
push
test
rorl
xchg
mov
inc
adc
inc
call
test
shlb
shll
fwait
sub
or
in
inc
add
or
or
adc
xchg
push
inc
add
and
ljmp
add
xchg
out
inc
add
rolb
sub
mov
test
repz
push
push
clc
mov
test
add
roll
add
jle
repnz
push
scas
shl
push
sub
lods
jge
dec
nop
mov
sub
jns
add
fs
sbb
movsl
test
or
add
test
mov
gs
mov
jno
icebp
repz
add
call
mov
sub
mov
loop
pop
adc
movsl
adcl
and
fs
add
insl
lret
loope
jmp
inc
add
add
sbb
dec
lods
lahf
das
dec
imul
mov
leave
sbb
inc
add
mov
sbb
adc
test
iret
aad
inc
add
movsbl
data16
xchg
mov
add
inc
add
jmp
aad
adc
or
sub
bound
jns
mov
mov
pop
rolb
add
scas
mov
loop
ret
mov
inc
loope
push
jg
jb
xchg
jns
inc
add
hlt
dec
cld
test
sub
inc
mov
inc
fcompl
xor
clc
out
adc
jne
xor
shll
mov
mov
pushf
addr16
lock
into
sub
movsl
into
push
in
addb
sti
mov
push
fnstsw
jge
mov
add
add
add
adc
pop
in
xor
push
fs
mov
sub
xor
out
icebp
fidivrs
jmp
clc
dec
scas
push
add
out
xchg
dec
cs
xchg
insl
xchg
pop
push
js
addb
push
movb
dec
or
jns
aam
sahf
mov
adc
iret
fmuls
add
cmp
add
add
out
mov
add
mov
daa
mov
adc
lods
icebp
jge
cli
fildll
adc
fwait
loopne
pop
out
fistps
cmpsl
js
aam
adc
call
add
outsb
jge
pop
jbe
add
inc
out
lret
aas
bound
mov
je
mov
dec
mov
fcomip
lahf
pop
mov
add
pop
dec
cltd
jnp
xchg
mov
add
stos
repnz
daa
out
gs
sub
add
les
xchg
outsl
lods
push
pop
or
leave
sbb
outsb
cmp
xchg
dec
mov
mov
jcxz
mov
sub
push
je
in
popa
inc
or
lock
dec
lea
dec
dec
scas
or
add
test
xor
dec
int
inc
lcall
cli
dec
xchg
aas
cld
addb
addb
or
mov
jbe
shll
xor
in
rcrl
ljmp
mov
pop
minps
inc
inc
add
sub
or
jno
and
test
int
xchg
dec
lahf
mov
and
sbb
scas
loope
add
cwtl
gs
mov
adc
fwait
inc
nop
mov
add
adc
ljmp
sbb
bound
icebp
mov
xchg
mov
add
inc
cmp
mov
or
cwtl
pop
mov
sub
adc
in
sbb
xchg
shrb
add
or
mov
arpl
leave
xor
mov
fbld
pop
fistpll
add
mov
and
adc
iret
sub
outsb
sbb
cld
jle
sbb
sub
call
add
daa
push
cmp
cmp
jl
xor
push
jne
push
add
mov
jl
mov
loopne
push
add
xor
cwtl
push
addl
cmc
dec
xchg
call
shl
fs
pusha
add
cmc
jp
pop
cmp
xchg
popa
roll
mov
std
push
test
sbb
pop
cmp
mov
shll
fidivl
shr
int
push
add
out
xchg
xlat
xorl
add
add
stos
add
add
push
add
fdivl
lahf
adc
jns
add
mov
push
popf
jno
mov
mov
add
xor
xchg
pop
inc
add
arpl
xlat
cmp
and
cmc
outsl
fisttpll
adc
cmp
jns
aam
mov
mov
xor
insl
or
jmp
pop
cmp
in
in
les
adc
lods
mov
jnp
inc
add
push
fcmovnu
mov
or
cli
inc
add
sbb
dec
cli
jg
mov
and
cltd
dec
loopne
lods
xchg
addr16
repz
leave
cmpsl
mov
rolb
jg
ss
pusha
add
jae
jno
add
add
add
in
cli
pop
sbb
sub
and
mov
les
pop
insl
ss
jnp
pop
dec
push
insb
fwait
inc
add
add
fsubrl
scas
and
add
jle
mov
mov
sti
aaa
cs
push
add
in
push
mov
mov
xchg
dec
ja
mov
mov
add
sbb
add
out
pop
mov
adc
enter
aaa
pop
push
scas
aam
mov
js
xchg
pop
and
ss
daa
dec
repz
pop
mov
pop
xchg
mov
inc
xchg
xchg
negl
es
push
adc
push
sbb
rorl
stc
xchg
cwtl
lods
lock
cltd
adc
sub
outsb
jo
add
cmp
xchg
xchg
test
jnp
mov
ss
cltd
push
lods
pop
stos
imul
dec
inc
add
mov
je
ds
fprem1
jns
ret
ljmp
mov
add
sub
inc
add
sbb
insl
jg
mulb
mov
mov
stc
inc
cmc
int
mov
ljmp
out
push
sub
out
adc
outsb
xor
mov
inc
add
aas
rolb
outsl
mov
mov
mov
add
add
les
cs
dec
movsb
cmp
add
jmp
add
xor
shll
enter
mov
jecxz,pn
js
pushf
inc
add
shr
adc
lods
scas
cltd
lcall
test
jb
ret
add
add
out
jmp
dec
pop
shl
lea
insb
pand
insl
and
pop
sub
adc
aaa
movsl
pushaw
add
aaa
fwait
cs
jns
movsb
pusha
add
das
adc
add
add
mov
add
movsl
dec
jecxz
push
add
movsl
cld
mov
test
mov
mov
mov
inc
lods
ss
scas
push
aas
movsl
push
add
lret
sbbl
test
add
nop
inc
leave
cmp
sub
mov
add
and
mov
das
cmc
mov
and
test
xchg
test
mov
dec
mov
in
test
mov
test
inc
add
add
fwait
push
pop
pop
mov
in
inc
push
jle
cmp
mov
leave
push
daa
mov
mov
add
push
or
fcomps
sub
mull
into
outsb
jbe
es
mov
mov
mul
fs
je
push
push
xchg
push
js
or
sub
mov
sub
std
mov
fs
cmp
negl
xchg
shl
insl
addb
mov
and
pop
sbb
jg
mov
fwait
jae
add
xor
or
gs
add
iret
sti
adc
sub
sbb
add
add
cltd
stos
repnz
jg
add
cwtl
mov
clc
outsl
unpcklps
test
xor
add
add
mov
push
sbb
pop
xchg
cwtl
test
insb
and
repz
pop
push
adc
mov
ss
inc
ret
out
inc
mov
in
mov
sub
add
stos
call
cmp
jno
push
aam
mov
pop
sbb
cli
aaa
imul
push
dec
mov
out
sub
adc
mov
call
neg
clc
ljmp
aad
divb
pop
mov
clc
sbb
iret
pop
push
and
cmpsb
ficomps
sub
loope
and
add
loopne
dec
and
imul
lret
xchg
lock
sub
cmp
inc
push
sbb
jmp
iret
cs
add
insl
mov
sub
test
push
add
push
or
add
lcall
int
jae
shl
dec
xor
movb
aas
fsubl
dec
dec
inc
or
daa
rcr
inc
add
inc
mov
cmp
and
pop
cld
loop
scas
js
xchg
sub
cld
ret
adc
rolb
add
fistps
mov
add
mov
push
fsubrl
clc
gs
inc
add
pusha
add
mov
jno
mov
js
xlat
insb
sub
fcomps
sti
mov
xchg
imul
fwait
sub
inc
aad
xor
loope
add
sbb
addr16
push
mov
mov
or
sub
rcrl
adc
mov
ja
scas
mov
mov
push
test
jne
out
movb
adc
inc
shlb
int
lds
mov
push
sub
mov
lret
add
or
add
sbb
lods
les
or
sbb
das
repnz
jo
cs
xchg
jecxz
mov
adc
push
fucom
mov
scas
cmp
sub
movb
mov
addr16
add
out
or
jecxz
arpl
cld
xchg
std
mov
sbb
and
inc
add
daa
inc
add
cltd
test
fs
xchg
pop
scas
imul
xor
cli
sahf
pop
sub
adc
mov
rclb
ret
into
dec
iret
into
cwtl
adc
ja
fistpll
in
popl
inc
aam
mov
pminsw
movsb
sti
andl
dec
push
mov
dec
je
mov
rorb
xchg
pop
sbb
mov
add
jnp
pop
push
imul
sub
push
mov
cld
notl
addr16
add
xchg
jge
sub
dec
orps
add
mov
and
pushf
cmp
dec
mov
jge
sbb
mov
push
add
push
ljmp
loope
sti
xor
sub
popa
xor
leave
xchg
jmp
popa
inc
stos
mov
add
movsb
sub
lods
es
add
sub
add
inc
xchg
adc
jecxz
data16
xor
adc
das
jl
adc
in
mov
fcmovbe
jp
lds
sbb
add
aam
movsl
scas
outsb
inc
mov
xor
sub
das
push
adc
or
addb
jg
testl
mov
movsl
repz
cmp
loop
add
insl
mov
adc
jne
ret
mov
jmp
push
sub
test
bound
push
sub
push
clc
and
xchg
aaa
daa
jle
mov
dec
jnp
ficomps
pushf
dec
cmp
lds
or
adc
pop
inc
mov
inc
add
nop
loop
lahf
inc
repnz
push
inc
push
cmpsb
imul
popaw
or
sbb
in
mov
out
sbb
mov
cs
jb
lret
inc
add
xchg
xor
mov
xor
xor
idivb
mov
inc
add
dec
inc
add
or
push
jg
add
cmpsb
cli
cmp
test
jecxz
fs
xchg
dec
std
aad
sub
xchg
mov
inc
aam
add
cmp
add
aam
add
into
push
push
add
mov
dec
sub
sbb
sbb
clc
push
nop
jle
mov
push
and
inc
je
cs
stc
sahf
lock
call
pop
cltd
inc
add
pop
mov
in
add
add
lock
and
imul
cwtl
pusha
add
inc
loopne
sub
out
or
ss
add
int3
jns
rolb
loope
cwtl
jmp
add
add
dec
cmp
or
mov
dec
ljmp
xchg
movsb
jle
xor
sbb
dec
jecxz
mov
js
inc
push
mov
add
mov
repnz
add
sub
outsb
inc
add
add
and
inc
adc
xchg
andl
addb
into
icebp
lods
jo
test
push
icebp
xchg
add
cmp
imul
fisubs
mov
call
xchg
aaa
sub
add
adcl
inc
add
addb
repnz
xor
addb
sbb
xchg
fwait
xor
out
jecxz
rcl
mov
cmp
dec
lret
add
scas
mov
sbb
add
addb
inc
add
xor
shrb
push
jmp
add
ret
aaa
sar
xchg
cmp
adc
cli
jp
ficomps
test
shlb
ficompl
push
dec
pop
dec
movb
arpl
cmp
movsl
pop
pop
rorl
mov
jae
fldcw
leave
xchg
pop
mov
xchg
push
lret
stos
jge
add
add
inc
add
mov
repz
add
shll
gs
add
movb
push
sub
je
enter
mov
enter
cmp
jle
sub
add
mov
aas
test
imul
lds
fwait
shlb
xchg
movb
mov
outsb
mov
outsb
jl
and
fiadds
shlb
inc
scas
xor
cwtl
movsb
fidivrs
sub
fwait
rcll
jae
mov
in
mov
mov
pop
pop
fildll
dec
sbb
add
movsl
push
jp
lret
jmp
bound
jae
sbb
jecxz
add
add
out
inc
add
cld
xchg
adc
dec
inc
add
sbb
andl
jnp
jns
push
mov
es
sub
dec
mov
stc
jb
jg
dec
add
push
mov
xchg
ret
jle
mov
outsb
sbb
add
jb
pusha
add
stc
jb
adc
outsl
add
add
add
aam
add
inc
add
repnz
shll
les
sub
jb
out
add
add
pusha
outsl
mov
mov
stc
jb
adc
mov
xor
jb
add
add
jp
inc
add
add
jb
jle
add
xchg
in
decl
push
mov
xchg
ret
add
adc
mov
stc
jb
cmp
mov
add
add
out
faddl
stos
mov
stc
jb
add
mov
stc
jb
adc
add
arpl
leave
add
stc
jb
inc
lea
jo
imul
inc
stc
jb
add
add
mov
stc
jb
sub
ret
add
stc
jb
mov
adc
add
stc
jb
add
pop
xchg
jae
sub
push
mov
xchg
ret
inc
add
add
jns
mov
add
add
jb
add
jnp
xor
add
stc
jb
cltd
add
add
leave
xor
stc
jb
add
adc
shll
add
add
add
add
test
push
add
stc
jb
lret
add
rsqrtps
jb
add
add
cmp
ss
or
stc
jb
add
add
add
nop
jmp
outsl
mov
ja
xchg
mov
stc
jb
xor
sub
sub
add
cmpsb
add
cltd
lret
pusha
andl
jnp
inc
add
add
mov
add
jb
jg
pop
jle
mov
ss
mov
lret
sldt
add
pusha
add
mov
stc
jb
pop
pop
mov
add
add
add
jb
add
inc
mov
stc
jb
add
add
imul
add
imul
stc
jb
mov
andl
jmp
add
nop
cltd
add
add
ljmp
add
lea
add
xor
stc
jb
adc
pusha
add
adc
pop
stc
jb
mov
add
pusha
cmpl
inc
add
add
cmpsb
mov
jb
movsl
add
add
sub
xor
stc
jb
int3
loopne
adc
push
mov
xchg
ret
or
add
xor
add
add
add
add
mov
es
push
stc
jb
mov
call
stc
jb
jge
add
dec
push
add
pusha
jmp
nop
adc
cmp
jmp
popf
or
add
add
mov
jne
push
mov
xchg
ret
sbb
add
mov
push
mov
xchg
ret
sbb
push
movsb
stc
jb
xor
adc
nop
jmp
jg
add
add
and
push
mov
xchg
ret
int3
outsl
push
sub
out
push
nop
jmp
sub
mov
and
mov
div
nop
jmp
pop
adc
add
add
add
jg
stc
jb
add
add
fstpl
call
and
add
xor
stc
jb
pusha
mov
cmp
add
add
stos
push
stc
jb
or
add
stc
jb
mov
xor
push
mov
xchg
ret
nop
cmpl
add
add
xor
stc
jb
add
out
and
push
mov
xchg
ret
and
push
mov
xchg
ret
add
add
pop
push
push
mov
xchg
ret
add
cmp
xchg
pop
lods
stc
jb
add
adc
movsl
sbb
stc
push
push
mov
xchg
ret
lret
add
cmpl
aas
adc
add
add
sbb
out
pop
stc
jb
add
add
dec
fs
cmp
pop
cmp
jb
andl
push
mov
xchg
ret
inc
add
jmp
adc
xor
fs
mov
mov
stc
jb
jmp
lds
stc
jb
inc
data16
mov
pusha
stc
jb
cmp
add
sbb
mov
stos
nop
jmp
and
cmp
add
add
stc
jb
lret
adc
or
arpl
stc
jb
add
lea
out
lret
and
jb
cltd
loopne
add
push
mov
xchg
ret
xchg
xor
add
jne
stc
jb
nop
nop
ret
push
xchg
sub
push
jb
add
add
mov
xchg
ret
add
add
in
jne
stc
jb
add
add
add
stc
jb
lds
imul
add
cmp
add
test
mov
stc
jb
and
ret
push
stc
jb
adc
sbb
mov
out
push
add
stc
jb
add
ljmpw
movsl
or
add
test
test
jae
add
xor
rep
stc
jb
add
cmp
cltd
mov
jb
jmp
jae
movl
icebp
inc
add
add
loopne
xchg
mov
sar
jb
jge
jg
adc
add
inc
add
pop
mov
stc
jb
jge
add
outsl
add
jb
xor
adc
mov
movsl
stc
jb
faddl
ret
cmpsb
add
pop
stc
jb
lds
mov
add
dec
or
jb
pusha
sbb
push
add
stc
jb
adc
out
mov
xor
stc
jb
add
mov
and
ret
jb
adc
sbb
mov
and
push
pop
add
stc
jb
add
add
lds
push
mov
xchg
ret
sub
pop
call
add
inc
adc
bound
add
or
inc
add
jle
add
je
push
stc
jb
xor
add
add
pushl
rclb
add
xchg
ret
pop
add
add
add
add
add
loopne
pop
sbb
stc
jb
mov
add
adc
push
push
mov
xchg
ret
inc
add
add
stos
mov
push
mov
xchg
ret
test
add
push
dec
xor
push
mov
xchg
ret
out
mov
orl
dec
or
mov
xchg
ret
data16
bound
jae
ret
add
mov
lea
xor
jo
fisttpll
adc
cwtl
pop
add
add
in
pop
nop
jmp
add
incb
and
cmp
lret
adc
add
cmp
test
add
add
jb
test
add
fcoms
jb
pusha
add
adc
add
jb
add
fs
test
mov
add
jb
mov
mov
push
mov
xchg
ret
movsl
jo
mov
nop
jmp
add
adc
je
nop
jmp
add
cmpsb
add
jne
nop
jmp
inc
add
push
stc
jb
adc
jae
add
popa
add
jb
or
mov
dec
add
pushl
stc
jb
movsl
fsubl
add
and
stc
jb
cwtl
nop
add
and
jae
add
add
add
outsl
cmpsb
add
or
add
xchg
mov
mov
add
mov
push
adc
test
jmp
pop
mov
cmp
lods
push
mov
xchg
ret
mov
pop
add
stc
jb
add
jle
sub
loop
rorb
call
nop
jmp
addl
nop
jmp
xor
add
ret
stc
jb
adc
mov
add
sbb
jb
add
adc
inc
aad
mov
nop
jmp
add
cmp
cltd
mov
daa
add
xchg
ret
add
and
mov
nop
jmp
add
add
pusha
cltd
jle
cmc
pop
mov
sti
decl
xor
cltd
pusha
add
test
nop
jmp
push
sbb
jle
add
in
xor
stc
jb
xor
and
dec
mov
stc
jb
int3
add
add
mov
xor
stc
jb
add
add
filds
xchg
ret
add
cwtl
pusha
add
idiv
incl
mov
add
pop
jmp
stc
jb
imul
stos
sldt
stc
jb
add
cs
stc
jb
sub
jo
subl
mov
iret
mov
stc
jb
jle
add
loopne
mov
stc
jb
add
mov
add
lea
popa
add
mov
xchg
ret
add
add
dec
nop
jmp
jae
cmp
jmp
imulb
jmp
mov
and
adc
add
stc
jb
fsubl
add
stc
jb
add
and
dec
mov
push
nop
jmp
movsl
loopne
adc
add
push
loope
xchg
cld
pushl
stc
jb
add
incb
mov
push
push
add
adc
nop
sub
push
push
mov
xchg
ret
jo
add
push
push
mov
xchg
ret
xor
rcll
stc
jb
add
sub
add
movsl
add
and
add
sbb
add
add
aad
dec
pop
push
mov
xchg
ret
add
add
sub
jae
outsb
dec
stc
jb
incb
movsl
add
stc
jb
loopne
add
add
add
add
add
jb
jo
or
test
sub
add
lcall
add
out
test
lsl
nop
jmp
sbb
adc
add
addl
cltd
sti
inc
add
jle
add
movb
jmp
jo
cltd
add
mov
stc
jb
fdivrl
xor
jae
jb
or
movsl
ret
add
pop
stc
jb
and
add
sub
xchg
pushw
and
push
mov
xchg
ret
out
jo
xchg
or
subb
incl
add
push
push
mov
xchg
ret
lea
add
mov
sbbb
add
add
push
mov
xor
add
mov
clc
pop
stc
jb
add
cmp
push
addr16
add
add
add
adc
movsb
stc
jb
int3
add
dec
mov
push
mov
xchg
ret
sub
jae
dec
pop
stc
jb
add
add
xchg
and
cmpl
mov
pop
add
add
push
fwait
pushl
push
mov
xchg
ret
push
pusha
daa
inc
add
pusha
push
mov
xchg
ret
add
mov
sub
stos
stc
jb
nop
xor
cmp
sbb
call
stc
jb
inc
add
xor
mull
jb
add
sbb
lea
stc
jb
add
mov
nop
jmp
add
or
add
dec
pop
stc
jb
mov
add
add
je
mov
stc
jb
add
xorl
mov
stc
jb
add
in
jno
jno
push
add
sbb
and
add
jae
add
add
pop
div
stc
jb
add
mov
insb
insb
stc
jb
ret
out
stos
stc
jb
mov
add
jb
add
push
sub
ret
cltd
mov
je
stc
jb
add
jg
adc
jb
add
add
mov
stc
jb
add
jmp
mov
mov
sub
ret
add
call
stc
jb
push
or
mov
jmp
pop
ss
jne
push
mov
xchg
ret
add
fs
clc
movzwl
nop
jmp
add
add
add
lahf
jne
nop
jmp
add
sbb
xchg
aas
cmpl
nop
jmp
add
cltd
test
add
pusha
stc
jb
ret
add
incb
pop
les
stc
jb
adc
add
add
dec
mov
push
mov
xchg
ret
loopne
int3
das
pop
nop
jmp
jg
add
jle
add
mov
stc
jb
add
sbb
icebp
inc
add
jb
cmp
jmp
add
nop
adc
rolb
popl
stc
jb
add
add
adc
add
add
add
stos
push
stc
jb
test
cltd
mov
dec
movzwl
nop
jmp
mov
add
mov
push
mov
xchg
ret
add
pop
shl
stc
jb
cwtl
out
cmp
sub
add
nop
jmp
mov
data16
movsb
or
add
jb
cmpsb
add
sbb
push
mov
add
xchg
cmp
scas
pop
inc
xor
test
clc
mov
xor
add
stc
jb
jg
mov
fmuls
sub
add
add
adc
add
imul
add
inc
jle
jo
push
mov
add
xchg
add
add
xchg
xchg
lods
lea
push
mov
xchg
ret
add
pusha
xchg
add
nop
jmp
cltd
mov
add
pop
stc
jb
inc
cwtl
data16
add
dec
mov
stc
jb
add
sub
add
lret
call
stc
jb
add
mov
stc
jb
add
add
jno
push
nop
jmp
sbb
pusha
add
lret
adc
xor
incl
add
lods
mov
stc
jb
fs
lret
add
mov
push
mov
xchg
ret
add
add
mov
stc
jb
cltd
add
add
and
push
push
mov
xchg
ret
add
add
shl
aas
imul
stc
jb
sub
add
mov
stc
jb
add
lret
test
add
stc
jb
mov
cwtl
pop
je
stc
jb
add
lds
cld
ret
stc
jb
add
add
nop
add
add
add
jb
add
add
xor
add
stc
jb
out
add
adcb
add
sub
sub
es
je
stc
jb
mov
int3
xchg
in
sub
stc
jb
push
sbbl
ret
cmp
push
mov
xchg
ret
add
pusha
add
scas
pusha
push
mov
xchg
ret
add
mov
dec
cmp
jb
xor
add
cmp
lcall
jmp
mov
add
rolb
stos
mov
nop
jmp
lea
push
add
mov
in
pop
in
sbb
adc
nop
outsb
insb
cmp
xor
nop
jmp
inc
add
pusha
add
adc
xchg
push
mov
xchg
ret
mov
sbb
jp
jbe
nop
jmp
adc
mov
jne
nop
jmp
add
add
mov
nop
jmp
dec
fs
andb
stc
jb
add
add
cld
or
add
add
push
loopne
push
addb
and
push
mov
xchg
ret
add
add
or
stc
inc
add
incb
pop
add
stc
jb
add
add
mov
jb
movsl
addl
jge
jne
stc
jb
cltd
fucom
adc
push
push
mov
xchg
ret
add
mov
stc
jb
imul
fs
push
push
mov
xchg
ret
cmpsb
xor
mov
push
mov
xchg
ret
cmpl
in
add
nop
jmp
xor
add
add
mov
push
mov
xchg
ret
add
adc
mov
xchg
ret
ss
xchg
stc
call
stc
jb
mov
call
nop
jmp
xor
loopne
add
popa
stc
jb
pusha
mov
mov
scas
add
stc
jb
add
add
xor
mov
add
add
jb
pop
dec
push
stc
jb
add
add
fmuls
test
clc
call
incl
lea
cltd
dec
lods
stc
jb
add
faddl
adc
add
xor
jmp
add
mov
inc
stc
jb
jle
add
sbb
jb
add
or
add
xchg
pusha
add
inc
loopne
jb
ret
add
pusha
add
jmp
cld
incl
jae
pusha
add
jge
stc
mov
nop
jmp
pusha
xor
pop
data16
add
add
stc
jb
lea
out
scas
pop
stc
jb
fnsave
pusha
add
add
jnp
repz
mov
xchg
ret
add
pop
add
mov
xchg
ret
add
mov
stc
jb
pop
cmpsb
sub
data16
and
stc
jb
add
add
imul
add
mov
mov
mov
rolb
jb
int3
push
sbb
cmpsb
adc
mov
add
stc
jb
fs
stos
add
stc
jb
nop
cmp
push
cltd
sbb
and
add
nop
dec
add
add
add
add
add
decl
push
mov
xchg
ret
add
loope
popl
pause
jmp
cltd
mov
add
stc
jb
adc
add
mov
push
mov
xchg
ret
cwtl
add
pop
add
add
jb
add
imul
stc
jb
cmpsb
add
sub
sbb
add
je
sub
inc
add
xchg
ret
mov
add
nop
jmp
add
add
add
add
dec
add
mov
xchg
ret
int3
add
add
stc
jb
pop
adc
out
xor
jne
nop
jmp
add
loopne
add
jb
add
add
not
push
mov
xchg
ret
fldl
cwtl
mov
or
mov
xchg
ret
add
xor
mov
stc
jb
mov
inc
sqrtps
jno
inc
add
add
cltd
sbb
mov
push
mov
xchg
ret
adc
stc
jb
add
add
add
add
jle
rclb
add
jmp
cmp
jb
add
stos
stc
jb
add
sbb
add
jg
lods
mov
push
mov
xchg
ret
add
mov
stc
jb
xor
add
inc
cmp
jb
add
ret
pusha
cs
stc
jb
xor
add
mov
test
stc
jb
ret
xor
inc
add
loop
stc
jb
adc
xor
add
cmp
sbbb
add
adc
lea
add
xchg
xchg
cmpl
sldt
fs
mov
mov
push
mov
xchg
ret
jo
add
fwait
mov
push
mov
xchg
ret
jae
mov
add
stc
jb
add
je
mov
arpl
inc
cltd
add
flds
add
incl
add
sub
add
pop
imul
incl
outsl
add
fs
stc
jb
jo
mov
cwtl
push
stc
jb
add
cltd
test
mov
xor
add
sub
sti
stc
jb
sbb
cltd
addr16
mov
stc
jb
add
add
in
mov
nop
jmp
add
subl
jbe
stc
jb
out
add
add
sub
incl
pop
and
out
add
push
stc
jb
sbb
sub
add
push
stc
jb
mov
mov
add
push
mov
xchg
ret
mov
test
nop
jmp
sbb
jle
mov
mov
add
jb
push
add
adc
jmp
add
ret
xor
add
jmp
stc
jb
add
nop
jmp
cltd
add
inc
inc
mov
or
xor
add
add
add
mov
test
cmp
stc
jb
jg
add
lcall
add
add
pop
sub
or
add
jb
add
adc
dec
dec
stc
jb
add
add
sub
add
jne
stc
jb
jmp
sbb
add
nop
jmp
cwtl
add
add
loop
shll
insb
mov
stc
jb
add
add
lea
xchg
data16
orb
sbb
add
adc
dec
pusha
stc
jb
add
cmpsb
jmp
in
xchg
push
mov
xchg
ret
add
mov
mov
stc
jb
nop
add
push
mov
xchg
ret
add
xor
adc
dec
adc
jb
mov
or
ss
sbb
mov
xchg
ret
add
pusha
dec
add
or
stc
jb
add
add
mov
or
in
or
add
lcall
sub
add
decl
cmp
push
push
mov
xchg
ret
movsl
mov
mov
nop
jmp
mov
add
mov
push
mov
xchg
ret
cmp
add
push
mov
xchg
ret
add
nop
jmp
mov
nop
add
jmp
pushf
mov
stc
jb
sbb
shll
mov
stc
jb
test
adcl
fistpl
jb
cltd
add
add
adc
dec
push
mov
xchg
ret
outsl
add
mov
mov
stc
jb
add
add
mov
jb
addl
push
pop
lcall
add
nop
mov
mov
adc
jb
add
or
ret
add
lds
jb
add
add
add
mov
nop
jmp
movsl
fldl
add
add
and
and
incl
int3
sbb
jo
add
decl
stc
jb
xor
jo
pop
push
stc
jb
adc
add
loopne
add
jne
stc
jb
add
cmp
xchg
roll
jno
gs
stos
add
push
mov
xchg
ret
addl
xchg
mulss
out
icebp
inc
add
add
add
stos
xor
stc
jb
dec
mov
leave
sub
add
add
add
add
cltd
and
stc
jb
ss
cmpsb
add
add
add
push
mov
xchg
ret
add
rolb
mov
stc
jb
mov
out
dec
push
mov
xchg
ret
mov
push
arpl
mov
stc
jb
add
inc
add
int3
stos
xchg
stc
jb
add
add
add
outsl
loopne
jb
jle
lds
popa
stc
jb
outsl
ret
add
cltd
xor
outsl
mov
push
mov
xchg
ret
ret
imulb
mov
stc
jb
cmp
add
mov
ret
push
mov
xchg
ret
or
jo
es
sub
push
mov
xchg
ret
loopne
jae
jp
movb
orb
incl
lret
add
mov
nop
jmp
addl
es
sub
stc
jb
add
imul
add
pusha
add
out
enter
add
stc
jb
dec
add
add
stc
jb
add
data16
outsb
stc
jb
fstpl
lds
add
imul
push
clc
inc
add
add
add
rcll
movzwl
stc
jb
add
xor
mov
imul
data16
add
fadds
jb
add
pusha
stc
jb
add
out
push
add
icebp
or
les
stc
jb
ret
add
add
add
nop
jmp
nop
add
add
add
pop
xor
stc
jb
jle
mov
xor
pusha
add
nop
jmp
add
add
sub
xchg
idiv
incl
adc
addl
popa
stc
jb
add
jg
adc
mov
stc
jb
jo
add
xor
pushl
nop
jmp
add
loopne
add
fmull
test
jb
test
push
xchg
fs
cmpl
mov
xchg
ret
fstl
add
loopne
xor
sub
stc
jb
fs
add
sbbl
jb
add
xorl
popa
add
mov
xchg
ret
add
fmul
stc
jb
addl
add
popa
stc
jb
add
lea
jp
stc
jb
test
add
add
add
push
push
or
jb
adc
add
add
jne
nop
jmp
add
icebp
stc
jb
add
add
cmp
jb
loopne
add
or
jp
inc
add
loopne
mov
pop
add
xchg
ret
add
faddl
sub
add
jb
adc
add
add
or
stc
jb
ss
sub
ss
xchg
stc
jb
pop
lea
cmc
jnp
popa
add
mov
xchg
ret
andl
push
nop
jmp
and
nop
jge
and
pop
add
push
mov
xchg
ret
addl
movsb
jecxz
int
push
add
nop
jmp
pop
jg
jmp
jb
add
inc
cmp
movsl
xchg
and
add
nop
jmp
add
add
mov
cmp
jb
add
add
cltd
add
ret
nop
jmp
add
add
pop
add
stc
jb
add
add
pop
adc
imul
call
and
sub
pushf
add
push
mov
xchg
ret
adc
mov
push
mov
xchg
ret
add
popf
push
mov
xchg
ret
mov
into
mov
stc
jb
add
add
add
stc
jb
jge
jo
add
into
loopne
decl
add
add
pop
add
nop
jmp
push
lret
and
enter
test
inc
add
mov
xchg
stc
jb
mov
and
les
sahf
sub
push
mov
xchg
ret
movsl
cltd
cmp
cmp
jmp
add
pop
jo
int3
imul
and
nop
jmp
add
sub
add
jbe
stc
jb
add
mov
stc
push
push
mov
xchg
ret
inc
add
push
add
mov
icebp
add
add
mov
nop
loop
stc
jb
dec
jo
lea
jb
adc
mov
add
jb
int3
cmpsb
mov
jns
jle
inc
add
add
cmpsb
jo
outsl
je
stc
jb
add
popf
ror
nop
jmp
add
add
add
stos
push
nop
jmp
test
add
mov
jmp
enter
push
add
add
loopne
scas
lea
nop
jmp
add
add
sbb
fsubrl
bound
add
jb
mov
mov
xor
jb
mov
mov
nop
jmp
add
cmpsb
aaa
fwait
movswl
stc
jb
add
outsl
adc
add
stc
jb
add
cmpsb
add
sti
or
add
jb
jge
add
subl
jmp
loopne
adc
dec
mov
stc
jb
add
xchg
adc
add
stc
jb
add
ret
xor
stc
jb
mov
push
mov
dec
call
add
add
sbb
aam
sbb
popa
add
jb
mov
fs
xchg
push
mov
xchg
ret
and
xchg
inc
add
inc
add
adcb
add
dec
int3
adc
dec
cmp
jb
add
mov
cmp
sbbb
add
int3
imul
xor
stc
jb
add
sub
xor
add
stc
jb
mov
add
sub
stc
jb
jg
add
adc
mov
xchg
ret
jae
adc
sub
stc
jb
add
adc
cmp
xor
add
add
nop
jmp
fstpl
mov
stc
jb
out
lret
data16
inc
jp
stc
jb
sub
add
jo
add
stc
jb
add
jg
imul
nop
jmp
lea
add
jge
addb
add
push
mov
xchg
ret
fcoml
add
sbb
test
jb
cmp
cbtw
inc
nop
jmp
add
add
jne
jge
add
add
stc
jb
add
add
jmp
stc
jb
dec
mov
xor
push
aad
add
nop
jmp
nop
lret
add
add
cltd
into
call
stc
jb
add
adc
push
add
add
pushl
ss
ficoml
jb
jo
add
push
test
nop
jmp
add
add
pusha
adc
xor
jb
add
add
mov
stc
jb
pop
add
mov
push
stc
jb
add
add
cs
stc
jb
jmp
add
xor
add
stc
jb
sbb
xchg
mov
push
stc
jb
add
test
cwtl
add
stc
mov
stc
jb
movsl
push
xor
nop
add
add
jmp
cmp
and
add
nop
jmp
add
add
loopne
cwtl
push
movb
jno
mull
jmp
stc
jb
loopne
adc
lds
xlat
filds
lcall
mov
clc
stc
jb
cwtl
add
loop
push
stc
jb
add
fs
add
loopne
mov
stc
jb
add
adc
jmp
int3
add
cwtl
sub
dec
add
jb
jmp
mov
add
stc
jb
add
add
add
push
aaa
mov
stc
jb
add
movsl
inc
xor
test
icebp
stc
jb
add
jb
inc
add
mov
loopne
lea
test
nop
jmp
jle
mov
add
mov
stc
jb
adc
add
add
nop
jmp
add
lea
pop
add
call
stc
jb
mov
jb
es
stc
jb
jo
mov
nop
jmp
imul
jmp
xorl
mov
inc
dec
mov
stc
jb
sbb
add
adcb
add
cmpsb
add
outsl
mov
mov
stc
jb
add
add
ret
nop
jmp
cmp
loopne
xor
call
stc
jb
or
mov
add
jmp
add
add
pusha
flds
repz
mov
xchg
ret
add
add
add
stc
jb
cwtd
add
cwtl
stc
and
stc
jb
add
add
and
or
jb
and
adc
push
mov
push
mov
xchg
ret
add
jmp
cmp
test
fdivr
call
incl
add
push
mov
sbb
pushl
add
add
shr
stc
jb
ret
inc
pop
stc
add
stc
jb
jle
jae
sbb
mov
and
jb
add
add
popa
stc
jb
add
cmpsb
add
ss
xchg
sbb
lret
add
add
add
sbb
mov
sub
pop
repz
add
and
mov
nop
jmp
test
adc
jns
lret
stc
jb
lea
add
aaa
add
imulb
mov
stc
jb
imul
add
popa
fs
jb
movsl
imul
stc
jb
or
add
dec
jae
add
push
nop
jmp
cmpl
jg
mov
add
adc
sub
jb
add
cwtl
lea
cwtl
hlt
pop
and
rep
stc
jb
add
addl
adc
dec
add
nop
jmp
add
jle
add
jb
add
add
cmpl
movzwl
stc
jb
pusha
lret
pop
movsl
loopne
shr
stc
jb
cwtd
sbb
add
mov
aam
cmp
incb
xchg
ret
add
adc
lea
call
stc
jb
pusha
out
add
dec
add
stc
jb
add
sbb
xor
push
mov
add
add
lahf
scas
jns
fmul
add
test
mov
xchg
ret
add
jae
test
nop
jmp
add
add
shll
add
nop
jmp
add
add
cltd
mov
sbbb
adc
pusha
add
add
stc
jb
jge
sub
add
in
push
push
mov
xchg
ret
mov
sub
stc
jb
add
jmp
adc
xchg
cmp
stc
jb
loopne
add
add
add
in
lret
mov
push
mov
xchg
ret
add
jae
ds
nop
jmp
jo
jo
mov
mov
test
stc
jb
add
add
addb
mov
stc
jb
out
ret
sub
loop
nop
jmp
adc
lret
cmpsb
xor
jne
stc
jb
sbb
add
mov
stc
jb
add
add
add
dec
push
stc
jb
add
xor
imul
stc
jb
add
add
adc
nop
jmp
andl
jb
add
nop
jns
nop
jmp
push
jo
mov
add
add
add
push
push
mov
xchg
ret
add
add
enter
push
mov
xchg
ret
add
lods
add
add
adc
jo
fsubs
scas
jle
ret
dec
clc
jecxz
pop
push
jge
add
insb
ret
cmp
in
ljmp
mov
ds
aaa
leave
in
add
xchg
in
xor
imul
jl
ret
shrb
pop
pop
mov
int3
cmp
or
rcr
mov
loope
rcrb
loopne
das
frstpm(287
pop
add
sbb
test
addb
movhps
mull
pop
imul
inc
mov
push
add
xchg
mov
mov
jg
ret
int3
sbb
inc
add
dec
jl
add
jl
mov
xor
cltd
cwtl
pop
in
jns
jmp
mov
xor
mov
or
dec
sub
add
shrl
stc
mov
xchg
mov
mov
add
dec
stos
les
or
mov
jbe
add
pop
mov
add
push
out
stc
std
addr16
mov
fcom
cld
out
push
sbb
mov
pop
mov
fsubs
push
inc
in
aas
out
popa
and
inc
add
pop
lods
mov
mov
inc
gs
and
adc
push
stos
out
push
cmovno
stos
insb
arpl
pop
clc
push
add
sub
je
mov
rolb
mov
in
mov
add
pushf
fcomi
mov
and
push
or
xchg
xor
push
das
mov
iret
dec
das
rcr
je
push
add
inc
inc
add
andl
je
int
sub
push
jns
arpl
int3
mov
jmp
rolb
sti
jle
inc
loopne
mov
insb
or
cli
les
cwtl
lock
pop
xchg
int3
mov
cmp
jb
pop
ds
add
xor
outsl
cli
adc
lds
outsl
xchg
mov
jo
addb
loope
fsubr
lcall
add
cli
mov
add
dec
imul
jb
and
add
and
es
jl
add
inc
add
nop
imul
jmp
arpl
adc
push
push
loop
add
pop
stos
jle
hlt
insl
xchg
stos
std
bound
jecxz
ja
mov
sub
mov
pop
ret
lods
pushf
addb
imul
out
sbb
mov
push
imul
jmp
mov
and
sbb
or
mov
dec
loop
jns
pop
cwtl
or
adcl
scas
add
fnstsw
outsl
xchg
mov
cmp
and
mov
mov
mov
xor
add
mov
je
and
data16
pushf
fiaddl
mov
imul
inc
xor
mov
mov
je
setnp
imul
inc
add
out
popf
jns
cmp
push
fwait
add
das
jmp
mov
xchg
push
ss
rolb
cmp
add
sbb
sub
shl
scas
sub
sbb
push
bound
lret
in
dec
stos
outsb
and
mov
bound
jle
dec
cltd
popa
mov
mov
and
les
push
lea
enter
in
das
xchg
mov
push
arpl
popa
daa
and
jge
add
add
sub
add
mov
xor
mov
lahf
ljmp
mov
mov
imul
mov
push
sub
dec
mov
sub
arpl
dec
or
int
ficoms
outsb
lret
add
int
std
stos
hlt
mov
aam
insb
push
jg
sbb
add
xchg
aam
je
or
mov
ljmp
insl
mov
add
jae
pop
adc
xchg
dec
and
add
add
ds
aas
loope
mov
inc
add
dec
test
addl
dec
jnp
push
ljmp
iret
inc
add
and
xor
add
std
push
inc
add
add
mov
xor
fwait
bound
mov
ja
negb
mov
add
jns
mov
add
jb
xchg
inc
add
fbstp
adc
xchg
js
iret
mov
adc
andl
std
insb
enter
sbb
mov
notl
outsb
mov
add
cmp
insb
push
pop
hlt
lods
cwtl
ss
out
fbld
int
gs
add
push
adc
xor
add
test
jp
inc
aad
scas
sar
jmp
sub
adc
add
test
cmp
stos
shlb
mov
add
sub
dec
je
addb
aad
ljmp
add
mov
insl
mov
jle
fwait
lods
mov
mov
xor
mov
paddsb
scas
push
xor
enter
adc
inc
mov
fcoms
ja
mov
or
rolb
and
add
dec
inc
daa
int
movsb
movl
repz
int
lds
shll
jge
mov
aad
sub
cwtl
icebp
fistps
dec
in
dec
pop
dec
add
push
lcall
adc
inc
add
pop
cli
xchg
pop
cmp
adc
inc
in
sbb
cli
cmp
mov
in
pop
ljmp
inc
add
mov
fcomps
jno
push
sar
or
insl
mov
scas
icebp
pop
sub
mov
xchg
test
sub
aad
mov
jb
mov
adc
pop
stos
add
fs
and
pop
fiaddl
addb
dec
ret
fwait
add
lods
fstps
movb
add
fwait
push
aad
mov
mov
cs
sbb
add
mov
mov
aad
bnd
gs
outsb
mov
pop
or
ss
les
mov
lea
add
cmp
mov
cmp
add
xchg
jnp
ljmp
or
loope
jno
push
push
cld
loope
push
pop
xchg
sbb
jecxz
movsl
inc
imul
jl
mov
pop
cmpsb
adc
sub
pop
ja
hlt
clc
ja
xchg
jg
add
pushf
lock
and
push
out
mov
sub
imul
jae
loopne
add
andl
and
inc
add
clc
cli
test
lcall
xor
mov
bound
inc
add
pushf
or
and
xor
fs
int3
mov
cmp
icebp
aaa
dec
jmp
lahf
mov
mov
ljmp
or
outsl
fbld
fwait
push
into
aam
xor
jb
js
add
lcall
push
lds
jns
cmc
pop
bound
adc
inc
add
adc
jo
add
xor
push
mov
lahf
cltd
fldcw
pop
lods
int3
pop
fistl
enter
mov
xor
ds
xchg
lret
aad
mov
mov
stos
mov
lahf
mov
cmp
add
in
sti
jns
je
imul
ds
cmp
sbb
stos
fs
push
and
or
push
outsl
lods
mov
push
add
sbb
jns
add
pop
loop
in
mov
jae
add
out
cmp
sub
ljmp
dec
lcall
add
int3
pushf
xlat
mov
cmpsb
or
iret
sbb
mov
sbb
dec
in
xchg
int3
adc
sahf
or
push
jae
scas
loope
add
sub
mov
xchg
inc
xchg
mov
sub
add
clc
cmp
iret
fcmovnb
add
shlb
mov
ret
cmc
stc
sub
idivl
cld
test
daa
or
ret
cmc
sub
xchg
mov
shl
jo
dec
jnp
js
and
leave
ffreep
shl
push
dec
bound
pop
rcrb
mov
out
fcomip
movsb
dec
outsl
pop
cmp
jge
mov
scas
sbb
ss
sub
sbb
les
idivb
add
les
mov
sbb
jno
cmp
out
jmp
or
test
pop
ljmp
add
add
sub
ljmp
xchg
push
adc
add
sbb
add
int
sar
or
pop
orl
mov
ficoml
and
pop
inc
repnz
test
xchg
pop
scas
mov
sar
jno
cwtl
xor
inc
lret
popf
or
dec
inc
pushf
or
in
mov
stos
aam
roll
iret
aad
dec
xchg
jns
fs
sbb
push
pop
mov
xor
addb
fs
cmp
test
xor
jne
pop
insb
adc
push
das
movsl
sub
pusha
add
in
sub
sub
mov
inc
add
mov
into
icebp
push
lods
adc
rcrl
aas
cmc
addb
mov
lcall
into
push
or
adc
add
add
ljmp
in
mov
pop
mov
outsl
nop
or
and
mov
test
dec
bound
les
mov
add
add
data16
sbb
int
fucomi
dec
cmc
fistl
icebp
xchg
test
ja
jae
insb
mov
add
jno
xchg
aad
gs
shll
test
mov
sbb
addb
rcll
fnsave
shll
add
sbb
dec
int3
cmpl
mov
rolb
add
push
mov
sub
repz
inc
add
int3
or
mov
pushl
pushf
adc
push
outsb
test
inc
shrl
aad
inc
mov
pop
lock
ja
test
outsb
inc
add
push
add
movsb
xchg
and
and
mov
cmp
cmp
mov
ds
cli
fsincos
dec
aas
lahf
imul
loope
add
push
sahf
and
xchg
sub
ljmp
mov
in
dec
push
xlat
xchg
fwait
jae
stos
or
inc
add
mov
les
mov
popl
repnz
add
add
das
into
out
scas
jl
loop
imul
enter
mov
mov
pop
scas
mov
pusha
add
xlat
inc
add
sahf
push
add
mov
xor
jno
jle
pusha
add
ret
inc
mov
loopne
out
fcomip
fdivl
mov
cmp
jecxz,pt
inc
add
inc
mov
aaa
cmp
sub
xor
xor
cmp
xor
out
and
lods
xchg
outsl
aaa
addb
xchg
stos
popa
lcall
mov
cld
repz
add
js
add
sub
jns
adc
adcl
push
jle
cmp
pop
ljmp
add
arpl
xchg
fstps
addr16
lock
mov
sbb
das
inc
xchg
and
push
and
sbb
in
add
sti
cmc
adc
popf
iret
mov
repnz
pop
in
int
jo
movd
add
hlt
cmpsl
cmp
push
mov
pop
mov
ja
mov
xchg
bnd
jecxz
mov
dec
xlat
push
mov
psubb
bound
dec
rol
mov
sbb
pushf
adc
dec
pop
jecxz
xor
out
dec
mov
mov
jns
pop
imul
outsb
inc
mov
cmp
add
lret
push
xchg
and
mov
push
xor
addb
nop
mov
and
mov
xchg
pop
test
mov
add
xchg
jge
mov
pop
jg
xor
xchg
inc
add
mov
subl
mov
jle
mov
jne
push
icebp
addb
sarl
fcoms
inc
in
int3
push
pop
mov
mov
lock
mov
add
mov
ror
inc
mov
fwait
imul
mov
pop
pop
mov
jg
add
ds
loop
es
loop
mov
adc
and
add
ljmp
lret
movsb
fldenv
jae
xor
ljmp
dec
cltd
bound
cld
push
shlb
fstpt
push
jae
mov
pop
fcompl
gs
and
and
sub
imul
pop
mov
cwtl
inc
add
outsb
push
xor
or
push
test
lcall
data16
inc
add
push
fmull
mov
add
cs
add
out
mov
sbb
add
add
dec
or
addr16
sbb
add
xor
cltd
out
iret
rolb
addb
jns
or
add
shrl
add
icebp
sbb
mov
insb
mov
jno
cmp
movsl
mov
fisubrl
clc
jecxz
mov
xor
sub
mov
mov
mov
pop
mov
test
pop
fisubrl
sub
inc
add
lret
mov
cmp
push
and
arpl
mov
insl
icebp
or
push
push
add
xor
jno
sahf
pop
cmp
dec
xchg
jecxz
sbb
pusha
add
and
iret
adc
lods
push
adc
fdiv
jo
inc
add
out
je
iret
insb
nop
inc
add
repnz
or
add
loopne
je
insb
in
out
mov
or
xchg
add
push
xchg
test
mov
add
mov
jae
add
mov
add
xchg
cmp
pop
ret
cmc
loopne
jl
test
mov
cmp
fs
xor
xlat
sub
testl
dec
movsl
mov
inc
dec
inc
add
or
pop
push
stos
cmpsl
dec
mov
xchg
outsb
mov
cs
pslld
add
aas
je
imull
pop
int
dec
cmp
repz
push
sbb
xchg
pop
pushf
or
add
push
hlt
jne
and
pusha
add
add
outsl
pop
dec
mul
mov
cmp
add
adc
int3
leave
repz
sub
std
daa
out
jb
add
test
int3
fwait
jl
add
rorb
cs
lret
adc
sub
and
mov
and
xor
cmp
inc
add
and
adc
pop
dec
jb
stc
aaa
jp
add
lock
les
cmp
shlb
push
stos
xchg
mov
mov
mov
xchg
adc
in
sbb
lea
aas
fdivrs
sbb
add
lahf
hlt
out
sbb
jg
rorl
add
repz
daa
stc
sub
adc
ljmp
add
aad
das
pop
sub
dec
imul
add
inc
and
test
cmpsb
jns
cmpl
mov
in
popf
cmp
mov
or
shld
fsubrp
and
add
scas
push
inc
insl
push
add
mov
nop
imul
sbb
add
and
or
add
pop
pop
jns
popf
pop
movb
lock
xor
loop
cmpsb
popa
mov
pusha
add
add
faddp
pop
push
loopne
lods
xchg
inc
add
ja
imul
and
pop
lea
cmp
iret
aaa
cmc
and
xor
aam
movsb
imul
pop
sbb
in
push
addb
add
testl
dec
dec
lds
add
mov
lods
or
pusha
add
mov
rcll
jnp
out
push
push
add
nop
pop
out
frstor
add
mov
xor
js
push
push
cld
mov
or
push
jl
push
in
movsl
mov
lods
or
aaa
fistpll
lea
loopne
and
test
mov
scas
dec
addb
mov
cmp
cmpsl
cmp
add
fiadds
lock
push
insb
push
xchg
and
xchg
js
add
or
add
xchg
out
in
mov
scas
cmp
call
mov
inc
fisubl
xor
dec
and
mov
test
mov
int3
pop
cltd
das
sti
add
and
ret
jmp
add
lods
cmc
inc
add
fidivrs
mov
gs
loope
cmp
xor
std
push
mov
fstl
lock
addb
add
out
sub
jns
jo
jbe
insl
sbb
fwait
je
test
int
pop
jb
inc
add
les
inc
and
insl
or
out
imul
push
add
mov
add
mov
fsubrl
push
nop
push
adc
or
lea
lahf
notb
nop
fisubl
imul
jnp
jnp
push
shll
pop
shrl
dec
mov
jne
fstpt
add
pop
lret
addr16
xorl
cs
push
push
cmp
das
stos
adc
and
adc
lds
sub
jecxz
fmuls
aaa
bound
clc
mov
movsl
inc
cmp
fidivrs
shl
pop
loope
outsb
cmp
add
xchg
mov
add
push
jno
lds
je
test
inc
addl
jge
add
cmp
add
daa
or
dec
xor
jle
lcall
pop
sub
inc
add
aam
xor
and
mov
lods
pushf
and
add
imul
mov
hlt
pop
adc
rolb
xor
adc
mov
sub
or
fidivrl
add
dec
or
cmp
jno
or
inc
cwtl
ret
into
cmpsb
sbb
add
push
mov
bound
cwtl
mov
jne
ds
movsl
add
add
push
mov
cwtl
push
les
sbb
mov
push
insb
cwtl
mov
inc
aaa
sarl
mov
inc
jne
dec
mov
add
pusha
add
xlat
inc
jg
mov
daa
sbb
adc
jns
adc
dec
pop
jp
in
lret
sahf
cmp
shll
mov
push
jb
push
lea
or
mov
push
cmp
je
stos
outsb
lret
cmp
mul
test
jmp
add
mov
xor
jbe
data16
fwait
xor
ljmp
push
jbe
lcall
pop
and
cs
jl
cmp
lret
adc
stc
imul
femms
cltd
mov
mov
add
cs
add
fsts
add
fwait
jl
mov
lahf
mov
int
pop
xor
nop
stc
or
ja
mov
or
addb
repnz
adc
add
sbb
add
sub
xchg
cmp
adc
push
add
push
adc
scas
lds
sbb
ss
add
andl
aam
mov
mov
aad
sub
push
outsb
mov
hlt
xchg
cmp
movl
in
push
and
dec
inc
add
lds
mov
ret
loope
sbb
add
insl
into
imul
jecxz
pop
adc
sub
lods
jnp
xchg
outsl
outsl
or
out
stos
aam
dec
mov
adc
sbb
add
das
mov
mov
jl
or
jp
sbb
cmp
xchg
and
in
lods
jns
mov
xor
lcall
sarb
inc
add
adc
push
popa
int3
add
es
lea
sub
movl
rcrb
fxtract
cltd
jb
jne
xor
or
dec
decb
test
pop
cmp
or
add
add
adc
cmc
mov
daa
jnp
add
mov
xor
or
dec
fnsave
leave
aad
mov
loop
jns
jae
inc
outsl
movsb
sub
bound
mov
rolb
lcall
mov
aad
xor
add
adc
mov
jne
or
push
addb
rcrb
sbb
pop
imul
mov
addr16
jno
das
push
fcompl
xor
jg
aam
add
add
notb
fld
or
pop
adc
mov
mov
add
push
sub
mov
pop
vcvtdq2ps
push
movb
sbb
lods
jg
movsb
scas
push
cmc
adc
dec
out
or
add
ss
insb
cmp
aam
add
into
sahf
aaa
pusha
add
push
in
xchg
jmp
es
xchg
adc
push
scas
mov
adc
daa
enter
cmp
sbb
push
fdivl
les
cmc
stos
inc
add
adc
mov
lahf
xchg
loopne
xchg
cmpsb
les
pop
clc
clc
push
dec
inc
push
push
pop
and
add
mov
pop
cli
clc
mov
lret
inc
add
push
ljmp
inc
add
pop
mov
dec
leave
cs
mov
data16
sti
mov
push
xchg
sbb
pop
sub
and
or
jmp
fisubs
addb
push
ret
ljmp
imul
unpcklps
addb
inc
add
icebp
test
cltd
bound
xorl
test
jb
inc
addb
bound
adc
add
insb
inc
add
call
aad
pop
push
jae
and
push
push
add
les
gs
adc
cld
shl
push
add
test
popf
inc
add
add
rcrb
repz
aas
shlb
add
je
bound
imul
addb
sbb
std
test
clc
addb
outsl
aas
mov
fs
int
and
rolb
jne
fimull
stos
pushf
push
shll
sub
mov
and
in
inc
push
jmp
out
insb
mov
push
cli
dec
imul
imul
movsb
das
sub
sub
cmpl
or
popa
mov
cld
xlat
dec
rolb
add
mov
adc
add
jae
add
mov
int3
push
sbb
xchg
std
insl
inc
mov
mov
cmp
cmpsb
ucomiss
add
add
push
mov
add
aad
adc
cmp
cmp
out
int3
jle
push
test
outsb
adc
outsl
mov
add
rcll
push
xchg
addb
add
add
adc
and
jp
xor
xlat
cmp
xor
cmp
data16
stc
clc
add
lea
dec
pushf
jge
cmp
dec
rorl
jmp
add
mov
pop
addb
iret
push
or
stos
adc
push
and
ss
xchg
neg
jns
add
add
add
dec
sub
mov
mov
xchg
xchg
mov
lea
pushf
stos
bound
cwtl
test
or
xor
adc
xor
inc
sub
or
clc
pop
xchg
cs
dec
add
jbe
mov
pop
aam
pop
dec
rcll
insl
add
arpl
add
add
pop
iret
mov
loope
xchg
fstpl
inc
insb
sub
lods
dec
mov
jne
and
mov
mov
or
rcrl
jl
push
or
daa
aam
mov
mov
add
add
add
fs
or
xor
or
xor
lods
addr16
mov
mov
cmp
add
sub
ljmp
cltd
lods
aam
addb
jl
cmpl
movb
mov
xchg
or
add
daa
out
jecxz
or
mov
dec
add
mov
push
inc
mov
jmp
lret
clc
mov
ret
les
js
ror
repz
addr16
xor
rcrl
iret
pushf
fldt
js
fisubrl
adc
or
xor
orl
dec
pop
repz
pop
add
dec
stos
xor
sbb
arpl
pop
mov
mov
mov
xchg
sbb
or
shl
dec
mov
mov
xor
or
mov
push
arpl
rorl
push
aaa
add
mov
jo
push
insb
mov
mov
jne
rcrl
push
push
gs
out
push
add
mov
dec
dec
xchg
jno
hlt
enter
mov
xor
ret
or
shll
add
add
mov
movsb
lods
lfs
sbb
xchg
fs
ret
xchg
js
push
stos
loopne
sti
out
push
mov
cmp
gs
psubb
sub
inc
cmp
test
imul
call
pushf
pop
xchg
out
bound
dec
and
push
andl
fimull
psubd
lahf
adc
outsb
or
fnstenv
insb
push
jp
inc
add
push
ljmp
pushf
xor
xor
jae
xchg
ror
push
jecxz
jg
mov
mov
push
clc
xchg
faddl
mov
addb
pop
out
loop
add
add
mov
repz
add
movb
mov
mov
cmp
jb
cmpl
pop
jle
cmp
add
jnp
pop
inc
push
add
xchg
pop
imul
or
pusha
add
stos
push
ds
pop
mov
xlat
jns
daa
adc
mov
outsb
jmp
cmp
push
jge
sarl
mov
cmpsb
ret
push
pop
test
dec
xchg
outsl
and
fwait
rcrb
shll
pop
dec
xchg
movsb
pop
mov
in
add
jmp
movb
add
std
incb
add
xchg
fnstcw
les
xlat
les
sub
mov
push
in
adc
stos
ffree
add
sbbl
and
cmp
clc
dec
call
push
add
call
addb
jp
movsb
xor
rcrl
xor
jnp
inc
cmp
add
aam
shrb
xor
push
bound
or
cmp
cmp
sub
hlt
addb
jecxz
xor
out
pop
test
dec
inc
xchg
outsb
adc
push
stc
sbb
xor
leave
test
lock
or
scas
stos
lcall
push
stos
mov
ret
pop
in
push
push
int
add
outsb
pop
fcmove
jb
mov
icebp
mov
and
sbb
mov
outsb
and
data16
fsubs
repnz
add
xchg
daa
out
lock
mov
pop
xchg
cwtl
jmp
ret
lods
jle
xor
adc
in
or
add
push
fwait
test
in
inc
add
arpl
cmp
repz
add
mov
iret
cmp
scas
test
test
gs
add
sub
fldl
sahf
mov
pop
pop
add
outsl
ror
add
test
adc
push
movsb
inc
stos
xchg
jns
add
xor
movb
fmull
aas
iret
ret
mov
test
jg
jo
lods
or
fsubp
cmp
aam
movb
cmp
enter
scas
inc
add
xchg
cmp
mov
hlt
adc
pop
lods
push
pop
inc
add
add
jo
test
rclb
pop
imul
leave
push
add
jnp
mov
sub
out
lods
xor
call
mov
adc
push
in
ljmp
movl
add
adc
adc
lret
insl
sti
jno
outsl
fdiv
testb
lods
cmc
clc
dec
jmp
das
and
pop
adc
push
or
mov
add
test
and
je
and
fisubrl
mov
insb
fnstsw
dec
pushf
icebp
cmp
fsubr
mov
jle
test
cli
aaa
mov
sbb
cmp
jmp
dec
cmp
cltd
stos
sub
xchg
nop
push
cmp
cli
neg
rolb
repz
in
pop
mov
push
push
xchg
sub
or
addb
js
loopne
adc
jp
stc
mov
mov
push
add
cwtl
ja
sub
in
int
add
add
ror
cmc
push
lahf
sbb
fnstcw
pusha
add
sbb
inc
add
mov
mov
xchg
pop
xchg
add
cmp
mov
adcl
lods
add
stc
insb
jno
std
sbb
gs
aam
xchg
sub
sbb
sahf
jne,pn
movsl
and
jge
mov
adc
mov
and
test
cmpsb
aam
or
arpl
cld
pop
mov
and
arpl
add
push
add
add
sub
dec
repz
jge
cwtl
cli
aaa
cmp
or
inc
add
loopne
mov
call
push
add
dec
test
jl
mov
stc
xlat
ret
idiv
lret
inc
add
add
out
xchg
jmp
push
sbb
aam
lahf
jg
ret
jnp
xchg
mov
fimull
jbe
scas
cmp
adc
js
insl
cmp
add
pushf
mov
and
xchg
jae
add
or
inc
add
and
push
outsb
jl
sbb
sbb
sti
pop
inc
add
rolb
adc
xlat
or
fnstsw
shll
pop
test
mov
xlat
mov
and
lds
xor
mov
push
aam
dec
push
addb
mov
into
fsubl
in
dec
insl
and
push
xor
sbb
fisttpll
mov
or
hlt
xchg
mov
and
sub
adc
xchg
in
les
aaa
cmpsl
imul
xchg
icebp
rcr
adcl
cs
mov
sarl
pushf
xlat
cltd
xor
popf
out
ja
stos
inc
cmpsl
pop
and
addb
out
push
mov
mov
into
testl
add
lahf
dec
pop
xchg
sub
mul
cmpsl
xchg
jl
and
popf
pop
int3
mov
fcomps
and
loop
fcomps
test
sub
icebp
negb
rclb
push
jns
icebp
fisubrl
pop
sub
add
cmpsb
icebp
jge
iret
dec
idiv
adc
push
bndldx
mov
add
inc
add
js
jg
mov
add
aam
divb
or
mov
pop
icebp
push
addb
es
sub
mov
and
imul
movsb
mov
das
xchg
dec
or
popa
dec
insb
adc
ficoml
xchg
and
sub
jb
sbb
lock
add
icebp
ds
mov
mov
sahf
fcoms
fists
pop
aaa
fs
mov
mov
pushf
xchg
xor
or
adc
insl
add
outsb
or
ja
js
jl
mov
lock
fistpl
and
and
aad
daa
and
and
aam
insl
rolb
sarl
daa
aam
insb
sub
push
or
xor
inc
add
scas
sub
loopne
push
les
inc
add
out
add
dec
adc
add
addb
fdivrl
pop
or
or
pop
ds
add
add
pop
ret
mov
shlb
dec
sti
mov
add
mov
and
fcomip
xor
mov
dec
cmpsl
pop
pop
xchg
in
or
movsl
mov
aam
push
xchg
lods
pop
iret
sbb
adc
cmpsb
sub
fildll
push
mov
pop
adc
jno
ljmp
add
mov
and
mov
addr16
stos
xchg
pop
stos
arpl
jns
jbe
rolb
cmp
loopne
cmp
iret
addr16
popf
mov
sbb
arpl
add
xor
add
std
pop
int3
dec
mov
imul
fcoml
jecxz
xchg
inc
add
mov
jae
aad
in
lock
add
aas
cwtl
aaa
jle
mov
jle
lahf
test
pop
popf
dec
fstpl
je
loop
jl
add
jl
push
mov
rcr
jecxz
adc
add
out
movsl
jb
push
dec
loopne
mov
nop
sub
push
addb
rolb
add
mov
mov
test
sub
mov
outsl
test
add
add
add
lock
icebp
jg
cmp
mov
sub
mov
pop
sti
in
aaa
popf
jmp
scas
pusha
add
add
push
lods
fldcw
xchg
int3
lock
rcrl
add
push
outsl
sub
dec
movsb
les
je
adc
push
sub
add
into
pop
loop
push
enter
push
pop
fbld
movsl
js
hlt
adc
cli
out
xor
add
inc
add
adc
cmpsl
mov
andl
fmuls
add
test
call
ljmp
lcall
xor
addb
popl
add
push
pop
dec
ss
aad
xchg
push
mov
es
or
stc
mov
mov
add
add
negb
cmpsl
mov
or
add
fimull
adc
stos
adc
inc
stos
loop
mov
lcall
std
push
add
ror
int3
push
mov
xor
mov
cmp
add
push
and
adc
loop
cmp
add
add
mov
mov
add
loopne
int
mov
xor
iret
dec
shr
xor
cmpsb
jl
fnstcw
repz
lret
sar
or
rclb
movsl
aaa
mov
sub
push
les
jmp
sbb
repz
inc
and
mov
fistl
sub
push
mov
adc
mov
js
xor
add
call
jle
bound
daa
popa
icebp
adc
add
push
xchg
rorb
outsb
std
pop
push
add
ficompl
repz
add
add
dec
push
sub
push
movb
fadds
pop
xor
push
mov
loope
pop
add
lods
xchg
mov
pop
std
sbb
cmp
cmpsb
jno
add
dec
test
pop
sbb
popf
rolb
add
cld
jne
addb
adc
mov
cmpsl
das
cmpsb
mov
xchg
mov
int
lock
ja
add
xchg
inc
outsb
pushw
test
add
mov
es
mov
iret
setle
sbb
mov
dec
lea
push
sbb
sbb
ror
mov
add
insl
xor
loop
scas
loope
lods
aam
mov
jae
add
dec
lret
sub
lea
cltd
hlt
fadd
cmpsb
mov
test
into
cmp
popa
stos
lods
test
inc
loopne
out
xor
call
sti
xor
insl
in
pushf
imul
or
js
mov
inc
add
into
lahf
gs
les
or
mov
add
add
outsb
cli
mov
sbb
sbb
mov
add
add
cmp
js
inc
push
ret
into
push
scas
outsb
stos
push
cmpsb
shll
xor
push
or
jecxz
mov
or
call
add
jns
scas
jo
add
mov
jg
std
or
mov
into
mov
add
fldl
add
inc
add
sub
inc
add
pop
stc
or
push
cmc
and
cmp
push
shrl
fcoms
fnsave
dec
fwait
movsb
in
jo
call
popf
mov
sti
cmp
fsubr
add
add
imul
mov
add
pcmpgtw
sbb
and
lock
pop
mov
fucomip
jmp
rolb
jb
push
incl
cmp
and
into
vmaxps
xchg
fcoms
sub
sub
cs
addr16
je
add
in
inc
add
mov
aas
popf
xlat
add
jl
pop
sbb
mov
call
jae
aad
fsubrs
dec
loop
adc
pushl
xchg
stc
pop
push
mov
mov
cmp
pop
push
mov
xor
dec
test
stc
fwait
lods
sub
add
aas
pop
cli
push
jge
and
sahf
xchg
lds
iret
ljmp
loope
jae
or
xchg
sahf
pop
in
mov
inc
add
jl
std
cwtl
cmp
xchg
out
mov
add
pop
das
push
sub
push
mov
test
sub
insl
aad
add
stc
or
or
cltd
fcompl
pop
xchg
ja
test
xlat
pop
out
rcll
add
test
dec
paddb
push
or
out
dec
or
cli
cmp
cltd
fsubrl
cmp
jbe
cs
jp
push
dec
xchg
inc
add
rcrl
outsl
out
mov
xor
mov
popa
insl
iret
orps
addb
imull
and
mov
pushf
dec
ljmp
push
add
cmp
frstor
and
jae
or
dec
stos
nop
das
push
in
data16
not
mov
aam
xor
add
loopne
push
fildl
mov
pop
sub
lods
ror
shrl
sub
add
addb
lods
outsl
inc
add
arpl
add
add
pop
movb
cli
inc
dec
sti
xchg
pop
push
mov
sbb
inc
fcoml
inc
add
fs
popa
test
mov
cmp
pop
dec
sbb
sub
xchg
out
aas
into
aas
and
mov
js
jne
lcall
add
decl
pop
jb
fistps
jl
jnp
addb
add
add
dec
fcoms
mov
in
adc
cmpsb
push
add
into
lods
add
sti
movsb
mov
xchg
fnsave
push
testb
pop
int
bound
sbb
xor
xchg
nop
in
mov
scas
and
xor
cwtl
mov
jbe
add
sub
cmpsb
dec
movsl
dec
fimuls
outsb
cmpsb
dec
loope
pusha
add
aaa
stos
out
out
cmp
mov
cmp
les
sub
xchg
popf
data16
adc
adc
or
add
add
faddl
add
dec
stos
push
fmul
jge
fdivrp
fiadds
push
call
push
jl
ljmp
jns
idiv
daa
dec
cmp
fldl
inc
add
mov
dec
icebp
popw
add
jmp
lret
loopne
addb
pushl
sub
and
sub
gs
inc
cmc
cmp
out
cmp
mov
mov
sti
and
lods
dec
mov
addl
sarl
roll
loop
cmp
leave
xchg
loope
or
out
popf
or
shrb
stos
sbb
fld1
lcall
das
mov
jne
mov
sbb
inc
add
in
mov
repnz
popa
adc
and
int3
mov
rorl
dec
popa
loop
push
jcxz
jo
in
push
mov
xchg
dec
sub
gs
pinsrw
jl
mov
add
mov
jge
test
pop
cld
jne
add
in
jb
sub
lahf
aaa
inc
add
jae
mov
sbb
push
jecxz
cmpl
insl
and
enter
mov
pop
call
notl
push
hlt
jle
jne
rdtsc
pop
insl
ds
iret
inc
rclb
xor
sub
mov
inc
lret
scas
test
or
mov
mov
sub
mov
adc
inc
add
add
sub
mov
add
fcomp
lahf
mov
mov
mov
dec
popf
psrad
xchg
clc
out
into
sub
add
xor
jecxz
add
int
in
lods
jo
mov
mov
cmp
clc
lret
inc
adc
xchg
push
mov
lahf
inc
out
je
and
adc
addr16
sub
popa
outsl
pusha
add
in
inc
push
add
into
imul
aad
in
xlat
dec
mov
add
insl
and
mov
mov
jae
outsl
rolb
jbe
jb
adc
add
inc
add
cmovb
test
and
lea
sbb
enter
iret
insb
add
sbb
dec
fcomps
lock
mov
or
sbbl
iret
out
ss
jb
cmp
sbb
out
sbb
int3
dec
les
ror
cmp
int3
dec
dec
ljmp
orl
add
cmovle
xchg
out
fcomps
and
lods
dec
push
addb
push
pop
xor
ret
lret
mov
mov
out
push
inc
repnz
ficoml
mov
movsl
cmpsb
mov
fidivrs
movsb
adc
add
lret
ret
sub
js
sarb
scas
loop
cmp
jno
sbb
xor
cwtl
xchg
loopne
cs
es
fwait
cmpsl
xchg
dec
scas
push
mov
add
xchg
sbb
xchg
addb
add
imul
dec
push
add
jbe
addr16
jle
add
xor
leave
dec
insl
inc
add
clc
scas
and
add
add
xchg
pop
lret
lods
lds
sti
addb
pop
push
xchg
or
push
cmp
rol
add
add
imul
pop
xor
mov
xor
daa
cmc
stos
gs
add
dec
inc
add
loope
mov
push
fbld
stos
int3
and
and
arpl
mov
lock
add
test
into
jle
cmp
pop
pop
aaa
jmp
in
inc
add
insb
sub
cmpsl
iret
daa
xchg
add
fldcw
inc
add
scas
stos
push
ja
movlps
rolb
mov
add
add
mov
sub
aas
sbb
mov
sub
test
push
arpl
adc
add
test
idivb
mov
add
jge
mov
jnp
outsl
dec
jl
movsl
cmpsb
xchg
sub
in
addb
xor
cwtl
js
sbb
mov
fadd
add
add
jo
push
xchg
cmp
lods
push
loope
ja
imul
xchg
daa
xchg
dec
arpl
xor
fnstcw
daa
sub
rcll
imulb
pop
xchg
ficompl
push
inc
add
mov
scas
leave
mov
dec
mov
adc
daa
xchg
xchg
xor
cltd
push
sub
mov
xor
je
fwait
jg
or
cmp
aas
xchg
sub
and
push
push
mov
aad
rolb
dec
mov
jle
push
test
sub
ror
jmp
in
xor
call
adc
cmpsl
xchg
and
int
lods
mov
cmp
dec
sbb
inc
dec
sub
mov
das
jecxz
call
mov
sbb
lahf
inc
add
sub
inc
inc
add
jmp
jae
xor
imull
mov
cmp
sbb
repz
dec
in
push
adc
mov
xor
inc
sbb
dec
mov
mov
add
add
dec
mov
add
emms
test
fst
adc
jl
inc
push
shll
ret
stos
lahf
mov
push
add
sub
cltd
ror
xlat
ljmp
lret
rolb
xor
int3
test
cmc
rcrl
xor
movsl
jno
enter
sbb
pop
std
jne
pop
pop
dec
sahf
inc
add
xor
rolb
and
add
pushf
out
cld
pop
test
add
add
ret
cmp
pusha
add
hlt
lcall
adc
cmpsl
adc
rorl
push
ljmp
cmp
mov
mov
in
jmp
push
lock
aaa
idivl
mov
or
push
leave
sbb
lahf
gs
xchg
out
int3
or
mov
addb
add
mov
je
add
dec
adc
fistps
aad
inc
test
sti
cld
mov
lock
add
stos
repz
jnp
mov
jmp
add
and
push
hlt
sbb
dec
fistl
sbb
cmp
cld
frstor
test
push
inc
inc
add
adc
loop
shrb
or
cmp
and
inc
xchg
mov
mov
jns
loop
mov
adc
mov
movsb
push
hlt
sub
xchg
mov
je
jge
lds
das
pop
ficomps
or
push
scas
subl
sub
adc
adc
fsubs
push
icebp
xchg
jae
sti
insl
add
nop
xchg
pop
sahf
mov
add
mov
mov
push
pop
in
add
add
or
mov
pop
mov
mov
sbb
mov
int3
xchg
xor
sbb
cmp
ss
mov
std
int
popf
sbb
mov
rolb
mov
addb
out
aad
inc
adc
ja
sub
lds
stos
scas
outsb
and
sub
mov
movsb
push
cli
adc
shrb
out
jmp
in
mov
mov
adc
mov
repnz
push
sbb
pop
lea
sub
arpl
fidivrs
and
sbb
jno
mov
inc
mov
push
dec
push
inc
adc
mov
jns
movsl
xchg
pop
sti
push
insl
in
add
jp
pushf
jecxz
adc
into
and
and
pushf
cwtl
jo
fdiv
inc
add
xchg
addr16
mov
nop
mov
jp
push
pop
aad
inc
lret
shlb
xchg
push
test
jns
adc
xchg
fisubrl
jns
in
mov
cmp
lods
rolb
shl
call
sbb
lock
mov
fldenv
cltd
js
mov
mov
roll
cmp
sub
mov
push
add
test
repz
cld
mov
jmp
cltd
mov
addb
iret
sub
add
mov
js
enter
cmp
mulb
in
sbb
and
testb
cmp
jecxz
mov
out
loop
mov
test
push
fstl
mov
jp,pn
test
outsl
popf
cmp
add
jbe
cwtl
js
add
aas
or
pop
fsubr
add
pop
lods
lahf
or
cmp
mov
sub
xchg
ja
test
xchg
fsubs
inc
mov
jge
clc
pop
out
stc
jo
cmp
jns
pop
movb
inc
sub
fistpll
rorl
stos
cltd
stc
mov
movb
ss
dec
mov
pop
push
mov
imul
xor
xor
cmc
and
lea
mov
addb
jp
xchg
shll
push
repz
and
pop
add
popf
icebp
cwtl
mov
aam
mov
clc
repz
or
adc
jp
addb
cs
adc
pop
or
lret
pop
mov
add
dec
scas
push
xchg
inc
xchg
push
std
mov
gs
sbb
shrl
inc
add
add
add
or
gs
jae
or
fistps
add
add
test
in
fnsave
rcll
push
mov
mov
cli
data16
adc
call
lods
jb
sarl
call
pop
nop
sbb
push
mov
addr16
shr
ja
push
incb
rcrl
add
jne
mov
addb
ss
pusha
add
pop
push
push
cmp
aaa
add
lret
add
add
scas
icebp
insb
jns
or
inc
loopne
add
inc
repz
mov
pop
enter
and
sbb
test
enter
or
adcl
les
sbb
add
inc
add
adc
sbb
mov
inc
sub
add
add
pop
clc
mov
in
icebp
out
adc
arpl
cmp
nop
mov
pop
mov
push
mov
mov
add
push
sub
push
sti
rolb
xchg
mov
stos
imul
adc
cmpsb
ret
mov
pop
loop
out
xchg
xchg
pop
sbb
test
cmp
inc
xchg
and
lret
test
cmp
add
sub
adc
test
lock
push
std
leave
pop
leave
arpl
test
rorl
dec
xor
into
bound
loopne
or
gs
push
test
mov
insb
out
mov
ror
xor
mov
jl
jb
add
icebp
cmpsb
adc
add
xor
mov
or
cmp
aas
movsb
sbb
jae
dec
out
sbb
add
or
adc
pop
into
jns
jb
aam
aam
sub
outsb
mov
movsl
scas
jmp
add
shl
loop
push
enterw
inc
stos
into
mov
sub
insl
mov
push
mov
mov
gs
mov
out
mov
decl
push
jae
fstpl
cmp
mov
add
rorl
push
mov
fistpll
sbb
fdivrs
mov
push
add
loopne
test
mov
rcll
xchg
das
sub
daa
cmp
add
dec
andl
leave
outsl
jmp
lods
and
and
bound
data16
ret
jge
aam
pop
mov
and
in
xchg
out
jp
adc
test
sti
jmp
arpl
mov
adc
xchg
mov
or
sub
cli
scas
aas
fstpt
test
inc
in
xor
pop
lods
addl
inc
add
dec
push
xor
scas
sub
enter
mov
lods
push
add
pop
ljmp
xchg
fs
pop
mov
insb
std
cmp
add
stos
or
stos
aaa
aas
frstor
in
jecxz
popa
add
mov
mov
push
int3
sti
dec
shlb
fmuls
decb
dec
dec
cld
or
in
mov
ficoml
dec
cmp
pop
mov
add
jns
outsb
leave
xchg
jl
test
mov
inc
aam
push
mov
outsl
out
mov
dec
dec
fildll
adc
mov
push
cltd
sbb
pop
in
insb
ja
add
lods
jl
mov
jge
xchg
xchg
mov
ds
mov
inc
add
jmp
imul
out
negb
adc
movsb
lcall
movsl
movb
dec
aaa
lods
ds
mov
adc
pop
jo
dec
les
pop
sti
push
jbe
add
xor
js
xor
push
add
gs
adc
aam
andl
clc
hlt
xchg
jmp
add
icebp
and
fldcw
faddp
add
inc
add
lret
iret
sahf
stos
arpl
xchg
pop
or
loope
add
xchg
dec
pop
xor
fiadds
adc
or
push
ret
ss
add
cmc
test
add
ret
inc
add
frstor
adc
adc
arpl
sub
push
je
add
mov
outsb
xor
inc
fsubrl
mov
adc
or
dec
or
add
jbe
in
inc
xchg
mov
dec
or
lds
mov
add
add
mov
rorb
pop
test
xchg
test
xor
stos
lds
sub
sti
mov
stc
sbb
sbb
mov
int
xchg
in
mov
bswap
sbb
mov
movb
sub
lea
scas
cmp
cmc
int
fisttpl
lcall
mulb
or
les
lea
add
and
addr16
xor
jl
repz
mov
hlt
loop
paddsw
pop
push
notb
mov
test
lcall
bound
daa
cmpsl
hlt
imul
test
movsb
cmp
pop
xchg
fcoml
mov
call
add
push
mov
lret
mov
mov
aaa
imul
mov
xlat
outsl
ss
out
out
fnstsw
dec
clc
mov
add
xor
or
add
fimuls
std
xchg
mov
int
icebp
or
push
adc
das
std
or
mov
add
add
mov
adc
icebp
mov
ds
cld
pop
sub
and
jne
add
mov
cmp
jns
add
mov
pop
mov
mov
pop
mov
add
jb
add
clc
daa
dec
out
into
daa
or
jns
inc
add
clc
inc
dec
sbb
imul
daa
clc
sbb
out
jp
pop
lock
mulb
cmp
sbb
dec
push
dec
xor
dec
movsb
xchg
jno
into
sub
out
sbb
mov
adcl
outsb
ss
pop
sti
inc
add
pop
sahf
add
pop
push
adc
arpl
fdivrs
adc
dec
mov
mov
xchg
rolb
pushl
pop
lahf
scas
xorl
jbe
shrl
and
aam
fidivrl
mov
sar
insb
daa
fadds
dec
arpl
sti
arpl
sti
mov
testl
jnp
mov
fcmovnbe
rcr
les
and
repz
push
sub
scas
fucompp
xchg
bound
lret
or
addb
popl
stos
lds
in
out
and
add
ljmp
add
cmpsb
push
xchg
insb
repnz
inc
add
xchg
fldt
push
lret
add
mov
nopl
push
leave
jecxz
repz
jecxz
and
call
add
aam
sub
ficompl
and
mov
cmp
and
les
mov
insb
jp
ljmp
in
fildl
dec
pop
jg
or
xor
cmp
mov
sub
test
adc
lret
xor
mov
fdivl
adc
inc
add
or
aaa
dec
rolb
loope
mov
cltd
adc
add
add
cmp
loope
add
adc
add
add
arpl
dec
in
jbe
mov
add
push
mov
push
jle
repz
xchg
pop
sub
mov
dec
roll
movsl
push
cmp
pop
mov
jge
and
enter
push
cmp
lret
xchg
shr
push
outsl
fst
mov
jmp
test
mov
mov
inc
add
push
jo
roll
insb
sbb
dec
push
push
bound
mov
mov
xchg
mov
jle
add
fstpt
adc
in
dec
sub
pop
icebp
mov
and
ljmp
jbe
sub
scas
incb
dec
sub
add
out
arpl
add
xlat
push
pusha
add
int3
xor
hlt
sub
mov
add
sbb
xor
add
into
dec
bound
clc
hlt
fs
sbb
pop
std
andl
fdivs
mov
iret
or
pop
add
ja
pop
fdivs
test
adc
sub
fidivrs
adc
rolb
subl
cmp
or
fwait
lret
shl
mov
xlat
xchg
and
xor
sbb
mov
inc
fdivrl
pop
cmc
mov
call
lods
push
aam
add
push
sbb
lahf
add
js
leave
inc
pop
xor
fildll
movb
mull
gs
cmpsl
pop
add
lcall
add
stc
es
outsb
icebp
cld
shll
jmp
jle
xchg
sbb
or
shrb
in
lret
xor
in
lea
add
testb
dec
mov
setno
mov
sbb
xor
push
pushl
notb
dec
mov
pop
add
fdivl
and
add
aaa
in
pusha
add
add
lret
sbb
or
xor
add
sarb
test
les
repz
push
leave
cmp
inc
sahf
dec
xor
test
inc
add
sarl
cmp
or
add
mov
or
es
push
scas
xchg
add
fsubr
xor
adc
loop
cmpsl
sub
in
ds
jo
test
pop
pop
xlat
iret
adc
aas
inc
fs
adc
movl
imul
inc
jl
fs
scas
outsl
inc
lret
dec
pop
aas
push
notl
test
jmp
les
sbb
add
sbb
sahf
out
jmp
push
jl
jo
xchg
les
push
sbb
lods
xchg
imul
scas
cmc
add
scas
push
repnz
sti
dec
mov
and
mov
outsl
stos
ficompl
inc
pop
addb
je
push
mov
sub
mov
push
gs
mov
mov
mov
adc
sbb
test
xlat
mov
add
mov
and
xor
daa
mov
mov
sbb
std
lds
add
pop
dec
subl
dec
push
hlt
std
popf
xlat
xchg
add
testb
jb
push
pop
xor
mov
in
int3
xor
in
and
dec
mov
add
cwtl
xor
addr16
cmp
fadd
add
popa
call
popf
dec
cwtl
push
xchg
push
cmpsl
popa
popa
mov
cltd
mov
xchg
int3
iret
clc
mov
xchg
pop
dec
enter
adc
clc
pushl
popf
cltd
ds
in
push
cwtl
push
loope
or
jnp
and
mov
mov
out
repnz
pop
jg
mov
call
pushf
jnp
add
clc
jmp
es
mov
add
in
add
int3
jo
insl
or
pop
addb
inc
mov
int
addb
mov
xlat
adc
add
fadd
std
adc
clc
jae
adc
push
setb
adc
insl
and
stos
stos
pop
mov
sub
fiadds
or
daa
cmp
mov
insl
ret
stos
mov
xchg
adc
add
aaa
sub
add
mov
pop
ljmp
iret
mov
loope
and
cmpsb
imul
add
movsl
stos
jo
inc
push
addb
add
call
ljmp
add
negl
into
idivl
scas
fdiv
and
cmp
cmp
rorl
pusha
add
add
and
lahf
cmpsl
cmp
pop
and
add
push
cmp
push
xchg
add
mov
mov
inc
mov
fs
add
push
nop
adc
and
jp
hlt
fs
dec
fwait
arpl
add
cmpl
cmp
andl
add
xadd
mov
xor
inc
add
xchg
sbb
xor
dec
jne
aas
push
insl
stc
mov
daa
fs
lock
test
push
lds
test
je
sub
add
loop
pusha
add
movsb
pop
inc
add
adc
mov
mov
ss
xchg
jmp
data16
clc
or
dec
mov
push
lcall
mov
sbb
add
xchg
in
lds
adc
stc
mov
and
xchg
inc
add
pop
and
les
jecxz
addb
adc
les
or
cli
jge
mov
fsubl
xor
fidivrl
xchg
xchg
fwait
mov
mov
outsl
or
dec
jg
or
movb
mov
jae
jb
setl
inc
add
mov
movsl
ret
push
inc
add
nop
mov
adc
hlt
xchg
fisubrs
data16
roll
xor
xor
clc
test
mov
dec
andl
fcoml
pop
push
loope
inc
icebp
mov
pop
mov
aam
add
inc
jnp
sbb
movb
hlt
dec
and
xchg
jae
insb
and
test
adc
push
lahf
adc
ljmp
sub
fildll
and
mov
je
insl
stc
mov
xor
jbe
or
mov
outsb
inc
xchg
jge
mov
mov
addb
and
adc
addb
adc
add
add
jmp
lock
jbe
jbe
cmpsl
mov
in
pusha
add
mov
sbb
in
mov
call
mov
fsubs
dec
jge
dec
mov
and
pop
inc
mov
rolb
into
in
out
pop
nop
push
inc
add
jg
jnp
fisubl
ja
cmp
push
mov
inc
add
adc
pop
cmp
and
xchg
and
xor
arpl
add
cmp
adc
sti
cmp
stc
mov
push
ret
mov
int
cmc
out
jle
and
addb
dec
lods
or
pushf
loop
adc
jo
xor
mov
movb
and
cmpl
test
adc
rolb
imul
adc
lods
fidivl
aaa
dec
push
bound
xchg
cmp
ret
ljmp
lahf
hlt
xchg
or
fistpl
pushf
mov
add
push
in
and
sbb
xor
insb
jne
sub
out
jne
jne
or
and
mov
inc
add
add
sahf
cmpsl
or
lds
mov
adc
in
mov
gs
jns
and
iret
out
pop
imul
jecxz
cmpsb
stos
lcall
enter
popa
push
push
jle
and
lahf
popa
pop
loope
nop
pusha
add
adc
aad
add
ljmp
lods
mov
daa
sbb
pop
mov
mov
add
addb
fs
loop
arpl
popf
ret
mov
daa
out
imul
add
les
push
bnd
or
ret
mov
xchg
cli
lods
dec
je
add
push
rorb
dec
push
loop
lahf
lret
daa
iret
enter
outsl
movsl
shrb
add
lret
lds
leave
sahf
rolb
xor
add
out
sbb
jbe
push
mov
popa
mov
imul
leave
lret
and
or
dec
ret
test
fwait
stos
xchg
imul
xchg
xchg
mov
das
ss
sub
and
add
cmc
adc
in
push
lock
jle
fistl
add
cmp
lods
adc
mov
iret
test
pop
mov
add
mov
cmp
push
add
pop
mov
sub
add
addr16
ljmp
into
sti
or
add
cltd
cmpsb
dec
jno
xor
ja
stc
mov
mov
es
dec
pusha
add
out
mov
popf
repnz
xchg
pop
jae
xor
idiv
xchg
movsl
loopne
les
inc
add
add
fcmovne
add
push
cld
jo
test
adc
movsl
lock
cmc
js
ss
jb
dec
arpl
cwtl
ljmp
add
cmc
and
pop
nop
minps
mov
sbb
cmpsl
stos
pop
mov
xor
xor
xchg
pushl
add
push
add
mov
cmp
mov
push
addb
gs
mov
xor
ret
outsl
ss
js
andl
in
int3
jbe
mov
out
and
scas
xchg
ds
cmp
or
stc
lret
pop
loope
dec
jb
xlat
es
lock
xor
fsts
in
je
sahf
inc
jle
jg
aaa
push
pop
cs
sub
imul
mov
lods
xor
push
lret
xchg
inc
mov
lahf
mov
add
iret
xor
addb
cli
or
pop
jle
inc
xchg
xlat
js,pn
test
adc
fisttpll
lock
sbb
daa
add
cmp
cs
add
cmp
neg
rcrl
mov
add
xor
xchg
bound
clc
dec
jge
inc
jbe
and
xor
xchg
out
cmpsl
fcoms
iret
aaa
inc
pushf
adc
inc
xor
ss
jnp
push
jo
add
in
sbb
sbb
dec
aas
pop
ljmp
insb
sarl
int
and
add
imul
inc
add
mov
imul
leave
imul
xlat
mov
lods
call
shll
pop
xchg
adc
mov
sbb
jle
daa
scas
ljmp
cwtl
orl
mov
add
push
cltd
inc
add
or
leave
ja
xchg
or
and
das
add
add
nop
push
xchg
push
out
cmpsl
pop
dec
in
pushf
dec
dec
jno
mov
es
movsb
fbld
fistpll
cltd
js
dec
and
ja
fwait
push
xchg
aaa
add
push
add
inc
add
fmul
and
xchg
push
mov
mov
add
xor
js
loopne
jmp
cli
hlt
je
add
insb
jb
mov
add
add
jg
test
in
cli
divb
test
add
inc
sbb
cli
addb
xchg
inc
fisubl
xor
loop
mov
pusha
add
cld
xchg
jb
pop
cli
sbb
xor
stc
loop
test
jno
adc
mov
add
aaa
ret
push
in
push
addb
loopne
add
mov
mov
shlb
mov
fisttpl
adc
pop
data16
inc
add
sarl
mov
ret
arpl
jg
mov
fldt
mov
out
bound
popf
sbb
add
dec
leave
push
add
push
outsl
mov
jle
pop
js
mov
stos
sub
imul
dec
cmc
pop
inc
stos
fucomip
cmc
loopne
ljmp
cld
rolb
cs
pop
daa
jp
mov
leave
jg
add
dec
leave
std
xchg
mov
icebp
xchg
jb
add
or
and
and
adc
inc
popf
lret
jnp
mov
repz
inc
add
inc
pusha
add
jns
jns
xchg
ret
adc
mov
inc
xorl
cmp
jle
lea
xchg
push
out
pop
push
fstl
add
push
lds
add
repnz
pop
push
test
fsubrl
sub
shll
pop
daa
mov
xlat
movb
rolb
dec
or
in
push
fbstp
std
or
push
push
std
stos
push
js
push
xor
daa
imul
xchg
xchg
xchg
push
int
and
pusha
add
les
js
mov
adc
adc
out
ret
aam
push
cmc
nop
and
xchg
inc
add
movsl
pop
test
mov
subl
aas
sbb
push
and
jg
mov
add
push
xor
xchg
ds
push
add
aad
add
dec
mov
lods
push
idiv
lods
insb
adc
ja,pt
xchg
sub
or
cmp
mov
and
xor
jns
mov
js
push
mov
aam
sub
in
pop
lret
mov
cwtl
xor
or
fcmovnbe
jge
fwait
repnz
add
push
js
les
xor
cld
testb
cmp
mov
aad
push
jle
shll
mov
dec
xchg
xchg
push
xchg
mov
pop
sub
lods
pop
mov
mov
push
fsubrl
cmpsl
mov
aaa
fmuls
mulb
in
inc
add
xlat
push
xchg
sti
insl
fbld
stc
das
movsb
das
rolb
mov
mov
pop
out
std
jbe
mov
push
fisubs
pop
adc
jo
shrl
jb
filds
xlat
push
sarb
add
lods
lret
stos
push
clc
rcrl
jns
add
sub
int3
stos
pop
inc
add
loope
jmp
popf
ja
push
adc
mov
adc
iret
std
cmp
popa
loop
push
pop
movb
in
inc
add
rcl
std
xchg
jecxz
paddq
out
add
add
fistpll
xchg
pop
inc
push
or
add
xor
ret
and
addl
or
xchg
pop
popf
mov
mov
or
adc
out
xchg
inc
mov
mov
xor
pop
adc
mov
add
add
scas
addr16
mov
add
pop
pusha
add
je
dec
dec
test
leave
mov
sub
in
into
push
pop
cld
add
cwtl
movsl
xor
add
inc
fcomps
int
add
lock
lods
stos
fldenv
test
fisubrs
jle
and
adc
arpl
push
ljmpw
or
push
or
push
or
mov
pop
es
cmc
ret
addr16
fwait
scas
mov
sbbl
fnstcw
fidivrs
fadds
xchg
sub
gs
aad
mov
mov
add
add
push
mov
sub
sbb
pop
fisttpl
imulb
imul
xchg
call
int3
cwtl
mov
subl
jnp
xor
mov
sub
push
jg
fistpl
and
mov
sbb
sub
aas
mov
clc
and
lods
inc
add
out
pop
pushf
sbb
add
push
xlat
lcall
dec
mov
push
jno
jl
fnsave
pop
cmpsl
jge
add
sti
outsb
ja
dec
gs
pop
xor
shrl
int
jae
addb
popa
pop
icebp
enter
loopne
xor
aad
jl
mov
or
xchg
pop
fidivl
or
push
or
jg
popl
enter
xchg
movsb
mov
add
sbb
and
ret
pop
sbb
lret
inc
add
jae
addr16
nop
ljmp
and
ja
jl
popa
dec
aas
rcl
aaa
int
nop
je
movsb
mov
out
cld
adc
cld
jecxz
cmpsb
pop
mov
addl
aaa
sbb
add
inc
cmp
sbb
xor
add
inc
xlat
mov
out
mov
xchg
stos
ficompl
inc
push
mov
pop
popf
jae
mov
clc
shlb
add
rdmsr
pop
retw
cmp
test
outsl
dec
addb
inc
add
sbb
push
jmp
sahf
push
sbb
mov
inc
add
push
sub
lcall
sub
lea
pusha
add
test
popf
mov
push
nop
je
int3
jb
jecxz
pop
inc
call
rcrl
fbstp
lahf
jp
xchg
sti
add
aaa
cmp
in
cmp
repz
lea
add
sahf
cs
mov
rorl
aas
push
les
mov
add
and
push
and
dec
mov
loopne
adc
dec
mov
pop
ret
pop
xchg
into
lahf
outsl
in
test
lret
leave
stc
sti
and
add
sbb
das
cltd
clc
inc
pop
movsl
shlb
push
mov
js
pushf
mov
sub
cmpsl
or
jg
repz
movb
jb
xorl
negb
xchg
in
and
and
push
pop
pushf
sub
jae
mov
adc
pop
cmp
add
and
sub
es
xorl
data16
in
xor
nop
data16
and
cli
clc
ds
out
arpl
int
fucom
inc
cld
ljmp
sub
push
std
popf
pop
adc
outsl
or
daa
mov
aam
push
mov
insl
rolb
sub
lea
lock
repnz
int
in
cmp
movb
addl
hlt
push
xor
jg
sbbl
add
pop
mov
or
fsubs
shrb
pop
shr
and
sbb
dec
cmp
icebp
leave
shll
sbb
jecxz
cmp
add
and
lea
sbb
out
fimull
addb
rcrl
insb
inc
add
out
add
jne
shll
mov
mov
inc
add
imul
mov
dec
adc
je
add
out
pop
loope
sahf
dec
jmp
addr16
pop
das
mov
int3
shrb
mov
and
xacquire
cmp
pusha
add
fisubl
ret
test
outsl
and
and
movsb
cmp
pop
xchg
clc
lcall
or
or
lret
inc
add
dec
mov
imul
dec
iret
outsw
add
scas
mov
xchg
sub
int
repnz
or
fmuls
iret
bound
jg
mov
jg
add
pop
inc
add
adc
insl
sub
aam
mov
mov
andl
add
inc
lds
sbb
jmp
fs
into
inc
jle
mov
lods
mov
ret
scas
daa
xlat
mov
push
push
pop
test
add
sbb
nop
int
add
sbb
xor
not
fmull
fistpl
push
cwtl
pusha
add
mov
mov
mov
mov
mov
jmp
add
cmp
add
sbb
ljmp
orl
add
movsl
push
or
popf
jns
push
test
inc
add
sbbl
adc
lret
loopne
cmpsb
inc
add
mov
loopne
mov
push
and
clc
jo
add
adc
add
fldt
mov
cmpsl
into
ror
nop
fistps
ficomps
stos
addb
jmp
jne
dec
mov
jmp
or
pop
lret
movsl
adc
xchg
mov
bound
and
mov
ljmp
inc
add
movb
in
popa
les
movsl
gs
mov
inc
mov
mov
pop
and
mov
inc
shll
lret
push
cmp
pusha
add
inc
add
aad
bound
shlb
add
push
xor
mov
adc
add
sbb
mov
add
add
push
in
mov
lcall
mov
and
mov
loopne
adc
dec
sub
add
es
fcomi
es
je
push
aad
sub
mov
divl
push
pop
or
cltd
xchg
adc
add
imull
sbb
inc
pop
shll
mov
or
xchg
xchg
lgs
pop
adc
sahf
sbb
repz
sub
mov
add
fisubs
insb
push
push
bound
jns
ret
xor
mov
add
jo
or
mov
jb
pop
inc
add
mov
inc
nop
js
sub
lret
roll
add
push
pop
push
std
push
jecxz
push
xchg
ficoms
jb
mov
add
xchg
pop
mov
pop
cmp
test
cmp
leave
xor
adc
dec
push
lret
repnz
into
xchg
sub
jmp
lret
ss
imul
add
sub
and
rorl
test
gs
inc
xor
into
pusha
add
add
mov
rcrb
mov
sbb
jnp,pn
popf
aas
test
scas
stc
fiaddl
into
cld
xchg
xchg
cmp
add
push
lahf
mov
movnti
mov
in
adc
mov
jne
add
mov
inc
sub
inc
add
les
pop
aaa
lock
scas
call
int
cmpsb
dec
xlat
jg
ret
inc
add
das
fistps
shll
jne
out
fwait
mov
popf
push
mov
push
ss
mov
and
bound
mov
jns
fsubr
ljmp
add
rcrl
fwait
inc
popf
enter
mov
daa
xor
add
das
jle
sbb
sti
mov
addb
add
mov
leave
or
ljmp
mov
inc
dec
pop
ret
add
adc
jns
push
add
add
push
jl
add
sbb
ds
add
push
lods
pop
fcomps
sbb
out
mov
push
imul
fidivrs
in
idiv
fs
jne
cmpsl
into
scas
or
sub
cmpsl
addb
push
aad
cmp
adc
stos
add
add
cmc
out
pusha
add
xchg
fcoms
add
xchg
pop
mov
sub
add
inc
xchg
adc
inc
add
loopne
jg
adc
adc
mov
fcoml
cmp
mov
pop
add
sahf
push
xor
loopne
or
sti
push
je
insl
jbe
cwtl
jne
sub
fcmovne
xchg
ljmp
out
fidivrl
sub
jl
or
popf
push
aam
inc
add
repnz
push
lahf
and
pop
mov
and
rcll
lock
mov
movb
jle
not
mov
and
add
sbb
add
pusha
add
out
pop
shlb
push
sbb
jmp
lret
aad
mov
std
hlt
mov
dec
xchg
ljmp
data16
iret
mov
jbe
or
ds
lret
andl
jmp
stc
scas
cmp
sbb
add
add
addr16
push
clc
ret
clc
and
sbb
add
xor
add
bound
adc
or
stos
push
bound
mov
push
std
nop
cmp
divl
sbb
lcall
jp
filds
sub
roll
fwait
rorl
out
mov
call
mov
aad
adc
add
pop
mov
add
aam
addb
cwtl
xchg
out
imul
add
pop
and
bound
mov
cmpsb
add
inc
test
add
adc
add
test
adc
fidivs
xchg
dec
hlt
xor
int3
fidivrs
fsts
pusha
add
push
bnd
jne
xchg
dec
sbb
jmp
mov
ljmp
ret
xchg
jge
ss
jmp
fimull
adc
fwait
xchg
fistps
aas
lret
sbb
clc
std
pop
fs
add
mov
cmp
add
and
pop
jne
mov
jmp
testl
mov
or
mov
push
add
clc
jns
push
test
sbb
mov
add
test
leave
loop
arpl
lcall
xchg
adc
mov
stos
pop
sub
jp
cmp
sbb
js
lret
dec
fidivl
lret
stos
dec
adc
es
xor
xchg
out
dec
iret
xchg
jno
dec
add
and
scas
sub
cmp
or
push
js
fdivr
and
notb
add
or
jle
test
push
bound
cwtl
bound
sbb
inc
add
scas
addl
add
sbb
add
mov
rcll
repnz
push
aaa
lods
pop
in
test
push
inc
xchg
test
or
addb
enter
inc
add
imul
mov
adc
adc
adc
js
sahf
jg
loopne
lea
adc
les
in
add
sub
js
lea
add
enter
mov
mov
cli
mov
adc
lock
int
and
jmp
mov
fcoml
adc
sub
push
inc
add
add
add
push
inc
mov
cmp
push
add
lea
mov
fldt
or
xor
out
and
push
jle
add
repnz
lcall
outsl
int
push
mov
in
bound
sbb
das
jbe
pusha
add
mov
adc
add
pop
inc
mov
hlt
jle
xchg
pop
cmc
cmp
gs
push
and
inc
arpl
test
push
or
add
and
adc
movb
adc
scas
inc
add
and
fcoml
pop
jns
jb
and
or
inc
add
lods
add
xor
out
jbe,pn
popa
das
clc
das
xor
xor
repz
cmc
lock
cmp
pop
stc
cmp
xor
xor
in
fwait
sub
push
or
sbb
or
dec
int
pop
cmp
test
lds
xor
je
mov
cmp
add
mov
mov
push
pop
in
insl
movsl
dec
mov
jle
push
pop
sbb
fwait
xor
jle
add
jbe
xor
test
addr16
dec
and
fld
add
adc
lods
fdivs
sbb
jns
cwtl
scas
test
pushf
addr16
pop
xchg
mov
into
in
cmpsb
mov
mov
leave
sbb
cmp
ja
jns
hlt
sub
loope
add
inc
jne
clc
into
rorl
ret
mov
cmp
rcr
dec
bnd
mov
clc
aaa
cmp
add
xlat
jnp
rclb
push
std
ljmp
pop
mov
mov
movsb
inc
aam
mov
lret
aad
xchg
les
xchg
sub
or
pop
outsb
push
rolb
dec
mov
pop
jo
xor
mov
and
repz
call
popa
jp
addb
addb
stc
mov
xchg
in
mov
jbe
pop
into
out
ror
pop
repz
ja
es
scas
mov
mov
sbb
out
les
sbb
add
fcmovnu
shr
inc
add
out
int3
mov
les
icebp
insl
je
in
push
push
mov
pusha
add
lret
mov
add
addb
cs
mov
filds
pop
bnd
loopne
sub
add
xchg
mov
int
push
xlat
sbb
mov
cmpsb
sub
jb
pop
sbb
mov
add
pop
test
xchg
repz
xor
repnz
out
xorl
decb
mov
jbe
cmp
es
arpl
fidivrl
bnd
xor
add
hlt
pop
push
push
arpl
int
jmp
jecxz
add
int
cwtl
cmc
xchg
adc
jmp
ret
sbb
xchg
shll
pop
jae
lcall
add
rolb
jp
or
dec
dec
pop
xchg
shlb
add
sahf
jae
add
dec
daa
ret
addb
hlt
lret
add
pushl
mov
mov
adc
inc
add
nop
inc
add
and
lock
lret
fs
jno
jns
outsl
bnd
movsl
cmpsl
paddd
rcl
xor
out
es
into
jbe
adc
ret
je
push
xlat
fwait
pop
mov
dec
mov
mov
repz
cmpsb
jg
push
cld
pushf
insb
sub
or
jle
and
push
and
push
xor
sbb
aam
pop
mov
mov
add
out
add
sbb
inc
add
xor
movsb
xchg
ljmp
add
dec
cmp
xor
addb
jbe
rorb
cmp
fwait
add
fisubrl
rolb
rorb
jnp
mov
sbb
enter
std
lret
leave
sbb
insl
out
cli
xchg
push
push
sbb
inc
add
add
mov
and
bound
pop
mov
jbe
jmp
popf
mov
mov
das
stc
mov
xchg
mov
pusha
add
fcompl
ds
mov
ficoms
psubusw
add
pop
stc
aam
mov
push
sub
mov
add
or
sarb
adc
mov
mov
fstpt
movsl
pop
fmull
xor
rolb
add
mov
push
xchg
push
inc
add
push
jne
je
cmp
loopne
fiaddl
adc
pop
pop
rorb
popf
imul
or
repz
adc
test
xchg
mov
jp
mov
sub
or
icebp
pusha
add
push
add
mov
test
enter
cmc
lock
addr16
adc
push
cmpsb
arpl
and
mov
mov
sbb
or
fistl
in
pop
scas
dec
stos
mov
lret
or
sbb
lret
sahf
in
jne
push
imul
jne
mov
push
push
add
pop
aas
or
mov
mov
adcl
wrmsr
arpl
notb
push
mov
add
adc
fmull
mov
mov
cmc
sub
adc
jae
je
mov
jmp
notl
xor
add
clc
pop
in
lret
xor
test
stos
test
cmpsb
push
ja
mov
add
insb
sti
jle
test
fs
aad
shlb
mov
xchg
mov
imul
and
pop
cmp
pop
fucomip
cld
fisttps
leave
fbld
cmp
test
jge
test
les
dec
pop
add
sbb
imul
or
mov
adc
xchg
imul
push
mov
and
jmp
sarl
int3
call
jnp
loop
mov
inc
add
shll
jne
std
cli
adc
lret
leave
mov
lea
and
inc
cltd
aaa
xlat
lcall
mov
dec
jecxz
fbld
cmp
jge
add
stos
cmp
cmpsb
and
cltd
in
dec
mov
add
test
adc
popf
dec
xor
xchg
addr16
hlt
xor
fmuls
pop
mov
pop
aaa
imul
mov
mov
mov
add
mov
mov
add
addb
in
imul
lock
cmp
xorl
jge
les
ja
and
into
pop
lds
bound
xor
dec
loopne
add
push
jne
shll
aam
scas
popf
ljmp
add
jns
leave
fwait
jno
je
sti
insb
cmp
and
jo
fistpll
sbb
andl
mov
mov
mov
popf
sub
pop
adc
mov
and
rclb
add
mov
std
inc
add
add
add
dec
mov
insl
inc
pop
cmp
mov
cmpl
push
loopne
aas
ror
ss
lock
js
jmp
dec
pop
icebp
fldt
roll
fmul
sbb
scas
arpl
test
mov
out
push
test
das
pop
cli
ret
mov
je
push
xlat
loope
add
sub
sub
fsubs
mov
sbb
lock
ljmp
mov
mov
xchg
add
test
aaa
mov
lods
add
mov
insb
fldl
add
jbe
movb
xchg
cltd
mov
pop
sbb
jbe
xchg
iret
mov
mov
xchg
sbb
xor
jmp
add
loopne
xchg
mov
sar
ror
ljmp
add
das
or
add
or
and
cmp
iret
lock
and
add
or
push
addr16
xor
add
xchg
xchg
dec
sbb
sub
sub
movsb
pop
stos
insb
jle
aaa
outsl
mov
and
sbb
in
pop
fbld
jno
push
fldt
xchg
mov
add
add
mov
mov
jno
jp
inc
add
sbbl
xchg
aas
icebp
testl
mov
jbe
or
add
dec
pop
incl
shrl
inc
roll
lret
add
jns
add
jge
stos
push
dec
adc
pop
xchg
push
fwait
and
mov
fwait
icebp
mov
icebp
jno
mov
add
popa
ljmp
ret
add
div
popf
outsb
xchg
xor
sbb
daa
xchg
mov
pop
enter
shlb
test
mov
xchg
push
sub
sbb
pop
or
xor
add
inc
or
movsb
imul
mov
xchg
addb
xlat
cmpsl
lds
mov
lods
sti
ficoml
xlat
mov
hlt
fdivrl
mov
pop
cwtl
movups
add
xchg
dec
cmp
addb
mov
sarl
add
mov
jl
ror
testl
add
ficompl
jne
aas
adc
add
cmc
sbb
arpl
bound
xor
data16
add
adc
xchg
adc
ss
nop
into
fwait
pop
aam
cmp
xor
push
roll
add
les
sbb
testl
add
and
bound
in
sub
add
scas
addb
daa
pop
push
cli
gs
push
sbb
add
ud2
ja
scas
aam
loop
movhps
mov
sub
subl
addb
or
push
add
insb
or
add
jno
cmp
push
jg
cmp
shll
add
mov
lods
push
fsubp
pop
push
mov
cs
dec
jecxz
pop
xchg
jno
xchg
int
into
dec
les
test
test
sbb
and
mov
mov
sub
xchg
xorl
jne
inc
ljmp
das
mov
addr16
addr16
sahf
out
mov
fwait
pop
mov
std
push
andl
nop
cli
lods
adc
aaa
sbb
add
jno
pusha
add
inc
dec
scas
leave
aaa
jnp
divb
nop
jae
mov
jnp
mov
xchg
test
and
mov
xor
or
rolb
push
movb
icebp
dec
pop
sub
pop
jns
mov
mov
cmp
repz
enter
pop
xchg
ret
cmp
adc
add
mov
add
ficomps
xchg
mov
add
shll
lods
xchg
int3
dec
or
and
jne
int
inc
call
and
jbe
add
mov
pop
push
pop
sub
cmp
fsubrs
and
lret
push
add
notb
in
xor
aam
fidivrs
sub
push
mov
push
addb
dec
cmp
icebp
dec
scas
arpl
mov
fldt
imul
push
mov
mov
inc
dec
dec
cmp
test
xchg
add
inc
dec
jbe
int3
xor
rcrb
rep
push
nop
adc
jecxz
int3
mov
add
movsb
mov
pop
clc
sarb
adc
bswap
sbb
push
imul
es
cmpsl
jns
jbe
loopne
and
addb
faddl
sub
outsl
clc
sbb
addb
xchg
push
jl
add
lret
insb
mov
pusha
add
int
push
sub
push
movsb
cld
pop
xchg
jmp
fists
jmp
add
xchg
je
sbb
fadds
lods
adc
orl
fwait
mov
pop
pusha
add
lea
adc
mov
insl
push
ljmp
add
adc
or
stc
int3
mov
add
jnp
test
or
xor
xor
aad
jecxz
mov
add
or
mov
xor
xchg
and
or
shlb
in
dec
mov
sbb
jnp
cmp
add
mov
pusha
add
xchg
addb
pushf
jmp
incl
add
dec
mov
aas
addr16
sub
daa
mov
cmp
jle
or
xor
or
jno
mov
mov
lds
add
add
push
mov
mov
repz
daa
sub
fistps
aas
push
xchg
adc
pop
sub
lcall
sti
imul
out
sti
jecxz
mov
add
mov
or
cmovg
xchg
pop
sbb
sahf
nop
jno
movsl
aaa
mov
lcall
adc
popa
mov
mov
daa
sub
jnp
in
dec
mov
dec
iret
xchg
jl
cmp
bound
inc
subl
dec
xchg
inc
das
aam
and
or
outsl
pushf
add
adc
mov
adc
jns
add
mov
add
inc
inc
add
andl
das
mov
int3
mov
and
dec
mov
add
jp
pop
cmp
xor
bound
les
xchg
in
inc
testl
add
movsb
push
ret
add
inc
add
in
rep
jb
int3
xchg
adc
and
xor
mov
mov
aam
sub
data16
inc
ret
rcll
test
lds
rolb
nop
push
jp
loope
in
mov
and
enter
add
jecxz
loopne
add
fisubl
push
loopne
imul
add
movb
or
loopne
xor
add
adc
lcall
stos
pop
frstor
lcall
add
test
ret
mov
pop
dec
lahf
outsb
xchg
fstl
sbb
add
jl
out
sbb
cmp
cli
dec
and
out
jmp
add
dec
aas
lea
pop
dec
sti
enter
and
es
add
daa
sbb
pusha
add
repz
xor
push
pop
adc
and
sub
dec
pusha
add
add
mov
jmp
test
add
aam
add
and
jg
xchg
das
add
leave
popf
dec
lahf
movsl
fisubrl
jge
ss
cltd
add
pop
aaa
std
negb
arpl
add
dec
stc
shr
mov
pop
cmp
out
bound
ss
repnz
out
popf
mov
out
adc
iret
lods
stos
mov
pop
mov
pop
clc
insl
mov
fstl
or
xchg
mov
cwtl
pop
stos
mov
add
mov
or
pusha
add
imul
test
stc
hlt
jne
xchg
fsub
fs
sti
jle
addb
mov
in
in
imul
add
mov
fdivrl
rolb
add
push
dec
mov
mov
mov
lock
fisubrs
iret
jl
cmp
loope
push
cwtl
pop
cmp
movsb
cmpsb
push
jbe
add
ret
jl
mov
add
dec
lcall
mov
fldenv
dec
cmp
sub
mov
loop
cmc
daa
out
outsb
sub
mov
mov
loopne
push
push
movsl
or
add
rorb
pop
and
push
cmp
mov
lret
test
push
or
into
iret
aas
cmp
inc
add
insb
test
jno
fwait
insl
fldcw
ret
cmp
push
call
js
pop
cltd
movb
sbb
cwtl
addb
leave
out
xor
and
movsb
ja
add
jnp
add
pusha
add
push
or
mov
and
sbb
fidivrl
cmp
xchg
inc
add
add
add
popl
add
xchg
in
popa
sub
lock
mov
arpl
popa
cmp
add
push
movsl
popa
and
cs
aas
adc
mov
scas
rcrb
add
sbb
add
and
cmp
mov
adc
mov
xchg
loopew
in
jmp
es
sub
push
sbb
lock
orl
or
stos
sub
mov
inc
add
cmpsl
fdivs
pop
and
cmp
or
scas
or
pmuludq
cld
popa
mov
add
add
addb
mov
mov
dec
pop
xchg
and
shl
aam
test
nop
sub
stos
pop
pop
jns
jecxz,pt
pop
jp
addb
jno
out
mov
push
jp
sub
push
dec
fldl
add
mov
into
lock
fdiv
fisubrs
or
xchg
jp
add
pop
rcrb
lahf
push
scas
movsl
lret
loopne
arpl
dec
xor
or
jae
push
push
lahf
mov
mov
inc
inc
jp
inc
add
cltd
rolb
xor
xor
add
mov
and
sub
pop
mov
dec
sbb
add
inc
add
not
or
push
repz
fidivs
scas
xchg
mov
add
jmp
mov
sub
icebp
push
int
inc
ds
adc
repnz
movb
jmp
fnsave
insb
outsb
pop
in
sub
or
add
imul
fmull
addr16
cld
mov
imul
lcall
sbb
mov
aaa
addb
add
lret
iret
pop
call
push
lret
test
stos
int3
movsl
cwtl
jge
cmpsl
xor
sarl
mov
adc
dec
sub
jo
daa
incb
mov
push
outsl
in
sbb
add
cltd
xor
add
shll
add
stos
xlat
xor
repnz
sbb
inc
out
push
add
xchg
out
test
mov
fwait
jp
push
daa
adc
lods
fcomip
or
add
fwait
xchg
push
xchg
mov
add
popa
clc
or
mov
sbb
push
push
adc
movsb
cmp
add
daa
push
xchg
daa
lret
pop
ret
idivl
jl
in
jl
add
test
adc
or
repz
pop
rolb
lcall
add
bnd
pop
inc
add
addb
add
scas
adc
loopne
add
add
jp
adc
les
jo
sahf
scas
int3
rclb
movsb
push
cwtl
nop
test
add
in
ja
out
xchg
imul
dec
and
das
iret
icebp
add
dec
jno
xchg
cmp
jg
gs
mov
or
add
pop
or
movb
pusha
add
lcall
test
sbb
mov
insl
mov
imul
addr16
jnp
lret
push
das
xchg
mov
dec
lea
ja
xchg
push
insb
xchg
leave
addb
adc
sbb
sbb
sbb
mov
mov
pushf
jle
mov
and
jl
and
and
pop
and
fsubl
scas
fidivs
cmp
pop
mov
mov
jg
mov
dec
inc
add
or
xchg
sbb
movsb
das
lret
lret
push
and
call
scas
stos
add
sti
jnp
rcrb
mov
sbb
dec
cld
movsb
ficoml
mov
adc
push
add
jno
into
inc
addr16
add
xor
lahf
sbb
mov
inc
sbb
idivb
lock
sbb
xchg
stos
testb
mov
mov
mov
mov
test
lods
fst
jp
sar
in
pusha
add
push
stc
or
push
aas
jno
xchg
pop
mov
jo
dec
or
dec
inc
lods
leave
ficomps
out
insb
add
mov
lret
mov
mov
or
out
and
jns
mov
or
adc
lcall
add
lret
dec
pop
aam
jmp
mov
xchg
scas
inc
add
add
jnp
mov
dec
cwtl
xchg
fnsave
ljmpw
clc
pop
cmpsl
loopne
scas
xor
pop
out
add
out
mov
addl
out
mov
jg
imul
dec
into
push
inc
add
and
cmpsl
cli
inc
add
fistpll
push
pop
repz
fimull
scas
pop
mov
ret
mov
arpl
gs
pop
fisttps
add
xchg
adc
xchg
cld
push
dec
sub
add
push
test
in
loop
add
dec
dec
icebp
fstpt
jmp
inc
add
sub
scas
cmpsl
lock
ret
mov
add
sbb
add
sbb
in
push
clc
push
outsl
mov
cld
and
jecxz
add
xchg
pop
xchg
push
push
lods
xchg
jns
lds
dec
loopne
cmp
jmp
cmc
xor
mov
push
add
movsb
jno
push
push
push
shll
inc
add
cli
outsb
ljmp
mov
fcoml
test
gs
mov
mov
add
mov
loope
add
cli
test
testb
mov
pop
or
pop
bnd
fcmovne
cs
add
pop
loope
xchg
mov
or
mov
xchg
sub
mov
mov
pop
sbb
mov
jmp
fwait
xor
adc
cmp
add
sahf
xlat
imul
test
das
lock
dec
sbb
push
mov
add
faddl
or
mov
jb
dec
stos
out
cmc
mov
aam
push
dec
movsb
test
notb
jmp
mov
movsb
sbb
push
mov
mov
arpl
xor
add
xchg
mov
and
fstps
jbe
jno
lahf
xchg
mov
inc
add
cs
mov
popa
mov
ret
int3
sahf
pop
and
mov
jnp,pn
dec
mov
mov
mov
mov
loopne
neg
les
mov
aad
sub
jnp
lcall
fcmovnu
pop
jb
rolb
xchg
inc
into
push
fwait
adc
rolb
jb
movb
arpl
add
cs
mov
mov
mov
add
add
aas
dec
dec
imul
xchg
rolb
add
bound
test
or
mov
push
icebp
pop
jo
scas
inc
or
add
es
cmp
lods
add
leave
inc
push
icebp
mov
das
inc
xor
clc
xchg
add
xchg
add
add
aas
rorl
cmp
in
jns
add
jbe
add
xchg
inc
add
int
call
xor
inc
mov
xchg
es
inc
int
insb
adc
sub
pop
hlt
mov
cmpsl
sbb
ret
stc
mov
jle
stos
dec
pop
pop
xchg
std
pop
sub
in
or
add
or
leave
push
cmp
ret
jnp
dec
scas
push
xchg
daa
and
cmp
shll
fs
add
imul
add
xchg
add
pop
int3
cld
sub
sbb
fcoms
sbb
dec
cmp
sbb
pop
mov
mov
pop
lock
sti
bound
insl
test
inc
add
call
popf
pop
stos
add
stos
insl
fcoms
in
addl
das
xchg
addb
movsb
xchg
xchg
repnz
dec
test
adc
pushf
mov
mov
and
or
dec
xchg
mov
inc
movb
push
inc
insb
push
pop
push
cltd
push
sbbl
add
add
aad
add
sbb
icebp
sub
mov
adc
pop
inc
inc
xchg
aas
sbb
pop
jle
cmp
cmpsb
imul
and
mov
cmpsb
call
daa
jmp
jnp
inc
add
sbb
pop
arpl
mov
add
mov
dec
jo
inc
add
cltd
daa
adc
mov
fidivs
mov
sbb
out
mov
in
rcrb
xchg
xor
addb
sub
dec
mov
insl
mov
adc
mov
ljmp
mov
les
sub
lret
test
lods
xchg
sbb
mov
xchg
cwtl
fucomip
xor
jl
push
mov
pop
cltd
call
and
xor
aas
push
inc
jne
movb
testb
aam
cmc
cs
adc
push
dec
out
mov
fwait
out
daa
out
dec
ss
call
iret
bnd
cwtl
icebp
mov
cmp
mov
mov
daa
cmp
mov
mov
mov
add
add
popa
faddp
add
scas
push
arpl
add
addb
outsl
outsb
adc
std
js
jne
loopne
stos
xchg
pop
pop
sbb
add
add
push
call
jno
jno
cmpsl
test
rorl
out
cmp
add
aas
pop
aad
cltd
push
imul
hlt
js
sub
cmp
test
push
xchg
cmp
sub
xchg
xor
jb
mov
addl
inc
add
add
mov
pop
and
fbld
cmp
mov
pop
add
idivb
test
inc
inc
add
add
gs
nop
sti
pop
mov
shlb
lcall
jmp
xchg
das
jecxz
test
add
hlt
xor
rorl
test
mov
fildll
pop
push
dec
sub
add
cli
insb
push
pop
repnz
imul
loop
lcall
sbb
mov
lcall
ja
lods
mov
and
enter
xchg
cmp
int
addb
inc
add
push
fcmovne
cmp
mov
sarl
dec
hlt
fldcw
or
mov
inc
add
les
insb
mov
or
cmp
cmp
pusha
add
popl
jecxz
and
xlat
push
imul
repnz
sbb
add
cmp
sub
sbb
xchg
cmpsb
push
scas
and
adc
loope
fildl
mov
fchs
pop
aaa
add
and
filds
pop
inc
add
repz
and
mov
inc
mov
pop
addl
nop
out
dec
movsl
addb
or
and
push
idiv
and
imul
mov
jbe
rcrl
mov
dec
sarb
sub
mov
xchg
psllw
out
mov
xchg
popl
loope
jne
enter
lds
addr16
add
lea
dec
fstl
mov
add
adc
repz
popa
sbb
jmp
pop
stos
negb
mov
call
jle
hlt
jmp
mov
xchg
in
sahf
leave
add
test
inc
add
lcall
aam
sbb
repz
clts
add
xor
fsubrl
dec
cmp
jno
add
sbb
fildll
add
xor
xor
test
lods
push
and
movsb
in
mov
mov
arpl
and
jnp
jp
cwtl
stc
stc
insb
enter
xchg
adc
add
pop
ljmp
pusha
add
int
je
add
subl
shr
pop
lock
roll
out
jle
movsl
dec
add
hlt
and
xchg
aam
aam
xor
and
int3
fidivs
xchg
aaa
leave
in
fildll
into
or
push
out
add
popf
sub
xchg
je
std
mov
jecxz
sarb
pop
enter
cld
stos
inc
add
test
imul
hlt
mov
xchg
dec
nop
add
notb
mov
add
inc
sub
adc
push
xchg
std
add
movsl
roll
test
add
adc
add
push
stos
out
mov
sahf
movsl
mov
addb
cld
xchg
cmp
xchg
or
call
clc
cltd
push
test
add
mov
mov
lock
std
sub
movb
push
sbb
dec
ficoms
push
inc
add
cmp
stc
dec
pop
in
xchg
push
add
push
mov
jg
and
movsl
cmp
leave
jecxz
add
ret
fs
push
or
sub
enter
push
sbb
or
mov
mov
ds
sarl
add
mov
inc
add
lods
inc
add
push
add
xchg
sbb
dec
adc
pop
popa
jns
cltd
xchg
enter
rcrb
and
outsb
or
lods
out
addr16
je
and
testl
push
mov
cltd
scas
aad
cltd
or
in
push
stos
cmp
inc
or
xchg
lods
pop
sbb
and
add
int3
push
sub
add
loope
sub
in
add
cli
stos
pop
add
mov
cmp
sub
mov
roll
xor
popf
mov
add
lahf
cltd
jmp
mov
addr16
in
jl
popa
inc
add
sahf
fsubp
add
call
add
test
ret
mov
push
mov
sub
pop
shr
push
mov
sti
insb
insl
add
insb
add
ss
aas
outsl
dec
data16
int3
int3
out
std
sub
test
mov
or
jo
sub
mov
lods
xchg
movsb
or
mov
add
aaa
adc
mov
mov
push
push
bound
or
pop
rolb
shl
cmp
xor
add
leave
sbb
insb
std
xchg
sbb
insl
add
jne
and
mov
addb
sbb
fcmovnbe
xchg
mov
adc
cmc
sub
gs
cltd
or
add
push
movsl
mov
pop
fwait
add
xchg
out
and
pop
imul
rol
inc
ja
div
jns
cs
add
nop
out
test
ret
repnz
add
addb
les
mov
shl
dec
popl
push
xchg
mov
rolb
dec
rcrb
mov
add
jae
ret
mov
add
xchg
scas
and
das
push
pop
lret
mov
adc
insb
xor
out
rolb
inc
add
ds
ds
rdmsr
cmpsl
sbb
jle
push
add
add
cmp
shrb
sbb
sbb
inc
pusha
add
adc
pop
xchg
clc
outsb
sub
stc
xchg
pop
jecxz
mov
dec
addb
jnp
pop
mov
push
cmp
add
in
in
popa
rcll
out
cs
lret
jl
mov
add
jge
outsl
in
lds
xchg
jnp
das
mov
leave
adc
pop
push
add
out
movsb
mov
movsl
mov
pushf
mov
cmp
push
add
or
jmp
add
imul
cmp
pop
int3
sub
lds
mov
mov
cli
jle
sub
sub
insl
mov
mov
ss
jmp
pop
xor
dec
fstpt
add
fisttpll
outsb
dec
pop
cltd
in
mov
mov
mov
xchg
test
outsb
mov
mov
cmp
push
jmp
mov
add
lods
dec
aam
sbb
arpl
ljmp
cmpsb
inc
mov
jl
sub
add
les
addb
arpl
inc
mov
xchg
leave
cmp
loopne
push
fstpt
cmc
pop
addr16
les
jb
inc
adc
lods
dec
fcoms
jle
jne
push
mov
shlb
push
fsubrl
xchg
inc
add
mov
in
dec
xchg
loopne
mov
lds
push
xchg
es
test
movsl
jg
and
ret
ja
movsb
jbe
fisubrl
cld
pop
je
push
iret
data16
add
popa
cmpsl
dec
insb
cmpsb
es
xchg
adc
cmp
repz
lahf
inc
add
ret
mov
xor
pushf
icebp
imul
nop
mov
jo
add
sub
addb
pop
inc
add
shrb
lcall
jmp
lahf
mov
mov
sti
inc
cmp
mov
std
xchg
sub
xchg
js
jmp
mov
or
shr
pop
dec
idivl
adc
cmpsb
push
dec
inc
add
mov
and
mov
loope
mul
sub
add
arpl
lea
sub
int
and
mov
aam
pop
movsl
add
inc
mov
imul
int
sub
lcall
pop
loopne
test
mov
outsl
xlat
mov
popa
ss
fdivrs
jp
pop
repz
or
mov
and
push
out
or
cmc
sbb
dec
out
or
addb
sbb
rcll
adc
loope
test
fcmovbe
xchg
add
fstpl
mov
movsb
imul
xchg
rorb
mov
dec
jnp
fmull
cmp
scas
cmp
lock
addl
inc
add
rorl
adc
mov
pop
sub
or
aaa
addb
pop
adc
fcomp
cmp
add
call
xor
push
je
daa
sbb
pop
loope
out
ret
lcall
cmp
pop
push
hlt
mov
lahf
add
sahf
stc
lea
add
orl
lcall
mov
add
jno
xorl
rorb
add
jns
xor
dec
movsb
mov
call
sbb
scas
call
xchg
mov
add
mov
inc
pop
rcr
add
ja
stos
pop
jnp
pop
mov
or
daa
mov
mov
add
add
adc
or
outsb
dec
int3
pop
in
adc
sbb
loope
roll
test
out
sahf
js
aaa
add
cwtl
pop
leave
jno
out
jle
jo
out
mov
add
cltd
shlb
add
mov
pop
cmp
ret
fsts
or
pop
mov
fimuls
dec
insl
pop
add
add
dec
sub
jle
xor
std
and
adc
leave
dec
mov
mov
add
xchg
push
out
jbe
push
jns
pop
leave
test
mov
add
testl
push
jo
and
or
add
dec
inc
add
push
test
mov
sbb
mov
mov
pusha
add
adc
sub
aaa
sub
fnstenv
ret
icebp
mov
aad
outsb
push
mov
sbb
jl
fdiv
jle
enter
loope
mov
add
repz
mov
gs
addb
movb
xor
repz
or
nop
inc
add
push
fwait
in
push
xchg
sti
bound
cld
call
lds
or
mov
sbb
add
cmpsb
cltd
jae
pop
cmp
mov
add
inc
add
cmp
cmp
push
aam
add
cmp
movsl
stc
loope
sub
inc
add
lods
mov
xchg
jno
ret
push
pop
lret
pop
stos
and
and
lahf
ret
mov
or
cmp
fsubrp
jg
dec
sub
stos
test
mov
out
inc
add
call
add
or
mov
jecxz,pn
lods
addl
adc
push
inc
insl
icebp
fmuls
push
xchg
mov
mov
mov
cs
xor
jbe
adc
scas
push
test
shll
lahf
xor
in
insb
shll
add
clc
xchg
popa
jge
sub
movsl
sarl
inc
add
add
out
das
cwtl
jmp
aaa
xlat
enter
movb
addl
xor
push
lds
in
sbb
mov
pop
push
add
cwtl
xchg
inc
add
mov
sub
mov
sub
adc
xchg
ljmp
xlat
test
jg
add
add
decl
mov
sbb
push
add
mov
aam
imul
xor
add
inc
add
stc
cli
cmpsl
lret
mov
sbb
xchg
test
adc
or
insb
pushf
pop
popa
out
pop
stos
jae
add
std
xlat
fmul
imul
jb
or
lds
sub
inc
ljmp
int3
insl
push
pop
push
movsb
gs
xchg
adc
ffreep
add
cld
nop
push
ja
les
in
test
outsl
in
fcomps
push
lcall
add
adc
add
sub
mov
int
cmp
cwtl
pop
ss
fisttpll
test
fbstp
jge
jnp
fldenv
add
add
pushf
jne
lods
or
inc
cmp
mov
and
loope
movsl
clc
lock
pusha
add
addb
dec
cmp
aad
xchg
jg
xchg
mov
sub
jle
data16
pop
pop
leave
adc
repz
pushaw
add
cmp
jb
add
add
in
es
daa
mov
ljmp
rorb
lret
arpl
add
push
dec
xor
inc
pop
and
out
imul
push
add
call
mov
fs
push
add
adc
or
loope
fldl
and
cs
add
dec
out
adc
icebp
jae
iret
push
gs
icebp
pop
adc
bound
mov
add
mov
in
add
inc
dec
jns
add
mov
inc
mov
mov
out
into
dec
stos
in
dec
movsl
push
in
mov
push
add
pushf
xchg
mov
insb
sub
add
repnz
jg
add
push
in
cmpsl
gs
cs
in
test
sar
xor
and
fcomp
icebp
cld
cmp
enter
pop
jecxz
dec
jl
sbb
cmp
addb
xchg
das
mulb
sbb
or
mull
mov
gs
sub
movsb
call
test
xchg
xchg
mov
popa
out
pop
inc
pop
cltd
push
mov
sarb
into
xchg
in
shr
cli
jp
add
cmp
loop
hlt
movb
outsb
or
add
icebp
cmp
or
leave
jae
enter
in
pop
mov
push
add
pop
xchg
add
sti
mov
mov
add
jb
iret
inc
mov
sti
test
jmp
jnp
add
ja
add
decl
mov
add
or
cmp
es
lahf
mov
roll
ret
sbb
push
cld
mulb
cltd
jl
push
icebp
daa
aas
dec
jae
cmpsb
fwait
adc
and
in
push
loope
mov
pop
test
addb
jnp
call
inc
add
dec
test
add
push
inc
add
pop
call
pushf
push
jmp
or
add
xor
rcrl
in
jge
mov
movsb
push
jl
fmul
cli
mov
dec
cmp
add
mov
lods
adc
loope
mov
mov
int
add
lcall
movb
push
push
xchg
cwtl
leave
arpl
mov
jle
aas
pop
call
sti
xchg
jp
xor
or
xor
cld
sub
push
stc
movsb
clc
fbstp
pusha
add
push
cmpsb
push
lret
inc
add
or
sar
mov
mulb
xor
cmp
xchg
sti
ljmp
mov
bound
jo
xchg
push
cmpsl
dec
stc
out
jae
fisubrl
cld
addb
popf
mov
lcall
jl
cli
or
int3
adc
add
subl
mov
ljmp
arpl
pusha
add
outsb
loopne
icebp
lods
cmp
int3
inc
jne
add
outsb
movd
lahf
dec
mov
add
inc
add
mov
ja
add
fldl
add
rol
add
mov
pop
jg
jbe
out
mov
push
jmp
fstpl
cwtl
push
mov
adc
movsb
cmpsl
aaa
dec
xor
pop
mov
aaa
mov
lcall
cld
cli
mov
repnz
xchg
bound
xlat
pop
push
leave
mov
jnp
pop
or
pop
jmp
enter
bound
add
cwtl
stc
push
data16
rorl
sbb
jo
dec
pop
mov
inc
add
add
cmpsb
mov
push
or
popa
dec
cwtl
xchg
loopne
mov
movsb
movsb
ds
and
jnp
das
scas
addr16
add
in
hlt
dec
cmp
mov
mov
aas
jle
decb
or
dec
inc
add
inc
cmp
push
mov
lds
cmp
loope
xchg
mov
xchg
test
jecxz
and
sub
and
insb
or
imul
and
inc
in
jbe
add
dec
add
in
jne
sbb
xchg
lds
dec
gs
add
fwait
test
dec
push
jp
push
push
push
addb
unpcklps
loop
movsb
mov
int3
insl
mov
cmp
jae
add
pop
jp
lret
das
nop
loop
les
pop
and
pop
push
insb
cmpsb
add
pop
cmpsb
fisubrl
fisubs
movsl
mov
rcrb
cs
add
xor
pusha
add
shlb
cwtl
lock
inc
stos
mov
mov
sub
jmp
clc
outsb
lds
stos
sbb
aad
lods
aam
movsl
inc
jno
adc
pop
and
sub
in
outsb
fists
jbe
cmp
fldcw
xchg
scas
or
test
insb
push
mov
pusha
add
add
shlb
jge
movsl
insb
mov
pusha
add
dec
and
gs
pop
pop
pushf
xchg
int3
push
inc
add
hlt
pop
xchg
popf
sub
js
sub
lods
xor
repnz
lds
mov
inc
push
je
std
cmp
fdivrp
or
pop
cmc
inc
lcall
mov
leave
lret
addb
xor
test
xchg
xchg
jnp
int
fwait
pop
sbb
add
mov
xchg
xchg
ljmp
inc
adc
push
mov
sbb
xchg
inc
jbe
mov
jl
or
cmpsl
cmp
int3
push
cld
insb
fldl
jns
in
mov
xor
mov
mov
mov
xor
xor
pop
ret
jae
sub
xor
or
adc
incb
add
lds
cmp
sub
dec
push
lods
popf
and
inc
hlt
in
cmp
daa
cmp
mov
imul
xor
or
xchg
lret
and
xchg
test
push
testl
clc
pop
fsubrl
bound
mov
add
call
loop
int
outsb
cmp
ds
mov
dec
sub
and
inc
add
dec
shll
sub
mov
icebp
sbb
add
loopne
insb
loop
add
pushf
das
mov
mov
stos
cmp
pop
adc
xchg
adc
fisubrs
cli
or
inc
add
xchg
aas
lret
pop
stc
int
mov
aaa
xor
das
add
and
fidivrl
or
add
mov
nop
in
mov
shll
mull
and
repz
dec
lcall
loope
mov
add
cmp
add
mov
xor
push
mov
aas
xor
add
push
add
xchg
xchg
fdivrl
sbb
sub
push
inc
xchg
pop
pusha
add
xchg
push
scas
ja
in
pop
fldcw
ja
stos
in
or
mov
lcall
daa
sti
dec
xchg
jnp
add
add
lret
mov
xor
int
mov
repz
aaa
or
push
add
mov
jns
jae
out
push
xchg
mov
and
insl
ret
push
fistps
xchg
or
imul
or
insb
cmp
dec
movsb
cmp
out
jl,pt
scas
sub
adc
int
pushf
ficompl
out
fcoml
jbe
ffree
xor
ds
out
and
add
and
fidivl
mov
add
ja
push
mov
mov
addb
jb
addr16
lret
clc
pusha
add
cmpsb
ds
xchg
xchg
mov
add
test
mov
inc
sahf
or
dec
and
rolb
add
shrb
push
sub
dec
sub
or
fldcw
jnp
push
xchg
sbb
out
fcomi
xchg
addb
sahf
aad
cmpsb
aam
sub
add
add
pop
push
add
add
repnz
pop
adc
repnz
jecxz
push
mov
add
inc
jno
and
sub
cmp
jbe
das
inc
xor
cmp
inc
loopne
hlt
cli
loope
add
xor
cmp
or
xor
add
daa
mov
dec
popa
adc
add
jns
pop
test
xor
cs
sti
lods
jmp
js
int
sbb
pushf
jnp,pn
mov
jnp
shll
push
ds
push
cmc
xor
or
or
pop
cmp
add
notl
lea
inc
add
add
pop
and
xchg
outsb
data16
shll
filds
dec
iret
imul
add
fwait
sub
popa
ret
ret
add
mov
fidivs
bound
sbb
add
mov
and
fistps
pop
and
out
pop
push
jge
adc
scas
pop
in
popf
or
jbe
sub
mov
inc
fsubrp
adc
adc
add
int3
jmp
sbb
xor
jo
pop
adc
sub
shrl
pusha
add
rorb
cld
sub
xchg
add
in
pop
sub
and
sub
xor
sub
add
hlt
dec
mov
jp
dec
push
sbb
mov
add
or
stos
inc
sarl
cmc
cmp
xchg
mov
jnp
mov
push
add
add
pop
in
adc
inc
and
add
mov
jecxz
out
insb
mov
jg
add
sub
addr16
inc
add
ret
xor
mov
add
pop
cmpsl
xchg
cmc
cmp
shrl
nop
pop
fdiv
call
push
aad
jne
js
xchg
add
pop
jecxz
lock
mul
test
xor
daa
insb
and
jae
and
add
fisttpl
mov
enter
push
jb
and
insb
and
pop
divl
sub
aad
sub
cmp
add
jnp
in
outsl
fstpt
lahf
movb
jb
leave
sbb
cmp
cmc
pop
shlb
mov
imul
add
movsb
pushf
pop
push
mov
addl
ds
or
xchg
adc
insb
mov
ja
pop
pop
inc
xchg
movsl
stos
mov
lds
scas
icebp
xchg
mov
test
mov
adc
test
in
icebp
jbe
pop
jecxz
js
mov
es
and
fdivr
popa
imul
test
fisubs
clc
or
aam
out
pop
lret
adc
sub
les
adc
xor
mov
aam
test
push
mov
ljmp
sbb
jb
jle
add
pop
xor
inc
add
xor
dec
in
sub
lock
dec
mov
sbb
into
in
pop
cmp
xchg
neg
or
daa
inc
pop
insl
dec
jle
sbb
add
lahf
sub
mov
bound
repz
in
mov
xor
mov
repz
sarl
scas
mov
mov
jns
pop
xor
enter
movsb
add
rcrl
insb
and
daa
addb
sbb
leave
aaa
push
adc
rorl
mov
insb
clc
sub
fcmovnu
into
xchg
je
xor
jb
add
add
scas
xchg
ljmp
fldl
sti
aad
fistpl
loopne
stos
ss
add
add
lds
jmp
push
outsl
dec
sub
lods
inc
adc
imul
push
lds
arpl
dec
insl
push
outsl
push
mov
mov
xchg
inc
adc
gs
cltd
mov
add
out
lea
pop
add
adc
sub
inc
push
fbstp
mov
je
movl
jecxz
sets
add
add
dec
out
popa
dec
xchg
std
sarb
or
xchg
mov
rclb
out
popa
nop
test
lret
movsl
mov
push
fadds
add
add
mov
jmp
push
in
sahf
inc
loope
cmc
outsl
hlt
dec
cmp
add
pop
mov
cmc
lcall
inc
add
add
add
data16
cltd
jae
adc
cs
adc
arpl
scas
jp
std
push
pop
ret
push
nop
mov
mov
jne
jmp
add
lock
add
pop
sub
daa
fdivrp
jg
jg
sbb
and
rcll
fldenv
ret
shll
rolb
mov
andl
xchg
sub
sbb
add
insb
test
xchg
stos
out
xor
repz
and
add
lods
imul
mov
movsb
pop
rolb
add
fnstsw
mov
adc
movb
lods
stos
movsl
push
push
dec
pop
mov
bound
pop
add
fs
sub
adc
jno
test
mov
ja
fnstenv
cltd
xor
jmp
std
and
leave
hlt
mov
lds
add
ret
lcall
jbe
out
das
adc
insl
xchg
mov
sahf
ja
pop
inc
push
add
adc
add
xchg
or
into
daa
cwtl
push
sbb
sti
movsb
mov
int3
sub
add
add
daa
cmpsl
scas
addr16
negb
movb
loop
sbb
addl
push
pop
push
fs
mov
enter
out
iret
addb
jnp
scas
lahf
sbb
fsubs
xchg
das
mov
xchg
roll
add
aaa
roll
lds
mov
loopne
ret
cmp
lret
add
push
and
add
inc
jmp
push
mov
jp
pop
cmp
xchg
lahf
out
ljmp
notb
xchg
lds
sbb
adc
sbb
add
into
xchg
iret
or
in
cmp
cmpsl
lods
adc
enter
dec
mov
pushf
sti
xchg
out
mov
sahf
clc
addb
add
push
js
bound
fwait
cld
sahf
loop
add
push
das
xchg
mov
fists
or
cwtl
arpl
out
add
mov
cmp
dec
out
mov
jae
push
in
dec
pop
insb
xor
jg
imul
es
pop
test
fisttpll
out
test
add
add
dec
stos
push
mov
addb
mov
push
sbb
add
jno
jmp
imul
or
je
sbb
sbb
xchg
hlt
pop
aas
and
lods
aad
test
dec
xchg
cld
scas
pop
shr
jge
les
pop
mov
push
inc
add
push
out
mov
sbb
pop
and
mov
mov
add
lcall
sbb
and
bound
mov
mov
xchg
push
sub
push
jb
sti
xor
jecxz
in
sbb
addb
mov
mov
jmp
mov
rcr
push
lret
lea
into
mov
es
pop
mov
loope
add
mov
mov
jmp
in
pop
mov
add
push
lret
or
add
cmp
shlb
in
add
add
mov
add
cltd
jne
or
xor
in
imul
jno
sbb
xchg
outsl
lcall
cltd
lret
addb
sbb
sbb
movb
lahf
pop
out
stc
xchg
and
fidivs
or
addps
or
add
popa
jo
mov
cs
cmp
fsubrl
xchg
cmp
dec
lret
movsb
popf
lea
int3
mov
int
xchg
mov
mov
xchg
inc
imul
loopne
lods
sub
adc
dec
sub
xchg
add
movb
lds
and
jo
arpl
aad
xor
stc
data16
xchg
xor
insb
sub
fwait
and
stc
iret
cmp
inc
add
mov
xor
ss
fisttps
xchg
cmp
mov
inc
inc
cwtl
or
pop
dec
lds
insl
inc
jecxz
add
subl
dec
jnp
scas
scas
cwtl
lret
pop
cmp
add
icebp
adcl
addb
fcmovbe
arpl
nop
cwtl
push
out
test
stc
xor
rol
popa
mov
imul
cmpsl
arpl
enter
push
add
cmpsb
loop
outsl
lcall
gs
jne
rcll
add
mov
sbb
push
sub
add
cli
mov
add
dec
ud2
fildll
jp
int
and
sbb
jmp
xchg
mov
push
mov
add
mov
fwait
sbb
lea
fwait
repnz
mov
movsb
enter
punpckldq
loop
movsl
loopne
cmp
add
xchg
jle
and
addb
mov
add
xchg
add
inc
add
testl
mov
mov
push
sub
adc
daa
cmc
test
aaa
lcall
push
leave
ret
loop
xor
fildl
pop
lret
movsb
int3
mov
and
addb
fldcw
jnp
cwtl
and
nop
or
lret
test
out
loopne
add
js
dec
pusha
add
mov
pusha
add
clc
icebp
sbb
jne
jecxz
popa
and
push
cmc
or
add
mov
mov
cmpsb
adc
jb
test
and
add
lock
lret
dec
out
lret
dec
sbb
sahf
bound
js
roll
loopne
jge
das
cmp
add
scas
std
or
fsubl
add
cmp
xor
inc
ja
jae
scas
pop
xchg
push
lea
xorl
push
dec
xchg
ss
add
cmc
movb
rolb
and
cmp
out
dec
mov
xchg
adc
jo
add
ds
cmpsb
adc
hlt
jmp
add
mov
cmp
pusha
add
add
cmp
adc
xchg
push
mov
xor
scas
out
gs
xlat
jb
add
sbb
adc
add
xor
mov
fstps
add
dec
lret
sti
mov
mov
fwait
roll
sbb
jb
push
sub
addl
jb
xchg
sbb
pop
mov
add
pop
pop
movb
jge
add
shll
mov
mov
pop
data16
cmc
add
std
push
jbe
fwait
adc
rcll
or
addb
sbb
lcall
outsl
jl,pn
stos
jle
xchg
xchg
pop
and
iret
jmp
xor
adc
push
add
and
push
pop
mov
lods
cltd
js
jge
std
sbb
out
push
out
add
mov
push
rolb
mov
mov
jno
lret
mov
sub
sbb
addb
add
ljmp
scas
push
int3
xor
movsb
mov
stos
arpl
xchg
ret
popa
jg
fadds
arpl
arpl
add
cmpsl
xor
add
sti
sub
add
imul
mov
cmp
dec
std
aam
xchg
inc
add
arpl
sahf
cltd
xor
imul
repz
mov
add
xor
imul
xchg
sbb
push
pop
in
cltd
mov
add
cmpsl
mov
psraw
add
sbb
jno
movsb
popf
mov
mov
jae
scas
mov
fistpl
addb
in
mov
dec
xorl
int
cmc
jb
add
addb
mov
adc
jg
xchg
pop
add
push
sbb
aam
in
stc
and
push
and
negl
or
sub
std
fldl
je
fsubl
repnz
jae
fidivrl
sbb
rolb
add
aad
mov
jecxz
nop
mov
outsb
dec
sbb
int
mov
lea
dec
or
imul
jo
add
imul
cs
xchg
fldt
add
roll
imul
sub
pop
xchg
das
mov
bound
inc
add
add
and
xor
or
xchg
sbb
pop
jl
sbb
sbb
add
dec
push
ja
rolb
push
movb
add
mov
xor
mov
dec
cmpsb
aas
rclb
clc
shll
fs
xchg
jl
add
insl
enter
stos
xchg
roll
add
lods
out
stos
pop
movb
add
pop
pop
mov
fucomip
push
pop
lods
push
pop
mov
dec
jo
or
daa
stc
and
xor
xor
dec
xor
rolb
pushf
add
jecxz
jmp
les
test
mov
pop
or
inc
add
fidivs
sub
inc
imul
movsl
or
stc
inc
add
adc
add
push
in
and
ret
jecxz
or
scas
adc
popa
negl
xchg
jnp
xchg
adc
imul
dec
negb
ficomps
ja
dec
jns
push
out
jae
add
inc
adc
jnp
imull
add
cltd
jnp
add
add
sub
loop
or
mov
add
add
mov
dec
pop
push
fs
out
sarb
ss
mov
add
insb
dec
sbb
pop
push
push
jge
sbb
mov
movsl
stc
mov
add
mov
add
outsl
cli
rolb
ja
xor
addb
les
repnz
cs
clc
or
aad
cmp
adc
xchg
dec
or
push
adc
adc
mov
mov
test
out
cmp
jl
lcall
xchg
mov
jp
es
imul
cli
pop
cmp
lods
insb
inc
add
xchg
pop
add
out
xchg
sti
mov
xchg
mov
mov
adc
mov
lcall
in
push
add
xor
ror
leave
mov
xchg
xchg
add
data16
cmp
add
outsb
adc
push
int
out
in
jnp
lcall
pop
add
pop
int3
icebp
xor
cmp
das
inc
add
leave
mulb
movsb
mov
mov
jp
lods
movsl
fisttps
in
ljmp
lods
mov
aad
pop
mov
inc
add
or
jo
fldt
sti
mov
jmp
xchg
dec
dec
pop
std
je
pop
aad
add
sti
rcll
out
test
mov
bnd
jno
cli
xchg
and
cmp
mov
jg
mov
jnp
in
jnp
aas
cld
xor
add
mov
sub
mov
outsl
mov
push
sub
stos
mov
mov
add
out
mov
add
adc
and
stos
loop
call
fwait
mov
push
cwtl
cmp
shl
inc
add
sbb
fstpt
push
pop
mull
inc
mov
std
cmp
nop
jge
fistps
shl
data16
push
adc
cld
cmp
inc
add
mov
and
mov
std
sbb
ffree
add
sub
stos
xorl
mov
add
and
push
sbb
mov
int
jmp
rcll
cmp
mov
mov
jnp
cld
loop
mov
loope
xchg
das
outsl
inc
add
push
das
in
std
sbb
cmp
mov
dec
inc
add
mov
mov
add
and
in
sbb
cmp
lods
ss
sbb
dec
and
mov
mov
dec
sub
pop
xchg
pop
cltd
stc
das
addb
push
xor
js
xchg
aam
rcl
les
out
and
rsqrtps
stc
movsb
mov
call
mov
adcl
jno
mov
pslld
dec
and
in
pop
jnp
es
adc
repnz
push
hlt
sub
inc
call
pop
lock
pop
in
xor
xor
std
lcall
mov
xchg
push
sahf
in
xor
loop
adc
mov
scas
std
daa
faddp
add
lock
jl
add
mov
dec
xor
mov
iret
push
xchg
int
jns
es
ljmp
sbb
lret
mov
jp
pop
inc
push
sbb
aas
push
xchg
jl
push
aad
outsl
jnp
xlat
movsl
adc
jp
add
addb
xchg
xchg
inc
add
and
add
pop
iret
adc
sti
jg
mov
jecxz
out
sarb
push
rolb
lret
imul
test
bnd
dec
lcall
scas
pop
and
test
sbb
or
add
xor
dec
and
rolb
or
stc
jle
push
into
aaa
push
add
add
addb
jns
scas
rolb
sti
mov
in
inc
add
or
stos
jbe
add
and
fwait
xor
imul
push
shr
cmpsl
fistl
cs
adc
popa
jecxz
xlat
sbb
outsl
dec
mov
xchg
mov
int3
xchg
and
jge
sarl
sub
dec
mov
cli
pop
in
inc
inc
popa
sub
clc
jne
jbe
repz
ss
repz
cltd
push
jne
inc
add
add
add
outsl
repz
xchg
test
add
jmp
je
push
imul
call
pop
sti
dec
and
out
mov
add
adc
nop
lods
dec
add
ret
or
xchg
fidivrl
in
add
std
in
lock
or
aad
mov
das
popf
pcmpgtd
pop
cmp
sbb
mov
stc
jle
and
push
cltd
ret
or
mov
movsl
test
pop
dec
xchg
fidivl
add
add
inc
add
pop
mov
add
outsb
imul
sub
push
adc
dec
lea
out
inc
add
add
lds
mov
jno
push
aam
fisttpl
jns
add
add
mov
movsl
adc
movsl
cli
pop
cli
clc
mov
stos
jg
pop
fdivrl
lods
adc
testl
popa
or
xchg
stos
addb
add
pop
inc
add
dec
fdivl
jno
xor
push
jecxz
jl
mov
fbstp
enter
cmp
xor
jle
incl
add
sub
cmp
sub
ret
jg
add
and
inc
add
lds
cvtps2pi
dec
push
mov
pop
scas
leave
adc
add
mov
add
mov
insl
dec
mov
mov
push
pop
push
sub
ret
lcall
int3
inc
add
scas
cld
pop
fistpll
loop
insl
lret
popf
add
xchg
mov
sbb
shlb
loope
push
les
mov
sbb
les
jbe
push
in
push
popa
jns
aas
aad
sub
xchg
sbbl
cmc
mov
dec
into
push
xchg
out
inc
addr16
popa
fs
sub
jbe
test
mov
xor
sbb
pop
mov
rorl
addr16
push
pop
xor
add
das
int3
or
loopne
xchg
outsl
test
add
inc
add
mov
pop
jo
test
pop
jge
jae
insb
lock
mov
sbb
movsl
pop
or
movb
and
add
adc
add
jne
addb
mov
arpl
pop
sbb
mov
push
js
xchg
test
test
loope
mov
repz
push
jg
or
xlat
repnz
lahf
push
movb
pop
movsb
addr16
pop
inc
add
add
add
jp
jne
add
pop
pop
mov
bound
pop
or
sub
add
addb
fnstcw
repnz
ja
xor
add
insb
jne
mov
push
mov
xchg
scas
addl
pop
jmp
sarb
mov
jle
lahf
cmpsl
scas
lods
mov
andl
ljmp
inc
out
adc
jbe
sbb
int
inc
nop
sub
cmpsl
movb
push
add
sbb
add
jo
es
testl
movsb
outsb
and
or
xchg
xchg
lods
cmp
jo
sub
les
sub
jp
xchg
mov
rorl
aad
bnd
mov
jp
mov
push
jae
add
lret
jnp
enter
adc
dec
fdivl
jg
add
add
or
fwait
mov
dec
in
or
flds
pop
add
cmpsl
xor
cmpsb
cld
dec
and
jle
scas
lods
aas
mov
add
roll
pop
lea
push
mov
inc
add
sbb
cmp
pop
pop
loop
stos
adc
sbb
cmp
js
xchg
mov
fnsave
outsl
cmc
cmc
stc
mov
inc
mov
push
andl
or
gs
mov
dec
xor
mov
cmpsb
inc
add
stc
outsl
adc
shrl
movsl
testl
cli
outsb
outsl
sarb
rorb
pop
inc
add
add
add
inc
mov
or
inc
add
sub
push
std
or
mov
push
popa
xchg
fnsave
and
push
jae
orl
insl
and
sbb
out
add
inc
pusha
add
push
imul
outsb
addb
lcall
lods
les
mov
and
add
stc
xor
or
mov
das
jp
jle
dec
shll
xchg
cmp
sub
adc
aam
mov
sub
ljmp
pushf
jp
jbe
addb
mov
pop
lret
outsb
mov
xchg
mov
xlat
mov
xchg
pusha
add
int3
cltd
pop
push
push
cmpsl
repz
lcall
jo
or
mov
call
or
mov
ds
add
dec
cmp
lds
add
lahf
pop
mov
lret
aas
movsb
lret
adc
and
sbb
in
fnstcw
push
outsb
jno
out
xor
int
mov
nop
push
xchg
stos
loope
sub
mov
and
mov
or
fs
negb
loope
leave
fistpl
lcall
xor
cmp
movsb
bound
sbb
dec
cmc
add
cmp
loop
cmp
and
dec
sub
cmpsb
pop
mov
data16
std
xchg
das
div
fwait
aam
push
mov
addl
xchg
dec
mov
pop
stc
cwtl
scas
pop
jmp
das
inc
je
inc
mov
mov
xor
std
cmp
in
and
cmp
mov
int3
mov
shrb
sbb
std
and
loope
jl
stc
in
jmpw
int
push
and
mov
jmp
rcll
push
xor
std
push
bnd
add
pop
cld
jmp
xor
stos
lods
fimuls
jns
popa
xor
cld
es
adc
mov
xchg
mov
dec
testl
pop
outsl
shll
lret
sti
push
idivb
mov
mov
outsl
ss
dec
xchg
sub
inc
add
sub
mov
jnp
adc
sbb
jbe
outsl
test
insl
fwait
adc
enter
inc
add
int3
jecxz
ja
daa
xor
imul
daa
mov
sub
or
add
xor
test
mov
sarb
sub
mov
data16
or
xlat
jp
pop
jecxz
jge
outsl
push
add
mov
pop
loope
test
addl
sti
cmp
aaa
lods
stos
push
aam
lods
and
jns
cmpsb
or
jno
adc
cmpsb
ja
inc
ds
mov
jge
std
das
adc
icebp
add
cmp
imul
and
jbe
ja
mov
adc
add
mov
inc
add
jno
int
aas
loopne
aad
dec
add
cwtl
popa
test
jg
or
xor
jns
or
mov
shll
add
arpl
imul
cwtl
in
sbb
adc
adc
add
sub
movb
shrd
sub
ss
dec
daa
lcall
fwait
mov
loopne
inc
pop
adc
mov
gs
pop
out
mov
lcall
add
repnz
dec
cltd
jb
js
add
xor
sub
fstp
pop
lret
mov
add
jl
lock
sub
rep
cmp
xor
add
fwait
mov
roll
add
loope
add
sbb
push
add
push
add
ja
icebp
cmp
test
scas
mov
mov
outsb
in
push
sahf
push
cmc
enter
or
add
loop
push
and
js
add
dec
cmp
inc
add
mov
adc
sub
mov
das
fistl
aaa
add
int3
daa
scas
insb
and
lods
mov
pop
add
inc
mov
sbb
add
lods
xchg
mov
insl
cmp
pop
daa
add
xor
add
in
dec
nop
movsb
movsl
mov
addb
idivl
push
lock
jno
cmpl
sub
inc
add
xor
imul
cmpsb
fstpl
push
and
add
dec
stos
bound
popa
out
add
mov
int
clc
mov
mov
add
mov
adc
sbb
mov
fwait
adc
sahf
add
enter
dec
aam
movsb
mov
adcl
lods
test
dec
dec
je
movb
sub
push
andl
insl
dec
outsl
mov
jg
lods
ffree
push
cmp
xlat
xchg
mov
jge
push
pop
cld
mov
dec
in
jmp
in
mov
mov
inc
movsb
adc
jp
int3
dec
push
mov
jge
inc
add
fsubs
imul
les
insl
cmp
sbb
mov
ss
mov
mov
mov
sbb
mov
mov
sahf
lock
dec
dec
shlb
rcl
add
mov
mov
movb
movsb
divb
lret
xchg
repz
push
xor
lea
ss
jle
add
mov
sub
aad
rorb
dec
inc
call
or
add
cmp
jbe
dec
mov
ja
in
out
mov
aam
loope
fdivl
hlt
dec
sub
inc
add
out
jno
shll
adcl
aad
ret
addl
add
pop
add
mov
inc
icebp
xchg
mov
add
pop
cmp
mov
clc
mov
add
push
pop
sahf
push
lahf
pop
pop
imul
pop
pop
repz
mov
fidivs
int3
out
jne
add
sub
test
adcl
mov
sbb
add
negl
in
lods
sub
inc
add
lahf
aas
jmp
mov
mov
imul
call
decb
rcll
adc
shll
imul
cmc
out
xor
and
ficomps
mov
mov
in
add
push
push
add
mov
pop
push
push
call
js
addb
add
mov
jp
cmpl
xor
scas
lahf
sbbl
add
in
ds
testb
cmp
push
loope
fimull
data16
jno
inc
std
xchg
in
es
nop
mov
pop
mov
into
mov
add
mov
jecxz
add
gs
cmp
jbe
add
xlat
xchg
xchg
outsb
movsb
call
fsubrl
dec
and
test
iret
inc
add
mov
xor
add
movsb
dec
gs
jns
dec
gs
inc
hlt
movsl
jnp
rcrl
into
xchg
sbb
mov
push
mov
nop
ror
jno
in
in
mov
insl
loop
mov
cwtl
hlt
cld
cmpsl
test
dec
insb
rcrb
lret
add
inc
outsb
shll
sub
add
cmp
in
cwtl
aam
add
adc
in
call
xor
dec
icebp
cmpsl
inc
fs
mov
dec
cmp
xor
fdivrl
ror
xlat
mov
test
test
push
loop
repnz
inc
jo
cs
push
sbb
add
movb
mov
aas
popf
fdivrs
cmp
popf
cs
pop
mov
xchg
dec
int
imulb
pop
call
or
inc
add
xor
sub
dec
dec
push
push
test
push
sti
sub
sbb
movl
jge
xchg
sbb
inc
in
imul
in
jo
inc
rolb
mov
call
cmp
add
add
jb
add
repnz
cmp
adc
dec
lds
cmp
repnz
add
pop
sarb
fcmovnu
xorl
pop
add
and
mov
stos
daa
testl
jne
int
clc
les
in
add
and
adc
into
pushf
jp
.byte
