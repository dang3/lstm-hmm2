and
dec
adc
add
add
daa
sbbl
add
add
mov
cs
outsb
cmp
mov
pop
int
lcall
push
fmuls
add
mov
addb
push
clc
out
roll
dec
sti
out
dec
sti
and
addb
add
jnp
into
xlat
mov
sub
push
push
push
push
push
push
cld
call
sub
es
movzbl
cmp
ss
push
push
call
mov
cmp
je
es
lea
cs
sub
mov
push
es
call
test
jne
jmp
leave
push
es
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
nop
lea
lea
sub
add
mov
sub
sub
push
pop
push
je
jmp
add
add
imul
mov
popf
inc
add
sbb
add
pop
sbb
jle
les
imul
nop
add
xchg
add
les
arpl
add
sbb
lea
cmp
ror
pop
or
cs
mov
mov
outsb
sub
add
ret
int3
lret
psllq
mov
cmpsl
and
cmpsl
fildl
push
cmp
mov
inc
rolb
mov
shll
mov
int3
xor
mov
cmc
jno
loopne
mov
mov
stos
jne
mov
sbb
jno
add
mov
cmpsb
fdivrs
adc
jg
or
jne
bound
mov
icebp
xchg
pop
push
addr16
ss
jge
jp
add
xchg
inc
out
inc
out
mov
add
insl
call
addb
xchg
jns
jmp
add
jbe
lods
rorl
fisttpl
in
mov
dec
jns
pop
add
mov
or
jo
mov
into
fs
mov
pop
les
mov
adc
aam
adc
test
and
mov
inc
dec
test
mov
incl
repnz
adc
push
mov
lods
fmuls
pop
mov
jmp
cmpxchg
mov
xor
jnp
into
cmp
mov
aaa
flds
enter
xor
mov
icebp
dec
push
fwait
and
mov
aaa
mov
fcoml
xchg
iret
jb
mov
jb
mov
cmp
cmp
pop
push
add
mov
lea
ss
add
mov
icebp
rolb
mov
cs
cmpsl
add
es
cmp
rolb
xchg
add
add
lcall
inc
dec
adc
mov
clc
push
jle
dec
fimull
loopne
mov
inc
add
add
test
imul
add
add
add
mov
mov
mov
test
xchg
repnz
add
mov
cmp
jle
sbb
mov
es
lods
in
inc
outsb
sbb
lds
push
xchg
xchg
cmp
scas
dec
notl
add
add
lcall
fildll
xchg
sub
fstl
filds
outsb
jecxz
sub
add
dec
fsubrp
add
push
mov
push
add
mov
add
in
fmuls
adc
cmp
mov
mov
loop
mov
add
adc
addb
mov
add
pop
out
adc
mov
sbbl
jl
out
insl
nop
add
or
sbb
mov
add
or
std
aam
dec
mov
js
into
jae
cmp
add
sti
push
fisubs
add
mov
xchg
popa
testl
rolb
mov
jl
add
mov
lcall
lahf
jnp
fisttpl
aad
pop
into
addb
into
push
add
add
sbb
gs
mov
mov
xor
call
push
pop
dec
jo
mov
add
repz
out
add
dec
jmp
push
popa
insl
rolb
mov
pop
imul
dec
mov
xor
dec
js
add
push
inc
jb
mov
sub
bound
mov
mov
clc
out
add
lcall
in
data16
or
pop
insl
mov
mov
repz
or
ja
cmp
mov
xor
mov
jb
mov
add
xchg
mov
sti
mov
xchg
inc
ret
push
push
add
in
sbb
add
js
mov
cmpl
fwait
pop
lds
jmp
insl
rcll
sbb
icebp
iret
adc
mov
jmp
and
mov
incb
loopne
mov
out
mov
mov
and
js
jg
add
mov
gs
leave
mov
add
fs
sbb
sub
in
out
test
icebp
sbb
mov
mov
add
insb
lret
xor
push
int
hlt
push
rolb
jmp
and
lods
hlt
mov
mov
pushf
adc
jbe
ret
jbe
push
cli
dec
dec
fistpl
in
add
in
int3
sbb
add
mov
outsl
sbb
xchg
ret
fwait
add
mov
popa
and
mov
mov
fisubl
mov
mov
mov
sti
or
lret
jne
out
pop
dec
insb
dec
rcl
mov
push
jbe
call
stos
add
xor
arpl
ljmp
ljmp
adc
xor
add
in
add
xchg
jne
rolb
mov
mov
inc
outsb
insb
xor
imul
dec
sbb
and
and
lret
add
lea
add
mov
mov
test
movsb
fbld
mov
arpl
adc
xor
inc
hlt
loope
in
and
xchg
pop
adc
mov
lcall
mov
sbb
fsubs
add
imul
add
adc
mov
and
mov
xorl
fidivl
mov
push
or
mov
push
insl
inc
mov
sub
fidivrl
cs
movsl
and
add
scas
test
push
inc
cmc
movsl
rolb
mov
xchg
add
in
add
and
lock
clc
dec
lods
ss
cwtl
mov
xchg
jecxz,pt
add
mov
movsl
insl
inc
icebp
cmp
jg,pt
jmp
lahf
nop
add
jl
mov
ret
test
call
in
mov
add
add
addb
fnsave
jp
es
add
add
sub
pop
dec
mov
insb
push
push
add
jl
ds
sub
xor
xchg
inc
jg
xchg
mov
jo
mov
push
pop
iret
fsubrs
loopne
mov
add
aas
mov
aad
lret
outsb
inc
pop
inc
ffreep
sbb
lret
sti
push
adc
mov
mov
mov
pop
mov
fnstsw
mov
add
jb
mov
movsb
xor
add
mov
add
adc
lods
inc
add
pop
jg
add
add
add
jne
out
or
xor
mov
add
cmp
push
leave
loope
xchg
popa
cmp
adc
sbb
dec
mov
dec
adc
mov
addb
mov
mov
mov
int3
mov
sub
lds
or
popa
pop
inc
add
lock
mov
xchg
rolb
mov
mov
cmp
xor
mov
jnp
cmp
xchg
iret
and
rolb
mov
mov
mov
mov
add
sub
addr16
dec
dec
mov
movsb
cld
loope
push
jbe
mov
add
aam
push
rolb
mov
pop
add
add
shl
xchg
add
mov
xor
add
mov
inc
imul
mov
out
mov
jnp
cs
popa
adc
lods
push
sub
sub
mov
push
es
ljmp
sub
add
cmp
mov
lea
add
fsubl
mov
shrl
sub
add
rolb
mov
mov
mov
xchg
aas
mov
out
adc
push
mov
mov
mov
pop
dec
add
pushf
mov
add
shr
jbe
aam
or
lret
fucomi
xlat
addb
and
mov
lret
fwait
jge
pop
fs
cwtl
int3
std
ljmp
adc
pop
dec
insb
cmp
xor
mov
scas
mov
mov
loopne
mov
adc
mov
add
mov
mov
hlt
ljmp
add
xor
mov
add
adc
mov
imulb
add
mov
add
jp
ja
jecxz
and
or
mov
mov
mov
or
xchg
dec
lret
fstpt
pusha
add
lcall
iret
cmp
divl
add
lods
xlat
inc
add
stc
inc
add
xor
mov
nop
add
hlt
insb
movsb
not
jo
mov
fsubrs
idiv
stos
ret
dec
int3
cwtl
or
aad
add
call
mov
xor
mov
stos
jmp
add
xchg
pop
mov
mov
test
jle
insl
xchg
add
mov
push
sub
frstor
cmp
and
adc
mov
shrl
lcall
js
in
rolb
mov
idiv
inc
add
add
xchg
fs
in
frstor
xchg
mov
push
xchg
jmp
add
fisttpll
mov
mov
add
inc
or
loopne
mov
nop
add
and
mov
mov
test
cmp
push
push
mov
mov
mov
stos
dec
scas
dec
not
mov
popf
jle
in
and
lcall
push
lock
adc
jg
es
push
insl
ss
push
add
mov
or
xor
push
add
dec
inc
add
rolb
mov
and
cwtl
push
lret
sub
add
lahf
fstps
and
icebp
cmpsb
rolb
add
sahf
push
dec
addb
decb
add
loopne
mov
cmp
xchg
cmp
addb
adc
mov
add
das
nop
add
mov
dec
insb
lahf
popf
daa
popa
or
push
sahf
jmp
scas
xchg
add
lret
add
pop
es
out
cmpsl
add
mov
int3
lds
add
mov
into
test
lret
add
mov
loop
mov
inc
pop
sbb
add
sub
addb
xchg
sbb
ret
adc
pop
outsl
shr
int
iret
sbb
dec
jmp
mov
add
jg
jl
test
test
fists
insb
mov
jl
adc
pop
repz
xchg
add
mov
mov
jecxz
add
xor
add
test
pop
cmp
xlat
lret
arpl
mov
std
mov
add
fdivrl
pop
add
js
add
sbb
push
mov
mov
or
xor
inc
add
inc
inc
jnp
xchg
imulb
mov
stos
add
inc
adc
into
insl
cwtl
ret
adc
mov
mov
add
rolb
add
push
add
xchg
and
mov
sbb
add
add
mov
stos
push
and
xor
push
add
stc
jo
mov
dec
sub
lods
push
jns
jne
pop
popf
pop
lock
test
add
pusha
add
cwtl
pop
aam
addr16
jl
mov
pop
scas
imul
in
push
stos
ret
outsl
jo
mov
fmulp
sub
mov
pop
push
mov
lcall
mov
mov
jle
add
add
movsl
cmpsl
push
add
mov
cmp
pop
sub
add
insl
pop
jae
int3
and
mov
loope
add
add
popf
cmpsb
add
mov
add
sbb
or
sub
adc
negl
push
aaa
mov
lea
push
ret
icebp
dec
fs
lods
push
or
push
jge
mov
push
dec
xchg
nop
add
addb
in
fisubrs
enter
mov
out
and
sets
sub
aas
sbb
push
push
cwtl
pop
mov
inc
xchg
add
fiaddl
out
repnz
or
ljmp
xchg
mov
inc
add
dec
mov
mov
fsubrs
lea
mov
add
mov
add
sub
add
insl
in
jb
mov
dec
mov
add
add
outsl
or
cmp
inc
mov
jecxz
xor
je
aam
pop
add
mov
sbb
imul
out
dec
clc
test
mov
mov
cmpsl
jmp
nop
add
fisubrs
jge
ljmp
leave
ret
ljmp
aaa
xchg
mov
sub
add
mov
out
jns
add
aaa
imul
out
xchg
in
sahf
inc
sub
jno
add
imul
mov
push
test
add
aam
push
repz
loope
clc
cmpsb
push
jnp
mov
mov
xchg
nop
add
mov
push
add
xchg
inc
inc
data16
popf
push
sub
mov
mov
cmp
xor
sbb
xchg
ret
addl
mov
lds
add
mov
add
icebp
lods
push
add
bound
mov
mov
mov
and
mov
mov
mov
dec
jo
mov
or
push
mov
pusha
add
in
scas
mov
dec
push
sbb
mov
xchg
add
mov
add
stos
call
mov
jo
mov
mov
mov
mov
add
push
jecxz
rolb
mov
add
mov
mov
test
add
add
mov
out
jg
add
jecxz
ret
mov
out
repz
fsubl
add
mov
mov
addb
fcoml
add
push
test
mov
mov
lea
adc
stc
push
gs
and
mov
mov
push
sbb
sub
mov
arpl
call
mov
add
js
enter
and
in
or
sbb
addb
mov
retw
imul
add
in
and
mov
mov
movsb
or
mov
xchg
and
jmp
leave
fbld
add
mov
sbb
ret
push
xor
iret
lock
add
add
leave
mov
jb
mov
lcall
pushf
adc
clc
mov
mov
and
mov
orl
add
push
xchg
lea
sahf
arpl
testb
stos
or
decl
call
in
sub
mov
add
and
add
and
add
sbb
push
fisttpll
cli
scas
aam
pop
arpl
mov
cmp
push
jg
rolb
mov
mov
ret
jns
sub
push
in
sbb
sbb
rcrl
xchg
pop
mov
add
mov
psllw
cmp
sbb
and
fdivs
aad
add
cmp
xchg
nop
add
mov
mov
test
stos
ds
and
int3
enter
fdivp
push
ss
pop
jmp
add
movsl
lea
outsb
movb
add
mov
mov
mov
fcompl
add
fistpll
push
jp
adc
mov
push
xor
push
mov
or
mov
xor
mov
mov
clc
rcrl
push
fcmovnbe
add
jmp
add
test
mov
mov
jnp
mov
mov
adc
or
dec
adc
pop
popf
or
and
mov
add
lcall
rolb
mov
mov
shl
addb
fs
cli
xor
jl
lock
mov
push
xchg
js
loopne
mov
jnp
and
add
mov
push
add
add
mov
add
lods
aam
add
mov
pop
aam
movsb
lret
add
add
imul
cwtl
xchg
cs
or
sub
mov
jnp
push
mov
cld
or
in
scas
daa
jp
xor
mov
rolb
mov
mov
add
mov
push
pop
mov
mov
test
cmp
add
adc
out
pusha
add
rep
sbb
xor
mov
sbb
sbb
add
lods
fadds
push
in
cmp
rolb
mov
add
cli
cli
mov
jne
mov
in
xchg
add
cmpsb
xchg
test
fwait
ds
add
rolb
mov
pop
inc
or
mov
pusha
add
mov
sub
pop
ss
mov
in
ja
dec
dec
or
mov
data16
or
add
hlt
movsl
cmp
add
mov
add
xchg
flds
xchg
add
or
mov
jl
int
mov
mov
sti
add
mov
dec
test
or
xchg
fs
lahf
cmc
int
pop
jnp
sbb
imul
mov
mov
xor
cmc
iret
imul
adc
mov
and
loope
and
fs
stos
idiv
push
add
mov
mov
add
mov
add
add
mov
mov
mov
icebp
in
lds
add
push
loope
jns
adc
add
mov
add
push
xchg
into
fcmovbe
dec
mov
mov
xchg
repz
add
add
cmpsb
and
mov
fsubl
adc
and
es
dec
and
rolb
mov
out
jns
lock
icebp
mov
or
mov
add
mov
out
add
test
in
in
xchg
mov
jns
roll
call
cmp
pop
sahf
bound
mov
add
fnstenv
repz
test
sti
pop
lret
xor
movsl
ret
popa
sbb
add
adc
stos
testl
push
add
js
addb
inc
add
orl
mov
jp,pn
mov
mov
adc
in
addb
clc
adc
bound
mov
nop
add
add
mov
lock
mov
mov
mov
rolb
mov
dec
cltd
push
add
cmpsl
inc
pop
pop
sbb
push
vmread
xor
mov
push
sahf
inc
jecxz
sbb
push
ficoms
iret
inc
add
mov
daa
ret
xchg
cmpsl
jns
test
mov
cmp
daa
pop
sbb
add
stos
mov
jge
mov
imul
sbb
add
fdivrl
cli
mov
xchg
inc
add
mov
jl
add
add
sub
mov
mov
stc
out
int3
cltd
in
mov
cmc
dec
movsb
jnp
mov
push
movsb
push
lds
fldt
mov
push
and
mov
mov
jbe
lods
fimull
push
sub
popf
xchg
dec
or
rolb
push
jl
ds
ret
or
mov
in
out
in
add
lods
mov
xor
jo
mov
fdivs
cld
jb
mov
add
add
mov
xor
in
sbb
out
mov
dec
fstpl
xchg
je
insl
pop
fldl
and
fptan
add
jne
sbb
cmp
idiv
rorl
fprem
pop
cmp
jbe
jle
add
decb
push
jns
and
add
or
mov
mov
add
add
fdivs
inc
jg
fistl
adc
insb
loop
mov
iret
mov
lcall
fwait
mov
pushf
fcomi
lahf
cwtl
fcomps
jg
add
mov
push
scas
jnp
add
dec
jge
mov
rolb
icebp
por
hlt
in
in
xlat
sbb
xchg
mov
in
popa
jne
add
mov
aad
inc
test
clts
insb
test
push
loope
inc
and
mov
sbb
data16
inc
xchg
add
mov
repz
stos
cmp
dec
out
fidivl
fwait
scas
jae
ds
add
add
xchg
jne
add
loop
mov
cld
adc
add
mov
jg
inc
in
mov
xchg
mov
enter
jmp
mulb
add
es
add
or
push
pop
icebp
or
xchg
enter
mov
addb
add
xlat
adc
add
call
les
test
inc
out
test
inc
lock
mov
add
rolb
mov
and
mov
add
push
gs
scas
push
push
mov
xor
mov
lock
adc
lea
push
data16
mov
rolb
mov
mov
and
cmovae
jge
imul
sub
pop
out
in
add
outsl
sti
sub
cmp
rorl
addb
cmp
jns
enter
jo
mov
daa
mov
pop
mov
popf
add
mov
dec
xchg
inc
add
pop
xor
mov
fmuls
push
xlat
aas
cli
daa
sub
mov
jecxz
and
aaa
dec
lea
mov
mov
mov
cmovs
xor
xlat
test
dec
cwtl
cmp
dec
mov
mov
ljmp
movsb
addb
adc
stos
sahf
out
call
fbld
mov
arpl
lahf
add
scas
es
insb
in
mov
mov
cmp
aaa
mov
xor
add
lahf
push
add
mov
xlat
out
sub
dec
cmc
dec
inc
add
push
jbe
in
pop
and
fisttps
mov
loope
add
adc
jae
xchg
add
lea
add
scas
add
lcall
repz
jo
mov
add
fidivl
add
add
add
jnp
add
ja
xchg
lods
sub
add
xchg
sub
in
ret
adc
mov
adc
fnsave
pop
mov
sub
jbe
les
push
mov
lret
fcoms
mov
testl
xor
jno
cmpsl
mulb
mov
mov
lcall
jge
push
arpl
cmp
xor
mov
add
adc
fstps
push
cmp
sbb
or
gs
mov
add
fistpll
stos
leave
into
dec
xor
mov
xchg
dec
repnz
jle
nop
add
add
sbb
lret
dec
adc
mov
push
push
cmp
add
jae
lds
dec
jne
add
xor
fsubrs
fnstenv
mov
dec
aaa
mov
pusha
add
mov
repz
addl
add
push
inc
mov
loopne
mov
loop
mov
adc
adc
mov
pop
rolw
mov
jae
add
xchg
push
pop
stos
stos
std
jecxz
pop
out
int3
in
adc
addb
aas
or
mov
mov
jle
xlat
cmp
fadd
subl
push
fbstp
sub
add
insb
jecxz
push
add
movsb
xor
mov
fbstp
mov
cmp
fcmovb
add
add
clc
cmp
test
mov
cli
inc
push
add
jp
sbb
sub
test
add
pushf
gs
mov
cmp
lret
mov
mov
ja
mov
mov
mov
add
rolb
add
inc
xor
mov
push
mov
mov
mov
add
mov
mov
mov
pop
sbb
mov
mov
ret
pop
loop
mov
push
add
add
xorl
mov
lret
mov
mov
add
jp
test
popf
test
mov
in
mov
les
add
orl
inc
aad
add
in
add
pop
insl
xchg
mov
or
inc
dec
aaa
mov
mov
daa
stos
adc
xor
xor
fcmovne
dec
xchg
sti
pop
popf
jmp
adc
das
push
in
inc
dec
out
dec
dec
or
in
fcmovnu
sbb
mov
mov
add
lods
adc
mov
outsl
dec
sti
addb
push
dec
mov
mov
and
ret
adc
dec
divl
add
dec
pop
sub
mov
movl
popa
cmc
jb
mov
dec
popa
popa
pop
aad
add
mov
dec
sbb
and
movsb
push
add
call
sub
pop
out
jg
insl
movsl
adc
cs
dec
inc
and
mov
jle
and
pop
mov
add
push
addb
dec
in
push
jmp
mov
adc
add
mov
gs
bound
mov
dec
hlt
and
popf
push
add
jmp
imul
mov
mov
ja
mov
mov
add
fyl2x
push
imul
mov
push
in
incb
inc
add
mov
sbb
mov
stc
fwait
addb
and
add
ret
fs
outsl
and
mov
push
push
add
idivl
xchg
stos
fnstcw
mov
xor
mov
fwait
push
int3
mov
push
sub
addb
ret
lcall
lret
mov
mov
inc
add
addb
movsb
clc
inc
cltd
add
mov
mov
sub
daa
insl
pop
pop
test
add
inc
sbb
or
push
add
ds
mov
in
in
out
insb
rorl
nop
add
bound
mov
sub
xor
xchg
imul
mov
pushf
mov
add
add
add
cmp
repz
push
xor
xchg
fwait
adc
lods
ret
dec
push
xchg
add
mov
add
add
addr16
or
mov
jmp
dec
ficoms
add
ja
cltd
aad
add
mov
mov
jecxz
icebp
into
repnz
out
xchg
pop
rep
jmp
rcpps
pop
hlt
mov
insl
mov
mov
outsb
pusha
add
js
movsb
orl
sbb
add
mov
inc
mov
ljmp
mov
mov
out
std
jo
mov
or
add
nop
add
movsb
inc
enter
and
pop
xor
mov
mov
add
add
jns
fs
add
push
mov
lahf
stos
add
mov
xor
jae
stos
xchg
mov
or
add
inc
jge
movsl
pop
mov
nop
add
add
xchg
int3
repnz
mov
lret
lods
xchg
sbb
jns
add
lcall
mov
bound
mov
or
sub
negb
mov
test
mov
push
mov
inc
push
mov
mov
and
mov
and
ds
sub
je
add
mov
add
jb
mov
and
xor
imul
or
xchg
test
bound
mov
test
sbb
adc
mov
add
add
mov
and
sti
or
hlt
sub
mov
add
mov
addb
and
mov
mov
lock
mov
add
and
imul
pop
iret
pop
test
jnp
mov
add
cmpsb
lret
jl
ja
out
add
dec
stc
nopl
mov
sub
inc
cmp
mov
add
dec
aad
repnz
adc
add
or
mov
dec
stos
fs
add
jns
mov
lahf
adc
test
dec
popf
sbb
add
fdivs
movsb
jl
arpl
xchg
xchg
pusha
add
pop
mov
sbb
or
add
leave
pop
sub
add
sbb
rolb
mov
jb
mov
xchg
mov
add
data16
clc
sub
daa
out
cs
cltd
gs
out
xor
mov
mov
mov
insb
aad
sbb
jge
dec
ss
rolb
mov
mov
mov
mov
mov
fcompl
pop
in
ss
adc
inc
add
in
mov
or
mov
adc
in
fidivl
mov
xchg
add
pushf
jb
mov
rolb
mov
testl
jo
mov
mov
mov
push
fucomp
inc
jb
mov
and
mov
addb
addr16
mov
mov
into
jl
mov
mov
xchg
aas
stos
push
dec
cmpsl
jmp
or
sub
push
xor
dec
lds
test
mov
mov
xor
push
fs
jmp
add
hlt
mov
sbb
add
pop
out
scas
push
mov
out
daa
cwtl
pusha
add
fstpl
enter
add
ja
popa
push
out
loop
mov
push
adc
or
mov
mov
jns
test
mov
mov
je
int3
pop
test
inc
mov
adc
std
fdivl
enter
icebp
clc
popf
mov
lea
add
int
pop
imul
pop
mov
add
jge
pushf
jp
lcall
mov
add
xor
mov
adc
mov
stc
faddp
sub
add
adc
mov
add
xchg
rolb
sti
add
add
lds
add
daa
sbb
add
mov
ds
sbb
cmp
in
out
lahf
fwait
mov
add
add
mov
loopne
mov
popa
or
add
cli
btr
je
out
fcomps
mov
mov
and
test
mov
jl
xchg
lods
mov
lods
mov
or
out
dec
clc
idivl
in
mov
scas
jmp
clc
lcall
mov
mov
add
mov
addr16
rolb
mov
lcall
aas
das
repz
shl
jo
mov
add
cmpsb
pop
sbb
iret
cmp
add
sbb
addb
xor
mov
aam
mov
add
push
jp
rorl
inc
add
lret
fisttps
push
xchg
cmp
lods
push
add
ret
xor
jbe
rol
mov
add
add
jge
rolb
mov
fucom
lock
or
cmp
adc
add
and
mov
lea
jae
inc
movsl
fstps
inc
add
mov
sub
sbbw
cmc
out
adc
mov
ficomps
pop
stos
cld
xor
ds
mov
push
addr16
mov
int3
aam
push
mov
sbb
stos
jecxz
add
rolb
mov
add
sub
mov
out
adc
mov
mov
lods
dec
cmc
or
mov
int3
loope
sahf
sbb
mov
subl
addb
lods
in
aas
mov
push
mov
mov
insb
pop
shll
mov
mov
sbb
fisttpl
add
and
mov
vpmuludq
add
mov
addb
out
xchg
mov
shl
enter
aaa
cmp
push
rcl
fmuls
leave
iret
imul
addb
xchg
add
cmp
add
add
addb
mov
xor
mov
cmc
xchg
xor
cmp
mov
mov
shll
mov
adc
fadds
add
mov
jns
mov
push
rolb
mov
xor
mov
add
jne
mov
mov
js
cmp
add
fisubrl
pop
adc
mov
test
outsl
into
jbe
mov
mov
sbb
aaa
adc
add
lret
into
adc
fistps
sub
les
add
mov
push
add
dec
fdivrs
repz
cltd
pop
cs
and
mov
jle
add
xor
lahf
mov
lea
lret
mov
mov
pop
fs
xchg
imul
int
jno
neg
into
sbb
pop
dec
in
sti
cmp
jmp
mov
sbb
mov
testb
mov
daa
inc
add
add
stos
addb
push
add
add
mov
cmp
mov
push
add
mov
adc
xchg
adc
adc
dec
fidivrl
add
mov
mov
mov
add
inc
cmpsb
lcall
jge
dec
ds
push
sti
mov
pop
movaps
je
add
sbb
mov
mov
mov
add
sub
scas
xchg
xchg
sbb
in
add
enter
xor
dec
mov
dec
mov
add
jno
mov
cmpsb
jno
leave
fstl
repnz
outsl
roll
mov
add
push
mov
adc
xor
add
xchg
lea
add
addb
sbb
mov
mov
add
xchg
xor
add
mov
push
outsl
fucom
stos
jle
lcall
sbb
jo
mov
shll
add
pop
inc
dec
scas
cwtl
fstl
ret
pop
popf
sub
daa
push
pmulhuw
ds
lds
mov
inc
in
add
push
jl
lods
push
test
pop
aad
mov
mov
mov
lods
xchg
push
repnz
fst
add
mov
addb
push
add
scas
push
add
dec
jae
xchg
call
add
add
adc
in
sahf
push
loope
add
inc
inc
add
cmp
jb
mov
jmp
sti
std
repz
outsl
in
add
lods
push
mov
sub
outsb
cwtl
push
in
bound
mov
add
sti
imul
and
mov
adc
les
add
inc
scas
xchg
xchg
cmp
pop
jge
add
mov
ficoml
imul
fcomps
stc
in
or
pop
mov
inc
inc
xor
mov
flds
scas
test
imull
cld
sub
neg
fmulp
jp
daa
or
adc
dec
imul
add
mov
lock
pushf
sbb
and
mov
lds
and
mov
outsl
jecxz
add
push
mov
xor
sub
addr16
jb
mov
push
add
push
add
inc
or
add
pop
repnz
pop
push
or
and
stc
popa
cwtl
fs
lods
loop
mov
das
out
and
mov
add
stos
cwtl
aaa
jl
add
sub
push
xor
adc
addr16
stos
xchg
dec
dec
adc
jns
jmp
scas
xor
stos
rolb
mov
add
mov
add
xchg
pusha
add
imul
sbb
xchg
jge
jnp
mov
cmp
sbb
push
in
imul
xchg
scas
gs
cmp
ss
addb
adc
jge
pop
add
xor
mov
aam
lret
test
scas
negl
arpl
add
or
pop
fcompl
or
ret
out
xchg
dec
repnz
in
data16
stc
incl
rcrl
xor
mov
sub
bound
mov
sub
sbb
inc
or
inc
loop
mov
sub
mov
push
sarl
pop
addb
sbb
inc
add
or
jge
int3
test
mov
mov
pop
xor
add
lods
cmpsl
mov
xchg
fistl
add
mov
or
mov
mov
xor
add
jno
mov
sub
mov
dec
and
mov
cmp
jnp
in
xor
mov
sbb
and
jl
sbb
add
ret
push
add
add
out
clc
fistl
add
sub
imul
jb
mov
repnz
gs
add
and
pushl
add
jno
fildll
push
pop
and
add
addl
add
mov
outsl
sbb
ret
add
mov
mov
jge
adc
mov
flds
mov
and
mov
loop
mov
pushf
idiv
repz
xchg
mov
push
nop
add
out
and
fsts
dec
sti
mov
adc
inc
loopne
mov
mov
push
xchg
add
mov
ja
movsb
cltd
mov
add
adc
icebp
jae
test
xchg
xchg
es
jnp
mov
pop
cmp
aaa
cld
aas
pop
and
mov
jo
mov
out
ja
sahf
scas
fldl
nop
add
add
movsb
dec
mov
mov
add
inc
add
sbb
inc
and
mov
jne
sub
add
inc
adc
mov
addb
je
and
mov
jge
cld
inc
jg
push
add
sbb
mov
movsl
xor
jle
test
ss
imul
push
jae
inc
ret
movsl
ds
xlat
ds
and
mov
dec
out
lods
adc
add
fsub
add
mov
mov
add
add
sub
ljmp
sbb
pushf
and
mov
add
jle
fdivrs
inc
add
mov
xchg
inc
add
ds
jle
dec
sbb
jno
bound
mov
pause
add
sub
mov
repz
mov
mov
add
mov
sbb
mov
loope
mov
lea
adc
jmp
mov
and
mov
pop
dec
cli
mov
dec
dec
mov
mov
mov
add
mov
insb
xchg
pop
jle
mov
or
or
repz
mov
repnz
je
outsb
outsb
sub
push
mov
mov
pop
cld
add
mov
add
movsb
iret
cmp
mov
call
cmp
imul
repz
jl
xchg
lahf
insw
adc
mov
add
add
mov
add
cmpsl
jnp
je
not
add
sub
sahf
adc
mov
jo
mov
ja
addb
repnz
and
popa
movsb
pop
sub
sub
int
lds
cmpsb
pop
test
add
fdivrl
add
jl
subl
dec
adc
push
add
cs
dec
rolb
jae
jae
ret
and
xor
sub
add
in
jg
pushf
sub
mov
inc
inc
push
push
add
test
jle
add
daa
iret
dec
addl
pop
test
xchg
repnz
out
nop
add
js
jge
pop
mov
mov
mov
pop
and
mov
and
jne
sti
ja
jmp
outsl
mov
imul
lds
xchg
mov
pop
gs
mov
mov
add
lods
scas
push
or
sahf
mul
fs
fucomp
sbb
clc
outsw
jns
add
add
add
sub
add
push
in
pop
in
mov
cli
int
mov
fwait
idivb
add
mov
pop
cmpsl
push
mov
pop
adc
xchg
rolb
int
and
add
movsl
repz
push
filds
mov
inc
lahf
and
lock
add
jns
loopne
mov
add
movb
bound
mov
mov
push
pop
mov
inc
imul
add
addb
mov
add
add
sbb
or
loopne
mov
jno
xchg
mov
outsb
jbe
lret
loope,pt
daa
mov
mov
enter
mov
xchg
sub
imul
xor
mov
add
mov
sub
ljmp
call
xchg
mov
mov
hlt
mov
pop
sbbl
mov
push
add
and
mov
xor
mov
push
pop
mov
int3
nop
add
je
add
addl
cmp
push
out
es
add
xchg
call
int3
jae
and
cmc
cli
mov
rolb
mov
push
add
add
mov
cltd
xor
mov
loop
mov
cmc
pop
ljmp
mov
stos
sbb
testb
popf
and
pop
mov
je
xor
imul
in
adc
mov
xchg
add
jno
jae
orl
mov
add
imulb
lcall
mov
xor
mov
aaa
mov
add
jp
add
add
ljmp
mov
addb
outsl
je
mov
mov
ja
nop
add
add
imul
push
add
cmp
rolb
mov
das
jne
bound
mov
add
xor
pop
fcomps
mov
xchg
sub
mov
cmp
inc
addb
xor
or
lock
popf
add
ds
imul
jl
add
jbe
add
xchg
mov
add
loope
dec
je
add
mov
xor
lds
add
add
dec
mull
aaa
test
cmc
fwait
jmp
cmc
mov
pop
mov
out
xlat
repnz
mov
sub
fiaddl
hlt
popf
imul
movsl
ss
jb
mov
mov
inc
inc
mov
cmp
mov
out
cli
cltd
mov
and
in
lods
cmpsb
into
in
aas
not
fs
mov
fistps
int
mov
lahf
pop
test
sbb
rolb
daa
or
das
mov
sbb
add
and
mov
jg
out
push
shrl
ja
mov
enter
and
inc
add
mov
mov
add
pop
mov
xchg
inc
pop
outsl
pop
or
dec
jb
mov
lret
in
lock
or
cld
mov
addb
mov
mov
add
jp
mov
cmc
push
fldl
in
push
pop
xor
mov
mov
adc
add
lods
jbe
dec
in
pop
cmc
or
push
arpl
fs
in
test
add
mov
ret
mul
enter
jns
mov
adc
and
inc
aaa
push
rolb
mov
xor
and
mov
mov
xor
mov
xchg
sbb
mov
mov
sbb
mov
outsb
and
mulps
and
imul
cmpsb
adc
mov
out
add
add
push
add
pusha
add
mov
xor
xor
pushf
or
sbb
scas
aad
mov
mov
sub
adc
aam
mov
mov
fisubl
inc
add
fdivrp
adc
add
rolb
mov
xchg
jmp
aaa
mov
push
pop
cwtl
sub
dec
or
xor
mov
rolb
mov
daa
addb
test
dec
lock
loop
mov
mov
mov
or
pop
ss
xor
mov
add
mov
mov
add
adc
mov
fnsave
sbb
mov
sbb
jp
divb
incb
xchg
sti
pop
xor
in
daa
daa
and
push
mov
bound
mov
add
xchg
inc
add
mov
mov
and
mov
add
mov
pop
fcmovbe
add
scas
imul
inc
and
loopne
mov
adc
jge
add
sub
and
dec
enter
outsl
jns
adc
stos
arpl
pop
cld
adc
mov
mov
daa
and
mov
mov
inc
xchg
mov
adc
mov
add
daa
and
mov
lahf
inc
nop
add
clc
sbb
add
mov
addb
mov
mov
add
fildl
add
imull
repnz
pop
out
jle
outsb
outsl
pop
xor
mov
fcompl
lds
mov
mov
inc
add
addb
fsubl
aaa
push
jecxz,pt
mov
dec
mov
cltd
push
add
movsl
sbb
add
lret
inc
lods
xor
add
mov
nop
add
mov
sub
add
addb
pop
addb
sbb
mov
pop
stos
insb
scas
jnp
imul
mov
test
add
dec
push
adc
mov
test
jp
test
sub
mov
jbe
xlat
insb
rolb
mov
mov
mov
mov
sub
mov
dec
adc
mov
add
movsl
cmp
add
sub
in
add
imul
cld
xchg
dec
cs
in
inc
mov
jb
mov
add
in
add
and
mov
and
mov
je
jno
je
and
clc
cs
mov
stos
dec
rolb
mov
cld
xlat
cmc
mov
pop
dec
push
scas
or
enter
pop
mov
push
mov
add
sub
das
cmpsb
mov
mov
lods
mov
push
add
arpl
dec
cmp
ror
nop
add
add
adc
flds
lock
sbb
mov
mov
and
mov
es
mov
mov
jbe
test
mov
sbb
adc
mov
stc
in
outsl
or
repz
out
into
dec
mov
repz
mov
mov
les
mov
jne
xor
mov
imul
add
ss
repnz
movsb
xor
mov
mov
mov
mov
jbe
mov
mov
add
cltd
push
dec
leave
push
or
add
aaa
sub
mov
mov
leave
out
test
repnz
std
dec
xchg
popa
jg
fnstsw
add
adc
mov
dec
adc
mov
mov
mov
insb
pop
hlt
add
subl
cwtl
rcll
adc
mov
add
mov
xlat
push
addr16
mov
fistpll
xchg
mov
mov
mov
mov
add
mov
repnz
mov
add
add
aad
mov
mov
add
mov
mov
mov
rcrl
xlat
xor
xor
cmc
cmc
xchg
lret
sbb
sti
jb
mov
outsb
je
test
aaa
mov
add
xor
mov
or
add
pusha
add
into
dec
ret
les
add
test
sbb
mov
xchg
sub
add
or
lock
clc
jp
add
icebp
pop
cmp
sbb
rcrl
sti
lahf
push
hlt
adc
fwait
push
xchg
lahf
pop
sbb
pop
push
les
fnstcw
lcall
mov
sbb
mov
stc
push
xchg
shll
stc
add
mov
pop
movsl
imul
lahf
jecxz
inc
mov
push
add
jle
adc
and
stos
pusha
add
push
jbe
mov
add
adc
mov
add
mov
popa
int3
out
out
loopne
mov
mov
add
bound
mov
addr16
pushf
jb
mov
aas
rolb
mov
add
mov
push
add
mov
push
rolb
mov
xchg
add
aam
add
inc
repnz
ss
dec
sbb
loope
add
lret
in
cwtl
stos
mov
mov
add
push
lods
mov
mov
and
or
cmp
mov
aam
add
testl
cmp
mov
mov
pusha
add
mov
and
mov
add
mov
popf
out
add
shl
mov
mov
mov
jle
inc
mov
add
adc
adc
icebp
repnz
rolb
fistpl
or
xchg
push
add
pop
ret
and
mov
fucomip
dec
sbb
movsl
pop
fidivs
push
add
mov
add
mov
mov
mov
jbe
add
add
pop
inc
ffreep
lock
or
inc
xchg
fidivl
mov
bound
mov
stos
xchg
add
fdivr
adc
mov
addl
mov
mov
mov
sbb
xchg
add
mov
loopne
mov
call
mov
fwait
rorl
in
scas
rolb
mov
nop
add
mov
int
bound
mov
sbb
mov
inc
ss
int
jb
imulb
inc
int
ljmp
addb
push
xor
mov
test
jecxz
les
mov
movsl
sub
les
fidivrs
sub
add
adc
rolb
mov
sbb
add
idivl
loop
mov
add
rolb
mov
and
orl
out
inc
add
and
repz
jo
mov
push
jne
pop
xchg
xchg
cmp
add
add
je
jae
xor
mov
sbb
sbb
jns
push
pop
cmpsb
or
inc
ret
cltd
xchg
lea
repz
mov
fcmovbe
call
stos
pop
add
add
popa
rorl
idiv
cs
movsb
shrl
sarl
and
pop
bound
mov
mov
or
call
std
mov
xchg
adc
mov
dec
enter
lret
add
cltd
fdivp
or
pushf
sub
cwtl
push
jbe
repnz
jb
mov
mov
add
sbb
jbe
fsubs
jbe
outsl
unpcklps
jnp
xor
mov
loope
add
add
mov
push
movsb
addr16
testl
mov
mov
test
test
repz
leave
ja
add
mov
xor
inc
add
push
add
dec
enter
mov
aaa
xor
sub
xchg
in
xor
mov
and
mov
mov
rolb
mov
aaa
push
add
fistl
fisubs
outsl
call
dec
pushf
repnz
push
jg
in
push
adc
mov
mov
mov
mov
xor
push
adc
add
mov
add
pop
xchg
fnstsw
mov
mov
xor
mov
pop
out
out
arpl
add
and
sub
push
push
add
lcall
cli
and
rolb
mov
add
ljmp
push
fstps
mov
or
inc
rolb
mov
jl
mov
pop
cmpsb
sub
mull
enter
flds
ss
xor
sbb
jnp
int3
pop
xchg
adc
mov
push
mov
into
shrl
push
cmpsl
jbe
scas
sahf
insb
mov
and
dec
adc
pop
notb
add
icebp
mov
pop
add
stc
nop
add
mov
add
fidivrs
out
das
fimull
fs
xor
aam
add
mov
xchg
inc
jno
cmp
imul
xlat
or
push
pop
adc
and
mov
mov
lret
add
push
cwtl
adc
mov
add
mov
mov
push
inc
push
outsl
inc
add
sub
add
mov
pop
jbe
das
jmp
mov
jle
test
mov
jns
cmc
jle
add
nop
add
jno
cmpsb
int3
mov
add
jp
fcomip
add
add
in
in
mov
fsts
mov
mov
add
hlt
cmpsb
jbe
pop
movsl
add
mov
cvtps2pd
push
push
sbb
scas
add
push
xchg
xlat
pop
cltd
pop
push
and
xchg
hlt
aaa
mov
rolb
int3
daa
daa
aaa
mov
mov
sbb
aaa
nop
add
cwtl
addb
and
imul
test
rolb
mov
mov
add
xchg
ficoml
jmp
add
mov
xor
mov
mov
iret
stos
repz
mov
add
jl
add
mov
pop
mov
adc
mov
pop
roll
sti
notl
jns
sahf
outsl
mov
mov
sahf
lcall
mov
mov
or
mov
add
xchg
sbb
dec
clc
jae
add
mov
mov
dec
push
das
outsb
inc
mov
mov
aaa
cmp
out
lret
int
fwait
cmc
mov
sub
sub
xchg
imul
mov
popa
jb
mov
xchg
gs
add
pop
fmuls
es
test
sahf
leave
add
cmp
sbb
sahf
insb
addb
jnp
pop
sbb
mov
ret
mov
test
add
mov
mov
je
add
jbe
lods
adc
mov
pop
pop
rolb
mov
inc
dec
repnz
jecxz
add
xchg
xor
rolb
mov
stos
enter
mov
sbb
pop
push
out
xlat
repz
nop
add
mov
add
fisttpl
ret
out
out
inc
mov
add
jnp
rolb
rcrl
cli
clc
add
mov
mov
mov
cmpsl
in
shll
flds
mov
cmc
push
add
push
add
mov
cmp
push
mov
mov
icebp
push
mov
push
scas
nop
add
cwtl
mov
mov
xchg
dec
xor
mov
hlt
push
jnp
mov
inc
add
cmpsl
mov
xchg
loope
dec
push
or
and
mov
in
inc
inc
insb
push
repz
in
push
mov
mov
jae
dec
pop
sbb
mov
or
pop
movsl
rolb
test
jp
add
ret
es
push
je
enter
jnp
shld
push
and
mov
fnstcw
cmp
bndldx
sbb
push
pop
or
jmp
jecxz
sub
inc
dec
dec
add
mov
rolb
xchg
fsubl
cwtl
xchg
sti
cmpsb
mov
daa
mov
rcrl
shr
aas
subl
jecxz
inc
mov
pop
xchg
lea
add
cwtl
flds
cmp
push
mov
dec
into
jo
mov
mov
mov
inc
add
jnp
xchg
adc
mov
add
add
mov
add
add
icebp
xor
jmp
cmp
icebp
cmc
cwtl
sti
add
mov
xchg
add
push
mov
inc
xor
lahf
into
mov
jecxz
add
test
add
test
daa
mov
add
dec
rolb
mov
cld
cmp
jmp
pop
jnp
scas
test
add
out
mov
fmull
add
out
stos
jp
das
mov
xchg
shr
adc
mov
daa
mov
imul
rolb
ret
lds
add
outsb
outsl
push
mov
inc
adc
mov
and
inc
add
stc
sbb
xchg
push
or
xor
or
mov
inc
mov
mov
mov
in
xor
or
addr16
add
add
and
out
hlt
ja
adc
sarl
add
lds
mov
ljmp
cmp
mov
clc
in
add
jns
std
jmp
cmpsl
pop
pop
loopne
mov
add
pop
loopne
mov
mov
out
leave
mov
out
xor
mov
add
add
and
mov
test
cwtl
rolb
cmp
jmp
xor
xor
or
adc
jg
jmp
test
cli
jmp
xchg
repnz
shll
and
ja
adc
testl
lods
arpl
unpcklps
and
mov
out
dec
leave
outsl
xchg
mov
out
test
repnz
fstps
add
insl
sbb
repz
fwait
and
aam
cmp
add
push
pusha
add
xor
mov
addr16
cmc
push
in
std
repz
mov
push
add
jae
rolb
mov
add
rol
test
iret
jmp
adc
out
dec
ljmp
add
test
adc
push
xchg
xchg
aaa
dec
mov
xor
mov
fimuls
adc
cmc
clc
movsb
jg
insl
in
cmpsl
addr16
punpckhwd
mov
stos
fs
jo
mov
add
out
pop
repz
mov
ret
add
mov
sbb
cld
call
mov
mov
add
outsl
lcall
lret
inc
data16
cmp
imul
aaa
into
adc
out
xchg
mov
int3
pop
adc
mov
add
dec
push
push
cmp
mov
std
addb
movsb
lods
ds
inc
add
push
mov
xor
aas
sahf
mov
push
push
dec
sub
jno
add
jo
mov
pop
int3
imul
mov
lock
fcmovnb
add
jno
mov
adc
lock
pop
lcall
cmp
insb
mov
fscale
addb
jbe
inc
add
add
xchg
nop
add
orl
adc
mov
lods
stc
mov
pop
mov
mov
add
mov
aaa
fdivs
ret
cld
addr16
mov
add
mov
sub
sbb
xorl
cmp
aas
in
popf
inc
add
shrl
fisubrl
and
sbb
mov
xchg
sub
xor
jle
cmp
xor
mov
das
xchg
into
push
ficompl
add
mov
ret
jbe
pop
adc
lahf
jnp
xchg
mov
js
add
movsl
cs
outsb
xchg
dec
ret
les
mov
add
xlat
in
xor
sbb
stos
push
in
in
arpl
stc
add
mov
cwtl
out
mov
sub
or
jmp
inc
add
xor
mov
add
mov
jbe
add
mov
int3
cld
push
add
data16
dec
push
test
sbb
addb
test
inc
pop
mov
xchg
mov
rolb
mov
xchg
sbb
mov
mov
test
add
mov
lret
pop
jecxz
sbb
sbb
add
mov
pop
lahf
lea
test
dec
ljmp
add
mov
js
add
sub
add
xchg
popa
jg
xchg
mov
mov
push
aam
jns
add
jl
outsl
mov
in
imul
imul
push
int3
mov
nop
add
add
pop
sub
pusha
add
cmp
icebp
and
jl
mov
in
je
push
sets
fwait
dec
arpl
push
mov
out
cmp
mov
iret
leave
push
inc
push
mov
add
aam
icebp
inc
daa
fsts
pop
or
ss
add
add
gs
add
push
icebp
and
add
and
and
adc
mov
cltd
mov
dec
or
adc
add
mov
cmpsl
mov
fs
fisubl
add
movsb
dec
xchg
mov
int
add
mov
mov
mov
lods
sbb
cmc
inc
add
ds
pop
clc
addb
lcall
outsl
inc
adc
mov
test
bound
mov
addr16
inc
adc
mov
xorl
jne
xchg
clc
pusha
add
cmp
adc
mov
mov
add
aam
mov
mov
cmp
add
lret
loope
out
insb
sbb
popa
and
fsubl
xchg
inc
dec
cmpsl
mov
sti
xor
ret
lea
dec
mov
shll
mov
fwait
adc
mov
repz
mov
jp
pop
iret
push
add
mov
lret
mov
add
xor
sub
jns
push
add
mov
outsl
outsb
cmpsb
xor
xchg
jae
loop
mov
add
mov
sbb
xchg
int
sti
or
dec
mov
cld
popf
inc
add
pop
adc
jge
xor
mov
arpl
add
cmpsb
out
pop
push
les
mov
iret
shll
addb
xlat
inc
cmpsb
fidivs
iret
divb
aam
inc
push
add
and
mov
pop
lods
test
scas
pop
out
std
adc
add
add
ret
xor
mov
add
xchg
fidivs
push
add
popa
leave
negb
inc
pusha
add
mov
mov
inc
test
jnp
or
pop
xchg
inc
mov
add
ljmp
fwait
stos
popf
xchg
add
mov
pushf
xor
adc
mov
mov
jl
sub
inc
push
xchg
outsl
push
mov
xchg
dec
lock
jp
xor
mov
dec
and
push
jns
inc
sub
add
test
leave
fists
aam
push
aam
jbe
lods
shll
sub
movsl
cli
push
push
inc
add
and
add
mov
or
jb
mov
cmp
add
cmp
push
lds
xchg
aam
iret
pop
repz
mov
add
mov
xor
popa
xchg
dec
push
mov
add
mov
or
ret
in
rolb
and
mov
add
es
push
jo
mov
xchg
dec
call
add
mov
out
and
std
inc
push
shll
add
test
fldenv
ret
nop
add
cli
ljmp
cli
jb
mov
scas
add
xor
cmp
lea
xlat
xor
mov
add
adc
sti
sub
fadds
sbb
mov
adc
mov
inc
pop
mov
call
add
pop
mov
jg
jg,pt
push
jp
add
jl
add
sub
inc
add
sub
xchg
mov
mov
std
push
popf
sbb
xchg
or
jb
mov
pmaddwd
mov
xor
jecxz
push
loope
insb
lods
mov
pop
ja
add
js
or
insb
pushf
jbe
test
add
popa
sbb
jne
mov
sub
out
pusha
add
data16
xchg
stos
sbb
or
movsl
out
in
into
lret
push
xchg
and
add
rolb
mov
dec
fisttpll
push
out
pop
loop
mov
xchg
movsl
mov
mov
sbb
pop
pop
adc
mov
dec
cmp
add
xchg
add
mov
and
mov
add
add
add
popa
pop
sbb
and
cmp
and
mov
bound
mov
mov
mov
ds
push
jae
add
add
mov
add
add
mov
xchg
lods
and
add
add
idivl
mov
add
das
lret
fs
push
add
xor
add
and
imul
pushf
xor
sbb
jmp
inc
leave
or
fs
mov
ret
pop
add
mov
push
mov
jo
mov
mov
jne
pop
movsb
and
and
fldt
loop
mov
aad
loopne
mov
pop
insl
fsts
mov
lahf
push
add
aaa
outsl
or
sub
neg
pop
rolb
xor
mov
add
adc
mov
pop
mov
imul
inc
add
inc
cmc
mov
jne
lret
mov
lds
jns
sub
sub
push
subl
rolb
mov
mov
pop
ret
add
lods
mov
sub
jbe
lret
add
mov
or
adc
mov
add
mov
mov
repnz
mulps
inc
inc
add
mov
lret
adc
add
push
add
shrl
clc
negb
mov
negl
mov
lahf
xor
mov
add
sub
add
add
inc
add
clc
in
add
push
sbb
pusha
add
mov
and
cs
jg
pop
pushf
les
push
cmpl
sbb
movsl
ficompl
pusha
add
dec
inc
mov
test
lock
add
sub
mov
mov
ss
rolb
mov
movsb
sbb
mov
adc
mov
mov
add
arpl
add
cld
call
fdivr
hlt
xchg
add
lock
sbb
add
push
mov
jmp
cmp
cld
mov
popf
pop
gs
popf
lret
stc
out
stos
jecxz
es
add
mov
addb
mov
pusha
add
dec
cmpsb
test
xchg
adc
push
fistpl
jg
push
stos
testl
and
cwtl
mov
add
in
scas
scas
and
mov
and
mov
xor
add
clc
int3
and
aas
lcall
icebp
xchg
mov
add
add
repnz
lods
shll
add
js
cmp
mov
add
push
add
out
add
pop
aad
enter
sub
and
mov
jle
pop
push
add
outsb
inc
inc
and
push
jbe
adc
or
inc
cmp
sub
pop
shll
push
add
insl
outsl
cld
add
sub
add
shrl
add
mov
and
add
xor
mov
subl
movsl
cmp
sbb
ljmp
add
mov
jp
cmp
bound
mov
add
aas
jge
add
jae
add
stc
jmp
fcomps
mov
mov
jne
je
testb
add
add
imulb
jmp
mov
mov
xchg
add
lahf
rolb
mov
mov
mov
fbld
dec
add
cli
jge
add
push
mov
lret
sbb
and
in
push
and
mov
int3
rolb
mov
add
adc
bound
mov
ss
imul
add
or
adc
mov
ret
rolb
mov
std
push
jnp
jle
fstps
jns
popf
adc
mov
xchg
int3
mov
add
mov
add
sub
push
add
cmp
repz
outsl
jp
cmp
pop
adc
add
add
pop
lock
sbb
add
cli
mov
bound
mov
add
cmp
jae
mov
insl
and
mov
xchg
scas
xchg
pop
fstps
cld
cmp
add
movsb
ljmp
inc
add
aad
in
add
imul
sub
sbb
mov
mov
ret
add
mov
clc
inc
sbb
add
clc
jl
aaa
sbb
out
push
cmpsb
dec
inc
xchg
or
stos
sub
sbb
jmp
adc
mov
add
ret
cmc
xchg
test
add
push
add
add
or
cld
dec
rolb
mov
cs
add
mov
xchg
insl
jb
mov
xchg
add
jmp
js
xchg
add
inc
add
cmp
add
lods
lret
mov
scas
mov
lahf
mov
add
sbb
scas
pusha
add
sarl
icebp
sarl
cmp
add
mov
fs
inc
test
xor
push
mov
mov
pop
mov
iret
ja
jno
cwtl
out
les
mov
jo
mov
pop
xchg
add
or
mov
add
fdiv
mov
add
ljmp
add
add
lcall
mov
mov
pop
jnp
or
xor
pop
or
add
add
fistpl
addr16
pop
push
jns
pop
ror
insl
lcall
xor
aad
add
addb
push
and
add
jle
dec
jg
scas
adc
or
add
xor
mov
mov
jb
mov
dec
jbe
sbb
inc
add
cmp
cltd
lods
mov
andl
mov
outsl
pop
ds
stos
push
or
es
jp
add
add
add
jnp
sarl
out
stos
leave
nop
add
dec
or
loope
sub
andl
mov
jmp
mov
pop
pop
pop
ss
pop
mul
or
std
jno
push
inc
jae
fmuls
cmpsl
lods
and
mov
int3
cmc
push
add
sbb
in
loopne
mov
and
mov
fwait
daa
addb
inc
xchg
pop
mov
enter
or
add
jp
dec
rolb
mov
xor
mov
push
iret
pop
mov
lcall
mov
mov
add
jns
les
lahf
mov
dec
ss
mov
or
jns
xor
jne
and
ret
pop
adc
mov
pop
pop
inc
out
mov
mov
xor
push
cli
push
adc
pop
mov
push
mov
pushf
loop
mov
cmp
and
jno
nop
add
cmp
pop
ret
xchg
push
outsl
mov
add
add
cmp
xor
aad
test
call
xchg
add
ja
push
inc
sub
push
iret
dec
std
or
sub
adc
adc
pusha
add
jno
jle
ret
pop
pop
and
mov
jmp
xchg
es
lcall
dec
xchg
add
rolb
mov
mov
in
sub
xchg
frstor
mov
xchg
push
pop
add
lcall
mov
mov
xor
mov
push
cmp
in
mov
imul
push
mov
jne
mov
and
add
mov
jne
add
into
imul
mov
inc
add
lock
xchg
es
mov
rolb
mov
rolb
adc
in
test
add
clc
hlt
push
or
fs
mov
repnz
jo
mov
jnp
pop
mov
aad
add
cld
xor
insb
imul
add
add
cli
mov
das
shll
mov
add
mov
mov
add
mov
loopne
mov
test
mov
icebp
inc
jmp
mov
movsl
daa
out
adc
add
iret
lahf
jae
jl
pop
jnp
or
dec
adc
mov
push
xchg
and
mov
frstor
mov
inc
cwtl
das
ds
push
add
mov
lds
lret
add
and
mov
cmpsb
in
inc
test
add
mov
int3
xchg
pushf
jae
adc
out
jbe
add
add
jge
xor
mov
imul
add
mov
mov
fmull
mov
addb
inc
inc
or
xor
jmp
ss
dec
cmp
cmp
add
sub
jg
sub
clc
jns
repnz
push
dec
mov
pop
frstor
push
fldt
sahf
pop
jle
mov
mov
mov
mov
adc
mov
xor
insb
add
inc
inc
push
sbb
cmp
rolb
mov
jmp
xchg
push
les
ret
inc
add
add
lods
sub
cmpsl
push
dec
sbb
add
or
je
lcall
repnz
pop
mov
mov
je
pushf
mov
jg
add
sub
arpl
add
test
inc
add
int3
inc
or
rolb
mov
cmp
je
int3
xchg
mov
adc
mov
scas
pop
cltd
adc
mov
pop
mov
add
mov
add
xchg
lods
xor
dec
or
add
rolb
jo
mov
jns
xchg
js
hlt
inc
dec
js
cltd
dec
scas
jne
fadds
sub
out
call
add
aam
data16
pop
sub
sub
add
addr16
mov
in
ja
sbb
sbb
cmp
pop
aam
sub
ljmp
push
jg
add
insl
addb
xchg
jl
js
adc
clc
xlat
xlat
jbe
pop
cs
sub
xchg
dec
insb
adc
mov
and
mov
lds
repz
add
mov
mov
cs
ljmp
arpl
or
bound
mov
jle
pop
stc
icebp
lods
jl
xor
jmp
popa
divb
mov
add
mov
add
lds
adc
mov
or
add
mov
addb
mov
push
mov
inc
mov
inc
ss
pop
inc
add
mov
popa
in
and
add
dec
pop
addr16
xor
mov
mov
push
add
aam
fbstp
fs
int3
lcall
xchg
mov
xor
mov
gs
sbb
add
mov
stos
push
sub
push
rolb
mov
test
addr16
add
jp
fidivs
clc
dec
and
cld
adc
adc
add
push
lret
add
add
icebp
mov
es
std
sbb
cmp
loopne
mov
mov
cli
mov
lds
adc
and
mov
test
mov
in
add
dec
ret
push
movsb
dec
aas
call
add
mov
bound
mov
adc
dec
dec
mov
fnstcw
sti
or
sub
lret
or
xchg
scas
sbb
nop
add
jmp
jge
and
mov
fildll
push
insl
inc
add
or
mov
add
jge
jg
add
mov
inc
xchg
fwait
jbe
repnz
sub
jno
push
bound
mov
or
adc
mov
cltd
inc
add
lret
ja
dec
cmpsl
ljmp
mov
fs
mov
scas
mov
inc
repnz
sbb
imul
mov
stos
sbb
jbe
in
add
cmpsl
popa
jns
push
xor
std
sbb
add
mov
inc
add
xchg
sub
add
fs
lcall
adc
mov
mov
fcompl
movsl
fistpl
addb
out
add
rolb
jne
push
pusha
add
mov
mov
mov
mov
mov
xchg
push
inc
jecxz
adc
frstpm(287
lock
mov
daa
rolb
into
insl
or
test
sti
push
add
add
add
mov
add
sub
add
add
insl
hlt
push
push
or
scas
dec
loope
add
mov
cs
add
jae
dec
mov
ds
lcall
loope
add
push
cmc
lods
stos
enter
hlt
jp
mov
mov
in
pop
fsub
add
mov
sub
nop
add
add
into
add
mov
mov
das
and
lock
push
xor
mov
mov
push
ss
xor
mov
mov
add
pop
test
aas
jl
dec
repnz
ds
sbb
xor
mov
das
jnp
repnz
dec
loopne
mov
sub
mov
loope
pop
outsl
aam
cmp
sub
sub
xor
cmovg
addb
in
mov
sub
pop
imul
sub
cmp
mov
sbb
icebp
popa
in
loopne
mov
push
popf
loope
insl
mov
insl
jb
mov
mov
sub
push
mov
out
out
lock
add
add
jle
xor
push
jl
shll
mov
out
arpl
test
pop
outsb
add
xchg
int
pop
rolb
mov
inc
add
mov
adc
or
and
mov
xchg
iret
and
pop
pop
btr
xor
test
mov
adc
and
movsb
cmpsb
lret
push
mov
add
addb
dec
push
icebp
icebp
out
out
sbb
in
mov
add
add
add
mov
xchg
or
jg
add
popf
xor
mov
xchg
pop
sbb
mov
mov
sub
icebp
adc
outsl
mov
dec
inc
lock
add
and
data16
mov
add
push
ret
movsl
mov
add
push
lahf
or
std
add
scas
mov
stc
loopne
mov
pop
clc
jae
sbb
add
mov
xchg
ljmp
stos
and
mov
add
sbb
dec
cmp
daa
jae
dec
mov
mov
insl
push
mov
add
fimull
push
jbe
call
popf
pop
push
add
mov
mov
adc
pop
add
lock
cmpsl
push
add
ret
mov
cmp
and
mov
test
or
xor
cs
jmp
test
loope
add
mov
roll
add
add
mov
add
push
add
call
xchg
mov
xchg
das
daa
add
push
or
adc
mov
add
out
rorl
rcll
xor
lret
les
xor
mov
push
mov
sub
add
mov
add
add
inc
add
in
nop
leave
jmp
fisubs
cli
in
mov
clc
repnz
nop
cld
jae
fiadds
xor
add
adc
fincstp
jmp
cld
jae
jae
popf
add
jge
ret
lret
pop
clc
repnz
nop
cld
jae
add
inc
data16
xchg
lcall
cld
jae
add
add
aaa
adc
nop
cld
jae
bound
cmpsb
in
add
add
mov
push
mov
xchg
ret
in
lods
aaa
ret
out
add
clc
repnz
nop
cld
jae
add
jae
add
nop
nop
cld
jae
lods
add
lods
add
mov
nop
leave
jmp
incb
lods
add
add
mov
add
inc
clc
repnz
nop
cld
jae
in
add
mov
add
add
leave
jmp
add
add
lods
and
imul
nop
nop
cld
jae
add
dec
aaa
adc
mov
nop
leave
jmp
icebp
xor
adc
aaa
and
sub
push
mov
nop
leave
jmp
mov
add
lret
clc
repnz
nop
cld
jae
add
add
rolb
mov
dec
mov
push
mov
nop
leave
jmp
add
pop
and
jno
add
clc
repnz
nop
cld
jae
subl
adc
mov
nop
leave
jmp
pusha
ret
sub
add
add
push
push
mov
xchg
ret
add
inc
jne
add
repnz
nop
cld
jae
aad
pop
add
je
in
scas
push
clc
repnz
nop
cld
jae
les
dec
add
jae
inc
mov
nop
cld
jae
les
imul
jae
inc
cmp
clc
push
mov
xchg
ret
add
add
add
push
mov
add
or
out
lods
add
mov
add
xor
fidivrl
rep
clc
repnz
nop
cld
jae
add
je
cld
lods
jle
xor
repnz
nop
cld
jae
add
add
mov
clc
repnz
nop
cld
jae
mov
lods
aaa
mov
add
js
add
clc
repnz
nop
cld
jae
add
and
push
mov
xchg
ret
data16
mov
xlat
and
xor
clc
repnz
nop
cld
jae
add
in
mov
clc
repnz
nop
cld
jae
jae
add
add
add
pop
clc
repnz
nop
cld
jae
fimuls
bound
aaa
addb
push
mov
push
mov
xchg
ret
add
add
add
pop
mov
clc
repnz
nop
cld
jae
fidivs
add
cmp
call
in
adcb
add
add
dec
xchg
add
lods
sti
mov
add
repnz
nop
cld
jae
fldl
dec
add
add
add
clc
repnz
nop
cld
jae
fidivrs
add
add
push
clc
repnz
nop
cld
jae
dec
icebp
popf
ficomps
push
mov
push
mov
xchg
ret
lods
and
add
add
jecxz
inc
add
faddl
lods
in
xor
add
ja
add
daa
add
clc
repnz
nop
cld
jae
imul
mov
push
mov
nop
leave
jmp
inc
add
add
repz
repnz
nop
cld
jae
cld
mov
mov
fwait
ret
mov
jecxz
inc
add
add
ret
loope
add
jne
add
push
mov
xchg
ret
fwait
add
add
popa
add
mov
xchg
ret
add
imul
add
sub
repnz
nop
cld
jae
add
data16
fwait
push
pushf
push
mov
pop
add
int3
add
repnz
sbb
mov
lods
mov
push
push
mov
xchg
ret
add
jae
adc
push
clc
repnz
nop
cld
jae
fsubl
add
xor
xor
clc
repnz
nop
cld
jae
bound
cli
adc
add
jge
add
add
add
fwait
dec
add
sbb
jne
clc
repnz
nop
cld
jae
cld
les
and
mov
in
nop
leave
jmp
jae
add
call
clc
repnz
nop
cld
jae
add
add
add
clc
repnz
nop
cld
jae
xor
mov
jne
je
repnz
nop
cld
jae
xor
lods
cmpsb
push
push
mov
xchg
ret
add
add
add
add
in
add
leave
push
mov
xchg
ret
add
add
icebp
faddl
add
lea
clc
repnz
nop
cld
jae
icebp
in
fwait
add
in
pop
push
mov
nop
leave
jmp
xor
add
cmpsb
pop
mov
clc
repnz
nop
cld
jae
cmp
mov
clc
repnz
nop
cld
jae
data16
add
and
repnz
nop
cld
jae
pop
aaa
aaa
add
cmpl
cld
jae
add
xor
mov
nop
leave
jmp
add
add
in
mov
repz
mov
nop
leave
jmp
add
add
add
jne
loope
movzwl
clc
repnz
nop
cld
jae
add
je
and
je
push
mov
nop
leave
jmp
icebp
cwtl
add
insb
push
push
mov
xchg
ret
fiadds
cmp
add
add
lods
pop
pop
push
mov
xchg
ret
bound
add
clc
mov
clc
repnz
nop
cld
jae
icebp
outsb
icebp
add
aam
movzwl
clc
repnz
nop
cld
jae
add
add
mov
push
push
mov
nop
leave
jmp
add
sub
add
repnz
nop
cld
jae
outsb
mov
cmp
rep
clc
repnz
nop
cld
jae
cmp
add
push
mov
nop
leave
jmp
incb
ret
mov
ficomps
mov
nop
leave
jmp
add
incb
bound
in
add
mov
nop
leave
jmp
add
bound
add
in
and
shl
clc
repnz
nop
cld
jae
cmpl
jmp
mov
bound
cmp
dec
add
mov
clc
repnz
nop
cld
jae
fldl
outsb
cmpsb
add
add
pop
and
push
mov
xchg
ret
cld
cmp
aad
add
repnz
nop
cld
jae
fwait
add
lods
jae
insl
xor
clc
repnz
nop
cld
jae
cld
jae
incb
add
add
repnz
nop
cld
jae
add
add
clc
test
push
mov
nop
leave
jmp
cmp
outsb
dec
mov
repnz
nop
cld
jae
add
add
cwtl
fmull
mov
nop
nop
cld
jae
add
cmp
leave
sub
repnz
nop
cld
jae
add
jge
fidivs
clc
repnz
nop
cld
jae
je
add
data16
and
push
mov
xchg
ret
add
mov
lret
push
mov
nop
leave
jmp
fucom
add
xchg
jge
rep
clc
repnz
nop
cld
jae
add
jae
stos
xor
push
mov
nop
leave
jmp
add
push
add
repnz
nop
cld
jae
jne
in
cli
bound
pop
push
mov
nop
leave
jmp
fdivp
dec
add
test
cmp
mov
xchg
ret
add
add
pusha
fmull
nop
nop
cld
jae
xor
imul
jae
pop
fldl
xchg
fldl
jmp
mov
nop
leave
jmp
mov
mov
add
add
cld
pop
push
mov
xchg
ret
aad
add
add
arpl
repnz
nop
cld
jae
add
add
push
clc
repnz
nop
cld
jae
fstl
mov
clc
repnz
nop
cld
jae
add
add
xchg
out
je
clc
repnz
nop
cld
jae
add
clc
push
mov
xchg
ret
jne
add
in
xor
push
mov
nop
leave
jmp
push
add
and
add
jge
sub
clc
repnz
nop
cld
jae
jge
sub
xchg
mov
clc
repnz
nop
cld
jae
add
add
ds
clc
repnz
nop
cld
jae
add
lods
add
adc
mov
push
mov
nop
leave
jmp
add
ret
mov
mov
mov
clc
repnz
nop
cld
jae
add
fiadds
clc
repnz
nop
cld
jae
cmpsb
bound
je
inc
add
add
clc
repnz
nop
cld
jae
add
jno
lea
push
mov
xchg
ret
add
jae
adc
clc
repnz
nop
cld
jae
jge
add
and
mov
add
add
repnz
nop
cld
jae
dec
inc
flds
icebp
clc
repnz
nop
cld
jae
xchg
add
test
add
negl
repnz
nop
cld
jae
cli
cli
dec
add
gs
ret
clc
repnz
nop
cld
jae
and
mov
add
in
inc
push
pop
jmp
add
dec
and
add
add
je
and
add
sub
push
mov
xchg
ret
in
add
aad
outsb
add
and
clc
repnz
nop
cld
jae
add
in
add
xor
repz
add
clc
repnz
nop
cld
jae
add
add
in
nop
leave
jmp
sub
in
faddl
mov
in
test
push
mov
nop
leave
jmp
cmp
add
mov
clc
repnz
nop
cld
jae
add
pusha
cmpsb
add
jle
add
incl
push
mov
nop
leave
jmp
jne
add
add
add
lock
mov
add
add
in
nop
leave
jmp
data16
dec
mov
clc
repnz
nop
cld
jae
dec
add
xor
add
repnz
nop
cld
jae
add
xor
mov
clc
repnz
nop
cld
jae
in
popf
aad
mov
add
jmp
repnz
nop
cld
jae
in
push
add
add
add
and
repnz
nop
cld
jae
add
data16
dec
cli
push
clc
repnz
nop
cld
jae
add
bound
jg
ret
clc
repnz
nop
cld
jae
cwtl
add
add
add
inc
add
mov
cmpw
push
mov
nop
leave
jmp
fwait
add
mov
pop
test
push
mov
xchg
ret
add
dec
frstor
fiadds
mov
mov
mov
xchg
ret
add
add
ljmp
add
cmp
ret
add
movswl
push
mov
nop
leave
jmp
add
add
add
mov
xchg
ret
outsb
cli
dec
and
sub
cld
movsb
adc
test
repnz
nop
cld
jae
add
add
add
add
clc
repnz
nop
cld
jae
push
and
in
mov
es
call
clc
repnz
nop
cld
jae
adc
call
clc
repnz
nop
cld
jae
add
add
push
mov
nop
leave
jmp
mov
add
test
mov
push
mov
nop
leave
jmp
add
add
add
rclb
in
nop
leave
jmp
add
incb
sbb
dec
cmp
mov
nop
leave
jmp
add
aaa
mov
pusha
clc
repnz
nop
cld
jae
dec
xor
add
ljmp
cld
jae
icebp
test
add
add
add
dec
inc
clc
repnz
nop
cld
jae
add
hlt
in
add
clc
repnz
nop
cld
jae
test
xchg
jae
fidivs
add
repnz
nop
cld
jae
jne
mov
lods
data16
add
push
mov
xchg
ret
data16
add
add
popa
push
mov
xchg
ret
add
add
pop
shr
clc
repnz
nop
cld
jae
add
dec
jne
add
mov
aaa
inc
repz
push
push
mov
nop
leave
jmp
add
bound
add
add
fsubrl
clc
repnz
nop
cld
jae
decb
add
add
mov
mov
mov
clc
repnz
nop
cld
jae
faddl
cmpsb
jnp
jmp
add
clc
repnz
nop
cld
jae
mov
mov
mov
add
mov
add
add
out
add
clc
repnz
nop
cld
jae
cmp
rorl
add
add
repnz
nop
cld
jae
cld
add
mov
jl
dec
imul
cld
jae
add
mov
mov
clc
repnz
nop
cld
jae
and
test
clc
repnz
nop
cld
jae
jne
adc
nop
nop
cld
jae
add
add
add
add
xor
add
clc
repnz
nop
cld
jae
and
negl
repnz
nop
cld
jae
fidivs
xchg
in
pop
add
push
mov
nop
leave
jmp
add
cmpl
nop
nop
cld
jae
add
add
mov
push
es
add
repnz
nop
cld
jae
jae
and
mov
nop
leave
jmp
mov
add
add
aad
add
add
nop
nop
cld
jae
sub
add
add
ret
push
mov
xchg
ret
jae
add
add
int3
push
push
mov
xchg
ret
add
push
add
bound
imul
cld
jae
add
jge
sub
clc
repnz
nop
cld
jae
add
mov
add
mov
add
add
push
mov
nop
leave
jmp
jae
je
jge
mov
push
mov
nop
leave
jmp
mov
xor
add
cmpl
jae
add
lods
test
icebp
inc
add
and
dec
add
aad
add
repnz
nop
cld
jae
cld
add
popf
subl
push
mov
xchg
ret
je
add
add
je
clc
repnz
nop
cld
jae
xor
add
mov
clc
repnz
nop
cld
jae
bound
cmp
and
inc
sub
in
nop
leave
jmp
add
ficoms
add
push
ljmp
add
lods
test
icebp
in
nop
add
push
mov
xchg
ret
add
add
add
add
push
mov
nop
leave
jmp
dec
adc
add
sbb
repnz
nop
cld
jae
add
add
add
mov
mov
xchg
ret
in
add
fiadds
add
nop
cld
jae
pop
add
aad
cwtl
faddl
or
repnz
nop
cld
jae
add
add
fimuls
mov
add
add
add
fwait
add
add
test
add
mov
clc
repnz
nop
cld
jae
mov
fidivrs
xchg
js
clc
repnz
nop
cld
jae
popf
add
jae
xchg
xchg
je
and
mov
add
repnz
and
clc
repnz
nop
cld
jae
add
add
fdivrl
test
in
add
repnz
nop
cld
jae
and
sbb
repnz
nop
cld
jae
and
add
sti
clc
repnz
nop
cld
jae
add
add
add
clc
repnz
nop
cld
jae
les
mov
jae
pop
xchg
sub
clc
repnz
nop
cld
jae
cli
and
loope
push
clc
repnz
nop
cld
jae
xor
jae
add
clc
repnz
nop
cld
jae
in
popf
fwait
cwtl
dec
fcoml
mov
lea
push
mov
nop
leave
jmp
fucom
add
andl
xor
add
clc
repnz
nop
cld
jae
cli
add
test
repnz
nop
cld
jae
aaa
cli
imul
repnz
nop
cld
jae
add
je
test
add
mov
nop
leave
jmp
add
mov
add
push
mov
xchg
ret
add
add
bound
mov
aad
add
clc
jmp
adc
add
add
mov
xlat
sarl
xor
clc
repnz
nop
cld
jae
bound
cmp
in
add
xchg
pop
xchg
clc
repnz
nop
cld
jae
add
add
data16
add
mov
cwtl
sbb
add
repnz
nop
cld
jae
jge
add
into
push
push
mov
nop
leave
jmp
add
in
add
xchg
add
popa
add
mov
xchg
ret
imul
add
in
loop
mov
fimuls
nop
nop
cld
jae
xchg
xor
xor
mov
ret
clc
repnz
nop
cld
jae
add
mov
adc
mov
add
inc
sbb
fsts
push
push
sbb
add
cmp
jne
les
add
ret
add
lods
data16
test
loope
jae
cli
add
add
push
clc
repnz
nop
cld
jae
ret
add
bound
repnz
nop
cld
jae
mov
jne
cli
inc
mov
clc
repnz
nop
cld
jae
cmp
add
pop
mov
push
mov
xchg
ret
add
add
in
ficomps
push
cli
dec
push
mov
nop
leave
jmp
pusha
fwait
addl
add
repnz
nop
cld
jae
add
add
push
add
push
mov
xchg
ret
test
add
add
pop
add
clc
repnz
nop
cld
jae
add
add
push
call
nop
cld
jae
add
cmpsb
add
add
push
in
xor
push
mov
xchg
ret
add
add
add
sbb
add
clc
repnz
nop
cld
jae
mov
ljmp
nop
cld
jae
add
lods
add
mov
nop
add
inc
add
add
mov
xchg
ret
and
fsub
repz
clc
repnz
nop
cld
jae
cwtl
cmpsb
mov
add
or
clc
repnz
nop
cld
jae
and
lods
clc
repnz
nop
cld
jae
add
add
mov
in
ja
add
std
add
dec
sub
loopne
arpl
xchg
xor
dec
cmp
repnz
nop
cld
jae
aad
add
jne
fcoml
repnz
nop
cld
jae
sub
add
dec
popf
add
sbb
mov
xchg
ret
add
add
adc
shll
cmpl
push
mov
xchg
ret
add
imul
fsubr
push
clc
repnz
nop
cld
jae
fwait
cmp
mov
dec
add
xchg
pop
add
add
add
and
ret
ret
bound
mov
mov
nop
leave
jmp
imul
aaa
add
or
clc
repnz
nop
cld
jae
add
push
add
clc
repnz
nop
cld
jae
add
lods
xor
out
clc
repnz
nop
cld
jae
add
add
add
or
clc
repnz
nop
cld
jae
add
fiadds
test
add
mov
iret
add
clc
repnz
nop
cld
jae
xchg
mov
add
data16
push
mov
xchg
ret
add
sub
and
xchg
lds
add
clc
repnz
nop
cld
jae
loope
mov
add
mov
xchg
ret
ret
push
dec
add
add
mov
clc
repnz
nop
cld
jae
add
jb
mov
add
xor
add
clc
repnz
nop
cld
jae
add
iret
mov
clc
repnz
nop
cld
jae
dec
cld
add
or
in
nop
leave
jmp
add
add
add
push
mov
nop
leave
jmp
je
add
jge
add
push
mov
push
add
jne
loop
adc
pavgw
add
mov
add
mov
clc
repnz
nop
cld
jae
pop
jne
add
and
push
mov
xchg
ret
in
icebp
popf
add
or
add
in
nop
leave
jmp
add
add
clc
repnz
nop
cld
jae
add
mov
aad
cld
bound
into
incl
add
les
add
add
dec
push
loop
mov
xchg
ret
add
cli
add
add
ret
add
add
repnz
nop
cld
jae
push
inc
cmp
add
scas
testl
push
mov
nop
leave
jmp
data16
dec
mov
popa
clc
repnz
nop
cld
jae
push
cli
pop
in
add
rolb
mov
leave
jmp
mov
jne
sub
dec
add
rolb
mov
mov
mov
nop
leave
jmp
dec
add
lret
imul
cld
jae
pop
bound
clc
repnz
nop
cld
jae
add
adc
xchg
add
pop
push
push
mov
xchg
ret
in
mov
jae
add
bound
clc
repnz
nop
cld
jae
pop
add
je
add
clc
repnz
nop
cld
jae
lods
add
add
inc
cmp
repnz
nop
cld
jae
test
sub
lea
push
mov
xchg
ret
add
pusha
jne
add
push
mov
xchg
ret
add
add
add
add
mov
xchg
ret
add
add
add
add
xchg
mov
clc
repnz
nop
cld
jae
add
in
and
mov
pusha
push
mov
xchg
ret
lods
mov
je
dec
addb
repz
repnz
nop
cld
jae
xchg
and
cwtl
add
mov
clc
repnz
nop
cld
jae
mov
pop
clc
repnz
nop
cld
jae
add
cmp
jae
pusha
add
clc
repnz
nop
cld
jae
pusha
jae
cwtl
pusha
cli
mov
push
mov
xchg
ret
ret
cmp
or
mov
nop
leave
jmp
cmp
data16
cmpl
in
nop
leave
jmp
and
dec
lods
in
add
mov
add
and
or
in
incb
lcall
mov
xchg
ret
xchg
add
fisttpl
nop
cld
jae
jae
fiadds
add
sbb
repnz
nop
cld
jae
add
in
add
data16
sub
repnz
nop
cld
jae
add
loope
imul
cld
jae
xor
dec
in
mov
repz
in
nop
leave
jmp
add
faddl
add
add
pop
push
push
mov
xchg
ret
add
add
xchg
add
add
nop
cld
jae
fwait
bound
add
aaa
add
add
ja
fs
repnz
nop
cld
jae
cwtl
fidivs
jns
movsl
clc
repnz
nop
cld
jae
xor
fidivrs
add
call
clc
repnz
nop
cld
jae
add
add
test
mov
xchg
ret
pop
add
and
add
mov
mov
nop
leave
jmp
loope
dec
dec
add
xchg
add
add
push
mov
xchg
ret
faddp
xchg
cmp
bound
je
js
mov
xchg
ret
add
push
pusha
add
sbb
popf
clc
repnz
nop
cld
jae
lods
xor
inc
loopne
mov
xchg
ret
add
cwtl
pusha
je
popf
mov
fildl
xchg
ret
add
fidivrs
data16
add
inc
push
mov
xchg
ret
add
add
dec
lds
repnz
nop
cld
jae
push
add
outsb
xor
sub
nop
nop
cld
jae
add
add
add
add
add
and
mov
js
mov
nop
leave
jmp
add
add
adc
mov
add
cmp
push
mov
nop
leave
jmp
fidivs
adc
scas
lds
add
repnz
nop
cld
jae
sub
and
jbe
push
mov
nop
leave
jmp
add
inc
cmp
adc
add
repnz
nop
cld
jae
xor
xchg
clc
repnz
nop
cld
jae
add
adc
mov
jmp
add
add
cmp
add
cwtl
pop
add
clc
repnz
nop
cld
jae
add
push
mov
nop
leave
jmp
cli
fldl
adc
pop
xor
push
mov
xchg
ret
addl
push
mov
xchg
ret
add
and
lods
add
test
push
add
clc
repnz
nop
cld
jae
loope
fsubl
les
repnz
nop
cld
jae
add
pop
add
call
clc
repnz
nop
cld
jae
and
cmpl
push
mov
nop
leave
jmp
pop
add
add
notb
movzwl
clc
repnz
nop
cld
jae
add
imul
add
clc
repnz
nop
cld
jae
xchg
add
add
xorl
clc
repnz
nop
cld
jae
aaa
popf
imul
nop
nop
cld
jae
in
cmpsb
aad
dec
add
jne
adc
xor
push
mov
xchg
ret
add
outsb
add
dec
cli
call
clc
repnz
nop
cld
jae
add
cwtl
pop
mov
jle
push
mov
xchg
ret
lods
je
cli
add
xchg
insl
pop
push
mov
xchg
ret
cmp
add
lods
in
mov
push
mov
nop
leave
jmp
addl
jne
push
clc
repnz
nop
cld
jae
add
add
xorl
repnz
nop
cld
jae
lods
pop
les
sub
shl
push
clc
repnz
nop
cld
jae
add
add
add
mov
adc
repnz
nop
cld
jae
fwait
add
add
dec
mov
clc
repnz
nop
cld
jae
aaa
pop
fidivs
cli
dec
push
mov
nop
leave
jmp
add
add
roll
scas
int
add
fisubs
add
jae
push
mov
xchg
ret
in
in
icebp
mov
push
add
cs
insb
clc
repnz
nop
cld
jae
cli
fwait
add
ss
jecxz
push
clc
repnz
nop
cld
jae
cli
add
cmpsb
push
push
mov
xchg
ret
add
and
fiadds
add
xlat
and
mov
mov
push
mov
xchg
ret
add
add
add
aad
cmp
repnz
nop
cld
jae
mov
add
clc
repnz
nop
cld
jae
add
add
xchg
dec
and
cmp
push
mov
xchg
ret
add
leave
dec
clc
repnz
nop
cld
jae
in
xor
cmpsb
add
cltd
mov
push
mov
nop
leave
jmp
add
pop
mov
push
mov
nop
leave
jmp
add
add
xor
xchg
jl
out
out
clc
clc
repnz
nop
cld
jae
add
loope
cmp
push
mov
nop
leave
jmp
xor
push
inc
mov
popa
add
repnz
nop
cld
jae
add
add
add
inc
std
incl
add
add
in
mov
mov
pop
mov
clc
repnz
nop
cld
jae
add
add
loope
data16
mov
clc
push
mov
xchg
ret
aaa
aad
mov
jae
aad
add
push
mov
xchg
ret
add
lods
aaa
bound
or
mov
nop
leave
jmp
popf
add
add
add
jmp
nop
nop
cld
jae
xor
add
clc
repnz
nop
cld
jae
ret
faddl
and
fiaddl
xchg
ret
add
add
lods
or
jo
fadd
cli
add
lods
add
inc
mov
mov
xchg
ret
dec
faddl
imul
jae
call
mov
xchg
ret
bound
add
cld
xchg
lods
imul
nop
leave
jmp
add
add
in
nop
leave
jmp
mov
jae
add
jge
dec
cmp
repnz
nop
cld
jae
add
lods
pusha
jae
outsl
add
push
mov
nop
leave
jmp
data16
cmpsb
jnp
rclb
in
nop
leave
jmp
add
and
add
clc
repnz
nop
cld
jae
and
add
cmp
mov
xchg
ret
jge
add
add
push
mov
nop
leave
jmp
add
mov
jne
pop
jne
clc
repnz
nop
cld
jae
add
adc
repnz
nop
cld
jae
add
inc
dec
and
add
in
nop
leave
jmp
add
add
cmp
add
add
cmpl
push
mov
nop
leave
jmp
orl
mov
push
mov
xchg
ret
bound
add
in
add
movsb
clc
repnz
nop
cld
jae
sub
icebp
add
push
add
repnz
nop
cld
jae
imul
mov
in
nop
leave
jmp
add
fdivr
add
add
filds
xchg
ret
jae
add
jne
popf
cmpsb
mov
test
or
add
repnz
nop
cld
jae
sub
test
fdivl
dec
xor
aad
dec
add
mov
jg
clc
repnz
nop
cld
jae
add
adc
add
clc
repnz
nop
cld
jae
add
addl
mov
xchg
ret
add
in
add
lea
push
mov
xchg
ret
dec
add
sbb
in
cmp
add
push
add
add
add
lcall
add
clc
repnz
nop
cld
jae
cmp
lods
addb
sbb
sar
nop
nop
cld
jae
in
icebp
add
mov
nop
cld
jae
add
add
add
cli
add
dec
jne
clc
repnz
nop
cld
jae
add
dec
push
push
mov
nop
leave
jmp
fwait
add
add
pop
xchg
add
clc
repnz
nop
cld
jae
add
dec
xor
jne
push
mov
nop
leave
jmp
add
add
int3
push
push
mov
xchg
ret
add
add
and
clc
repnz
nop
cld
jae
add
add
cld
cmp
aad
add
adc
cmp
inc
push
adc
clc
repnz
nop
cld
jae
inc
dec
add
test
call
in
nop
leave
jmp
cmp
mov
nop
nop
cld
jae
add
mov
add
andl
push
movzwl
clc
repnz
nop
cld
jae
cld
add
sbb
add
jmp
add
and
dec
add
add
jnp
call
in
nop
leave
jmp
lods
jae
add
pop
jae
repnz
nop
cld
jae
in
add
add
mov
xchg
ret
les
add
pushl
clc
repnz
nop
cld
jae
mov
xor
mov
push
mov
xchg
ret
add
in
shr
push
push
mov
xchg
ret
add
aad
inc
andl
adc
repnz
nop
cld
jae
bound
add
xchg
add
repnz
nop
cld
jae
jne
add
sub
repz
add
repnz
nop
cld
jae
fsubrp
in
push
je
clc
repnz
nop
cld
jae
outsb
jae
lock
xor
call
clc
repnz
nop
cld
jae
add
dec
add
or
clc
repnz
nop
cld
jae
sub
movsl
mov
nop
cld
jae
mov
imul
mov
test
out
call
in
nop
leave
jmp
add
add
mov
mov
add
add
das
xchg
add
repz
add
pop
mov
push
mov
xchg
ret
add
add
mov
jmp
add
add
add
add
les
bound
dec
pushaw
out
xor
clc
repnz
nop
cld
jae
add
xchg
in
and
add
mov
push
mov
nop
leave
jmp
add
add
sbb
clc
repnz
nop
cld
jae
add
add
mov
nop
leave
jmp
dec
add
in
add
add
inc
scas
pop
push
mov
xchg
ret
add
cmp
add
ret
mov
mov
mov
clc
repnz
nop
cld
jae
add
add
add
jle
push
mov
xchg
ret
add
xor
fdivl
addb
addb
test
mov
mov
add
push
mov
nop
leave
jmp
add
xor
push
clc
repnz
nop
cld
jae
add
add
and
push
mov
sub
add
pop
add
lcall
leave
jmp
in
icebp
add
bound
mov
add
push
mov
xchg
ret
jge
lods
add
add
das
lods
push
mov
xchg
ret
cmpsb
inc
and
xor
or
nop
nop
cld
jae
fwait
add
sub
in
in
inc
in
add
jl
pop
push
add
add
add
aas
incb
notl
in
nop
leave
jmp
fwait
add
xor
clc
repnz
nop
cld
jae
outsb
cld
in
jge
lods
fistl
repnz
nop
cld
jae
cld
test
add
pop
add
clc
repnz
nop
cld
jae
add
add
cmp
nop
leave
jmp
add
jne
pusha
imul
ds
clc
repnz
nop
cld
jae
add
push
push
mov
xchg
ret
in
bound
add
dec
add
push
mov
nop
leave
jmp
mov
in
and
popa
add
repnz
nop
cld
jae
add
data16
mov
mov
jle
sbb
add
and
add
add
clc
add
push
add
cmp
clc
repnz
nop
cld
jae
in
add
mov
jmp
add
fwait
add
add
add
add
ret
sar
nop
nop
cld
jae
add
outsb
add
add
pop
add
clc
repnz
nop
cld
jae
and
outsb
jae
mov
clc
repnz
nop
cld
jae
in
fiadds
xor
mov
adc
repnz
nop
cld
jae
add
imul
pop
fimull
nop
cld
jae
lods
add
add
add
xchg
pop
mov
push
mov
xchg
ret
add
add
add
add
imul
clc
repnz
nop
cld
jae
add
insb
les
clc
repnz
nop
cld
jae
aaa
add
adc
movzwl
clc
repnz
nop
cld
jae
add
pop
faddl
push
mov
xchg
ret
in
icebp
add
bound
dec
sub
out
inc
add
cld
frstor
add
mov
nop
cld
jae
jne
fdiv
add
add
rolb
mov
mov
nop
add
add
add
repnz
nop
cld
jae
xor
lods
add
push
mov
xchg
ret
add
pusha
orl
mov
xchg
ret
lods
add
add
pusha
aas
push
clc
repnz
nop
cld
jae
xor
add
add
pusha
push
mov
xchg
ret
xchg
lods
add
add
xor
cmp
repnz
nop
cld
jae
les
iret
jne
clc
repnz
nop
cld
jae
les
mov
nop
leave
jmp
cmp
jne
addl
mov
push
push
mov
xchg
ret
icebp
cld
add
add
jae
aam
ja
push
mov
nop
leave
jmp
fwait
dec
imul
nop
cld
jae
add
inc
in
add
add
add
nop
nop
cld
jae
and
add
push
sahf
popa
clc
repnz
nop
cld
jae
ret
imul
sti
add
add
in
nop
leave
jmp
add
push
mov
xchg
ret
pop
test
jne
add
mov
insb
mov
push
mov
xchg
ret
add
in
bound
xor
outsl
add
push
mov
nop
leave
jmp
ficomps
call
clc
repnz
nop
cld
jae
andl
nop
push
mov
xchg
ret
bound
imul
and
mov
clc
repnz
nop
cld
jae
and
repnz
nop
cld
jae
add
add
in
loope
jne
jge
jbe
push
mov
nop
leave
jmp
add
add
lods
clc
repnz
nop
cld
jae
xchg
mov
loop
clc
repnz
nop
cld
jae
in
add
dec
add
xor
push
mov
nop
leave
jmp
fnsave
andl
mov
mov
in
fiadds
add
int3
sub
add
push
das
pop
clc
repnz
nop
cld
jae
add
lods
add
add
xor
add
clc
repnz
nop
cld
jae
mov
mov
add
mov
jmp
add
add
mov
mov
add
incb
je
or
in
nop
leave
jmp
fmull
add
mov
nop
leave
jmp
imul
add
xor
mov
mov
add
clc
repnz
nop
cld
jae
inc
outsb
pusha
add
clc
repnz
nop
cld
jae
add
leave
jne
clc
repnz
nop
cld
jae
add
fstpl
mov
xchg
ret
add
add
jae
add
clc
add
clc
repnz
nop
cld
jae
and
fcompl
inc
call
inc
add
aad
fsubl
add
clc
repnz
nop
cld
jae
faddl
fs
push
push
mov
nop
leave
jmp
and
dec
mov
and
add
xor
add
clc
repnz
nop
cld
jae
aaa
cwtl
push
fs
mov
clc
repnz
nop
cld
jae
in
mov
je
add
aas
pusha
clc
repnz
nop
cld
jae
add
xor
add
add
add
clc
repnz
nop
cld
jae
add
jae
add
sbb
jne
clc
repnz
nop
cld
jae
outsb
add
add
add
nop
cld
jae
add
cmpsb
add
add
nop
nop
cld
jae
test
fldl
add
add
clc
repnz
nop
cld
jae
add
add
imul
nop
nop
cld
jae
popf
add
data16
add
xor
nop
nop
cld
jae
cwtl
add
add
add
cmpsb
js
dec
and
clc
repnz
nop
cld
jae
fsubl
inc
clc
repnz
nop
cld
jae
add
add
lods
push
mov
xchg
ret
and
pop
add
mov
mov
xchg
ret
add
pop
push
mov
nop
leave
jmp
mov
add
mov
add
add
repnz
nop
cld
jae
add
add
cmpsb
xchg
test
add
add
add
xchg
sub
in
incb
add
les
fisttps
nop
nop
cld
jae
add
xlat
fmuls
nop
nop
cld
jae
add
add
add
add
jmp
add
add
add
add
add
cmp
repnz
nop
cld
jae
add
add
repz
clc
repnz
nop
cld
jae
pop
cli
and
clc
repnz
nop
cld
jae
add
loope
lods
cmp
xchg
add
clc
repnz
nop
cld
jae
xor
add
add
add
add
add
mov
nop
leave
jmp
add
mov
imul
mov
add
nop
nop
cld
jae
add
add
std
xor
clc
repnz
nop
cld
jae
add
les
ret
add
clc
repnz
nop
cld
jae
cli
add
add
xor
mov
push
mov
nop
leave
jmp
cld
add
aad
add
int
pop
jae
repnz
nop
cld
jae
adcl
mov
nop
leave
jmp
jae
add
aaa
aaa
mov
jne
clc
repnz
nop
cld
jae
add
push
pop
add
clc
repnz
nop
cld
jae
add
add
popf
popf
add
je
push
mov
nop
leave
jmp
cli
addl
add
clc
repnz
nop
cld
jae
add
add
cwtl
ja
sub
nop
nop
cld
jae
add
cli
cmp
mov
stc
clc
repnz
nop
cld
jae
add
mov
xchg
ret
add
add
faddl
mov
loope
repnz
nop
cld
jae
and
add
in
and
push
mov
ds
mov
push
pop
add
mov
repnz
nop
cld
jae
dec
jae
cld
add
je
clc
repnz
nop
cld
jae
add
add
and
mov
mov
outsb
or
clc
repnz
nop
cld
jae
add
add
push
mov
xchg
ret
add
add
andl
push
mov
xchg
ret
add
add
add
outsl
shr
clc
repnz
nop
cld
jae
add
add
pusha
add
mov
xchg
ret
add
add
add
cmp
add
mov
add
push
mov
nop
leave
jmp
cmpsb
add
adc
mov
add
repnz
nop
cld
jae
jae
addl
add
jmp
cmc
inc
add
add
in
pusha
inc
lods
mov
clc
repnz
nop
cld
jae
add
in
mov
add
lcall
add
add
bound
loope
xor
clc
repnz
nop
cld
jae
add
push
lods
jecxz
enter
or
add
repnz
nop
cld
jae
mov
push
cmp
repnz
nop
cld
jae
je
cmpsb
add
dec
andl
mov
add
push
mov
xchg
ret
xchg
add
xchg
decb
nop
nop
cld
jae
add
outsb
add
mov
xor
mov
mov
push
mov
nop
leave
jmp
jae
add
pusha
add
mov
push
mov
xchg
ret
add
and
add
push
mov
nop
leave
jmp
add
popf
aaa
mov
add
xlat
clc
repnz
nop
cld
jae
add
ljmp
repnz
nop
cld
jae
bound
add
sub
mov
xchg
ret
add
add
and
je
clc
repnz
nop
cld
jae
add
cltd
sub
push
mov
nop
leave
jmp
mov
inc
add
jge
fs
nop
nop
cld
jae
add
pop
in
and
jge
mov
clc
repnz
nop
cld
jae
add
in
add
pop
rep
push
mov
xchg
ret
in
jae
in
add
cld
add
clc
repnz
nop
cld
jae
fiadds
add
fcompl
inc
clc
repnz
nop
cld
jae
xor
cld
mov
movsb
clc
repnz
nop
cld
jae
fsubl
add
cli
dec
dec
pop
clc
repnz
nop
cld
jae
les
and
inc
add
jb
mov
pop
clc
repnz
nop
cld
jae
add
lods
push
fwait
add
add
call
clc
repnz
nop
cld
jae
mov
push
push
mov
xchg
ret
add
fldl
cmp
jge
push
mov
nop
leave
jmp
add
fidivs
sbb
icebp
clc
repnz
nop
cld
jae
add
add
pop
fisttps
nop
nop
cld
jae
sub
inc
inc
aaa
pusha
add
nop
nop
cld
jae
add
and
icebp
add
sub
pop
cld
clc
repnz
nop
cld
jae
add
add
add
clc
repnz
nop
cld
jae
inc
outsb
add
add
add
mov
mov
push
mov
nop
leave
jmp
add
cmp
nop
cld
jae
add
in
add
test
repnz
nop
cld
jae
xchg
fwait
xor
ficomps
add
addl
inc
push
mov
xchg
ret
test
add
jae
add
add
clc
repnz
nop
cld
jae
add
in
add
push
mov
xchg
ret
add
dec
bound
pop
call
cmp
in
nop
leave
jmp
add
add
add
add
push
mov
nop
leave
jmp
jae
inc
pusha
xchg
fldl
jge
clc
repnz
nop
cld
jae
bound
rolb
int
dec
outsl
popa
fs
repnz
nop
cld
jae
cwtl
add
icebp
repnz
daa
add
mov
clc
repnz
nop
cld
jae
add
add
rolb
lret
add
repnz
nop
cld
jae
in
fucom
ret
mov
stos
inc
incb
jge
add
dec
jnp
cltd
mov
imul
divb
add
inc
jge
leave
lods
test
mov
xchg
sbb
stos
popf
jmp
repnz
in
sub
daa
pop
fidivs
push
add
mov
repz
addb
mov
mov
mov
push
xchg
mov
inc
add
scas
test
lea
mov
stc
repnz
lcall
mov
add
cmc
int
cmp
mov
pushf
pop
jns
mov
cmpsb
sub
mov
dec
mov
scas
inc
dec
orl
mov
stos
xor
addr16
xchg
sti
mov
add
mov
mov
popf
lock
and
mov
repz
inc
add
jae
jmp
add
adc
push
addb
loop
mov
or
mov
add
popa
jmp
aam
push
popa
fwait
les
pop
aaa
cmp
jbe
cmp
jp
sbb
mov
movsl
push
add
add
adc
mov
sbb
adc
aaa
or
sbb
aad
outsl
mov
xchg
xor
mov
pusha
add
pop
jns
mov
push
jo
mov
cli
mov
sbb
cmp
scas
aam
add
inc
mov
lds
imul
xchg
mov
add
test
add
and
cltd
mov
and
mov
fistl
inc
outsl
mov
jbe
add
add
add
add
ja
add
repz
aas
jbe
add
outsl
sbb
add
add
add
addb
lods
cwtl
iret
cmp
push
push
mov
pop
jbe
mov
int
push
pop
mov
mov
add
dec
sbbl
in
lcall
subl
xchg
aad
or
insl
in
cmpl
test
pop
dec
or
sub
fstps
jle
mov
cmpsl
movsb
cmc
pop
mov
out
cmp
xchg
jne
xor
adc
mov
or
and
mov
std
ret
jnp
mov
add
jno
sub
lods
jbe
out
lea
cmpsl
movsb
add
stos
and
mov
add
mov
bound
mov
mov
fisubrs
push
xchg
add
add
or
sub
xchg
add
mov
sahf
or
jmp
fldl
inc
sbb
lahf
mov
mov
cwtl
push
dec
dec
inc
jbe
or
lea
out
ja
repz
outsl
sbb
scas
rorl
imul
adc
or
fcmovbe
adc
mov
xor
dec
jns
mov
sub
mov
xchg
in
iret
push
and
xchg
add
push
das
lods
and
movsb
pop
adc
mov
fnstenv
jns
imul
mov
loop
mov
cwtl
mov
mov
mov
pop
addb
rolb
mov
std
scas
push
leave
mov
mov
paddusb
add
shll
mov
std
loop
mov
jmp
loope
sarl
pop
std
stos
cli
ja
push
les
out
push
addb
adc
rolb
mov
dec
ja
add
mov
fnsave
lret
nop
add
push
cwtl
jle
jno
dec
add
sub
push
fldenv
xor
add
mov
mov
xchg
push
add
sbb
mov
mov
popa
push
mov
in
addb
stc
jns
xchg
cmp
loopne
mov
jno
add
mov
add
cwtl
out
lahf
mov
insb
jae
sub
loopne
mov
lods
or
add
xor
mov
xchg
fistps
ljmp
add
out
mov
enter
add
je
test
or
sub
add
rolb
mov
cli
daa
in
jbe
mov
mov
subl
mov
movsb
adc
test
std
test
inc
xchg
lahf
fbld
mov
and
cmp
jmp
rol
cs
fnstenv
xchg
pop
sar
movsl
test
ja
ljmp
inc
add
mov
xlat
or
stc
cmpsl
addb
pop
xchg
fucomp
aam
add
dec
jo
mov
add
add
adc
mov
add
sbb
mov
dec
cmpsb
in
loopne
mov
repz
xchg
add
mov
add
insl
xchg
rolb
mov
repz
mov
jnp
xchg
add
adc
and
mov
mov
imul
inc
jb
mov
jg
lods
repz
das
or
cmc
pop
pop
mov
mov
rol
sbb
fidivl
mov
dec
sub
add
lahf
xchg
pop
in
rolb
mov
rolb
mov
push
in
test
sub
mov
dec
add
addr16
or
fidivrl
mov
add
mov
mov
movl
lcall
std
ret
and
mov
jmp
sahf
mov
inc
inc
fcoms
push
adc
cmp
add
jb
mov
cmp
add
pop
add
mov
loope
rolb
mov
xlat
pcmpgtw
cmc
pop
sub
out
in
jp
xchg
sbb
lcall
add
add
fcomps
mov
jl
mov
jbe
lret
dec
sbb
add
test
mov
mov
xchg
add
inc
add
mov
jge
xchg
lcall
xor
lret
jmp
mov
pop
and
mov
pop
sti
dec
push
mul
mov
lahf
and
cmpsl
out
jp
pop
jmp
nop
add
iret
xchg
mov
cmp
add
daa
out
cld
lahf
or
inc
pop
jbe
sbb
pop
and
movsb
lock
sbb
mov
mov
mov
outsl
push
add
cmp
add
inc
nop
add
sub
sarl
pop
jb
mov
or
in
mov
jns
adc
mov
pop
add
mov
into
dec
arpl
xor
add
add
sub
sbb
cmp
pop
mov
leave
cmp
push
addr16
ljmp
xchg
test
xchg
cmp
inc
pop
addb
mov
sbb
rolb
mov
add
sub
pop
xlat
fmulp
mov
mov
xchg
sahf
insb
add
add
or
mov
pop
leave
mov
test
add
or
stos
pushf
mov
xor
movsl
stc
test
cmpsb
xor
mov
loopne
mov
add
or
fsubrs
scas
into
rolb
mov
jle
pop
cmp
adc
mov
clc
jecxz
scas
mov
js
ljmp
ret
mov
mov
add
mov
add
sbb
inc
out
lret
bound
mov
mov
jbe
mov
pop
inc
xchg
ds
loop
mov
xor
rolb
cwtl
std
repnz
scas
test
in
lods
lret
sub
fisttps
addb
leave
and
out
ret
psubq
aam
fdivrl
mov
mov
pushf
mov
add
addb
fisttpl
std
jbe
sbb
add
into
insb
outsl
inc
and
mov
int
push
add
repz
cld
sbb
testl
ljmp
iret
jno
jbe
jp
das
dec
lea
mov
mov
add
testl
addb
mov
fnstcw
data16
sbb
out
insl
xor
mov
push
adc
mov
add
jne
pushf
cmpxchg
mov
add
stos
adc
mov
and
test
xor
pop
jo
mov
movsl
lods
adc
mov
gs
in
call
xor
mov
sbb
insl
in
rolb
lea
mov
mov
sub
add
inc
loopne
mov
mov
and
incl
add
ds
leave
mov
add
notb
add
xchg
clc
inc
jb
mov
popf
and
add
push
test
adc
mov
mov
push
and
mov
fists
ret
mov
addb
cmpsl
mov
add
inc
lods
jb
mov
int3
cmp
add
push
mov
pop
xlat
sbb
push
add
and
mov
and
mov
inc
add
inc
ja
add
mov
cmc
jle
orl
movsb
lods
xchg
add
xor
mov
fnstenv
pop
jl
push
or
cmp
add
and
mov
add
adc
mov
cmp
pop
inc
push
cwtl
xor
xchg
decl
outsb
rcll
adc
jbe
sbb
jnp
in
xor
jge
loope
push
mov
mov
stos
xchg
rcrl
adc
mov
sub
xchg
addb
ret
mov
mov
rolb
mov
mov
addr16
add
add
in
dec
add
scas
ljmp
fisttps
insl
movsl
lret
mov
bound
mov
jb
mov
mov
push
pop
test
or
push
iret
pushf
mov
lcall
xor
lret
addb
or
sub
pop
xchg
add
mov
daa
ret
cmpsl
test
add
mov
loopne
mov
cmpsl
sarl
pushl
cmp
cmp
ljmp
xlat
or
mov
data16
jnp
push
xchg
mov
mov
adc
mov
push
sbb
outsl
mov
in
icebp
filds
sub
xchg
pop
jns
jnp
inc
add
and
mov
dec
dec
or
inc
add
cmp
addb
out
lret
mov
jle
or
mov
mov
xchg
pop
cmp
and
decb
mov
mov
test
mov
jae
sbb
add
fstl
mov
cmp
ljmp
add
cmp
roll
add
sbb
mov
add
add
subl
add
add
test
add
add
push
add
adc
mov
sbb
mov
mov
mov
mov
add
dec
movsl
je
lds
roll
lea
cmp
shrl
pop
ss
add
cmpsb
and
mov
dec
adc
dec
stc
in
mov
ret
int3
negb
stos
xor
mov
aaa
xor
mov
mov
mov
cmp
mov
or
or
cli
add
rolb
mov
fmul
and
je
rolb
mov
leave
and
mov
aam
add
add
sub
add
add
out
sub
pop
lret
jmp
in
lret
mov
mov
ljmp
push
mov
jo
mov
add
pop
xchg
push
xor
jno
mov
scas
push
lods
adc
pushl
push
repnz
add
or
mov
add
and
mov
lahf
mov
add
das
mov
xor
mov
xlat
jmp
jno
add
add
fdivrl
into
pop
pop
stos
adc
mov
add
mov
jne
and
adc
mov
adc
add
add
sub
add
mov
mov
pop
dec
mov
enter
push
aam
fldl
or
add
mov
ficoml
sub
add
insl
dec
jne
daa
pop
das
and
mov
mov
mov
push
daa
jp
es
enter
out
push
lock
dec
mov
out
xchg
outsl
ficompl
xchg
sahf
pusha
add
mov
test
imul
mov
mov
adc
mov
test
add
and
mov
add
add
cmove
mov
add
mov
fisubrs
add
daa
mov
inc
jns
int
add
and
pop
pop
pusha
add
mov
fdiv
and
mov
scas
lret
jecxz
mov
out
jge
test
ja
and
test
inc
ljmp
mov
add
pushf
adc
imul
add
enter
insl
cmpsb
std
addb
cmp
sbb
clc
xor
add
nop
add
mov
add
mov
sub
adc
mov
dec
gs
jns
jns
sub
sahf
addb
rolb
push
aam
add
add
daa
pop
adc
scas
push
and
mov
rcll
add
fdivrp
cld
mov
pop
testl
dec
or
loop
mov
leave
xchg
dec
and
mov
lret
cld
xor
add
mov
xchg
mov
mov
sbb
jg
pop
fiaddl
mov
jb
mov
or
lret
mov
mov
sub
jns
arpl
adc
inc
add
pop
dec
mul
cwtl
cltd
sub
or
sub
popa
dec
and
add
push
xchg
rolb
mov
add
adc
mov
push
gs
insl
mov
lcall
in
lcall
aaa
cmp
rolb
mov
pop
in
mov
adc
jne
mov
push
scas
out
call
xchg
add
rolb
push
inc
int
and
xchg
push
sahf
pop
pop
mov
insl
sbb
icebp
lock
add
aas
pop
leave
mov
xor
mov
add
inc
add
add
pop
cmp
nop
add
mov
jl
sub
lods
pop
cs
repnz
lods
pusha
add
sbb
dec
mov
push
inc
ja
add
adc
mov
mov
mov
add
sub
test
add
popf
mov
stos
mov
jbe
in
lock
push
dec
pop
loopne
mov
mul
add
add
cmpsb
pop
xchg
mov
add
hlt
dec
gs
pop
into
popa
ja
les
mov
sahf
dec
push
fdivs
add
dec
ficomps
imul
xor
outsl
mov
pop
add
push
mov
dec
dec
ds
jg
xchg
add
jecxz
pop
fdivrl
mov
mov
adc
or
inc
notl
out
es
add
mov
mov
mov
fisubs
leave
imul
inc
sub
imul
sub
mov
insl
pop
dec
xchg
dec
outsl
mov
pop
or
mov
bound
mov
lea
jno
jo
mov
add
sub
add
mov
sub
lahf
sub
popa
icebp
in
xchg
ss
test
sub
add
add
add
frstor
cmp
xlat
xchg
cmp
inc
mov
and
push
out
xchg
lods
loopne
mov
jg
cmp
aas
adc
push
push
jg
mov
mov
mov
jecxz
shrl
sarl
xchg
mov
mov
cmpsl
sbb
mov
insl
push
push
gs
enter
insb
or
cmp
sub
push
mov
cmp
test
ss
mov
iret
mov
add
pop
pop
ljmp
outsl
sub
add
add
sbb
xchg
dec
cli
pop
sub
sbb
jae
lahf
movsl
mov
inc
jno
insb
xchg
jmp
pop
imul
out
ljmp
jns
inc
jge
adc
mov
jmp
add
mov
cwtl
push
push
sbbl
mov
mov
jo
mov
clc
aaa
imul
mov
add
shl
add
test
mov
mov
pop
inc
add
repz
js
aaa
mov
leave
in
mov
mov
mov
out
jmp
dec
gs
mov
and
cltd
movsb
cltd
inc
xor
pop
sub
add
sub
test
push
adc
mov
mov
mov
mov
inc
test
cmp
sbb
call
lock
mov
push
add
and
mov
nop
add
dec
rolb
mov
jns
fwait
jmp
jo
mov
idivl
cmp
sub
mov
outsl
cmp
mov
negl
push
adc
add
jns
add
iret
mov
add
mov
xor
pop
and
pop
stos
insb
int
xchg
gs
mov
enter
add
cmp
mov
sbb
sub
add
iret
adc
scas
mov
mov
and
mov
ja
nop
add
mov
rorl
lods
sub
and
mov
inc
inc
add
add
daa
addb
push
add
or
add
mov
mov
jp
cwtl
lock
ret
stos
jecxz
mov
mov
add
add
inc
pop
jp
por
dec
inc
movsl
or
mov
das
sbb
lret
mov
imul
fimull
jp
or
mov
out
inc
add
cmc
scas
mov
out
xor
sbb
mulb
mov
cld
sti
adc
pop
test
add
add
negl
jnp
and
cs
aad
stos
in
imul
je
in
inc
pop
xor
mov
xchg
add
outsl
and
mov
push
jb
mov
xor
inc
add
add
push
or
faddl
add
fwait
lods
or
xor
aad
mull
cld
test
inc
xor
mov
and
pushf
mov
mov
xlat
add
lea
add
mov
les
add
dec
mov
add
mov
sbb
sahf
mov
jne
sbb
add
inc
mov
mov
mov
lods
xchg
mov
add
push
in
xlat
sti
cmp
mov
mov
add
test
add
inc
pusha
add
mov
in
add
mov
rolb
mov
mov
stos
mov
mov
mov
or
pop
add
add
or
mov
mov
and
addb
js
add
inc
add
mov
mov
rolb
lds
dec
jb
mov
add
mov
mov
dec
in
sbb
or
outsb
andl
add
ficoml
outsl
push
adc
add
jge
xchg
mov
jb
mov
jge
add
lea
add
mov
inc
add
pop
mov
cmpsl
xchg
add
dec
in
addl
mov
or
aam
sub
lock
fwait
jns
add
jne
add
in
mov
stos
lock
mov
jns
lret
gs
mov
cs
sub
out
cs
icebp
enter
and
imul
mov
mov
divb
add
outsb
mov
sub
es
hlt
jo
mov
out
adcl
popf
add
push
pop
aaa
mov
add
cmp
fsubrp
fsubs
loop
mov
dec
dec
sbb
icebp
dec
aam
add
fbstp
into
add
mov
cwtl
and
jns
mov
sbb
adc
mov
xchg
fcompl
aaa
out
fidivl
enter
mov
cmp
cmp
xchg
add
insl
pop
out
in
mov
stos
jp
add
mov
xchg
mov
mov
mov
mov
daa
iret
fcomip
and
mov
testb
mov
addb
rolb
mov
jno
sbb
test
sbb
pop
cmp
push
sbb
add
mov
sub
mov
sub
pop
add
sbb
cltd
xor
aad
xchg
dec
lret
fidivl
pop
jns
fstps
push
add
lods
xchg
lret
and
mov
xor
mov
jge
cs
and
pop
fs
jmp
mov
xchg
jl
add
add
mov
iret
insl
daa
sub
cld
iret
rolb
ds
rcll
add
int3
clc
xor
hlt
push
xchg
jns
or
mov
loope
sub
xor
lds
mov
add
mov
mov
adc
mov
fcomps
pop
xor
xorl
xchg
add
mov
dec
fmuls
js
dec
idiv
mov
imul
aas
mov
xlat
shll
lret
mov
mov
add
jae
add
push
xchg
pop
ficompl
arpl
add
add
mov
cmp
cwtl
and
mov
test
mov
add
in
xchg
inc
add
outsl
sbb
sbb
clc
xchg
jns
mov
add
jmp
add
fiadds
test
andl
pop
aas
mov
in
push
add
mov
pop
movsl
fimuls
add
mov
xor
add
in
inc
add
mov
jp
inc
jl
cltd
adc
xchg
inc
psllq
lret
xor
pop
jecxz
repz
add
mov
in
int
repnz
mov
data16
add
cmp
dec
mov
pop
jae
aad
inc
aas
pop
cmpsl
out
js
cmc
sbb
push
jp
test
push
jmp
cmpsb
popf
cmpsb
inc
jae
or
dec
nop
add
mov
add
push
push
shll
imul
addb
sbb
decl
cmp
lock
add
add
faddl
xor
mov
ret
sub
xchg
add
dec
js
shll
das
sub
sbb
inc
mov
popa
scas
dec
xchg
add
push
add
xchg
in
mov
mov
and
add
dec
call
adc
mov
push
jl
addb
ret
add
push
dec
movsb
sbb
mov
enter
mov
add
cmpsl
dec
xor
mov
dec
icebp
and
in
mov
mov
popa
xor
enter
dec
cmc
xchg
push
add
add
out
jns
xor
mov
cmpsl
ret
sahf
cld
mov
mov
mov
popa
xor
add
sbb
jg
pusha
add
lcall
push
and
mov
pop
insl
xchg
jg
add
push
imul
ficompl
fwait
add
call
daa
cmp
push
add
jnp
insb
push
or
cmp
jmp
mov
mov
lods
addb
das
fsubr
mov
dec
sbb
cmc
or
cwtl
rolb
mov
add
mov
add
add
rorl
mov
test
xchg
push
loop
mov
rolb
mov
movsb
push
lret
adc
mov
and
add
jbe
pop
dec
imul
out
lock
lret
add
add
push
data16
add
mov
frstor
add
xchg
push
outsl
mov
xchg
add
fwait
aaa
jecxz
sti
xchg
out
xor
mov
mov
addb
gs
out
dec
or
jl
push
push
add
in
in
and
out
shrl
dec
jmp
add
sub
add
jge
mov
test
jo
mov
sub
pop
pop
add
mov
add
test
push
dec
mov
dec
call
add
xorl
jne,pt
movsl
mov
sub
inc
dec
xchg
xor
add
push
mov
mov
jae
sbb
mov
cmp
mov
mov
cmp
pop
push
mov
push
jo
mov
mov
add
js
sbb
add
mov
imul
pop
adc
in
lods
xlat
mov
adc
mov
mov
pop
push
add
sub
jge
inc
jmp
sbbl
pop
repz
or
mov
dec
lods
jmp
mov
inc
pushf
mov
outsb
mov
add
add
cmp
sbbl
add
rorl
mov
into
cli
test
lock
sbb
cmp
in
les
push
dec
mov
mov
je
test
push
addb
addb
xlat
inc
aad
js
hlt
andl
pop
les
mov
mov
sub
xchg
stos
fbstp
lea
in
fisttps
sub
push
xchg
mov
push
or
add
add
popa
adc
add
das
dec
pop
push
inc
push
pop
mov
xor
mov
ret
cwtl
push
lods
ficompl
pusha
add
xrelease
xor
mov
insl
lret
mov
push
inc
add
jg
push
aam
cmp
hlt
fs
pop
leave
je
lahf
out
jmp
mov
mulb
sub
add
add
add
add
inc
xor
add
mov
add
in
jbe
xchg
mov
mov
mov
js
ja
popf
rolb
mov
push
fldcw
roll
cwtl
add
jl
pop
sahf
lahf
xor
mov
dec
mov
push
loop
mov
mov
cmpsb
inc
xchg
pusha
add
mov
lds
aam
mov
iret
dec
xchg
mov
xchg
sub
add
jecxz
cmp
imul
or
add
int
sbb
mov
dec
jge
add
mov
mov
mov
imul
push
pop
inc
pusha
add
mov
int
pop
push
out
test
add
std
scas
or
jne
cmc
cmp
cmc
jp
adc
fwait
xor
mov
arpl
or
loopne
mov
mov
shll
lahf
ljmp
jle
fsubs
fwait
stc
int3
imul
mov
jnp
cmpsb
out
mov
inc
dec
jne
pop
push
and
mov
rolb
mov
add
lds
fsubp
loop
mov
mov
arpl
lahf
mov
mov
mov
add
insb
imulb
dec
ret
into
mov
sub
lahf
roll
dec
je
sti
push
push
bound
mov
loop
mov
push
dec
xor
out
add
aaa
mov
inc
add
push
aas
mov
add
addb
ss
mov
mov
add
add
mov
out
pop
sbb
sahf
ficoml
sbb
les
stc
add
cmc
repz
aam
adc
mov
jp
xchg
add
cld
mov
ret
lods
aam
mov
out
cmc
mov
push
add
mov
push
hlt
cmp
lret
jp
or
add
add
and
addb
xor
ss
fisubl
add
jns
jo
mov
xchg
popl
std
sti
mov
or
pop
popa
rolb
mov
fucomi
ds
add
add
cmpsb
in
sbb
sub
fwait
sahf
cmp
dec
out
push
add
mov
add
test
add
into
jb
mov
sub
add
popf
aaa
movsl
add
add
lea
fwait
divb
mov
jo
mov
pop
repz
jae
add
ret
stos
scas
imul
sub
movq
mov
add
add
outsl
inc
xor
mov
ror
mov
icebp
and
mov
add
jno
pop
inc
jg
call
mov
jb
mov
fsubr
inc
add
add
pop
xor
push
rolb
mov
inc
push
mov
ja
call
int3
fsubr
out
mov
mull
push
add
mov
mov
push
push
adc
mov
pop
hlt
lcall
push
xor
mov
std
xchg
inc
xchg
leave
clc
add
mov
mov
or
fstpl
addr16
outsl
icebp
sbb
pop
pop
pop
cltd
shll
das
pop
pop
scas
mov
sahf
lcall
mov
fsubr
bound
mov
jb
mov
push
sbb
add
add
cmpsb
sub
ret
jmp
push
add
mov
add
xor
or
fwait
jne
lods
jl
add
push
add
add
xchg
test
add
sar
dec
pop
inc
popf
das
mov
lcall
leave
or
mov
pop
inc
test
mov
in
mov
cld
or
cmp
rcr
xchg
jecxz
adc
lea
jo
mov
mov
add
pop
push
xchg
adc
mov
rcr
add
sbb
pusha
add
pop
pop
fwait
lods
xchg
adc
mov
sbb
add
add
push
sti
insb
lods
xchg
fstpl
mov
add
add
jecxz
shlw
and
mov
loopne
mov
add
popa
mov
fcmovbe
stc
push
push
mov
ja
cmp
add
add
push
or
pop
adc
mov
popa
test
sub
insb
je
cli
fwait
mov
negb
or
sub
movsl
hlt
push
fdivrl
pusha
add
add
add
sub
push
xchg
or
add
test
mov
add
sti
mov
mov
push
add
add
mov
xor
out
add
add
push
outsl
mov
jp
movl
fstps
dec
insb
or
or
add
sbb
jmp
or
add
mov
add
js
mov
call
mov
ret
mov
scas
xor
sub
mov
dec
pop
hlt
mov
test
movsl
jae
sbb
push
inc
add
negl
jno
insb
xchg
or
cmpsl
dec
cli
jg
jecxz
mov
call
mov
dec
xchg
push
dec
xchg
fstl
add
mov
call
add
dec
fildl
mov
dec
ret
pop
jmp
jno
push
sub
mov
mov
mov
xor
mov
jbe
add
mov
mov
jne
inc
pop
or
addb
mov
xlat
dec
cmpsl
push
lcall
addr16
leave
dec
lods
rolb
mov
std
sbb
punpcklbw
mov
jnp
incl
fisubrs
daa
pop
adc
sub
add
mov
and
shrl
in
mov
pushl
rolb
mov
lahf
sub
addr16
sub
mov
sub
cmp
ljmp
arpl
stos
push
add
pop
out
lahf
ret
jmp
cmp
roll
lock
mov
jmp
inc
cltd
outsl
adc
js
in
xlat
lds
inc
pop
lret
mov
add
fcomps
xchg
dec
push
add
fcoml
aam
lret
lret
jp
xor
mov
jb
mov
xchg
inc
mov
xchg
mov
cs
adc
mov
cmp
cmp
clc
leave
xor
mov
sti
iret
call
add
les
rolb
repnz
add
inc
add
add
add
xchg
add
jmp
add
cmpsb
jmp
mov
rcrl
es
in
cmp
pop
jg
stos
lds
mov
add
mov
fs
fwait
pop
mov
clc
xor
dec
js
adc
int3
inc
aad
fs
std
and
mov
popa
sbb
add
add
clc
loope
rcll
pop
mov
loop
mov
daa
xor
insl
sub
les
dec
inc
mov
out
cmc
lahf
mov
and
mov
push
dec
iret
jle
out
movsl
sub
mul
jge
cmp
lret
js
mov
cmp
add
insb
jp
je
and
add
out
pop
adcl
add
js
or
add
movups
mov
adc
add
inc
loopne
mov
mov
add
mov
xor
mov
stos
pushf
sub
cmp
xchg
fwait
cmpsb
jge
cmp
or
loope
daa
jmp
xchg
push
mov
cmpsb
out
dec
out
inc
adc
mov
jmp
mov
pop
inc
jb
mov
mov
cmp
add
lods
orl
in
shrl
loop
mov
jbe
cs
aas
dec
call
ficompl
repz
test
add
leave
fsubl
mov
push
call
lods
call
cwtl
aaa
sub
std
loop
mov
sbb
jp
add
mov
mov
jae
xor
add
mov
push
ljmp
inc
ret
dec
add
sub
add
xchg
add
pop
sbb
add
inc
outsl
imul
ficomps
rcll
add
xchg
inc
lods
cli
adc
inc
dec
lock
and
dec
or
inc
repnz
in
fs
test
pop
dec
insb
dec
lods
aas
jle
dec
insb
mov
enter
push
mov
or
cmp
rcr
pop
sub
mov
stos
fcomp
mov
pushf
and
jb
mov
add
push
inc
fcmovnb
mov
xchg
add
add
jae
add
push
push
adc
addr16
stos
lds
sbb
sbb
iret
pop
jne
add
cmpsb
decl
mov
test
add
fs
aad
mov
cmc
movsl
fiadds
add
jne
and
mov
mov
rolb
mov
les
roll
imul
bswap
cld
cmpsb
lret
jge
xchg
xchg
dec
arpl
sub
cmc
test
xchg
push
loop,pt
mov
add
repnz
xor
dec
fcompl
jo
mov
data16
out
ret
ret
inc
add
sub
test
sbb
cmp
mov
iret
repnz
mov
mov
daa
xor
ljmp
jno
arpl
pop
mov
push
add
mov
fdivrs
dec
out
push
add
or
pop
jnp
out
es
sub
dec
nop
add
dec
scas
add
pop
lahf
inc
add
test
add
sbb
out
xor
mov
out
xor
mov
push
mov
stos
dec
nopl
rolb
mov
loopne
mov
iret
and
or
mov
adc
and
enter
jl
push
add
mov
frstor
mov
stos
mov
add
outsb
nop
add
out
rolb
imul
mov
or
xchg
rolb
mov
addb
cltd
push
aad
incl
xlat
fdivr
adc
mov
adc
mov
and
mov
cmpsb
hlt
shufps
fucomp
sub
aas
pushf
add
mov
mov
out
outsl
imul
mov
push
pop
in
stos
cld
cltd
mov
push
add
gs
cmp
add
xchg
bound
mov
leave
rolb
mov
add
push
int3
std
mov
add
mov
enter
jecxz
sbb
jecxz
iret
ret
fimull
mov
mov
add
and
mov
mov
cmpsl
addb
and
mov
and
sub
test
call
mov
jo
mov
fstpt
lret
mov
mov
add
mov
push
add
sub
xchg
outsl
rolb
mov
lret
inc
jb
mov
hlt
in
jmp
or
push
addb
cs
in
lcall
add
add
pop
xor
nop
add
mov
xchg
mov
lahf
in
xor
in
cmp
xor
sbb
add
add
mov
std
pop
mov
add
push
cmc
testl
insb
out
lret
test
stc
int
jge
add
pop
cmp
mov
xlat
test
in
add
pop
pop
loop
mov
mov
ret
push
outsb
xchg
inc
sub
mov
mov
mov
pop
out
in
in
rolb
mov
imul
fdivs
and
mov
mov
add
dec
xchg
outsb
pop
add
lahf
push
lods
pop
xchg
add
sbb
add
add
or
into
es
add
push
into
out
dec
in
sti
int3
popf
adc
outsl
cmpsb
add
add
loope
mov
xchg
mov
add
sbb
adc
mov
pushf
xor
ja
sbb
call
adc
shll
cmpsb
mov
repz
and
mov
mov
cmp
xchg
jne
jnp
dec
lret
add
out
bound
mov
add
sahf
cmp
stos
inc
or
aad
and
mov
sub
test
sub
adc
add
inc
fimull
stc
shr
divl
inc
add
mov
inc
add
mov
mov
add
adc
mov
cld
xchg
cmp
js
push
push
mov
jbe
lret
jnp
xor
mov
cmp
pop
cmp
mov
scas
aam
adc
or
add
jnp,pt
sahf
and
mov
add
inc
leave
cmp
mov
fs
jnp
mov
add
mov
sub
push
stos
jmp
mov
rolb
mov
add
fists
and
mov
xor
jmp
mov
mov
xchg
mov
cmpsl
int3
iret
cmpl
mov
add
cmpsl
jl
out
ret
lods
std
push
lods
lock
lock
xor
mov
pop
push
mov
das
pop
stc
inc
add
mov
arpl
in
adc
cmp
push
pop
xchg
dec
jns
jge
xor
mov
sub
mov
lea
lret
add
pop
imul
outsb
xchg
addr16
sub
mov
sub
rolb
mov
cld
xchg
xor
mov
add
lahf
push
xor
mov
mov
cmpsb
outsl
inc
add
sti
in
dec
mov
mov
cmp
imul
test
add
mov
stc
cwtl
bound
mov
and
xchg
add
mov
cmp
sahf
into
xor
add
mov
sub
cmpsb
or
add
mov
add
out
pop
fwait
lea
push
lea
inc
xor
fldl
lods
cmpsl
int3
jb
mov
xlat
jnp
sub
shrl
inc
adc
out
sete
and
add
dec
mov
xchg
add
int
scas
hlt
cmc
nop
add
adc
mov
fnsave
pusha
add
cli
clc
test
add
and
add
xor
mov
in
push
pop
cmp
add
adc
mov
add
dec
or
dec
jbe
add
roll
cmpsb
hlt
rolb
push
rolb
mov
xchg
push
add
int3
jp
cmp
cld
out
jmp
stos
jae
enter
mov
xchg
lahf
xlat
xlat
mov
sbb
pop
dec
inc
pop
sub
jp
arpl
and
adc
mov
sub
fwait
sbb
lahf
nop
add
inc
add
push
cmp
std
fcomps
addr16
das
loopne
mov
jp
push
push
out
xchg
mov
add
inc
add
cmc
cmp
mov
in
mov
rolb
mov
add
setno
das
dec
push
fninit
mov
mov
add
aad
popf
jnp
cwtl
push
xor
mov
add
xchg
mov
imul
pop
lock
jp
std
adc
test
aad
jns
mov
pop
sub
addr16
aad
enter
mov
push
add
out
mov
mov
loope
in
fs
cld
mov
push
pop
push
imul
rolb
mov
pop
cltd
or
mov
adc
mov
sti
rol
mov
mov
mov
outsl
fisubrl
jp
add
stos
inc
sbb
fwait
xchg
cmpsb
sbb
mov
je
or
mov
cmp
add
xchg
pop
getsec
out
xchg
popf
push
cs
xchg
adc
mov
add
cmp
mov
add
mov
jmp
push
mov
mov
mov
add
mov
stc
jmp
add
fwait
mov
popf
dec
in
mov
scas
out
cli
fists
or
add
jecxz
ret
mov
sbb
push
fld
inc
mov
bound
mov
mov
mov
test
add
lret
lods
sbb
mov
add
mov
in
xor
mov
es
rolb
mov
xchg
stc
adc
mov
inc
mov
and
dec
movl
outsb
inc
repnz
test
lods
aad
pop
cmp
fidivrs
out
xchg
push
rolb
mov
push
adc
mov
les
mov
add
dec
loop
mov
mov
jne
pusha
add
fadds
fidivl
dec
sbb
add
push
dec
and
fldl
add
pop
jl
repz
data16
hlt
add
mov
push
add
xor
jnp
jg
jo
mov
add
mov
sub
addb
mov
add
aam
cmp
add
hlt
xor
mov
outsl
bound
mov
pushf
dec
jbe
out
fcmovu
outsl
mov
lcall
jge
cmp
cmp
mov
add
fdivr
aad
ficompl
and
cld
js
sti
ja,pt
add
hlt
pop
mov
add
add
jno
cltd
add
in
or
mov
ss
mov
and
mov
aas
fcmovnbe
add
add
pop
xor
pop
jbe
out
rolb
mov
dec
push
sbb
bound
mov
dec
inc
je
loop
mov
add
sub
xchg
jo
mov
cmp
mov
aad
sub
pop
add
xlat
fsubrl
add
data16
adc
xchg
sbb
sub
add
add
add
test
dec
incl
add
fisubs
xor
mov
adc
mov
pop
inc
mov
out
sub
xor
mov
mov
daa
jl
scas
and
outsb
scas
push
sbb
add
add
mov
dec
push
rolb
mov
add
cmp
jb
mov
cwtl
cmp
push
ja
stos
pop
mov
inc
or
jmp
fmuls
push
add
shrl
lret
or
les
add
addb
xor
add
rolb
stos
outsb
jecxz
sub
dec
push
inc
add
push
add
dec
mov
ljmp
add
mov
dec
cmpl
movsb
dec
ss
outsl
mov
push
add
in
addb
mov
out
pop
js
mov
jle
add
sahf
test
inc
scas
in
add
aam
popa
mov
mov
lahf
fisttpll
or
jg
add
sbb
push
dec
xchg
int3
pop
daa
movsb
cmp
xor
cwtl
jg,pt
add
mov
stos
popa
adc
add
jae
adc
sbb
mov
push
dec
mov
popa
mov
mov
adc
mov
adc
mov
out
pop
jbe
orl
and
mov
aam
sbb
xchg
jnp
stc
or
mov
mov
and
inc
add
mov
jp
adc
sbb
cmc
push
xchg
cmp
mov
xchg
mov
add
hlt
dec
sub
add
pop
repz
mov
push
pop
loop
mov
xchg
pusha
add
mov
dec
rolb
mov
inc
jge
rcll
add
and
and
or
add
and
and
mov
adc
mov
push
push
push
stos
es
mov
dec
cli
scas
pusha
add
adc
mov
in
xchg
addr16
aam
add
rolb
mov
add
mov
outsl
xchg
add
popa
mov
addb
jnp
add
roll
ret
jo
mov
pop
jae
jg
fcomi
bound
mov
imul
push
push
dec
sub
rolb
and
mov
push
adc
push
insl
into
fstpt
cmpsl
jbe
add
inc
add
cmp
xchg
enter
add
mov
mov
xchg
cmovns
ret
es
add
jmp
or
pop
mov
mov
add
jl
jg
add
cwtl
pop
sub
sbb
xlat
icebp
cld
sub
xchg
stc
and
mov
mov
sbb
repz
jecxz
add
popa
fsubs
add
add
jo
mov
pop
push
in
xchg
js
mov
in
movsb
sub
mov
int
add
add
pusha
add
ret
and
mov
mov
repnz
into
sub
incl
lds
pushf
and
mov
mov
xor
stos
mov
xchg
sbb
dec
push
and
add
pusha
add
into
mov
mov
ret
sub
or
add
daa
xor
mov
mov
fildl
fadd
add
and
mov
add
sbb
mov
add
add
lahf
lock
lahf
cld
mov
mov
pushf
in
pop
ljmp
and
add
mov
sbb
addb
hlt
fidivl
jb
mov
outsb
mov
test
and
mov
aad
cwtl
ss
cs
stos
andl
sti
xlat
scas
test
mov
sub
addb
orl
pusha
add
and
mov
xor
jns
pop
pushf
and
mov
ficoml
bound
mov
add
push
fdivrl
sub
imul
add
shl
sbb
gs
push
inc
test
and
mov
ret
lds
addb
pushf
dec
sub
mov
cmp
mov
add
or
cmp
aaa
dec
mov
mov
xor
mov
add
dec
xchg
add
cmp
mov
mov
test
mov
pop
adc
or
xor
mov
out
jne
test
dec
add
cmpsb
pop
icebp
addl
lods
rol
add
sti
outsb
cmc
mov
mov
add
xchg
xor
add
mov
mov
adc
pop
flds
add
pop
jno
jge
addb
int
xchg
dec
ja
imul
mov
insl
inc
stc
fldenv
jnp
bswap
mov
jp
clc
ror
mov
mov
mov
xor
movsb
test
xchg
ret
sub
jp
push
mov
adc
mov
add
in
mov
add
adc
mov
loop
mov
mov
clc
xor
mov
sbb
in
lret
add
in
jns
mov
mov
sub
ss
jnp
push
add
jmp
add
adc
pop
add
bound
mov
xchg
xchg
pop
fidivrs
adc
sbb
add
jp
cmpl
xchg
mov
mov
hlt
inc
jns
sub
adc
push
push
insl
add
mov
imul
sbb
aaa
sbb
out
push
mov
add
fwait
popf
xor
mov
mov
mov
add
add
push
dec
pop
push
cld
lahf
cltd
cmpsl
popa
lock
loope
sbbl
add
aam
adc
push
cmpsl
xor
add
lods
or
icebp
cli
dec
imul
jg
daa
popf
jb
mov
add
adc
mov
insb
and
mov
fwait
mov
ljmp
push
arpl
jmp
inc
add
out
fwait
cmp
mov
pop
mov
add
mov
xlat
sub
push
mov
nop
add
or
mov
lahf
adc
mov
mov
cld
sbb
xchg
or
sbb
sub
imul
inc
pop
fmuls
addr16
inc
outsb
iret
scas
jle
inc
add
mov
cltd
gs
add
mov
mov
sbb
scas
js
ret
stc
lea
mov
add
enter
add
jle
bound
mov
dec
hlt
mov
mov
jle
cmpsl
mov
das
stos
movsl
ljmp
add
sub
mov
add
mov
cltd
sub
sbb
sub
sub
inc
pop
push
add
aas
enter
sbb
ljmp
mov
add
movsb
sub
jno
popa
es
mulb
mov
mov
fisttps
stos
mov
mov
mov
add
adc
xor
mov
insb
add
jl
inc
jle
or
outsb
test
sub
or
mov
imul
pop
outsl
jg
and
mov
out
jmp
xor
mov
jb
mov
pop
insl
inc
mov
cmpxchg
mov
adc
mov
mov
aaa
arpl
add
jge
mov
dec
and
add
fs
sbb
add
mov
sub
out
lods
pop
in
pop
movsl
les
bound
mov
sub
inc
ret
dec
xor
mov
xor
mov
scas
stos
mov
push
aaa
rolb
mov
adc
inc
add
enter
mov
les
mov
jl
add
xor
inc
in
mov
pop
mov
add
adc
vpunpckldq
mov
inc
add
scas
jno
add
or
adc
mov
add
add
loope
add
add
pop
in
bound
mov
jle
add
gs
into
xchg
lret
dec
neg
cs
lock
jmp
add
rolb
sbb
bound
mov
fs
xor
add
push
add
ds
and
movsl
aad
inc
add
cmp
jl
jle
jmp
mov
ret
pop
mov
cmp
lcall
hlt
lret
mov
loopne
mov
stc
jl
adc
mov
mov
add
mov
cmp
test
push
icebp
xlat
loop
mov
in
push
repnz
add
and
xchg
lods
adc
loopne
mov
imul
cmp
jns
add
es
call
mov
pop
addb
shll
mov
sub
mov
jb
mov
mov
mov
xchg
mov
mov
add
or
aaa
jbe
mov
add
push
testb
push
cmp
add
leave
stos
adc
nop
add
lcall
mov
test
lcall
jns
push
mov
out
or
jg
mov
enter
add
inc
aas
test
or
mov
jnp
sbb
stc
stos
push
fld
mov
jns
cmpsb
xorl
pushf
push
push
add
pop
dec
dec
fnstsw
mov
add
test
jle
mov
mov
inc
push
xchg
add
sbb
add
sbb
sbb
rolb
cmc
sub
add
negl
popa
mov
mov
sub
add
lds
ja
cwtl
lea
xor
jnp
or
pop
fcoml
sub
fs
dec
ss
stc
dec
fcmovu
pop
repnz
add
add
ffreep
and
xor
cmp
add
aas
jge
pushf
dec
test
aas
xor
fwait
pop
sub
mov
add
xchg
or
mov
and
push
inc
cmpsb
jns
adc
or
das
imul
jbe
add
pop
sbb
inc
lock
mov
mov
cmp
add
sub
movsb
cwtl
pop
mov
jge
hlt
and
mov
xchg
clc
xchg
mov
lods
inc
clc
movsl
je
aad
add
add
addb
aas
loope
inc
lahf
jae
mov
in
pusha
add
add
xor
cwtl
aaa
dec
xchg
mov
mov
dec
mov
mov
add
loopne
mov
add
cmp
aas
popa
mov
add
scas
or
mov
mov
adc
add
aad
pop
lret
xor
cmc
sub
xor
out
mov
ljmp
nop
add
mov
mov
jo
mov
stc
cmp
inc
add
xchg
rolb
mov
add
mov
test
rorl
inc
mov
nop
add
outsb
adc
sbb
mov
sub
pop
out
int3
arpl
test
ja
pop
pop
sbb
dec
sub
dec
aas
inc
xlat
dec
or
aas
pop
inc
sbb
sbb
pop
and
mov
insl
jns
sbb
fs
addr16
fs
mov
mov
rolb
mov
push
mov
jno
pop
fmull
mov
add
es
cmp
mov
mov
mov
push
dec
pop
insb
push
add
add
add
add
adc
sbb
sub
sbb
add
xor
mov
mov
mov
insl
and
mov
xor
mov
addb
fisttpll
std
adc
je
add
add
mov
mov
add
add
or
pop
rcrl
dec
popl
mov
jg
add
daa
rolb
mov
sbbl
dec
inc
push
lods
das
push
popf
daa
add
int3
addr16
shl
outsb
jno
pop
sub
int
mov
lret
add
jmp
add
add
adc
movsl
insl
test
mov
mov
lds
and
addb
fildl
mov
add
rolb
mov
mov
mov
sti
test
xchg
inc
add
mov
mov
icebp
filds
arpl
lahf
xchg
sbb
das
xlat
xchg
test
cs
dec
popa
cmp
mov
mov
fildll
adc
xchg
rolb
mov
inc
add
add
pushf
xor
xchg
fisubrs
add
mov
sahf
pop
addb
insl
dec
cmp
mov
add
and
jg
loope
cltd
fimull
mov
add
mov
pop
sbb
cmpsl
rolb
mov
mov
gs
mov
mov
add
pop
jmp
jno
push
dec
xchg
ret
fs
add
xor
and
out
xchg
add
mov
iret
add
add
data16
aas
sbb
adc
loop
mov
mov
mov
add
dec
inc
add
add
mov
inc
add
test
movsl
push
ja
add
mov
cmpsb
xorl
data16
and
add
inc
add
push
jns
add
jb
mov
rolb
mov
popl
add
push
pop
push
out
and
js
add
adc
mov
out
jno
hlt
xchg
xchg
fs
cmp
mov
movsb
movsb
insl
cmp
into
mov
mov
jp
xchg
jae
cmpsl
inc
jae
andl
sti
mov
dec
lret
arpl
jns
xor
insl
pop
sub
addl
mov
pop
sub
add
pop
int
hlt
xlat
out
jl
add
sub
sbb
add
movsl
ds
mov
add
push
add
pop
add
jno
int
mov
add
mov
sbb
roll
mov
push
dec
adc
mov
add
pop
add
mov
popa
dec
jae
inc
aam
mov
mov
inc
cmp
mov
inc
or
sbb
cmp
lods
cmp
mov
addb
notl
aad
lods
popa
mov
scas
mov
jecxz
outsb
cli
ds
enter
mov
xorl
lea
lcall
mov
rorl
add
pop
lock
cli
negl
xor
mov
icebp
jne
int3
out
push
subl
add
push
pop
jmp
xor
cmc
and
adc
out
add
mov
decl
push
mov
je
icebp
std
int3
fldl
mov
pushf
cmp
add
add
nop
add
leave
lahf
sbb
add
rorl
jp
arpl
add
push
ss
jb
mov
inc
xchg
dec
addb
pop
push
cmp
adc
mov
mov
dec
cmpsb
ja
arpl
pop
adc
addb
dec
and
test
out
xchg
lcall
mov
add
mov
add
out
dec
arpl
add
mov
adc
mov
lret
movsl
movsl
xchg
push
fcmovu
in
bound
mov
fcoml
inc
andl
mov
les
add
mov
add
pusha
add
mov
cs
add
mov
fisubl
sahf
sub
or
add
xor
out
add
inc
insl
mov
add
dec
and
nop
add
fcompl
addr16
icebp
dec
xlat
loope
movsb
enter
mov
mov
cwtl
call
add
roll
dec
negb
outsb
inc
inc
lcall
je
and
sub
cmp
out
cmp
dec
cmp
test
mov
in
bound
mov
adc
mov
adc
mov
add
sub
mov
add
pop
adc
rolb
mov
add
int3
scas
xor
lock
jecxz
pop
lcall
mov
jg
leave
jle
nop
add
insl
push
mov
mov
mov
cmp
and
imul
cltd
xchg
lcall
jecxz
sub
mov
test
mov
dec
std
cmp
test
jne
add
pop
imul
stos
roll
add
xor
add
aaa
lahf
rolb
test
popf
xchg
mov
push
aam
jecxz
icebp
pop
cmpsb
incl
call
push
or
sub
stos
adc
mov
fisubs
add
dec
clc
loop
mov
outsb
out
bound
mov
cmc
xchg
pop
cmpsl
xchg
scas
rolb
add
pop
aaa
mov
mov
mov
sbb
ficoms
mov
iret
or
lcall
loope
add
mov
xlat
mul
cld
mov
pusha
add
or
scas
jae
mov
xchg
xor
add
enter
std
es
cmp
adc
mov
mov
cmp
lock
mov
mov
cmp
repnz
cmp
add
addb
imul
or
clc
popf
ss
or
test
sub
ret
adc
add
lahf
jmp
loopne
mov
pop
iret
js
imul
adc
movb
mov
cld
aaa
cmp
sub
jle
push
xor
add
jl
add
fwait
adc
rolb
ficomps
mov
outsb
sbb
loop
mov
xchg
cmp
mov
mov
jbe
test
inc
in
add
add
rolb
inc
add
sbb
cli
out
test
lea
lcall
inc
add
mov
jo
mov
pop
mov
mov
add
jnp
bound
mov
mov
pop
push
add
scas
dec
sbb
std
add
mov
add
data16
mov
xchg
ret
insb
sub
in
xchg
stc
aas
mov
insb
mov
xor
cwtl
cltd
mov
and
mov
aas
sub
xchg
fidivrl
in
cld
rolb
mov
cmp
out
mov
call
xor
sbb
xor
scas
inc
add
cmpsl
aaa
xlat
in
ficoms
pop
push
lcall
sti
mov
add
add
out
cmp
imul
adc
mov
xchg
fwait
out
fwait
mov
adc
add
add
mov
mull
inc
aam
addb
jge
fistl
add
jnp
add
addr16
push
dec
popa
cmpsb
adc
ljmp
cld
xor
cmp
xor
mov
mov
rolb
mov
add
add
xchg
test
enter
jne
add
inc
add
xchg
add
cmp
ret
push
or
pusha
add
fcomp
nop
add
or
and
mov
adc
test
adc
popa
cmc
test
test
ret
cli
sbb
es
dec
and
xchg
add
sub
mov
and
and
popa
jmp
jge
scas
fsubrs
pop
ljmp
mov
add
imul
out
sub
mov
and
mov
sbb
add
out
inc
inc
rolb
mov
idivb
mov
jecxz
mov
mov
xchg
mov
xchg
push
loope
sahf
scas
popa
lods
pop
cli
xor
mov
fldcw
aad
rolb
mov
loop
mov
add
mov
cmp
adc
mov
jmp
mov
mov
inc
or
ficoms
ret
jns
jecxz
lock
in
sub
sub
inc
add
lcall
adc
mov
scas
add
xchg
add
cmp
fwait
inc
loope
sbb
lea
in
ficoml
adc
lock
call
jnp
addl
xchg
sub
mov
mov
fucomi
cmc
inc
add
lcall
cmp
mov
pusha
add
adc
mov
out
out
sub
mov
mov
add
mov
in
add
add
js
inc
xchg
ds
cmpsl
jmp
mov
add
xor
mov
rolb
mov
ja
add
jb
mov
mov
mov
adc
sbb
xchg
aad
rcll
cli
clc
or
xchg
mov
jo
mov
ret
cld
add
mov
add
cmp
rorl
push
sbb
imul
mov
mov
add
lods
push
jbe
lds
sbb
sbb
rorl
dec
fldl
lret
mov
and
mov
add
add
add
je
and
or
adc
jo
mov
mov
mov
les
or
add
add
mov
nop
add
sbb
aad
adc
mov
push
xor
push
les
lcall
into
push
mov
sub
arpl
xchg
lcallw
xchg
dec
arpl
add
sub
fsts
mov
mov
push
add
mov
subl
filds
shrl
mov
or
imul
lock
adc
pop
roll
push
add
icebp
ja
mov
mov
lea
stos
sbbl
sub
jns
xor
adc
cmovbe
lret
repz
add
xlat
daa
scas
mov
outsl
jb
mov
fisubrs
movsb
sbb
add
add
mov
push
add
imul
iret
add
mov
or
add
adc
add
or
push
mov
mov
mov
mov
ja
out
out
lock
andl
daa
sahf
cmp
inc
add
mov
mov
add
rolb
mov
in
jo
mov
pop
pop
jmp
divb
addb
scas
xor
cmp
add
addb
jbe
mov
out
incl
iret
pop
mov
rolb
lea
out
cmpsb
cmp
add
mov
test
or
dec
bound
mov
add
push
ljmp
pop
pop
int
add
add
add
mov
mov
mov
push
out
push
add
push
dec
rolb
mov
es
mov
mov
rolb
mov
xor
loop
mov
call
xchg
daa
mov
add
mov
in
rolb
mov
popa
mov
and
dec
push
push
add
add
in
lods
jb
mov
add
add
sti
pop
jmp
add
mov
push
add
mov
mov
mov
mov
iret
add
add
jbe
adc
add
sub
xchg
add
ficoms
std
mov
inc
push
mov
aaa
jbe
xor
sahf
and
xor
mov
shll
xor
loop
mov
cmp
xor
mov
add
mov
faddl
inc
add
sbb
add
sub
or
les
aam
dec
iret
push
pusha
add
xchg
rolb
ds
add
lea
jge
hlt
test
add
adc
mov
dec
das
push
mov
sbb
sbb
pop
std
mov
call
xchg
mov
stos
aam
and
ljmp
nop
add
test
addr16
add
fisttpll
add
fstp
jmp
mov
call
aas
out
or
or
aam
jg
jmp
fisubrl
mov
add
jne
in
ss
sub
lods
cli
xor
cmp
jae
mov
rep
sti
cmp
pusha
add
xchg
aad
or
push
pop
xchg
mov
push
add
add
jnp
popf
lcall
sbb
adc
mov
xchg
out
xchg
mov
out
push
out
or
push
add
mov
push
xchg
add
add
ljmp
mov
jbe
pop
mov
enter
add
popa
sarl
xchg
lds
jecxz
add
sub
mov
mov
mov
add
mov
add
mov
push
jo
mov
div
out
jae
inc
add
ja
adc
mov
mov
add
loope
popa
jmp
insb
lahf
push
xchg
add
mov
push
test
xchg
jmp
in
add
outsb
jl
mov
sahf
ds
jae
or
es
mov
cmp
xlat
cmpl
mov
adc
mov
add
fcomp
mov
mov
mov
xor
insl
lcall
add
add
sar
aad
push
add
push
gs
loop
mov
fdivl
add
int
jmp
test
xor
add
mov
inc
add
repnz
pop
aad
lea
mov
jl
inc
or
popf
sub
dec
int3
xor
add
adc
dec
sub
push
insl
sbb
loope
sub
add
mov
mov
sbbl
fisubrs
mov
add
add
mov
or
add
rolb
mov
test
std
loopne
mov
addl
loopne,pt
mov
xchg
rolb
mov
mov
shl
xor
jno
insl
aas
mov
mov
fsubs
mov
aam
imul
sub
jecxz
dec
stos
mov
add
sti
daa
lods
repz
jb
mov
repz
xchg
add
add
pop
gs
mov
popf
jge
mov
mov
mov
xchg
xor
inc
add
out
pusha
add
mov
sbb
jae
fcomps
dec
adc
mov
add
out
xor
mov
pop
inc
cld
mov
mov
lea
mov
mov
mov
jl
add
jp
xor
sar
add
mov
popf
testb
mov
pusha
add
push
jmp
rol
dec
xor
jl
mov
rolb
mov
outsb
push
shll
mov
mov
aad
adc
xchg
into
insl
sub
dec
jle
es
in
xlat
test
enter
dec
xchg
jbe
xor
mov
mov
cltd
in
cmc
mov
add
push
loope
insl
mov
popf
xor
add
lahf
dec
faddl
pcmpeqb
push
mov
pop
fwait
or
enter
xor
add
mov
mov
add
mov
push
adc
and
addb
mov
add
xchg
mov
cmp
sub
aas
fcomps
mov
add
xchg
pop
and
mov
mov
cwtl
mov
ss
mov
push
call
add
mov
test
and
outsl
pop
in
aaa
insb
pop
decb
lret
mov
mov
add
mov
mov
shll
or
fsubr
jnp
out
inc
rorl
rolb
mov
fmuls
lcall
add
popa
pop
sbb
cmp
clc
xchg
add
mov
loopne
mov
and
fwait
movsl
push
adc
dec
je
sbb
neg
in
imul
and
mov
loope
add
mov
xor
mov
sbb
mov
pop
xor
adc
mov
add
mov
dec
jmp
in
movsl
int3
aad
mov
add
pop
shll
xor
clc
push
mov
jne
dec
push
enter
jp
add
sub
push
pop
cs
pop
dec
insb
cmc
insb
stos
cs
cltd
mov
xor
add
dec
jno
sbb
and
out
adc
mov
fs
mov
mov
pop
xor
inc
out
cmp
fcompl
lcall
icebp
movsl
inc
pop
js
jmp
mov
mov
in
add
movsl
popa
daa
test
mov
mov
push
icebp
xchg
mov
cmp
or
in
xchg
push
rolb
mov
aas
add
mov
in
sub
movsb
or
mov
add
mov
addb
mov
iret
lea
push
push
fists
ljmp
lods
add
mov
push
jg
add
inc
inc
imul
fmuls
and
mov
add
mov
jmp
dec
or
repz
add
data16
mov
mov
adc
mov
popf
clc
sub
sbb
pop
mov
mov
cmp
repz
fisubrs
xchg
stos
pop
ja
inc
aam
push
add
addb
and
mov
add
mov
mov
xor
jecxz
jmp
inc
fiadds
mov
jmp
xchg
jp
int3
and
mov
sub
cmp
add
mov
inc
add
and
mov
push
and
mov
loop
mov
xchg
jge
xor
das
out
pop
mov
push
add
test
jmp
call
insb
jo
mov
call
add
mov
mov
cmp
lret
aas
inc
add
out
mov
lods
add
mov
out
xor
test
add
repz
mov
inc
ret
inc
and
mov
jbe
aaa
pop
je
arpl
xor
mov
xchg
sub
add
mov
xchg
add
xor
jb
mov
add
js
xchg
pusha
add
mov
pop
or
pop
or
add
pop
movsb
jecxz
pushf
imul
punpcklwd
inc
dec
push
loop
mov
jp
scas
push
movsl
out
insb
cli
push
pushf
dec
test
add
dec
icebp
jo
mov
mov
jmp
scas
and
push
add
mov
inc
pop
fbstp
add
push
mov
mov
mov
aaa
sbb
int3
mov
or
xchg
add
mov
xlat
push
xchg
push
popf
leave
psubd
imul
rcll
mov
add
add
jg
jmp
push
loop
mov
lds
repz
and
add
pop
push
into
je
add
dec
xorl
mov
pop
mov
and
or
std
sub
sub
add
push
dec
add
mov
inc
push
pop
hlt
in
addb
test
inc
add
roll
push
fldcw
add
mov
mov
mov
sub
inc
jns
cs
push
push
sahf
pushf
push
nop
add
xchg
xchg
pop
mov
fdivrs
scas
push
add
andl
adc
xchg
pop
and
mov
addr16
mov
ret
rorl
and
iret
mov
pop
cltd
sahf
inc
xchg
add
add
mov
fld
pop
les
add
adc
mov
mov
push
addb
aam
add
add
popa
mov
mov
xchg
sbb
cli
nop
add
mov
into
es
test
in
pop
jns
pop
in
mov
cmpsb
sti
adc
xchg
out
bound
mov
add
add
sahf
jae
add
cmp
test
add
cmpsl
mov
or
lcall
mov
mov
daa
fstps
scas
sti
mov
mov
ja
add
and
mov
and
fucompp
jmp
nop
add
add
arpl
and
xor
sub
divb
mov
sbb
mov
daa
aas
stc
pop
xor
mov
push
les
push
jmp
push
cmp
xlat
loope
dec
pop
rep
pop
loope
gs
addr16
hlt
push
add
js
dec
jmp
jmp
add
jb
mov
mov
add
imul
out
dec
push
fcomps
add
or
add
mov
adc
mov
lea
xor
inc
add
push
add
rolb
cltd
shll
pusha
add
cmp
mov
int
cmp
mov
add
pop
fcmovbe
mov
lahf
lock
aad
mov
push
add
repz
jne
insb
xchg
cmpsb
sbb
jae
add
add
cmp
push
sub
mov
bound
mov
mov
add
add
loope
insb
outsb
and
rolb
mov
cs
sahf
fldt
add
jg
fbld
jnp
out
lea
out
jne
addb
test
call
mov
mov
and
mov
add
sbb
ljmp
jbe
sub
ja
push
or
rolb
or
pop
bound
mov
sar
hlt
push
sub
daa
ret
sbbl
clc
xor
mov
adc
loop
mov
ficoms
add
sarl
pop
out
into
cmp
add
negl
mov
add
rolb
mov
adc
int
mov
adc
mov
nop
add
xchg
xchg
add
cmpsb
insl
xor
mov
pusha
add
jmp
aad
mov
cltd
push
add
das
into
mov
add
mov
jge
sbb
xchg
add
inc
jle
or
xor
sbb
pop
mov
add
mov
aas
arpl
fistl
xchg
mov
sbb
mov
add
sub
loop
mov
add
mov
xor
xor
mov
and
test
add
stos
cmp
inc
aam
add
mov
jl
mov
mov
movswl
add
stc
push
add
std
xor
mov
mov
mov
cli
in
inc
add
movsl
insb
and
or
mov
jle
test
add
dec
sbb
rcll
add
push
je
out
jp
push
pushf
lcall
mov
or
xorl
mov
or
mov
shr
leave
lea
mov
lret
cli
xor
mov
mov
jnp
xchg
sub
aam
jmp
cmpl
mov
sti
sbb
add
mov
movsl
call
addb
sub
cli
lcall
inc
ljmp
inc
mov
mov
cmp
add
mov
cmpsb
ljmp
mov
inc
jl
add
mov
test
fdivs
das
push
out
fdivrs
test
cmp
jp
add
xor
inc
dec
call
mov
aas
jo
mov
add
fdivrs
mov
gs
fisubs
mov
add
aad
nop
add
pop
loope
add
js
xchg
addb
or
jne
sbb
or
stos
loopew
adc
mov
repz
add
xlat
push
add
mov
mov
lcall
sbb
popa
xor
mov
jno
mov
dec
popl
add
into
fdivrl
add
test
add
push
clc
jns
inc
scas
jecxz
pop
cmp
dec
mov
test
push
pop
inc
andl
cwtl
out
stos
adc
add
lret
rcll
repnz
xchg
js
aas
jne
mov
lret
rolb
mov
jl
add
cs
movsl
adc
pop
in
sbb
cmpsl
aam
push
dec
insl
dec
pop
ja
cld
mov
add
imul
fcmovne
xchg
pop
mov
mov
add
and
sbb
add
and
mov
add
inc
push
in
insl
lods
pop
aas
adc
mov
sub
add
adc
mov
notl
sbb
test
mov
or
add
sbb
mov
mov
cltd
lret
add
add
mov
mov
insb
sub
jmp
ret
in
faddp
sub
icebp
mov
popf
xchg
cli
pop
or
push
add
loope
push
jge
add
xchg
hlt
and
push
cs
sub
in
clc
outsl
jecxz
add
cld
or
fs
mov
xchg
cmp
js
pop
cs
push
xor
mov
sti
shll
and
mov
pushf
loop
mov
push
add
dec
pop
lock
mov
mov
cltd
mov
push
adc
mov
movsb
pop
cltd
dec
lahf
add
dec
jbe
int
rolb
mov
jecxz
fistl
mov
adc
mov
ret
xlat
push
push
call
add
insl
sbb
adc
jg
cmp
add
mov
mov
ljmp
scas
test
add
iret
es
lret
gs
adc
aam
add
mov
loopne
mov
add
mov
in
sbb
mov
inc
clc
jno
add
xchg
and
mov
xchg
mov
imul
gs
lock
test
cmpsb
ja
add
or
pop
or
jno
rcll
xor
mov
mov
leave
dec
xor
add
out
jbe
add
pop
pop
jmp
mov
add
mov
bound
mov
push
adc
imul
add
mov
sub
cli
inc
in
sbb
mov
ljmp
adc
mov
dec
adc
cmp
das
mov
and
mov
stc
sbb
shrl
leave
xor
mov
push
test
daa
mov
mov
iret
add
add
mov
and
jg
add
fwait
mov
mov
jp
add
nop
add
dec
push
sub
out
add
jbe
decl
add
push
xor
sub
les
fsubl
add
popf
cmp
push
add
mov
adc
mov
inc
add
stc
jo
mov
dec
cmp
jl
shl
add
mov
push
mov
mov
mov
pushl
fsts
pop
test
add
rolb
mov
cli
mov
xchg
xor
mov
add
xchg
xor
addb
xchg
add
add
ds
or
and
mov
adc
icebp
inc
add
subl
add
jl
jb
mov
mov
mov
mov
cmpsl
imul
fistpl
ljmp
mov
lods
inc
js
sub
mov
jmp
es
lret
inc
fildl
sub
cmp
add
lahf
sub
inc
sub
jb
mov
mov
mov
dec
mov
out
arpl
das
pop
mov
mov
std
cs
pushf
add
decl
pop
xlat
push
cmc
mov
outsl
cmp
inc
fists
jbe
jno
imul
imul
push
and
movsb
dec
push
iret
in
dec
cmpsb
daa
xchg
add
jne
pop
or
arpl
sahf
imul
enter
inc
jle
loop
mov
inc
adc
nop
add
add
lock
add
inc
call
add
movsl
cmp
pop
fsubs
sbb
movsb
test
add
and
sbb
xor
mov
or
repnz
ss
sub
lret
sbb
xchg
pop
pop
push
add
mov
outsb
xchg
cmpsb
jb
mov
add
jnp
xchg
bound
mov
add
mov
outsl
bound
mov
fdivs
fdivl
loop
mov
mov
leave
loope
adcl
fcmovbe
mov
mov
mov
xor
push
sbb
negl
cmpsb
mov
das
imul
je
icebp
add
dec
xchg
fucomi
push
or
xchg
add
sbb
mov
jno
inc
add
sarl
test
mov
push
add
mov
mov
mov
xchg
add
into
sbb
das
fldt
fisttps
push
inc
jge
rolb
mov
adc
outsb
jl
sbb
insl
and
mov
pop
dec
test
cwtl
fisttpl
into
ljmp
or
iret
out
es
jmp
mov
mov
mov
fisubl
mov
add
add
mov
add
mov
lods
ret
xchg
daa
mov
inc
add
icebp
mov
lods
out
bound
mov
add
aam
jl
add
mov
sbb
push
add
inc
out
outsb
fsubs
or
add
add
bound
mov
add
int3
mov
add
xchg
sbb
jo
mov
add
jge
mov
mov
addl
jne
lods
sub
and
mov
insb
sub
aam
xor
int
in
xchg
ja
mov
mov
mov
lock
lahf
cmp
add
inc
shrl
add
or
rolb
mov
add
mov
or
aad
adc
add
popf
sbb
push
ud2
sub
cmp
dec
ds
cmp
sti
in
in
in
xchg
rolb
mov
mov
sub
int3
aad
insl
mov
imul
push
or
push
cmp
mov
xchg
mov
stos
lock
dec
dec
popf
scas
xor
mov
cmp
jo
mov
jne
add
jno
cmc
roll
or
popf
jecxz
aad
scas
roll
mov
add
jnp
movsl
pushf
pop
into
mov
push
add
arpl
pop
cmc
mov
pop
or
mov
loop
mov
add
mov
or
inc
pop
das
imulb
loopne
mov
add
mov
mov
mov
sub
xchg
insb
lahf
push
pop
mov
insl
jg
call
sbb
pop
inc
add
cmp
push
rcll
mov
push
jne
mov
xor
aam
sub
mov
mov
add
mov
pop
add
and
lods
outsl
push
mov
movsl
loope
sbb
fmuls
and
jbe
rorl
xor
mov
mov
cmp
sub
adc
cmp
lcall
ljmp
inc
shrl
test
loope
dec
mov
movsl
orl
push
repnz
mov
lahf
sub
mov
mov
xchg
jg
add
testl
push
fsubr
mov
rolb
mov
mov
pusha
add
or
adc
jne
mov
scas
pop
mov
outsl
sub
test
mov
and
sbb
cmp
mov
scas
dec
sbb
shr
lahf
push
add
jle
outsl
jno
pop
cs
push
ffree
pusha
add
add
icebp
flds
cmpsb
xor
jl
jp
dec
mov
jnp
je
divb
imul
or
repz
ret
push
lahf
addb
std
test
lret
cmp
jbe
test
add
lahf
adc
mov
cwtl
fldenv
add
fisubs
mov
ds
pop
in
xchg
push
icebp
push
in
dec
adc
stos
pop
cmp
popa
cltd
outsl
push
push
inc
mov
adc
inc
cwtl
inc
jns
aas
push
jbe
mov
fcom
mov
mov
mov
push
add
jo
mov
mov
add
int
inc
pop
mov
call
mov
push
popf
push
mov
add
cld
sub
dec
lods
aas
mov
pop
int3
pop
mov
add
add
pop
stos
iret
fldl2t
ds
mov
rcll
imul
fisttpl
pop
push
ljmp
push
sbb
daa
int
push
pop
js
xchg
sbb
sub
pop
popf
lahf
xor
add
add
mov
std
aam
pop
sub
push
add
std
lcall
push
cli
push
in
jnp
pop
jg
std
fdivl
mulb
add
lea
popa
xor
mov
inc
add
push
and
dec
stc
sbb
fnstenv
mov
mov
inc
add
sbb
mov
pop
mov
inc
push
xchg
add
out
hlt
repnz
mov
jp
add
mov
lret
sub
cld
mov
int
sub
push
daa
mov
loope
in
inc
mov
repnz
add
nop
add
mov
punpcklbw
mov
adc
movsl
loop
mov
or
mov
inc
add
cmp
idivl
mov
stos
or
add
popf
mov
cmp
and
mov
add
mov
add
add
mov
push
je
cltd
bound
mov
add
dec
in
dec
pop
inc
adc
addl
add
ss
ret
clc
addr16
pop
mov
rolb
jne
test
cmpsl
in
add
add
xor
mov
mov
and
mov
movsl
stc
xor
mov
fnstsw
cmc
ret
ds
mov
mov
adc
and
addr16
in
in
fwait
sti
dec
sbb
and
mov
add
mov
lret
sbb
pop
mov
icebp
test
inc
jmp
mov
test
lret
adc
rolb
mov
dec
sub
pushf
sub
fiaddl
orl
add
lods
lds
push
hlt
push
push
das
xor
mov
mov
sub
fmul
es
addb
jno
stc
in
and
mov
sbb
jo
mov
add
fsubrl
or
scas
arpl
ss
addb
lea
mov
add
mov
add
mov
cmp
adc
daa
sub
stos
call
mov
add
sbb
or
add
mov
lods
es
pop
cmpsl
lret
enter
dec
clc
into
in
je
and
mov
or
lods
movsl
pop
xchg
shrl
lds
jp
add
xchg
add
sub
stos
inc
fwait
sarl
jb
mov
add
add
mov
sbb
pushf
cwtl
mov
sbb
add
mov
movsl
test
xchg
mov
mov
test
add
addb
sub
mov
add
add
inc
jl
dec
addl
rorl
and
add
movb
pushf
sub
clc
popa
loop
mov
dec
mov
mov
mov
mov
loop
mov
add
push
add
mov
push
add
mov
dec
xor
in
int
xchg
outsl
outsl
sbb
rolb
mov
add
iret
fsts
mull
mov
xlat
call
mov
mov
mov
arpl
loop
mov
mov
xor
mov
add
add
xchg
out
sub
mov
add
sti
ret
scas
jg
xor
addb
jne
in
pop
insl
sbb
xchg
in
mov
jbe
addb
bound
mov
cmpsl
lods
mov
add
jp
lret
mov
rorl
imul
inc
cmp
out
cmp
mov
pop
pushl
xchg
sti
divb
add
add
mov
jmp
add
add
rolb
mov
sub
lods
fcoml
cwtl
adc
sub
add
adc
mov
push
popa
jle
test
rolb
mov
rolb
mov
add
mov
mov
insb
data16
ss
add
mov
add
push
in
mov
loope
add
mov
add
add
insl
into
js
cmp
add
inc
sub
and
movsb
dec
aam
mov
add
jecxz
nop
add
shrl
sub
mov
mov
mov
rolb
and
in
xorl
jl
lahf
lock
push
push
adc
daa
mov
and
mov
add
mov
dec
mov
mov
rdmsr
add
ss
mov
xchg
pop
lds
test
add
mov
mov
stc
dec
xor
mov
pop
lcall
mov
fnstsw
inc
lock
mov
add
sub
xlat
pop
popa
push
insl
xchg
shll
push
dec
cmp
lea
shl
add
adc
mov
std
xchg
cmpsl
stos
std
pop
inc
cwtl
mov
or
push
xor
negl
jno
add
in
mov
mov
out
mov
mov
add
add
mov
cmp
add
mov
ja
fcmovnbe
sldt
mov
sbb
mov
add
pop
mov
add
add
sub
js
or
daa
xlat
lods
es
sub
dec
pop
mov
test
push
add
mov
mov
dec
es
dec
clc
add
mov
sbb
adc
mov
and
mov
in
data16
mov
push
sub
int3
sub
cmp
push
add
int3
in
add
pop
xor
push
add
xor
outsl
in
iret
inc
std
xor
mov
mov
add
mov
mov
add
add
insl
inc
xchg
sbb
xchg
add
cmp
add
push
in
pop
pop
push
or
cld
xchg
add
mov
add
out
mov
pusha
add
test
push
push
stos
xchg
mov
fsubrl
add
pop
sub
jmp
addl
add
aas
test
or
sub
aas
fdivr
cmp
xchg
mov
add
adc
mov
mov
sbb
inc
add
stos
cs
js
sti
push
add
fcomps
ljmp
mov
stc
mov
cwtl
and
pusha
add
mov
jo
mov
mov
xor
mov
mov
mov
mov
cmpsl
scas
mov
adc
mov
mov
add
pop
xor
nop
add
and
mov
movsl
xchg
and
mov
test
scas
and
add
jmp
inc
add
jo
mov
mov
mov
xchg
insl
pop
lret
add
mov
add
xor
sub
pop
xchg
inc
add
ljmp
mov
pop
in
inc
test
add
push
cmp
fst
stos
jnp
jg
jg
push
call
faddl
sarl
mov
je
leave
int3
stos
repz
das
andl
add
dec
mov
add
pop
push
sub
add
mov
mov
mov
pop
repnz
dec
add
pop
incl
jmp
mov
add
push
jge
inc
les
dec
les
and
sbb
push
sbb
fs
lods
xchg
and
mov
push
push
add
inc
inc
xor
push
daa
enter
fcmovnbe
add
adc
xchg
jne
nop
add
sahf
ljmp
hlt
inc
add
jle
xor
add
fidivrs
movsl
ljmp
sub
add
popaw
jno
dec
mov
add
leave
jl
shr
or
addl
add
mov
jno
jge
add
aad
mov
mov
mov
sbb
cmpsb
mov
xor
mov
add
add
mov
xlat
jle
js
movsl
sbb
xor
mov
xchg
stc
ficompl
inc
mov
mov
xchg
add
rolb
mov
inc
xchg
sub
add
ss
cs
sbb
xchg
inc
add
insl
sub
add
jno
in
pusha
add
pop
inc
pop
mov
repnz
mov
or
stos
add
push
pop
pop
rolb
mov
pop
jne
mov
int
or
icebp
sub
aam
jp
roll
cli
cmp
adc
mov
idiv
inc
cmc
jne
scas
loopne
mov
cwtl
cmp
out
mov
mov
dec
mov
and
mov
rolb
int
add
out
adc
mov
push
cmp
mov
fs
mov
mov
lret
cmp
mov
jp
mov
dec
pop
addr16
add
or
cmpsb
push
push
insl
and
mov
mov
add
or
in
and
add
in
sbb
lds
add
mov
int
and
add
add
cmpsl
push
add
add
dec
in
jl
lock
imul
adc
add
adc
mov
mov
mov
rolb
mov
add
out
lahf
mov
add
or
push
scas
mov
add
rolb
mov
add
add
mov
lock
inc
add
mov
inc
aaa
imul
cmp
add
mov
iret
aam
add
sub
out
add
ja
int
push
jle
in
fs
fcmove
sub
adc
bound
mov
aam
cltd
pop
sub
pop
test
add
mov
into
push
pop
xor
mov
dec
mov
xor
enter
callw
pop
call
add
push
add
out
mov
mov
cmp
add
push
pusha
add
xchg
data16
mov
inc
shrl
sbb
mov
mov
lds
int
loopne
mov
mov
mov
or
adc
xchg
sub
or
mov
xlat
mov
jmp
les
mov
fldl
lods
ds
popf
lods
daa
cli
mov
xchg
mov
push
hlt
inc
add
pop
inc
lret
mov
ds
adc
pop
jle
mov
sub
add
mov
sub
mov
and
mov
push
add
inc
add
mov
push
xlat
pop
mov
dec
inc
aad
xor
mov
out
add
add
mov
add
ja
add
mov
sub
xchg
or
shrl
scas
mov
aam
stos
and
lahf
xlat
pop
mov
pop
cmp
mov
xlat
lahf
inc
add
add
in
mov
subl
insl
imul
jb
mov
mov
in
pusha
add
mov
ja
ret
cmp
mov
add
xchg
ds
fidivrl
jno
jne
jp
add
call
gs
lahf
loop
mov
mov
jnp
sub
cld
inc
daa
in
js
rolb
mov
mov
stos
scas
mov
shl
mov
xchg
out
xchg
mov
jb
mov
mov
lahf
scas
cmp
push
dec
adc
mov
add
add
mov
add
push
leave
dec
mov
inc
in
or
xchg
adc
xchg
loopne
mov
dec
or
lret
push
inc
ja
das
mov
jnp
add
mov
ss
mov
mov
addb
mov
and
jnp
push
xlat
mov
or
mov
mov
mov
jmp
pop
mov
cmpsb
out
sub
pop
push
sbb
push
add
add
add
int
mov
mov
mov
fildl
dec
bound
mov
mov
test
fdivs
das
fwait
jnp
mov
push
push
outsb
inc
add
jb
mov
adc
lds
pop
jno
xchg
pushf
mov
ja
mov
mov
mov
xchg
add
mov
mov
addb
cld
movsb
ja
addb
leave
test
cli
lahf
stc
xor
daa
lods
push
enter
test
add
add
js
mov
add
in
test
mov
add
xor
pop
sahf
push
mov
xor
mov
add
out
push
or
rcr
add
sub
add
sub
cld
out
mov
add
fmuls
adc
dec
inc
subl
adc
mov
fistpl
scas
mov
mov
mov
xor
or
mov
add
fwait
pop
call
mov
fnstsw
lcall
rolb
enter
xchg
out
add
mov
add
mov
xchg
shll
dec
adc
mov
push
in
mov
add
jbe
pop
jb
mov
les
add
add
and
loopne
mov
jb
mov
jecxz
mov
xchg
cmpl
push
les
orl
fimuls
jg
js
mull
push
rolb
mov
mov
mov
dec
add
xor
mov
std
fisubrl
inc
imul
add
add
push
mov
ljmp
or
add
or
out
add
mov
add
jg
add
inc
shll
jecxz
fistps
add
addb
syscall
shrl
sub
add
mov
outsb
lea
das
dec
and
xor
jbe
adc
mov
int3
xlat
cmp
imulb
jno
in
sub
or
mov
add
scas
sbb
add
mov
mov
imul
inc
xchg
cli
push
in
aas
mov
or
add
sti
cmp
jmp
mov
add
rcl
add
stc
hlt
mov
add
mov
icebp
cwtl
movsb
rolb
mov
popa
adc
mov
mov
and
lret
idivb
sbb
mov
inc
xchg
xchg
test
pop
pushf
popf
test
sahf
push
add
ja
leave
mov
loop
mov
add
out
jae
cli
push
add
xchg
das
sub
fs
push
loop
mov
repnz
push
add
fcmovne
fists
add
adcl
sub
inc
add
add
mov
jl,pt
add
int
mov
rolb
js
aas
clc
mov
add
in
mov
add
push
fwait
jbe
cmp
push
add
mov
push
rolb
in
lret
insb
mov
mov
int3
mov
leave
xchg
xchg
add
mov
jmp
mov
push
dec
cltd
fisttpll
repz
xor
mov
addb
stos
jbe
add
pop
loopne
mov
jae
mov
mov
pusha
add
pop
fwait
push
test
rolb
mov
pushfw
out
mov
mov
xlat
jb
mov
pop
aam
add
or
aaa
loopne
mov
cmpsb
dec
out
xchg
mov
add
mov
jne,pn
int3
sub
cmpsb
add
mov
cmp
mov
aad
lock
ss
cli
loope
or
mov
xor
pop
out
cs
lret
mov
add
mov
inc
add
je
add
fistpll
int3
rol
inc
add
popa
mov
outsb
cld
sub
pop
add
jbe
mov
mov
sbb
add
in
or
xchg
lcall
xlat
in
rolb
mov
jmp
add
mov
andl
inc
ficompl
repnz
push
outsb
ret
inc
push
xchg
push
add
jno
add
sbb
and
mov
adc
mov
inc
add
mov
mov
outsb
jnp
imul
rcll
add
movsb
pop
cmp
inc
add
add
mov
push
fnsave
xchg
xor
fwait
mov
icebp
and
mov
or
loopne
mov
scas
push
inc
mov
xor
mov
add
push
sbb
jmp
push
mov
xor
mov
push
pop
xchg
in
jl
cmpsl
pushf
push
cmp
mov
and
into
mov
ljmp
std
cltd
push
dec
adc
mov
add
test
jg
pop
rcll
mov
test
and
jbe
aas
jl
mov
test
call
stos
push
xchg
cmp
rolb
push
jno
pop
popa
adc
mov
insb
inc
insl
pop
xor
add
arpl
mov
test
add
adc
mov
loope
or
repz
pop
add
add
frstor
jle
add
bsf
push
dec
push
add
pop
icebp
addb
sub
mov
out
dec
mov
or
cld
out
inc
add
add
push
lods
pop
loop
mov
jbe
mov
mov
push
or
or
pushl
push
xlat
xor
mov
repnz
mov
add
je
pop
in
xor
jl
inc
pushf
repz
mov
mov
imul
pushf
test
std
rolb
mov
push
add
mov
movsl
sub
test
data16
inc
les
mov
cmpl
add
gs
int
lea
mov
int3
mov
adc
or
adc
mov
js
and
push
add
sub
pop
inc
lea
add
movsl
pop
sub
mov
enter
loope
and
sub
cmp
add
add
lret
dec
addb
out
add
les
add
jl
sti
fcmovnu
dec
xchg
xchg
hlt
xchg
add
add
xor
mov
mov
add
popf
test
into
shr
push
mov
jge
addr16
xchg
cmp
ja
hlt
cmp
sbb
or
shll
add
loop
mov
add
sub
add
cs
loope
js
mov
jmp
pop
pop
fmuls
pop
pop
pop
add
mov
sub
fwait
movsb
outsl
inc
add
mov
mov
add
outsb
pop
mov
add
xchg
cltd
adc
pop
or
xchg
sbb
sub
push
hlt
mov
jne
and
sarl
jno
push
pop
push
aam
bound
mov
adc
and
stos
fs
jecxz
pop
dec
dec
loop
mov
push
loope
cli
pusha
add
or
insl
adc
jbe
in
pop
or
scas
call
aaa
xor
pop
imul
adc
mov
jns
pusha
add
mov
nop
add
sbb
mov
sarl
inc
pop
cs
xchg
cs
push
or
add
ljmp
dec
adc
push
add
push
and
add
mov
mov
jecxz
add
add
cwtl
das
out
cltd
jbe
jle
mov
out
xor
mov
fdivrs
imul
add
xor
mov
mov
sti
xchg
add
rcr
sub
add
add
outsl
cmp
add
add
pop
leave
mov
fcompl
sbb
push
inc
into
incl
pop
lods
sbb
andl
pop
push
add
adc
add
pusha
add
mov
sub
cwtl
xor
mov
add
hlt
int
ret
or
xchg
or
mov
add
mov
mov
in
inc
add
loope
add
in
add
rcrl
pop
push
imul
xor
mov
add
sbb
add
repz
push
mov
in
iret
arpl
inc
rcrl
aaa
mov
xor
jmp
call
shll
add
xchg
jno
jae
mov
fs
mov
add
in
sbb
mov
mov
mov
and
pusha
add
movsl
and
mov
fdivr
jb
mov
lret
lret
add
mov
enter
jecxz
std
jge
jnp
adc
mov
mov
add
insl
int3
xchg
arpl
negb
inc
add
and
addb
mov
sbb
cmp
mov
push
dec
imull
add
imul
mov
or
mov
jge
je
hlt
and
mov
adc
mov
add
mov
fistps
mov
or
lock
adc
add
fistpll
arpl
in
call
sbb
add
jl
inc
sti
pop
pusha
add
mov
movsl
add
in
sbb
jo
mov
cmp
aam
pop
xor
aad
lcall
sub
inc
add
ss
scas
mov
add
sub
mov
outsb
adc
lahf
inc
add
cmc
in
xchg
pop
xchg
xor
in
notl
mov
jbe
add
lahf
fbld
insb
insl
sbb
add
fnsave
mov
add
push
loope
xchg
add
xchg
xchg
push
in
add
add
xor
pop
inc
add
xchg
or
aad
test
cli
lcall
pop
lret
hlt
popa
add
fstps
add
pop
adc
mov
inc
lods
and
jmp
mov
into
xchg
in
fs
insl
or
inc
mov
mov
sbb
mov
out
ljmp
sbb
or
je
push
sar
mov
xchg
push
ss
cltd
dec
int
fmuls
mov
mov
fldcw
icebp
pop
cmpsl
xor
xor
aad
rolb
fwait
add
imul
aad
sub
cmp
enter
dec
push
add
adc
adc
xchg
adc
clc
xchg
loope
add
mov
add
aas
hlt
divl
mov
mov
dec
mov
add
icebp
sti
adc
mov
fisttps
dec
push
cld
dec
arpl
std
ja
mov
jp
dec
and
add
add
outsl
out
xor
and
dec
stc
hlt
jb
mov
add
xor
push
jb
mov
ja
and
adc
sbb
add
fildll
prefetch
or
loope
add
mov
test
loop
mov
fs
loope
add
sub
mov
mov
inc
push
aad
adc
gs
mov
mov
outsl
mov
jbe
add
xchg
add
push
dec
push
mov
mov
mov
push
xor
jmp
and
dec
xlat
aaa
aaa
mov
mov
jge
add
mov
mov
mov
xchg
or
add
lcall
push
inc
jecxz
sub
or
jne
sub
mov
add
mov
pop
push
outsl
out
mov
pop
adc
add
sub
fwait
rcll
xor
test
add
fidivl
repnz
jge
adc
mov
test
lcallw
mov
adc
mov
add
mov
push
mov
push
aam
mov
movsb
jno
flds
cli
add
push
int
mov
inc
test
mov
int3
and
add
sbb
es
cmpsl
aad
or
in
test
lods
aad
test
add
mov
lods
sbb
fimuls
jo
mov
and
mov
sub
add
add
jo
mov
sbb
mov
inc
cmpsl
push
add
dec
ds
leave
aas
adc
add
fldl
lret
mov
mov
les
add
fwait
pusha
add
idivb
outsb
xor
mov
es
mov
mov
fs
addb
mov
testb
push
fiadds
out
aas
stos
nop
add
fstp
mov
xchg
pushf
mov
mov
xor
inc
add
mov
mov
stos
lahf
aaa
and
mov
add
mov
cltd
dec
xchg
aaa
jg
dec
cmpsl
jbe
sbb
out
xor
mov
ficoms
jbe
jns
lock
outsb
adc
mov
inc
add
mov
lcall
sti
insb
sub
sub
addb
xchg
int
outsl
mov
mov
push
xchg
aas
insl
lock
add
mov
mov
mov
and
mov
jbe
or
mov
repnz
cmc
stc
inc
cli
xor
mov
add
and
cltd
aad
sahf
jo
mov
aaa
xor
xor
xor
xchg
addb
mov
mov
enter
stos
lcall
add
mov
cld
insl
ss
or
jne
jns
inc
xor
mov
fistps
add
in
dec
cmc
inc
ficomps
fadds
pop
add
mov
add
mov
mov
add
jns
test
jle
xchg
jns
or
add
and
mov
test
add
mov
inc
js
jae
sub
add
mov
push
sub
add
ds
jl
movsb
adc
mov
mov
es
shll
cmc
push
inc
lods
mov
pushf
cmp
not
add
add
in
pop
inc
add
lock
add
add
jge
inc
cmp
mov
and
add
outsl
inc
add
stc
jp
ljmp
sbb
pusha
add
or
add
mov
mov
adc
sbb
mov
xchg
insl
dec
fdivrp
jne
rolb
pop
mov
pusha
add
xchg
dec
in
push
add
mov
mov
sub
add
push
push
cli
mov
push
lea
addr16
mov
mov
testl
in
loope
push
mov
lock
pushf
inc
out
ret
test
xchg
hlt
mov
loope
cwtl
mov
sub
pop
jle
xchg
jle
inc
lcall
mov
add
mov
iret
xor
mov
mov
sub
mov
daa
outsb
add
mov
sub
mov
mov
and
addb
push
sbb
add
add
mov
ror
add
fstpl
sub
lcall
and
and
mov
mov
fldcw
inc
push
add
sbb
mov
aad
imul
sbb
mov
add
stos
mov
or
xor
and
add
cwtl
pop
push
mov
push
adc
mov
pop
lret
iret
sub
outsb
pushf
incl
ret
subl
addr16
outsl
xchg
add
sbb
ret
pop
sub
dec
out
and
mov
push
jae
add
or
sub
pop
addb
enter
mov
xlat
fwait
jle
add
add
dec
mov
push
jno
cltd
mov
add
push
clc
push
lret
push
leave
rcl
movsb
jno
or
sbb
icebp
je
cld
add
cwtl
inc
add
add
add
mov
mov
add
and
sbb
ror
mov
add
ds
int3
push
sti
jo
mov
jo
mov
int
ds
push
add
sbb
jmp
inc
add
add
pop
clc
xchg
mov
mov
add
addb
mov
mov
add
icebp
rolb
mov
lcall
or
mov
mov
in
pop
sahf
js
dec
adc
add
notb
out
push
divb
sbb
enter
add
mov
sahf
xor
mov
jle
loopne
mov
cmp
inc
test
xchg
sub
mov
add
rolb
aad
push
mov
mov
mov
mov
fwait
xchg
in
xor
mov
lret
xchg
xchg
cmpsl
jge
xchg
push
shll
cmp
mov
or
pop
ja
push
jno
shl
jmp
or
unpcklps
out
cmpsb
bound
mov
movlps
les
push
mov
divl
or
dec
push
mov
jne
popf
cmp
and
mov
jmp
aad
push
jg
add
les
loop
mov
add
xchg
mov
iret
jg
int3
sahf
idivb
and
mov
dec
ljmp
add
mov
cmpsb
cmpsl
pop
cmp
rcll
jns
pop
loope
mov
mov
addb
int3
push
fstps
mov
add
pop
sti
xchg
jl
mov
mov
mov
dec
cmc
fsub
aad
jb
mov
lds
jns
and
xor
mov
and
sbb
push
push
dec
cmpsl
stos
add
inc
loope
cmc
mov
mov
mov
iret
dec
push
cmp
xor
mov
mov
bound
mov
inc
add
mov
lcall
or
ss
jne
ljmp
fadd
push
gs
jge
in
add
mov
dec
stos
lahf
mov
std
and
imul
mov
or
mov
ljmp
add
jno
add
mov
add
jae
xor
push
rolb
mov
mov
pusha
add
add
push
mov
jb
mov
bound
mov
mov
add
test
mov
pop
ljmp
add
in
lcall
add
mov
push
mov
cld
imul
lcall
push
inc
add
js
jbe
jno
pusha
add
mov
jge
int
loopne
mov
cmp
js
add
fdivr
jnp
dec
ret
call
in
push
mov
nop
add
into
in
fmul
cmp
jb
mov
cmpsb
cmpsl
and
pop
jge
and
mov
mulb
mov
mov
leave
loope
adc
sub
xchg
inc
add
rcl
add
mov
push
add
mov
outsb
inc
mov
outsl
xor
mov
inc
mov
mov
sbb
xchg
cmpsb
sub
add
add
in
push
scas
inc
add
jb
mov
mov
mov
and
rorl
add
out
movsbl
mov
imul
dec
add
stmxcsr
test
test
test
add
pop
mov
mov
jg
add
inc
xchg
cmp
out
call
jae
lret
dec
dec
stos
scas
sbb
add
movswl
std
jle
mov
jns
pushf
aad
ffreep
fwait
repz
ficompl
movsl
xor
mov
dec
pop
mov
mov
jne
or
push
jnp
mov
and
add
lcall
pusha
add
insb
mov
mov
add
pop
adc
add
pop
jb
mov
aas
or
movb
mov
rcl
add
fnstsw
mov
push
outsl
in
mov
fisttpl
repnz
add
dec
xchg
test
xor
outsl
xlat
sbb
add
sbb
add
inc
lods
push
xorl
out
iret
add
mov
loop
mov
add
pop
push
aaa
enter
testb
lahf
stos
adc
jle
mov
dec
add
mov
push
in
mov
mov
pop
mov
sbb
in
pop
in
stc
mov
jl
adc
mov
cli
xchg
pusha
add
mov
add
repz
add
jbe
lods
add
rcll
imul
fdivrs
mov
add
push
push
cmpsl
gs
movsl
test
mov
das
jg
test
push
xchg
pop
cmp
call
repz
cs
mov
pop
pop
cltd
movsb
xorl
ss
sub
sti
lcall
repz
nop
add
mov
inc
add
add
stos
insb
fadd
mov
jo
mov
arpl
in
xchg
dec
ret
mov
out
xor
mov
jbe
add
xlat
jns
sti
imul
xchg
add
into
sub
fcompl
lea
add
sbb
cmp
push
jmp
push
xchg
lods
lds
aam
cli
and
daa
sets
repnz
mov
push
idiv
rolb
mov
sbb
xchg
add
cmpsl
sbb
scas
iret
ja
js
push
inc
add
int3
mov
out
push
xchg
pop
xlat
mov
xchg
and
mov
add
scas
mov
mov
jg
add
mov
in
into
call
lds
or
mov
add
push
out
inc
dec
bound
mov
mov
add
add
xchg
rolb
mov
add
add
sub
jmp
into
sub
and
call
fwait
data16
or
add
lods
inc
fs
frstor
add
add
mov
add
mov
add
mov
icebp
jp
add
mov
mov
and
lret
ds
cli
test
mov
xchg
imul
push
add
rcrl
mov
push
mov
mov
stos
icebp
repz
in
mov
mov
adc
aaa
test
cmp
imul
movsl
addl
and
push
add
jmp
rolb
stos
in
xchg
xchg
loop
mov
mov
or
adc
sbb
pop
xor
mov
ss
adc
mov
bound
mov
mov
pop
lret
dec
lea
adc
mov
or
cli
das
or
add
add
ds
les
push
outsl
pop
cmp
push
xchg
xchg
xchg
loope
mov
add
mov
outsb
ss
repnz
push
add
mov
add
inc
mov
ret
out
mov
mov
xchg
insb
std
jb
mov
rolb
fmull
rolb
mov
imul
pop
cmp
sub
add
add
inc
andl
fsubl
add
and
mov
inc
pusha
add
sub
adc
mov
xor
mov
xchg
inc
andl
or
add
jecxz
adc
mov
xor
mov
jge
aaa
mov
sub
add
data16
jns
int
push
mov
xor
add
and
mov
add
test
mov
jo
mov
jg
xor
mov
dec
fwait
outsb
stos
data16
push
ret
outsb
push
out
iret
push
dec
insb
addl
shr
sahf
enter
sbb
mov
sbb
das
add
repnz
add
xchg
inc
add
xchg
jp
mov
mov
cld
ror
inc
scas
call
jp
jns
mov
mov
add
je
imul
mov
mov
outsl
adc
mov
pop
xlat
bound
mov
call
data16
repnz
xchg
push
cmpsl
je
test
add
cmp
cmp
cmp
jmp
dec
mov
aam
dec
movsb
push
test
add
cmp
mov
adc
mov
imul
dec
in
inc
add
xor
pop
sbb
icebp
fs
mov
dec
mov
enter
in
xchg
ss
mov
mov
insl
insl
ds
les
mov
pop
mov
add
add
add
fimull
mov
pop
cmp
movsl
xor
mov
scas
push
cmp
dec
inc
add
jp
cmp
mov
mov
testl
and
push
add
pop
inc
arpl
jl
add
add
dec
sbb
addb
cmp
add
add
add
in
adc
mov
add
pop
sahf
bound
mov
mov
mov
add
fdivrs
or
lods
addb
xchg
add
mov
mov
add
add
add
cmp
add
push
std
in
xor
mov
add
add
xor
mov
outsb
inc
push
add
sbb
pop
adc
mov
lret
mov
xchg
pop
jae
xchg
lock
sbbl
add
lods
hlt
fildll
int
pop
sub
mov
mov
ret
outsl
fistps
and
mov
pop
push
std
shr
rolb
adc
mov
in
loope
fs
sbb
imul
test
mov
mov
jae
cmpsb
ror
addb
imul
lea
jnp
sbb
xor
mov
enter
pusha
add
ja
dec
test
in
pop
ret
pop
or
pop
prefetchwt1
out
xchg
add
mov
add
xor
mov
or
lcall
ret
mov
pop
cmp
add
rolb
mov
inc
or
push
add
inc
mov
movsl
mov
and
mov
popf
mov
dec
jb
mov
add
dec
cmp
aam
push
jmp
pusha
add
out
fcmovnb
add
xchg
fdivrl
mull
push
add
clc
jl
sbb
mov
dec
xchg
jns
jnp
sub
test
pop
xchg
or
inc
add
ss
add
lcall
mov
dec
inc
call
push
addb
outsb
insb
ss
repnz
jnp
mov
in
add
or
fisubrl
mov
mov
push
daa
lods
fdiv
push
jmp
and
xor
lret
leave
mov
rcl
or
lock
fadds
add
pop
repz
add
fstl
add
add
jl
leave
ja
pusha
add
push
scas
inc
insl
pop
jns
mov
add
adc
mov
mov
adc
mov
mov
push
mov
in
or
repnz
in
mov
out
adc
mov
sub
mov
les
xor
mov
shrl
pop
sbb
xchg
fucomp
sti
movsb
outsl
jne
adc
leave
lock
jo
mov
add
lods
xchg
sub
pop
daa
add
add
dec
lds
add
dec
in
rolb
cmpsb
fs
jno
test
fwait
negb
xor
lret
mov
mov
xchg
out
add
mov
je
add
add
adc
mov
mov
mov
adc
insl
or
add
add
mov
lahf
or
mov
sub
add
test
inc
sahf
dec
push
xchg
and
mov
jb
mov
lods
insl
cmpsl
pop
cmpsl
sbb
cmpsb
push
dec
or
mov
xchg
xchg
ja
push
sub
mov
addb
out
loopne
mov
aas
arpl
test
aam
lea
pop
push
imull
push
xchg
add
xor
mov
ljmp
sub
xchg
mov
jne
inc
roll
push
mov
data16
jge
or
das
cmp
dec
clc
insb
ret
push
pop
or
popf
inc
jns
dec
jle
push
in
mov
xchg
stos
push
scas
insl
dec
rolb
mov
gs
outsl
mov
cmp
mov
mov
push
les
rolb
sahf
adc
xor
ss
ret
pusha
add
xchg
add
add
in
fs
mov
xlat
inc
add
xchg
push
add
mov
stos
sbb
pop
xchg
xor
adc
popf
lds
sarl
in
inc
loope
aas
mov
add
pushf
mov
das
notb
pop
lock
aaa
xchg
jno
sbb
mov
fbstp
mov
push
lret
mov
loopne
mov
push
clc
lods
fwait
movsb
dec
dec
sahf
ret
xor
outsl
leave
sub
add
add
fs
inc
inc
add
dec
nop
add
addl
int3
add
js
cmp
inc
add
push
mov
call
xor
mov
inc
bound
mov
adc
das
ret
negl
push
or
icebp
pushf
xchg
cltd
pop
push
rolb
mov
push
cmp
add
cmc
insb
movsb
sbb
mov
adc
mov
data16
mov
adc
mov
xchg
lcall
xor
mov
lahf
adc
push
shrl
incb
xor
adc
mov
sub
lea
adc
mov
dec
sbb
mov
aam
sub
movsb
pop
addr16
mov
mov
mov
mov
ret
and
jle
movsb
je
add
mov
jb
mov
rolb
xchg
sbb
pop
sub
add
mov
hlt
out
mov
enter
bound
mov
add
mov
inc
add
sbb
add
inc
lret
mov
or
rolb
mov
add
lea
push
add
xchg
fldl
cmpsl
es
cmpsb
jne
add
scas
jns
js
test
lret
add
sub
loop
mov
aaa
ja
adc
mov
pushf
mov
lds
mov
add
das
faddl
pop
dec
add
or
pop
xor
and
dec
push
mov
roll
sub
sub
push
scas
paddb
add
mov
out
gs
xlat
pop
add
sub
into
repnz
jecxz
aas
insl
pushf
mov
pusha
add
sub
repz
add
ret
push
addb
in
add
xlat
or
add
cs
add
lock
mov
int
inc
mov
std
shll
mov
inc
inc
add
jbe
add
mov
mov
shll
add
into
add
mov
aas
push
add
pop
and
mov
mov
out
in
into
and
fnstenv
aad
xchg
push
inc
pop
push
add
fidivs
mov
mov
jnp
add
mov
rolb
jbe
add
ss
out
jge
add
inc
mov
inc
rolb
mov
enter
lds
sbb
add
movsb
and
popf
sbb
mov
push
cmp
mov
je
movsb
call
mov
add
xor
in
push
add
xrelease
jb
mov
loope
push
mov
xchg
sets
add
cld
mov
in
adc
mov
outsl
mov
mov
mov
lods
subl
imul
mov
mov
test
jmp
add
mov
lods
rcrl
adc
add
scas
int3
add
hlt
lds
or
repnz
loope
or
add
pop
inc
add
sub
mov
ret
and
mov
inc
mov
add
sbb
pop
add
mov
mov
mov
rcrl
jo
mov
add
mov
adc
dec
testb
add
add
fsts
push
xchg
cmc
mov
pop
xor
mov
mov
add
mov
outsl
mov
stos
mov
aam
in
jmp
mov
test
mov
jno
pop
repnz
movsl
arpl
sub
dec
mov
add
mov
and
push
mov
dec
jge
pusha
add
lea
pop
nop
add
add
add
jns
xchg
mov
mov
mov
jp
loop
mov
jp
dec
faddl
add
in
or
lds
mov
or
mov
and
mov
pop
cld
dec
popl
mov
sti
or
iret
imul
add
cmc
sahf
stos
outsb
cmpsl
addb
and
mov
ret
in
add
mov
mov
insb
rolb
mov
add
xor
mov
clc
pushf
add
test
test
add
push
sub
add
loop
mov
insb
int3
fidivrl
add
add
mov
cltd
pop
pusha
add
test
test
ja
add
loope
adc
add
inc
test
ret
adc
je
pop
jns
push
add
adc
push
inc
nop
add
pop
ds
cmp
xor
mov
dec
pusha
add
cmp
and
mov
or
je
mov
imul
push
lret
or
addb
xchg
psrlq
cmp
add
aad
hlt
rolb
mov
int3
ss
add
jge
add
pop
cvttps2pi
add
dec
loope
scas
xchg
add
mov
fidivrs
add
test
es
jnp
jmp
mov
add
mov
pop
or
inc
add
inc
or
lods
cmp
mov
mov
or
movsl
adc
pop
rolb
sbb
aas
add
movsb
std
fsub
add
in
adc
or
add
cmp
fs
jl
std
les
add
lret
out
out
movsb
pop
jbe
xchg
mov
jmp
negb
hlt
lock
or
jmp
mov
xor
push
es
cli
cmpsl
mov
add
jg
movsl
jge
cmp
in
cli
test
ret
pop
pushf
cmpsl
in
lods
cmp
jecxz
aam
js
mov
mov
inc
outsb
xchg
add
mov
imul
add
aad
jbe
and
mov
pop
mov
jl
das
test
rcrl
mov
mov
jp
inc
scas
int3
mov
stc
fnstcw
jno
sub
aad
mov
fists
imul
imulb
jle
mov
movsb
push
add
xor
and
ljmp
jae
cmp
ficompl
add
cmpl
loopne
mov
and
add
dec
repz
add
data16
mov
add
ljmp
pushf
push
call
push
add
pop
xchg
push
addb
inc
add
loopne
mov
pop
ret
mov
enter
jecxz
cmpsb
mov
jl
push
cmpsb
add
movsl
in
int
inc
inc
inc
test
fwait
lea
fs
ss
repz
and
daa
mov
test
repnz
jecxz
add
add
mov
fcoms
add
pop
loopne
mov
jae
ja
inc
divl
cmp
mov
jb
mov
lcall
xchg
add
add
mov
inc
xor
add
mov
pop
xchg
test
mov
pusha
add
add
push
push
add
mov
mov
bound
mov
xchg
mov
filds
add
mov
xchg
fnstcw
sub
js
xchg
add
mov
sub
outsl
inc
add
inc
add
pop
or
test
insb
ss
insl
mov
and
popf
adcl
mov
mov
cmc
outsl
in
arpl
add
mov
mov
stos
testb
mov
out
xchg
or
jmp
inc
xlat
loopne
mov
xchg
add
mul
pusha
add
add
add
imul
jnp
cmp
andl
and
mov
in
xor
js
loopne
mov
or
push
enter
add
mov
sub
xchg
add
inc
push
lock
push
mov
fldenv
add
js
xor
mov
xchg
repnz
bound
mov
iret
mov
add
mov
mov
sbb
sub
rcrl
mov
jo
mov
clc
jmp
push
mov
incl
mov
lea
xor
fdivr
jns
add
mov
cmp
je
add
mov
lods
mov
repz
imul
mov
ds
je
jmp
add
mov
add
adc
cmpsl
and
mov
mov
add
adc
cmp
mov
jae
call
loope
cmp
xchg
mov
loop
mov
cli
sahf
jns
mov
aam
sbb
dec
jle
test
xor
out
xlat
fwait
and
dec
cs
ret
arpl
in
aam
add
add
add
hlt
dec
push
cmp
in
mov
mov
inc
add
add
sub
js
add
in
mov
loopne
mov
push
mov
add
xchg
add
add
mov
inc
push
cmp
fldenv
ficomps
sub
push
les
add
dec
fsubrs
mov
jbe
rcr
outsl
xchg
or
dec
cmpsl
push
or
ret
xor
dec
adc
mov
inc
lahf
xchg
jbe
add
clc
sbb
add
add
jns
sti
test
insl
jge
cli
leave
or
add
add
pop
addr16
or
ffree
cmp
xchg
das
test
ljmp
mov
mov
add
mov
movsb
jno
lcall
dec
and
mov
mov
scas
push
ud0
clc
ret
sbb
pushl
add
add
xchg
fsubrl
adc
mov
xlat
out
sbb
cmpsb
fwait
cmp
pop
push
add
pop
dec
rolb
add
mov
sub
push
dec
adc
jmp
je
sbb
add
mov
test
ret
movsb
fdivp
in
adc
mov
add
pop
jae
dec
xchg
jl
add
popa
idiv
jle
out
cs
in
xchg
ret
xor
scas
xor
mov
mov
add
repnz
xchg
imul
mov
test
add
sub
xchg
pop
repnz
jbe
outsl
lea
sti
addb
leave
mov
add
add
add
mov
test
mov
inc
call
into
ja
add
rcr
hlt
popf
adc
sub
divl
mov
aaa
mov
fsts
adc
aas
pusha
add
das
lock
mov
test
lea
out
mov
add
add
fwait
jge
imul
add
jb
mov
adc
add
pop
enter
popf
es
mov
pop
lods
int3
add
mov
dec
pop
adc
filds
add
test
pop
inc
sub
inc
mov
stos
les
stos
mov
inc
popf
leave
lock
outsb
int3
push
sahf
jae
mov
mov
sti
xor
fninit
push
inc
cli
pop
ret
fsubs
mov
add
sbb
mov
enter
mov
push
fimuls
mov
mov
leave
addb
negl
lret
cmpsb
arpl
adc
add
or
addb
mov
dec
lret
aad
add
cmp
imul
mov
dec
in
movsl
notl
add
popf
std
cmp
mov
sbb
jg
jmp
stc
popa
dec
push
sbb
dec
inc
lahf
add
mov
test
add
xor
mov
out
sbb
adc
add
mov
add
mov
ror
push
or
mov
mov
mov
cmpsb
inc
xchg
add
mov
dec
pushf
ja,pt
pop
and
adc
inc
xorl
arpl
lds
mov
fwait
cs
cli
xchg
cmp
mov
sub
rolb
mov
sbb
add
mov
scas
cmp
sbb
imul
mov
jmp
add
jmp
movsb
jae
pop
jne
fsubrl
and
popa
push
in
mov
pop
push
add
inc
xchg
sub
inc
div
lods
into
xor
and
mov
add
inc
nop
add
mov
inc
cmp
pop
mov
rolb
sbb
es
loop
mov
xchg
add
mov
add
and
mov
mov
xchg
inc
mov
inc
nop
add
jp
push
add
add
hlt
hlt
pop
repnz
movsb
int
test
fadds
pop
ss
ljmp
ss
lods
pop
add
xor
mov
push
add
pop
cmp
cmp
xchg
adc
loop
mov
in
dec
adc
mov
xchg
sbb
jp
pop
js
js
sub
add
out
push
add
push
fcom
insb
xchg
xchg
xor
call
int3
jp
rolb
mov
ss
jbe
rolb
mov
fists
xchg
nop
add
mov
mov
add
imul
xor
outsb
push
or
lret
enter
mov
repnz
mov
add
mov
add
into
jno
ds
sbb
adc
jecxz
inc
xchg
sbb
add
in
out
jmp
add
or
fnsave
add
add
arpl
mov
dec
imul
dec
orl
and
mov
jecxz
adc
or
sub
lret
and
repnz
mov
mov
mov
mov
inc
int
test
mov
movsb
rcl
mov
sub
dec
sbb
jle
in
imul
pop
pushf
mov
call
cmp
test
pop
fidivl
dec
rolb
mov
ret
and
mov
data16
add
hlt
sbb
scas
add
outsb
add
mov
add
dec
jne
mov
add
add
rolb
mov
push
popf
cld
ja
popf
cmp
daa
nop
add
addb
mov
icebp
mov
lds
jo
mov
imul
mov
pop
cmp
pop
out
ret
cwtl
in
cmpsb
cmp
add
or
mov
xchg
lods
or
or
sub
mov
xchg
jnp
ljmp
jge
lea
jge
add
push
add
or
mov
enter
mov
sarl
add
lods
mov
add
cmpsb
push
hlt
xor
pop
mov
add
fwait
hlt
inc
lcall
mov
icebp
xchg
addb
loopne
mov
and
imul
or
add
pop
jns
pop
push
aaa
inc
bound
mov
es
jl
addb
cld
int
xchg
movsb
int
add
and
mov
cmp
add
sti
or
daa
and
mov
clc
sbb
icebp
adc
mov
mov
add
mov
adc
pop
mov
cvtpi2ps
inc
push
call
mov
mov
mov
dec
push
xorl
rcrl
mov
lret
cmp
and
mov
add
pop
dec
mov
lahf
and
mov
mov
inc
add
add
int3
test
jnp
ret
dec
ret
push
pop
cwtl
addb
sbb
jge
add
repnz
jl
mov
rol
jecxz
push
mov
scas
push
js
inc
mov
std
stos
sub
mov
pop
push
push
sub
add
shr
and
mov
sbb
xlat
push
add
push
call
add
cmc
inc
add
add
mov
mov
or
addr16
or
loope
pop
lahf
mov
stc
xchg
movsl
fsubr
sbb
sarl
cs
addb
and
mov
mov
daa
mov
sub
jno
addr16
and
mov
fildll
xchg
add
and
add
mov
jg
add
jl
imul
mov
rolb
mov
xor
add
add
mov
cmp
mov
add
cs
addr16
mov
bound
mov
xchg
xor
sbb
mov
in
in
out
xor
in
popa
outsb
sbb
mov
add
ss
test
mov
add
dec
mov
add
cli
mov
add
mov
xlat
addb
xchg
rolb
out
mov
jae
imul
add
fcom
add
rolb
mov
mov
cmp
xor
aaa
dec
jp
lds
push
add
and
mov
add
sbb
inc
xchg
lea
pause
add
dec
loopne
mov
add
add
iret
icebp
in
sti
push
add
addr16
add
divl
dec
mov
lahf
cltd
adc
mov
jo
mov
cmp
dec
sahf
loop
mov
lds
sarl
cmp
mov
leave
xchg
fstpl
mov
enter
sarl
stos
and
push
outsl
in
push
add
out
inc
movsl
dec
add
add
mov
stc
addb
and
mov
test
add
mov
add
mov
mov
mov
loope
xor
mov
mov
rolb
mov
mov
mov
outsb
sbb
int3
mov
lds
pop
cmp
enter
add
push
sub
movsb
or
xchg
add
mov
loope
mov
scas
pavgb
mov
xchg
cwtl
push
bound
mov
sbb
inc
add
push
add
mov
fisubrs
xchg
dec
sub
mov
sahf
test
or
sbb
lods
and
mov
leave
imul
add
mov
pop
mov
sbb
les
jmp
pop
pop
movsl
push
pop
clc
repnz
xor
in
jae
lock
push
sub
fsubl
pop
cmp
jle
clc
cmp
cltd
jnp
sbb
repz
pop
je
inc
mov
addb
push
lcall
add
and
mov
add
mov
sub
out
adc
scas
xchg
movsl
pushf
pusha
add
mov
nop
add
negb
or
rolb
lcall
pop
addb
push
add
mov
xchg
jmp
leave
mov
lcall
mov
mov
mov
cmp
movsl
ficoml
mov
add
mov
fsubrl
jecxz
addb
jmp
add
mov
jbe
cmp
mov
add
jp
jo
mov
addb
rolb
mov
add
cmp
lea
cmp
jnp
or
add
loop
mov
push
mov
mov
pop
ret
cmp
sbb
xor
lock
or
add
int3
xor
mov
mov
inc
aas
adc
mov
add
loopne
mov
imul
je
or
js
adc
inc
bound
mov
jbe
sub
dec
int3
out
lahf
sub
add
test
push
and
adc
mov
xchg
xor
cs
ljmp
sub
loope
lret
pop
pop
fistpl
mov
lret
mov
cmp
add
xor
nop
add
out
in
addl
out
inc
jecxz
inc
adcl
mov
mov
and
jg
scas
pusha
add
lret
imulb
jb
mov
inc
pop
pop
test
mov
shll
xchg
add
into
int3
lcall
mov
add
xchg
fstp
jg
sbb
add
lods
popa
fwait
pop
popf
call
push
data16
out
mov
pop
push
add
mov
add
xchg
movsl
inc
jae
dec
or
out
scas
in
jl
add
clc
push
dec
rolb
mov
cmp
stc
cli
loop
mov
add
nop
add
std
xor
xchg
repz
mov
and
movsl
ljmp
jns
inc
mov
jg
mov
add
mov
loop
mov
divps
xchg
cli
roll
push
mov
add
scas
sub
mov
mov
jno
or
sub
mov
jmp
hlt
mov
mov
fnstenv
add
inc
mov
push
add
mov
fdivrs
call
mov
mov
ljmp
or
mov
icebp
inc
add
mov
jp
mov
add
add
mov
pusha
add
mov
imul
in
imul
mov
mov
xor
mov
and
mov
mov
out
cltd
cmpsb
out
add
add
mov
loope
sbb
mov
aas
lds
add
frstor
add
sub
inc
push
mov
sub
dec
enter
add
scas
stos
mov
inc
inc
clc
mov
add
sbb
add
ds
inc
add
add
jmp
dec
lea
repnz
insl
outsl
cs
add
mov
mov
add
insb
jae
ss
movsl
jo
mov
cmp
mov
aas
jo
mov
mov
mov
rolb
mov
mov
xchg
push
pop
sbb
outsb
imull
cmp
sbb
jl
xchg
dec
lea
mov
and
movsb
lahf
mov
mov
and
mov
mov
fisttps
repnz
sbb
dec
sbb
add
sbb
add
std
xchg
loopne
mov
lcall
xchg
sbb
int3
mov
dec
jo
mov
es
dec
repz
out
repz
and
mov
push
mov
add
test
pop
out
jns
sub
jbe
inc
test
mov
mov
mov
jo
mov
rolb
mov
sbb
repnz
push
add
pusha
add
jl
sbb
pop
std
push
jno
movsb
ss
mov
addb
loopne
mov
and
aas
out
sbb
jecxz
add
jge
ja
inc
add
add
pop
addl
mov
js
rcrl
add
mov
pop
roll
inc
xor
mov
iret
mov
pop
fwait
adc
out
mov
add
in
mov
add
mov
add
mov
xchg
cmp
nop
add
in
daa
in
mov
or
lret
movsb
addb
fmul
pop
arpl
pusha
add
jbe
out
out
roll
pop
and
mov
mov
andl
add
add
push
and
sbb
lcall
mov
push
gs
je
aas
scas
pop
dec
test
mov
xor
push
xchg
arpl
add
pshufw
pop
imul
and
cwtl
add
cmpsl
pop
inc
scas
push
dec
aas
lds
jp
cld
sub
add
out
mov
icebp
or
sbb
mov
dec
pop
mov
outsb
insb
out
pop
push
and
dec
dec
push
mov
add
add
dec
and
mov
sbb
addr16
in
mov
pop
mov
addb
mov
add
mov
mov
xor
xchg
aaa
cwtl
loop
mov
push
and
mov
inc
pop
fstl
xchg
mov
jb
mov
imul
addl
out
stos
mov
and
mov
int
xor
push
add
or
jno
les
push
dec
xchg
xchg
add
mov
mov
and
and
sbb
test
push
pop
mov
cmpsb
or
cmp
mov
pop
cli
dec
lcall
sub
je
ja
mov
xor
inc
arpl
scas
loop
mov
add
repnz
repnz
push
pusha
add
cmc
sub
push
inc
out
adc
mov
clc
and
mov
iret
dec
into
movsl
push
add
scas
in
sbb
mov
cld
jge
mov
mov
in
lods
dec
cmpsl
dec
iret
add
leave
cwtl
aam
fs
jns
jo
mov
imul
lret
sbb
dec
mov
inc
add
test
mov
mov
out
mov
scas
and
mov
mov
mov
dec
in
dec
lock
fsts
add
mov
pop
aad
add
movsb
xchg
pop
clc
mov
pop
jae
mov
xchg
and
inc
add
loope
das
out
sbb
add
jl
add
outsl
mov
decb
lret
sub
add
cmpsl
addr16
inc
add
push
subl
mov
in
call
add
mov
adc
mov
roll
outsl
mov
mov
lods
rcrl
push
add
push
repnz
jae
inc
add
stos
addb
xor
mov
mov
incl
sub
rolb
out
add
mov
add
push
adc
mov
fwait
adc
xor
mov
jb
mov
cmp
or
xchg
or
add
iret
dec
loop
mov
dec
mov
dec
lea
sub
sarl
mov
cmp
shll
mov
mov
pop
push
cmc
mov
inc
movsl
or
mov
ret
jbe
inc
outsb
bound
mov
sub
sbb
scas
push
negb
xchg
aad
mov
mov
lds
ret
and
mov
push
xchg
jg
popa
imul
addb
iret
xor
mov
mov
leave
lods
mov
mov
jns
add
out
and
