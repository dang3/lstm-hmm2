and
add
cld
fsts
outsl
test
xchg
int
iret
mov
jo
mov
pop
addb
cmpl
mov
push
add
inc
mov
sub
add
cmp
inc
sahf
addr16
mov
add
add
ljmp
lahf
push
xchg
mov
into
imul
mov
divl
add
rorl
or
xchg
insb
out
out
xchg
pop
mov
xchg
adc
and
push
dec
and
mov
add
mov
mov
in
jg
ljmp
ret
shr
filds
dec
shl
add
cmp
mov
push
add
add
jp
xor
cmp
lcall
push
mov
sub
push
push
push
push
push
push
cld
call
sub
es
movzbl
cmp
ss
push
push
call
mov
cmp
je
es
lea
cs
sub
mov
push
es
call
test
jne
jmp
leave
push
es
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
nop
lea
lea
sub
add
mov
sub
sub
push
pop
push
je
jmp
add
add
aam
dec
aas
sub
andl
xor
mov
add
test
mov
stc
xor
inc
out
pop
pop
mov
imul
mov
inc
add
int3
test
int
dec
fistl
jne
or
out
add
mov
xor
inc
xor
loop
mov
loope
insl
test
add
jnp
inc
mov
js
add
mov
mov
icebp
or
lock
dec
xor
rolb
mov
cmp
sbbl
filds
cmp
jo
mov
push
test
icebp
outsb
lods
push
lret
sbb
push
and
mov
push
cs
cwtl
lahf
stc
out
call
cwtl
icebp
inc
mov
add
add
mov
xchg
mov
mov
mov
xchg
mov
add
jno
add
cltd
leave
fsubrs
sbb
sub
add
mov
add
or
push
add
in
addb
lret
fmuls
je
push
pop
add
insl
out
int3
sbb
outsl
inc
addb
dec
push
add
jo
mov
addr16
into
sbb
cmpsb
pop
dec
cmp
lea
mov
clc
xor
add
add
mov
add
add
movsb
mov
xor
mov
add
push
add
sbb
push
add
ljmp
add
push
mov
push
push
mov
add
push
ret
es
adc
mov
xchg
add
ljmp
sbb
add
decl
cmp
add
or
mov
or
add
jb
mov
adc
mov
out
xchg
add
cwtl
jae
xchg
mov
add
push
add
fldt
dec
mov
dec
cmp
jp
rolb
mov
cmp
or
inc
jmp
scas
imul
mov
dec
mov
mov
add
mov
add
mov
push
stos
mov
mov
xchg
or
leave
loope
scas
lret
xor
rolb
mov
xor
xchg
jbe
push
add
lcall
mov
fucomp
adc
jns
jmp
fdivs
inc
dec
inc
test
mov
int3
dec
pop
cmp
xor
mov
in
stos
mov
mov
pop
mov
jmp
into
decb
out
xor
mov
add
jno
into
push
dec
jmp
test
or
cmp
js
add
test
vmwrite
xchg
push
mov
rolb
mov
aaa
fdivr
movsb
mov
mov
sti
adc
mov
mov
jmp
add
dec
adc
fsubs
add
rolb
mov
add
add
jbe
pop
lcall
add
fimuls
mov
sub
add
ret
or
je
sysexit
aad
adc
das
mov
idivl
mov
call
mov
loope
add
js
lcall
mov
arpl
mov
shrl
mov
in
enter
cmp
add
add
add
vmovsldup
mov
lea
mov
insb
js
add
xchg
aaa
dec
ret
mov
add
sub
fistpll
aam
in
push
add
loope
adc
mov
adc
mov
addb
test
xlat
loopne
mov
cltd
cs
push
outsb
pop
cmp
aas
and
pop
lods
rcll
mov
ljmp
add
add
test
fisubrl
std
sbb
add
mov
push
push
add
mov
mov
shll
les
cmp
es
dec
lret
lcall
mov
aaa
adc
addb
mov
rolb
mov
imul
clc
imul
mov
mov
add
mov
ds
xchg
incb
add
mov
es
test
shll
rolb
nop
add
mov
xchg
sub
fs
mov
lds
inc
cld
cwtl
sub
dec
leave
jns
xchg
jae
js
popf
test
es
lods
mov
gs
push
rolb
pop
das
in
and
stos
neg
mov
clc
push
es
mov
pop
hlt
mov
in
jp
xchg
adc
mov
add
loop
mov
out
call
add
dec
and
mov
add
dec
cmc
lahf
dec
mov
fcoms
mov
push
push
mov
jae
fs
dec
mov
je
data16
pop
ret
add
push
jno
mov
mov
out
enter
arpl
mov
jne
mov
dec
push
aam
inc
lock
inc
pop
mov
mov
scas
sti
mov
dec
jno
out
movsb
loopne
mov
sbb
mov
xor
add
mov
sbb
cltd
rolb
mov
xchg
xchg
cmp
cwtl
xchg
add
dec
add
and
mov
cmp
mov
inc
shll
mov
mov
jmp
push
lods
int
add
xor
mov
mov
xchg
mov
sub
fildll
add
or
cwtl
ret
lods
out
in
cld
or
add
add
mov
mov
cmc
pop
mov
push
or
mov
xchg
lock
stos
adc
sahf
fbld
add
mov
insl
arpl
lods
sbb
call
jge
aas
aaa
jl
add
mov
aad
cmpsb
std
setns
jp
outsb
enter
and
cmp
sahf
fcomps
or
pop
jg
aaa
dec
ljmp
mov
xchg
lds
addb
dec
jecxz
push
mov
lret
mov
add
cmp
mov
or
dec
xor
fisubrs
addb
lods
pop
add
mov
sbb
mov
pop
in
rolb
mov
pop
gs
inc
add
add
lcall
jl
cmp
add
stos
setnp
sub
ja
clts
bound
mov
test
inc
pop
and
sahf
in
mov
add
dec
cmp
add
in
dec
imul
in
jg
pop
fistpll
out
xchg
fsubl
icebp
js
add
xor
mov
jmp
inc
add
mov
mov
mov
add
mov
cmpsl
sub
dec
scas
inc
xchg
fadds
add
mov
sbb
add
nop
add
pop
push
add
pop
jecxz
loopne
mov
ffree
in
pusha
add
cmp
arpl
into
pop
jl
push
adc
mov
cmpsb
add
pop
sub
push
add
inc
push
inc
ret
cmp
add
add
mov
and
mov
jno
pop
sti
and
mov
or
mov
cmp
imul
test
ret
push
lret
in
add
jge
xchg
jns
loopne
mov
mov
lock
and
mov
mov
add
jle
adc
popf
lods
movsl
mov
inc
and
mov
mov
mov
imul
inc
fcmovne
cld
loope
add
rolb
popf
and
rolb
mov
jp
pop
mov
bound
mov
pop
outsb
sub
imul
aaa
loope
add
mov
mov
mov
xlat
addb
imul
cwtl
jl
leave
dec
jbe
out
add
and
jno
fs
cmp
mov
lods
bound
mov
fwait
fs
xor
mov
xor
mov
adc
mov
imull
rolb
insl
sti
sbb
les
lds
pop
int3
pop
fwait
xchg
daa
adc
fisubrl
xchg
cld
gs
or
adc
mov
hlt
mov
mov
arpl
flds
sub
mov
enter
adc
outsl
cmp
ja
xchg
sub
mov
sbb
sbb
test
and
gs
out
ja
add
add
ret
mov
loopne
mov
add
mov
add
ffreep
dec
mov
mov
or
adc
xor
hlt
cmp
movsl
jno
sub
push
xchg
pop
outsl
mov
cmp
pushf
push
add
aam
in
fstps
and
jmp
cmpsl
adc
add
mov
mov
add
das
scas
jmp
mov
jl
out
add
mov
or
add
imul
push
sub
int3
imul
mov
push
pop
fcmovnu
cmpsb
mov
add
loope
xchg
loop
mov
cmc
jnp
jnp
mov
mov
ret
xor
mov
mov
xor
mov
add
xchg
test
movsl
add
shll
arpl
and
mov
mov
sub
mov
fsubrs
lock
add
pop
pusha
add
bound
mov
add
arpl
addb
mov
rolb
push
pop
jne
addb
dec
adc
sbb
repz
lods
testb
xchg
xchg
shr
push
je
dec
adc
add
call
mov
repnz
leave
xchg
es
out
cwtl
push
add
adc
mov
addb
mov
add
xchg
adc
mov
test
movd
in
out
add
adc
mov
mov
mov
repnz
mov
nop
add
mov
in
adc
aas
add
jb
mov
stos
iret
jmp
out
repnz
test
cmpsb
adc
and
push
or
add
add
mov
inc
and
or
or
add
stos
or
mov
rolb
mov
jge
out
mov
add
mov
push
icebp
mov
jle
bound
mov
add
mov
testl
mov
mov
xchg
scas
push
clc
ret
js
outsb
xor
mov
fisubrs
int
cmpsl
arpl
add
push
or
jge
inc
lods
ja
pop
adc
pop
xchg
mov
and
mov
cmp
test
arpl
mov
add
and
ud2
iret
adc
mov
add
adc
mov
add
lea
sbb
inc
andl
inc
cs
sbb
mov
sbb
insl
sub
add
jmp
test
lahf
movsl
addr16
add
loop
mov
and
outsb
push
add
outsb
out
hlt
outsl
xchg
int3
sub
inc
jp
sub
mov
lods
xchg
pop
std
aas
negl
add
mov
cs
mov
les
rolb
ficompl
mov
fsubl
add
add
pop
add
mov
add
mov
dec
jno
push
add
adc
mov
sbb
sti
add
mov
jbe
popf
cli
out
cmpl
sbb
push
bound
mov
addb
xor
add
and
add
adc
stos
stos
push
inc
sub
cwtl
ss
add
lahf
pop
push
push
lock
in
int3
xor
inc
loop
mov
loopne
mov
stc
push
cli
inc
pop
pushf
aas
add
mov
rolb
mov
and
mov
iret
pop
pop
pusha
add
lock
add
sti
jmp
arpl
add
gs
mov
add
add
cli
gs
fisubs
cmp
pop
and
mov
push
add
and
hlt
mov
pusha
add
xchg
jl
add
addb
push
add
mov
mov
add
aam
mov
sbb
adc
mov
cltd
and
addb
int
push
sbb
adc
xchg
jp
mov
and
inc
mov
inc
or
sti
push
add
mov
sahf
sbb
add
push
add
ret
push
rolb
mov
adc
sbb
xchg
leave
out
icebp
jne
dec
and
add
add
scas
arpl
mov
dec
and
mov
mov
mov
mov
jl
add
mov
mov
incl
push
xchg
lahf
adc
mov
fucomip
mov
and
mov
fdivrl
mov
add
mov
ss
fld
add
imulb
mov
adc
mov
inc
mov
add
adc
sti
mov
sub
popl
rorl
push
rolb
enter
add
xor
mov
insl
jl
push
mov
lods
popf
mov
addr16
nop
add
xchg
add
dec
lret
jmp
adc
mov
sbb
and
mov
xchg
in
das
sbb
sub
cmp
rolb
mov
fldenv
add
sub
aas
jg
or
or
insb
pop
jns
add
mov
add
add
inc
ret
out
outsb
xchg
add
repnz
cltd
mov
mov
dec
mov
mov
or
sbb
repnz
mov
mov
scas
scas
mov
mov
xor
mov
pop
ss
stos
add
mov
iret
sub
or
pop
dec
or
outsl
jns
mov
jle
mov
es
add
mov
add
xor
mov
push
ret
lcall
sbb
add
ret
mov
jnp
mov
mov
mov
jb
mov
fildll
cmpsl
test
inc
add
mov
rolb
mov
sub
stc
adc
mov
mov
sahf
ret
adc
jle
cmp
push
call
add
rolb
mov
fcomp
mov
add
pop
xor
and
insl
sbb
add
int
mov
or
or
push
add
jne
pop
lock
out
out
pop
jl
add
pop
mov
cmp
aaa
js
add
mov
loop
mov
mov
call
add
add
addb
or
fadd
add
repnz
jp
sub
sti
xchg
jp
lahf
imul
add
call
add
xchg
add
pop
sbb
add
xor
sti
ljmp
mov
adc
and
leave
aad
cwtl
and
mov
stos
incl
add
add
xchg
add
add
add
mov
das
xor
mov
bound
mov
mov
mov
mov
fnstsw
mov
pop
cmp
aam
jae
cltd
mov
cmp
inc
push
in
in
inc
loopne
mov
adc
dec
stos
mov
lods
mov
mov
inc
outsl
xchg
dec
lret
dec
loop
mov
push
addb
sbb
sub
in
add
subl
mov
cltd
cltd
xchg
loope
lods
icebp
and
mov
cmp
mov
js
mov
add
adc
jg
je
lret
mov
mov
cmpsb
ret
pop
jle
add
cmpsl
dec
adc
mov
and
add
in
push
add
repz
add
dec
daa
mov
lret
push
out
add
rep
pop
testb
mov
xlat
sbb
hlt
or
aas
out
fdivs
leave
fiadds
mov
fisubrl
cmpsl
fstps
add
mov
xchg
xchg
lods
push
pop
mov
pusha
add
mov
pop
lock
mov
inc
ficompl
add
scas
cld
stc
mov
jg
add
daa
stos
cwtl
clc
out
add
scas
dec
movsb
test
sahf
mov
jmp
xchg
inc
jb
mov
inc
add
inc
xchg
and
push
add
add
add
mov
ret
arpl
xor
adc
scas
fmul
xor
mov
rorl
add
aaa
dec
mov
pushf
outsb
mov
int3
push
pop
xor
sub
dec
out
scas
fs
and
add
mov
add
inc
add
ror
push
add
mov
cwtl
inc
add
sbb
out
jbe
es
add
std
rolb
mov
inc
push
and
mov
out
clc
dec
in
cmc
mov
mov
and
mov
or
rolb
mov
mov
add
bound
mov
sti
and
push
sbb
addb
mov
mov
mov
daa
js
loope
sub
sti
pop
icebp
and
mov
cmp
mov
inc
add
inc
push
loope
insl
cld
in
fbld
and
or
addb
stos
aas
sbb
add
mov
add
lahf
mov
add
mov
add
sub
push
mov
loopne
mov
fcmovne
dec
add
addr16
dec
cmp
loope
dec
inc
shll
cmp
pop
jle
inc
add
dec
lea
add
divl
add
mov
add
xchg
rolb
das
test
je
int
xor
sbb
div
mov
paddusw
xchg
clc
cmp
push
bsf
or
pop
stos
arpl
ret
divb
imul
add
or
in
sbb
mov
aam
pop
stos
and
mov
jb
mov
add
and
mov
mov
jo,pn
mov
mov
add
sbb
sbb
add
mov
js
xor
mov
inc
cmc
xor
outsb
mov
add
mov
pop
push
stos
imul
mov
mov
add
movsb
faddl
ss
rolb
mov
fidivrl
fidivs
push
inc
int3
mov
mov
mov
mov
cmp
add
mov
popa
ds
mov
add
js
sbb
add
and
mov
add
out
and
xchg
ja
imul
add
push
adc
mov
mov
addr16
rcrl
jbe
mull
and
mov
andl
rcrl
add
fists
mov
out
dec
inc
add
out
mov
int
into
pop
or
fwait
jno
add
loop
mov
mov
xchg
insb
rolb
mov
icebp
fidivrl
mov
fsubl
dec
ficompl
int
jp
and
out
pop
push
les
int
pop
aas
push
rolb
mov
into
xor
dec
push
ds
out
arpl
add
mov
lahf
int3
pop
xchg
adc
mov
jg
add
mov
popf
mov
mov
add
jle
cmp
mov
mov
sti
fcmovu
fs
lods
add
mov
aam
add
cmpsl
mov
xor
dec
pusha
add
add
sarl
repz
mov
add
sub
aam
mov
cmp
js
add
cmc
mov
mov
dec
xchg
mov
add
aad
notl
jp
mov
shll
jle
in
mov
mov
rolb
inc
add
or
xor
test
loop
mov
jge
outsb
ljmp
jnp
add
jo
mov
jb
mov
dec
aas
cmp
xchg
aas
sbb
lds
cmp
add
lahf
xchg
mov
xchg
add
cmp
das
in
push
jp
test
add
add
lock
repz
mov
push
inc
add
add
mov
mov
add
or
jae
loop
mov
inc
xchg
shrl
pop
repz
push
daa
lret
push
fwait
stos
and
pop
lods
gs
mov
add
xchg
add
adc
mov
mov
cmpsl
inc
in
cmc
and
mov
mov
adc
inc
enter
test
cli
pop
lods
loopne
mov
mov
mov
les
mov
ret
lea
push
js
adc
mov
fstl
std
or
shll
rolb
lods
daa
dec
test
cli
cmpsb
sarl
jb
mov
inc
xchg
mov
add
add
add
add
mov
mov
mov
add
mov
add
add
mov
cwtl
jmp
sti
je
add
adc
aad
adc
rolb
mov
jl
add
push
add
pop
pop
lods
mov
movsb
adc
mov
inc
add
mov
popl
add
mov
in
xor
add
add
push
lret
sub
out
xchg
add
sbb
sbb
iret
addr16
add
push
mov
xor
mov
sbb
call
jle
and
sub
sbb
stos
pop
mov
push
addb
aam
lret
mov
ja
add
mov
stos
sti
or
mov
add
mov
sahf
loop
mov
scas
stc
jo
mov
mov
add
adc
aas
xchg
inc
mov
adc
outsb
rolb
mov
mov
sbb
pop
aam
gs
sbb
xchg
js
pop
cmp
fisubrl
adc
jae
lret
ds
mov
inc
and
xchg
sti
and
mov
and
ret
rcll
shrl
add
pop
mov
add
mov
dec
sti
cmpsl
dec
stos
mov
insl
into
jbe
add
fcmovb
xchg
add
aad
inc
add
mov
aam
out
jg
sbb
mov
push
jge
or
sahf
je
repz
repnz
mov
sbb
mov
lock
lds
add
call
mov
add
loopne
mov
icebp
outsl
push
dec
lcall
lcall
jmp
add
cmp
jg
push
pop
push
add
incb
add
add
pop
jb
mov
lea
je
arpl
rolb
mov
out
jbe
add
or
and
mov
mov
xchg
mov
fldt
add
cmpsb
mov
dec
pop
bound
mov
sbb
sub
decb
cmc
jnp
gs
mov
pop
cmpsb
jg
mov
and
mov
movl
push
test
mov
js
fcmovne
lret
add
mov
jp
mov
sti
jne
xor
mov
xor
lds
mov
and
mov
leave
and
mov
add
notb
mov
addb
inc
data16
test
add
call
jge
or
xchg
cmp
add
test
hlt
repz
icebp
mov
add
mov
push
mov
mov
sbb
add
das
test
loop
mov
lods
out
xor
aam
add
mov
add
pop
cmpsl
imul
repz
add
mov
pop
fmuls
add
in
or
fstpl
jmp
jmp
out
or
add
add
mov
xchg
fcmovnb
lcall
lret
ds
jmp
call
mov
and
mov
xchg
repnz
jecxz
mov
xchg
int
out
shll
xchg
xchg
add
dec
sub
aam
int3
mov
inc
add
or
adc
je
movsl
sub
or
rcr
and
sub
fmul
or
ffree
popa
in
out
int3
cmpsb
out
mov
add
jno
dec
das
jmp
pop
sar
popa
and
add
stos
movsb
movsl
sbb
aaa
lret
adc
test
pop
loopne
mov
mov
jle
in
inc
cmpsb
dec
imul
mov
sti
mov
aad
fbstp
mov
push
mov
push
xchg
in
rolb
mov
ja
inc
jae
jne
push
ss
aad
mov
cld
out
add
rolb
mov
mov
xchg
les
add
jae
cmc
cmp
add
fidivs
ret
rolb
mov
fs
add
sub
mov
mov
and
mov
jae
add
add
or
daa
pop
jg
out
addr16
sahf
fsubs
add
arpl
xlat
xchg
stos
fidivrs
lods
pop
inc
add
mov
add
push
add
mov
sub
ss
lret
lds
js
jne
mov
and
mov
sarl
je
or
mov
loop
mov
add
mov
jl
or
rolb
mov
andl
and
cs
jl
stos
aas
add
dec
cmp
mov
mov
insb
pop
mov
xchg
xchg
xchg
fstl
das
testb
mov
icebp
add
mov
sbb
into
bound
mov
loop
mov
inc
add
push
jl
add
mov
mov
arpl
mov
lea
add
ds
ds
cmc
je
stc
pop
test
mov
or
push
cmp
pop
cwtl
in
aaa
pushf
inc
int
adc
mov
mov
add
mov
add
out
int
adc
repz
add
mov
add
jecxz
and
add
cmp
push
int3
sbb
mov
mov
jo
mov
mov
repnz
insb
add
mov
dec
xchg
add
cmp
pop
sbb
aad
addb
inc
lds
cmp
mov
add
sbb
mov
adc
add
mov
inc
sub
cltd
out
lea
xchg
add
adc
add
addb
and
into
mov
cmp
das
fmul
inc
sbb
mov
add
pushf
mov
adc
mov
insl
jo
mov
sahf
or
loopne
mov
clc
xor
test
sbb
and
add
mov
jnp
add
mov
cltd
mov
inc
xor
mov
push
add
add
xor
mov
add
mov
insb
pop
dec
pop
xlat
sub
add
cmc
and
mov
add
loopne
mov
mov
add
mov
stos
mov
xchg
adc
loopne
mov
xchg
test
add
mov
sti
fldl
inc
dec
cmp
std
inc
xor
push
inc
mov
mov
mov
mov
cmc
xchg
add
push
imulb
pop
mov
stos
fidivs
ss
mov
iret
inc
fs
mov
sbb
frstor
add
mov
ss
sarl
in
lds
dec
push
mov
add
xchg
push
push
and
cli
fisttps
pop
imul
add
adc
mov
add
push
inc
add
sub
sub
mov
add
pop
add
pop
cli
jae
sbb
mov
add
jge
push
test
loopne
mov
cwtl
or
mov
pop
jp
ss
xor
mov
mov
in
test
xchg
scas
out
leave
ret
addb
dec
mov
cs
and
mov
add
lock
mov
or
rolb
inc
mov
jo
mov
cmp
std
mov
inc
add
jo
mov
sbb
mov
mov
push
out
iret
iret
sub
outsl
xor
mov
push
lods
xor
pop
lock
mov
cli
movsb
pusha
add
cmp
jno
rolb
mov
mov
mov
adc
cmpsl
pop
mov
daa
add
mov
repnz
aam
adc
int
jmp
mov
aaa
in
iret
shr
lret
or
pop
adc
or
xchg
jmp
mov
fs
fcmovne
insl
rcrl
dec
imul
subl
pop
push
xchg
inc
mov
adc
sub
or
add
cli
push
push
add
inc
in
stos
mov
test
inc
add
add
mov
rolb
insl
mov
mov
mov
addb
clc
xor
sub
inc
inc
add
aas
xlat
rolb
mov
lahf
push
ror
jle
clc
lret
rolb
mov
inc
jne
add
jbe
popa
adc
mov
or
mov
daa
sub
add
ficoms
in
stos
rcll
mov
mov
fidivl
xchg
fiadds
inc
stos
jp
stos
ficoms
add
push
cltd
shrl
jecxz
cld
xor
cmp
jg
jnp
in
inc
insb
dec
call
sbb
add
fwait
lea
jbe
push
add
mov
es
and
or
add
mov
mov
imul
sbb
cwtl
je
cmp
add
add
mov
jns
int
incb
mov
mov
loop
mov
pop
dec
push
rolb
mov
add
add
stos
jecxz
push
pop
adc
cmp
mov
in
add
ds
mov
push
ss
arpl
push
lcall
mov
sub
mov
sub
fwait
push
add
movsb
xor
bound
mov
push
add
adc
inc
add
fdivrs
adc
mov
lods
or
push
hlt
mov
fstl
xchg
and
inc
add
pop
loopne
mov
add
addr16
jne
mull
outsl
mov
mov
jne
rolb
mov
lea
or
cmp
test
add
xchg
add
xlat
inc
negl
insb
inc
pop
jb
mov
sub
test
add
pushf
jmp
rolb
mov
rolb
mov
lods
ficomps
jl
and
mov
jbe
cmp
pop
xchg
and
arpl
cmp
mov
add
or
stc
out
sti
loop
mov
xchg
test
fwait
rolb
mov
sbb
cmpsl
dec
cmp
aam
add
in
and
mov
mov
mov
add
add
mov
pop
in
fldl
jo
mov
fldl
sbb
add
mov
or
pop
aaa
mov
mov
mov
xchg
mov
mov
cmp
add
jle
mov
xor
sbb
add
jmp
add
in
add
xor
mov
mov
add
lahf
mov
outsb
dec
jle
sub
mov
negb
fstpl
add
xchg
mov
mov
jp
lods
enter
mov
add
sub
pop
push
dec
add
or
arpl
stc
loope
fidivl
daa
mov
popa
jge
cmp
xor
loope
outsl
xchg
and
adc
arpl
pushf
data16
mov
add
mov
add
arpl
mov
xchg
sbb
iret
pop
inc
add
add
xchg
add
inc
add
mov
mov
add
add
mov
add
scas
addb
pop
add
mov
mov
ret
lcall
outsb
mov
cli
and
xlat
adc
add
add
mov
add
add
aad
mov
dec
std
arpl
sub
rolb
mov
mov
loopne
mov
add
addl
mov
aam
into
mov
mov
dec
pushf
adc
mov
push
xor
add
xor
fcomps
adc
mov
mov
add
pop
mov
iret
and
mov
data16
stos
mov
in
aad
fdivr
imul
mov
jo
mov
outsb
sahf
ss
fldenv
mov
mov
mov
jne
lret
xchg
push
push
xor
and
mov
das
inc
enter
dec
xchg
cltd
xchg
mov
mov
leave
outsl
and
scas
lds
dec
dec
dec
cmp
xlat
loopne
mov
das
popf
mov
push
jns
into
mov
add
cmp
pop
insl
jno
loope
rolb
mov
lret
inc
inc
mov
pop
dec
mov
scas
lds
lods
test
sub
mov
mov
mov
fcoml
fmuls
xchg
mov
fldenv
inc
daa
movsb
gs
mov
cmc
cmc
popl
pop
sbb
add
adc
mov
arpl
push
add
pop
sbb
add
mov
xchg
push
jge
or
mov
add
lock
loope
dec
add
mov
dec
dec
pop
xchg
cmp
sbb
lods
sbb
lds
cmp
fisttpl
inc
add
ss
decb
lds
iret
fmul
xor
ret
adc
in
xor
mov
scas
pushf
pop
xchg
add
fucomp
call
insb
lret
inc
add
pop
cmp
add
mov
xor
mov
data16
inc
add
aas
rolb
mov
add
stos
mov
fnstcw
lds
add
or
imul
stos
imulb
and
mov
add
mov
or
in
mov
mov
mov
jb
mov
inc
fldl
add
push
aas
add
mov
aas
test
adc
add
in
cmp
push
add
mov
lods
dec
pop
push
sar
repnz
adc
stc
repz
dec
out
stc
sub
adc
js
jg
enter
xchg
mov
addb
cmp
mov
test
mov
cmpsb
ss
inc
sbb
out
je
add
xor
mov
push
push
jmp
iret
pop
repnz
xchg
add
faddp
cwtl
ja
and
add
les
enter
inc
add
nop
add
stos
std
loop
mov
daa
mov
daa
popf
gs
lret
inc
into
add
adc
sub
sbb
pop
mov
hlt
jno
mov
into
and
mov
lcall
and
xchg
push
dec
sbb
test
iret
sub
sbb
fdivr
popl
xchg
and
mov
sbb
in
std
negb
sahf
test
dec
dec
out
movsl
adc
roll
outsb
cs
js
lock
je
jno
mov
jb
mov
sbb
or
les
xchg
outsb
das
fistps
add
fsubrs
or
add
xor
mov
loop
mov
pop
and
xchg
add
mov
sti
push
add
mov
sub
mov
mov
insb
xchg
add
push
sub
stos
or
dec
push
arpl
insb
call
add
in
add
mov
xchg
test
and
sbb
cmp
fcompl
test
les
test
sbb
push
add
push
out
addb
mov
in
add
add
pop
stos
scas
icebp
and
cli
cmp
clc
stos
sbb
sub
cmp
push
lret
test
xlat
mov
add
std
push
mov
cs
inc
add
rolb
mov
mov
sbb
dec
cmp
pop
into
jbe
loope
pop
movsb
andl
and
push
add
mov
xchg
jmp
add
mov
add
dec
pop
test
pusha
add
mov
mov
add
pop
pop
mov
mov
inc
add
cwtl
inc
std
add
mov
pop
rolb
mov
roll
out
xchg
mov
mov
jb
mov
daa
mov
mov
sub
add
mov
mov
mov
jns
test
pop
ss
sub
jmp
jno
jg
rorl
out
add
push
add
cli
lret
pop
dec
into
pop
rolb
mov
test
out
cmp
mov
jno
mov
mov
aaa
mov
or
mov
mov
ljmp
into
repnz
mov
jbe
sub
mov
jbe
mov
cltd
mov
arpl
inc
add
mov
mov
adc
sub
enter
ja
xor
add
int3
sub
xor
popl
loope
add
mov
add
ret
mov
cmc
cmp
cmp
or
add
int3
push
adc
in
or
cmp
push
add
dec
int3
jbe
mov
leave
aas
sub
add
xor
loope
xchg
add
int3
mov
fwait
hlt
mov
xor
dec
push
cmp
xchg
add
int
adc
push
mov
mov
pop
xchg
andl
add
mov
add
push
lcall
and
add
mov
xchg
xlat
rolb
mov
add
mov
push
xor
mov
add
scas
repz
mov
or
nop
add
mov
add
xor
mov
icebp
hlt
mov
sbb
add
mov
sub
test
add
xor
inc
lods
js
add
sbb
mov
add
sbb
cmpsb
aad
dec
cmp
lret
mov
in
push
add
clc
or
mov
insb
gs
pop
dec
mov
pop
push
test
pop
xchg
aam
lcall
cmpsb
xchg
add
cmp
sbb
and
mov
add
mov
cmpsl
ja
out
cmp
fmul
stos
stos
mov
add
mov
insb
xchg
mov
jge
mov
inc
out
and
mov
inc
addr16
test
lock
rol
mov
dec
mov
fsubrs
out
cmp
mov
stos
sub
xor
mov
mov
jnp
mov
mov
fcmovnb
mov
addr16
mov
mov
jno
mov
popf
gs
mov
and
scas
sbb
jle
fucomp
stos
pop
in
in
mov
jne
imul
into
inc
stc
lret
push
add
add
push
or
add
add
stos
in
test
mov
add
inc
push
mov
push
fmuls
sbb
pop
arpl
add
pop
cmc
sbb
into
pop
or
in
shrl
lret
cmc
push
jmp
mov
add
mov
mov
lock
in
dec
ds
cmc
aaa
pusha
add
add
insb
or
mov
maxps
push
add
out
cmp
stos
movsl
insl
inc
addb
xchg
adc
mov
add
add
pop
push
les
mov
pop
das
xchg
cmpsb
jnp
clc
hlt
jne
jne
out
mov
popf
inc
add
mov
sahf
pop
pushf
push
mov
test
add
pop
aad
out
jo
mov
push
rolb
dec
adc
in
popf
imul
lcall
add
add
fcompp
cli
clc
pop
insb
mov
dec
mov
jl
bound
mov
into
fs
lods
inc
xor
pop
addr16
and
mov
in
sbb
jb
mov
neg
je
mov
ret
je
add
mov
mov
mov
add
pop
jns
add
cld
imul
rolb
mov
fldcw
or
mov
mov
insl
sahf
ja
mov
clc
aad
popf
ja
add
pop
pop
loopne
mov
add
xor
jp
add
pop
lahf
add
mov
cmp
rcll
pushf
add
xchg
dec
dec
cmp
addb
mov
enter
cmp
lahf
scas
fsubr
sbb
add
addr16
sbb
in
inc
stos
jnp
sti
inc
xor
or
mov
mov
clc
mov
rorl
jno
jbe
jmp
out
push
add
mov
add
or
xchg
inc
xor
xor
add
pop
xchg
mov
movsl
jae
ss
and
dec
adc
inc
add
fmuls
adc
mov
mov
mov
xor
mov
int3
decl
int3
std
mov
cmp
js
cwtl
mov
mov
add
mov
add
addl
mov
add
jae
popa
xchg
cmc
lahf
jns
out
sbb
mov
movsl
and
mov
rolb
mov
xchg
pop
popf
addb
rolb
outsb
pop
sub
inc
add
add
mov
xor
add
push
pusha
add
test
adc
or
add
xchg
ss
add
pop
dec
mov
xor
mov
jae
lds
push
rolb
inc
mov
faddl
sub
push
int
mov
mov
rcr
cmpsb
mov
inc
push
add
xchg
std
ret
in
and
les
and
add
cmc
and
pushf
es
and
hlt
and
add
add
push
fidivs
add
es
add
adc
fstpl
notl
and
mov
test
dec
sbb
mov
add
add
or
decb
and
pop
or
or
mov
ret
movsb
inc
add
lahf
cmp
insb
pop
or
insl
mov
daa
jmp
ljmp
mov
inc
xor
mov
adc
aad
arpl
mov
cwtl
dec
add
ss
pop
or
es
mov
movsb
std
fidivs
ret
dec
pushf
inc
mov
in
pop
pop
loop
mov
sbb
stc
inc
add
sub
add
xchg
add
inc
bound
mov
add
mov
std
cld
push
cmc
ljmp
mov
loop
mov
jne
rorl
js
stos
pop
dec
sbb
out
sbb
jno
iret
cmp
imul
into
and
mov
mov
clc
icebp
into
addb
shl
mov
mov
xchg
inc
add
mov
addb
cmp
aam
jge
xor
and
mov
sbb
aas
mov
mov
pop
lret
add
mov
cmp
mov
sahf
inc
add
scas
jge
lds
xchg
add
leave
imul
lods
cltd
cmp
or
mov
scas
inc
mov
inc
cmp
lcall
mov
mov
fwait
das
or
pop
xchg
pop
rolb
mov
add
pop
scas
mov
mov
lret
sub
jmp
jo
mov
insl
mov
add
bound
mov
sbb
cmc
aaa
lock
loope
mov
push
dec
add
adc
add
sub
test
inc
cltd
push
cmc
test
jmp
bound
mov
add
add
adc
in
movl
xchg
movsl
notb
rolb
mov
imul
lcall
push
aad
ret
mov
cmp
out
ljmp
push
bound
mov
dec
rorl
mov
dec
cmc
addb
cmpsl
mov
add
imul
mov
mov
and
test
cwtl
jbe
and
sub
sub
xor
nop
add
xor
mov
xchg
lds
add
cmpsb
xor
dec
adc
add
add
mov
or
cmp
aaa
imul
out
sbb
xor
out
jns
add
das
sub
jns
in
lods
push
add
sbb
mov
bound
mov
mov
shll
loope
or
ret
mov
cmc
adc
pop
jne
jp
in
mov
es
sbb
mov
insl
mov
pushf
call
mov
mov
into
in
jo
mov
sub
add
or
mov
sub
popfw
es
ja
dec
dec
xor
mov
cmp
popf
xchg
add
pop
mov
xchg
mov
stc
mov
cmc
pop
pop
mov
cwtl
rolb
pop
ret
push
jge
out
sbb
sub
add
popa
mov
les
bound
mov
add
xchg
fstpl
and
add
add
add
xchg
mov
fldt
popa
xor
add
add
add
add
mov
loope
loopne
mov
or
xor
add
mov
ja
and
lock
sbb
xor
mov
xchg
push
mov
std
loop
mov
sbb
jnp
aas
mov
bound
mov
mov
mov
add
jae
rolb
mov
mov
in
lock
pusha
add
mov
pop
mov
fisttpll
scas
sbb
jnp
icebp
ror
mov
pop
push
stos
xchg
hlt
pushf
sub
or
mov
dec
stos
push
sbb
cmp
add
add
aas
bound
mov
mov
add
repnz
mov
subl
mov
add
repz
ficoml
pop
xchg
add
int3
push
cmc
fildl
add
inc
xchg
lods
xlat
bound
mov
push
ret
and
mov
lahf
adc
mov
add
add
pop
cld
push
xchg
call
inc
add
jo
mov
push
xchg
push
mov
and
push
push
faddl
das
push
cmpsw
dec
in
mov
mov
sbb
shl
cs
rolb
sbb
fwait
jae
ficoml
xchg
add
rolb
mov
or
add
adc
mov
and
movsb
fcompl
push
cmp
movsl
and
add
add
push
enter
add
leave
in
or
mov
add
adc
in
pop
mov
xchg
loopne
mov
sub
cmp
mov
mov
push
add
ljmp
jmp
add
add
pop
cmpsl
fidivrs
mov
push
jg
mov
mov
cmc
loopne
mov
and
mov
mov
inc
adc
mov
addb
lods
scas
pop
xchg
add
insb
sub
adc
sub
in
cmp
dec
sti
test
inc
int
repz
cs
leave
cmpsb
adc
mov
out
jmp
add
add
ljmp
aaa
leave
cmp
movsb
daa
xchg
add
add
xor
mov
add
add
ljmp
add
add
cli
dec
rcll
inc
adc
imul
mov
adc
add
add
jae
dec
fnstsw
scas
push
add
add
clc
adc
add
cs
aam
pop
insb
out
ss
jecxz
adc
or
das
negl
mov
dec
jmp
xor
fisttps
test
fstps
and
dec
inc
pop
adc
mov
dec
imul
mov
lock
jne
cld
adc
mov
add
adcl
add
xlat
int
mov
dec
xlat
outsl
adc
cmp
lea
fidivrs
inc
shll
jbe
mov
mov
lahf
pop
scas
fmuls
ss
mov
mov
cmpsb
dec
sub
lods
jecxz
ljmp
mov
add
adc
mov
add
icebp
fcoms
test
mov
sbb
hlt
add
mov
mov
push
pop
xchg
daa
data16
mov
mov
pop
test
mov
in
addb
repnz
iret
ret
notb
fstp
pop
aas
sub
xorl
and
aas
dec
int3
push
cltd
adc
mov
and
sbb
and
mov
aam
mov
cmpsl
mov
je
push
addb
adc
addb
jg
repnz
push
add
mov
mov
mov
add
sarw
cmp
jno
test
push
in
pop
imul
push
fwait
test
popa
mov
mov
mov
sub
out
sub
xrstor
insb
out
mov
sbb
jecxz
adc
jnp
push
mov
mov
push
mov
add
mov
add
popa
loop
mov
mov
sbb
das
aas
notb
mov
sub
push
add
adc
cmpsb
je
xchg
lret
push
xchg
loope
and
add
xchg
mov
pusha
add
clflush
lahf
pop
mov
cld
xchg
outsl
pop
push
push
add
add
sahf
aas
xor
cld
xchg
mov
add
fcoms
sub
add
addr16
add
roll
add
inc
jle
in
mov
mov
add
sub
mov
cmp
add
mov
add
add
push
pop
mov
mov
mov
mov
sub
out
push
mov
cmp
sbb
lock
mov
xchg
rolb
mov
jg
push
and
daa
push
adc
mov
testl
mov
mov
fdivs
mov
jbe
pop
or
mov
aad
and
mov
mov
cmc
cmpsl
lcall
dec
je
jnp
rolb
mov
lea
xor
adc
mov
decl
adc
dec
mov
jp
add
push
pop
push
sbb
add
lock
mov
outsl
xchg
add
mov
mov
leave
js
add
aaa
enter
and
pusha
add
rolb
in
xor
push
and
mov
test
pop
lods
xor
mov
mov
mov
xlat
popl
add
std
jns
jb
mov
pop
icebp
scas
cmp
ljmp
lcall
out
lahf
bound
mov
es
addr16
subl
stc
icebp
add
mov
xchg
add
mov
push
add
ret
dec
addb
ret
xor
mov
aaa
xor
pusha
add
rcll
cmp
pop
outsl
add
stos
fcomps
jne
out
test
cmp
inc
sbb
mov
add
mov
adc
mov
pushf
or
sbb
sub
push
sub
add
sahf
xor
scas
sbb
push
push
sub
loopne
mov
xor
mov
add
cmpsb
test
xchg
and
dec
icebp
movsl
sti
bound
mov
add
andl
add
mov
lods
push
mov
popf
pop
mov
pop
mov
mov
jns
xchg
in
scas
push
xchg
adc
addb
jbe
add
stc
inc
pop
add
add
loope
add
popf
gs
addb
lcall
xor
mov
cmp
sbb
adc
add
add
mov
dec
daa
out
sbb
pop
adc
loope
add
mov
mov
push
and
push
add
add
cmc
addb
aaa
mov
and
mov
pop
lret
roll
scas
push
mov
add
inc
pusha
add
pop
adc
mov
aad
add
dec
inc
mov
mov
imul
inc
add
inc
sub
add
mov
pushf
fstps
xor
addb
mov
sub
ret
in
ret
sub
or
aad
jne
jl
jecxz
and
pop
daa
iret
cmc
repnz
add
mov
mov
fimuls
jno
add
or
jno
movsl
add
mov
loop
mov
and
lods
pusha
add
mov
add
mov
mov
mov
push
push
pop
dec
in
sbb
fistpll
jl
mov
xor
mov
mov
push
lea
add
push
pop
enter
lods
into
dec
xchg
mov
in
pop
mov
bound
mov
cmpsb
dec
lds
mov
adc
lods
test
jecxz,pn
mov
int
sub
add
jae
aad
test
mov
pop
insb
out
inc
sub
add
mov
mov
xchg
mov
mov
mov
xor
add
mov
add
rolb
mov
arpl
mov
add
jg
loopne
mov
lock
int3
add
scas
dec
test
scas
mov
loopne
mov
inc
mov
in
nop
add
out
xor
lods
int
adc
cmp
mov
mov
sub
mov
int3
test
das
dec
mov
add
test
das
outsl
push
push
mov
sbb
addr16
mov
outsb
xor
arpl
dec
imul
and
mov
jmp
sub
je
inc
incb
sub
cmpsb
in
add
inc
movsb
lcall
cmp
jecxz
jo
mov
into
pop
jmp
pop
or
add
ljmp
push
jmp
push
add
rolb
mov
add
cmp
sub
add
in
pusha
add
insl
mov
cmp
out
xchg
movsb
fiadds
loopne
mov
inc
push
dec
rolb
mov
stos
push
or
je
dec
mov
ds
or
iret
adc
lret
sbb
add
pop
mov
add
aaa
xor
add
add
mov
add
fprem1
xor
mov
mov
push
pop
mov
add
adc
clc
shll
das
outsb
adc
or
add
add
out
lahf
ds
addb
and
scas
notb
add
cld
mov
add
pop
cmp
mov
add
mov
cmp
mov
mov
fwait
dec
gs
dec
fnstenv
rcl
jmp
imul
mov
push
jno
sub
decb
pop
lahf
push
and
mov
sub
aad
arpl
cmpsb
lret
add
mov
mov
push
lcall
jge
in
lods
add
add
std
inc
aaa
mov
es
outsl
adc
lea
mov
add
add
rcrl
add
cmp
inc
add
mov
mov
add
mov
add
mov
jl
mov
add
mov
add
pop
out
inc
add
or
out
mov
adc
push
in
iret
in
pusha
add
aaa
xchg
push
lds
and
mov
sti
pop
push
ja
jne
add
cwtl
loopne
mov
enter
imul
aam
xchg
cld
stc
popf
and
mov
popf
int
mov
sbb
mov
xor
xchg
add
cmpl
prefetcht1
lea
xchg
sub
leave
fsubl
mov
inc
add
addb
or
add
add
lods
das
fcoml
fsubl
aas
addb
pop
xor
mov
mov
test
add
add
add
push
stos
mov
aam
mov
adc
mov
pop
sub
outsb
nop
add
mov
jmp
add
add
repz
inc
lret
fsubl
xor
pop
adc
mov
insb
add
mov
dec
pop
addb
das
nop
add
into
into
cwtl
out
filds
lcall
sub
sub
pop
sahf
push
add
or
add
xor
mov
add
pop
cli
cmpsb
or
add
lea
mov
sub
cmpsb
and
imul
add
fwait
mov
scas
mov
mov
xchg
scas
push
lea
add
fistpll
les
mov
or
adc
fdivr
insb
cltd
pop
shrl
pop
xor
mov
push
enter
fists
out
cmpsb
out
repnz
test
pop
in
and
mov
clc
jb
mov
add
fmull
cmp
mov
xlat
pop
pop
dec
mov
mov
imul
mov
adc
add
pop
xchg
dec
jmp
pusha
add
mov
fimuls
loope
dec
aad
pop
or
xor
and
jecxz
sbb
cld
jp
int
jmp
jbe
xchg
fs
pop
loope
add
imul
mov
add
or
adc
add
mov
mov
dec
mov
add
sub
lahf
ucomiss
push
ja
sahf
addb
ret
and
mov
or
xor
sub
add
out
out
mov
enter
dec
lds
mov
push
add
sbb
xor
mov
mov
cmpsb
fldcw
gs
mov
dec
adc
add
dec
jne
test
js
lods
clc
nop
add
sarl
add
pushf
arpl
mov
xchg
dec
scas
ja
out
pop
cmp
in
movsb
pop
fstps
sti
jno
ss
into
addb
out
cld
mov
mov
stos
sbb
insb
push
arpl
movsb
test
add
inc
inc
and
mov
ja
add
mov
inc
add
jg
pop
aaa
pop
ds
cmovg
mov
ret
pop
addb
loope
push
jp
lahf
adc
mov
pop
bound
mov
fdiv
mov
shr
sti
mov
insb
cmp
arpl
rcrl
sub
sbb
mov
push
push
sub
pop
jg
test
xchg
rcr
add
mov
add
add
rolb
mov
repz
cltd
mov
rolb
or
mov
addb
add
test
imull
in
add
mov
inc
lock
add
mov
mov
add
daa
repz
cmp
sub
sub
leave
addb
jns
loope
pop
fcomp
outsl
push
jmp
dec
popf
cmp
cmp
xchg
in
call
sub
and
mov
out
out
scas
pusha
add
push
adc
mov
ss
sbb
add
vaddsd
mov
sbb
out
add
mov
ret
roll
mov
xor
enter
shll
mov
and
out
rolb
mov
pusha
add
js
add
pop
xchg
cmc
scas
outsb
cwtl
lea
push
jle
pop
inc
mov
sbb
les
push
dec
jnp
add
scas
cmp
mov
mov
mov
inc
cmc
jb,pt
mov
sub
addb
xor
mov
pop
lret
into
fisttpl
and
cs
push
int3
xchg
add
fbld
mov
xlat
in
das
sub
xor
mov
notb
cld
mov
mov
dec
cmp
add
cmp
jo
mov
add
imul
out
loope
test
cmp
lods
das
jl
dec
sbb
add
insl
or
push
sbb
mov
and
mov
fcoms
lcall
add
mov
push
mov
dec
mov
pop
sbb
mov
ss
imul
xor
mov
stos
jle
sbb
jo
mov
sub
inc
cld
hlt
push
add
mov
insb
lcall
sti
inc
add
scas
call
mov
push
fidivrl
inc
sub
add
and
pop
pop
out
add
mov
add
mov
add
inc
add
inc
add
jo
mov
daa
push
add
and
inc
repnz
sti
dec
aas
imul
clc
jl
sti
push
pop
dec
mov
iret
ret
sbb
push
fcoms
mov
mov
jmp
int
rolb
mov
ret
xchg
clc
inc
enter
inc
daa
ss
pop
addb
cwtl
inc
xchg
mov
add
mov
mov
into
push
rolb
sbb
add
xor
or
stos
mov
mov
sbb
dec
pop
jmp
mov
fstpl
jle
hlt
pop
lahf
xlat
mov
out
push
push
xor
lea
mov
rolb
mov
dec
push
outsb
or
cmp
add
mov
push
dec
sahf
addb
sbb
add
out
cltd
addb
std
sbb
add
add
addb
or
add
sbb
cltd
stos
enter
xchg
rcrl
push
sti
push
jle
mov
dec
inc
push
add
mov
push
add
mov
mov
scas
js
add
mov
add
mov
fdiv
add
lods
mov
sbb
jb
mov
mov
repz
add
mov
out
inc
enter
mov
jns
push
add
add
mov
ret
sbb
mov
adc
dec
inc
out
imul
sbb
lret
icebp
mov
mov
dec
mov
insl
adc
mov
xchg
mov
std
mov
out
and
mov
adc
and
mov
add
add
mov
add
fiaddl
sub
mov
add
outsb
jno
add
mov
scas
idivl
add
outsl
stos
in
xchg
sahf
fdivr
repz
push
add
mov
stc
icebp
pusha
add
add
and
sub
add
push
aam
jno
and
mov
pop
add
mov
xor
mov
in
push
add
imul
out
cltd
pop
rcll
mov
mov
enter
stos
in
aaa
aam
lea
mov
insb
xchg
add
call
loope
pop
lcall
cmpsl
aam
popa
xor
add
arpl
fsubrs
test
lahf
pop
sbbl
aad
add
mov
cmpsl
in
loop
mov
testb
inc
mov
mov
fcomps
add
dec
add
mov
fcoms
fwait
insl
test
add
cli
rolb
mov
shll
adc
add
cltd
mov
mov
movq
mov
repnz
ret
mov
push
gs
cmp
add
mov
dec
add
dec
pop
pop
out
dec
inc
pop
aad
add
cli
pop
testl
push
insl
mov
or
mov
cmp
in
lods
mov
int3
adc
xor
testb
mov
add
xor
mov
insb
rolb
fnsave
inc
add
cmp
test
inc
add
push
add
add
dec
icebp
push
js,pn
popf
xchg
add
clc
loopne
mov
cmc
hlt
fadd
inc
mov
mov
add
mov
mov
add
dec
out
mov
mov
test
mov
mov
add
and
mov
lock
mov
hlt
fs
jp
orl
cmc
dec
lahf
sub
adc
adc
add
in
push
xor
in
xorl
negb
in
xor
enter
insl
test
and
adc
jmp
aam
add
loope
das
jmp
sbb
outsb
out
mov
mov
add
jecxz
test
mov
add
and
sbb
add
mov
fldenv
add
mov
addr16
popa
dec
addr16
clc
inc
cwtl
adc
mov
add
inc
loop
mov
mov
inc
add
push
push
lock
sbb
add
test
sbb
int3
xchg
daa
inc
push
push
add
dec
repnz
add
mov
dec
fidivrl
jo
mov
mov
add
xchg
arpl
loopne
mov
push
pop
jge
xchg
cmp
iret
push
test
int
xchg
cmpsl
add
push
jle
fcompl
mov
jnp
nop
add
pop
sub
mov
nop
add
es
push
jge
push
inc
push
dec
jne
adc
adc
lock
mov
xor
mov
loopne
mov
rolb
mov
imul
ss
mov
cmpsl
sti
std
mov
fcomp
out
mov
nop
add
mov
mov
mov
les
adc
fcmove
pushl
mov
mov
pusha
add
adc
push
add
add
lock
cs
dec
cmp
loope
mov
add
or
es
cmp
mov
addb
mov
add
add
xor
jb
mov
cmc
cld
mov
sub
mov
sbb
ja
in
add
pop
int3
and
mov
int3
nop
add
push
les
mov
mov
push
repnz
and
sarl
mov
ss
addl
inc
add
mov
insb
sbb
xchg
add
sbb
mov
mov
fldt
push
imul
jge
xchg
add
mov
in
add
aam
imul
mov
mov
mov
stc
and
mov
inc
imull
mov
cld
fsubrp
imul
notb
pop
dec
push
sahf
pusha
add
inc
nop
add
inc
int3
ja
je
cmpsb
adc
xchg
and
mov
sub
add
ss
push
jmp
add
adc
inc
arpl
enter
lcall
cmp
add
imul
inc
jno
add
mov
add
xor
fsubrs
add
mov
out
movsl
cli
add
sub
mov
aas
cvttps2pi
call
xor
jge
add
int
add
dec
pop
mov
loopne
mov
add
pop
stos
jb
mov
add
mov
popa
mov
loopne
mov
stos
loope
push
fsubrs
dec
adc
sahf
pop
push
sub
jo
mov
sub
daa
sbb
push
nop
add
jge
cmp
adc
pop
lods
call
flds
aad
imul
jnp
mov
out
sub
sub
add
nop
add
sub
add
add
fisubl
mov
pop
add
sub
test
jbe
ds
add
add
dec
add
add
mov
jae
dec
test
bound
mov
pop
lahf
iret
push
add
pop
pushf
jmp
add
mov
lret
sub
add
and
mov
call
fisttpl
or
xchg
jle
mov
rolb
mov
add
outsb
jns
nop
add
mov
std
pusha
add
aas
and
mov
xchg
or
add
mov
add
mov
mov
adc
pop
adc
add
ja
add
mov
in
cli
pop
push
add
mov
call
mov
add
enter
lret
inc
push
jae
mov
push
jg
xchg
mov
and
ss
ret
ret
sbb
out
push
jno
fidivrl
inc
cmp
add
out
test
addl
rolb
mov
stc
loopne
mov
add
add
fsubrs
jp
nop
add
clc
leave
and
add
mov
mov
lock
jp
or
js
lock
dec
pop
dec
das
pop
fisttpll
std
adc
mov
fmull
insl
sbb
loope
add
jae
fdivl
mov
xchg
push
add
addb
outsl
sub
dec
filds
xchg
cmp
je
stos
inc
add
mov
pop
mov
xor
mov
and
insl
jle
aad
hlt
inc
aad
xchg
iret
fldt
and
mov
aas
cmpsl
mov
push
pop
xlat
mov
jmp
jne
sbb
adc
mov
aam
fldl2e
hlt
andl
mov
fcomps
cld
sbb
jp
fistpl
mov
dec
mov
mov
jnp
daa
mov
inc
mov
stos
pop
notb
add
stc
jl
or
bound
mov
cmp
pop
push
inc
dec
outsl
xchg
add
mov
xchg
cmp
xchg
adc
mov
std
aad
jp
xchg
add
mov
cmp
scas
jne
and
mov
in
ljmp
dec
cmc
js
xchg
sbb
sub
filds
into
nop
add
add
rolb
lret
aaa
pop
cmc
std
xchg
or
mov
or
int3
push
cmpsb
and
sub
mov
ret
and
insb
cmp
xor
mov
xchg
out
ror
test
sbb
sti
hlt
push
fisubs
pop
out
movsl
rolb
mov
int
adc
push
mov
andl
iret
mov
int3
data16
js
add
and
add
xchg
loop
mov
add
cltd
lock
mov
aaa
dec
das
mov
popf
dec
add
fsubl
add
mov
stos
pop
ja
les
gs
add
xor
mov
fwait
add
inc
out
addb
testb
imull
mov
jns
jnp
sub
jno
jae
ljmp
adc
lea
mov
pop
lret
push
int
add
sub
xchg
adc
pop
dec
nop
add
test
jbe
and
call
mov
mov
add
mov
ss
inc
add
shll
mov
add
push
and
add
sbb
js
cmp
mov
bound
mov
sbb
add
mov
mov
mov
js
jmp
xor
outsb
add
mov
mov
scas
pop
test
mov
shll
mov
mov
mov
cmp
and
mov
mov
ljmp
iret
and
mov
add
dec
loop
mov
xor
mov
pusha
add
pushf
push
pop
popa
nop
add
add
mov
mov
filds
mov
xchg
push
nop
add
cmp
jecxz
jecxz
jmp
lea
loopne
mov
mov
jno
aam
and
maskmovq
idivl
pop
fs
and
mov
push
inc
mov
rolb
mov
mov
add
mov
add
adc
xchg
rolb
mov
out
cwtl
js
clc
push
ret
insb
xchg
sub
mov
mov
add
dec
push
inc
mov
decb
xchg
xchg
mov
xor
mov
in
cmp
add
in
icebp
movsb
cmpsl
adc
add
mov
fstpt
add
add
sub
jp
cmc
test
xchg
test
aas
movsl
repnz
fld
jle
in
fsubrs
inc
sub
inc
into
add
mov
jo
mov
xor
out
mov
xor
xchg
ds
and
scas
add
mov
nop
add
aaa
cmpsl
jle
cmc
aam
add
add
jle
push
add
shll
mov
ljmp
loop
mov
mov
or
ret
rolb
mov
sub
outsl
dec
push
add
and
mov
inc
add
add
adc
clc
jne
lods
mov
xchg
icebp
add
ret
out
cmc
insl
test
inc
iret
fwait
popf
jp
mov
add
lahf
lret
pop
aam
sbb
rcrl
dec
add
xchg
cmp
stos
loopne
mov
push
add
mov
addl
call
into
jno
dec
and
inc
add
or
ret
inc
add
pop
popf
lret
add
push
add
xor
mov
mov
and
hlt
sbb
mov
sub
mov
int
lret
fs
add
jmp
add
outsl
adc
leave
adc
cmc
sbb
mov
mov
mov
lret
add
outsl
dec
int
inc
add
sub
xchg
add
mov
add
jg
sub
or
add
add
xor
ljmp
int3
sub
aaa
mov
add
mov
mov
mov
out
pop
in
dec
pop
sbb
daa
aas
cmp
mov
add
aad
or
add
and
sbb
adc
mov
mov
adc
test
icebp
mov
mov
add
or
adc
mov
fbld
or
mov
adc
mov
notl
mov
add
je
sub
and
push
add
add
cmp
pusha
add
data16
add
sbb
out
aad
add
adc
mov
test
test
add
add
add
mov
sub
xor
push
add
mov
mov
xorl
add
cld
dec
mov
faddl
add
sbb
outsl
jmp
add
leave
aas
pop
adc
enter
data16
mov
mov
sbb
fcomp
sub
cmp
mov
rolb
mov
jnp
and
add
addb
sub
push
lcall
xorl
mov
or
xchg
idiv
test
push
test
ffree
data16
pop
jb
mov
sbb
mov
add
dec
ja
js
push
adc
mov
enter
mov
jecxz
cmp
push
add
pop
aas
cmp
inc
addb
scas
lea
sub
das
mov
push
sub
dec
lcall
aas
addb
addr16
mov
mov
mov
in
cwtl
cmp
test
mov
popf
or
fists
sbb
int
add
in
ja
nop
add
pop
imul
icebp
nop
add
shl
popf
adc
mov
mov
mov
add
push
rolb
jl
add
add
add
mov
add
in
sahf
jge
xchg
or
sub
aas
push
pop
inc
add
test
add
add
in
popf
dec
push
cs
movsl
mov
pop
push
ljmp
add
add
mov
dec
ss
mov
sub
adc
mov
mov
imul
nop
add
cmp
add
push
lret
mov
mov
sub
add
add
stos
inc
add
jecxz
adc
mov
cmc
repnz
add
add
in
cld
cmp
test
ret
outsl
lods
xor
mull
cli
push
ret
mov
add
dec
adc
mov
pop
add
mov
addr16
lods
inc
jecxz
adc
mov
dec
pop
cltd
test
pop
icebp
push
add
push
clc
sti
sbb
sbb
lods
adc
les
fimull
pop
or
test
pushf
jae
aas
leave
mov
mov
inc
shll
insb
sub
aaa
scas
xchg
loope
adc
and
mov
add
lock
rorl
and
mov
add
jnp
mov
test
cmpsb
jg
dec
push
es
sub
movsl
test
out
ret
loop
mov
adc
pushf
or
in
add
sbb
jns
movsb
ljmp
jg
inc
loopne
mov
mov
add
add
add
iret
mov
mov
int3
cmp
mov
xchg
ret
adc
rolb
mov
mov
add
mov
push
faddl
test
jmp
sets
add
and
mov
add
into
mov
mov
jno
sub
movl
lret
jne
lret
test
add
add
pop
incl
add
add
jno
jg
jne
cltd
out
jns
sub
mov
mov
pusha
add
add
das
pop
adc
jmp
mov
adc
mov
add
inc
xor
lds
clc
sub
lcall
repnz
mov
mov
dec
rolb
mov
test
add
mov
add
mov
add
xchg
add
repz
add
mov
mov
lock
jle
adc
in
pop
rolb
mov
push
mov
push
loope
push
inc
add
push
mov
cwtl
iret
or
adc
mov
ret
mov
nop
add
xchg
add
pop
imul
dec
pop
mov
mov
add
dec
cs
ds
mov
add
add
mov
pop
movsb
adc
stos
xchg
bound
mov
lock
push
add
jl
ljmp
add
pop
mov
push
in
test
sub
out
sub
xchg
cmp
add
mov
add
stos
pusha
add
lods
mov
inc
adc
mov
vmovaps
pop
sbb
add
adcl
mov
xchg
in
addb
inc
sub
xor
mov
ret
mov
mov
xchg
inc
jo
mov
ja
pop
inc
or
shld
pop
icebp
push
in
sub
ss
movsb
inc
imul
mov
mov
in
add
mov
movsl
imul
add
mov
insb
dec
scas
clc
repz
and
mov
mov
dec
cli
and
mov
jmp
add
inc
add
repnz
nop
cld
jae
xchg
popf
or
js
test
daa
add
clc
repnz
nop
cld
jae
clc
sub
mov
div
push
mov
nop
leave
jmp
add
sub
dec
pusha
add
and
push
mov
xchg
ret
add
xor
nop
cld
jae
push
insb
add
incb
push
loop
mov
mov
mov
pop
jb
clc
repnz
nop
cld
jae
push
or
adcl
repnz
nop
cld
jae
mov
pusha
xor
add
nop
nop
cld
jae
call
xor
rep
clc
repnz
nop
cld
jae
add
add
repnz
lods
ret
push
mov
nop
leave
jmp
add
add
call
clc
repnz
nop
cld
jae
add
dec
add
add
xchg
scas
mov
clc
repnz
nop
cld
jae
mov
xlat
add
in
add
mov
nop
leave
jmp
add
inc
xlat
add
add
clc
repnz
nop
cld
jae
je
mov
xchg
add
fsubrs
add
repnz
nop
cld
jae
add
clc
add
nop
nop
cld
jae
lock
jmp
test
repnz
nop
cld
jae
lret
daa
lea
nop
nop
cld
jae
add
or
hlt
inc
repz
mov
xchg
ret
call
add
imul
push
mov
nop
leave
jmp
lock
add
or
push
inc
leave
mov
clc
repnz
nop
cld
jae
add
or
pop
cmp
mov
xchg
ret
and
add
xchg
lahf
mov
push
mov
xchg
ret
add
add
iret
add
mov
add
clc
dec
inc
clc
repnz
nop
cld
jae
adc
shrl
repnz
nop
cld
jae
add
add
adc
dec
mov
push
mov
xchg
ret
inc
jae
adc
jmp
add
mov
clc
repnz
nop
cld
jae
xor
lock
cmp
mov
xchg
ret
add
add
ret
insb
jae
call
clc
repnz
nop
cld
jae
mov
dec
add
jbe
clc
repnz
nop
cld
jae
hlt
lock
add
clc
repnz
nop
cld
jae
adc
jo
or
fisttpll
test
add
clc
repnz
nop
cld
jae
add
xor
mov
clc
repnz
nop
cld
jae
je
popf
sub
pop
clc
repnz
nop
cld
jae
add
jmp
lock
sub
in
nop
leave
jmp
xchg
je
imul
mov
je
clc
repnz
nop
cld
jae
add
jo
jne
je
clc
repnz
nop
cld
jae
push
xchg
add
push
push
mov
xchg
ret
add
clc
insb
dec
add
je
lock
idiv
repnz
nop
cld
jae
add
dec
add
mov
ret
clc
repnz
nop
cld
jae
add
mov
mov
add
add
pushf
add
jne
je
dec
and
add
push
mov
nop
leave
jmp
xor
jne
pushf
lods
clc
repnz
nop
cld
jae
add
jo
or
add
fwait
push
clc
repnz
nop
cld
jae
add
add
mov
mov
nop
leave
jmp
push
add
dec
add
fs
dec
push
mov
nop
leave
jmp
sub
add
add
add
jecxz
add
cld
clc
repnz
nop
cld
jae
popf
decb
add
add
clc
repnz
nop
cld
jae
add
xchg
xchg
dec
add
testl
pop
cmc
inc
add
add
or
leave
hlt
xchg
mov
push
clc
repnz
nop
cld
jae
lret
push
xor
movzwl
clc
repnz
nop
cld
jae
rolb
xlat
add
push
mov
xchg
ret
pusha
or
add
xlat
call
jmp
insb
hlt
add
sub
add
add
call
nop
add
push
clc
repnz
nop
cld
jae
add
incb
jo
add
rolb
mov
nop
nop
cld
jae
adc
or
dec
mov
jge
jge
clc
repnz
nop
cld
jae
add
add
push
mov
nop
leave
jmp
add
dec
jo
push
push
mov
xchg
ret
add
shlb
xchg
add
mov
clc
repnz
nop
cld
jae
add
inc
push
add
push
mov
xchg
ret
xchg
mov
add
lock
rep
clc
repnz
nop
cld
jae
hlt
add
lock
add
pop
adc
repnz
nop
cld
jae
add
xlat
add
add
clc
repnz
nop
cld
jae
lock
add
add
ret
in
les
popl
clc
repnz
nop
cld
jae
hlt
add
push
clc
repnz
nop
cld
jae
add
add
daa
lret
mov
xchg
ret
sub
or
add
push
xor
jl
popa
add
repnz
nop
cld
jae
add
fsubs
add
add
clc
repnz
nop
cld
jae
add
xor
jmp
add
call
sub
add
add
cs
xchg
fmull
repnz
nop
cld
jae
add
and
clc
repnz
nop
cld
jae
je
dec
add
inc
mov
mov
nop
leave
jmp
dec
add
add
add
inc
movswl
push
mov
nop
leave
jmp
pushf
pushf
add
add
add
add
rolb
add
add
sub
call
in
nop
leave
jmp
add
add
inc
clc
repnz
nop
cld
jae
imul
add
sbbl
fstpl
add
clc
repnz
nop
cld
jae
or
insb
mov
clc
repnz
nop
cld
jae
jo
add
sub
add
xchg
clc
repnz
nop
cld
jae
dec
add
or
mov
aaa
and
clc
clc
repnz
nop
cld
jae
jne
add
xor
mov
push
mov
nop
leave
jmp
insb
add
sbb
add
add
clc
repnz
nop
cld
jae
or
add
add
repnz
nop
cld
jae
add
add
jo
lods
movzwl
clc
repnz
nop
cld
jae
add
add
je
lahf
cmpl
push
mov
nop
leave
jmp
dec
dec
add
xor
cmp
jmp
incl
add
sbb
mov
xor
lret
xchg
add
jne
push
mov
nop
leave
jmp
add
je
xchg
add
repnz
nop
cld
jae
add
add
jmp
add
repnz
nop
cld
jae
add
add
add
je
jmp
sub
add
add
add
add
inc
mov
mov
clc
repnz
nop
cld
jae
xchg
add
push
pusha
add
cld
add
clc
repnz
nop
cld
jae
add
or
leave
pop
clc
repnz
nop
cld
jae
leave
xor
or
pushf
jg
popa
add
mov
xchg
ret
add
add
push
xchg
cs
clc
repnz
nop
cld
jae
mov
leave
ror
lret
mov
xchg
pop
push
mov
inc
add
or
add
add
add
jge
aas
add
jne
clc
repnz
nop
cld
jae
add
sbb
mov
nop
leave
jmp
add
add
call
add
clc
repnz
nop
cld
jae
add
push
add
clc
mov
mov
xchg
ret
add
sbb
clc
repnz
nop
cld
jae
add
pop
sbb
add
fisttps
fiaddl
xchg
ret
or
add
fmuls
call
add
aad
mov
clc
repnz
nop
cld
jae
add
mov
mov
xchg
ret
add
xor
add
mov
pop
push
mov
xchg
ret
je
dec
call
hlt
push
push
mov
xchg
ret
leave
jo
ret
jmp
clc
add
rorl
add
clc
repnz
nop
cld
jae
dec
add
jmp
add
negl
add
repnz
nop
cld
jae
sub
pop
jo
mov
mov
inc
sub
nop
cld
jae
and
jne
add
add
add
mov
xchg
ret
add
add
fidivs
xchg
or
repnz
nop
cld
jae
xchg
add
adc
add
daa
es
mov
push
mov
xchg
ret
add
or
andl
lcall
add
gs
add
insb
jmp
popf
pushl
clc
repnz
nop
cld
jae
xlat
xchg
add
sbb
insl
push
push
mov
xchg
ret
xchg
xchg
lret
lret
add
add
push
mov
nop
leave
jmp
xchg
insb
add
add
xor
bound
mov
nop
cld
jae
ret
add
add
mov
in
pop
push
mov
xchg
ret
xchg
add
add
add
gs
je
clc
repnz
nop
cld
jae
lret
and
mov
push
clc
repnz
nop
cld
jae
cs
insb
xor
add
es
mov
mov
push
mov
xchg
ret
add
add
pop
add
xchg
filds
repnz
inc
add
sub
pop
jmp
add
lcall
inc
add
or
ret
add
iret
pusha
add
add
clc
repnz
nop
cld
jae
add
shr
mov
push
mov
xchg
ret
pusha
add
dec
add
add
imul
nop
nop
cld
jae
add
incb
add
shl
mov
push
mov
xchg
ret
iret
add
or
jne
add
mov
add
push
mov
nop
leave
jmp
adc
je
mov
clc
repnz
nop
cld
jae
add
add
push
idiv
pushl
add
dec
add
repnz
nop
cld
jae
add
or
add
call
lret
push
mov
nop
leave
jmp
and
pushf
add
pop
add
sti
add
clc
repnz
nop
cld
jae
add
hlt
xor
add
add
push
mov
xchg
ret
add
xchg
add
push
jae
dec
xchg
lea
repnz
nop
cld
jae
or
xchg
or
pop
push
push
mov
nop
leave
jmp
add
leave
add
jb
mov
mov
nop
leave
jmp
push
leave
dec
add
add
mov
clc
repnz
nop
cld
jae
iret
sub
or
add
mov
nop
leave
jmp
push
pushf
or
pop
adc
dec
push
clc
repnz
nop
cld
jae
add
sub
add
sbbl
mov
xchg
ret
lret
push
add
add
addb
and
and
push
mov
xchg
ret
add
add
sbb
mov
push
sub
in
nop
leave
jmp
sub
repnz
add
push
mov
nop
leave
jmp
add
add
or
pop
add
imul
in
add
sub
xchg
sub
push
mov
add
test
push
add
clc
repnz
nop
cld
jae
imul
clc
repnz
nop
cld
jae
gs
add
mov
mov
xchg
ret
add
jmp
iret
mov
push
mov
xchg
ret
imul
repnz
int3
mov
push
mov
nop
leave
jmp
sub
or
shrb
leave
add
ret
je
add
or
mov
add
push
mov
xchg
ret
mov
add
push
add
add
nop
nop
cld
jae
add
lock
jmp
push
mov
nop
leave
jmp
or
add
pop
mov
adc
add
repnz
nop
cld
jae
hlt
jo
jmp
imul
repnz
clc
repnz
nop
cld
jae
lock
popf
dec
test
push
mov
xchg
ret
cs
inc
iret
add
dec
push
gs
push
push
mov
xchg
ret
xlat
add
add
mov
cmp
push
mov
xchg
ret
add
add
add
add
or
nop
nop
cld
jae
add
add
leave
je
ja
clc
repnz
nop
cld
jae
inc
lret
adc
cmp
clc
repnz
nop
cld
jae
or
push
mov
repnz
nop
cld
jae
xchg
xchg
add
ret
add
lods
clc
repnz
nop
cld
jae
or
xchg
jmp
ret
mov
repnz
nop
cld
jae
mov
icebp
sub
jmp
nop
nop
cld
jae
pushf
add
add
add
and
pop
clc
repnz
nop
cld
jae
dec
add
push
add
pusha
sub
dec
cmp
mov
nop
leave
jmp
add
or
mov
nop
nop
cld
jae
pusha
or
negl
dec
add
pop
leave
inc
add
ret
mov
add
fidivrs
add
clc
repnz
nop
cld
jae
add
in
push
mov
add
aad
mov
iret
jae
fiaddl
in
pop
stos
iret
imul
pop
clc
clc
repnz
nop
cld
jae
push
xchg
or
call
clc
repnz
nop
cld
jae
je
lret
movzwl
clc
repnz
nop
cld
jae
xchg
xchg
ret
add
jge
repz
repnz
nop
cld
jae
jo
je
add
xchg
sbb
mov
xchg
ret
add
add
add
mov
xchg
in
push
clc
repnz
nop
cld
jae
sar
or
je
add
pop
adc
mov
inc
push
mov
xchg
ret
xor
and
adc
add
ret
add
add
rclb
icebp
repnz
jo
add
add
mov
in
add
add
clc
repnz
nop
cld
jae
iret
add
dec
clc
repnz
nop
cld
jae
mov
mov
ret
fidivs
movsb
clc
repnz
nop
cld
jae
insb
insb
clc
xlat
add
jne
push
lock
pop
push
mov
nop
leave
jmp
add
call
add
add
push
push
mov
xchg
ret
xlat
or
add
xlat
add
movzwl
clc
repnz
nop
cld
jae
add
add
add
test
push
mov
nop
leave
jmp
popf
xchg
add
xchg
add
daa
jo
mov
pop
clc
repnz
nop
cld
jae
iret
leave
inc
add
add
push
test
push
mov
xchg
ret
decb
or
imul
sub
jae
repnz
nop
cld
jae
add
xor
add
add
repnz
nop
cld
jae
add
add
xor
push
mov
xchg
ret
inc
imul
mov
nop
nop
cld
jae
add
sbb
mov
xchg
ret
mov
rolb
xchg
dec
stc
add
push
mov
nop
leave
jmp
and
xchg
add
adc
jmp
loopne
add
insb
xchg
popf
add
bnd
add
push
mov
xchg
ret
add
add
mov
push
mov
xchg
ret
mov
add
xchg
adc
clc
repnz
nop
cld
jae
mov
add
adc
xchg
sub
repnz
nop
cld
jae
add
add
cmp
clc
repnz
nop
cld
jae
add
add
adc
clc
repnz
nop
cld
jae
add
add
add
xor
dec
push
mov
nop
leave
jmp
add
add
add
pusha
add
outsb
pusha
push
mov
nop
leave
jmp
inc
add
xchg
xor
jne
add
push
mov
xchg
ret
or
add
add
cld
xor
clc
repnz
nop
cld
jae
sbb
add
push
mov
nop
nop
cld
jae
sub
add
incb
inc
test
repnz
nop
cld
jae
add
add
pop
clc
repnz
nop
cld
jae
add
mov
xor
add
aas
push
mov
nop
leave
jmp
or
add
sbb
in
mov
jne
fwait
int
push
in
pop
test
pop
fbstp
sar
repnz
nop
cld
jae
add
add
icebp
add
inc
stos
jmp
add
add
add
add
add
xlat
iret
or
jp
cmpl
in
nop
leave
jmp
repnz
clc
dec
xchg
sbb
jnp
clc
repnz
nop
cld
jae
add
adc
xor
clc
repnz
nop
cld
jae
xchg
leave
add
mov
push
mov
nop
leave
jmp
add
add
insb
cmpl
push
mov
nop
leave
jmp
add
movsl
aad
mov
clc
repnz
nop
cld
jae
insb
add
je
lds
subl
push
mov
xchg
ret
fmuls
xlat
add
mov
pop
add
jmp
call
popf
iret
add
iret
or
add
insb
mov
clc
repnz
nop
cld
jae
add
add
xor
clc
repnz
nop
cld
jae
jmp
add
pusha
add
imul
xor
add
add
mov
push
xchg
mov
push
mov
xchg
ret
fsubs
add
inc
push
fcmovbe
loop
mov
nop
leave
jmp
mov
add
add
add
clc
repnz
nop
cld
jae
pop
inc
clc
add
pop
push
int3
cmp
push
mov
nop
leave
jmp
xchg
add
dec
inc
call
mov
nop
leave
jmp
add
push
xor
add
jb
mov
add
push
mov
xchg
ret
jo
dec
add
and
cs
clc
repnz
nop
cld
jae
dec
add
xor
adc
mov
clc
repnz
nop
cld
jae
xchg
mov
repz
out
add
pushf
add
add
add
rolb
mov
push
mov
xchg
ret
push
add
xlat
popf
add
sub
dec
mov
push
mov
nop
leave
jmp
add
add
adc
add
ret
sbb
cld
jae
add
sub
lock
or
repnz
nop
cld
jae
dec
add
jne
add
movsb
cmp
fiadds
xchg
ret
inc
or
add
pushf
adc
mov
mov
nop
cld
jae
add
or
add
add
cmp
clc
repnz
nop
cld
jae
rolb
add
mov
push
mov
nop
leave
jmp
rolb
add
cs
js
jg
clc
repnz
nop
cld
jae
jne
add
lea
clc
repnz
nop
cld
jae
or
sub
in
xchg
mov
add
int
add
addl
jne
je
repnz
nop
cld
jae
and
add
add
jb,pt
push
mov
nop
leave
jmp
add
push
pushf
add
nop
nop
cld
jae
inc
add
cmpl
nop
nop
cld
jae
add
rolb
add
mov
nop
cld
jae
hlt
add
add
add
pop
clc
repnz
nop
cld
jae
hlt
xlat
adc
jae
mov
clc
repnz
nop
cld
jae
add
sbb
xor
loopne
mov
add
cld
jae
jo
add
mov
clc
repnz
nop
cld
jae
add
add
xchg
add
call
nop
cld
jae
or
imul
push
push
in
add
clc
repnz
nop
cld
jae
je
add
push
push
rolb
mov
call
clc
repnz
nop
cld
jae
or
add
dec
push
clc
repnz
nop
cld
jae
xor
shlb
mov
mov
xchg
ret
add
add
add
test
push
add
clc
repnz
nop
cld
jae
or
mov
push
push
mov
xchg
ret
add
lret
sub
add
xor
repnz
nop
cld
jae
xlat
adc
jae
add
add
addr16
nop
nop
cld
jae
add
add
call
clc
repnz
nop
cld
jae
add
add
mov
repnz
nop
cld
jae
add
daa
jge
push
mov
nop
leave
jmp
add
add
add
push
mov
add
add
roll
fsubrs
les
repnz
nop
cld
jae
add
add
add
ret
dec
push
push
mov
xchg
ret
xchg
add
pushf
sub
mov
xchg
ret
xchg
add
dec
sub
add
add
push
mov
nop
leave
jmp
add
jmp
mov
xor
clc
repnz
nop
cld
jae
add
add
pop
push
mov
xchg
ret
je
add
add
mov
push
clc
repnz
nop
cld
jae
add
dec
je
add
push
arpl
jne
inc
add
add
add
jo
adc
or
clc
repnz
nop
cld
jae
add
jae
cmpl
push
mov
nop
leave
jmp
add
lret
jmp
add
or
incb
or
jmp
imul
nop
nop
cld
jae
lret
pushf
xchg
add
add
add
add
xor
push
mov
nop
leave
jmp
pushf
add
sub
dec
cmp
repnz
nop
cld
jae
incb
fsubr
jmp
jo
push
mov
nop
leave
jmp
sbb
add
xlat
add
fisttps
nop
nop
cld
jae
or
add
jmp
nop
nop
cld
jae
add
add
repnz
cmp
repnz
nop
cld
jae
add
add
add
add
or
inc
add
add
pusha
or
or
repnz
nop
cld
jae
sub
add
add
mov
mov
push
mov
nop
leave
jmp
add
sub
fdivrp
not
push
mov
xchg
ret
add
mov
and
mov
push
mov
mov
loope
add
add
mov
in
addb
pop
add
clc
repnz
nop
cld
jae
leave
xor
add
or
mov
clc
repnz
nop
cld
jae
jmp
and
add
clc
repnz
nop
cld
jae
add
adc
sub
mov
push
mov
nop
leave
jmp
imul
in
nop
leave
jmp
dec
add
pop
add
add
dec
and
push
mov
xchg
ret
adc
add
repnz
nop
cld
jae
fadds
add
xor
sahf
push
mov
in
adc
movsb
mov
add
add
imul
add
nop
nop
cld
jae
add
add
add
or
leave
push
clc
repnz
nop
cld
jae
push
jne
add
pop
icebp
add
nop
nop
cld
jae
hlt
repnz
push
push
mov
xchg
ret
jmp
sub
or
jl
in
push
mov
xchg
ret
push
jo
ret
lock
add
movsl
clc
repnz
nop
cld
jae
sub
add
add
add
mov
repnz
nop
cld
jae
add
mov
add
fildl
mov
add
clc
repnz
nop
cld
jae
add
mov
addr16
icebp
clc
repnz
nop
cld
jae
add
add
pop
ret
add
add
out
add
add
in
nop
leave
jmp
incb
lock
in
clc
repnz
nop
cld
jae
je
rolb
inc
push
mov
nop
leave
jmp
add
add
add
sub
subl
push
mov
xchg
ret
add
sub
insb
mov
clc
repnz
nop
cld
jae
add
inc
fistpl
mov
mov
clc
repnz
nop
cld
jae
add
insl
xor
clc
repnz
nop
cld
jae
fisubs
xor
add
mov
add
add
mov
mov
clc
repnz
nop
cld
jae
insb
add
add
aaa
mov
clc
repnz
nop
cld
jae
add
add
loopne
mov
push
mov
jno
jecxz
add
add
add
mov
push
bound
mov
push
push
mov
xchg
ret
add
inc
add
push
mov
and
push
clc
repnz
nop
cld
jae
or
add
inc
fidivs
mov
add
xor
repnz
nop
cld
jae
add
add
xlat
out
imul
clc
repnz
nop
cld
jae
add
gs
int3
pop
push
mov
xchg
ret
add
or
add
add
add
mov
mov
mov
clc
repnz
nop
cld
jae
add
jmp
mov
mov
xchg
ret
or
add
add
push
mov
nop
leave
jmp
dec
pop
push
je
add
mov
clc
clc
repnz
nop
cld
jae
add
add
dec
or
mov
push
mov
xchg
ret
add
jmp
mov
loop
push
mov
nop
leave
jmp
lret
adc
sub
stos
dec
push
mov
xchg
ret
add
add
add
add
push
pop
test
push
mov
nop
leave
jmp
add
add
adc
add
repnz
nop
cld
jae
add
add
or
lock
test
add
clc
repnz
nop
cld
jae
mov
add
mov
clc
repnz
nop
cld
jae
add
add
call
mov
nop
leave
jmp
push
or
add
leave
add
rolb
daa
out
icebp
push
dec
xor
clc
repnz
nop
cld
jae
jmp
mov
clc
repnz
nop
cld
jae
xor
add
jle
clc
repnz
nop
cld
jae
add
add
add
and
popf
mov
clc
repnz
nop
cld
jae
adc
or
pop
gs
and
clc
repnz
nop
cld
jae
add
icebp
rorb
clc
repnz
nop
cld
jae
xor
repnz
add
clc
repnz
nop
cld
jae
lock
or
push
xchg
decl
clc
repnz
nop
cld
jae
je
add
add
push
test
push
mov
nop
leave
jmp
add
pop
fmul
gs
in
nop
leave
jmp
add
add
fcomp
jmp
sub
push
mov
xchg
ret
add
xchg
add
mov
push
mov
nop
leave
jmp
mov
mov
fmuls
dec
push
mov
xchg
ret
push
imul
jmp
jne
push
mov
nop
leave
jmp
fadds
xchg
add
mov
clc
repnz
nop
cld
jae
inc
add
add
push
push
sbb
jmp
nop
cld
jae
pushf
add
lret
inc
out
add
adc
lea
clc
repnz
nop
cld
jae
lret
add
add
push
mov
frstor
jp
xchg
xor
inc
rolb
add
add
push
mov
xchg
ret
ret
xchg
imul
add
nop
cld
jae
dec
xor
jne
xchg
add
lret
repnz
nop
cld
jae
add
pushf
add
add
repnz
nop
cld
jae
xor
add
pusha
jae
add
in
add
clc
repnz
nop
cld
jae
jmp
push
xor
repnz
nop
cld
jae
adc
or
pop
push
mov
nop
leave
jmp
dec
add
add
add
add
mov
nop
nop
cld
jae
add
add
jmp
add
mov
push
mov
nop
leave
jmp
je
add
add
add
outsl
jne
clc
repnz
nop
cld
jae
add
or
repnz
nop
cld
jae
add
jmp
add
mov
push
mov
nop
leave
jmp
inc
add
add
mov
push
mov
clc
repnz
nop
cld
jae
add
add
add
push
mov
add
imul
add
add
ja
movl
inc
add
icebp
add
clc
je
jmp
popa
add
repnz
nop
cld
jae
jmp
hlt
add
add
mov
fistpll
inc
push
add
ja
and
mov
clc
repnz
nop
cld
jae
call
add
inc
and
clc
repnz
nop
cld
jae
add
mov
clc
repnz
nop
cld
jae
add
sbb
nop
leave
jmp
add
add
ret
fisttps
test
clc
repnz
nop
cld
jae
hlt
add
loop
mov
addr16
sub
clc
repnz
nop
cld
jae
jmp
adc
movb
cmp
ret
cs
add
add
fadds
add
movzwl
clc
repnz
nop
cld
jae
or
add
ret
fwait
lea
clc
repnz
nop
cld
jae
and
pusha
add
add
and
clc
repnz
nop
cld
jae
sbb
xor
or
jl
inc
sub
repnz
nop
cld
jae
pushf
fistpl
add
call
ja
inc
add
dec
leave
add
push
repnz
clc
repnz
nop
cld
jae
adc
shrb
mov
xchg
ret
adc
add
mov
push
clc
repnz
nop
cld
jae
ret
add
add
add
add
roll
xchg
ret
add
cs
mov
xor
add
clc
repnz
nop
cld
jae
adc
incl
out
add
add
add
dec
hlt
mov
push
add
repnz
nop
cld
jae
add
xlat
jmp
ret
mov
mov
xchg
ret
leave
add
add
movb
mov
cmp
ret
add
xchg
add
je
push
mov
nop
leave
jmp
jne
repnz
mov
mov
clc
repnz
nop
cld
jae
clc
add
xlat
addb
lahf
jne
clc
repnz
nop
cld
jae
je
add
dec
mov
clc
repnz
nop
cld
jae
sub
add
arpl
lods
mov
clc
repnz
nop
cld
jae
dec
add
addb
cmp
mov
xchg
ret
ret
push
add
icebp
rclb
lret
push
clc
repnz
nop
cld
jae
xchg
add
iret
mov
mov
clc
repnz
nop
cld
jae
add
or
push
add
add
add
repnz
nop
cld
jae
xlat
add
mov
hlt
inc
add
add
add
fadds
fwait
stos
push
mov
xchg
ret
add
lret
add
xchg
es
nop
leave
jmp
add
add
inc
push
pushf
jae
ss
add
nop
nop
cld
jae
add
add
dec
add
add
add
push
mov
xchg
ret
mov
add
mov
testl
and
mov
push
movb
push
mov
cmpsl
add
sbb
add
add
mov
lock
jno
mov
clc
repnz
nop
cld
jae
add
xchg
cs
add
clc
repnz
nop
cld
jae
sub
add
cs
sub
add
repnz
nop
cld
jae
je
add
mov
push
clc
repnz
nop
cld
jae
add
xchg
inc
add
repnz
stos
push
mov
xchg
ret
add
add
leave
add
add
sbb
movb
mov
xchg
ret
lock
dec
adc
ret
iret
aad
lahf
push
clc
repnz
nop
cld
jae
add
add
mov
add
mov
push
mov
xchg
ret
add
add
add
rorb
mov
repnz
nop
cld
jae
sbb
fs
mov
push
mov
nop
leave
jmp
clc
push
fcoms
mov
push
mov
xchg
ret
lret
je
add
pop
push
mov
nop
leave
jmp
push
add
or
or
push
mov
xchg
ret
or
add
add
rcl
shl
clc
repnz
nop
cld
jae
add
add
jae
in
pop
pusha
clc
repnz
nop
cld
jae
add
add
add
out
add
push
mov
xchg
ret
hlt
repnz
lret
sbb
pop
and
repnz
nop
cld
jae
jo
sub
mov
mov
xchg
ret
add
adc
pushl
clc
repnz
nop
cld
jae
rolb
or
mov
clc
repnz
nop
cld
jae
add
add
add
repnz
nop
cld
jae
add
or
add
push
mov
nop
leave
jmp
adc
add
loopne
mov
add
repnz
nop
cld
jae
dec
add
mov
add
clc
repnz
nop
cld
jae
add
xorl
clc
repnz
nop
cld
jae
dec
add
push
push
mov
xchg
ret
add
add
and
add
or
nop
nop
cld
jae
add
jmp
hlt
add
sub
add
clc
repnz
nop
cld
jae
add
ror
push
mov
xchg
ret
inc
add
add
mov
mov
clc
repnz
nop
cld
jae
pusha
pusha
mov
inc
inc
add
dec
add
xchg
add
lds
jno
clc
repnz
nop
cld
jae
inc
push
add
mov
mov
add
in
nop
leave
jmp
add
add
jbe
pop
clc
repnz
nop
cld
jae
sub
sub
dec
mov
fldl2t
xor
incl
xchg
lret
add
add
sub
add
clc
mov
clc
repnz
nop
cld
jae
and
fadds
add
mov
push
mov
xchg
ret
push
mov
mov
xchg
add
push
add
add
sub
add
add
add
mov
repnz
nop
cld
jae
repnz
iret
push
push
xchg
add
clc
repnz
nop
cld
jae
mov
and
dec
push
or
lea
nop
nop
cld
jae
add
add
add
add
push
mov
nop
leave
jmp
or
fiadds
add
dec
push
push
mov
xchg
ret
add
hlt
add
es
clc
repnz
nop
cld
jae
adc
mov
clc
repnz
nop
cld
jae
add
mov
push
mov
fldcw
dec
mov
pop
arpl
add
jge
lret
clc
repnz
nop
cld
jae
jne
xor
add
add
ret
clc
repnz
nop
cld
jae
add
add
xor
pop
clc
repnz
nop
cld
jae
jmp
incb
rorb
mov
push
in
incl
pusha
adc
add
add
imul
push
mov
nop
leave
jmp
add
add
sbb
add
mov
xchg
push
mov
xchg
ret
incb
add
add
lods
clc
repnz
nop
cld
jae
add
jne
add
or
clc
repnz
nop
cld
jae
mov
mov
add
clc
repnz
nop
cld
jae
or
add
jae
push
push
mov
nop
leave
jmp
and
add
xchg
inc
add
or
mov
clc
repnz
nop
cld
jae
add
add
mov
add
repnz
nop
cld
jae
incb
add
aaa
cmp
xor
add
clc
repnz
nop
cld
jae
sub
lods
push
mov
xchg
ret
add
add
je
add
mov
xchg
ret
add
ret
add
fsubs
xchg
push
pusha
add
popa
add
mov
xchg
ret
imul
add
repnz
add
ret
add
hlt
add
call
pusha
add
push
mov
nop
leave
jmp
add
jae
divl
add
push
mov
xchg
ret
mov
or
add
mov
popa
clc
repnz
nop
cld
jae
xor
add
inc
mov
add
repnz
nop
cld
jae
add
fs
xor
add
pop
call
clc
repnz
nop
cld
jae
bnd
add
add
clc
repnz
nop
cld
jae
add
sub
add
add
push
push
mov
xchg
ret
je
jo
fs
add
add
jae
push
mov
xchg
ret
add
add
add
add
add
push
mov
nop
leave
jmp
add
add
repnz
nop
cld
jae
add
add
inc
add
repnz
nop
cld
jae
add
ret
push
clc
fsubs
clc
repnz
nop
cld
jae
ret
add
add
add
add
repnz
nop
cld
jae
and
test
loop
add
add
xchg
add
add
jne
push
clc
repnz
nop
cld
jae
fiadds
add
add
or
nop
nop
cld
jae
xchg
xchg
mov
jmp
repnz
nop
cld
jae
sub
add
add
sbb
rclb
pop
into
inc
add
add
iret
add
sub
inc
clc
repnz
nop
cld
jae
add
xchg
or
add
pop
add
push
mov
xchg
ret
add
add
icebp
xlat
mov
repnz
nop
cld
jae
insb
add
add
nop
add
add
add
in
nop
leave
jmp
loopne
mov
rolb
shl
sbb
jbe
clc
repnz
nop
cld
jae
iret
icebp
dec
adc
mov
inc
add
cmp
add
xlat
add
inc
cmpsb
xlat
mov
nop
leave
jmp
xchg
add
add
or
adc
sub
add
adc
pusha
add
iret
add
mov
nop
nop
cld
jae
add
add
add
push
mov
nop
leave
jmp
add
add
add
push
repnz
nop
cld
jae
mov
add
mov
xor
jne
clc
repnz
nop
cld
jae
ret
or
mov
push
mov
nop
leave
jmp
mov
decb
add
add
dec
push
clc
repnz
nop
cld
jae
jo
inc
dec
lock
xchg
dec
call
clc
repnz
nop
cld
jae
sub
add
cli
push
push
mov
xchg
ret
push
sub
add
add
iret
rcrb
clc
repnz
nop
cld
jae
sbb
add
add
pushf
jo
ret
clc
repnz
nop
cld
jae
add
pop
fiadds
add
pop
xor
push
mov
nop
leave
jmp
add
add
clc
add
popa
clc
repnz
nop
cld
jae
mov
add
jne
leave
add
add
mov
nop
leave
jmp
add
mov
add
adc
dec
add
repnz
nop
cld
jae
add
iret
imul
pushl
clc
repnz
nop
cld
jae
iret
add
outsb
xor
clc
repnz
nop
cld
jae
lock
add
push
clc
repnz
nop
cld
jae
jmp
add
add
mov
mov
mov
clc
repnz
nop
cld
jae
add
add
mov
add
lea
push
mov
xchg
ret
add
lret
inc
cmpsl
int3
dec
push
mov
xchg
ret
xchg
add
dec
inc
dec
je
clc
repnz
nop
cld
jae
adc
add
les
repnz
nop
cld
jae
dec
add
add
push
sub
nop
nop
cld
jae
rolb
dec
xchg
mov
or
clc
repnz
nop
cld
jae
add
add
pop
clc
repnz
nop
cld
jae
sbb
add
add
cmp
add
add
repnz
nop
cld
jae
fadds
xlat
sbb
mov
xchg
ret
add
add
add
insb
add
dec
pop
clc
repnz
nop
cld
jae
ficomps
add
test
clc
repnz
nop
cld
jae
add
xor
add
clc
repnz
nop
cld
jae
or
test
xor
push
mov
nop
leave
jmp
add
shlb
fcoms
and
clc
repnz
nop
cld
jae
iret
add
or
xchg
or
mov
push
clc
repnz
nop
cld
jae
add
iret
dec
push
pop
jne
push
add
in
nop
leave
jmp
add
add
adc
sub
mov
clc
repnz
nop
cld
jae
add
adc
mov
cmp
in
add
lock
add
and
mov
add
cld
roll
cmp
ret
add
pop
add
fs
sahf
mov
push
mov
nop
leave
jmp
add
add
je
sub
nop
nop
cld
jae
dec
clc
add
or
clc
repnz
nop
cld
jae
add
add
add
cmp
popa
add
repnz
nop
cld
jae
add
add
add
jmp
jge
clc
repnz
nop
cld
jae
dec
leave
add
leave
and
in
nop
leave
jmp
add
add
add
inc
jp
push
mov
nop
leave
jmp
add
clc
xlat
dec
add
push
mov
nop
leave
jmp
sub
add
sub
clc
repnz
nop
cld
jae
jo
or
sbb
call
in
nop
leave
jmp
dec
add
push
add
mov
add
clc
repnz
nop
cld
jae
add
add
add
call
in
nop
leave
jmp
or
xchg
inc
mov
repnz
nop
cld
jae
sub
mov
sub
or
sti
clc
repnz
nop
cld
jae
add
xchg
add
mov
and
pop
clc
repnz
nop
cld
jae
add
add
cmp
repnz
nop
cld
jae
add
or
xchg
mov
mov
push
mov
nop
leave
jmp
add
and
inc
and
repnz
nop
cld
jae
fiadds
xchg
fdivs
add
clc
repnz
nop
cld
jae
call
shlb
in
xor
clc
repnz
nop
cld
jae
add
add
mov
adc
repnz
nop
cld
jae
sub
popf
add
sahf
imul
clc
repnz
nop
cld
jae
xor
add
gs
call
clc
repnz
nop
cld
jae
hlt
add
adc
rolb
fildl
cwtl
add
add
lds
or
pop
add
outsl
pop
push
mov
xchg
ret
fcomps
sub
hlt
scas
mov
push
mov
nop
leave
jmp
or
add
sbb
mov
xchg
ret
cs
add
add
add
and
clc
repnz
nop
cld
jae
mov
jnp
sti
push
mov
xchg
ret
add
or
jmp
add
shlb
repnz
nop
cld
jae
fistpl
js
dec
adc
loop
inc
add
or
loope
out
mov
clc
repnz
nop
cld
jae
je
imul
mov
push
mov
nop
leave
jmp
lock
jecxz
mov
clc
repnz
nop
cld
jae
add
add
lret
add
mov
add
add
add
repnz
nop
cld
jae
add
add
nop
leave
jmp
add
mov
incb
xlat
add
and
jne
clc
repnz
nop
cld
jae
lock
xchg
stc
mov
push
mov
nop
leave
jmp
je
fisttpl
lea
clc
repnz
nop
cld
jae
imul
cmp
repnz
nop
cld
jae
sbb
lock
movsl
pop
testl
push
mov
nop
leave
jmp
add
lock
dec
push
clc
repnz
nop
cld
jae
sub
add
loop
clc
repnz
nop
cld
jae
add
add
xchg
filds
xchg
ret
pushf
mov
add
add
jne
add
repnz
nop
cld
jae
call
or
sbb
nop
cld
jae
or
or
xor
add
aad
clc
repnz
nop
cld
jae
add
inc
sub
nop
cld
jae
pusha
add
add
add
push
or
mov
add
repnz
nop
cld
jae
xor
xor
xchg
xchg
or
jmp
nop
cld
jae
add
add
add
jp
add
clc
repnz
nop
cld
jae
call
nop
nop
cld
jae
add
xchg
add
pop
dec
clc
repnz
nop
cld
jae
add
and
add
mov
clc
repnz
nop
cld
jae
add
add
add
clc
repnz
nop
cld
jae
imul
adc
out
in
clc
repnz
nop
cld
jae
dec
add
stc
and
push
mov
xchg
ret
add
add
add
add
mov
clc
repnz
nop
cld
jae
adc
add
test
add
add
repnz
nop
cld
jae
add
nop
add
cmp
nop
nop
cld
jae
add
imul
repnz
nop
cld
jae
add
add
insb
xor
add
leave
jmp
add
sub
push
mov
add
repnz
nop
cld
jae
add
jne
push
push
mov
nop
leave
jmp
sub
or
xchg
xor
fdivs
rclb
in
inc
add
mov
jmp
adc
mov
xchg
ret
fldt
add
xchg
add
add
clc
repnz
nop
cld
jae
and
hlt
add
test
adc
repnz
nop
cld
jae
je
xchg
je
add
mov
lret
mov
clc
repnz
nop
cld
jae
add
add
xorl
mov
dec
addb
push
and
add
popf
inc
in
dec
out
add
cld
cmp
xchg
shll
mov
and
fsubr
jge
mov
cld
jg
xchg
loop
mov
push
push
cli
ds
mov
nop
add
add
mov
mov
imul
mov
movsl
pop
lea
loopne
mov
je
sub
add
outsl
mov
in
ljmp
add
add
sub
lcall
add
pop
repz
sbb
or
jae
inc
add
mov
mov
mov
in
sahf
jg
sbb
push
xor
mov
lods
fwait
in
out
push
lret
inc
daa
sbb
leave
mov
data16
add
push
test
cmpsl
enter
daa
lea
jg
add
add
jb
mov
clc
ljmp
call
add
mov
and
mov
xor
mov
add
add
mov
mov
add
mov
nop
add
mov
xor
mov
lret
ja
clc
mov
mov
pusha
add
add
xchg
inc
add
shll
push
add
test
les
dec
mov
inc
or
pop
sub
inc
add
push
xor
rolb
push
mov
pushf
mov
sub
push
gs
pushf
push
xor
mov
and
mov
add
mov
addb
cmp
cs
sbb
hlt
or
add
dec
cmpsb
lcall
mov
into
lds
fdivrl
mov
add
cltd
mov
lret
or
adc
inc
jp
sub
add
xor
mov
arpl
pop
jmp
test
mov
mov
dec
xchg
out
dec
sti
lcall
pop
xchg
add
mov
pop
xchg
imul
xor
jb
mov
inc
int
add
add
mov
fs
rep
in
adc
inc
add
repnz
in
sub
mov
add
and
adc
sub
dec
loopne
mov
inc
mov
jae
std
xchg
and
add
adc
dec
add
pop
pop
insb
das
pop
stos
in
mov
adc
in
popa
cmp
mov
rolb
mov
mov
mov
mov
mov
add
dec
ljmp
add
push
iret
ds
icebp
lret
addb
add
dec
sub
pop
push
lret
cld
sub
jmp
outsl
jae
cmp
in
add
mov
xchg
add
mov
add
insl
fs
jnp
add
or
mov
add
mov
mov
mov
mov
push
repnz
jp
mov
sbb
and
mov
sahf
and
mov
add
pusha
add
in
pop
inc
xchg
bound
mov
dec
jae
jg
mov
xor
cmp
mov
push
and
sub
enter
pop
lea
lods
in
das
xchg
add
add
mov
pop
and
or
test
add
fs
call
inc
add
mov
aam
stos
jl
popf
sub
add
xchg
fwait
or
cwtl
mov
insb
cmp
add
aas
fs
add
add
sub
enter
mov
sahf
imul
xor
mov
mov
mov
insb
daa
fistpll
insb
sahf
jno
loopne
mov
inc
addb
and
mov
xchg
sub
mov
adc
xor
mov
jbe
data16
inc
pop
fildll
mov
loopne
mov
and
mov
add
dec
cmc
mov
pop
jae
inc
mov
out
movsl
or
add
or
xor
mov
out
pop
mov
push
inc
lret
jl
mov
mov
loope
stos
fstpl
and
mov
add
fnsave
add
inc
sub
add
mov
mov
inc
pop
xchg
add
lea
pop
adc
mov
pop
sub
popl
xor
mov
cmp
mov
stc
outsl
sub
mov
stos
cwtl
cmpsl
int
add
mov
aas
lcall
xchg
and
cmpsl
pop
sti
popa
rolb
mov
xor
mov
loop
mov
mov
mov
std
mov
sbb
add
popa
add
mov
fwait
sar
pop
adc
sbb
dec
add
mov
mov
das
fdivr
ret
xor
mov
or
jnp
lock
je
xchg
das
inc
rolb
mov
sub
in
je
cmpl
rolb
mov
mov
push
jbe
in
add
daa
scas
cltd
nop
add
inc
dec
int3
sahf
and
mov
mov
pop
and
mov
sbb
nop
add
imul
je
add
mov
je
pop
insb
adc
cli
out
or
enter
lods
push
push
mov
sub
or
mov
push
or
fsubr
faddl
cmp
imul
fnstcw
mov
test
cwtl
xlat
fldcw
xor
jnp
add
shll
dec
inc
add
mov
inc
lret
jae
jmp
cmp
jne
sub
fwait
push
mov
icebp
loop
mov
clc
ret
or
add
add
add
add
fists
lahf
test
and
mov
add
fcompl
push
mov
fs
adc
mov
js
mov
mov
xchg
cmp
ss
stc
pushf
insl
add
mov
ss
sbb
sub
jg
stos
in
sub
out
rolb
mov
scas
add
mov
or
fisttps
mov
adc
mov
addb
ret
jb
mov
add
add
stos
mov
in
mov
js
in
and
scas
jl
and
push
dec
cld
jl
xchg
icebp
or
sar
cmp
out
cltd
leave
in
pop
cli
jle
xchg
sahf
jae
add
cmp
push
add
mov
divb
sub
mov
in
mov
mov
lcall
add
in
push
add
add
push
push
push
mov
add
add
mov
jmp
inc
addr16
mov
add
mov
add
push
jne
pop
fisubrl
into
jl
push
mov
push
andl
imul
sub
push
lock
inc
add
mov
or
mov
cmp
outsb
sub
add
cli
fldenv
and
mov
or
inc
mov
add
dec
pop
loop
mov
icebp
popa
push
scas
icebp
cmp
negb
scas
insb
inc
iret
loope
insb
fwait
cmpsb
mov
mov
addr16
mov
into
int3
pop
ja
out
jmp
mov
jge
sahf
xchg
or
add
and
mov
aad
sbb
mov
mov
jb
mov
ja
add
and
xlat
adc
xor
jne
mov
bound
mov
out
mov
rcll
inc
add
fs
inc
add
adc
or
mov
fcoml
add
inc
aas
xor
mov
cmc
mov
mov
cmp
fistl
jae
or
add
mov
push
jecxz
mov
dec
hlt
push
add
mov
mov
cmp
mov
add
mov
mov
ficomps
mov
clc
fsubrs
mov
enter
mov
mov
sbb
or
adc
xchg
or
call
and
addb
popf
cmpsb
dec
mov
add
mov
add
add
fldenv
adc
mov
ret
stc
outsl
addb
and
xchg
jnp
fnstcw
js
push
andl
mov
add
test
lock
or
je
mov
xor
mov
mov
jp
push
and
sbb
inc
ret
mov
pop
dec
adc
mov
mov
loopne
mov
aas
push
or
fwait
mov
test
add
mov
add
sub
add
add
cs
inc
add
pop
dec
lods
mov
mov
push
out
aas
cli
pop
push
add
push
or
arpl
shrl
add
add
mov
jne
cmc
xor
adc
mov
cmp
fucom
pop
jae
lea
ss
sbb
push
in
divb
dec
ljmp
jle
mov
mov
push
in
scas
stc
jp
sbb
mov
js
es
pop
xchg
fidivl
std
fiaddl
in
dec
cmp
add
cmp
dec
dec
sub
ja
sbb
pop
bound
mov
push
add
push
mov
mov
loope
icebp
inc
adc
inc
xor
repnz
repz
mov
pop
test
add
dec
nop
add
icebp
or
mov
add
add
fs
sbb
add
js
enter
cmc
outsb
cwtl
fdivs
cli
insl
sub
xchg
add
aaa
addr16
out
inc
add
out
jle
out
into
in
xlat
insl
push
mov
add
mov
pushf
fwait
fmull
popa
pop
fmulp
das
mov
rolb
add
data16
mov
add
add
pop
add
int
push
push
adc
add
outsl
movsb
jp
xorl
das
mov
mov
pop
insl
sub
hlt
stos
xchg
and
adc
mov
stc
mov
in
scas
add
mov
imul
add
jae
rolb
mov
sub
jo
mov
ljmp
and
mov
add
aas
rolb
mov
mov
test
add
and
add
mov
add
add
add
push
insb
sbb
sub
data16
jno
mov
jle
into
cmp
mov
fstl
mov
and
push
jne
fsubl
add
scas
add
mov
dec
jo
mov
fimull
cbtw
cmp
rolb
mov
push
dec
outsl
jle
mov
add
ljmp
mov
rolb
adc
mov
dec
mov
mov
cmc
stos
jb
mov
sti
scas
xor
mov
add
int3
sahf
js
add
add
inc
loope
pop
xor
add
sti
push
sbb
ss
rolb
mov
and
add
pusha
add
stos
imul
mov
test
iret
lcall
data16
mov
add
jnp
add
mov
lret
popf
adc
mov
jbe
add
mov
mov
jb
mov
mov
xchg
retw
hlt
pop
sub
add
fldenv
add
add
mov
jns
add
add
fisubs
add
mov
add
mov
sub
or
push
repz
cwtl
jmp
xchg
aad
mov
addr16
rcll
cwtl
outsb
out
lret
or
cmp
test
popf
fadds
mov
pop
mov
mov
add
pop
push
int3
pushf
inc
add
nop
add
rolb
aas
popl
cwtl
lea
lret
pop
mov
cmp
inc
in
pop
add
add
inc
cmp
lcall
inc
sub
push
cld
jo
mov
std
jo
mov
add
daa
lds
mov
ud2
add
mov
fs
in
rolb
ja
or
sti
clc
ffreep
jle
ret
jge
lcall
lock
int
out
xchg
out
jo
mov
mov
out
push
std
sbb
imul
test
add
mov
addb
scas
mov
jge
pop
sti
xchg
fisubs
xor
cwtl
xchg
in
mov
mov
rolb
gs
mov
lcall
xchg
dec
sbb
jbe
ljmp
test
sub
loop
mov
add
mov
sti
sub
add
out
xchg
outsb
mov
push
mov
sbb
sbb
dec
mov
mov
stos
add
or
fbld
and
mov
dec
cld
int
mov
pop
jo
mov
xchg
sbb
mov
add
pop
jae
test
xor
sub
add
and
repnz
add
add
add
mov
mov
insb
mov
addl
dec
jno
out
std
fmuls
push
repz
lods
popf
ret
dec
mov
jmp
ret
dec
xchg
pop
rolb
mov
sbb
cwtl
js
loope
dec
mov
imul
lret
xor
add
jecxz
add
mov
cmp
add
inc
outsb
stos
jne
sub
push
pusha
add
rorl
and
mov
add
add
xchg
fisubl
jbe
out
test
xor
cmp
imul
mov
cld
ret
test
andl
fucomp
mov
mov
mov
frstor
iret
jg
inc
lea
push
add
xchg
adc
xchg
or
rolb
mov
mov
add
mov
fucom
inc
dec
push
aad
sub
jb
mov
add
hlt
es
add
dec
xchg
pop
out
cmp
mov
in
addl
mov
mov
jecxz
mov
aaa
test
mov
mov
inc
loop
mov
xchg
lahf
ljmp
xor
fldcw
mov
xlat
bound
mov
and
mov
pop
jb
mov
jb
mov
add
repz
lock
add
add
mov
dec
jl
test
pop
cwtl
out
aam
rolb
scas
fisttpl
or
add
fcom
orl
xor
mov
into
pop
in
hlt
fwait
shll
add
xor
mov
add
adc
xor
jb
mov
sbb
add
pusha
add
mov
add
mov
dec
and
in
das
sub
sbb
pop
inc
mov
sub
out
lock
mov
dec
mov
lds
add
xchg
movsl
lcall
ret
testb
pop
xor
add
sub
mov
js
add
insl
or
and
push
mov
in
sbb
rcll
mov
lcall
mov
sub
mov
in
xchg
jecxz
push
dec
sbb
jno
jno
mov
dec
in
inc
or
arpl
jns
loope
cltd
mov
adc
outsb
repz
xchg
mov
xlat
jg
orl
loopne
mov
mov
mov
mov
mov
mov
mov
call
cmp
push
push
add
dec
std
hlt
pop
push
pop
cmpl
xor
test
add
xor
mov
dec
jp
jo
mov
xchg
stc
adc
and
sbb
cs
fcoms
mov
fidivrs
mov
add
cwtl
sub
jmp
xchg
mov
mov
pop
push
fwait
and
add
pop
xchg
das
xchg
add
xchg
adc
dec
test
sub
mov
mov
xchg
dec
sub
fs
add
xchg
add
jg
aad
adc
mov
loop
mov
js
add
mov
push
addb
xor
loop
mov
jne
sbb
mulb
aaa
add
mov
add
or
add
dec
or
add
dec
mov
mov
sub
mov
insl
rorl
adc
mov
repz
inc
loopne
mov
pop
in
lock
adc
shll
mov
dec
pop
rolb
mov
in
je
push
fisubs
cmp
add
and
cli
jae
mov
popf
test
repnz
pop
push
decb
bound
mov
add
pop
sbb
ja
testl
in
lock
mov
addb
fldenv
add
add
jnp
push
push
push
cmp
out
jg
add
add
or
inc
add
add
and
xor
sbb
shrl
sahf
adc
mov
push
lahf
nop
add
push
scas
fisubs
mov
add
add
fsqrt
dec
mov
rorl
dec
ss
xchg
loope
pushf
adc
add
inc
xchg
add
mov
xchg
add
aas
or
pop
adc
mov
mov
xor
fcmovnbe
fadd
adc
sarl
add
fildl
mov
loop
mov
pushf
mov
test
or
insl
pop
sub
add
cmp
lahf
add
mov
add
add
add
fsubr
daa
ret
cld
mov
das
mov
add
adc
enter
cmp
sahf
mov
dec
pushf
lahf
dec
pop
daa
jno
into
rolb
mov
jns
mov
jb
mov
mov
xchg
cmp
ret
test
lds
xchg
add
rolb
mov
int
mov
loop
mov
cwtl
pusha
add
mov
mov
add
dec
sbb
add
xor
push
adc
pop
dec
out
testb
add
and
or
add
scas
mov
xchg
xor
stos
jl
test
dec
fimuls
stc
mov
notl
loopne
mov
repnz
adc
inc
mov
add
adc
and
inc
ficoml
mov
xor
jmp
test
jae
mov
pop
pop
test
or
testb
push
ja
inc
mov
and
outsl
jmp
mov
aam
add
mov
in
idiv
ljmp
loop
mov
cli
xor
add
mov
mov
sbb
int
push
or
iret
dec
mov
and
scas
mov
mov
nop
add
add
jp
mov
mov
adc
negb
pop
ret
cmp
lret
decb
sub
iret
fsqrt
xchg
sbb
clc
or
mov
push
add
inc
test
mov
mov
pop
push
test
add
dec
test
mov
scas
mov
mov
lea
aas
and
mov
loopne
mov
stos
fmull
or
inc
mov
and
mov
fimull
xor
outsl
xchg
scas
jmp
pop
lret
rcr
xchg
mov
jmp
add
mov
sbb
std
fcomp
mov
int
ljmp
add
inc
pop
icebp
std
jne
push
add
test
push
lar
mov
dec
xor
add
jp
add
mov
out
push
mov
mov
inc
in
dec
ljmp
sbb
add
pop
clc
push
lods
leave
rolb
mov
mov
fdiv
add
mov
iret
mov
mov
stos
jl
aad
addb
xlat
je
out
out
pop
pop
mov
lret
std
out
sub
pop
sbb
fcmovnu
cmp
bound
mov
push
icebp
mov
bound
mov
lods
std
pop
scas
jl
jmp
sub
push
jg
es
or
clc
sub
mov
mov
jge
mov
test
cmp
lock
xchg
mov
lret
mov
add
adc
mov
mov
cmp
and
clc
int
aas
inc
fistpll
cmp
loope
jge
test
test
add
mov
and
lods
std
dec
dec
push
add
inc
popf
fdivrs
fmul
ja
fwait
adc
mov
pop
mov
dec
sti
sbb
dec
nop
add
jmp
sub
and
iret
add
add
imul
inc
mov
mov
fdivs
mov
pop
std
add
add
int
dec
dec
mov
cmpsb
shll
push
inc
add
xor
test
add
jle
ljmp
add
lret
and
mov
add
mov
and
mov
jge
jmp
and
add
mov
push
xchg
add
jbe
inc
add
lods
hlt
xchg
add
mov
lcall
or
out
adc
insl
push
and
add
xor
lcall
pop
imul
stc
addr16
push
mov
out
push
and
add
add
push
testl
xchg
jo
mov
mov
fdiv
add
push
dec
cmp
std
xchg
mov
sbb
cmp
mov
mov
add
mov
fisttpl
jnp
iret
jecxz
jne
scas
lock
inc
mov
mov
popf
jne
jb
mov
jge
loop
mov
mov
add
mov
stos
xchg
inc
add
mov
mov
pop
icebp
sbb
mov
lret
out
fucomip
call
mov
out
ficompl
push
pop
les
inc
pop
sahf
addb
add
mov
mov
xchg
jb
mov
insl
adc
hlt
aad
add
rolb
mov
add
jmp
add
or
mov
add
mov
add
stc
out
dec
pop
add
shrl
add
nop
add
mov
testl
aas
xor
pop
ds
jo
mov
leave
iret
lds
call
in
add
sub
insl
iret
push
or
es
pop
lods
xor
mov
std
push
fldl
pop
imul
inc
cmpsb
add
mov
mov
pop
imul
mov
push
xchg
fistpll
mov
inc
push
nop
add
shrl
lcall
das
test
pop
std
aad
mov
sub
add
mov
lods
lods
push
or
cli
cltd
adc
mov
scas
mov
add
add
xchg
push
leave
mov
push
add
rolb
mov
arpl
xchg
inc
add
rorl
add
mov
and
cwtl
fimull
add
pop
cwtl
imul
outsb
mov
icebp
pop
pop
testl
imul
fbstp
mov
imul
add
xor
add
imulb
or
cmpsl
or
js
inc
push
mov
mov
inc
mov
xor
pop
jp
addr16
add
add
pop
mov
rcrl
dec
jno
or
pop
cltd
jg
push
ja
dec
mov
je
addb
fnstsw
sbb
in
jb
mov
loope
add
mov
mov
jg
push
add
fimull
ficoms
mov
add
in
and
outsb
push
out
and
mov
add
in
push
add
sti
rolb
mov
and
add
add
add
inc
addb
daa
xchg
cmp
cmpsb
push
add
rcrl
shrl
sbb
std
and
mov
add
loopne
mov
add
in
rcll
cmpsb
roll
or
popa
sub
test
push
push
out
mov
into
xor
sub
jbe
out
mov
push
cmp
xor
mov
add
mov
hlt
cli
and
insb
call
mov
add
pop
arpl
inc
adc
add
popf
xchg
popa
push
pop
sbb
cs
int3
xchg
and
repz
mov
ret
stc
sub
rolb
lret
stos
fisttpll
cmpsl
addb
inc
add
mov
cs
mov
xor
out
sub
mov
jg
lea
stos
arpl
xor
and
adc
cltd
mov
xor
cmc
cmp
mov
sahf
ss
push
cmp
mov
sbb
lahf
aaa
lcall
rolb
mov
push
lods
jg
jb
mov
add
jl
outsb
inc
inc
dec
hlt
lret
mov
rolb
mov
cmp
add
add
jae
incl
pusha
add
sub
je
or
add
int3
jp
push
movsb
pushf
mov
inc
add
xchg
cmp
add
dec
inc
add
jne
mov
push
xlat
sub
add
mov
pop
lea
add
mov
cmc
inc
rolb
mov
lret
movsb
lret
or
int
lahf
and
pop
idiv
sbb
add
mov
fsubs
imul
dec
aaa
xchg
int3
imulb
insl
scas
scas
scas
adc
mov
addb
mov
fistps
rolb
cltd
in
addl
jg
mov
add
cmc
ficoms
lods
sbb
ret
imul
imul
add
add
mov
add
iret
dec
or
ret
mov
cmpl
arpl
sbb
testb
xchg
add
pop
pop
scas
out
imul
push
mov
lock
xchg
and
add
lock
test
add
jmp
sarl
nop
add
mov
dec
je
xchg
popf
test
add
pop
push
add
xor
mov
adc
adc
loopne
mov
jno
push
out
sbb
stc
js
add
or
loope
add
xchg
fildl
mov
cmpsl
sbb
xor
xchg
rolb
mov
adc
mov
xchg
outsb
sub
test
pop
loopne
mov
add
add
lds
jp
imul
mov
int3
cwtl
xor
mov
add
mov
adc
call
add
cmc
sub
lcall
push
lcall
rolb
mov
add
xchg
aam
jo
mov
mov
pop
je
add
popa
repnz
add
rol
add
xchg
cmpsl
push
push
add
imul
scas
dec
cli
push
mov
mov
pusha
add
mov
or
or
push
scas
popf
push
add
xlat
stos
xchg
insl
icebp
inc
addb
out
mov
or
add
cmp
jne
push
pop
push
jno
fsubl
dec
arpl
add
add
sub
mov
mov
mov
data16
mov
popf
lds
mov
repnz
outsb
add
lea
or
or
add
add
mov
cmp
std
or
xor
mov
iret
pop
aaa
in
sbb
push
cmp
ss
sub
lret
std
mov
fiaddl
stos
sti
dec
fs
xor
mov
add
lea
mov
in
aas
test
repnz
cmp
scas
nop
add
mov
mov
pop
jae
fisttpl
xor
mov
xchg
jmp
shr
adc
ja
push
mov
mov
inc
insl
add
rolb
mov
mov
inc
sbb
and
rcll
mov
mov
int
rolb
mov
test
fcomps
mov
and
mov
in
dec
jbe
push
xor
xor
addb
or
jecxz
lods
mov
rcr
cwtl
in
push
inc
jae
aas
add
add
push
adc
add
mov
add
add
mov
mov
xchg
test
push
mov
add
mov
jno
mov
cmpsl
sub
dec
leave
loope
inc
xor
add
mov
test
jp
push
fsubrl
or
cli
jle
xchg
add
or
or
inc
add
add
in
ret
mov
jns
add
add
add
lahf
ds
add
xchg
push
jns
add
push
push
test
xor
mov
jnp
cmp
daa
pinsrw
add
inc
jo
mov
sbb
jo
mov
mov
stos
lret
jb
mov
jnp
je
adc
mov
jb
mov
rcll
dec
and
cmp
pop
es
cmp
lods
ret
cs
and
mov
pop
xchg
movsb
addb
inc
xchg
adc
ss
daa
outsb
hlt
xchg
mov
add
add
add
sub
and
pop
fldenv
jmp
add
fdivrl
loop
mov
rcrl
and
adc
in
sub
push
stc
fsubp
xchg
sub
cmp
add
mov
pop
cmpsl
fwait
lret
pop
les
add
addb
jb
mov
pop
jo
mov
lret
xchg
jbe
xchg
push
loop
mov
cltd
ret
in
stc
jae
add
mov
dec
jp
int3
pop
sub
mov
jns
fildll
movsb
sbb
cld
inc
add
outsb
js
jl
push
adc
add
int
xor
add
mov
add
sbb
ficomps
sub
js
or
mov
loop
mov
mov
inc
jb
mov
fwait
cltd
push
in
cmp
cmp
ja
out
rorl
push
mov
mov
lods
out
push
idivl
lock
inc
inc
cmpsb
test
ja
add
xor
mov
xchg
in
mov
add
mov
xor
mov
dec
sub
add
es
dec
or
mov
mov
add
add
mov
sub
sti
in
jge
jbe
mov
mov
enter
repz
add
repnz
and
call
jne
fwait
scas
and
loop
mov
out
inc
scas
loopne
mov
imul
and
mov
cmpl
mov
out
cmp
or
addb
sub
js
add
ds
ss
jns
and
mov
mov
add
subl
jae
mov
call
outsb
addb
rcll
rolb
mov
scas
enter
add
test
add
pop
out
popa
cwtl
ret
add
xchg
mov
mov
fisttps
add
mov
shr
xchg
cmova
cmp
dec
add
xor
ret
pushf
xchg
mov
enter
incl
fwait
pop
dec
or
pop
mov
jmp
movaps
out
add
mov
add
xchg
out
repz
addr16
pop
jmp
add
add
fnsave
addr16
das
cmpsb
inc
add
rcll
aas
mov
add
mov
xchg
dec
andl
hlt
or
movsb
test
and
mov
data16
mov
add
push
jns
dec
je
ljmp
mov
outsb
nop
add
mov
add
mov
nop
add
sti
nop
add
pop
push
add
mov
add
xor
mov
mov
out
sbb
hlt
jae
dec
stc
imull
add
cmpl
stos
dec
popa
jecxz
jae
add
sub
lret
popl
mov
push
loopne
mov
cmpsb
imul
fcmovb
divl
add
pop
mov
and
add
xor
push
lahf
push
outsb
hlt
test
sti
sti
sti
mov
add
mov
add
pusha
add
mov
movsb
out
add
inc
cmp
ficoml
adc
mov
jns
idivb
adc
enter
jb
mov
lock
fadd
xchg
pop
mov
mov
fisubrl
addr16
out
pop
push
push
adc
mov
push
clc
inc
add
test
or
mov
add
ret
sub
stc
js
push
add
mov
and
bound
mov
jle
add
sbbl
call
leave
push
sti
ror
sbb
add
add
or
xchg
outsb
or
outsl
pushf
and
add
mov
pop
test
jns
sbb
loop
mov
add
xchg
jge
stc
aam
inc
add
cmc
add
pop
mov
ljmp
dec
test
lods
push
adc
mov
sarl
lock
mov
inc
fadds
aas
xchg
add
aam
pop
push
rolb
mov
xor
scas
jbe
adc
add
scas
mov
inc
add
mov
sbb
add
xchg
or
das
sbb
mov
xchg
sub
aas
push
dec
mov
mov
mov
add
dec
pop
mov
das
adc
insb
jl
pop
mov
adc
mov
rolb
mov
jl
mov
test
xor
das
int
das
sub
add
pop
cmp
shl
aaa
pop
aaa
jg
cmp
mov
lret
mov
xchg
lods
insb
sub
xchg
dec
mov
cmc
xchg
cltd
dec
leave
jno
pop
ja
es
fisttpll
sub
xchg
xor
sbb
int3
dec
addb
sub
shll
add
pop
push
add
mov
add
pop
popa
nop
add
xor
mov
mov
add
aad
jo
mov
in
sub
mov
mov
dec
scas
mov
add
jl
sahf
das
jne
and
into
inc
add
cmpsb
dec
push
cmp
push
js
hlt
sti
movaps
loope
adc
adcl
push
mul
enter
xor
aas
out
out
cld
xchg
negb
xor
arpl
xor
mov
mov
mov
mov
jo
mov
call
sti
imul
inc
sbb
std
xor
fiadds
mov
add
cmpsb
xor
or
ja
aaa
out
xor
fwait
dec
mov
mov
add
mov
fldl
push
adc
mov
adc
hlt
adc
int
xor
mov
sub
lea
pushf
out
lods
inc
stc
ja
add
pop
call
daa
adc
mov
pop
mov
add
sbb
jnp
add
lock
or
add
mov
into
aaa
dec
lds
sbb
push
push
fwait
jno
imul
xchg
fistpll
and
mov
data16
test
push
movsl
mov
jle
add
fists
mov
mov
push
add
ss
fsts
pushf
adc
add
pop
lcall
jbe
hlt
cmc
lcall
add
addb
add
sbb
push
mov
popf
cmp
inc
mov
mov
mov
addb
fists
mov
imul
mov
add
mov
dec
out
xchg
repz
ljmp
mov
jno
sbb
cli
mov
add
and
icebp
fstpl
pop
aad
push
icebp
pusha
add
pop
psubb
adc
add
xlat
orl
mov
stc
push
mov
push
mov
outsb
movsl
pop
imul
add
dec
add
mov
or
jge
movsb
mov
mov
or
xchg
fwait
icebp
mov
mov
pop
jnp
xorl
int3
push
add
cmpsb
and
sbb
xor
adc
mov
cmc
mov
jbe
pop
add
mov
scas
mov
cmpsb
or
clc
xor
and
xchg
add
add
push
pop
int
add
push
sti
xor
mov
jge
adc
mov
mov
add
add
lds
add
call
addb
rolb
mov
add
add
add
mov
fs
push
add
add
mov
or
add
push
ja
pop
mov
mov
add
push
add
mov
jl
test
push
push
test
sbb
mov
loope
add
roll
jle
into
repz
inc
xor
ja
std
mov
add
insl
jmp
sbb
daa
lret
push
stc
rolb
mov
andl
inc
push
xlat
pop
call
xor
mov
dec
push
mov
ret
mov
pop
bound
mov
mov
mov
cld
cmp
leave
cmc
dec
nop
add
inc
add
fists
or
mov
mov
mov
ret
into
cmp
js
xor
pushf
adc
mov
dec
jecxz
scas
int3
adc
mov
push
fldenv
pop
cmp
add
mov
lahf
xchg
mov
lock
or
pop
fcompl
test
jecxz
add
mov
leave
pop
lods
mov
ret
mov
movsl
jle
fsubr
push
mov
repz
xchg
xchg
ja
add
jg
pop
mov
pop
xchg
add
jbe
outsb
pusha
add
mov
add
imul
jb
mov
ret
add
mov
mov
push
xor
inc
add
mov
add
push
add
out
hlt
mov
lcall
pop
movsl
hlt
cmpsl
imul
xlat
jns
mov
xchg
lret
int3
leave
jg
data16
clc
out
lds
int
lcall
add
pop
into
pop
mov
mov
int
jle
add
mov
push
inc
add
imul
scas
cmp
cmpsl
pop
xchg
ds
adc
mov
sub
add
xor
cmpsb
ficoms
shll
out
inc
js
inc
add
mov
clc
jp
jne
add
add
aam
popa
loop
mov
add
mov
or
mov
mov
aas
dec
xchg
decb
or
lcall
adc
inc
stc
xchg
push
jae
add
sub
pop
cwtl
jl
and
sub
popf
xor
xor
in
out
pop
loop
mov
cmp
jmp
sbb
inc
adc
aad
decb
fdivl
dec
xchg
incb
popa
mov
mov
mov
sti
mov
rolb
nop
add
xor
xchg
jecxz
jo
mov
les
add
inc
mov
mov
fidivl
test
mov
jne
adc
stos
lret
add
ss
push
add
hlt
and
xchg
dec
inc
jge
std
jns
pusha
add
fisttpll
div
cmpsb
cmp
add
sub
add
jne
add
cmp
sub
aam
shll
fdivl
push
ret
pushf
clc
addb
xchg
sbb
mov
add
xor
mov
divb
xchg
push
test
push
in
ja
xorl
ret
mov
dec
add
mov
xchg
push
mov
add
adc
add
add
repz
popf
int3
aaa
test
dec
add
repz
push
jmp
add
daa
dec
xchg
hlt
nopl
lds
mov
xchg
iret
add
add
mov
jl
jae
fnstsw
testb
cltd
scas
lret
shll
add
xchg
lret
loop
mov
mov
xchg
dec
add
mov
add
repz
fcomps
hlt
lret
add
fwait
dec
out
adc
xor
mov
xchg
jecxz
sbb
cmp
sub
push
cs
add
lret
in
aaa
sub
inc
jecxz
xchg
and
mov
mov
rcll
imul
mov
lods
and
mov
inc
mov
pavgb
mov
and
mov
add
xchg
out
shll
and
mov
mov
inc
mov
je
fstpl
les
or
rolb
sub
mov
add
mov
xchg
add
imul
aam
int
mov
pop
cmpsb
fdivs
fiadds
add
add
rolb
mov
or
add
or
inc
or
popa
push
add
into
pop
mov
call
cmpsb
cmp
add
cltd
push
xchg
add
xchg
std
push
mov
add
push
mov
mov
sbb
ss
mov
add
mov
add
or
sub
mov
mov
mov
mov
fcomps
push
test
add
bound
mov
imul
mov
adc
insl
mov
add
dec
ljmp
add
imul
mov
mov
repz
bound
mov
and
mov
mov
xor
sbb
lret
or
enter
jne
xor
in
iret
lods
xor
pop
xchg
xchg
mov
pop
arpl
mov
mov
lcall
ret
test
pop
xchg
mov
insl
inc
pusha
add
xlat
scas
fisubrs
filds
xchg
dec
negb
mov
unpckhps
mov
mov
std
or
add
out
jge
addb
inc
add
or
dec
aaa
cmp
add
mov
mov
aaa
cmc
xchg
imul
add
sub
push
mov
imul
add
pop
fistpl
inc
add
das
pop
mov
xor
cwtl
lret
push
sbb
out
add
mov
push
jl
std
cmp
add
sti
cwtl
test
add
je
inc
add
ret
jecxz
stos
cmp
shll
dec
and
mov
xchg
cmp
insl
in
adc
jnp
inc
jno
sbb
fstpl
add
dec
and
lds
mov
mov
mov
mov
mov
dec
add
icebp
jecxz
sub
sbb
cmp
mov
push
and
mov
mov
lea
ret
hlt
cmp
jbe
es
mov
out
sub
mulb
jg
mov
repnz
adc
jo
mov
add
add
push
ljmp
mov
std
popf
mov
ficompl
add
mov
imul
fmuls
cmpsl
mov
add
mov
call
fdivs
add
cmp
movsb
sbb
dec
stos
cmp
insl
and
sub
mov
mov
push
jp
xor
xor
mov
add
sbb
loopne
mov
sbb
pop
dec
imul
dec
cmp
push
mov
add
adc
pop
addb
in
aaa
mov
leave
ljmp
sub
fwait
push
sbb
dec
stc
or
push
add
inc
xor
lcall
add
sub
lods
jg
cmp
xchg
stc
fisubs
xor
mov
mov
lock
add
pop
dec
scas
jo
mov
scas
push
ret
mov
add
add
cmp
inc
push
inc
add
dec
sub
dec
push
add
mov
add
loope
mulb
popf
push
adc
ds
pushl
pushf
addb
lods
aad
add
mov
xorl
add
push
jo
mov
ja
negb
aaa
mov
mov
les
mov
int
add
addb
cmp
in
xchg
add
mov
sbb
xor
mov
cmp
popf
jnp
test
adc
mov
add
mov
push
cmc
cmp
test
jecxz
jno
nop
add
fsubr
cwtl
and
fldenv
pop
loope
add
push
fwait
stos
dec
add
add
add
mov
and
mov
push
and
mov
loope
jbe
hlt
jp
and
daa
mulb
repz
add
add
loope
push
testl
add
push
addr16
enter
mov
sbb
addb
arpl
or
mov
jae
adc
mov
or
gs
imul
stos
cmp
push
xchg
rolb
mov
adc
mov
mov
mov
iret
nop
add
mov
cmp
add
scas
jno
xchg
fldt
jns
or
dec
int
cmpsb
rolb
mov
push
pusha
add
inc
loop
mov
add
sub
cli
cmc
sahf
mov
mov
xchg
andl
and
mov
aad
pop
lds
push
push
push
test
addl
aam
loope
add
es
dec
movb
sti
mov
int
dec
push
movsb
adc
mov
add
test
fstpl
mov
xor
mov
and
in
mov
adc
mov
add
sbb
pop
mov
out
fisubl
lea
mov
pop
pusha
add
cmp
loopne
mov
mov
inc
add
aaa
xor
cmpsb
loope
test
push
add
mov
scas
cmp
xor
mov
fwait
xor
insl
cmp
xchg
sti
and
dec
into
movsl
ret
aad
inc
jno
jp
adc
insb
in
sub
std
xor
add
cwtl
and
xchg
mov
cmpsb
pop
nop
add
mov
cmp
add
fistl
inc
sbb
mov
addb
icebp
jno
mov
add
popf
or
mov
mov
add
mov
movsb
mull
sbb
jae
cmpsl
bound
mov
pop
test
add
inc
sub
push
mov
xor
bound
mov
push
adc
adc
loopne
mov
popa
dec
jno
sbb
sub
add
lock
mov
add
mov
mov
mov
int3
push
add
lds
popa
sub
adc
mov
xchg
fstp
xlat
iret
adc
jg
add
add
mov
es
push
jge
dec
ret
push
and
add
loope
mov
xchg
cmp
mov
or
cmp
mov
out
cltd
jp
and
mov
mov
mov
stc
jmp
sbb
mov
aam
add
pop
dec
cmp
jge
add
mov
add
sbb
daa
stos
dec
fs
inc
sbb
jo
mov
and
es
xchg
arpl
push
iret
in
out
pop
mov
xlat
mov
int
push
add
out
ret
sbb
jmp
fcomp
lahf
psrld
mov
xor
rolb
lods
cmp
mov
pop
push
add
mov
add
cmp
test
jb
mov
push
popf
push
lods
sub
mov
add
jp
lahf
mov
addb
and
push
sbb
or
add
jge
add
out
mov
in
imul
push
push
pop
jmp
ljmp
sbb
test
loope
lods
xor
mov
add
add
inc
xchg
jl
mov
addr16
pushf
xor
add
data16
clc
scas
lock
inc
daa
addb
int3
and
lcall
xchg
pop
xchg
fisttps
add
cmp
push
dec
out
lods
dec
pop
lock
sahf
xlat
fbld
add
adc
push
jl
push
add
mov
pop
loopne
mov
jecxz
mov
ret
adcl
icebp
popa
cmc
bound
mov
dec
js,pn
and
adc
mov
sub
add
xor
mov
pop
inc
shrl
add
sbb
add
insl
and
add
fstl
mov
push
add
inc
add
mov
int3
mov
mov
inc
pop
aam
xchg
add
add
push
mov
add
jbe
mov
adcl
stos
adc
mov
lods
or
add
lcall
or
lock
xlat
loop
mov
or
xchg
jg
daa
jle
insb
jge
addb
xchg
add
mov
adc
xchg
add
push
inc
test
mov
and
js
cs
add
test
push
mov
fildll
stos
loopne
mov
lds
push
add
sub
add
xor
mov
insl
lahf
test
add
inc
pusha
add
addb
mov
stos
mov
mov
int
addb
push
add
mov
jl
add
mov
or
adcl
cwtl
bound
mov
adc
add
cltd
adc
mov
jp
add
outsb
outsl
inc
and
in
xor
mov
bound
mov
inc
add
pop
imul
or
mov
sub
cmp
add
xchg
addb
pop
xor
addb
daa
dec
sti
fwait
aam
push
mov
push
movsl
inc
xchg
mov
lock
add
push
or
and
mov
and
add
out
mov
repnz
pop
xor
add
push
mov
dec
daa
pop
fidivl
mov
inc
add
mov
xor
fldcw
mov
in
int
enter
dec
mov
or
lahf
imul
cld
in
push
inc
add
scas
sub
mov
mov
xchg
add
inc
add
psubd
xor
mov
test
add
mov
pop
and
add
add
je
lds
add
mov
in
int
call
push
pop
xor
mov
imul
mov
mov
mov
sbb
add
gs
xchg
add
add
dec
add
mov
mov
into
into
fsubrs
pop
leave
add
mov
mov
cmp
leave
nop
add
lods
das
outsl
xchg
adc
inc
lock
mov
pop
mov
xchg
push
jne
icebp
int
fs
leave
mov
test
mov
xchg
mov
dec
clc
fwait
and
xchg
cmp
sub
add
pop
cld
test
add
clc
push
pop
les
addb
out
sbb
popa
adc
mov
xchg
add
js
mov
inc
jo
mov
scas
pop
inc
sbb
fs
push
add
xor
mov
movsb
out
rolb
mov
add
add
pop
sub
pop
jae
addb
movntps
add
sub
xor
insl
jbe
or
lods
loop
mov
cltd
adc
mov
cmp
dec
fisttps
cmp
xor
and
mov
sar
push
add
add
test
nop
add
inc
add
leave
xlat
or
mov
lret
inc
outsl
lret
xor
pushf
fsubs
xchg
push
add
cmp
nop
add
aam
dec
std
adc
mov
and
mov
pop
mov
call
pop
pop
ret
aaa
or
testl
mov
in
fs
add
imul
pop
jnp
stc
adc
mov
int
add
rolb
mov
add
jge
add
add
or
xchg
jp
sbb
mov
add
jne
inc
pop
pop
aas
jb
mov
add
mov
arpl
data16
cwtl
jecxz
lds
mov
mov
add
clc
data16
repnz
ss
sub
add
mov
imul
jae
pop
ss
add
mov
add
stos
loopne
mov
idivb
jns
push
add
push
hlt
cmc
sti
jl
adc
popf
mov
mov
pusha
add
mov
mov
sbb
arpl
test
loopne
mov
fmuls
add
push
outsb
popa
sbb
nop
add
fisubrl
mov
enter
ret
inc
xor
dec
xor
mov
cwtl
dec
add
call
mov
dec
lahf
std
enter
jne
daa
fildll
mov
adc
fstpl
imulb
out
jge
add
xor
mov
fwait
mov
mov
add
mov
mov
pop
rolb
rcll
rolb
mov
aaa
in
bound
mov
rolb
mov
adc
mov
xchg
cli
xchg
or
mov
test
addb
sub
imul
fisubrs
mov
mov
test
aas
jge
jge
mov
addb
out
mov
imul
add
dec
jae
enter
repnz
adc
adc
sbb
inc
repnz
scas
push
insb
mull
mov
pop
push
dec
add
mov
mov
jg
add
jl
sbb
add
pop
movsb
into
fnsave
cwtl
cmp
mov
das
ss
push
enter
push
add
insl
idivl
jge
add
add
xchg
aas
adc
xor
lods
sbb
inc
pop
push
lea
mov
mov
or
rolb
mov
xchg
cltd
mov
and
ret
cmpsl
repz
fidivrl
pop
ja
inc
and
xchg
mov
pushf
add
orl
add
mov
mov
shrl
out
inc
and
aad
pop
push
push
mov
add
add
imul
add
call
and
add
mov
lock
inc
add
add
fildl
mov
insb
pop
jbe
sbb
jp
lcall
push
dec
lahf
and
into
lods
mov
out
or
addr16
lods
shll
push
mov
or
jae
addb
fdivrs
call
pop
jecxz
sub
mov
cwtl
in
xchg
add
lret
adc
mov
add
mov
pop
test
shll
add
jmp
int3
inc
xchg
adc
mov
push
push
fldenv
adc
mov
or
mov
pop
dec
enter
arpl
lds
mov
daa
ljmp
add
sbb
add
sahf
leave
test
jne
pop
test
and
cmp
xor
mov
adc
add
mov
xchg
rcrl
cmp
cli
divb
outsb
mov
push
add
add
mov
add
jg
jae
lds
push
inc
add
sbb
and
mov
in
mov
mov
popf
dec
fwait
dec
rolb
fisttpl
push
or
add
mov
cmp
jecxz
lss
mov
add
and
mov
aaa
clc
jno
add
test
dec
lcall
pusha
add
sub
xlat
xchg
add
mov
adc
xchg
jl
mov
cmp
mov
js
xchg
mov
adc
mov
jmp
jecxz
push
add
jge
sub
inc
int
nop
add
mov
inc
es
add
sahf
loopne
mov
or
xchg
sub
imul
mov
mov
inc
ja
add
ljmp
sbb
jno
imul
out
add
movsb
cmp
movsb
lods
pop
jbe
xor
add
mov
add
mov
stc
rolb
mov
or
inc
add
xchg
sbb
in
xor
cmp
call
jnp
sub
sbb
dec
xor
add
add
outsl
and
or
testb
jp
add
add
loopne
mov
inc
fnstcw
add
ljmp
bound
mov
hlt
xor
pop
cli
rolb
add
inc
add
cmp
rep
nop
add
insb
cmp
mov
lcall
xchg
add
mov
sub
add
push
pusha
add
mov
mov
add
leave
cmpsb
clc
pushl
mov
bound
mov
jne
xlat
loop
mov
and
mov
mov
pop
and
inc
add
jns
add
mov
add
movsb
inc
and
aad
movsl
int3
jns
arpl
test
repnz
in
ficomps
push
xchg
jg
add
add
and
jp
clc
mov
loope
movsl
mov
mov
or
cmp
imulb
add
add
leave
push
jle
mov
orl
ret
cmpsb
sar
aam
test
imull
xchg
push
mov
add
mulb
lahf
leave
mov
mov
iret
cmc
scas
sahf
push
lea
cli
jl
dec
in
or
mov
add
icebp
iret
xor
add
or
sub
xchg
or
mov
push
pop
jo
mov
addb
xor
and
mov
xor
mov
popf
movsl
das
lods
inc
ficomps
add
add
mov
cmp
add
stos
rolb
mov
or
adc
mov
addr16
jb
mov
jb
mov
mov
xor
sbb
inc
repz
add
add
in
push
add
adc
jle
push
daa
mov
add
imul
dec
pop
jnp
pop
add
mov
mov
add
popa
dec
vmread
add
in
in
adc
rolb
pop
dec
mov
mov
sbb
add
mov
add
adc
cld
mov
jge
data16
mov
add
sub
scas
mov
addb
xorl
mov
add
mov
rcr
sub
add
mov
mov
inc
repz
xchg
mov
aad
push
ja
xchg
sub
xchg
xchg
add
sub
dec
mov
incl
outsl
out
pop
xchg
add
les
mov
in
les
add
pop
push
fimull
add
mov
mov
je
nop
add
or
mov
add
lret
sub
xchg
xor
out
add
std
sbb
int
pop
xor
mov
sub
es
adc
add
or
mov
mov
sub
lds
test
bound
mov
sub
add
sahf
js
xchg
add
mov
add
into
fisubrs
daa
loope
sbb
sarl
mov
mov
repnz
add
loopne
mov
jae
xchg
add
fmuls
icebp
aas
data16
add
mov
xor
sbb
enter
add
sub
sbb
mov
mov
xchg
add
cltd
mov
mov
hlt
sbb
or
jo
mov
sub
fxch
outsb
cwtl
jl
dec
mov
push
add
ret
dec
sbb
sbb
mov
xor
cmpsb
cwtl
cmp
mov
mov
jae
sub
mov
mov
lock
test
jecxz
inc
jo
mov
xchg
xchg
adc
mov
add
pushf
jns,pn
push
add
mov
add
mov
add
add
out
lcall
aad
ds
pusha
add
inc
add
aad
lea
mov
lahf
xor
push
cwtl
sub
add
mov
ffree
dec
or
sbb
sbb
addr16
sub
add
xchg
stc
add
mov
xor
mov
xchg
add
ficoms
movsl
pop
push
mov
push
in
jle
stos
sub
mov
in
cmpsb
dec
leave
mov
sub
add
add
add
fnstcw
mov
cmp
stc
jg
rolb
mov
dec
arpl
push
roll
addb
cmp
out
dec
stc
mov
pop
stc
adc
loop
mov
xchg
fildll
xlat
popa
mov
test
xchg
lahf
jae
outsl
sbb
add
loop
mov
ss
add
xchg
dec
mov
icebp
lret
jg
gs
icebp
ret
adc
mov
mov
es
inc
test
or
add
mov
cmp
mov
rcll
das
dec
push
popf
pop
out
cli
in
mov
loop
mov
or
iret
iret
and
stos
lods
movsb
mov
or
add
je
aam
sub
das
add
mov
cmc
or
add
test
in
ljmp
lods
cwtl
out
jo
mov
gs
and
mov
add
inc
movaps
fwait
dec
ret
cltd
sahf
mov
scas
out
adc
mov
xor
add
movsl
pop
notl
rolb
mov
and
add
mov
mov
mov
pop
incb
mov
addl
dec
inc
test
mov
sbb
mov
pop
dec
outsl
mov
mov
add
jns
sbb
add
pusha
add
outsl
add
and
mov
adc
mov
cmpsl
cmp
ljmp
mov
mov
push
sub
js
sub
and
mov
jae
in
and
mov
cmc
mov
mov
pusha
add
xor
pop
mov
sbb
rcr
lret
mov
popf
xor
mov
lods
push
pusha
add
mov
mov
push
mov
stc
lahf
pusha
add
mov
xor
adc
mov
daa
jno
rcl
movsl
sbb
xchg
out
adc
insl
fildl
jl
mov
rolb
mov
pushf
aam
push
ss
rcl
or
sbb
add
in
pop
imul
jnp
xor
dec
or
jns
fs
out
enter
enter
stos
xor
sbbl
mov
addb
pusha
add
jo
mov
nop
ja
or
pop
jno
xchg
jnp
daa
jno
in
loope
insb
lret
push
fcmovnu
sub
aad
pop
aaa
mov
jge
mov
mov
shrl
add
adc
add
mov
add
pop
pop
add
mov
insb
jle
aas
push
sub
cmp
shl
add
in
rolb
mov
jbe
cmpsl
out
xor
add
ret
xchg
inc
add
cwtl
dec
mov
int3
and
testb
jecxz
add
pop
mov
push
outsb
roll
dec
pop
adc
mov
mov
cmp
xchg
dec
loope
push
mov
add
xchg
push
add
add
mov
mov
and
add
mov
jo
mov
add
test
stc
fadd
add
jne
hlt
jne
add
fsub
dec
punpckldq
mov
js
lock
jmp
cltd
or
or
jg
sahf
inc
adc
mov
gs
sbb
jle
jl
mov
adc
sub
insb
xchg
repnz
mov
lret
leave
pop
pop
sub
xlat
data16
adc
sbb
or
lcall
fwait
in
sub
inc
add
xchg
add
jo
mov
mov
xchg
add
sbb
sbb
lcall
or
cmp
roll
xchg
xor
mov
push
mov
add
sub
cmpsb
fbstp
mov
ljmp
sub
arpl
mov
aas
jmp
cwtl
push
xor
mov
mov
popf
dec
dec
push
xchg
cmp
imul
int3
mov
mov
add
sub
jb
mov
inc
test
add
adc
lock
addr16
sbb
rdpmc
clc
jo
mov
jns
mov
sbb
mov
add
call
pushf
pop
fwait
bound
mov
add
pop
sar
lcall
jne
cmp
dec
bound
mov
dec
nop
add
lock
mov
mov
loope
cmc
out
ds
aas
insl
icebp
cld
xor
pusha
add
add
repz
jae
lcall
mov
mov
jge
fsts
inc
clc
mov
loope
jb
mov
test
sub
add
into
xchg
inc
add
mov
insb
shll
add
add
test
mov
lret
repnz
lods
pushf
cmp
mov
mov
add
add
mov
add
sbb
outsb
inc
and
mov
dec
int3
xor
push
sbb
inc
test
jb
mov
nop
add
fcmovnb
add
pop
aad
and
repz
lahf
inc
add
mov
add
mov
add
inc
add
inc
push
pop
adc
inc
jns
dec
sahf
pop
call
sbb
push
add
add
mov
jbe
or
fcmove
stc
daa
popf
lea
scas
mov
add
add
add
dec
sub
mov
int3
ljmpw
fs
sub
add
jb
mov
lock
mov
jmp
cmp
push
lcall
xchg
push
cmp
add
mov
jl
addb
or
lahf
xor
mov
xor
lea
push
mov
lods
idiv
sub
shll
cs
add
add
add
lods
inc
or
add
add
add
popa
add
mov
pop
lret
rcrl
add
xor
mov
dec
out
add
mov
add
inc
add
scas
addb
shrl
or
pop
in
add
inc
cmp
stos
xchg
mov
add
jae
test
stc
lds
add
push
xor
pop
in
iret
mov
inc
gs
test
push
and
insl
jecxz
push
pop
pop
enter
nop
add
mov
movsl
mov
add
mov
cs
add
push
loopne
mov
clc
loopne
mov
jo
mov
mov
rolb
lods
push
push
mov
sbbl
mulb
add
xchg
cmp
sbb
push
jecxz
clc
das
mov
sbb
add
jno
jmp
mov
out
addr16
stos
push
dec
cmp
pop
hlt
cmpsl
adc
mov
add
cmp
lret
insl
lret
mov
jbe
dec
inc
add
out
push
add
dec
jbe
dec
out
inc
add
mov
dec
xchg
or
push
and
add
addl
and
clc
pushf
sbb
mov
push
out
dec
jl
movsl
mov
pop
jae
shrl
push
pop
fwait
lahf
ret
xchg
rolb
mov
add
lahf
push
sub
jle
nop
add
mov
pop
add
mov
lcall
je,pt
add
jbe
iret
xchg
dec
mov
repz
popa
xchg
cmpsl
out
push
pop
adc
leave
mov
dec
insb
jb
mov
xlat
sub
cmpl
mov
pop
rcrl
xor
jae
sbb
jle
rcrl
out
jmp
loop
mov
xchg
add
outsb
mov
mov
mov
cmpsb
and
lcall
pop
imul
add
lahf
xchg
add
sub
cmp
mov
rolb
mov
add
sbb
sbb
cmp
sbb
jle,pn
inc
or
stc
xchg
fsubrl
add
cmpsb
int3
movsb
mov
push
xchg
shll
int3
js
add
push
mov
sub
add
inc
sbb
in
test
xchg
mov
mov
daa
add
icebp
jb
mov
lock
mov
add
mov
into
rolb
mov
or
into
cmpsl
repnz
cmp
in
xlat
test
mov
out
add
mov
jmp
jne
sub
rcll
enter
jp
scas
dec
sbb
add
sub
mov
push
mov
fdivr
or
push
jecxz
cmp
in
inc
add
mov
mov
nop
add
jg
in
nop
add
mov
add
in
xchg
daa
out
mov
inc
add
shrl
mov
add
push
dec
lock
rolb
scas
je
xchg
xor
mov
lret
inc
add
pusha
add
loopne
mov
add
fimull
andl
mov
add
pop
mov
loope
outsl
inc
outsb
push
outsb
cmp
xchg
or
ljmp
add
jmp
pop
pop
lods
sub
sub
dec
incl
fnstenv
inc
sbb
mov
push
enter
pop
outsl
cmpsl
fistpll
jnp
sbb
and
mov
add
jnp
insl
lock
add
add
add
mov
mov
add
subl
mov
jge
xchg
addb
mov
adc
insb
mov
lret
std
adc
mov
mov
sub
sub
jo
mov
add
dec
sbb
pushf
mov
add
imul
lods
inc
rolb
lods
out
sahf
fwait
shll
addb
movsb
sub
inc
add
outsl
fldenv
clc
in
sub
popf
xchg
dec
push
inc
xchg
iret
pop
and
sub
add
add
mov
add
cmc
jl
iret
pop
xor
adc
sub
cmp
lds
add
pop
or
add
mov
lock
sbb
sbb
in
int
dec
cmp
addb
or
xchg
dec
pusha
add
cltd
into
jp
out
call
add
push
pop
or
add
mov
lds
add
add
mov
mov
sti
in
push
add
pop
pop
mov
mull
jbe
and
mov
xor
mov
leave
addb
jecxz
pop
pop
pop
dec
and
out
rcrl
push
adc
mov
adc
add
mov
add
pop
jns
aad
mov
cmc
stc
sbb
gs
mov
xchg
add
mov
or
or
mov
cld
xchg
pop
xor
mov
add
add
clc
mov
fsubr
test
add
cltd
pushf
or
jmp
dec
subl
add
lret
rcll
mov
mov
aad
push
xchg
mov
pop
mov
xchg
stc
rcrl
sbb
add
sub
xor
pop
xchg
dec
mov
cli
cltd
mov
mov
outsl
jge
into
jge
add
add
push
add
jnp
inc
adc
adc
out
add
jge
add
and
mov
mulb
imul
or
mov
fnstsw
add
mov
and
mov
popf
push
les
sar
out
lds
mov
fidivrl
add
or
xor
push
jmp
push
movswl
sub
addb
loope
adc
mov
add
lods
addb
cmp
lahf
cmp
push
add
xchg
mov
mov
bound
mov
cmc
jno
add
hlt
sbb
in
pop
cli
out
mov
add
add
loop
mov
and
fdivrs
mov
mov
or
mov
imul
or
rcll
mov
jno
aaa
loopne
mov
add
aad
adc
mov
mov
mov
adc
mov
xchg
add
mov
int3
repnz
aaa
jg
add
lret
nop
add
ljmp
mov
loop
mov
mov
repz
arpl
mov
insb
xchg
adc
mov
loop
mov
xor
mov
out
popa
xchg
ficompl
rorl
push
addb
xor
jp
test
sub
fiadds
xchg
leave
lahf
mov
mov
mov
add
ret
test
mov
jge
xchg
lahf
testb
push
cltd
dec
dec
pop
lret
or
inc
addb
pusha
add
cltd
cld
leave
xchg
addl
dec
add
add
ret
mov
mov
mov
push
ret
mov
sub
xchg
ja
into
xchg
add
mov
inc
inc
add
add
jbe
add
jo
mov
jl
cmc
sbb
stos
je
mov
popf
sbb
pop
pop
out
rcll
add
mov
mov
in
mov
fdivrl
add
fwait
fmuls
or
or
mov
push
push
in
jg
iret
sub
out
addb
loopne
mov
mov
in
aaa
test
push
movzbl
mov
imul
sub
jmp
loope
mov
push
test
fnstsw
fs
xor
cmp
addb
adc
mov
pushfw
pusha
add
mov
mov
in
pop
push
push
std
std
cmpsl
stos
adc
mov
sbb
out
test
negb
add
addb
lods
movsl
test
loope
dec
cli
push
push
mov
adc
test
in
add
pop
add
mov
mov
addb
into
mov
mov
inc
std
out
pop
dec
jb
mov
sub
popf
imul
push
xor
cmp
push
pop
lock
jnp
add
add
jmp
add
add
sub
mov
add
nop
add
mov
or
jns
jbe
push
roll
xchg
mov
push
add
cmpsb
cli
out
dec
add
mov
push
adc
mov
add
add
mov
push
pop
pop
push
jae
nop
add
loope
movsl
pop
jp
test
frstpm(287
xchg
mov
mov
fcmovbe
or
push
fldt
and
pop
fs
sti
fists
jo
mov
add
add
mov
xchg
movsl
data16
add
push
pop
sahf
iret
in
jp
pop
insb
mov
popf
aaa
fisubrs
mov
repnz
pop
mull
sbb
add
enter
mov
mov
pusha
add
add
add
mov
sub
test
xor
mov
mov
jae
divl
inc
jmp
mov
and
xchg
mov
lea
mov
cli
stc
jle
test
pop
sbb
imul
add
mov
cmp
mov
rolb
mov
push
int
add
add
mov
outsb
mov
xchg
add
fidivrs
insb
mov
stc
or
lret
sahf
in
mov
cmp
inc
add
add
fisubs
mov
add
insb
xor
xor
inc
pop
mov
adc
mov
mov
jno
imul
cwtl
lcall
rolb
mov
add
pop
or
cmp
push
lret
jp
add
add
add
cmpsb
pop
pop
popf
mov
pop
and
mov
xchg
add
add
add
fmull
ja
add
mov
add
stos
insl
popf
stc
mov
pusha
add
push
imull
fmull
add
add
add
insb
jmp
mov
fldcw
xchg
mov
jmp
sub
int
xchg
in
arpl
xchg
and
pop
dec
inc
adc
mov
std
leave
test
test
mov
ret
and
mov
push
add
dec
sub
test
xlat
mov
xlat
mov
add
in
loopne
mov
add
xchg
addb
adc
mov
fsts
mov
add
mov
push
add
xlat
push
out
push
xchg
sub
add
es
lods
int
arpl
xchg
pusha
add
adc
addl
mov
adc
add
jb
mov
add
stos
or
and
in
int3
cmp
xchg
or
and
leave
das
and
mov
sub
data16
nop
add
jns
push
add
test
adc
mov
push
scas
pop
lcall
mov
sbb
xlat
fildll
pop
cltd
mov
add
repz
mov
mov
add
sbb
add
sub
nop
add
pop
call
aam
mov
loop
mov
aas
sbb
jge
add
mov
mov
add
movsl
dec
fisubs
icebp
dec
push
add
add
fs
cmp
add
mov
mov
dec
and
xchg
add
test
dec
cs
xchg
mov
add
fistpll
jb
mov
add
add
movsb
rolb
mov
add
mulb
lahf
xchg
lock
test
hlt
and
test
add
insl
es
xchg
in
add
pop
ja
xchg
loope
dec
sub
add
popa
jae
rolb
mov
mov
negl
add
xchg
xchg
add
jmp
mov
mov
mov
pop
cltd
fs
ret
adc
push
je
mov
outsb
dec
xchg
push
add
dec
sarl
add
dec
aaa
cwtl
xchg
adc
sbb
inc
inc
add
mov
mov
pop
movsl
or
mov
clc
dec
clc
sbb
mov
sbb
add
ficomps
repz
jmp
add
mov
cmp
add
mov
add
cld
fs
imul
aad
mov
or
and
mov
add
rcl
stos
sub
gs
or
jge
mov
add
mov
mov
and
pop
jne
dec
das
leave
inc
xchg
xchg
mov
adc
mov
mov
stc
xchg
test
pop
push
dec
pop
and
mov
shl
sub
mov
xor
je
outsb
repnz
out
sbb
mov
sahf
mov
add
rcl
add
mov
lret
std
push
add
add
loope
ja
pop
pusha
add
add
out
lock
add
xor
adc
imul
add
out
daa
mov
mov
mov
hlt
imul
and
mov
inc
adc
mov
test
loop
mov
jns
fisubs
stc
jae
dec
int
add
add
mov
mov
mov
pop
or
scas
arpl
sub
and
mov
add
ljmp
add
outsl
out
fs
stc
inc
mov
fcomip
add
xor
addb
xchg
ss
ret
in
dec
jbe
repnz
outsl
dec
dec
addb
mov
repnz
dec
add
mov
push
cs
inc
pushf
sub
cmp
imul
xchg
mov
xchg
leave
out
jp
lea
cmpsb
mov
mov
mov
add
push
add
adc
mov
add
dec
popf
pop
in
fst
add
add
mov
mov
mov
fs
add
fsubrl
lahf
jne
rolb
mov
addb
fldenv
push
sub
add
pop
or
movsl
mov
rorl
loop
mov
mov
add
sbb
das
mov
jb
mov
scas
icebp
sbb
mov
lret
pop
ljmp
cltd
and
xlat
add
mov
cs
add
mov
pop
call
scas
push
push
pop
xchg
cmp
mov
pop
and
mov
test
add
push
cmp
pop
mov
out
je
xor
bound
mov
jb
mov
les
add
aad
iret
ljmp
add
iret
pop
outsb
insb
mov
add
cltd
idivb
addb
adc
imul
add
mov
arpl
ret
lahf
dec
pop
and
arpl
add
xchg
mov
jne
xor
add
add
ret
les
mov
mov
jl
jns
insb
dec
jnp
daa
xlat
test
mov
push
or
dec
and
fildl
sahf
mov
and
mov
lcall
or
mov
push
or
movsb
push
addr16
fistpll
add
mov
cmp
gs
enter
push
fcomps
hlt
inc
sbb
mov
scas
in
pop
loopne
mov
adc
mov
sysret
insb
fimuls
ret
dec
addb
stc
aam
lock
dec
scas
dec
aas
loope
add
push
mov
add
jns
jo
mov
add
shll
sub
inc
xchg
pop
xchg
mov
es
and
clc
rolb
rolb
mov
aad
ficoml
lods
out
cmc
pop
out
push
mov
add
cmp
mov
mov
inc
ss
mov
cltd
inc
sub
push
ds
pop
out
int3
lock
push
test
add
faddp
addb
movl
pop
test
mov
jg
and
pop
adc
mov
dec
hlt
inc
add
sbb
mov
cmpsb
xor
in
les
fsubrl
add
push
push
push
inc
add
cli
mov
stos
jo
mov
xchg
pop
xchg
rolb
mov
xchg
add
mov
insl
push
bound
mov
jge
adc
call
test
repz
pop
xor
mov
push
add
addb
insl
dec
stc
or
out
mov
dec
fidivl
add
test
or
and
mov
and
cmp
dec
sbb
jo
mov
outsb
push
sub
and
add
jae
push
push
add
and
jge
bound
mov
add
ret
test
add
add
add
adc
cli
mov
mov
negl
add
fldl
jnp
dec
fwait
pop
nop
add
loope
inc
pop
xorl
sub
add
push
cmp
cmpsb
loope
inc
stos
push
enter
loop
mov
pop
pop
adc
mov
mov
mov
cli
fadd
add
mov
outsb
jns
stc
lds
mov
pop
lock
xchg
pop
xchg
enter
jmp
xchg
add
and
mov
data16
jecxz
mov
scas
pop
sahf
fxch
ficoml
rolb
adc
xchg
imul
test
cld
dec
or
inc
add
adc
mov
adc
mov
scas
fs
mov
xor
jno
push
lcall
cld
add
ficompl
in
ds
imul
fldt
in
pop
or
mov
sbb
jne
or
mov
mov
imul
add
push
dec
mov
cli
data16
sarl
movsl
add
mov
cltd
mov
add
stc
mov
rolb
mov
mov
mov
mov
add
inc
push
cli
rcrl
filds
mov
movsl
sbb
lcall
mov
or
add
push
fdivrs
rolb
mov
push
add
mov
addr16
sbb
add
mov
mov
mov
dec
mov
inc
add
xchg
sahf
sub
mov
adc
xor
scas
sub
popf
lahf
or
mov
xchg
xor
mov
nop
add
and
mov
jbe
imul
mov
add
testl
add
lock
inc
inc
add
mov
mov
dec
sbb
stos
push
add
pusha
add
int3
jnp
aas
in
inc
add
jne
test
call
fildll
out
and
add
mov
mov
xchg
idivb
add
xor
and
mov
lock
jo
mov
test
jmp
mov
add
mov
mov
loop
mov
lock
inc
add
icebp
and
mov
add
xchg
jge
jp
fists
inc
add
or
lret
das
repz
repnz
pop
sti
cmc
sub
add
mov
add
mov
mov
add
push
negb
and
mov
mov
or
add
sbb
aad
add
repz
mov
add
leave
iret
or
add
xlat
in
sub
mov
add
sbb
mov
mov
rorl
push
xchg
mov
daa
xchg
xchg
movsb
cs
xchg
mov
mov
call
sub
add
add
add
xor
mov
fs
add
and
fwait
in
jnp
fwait
fs
or
sbb
sub
cli
or
movsl
testl
mov
add
xchg
adc
mov
or
mov
outsl
sbb
mov
imul
pop
cmpsb
rorl
or
jp
adc
mov
adc
mov
inc
push
jle
add
sub
add
jg
movb
sbb
ss
add
clc
dec
dec
outsb
test
push
inc
inc
sub
push
cmc
gs
add
ret
sbb
mov
test
test
int
dec
in
addb
insb
lret
loopne
mov
lea
mov
push
pushf
inc
add
mov
mov
loop
mov
xor
mov
add
add
mull
dec
fsubrs
cmc
inc
js
testl
and
sti
stc
out
test
add
inc
inc
add
mov
xchg
cltd
dec
mov
pcmpgtd
add
xchg
mov
test
out
inc
imul
mov
mov
mov
inc
das
xlat
iret
mov
mov
mov
jecxz
and
or
push
dec
jl
xchg
add
mov
pop
mov
fldcw
je
out
push
push
fdivl
outsb
aas
fdivrl
shrl
icebp
dec
jmp
dec
leave
into
repz
adc
jecxz
lcall
add
add
addr16
loopne
mov
imul
cltd
inc
add
sub
rolb
mov
xchg
xchg
insl
faddl
addb
ljmp
and
das
mov
stc
popf
cmp
addr16
add
dec
mov
enter
mov
add
in
scas
push
stos
fwait
cmpsl
mov
out
sbb
add
or
mov
dec
sbb
cmc
xor
mov
ret
jo
mov
sarl
lods
push
xchg
mov
scas
push
jbe
sti
std
push
sbb
fistps
xor
push
push
pushf
aam
xrelease
mov
js
jne
jg
scas
pop
jp
push
add
mov
repnz
je
out
adc
add
add
add
add
mov
xchg
xchg
mov
xor
and
mov
mov
ret
add
xchg
mov
adcl
les
push
add
fnstcw
xchg
sbb
hlt
dec
test
cmp
sbb
mov
add
add
add
fcompl
add
repnz
outsb
sub
shrl
cli
mov
outsb
in
in
add
mov
insb
mov
add
insb
lods
pop
mov
dec
nop
add
mov
add
mov
pushf
jo
mov
dec
in
in
sub
mov
clc
cltd
sub
lret
mov
add
mov
sahf
push
cmpsl
pop
sub
mov
movsb
pushf
shrl
pop
stc
jl
jl
call
nop
add
mov
add
inc
stos
xor
mov
imul
pop
aas
loopne
mov
sahf
add
mov
mov
add
lcall
pop
lea
push
add
mov
add
sbb
pop
ljmp
mov
mov
add
lds
adc
cmp
push
add
mov
mov
xchg
sub
mov
call
push
enter
mov
mov
inc
test
mov
popf
pop
arpl
add
xchg
mov
add
call
pop
pop
cmpsw
sbbl
das
mov
call
fistps
adc
adc
mov
ds
mov
pop
out
movsl
notl
sbb
sub
sub
fdivs
add
int3
stos
fs
sub
pop
fs
push
cmp
int
push
xchg
xchg
push
fldt
fnsave
add
and
mov
fnstsw
sbb
cmp
fildll
and
lcall
mov
add
cmp
int
adc
mov
fsubl
inc
fdiv
jno
add
pop
sbb
sahf
insl
sub
add
sub
call
adc
add
add
mov
add
mov
ja
cmp
add
ds
sbb
mov
nop
add
fscale
or
pop
ret
test
pushf
adc
aaa
fisubrs
imul
cmpsl
dec
repnz
ret
cmc
mov
add
or
mov
dec
mov
imul
popf
or
fcomi
adc
add
stos
movsl
and
mov
or
mov
jg
xchg
mov
pop
leave
leave
sbb
add
bound
mov
add
mov
mov
dec
xlat
and
loopne
mov
jg
add
jmp
aas
inc
add
inc
add
lods
sti
adc
pop
mov
xor
aas
ret
or
js
jb
mov
jne
sub
mov
cwtl
int3
lret
mov
scas
out
sub
mov
flds
lea
loope
sub
inc
int
je
mov
cmp
sbb
cmp
rolb
mov
add
add
mov
mov
ficompl
sub
cli
mov
add
subl
mov
xor
outsb
ss
movsb
rolb
mov
inc
pushf
jb
mov
jl
add
and
push
and
and
mov
inc
cld
popf
pop
add
xor
test
xlat
rolb
mov
lret
xlat
mov
ffreep
sbb
nop
add
cmpsl
rolb
mov
ret
movsb
dec
xor
xlat
sti
sub
mov
rcrl
sbb
ret
and
mov
add
inc
addb
aaa
sbb
push
nop
add
repz
mov
add
cmp
xor
push
or
cmp
cmc
sbb
add
mov
add
mov
or
add
add
mov
push
lock
sti
jne
sub
xor
rcrl
movsl
inc
out
fisttps
leave
test
outsl
mov
pop
sbb
add
mov
ret
addb
push
and
sub
cmp
sbb
and
add
push
xor
sbb
clc
xor
mov
aaa
stc
loopne
mov
mov
hlt
push
mov
insl
sub
dec
lcall
lock
add
adc
lods
mov
add
pop
xor
dec
cmp
mov
mov
add
pop
ds
pusha
add
cmp
cmc
outsl
jno
mov
mov
cmp
pop
push
add
mov
xor
mov
insb
xchg
add
add
xor
mov
lods
mov
mov
addb
add
xor
mov
sbb
test
push
mov
mov
lahf
gs
sub
dec
or
add
jg
ja
lock
cmp
mov
lcall
push
cmp
mov
pmullw
lcall
push
pop
push
add
add
andl
mov
add
add
pop
notb
rolb
mov
or
mov
cwtl
pop
mov
cmc
jg
jmp
sbb
cld
testb
lds
stos
dec
mov
pop
ret
iret
aad
mov
add
xchg
add
fdivs
jno
sti
gs
dec
add
mov
sbb
int3
sub
sahf
sbbl
jl
or
add
add
jp
add
or
mov
push
push
push
jnp
addb
lahf
mov
mov
adc
mov
jne
cs
popf
leave
and
mov
push
add
add
sbb
idiv
mov
and
ss
add
rolb
mov
mov
inc
mov
jmp
arpl
add
xchg
add
jmp
mov
dec
jbe
imul
rolb
mov
sysexit
sbb
inc
aas
std
pop
adc
out
pop
fdivs
mov
mov
cltd
addb
jp
mov
add
mov
sbb
jl
insb
push
outsb
bound
mov
add
inc
das
xchg
hlt
fildll
in
clc
cmp
or
mov
push
add
rolb
xchg
add
mov
add
divl
mov
les
cmpsl
jecxz
cmpl
data16
pop
mov
add
cli
adc
mov
add
mov
sbb
inc
mov
mov
add
mov
jo
mov
sub
add
ja
add
jnp
push
dec
inc
popa
xor
pop
cmp
cmc
inc
mov
cmpsl
sub
mov
sbb
insl
push
int
mov
loopne
mov
pop
jae
jp
sub
adc
mov
jo
mov
add
imul
mov
push
aam
pop
je
push
cwtl
and
pop
fwait
gs
insl
xchg
mov
jns
mov
decb
push
int3
movsb
push
jge
cli
jb
mov
nop
add
mov
in
cmc
idiv
or
add
in
xor
mov
scas
sub
dec
enter
mov
mov
add
lods
addb
mov
clc
nop
add
rcl
insb
stos
out
jl
inc
pop
mov
sbb
rolb
mov
es
add
mov
jg
jne
mov
lods
add
add
and
rcrl
mov
add
xchg
dec
mov
clc
mov
add
aam
sub
js
xchg
jecxz
loop
mov
popa
push
in
loope
std
cmp
pop
insb
mov
pop
out
scas
leave
fs
add
dec
clc
imul
xor
lea
add
and
mov
add
add
pop
and
inc
inc
xchg
add
loopne
mov
ds
movsb
dec
jb
mov
adc
out
iret
mov
jnp
cmp
addb
subl
or
pop
mov
popa
fwait
mov
cmc
ret
adc
mov
add
dec
or
stc
pop
ficomps
ret
pop
xor
mov
lahf
sti
push
and
cs
or
pushf
rolb
mov
xor
xor
mov
cld
arpl
sbb
out
repnz
pop
and
mov
cmp
je
xor
mov
push
lock
ds
pop
fdivrs
mov
mov
mov
add
fsts
jecxz
cmp
cli
in
sub
aaa
into
mov
mov
adc
mov
mov
lahf
or
stc
mov
mov
mov
icebp
or
add
add
gs
lods
pop
flds
add
ficoml
add
shl
sbb
add
pop
rolb
mov
dec
sub
add
mov
cmp
rolb
movsl
int
rolb
and
adc
mov
negb
mov
mov
xlat
pop
xchg
add
mov
add
lods
pop
sarl
add
mov
add
sbb
setle
xchg
aad
add
lods
jae
add
lahf
repz
jns
repz
out
and
mov
add
js
pop
pushl
and
add
mov
movsl
loope
cld
jmp
loope
daa
fidivrl
xchg
xchg
adc
mov
and
cs
out
cs
scas
add
mov
cmpsl
cltd
add
add
mov
dec
mov
mov
add
adc
mov
hlt
adc
mov
dec
inc
add
add
shrl
jecxz
iret
and
jmp
mov
mov
jp
dec
mov
xchg
aas
in
dec
xchg
dec
cmp
out
push
add
push
aad
jmp
insb
pop
stos
rolb
mov
mov
lcall
pop
cmp
cld
add
mov
adc
call
popf
fs
aaa
push
and
add
ret
cmp
or
pop
lock
mov
lock
mov
dec
adc
add
or
sti
or
mov
rcrl
sbbl
call
pop
lahf
jns
mov
xchg
sbb
enter
sub
add
add
stos
imul
adc
iret
ja
fisubrs
pushf
push
call
mov
fcmovnb
negb
outsb
mov
or
sahf
push
pop
dec
fs
pop
fdivs
push
fcompl
je
push
orl
mov
mov
nop
add
add
sti
pop
ja
xor
mov
aas
daa
mov
xor
mov
fwait
cmp
paddusb
jmp
add
orl
cmp
mov
jno
pop
pop
out
lods
test
imul
add
cs
fidivl
add
pusha
add
jb
mov
dec
or
dec
hlt
repnz
jns
insb
lods
xor
pushf
std
push
pop
fdivrs
in
cmp
mov
add
sub
ficomps
mov
cmp
mov
jle
add
cli
cld
xchg
mov
add
mov
cmp
mov
mov
ljmp
stos
push
add
das
pop
push
loopne
mov
or
roll
test
jno
rolb
mov
cmpsb
lods
iret
xchg
push
inc
mov
mov
mov
insb
rolb
mov
push
ret
mov
and
pop
iret
loop
mov
inc
incb
movb
mov
sub
xchg
outsb
int
sbb
mov
pop
mov
test
test
in
test
rolb
mov
les
mov
sbb
mov
pop
lds
mov
pop
push
mov
mov
insb
adc
xchg
adc
addb
push
mov
mov
std
outsb
jne
mov
imul
fldcw
xchg
out
xchg
dec
int
int
divl
jle
add
inc
sbb
jb
mov
and
mov
rolb
mov
cmp
dec
arpl
mov
lock
inc
add
cmp
fistl
pop
movsb
mov
mov
pop
aas
inc
inc
jecxz
push
push
add
push
fs
in
or
aas
ficomps
dec
lock
das
clc
pop
lret
cmp
cs
dec
pop
add
mov
aad
dec
xor
in
cs
cmp
jle
push
adc
mov
mov
mov
pusha
add
add
mov
xor
das
stos
adc
mov
adc
mov
les
add
add
lods
sbb
jle
add
pop
enter
mov
dec
es
pop
addb
test
add
jecxz
cmp
or
addb
sbb
bound
mov
setne
mov
add
add
sbb
mov
mov
mov
push
adc
sub
das
add
pusha
add
dec
xlat
je
cs
inc
add
mov
test
cmpsb
sahf
aas
test
adc
sub
pop
dec
inc
ljmp
popa
gs
loope
add
movsb
push
or
mov
or
mov
add
mov
cmp
xchg
repz
push
add
pop
push
sbb
mov
cmpsl
mov
hlt
cmpsb
in
call
shll
add
xor
mov
cmp
add
scas
insl
or
movsb
jb
mov
mov
les
cmp
sub
pushf
cmp
or
mov
sub
leave
outsb
iret
aaa
std
xchg
xor
mov
gs
add
aas
and
addl
addr16
and
mov
add
imul
daa
ficomps
cmp
fldenv
sbb
add
mov
add
es
aaa
adc
mov
ja
fistpll
mov
mov
add
dec
sti
sysexit
or
mov
cmp
add
das
xchg
add
add
add
cwtl
or
outsb
fwait
out
add
mov
loope
jo
mov
push
pop
aad
add
add
mov
bndldx
or
ret
ljmp
and
insl
sub
shl
int3
fst
pop
mov
mov
rolb
mov
xor
dec
out
test
jbe
addb
fistpl
rolb
mov
movsb
imul
dec
mov
mov
stos
mov
mov
mov
xchg
mov
cmpsb
jnp
loop
mov
bound
mov
into
mov
add
in
inc
adc
inc
dec
sub
push
jae
ss
pop
inc
lock
orl
mov
add
mov
sbb
add
inc
add
add
loopne
mov
inc
add
push
in
push
add
rcll
lret
dec
aas
jo
mov
inc
add
inc
addb
leave
mov
mov
mov
add
stos
das
mov
sub
iret
xor
sbb
mov
fdivl
fwait
cmpsl
in
add
mov
outsl
loopne
mov
adc
mov
pop
mov
fwait
xchg
int3
fisttpl
xchg
adc
addb
ds
fwait
sub
lret
xchg
lock
add
call
inc
add
je
lds
push
add
jle
add
or
lea
add
xor
les
shll
pop
imul
gs
sub
int3
jnp
sti
xor
mov
cmpsb
mov
push
call
movsb
or
add
mov
xchg
add
xorl
and
mov
rolb
mov
mov
mov
scas
in
mov
ds
mov
add
mov
aas
call
add
mov
cmp
mov
add
outsl
cld
xor
mov
pop
ss
daa
mulb
jl
dec
stos
jmp
sub
add
imul
ret
fwait
mov
add
dec
bound
mov
xchg
jmp
mov
bound
mov
mov
mov
mov
cmp
imul
and
int
in
mulb
clc
mov
lods
mov
mov
mov
or
sub
push
add
cltd
jns
pop
pop
xchg
pop
pop
enter
xchg
inc
adc
jno
dec
bound
mov
xchg
mov
arpl
jnp
mov
add
sub
push
mov
or
out
sbb
pop
push
add
repz
xchg
add
add
arpl
mov
addb
rcll
add
out
mov
mov
and
fwait
inc
dec
jecxz
adc
mov
xor
or
mov
add
into
add
mov
dec
fistpl
push
sub
pop
mov
mov
sub
lcall
jle
mov
jp
mov
add
out
fisubs
cmpsl
addr16
and
dec
cmp
dec
dec
lods
jbe,pt
rolb
mov
pop
pop
fcmovne
mov
icebp
addb
negl
jmp
ret
shll
add
sub
repnz
inc
mov
push
stc
test
inc
lahf
push
inc
insb
push
add
push
clc
insb
stc
je
mov
jbe
sbb
fwait
and
mov
add
dec
daa
hlt
sub
lahf
lods
or
xor
pop
xor
and
add
aad
add
dec
add
jg
testl
add
mov
sub
idiv
pop
outsb
fstpl
jno
jmp
fsubrs
mov
cmp
into
mov
dec
popf
hlt
andl
pop
ret
xor
mov
adc
ss
jg
cmc
rcrl
add
mov
add
xchg
add
mov
popf
add
sub
add
mov
mov
rolb
mov
mov
xor
mov
add
add
add
mov
mov
xchg
hlt
add
add
push
ja
insb
stc
fs
mov
pop
out
sbb
out
xchg
mov
popa
in
add
outsl
movsb
mov
add
mov
stos
lea
mov
jmp
lahf
repnz
jg
in
adc
cli
gs
mov
dec
mov
gs
mov
mov
mov
add
mov
jg
sub
mov
imull
repnz
fwait
cs
add
and
mov
jg
jb
mov
fs
pop
jae
cmp
negb
bswap
in
popf
std
rolb
mov
in
add
push
dec
sti
push
add
dec
test
add
std
add
add
psubusw
in
add
sbb
pusha
add
mov
and
mov
or
sub
mov
cmc
je
push
lock
xchg
push
dec
mov
rolb
mov
pop
jecxz
int3
pop
push
add
rolb
scas
sbb
sub
stc
push
mov
inc
xor
dec
pushf
ret
jecxz
daa
movsl
cmc
mov
add
cmp
addb
imul
mov
add
mov
addb
ss
and
mov
fs
cmp
arpl
mov
fwait
imul
pop
add
mov
int
lret
cmpsl
pop
or
das
lods
pop
clc
xchg
adc
mov
bound
mov
rolb
mov
dec
popa
out
jns
add
xor
mov
push
scas
call
and
addb
das
adc
dec
mov
lret
mov
outsb
adc
xor
push
ds
mov
inc
mov
jp
imul
mov
mov
mov
add
xor
mov
mov
jge
fnstenv
mov
push
inc
or
cmpl
add
mov
pop
add
mov
add
push
jne
jno
arpl
xchg
rolb
mov
lods
or
fxch
popf
iret
outsb
mulb
fsubl
xchg
cltd
ljmp
cmc
mov
iret
mov
mov
and
add
xor
mov
fistpll
sub
add
mov
mov
rolb
mov
repz
or
add
mov
js
jnp
int
aam
clc
and
mov
lret
adc
mov
push
int3
fistps
add
mov
std
call
dec
fcomip
xchg
and
jb
mov
iret
mov
out
je
or
pop
mov
clc
mov
cmc
lock
pop
dec
jno
insb
nop
add
pushl
dec
out
pushl
sahf
in
loop
mov
imul
jae
adc
mov
hlt
jo
mov
mov
out
rolb
mov
scas
pushf
cmp
add
push
in
imul
jp
cmpsl
jo
mov
inc
ds
fcomps
mov
mov
xchg
lods
ret
push
stc
inc
add
test
jo
mov
dec
test
add
hlt
push
or
mov
push
add
add
rcrl
adc
cmpsb
cmp
mov
dec
xor
mov
or
imul
add
add
push
and
imul
loope
pop
cmp
dec
stc
cld
and
call
jmp
imul
in
in
xor
push
cmp
data16
xchg
mov
mov
xor
cmp
lods
push
cmpl
dec
in
lds
je
mov
aaa
fwait
aam
inc
add
push
xor
mov
mov
lcall
xchg
dec
aaa
dec
adc
mov
inc
sub
sbbl
mov
mov
add
lods
adc
add
stc
or
add
xchg
icebp
sbb
push
das
aam
mov
insl
xchg
sbb
sbb
add
xchg
mov
mov
mov
xchg
fwait
loopne
mov
in
pop
push
mov
or
push
add
daa
xor
mov
add
data16
xchg
jge
sub
out
xchg
addb
aam
test
das
sbb
outsb
test
out
int3
data16
add
mov
adc
inc
xor
add
push
std
sub
jbe
cmp
ds
push
add
mov
mov
imul
jle
mov
mov
jbe
sub
outsl
movb
cmp
pusha
add
add
outsb
mov
dec
dec
mov
add
aam
outsb
aas
rolb
mov
add
cld
rcrl
jecxz
xor
mov
das
lock
loope
aam
mov
hlt
mov
xlat
sub
ret
cmpsl
je
xor
imul
mov
push
mov
mov
insl
scas
gs
add
mov
jecxz
sbb
add
mov
mov
jae
or
cmpsl
roll
mov
add
pop
sbb
dec
imul
out
inc
add
rolb
mov
xlat
test
sub
std
xchg
test
lock
mov
fmul
scas
xchg
add
loope
std
xchg
sbb
inc
add
mov
mov
clc
aam
sbb
outsl
rorl
je
arpl
jg
sub
add
mov
cld
cs
xchg
sbb
movsb
add
sarl
adc
mov
push
add
mov
mov
rolb
add
mov
mov
add
stos
mov
clc
push
addb
icebp
or
mov
jg
add
push
out
outsb
outsb
loopne
mov
add
inc
pop
sti
push
outsl
scas
push
push
adc
mov
sub
sub
std
sbb
sbb
fidivl
add
fwait
push
push
add
insl
mov
mov
std
push
sub
inc
fnstsw
cwtl
push
and
add
mov
leave
sbb
add
lds
aam
mov
mov
daa
cmp
stos
in
xchg
or
push
xor
mov
pop
inc
add
mov
adcl
mov
add
mov
mov
add
add
and
mov
mov
lea
jmp
outsb
mov
rolb
inc
adc
clc
add
xchg
mov
out
aad
adc
mov
or
cld
aad
les
add
nop
add
addb
mov
mov
addb
dec
sub
inc
push
xchg
movsl
adc
mov
sbb
dec
mov
pop
jno
popa
outsb
in
pop
dec
sub
iret
je
popa
jb
mov
mov
dec
fcoms
mov
sbb
pop
push
mov
mov
pop
mov
add
addb
out
mov
test
add
dec
neg
pop
ret
int3
mov
rolb
mov
jmp
or
dec
iret
add
mov
jl
and
cltd
mov
mov
add
sbb
shll
add
pop
jno
push
jno
or
fiadds
xlat
sbbl
lods
lret
pop
push
add
jbe
test
jl
cli
push
bound
mov
xchg
mov
out
stc
fldt
jns
test
xor
add
push
add
shll
mov
add
xchg
mov
test
mov
xor
mov
jns
in
inc
dec
pop
pop
dec
fcom
add
cmc
adc
mov
sub
mov
aad
test
pop
les
mov
sub
mov
scas
negb
cwtl
xor
cli
xchg
sub
push
add
mov
movsl
mov
mov
mov
add
pushf
mov
or
jg
test
adc
test
push
cmc
jne
andl
push
pop
hlt
ja
xchg
mov
mov
je
loopne
mov
sub
mov
addb
enter
adc
mov
repnz
fsubl
and
test
mov
movsb
jne
sub
add
mov
movb
mov
inc
or
lcall
xor
mov
out
insb
lea
aaa
dec
xchg
das
sahf
or
inc
mov
test
fwait
adc
mov
xchg
mov
mov
arpl
out
es
mov
dec
cli
addb
adc
mov
inc
add
mov
inc
in
and
add
imull
pop
ss
cmp
xlat
rolb
outsl
mov
call
mov
add
loopne
mov
fwait
in
movsl
pusha
add
mov
cltd
mov
mov
push
mov
mov
xchg
ss
xchg
and
and
mov
mov
int3
jns
push
add
pop
dec
mov
ret
xchg
flds
cmc
in
dec
lds
push
fcoml
add
cltd
stc
sub
call
inc
xchg
pop
sbb
pop
push
push
aaa
mov
dec
xor
mov
hlt
out
lret
xor
test
add
mov
mov
mov
dec
insb
xchg
add
out
cld
std
ljmp
sub
lcall
xor
jnp
sub
add
aas
mov
mov
das
es
cmp
lret
in
mov
inc
jp
aas
add
mov
cmp
add
daa
enter
push
or
pop
or
mov
loope
test
imul
rolb
mov
xchg
and
mov
adc
mov
fs
add
add
imul
mov
outsl
fstl
mov
inc
add
das
jns
dec
mov
add
in
ljmp
fdivrl
ret
int
inc
lock
mov
adc
mov
mov
mov
mov
sub
add
pop
mov
in
out
jnp
jbe
mov
add
cmpsl
loop
mov
mov
mov
mov
mov
test
push
add
mov
mov
push
dec
push
pop
adc
cmp
jno
or
scas
adc
and
cmovle
mov
lahf
mov
add
add
mov
movsl
pop
mov
cmp
shl
call
das
pop
sti
xor
out
push
in
add
inc
add
add
stc
push
aas
addb
and
mov
add
mov
nop
add
fwait
push
inc
add
mov
mov
mov
add
add
push
mov
sbb
inc
add
pushf
push
inc
push
dec
xchg
out
test
cmp
jb
mov
imul
lahf
in
or
cltd
mov
mov
lret
ds
in
out
mov
sub
in
test
sbb
imul
mov
jno
add
sbb
sbb
insb
aas
mov
cmp
mov
aas
rolb
mov
inc
mov
mov
repz
add
gs
addr16
add
add
sub
outsl
iret
mull
repnz
mov
imul
add
or
add
xchg
into
inc
pop
ja
test
aaa
push
and
pop
in
pushf
je
les
adc
imul
xchg
out
cmp
add
xor
mov
decl
jno
addb
and
cmpsb
pop
lret
in
mov
mov
mov
ja
rolb
mov
jmp
das
cmpsb
pop
jp
ficoml
scas
dec
add
mov
add
push
add
push
jl
adc
pop
ret
rolb
mov
mov
psubd
mov
jbe
inc
pop
cmp
push
and
sbbl
adc
mov
mov
xor
mov
add
jmp
mov
pop
xor
mov
std
dec
aas
or
stos
xchg
pop
rolb
mov
jo
mov
rolb
mov
std
mov
out
es
sbb
add
mov
push
pop
addb
mov
rorl
mov
push
inc
out
enter
add
inc
add
add
mov
mov
add
xor
mov
mov
add
nop
add
int
je
mov
nop
add
mov
inc
sbbl
mov
ljmp
sbb
shll
imul
push
bound
mov
add
xor
adc
mov
add
mov
inc
add
push
inc
int
mov
mov
add
mov
xor
rolb
mov
icebp
mov
and
add
inc
enter
mov
call
rolb
mov
iret
stc
iret
mov
xchg
add
mov
popf
cmpsb
mov
aaa
inc
out
cld
mov
adc
ds
adc
fwait
stos
adc
aam
leave
or
add
sti
add
pop
incb
imul
stos
mov
call
psadbw
cmc
sub
adc
cmpsl
pushf
je
inc
icebp
xor
add
jae
ljmp
mov
lods
inc
icebp
jle
sbb
add
out
jmp
rolb
es
mov
dec
aam
bound
mov
bound
mov
add
cmovl
pusha
add
loopne
mov
fcompl
rolb
mov
mov
outsb
mov
mov
add
mov
mov
add
pop
and
fimuls
push
daa
push
push
loopne
mov
call
add
mov
add
push
mov
mov
mov
mov
add
mov
mov
add
dec
xchg
arpl
rolb
mov
add
xor
ret
pop
push
mov
mov
sub
shrl
inc
adc
jecxz
add
sub
sbb
movb
mov
out
addr16
xor
sub
mov
add
pop
loop
mov
add
mov
add
mov
add
addr16
and
iret
fbstp
lret
mov
inc
mov
and
mov
jecxz
add
cld
and
add
mov
pop
pop
mov
mov
or
add
adc
mov
add
cs
pop
mov
or
cmp
sbb
cld
dec
das
push
nop
add
mov
mov
fldlg2
mov
mov
push
inc
iret
popf
push
push
sub
lret
jecxz
stos
inc
and
dec
pop
adc
mov
and
mov
push
add
pop
inc
add
sarl
mov
stos
inc
cwtl
outsl
into
jae
cltd
fst
add
add
add
repnz
mov
xchg
lods
test
push
jp
popa
out
pop
xor
push
jp
add
add
add
mov
xor
jmp
cli
inc
jae
adc
mov
cltd
insb
dec
mov
jmp
add
mov
push
push
aam
add
dec
jae
push
add
jno,pt
sub
fcmovb
add
iret
cmp
push
adc
xchg
in
daa
fiaddl
les
js
mov
cmp
int
stos
dec
idivl
imul
inc
cmp
loopne
mov
sbb
pop
inc
add
add
xor
add
repz
js
out
mov
dec
adc
mov
jge
add
ret
pusha
add
loope
adc
mov
insb
sub
inc
sbb
dec
adc
ja
push
jb
mov
add
popa
dec
push
add
out
add
add
mov
fldl
add
test
mov
shll
std
xor
add
sbb
cld
sahf
pop
ljmp
pop
es
push
mov
mov
add
cmp
fsubrp
xor
mov
mov
xchg
mov
sub
push
movsl
mov
test
iret
std
lods
mov
push
mov
mov
mov
mov
add
fxch
xlat
inc
push
leave
add
rorl
cmp
pop
sub
xchg
xor
push
jecxz
testb
xchg
mov
xchg
dec
scas
hlt
mov
gs
andl
jmp
mov
mov
popf
sub
testb
loopne
mov
sub
dec
xor
add
mov
ss
outsb
fsts
mov
jge
nop
add
mov
add
in
add
fisubrs
test
ss
cmp
sub
test
cmpsl
pop
sub
mov
out
jecxz
gs
or
outsl
xchg
jmp
rolb
mov
add
dec
cmpsb
mov
add
xor
mov
add
fxam
ss
xor
add
xor
mov
add
and
idivb
add
or
js
test
xor
mov
jo
mov
dec
js
xor
mov
add
sbb
sti
rcll
add
push
push
cmp
lock
mov
pop
in
lcall
aas
inc
mov
pop
sbb
add
add
cmp
dec
loopne
mov
jns
enter
test
and
mov
arpl
add
add
jecxz
in
negb
push
rolb
mov
mov
pushf
ficomps
ds
add
mov
inc
add
gs
pop
cli
and
mov
out
rolb
mov
stos
int
push
sub
cld
cmp
int
mov
cwtl
movnti
fsub
ss
sti
out
pop
or
rolb
mov
mov
loope
test
adc
pop
mov
sub
sbb
add
fnsave
loopne
mov
imul
xchg
adc
lock
in
pop
xor
test
mov
daa
int3
loopne
mov
test
mov
mov
add
stos
xchg
enter
jno
xor
push
dec
pop
test
addr16
cmpsl
inc
add
push
sbb
mov
mov
adc
mov
mov
test
add
popa
fwait
inc
je
imul
mov
shr
sbb
sbb
and
mov
jb
mov
add
jb
mov
or
lds
in
lea
fstpt
adc
fiadds
or
adc
mov
xchg
jns
mov
fsubrs
js
add
jp
cmp
into
movsb
pushf
sbb
push
jne
pop
cld
sub
sub
push
loope
lret
xchg
js
add
jbe
jo
mov
jno
aas
iret
inc
mov
add
iret
push
cmp
add
dec
aam
add
push
stos
sbb
mov
bound
mov
pusha
add
or
popfw
mov
daa
lcall
iret
jns
add
fldt
mov
mov
mov
mov
jno
inc
add
jp
add
icebp
sub
cld
jb
mov
ficompl
ljmp
mov
and
adc
xchg
cmp
frndint
cmp
add
mov
inc
inc
cmp
push
shrl
inc
add
roll
add
add
dec
xchg
or
xor
out
mov
aaa
xchg
sub
mov
test
push
outsb
sbb
jae
xor
xor
iret
inc
scas
ss
test
add
mov
inc
add
xchg
jmp
mov
add
add
mov
mov
and
mov
out
push
icebp
fxtract
xor
jle
inc
add
add
mov
xor
mov
pop
mov
mov
add
sub
clc
imul
inc
jle
add
inc
bound
mov
mov
bound
mov
arpl
jae
iret
popa
je
add
lret
fsubrl
cmpsl
sbb
push
lds
add
cmp
mov
hlt
add
bound
mov
mov
aam
pop
push
js
stos
imul
or
or
lock
add
xor
lret
dec
out
xchg
decl
es
fcom
add
addl
cmp
pop
xor
mov
add
mov
cmp
and
cld
dec
js
fildl
mov
mov
outsl
imul
jge
add
arpl
pop
movsl
fs
add
jp
sub
and
fsubl
push
add
inc
pop
jnp
das
repz
mov
into
jmp
js
repz
push
add
add
add
xor
roll
cmp
mov
test
lods
push
pop
dec
call
mov
mov
mov
push
xchg
stos
out
mov
daa
and
mov
mov
add
add
and
xor
mov
dec
pop
sub
sub
pop
sbb
mov
jg
add
in
cmp
jbe
and
mov
les
mov
mov
jns
dec
or
mov
add
mov
stos
ss
imul
mov
mov
es
xchg
addb
add
mov
add
xchg
addb
inc
pop
mov
add
add
mov
adc
add
add
insl
mov
mov
add
fwait
cmp
or
add
mov
jno
gs
lcall
movsb
inc
add
push
rolb
mov
mov
int3
or
mov
bound
mov
mov
add
mov
icebp
cmpsl
xchg
clc
xchg
pop
fcoms
mov
add
mov
push
aad
pop
les
push
test
pop
pop
mov
sub
gs
add
push
jo
mov
fstl
mov
add
mov
mov
cs
aas
mov
add
sbb
fdivl
xchg
add
add
jns
push
adc
mov
fwait
push
or
popa
test
fdivr
pop
xchg
cs
addb
testb
mov
inc
loopne
mov
add
add
rolb
mov
lea
ficompl
push
inc
adcl
or
out
push
add
imul
pushf
out
cmc
lahf
inc
jnp
icebp
loopne
mov
ja
add
popa
jmp
mov
add
add
add
cli
jnp
cltd
in
mov
pop
dec
inc
iret
and
mov
mov
lds
rolb
mov
in
nop
add
das
adc
mov
repz
sub
test
mov
add
add
pop
inc
sub
adc
xor
leave
pop
enter
mov
push
pusha
add
stos
adc
pop
rolb
stos
enter
gs
mov
out
pop
mov
add
int3
imulb
daa
addb
push
popa
daa
stos
jge
add
jb
mov
insb
arpl
add
sbb
push
fidivrl
push
movsb
inc
pop
lahf
cmpsl
clc
pop
addl
or
jns
jmp
sbb
rolb
push
sti
adc
mov
rolb
mov
mov
fidivs
mov
rolb
jl
test
stos
sub
das
adc
mov
xchg
bswap
sub
adc
cli
fsub
add
jmp
adc
xabort
push
les
mov
adc
xor
lcall
dec
bound
mov
xchg
nop
add
mov
ret
cmpsl
mov
imul
mov
movsl
or
add
lret
push
add
or
push
cmp
lret
mov
add
je
push
add
stos
addb
xchg
mov
add
add
and
repz
push
cmpsl
mov
mov
mov
fisubrl
add
nop
add
add
gs
pop
push
add
sbb
nop
add
icebp
push
xchg
mov
jno
xor
xchg
jg
sbb
add
mov
add
and
mov
mov
add
mov
mov
add
ret
aad
std
loope
push
push
testb
mov
pop
sub
add
or
mov
add
xchg
add
fldenv
push
mov
scas
sahf
pop
push
pop
xor
das
pusha
add
sub
jo
mov
dec
sub
adc
aaa
lcall
add
mov
shrl
cmpsb
cli
adc
mov
add
ja
pop
xor
push
pop
add
mov
and
push
test
add
add
mov
push
pop
mov
rolb
mov
in
jmp
add
filds
push
scas
movsb
or
dec
dec
popf
sti
mov
cmc
mov
inc
mov
ds
sub
add
add
movsb
ljmp
cwtl
mov
addb
adc
rolb
fwait
arpl
movsb
fdivs
and
add
mov
fucomp
jnp,pt
dec
lods
jae
std
xor
jo
mov
add
or
fwait
xchg
fstl
add
xchg
add
mov
movsl
xor
mov
mov
pop
pushf
or
pop
fnstenv
clc
mov
mov
jle
push
sub
stos
or
mov
mov
add
int
into
pusha
add
lcall
dec
out
ja
mov
mov
ss
in
fwait
das
push
adc
test
fstl
mov
add
mov
push
add
movsb
divl
mov
out
and
mov
mov
stos
pop
inc
add
pop
je
add
xchg
xchg
jecxz
pop
fldt
jp
adc
mov
lcall
lcall
push
and
mov
xor
add
cltd
sbb
mov
mov
scas
or
popw
test
add
push
sub
add
ficoml
mov
mov
in
outsl
jno
xchg
pop
andl
add
ret
inc
mov
mov
dec
add
mov
mov
sti
jl
mov
sarl
mov
push
and
xor
mov
sbb
push
je
add
add
add
hlt
call
add
mov
inc
mov
mov
cmp
xor
stc
and
pushf
loope
insb
pushf
push
jb
mov
add
mov
popa
pop
xchg
xchg
add
add
rolb
inc
and
mov
aas
xchg
in
cmpsb
addr16
jge
ljmp
cltd
daa
sub
mov
in
addr16
add
mov
lock
mov
mov
mov
mov
sub
add
add
push
leave
fisubrs
jle
rcrl
dec
dec
test
stos
jmp
xchg
pop
mov
test
mov
test
inc
out
push
lock
mov
addr16
in
add
dec
adc
pop
fsin
data16
ret
cmp
imul
mov
ds
ss
aaa
mov
mov
pop
pop
popf
mov
sahf
fnstsw
add
jnp
test
out
ss
iret
and
add
add
mov
dec
in
outsl
into
nop
add
cmp
sbb
aas
adc
mov
data16
cmpsl
negl
cmp
fsts
mov
pop
jnp
inc
in
add
add
call
jns
sub
jecxz
ficomps
ljmp
hlt
mov
xchg
cmp
cmp
mov
inc
add
out
out
jb
mov
or
add
sub
add
xchg
mov
sbb
rolb
xor
mov
cmp
dec
add
mov
mov
add
mov
insl
cs
sub
out
xor
pop
sbb
pop
lods
cmp
sub
jle
push
add
jo
mov
mov
xchg
add
icebp
jle
mov
sbb
scas
mov
adc
dec
les
mov
push
out
jecxz
fadds
adc
mov
pop
lahf
inc
sub
mov
cmp
xor
test
xchg
cltd
or
add
inc
adc
jae
adc
cwtl
jns
lahf
sti
dec
pop
outsl
mov
mov
mov
lret
mov
insl
and
mov
push
enter
sub
cmp
and
and
pop
gs
mov
cltd
sub
mov
pop
cmp
pop
add
bound
mov
stos
dec
dec
ja
addb
dec
sub
cltd
xchg
pop
xor
mov
mov
add
jns
jg
out
addb
or
stc
mov
dec
cmp
mov
addb
adc
mov
sbb
inc
out
add
ja
and
push
push
lret
push
dec
fildll
xor
adc
sahf
ss
aam
lret
mov
add
mov
sub
mov
inc
add
jbe
js
add
jbe
dec
stos
popf
xchg
add
mov
jo
mov
xor
scas
pop
clc
or
ss
add
inc
adc
xor
mov
mov
mov
icebp
adc
xor
sub
mov
mov
ret
repnz
add
push
cmpsl
loopne
mov
stos
scas
int3
aad
in
jbe
mov
fidivrs
mov
add
scas
shl
fnstcw
das
or
add
fadds
mov
mov
cmpsl
mov
push
add
out
ficomps
push
push
and
test
mov
dec
enter
mov
push
ljmp
mov
xor
push
push
lcall
repz
add
push
dec
and
mov
ffreep
add
add
jns
clc
mov
addb
ret
addb
cmpsl
dec
ja
adc
add
call
nop
add
popl
add
clc
fcoms
inc
add
stos
dec
movsb
jbe,pt
add
add
cmp
fwait
push
addb
out
decl
xchg
add
and
mov
push
add
dec
das
ljmp
dec
popa
pop
inc
or
add
dec
inc
add
fbld
dec
mov
inc
ret
jecxz
sub
test
rolb
add
outsb
or
fildll
sbb
rolb
or
add
pop
pop
lea
xor
icebp
pop
hlt
adc
jmp
addb
stos
aas
stc
cli
fs
cmpsl
sbb
adc
movsl
ret
jp
xchg
push
add
inc
or
adc
add
mov
aas
outsb
out
xor
mov
xchg
mov
sub
add
js
lods
jbe
sbb
push
mov
ret
call
add
add
mov
inc
add
stc
pop
ret
sbb
dec
je
mov
out
orl
loop
mov
aaa
push
add
mov
mov
xchg
cmpsl
cs
arpl
push
push
push
add
dec
xchg
inc
push
addb
addr16
ja
sbb
add
inc
xlat
xchg
jae
repz
out
rolb
mov
repz
xchg
add
out
ljmp
sbb
dec
pop
mov
mov
addb
pushf
jle
jns
jae
aaa
fs
mov
and
mov
sub
and
mov
mov
xlat
push
add
or
mov
cltd
xchg
cmpsb
pop
push
dec
pop
addb
aam
ret
push
mov
out
push
push
jmp
or
jno
and
jbe
pop
pop
repnz
bound
mov
out
ja
add
push
in
pop
mov
inc
cmpsb
je
and
mov
xor
mov
push
add
push
push
popa
xor
jmp
add
das
fldt
or
xor
mov
push
fwait
out
add
add
lahf
lahf
inc
enter
sbb
jg
mov
mov
jge
add
add
mov
cmpsl
sub
add
pushf
inc
push
xor
mov
xchg
inc
xchg
stc
push
js
orl
shll
pop
loop
mov
mov
add
xor
mov
cmp
xor
leave
mov
fisubrl
add
push
add
in
cmpsb
sbb
add
inc
mov
mov
add
dec
bound
mov
pop
stos
mov
rcr
adc
mov
jo
mov
jl
mov
cmp
push
inc
mov
jnp
push
add
mov
out
dec
sub
lcall
xchg
pop
fwait
add
shr
out
add
add
adc
arpl
pop
push
out
sbb
jae
push
add
adc
mov
fdivr
jno
clc
dec
sbb
sub
mov
in
aad
cltd
imul
fdivr
mov
sbb
rcrl
jge
aad
xor
mov
test
mov
in
loope
xlat
lods
xchg
and
inc
add
scas
and
fstl
mov
or
xchg
inc
add
mov
add
rolb
mov
mov
mov
shll
into
xchg
add
mov
cs
ljmp
mov
sub
sahf
jnp
mov
gs
xor
gs
add
pop
rolb
mov
add
cld
sti
cmp
in
cwtl
sti
clc
add
leave
pop
xor
mov
dec
add
mov
push
dec
xor
mov
inc
or
addb
add
les
add
add
and
mov
mov
fcmovnb
mov
mov
les
cltd
push
add
mov
lret
fnstcw
int3
jb
mov
outsl
push
outsl
stc
or
push
or
pop
adc
add
mov
add
pop
sbb
add
add
jle
xor
icebp
aaa
mov
scas
mov
mov
xchg
pop
xchg
jo
mov
pop
in
mov
mov
or
add
inc
pushf
jbe
enter
jns
enter
lret
jne
add
mov
pop
fwait
add
mov
inc
jnp
push
add
imul
jnp
mov
add
add
mov
or
pop
jle
pusha
add
mov
mov
xchg
je
cwtl
dec
fs
es
add
mov
jp
add
cmp
mov
add
std
rolb
mov
jno
xchg
push
repnz
in
insb
adcl
add
fistl
add
call
inc
sub
loopne
mov
pusha
add
inc
xor
inc
inc
movsb
or
stos
iret
in
loope
add
mov
mov
outsl
int
sahf
xor
mov
loope
add
out
test
adc
mov
add
mov
xchg
imul
mov
pop
in
daa
mov
add
mov
je
pop
lret
xor
add
add
add
mov
aaa
clc
stos
repnz
add
mov
dec
dec
inc
add
dec
mov
cmpsb
dec
mov
ss
out
cli
int
add
das
dec
dec
push
add
mov
adc
mov
add
out
jmp
daa
in
add
mov
je
iret
sbb
add
fldcw
add
pop
into
mov
push
jae
cmpsl
push
out
add
inc
inc
add
cmpl
imul
test
dec
inc
push
add
push
push
in
push
rolb
mov
sbb
sub
and
ja
push
insb
pushf
in
mov
or
add
ficoml
push
xlat
leave
insl
cmp
xchg
popf
and
mov
mov
scas
jmp
adc
jae
push
cmpsl
dec
mov
inc
and
xlat
pop
xchg
or
xchg
insl
inc
add
add
dec
test
mov
aaa
ljmp
push
jle
add
