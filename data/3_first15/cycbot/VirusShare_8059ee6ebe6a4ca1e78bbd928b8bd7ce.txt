fnstcw
fs
mov
add
stc
or
add
stc
jns
stc
repnz
add
add
scas
jns
add
add
ret
stc
sti
xchg
add
movsb
jns
sbb
mov
add
test
add
mov
in
xchg
xchg
push
arpl
adc
add
movb
enter
add
and
imul
mov
clc
icebp
das
or
pop
jbe
fcmovnbe
jno
out
loopne
adc
push
sbb
pop
pop
incb
fs
call
add
jno
add
push
sarl
fnclex
push
inc
nop
xor
aam
jmp
daa
and
outsl
test
add
fisubl
mov
add
dec
xchg
cli
jp
add
cmpsl
jl
add
sti
jne
loop
clc
pusha
add
sar
test
ret
adc
or
jne
insb
iret
addb
add
add
push
pop
and
ss
pop
jge
sete
ret
repz
jne
add
xor
add
sbb
xchg
mov
int
test
cs
fs
jmp
adc
jae
inc
xlat
in
in
rcll
lods
mov
movb
or
lds
das
push
loope
mov
sti
test
add
pusha
add
push
call
inc
stc
push
push
arpl
sbb
or
cmc
sbb
ret
add
sub
mov
add
mov
out
sbb
sbb
popa
inc
add
pop
sti
xchg
adc
addr16
add
add
add
jns
lock
leave
cmp
les
or
dec
lcall
push
mov
test
mov
outsb
push
xor
sbb
outsl
dec
and
insb
dec
add
add
dec
js
push
test
aam
xor
add
adc
loop
jl
mov
addb
ja
cmp
mov
inc
add
add
and
add
inc
adc
add
xchg
jecxz
or
add
jg
add
xor
add
push
xchg
movsb
cmpsl
aas
scas
add
mov
add
xor
addb
sub
in
cli
cmp
xor
shrb
adc
add
pusha
add
outsl
iret
movsb
or
cmpsb
or
pop
adc
in
addr16
in
pusha
add
push
int
jns
lea
xor
shl
mov
mov
mov
pop
fnstsw
mov
inc
add
loopne
out
push
add
add
jns
add
cmpsl
pop
cs
or
mov
xchg
hlt
jo
imull
mov
mov
dec
js
xchg
pop
fsts
int
out
rcll
aas
lods
inc
add
inc
sub
push
mov
test
cwtl
push
ret
cmp
push
shll
push
mov
pop
ss
jns
insb
mov
in
arpl
mov
mov
mov
lcall
aaa
pop
into
mov
mov
loop
adc
push
aad
adc
stos
mov
icebp
mov
outsl
mov
insb
mov
outsb
jge
cmp
add
sahf
add
mov
lcall
fstps
jl
lahf
adc
js
daa
cmp
and
add
mov
xchg
mov
insl
sub
sti
insl
sbb
add
jo
mov
add
mov
fwait
or
push
scas
jo
fs
jnp
fs
jns
movsb
testl
add
mov
addb
or
imul
jno
pushf
jnp
push
mov
testl
push
add
scas
fnsave
and
sbb
xor
xor
inc
sub
pop
push
cmp
inc
mov
ja
xchg
gs
iret
inc
mov
add
cltd
xchg
push
add
xchg
jmp
sarl
lds
insb
pop
mov
mov
cltd
fsubrs
add
cmpsb
cmp
inc
jle
mov
jnp
add
add
add
or
add
cmp
xchg
icebp
aam
cmp
fsubl
add
mov
insl
or
mov
dec
sbb
mov
jecxz
mov
xor
test
int3
cmp
aad
lahf
xchg
and
arpl
sub
pop
push
jecxz
cmp
xchg
or
data16
add
cmp
mov
sbb
add
add
or
imul
xor
cwtl
sbb
add
push
xchg
addb
stos
sub
outsb
dec
fstl
lcall
adc
adc
ret
mov
add
dec
sarl
sbb
mov
pop
jle
fsubl
lods
pop
aaa
testl
add
add
jnp
rcll
add
add
dec
mov
or
xchg
in
jbe
adc
test
adc
fidivrl
fwait
inc
xchg
inc
add
mov
adc
jl
xchg
adcl
sub
and
xor
mov
inc
add
pop
mov
stos
sti
lds
cld
mov
add
sar
ljmp
cs
bound
and
fistpl
loop
shll
mov
xchg
pop
cli
sub
xchg
mov
icebp
test
cs
insb
cltd
xchg
or
stos
adc
lret
test
lods
outsb
in
lds
btr
mov
loope
and
pushf
push
repz
xchg
sub
push
fs
lods
cli
out
pop
fists
xchg
aaa
xlat
lods
mov
push
cltd
add
nop
dec
out
push
mov
sub
push
push
push
cld
call
sub
mov
imul
es
ss
lea
push
push
push
call
cmp
je
mov
lea
push
push
es
call
jmp
icebp
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
lea
sub
xacquire
mov
sub
mov
cs
push
push
lret
jmp
add
add
addr16
popf
fldt
popf
dec
jo
add
ficompl
xchg
in
add
push
shlb
xchg
out
fs
in
xor
pop
push
adc
add
sbb
scas
jmp
bound
sarb
jnp
and
cltd
imul
cs
xchg
addr16
jg
add
imul
adc
or
and
fiaddl
adc
pop
dec
cltd
and
cs
rcll
add
popa
stc
into
add
cmp
pushf
xchg
dec
cwtl
loop
pop
pop
sahf
sbb
or
jbe
lea
sysexit
or
data16
mov
clc
cmp
inc
add
repnz
fs
test
add
ret
or
pushl
imul
test
sub
lock
in
and
fsubrs
mov
and
sub
add
fwait
dec
add
inc
add
lcall
lods
adc
jb
daa
cwtl
push
adc
xor
jmp
add
push
sub
lea
pop
stc
sbb
insb
ret
fs
and
xor
out
negb
dec
and
or
mov
jbe
imul
and
pop
mov
add
mov
pusha
add
mov
mov
leave
push
add
dec
jae
lret
rolb
pop
pop
jnp
mov
mov
hlt
and
jb
mov
fwait
inc
pop
es
mov
adc
fldl
add
jg
fstpl
and
fsubr
sbb
jge
test
pop
aam
mov
adc
adc
jbe
and
das
jne
or
push
xchg
cli
or
and
mov
ret
dec
dec
stos
enter
mov
adc
daa
sahf
and
xor
scas
pop
rclb
mov
scas
cmp
cli
and
out
out
sbb
aam
in
test
test
dec
push
or
cmp
jno
in
inc
rol
add
mov
mov
mov
xor
add
sub
insl
cmpsl
out
mov
and
lods
fwait
jns
pop
sbb
cmp
inc
pop
sbb
adc
xchg
inc
loopne
or
addb
pop
repz
push
mov
insb
or
aam
addr16
movsb
ja
mov
sub
pop
pop
dec
movsl
dec
cmp
jo
jnp
outsl
mov
mov
add
jle
jb
cmpsl
ljmp
nop
xchg
jb
mov
loope
sub
mov
inc
fdivl
dec
or
in
lock
cmovns
xchg
sbb
and
movsl
decl
xchg
push
mov
imul
dec
sahf
inc
icebp
or
addb
pop
int3
push
test
sub
pop
mov
int3
arpl
xchg
testb
movsb
aaa
in
mov
je
add
bound
mov
mov
jns
sub
lcall
sbb
test
jle
jle
push
dec
dec
or
clc
insl
jbe
push
push
mov
decb
aas
into
fisubrl
jg
imul
aad
xchg
lcall
stc
lods
push
xchg
iret
sub
mov
sbb
lock
mov
and
aaa
fs
popa
imulb
test
xchg
push
pop
outsb
pop
mov
enter
inc
add
sub
fsubl
or
inc
add
mov
ja
rolb
int
inc
add
xchg
mov
mov
mov
fwait
add
in
xchg
daa
fs
cmpsb
int
add
call
ds
leave
pop
mov
aam
jne
je
xchg
fldz
out
les
scas
in
or
add
pop
roll
adc
or
dec
mov
mov
add
movb
add
xor
cmp
movb
adc
dec
jns
out
inc
add
ljmp
mov
loopne
jno
add
jne
leave
push
jnp
add
lock
cmp
add
sbb
pop
push
inc
add
dec
cmp
ret
bound
mov
mov
jl
push
add
jbe
add
inc
add
mov
call
les
fdivr
aad
in
vphadddq
jmp
fisttps
mov
and
out
into
push
shll
fcoml
enter
pop
cs
add
pop
out
sti
cmove
add
arpl
pop
shr
mov
stc
and
lea
sub
fdivs
fisttpll
movsb
je
mov
mov
or
in
dec
cld
jne
ljmp
dec
inc
sub
push
sub
add
outsb
or
loope
dec
push
int3
push
rolb
jmp
fsubrl
jmp
xor
pop
pop
jae
mov
jle
aas
inc
add
push
xchg
es
mov
std
and
jmp
std
mov
rcl
movswl
pop
jns
mov
jnp
rolb
ds
dec
stc
mov
dec
loop
add
addb
hlt
jl
and
rcrl
addb
mov
pop
inc
add
and
out
bound
add
and
add
jmp
mov
inc
add
push
lods
add
loop
add
ljmp
push
repnz
daa
rolb
ds
mov
add
push
lods
sub
xor
in
push
adc
and
dec
adc
sti
loopne
push
loopne
push
jo
xchg
shr
idiv
sub
arpl
jno
sbb
inc
add
lret
jb
daa
aad
inc
add
fdivrl
aaa
jecxz
dec
xor
loopne
loope
push
xchg
and
stos
ficoml
adc
mov
add
aam
add
jg
mov
out
xchg
add
jb
popa
jl
xor
jno
test
mov
ret
leavew
sbb
xor
fcoml
scas
jnp
sbb
mov
dec
xor
loopne
add
or
dec
in
rol
push
repnz
pop
pusha
add
ret
aam
imul
aam
daa
js
dec
mov
jecxz
push
mov
add
cld
xor
xor
stos
jmp
push
out
add
jecxz
rolb
mov
mov
je
push
mov
push
mov
cmp
sub
mov
loopne
mov
xchg
xor
pushf
fcomi
loop
clc
rcl
sbb
ljmp
or
loope
jne
orl
in
xchg
dec
jp
cmp
push
mov
daa
push
pop
fidivl
stc
push
xlat
ret
add
clc
ljmp
or
rclb
or
mov
and
dec
jne
stc
or
mov
das
fildll
jmp
mov
jl
mov
add
mov
movsb
push
add
or
in
addb
xor
stos
cltd
pop
outsl
stos
cmp
mov
cmovl
mov
jecxz
inc
push
pop
mov
push
jae
fdivl
mov
scas
rcll
mov
sub
push
xlat
push
ljmp
jne
fistpl
addr16
pop
push
xchg
sub
add
inc
xchg
push
jns
ljmp
lret
push
xchg
mov
mov
stos
in
push
push
or
xchg
outsb
cmp
mov
jg
fdivl
movsb
dec
out
divl
push
add
adc
push
pop
xchg
cmp
pushf
loopne
push
and
out
std
ret
lock
and
jecxz
xor
mov
pusha
add
pop
and
mov
lds
mov
adc
fcomip
bswap
or
lahf
cmp
gs
lock
xchg
or
dec
scas
add
cmpsb
in
jns
bound
int3
stc
and
sub
ss
mov
jg
sbb
sbb
cs
mov
xor
jge
add
dec
fldt
lods
jbe
out
fcmovnb
add
data16
mov
es
rol
adcl
xchg
xor
repnz
or
or
jp
mov
adcl
addb
pop
faddl
sbb
jno
add
add
add
cmpsl
dec
nop
or
cmp
jns
adc
insb
into
xchg
daa
inc
add
mov
ja
add
add
cltd
imul
mov
sahf
cmp
lahf
es
add
pop
bound
cmp
mov
jmp
stos
xlat
sbb
or
xchg
inc
add
add
stos
fcmovne
clc
sbb
mov
or
into
mov
sahf
xlat
ret
bound
cltd
jne
push
scas
dec
pop
sbb
loope
lds
lods
sub
push
or
add
rcrl
imul
or
push
add
push
add
leave
sbb
add
iret
ror
cmpsl
gs
jnp
cmp
loop
notb
pop
cs
push
adc
lods
dec
inc
inc
lret
sub
and
and
mov
ret
or
dec
daa
mov
pop
adc
data16
mov
ja
jae
jmpw
pop
stos
insb
xchg
jle
addb
test
cmp
inc
dec
test
in
sbb
enter
imul
in
cmc
call
jno
sbb
clc
and
cmpsb
jno
mov
add
and
aas
inc
add
cmpsb
mov
or
or
js
in
mov
mov
jno
jmp
inc
add
or
jb
or
in
sbb
jne
adc
rolb
dec
shl
arpl
mov
sub
out
ret
lds
and
inc
add
and
mov
add
inc
add
rolb
loop
cmc
std
jmp
inc
add
dec
sub
popf
sbb
aas
popa
pop
test
add
lock
into
pop
cmpsb
push
int
in
movb
xchg
ljmp
outsb
icebp
scas
dec
xchg
rolb
dec
push
mov
sub
loopne
fcompl
imul
push
lea
mov
add
addb
xchg
test
adcl
test
mov
rcl
jl
cmp
std
push
movsl
fnstsw
sbb
dec
sub
in
cmpsl
and
enter
aad
sub
and
add
cs
push
pop
sub
pop
je
xchg
or
dec
add
mov
add
xchg
jp
pusha
add
add
add
push
dec
les
repnz
add
pop
mov
test
movsl
outsb
push
or
add
stc
mov
enter
ret
outsb
les
jae
mov
pop
insl
dec
mov
adc
shl
jl
mov
jmp
ret
dec
push
xchg
mov
sbb
fstpt
push
add
stos
mov
add
mov
sbb
xchg
test
fs
xchg
cmp
icebp
fs
test
xchg
std
pop
js
out
adc
or
xor
jp
je
or
cmpsl
pop
push
push
out
inc
add
scas
das
insl
call
stos
jo
pop
mov
sub
mov
xor
enter
or
lcall
jmp
inc
add
add
imul
cmp
mov
add
and
gs
add
pop
add
test
nop
adc
int
data16
and
in
add
out
sbbl
movsl
gs
icebp
sbb
sbb
loop
call
add
cltd
push
cwtl
lea
sub
scas
enter
daa
in
movsb
mov
jae
cmp
jge
std
lds
mov
std
pop
cmp
ja
pusha
add
pop
pop
pop
fs
in
addl
les
test
sub
mov
ss
call
add
dec
fstl
iret
xor
add
jle
dec
lret
mov
mov
xchg
gs
push
in
loopne
repz
jae
lcall
sti
and
test
outsl
inc
add
cmp
xchg
pop
lcall
jae
addb
and
sbb
into
xor
mov
add
mov
pusha
add
pop
xchg
push
mov
bound
mov
movsl
lock
cld
stos
cmc
test
mov
les
xchg
ficoml
out
addb
stc
out
add
aad
nop
cli
int
jle
add
imulb
adc
adc
std
xor
sub
xor
sub
outsb
sbb
mov
rolb
pop
dec
adc
cmc
jp
mov
fs
add
pop
test
cmp
inc
mov
dec
mov
pop
pop
mov
inc
add
add
bound
jno
add
shrl
mov
or
aam
lock
ljmp
outsl
dec
imul
js
mov
pop
sbb
mov
jle
ffreep
add
push
sti
jl
add
loope
int3
sbb
sub
add
add
or
frndint
mov
push
add
add
add
arpl
mov
add
jo
ret
jp
push
shll
mov
xlat
dec
pop
mov
adc
adc
stc
in
adc
mov
loop
popa
sbb
out
aad
pop
xchg
fbstp
popa
clc
sbb
movl
xor
mov
and
sub
jp,pn
mov
pusha
add
push
jp
inc
add
mov
data16
enter
pop
jne
dec
xor
mov
push
dec
in
push
mov
gs
add
push
inc
insb
pop
pushf
shrb
add
mov
mov
lret
push
addb
cld
push
pop
xchg
or
out
jne
push
mov
and
mov
ror
pushf
lods
aas
ds
insl
add
cwtl
mov
and
dec
or
lock
pusha
add
add
push
jmp
inc
add
or
mov
repnz
test
push
mov
jne
les
mov
in
or
cmpsb
push
pcmpeqw
mov
and
xchg
jp
repz
xor
jmp
mov
test
incl
add
add
lret
hlt
pop
je
leave
cltd
xchg
pop
out
mov
cwtl
jl
mov
fstpt
je
adc
dec
andl
pop
push
dec
and
test
cld
addb
pop
push
push
jns
push
push
imul
xor
adc
or
fcoml
jns
cmp
push
inc
add
popf
cmpsl
inc
xor
add
lcall
inc
add
enter
mov
fcomi
adc
dec
push
inc
add
jmp
and
notb
scas
xor
mov
cmpsl
roll
push
mov
out
mov
add
pop
inc
add
or
mov
iret
pop
movsl
sbb
dec
mov
add
test
scas
jmp
inc
push
jb
jl
add
dec
xor
push
pushf
fcmovnb
dec
pop
mov
aas
xchg
rolb
dec
das
dec
push
shrl
lret
addb
scas
lock
mov
cmp
sub
pop
clc
xor
mov
popf
and
jno
mulb
or
mov
fwait
push
dec
out
rcll
xor
add
ficoms
push
add
addb
push
adc
hlt
jp
push
mov
aam
mov
and
lock
adc
jle
cmp
popf
sbb
sub
mov
and
outsl
or
sti
jmp
mov
ret
cld
leave
cli
or
push
loope
jp
push
into
stc
push
in
dec
insl
or
sbb
mov
frstor
add
sub
add
pop
mov
push
cwtl
test
mov
xlat
into
bswap
or
repnz
fisubl
inc
pop
add
xchg
ret
pop
inc
inc
jne
inc
add
add
and
xor
mov
arpl
clc
lea
fistps
add
in
insl
cwtl
pop
cmp
cli
add
scas
mov
outsb
mov
movsb
xor
out
loope
sbb
mov
pop
lcall
cmp
ss
sti
adc
das
fwait
test
pop
fmuls
push
adc
fsub
cld
jne
add
add
mov
or
std
jp
push
sti
push
add
dec
stos
mov
dec
jnp
add
xor
xchg
out
outsl
inc
pusha
add
add
add
nop
cs
jnp
jecxz
sbb
and
inc
cmp
into
clc
push
cmc
cmp
add
shrb
punpcklwd
scas
jns
gs
ds
push
xchg
push
xor
fmul
jp
int
add
xchg
mov
inc
jmp
movb
push
test
mov
xor
mov
add
lahf
cmpsl
add
dec
dec
push
andl
jnp
inc
add
pop
add
fwait
repnz
das
xchg
stos
leave
lcall
cmp
mov
dec
mov
xor
lcall
ljmp
int
add
outsl
loope
out
pop
ds
sub
pop
arpl
pop
mov
sub
mov
inc
fdiv
imul
cmp
out
add
xchg
or
mov
xor
ljmp
rorl
xor
pop
push
and
outsb
lods
aaa
pop
push
jmp
dec
cwtl
mov
pusha
add
jno
shrb
sbb
xchg
xchg
mov
cwtl
dec
repz
int3
pusha
add
in
add
jp
arpl
movb
sbb
jne
adc
mov
add
aas
movsb
mov
fildll
into
addb
add
addb
cmpsl
lret
stc
xor
js
pop
movb
xor
inc
add
lahf
jmp
dec
push
cwtl
and
imul
xchg
mov
jge
ja
lods
je
push
sti
notl
addb
xchg
adc
gs
addb
add
adc
in
into
cmp
sbb
je
ds
xchg
testl
loop
cmp
xlat
orl
jae
mov
xor
xor
jp
scas
ret
add
and
mov
or
hlt
enter
into
mov
call
fs
add
xchg
pop
loop
fidivrl
inc
xchg
push
fsubrs
adc
lock
idiv
lds
sahf
cmp
or
jle
call
jl
sbb
sbb
mov
pop
stos
jge
cltd
push
loop
dec
js
add
xor
dec
mov
sub
es
movsl
ret
imul
add
pushf
or
xchg
adc
xchg
mov
bound
sub
add
lock
lods
iret
xchg
enter
jnp
addr16
jge
add
jge
mov
adc
add
push
add
ret
and
inc
rorb
nop
gs
aad
xor
inc
add
cmp
push
or
add
loope
scas
mov
call
and
lods
adc
or
aad
cmp
add
inc
jg
gs
add
cmp
cmp
add
sub
sbb
jae
ret
imul
and
mov
bound
mov
ds
dec
add
pop
jae
movsl
fwait
sub
and
sub
test
jb
imul
clc
mov
cld
sbb
pop
out
ficompl
jb
mov
adc
inc
add
add
out
dec
xor
xchg
dec
mov
xchg
mov
outsb
mov
outsb
xor
adc
xchg
add
cmc
inc
add
addb
mov
jmp
sub
xor
loope
pop
aad
add
jg
insb
xchg
mov
xor
xor
aam
or
frstor
xorl
sub
xchg
lret
lods
cmp
pop
or
popf
xor
dec
lods
movsl
mov
fdiv
and
add
imul
gs
and
out
js
push
adc
xor
out
gs
cli
mov
mov
sbb
and
fstpt
mov
dec
bound
dec
mov
pop
xor
pop
mov
lods
jmp
or
inc
add
xchg
cmp
cmp
fistps
fs
add
or
mov
cmp
data16
out
pop
and
stos
mov
outsb
pop
or
push
sbb
xor
cltd
in
and
cmp
add
sbb
add
cmp
in
xor
aam
shrb
cmp
inc
mov
add
out
or
or
cmp
xchg
cmc
xlat
inc
add
mov
jmp
adc
push
jo
add
rcrl
pop
jmp
and
cmp
movsl
sbb
notl
mov
out
call
jbe
xchg
mov
lds
scas
jno
jp
add
add
test
pop
lret
mov
sbb
js
cmp
and
call
repz
jb
cmp
add
lock
xor
pop
insw
push
into
lahf
incb
xor
sti
jmp
lea
into
cmpsb
dec
faddp
xchg
outsl
sti
aas
jp
add
jo
inc
add
jns
sub
add
bound
dec
inc
add
inc
mov
lret
pop
aas
cmpl
mov
jns
cmpl
sbb
mov
xchg
xchg
imul
xor
lods
inc
add
and
pusha
add
mov
or
out
cmpsl
pushf
mov
dec
and
dec
out
push
lea
add
ja
in
inc
add
out
test
pop
mov
int3
int
cld
enter
lret
repz
mov
mov
sub
push
mov
add
aaa
xchg
iret
ja
inc
add
dec
das
incb
push
add
leave
pop
in
fs
int3
xlat
sub
add
in
in
ja
jbe
push
iret
sahf
outsl
inc
mov
xor
and
jb
push
or
sbb
js
sbb
add
fldl
add
add
mov
mov
sub
rcl
add
daa
loope
arpl
xchg
movb
mov
xchg
notl
add
pop
xor
dec
inc
add
add
jns
pop
or
jno
add
xchg
addr16
mov
cmp
and
push
in
addb
mov
fstl
add
or
inc
add
sahf
sub
mov
inc
loope
jb
or
xchg
in
and
add
loopne
jno,pn
inc
add
or
add
mov
test
xchg
aad
xchg
mov
inc
push
jge
sahf
call
pop
add
push
add
ds
mov
inc
add
add
call
scas
push
ret
add
sub
data16
ja
fwait
sub
xor
shlb
sbb
pushf
cmp
pop
loop
outsb
xchg
push
das
dec
xchg
push
add
lock
mov
stos
inc
add
dec
jne
and
addb
add
mov
xor
cmp
stc
movsl
cmc
ja
dec
xor
inc
add
sti
sarl
jb
test
dec
int3
fcomp
mov
adc
in
sahf
xchg
in
adc
insb
lahf
cmp
mov
les
lcallw
insl
push
push
les
or
mov
test
dec
sbb
in
repz
sub
xchg
cmp
rorb
insb
adc
mov
mov
xor
or
xchg
add
jb
stos
arpl
jecxz
dec
mov
add
add
and
jp
pusha
add
jno
dec
jbe
loope
inc
mov
mov
mov
xchg
sub
mov
loopne
imul
repz
jbe
nop
sbb
add
les
cmp
dec
test
addl
push
insl
call
cli
cmp
and
lret
movsl
in
mov
mov
add
mov
and
sbb
popa
filds
fistpl
mov
cmp
adc
es
mov
fsub
xor
sub
les
int3
sti
and
hlt
cltd
lods
lods
out
mov
insl
and
ret
add
pop
inc
daa
inc
inc
xchg
stc
in
mov
add
in
mov
dec
repnz
shl
cmc
pop
pop
mov
addb
fcompl
sarb
cmp
fs
bound
or
iret
into
sub
add
sbb
mov
add
xor
enter
push
mov
push
roll
dec
in
mov
testb
jg
jo
repnz
mov
in
fs
pushf
sub
add
dec
jecxz
in
iret
call
incb
insb
stos
xchg
mov
pop
out
sti
imul
or
add
xor
das
xchg
mov
pop
dec
les
xchg
xlat
or
or
in
js
adc
in
fnstenv
lret
out
out
or
add
ret
test
jb
lcall
jmp
ljmp
loopne
add
jmp
xchg
sbb
test
repnz
jge
mov
outsl
lods
mov
sbb
adc
addb
cmc
sbb
inc
xchg
aaa
mov
adc
push
into
add
and
mov
movsl
xchg
in
inc
aad
sub
mov
daa
in
divb
xchg
adc
xor
mov
ss
mov
or
mov
pop
mov
in
call
int
int3
out
lcall
push
pop
jmp
cmp
stc
mov
loope
cli
push
sbb
jl
mov
push
pop
or
mov
add
add
pop
mov
test
aaa
xchg
or
das
rcll
add
add
sub
sub
adc
mov
mov
popa
popa
aas
dec
cmp
inc
jae
insb
pop
out
cmp
cmp
cmp
leave
scas
imul
cwtl
stc
jno
inc
data16
cmpsb
xchg
test
aad
sub
inc
add
outsb
sub
push
test
add
dec
dec
cmp
jmp
add
add
add
fsubl
aas
inc
cmp
sbb
xchg
cmpsb
xor
and
cmp
pop
data16
adc
sub
dec
ljmp
pop
mov
pop
das
movsb
mov
je
movsl
jno
fucom
pop
gs
jbe
cmp
cs
in
add
add
ljmp
clc
retw
inc
aaa
dec
ret
mov
mov
mov
pop
xlat
mov
out
or
push
add
fiadds
enter
insb
jmp
sbb
adc
stc
mov
xor
push
sub
mov
add
aaa
aam
dec
pop
addr16
inc
add
add
leave
mov
cmp
movb
imul
mov
stos
sti
xchg
or
ss
addr16
and
sahf
inc
add
jno
inc
add
inc
cs
inc
add
fisubs
jbe
jo
test
dec
mov
and
jmp
push
imul
sub
lods
add
add
movsl
ret
and
inc
movsl
loope
dec
call
add
stos
inc
mov
es
push
data16
or
stc
push
cli
notb
xchg
mov
aam
testl
fmull
nop
sub
mov
dec
repz
ds
out
jb
mov
push
mov
push
push
xor
and
add
add
cs
mov
mov
add
addb
mov
jno
xor
add
xor
cmpsl
adc
nop
ss
or
mov
add
fucomip
jb
shl
icebp
sub
push
arpl
bnd
push
loope
lods
bound
addb
iret
rolb
fninit
jns
add
add
aad
in
outsl
cmp
jne
push
sahf
test
outsb
cltd
imul
xchg
push
xor
stos
xor
and
mov
scas
xchg
andl
mov
jnp
rcl
in
cmp
mov
mov
movb
subl
mov
push
mov
pushf
out
add
pop
ds
jle
jg
add
in
test
push
push
push
xor
add
adc
add
fcmove
scas
pop
pop
in
sbb
jle
in
sbb
jge
sbb
cmpsb
dec
mov
and
cld
xchg
add
push
call
cmc
push
add
mov
cmc
rolb
lret
sbb
pop
or
insl
adc
mov
xchg
stos
cmp
jno
inc
add
and
bound
mov
add
cmp
mov
nop
testb
xchg
pop
in
fmuls
jecxz
push
scas
xor
jle
and
mov
xor
sub
add
mulb
mov
shrl
jle
push
inc
adc
add
add
xor
test
xchg
lret
lret
xchg
test
inc
add
push
test
add
pusha
add
add
test
inc
add
repz
add
bound
lret
push
sub
aam
ret
cli
jecxz
mov
inc
sarl
pop
mov
sub
push
pop
mov
movb
add
sti
jg
call
loopne
insl
outsl
push
test
test
mov
and
scas
mov
sbb
fcmovnu
cmc
and
sbb
jo
adcl
add
mov
add
insb
add
and
jmp
jecxz
lret
imul
add
xor
testb
test
sbb
jns
xchg
add
cli
sbb
cmp
aad
in
std
push
shrb
mov
push
lds
mov
add
adc
sub
dec
push
pop
sub
lcall
popa
or
out
addb
cmp
les
int
xchg
mov
pop
aas
in
add
es
fnstenv
and
push
xchg
mov
in
nop
dec
sub
leave
sub
and
inc
add
outsl
xchg
sarl
cmp
or
aam
in
movb
add
add
scas
and
icebp
cld
inc
jno
and
stos
leave
cmpsl
inc
add
mov
add
push
push
jge
add
xor
push
add
jmp
call
fs
outsb
jae
inc
add
mov
scas
xchg
or
les
mov
scas
push
add
add
pop
fsubs
dec
addr16
jle
or
ljmp
push
clc
xor
pusha
add
stos
imul
inc
fists
ja
stos
outsb
mov
or
sbb
sub
xchg
repz
mov
jl
outsb
jp
addl
jb
enter
in
idivl
mov
jl
lods
out
xchg
popa
dec
fisubs
test
lds
pop
mov
mull
adc
xchg
ja
push
rolb
add
push
jno
and
mov
fcmovnu
movsb
inc
xor
and
fiaddl
push
pusha
add
pop
es
sub
in
jecxz
inc
add
jnp
inc
add
or
push
inc
jp
mov
popf
fidivl
cmpsl
nop
push
xorl
lcall
xor
add
mov
sti
add
jbe
add
out
jmp
mov
outsb
in
adc
aas
push
or
aam
sbb
xor
sbb
fldt
test
out
jnp,pn
pop
push
test
inc
add
fwait
decb
decl
mov
xchg
ror
scas
repz
mov
pushl
lods
or
sub
jns
and
mov
mov
dec
movb
mov
sbb
imul
jo
into
mov
les
and
test
add
inc
aas
div
jbe
add
fs
leave
das
sbb
push
test
mov
popf
rolb
mov
addb
mov
mov
test
add
inc
jp
inc
bound
xchg
pushf
and
push
idivb
in
ret
cltd
repz
mov
daa
aaa
mov
mov
dec
sbbl
jbe
fmull
pop
mov
hlt
pushf
shll
aaa
xor
sub
add
sbb
fwait
jg
sarl
sbb
scas
cltd
mov
popa
cmpsb
push
movsl
dec
adc
mov
sub
jmp
loope
xor
adc
sbb
cmp
arpl
add
outsb
pop
je
xor
mov
add
adc
jae
lahf
mov
mov
jecxz
icebp
add
outsb
pop
push
push
lds
movsl
rolb
dec
mov
mov
jbe
mov
enter
mov
movsl
push
out
not
out
adc
xchg
xchg
xchg
cli
mov
scas
push
stos
jle
mov
push
lahf
into
cltd
adc
mov
lods
jp
cmp
xchg
mov
lods
or
repnz
inc
add
rol
push
fildl
lock
dec
mov
mov
icebp
into
bswap
std
clc
popa
mov
add
inc
add
lret
inc
add
add
mov
mov
sarb
dec
mov
push
mov
jmp
call
pop
push
jae
imul
addb
pop
bound
jmp
test
inc
and
imul
ds
movl
fcoms
mov
sahf
pop
pop
pop
mov
jmp
add
cmp
fstps
pop
adc
cmc
lcall
push
mov
loope
cmc
nop
mov
jne
int
outsb
mov
pushf
mov
dec
shrb
adc
into
add
into
sbb
dec
int3
and
sub
add
mov
push
sub
xchg
cld
vpmulhuw
mov
lret
lahf
repz
mov
add
insl
gs
cmc
mov
mov
in
push
jg
dec
cli
loope
pop
rorl
lcall
outsb
lds
xchg
push
sub
dec
rolb
ljmp
mov
inc
add
mov
xor
mov
mov
loopne
shl
or
jmp
je
cmp
sub
sub
mov
jb
cwtl
cltd
addb
push
int3
push
ja
icebp
mov
dec
test
push
movsl
add
and
add
xchg
cltd
loope
mov
mov
ljmp
int
push
rolb
add
mov
ja
pop
ret
xchg
jmp
cltd
popf
or
test
icebp
add
loope
lret
jne
iret
inc
add
jl
sbb
faddl
cmp
mov
cmp
xor
push
stos
mov
jne
into
push
add
movsb
lock
pop
loopne
subl
imul
rcrl
cltd
outsb
icebp
les
repnz
call
dec
rolb
sub
xchg
je,pt
pushf
mov
push
mov
dec
sub
xor
jecxz
xchg
mov
add
out
repnz
hlt
leave
push
add
xchg
packuswb
add
addr16
or
mov
or
jl
out
fs
cmp
add
sbb
fisttps
cld
stc
inc
mov
add
insl
and
xchg
cmp
arpl
scas
std
enter
maskmovq
divl
pcmpeqb
and
jb
popf
cli
popf
jmp
cmp
clc
or
inc
add
pop
push
add
pop
mov
add
shrb
inc
add
cli
nop
xor
leave
push
or
repz
jg
outsb
sahf
loopne
and
leave
ret
mov
add
notl
fsts
sub
data16
aam
add
scas
movsb
js
aas
cmp
cmp
fucomp
xchg
outsl
cmpsl
hlt
dec
sahf
cld
add
add
ja
pop
je
loopne
xlat
ljmp
pop
push
push
mov
test
in
pusha
add
leave
gs
sbbl
es
sbb
add
add
rcrl
neg
push
loop
xlat
push
hlt
jp
inc
add
jbe
movb
nop
xchg
lret
jae
lods
sub
jg
dec
push
ds
rclb
sti
mov
cwtl
jne
add
push
jno
mov
pop
mov
xchg
inc
add
mov
test
sbb
out
repnz
sbb
push
lcall
std
mov
pushf
inc
push
xchg
pop
imul
mov
dec
jb
or
and
and
les
test
add
or
aam
loope
dec
cmp
push
mov
fisubrs
data16
das
inc
add
std
jg
sbb
dec
loop
mov
mov
ret
das
jbe
add
nop
mov
sahf
cwtl
pop
and
jecxz
cmp
fstpt
test
pop
mov
xchg
pop
xorl
sbb
rol
add
push
xchg
mov
add
inc
push
xor
divb
and
dec
xchg
data16
les
test
ljmp
out
jge
test
sub
js
stos
mov
inc
add
lahf
nop
lods
sbb
scas
stos
inc
xchg
out
add
add
lock
in
in
cmp
hlt
mov
xor
dec
in
rolb
sbb
jg
push
add
push
pop
jl
nop
mov
jno
les
inc
or
inc
add
or
mov
fldl
rolb
out
inc
add
imul
mov
stc
push
or
mov
sub
xchg
dec
shll
and
shll
ljmp
sub
inc
enter
add
ret
rolb
add
or
testl
add
push
push
hlt
push
insl
cmp
dec
lcall
and
cmp
jbe
add
mov
js
add
xor
stos
jg
inc
pop
mov
rolb
add
imul
int3
addb
shrl
pop
enter
das
rcl
outsb
movb
outsb
sbb
jmp
mov
xor
dec
mov
mov
xor
imul
xlat
inc
add
out
dec
adc
xchg
std
pop
daa
and
sub
or
arpl
add
mov
sub
adc
ss
jecxz
push
lahf
adcl
test
xor
and
pop
loop
mov
jg
ss
fsts
ret
sub
push
add
jge
push
aad
iret
push
icebp
add
xor
mov
sub
jle
addb
scas
rorb
mov
testl
leave
cli
sub
sbb
in
lods
cmp
data16
daa
mov
dec
dec
test
leave
addb
inc
add
lock
add
test
xchg
fdivrp
or
jnp
add
adc
cmc
imul
sub
shrb
add
adc
and
ja
sub
fidivl
iret
sub
sub
les
mov
cmp
add
xor
jge
fldt
mov
and
add
xor
add
loop
ja
cmp
mov
rcll
outsl
aaa
jecxz
ja
fstpl
daa
int
les
inc
sbb
gs
iret
es
inc
add
lret
lret
mov
aaa
aas
inc
add
push
imul
and
xchg
fstl
jbe
add
mov
add
mov
xchg
and
and
add
add
push
adc
ljmp
filds
outsb
cld
daa
mov
cmp
mov
stc
ret
add
and
bnd
sbb
mov
lcall
pusha
add
jnp
jg
xchg
addb
jo
or
jbe
inc
add
add
call
sbb
mov
testb
addr16
mov
dec
repz
add
mov
test
icebp
xor
jp
sbb
ret
sahf
lea
sub
lea
or
xor
outsb
pop
and
xor
test
dec
ljmp
dec
or
cs
popa
dec
and
scas
pop
pop
and
ja
pop
jecxz
sbb
add
movsl
mov
js
inc
add
aam
fcom
fiaddl
insb
lods
inc
dec
je
add
inc
ret
mov
fmull
pop
call
jbe
adcl
mov
xor
ret
sbb
sub
sbb
dec
enter
add
movsb
xchg
sbb
lret
mov
add
pushf
adcl
xor
add
jae
push
add
jae
push
ljmp
inc
add
imul
mov
mov
push
push
add
add
mov
add
pusha
add
pop
dec
das
rorl
sarl
pop
mov
jns
int
hlt
stos
lret
in
stos
mov
jl
adc
dec
pop
cmp
add
cltd
stos
adc
fcoml
clc
test
cmp
inc
inc
repnz
cmp
insl
roll
shrl
xchg
sahf
mov
xlat
addr16
ret
mov
mov
lea
xor
cmp
add
outsl
jmp
lods
push
sti
pop
stos
add
mov
and
lcall
movb
add
sub
mov
pop
addb
cwtl
sub
ja
lock
add
xchg
xchg
stos
and
rclb
add
js
lock
lret
pop
and
lods
adc
mov
ficomps
inc
fwait
mov
sub
add
xchg
sahf
pand
sub
rcl
add
and
ds
mov
cmp
sbb
fistpl
mov
add
or
sub
insb
jle
sbb
std
cli
mov
adcl
std
out
sub
out
daa
mov
jb
add
and
xchg
aas
test
out
inc
add
int3
push
push
nop
dec
iret
and
pop
jns
sbb
mov
inc
add
sbb
push
es
fyl2x
pop
sub
shlb
notl
scas
jmp
mov
pop
fcmovne
push
ds
lea
add
mov
jno
adc
jl
mov
pusha
add
xchg
mov
aad
mov
je
sbb
pop
mov
inc
mov
xchg
add
cmp
push
mov
std
addl
mov
test
push
jmp
scas
std
out
mov
testb
ljmp
mov
lods
cmp
cmpsb
bound
filds
add
or
xor
cwtl
mov
fwait
push
pop
and
sub
nop
mov
xchg
and
ss
repz
push
stc
fldt
pop
push
add
mov
pop
fs
dec
push
add
pushf
dec
mov
pop
iret
daa
or
pushf
outsb
dec
aas
gs
outsb
ret
lcall
mov
add
adc
jg
add
addr16
out
out
cmp
imul
ret
add
dec
pop
lods
cmpsl
aas
hlt
add
scas
jg
dec
ja
addr16
enter
repz
mov
pop
test
leave
cld
fwait
cmp
imul
std
or
cmpsl
jnp
and
add
nop
jg
add
push
add
pushf
xor
pop
inc
add
out
int3
bound
jne
inc
cltd
adc
or
in
add
outsb
les
fistpl
test
add
in
add
insb
pop
pop
fldl
scas
add
push
add
jbe
cmp
adc
leave
shll
andl
adc
or
adc
sbb
pop
dec
pop
ljmp
adc
add
iret
aas
inc
add
es
xor
loopne
xor
ret
addb
pop
xchg
sub
or
insl
lods
cli
subl
xchg
xchg
loope
jge
hlt
fdiv
dec
and
ja
sub
push
cmp
cmpsl
dec
leave
add
call
loope
inc
and
mov
fisubrl
add
jecxz
rolb
lds
pop
aas
rep
sub
mov
bound
xchg
dec
sbb
ja
dec
bound
movsb
mov
add
push
push
pop
mov
test
cwtl
mov
push
aaa
out
dec
sarb
push
popf
xchg
out
push
and
addb
rcll
jno
and
rcrb
sub
or
cwtl
jle
idivl
xchg
add
jp
aam
and
loopne
arpl
pop
out
iret
addb
jne
pop
push
mov
mov
out
aad
mov
pushf
paddd
or
in
shll
sbb
add
or
insb
add
jg
adc
push
add
subl
jp
mov
stc
cld
xchg
out
xchg
push
pop
or
out
pop
and
add
loopne
mov
xchg
pop
jno,pt
jo
mov
lahf
jge
add
xor
mov
sbb
enter
stos
icebp
addb
les
xor
jnp
pushf
dec
and
mov
mov
dec
sahf
popf
stos
mov
xchg
test
add
pop
mov
mov
sbb
loop
inc
add
xlat
ret
mov
shl
in
inc
mov
stc
es
add
pusha
add
pushf
mov
popa
imul
sbb
pop
and
add
ret
imul
pop
jl
sbb
inc
xor
add
cs
js
out
gs
add
iret
dec
and
push
mov
aaa
xchg
cwtl
adc
dec
fmuls
jo
outsb
push
xlat
je
or
push
mov
sbb
push
jo
pop
inc
add
mov
pop
mov
fdiv
repnz
mov
inc
jo
mov
cmp
jnp
push
cltd
ljmp
add
movb
test
pop
add
pop
or
sbb
add
lods
in
add
aaa
add
jmp
push
pop
jmp
add
adc
sbbl
xchg
addb
mov
fistpl
out
js
cmp
in
sub
aas
out
aad
mov
ret
out
sub
mov
dec
ret
psllw
sub
addb
and
sub
notb
or
ret
cmp
lahf
pop
push
add
scas
into
mov
movl
fcmovnb
add
fidivs
cmpsl
fsubs
jp
jmp
scas
pop
push
std
adc
push
sbb
or
jge
fbld
ja
int
cs
loope
in
fst
mov
lods
xchg
loop
push
ja
arpl
add
mov
pop
pop
pop
sbb
and
mov
add
inc
sub
mov
fmul
ret
nopl
adc
ds
mov
push
jne
jae
mov
sub
test
lods
pop
sub
jne
mov
aad
mulb
adc
push
jae
sarb
test
add
jecxz
scas
lret
mov
test
add
nop
lret
pop
mov
add
adc
lea
dec
call
mov
jno
push
sbb
popf
adc
push
clc
hlt
push
fsubrs
mov
fprem
popf
push
and
das
roll
lcall
jmp
mov
mov
out
jle
add
inc
add
jno
xchg
lock
call
pop
jbe
push
ficoms
sbb
jnp
inc
add
in
movsb
testb
adc
push
mov
add
inc
add
call
mov
bound
repz
jg
add
jl
pop
in
mov
inc
les
inc
test
fstl
addb
fsubs
call
push
inc
add
add
xor
addb
cmpsb
in
aad
fsubrl
mov
enter
popf
xor
add
negl
sbb
add
ja
movsl
aam
fwait
arpl
cmpsb
mov
mov
inc
add
add
jne
add
addr16
jp
add
popa
int
cmc
mov
sbb
jge
fdivl
sub
add
mov
and
mov
mov
cli
cwtl
add
insl
jg
pop
xor
push
shll
rcrl
fs
sbb
addb
or
rorl
ljmp
cmp
jmp
test
insl
and
lea
mov
mov
je
addb
jecxz
fsubrp
fiadds
mov
sub
out
cmpsl
xor
mov
hlt
xchg
jle
aas
adc
lea
fsubrp
cmp
sub
add
popl
pop
mov
ss
imul
insb
mov
mov
add
and
loope
bound
in
add
fnstcw
add
dec
or
xchg
mov
push
mov
push
shlb
add
int3
fisttps
jg
and
std
xchg
push
loopne
add
xchg
daa
and
ss
mov
fmul
inc
mov
push
xor
movsb
push
pop
into
push
stc
mov
fldenv
add
les
xor
xchg
adc
xor
mov
adc
bound
imul
addb
rcr
aas
jecxz
std
ss
mov
or
shlb
and
add
ror
xchg
xchg
mov
or
aaa
dec
push
add
adc
lret
stos
stos
inc
add
add
xchg
adc
ret
lock
mov
add
push
call
xchg
jb
sub
mov
sub
loopne
loop
mov
xor
lret
adc
bound
push
cld
icebp
rorb
add
sbb
stc
or
das
mov
inc
sbb
xor
or
rorb
and
pop
shlb
addb
sbb
lock
bound
cmp
pop
ret
jbe
push
daa
loopne
jo
ret
inc
gs
mov
addl
push
scas
or
add
leave
and
mov
mov
mov
xchg
movb
lds
mov
push
rcrb
push
loope
push
rolb
outsl
inc
add
rol
mov
test
imul
cmpsl
mov
push
ffreep
aad
out
cmp
xor
mov
mov
sub
cmp
cld
sbb
cld
out
lret
iret
fimuls
rcrb
js
mov
das
ljmp
push
fnsetpm(287
das
jecxz
cmp
push
cmp
outsb
jns
push
add
xchg
sub
pop
and
add
outsl
inc
loop
push
add
inc
add
mov
jb
lret
pushf
xor
and
fwait
repnz
lods
adc
push
xchg
outsb
in
mov
jns
cmp
mul
xlat
out
add
pop
push
cld
push
mov
xrelease
rolb
xchg
mov
mov
lret
cmpsb
js
imul
mov
js
ret
aam
sbb
xor
loopne
rcrl
std
or
add
in
push
mov
addb
stc
sub
divb
pop
push
sub
xor
ret
fcmovnbe
or
sbb
adc
jne
inc
add
test
mov
addr16
inc
add
mov
das
rcl
sub
sub
insl
std
mov
add
sbb
lods
pop
sbb
xor
mov
sahf
jp
fwait
jp
sbb
es
mov
add
into
rolb
dec
mov
ret
loopne
repz
jl
iret
mov
inc
add
mov
mov
aaa
loopne
stc
rorb
add
bound
adc
aas
push
fneni(8087
jmp
icebp
xor
out
pusha
add
add
xchg
loop
jo
ljmp
lret
jns
inc
add
lea
and
xchg
sarl
or
ljmp
mov
cmpsl
or
push
enter
push
push
enter
inc
add
fiaddl
add
add
jb
test
setle
adc
cmp
or
add
out
stos
xchg
adc
mov
movsb
aam
mov
lahf
dec
js
data16
rolb
jmp
pusha
add
mov
out
test
adc
pop
in
xor
add
mov
int3
or
and
pop
mov
out
pop
jae
bound
shlb
pop
cmp
xchg
and
daa
aad
jns
adc
int3
sbb
add
cmp
testb
cli
std
or
mov
movb
shrl
add
out
jmp
mov
xchg
les
ljmp
xchg
and
mov
jae
jbe
cltd
jge
adc
scas
lds
loope
pop
or
nop
adc
sbb
jmp
out
push
test
sub
fildl
add
xchg
mov
test
iret
add
addb
or
into
or
mov
xbegin
shrl
je
mov
popf
sbb
adc
or
inc
add
lods
iret
out
mov
jae
cmp
cli
in
inc
xchg
sbb
and
shll
test
mov
mov
icebp
adc
push
cmpsl
jmp
incb
out
adc
jle
lock
add
lahf
inc
add
mov
call
scas
pop
mov
mov
cmp
out
fisubrl
push
fstps
push
cwtl
pusha
add
rolb
pop
clc
faddl
add
divl
xor
pop
jmp
add
cmp
loop
outsb
xor
mov
lahf
inc
sub
push
push
push
push
mov
js
jp
add
add
movsl
jnp
mov
jg
test
fwait
push
fcomps
xor
add
sub
loope
nop
xor
insl
add
push
rolb
mov
mov
add
aas
mov
add
cli
mov
in
mov
jecxz
lea
mov
cmp
mov
adc
lods
into
sub
div
adc
addb
ret
aam
cmpsb
ds
in
call
push
gs
gs
adc
push
outsb
rorl
cmp
mov
xchg
add
inc
dec
mov
and
add
scas
or
xchg
push
mov
adc
jb
pushf
ficoml
add
dec
jle
or
cld
sti
add
dec
pop
popa
jnp
add
add
call
ret
outsb
sti
sti
xchg
push
add
add
xchg
pop
xor
sbb
ret
addb
or
jo
sbb
sbb
mov
inc
add
in
and
pop
add
push
dec
or
loop
pop
xor
js
add
xchg
iret
in
adc
faddl
add
loopne
mov
mov
nop
pop
mov
cmpsl
push
mov
mov
cmp
int
std
fistpll
repz
dec
clc
es
add
add
stc
mov
out
pop
lods
sbb
cmp
lods
call
push
std
sbb
aas
cmc
pop
das
xchg
mov
and
jmp
xor
xchg
popa
mov
push
pop
xchg
xor
add
repz
and
imul
lods
enter
fldt
cld
mov
imulb
and
and
xchg
jl
or
mov
inc
add
into
cmp
pop
dec
stos
sbb
popa
insb
cmp
xor
lcall
inc
add
dec
call
daa
adc
pop
aas
gs
add
push
fs
aam
test
ljmp
shr
shll
stos
jbe
les
call
cltd
pop
lock
addb
xor
scas
mov
jle
add
xchg
scas
out
or
test
mov
aas
sbb
sub
adc
bound
outsb
sub
cld
mov
pop
lret
pop
cwtl
sahf
xchg
pop
out
inc
add
cmp
jae
adc
lds
add
stos
js
fsubrs
addb
xchg
add
lock
mov
hlt
xchg
pop
outsl
lahf
dec
cwtl
push
ret
cli
out
xor
ss
xor
mov
mov
das
xor
rolb
fimuls
xor
xchg
and
push
fcmovu
and
into
testl
dec
or
push
mov
lcall
aas
jne
jmp
sub
sarl
jo
pop
cli
pop
dec
hlt
ffree
insb
add
icebp
das
xchg
outsl
adc
paddusb
call
sahf
sahf
mov
and
adc
popf
dec
mov
cli
in
fs
sbb
push
add
inc
hlt
rolb
add
je
movb
sub
push
addb
pop
test
pop
sbb
sbb
call
and
jno
adc
dec
enter
lahf
sbb
mov
xacquire
fidivrs
sahf
mov
movb
jae
inc
jne
fidivrs
mov
jo
negl
call
inc
cmp
push
ret
daa
pop
and
jl
lock
push
add
into
mov
jmp
pop
push
inc
cmpsl
stos
add
stos
stos
pop
adc
sbbl
cmc
sub
adc
add
testb
push
pop
xchg
int3
aad
cmp
add
lods
imul
xor
xchg
mov
jno
pop
stos
je
add
mov
dec
dec
mov
adc
movb
aam
add
cmpsl
mov
add
jbe
arpl
mov
xor
inc
lret
cs
add
push
add
sti
and
scas
cmp
arpl
push
sub
or
sbb
adc
lods
loopne
pusha
add
out
repz
push
call
addb
mov
and
push
enter
pusha
add
out
add
inc
add
movsb
sbb
sub
aad
call
push
sbb
cmpsb
movsb
mov
repz
dec
mov
or
fsts
xor
sbb
scas
mov
insl
in
mov
xchg
xchg
enter
arpl
loop
sbb
push
add
add
nop
xor
lds
add
push
lahf
stos
iret
jno
adc
ret
ret
push
pushf
mov
xchg
les
mov
xor
cmp
sbb
mov
insl
jge
jne
scas
into
into
pop
cmpsb
xor
dec
daa
sti
fnstcw
dec
in
push
add
pop
jo
rep
jmp
movsl
add
and
pop
push
int3
mov
add
movl
faddp
add
test
jo
add
xor
inc
mov
das
hlt
sbb
adc
shrl
cmp
add
fisttpl
cmpsl
and
mov
mov
jmp
out
add
addl
xchg
xor
pusha
add
mov
int3
inc
sbb
fnstsw
test
rolb
jecxz
jge
icebp
add
mov
xchg
sub
mov
pop
test
dec
adc
mov
scas
mov
sub
sahf
lahf
in
add
pop
fldenv
xor
or
cld
sbb
mov
sub
xor
add
xor
mov
add
fists
add
pop
cmc
pop
into
mov
jmp
addb
cmp
pop
std
dec
adc
test
push
add
gs
add
xchg
gs
add
mov
mov
add
add
mov
push
push
xor
std
pop
sub
push
sub
ss
add
outsb
mov
stc
and
mov
dec
sub
push
adc
out
fildl
dec
sbb
notb
push
jmp
jmp
push
dec
daa
mov
stc
dec
lcall
cli
or
je
inc
push
add
or
cmpsl
out
movb
das
lods
mov
add
push
icebp
pop
fiadds
cmc
push
fwait
mov
add
inc
sbb
rclb
imul
jg
xlat
popl
add
and
push
in
test
ja
lcall
push
or
push
cmc
xchg
and
pop
pop
jmp
mov
or
cmpsl
jo
pop
dec
dec
fsubl
cld
or
push
push
jno
ret
dec
or
imul
ljmp
leave
fcmovu
push
imul
movb
popa
sub
fisubs
cltd
in
lret
stos
loope
mov
sarl
inc
add
cmp
movb
xor
and
push
mov
or
add
setg
shrb
xlat
cmpsl
dec
hlt
and
inc
add
sub
xlat
pop
mov
adc
push
popa
mov
in
inc
add
pop
push
arpl
add
cmp
loopne
and
dec
out
inc
xchg
push
xor
test
cmc
insl
add
int
add
scas
repz
orl
sbb
adc
dec
mov
cmpsl
icebp
add
hlt
adc
add
dec
into
aaa
pop
inc
add
mov
rolb
xchg
push
mov
add
adc
sbbl
popf
mov
sbb
sbb
jbe
dec
out
popl
in
mov
mov
push
popf
mov
add
sub
lret
lds
xchg
pop
or
mov
test
movb
aad
rolb
push
mov
pop
xchg
out
icebp
gs
cmp
inc
add
into
ss
and
sbb
add
stos
dec
into
test
or
loop
cwtl
addl
mov
fs
sbb
and
mov
mov
add
push
add
movsl
mov
ret
xchg
data16
movb
mov
adc
cs
add
inc
in
add
stc
repnz
add
hlt
sbb
data16
fidivrl
pop
out
je
out
incb
or
and
les
in
sti
test
push
add
test
add
lcall
sub
add
jo
xor
lret
mov
test
add
add
push
xchg
popa
or
in
mov
sbb
pop
lret
mov
xchg
and
push
add
xchg
add
dec
pop
test
lea
pop
or
and
adc
xor
sbb
xchg
jecxz
push
loope
outsl
inc
add
ret
inc
add
sub
ds
into
enter
cltd
lock
mov
pop
test
dec
jb
cmp
sbb
add
pop
fnstsw
mov
cli
dec
cli
xor
add
fdiv
or
pop
cs
ret
xchg
or
add
add
or
pop
add
cmpsb
sbb
insl
fisttpl
adc
idivb
add
call
rcrl
sahf
sub
addb
js
cmpsb
sub
ror
inc
mov
adc
cmp
mov
xchg
lahf
pop
cmp
add
jp
es
xlat
or
add
in
cmp
rorb
inc
add
into
jo
out
pop
adc
add
mov
inc
icebp
bnd
xchg
cmp
loop
xchg
int3
push
fwait
xchg
pushf
fnstenv
stos
ret
addb
ljmp
cld
movups
or
jbe
mov
jmp
xor
and
pop
xor
or
dec
inc
mov
cmp
jle
push
mov
in
dec
and
arpl
out
sub
jno
pop
mov
cmp
int3
rcrl
add
push
push
adc
add
jnp
ja
insl
shrb
call
fistl
ss
add
inc
add
jo
add
add
jne
sti
fsubrl
popa
cmp
pop
int
pop
mov
imul
or
outsl
jo
ss
les
out
pop
sub
pop
jle
pop
bound
mov
add
fucom
mov
flds
jp
or
cmpsb
add
jmp
mov
nop
imul
push
cmp
popf
sbb
lcall
in
aad
cld
dec
fbld
jecxz
adc
add
sbb
cmp
add
mov
in
adc
sub
add
add
sti
add
loopne
mov
ja
xchg
push
add
adc
in
movb
mov
push
sub
add
xor
out
pop
adc
cmp
jb
fistpll
add
pop
lret
inc
add
or
add
imul
fmull
test
sbb
lea
cmp
push
sub
jge
xor
ds
cmp
xor
je
xchg
pop
orl
fidivrl
jae
aas
aam
add
popa
test
xchg
cmpsl
mov
lahf
out
mov
test
sarl
repz
push
lds
mov
ja
cmp
add
test
mov
adc
cld
jmp
add
add
test
dec
stos
ss
pop
test
jne
cmpsb
or
xchg
mov
inc
add
or
cmp
pop
imul
xchg
lods
inc
add
xchg
test
mov
out
add
dec
dec
xchg
xor
add
inc
add
aaa
xor
test
loop
mov
adcl
mov
gs
call
rcr
movb
pop
lret
fisttps
scas
gs
inc
fisttpll
dec
test
add
cmp
movb
adc
add
insb
push
out
add
adc
dec
call
jo
lods
rclb
adc
inc
add
jno
in
xorl
mov
call
out
sbb
aad
add
push
idivb
pop
insb
lock
mov
sub
adc
cmp
stos
enter
dec
xchg
xchg
sarb
cmpl
or
mov
xchg
dec
push
mull
xlat
cmp
dec
repz
cmp
stos
inc
add
ficompl
mov
pushf
mov
xchg
mov
js
fs
and
mov
int3
std
sbb
sbb
mov
popf
in
lods
insb
lods
cmp
push
mov
push
pop
pop
pushl
adc
cmpsb
mov
fcmovu
adc
push
fistps
loope
pop
push
popf
stos
xor
movsb
addb
lcall
and
or
enter
add
xor
adc
and
adc
or
pop
enter
dec
jae
xorl
rolb
xor
mov
jno
pop
jmp
add
imul
add
mov
in
jmp
nop
xchg
adc
or
lret
mov
inc
movsb
xchg
jg
in
aam
xchg
in
add
dec
cld
adc
sub
mov
shl
test
adc
push
loopne
adc
stos
pop
xchg
cwtl
jb
sbb
loopne
push
add
sahf
mov
repnz
add
outsl
inc
add
mov
dec
dec
or
add
icebp
out
jle
add
shll
mov
add
popa
push
mov
add
aas
fbld
clc
jo
mov
and
jg
shr
hlt
push
movb
test
inc
mov
jb
xchg
lds
pop
xchg
xchg
ja
stos
mov
and
sbb
add
mov
popf
sti
dec
fabs
je
add
adc
xor
push
add
hlt
out
lea
mov
add
pop
mov
inc
dec
pushf
push
outsb
mov
into
or
add
mov
add
push
fists
sub
xor
push
lds
add
jg
mov
jg
repz
xor
fucomip
popa
xchg
sbb
push
or
mov
je
icebp
jl
inc
and
les
sub
outsl
xchg
shll
repz
mov
sub
icebp
pop
sub
add
push
ss
push
push
jp
inc
add
lea
add
pop
pop
push
add
rclb
dec
fs
popa
adc
and
out
pop
cltd
cld
and
dec
stc
cmp
add
push
fimull
test
aad
or
add
sarl
dec
xor
repz
jg
adc
orps
int
insl
out
mov
test
dec
cmp
pusha
add
stos
jbe
mov
add
cmp
add
bound
outsl
and
add
ret
stc
add
test
std
mov
and
cmp
mov
xchg
adc
mov
inc
add
sbb
stos
jns
iret
lods
fildll
mov
push
jl
sahf
jge
push
outsb
outsl
mov
add
sub
cmp
inc
add
push
add
add
jp
fidivs
xchg
xor
mov
add
xor
add
aas
rolb
mov
das
pop
imul
xchg
cs
adc
gs
aaa
sbb
insb
pusha
add
repnz
es
test
mov
hlt
ss
mov
scas
sti
movb
pusha
add
leave
das
add
bound
out
es
enter
add
add
mov
jnp
icebp
xor
cld
push
cmp
jne
dec
mov
push
pop
ret
addb
fmull
ss
jbe
add
sbb
push
cmp
fsub
in
dec
out
sbb
outsb
hlt
sbb
test
inc
add
push
pop
dec
xchg
mov
ret
int3
into
cltd
adc
jo
mov
outsl
cmpsl
mov
dec
push
mov
sub
jmp
push
cmpsb
jo
and
or
push
xchg
das
add
jl
dec
lods
xor
push
add
fmul
add
push
mov
pop
pop
xchg
cld
mov
mov
int
insb
jecxz
cwtl
and
push
jecxz
dec
ret
dec
mov
add
dec
and
out
sti
jns
test
lcall
lcall
add
lret
adc
js
push
push
inc
add
mov
dec
sub
mov
dec
or
dec
in
cli
jnp
fsubr
mov
lods
addr16
gs
push
arpl
xchg
adc
movb
rolb
es
sub
lods
shl
movsb
add
add
and
cmp
sbb
lahf
shll
dec
into
mov
xchg
aaa
bound
xor
test
push
gs
mov
imul
pushf
cld
adc
jns
les
xchg
fcmovne
sbb
cmpsl
sbb
pop
ret
insb
jns
lods
cs
dec
adcl
popf
and
cmp
inc
add
ficompl
icebp
clc
stos
lahf
xchg
sti
pop
jg
inc
add
gs
subl
movsb
adc
sbb
cld
cmp
fsubrl
sbb
add
push
hlt
fistpl
cmp
imul
gs
cs
jnp
add
test
mov
lock
insl
mov
shrl
out
sub
fsubs
push
stc
adc
xor
addr16
pop
xor
jp
int
pop
cwtl
push
bnd
daa
rorl
adc
es
push
add
dec
sub
add
mov
scas
xchg
cmc
push
lods
xor
xchg
add
dec
dec
and
test
add
fcomps
mov
out
fsubs
fisttps
call
mov
int3
mov
mov
mov
pusha
add
stos
addb
add
cmp
incb
cmp
insl
mov
mov
test
jmp
cmp
outsl
sub
insl
pop
mov
mov
add
jge
in
xor
cmc
gs
and
push
push
dec
aas
jg
add
repz
pop
and
add
jecxz
pop
int
dec
icebp
jo
xlat
fs
or
add
shll
jnp
mov
add
add
xlat
mov
out
and
fsubrl
inc
lahf
hlt
pop
rol
pop
xor
inc
push
mov
cmpsb
and
push
mov
and
dec
setp
std
or
pop
xchg
rolb
loope
lret
cmp
sub
out
aad
test
sub
xchg
push
out
add
add
out
sub
into
mov
inc
add
add
dec
les
sahf
mov
push
and
dec
cmp
pop
jle
fs
and
push
xor
xchg
jg
add
dec
enter
cltd
or
stc
ret
jge
std
std
test
sub
add
or
cltd
stos
sub
add
call
scas
push
pop
gs
pop
rcrl
fs
mov
sbb
leave
and
mov
scas
arpl
or
and
ret
add
sbb
outsb
aaa
push
push
fldl
add
loop
js
insl
and
bound
cmc
mov
mov
cs
arpl
in
test
negl
pop
sub
dec
ss
sbb
ds
jmp
movsl
jecxz
pop
out
push
jno
add
lds
dec
sbb
push
add
pushf
mov
xchg
sub
rcr
clc
sbb
mov
pushf
in
xor
je
dec
fsubrs
popf
rep
test
mov
inc
sbb
sahf
sub
mov
sub
repnz
mov
popa
iret
popa
lods
cltd
mov
add
sti
loop
sub
push
inc
add
adc
cmp
mov
movsb
jae
cmp
push
mov
sbb
push
mov
ret
add
pop
js
subl
jmp
push
lea
lret
pop
in
and
mov
lahf
xchg
scas
movl
loopne
jle
clc
adc
xchg
clc
aas
ficompl
movsl
mov
mov
mov
pop
pop
push
xor
dec
xchg
push
mov
out
push
xor
jb
fstl
in
outsl
dec
rol
mov
cmpsl
fwait
sahf
int
fisubrs
jl
add
add
add
add
add
pop
lods
sbb
mov
sbb
mov
add
inc
sbb
fcmovnb
stc
jp
mov
loope
inc
add
jb
add
pop
jmp
aad
push
clc
mov
outsb
xchg
mov
mov
stos
pop
je
cmc
aas
push
cmc
push
add
adc
test
dec
mov
shll
gs
ds
fdivs
ja
mov
xchg
in
dec
outsl
mov
lods
inc
add
out
outsl
bound
adc
xor
in
add
pop
mov
push
and
pop
loope
xchg
fcmovnbe
jl
sub
into
movsl
sbb
mov
inc
xchg
and
xor
in
push
jns
mov
mov
adc
mov
xor
stos
push
test
shll
mov
push
mov
add
ret
sbb
adc
movsl
fwait
insb
cld
lcall
or
ds
insb
push
sub
mov
or
arpl
cs
mov
sahf
dec
shlb
fnstenv
imulb
add
sbb
inc
add
push
into
fdivrl
imul
adc
cmp
ret
fsubr
shl
pop
mov
push
add
addb
out
test
push
icebp
into
scas
mov
inc
add
lea
iret
inc
shrl
add
push
lret
pop
jne
jg
rorl
mov
inc
add
pop
sub
cld
aaa
in
mov
xchg
sbb
inc
mov
test
ret
jb
iret
cs
xor
adc
out
adc
int3
mov
and
in
mov
cmpsl
enter
xchg
inc
add
sub
mov
and
add
call
push
test
and
jg
fsubrs
scas
add
xlat
push
cmpsl
mov
lret
pop
pop
adc
mov
in
outsl
jno
popa
fisubrs
mov
cld
popa
adc
fnstenv
test
xor
test
inc
popf
aas
push
xchg
or
pop
sar
leave
hlt
addb
xlat
sub
push
adc
xchg
mov
popf
inc
add
les
push
and
sbb
pop
sbb
add
jno
int3
add
xor
xchg
test
add
fwait
cltd
fwait
push
add
sahf
hlt
push
addb
fwait
fwait
rcll
xor
push
and
sti
or
cmp
adc
out
adc
call
es
in
inc
add
mov
fimuls
pop
outsb
fdiv
in
lods
jmp
out
pop
mov
push
dec
sub
jnp
lods
sbb
sbb
or
mov
add
out
cmovns
mov
hlt
mov
shrl
mov
push
mov
xchg
lahf
push
sti
mov
cmp
sub
and
add
fnstsw
in
and
cwtl
rolb
stos
sahf
add
test
cmc
cmpsb
xchg
sbb
test
and
adc
out
bound
mov
mov
add
sbb
mov
adc
sub
mov
sub
imul
xchg
add
mov
ret
xchg
dec
adc
int3
inc
add
jns
popa
cmp
rcll
push
push
nop
aad
pop
or
sbb
lret
jae
iret
mov
in
loop
mov
push
add
mov
add
in
jae
cmp
fdivl
push
clc
iret
addr16
cld
mov
push
pop
test
pop
lods
addb
inc
add
add
scas
lcall
add
rcl
mov
jmp
jmp
and
aad
addb
adc
xor
or
shll
add
dec
mov
or
addl
aad
pop
mov
cmp
bound
cs
or
ja
xchg
in
movsl
out
pop
xchg
ja
sbb
jp
inc
add
jp
push
mov
jns
inc
add
in
scas
fsubl
iret
pushf
or
add
gs
sbb
adc
test
push
cmpsb
mov
mov
das
imul
rorb
dec
mov
cmp
scas
inc
scas
sarl
jo
dec
jmp
decl
pop
dec
outsb
pop
imul
jb
add
and
sbb
jno
or
add
movb
idiv
jo
add
bound
and
addr16
cld
leave
addb
inc
add
cmp
leave
ljmp
xor
xor
jns
lcall
inc
add
inc
add
mov
xor
push
fmull
add
sub
or
add
gs
add
aaa
xchg
xor
add
ret
cmpsl
movb
lahf
push
pop
jne
sbb
rcll
lods
adc
cmp
out
add
inc
add
in
lahf
inc
inc
add
mov
mov
xor
push
adcl
pop
sbb
push
movsl
outsb
push
and
xchg
repz
aad
ljmp
stos
jg
sub
and
sbb
pushf
or
inc
push
add
pop
movsb
imul
pop
cmp
scas
mov
movsl
xchg
rol
add
jge
xchg
fcoml
aas
lahf
out
rcrl
cmp
into
add
mov
push
add
xchg
fnsave
imul
cmp
mov
sub
mov
popl
mov
sahf
jle
lret
dec
xchg
lds
push
add
imul
xor
push
push
pop
inc
add
lahf
lret
xor
jmp
mov
js
cmc
out
ljmp
fildll
xlat
nop
mov
addr16
stos
xor
test
inc
mov
popf
mov
ret
dec
cmc
xchg
in
mov
mov
or
js
sub
xchg
push
popa
or
sub
fstpt
push
add
test
addb
cmp
imul
insb
fadd
add
add
and
imul
sbb
sub
lock
or
jb
addr16
add
lock
push
or
dec
adc
int3
fisubl
std
cmp
lods
add
fadd
add
lods
insl
cs
jo
shll
dec
movsb
mov
cmp
outsl
dec
movb
xchg
fucomi
cwtl
cmpsb
inc
pusha
add
loope
fadds
les
test
push
idivl
inc
and
sahf
push
xchg
inc
dec
fsubrs
mov
cmpsb
mov
popa
add
mov
fwait
pop
addl
std
fstl
test
inc
add
outsl
and
test
mov
js
ljmp
sub
add
push
imul
fmul
in
dec
mov
mov
in
je
dec
sbb
pop
xchg
jne
rolb
xchg
mov
in
cmp
add
leave
test
sub
mov
inc
add
cld
pop
loop
xor
int
jne
add
sbb
rclb
leave
mov
cmp
add
arpl
xor
nop
adc
enter
mov
scas
cmp
rolb
roll
mov
sbb
and
bound
call
icebp
push
add
mov
movsb
nop
cmpsb
enter
or
outsl
scas
push
inc
sbbl
and
push
add
push
lds
flds
add
aad
add
lds
mov
mov
in
imul
inc
add
jb
cmp
sbb
xchg
adc
xchg
dec
flds
push
adc
daa
mov
imul
xchg
jnp
sbb
inc
mov
mov
movsb
add
aam
ljmp
mov
outsl
fldl
mov
mov
add
lea
mov
aam
idivl
lcall
mov
add
add
cmp
add
add
inc
add
les
fs
ret
dec
sbb
loop
inc
cld
out
push
pop
and
add
outsb
jno
shrb
out
push
xor
mov
mov
movb
cmp
add
out
mov
sbb
xor
fadds
lret
mov
mov
jb
stos
in
outsl
sbb
sbb
lds
add
ds
movsl
jmp
repz
add
loop
mov
jb
popf
xchg
aas
insl
cmp
aam
ret
adc
cli
out
test
jp
pop
dec
xor
loope
mov
inc
add
and
fcmovne
popf
xchg
pop
fcmove
jp
out
xchg
push
std
jp
orl
popf
mov
test
mov
in
xchg
and
pxor
mov
xor
push
ficoms
xchg
sbb
in
xor
jmp
test
inc
add
xlat
push
mov
cmp
test
ljmp
jo
push
pop
into
mov
sub
xchg
xchg
lock
pop
mulb
add
xchg
xchg
je
fidivs
lcall
test
out
add
aam
jnp
lret
mov
popf
mov
test
push
xor
pop
dec
ret
popf
xchg
mov
or
das
cmpsb
sbb
mov
std
xchg
push
ljmp
outsb
lret
xchg
cmpl
jo
lea
rolb
or
or
add
fldl
add
sbb
mov
scas
sub
icebp
cwtl
mov
adcl
add
add
add
xchg
sub
loopne
dec
xchg
adc
add
jno
pop
sar
dec
imul
add
jae
sbb
sbb
jge
loopne
aaa
fbstp
or
jecxz
cmp
xor
cld
mov
shlb
pop
inc
add
iret
or
aas
stos
jne
pusha
add
adc
add
xchg
pop
xlat
xchg
lea
jecxz
jbe
adc
rolb
stc
popf
addb
xchg
cmp
testb
xchg
sarb
mov
inc
add
add
or
sti
nop
add
popa
and
mov
cwtl
cmpsb
jns
push
addb
and
out
push
and
int3
test
imul
cmpsl
leave
xor
adc
and
imul
jp
add
in
fcoms
cs
std
xor
or
pop
and
jecxz
add
sub
xor
dec
or
je
cmp
xor
scas
cmp
outsl
xchg
leave
pushf
rcr
jb
cmp
stc
xor
or
and
inc
test
fwait
pop
sbb
pop
movb
jg
into
sbb
cmp
pop
scas
mov
lahf
add
jecxz
xlat
icebp
cwtl
mov
add
sub
add
xlat
lods
cltd
cmpsl
in
mov
jecxz
add
movsb
aaa
fisubrl
icebp
cltd
out
jmp
movsl
cwtl
jno
lods
test
sub
rorl
sarl
lods
bound
scas
inc
cmp
push
test
adc
push
aad
addb
xlat
in
inc
add
stos
lcall
cld
xchg
lcall
mov
loope
inc
aad
push
hlt
aam
pop
mov
cmpsb
sub
jne
jns
add
leave
and
test
fistps
xchg
push
dec
gs
and
roll
mov
add
xor
inc
add
sbb
jmp
add
popf
jns
sub
xchg
add
jno
mov
mov
mov
mov
adc
repnz
cli
jnp
lods
push
and
mov
mov
jnp
std
jo
mov
mov
add
lret
add
and
sbb
and
inc
xor
lods
dec
lret
jp
xchg
cmc
idivl
movsl
insl
mov
aaa
adc
or
rclb
sub
cwtl
mov
jl
add
add
cs
jo
pop
pop
cmc
xchg
xchg
je
inc
cmp
push
mov
pop
or
test
add
lret
test
jle
into
stc
bound
cmc
lret
scas
xchg
mov
dec
cltd
test
fmulp
mov
test
xchg
test
imul
lock
add
ja
dec
popf
sbb
aad
sbb
mov
aam
inc
xchg
fstp
leave
xchg
xchg
out
mov
inc
add
mov
and
popa
in
pushf
inc
rcl
mov
mov
jb
jne
xor
add
aas
dec
lcall
pop
fiadds
add
cmpsb
xchg
mov
inc
add
inc
add
add
mov
test
movsb
jbe
repz
adc
add
sti
js
inc
add
sbb
aam
mov
stc
nop
jb
mov
push
clc
add
push
mov
xchg
ret
dec
ret
stos
mov
stc
nop
jb
sldt
in
sub
stc
nop
jb
xor
lahf
push
stc
nop
jb
add
add
out
add
push
stc
nop
jb
outsl
add
mov
cmp
add
sbb
stc
nop
jb
movsl
clc
add
out
rep
stc
nop
jb
out
xor
jg
stc
nop
jb
cld
add
add
add
add
cmp
ret
dec
push
stc
nop
jb
add
imul
nop
cld
nop
jmp
push
mov
mov
stc
nop
jb
add
add
nop
jb
add
cs
nop
cld
nop
jmp
push
daa
add
add
mov
nop
cld
nop
jmp
mov
jne
nop
cld
nop
jmp
add
jmp
stc
nop
jb
add
sarl
enter
cld
nop
jmp
jl
cmp
add
mov
xchg
ret
icebp
add
jae
add
push
mov
xchg
ret
daa
add
push
pop
add
xchg
ret
les
repz
nop
jb
or
add
arpl
nop
cld
nop
jmp
add
add
outsl
cmp
push
mov
jecxz
into
add
add
lods
xchg
add
jp
add
movsl
cli
inc
add
imul
inc
sub
push
add
out
roll
pop
sub
stc
nop
jb
add
cmp
iret
or
add
and
add
les
stc
nop
jb
popf
add
mov
stc
nop
jb
insl
icebp
pop
mov
stc
nop
jb
add
and
add
add
push
stc
nop
jb
add
cmp
jl
ja
js
test
nop
jb
sub
ljmp
jb
add
add
inc
mov
adcb
dec
jae
add
add
sub
ret
out
inc
add
cli
and
pause
cld
nop
jmp
mov
outsl
dec
add
iret
push
stc
nop
jb
cmp
and
add
add
rep
stc
nop
jb
add
insb
add
sarl
sbb
in
add
or
and
mov
subb
insl
add
add
sub
jg
stc
nop
jb
dec
add
xchg
add
clc
shr
push
mov
xchg
ret
add
cmp
fists
nop
jb
add
sub
or
popf
nop
cld
nop
jmp
dec
hlt
add
push
add
nop
cld
nop
jmp
popa
fiaddl
add
fs
mov
stc
nop
jb
arpl
sub
nop
cld
nop
jmp
add
add
stc
nop
jb
mov
add
inc
add
add
push
mov
xchg
ret
add
add
add
stc
nop
jb
add
mov
nop
cld
nop
jmp
jae
add
lret
adc
push
add
hlt
add
add
mov
repnz
push
stc
nop
jb
mov
pushf
add
push
nop
cld
nop
jmp
mov
add
dec
xor
cs
nop
cld
nop
jmp
mov
scas
lea
stc
nop
jb
mov
jmp
rclb
out
add
add
popa
in
push
mov
add
lret
repnz
daa
add
das
add
stc
nop
jb
scas
arpl
add
add
mov
jne
stc
nop
jb
mov
and
stc
nop
jb
jae
push
scas
xor
push
mov
xchg
ret
sldt
add
add
mov
stc
nop
jb
sub
add
push
bound
inc
movsb
xor
add
push
push
mov
xchg
ret
add
add
arpl
cmp
push
mov
xchg
ret
movl
mov
nop
cld
nop
jmp
pop
mov
stc
nop
jb
add
mov
or
pushf
inc
push
mov
xchg
ret
pop
add
enter
cld
nop
jmp
cmp
add
add
jb
scas
add
mov
mov
mov
mov
stc
nop
jb
add
xor
repz
nop
jb
pop
cli
cmp
push
mov
cs
inc
add
rolb
out
mov
movb
mov
xchg
ret
dec
out
mov
add
nop
cld
nop
jmp
roll
les
xchg
mov
push
mov
xchg
ret
clc
add
out
mov
stc
nop
jb
add
add
testl
nop
cld
nop
jmp
add
or
inc
push
adc
stc
nop
jb
ret
mov
dec
nop
cld
nop
jmp
scas
add
cld
mov
jne
shr
stc
nop
jb
dec
add
mov
add
nop
cld
nop
jmp
cld
add
add
stc
nop
jb
arpl
add
sub
mov
xchg
ret
add
add
out
mov
stc
nop
jb
cmp
scas
add
push
lds
cmp
stc
nop
jb
ret
adc
rep
push
mov
xchg
ret
cmp
add
addb
cmpl
nop
cld
nop
jmp
and
cmp
add
nop
jb
roll
and
xchg
xchg
movb
inc
stc
nop
jb
cmp
str
add
xor
jb
add
movl
jne
stc
nop
jb
and
std
mov
nop
cld
nop
jmp
add
pop
add
stc
nop
jb
outsl
dec
insb
cmp
stc
nop
jb
insl
mov
popa
add
out
decl
push
mov
xchg
ret
cmp
daa
outsb
mov
stc
nop
jb
fldcw
add
add
inc
and
stc
nop
jb
add
add
addr16
je
stc
nop
jb
add
mov
nop
jb
add
add
add
orb
add
sub
add
adc
and
push
mov
xchg
ret
cmp
xchg
adc
xor
add
stc
nop
jb
sarl
dec
add
mov
xchg
ret
add
out
cmp
cmp
add
outsl
outsl
cmp
inc
add
xlat
add
mov
jb
add
shrl
push
adc
movsb
xchg
jne
mov
add
sbb
inc
add
mov
and
stc
nop
jb
add
add
jbe
nop
cld
nop
jmp
jno
clc
push
adc
loopne
inc
add
cmp
mov
nop
jmp
add
mov
add
ljmp
cld
nop
jmp
cmp
jne
stc
nop
jb
add
add
add
xor
stc
nop
jb
xchg
mov
dec
sub
push
mov
xchg
ret
or
inc
add
push
stc
nop
jb
add
add
xchg
add
movsb
push
mov
xchg
ret
xchg
xchg
outsl
cmp
movzwl
stc
nop
jb
add
add
pop
push
nop
cld
nop
jmp
add
cmp
jne
sub
stc
nop
jb
add
call
or
add
mov
mov
xchg
ret
jae
add
jl
repnz
stc
nop
jb
shll
aaa
test
add
add
nop
jb
dec
nop
mov
stc
nop
jb
cmp
add
cmp
nop
cld
nop
jmp
push
outsl
add
xor
add
stc
nop
jb
cli
pop
nop
push
mov
xchg
ret
add
fiaddl
add
xor
stc
nop
jb
and
add
and
push
stc
nop
jb
imul
add
add
stc
nop
jb
add
and
jmp
nop
jb
push
add
mov
nop
cld
nop
jmp
sub
add
add
sar
and
push
mov
xchg
ret
mov
cld
xor
stc
nop
jb
sub
add
cli
nop
cld
nop
jmp
fiaddl
or
xchg
mov
jb
fidivrl
add
add
sub
stc
nop
jb
les
add
and
add
push
nop
jb
mov
cld
xor
xor
jb
add
aad
push
stc
nop
jb
outsl
and
cmp
add
bound
nop
jb
push
sarl
call
and
hlt
add
popf
psubsb
js
nop
cld
nop
jmp
daa
add
les
popa
add
nop
jb
scas
cmp
add
sub
out
add
sar
dec
sub
shrl
stc
nop
jb
add
dec
cs
nop
cld
nop
jmp
add
add
les
nop
jb
daa
out
add
leave
mov
nop
cld
nop
jmp
add
sub
xchg
push
push
mov
xchg
ret
rorl
add
mov
mov
xchg
ret
sldt
add
add
stc
nop
jb
outsl
outsl
push
ret
mov
stc
nop
jb
mov
push
nop
cld
nop
jmp
and
push
lldt
mov
stc
nop
jb
add
inc
add
ret
ret
insl
add
push
mov
xchg
ret
cmp
idiv
nop
jb
cld
add
add
pop
push
stc
nop
jb
flds
outsl
add
push
xchg
fcmovb
loop
stc
nop
jb
add
lea
stc
nop
jb
packsswb
add
jb
add
outsl
icebp
roll
daa
stos
ret
nop
cld
nop
jmp
add
add
add
mov
jne
stc
nop
jb
imul
cld
stc
nop
jb
add
cmp
jb
add
ret
adc
popa
nop
cld
nop
jmp
add
cmp
call
stc
nop
jb
add
cmp
nop
jb
add
les
xchg
jo
sahf
add
stc
nop
jb
xor
cli
jno
decb
jb
roll
pushf
jno
xchg
movsl
jo
adc
cmp
nop
jb
add
mov
lea
mov
xchg
ret
jno
out
mov
stc
nop
jb
icebp
add
icebp
rorl
push
mov
xchg
ret
add
imul
xor
cmp
rorl
mov
xchg
ret
add
bound
hlt
xchg
xor
push
stc
nop
jb
add
popa
stc
nop
jb
add
ja
mov
push
mov
xchg
ret
and
mov
jmp
shll
xchg
add
add
sbb
add
nop
jb
cmp
inc
clc
mov
stc
nop
jb
add
arpl
cld
nop
jmp
add
add
nop
jmp
hlt
ret
fiaddl
aaa
sti
push
push
mov
xchg
ret
fnstenv
leave
push
mov
xchg
ret
out
mov
push
mov
xchg
ret
add
call
nop
cld
nop
jmp
outsl
mov
add
pushf
jne
stc
nop
jb
mov
adc
nop
jb
movsl
sub
add
add
add
dec
nop
cld
nop
jmp
add
jl
and
stc
nop
jb
mov
cmp
pusha
stc
nop
jb
add
add
add
loop
mov
addb
add
mov
xchg
xor
mov
nop
cld
nop
jmp
add
roll
add
mov
nop
cld
nop
jmp
add
lahf
mov
stc
nop
jb
mov
add
add
adc
add
stc
nop
jb
movsl
popa
icebp
pushf
add
push
mov
xchg
ret
jl
insb
push
add
inc
and
stc
nop
jb
push
or
add
add
mov
stc
nop
jb
clc
negb
pop
cmp
mov
xchg
ret
icebp
add
jb
rorl
mov
les
xchg
push
add
add
cli
jl
loop
mov
push
mov
xchg
ret
cmp
add
mov
outsb
repnz
call
clc
pushl
ja
cmpl
nop
cld
nop
jmp
bswap
pop
push
mov
xchg
ret
and
mov
daa
mov
add
push
mov
xchg
ret
clc
roll
rol
add
pusha
stc
nop
jb
shrl
roll
jno
stc
mov
stc
nop
jb
add
add
popf
mov
incl
xchg
ret
outsl
es
mov
bound
dec
pusha
stc
nop
jb
insb
add
add
inc
loope
test
mov
stc
nop
jb
add
scas
add
aad
push
stc
nop
jb
insl
add
add
and
cmpsb
movb
sbb
cld
or
jmp
shll
fsubrl
add
cmp
add
and
push
xchg
mov
nop
jb
movl
mov
nop
cld
nop
jmp
pushf
add
add
or
stc
nop
jb
or
add
daa
je
and
stc
nop
jb
or
cmp
in
cmpsl
test
xor
mov
mov
nop
jb
les
add
add
sbb
push
add
insl
mov
add
jp
mov
test
add
jno
lahf
add
pop
sarl
add
mov
xchg
ret
cli
cmp
add
cld
nop
jmp
xor
cmpl
nop
cld
nop
jmp
daa
add
outsl
daa
jo
cltd
mov
stc
nop
jb
rcr
add
pop
adc
test
add
stc
nop
jb
roll
es
add
stc
nop
jb
icebp
add
add
jae
decl
push
mov
xchg
ret
add
popf
loope
jne
stc
nop
jb
dec
add
jne
push
mov
xchg
ret
add
cmp
add
stc
nop
jb
mov
shrl
push
mov
xchg
ret
popf
add
cmp
out
push
stc
nop
jb
roll
add
jl
pop
stc
nop
jb
icebp
add
ret
pop
fnstcw
stc
nop
jb
cmp
pop
ja
stc
nop
jb
add
mov
cld
nop
jmp
or
add
jle
arpl
jae
nop
jb
add
aas
mov
push
mov
xchg
ret
xor
popa
pop
push
push
mov
xchg
ret
sar
dec
movsl
dec
popa
stc
nop
jb
or
or
nop
jmp
push
mov
inc
add
nop
jb
jno
outsl
outsl
add
out
stc
nop
jb
or
add
stc
nop
jb
add
mov
nop
jb
cmp
and
sahf
jne
stc
nop
jb
daa
movsl
add
push
mov
xchg
ret
daa
sub
and
dec
push
nop
cld
nop
jmp
add
add
roll
mov
push
stc
nop
jb
add
sarl
mov
push
mov
xchg
ret
add
insl
out
movzwl
stc
nop
jb
or
sub
pop
jmp
nop
cld
nop
jmp
xchg
popf
add
mov
adc
nop
jb
add
nop
cld
nop
jmp
mov
add
push
cmp
jb
add
pop
popf
stos
call
stc
nop
jb
mov
push
mov
xchg
ret
add
pop
pushf
cmc
test
push
aas
mov
stc
nop
jb
add
and
xor
nop
cld
nop
jmp
add
rol
add
in
call
stc
nop
jb
ret
leave
push
push
mov
xchg
ret
add
dec
and
pop
mov
stc
nop
jb
add
and
pushf
popa
add
add
mov
nop
cld
nop
jmp
outsl
movsl
movsl
arpl
add
jle
stc
nop
jb
and
xor
outsl
fwait
xchg
push
mov
xchg
ret
add
push
add
cmpsb
add
inc
add
jb
cld
xchg
add
and
jno
mov
add
nop
jb
cli
flds
xchg
sub
orb
add
outsl
outsl
clc
sub
ljmp
idiv
jl
add
loopne
mov
xchg
ret
pop
push
add
stc
nop
jb
clc
imul
push
stc
nop
jb
add
add
add
add
andb
incl
add
add
add
add
jmp
stc
nop
jb
dec
add
fsubr
sub
stc
nop
jb
xor
or
push
mov
xchg
ret
add
add
push
push
mov
xchg
ret
cmp
add
mov
xchg
ret
add
or
add
pop
aad
or
addb
add
movsl
add
pop
stc
nop
jb
add
pushf
cmp
popf
test
nop
cld
nop
jmp
sub
push
add
ja
push
mov
repz
push
mov
mov
nop
jb
daa
imul
fisubl
jb
pop
outsl
daa
mov
xor
push
mov
xchg
ret
clc
cmp
cwtl
popa
stc
nop
jb
jae
shrl
push
add
xorb
pushl
add
arpl
test
incl
xchg
ret
mov
add
xor
icebp
stc
nop
jb
icebp
add
outsb
add
stc
nop
jb
add
add
push
add
stc
nop
jb
movntps
pop
and
nop
jb
xor
add
add
stc
nop
jb
add
cld
add
add
cmpsb
jno
mov
push
mov
xchg
ret
pinsrw
shr
stc
nop
jb
push
add
add
lods
dec
stc
nop
jb
add
mov
hlt
or
mov
repz
nop
jmp
add
add
incl
jb
add
or
pop
fsts
nop
jb
add
add
add
int3
mov
push
mov
xchg
ret
add
jb
add
pop
push
loop
test
cmpb
cmp
add
mov
stc
nop
jb
mov
jno
mov
and
jb
mov
cmp
je
stc
nop
jb
scas
cmp
mov
add
nop
jb
add
sbb
add
nop
jb
xor
divl
dec
mov
stc
nop
jb
fsqrt
add
add
inc
pop
and
push
mov
xchg
ret
add
fsqrt
stos
push
mov
xchg
ret
dec
add
outsb
and
nop
jb
push
add
fiaddl
mov
pop
pop
nop
cld
nop
jmp
jae
jno
add
push
pop
pop
pop
stc
nop
jb
or
add
add
int
stc
nop
jb
add
add
mov
clc
test
nop
cld
nop
jmp
xchg
imul
nop
jb
add
cmp
xchg
div
loop
jle
int
pop
jae
nop
jb
mov
mov
push
push
mov
xchg
ret
add
mov
push
mov
xchg
ret
add
scas
ja
add
stc
nop
jb
add
add
add
stc
nop
jb
add
sldt
mov
mov
test
add
nop
cld
nop
jmp
add
stc
nop
jb
add
and
daa
scas
push
nop
cld
nop
jmp
les
xor
add
nop
cld
nop
jmp
arpl
mov
push
fcompl
mov
xchg
ret
and
hlt
add
ret
pushf
dec
dec
sub
cmp
add
roll
hlt
dec
add
adc
movl
in
mov
or
rclb
jp
inc
add
add
jno
ds
stc
nop
jb
mov
add
lods
mov
nop
cld
nop
jmp
shll
xchg
daa
invd
push
push
mov
xchg
ret
arpl
out
cmp
mov
stc
nop
jb
add
movsl
add
pop
mov
stc
nop
jb
outsl
and
sbb
jbe
nop
cld
nop
jmp
arpl
mov
pop
jmp
stc
nop
jb
add
arpl
add
xor
nop
cld
nop
jmp
movl
test
arpl
stc
nop
jb
jno
xor
lods
incb
xchg
ret
sarl
push
xorl
jb
popf
add
mov
add
fsubr
call
nop
jb
add
xor
adcl
mov
xchg
ret
daa
xor
dec
add
cld
nop
jmp
add
cmp
lock
sub
stc
nop
jb
add
add
add
xor
push
mov
xchg
ret
clc
add
daa
js
ret
push
mov
xchg
ret
push
add
add
add
icebp
nop
cld
nop
jmp
ficompl
add
cmp
call
stc
nop
jb
xor
add
xor
stc
nop
jb
add
arpl
add
add
stc
nop
jb
sldt
push
das
pushl
push
mov
xchg
ret
sldt
fildl
jb
add
not
stc
nop
jb
daa
xchg
add
add
push
mov
xchg
ret
jae
les
cld
nop
jmp
add
arpl
cli
sub
inc
inc
add
cmpsl
mov
popf
stc
nop
jb
add
rclb
insb
insb
stc
nop
jb
sub
out
stc
nop
jb
icebp
ret
push
mov
nop
cld
nop
jmp
push
push
mov
xchg
ret
add
ror
jge
stc
nop
jb
cld
push
cmp
add
sub
nop
jb
pop
add
daa
cli
cli
mov
push
mov
xchg
ret
add
clc
aaa
cmp
add
roll
fcmove
push
stc
nop
jb
add
add
cld
jno
add
jnp
adc
nop
jb
xor
rep
stc
nop
jb
cmp
mov
jmp
xchg
add
add
aaa
mov
add
nop
cld
nop
jmp
add
dec
push
stc
nop
jb
fisubrl
add
pushf
mov
mov
xchg
ret
pushf
or
add
addb
mov
jb
add
add
insb
add
fldl
xchg
ret
sldt
mov
mov
mov
push
mov
xchg
ret
add
movsl
movb
call
add
stc
nop
jb
push
add
rep
stc
nop
jb
mov
xor
mov
stc
nop
jb
dec
sarl
nop
cld
nop
jmp
add
add
push
stc
nop
jb
push
add
mov
call
stc
nop
jb
xor
mov
push
mov
xchg
ret
add
or
sub
iret
or
inc
add
mov
jno
push
stc
nop
jb
add
out
mov
mov
cld
nop
jmp
add
aam
add
mov
adc
nop
jb
add
nop
cld
nop
jmp
cli
insl
les
imul
mov
stc
nop
jb
add
ret
xor
stc
nop
jb
les
add
mov
stc
nop
jb
xchg
dec
mov
test
cld
nop
jmp
push
movsl
jbe
push
push
mov
xchg
ret
mov
jae
sarl
stc
nop
jb
cld
and
add
call
stc
nop
jb
flds
add
movsl
mov
mov
xchg
ret
add
test
daa
pop
pop
push
mov
xchg
ret
add
mov
stc
nop
jb
push
xchg
aad
jl
stc
nop
jb
xor
daa
dec
cmp
pushf
xor
stc
nop
jb
mov
or
nop
jb
add
mov
shr
stc
nop
jb
movsl
add
jno
rolb
stos
push
push
mov
xchg
ret
add
clc
fiaddl
sbb
mov
xchg
ret
and
pop
add
stc
nop
jb
add
popa
add
nop
jb
cli
daa
xchg
add
icebp
add
cmp
nop
cld
nop
jmp
add
arpl
clc
stc
nop
jb
mov
add
pop
incb
jo
nop
cld
nop
jmp
outsl
out
add
loopne
call
stc
nop
jb
cmp
sar
nop
jb
add
add
daa
pop
movzwl
stc
nop
jb
cmp
add
cmpsb
in
jne
stc
nop
jb
add
jne
mov
rep
stc
nop
jb
add
add
stc
nop
jb
add
add
xor
add
stc
nop
jb
jl
add
clc
xorl
nop
jmp
add
add
push
incl
xchg
ret
and
mov
push
push
mov
xchg
ret
mov
popa
jno
repnz
popa
add
mov
xchg
ret
es
jne
mov
nop
jb
scas
add
add
jno
mov
nop
cld
nop
jmp
mov
push
cld
mov
stc
nop
jb
add
gs
push
stc
nop
jb
cli
cmp
outsl
and
add
add
nop
jb
clc
mov
roll
mov
stc
nop
jb
or
arpl
dec
mov
stc
nop
jb
rcrl
mov
adc
nop
jb
add
mov
cli
add
nop
cld
nop
jmp
cmp
add
es
push
outsl
push
push
mov
xchg
ret
and
pushf
roll
mov
stc
nop
jb
xor
nop
cld
nop
jmp
push
cmp
insl
add
push
mov
xchg
ret
mov
dec
xchg
push
mov
xchg
ret
add
mov
mov
stos
or
stos
int3
add
push
stc
nop
jb
add
add
push
add
inc
add
inc
mov
nop
jmp
add
xor
mov
cmp
out
inc
add
cld
add
dec
movswl
stc
nop
jb
add
add
mov
stc
nop
jb
add
add
mov
stc
nop
jb
roll
pushf
or
enter
addb
cmp
mov
sub
add
nop
jb
daa
or
mov
xchg
ret
imul
mov
stc
nop
jb
popf
add
scas
stos
stc
nop
jb
mov
and
push
mov
xchg
ret
xchg
and
add
add
add
scas
xlat
inc
add
outsl
add
mov
stc
nop
jb
cli
push
cld
add
push
mov
stos
mov
cmc
stos
shll
add
lods
mov
stc
nop
jb
add
outsl
add
mov
nop
jb
outsl
add
wrmsr
add
nop
cld
nop
jmp
add
add
add
pop
add
nop
cld
nop
jmp
add
ret
pop
jmp
stc
nop
jb
hlt
icebp
daa
xor
ret
nop
cld
nop
jmp
add
lret
stc
nop
jb
pop
verr
add
xchg
stc
nop
jb
add
shl
add
xchg
jae
in
push
stc
nop
jb
outsl
mov
add
sub
mov
jb,pt
nop
cld
nop
jmp
imul
sbb
dec
cmp
nop
jb
clc
add
add
push
push
mov
xchg
ret
push
add
or
sub
lock
add
sub
add
loop
push
mov
xchg
ret
sub
add
movsb
stc
call
stc
nop
jb
jae
scas
xor
nop
jb
add
add
mov
nop
jmp
add
rorl
or
arpl
xor
stc
nop
jb
clc
add
add
add
mov
stc
nop
jb
add
add
add
mov
adc
nop
jb
mov
lods
push
mov
xchg
ret
insl
popa
mov
add
stc
nop
jb
add
mov
add
or
mov
inc
add
add
xchg
mov
cld
nop
jmp
add
mov
stc
nop
jb
scas
cmp
add
add
mov
movzwl
stc
nop
jb
add
cmp
loope
jg
mov
xor
adc
mov
add
std
mov
stc
nop
jb
add
fmull
xorb
sub
adc
stc
nop
jb
add
add
lret
add
cld
nop
jmp
xchg
add
cli
dec
pop
mov
nop
cld
nop
jmp
add
add
add
add
jb
add
add
add
outsl
add
push
mov
xchg
ret
popf
add
pusha
stc
nop
jb
arpl
add
jno
add
add
xor
stc
nop
jb
add
add
out
mov
push
mov
xchg
ret
shll
cmp
pop
or
popa
add
nop
jb
cli
add
scas
add
jmp
stc
nop
jb
add
push
pop
add
add
add
jne
decb
jecxz
inc
add
sysenter
or
test
hlt
stc
nop
jb
add
adc
inc
xor
stc
nop
jb
push
mov
daa
aas
mov
stc
nop
jb
push
addr16
call
nop
cld
nop
jmp
add
add
add
jmp
nop
jb
flds
add
jno
into
mov
nop
cld
nop
jmp
add
add
adc
je
nop
cld
nop
jmp
add
mov
mov
add
inc
add
push
add
rolb
mov
stc
nop
jb
out
push
add
xor
stc
nop
jb
mov
xor
nop
jb
mov
popa
add
nop
jb
sub
add
push
jb
pop
nop
cld
nop
jmp
add
flds
add
cli
mov
call
jmp
add
imul
nop
cld
nop
jmp
push
leave
dec
nop
cld
nop
jmp
add
add
movsl
cmp
or
ret
stc
nop
jb
popf
xor
add
and
mov
stc
nop
jb
popf
add
lea
nop
cld
nop
jmp
jno
add
xchg
xor
test
loop
call
loopne
pushl
mov
xchg
ret
add
xor
iret
push
push
mov
xchg
ret
xor
cmp
mov
cld
nop
jmp
mov
add
call
nop
cld
nop
jmp
add
add
out
pusha
stc
nop
jb
jae
add
popf
add
mov
xor
add
stc
nop
jb
mov
pop
nop
cld
nop
jmp
add
daa
out
popf
shll
add
nop
jb
add
add
add
stc
nop
jb
or
cld
daa
mov
and
inc
add
hlt
sldt
ficoms
nop
jb
mov
or
insl
outsl
les
stc
nop
jb
movl
nop
cld
nop
jmp
cmp
add
jae
cmpsb
or
jmp
and
daa
cmp
add
mov
nop
cld
nop
jmp
roll
add
daa
cld
and
push
mov
xchg
ret
cli
add
cmp
nop
jb
dec
add
add
sahf
out
inc
add
add
add
and
sbb
jecxz
inc
add
add
nop
jb
insb
or
mov
stc
nop
jb
btc
or
pop
xor
push
mov
xchg
ret
scas
add
push
mov
xchg
ret
and
xchg
fchs
jmp
repnz
nop
jb
mov
xchg
fwait
push
nop
cld
nop
jmp
add
pop
cmp
out
ror
stc
nop
jb
daa
popa
popf
bt
mov
stc
nop
jb
add
shll
das
je
nop
cld
nop
jmp
dec
add
leave
stc
nop
jb
add
clc
push
xchg
stc
nop
jb
add
mov
stc
nop
jb
movsl
jmp
sar
nop
jb
insl
sub
add
push
push
mov
xchg
ret
add
daa
les
jb
add
add
xor
push
mov
xchg
ret
jl
add
mov
stc
nop
jb
cmp
mov
adc
jmp
outsl
add
nop
jb
add
fisubs
popa
add
mov
xchg
ret
push
inc
add
xchg
test
mov
add
add
rorb
add
test
out
pop
stc
nop
jb
add
roll
add
add
and
nop
cld
nop
jmp
add
popa
add
verw
add
stc
nop
jb
scas
push
sldt
or
stc
nop
jb
clc
add
mov
stc
nop
jb
add
outsl
cmp
mov
sub
nop
jb
mov
or
test
stc
nop
jb
mov
push
stc
nop
jb
add
rorl
orb
ljmp
xchg
setl
add
add
stc
nop
jb
outsl
add
or
or
test
nop
jb
add
mov
jb
fsqrt
dec
add
cmp
push
mov
xchg
ret
cmp
popf
jne
stc
nop
jb
cmp
push
mov
adc
incl
clc
add
sar
ljmp
std
incl
cmp
add
add
jne
pop
rolb
add
nop
cld
nop
jmp
arpl
xchg
push
sub
nop
jb
add
daa
daa
add
adc
add
mov
xchg
ret
outsl
add
addps
jae
inc
add
add
hlt
add
sbb
test
sti
stc
nop
jb
sub
xchg
adc
sub
rcll
stc
inc
add
add
daa
int3
dec
nop
cld
nop
jmp
or
dec
cmp
pop
stc
nop
jb
add
shll
add
jne
stc
nop
jb
xor
sbb
rolb
nop
jb
fidivrl
xchg
add
decl
nop
cld
nop
jmp
add
add
mov
jb
add
popf
xchg
insb
scas
add
push
push
push
mov
xchg
ret
pushf
outsl
movsl
scas
faddl
jne
stc
nop
jb
add
daa
and
jb
add
add
arpl
mov
stc
nop
jb
imul
adc
mov
stc
nop
jb
arpl
roll
arpl
jae
mov
push
mov
xchg
ret
add
add
adc
stc
nop
jb
cmp
daa
add
sbb
add
in
jmp
cmp
jb
jae
xchg
mov
imul
nop
cld
nop
jmp
add
xor
push
add
es
add
test
movsb
repnz
push
add
stc
nop
jb
and
add
stos
pushl
nop
cld
nop
jmp
mov
mov
nop
jb
cmp
xchg
sbb
in
out
dec
xchg
add
xchg
or
push
and
jp
je
ja
mov
pop
fwait
push
mov
sub
sub
adc
add
and
dec
xchg
push
gs
sarb
mov
inc
inc
scas
jnp,pt
pop
stc
lcall
jno
ljmp
jmp
imul
in
popa
incl
cwtl
xor
pop
repz
mov
arpl
int
adc
dec
arpl
and
jmp
adc
fldt
xor
addb
out
push
mov
clc
sub
nop
sahf
xchg
mull
les
aas
in
lods
arpl
lods
pushf
call
pop
aam
repz
lock
sub
imul
cmp
test
out
sub
gs
add
adc
xchg
jecxz
repnz
sbb
xor
popf
cmp
movb
jg
push
add
dec
pop
aam
push
std
stos
je
mov
xchg
xchg
xchg
jmp
dec
xchg
cmp
fs
cld
decl
loopne
mov
xchg
int3
sub
add
out
es
add
pop
inc
add
sbb
sub
icebp
rcrb
fistl
pop
cmc
aaa
in
out
lret
clc
xor
enter
add
mov
xchg
ficoms
xchg
pop
push
cmp
jo
inc
sub
fidivrs
and
test
add
cs
xor
add
fs
rclb
rorb
xchg
xor
pop
lret
lret
push
and
les
mov
sbb
fstl
pop
sub
fcomps
rorl
and
and
lcall
mov
cmp
mov
int3
inc
rolb
pushf
movsb
movsb
pop
xchg
ljmp
mov
mov
cmpsb
push
fiadds
add
xor
jmp
fdivl
popa
sub
notb
inc
and
int
test
pop
jno
mov
lods
mov
mov
sahf
xor
add
xchg
push
add
test
adc
mov
cmpsl
arpl
add
push
bound
iret
inc
ret
or
inc
add
push
idivl
adc
xchg
std
mov
insl
mov
cmp
mov
lret
inc
add
out
dec
loop
lods
jecxz
rcrb
cld
mov
or
cmp
pop
or
bound
xchg
int
mov
push
and
loop
mov
call
and
imull
pop
push
or
insb
mov
inc
add
es
call
adc
adc
add
adc
inc
pop
cmc
xchg
jmp
and
cs
dec
sub
in
adc
xchg
testb
mov
jp
insb
addb
lcall
add
sbb
addb
pop
icebp
jle
xchg
scas
cwtl
ret
push
test
inc
add
mov
scas
std
mov
gs
add
cld
push
inc
add
pop
add
popa
mov
xor
cpuid
xchg
shrl
pcmpgtb
or
sbb
push
mov
inc
jl
enter
push
push
scas
dec
sar
jge
jg
rorl
push
lcall
push
add
arpl
jae
mov
jp
pop
aaa
js
lds
test
mov
imulb
lock
push
xor
leave
or
mov
daa
fistps
add
scas
mov
add
imul
adc
xor
add
inc
push
shlb
sbb
jae
das
dec
pop
sti
jbe
dec
push
aas
les
add
movb
and
loop
aaa
push
or
and
cmp
ja
insb
imul
sub
sub
jo
aad
sbbl
int3
out
lret
cmpsb
stos
push
rolb
shr
or
jne
and
sbb
add
shl
xchg
xchg
dec
and
data16
icebp
add
shr
movsb
dec
push
add
jo
add
test
int3
mov
inc
push
and
mov
fs
loope
das
mov
mov
xchg
jmp
enter
mov
add
add
jl
cld
lret
adc
fists
mov
cld
pop
inc
add
adc
xor
int
jbe
jne
fsubrs
push
test
or
or
xchg
push
popa
repz
mov
fildll
push
lcall
sbb
mov
test
sbb
lods
pusha
add
lds
mov
sub
orps
jmp
sbb
pop
imul
data16
dec
inc
add
fdivl
jo
pop
dec
xchg
mov
push
dec
iret
pusha
add
int
stc
pop
sub
rolb
out
in
out
inc
add
hlt
movb
int3
jo
jecxz
fs
ljmp
les
call
scas
shlb
add
dec
mov
out
xor
test
cmp
adc
mov
push
pop
xor
add
add
add
scas
test
add
std
pop
sub
cvtps2pd
mov
ljmp
movb
das
jb
xchg
xor
sub
add
add
js
mov
fnstsw
jnp
add
inc
or
jecxz
dec
or
pop
js
mov
cmp
outsb
fnsave
leave
mov
xchg
test
or
testb
cltd
addb
popa
inc
xchg
adc
sbb
gs
push
add
cmp
cmpsl
mov
sahf
mov
pop
lods
test
xlat
iret
sahf
fstpt
stos
xchg
lahf
loopne
addb
mov
in
cld
add
inc
add
cmc
pop
adc
jmp
fildl
cwtl
inc
add
dec
xchg
leave
jge
fnstenv
xchg
mov
cmp
movsb
sub
js
testl
pushf
mov
and
outsl
push
mov
cmpsb
adc
and
xchg
mov
jns
push
lcall
enter
cmp
movsl
add
arpl
jp
xor
pusha
add
xchg
mov
mov
lea
xchg
addb
push
add
add
add
lods
and
pushf
dec
movb
sub
and
jb
pop
ja
add
dec
xchg
xlat
sbb
adc
stos
sbb
fdivrl
dec
insb
adc
jno
add
ja
sbb
xchg
rolb
aam
aam
leave
mov
mov
cmp
andl
mov
lock
pop
mov
add
push
popa
jmp
inc
add
clc
movb
mov
jns
jbe
and
pop
xchg
dec
lcall
jmp
add
mov
xor
push
add
test
pop
or
fcomp
icebp
popf
mov
mov
xor
cltd
aaa
sbb
icebp
mov
add
and
xchg
pop
inc
mov
js
cld
jecxz
push
out
cmpsb
mov
ljmp
push
push
adc
and
add
out
add
sbb
scas
jb
movsl
pop
call
in
adc
shlb
pop
push
dec
or
add
xorl
arpl
jl
add
out
in
adc
cmp
jge
mov
cmp
add
sub
sbb
pop
cmp
inc
add
sbb
int
stos
dec
sbb
jmp
add
add
xchg
pop
inc
add
pusha
add
pop
pop
cltd
inc
xchg
leave
frstor
jnp
imul
fwait
mov
dec
cs
test
cmp
mov
jg
imul
fsubr
inc
pop
incb
lgs
push
ljmp
add
pusha
add
pushf
movsl
sub
jb
popf
lods
jnp
in
jno,pt
aas
xchg
ds
jle
jmp
fadds
mov
push
add
add
pop
mov
int
fldl
add
xchg
pusha
add
xor
fidivl
push
mov
hlt
rol
add
jg
jnp
mov
in
pop
out
ds
enter
hlt
xor
dec
cmp
test
or
adc
stos
mov
fidivs
add
add
add
push
dec
cmp
ds
mov
mov
push
mov
add
sub
add
jmp
and
jl
rorl
cmp
arpl
sub
adc
out
and
jmp
mov
scas
sahf
je
xor
jb,pt
sub
or
loope
xchg
add
push
je
push
mov
rolb
jo
mov
cmp
clc
push
adc
add
mov
stos
cwtl
pop
cmp
mov
daa
sti
and
add
sbb
aas
jmp
fs
testb
mov
and
xchg
sbb
xchg
int
mov
inc
add
add
xchg
adc
pop
cltd
push
and
rorl
rorl
addr16
mov
cld
mov
xlat
sti
addr16
subps
cmp
and
add
dec
pushf
ja
add
std
cmp
push
js
sub
add
pop
out
js
test
aaa
cmp
shl
fildll
adc
sti
das
lahf
in
outsl
add
inc
pop
xor
aam
xlat
repnz
lcall
add
out
adc
add
mov
xor
push
mov
enter
fisubrs
in
cs
xor
add
hlt
jbe
aad
rclb
inc
jmp
or
cmp
adc
bound
cli
sub
add
dec
jns
mov
jo
push
xchg
push
dec
pop
fs
fistpll
jbe
addb
lret
xor
in
add
aas
jb
or
and
call
leave
xor
pop
sbb
bsf
add
cmpsb
jge
je
out
mov
das
inc
push
push
sub
pop
xlat
inc
ds
dec
out
in
push
popf
lock
inc
add
push
divl
repz
cli
mov
inc
add
add
add
jmp
mov
mov
dec
add
pop
fucomip
mov
loop
mov
jbe
orl
hlt
inc
inc
add
rcrl
pop
in
lods
or
mov
nop
enter
and
add
stos
ret
into
int
out
adc
loope
sbb
mov
int3
adc
pusha
add
sbb
sysexit
xchg
xchg
lds
cmp
sbb
movsb
adc
push
icebp
lods
sahf
inc
add
add
subl
pop
or
or
mov
push
loope
mov
add
popf
mov
inc
scas
pop
stos
mov
and
xchg
mov
add
loope
cs
out
sub
pop
stc
xchg
lea
dec
stos
fimull
xchg
inc
add
addb
inc
add
notl
cmp
iret
ds
xchg
inc
add
outsb
mov
fldcw
add
add
orl
add
jg
ret
pusha
add
sbb
or
jns
mov
dec
rcrb
or
pop
in
jbe
inc
movb
push
push
mov
mov
jp
add
dec
lret
les
stos
mov
xor
popf
addb
cmp
and
fimull
xor
or
icebp
mul
out
rcrl
insl
aas
je
xchg
hlt
add
pop
sbb
in
pop
push
pusha
add
incl
jp
jg
out
movsl
cmp
test
notb
push
inc
add
daa
mov
arpl
mov
imul
push
cld
int
xor
divb
into
shrl
dec
mov
out
dec
pop
xchg
lds
add
and
lcall
add
fmuls
in
hlt
jb
jge
enter
inc
inc
rorl
jl
subl
gs
sub
aaa
aas
add
outsb
inc
add
add
pop
fnstsw
into
dec
mov
mov
adc
ss
out
jle
pop
xchg
loop
movsb
pushf
jno
out
mov
add
sbb
sbb
sub
cs
mov
pop
icebp
loop
xchg
mov
arpl
loop
sbb
mov
cmp
add
jecxz
cvtdq2ps
pushf
repnz
outsb
inc
jne
jle
jp
sbb
add
outsl
ds
cld
test
mov
inc
add
and
push
jne
sti
mov
stos
cmp
sbb
add
test
mov
xorl
xor
andl
ret
dec
mov
add
fs
mov
stc
jl
cltd
ret
cmp
dec
stos
pop
add
cmc
cmp
out
std
movsl
cmp
xor
mov
xchg
cwtl
push
cmp
pop
cmp
xchg
jle
out
jle
dec
jge
scas
fiaddl
cmpsb
pushl
stc
leave
dec
cmp
xchg
lock
mov
jmp
dec
repz
and
mov
insb
jge
mov
inc
add
test
shl
dec
push
dec
jle
nop
in
add
add
dec
mov
ja
leave
mov
inc
add
pop
sbb
flds
daa
pop
jmp
insl
mov
lock
adc
out
test
add
mov
mov
jl
iret
int
push
dec
mov
adc
gs
movb
loopne
rolb
fcmovnbe
ja
inc
pop
or
xchg
push
lcall
loope
int3
jno
sbb
inc
add
push
fistpl
sbb
add
cmpsl
nop
xor
add
ficoml
fidivs
or
divl
aas
jnp
fidivrl
and
in
mov
addb
push
iret
fisubrs
dec
and
mov
ret
fld1
push
or
or
add
test
mov
mov
add
adc
jbe
add
rcrl
xchg
ss
fiadds
in
scas
pop
xor
xchg
das
xchg
cmp
jbe
push
ret
cmp
fisubs
sbb
sub
pop
inc
jne
daa
leave
in
adc
or
add
jmp
push
hlt
lcall
in
dec
in
andl
mov
out
fcmovb
mov
and
xor
add
test
pop
cltd
mov
test
lcall
out
mulb
pop
shl
cltd
out
in
int
jmp
adc
dec
jp
lock
add
mov
lea
shrb
leave
add
mov
out
jno
loope
mov
add
cmp
iret
pop
adc
adc
test
mov
cmc
int3
pushf
and
sbb
mov
out
add
or
mov
push
add
adc
jmp
jae
out
scas
icebp
bound
inc
add
ds
repz
mov
jnp
jl
mov
and
add
addb
mov
mov
pop
lcall
addb
shll
out
addl
arpl
push
jecxz
dec
dec
cmp
scas
hlt
or
inc
add
ljmp
addb
cwtl
cmp
bnd
jge
lods
mov
mov
or
and
mov
pop
xor
add
pop
addb
jns
jp
cmp
aam
ss
mov
out
pop
xor
mov
outsl
mov
repz
pop
sti
cmpsb
iret
in
aas
mov
movq
fdivs
cmp
fs
aaa
les
mov
sbb
push
orl
out
mov
mov
arpl
mov
xor
add
mov
xor
jno
test
fs
movlhps
mov
jo
pop
lcall
push
xor
sbb
xor
add
insb
lret
popa
push
addb
out
pop
int3
jno
mov
iret
out
enter
push
lret
loopne
pop
scas
adc
push
dec
repnz
aaa
aad
aaa
jne
stos
jecxz
push
fistpll
test
sbb
push
inc
add
fimuls
cmp
pop
xorl
pop
shlb
add
sahf
ss
mov
and
xchg
adcl
int3
cmpsb
or
add
pop
faddp
add
icebp
sahf
jl
pushf
mov
and
add
cmp
add
xchg
xor
jb
negb
leave
add
fbstp
lods
dec
and
jno
or
and
add
push
in
add
fimuls
add
cmpsl
xchg
enter
stos
roll
rolb
cmpsb
lea
push
ss
sbb
outsl
push
popf
ret
dec
pop
in
ficoml
outsl
pop
cmova
nop
xchg
jns
loope
xor
xchg
roll
loop
sub
sub
bound
xchg
xor
add
test
loopne
or
gs
inc
add
xchg
mov
cmpsl
add
sbb
mov
push
lret
or
add
adc
and
xlat
sbb
bound
mov
test
mov
lcall
mov
mov
aam
jns
or
movsb
shl
aam
dec
dec
xor
out
adc
clc
xor
xchg
fldenv
int
into
mov
outsl
jne
pushf
xchg
in
out
inc
mov
xchg
jns
or
test
loope
or
mov
add
or
dec
addb
xor
sti
daa
mov
dec
insb
adc
jnp
add
pop
adc
iret
pop
push
add
add
xchg
dec
mov
mov
push
ja
push
pop
adc
insl
popl
push
cmp
fists
das
out
sub
addb
pop
dec
test
xchg
mov
xchg
clc
addr16
iret
lret
mov
hlt
jl
dec
mov
cmp
push
fisttps
add
sub
cld
sbb
pop
rep
sub
mov
pop
sub
cmp
js
add
dec
lahf
adc
addb
fisubl
sbb
pop
add
mov
ja
sub
sbb
push
xor
gs
adc
test
push
pop
ljmp
and
fst
jl
in
adcl
rolb
sbb
fs
repz
jecxz
dec
mov
test
ret
leave
out
sub
add
xor
mov
mov
mov
lret
pop
push
xor
lret
push
xchg
cwtl
and
cwtl
js
add
enter
cwtl
das
cmc
cwtl
clc
mov
loop
push
add
arpl
je
push
add
fisttps
pop
push
mov
jb
add
xor
sub
add
jg
mov
add
cs
out
pusha
add
std
push
mov
add
arpl
punpckhbw
outsl
pushf
jno
or
add
fcompl
fisttpl
cmp
jne
sbb
mov
xor
dec
es
fcomps
add
in
inc
add
or
in
add
addb
pmaxsw
add
jp
rol
add
ja
adc
loope
jecxz
cmp
adc
addb
aam
movb
jb
fnstcw
repnz
inc
ds
xchg
push
idivl
and
gs
aad
mov
and
add
aaa
sahf
jge
lcall
cmp
rolb
and
sub
add
jp
fistpl
cmpsl
ret
imul
mov
pop
icebp
push
lcall
sbb
or
pop
adc
mov
add
cmp
add
sti
cmpsl
imul
addb
mov
jno
jg
ljmp
add
pop
pop
pop
shlb
xchg
loopne
mov
or
into
xchg
xor
daa
lock
mov
jne
xchg
and
imul
and
inc
push
jbe
ds
dec
mov
add
fsubl
nop
xchg
inc
pop
shlb
jne
jp
add
outsb
enter
fmull
daa
stos
mov
out
inc
add
loop
cmp
je
push
cs
int
or
xchg
test
dec
and
popa
out
push
rolb
push
mov
add
push
fimuls
add
aad
xor
xchg
arpl
cmp
mov
lret
repz
in
adc
dec
in
add
and
mov
mov
adc
fnstsw
inc
add
es
xor
fs
movsb
cmp
and
jb
inc
add
cmp
ror
xchg
les
fwait
scas
aas
leave
mov
sti
xchg
ficoml
aad
push
or
bound
imul
insb
stos
push
aam
gs
sbb
int
in
dec
cld
dec
mov
repnz
dec
mov
lods
push
sub
and
test
les
jno
ss
jge
dec
xor
inc
das
dec
int3
dec
mov
xor
jle
into
xchg
mov
cld
cs
fistps
and
pop
mov
mov
add
adc
adc
nop
xor
ret
imul
jae
sbb
pop
cli
into
sub
mov
cltd
rolb
ret
sarl
scas
daa
cltd
dec
adc
cwtl
push
lods
cs
add
and
add
out
testb
jecxz
rcr
movsl
xchg
xlat
daa
mov
mov
pop
pop
pop
ljmp
bound
adc
and
in
xchg
dec
jp
in
lock
sbb
mull
pop
dec
or
popf
loopne
shll
jnp
sti
leave
shll
pop
mov
aaa
movsl
es
shll
pop
cwtl
flds
leave
addb
insl
dec
aam
dec
fmulp
insl
add
ja
cwtl
jno
sub
int3
cmpsb
gs
loop
push
add
in
push
dec
mov
sbb
or
xor
or
imul
ljmp
aad
or
les
xchg
pop
lret
cmc
jle
xchg
xchg
cmp
sub
dec
xchg
push
add
imul
push
add
lods
insb
add
fwait
jp
daa
aaa
stos
cmp
sbb
mov
fistpll
ret
adc
out
mov
or
push
hlt
mov
mov
pop
push
push
sub
add
xor
mov
sbb
xchg
movb
cmp
idiv
cmc
ljmp
add
add
sbb
and
dec
imul
iret
push
add
mov
mov
nop
cmp
adc
ljmp
sub
dec
jp
aam
mov
jl
scas
mov
jo
add
imul
add
push
mov
mov
xor
in
into
mov
cmp
sbb
aaa
hlt
ficompl
jnp
sbb
int3
jle
add
dec
bound
or
sub
fildll
sbb
test
pusha
add
dec
mov
pushf
sub
jno
rcrl
mov
ja
sub
add
cmc
je
sub
push
fists
fwait
fwait
sub
push
xor
mov
hlt
sahf
or
test
pop
mov
jl
cwtd
movsl
arpl
mov
pop
sbb
loop
lret
movsl
icebp
dec
adc
push
push
das
js
xor
into
pop
cmpsb
jp
subl
push
add
in
add
and
jae
andl
insl
js
xchg
jne
fwait
cmpsl
mov
insl
push
lock
out
jge
pop
and
inc
popf
and
sub
outsl
notb
dec
add
loop
pop
xchg
das
add
stc
sahf
mov
cmp
mov
sti
mov
insl
xor
pop
sbb
ficomps
and
stc
idiv
leave
sarl
lret
mov
pop
or
fincstp
addb
xchg
jb
add
rolb
fnstsw
add
mov
out
cmpxchg
or
dec
or
mov
xorl
mov
sub
jmp
add
jl
lods
sbb
std
stos
pop
icebp
and
mov
test
ret
call
push
cmp
sbb
lret
cs
jg
iret
mov
add
int
add
sbb
cmpsl
mov
xor
mov
and
ret
mov
add
cmp
ret
and
add
xchg
sbb
dec
mov
cld
xchg
mov
rdpmc
pop
addb
jae
sub
pop
fidivrs
add
mov
xchg
pop
arpl
dec
mov
stc
pavgb
mov
daa
rolb
sbb
jmp
jns
lea
adc
push
mov
add
cltd
int
aam
dec
in
jnp
imul
inc
add
into
lods
pop
repz
js,pt
out
or
fsubl
cli
mov
out
enter
add
mov
lock
mov
ret
mov
push
fidivrl
dec
aad
les
pop
out
jmp
mov
mov
incl
add
mov
mov
jbe
inc
add
pop
cmp
lods
pop
les
sbb
add
and
add
stos
sar
jb
mov
push
push
sarl
and
mov
stos
test
jno
ljmp
push
push
sbb
js
mov
mov
dec
adc
fwait
inc
repnz
cmp
addb
cmpsl
into
lcall
cmpsb
out
and
jmp
mov
adc
cmp
xchg
and
and
js
das
je
mov
add
movb
sub
loope
add
xchg
push
lods
insb
in
xchg
pusha
add
add
dec
cmp
mov
sub
push
imul
and
dec
aad
repz
and
test
clc
ljmp
dec
aad
ret
daa
xchg
shr
cli
dec
xor
xlat
cmp
xchg
repz
mov
pop
pop
and
add
adc
inc
movsb
xor
sti
xchg
jns
popf
das
cld
testb
mov
mov
test
and
in
jl
xorl
lods
pushl
and
sub
or
mov
subl
iret
out
jl
or
jg
int3
inc
add
sub
pop
testl
int3
int
movsb
in
mov
cs
jg
mov
xor
xor
movsb
movb
adc
xlat
dec
sbb
add
or
scas
fsubs
mov
aas
mov
push
mov
push
inc
out
fidivrl
push
xchg
inc
add
sub
sbb
push
inc
add
lcall
pop
ljmp
ljmp
fsts
movsl
adc
add
or
lds
pusha
add
mov
rolb
data16
or
into
addr16
dec
jno
push
cmp
test
xor
push
ret
pop
test
lods
pop
movsb
stc
xchg
jae
add
cmp
mov
xchg
mov
jl
ret
arpl
shl
ficomps
icebp
xchg
fbstp
xchg
mov
out
push
xrelease
mov
int
popf
fimuls
test
fstpt
out
adc
fimull
mov
add
add
jnp
outsl
sub
leave
int3
mov
pop
out
out
aam
mov
cli
sbb
adc
inc
add
lea
daa
ljmp
add
jmp
popa
and
pushf
cmc
out
push
movsb
cmp
jns
dec
jno
je
popf
adc
stc
sub
sub
adc
out
jbe
cmp
jae
push
pop
mov
mov
sbb
dec
sub
loop
add
fwait
push
nop
ret
fnstsw
pop
in
dec
lods
add
jnp
test
add
in
repnz
data16
mov
pop
sub
insb
fists
in
aam
mov
mov
jecxz
add
aaa
jno
mov
add
mov
cmp
aam
int3
jmp
add
push
jno
dec
jmp
add
mov
das
inc
xor
popa
cmp
xchg
add
pop
ljmp
add
sub
pop
fimuls
pop
je
lods
or
adc
push
mov
imul
scas
pop
mov
adc
add
jl
jb
sbb
insl
inc
add
jb
jl
dec
es
shrb
sub
idivl
push
xor
jmp
aas
xchg
sbb
add
pop
and
jo
lcall
add
pusha
add
fcoml
xor
add
mov
mov
lods
stos
and
push
ljmp
in
out
dec
dec
aas
sbb
and
arpl
daa
pushf
inc
cmp
std
push
lods
scas
mov
loope
sbb
test
int
xchg
rolb
pop
orl
mov
or
addr16
jle
mov
sbb
sarb
mov
movsl
fadds
push
push
mov
add
push
add
stos
push
notb
and
jmp
jo
mov
outsb
je
add
ss
add
pop
jb
or
xor
add
test
push
dec
dec
rolb
std
sub
cmp
cmc
dec
mov
and
loop
int3
std
push
add
push
mov
mov
xchg
or
push
add
mov
jno
add
dec
mov
mov
mov
dec
add
inc
daa
loope
and
adc
lcall
pop
mov
ljmp
std
mov
cmc
jno
stc
push
test
cmp
or
leave
inc
pop
cmp
aad
inc
nop
gs
pushf
test
push
movsb
out
arpl
stos
sub
mov
repz
into
subl
inc
add
mov
outsb
ss
push
mov
fmuls
stos
cmp
add
add
and
push
or
dec
and
jno
out
imul
mov
mov
mov
es
mov
ss
dec
jne
mov
sar
pop
push
add
add
jge
add
xor
xchg
movb
mov
adc
repnz
add
or
int
lret
ss
xchg
fadds
adc
mov
xchg
add
lcall
rcrb
stos
fcoml
mov
dec
int
jecxz
add
xor
fcomps
mov
mov
mov
sub
inc
add
bound
cmp
sub
addb
mov
lret
add
lea
data16
jbe
push
sub
notl
mov
lock
in
es
xchg
lds
or
pop
jne
pop
cmp
aas
xchg
xor
jne
mov
stos
pop
jno
add
aam
add
daa
xor
hlt
add
jns
or
fcoms
scas
inc
sub
mov
in
mov
add
xor
aam
out
in
negb
lcall
cltd
je
imul
in
inc
add
xchg
add
add
adc
fisubs
cmp
pop
movb
mov
rcll
and
add
cmpsl
jg
fiadds
test
lods
push
mov
ljmp
in
mov
jne
in
cmp
sub
adc
pop
and
lods
sbb
aad
pop
repz
add
add
sub
int
cltd
mov
pop
xchg
dec
outsb
int
shrb
sub
out
jae
add
sbb
add
xchg
add
pop
sbbl
xchg
mov
dec
jne
stos
mov
mov
jbe
pop
hlt
cmpsl
adc
xor
add
push
pusha
add
int
add
test
fldl
add
cmpsb
mov
and
add
aad
imul
out
fs
xchg
movsl
add
cmpsl
or
inc
add
mov
outsb
aam
add
shlb
fstp
add
xchg
call
inc
add
add
add
pop
fldcw
jmp
insl
push
xor
cmp
mov
stos
inc
shlb
scas
jo
out
add
leave
cld
ljmp
xchg
clc
xor
fildl
fimuls
pushf
repnz
call
mov
call
aam
add
mov
faddl
pop
push
sbb
clc
xchg
rcll
inc
add
xchg
or
out
lcall
out
cltd
test
add
jp
sbb
cld
fadd
out
test
in
gs
mov
in
es
add
fistps
mov
rolb
xchg
mov
cmp
dec
mov
push
add
into
jge
addr16
popl
push
out
cmp
xchg
sub
adc
xchg
lds
loop
sbb
sbbl
fwait
mov
sti
aam
test
aas
sbb
mov
addb
pop
sub
repz
push
or
add
push
ja
add
add
or
add
int
in
roll
push
bound
push
ret
sbb
cmp
icebp
push
add
ficoms
xchg
cmp
push
push
dec
inc
add
xor
stos
mov
push
push
pusha
add
add
cltd
jo
inc
add
sahf
dec
int
add
xchg
repnz
rcrl
dec
ret
sbb
mov
inc
add
cmp
jl
dec
in
lock
bound
xchg
lock
daa
mov
dec
dec
mov
mov
or
push
jo
add
xor
add
dec
daa
xchg
push
add
sbbl
dec
and
scas
add
pop
adc
push
push
sbb
xchg
out
mov
cmpsl
add
loopne
dec
xchg
test
rcl
jb
fdivr
mov
mov
cwtl
imul
pop
cld
or
adc
call
sahf
sbb
mov
out
xor
pushf
jl
dec
loope
jp
add
pushf
xchg
xchg
add
mov
jmp
inc
add
adc
dec
lods
dec
inc
add
push
or
arpl
adc
xor
lea
fs
sbb
mov
mov
pop
aam
neg
repz
sbb
ja
lret
fdivs
sub
sub
mov
repz
sub
out
or
jle
add
test
pop
jo
pop
pop
mov
add
add
adc
add
mov
cmp
stos
sub
and
mull
in
out
sub
add
or
fidivrl
divb
cs
push
ja
ja
les
test
xor
in
scas
dec
or
add
je
jbe
scas
bnd
jmp
fadds
add
aad
jnp
shlb
jb
add
push
and
lds
push
fistpll
addb
lds
inc
ds
lock
out
xchg
stc
loopne
adc
and
or
repnz
gs
outsb
cs
pop
and
paddsb
mov
jne
loope
fcompl
gs
out
mov
add
not
inc
add
adc
pop
cld
lock
mov
imul
ror
mov
ds
inc
add
js
popa
jns
push
jbe
in
push
mov
add
mov
xor
es
fcmovnu
pop
pop
mov
repnz
add
in
adc
into
and
sub
add
add
jecxz
mov
lds
std
lsl
and
mov
push
jp
data16
jb
jmp
cmpsb
orl
inc
dec
add
mov
shrb
mov
sbb
pop
sub
add
fdivs
dec
sub
sub
xor
dec
jle
mov
sub
adc
shl
nop
add
fimull
pop
mov
ud2
leave
or
imul
into
cwtl
pushf
inc
scas
insl
and
dec
stos
gs
test
inc
add
push
mov
add
push
add
jnp
push
fdiv
xchg
jnp
lea
adc
and
or
jg
push
js
dec
pop
mov
cmp
fidivrs
push
dec
movb
add
inc
add
repnz
or
test
and
xchg
sbb
and
rorl
out
sbb
hlt
or
add
pop
xchg
add
and
sahf
jbe
and
shlb
jl
imul
jne
dec
adc
roll
lock
decl
dec
lods
and
notb
int
rolb
addb
pushf
or
div
lea
les
sti
or
dec
out
inc
cmpsl
push
fisubs
outsb
jno
lcall
in
jae
xchg
pop
pop
ds
pop
stos
rolb
mov
add
inc
mov
cmp
xor
sbb
sub
fdivs
add
push
add
inc
adc
and
call
data16
add
xor
sarb
imul
int3
scas
xor
add
movb
add
inc
add
cli
pop
lret
pop
dec
push
add
sub
fcoms
jecxz
adc
es
adc
push
stos
hlt
loopne
inc
add
cmp
xchg
dec
sbb
add
lcall
cmpsl
mov
out
adcl
inc
mov
pop
ret
push
add
add
rolb
lahf
iret
arpl
adc
add
test
xchg
das
or
ret
aas
lcall
stos
jle
out
add
loop
add
mov
lret
mov
outsb
push
jae
lea
iret
push
cltd
pop
dec
mov
push
push
add
dec
cwtl
pop
bound
push
xchg
or
add
inc
pop
out
jp
pop
xlat
dec
mov
or
add
sub
add
add
sub
sti
xor
and
push
push
or
inc
add
mov
and
sbb
dec
aas
hlt
mov
pushf
adc
mov
add
adc
mov
jb
mov
add
dec
jl
insb
daa
sub
pop
test
add
adc
sub
movsl
sbb
sbb
pop
push
ret
ret
in
shll
cmp
dec
cmp
pushf
les
insb
lcall
out
in
je
ljmp
mov
mov
cmp
dec
lds
xor
je
mov
outsl
js
movsb
xchg
inc
mov
lahf
mov
inc
and
addr16
add
fdivl
jl
cld
fwait
bound
mov
push
and
push
add
add
mov
cmpsl
adc
adc
loope
and
outsb
dec
je
out
std
js
setge
fidivl
cld
cmp
gs
cmp
addb
xchg
rcll
in
cwtl
xor
pop
inc
in
in
mov
mov
push
cmp
cmp
ja
pop
pop
stc
in
aas
jmp
add
add
fcomps
call
sub
aaa
jb
jb
fwait
in
pop
xchg
ret
xor
out
mov
add
inc
add
inc
mov
lods
arpl
inc
add
hlt
into
dec
dec
imul
clc
dec
dec
test
call
mov
jl
insb
rcrb
cmp
sbb
push
xchg
cltd
dec
cmp
add
mov
ret
test
imul
fcmove
test
mov
addr16
loope
add
fisubs
mov
pop
jno
cmp
loope
inc
mov
xor
sbb
fsubs
jg
movb
fidivrl
adc
push
add
add
dec
push
lods
leave
ss
subl
loopne
outsl
sub
sbb
fmuls
xchg
into
and
leave
gs
add
outsl
lock
insb
mov
add
out
cld
or
xor
clc
mov
add
lahf
mov
xchg
add
xlat
gs
lock
sarl
and
bound
cwtl
mov
nop
test
adc
into
xchg
jmp
mov
cwtl
loop
xor
add
add
mov
adc
dec
pop
adc
into
add
loopne
clc
sbb
test
xor
inc
add
jns
add
cli
out
imul
imul
sahf
push
sbb
cmp
and
add
stos
or
int
jae
lret
ret
not
nop
ret
or
cmpsl
mov
mov
xor
sub
xchg
sahf
dec
lock
popa
loope
mov
mov
pop
cwtl
sub
inc
add
push
push
add
push
add
and
testb
add
rcrl
xor
add
sub
xor
mov
fcomip
js
mov
jns
adc
fimull
xchg
mov
fistl
sub
ror
scas
jo
xor
call
jo
add
push
mov
mov
cmp
add
or
or
add
jns
or
push
je
adc
loop
and
fdivrl
loop
loope
mov
add
mov
leave
out
outsl
rcll
cmc
mov
lock
and
fstpt
add
or
push
stos
mov
fstl
addb
mov
cli
pop
and
and
out
into
shrb
call
jbe
push
mov
inc
daa
mov
dec
push
fcompl
pop
jo,pt
rorl
cmpsb
xchg
movsl
out
movsl
adc
je
enter
or
add
popf
mov
fmul
cwtl
fisubs
add
mov
xchg
aas
adc
add
inc
add
scas
push
dec
repz
iret
jmp
xchg
icebp
stc
in
inc
add
pop
add
pop
mov
push
push
jl
or
jp
in
cmp
cmp
pop
sti
shr
xchg
or
lods
dec
push
pop
mov
shll
lcall
jo
add
or
mov
mov
xor
jp
xor
mov
out
jecxz
dec
leave
or
into
or
movl
das
or
sbb
dec
loopne
jmp
mov
cltd
ss
adc
ja
add
lahf
xor
add
cmp
add
cmovl
out
or
dec
dec
push
in
xchg
bound
out
aam
out
insb
xlat
lret
std
push
arpl
adc
adc
outsl
sub
jnp
in
pop
dec
sbb
fistps
or
mov
and
push
cld
mov
jnp
sbb
js
add
jle
jo
dec
and
gs
push
decb
push
jle
or
pop
inc
mov
sbb
xchg
adc
xchg
and
mov
ljmp
pop
loope
ret
ret
or
pop
lods
lfs
add
js
push
mov
add
add
mov
or
dec
test
adc
jns
jne
js
ss
dec
add
dec
in
enter
xchg
lahf
scas
xchg
in
inc
add
ret
andl
jp
pminub
mov
sbb
stos
gs
scas
mov
out
mov
outsb
popa
xchg
lea
add
shll
mov
mov
xor
jmp
fnstcw
lock
sbb
push
gs
aad
jnp
sub
xchg
fcomps
xchg
stos
loope
or
add
popf
rcrb
rcl
stos
jns
loop
mov
sbb
test
add
inc
aas
sub
out
xor
push
dec
aam
cmc
adc
dec
push
pop
cmpl
daa
jbe
mov
xchg
leave
mov
sbb
das
sub
xchg
scas
addb
inc
add
sub
sbb
fdivr
jmp
hlt
fwait
pop
dec
movl
mov
dec
jl
jae
push
mov
call
dec
sub
dec
data16
or
repnz
add
fcompl
push
jp
hlt
jg
push
xor
lock
inc
add
enter
cs
add
pusha
add
pusha
add
add
sbb
inc
icebp
push
stc
cli
jge
popf
test
mov
scas
add
int3
or
sarl
jno
aaa
out
iret
iret
sub
sub
add
loop
adcl
je
push
lahf
nop
and
pop
or
add
dec
decl
cmp
scas
push
push
push
mov
push
push
xchg
sbb
fbld
mov
add
pushf
add
ret
sbb
pop
sub
scas
out
pushf
outsl
scas
xchg
jmp
push
imul
jl
mov
enter
addb
push
push
adc
lret
xchg
and
shrl
lss
inc
add
ljmp
cs
rolb
test
lret
inc
add
dec
jnp
loope
scas
mov
lods
movsb
loope
add
xlat
addb
cmpsl
adc
movb
lock
jle
dec
xor
add
lahf
xor
lods
dec
adc
add
xlat
xchg
imul
xchg
scas
mov
lcall
stos
add
les
xchg
push
aaa
or
and
sbb
inc
add
daa
pop
xchg
jnp
add
addr16
leave
cmpsb
dec
and
pop
testl
loop
sbb
mov
sahf
jo
addr16
out
and
mov
data16
les
jns
add
cli
push
test
out
test
cwtl
out
jnp
addb
sbb
stos
pop
rolb
ss
sub
popf
bnd
mov
fidivrl
push
pop
stos
mov
mov
or
add
jns
iret
movb
dec
es
mov
sahf
les
in
push
inc
in
enter
insb
adc
jb
add
xchg
adc
mov
and
xchg
mov
dec
outsl
inc
xchg
dec
sub
gs
fiadds
add
out
add
mov
mul
rclb
xchg
enter
mov
or
rolb
mov
aad
add
jb
test
or
jp
out
sub
xor
mov
leave
sbb
sbb
jecxz
sbb
add
or
mov
add
scas
movb
mov
clc
jmp
scas
lea
outsb
cld
jmp
add
adc
jmp
fwait
pop
add
push
add
sbb
leave
mov
add
movsb
daa
mulb
mov
sahf
scas
mov
insb
mov
movb
adc
adc
inc
add
mov
std
mov
stos
loopne
ror
and
aad
icebp
xchg
dec
aaa
ficoms
aam
xor
push
lods
roll
iret
and
push
mov
arpl
dec
leave
sti
push
test
jecxz
testl
notb
add
aad
inc
add
aaa
inc
add
xchg
daa
fists
add
mov
dec
popa
push
hlt
mov
push
movsl
pop
dec
push
movsl
frstor
scas
ds
aas
xchg
cli
jge
inc
es
adc
mov
sub
lods
push
add
cwtl
bound
je
ror
enter
ljmp
lods
std
icebp
out
inc
lret
mov
mov
inc
daa
sub
aad
add
add
incb
ret
xor
cwtl
push
xchg
mov
imul
add
aaa
aam
add
xchg
push
leave
sub
jo
scas
out
mov
loope
mov
jmp
dec
dec
adc
add
fs
mov
mov
sbb
mov
sub
repz
adc
repnz
xchg
mov
cmp
or
add
in
lcall
adc
adc
test
mov
jecxz
pop
ljmp
xor
test
xchg
inc
add
sbb
ljmp
add
mov
push
add
shll
push
cmp
pop
sub
pop
pop
mov
cmp
enter
subps
adc
stc
in
lock
pop
lods
out
dec
jecxz
in
and
aad
aas
in
pop
enter
push
int3
loop
pop
icebp
rolb
mov
les
mov
mov
add
rorl
xor
je
out
mov
stos
fstp
insb
lcall
mov
sbb
xchg
push
and
adc
lret
into
jb
jb
lahf
imul
add
xchg
jbe
lret
xor
pop
and
push
cmp
add
push
sahf
lahf
aam
xorl
xchg
sub
push
aas
lcall
leave
sub
movsb
cmp
xlat
mov
mov
add
inc
in
xor
test
leave
addr16
sbb
or
cmp
ja
push
push
lock
adc
inc
leave
dec
cmp
pop
fnstenv
xor
add
mov
ret
and
cmpsl
pop
ja
int3
or
add
cmpl
push
popa
shll
add
les
dec
jne
add
dec
popa
scas
jae
pop
daa
or
add
add
into
pop
testb
mov
dec
sahf
mov
cmp
pop
mov
add
nop
push
ljmp
adcl
inc
add
lods
pop
lcall
inc
add
add
cld
mov
outsl
in
rdpmc
ret
cld
in
gs
sub
add
cmpsb
ds
push
int3
idiv
push
in
fistpl
pop
dec
jmp
mov
enterw
sbb
add
imul
push
add
sbb
lahf
and
scas
testb
lcall
add
daa
adc
sbb
ret
je
bound
ds
xchg
lock
pushl
add
fs
les
repnz
jp
jp
dec
and
lock
popa
scas
popf
addb
scas
mov
add
mov
add
shr
jecxz
and
xor
popf
sub
scas
fcompp
sbb
inc
jmp
test
adc
jae
jns
or
icebp
mov
es
scas
fisttpll
roll
dec
cmovbe
push
out
cmp
jmp
add
jno
adc
push
cs
sbb
and
lock
icebp
mov
out
fidivrs
add
pop
mov
icebp
mov
cmp
imul
pushf
aaa
fwait
push
add
xor
js
dec
jno
movsb
xchg
outsl
mov
out
imul
cmp
add
fists
and
cld
mov
ret
dec
shrl
inc
je
call
mov
lea
sbb
dec
xlat
stos
mov
in
cltd
jl
in
add
lods
repnz
cmp
jge
in
add
pop
lea
pushl
test
jno
xchg
cltd
mov
imul
pop
jl
dec
pop
adc
mov
cmp
lcall
lcall
or
mov
jno
clc
xor
or
into
into
jne
stos
inc
test
mov
dec
inc
add
fnstsw
outsl
aas
adcl
outsb
lods
into
imulb
clc
adc
into
xchg
adc
and
add
rol
add
sbb
add
dec
pusha
add
pop
js
leave
mov
cmp
jne
insb
or
bound
popf
inc
push
mov
cld
divl
outsb
jle
inc
add
push
add
mov
pop
cmp
xor
out
push
add
out
xor
mov
dec
and
rcrb
mov
movsb
rclb
pop
rolb
pop
pop
rolb
loope
out
addr16
bound
push
mov
add
dec
push
add
add
nop
xor
push
mov
out
add
je
jg
mov
inc
add
add
ret
mov
or
test
insb
stc
xor
pop
nop
std
dec
mov
ret
in
ret
std
jl
sub
mov
sbb
das
pop
jecxz
stos
inc
add
das
sahf
loop
fs
fidivrs
pop
xchg
pop
bound
rclb
faddp
add
in
xchg
jge
cmpsb
push
xchg
mov
ret
out
sub
sbb
mov
cwtl
push
push
push
and
xchg
push
inc
add
sbb
xchg
das
sub
jno
jb
push
inc
add
fidivl
sub
add
xchg
pushf
push
mov
dec
fisubrs
test
fstl
push
pop
xchg
add
bound
cli
das
push
repz
clc
sbb
sub
fistl
pop
add
dec
loope
pop
gs
inc
push
adc
aam
outsb
adc
sti
fwait
push
dec
stos
hlt
iret
test
mov
jecxz
add
lret
add
jl
loop
in
dec
movb
sub
add
xor
out
lret
or
push
dec
mov
cmp
pop
pop
push
pusha
add
push
pusha
add
push
adc
inc
fwait
addr16
jno
test
or
pop
xchg
cltd
aas
push
fwait
jmp
jns
aas
pop
fwait
call
add
or
sbb
lcall
clc
pop
xchg
cli
sbb
dec
jno
mov
fldenv
or
scas
fnstcw
jne
cltd
jb
bound
mov
dec
in
stos
shlb
cmp
xchg
lods
push
adc
addl
shl
mov
pop
in
mov
out
pop
push
fwait
stc
iret
xchg
pushf
mov
mov
mov
add
inc
pusha
add
adc
stc
stc
pop
movb
lods
pop
xchg
pop
loop
mulw
pop
inc
repz
nopl
lods
pop
jnp
hlt
cmp
pop
push
sub
enter
dec
cld
pop
bound
mov
iret
int3
loop
js
js
sarb
xchg
dec
jbe
jbe
xlat
sbb
daa
fs
roll
push
mov
not
push
arpl
fwait
inc
add
mov
jo
add
adc
sub
push
add
enter
add
sub
ja
jnp
rclb
loop
inc
add
mov
cmpsl
dec
sbb
xchg
jmp
popf
lret
ret
ret
mov
mov
add
sahf
pop
and
cmp
xchg
arpl
push
hlt
xchg
sbb
sbb
mov
cmp
notl
xor
cmp
out
scas
adc
data16
sti
sbb
fsin
xchg
inc
add
out
add
xor
and
add
in
out
jmp
mov
mov
in
xor
pop
arpl
sti
scas
ret
sbb
ds
add
pop
cmp
adc
movsl
icebp
or
add
adc
rolb
mov
aas
push
inc
add
pop
bnd
push
ljmp
leave
mov
fcoml
sbb
xor
xor
inc
or
mov
sahf
add
jg
outsl
out
or
jmp
push
cmp
cmp
out
fisubrs
insl
cld
stos
mov
add
pop
xor
test
lock
into
ja
xlat
mov
insl
push
push
rcl
mov
rol
add
int
lock
sbb
mov
inc
leave
jo
jbe
pop
lahf
cmpsl
jecxz
fnsave
sbb
out
loopne
enter
lods
cmp
sub
add
add
ret
adc
add
mov
loopne
jmp
out
negb
mov
in
cmp
icebp
add
movsb
ss
jg
aam
add
xchg
mov
mov
test
adc
outsl
jp
xchg
jmp
shlb
add
lret
mov
out
and
mov
add
in
push
adcl
xchg
add
jge
xor
push
cmc
aaa
or
pop
push
shrb
das
jg
jnp
addr16
add
push
jg
cld
iret
pop
mov
cmc
xor
sbb
mov
add
into
and
and
ret
daa
mov
fs
pusha
add
jl
jnp
repz
fiaddl
imul
push
fsubrs
mov
inc
add
push
fs
jae
add
sub
push
add
sub
adc
inc
add
xchg
cmp
cli
adc
cmp
push
mov
stos
pop
and
jle
xor
popf
mov
adc
mov
and
mov
pop
ds
xor
pop
daa
mov
add
pop
repnz
repnz
loopne
or
cmp
dec
leave
inc
add
sbb
ja
pop
push
jmp
jno
dec
mov
sub
xchg
xor
test
std
and
add
aas
pop
pop
daa
imull
mov
inc
add
mov
cmp
scas
and
and
addb
in
fists
and
int
cmpsl
add
dec
nop
lret
lds
loope
sbb
add
pop
adc
loopne
cmp
add
or
xor
pop
adc
mov
fidivl
push
js
cmp
pop
pop
mov
jbe
xchg
aam
add
dec
inc
add
xor
je
add
shl
pushf
or
mov
sahf
pop
inc
push
outsb
sbb
lock
xor
jmp
test
into
xor
pop
or
pop
cmpsb
pop
inc
add
pop
xchg
enter
add
sbb
mov
das
and
mov
nop
dec
mov
jbe
enter
xor
and
and
leave
xor
addb
addr16
in
int3
mov
rolb
mov
xchg
mov
xor
xchg
enter
daa
das
js
dec
add
push
addb
pop
sbb
mov
rolb
jb
mov
xchg
movsl
sub
aaa
add
je
jp
push
dec
data16
dec
fidivl
fadd
inc
add
sub
dec
lret
jb
ret
push
iret
cmp
daa
xchg
repnz
in
test
lcall
mov
dec
mov
pop
dec
les
pop
ret
ljmp
sbb
pop
mov
das
xor
mov
loopne
das
icebp
mov
je
xor
scas
imul
ficompl
adc
dec
fsts
js
sub
in
mov
inc
and
fdivp
mov
add
pop
repz
push
push
pop
aaa
add
mov
dec
imul
push
xchg
push
enter
inc
add
addb
insl
add
call
add
bound
mov
repz
aaa
imul
test
xchg
jl
add
divb
movb
cld
xchg
adc
out
int
out
push
push
pusha
add
add
inc
jl
push
mulb
mov
add
dec
mov
and
sarl
inc
lds
test
jo
or
nopl
pop
repz
cmpsl
iret
mov
fdivl
popa
cmp
adcl
iret
and
lahf
iret
or
xchg
mov
daa
sbb
add
mov
es
sub
lcall
cmpsb
xor
sub
pop
mov
and
xor
lods
addr16
lock
lahf
repnz
test
test
add
into
push
push
pop
xor
pop
fldenv
ret
ja
push
enter
adc
add
adc
pop
mov
dec
or
cs
into
pop
test
inc
lods
roll
sub
add
stc
mov
mov
push
add
add
aad
jns
or
mov
xor
out
test
movb
out
sub
pop
lcall
into
rorl
dec
jo
inc
add
and
adc
mov
cmp
mov
lahf
adc
sub
ljmp
arpl
test
fsts
jno
inc
add
ja
dec
jns
shl
sub
cmpsl
lock
sub
arpl
gs
pop
xchg
ret
cmpsb
sub
mov
int3
addb
lds
mov
ret
mov
bound
fsub
lret
fmuls
jnp
add
cmp
lods
xchg
into
and
mov
dec
insl
xchg
adc
xchg
mov
iret
inc
push
aam
aaa
push
adcl
lds
dec
pusha
add
sub
push
lods
lods
shll
or
stc
in
add
dec
inc
xor
cmpsb
sbb
shl
add
add
inc
cs
bound
dec
xchg
inc
aaa
test
mov
add
fisubrl
pop
jp
cmc
divb
pop
jne
sub
pop
lods
jp
inc
xchg
sub
jge
add
mov
sub
xor
cmp
loope
clc
xor
shl
mov
cmc
mov
lahf
jecxz
bound
mov
es
hlt
cmp
add
enter
jle
dec
adc
add
add
xchg
push
or
in
xchg
push
xchg
mov
jle
sbb
adc
fsubl
leave
or
aad
scas
stos
mov
es
or
popa
jl
jbe
cwtl
in
stc
mov
pusha
add
sub
jbe
hlt
lret
int
and
dec
ffree
add
movsl
clc
dec
jmp
daa
push
add
and
jle
out
and
adc
sub
push
mov
xchg
lods
mov
fsubrl
movb
test
adc
sbb
mov
push
dec
test
mov
and
iret
xchg
mov
call
sub
add
dec
jns
bound
aad
addb
add
add
jb
mov
xchg
dec
xlat
fsubr
fcomp
add
push
push
jne
ret
mov
ret
rcrb
lret
sub
sub
or
call
add
xor
xchg
test
out
adc
add
scas
rcl
mov
ret
adc
dec
push
out
or
adc
into
dec
insb
pop
rclb
test
aam
cmc
movsl
sbb
cltd
push
call
fmul
cmc
mov
sahf
xor
cmp
sub
mov
mov
mov
loope
lock
or
pop
add
shlb
jns
nop
or
mov
out
push
pushf
xchg
cltd
fidivl
push
and
or
mov
cmp
mov
mov
push
push
dec
push
int
sub
mov
in
jo
dec
repnz
or
ds
icebp
iret
fs
add
sahf
or
jecxz
out
inc
mov
int3
xor
jecxz
xchg
je
add
ss
mov
push
sub
mov
inc
add
sbb
and
cmovno
xor
das
cmp
ljmp
or
jb
movb
jp
adc
pop
gs
add
push
push
mov
lods
and
pop
push
xor
push
call
xlat
cmc
xchg
out
loope
jbe
popf
or
in
loop
enter
sbb
stos
inc
add
push
add
rol
loop
dec
filds
jo
int3
push
movsl
ljmp
add
mov
mov
cmp
xlat
test
ret
jo
sbbl
add
test
scas
aas
lret
sti
pop
lock
jbe
inc
or
cld
dec
mov
ljmp
inc
mov
inc
sub
or
ja
cmc
in
dec
fcmovnbe
jnp
inc
add
or
pushf
movsb
add
jbe
jns
jbe
bound
decb
aaa
mov
push
dec
mov
jb
add
dec
leave
dec
cmpsb
jecxz
enter
xor
mov
test
and
dec
inc
and
enter
mov
mov
mov
out
aaa
xchg
xor
or
pop
pop
iret
sti
out
jp
adc
cmpsb
mov
icebp
xor
sbb
mov
jb
je
test
mov
add
add
mov
out
jne
jnp
push
sbb
push
add
daa
shlb
in
sbb
mov
in
pushf
sahf
sbb
cmpsb
add
out
jbe
cld
mov
adc
push
xchg
fidivrs
mov
xor
inc
jp
sahf
lods
add
add
xor
add
ds
into
xchg
lret
sub
xchg
xor
adc
cmp
movaps
lret
ret
or
inc
jecxz
movb
sub
cmpsl
mov
stos
cs
jae
jl
ja
mov
negl
stc
add
cmpsl
lea
outsl
or
loopne
outsb
repnz
sub
out
or
and
lcall
int
jp
add
cmp
fimull
cmpsb
les
ret
push
add
sbb
push
adc
repnz
fwait
jecxz
sbb
adc
movaps
add
out
aam
add
add
insl
jns
and
add
dec
rolb
test
pop
jecxz
mov
cs
dec
je
in
outsb
test
xchg
jle
pop
outsb
sarl
push
pop
and
jmp
push
push
aam
push
sahf
mov
jg
addb
mov
add
dec
out
cs
inc
add
nop
cmp
cmpsb
push
ficoms
scas
scas
pusha
add
fabs
fsubrs
hlt
xor
push
insb
sahf
push
sbb
addr16
xchg
jg
rcrb
jmp
aas
cltd
mov
sbb
add
stos
pop
fnstenv
add
fbstp
les
lods
mov
ljmp
clc
ds
jb
lcall
add
movsl
stos
negl
stos
xor
inc
add
cmpsl
push
jb
aaa
stos
inc
fsubrl
jnp
test
lods
scas
in
xchg
sbb
add
jbe
cltd
aas
mov
add
aas
sbb
xlat
fidivl
outsb
loop
lods
ffreep
add
add
inc
push
mov
lods
push
cwtl
xor
outsl
sbb
jmp
add
mov
dec
jo
aam
xchg
jp
rorl
mov
les
js
add
pop
mov
mov
mov
loope
add
movsb
outsl
in
test
into
sarl
xchg
jne
dec
sbb
push
pop
fdivrl
pusha
add
dec
sub
add
inc
pop
cld
in
shlb
xor
dec
aaa
les
mov
cmc
pop
fsubs
add
or
sbb
or
add
into
aas
dec
fdivr
mov
cmp
lock
lahf
pop
stos
ljmp
sub
jb
xchg
hlt
in
test
les
std
mov
mov
lcall
stos
push
int3
mov
inc
add
sub
mov
imul
movsl
cltd
mov
lcall
pop
or
add
cmp
js
sub
rclb
cmp
dec
sahf
sbb
and
std
jo
movb
push
push
pop
dec
mov
mov
ja
add
mov
es
or
adc
in
sub
pop
daa
sub
int3
mov
push
pop
inc
add
push
pop
mov
or
add
xchg
ret
push
shll
lahf
sub
cli
int
xor
ret
mov
enter
or
stc
data16
xor
fwait
jmp
add
push
mov
roll
mov
ljmp
xchg
cmpsb
jo
cmp
xor
fsubrs
xchg
mov
mov
add
nop
icebp
movsl
into
aaa
dec
push
js
adc
add
cmpsb
pop
test
data16
add
dec
inc
add
mov
add
or
ret
sbb
loop
mov
push
xchg
xor
xchg
cmp
fnstsw
adc
and
enter
in
cmp
pop
jbe
push
fisttps
add
xlat
into
outsb
dec
jnp
rol
in
negl
xchg
push
mov
add
loopne
js
or
dec
loopne
add
stos
sub
call
add
add
sub
dec
loopne
rcrl
ja
dec
inc
add
cmp
jle
movsl
ficoml
add
int3
and
lods
lret
pop
out
cmp
outsl
imull
mov
sub
mov
mov
sub
add
xor
and
jmp
add
add
xor
add
sub
aas
push
aam
jno
das
les
ja
aaa
test
add
ss
jns
or
add
mov
loop
jne
pop
in
push
push
add
leave
fidivrl
dec
test
xchg
fwait
ljmp
or
data16
pop
cmp
pop
sub
mov
mov
mov
jmp
rcrl
adc
cld
ss
add
pop
cli
fistps
std
add
mov
sbb
cmp
ja
jp
je
andl
add
mov
xchg
in
xchg
test
or
in
jns
push
pop
dec
mov
xor
push
push
stos
jnp
loope
jae
movsb
std
sbb
jle
sahf
jns
sbb
dec
and
dec
sub
in
add
adc
mov
rep
push
jle
movsb
jae
cmpsl
in
pop
cltd
gs
mov
loopne
dec
movsl
ret
and
test
in
pop
push
addr16
inc
add
add
add
push
mov
fcoms
bound
mov
movb
add
fsubrs
dec
and
fbstp
in
cwtl
add
cmpsl
adc
add
cli
push
add
scas
out
push
adc
or
push
scas
and
lahf
xorl
and
mov
sti
bound
imul
push
fnsetpm(287
repz
dec
pop
xchg
pop
dec
shr
sbb
xchg
and
lret
cmp
test
cmp
inc
ss
mov
repz
sahf
push
push
test
or
outsb
xchg
cmpsl
cltd
addr16
stos
jbe
mov
mov
mov
rolb
in
fbstp
in
pop
add
mov
inc
add
xor
gs
loop
pop
flds
or
pop
jae
jecxz
out
pop
and
in
scas
inc
add
and
int3
xor
cmp
xor
add
jmp
sahf
mov
loopne
pop
outsl
dec
push
ret
nop
and
lods
sub
out
xor
push
pop
lret
jmp
clc
xchg
lds
scas
int3
pop
mov
int3
push
jno
inc
add
xchg
jge
add
xchg
popf
outsl
mov
pop
hlt
testl
add
add
mov
adc
pop
mov
hlt
adc
mov
mov
xor
loop
adc
and
fs
les
imul
outsb
lcall
and
sbb
sbb
add
adc
add
xchg
push
add
cmp
add
push
push
push
mov
adc
add
sub
test
jbe
mov
dec
xchg
out
or
aaa
pop
in
mov
inc
adc
mov
xor
or
js
data16
xchg
aam
add
add
mov
mov
pop
mov
imul
dec
dec
lds
aam
pop
icebp
loopne
out
shrl
dec
jne
pop
pop
lret
shlb
lods
add
mov
fldl
mov
pop
xchg
cs
adc
pcmpeqw
sarl
add
mov
cmp
movb
hlt
inc
mov
pusha
add
add
clc
imull
add
push
lret
pop
popf
ja
adc
add
inc
add
xchg
movb
gs
int3
in
push
bound
fildll
cld
enter
faddl
ja
add
movsl
add
inc
loopne
mov
dec
mov
adc
mov
movups
test
fcomip
and
jne
pop
and
push
xor
sbb
fwait
dec
clc
pop
xchg
inc
adc
in
je
adc
pop
icebp
insl
lret
imul
adc
pop
cmpsb
icebp
sub
jle
inc
sub
addb
mov
xor
rcpps
add
les
bound
xchg
adc
mov
push
cmc
fwait
scas
ss
pop
dec
cmp
gs
je
mov
mov
dec
or
jb
adc
sub
jge
adc
add
add
fsubrs
in
aad
jnp
bound
rcrb
popa
mov
mov
cmp
les
cmpsb
cmc
or
sub
add
and
iret
addb
pop
pushl
bound
ror
fstp
mov
and
jp
dec
mov
adc
stc
jbe
jle
add
jmp
dec
jge
inc
add
inc
jp
jo
adc
push
sti
popf
inc
call
test
movb
xchg
popf
xlat
adc
in
add
mov
mov
repz
in
ficomps
sbb
and
add
loop
xchg
jnp
bswap
adc
and
mov
fs
xchg
dec
repnz
add
sbb
sub
xchg
mov
mov
add
loop
add
mov
ret
popa
pop
js
lea
xor
and
ja
adc
or
pop
inc
sbb
sub
sbb
jp
outsl
pop
mov
loop
cmp
xchg
sti
loop
fistps
ds
mov
scas
add
push
mov
dec
adc
sub
cld
add
add
mov
scas
popf
out
adc
pop
jne
jmp
fnstcw
mov
dec
jns
mov
rolb
add
pop
test
add
xor
rcrb
adc
add
pop
dec
dec
add
jno
push
mov
aam
in
jge
add
ja
ss
popf
jbe
sahf
xor
inc
add
and
jg
inc
mov
mov
push
add
add
sub
jmp
imul
push
lret
cmp
add
call
enter
test
cmp
bound
pop
mov
push
push
fs
xchg
fwait
sbb
pop
jns
jne
xor
das
icebp
and
add
push
push
add
add
repnz
adc
mov
data16
scas
test
mov
add
xchg
mov
dec
arpl
ljmp
sub
add
scas
push
ret
add
les
sbb
xor
sbb
add
mov
fists
fbld
lods
imul
fidivrl
adc
lods
sub
aam
mov
sub
bound
pop
aaa
lret
lds
loope
dec
xor
mov
mov
enter
loope
lret
adc
add
stc
xchg
cwtl
in
jne
jg
lods
jbe
pop
sub
jl
inc
add
cmp
add
cmp
mov
addr16
xor
test
mov
jns
bound
in
xchg
in
fnsave
add
les
ss
pop
pop
fsub
test
add
scas
or
mov
pop
jno
pusha
add
cli
sbb
pop
fxch
out
sub
mov
pop
pop
push
mov
and
and
inc
add
or
test
push
jle
rolb
xor
adc
repz
or
add
add
mov
sub
pop
negb
cmpl
xchg
mov
sub
shlb
add
notl
leave
cs
mov
mov
lret
cmp
gs
ljmp
inc
or
mov
lahf
sub
add
add
inc
pop
sbbl
pop
scas
mov
das
ss
dec
push
loop
outsl
shr
les
jo
sub
inc
add
test
push
leave
sub
mov
rep
jb
add
cmp
or
xchg
cmpsl
push
mov
inc
jmp
leave
and
addb
or
ret
and
std
fs
sahf
push
add
sub
nopl
stc
mov
js
add
inc
add
add
jl
mov
and
scas
xchg
fs
jne
pop
ss
or
inc
add
cmc
in
sbb
add
mov
jae
pop
mov
push
insb
mov
and
leave
cmp
loop
cmpsl
mov
sub
cmpsb
shll
push
mov
repnz
sbb
and
and
sub
xchg
dec
push
adcl
push
mov
test
mov
and
out
adc
dec
insb
and
jmp
aaa
daa
cmp
jge
mov
jns
hlt
loop
add
sahf
pop
mov
cmp
add
mov
sub
xor
stc
mov
dec
cli
mov
sub
in
notl
fidivrs
imul
mov
cmp
stc
cmp
add
cmc
jno
add
sbb
jle
mov
xor
loope,pt
fwait
pop
fldenv
movsl
ds
mov
loop
push
add
xor
inc
push
negb
daa
div
subl
sub
ss
xchg
or
fimull
bound
cmpsb
fsubrl
jnp
add
pop
clc
inc
adc
call
or
xchg
call
sub
pop
in
lret
movb
xor
add
cmp
shll
cmpsb
jl
mov
in
pushf
mov
int3
ja
sbb
cmpsl
lock
int
stos
aas
mov
rcll
repnz
pop
push
xchg
xor
stc
nop
or
inc
add
xchg
cmpsl
cmp
out
sbb
push
movsb
sbb
cld
sub
lcall
add
and
fwait
add
pop
addb
jmp
enter
xchg
xchg
adc
arpl
out
adc
add
in
push
push
and
sbb
xchg
je
inc
add
mov
inc
loope
xchg
shrb
xor
xlat
fwait
out
push
mov
fs
idivl
and
sbb
lcall
adc
pop
xchg
ljmp
add
adc
mov
add
dec
imul
frstor
add
cs
jb
jno
inc
add
mov
push
jnp
push
push
popa
loopne
add
lcallw
push
add
pop
xchg
cmc
lret
cmp
sbb
add
push
mov
lret
cwtl
mov
cmp
xor
lret
in
inc
sbb
jmp
add
sbbl
pop
mov
rolb
sub
mov
test
add
lock
sbb
data16
xchg
jecxz
add
push
add
cmc
jp
repz
popf
mov
add
xchg
ljmp
lods
mov
fiaddl
mov
xchg
xor
add
xchg
mov
popf
dec
imul
add
xchg
sub
xchg
add
shlb
xchg
insb
lea
cmpsb
std
ret
aad
mov
insb
xchg
mov
xor
fwait
mov
mov
add
sbb
or
dec
testb
scas
ljmp
into
sbb
add
mov
into
std
inc
add
insb
xchg
or
dec
lods
bound
sbb
sub
insb
inc
jb
scas
adc
jns
pushf
cmpsl
int3
hlt
or
ss
aam
int3
and
in
test
call
push
ss
push
adc
insb
mov
mov
ljmp
sbb
xchg
lret
push
cmp
mov
stos
inc
add
push
test
adc
lahf
xchg
std
fistps
and
addr16
sahf
and
inc
dec
dec
cmpsb
scas
xor
fldenv
inc
add
cwtl
repz
mov
or
jns
rolb
xor
cmpsb
insl
aaa
jo
mov
call
pop
add
lret
cmp
sbb
leave
mov
shrb
ja
in
push
outsb
js
dec
ret
addr16
arpl
mov
in
dec
bound
jg
add
add
xchg
les
out
out
addb
or
lcall
movsb
aad
xor
mov
aas
in
das
arpl
jae
adc
add
adc
sub
in
out
imul
shr
mov
inc
sahf
icebp
mov
insl
mov
mov
fdivs
pushf
in
sub
or
add
push
push
add
mov
add
mov
xchg
testl
stos
popa
mov
bound
sarb
inc
add
pop
push
jns
stos
xchg
inc
leave
cs
add
lea
push
mov
in
or
add
adc
lret
mov
out
lahf
push
in
scas
jb
and
jne
mov
pusha
add
pop
and
out
rcr
dec
std
shr
inc
jecxz
gs
pusha
add
add
gs
mov
jns
jno
add
insl
lea
sub
addb
inc
add
mov
add
scas
fsubrl
inc
pop
pop
ficomps
xlat
bswap
lods
xor
jno
orl
add
addb
xor
dec
sbb
lock
pop
jbe
adc
jno
push
movb
and
sarb
sbb
jb
aam
cmp
movb
mov
daa
cmp
inc
add
cmp
jecxz
sbb
ret
xchg
cmp
mov
lock
sbb
aad
add
fidivs
fidivl
call
test
add
lret
inc
xchg
mov
imul
test
push
add
mov
cmp
int3
push
and
push
dec
aaa
jl
jb
addr16
cmc
sbb
jbe
jmp
mov
roll
clc
dec
aad
add
add
rclb
mov
dec
out
ja
out
inc
add
rcll
sub
imul
dec
adc
addr16
pop
sbb
loop
hlt
icebp
push
inc
add
addb
mov
dec
pop
xor
mov
sahf
decl
sbb
cmc
rcr
and
daa
cmpsb
mov
icebp
loope
cmpsl
inc
add
mov
mov
xor
je
stos
je
out
jl
ret
mov
scas
scas
sbb
cwtl
rclb
adc
push
cmc
or
add
add
sahf
fildl
adc
xchg
jecxz
mov
pop
test
scas
out
daa
dec
fs
fwait
stos
mov
je
movsl
cs
add
inc
cmpl
add
in
out
xor
mov
stos
lea
push
and
cmp
inc
add
test
sahf
sub
push
inc
add
mov
add
cmp
add
add
fwait
cmpsl
cmp
add
add
push
jg
imulb
mov
cltd
mov
xchg
and
or
mov
mov
push
push
lret
cmp
imul
out
popa
jp
mov
mov
cltd
pop
xchg
pop
cmc
je
mov
push
xlat
pop
stos
jno
loopne
and
mov
loop
imul
fisubrl
mov
and
xchg
mov
xor
cmp
addb
add
add
xor
sarb
dec
jb
ret
sbb
flds
out
push
into
xor
aad
push
jge
jne
xchg
cmp
xadd
cmpsb
rcrl
mov
cmp
cmc
addl
data16
xor
fwait
cmc
cli
mov
lret
jns
xor
bswap
xchg
out
add
sbb
push
mov
push
add
inc
add
ss
arpl
pop
ljmp
jle
add
and
pop
shr
adc
insl
shlb
mov
ja
mov
aaa
dec
pop
aam
add
fsubrl
jne
jmp
in
pop
fwait
in
in
add
push
or
out
mov
aaa
int3
inc
mov
addb
cmpl
xlat
cli
movsb
jmp
add
add
mov
mov
sub
mov
mov
sub
xchg
inc
jmp
icebp
scas
xchg
xchg
pop
adc
jge
xor
mov
mov
cld
mov
es
repnz
mov
mov
and
inc
add
xchg
adc
rcl
in
jle
or
add
or
xchg
jmp
xchg
push
or
add
leave
loope
cmp
addb
jae
add
jg
add
or
mov
sub
or
add
rorb
push
sub
dec
sub
mov
js
lret
add
jne
mov
stc
mov
push
icebp
or
adc
jb
testl
cmp
sub
add
pop
jnp
pop
or
dec
push
add
js
cmp
jg
xchg
add
add
add
adc
imul
xor
outsl
icebp
jmp
stc
cmpsb
ja
sub
ljmp
ljmp
pop
mov
cwtl
loopne
das
push
add
xchg
or
ret
cld
aam
inc
jno
je
mov
jp
push
into
xorl
add
jmp
mov
lcall
test
mov
push
ds
add
and
movsl
pop
call
gs
dec
sub
jp
pop
jbe
add
inc
add
push
mov
sbb
out
jae
shlb
cmpsb
int
jbe
add
add
add
sub
cmc
mov
js
mov
add
mov
jp
mov
test
jae
cmp
addr16
mov
in
movb
lret
mov
stc
jp
divl
addr16
test
jns
xchg
and
notb
rorb
cmp
jno
cmpsl
add
push
mov
push
add
mov
loopne
cli
cmpsb
fistps
jmp
push
fs
stos
xlat
aaa
cmp
icebp
aas
jbe
addb
mov
insl
sti
pop
mov
enter
push
nop
inc
push
dec
sbb
lds
imul
test
aad
cmp
inc
ret
js
addb
cmp
clc
or
mov
outsb
stos
xchg
mov
mov
mov
cmc
inc
in
and
inc
std
loopne
ja
stos
rolb
lods
sbb
aas
jnp
incl
or
ds
xchg
add
add
xchg
push
xchg
mov
sbb
or
fadd
add
xor
mov
add
stc
add
dec
outsb
jno
mov
rcll
aas
mov
or
pop
insb
sub
in
loope
inc
add
sets
add
push
add
mov
ja
mov
pusha
add
jno,pn
scas
mov
push
push
pop
test
pop
jg
adc
mov
add
arpl
mov
dec
cmp
jb
ja
dec
push
int3
loope
pop
sub
lcall
add
in
adc
add
movsb
fisttpll
and
sub
out
arpl
pop
pop
push
cmp
insl
xor
imul
orl
fildl
test
push
in
aaa
stc
fwait
jmp
rcll
sub
pop
sub
test
cmp
inc
mov
jecxz
and
aam
adc
loope
mov
add
shll
daa
clc
pushf
mov
cwtl
sarl
std
or
fld1
jns
cmp
mov
push
jge
pop
int3
push
fsubl
add
inc
add
stc
push
addr16
lret
jae
mov
mulb
mov
jg
sub
mov
les
lahf
fidivs
xchg
fdivl
xchg
repz
ds
cs
loop
cmp
add
cwtl
cli
push
imul
cmp
stos
js
lret
int
and
xchg
xchg
lea
adc
add
out
das
pop
xchg
repz
sbb
sub
sub
sbb
cld
mov
addr16
sub
enter
lcall
mov
lock
push
mov
adc
xchg
push
add
xchg
addr16
jns
in
addb
loop
mov
sub
mov
inc
add
pop
cmc
fdivrl
dec
insb
pop
push
jmp
add
sbb
jbe
xchg
sub
cmpsb
jl
repnz
mov
clc
and
mov
add
xor
xchg
scas
repnz
xor
push
inc
add
push
push
ret
addb
popa
xor
add
daa
out
enter
add
dec
out
xlat
jno
mov
xchg
mov
arpl
insb
fldcw
call
add
inc
add
push
jle
pop
addb
xchg
into
fldl2e
cs
add
mov
mov
loopne
add
in
xchg
sbb
pop
insb
sub
mov
std
add
ret
inc
push
push
inc
add
pop
data16
dec
ret
roll
adc
adc
pop
lods
push
xchg
xor
rcll
jne
lds
xchg
sbb
sarl
dec
jne
xchg
sahf
pushl
sbb
roll
jp
push
shlb
jnp
mov
pop
push
mov
mov
ds
jbe
dec
fisubl
gs
stos
jnp
scas
jp
push
or
xor
dec
setle
sti
lock
mov
mov
push
dec
cmp
ljmp
leave
mov
add
add
or
jl
xor
sbb
addb
add
push
out
jbe
imul
push
iret
dec
mov
pop
pop
lea
add
pop
sub
stos
xor
stos
xchg
sahf
adc
push
mov
sub
mov
jno
xchg
aam
mov
lahf
das
gs
jmp
sbb
jle
popf
out
movsl
jl
pop
add
xchg
stc
ds
sbb
jo
mov
add
test
sbb
fiaddl
mov
lods
pushfw
ja
xor
adc
push
mov
push
scas
xchg
fimull
nop
jl
mov
out
lahf
je
add
fisttps
movb
jno
addb
adc
add
shl
movsl
ja
out
pop
mov
movsb
inc
pop
hlt
ficoms
mov
cmp
mov
sahf
xchg
jnp
add
xlat
inc
add
add
mov
cmp
in
dec
push
into
mov
dec
stos
inc
add
pmaddwd
gs
popf
cmpsl
add
pop
addr16
outsb
insb
rolb
add
imul
popf
push
daa
stos
push
shll
in
adc
pop
add
sbb
sbb
and
jg
adc
dec
sbbl
mov
xor
stos
aaa
pushf
pop
inc
and
incb
stos
stos
pushf
inc
out
sbb
loope
jmp
aaa
mov
add
push
lahf
icebp
xor
push
push
dec
lds
push
sti
mov
adc
fldt
push
sub
or
imul
cmp
add
cltd
sub
bound
in
adc
and
push
sahf
push
mov
push
sar
in
inc
cld
lret
sub
add
mov
sbb
lahf
ja
call
pop
sub
div
cmp
addb
rcl
inc
pushf
pop
xchg
cmpsb
scas
add
mov
fistl
lea
add
xlat
add
js
push
or
addb
add
add
test
loop
add
and
mov
stc
mov
add
stos
sti
aad
push
out
test
xor
dec
cmp
popf
jbe
jl
add
clc
cmpsl
pop
add
int
mov
pushf
les
fs
addb
xchg
adc
es
pop
push
pushf
mov
mov
lock
into
sub
dec
rorl
mov
inc
sbb
out
pushf
sub
sti
sub
outsl
popf
jmp
cltd
out
cli
std
jbe
mov
out
pop
scas
mov
pop
mov
in
adc
xchg
sub
outsl
pop
jno
daa
dec
mov
sub
lcall
or
dec
insl
outsl
push
dec
mov
inc
imul
mov
add
and
lret
mov
and
add
insl
add
xchg
mov
mov
lcall
adc
inc
movsl
jle
push
cmpl
cmpsl
rolb
roll
push
jle
pop
pop
sub
sub
jnp
nop
pop
aam
cmp
cmpsb
or
add
push
jl
pop
jmp
mov
cmp
test
iret
dec
xchg
or
add
push
aad
add
js
add
fsubs
mov
add
lods
adc
inc
jnp
ja
cmpsb
push
jl
sub
adc
popl
inc
add
loopne
add
dec
mov
lds
pop
and
lahf
sub
add
inc
inc
push
push
pop
mov
lahf
int
cwtl
and
jno
cld
sbb
lahf
int3
sub
add
call
adc
sub
xchg
rorl
or
pushf
int3
and
xchg
insb
mov
adc
icebp
mov
in
dec
aad
movb
push
rcrl
xchg
insb
xchg
and
dec
fimuls
imul
or
fsubr
adc
jnp
pushf
xor
roll
iret
add
and
bound
cmpsb
popa
lea
shrb
lock
jo
add
clc
pop
xor
mov
cld
cwtl
js
pop
sbb
push
cmp
sbb
cld
xchg
cmc
insl
mov
inc
or
jmp
push
shlb
cmc
or
add
cs
add
sub
add
jae
and
sbb
jb
ret
cwtl
cmc
test
xchg
mov
int3
movsb
iret
add
addr16
sub
cmp
das
xor
stc
fst
lock
popa
mov
bound
sbb
and
xor
popf
add
in
jg
rol
stos
push
jmp
cli
mov
arpl
add
cwtl
dec
push
movsl
lcall
aaa
and
stos
lock
push
adc
cmp
jmp
into
sbb
push
add
repz
push
dec
fsubr
pop
adc
jae
shl
enter
insb
sbb
scas
xchg
movsl
xchg
bound
lds
mov
iret
fidivl
and
pop
stos
stos
and
mov
add
mov
mov
mov
dec
pusha
add
push
xor
mov
repnz
ds
jb
call
or
in
fdivrs
sub
add
push
repz
mov
jp
add
mov
imul
add
add
loopne
fwait
sarl
push
gs
pop
insl
xchg
adc
jae
jle
mov
adc
filds
stos
and
in
cmc
sub
cwtl
add
xchg
mov
cli
stos
pop
ror
das
popa
cmp
sahf
movb
adc
cmpsl
mov
mov
icebp
jae
xchg
or
nop
mov
sbb
push
jl
inc
push
cmp
jmp
jb
push
fsubrl
jmp
negb
mov
icebp
fcoms
int
aaa
pop
pop
dec
mov
add
cwtl
rcr
lock
orl
jge
enter
lods
loope
sub
add
jecxz
je
imul
out
inc
inc
rolb
sbb
inc
jmp
add
jno
ds
sbb
outsb
outsb
pop
mov
or
mov
nop
mov
loop
int
add
subl
movb
es
push
addr16
add
sahf
sbb
pop
jl
pop
in
xchg
lods
mov
sub
out
sbb
cltd
scas
and
jo
add
jne
add
in
add
mov
cmp
add
add
aas
in
in
fmuls
clc
enter
rolb
add
call
lea
repz
add
mov
push
and
jb
pusha
add
cmpsb
dec
lret
nop
adc
inc
add
stos
push
add
add
std
pop
cmp
mov
sarb
push
add
test
sbb
test
or
mov
or
pop
iret
lret
scas
mov
loope
push
loop
dec
xchg
mov
fdivs
push
addb
popa
cmp
add
mov
addb
push
pushf
les
and
nop
add
or
mov
add
in
sbb
das
test
bound
stc
es
adc
xchg
pop
ret
pushf
mov
shll
mov
outsb
mov
outsb
cmc
mov
out
and
neg
or
push
fistps
lahf
and
rolb
mov
cmc
pop
add
test
push
jo
mov
pop
js
movsb
adc
adc
rolb
int3
xor
std
out
lds
iret
icebp
jmp
ljmp
into
cmp
inc
addb
mov
push
add
lahf
das
pop
sbb
lret
xchg
mov
addl
out
add
xchg
mov
mov
pusha
add
add
iret
fsubrl
jns
movsl
jo
ljmp
inc
add
xchg
pop
jge
add
mov
sti
inc
xor
pusha
add
jnp
jnp
cmp
popa
mov
jb
mov
jge
mov
adc
inc
add
jge
add
insb
aas
addr16
dec
pop
pop
ret
lock
ja
xchg
shlb
sub
rolb
mov
push
pop
or
out
repnz
jb
faddl
aam
out
les
in
pop
mov
pop
test
clc
pop
or
inc
cmc
mov
adc
add
nop
dec
xchg
jp
hlt
aas
cmpsl
push
or
data16
or
lahf
dec
xor
inc
add
add
mov
out
pop
mov
pusha
add
movsb
xor
dec
xor
push
push
add
inc
add
not
xor
sbb
loopne
out
add
insb
lcall
xchg
add
fisubrl
fistpl
or
pop
das
test
fwait
test
sbb
lret
aad
add
ss
xchg
jns
fsubl
mov
jbe
jno
aaa
hlt
mov
mov
lea
jmp
cli
lret
jge
sbb
pop
ljmp
sbb
mull
test
adc
mov
sbb
add
mov
ret
dec
imul
push
inc
add
out
add
dec
test
xlat
aam
xchg
dec
mov
insb
mov
loopne
xchg
xchg
addb
leave
addb
pop
pop
sbb
test
fwait
insb
ljmp
mov
loopne
cwtl
loop
lods
shrl
and
hlt
clc
inc
jmp
dec
jno
add
leave
xor
add
pop
addr16
mov
lock
sbb
insl
movb
call
pop
add
pop
dec
pushf
jo
movsb
lea
or
lds
add
add
jp
rolb
mov
int3
sub
mov
shll
out
sub
pop
dec
push
cwtl
les
inc
aam
sbb
jae
addb
mov
rcl
and
aam
loopne
std
mov
test
push
mov
pop
aad
mov
mov
loop
push
nop
push
add
into
clc
and
int
mov
pushf
sub
popf
xchg
pushf
scas
push
in
in
fwait
jp
shll
dec
mov
in
add
xlat
dec
je
fdiv
jge
and
mov
add
jp
xchg
imull
xor
ret
inc
popa
loopne
repz
dec
aaa
xchg
outsb
loop
sahf
xlat
or
arpl
mov
mov
push
mov
mov
loop
and
add
jmp
ja
cmpsl
pop
outsb
mov
jo
mov
out
out
dec
pop
stc
rolb
sub
scas
xchg
adc
add
lret
js
enter
sti
outsb
sub
fimuls
bound
xchg
mov
add
mov
repz
int
xchg
add
fs
mov
cmovnp
cmc
adc
mov
mov
pop
dec
add
pop
pop
dec
jle
xchg
bound
ss
dec
test
inc
aam
add
sbb
xchg
mov
stc
jo,pt
not
lahf
daa
pop
mov
push
push
ja
ret
cld
outsl
jmp
jns
outsl
mov
mov
pop
xor
jmp
push
daa
fildl
mov
pop
arpl
aaa
push
inc
idivl
sti
test
in
leave
mov
inc
rcrl
movsl
movsb
movsb
sti
push
inc
add
mov
jmp
push
insb
rcll
lret
xchg
jo
pop
ret
fwait
mov
int
ljmp
scas
mov
rolb
lcall
inc
add
test
jae
cmp
aad
or
pop
xlat
push
pop
xor
pop
cmp
push
lea
outsl
jle
rorl
mov
stos
mov
int
arpl
les
outsb
dec
dec
movb
xchg
push
insl
repnz
add
push
stos
cmp
in
int3
je
sub
addr16
sbb
or
dec
pop
lea
add
arpl
add
sub
nop
mov
jne
lret
and
lea
xor
fs
cmp
jno
test
movb
pop
inc
add
push
add
add
jmp
xchg
loop
inc
add
mov
xchg
sbb
fwait
sub
inc
add
jl
jl
shlb
out
xchg
shll
jp
mov
nop
sub
mov
jne
push
cli
mul
movb
dec
mov
lods
pop
iret
xor
mov
iret
xchg
je
mov
in
dec
rcl
call
pop
mov
or
imul
vphaddubd
out
hlt
push
push
jecxz
lods
jae
dec
push
inc
add
add
add
pop
rol
add
lods
cmp
fucom
out
cs
lret
lahf
repz
adc
sub
add
cmp
push
shlb
add
test
mov
adc
jne
adc
add
test
inc
add
call
lods
iret
mov
jle
stc
in
cli
loopne
add
iret
fisttpl
cmp
jecxz
mov
add
daa
jle
pusha
add
push
xchg
and
sahf
sub
mov
cmp
add
xchg
das
add
pop
gs
mov
out
or
xlat
lea
addl
pushl
sbb
pop
sub
loop
push
add
inc
dec
pop
cmp
jecxz
inc
add
ss
aam
and
xchg
daa
jns
sbb
xchg
int
add
add
push
mov
ja
inc
add
xchg
bound
cmp
add
push
inc
add
add
and
dec
call
inc
add
push
xchg
pop
test
ljmp
xchg
jo
mov
or
push
push
bound
mov
loope
adc
shl
sub
loopne
popa
cld
xor
xchg
pop
out
mov
lret
add
scas
test
nop
sbb
les
pop
push
fsubr
dec
mov
jo
lahf
rclb
add
daa
mov
clc
mov
sbb
and
inc
hlt
or
and
push
add
in
rorl
in
insw
xor
icebp
or
cmovl
mov
inc
pusha
add
stos
in
mov
adc
or
ficoms
ljmp
inc
add
pop
xlat
sub
in
dec
sbb
std
xor
fidivl
add
clc
push
sarb
dec
aas
sbb
mov
push
popf
fidivrl
sahf
movsb
jae
outsb
mov
add
inc
add
nop
movsb
jae
inc
fadds
dec
inc
nop
roll
add
xchg
pusha
add
ret
outsl
mov
and
hlt
adc
mov
test
out
test
mov
into
dec
xchg
cmp
je
xchg
lea
cltd
sbb
cs
mov
mulb
xchg
sub
add
addl
fisubl
imul
pop
test
cli
out
add
add
movsb
repz
cli
and
sbb
push
push
mov
push
lahf
ljmp
mov
push
jmp
and
add
and
jecxz
mov
inc
add
pop
out
ss
or
inc
lret
fistl
shr
and
push
outsl
out
add
mov
addb
pop
push
pop
movsl
pop
out
dec
and
xchg
sub
dec
paddq
aas
sub
sbb
sbb
push
mov
fwait
add
jbe
sti
push
xchg
mov
add
add
ss
jns
add
aam
add
cmpsl
pop
lret
popa
ficomps
stc
lcall
movsl
in
loop
in
nop
std
push
add
mov
or
test
or
push
push
int
mov
push
cmp
add
daa
iret
jnp
mov
jl
mov
cmp
adc
xchg
sti
pop
pusha
add
out
push
ljmp
sub
add
sbb
mov
mov
loop
std
mov
jb
ucomiss
into
inc
add
add
loopne
jne
pop
mov
lcall
cmp
xchg
sub
jb
add
adc
cmp
ret
sahf
or
stos
out
add
and
add
add
add
pop
or
pop
and
sbb
push
mov
mov
add
xor
hlt
ss
sbb
mov
rolb
fwait
jne
ljmp
pop
jp
cs
cmp
inc
add
int3
pop
sbb
inc
add
shll
dec
in
and
sbb
add
aam
ret
addb
jne
leave
sbb
push
push
push
inc
add
xlat
leave
dec
push
or
lock
imul
insb
lods
mov
mov
xor
cmp
mov
cmp
pop
mov
add
and
pop
notl
cmp
push
in
inc
mov
sub
fs
test
sti
je
jmp
dec
jo
and
and
push
pop
fistpll
sbb
xor
inc
inc
add
cmc
xchg
in
ljmp
jne
ret
cli
add
fs
pop
shll
loop
push
mov
dec
cltd
mov
call
aaa
into
jmp
mov
jge
lods
aad
jle
add
mull
add
inc
dec
movsl
cli
ret
mov
jne
mov
dec
xor
add
xchg
repz
jecxz
mov
loop
add
jecxz
insb
pop
add
add
sub
jns
xor
pop
xlat
or
test
dec
dec
test
movsl
cltd
xor
adc
pop
daa
jae
pop
out
xchg
and
pop
fsubs
int3
push
sub
xchg
and
inc
shr
fstpl
pop
xchg
lret
lea
ret
loope
mov
popf
push
lds
push
sarl
mov
pop
cli
mov
sub
sub
std
je
lahf
jp
push
lret
out
and
je
push
icebp
movsl
jl
leave
mov
repnz
adc
mov
xlat
pop
sub
into
mov
sub
shl
xchg
and
rolb
pusha
add
lods
cmp
ret
cs
or
int
add
mov
jl
rcll
in
xor
sub
or
adc
inc
add
and
movsb
mov
mov
jo
xor
add
jno
jne
imul
lock
add
pop
inc
add
and
mov
cmp
fisttps
popf
inc
fistps
add
je
test
jbe
xchg
scas
lret
test
sbb
movsl
or
clc
mov
dec
mov
lock
test
cmp
pusha
add
push
mov
lcall
mov
out
inc
lcall
test
stc
mov
adcl
arpl
pop
sub
shll
or
xchg
adc
ds
xor
stos
fcoml
pop
add
push
mov
mov
add
sub
push
push
test
bound
jle
divb
mov
sub
fldl
cmp
add
stos
cwtl
repnz
cwtl
ret
enter
stos
push
jnp
and
stos
adc
xchg
sti
xor
mov
loopne
add
mov
imul
pusha
add
mov
js
adc
movb
fdivrl
push
xchg
sahf
into
lds
fildll
xchg
bound
movsb
enter
add
pop
dec
pop
les
int
mov
movsb
lds
add
pop
mov
add
sub
mov
xor
iret
das
xor
add
outsl
in
or
cmp
ret
jo
add
test
jp
push
mulb
cwtl
das
xchg
mov
sti
jbe
dec
or
xor
lods
mov
roll
jmp
arpl
wbinvd
fs
push
ds
add
add
mov
add
out
pop
push
jecxz
pushf
mov
bound
into
xchg
add
xchg
leave
sahf
jecxz
bound
cld
fdivr
hlt
push
inc
cmp
jo
push
push
mov
jge
jbe
in
into
and
movb
push
jb
sub
arpl
outsl
lods
jl
scas
call
out
jp
out
int3
lcall
shll
add
sub
jo
scas
in
sub
jb
stc
gs
notl
add
mov
add
fdivs
jb
scas
data16
pushf
jmp
adc
pop
out
jle
clc
sub
int
mov
cli
loope
cwtl
fbld
test
lea
sub
mov
pop
cmp
loope
stos
gs
dec
lods
repnz
test
daa
jmp
dec
jl
ret
mov
lret
jb
mov
xor
add
aaa
lahf
dec
fdivrs
cwtl
cli
ja
mov
rol
jmp
mov
test
sub
in
cli
popf
mov
push
in
push
add
faddp
add
and
lods
insb
dec
xor
movsl
movsl
mov
inc
add
loopne
out
jmp
push
leave
cmp
dec
test
inc
sbb
ss
push
jecxz
mov
jnp
mov
add
test
popf
jge
pop
mov
lods
sahf
jns
into
scas
iret
lret
inc
lret
xor
hlt
in
and
add
xchg
mov
pushf
adc
xor
cmp
into
lods
roll
mov
popa
inc
or
lods
sbb
fucom
addb
lds
jbe
add
adc
sbb
push
sbb
adc
sti
push
adc
out
push
push
cmp
and
mov
mov
call
lea
or
dec
aad
sub
jp
addr16
push
lock
test
sub
sub
in
sub
adc
addb
out
add
jb
add
aas
jmp
loope
push
sbb
add
les
add
pop
dec
addb
dec
dec
or
mov
dec
sub
inc
mov
and
leave
add
scas
jmp
mov
add
or
pop
add
test
add
cmp
das
push
rclb
mov
rorl
xchg
inc
jne
pop
xchg
mov
xor
fwait
stos
push
mov
mov
loopne
mov
call
pushf
and
xchg
mov
add
pop
mov
push
sarl
lahf
addr16
adc
lods
jb
xchg
ds
pop
fisubs
pusha
add
out
jns
leave
dec
mov
push
add
test
xchg
pop
and
fs
mov
fidivrs
jle
sub
je
add
lea
sbb
std
inc
stos
cmp
negb
jmp
and
xchg
fnstcw
movb
lods
cwtl
out
fs
sub
or
mov
cltd
push
loop
mov
push
imul
movsl
aaa
inc
add
mov
leave
cmp
mov
es
mov
je
sbb
cltd
xchg
or
cltd
aam
in
outsb
dec
cmp
add
cmp
popf
insl
outsb
cwtl
lods
cli
pop
fistl
mulb
or
divl
xor
cltd
bound
and
icebp
dec
repnz
push
xchg
sub
stos
rcrl
and
mov
jl
mov
std
insb
push
pop
flds
andl
push
stos
mov
movsl
jae
in
mov
mov
pop
and
shrl
or
shr
xchg
fimuls
je
test
ret
adc
jl
js
pop
jg
cld
mov
mov
iret
stos
cmpsb
imul
add
inc
add
jl
sub
mov
pop
sti
aaa
push
jno
sar
xchg
js
jmp
sub
add
add
iret
dec
adc
iret
mov
sahf
add
inc
pop
push
ds
jnp
data16
and
cmp
subl
aad
mov
add
pop
aaa
dec
cmp
jp
sbb
das
rclb
test
mov
into
ret
test
les
inc
add
or
stos
int
daa
sub
lret
adc
jnp
xor
push
jae
movsb
add
jge
mov
dec
roll
and
fstpl
pusha
add
inc
add
add
add
ja
pop
in
jmp
mov
jae
mov
jns
xchg
add
dec
jmp
in
jmp
mov
push
daa
stc
cmp
mov
mov
fwait
jp
in
lock
icebp
out
sub
imul
sbb
test
inc
xor
cmpl
push
jge
xchg
pcmpeqb
push
addb
aas
ficompl
dec
mov
xor
movsl
fbstp
repz
xchg
idivl
bnd
mov
dec
popf
mov
lds
push
and
and
test
add
push
or
and
jb
and
pop
sub
inc
add
mov
repz
or
adc
add
ret
ret
pop
adc
push
add
mov
jbe
mov
sub
cmp
push
xor
std
fs
jno
nop
out
jns
insl
in
addb
mov
xchg
cwtl
rcll
popa
in
add
mov
xor
sub
xchg
push
movl
rorl
mov
and
dec
push
jo
adc
sahf
xor
inc
mov
adc
fcoms
cmp
xchg
or
sbb
dec
cmp
pop
xor
sub
adc
test
mov
aam
iret
loope
int3
cmp
mov
xchg
lods
enter
xor
and
add
lret
mov
push
xor
add
mov
cmp
or
call
scas
xchg
imul
out
add
mov
aas
popf
icebp
lret
xor
cmp
mov
push
fbld
gs
mov
mov
out
or
std
mov
or
icebp
dec
outsl
js
mov
push
mov
pushl
sbb
ss
push
out
out
dec
dec
aad
filds
addb
aad
fdiv
xlat
add
sub
jnp
dec
in
out
add
mov
daa
mov
outsl
inc
cli
lahf
xor
rolb
inc
dec
jle
add
and
int3
addb
xchg
pop
sbb
lds
adc
add
loopne
xchg
test
inc
pop
sbbl
add
cmp
inc
add
adc
in
fstpt
test
les
call
and
mov
ljmp
xor
or
push
mov
outsb
std
imul
push
add
popf
in
sahf
jns
addb
adc
enter
addr16
pop
pop
int
inc
into
mov
lock
das
stos
jae
inc
sbb
es
jbe
mov
hlt
mov
mov
pop
or
inc
add
jne
add
jo
xchg
repz
out
inc
sbb
rorl
pop
push
lea
insl
xor
add
xchg
add
in
sub
fnstcw
and
sub
fmull
out
daa
cmp
mov
add
and
adc
add
mov
pusha
add
shlb
add
stos
push
es
mov
jb
cmpl
add
cmc
pop
mov
lahf
daa
cld
sbb
lcall
int3
mov
addb
cmp
pop
insb
xor
addr16
test
lret
divb
repnz
jno
add
push
sub
std
push
mov
xchg
xchg
jns
in
push
pushf
sbbl
sub
add
add
sub
pop
mov
add
or
cmp
sub
adc
sbb
mov
jo
fdivl
lock
sbb
cmp
xchg
dec
mov
jne
push
loope
or
fimuls
mov
add
xor
dec
in
xchg
rolb
mov
cmc
push
pop
dec
mov
inc
inc
out
clc
pop
lret
es
mov
test
mov
jns
mov
push
hlt
in
push
int
iret
push
mov
dec
dec
std
xchg
pushf
push
cmpsl
sbb
mov
lds
scas
xor
fldt
cmc
movb
daa
jg
pop
mov
insb
mov
mov
jg
add
and
add
pop
add
sub
adc
addb
push
cmpl
mov
inc
add
cs
ret
add
and
mov
lds
sbb
pop
fldl
scas
inc
repz
into
mov
add
mov
ret
fwait
push
and
sbb
or
stc
jmp
inc
add
pop
movb
fadds
pop
rcrl
push
mov
ljmp
out
xchg
inc
xor
push
add
xchg
sbb
mov
xchg
or
add
cmp
lret
int3
jnp
adc
jle
push
aam
test
js
sbb
or
insl
pop
mov
das
push
shl
cmp
cmp
adc
ror
mov
outsl
fcoms
xor
push
push
das
jnp
stos
roll
addb
add
push
and
adc
jmp
mov
stos
inc
add
mov
jg
test
test
xchg
test
jbe
js
test
pop
xor
in
test
adc
xchg
iret
addr16
xor
inc
fadds
inc
add
lods
popf
dec
jae
aaa
push
inc
mov
mov
pop
push
test
movsb
add
lret
and
cmp
sbb
in
out
shl
imul
jno
scas
xchg
in
dec
jg
cmpsb
sub
out
addb
xor
bound
jmp
ficoml
or
add
or
stc
lea
ss
sub
nop
nop
mov
scas
cwtl
cmp
mov
rolb
insl
pop
adc
outsb
sub
or
add
dec
xchg
push
push
xor
insl
es
mov
pop
push
push
sbb
sbbl
movb
repnz
and
into
or
dec
mov
pop
lods
sub
inc
add
xor
xor
mov
add
add
ret
cmpl
add
mov
cli
mov
mov
adc
data16
inc
push
add
mov
lods
cmp
mov
mov
cmp
sbb
loop
adc
mov
add
add
mov
dec
addb
xchg
out
in
sarb
repz
push
sub
aaa
cmc
push
jns
mov
xchg
dec
in
fildll
push
int
mov
mov
out
cmp
insb
loopne
sub
insb
and
xchg
fnstcw
test
mov
mov
pop
pusha
add
xchg
jmp
out
addb
addb
addr16
imul
leave
sbb
mov
or
sub
aaa
add
icebp
add
add
outsb
fcmovnbe
push
or
jecxz
add
xor
pushf
add
xchg
jbe
add
in
in
add
mov
cmpsl
leave
push
mov
push
hlt
inc
add
gs
sbb
rorb
xchg
jno
xchg
cmp
jns
into
jmp
pop
sub
add
movntps
rorl
cmpsb
movb
pop
testl
sub
mov
adc
inc
add
pop
jmp
pop
bound
mov
inc
add
cmp
cmp
cld
add
jl
clc
jmp
mov
inc
add
sbb
gs
add
jne
or
jg
loop
pop
movsb
fistps
test
arpl
and
shll
scas
mov
gs
cmp
cmp
int
sub
adc
outsb
adc
pop
mov
movb
cmp
add
xchg
push
xlat
stos
dec
cltd
cmp
push
pop
pop
and
pusha
add
and
cmp
daa
out
sub
arpl
rolb
js
add
add
fcmovnbe
mov
dec
mov
movb
or
adc
and
xor
add
pop
pop
ret
stos
movl
enter
add
add
movsb
sub
aas
dec
out
jmp
xchg
jo
xor
xchg
jmp
add
int
insb
test
mov
add
pop
mov
lahf
test
sub
mov
lcall
incb
jl
inc
add
mov
ret
and
testb
rorl
push
jge,pt
xlat
add
jns
fwait
push
adc
push
test
cmp
negl
push
cmp
negl
cs
mov
cmp
sbb
sub
je
mov
ffreep
xchg
insb
out
dec
pop
popf
inc
add
xchg
pop
xchg
les
cld
sub
inc
add
je
jl
repnz
add
in
sub
out
into
mov
cmc
int
test
adc
lds
scas
xchg
das
out
rolb
add
test
dec
hlt
dec
jge
cltd
ljmp
imul
insl
mov
inc
rolb
mov
pushf
jne
fldl
or
pop
dec
jnp
pusha
add
jnp
inc
add
stos
jbe
rolb
lock
ds
in
mov
lds
ret
sub
mov
out
aad
push
xor
out
or
stos
fisttps
xchg
cwtl
out
fisubrs
movb
adc
idivl
or
nop
je
mov
and
pop
imul
push
mov
out
mov
jmp
std
iret
sti
lods
inc
inc
je
repnz
imul
mov
outsb
push
pop
jge
test
arpl
stos
fdivr
sub
jo
add
mov
cmp
call
popa
push
iret
movsb
xor
stc
add
push
shlb
icebp
inc
add
add
enter
insl
pop
push
pop
and
pop
ss
and
mov
xor
mov
inc
add
pop
sbb
bound
les
ss
inc
add
repnz
outsl
mov
out
scas
das
mov
xchg
push
loop
gs
cmp
outsb
push
std
mov
mov
fcom
push
adc
or
xchg
repz
sahf
bound
mov
inc
test
mov
pop
sbb
iret
test
add
das
xchg
push
adc
sub
pop
xor
iret
fnstsw
cmpsl
jo
call
les
roll
out
cwtl
and
add
dec
testb
dec
into
add
or
movsl
mov
or
cmpsb
push
ljmp
push
rolb
shrb
add
jg
shll
fucomi
push
gs
add
aas
call
push
mov
outsb
icebp
cltd
inc
cmp
repz
cmpsb
inc
add
inc
cltd
mov
jnp
sbb
push
jns
push
push
pop
mov
test
scas
xchg
xchg
jae
shlb
leave
mov
movb
iret
pushf
add
insb
call
mov
fnstcw
add
addb
shll
aas
dec
std
outsl
ds
jbe
mov
lods
bswap
nop
mov
adc
xchg
jns
add
in
subl
and
push
push
std
inc
add
scas
insb
sub
adc
xor
call
faddl
sbb
hlt
dec
xchg
addb
sub
cmp
sbb
out
shlb
jns
in
xchg
hlt
mov
cmp
jnp
sbbl
mov
cs
fidivrl
jg
pop
in
test
add
pop
ret
fidivrl
hlt
pop
push
lea
aaa
push
imul
cmp
jne
mov
pop
in
and
or
dec
filds
or
test
ja
rolb
sbb
dec
rcrl
nop
shlb
lods
inc
cmp
inc
add
dec
pop
bound
aas
jmp
scas
xor
jno
mov
push
jo
ljmp
dec
rcll
sub
mov
repnz
into
data16
std
rol
in
orl
jp
js
pop
mov
jbe
add
or
sahf
iret
xor
out
in
ret
cmp
lcall
cli
mov
sahf
xchg
imul
and
ja
sub
sub
fsubs
add
icebp
shrb
inc
clc
add
stos
push
cmpsl
mov
push
mov
repz
sub
inc
add
ss
sub
test
leave
mov
daa
add
ds
data16
ficompl
arpl
fistl
jmp
test
mov
fdivrp
ret
jns
pop
stos
sahf
add
fisubs
xchg
adc
std
inc
daa
mov
lahf
cmp
out
test
imul
rol
add
add
cmp
xor
add
add
leave
push
inc
add
add
nop
xchg
js
addr16
xchg
das
sub
add
pop
std
xchg
xchg
sahf
add
mov
pop
mov
incl
dec
mov
jno
xchg
icebp
inc
mov
add
icebp
cmp
in
or
dec
icebp
repz
add
pop
inc
pop
addb
push
addr16
popf
stos
int
xchg
xchg
add
push
mov
add
and
repnz
aas
hlt
xor
sarb
test
xor
in
add
xor
scas
and
or
ret
jae
mov
pop
data16
pop
xor
pop
mov
push
inc
loopne
mov
mov
mov
arpl
push
dec
inc
stos
sub
lahf
aad
adc
cwtl
sbb
shll
add
cwtl
cwtl
push
jbe,pn
cwtl
mov
add
mov
add
out
out
cld
adc
add
daa
sbb
sbb
dec
xchg
mov
stos
mov
aas
jmp
std
int3
sti
scas
stos
dec
loopne
add
push
movb
xor
or
push
mov
dec
pop
ret
das
loop
stos
repnz
lret
mov
aaa
fdivrs
add
inc
mov
cmp
das
fildl
jl
mulb
pop
cmp
jo
add
rcll
xchg
nop
adc
dec
sarl
call
movb
mov
add
xlat
scas
aaa
mov
fwait
repnz
dec
sub
daa
sbb
add
adc
push
push
jecxz
clc
lods
adc
pop
mov
or
pusha
add
repnz
push
ret
mov
inc
add
jle
fwait
cld
pop
test
xchg
loop
pop
das
mov
add
js
pmaddwd
insl
dec
mov
add
fsubrl
outsl
repnz
in
les
ds
fs
pop
pusha
add
aas
jae
push
add
mov
push
pop
mov
add
gs
sbbl
mov
cmp
pop
mov
aam
add
js
cmp
jl
jbe
push
and
push
outsb
rclb
leave
and
std
mov
pop
jnp
pop
fisttpll
dec
shll
data16
pop
cmp
leave
adc
xchg
movsb
mov
lods
mov
int3
es
shll
popa
stc
jmp
push
std
rcll
sub
lea
push
aam
pusha
add
add
hlt
pop
pop
push
stc
in
fistps
sbb
inc
movsb
daa
xor
insb
cmc
sbb
pushf
jmp
cltd
inc
add
cmpsl
push
sbb
adc
jae
movsb
push
push
lds
lret
rolb
add
and
xor
cli
mov
sti
fdivl
jns
mov
or
dec
lahf
xor
popa
jmp
mov
add
mov
repnz
lcall
inc
pop
sbb
add
inc
push
into
pop
xorl
add
test
add
fwait
mov
xchg
pop
push
mov
jne
pop
xchg
inc
add
in
mov
test
add
push
add
jno
inc
add
or
or
popf
inc
jecxz
sti
gs
push
mov
add
add
cltd
or
xor
mov
je
add
test
aam
add
add
aas
popf
cmpsb
enter
jecxz
push
mov
add
mov
and
push
imul
jge
lea
movsl
mov
arpl
pop
insl
les
cmp
add
outsb
pop
sub
clc
pop
scas
cmp
sub
dec
xchg
addb
stos
sbb
mov
cmpsl
add
sub
mov
fdivrl
pop
and
mov
push
popa
xchg
jo
or
adc
add
xchg
pop
out
and
lret
loop
repz
dec
je
inc
add
popa
dec
addr16
sbb
loope
imul
loop
or
add
addb
lret
and
jp
data16
or
add
scas
dec
or
into
xor
gs
fst
out
fsubs
mov
jecxz
jmp
xchg
cmp
int3
xlat
dec
mov
add
mov
lds
lahf
pop
fidivl
test
mov
sbb
outsl
mov
hlt
mov
adc
mov
test
jecxz
aad
int3
fs
and
outsb
mov
std
scas
add
les
push
lcall
add
std
push
in
add
lods
and
dec
ffreep
add
add
imul
jne
dec
andl
mov
fsubs
into
add
push
jp
xchg
mov
popa
rolb
fbstp
ret
lahf
js
xchg
xchg
cmp
ficoms
mov
movsl
mov
sub
jbe
stos
push
scas
cmpsb
xor
xchg
xchg
repnz
xchg
loop
call
xor
popf
arpl
jne
cmpsl
xor
mov
ljmp
int3
divl
shrl
mov
add
es
test
test
dec
nop
jbe
jg
bound
xchg
js
push
dec
mov
int
push
les
addb
lea
mov
nop
jne
mov
jb
xor
mov
sysenter
and
addb
add
jmp
jle
mov
insl
int
test
add
inc
cmp
xor
mov
test
imul
outsl
xorl
mov
jge
add
xor
cmp
pop
pop
daa
hlt
test
add
lods
mov
adcl
fisttpll
addb
xchg
jge
xlat
and
xchg
mov
shrb
mov
push
iret
cmpsb
out
jmp
push
push
sbb
mov
rolb
mov
insl
pop
stos
sbb
test
test
add
add
fs
dec
repz
popf
out
fimuls
push
and
add
test
mull
add
inc
add
xchg
into
xlat
call
ret
pop
imul
aam
cmp
lea
lea
jl
xchg
xor
enter
lods
es
nop
int3
dec
xchg
aas
ja
add
add
lret
add
dec
mov
add
sbb
pop
fs
add
mov
adc
mov
add
pop
imul
es
and
jge
loopne
or
xchg
cmpsl
addb
mov
addb
cmp
push
xchg
xchg
sbb
mov
add
pop
cmp
mov
jl
icebp
fdivrl
leave
xchg
or
pop
call
fmuls
pop
push
repnz
jl
fldl
inc
pop
roll
daa
xor
add
dec
sarl
fiadds
add
pop
fmul
mov
mov
jge
xor
sahf
into
adc
out
bound
jns
popa
xor
mov
repz
add
jle
xchg
add
outsl
mov
xchg
inc
cmc
int3
sub
and
xchg
jmp
addr16
inc
jge
cli
jno
sub
test
mov
inc
jb
test
addb
push
adc
mov
xor
push
test
les
xchg
push
mov
stos
jp
push
mov
mov
xchg
icebp
sub
adc
cmp
rcrl
lea
dec
ss
add
sbb
pusha
add
lret
ljmp
cmp
lahf
cli
xor
sub
mov
stos
mov
pop
cs
jp
cwtl
cmp
movb
add
adc
sti
dec
xor
cmp
mov
call
mov
fs
or
adc
xor
mov
repnz
test
xlat
adc
adcl
fcomps
add
add
or
loope
fs
addb
add
jnp
xor
lods
jbe
inc
lea
add
cld
and
in
shlb
jl
adc
sub
xlat
scas
mov
in
lods
daa
in
push
addr16
push
stos
test
popa
inc
add
xor
rorb
fwait
sahf
or
out
mull
pop
insb
repz
sub
xchg
insb
out
push
jecxz
daa
movb
xchg
movsl
std
and
dec
mov
sub
cwtl
stos
fcmove
adc
cli
jo
sub
add
aam
lea
inc
add
sub
stos
lahf
adc
stos
cmp
test
je
sbb
mov
cwtl
test
or
dec
cld
lret
xchg
cmp
or
jge
cmp
fs
psubusw
mov
loope
addl
in
roll
lret
fsub
movb
cwtl
xchg
mov
mov
lcall
sub
imul
rol
add
sti
and
insl
push
addb
test
imul
push
rol
add
lret
jae
stos
jns
scas
das
pop
adc
adc
stc
scas
test
out
test
add
jle
cli
inc
add
in
pop
jnp
inc
add
jl
cmp
fwait
sbb
cmp
mov
fsubs
pop
popf
popa
insb
sbb
sarb
dec
adc
lods
ljmp
xor
dec
inc
and
xchg
mov
dec
jae
add
fwait
adc
mov
add
mov
dec
pop
pop
sub
add
lea
inc
add
sbb
int3
ds
dec
xor
add
add
hlt
xor
movsb
pop
adc
push
aam
add
xchg
cmp
xor
enter
ffreep
add
imul
insb
shll
add
pop
add
or
daa
mov
mov
mov
mov
divl
minss
lods
popa
jge
xchg
roll
lahf
stc
sbb
xor
mov
add
jle
dec
adc
xchg
xchg
sub
add
outsl
js
sti
jb
add
jle
addps
ljmp
xor
leave
movb
mov
cli
xchg
inc
add
inc
add
push
addb
js
cli
xor
xor
fst
pusha
add
sahf
shrl
jns
je
addb
jns
clc
into
movsl
sub
add
popl
cmp
movb
adc
or
pop
xor
cwtl
xchg
add
cmpsb
imull
add
fstps
addb
cmp
xor
mov
jl
paddd
ja
insb
push
adc
popf
je
xchg
adc
pop
cltd
cs
lcall
lods
test
insl
int3
push
in
xchg
inc
sbb
ficoms
inc
jp
pop
xor
add
add
cmp
jno
incb
xlat
ret
hlt
mov
push
add
add
aam
movl
add
