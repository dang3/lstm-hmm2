jne
fisttpll
add
add
xorps
call
cmpsb
add
imul
add
lcall
adc
and
mov
pop
and
mov
loopne
fimull
or
mov
add
add
add
mov
add
add
stos
cltd
ljmp
and
mov
add
pop
mull
je
adc
gs
pop
add
adc
inc
xor
mull
clc
cld
pushf
cmp
add
pusha
add
mov
cmc
xor
push
add
add
add
add
add
inc
sbb
fsubr
xchg
add
add
cmp
dec
push
add
add
add
gs
movsb
add
repz
fcomp
jb
push
add
push
inc
fsub
add
cmp
fucomip
mov
testb
mov
mov
fnstsw
jg
add
enter
ficompl
add
add
stos
dec
popf
and
mov
shl
dec
pop
push
add
pop
pop
push
lcall
and
movsl
jb
jb
add
addb
fidivrl
jg
scas
cld
jae
push
add
add
add
push
gs
or
add
add
lods
sti
rolb
gs
add
add
pop
cmpsl
adcl
pushf
inc
add
cmpsb
add
xor
push
add
push
add
fstl
jno
add
add
in
fst
je
jnp
cmpsl
imul
ret
jb
xchg
add
daa
push
add
arpl
lret
fisubl
jbe
inc
add
cwtl
or
add
cmpsb
add
mov
inc
add
sti
mov
std
movsb
add
push
add
push
add
add
mov
jo
fcoms
add
mov
mov
lcall
add
add
pop
stos
in
mov
into
iret
push
add
jbe
mov
add
aas
movsb
add
repnz
faddp
daa
out
push
add
mov
add
std
arpl
inc
add
fiadds
add
mov
out
popf
xchg
add
add
add
add
push
add
add
xchg
add
xor
cmpsl
andl
fcmovnbe
int
add
hlt
add
add
imul
pop
sbb
ss
mov
call
pop
xorl
add
mov
pushf
adc
lcall
testb
push
test
mov
mov
add
cmp
mov
test
int
rolb
out
adc
pusha
add
add
and
mov
pop
mov
mov
add
add
out
lcall
cmp
add
test
jo
or
mov
add
add
aam
fbstp
add
mov
add
test
stos
sub
jns
cld
inc
add
add
mov
mov
ds
add
pop
push
add
iret
aam
mov
mov
sarl
int3
mov
add
mov
negl
into
mov
add
fld
add
or
mov
push
fwait
sub
add
add
test
mov
lods
mov
lahf
xor
add
inc
addb
xchg
pop
mov
fidivl
dec
mov
push
fcoms
add
sub
xchg
pushl
adc
testb
inc
orl
xchg
daa
mov
fs
and
mov
add
rolb
push
add
mov
std
ret
iret
stc
cmp
mov
add
xor
pop
dec
dec
add
mov
add
test
imul
add
mov
fidivrl
mov
add
fisttps
stc
cli
pop
int3
test
cmp
loope
add
mov
xor
xor
cwtl
jns
dec
rolb
or
push
mov
and
mov
ret
add
cltd
das
add
mov
add
inc
fsubrl
mov
pushf
scas
and
add
popf
sbbl
aas
mov
jnp
xchg
mov
jmp
and
mov
add
lea
lea
addr16
add
add
add
mov
dec
jecxz
and
or
add
or
loope
dec
pop
jmp
add
xchg
add
add
add
std
add
sub
hlt
add
data16
scas
cmp
pushf
andl
xchg
loopne
push
mov
pop
and
add
mov
rolb
clc
sub
cltd
bound
mov
add
mov
add
add
insl
int
rolb
or
xchg
mov
mov
mov
add
into
lahf
stos
faddl
mov
dec
adc
dec
xor
pop
push
add
add
add
test
mov
ret
popa
or
add
and
mov
add
or
mov
daa
sahf
clc
xchg
cmp
and
filds
mov
adc
mov
in
push
inc
push
add
ljmp
sbb
in
jl
out
fdivl
push
or
add
imul
add
add
mov
xlat
sarl
xor
out
rolb
loopne
lret
in
and
sti
out
aam
and
in
add
inc
add
add
add
add
in
adc
fisttpll
push
add
add
mov
inc
add
add
enter
bound
mov
addb
add
push
cwtl
das
lock
add
add
gs
stos
mov
add
jo
xchg
adc
iret
and
mov
add
ret
imul
cmc
sahf
outsl
loop
mov
test
rolb
mov
and
mov
add
mov
adc
dec
fsubrl
testb
mov
imul
mov
int
stos
ret
sub
stc
add
push
add
add
add
add
cmp
mov
mov
add
add
das
into
mov
adc
popa
add
mov
add
mov
mov
mov
add
add
pop
cli
add
mov
imul
add
pusha
add
add
mov
xor
sub
sbb
jno
cmp
mov
add
add
add
push
cmp
add
and
inc
add
hlt
add
fwait
test
mov
inc
add
add
js
xor
add
movsl
aaa
add
lcall
add
add
decb
xor
aaa
push
add
lcall
jne
sahf
scas
add
mov
add
sub
cld
incl
add
mov
sbb
adc
push
add
lret
cmc
sub
lahf
scas
lret
loope
mov
jno,pn
lahf
mov
jp
jg
add
push
add
idivl
pop
adc
mov
sub
xchg
cmovnp
mov
add
mov
mov
lret
add
scas
sub
sub
pop
movsl
xor
nop
add
cmpsb
add
and
test
les
lcall
add
add
mov
add
call
xchg
jmp
gs
add
repz
add
mov
add
jne
dec
loopne
pop
add
fstps
add
imul
add
sbb
ja
popf
sahf
loop
in
out
je
std
in
push
filds
insb
inc
out
stos
scas
xchg
popf
in
sub
add
lods
fisubrl
outsb
xchg
add
add
add
xor
inc
add
icebp
jmp
stos
jmp
jns
add
jnp
test
imul
mov
aam
testl
mov
fildll
mov
xor
fidivrs
dec
jmp
sub
add
push
fcmovne
pop
push
xchg
fdivrl
cmp
sahf
inc
add
mov
inc
push
xchg
pop
inc
add
shll
add
add
test
ret
xchg
add
and
xor
dec
loope
add
add
add
fisubs
add
add
mov
lcall
mov
pop
insb
cmp
dec
loope
mull
push
add
jbe
jb
pop
fdiv
add
mov
push
add
lcall
add
leave
jmp
add
jae
add
add
jae
aaa
and
mov
sub
call
sub
mov
test
loop
mov
add
adc
cmp
stos
in
icebp
push
add
subl
push
inc
add
cli
jae
loop
nop
add
jo
lcall
addb
jmp
cmpsl
addb
jb
jmp
pop
mov
jno
pop
push
add
mov
add
dec
leave
dec
ret
add
jo
popl
mov
add
ret
xor
add
data16
movb
enter
dec
sbb
add
mov
add
outsl
lea
inc
add
push
pusha
add
add
adc
push
mov
outsb
mov
add
cwtl
mov
call
ret
movb
cmpsb
add
testb
pop
test
rorl
lods
mov
stc
es
cmp
mov
pop
in
add
sbb
mov
jnp
add
loop
dec
or
add
add
add
bound
mov
dec
pop
loope
mov
cmpsl
push
mull
add
add
addb
repz
jl
cmpxchg
lret
sub
popf
sub
add
add
cmc
jb
fidivs
add
add
add
add
sub
decl
sbb
cli
pop
or
add
dec
xchg
add
jne
or
inc
add
out
fldcw
mov
enter
fmull
and
mov
data16
lret
scas
mov
std
dec
mov
in
push
jge
mov
jne
rolb
add
loopne
or
mov
jle
add
push
sub
xchg
add
add
sbb
aaa
gs
repnz
mov
push
xor
xchg
adc
push
push
add
jbe
and
mov
aad
cmp
popf
add
std
add
add
adc
pop
inc
rolb
je
mov
add
les
and
data16
add
add
push
add
pusha
add
xchg
imul
add
pop
xchg
lds
cmpl
cli
ret
mov
movsl
mov
inc
popf
addr16
jg
dec
xchg
add
xlat
xchg
dec
add
bsf
add
add
aaa
fidivrl
in
cmp
fildl
xor
inc
add
ffree
outsl
nop
add
andl
fadd
popa
xor
cwtl
mov
add
jle
idivl
add
push
add
add
mov
push
mov
cmp
ds
mov
jne
add
decl
or
stc
dec
cld
mov
addb
add
add
xchg
xor
mov
test
addb
pop
sar
ja
add
add
loopne
push
sub
or
fsts
aad
dec
inc
add
add
loopne
insl
cli
xor
popa
jmp
ds
out
adc
cmp
mov
andl
xchg
cmpsb
add
jg
sub
mov
mov
sub
push
push
push
cld
call
sub
mov
cs
movzbl
cmp
ss
lea
push
lea
push
lea
push
lea
push
push
call
cmp
je
es
lea
cs
cs
es
call
test
jne
jmp
push
lret
icebp
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
lea
lea
sub
add
mov
sub
sub
push
pop
push
je
jmp
add
add
push
add
add
push
add
add
add
xor
popl
and
add
add
add
dec
mov
addb
add
add
pop
inc
add
lret
xlat
cli
push
and
adc
add
xchg
mov
adc
mov
jmp
enter
stc
cmp
add
shl
add
jno
jno
in
out
add
mov
addb
add
or
bound
mov
pop
push
add
cmp
mov
mov
jo
test
add
jl
dec
mov
push
dec
add
fistps
mov
add
rolb
add
fcoms
add
in
dec
stos
shll
sbb
dec
push
push
add
add
add
xchg
add
addb
gs
lock
add
test
daa
sub
call
add
hlt
add
fimull
add
test
add
fsub
cs
rcr
mov
int
lods
add
add
cltd
loop
popf
add
mov
fldl
or
add
adc
mov
faddl
dec
mov
enter
add
add
xchg
fcompl
jae
add
xor
add
daa
push
add
fdivs
sub
add
mov
addb
iret
jl
outsl
xchg
push
add
test
cwtl
dec
sbb
inc
add
adc
push
add
add
cltd
xchg
loopne
mov
jg
add
sub
lret
scas
cmp
add
sub
sahf
inc
or
add
add
inc
lock
mov
bound
mov
push
add
fcmovnb
inc
add
aam
movsl
jp
cmp
pop
daa
fucomip
movsb
add
add
mov
push
add
cltd
enter
add
lods
inc
add
cmc
sub
add
add
stc
sbb
add
movsl
jae
out
cmp
adcl
enter
mov
add
in
mulps
add
add
push
pop
dec
or
add
push
add
sub
jo
mov
ficoml
add
fldt
xor
mov
jp
add
add
gs
add
movsl
add
push
xchg
sub
addr16
inc
sbb
ljmp
mov
mov
add
inc
mov
mov
push
mov
int
in
out
scas
testb
add
popf
je
mov
cmp
sbb
add
add
add
add
add
xor
sub
inc
add
ror
lret
add
lods
adc
cmp
push
add
mov
call
xchg
add
insl
add
add
mov
add
cmp
sahf
dec
addb
add
xchg
daa
ffree
add
mov
fnstcw
mov
fwait
mov
fcom
add
inc
adc
mov
xchg
pop
popa
int
popf
imul
add
in
sti
fisubrl
daa
inc
repz
cli
outsb
mov
sbb
rolb
sub
rolb
jo
in
add
or
jecxz
add
add
adc
add
add
xchg
add
mov
sub
add
cmpsb
add
test
add
bound
mov
jno
imul
icebp
adc
aas
outsb
and
mov
add
inc
add
mov
repz
clc
out
stos
ljmp
lods
xor
mov
repnz
pop
addb
rolb
push
add
adc
inc
add
add
mov
sbb
add
add
call
add
push
cltd
or
rolb
dec
add
into
outsb
fldenv
inc
add
sub
mov
dec
mov
inc
add
add
push
add
adc
add
popf
loopne
imul
add
dec
or
sbb
lods
inc
and
pop
inc
add
add
add
and
jbe
adc
dec
cmp
ja
add
add
lcall
testb
adc
jnp
push
adc
add
add
add
add
add
cmp
int
int
gs
jb
mov
addb
addb
sub
add
sti
mov
or
testb
or
jmp
rolb
pushf
dec
in
icebp
js
ja
in
insl
mov
mov
add
shl
stos
xor
ss
adc
vmwrite
mov
lret
rcll
add
mov
add
or
mov
test
in
pop
mov
andl
sbb
lret
pop
in
dec
popf
ret
xchg
test
add
sahf
scas
cld
test
and
lds
add
mov
mov
repz
mov
cmp
sbb
mov
add
add
int3
dec
add
push
push
add
mov
fstpl
lods
sub
add
sbbl
ja
add
ret
fisttpll
ret
gs
and
mov
adc
stc
cmp
add
inc
add
add
adc
xor
add
mov
push
mov
aas
lret
xor
push
add
mov
cmpsl
mov
xor
addb
movsb
add
in
ljmp
add
pop
cmpsb
add
repnz
add
out
dec
fidivs
add
xor
sti
adc
fsubl
mov
mov
xchg
add
add
lods
push
repnz
jp
lods
lods
jg
inc
add
and
push
add
pop
cmpsl
addb
add
add
mov
lahf
fwait
sub
inc
ds
add
jmp
add
adc
add
add
mov
xor
pop
mov
data16
xchg
add
das
jmp
add
mov
add
test
clc
aad
add
mov
scas
push
repnz
arpl
push
add
std
out
cwtl
pop
ss
add
add
mov
xchg
dec
mov
add
out
dec
lock
hlt
add
mov
rolb
mov
or
stc
and
xlat
pop
sahf
pop
xlat
adc
bound
mov
jnp
xor
cmp
ret
add
xchg
mov
add
add
add
add
push
repz
xchg
add
mov
add
inc
rep
movsb
add
xor
int
pop
outsb
fstl
out
aas
cli
cli
pop
rolb
xchg
jbe
mov
add
lods
mov
cmp
jno,pt
stc
cmc
scas
xchg
and
mov
mov
aaa
cmpxchg
rolb
jno
add
data16
add
xchg
add
repnz
std
and
out
in
nop
add
jne
cmp
sub
xlat
jge
gs
add
add
xchg
rolb
mov
mov
or
sub
add
dec
mov
testb
enter
lods
movsb
add
mov
add
pop
fcmovne
call
cmp
shll
add
jmp
mov
dec
icebp
imul
add
mov
inc
add
cwtl
fldl
add
add
out
sahf
mov
or
add
mov
ja
insb
ljmp
xor
fisubrl
pushf
insl
dec
shll
bound
mov
mov
mov
rolb
cmpsb
add
or
scas
aas
test
inc
add
add
add
add
add
cmp
add
add
xor
cmp
clc
rolb
adc
lods
dec
pop
arpl
imul
xor
add
xor
mov
add
iret
mov
adc
dec
jnp
push
add
add
push
push
add
xchg
add
add
xor
add
in
jno
popa
add
mov
fcoms
add
add
mov
dec
sbb
inc
push
ret
mov
jl
pop
xor
jecxz
add
sub
pushf
push
add
addb
mov
xor
sub
test
cmc
pop
jmp
add
adc
insl
pop
mov
call
add
add
dec
adcl
lock
popa
loope
and
xor
pop
mov
push
shrl
adc
sub
add
sahf
add
mov
out
mov
add
add
rolb
scas
push
add
or
jnp
inc
add
out
xchg
add
mov
add
add
push
movsl
sbb
add
mov
mov
add
fisubl
mov
aam
xchg
lock
and
cmc
aam
movb
movsb
add
aam
push
add
out
cmp
pop
add
mov
add
fcmove
fbld
adc
aad
sti
jle
add
jmp
lds
and
idivl
add
add
pop
leave
sub
mov
test
add
add
insb
icebp
mov
xchg
dec
xchg
add
xor
mov
out
sub
scas
loop
fsubrs
rolb
mov
add
xchg
add
sub
inc
mov
add
popf
push
cmp
add
mov
rolb
jge
sbb
push
mov
es
lods
pusha
add
out
mov
notl
rolb
ds
sub
bound
mov
add
mov
arpl
add
mov
or
pusha
add
add
mov
xchg
add
out
dec
pop
and
jmp
add
lret
stos
add
mov
pop
cwtl
mov
add
add
mov
sbb
cmp
pushf
mov
sub
addb
add
lods
arpl
add
inc
je
fimuls
or
sbb
add
xchg
add
pcmpeqw
in
pop
pop
mov
jmp
jl
testl
or
into
and
stos
xor
or
out
rolb
push
add
fcmovu
pusha
add
leave
jmp
jmp
add
pop
mov
add
xchg
add
add
inc
icebp
jecxz
inc
cmpsb
add
sub
mov
push
add
loope
jnp
mov
inc
add
loopne
xor
dec
dec
lahf
adc
movsb
add
cmpsl
mov
jne
movsb
add
add
push
data16
cmc
lds
add
loop
sub
or
repz
hlt
add
fcmovnbe
add
add
push
pop
dec
jo
bound
mov
xor
cli
lret
xor
add
data16
mov
stc
or
add
adc
ss
stos
pop
adc
jge
fstps
into
pop
in
xlat
mov
jle
aad
add
add
add
mov
add
add
mov
popf
adc
xor
bound
mov
iret
addb
jne
cmp
loopne
sub
fidivl
add
add
lods
jg
jp
xchg
add
fdivl
int
std
lds
rolb
adc
test
lock
mov
pop
icebp
inc
add
outsb
je
in
std
lds
sbb
inc
movb
cmp
add
scas
sub
xor
in
in
pop
push
add
add
push
adc
add
adc
subl
pusha
add
mov
mov
jae
in
movsb
add
daa
mov
xcrypt-ctr
cmpsl
fistps
shll
add
inc
dec
xchg
mov
add
stc
cmpsl
mov
mov
outsb
add
mov
lahf
pop
mov
inc
add
arpl
mov
std
pusha
add
hlt
add
add
xchg
popa
out
in
dec
xchg
add
in
sahf
push
add
add
pop
je
xlat
fnstenv
scas
into
pop
addr16
inc
sbb
outsl
push
add
mov
mov
push
add
into
call
add
loop
pop
mov
aas
xor
stos
jp
add
mov
cwtl
cmp
and
xor
add
adc
mov
cmpsl
out
add
mov
xor
lahf
arpl
sub
push
add
mov
sub
add
in
and
out
mov
add
add
sti
fs
ret
sbb
add
mov
or
ret
hlt
add
add
fisttpl
cmp
popa
test
aam
loopne
inc
add
rcl
in
cmp
mov
insl
inc
add
mov
aas
xchg
xchg
add
and
add
add
adc
cmp
dec
in
xchg
add
add
add
rcll
mov
add
sbb
stc
xor
inc
add
sbb
mov
add
mov
sub
add
mov
add
cmp
xlat
mov
lock
add
add
ljmp
sub
add
pop
xchg
add
add
jns
push
in
adc
push
add
rorl
push
add
or
add
and
mov
das
push
sbb
in
js
cmpsb
add
mov
or
int3
cmp
add
add
jle
mov
out
push
add
add
inc
add
inc
add
inc
adc
adc
add
push
sbbl
jmp
or
add
add
cmp
sbb
fdivrp
xchg
add
fwait
pushf
sub
outsb
jle
pop
clc
push
add
dec
xor
or
rolb
or
cmpsl
and
add
inc
loop
movsb
add
mov
sub
imul
mov
xor
movsb
add
adc
jae
mov
cmp
gs
popf
xor
add
das
adc
jns
lcall
mov
jp
out
loop
mov
add
inc
sahf
mov
imul
mov
js
xchg
pop
mov
xor
cmc
fwait
sbb
add
add
sbb
inc
add
add
xchg
push
mov
add
lahf
add
mov
sbb
add
mov
pop
mov
cmp
sub
addr16
and
mov
add
add
add
xchg
rolb
inc
add
leave
mov
xor
fcom
arpl
cmpsl
lods
iret
and
mov
fisubs
add
add
add
insb
icebp
mov
pop
jne
add
add
adc
insb
addb
add
loopne
enter
add
mov
add
idivl
cld
out
add
push
push
fbld
mov
pusha
add
add
add
mov
or
push
pop
cmp
add
add
inc
add
cmp
add
add
rolb
cwtl
daa
or
pop
mov
out
dec
ret
leave
test
cmpl
add
jns
sahf
mov
push
out
xor
cmp
add
and
mov
adc
mov
and
mov
add
clc
sbb
and
scas
pop
out
test
fwait
inc
inc
lods
out
sbb
jge
cmpsl
pusha
add
jnp
addb
arpl
movb
test
add
add
add
or
lret
std
mov
xchg
xor
inc
add
add
mov
lret
int
inc
push
add
cltd
jecxz
add
add
add
ret
cmp
cli
mull
sahf
mov
add
add
mov
enter
nop
add
addb
mov
push
xorl
sbb
mov
fistpl
jnp
mov
lret
test
stos
ret
add
cmp
xchg
xchg
add
xchg
xlat
test
pop
mov
add
mov
and
inc
lods
pop
mov
add
add
add
and
pushf
or
pop
rolb
movb
sub
jge
add
inc
pop
mov
sbb
add
push
dec
add
stos
mov
arpl
notl
add
movb
add
jge
testb
add
add
ret
pop
call
xor
jecxz
add
xchg
add
mov
add
lcall
addb
bound
mov
test
sbb
int
push
pop
jo
pop
out
and
xchg
add
mov
in
pop
rolb
jnp
testb
int3
lds
add
scas
lods
rolb
call
add
pop
fdivl
testb
dec
xor
test
push
add
push
add
dec
std
and
mov
mov
add
add
add
int
das
cltd
aam
mov
mov
ficoms
popa
mov
cmp
add
add
xchg
mov
rolb
test
imul
mov
or
add
sbb
mov
mov
cmpsl
popa
ja
xchg
add
mov
cld
cmpsb
add
sub
push
fidivs
add
and
lret
add
pop
dec
push
add
or
mov
xchg
add
mov
push
loope
add
lea
mov
add
rolb
jne
das
scas
mov
flds
jg
cmp
add
add
aam
das
js
add
cmp
add
sbb
mov
xor
add
add
mov
mov
push
add
add
add
add
std
int
add
addb
lds
pop
pop
xchg
call
add
add
in
or
xor
popf
je
pop
dec
pop
push
add
lock
inc
add
push
add
mov
add
mov
addl
add
test
xor
ds
stos
imul
or
cmp
jmp
add
push
pop
fbld
in
jo
push
and
mov
mov
adc
lret
xor
test
add
insl
dec
movb
add
add
lods
movsb
add
dec
add
lea
add
inc
pushf
sbb
int3
fadds
lret
jecxz
add
lock
push
add
add
add
fdivl
or
in
lock
add
xchg
add
add
mov
shll
mov
add
sbb
lcall
clc
sbb
test
stc
repnz
repnz
cmp
add
jl
outsl
aad
arpl
lods
push
add
mov
dec
jmp
clc
sti
xlat
mov
add
rolb
xor
sub
daa
sub
out
in
add
push
mov
outsb
in
fbld
mov
push
add
add
add
add
lret
and
loope
add
mov
insl
clc
rorl
add
add
add
cmc
mov
add
add
dec
sub
ja
ret
test
cmpsb
add
xchg
add
clc
mov
jmp
add
jecxz
add
testl
and
mov
push
repnz
mov
icebp
or
xchg
add
fisttpl
dec
hlt
add
mov
add
mov
dec
mov
adc
daa
out
sub
lcall
into
and
cwtl
loope
stc
jge
add
jmp
js
add
sbb
adc
and
xchg
push
add
sbb
or
les
sbb
stc
cmp
add
out
and
sub
filds
test
mov
insb
je
and
inc
sahf
sbb
jg
ljmp
add
popa
dec
pop
loope
add
imul
mov
cmpsb
add
add
adc
add
ss
int
pop
dec
mov
add
adc
pop
pop
push
add
insl
ret
shll
mov
add
rolb
pop
in
mov
sbb
pop
movb
mov
mov
cmc
add
mov
push
add
push
pop
rolb
sub
jbe
jb
xchg
add
mov
add
add
call
out
mov
outsl
push
cmp
testb
dec
add
out
popa
sti
mov
sub
es
inc
add
insl
or
jbe,pt
xchg
lret
push
add
aaa
int3
adc
xor
push
aaa
mov
add
xchg
add
add
rolb
ja
add
dec
movsb
add
mov
add
mov
pop
jbe
std
jb
rolb
sub
mov
nop
add
xorl
jns
jb
inc
lock
addb
pop
pop
addb
add
xor
push
add
mov
dec
xchg
add
outsb
xor
sbb
add
dec
mov
test
add
xchg
push
sbb
pop
xor
lret
jo,pn
push
add
mov
loope
push
push
add
add
dec
rolb
push
add
rcr
ljmp
cmp
cltd
jge
add
add
je
push
mov
lea
dec
fstps
popa
jp
add
add
add
data16
imul
add
add
mov
sbb
jle
push
add
fcoml
enter
add
add
mov
add
mov
out
add
add
add
repnz
add
clc
iret
mov
add
add
add
add
mov
add
in
push
add
shll
mov
sbb
testb
nop
add
enter
add
scas
cmpsl
add
idivl
inc
add
fnstenv
dec
in
testl
add
add
add
lcall
mov
popa
bound
mov
popf
dec
push
add
xchg
clc
mov
aam
jp
xchg
add
cs
repz
into
mov
and
les
aam
xchg
add
xchg
aas
jae
idivl
dec
nop
add
and
add
mov
seta
xor
mov
lret
add
lock
or
add
cltd
xchg
add
and
cmpsl
xchg
xchg
ja
add
pop
aad
add
add
jo
iret
add
test
and
cmp
outsl
pop
daa
mov
add
mov
loop
mov
add
rcrl
bound
mov
out
add
test
push
test
test
add
cmp
inc
add
add
cmp
sti
fcmove
or
add
inc
add
ja
add
cmp
mov
mov
add
sub
insl
inc
add
or
push
fidivrs
stc
sub
add
xor
mull
mov
je
push
sbb
or
in
ja
add
sahf
movsl
mov
and
add
loope
add
pop
add
mov
add
ret
inc
jg
add
fwait
jae
add
dec
nop
add
add
adcl
enter
jbe
inc
add
mov
adc
jns
cwtl
les
xchg
imul
push
daa
icebp
mul
push
push
data16
iret
jns
sub
popa
lret
add
push
inc
add
add
jne
call
add
inc
add
imul
cltd
pop
mov
and
dec
into
je
idiv
mov
and
cmc
dec
repnz
js
add
fldcw
cli
movsb
add
or
mov
add
dec
rolb
rorl
sub
add
add
mov
add
scas
add
enter
add
mov
dec
inc
add
add
push
add
add
scas
sub
push
add
xchg
xchg
add
pop
add
mov
add
shll
add
icebp
call
inc
sub
add
push
fldenv
push
jle
jbe
or
xchg
add
in
loopne
pop
shll
imul
jb
lea
jno
or
add
std
dec
mov
dec
sub
aas
scas
mull
push
loop
neg
cmpsl
test
imul
icebp
sub
add
rcll
ret
push
add
mov
lds
iret
lcall
add
pop
repz
add
xchg
add
push
add
push
sub
mov
add
mov
and
leave
inc
add
mov
iret
ret
push
ds
fmul
mov
add
add
mov
xor
ds
add
inc
add
pop
sbb
test
add
popf
movsb
add
nop
add
and
addb
dec
scas
popa
xor
pop
mov
add
add
test
cmc
movsb
add
fmull
enter
stos
ljmp
mov
inc
ret
or
mov
add
cltd
pop
add
mov
jne
loopne
mov
pop
pop
jnp
inc
push
add
bound
mov
testb
testl
add
mov
leave
std
lret
add
add
in
xlat
mov
add
clc
inc
add
lahf
faddl
dec
js
ljmp
test
mov
push
add
aas
mov
add
data16
add
add
mov
out
mov
add
add
add
add
test
add
xchg
ja
add
mov
pop
mov
and
mov
aam
loop
jne
add
aad
xchg
add
add
or
mov
cmp
ret
jg
call
scas
mov
fwait
aam
cmp
adc
jnp
or
movb
add
xlat
push
jecxz
push
addb
sub
je
mov
add
test
or
add
popa
lcall
add
shrl
stc
stos
cmp
adc
push
lret
lcall
add
add
jge
in
dec
sbb
xchg
add
adc
subl
xchg
in
lea
sbb
bound
mov
add
out
shrl
fstpt
cwtl
daa
pop
das
arpl
xor
inc
hlt
add
add
out
pop
fbld
add
mov
mov
sbb
test
in
push
daa
mov
lea
mov
add
mov
jne
movb
sub
loopne
jecxz
add
add
add
inc
add
add
add
push
add
mov
aaa
loop
lock
or
add
sub
add
cmp
ret
stc
fdivrp
jb
jno
sbb
cmp
cmc
pusha
add
add
pop
or
xor
inc
add
rolb
insl
fsubrl
xor
pop
xor
xchg
add
sub
push
sub
mov
mov
add
repz
sub
cmpsb
add
add
ja
gs
pop
bound
mov
negl
push
mov
inc
cmpsl
cmpsl
or
add
add
and
mov
lock
or
jp
add
add
lds
or
stc
mov
ret
add
test
push
pop
ret
push
ret
nop
add
xchg
add
cmp
lea
cmp
insb
adc
adc
inc
add
add
push
rol
add
add
lret
inc
add
xor
daa
adc
mov
add
mov
pushf
out
pop
push
pop
xor
xchg
add
xchg
pop
jns,pn
inc
sti
or
mov
jge
scas
roll
mov
add
sub
pop
fiadds
add
popl
in
sarl
add
xchg
ficompl
push
xlat
mov
jb
mov
inc
add
mov
dec
scas
mov
mov
popf
jmp
add
xor
imul
add
mov
add
lcall
std
inc
fxch
xchg
pop
ret
aaa
mov
into
dec
jge
lock
or
xor
and
add
mov
push
add
sub
add
insl
aaa
dec
add
xchg
lock
add
add
xchg
test
loop
add
inc
add
add
adc
addb
pop
scas
pushf
push
add
mov
add
add
add
xchg
ljmp
add
add
mov
ljmp
add
push
add
out
pop
jne
loopne
shll
mov
std
stc
mov
pop
push
add
mov
rcl
add
ret
fsts
ret
mov
lock
fistl
cld
rolb
or
test
addb
stos
push
mov
and
mov
dec
mov
push
testb
adc
mov
add
add
inc
add
jae
add
add
xchg
hlt
add
add
outsb
mov
andl
add
mov
add
pop
mov
cmpsl
sbb
add
xlat
inc
fucom
add
jns
adc
mov
cmp
cmpsl
mov
jb
lods
push
adc
jnp
add
pop
adc
dec
int3
or
mov
push
in
leave
mov
xor
xor
out
stos
jb
and
add
mov
mov
sbb
adc
int
rolb
lock
add
pop
push
add
mov
mov
push
test
xor
cs
cmp
add
inc
add
das
mov
add
out
push
jo
xor
movsb
add
add
into
push
sahf
jle
loope
add
stc
push
arpl
rcll
add
add
add
into
xchg
call
add
cmpsb
add
mov
jp
push
add
inc
add
xchg
cmpsb
add
stc
or
cmp
push
add
inc
repnz
add
sub
inc
add
add
aas
lods
outsb
or
add
sbb
add
adc
cmpsl
data16
lahf
mov
mov
add
add
ljmp
test
out
lcall
jmp
add
mov
call
add
mov
or
ds
test
pop
sub
add
mov
fcompl
loope
test
mov
sub
movsb
add
push
add
add
fists
nop
add
lret
ds
adc
mov
add
add
pop
xlat
rolb
lock
xchg
add
pop
pop
icebp
lret
add
mov
jbe
arpl
out
mov
in
outsb
fistl
rolb
in
insb
test
loope
data16
add
add
add
popa
out
adc
add
pop
push
mov
add
add
movsl
or
or
mov
cmc
jmp
add
dec
repz
add
add
add
popa
mov
xchg
pop
push
add
add
jnp
or
andl
popf
dec
add
mov
jnp
clc
mov
lret
cmp
mov
add
ljmp
jnp
popa
mov
repz
or
add
aas
lret
clc
lods
xor
ja
gs
jae
and
jo
dec
or
loopne
mov
lcall
in
fimull
xor
add
cltd
sub
pop
test
fisubs
sbb
add
mov
jo
daa
cmpl
addr16
add
add
xchg
add
cmp
mov
pop
cli
dec
hlt
add
lods
sbb
push
add
fidivs
dec
cmpsl
insb
mov
mov
dec
outsb
jg
ret
sub
dec
addb
lret
sub
popa
sub
test
dec
cs
cmp
push
add
mov
add
cmp
test
mov
add
add
imul
add
add
add
sub
add
push
add
enter
pop
dec
aam
fdiv
add
fistpll
scas
xor
test
add
mov
dec
scas
dec
jne,pt
mov
add
mov
or
add
cs
cmp
stos
outsl
lods
jmp
add
add
mov
inc
or
sub
pop
mov
ja
add
pop
or
test
mov
dec
xchg
add
outsl
ret
call
add
cmp
icebp
test
cmp
and
ljmp
nop
add
mov
bound
mov
cmp
mov
outsl
xchg
stos
push
add
pop
daa
dec
lsl
pop
dec
xchg
add
mov
lods
add
lds
xor
add
cmp
add
push
nop
add
mov
mov
mov
add
push
shll
pop
shrl
clc
clc
mov
and
adc
scas
cmp
mov
mov
add
add
add
mov
add
enter
das
add
fdivrl
or
test
adc
add
jne
lods
pop
xchg
add
add
pop
test
roll
out
and
pop
add
mov
fists
les
inc
add
aam
xchg
cmp
xor
or
pop
xor
repnz
xchg
mov
sub
push
inc
add
cltd
dec
jns
aaa
pop
cmc
pop
jmp
jg
insl
xor
mov
out
loope
add
mov
push
add
and
sub
cmc
adc
jb
or
add
lret
test
add
or
pop
ret
or
lret
mov
jns
cmpsb
add
int
sbb
loopne
popf
add
add
jb
sahf
mov
lock
mov
mov
bound
mov
xchg
mov
into
xor
pop
daa
cmc
sti
add
add
popf
fs
mov
sti
lods
out
lcall
cwtl
test
add
mov
shl
mov
repz
out
adc
add
push
sbb
sub
xchg
add
adc
adc
in
shll
add
inc
add
outsb
insb
cmpsb
add
add
pusha
add
stc
pop
mov
daa
jp
int3
repnz
pop
int3
ljmp
add
js
push
mov
jo
test
out
inc
add
mov
mov
add
fidivrl
mov
data16
and
mov
add
pop
jge
insl
fchs
add
dec
mov
popf
mov
negl
add
adc
add
lcall
addb
dec
inc
add
cmpsl
sqrtps
mov
add
lods
xchg
loopne
pop
sub
pop
hlt
add
repz
xchg
jb
int
aas
xchg
add
dec
out
stos
add
mov
dec
ljmp
testb
inc
add
add
mov
jle
sub
mov
lret
in
outsl
sbb
mov
cmp
xor
stc
popa
sar
sbb
cmp
in
xor
je
push
clc
int3
nop
add
arpl
inc
lds
lods
mov
adc
add
orl
out
popa
out
add
push
add
aam
add
or
decl
rcrl
lret
xor
jbe
lahf
popa
jb
and
inc
add
add
nop
add
std
push
add
movsl
ljmp
rolb
pop
lea
add
add
push
fldenv
ja
add
mov
and
ret
out
xor
mov
push
adc
cmp
ret
add
sbb
inc
add
add
mov
mov
adc
mov
mov
pop
mov
sbb
imul
lds
push
add
fcomps
jo
sub
inc
add
out
jle
shll
xchg
add
adc
call
pop
lock
xchg
inc
daa
mov
push
and
stos
sub
add
cmp
cmp
add
push
add
cli
pop
addb
add
mov
add
xor
dec
xchg
addb
add
add
pop
dec
ret
sub
ret
sub
fldpi
aam
int
cld
jl
fcmovbe
jge
mov
sbb
inc
xorl
clc
aas
push
add
xchg
test
loop
icebp
imul
mov
mov
jnp
lahf
push
mov
in
pop
jb
leave
and
inc
add
aam
js
call
aad
popa
add
inc
add
outsb
fwait
push
movb
jns
imul
add
pandn
add
add
mov
das
repnz
or
pop
scas
mov
add
add
outsl
filds
add
jae
add
add
push
sub
xor
sbb
outsb
test
pop
push
add
mov
mov
hlt
add
cld
cli
aas
rcl
fwait
pusha
add
pusha
add
add
or
add
add
jl
cwtl
sbb
mov
jo
cltd
rolb
add
fnstcw
fldt
add
inc
fcmovnu
mov
add
jg
add
add
add
jmp
shll
jl
xchg
pop
jno
out
sub
pop
add
test
pop
and
stc
hlt
add
out
push
add
add
mov
testb
pop
insl
frstor
mov
lds
sbb
fimull
add
add
clc
into
addb
cwtl
cmpsl
mov
and
push
add
sti
call
cmp
mov
pop
in
cld
in
lahf
dec
dec
mov
loop
push
add
inc
fwait
push
add
add
into
lret
sti
cltd
mov
les
movsl
js
dec
cmc
pop
push
add
push
popf
xchg
add
movb
sub
out
pop
pop
dec
xchg
add
mov
mov
shll
mov
or
xor
dec
jns
adc
mov
add
mov
aaa
scas
sub
jge
cmp
bound
mov
inc
inc
add
add
rolb
aad
pop
and
add
add
pop
aas
cmp
loopne
out
outsb
rolb
aas
add
add
jecxz
add
and
mov
or
sbb
push
imul
mov
push
or
iret
outsb
add
mov
testl
mov
aad
add
lods
scas
or
fwait
cmp
mov
inc
ret
in
mov
inc
add
mov
and
jecxz
xor
mov
stc
cmp
add
popa
js
mov
mov
add
sahf
pop
jne
rolb
push
jns
add
sar
add
cli
nop
add
adc
sbb
inc
add
fildl
dec
inc
bound
mov
ja
sub
add
stos
cmp
addb
pop
sbb
inc
add
jg
xchg
xor
push
add
repz
push
ret
pop
rolb
or
mov
pop
stos
outsb
xor
pop
pop
rolb
mov
sbb
lahf
setae
scas
imul
xor
stos
fdiv
or
add
add
mov
pop
add
stc
sbb
add
add
jnp
adc
pop
test
fdivp
out
insb
popa
test
add
addr16
jmp
or
cmpl
aas
out
in
test
daa
enter
mov
and
pop
adc
mov
and
mov
mov
test
inc
add
cmp
pop
adc
pusha
add
ljmp
cmp
and
and
lcall
push
add
sbb
lods
jle
addb
arpl
add
add
test
lods
xor
lods
pop
add
das
psadbw
sbb
mov
add
dec
add
jns
sub
add
dec
ljmp
inc
sbb
add
add
fwait
mov
cmpsb
add
ret
test
inc
pop
cli
icebp
loop
mov
popa
cmp
pop
push
lds
jb
add
data16
ret
add
std
int3
add
add
add
sti
jge
push
add
mov
pop
rolb
or
inc
add
add
ret
jecxz
pavgb
out
and
xlat
gs
rorl
arpl
das
inc
add
mov
scas
and
in
add
stos
jp
add
xor
sti
call
insb
dec
sbb
add
xchg
ficomps
movsl
xchg
mov
loope
add
in
push
add
pop
add
or
mov
int
xchg
xchg
add
mov
add
test
lods
fsubrs
add
add
into
push
pop
mov
add
add
add
mov
add
sub
lods
xchg
add
add
add
add
add
add
mov
jo
pop
stos
pop
sub
stos
mov
icebp
cltd
adc
xor
dec
jbe
jecxz
push
add
sub
popf
dec
jno
or
add
gs
mov
xchg
add
fcmovnbe
add
testb
icebp
dec
rolb
insb
testb
add
add
jmp
push
sbb
das
mov
add
clc
cmp
push
add
xchg
pop
or
popf
int3
jp
stc
and
mov
mov
outsb
dec
adc
add
add
add
or
add
frstor
add
sahf
lods
mov
xor
or
jl
dec
xlat
fsubrs
iret
and
mov
rolb
jge
dec
xor
pop
into
ja
or
inc
add
xchg
add
cli
cmpsb
add
imul
adc
push
lock
in
mov
sub
add
push
movsl
ret
mov
pop
lret
push
sbb
push
out
stos
lret
out
cwtl
flds
add
aaa
inc
add
pop
pop
clc
insb
pop
cmpl
or
gs
sbb
inc
add
add
and
mov
cwtl
popa
addb
add
inc
add
inc
add
call
xchg
ss
fmulp
lods
addb
add
sub
add
jns
add
add
push
add
jl
bound
mov
cmpsb
add
jns
aaa
inc
add
add
mov
rolb
into
stos
add
cmp
scas
test
add
adc
mov
in
jnp
inc
add
iret
pop
jno
test
icebp
jb
or
test
add
cmp
add
rolb
jge
imul
add
dec
mov
cmp
push
sti
jg
loopne
cmc
js
fidivl
add
fildll
xchg
add
into
mov
ljmp
cmc
push
add
cmp
cmc
push
pop
insb
sub
cmp
sbb
xor
cmpsb
add
sarl
add
push
add
or
andps
in
int3
pushf
and
xor
adc
gs
data16
push
add
testb
add
add
push
add
popl
add
insb
mov
add
bound
mov
add
pop
jecxz
testb
add
ret
add
add
imul
lods
stos
sub
mov
stc
and
mov
jo
xchg
add
and
adc
leave
call
add
stc
pop
adc
iret
fst
cmp
lahf
mov
add
lret
mov
add
add
rolb
add
fiadds
add
inc
add
add
xchg
add
push
dec
rolb
mov
adc
jb
mov
mov
outsb
mov
xchg
add
add
pop
sbb
loopne
imul
add
scas
dec
sbb
stos
mov
add
push
loope
push
add
ljmp
jmp
sar
push
mov
hlt
add
mov
jl
add
cli
test
add
fimull
xchg
pop
xchg
add
add
push
add
add
jge
jge
add
ljmp
mov
fdivs
add
pop
and
mov
push
or
daa
mov
ds
lods
filds
ficoml
testb
add
pop
pop
test
add
jae
or
add
xchg
js
cmc
jl
and
imul
mov
lods
loope
pushf
cmpsl
iret
std
push
add
or
movsb
add
add
lahf
mov
cli
xchg
jb
fldcw
icebp
xor
adc
adc
pop
adc
add
test
dec
pop
fldt
jg
jbe
testl
or
das
jne
add
inc
add
mov
mov
addl
fisubs
sbb
add
dec
fwait
mov
shll
bound
mov
add
inc
insl
push
out
imul
add
xchg
cmp
add
mov
mov
call
add
push
add
fidivs
add
rorl
in
mov
add
add
jo
out
push
xchg
jle
add
add
and
xor
addb
sub
mov
lock
add
sbb
add
add
movsb
add
mov
mov
mov
sbb
add
pop
dec
in
jge
cmpl
xor
imul
pop
aam
dec
in
mov
mov
or
mov
cli
and
add
add
add
add
add
add
add
cli
cmp
cmp
inc
cld
inc
add
into
cmp
add
inc
add
mov
cmp
ret
inc
add
cmpsb
add
mov
pop
xlat
xchg
add
add
jmp
movsb
add
cmp
add
add
add
add
into
push
add
data16
mov
mov
xor
iret
je
and
mov
add
add
sbb
out
xchg
aam
ljmp
aas
pop
adc
ficompl
das
pop
add
mov
add
pop
adc
mov
mov
jle
push
add
lcall
stos
add
xchg
gs
add
fsubl
add
int3
dec
addr16
in
push
mov
repz
add
xorl
arpl
add
add
push
dec
int3
xor
addb
or
and
add
cld
outsb
test
das
movsb
add
and
mov
gs
ror
lods
stos
pop
das
movl
sub
rolb
push
add
inc
out
rolb
add
mov
movsb
add
outsb
fwait
adc
mov
sub
add
add
mov
outsl
dec
out
sub
or
mov
add
out
in
jo
mov
xchg
addb
add
test
pavgw
outsl
pushf
add
sbb
ss
das
xor
out
push
xor
jno
add
push
add
cmp
add
jns
stos
loop
fiaddl
add
mov
jne
lea
add
testb
add
out
rolb
add
mov
mov
xchg
add
out
mov
fwait
jp
or
js
sbb
cli
or
add
add
add
out
fimuls
jmp
cmp
inc
add
test
pop
in
fimull
sbb
ds
xchg
add
dec
aas
rolb
dec
xor
pop
cmpsb
add
jmp
mov
add
or
adc
dec
aad
add
add
cltd
inc
add
mov
adc
lock
add
daa
pop
rolb
xchg
addb
vpmaxsw
bound
mov
add
mov
das
add
pushf
inc
add
gs
pop
mov
and
test
add
mov
xlat
xor
lea
dec
lods
loopne
push
add
jnp
add
add
add
inc
and
rolb
add
mov
add
add
lea
jle
add
xchg
sub
jo
pop
movb
mov
cmc
mov
mov
add
push
jge
pop
mov
insl
pop
and
mov
pop
test
sbb
subl
and
mov
add
lods
sbb
add
ja
xor
push
sbb
fiaddl
add
popf
sbb
sub
pushf
sarl
rolb
flds
add
sbb
lret
and
pop
and
mov
je
iret
test
pop
pop
pop
pop
push
add
adc
lret
add
adc
or
mull
mov
fcomps
imul
mov
add
jbe
sub
mov
mov
mov
in
fbstp
add
inc
or
push
push
inc
add
mov
sti
xor
mov
movb
mov
iret
jb
add
mov
add
insl
ret
fmul
adc
mov
pop
push
add
add
lea
lret
pop
dec
scas
lods
pushf
aas
add
add
das
or
inc
add
leave
testb
xchg
add
xor
pop
sahf
dec
mov
push
sbb
fwait
add
mov
repnz
decb
and
mov
sub
add
sbb
add
insl
out
into
cmc
cmpsl
jae
add
in
sub
mov
add
repnz
testb
movsb
add
fsubr
xchg
add
and
push
mov
dec
mov
cmp
into
lcall
addb
add
js
mov
jno
jne
arpl
xor
push
add
cld
inc
add
add
adc
jecxz
mov
add
xchg
inc
add
add
into
sbb
xor
pop
in
cmp
xor
cltd
pop
pop
jg
mov
mov
aaa
adc
add
add
mov
xchg
test
sti
xor
adc
cmp
add
ret
test
xchg
cmp
iret
mov
pavgb
ret
xchg
testb
push
sub
in
test
xor
add
in
lds
nop
add
ljmp
pusha
add
pop
aaa
mov
mov
pcmpgtw
aaa
xchg
and
iret
mov
push
insb
mov
mov
or
jge
lods
mov
mov
fmuls
add
add
ret
dec
add
mov
mov
loop
push
add
xchg
xchg
dec
xlat
jmp
mov
and
add
add
mov
add
sbb
and
add
jns
add
movd
jecxz
add
sahf
xchg
sbb
insl
dec
adc
popa
lds
jecxz
cwtl
mov
subl
cmp
jge
inc
jmp
add
das
xchg
add
add
mov
stos
cli
mov
dec
ret
inc
add
mov
out
aaa
cmp
add
pop
cwtl
and
add
add
shll
mov
add
leave
mov
arpl
add
es
in
sub
or
add
add
les
jl
add
fildll
jmp
xor
scas
addb
add
xor
in
sbb
add
add
mov
out
je
add
rcr
lds
mov
cwtl
in
ret
inc
jge
add
leave
add
jo
mov
add
cmp
add
cwtl
xchg
xchg
inc
add
roll
jge
rolb
addb
adc
inc
repnz
scas
mov
add
pop
jecxz
push
add
mov
adc
add
movb
in
stos
and
leave
ja
sub
scas
filds
das
idivl
add
bound
mov
movb
add
clc
clc
jns
add
add
add
inc
sti
addb
add
lock
je
pop
dec
fnstenv
pop
movsl
or
dec
add
rolb
push
mov
add
add
in
imul
fiaddl
push
add
test
add
add
repnz
int3
in
loopne
mov
test
sbb
add
add
add
lock
add
sub
jo
push
add
cli
les
mov
xchg
add
add
mov
scas
add
pop
in
push
add
inc
add
add
add
add
or
in
das
or
outsb
pop
mov
add
cmp
or
or
loope
xor
pop
test
cmp
add
cwtl
hlt
add
add
mov
fwait
int
jmp
out
aas
jae
mov
test
add
add
out
fnsave
add
ret
add
add
mov
add
dec
aam
or
add
cmpsl
leave
lret
nop
add
pushf
jmp
dec
out
leave
fwait
xchg
add
or
jne
loope
add
mov
add
jp
add
in
in
xchg
add
push
daa
sti
inc
int3
or
pop
xchg
test
stos
fadds
mov
xchg
into
pop
lock
pop
inc
ret
lock
add
testb
cmp
mov
and
mov
pop
jl
add
push
add
pop
push
mov
add
push
add
adc
dec
jns
lods
mov
mov
push
add
inc
jge
add
add
add
out
repz
cld
mov
mov
pop
rolb
out
mov
or
call
mov
dec
cltd
adc
dec
or
add
push
repz
xchg
fwait
aad
add
push
add
bound
mov
add
std
adc
daa
mov
sub
pushf
mov
adc
call
stos
arpl
mov
add
pop
mov
add
cmpsl
fcmovne
sbb
xchg
cmpsl
loop
push
mov
add
mov
bound
mov
xchg
je
xchg
xor
imull
imul
xor
jg
cltd
xor
add
mov
sti
mov
mov
dec
or
add
mov
cmc
call
push
add
jae
orl
ficoml
les
and
mov
sub
xchg
sub
add
jne
movsb
add
add
and
sbb
xor
popa
lods
movsb
add
add
add
add
xor
add
xchg
add
mov
dec
and
sub
inc
add
lds
lcall
gs
mov
icebp
push
add
leave
cmp
lcall
loop
push
add
outsl
insl
ds
movb
xlat
mov
jb
popf
jge
lcall
xchg
cmp
outsl
xor
je
add
das
sbb
push
xor
sbb
testb
add
add
out
sub
repz
aam
in
fsts
inc
add
pop
aam
xor
fwait
dec
add
mov
mov
outsl
jge
add
add
mov
sub
xor
sub
mov
jmp
std
inc
add
addb
jae
add
jp
mov
adc
rolb
lds
push
dec
push
hlt
add
cltd
push
add
mov
mov
add
mov
addl
add
xor
push
add
xchg
add
out
push
add
clc
xchg
loope
fildl
mov
xor
jp
jns
add
and
and
in
xor
shl
dec
adc
icebp
out
push
push
shrl
push
add
punpckhdq
add
inc
mov
movsl
pop
insl
xlat
xor
scas
pop
sub
mov
mov
mov
lods
add
je
ret
in
mov
pop
out
imull
mov
in
push
mov
xchg
dec
sub
cld
stc
jnp
or
pop
outsl
lds
in
lahf
decl
cmp
lret
mov
scas
inc
add
add
sti
insl
jmp
pop
inc
add
xchg
test
in
inc
add
add
nop
add
add
xor
sbb
mov
mov
pop
mov
rolb
cmp
cmpsb
add
add
add
mov
cmpsb
add
sbb
add
int
mov
inc
and
push
add
jne
and
in
movb
lret
sbb
minps
add
add
and
cmp
add
add
push
add
add
mov
inc
or
out
imul
push
push
add
xchg
xchg
push
add
daa
jns
push
add
outsb
mov
das
dec
pop
shll
inc
add
in
jle
bound
mov
mov
add
xor
fadds
cmp
das
jmp
add
add
xorl
in
icebp
or
inc
add
jg
data16
push
add
scas
lahf
popa
xor
add
add
add
push
jmp
rolb
mov
push
pusha
add
add
cmpsl
stos
in
or
inc
out
lea
mov
xor
adcl
sub
loop
and
imul
shll
fidivs
adc
test
dec
mov
fisttpll
jb
rcll
shll
mov
js
ja
add
ja
xor
mov
push
add
stos
adc
xor
add
inc
fsubl
jae
and
mov
add
dec
add
push
movsb
add
sub
rcrl
fbld
ljmp
nop
add
rolb
sti
scas
jg
and
stc
cmp
or
sbb
outsl
test
dec
rolb
and
jnp
cmpsl
repz
mov
push
out
les
jge
mov
mov
cmp
sti
rep
and
mov
push
add
cld
or
add
pop
pop
aam
mov
add
inc
lret
repz
add
mov
add
mov
pop
pusha
add
pushf
push
add
add
inc
add
push
add
dec
mov
add
hlt
add
add
add
or
outsl
enter
inc
add
test
add
add
or
and
push
or
add
icebp
push
add
dec
insl
ds
add
lds
xchg
add
mov
xor
cwtl
fdivp
test
fwait
jle
add
out
and
xchg
test
setbe
jae
add
mov
push
int3
jno
add
add
add
icebp
addl
lods
in
in
xchg
add
mov
push
add
stos
xchg
add
adc
or
dec
sub
pop
scas
add
and
xor
dec
shrl
movsb
add
mov
lods
jno
repnz
add
or
inc
mov
adc
dec
add
out
adc
leave
add
loope
add
jb
add
xor
jmp
cmpsb
add
pop
push
add
add
add
movsl
ret
mov
add
loope
filds
out
mov
mov
pop
or
cmp
das
xor
jae
pusha
add
mov
xor
add
add
icebp
in
add
pop
add
in
push
add
push
add
sti
outsb
rolb
pop
xchg
test
fsubrl
and
mov
outsl
cmp
insl
rolb
inc
cwtl
pop
pop
jns
cmpsl
iret
addb
sub
rcr
add
push
add
add
mov
lcall
inc
loopne
xor
gs
testb
stc
ljmp
std
xor
lods
std
clc
push
sbb
fnsave
adc
inc
add
add
call
add
mov
pop
ljmp
or
add
insb
push
mov
sarl
lret
inc
testb
loopne
data16
add
add
test
loop
cld
pop
xchg
mov
jne
add
add
add
add
push
jmp
cmp
add
push
popf
clc
cmp
jb
iret
in
inc
add
add
dec
mov
imul
or
pushf
sub
pop
les
dec
ss
out
ljmp
xor
xchg
mov
mov
or
insb
pop
mov
add
sahf
cmp
sti
inc
mov
add
dec
test
add
cmp
push
add
sub
inc
inc
add
sti
mov
add
mov
out
lock
xor
inc
push
add
add
imul
fdivs
add
and
or
out
bound
mov
aad
jnp
add
add
js
lret
ficoml
mov
pop
push
sbb
stc
leave
stc
cmpsb
add
mov
add
stos
jno
adc
fstp
mull
xor
mov
insl
cltd
js
add
add
cmpsb
add
call
add
sbb
xor
jns
ljmp
iret
mov
popa
frstor
sbb
sub
lods
cmovns
xor
nop
add
sub
push
add
cld
pop
push
add
movb
xor
sbb
addb
and
inc
sti
testb
add
mov
pop
and
xlat
fmulp
cmp
add
xchg
sub
dec
push
add
repz
fstpl
fbld
jno
dec
lods
cltd
jo
jne
mov
add
test
iret
mov
add
xchg
add
add
xchg
sub
cmp
add
hlt
add
je
sub
add
mov
pop
lea
out
les
das
mov
leave
outsl
sbb
jecxz
fstpl
push
sub
mov
add
fmuls
add
cmp
jo
push
add
add
adc
cmc
scas
pop
stc
mov
sub
movsl
dec
mov
jge
push
add
mov
testb
movsb
add
add
adc
add
adc
sub
add
adc
movsb
add
cmc
ret
mov
mov
out
cmpsl
movsb
add
add
mov
mov
movsl
sub
subl
insb
mov
pop
pusha
add
int3
fnsave
add
and
add
pop
mov
add
outsl
stos
sbb
jbe
xchg
add
rolb
out
lahf
xchg
jbe
cmp
or
and
push
call
call
add
cmp
add
pop
fstl
addr16
cmp
push
add
jmp
mov
add
je
pop
bound
mov
xchg
add
repnz
xchg
and
mov
add
rorl
cmp
mov
pop
je
mov
jl,pn
add
add
push
es
mov
addb
add
int
pop
xchg
xor
sub
add
lret
cmpsl
sbb
add
add
jno
add
add
and
cmpsb
add
test
arpl
xchg
add
push
add
add
add
add
mov
add
gs
jo
mov
cmp
add
push
add
add
add
movsb
add
inc
cltd
add
add
jo
pop
jae
sub
push
aam
jno
push
mov
outsl
mov
out
ljmp
add
mov
mov
sub
ret
jmp
pop
pop
push
je
jnp
mov
push
fst
add
or
inc
add
outsb
cmovge
mov
sbb
mov
ret
and
mov
pop
pop
mov
adc
add
add
ss
xchg
add
add
and
mov
add
aam
insl
sub
add
add
lahf
cmp
jno
addb
je
stos
js
in
insb
xor
or
xchg
or
add
xchg
add
inc
add
gs
scas
sub
rolb
add
add
in
test
aaa
xor
mov
inc
add
add
mov
pusha
add
add
pop
mov
aas
in
push
add
cmp
in
pop
cmpl
addb
mov
jmp
rolb
test
add
mov
pop
rolb
out
push
std
lret
bound
mov
leave
fldl
xor
xchg
add
sbb
pop
sahf
mov
test
add
xor
cmp
testb
add
das
cmc
dec
mov
cmp
mov
add
and
mov
xchg
call
sbbl
dec
cmp
js
add
push
loope
add
add
mov
dec
mov
pop
xchg
arpl
mov
xor
rolb
aam
cmp
or
inc
cmp
jmp
in
xlat
pop
not
pmaxsw
push
add
add
mov
add
add
sahf
xchg
add
jo
sbb
loopne
add
iret
cmpsl
add
inc
add
jnp
push
add
xchg
add
xchg
mov
fsubrs
iret
pop
cmp
mov
adc
add
and
add
or
cli
add
mov
dec
push
add
mov
call
mov
push
add
stc
jbe
push
add
add
outsl
jnp
mov
inc
add
dec
cmp
xchg
mov
add
jge
fsts
push
add
add
add
add
ds
mov
xchg
into
cmp
pusha
add
inc
adcl
repz
dec
into
dec
xchg
xor
ja
sbb
add
xchg
xchg
rolb
stc
dec
ja
pop
add
pop
shrl
add
out
aaa
mov
jo
add
mov
add
cmp
jp
leave
sahf
into
lock
add
push
add
test
xor
imul
popf
jbe
cmpl
push
add
add
add
data16
push
add
fcmovu
inc
xchg
xrstor
and
js
add
add
sub
outsl
and
mov
mov
mov
dec
mov
xchg
into
and
xor
add
adc
add
add
cwtl
inc
adc
js
pop
lret
cli
mulps
add
add
cmp
add
add
add
push
scas
lea
cwtl
pushl
rolb
fneni(8087
add
sbb
add
add
add
add
sbb
sub
add
push
mov
pop
mov
out
imul
pop
dec
fistpl
cmp
mov
data16
xchg
arpl
cmpsb
add
cli
or
orl
sbb
xchg
out
lods
adc
pop
or
lock
jmp
imul
add
sbb
inc
add
or
add
mov
jae
add
jle
add
call
cltd
fidivrl
add
and
push
mov
add
mov
rolb
jle
mov
daa
leave
testl
mov
xor
mov
add
pop
addb
mov
push
add
add
add
xor
arpl
cmp
add
add
add
sbb
add
repz
arpl
flds
add
add
inc
addb
add
cld
cmp
les
sbb
out
je
and
outsl
mov
dec
pop
lds
add
fbstp
lcall
loopne
sbb
ficompl
add
add
ret
add
add
and
sub
cmp
add
add
add
add
add
js
fmul
adc
fisubrl
xor
xorl
jge
sbb
add
inc
xchg
add
add
add
inc
add
add
popa
iret
adc
stos
cmc
xlat
fnstsw
repnz
gs
es
add
add
adc
cmpsl
mov
add
cmpsb
add
jnp
add
add
das
rcl
mov
inc
add
stos
js
mov
pop
and
mov
add
hlt
add
sahf
add
add
add
test
in
sahf
out
sbb
lods
mov
add
jmp
dec
dec
xchg
movsb
add
add
mov
cmpsb
add
jb
std
mov
inc
call
aam
int3
push
cmp
add
pop
leave
add
mov
mov
add
add
mov
push
add
jmp
fsubr
lods
iret
inc
ret
ret
addr16
cmp
es
jp
sbb
scas
cltd
nop
add
add
cwtl
mov
incb
add
add
out
roll
add
mov
add
stos
popa
movsl
mov
add
add
pop
stos
mov
addb
ja
xchg
ja
dec
subl
add
inc
jp
dec
cmpsb
add
jle
push
add
mov
inc
inc
bound
mov
sub
pop
testl
or
stos
addb
or
pop
dec
add
xchg
add
push
adc
fiadds
mov
add
add
add
mov
mov
cmp
add
movaps
cmp
pop
ja
jnp
jns
add
sbb
pop
loop
and
movsb
add
jge
add
xchg
add
add
loope
xor
add
testb
jmp
aaa
pop
add
mov
cmp
clc
scas
pop
fnsave
or
mov
mov
int
add
add
mov
jge
add
xor
movsl
shl
es
loopne
ds
xchg
testb
mov
add
add
add
jecxz
add
les
push
add
push
out
and
addb
sarl
loope
add
call
mov
add
or
mov
add
add
fprem
ljmp
add
push
add
jmp
xor
testb
mov
leave
hlt
add
dec
clc
decl
ja
cmpl
in
aad
add
push
mov
pop
xchg
jmp
or
shll
sub
loop
adc
add
push
add
mov
add
ja
add
dec
addb
dec
push
xchg
cmp
enter
out
rcrl
cmp
mov
std
imul
add
imul
add
mov
fldl
add
xchg
into
js
push
add
cmp
test
outsb
inc
add
jl
add
int3
pop
out
imul
add
add
jno
jmp
add
fldenv
pop
pop
cltd
pushf
notl
add
cmp
dec
pop
mov
sbb
loop
xlat
or
push
add
dec
jmp
ret
outsl
fsubrl
mov
stc
mov
add
fidivrl
mov
stc
rolb
test
lret
pop
dec
pushf
cltd
test
inc
add
fwait
jno
pop
dec
int3
or
incl
scas
dec
fwait
adc
arpl
add
out
pop
jecxz
jg
lret
movsl
jmp
xchg
jp
pop
xchg
cmpl
out
int3
call
dec
inc
data16
jge
cmp
mov
add
adc
popa
pop
jmp
xor
movsl
adc
jecxz
add
call
xor
aad
add
mov
jns
add
lret
aaa
ja
incb
add
sbb
and
mov
jp
mov
push
aad
dec
ja
add
add
jp
add
add
flds
daa
pop
dec
enter
mov
data16
testl
pop
add
faddp
add
or
add
mov
mov
mov
fwait
mov
lods
pop
test
loope
rolb
out
movsb
add
lods
xchg
dec
and
adc
add
add
dec
add
xchg
lea
add
xchg
add
add
clc
mov
mov
adc
mov
cmc
ds
into
pop
pop
jl
testl
mov
fistl
xor
jl
stc
fsubrs
pushl
jnp
testb
pop
mov
bound
mov
pop
inc
add
jmp
adc
mov
js
inc
add
add
out
or
cmp
movb
xchg
add
add
or
icebp
stos
cmpsl
subl
ds
sub
or
popf
dec
fistpll
add
loope
mov
add
mov
add
add
lret
mov
in
pop
rcll
ds
add
add
add
fnstsw
pop
and
inc
sbb
inc
add
add
or
scas
in
inc
sbb
add
scas
mov
aam
std
sub
push
dec
inc
add
ljmp
add
push
mov
in
roll
mov
ljmp
stc
jbe
int
repz
loope
add
mov
add
add
mov
je
data16
pop
jle
add
ret
out
fsubrs
in
push
add
or
mov
jne
mov
mov
push
sbb
cmpsl
sahf
inc
faddl
mov
leave
lahf
ljmp
ret
clc
testb
xor
add
add
add
pop
outsl
icebp
rolb
or
popf
add
add
inc
add
xchg
add
mov
mov
aam
jb
outsb
in
cmp
add
add
add
push
xor
repnz
lods
sbb
mov
xchg
es
sbb
xor
add
sbbl
int
add
stos
jae
add
or
add
add
rorl
and
add
add
xchg
add
jge
add
mov
enter
fisubrs
add
mov
test
add
mov
add
xor
mov
addr16
rorl
add
pop
or
add
adc
xchg
sub
add
test
outsb
and
int
adc
outsb
std
test
xchg
add
add
icebp
jmp
add
add
stos
dec
xor
lret
loopne
sbb
sti
aad
jns
add
push
add
xor
aam
pop
push
hlt
add
add
add
add
add
stos
pop
add
mov
out
je
in
lods
lret
cmp
addb
sub
pop
imul
scas
icebp
loop
popa
xor
je
add
add
add
stos
mov
xchg
cli
addb
and
mov
add
aam
push
add
call
add
mov
add
lods
dec
lock
lds
test
lods
add
hlt
add
mov
xor
add
hlt
add
inc
add
lcall
xor
jns
sub
dec
call
add
dec
add
addb
mov
mov
test
cmpsl
sub
pop
push
add
movb
mov
and
add
fwait
std
xchg
add
jle
add
cmp
movb
add
in
jg
inc
add
xchg
add
mov
sahf
inc
add
mov
xor
clc
in
add
cmpsb
add
aaa
pop
cltd
addb
add
rolb
mov
or
fildll
mov
loopne
add
mov
inc
cmp
int3
cmp
jns
jo
arpl
mov
add
add
scas
mov
add
add
sub
add
jmp
cmp
add
jne
scas
pop
shll
nop
add
mov
xchg
inc
add
lea
daa
mov
add
add
arpl
cmp
fiadds
mov
data16
adc
add
push
mov
arpl
pop
andl
movsb
add
add
push
adc
les
test
jne
mov
add
add
inc
pusha
add
mov
sbb
push
add
xchg
inc
add
icebp
insb
push
add
call
sub
mov
shrl
je
enter
pop
cmp
add
inc
push
add
ret
cmp
into
scas
enter
addr16
fsubrp
jge
xchg
push
add
mov
add
sbb
sub
cmpsb
add
add
mov
jg
add
jg
fld
dec
or
jb
cmp
or
xchg
add
pop
fs
dec
ror
out
addr16
add
mov
or
cmc
lcall
gs
add
jo
aad
ds
or
or
roll
addb
addb
ret
fs
out
sahf
idivl
xor
add
pushf
and
sahf
lcall
andl
inc
add
rolb
stos
out
add
in
mov
sahf
push
movsb
add
push
inc
add
jno
xor
mov
xchg
add
or
mull
push
add
leave
popa
jmp
sbb
lret
cmp
mov
pop
mov
std
jmp
add
pop
jb
mov
add
rolb
add
xlat
cmp
pop
adc
xchg
xchg
insb
sbb
arpl
add
rcll
jno
add
sbb
push
add
test
cmp
in
jmp
jmp
add
mov
cmp
jbe
push
js
adc
sub
arpl
test
scas
inc
and
mov
mov
add
add
add
test
mov
fistpll
adc
add
pop
xchg
add
add
inc
ja
mov
jno
mov
sbb
sbb
outsb
popa
iret
lods
pop
add
daa
sahf
xor
jmp
inc
add
add
xchg
pop
movsb
add
pop
icebp
cmc
xchg
add
add
clc
aad
cli
enter
add
data16
add
add
ljmp
xlat
mov
cmc
pop
mov
add
je
les
pop
rolb
ja
hlt
add
add
sbb
sbb
add
add
pop
popl
lds
push
add
push
add
inc
xchg
add
add
inc
add
add
fdivs
xor
lret
push
add
ljmp
jmp
jo
stos
insb
cmpsb
add
addb
add
addb
push
aad
pop
pop
add
and
aad
add
mov
cmc
and
mov
add
int3
cwtl
inc
push
testb
cwtl
mov
and
jl
xor
add
std
rcrl
std
loopne
clc
mov
lods
rolb
xor
cmp
cmp
add
jbe
xor
inc
add
add
mov
add
adc
inc
add
add
scas
lcall
lock
fbld
add
mov
das
repz
add
cli
adc
psrad
xchg
add
test
lret
call
aam
sarl
test
dec
pop
jmp
adcl
add
mov
xchg
sub
and
cmp
fiaddl
mov
mov
fnstsw
mov
punpckldq
mov
push
add
sub
add
add
add
add
xchg
pusha
add
pop
jle
add
xor
push
mov
add
adc
aad
enter
data16
insb
imul
in
into
add
fildll
add
mov
mov
xor
and
outsb
sahf
mov
add
add
mov
sbb
ret
add
adc
pop
or
add
push
mov
mov
mov
add
cmpsl
push
pop
test
add
or
add
mov
daa
mov
jp
dec
cmc
mov
into
jo
sub
add
mov
add
pop
test
mov
add
lahf
fwait
aad
addb
mov
sub
enter
into
sti
fcomps
mov
add
mov
or
push
add
pop
aad
gs
lret
jge
divl
xor
outsl
clc
dec
or
testb
mov
ret
sbb
add
mov
sti
xor
in
syscall
and
mov
add
mov
add
and
push
sub
outsb
rolb
data16
add
pop
or
push
pandn
mov
or
jp
add
stos
adc
xchg
int
test
imul
xor
push
mov
add
add
call
inc
add
rolb
rolb
or
sbb
mov
out
dec
sahf
enter
lahf
cmc
adc
cmpsb
add
add
mov
jl
mov
mov
out
push
add
add
add
cmpsl
adc
lods
iret
iret
std
fwait
mov
add
inc
lcall
add
mov
loopne
fisubs
sbb
add
jle
add
mov
mov
rolb
pop
add
mov
add
add
sub
pop
adc
lret
pushf
in
mov
add
sbb
les
mov
cli
lret
ret
mov
popa
bound
mov
add
and
mov
addb
add
add
lret
fwait
sub
mov
xchg
add
loopne
and
and
mov
mov
inc
stos
adcl
stos
fldenv
mov
push
add
push
add
xor
add
aam
sbb
push
add
daa
jp
out
test
xlat
lcall
lret
or
add
add
add
mov
push
sub
add
add
movsl
je
mov
add
fidivrs
dec
pop
cmp
mov
mov
add
add
mov
pop
sbb
add
adc
add
add
and
mov
cmc
push
pop
in
lret
int
add
sbb
jp
xor
cltd
mov
jno
add
pop
mov
add
jbe
xchg
push
mov
ja
in
rcrl
add
mov
add
cltd
sub
add
nop
add
inc
subl
jno
add
push
cmp
imul
std
mov
pop
fbld
adc
add
jns
add
fwait
jbe
add
inc
add
add
sbb
ret
outsb
aas
add
mov
mov
arpl
add
mov
mov
lods
jle
push
push
add
outsb
into
insl
lcall
add
mov
mov
mov
add
fwait
sbb
rolb
add
add
sub
add
xor
add
and
mov
add
das
loopne
and
adcl
rolb
mov
cmp
lcall
dec
rol
xor
aad
cwtl
mov
fwait
cld
nop
jmp
add
pusha
ret
add
clc
repnz
jae
xor
add
popa
sbb
and
mov
add
mov
fwait
cld
nop
jmp
xchg
test
lret
add
add
rolb
add
ret
fwait
cld
nop
jmp
add
lea
movswl
fwait
cld
nop
jmp
add
xchg
add
inc
xchg
and
repnz
jae
cmc
roll
adc
mov
clc
repnz
jae
push
add
add
add
jle
icebp
fwait
cld
nop
jmp
add
add
xchg
rolb
sub
clc
repnz
jae
add
mov
add
mov
clc
repnz
jae
mov
add
add
fwait
cld
nop
jmp
inc
pusha
add
mov
add
clc
repnz
jae
add
add
and
push
mov
xchg
ret
cmp
test
add
mov
fwait
cld
nop
jmp
mov
popa
mov
push
add
popa
fwait
cld
nop
jmp
add
add
dec
push
clc
repnz
jae
cmp
loope
add
dec
insl
jno
dec
mov
clc
repnz
jae
mov
mov
addb
sub
js
fwait
cld
nop
jmp
and
jecxz
add
jmp
popa
adc
add
push
add
sub
fwait
cld
nop
jmp
add
out
add
add
lcall
jae
in
add
mov
push
jne
xor
inc
and
clc
repnz
jae
in
add
add
push
clc
repnz
jae
cmp
add
jmp
add
add
test
push
clc
repnz
jae
add
loopne
inc
cmc
add
popf
push
mov
xchg
ret
add
add
cwtl
dec
fwait
cld
nop
jmp
adc
add
loop
dec
mov
fwait
cld
nop
jmp
push
add
xor
sub
or
inc
add
sbb
add
lret
xor
clc
repnz
jae
inc
xchg
inc
add
add
add
lea
add
sbb
add
add
pushf
cmp
repz
mov
xchg
ret
stc
mov
stc
add
pop
push
push
mov
xchg
ret
addb
add
add
call
clc
repnz
jae
mov
add
test
add
fwait
cld
nop
jmp
xchg
or
and
push
mov
xchg
ret
or
xor
push
clc
repnz
jae
add
mov
repnz
jae
xor
lahf
mov
inc
add
mov
xchg
ret
add
jecxz
add
lods
push
mov
xchg
ret
sbb
andb
add
sub
nop
jae
add
push
push
add
mov
clc
repnz
jae
add
add
adc
call
clc
repnz
jae
add
push
or
repnz
jae
cmp
mov
rcll
sub
push
mov
xchg
ret
add
add
test
fwait
cld
nop
jmp
add
add
adc
fwait
cld
nop
jmp
lret
add
add
stc
add
mov
dec
push
push
mov
xchg
ret
mov
add
pop
fcompl
repnz
jae
mov
stc
lret
add
and
mov
push
mov
xchg
ret
jecxz
pusha
add
lahf
call
clc
repnz
jae
dec
sbb
mov
repnz
jae
inc
add
add
cmp
repnz
jae
add
xchg
fcomps
repnz
jae
add
stc
stc
or
repnz
jae
add
cmc
adc
lcall
add
mov
add
popa
and
push
push
mov
xchg
ret
xor
add
lret
mov
xlat
inc
add
push
roll
add
and
add
mov
jns
clc
repnz
jae
lock
inc
add
add
mov
add
add
add
mov
rcl
sbb
jae
add
add
add
push
add
mov
fwait
cld
nop
jmp
stc
push
adc
add
jae
clc
repnz
jae
push
add
dec
add
add
push
mov
xchg
ret
add
inc
lret
dec
pushl
clc
repnz
jae
push
add
sbb
je
clc
repnz
jae
inc
xchg
add
add
clc
repnz
jae
add
mov
lahf
shll
movb
nop
jae
add
insl
or
cmp
fwait
cld
nop
jmp
adc
push
addl
mov
clc
repnz
jae
adc
jne
je
clc
repnz
jae
add
mov
pop
push
clc
repnz
jae
mov
pusha
add
add
mov
mov
xchg
ret
jecxz
lahf
add
dec
adc
pop
rolb
xchg
ret
sbbb
add
aam
and
push
mov
xchg
ret
inc
push
add
push
jp
inc
and
push
mov
xchg
ret
add
jecxz
add
add
cld
nop
jmp
stc
inc
add
pushf
mov
mov
xchg
ret
add
inc
xchg
mov
push
fiaddl
xchg
ret
add
add
push
mov
xchg
ret
lahf
add
sbb
loope
aam
sub
repnz
jae
add
loopne
sbb
lock
add
add
push
mov
xchg
ret
pusha
mov
pop
je
clc
repnz
jae
add
adc
movb
and
push
mov
xchg
ret
xchg
cmp
add
rolb
cmp
add
clc
repnz
jae
or
pop
fwait
cld
nop
jmp
add
add
jecxz
inc
sbb
inc
and
cld
nop
jmp
xor
lret
add
mov
add
add
add
add
add
inc
add
mov
clc
repnz
jae
cmc
lahf
push
add
xchg
add
jbe
inc
add
add
push
clc
repnz
jae
roll
add
nop
jae
mov
push
inc
cmc
lock
addb
add
clc
repnz
jae
jecxz
dec
add
add
add
inc
add
add
fwait
cld
nop
jmp
lahf
in
push
add
add
inc
add
ret
aad
je
clc
repnz
jae
adc
ret
and
add
mov
fwait
cld
nop
jmp
add
test
add
mov
in
pushf
mov
mov
add
sub
fs
jb
dec
decl
push
mov
xchg
ret
lret
add
clc
repnz
jae
dec
sbb
add
nop
jae
add
lcall
mov
add
cld
nop
jmp
add
vdivpd
repnz
jae
mov
add
add
mov
add
add
popa
add
add
add
idivb
add
mov
add
mov
clc
repnz
jae
add
dec
mov
fwait
cld
nop
jmp
push
add
in
idivl
fistps
push
add
add
jecxz
add
mov
mov
add
repnz
jae
push
test
add
fisubs
clc
repnz
jae
lcall
insb
push
push
mov
xchg
ret
mov
push
roll
add
shrb
mov
xchg
ret
ret
mov
cmc
or
clc
repnz
jae
add
sbb
fimuls
test
push
add
clc
repnz
jae
adc
dec
or
mov
xchg
ret
add
mov
rcr
dec
fwait
cld
nop
jmp
dec
dec
inc
add
roll
add
or
inc
push
mov
xchg
ret
and
add
jnp
repnz
jae
ret
mov
add
sbb
rep
clc
repnz
jae
lret
loope
adc
mov
push
mov
xchg
ret
test
rolb
in
add
clc
repnz
jae
add
or
mov
clc
repnz
jae
mov
add
add
add
repnz
jae
add
and
push
mov
clc
repnz
jae
lcall
mov
clc
repnz
jae
add
pusha
add
lea
jl,pt
clc
repnz
jae
in
test
add
sbb
add
inc
and
push
mov
add
add
repnz
arpl
add
add
dec
mov
push
mov
xchg
ret
add
add
mov
xchg
ret
add
add
pusha
lret
in
mov
clc
repnz
jae
mov
xor
repnz
jae
add
stc
addb
lcall
fwait
cld
nop
jmp
and
ret
rolb
xchg
add
call
fwait
cld
nop
jmp
mov
lret
mov
jo
fwait
cld
nop
jmp
pushf
push
sbb
add
mov
mov
test
add
nop
jae
lds
add
mov
add
repnz
jae
add
insl
add
lea
repnz
jae
mov
lahf
add
adc
repnz
jae
dec
ret
adc
add
sbb
inc
add
add
add
add
test
add
repnz
jae
fcmovnu
in
testb
mov
nop
jae
addb
add
add
mov
clc
repnz
jae
add
push
lret
ret
add
sbb
scas
std
inc
add
loopne
loope
insl
dec
add
clc
repnz
jae
pusha
dec
mov
lret
cmpb
into
xor
push
mov
xchg
ret
add
mov
push
add
push
push
mov
xchg
ret
loope
lea
sbb
add
cmc
or
add
add
repnz
jae
xor
fwait
mov
clc
repnz
jae
add
lds
insb
push
push
mov
xchg
ret
add
lret
push
out
cmpw
fwait
cld
nop
jmp
push
add
jecxz
pop
mov
clc
repnz
jae
addb
fiadds
xor
xor
dec
add
fwait
cld
nop
jmp
fidivrs
mov
jecxz
xor
add
clc
repnz
jae
add
insl
lea
fwait
cld
nop
jmp
in
loope
add
loopne
mov
clc
repnz
jae
add
out
mov
nop
jae
add
adc
mov
xchg
ret
add
dec
add
sub
rclb
lock
add
add
add
nop
jae
loopne
add
add
mov
adc
xchg
inc
add
sbbl
add
clc
repnz
jae
add
add
add
lds
test
and
add
mov
nop
jae
add
adc
or
add
add
dec
push
pusha
add
push
mov
scas
and
xchg
cli
add
sub
mov
addb
xor
fwait
cld
nop
jmp
add
pusha
xchg
inc
add
pusha
cmp
jmp
subl
ret
add
add
mov
add
repnz
jae
add
add
pusha
add
in
clc
repnz
jae
add
add
mov
clc
repnz
jae
in
add
jge
sbb
cmp
repnz
jae
add
in
std
push
push
mov
xchg
ret
add
cmp
xchg
add
nop
jae
add
lret
add
repnz
jae
mov
add
push
push
sbb
test
sbb
add
adc
add
loopne
cmp
jae
add
mov
lea
push
mov
xchg
ret
add
add
mov
repnz
jae
add
add
add
andl
nop
jae
lcall
push
add
sti
fwait
cld
nop
jmp
add
add
lret
push
push
add
leave
fwait
cld
nop
jmp
lea
dec
popa
test
insb
clc
repnz
jae
add
or
sbb
jae
add
fldt
loope
loopne
add
clc
repnz
jae
xchg
add
cmp
inc
rolb
adc
add
nop
jae
pusha
subb
ficomps
mov
xchg
ret
add
add
insb
div
fwait
cld
nop
jmp
add
add
adc
pusha
jg
cmpl
ret
cli
jmp
test
scas
push
push
mov
xchg
ret
inc
lds
roll
dec
add
ja
dec
fwait
cld
nop
jmp
adcl
loope
xor
add
sub
add
fwait
cld
nop
jmp
and
mov
nop
jae
pusha
add
cmp
add
jle
push
mov
xchg
ret
add
add
add
add
add
repnz
jae
add
cmp
mov
out
ret
push
lret
pushf
xchg
add
add
add
clc
clc
repnz
jae
pusha
add
test
adc
fwait
cld
nop
jmp
ret
add
add
add
nop
jae
in
add
loope
jne
clc
repnz
jae
xchg
xchg
popa
push
add
push
mov
xchg
ret
insl
add
leave
sub
repnz
jae
add
add
mov
fdivs
sar
nop
jae
push
pusha
xorb
cmp
push
mov
xchg
ret
add
cmp
xchg
ret
leave
fwait
cld
nop
jmp
push
mov
add
ror
fwait
cld
nop
jmp
add
push
sub
in
add
add
inc
push
mov
xchg
ret
add
sbb
mov
jmp
rolb
xchg
ret
add
add
add
dec
clc
repnz
jae
add
add
jecxz
add
push
add
das
push
push
mov
xchg
ret
add
or
test
add
clc
repnz
jae
lea
mov
repnz
jae
add
add
add
add
add
add
loopne
clc
repnz
jae
add
sub
div
inc
add
add
add
les
xchg
add
and
lahf
fiadds
xchg
ret
lcall
cmpsb
add
add
repnz
jae
dec
add
add
and
repnz
jae
add
add
rep
push
mov
xchg
ret
mov
lahf
rcll
sbb
cld
nop
jmp
add
add
add
clc
repnz
jae
lret
inc
add
lahf
pusha
add
ret
pop
push
mov
xchg
ret
lea
add
add
scas
add
fwait
cld
nop
jmp
mov
add
add
nop
jmp
orb
add
jne
clc
repnz
jae
adc
add
push
clc
repnz
jae
add
add
jae
nop
jae
mov
add
addr16
cmpsl
imul
xchg
ret
loope
lea
add
mov
fwait
cld
nop
jmp
add
add
add
add
nop
jae
xchg
xor
sbb
addb
jl
mov
clc
repnz
jae
xchg
push
out
rep
push
mov
xchg
ret
push
and
add
sub
dec
cmp
repnz
jae
add
adc
mov
testb
xchg
clc
repnz
jae
add
add
add
jle
clc
repnz
jae
add
test
lds
add
ds
push
mov
xchg
ret
push
cmc
mov
pop
pushl
fwait
cld
nop
jmp
add
add
addb
pop
xchg
add
repnz
jae
add
fisubrs
add
or
repnz
jae
fildl
xchg
dec
sbb
xchg
sbb
nop
jae
add
lret
inc
jb
fwait
cld
nop
jmp
and
in
add
add
add
stos
push
mov
xchg
ret
mov
push
and
mov
push
mov
xchg
ret
add
lcall
add
push
push
mov
xchg
ret
add
mov
dec
xor
fwait
cld
nop
jmp
mov
add
mov
jae
push
mov
cmp
lea
in
push
clc
repnz
jae
add
add
adc
mov
push
mov
xchg
ret
push
add
lret
dec
add
push
mov
xchg
ret
mov
add
add
add
dec
cmp
repnz
jae
cmp
lock
test
add
nop
jae
popa
dec
add
add
inc
ljmp
clc
repnz
jae
add
adc
cmpsl
popf
xor
clc
repnz
jae
add
add
adc
decl
nop
jae
xchg
jecxz
adc
adc
mov
xchg
ret
add
addl
or
add
mov
xor
clc
repnz
jae
in
push
test
ret
cmp
add
pop
clc
repnz
jae
jecxz
in
add
popa
push
mov
xchg
ret
add
add
add
daa
sbb
nop
jmp
add
push
mov
add
clc
repnz
jae
lcall
loop
mov
add
fwait
cld
nop
jmp
add
lret
inc
mov
adc
leave
xor
clc
repnz
jae
adc
add
stc
inc
inc
loope
add
jge
mov
fwait
cld
nop
jmp
add
clc
mov
push
mov
xchg
ret
sbb
add
cld
pop
clc
repnz
jae
add
loope
add
adcb
adc
mov
xchg
ret
mov
sbb
nop
jae
lds
addb
add
add
fwait
cld
nop
jmp
adc
add
popa
lahf
mov
dec
cmp
mov
xchg
ret
add
add
xchg
lock
cmp
mov
push
clc
repnz
jae
add
inc
add
adc
inc
clc
repnz
jae
addl
add
push
popa
cmp
ljmp
jae
add
lock
clc
repnz
jae
push
jecxz
add
add
mov
push
mov
xchg
ret
or
inc
rcl
cmc
push
xor
adc
add
icebp
call
add
loope
sahf
push
clc
repnz
jae
add
add
popa
mov
fwait
cld
nop
jmp
mov
add
add
addb
add
add
dec
imul
orl
add
lcall
not
clc
repnz
jae
addb
add
lock
push
add
pop
clc
repnz
jae
add
add
pushf
mov
clc
repnz
jae
add
add
pusha
mov
push
push
mov
xchg
ret
jecxz
orb
add
clc
repnz
jae
add
add
add
clc
repnz
jae
sbb
add
clc
repnz
jae
stc
jecxz
inc
add
mov
fwait
cld
nop
jmp
insl
insl
fstpt
outsl
loopne
mov
xchg
ret
cmp
addb
arpl
mov
clc
repnz
jae
mov
pusha
cmp
addl
mov
clc
repnz
jae
add
xor
add
fwait
cld
nop
jmp
add
stc
inc
inc
add
stos
xor
clc
repnz
jae
add
add
add
add
add
std
clc
repnz
jae
add
push
mov
add
ljmp
add
add
xorl
adc
repnz
jae
ret
push
ret
adc
and
mov
add
fwait
cld
nop
jmp
dec
xchg
add
add
add
decl
clc
repnz
jae
add
add
roll
add
clc
repnz
jae
add
push
add
add
mov
push
fwait
cld
nop
jmp
loope
pusha
add
roll
mov
mov
xchg
ret
mov
add
inc
outsb
mov
fwait
cld
nop
jmp
adcl
cmp
nop
jae
fildl
push
jecxz
push
add
jae
add
add
mov
pop
clc
repnz
jae
addb
sbb
add
lcall
orl
add
add
mov
sub
repnz
jae
add
add
push
in
rep
clc
repnz
jae
sbb
add
inc
add
aam
outsl
mov
clc
repnz
jae
in
push
add
add
cmpl
addl
in
adc
pusha
clc
repnz
jae
mov
adcb
add
pop
insl
and
push
mov
xchg
ret
add
test
add
test
lcall
in
jmp
fistl
lret
push
clc
repnz
jae
adc
pushf
add
push
clc
repnz
jae
adc
lret
cltd
cmp
fwait
cld
nop
jmp
add
push
add
add
mov
sti
in
add
or
mov
add
mov
push
clc
repnz
jae
and
add
jns
stos
clc
repnz
jae
push
shll
add
cmc
mov
test
repnz
jae
mov
sbb
lcall
in
incl
stc
jecxz
pushf
les
mov
jmp
and
add
roll
cmp
call
clc
repnz
jae
add
dec
pop
fwait
cld
nop
jmp
mov
dec
stc
dec
inc
mov
mov
add
addb
add
addb
add
clc
repnz
jae
or
mov
add
add
test
fwait
cld
nop
jmp
add
inc
add
add
mov
nop
jae
inc
dec
push
ret
xchg
adc
or
clc
repnz
jae
insl
mov
mov
clc
repnz
jae
pusha
add
xchg
add
add
push
push
xor
clc
repnz
jae
fildl
add
clc
repnz
jae
add
add
add
mov
xchg
ret
loopne
dec
add
test
push
mov
xchg
ret
add
jno
mov
clc
repnz
jae
and
or
or
nop
jmp
add
add
xchg
mov
add
mov
clc
repnz
jae
mov
mov
push
clc
repnz
jae
sar
push
lcall
shll
add
clc
repnz
jae
lret
add
and
push
mov
xchg
ret
mov
in
fld
clc
repnz
jae
mov
add
add
mov
xchg
ret
adc
add
push
mov
xchg
ret
loope
add
test
jmp
test
add
ljmp
jae
lret
add
cmp
mov
cmp
clc
repnz
jae
add
lock
decl
push
mov
xchg
ret
add
mov
sub
add
repnz
jae
add
lret
or
repnz
jae
adc
push
push
add
cmp
repnz
add
fmuls
add
dec
inc
lret
cmp
xchg
add
add
add
scas
add
clc
repnz
jae
add
cmp
roll
sbb
add
dec
add
repnz
jae
add
or
repnz
jae
mov
and
adc
xor
mov
jmp
cmp
ret
mov
lds
arpl
cld
nop
jmp
xchg
add
addl
call
fwait
cld
nop
jmp
add
test
in
lcall
sti
incl
insl
add
add
mov
clc
repnz
jae
cmp
jecxz
lcall
nop
jmp
popa
add
loopne
jecxz
add
ret
or
sbb
inc
add
add
test
lret
and
mov
push
mov
xchg
ret
pusha
mov
lcall
xorl
fwait
cld
nop
jmp
xorl
jmp
mov
add
add
fisttpll
nop
jae
sbb
xor
fidivs
jae
pushf
push
add
lret
dec
insl
add
adc
add
jmp
loopne
add
add
in
cmp
das
jne
fwait
cld
nop
jmp
add
cmc
sub
mov
xchg
ret
adc
add
mov
mov
clc
repnz
jae
push
sbb
mov
mov
add
add
repnz
jae
popa
add
adc
push
add
adcl
add
dec
popa
clc
repnz
jae
add
add
add
add
rolb
ja
cld
push
mov
xchg
ret
add
push
out
call
clc
repnz
jae
mov
add
xlat
repnz
add
pop
clc
repnz
jae
add
fninit
out
ret
clc
repnz
jae
lock
ret
and
add
add
xchg
fwait
cld
nop
jmp
add
pusha
add
mov
add
sub
jg
fwait
cld
nop
jmp
add
lds
lahf
addb
movzwl
clc
repnz
jae
add
in
add
shll
jne
fwait
cld
nop
jmp
test
lds
adc
adc
jne
clc
repnz
jae
inc
lret
test
fwait
cld
nop
jmp
add
add
pusha
add
clc
repnz
jae
add
and
lea
repnz
jae
inc
mov
dec
push
mov
xchg
ret
mov
test
nop
add
repnz
jae
lahf
add
mov
add
clc
repnz
jae
lea
push
add
add
sbbb
add
inc
add
mov
add
lcall
sti
ljmp
inc
dec
adc
in
add
add
xlat
adc
jno
popf
scas
and
clc
repnz
jae
inc
add
push
jecxz
pop
sti
mov
push
mov
xchg
ret
in
pusha
add
sub
nop
jae
add
add
stc
xchg
xchg
add
fwait
cld
nop
jmp
loope
add
add
pushf
mov
cwtl
mov
clc
repnz
jae
inc
fdivp
jge
push
mov
xchg
ret
mov
fsubrp
add
sbb
add
repnz
jae
cmc
add
loope
movzwl
clc
repnz
jae
pusha
addl
lds
pop
push
mov
xchg
ret
test
mov
mov
xor
repnz
jae
lea
movb
cld
nop
jmp
add
add
mov
lods
push
mov
xchg
ret
add
add
add
lock
mov
clc
repnz
jae
loope
fiadds
mov
mov
push
mov
xchg
ret
fiadds
test
sti
mov
push
mov
xchg
ret
lds
cmp
mov
in
cmp
loop
clc
repnz
jae
test
mov
add
jno
sub
clc
repnz
jae
addb
repnz
jae
ret
add
pushf
or
clc
and
fwait
cld
nop
jmp
add
add
inc
push
cwtl
cmp
push
mov
xchg
ret
add
add
les
push
mov
xchg
ret
inc
in
sbb
push
push
mov
xchg
ret
add
lret
jecxz
add
dec
out
clc
repnz
jae
push
jecxz
enter
and
fwait
cld
nop
jmp
lea
test
clc
repnz
jae
add
lds
add
dec
push
clc
repnz
jae
xchg
lcall
mov
add
add
in
jmp
add
lret
xchg
clc
repnz
jae
add
cmp
add
add
add
clc
repnz
jae
rcrl
add
repnz
jae
add
add
lahf
daa
mov
mov
xchg
ret
add
add
mov
mov
push
mov
xchg
ret
mov
cmp
mov
je
fwait
cld
nop
jmp
add
add
mov
cld
nop
jmp
add
add
adc
jb
push
add
add
add
jo
aas
pushl
clc
repnz
jae
add
adc
loopne
repnz
jae
xorl
add
into
add
push
mov
xchg
ret
adc
or
in
add
stos
cwtl
push
add
push
add
add
test
andl
jae
add
cmp
nop
add
pop
clc
repnz
jae
pushf
adc
cmc
push
mov
or
stos
fldl
xchg
ret
fildl
add
clc
repnz
jae
in
orb
addb
rcrl
and
push
mov
xchg
ret
mov
inc
jo
jo
clc
and
fwait
cld
nop
jmp
loope
dec
adc
add
clc
repnz
jae
andb
add
repnz
jae
lds
sbb
mov
clc
repnz
jae
in
lret
ljmp
add
stc
inc
add
pusha
dec
das
push
clc
repnz
jae
add
add
add
sbb
add
clc
repnz
jae
addb
test
lahf
add
push
mov
xchg
ret
xchg
in
add
push
stc
xchg
push
mov
xchg
ret
in
add
add
clc
repnz
jae
add
add
testl
fwait
cld
nop
jmp
xor
jmp
add
add
or
nop
jae
and
cmp
add
pop
icebp
inc
add
add
add
and
add
pop
clc
repnz
jae
dec
add
mov
adc
xchg
mov
add
repnz
jae
fsubp
in
xchg
add
clc
repnz
jae
cmc
inc
popa
data16
mov
clc
repnz
jae
mov
push
add
jne
fwait
cld
nop
jmp
add
dec
dec
sbb
nop
jae
add
in
mov
add
add
clc
repnz
jae
xchg
add
in
enter
nop
jae
add
add
fstpl
cld
nop
jmp
add
push
add
xchg
add
lret
clc
repnz
jae
dec
add
or
and
add
add
mov
xchg
ret
add
adcb
jne
je
repnz
jae
add
mov
push
add
jae
add
mov
pushf
mov
clc
repnz
jae
jecxz
add
cmp
add
nop
jmp
addb
pusha
add
push
mov
xchg
ret
mov
add
nop
jmp
inc
add
test
jge
jg
clc
repnz
jae
mov
add
sbb
add
repnz
jae
xchg
push
add
xor
push
mov
xchg
ret
lret
insl
fiadds
in
gs
movsl
xor
cld
or
jmp
sbb
inc
scas
call
clc
repnz
jae
add
mov
adc
repnz
jae
lret
add
lcall
jae
insl
sbb
in
test
add
clc
repnz
jae
add
add
push
push
pop
hlt
add
es
fucomip
cmp
cmp
test
add
add
add
add
push
add
add
repnz
jae
add
pop
mov
push
mov
xchg
ret
in
add
add
mov
clc
repnz
jae
push
add
sbb
lahf
rcrl
nop
jmp
inc
mov
add
sbb
nop
jae
mov
inc
add
inc
add
mov
push
push
mov
xchg
ret
add
lret
les
in
pop
clc
repnz
jae
add
cmc
add
pushf
mov
repnz
jae
push
push
add
mov
xchg
ret
add
add
add
sub
scas
aam
add
add
mov
sub
les
clc
repnz
jae
add
cmp
repnz
jae
add
add
add
add
out
push
clc
repnz
jae
add
test
and
mov
xchg
ret
ficoms
push
mov
xchg
ret
inc
loope
add
xor
add
sbb
jbe
clc
repnz
jae
add
add
add
and
mov
add
add
repnz
jae
xchg
add
push
clc
repnz
jae
add
add
dec
add
clc
repnz
jae
mov
push
add
nop
jae
mov
add
add
stos
clc
repnz
jae
xchg
adc
add
repnz
jae
push
add
add
add
push
push
mov
xchg
ret
lds
add
ret
mov
xchg
ret
fimuls
mov
clc
repnz
jae
lret
rol
xchg
fucomi
jbe
jmp
pusha
push
add
add
add
in
dec
adc
mov
mov
push
add
add
enter
add
add
add
add
repnz
jae
jecxz
add
jmp
and
add
add
push
add
xchg
dec
lock
cld
inc
add
add
push
add
rcll
hlt
clc
repnz
jae
mov
mov
ret
clc
repnz
jae
fstpt
add
fcos
clc
repnz
jae
add
pusha
pop
push
clc
repnz
jae
popa
addb
pusha
inc
sbb
add
nop
jae
rcrl
add
dec
jne
clc
repnz
jae
add
pushf
push
mov
and
add
add
inc
mov
repnz
jae
add
lahf
pusha
cmp
in
mov
clc
repnz
jae
sbb
xchg
add
add
add
repnz
jae
add
loopne
movsl
mov
jmp
add
mov
add
add
dec
mov
push
mov
xchg
ret
jecxz
stc
add
inc
add
jne
into
shr
clc
repnz
jae
add
lret
clc
repnz
jae
test
adc
add
lds
dec
jmp
clc
repnz
jae
add
add
and
clc
repnz
jae
add
mov
insl
add
mov
push
clc
repnz
jae
lret
lret
cmpb
adc
clc
repnz
jae
mov
cmp
add
movsb
clc
repnz
jae
insl
inc
add
test
repnz
jae
adc
cmpl
fwait
cld
nop
jmp
add
add
in
inc
mov
add
cs
call
add
jns
jne
clc
repnz
jae
shl
push
add
adc
nop
jae
inc
cmc
add
adcb
add
repnz
jae
xchg
lock
xor
mov
pop
and
cld
nop
jmp
add
add
sub
sbb
repnz
jae
push
inc
adc
lock
add
mov
add
add
push
mov
xchg
ret
add
test
add
mov
clc
repnz
jae
add
lret
add
lods
push
push
mov
xchg
ret
loopne
add
in
mov
jae
loopne
lcall
lea
jae
test
add
cmp
add
mov
push
mov
xchg
ret
sbb
add
popa
ud1
or
fwait
cld
nop
jmp
inc
sbb
add
fdivr
repnz
jae
cmc
mov
adc
nop
jmp
mov
push
sbb
repnz
add
repnz
jae
cmp
test
call
clc
repnz
jae
add
out
clc
repnz
jae
add
pusha
pusha
add
je
sub
repnz
jae
lahf
add
mov
xchg
ret
add
add
push
push
mov
xchg
ret
jecxz
lds
cmp
xchg
mov
nop
jae
test
mov
sbb
test
add
add
lcall
jne
clc
repnz
jae
add
add
add
xorl
inc
add
push
dec
add
pusha
fwait
cld
nop
jmp
test
add
push
add
jl
and
inc
add
add
in
clc
loope
add
add
add
add
je
cld
nop
jmp
add
add
push
jae
add
add
test
clc
repnz
jae
add
push
call
jae
push
pusha
loope
push
add
sub
repnz
jae
stc
mov
add
and
fwait
cld
nop
jmp
push
add
push
stc
add
add
jae
push
inc
dec
add
inc
ret
scas
pop
clc
repnz
jae
dec
add
add
xor
clc
repnz
jae
lcall
test
add
add
fcos
jmp
add
imul
jae
mov
push
xor
or
clc
repnz
jae
add
lea
add
mov
xchg
sub
cmp
ret
add
mov
add
add
clc
repnz
jae
ret
add
push
add
and
mov
clc
repnz
jae
lds
push
sbb
add
dec
fwait
cld
nop
jmp
cmp
add
push
add
jecxz
pop
add
add
cltd
idiv
lcall
cmp
jb
push
mov
xchg
ret
push
add
ret
jecxz
and
clc
repnz
jae
add
cmc
test
cmp
jae
mov
mov
lahf
popa
add
mov
push
mov
xchg
ret
roll
dec
add
jecxz
ret
add
dec
push
clc
repnz
jae
dec
lock
add
mov
cmp
repnz
jae
add
add
sbb
mov
push
add
leave
sub
repnz
jae
lock
add
in
stos
xor
clc
repnz
jae
dec
sbb
fisubrs
fwait
cld
nop
jmp
adc
add
add
add
mov
lret
nop
jmp
add
ficoms
add
add
add
mov
clc
repnz
jae
mov
push
push
add
jnp
mov
clc
repnz
jae
xor
das
mov
clc
repnz
jae
mov
add
cli
mov
clc
repnz
jae
and
push
add
mov
clc
repnz
jae
add
add
in
inc
add
and
repnz
jae
add
insl
inc
push
xchg
mov
add
fwait
cld
nop
jmp
dec
stc
add
add
add
dec
shr
clc
repnz
jae
sbbb
add
add
mov
xchg
ret
add
test
lcall
repnz
jae
xchg
add
testb
add
add
movb
repnz
jae
cmp
add
lcall
repnz
jae
add
add
mov
xchg
ret
in
rcrl
shr
clc
repnz
jae
add
add
clc
repnz
jae
fildl
lret
sub
clc
repnz
jae
adc
mov
clc
repnz
jae
xchg
add
push
mov
xchg
ret
add
inc
add
nop
jae
add
add
sbb
loope
in
pop
push
mov
xchg
ret
popa
mov
fisubrs
mov
push
mov
xchg
ret
mov
popa
dec
jb
clc
repnz
jae
add
clc
repnz
jae
cmp
add
push
ljmp
adc
add
imul
push
aad
incl
push
fildl
add
in
add
mov
add
shll
add
add
push
mulb
shrl
mov
movd
push
stc
dec
inc
add
outsb
pop
or
add
adc
pop
test
cld
shl
add
sbb
testl
add
xchg
mov
stos
addr16
cmp
in
dec
es
add
out
dec
inc
mov
inc
add
shl
add
pop
adc
call
addb
add
mov
roll
icebp
fld
jmp
add
xchg
rolb
adc
in
mov
add
lds
dec
cltd
mov
mov
add
js
xor
sub
jg
or
sub
out
int3
and
lret
aaa
mov
push
add
leave
xor
sub
mov
add
lods
call
jne
add
xor
xchg
add
and
fisubrl
xor
push
add
pop
inc
add
xchg
add
add
mov
add
mov
add
add
data16
lods
fwait
jmp
cltd
icebp
cmp
popa
sbb
sbb
add
arpl
inc
add
cltd
test
out
cmpsl
lret
mov
xchg
or
add
addb
sub
mov
adc
aam
sti
dec
inc
add
pop
leave
jmp
add
jae
add
and
mov
and
add
cmp
out
xchg
add
add
push
add
mov
stc
adc
adc
loope
jg
clc
mov
cmpsb
add
sub
push
add
jecxz
mov
add
jb
enter
fstl
sbb
pusha
add
dec
subl
cld
rcll
pop
rcr
cmp
add
stos
les
mov
mov
rcl
adc
xchg
fwait
push
ret
push
add
mov
pop
ret
repz
fchs
add
add
add
add
xor
mov
add
push
add
test
sbb
psubusw
aam
add
add
icebp
fsubrp
and
mov
addb
add
add
sub
pop
xchg
dec
call
sti
cmp
addb
ret
pop
int
sbb
adc
mov
mov
leave
outsb
add
mov
dec
fldenv
and
pop
adc
mov
mull
pop
outsl
mov
rorl
sub
add
gs
test
add
shll
in
lahf
xor
sti
adc
sub
add
push
add
pop
testb
add
mov
cltd
int
fs
cs
mov
jno
add
out
jg
addb
add
adc
sbbl
add
into
and
fsts
negl
dec
lret
jg
imul
cmp
aaa
loope
out
movsl
enter
pop
adc
or
jae
push
xor
mov
dec
into
push
jmp
add
cmp
mov
gs
jge
add
sub
add
or
inc
ljmp
mov
or
cld
push
ret
scas
ds
xlat
push
out
cmp
dec
testb
add
ret
add
adc
outsb
popa
push
add
movb
xor
push
icebp
pop
xchg
add
adc
aad
sbb
cmc
lahf
inc
add
add
add
lahf
dec
mov
add
sub
add
mov
popf
mov
push
gs
flds
andl
dec
stc
repnz
les
or
imul
insb
mov
arpl
add
cwtl
sahf
rolb
clc
aad
cmp
pop
mov
pop
in
xchg
cmp
mov
add
cmp
out
mov
mov
sti
mov
fwait
pusha
add
rcrl
add
pop
addb
jae
and
add
add
int3
popf
out
test
or
mov
pop
xor
mov
add
std
push
mov
add
sbb
add
gs
popa
or
add
hlt
add
xor
mov
mov
fbstp
add
loopne
aad
jb,pn
loope
mov
add
icebp
dec
cmp
sub
jg
add
mov
lret
insl
and
mov
stc
and
mov
cwtl
iret
add
mov
pushl
fwait
dec
dec
fs
or
std
or
pop
pop
xor
pop
cmpsl
gs
inc
add
dec
movsb
add
add
add
subl
adc
enter
and
mov
jle
out
cli
sub
add
imul
push
add
jbe
mov
or
push
jnp
rcll
outsb
int3
iret
mov
add
call
add
jp
add
add
xchg
lods
enter
sub
push
shrl
add
cli
fisubrs
adc
pop
or
cwtl
push
pop
sar
negl
lcall
xor
je
sbb
stos
and
ds
or
jo
fbld
add
add
mov
xor
mov
inc
scas
fdiv
je
sub
les
push
fsubr
cmp
add
mov
fnstsw
dec
iret
sub
fxsave
add
add
or
sti
cmpsl
sub
sbb
add
mov
rolb
mov
push
cld
push
sti
das
rolb
lret
jl
push
add
mov
add
mov
cmp
add
push
add
jns
jae
push
xchg
add
xor
add
ljmp
push
add
cmp
popf
push
addl
jge
addr16
add
add
push
add
jno
cmp
push
adc
and
add
dec
lods
xor
js
xchg
flds
add
mov
add
add
add
cld
bound
mov
adc
push
test
insb
mov
sbb
aas
jno
ja
xchg
sbb
jbe
xor
mov
cmp
xchg
cmpsb
add
jns
add
mov
aad
sti
daa
in
and
mov
add
mov
test
js
add
mov
add
aas
fucomi
daa
xchg
inc
add
inc
add
add
inc
add
mov
xchg
out
push
add
add
push
or
mov
cmpsl
dec
int
sahf
pusha
add
ret
mov
aad
add
add
vmwrite
add
or
stos
cs
push
xchg
add
or
aad
fisttps
push
add
dec
data16
sub
add
mov
add
fprem
add
mov
add
add
addr16
sahf
icebp
testb
mov
rolb
inc
js
add
mov
xor
fisttpl
mov
iret
movb
or
stos
sub
stc
xchg
add
mov
aad
inc
lahf
xor
add
andl
sub
push
add
lods
push
add
lea
add
push
add
ja
loope
inc
add
add
add
add
add
mov
jae
movb
jp
insb
fptan
add
mov
sbb
add
add
in
stos
fs
hlt
add
mov
hlt
add
add
call
add
add
mov
rolb
dec
mov
add
pusha
add
add
adcl
pushf
inc
add
mov
hlt
add
add
icebp
int
add
dec
jl
lcall
test
mov
jp
addb
scas
testl
add
push
push
fwait
mov
shr
add
fildll
test
lds
popf
sti
mov
lret
pop
xchg
dec
sbb
adc
mov
add
or
pop
mov
add
add
sahf
pop
lret
mov
add
mov
dec
fidivs
add
add
add
aad
dec
mov
push
jns
adc
sbb
jb
inc
sahf
sub
lret
nop
add
rolb
dec
add
add
pop
dec
enter
jp
xor
add
cmp
lods
add
adc
cwtl
int
jmp
cmc
xor
xchg
add
out
pop
cltd
inc
rol
add
add
out
pop
inc
lea
sbb
add
mov
idivl
cltd
out
add
add
dec
xchg
jg
mov
sbb
add
add
rolb
xor
mov
add
xor
mov
test
fistps
sub
mov
add
lock
add
add
and
inc
add
add
add
add
push
add
out
ja
add
add
fisttpl
enter
cltd
jecxz
stos
and
jo
mov
jne
out
sbb
cmc
imul
add
and
mov
add
and
mov
jle
adc
inc
add
add
ret
add
test
dec
pushf
data16
mov
rolb
adc
add
push
addl
add
aad
add
add
push
add
mov
mov
xchg
add
imul
xchg
rolb
pop
call
xchg
add
add
mov
or
outsb
shrl
mov
mov
add
pop
jb
test
push
add
pusha
add
fdivrs
add
pop
inc
add
add
sbb
insl
jnp
add
or
add
arpl
add
pop
mov
movsb
add
inc
rolb
sbb
add
add
or
ljmp
mov
cli
addb
inc
xor
sub
in
test
add
jne
cmp
insl
jp
add
dec
rolb
imul
push
push
ret
jbe
call
call
loope
add
mov
lds
jb
mov
movb
add
add
add
jle
cmp
add
cmc
cld
jns
add
mov
les
adc
aas
add
add
and
add
data16
sahf
dec
pop
inc
outsl
leave
lock
add
inc
add
adc
addr16
add
mov
or
lea
sbb
insb
dec
arpl
push
xchg
icebp
dec
mov
ljmp
and
add
add
sbb
outsl
jmp
add
cmpsl
add
add
or
sti
mov
add
repz
lcall
enter
stc
xlat
mov
add
push
cwtl
pop
sub
mov
icebp
addb
add
add
add
lahf
cmp
add
and
mov
xchg
popf
lods
push
add
cs
add
xor
movsb
add
add
add
or
mov
sbb
mov
inc
lods
jnp
inc
add
stos
xchg
mov
jl
adc
push
add
add
sbb
and
add
lcall
sbb
test
lods
movsb
add
jnp
popf
cmp
add
jmp
jecxz
das
sbb
and
mov
int
and
jl
xchg
add
jnp
ret
mov
add
add
add
mov
movsl
add
ja
popa
scas
add
or
add
jmp
movsl
inc
pop
xchg
mov
cmp
add
testb
xchg
xor
dec
sbb
or
pushl
push
add
addb
add
mov
add
add
clc
sbb
dec
outsl
ja
sbb
add
sbbl
add
mov
cmp
mov
mov
add
sbb
jg
sub
ret
mov
push
add
clc
or
inc
dec
scas
outsb
pop
xor
adc
test
add
and
mov
or
add
hlt
add
adc
add
sbb
add
and
mov
enter
add
add
mov
adc
add
jo
into
push
add
mov
sub
cmp
push
add
add
add
cmp
outsb
xor
inc
ret
pushf
fimull
mov
mov
hlt
add
dec
push
add
testb
add
jmp
lcall
add
lahf
in
ficoml
mov
add
mov
mov
mov
add
out
pop
xchg
add
add
add
add
xor
into
in
push
push
add
loopne
popa
mov
or
push
subl
fwait
push
add
sahf
fucomip
mov
ljmp
repnz
add
ss
stc
cmp
mov
mov
cmpsb
add
ret
aam
ljmp
in
dec
cltd
add
mov
ljmp
pusha
add
int3
aaa
outsb
rolb
add
data16
mov
das
dec
cmp
add
dec
xor
test
data16
pop
imul
fiaddl
pop
loope
mov
inc
add
add
add
add
mov
add
and
mov
push
add
mov
in
mov
add
add
mov
pusha
add
xchg
add
aas
imul
cmp
pushf
in
dec
mov
loopne
bts
xchg
daa
pushf
das
hlt
add
add
int3
jecxz
lods
out
add
add
sub
data16
mov
divl
inc
lret
add
xlat
push
jo
jae
sti
pusha
add
inc
add
add
adc
add
movsb
add
add
sub
add
mov
fbstp
add
cmp
xor
mov
enter
or
xor
sub
loope
add
mov
in
cs
dec
les
sbb
add
pop
mov
in
jbe
add
mov
add
add
add
dec
sbb
sahf
test
mov
cmpsl
jns
adc
rolb
data16
add
addb
add
push
add
add
mov
addb
add
add
mov
add
xor
sub
and
mov
add
xchg
xor
cli
mov
in
and
mov
mov
lock
sub
arpl
mov
xor
mov
and
add
shr
mov
jp
add
test
add
cmp
cmpsl
lds
cmp
add
add
adc
aas
mov
imul
int
cmpsb
add
inc
pop
enter
sub
les
mov
out
adc
jmp
add
add
mov
add
out
lahf
icebp
addb
add
icebp
push
insl
nop
add
mov
add
jecxz
das
jbe
jecxz,pt
dec
data16
add
adc
inc
inc
pusha
add
mov
mov
adc
out
add
and
mov
add
mov
mov
add
je
push
add
add
mov
sbb
bound
mov
pop
stc
dec
std
jno
add
mov
sbb
popf
add
mov
add
test
or
pop
xchg
jmp
push
add
rolb
jle
add
jmp
movsb
add
testb
push
add
negl
adc
push
add
mov
mov
add
add
pusha
add
add
aam
sub
add
cltd
cli
leave
add
ja
add
or
pop
lret
andl
mov
bound
mov
cltd
dec
subl
mull
mov
inc
add
cmc
xchg
idivl
dec
adcl
hlt
add
das
scas
loop
sbbl
mov
mov
inc
add
fwait
into
and
test
xchg
add
lock
cmp
sub
add
add
roll
leave
xchg
mov
add
std
push
test
add
stc
xor
lcall
andl
inc
push
add
jg
add
add
add
add
cwtl
js
sub
cld
data16
jo
pop
in
mov
add
mov
mov
add
add
add
mov
adc
in
jns
cmc
add
mov
jno
dec
push
ljmp
add
ds
mov
lret
add
mov
mov
sti
rolb
rcrl
aam
jmp
mov
cwtl
and
push
push
xor
fldz
jecxz
sbb
dec
mov
add
add
mov
mov
push
mov
adc
mov
add
mov
mov
mov
outsb
pop
sub
addb
xchg
std
jbe
and
mov
js
add
ffree
test
pushl
add
cmp
pusha
add
cmp
cmp
pop
rol
hlt
add
xchg
adc
pop
aas
js
lea
push
icebp
mov
add
add
lret
add
lea
adc
test
fmull
popa
xor
xor
dec
enter
rolb
ficoml
insb
test
mov
add
popa
mov
add
mov
mov
sbb
push
mov
xchg
add
add
clc
jbe
sub
popa
loope
fs
add
or
repnz
addb
add
fldt
add
fwait
shll
add
enter
add
add
or
cwtl
mov
mov
lock
ljmp
insl
and
add
dec
xor
sbb
mov
aaa
stos
add
pop
sub
jo
pop
sub
mov
sbb
jmp
les
mov
mov
insl
add
mov
jae
mov
js
loopne
imul
add
inc
add
xor
aas
mov
add
add
movsl
and
mov
mov
fdivs
stos
hlt
add
iret
data16
push
sbb
add
add
inc
fs
js
inc
add
bound
mov
xor
bound
mov
pop
movsl
insb
push
inc
add
push
mov
stos
jo
ljmp
ja
sti
ffree
add
add
xlat
in
push
jae
loope
jo
adc
inc
push
mov
xor
cmp
mov
add
test
push
add
add
sub
add
mov
add
add
in
mov
testb
push
add
int
add
add
mov
xchg
das
popa
or
cli
push
add
push
lcall
and
add
mov
xor
aam
pop
data16
cs
pop
and
mov
push
shll
add
add
add
add
lret
add
sbb
add
js
in
add
add
add
add
push
add
cmp
add
add
xchg
add
call
out
add
push
xchg
add
fsts
add
ja
jl
pop
push
jl
pop
test
add
add
jle
pop
mov
roll
dec
and
or
xchg
add
jno
in
je
or
add
pop
clc
fiadds
dec
mov
daa
mov
mov
lret
int3
cmp
add
cmp
repz
lahf
inc
mov
inc
rolb
iret
lock
add
and
add
stos
dec
mov
mov
test
gs
add
add
lds
jl
add
in
rolb
inc
in
rcrl
xorl
pop
xchg
loopne
fwait
push
add
mov
jne
icebp
out
xor
rolb
mov
push
add
sub
jnp
xor
inc
add
add
ret
jg
lods
sub
add
pop
cli
mov
pop
and
into
xchg
in
stc
fidivrs
and
sti
sub
push
add
movb
xchg
data16
push
movsl
cmp
mov
add
add
add
xor
mov
add
ret
sub
add
mov
xchg
add
mov
outsl
xchg
add
push
add
or
cmp
inc
xor
xor
lds
dec
aas
lret
pushl
xor
sub
add
aas
nop
add
cltd
or
adc
stos
sub
std
mov
mov
push
inc
add
ret
push
add
mov
scas
fwait
mov
loop
dec
push
add
cwtl
lret
movsl
out
xchg
add
std
cmp
add
add
flds
mov
mov
add
push
add
in
add
push
add
aas
lahf
sub
add
add
in
in
lds
pop
lahf
inc
add
dec
aad
in
mov
test
test
or
xchg
mov
jp
ljmp
mov
push
or
xchg
fidivl
add
rolb
xchg
pusha
add
test
sbb
add
add
jge
add
add
add
je
cmc
mov
pop
mov
nop
add
pop
jno
mov
sahf
imul
cmp
jp
cmp
cmpsl
loope
aam
jge
jb
rorl
pop
hlt
add
mov
and
mov
add
add
lock
out
jnp
add
mov
jle
xchg
add
nop
add
mov
mov
cmp
sub
sub
sub
cli
jns
cmp
fwait
jbe
or
add
jbe
jno
je
and
push
add
movb
loope
jb
popf
cmp
stc
mov
add
sub
nop
add
jo
mov
and
mov
mov
movsl
sub
out
dec
dec
mov
addb
add
push
popf
test
and
xchg
jl
add
lahf
fwait
adc
push
lcall
push
in
in
inc
mov
sbb
mov
add
pop
cmp
sub
mov
mov
and
push
add
pop
sub
int3
mov
je
movb
push
add
out
add
add
and
sub
add
or
scas
cli
sbb
hlt
add
loop
fsub
add
add
clc
or
push
add
adc
cmp
pop
adc
les
bound
mov
or
mov
inc
add
push
movsl
cmpsl
jmp
hlt
add
pop
cmc
jnp
lods
push
push
add
and
mov
cmp
add
out
xor
jmp
add
ljmp
pop
clc
rolb
mov
call
jmp
mov
mov
add
pusha
add
mov
cmp
add
add
add
inc
add
add
add
mov
outsl
out
bound
mov
testb
inc
add
adc
mov
pop
sub
movsl
pop
xchg
add
inc
inc
mov
add
sub
add
or
jne
nop
add
add
js
adc
add
add
inc
add
repz
xor
push
add
add
add
add
jmp
add
add
popf
add
std
ret
adc
inc
add
add
nop
add
mov
xor
cld
jle
stos
shrl
lods
mov
add
jnp
fimuls
mov
in
dec
aam
or
lods
cs
fwait
xor
dec
fildll
pop
inc
add
add
mov
add
add
add
add
sbb
rolb
push
pop
or
pusha
add
xchg
add
jae
add
sahf
or
enter
repz
sahf
movb
add
add
lcall
add
adc
push
lahf
lds
inc
add
and
sub
push
add
dec
aaa
inc
ret
shrl
faddl
add
add
int
add
or
sub
add
adc
lcall
add
add
daa
xchg
add
dec
ret
lock
add
out
cld
lds
test
leave
mov
popa
nop
add
int
cmc
mov
add
ljmp
and
inc
es
mov
sub
add
in
loopne
mov
add
in
pop
mov
sti
jecxz
add
mov
rolb
or
imul
add
add
add
mov
js
call
dec
cld
gs
fldenv
add
or
add
add
mov
or
add
add
mov
xchg
int
add
push
add
add
das
and
movb
add
add
lret
addb
add
cld
mov
mov
add
adc
push
popa
mov
push
add
lods
mov
add
xlat
jg
mov
nop
add
fs
dec
dec
or
cmp
xchg
inc
add
add
add
pop
add
sti
mov
into
xchg
add
sub
add
pop
bound
mov
xorl
sbb
int3
xor
jecxz
add
sbb
add
mov
jo
call
add
test
add
push
mov
sbb
add
add
mov
dec
aam
addb
ja
add
mov
dec
out
cs
leave
xor
in
ja
incl
add
jge
add
leave
cmp
mov
add
rolb
sbb
pop
push
inc
add
add
adc
ds
xchg
add
jae
iret
mov
add
add
repnz
ss
add
fsubrl
std
xor
cli
cmpsb
add
add
add
data16
add
inc
add
push
aam
and
hlt
add
gs
aas
pop
and
mov
or
fisubrl
insl
mov
add
mov
jae
jbe
hlt
add
loop
add
mov
out
cmp
lahf
lcall
add
add
add
mov
mov
cmp
mov
add
adc
push
lahf
out
pushf
scas
mov
loope
sahf
sub
lock
add
mov
ffree
fistps
add
addb
add
ret
xchg
add
push
add
pop
lea
test
movsb
add
push
add
mov
jae
cmp
pop
imul
repz
loop
rorl
and
add
dec
xchg
add
xchg
pop
xchg
in
int3
ret
add
xor
int
loope
cmpl
add
jmp
je
add
cmpsl
inc
push
dec
in
rolb
sub
add
cmp
add
add
inc
add
add
add
xchg
add
add
movb
inc
add
xor
repz
aaa
aaa
jg
or
push
add
xor
cwtl
leave
repnz
cltd
mov
lock
adc
data16
ret
push
ret
add
cltd
push
add
mov
in
xchg
call
sbb
repnz
call
and
pop
dec
pop
dec
mov
into
push
cmp
pushf
decl
add
enter
add
add
add
leave
lret
adc
iret
or
jno,pt
add
cld
pop
mov
fcmovnu
cmp
add
xchg
add
and
mov
flds
stos
addb
push
add
add
jo
jle
test
add
mov
mov
sub
sahf
adc
and
inc
outsb
mov
mov
inc
add
sbb
push
add
add
movsb
add
push
test
jb
cmpsb
add
daa
fisubs
add
scas
in
and
icebp
or
add
mov
add
vmaxss
outsl
mov
cmovl
dec
shll
push
add
add
ficomps
inc
sahf
in
lret
adc
ret
add
jns
mov
rolb
add
mov
add
add
add
adc
cmp
arpl
ja
add
push
add
xchg
add
push
mov
in
cmpsl
cmp
add
mov
lcall
add
popf
adc
mov
jns
add
ds
add
cmpsb
add
add
add
and
push
add
add
arpl
repz
add
xor
mov
inc
add
mov
xchg
add
sub
testb
add
cmp
pop
mov
test
in
outsl
sub
add
add
adc
stc
aaa
cmp
xor
xchg
out
jbe
insl
jp
inc
int3
insl
cmp
mov
cltd
cld
mov
repnz
out
jns
mov
mov
lods
ljmp
add
add
add
xor
pop
lds
insb
adc
cmp
sti
in
mov
cmc
lret
mov
std
cmpsb
add
add
cmpsl
jbe
in
rcrl
add
inc
add
daa
xchg
lock
sbb
mov
mov
les
rolb
push
add
cmp
dec
fnsave
addb
cld
mov
add
pop
rolb
out
out
mov
leave
add
mov
sbb
xor
add
xchg
add
mov
imul
xchg
add
pop
mov
jnp
std
xchg
and
push
pop
jp
out
mov
dec
ljmp
add
mov
mov
sub
add
mov
dec
inc
mov
mov
sub
add
push
sub
and
mov
lods
frstor
mov
add
xchg
add
testb
add
xor
inc
sub
add
out
sub
imul
and
jmp
movsb
add
leave
das
scas
call
cmp
push
add
push
add
add
mov
jg
add
pushf
ljmp
pop
je
popl
mov
jmp
in
pop
out
scas
and
add
pop
add
mov
or
add
insl
addr16
pushf
in
mov
rolb
test
dec
cmp
insb
lods
push
test
daa
scas
or
movb
jo
xor
cmp
cmp
add
jbe
xor
cmp
sbb
xchg
add
mov
fists
add
movb
addb
add
xchg
add
inc
add
pop
cmpsl
pop
fwait
cli
mov
cmp
aad
js
xchg
xlat
jbe
mov
add
add
inc
pop
and
mov
stc
repz
mov
pop
adc
mov
jno
into
jp
cmc
cmp
mov
fbstp
add
add
loope
fiadds
data16
add
sbb
adc
lods
sub
aas
mov
push
in
push
jl
mov
and
mov
dec
repnz
mov
mov
add
add
xchg
add
sub
repz
inc
mov
or
stc
mov
adc
loope
mov
mov
sahf
nop
add
add
add
out
test
pop
imul
add
fnstsw
or
jbe
mov
pop
dec
popf
jns
xchg
xlat
or
pop
enter
out
adc
pop
aad
add
int
scas
cmpsl
aad
mov
add
sub
out
mov
arpl
or
or
daa
add
add
jo
mov
insl
icebp
add
xchg
add
outsb
and
subl
test
test
push
add
inc
scas
scas
test
add
andl
mov
std
js
xor
inc
js
add
mov
ret
sahf
push
aaa
daa
add
push
add
adc
call
add
adc
pop
insb
ret
jge
xchg
clc
cmpsl
std
mov
jg
aaa
xchg
xchg
add
inc
rolb
rolb
outsb
cmc
sub
rorl
iret
sbb
popa
cvtdq2ps
add
inc
add
add
movb
cmp
add
std
lret
sub
test
popa
sbb
icebp
movb
mov
sbb
mov
dec
leave
pop
cmovne
add
jle
add
mov
addb
int3
loop
addb
inc
mov
add
movsb
add
fmuls
mov
dec
cmp
sbb
add
add
mov
fstpl
add
outsl
lock
fiadds
add
add
jmp
jns
js
mov
add
addb
mov
add
mov
orl
adc
pop
adc
leave
int
add
add
add
add
mov
loop
jae
jae
and
add
push
add
push
add
enter
inc
gs
loop
popf
inc
jno
ljmp
addb
dec
outsb
push
add
pop
add
addr16
xchg
add
sub
inc
or
add
imul
seto
and
mov
push
or
add
and
mov
add
gs
add
mov
jecxz
test
dec
icebp
decb
inc
lret
test
dec
add
stos
pushf
inc
add
testb
loop
and
ret
jle
jl
add
add
rolb
rolb
mov
push
jl
push
pusha
add
addb
insb
out
pop
call
and
mov
pop
inc
cmp
mov
add
les
mov
add
mov
dec
add
mov
iret
ja
add
faddp
jge
ret
push
js
add
add
mov
mov
pop
add
ds
sahf
in
add
add
add
add
repnz
add
icebp
sub
cmp
lods
test
push
iret
cmpsl
inc
push
add
add
stos
rolb
loop
add
enter
and
mov
xor
iret
shrl
add
mov
lret
add
test
sbb
xchg
cmp
xlat
enter
jecxz
add
mov
and
mov
sahf
test
add
outsl
scas
icebp
or
jg
cwtl
fldl
out
add
sub
out
add
add
hlt
add
imul
incl
add
add
insb
dec
sbb
adc
les
addb
add
jmp
push
add
and
cli
cli
addb
add
in
test
aam
push
insb
pop
xchg
add
mov
mov
add
mov
sub
adc
out
pusha
add
movsb
add
add
fstpt
ds
add
mov
lods
cmpsl
mov
dec
and
mov
add
mov
add
cmp
adc
popa
jle
ret
call
inc
add
pop
out
mov
lods
add
inc
add
mov
add
add
inc
mov
fdivrs
inc
add
push
add
xchg
cmc
mov
push
inc
xlat
fists
enter
add
or
jno
fstpt
lds
and
cmpsl
lods
or
scas
testb
add
add
sub
or
test
pop
mov
push
add
ss
add
add
inc
push
add
add
cmc
fsincos
insb
in
imul
add
outsb
inc
add
mov
fsubr
mov
add
add
sahf
inc
add
sbb
push
rolb
xor
add
dec
cwtl
sbb
add
pop
adc
and
mov
mov
add
add
add
out
imul
std
cmp
inc
add
stos
inc
in
call
add
cmpsb
add
ljmp
add
add
movsb
add
sub
js
add
outsb
mov
lods
or
dec
dec
ja
cwtl
dec
push
push
add
add
add
inc
add
sti
into
cld
mov
mov
xchg
imul
add
ret
jmp
call
jp
xchg
clc
add
aad
in
push
in
add
les
aas
and
adc
add
mov
push
add
push
fsincos
xchg
add
std
std
dec
mov
jns
add
add
inc
add
testl
xchg
add
add
inc
xchg
push
rolb
movsb
add
pop
int3
test
mov
gs
jno
adc
mov
add
add
lahf
scas
js
add
nop
add
add
mov
outsl
rolb
add
fprem1
loope
push
add
mov
add
and
repz
add
test
or
inc
or
gs
mov
xchg
sbb
add
dec
xlat
aaa
std
fcoms
lahf
push
add
add
add
or
jge
dec
adc
inc
fmul
das
jnp
sub
sbb
add
jnp
pop
pusha
add
aaa
and
sub
add
mov
add
stc
in
push
lret
aas
push
xor
mov
pop
push
xor
add
adc
and
jo
out
mov
push
punpckhwd
inc
add
aad
cmc
adcl
add
add
incl
mov
add
mov
mov
add
add
xchg
mov
fnstenv
add
add
add
add
dec
dec
roll
mov
mov
add
add
adc
xor
sub
pop
xorl
pop
leave
fwait
add
add
add
dec
sahf
xchg
add
add
mov
push
add
jae
add
fcmovb
add
add
add
mov
out
add
add
cmp
push
add
call
ljmp
mov
into
mov
mov
fdivs
fwait
sub
sub
sub
add
add
and
mov
adc
call
test
testb
add
add
cmp
add
dec
sbb
add
mov
nop
add
add
pop
pop
je
mov
mov
add
lds
std
pop
mov
add
jge
mov
add
mov
testb
sbb
pavgw
adc
inc
add
add
xor
mov
add
add
lea
mov
xor
xor
pop
mov
add
std
jne
icebp
xor
xor
add
add
mov
sbb
addl
add
add
add
add
mov
or
add
aad
add
add
add
leave
sub
daa
cmp
sahf
sbb
mov
add
add
mov
mov
jge
fldenv
jbe
xor
add
jbe
fidivs
cmp
mov
xchg
mov
pop
sub
add
add
les
fcompl
out
add
addb
sub
add
fwait
arpl
push
add
add
int
add
add
sbb
add
pushf
stos
test
pop
fwait
movsb
add
stos
in
outsb
rorl
loope
lret
outsl
push
add
xor
mov
mov
add
aaa
movsl
movsb
add
in
xchg
stos
outsb
mov
lods
cmp
xchg
sarl
lds
repnz
mov
rolb
jecxz
movb
insl
pop
xor
sub
sbb
ja
lret
psrlw
mov
add
add
mov
out
inc
add
and
into
mov
jbe
inc
add
dec
imul
mov
outsb
or
ljmp
add
scas
stc
push
add
add
and
dec
dec
es
xchg
dec
xchg
add
mov
dec
inc
add
insl
xchg
mov
xlat
push
add
rol
add
inc
add
popa
pop
add
cmp
and
mov
rcr
jnp
movb
jl
addb
add
cmp
add
imul
mov
cwtl
dec
cmp
out
pop
inc
xor
xor
xorl
dec
mov
shr
mov
add
add
add
int3
xchg
outsb
cmpsl
inc
add
add
out
nop
add
pop
scas
and
mov
add
mov
mov
jmp
jbe
icebp
popf
jo
imul
add
stos
daa
cmp
push
add
add
add
add
mov
add
sub
mov
xchg
add
dec
fldt
loop
insb
jle
into
in
fnsetpm(287
add
xchg
add
add
jns
add
inc
jp
adc
std
sub
sbb
add
jecxz
addb
mov
mov
insl
das
pslld
loopne
dec
fs
xchg
add
add
mov
lret
gs
jb
pop
lock
push
dec
adc
xor
xor
cmpsb
add
xchg
add
std
mov
pushf
inc
clc
imul
mov
jecxz
push
add
and
add
sbb
mov
pop
in
lock
jb
add
mov
pop
ja
push
add
cmpsb
add
cmp
mov
xor
sub
jge
add
mov
rolb
adc
mov
mov
add
loopne
and
mov
pop
daa
ds
mov
mov
add
lcall
pop
cwtl
cmp
call
add
pusha
add
adc
arpl
in
add
add
jg
add
xor
add
mov
xchg
jne
jge
daa
push
add
xchg
roll
add
add
dec
mov
popa
loope
cmc
popa
sub
add
cmp
push
cmp
push
pop
xchg
add
add
jne
add
cmp
add
cmpsl
arpl
mov
cmp
add
jp
out
in
inc
add
addb
lret
mov
dec
jb
mov
js
adc
add
add
pusha
add
add
mov
add
mov
pop
mov
sub
in
insb
loopne
pop
xor
hlt
add
xor
add
add
sub
mov
mov
mov
add
push
add
mov
cmpsb
add
and
mov
mov
cli
movb
or
aas
ljmp
out
mov
fsubl
cmovp
scas
push
dec
jecxz
in
pop
mov
cmpsl
mov
push
add
out
ljmp
movsl
fcoml
mov
mov
pop
in
mov
mov
test
or
add
pop
test
xor
add
or
aam
jo
mov
jg
arpl
pushf
inc
jae
push
mov
add
xor
push
mov
add
stos
sbb
sbb
add
cmp
loop
data16
imul
out
jo
jb
xor
daa
push
cmp
mov
lds
xor
into
push
push
add
add
in
ja
mov
repz
mov
ljmp
sbb
inc
loop
jge
movsb
add
add
add
xorl
iret
ret
cmp
insb
push
add
test
add
add
add
cmpl
inc
pop
adc
adc
testl
ret
sbbl
fcom
add
lret
adc
mov
pop
mov
loope
cwtl
xor
int
cmp
jge
add
mov
negl
add
dec
push
add
pop
mov
sub
rolb
lret
adc
test
jbe
mov
arpl
cs
rorl
mov
mov
mov
and
mov
mov
sahf
imul
ficomps
sub
add
mov
xor
cmp
fmull
popa
jl
sub
xchg
scas
pop
xchg
add
loope
aas
jns
and
mov
inc
add
dec
mov
dec
sub
movsl
or
pop
mov
or
cmp
add
rolb
mov
add
push
add
outsb
mov
xchg
add
mov
mov
or
add
mov
pushl
dec
scas
and
xchg
add
add
inc
add
mov
inc
das
cmp
jno
sbb
add
inc
int
sbb
shrl
test
outsb
inc
lock
add
add
call
mov
repnz
mov
add
add
add
add
add
inc
add
add
cmpsl
jno
mov
dec
jnp
jge
and
sub
out
test
add
add
test
das
sbb
add
add
add
add
mov
ja
add
add
mov
hlt
add
stc
and
inc
std
arpl
add
leave
ret
mov
add
xchg
fadds
mov
add
test
pop
imul
lods
add
sahf
sbb
sub
add
cmc
clc
sub
mov
cmp
mov
mov
push
arpl
rcrl
hlt
add
add
add
or
adc
xor
int
rolb
add
shll
sub
mov
adc
mov
fmull
mov
into
add
mov
push
add
movsl
jnp
in
dec
jg
add
push
sbb
add
add
add
add
popa
cmp
rolb
add
repnz
into
cmp
inc
popa
sub
cmp
mov
cmpsl
or
fildl
mov
sub
jnp
je
push
loopne
mov
jns
jl
and
add
ss
cmp
push
aas
icebp
dec
mov
inc
jae
fisubrl
mov
cwtl
mov
push
lea
fmul
jle
aas
cmp
jae
mov
imul
stos
das
movsl
outsb
rolb
cmp
cmpsb
add
or
fscale
movsl
jbe
fisubl
mov
add
or
cmc
push
faddl
sahf
movb
sub
add
sbb
add
xlat
sbb
hlt
add
in
sbb
add
fisubrl
sub
inc
dec
mov
lahf
and
mov
add
mov
loop
repnz
inc
xor
or
add
jno
out
sub
fildl
pop
repz
inc
test
add
jns
add
sub
xchg
add
mov
push
out
mov
xor
or
sbb
add
cmp
rolb
xchg
xchg
mov
pop
xchg
push
and
mov
add
add
jbe
mov
jl
add
lret
stos
pop
xchg
aas
jecxz
ds
mov
pop
mov
fsubl
mov
mov
add
push
mov
pop
jnp
jp
data16
popa
push
add
xorl
add
add
xor
imul
imul
nop
add
pushf
mov
popf
inc
add
pop
cltd
adc
xor
and
mov
sbbl
mov
add
add
add
xor
or
in
les
fstpl
add
bound
mov
mov
add
xlat
ds
add
add
addr16
sahf
leave
nop
add
push
sub
fidivs
add
addr16
imul
add
add
mov
cmp
xchg
add
add
rorl
stc
sbb
or
add
add
jne
add
loopne
sub
add
pop
push
out
ret
sub
push
jo
dec
rorl
or
scas
and
mov
pop
iret
jmp
adc
ret
inc
add
mov
mov
incl
jp
sti
inc
add
cli
lock
mov
add
aam
rolb
pop
xchg
mov
ds
add
xchg
jmp
pop
dec
jecxz
daa
hlt
add
mov
mov
shrl
add
adc
pop
lds
jne
inc
lock
add
or
iret
pusha
add
push
add
add
enter
mov
xor
aad
xor
jp
mov
mov
add
fsts
mov
add
add
add
jp
add
push
add
sbb
sbb
movb
movb
add
addb
add
add
dec
repnz
add
add
cmp
ret
add
mov
jge
add
pop
dec
les
cmp
loope
push
add
add
test
movsb
add
mov
aaa
xchg
cmp
and
mov
test
or
add
sbb
add
mov
out
into
push
jecxz
add
fstpt
mov
insl
dec
lahf
push
and
mov
adc
jl
add
dec
fisubrs
stc
inc
add
test
fists
add
add
mov
adc
push
mov
xor
add
negl
mov
je
cmp
data16
ret
mov
xor
cmp
push
add
fdivrs
repnz
add
pop
mov
daa
xchg
inc
add
add
add
push
add
aas
mov
mov
xor
lock
testb
cli
rolb
pop
clc
mov
add
xlat
jmp
add
mov
add
int3
lahf
roll
add
stos
jg
pop
pop
push
add
xorl
lret
add
add
xchg
add
mov
pop
mov
mov
add
add
mov
test
imul
imul
add
add
inc
add
jb
push
lret
rolb
xchg
add
add
scas
cli
cli
outsb
dec
push
mov
movsb
add
stos
add
xor
xlat
mov
push
add
push
add
add
mov
push
add
pushf
rcl
out
sahf
int
cmp
std
pop
fsubrp
push
add
inc
xchg
mov
and
xor
aas
in
mov
push
loopne
adc
add
add
mov
stos
pop
adc
push
add
and
cmpsb
add
mov
dec
ja
add
test
xchg
dec
lret
outsl
ja
add
add
gs
pop
rorl
xor
push
add
push
dec
mov
popf
nop
add
aas
xor
cmp
or
aaa
or
pushf
add
cmpsb
add
ja
jp
sub
xor
iret
jle
jg
lcall
pop
lcall
inc
xchg
add
popf
test
jg
pop
loopne
mov
mov
call
mov
pusha
add
add
ds
mov
aad
lahf
call
in
adc
cs
dec
imul
mov
inc
add
inc
add
scas
jge
jne
les
add
cmpsl
fistpl
sub
outsb
sti
pop
out
je
out
or
mov
mov
dec
je
and
adc
bound
mov
inc
daa
mov
bound
mov
add
mov
push
addb
add
add
add
hlt
add
add
pusha
add
add
in
mov
add
ret
add
push
pop
push
add
repz
xchg
rolb
push
sbb
jmp
add
in
mull
add
add
add
add
mov
and
mov
lret
movsl
jg
inc
inc
cmc
std
jp
and
mov
and
mov
rcpps
outsb
sbb
add
int3
pop
mov
push
xor
add
loopne
mov
adc
out
and
add
int3
imul
add
and
mov
int
push
add
dec
loop
aaa
into
dec
push
add
add
push
in
cli
jge
push
leave
outsl
mov
fsubrs
test
add
insl
add
mov
out
add
add
add
jns
or
test
sub
and
mov
cmpsl
movsl
sbb
aad
rcll
pushf
movsl
aad
icebp
dec
xor
add
pop
aas
scas
movb
xchg
add
jb
popf
repz
adc
outsl
jmp
int
add
add
add
cs
jne
add
fbstp
jb
dec
sti
jne
adc
push
mov
push
jg
mov
adc
mov
aam
dec
je
fst
add
push
add
mov
sbb
cmpsb
add
sahf
fcompl
int
mov
bound
mov
add
add
add
pop
fcoml
jmp
fildll
add
outsb
mov
movsb
add
mov
dec
inc
add
add
mov
cmp
ljmp
add
mov
std
adc
mov
xor
lcall
add
stc
idivl
adc
add
test
add
add
aam
dec
adc
push
add
or
push
mov
add
mov
imul
add
pusha
add
jb
add
loope
add
inc
ja
push
add
rcrl
and
sahf
mov
addr16
add
mov
add
into
add
or
add
xor
setbe
les
xchg
jo
je
jne
testb
rolb
aas
je
out
aaa
sub
in
add
testb
testb
push
push
mov
xlat
mov
add
mov
add
popa
push
add
data16
shll
loope
and
add
mov
add
movb
adc
addb
mov
outsl
sbb
rolb
jge
add
loope
lds
aam
std
cmp
add
or
rolb
mov
pop
int
cmpsl
cwtl
mov
sbb
mov
movsb
add
add
xchg
inc
test
add
push
cmpsl
lods
bound
mov
sar
add
mov
push
add
test
xor
repnz
movb
aaa
nop
add
add
arpl
ret
sub
jb
out
adc
mov
push
or
add
mov
mov
fsts
sbb
add
bound
mov
icebp
cltd
repz
pop
pop
add
mov
add
add
cltd
inc
add
dec
repz
pop
cltd
inc
xor
popa
add
xchg
call
inc
add
dec
insl
testb
scas
faddp
add
dec
or
fdiv
add
pop
pop
dec
pmaxub
mov
clc
and
push
mov
addb
inc
add
std
aaa
add
mov
push
repnz
add
add
pop
in
or
movb
in
inc
lahf
jne
dec
mov
sti
push
and
mov
push
mov
pop
insl
lret
add
or
mov
arpl
and
add
mov
sti
jl
mov
mov
fsubr
scas
addb
les
jg
xchg
add
add
dec
cmpsl
add
add
add
add
mov
loope
add
push
add
negl
fidivl
add
in
bound
mov
cmp
add
pop
add
sub
mov
push
adc
das
popa
cs
in
ds
xchg
add
sti
mov
mov
sbb
add
std
cmp
dec
call
mov
add
je
cmpsb
add
mov
setge
cmp
mov
mov
xchg
add
add
rolb
add
add
add
add
add
fld
add
fmuls
daa
in
xchg
mov
dec
out
fcomps
add
xchg
cmp
xchg
push
add
add
jle
dec
jns
sub
add
push
jmp
insb
push
add
movsb
add
add
mov
js
repnz
add
add
push
add
add
push
sti
mov
fwait
mov
enter
sahf
xor
fisttps
add
jmp
xchg
add
adc
and
mov
xor
and
add
js
add
add
mov
add
add
arpl
add
pop
jge
incb
xchg
leave
adcl
call
add
push
xchg
jb
sbb
testb
mov
hlt
add
lds
add
and
mov
xor
psraw
addb
add
adc
pop
test
cmpsl
andl
jns
in
sub
add
test
cs
pusha
add
test
mov
cmpsl
aas
incl
pop
in
pop
sbb
out
into
cld
inc
add
outsl
negl
mov
add
divl
add
out
add
add
add
xchg
add
mov
nop
add
in
or
outsb
lret
jo
jl
add
mov
add
add
mov
out
das
cmp
xor
jg
add
xchg
add
xchg
fstps
sbb
add
add
cwtl
push
add
lret
dec
xor
mov
in
push
add
add
adc
jg
mov
add
mov
lods
mov
jbe
ret
mov
lret
xor
push
cmp
pop
call
mov
add
sub
and
ret
add
mov
pop
inc
fidivl
add
mov
mov
pop
sub
pushf
xor
fs
das
dec
add
mov
or
xor
add
sahf
stos
outsb
mov
xor
clc
ret
call
pop
pop
insb
xor
add
mov
dec
data16
add
arpl
pop
cmpsl
and
cld
stos
sarl
add
mov
mov
dec
negl
icebp
movsb
add
icebp
xchg
mov
repz
add
push
add
nop
add
in
add
setns
test
movsl
push
add
sarl
add
xor
cmpsl
mov
test
push
add
add
add
add
lea
aas
push
cmp
mov
addb
test
rorl
jae
popl
mov
add
aaa
sbb
sbb
imull
addl
fldl
mov
rcll
movb
pop
sti
loopne
jmp
add
pop
test
xor
and
add
inc
push
dec
pop
pusha
add
jb
jmp
out
lahf
testl
js
pop
stos
mov
outsb
into
adc
test
aaa
stos
sub
add
add
adc
xchg
or
int
cmp
add
dec
sbb
add
add
mov
add
sbb
add
test
add
daa
loope
add
lret
mov
or
add
jmp
int
data16
xor
jg
add
xor
outsl
sbb
jmp
lds
xor
mov
add
xchg
add
and
icebp
mov
jne
add
sub
pushf
es
lea
data16
mov
sbb
decl
clc
push
add
mov
insb
sub
mov
mov
add
ret
test
movsl
daa
lea
fldcw
add
mov
aad
dec
insb
outsl
into
adc
mov
add
add
rolb
test
add
mov
cmp
mov
iret
cmc
aad
aas
cmc
lock
sub
mov
pop
enter
call
nop
add
xchg
add
out
shr
push
cmpsb
add
add
in
xor
lods
xor
add
popa
test
mov
add
add
add
cmp
fsubp
mov
mov
rolb
jo
add
cmpsl
movsl
bound
mov
jno
add
mov
enter
add
into
stc
fidivrs
jbe
clc
test
stc
xlat
jae
jb
fcoms
jo
cld
dec
sub
inc
add
add
add
out
lods
sub
lds
mov
add
mov
test
mov
mov
add
jno
add
mov
subl
mov
add
hlt
add
mov
or
pop
jl
add
xor
add
test
dec
mov
sub
fimuls
add
pop
fdivl
add
test
jg
add
dec
xchg
xor
push
add
sahf
xor
pusha
add
lea
jo
cmp
enter
lcall
aas
push
add
add
jmp
and
mov
mov
mull
insl
push
push
lea
xchg
add
add
add
add
mov
mov
xchg
mov
mov
xchg
add
jp
lret
xchg
repz
jns
loop
push
les
jae
jb
pop
dec
cltd
sub
stos
scas
adc
daa
jmp
stos
cltd
mov
mov
mov
test
add
add
jge
out
inc
add
lods
inc
add
dec
test
add
and
mov
dec
jmp
xchg
mov
add
fcmovbe
and
mov
add
or
mov
fidivs
pop
test
movsl
or
cmp
add
addb
add
add
push
add
push
add
out
loopne
sbb
and
mov
mov
mov
add
stos
xchg
add
test
xchg
xor
sbb
fldt
add
add
ds
adc
xor
jp
ret
data16
add
mov
dec
rolb
mov
aad
je
jae
iret
pop
ret
dec
stc
sarl
add
popa
push
mov
jmp
fisubrl
mov
rolb
lds
idivl
mov
push
add
in
in
in
jnp
add
mov
hlt
add
pop
cmpsb
add
imul
test
mov
mov
aam
push
pop
arpl
mov
lods
leave
mov
loop
hlt
add
add
dec
add
mov
add
test
inc
mov
test
push
add
add
push
add
add
add
add
outsb
sub
add
xor
cmp
lock
ja
inc
xchg
rolb
cmp
out
addb
loop
jns
add
add
ficomps
inc
ljmp
repnz
inc
add
sahf
stos
mov
add
mov
lret
and
push
add
cmp
ja
ja
add
mov
dec
jo,pn
sahf
sub
mov
aaa
fcmovnbe
add
dec
test
jnp
add
add
add
mov
gs
cmp
into
push
add
clc
data16
fwait
mov
add
add
jmp
add
xchg
loope
repnz
add
xchg
pusha
add
pop
in
clc
jbe
aaa
pop
js
push
or
add
std
mov
xchg
ficomps
icebp
xchg
mov
ret
fbld
sub
lods
adc
xchg
shr
pusha
add
scas
dec
add
mov
fisubrs
adc
add
mov
add
mov
cmpsb
add
das
sub
mov
add
add
xor
mov
sub
int3
dec
stc
aas
adcl
arpl
or
push
xchg
lret
add
xor
and
mov
add
mov
and
mov
and
mov
int
xchg
jmp
add
push
add
ds
add
scas
sahf
push
loop
fdivl
mov
fcomps
inc
add
bound
mov
add
das
cmp
imul
cmp
jg
dec
pop
sub
cli
push
xchg
jge
mov
stos
or
adc
sub
add
test
mov
cmp
fdivs
stos
loopne
out
adc
sbb
hlt
add
ret
add
dec
ljmp
dec
dec
rolb
sub
add
add
ret
cmp
adc
adc
jg
cmp
add
rolb
jg
rcrl
add
les
or
or
pusha
add
sub
add
jne
loopne
adcl
in
mov
ljmp
test
add
cli
inc
add
fimuls
add
clc
outsl
aaa
jbe
inc
mov
mov
push
or
xor
add
add
add
pop
rcl
pop
push
add
add
ret
dec
mov
sub
mov
popf
or
add
sub
add
jb
dec
testb
add
outsl
pop
inc
cmp
orl
add
cmp
sldt
mov
jge
add
add
ljmp
inc
add
add
add
loop
mov
cmp
push
mull
out
adc
jp
mov
add
jnp
add
dec
movb
xor
push
push
jmp
add
in
movsb
add
inc
inc
add
dec
cwtl
jecxz
aas
leave
add
sahf
and
lods
in
cmp
xchg
rolb
mov
sub
jns
sub
lods
pop
jg
add
in
shll
add
aam
fistpll
addb
mov
add
inc
xchg
add
cli
pop
sub
add
add
mov
add
add
bound
mov
add
jmp
aas
pop
enter
into
aas
and
jge
mov
jg
rolb
push
neg
or
jno
add
pop
and
rolb
rolb
repnz
dec
sbb
push
add
les
add
in
outsb
mov
pushf
pusha
add
mov
addr16
fwait
xorl
mov
lods
pop
mov
stos
jg
add
add
xchg
add
sub
and
add
add
inc
add
inc
add
add
lret
ror
jmp
push
add
ret
push
add
imul
jnp
divl
rcrl
mov
sub
cs
pop
sbb
cli
inc
add
in
insl
hlt
add
pop
repz
add
das
decl
xchg
test
add
gs
jnp
pushf
mov
mov
add
test
incl
add
inc
test
pop
rolb
jns
xchg
add
out
sbb
mov
aad
aad
add
mov
dec
sbb
add
or
add
into
xor
or
cmp
sbb
insl
aas
jle
pop
add
mov
aad
out
and
and
mov
add
iret
mov
insb
popf
adc
sub
cmc
adc
xchg
and
testl
add
add
add
add
rolb
nop
add
xlat
jne
jne
dec
fbstp
add
pop
out
aad
add
add
add
data16
adc
lods
xchg
jl
add
int
add
xchg
xor
sub
pop
cmp
stc
pop
aad
repnz
pop
xlat
bound
mov
add
test
dec
ficompl
fstpt
cmp
rolb
adc
mov
stos
out
insl
add
mov
mov
or
mov
push
inc
add
add
add
add
movsb
add
cld
jb
lret
add
adc
and
mov
mov
inc
sub
add
cmp
add
add
je
repnz
loopne
movb
mov
add
daa
pop
push
test
mov
add
lret
push
pop
mov
jno
cmp
add
add
jge
movb
add
mov
xor
add
sbb
stc
inc
add
lcall
add
addb
jnp
add
push
addb
add
adc
mov
add
mov
into
movsl
mov
dec
xchg
add
out
movsb
add
loop
inc
cmp
in
dec
addb
or
inc
cmp
stos
inc
add
testb
loop
movsb
add
add
andl
mov
sbb
jl
push
add
adc
cmc
dec
and
ret
negl
push
add
jno
iret
jle
add
outsl
push
add
mov
push
add
enter
push
add
jne
lahf
testb
inc
add
add
leave
xor
add
add
lret
pop
jle
mov
rolb
add
jb
jno
mov
dec
movsl
mov
mov
cmp
add
dec
testb
sub
data16
pop
cld
rolb
xchg
add
out
mov
in
stc
jae
mov
add
mov
add
sarl
add
addb
stc
lret
cld
pop
xlat
js
jns
add
std
mov
mov
fidivl
add
bound
mov
fs
and
push
add
cmp
cmc
iret
std
adc
or
popf
sti
mov
add
aaa
jge
add
in
ja
cmp
stc
mov
xchg
push
jne
add
add
add
push
add
or
sub
add
mov
add
lret
pop
pop
into
xchg
addb
add
add
add
test
mov
push
popa
ds
icebp
ljmp
cmp
dec
das
xchg
add
addl
add
add
add
add
xchg
add
ds
xor
add
pop
mov
add
add
add
mov
cmp
out
sub
lock
add
and
mov
xor
mov
mov
bound
mov
add
add
mov
mov
addb
mov
add
in
mov
fldt
mov
adc
add
add
add
lcall
add
test
adc
lods
iret
or
stc
add
stos
xrelease
mov
add
dec
pop
xchg
add
sub
js
loop
sahf
sti
jae
xchg
add
add
jmp
mov
mov
jnp
add
or
add
add
stc
stc
inc
movsl
xchg
fidivs
lret
subl
mov
lret
add
jne
lcall
mov
jg
and
std
les
xchg
cmpsb
add
incl
xor
scas
sbb
add
test
add
jae
or
add
lods
or
add
mov
cmp
mov
cs
hlt
add
add
add
mov
add
and
mov
rolb
sub
lahf
push
and
dec
hlt
add
adc
int
add
mov
test
loop
xchg
inc
mov
sub
sbb
push
scas
xchg
add
push
add
add
cmpsl
xor
jno
sbb
testb
add
inc
ljmp
sarl
rolb
lock
pop
adc
pop
push
add
mov
add
add
add
rorl
into
mov
sarl
out
jmp
add
jecxz
adc
mov
mov
insb
xchg
add
mov
add
scas
iret
add
mov
nop
add
dec
out
sbb
xchg
push
add
cmp
sbb
in
add
jo
cmp
addb
bound
mov
jae
mov
test
xchg
add
dec
add
add
jge
jg
add
pop
imul
add
cmc
jno
mov
and
jno
mov
fsubrp
cmp
inc
adc
in
sti
push
add
cltd
enter
mov
push
xor
jb
jecxz
cmp
stos
jns
test
test
sbb
mov
add
cmp
xchg
out
cmp
pop
rolb
imul
ficompl
jg
int3
lahf
testb
dec
mov
data16
rolb
sbb
ja
sahf
outsb
pop
pop
int
repz
add
dec
push
add
add
dec
xor
or
mov
mov
add
sub
sub
add
lcall
jne
sbb
stos
or
or
push
sbb
xchg
add
add
add
or
add
les
das
movsl
lret
add
add
cmp
push
add
mov
ss
add
mov
adc
mov
loopne
xchg
xchg
mov
inc
add
mov
inc
add
in
jmp
fs
nopl
dec
sbb
add
add
mov
add
lods
sbb
add
leave
fsubr
test
pop
jp
scas
push
add
mov
daa
jnp
add
mov
sbb
scas
xor
test
loope
mov
add
add
or
add
mov
mov
mov
add
sbb
jecxz
cmp
fucomp
sbb
pop
push
add
add
pop
adc
mov
stos
add
mov
add
mov
les
lahf
loope
fwait
pop
inc
add
add
jg
cmp
add
mov
mov
addr16
orl
add
repz
mov
movb
loopne
or
adc
add
out
push
add
fs
jne
out
popf
imul
jns
cwtl
inc
fstps
add
add
testb
clc
cmp
push
add
mov
pushf
cltd
std
dec
mov
cmp
sub
xchg
add
leave
or
add
xlat
pop
jb
cld
rolb
scas
mov
jp
in
pop
fisttpl
and
add
pop
add
das
or
pop
movb
pop
adc
addb
xlat
add
jecxz
mov
out
inc
add
cmp
sbb
add
scas
pop
push
rolb
cmpsb
add
add
movsl
jp
sub
dec
je
jns
add
push
in
outsb
add
fs
push
aaa
mov
add
dec
inc
add
sti
pushl
add
add
repnz
add
xchg
fs
push
lock
jge
add
add
add
sub
add
fcoml
call
add
mov
add
les
mov
mov
movsl
jne
add
jns
das
xor
lds
add
ficompl
out
sahf
loopne
in
add
add
mov
push
insl
sub
xor
add
add
test
add
mov
out
mov
ds
leave
push
add
add
inc
add
add
ja
add
cmp
rolb
fwait
lret
pop
mov
ja
add
scas
xor
mov
fmul
push
add
push
add
add
ror
mov
mov
gs
add
push
aad
sti
sbb
enter
int
mov
sbb
gs
pusha
add
mov
mov
movsl
std
cmp
add
cli
repz
xchg
add
lret
adc
sbb
pop
das
loopne
inc
shr
in
xchg
sub
nop
add
push
add
lea
push
add
pop
cltd
sti
or
insl
push
add
hlt
add
sti
fsubl
rolb
arpl
xchg
add
cmp
popf
lret
xchg
add
dec
push
add
mov
inc
add
inc
add
mov
gs
xchg
push
inc
add
mov
add
in
xchg
mov
add
mov
mov
outsb
pop
xchg
add
int
jo
inc
add
add
add
aaa
insb
adc
add
out
mov
lods
mov
push
add
movb
push
add
out
aad
pop
xchg
add
inc
dec
jno
add
lcall
inc
add
add
sahf
out
sbb
lods
scas
or
cmpsb
add
add
add
mov
add
imul
stos
cmp
add
mov
outsb
pop
add
add
push
add
add
mov
in
ret
leave
mov
sub
test
cltd
lcall
in
push
add
je
ss
add
sbb
push
add
loop
mov
pop
enter
imul
add
xor
clc
enter
jmp
mov
mov
sbb
jmp
add
add
mov
xor
in
std
inc
fisubs
pop
mov
icebp
and
mov
xchg
xchg
add
adc
sub
je
imul
add
xchg
add
add
adc
dec
clc
lahf
dec
mov
mov
push
adc
dec
xchg
xchg
mov
add
mov
nop
add
lea
addb
add
insl
adc
jmp
fdivrl
test
add
jae
leave
xchg
add
add
push
xchg
add
test
and
ret
test
and
mov
add
scas
cmc
mov
jg
ret
mov
add
jge
jae
xchg
movsl
jno
jo
xchg
add
test
mov
aas
add
mov
rolb
add
cmp
push
add
insb
pop
sub
psrld
fistl
stos
lea
add
add
cmp
or
bound
mov
adc
push
add
sarl
rolb
jle
add
add
jp
push
add
je
cld
and
mov
mov
xrelease
les
xchg
xor
mov
add
fstps
sbb
add
cmp
dec
xor
mov
add
mov
into
or
cs
add
sti
test
or
fdivs
jge
pusha
add
mov
and
mov
int3
daa
lcall
adc
xlat
xlat
mov
jo
test
dec
push
add
fidivrs
mov
in
xchg
add
add
add
mov
fsts
lds
push
dec
in
push
add
add
xchg
add
test
push
repnz
add
adc
pop
xor
sbb
jne
cwtl
cmp
popa
sub
rcrl
add
in
xor
add
std
xor
jo
xor
ds
dec
dec
shll
cmp
shrl
add
js
and
mov
call
push
add
jbe
stos
inc
add
iret
or
add
add
adc
inc
add
add
xchg
add
sbb
cli
mov
add
add
pop
lret
push
push
add
stos
mov
in
mov
xor
add
dec
dec
push
add
dec
movsb
add
daa
cli
filds
mov
xchg
inc
test
cmp
dec
sar
add
cmp
sti
ret
add
and
repz
ds
shll
add
mov
cmp
mov
pop
cltd
sti
push
xor
into
mov
sbb
xchg
adc
imul
add
addb
pop
jnp
push
cwtl
call
xchg
mov
and
mov
idiv
push
add
add
sub
out
int
add
add
int3
cltd
cmp
loop
lds
add
adc
movsl
cmp
movb
into
fs
add
add
jo
ljmp
fldt
add
lea
cmp
add
pop
rolb
sti
xchg
push
pop
testb
add
outsl
mov
movsl
bound
mov
add
add
dec
cmp
push
add
add
lea
mov
add
add
aad
pop
ljmp
add
push
push
dec
notl
insl
aaa
addb
xchg
jnp
add
hlt
add
xchg
movb
pusha
add
int
leave
insb
jno
or
add
add
add
in
ss
add
roll
dec
xchg
add
add
add
add
mov
jnp
repz
xchg
add
insl
out
xchg
les
pop
dec
sti
outsb
arpl
fmuls
fdivrl
mov
add
mov
add
or
je
mov
lret
cmpsl
xor
dec
adc
dec
repz
add
cli
ret
add
add
out
repz
ret
pop
add
xor
nop
add
add
add
add
lahf
xchg
push
pop
cltd
data16
sbb
add
add
mov
dec
loop
dec
popa
fisubl
add
test
mov
mov
ret
rolb
xor
in
rolb
mov
cs
insl
popf
outsl
fwait
pop
movsl
addb
push
dec
aam
sar
add
add
add
cmc
nop
add
add
add
add
add
add
stos
clc
stos
ret
add
addb
push
add
mov
pop
test
jbe
cmp
xor
cmp
mov
add
cmp
jp
lods
mov
fimuls
add
add
mov
mov
in
ja
push
add
sub
cmpsl
mov
repnz
dec
pop
xchg
add
dec
jbe
outsl
filds
add
push
add
les
dec
loope
std
inc
bound
mov
or
and
lcall
or
sbb
imul
pushf
mov
incb
std
pop
mov
dec
scas
lods
push
fnstsw
movb
xor
in
adc
mov
mov
nop
add
add
mov
sub
sub
add
add
adc
out
sbb
popa
call
xchg
inc
jbe
iret
jle
pop
imul
xchg
mov
add
add
ucomiss
add
lret
inc
add
add
or
push
mov
mov
add
add
add
rolb
int3
iret
pop
push
add
testb
jmp
pop
cld
xor
mov
add
rolb
fldcw
jl
insb
and
cwtl
rolb
add
add
pop
insb
testb
add
mov
push
add
inc
jo
enter
push
adc
add
mov
add
mov
or
jno
int3
xor
mov
add
adc
test
divl
add
jge
adc
lret
movb
add
jb
mov
js
dec
or
cli
mov
sub
out
adc
push
mov
add
mov
lods
cwtl
jg
add
ret
cmp
lahf
repnz
mov
sub
lods
mov
mov
add
add
add
push
add
add
adc
icebp
fisttpll
push
add
dec
and
add
jbe
jbe
montmul
cmpsb
add
insl
mov
pop
movsb
add
or
or
pushf
xchg
dec
aas
push
xchg
add
imul
popf
and
add
adc
sbb
pop
std
bound
mov
enter
sbb
add
sbb
mov
imul
fldcw
aam
movb
jb
mov
add
jnp
add
int
add
loop
stc
fistl
add
add
enter
jns
add
mov
or
jge
iret
mov
divl
add
cmp
sbb
mov
xor
or
fdivrp
adc
jg
add
jae
xor
add
dec
ret
push
arpl
loopne
sti
decb
mov
sbb
or
xor
cli
inc
sub
adc
add
pushf
sbb
fdivs
icebp
inc
add
cmpl
add
or
add
sbb
cwtl
cmp
cmpsl
inc
add
xchg
jmp
sbb
and
ret
ret
add
cmp
add
in
pop
xchg
lahf
sbb
pop
clc
enter
fsubp
add
loope
add
rolb
sbb
mov
inc
add
or
mov
ljmp
nop
add
jge
add
orl
in
adc
addl
push
add
mov
and
mov
out
pop
loop
cmc
repz
add
fwait
imul
xor
dec
and
and
add
mov
inc
add
add
add
or
loop
mov
nop
add
push
xchg
dec
xchg
and
mov
repnz
pop
sbb
pop
sbb
adc
adc
inc
add
add
je
ficoms
fmull
add
lret
outsl
in
and
xor
in
sub
rcr
fwait
jl
push
movsl
add
in
add
jns
add
cmp
add
test
xchg
add
dec
add
mov
inc
add
js
add
pop
outsl
pop
lret
jge
push
add
sub
add
mov
mov
orl
push
outsl
addb
add
mov
vpsraw
mov
add
loopne
dec
hlt
add
rol
movsl
int3
mov
mov
add
add
and
nop
add
sbb
add
add
and
jecxz
sahf
in
fildl
insb
mov
rcll
cwtl
test
movb
add
and
mov
add
add
or
add
dec
testb
jbe
dec
sbb
fisubrs
add
add
rolb
jnp
lahf
adc
xchg
stos
adc
add
add
adc
sub
add
pop
mov
int3
aam
data16
dec
testb
mov
ljmp
incl
cmpl
fidivl
out
lds
add
and
mov
add
or
add
jo
mov
inc
add
push
testb
mov
add
and
call
out
ffree
add
dec
mov
pop
int
lret
lret
rolb
mov
xchg
add
add
push
add
lods
fdivrl
lods
dec
das
jno
add
xchg
addb
add
cmp
mov
and
add
add
dec
or
sub
pusha
add
add
dec
push
movb
imul
incb
add
test
add
scas
iret
call
or
rolb
sub
add
mov
mov
imul
mov
push
add
loop
inc
add
data16
add
add
jb,pn
fistpll
xchg
aam
xor
push
mov
lock
jne
fiadds
xchg
xor
cmp
add
cwtl
into
add
rolb
hlt
add
int
add
mov
mov
fwait
inc
pop
mov
and
mov
out
and
jle
add
roll
ja
pusha
add
pop
loope
sbb
mov
loopne
into
rolb
push
insb
ret
add
mov
inc
add
and
mov
add
or
add
cmpsb
add
lock
movsb
add
cld
inc
sub
addr16
add
sub
mov
add
mov
stc
ret
add
pop
testb
add
xor
gs
sub
imul
add
mov
mov
cld
ljmp
inc
add
adc
push
add
add
sub
add
loopne
mov
xchg
add
or
jp
add
cmp
outsl
clc
push
add
dec
popf
pushf
clc
mov
add
lahf
addb
add
add
add
insb
jno
fbstp
mov
push
fs
add
stc
and
pusha
add
inc
add
ret
jno
sbb
stc
jl
ret
or
rolb
jbe
jle
out
mov
mov
aam
lds
mov
lahf
cmp
adc
add
loope
pop
pop
sub
add
test
sub
add
mov
out
imul
add
and
sbb
movsb
add
cmp
pushf
sub
push
add
aas
push
add
sbb
pushf
fnstsw
daa
repz
add
adc
js
sbb
add
add
add
xchg
rcll
add
sbb
mov
leave
mov
inc
addb
mov
push
dec
cmp
mov
das
jl
ret
xchg
repnz
clc
add
mov
jae
xlat
and
add
cmpsl
test
add
xchg
add
push
dec
and
cmc
and
out
mov
add
orl
daa
cld
dec
sti
popf
mov
repnz
enter
cs
pop
push
add
xor
or
xchg
or
add
mov
or
mov
add
jp
cmp
outsb
mov
mov
pop
push
xlat
mov
mov
mov
std
mov
jbe
sbb
add
adc
sahf
addb
dec
insl
hlt
add
add
into
adc
adc
in
and
mov
stos
xor
fnstenv
sbb
mov
addb
add
mov
add
add
mov
mov
add
sbb
lods
dec
into
lds
aam
mov
mov
xchg
add
mov
push
add
add
add
fcmovnbe
xchg
hlt
add
jle
xor
sbb
push
add
push
add
add
cld
mov
add
aam
incb
mov
adc
pop
sub
in
push
add
push
add
add
lock
add
mov
adc
mov
and
mov
shll
pop
cwtl
xor
mov
out
adc
and
mov
push
jnp
and
aad
in
les
add
sbb
add
add
outsb
pop
out
test
dec
dec
clc
loopne
test
cmp
addb
xor
add
stos
repz
and
mov
movb
sub
imul
ljmp
scas
pop
call
pushf
push
add
xor
mov
arpl
add
pop
add
add
lea
mov
or
mov
inc
notl
stos
xchg
pop
and
addr16
dec
hlt
add
sysenter
add
pop
dec
cltd
xchg
cli
ljmp
enter
out
adc
and
nop
add
dec
in
and
mov
add
popl
out
scas
mov
sub
add
jmp
add
add
push
add
add
add
addb
sub
into
test
dec
adc
pop
or
jmp
xlat
adc
jo
sub
pop
fimuls
mov
add
and
in
xchg
fiaddl
jmp
add
add
xlat
pop
es
push
mov
xor
pop
es
push
add
add
add
add
add
add
fisttps
je
mov
add
popf
dec
or
shrl
movb
loop
cmp
out
mov
add
cmp
sbb
test
notl
clc
sub
or
cmc
test
add
push
push
add
add
fcoms
scas
aas
movsl
sbb
add
add
jno
add
mov
add
fmull
pusha
add
hlt
add
add
dec
or
add
leave
dec
inc
push
add
jae
clc
mov
add
add
in
add
push
and
mov
leave
call
xor
and
add
add
sbb
ret
adc
scas
mov
add
mov
out
mov
add
push
add
dec
sbb
add
jmp
add
mov
xchg
mov
es
sub
add
das
addb
mov
xlat
lods
fsts
hlt
add
lock
stos
imul
mov
add
std
sbb
jmp
jo
mov
dec
scas
addb
add
mov
cmp
and
mov
pushf
mov
rep
test
push
push
sub
xor
push
jecxz
rolb
inc
sub
add
in
xor
cmp
out
out
cmc
sbb
sub
push
cmp
add
icebp
movb
clc
add
xchg
ja
data16
fucom
push
or
mov
push
push
add
adc
add
add
add
dec
or
add
sub
add
div
add
add
xor
dec
cmp
add
movsl
pop
mov
mov
pop
xor
jbe
out
pop
test
add
enter
cmc
xor
stc
cmp
int
add
mov
repnz
adc
mov
je
mov
out
jbe
stos
into
add
jmp
jle
iret
sub
jp
scas
cwtl
xchg
jnp
sbb
cmovge
lock
add
cli
hlt
add
dec
lret
add
mov
add
mov
add
jecxz
xor
lret
adc
add
test
add
std
adc
mov
sti
cmp
addl
cltd
cld
mov
rolb
test
add
mov
add
ret
xchg
sub
jle
xchg
add
inc
cltd
push
add
aad
lods
mov
hlt
add
mov
sub
das
jae
ret
inc
cld
lods
movb
xor
mov
add
test
xchg
scas
std
sub
pop
pop
frstor
mov
addb
push
push
add
dec
inc
add
add
mov
pop
adc
enter
loop
lods
push
add
movsl
lock
dec
or
lods
cs
xchg
sahf
mov
add
adc
fwait
jge
test
add
or
add
call
add
in
dec
push
xlat
adc
add
mov
fbld
add
add
add
stos
mov
data16
add
inc
jne
call
pop
adc
rolb
xor
adc
or
addb
dec
jbe
testb
inc
add
fnstcw
into
stos
sub
out
mov
add
mov
and
xchg
ret
pop
mov
sub
add
cmpsb
add
sub
add
jg
add
add
pop
ret
into
shll
mov
xchg
enter
pop
lods
das
fsubrs
stc
mov
add
call
mov
paddsw
mov
xchg
add
cmp
add
flds
lahf
mov
add
cmp
aas
out
and
sbb
add
xlat
push
mov
clc
jmp
nop
add
out
mov
int3
sub
xlat
jmp
add
test
push
shll
rolb
jle
and
add
sub
xor
movsl
fmulp
aam
mov
test
or
dec
scas
aad
rolb
test
and
mov
add
dec
sbb
lock
add
jmp
add
movb
cmpsb
add
add
fcmovbe
add
lock
mov
inc
adc
xchg
mov
das
xor
xchg
add
add
add
add
out
adc
sub
add
add
orl
add
mov
iret
or
rolb
and
mov
or
pusha
add
add
jo
fsts
ds
add
imul
add
xchg
bound
mov
or
pop
xchg
cltd
daa
loop
adc
xchg
jo
ficoml
adc
roll
lret
in
pushf
mov
sub
addb
jge
add
mov
add
add
andl
push
add
les
inc
add
testb
ficoms
jle
iret
aad
jle
aaa
xor
add
mov
iret
xchg
in
adc
add
add
rolb
xchg
add
int3
icebp
sub
loop
inc
sbb
add
or
add
cmp
jmp
xchg
xchg
and
mov
push
movb
add
mov
ljmp
mov
popf
fisttpll
pop
add
push
add
xchg
add
xor
add
mov
je
sub
pushf
loop
rolb
ret
mov
inc
pop
inc
mov
jge
add
mov
inc
cmp
add
subl
jmp
push
lock
mov
rolb
lahf
mov
inc
add
mov
add
cmp
mov
lods
mov
mov
mov
pop
add
cli
pop
mov
add
cli
into
dec
sub
xor
rcl
fdivr
clc
cli
push
add
lods
add
mov
inc
add
add
add
mov
sti
sbb
or
add
mov
add
movb
xor
jo
or
xchg
iret
mov
and
ficoms
stos
lock
sbb
or
mov
add
call
cmp
sbb
addr16
jg
push
iret
rcl
add
pop
adc
jno
mov
jnp
filds
add
inc
add
add
clc
or
add
mov
test
test
push
add
mov
fisttps
jl
testl
lret
xor
xor
add
add
add
add
push
pop
adc
add
insl
cmp
add
add
dec
lock
xor
mov
int
fwait
pushf
adc
and
add
mov
loopne
sahf
pop
add
out
sub
movl
add
xchg
or
mov
dec
mov
xor
add
add
iret
lret
add
xchg
jmp
add
mov
or
pop
les
xchg
add
add
inc
add
xchg
mov
rolb
out
dec
out
loopne
imul
pop
mov
xchg
add
add
add
jae
fsubr
ret
pop
cmp
cmp
push
add
add
aas
stos
mov
add
push
xchg
addb
pop
mov
mov
add
mov
push
shrl
adcl
sub
add
add
add
mov
cmp
dec
pop
sub
loopne
mov
sub
ja
sbb
sub
aam
data16
xchg
add
sahf
aam
mov
aaa
adc
enter
mov
mov
outsb
pop
cmpsb
add
mov
sub
in
lret
inc
add
pushf
dec
mov
loop
fldcw
add
dec
push
xchg
add
add
test
sub
arpl
add
movsl
sub
xor
sbb
add
add
add
fsubrl
adc
fistps
movsl
jno
pop
dec
sub
add
outsb
je
fcompl
xchg
insb
test
rolb
and
pop
pop
jo
loop
add
sarl
mov
aaa
jb
cmpsl
push
add
enter
fimull
jecxz
mov
cs
sub
jp
add
mov
adc
lcall
insl
mov
addb
push
add
rolb
jo
or
add
ljmp
mov
add
outsb
das
mov
adc
and
mov
pop
mov
add
add
data16
repz
mov
add
das
mov
jg
pushf
add
sub
scas
add
add
fsts
data16
cmp
mov
sub
add
xor
inc
scas
aaa
adc
cwtl
mov
add
in
iret
loope
add
add
mov
adc
lcall
ret
icebp
adc
addr16
out
test
data16
xlat
ljmp
jbe
arpl
mov
addr16
or
stc
mov
in
add
cld
cmp
nopl
in
test
add
pop
add
pop
sbb
or
add
xchg
dec
xchg
add
iret
dec
les
or
add
jb
test
jp
push
add
add
mov
clc
or
mov
add
push
add
sub
add
mov
mov
cmp
imul
add
add
pop
inc
lahf
dec
xor
int
out
lock
pop
fiaddl
add
add
movsl
test
out
or
shrl
test
aad
mov
addb
aad
add
and
mov
pop
nop
add
or
out
dec
in
icebp
xchg
add
clc
mov
add
lea
fs
dec
add
add
ja
pop
out
jmp
add
pop
leave
push
dec
int3
mov
and
mov
push
mov
add
add
add
sub
scas
mov
mov
adc
mov
shll
insb
or
add
jo
xor
js
cmp
imul
sub
xlat
mov
sub
xchg
aaa
inc
add
lds
add
lcall
pop
outsl
cmc
mov
jp
repz
fsubl
daa
mov
stc
adc
fcmovnbe
add
add
les
pusha
add
mov
nop
add
lods
pop
rolb
or
jbe
adc
in
jle
jecxz
ret
lret
lea
pop
clc
roll
mov
andl
inc
and
stos
cmp
add
mov
pusha
add
mov
xor
lret
testl
pop
push
mov
outsl
jae
iret
mov
sahf
mov
arpl
inc
cmc
int
add
cmpsb
add
fildll
add
mov
hlt
add
imul
fsubrl
add
add
mov
aam
pop
or
add
mov
push
add
xor
sub
addr16
scas
push
into
or
add
sub
add
iret
mov
lock
cmpsb
add
mov
mov
add
jns
cwtl
or
add
add
enter
adc
sahf
dec
push
clc
movsb
add
iret
adc
xor
inc
popf
daa
or
test
insl
mov
cli
inc
add
jl
pop
cltd
aaa
cmp
jl
sbb
add
cmpsb
add
pop
adc
in
cmp
sbb
sbb
testb
add
ja
add
lods
aam
pop
mov
pop
loopne
cld
inc
add
in
ljmp
push
add
jnp
lret
sub
cmp
addb
mov
add
sbb
add
les
leave
leave
fildll
mov
les
sbb
outsb
mov
xchg
add
in
add
sbb
dec
inc
add
adc
ror
mov
sbb
and
lret
add
mov
pop
outsb
adc
inc
nop
add
jmp
add
fildll
orl
adc
pushf
pop
jb
cld
jbe
pop
ret
add
mov
inc
lcall
scas
rolb
add
fwait
lods
fstpl
add
push
test
xor
lcall
cmp
mov
mov
stos
xchg
adc
mov
mov
sti
or
lods
cmp
push
add
testl
xchg
add
cltd
xor
aam
jnp
xlat
lahf
lds
lods
das
xor
aas
push
add
push
xchg
add
cld
or
rolb
xor
test
add
push
adc
dec
in
cld
ret
cmc
out
mov
jbe
xchg
mov
add
add
ficoms
add
add
lahf
imul
xchg
pop
aam
pop
movsl
cmp
jg
cs
add
es
add
jns
add
add
add
mov
add
and
ljmp
mov
add
pop
test
sbbl
mov
lods
xchg
xchg
bound
mov
mov
add
jl
add
jmp
and
mov
loop
cmp
test
out
in
mull
or
adc
xchg
add
add
cmp
cmp
inc
add
ja
mov
xchg
rolb
mov
fmuls
add
js
add
add
inc
add
daa
test
add
stc
xchg
add
add
mov
jmp
or
add
mov
add
push
loopne
in
jns
add
xchg
in
test
pop
cmc
testb
and
ret
add
ds
jnp
lock
jle
repz
sarl
int
add
add
add
lods
sahf
pop
sub
jbe
pop
stc
imul
negl
or
sbb
out
sti
sub
xor
add
mov
pushf
rolb
lods
loopne
jnp
pop
sti
repz
lock
push
cmc
mov
dec
xchg
movsl
movb
fcmovu
push
add
mov
addb
jp
add
jnp
add
add
mov
add
outsl
jb
pop
sub
cwtl
lahf
dec
and
leave
scas
mov
movsb
add
add
or
fwait
pop
push
or
xor
add
and
mov
lods
dec
cmp
call
push
add
inc
mov
add
pop
loop
push
add
pushf
shl
ret
jnp
push
lea
xchg
loope
add
jle
in
aad
add
add
sub
ficompl
add
add
xor
pushf
addb
xchg
add
add
add
add
cmc
pop
mov
add
add
bound
mov
pop
mov
mov
add
add
bound
mov
int
or
jp
add
add
data16
je
cli
pop
fcmovnbe
add
pushl
and
xchg
and
test
cmpsl
mov
subl
jp
data16
mov
add
add
out
pop
out
jg
aam
add
fisttpl
iret
adcl
add
mov
mov
push
add
add
add
add
fldl
jb
inc
add
daa
mov
rolb
and
push
push
pushl
add
adc
int3
imul
outsb
or
push
mov
dec
adc
cmc
xchg
add
inc
add
add
insb
mov
sbb
add
les
int
add
addb
cmpl
add
mov
ret
rep
fsubrs
add
mov
xchg
daa
test
add
dec
int
or
add
mov
sti
fcompl
add
aad
add
loope
push
cld
ljmp
cld
out
arpl
add
push
dec
sub
add
xchg
mov
rolb
cmc
jns
pop
lcall
mov
push
das
stos
inc
add
fists
iret
sub
mov
mov
add
add
in
jmp
add
add
xchg
add
test
in
push
sbb
add
outsb
cmp
jge
or
xchg
xchg
cmp
mov
mov
fcoms
mov
popf
adc
nop
add
aaa
sub
cmpsb
add
mov
push
add
push
add
add
mov
in
das
add
repz
ror
sub
adc
dec
stos
xchg
push
nop
add
test
jb
loopne
adc
mov
dec
or
rcrl
movsl
add
jb
mov
add
add
add
jp
mov
ret
add
lret
and
inc
add
sbb
incb
add
repnz
add
inc
popa
pop
jle
loop
xchg
fcomi
add
clc
inc
das
les
inc
add
mov
add
mov
mov
inc
add
and
jmp
add
movsb
add
hlt
add
jg
popf
fidivrs
fstps
rorl
add
ret
xor
xchg
add
in
out
mov
movsb
add
jle
pop
jp
lock
pusha
add
xor
mov
mov
aaa
sbb
xor
fisubrs
mov
mov
inc
add
into
rolb
mov
add
add
inc
inc
add
add
mov
mov
mov
sti
push
add
mov
push
lods
pop
pop
enter
jl
add
adc
mov
adc
xor
push
aaa
pop
out
loopne
in
push
add
add
cli
testb
add
add
mov
or
xchg
add
xor
inc
add
lds
mov
sarl
clc
fbld
adc
add
sahf
scas
leave
rolb
stos
mov
xchg
add
sbb
nop
add
add
add
add
in
inc
add
movsl
aam
pop
mov
add
call
push
mov
xor
adc
stos
sti
fwait
push
pop
test
add
add
testb
mov
add
push
loopne
nop
add
ret
ret
fidivl
out
xor
xlat
int3
and
rolb
pxor
fwait
test
stos
lret
ret
add
jne
jmp
add
dec
test
mov
je
fmul
inc
add
add
add
mov
scas
jp
pop
mov
mov
negl
rolb
add
and
mov
and
mov
outsl
data16
adc
fisttpl
pop
push
rcrl
in
dec
jge
pop
and
xchg
add
xor
rolb
lods
lods
lods
test
test
sbb
lds
push
mov
ret
add
mov
add
je
jo
out
sbb
push
ret
js
test
addb
push
add
add
in
cmpsb
add
add
iret
jo
rolb
dec
jmp
mov
xchg
ret
lds
test
test
fldcw
sbb
add
add
xchg
push
add
push
add
add
pop
stos
cs
mov
mov
dec
loopne
sbb
stos
shll
push
fildll
test
imul
ret
lods
mov
add
icebp
push
int
pusha
add
add
add
mov
push
add
mov
jle
add
loop
cltd
neg
xor
mov
scas
adc
aaa
cmpsl
mul
add
add
xor
add
dec
mov
mov
inc
dec
loopne
scas
cwtl
scas
pusha
add
xchg
add
add
add
add
add
lea
pop
and
pop
test
xchg
or
aad
lods
cmp
add
or
jle
add
pop
outsl
testb
sub
add
sbb
shrl
popl
mov
add
addb
add
xchg
add
mov
add
or
mov
bound
mov
add
mov
outsb
out
bound
mov
add
xor
aad
add
add
xchg
je
add
add
add
jl
add
lret
test
add
mov
add
add
stos
dec
mov
jmp
add
pop
or
xor
jb
das
data16
add
pop
mov
add
roll
inc
jbe
mov
add
stos
test
lods
out
js
jns
dec
insl
adc
jecxz
and
jo
xor
adc
lods
add
mov
add
pusha
add
inc
add
add
popa
pop
stos
and
frstor
inc
add
fwait
repz
cli
or
mov
add
add
mov
fbld
add
adc
cmpsb
add
adc
insb
mov
mov
add
add
add
mov
cld
dec
leave
jne
dec
jae
out
push
add
mov
fst
xchg
add
outsl
inc
adc
add
addb
leave
mov
add
cmp
out
add
fiadds
js
jp
add
lcall
iret
ret
out
mov
add
add
fwait
pop
loope
fisubrs
rolb
pop
pop
sbb
add
pushf
xor
call
add
aaa
xchg
clc
out
push
mov
add
mov
push
cmpsb
add
jno
and
push
add
add
je
pop
ds
xor
sub
mov
add
pop
mov
inc
loope
add
fildll
jae
add
arpl
add
fwait
pop
out
jmp
add
pop
pushf
jno
icebp
repnz
jecxz
add
pop
gs
add
aad
or
xchg
jmp
add
add
mov
add
popa
push
add
pop
xchg
or
repnz
push
fsubrl
adc
dec
mov
pop
pop
dec
in
rolb
mov
cmp
mov
add
adc
aaa
loop
rcll
ds
dec
sub
push
add
add
mov
mov
cld
mov
inc
jge
and
lods
ror
add
ret
adc
popa
test
add
jg
xchg
cmp
pop
and
add
mov
out
pop
lods
loope
stc
inc
stos
fisttps
add
mov
mov
and
and
add
or
add
adc
mov
mov
sub
arpl
inc
dec
enter
fcompl
add
outsb
cltd
inc
add
mov
pop
dec
cmp
jmp
dec
ret
je
cld
mov
loop
sub
es
cwtl
push
cli
or
mov
mov
lret
xchg
and
add
add
xchg
add
sbb
data16
les
jbe
and
enter
and
and
daa
je
ret
jmp
add
cmp
add
rolb
sub
in
jae
fwait
lds
add
push
enter
add
sbb
or
mov
imul
add
mov
dec
in
adc
dec
cmpsl
sbb
mov
adc
mov
jae
dec
cmp
jg
add
xchg
add
jecxz
adc
inc
add
and
and
into
add
mov
mov
add
xchg
out
loope
lods
xchg
imul
into
add
mov
add
add
add
add
mov
add
jge
cmp
fcoml
add
mov
push
mov
mov
inc
mov
jno
mov
jg
popf
fnstenv
add
fs
jbe
jmp
push
inc
add
add
add
mov
or
cld
xor
mov
nop
add
inc
add
repz
iret
cmp
xor
add
mov
scas
inc
add
aad
bound
mov
xchg
mov
mov
jecxz
das
mull
mov
adc
movb
imul
adc
int3
outsl
push
mov
cmp
add
scas
les
jns
or
add
lea
ror
mov
subl
pop
ljmp
les
push
add
add
movb
mov
add
add
sbb
xchg
popf
jnp
or
loopne
repnz
mov
jge
add
sub
mov
inc
outsl
lods
xchg
add
add
mov
add
and
mov
xchg
add
mov
sbb
xchg
pop
jnp
cmp
add
add
inc
push
add
std
stos
pop
or
movsl
es
sbb
mov
ja
pop
insl
mov
mov
imul
cmp
xchg
push
jno
and
add
cltd
jns
add
lods
dec
vpsrad
dec
das
je
arpl
fists
mov
xchg
add
add
jbe
add
aam
adc
mov
add
bound
mov
add
and
outsl
pop
jge
add
sti
lcall
add
add
in
lods
xor
daa
add
mov
popf
add
jno
cmp
add
test
js
lods
dec
add
add
add
add
pop
sti
push
add
add
add
and
pusha
add
add
add
popa
add
test
mov
xchg
add
fs
mov
pop
xor
popa
jmp
test
ljmp
icebp
int3
fwait
dec
sub
mov
lock
cmp
add
add
push
cmp
sub
pop
mov
mov
add
add
add
mov
scas
in
dec
push
add
add
mov
add
add
pop
lods
cmp
fbld
aam
inc
add
add
pop
int3
inc
add
jno
push
add
add
mov
int
adc
inc
add
out
inc
mov
dec
sti
xchg
push
xlat
flds
add
insl
montmul
cmpsb
add
cmp
add
push
add
jb
mov
pusha
add
mov
mov
cli
lock
sbb
add
add
add
mov
add
add
add
adc
imul
xchg
add
add
call
shr
or
inc
add
jne
or
xchg
pop
fadds
mov
int3
and
mov
add
push
xchg
add
add
mov
adc
sbb
adc
add
dec
in
pop
ds
add
add
add
mov
jbe
sbb
pop
xchg
add
in
xor
or
add
or
lds
fimull
sbb
bound
mov
pusha
add
dec
addr16
aas
cmp
movb
sub
adc
mov
cli
in
or
fidivs
add
mov
sbb
and
mov
add
cltd
roll
int3
adc
es
add
popa
and
sbbl
fsts
and
popa
push
outsb
insb
nop
add
add
add
cltd
pushf
jae
cmp
add
add
add
mov
mov
cwtl
sbb
mov
add
xor
outsl
cs
mov
test
repnz
xor
push
fldl
add
add
inc
add
fs
jecxz
add
push
add
add
test
mov
adc
add
push
adc
pop
les
test
push
add
add
mov
cwtl
ja
sbb
lds
pop
fst
mov
add
mov
ficoms
imul
dec
in
xchg
adc
add
sbb
movsb
add
adc
scas
mov
cld
addr16
outsl
cmp
call
add
inc
add
out
fcoms
add
divl
adc
jge
and
mov
ficoml
out
in
jo
push
inc
add
adc
and
mov
mov
add
lcall
data16
inc
add
cmpsl
and
add
dec
xchg
add
repnz
add
jecxz
pop
mov
scas
inc
add
adc
mov
jp
add
sbb
rolb
cmp
add
and
jne
inc
icebp
cs
fsubrp
out
loope
fldl
loopne
add
in
call
gs
js
add
sbb
sbb
aas
adc
or
xchg
add
xor
pop
adcl
add
add
mov
adc
scas
aam
jnp
add
in
pop
dec
out
test
xchg
test
or
mov
icebp
out
movb
jle
jae
and
addb
add
icebp
cmp
add
arpl
add
add
push
into
lods
xor
mov
lods
jmp
add
mov
mov
add
clc
push
add
add
enter
mov
add
orl
mov
jno
add
fldcw
shrl
add
mov
add
adc
lods
jp
ret
xor
jb
or
fbstp
inc
add
movsb
add
je
inc
add
mov
and
inc
add
pop
sub
push
add
popa
cli
lds
push
fiadds
jecxz
sub
push
aam
aam
mov
fcoms
in
push
add
dec
testb
cmpsl
sub
adc
call
add
add
adc
addl
mov
aam
jl
data16
adc
mov
xchg
add
mov
mov
pop
xor
add
add
add
or
mov
jl
mov
lods
nop
add
jnp
cs
das
stos
lret
ja
add
mov
or
fidivl
push
add
adc
clc
adc
mov
push
clc
popf
sub
pop
inc
add
mov
add
adc
add
mov
popf
cmp
lock
repz
mov
jno
pushf
mov
add
add
add
test
dec
xor
add
test
add
add
add
pop
setbe
shll
cs
adc
lcall
addr16
mov
add
sub
rcll
add
sub
cmp
out
cmpsl
fiadds
adc
mov
add
imul
add
mov
pop
push
xchg
add
cmp
inc
push
add
jnp
push
add
jne
add
mov
add
add
jle
add
mov
inc
add
icebp
xor
adc
lcall
imul
dec
hlt
add
xchg
push
jae
in
add
inc
pop
fs
cmp
add
cs
pop
pop
push
dec
fstl
add
xor
and
jl
add
and
rolb
test
jae
aad
adc
mov
data16
add
mov
or
mov
pop
sbb
in
cmpsl
jne
jne
out
mov
add
mov
add
int
or
add
aas
inc
add
inc
mov
mov
imul
jnp
cmp
or
pop
mov
add
mov
pop
sbb
add
cltd
hlt
add
mov
mov
sbb
and
mov
add
movb
lock
stc
movb
inc
add
add
jg
xchg
add
test
int3
insl
stc
clc
testl
inc
add
or
mov
addb
sbb
add
sub
add
dec
inc
add
add
add
cltd
jae
add
lret
add
inc
add
add
test
cmp
jo
scas
addb
imul
add
adc
addb
dec
dec
push
mov
lods
dec
pop
mov
add
cmc
dec
mov
dec
mov
rolb
adc
lret
imul
add
add
jg
hlt
add
xlat
xlat
ret
int3
xor
rolb
in
out
lret
xchg
add
xor
testb
add
mov
inc
mov
add
push
add
jo
sbb
inc
lahf
mov
add
daa
insl
cltd
or
out
and
sbb
mov
add
mov
loopne
lea
jp
jb
sbb
jecxz
lock
add
sbb
fidivrs
mov
rolb
test
adc
inc
push
add
popa
cwtl
push
inc
add
adc
pusha
add
add
add
add
cmpsl
in
insb
xor
lahf
add
testb
add
add
add
xchg
add
mov
jne
rolb
push
add
scas
std
lods
out
add
add
jae
inc
add
add
loop
outsl
inc
add
pop
sub
sub
xchg
add
xor
add
push
mov
or
sbb
rolb
jns
das
nop
add
push
add
add
outsb
mov
pop
idivl
test
jns
cwtl
add
jge
and
mov
addb
push
add
mov
iret
xchg
xor
inc
xchg
pop
movsb
add
lods
xchg
add
aam
popa
arpl
or
xor
adcl
mov
repz
add
add
rcrl
pop
mov
add
push
mov
repnz
cli
rolb
xchg
int3
sub
stos
lret
dec
pop
jnp
sbb
mov
insl
add
add
add
inc
jecxz
pop
das
xchg
add
mov
inc
fistps
mov
add
test
cmp
popf
outsb
ret
imul
ja
add
pop
in
lcall
and
loope
imul
call
inc
add
add
insl
sub
data16
add
add
pop
lock
add
add
add
lcall
popf
cmpl
mov
fs
add
js
or
aam
cmpsl
mov
scas
mov
inc
add
add
stc
in
or
add
aam
jecxz
jne
cmp
xchg
add
push
add
jns
jo
dec
addr16
add
dec
mov
jp
outsb
into
jnp
xchg
add
jl
clc
xchg
add
add
je
icebp
sub
add
lods
out
pop
xchg
lods
test
test
fisttps
push
outsl
ret
aas
sbb
adc
or
mov
jno
inc
add
cwtl
cmp
insb
lcall
xor
lods
inc
push
in
add
or
rolb
outsb
lcall
test
inc
add
and
ja
xchg
jge
push
add
xor
loope
xchg
add
xchg
xor
stos
push
add
mov
fadd
ror
or
xchg
add
loopne
lock
addb
fsubrl
mov
add
add
add
mov
or
pop
xchg
add
xchg
xor
hlt
add
push
add
jb
mov
mov
xorl
addb
xchg
and
mov
mov
int
add
add
movl
mov
icebp
addb
les
sub
add
pop
aaa
xor
dec
movb
out
adc
cmp
sub
ret
inc
jl
push
dec
mov
mov
dec
icebp
xor
adc
add
mov
lods
push
insl
mov
push
aad
lcall
arpl
mov
xor
fs
pop
movsl
or
movsb
add
jmp
xlat
insb
sub
add
dec
fstpl
add
sub
in
dec
push
daa
mov
and
test
lock
popf
dec
ja
push
add
pop
je
xchg
add
test
add
loop
jbe
push
add
fsubrs
xlat
ja
add
xor
add
jp
add
add
mov
int3
mov
fldpi
pop
call
add
push
imul
mov
addb
dec
das
xlat
or
or
add
mov
mov
ret
nop
add
xlat
and
pusha
add
add
in
call
or
adc
or
shll
or
xchg
pop
aam
xor
sbb
lods
in
mov
jmp
popf
outsl
rolb
xor
sbb
mov
fldenv
fldt
xchg
add
je
pushf
addb
add
testl
add
add
add
push
rolb
add
movsl
push
add
in
lret
or
out
sbb
mov
xchg
je
jnp
push
add
outsb
movb
add
add
mov
test
add
add
icebp
scas
xchg
dec
rcrl
add
or
faddl
add
or
test
push
int3
out
xor
add
jg
add
or
add
xor
or
mov
ret
add
push
out
xor
ljmp
mov
outsb
cmp
icebp
imul
roll
mov
xchg
add
add
dec
xchg
push
inc
leave
pop
iret
js
es
mov
cmp
jo
arpl
cmp
lret
fsubrs
inc
add
add
jmp
add
sub
sbb
lcall
aam
addb
jno
test
jg
add
repnz
add
insl
cmp
inc
jno
add
dec
lcall
add
ljmp
pop
enter
add
add
mov
call
xor
mov
pop
cs
pop
push
add
pop
addr16
sbb
mov
mov
popf
xchg
in
lahf
aaa
mov
add
add
mov
mov
add
add
push
fsubs
add
pop
std
and
mov
push
add
jmp
int
call
add
xlat
or
mov
rcrl
imul
data16
mov
in
ret
adc
pop
pop
pop
stos
sub
test
repnz
add
mov
push
jp
pop
cmp
repnz
add
add
sub
pop
mov
filds
pusha
add
in
repz
inc
add
add
push
add
mov
add
add
add
cmpsb
add
outsl
scas
scas
sub
mov
repnz
add
testb
mov
loope
ja
outsb
stc
dec
sbb
lret
add
cmp
lock
addl
addb
add
cmc
jmp
jmp
cmpsl
mov
add
jmp
jno
into
sbb
add
dec
fdivrs
xlat
add
mov
xchg
pop
dec
test
jns
add
cmp
call
popa
xchg
out
lods
sbb
shrl
add
add
add
add
dec
pusha
add
add
add
lods
mov
mov
imul
inc
jo
mov
fptan
add
cmpsl
pop
out
pop
bt
imul
add
repz
add
movsb
add
add
add
mov
in
addb
mov
dec
mov
scas
pop
add
mov
test
jnp
and
mov
add
rolb
cmpsb
add
xchg
mov
pop
dec
dec
inc
jno
sub
sub
jge
pop
push
add
mov
sbb
in
fldt
mov
scas
mov
sahf
jbe
dec
push
push
add
dec
inc
fdiv
add
sbb
lea
addb
add
out
loop
xor
movsb
add
xor
test
test
setnp
fwait
push
sbb
xor
xchg
movsb
add
add
cmp
push
fcoms
imul
mov
popf
in
out
add
ds
jo
pop
inc
in
ret
popl
loop
pop
fimull
scas
xchg
loop
out
mov
add
cmp
fcompl
inc
in
jp
aad
addb
and
pop
andl
insb
pop
in
cmp
in
scas
push
ljmp
cli
dec
das
push
fcomps
add
add
dec
mov
cmp
scas
jbe
xchg
xchg
inc
add
rolb
add
pop
loope
add
or
mov
outsb
inc
add
mov
xchg
add
xchg
rcll
add
xor
jne
mov
add
add
mov
add
push
add
inc
add
pop
lea
shl
add
adc
cmpsl
stos
fwait
sbb
and
mov
das
aaa
ret
mov
or
sub
and
mov
sub
test
arpl
mov
cmp
out
data16
add
add
out
push
add
cwtl
out
add
push
mov
add
dec
ja
add
jecxz
add
mov
insl
inc
add
popf
in
out
ljmp
mov
cmp
leave
mov
lret
jne
add
loope
mov
add
add
outsl
addr16
ljmp
mov
add
jbe
out
sub
leave
or
out
gs
add
add
out
test
fs
lret
inc
cmp
arpl
add
fsubp
inc
ror
shll
loopne
insl
pop
aaa
addb
ds
stos
stos
xor
mov
imul
mov
cmp
mov
add
add
push
add
in
mov
sbb
add
inc
mov
je
jmp
out
dec
call
add
fstl
ret
xchg
rolb
rolb
add
test
add
sbb
popa
and
mov
add
sahf
aad
add
je
arpl
faddl
ret
dec
cmpsb
add
std
inc
jne
lcall
lret
xor
add
xor
movb
loopne
push
add
mov
add
sahf
mov
jge
cmc
rolb
jbe
sub
nop
add
sbb
sub
add
lds
imul
mov
jns
push
add
add
or
dec
sub
add
mov
xchg
push
cli
fmull
add
pop
stos
dec
jns
push
rolb
lds
ljmp
add
add
mov
jp
or
into
dec
push
xchg
int
mull
cmp
mov
xchg
add
jno
insb
rolb
add
mov
add
jecxz
nop
add
in
mov
mov
sbb
inc
add
jae
mov
sbb
xchg
add
mov
pop
ja
add
in
xchg
out
mov
inc
add
xlat
sub
dec
std
jns
pushf
addb
int
xor
xorl
jae
ret
inc
popf
pop
mov
pop
adc
push
add
clc
adc
adc
imul
ret
addb
add
sub
fsubrl
pop
outsb
xchg
xchg
add
add
adc
addb
push
add
add
mov
pop
jne
mov
fld
pop
insl
push
xor
add
add
mov
mov
addb
insl
sbb
push
pushf
pop
lcall
cld
sub
add
mov
add
mov
sbb
pop
xor
cmc
mov
add
scas
mov
dec
inc
lcall
cmpsl
lods
icebp
add
ret
jo
add
xchg
and
add
xor
outsl
rorl
add
cli
sub
test
mov
add
xor
pop
lcall
add
inc
movsl
xlat
fwait
mov
add
pusha
add
add
or
add
mov
repz
add
sub
mov
and
inc
add
mov
mov
mov
pop
jae
add
add
or
jne
movb
aad
mov
inc
add
bound
mov
add
mov
add
icebp
das
test
pop
lahf
bound
mov
sti
out
cwtl
rcrl
add
shrl
inc
add
mov
jns
mov
test
rorl
add
xchg
add
dec
icebp
adc
mov
jge
inc
sbb
mov
add
lods
addb
push
add
mov
add
add
or
pusha
add
sarl
lock
fscale
mov
out
pop
imul
pushf
rolb
xchg
add
jge
movl
mov
ljmp
add
xchg
mov
add
inc
add
add
insb
push
push
sub
add
fwait
inc
add
add
lcall
loopne
dec
add
in
pop
inc
dec
mov
addr16
lods
mov
add
add
rolb
popa
hlt
add
cmp
ret
add
add
hlt
add
and
call
sub
sbb
add
imul
cltd
test
loop
rolb
add
repz
pusha
add
push
add
clc
popf
inc
pop
xchg
add
add
sub
add
push
add
add
jb
test
nop
add
add
dec
mov
insl
std
roll
add
sbb
add
mov
cwtl
clc
cld
sbb
mov
das
push
xchg
push
add
add
xchg
add
pop
arpl
add
hlt
add
pop
xchg
jle
add
adc
jb
jns
les
add
mov
lock
jmp
add
add
addb
sbb
sub
or
fmul
xchg
add
or
add
mov
and
add
fistl
add
xchg
add
add
xor
cmp
add
adc
push
add
mov
fildl
cld
rolb
out
jno
lods
cld
lock
fcom
add
add
adc
arpl
daa
out
and
mov
ljmp
cwtl
das
jo
out
add
cmpl
sbb
mov
mov
mov
addb
sbb
add
aad
outsb
sbb
cmp
add
add
mov
rolb
jno
add
pushf
shll
add
pop
adc
add
mov
imul
movsb
add
movsb
add
movb
add
cmpsb
add
cltd
and
ret
mov
lcall
lea
add
rolb
or
add
add
jno
pop
loope
popa
mov
or
and
cmp
add
add
pushf
jo
mov
pop
push
add
call
pop
roll
adc
cmp
push
das
add
add
test
ds
fdivrp
loopne
fwait
cmpsb
add
xor
mov
add
add
mov
add
cmp
rolb
lret
lea
mov
add
mov
and
xor
push
add
mov
add
inc
add
aam
and
add
add
