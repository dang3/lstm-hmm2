add
add
mov
dec
mov
gs
rcrl
add
jns
sub
lea
mov
mov
aad
dec
pusha
add
cmp
aas
in
sbb
xchg
jl
xor
repnz
lcall
loopne
addb
add
push
sbb
xchg
fwait
loope
mov
add
mov
iret
add
mov
lods
pop
jo
mov
xchg
std
fsubrs
add
add
inc
movsb
add
add
lret
push
push
inc
push
add
mov
cmc
sbb
mov
test
repz
mov
inc
add
add
add
add
adc
jp
add
out
test
push
das
hlt
add
add
rcrl
or
jno
clc
fcompl
add
and
mov
mov
addr16
add
add
insb
imul
add
xchg
add
push
add
add
cmpsb
add
dec
mov
outsl
addr16
lea
mov
ret
cwtl
jmp
push
jecxz
cmpsl
or
xchg
xchg
add
sbb
popl
xor
add
dec
lcall
add
inc
add
mov
ja
add
add
lcall
add
push
cmp
push
fists
xchg
ret
sbb
int
dec
iret
in
mov
call
mov
add
aaa
and
mov
sbb
cpuid
add
add
leave
popa
adc
rolb
cmp
xor
stos
pop
pop
sbb
dec
pop
sub
int
add
mov
stc
mov
repnz
pop
mov
xchg
add
mov
cld
sbb
gs
add
ret
movl
mov
rolb
dec
fdiv
add
iret
sbbl
cmp
aaa
xchg
mov
sbb
inc
iret
cltd
sub
or
and
out
rolb
pop
sbb
mov
push
add
rcrl
sti
pop
jnp
and
sbb
add
rol
add
sbb
mov
add
mov
mov
xchg
mov
xchg
add
mov
repz
mov
mov
add
rolb
data16
out
into
pop
mov
addr16
add
lds
jae
xchg
add
push
add
out
aaa
lods
mov
cltd
sti
pop
lods
bound
mov
add
add
jecxz
aam
and
add
adc
lds
add
fcmovnbe
add
js
add
dec
mov
add
xchg
add
cmpsl
cmp
ds
add
dec
insb
bound
mov
add
add
mov
fisubs
sbb
add
pop
rolb
imul
add
inc
add
add
mov
cwtl
mov
loope
test
xchg
fistpl
mov
mov
dec
out
lret
or
add
stc
scas
dec
in
popa
mov
scas
xchg
cmp
add
sub
dec
and
movsb
add
add
mov
inc
add
mov
add
add
add
jmp
mov
add
xchg
add
mov
test
add
test
xchg
add
test
cli
or
add
add
add
inc
pop
repz
pop
jne
scas
push
pop
push
pop
dec
test
sub
testb
add
cld
push
add
mov
jnp
add
add
in
add
add
mov
mov
add
fdivrs
icebp
lods
scas
mov
nop
add
mov
add
fldenv
add
add
sbb
adc
inc
add
mov
sbb
scas
fcmovb
fsubrl
jno
rolb
addr16
aam
adc
pop
mov
iret
mov
std
add
or
dec
xchg
fimuls
scas
incb
dec
cwtl
mov
std
rolb
inc
add
add
jnp
std
ret
mov
sbb
in
movsl
or
cwtl
add
mov
jle
loope
outsl
lret
lret
and
mov
lds
sbbl
adc
sbb
mov
dec
mov
add
mov
sub
les
sub
loope
add
mov
add
loope
mov
addb
add
add
ret
lahf
cld
push
xchg
leave
cmp
pushf
xor
push
add
xchg
add
js
dec
adc
sahf
or
inc
lock
lahf
movb
add
push
mov
push
add
cmp
in
cmp
push
add
add
in
jmp
repz
movb
sti
sub
add
jp
jae
inc
add
pop
adc
aam
movsb
add
add
shrl
add
rolb
xchg
pop
inc
add
loop
fidivrs
mov
dec
and
aas
mov
sbb
jbe
inc
add
add
push
lods
imul
cmp
add
addr16
push
movsb
add
addb
aaa
mov
jno
add
jae
shll
xchg
add
push
add
in
jg
and
mov
cld
stos
pop
jecxz
loope
cld
pusha
add
add
jno
dec
pop
jne
and
add
mov
add
add
push
cmp
repz
jg
add
nop
add
add
lahf
bound
mov
push
lret
jl
loop
out
pop
adc
add
std
cmp
mov
inc
add
cmp
fdivs
les
ret
mov
add
and
push
mov
fstpt
sbb
movsb
add
add
lds
mov
aad
add
sbb
inc
push
xor
mov
lret
add
adc
fs
add
mov
mov
pop
into
add
add
push
add
jo
mov
outsl
or
add
jp
jg
jbe
push
add
xor
shll
rolb
nop
add
push
add
testb
data16
add
popl
pusha
add
mov
push
add
dec
sahf
scas
mov
inc
add
mov
add
imul
lds
ds
ret
enter
cmp
cmp
add
lret
adc
mov
mov
test
and
mov
add
addb
cmp
inc
inc
sub
push
scas
jnp
daa
mov
loop
dec
insb
xchg
mov
stos
lret
pop
dec
mov
push
add
xlat
cs
add
add
xor
or
add
repz
add
or
jae
pop
mov
mov
mov
sbb
dec
call
stc
ficoms
add
add
xchg
add
dec
pop
mov
add
mov
add
jle
pop
dec
iret
or
add
lods
into
sbb
add
add
push
add
add
rolb
leave
pop
addb
add
push
add
lods
add
add
les
adc
outsl
xchg
add
mov
xchg
add
lret
pop
mov
add
loope
xchg
enter
bound
mov
lods
dec
dec
aam
addb
add
push
push
dec
mull
add
loope
sbb
push
add
adc
fistpll
xor
and
mov
mov
and
ret
stc
push
cmp
and
adc
xor
test
add
test
mov
jg
pop
or
fsubrp
lahf
std
xor
add
pop
pop
out
ja
add
add
mull
add
add
pop
mov
push
jmp
psubsw
or
xchg
add
lods
leave
pusha
add
pop
sub
jbe
sbb
add
dec
add
add
mov
ja
inc
add
fisttps
inc
test
fsubs
or
pop
mov
mov
add
xchg
mov
xchg
xor
cmp
add
xchg
jnp
pop
imul
jnp
add
add
stos
pop
dec
inc
add
xor
inc
repz
add
aam
ljmp
hlt
add
inc
add
push
add
add
add
dec
enter
cmp
xchg
loope
and
mov
xor
cli
push
dec
and
mov
cmp
fs
add
push
mov
cmpl
mov
add
ret
ljmp
add
mov
xor
cld
jb
xchg
mov
add
sbb
add
jmp
inc
mov
add
mov
popl
add
mov
add
rolb
insb
sbb
add
dec
adc
jmp
mov
imul
les
test
test
aaa
sbb
add
stos
incb
add
repnz
js
add
add
cmpsl
mov
fldl
mov
ljmp
sti
push
mov
mov
data16
mov
inc
jecxz
jo
mov
add
pop
lret
inc
xchg
rolb
scas
sub
cld
push
stos
sahf
test
movb
bound
mov
pushf
push
mov
cmp
add
add
stos
cwtl
mov
imul
add
loope
inc
rcll
and
add
add
mov
mov
inc
data16
cmp
add
add
fwait
dec
jge
add
add
push
add
rolb
sub
add
push
cmp
jo
gs
mov
mov
add
in
testb
icebp
pushf
in
cmp
movsl
dec
aas
repz
add
xlat
pop
inc
add
bound
mov
aam
push
add
add
jno
cmpsb
add
xchg
rorl
or
std
mov
add
add
or
jmp
cmpsb
add
rolb
add
add
xor
mov
push
add
and
ss
dec
cld
push
dec
les
lret
xor
fisttpl
xor
aad
movsb
add
pop
stos
pop
jecxz
nop
add
pop
out
inc
inc
pop
xchg
add
movb
add
fidivrs
std
push
sbb
outsl
add
mov
pop
sbb
push
add
dec
xlat
inc
add
xchg
mov
mov
sbb
outsb
add
jl
fwait
scas
ljmp
add
add
movsl
mov
aas
cli
ret
jnp
mov
pusha
add
or
add
push
add
add
popl
add
lea
in
xchg
jb
lret
xor
movsb
add
int
xor
les
mov
add
sbb
add
add
aad
lret
stos
das
push
push
or
test
lret
inc
cmpsb
add
or
test
mov
xor
fcoml
dec
push
dec
enter
lods
aad
loopne
push
add
add
fistl
rcll
push
and
mov
jb
leave
mov
vpunpcklwd
and
add
add
add
add
dec
inc
add
mov
jns
sub
fbstp
lret
mov
lret
add
xchg
add
test
xchg
jecxz
add
loope
add
je
cmpl
cli
and
inc
add
add
pop
lds
xchg
orl
mov
lahf
dec
pop
and
outsl
lods
adc
mov
add
or
add
add
add
cmp
hlt
add
add
les
leave
stc
loope
and
add
xchg
lods
pop
xor
mov
cmp
test
mov
rcll
inc
add
ret
rolb
out
pusha
add
jp
add
pop
or
add
mov
stc
hlt
add
mov
movsl
in
and
mov
test
call
add
sbb
add
test
mov
popa
add
mov
leave
stos
sub
and
add
jns
sbb
bound
mov
push
mov
jno
in
sbb
mov
imul
cmp
push
add
mov
add
add
add
push
add
mov
data16
add
add
add
test
icebp
mov
mov
std
jb
or
les
and
xchg
jbe
xlat
inc
rolb
ret
and
fbstp
hlt
add
add
mov
nop
add
repz
push
add
je
jmp
add
or
add
mov
add
pop
and
into
xor
rolb
add
add
dec
testb
add
fcomp
jns
add
push
add
mov
pusha
add
dec
fistps
mov
add
movsl
test
scas
and
mov
add
add
jmp
out
iret
and
jne
cmp
adc
add
add
add
jg
push
enter
add
int3
movl
popa
scas
pop
sti
leave
outsb
test
dec
movsl
nop
add
xor
add
repnz
lret
iret
sahf
cmp
add
dec
frstpm(287
mov
add
jg
push
loope
add
add
repnz
cltd
jbe
add
mov
sahf
stos
hlt
add
stos
cmpsl
mov
inc
add
rolb
mov
add
mov
mov
sbb
or
leave
daa
ds
and
mov
sub
push
push
push
cld
call
sub
mov
cs
es
ss
push
call
cmp
je
es
lea
push
cs
es
call
test
jne
jmp
lret
icebp
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
lea
add
repnz
mov
sub
mov
push
pop
push
push
jmp
jmp
add
add
out
pop
je
dec
mov
shrl
ret
into
dec
fsubs
mov
xchg
cmp
add
add
loope
add
sub
in
mov
add
xchg
or
add
movsb
add
inc
sub
mov
mov
andl
daa
cwtl
xchg
sub
jae
add
dec
lcall
inc
add
inc
add
jns
ret
out
leave
test
dec
pop
int3
cmp
pusha
add
mov
aad
ret
fcomi
add
add
add
testb
mov
add
add
xchg
js
rolb
or
inc
add
add
xchg
add
test
add
hlt
add
hlt
add
popa
loope
mov
add
enter
add
pop
int3
lods
mov
jb
sub
cmpsl
push
dec
push
jb
mov
add
inc
mov
cmp
out
or
and
call
mov
in
push
add
add
and
add
inc
add
add
add
daa
clc
out
ret
jne
dec
push
add
pop
rolb
mov
ret
push
add
das
outsl
and
jp
inc
add
popf
in
lcall
add
push
mov
push
add
add
mov
mov
pusha
add
add
inc
enter
orl
popf
dec
dec
sbb
add
roll
mov
sbb
popf
or
lahf
adcl
mov
add
sti
push
inc
add
add
add
pop
mov
xchg
add
add
jl
xor
adc
add
xchg
add
movsbl
in
pop
arpl
xlat
xor
push
add
sbb
add
add
push
pop
jp
push
add
sub
scas
push
add
or
add
jg
or
dec
es
gs
mov
add
stc
dec
mov
jle
and
cmp
shll
add
add
test
dec
add
add
add
fcomi
add
push
mov
add
pop
sbb
lahf
adc
mov
add
inc
ret
cmc
mov
ljmp
xor
or
add
add
cmp
stos
cmp
jno
add
mov
adc
ds
add
mov
inc
add
mov
push
repnz
add
in
sub
movsl
sahf
in
movb
mov
add
add
sbb
add
xor
cmp
add
add
add
mov
jns
or
adc
pop
lahf
dec
loopne
leave
clc
mov
sub
mov
xchg
add
stos
adc
sbb
mov
addb
add
call
cmp
add
sbb
sub
int3
in
insb
sbb
sbb
add
aaa
sbb
add
leave
cmp
mov
addr16
xor
js
mov
push
add
lods
les
pop
iret
mov
cltd
or
out
mov
cmp
add
add
frstor
add
je
ljmp
add
out
mov
add
push
add
add
add
mov
daa
in
mov
xchg
add
bound
mov
jae
add
add
cmp
add
mov
adc
and
and
add
aas
jge
cmpsl
sbb
add
dec
and
aas
lcall
xchg
movsl
iret
cmp
add
adc
scas
mull
mov
and
mov
push
mov
add
add
jle
mov
in
jecxz
jmp
out
inc
push
cmpsl
xlat
add
test
sbb
adc
lock
add
xchg
push
xchg
add
xchg
add
cmp
lret
je
ljmp
fstpt
mov
xchg
add
add
add
inc
insl
mov
xor
pop
add
mov
cmpsb
add
pop
cmp
and
mov
push
test
mov
jg
or
add
mov
add
add
call
dec
in
mov
add
pop
cmp
sarl
add
add
add
add
push
ja
xchg
fld
std
cld
mov
dec
mov
push
add
add
and
pushf
mov
in
aam
pop
pop
mov
add
add
sti
dec
stos
sbb
fbld
adc
mov
dec
addr16
jnp
xchg
test
inc
mov
seta
add
or
push
add
test
or
xor
das
cmpsb
add
add
xor
add
sub
dec
inc
add
sbb
movsb
add
xor
mov
lods
pop
cmp
icebp
cltd
ljmp
dec
xlat
jmp
fistl
add
mov
sti
lock
add
stc
push
add
push
pushf
ret
add
inc
lods
fwait
test
inc
imul
je
cwtl
mov
imul
iret
loope
out
pop
push
mov
mov
rolb
cltd
sub
mov
xlat
cmpsl
test
movd
add
add
imull
ja
add
testb
movb
ficoms
ds
mov
dec
adcl
and
push
out
xchg
add
dec
jmp
add
addb
add
arpl
fdivrs
jae
mov
xchg
mov
mov
cmc
jge
lcall
add
enter
mov
mov
add
dec
jb
add
clc
aad
add
cmp
pop
mov
rolb
nop
add
aaa
mov
mov
arpl
movsb
add
mov
or
pusha
add
popf
jae
pop
cmp
jl
inc
add
movsl
fcomps
dec
mov
add
add
les
xchg
jge
add
mov
add
sub
add
xor
test
gs
sub
mov
xchg
jmp
sub
push
add
jge
sbb
add
test
shrl
add
add
xchg
jo
imul
add
stc
and
push
add
jno
int3
rolb
inc
add
mov
mov
mov
add
cmp
add
aad
repnz
popa
aaa
fimuls
jae
or
cltd
icebp
mov
and
pushf
aam
pop
add
mov
dec
imul
cld
call
pop
repnz
ret
add
dec
inc
add
or
stos
pop
cmc
fdivl
push
add
aas
sbb
movb
xor
mov
cmpsl
rep
add
add
add
mov
xchg
push
add
add
pop
aam
jns
cltd
lods
shrl
or
xchg
jle,pn
pop
sti
and
add
add
add
jmp
lods
xchg
mov
lds
push
pusha
add
pop
insl
cmp
int3
popa
add
mov
add
sub
xchg
add
adc
outsb
inc
loopne
movsb
add
xchg
cld
pop
std
cmpsb
add
aad
addl
xchg
add
mov
outsb
push
xor
fimuls
int3
mov
mov
outsl
dec
dec
in
fucomp
dec
jno
adc
cwtl
leave
out
insb
mov
mov
add
in
imul
push
in
xlat
les
stc
popf
jo
lea
incl
mov
add
mov
rolb
push
add
repz
bound
mov
jnp
movsb
add
outsb
inc
add
add
shrl
and
mov
mov
sub
inc
mov
add
lret
and
or
push
cltd
mov
adc
mov
or
lods
jnp
cmp
bound
mov
add
push
add
add
idivl
add
test
jg
aas
rolb
aaa
sub
add
lret
jne
push
add
ja
or
jl
scas
push
cmp
add
out
push
or
add
add
add
arpl
add
add
ret
mov
testb
scas
xlat
repz
sub
mov
idiv
ja
or
add
je
adc
add
add
add
sub
add
gs
push
add
pop
pop
outsl
dec
mov
sub
in
sub
movsl
dec
inc
add
loop
xorl
add
add
add
mov
test
add
push
add
add
je
js
add
aas
jmp
pop
push
add
mov
adc
xchg
lret
mov
movb
add
ljmp
dec
jbe
inc
cli
mov
add
push
mov
lods
adc
mov
mov
fdiv
add
add
lock
iret
pusha
add
in
and
data16
sub
add
dec
add
jae
out
pop
push
and
call
sbb
out
nop
add
dec
pop
pop
mov
cltd
push
add
lea
lock
add
icebp
mov
sbb
add
jae
sub
dec
cmc
cs
movsl
jnp
cwtl
jb
lock
ret
xchg
inc
and
add
cwtl
xor
add
add
push
mov
pushf
mov
or
add
inc
add
ficomps
fmul
push
fwait
ja
add
iret
add
inc
add
mov
repz
xchg
add
stos
testb
add
lea
or
add
test
add
xlat
fsub
dec
pop
ljmp
fdivl
ficompl
data16
fisubs
cmp
daa
gs
add
sahf
mov
outsl
mov
add
add
inc
fstpt
add
repnz
mov
outsb
cvtps2pd
jl
fisttpll
sahf
inc
mov
adc
jge
add
add
sbb
xor
cmpsb
add
add
add
push
cli
jecxz
lods
and
mov
pop
rep
push
mov
xor
adc
add
xchg
add
adc
add
cwtl
add
jne
pop
jmp
push
pop
das
sti
pop
das
insb
xor
fnstsw
in
mov
add
cmp
jbe
je
fnstenv
cmp
xchg
xlat
pushf
pop
mov
mov
scas
ret
fcmovnb
in
test
add
test
add
add
add
add
adc
add
add
sbb
add
sub
aaa
rolb
movsb
add
adc
pop
xor
rol
add
lock
add
add
add
xchg
std
inc
add
pushf
mov
insl
pop
lcall
add
and
xor
mov
xor
adc
add
mov
mov
add
outsl
repz
push
sbb
add
add
mov
mov
add
pop
adc
push
imul
mov
add
pop
in
imul
add
dec
add
mov
jecxz
add
inc
add
add
cmp
test
out
fidivs
pop
mov
dec
icebp
ja
in
dec
sti
mov
imul
nop
add
jg
sub
add
jl
add
add
add
add
add
mov
jmp
addb
add
dec
ficomps
aam
into
jne
jle
xor
add
ds
out
sbb
add
add
out
out
cmp
cld
sub
xor
mov
das
jge
rolb
jb
inc
add
in
pop
or
push
leave
insl
cmc
rolb
add
xor
mov
jns
stos
add
sbbl
mov
sbb
es
jno
sti
jl
sahf
cli
and
add
stos
aam
or
add
xchg
add
insl
cmp
and
mov
mov
sub
push
xchg
outsb
xor
or
mov
add
cmc
mov
insl
in
sbb
add
mov
in
add
add
fs
jp
xchg
jo
in
mov
repnz
add
and
add
fsubrp
dec
js
add
cmp
popa
mov
stos
in
mov
mov
add
xchg
pushf
and
je
dec
adc
fcmovbe
add
movb
lock
add
pushf
aam
jno
repnz
sbb
sti
jae
sbb
inc
add
stos
push
xlat
adc
xchg
add
je
fwait
pushf
stos
xor
call
add
in
and
jle
fnstsw
mov
mov
add
lcall
jge
add
cli
mov
xor
and
mov
mov
lret
sub
dec
mov
rolb
mov
add
mov
add
movsb
add
test
xchg
mov
add
fldenv
push
add
jp
pop
jnp
js
and
cmp
jno
movsb
add
adc
aam
stc
xor
add
add
xlat
out
sahf
mov
add
pusha
add
scas
pop
pop
mov
sbb
adc
xchg
in
adc
in
rolb
xchg
mov
jecxz
dec
mov
jne
mov
and
dec
or
add
xor
push
jae
fiadds
dec
cmpsl
mov
add
add
add
jb
adc
cmp
jb
and
nop
add
out
push
xor
rolb
add
add
fidivrl
and
cmp
xchg
xchg
add
mov
repz
mov
sbb
stos
in
sti
pop
scas
mov
mov
jo
mov
popa
or
pushf
lds
add
les
inc
ret
rolb
dec
lea
sub
xor
push
das
mov
insl
mov
test
add
stc
mov
sub
dec
jnp
addb
lret
pop
pop
test
jmp
stos
dec
aaa
add
cmc
popa
mov
cvtps2pi
dec
insb
addb
scas
lret
ss
add
cltd
xchg
add
adc
dec
mov
aam
xchg
add
mov
aas
dec
cmpsb
add
mov
add
push
add
sub
lahf
mov
lret
out
and
les
push
add
out
or
clc
aam
or
add
pop
adc
add
out
inc
add
add
add
add
sub
testb
push
add
das
fsts
imul
stc
movb
xchg
add
and
or
add
dec
inc
test
add
cmpsl
clc
rolb
mov
enter
je
frstor
xchg
cmpxchg
pushf
jmp
dec
cmc
pop
movsl
in
cmp
add
mov
movsb
add
sarl
cmpsb
add
add
add
cmp
out
push
add
movsb
add
add
add
inc
add
pop
mov
pop
pop
test
addb
popa
mov
testl
sbb
dec
movsl
addb
addr16
add
and
jno
add
add
sarl
out
sbb
imull
add
mov
loopne
inc
add
rorl
mov
push
add
movl
add
add
mov
sbb
add
out
xchg
add
jns
add
mov
add
in
jecxz
jne
add
jns
jmp
add
sub
dec
push
jo
std
push
add
xchg
lea
or
pop
jns
fisttps
and
shll
add
xchg
add
add
sti
fldenv
testb
fidivrl
imul
xor
cmp
aas
mov
mov
mov
add
clc
push
sbb
sti
bound
mov
arpl
add
out
out
cli
sbb
sahf
imul
enter
insl
clc
aam
jmp
mov
add
int3
cwtl
out
or
xchg
add
cltd
mov
fistpll
das
testb
add
add
push
dec
rolb
gs
add
mov
add
add
ret
fmull
add
icebp
dec
and
pop
xchg
inc
add
nop
add
add
mov
mov
mov
xchg
add
ss
push
lret
shl
call
xchg
add
movb
adc
int3
and
mov
cli
lcall
daa
cs
ret
pop
out
bound
mov
lock
arpl
adc
test
xchg
mov
sarl
das
adc
fdivl
push
add
push
add
mov
jp
fsubl
test
mov
add
in
fcomi
xchg
test
cmpsl
popa
inc
add
cmp
add
add
add
cmpsb
add
add
jns
movsl
mov
push
mov
and
mov
add
add
mov
out
pop
test
add
mov
and
mov
add
add
cld
push
jno
int3
dec
xchg
or
shll
push
popf
out
jns
gs
fwait
add
add
cltd
xchg
cmp
lret
repnz
or
add
add
cli
je
in
sub
push
add
inc
add
mov
add
mov
add
jmp
add
lret
gs
xor
into
push
add
push
add
daa
rolb
cmp
inc
add
or
push
ret
arpl
mov
divl
add
repz
push
add
dec
cmp
xchg
add
testb
mov
add
xchg
add
loopne
dec
inc
add
cld
pop
notl
std
mov
add
add
and
add
push
add
addb
add
add
aad
xor
lea
add
leave
lods
cmc
push
inc
add
testb
mov
adcl
mov
out
mov
hlt
add
aas
push
fsubs
cmp
idivl
rolb
jbe
bound
mov
ret
xchg
lret
in
ret
push
add
shll
add
sub
push
popa
add
mov
fisubl
add
xchg
add
add
add
add
movsl
int
mov
pop
mov
add
jo
mov
nop
add
add
mov
test
jge
add
fsincos
ljmp
add
add
sbb
sub
movsl
jle
movsl
push
popf
lea
popa
sbb
add
aaa
and
in
add
mov
mov
addb
or
or
add
dec
insb
pop
xchg
dec
addr16
push
add
mov
orl
add
sbb
movsb
add
daa
dec
scas
adc
add
mov
add
lret
add
push
js
push
dec
pop
xor
add
imul
dec
and
mov
psraw
add
mov
lods
stc
push
add
das
stos
pop
lcall
adc
clc
scas
int3
in
dec
lods
mov
jg
add
add
arpl
xchg
add
lcall
ja
std
sub
add
testb
and
sahf
sub
dec
adc
mov
mov
ds
in
int3
push
add
addb
mov
add
add
das
adc
and
fdivs
or
add
push
add
xlat
mov
adc
pop
pop
push
add
cmp
cmp
add
pop
jecxz
add
mov
fstps
mov
fstpt
std
lock
add
add
add
jne
test
imul
ss
hlt
add
insb
rolb
sub
pop
cmc
jbe
and
inc
add
inc
add
add
rolb
inc
jecxz
and
mov
in
jns
add
dec
and
mov
xchg
lcall
add
push
lods
stc
scas
rolb
push
add
mov
insl
ret
rcrl
mov
mov
add
mov
push
inc
add
cmp
icebp
fistl
dec
loope
push
add
add
add
cs
push
add
fstpt
add
mov
jg
mov
fcmovnu
in
cmpsl
inc
lds
jle
add
jb
inc
add
sbb
add
add
add
mov
mov
add
add
sub
add
or
push
pop
ljmp
mov
mov
aas
cwtl
mov
mov
add
mov
adc
mov
aaa
cmpsl
adc
scas
jno
dec
scas
scas
or
cmp
mov
sub
add
repnz
add
add
mov
movsl
xor
add
out
pusha
add
shrl
fimull
add
arpl
mov
mov
add
add
add
push
add
dec
out
cld
pslld
cs
sub
jb
les
rolb
jbe
mov
add
lock
or
add
lcall
jecxz
add
test
and
mov
out
das
movsb
add
add
dec
sti
std
ret
push
add
rcll
push
lods
sbb
pop
dec
cs
or
out
fbld
inc
mov
add
cmovs
add
lods
jl
rcll
add
test
add
add
push
je
xor
add
pop
mov
adc
stc
addb
add
adcl
mov
movsl
mov
je
shl
xor
sbb
mov
adc
arpl
xchg
add
jo
push
cs
ffreep
push
add
push
je
add
jl
std
mov
add
add
inc
add
mov
jge
popf
push
addb
jl
jmp
add
add
and
sub
add
xchg
in
or
add
xor
mov
pop
and
add
ja
add
pop
and
nop
add
adc
iret
xor
das
fistpll
fsubrp
inc
add
add
mov
scas
adc
add
aaa
add
dec
xor
int3
dec
jl
jae
incl
lret
sbb
mov
mov
mov
cld
mov
add
mov
leave
sbb
sub
testb
add
sahf
mov
xor
xor
jmp
jl
add
das
sub
mov
scas
dec
addb
add
add
sbb
repnz
add
add
rolb
test
mov
or
xor
cmp
add
xchg
loope
mov
mov
xlat
jge
pusha
add
jne
add
gs
add
mov
add
fistpll
dec
push
add
pop
in
xor
add
add
add
add
add
aad
adc
mov
or
test
add
jge
sub
mov
add
testb
in
and
pop
push
push
add
adc
mov
les
or
add
lret
cld
jb
out
push
mov
pop
push
add
add
mov
mov
rcr
lahf
cld
cmc
dec
popf
rol
add
iret
aas
jns
imul
testb
sahf
add
inc
push
lahf
loope
jno
add
lret
push
repnz
out
sub
push
arpl
add
pop
mov
sbb
test
popf
sbb
std
dec
bound
mov
and
jmp
repnz
add
mov
cli
pop
lea
add
add
rorl
inc
add
call
or
popl
push
cmp
cwtl
call
pop
mov
pop
fisubl
jns
fcompl
pop
in
sbbl
and
sahf
outsl
push
add
xor
fisubs
les
add
mov
int3
hlt
add
push
add
rolb
in
sbb
add
pop
and
mov
int3
out
shll
daa
js
insb
mov
push
add
mov
xchg
xchg
add
jecxz
fdivl
je
jmp
mov
add
add
rolb
add
mov
xor
push
add
add
sub
add
int3
sar
fstps
add
data16
mov
add
push
lods
bound
mov
add
sub
popf
addr16
add
enter
cmpsb
add
add
add
jmp
add
add
push
lock
imul
xchg
add
add
iret
stos
ret
call
les
jnp
out
add
sti
cmpsb
add
mov
inc
cmp
xchg
js
das
mov
and
sbb
std
xchg
add
mov
add
jns
jnp
add
add
add
dec
cld
repnz
add
add
add
add
mov
dec
fidivl
add
or
lods
pop
mov
mov
cmp
cmp
cmp
jl
add
mov
mov
mov
jp
sarl
mov
stc
lcall
filds
testb
loopne
iret
push
in
aad
add
add
add
mov
pop
aad
and
mov
mov
insb
jecxz
xchg
jae
lods
xchg
xor
mov
add
inc
add
js
es
pop
iret
movsl
leave
cmp
add
add
in
add
std
in
and
mov
add
jl
mov
mov
xor
dec
nop
add
ljmp
add
or
pop
loop
mov
rolb
push
jg
add
testb
fsubrp
mov
add
sbb
rolb
fldenv
insb
add
sub
hlt
add
add
xor
mov
mov
mov
mov
addb
cmc
add
mov
add
xchg
repz
fnsave
pusha
add
fistpl
in
test
sbb
cmpsl
rolb
pop
fadd
push
scas
adc
sahf
xor
bswap
add
xor
inc
add
sub
into
add
xchg
mov
pop
inc
add
repz
add
add
push
add
push
mov
les
pusha
add
mov
and
mov
add
arpl
adc
ffree
add
dec
mov
xchg
mov
rcll
or
add
add
dec
fdivrl
sarl
add
add
add
add
mov
sti
les
xor
add
mov
adcl
add
mov
push
add
mov
insl
imul
popa
rolb
add
and
bound
mov
jns
ljmp
sbb
add
lea
ss
add
mov
adc
rcrl
cmp
add
xchg
subl
mov
lret
add
mov
hlt
add
js
into
out
add
add
cmp
sti
les
jno
add
loope
add
popf
xlat
aas
lods
adc
decl
add
jne
mov
push
add
fisubrl
dec
xchg
add
pop
inc
fbld
add
jns
add
xchg
lds
in
or
stos
cmp
inc
add
xchg
xlat
inc
add
mov
aas
testl
and
add
mov
aam
pusha
add
cld
push
mov
pop
mov
or
cwtl
aad
repz
insl
or
add
push
add
and
mov
dec
stos
dec
jp
add
add
lods
clc
xchg
push
add
lods
dec
jl
or
incl
push
add
push
push
add
mov
add
xchg
xor
data16
add
or
or
or
rolb
xchg
xor
subl
add
add
add
add
mov
xor
add
add
fsts
cmp
and
mov
sbb
add
mov
add
cmp
lcall
mov
add
inc
add
xor
mov
adc
scas
push
add
add
lds
jns
lret
dec
jecxz
lret
sbb
add
or
sub
pop
jecxz
add
add
rolb
aas
xchg
add
insb
jo
add
mov
dec
cmp
out
stos
lret
sub
fsts
add
in
add
add
sbb
add
les
dec
xor
stos
and
add
jmp
das
lds
fwait
add
add
jp
lods
sbb
push
jne
xchg
jns
lahf
and
push
add
add
mov
add
lahf
mov
add
stos
mov
sbb
repz
jbe
cmc
in
xchg
adc
xchg
add
rdmsr
add
add
mov
add
add
jmp
add
mov
bound
mov
aas
test
sbb
push
add
lret
push
add
in
addl
cmpsl
roll
sahf
mov
mov
testb
stos
rolb
jmp
inc
dec
or
xor
mov
push
push
xor
and
mov
mov
add
ffreep
add
add
sub
loope
mov
pop
sub
pop
sub
add
push
add
add
sub
inc
in
add
add
add
xchg
add
mov
fimull
popa
inc
add
add
stos
mov
out
jbe
jecxz
add
movl
add
jle
movb
sub
repnz
add
ljmp
dec
mov
lret
decl
pushf
jg
xor
add
aam
inc
outsl
push
push
or
and
sub
xchg
mov
repz
dec
shll
add
mov
and
mov
inc
outsb
pushf
test
mov
aad
int3
xorl
mov
sub
mov
stc
int
pop
xor
insl
mov
add
scas
dec
adc
lcall
add
mov
ja
add
scas
xor
int
add
pop
xor
add
mull
add
xor
aam
adc
and
int
push
inc
add
stos
or
add
add
add
inc
jp
fstpt
mov
add
mov
lock
and
idivl
add
mov
repnz
dec
pop
lret
jno
add
cmc
xchg
mov
dec
lcall
add
add
mov
add
push
add
loope
push
add
pop
xor
mov
cmp
sti
jo
lea
add
pusha
add
pop
inc
add
jge
sbb
xor
pop
addb
xor
inc
add
fisubl
add
mov
ficomps
icebp
std
in
clc
or
out
mov
sub
add
cs
movsb
add
cld
aaa
jg
aam
add
dec
xchg
repz
xlat
inc
rolb
push
mov
add
add
cmc
cmp
insl
insl
dec
notl
add
fxrstor
pop
dec
imul
add
add
in
xor
cmc
xchg
idiv
pop
add
mov
push
loop
lods
ret
daa
popa
gs
xor
dec
mov
les
or
mov
add
mov
xchg
rolb
inc
add
add
pop
pop
dec
gs
movsb
add
push
mov
testb
add
icebp
dec
pop
lods
or
jp
insb
mov
add
jecxz
dec
lret
addr16
inc
nop
add
xchg
jg
mov
add
lcall
fcomi
add
mov
add
add
test
mov
xlat
sbb
add
mov
addb
cmp
hlt
add
repz
movsb
add
es
lahf
es
testb
js
inc
std
mov
fs
add
add
mov
test
dec
inc
xor
addb
cmp
inc
sbb
add
movl
add
ret
repz
add
in
add
sub
les
jne
add
sbb
cmpsl
movb
je
pop
aaa
jb
sub
xor
add
ficomps
hlt
add
add
jl
cmp
fsub
add
fs
outsl
icebp
cvttps2pi
push
add
add
loope
sbb
add
add
add
mov
xor
sbb
movsl
sbb
add
dec
stc
add
jg
jmp
sub
rcll
add
add
mov
ja
lgs
jnp
loop
xchg
in
lods
outsb
cmp
fbstp
or
add
jnp
add
cmpsb
add
sbb
add
dec
js
sub
jp
ret
push
clc
ret
fnstsw
add
add
push
movsl
xchg
pop
dec
sub
mov
xchg
add
push
xlat
bound
mov
dec
fistpl
mov
iret
repnz
push
aam
xchg
inc
pop
imul
push
add
call
cmp
xchg
lcall
sub
ret
lea
std
enter
rorl
pusha
add
insb
mov
add
or
jl
jne
add
add
cli
xchg
add
add
testb
xlat
mov
insb
mov
add
add
movb
add
inc
add
push
add
add
push
add
fidivrl
test
mov
add
cmc
dec
pop
mov
add
mov
cmpsl
rolb
fnsave
add
add
mov
sbb
jge
scas
mov
into
icebp
sahf
nop
add
ffree
cmp
aaa
pushf
mov
mov
mov
pop
push
loope
add
lods
daa
xchg
cmp
rolb
fcompp
loop
sbbl
xchg
iret
mov
add
out
xor
add
push
add
add
add
add
out
dec
or
mov
add
dec
clc
jb
jns
xchg
mov
adc
xchg
pushl
add
imul
sub
add
sbb
add
add
add
sbb
adc
popa
out
inc
add
add
lcall
xchg
pop
in
fadd
rolb
jmp
addb
mov
loope
mov
out
mov
add
mov
add
inc
icebp
icebp
push
add
cmp
das
mov
loop
hlt
add
sub
loopne
out
out
xchg
cmpsb
add
stos
pop
lcall
pop
add
mov
push
pusha
add
mov
jp
and
push
add
mov
mov
int3
push
add
cmp
cmpsl
jecxz
add
mov
fcomps
mov
adc
inc
dec
rolb
lea
add
mov
add
testb
in
mov
shll
xlat
jns
lret
add
cwtl
mov
popf
cli
push
pop
int3
clc
addr16
mov
bound
mov
add
mov
dec
cmp
add
or
add
insb
nop
add
mov
add
add
mov
dec
dec
aaa
sub
roll
fisttpll
mov
add
cmpsl
add
cmpsb
add
add
add
add
roll
pusha
add
or
add
xchg
add
mov
out
fldl
push
xor
add
imul
inc
add
add
into
in
ret
pop
inc
add
pop
pop
fimull
mov
mov
inc
add
add
add
add
bound
mov
ss
xchg
sub
leave
sub
jae
adc
add
rcll
jnp
mov
loop
push
enter
pop
rolb
inc
add
xor
in
mov
sbb
inc
jmp
jge
mov
mov
mov
mov
push
addb
adc
jge
hlt
add
dec
sar
push
repz
mov
popf
lret
js
outsl
mov
push
add
xor
mov
loopne
sbbl
jnp
cli
into
ret
and
mov
cmc
add
mov
add
xchg
int3
jl
xor
leave
sub
addb
add
lods
xchg
int3
pop
sub
push
add
fbstp
lock
push
add
sub
popa
rolb
cmp
add
dec
xor
rcll
cmp
xor
mov
inc
add
jmp
adc
into
inc
add
add
in
stos
xlat
or
stc
push
add
nop
add
mov
pusha
add
in
popf
inc
add
dec
inc
sbb
dec
add
mov
add
add
add
add
enter
add
nop
add
jne
jae
lret
out
js
pusha
add
or
out
out
jg
negl
mov
mov
fwait
lret
sbb
add
inc
loope
add
add
jno
pop
inc
add
shll
mov
xor
mov
add
add
in
aam
push
icebp
aas
add
clc
sub
pop
inc
lds
xor
add
outsb
mov
mov
mov
add
movsb
add
loope
add
add
cli
hlt
add
test
push
add
add
sbb
cmpsl
dec
and
mov
push
addb
scas
mov
movsb
add
mov
push
add
add
add
fisubrl
sbb
test
ret
fimull
push
add
and
mov
add
add
fistl
stos
stc
pop
sub
adc
adc
or
add
fimull
adc
adc
das
push
sahf
cli
jp
add
add
cmpsb
add
in
pop
je
ds
mov
add
cmc
pop
lods
pop
lods
call
add
push
imul
jmp
inc
add
mov
xchg
cmovp
mov
jne
mov
inc
add
mov
out
pop
aas
add
ret
add
mov
je
scas
pop
push
add
add
xchg
pop
inc
add
dec
loopne,pt
fcoml
fadds
fistps
cmp
add
add
add
movl
lods
insl
inc
add
cmp
out
bound
mov
addb
lea
jns
or
ds
aaa
xor
data16
inc
push
xlat
sbb
test
push
add
and
mov
add
cld
stos
dec
daa
pop
push
add
add
add
inc
add
mov
int3
or
mov
filds
gs
adc
jae
out
ret
fcoms
add
add
add
add
fnstcw
popa
bound
mov
add
add
popa
insb
faddl
cmp
repz
aaa
mov
in
push
out
mov
mov
add
sub
add
into
movsb
add
imul
add
data16
popf
pushl
push
sti
sbb
sbbl
add
popf
mov
add
add
mov
jge
inc
add
adc
pop
cmp
ret
call
cmp
mov
add
add
add
add
dec
cld
add
add
stc
and
aaa
cmp
dec
or
scas
aas
lret
pop
test
add
push
mov
add
ja
adc
enter
adc
data16
pop
mov
add
add
ljmp
add
jg
lods
pop
cltd
in
cwtl
stc
jl
add
mov
sbb
jns
cmpsl
mov
add
add
repnz
int
add
mov
mov
dec
lock
sub
add
insl
mov
add
add
hlt
add
mov
cmp
add
mov
add
or
add
pop
mov
fdivs
cmpsb
add
out
outsl
push
add
jb
pop
adc
dec
inc
dec
movb
mov
push
add
popa
repz
add
ds
in
add
mov
lcall
popa
add
add
cmc
std
out
sahf
push
mov
movb
inc
add
cltd
adc
push
push
add
pop
push
xor
cmpsl
cmp
ja
punpckhbw
add
add
sub
add
das
fwait
jecxz
inc
add
mov
xchg
orl
fdivr
fsubrs
or
push
add
icebp
xchg
push
sbb
or
adc
mov
mov
add
sbb
out
inc
jle
xchg
add
add
add
add
mov
dec
jge
jns
xor
lods
pop
js
add
add
add
data16
fs
add
sti
or
nop
add
add
add
lret
jb
rolb
push
add
fistpll
dec
pushf
inc
jecxz
add
add
add
add
pop
loop
into
dec
sbb
add
adc
sbb
cltd
in
rorl
fcmovu
dec
jp
and
mov
aas
jae
jge
push
add
aad
jp
stc
addb
push
aaa
mov
add
sti
sbb
stos
imull
add
add
sbb
add
aaa
addb
add
sbb
push
add
push
add
add
sub
push
add
jne
clc
mov
movsb
add
rolb
sub
jmp
add
add
cmp
scas
mov
xchg
add
mov
or
clc
leave
add
adc
add
add
js
bound
mov
mov
cli
mov
lods
stos
jp
pop
xchg
add
add
add
lret
sub
les
fildll
add
test
scas
rolb
mov
outsl
inc
mov
movb
pop
sbb
test
pop
into
lret
xor
scas
xchg
repz
stos
mov
add
mov
lahf
aam
pushf
xchg
mov
mov
jecxz
pop
cmp
xor
xchg
aad
mov
add
jmp
jbe
push
add
pop
test
icebp
lahf
fwait
mov
inc
add
dec
pop
fiadds
add
test
data16
add
imul
inc
add
add
ljmp
push
ret
addb
jp
rcl
add
rolb
cmp
add
lds
add
add
lcall
mov
add
mov
sti
push
add
add
adc
mov
add
lods
stc
adc
repnz
xsavec
xchg
add
mov
jns
lods
cltd
lods
lds
push
add
add
add
mov
pop
test
imul
add
mov
add
pop
lcall
mov
pop
mov
test
movb
mov
enter
sub
xchg
and
mov
mov
std
mov
pop
stos
bound
mov
add
test
in
fldl
push
mov
outsl
add
mov
imul
imul
add
add
mov
add
jae
out
bound
mov
andl
into
repz
mov
add
add
sub
les
out
xor
lret
adc
ret
dec
cmc
mov
pop
fwait
scas
sti
or
push
add
cmp
jle
and
mov
add
add
fsts
add
mov
add
add
popf
dec
xchg
fistl
xchg
movsb
add
repnz
into
dec
dec
inc
mov
addl
jle
inc
add
add
inc
cmp
add
out
push
add
add
mov
inc
add
add
icebp
sub
xchg
mov
addb
push
add
add
pop
sbbl
sti
add
mov
arpl
out
pop
xor
inc
inc
stos
mov
add
add
add
add
cld
mov
icebp
xchg
out
sti
pop
lret
and
stos
add
mov
xlat
scas
push
test
je
aad
loop
jnp
scas
push
add
arpl
cmp
rolb
cmc
mov
jmp
add
add
cmp
xor
xor
add
out
add
add
add
add
mov
and
repz
mov
jno
inc
add
lret
sbb
mov
add
add
add
je
fcomip
add
fcom
add
add
add
add
adc
sub
and
fwait
lods
mov
fisubl
add
add
pop
sub
fdivrp
lret
cmp
pop
inc
add
enter
jne
popf
stc
cmp
ret
mov
jo
rcll
xchg
add
jle
add
call
int3
add
enter
adc
aad
fwait
cltd
xor
add
add
add
add
add
add
add
cmp
cmc
push
add
int3
push
xorl
pop
adc
add
dec
enter
incl
add
and
rcll
movlps
roll
xchg
repz
leave
movb
inc
add
push
add
add
dec
hlt
add
add
add
lock
repz
add
xchg
scas
xlat
or
pop
in
int
xor
lods
inc
or
bound
mov
mov
imull
ret
add
cwtl
push
cmpsb
add
mov
sub
sub
mov
mov
and
sub
test
and
je
xor
test
add
or
push
add
imul
mov
or
cli
call
arpl
push
dec
cwtl
pop
or
mov
add
add
add
mov
sahf
xlat
jp
dec
iret
sti
mov
ret
mov
add
add
nop
add
cmp
add
scas
in
ss
lods
jg
popa
adc
scas
inc
push
cmp
mov
ljmp
rcll
add
orl
insl
xchg
mov
out
loopne
mov
out
jp
mov
dec
jle
hlt
add
mov
int3
add
add
rep
push
lods
hlt
add
add
pop
into
mov
icebp
or
add
ficoml
add
add
xor
xor
fxtract
add
add
mov
mov
jne
jo
pop
lods
fnstenv
fidivl
orl
add
add
pop
hlt
add
and
mov
pop
ss
adc
inc
add
jp
cmp
add
shll
add
sbb
dec
stos
stc
out
pop
fiadds
repnz
mov
int3
test
add
xchg
add
add
inc
mov
add
repz
scas
roll
mov
jecxz
jb
cmp
mov
add
add
pushf
pop
pusha
add
or
jge
mov
leave
xor
aas
out
add
sub
int
mov
test
add
test
pusha
add
xchg
add
and
mov
xchg
xchg
and
push
push
add
or
add
mov
add
rolb
jb
dec
loopne
and
push
add
aaa
sbb
add
ljmp
jne
repz
aaa
int
nop
add
inc
add
add
cmpsb
add
mov
add
add
cmp
mov
cmpsb
add
adc
sbb
mov
mov
mov
add
dec
push
adc
std
outsb
pusha
add
push
inc
fldt
dec
mov
xor
testl
xor
dec
inc
add
push
add
add
mov
sub
pop
xor
enter
add
add
pop
ds
jl
lahf
cmpsl
inc
add
cmp
inc
xchg
add
movsb
add
cwtl
jecxz
incl
dec
dec
rcll
add
add
inc
sbb
push
add
add
gs
mov
mov
add
cmp
push
add
in
in
add
mov
nop
add
fst
add
mov
pop
dec
sarl
rolb
aam
push
clc
or
sbb
push
add
add
add
cmpsb
add
and
mov
add
scas
sbb
inc
add
outsl
subl
lock
xor
dec
push
add
rolb
in
add
mov
dec
js
imul
push
add
add
mov
enter
adc
mov
add
add
mov
mov
je
and
mov
add
add
pop
pop
repz
xor
push
add
loope
or
das
xchg
add
inc
add
xchg
xchg
add
add
add
xor
xor
ljmp
or
in
mov
mov
mov
add
add
add
add
out
add
in
xor
push
add
add
test
xor
add
add
xor
fsubp
popa
sbb
add
testb
scas
aaa
and
add
push
repz
adc
inc
test
or
mov
sbb
add
add
push
stos
mov
in
jo
inc
in
iret
loop
cmp
add
add
leave
dec
and
add
push
out
repnz
sbb
mov
cltd
inc
fbld
into
repz
lock
add
add
push
push
add
add
xchg
add
xchg
aas
cmp
add
call
fstps
adc
push
add
repz
add
lea
xchg
fsubrs
jp
or
rolb
xchg
jmp
mov
in
fcomps
add
iret
out
out
test
out
add
pop
sahf
push
add
sub
sub
add
cmp
add
add
rolb
mov
mov
enter
pushf
xor
imul
mov
pop
adc
out
fcomps
pop
xor
push
add
addb
ret
cmpsl
rolb
lods
outsb
lcall
xor
add
add
pushf
rolb
and
mov
push
adc
aaa
sub
sbb
rcrl
mov
cmp
adc
inc
add
add
test
add
add
mov
or
clc
movb
and
sub
loop
sub
cmpsb
add
add
add
mov
ret
and
inc
add
mov
iret
cs
and
mov
loopne
movsb
add
clc
in
ret
dec
push
inc
add
inc
push
add
xchg
add
add
cmp
xorl
add
mov
xor
add
mov
data16
add
std
and
mov
adc
fmul
dec
mov
add
add
and
mov
add
pop
mov
cmp
mov
stc
mov
mov
pop
mov
imul
mov
xchg
cmp
sbb
add
push
add
add
add
add
mov
add
add
add
movl
test
sahf
in
lret
dec
bound
mov
add
push
add
add
mov
lock
int3
jb
aam
lea
out
testl
mov
mov
rcl
mov
testb
xor
mov
lret
add
add
mov
insl
test
inc
add
inc
jnp
sub
or
lods
lods
and
jmp
add
fcoms
mov
xchg
dec
xor
cld
jp
test
sbb
lret
add
add
js
lret
push
push
lcall
dec
push
add
lcall
add
std
and
cmp
test
int3
addb
cwtl
stos
xchg
das
test
xchg
clc
pop
adc
popf
sarl
int3
decl
adc
addr16
jo
add
shr
gs
xchg
add
js
adc
rolb
adc
aad
cmp
add
stos
adc
sbb
mov
mov
push
fnsave
test
stos
repz
add
add
add
and
add
add
or
dec
or
xor
sbb
repz
add
sub
push
mov
out
sub
pop
adc
wbinvd
mov
jo
xchg
inc
repnz
add
ret
mov
xchg
add
add
xor
dec
clc
mov
add
addl
mov
sub
popf
addb
dec
cmp
mov
stos
out
inc
dec
jg
test
jg
aaa
adc
pop
scas
lock
test
add
mov
add
adc
rolb
add
xchg
pop
leave
xor
mov
pop
cmp
add
add
flds
rolb
lret
adc
pop
sbb
add
dec
sbb
push
mov
lea
mov
imul
sbb
mov
sbb
jbe
rolb
out
jbe
xchg
add
add
js
xor
ljmp
int3
sub
dec
or
pop
mov
les
cmp
popa
xor
sti
inc
add
ret
inc
add
add
add
xor
add
jnp
sub
lahf
push
inc
cs
in
adc
mov
sub
movsb
add
mov
adc
push
add
mov
mov
add
mov
mov
clc
or
insb
pop
movb
add
testb
addl
ljmp
lods
adc
mov
mov
mov
inc
add
add
add
add
add
add
add
dec
cmp
decl
call
sub
insb
inc
add
cmp
test
add
push
xchg
scas
mov
add
pusha
add
stc
add
mov
xchg
mov
jp
outsl
push
add
movb
add
and
add
icebp
mov
add
push
add
add
inc
add
inc
add
sbb
add
inc
add
cmpsb
add
add
mov
cmc
subl
movsl
xchg
cli
adc
mov
scas
xor
jmp
fwait
idivl
popf
push
add
add
imul
add
add
xchg
aas
add
out
inc
add
mov
mov
rorl
lret
mov
add
cmpsl
xor
sbb
push
aas
movb
stc
test
inc
mov
add
push
cmpsb
add
add
add
sti
jnp
scas
test
add
mov
jle
and
adc
jo
add
mov
sub
add
jmp
rolb
mov
enter
and
mov
add
add
inc
pop
jmp
nop
add
mov
add
loope
lods
add
jo
rolb
xchg
add
scas
xchg
add
ss
arpl
add
add
xchg
cmpsl
sub
iret
call
add
dec
pop
aas
cli
add
add
aas
jbe
enter
imul
mov
jne
int
add
scas
inc
test
and
mov
rorl
cmp
sub
add
jb
insl
xchg
and
sub
loope
cmc
inc
jle
pop
arpl
fisttps
add
pop
lret
add
dec
je
test
add
push
pop
loop
pop
ljmp
mov
add
clc
mov
insl
cmp
add
add
mov
add
push
sbb
add
add
and
dec
dec
cli
repnz
adc
out
dec
int
outsb
inc
add
int
sub
js
add
fnstsw
xor
data16
repz
jmp
repz
hlt
add
mov
add
mov
das
push
push
rolb
int3
add
add
int3
push
dec
adc
dec
mov
sbb
add
fisubrl
out
fnsave
sbb
hlt
add
add
inc
add
or
add
push
add
jp
mov
add
pop
sub
add
sahf
pop
cmpsl
xchg
ja
test
add
add
and
movsl
push
add
iret
inc
or
stos
lahf
pop
cltd
pop
out
mov
add
imul
rolb
cltd
jne
add
cmp
xor
add
sbb
out
push
mov
leave
push
inc
pop
push
add
scas
cltd
sub
lahf
jp
ljmp
out
xor
add
cs
arpl
pop
sbb
or
test
cs
dec
push
add
mov
push
add
mov
adc
cmp
add
mov
stos
or
mov
add
scas
frstor
pop
cmpl
pop
xor
cs
or
fldcw
dec
cvtdq2ps
and
add
add
mov
mov
mov
pop
push
jle
mov
adc
mov
dec
mov
jmp
push
jne
je
or
add
into
mov
iret
stc
clc
pop
mov
push
loope
dec
xchg
add
add
jmp
dec
pop
mov
pop
stc
adc
stc
jae
in
add
pop
arpl
adc
fldenv
imul
cld
in
adc
mov
xor
stc
jl
aaa
add
sub
add
cwtl
and
ja
sub
add
out
jns
in
in
mov
pop
stos
xor
movsb
add
push
add
mov
add
mov
mov
mov
mov
xchg
xchg
add
jg
daa
mov
xlat
xor
out
sbbl
dec
cld
arpl
out
cmpsb
add
add
push
add
xor
inc
add
and
addb
lret
add
add
adc
daa
add
in
rolb
pop
adcl
xor
add
add
sub
mov
adc
pop
das
mov
mov
mov
dec
sub
mov
add
cmp
cmp
add
xor
inc
add
add
add
fisttpl
mov
or
add
ret
shrl
sarl
add
xchg
out
jp
leave
lret
lea
add
xor
fldenv
push
or
mov
add
jo
nop
add
add
add
push
rolb
cmc
xchg
addb
stos
call
add
movsb
add
add
pop
sbb
rolb
add
mov
js
add
add
add
add
add
dec
test
xor
inc
add
jl
add
sbb
jmp
nop
add
add
addps
aaa
js
add
mov
mov
mov
xchg
imul
out
dec
xchg
mov
xor
and
faddl
push
pop
and
movb
inc
sbb
push
mov
add
sbbl
test
cwtl
jmp
mov
adc
inc
add
push
sub
cmc
addb
ret
nop
add
add
dec
dec
cmp
cmp
sbb
shll
sub
pop
out
mov
add
dec
rcr
push
add
add
jge
out
cmp
add
inc
cmpsb
add
jl
add
push
dec
xor
inc
scas
push
add
add
mov
addb
movb
popa
push
add
pushf
je
outsb
mov
add
movb
add
stos
popa
call
add
sahf
mov
add
sub
push
xor
loop
cld
or
mov
sar
mov
rolb
push
inc
xlat
push
add
push
add
jge
mov
add
jbe
add
mov
or
stos
test
mov
hlt
add
imul
sbb
sbb
push
add
cli
add
add
leave
popf
int
out
sti
adc
dec
mov
add
rcr
xchg
add
scas
sub
sbb
add
stos
adc
pushf
sub
rolb
sub
adc
scas
dec
pop
imul
out
jne
test
mov
push
add
add
insl
cmpsl
push
rep
jae
inc
jo
push
fisubs
pop
sub
dec
jmp
add
and
mov
lcall
adc
out
jge
jo
or
add
mov
sbb
add
fistpl
mov
adc
mov
add
testb
dec
mov
inc
add
ds
sbbl
or
fmull
jns
pop
stos
outsl
cmp
jge
mov
in
sti
insb
dec
inc
inc
add
or
add
add
add
in
push
imul
in
push
add
add
add
push
fnstenv
pop
adc
sub
xor
mov
cmp
dec
loop
xchg
daa
mov
push
inc
push
jnp
dec
and
add
add
lock
add
insb
sti
mov
pop
mov
pushf
stos
xor
add
add
and
sub
pop
shrl
push
add
das
rolb
jb
out
or
add
andl
mov
test
add
das
sub
mov
add
push
inc
addb
xchg
xor
cld
out
pop
ret
dec
subl
add
xchg
and
mov
dec
sub
sub
lcall
scas
mov
inc
add
add
mov
add
orl
cs
ret
ret
jge
inc
adc
ret
and
dec
cmc
andps
js
adc
xchg
mov
in
jge
xchg
add
lods
dec
stos
aad
fstpl
dec
add
mov
add
mov
mov
xchg
jne
add
add
int3
dec
mov
mov
pop
mov
jp
rolb
scas
sti
xor
inc
add
and
add
jb
pop
inc
add
icebp
mov
add
add
cwtl
int
add
test
jae
fildll
insl
mov
mov
mov
test
movsb
add
xchg
or
push
add
add
sub
repz
add
out
cwtl
lock
push
push
add
insl
jmp
push
inc
mov
cmp
popf
movb
add
add
add
jns
add
repnz
dec
mov
add
mov
sbb
add
xchg
in
out
add
mov
addb
or
repz
inc
add
jno,pn
cwtl
pop
mov
sarl
or
outsl
inc
add
inc
addps
cmpl
cmpsl
fidivs
add
add
lahf
pop
mov
mov
aad
mov
mov
mov
hlt
add
xchg
cmp
jge
add
add
jbe
jmp
add
mov
push
testb
roll
test
add
mov
dec
ret
subl
ljmp
pop
mov
add
add
imul
loop
or
add
or
and
mov
cmpsb
add
add
out
add
jl
add
movsl
fbld
add
add
add
dec
addb
add
in
dec
add
in
adc
sti
enter
add
adc
jmp
pop
add
jnp
add
cmpsb
add
mov
fstl
add
jnp
add
cs
les
add
call
mov
rorl
adc
cmpsb
add
add
add
add
add
push
cs
mov
jge
ret
mov
outsl
int3
pop
inc
testb
fadd
add
xor
and
add
rcpps
pop
adc
mov
mov
sahf
add
movb
dec
pushf
pop
dec
jle
and
mov
int
cltd
inc
add
add
mov
leave
sbb
add
pop
aad
cli
xchg
push
jge
pop
or
add
push
pushf
mov
cwtl
sbb
adc
jp
insl
cltd
jb
pop
and
mov
insb
inc
add
add
pusha
add
scas
xchg
add
jp
inc
add
add
ret
inc
add
inc
add
sbb
mov
dec
jnp
push
push
add
sbb
or
add
pop
loop
bt
jp
leave
add
mov
fisubl
mov
or
dec
jne
add
stos
or
dec
add
and
add
mov
mov
fsubr
shrl
movsl
arpl
fdivrs
mov
xor
add
mov
mov
inc
mov
fildl
add
pop
push
add
addr16
roll
add
mov
mov
sub
mov
dec
sti
rolb
mov
daa
fnstsw
out
clc
divl
cmp
sbb
fldl
gs
add
lods
sbb
lcall
out
pop
data16
out
jmp
mov
dec
sti
imul
in
and
mov
cli
popf
out
jge
ljmp
add
mov
add
test
movl
add
add
jns
add
repz
add
mov
addr16
mov
add
mov
lret
inc
push
add
in
pop
sub
insl
insb
in
daa
loopne
and
mov
jns
scas
push
add
add
mov
adc
xchg
add
bound
mov
mov
rolb
ds
add
jle
add
mov
add
addr16
push
cmp
or
test
pop
mov
ret
hlt
add
add
pop
lods
adc
in
lret
add
mov
add
jnp
pop
std
jno
adc
mov
mov
cmp
mov
add
cmpsl
out
inc
scas
insb
add
add
add
cmp
add
pop
mov
add
or
sub
add
xchg
add
aaa
bound
mov
xor
sbb
xchg
add
add
add
gs
pop
or
or
insb
data16
fdivl
add
pushf
sbb
add
push
dec
pop
rolb
jb
leave
imul
dec
dec
xchg
add
icebp
xchg
daa
jle
pop
jne
lret
fdivl
mov
test
sbb
sbb
testb
add
pushf
mov
pop
stc
andl
fsubr
cmpl
xor
sbb
add
ret
add
pop
cmpl
mov
sub
jl
scas
mov
inc
add
lret
faddl
insb
inc
outsb
lock
add
cmp
daa
fimuls
fwait
ret
xchg
or
lds
and
mov
cmp
add
jae
add
fildl
test
dec
sete
sbb
addr16
std
test
jg
cli
xchg
xor
imul
add
mov
add
jmp
daa
subl
add
dec
outsb
sti
pop
sti
xchg
cltd
xchg
adc
add
add
jnp
mov
mov
lcall
cmp
add
add
add
not
add
rolb
imul
add
stc
xor
pop
cli
inc
aad
add
pop
mov
mov
add
add
add
add
push
cmp
pop
xchg
add
and
mov
pop
test
test
popf
dec
jl
add
xchg
add
repnz
sub
add
subl
mov
xchg
lds
mov
cmpsb
add
add
imul
out
pop
push
add
add
add
mov
mov
cmpsb
add
shll
fsubrs
imul
daa
fprem1
nop
add
add
mov
xchg
dec
sbb
andl
add
inc
cmp
jmp
or
add
mov
int3
dec
imul
mov
lock
add
icebp
lods
add
add
lock
xchg
scas
jnp
insl
data16
add
in
nop
add
aam
je
sahf
add
enter
xchg
add
add
push
ret
add
and
cld
movb
fisubl
ret
repnz
loop
jge
add
lret
add
rolb
push
add
mov
inc
add
add
cmp
add
scas
int3
movsb
add
push
sbb
xor
cmp
jns
push
cwtl
add
mov
push
jo
das
js
into
mov
sbb
push
add
and
adc
sub
mov
add
or
daa
out
mov
add
mov
cld
jno
add
inc
add
add
lods
in
leave
sar
loopne
dec
fldenv
rolb
sbbl
mov
pop
adc
hlt
add
add
dec
out
lcall
inc
add
jecxz
addr16
pop
fwait
js
inc
add
mov
push
add
out
insl
jne
and
stos
jle
add
add
dec
jmp
addb
sub
add
popf
les
xchg
add
inc
add
add
mov
fs
add
add
add
fwait
sahf
add
mov
popa
ljmp
cmp
mov
stc
into
imul
cli
divl
add
xor
pop
add
push
add
add
out
and
ret
jbe
lea
jns
add
push
mov
bound
mov
stos
dec
jmp
add
pop
leave
mov
pop
fnsave
add
lret
mov
add
add
je
jp
shll
add
add
mov
addb
or
add
xchg
rcll
cmovp
push
add
cmpsb
add
or
aas
pop
popf
ss
js
add
scas
mov
add
adc
xor
add
dec
shll
add
add
les
sub
push
dec
mov
inc
sbbl
xchg
add
outsb
jl
outsb
bound
mov
repnz
add
aas
test
add
in
aad
push
add
out
add
mov
add
mov
cmp
pop
mov
out
adcl
shll
jmp
sbb
add
add
and
scas
scas
cmc
push
add
pop
cli
add
add
dec
xor
mov
add
imul
mov
inc
add
mov
add
test
mov
pop
das
mov
mov
inc
add
add
add
addb
fnstsw
lea
mov
add
cmp
testb
dec
mov
push
add
mov
mov
fwait
fs
add
jb
in
sub
mov
pop
dec
stmxcsr
add
or
mov
lea
add
aaa
pop
jne
pop
lcall
scas
adc
add
jno
mov
jge
add
add
and
add
lret
jns
push
fimuls
int3
jge
and
mov
add
mov
add
popa
mov
enter
jbe
mov
les
xchg
sub
lea
mov
pop
lret
lea
add
mov
jns
add
sbb
ds
subl
adc
testl
xchg
add
addr16
mov
sub
mov
dec
dec
mov
add
adc
ret
add
or
xor
adc
loop
push
add
lea
movsl
addb
sbb
lahf
add
hlt
add
mov
cmc
mov
lret
jb
daa
iret
rorl
xchg
mov
mov
adc
pop
cmp
hlt
add
add
xor
add
adc
cmp
subl
addb
pop
sub
and
mov
popa
mov
lods
xor
push
add
popf
xchg
push
add
rolb
std
arpl
or
add
addb
and
adc
cwtl
mov
add
mov
mov
jo
and
or
or
fmull
in
ret
stos
sub
loop
adc
mov
loop
dec
arpl
add
push
lret
addr16
test
add
hlt
add
cmp
cmp
dec
out
addb
add
inc
push
add
cmp
repnz
add
dec
pop
inc
add
loop
xlat
sub
loop
aad
cs
dec
out
add
bound
mov
add
mov
add
stos
push
xchg
xor
add
lahf
sbb
add
test
ficoml
lock
add
out
and
inc
add
add
sub
jg
sub
mov
add
pop
sahf
std
test
es
add
icebp
movsl
outsl
cli
dec
push
add
out
das
lock
adc
inc
loopne
xchg
add
push
jne
sbb
add
sbb
in
movsl
mov
testl
add
rolb
inc
add
add
add
push
add
add
mov
sub
rolb
jmp
sahf
pop
testb
mov
pop
fldenv
mov
fiadds
popf
mov
sbb
add
add
stc
or
lcall
add
negl
push
mov
ret
xlat
sbb
jns
sti
pop
popa
jmp
icebp
in
mov
sbb
add
mov
xchg
and
mov
push
add
ljmp
jne
cwtl
or
add
or
or
push
add
mov
add
pushl
add
sbb
add
add
add
push
aad
test
clc
sbb
icebp
js
pop
add
mov
add
cli
lss
std
pop
add
jecxz
scas
insl
or
fwait
mov
jnp
or
add
pop
mov
cli
inc
inc
add
in
mov
add
dec
jmp
add
sbb
mov
mov
jno
outsb
test
je
aam
xchg
aam
sbb
mov
movd
jp
pop
daa
push
add
or
jne
add
add
add
add
outsl
xchg
jnp
out
add
or
add
mov
mov
in
imul
add
lds
mov
imul
push
jae
fiaddl
sbb
int
push
cmp
adcl
pop
lods
ljmp
mov
add
movsb
add
and
pop
dec
mov
add
mull
add
add
add
into
pop
sbb
mov
lods
aas
cmpsb
add
inc
add
rolb
lcall
add
xlat
push
add
jae
add
les
mov
cltd
faddl
mov
scas
inc
test
add
push
rolb
lea
add
out
mov
pop
stc
or
sub
fistl
cmpsb
add
mov
cs
loopne
popf
bound
mov
lahf
icebp
test
add
mov
fldl2t
xchg
jge
punpckhwd
mov
add
add
jge
addr16
repnz
mov
inc
add
pop
push
add
dec
jb
mov
add
dec
cltd
dec
arpl
loope
add
cmc
dec
daa
xchg
add
test
pusha
add
popf
lock
xchg
add
inc
push
add
add
add
cwtl
mov
cmc
adc
sbb
rcrl
dec
adc
push
pop
add
xchg
dec
push
add
fnstcw
iret
mov
add
lcall
or
inc
add
lods
sbb
call
adc
loopne
inc
add
add
mov
mov
adc
int3
jae
je
sbb
add
add
add
dec
mov
imul
add
sub
push
add
pop
daa
xlat
js
xor
cmpsl
adc
mov
scas
cld
stos
mov
add
add
push
add
pusha
add
add
add
cmp
icebp
movsl
dec
mov
mov
sub
add
insl
or
jl
fwait
dec
scas
jb
mov
push
add
xor
test
sbb
add
add
fmull
xchg
adcl
mov
add
mov
push
add
test
add
xor
pop
scas
pushf
in
out
add
xchg
mov
add
in
out
cltd
cltd
jp
inc
add
fldenv
sub
bound
mov
add
imul
mov
into
sarl
lock
pusha
add
fstpt
pop
and
mov
arpl
mov
add
mov
and
mov
pop
sbb
dec
cmc
aaa
je
push
add
inc
add
jl
pop
sbb
sarl
test
sbb
or
imul
add
mov
jae
fnsave
adc
add
iret
xor
mov
add
mov
fs
push
push
xor
push
add
sarl
add
iret
cmp
lock
and
fwait
push
add
divl
add
pop
xchg
mov
insl
push
add
add
cmpsl
ljmp
jnp
add
add
mov
sti
sub
mov
add
add
je
hlt
add
add
add
adc
stos
fisubs
pop
jno
and
das
xchg
add
add
add
add
push
add
adc
jno
movsb
add
sahf
iret
jae
cmp
add
adc
pop
insb
out
rorl
add
pop
add
add
add
ljmp
mov
mov
add
add
js,pn
add
add
add
add
cmp
loop
push
add
dec
push
movsb
add
int3
lcall
jbe
out
mov
add
pop
cmc
ds
and
mov
mov
fadd
add
orl
add
mov
add
add
bound
mov
mov
pop
mov
add
scas
add
add
in
add
pop
mov
sbb
or
pop
sub
insl
mov
mov
add
jno
fidivrl
and
mov
add
and
mov
inc
xchg
or
mov
mov
je
and
jmp
and
stos
sub
inc
add
mov
mov
adc
cld
xor
aam
and
mov
xor
dec
mov
fcomip
add
sub
lahf
mov
pop
je
cmpsb
add
add
add
fnstcw
test
add
mov
or
add
clts
add
ret
add
mov
inc
add
add
xchg
add
mov
insb
outsb
dec
test
adc
mov
dec
iret
fiaddl
add
adc
inc
rolb
repz
mov
add
add
add
mov
inc
add
push
push
add
roll
mov
and
mov
push
add
mov
sbb
adc
in
mov
mov
add
shr
jns
jns
pop
ja
cli
cwtl
adc
hlt
add
cwtl
cmp
and
mov
add
add
add
sub
imul
mov
add
mov
mov
mov
cmpsb
add
movups
mov
std
xchg
add
stos
imul
or
add
or
in
movsl
push
add
enter
or
inc
and
mov
dec
aam
jecxz
roll
add
ja
cmc
mov
notl
add
mov
les
aas
hlt
add
cmp
add
fcmovu
loop
mov
xor
into
aad
repnz
add
push
add
mov
mov
sbb
add
push
mov
cmp
add
adc
add
pop
and
xchg
dec
enter
pop
jbe
test
add
daa
mov
and
insb
addb
add
jno
add
mov
test
push
enter
pushf
leave
test
orl
add
mov
sub
push
add
lcall
push
push
mov
add
pop
insl
mov
add
inc
add
xchg
and
mov
fwait
in
testl
add
inc
pop
outsb
inc
mov
hlt
add
stos
mov
mov
jle
mov
add
gs
inc
mov
mov
pop
rolb
pop
dec
xchg
pop
test
insb
and
mov
outsb
xchg
stos
cmpsl
out
flds
jge
pop
or
add
add
stc
sbb
or
mov
xchg
xchg
add
xchg
add
add
sbb
and
mov
mov
rolb
add
or
lock
add
add
mov
add
adc
jp
pop
add
mov
mov
fcoml
add
sub
repz
jb
cli
xor
lcall
mov
pop
loope
je
into
bound
mov
add
mov
data16
rolb
in
adc
out
lret
add
int
cmp
add
mov
push
fcmovnu
hlt
add
inc
out
or
add
jg
repnz
dec
xchg
add
int3
movb
sub
mov
dec
dec
int
pushf
ficoml
jae
add
mov
push
add
and
mov
add
add
pop
addb
add
mov
mov
inc
add
nop
es
add
add
jl
nop
cld
nop
jmp
je
add
add
push
pop
push
mov
xchg
ret
mov
inc
add
cld
nop
jmp
add
dec
adc
jne
stc
nop
es
add
push
loop
ret
add
xor
add
stc
nop
es
add
fisttpl
nop
jmp
add
das
mov
push
mov
xchg
ret
add
add
add
xor
jae
add
nop
es
add
xchg
lea
stc
nop
es
sahf
xchg
inc
int
mov
nop
es
scas
add
int
push
xor
stc
nop
es
add
add
aas
rolb
in
pushl
stc
nop
es
sahf
push
add
cmpsl
cmpsl
loopne
xor
xor
nop
cld
nop
jmp
sbb
pop
xchg
das
or
mov
xchg
ret
cli
inc
add
add
pusha
add
or
stc
nop
es
add
int3
mov
stc
nop
es
cmpsl
add
jb
add
scas
mov
sub
add
push
push
mov
xchg
ret
lcall
inc
add
test
push
mov
xchg
ret
cmpsl
mov
add
add
add
nop
es
cld
add
fistpll
or
stc
nop
es
mov
loopne
lret
push
nop
cld
nop
jmp
add
cs
add
fcomip
icebp
nop
cld
nop
jmp
dec
add
fbstp
stc
nop
es
add
add
fistps
cmc
xor
stc
nop
es
sbb
pop
loop
rolb
movb
sub
nop
cld
nop
jmp
add
aas
add
add
nop
es
std
add
mov
stc
push
stc
nop
es
xlat
add
and
mov
stc
nop
es
cld
add
mov
rep
stc
nop
es
aas
sub
add
add
loopne
mov
xchg
ret
dec
add
scas
addr16
add
stc
nop
es
push
or
test
nop
es
add
cs
and
stc
nop
es
add
xchg
das
add
insl
aam
add
or
add
add
push
mov
xchg
ret
add
add
pop
mov
stc
nop
es
dec
fistps
jo
cli
scas
jne
nop
cld
nop
jmp
add
dec
push
push
mov
xchg
ret
jp
adc
cld
das
pop
stc
nop
es
cld
add
test
add
pop
mov
nop
cld
nop
jmp
fldl
add
add
add
add
test
or
testb
jb
dec
je
stc
nop
es
add
sahf
jp
sti
stc
nop
es
fistps
add
shl
stc
nop
es
in
das
dec
add
sub
xor
inc
add
add
add
pop
fadds
xchg
ret
mov
add
add
add
stc
nop
es
ffreep
add
sbb
in
add
stc
nop
es
adc
add
incl
nop
cld
nop
jmp
push
in
call
nop
cld
nop
jmp
aaa
add
add
jmp
jb
cld
push
sbb
stc
nop
es
aas
add
jb
cwtl
rep
stc
nop
es
add
add
jne
stc
nop
es
cli
filds
insb
je
stc
nop
es
dec
add
adc
push
add
add
stc
nop
es
jmp
mov
mov
push
mov
xchg
ret
add
pop
dec
dec
scas
add
push
mov
xchg
ret
cld
add
cld
add
push
jmp
add
dec
test
in
mov
stc
nop
es
cld
sbb
test
and
add
nop
es
xchg
cs
cmp
stc
nop
es
xchg
int
cmpsl
addb
add
jne
stc
nop
es
cld
jmp
enter
inc
nop
cld
nop
jmp
cld
int
aam
push
inc
xor
es
add
push
int
add
jne
nop
cld
nop
jmp
add
scas
add
in
add
mov
add
shll
add
add
shl
stc
nop
es
add
std
add
mov
pop
nop
cld
nop
jmp
add
add
int
add
push
mov
xchg
ret
add
add
add
andl
jb
mov
push
push
mov
xchg
ret
adc
loop
inc
push
add
adc
mov
add
imul
subb
add
add
cld
punpcklwd
nop
es
add
das
jp
pop
push
jge
stc
nop
es
or
add
xchg
stc
nop
es
cld
je
add
stc
nop
es
aas
xchg
jp
or
add
stc
nop
es
test
mov
add
cld
add
push
mov
xchg
ret
add
add
add
nop
cld
nop
jmp
add
add
mov
nop
cld
nop
jmp
sbb
add
bound
mov
add
add
add
nop
es
add
add
movswl
stc
nop
es
aaa
add
inc
pop
int3
push
stc
nop
es
inc
add
add
loop
add
stc
nop
es
adc
add
add
std
sbb
rolb
nop
es
add
aad
mov
stc
nop
es
int
xor
les
call
nop
es
add
mov
mov
push
mov
xchg
ret
fbld
mov
stc
nop
es
add
mov
stc
nop
es
push
mov
int
add
push
mov
xchg
ret
push
cli
cmpl
nop
cld
nop
jmp
add
add
xor
stc
nop
es
std
add
push
mov
xchg
ret
shll
addb
add
xor
xor
ljmp
inc
add
add
test
frstor
nop
es
mov
add
add
sahf
mov
stc
nop
es
add
add
add
add
icebp
out
add
stc
nop
es
add
cld
add
mov
jl
inc
add
sbb
test
add
loop
cld
nop
jmp
roll
sbb
loop
inc
mov
call
and
les
lret
push
stc
nop
es
add
sahf
add
loop
scas
fwait
mov
push
mov
xchg
ret
aaa
add
add
pop
lahf
popa
stc
nop
es
add
test
arpl
cld
nop
jmp
inc
add
jo
sbb
addb
add
rclb
sbb
add
cs
mov
add
mov
stc
nop
es
add
add
push
test
loope
add
movb
clc
push
stc
nop
es
mov
cmpsl
jp
lahf
mov
stc
nop
es
add
add
add
inc
sub
and
cmp
ret
add
add
push
stc
nop
es
scas
add
add
add
add
push
mov
xchg
ret
push
add
test
pop
add
nop
cld
nop
jmp
add
add
repz
mov
stc
nop
es
add
add
add
mov
stc
nop
es
add
in
pop
stc
nop
es
add
je
add
add
je
stc
nop
es
add
loop
sub
stc
nop
es
add
add
stc
nop
es
sbb
addb
xchg
stos
pushl
push
mov
xchg
ret
in
add
bound
mov
push
push
mov
xchg
ret
jo
add
add
cld
pop
jmp
nop
cld
nop
jmp
add
add
loop
lds
jmp
stc
nop
es
adc
adc
sub
stc
nop
es
stos
je
add
add
lea
mov
xchg
ret
push
in
add
in
xlat
dec
aas
mov
stc
nop
es
inc
in
sbb
jb
add
add
stc
nop
es
cld
add
add
add
mov
stc
nop
es
cs
add
aas
pop
stc
nop
es
aaa
add
add
inc
add
jmp
cli
stos
in
mov
add
dec
jl
popl
stc
nop
es
add
inc
add
mov
add
add
add
add
lahf
and
stc
nop
es
mov
xlat
mov
sub
push
add
les
lcall
decl
push
mov
xchg
ret
add
add
add
lea
nop
cld
nop
jmp
aaa
add
push
add
mov
and
nop
es
cld
add
adc
push
mov
nop
cld
nop
jmp
inc
push
push
add
push
mov
xchg
ret
scas
mov
sahf
popl
nop
es
xchg
inc
add
push
add
icebp
stc
nop
es
mov
or
xchg
add
js
inc
pop
add
stc
nop
es
sahf
add
add
mov
push
add
nop
es
add
aam
sub
es
add
inc
push
dec
scas
or
fiadds
xchg
ret
add
push
adc
loop
add
lea
icebp
stc
nop
es
add
add
aam
shr
nop
cld
nop
jmp
add
cli
dec
push
add
mov
cmp
icebp
cld
inc
add
std
add
std
and
mov
jb
sub
test
add
lret
stc
nop
es
add
add
add
push
mov
xchg
ret
add
mov
test
add
stc
nop
es
add
jp
push
stc
nop
es
add
xchg
cmpsl
add
add
clc
add
stc
nop
es
cli
add
cld
add
xchg
add
es
add
or
or
stc
nop
es
add
add
rclb
cmp
inc
add
add
cli
add
popa
loop
add
scas
mov
aaa
loop
ds
nop
cld
nop
jmp
scas
add
mov
rol
add
mov
nop
es
add
xorb
stc
nop
es
aam
add
sbb
cmp
stc
nop
es
add
mov
add
push
push
mov
xchg
ret
add
or
and
jne
stc
nop
es
pop
add
add
dec
cmp
mov
xchg
ret
cmpsl
push
inc
add
add
lods
xor
stc
nop
es
stos
add
inc
mov
add
nop
cld
nop
jmp
add
add
nop
es
add
filds
aas
mov
push
add
stc
nop
es
roll
xchg
rol
add
add
stc
nop
es
cmpsl
loop
jb
mov
nop
es
int
dec
add
xlat
xchg
add
add
pushl
stc
nop
es
adc
add
add
push
mov
stc
nop
es
and
dec
add
je,pn
je
stc
nop
es
roll
cld
mov
stc
nop
es
dec
push
add
mov
add
aam
add
add
sbb
std
pop
lods
push
mov
xchg
ret
add
add
pop
lcall
movsl
incl
adc
add
add
xchg
addr16
add
inc
add
push
pop
cmp
nop
cld
nop
jmp
add
add
movzwl
stc
nop
es
xchg
add
add
jns
stc
nop
es
aaa
add
add
mov
nop
cld
nop
jmp
add
jp
std
scas
inc
add
sub
nop
es
add
xchg
mov
popa
add
mov
xchg
ret
push
iret
mov
stc
nop
es
add
xchg
add
add
mov
nop
es
scas
add
sbb
jb
add
or
and
sub
nop
es
das
add
cli
add
std
mov
nop
cld
nop
jmp
fnstsw
cwtl
pusha
stc
nop
es
add
push
ror
nop
es
dec
cli
add
add
adc
add
je
stc
nop
es
push
rolb
pop
push
mov
xchg
ret
je
cli
add
stos
nop
cld
nop
jmp
add
add
xchg
sbb
jmp
in
les
add
insb
insb
add
stc
nop
es
scas
add
jmp
popa
stc
nop
es
add
add
mov
add
and
mov
xchg
ret
add
add
mov
testb
cmp
ret
dec
cld
das
xlat
add
repz
nop
es
add
add
cli
add
push
pop
mov
stc
nop
es
add
jmp
mov
dec
cmp
nop
es
adc
call
stc
nop
es
cli
jmp
sbbb
add
nop
es
inc
or
fwait
push
mov
xchg
add
add
inc
daa
add
stc
nop
es
add
je
and
push
nop
cld
nop
jmp
scas
jo
add
cld
sub
rcll
add
stc
nop
es
loop,pn
lcall
es
add
push
or
movsb
nop
cld
nop
jmp
stos
add
mov
test
les
nop
es
add
cli
mov
mov
stc
nop
es
stos
add
lds
add
es
sbb
sub
sahf
aam
push
stc
nop
es
add
add
je
stc
nop
es
test
xor
repnz
jb
rcrl
rol
fisttps
es
scas
sbb
leave
movzwl
stc
nop
es
add
mov
std
fbld
popa
add
mov
xchg
ret
add
lcall
jae
jb
nop
es
add
sbb
addb
and
push
mov
xchg
ret
aaa
add
sbb
stc
nop
es
sbb
das
add
add
push
mov
xchg
ret
aaa
mov
add
push
push
mov
xchg
ret
rcll
fnsave
and
mov
inc
adc
nop
es
or
add
cld
inc
add
dec
add
sbbb
stc
nop
es
add
es
add
cmpsl
scas
cli
mov
rolb
add
nop
es
add
add
and
push
mov
xchg
ret
add
aas
add
push
aaa
outsb
subl
push
mov
xchg
ret
add
std
mov
cmp
cld
nop
jmp
push
sahf
int
push
stc
nop
es
loop
add
mov
mov
push
fdivr
inc
add
add
das
add
shrl
push
mov
xchg
ret
add
adc
push
loop
jno
add
dec
mov
stc
nop
es
mov
add
jb
ja
push
stc
nop
es
loop
add
add
or
or
nop
es
frstor
push
pop
push
mov
xchg
ret
add
mov
bound
mov
mov
xchg
ret
je
dec
in
and
mov
repz
add
add
adc
add
stc
rep
stc
nop
es
in
add
adc
inc
add
xor
jb
add
xchg
inc
sub
or
push
mov
xchg
ret
add
mov
xlat
int3
push
push
mov
xchg
ret
mov
inc
cs
push
mov
xchg
ret
add
add
add
sbb
iret
push
add
stc
nop
es
add
add
es
dec
int
loop
cli
pop
aam
cltd
push
stc
nop
es
push
push
push
and
dec
das
cli
sbb
es
add
push
sbb
call
push
mov
xchg
ret
add
jmp
add
mov
dec
nop
cld
nop
jmp
or
adc
add
enter
call
cld
incl
add
std
add
jmp
stc
nop
es
push
add
sub
cmpb
nop
cld
nop
jmp
mov
push
stc
nop
es
add
aaa
scas
push
std
add
cmpsb
add
add
es
sbb
add
test
or
idiv
filds
add
sbb
sub
add
nop
cld
nop
jmp
adc
add
add
pop
push
mov
xchg
ret
sbb
mov
pop
xor
dec
push
stc
nop
es
sbb
add
xor
int
popa
add
mov
xchg
ret
loop
sahf
add
loop
call
nop
es
aam
push
cld
add
popa
sar
cmp
es
jo
add
add
mov
add
nop
es
sbb
add
mov
add
jmp
stc
nop
es
add
push
aam
add
stc
nop
es
add
add
mov
xor
stc
nop
es
add
add
nop
jmp
add
add
repz
xor
stc
nop
es
or
filds
adc
stc
nop
es
add
push
mov
imul
add
cmp
sub
movzwl
push
mov
xchg
ret
les
add
jb
cli
lcall
push
add
xor
stc
nop
es
adc
adc
scas
scas
add
xor
push
mov
xchg
ret
xchg
lcall
pop
stc
nop
es
add
add
call
stc
nop
es
mov
and
stc
nop
es
loop
jo
sbb
sar
es
stos
sbb
add
add
cmp
movsb
stc
nop
es
aam
add
dec
stos
cs
sti
nop
cld
nop
jmp
add
cld
add
add
scas
cmp
in
add
in
daa
add
dec
pushf
lods
add
push
stc
nop
es
add
mov
add
sub
push
mov
xchg
ret
add
mov
jne
call
stc
nop
es
push
add
push
mov
xchg
ret
inc
loop
mov
push
stc
nop
es
add
xlat
add
call
icebp
incl
int
add
insl
jl
stc
nop
es
add
add
movsb
add
les
inc
add
add
push
push
mov
xchg
ret
cld
inc
cld
cld
in
add
mov
nop
es
add
mov
sbb
in
ret
mov
stc
nop
es
add
add
sbb
mov
xchg
ret
loop
sbb
std
push
decl
nop
es
aaa
test
add
cmc
push
add
jns
inc
xor
stc
nop
es
loop
inc
sbb
mov
add
nop
es
add
inc
add
repnz
mov
stc
nop
es
add
add
mov
stc
nop
es
cli
add
mov
push
mov
xchg
ret
or
mov
add
lea
push
mov
xchg
ret
shll
sbb
push
out
inc
add
mov
inc
add
nop
cld
nop
jmp
adc
sub
mov
add
dec
adc
mov
xchg
ret
add
lcall
gs
nop
es
adc
add
in
mov
nop
cld
nop
jmp
in
aaa
cli
shll
add
loop
push
mov
xchg
ret
add
mov
nop
cld
nop
jmp
add
push
popa
jg
mov
adc
cld
nop
jmp
add
jmp
loop
push
nop
cld
nop
jmp
xchg
cld
sub
roll
xlat
xchg
ficoml
mov
xchg
ret
add
add
add
add
pusha
stc
nop
es
add
mov
pop
pusha
stc
nop
es
add
mov
fstpl
or
rorl
add
nop
es
pop
add
add
stc
incl
cli
add
mov
push
mov
xchg
ret
add
add
cs
add
add
stc
nop
es
loop
lcall
push
mov
xchg
ret
dec
scas
aaa
aaa
adc
push
mov
adc
nop
es
add
std
sbb
mov
nop
es
add
xchg
enter
jmp
aas
mov
add
jmp
dec
and
stc
nop
es
add
add
sbb
call
stc
nop
es
orb
add
add
nop
jmp
add
dec
mov
push
test
mov
xchg
ret
add
in
aad
add
nop
cld
nop
jmp
aaa
add
fstp
in
add
mov
jb
je
add
ret
testb
xchg
add
nop
jmp
xchg
push
jo
adc
mov
xchg
mov
cmp
adcb
add
add
jo
add
into
cmpw
nop
cld
nop
jmp
mov
jmp
nop
es
aaa
add
add
add
pop
push
push
mov
xchg
ret
add
inc
mov
pop
mov
push
mov
xchg
ret
stos
in
add
jmp
add
nop
cld
nop
jmp
add
add
add
add
add
nop
es
add
mov
scas
cmpsl
je
pop
add
push
mov
xchg
ret
mov
mov
cld
xchg
stc
nop
es
add
add
add
pop
xor
nop
cld
nop
jmp
std
add
add
cli
mov
jle
mov
adc
lock
inc
xor
data16
ret
stc
nop
es
mov
add
add
cmp
nop
es
xchg
inc
add
aas
mov
loopne
mov
xchg
ret
add
push
inc
add
push
stc
nop
es
mov
pop
pusha
push
mov
xchg
ret
dec
add
add
add
mov
push
mov
xchg
ret
add
add
add
mov
stc
nop
es
sbb
xorb
es
dec
add
sub
add
push
stc
nop
es
sbb
dec
or
aad
xlat
insl
dec
stc
nop
es
jp
push
add
add
cld
nop
jmp
add
loop
cmpsl
roll
add
stc
nop
es
mov
add
stos
iret
mov
stc
nop
es
sbb
cwtl
push
push
mov
xchg
ret
scas
les
push
dec
jo
add
nop
cld
nop
jmp
mov
add
add
cmp
nop
cld
nop
jmp
add
add
loop
push
stc
nop
es
add
sbb
sbb
nop
es
add
scas
add
push
add
nop
cld
nop
jmp
add
add
add
push
mov
xchg
ret
add
pop
nop
cld
nop
jmp
add
add
jo
cmpsl
loop
test
mov
stc
nop
es
aas
add
mov
lret
nop
cld
nop
jmp
add
add
add
push
js
mov
add
add
add
add
add
add
popl
pop
mov
push
mov
xchg
ret
int
add
loop
push
push
mov
xchg
ret
add
roll
in
cmp
test
nop
es
in
cwtl
je
stc
nop
es
xlat
add
xor
loope
xor
stc
nop
es
adc
and
adc
js
nop
es
add
add
pop
mov
push
mov
xchg
ret
sbb
sub
add
es
add
lcall
mov
push
mov
xchg
ret
scas
add
add
mov
jmp
and
mov
aam
clc
pop
push
mov
xchg
ret
cmpsl
std
add
add
add
sbb
test
nop
es
scas
mov
sbb
es
aaa
sbb
stos
lods
add
stc
nop
es
add
adc
cmpsl
mov
cltd
fadds
xchg
ret
jo
scas
push
inc
dec
add
not
stc
nop
es
add
add
dec
sub
nop
es
add
scas
add
nop
jmp
add
int
sbb
data16
sar
es
mov
add
add
add
sbb
xor
add
nop
cld
nop
jmp
lcall
nop
cld
nop
jmp
add
add
pusha
stc
nop
es
add
xlat
dec
dec
sahf
add
out
cmpl
nop
cld
nop
jmp
sahf
add
add
add
mov
add
nop
jmp
add
aaa
add
add
add
fisttpll
filds
xchg
ret
sbb
push
add
add
sub
push
jecxz
add
push
add
mov
add
add
mov
push
mov
xchg
ret
jo
add
and
scas
iret
mov
push
mov
xchg
ret
push
add
aas
push
in
cs
nop
cld
nop
jmp
mov
add
in
add
enter
jb
add
das
filds
push
add
mov
nop
cld
nop
jmp
mov
mov
push
sub
loope
inc
add
add
add
frstor
popa
add
nop
es
add
push
or
gs
stc
nop
es
stos
add
je
xchg
insl
push
stc
nop
es
add
add
cltd
lods
push
mov
xchg
ret
aaa
add
jmp
add
cmpsl
in
push
add
add
push
mov
xchg
ret
add
inc
in
shll
add
add
xorl
stc
nop
es
push
stc
nop
es
adc
rcll
sar
es
mov
xchg
adc
test
mov
stc
nop
es
xchg
mov
mov
push
mov
xchg
ret
sahf
add
xchg
dec
test
push
mov
xchg
ret
add
add
stc
nop
es
add
add
add
adc
inc
call
andb
add
push
adc
lcall
jb
mov
add
nop
es
fisttps
cld
mov
jp
stc
nop
es
cld
add
add
add
ret
add
in
add
add
add
add
nop
es
sub
aam
add
jmp
js
jbe
nop
cld
nop
jmp
mov
std
aam
aas
add
or
push
mov
xchg
ret
scas
add
add
ja
stc
nop
es
add
lcall
add
inc
add
add
push
push
mov
xchg
ret
add
das
xlat
add
add
jge
stc
nop
es
xchg
add
add
clc
stc
nop
es
loop
jo
jmp
loop
add
stc
nop
es
add
fucomip
push
aaa
add
test
add
nop
es
inc
inc
adc
xchg
add
nop
es
add
fistps
add
sub
mov
lret
nop
jmp
add
xlat
mov
outsb
call
stc
nop
es
add
mov
loop
adc
popf
and
stc
nop
es
add
pop
add
push
adc
and
mov
repnz
add
add
add
push
add
push
push
mov
xchg
ret
add
dec
add
xchg
inc
lock
nop
es
add
cmc
mov
es
add
add
inc
add
sbb
nop
es
aas
add
xlat
add
pop
mov
stc
nop
es
add
jp
push
stc
nop
es
add
xchg
loop
add
pop
push
mov
xchg
ret
mov
and
push
mov
nop
es
add
cmp
test
nop
es
loop
add
leave
imul
nop
cld
nop
jmp
xlat
fldl
sahf
aas
cld
mov
mov
xchg
ret
add
or
mov
xchg
ret
scas
add
cld
push
add
inc
add
add
add
test
fadds
hlt
clc
inc
add
sahf
add
push
stc
nop
es
sbb
test
add
jo
add
ret
stc
nop
es
dec
les
add
cld
mov
stc
nop
es
push
int
scas
add
adc
nop
cld
nop
jmp
push
add
push
cmpsl
dec
cwtl
add
push
mov
xchg
ret
dec
or
mov
jo
stc
nop
es
add
test
out
movzwl
stc
nop
es
scas
je
inc
add
call
stc
nop
es
add
mov
push
stc
nop
es
inc
roll
add
add
stc
nop
es
in
add
add
push
mov
xchg
ret
add
das
lcall
es
loop
add
add
mov
jmp
nop
cld
nop
jmp
add
mov
nop
cld
nop
jmp
stos
add
add
mov
ret
stc
nop
es
int
stos
add
add
rcrl
push
mov
xchg
ret
add
add
add
inc
arpl
add
nop
cld
nop
jmp
cmpsl
add
add
cld
add
add
nop
es
add
faddl
mov
xchg
ret
mov
adc
cld
mov
stc
nop
es
add
mov
das
push
mov
sbb
in
lock
add
add
aam
jne
stc
nop
es
inc
push
add
mov
std
lea
push
mov
xchg
ret
inc
roll
adc
imul
stc
nop
es
loop
add
add
adc
push
add
xchg
int3
mov
stc
nop
es
pop
add
das
xor
jge
fistl
testb
cmp
ret
add
push
out
lods
push
mov
xchg
ret
mov
das
cld
adc
mov
nop
es
xchg
dec
add
jmp
add
pop
ret
push
jl
clc
stc
nop
es
add
xchg
adc
add
nop
es
push
and
leave
rep
push
mov
xchg
ret
push
add
fldl
cs
add
mov
stc
nop
es
add
mov
stc
nop
es
add
cld
daa
sub
add
sti
ljmp
pop
inc
int
push
mov
xchg
ret
add
add
dec
clc
dec
inc
stc
nop
es
push
dec
add
dec
mov
stc
nop
es
jmp
pop
add
stc
nop
es
lcall
add
push
add
add
add
nop
cld
nop
jmp
add
xchg
cld
sbb
stc
nop
es
in
scas
and
add
add
stc
nop
es
add
push
movzwl
stc
nop
es
ffree
add
faddl
es
add
add
mov
es
add
add
push
mov
xchg
ret
inc
sahf
add
add
andb
inc
add
add
add
stc
nop
es
add
add
sbb
stc
nop
es
mov
xchg
add
push
nop
cld
nop
jmp
add
mov
mov
stc
nop
es
add
add
sahf
add
testb
add
push
push
mov
xchg
ret
add
add
stc
nop
es
andb
in
mov
stc
nop
es
add
cs
mov
add
mov
nop
cld
nop
jmp
cld
add
push
data16
mov
nop
cld
nop
jmp
add
add
add
ret
nop
cld
nop
jmp
add
adc
add
inc
add
push
mov
xchg
ret
fucomip
mov
mov
and
add
inc
stc
nop
es
sbb
out
sub
stc
nop
es
int
inc
mov
mov
mov
add
cmp
cmpsb
or
add
add
subl
stc
nop
es
lcall
push
mov
xchg
ret
aam
aam
add
or
stc
nop
es
jp
cld
add
stc
nop
es
add
add
xor
daa
lcall
sbb
jmp
add
jae
mov
stc
nop
es
scas
mov
add
xor
stc
nop
es
sar
adc
xchg
sbb
add
mov
test
es
add
push
nop
cld
nop
jmp
jo
les
add
mov
insb
call
stc
nop
es
shll
js
outsl
arpl
add
nop
es
add
aas
push
dec
inc
push
mov
xchg
ret
cmpsl
cli
add
mov
cmp
stc
nop
es
add
add
add
add
test
call
hlt
jmp
aam
push
pop
mov
stc
nop
es
add
mov
add
add
nop
es
add
fldl
xlat
add
orl
stc
nop
es
add
add
mov
stc
nop
es
add
add
adc
sahf
mov
nop
cld
nop
jmp
push
cs
push
stc
nop
es
add
add
adc
add
add
cmp
stc
stc
nop
es
loop
add
add
xor
pop
jae
cld
nop
jmp
push
add
add
add
sub
add
add
push
sub
or
add
add
repz
add
sub
inc
add
add
and
dec
add
mov
xchg
ret
jo
push
cmpsl
aas
jge
push
mov
xchg
ret
loop
add
add
push
mov
xchg
ret
add
mov
add
add
push
add
sbb
dec
testl
nop
cld
nop
jmp
cld
add
add
stc
nop
es
cmpsl
das
add
add
add
stc
nop
es
cmpsl
add
stos
add
mov
stc
nop
es
sahf
aaa
add
cmpsl
add
jns
rclb
cwtl
std
inc
add
pop
add
add
sahf
mov
stc
nop
es
lcall
test
jb
add
stos
sahf
scas
mov
stc
nop
es
stos
add
es
add
filds
add
es
adc
xchg
mov
dec
sub
stc
nop
es
add
add
cmpsl
cld
add
js
stc
nop
es
add
das
add
dec
aas
cs
stc
nop
es
xchg
add
add
dec
call
stc
nop
es
add
add
pop
mov
push
mov
xchg
ret
aam
fldl
xlat
xchg
or
es
add
in
cmpw
stc
nop
es
add
stc
nop
es
add
add
add
nop
cld
nop
jmp
add
cld
dec
mov
in
push
add
push
stc
nop
es
add
aaa
and
add
xchg
mov
add
add
add
add
sahf
xchg
stc
nop
es
add
add
add
call
stc
nop
es
add
add
add
shr
inc
add
aas
add
add
add
adc
nop
es
add
add
add
movb
mov
stc
nop
es
add
sub
dec
or
inc
push
adc
stc
nop
es
add
jp
fpatan
stos
stc
nop
es
add
add
les
cld
nop
jmp
add
ja
add
push
mov
fmull
and
adcb
je
test
loop
nop
cld
nop
jmp
cli
push
jmp
addb
stc
nop
es
dec
jo
addb
mov
or
incl
inc
fldl
add
dec
dec
xor
stc
nop
es
jmp
add
add
jmp
es
add
add
dec
push
mov
xchg
ret
add
add
cmp
nop
cld
nop
jmp
add
loop
add
dec
nop
cld
nop
jmp
filds
dec
add
add
add
lret
pop
in
stc
nop
es
add
in
push
stc
nop
es
add
inc
add
je
lods
mov
nop
cld
nop
jmp
add
cli
mov
das
mov
stc
nop
es
aas
in
add
push
sub
mov
xchg
ret
scas
dec
aam
and
adc
popa
add
nop
es
xlat
add
aas
cli
cmpsl
dec
jmp
stc
nop
es
dec
inc
add
adc
add
push
dec
push
mov
xchg
ret
filds
add
add
nop
es
sub
add
lods
pop
stc
nop
es
push
test
add
stos
stc
nop
es
add
xchg
dec
add
sbb
jne
stc
nop
es
adc
dec
push
inc
add
dec
add
addb
aad
add
cli
add
add
dec
mov
stc
nop
es
add
aas
inc
das
cmp
mov
xchg
ret
jp
mov
lahf
pushl
stc
nop
es
fucom
inc
add
add
jb
stc
nop
es
aas
mov
lock
mov
xchg
ret
add
add
push
stc
nop
es
pop
push
add
add
int
mov
es
add
in
stos
pop
sbb
je
stc
nop
es
add
add
nop
es
xlat
pop
add
sbb
int
pop
cmp
nop
es
std
add
add
xchg
nop
jmp
mov
loop
or
out
inc
add
aam
add
add
out
cmp
nop
cld
nop
jmp
roll
add
mov
roll
add
inc
cmpsb
mov
jo
addb
push
xlat
push
pusha
add
shll
add
pop
addr16
add
jge
addr16
scas
outsb
fistl
or
jp
int3
pop
pop
add
add
inc
add
add
sbb
mov
add
add
and
mov
inc
faddl
mov
mov
or
push
popa
dec
mov
pop
pop
ljmp
arpl
les
inc
and
sbb
out
inc
fcmovnb
add
add
addr16
and
mov
nop
add
add
sbb
pop
ret
push
iret
mov
cld
jmp
add
dec
or
imul
adc
jnp
pop
jge
sbb
mov
stc
dec
and
test
out
sbb
ja
add
sub
mov
movsl
call
sbb
lret
movsb
add
xor
mov
stc
add
arpl
xchg
setb
adc
mov
jle
add
add
and
mov
fcmovne
pushl
add
pusha
add
mov
inc
jbe
nop
add
add
add
cs
aas
movb
add
jbe
out
insb
push
add
add
add
aaa
sub
add
stos
scas
fidivrs
mov
add
add
test
dec
cmpsl
add
sbb
add
add
add
add
addb
add
shl
mov
adc
sbb
or
push
aaa
fistpl
in
leave
jbe
jno
add
bound
mov
aaa
out
outsl
psubq
ret
cltd
xchg
add
cmp
add
mov
bound
mov
stos
pop
add
out
test
add
add
xchg
pop
cmp
lds
testb
rolb
dec
int3
fistpl
cld
lret
addb
cmpsl
dec
push
add
add
dec
cmpsb
add
add
cmp
pop
mov
and
add
sbb
add
sub
fmuls
pop
repz
or
inc
addb
adc
mov
mov
sti
fists
push
adc
inc
hlt
add
daa
fcmovnbe
dec
cmp
xchg
inc
add
add
xor
mov
add
jl
add
add
adc
dec
jb
mov
cmpsl
jmp
je
add
test
add
add
lock
jge
cli
cmpsl
insl
push
add
add
getsec
cs
mov
add
add
stos
jmp
add
fbstp
mov
lret
sbb
add
add
sbb
add
rolb
leave
lock
jbe
loop
out
add
add
add
mov
clc
shll
jmp
push
add
add
mov
push
imul
rcll
add
add
mov
add
mov
fwait
adc
loope
add
push
xchg
add
push
test
cmpsl
mov
paddusw
add
xor
mov
pop
mov
push
mov
pop
dec
pop
or
sbb
mov
fimuls
xor
pop
lods
lea
cmp
inc
or
mov
pop
rcl
push
aas
movsb
add
add
add
dec
mov
mov
sub
add
pop
cmpsl
inc
pushf
jns
add
movsl
push
xchg
cmp
pushf
inc
loopne
add
sahf
mov
int3
mov
pop
or
add
xchg
sub
add
push
das
mov
sub
xor
ljmp
add
add
int
add
add
jb
dec
or
ret
pop
lahf
adc
mov
daa
insb
xor
push
add
add
add
dec
mov
notl
add
mov
std
add
sub
jnp
dec
repz
add
aam
popf
mov
lods
sub
test
add
cmp
add
jnp
jno
jge
add
jecxz
add
popa
mov
add
add
mov
cmp
cmp
jmp
fisubrl
xor
add
jbe
dec
aam
rolb
in
mov
mov
inc
test
jbe
fistpl
pusha
add
jbe
mov
adc
or
fistpl
out
and
lcall
jmp
add
add
xchg
add
cmp
inc
das
fstpl
popa
into
stc
int3
and
mov
add
add
add
jb
or
add
jo
push
add
ds
xchg
xor
dec
sub
dec
xchg
push
add
add
fnstcw
leave
jp
outsl
imul
mov
pop
lock
data16
ja
cmp
mov
cmp
xchg
cmpsb
add
jge
add
repnz
loopne
push
add
in
out
mov
mov
inc
mov
lea
push
xlat
inc
cmp
adc
lret
xchg
mov
add
lock
jmp
cmp
jne
aad
jg
push
fs
and
mov
movb
pushf
jb
pop
fimuls
pop
push
rolb
fwait
add
scas
shld
rolb
add
add
mov
add
add
aam
add
mov
cmp
pushf
xor
xchg
add
imul
adc
mov
data16
push
insl
jmp
add
out
pop
fidivs
add
xchg
cmp
add
out
and
mov
into
rolb
pushf
ret
xchg
add
fildl
jne
pop
push
add
add
stos
fcompl
rcl
mov
popa
and
rolb
inc
add
or
add
sbb
push
add
in
imul
add
add
jo
mov
aaa
out
shrl
stos
popa
push
add
shll
push
add
push
add
dec
insl
outsl
mov
add
addb
mov
arpl
add
add
dec
adc
daa
inc
jle
push
add
xchg
add
lds
sub
scas
adc
jle
loope
add
stc
mov
add
sub
jge
add
adc
je
rolb
and
fbstp
cmpsl
lea
add
adc
dec
das
fildll
mov
outsl
adc
sub
ret
pop
push
add
inc
add
into
call
add
add
add
add
dec
sub
mov
out
addb
xor
sub
insl
mov
mov
add
icebp
imul
imul
mov
jg
add
pop
push
add
arpl
in
lods
and
das
inc
add
insb
xchg
movsb
add
call
sub
lret
dec
push
add
dec
les
loopne
inc
add
jb
mov
sbb
jmp
add
mov
add
lds
add
add
mov
arpl
push
add
jnp
jp
movb
push
add
or
fists
mov
inc
add
and
mov
xor
add
enter
add
add
jecxz
inc
add
add
arpl
sub
jne
movsl
fwait
inc
sti
popa
clc
adcl
or
dec
mov
lret
shll
dec
cwtl
push
in
and
adc
push
cmp
xchg
add
stos
add
lahf
lcall
add
out
cmc
add
push
les
xchg
add
or
add
outsl
sbb
xor
rolb
inc
add
sbb
mov
sub
pop
jae
sub
rolb
push
mov
icebp
std
jae
int3
les
or
xchg
lea
add
add
add
pop
mov
aad
pop
out
push
call
fcmovnbe
inc
add
dec
mov
or
adc
mov
add
aas
loopne
enter
mov
inc
add
jg
jnp
lods
xchg
pop
push
cmp
add
xchg
add
sub
pop
pshufw
add
sahf
js
roll
add
inc
movsl
std
addr16
outsb
xor
lret
out
cltd
adc
aam
bound
mov
and
and
add
pop
rolb
push
add
aad
xor
xchg
add
in
cmpsl
dec
fsts
jno
jmp
inc
add
mov
add
jno
add
loopne
repz
add
cltd
in
lea
add
gs
lret
stos
movb
clc
add
add
add
and
test
insl
push
mov
mov
mov
cld
rcrl
inc
add
cmp
jmp
aad
js
cld
inc
enter
add
lret
add
mov
ds
loope
inc
in
add
push
inc
mov
add
mov
sub
jecxz
insb
in
adc
xchg
add
xor
test
xchg
and
jle
pusha
add
mov
add
mov
movsb
add
jns
negl
add
mov
in
rolb
jmp
mov
add
xchg
mov
shrl
movsl
daa
cwtl
push
cmp
stc
in
inc
stc
aad
pop
les
mov
push
add
add
add
add
testl
sbb
push
stos
je
and
mov
out
cwtl
sub
and
jne
cmp
or
in
insb
addl
shll
mov
cld
sub
push
push
ficompl
push
add
mov
add
outsb
dec
addb
add
rcll
xor
dec
stos
pop
movl
add
lahf
xlat
cwtl
out
aas
cmc
xor
xchg
jo
outsb
inc
add
cmp
adc
into
mov
fidivrl
xor
out
jo
outsl
mov
pushf
fiaddl
leave
in
lret
mov
push
jo
push
sub
xchg
add
mov
jb
repz
or
add
mov
add
add
bts
sub
cmc
stc
cltd
inc
aas
ja
int3
je
pop
mov
notrack
sub
je
mov
mov
mov
cmp
inc
mov
test
sub
mov
add
dec
addb
inc
add
mov
out
addr16
dec
add
mov
adc
mov
sub
add
dec
insb
mov
mov
adc
add
leave
mov
data16
mov
adc
add
pusha
add
add
sbbl
mov
les
js
std
aas
out
imul
add
jb
jmp
mov
imul
mov
xchg
add
add
lcall
sti
loopne
sub
mov
lds
ret
lock
inc
add
push
add
pop
outsb
cmc
add
pop
or
add
push
add
add
mov
icebp
into
fiaddl
dec
push
mov
testb
jo
or
xchg
add
add
add
lcall
adc
sub
sbb
cld
js
push
sbb
rolb
and
mov
mov
scas
test
and
sbb
sti
adc
adc
dec
inc
movsl
inc
jbe
mov
jne
hlt
add
ds
mov
push
testb
add
sub
shrl
add
mov
pop
jmp
mov
stos
cmc
xchg
add
je
in
xor
out
mov
mov
dec
pop
in
or
sub
lods
popa
or
jmp
add
into
ret
int3
dec
xchg
add
dec
testb
add
js
add
add
push
add
das
sub
add
ljmp
cmpsl
loop
add
mov
add
pop
cvtps2pd
add
jbe
testb
mov
imul
cs
cmpsb
add
pop
addl
mov
movb
dec
inc
popa
mov
inc
fistpll
xor
xchg
add
movsl
addb
sbb
mov
jp
movb
fdivrl
mov
cmp
add
add
add
scas
call
sbb
jo
addb
ja
fdivrs
jne
add
add
dec
inc
add
xor
int
push
add
add
add
add
mov
push
pop
mov
xchg
inc
mov
outsl
mov
add
mov
add
xlat
shr
arpl
dec
cltd
clc
jl
xchg
xor
and
mov
movb
add
add
push
sbb
mov
add
cltd
out
aad
inc
lods
xor
movsl
and
mov
into
cmpsl
testb
repz
daa
pop
or
mov
fdivrl
fdiv
pushl
xlat
jmp
and
mov
and
mov
stos
stc
xor
test
add
add
leave
addr16
and
mov
add
dec
jge
mov
mov
mov
add
add
add
sbb
dec
in
push
add
add
cmp
stc
sub
nop
add
sbb
adc
cmp
add
dec
in
in
test
lods
inc
mov
fidivl
mov
adc
xchg
add
add
add
data16
movb
and
inc
push
movsl
mov
call
add
imul
sbb
std
out
mov
pop
add
mov
aad
xor
fldcw
jne
add
xchg
call
adc
xlat
push
add
mov
lds
lret
cmc
add
dec
or
add
pop
inc
gs
pusha
add
cmp
dec
imul
mov
jle
add
mov
lahf
into
pusha
add
pop
daa
lret
fprem
and
mov
jo
inc
subl
mov
cmovo
mov
xchg
mov
sbb
add
std
add
add
jno
mov
repz
loopne
movsb
add
or
or
push
add
pop
ja
add
mov
mov
loope
scas
jb
fdivl
add
jle
add
ds
add
sbb
and
mov
mov
lea
dec
xchg
add
sbb
add
push
add
mov
add
ret
movb
jbe
loope
dec
and
mov
loope
inc
add
add
jns
scas
mov
adcl
rolb
cmp
add
in
in
jb
fldenv
mov
sub
jne
adcl
mov
or
mov
cmp
and
mov
add
add
add
mov
dec
cmp
push
cltd
lods
push
add
or
movsb
add
shll
mov
jmp
sbb
mov
xlat
insl
dec
or
pop
or
and
jg
push
arpl
add
mov
mov
movsb
add
jl
pop
adc
jg
out
out
rolb
mov
add
mov
testb
add
outsb
jg
add
add
fwait
popa
sub
push
fists
add
movb
jnp
outsl
loop
gs
dec
xor
out
outsl
pop
repz
sub
rcll
je
mov
push
add
mov
push
add
iret
data16
in
pop
push
lret
je
push
add
add
test
scas
xor
cmp
add
es
add
add
ficoms
jb
xchg
add
pop
fildl
pop
data16
loop
xchg
int3
sahf
enter
add
add
inc
add
ljmp
add
out
in
bound
mov
mov
push
lahf
inc
popa
dec
imul
add
mov
inc
add
add
sbb
daa
js
add
jecxz
rolb
movsb
add
xchg
push
add
add
add
rolb
xchg
add
xchg
add
call
into
push
lea
out
in
iret
and
aad
scas
cs
mov
stos
add
add
cwtl
lret
stos
mov
mov
add
mov
or
ficomps
inc
add
add
add
les
push
add
add
inc
add
sub
xorl
data16
jg
add
add
pavgb
xlat
shr
insl
adc
push
and
add
int
add
outsb
xorl
cwtl
inc
push
xchg
add
inc
add
and
or
jg
pushf
scas
test
add
leave
mov
jnp
jae
addr16
ljmp
add
and
loope
in
iret
rolb
nop
add
add
popf
inc
add
add
addb
add
pushf
mov
cli
cmp
clc
push
outsl
int
aam
sbb
mov
add
xchg
add
mov
cld
mov
adc
adc
insl
xor
xor
loope
add
imul
and
add
jae
add
sub
dec
add
mov
ret
mov
mov
push
add
fsave
cmp
cli
loopne
in
fisubrl
jb
push
add
mov
xchg
add
gs
add
lea
fbld
jg
inc
add
xchg
add
jmp
sub
add
xor
add
mov
insl
in
mov
out
and
mov
sub
scas
popa
decl
arpl
xor
not
add
add
mov
mov
add
clc
movsb
add
sbb
add
stos
push
add
popf
testb
cs
loope
xchg
add
mov
cmpsb
add
mov
aas
pop
and
add
es
stos
in
push
ja
add
rcrl
xchg
add
mov
and
mov
and
mov
lret
add
insl
mov
add
add
mov
outsl
xor
lods
sub
cmc
or
cmpsb
add
cmp
add
jp
test
sub
add
stos
add
inc
sub
add
inc
addr16
mov
and
add
add
add
mov
in
loope
add
push
add
push
add
and
add
add
cmpsl
aas
mov
or
mov
cmpl
pop
cmp
add
sarl
cmp
test
test
or
mov
lret
mov
stos
mov
fbstp
test
mov
mov
arpl
neg
arpl
inc
dec
inc
mov
adc
or
push
add
movsb
add
xor
out
jle
add
xchg
add
add
outsl
push
popa
loope
inc
add
add
add
insl
mov
adc
ret
or
or
addb
popf
scas
jae
add
dec
insb
jae
mov
dec
sbb
adc
cltd
pop
test
test
mov
mov
stos
mov
gs
dec
aam
add
js
add
and
mov
call
dec
add
xchg
out
mov
je
out
or
sub
mov
add
fsubp
add
and
mov
dec
in
add
xchg
add
iret
or
pop
push
add
jne
pop
xlat
scas
pop
xchg
add
cld
push
fisubrl
ss
aad
ret
testb
imul
add
adc
out
jbe
aaa
aam
int
xchg
dec
mov
cwtl
fsubr
inc
add
sahf
insb
lods
jb
jne
inc
aad
add
das
xlat
int
add
add
repnz
and
fmull
fisttpll
add
fisttpl
xchg
out
mov
jae
add
ss
add
add
movsl
in
xor
scas
push
data16
add
xchg
aad
cmp
add
cmc
pop
adc
in
sub
scas
nop
add
pop
mov
add
add
add
mov
add
add
adc
pop
xchg
add
mov
mov
cmp
add
cld
bound
mov
nop
add
dec
mov
adc
push
push
add
add
sbb
out
pop
inc
pcmpgtw
aam
fbstp
add
and
mov
add
mov
stos
loop
movsb
add
adc
cmp
jecxz
inc
add
mov
add
data16
clc
cld
stos
and
fimull
push
loope
adc
ljmp
testb
mov
add
mov
add
imul
fwait
or
adc
loopne
adc
arpl
sub
addr16
add
pushf
dec
lret
jnp
push
add
add
mov
add
je
int
adc
int3
pop
addr16
les
hlt
add
and
jae
xor
add
xor
add
insl
leave
rolb
add
pop
rolb
rolb
bound
mov
jecxz
out
pushf
mov
dec
add
mov
add
add
lcall
gs
pop
lds
hlt
add
mov
mov
add
mov
add
mov
add
movsb
add
popf
pop
dec
inc
add
rolb
fldenv
add
mov
scas
or
add
cli
stc
inc
add
add
add
xlat
jl
leave
jle
add
fwait
inc
add
bound
mov
adc
cmpsb
add
out
xchg
fcoml
stc
rorl
into
pusha
add
sbb
imul
loopne
mov
rolb
and
or
mov
idiv
sbb
inc
add
mov
jns
xchg
insl
cmpsb
add
daa
sbb
sbb
push
and
sub
add
loopne
lock
add
sbb
xchg
je
test
outsl
xchg
mov
add
pusha
add
cwtl
ret
pop
mov
mov
daa
jmp
cmp
cmp
pop
xchg
sbb
jp
sub
push
add
add
add
xchg
add
ret
push
loop
lods
or
cwtl
add
mov
in
test
leave
inc
add
cltd
mov
add
movb
adc
pop
std
add
mov
mov
dec
fdiv
add
sub
xor
adc
and
mov
lods
cmp
and
xor
push
jne
fcomps
xchg
add
mov
xchg
add
push
jbe
rolb
inc
add
ret
leave
sub
scas
lea
sbb
repnz
mov
add
push
cmp
leave
rorl
add
cli
mull
add
cmp
imul
add
inc
add
cltd
cmc
and
mov
adc
loope
jl
add
movb
xchg
adc
mov
add
add
add
jb
insl
xor
lock
push
pop
aad
inc
add
sub
add
inc
add
adc
push
add
add
add
incl
add
push
sbb
dec
jge
add
xchg
adc
sahf
add
mov
push
fnstsw
push
imul
popf
sub
test
lret
movsl
leave
mov
fs
test
xor
addb
es
push
add
add
sti
and
mov
std
ja
add
daa
pop
repz
dec
push
mov
jno
mov
jp
push
add
outsl
rolb
dec
and
push
in
scas
cli
mov
rolb
mov
add
cltd
pop
cmp
and
mov
cmpsb
add
dec
das
fdivs
in
or
out
and
mov
add
add
mov
sub
add
aas
inc
outsb
popa
mov
add
call
ja
sbb
int
jp
dec
mov
push
addb
inc
add
jl
pop
mov
push
pop
pop
mov
lock
add
inc
add
popa
incb
ret
or
adc
add
add
mov
jnp
add
adc
add
mov
mov
push
aam
rolb
pushf
mov
pop
cmp
add
popa
test
inc
add
or
add
adc
outsl
ljmp
xor
add
pop
lahf
lcall
add
add
test
in
lods
clc
xor
dec
xchg
in
sub
jnp
push
sub
inc
add
add
clc
data16
xor
add
add
sbb
shll
add
mov
insb
dec
add
nop
add
sbb
dec
or
jmp
inc
sbb
pushf
xor
iret
adc
push
add
dec
jbe
push
test
popf
mov
mov
xor
fwait
stos
mov
arpl
add
mov
xchg
jno
add
add
daa
rolb
mov
test
and
mov
lods
sub
scas
add
imul
add
add
nop
add
mov
ret
mov
sbb
cld
incb
aad
add
add
dec
out
and
mov
movb
add
mov
add
daa
mov
sbb
loop
inc
add
xchg
add
adc
loopne
push
dec
outsb
pop
add
xchg
add
sbb
enter
out
add
add
aaa
jbe
hlt
add
adc
sbb
out
mov
rolb
into
xchg
and
mov
dec
xor
sub
dec
mov
push
push
add
and
aas
cmp
mov
pushl
mov
lds
dec
jno
fldenv
add
sahf
inc
popa
rolb
adc
dec
add
sbb
ja
mov
rolb
mov
gs
lret
lcall
add
mov
add
xor
in
lods
xchg
pop
push
cltd
in
add
mov
cmc
pop
das
cld
xlat
arpl
push
xchg
aas
mov
call
in
adc
fwait
xlat
push
jnp
add
pop
lea
add
cld
sbb
fldt
cwtl
enter
add
add
mov
out
mov
daa
rolb
insb
adc
test
jns
cmp
movsb
add
add
rolb
add
pop
mov
add
add
sub
sbb
add
add
loop
repnz
add
add
add
sbb
push
inc
out
push
add
aam
sub
push
add
add
shll
push
xchg
add
rolb
add
pop
lds
jmp
filds
sbb
aam
xchg
add
aaa
pop
lock
popf
or
sub
rorl
hlt
add
add
or
xchg
add
pop
xchg
add
cmp
inc
jmp
add
xlat
faddl
addb
lahf
pop
pop
adc
fbstp
add
outsb
lahf
mov
addb
lcall
mov
push
inc
add
sub
push
add
out
daa
nop
add
cmp
or
sbb
loopne
out
mov
add
pushf
insl
push
add
adc
or
mov
mov
mov
jne
add
dec
fisttpl
mov
and
push
xchg
aad
lcall
add
add
push
jne
add
out
adc
sahf
je
data16
dec
inc
add
push
mov
sbb
mov
insb
out
jle
lcall
jno
inc
add
pushf
cmp
fstpt
sbb
les
and
call
add
sti
add
mov
lock
mov
mov
add
pop
cmc
fisttpll
dec
ret
add
add
add
add
cmpsl
and
xor
cmp
mov
mov
mov
dec
cmp
int
add
push
add
xchg
inc
xchg
add
addr16
mov
add
xchg
xchg
or
add
call
push
and
mov
loope
push
add
add
jl
mov
rolb
xchg
repnz
xchg
cmpsl
add
add
add
dec
das
mov
sti
out
cmpsb
add
movl
in
popf
mov
mov
jle
add
sbb
add
inc
sub
push
dec
fadd
mov
icebp
pop
rolb
push
mov
aad
fst
popa
lahf
sahf
call
dec
adc
or
push
ss
jecxz
enter
pop
pop
push
push
insb
mov
movb
fisttps
mov
add
add
dec
in
add
add
jae
add
add
jno
push
add
or
add
pusha
add
lock
addr16
push
add
lret
cmp
iret
loop
pop
jnp
add
stc
cmp
cmp
add
add
mov
push
add
jecxz
pop
cmp
mov
sbb
add
inc
add
mov
add
add
fisttpll
add
test
sub
push
aam
or
add
mov
mov
add
dec
add
add
js
pusha
add
xor
pushf
add
into
into
fwait
xchg
addb
out
pop
mov
inc
add
add
mov
or
shr
mov
movb
pop
mov
jae
jbe
movl
jo
jo
test
stos
dec
pop
sub
add
push
outsb
mov
add
sti
mov
mov
mov
out
pop
adc
add
pop
leave
add
mov
call
dec
movb
fmull
ret
xchg
enter
inc
std
xor
lahf
addb
pop
dec
pop
xlat
pop
daa
inc
inc
or
cmp
pop
xchg
mov
add
xor
scas
dec
insb
leave
bound
mov
sub
add
add
add
mov
popf
mov
push
add
mov
xchg
rol
add
add
mov
push
sbb
dec
sar
cmp
add
xor
cmpsl
out
cmp
add
add
inc
add
add
mov
aam
stc
sti
and
pop
or
and
mov
mov
add
popa
hlt
add
add
bound
mov
mov
add
add
cltd
in
add
xchg
dec
or
xor
mov
data16
sub
add
cmovns
add
mov
movsl
or
jmp
shl
out
jle
push
add
inc
add
add
add
ficoms
dec
sbb
add
cmpsl
cmpsl
sub
dec
icebp
stos
popa
into
jbe
and
addb
xor
mov
cmc
jle
jbe
pusha
add
scas
test
add
add
add
rcll
ja
mov
jmp
popf
lods
push
add
dec
sub
stos
cmp
and
jg
add
dec
test
inc
add
add
add
add
add
add
dec
repnz
add
add
push
add
and
push
in
xchg
lret
rcrl
jae
sub
add
cmc
cwtl
in
rolb
and
mov
xchg
call
add
mov
adc
lea
push
adc
sub
add
mov
sub
mov
xchg
or
mov
and
mov
into
push
add
dec
rolb
lret
push
out
inc
repnz
add
outsb
push
pushf
push
add
pop
mov
out
pop
cmpsl
cmc
jns
cs
lret
pop
mov
lahf
mov
add
push
pop
aaa
mov
xor
aad
add
ljmp
mov
add
lods
pop
aaa
mov
add
jl
or
mov
mov
xchg
add
add
mov
jb
mov
cwtl
fcoms
or
jbe
in
xor
repnz
cwtl
into
rcrl
fidivs
add
add
or
add
mov
arpl
movb
push
dec
int3
sbb
lret
lret
sbb
add
xchg
add
emms
sub
mov
add
xchg
das
stc
je
jp
mov
add
scas
data16
push
add
mov
add
cmc
int3
mov
mov
int
inc
cld
adc
add
jp
std
xchg
in
add
sub
add
push
hlt
add
mov
or
and
add
xchg
rolb
jecxz
adc
jb
int
sub
inc
add
add
movb
mov
and
add
add
hlt
add
mov
cmp
add
ret
scas
add
jnp
add
pop
out
add
add
das
mov
add
xchg
scas
cmp
mov
aaa
sbb
addr16
popf
mov
push
fwait
imul
pop
inc
in
mov
adc
add
jnp
add
dec
or
mov
add
test
sarl
lret
lods
jle
add
mov
inc
adc
inc
pop
das
xor
fnstcw
cld
push
add
inc
add
sub
and
mov
arpl
in
push
add
sub
mov
add
add
add
add
add
fldenv
add
fcmove
mov
rolb
out
push
push
add
cmp
aas
lds
jmp
add
inc
pop
nop
add
inc
add
add
inc
add
in
scas
shl
xchg
add
popa
loopne
lcall
je
test
outsl
xorl
jno
jns
push
inc
add
add
in
jmp
sub
sbb
sub
lock
inc
add
add
scas
cmc
sbb
xor
in
add
lcall
mov
pop
sub
add
sbb
sbb
push
into
or
mov
push
data16
mov
adc
filds
add
and
jmp
rolb
add
add
mov
inc
pop
mov
sub
mov
add
xchg
cli
and
add
add
mov
jbe
out
cmp
test
cmp
lods
dec
call
add
mov
add
mov
jo
sbb
jno
dec
lock
mov
addb
mov
push
fistps
mov
or
dec
fnstcw
jae
add
add
and
mov
add
add
add
notl
mov
icebp
push
inc
add
in
in
xchg
stos
cmp
mov
mov
pop
call
je
fbstp
add
pop
push
xchg
mov
and
add
in
cmp
add
add
les
lret
xchg
add
inc
mov
in
add
out
sub
add
add
cmp
cli
pop
xor
add
cltd
fdivrs
push
add
imul
jle
stos
and
mov
add
or
idivl
test
aaa
clc
mov
push
aad
ret
addb
arpl
jne
js
add
aad
mov
xor
add
leave
sti
mov
je
imul
loop
dec
das
xchg
scas
aam
ja
xlat
movsb
add
add
sbb
outsb
fldcw
je
inc
jecxz
cmc
stc
stos
cs
loope
and
ljmp
mov
insl
clc
testb
movsb
add
add
xchg
add
jl
sbb
sbb
ds
sbb
cmp
add
jnp
mov
out
mov
jp
and
or
add
pop
xchg
add
sbb
add
addb
sub
inc
add
sti
xchg
lock
fdivrs
pop
jno
add
mov
xor
pop
push
add
add
outsl
aaa
xor
xor
js
adc
cmp
sub
sbb
imul
cmpsb
add
add
add
mov
addb
add
add
adc
mov
dec
popf
sbb
add
cltd
cwtl
outsb
cmc
testb
gs
add
inc
incl
mov
shll
ret
sub
ror
rolb
cli
sub
test
add
add
arpl
add
cmp
std
shll
xchg
adc
or
jno
mov
add
pop
loop
lods
je
mov
aaa
fwait
pop
ljmp
xchg
add
outsb
movsb
add
fimuls
and
lea
pop
add
xchg
add
jg
push
pusha
add
or
xor
ret
adc
pushf
mov
add
sub
or
addb
add
jl
adc
xor
jp
add
add
out
loop
dec
testb
imul
add
orl
loop
mov
mov
mov
hlt
add
stc
mov
rcr
pop
addb
add
or
out
push
add
add
lock
and
xor
in
std
cmp
out
and
add
xchg
std
sbb
and
fisttpl
add
adc
mov
scas
jle
add
add
push
movd
mov
negl
add
movsb
add
aaa
movsl
cmp
or
fwait
push
add
fsubs
add
mov
add
in
add
add
incl
add
ljmp
stos
mov
pusha
add
lret
data16
add
jbe
loop
jmp
call
shrl
pop
dec
pop
jnp
add
jne
loopne
cltd
mov
movsb
add
stos
ret
movsl
popf
les
mov
aas
aad
mov
cmp
add
add
pop
dec
pop
les
xor
push
sub
fwait
dec
inc
aaa
or
es
push
add
in
jmp
inc
mov
fldcw
mov
and
mov
mov
int
int3
rcrl
inc
add
mov
jnp
pusha
add
lahf
into
xchg
jae
xor
pop
dec
inc
push
jnp
mov
xchg
sbb
add
sub
mov
add
sahf
movsb
add
into
popf
loope
inc
add
add
insl
rolb
daa
movl
mov
pop
mov
add
add
dec
lret
add
rolb
inc
add
inc
loope
cld
int3
stc
popa
mov
adc
add
mov
cwtl
test
mov
add
add
mov
lods
xchg
add
add
js
into
xchg
mov
repz
scas
outsb
sbb
pop
or
add
jb
pop
and
ret
push
loope
insb
xor
cli
fidivl
xor
ret
mov
add
in
filds
pop
outsl
xor
mov
add
js
subl
mov
add
adc
push
add
push
add
xchg
jbe
pop
in
mov
test
rolb
cwtl
mov
ret
push
out
lcall
xchg
data16
les
pop
push
sub
stc
mov
inc
jl
movb
or
sti
in
pop
hlt
add
js
add
stc
cli
inc
add
loopne
adc
add
mov
clc
or
add
add
out
pop
fsubr
outsl
xchg
add
sub
mov
add
push
les
or
add
mov
mov
add
add
js
add
fxch
sarl
nop
add
call
movsl
xor
loope
cmp
push
add
aas
jae
jns
push
add
insl
jge
fildll
inc
add
sbb
mov
cmc
arpl
cmp
mov
xchg
cmpsl
popf
pusha
add
cmp
shrl
mov
adc
xor
inc
mov
mov
insb
movb
in
or
psubq
xchg
add
mov
add
add
clc
adcl
lock
daa
fcompl
insl
pop
jge
lea
jl
into
xor
xor
sbb
lret
add
mov
add
add
xor
mov
mov
mov
fucom
sbb
add
faddl
mov
and
flds
jne
add
jmp
frstor
add
inc
add
inc
and
add
shll
sbb
aad
add
xor
pop
addb
add
lret
pop
mov
in
push
add
add
pop
cmp
mov
inc
cmp
add
stos
dec
mov
add
push
add
hlt
add
push
int3
incl
cmp
jns
push
add
add
add
sub
in
jecxz
inc
push
dec
fucom
movb
add
push
add
mov
mov
hlt
add
cli
sbb
add
cli
sub
add
inc
icebp
add
add
das
out
mov
mov
add
add
add
jp
add
test
cmp
pop
in
xchg
add
add
jecxz
add
aas
mov
fbstp
jge
and
sub
cmp
xchg
pop
xchg
outsb
push
cmpsb
add
addb
and
ret
into
iret
rolb
sahf
push
daa
sahf
and
mov
adc
call
cli
jbe
sub
add
add
outsb
in
movsl
sub
ficoms
add
data16
sbb
leave
stos
jns
mov
add
addb
mov
add
pop
imull
xor
mov
jg
add
arpl
mov
xchg
add
inc
add
scas
add
xchg
add
out
repz
imul
in
das
mov
popa
mov
lcall
add
push
imul
lret
roll
inc
mov
add
push
fisubrs
add
dec
ret
or
into
lods
dec
pop
mov
daa
daa
sub
and
add
mov
adc
push
add
xchg
sbb
add
add
mov
in
adc
add
mov
add
test
add
mov
sbb
aas
jmp
lret
add
daa
iret
and
push
add
ret
add
cmpsl
rolb
out
jmp
add
inc
add
in
push
add
les
data16
mov
imul
in
inc
add
add
test
pusha
add
add
dec
stos
bound
mov
add
out
pop
dec
cli
or
add
arpl
cmp
add
dec
ficoml
sbb
jmp
push
push
add
mov
ds
mov
arpl
ret
xor
das
call
sbb
add
ds
add
jecxz
push
sub
cmp
sahf
jbe
sbb
add
adc
add
mov
mov
add
das
xchg
bound
mov
add
inc
rcll
ret
out
enter
popf
lret
and
mov
xchg
add
cmp
pop
cmp
pop
xchg
xor
mov
ret
pop
jge
lods
xlat
or
test
movb
xor
xor
jnp
sub
outsl
push
pop
addl
sbb
adc
bound
mov
add
add
add
loop
and
jp
add
sbbl
bound
mov
dec
xchg
push
add
lret
ret
bound
mov
imul
add
add
movb
iret
cli
adc
jl
adc
aam
in
data16
add
mov
stc
das
rolb
cwtl
stos
mov
test
mov
push
mov
inc
add
pop
sbb
pop
pusha
add
cli
cmpsb
add
pavgb
or
and
repz
hlt
add
lret
push
sarl
fs
jp
add
sub
adcl
pop
popf
cmpsb
add
add
mov
and
mov
cmp
pop
xchg
add
add
xchg
rolb
or
add
test
mov
add
cmp
in
stos
lret
addl
push
and
iret
ja
cmc
jns
cmc
push
or
add
add
mov
addb
mov
add
inc
jmp
add
jne
inc
add
add
imul
testb
mov
bound
mov
add
add
and
popa
xor
mov
outsl
rolb
fildll
add
add
add
add
add
pop
imul
push
add
or
call
add
add
fxch
mov
add
add
mov
pop
movsl
dec
lret
sbb
data16
xor
lds
int
xchg
mov
xor
sub
mov
add
sbb
rolb
xchg
dec
xor
add
add
popa
int
push
add
xlat
xchg
push
loopne
mov
in
in
jmp
stos
push
add
cmp
loope
xchg
ret
sbb
popf
iret
sbb
aaa
mov
outsb
jbe
or
out
push
mov
outsb
leave
xor
int3
jmp
adc
add
add
add
into
lock
xchg
add
add
xlat
mov
and
mov
add
ret
jbe
pusha
add
add
popa
aad
std
jp
add
mov
xchg
bound
mov
add
outsl
les
call
xchg
daa
dec
jb
jae
pop
dec
xchg
addb
push
add
add
add
add
cmpsl
loopne
cmp
add
mov
aaa
cmp
lock
or
add
mov
add
mov
stos
and
mov
add
hlt
add
dec
xor
xlat
popf
and
lock
mov
arpl
js
insl
add
add
fimuls
enter
add
fists
add
das
hlt
add
and
loopne
lods
call
sahf
dec
inc
add
addb
jmp
movq
add
lea
mov
in
xor
add
ljmp
add
add
add
add
loopne
cltd
in
pop
loop
popa
mov
and
mov
add
add
xorl
stos
xor
das
push
mov
rolb
mov
in
cmp
xchg
loop
pop
fisubrs
lock
add
int
into
and
clc
nop
add
add
imul
shrl
in
add
push
pop
dec
movb
cmp
cmp
add
jl
mov
lock
add
adc
sbb
data16
pushf
in
pop
add
or
addb
addb
sub
call
inc
add
add
adc
testb
add
hlt
add
lea
mov
cmp
add
and
mov
push
out
xor
add
daa
repz
add
sbb
lods
mov
pop
add
xchg
test
mov
adc
add
mov
add
in
add
add
test
or
dec
xchg
add
les
les
or
add
mov
add
repz
add
xchg
add
add
mov
jge
in
sbb
insl
mov
push
cmp
add
inc
and
mov
add
push
pusha
add
repnz
movsl
bound
mov
add
testl
mov
stos
call
jb
int3
enter
das
fwait
add
xchg
insl
inc
add
dec
mov
add
outsl
mov
add
add
rolb
cmp
in
jae
addr16
add
add
push
scas
movsl
add
and
repz
std
or
mov
data16
add
mov
aas
call
add
lret
popa
movnti
jle
add
cmpsl
push
add
repnz
add
mov
sbb
lret
mov
ret
xchg
add
xchg
add
jmp
rcll
cmp
pop
push
jne
add
add
mov
addb
lds
inc
add
add
mov
inc
scas
lock
add
sti
enter
dec
outsl
adc
cmp
mov
pop
sub
pop
sbb
push
push
add
mov
sbb
lods
mov
cmp
add
icebp
pop
lea
add
jno
jnp
mov
cmp
inc
add
adc
push
add
add
add
bound
mov
add
ret
fwait
in
orl
fistps
add
add
lcall
dec
cmp
inc
add
add
repz
add
pop
jbe
jb
fstpl
add
mov
push
add
in
popf
cmp
mov
jmp
cmp
add
push
sbb
mov
mov
mov
jecxz
stos
incb
mov
mov
adc
push
and
xchg
imul
sub
add
sbb
ljmp
add
or
out
push
pop
pop
fists
inc
ret
or
inc
dec
lods
push
je
jmp
arpl
adc
xor
int
lds
stos
in
push
or
sub
xchg
xchg
add
adc
add
pop
cmpsb
add
pop
cmpsl
or
pop
xchg
out
scas
subl
sub
cmp
inc
add
xchg
add
pop
enter
sti
xchg
dec
aas
push
add
fstl
frstor
lret
xchg
dec
daa
fucom
add
aas
fldenv
xchg
mov
mov
mov
icebp
ds
jno
add
sbb
and
fstl
mov
rolb
mov
push
add
add
add
push
mov
push
xchg
add
add
add
mov
xor
or
sub
add
jae
mov
add
and
mov
add
cltd
in
dec
xor
mov
std
dec
bound
mov
adc
jbe
clc
fisubrs
movsb
add
xlat
add
mov
add
mov
pop
lea
lea
and
add
cvtps2pi
jmp
mov
cs
fwait
mov
mov
add
cmpsl
pop
js
add
call
in
add
add
add
or
add
cltd
insb
mov
sti
insl
xchg
lret
add
add
mov
add
fstps
lcall
jp
testb
push
cmp
jmp
repz
rcr
pusha
add
xor
clc
push
add
mov
inc
or
ja
add
add
add
mov
xchg
add
outsb
stos
lea
addb
add
aaa
testb
mov
mov
push
add
lods
sub
std
add
mov
xlat
loopne
add
inc
fists
sbb
add
add
cltd
int3
fnstsw
push
js
jae
outsl
add
pop
shll
jg
jmp
lods
testl
pushf
lods
std
xlat
fnsave
inc
mov
dec
pusha
add
pop
xor
mov
add
mov
jge
enter
cmp
jns
stc
mov
push
lret
pop
pop
add
and
lret
xchg
push
add
lret
clc
mov
in
dec
and
add
mov
pop
stc
xor
add
and
sbb
add
lea
add
jmp
mov
adc
adc
outsb
xchg
rolb
sub
js
test
imul
add
lret
add
mov
shrl
or
sub
or
addb
add
jmp
testb
xchg
add
adcl
cmp
and
xchg
iret
or
add
add
mov
jle
add
jbe
insb
aaa
xlat
je
add
out
add
outsl
mov
mov
pop
sub
add
hlt
add
mov
inc
in
xchg
jbe
out
in
xor
mov
add
mov
add
shrl
add
repnz
add
sub
xchg
cwtl
mov
daa
inc
add
push
add
movsb
add
movb
mov
and
add
imul
daa
fwait
sub
add
xchg
add
add
add
add
add
add
jnp
cmpsb
add
dec
mov
add
xchg
popa
xor
or
mov
movsb
add
inc
sbb
mov
push
add
call
xchg
mov
and
mov
sub
dec
fcompl
push
push
cmp
add
add
mov
xor
addb
mov
add
leave
fisttps
bound
mov
into
testb
jecxz
nop
add
jns
cltd
fsubrs
inc
rolb
movb
imul
jg
lods
in
mov
push
bound
mov
add
hlt
add
mov
or
jl
add
mov
and
mov
sbb
push
sub
dec
jb
int
add
mov
cli
les
pusha
add
fdivs
add
test
sub
inc
hlt
add
test
insb
push
add
insb
pop
xchg
movsb
add
popa
js
call
iret
push
add
icebp
xor
ja
pop
ljmp
xor
popa
sub
decb
mov
jl
add
add
mov
sbb
add
mov
pop
aas
cmp
in
aas
sahf
mov
sub
je
test
lds
and
add
aas
lods
jbe
inc
cmc
xchg
mov
push
mov
mov
mov
jo
fstps
lret
mov
add
add
or
and
test
leave
pushf
mov
push
add
lahf
mov
add
xchg
add
mov
aas
xor
mov
add
add
sub
mov
out
addb
jbe
mov
inc
add
clc
dec
mov
mov
mov
add
sub
movsl
xchg
add
jbe
xchg
aad
dec
imul
add
lea
das
inc
add
add
add
orl
add
jecxz
jecxz
add
dec
add
pop
cmp
add
add
add
mov
hlt
add
cli
pop
xchg
add
lods
xchg
pop
push
push
xor
push
and
mov
mov
ljmp
aas
repnz
adc
pop
push
add
add
add
lods
mov
push
lret
dec
pop
xor
add
ds
mov
add
add
testl
mov
xor
movb
mov
inc
and
mov
enter
push
movsl
ret
mov
add
mov
fsub
repz
repz
add
jmp
icebp
sub
add
dec
repnz
outsl
add
mov
addb
xchg
and
mov
mov
das
fiaddl
dec
sbb
jmp
xchg
add
enter
mov
add
dec
xchg
cmpsb
add
arpl
add
add
and
mov
xchg
mov
cmp
rolb
cmpsb
add
add
add
stc
sub
jp
out
ficompl
and
dec
pop
inc
add
mov
add
jb
mov
mov
add
mov
sub
addr16
sub
andl
cmpsb
add
call
or
movb
cld
loope
add
add
jb
push
xchg
add
add
jmp
cmpsb
add
and
push
add
add
js
add
fcoml
dec
out
movl
dec
daa
mov
ret
mov
arpl
add
out
mov
addb
add
scas
and
mov
inc
add
rolb
mov
ret
pop
dec
sbb
add
add
add
add
int
mov
mov
add
sub
push
jbe
lret
add
push
add
call
mov
push
add
lea
add
mov
out
pop
adc
push
sub
and
add
je
push
and
mov
in
jp
add
popf
repz
rolb
mov
div
add
int
pop
std
jne
test
add
add
add
adc
loop
cltd
adc
add
es
add
mov
xor
xchg
cmp
pusha
add
lods
rol
repnz
sub
push
add
aam
push
mov
fimull
and
mov
fcmovnbe
add
pop
mov
enter
adc
add
sub
add
fnstsw
cmp
mov
push
adc
repnz
add
mov
mov
add
out
imul
mov
movb
add
std
or
add
add
lahf
mov
and
outsb
dec
inc
add
mov
aam
sbb
inc
jl
mov
sti
xchg
inc
pushf
mov
jnp
fsts
add
mov
add
lods
xchg
call
add
sbb
test
xchg
push
sbb
mov
add
add
ret
fcoms
outsl
in
add
shrl
stc
pop
xchg
add
pusha
add
and
mov
pop
dec
fbstp
add
add
mov
or
pop
and
xadd
add
add
add
jge
test
xchg
add
push
add
test
add
mov
adc
add
outsl
insb
inc
add
popa
cld
repnz
add
add
push
inc
add
pop
hlt
add
add
cmp
add
int
mov
xor
xor
pop
push
add
addr16
add
adc
fndisi(8087
out
add
cli
clc
fadds
mov
add
mov
mov
jp
mov
cltd
xchg
popf
pop
jnp
insl
popf
pusha
add
movsl
pop
or
mov
movl
test
mov
out
pop
dec
and
add
pop
test
cmc
xlat
sbb
add
stos
xor
add
rolb
add
les
in
or
mov
add
add
add
int
das
push
popf
clc
insl
dec
push
push
add
add
inc
add
cltd
xlat
in
ret
xor
sti
push
add
addb
test
add
sub
add
mov
xchg
gs
xchg
cmpsl
push
mov
jo
sub
sbb
shll
add
push
push
mov
dec
add
or
mov
adc
icebp
push
mov
sahf
jns
add
sbb
loope
adc
add
mov
mov
add
repz
imul
add
addb
cmp
add
adc
rolb
data16
add
and
and
mov
mov
or
out
addb
sti
das
insb
pop
ss
push
jecxz
into
sbb
stos
imul
pop
int3
add
stos
adc
or
mov
mov
outsb
leave
dec
inc
add
mov
mov
in
sub
jbe
iret
icebp
in
inc
add
cwtl
jmp
lret
aad
adc
sbb
add
lret
sbb
sbb
int
arpl
add
push
add
jle
shrl
add
lret
rolb
sbb
or
pusha
add
add
decl
add
add
faddl
hlt
add
add
add
xor
add
call
sbb
mov
cmp
cli
adc
mov
loope
sarl
dec
sub
jo
int
sbb
mov
add
add
fldcw
add
push
cs
add
and
add
add
mov
mov
nopl
add
fdivs
and
add
pop
sti
pop
addr16
test
add
add
test
js
inc
add
add
dec
fdivrs
adc
pusha
add
dec
jno
sub
outsl
push
add
arpl
jp
and
push
add
mov
insl
leave
pop
pop
ds
add
inc
add
sub
adc
aas
bound
mov
stc
cmp
out
push
and
mov
push
jg
add
mov
imul
jae
inc
add
aam
imul
inc
add
lcall
add
xchg
add
add
add
add
jbe
rolb
push
int3
out
bound
mov
add
jne
push
add
add
pop
in
je
adc
imul
cmp
add
addr16
add
pop
in
jl
aas
fwait
jbe
jns
jo
int
xchg
inc
add
jae
nop
add
add
fstsw
mov
data16
or
add
mov
test
inc
add
push
add
add
cmp
or
fildll
add
sub
lcall
insb
fbld
mov
dec
sti
xor
pop
insb
inc
add
push
add
add
add
add
add
mov
mov
pusha
add
int3
xor
stc
xchg
dec
or
push
add
mov
mov
aaa
pop
aaa
lret
stc
sbb
bound
mov
stos
inc
mov
fs
jecxz
aad
js
inc
out
int
iret
mov
and
movb
add
jns
fdivrp
test
add
mov
or
ror
add
mov
add
ds
fisubs
add
mov
mov
add
lods
push
add
mov
push
add
mov
xorl
rolb
pop
push
add
lods
xor
loop
xchg
add
aad
add
mov
add
jge
mov
and
pop
loop
outsb
push
add
icebp
mov
addb
clc
fsubr
xchg
add
add
test
add
add
sub
sti
mov
pop
add
in
or
push
in
sub
aaa
pop
das
fxch
dec
jmp
iret
push
fdivr
adc
inc
add
jbe
popa
push
pop
addb
add
mov
lret
lret
xchg
sub
adc
or
add
mov
inc
cltd
sub
add
mov
add
add
cmpsb
add
add
add
lcall
jb
add
sub
add
test
mov
add
add
dec
xchg
sub
sub
push
add
cwtl
xchg
xlat
inc
cmp
push
add
testb
lret
jmp
xchg
popa
and
add
dec
cwtl
ret
xchg
add
cmp
add
xor
push
add
rolb
sbb
rolb
jl
ds
sub
repz
sub
add
roll
sbb
inc
and
in
in
mov
add
cs
std
aad
in
rolb
inc
add
arpl
fidivrl
xchg
ret
push
rolb
xlat
movl
pop
or
je
aam
add
js
inc
dec
rolb
loop
jmp
jl
add
add
enter
add
leave
repnz
icebp
pop
xor
jmp
fxch
mov
add
jmp
add
add
dec
dec
xor
mov
cld
fwait
rcll
xchg
in
xchg
add
add
addb
lret
or
data16
xor
xor
data16
rolb
mov
sbb
mov
and
mov
xor
push
add
add
add
add
add
add
into
cmp
mov
mov
adc
inc
add
add
mov
add
sub
push
add
sub
fwait
xchg
add
add
fnsave
add
addb
sbb
ret
sarl
lods
dec
push
add
dec
int
jnp
stc
dec
add
mov
add
jg
fiadds
les
xchg
out
mov
pop
xor
dec
imul
into
lock
mov
add
mov
pop
xor
jmp
bound
mov
imul
adc
sbb
add
add
shll
add
ret
add
leave
add
dec
push
add
cmp
mov
add
repnz
add
insb
and
add
pushf
jns
int
jae
sbb
icebp
mov
add
or
mov
sbb
xchg
add
add
cmp
dec
stc
pushf
mov
add
outsb
fdivrp
sub
scas
subl
push
loop
or
mov
stos
and
add
pusha
add
jg
and
mov
adc
or
cmp
ret
and
mov
ds
dec
icebp
add
and
mov
add
add
mov
xchg
add
addb
dec
mov
ret
dec
loopne
call
aaa
insb
cmpsb
add
stc
mov
in
or
xchg
xor
movb
bound
mov
mov
in
cmp
ljmp
xchg
add
push
add
adc
xor
and
mov
jecxz
mov
sub
jg
inc
add
mov
add
outsl
clc
or
les
mov
cli
add
pop
cmpsl
iret
sbb
xchg
mov
mov
or
aaa
lret
jge
xchg
jb
jl
add
add
pop
xchg
add
jl
lods
imul
sub
pop
or
and
sti
or
add
pop
pop
xchg
add
mov
and
mov
adc
adc
mov
mov
std
test
push
dec
int3
loop
das
dec
cmp
cwtl
and
mov
adc
scas
mov
push
sahf
scas
push
add
pop
adc
gs
xor
popf
insl
adc
mov
cmp
mov
aam
adc
jecxz
add
add
jnp
imul
or
popa
cwtl
ret
dec
dec
out
add
add
add
add
nop
add
add
add
push
or
add
decl
push
sbb
push
add
jo,pn
mov
int3
dec
adc
jno
add
add
add
ret
cmp
add
add
fnstenv
and
mov
out
nop
add
add
adc
mov
jge
add
add
pop
push
cld
or
cwtl
sub
push
add
mov
pusha
add
jg
add
lods
cltd
push
dec
sbb
pop
stc
xchg
arpl
xor
cmp
add
xchg
pop
orl
mov
add
jne
lds
scas
pop
dec
ret
pop
add
add
negl
add
add
mov
xchg
add
ljmp
cmpsl
inc
iret
push
adc
xchg
add
out
in
xchg
jno
loop
insb
add
or
sbb
inc
test
push
add
mov
mov
jbe
aam
mov
mov
xchg
add
add
jno
add
jb
loop
sti
jne
mov
das
push
add
add
mov
push
add
hlt
add
add
add
imul
xor
and
in
add
jo
xchg
lret
int3
push
jo
pop
lret
lock
dec
ret
out
add
xor
push
or
add
cmc
shrl
aam
jae
add
add
clc
in
cmp
add
loopne
dec
push
sub
ret
inc
add
stos
pop
out
push
sub
add
adc
repz
outsl
mov
and
mov
or
add
test
pop
icebp
cmp
test
add
pop
cmp
repz
xchg
add
jae
int3
adc
inc
add
cmc
push
add
add
sbb
add
stos
stos
mov
xchg
pop
and
jecxz
leave
mov
cmp
add
add
gs
add
add
mov
add
add
add
add
mov
popf
imul
nop
add
xorl
aad
inc
nop
add
in
mov
push
or
add
out
pop
test
aad
add
outsb
xor
ljmp
cmp
add
movb
fdivrl
sub
pop
repnz
add
inc
mov
add
cmp
mov
add
dec
sti
mov
loopne
dec
mov
inc
gs
stc
inc
add
addr16
cmpsl
lock
cmpsl
dec
or
gs
add
add
push
add
add
adc
add
mov
pop
ljmp
jnp
pop
inc
movb
xchg
add
in
shr
loope
add
xchg
sbb
push
sub
add
xor
or
add
dec
push
lcall
add
mov
or
adc
push
add
nop
add
add
stos
mov
addb
cwtl
cmp
add
cmp
outsb
ljmp
add
add
fisubl
dec
cmp
mov
pop
xor
inc
add
das
enter
mov
xor
push
inc
add
femms
or
add
add
mov
pop
je
jnp
pop
movsb
add
add
push
repnz
mov
xchg
outsb
mov
add
push
add
imul
add
add
cld
movsl
sahf
fisttpl
imul
dec
mov
movsl
les
pushf
js
inc
inc
daa
xchg
xor
add
push
add
add
jns
cmc
cmp
sahf
fimuls
ljmp
mov
scas
adc
jge
adc
mov
mov
dec
mov
loope
sub
xor
mov
mov
nop
add
push
mov
add
shll
mov
ret
add
jge
push
fwait
jnp
xchg
in
dec
jecxz
cmp
icebp
test
sbbl
dec
push
dec
and
sbb
add
cs
add
mov
inc
icebp
xor
xchg
or
cmpsb
add
xor
add
add
add
imul
jmp
lods
inc
lahf
sub
push
add
mov
add
mov
ja
dec
push
add
pop
sub
mov
add
add
xchg
out
outsl
mov
add
mov
in
cmc
inc
push
jge
and
mov
mov
testb
lea
sub
stc
mov
movsl
faddl
add
pop
in
add
rolb
mov
xchg
add
adc
repz
mov
cmp
aas
outsl
bound
mov
rcr
xor
jmp
loope
push
sub
xchg
clc
mov
add
add
or
push
and
add
mov
mov
mov
inc
aad
jo
out
icebp
outsl
lahf
ret
outsb
jns
push
push
fdivrl
ret
jbe
pop
rolb
data16
ljmp
nop
add
or
outsb
mov
test
add
add
sti
mov
lods
xor
insb
add
push
add
jmp
mov
movsb
add
or
je
test
in
add
xchg
std
lret
fcmovnbe
out
push
add
add
mov
push
add
pop
lahf
test
mov
jmp
and
xor
jb
addr16
lods
mov
addb
lret
mov
jecxz
les
mov
jno
insl
push
add
xor
inc
add
add
mov
ficompl
sub
fcompl
test
fdivrp
mov
add
cwtl
sahf
jp
add
add
ljmp
add
xchg
add
ja
mov
xor
insb
pop
adc
adc
repnz
jnp
out
add
mov
xor
nop
add
and
addb
add
lods
popf
addr16
jg
hlt
add
adc
mov
push
add
lret
aam
cltd
rcrl
add
add
or
add
push
add
cmp
outsb
add
mov
add
pop
push
cwtl
cmc
sub
add
filds
add
add
add
pop
sarl
out
adc
xor
add
cmp
jp
cmpsl
std
stos
or
add
insb
leave
mov
xchg
or
ljmp
add
repnz
add
insb
jp
jbe
mov
je
test
scas
mov
mull
add
pop
cmp
test
fdivrp
xchg
dec
push
jp
and
jnp
lods
and
mov
sub
and
add
inc
add
add
add
add
xor
icebp
push
test
inc
add
pop
push
add
add
add
mov
mov
es
stos
addb
jmp
jle
add
jbe
imul
cmovbe
inc
in
jns
popa
out
xor
mul
mov
int3
cmp
mov
cmp
jnp
fucomp
push
mov
xor
inc
xor
jl
lret
test
add
push
xor
imul
xor
inc
add
add
push
fldenv
ret
rolb
fldcw
cli
jnp
add
xor
cltd
mov
pushf
adc
or
add
add
addr16
das
movsl
dec
cmp
lret
ret
popl
pop
lods
push
movsl
or
ja
pop
mov
xchg
add
xor
push
popf
inc
add
adc
sbb
add
mov
and
mov
mov
jecxz
inc
jb
int
xor
add
add
sub
add
scas
mov
add
nop
add
push
sti
jmp
push
cli
popa
lcall
or
pop
outsb
and
add
test
and
mov
add
or
in
nop
add
addb
sti
adc
inc
add
dec
push
add
sti
inc
add
pushl
add
inc
push
sub
jp
cmpsl
add
mov
and
mov
inc
mov
cmpsl
mov
and
add
test
pop
and
add
mov
mov
mov
add
add
enter
call
lea
testb
cld
je
cmp
pushf
repz
add
add
sbb
bound
mov
add
js
sbb
nop
add
pushf
push
add
jle
ljmp
add
cmc
int3
jge
data16
aam
dec
dec
mov
pop
adc
or
add
add
add
mov
add
adc
dec
jns
add
add
add
mov
add
orl
loope
bound
mov
pushf
cmp
mov
mov
add
add
add
repz
pop
test
jnp
pushf
cmp
sahf
cmpsb
add
add
add
pop
lret
ds
xchg
sti
jmp
add
pop
out
in
rolb
add
lods
mov
xchg
cld
cli
popf
mov
push
add
add
mov
rolb
std
jno
mov
push
add
test
scas
push
fsts
jno
mov
push
bound
mov
add
push
dec
sub
push
add
push
and
mov
call
addb
aam
test
cmp
add
lds
or
xchg
out
pop
addl
out
xchg
shll
add
sti
push
add
rolb
out
mov
or
xlat
sbb
fwait
call
iret
addr16
scas
push
add
add
xor
adc
mov
add
cmc
enter
pop
inc
add
add
add
add
jp
sub
jbe
cmc
mov
scas
push
add
int
adc
add
cld
add
add
add
sahf
push
add
out
movsl
popf
mov
push
add
xchg
fsts
xchg
jno
add
ret
dec
mov
pop
inc
add
sub
sbb
add
add
sbb
aas
adc
xchg
popl
test
jns,pt
add
ljmp
pop
add
mov
cwtl
iret
xor
test
add
aad
popa
aam
xor
jp
xor
jo
push
add
add
cmp
rcll
lea
mov
pop
push
lea
add
sub
mov
push
pop
inc
pop
inc
sahf
xchg
add
das
out
scas
pop
push
je
dec
stc
add
xchg
add
inc
addb
in
or
data16
add
add
mov
jno
add
mov
in
add
add
pop
push
add
jge
add
mov
add
add
add
sub
lods
out
or
loope
clc
lret
mov
push
imul
icebp
or
in
add
sahf
in
inc
int
add
leave
mov
adc
pop
cwtl
in
lahf
loope
push
add
add
out
fcmovnb
add
xchg
cwtl
xor
cltd
ret
mov
mov
mov
xchg
add
mov
outsb
adc
sbb
iret
cmp
iret
scas
stos
mov
or
sbb
repnz
mov
adc
aaa
adc
mov
add
sbb
repnz
inc
add
sbb
xor
aad
inc
leave
cltd
cmp
dec
scas
xor
movb
or
add
mov
outsb
es
jnp
xor
sub
nop
add
fwait
sarl
add
add
mov
add
xchg
add
add
lcall
lcall
cmc
xor
adc
aad
add
leave
lods
mov
add
add
add
add
add
add
add
mov
add
dec
add
aam
sbb
sbbl
xchg
add
add
mov
add
jl
rcrl
fwait
pop
test
int3
add
mov
js
aas
mov
out
aad
add
dec
mov
xor
lahf
xorl
add
fpatan
loop
jp
xor
insl
add
add
sub
add
cli
adc
repz
cwtl
xor
fwait
int3
fdivrl
dec
jb
inc
lods
rolb
add
mov
add
add
add
fisubrs
add
add
mov
add
ret
mov
cmpsl
mov
or
add
cli
jle
add
adc
mov
add
and
add
jge
add
lea
dec
ret
imul
loop
push
or
test
popf
out
cld
mov
add
out
les
inc
mov
mov
add
add
out
iret
push
outsb
stos
pop
mov
addr16
jmp
je
sarl
leave
out
mov
adc
cmp
jp
add
test
add
aam
push
pop
cwtl
fiaddl
add
dec
repnz
inc
add
add
rcrl
loopne
jl
add
repnz
add
jp
add
sbb
xchg
add
aad
add
mov
cld
out
add
mov
mov
mov
sub
and
pop
sahf
filds
add
mov
cmp
mov
xor
or
add
add
xchg
add
stos
aam
cmp
pop
jnp
mov
loope
add
add
add
add
fs
add
add
popf
add
mov
add
sub
add
pop
sbb
or
add
adc
add
add
hlt
add
mov
add
cmpsl
mov
jp
mov
les
fildl
mov
adc
popa
test
sub
mov
popf
stos
cmp
cmp
xchg
add
add
xlat
iret
aas
mov
std
sub
pcmpgtb
mov
cld
jp
add
mov
sub
testb
xlat
sbb
add
push
xchg
dec
push
add
sti
ret
ret
call
aad
cmp
ret
xchg
divl
loop
pop
int3
stos
xchg
scas
mov
mov
insl
out
xchg
pop
loop
mov
mov
add
addb
addb
pop
sub
add
js
test
mov
add
pusha
add
add
add
mov
xor
pop
push
add
int3
jp
add
dec
pop
jg
xchg
sbb
add
mov
xchg
add
adc
fwait
mov
add
inc
inc
add
ficoml
xchg
repnz
xchg
jp
mov
js
mov
mov
add
jno
mov
ds
sub
add
xchg
sti
xor
pop
dec
orl
mov
mov
add
dec
and
mov
out
loopne,pn
and
mov
pop
mov
mov
cmp
add
mov
add
jno
outsl
sub
pop
push
push
mov
mov
xor
xor
insl
repz
cltd
dec
out
push
imul
xchg
divl
add
add
outsb
push
jb
inc
xor
ljmp
gs
loop,pt
mov
mov
push
sub
jecxz
js
inc
add
icebp
roll
xchg
push
into
inc
add
pusha
add
mov
sub
and
add
mov
add
push
out
jo
out
ret
addl
or
xchg
add
add
mov
add
add
add
xor
add
dec
jno
jg
cmp
add
inc
add
mov
mov
stc
fidivs
push
in
shl
add
push
lods
lds
add
mov
sbbl
sbb
mov
pop
add
push
cwtl
repz
stc
dec
imul
add
mov
sbb
icebp
stos
inc
mov
mov
neg
push
call
jmp
sub
aad
add
mov
add
add
mov
addb
iret
adc
mov
clc
roll
add
rolb
cmpsb
add
mov
rcll
add
xchg
add
add
mov
cltd
movsb
add
pop
sub
add
add
fildl
add
iret
lock
insb
and
add
push
add
movsb
add
or
jno
fcmovne
add
push
call
fists
data16
popf
stos
fisubs
add
or
add
lahf
rolb
add
movsl
in
aas
loop
pop
in
loop
movsb
add
jl
ss
cli
or
or
xchg
add
out
cmp
aam
mov
rolb
addb
sahf
cmc
test
mov
outsb
inc
jp
bound
mov
mov
in
xor
mov
ja
pushf
aam
cli
mov
add
mov
add
push
inc
add
sbb
or
dec
xchg
add
add
mov
sub
pop
adc
mov
inc
add
cmp
std
testb
ja
insb
arpl
inc
jbe,pt
scas
mov
dec
bound
mov
add
scas
or
add
add
add
adc
addr16
pop
rcl
xchg
fidivl
movb
add
rcrl
inc
add
push
pop
push
jg
add
mov
iret
in
xchg
leave
aad
and
push
pop
loope
add
xchg
cmpl
push
add
add
mov
add
addb
add
pop
sbb
mov
mov
mov
xor
push
leave
adc
and
mov
sub
xor
xchg
mov
add
lcall
xor
add
push
mov
mov
int3
scas
inc
mov
pop
sbb
xor
add
popa
adc
jmp
rcll
add
add
add
add
push
add
add
mov
mov
lock
mov
add
push
xchg
add
add
add
rorl
test
iret
lock
je
test
pop
testb
lock
mov
add
dec
rorl
sbb
push
dec
sbb
cli
dec
inc
add
xchg
jl
xchg
xlat
jecxz
xchg
mov
insl
xchg
add
add
add
jnp
jge
push
enter
jl
leave
xchg
add
dec
movb
into
rolb
add
repz
test
ret
aam
cmp
out
pop
cmp
scas
mov
xchg
pop
cmp
and
mov
xor
fucom
inc
cwtl
add
add
rolb
add
imul
inc
mov
jle
leave
adc
mov
or
lods
shrl
cmp
add
dec
jle
push
cltd
add
mov
add
int
jns
mov
mov
mov
add
scas
mov
fadd
add
xor
add
inc
add
adc
insb
jle
add
mov
sbb
cmpsb
add
push
out
out
mov
cmp
add
testb
rcrl
fimuls
gs
mov
stos
sbb
jecxz
lret
repnz
lods
inc
inc
inc
jo
mov
repnz
mov
push
dec
and
mov
int
sub
cmp
imul
xchg
add
add
add
pop
mov
push
and
int3
shll
add
cmp
mov
xchg
push
shll
pop
out
sbb
add
add
adc
add
mov
fs
mov
add
add
pop
loopne
dec
adc
xor
add
insb
xor
add
add
add
movsb
add
jbe
cmc
lods
stc
jbe
dec
lahf
xchg
cmp
adc
imull
xor
dec
mov
pop
aaa
fdivrp
sub
scas
add
out
gs
sbb
add
fidivrs
jb
popf
mov
push
sbb
add
add
add
movsl
sub
push
add
add
ja
add
mov
add
jbe
inc
add
add
aam
sbb
das
hlt
add
arpl
sub
out
xchg
push
insl
inc
adc
ds
add
push
sbb
or
rolb
repz
addl
and
popa
mov
push
mov
add
mov
ds
add
add
ret
and
sub
add
add
add
sahf
add
xlat
scas
mov
pop
adc
adc
shll
mov
shr
add
add
inc
add
repz
mov
inc
add
add
int3
into
pop
into
test
fiaddl
push
mov
incb
add
addb
pushf
mov
sub
add
in
add
inc
lods
lock
adc
out
adc
pop
pop
push
add
push
add
ffree
mov
and
mov
rolb
mov
inc
add
add
push
add
stos
jle
dec
xchg
jmp
add
adc
insb
pop
in
jbe
push
add
add
add
mov
fbstp
add
call
add
add
add
xchg
add
aas
ds
dec
jecxz,pt
les
rorl
add
add
aas
xor
cmpsl
mov
or
add
shll
xor
cld
add
add
sbb
add
add
fisubl
je
or
or
and
testb
push
shrl
add
add
add
sub
and
mov
or
and
push
mov
add
dec
mov
add
mov
cmpsb
add
out
notl
add
dec
xor
sub
into
mov
add
or
add
jbe
pop
rolb
adc
dec
pop
adc
cmc
testb
mull
mov
sub
mov
in
add
mov
add
add
stos
jb
cld
cmp
add
ret
sub
aad
cld
xor
hlt
add
or
mov
mov
xchg
mov
fdivl
xchg
add
xor
push
and
push
insl
add
adc
mov
add
jge
mov
je
aas
jl
imul
add
add
loope
push
add
nop
add
outsl
adc
sub
add
jp
loopne
fwait
add
add
mov
inc
add
xchg
and
mov
loope
lahf
out
mov
shrl
dec
push
cmp
add
add
int
add
lds
or
imul
add
xchg
jne
add
push
add
mov
add
mov
sub
sarl
add
inc
add
or
pop
add
mov
lea
pop
movsb
add
sub
fisubl
mov
or
add
add
lock
add
add
test
add
add
pop
fwait
sysenter
add
add
clc
inc
add
call
add
add
mov
ret
add
jno
pop
sub
into
xor
shll
les
stos
jae
movsb
add
add
add
out
push
aam
ja
mov
add
xor
test
xlat
jmp
lods
pushf
ret
xchg
add
add
lds
inc
add
les
mov
insb
mov
mov
pop
pop
mov
nop
add
add
push
add
popa
aaa
sub
mov
add
inc
add
add
add
lahf
push
rolb
jne
add
add
pusha
add
add
add
int
int3
outsb
pop
out
jne
pop
lret
iret
call
add
les
clc
popf
repz
add
jg
add
push
fmulp
jno
push
add
pop
xor
sub
adc
jo
ljmp
hlt
add
add
jmp
cwtl
mov
daa
addl
inc
add
lahf
test
ljmp
cmp
dec
dec
inc
add
inc
js
dec
ret
add
add
sbb
mov
popf
jl
pop
and
xor
cmp
mov
adc
idivl
add
add
pop
mov
ret
es
add
mov
add
shl
xchg
dec
repz
repnz
add
add
push
add
pop
add
imul
faddp
pop
and
testb
add
inc
add
add
pop
pusha
add
adc
dec
xor
ficompl
mov
push
add
cmp
cmc
add
sub
cmp
fistl
add
xchg
dec
fisubl
add
xchg
add
movsb
add
add
lahf
ds
add
data16
add
add
mov
xchg
out
lods
lds
int3
mov
adc
xchg
in
out
fwait
ja
pop
pop
inc
or
add
leave
aas
dec
addb
mov
xor
daa
cld
sub
push
add
dec
cmp
mov
mov
add
cli
xchg
add
mov
add
mov
pop
sub
add
mov
test
push
add
jp
orl
add
sbb
add
add
mov
mov
mov
addb
adc
add
sbb
add
xchg
addr16
mov
add
cmp
jae
stos
int3
sub
add
add
pop
sbb
or
jne
or
fwait
rolb
pop
dec
ja
inc
inc
add
cmp
add
rolb
mov
push
add
lods
jns
xchg
mov
xchg
nop
add
add
adc
adcl
add
mov
xor
pop
add
dec
movb
mov
dec
lock
test
mov
add
enter
add
add
lcall
add
loop
lods
cmpl
addr16
add
or
add
mov
aam
dec
pop
pop
addb
add
push
add
imul
jl
push
add
add
mov
inc
add
sub
and
jae
jne
cmp
inc
add
push
mov
add
xchg
xor
add
add
sti
pop
jne
sbb
adcl
add
add
mov
in
jo
outsb
ret
mov
outsb
movsb
add
sub
mov
lds
lcall
add
add
add
pop
mov
mov
shll
mov
rolb
add
les
xchg
add
cmp
dec
std
clc
test
push
add
cmp
add
adc
test
push
cmpsb
add
add
dec
ja
lret
gs
jmp
hlt
add
mov
std
add
mov
test
add
mov
inc
add
addr16
gs
or
add
add
data16
or
mov
add
or
mov
add
fcompl
xchg
add
daa
pusha
add
sahf
add
cmp
add
add
js
add
popf
enter
jb
in
fdiv
add
and
mov
out
gs
inc
add
add
add
add
add
or
jp
push
cmp
popf
pop
and
mov
pop
xchg
sub
pop
outsb
pop
ficompl
dec
aam
push
daa
jns
add
setl
mov
jecxz
add
mov
or
pop
ret
xor
pop
lret
adc
icebp
into
pop
data16
test
rolb
adc
pop
push
dec
test
dec
and
in
notl
add
dec
rcll
add
cmp
add
sbb
add
add
push
fchs
add
xchg
or
test
loop
sbb
mov
insb
mov
xchg
fscale
mov
test
sbb
cmpl
add
add
jo
in
mov
das
shll
xchg
add
xchg
add
out
movsl
sysexit
xlat
int
fisttpl
jg
add
add
add
adc
or
cltd
stos
pop
or
add
lcall
add
inc
lods
leave
stos
pop
ror
adc
cmp
sub
cs
jmp
pop
ljmp
pop
stos
or
mov
into
lret
out
addr16
cmc
sub
sbb
add
add
or
add
hlt
add
addb
add
and
ljmp
mov
fldt
sbb
jno
int
aaa
out
adc
and
jo
push
add
push
add
add
dec
into
add
add
sti
add
ds
int3
incl
mov
cld
sbb
add
dec
nop
add
add
jecxz
lds
loopne
decb
inc
add
add
repnz
add
or
addr16
add
cmp
add
bts
push
movb
or
call
and
mov
movsl
add
cmp
xor
adc
mov
add
mov
add
inc
call
mov
add
lahf
movsb
add
out
inc
add
add
test
sub
add
scas
push
scas
xchg
add
dec
scas
jl
adc
mov
cmovo
mov
adc
jge
lahf
outsl
gs
add
mov
add
addb
jne
adc
mov
mov
outsb
test
js
cwtl
out
clc
addr16
ficomps
add
xor
scas
xchg
lods
test
pop
cld
mov
jge
and
pop
mov
and
mov
mov
rolb
mov
add
mov
lret
dec
int
cs
cmp
add
testb
add
jno
add
mov
inc
sldt
mov
popa
out
lea
xchg
add
dec
arpl
lds
cmp
xchg
lods
outsb
pop
adc
adc
mov
mov
stc
pop
add
cmp
add
test
ficompl
std
xor
sbb
add
insb
in
add
xchg
add
add
mov
insl
aad
dec
das
or
jnp
nop
add
add
cmp
fildll
cmp
fwait
xchg
pop
sub
fwait
mov
sbb
orl
add
xor
push
or
dec
pop
adc
imul
add
lret
add
push
mov
movsl
nop
add
sub
sahf
fisubrl
or
cmpsb
add
or
shll
cmpsb
add
adc
lds
add
scas
mov
fldt
mov
lcall
add
in
filds
inc
add
mov
add
mov
push
add
jbe
pop
mov
or
sub
pop
pop
les
out
mov
mov
addb
sbb
add
movsb
add
dec
sub
add
xchg
add
ret
jg
add
or
pop
rcrl
into
call
dec
and
add
add
add
mov
dec
cmc
jbe
sbb
cli
dec
and
add
cmpsl
and
add
add
ljmp
shll
leave
xlat
rolb
add
cmp
imul
add
mov
inc
add
mov
add
push
add
cltd
add
mov
add
cmpl
into
xchg
idiv
ret
add
push
hlt
add
dec
repnz
add
add
add
dec
add
mov
lret
adc
and
add
jp,pn
in
icebp
pop
push
add
lea
jns
dec
cld
and
aas
add
add
mov
jge
pop
call
xor
popf
cmp
popa
pop
mov
repz
push
add
dec
je
jne
lret
stc
jo
cmpsb
add
add
mov
add
or
xchg
adc
test
fwait
rolb
leave
cmp
rolb
cmp
fwait
icebp
adc
lods
js
sahf
sub
das
and
add
sub
pop
out
insl
xchg
mov
jae
orl
sub
add
cmp
pop
out
pop
add
movsl
outsl
ds
add
pop
inc
add
jp
push
mov
insl
xchg
add
loopne
loop
hlt
add
pop
cmp
in
and
cmp
cmp
jo
loopne
fildl
add
mov
add
stc
sbb
pop
or
scas
arpl
add
fisubs
mov
insl
jge
add
das
sbb
popf
and
mov
add
add
add
shll
dec
mov
cmp
inc
add
add
call
add
add
jae
add
push
mov
sbb
add
and
clc
xor
add
aad
sbb
mov
add
xchg
add
mov
jae
inc
add
in
mov
adc
popa
add
add
dec
fistps
add
repz
mov
movsl
mov
cmp
dec
aaa
clc
mov
repz
scas
lret
push
sub
mov
jge
sub
mov
add
in
jmp
mov
add
add
pop
testb
and
jae
add
lcall
cmpsl
bound
mov
add
ja
mov
dec
jno
ds
add
in
ret
jbe
inc
add
les
xor
popa
lds
popa
add
pop
cmc
mov
stc
out
inc
arpl
push
add
or
loopne
imul
add
add
cmpsb
add
hlt
add
add
add
and
in
addr16
xor
add
mov
mov
add
push
add
mov
arpl
cmp
add
add
rolb
mov
fwait
mov
arpl
jns
dec
jmp
add
add
cld
jecxz
add
das
divl
mov
mov
push
add
add
adc
mov
leave
in
stc
push
add
add
jge
jge
fimuls
and
mov
pmulhuw
js
sbb
push
add
rolb
mov
add
and
or
add
add
push
add
dec
xor
xor
add
xor
add
mov
les
cmp
xchg
add
xchg
mov
add
sub
sti
xor
jg
add
add
add
jge
in
xor
inc
add
rolb
rcll
add
add
and
fisttpll
cld
jmp
das
imul
insb
or
add
add
mov
stos
loope
mov
add
bound
mov
cli
jo
addb
fsubr
mov
add
cltd
mov
add
dec
scas
mov
decb
jmp
xchg
cmp
push
add
add
shll
loop
insl
jle
orps
stos
or
leave
push
mov
adc
int
push
cmp
cmp
testl
pop
inc
add
and
add
sub
add
insb
int3
movb
add
mov
movq
sub
add
inc
mov
jbe
popf
scas
push
add
mov
add
xor
imul
add
repnz
pushf
adc
inc
add
add
mov
cmp
add
sbb
cmp
add
add
mov
add
add
xor
fistl
jb
out
push
add
push
insb
jns
xor
cmc
sub
add
add
movsb
add
add
cwtl
call
adc
pop
adc
jae
mov
mov
mov
and
mov
add
lahf
xlat
dec
xchg
hlt
add
add
call
inc
add
xor
enter
add
stos
mov
add
dec
enter
push
mov
dec
aam
and
adc
call
push
add
adc
lea
rolb
fstps
pop
out
xor
mov
jg
xchg
mov
push
mov
gs
out
sub
das
mov
outsb
inc
pusha
add
cs
aad
loop
dec
scas
sbb
ret
mov
testl
inc
testb
mov
and
ja
sbb
add
add
add
cmp
add
bound
mov
add
mov
and
arpl
pushf
pop
mov
pop
leave
ffree
sbb
jo
inc
add
mov
aam
cmp
out
ljmp
add
dec
xor
movsl
ret
cld
aad
mov
cmc
push
lods
push
mov
repz
fidivl
or
pusha
add
outsb
jns
add
add
sti
jae
add
lea
data16
add
mov
inc
lea
es
add
add
jne
add
mov
daa
je
sbbl
push
add
pop
bound
mov
cmp
jge
aam
push
add
sbb
adc
in
mov
add
add
jbe
in
scas
cmp
cmp
add
lfs
lret
mov
testb
add
je
dec
ds
popa
loope
adc
cmpsl
test
add
and
mov
add
push
pop
cmc
aam
cmpl
pop
cvtdq2ps
data16
jl
out
add
push
pop
jecxz
add
lcall
push
add
jno
rolb
sub
jno
loope
ljmp
out
or
flds
insb
insb
cmp
addps
and
fnsave
push
add
add
aad
outsb
mov
add
or
push
clc
xchg
mov
add
cmp
jecxz
add
movsl
lea
dec
xlat
jb
xor
inc
push
test
xlat
adc
addb
adc
je
push
mov
mov
adc
out
mov
adc
cmc
call
lods
xchg
push
loope
mov
loopne
mov
add
mov
int3
cld
add
addb
or
xor
add
and
pop
repnz
mov
ret
add
mov
addb
jns
daa
addb
xchg
add
jecxz
pop
shrl
add
mov
fwait
mov
lahf
sbb
inc
js
icebp
sti
loope
cmpsb
add
arpl
xchg
sbb
cmp
add
loopne
pop
out
aam
int
add
pop
ret
add
aad
scas
adc
pop
gs
fsubrs
sti
in
ret
sti
neg
dec
sub
add
inc
add
scas
adc
fwait
sbb
insl
imul
xchg
and
mov
and
cwtl
dec
xchg
add
sbb
jl
add
add
pop
daa
push
add
decl
into
xchg
add
and
mov
add
jg
testb
cmc
cmp
pop
sbb
add
lds
add
xchg
inc
add
mov
push
or
add
add
mov
xchg
add
les
jno
fnsave
sub
adc
imul
loope
sbb
stc
lret
rolb
mov
sbb
inc
daa
cmc
jns
add
and
xor
inc
add
cmc
pop
lret
push
add
add
bound
mov
dec
test
add
sti
lahf
enter
fs
add
fst
add
insl
push
xchg
cmpsl
cmp
outsl
scas
mov
add
mov
add
add
lcall
add
xor
xchg
out
xchg
add
fisubrl
addb
mov
cmpsl
lahf
fwait
pop
les
rolb
jb
les
cwtl
test
imul
test
movsl
cld
sbb
and
add
add
add
cmpsb
add
add
inc
add
cs
inc
add
scas
test
into
mov
das
ret
add
add
add
adc
inc
add
add
insb
hlt
add
cmp
dec
add
mov
push
rolb
jg
dec
xor
add
mov
add
add
rcrl
xchg
and
mov
cmp
xchg
add
enter
add
mov
pop
fmul
imul
inc
and
add
pop
test
add
repz
dec
lds
add
mov
into
and
mov
inc
cltd
stos
shll
add
add
add
pop
mov
out
aad
jge
loope
fcmovne
cmpsb
add
xor
or
add
sub
add
cmp
add
mov
add
mov
sub
insl
aam
ljmp
ds
fistpll
fcoml
mov
add
dec
push
movsl
loopne
jl
inc
add
add
add
jl
fs
cmpl
lods
leave
sti
and
inc
mov
push
add
pop
imul
adc
add
add
loopne
insb
addb
dec
repz
adc
pop
xchg
add
add
add
sub
push
add
lods
stc
std
mov
repz
add
lds
test
jbe
add
mov
push
add
loop,pn
popa
dec
inc
push
adc
pop
int3
mov
mov
xor
add
push
or
mov
js
orl
add
mov
rolb
dec
dec
push
add
pop
addb
push
add
lods
cmp
add
add
fisttps
xchg
add
add
ds
sub
ja
rcrl
xchg
adc
add
pusha
add
jmp
ret
aas
jbe
jo
movb
sbb
lea
xlat
push
add
mov
cli
mov
insl
push
add
add
pop
xchg
or
xor
lahf
nop
add
add
fcomip
add
mov
add
addb
xor
nop
add
js
arpl
lods
enter
call
fwait
xor
loope
jp
push
mov
fmul
sti
and
mov
dec
daa
popf
add
bound
mov
aam
xchg
add
imul
xchg
add
arpl
mov
mov
js
jmp
shl
ret
lds
xchg
subl
lahf
test
hlt
add
add
sub
mov
and
inc
xchg
pop
mov
add
in
into
stc
mov
or
sbb
add
xorl
mov
add
out
add
mov
std
cmpsb
add
mov
pop
and
add
mov
add
mov
mov
cmp
add
gs
sub
dec
xor
insb
sub
cmc
iret
aam
cmp
cmp
add
add
mov
add
iret
sahf
mov
add
out
xchg
ss
inc
jno
cmp
mov
in
sbb
mov
add
in
xchg
dec
or
add
inc
add
popf
nop
add
gs
in
in
fstpl
add
sbb
mov
mov
mov
pop
mov
pop
insl
pop
xor
or
add
dec
cmpsl
movb
add
je
mov
aaa
jg
sub
cmc
sbbl
pop
add
dec
xchg
add
xor
jb
stos
stc
mov
add
xor
out
and
mov
push
addl
add
dec
add
mov
rolb
add
or
repnz
sti
add
inc
xor
into
cmpsb
add
add
pop
shll
mov
rcll
add
rolb
icebp
mov
adc
mov
jb
sub
insl
out
sbb
dec
mov
out
fwait
dec
dec
or
add
loopne
and
call
push
dec
std
or
push
xchg
lods
inc
add
ja
xor
enter
xchg
cli
jmp
rolb
sub
add
test
add
add
jo
loopne
inc
add
mov
cmp
cmp
add
loop
add
pop
icebp
addb
add
xor
fisubl
add
or
popa
outsb
call
daa
lods
dec
mov
add
jp
add
add
mov
pop
bound
mov
mov
mov
clc
pop
test
aaa
pop
cmp
out
and
popa
mov
mov
and
popa
lret
mov
jae
xchg
add
add
in
dec
ret
lods
daa
stc
mov
movsb
add
add
mov
mov
add
add
sub
xor
mov
jnp
push
pop
xor
jmp
popf
push
add
add
add
push
jecxz
add
add
add
add
dec
push
xchg
add
dec
xchg
je
mov
add
dec
mov
xchg
add
add
je
jp
inc
add
and
int3
popf
mov
repz
add
pop
add
orl
and
clc
sub
adc
popf
add
add
std
pushf
loop
cmpl
add
imul
fwait
or
mov
mov
ja
and
sbb
sub
add
mov
mov
add
add
mov
add
and
addb
xlat
mov
jno
jmp
out
movb
ss
out
sbb
mov
out
lods
mov
fst
add
lcall
mov
add
add
adc
mov
add
mov
fbstp
fistpl
add
aam
or
add
add
and
aas
mov
add
sahf
cltd
mov
mov
mov
dec
jbe
mov
adc
add
jle
gs
in
sub
rcll
cmp
add
mov
pop
nop
add
push
add
jecxz
add
repnz
mov
add
ljmp
add
lcall
jmp
inc
add
mov
add
dec
cmp
mov
and
stos
mov
add
mov
testl
cwtl
xchg
adc
mov
mov
add
pop
jo
xchg
add
filds
xchg
out
fistl
fdivrl
lret
jp
scas
add
sti
hlt
add
sub
jns
or
hlt
add
mov
inc
icebp
jne
cmpsl
jo
cltd
dec
add
test
push
add
mov
inc
rcl
pop
hlt
add
repnz
dec
and
cmp
xchg
add
add
call
add
notl
add
fdivrl
mov
push
add
add
add
addr16
add
jge
sbb
dec
or
sub
lods
or
jecxz
arpl
jae
dec
sub
movsl
sbb
jbe
out
jb
inc
add
mov
dec
outsb
mov
mov
fwait
push
pop
mov
jb
insb
push
add
mov
add
add
mov
out
fsubrl
loopne
lock
add
repz
add
inc
fidivrl
inc
ljmp
or
xchg
scas
xor
sub
lea
outsl
incl
call
ficoml
out
cmp
and
cmc
jae
and
mov
lods
cmp
mov
or
addb
add
mov
movsl
adc
adc
and
mov
push
pop
stos
sbb
add
add
xadd
or
call
xchg
scas
mov
icebp
hlt
add
in
mov
adc
mov
add
inc
add
stc
and
mov
inc
add
add
inc
repnz
mov
add
ret
push
cmpsl
das
stos
lea
pusha
add
or
lock
daa
out
outsb
dec
lea
stos
out
mov
add
lods
cwtl
test
adc
mov
ljmp
addb
sti
add
mov
dec
push
add
sbb
xor
mov
test
hlt
add
add
add
loope
mov
add
cmp
call
rolb
xor
mov
movsb
add
and
add
sbb
inc
jecxz
and
mov
in
mov
or
add
in
je
loop
cld
pop
icebp
sub
adc
add
jle
std
lcall
add
sahf
mov
pop
xor
rolb
add
aas
add
mov
aas
jo
inc
add
divl
push
add
add
fdivr
cmpsb
add
add
sbb
in
xchg
add
bound
mov
mov
call
pop
aad
lds
or
push
les
push
lds
add
add
xchg
sbb
loopne
lock
add
mov
mov
add
add
inc
rolb
dec
cmc
push
add
cmpsl
xlat
xor
sbb
add
mov
mov
addb
jns
sub
xor
lret
and
sub
add
add
add
cltd
push
push
xlat
int3
loopne
movb
jno
jnp
or
arpl
jbe
adc
shrl
mov
inc
add
nop
add
loop
and
and
shrl
insb
mov
jns
pushf
in
scas
xchg
add
jge
add
negl
stos
loopne
lahf
push
fmuls
add
pop
fwait
iret
fistps
outsb
enter
add
out
add
out
data16
add
pop
sbb
mov
xchg
dec
inc
add
leave
pop
sahf
xor
ja
lcall
mov
out
dec
sbb
scas
aam
xchg
mov
in
sub
outsb
push
add
xchg
xchg
pop
inc
add
testb
inc
or
or
daa
add
mov
add
or
sti
jbe
movb
call
decl
movsl
dec
xchg
xchg
add
jecxz
add
incl
outsl
cld
stos
bound
mov
add
push
sub
lea
add
lahf
in
and
sbb
cmc
or
dec
test
add
mov
push
in
cld
xlat
sub
iret
ljmp
push
cli
mov
xchg
add
mov
add
mov
shll
loop
sub
sub
std
xchg
cld
pushf
rolb
xor
mov
in
mov
xchg
add
into
jmp
cmp
cmp
scas
xchg
add
pop
sbb
add
and
dec
mov
icebp
lods
inc
cmpsb
add
pop
pop
aas
and
add
mov
outsb
add
sbb
mov
add
sub
mov
add
pop
popa
push
bound
mov
inc
repnz
add
cmc
adc
cmp
add
andl
mov
mov
push
mov
movb
sbb
add
and
mov
pushf
test
cltd
cld
loop
push
add
add
add
add
mov
scas
mov
add
mov
add
addb
add
cmp
add
inc
pop
jae
movl
mov
xor
test
add
mov
hlt
add
cmpsb
add
add
ljmp
sbb
mov
movsl
push
ds
mov
xor
sbb
pop
test
stos
xchg
add
add
xor
int3
cltd
jb
jp
or
add
lds
sub
mov
aaa
xchg
decl
hlt
add
xor
add
add
add
ret
cmp
add
add
add
loope
loope
mov
mov
push
add
add
pop
loopne
add
add
mov
inc
pop
ds
add
or
in
repnz
add
jmp
nop
add
pushf
xchg
add
pop
cmp
add
add
mov
and
fcmovu
mov
icebp
movsb
add
in
jge
add
add
jle
adc
xchg
enter
add
fcoml
add
add
add
nop
add
std
xor
std
and
mov
adc
mov
add
add
fisubl
js
lods
sub
inc
cmc
out
cmp
add
je
cmp
add
mov
add
add
ss
mov
and
push
pop
adc
mov
sbb
add
or
repnz
push
inc
int
add
xor
and
mov
inc
mov
mov
dec
movsb
add
sbb
lcall
iret
daa
inc
mov
sti
ja
add
mov
pop
or
imul
je
add
push
sub
out
sti
outsb
in
add
inc
add
sbb
ret
add
test
lods
cmp
data16
mov
popa
mov
loope
insb
in
mov
mov
cs
cmp
xchg
add
add
aas
sub
movb
pop
adc
pop
adc
or
mov
mov
and
mov
jp
push
add
adc
js
add
mov
push
pop
jnp
into
push
add
or
sbb
jno
add
testb
add
orl
sarl
mov
push
add
cmp
cmp
dec
push
test
push
add
mov
mov
mov
fildll
add
adc
das
in
dec
mov
cltd
sub
add
add
lret
fs
jl
mov
movsb
add
xor
mov
subps
add
add
add
mov
repnz
add
enter
push
add
xchg
or
add
cltd
out
addb
mov
jnp
push
in
arpl
add
dec
lea
add
mov
sti
jge
fimuls
add
add
mov
add
jnp
or
mov
lret
movsb
add
cmpsl
cmp
or
das
cld
out
mov
lret
jmp
sbb
leave
ds
xor
and
mov
add
and
dec
mov
and
xchg
add
add
add
mov
test
lea
add
add
push
add
mov
stos
dec
inc
stos
xor
nop
add
xchg
add
les
ret
push
xchg
add
in
rolb
leave
js
test
jno
add
add
add
call
pop
add
mov
add
mov
mov
stos
add
adc
or
insb
dec
pop
mov
jecxz
pop
dec
out
add
cmp
je
hlt
add
testb
add
icebp
outsb
icebp
jnp
and
jae
idiv
testl
iret
mov
scas
pop
dec
lods
dec
decb
xchg
pop
inc
push
add
ret
mov
jmp
cmp
add
add
add
add
or
sbb
push
add
sub
mov
jns
test
add
cmpsb
add
or
loopne
cli
inc
xchg
add
mov
cmpsl
pop
push
add
mov
addl
push
leave
cltd
lds
add
pop
into
push
cli
lods
std
add
mov
push
ds
je
or
add
std
dec
mov
inc
sub
add
sbb
jnp
lret
negl
loopne
inc
add
cmpsb
add
jl
mov
mov
xor
add
add
mov
test
mov
loopne
mull
add
add
fsubl
gs
lods
xor
jns
mov
add
dec
jbe
adc
aam
negl
out
fdivl
or
stos
jb
mov
jmp
push
add
mov
popa
incb
pop
adc
inc
fdivrp
push
add
lret
sub
add
add
push
jp
add
imul
repz
add
fbstp
xchg
add
inc
xor
xchg
cli
add
iret
add
mov
add
rolb
daa
inc
add
out
sub
fistpl
add
scas
or
add
adc
add
add
push
inc
add
idiv
mov
enter
addb
lods
add
jmp
mov
into
xor
push
add
add
jns
add
mov
cld
ja
add
fstps
jns
dec
dec
lgs
dec
mov
inc
add
add
ud1
push
add
test
push
add
cld
xlat
insl
inc
push
pop
adc
addb
cmp
add
push
fwait
out
mov
cmp
push
and
dec
sbb
lds
pop
cmp
push
add
jl
add
add
mov
leave
andl
mov
dec
dec
testb
cmc
adc
add
mov
and
mov
add
mov
shll
movb
fsubrs
add
and
sub
fstpl
add
push
add
test
add
and
aam
push
test
movsl
cmp
add
add
push
add
push
add
sub
ljmp
xor
add
xor
fmuls
add
add
mov
enter
lahf
ds
mov
imul
jg
mov
pop
pushf
sub
push
xchg
add
add
sbb
test
inc
popa
inc
add
add
sub
push
loope
xchg
cmp
lahf
outsb
mov
add
sub
add
add
ljmp
mov
add
call
sub
mov
add
add
fmuls
jno
pop
nop
add
add
test
stc
mov
xchg
add
iret
mov
movb
mov
jbe
in
add
test
add
xchg
add
pop
fdivl
add
push
xlat
aam
insl
hlt
add
add
mov
sub
mov
fisubrs
addb
add
call
or
adc
das
std
or
mov
fistpl
lcall
xchg
ljmp
jo
cmp
pop
dec
adc
add
pop
loopne
and
mov
sub
add
add
fimuls
mov
cmpsb
add
aas
call
or
out
add
std
out
pop
cmc
jmp
ljmp
push
add
mov
or
mov
dec
add
dec
mov
repz
jg
cmp
and
push
add
xor
scas
jle
add
pop
lods
mov
xor
maxps
cmp
lods
add
xchg
sbb
ljmp
dec
inc
add
push
add
addr16
imul
add
add
mov
pop
or
mov
bound
mov
stos
lret
rolb
add
mov
mov
add
inc
outsl
loopnew
jecxz
loope
clc
fldenv
push
add
dec
and
mov
or
jne
scas
stc
inc
add
lods
push
add
jnp
ljmp
add
imul
add
outsb
push
xchg
and
mov
movb
fisttps
or
add
add
xor
mov
aad
test
rolb
inc
add
sarl
pop
ljmp
jl
mov
roll
cld
pop
into
mov
pop
adc
sbb
nop
add
test
lret
cmp
xlat
popf
jecxz
xchg
cmpsl
addb
add
cwtl
and
movsb
add
cmp
sub
mov
mov
add
or
add
mov
test
js
add
add
push
pop
js
push
add
add
stos
fisttpll
add
xor
mov
out
repnz
inc
jle
add
mov
fwait
sub
add
xchg
cmpsl
push
mov
add
std
addr16
pop
je
cmp
add
cltd
arpl
or
xchg
ja
loopne
jbe
leave
je
movsb
add
pop
mov
lock
lcall
mov
cmp
mov
rolb
cmp
xchg
add
xchg
inc
add
test
add
sbb
je
mov
repnz
mov
add
adc
fwait
pusha
add
mov
add
add
iret
or
add
loope
pop
popf
mov
popa
push
pop
push
add
addl
rolb
sarl
add
popf
sbb
lds
arpl
pushf
addr16
ds
sub
add
add
mov
mov
pusha
add
cwtl
out
push
add
add
add
add
xchg
mov
or
call
gs
mov
add
hlt
add
repnz
arpl
add
rolb
movl
push
stc
mov
add
add
add
and
mov
addb
add
dec
fwait
sbb
in
fidivs
in
lds
add
add
gs
outsl
jl
add
fnsave
add
test
pop
test
dec
jp
testb
stc
xlat
daa
sahf
push
xchg
dec
pop
add
mov
and
inc
add
hlt
add
mov
movb
pop
imul
xchg
or
outsb
popa
cmp
das
cmp
orl
mov
add
add
cmpsl
or
dec
and
js
add
add
fcmovne
inc
and
jp
add
add
add
add
rolb
add
add
inc
add
dec
popf
lea
in
inc
add
add
add
fsubs
xchg
inc
add
lock
add
add
add
push
add
lret
fstl
popf
rolb
dec
int3
cwtl
inc
push
push
inc
add
or
mov
add
test
or
and
cmp
add
repz
xchg
lock
les
add
mov
add
dec
add
mov
mov
sbb
mov
xchg
add
push
fdivp
add
addb
add
cmpsb
add
imul
cmp
cmp
cmp
dec
xlat
and
add
add
add
add
pop
movsb
add
mov
jl
lods
rolb
xor
add
add
add
pushf
fists
add
repnz
addb
xchg
add
sahf
dec
dec
lret
add
pusha
add
clc
add
add
add
push
aam
movsb
add
daa
inc
jb
insb
or
ret
sub
mov
or
add
add
loope
add
mov
add
adc
int
add
add
mov
or
cmp
push
add
inc
add
or
xor
add
gs
pop
out
popf
pop
jns
jae
jmp
out
add
loop
mov
jmp
sbb
jo
mov
jno
movb
lds
outsl
iret
rolb
les
sub
insb
xchg
mov
dec
clc
mov
ljmp
leave
jo
bound
mov
add
jo
inc
add
inc
add
sub
or
sub
adc
add
and
mov
xchg
add
mov
add
add
out
sbb
pop
xlat
call
sub
repz
arpl
insb
icebp
nop
add
add
sbb
sti
movsl
int
lods
mov
jge
xor
sbbl
jg
lcall
add
fisttpll
rcrl
mov
cmp
repz
add
add
cmp
cmpsl
aaa
pop
adc
test
add
add
jno
ret
mov
lock
lds
add
iret
dec
sub
ss
add
xchg
add
mov
movb
xchg
sbb
add
add
add
push
mov
push
nop
add
add
jo
mov
add
dec
gs
inc
movsl
out
outsl
addl
sahf
or
sub
add
cwtl
data16
sub
sahf
dec
mov
loopne
dec
fldl
adc
jge
add
xchg
mov
push
mov
out
fisubrl
movsb
add
add
or
xchg
adcl
cmc
inc
add
add
pop
and
xchg
add
movb
cltd
push
add
pop
mov
pop
push
lock
inc
lcall
loop
cwtl
xchg
add
add
mov
psrad
inc
add
sub
insb
cmc
imul
ficomps
js
inc
mov
movsb
add
push
add
lods
cmovs
jecxz
mov
xor
hlt
add
sbb
mov
cltd
mov
jnp
sbb
dec
push
fidivs
add
inc
iret
insl
jae
inc
popf
cmpsl
cmpsb
add
add
fcomi
sarl
int
push
add
cs
jle
outsl
in
mov
cmp
dec
stos
xchg
add
or
inc
pop
loopne
icebp
and
mov
rcrl
xchg
add
xor
add
in
cmp
pop
lcall
add
inc
add
push
add
add
into
cmpsl
mov
outsl
icebp
hlt
add
add
rolb
and
mov
add
add
out
sub
push
mov
into
jge
add
mov
add
mov
cltd
mov
adc
insl
sub
cltd
lret
aam
and
addb
push
add
add
xchg
add
cmp
inc
cmpsl
mov
jb
iret
add
mov
push
mov
add
js
add
add
addr16
cmpsl
jnp
cmp
pop
xchg
cmpsb
add
cmpsl
orl
repnz
add
xor
xchg
test
add
push
adc
add
sub
xor
add
stos
xor
mov
cmp
xor
popa
dec
dec
mov
fadds
ret
pop
adc
gs
sub
je
out
add
add
add
add
dec
js
add
add
mov
add
outsl
inc
lods
push
add
add
add
outsb
or
add
arpl
orl
and
add
jb
mov
add
cmp
inc
add
test
je
dec
das
lods
fcoml
in
mov
lret
add
pop
movsl
xchg
sub
push
add
cwtl
cmp
mov
add
vpcmpgtb
xchg
add
dec
sbb
add
insb
mov
push
cwtl
in
add
dec
pop
fbstp
dec
dec
lret
mov
call
push
or
add
fisttps
rolb
scas
incb
adc
and
mov
add
add
mov
push
add
lcall
adc
add
test
fst
pop
mov
movsl
aaa
icebp
xchg
add
mov
push
add
add
test
nop
add
shrl
jbe
and
push
add
add
test
pop
mov
imul
adc
test
add
add
fstpl
add
pop
dec
cmp
add
mov
push
pop
mov
subl
gs
mov
imul
jg
shl
push
add
movb
xchg
adc
mov
das
into
int3
sahf
leave
fs
add
mov
das
cwtl
mov
add
enter
mov
add
out
nop
add
ret
mov
add
add
sub
dec
dec
outsb
pop
push
add
add
sbb
adc
jns
adc
das
pushf
icebp
in
stos
outsb
mov
idivl
jno
add
lods
inc
add
call
movsl
les
inc
add
add
push
add
mov
push
add
mov
sti
repnz
add
add
addr16
or
push
add
mov
mov
cli
mov
push
sahf
lods
stc
inc
add
mov
stos
push
add
ficoml
add
aaa
add
lock
add
lea
arpl
mov
mov
popa
stos
lcall
add
add
test
out
dec
fiadds
mov
jno
add
decl
push
repnz
add
xchg
into
mov
push
xchg
add
inc
add
add
cmp
cmp
addl
test
add
add
nop
add
xchg
gs
jl
xchg
mov
les
sti
addb
add
frstor
addl
fwait
sub
add
icebp
pop
rorl
add
lods
add
add
add
add
and
divl
add
pop
jno
ja
or
and
mov
hlt
add
fidivrl
mov
push
xor
sub
add
inc
add
mov
stos
pop
or
pop
sbb
scas
cmp
push
add
inc
add
add
mov
add
addr16
add
adc
movb
mov
add
or
dec
cmp
mov
in
loope
mov
add
int
add
mov
xchg
and
mov
mov
push
add
add
ja
add
mov
mov
stos
xchg
inc
add
cmp
clc
pop
mov
pop
mov
mov
mov
add
mov
mov
loope
dec
or
add
add
add
mov
pop
sbb
dec
mov
add
scas
aam
adc
icebp
imul
mov
add
pop
cmpsl
enter
rolb
jmp
mov
add
inc
mov
add
add
jg
pop
pop
pop
jbe
rolb
add
enter
cltd
adcl
mov
adc
add
pop
popf
fwait
pop
lods
leave
lea
jno
mov
call
dec
xchg
lods
iret
jmp
mov
add
push
add
add
stos
or
mov
add
add
inc
add
dec
ds
xchg
add
out
stos
inc
fprem1
push
data16
test
nop
add
pop
lods
cmp
xchg
movb
sahf
idivl
ficoms
stc
sbb
ret
loope
mov
les
int3
pop
jnp
int
sub
xor
jg
add
jmp
add
or
addb
or
add
mov
add
mov
add
sbb
sbb
adc
add
fimull
and
sub
cmp
loop
fcomp
repnz
int
sub
data16
sub
popf
ret
stos
xor
inc
add
add
add
add
add
add
add
add
add
adc
lods
lret
add
lret
mov
mov
popf
push
add
inc
add
inc
add
imul
sub
jae
mov
mov
out
pop
stos
xorl
mov
xchg
xlat
add
das
enter
add
je
or
pop
xor
add
add
mov
cltd
pop
test
jmp
mov
das
fwait
xor
mov
add
add
add
add
addb
stos
dec
pop
addb
xor
mov
cltd
inc
inc
pop
add
mov
je
mov
push
hlt
add
add
add
mov
xchg
out
mov
add
add
add
stos
cmp
jb
push
add
aaa
fisubrs
fnstsw
push
add
add
add
aam
shl
lcall
xor
out
ds
dec
pop
arpl
test
add
sti
ja
aas
outsl
push
add
add
sub
add
add
insl
test
add
je,pt
in
cmp
lret
ljmp
mov
pusha
add
add
add
mov
fucomi
sbb
lods
cld
cmp
jb
sbb
xchg
popa
daa
mov
jmp
test
movsb
add
repz
leave
inc
add
add
add
jnp
movsl
fimull
imul
dec
lcall
cmp
fsts
ficoms
hlt
add
add
leave
aaa
ds
popa
mov
push
pusha
add
mov
push
lcall
pusha
add
or
add
add
mov
mov
add
add
pop
mov
xchg
nop
add
pop
movb
add
enter
add
aam
loope
in
xchg
xchg
add
ret
add
add
cmp
cltd
sbb
add
