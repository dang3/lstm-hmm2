in
lret
dec
nop
cs
popw
jle
cld
outsl
xor
pop
icebp
dec
or
mov
jae
sar
loopne
mov
inc
add
icebp
int
pusha
add
sahf
les
test
adc
in
pop
adc
out
shl
outsl
mov
jnp
rolb
add
sbb
xlat
xchg
cs
and
addb
scas
add
jbe
shrl
test
cmp
mov
xor
add
adc
push
cli
and
inc
add
leave
fwait
mov
outsb
mov
js
ret
jp
addb
mov
sub
scas
jmp
mov
add
out
out
mov
imul
jbe
inc
add
pushf
add
push
insb
jmp
adc
ljmp
mov
aas
cmpl
sub
aaa
push
js
or
sti
lret
or
aas
sbb
dec
xchg
cmpsl
lds
jbe
fwait
dec
addb
add
dec
cpuid
jp
jnp
sbb
out
pop
and
jae
pop
mov
add
cltd
lea
test
xchg
adc
cltd
xor
or
mov
roll
push
add
and
mov
pop
insb
mov
xchg
xor
xchg
xchg
sbb
test
lods
xor
rolb
xchg
jb
stos
test
cmc
pop
fs
scas
pop
cmp
cmp
cmpsb
ja
fadds
add
in
in
sub
mov
xor
paddsw
push
pop
push
fistl
cmc
adc
adc
jmp
hlt
das
enter
inc
and
gs
xchg
cli
pop
sbb
add
js
loope
gs
or
inc
add
inc
add
movsl
mov
jno
sub
stc
and
rolb
int3
xlat
inc
in
cmp
jg
dec
mov
push
lea
stc
dec
jp
mov
xchg
add
aas
test
test
inc
dec
aaa
dec
xchg
outsl
lods
iret
push
xlat
adc
movsl
dec
rolb
jne
add
jb
cmp
jns
push
lock
push
sub
and
out
out
push
mov
jl
in
ljmp
mov
pop
mov
inc
add
add
stc
rcrb
xchg
cltd
dec
mov
lods
inc
add
mov
jnp
adc
jp
jg
clc
or
cs
add
dec
add
or
lcall
and
movb
sbb
push
inc
add
inc
jp
xor
pop
je
jl
add
adc
push
mov
mov
push
popf
or
or
or
dec
mov
sbb
stos
xchg
adc
cmp
mov
xchg
fwait
and
mov
fidivrs
or
mov
jg
push
sub
outsb
lock
mov
jg
pop
mov
and
mov
dec
shlb
faddl
add
or
adc
mov
mov
sub
arpl
imul
push
stos
fnsave
in
je
aad
add
push
dec
push
pop
movsb
inc
add
outsl
loop
js
push
pop
xchg
push
mov
add
cmp
add
add
mov
cmp
sbb
push
in
add
dec
test
clc
rep
pop
dec
dec
or
add
pusha
add
loop
xchg
add
mov
jg
mov
add
and
mov
hlt
mov
pop
jns
add
jns
push
add
add
xor
lods
xor
mov
add
mov
movb
scas
arpl
pushl
es
mov
dec
mov
add
lcall
gs
xlat
jae
cld
cmp
stos
dec
dec
call
fwait
sub
jo
loop
js
cs
lock
in
outsb
fwait
out
add
pop
daa
sahf
imul
add
sbb
xchg
ja
xchg
sbb
insl
dec
push
out
in
add
out
adc
ret
outsl
mov
shlb
add
dec
idiv
xchg
xchg
sbb
push
jmp
sub
ds
lods
sbb
add
add
push
lods
movb
add
cmp
data16
add
lea
pop
inc
add
aas
adc
xor
push
adcl
popa
out
popf
jp
mov
inc
add
mov
stos
fs
andl
add
sahf
mov
jno
jp
call
call
xor
mov
dec
hlt
insb
paddsb
pop
inc
jecxz
and
pop
sbb
nop
adc
add
fists
mov
lret
test
lea
cmp
jle
rorl
add
loopne
cmpl
lods
mov
fstps
out
pop
lret
xor
push
add
push
dec
adc
sbb
pushf
mov
lret
sub
ljmp
push
enter
hlt
dec
out
xor
cli
outsl
fmulp
data16
addb
mov
inc
add
add
sbb
adc
jns
xor
sub
in
and
in
mov
aad
js
outsb
testb
add
mov
je
stos
dec
lock
pop
inc
add
arpl
mov
dec
loop
or
add
clc
mov
mov
add
add
mov
lea
sti
mov
fcomi
push
xor
in
jl
lcall
mov
push
add
fs
mov
sub
imul
dec
jg
jnp
dec
inc
add
leave
xchg
mov
ljmp
movb
sub
sbb
jae
push
dec
sub
adc
adc
scas
jnp
mov
ljmp
out
inc
or
jb
out
dec
inc
ja
add
andl
cmc
mov
addb
adc
jno
jg
xlat
fxch
bound
out
scas
mov
movhps
xchg
sub
jbe
mov
jae
and
dec
pop
push
dec
jns
mov
add
in
sbbl
push
punpckhbw
xor
cmp
iret
add
mov
sub
add
add
movsl
add
loopne
call
xchg
jnp
repnz
repz
add
ljmp
test
in
ss
lret
jb
cmpsb
arpl
cwtl
aaa
or
pop
das
inc
adc
stos
into
lret
aaa
loop
mov
sbb
push
out
lahf
inc
xchg
das
out
loope
mov
adc
cld
call
xor
jns
add
add
rcll
test
andl
dec
outsl
stos
mov
add
sub
push
dec
movsb
jb
jmp
imul
sahf
mov
lods
inc
mov
test
stos
subl
xor
ficoml
push
sub
stos
jae
mov
pop
dec
sbb
bound
popf
les
sub
and
xchg
dec
mov
jno
ljmp
gs
mov
daa
or
ficomps
popa
inc
inc
add
rorl
and
stos
and
fcompl
inc
mov
fnstcw
fld
movsl
sub
ret
mov
sti
iret
call
movb
int3
out
sahf
sahf
jae
sbb
mov
rolb
adc
push
ja
inc
inc
add
int
add
add
movb
mov
pop
mov
add
inc
movsb
add
fadds
add
add
shl
pop
divb
iret
mov
int3
push
mov
rolb
add
sarl
lcall
push
lods
popa
idivl
mov
int
and
pop
fildll
mov
mov
fcmovu
sahf
sub
xor
xor
jns
add
lods
dec
adc
add
std
insl
outsb
adc
xor
mov
push
cmp
sbb
jl
mov
xchg
xchg
cmp
add
dec
setge
addb
xor
add
call
push
call
or
mov
scas
and
adc
add
cmp
fdivr
sub
push
push
lahf
pushf
movsb
addl
out
in
mov
jbe
adc
add
arpl
or
in
mov
add
push
mov
fidivrl
iret
sbb
ss
sub
and
xor
xchg
fwait
movsbl
sub
clc
add
sub
mov
xchg
mov
sarl
or
pop
mov
rorl
movb
or
pusha
add
add
jne
push
add
in
jle
push
add
dec
addb
daa
pop
mov
push
fstl
sub
jle
pop
stos
je
push
sbb
sti
dec
cmp
and
filds
in
cmp
cmpsb
pop
ret
and
test
mov
cmp
mov
loopne
adc
and
sbb
mov
cmpsl
fidivrs
or
add
movsb
es
jp
jnp
add
sub
or
test
inc
mov
es
add
in
xor
fnstcw
lahf
or
mov
mov
cli
shlb
fwait
push
pushf
into
scas
xor
lock
add
fildl
dec
cmpsb
mov
pop
sbbl
adc
call
mov
mov
je
pop
hlt
test
push
dec
test
movb
lret
int3
mov
addb
and
mov
icebp
and
sbb
imul
pushf
xchg
mov
xlat
add
adc
push
adc
add
pop
adc
adc
jle
or
std
push
loop
jno
mov
cld
icebp
cltd
div
add
jmp
jne
or
sti
call
icebp
pop
xor
and
mov
and
inc
add
mov
add
fidivrs
fsubrs
aaa
ja
test
sbb
lret
and
test
and
push
cwtl
fbld
mov
or
movb
idiv
lret
sahf
pop
mov
or
xchg
pop
sub
mov
loop
pop
mov
ror
push
mov
sbb
jl
cli
ds
pop
enter
pop
jl
out
adc
add
push
jmp
xlat
fsubr
adc
jl
push
cld
add
and
sbb
arpl
icebp
das
mov
cmpsl
ss
loop
jp
dec
xchg
mov
mov
and
std
sub
xor
sbb
fcomps
enter
push
lahf
sahf
push
retw
xchg
pop
adc
out
cmp
je
dec
dec
iret
aaa
pop
lret
add
add
add
arpl
and
add
outsl
stc
adc
jae
clc
mov
push
mov
pop
and
add
fnstsw
movb
jnp
push
icebp
sbb
popf
push
add
aam
in
xchg
add
arpl
xchg
lods
jg
nop
into
jp
icebp
pop
and
ror
into
enter
cmp
aam
addr16
pushf
xchg
jne
shll
jl
push
jne
sar
add
and
loopne
cmpsb
adcl
mov
add
addb
add
sbb
inc
mov
daa
mov
std
aam
scas
js
xchg
fcomps
inc
sub
dec
movb
fdiv
xchg
clc
js
jo
ret
outsb
mov
cltd
test
and
add
movsb
ret
adc
out
clc
xor
gs
dec
aad
and
add
jmp
push
add
sbb
sbb
sub
dec
sub
add
cli
cmp
dec
mov
roll
add
loop
lds
test
push
cltd
ficomps
add
int3
cmp
stc
jge
sbb
and
xor
sub
mov
push
aas
mov
add
sbb
xor
pusha
add
mov
mov
popf
or
cmp
and
aam
add
in
jns
xchg
add
das
aam
lods
or
negb
fistpl
mov
scas
fdivl
popf
aad
add
xor
js
por
mov
add
mov
out
push
add
ja
xchg
xchg
xchg
sarl
lock
add
outsl
xchg
inc
fdivrl
pop
push
scas
dec
js
mov
inc
add
rcl
in
mov
out
mov
add
test
sbb
fidivrl
pop
jbe
xchg
and
int
cmp
fcompl
and
mov
xchg
mov
pop
push
imul
arpl
jb
adc
or
les
loop
aam
or
pop
sbb
jecxz
leave
addb
aaa
outsl
mov
pop
sbb
pop
mov
xchg
movsl
push
jbe
adc
cmp
push
inc
xchg
icebp
shrl
cmp
cmc
divl
lar
lods
imul
js
jno
or
adc
inc
jl
jb
and
add
sub
pop
add
sub
repz
jecxz
rcr
mov
imul
add
jmp
inc
add
rolb
lret
and
fs
fsubrs
ret
loop
mov
das
push
add
fdivs
cwtl
rcrb
mov
push
pusha
add
push
xchg
and
dec
int
xchg
cmp
scas
fisubrs
cwtl
shrb
sti
add
add
add
inc
add
loope
and
xchg
popa
ret
push
mov
cmp
imul
aad
sbb
cs
dec
push
js
mov
adc
xchg
add
fstpl
das
dec
test
aad
testb
mov
popf
arpl
add
stc
xor
insl
jg
push
add
cs
rorl
pop
addb
rolb
and
mov
jmp
ret
mov
icebp
cmp
xor
cmpsb
mov
push
movsl
scas
negb
cmp
sub
push
cmp
add
push
or
std
addr16
mov
lods
fistl
icebp
sahf
imul
lods
xor
add
bound
int
add
push
es
jno
sub
push
sbb
ljmp
insb
outsb
jno
mov
rol
fsubrs
adc
fildll
neg
push
add
cmp
mov
cltd
lods
add
and
movsl
adc
adc
arpl
in
icebp
adc
enter
mov
leave
push
inc
add
add
inc
out
int
push
add
and
cmp
add
xor
lock
lcall
mov
or
add
xor
push
add
mov
ljmp
cwtl
jp
clc
dec
inc
jns
sbb
add
mov
or
xchg
jnp
or
sub
ljmp
pop
mov
mov
aam
inc
iret
and
mov
pop
in
adc
jmp
les
mov
dec
leave
testl
xor
add
dec
ds
inc
add
aad
pop
mov
push
test
pusha
hlt
shrl
mov
sub
push
push
push
cld
call
sub
mov
imul
es
ss
lea
push
push
push
call
cmp
je
mov
lea
push
push
es
call
jmp
icebp
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
lea
sub
xacquire
mov
sub
mov
cs
push
push
lret
jmp
add
add
lea
add
pushf
push
and
test
out
aam
dec
xchg
xchg
sbb
scas
aad
in
jae
cmp
sub
add
sub
or
inc
mov
fmul
adc
dec
cltd
mov
dec
mov
scas
add
inc
add
incl
js
mov
repnz
inc
outsb
movsb
lods
push
fldcw
sbbl
fimuls
pop
cli
insb
adc
sub
add
pop
dec
fildll
test
test
mov
rolb
and
inc
sbb
in
jne
xchg
imulb
mov
into
ss
mov
jmp
pushl
scas
les
icebp
push
push
jmpw
xchg
shlb
add
pop
push
and
sbb
shlb
jo
int
mov
cmp
sub
ficoms
dec
pop
mov
cli
jle
adc
and
fistpl
mov
add
pop
xor
pop
fistpll
in
testb
xchg
add
aas
scas
and
add
in
out
pop
in
ljmp
mov
adc
decb
and
addb
scas
enter
pop
jns
push
and
sub
pop
test
lret
pop
jae
mov
movsl
xor
mov
mov
push
push
add
xchg
test
add
add
jb
fcmove
fmull
test
lahf
xchg
cmpsl
loop
mov
or
popl
push
pop
pop
or
jge
and
fwait
mov
test
or
or
test
dec
cs
inc
add
add
scas
lods
cmc
cmp
add
daa
aas
shr
mov
fldl
sbb
mov
sub
cwtl
sub
rolb
movsb
xchg
mov
lods
xchg
rcl
sbb
mov
jp
push
add
xchg
fsub
sbb
jl
cmp
test
imul
insl
cmp
xorl
gs
movb
addb
dec
icebp
negl
cltd
ret
jmp
jmp
mov
inc
add
sahf
dec
push
fucomp
xchg
sub
lea
and
dec
pop
popa
gs
cmpsb
xchg
inc
lock
add
sti
aas
pop
jg
push
and
test
jnp
add
stos
cmp
lea
adc
mov
jmp
cli
xor
add
lods
dec
insb
and
cmc
loopne
or
xchg
push
add
or
addr16
inc
mov
mov
push
xor
pop
adc
jmp
jnp
aam
fs
push
imul
cwtl
addb
xchg
mov
xchg
pop
pop
clc
fldcw
xchg
cmp
jle
inc
add
pop
insl
mov
add
xchg
jle
fcmovne
mov
ja
or
xchg
addr16
xchg
sbb
jle
or
cmp
iret
mov
xor
fld
push
stos
push
loope
dec
inc
add
outsl
sub
inc
xchg
fs
test
adc
lret
lea
mov
jmp
addb
push
jl
add
jns
jg
add
xchg
nop
cmpsb
stc
push
fidivrs
mov
mov
bound
mov
movsb
clc
fdivl
dec
add
imul
sbb
fisubrl
fidivs
and
xchg
xor
int
push
add
pop
cmpsb
push
or
add
leave
push
test
lds
sti
cs
imul
add
cmp
xchg
imul
js
inc
stc
inc
add
cmp
mov
rolb
sar
adc
ret
jl
xor
frstor
or
xchg
leave
in
push
pop
jb
dec
mov
test
lahf
mov
or
dec
adc
mov
pop
push
mov
sbb
pop
aam
cli
sub
test
movsl
clc
pusha
add
rolb
push
jno
movb
sub
add
xchg
or
xchg
fcomi
inc
divps
add
shll
ljmp
push
jo
sbb
add
lcall
xchg
xor
or
ret
test
cmp
xchg
xchg
popa
xchg
dec
mov
push
dec
scas
int
cmpsb
rcrl
mov
scas
sub
add
loopne
inc
add
dec
js
or
in
negb
push
outsb
out
pop
xchg
lcall
mov
call
mov
imul
push
pop
jle
sti
adc
outsl
add
mov
sti
popa
push
push
fs
mov
xchg
sti
mov
mov
lret
mov
or
repz
bound
int
cmp
lret
dec
test
int3
jl
jb
rorl
lods
dec
and
add
sub
push
mov
mov
mov
mov
mov
out
jg
add
mov
int
fiadds
sbb
sub
outsb
rcl
mov
das
and
sbb
loop
xchg
fs
sbb
inc
add
mov
int3
loope
mov
popf
scas
addb
push
mov
xor
jmp
add
lcall
push
dec
std
add
push
test
addb
pop
xchg
push
cmp
sti
in
mov
fisubs
and
inc
add
pushf
lahf
cmpsl
pop
fwait
ds
repnz
pop
xchg
push
pop
in
jmp
inc
cld
mov
jl
xchg
add
pop
sub
cld
pop
mov
push
pop
inc
dec
adc
outsb
repnz
pop
xor
leave
lret
sub
cli
jmp
mov
sbb
repnz
and
mov
cld
pusha
add
cmpsb
or
inc
add
shrb
cmpsl
stc
jge
negb
test
xor
daa
cmp
sarl
or
mov
in
add
xor
push
jns
xchg
xor
aad
int3
dec
push
mov
inc
add
adc
dec
pop
xchg
out
push
sub
push
or
lods
arpl
fwait
mov
in
jp
lcall
mov
xor
addb
lods
mov
add
jae
pushl
divb
in
pop
inc
add
popf
inc
jg
lret
lahf
mov
gs
cmp
dec
sub
jp
mov
inc
test
add
mov
and
ret
add
loopne
push
lahf
nop
or
push
mov
ret
lret
mov
pushf
test
in
bound
inc
add
movsb
arpl
sbb
das
inc
add
sub
add
aaa
sbb
das
addr16
stos
cmc
jb
cmc
scas
cwtl
push
mov
cmp
out
lods
test
shll
in
add
or
mov
sahf
jo
sahf
je
and
add
xchg
ret
inc
xchg
mov
scas
ss
sbb
dec
lahf
add
stos
pushf
lahf
shll
jns
push
add
mov
sub
out
lds
pusha
add
cmpsb
out
mov
ret
leave
dec
imul
loope
test
roll
xchg
cmp
negl
ljmp
add
add
pop
test
lcall
scas
in
sub
lock
sti
sbb
pop
mov
add
add
rolb
xor
adc
ja
xchg
lcall
clc
ficomps
push
mov
arpl
insl
imul
jg
repz
dec
cmp
xor
mov
sbb
add
punpcklbw
shl
lcall
out
loopne
add
xor
pop
jp
xchg
lret
js
jmp
sub
dec
stos
jmp
adcl
jle
sub
call
cmp
jbe
pop
addb
stc
cmp
pop
jne
or
orl
fs
loope
dec
cmp
insl
dec
pop
js
jno
jecxz
adc
cltd
sti
pop
xchg
pop
push
push
pop
jge
jl
mov
mov
lret
lret
mov
mov
int
add
lahf
hlt
mov
or
rcr
jo
sub
mov
out
sbb
cmc
mov
add
jmp
imul
xor
in
inc
add
jne
add
sub
mov
loop
push
cmp
sbb
add
mov
rcll
popa
icebp
sti
mov
sbb
insb
inc
add
push
pop
and
or
in
mov
lahf
lods
sub
ljmp
mov
push
fiaddl
add
push
push
test
sub
and
fcmovb
mov
js
lods
incl
add
les
inc
add
jp
lock
iret
xor
bound
and
mov
dec
inc
ficoms
repz
rolb
or
ret
jo
pusha
add
add
add
nop
leave
cmpsb
xchg
negl
jae
pop
ljmp
repz
cmpsb
decb
sahf
in
nop
mov
dec
sbb
cmp
mov
jnp
jne
jmp
dec
daa
xchg
fsubrl
mov
or
sbb
push
outsl
rolb
push
stos
mov
mov
add
push
jl
inc
add
shll
testl
ficomps
cli
or
add
les
pop
mov
ror
mov
push
test
enter
jmp
mov
push
add
lods
mov
xchg
dec
dec
je
dec
in
push
jp
negl
add
cld
adc
aaa
call
adc
push
lods
popf
and
inc
dec
add
jmp
gs
les
nop
jno
stos
jmp
push
mov
lcall
lret
test
mov
or
rolb
iret
out
mov
add
add
or
jnp
inc
add
and
jae
das
pop
movsb
add
aaa
cltd
push
jb
addr16
adcl
mov
xchg
paddsb
push
fcoml
je
add
xor
je
sbb
sub
out
mov
fildl
outsb
rol
add
add
nop
cmp
lahf
mov
movsl
jns
in
leave
push
jbe
xchg
ret
movb
aad
cmp
loop
push
addb
sarl
push
lds
js
ret
sbb
test
cmpl
movb
nop
push
insb
addb
setno
xchg
mov
push
jp
pop
test
add
pop
cs
mov
xor
fcoms
mov
pop
loopne
lea
sub
test
inc
cwtl
mov
enter
inc
add
pslld
sub
mov
add
mov
cmp
add
rcl
jge
fisubrs
jge
jp
xlat
fstpl
jnp
add
jp
pop
lods
push
dec
popa
clc
fcmovne
insl
cmp
mov
jge
in
add
or
cmp
fcompl
jg
insl
je
addb
fildl
add
sub
xchg
sub
sbb
loop
pop
imul
cmp
aam
push
push
clc
push
movsl
ja
cmp
hlt
xor
sub
shll
jle
add
aas
out
mov
add
adc
das
mov
imul
sub
mov
push
clc
jecxz
push
sbb
add
in
inc
add
ret
add
and
into
repz
mov
push
mov
jle
dec
jne
xchg
mov
mov
jo
add
jnp
push
test
add
or
add
sub
ret
sarl
shlb
xchg
xchg
mov
es
inc
add
push
pop
pop
cwtl
push
mov
aaa
mov
stos
insw
dec
popa
out
or
xchg
push
add
xlat
jle
fsts
cltd
xchg
mov
pop
in
push
push
inc
and
aaa
addb
lret
ret
jns
pushf
cwtl
and
jg
jae
add
jge
or
mov
cli
inc
add
je
call
ret
xchg
push
mov
cmpsb
test
pusha
add
xchg
aaa
in
hlt
lahf
xor
out
jns
lods
mov
add
loope
outsl
xor
mov
and
sbb
jle
add
add
test
add
mov
jp
cld
aad
ljmp
int3
and
sub
add
cmpsl
push
jmp
xrelease
lods
outsl
or
xor
lret
les
and
sbb
jg
push
add
stos
lock
subl
mov
pop
sti
fs
add
xchg
iret
push
xchg
push
ljmp
add
mov
insl
cs
and
mov
adc
daa
rcr
push
stc
jno
push
lock
mov
or
sub
add
inc
add
add
xchg
adc
aad
fcompl
sbb
enter
xchg
movsb
mov
inc
add
add
movsb
fcompl
xchg
cmpsb
addl
mov
jecxz
cmpsl
push
sub
stc
arpl
add
out
in
fildl
and
jg
adc
cs
and
aaa
ja
rorl
je
and
or
fists
popa
bound
sub
jle
jmp
sub
insl
insl
fistpll
adcl
and
loope
in
pop
push
sbb
scas
ret
pusha
add
dec
clc
arpl
arpl
lret
jae
lea
or
sti
or
add
add
stos
adc
or
or
add
inc
push
add
jl
mov
out
repnz
adc
push
and
mov
outsb
inc
les
push
dec
sub
sbb
push
inc
add
sahf
and
test
push
inc
add
add
cli
je
test
add
je
add
push
inc
fld
dec
hlt
push
xchg
inc
add
add
cwtl
push
andl
lock
dec
cld
jecxz
lcall
fwait
mov
jae
insl
movsb
imul
jmp
mov
or
lahf
pop
in
adc
adc
cmp
mov
pop
int
xchg
in
xor
ret
pop
scas
pop
mov
dec
rcr
mov
add
lods
enter
aad
jl
cmp
sub
addr16
sarl
xor
xchg
lcall
repz
notb
add
ss
push
ljmp
leave
test
test
in
cmc
insb
sbb
dec
add
pop
jecxz
out
adc
movsl
out
jb
jbe
dec
daa
add
xchg
lret
shr
imul
jne
pop
mov
adc
insb
xchg
cmp
xor
or
dec
push
add
adc
xor
into
insb
xor
imul
out
sub
and
inc
add
out
mov
addb
mov
push
movsb
sbb
inc
jg
stos
call
xchg
and
cwtl
pop
jae
call
add
js
add
mov
add
pop
cmp
rcl
push
addb
leave
jnp
mov
fdivrp
pop
rolb
xor
loopne
test
mov
push
call
xchg
pop
in
insl
scas
and
roll
xchg
aas
jb
lahf
push
das
in
imul
aam
jge
xor
test
stos
les
in
add
movswl
add
cmp
lret
adc
add
sub
clc
fldenv
notb
loop
adc
push
add
ret
push
pop
add
mov
sbb
mov
loop
push
mov
jb
repz
sub
cld
stc
xor
and
add
jge
mov
and
add
test
mov
inc
add
in
movsb
push
dec
repz
pop
cmpl
fs
mov
mov
ss
in
sub
mov
out
and
pop
jle
sub
sbb
ss
aas
dec
aaa
mov
popf
pusha
add
jae
leave
add
xchg
aas
ficomps
dec
adc
mov
add
mov
dec
movb
jae
dec
movsl
push
mov
pop
push
add
out
cmpl
pop
push
mov
jge
add
out
jle
in
pushf
movsl
pop
out
pushf
push
pop
xchg
sub
loop
outsb
cmp
sti
xchg
popa
scas
pop
imul
add
ficoml
ss
outsl
in
lret
push
jne
dec
mov
lahf
lcall
mov
ret
loop
mov
imul
mov
xlat
add
pop
test
adc
fwait
cmpsl
pop
je
fs
mov
cs
add
dec
push
repz
add
sbb
lcall
imul
push
inc
mov
fadds
or
dec
mov
sub
xchg
out
mov
into
xor
or
icebp
push
push
mov
pop
sub
sbb
add
cltd
jmp
cs
call
movb
aad
lea
xor
fwait
mov
ret
fdiv
lret
test
popf
bound
push
mov
das
out
push
or
js
jns
out
in
lock
sbb
dec
int
fwait
cmp
add
mov
xor
mov
fcoml
add
pop
ljmp
add
and
mov
addb
sbb
mov
dec
insb
jo
add
dec
cmp
add
sub
imul
add
sti
push
cmp
test
mov
xor
ds
and
pop
loop
add
cmp
addb
jl
sbb
push
inc
add
fstpl
rorb
add
push
sarb
xor
sbb
adc
jb
outsb
ss
xchg
dec
test
dec
rorb
sub
test
push
pop
mov
repnz
out
inc
or
add
jmp
mov
or
divb
icebp
inc
xchg
mov
sbb
pop
sub
push
int3
cmp
xchg
addl
sahf
ret
pop
call
pop
cmp
jge
inc
add
jmp
ljmp
mov
pop
sub
imul
popf
lds
mov
push
mov
sti
imul
jge
call
call
ret
push
movsb
repz
pop
outsb
mov
push
clc
inc
mov
test
cwtl
cltd
in
mov
outsl
sbb
clc
pop
add
sbb
add
add
xor
mov
sbb
lret
xlat
push
sbb
aaa
inc
add
add
add
in
lods
cltd
out
mov
pop
lds
push
or
sarl
sub
scas
rcrb
add
outsl
lock
sbb
push
or
lods
xor
add
shl
call
push
mov
mov
arpl
pop
push
add
mov
cli
mov
or
xor
add
pop
mov
sahf
and
mov
jns
ja
movb
into
adc
ljmp
inc
add
push
mov
pop
pop
fists
add
fsubrs
popa
in
adcl
push
fnstcw
test
pop
scas
aad
loop
cltd
je
sub
push
pop
or
mov
jle
cli
mov
imul
inc
push
into
cltd
cmp
stos
ret
mov
icebp
mov
xchg
mov
add
mov
movb
roll
scas
or
cs
or
add
mov
daa
mov
mov
mov
dec
mov
sub
sbb
loopne
aas
popa
push
dec
imul
add
das
push
icebp
out
addb
in
es
push
xor
or
cmp
xchg
cld
or
and
add
sahf
mov
jae
push
int
aaa
stos
sti
inc
jp
movb
cmp
cmpsb
and
mov
fadds
add
add
rolb
int3
ja
imul
cmp
jg
push
mov
jmp
sbb
rolb
aam
addb
xor
test
pop
push
add
addb
test
and
mov
stos
movsb
add
or
add
repz
sub
repz
cmpsb
cmpsl
fcmove
lods
into
mov
cmp
dec
push
add
mov
push
ds
push
or
pop
mov
adc
test
outsb
xor
add
lcall
lcall
icebp
mov
addb
sti
testl
push
sub
sti
mov
add
push
add
scas
mov
loop
adc
adc
outsb
loopne
add
imul
inc
add
push
hlt
jle
popa
xor
enter
pop
sub
push
mov
test
in
xchg
aad
in
add
daa
mov
popw
and
test
adc
insb
int3
or
iret
loope
addb
dec
xlat
add
and
out
popf
push
mov
push
sahf
sbb
add
hlt
jl
mov
sub
cmp
and
jnp
add
test
pop
nop
sbbl
scas
jne
mov
imul
add
add
test
jmp
call
gs
adc
push
rol
cld
mov
or
dec
mov
xor
fs
popa
sarl
or
xor
aaa
int3
fwait
push
adc
jle
fsubrl
inc
sbb
add
mov
into
adc
push
lret
sahf
mov
xlat
xorl
mov
test
sbb
lea
push
sbb
in
cmp
mov
movb
cmp
aad
mov
jg
lock
mov
inc
add
sub
popa
inc
add
or
ret
inc
add
add
or
xchg
repz
test
pusha
add
dec
jno
jae
mov
add
add
rcl
call
push
fiadds
add
add
addb
jbe
je
dec
out
xchg
out
sub
add
lods
in
loope
cmpsb
mov
jnp
jne
jecxz
inc
mov
dec
adc
add
xor
or
dec
and
xchg
mov
bound
in
push
and
xchg
push
add
stc
js
fxch
test
push
cmp
stos
jp
iret
cmc
cld
gs
adc
shll
daa
mov
lcall
mov
add
addb
mov
dec
leave
or
lretw
addb
pop
test
lds
popf
lret
mov
mov
int
lea
or
xor
movb
push
pushf
popf
test
test
sub
mov
fnstcw
mov
mov
add
xchg
stc
cld
push
lret
sub
shll
mov
sub
addb
add
sub
fisubs
sbbl
in
mov
adcl
int3
and
push
loop
pushf
call
shll
insl
mov
cwtl
fsts
popa
add
add
subl
push
sbb
ret
nop
push
inc
add
cmp
stos
sub
loopne
imul
icebp
in
movsl
into
fs
add
add
int
inc
add
pop
out
lcall
add
jge
add
xchg
jo
mov
add
pop
mov
in
int3
mov
insb
out
ss
add
loope
add
sbb
mov
test
in
aam
ret
sub
fcompl
jmp
and
addb
add
mov
push
fbld
xor
test
rcll
xchg
popf
loop
cmp
add
outsl
leave
or
pop
cmp
add
shrl
sbb
push
mov
clc
addb
lcall
pushf
push
mov
cmp
add
mov
outsb
xchg
test
mov
push
ret
xchg
nop
and
lea
daa
int
cwtl
mov
pop
aaa
test
pop
push
movl
ljmp
jp
mov
mov
les
hlt
pop
dec
sub
daa
add
sub
xchg
mov
dec
sbb
cmpsb
lods
xor
or
ljmp
int3
adc
add
out
and
push
add
sub
int3
push
add
xchg
xchg
in
push
cmp
xor
sub
in
ficoml
mov
js
xchg
jnp
movsb
aam
adc
fcompl
adc
adc
add
mov
jne
mov
sbb
jae
sub
rolb
push
addb
add
add
rcl
jg
pop
daa
test
add
ficoms
push
xchg
insb
lods
roll
pop
cli
jg
jb
xchg
pop
xor
lahf
inc
enter
or
and
cmp
push
xchg
add
popf
in
leave
shr
inc
inc
jbe
mov
push
cmpsb
inc
hlt
leave
add
js
movsb
push
and
cmp
jle
jo
mov
psubw
pusha
add
xlat
cmp
inc
add
aad
incb
dec
aas
xor
testb
ret
jp
jb
cmc
in
ret
sub
movsb
xor
add
mov
lock
stc
das
add
xchg
lods
aam
dec
ss
mov
inc
cmpsl
cmp
loope
and
mov
mov
xorl
cmpsb
in
stos
push
leave
jbe
je
mov
sub
xchg
or
ss
push
shrl
and
push
or
ja
inc
and
aaa
scas
pop
sub
cmc
adc
insl
push
add
popa
in
mov
pop
int3
imul
mov
push
lret
push
aas
mov
in
loopne
cmpsb
mov
cmpsl
lods
lea
adc
mov
movsb
mov
xor
pop
pop
mov
lcall
iret
or
movb
jl
inc
mov
std
push
jo
jmp
pop
or
insl
mov
lret
in
xor
add
test
cs
xchg
sti
mov
call
addb
pop
xlat
pop
add
xor
jbe
cmpsb
inc
les
mov
adc
inc
add
adc
lret
add
xor
popa
rolb
rcrb
mov
lahf
or
in
les
add
push
mov
sub
dec
fcompl
fs
ret
add
cwtl
or
add
sub
pop
pop
ret
lret
sbb
xor
jae
cmc
inc
fs
cmp
in
dec
mov
or
push
in
test
jbe
dec
movsb
aad
gs
xlat
mov
insl
inc
cmc
test
push
cmp
clc
addr16
mov
xor
mov
sti
xlat
or
or
data16
cmp
adc
ror
movb
inc
add
add
ja
jl
pushf
sub
dec
daa
sbb
mov
cmp
add
rolb
pushf
mov
jae
mov
test
dec
mov
mov
pop
or
scas
subl
mov
xchg
je
jno
into
mov
mov
jmp
mov
mov
into
out
sbb
mov
add
push
pop
xchg
icebp
imul
sub
add
mov
jnp
and
fldenv
das
cli
sub
sbb
add
rorl
enter
cmp
cmp
idivl
adc
mov
xchg
pop
push
cmp
adc
and
sub
inc
add
sbb
ds
mov
xchg
xlat
pop
xor
dec
iret
mov
jne
mov
add
xchg
mov
mov
out
shll
or
adc
fistpl
push
pop
daa
clc
lods
add
push
mov
shrb
inc
add
ror
inc
add
or
decb
jge
dec
adc
lods
and
jl
add
dec
mov
mov
inc
cmpsl
xor
adc
mov
daa
sub
mov
pusha
add
add
sub
add
sbb
sarl
pop
adc
add
sub
clc
adc
add
xlat
xor
add
add
pop
ja
orps
jns
sub
add
push
mov
cmp
and
mov
cmp
xchg
out
adc
jp
stos
xor
jbe
and
mul
sbb
mov
fisttpl
add
add
xchg
sub
mov
lea
rorl
fidivrs
xchg
je
add
cmp
ljmp
sahf
sbb
lods
negb
imul
cmp
ljmp
std
shlb
dec
and
rolb
or
test
sbb
popf
test
dec
pop
xchg
pushf
xor
nop
data16
pop
xchg
clc
xchg
add
add
outsl
cmp
mov
push
lret
insl
mov
push
xchg
mov
xchg
insb
or
xor
xor
inc
add
stc
loope
inc
add
sub
lods
ret
add
loop
add
add
imul
cltd
stos
pop
out
out
xor
js
adc
mov
in
push
push
add
add
mov
dec
mov
out
cwtl
jmp
push
jbe
or
xchg
test
out
sub
inc
repz
adc
xchg
add
and
cmpsl
in
xor
xchg
dec
stc
push
ljmp
push
lret
mov
sub
stos
mov
or
sub
inc
inc
loope
add
pop
fwait
ja
jl
lret
sub
bound
xor
mov
push
mov
xchg
adc
negb
out
mov
pop
cmp
dec
incl
add
add
les
into
mov
fistl
adc
mov
out
jns
rclb
mov
les
mov
adc
fdivl
pop
sbb
lahf
test
imul
in
dec
lock
lods
ljmp
addb
mov
add
fmulp
sub
mov
out
scas
sbb
mov
ficompl
inc
repz
rclb
add
into
jmp
mov
add
scas
in
imul
pop
jl
cmp
mov
adc
add
add
shll
enter
add
sbb
xchg
inc
cmpsl
scas
mov
faddp
fxch
gs
jge
pop
pop
aas
xchg
fstpt
ftst
repnz
ja
nop
movsb
out
imul
add
ljmp
popf
mov
add
push
popf
add
lret
pop
adc
push
je
adc
ret
xchg
inc
add
jp
shl
jns
xchg
icebp
push
xlat
iret
imul
pop
inc
or
movsb
jbe
mov
mov
pop
repnz
aas
sbb
int
setge
rcrl
add
adc
or
mov
or
stc
mov
or
sbb
cmp
and
test
and
das
xor
test
pop
cld
loopne
or
push
cltd
jl
add
sbb
lock
pop
bound
outsb
loop
dec
and
subl
push
dec
stos
movb
enter
and
fdivp
push
sti
adc
push
inc
add
and
cmp
adc
mov
sbb
pop
xor
loope
jb
add
in
xor
in
sbb
add
lret
xchg
test
mov
lret
movb
mov
mov
fstpl
lcall
jae
mov
insl
push
stos
nop
cmpsb
add
add
push
es
cmpl
add
dec
and
addb
enter
sbb
into
pop
insl
out
mov
push
mov
sub
add
outsl
pop
jo,pn
jecxz
mov
add
cmpsl
addl
and
inc
sti
fwait
outsl
icebp
inc
add
jnp
fisttpl
dec
jmp
dec
or
pop
lds
cltd
scas
cmpsb
mov
sbb
mov
add
inc
out
pusha
add
and
push
jo
mov
lret
hlt
pusha
add
sbb
ret
outsb
pop
orl
scas
sub
and
fidivrs
xchg
mov
adc
ret
dec
js
sbb
lret
xlat
lock
popa
arpl
popf
lea
mov
xor
sub
add
movsb
cmp
pop
push
dec
inc
add
add
jg
add
jp
sub
xchg
inc
movb
sahf
mov
lret
sub
clc
push
push
sbbl
sbb
add
loop
in
dec
test
in
or
movsb
push
dec
hlt
gs
mov
das
cmp
mov
add
pop
pop
jmp
data16
push
push
out
push
movsl
cmpsb
push
stos
test
jge
arpl
mov
mov
add
mov
add
pushf
mov
and
in
lods
jae
loop
stos
pop
cs
cmp
push
insl
cmc
inc
add
dec
or
aaa
dec
imul
sub
mov
test
aas
aas
ret
jg
dec
dec
mov
dec
mov
in
xor
or
ds
les
jg
mov
add
sub
shll
fidivl
push
push
add
sbb
loopne
xchg
pop
sub
loopne
ds
cmp
loop
roll
add
jno
insl
enter
pop
ja
mov
cmpsl
adc
mov
or
xlat
push
dec
adc
pop
fstps
sub
mov
mov
mov
mov
arpl
mul
in
mov
enter
add
add
lods
out
cmp
rcl
mov
jle
cmpsb
popf
mov
fisttpl
ds
je
pop
cmp
aaa
sbb
xor
add
mov
lods
enter
lcall
pusha
add
inc
add
loopne
les
or
add
fisubrl
lret
sbb
cmc
hlt
adc
mov
pop
cltd
js
xor
call
shl
in
inc
je
jnp
cmp
movsb
iret
in
push
xchg
push
jo
les
jmp
movb
leave
push
mov
mov
add
mov
cs
inc
add
stos
jne
mov
arpl
sbb
lods
push
enter
pop
dec
dec
push
hlt
arpl
xchg
push
imul
add
adc
popf
sub
jg
jmp
scas
pop
inc
add
xor
jne
rolb
mov
pop
push
aad
add
jne
leave
cmp
arpl
int
mov
jb
mov
add
aad
xchg
adc
add
dec
add
or
mov
fs
or
or
fsubr
fcoms
add
fst
add
iret
push
stos
repz
add
xor
fmulp
jge
jge
mov
popf
movsl
test
inc
dec
jb
add
sbb
mov
add
pop
ds
xor
add
call
push
mov
imul
nop
xchg
insl
mov
fwait
inc
add
adc
enter
pop
dec
addb
arpl
or
mov
pop
cltd
inc
add
mov
pop
mov
or
and
add
daa
pushf
les
add
leave
jl
cmc
loop
xchg
push
imul
das
xor
adc
xchg
lods
mov
aad
in
cmp
adcl
js
jbe
inc
mov
aad
adc
mov
movsl
aas
sub
add
out
push
pop
sbb
sar
addb
dec
iret
ja
jmp
sub
push
xor
bnd
cs
add
in
daa
adc
dec
adc
mov
shll
jge
call
gs
daa
loop
pop
lret
clc
and
adcl
sub
jp
add
add
mov
or
push
lods
adc
loopne
push
into
xchg
pop
add
dec
pop
call
push
inc
add
mov
sbb
lret
imul
call
int3
lret
jecxz
or
mov
mov
das
mov
out
cmp
adc
jle
cwtl
cmp
add
ret
mov
loope
leave
ret
roll
popa
pusha
add
aad
add
jno
sbb
cmpl
jnp
inc
add
xor
add
in
cltd
xchg
cmp
xor
and
loop
jp
lahf
pop
inc
std
test
ja
mov
push
inc
and
popf
inc
add
ds
add
daa
testb
mov
and
gs
clc
inc
aaa
sbb
lea
sbb
negl
add
push
jbe
insl
rolb
sahf
ss
add
xor
jo
fldcw
sahf
mov
outsl
ss
std
bound
jg
aam
pop
mov
sbb
mov
test
mov
add
sbb
mov
add
arpl
daa
sbb
or
addb
loopne
add
add
lcall
mov
push
sub
mov
xchg
cltd
jecxz
mov
call
dec
pop
xchg
jbe
int
inc
add
in
inc
add
sub
insb
mov
dec
inc
repz
lret
iret
lods
sar
xor
add
mov
mov
scas
lea
mov
mov
out
aad
xchg
and
cmpsl
movsl
pop
add
cs
xor
dec
push
enter
scas
sbb
iret
push
fucomp
push
aaa
inc
mov
stos
out
mov
clc
push
fwait
arpl
fistl
jo
jbe
fldcw
push
xchg
mov
insb
cli
xor
das
dec
pop
push
xor
and
nop
pop
jmp
sub
leave
flds
add
and
lret
jne
in
jae
int3
mov
cwtl
std
std
shlb
js
add
adc
adc
mov
fnstsw
xorl
cmp
rolb
jbe
mov
notb
mov
cmp
jne
and
addb
pusha
add
ljmp
lret
out
jge
sbbl
cltd
cmpsl
ja
mov
inc
add
fisubrs
push
mov
add
mov
dec
cmc
and
push
icebp
xor
roll
popf
pop
push
mov
adc
lahf
fcoms
pop
pop
dec
push
addb
add
jmp
loope
push
cmpsb
sub
add
adc
push
pop
push
stos
test
xchg
cli
in
mov
in
jne
hlt
xor
xchg
mov
pusha
add
mov
jecxz
js
int3
sti
adc
push
js
mov
sbb
add
popf
xchg
rcrb
mov
cmp
push
das
mov
in
adc
inc
add
mov
iret
call
add
jl
out
fwait
inc
add
push
addb
loop
cld
aam
fst
xor
add
or
ficoml
dec
into
cld
dec
inc
sbb
mov
mov
enter
push
jae
inc
add
test
push
fdivrs
push
add
sub
pusha
add
lds
jg
mov
or
jmp
les
adc
add
shll
adc
and
mov
sarl
fstl
test
out
lds
ja
imul
mov
mov
add
outsl
cmp
xor
mov
mov
sahf
cmp
stos
aad
push
pop
cmpsb
out
lret
xchg
aaa
sbb
dec
xchg
push
dec
and
lcall
jmp
stc
pop
mov
add
test
loopne
jb
sub
sub
inc
cmpsb
stos
leave
inc
add
scas
dec
mov
jno
lds
ss
icebp
dec
int3
ficoms
aas
lods
loop
xor
movsl
push
mov
data16
mov
xchg
xchg
xchg
je
and
pop
mov
daa
repnz
cmp
add
push
ret
push
test
or
dec
scas
dec
xor
fldcw
insl
mov
int
cmpsb
ficompl
add
add
add
test
ret
ret
stc
in
fnclex
cltd
inc
add
dec
int
mov
add
pop
pop
jecxz
pop
jbe
add
add
and
xor
mov
int3
mov
and
sbb
rolb
loope
add
test
add
xor
sub
je
scas
scas
push
mov
sbb
mov
icebp
push
pop
icebp
mov
cwtl
sbb
dec
lahf
sub
cld
push
add
jp
arpl
loopne
mov
adc
ljmp
mov
push
shlb
sub
dec
scas
mov
lcall
pop
fmull
mov
and
jl
cli
add
sub
jns
hlt
cmp
test
sti
jg
in
or
cli
daa
dec
in
add
mov
dec
pop
and
adc
nop
repz
es
or
stos
or
pusha
add
mov
test
sub
popa
add
mov
push
sbb
or
xchg
lahf
cmpl
nop
dec
cmp
add
push
mov
add
jge
das
lock
in
ljmp
lcall
add
mov
xor
xlat
cmp
jle
xchg
mov
xor
mov
insl
and
movsl
inc
out
repz
pusha
add
pop
mov
pop
mov
jle
lea
mov
add
xor
inc
pop
inc
inc
add
push
dec
cmp
fsts
test
cld
mov
sub
add
mov
add
pop
jbe
sbbl
lock
and
push
add
rcrl
sbb
xadd
flds
add
int3
jne
sub
lret
jae
lock
mov
xchg
insl
hlt
imulb
add
ss
enter
imul
out
popa
or
add
out
sbb
lods
push
das
iret
or
add
imul
fsts
cmp
mov
xor
repz
loop
and
xor
insb
cmpsl
adc
loope
mov
xor
sbb
mov
loop
push
aaa
mov
aaa
inc
ja
add
add
push
outsl
movb
sub
bound
fnsave
push
mov
outsl
icebp
xchg
addb
add
add
sbb
adc
cli
fcomps
sub
fcoml
dec
adc
sbb
push
leave
cmp
mov
mov
out
out
rcrb
dec
mov
paddb
add
cwtl
popa
jge
repz
icebp
add
sti
pop
je
add
insb
movsl
cmp
adc
inc
add
in
fldcw
dec
out
ret
pop
arpl
mov
rcll
cmc
into
adc
fidivs
sub
mov
cmpl
ret
movl
daa
es
jo
addr16
addb
rolb
push
dec
rcll
stos
cltd
adc
mov
adc
insb
insb
dec
in
out
pop
mov
add
test
addb
jl
jns
add
fsub
mov
cltd
cwtl
lds
stos
in
loop
inc
add
cmc
sahf
xorl
cmpsb
xchg
inc
add
pushw
mov
out
aaa
xor
mov
or
jbe
aas
or
inc
add
and
xor
shrl
clc
test
es
bound
addl
mov
adc
movb
mov
xchg
pop
cld
sub
xor
es
aad
jmp
jbe
inc
push
mov
cmpsb
int3
pop
mov
push
xor
xlat
jmp
push
and
pushl
dec
sbb
lret
or
push
lahf
mov
inc
add
ja
fcos
inc
add
ret
and
xlat
add
sub
push
rorb
sarl
push
xor
add
push
add
fs
cmp
and
jg
sbb
add
adc
inc
pushf
es
cmpsl
pop
out
clc
jnp
pushf
lods
dec
jl
lahf
mov
sub
add
pushf
inc
add
iret
adc
insl
imull
sub
loopne
loop
sub
outsl
enter
imul
push
xchg
test
mov
popa
cmp
pop
sub
nop
in
and
pop
cmpsl
pop
cmp
adcl
ljmp
add
pop
lcall
sub
xchg
ds
iret
lcall
add
pushf
loopne
outsl
out
add
dec
adc
xchg
and
and
mov
es
push
movb
iret
sahf
or
movsb
movb
cmc
andl
addr16
add
addr16
inc
add
popf
push
pop
test
pop
ss
push
loopne
pop
mov
or
std
test
js
mov
addr16
mov
rol
add
pop
xor
ds
ds
rcr
mov
push
mov
push
inc
and
shrl
adc
int
push
aad
rclb
cmpl
in
ficompl
shlb
jns
outsb
jle
fcoml
movsb
push
inc
add
xchg
inc
add
outsl
jmp
adc
jg
popa
dec
into
mov
mov
add
sbb
loop
out
and
push
sub
inc
add
push
dec
mov
xor
mov
hlt
std
in
fnstcw
fwait
jno
pop
mov
addb
or
adc
out
adcl
fidivrl
int
das
inc
add
jle
and
int
in
je
dec
call
mov
insb
enter
or
pop
addb
ret
in
xchg
addb
pshufw
test
mov
mov
stc
lods
adc
scas
jge
shl
pusha
add
mov
ljmp
imul
imul
les
xchg
dec
mov
insb
mov
decb
cmc
mov
shlb
push
xor
add
inc
jne
push
add
popa
fdivl
jns
add
jno
push
addb
dec
add
add
in
or
in
movsl
movsb
xor
pop
pop
out
les
or
jecxz
xor
mov
push
adc
ficompl
mov
add
sbb
or
mull
gs
add
xor
and
add
fsubrs
mov
orl
stc
cmp
xor
mov
add
ss
lahf
mov
pop
push
sbb
aad
or
pop
popa
sub
add
push
ret
or
push
movsb
or
mov
push
fs
jp
add
fstps
in
stos
mov
imul
pop
jl
sarl
mov
dec
loop
popf
cwtl
dec
aaa
mov
mov
and
rolb
and
push
fists
movsb
sub
or
push
jbe
pop
es
pop
in
xor
cli
cwtl
lahf
ljmp
pop
add
icebp
dec
cltd
inc
add
dec
jp
add
add
mov
ss
mov
and
mov
cmp
pop
push
rolb
ljmp
or
sbb
sbb
mov
outsb
xor
je
inc
add
pusha
add
call
jne
popf
bnd
pop
push
les
cmp
fs
bound
mov
lret
cs
xor
add
ss
add
xchg
dec
jne
aaa
cltd
aam
add
jl
rep
loop
out
pop
pop
jnp
push
mov
jns
icebp
add
inc
add
call
and
inc
cmp
pop
mov
outsl
sbb
jae
dec
add
add
xchg
xchg
cmp
jbe
imul
add
jne
insl
cld
addb
lods
repnz
add
mul
dec
sbb
bound
je
add
xor
mov
lods
push
jo
mov
add
test
sub
push
inc
add
outsl
lods
std
stc
outsl
test
adc
sti
addb
or
aas
fldcw
into
cs
mov
mov
aad
aas
jp
inc
inc
add
cli
push
xcrypt-ctr
cmpsl
popf
adc
aam
jle
add
add
inc
add
add
add
rclb
imul
sbb
push
or
add
pop
pop
lahf
bound
mov
cs
mov
test
jmp
mov
icebp
mov
test
cmp
cmp
xchg
push
sbb
push
pusha
add
mov
mov
ret
jge
add
add
inc
add
push
ss
cwtl
call
stos
fwait
gs
outsl
scas
scas
adc
adc
shll
pop
add
addb
and
lret
mov
mov
imul
mov
insl
jae
aad
push
mov
add
jns
cmp
add
and
xchg
mov
jmp
ljmp
xor
pop
les
mov
or
xchg
push
subl
in
ret
stc
scas
in
fisubrl
mul
lea
lret
mov
push
jge
lar
and
mov
aad
sub
jns
adc
dec
lea
testl
cmpsb
shll
lcall
gs
xor
mov
leave
cwtl
mov
stos
inc
add
jno
jo
ds
add
sub
gs
insl
jbe
lcall
dec
popf
inc
and
push
bound
pop
adc
push
sub
add
nop
pop
mov
xchg
adc
mov
xor
add
mov
daa
std
stos
cmp
mov
adc
jno
dec
mov
xchg
push
stos
dec
das
dec
repz
add
jo
add
dec
jns
dec
stos
out
sbb
loopne
lret
and
jmp
push
sbb
pop
add
popa
xor
leave
cltd
aad
out
in
addb
jns
test
mov
push
mov
or
fwait
lea
and
jmp
not
jnp
mov
add
xlat
sarl
and
pop
lock
xchg
mov
and
cld
cmp
ss
jge
sbb
push
jns
cmpl
dec
repz
add
ret
jb
cld
dec
lods
ret
xor
lret
dec
push
xor
add
rolb
mov
fnstcw
sbb
add
xor
repnz
pop
jle
and
sti
pop
into
mov
cmp
add
jge
stos
repnz
aaa
les
and
loop
orl
cmp
mov
iret
ror
movsb
add
and
mov
divb
inc
add
stos
mov
push
cmpsl
sbb
in
cmp
rcll
insl
pop
loop
sub
jge
push
push
jmp
cmp
xchg
dec
es
rcl
push
lret
and
mov
pusha
add
xor
add
fs
add
or
jbe
icebp
imul
fwait
xchg
add
jno
jnp
fwait
dec
scas
in
push
xchg
lret
int
les
ljmp
bound
push
in
dec
jecxz
sbb
mov
pop
inc
add
add
pop
rcll
add
sbb
jno
jmp
pmulhuw
xchg
mov
push
sti
in
add
movsb
addb
and
out
out
add
in
xchg
pop
movsb
outsb
mov
add
sahf
jb
aam
push
cmpsl
lcall
fcmovu
mov
sub
add
ja
call
stos
sti
ja
sbb
xchg
addb
test
mov
mov
add
inc
add
xchg
jmp
fisttps
xor
in
jmp
leave
or
adc
pop
pop
cmp
jecxz
out
cmc
lret
ret
mov
cmp
fs
adc
and
mov
add
mov
scas
xchg
mov
and
mov
shrl
fdivrs
fwait
inc
bound
loopne
jmp
add
sti
popf
rcrb
data16
pushf
add
adc
adc
xchg
adc
rorb
add
shl
adcl
xor
jg
push
sbb
sbb
pop
pop
in
cld
push
add
pop
fwait
add
sub
decl
cmp
add
hlt
in
in
jmp
in
nop
jecxz
jo
das
arpl
imul
xchg
jl
add
enter
cmp
test
mov
mov
imul
sub
add
lods
sbb
inc
add
xor
push
xor
clc
mov
fimuls
mov
add
pop
sub
inc
add
lret
sti
or
test
jae
sti
int
jmp
cmp
lea
jbe
xor
cmp
pop
fisttpll
scas
jb
push
add
cld
mov
dec
adc
and
cmp
shrl
popf
lods
mov
sti
test
std
test
outsb
adc
jge
mov
mov
lods
clc
stc
cmp
xor
adc
or
fldenv
add
add
repnz
or
or
add
push
add
jle
in
icebp
cmp
lret
fisttps
adc
fwait
jo
iretw
fstpt
roll
lods
or
pop
inc
add
cwtl
mov
jnp
pop
xor
xchg
inc
lret
addb
mov
cmc
xchg
ficomps
mov
jb
dec
jae
into
in
test
jnp
add
sub
or
scas
xchg
test
aam
adc
xchg
pop
add
push
and
stc
mov
or
push
jae
insb
mov
add
and
lahf
test
push
arpl
inc
add
add
pop
mov
push
out
adc
sbb
inc
add
pushf
je
cmpl
cwtl
cmc
adc
mov
mov
jle
mov
pop
mov
fnstenv
add
sub
cmp
dec
mov
xor
xchg
pop
sub
addb
xchg
push
push
sbb
xlat
inc
ficoms
repnz
clc
push
add
mov
pop
or
xchg
cmc
jmp
and
add
and
js
mov
decl
push
gs
push
cmp
dec
test
and
inc
add
imul
pop
cmp
in
dec
add
addr16
test
insb
clc
rolb
add
add
add
pop
pusha
add
das
mov
cmp
mov
test
dec
xor
and
mov
ds
test
repnz
inc
add
add
cmp
popa
gs
add
ljmp
add
sub
xchg
sub
les
push
add
pop
xchg
and
jle
call
add
xor
pop
add
jg
in
add
add
rcll
stc
cmp
lea
sbb
inc
cltd
stc
iret
mov
loop
bound
andl
call
dec
mov
call
stos
ljmp
add
dec
outsl
aam
in
xor
dec
ljmp
mov
jae
add
jno
js
mov
jb
adc
and
sbb
push
add
cwtl
mov
ret
xchg
stos
xchg
test
jns
jnp
xchg
add
dec
sti
and
jl
jae
mov
jbe
lret
mov
push
xchg
push
push
sub
dec
pop
out
dec
sbb
mov
loopne
and
clc
push
and
test
into
and
stos
mov
cmp
or
jmp
push
dec
hlt
rclb
shl
add
jp
adc
and
dec
pop
and
shll
and
pop
add
xlat
scas
mov
inc
add
ljmp
push
addr16
dec
mov
lock
js
add
and
add
insl
pop
std
stc
lock
inc
add
xor
add
test
add
int3
mov
lock
add
add
test
adc
mov
frstor
add
addb
inc
inc
or
cmpsl
ret
push
cmpsl
jle
add
pop
sbb
xchg
ret
xor
mov
pusha
add
in
sub
clc
cmp
nop
and
mov
jmp
mov
pop
cmpsl
scas
mov
notb
imul
sti
xor
test
add
sbb
test
sbb
xchg
repnz
jmp
ret
loopne
mov
or
mov
insb
jb
dec
out
icebp
pop
orl
lret
push
xchg
lods
lret
push
inc
add
aaa
ds
ljmp
mov
inc
fisttpll
cmp
mov
popf
pop
sbb
stos
push
jecxz
repz
frstor
dec
cmp
add
mov
cltd
and
dec
sbb
ret
imul
mov
movsb
sub
adc
xlat
mov
dec
mov
cmpsb
push
cmp
lods
nop
jl
addb
int3
mov
out
sti
adc
les
movsb
xor
repnz
mov
and
adc
and
dec
inc
add
xchg
enter
add
add
mov
sbbl
js
ds
aad
aam
movsb
jne
shl
lret
push
addb
addl
mov
mov
leave
add
add
mov
lods
push
sahf
cmp
and
iret
movsb
jl
mov
mov
dec
cwtl
inc
sub
sbb
xchg
push
aam
mov
test
mov
add
pop
xchg
hlt
dec
js
sti
cwtl
shlw
xor
repnz
push
mov
ljmp
xor
add
in
mov
rolb
or
push
add
testl
cmp
mov
jo
dec
int
lcall
pop
and
add
sub
adc
mov
pop
cmp
test
fdivl
xchg
pop
pop
loope
outsb
jmp
add
gs
mov
xchg
mov
addb
add
xor
hlt
cmp
mov
or
mov
xor
xchg
or
mov
inc
mov
and
shl
addb
push
cmp
xor
or
data16
pop
outsb
inc
add
push
cli
and
out
jg
adc
add
mov
sti
pushf
sahf
inc
or
adc
addb
cli
out
mov
xlat
inc
int
inc
add
hlt
repz
shll
add
imul
test
lods
and
add
lcall
ss
aas
mov
sub
jg
rcrl
hlt
shlb
pop
adc
push
mov
cmp
lock
fidivrs
loop
xchg
mov
jns
addr16
xchg
rolb
push
xor
std
mov
mov
nop
ja
movsb
mov
jecxz
es
xchg
pop
push
and
xchg
mov
jbe
jmp
leave
jno
call
and
add
push
or
sub
jns
mov
add
add
stos
call
sbb
cli
sub
icebp
mov
je
and
rcr
call
clc
inc
add
xchg
jge
add
mov
xchg
pop
jg
dec
pop
lods
xchg
add
leave
push
jl
jns
stos
inc
add
jns
lahf
cmp
add
outsl
mov
out
sbb
inc
add
jno
add
inc
add
and
adc
jecxz
sub
or
dec
adc
or
fwait
cmp
in
in
cmpsl
insb
dec
jno
mov
sub
push
mov
iret
pop
xor
sar
xor
inc
add
xor
inc
add
xchg
in
jmp
xlat
jae
adc
inc
add
or
add
enter
cmp
ret
mov
push
and
sub
cmp
fstl
ret
arpl
out
popa
xchg
cmc
and
lret
nop
js
mov
jmp
dec
mov
add
or
outsl
mov
ds
notb
sub
add
pop
loop
adc
inc
cmp
or
and
scas
mov
add
push
out
addb
add
repz
sub
inc
add
insl
enter
jnp
inc
xchg
mov
and
dec
mov
add
jg
les
jns
jle
pop
cmp
jo,pt
les
lret
mov
mov
adc
add
add
stc
pop
mov
add
hlt
or
leave
jno
add
repnz
sub
jne
fs
in
loop
add
js
add
adc
imul
sti
push
sbb
rorl
push
mov
mov
js,pn
lahf
adc
adc
test
adc
and
and
push
shr
xchg
pop
icebp
mov
adc
mov
shll
pop
xchg
mov
enter
mov
in
add
adc
add
push
negb
push
lock
nop
mov
pop
cmp
aad
fstl
addb
insb
pop
xchg
in
psubsb
js
add
bound
inc
add
pop
mov
in
inc
add
sahf
pop
pop
in
ret
dec
cwtl
lret
loopne
loopne
add
sarb
loope
cli
outsl
xchg
stos
adc
sbb
inc
dec
jns
jecxz
inc
add
jle
xchg
inc
icebp
push
mov
fstps
push
adc
xchg
ljmp
fisubrs
jnp
adc
pushf
cmp
les
push
aaa
scas
dec
push
sbb
add
jne
and
scas
mov
test
sbb
ljmp
jecxz
rcrb
add
stos
shrl
push
testb
mov
add
arpl
test
inc
add
into
push
cli
jp,pt
jg,pn
add
push
test
popf
sbb
fstenv
aas
das
pushf
or
test
add
lods
rorl
add
dec
stos
xchg
jle
add
and
fldenv
mov
xor
test
mov
lret
xchg
xchg
xchg
cwtl
icebp
jl
enter
and
push
cli
mov
mov
fisubrl
xor
lods
hlt
inc
add
add
fs
ljmp
dec
mov
js
push
lcall
jge
aaa
fidivs
aad
pop
jae
aam
ret
sub
pop
cmp
daa
lret
mov
add
lret
xchg
lahf
cmp
add
mov
adc
add
mov
dec
or
dec
cmp
lods
insl
test
popa
and
sahf
addr16
xorl
ss
aam
mov
aad
or
cmp
and
fnstsw
xor
scas
out
in
scas
xchg
xchg
jae
mov
jl
sbb
inc
add
lea
inc
add
xchg
cli
cmpl
push
data16
arpl
stc
aaa
inc
lock
xor
jae
jno
and
xchg
addb
add
xchg
popa
or
imul
in
pop
jecxz
adc
addb
dec
pop
test
rorl
mov
div
jno
pop
test
sub
les
mov
cmp
inc
add
sbb
add
jg
daa
cwtl
ror
bound
leave
cmovbe
mov
xchg
fimull
sbb
cmpsb
push
movsl
ss
add
je
enter
or
stos
xchg
clc
pop
in
add
pop
fldenv
fsubrl
addb
lods
add
mov
add
xor
dec
pop
sarl
cmp
inc
add
lock
xlat
mov
sub
fwait
sub
sub
aam
push
aas
lahf
les
jecxz
inc
add
xchg
sub
testl
pop
mov
rorl
in
cmpsb
sahf
mov
cwtl
or
loope
scas
mov
adc
dec
jecxz
sbb
mov
lods
jae
mov
sbb
ja
mov
pop
sbb
mov
lret
popa
pop
push
xchg
push
insb
sbb
jns
ss
enter
push
lret
mov
out
add
movb
repz
jl
sbb
push
mov
iret
mov
addl
add
xchg
in
and
loope
add
sub
add
pusha
add
arpl
xor
cmp
xchg
stc
xlat
rolb
add
movsl
and
leave
rcrb
movsl
cld
addl
paddsw
add
mov
add
out
xchg
mov
shlb
and
fucom
lea
gs
jbe
dec
mov
push
iret
lcall
push
popf
pop
rcrb
push
dec
push
aam
add
rolb
and
mov
mov
test
jbe
or
sub
jge
scas
mov
add
add
jge
inc
add
jmp
mov
test
out
or
push
ss
add
rolb
or
int
cltd
mov
jle
fldl2t
adc
push
bound
in
inc
add
mov
add
ja
xor
aad
xchg
loopne
pushf
insl
dec
stc
inc
adc
jne
pop
pop
cltd
aas
divl
dec
fwait
mov
arpl
add
in
jno
mov
mov
pop
int
lea
addb
pop
dec
movb
lret
inc
add
mov
scas
int3
jb
pop
push
push
mov
sbb
pusha
add
jo
push
add
fsubrl
add
add
add
jb
xchg
sbb
sbb
pop
test
movsl
jo
fmuls
repnz
iret
mov
add
add
inc
add
stos
cmp
sbb
repz
roll
or
iret
in
aaa
std
loopne
xchg
pop
lds
aaa
push
fs
mov
insl
ret
dec
dec
movb
aad
add
ja
outsl
dec
in
or
xor
lock
and
test
xchg
test
xchg
push
hlt
dec
fdivl
mov
imul
pusha
add
push
inc
add
int
aaa
dec
inc
test
xchg
dec
push
add
add
lock
enter
repz
nop
xchg
sub
lahf
das
cmp
ja
and
push
mov
sub
addb
rolb
ljmp
jle
add
jb
inc
pop
das
adcl
in
shl
cmc
sbb
add
test
mov
fstl
mov
movsl
in
out
mov
shl
test
adc
roll
mov
mov
es
mov
lods
cmp
or
and
jne
cmpl
add
add
lods
add
add
ret
push
sbb
cmp
lock
fldln2
and
fisubl
mov
imull
mov
pop
jge
ficoml
sti
fs
addb
data16
sahf
sub
or
add
pop
mov
adc
in
inc
movsb
mov
xchg
or
jnp
jle
pop
dec
sbbl
sarb
or
xchg
fs
push
xor
sub
push
mov
or
add
pop
gs
pop
out
sbb
in
add
js
and
push
hlt
sti
jbe
xor
mov
call
pusha
add
adc
bound
popa
dec
ja
push
xchg
mov
inc
mov
xchg
out
ds
pop
popf
fnstsw
pushf
inc
adc
xor
out
push
push
jp
sbb
out
aas
adc
test
addb
jbe
push
ljmp
add
adc
into
scas
sbb
lret
decl
mov
shll
add
mov
sub
mov
dec
push
imull
or
push
adc
and
aaa
push
inc
test
mov
sbb
dec
and
mov
rorl
jbe
mov
out
push
push
inc
movsl
or
cmc
rcrl
pop
or
lds
sbb
test
adc
in
movb
int3
into
jge
xor
mov
or
ljmp
add
ret
cmp
loopne
push
jl
fsub
jnp
adc
lea
daa
scas
lods
xchg
cmpsl
jb
imul
vmovdqa
jo
shrl
jle
mov
pushf
lret
test
xor
cmp
ficompl
test
xor
and
mov
test
repz
movsl
enter
dec
into
mov
sbb
add
shll
dec
mov
jp
xor
sub
add
out
jp
sbb
aad
cmp
add
and
frstpm(287
add
xchg
fistps
mov
ss
add
inc
add
pop
je
jle
int
add
add
rolb
mov
inc
add
sub
lods
popl
push
add
mov
mov
push
ljmp
inc
outsl
and
mov
addb
fcoms
data16
arpl
cmpsb
sub
add
lea
xor
fidivl
adc
ss
sub
dec
sbb
jnp
cmpsl
mov
leave
add
dec
in
add
jne
test
sub
daa
push
push
xchg
and
jnp
call
add
dec
mov
cmp
lcall
jo,pt
pop
int3
mov
push
dec
shll
fdivrs
mov
xchg
fwait
out
mov
jecxz
in
add
cmp
sub
out
push
sti
adc
std
fucomip
mov
xchg
loopne
out
jecxz
call
fnsave
scas
mov
push
pop
xor
inc
add
es
mov
sbb
roll
nop
xor
popf
inc
add
pop
out
xchg
add
mov
dec
pop
mov
cwtl
pusha
add
hlt
jo
xchg
pop
fistps
mov
nop
addb
inc
test
in
xchg
jbe
aas
adc
sbb
xor
and
add
add
cmp
add
push
push
in
mov
fisttpll
mov
pop
fwait
xor
mov
add
add
pushf
or
pushf
je
xchg
and
xchg
jns
or
add
gs
ret
cmpsb
pusha
add
fisttps
mov
ret
add
push
mov
lock
and
lock
lahf
test
ret
cmpsl
pop
sub
test
push
cmp
add
int3
cltd
sbb
enter
ret
mov
mov
fmulp
movb
add
mov
adc
jge
repnz
shll
cmp
icebp
mov
in
or
hlt
pushf
lret
adc
iret
mov
and
mov
cmp
lahf
inc
add
dec
jecxz
mov
pushf
enter
pop
mov
add
mov
call
add
ds
pop
fldenv
and
mov
pop
xchg
inc
cwtl
in
movsb
pop
out
add
ljmp
dec
mov
add
sbb
and
sbb
dec
stos
jne
add
mov
add
pop
mov
addb
sub
mov
movsl
icebp
cli
jb
or
mov
dec
aam
sub
add
clc
fnstcw
sahf
lret
mov
gs
add
xlat
xor
jns
jle
xor
mov
add
push
xchg
popf
test
test
adc
and
jno
and
sub
movb
mov
mov
pop
or
addb
js
jns
popa
or
mov
stos
xlat
adc
mov
dec
push
in
mov
adc
cmp
mov
daa
mov
jl
push
mov
mov
jo
in
les
lahf
ds
stc
dec
xchg
mov
add
lods
out
jl
imul
test
lds
sbb
out
aas
push
loopne
addb
bound
jmp
mov
scas
or
inc
pop
pop
cmp
add
adc
inc
add
inc
add
mov
adc
push
sahf
adc
loop
add
fs
fiadds
dec
sbb
mov
push
jnp
inc
add
sbb
adc
xchg
fsubr
sbb
data16
pop
mov
mov
and
add
or
pushf
dec
fwait
pop
shlb
outsw
lods
les
jl
cmc
stos
pop
mov
bound
pop
lock
inc
lahf
rolb
inc
and
xchg
mov
add
lock
mov
adc
and
stos
popf
pop
loope
popa
sub
rcll
cmp
repnz
rcll
xor
in
add
sbb
push
add
dec
out
mov
cmp
mov
repz
enter
add
inc
pop
test
lods
into
xor
cmpsb
outsb
xchg
push
daa
mov
cmpsb
stc
sub
push
fdivr
xchg
scas
test
push
jle
pusha
add
test
mov
and
add
popf
mov
das
jecxz
test
sti
jl
add
fcmove
inc
fisttpll
add
loopne
jne
or
adc
lahf
push
add
lods
xchg
ss
fwait
sub
ljmp
lret
pop
mov
addb
fisubs
call
mov
xchg
dec
addb
add
cwtl
jp
fcompl
ret
sbb
mov
scas
mov
sbb
jle
imul
push
and
shl
das
jmp
or
inc
add
push
ret
or
cli
xchg
loope
addr16
adc
roll
push
repnz
xchg
movsb
movsl
jl
sub
cmpsb
jbe
lods
mov
ret
mov
xor
enter
filds
jge
mov
sti
sbb
add
aas
jmp
add
test
shll
movsb
and
inc
add
jmp
loope
fsubs
jo
callw
lds
sbb
inc
jno
jle
addb
jmp
addr16
push
add
pop
lret
jnp
jecxz
xor
les
or
nop
push
add
sub
dec
outsb
hlt
mov
dec
adc
add
push
xor
or
movb
addb
xchg
mov
mov
fnsave
or
sub
lds
mov
jp
cmovne
mov
loop
das
mov
xchg
xor
xlat
jle
mov
sub
jo
insb
dec
jae
ja
sbb
add
mov
add
fwait
inc
lret
cmp
sub
mov
nop
push
hlt
inc
and
ja
dec
addr16
int3
stc
add
cmp
mov
in
push
icebp
jle
lcall
pop
fisttps
loopne
fs
movb
out
xor
movsl
xchg
je
add
sbb
inc
mov
sahf
addb
sarl
aam
insl
xor
lods
mov
sub
push
add
xor
test
sbb
dec
aas
jle
mov
sub
add
and
idivl
mov
mov
pusha
add
test
loop
push
xchg
sub
inc
add
data16
sbb
mov
xchg
divl
or
pop
pop
adc
jns
lods
rclb
xchg
inc
add
ret
movb
pop
jge
popa
rcrb
and
sub
in
repnz
std
xor
outsl
jp
jg
jbe
hlt
jno
xchg
jle
scas
movsl
cs
mov
mov
mov
inc
add
cmp
xchg
rcll
push
dec
ret
pop
mov
sbb
pop
jae
sbb
dec
bound
imul
jae
adc
aaa
add
xor
stos
push
iret
idiv
in
jns
outsb
sub
jnp
aas
xchg
or
dec
xor
sbb
daa
push
jge
add
lcall
adc
jns
mov
xor
and
bound
jmp
pop
ret
dec
popf
push
adc
mov
in
mov
cmp
lods
repz
adc
sbb
std
inc
addr16
leave
cmpsl
test
adc
inc
add
ret
inc
add
add
push
push
sub
jnp
in
cwtl
ds
aaa
mov
cld
xchg
in
imul
add
aad
jmp
or
fcoml
xlat
movsb
ret
jae
leave
fwait
aad
test
lods
and
mov
add
jo
pushf
subl
movb
cs
fdivs
sbb
add
jge
imul
xchg
stc
cmp
and
stos
pop
pop
dec
pop
into
and
or
dec
xchg
or
decl
xor
dec
cltd
push
and
lea
inc
add
or
adc
add
incb
imul
push
add
adc
xor
mov
adc
cltd
push
mov
fidivs
add
cmp
add
push
lock
mov
pop
in
fwait
es
xchg
push
add
mov
add
adc
sbb
xchg
fs
mov
add
dec
aaa
shll
jp
mov
cmp
mov
icebp
inc
add
sbb
in
ficomps
add
daa
std
dec
mov
insb
adc
add
add
and
test
mov
dec
in
mov
negb
mov
mov
push
jp
jecxz
outsl
xchg
negl
or
add
adc
scas
push
div
cmpsb
ss
and
pop
pop
popf
out
push
ret
lret
jo
add
push
jl
aam
xor
ds
cmpl
cmc
and
fldenv
add
out
push
cmpl
movsl
sbb
ficoml
shll
add
loope
cmp
push
sub
std
xchg
stc
jo
xchg
push
mov
jmp
leave
out
sbb
lock
pop
jp
mov
outsl
icebp
cwtl
push
mov
sbb
movsl
sub
shll
xor
cmpl
add
push
add
mov
cltd
mov
jmp
mov
sbb
scas
xor
mov
ds
xchg
pop
cli
pusha
add
addr16
pop
mov
subl
mov
jo
lcall
sarl
sub
cmp
mov
xor
or
fwait
outsb
pop
cmc
mov
daa
lcall
jecxz
hlt
cmp
sbb
jnp
add
scas
pop
ret
and
sub
mov
add
lcall
insb
out
rolb
or
stc
pop
scas
subl
pop
loopne
leave
ja
push
add
popa
int
insb
mov
fwait
lods
es
fs
add
in
add
push
mov
add
out
loope
mov
sub
sbb
fnstcw
add
jecxz
repz
xor
out
addb
pop
pop
push
iret
mov
adc
nop
sub
jbe
push
repz
imul
hlt
inc
add
jnp
iret
xor
call
mov
or
push
adc
test
inc
add
ljmp
adc
out
cmc
xor
cmp
push
aad
or
xchg
pop
mov
cmp
call
jns
fucomi
inc
add
ret
add
iret
sbb
les
call
test
adc
xchg
rorb
cltd
lods
repz
add
pop
js
push
dec
sbb
and
aam
lahf
push
mov
imul
add
cmp
into
stc
or
addb
xchg
loop
jo
int
and
int3
mov
jmp
push
hlt
mov
pop
xchg
or
add
nop
jo
xor
ficompl
movb
add
push
add
dec
shll
pushf
xlat
insl
in
add
lret
add
lock
clc
clc
mov
sbb
jl
push
or
xchg
xchg
pop
mov
ret
test
insl
hlt
push
add
mov
cmp
scas
insb
loopne
mov
inc
mov
push
and
dec
cmp
ljmp
int
popf
dec
push
idivb
seta
inc
add
pop
fists
push
add
into
cwtl
cli
outsb
pop
cli
jmp
adc
jno
cwtl
repnz
sbb
repz
fdivrl
negl
or
mov
add
arpl
mov
cmp
lahf
sub
loope
jo
inc
add
and
mov
fcomi
sub
jnp
sub
inc
add
hlt
jp
test
sbb
shll
ret
adc
test
xchg
mov
movsl
jnp
nop
jo
es
mov
mov
pop
and
cmp
pop
adc
cwtl
sbb
sti
mov
mov
and
xchg
adc
jno
lcall
dec
repz
mov
jge
add
rcll
add
add
je
mov
jo
test
imul
sub
dec
ja
mov
xchg
imul
loop
or
cmc
addr16
sub
push
ja
test
daa
mov
sbb
bound
cmc
clc
mov
add
stos
cwtl
pop
jmp
mov
and
pusha
add
pop
bound
cmp
call
lds
add
dec
bound
xchg
fbld
ror
ja
sarl
imull
test
pop
test
jl
xchg
hlt
fucomip
pop
fbld
dec
int3
sub
mov
jge
sbb
sub
add
dec
mov
leave
dec
in
sahf
xchg
jo
fbstp
aam
add
push
outsb
sarl
add
cs
stos
inc
push
out
fdivrl
mov
jge
add
add
je
fstpl
cmp
daa
stos
mov
mulb
add
or
add
add
rolb
pusha
add
mov
add
pop
das
inc
adc
dec
push
cmp
push
jns
add
push
xor
hlt
sarl
mov
pop
cs
les
mov
push
popa
mov
and
icebp
jbe
cwtl
leave
cmpsl
mov
lods
sub
sbb
push
ret
cmp
int
or
shrl
movb
test
add
popa
ds
idivl
fwait
jge
ljmp
sti
insl
loope
add
movb
sbb
sti
loope
and
loop
dec
in
push
or
lea
es
mov
out
movb
fdivrs
lods
stc
int3
push
bound
sub
out
or
je
cmc
mov
mov
in
clc
stc
cltd
icebp
test
jae
mov
cs
imul
push
and
lret
ret
adc
cli
fisubl
add
fwait
not
fldl
push
addb
int3
mov
add
insl
or
leave
mov
add
pop
inc
add
add
or
jbe
hlt
aaa
stos
movsl
push
add
sbb
mov
imull
push
sub
fisttps
push
sub
pushf
mov
sub
gs
add
xchg
inc
add
xchg
inc
add
add
int3
adc
and
std
push
xchg
xlat
int
insb
dec
pop
pushf
aad
in
mov
call
or
lock
jno
pop
pmullw
sbb
aaa
push
je
or
pop
movsb
movsl
es
xlat
loope
cwtl
jp
dec
mov
arpl
sbb
inc
add
call
jnp
xor
adc
xor
imul
rolb
movb
add
mov
aas
in
in
inc
add
jle
dec
movsl
sbb
fstpl
ds
jbe
popa
jbe
add
sub
add
add
cltd
in
icebp
lahf
xchg
push
add
shrl
sbb
add
add
lret
clc
movsl
imul
mov
xchg
jl
adc
add
popa
clc
inc
and
pop
xchg
pop
push
pop
int
iret
addb
xor
mov
dec
cmpsl
aaa
dec
dec
into
pop
push
add
push
and
push
into
push
in
movb
jmp
xor
out
add
inc
add
xchg
in
imul
pusha
add
hlt
scas
and
mov
mov
lret
movsb
lock
test
mov
rolb
ret
pop
je
mov
add
add
add
push
add
dec
inc
sahf
jbe
add
ret
inc
add
add
and
ds
dec
sub
cmp
lock
xchg
ret
inc
dec
je
add
push
sub
pop
pop
call
imul
cmp
mov
mov
add
add
nop
dec
aad
add
inc
add
dec
xor
dec
sub
inc
add
push
inc
mov
sti
add
cmpsl
int3
adc
out
mov
stos
pop
and
cli
jns
ljmp
inc
add
push
mov
push
pop
popa
aaa
sub
mov
movb
out
dec
repnz
jecxz
bound
int3
pop
cmp
add
mov
ficomps
fisubl
sbb
out
into
push
pop
jg
push
sbb
xor
rolb
mov
add
pop
iret
jge
pop
push
sbb
mov
fldl
mov
and
shll
add
xlat
wrmsr
insb
bound
addb
fdivl
leave
sbb
inc
add
xchg
imul
int3
scas
pop
mov
in
xchg
sub
data16
inc
add
daa
sub
fmul
and
xchg
push
scas
xchg
mov
adc
push
rcrl
sbb
icebp
insb
xlat
mov
imul
inc
gs
je,pn
add
mov
add
inc
xchg
scas
and
sub
add
pop
jb
or
xchg
repnz
frstor
cwtl
dec
xchg
push
sbb
pop
xchg
fdiv
mov
sti
xchg
int3
xor
inc
mov
shl
lods
nop
pop
das
push
roll
cmp
add
cmc
add
pusha
add
add
jo
in
add
jnp
lret
pop
fidivrs
pop
lret
les
fadd
lods
add
pop
or
mov
and
fadds
imul
sbb
add
add
cli
je
add
test
out
addb
mov
stc
nop
jb
add
stc
nop
jb
clc
fmuls
add
dec
sub
jl
and
nop
jb
add
xchg
and
and
push
mov
xchg
ret
add
add
inc
add
xchg
ret
aas
add
add
clc
inc
add
push
fdiv
add
add
stc
nop
jb
in
add
addb
call
nop
cld
nop
jmp
pop
add
fmuls
mov
xchg
ret
pop
add
mov
stc
nop
jb
testl
mov
jbe
add
decl
push
mov
xchg
ret
add
fsubrl
sub
stc
nop
jb
fdivr
add
mov
ljmp
sub
lcall
or
add
dec
jecxz
add
add
imulb
mov
xchg
ret
add
pop
popa
ret
mov
nop
cld
nop
jmp
add
stc
nop
jb
add
add
movb
jb
testl
test
nop
cld
nop
jmp
xchg
xchg
add
aad
mov
stc
nop
jb
xchg
add
pop
hlt
push
pusha
stc
nop
jb
popf
add
sub
out
add
jmp
jp
nop
cld
nop
jmp
add
add
call
stc
nop
jb
fsub
adc
andb
stos
add
add
push
call
and
xchg
add
add
or
add
nop
jb
xchg
pop
js
jae
push
mov
xchg
ret
mov
stc
nop
jb
pop
dec
cltd
cltd
add
jb
add
stc
nop
jb
cmp
testl
cmpb
xchg
xchg
mov
nop
cld
nop
jmp
jecxz
xchg
add
lea
cld
nop
jmp
push
sbb
adc
xchg
insb
add
stc
nop
jb
sahf
aad
xchg
jp
lret
mov
stc
nop
jb
xchg
add
out
jo
add
stc
nop
jb
pop
add
sbbb
add
xchg
cmpsb
cmp
in
loopne
add
pop
jge
add
movsb
add
cld
nop
jmp
add
add
mov
lahf
cmp
nop
cld
nop
jmp
add
dec
mov
stc
nop
jb
notl
mov
cld
nop
jmp
lcall
add
add
stc
nop
jb
add
add
lret
sbb
rclb
pop
in
add
add
sub
add
nop
jb
add
add
vandnpd
push
cmp
ret
add
out
pop
sbb
loopne
mov
xchg
ret
and
aad
add
add
stc
nop
jb
add
out
adc
xor
add
stc
nop
jb
fadds
add
add
adc
subl
stc
nop
jb
add
sub
stc
nop
jb
add
adc
stc
nop
jb
mov
add
xchg
jecxz
pop
aam
cmpsb
pop
movzwl
stc
nop
jb
add
xchg
push
add
push
mov
xchg
ret
pop
lret
add
mov
stc
nop
jb
add
and
jb
pop
jecxz
orl
lea
stc
nop
jb
add
add
xor
nop
jb
mov
adc
mov
push
mov
xchg
ret
in
add
lret
cmp
nop
cld
nop
jmp
xchg
movsl
stc
nop
jb
pop
pop
add
in
rolb
dec
mov
stc
nop
jb
mov
icebp
xor
pop
push
mov
xchg
ret
add
mov
call
stc
nop
jb
add
sar
nop
jb
add
add
add
fmuls
test
nop
jb
fdiv
jbe
mov
push
mov
xchg
ret
add
add
push
push
mov
xchg
ret
add
add
add
stc
nop
jb
mov
add
ljmp
pop
add
testl
push
add
stc
nop
jb
add
xchg
push
add
incl
nop
cld
nop
jmp
add
push
adc
add
ljmp
jmp
sub
cld
jne
stc
nop
jb
adc
adc
stc
nop
jb
add
mov
cmp
jb
add
stos
jnp
nop
jmp
in
add
clc
testb
test
add
add
nop
jb
add
inc
add
popa
nop
cld
nop
jmp
add
add
mov
nop
cld
nop
jmp
dec
add
jecxz
hlt
jbe
mov
nop
cld
nop
jmp
add
lcall
dec
pop
add
dec
in
clc
pop
pop
lcall
add
nop
jb
sbb
pop
dec
nop
cld
nop
jmp
aas
jecxz
out
add
add
push
mov
xchg
ret
mov
add
and
mov
orb
aas
mov
lcall
adc
push
nop
cld
nop
jmp
add
es
stc
nop
jb
add
sarl
aad
loopne
sub
push
mov
xchg
ret
add
add
or
nop
cld
nop
jmp
es
add
add
push
mov
xchg
ret
add
add
nop
jb
xchg
aad
pop
push
out
pop
push
stc
nop
jb
add
add
add
sub
mov
nop
cld
nop
jmp
add
dec
add
les
addb
mov
stc
nop
jb
add
mov
jb
add
add
add
sbb
jne
stc
nop
jb
push
mov
inc
add
mov
stc
nop
jb
add
dec
add
jae
inc
add
add
add
mov
stc
nop
jb
add
add
shl
stc
nop
jb
add
and
push
mov
xchg
ret
mov
add
mov
stc
nop
jb
adc
xchg
enter
adcb
add
pop
pop
push
nop
cld
nop
jmp
sahf
sahf
add
sub
add
stc
nop
jb
stos
add
sub
nop
jb
out
jecxz
add
sub
stc
nop
jb
add
add
int
push
mov
xchg
ret
lea
and
stc
nop
jb
add
cmc
add
addr16
lea
stc
nop
jb
add
ret
add
inc
add
add
stc
nop
jb
sbb
add
xchg
test
cs
stc
nop
jb
xchg
adc
arpl
add
mov
stc
nop
jb
rcr
cld
std
mov
stc
nop
jb
add
jne
stc
nop
jb
jecxz
mov
add
jb
add
add
dec
jne
nop
cld
nop
jmp
dec
es
lret
add
add
nop
jb
notl
movsl
dec
push
mov
add
call
add
pop
jns
or
stc
nop
jb
pop
xchg
xchg
out
add
nop
jb
sbb
add
lds
mov
nop
jb
mov
add
pop
ret
push
mov
xchg
ret
mov
stos
fdiv
fists
nop
jb
stos
add
mov
stc
nop
jb
xchg
sub
rep
push
mov
xchg
ret
add
add
subb
add
mov
xchg
jle
push
mov
xchg
ret
fmull
add
add
jb
cld
add
add
add
sub
mov
xchg
ret
add
inc
push
mov
xchg
ret
aad
add
stos
rorl
pusha
push
mov
xchg
ret
add
cmp
idivb
fdivrp
nop
jb
pop
popf
pop
add
call
lock
add
xlat
mov
mov
nop
jb
andl
ret
add
dec
add
nop
cld
nop
jmp
out
dec
xchg
xchg
es
add
nop
cld
nop
jmp
pop
add
icebp
mov
cld
nop
jmp
pop
add
stos
xchg
in
sbbl
nop
cld
nop
jmp
add
ds
push
mov
xchg
ret
jecxz
add
dec
mov
push
mov
xchg
ret
xchg
or
stc
nop
jb
pop
out
dec
nop
cld
nop
jmp
adc
fadds
pop
cltd
add
adcb
clc
es
add
add
mov
stc
nop
jb
roll
jp
notl
ljmp
cld
nop
jmp
dec
sub
mov
add
nop
jb
add
das
pop
stc
nop
jb
add
dec
add
mov
stc
nop
jb
add
addl
cmp
cmp
nop
jb
add
or
push
jl
stc
nop
jb
xchg
add
clc
add
test
outsl
jmp
add
cmc
testl
jb
add
add
mov
stc
nop
jb
add
adc
enter
mov
xchg
ret
xchg
jne
stc
nop
jb
xchg
mov
xchg
mov
sbbb
add
adc
imul
lret
idiv
stos
jno
aad
add
pop
push
mov
xchg
ret
dec
add
sbb
push
mov
xchg
ret
dec
add
add
repnz
or
stc
nop
jb
jno
mov
loope
out
xor
stc
nop
jb
add
sahf
xchg
stos
adc
mov
stc
nop
jb
popf
add
cmc
add
ja
fsubl
stc
nop
jb
xchg
testb
fwait
test
nop
cld
nop
jmp
stos
out
mov
div
stc
nop
jb
add
add
add
out
push
push
mov
xchg
ret
add
add
popf
mov
stc
nop
jb
aad
xchg
and
add
loope
sub
nop
jb
mov
add
pop
mov
stc
nop
jb
add
imul
sbbb
add
xchg
add
add
clc
add
stc
nop
jb
add
mov
in
inc
lock
paddusw
aaa
xchg
outsb
jmp
stc
nop
jb
add
add
pop
adc
nop
jb
add
stos
stos
add
push
lcall
sub
jmp
in
add
test
idiv
stc
nop
jb
cltd
add
xor
stc
nop
jb
add
aaa
jmp
xor
add
nop
cld
nop
jmp
xchg
cld
stc
nop
jb
pop
add
popa
stc
nop
jb
add
add
pusha
add
test
or
add
nop
jb
push
add
cwtl
push
stc
nop
jb
lret
dec
xchg
xchg
out
add
mov
aaa
or
jne
stc
nop
jb
add
add
push
adc
stc
nop
jb
add
add
push
dec
push
stc
nop
jb
add
mov
cmp
xor
add
stc
nop
jb
add
xor
push
mov
xchg
ret
mov
jne
nop
cld
nop
jmp
add
popf
xchg
push
mov
xchg
ret
and
add
add
mov
stc
nop
jb
aad
sbb
jle
outsl
loopne
nop
jb
add
stos
sub
decl
cld
nop
jmp
add
mov
popa
stc
nop
jb
pop
adc
add
add
push
add
adc
nop
jb
mov
add
push
add
add
add
add
adc
add
jb
inc
add
add
add
add
stc
nop
jb
sbb
jne
stc
nop
jb
xchg
add
imulb
sti
stc
nop
jb
fsubrl
stc
inc
stc
nop
jb
add
lds
jecxz
pop
lea
push
mov
xchg
ret
aad
xchg
and
gs
add
xchg
cmpl
jg
add
add
stos
stc
nop
jb
cld
push
push
popf
sub
hlt
imul
push
repnz
add
aad
add
movsb
cmp
stc
nop
jb
xchg
lea
stc
nop
jb
xchg
mov
add
inc
sbb
xor
inc
add
stos
cltd
js
sar
nop
jb
stos
dec
negb
mov
add
pop
push
mov
xchg
ret
cld
aas
add
jp
push
add
pop
jmp
jmp
add
arpl
xchg
add
mov
nop
cld
nop
jmp
jno
add
adc
nop
cld
nop
jmp
add
cs
nop
cld
nop
jmp
push
sarl
rcll
push
in
lods
push
mov
xchg
ret
add
push
stc
nop
jb
dec
add
push
mov
movzwl
stc
nop
jb
add
add
push
jno
cmpl
nop
cld
nop
jmp
add
push
push
mov
xchg
ret
add
xchg
add
fcompl
cld
nop
jmp
lds
add
fdivr
cltd
lea
mov
xchg
ret
mov
outsb
push
mov
inc
push
add
add
bound
push
add
mov
add
call
add
imul
sub
inc
add
add
mov
mov
push
mov
xchg
ret
add
xchg
adc
jne
stc
nop
jb
xchg
aad
push
stc
nop
jb
add
add
nop
cld
nop
jmp
mov
xchg
stc
mov
nop
cld
nop
jmp
xchg
mov
subb
add
add
rcll
arpl
nop
jb
add
mov
shl
stc
nop
jb
jp
add
outsl
nop
nop
cld
nop
jmp
add
add
sub
xor
add
nop
cld
nop
jmp
out
mov
jb
add
add
add
rolb
inc
stc
nop
jb
mov
add
sbb
xchg
add
or
test
adc
add
add
add
add
mov
shlb
arpl
fsts
mov
mov
push
push
mov
xchg
ret
mov
add
stc
nop
jb
add
add
call
nop
cld
nop
jmp
pop
pop
add
and
mov
pop
cmp
mov
xchg
ret
jp
add
imul
stc
nop
jb
xchg
in
add
push
cmp
test
nop
jb
aas
add
push
mov
xchg
ret
addl
mov
stc
nop
jb
stos
add
mov
xor
mov
nop
cld
nop
jmp
add
add
mov
stc
nop
jb
stos
add
pop
aas
pusha
add
in
push
push
mov
xchg
ret
pop
lret
stos
add
fidivrs
stc
nop
jb
cmp
nop
cld
nop
jmp
mov
arpl
add
pushf
push
nop
cld
nop
jmp
aas
xchg
add
clc
jp
flds
stc
nop
cld
nop
jmp
stos
add
add
add
nop
jmp
xchg
add
sahf
jno
ja
jne
stc
nop
jb
add
stc
nop
jb
sahf
stos
push
lds
mov
xchg
ret
dec
aad
stos
xchg
xchg
add
outsb
test
nop
cld
nop
jmp
clc
lret
mov
mov
nop
jb
jp
imull
sub
jb
dec
dec
add
stc
nop
jb
add
test
nop
jmp
pop
push
pop
add
add
xchg
stc
nop
jb
lcall
adc
inc
add
nop
jb
out
add
mov
dec
idiv
stc
nop
jb
add
mov
pop
jae
cld
nop
jmp
add
add
mov
stc
nop
jb
sbb
cltd
jecxz
repnz
push
push
mov
xchg
ret
mov
ret
jno
add
divb
stc
nop
jb
dec
and
sahf
xchg
or
add
nop
jb
fdivr
bound
imul
cmp
ret
add
xchg
add
stc
nop
jb
add
add
and
stc
nop
jb
dec
stos
and
arpl
popa
cmp
popf
cmc
stc
nop
jb
add
in
les
mov
cld
inc
add
adc
cmc
sahf
stos
push
push
mov
xchg
ret
add
ret
dec
cmpsb
and
fsubl
xor
add
stc
nop
jb
jp
cmc
fwait
add
push
mov
xchg
ret
out
cmc
add
jmp
stc
nop
jb
arpl
pushf
and
nop
cld
nop
jmp
lret
add
stos
add
fstpl
cld
nop
jmp
pop
xchg
add
mov
mov
stc
nop
jb
add
lds
add
xor
nop
cld
nop
jmp
dec
push
xchg
add
out
dec
nop
cld
nop
jmp
adc
lds
rorb
movsb
nop
cld
nop
jmp
add
dec
mov
nop
cld
nop
jmp
stos
mov
je
add
nop
cld
nop
jmp
add
xchg
mov
mov
nop
cld
nop
jmp
jbe
push
stc
nop
jb
add
ror
mov
sbb
nop
jb
xchg
addl
lds
mov
stc
nop
jb
out
add
add
mov
push
stc
nop
jb
add
out
mov
mov
stc
nop
jb
mov
sbb
cli
nop
cld
nop
jmp
add
xchg
mov
int3
jne
stc
nop
jb
add
and
mov
stc
nop
jb
push
mov
mov
nop
jb
and
add
and
or
lret
nop
jmp
popf
add
lret
add
inc
push
or
jb
faddl
lret
sti
rep
stc
nop
jb
add
add
add
stc
nop
jb
sub
int
rcll
sldt
add
mov
xchg
repz
stc
nop
jb
pop
jecxz
mov
nop
cld
nop
jmp
xchg
out
xchg
add
add
pop
cmpw
nop
cld
nop
jmp
add
jle
mov
add
nop
jb
add
cmpl
nop
cld
nop
jmp
add
add
add
ret
dec
lods
push
mov
xchg
ret
jp
add
lods
add
add
sldt
add
int3
add
stc
nop
jb
mov
add
ret
je
nop
cld
nop
jmp
mov
ret
fsubrp
out
repnz
stc
nop
jb
lret
add
std
add
push
mov
xchg
ret
xchg
add
sbb
popa
add
nop
jb
adc
mov
push
nop
cld
nop
jmp
fadds
add
xchg
add
xchg
stc
nop
jb
add
xchg
stos
mov
mov
pop
cmc
inc
add
in
dec
jle
nop
cld
nop
jmp
add
dec
lea
cld
sar
imul
stc
nop
jb
testl
pop
mov
stc
nop
jb
add
add
add
nop
jb
lret
add
mov
add
dec
mov
shr
stc
nop
jb
testb
clc
add
dec
pop
stc
nop
jb
dec
faddl
add
aad
icebp
out
add
inc
adc
nop
jb
jp
mov
lret
mov
nop
jb
add
cmp
nop
jb
add
pop
add
add
pop
xor
stc
nop
jb
add
pop
scas
dec
push
mov
xchg
ret
add
pop
cmc
add
mov
stc
nop
jb
add
lcall
push
mov
xchg
ret
add
mov
cld
push
mov
xchg
ret
es
ret
add
add
stc
nop
jb
add
add
lds
push
mov
xchg
ret
testb
mov
nop
cld
nop
jmp
clc
add
add
jecxz
push
stc
nop
jb
add
add
add
add
clc
push
mov
xchg
ret
add
popa
add
mov
xchg
ret
dec
dec
add
xchg
sarl
stc
nop
jb
add
add
xchg
nop
jb
add
ljmp
jmp
add
add
popf
out
add
push
mov
xchg
ret
xchg
jp
mov
stc
nop
jb
out
dec
add
addb
mov
stc
nop
jb
pop
add
stc
nop
jb
dec
adcl
add
stc
nop
jb
pop
xchg
add
mov
stc
nop
jb
fdivl
jecxz
xchg
addb
leave
stc
nop
jb
mov
mov
push
push
stc
nop
jb
dec
add
add
stc
nop
jb
add
out
add
add
add
adcb
fcomps
pop
idivl
adc
add
stos
out
inc
add
add
xchg
aad
adc
ret
cmp
fdivrp
call
std
incl
add
repz
mov
push
mov
xchg
ret
jp
cmp
aad
cs
stc
nop
jb
add
add
mov
cmp
ret
push
dec
mov
add
stc
nop
jb
add
add
dec
push
push
mov
xchg
ret
adc
pop
lcall
jmp
add
add
xchg
add
mov
stc
nop
jb
stos
add
mov
xchg
pop
inc
add
jp
aad
insb
add
stc
nop
jb
add
xchg
xchg
add
test
add
andb
pop
and
push
mov
xchg
ret
jno
xchg
jb
shr
nop
cld
nop
jmp
add
mov
subl
or
pop
cmp
nop
cld
nop
jmp
fsubrs
pop
nop
cld
nop
jmp
sbb
add
movsb
push
daa
pop
sub
stc
nop
jb
ret
add
in
add
add
nop
jmp
dec
add
add
add
and
in
mov
stc
nop
jb
add
mov
leave
nop
cld
nop
jmp
add
adc
mov
and
nop
jb
add
lcall
push
mov
xchg
ret
test
add
mov
nop
jb
in
add
add
das
xchg
stc
nop
jb
add
add
xchg
mov
and
lea
push
sub
xor
inc
add
mov
nop
jb
mov
adc
xor
inc
and
nop
jb
out
add
add
push
mov
add
add
call
dec
lea
stc
nop
jb
sbb
in
pop
and
sahf
mov
stc
nop
jb
mov
dec
pop
push
mov
xchg
ret
add
dec
add
gs
push
mov
and
add
add
movsb
or
scas
shlb
loope
rep
nop
cld
nop
jmp
mov
xchg
sub
jb
add
push
add
jmp
cld
nop
jmp
add
sar
nop
jb
dec
mov
daa
dec
call
stc
nop
jb
ret
stos
add
nop
jb
in
add
pusha
nop
cld
nop
jmp
cltd
add
mov
push
push
mov
xchg
ret
push
xchg
aas
stos
add
xor
mov
stc
nop
jb
add
push
add
xor
stc
nop
jb
mov
add
mov
stc
nop
jb
add
pop
addl
and
stc
nop
jb
lea
add
adc
in
in
add
add
ret
mov
stc
nop
jb
add
add
nop
cld
nop
jmp
aad
pop
jecxz
add
dec
push
push
mov
xchg
ret
mov
popf
push
stc
nop
jb
add
clc
push
sahf
xor
push
mov
xchg
ret
aas
divb
jge
or
nop
jb
mov
outsb
je
stc
nop
jb
mov
clc
stc
nop
jb
add
stc
nop
jb
add
adc
and
stc
nop
jb
fsubl
add
push
mov
xchg
ret
xchg
add
adc
lret
stc
nop
jb
idiv
ret
xchg
push
add
push
stc
nop
jb
mov
stc
pop
stc
nop
jb
stos
dec
add
adc
stc
nop
jb
add
add
sbb
stc
nop
jb
sahf
sbb
stos
sahf
mov
stc
nop
jb
add
inc
xor
jp
jbe
stc
nop
jb
add
dec
ja
mov
nop
jb
add
add
aas
add
addb
scas
jb
nop
cld
nop
jmp
add
adc
add
push
mov
xchg
ret
ret
dec
cmp
movzwl
stc
nop
jb
xchg
add
lea
push
stc
nop
jb
jecxz
dec
arpl
stos
fildll
sar
jb
add
add
testl
add
stc
nop
jb
add
inc
add
mov
stc
nop
jb
lea
add
add
repnz
add
cmc
add
andb
add
test
add
nop
jb
in
iret
movzwl
stc
nop
jb
faddl
mov
add
nop
jb
xchg
mulb
and
movsl
and
loopne
stc
nop
jb
lcall
mov
xchg
ret
ret
jno
xchg
jne
add
stc
nop
jb
xchg
add
adc
mov
push
mov
xchg
ret
ret
sbb
les
push
stos
stc
nop
jb
add
clc
stos
push
mov
xchg
ret
add
mov
nop
cld
nop
jmp
mov
sub
mov
xchg
ret
cld
add
add
dec
add
nop
cld
nop
jmp
add
pop
testb
inc
nop
cld
nop
jmp
xchg
lcall
leave
shr
nop
cld
nop
jmp
clc
add
add
mov
stc
nop
jb
xchg
cmp
fsubrp
stc
nop
jb
add
mov
push
mov
xchg
ret
push
sub
and
nop
jb
sahf
mov
mov
adc
nop
jb
add
stos
sahf
push
bound
mov
add
rcll
imull
xor
js
test
call
out
incl
mov
jb
lret
add
add
lcall
mov
stc
nop
jb
jno
pop
add
mov
adc
nop
jb
add
sbbl
jl
sar
nop
jb
mov
mov
push
stc
nop
jb
jecxz
aad
xchg
mov
nop
jb
add
arpl
mov
nop
cld
nop
jmp
jp
neg
dec
push
mov
xchg
ret
in
in
add
mov
xchg
ret
aas
push
add
add
inc
xor
stc
nop
jb
add
add
jge
pop
stc
nop
jb
mov
ret
ljmp
incl
xchg
ret
add
shl
lahf
mov
stc
nop
jb
xchg
lock
mov
stc
nop
jb
pop
xchg
cmc
lret
rorl
jb
mov
add
add
nop
cld
nop
jmp
add
add
xchg
pop
add
stc
nop
jb
add
and
jne
stc
nop
jb
stos
testb
popf
nop
cld
nop
jmp
add
pushf
mov
stc
nop
jb
mov
imul
jmp
nop
jmp
sbb
outsl
add
stc
nop
jb
add
add
shrl
nop
jb
add
add
mov
stc
nop
jb
add
xchg
pop
and
stc
nop
jb
lds
add
ror
mov
stc
nop
jb
add
aas
add
std
je
stc
nop
jb
add
addr16
mov
nop
cld
nop
jmp
add
in
xchg
stc
nop
jb
xchg
stos
aad
pusha
add
mov
stc
nop
jb
sbb
or
insb
insb
add
nop
jb
and
aam
add
stc
nop
jb
mov
call
adc
inc
add
roll
add
stc
nop
jb
lea
cmc
in
aad
aas
outsb
cmpl
nop
cld
nop
jmp
add
xchg
mov
stc
nop
jb
not
add
and
stc
nop
jb
sbb
add
mov
sti
stc
nop
jb
add
dec
add
jno
addb
sub
and
inc
add
testb
push
mov
popa
add
add
mov
pop
stc
nop
jb
add
add
mov
aam
xchg
enter
and
jmp
lret
mov
nop
jmp
stos
add
jno
add
add
push
nop
cld
nop
jmp
jno
stos
aad
add
inc
add
incb
jb
aas
xchg
pop
cld
xorl
nop
jmp
in
pop
in
add
push
mov
xchg
ret
pop
add
add
nop
cld
nop
jmp
mov
nop
cld
nop
jmp
add
testb
add
add
mov
hlt
inc
add
dec
fsubl
sub
xlat
adc
mov
push
mov
xchg
ret
pop
lea
leave
and
push
mov
xchg
ret
xchg
pop
add
stc
nop
jb
add
stos
jge
inc
push
mov
xchg
ret
add
add
or
sar
nop
jb
mov
dec
stos
stos
and
jno
mov
push
mov
xchg
ret
add
add
movsl
add
stc
nop
jb
add
xchg
out
add
stc
nop
jb
dec
add
lret
add
nop
jmp
add
mov
add
mov
jb
adc
dec
pop
out
add
stc
nop
jb
mov
dec
add
stc
nop
jb
push
aas
shll
cld
nop
jmp
add
cmc
dec
add
add
mov
stc
nop
jb
add
or
stc
nop
jb
stos
cltd
pop
testl
add
push
in
inc
add
cmc
lds
pop
push
stc
nop
jb
add
fdivrl
stc
nop
jb
push
add
ficoms
nop
jb
add
add
jecxz
add
jmp
nop
cld
nop
jmp
add
ret
mov
stc
nop
jb
jecxz
add
add
mov
nop
cld
nop
jmp
negl
jge
push
mov
xchg
ret
add
xchg
add
inc
mov
stc
nop
jb
in
add
movsl
inc
mov
stc
nop
jb
add
sub
nop
jb
pop
mov
jecxz
add
nop
cld
nop
jmp
add
mov
dec
cmp
nop
jb
add
and
ret
mov
xchg
xchg
lcall
add
add
cmp
movzwl
nop
cld
nop
jmp
dec
add
add
sar
jb
xchg
add
and
les
nop
jb
lea
idivl
push
stc
nop
jb
ret
add
add
stc
nop
jb
stos
mov
inc
nop
cld
nop
jmp
dec
cltd
dec
add
lcall
in
call
cmc
call
mov
xchg
ret
fsubs
fadds
lret
add
add
mov
push
mov
xchg
ret
roll
pop
add
stc
nop
jb
mov
ret
sbb
dec
in
push
add
cmpsb
or
enter
sub
inc
add
dec
rcll
add
test
cld
nop
jmp
fmull
push
push
mov
xchg
ret
cmp
mov
inc
in
mov
xchg
ret
add
cmc
out
mov
nop
cld
nop
jmp
lea
aad
es
testl
nop
cld
nop
jmp
stos
dec
mov
push
jge
fdivr
nop
jb
sahf
add
lcall
pop
push
mov
xchg
ret
add
add
push
mov
xchg
ret
add
add
mov
popa
add
mov
xchg
ret
mov
ret
dec
mov
stc
nop
jb
dec
mov
ds
stc
nop
jb
add
mov
mov
push
push
mov
xchg
ret
mov
outsb
add
nop
cld
nop
jmp
roll
add
push
add
in
inc
add
jmp
add
add
add
mov
adc
nop
jb
negl
stos
stos
lretw
stc
nop
jb
imulb
mov
stc
nop
jb
clc
add
in
mov
call
nop
cld
nop
jmp
pop
add
inc
add
push
stc
nop
jb
mov
xchg
mov
add
nop
cld
nop
jmp
cmp
negl
popa
stc
nop
jb
mov
add
dec
mov
stc
nop
jb
add
inc
stc
nop
jb
cmc
add
pop
mov
repz
nop
jb
pop
add
push
mov
xchg
or
push
arpl
mov
nop
cld
nop
jmp
add
and
lods
mov
stc
nop
jb
adc
add
cld
test
nop
cld
nop
jmp
mov
mov
jne
stc
nop
jb
dec
dec
sbb
nop
jb
add
lret
adc
cmc
fcompl
mov
addb
call
jae
nop
jb
add
mov
es
add
nop
jb
add
fsubrs
outsl
arpl
add
nop
jb
pop
xchg
inc
add
lods
push
stc
nop
jb
mov
add
adc
nop
cld
nop
jmp
add
negb
out
stc
nop
jb
out
lds
xchg
fimull
and
lcall
cmc
add
stc
nop
jb
stos
mov
scas
je
stc
nop
jb
cmc
add
ret
stc
nop
jb
pop
xchg
add
cmpl
incl
mov
mov
stc
nop
jb
mov
out
cltd
and
push
mov
xchg
ret
add
es
test
nop
cld
nop
jmp
add
and
add
loop
mov
stc
nop
jb
adc
add
mov
stc
nop
jb
add
adc
sub
dec
mov
stc
nop
jb
popf
mov
into
push
stc
nop
jb
clc
push
add
dec
add
add
mov
xchg
ret
sbb
arpl
mov
push
mov
xchg
ret
add
add
call
hlt
incl
add
nop
jb
add
cltd
add
nop
cld
nop
jmp
add
fadds
lea
add
cs
nop
cld
nop
jmp
add
sub
movb
add
add
add
call
cld
test
out
add
push
mov
xchg
ret
add
out
push
add
nop
cld
nop
jmp
mov
aas
add
pop
xor
stc
nop
jb
arpl
add
cmpb
arpl
mov
stc
nop
jb
add
lahf
mov
nop
cld
nop
jmp
cld
pop
mov
push
mov
add
add
add
in
adc
das
inc
add
pmaxub
mov
insb
jbe
mov
pop
lds
enter
inc
add
add
pop
pushf
repz
inc
add
in
movsb
out
inc
fcom
sbb
or
mov
add
out
rolb
xchg
mov
push
xor
add
inc
add
fisttpl
dec
ss
add
das
sub
or
add
fnsave
lret
lods
mov
mov
sahf
loope
movsl
lea
and
mov
mov
aad
mov
ljmp
shrl
add
push
cwtl
test
dec
mov
lret
lahf
clc
jns
sarl
mov
aad
seta
sub
das
sub
repnz
jns
cmpsb
xor
add
and
xchg
addr16
clc
call
in
imul
in
xlat
scas
mov
mov
add
mov
dec
insb
push
push
sbb
mov
add
pop
mov
stos
inc
add
imul
sbb
adc
xor
ds
xchg
pop
test
ja
lods
push
add
orl
inc
pop
xchg
dec
and
jmp
scas
int3
jno
add
mov
les
mov
lret
std
or
add
mov
cld
mov
sub
je
push
and
adc
add
stos
mov
sti
mov
popa
cmp
test
mov
and
mov
cmpl
cmp
shlb
cld
gs
mov
clc
pop
lock
mov
nop
rclb
out
ret
dec
pop
cmc
adc
stos
test
loopne
and
movsl
imul
movb
add
out
in
pop
and
mov
lret
jno
addr16
iret
ret
imul
dec
fmull
xlat
jo
pop
adc
push
push
cmpsl
data16
add
sti
mov
lret
mov
sbb
inc
addb
sti
push
sbbl
push
add
fsubs
jp
add
xchg
push
mov
std
sbb
cmp
add
ljmp
xor
addb
jge
mov
jg
adc
xor
ds
and
mov
loope
cmpsl
ror
xchg
lahf
dec
jmp
xor
sbb
xchg
mov
jg
or
adc
gs
in
mov
movsb
sbb
and
sti
into
xor
jnp
mov
sbb
cld
aaa
fdivl
mov
jb
add
add
mov
mov
jle
mov
in
idivl
sub
dec
nop
fsubrl
pop
aaa
stos
or
in
xlat
inc
adc
aam
and
sbb
xchg
sub
addb
fimuls
hlt
in
pop
repz
lahf
push
xor
cwtl
xorl
fimull
scas
cltd
pop
xor
mov
lds
enter
dec
push
mov
lret
push
mov
in
shrb
or
cli
pushf
rcrb
add
dec
in
ficompl
mov
lods
mov
int3
cmpsl
push
add
and
mov
out
jb
push
fadds
dec
test
pop
stos
scas
or
test
addb
test
dec
push
rolb
push
out
stos
jne
data16
pusha
add
mov
lods
movsb
jnp
fdivr
mov
sbb
dec
aaa
rcr
lahf
sbb
inc
movsb
rcll
je
test
fidivs
xor
ret
xlat
pop
push
les
xor
add
add
jge
repz
add
jae
add
xchg
jp
jnp
sti
dec
and
inc
mov
jns
addb
sbb
add
ret
xchg
or
mul
je
mov
sbb
xchg
nop
push
add
fdivs
dec
add
addr16
fimuls
add
cmp
jne
add
inc
test
xchg
pop
dec
call
mov
inc
fmulp
scas
mov
mov
test
sti
xchg
ja
mov
inc
add
add
in
cmpsb
imul
mov
jne
dec
pop
mov
loope
in
test
sbb
das
xchg
xlat
mov
sti
dec
shrb
dec
loop
jo
push
xor
mov
or
rcrl
lret
or
and
inc
or
push
test
scas
push
add
std
sbb
add
dec
lods
imull
push
inc
add
iret
lock
add
das
adc
mov
shll
add
shll
cltd
into
repnz
or
pop
mov
inc
sarl
pop
mov
lock
inc
add
mov
cmp
sbb
jb
scas
std
xchg
add
idiv
jg
bound
pop
dec
or
jnp
add
ret
test
adc
mov
inc
add
popa
mov
xor
add
cmpsb
add
mov
shrl
xor
push
shl
push
jmp
adc
push
iret
and
ljmp
add
scas
pop
mov
in
int
sub
sbb
andl
jo
add
lret
pop
push
xor
cmpsb
jmp
xchg
xor
push
add
insl
xor
jmp
sub
add
clc
divl
mov
pop
sbb
jge
sbb
dec
pop
movl
hlt
adc
add
sub
mov
ja
scas
int3
das
ljmp
adc
jl
jl
das
movsl
outsl
lds
je
add
rorb
inc
dec
push
ljmp
jb
out
dec
mov
cwtl
outsb
xchg
mov
cmc
and
jge
mov
repnz
mov
ret
pop
out
sbb
jbe
dec
mov
stos
cmp
or
lret
dec
shl
addb
fistpll
add
push
cmp
push
in
cmp
enter
xor
add
dec
dec
inc
je
mov
test
xchg
cmp
xor
add
jp
jae
sbb
mov
loopne
mov
addb
repz
mov
clc
into
adc
dec
shrb
arpl
dec
stos
in
sbb
add
js
adc
inc
add
mov
fisubs
inc
add
cvttps2pi
cmp
add
aam
mov
sbb
cltd
xor
and
add
imul
mov
mov
adc
add
sub
mov
push
in
pusha
add
add
mov
fisubrs
and
ss
cmp
or
add
into
add
movsb
xchg
mov
cmpsb
push
cmp
movb
int
in
mov
mov
into
stos
mov
adc
mov
loope
pop
add
ss
dec
inc
add
cld
rolb
add
repz
stos
push
pop
ds
es
jns
xchg
ljmp
xor
gs
inc
iret
adc
movl
js
out
inc
add
in
inc
add
cmpsb
arpl
sub
xor
cld
hlt
fisttpl
xor
jb
rol
das
ja
clc
mov
clc
jg
add
scas
sti
push
test
out
loopne
mov
shrl
insl
cmp
test
aam
xchg
shll
xor
dec
insb
xchg
inc
inc
add
mov
insl
out
add
outsb
test
xchg
addr16
adc
mov
daa
mov
daa
jae
dec
mov
add
cmpsb
fstps
sahf
jmp
pop
pop
loopne
mov
jecxz
push
gs
push
add
out
cmpsl
scas
mov
cs
jae
lret
leave
loopne
xchg
jo
es
imul
loop
ret
rcrb
pop
lods
popa
sbb
scas
clc
jno
sub
inc
mov
movsb
fs
push
pop
loop
push
mov
jmp
xor
fnstcw
mov
inc
add
cmpsl
add
fs
ret
cmp
jmp
cmp
mov
add
push
adc
flds
or
add
dec
pop
repz
bound
push
sbb
add
cwtl
xchg
test
add
add
scas
movb
es
pop
xor
enter
popa
repnz
jo
mov
xor
mov
testl
add
add
movsb
shlb
and
mov
adc
add
addr16
mov
xor
add
mov
es
mov
or
jno
frstor
add
add
add
roll
sbb
mov
ja
adc
stc
or
lret
addr16
xor
adc
imull
xchg
mov
fprem
insb
scas
popa
jl
xchg
jns
lea
and
stos
cs
dec
jle
mov
pop
movsb
push
jmp
add
sbb
ss
int3
cmpsb
dec
insb
lods
cmpsl
pop
sbb
insl
cmp
mov
add
jmp
stc
cmp
add
testl
mov
or
and
lods
mov
dec
or
and
add
adc
add
shl
ss
outsb
ja
in
add
bound
pop
mov
bnd
mov
mov
and
pop
addb
fsub
push
cmp
add
sahf
or
sahf
cltd
jle
xchg
pushf
fsubrl
in
sti
push
cmp
jl
scas
loop
pop
fimuls
daa
shr
fmuls
lods
es
repnz
lods
inc
add
gs
or
xor
in
push
add
add
cltd
inc
add
cmp
mov
xchg
mov
sbb
cmp
xchg
and
xchg
sub
out
lods
push
and
add
out
add
inc
les
gs
xor
cmpsl
or
icebp
das
inc
add
daa
loopne
xchg
or
adc
stos
cmovl
cmp
add
jle
sbb
notb
mov
stc
inc
push
test
jp
ret
pop
cmpsb
jmp
xchg
sub
iret
in
and
pushf
xchg
dec
push
mov
andl
je
imul
repnz
xchg
add
fsub
out
into
sub
jmp
pop
add
hlt
sti
ljmp
push
mov
dec
jp
push
shl
stc
adc
push
aad
xchg
or
inc
add
outsl
into
fstl
cmp
je
pop
addb
mov
pop
js
add
mov
out
scas
sahf
rcrl
mov
jnp
loope
adc
xchg
call
cltd
adc
xor
gs
inc
sti
popf
xchg
inc
add
in
push
xchg
rcll
mov
pop
add
clc
and
mov
jl
push
mov
fisubrl
add
jne
cmpsb
aas
push
add
daa
notb
cmovno
add
fsubl
insl
in
cs
mov
or
mov
and
xchg
push
mov
dec
and
or
push
mov
loopne
lods
sbb
sarb
insl
fsts
ja
pop
ja
xchg
add
add
push
fldt
pop
jo
jl
sbb
mov
sti
in
scas
adc
and
sub
popl
sahf
repnz
test
push
push
imul
clc
hlt
sub
test
jle
xor
call
cmp
mov
mov
dec
fidivrl
jns
or
sub
es
shll
lods
mov
dec
cmp
clc
pop
jp
push
das
adc
mov
pop
cmp
fst
js
mov
and
sbb
add
imul
xor
add
stos
push
xor
cwtl
int3
out
clc
shll
add
out
inc
sub
adc
pop
and
mov
mov
jle
xchg
std
pushf
dec
add
shll
arpl
out
movsb
in
nop
mov
pop
sbb
jl
cmp
add
push
lahf
das
mov
daa
or
push
adc
loopne
insl
addb
adc
loop
fs
repz
int
rorl
sahf
out
pusha
add
iret
mov
jge
daa
shrl
sbb
test
mov
or
add
adc
fistpll
out
jg
mov
xchg
insl
popa
jb
mov
pop
ja
insb
adc
ret
enter
aas
insb
movsl
or
cld
lret
cmp
pushf
sbb
scas
les
xchg
mov
repz
add
add
jmp
jmp
and
gs
jb
gs
pop
cmp
jns
ret
fisubrl
mov
add
outsb
adc
adc
lods
mov
mov
shll
into
out
rcrl
or
pop
je
mov
jb
adc
add
ret
jg
or
int3
sbb
nop
mov
lock
xchg
jecxz
lds
or
add
add
push
mov
sbb
adc
rolb
mov
mov
xlat
mov
cwtl
in
sbb
dec
in
add
push
insb
add
pusha
add
scas
inc
add
aad
lds
and
movsl
dec
cmp
add
add
sub
lcall
movsl
stos
fdiv
outsl
test
add
repz
add
jno
cmp
push
cwtl
icebp
mov
add
add
inc
rolb
add
add
xor
add
mov
inc
or
je
arpl
add
mov
lods
jnp
sti
xchg
cmp
adc
jae
mov
dec
push
pop
push
add
call
addb
rolb
xchg
lods
jg
out
hlt
xchg
dec
pop
xchg
xor
rorl
mov
push
lds
add
add
dec
rolb
add
add
imul
insl
cmpl
mull
mov
mov
xchg
add
adc
push
inc
loopne
fs
leave
jns
add
or
mov
jne
pop
push
mov
ja
xor
dec
mov
jne
mov
out
popf
sub
add
movb
add
inc
pop
sub
test
sub
inc
shll
aas
out
pop
jg
push
pop
mov
push
add
xor
daa
or
outsl
jl
std
cld
dec
pusha
add
and
add
pop
insl
std
aam
imulb
or
adc
lods
xchg
sub
jno
jns
dec
in
mov
es
xchg
imul
fisubs
add
lods
add
pop
pop
adc
in
icebp
in
sbb
callw
sub
lahf
sub
popf
mov
sbb
lahf
jp
mov
icebp
mov
jg
arpl
ss
lods
fsubs
jl
stos
stos
dec
sbb
add
pop
enter
or
mov
sub
xor
test
cmpsl
imul
roll
fldenv
je
xor
test
mov
std
sbb
shl
mov
into
outsl
data16
and
dec
les
add
push
aas
js
or
add
sub
ret
mov
outsl
shlb
loop
and
scas
imul
mov
imul
add
push
mov
xrelease
test
fistl
shr
pop
sbb
pusha
add
cltd
push
out
xor
pop
dec
icebp
sub
push
xchg
test
mov
arpl
add
inc
jb
jbe
add
mov
ljmp
sbb
repz
addr16
and
add
inc
add
bound
imul
mov
lret
outsl
ds
add
gs
popa
dec
stos
xchg
xchg
or
xchg
jbe
mov
rolb
pop
shrb
cmp
les
ja
addr16
pop
adc
or
test
adc
dec
pop
mov
je
mov
lahf
addb
loope
pop
inc
mov
add
fidivrs
inc
add
insb
mov
into
insb
or
cs
mov
xchg
mov
ljmp
sub
dec
jnp
add
hlt
in
pop
cmp
or
add
xor
sar
fdivrs
into
sarl
push
fcoms
cmp
aad
xchg
or
arpl
mov
pop
stos
cwtl
insb
fcmovne
ljmp
ds
nopl
sti
cmp
mov
add
push
add
mov
aaa
or
add
mov
push
sti
jno
lea
ss
jge
cltd
inc
add
jns
add
jle
and
in
dec
add
and
scas
lock
movsb
clc
sahf
xchg
outsl
lret
and
cmp
jl
cmp
das
dec
int
stc
stos
ds
lret
jp
test
out
mov
je
aam
add
cli
sub
mov
rcrl
adc
in
aas
lret
je
add
or
rcl
push
shlb
add
lret
nop
stc
lock
addb
div
adc
cld
push
mov
add
jmp
adc
pop
in
pushf
lods
test
or
pop
mov
add
adc
jge
inc
or
sbb
pop
enter
sbb
les
xor
je
lcall
test
xchg
imul
push
xchg
mov
lods
arpl
jnp
int
push
xor
fisubrl
std
je
add
sub
call
xchg
push
jns
push
adc
add
dec
or
psubw
stc
add
jg
add
fisttps
out
pop
shr
in
adc
push
adc
pop
clc
dec
paddw
test
ljmp
call
movsb
push
icebp
jo
add
cmpsl
jnp
aam
pop
xlat
lods
push
fdivrl
push
mov
add
and
test
ret
nop
mov
fiadds
add
addb
xchg
ljmp
pop
aad
add
stc
xchg
mov
dec
dec
mov
mov
jne
fistpl
add
mov
rorb
cmp
ja
add
sub
xlat
psrad
push
lahf
adc
mov
movb
jg
lret
xchg
mov
jecxz
mov
stos
test
mov
add
xor
lods
popf
or
push
add
popf
or
mov
mov
push
inc
add
pmulhuw
and
mov
mov
fdivrs
pushf
dec
in
insl
jmp
popf
stos
mov
test
or
movb
scas
cmp
lods
inc
add
jno
dec
pop
decb
test
mov
fdivrp
test
jecxz
mov
outsb
mov
insl
xor
into
pop
arpl
mov
xchg
fsubr
jo
aad
sbb
push
lds
add
inc
insl
xchg
xor
lds
add
out
or
mov
add
add
push
xchg
mov
fwait
mov
xor
xlat
rolb
xor
add
push
jp
fmull
push
insl
mov
push
and
dec
inc
or
mov
pop
push
add
or
imul
push
dec
mov
and
cmp
xchg
rclb
mov
addb
inc
add
inc
push
iret
push
add
dec
shll
popa
mov
or
sbb
stc
jmp
adc
mov
add
or
inc
aas
cltd
icebp
into
mov
dec
push
mov
pop
jbe
add
xor
add
ret
test
adc
cmp
mov
add
loope
adc
pop
dec
mov
std
jg
add
jb
inc
mov
add
test
add
call
add
sarb
add
enter
dec
imul
pushf
mov
shlb
xchg
cmp
incb
add
add
mov
push
or
mov
test
and
xchg
jmp
add
scas
sti
xor
sub
sbb
mov
sub
clc
push
jae
movsl
inc
adc
dec
rolb
repz
push
jo
repz
in
lods
pop
enter
ljmp
pop
mov
out
hlt
mov
cmp
int3
or
rolb
leave
int
out
xor
aad
fbld
jg
insb
xor
pop
add
lss
jno
add
push
add
dec
mov
lea
lods
aam
jmp
cld
jl
pop
test
cmp
fsubs
fcoms
pop
push
call
cwtl
out
daa
out
push
sub
sub
loope
in
mov
jo
pop
and
pop
mov
push
mov
mov
fcmove
addb
pop
xor
loop
sti
mov
popf
push
fsts
in
popf
rcrl
mov
adc
push
sub
int3
or
and
adc
push
mov
and
fdivrs
add
push
fcoml
data16
ret
fimuls
adc
vsubsd
lods
dec
shrb
out
pop
ss
jmp
add
je
add
pop
xchg
cmpsl
imul
jmp
xchg
aad
cmpsl
test
push
push
jmp
add
pop
inc
es
or
bound
xor
lret
mov
addb
lret
jp
mov
add
xchg
scas
sub
cli
out
cmp
add
and
sub
sbb
add
insb
mov
jmp
cli
mov
mov
js
cmpsl
xor
mov
cwtl
addb
mov
ret
les
ljmp
fisubs
inc
jmp
ja
pop
popf
bound
clc
nop
mov
mov
xchg
mov
inc
addr16
not
mov
cmp
add
iret
cwtl
xor
add
fsubs
add
add
out
mov
inc
add
xor
xor
sub
ret
lock
je
add
hlt
in
clc
fwait
and
add
sub
sarl
fildll
jbe
add
das
mov
arpl
fidivl
sub
jno
mov
add
and
and
fcmovu
xlat
mov
mov
jge
in
dec
cmp
pop
arpl
fdivrp
cmp
in
adc
les
sub
add
and
ss
add
push
adc
fistl
push
sbb
mov
rolb
push
test
das
scas
pop
sub
idivb
add
mov
scas
fildl
add
icebp
jp
cltd
push
and
stos
and
add
mov
mov
out
dec
shrl
das
add
pop
loopne
sub
fucomi
gs
push
or
nop
sub
mov
in
mov
xor
clc
add
push
fisubs
add
imulb
scas
and
inc
movsl
jmp
push
lcall
cmpsl
movsl
xor
add
imul
mov
les
mov
xor
das
clc
les
lds
push
push
lcall
cmpsb
je
dec
push
add
add
mov
mov
fstl
xor
aas
test
push
jecxz
fsts
movb
cs
and
call
and
aas
mov
push
jae
leave
jp
cwtl
cmpsl
addr16
and
enter
pop
cld
and
rolb
add
inc
test
scas
ljmp
pop
dec
les
push
jne
cld
jmp
lods
inc
add
fsubrs
push
mov
add
add
xchg
xchg
cmpsb
ret
enter
popa
add
into
sar
dec
cli
mov
sahf
xchg
dec
jg
jge
sbb
outsb
imul
jne
add
daa
leave
xor
pop
xchg
jmp
cmp
cmp
jno
and
cmpl
outsl
xchg
inc
jge
mov
add
sub
xlat
pop
outsb
pushf
xor
mov
sub
mov
mov
fdivrs
out
xor
mov
sbb
ss
add
repz
mov
lcallw
add
sub
les
nop
mov
cmp
push
pop
or
pop
push
mov
int
movsb
inc
rcll
lret
dec
or
add
jb
pop
dec
lcall
or
jmp
sbb
jbe
pop
jnp
rolb
mov
mov
push
add
dec
fwait
mov
js
das
push
fidivrl
jns
lahf
push
pop
mov
add
lock
add
insb
pop
in
pop
ljmp
mov
mov
fbld
xchg
sbb
and
add
dec
xchg
and
repz
xor
pusha
add
test
push
addb
push
test
mov
adc
in
jb
insb
fmul
mov
push
add
loopne
popa
aad
mov
fbstp
movsl
xor
xor
mov
leave
xor
imul
iret
out
mov
and
cs
repnz
mov
bound
xor
dec
push
mov
adc
mov
jbe
aaa
inc
add
add
fistps
enter
out
xchg
addb
data16
cmp
sub
xchg
pushl
enter
fisttpl
stos
lock
mov
mov
test
gs
int3
xor
inc
add
adc
cmp
fisubrl
pop
push
aaa
test
add
dec
jg
shlb
and
movb
lahf
add
or
push
mov
add
or
mov
dec
scas
iret
aam
movsb
mov
scas
push
dec
aam
cmp
mov
add
dec
cwtl
cmpsl
les
shrb
jp
mov
adc
sub
hlt
jnp
mov
xor
ss
ret
adcl
test
mov
add
and
stc
push
and
scas
dec
adc
arpl
addb
insb
mov
inc
imul
sar
popa
xor
int3
testl
dec
clc
xor
jbe
dec
mov
mov
jb
bound
push
movsl
jle
mov
xor
movsb
fmul
pop
jg
pushf
cs
push
loopne
lock
sbb
mov
dec
push
dec
imull
and
dec
aaa
shll
jnp
add
jne
not
push
lock
add
xchg
jae
jo
test
add
movsb
adc
shl
movsb
push
jo
lds
sub
das
pop
in
inc
xor
mov
dec
push
xchg
dec
pop
xchg
stc
add
jnp
test
sbb
out
clc
shr
rol
dec
pop
mov
xchg
idivb
sbb
lret
sub
push
sbb
mov
add
sbb
fxch
add
and
or
mov
mov
cmc
loop
movsl
sbb
mov
dec
jnp
jp
inc
add
dec
jnp
push
lds
add
add
lret
and
inc
xor
stos
bnd
sub
cmp
xlat
mov
adcl
jle
xor
adc
out
add
insb
dec
sub
call
adc
xor
insb
int
test
inc
add
addr16
xlat
inc
add
in
pushf
in
push
inc
test
xchg
mov
movsb
cmpsb
scas
pop
dec
les
cmp
in
cmp
xchg
fs
sarb
dec
dec
int
xor
xchg
fmuls
aam
lock
out
xchg
cs
imul
mov
mov
loop,pt
adc
jne
or
add
rcrb
das
inc
popa
shl
and
cmp
addb
add
mov
pop
test
jb
sahf
adc
pushf
cld
out
divl
das
int3
int
test
add
inc
ror
out
dec
or
add
dec
xor
repz
clc
sub
enter
movsb
arpl
inc
add
addb
and
outsb
xor
xor
sub
add
add
mov
add
mov
inc
dec
sub
cwtl
cli
xchg
lret
rcrl
icebp
mov
mov
cmpsb
fwait
and
adc
mov
xchg
jno
ret
call
lds
push
xchg
pop
scas
les
pop
adc
mov
jae
push
lods
jo
dec
mov
mov
inc
add
push
add
pop
push
je
jle
outsl
and
mov
ret
jo
add
adc
repnz
frstor
add
mov
add
mov
inc
add
mov
mov
enter
popf
mov
out
fstps
lods
lret
mov
addb
push
ljmp
mov
add
stc
jb
dec
fimuls
mov
addl
aas
popf
add
fisubl
add
cmp
ljmp
enter
add
test
test
push
jmp
call
pop
push
add
je
add
mov
lret
cmp
fiadds
pop
pop
mov
jb
add
sahf
inc
add
lcall
lock
mov
ss
fisttps
out
dec
cmp
and
ret
cmp
std
stos
fmulp
cwtl
aad
leave
push
cli
popa
mov
stos
and
mov
cmp
add
stos
adc
or
imul
push
in
inc
add
in
incl
inc
dec
pop
xchg
xor
lds
add
fs
out
in
aas
xchg
rolb
mov
xor
jno
dec
adc
jmp
xchg
xchg
jbe
cmpsl
mov
add
mov
sbb
ljmp
leave
cmp
push
in
add
add
repnz
push
add
jmp
add
insl
push
loopne
adc
sub
lahf
or
xchg
in
add
jb
fwait
stos
ret
push
les
add
adc
mov
sbb
addb
add
mov
mov
insb
icebp
xchg
sbb
adc
dec
xchg
xchg
mov
add
loopne
mov
add
jle
shll
add
enter
inc
add
cmc
popa
sbb
dec
jbe
cmc
sbb
adc
dec
xchg
xchg
addb
dec
push
mov
out
testb
addb
and
or
dec
rorb
adc
repnz
leave
cmpl
add
pushf
mov
or
rolb
sbb
repnz
mov
idivl
inc
insb
scas
cmpsb
pop
cmp
mov
repz
rcrl
mov
daa
je
jno
fcompl
push
xchg
addb
jge
push
pusha
add
int
and
clc
sbb
jp
adc
xchg
bound
enter
pop
test
dec
mov
icebp
clc
aas
xlat
addr16
cmp
lahf
add
stos
ljmp
shlb
mov
add
test
mov
lcall
in
ljmp
adc
add
lods
jo
mov
adc
pop
xchg
dec
adc
xor
add
mov
cmpsb
btr
xchg
sbb
inc
add
addb
mov
ss
jle
mov
sbb
addb
adc
test
add
mov
xor
nop
mov
xor
or
inc
add
in
test
inc
add
sbb
scas
push
add
add
mov
inc
add
adc
add
repnz
push
cwtl
lcall
add
push
repz
rcll
add
mov
add
int
bound
les
icebp
add
pop
test
fbld
out
into
repnz
inc
loope,pn
fidivrl
jns
xor
cld
test
in
mov
imul
or
std
ret
jg
inc
add
dec
inc
fs
push
xlat
mov
pop
imul
and
shrl
push
idiv
add
repz
mov
cmpsl
lock
jnp
std
ret
pusha
add
pop
cltd
push
enter
add
xchg
pop
shlb
dec
shrl
scas
inc
sahf
jne
mov
push
out
fucomip
and
out
xchg
mov
icebp
and
in
sub
test
test
popa
outsl
jle
test
clc
dec
xchg
adc
add
out
mov
lahf
jns
in
nop
push
fistl
iret
lret
arpl
loope
add
xchg
push
add
xor
mov
xchg
outsb
lea
js,pn
lods
cli
cmp
and
mov
in
lods
out
repz
mov
cmpsl
sub
stos
mov
xor
cli
movsl
scas
int3
out
dec
das
ljmp
insb
lahf
negl
sub
call
mov
sbb
mov
cltd
addb
cmpsb
sahf
and
dec
ja
push
notl
push
shll
jle
mov
push
andl
notl
add
rolb
lock
enter
outsl
addb
addb
movsl
cmp
lea
je
aaa
jbe
rcrl
bound
lret
bound
sub
sbb
loope
roll
mov
cmp
dec
cmpsl
cltd
rcll
jle
cmp
add
gs
add
and
cmp
insl
add
das
cmpsl
cli
sub
rolb
cmpsb
dec
fdivp
xchg
mov
mov
add
rclb
add
mov
aaa
pop
push
cmp
outsb
mov
add
sbb
add
add
mov
xor
pop
cmp
mov
sahf
jecxz
xchg
sub
popf
jbe
add
testb
aaa
jns
sbb
or
mov
mov
mov
mov
jo
xchg
xor
mov
cwtl
pop
cmc
push
add
cmp
mov
mov
mov
adcl
sub
xor
mov
jno
subl
xchg
mov
std
adc
pop
mov
lret
dec
cli
cwtl
insb
mov
lahf
mov
jns
jl
add
pop
int3
aad
xchg
cs
jle
outsl
dec
leave
push
dec
cld
cmc
jo
cmp
mov
pop
iret
mov
mov
popf
inc
add
jge
call
scas
jmp
mov
add
jo
addb
xor
adc
aas
shlb
sub
mov
mov
add
mov
scas
xchg
mov
sbb
mov
sbb
movsb
adc
fs
lret
js
call
pushf
push
xor
jl
add
push
sub
xchg
aam
pusha
add
nop
mov
add
mov
leave
cs
xchg
xchg
xchg
fwait
or
inc
lds
add
out
xchg
fcmovu
push
std
ljmp
ret
int
movsb
jp
fcompl
sbb
mov
add
insb
js
sub
aad
mov
in
or
add
sarl
cld
jns
inc
jecxz
and
dec
adc
mov
xchg
shll
dec
mov
outsb
call
gs
inc
add
inc
cli
xchg
outsl
ds
and
fcmovnb
bound
cld
xchg
cltd
sub
inc
xchg
cwtl
dec
inc
inc
xchg
add
and
sub
sbb
xchg
mov
subl
jnp
push
insl
stos
or
mov
mov
push
jmp
push
adc
lcall
cmp
add
add
fisttpl
add
jge
add
das
frstor
loopne
loopne
xor
orl
cs
dec
jo
inc
loopne
dec
scas
jnp
js
ss
and
jb
stos
lods
hlt
sbb
jg
mov
fimull
call
out
add
add
lret
adc
js
aam
add
jae
pop
inc
mov
sahf
adc
add
fstpt
pop
mov
fldl
dec
jo
xchg
pushf
and
push
add
aaa
data16
cmc
cmp
add
dec
or
inc
aaa
jnp
fbstp
add
add
je
add
ja
fidivrl
and
add
fsts
lock
dec
cmp
in
div
push
arpl
sbb
dec
and
xor
mov
jp
pushf
adc
add
iret
xchg
std
add
ljmp
addb
inc
add
push
pop
sti
popa
lret
lods
mov
faddl
cwtl
sti
jae
add
fisttpl
inc
add
add
shll
bound
testb
add
add
and
mov
jbe
cmp
les
dec
fdivrl
inc
add
mov
jb
fld1
popf
fcomps
xor
add
jo
pop
fisubrl
cmc
stos
push
add
fisttps
mov
jle
push
scas
adc
jnp
dec
jo
pop
pop
add
dec
xor
mov
pusha
add
jae
jecxz
add
jmp
xor
or
mov
xor
jbe
int
or
pop
test
iret
mov
add
dec
pop
inc
popa
xchg
iret
jl
pop
mov
fstl
imul
insl
jg
popf
test
mov
mov
rclb
add
jae
popf
mov
lret
loop
cmp
pop
jp
sbb
inc
add
in
mov
sti
into
outsb
cli
int3
mov
cmpsb
add
mov
scas
cmpsl
jmp
mov
mov
gs
jp
pop
push
icebp
push
add
loop
sub
xor
dec
fcoml
outsb
aad
mov
call
xchg
mov
add
iret
sti
or
ds
into
push
cmc
aam
sbb
cmp
push
scas
adc
xor
jecxz
dec
into
popa
dec
or
xlat
movb
jns
push
jae
mov
add
jnp
in
add
sbb
add
shrl
rolb
pop
addb
imul
add
int3
jg
adc
sub
repz
pop
hlt
inc
ja
addb
lock
push
xor
or
and
cwtl
dec
cmovg
mov
add
movsb
aad
xor
adc
jb
sub
add
xchg
add
mov
sub
jns
and
xchg
stos
cwtl
out
jp
mov
pop
add
mov
and
int
loope
lds
add
imul
cmpl
cmc
mov
pop
iret
pop
scas
or
aaa
repz
in
add
cltd
movsb
jge
or
or
lods
lods
inc
cmp
dec
or
dec
inc
add
add
mov
add
cli
int
sarb
shl
inc
int
fs
pcmpgtw
cmp
shrl
cli
pop
roll
push
add
dec
addb
push
orl
in
inc
scas
mov
pusha
add
jecxz
js
jae
add
dec
jb
enter
sti
jno
inc
add
add
add
mov
es
mov
les
fsubs
add
dec
fistl
mov
xor
ja
add
xchg
cmp
pusha
add
fiadds
cs
jl
scas
jecxz
cs
les
lods
mov
push
pushf
sub
inc
sub
shll
push
pop
pop
xchg
pop
jp
orl
idivb
sbb
and
subl
add
and
lret
add
push
shrd
cmp
lods
mov
add
int3
jbe
add
add
loopne
add
and
hlt
js
xor
sbb
sub
dec
mov
fmul
mov
lret
and
cwtl
aaa
mov
xor
punpcklbw
sub
and
int
sub
cwtl
or
sub
mov
sub
dec
inc
add
aas
inc
faddp
mov
vmwrite
sbb
add
rolb
mov
add
std
sarb
inc
add
inc
add
xchg
push
fdivs
xor
dec
xchg
sbb
xchg
out
aad
pop
push
repz
fildll
or
add
sub
mov
sub
sub
cmpsb
into
push
add
jne
rcl
push
pop
cmpsb
bound
or
shlb
adc
inc
jbe
scas
pop
push
jg
add
mov
xchg
out
insb
lahf
or
xor
pop
fsubl
add
jl
add
mulb
dec
daa
loopne
jne
jp
and
addr16
iret
add
push
call
add
repz
mov
xchg
clc
lods
lock
loope
ss
add
fbld
and
mov
sub
add
flds
push
dec
jl
xchg
xchg
pop
jbe
ret
sub
stos
or
mov
jmp
bound
sub
lahf
ja
or
pop
lret
push
imul
add
fcoms
les
daa
imul
lods
pop
mov
fisttpl
test
push
sub
pop
daa
out
dec
loop
sbb
cli
or
adc
add
mov
lds
xlat
ficompl
lods
in
or
add
dec
mov
mov
mov
and
shl
xchg
ljmp
cmp
adc
add
add
xor
mov
xchg
adc
iret
fistpll
sub
add
mov
push
lea
cmp
cmpsl
xor
sub
mov
outsl
inc
idivl
sub
add
int3
rorl
push
cwtl
and
xchg
mov
nop
in
add
cmp
ss
cmovbe
sbb
jmp
pop
add
clc
mov
pop
add
jb
in
dec
hlt
and
decl
push
fsubrl
insl
jle
dec
pop
sub
or
add
inc
shrl
add
mov
xor
dec
movsb
mov
mov
rolb
cwtl
loop
data16
and
les
es
add
outsb
mov
out
jmp
jg
rcr
lods
xchg
mov
shll
mov
jbe
inc
push
out
test
test
loope
add
mov
mov
and
add
inc
add
repz
fildll
add
cmpl
pushf
xor
add
xchg
lret
aas
sbb
xchg
cld
or
sub
mov
add
rolb
sbb
push
shl
sub
fiaddl
or
es
xchg
push
stc
jl
lods
mov
sub
int
icebp
lock
addb
stos
pop
push
xlat
mov
ds
stos
ret
pop
jecxz
rol
andl
nop
dec
fildl
add
lds
fsub
jnp
stos
in
jl
imul
shlb
scas
dec
iret
iret
lret
dec
ds
add
fs
fstl
mov
xchg
pop
or
jp
sub
insl
mov
imul
insb
imul
fisubl
push
xchg
out
cmpsl
push
xor
bound
bound
in
pop
hlt
adc
ja
jbe
mov
les
cmp
into
lcall
cmp
add
outsl
pop
sbb
dec
and
cs
test
in
or
hlt
lock
add
mov
jbe
daa
pop
inc
lcall
add
xchg
push
sbb
add
and
dec
xor
push
std
cmc
fldcw
push
icebp
cmp
addb
mov
lret
test
lcall
mov
jae
out
das
sbb
push
add
outsl
loope
ss
push
je,pt
sub
or
fistpl
stos
and
sbbl
cmpsl
repz
add
dec
mov
mov
sub
cwtl
je
addr16
lret
mov
add
push
pop
setne
sub
mov
popf
pop
icebp
xor
cmpsl
add
inc
aad
add
ja
cld
xchg
pandn
test
push
repz
adc
add
add
sub
push
or
dec
push
add
pop
outsb
addb
xchg
inc
add
pop
xor
and
adc
xor
lret
lret
xchg
jge
jno
mov
paddb
push
stc
xchg
out
adc
xor
jmp
pop
mov
mov
jne
daa
push
and
clc
outsl
addb
push
lret
push
push
stos
jbe
mov
xchg
stos
movsb
xor
xor
jecxz
shll
sbb
rorb
stc
std
pop
mov
add
ss
pop
arpl
jecxz
mov
adc
push
or
add
add
iret
pop
test
out
lods
jmp
sbb
add
jmp
lret
movsl
mov
movb
adc
aas
outsb
rolb
loop
dec
addl
add
dec
daa
xchg
fmull
push
add
cli
imul
push
pop
in
mov
call
nop
jb
mov
mov
xchg
loop
push
add
mov
loopne
sbb
mov
xchg
jl
outsb
fs
mov
xchg
ljmp
outsb
test
xor
sub
punpckhwd
and
xchg
mov
cmp
or
movb
cwtl
add
push
jg
push
addb
jno
mov
xchg
loope
fwait
in
inc
add
or
push
xor
lock
sbb
mov
imul
fs
rolb
pop
pop
jae
sub
test
popf
mov
sbb
fwait
outsl
mov
call
dec
pop
rol
add
cltd
pusha
add
outsb
dec
gs
call
in
decl
cmp
ret
mov
mov
lcall
cmpsb
movsb
out
iret
or
fisttpll
rcrl
sub
dec
xchg
ret
insl
inc
push
cmp
pop
iret
test
stc
xor
jmp
popa
sub
add
addb
push
cmp
insl
stos
adc
lock
pop
inc
push
add
jge
inc
daa
mov
mov
out
add
sarl
add
jg
and
sbb
inc
add
adc
mov
jmp
pop
or
mov
scas
xchg
dec
add
mov
or
adc
mov
pop
pusha
add
jmp
xor
int
mov
pop
add
push
push
scas
xchg
scas
inc
outsb
push
rolb
mov
push
cs
add
les
and
adc
lds
jl
mov
inc
add
dec
cmp
jg,pt
xchg
out
stos
ret
dec
or
jne
pusha
add
mov
xchg
rorb
dec
in
push
mov
pop
outsl
ja
or
lds
test
mov
popa
lahf
jge
sub
shll
test
outsl
aas
xchg
idivb
sub
mov
imulb
mov
movsl
out
adc
add
ljmp
adc
jmp
jmp
pop
nop
outsl
inc
aad
add
insb
je
addb
in
lea
ja
mov
dec
stc
mov
jmp
repz
incb
adc
add
imul
inc
add
stos
mov
bound
cltd
imul
dec
sub
inc
add
mov
mov
sub
ds
adc
push
fmull
imul
jle
xor
mov
mov
pop
xor
inc
cmp
sub
hlt
pushf
stos
es
add
shl
in
push
add
or
push
jb
jne
nop
pop
mov
aas
xchg
adc
mov
push
std
mov
add
or
add
stos
leave
xchg
inc
and
add
add
fwait
xor
xor
loope
add
ret
mov
jecxz
xchg
cli
ds
xchg
mov
jae
repnz
imul
test
add
pop
in
in
fiadds
add
add
movsb
ret
stos
adc
xchg
and
sub
repnz
inc
mov
adc
xchg
cmp
fstpt
in
cli
mov
xlat
loopne
add
mov
or
add
fsts
test
ljmp
sub
aas
cmp
rolb
lahf
push
test
hlt
xor
push
mov
pop
test
lock
sarl
rcrb
jo
addb
fwait
in
in
sbb
or
ret
cmp
xor
pop
pop
mov
ja
fistps
lret
add
sub
bnd
int
sbb
arpl
lods
cmp
sbb
and
lods
adc
outsb
loop
int
jmp
data16
shrl
cwtl
addb
mov
add
push
ja
xor
cmp
daa
sbbl
scas
movb
lods
cmpsl
jb
dec
js
inc
add
cmp
and
out
fwait
lea
stos
xchg
nop
sub
xchg
dec
loop
in
outsl
xor
xlat
out
inc
jecxz
loopne
xor
mov
mov
cmp
mov
fdivrl
inc
loop
mov
out
xor
jg
adc
shrb
cmc
sti
push
dec
loop
pop
repnz
pop
push
lret
add
push
ds
stc
pushf
das
outsb
in
xchg
inc
stos
inc
sub
cs
add
loope
mov
push
xor
add
inc
dec
mov
mov
push
sar
vmwrite
fwait
push
dec
scas
xor
xchg
jo
out
add
push
lock
pop
lea
fwait
push
sub
pop
mov
mov
mov
mov
add
sub
inc
add
fbld
add
lret
mov
or
mov
repz
rolb
and
ss
jge
add
add
addr16
pop
ficompl
or
cli
dec
pop
in
movsl
sbb
push
call
push
jge
fcomip
cmp
add
shrl
in
roll
loop
dec
or
jno
add
xchg
aam
pop
xchg
inc
add
fs
cli
bound
loop
insb
mov
repz
inc
inc
add
movsl
sbb
je
lods
enter
bound
cmp
or
add
add
je
shlb
add
mov
cmp
pop
rolb
add
pop
mov
or
jbe
push
leave
xor
mov
add
imul
mov
pop
inc
add
mov
mov
adc
or
jo
popl
sbb
test
dec
in
andl
cmp
jp
adc
dec
sarl
fwait
stos
dec
pop
jecxz
sbb
add
and
dec
movsl
xchg
fistl
pop
or
pop
jmp
fwait
adc
or
popa
dec
aaa
mov
daa
addb
mov
push
fidivs
inc
inc
add
add
cmp
sbb
rdtsc
xor
xor
outsb
dec
jge
jle
pop
and
add
add
adc
enter
add
fs
daa
jle
push
add
pusha
add
mov
push
cmpsb
and
jge
pop
xchg
mov
ljmp
addb
inc
add
cwtl
mov
xor
js
add
dec
dec
mov
iret
lcall
inc
add
push
add
rcll
test
lret
add
jecxz
sarl
mov
sbb
loope
in
mov
hlt
aad
jne
inc
or
out
test
sbb
add
xor
xor
pusha
add
jg
nop
mov
mov
mov
fcmove
bound
jge
inc
es
jecxz
inc
add
fbld
jmp
jns
add
cltd
repnz
or
jo
push
out
mov
pop
and
fidivrl
repz
sub
cs
pop
dec
cmovo
add
dec
je
addb
mov
mov
fcmove
push
xchg
out
cmp
repnz
fdivs
ds
popl
xor
push
in
push
lahf
mov
jl
add
dec
add
les
adc
dec
imul
out
cwtl
inc
add
jmp
xchg
mov
inc
add
add
fsubrl
xor
pop
sbb
shrb
les
cmpsl
sbb
xchg
inc
stos
sub
xlat
dec
mov
mov
and
and
xorl
push
or
jmp
mov
imul
out
mov
inc
ret
add
dec
decl
movsl
addb
xchg
mov
push
aaa
or
xchg
cmp
out
push
cmp
push
push
pop
bound
jecxz
aam
add
add
mov
std
clc
push
rcll
test
and
fwait
cmp
xor
pcmpgtb
mov
jp
pop
adc
sbb
pop
into
sbb
inc
add
add
sbb
add
mov
sbb
imulb
adc
sti
lret
movl
addb
dec
cmc
out
popa
mov
sub
insb
or
push
jae
rcr
pushf
lahf
lcall
xchg
sbb
test
stos
jne
or
std
in
pushf
mov
loopne
pop
out
mov
lcall
adc
sub
mov
mov
repz
mov
sbb
jg
and
movsl
dec
cmp
add
sti
fcoml
xor
xchg
sti
idivl
addb
jge
sbb
jmp
out
call
insb
out
mov
add
jg
mov
aam
dec
cli
push
add
add
add
sub
loop
ss
fwait
pop
sub
sti
adc
xchg
cld
es
add
movsl
and
sti
xchg
cmp
test
and
xchg
inc
or
dec
and
dec
fldt
and
push
push
xchg
jo
jmp
or
shll
aaa
mov
pop
nop
add
pop
jmp
ss
scas
jne
and
aaa
rolb
mov
sub
clc
roll
cmp
fidivrl
jecxz
pop
fcompl
dec
cmp
fwait
shll
add
nop
adc
push
imulb
jl
test
push
add
push
cltd
cmp
movb
push
jp
mov
inc
add
add
push
inc
and
cmpsb
sbb
jb
adcl
mov
pop
sar
ljmp
call
iret
sbb
add
push
add
add
lods
cmovae
pminsw
mov
lcall
mov
add
xchg
call
rcr
add
or
popa
sub
add
testl
mov
sub
movsl
jno
arpl
jnp
sub
ja
mov
shlb
lret
cmpsl
or
out
xor
add
adc
adc
push
or
fldcw
dec
mov
sub
add
cwtl
fldcw
xor
push
and
scas
or
daa
lods
incb
call
outsl
ficoml
call
mov
imul
testl
adc
out
into
lock
add
or
cmpsl
sub
movsl
xchg
jg
xchg
ja
ljmp
test
lds
cwtl
adc
jg
sbb
stos
shrl
clc
or
aas
dec
loopne
dec
dec
cmp
fimuls
fists
cwtl
and
je
leave
and
pop
add
repz
out
add
movsb
fdivr
jl
test
hlt
int3
movb
lahf
dec
nop
ja
movsb
daa
insl
pop
or
mov
addr16
inc
push
cmp
jnp
add
out
and
inc
mov
sub
xchg
or
push
popa
mov
mov
out
adc
add
jp
sub
sub
into
std
lods
cltd
push
add
cmc
mov
fsubl
sub
daa
gs
push
push
and
loopne
add
add
lret
mov
mov
mov
idivb
mov
and
mov
mov
cli
xchg
xor
mov
mov
sahf
jp
daa
mov
pop
cmpsl
rclb
out
add
pop
or
popf
jns
adc
popa
push
mov
cmc
int3
loopne
int3
cmp
mov
mov
push
idivl
pop
test
cwtl
sbb
and
gs
mov
insb
mov
ret
lods
repz
push
out
lods
addb
aam
je
or
add
into
add
repnz
rclb
mov
insl
push
cmp
inc
add
insb
loope
and
arpl
shl
lods
loope
je
sub
add
jmp
xor
add
cmp
loope
add
out
cmc
ja
addr16
in
or
add
outsb
out
sbb
and
out
shl
loop
iret
aad
imul
add
popf
bound
neg
bound
dec
inc
add
subl
add
cmp
xor
paddd
jb
outsl
jb
add
shll
mov
add
leave
jl
es
sbb
fiaddl
mov
add
addb
outsl
test
mov
ds
arpl
jp
mov
push
cs
mov
in
int
call
idivl
aam
mov
cmpsb
cmove
mov
xchg
stos
push
jno
cmp
fdivrs
mov
sbb
pop
popf
cmp
in
loop
fiaddl
sub
xor
xchg
push
cli
test
adc
cmp
cmp
pop
jmp
sti
push
into
xchg
xchg
fmull
jbe
sbb
fld
add
aas
sahf
pop
ret
out
pop
ja
insl
movsb
in
dec
inc
loope
hlt
int
nop
xor
inc
movsl
rcrb
and
mov
das
sub
mov
add
mov
jbe
add
push
lea
mov
or
cltd
mov
jno
stos
mov
sub
cmpsl
push
add
mull
sbb
cmp
lret
jne
pop
cmpsb
or
lds
add
std
xor
lret
ljmp
jle
jecxz
es
cmpsb
mov
mov
bound
dec
movl
aaa
jp
add
add
pop
sbb
mov
sub
fwait
cmp
add
lods
cmp
movsl
fisubrl
add
insl
mov
in
das
pop
testl
clc
xlat
shll
scas
cmpsl
lea
cmpl
outsl
lret
test
xchg
mov
sbb
add
and
fimuls
push
sbb
cmp
movb
ret
xor
ret
fwait
inc
add
mov
lahf
subl
pop
pop
or
mov
dec
or
and
aaa
jl
pusha
add
add
xchg
sbb
test
push
xchg
or
aaa
cmpsb
push
mov
adc
mov
mov
sub
push
add
jmp
pop
sarl
shl
pop
movb
fiadds
xchg
mov
repz
ljmp
and
fcompl
mov
mov
dec
loope
or
and
adc
leave
xor
or
mov
or
jo
push
rolb
mov
or
cli
mov
pop
xchg
dec
or
inc
addb
add
xchg
pop
dec
imul
or
mov
add
insl
push
rolb
dec
add
les
fmull
aam
adc
sti
add
int
add
jg
sub
js
mov
inc
das
sub
jg
pop
dec
cltd
sbb
lret
xchg
cmp
aam
add
movsb
in
sub
fxch
test
int
add
adc
dec
rcl
xor
sbb
pop
xchg
push
test
xor
add
xchg
nop
add
dec
sbb
add
add
pop
mov
adc
pop
mov
add
fadds
sbb
pop
lcall
in
adc
rolb
cli
xchg
nop
fmulp
mov
fcomp
mov
lock
lock
xor
rolb
xchg
fsts
pop
mov
xor
test
or
add
decl
push
test
sub
dec
into
mov
dec
mov
add
pop
pop
dec
mov
sbb
cs
cs
stc
out
add
mov
scas
fiaddl
add
fdivr
adc
fcomp
mov
inc
jnp
shl
and
xchg
sub
addr16
sbb
adcl
in
push
push
inc
sub
or
in
sahf
push
add
in
push
bound
scas
mov
mov
and
sbb
out
xchg
mov
mov
mull
push
add
mov
xchg
cli
and
mull
add
cli
mov
mov
stos
testl
leave
insb
ret
mov
mov
pop
jmp
repz
cmpsb
jg
imul
sbb
and
iret
mov
iret
lret
dec
imul
or
and
lret
adc
mov
sbb
int3
cs
cli
divl
fisttps
lods
push
in
lods
jge
into
xchg
test
fcmove
and
in
mov
sbb
fimuls
push
mov
into
nop
scas
outsb
addb
add
gs
out
add
adc
pushf
lods
out
sub
addb
pop
test
fldenv
adc
inc
add
xor
add
sub
insl
aas
inc
add
leave
push
add
addr16
pop
mov
add
fcmove
mov
loop
push
xchg
shlb
lods
std
pushf
xchg
mov
mov
cld
jecxz
mov
push
movl
add
xchg
pop
insl
aaa
lods
popa
fs
nop
mov
loopne
xor
mov
push
in
mov
into
xor
jg
icebp
mov
sub
pop
cmp
pop
dec
in
addr16
dec
or
jb
repnz
daa
sub
les
sbb
into
mov
mov
dec
or
into
test
dec
std
dec
adc
ja
dec
dec
sbb
ret
outsb
jo
dec
jb
add
loope
in
stc
jecxz
mov
add
hlt
test
push
sub
add
rcrl
mov
jbe
mov
test
or
mov
mov
adc
push
add
lret
int3
pop
sub
test
insb
enter
daa
sub
inc
add
leave
xchg
int3
aam
test
add
out
pop
ret
fwait
or
push
ret
cli
dec
push
pop
jp
imul
enter
add
test
nop
mov
mov
push
inc
xlat
test
cld
je
lret
lea
jo
adc
scas
xchg
adc
repnz
xacquire
jge
in
jmp
cld
xchg
lds
jecxz
inc
add
mov
call
clc
test
jo
mov
bound
cmp
mov
push
sbb
out
xor
add
add
add
imul
test
add
in
movb
scas
add
ret
scas
in
xchg
mov
cmpsl
cmp
shll
scas
fbld
push
test
icebp
and
sbb
les
int
inc
add
mov
pop
cmp
cli
setl
lret
cmp
in
leave
mov
xchg
sub
pop
fsubl
add
xchg
inc
imul
dec
lcall
sub
jb
jnp
insl
lock
aam
and
or
pop
cmp
testl
mov
mov
push
movb
pop
inc
add
and
dec
xlat
pop
xlat
daa
push
int3
pusha
add
push
pop
sti
adc
cs
cmp
pop
xchg
rolb
je
adc
cmp
pushf
cwtl
cmp
add
in
aam
add
cs
sbbl
scas
js
add
mov
add
adc
or
fmuls
adc
pop
push
push
and
jmp
mov
int
lret
in
xchg
mov
outsl
lret
data16
inc
add
addb
push
mov
lds
call
add
jge
fmuls
call
cmp
add
xor
add
fcoms
jb
in
fcompl
leave
jne
add
xchg
pop
push
push
inc
pop
mov
rcrl
aad
movb
dec
popa
sub
xchg
add
and
add
jb
addr16
pusha
add
lahf
dec
ret
dec
cmp
xlat
cmp
or
std
int
jae
ja
xor
add
add
pop
subl
leave
push
push
add
or
and
cmp
gs
call
push
imul
xchg
jge
pop
adc
pop
es
shl
mov
shlb
lahf
pop
inc
add
test
mov
loopne
xor
xchg
cmc
testl
pushf
jno
add
and
pop
adc
lahf
pop
xchg
shll
inc
insl
lcall
iret
jns
sbb
add
add
daa
and
enter
imul
and
jne
loope
push
fwait
jb
xor
mov
pop
test
in
outsb
in
daa
mov
adc
cmpsl
inc
call
jns
sbb
sbb
sub
cmp
lds
mov
jecxz
xchg
add
sbb
frstor
add
je
stos
cmp
int
inc
leave
roll
cwtl
sbb
mov
dec
lock
les
jbe
subl
dec
stos
sub
or
add
push
add
lock
push
fcomp
test
add
int
sub
bnd
dec
push
adc
push
pop
jecxz
jbe
cmpsb
call
pop
scas
push
loop
push
daa
push
ljmp
inc
dec
pop
cmp
jne
enter
xor
sub
into
add
mov
mov
sar
cmp
jle
mov
in
jl
mov
pop
dec
mov
jge
dec
lret
mov
lret
and
add
les
pushf
jae
arpl
add
cmp
out
addb
jns
leave
iret
pushf
add
sub
addb
dec
test
repz
pop
sbb
leave
sub
push
pusha
add
jle
ja
repnz
sbb
cwtl
mov
outsl
mov
lcall
mov
aad
gs
inc
cli
incl
mov
xor
dec
add
inc
add
lret
dec
adc
aaa
call
cli
test
addr16
ficompl
ja
push
pop
push
jmp
ss
dec
sti
fbstp
mov
inc
sbb
and
push
pop
out
or
inc
cmpsl
jp
aam
pop
push
jnp
scas
out
push
fmull
fwait
sahf
add
jg
lods
imul
popa
enter
testb
outsb
cmp
rcrl
xor
movsb
jne
gs
popf
loopne
push
inc
ret
out
pop
cmpsb
mov
add
test
int3
pop
jge
xchg
cmp
ret
test
das
fwait
sub
pop
jnp
and
jno
mov
and
cs
add
mov
repnz
leave
xor
mov
sti
das
cmp
stc
sti
cmpsl
in
ds
lods
insb
add
pop
lods
call
cwtl
scas
xor
nop
outsl
cld
insb
jbe
lret
pop
out
outsl
aam
sbb
inc
movsl
outsl
cmp
mov
lcall
test
inc
dec
jp
sbb
adc
idivl
aas
cmp
bound
cld
clc
mov
cmp
movb
flds
pop
inc
test
inc
xor
add
pop
ficompl
in
mov
call
sahf
stos
adc
cs
mov
cli
push
mov
popl
jge
push
mov
mov
shll
xor
out
test
outsl
insb
imul
mov
xor
add
fwait
imul
movsb
jecxz
pop
cmp
dec
push
add
inc
aad
mov
ljmp
stos
leave
jecxz
sbb
out
mov
negl
call
cmp
push
mov
add
out
dec
dec
sti
jg
out
stos
push
clc
and
xlat
fcomps
pop
pop
cmp
or
sar
ljmp
and
std
pusha
add
or
add
mov
jns
test
call
insl
mov
int
mov
push
int
jge
add
adc
mov
fimuls
add
pop
daa
pop
popf
sbb
push
add
hlt
cmp
add
movsl
iret
loop
mov
mov
int
add
ret
dec
sbb
add
movsl
aaa
jecxz
mov
and
add
mov
in
jmp
add
lock
into
cmpsl
cmc
jae
sbb
insl
jns
cmp
add
and
cmp
or
or
repz
test
test
push
mov
insl
inc
adc
pop
or
cmpsb
sbb
push
add
or
mov
add
ljmp
inc
fnstenv
inc
mov
and
mov
jno
sti
in
add
mov
xchg
xchg
gs
jp
insl
pusha
add
xchg
cld
sbb
and
fcoml
in
into
jmp
xlat
sub
add
pushf
mov
sub
adcl
mov
push
sbb
xor
jge
sbb
in
mov
push
mov
lahf
sub
add
and
inc
lock
or
icebp
out
test
jecxz
aaa
fwait
or
lret
pop
push
xlat
inc
xchg
adc
fs
xchg
scas
pop
gs
loop
cli
out
rcrb
jno
mov
js
icebp
push
test
cmp
test
add
test
add
add
bound
daa
add
jge
cmc
filds
and
add
loopne
fdivl
and
cs
inc
loop
movl
gs
inc
add
xor
inc
add
adc
jo
mov
imul
mov
ljmp
dec
fildl
inc
orl
icebp
jmp
fbld
add
or
aad
test
jl
jmp
popa
ja
add
scas
cmpl
jecxz
jb
pop
ja
lods
push
cmp
inc
add
add
leave
jle
std
addb
sub
addb
jb
add
dec
jp
rclb
pushf
sbb
and
std
mov
loope
addb
add
jne
adc
sub
adc
add
movsl
xchg
or
jl,pn
or
adc
jmp
jae
add
mov
mov
data16
scas
cmp
es
add
enter
clc
incl
push
jb
and
push
pop
imul
loopne
or
xor
jb
cli
mov
and
cmpsb
or
mov
sahf
data16
add
call
push
testl
xchg
shlb
cmpsl
cmpsl
cmp
push
stc
fcoml
jp
pop
or
and
sub
inc
inc
xchg
xor
sbb
xor
stos
andl
dec
out
jmp
adc
je
sahf
mov
add
roll
cmp
bound
xor
fdivrp
push
add
xchg
add
shl
ja
insb
xchg
xchg
aam
aaa
cmpsb
sub
add
adc
ret
mov
fdivrs
add
test
dec
xlat
test
cli
or
lds
mull
icebp
and
aam
mov
pop
fidivs
lea
dec
mov
movb
fwait
cmpsb
jecxz
fistpl
mov
push
and
stc
jo
sub
adc
sbb
aas
pop
aas
or
cmp
lret
jnp
mov
in
loope
inc
dec
in
and
adc
in
jmp
movsl
jbe
cmc
shll
and
or
add
inc
add
rolb
dec
movb
add
pop
std
adc
dec
pop
sub
inc
add
jno
jle
pop
mov
int
lock
ja
dec
cmp
push
jb
and
jecxz
out
xor
aas
aad
cwtl
fisubrs
fistps
iret
jp
das
add
add
mov
push
mov
pop
sbbl
in
push
rcrl
inc
test
aas
inc
mov
or
add
pop
int
add
loope
jne,pn
adc
xchg
mov
add
dec
push
push
add
in
adc
dec
mov
daa
xor
sub
add
sbb
jns
mov
mov
call
add
mov
sbbl
lods
sub
fsubp
mov
ja
mov
enter
xor
add
mov
out
sbb
add
or
add
jne
lds
pop
inc
add
inc
lea
out
cwtl
add
adc
add
loope
mov
imul
lea
out
xor
add
mov
add
cmp
scas
lods
loopne
mov
jmp
std
out
sbb
cs
mov
repnz
dec
add
ja
xchg
ds
cmc
dec
movsb
insb
repnz
jnp
and
cmp
movsl
pop
rolb
add
mov
pop
lods
jg
insl
sub
cmp
sub
imul
jge
stos
adc
add
ret
push
add
jg
jp
add
in
jne
aad
adc
or
add
in
mov
push
bound
ret
mull
test
push
nop
mov
lret
inc
add
and
aaa
inc
mov
pop
sbb
add
cmp
xor
cmpsl
cmc
jg
cmp
fs
outsl
addb
mov
mov
lahf
dec
repnz
push
add
sbb
mulb
sub
addr16
dec
cmp
je
jnp
add
dec
pop
cmp
jl
add
es
js
add
mov
dec
mov
and
dec
ficoms
fidivrl
out
xchg
sarl
add
arpl
bound
ds
iret
xchg
test
fstpl
movsl
call
in
add
movsb
push
adc
imul
cli
sub
push
xor
fimuls
int
test
inc
mov
mov
push
lea
movsl
insb
lods
xor
push
leave
xor
lret
inc
add
gs
mov
loope
adc
les
jl
push
inc
add
fisttpl
xor
subl
imul
mov
and
sub
sub
lods
xchg
add
cmpsb
iret
inc
add
dec
in
and
and
adc
int
gs
sarb
das
add
pop
or
cmc
fcompl
adc
test
insl
sub
mov
out
push
add
aas
movsb
xor
add
aam
es
std
repz
lock
inc
add
mov
sbb
add
lds
movb
in
shlb
outsl
jns
enter
add
mov
mov
add
hlt
sbb
hlt
cld
stos
test
inc
add
xchg
scas
dec
popf
jo
sbb
testl
insl
fcmovne
decl
add
aad
movsb
fwait
push
mov
insb
testb
enter
scas
repnz
jge
cmp
push
jb
ret
adc
mov
insl
icebp
or
addl
dec
enter
fsubrl
sti
sbb
cmc
add
movb
cmp
mov
add
lock
dec
popa
add
push
pop
and
mov
adc
add
xchg
mov
add
pop
inc
and
mov
pop
pop
mov
xorl
divb
mov
lea
or
repnz
jb
in
mov
cmp
js
loop
or
insl
push
jne
daa
xchg
dec
push
dec
push
loop
lds
inc
push
jmp
add
jmp
mov
mov
scas
jno
dec
or
adc
sub
in
ret
or
popa
add
dec
out
lcall
pushf
in
leave
cmc
jl
rol
add
push
inc
gs
mov
mov
enter
sub
add
sti
cmc
inc
add
out
dec
or
pop
inc
add
daa
inc
ud0
addb
and
fstl
pop
leave
rol
and
xor
dec
xor
nop
hlt
jecxz
ffreep
pusha
add
jl
fwait
pop
test
addl
add
add
arpl
mov
lods
popa
xor
popa
fildll
mov
add
pop
js
cwtl
in
mov
lret
push
mov
cmp
and
push
push
xchg
fnsave
add
mov
addr16
dec
add
lods
inc
xchg
ficompl
adc
jne
iret
stos
in
push
adc
or
push
cwtl
repz
scas
pop
mov
rolb
fisubs
lret
push
stc
fldl
lea
push
inc
mov
add
adc
push
mov
sub
adc
fdivr
jge
cmc
sub
push
mov
jmp
call
xor
and
mov
add
mov
lahf
jge
pop
jno
lret
shll
add
push
or
addb
add
mov
cmp
or
imul
add
popl
nop
aaa
nop
adc
mov
mov
inc
add
add
loope
cmp
lret
dec
jmp
lods
and
shl
mov
out
sbb
hlt
xchg
into
addr16
fnop
mov
js
adc
mov
sub
or
notl
mov
icebp
addb
aad
outsb
mov
mov
movsb
push
mov
in
sub
pop
test
cmp
cmp
lret
mov
aaa
sub
dec
and
aam
sub
out
vphaddbw
mov
cmp
mov
out
jl
push
add
add
dec
pop
push
int3
lods
enter
add
lea
dec
pop
repnz
popa
jo
and
jno
call
sub
adc
add
push
jg
lds
cmc
mov
and
xchg
sub
mov
mov
ss
ljmp
test
jge
mov
fadd
add
jp
out
sub
jge
or
mov
push
bound
sbb
dec
rorb
mov
dec
pushf
sbb
mov
rorb
int3
out
outsl
js
push
dec
cmp
jmp
lods
enter
and
sub
add
and
sub
in
or
xor
mov
add
fdivl
je
dec
bound
dec
fistps
dec
in
adc
fists
fidivl
xchg
addb
sub
mov
xor
enter
jae
lds
mov
sti
cmpsb
jmp
inc
xchg
inc
in
daa
sub
add
scas
rcl
test
jmp
scas
xor
sbb
pop
outsb
dec
in
pop
push
pop
jae
insb
pop
pop
insl
andl
xor
mov
push
or
mov
inc
add
adc
repnz
pop
mov
fdivp
scas
jnp
sbb
xor
divb
mov
lcall
jg
xor
and
les
jbe
and
and
mov
iret
xchg
pushf
dec
mov
inc
add
jbe
add
dec
adc
dec
or
jecxz
insl
dec
xchg
jne
hlt
push
into
enter
call
cwtl
fstpl
call
add
les
inc
add
ret
popa
sub
pop
push
push
dec
sub
nop
dec
mov
ss
fwait
mov
add
mov
jge,pn
hlt
mov
insl
fsubs
daa
sbb
mov
jae
popa
out
push
mov
add
ret
push
jle
pop
pushf
dec
jno
push
inc
add
js
pusha
add
add
lods
lods
aam
xor
jl
call
data16
addb
fbstp
mov
push
test
dec
ljmp
hlt
daa
adc
or
or
and
sbb
pop
push
jmp
push
int
flds
lret
adc
rcll
inc
add
aad
lock
dec
cmp
in
mov
adc
xchg
pop
stos
stos
fstps
add
add
cmpsl
mov
add
lods
pushf
inc
add
lret
pop
int
imul
cmpsl
cltd
popl
or
mov
cltd
push
inc
add
push
out
cmc
xchg
in
scas
dec
imul
adc
fidivs
cmc
and
test
adc
add
hlt
jmp
push
adc
xchg
dec
and
sbbl
addl
or
imul
icebp
inc
mov
fnstsw
mov
add
enter
ja
lods
jae
lret
sbb
jle
mov
scas
addb
add
addr16
xor
xor
test
add
ja
push
shl
inc
xor
add
jle
adc
jmp
fimull
icebp
pop
add
notb
mov
stos
movsl
ljmp
jmp
ss
pushf
out
dec
dec
cmp
aaa
in
aad
or
outsb
jmp
das
xor
inc
idivl
bound
cmc
daa
mov
and
cmp
pop
mov
scas
rcll
dec
xor
mov
mov
push
out
xchg
lcall
test
xor
pop
dec
inc
popf
lods
adc
insl
lahf
xlat
mov
sub
push
adc
pop
mov
mov
or
lcall
sahf
mov
test
dec
pop
aas
mov
out
rcll
test
dec
loope
sub
fimuls
add
pop
push
add
push
jae
mov
pushf
mov
mov
test
cltd
ss
pop
std
inc
add
enter
out
pop
ja
xchg
pop
fstpl
stos
add
mov
mov
aad
xor
int3
mov
mov
popf
jecxz
pushf
test
iret
bound
push
insl
mov
sbb
inc
jg
in
pop
inc
add
imull
push
fistps
fistl
mov
in
fmuls
call
fnsave
pop
lret
fnstsw
and
push
adc
inc
sub
add
dec
in
mov
cmp
add
sti
cmp
dec
mov
fldcw
lcall
and
jae
add
add
cmp
inc
add
pop
dec
fcoms
fmul
insb
push
loope
mov
mov
push
addb
or
ja
add
outsl
lock
mov
or
or
rcll
push
sbb
add
stos
xor
sbb
das
mov
ret
movsb
cmp
bound
roll
pop
loopne
xbegin
dec
push
stos
pop
cld
cltd
outsb
push
push
or
add
repz
or
push
add
xchg
int
aad
pop
sub
inc
pusha
add
add
jmp
xor
mov
dec
mov
jbe
inc
xor
add
test
sbb
mov
lcall
les
pop
insl
movb
add
mov
pushf
aam
add
add
add
cmp
clc
fldl
jo
test
add
fisubrs
fmull
dec
add
mov
movsb
jns
inc
pop
lds
aas
push
push
leave
lcall
xor
fs
call
fs
cli
dec
mov
test
push
add
sahf
dec
icebp
mov
sbb
add
scas
pusha
add
pushf
movb
mov
bound
ljmp
fs
push
mov
add
pop
aam
aad
jae
add
cmpsb
rolb
lret
test
fmuls
pusha
add
movsb
lret
cli
xchg
mov
test
loopne
fs
data16
sub
dec
sahf
dec
jl
out
xor
popl
inc
jno
out
fs
enter
xchg
pop
add
xchg
push
cmpsb
mov
aad
cltd
xchg
repz
imulb
push
and
fld
cli
dec
imul
in
out
jnp
movsl
mov
sbb
insl
hlt
and
pusha
add
cmpsl
xchg
aam
mov
xchg
dec
loope
pop
imul
test
jmp
inc
add
add
adc
adc
sub
xchg
test
pop
popf
pop
sti
shl
xor
xchg
clc
pop
ret
adc
cld
push
cli
stos
push
adc
mov
insb
aaa
push
xchg
sbb
scas
jg
mov
jnp
sbb
dec
adc
push
add
xchg
fwait
mov
sbb
lret
in
add
fists
shll
bound
push
addb
sub
aaa
mov
pop
adc
aad
cld
les
cmc
add
pusha
add
rorb
int
sub
sbb
imul
jno
push
das
jecxz
lods
aas
add
xchg
push
arpl
sbb
cmpsb
enter
insl
cmc
fiaddl
or
iret
enter
add
cmp
out
mov
pop
cmpsb
icebp
dec
pop
jmp
lcall
inc
xchg
pushl
xor
ret
mov
call
or
das
sbb
sub
jge
test
xchg
mov
xchg
xchg
inc
and
cwtl
cwtl
and
inc
add
into
nop
pop
pushf
pop
and
outsb
xor
stos
test
scas
dec
negl
leave
mov
ljmp
fisttpll
clc
aad
popf
mov
sub
ficomps
add
cmp
test
insb
mov
imul
dec
xchg
mov
add
dec
cltd
and
or
adc
xor
inc
cwtl
xor
add
add
pop
mov
pusha
add
sbb
cmp
jmp
dec
sub
popf
xor
shr
jp
add
ss
push
jle
inc
adc
out
jae
add
imul
lcall
inc
add
pusha
add
add
repnz
mov
add
add
xchg
pushf
pop
jbe
loop
into
xor
das
xchg
insb
fistps
loopne
mov
movsl
pop
loopne
cld
out
cmp
mov
mov
test
jns
sub
cmp
pop
push
or
mov
je
and
sarl
mov
cmc
sub
icebp
cs
orl
or
and
sbb
and
test
mov
mov
mov
movb
add
dec
das
push
sbb
repz
add
pop
testl
sub
dec
adc
push
add
pop
ss
sub
add
nop
cld
out
xchg
jmp
inc
loope
push
rorb
push
push
cmp
xchg
lret
adc
movb
lea
add
js
jecxz
sub
and
jne
fwait
sub
mov
xchg
push
dec
or
rolb
add
insb
into
xor
push
push
xchg
stc
mov
xchg
add
aam
add
aad
or
pusha
add
add
and
inc
add
xlat
cmp
out
cmp
mov
movsl
inc
add
mov
or
sti
jl
xlat
push
or
push
std
ret
lods
xchg
xchg
xor
out
mov
rorl
mov
cmp
popf
fmull
das
mov
pop
or
lret
dec
js
xor
add
sub
sarl
add
mov
test
and
cld
jns
aas
mov
iret
imul
add
pop
push
dec
and
das
push
mov
xchg
pop
mov
outsb
push
cmpsl
push
jmp
call
sti
int
les
jmp
out
push
jne
sahf
out
dec
jb
mov
pop
stos
repz
jno
sub
incl
dec
fsts
mov
cld
mov
mov
or
dec
les
jecxz
xchg
lret
add
sbb
dec
adc
and
out
push
je
fisubrs
ret
lret
adc
stc
push
pop
imul
push
xor
push
jo
and
sbb
test
jb
sbb
notl
add
xor
mov
out
xor
pop
or
rcll
push
jno
add
test
jb
hlt
andl
and
sti
sbb
leave
inc
add
repnz
rol
dec
negb
addb
and
imul
mov
call
add
and
outsl
pop
pop
jnp
pop
cld
jo
add
cmpl
pop
movsb
mov
pop
mov
mov
cmp
in
mov
es
add
movb
popf
lods
jo
add
or
repnz
movsl
lret
repz
pop
ror
lods
add
add
les
aas
inc
add
xchg
and
or
mov
jmp
loopne
mov
stos
imul
sub
sub
inc
add
mov
das
jl
cmp
scas
add
pop
outsb
or
ja
mov
addb
sahf
scas
mov
lods
push
popa
cli
xchg
sbb
add
or
gs
push
add
rorb
icebp
dec
out
adc
fs
inc
add
lret
adc
adc
or
xor
rcll
js
movsb
outsl
add
cs
rolb
pop
aaa
lods
int3
xchg
sub
mov
xchg
jbe
loopne
outsb
arpl
mov
fcmovu
sub
lret
mov
in
add
daa
xchg
cli
rcll
jnp
push
add
or
mov
push
fwait
dec
cmp
movb
push
dec
gs
ficompl
enter
sub
jne
in
addb
adc
mov
popf
sbb
out
cmp
sarb
adc
rcl
lods
sub
lcall
fsts
mov
adc
mov
les
repnz
mov
sub
add
adc
ljmp
push
xchg
dec
sbb
pop
aad
mov
mov
push
xor
fisubrs
inc
add
mov
nop
dec
dec
pop
pop
sub
into
cmp
cli
out
call
xchg
mov
push
mov
mov
push
push
sub
xchg
mov
pop
mov
fsub
xorl
fdivr
pop
sub
jle
cmp
cmp
mov
and
repz
sub
mov
inc
add
ss
xor
add
cwtl
xor
repnz
mov
test
add
and
pop
cmp
stc
insl
pusha
add
adc
inc
incb
enter
xor
dec
jmp
scas
or
mov
push
cmp
xchg
push
add
mov
xchg
outsl
jp
push
lcall
add
xchg
pop
mul
pop
inc
add
addb
xchg
mov
sti
test
jb
aam
loop
or
fmull
dec
addb
loopne
sub
xlat
int3
pop
and
je
or
add
jns
outsb
clc
hlt
cmpl
out
mov
aad
icebp
cltd
or
mov
sub
xchg
xchg
add
movb
mov
in
xchg
inc
add
sub
xor
pop
outsl
int
outsb
test
ljmp
sbb
flds
ss
enter
xchg
push
fstps
js
and
xor
add
push
data16
lods
and
dec
js,pt
inc
repz
xchg
pop
inc
jb
sbb
xor
or
popa
sbb
arpl
sbbl
push
insl
popl
mov
mov
lock
pop
insl
dec
mov
call
or
daa
out
and
js
mov
fadds
mov
inc
add
add
add
jmp
fisttps
clc
jb
adc
cmpl
jle
pushf
push
addb
pop
sarl
cmp
enter
or
les
cld
add
inc
add
dec
xor
stc
ja
sub
loop
mov
pushf
loope
and
out
inc
xchg
jge
mov
add
jbe
fmuls
bound
addb
add
add
leave
lock
fnstsw
adc
in
sti
aaa
addb
int
insb
adc
gs
test
outsl
ret
add
in
ret
pop
les
mov
xchg
push
push
inc
add
xchg
test
pushf
lods
mov
or
imull
cmp
mov
push
dec
clc
cli
out
inc
add
addb
outsb
push
mov
add
mov
or
test
and
add
mov
out
mov
hlt
sub
loopne
jge
add
outsb
cmp
add
and
add
add
sti
insl
mov
pop
test
std
mov
imul
inc
add
lret
push
mov
pusha
add
push
add
cld
jae
jmp
mov
cmp
add
imul
enter
add
xor
pop
cmp
add
add
pop
mov
addr16
add
test
add
fiaddl
and
fnstsw
cli
pusha
add
pop
xchg
stos
shrb
adc
jnp
repz
sub
or
leave
sets
cmc
scas
xchg
insb
or
xlat
cli
or
and
mov
inc
lret
add
pop
lret
push
lcall
pop
or
jnp
adc
add
xchg
jl
cmc
or
dec
shl
mov
lahf
popa
or
add
sti
das
adc
add
push
jns
or
loop
mov
movsl
cmp
jnp
cmc
or
xchg
cmc
mov
mov
push
xor
aas
push
add
dec
arpl
dec
lahf
testl
lock
into
push
mov
js
pop
incl
mov
xchg
adc
roll
add
mov
xchg
addl
aad
xchg
and
in
jl
xorl
bound
cli
inc
add
fdiv
incb
push
lcall
shll
push
ss
inc
loopne
add
or
inc
add
insl
push
je
lret
ret
mov
push
mov
inc
add
rcl
lret
mov
cltd
jnp
cs
add
loop
insb
outsb
jbe
pop
movsb
add
enter
or
addb
xchg
inc
mov
ss
or
imul
aaa
loopne
jmp
setg
fs
fcoml
jmp
out
xor
out
cmovns
mov
cmpsb
ret
mov
sub
add
fidivs
loop
mov
mov
mov
jbe
cli
jbe
lock
mov
add
jp
hlt
sub
sti
iret
pop
mov
or
mov
lea
pop
std
pusha
add
movb
jp
les
ljmp
xchg
pop
pop
cmp
jne
add
inc
add
lods
scas
mov
mov
out
je
xlat
mov
cmc
pop
clc
dec
ja
cmp
in
enter
mov
add
addl
pop
sbb
and
cld
loopne
sub
add
cs
pop
cmp
fwait
shlb
add
sahf
and
in
xor
movl
mov
xchg
and
pop
fidivrs
push
into
push
mov
and
add
push
pop
cmc
pusha
add
inc
sub
fsubr
sub
pop
xchg
pop
out
pop
fwait
out
sub
enter
fs
add
adc
mov
scas
cmp
push
test
dec
repnz
sub
in
pop
push
or
bound
loop
cltd
push
pop
call
das
xchg
sub
add
daa
in
jp
jo
or
push
or
mov
and
ss
incb
mov
sub
sbb
test
xchg
insl
cmc
mov
fdivrl
jae
xchg
movsb
fnsave
imul
adc
sti
lea
pop
mov
jo
jp
nop
rolb
jbe
jb
popf
scas
push
pop
xor
push
pop
enter
mov
jl
mov
enter
sbb
dec
push
xchg
popl
arpl
ja
add
int3
loope
inc
add
inc
bt
jmp
mov
add
push
mov
movsb
cs
mov
adc
cli
aad
dec
xchg
popf
fstp
add
inc
sbb
fwait
inc
addb
add
scas
push
dec
xor
push
add
inc
stc
jge
outsb
repnz
mov
dec
xchg
fcmove
dec
fst
adc
in
push
je
loop
push
clc
out
and
test
inc
test
nop
push
jge
mov
out
fs
test
mov
aaa
mov
cmpsb
aaa
mov
lds
xchg
mov
call
inc
add
and
xchg
push
rorb
nop
jbe
daa
add
pop
std
inc
nop
gs
mov
test
cmpsb
mov
xor
cld
cs
or
add
or
pushf
dec
xlat
ja
add
aad
add
leave
mov
mov
jmp
jnp
mov
add
sub
call
add
pop
dec
into
jg
fsubrl
add
xchg
mov
xchg
sub
pop
rolb
addb
std
aas
out
sub
jmp
inc
or
bound
in
xchg
dec
test
push
add
inc
add
jge
adc
pop
jp
add
test
dec
fs
push
sbb
ss
imul
push
das
adc
repnz
fsub
lds
gs
mov
add
xchg
add
lods
jle
mov
rolb
jns
lods
sub
out
in
push
cli
mov
sub
insl
add
ret
data16
xor
add
call
sub
mov
add
add
stos
add
call
ja
int3
repz
imul
add
add
fld
sbb
dec
cwtl
sbb
inc
ja
xchg
xchg
cmp
stos
sub
add
stos
insl
jno
add
push
bound
xchg
rclb
test
pop
stos
aad
sub
dec
push
add
add
test
std
mov
lea
dec
dec
jb
arpl
mov
mov
add
addl
test
mov
jno
push
movsl
nop
and
fisubs
jle
idiv
adc
jne
fmull
cmp
xchg
mov
js
add
inc
add
cmpsl
mov
fisubrs
adc
movb
repnz
fs
fmuls
rolb
fisttpl
into
ret
inc
add
imul
sbb
or
inc
add
lret
mov
inc
les
lret
mov
inc
add
cmpsb
fildl
loop
test
repz
push
and
rolb
dec
mov
pop
bnd
add
repnz
or
adc
sbb
or
push
pop
and
fcoms
outsl
out
add
push
jno
mov
repnz
lret
out
hlt
sub
cltd
xchg
dec
mov
ja
mov
jl
fdivrs
adc
add
dec
cmp
cld
push
sbb
repz
cmc
test
addb
aas
push
inc
lcall
mov
cwtl
xor
push
mov
in
mov
lret
movb
cmp
test
or
lcall
rcr
lret
fbstp
fimull
xor
mov
mov
dec
or
loope
hlt
push
addb
cmp
fildl
add
movsb
fstpt
adc
stos
pop
ja
add
gs
addl
sub
add
movsb
xchg
xchg
push
mov
sub
xor
bswap
es
pop
push
sbb
cli
iret
jl
inc
add
not
mov
cmp
out
mov
pop
pop
sahf
cli
ret
cli
bound
fldenv
shrb
dec
mov
setb
pusha
add
lea
dec
leave
pop
scas
pop
mov
ds
push
dec
push
xchg
xor
leave
jbe
fucomi
xchg
push
add
fbld
xchg
push
repz
out
sub
xor
out
das
sbb
test
mov
repnz
cli
sub
inc
mov
into
jg
ss
out
dec
nop
pop
jp
add
mov
movsl
in
mov
adc
add
insb
xor
adc
sub
add
int
lods
loope
stos
popa
xor
clc
cmp
add
loope
shl
jb
xor
movsl
mov
imul
es
stos
repnz
icebp
rep
addr16
sub
bnd
mov
sub
fiadds
je
push
push
push
pusha
add
ljmp
mov
scas
jl
les
jp
aaa
test
add
jno
cmp
inc
add
outsl
xchg
add
cmp
cld
cmp
add
rclb
add
stc
icebp
fsubrl
push
xor
push
cltd
mov
or
ss
push
inc
add
mov
or
and
nop
pusha
add
xor
add
push
mov
lea
sub
cmpsl
pop
sub
inc
add
je
sbb
fimull
sbb
imul
int
adc
mov
xchg
jmp
add
add
pop
inc
add
es
dec
and
ljmp
dec
pop
pop
inc
mov
leave
jnp
add
loope
orl
sbb
ljmp
add
dec
lret
enter
fstpt
xchg
mov
xchg
cwtl
dec
or
jecxz
dec
daa
inc
je
in
ror
roll
or
es
fsub
sub
cltd
mov
mov
insb
push
clc
bound
les
out
lret
and
inc
add
xchg
stos
mov
icebp
sbb
in
jl
test
xor
add
jg
jp
add
lret
adc
jo
jne
cli
cmpsb
arpl
in
les
hlt
xchg
jmp
push
cmp
add
pop
enter
int3
sub
call
add
pop
dec
loopne
mov
out
movb
or
xchg
das
pop
in
mov
jns
push
add
add
inc
daa
mov
in
xchg
movb
insb
pop
mov
sahf
mov
push
loopne
push
ja
ss
jl
fbld
loop
mov
lret
mov
aad
data16
scas
adc
mov
inc
add
aas
pop
in
jge
sbb
movb
insb
fdivrl
or
xchg
or
pusha
add
aaa
in
add
das
cmc
pop
dec
sbb
mov
inc
imul
jae
sahf
add
mov
imul
add
mov
jg
out
sbb
cmp
in
push
clc
jmp
icebp
rcrl
cmp
shlb
inc
mov
fs
movsl
push
loopne
test
push
popl
jnp
push
push
enter
cmpsb
test
fldl
mov
add
xchg
imul
mov
insl
dec
jnp
daa
pop
insl
stos
jbe
xchg
insl
and
push
cltd
insl
sbb
xchg
cmp
dec
iret
mov
add
add
data16
cmpsl
sub
jmp
stc
and
ret
mov
inc
jb
mov
rcrl
mov
movsb
and
imul
nop
outsl
cltd
pop
jo
xor
mov
lods
cltd
addb
into
and
pop
push
xchg
add
ficompl
mov
mov
add
add
sbb
movsl
inc
sub
lret
addr16
in
inc
mov
mov
pop
jl
cmp
fstpt
lods
inc
add
push
cmpsb
sub
int3
jge
push
ljmp
outsl
imul
pop
aam
pop
push
xor
inc
or
das
xchg
or
outsl
call
mov
int3
mov
shr
jmp
mov
stc
mov
pop
ljmp
or
in
xchg
pusha
add
bound
aad
jmp
test
pop
cmp
cld
and
or
pop
mov
mov
sti
in
add
mov
cmp
mov
mov
jo
xor
movsb
pop
jnp
push
lret
gs
add
jle
lcall
adc
mov
pop
adcl
leave
inc
imul
lea
decb
sbb
fldt
addb
movsb
jecxz
push
add
add
mov
inc
and
mov
outsb
cld
cli
arpl
icebp
mov
mov
adc
in
dec
push
add
add
leave
imul
mov
mov
ds
lds
inc
cmpsl
inc
pop
mov
or
insb
test
lea
stos
repnz
push
adc
adc
push
lret
add
push
mov
push
xchg
ds
and
push
test
pop
adc
fucomi
fadds
das
ds
add
int
and
ret
mov
jg
insl
rcrl
jmp
add
cmc
addb
add
nop
lcall
or
mov
jae
xlat
sub
dec
sbb
push
scas
das
xchg
dec
sub
xor
test
ljmp
push
xor
dec
les
xor
push
mov
pop
adc
scas
scas
aad
stc
or
fdivr
addb
addb
add
mov
add
and
push
hlt
adc
pop
mov
outsb
enter
mov
dec
cmc
sbb
adc
mov
sahf
aam
fistl
xchg
shll
xor
mov
sbb
cmp
mov
icebp
jge
test
adc
pop
xor
jle
orl
add
or
jmp
jo
mov
pop
xor
aad
bound
pop
xlat
and
adc
ret
sub
stos
hlt
jecxz
int
add
inc
add
jae
add
repnz
mov
arpl
sub
add
jb
int3
les
scas
xor
xchg
ficoms
imul
clc
or
and
fcoms
jmp
fs
call
out
fnsave
adc
das
sbb
xchg
jle
addr16
sub
inc
add
andl
or
addb
jnp
imull
add
adc
cmp
add
or
jb
push
adc
mov
add
mov
pop
ret
ss
cli
and
addb
into
mov
xchg
push
aaa
dec
mov
das
lods
dec
cmpsl
xor
push
add
add
and
mov
mov
fdivl
add
push
int3
dec
mov
jae
movsl
fisubl
add
enter
xchg
sbb
add
push
jg
ret
pop
push
insb
test
jl
dec
in
cmp
add
sub
sub
adc
pusha
add
lods
sbb
xchg
leave
sbb
mov
mov
mov
std
xchg
repnz
movb
pop
mov
outsl
jae
sahf
repnz
es
adc
mov
jg
lcall
cmp
mov
xor
mov
push
mov
fwait
lcall
and
jae
adc
mov
mov
jmp
aam
add
imul
sub
mov
sub
xchg
cmc
dec
out
not
mov
gs
ret
push
jne
xchg
sbb
repnz
xor
sbb
daa
cmpsb
scas
xchg
ljmp
lea
add
cli
adc
xchg
fst
or
imul
fidivl
jne
adc
out
mov
out
lock
and
clc
insb
adc
fwait
cltd
repz
insl
push
decl
fsubs
xor
insb
dec
cs
and
lret
cmc
in
rcll
add
shrb
adc
push
add
loopne
xor
loopne
add
clc
lds
mov
outsl
iret
or
pop
mov
movsb
xor
dec
mov
jle
cltd
xchg
push
sbb
lcall
fildll
dec
pinsrw
mov
out
sub
test
shll
icebp
mov
jecxz
sbb
je
sbbl
add
adc
fxch
and
xchg
adc
ljmp
add
add
xchg
xchg
and
adc
mov
mov
mov
loopne
add
in
mov
adc
xchg
cmp
push
jle
adc
inc
add
pop
popf
jne
add
inc
out
out
mov
lds
cmp
lea
ret
pop
jp
ret
mov
mov
fidivrl
xlat
fstpt
shlb
pop
sbb
add
xlat
out
ljmp
ja
fwait
dec
les
or
push
inc
sub
adc
jnp
enter
ret
arpl
ret
mov
int3
in
es
cwtl
mov
add
outsb
stc
xchg
sbb
rol
mov
add
int3
inc
jl
xor
test
lods
pop
push
mov
xor
fidivs
mov
add
scas
lods
adcl
or
pushf
cmpsb
cmp
outsl
inc
add
aas
repnz
or
sub
test
and
test
mov
stos
dec
push
cli
cmp
xchg
nop
add
addb
insb
aad
pop
out
inc
add
inc
or
sbb
imull
mov
sbb
cmp
push
bound
push
outsl
fadd
mov
js
ret
mov
add
cmpsl
bound
out
loope
aas
cmpsb
ret
imul
popf
ret
xor
pushf
push
mull
cs
add
mov
mov
add
popa
in
fwait
inc
add
sub
or
jge
xor
jge
movsl
lcall
xor
add
movsb
int
xchg
test
rcrl
jge
add
sbb
jnp
or
add
push
add
rsm
addb
add
add
jecxz
fnstcw
imul
addr16
jnp
lock
ljmp
fidivrl
or
push
inc
and
push
addl
pop
and
push
pop
addl
and
xchg
jge
xor
out
lods
jmp
sbb
cmp
aas
add
inc
add
pop
mov
lds
dec
mov
pop
fistpl
in
mov
stos
cmp
ja
leave
je
add
or
and
xchg
adc
push
adc
jns
mov
xchg
adc
add
ljmp
and
imul
sub
repz
fmulp
mov
sti
xlat
lret
divb
or
aam
fdivs
cmp
xor
out
ret
xor
aam
add
mov
sbbl
and
cs
fsubr
pushw
std
testl
call
lods
leave
lea
add
pop
mov
int
addb
dec
push
fs
mov
in
scas
cmpsl
adc
icebp
mov
dec
stos
cmp
pop
cmp
sub
jbe
adc
adc
add
stos
lcall
add
add
enter
add
xor
int3
pusha
add
xchg
ja
dec
add
xchg
mov
aaa
sarb
xor
sbb
daa
cmp
adc
pushf
push
sub
add
add
jmp
mov
ret
ss
push
or
rcl
xchg
mov
or
lahf
mov
add
adc
sbbl
add
xchg
sti
jb
add
mov
ret
add
cmp
lret
hlt
jl
inc
fiadds
add
mov
add
dec
aaa
outsb
mov
mov
add
clc
sub
pop
adc
push
add
jmp
xchg
lock
xor
dec
xor
and
adc
pop
imul
xchg
pushf
push
xor
call
sub
add
mov
sub
inc
movb
add
das
cld
push
add
mov
xchg
insl
mov
or
push
lcall
inc
and
repnz
cmpsb
jb
sub
sti
repz
dec
pop
iret
imul
and
mov
push
shrb
test
inc
fidivs
pop
push
in
mov
push
int3
push
push
ja
sti
jmp
shl
cmpl
das
push
out
ret
hlt
or
or
test
pop
xchg
addr16
insl
and
mov
enter
ret
xor
sub
lret
pop
shl
loop
xchg
mov
movb
inc
add
xchg
xor
jmp
push
imull
test
int
cmp
les
sbb
addr16
call
sub
jbe
cmp
sbb
out
adc
addr16
fucomip
mov
movsb
and
sbb
lahf
fdivrl
ficompl
clc
xor
pop
insl
or
add
jns
test
mov
cli
add
add
cmp
pop
and
dec
push
lahf
leave
mov
in
icebp
xchg
js
aad
in
cmp
stc
icebp
xor
jne
aam
push
push
cmp
adcl
add
add
addr16
add
loope
lahf
mov
cmp
dec
insl
mov
lds
in
std
out
add
or
je
out
rorl
xchg
test
mov
sbb
je
negb
sahf
out
out
or
out
mov
xor
or
jb
push
xchg
loop
add
jmp
xor
roll
mov
mov
repnz
cs
icebp
jns
dec
negl
lcall
cld
inc
in
int3
pop
lcall
ss
add
or
ds
filds
push
lret
sub
sbb
inc
addl
cs
shll
cmp
call
fwait
pop
cltd
dec
mov
les
incl
xor
cmpsl
loope
sar
out
push
or
aad
xchg
cmp
lcall
addb
pusha
add
xchg
mov
inc
cli
xchg
mov
jbe
cmpsl
push
sub
mov
mov
and
or
add
lds
add
rolb
xchg
push
ret
inc
loopne
aas
mov
xor
fcoms
jecxz
fwait
or
add
mov
and
and
fwait
inc
add
test
push
leave
nop
fidivl
add
jo
dec
pop
stc
dec
ret
fbld
jge
mov
je
or
aam
fnstenv
cld
jp
cmp
mov
mov
stos
pop
stos
mov
mov
ja
aaa
dec
adc
aad
jmp
negb
xchg
dec
xor
rolb
mov
in
and
cltd
stc
jle
dec
rolb
mov
std
lods
fsubrs
fdivs
sub
insb
ljmp
stos
call
cld
inc
add
das
adc
or
adc
dec
iret
lds
add
add
lahf
sti
push
rolb
out
sbb
add
add
inc
add
sub
push
mov
mov
test
or
mov
test
frstor
pushf
lock
out
dec
shl
jge
xor
pop
and
xchg
cmp
js
push
inc
addb
inc
movb
rolb
add
add
es
jle
outsb
les
lods
dec
addb
sbb
add
popf
and
iret
cpuid
cmpsb
adc
xchg
sub
cwtl
mov
cmp
pop
repz
jp
loop
xlat
ss
mov
sbb
movsl
xor
ret
dec
jge
popa
xchg
les
mov
das
cltd
xor
mov
xchg
dec
fcomps
rcl
loop
xchg
or
or
inc
add
mov
sbb
fidivs
jmp
leave
mov
xor
mov
cmpsl
xor
sub
pop
pop
addb
rcll
stos
sbb
push
push
add
insl
stos
jge
add
out
int
outsl
cmp
mov
leave
fsubs
adc
orl
repz
pop
ljmp
outsb
mov
ljmp
subl
lret
xor
gs
pusha
add
adc
aaa
and
nop
and
outsl
jl
or
jb
jno
aas
pop
jle
jmp
inc
into
sub
add
outsl
cmp
xor
in
sahf
sbb
or
sub
loopne
sbb
enter
scas
push
fs
inc
jl
push
lret
cmp
mov
sbb
push
xor
mov
out
icebp
bound
aaa
push
add
mov
cmp
fwait
push
call
push
pop
lret
aad
loop
xor
popl
cmpsb
dec
cmpsl
cs
pop
jp
out
fwait
out
bound
hlt
and
pop
aas
test
add
push
dec
iret
or
add
aam
repnz
mov
cmp
rorb
das
outsb
dec
scas
je
mov
add
and
divl
bound
mov
stos
scas
sub
sub
out
mov
dec
shrb
cltd
lret
xchg
daa
notl
pop
lods
movb
popa
in
popf
xor
aas
push
es
jl
xor
insb
mov
repnz
ret
fists
pop
sti
pusha
add
inc
out
addr16
sbb
add
sbb
mov
cwtl
xchg
jle
cltd
inc
add
call
cli
adc
in
mov
push
or
popa
ret
mov
stos
es
jae
jo
jmp
out
sbb
out
cmp
push
push
pop
clc
daa
adcl
jne
lds
fdivs
sub
or
iret
pop
ja
fmull
lret
subl
or
pop
or
mov
xchg
xor
mov
cmp
add
mov
addr16
add
jmp
or
rcr
enter
sub
lcall
xor
imul
xor
loopne
loope
call
cli
pusha
add
sti
into
loope
addr16
lods
add
cwtl
jmp
xlat
mov
iret
or
mov
jne
out
lods
and
in
mov
daa
out
mov
aaa
imul
adc
in
mov
add
xchg
stos
xchg
stos
or
imul
adc
add
add
add
and
cmp
push
cmpsl
out
jle
add
loop
loope
fs
ret
sbb
in
xchg
push
in
call
jge
xor
outsb
out
jge
inc
lahf
cmpsb
stos
inc
add
aam
stos
adc
sbb
data16
xchg
or
rcr
lahf
popa
mov
lret
dec
jnp
clc
repz
push
cmp
cmp
fdivs
movsl
in
inc
add
add
flds
sbb
xchg
clc
imul
pop
lods
mov
scas
out
push
fsts
data16
mov
js
and
fsubr
insb
sub
mov
add
add
jae
movb
pusha
add
addr16
xchg
sbb
push
push
push
jge
inc
add
enter
lods
push
jecxz
es
mov
add
dec
adc
mov
mov
sub
xor
inc
add
jae
add
mov
push
sti
lahf
mov
mov
push
fisttps
loope
les
or
xlat
jp
xchg
mov
inc
bound
push
sti
sti
or
add
push
and
jne
aad
inc
orl
loop
sub
test
add
push
mov
push
mov
stos
loope
sub
shlb
push
jns
and
inc
push
xor
add
pop
jmp
xchg
jg
cld
out
lret
divl
lcallw
jb
push
iret
js
pop
mov
lock
push
pushl
jmp
inc
add
outsb
fistps
add
in
inc
add
mov
mull
fidivrl
cmp
add
xor
mov
jno
movsb
and
mov
mov
repnz
xchg
ljmp
inc
add
dec
and
pop
mov
jne
addl
jbe
cwtl
pop
sub
add
or
push
fsubs
adc
add
in
xchg
add
xor
loope
add
enter
and
xlat
push
rorl
popf
pop
sarb
lea
xchg
fnstcw
push
pop
call
fstps
ja
mov
cmovns
adc
pop
insb
sub
jge
pop
call
mov
add
and
inc
add
pop
dec
out
cltd
jae
cmpsb
jl
pusha
add
out
mov
in
fnstcw
mov
jle
insl
in
jl
add
sbb
rorb
push
jnp
cmp
into
bound
xchg
xchg
mov
adc
or
in
xor
int
icebp
test
maskmovq
lds
xchg
lahf
dec
mov
adc
cmp
nop
jae
nop
fwait
add
and
mov
movsl
push
cmpsb
les
xchg
movb
lret
scas
mov
mov
cmp
dec
mov
outsl
sahf
sbb
test
sarl
xor
mov
jbe
xchg
sbbl
cs
add
inc
add
sub
mov
jnp
and
rcr
xchg
push
mov
fimuls
mov
mov
adc
add
or
mov
out
addb
stc
lret
xchg
pop
rcll
inc
pop
push
mov
inc
sub
add
adc
pop
pop
clc
push
add
jle
loop
pop
add
cli
sbb
add
mov
pop
mov
add
add
mov
push
sub
stc
test
adc
jb
mov
cmp
divl
pop
add
mov
js
sti
ror
stos
gs
fisubrl
repnz
inc
add
xchg
lret
not
lods
jg
mov
cmp
add
movb
xchg
inc
out
mov
movsb
mov
mov
insl
movsl
and
jg
addb
sbb
fmuls
inc
add
movb
icebp
pop
insl
scas
fists
outsl
xchg
rolb
mov
jge
jo
push
jae
push
stc
sub
add
inc
add
addr16
sti
sahf
sub
outsl
lret
stos
mov
mov
mov
arpl
add
bound
roll
in
roll
pop
mov
xchg
testb
cwtl
push
cld
scas
pop
imul
cmc
dec
add
sbb
test
xor
mov
pop
and
mov
out
sahf
inc
insl
and
mov
xchg
inc
add
or
fstpt
add
loope
pushf
add
pop
mov
add
enter
scas
adc
mov
aam
int3
mov
jnp
adc
shll
sub
and
pop
das
xchg
push
jl
jns
xchg
aam
mov
push
mov
mov
arpl
les
jne
gs
dec
std
jg
adc
in
rcll
addb
lods
pcmpgtd
xorl
stos
push
pushw
dec
sub
pusha
add
xor
repnz
pop
xchg
sub
xor
push
inc
add
not
pop
insb
sbb
adc
dec
cmpsl
and
in
sub
inc
add
testl
and
sahf
add
inc
add
or
cmpsb
lret
mov
push
push
addb
pop
jmp
mov
pop
push
ficompl
push
scas
imul
int3
jmp
aad
pop
push
sbb
push
cmp
mov
iret
mov
int
jle
dec
bound
inc
add
add
dec
dec
mov
movsb
lock
xlat
xchg
pusha
add
cld
fsubrl
mov
mov
jnp
nop
shll
dec
in
sti
mov
pop
pop
and
mov
add
sub
mov
cmp
add
jnp
add
push
mov
jo
hlt
sti
sahf
in
dec
mov
sarb
movsl
outsb
or
pop
or
jp
cmp
bnd
add
dec
sbb
mov
fistpl
add
fnstenv
add
or
fimuls
test
loope
xorl
mov
in
lahf
bound
movsl
mov
jb
mov
lds
addb
dec
mov
cmp
lcall
or
or
ret
push
xorl
dec
out
mov
aam
roll
sub
or
fxch
in
das
xlat
sbb
xchg
adc
dec
push
or
out
mov
je
movsl
cwtl
mov
scas
push
jne
add
jno
repz
pop
mov
data16
dec
cltd
dec
hlt
sub
adc
sub
lret
sub
mov
dec
push
push
pop
inc
add
jne
lcall
js
dec
inc
dec
add
lret
sub
and
inc
add
jle
push
inc
outsb
ss
xor
fsub
sbb
jmp
mov
sub
jmp
cmc
pop
mov
add
hlt
dec
or
xor
je
mov
cmp
jb
adc
sub
movb
pop
shlb
mov
xchg
add
push
rcrl
jb
sub
enter
push
sti
iret
fldl
popa
fsubrl
xor
mov
xchg
dec
pushf
adc
pop
loopne
call
ss
or
pusha
add
add
adc
fmul
in
jnp
nop
xor
add
daa
lds
sbb
pushf
mov
scas
insb
jns
pushf
jl
mov
mov
mov
loopne
test
daa
addl
cmp
push
dec
scas
xchg
adc
xchg
out
jne
out
or
ret
jmp
jmp
jg
cmp
mov
add
ret
dec
notb
xchg
add
gs
sbb
adc
movsl
jno
xchg
outsl
gs
push
or
cmp
xor
mov
mov
dec
push
std
mov
js
enter
add
add
mov
shll
xchg
mov
stos
enter
test
js
pop
icebp
lods
mov
pop
enter
adc
add
stc
and
dec
in
dec
xchg
imulb
les
mov
mov
out
jae
push
dec
lcall
cmp
call
cmp
add
or
mov
dec
mov
push
sti
into
fisttpl
loop
outsl
jmp
mov
dec
es
lock
add
pusha
add
add
mov
push
cld
jle
push
add
push
dec
mov
stos
mov
into
js
dec
cmp
add
mov
push
in
jno
outsb
mov
mov
in
sub
fadd
mov
cs
mov
in
stos
psllq
jp
inc
add
inc
mov
xor
mov
push
xchg
fidivl
popa
shl
addb
mov
in
ret
clc
push
cli
jae
clc
movsb
xlat
adc
dec
add
mov
js
aam
stos
fcoml
ljmp
mov
std
inc
add
addr16
std
out
repz
sbb
dec
xchg
push
pop
inc
add
test
sub
out
xchg
mov
ja
std
std
lret
icebp
movsb
adc
repz
rolb
jle
mov
cmp
add
add
mov
mov
adc
ljmp
add
mov
xor
out
shll
rolb
in
xor
insl
cmp
les
imull
decl
mov
sub
scas
mov
sahf
scas
stos
mov
jle
or
jnp
add
dec
test
xchg
mov
jns
outsb
add
xor
push
jnp
mov
popa
mov
movsl
imul
add
mov
das
and
fs
imul
in
daa
push
ret
jns
lahf
inc
sub
mov
addr16
push
fs
dec
rcrl
jg
js
aaa
stos
inc
xchg
rolb
mov
pop
xchg
fiaddl
cmp
push
mov
add
add
out
and
push
mov
sbbl
pop
lock
xor
scas
lret
or
sub
mov
aam
cli
sbb
sbb
add
mov
or
add
sub
jae
das
sbb
and
int
adc
fnsave
ds
inc
add
insb
adc
shll
push
mov
rclb
pop
into
lods
jp
mov
inc
add
pop
ret
inc
add
out
jmp
daa
cmp
fsubs
add
fwait
or
jns,pt
mov
xchg
arpl
shll
inc
add
add
inc
add
sub
inc
add
jns
cmp
pop
or
cwtl
pcmpeqd
push
cmp
inc
add
ja
jmp
xlat
jb
add
cmp
lods
adc
xlat
movsl
fwait
sbb
stos
mov
add
pushf
jne
js
inc
dec
sub
cs
mov
lds
scas
popa
rcll
pop
sub
test
add
cmpsl
out
jo
call
test
aad
pushf
in
cltd
es
dec
mov
mov
add
dec
jp
xor
shlb
imul
dec
pop
xor
cs
popf
pop
jg
or
scas
shl
pop
and
out
pop
lahf
mov
sub
addb
sbb
xchg
imul
lcall
xor
dec
mov
add
cmp
pushf
scas
jb
bound
cmp
sub
adc
jmp
add
inc
dec
xchg
repz
jo
xchg
add
lock
icebp
pop
sub
and
rolb
mov
jp
neg
outsl
out
gs
stos
or
ret
insb
push
dec
sub
adc
popa
or
dec
mov
inc
add
insb
ss
and
lds
sub
cmp
mov
inc
add
push
inc
add
dec
push
xchg
pusha
add
mov
dec
or
jl
rolb
bound
mov
xchg
rcrb
les
inc
add
push
adc
add
push
out
push
add
pusha
add
aas
mov
aad
popf
mov
jbe
mov
add
add
imul
add
enter
addb
jg
and
add
sbb
arpl
add
repnz
jns
in
xlat
inc
add
or
out
add
xchg
ret
mov
fimull
jle
xlat
add
xchg
pop
into
pusha
add
xor
insl
mov
dec
jbe
sbb
xor
sub
test
jmp
inc
scas
mov
adcl
dec
out
xor
add
lods
sti
aad
fsubr
mov
add
push
pop
incb
loopne
cmp
mov
sub
adc
test
jge
push
mov
int3
clc
sbb
sbb
ss
icebp
pop
pop
mov
cmp
bound
shrl
inc
xor
ljmp
add
ret
adc
xorl
js
add
js
xchg
rcll
addb
js
add
add
and
and
push
into
inc
inc
add
lret
push
sti
and
inc
lods
pop
sarb
jge
incb
rorl
popf
push
add
sahf
xor
adc
negb
cmp
cmp
gs
add
aad
ds
jbe
jnp
jl
clc
ss
popa
stos
inc
xor
add
mov
in
push
add
or
push
xchg
push
dec
sub
movsb
out
mov
adc
cld
into
mov
int
push
mov
cmp
iret
jge
mov
jmp
push
push
mov
sti
pop
imul
ror
je
add
pop
inc
add
jb
mov
into
sbb
mov
add
sbb
xor
aad
cmp
xor
loope
arpl
xor
lcall
fldt
out
add
in
cld
pop
push
pop
sbb
xchg
inc
add
add
lods
out
faddl
mov
or
loope
cmp
rolb
call
rcrl
adc
add
mov
outsb
pop
jl
mov
xchg
adc
sbb
mov
add
mov
and
jmp
pop
lcall
cli
mov
push
xlat
lea
push
mulb
movsb
add
enter
or
daa
std
xchg
jmp
popf
inc
add
leave
aam
and
in
pcmpeqw
repnz
add
and
dec
jne
xchg
xchg
adc
lret
aas
mov
add
jmp
lret
lret
or
jne
mov
inc
add
add
jne
add
lcall
add
sbb
ja
and
push
push
dec
fisttpll
mov
lods
jo
movb
movb
pushf
jbe
int3
push
addb
mov
mov
rolb
lock
les
fdiv
xchg
ds
ret
mov
mov
clc
test
adc
insl
pop
sahf
xlat
test
mov
je
stos
add
rcrl
fdivl
dec
mov
mov
push
mov
stos
sub
add
les
sub
repnz
cmp
inc
add
push
sbb
xor
add
pop
hlt
inc
add
popa
stos
lcall
icebp
sbb
jge
cltd
int
mov
add
or
fsts
adc
xor
loope
cmpsl
sbb
rcrl
stc
push
cmp
jmp
ret
out
mov
addb
add
jae
imul
sbb
add
adc
les
clc
imulb
lahf
mov
repz
jo
imul
mov
add
mov
fldenv
add
xchg
clc
push
scas
add
and
adc
sbb
mov
dec
