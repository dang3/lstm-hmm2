add
add
dec
into
cli
sbb
xchg
add
add
add
add
add
add
pop
add
add
mov
add
add
add
add
add
movb
add
add
add
add
pop
out
add
add
cmp
push
mov
add
inc
cmp
outsb
add
add
add
clc
call
addb
add
push
int3
add
add
mov
add
add
call
cmp
add
mov
push
add
add
push
add
pop
add
add
or
add
push
stos
add
add
add
xor
ljmp
add
push
push
add
les
add
sbb
add
add
add
add
add
xchg
ss
add
push
add
into
out
mov
add
pop
add
aam
dec
add
add
mov
out
add
jo
add
add
lods
add
push
add
add
add
add
addb
pop
cwtl
add
add
add
mov
lods
stos
add
add
add
lcall
push
add
push
rolb
add
add
jl
js
add
cld
adc
add
add
sbb
add
and
add
add
outsb
add
mov
add
mov
add
add
cmpsb
add
or
fdivl
adc
incb
add
sbb
add
and
add
add
push
outsb
add
add
add
add
add
xor
xorb
add
push
xchg
rolb
add
add
pushf
add
dec
cmp
add
add
mov
adc
int3
add
add
push
add
add
add
add
add
add
add
sbb
add
add
add
ljmp
rolb
pusha
add
mulb
add
xchg
add
cmp
add
add
rolb
dec
incb
js
add
add
add
add
add
add
loop
add
add
add
mov
data16
add
nop
pop
clc
cmp
add
xor
sahf
mov
add
movsb
add
loop
add
enter
mov
xchg
out
outsb
test
mov
add
add
faddl
cmp
add
add
add
add
add
add
loopne
rolb
add
mov
add
add
add
mov
add
add
add
add
add
inc
add
add
in
int3
insb
add
add
add
push
add
pushf
lods
add
add
pop
add
add
addb
or
and
add
add
add
add
adc
add
mov
add
add
jle
mov
add
adc
add
jb
add
cmp
add
mov
ret
ficomps
outsb
xchg
add
add
jle
add
add
add
add
inc
add
add
add
mov
out
hlt
add
add
and
add
hlt
add
push
and
add
faddl
add
add
add
add
push
add
add
add
mov
add
sbb
add
or
add
add
xor
add
add
and
add
push
and
add
pop
add
add
call
add
add
add
inc
fs
add
je
add
add
adc
or
add
xchg
enter
stos
jo
add
mov
add
faddl
add
add
add
add
add
xchg
add
add
add
inc
add
sub
add
jbe
add
mov
pop
sub
add
add
add
jb
push
add
nop
add
add
add
add
mov
add
mov
push
add
ljmp
add
cli
add
add
inc
add
add
dec
add
mov
add
shlb
add
add
add
cli
add
addb
add
add
cwtl
add
int3
add
mov
jp
add
out
pop
add
add
in
faddl
jbe
test
jle
sbbb
mov
inc
add
add
cmpsb
add
fsubrp
pop
push
add
add
stos
lcall
add
adc
add
test
nop
add
add
call
fadds
add
add
add
sbb
dec
dec
add
xor
add
add
fs
ficoms
add
add
add
movsb
out
add
xor
and
inc
add
add
shl
call
jp
jp
pop
xchg
add
add
mov
xorb
add
or
dec
data16
clc
sub
adc
add
in
add
add
or
jb
add
add
add
jp
add
add
add
sbb
add
jb
push
add
add
add
add
add
scas
add
ror
add
add
or
sub
ds
add
add
loop
dec
les
add
clc
mov
add
add
add
pop
add
add
add
add
add
mov
add
add
xchg
add
inc
int3
add
add
push
pusha
add
add
fiaddl
add
sahf
insb
add
call
and
scas
add
add
add
add
add
cli
add
add
add
add
cwtl
add
add
add
mov
add
jle
outsb
add
in
add
add
dec
jbe
sbb
add
pop
cmp
add
xchg
push
add
add
push
add
add
add
add
scas
mov
add
int3
mov
add
add
test
in
dec
sbb
inc
lcall
add
add
pop
es
add
jbe,pn
add
add
add
add
add
add
add
aam
add
mov
out
ljmp
xor
add
add
adc
add
add
inc
and
add
jle
add
movsb
add
add
rolb
add
scas
add
sbb
add
add
add
add
add
add
add
add
insb
add
or
dec
mov
add
add
add
mulb
les
push
add
add
jle
nop
sbb
add
add
add
les
sbb
movb
xor
add
add
add
hlt
add
cld
add
mov
add
inc
repnz
ljmp
add
sub
cld
add
xchg
xchg
add
dec
adc
add
sbb
mov
add
add
add
je
add
add
jp
stos
add
add
in
and
add
add
add
add
and
movsb
add
push
pop
dec
jl
sub
add
fs
add
add
adc
add
push
clc
fcoml
jl
pop
add
inc
add
add
add
add
mov
outsb
add
add
sbb
add
add
add
aam
add
add
add
hlt
xor
add
add
add
mov
add
sbbb
add
out
rolb
add
inc
out
cld
ljmp
or
add
add
add
fdivrl
add
add
add
nop
add
loop
pop
add
add
add
or
add
test
push
loopne
add
add
add
add
add
sub
or
mov
xchg
sub
mov
inc
add
mov
add
cwtl
add
push
add
xchg
add
add
add
mov
add
add
add
rolb
add
add
add
add
add
add
inc
add
add
add
add
inc
mov
mov
ljmp
les
stos
xchg
push
scas
add
add
add
jbe
cld
add
add
cmp
inc
pushf
add
add
add
cmp
add
add
ss
add
add
add
fiadds
add
ljmp
add
add
add
mov
add
incb
mov
sahf
add
jo
add
mov
fs
add
sbb
ljmp
add
in
mov
loopne
add
mov
inc
add
add
add
jp
add
add
add
mov
mulb
addb
add
pop
clc
movb
loop
add
push
add
add
mov
add
add
add
mov
push
add
add
lods
dec
add
add
add
into
jp
add
movb
adc
add
add
add
ret
add
add
add
add
pusha
bound
clc
in
add
push
ds
cmpsb
add
les
movb
inc
add
add
add
add
add
add
xor
loop
lret
add
in
add
add
ret
add
cli
add
add
add
add
and
add
or
add
enter
sub
add
push
push
add
add
add
hlt
add
pushf
add
add
cmpsb
repnz
add
inc
add
add
and
add
sub
cli
add
add
stos
add
xchg
add
add
inc
mov
cmp
add
add
add
add
inc
add
add
add
add
adc
add
add
in
loopne
add
cmp
xchg
push
add
test
xor
sahf
add
loop
inc
dec
add
add
add
add
add
add
add
add
add
adc
add
testb
mov
add
add
add
into
add
repnz
push
sub
inc
mov
push
ret
mov
add
sbb
jbe
add
movsb
add
add
xchg
add
repnz
jb
incb
add
xor
mov
add
add
add
add
adc
add
add
lcall
add
add
pop
add
add
lock
insb
pop
add
movsb
add
add
inc
lcall
sbb
inc
cmp
ljmp
pop
add
cmp
and
add
add
add
sbb
add
add
add
sarb
incb
je,pt
shlb
push
add
outsb
add
mov
add
add
es
inc
loopne
add
or
add
mov
add
cmp
add
add
add
inc
add
add
pop
fiaddl
pushf
add
cmp
add
add
cwtl
cli
jl
out
sub
push
mov
add
add
xchg
add
dec
into
add
add
and
data16
add
add
add
add
add
add
add
add
add
add
loop
add
push
cs
add
in
mov
add
ljmp
mov
add
add
add
add
inc
sub
add
clc
xchg
add
add
add
jbe
xchg
add
xor
jle
push
testb
add
add
dec
sub
adc
add
test
add
fimuls
add
mov
add
lods
add
add
mov
add
loop
dec
push
sbb
dec
add
dec
add
add
add
add
add
add
add
pop
call
or
add
add
add
push
add
adc
add
add
cmp
add
sbb
add
add
add
add
sbb
add
cs
je
pop
mov
add
outsb
insb
add
add
add
jl
add
add
add
aam
mov
add
sbb
add
add
add
add
inc
add
cwtl
add
fimuls
add
cmp
add
cwtl
add
js
test
pusha
add
add
add
add
add
mov
inc
clc
add
add
add
add
sub
bound
add
fsubrl
adc
add
add
pop
clc
add
add
in
add
pop
add
add
add
lock
add
pop
mov
bound
xor
clc
addb
add
add
add
add
add
add
add
add
dec
loop
add
add
loop
add
outsb
add
xchg
loopne
fadds
add
ret
adc
add
testb
add
add
pop
add
add
add
mov
add
add
jb
add
add
add
ficomps
add
mov
add
nop
add
dec
mov
test
add
out
add
cmp
add
xor
add
add
add
add
add
add
enter
add
add
add
stos
clc
mov
or
add
inc
add
cmp
add
add
inc
add
add
stos
in
pop
add
add
add
push
add
add
add
add
scas
stos
xchg
add
rolb
sub
add
pop
add
xchg
push
add
data16
add
test
loop
xchg
add
movsb
sbb
add
add
add
add
add
add
add
push
call
add
add
add
add
add
add
add
mov
lods
add
int3
add
mov
add
add
add
sub
add
test
into
add
inc
add
add
add
mov
add
add
cs
cmp
or
add
add
add
sub
incb
xchg
add
add
add
add
loopne
add
xor
nop
push
add
add
add
cli
inc
add
cld
add
push
pusha
add
dec
xor
push
add
add
jo
add
add
add
sbb
testb
cmp
add
cmp
add
inc
jb
je
add
pop
add
test
add
loop
add
add
add
negb
add
add
add
addb
lcall
add
jo
add
add
add
fcompl
add
mov
add
add
add
adc
add
add
dec
add
fiadds
add
add
add
inc
add
add
add
xor
push
add
sub
add
les
add
add
add
add
add
add
sbb
add
lret
dec
add
add
push
clc
add
add
add
add
add
add
add
adc
cmp
add
outsb
andb
add
add
add
jp
add
add
add
add
adc
out
mov
add
cmp
or
in
add
mov
mov
inc
addb
add
push
and
test
add
xchg
add
add
add
lret
add
mov
pushf
add
add
add
add
push
add
aam
add
inc
xchg
add
adc
incb
add
add
fiaddl
add
or
add
add
shrb
add
rolb
dec
pushf
jle
cwtl
add
add
add
subb
add
out
add
add
int3
add
hlt
jl
cmp
add
xchg
and
add
jbe
add
test
jl
jle
pop
add
add
jp
add
add
add
add
add
add
add
add
add
out
mov
lret
or
add
and
sbbb
add
rolb
mov
add
push
inc
es
or
add
add
lods
mov
add
add
add
inc
add
add
addb
add
add
mov
add
jb
add
data16
insb
add
push
add
add
hlt
add
stos
add
add
add
inc
movsb
add
add
xchg
add
add
mov
add
add
or
add
xchg
test
add
js
add
push
add
sub
push
mov
int3
add
inc
add
scas
add
add
add
push
faddl
add
add
add
cmp
incb
add
add
nop
add
add
lock
add
and
mov
add
add
add
add
add
add
add
nop
add
add
add
add
incb
pop
xor
add
add
je
add
push
jb
cmp
add
add
add
add
sub
push
movb
add
add
lock
scas
add
sbb
pushf
add
stos
add
add
hlt
bound
sbb
add
loop
or
into
add
add
lcall
inc
add
faddl
add
add
xchg
pop
mov
inc
add
out
sub
add
add
mov
add
cmp
add
add
mov
pop
mov
add
dec
dec
add
out
cmp
repnz
jl
add
jbe
mov
and
add
add
add
add
add
and
cli
add
jl
add
mov
jo
add
bound
add
rolb
add
add
or
add
add
pushf
xchg
insb
and
add
add
add
andb
add
add
cwtl
add
add
add
add
outsb
add
and
fiaddl
add
add
add
add
add
xchg
ret
and
data16
lock
add
cmp
scas
nop
testb
add
add
mov
add
mov
and
cld
sbb
test
lcall
add
sub
rorb
add
add
add
add
pusha
out
add
add
add
add
add
scas
rolb
xchg
mov
push
add
jl
add
add
cs
pop
sub
add
testb
push
add
sbb
add
add
add
cli
mov
mov
add
xchg
add
sbb
int3
inc
add
add
stos
loopne
add
add
add
mov
add
add
add
cmp
mov
mov
add
add
inc
add
add
mov
clc
mov
add
shlb
aam
add
add
add
add
add
add
add
cwtl
nop
shlb
add
ds
add
pop
add
dec
fadd
add
incb
loop
add
cmp
add
adc
test
jb
sbb
push
add
cmp
add
add
fdiv
add
add
add
add
add
ds
es
stos
add
add
add
add
push
xchg
add
sbb
stos
add
test
add
stos
xor
sub
add
inc
mov
mov
add
inc
add
movsb
add
jp
add
add
jl,pn
add
and
xchg
call
cmp
add
js
or
cmp
inc
movsb
cmp
sbb
add
push
into
add
mov
add
add
xchg
mov
add
lret
add
mov
add
add
rolb
add
add
add
inc
add
add
add
add
add
add
rolb
add
add
push
lcall
add
add
add
add
add
add
add
add
add
test
add
add
out
inc
mov
int3
rcrb
sub
add
dec
and
test
add
out
movsb
faddl
add
add
add
add
add
call
mov
add
hlt
add
add
add
fdivp
out
cs
dec
mov
add
push
xor
push
scas
add
hlt
in
add
add
inc
add
add
sbb
push
add
cli
mov
cmp
outsb
sbb
add
or
call
add
and
rolb
add
add
add
add
mov
add
add
mov
xchg
push
xchg
rolb
push
add
add
add
xchg
xor
test
cli
add
add
nop
add
mov
and
add
add
inc
add
add
add
add
push
add
add
xor
add
push
add
lcall
data16
jl
in
jl
or
add
add
fadds
add
sahf
ljmp
add
sub
add
add
cmpsb
fidivrl
bound
add
inc
add
jbe
add
push
bound
add
add
push
dec
push
add
add
pushf
add
out
bound
mov
es
add
dec
push
add
nop
add
cmpsb
jl
pushf
add
insb
add
add
jo
add
rolb
sub
add
jle
ss
je
add
add
add
add
dec
je
add
ret
add
add
add
push
add
dec
add
mov
out
add
add
fimuls
test
add
add
add
add
add
add
add
mov
add
or
add
shrb
loopne
les
and
pop
add
push
add
add
add
add
mov
call
add
add
addb
add
add
xchg
lock
jp
add
add
nop
loopne
add
add
add
rcrb
add
loopne
jl
add
add
clc
ljmp
add
add
scas
add
xchg
scas
add
insb
xchg
cmp
dec
cs
add
add
add
inc
lret
push
add
add
or
idiv
xchg
dec
add
in
pushf
and
negb
or
add
add
mov
add
adc
mov
add
lret
inc
add
mov
add
add
shl
adc
mov
add
call
jb
lods
add
loop
add
add
sbb
add
scas
inc
add
add
xchg
sub
or
and
add
add
sub
add
test
cld
add
add
lods
andb
add
add
testb
add
add
add
and
ret
push
fmuls
add
adc
mov
add
add
add
mov
ds
dec
add
aam
add
stos
add
mov
add
add
hlt
xor
sub
add
add
add
cmp
add
data16
in
push
add
add
inc
add
push
bound
add
jo
add
mov
testb
xchg
add
push
pop
dec
add
add
add
add
add
add
bound
mov
fs
add
add
data16
jbe
add
add
in
add
mov
and
dec
cs
add
orb
push
insb
insb
pop
add
les
and
pop
sbb
add
outsb
add
add
add
pop
add
add
add
add
or
and
add
xchg
add
out
add
add
add
sahf
mov
add
add
push
add
loop
into
fadds
out
pusha
xchg
add
add
and
sub
add
add
add
xchg
add
push
fcmove
mov
in
rolb
pop
add
add
push
mov
add
je
test
add
add
test
out
es
pop
add
testb
add
add
pop
cli
cmp
add
add
add
inc
add
add
add
push
dec
faddl
data16
push
faddl
add
add
cli
into
add
aam
add
add
add
add
sub
xchg
add
add
shrb
add
inc
cld
mov
add
add
clc
loopne
ljmp
fiaddl
add
add
mov
add
inc
sbbb
add
add
pop
jbe
add
and
es
add
add
movb
add
dec
xchg
add
add
jo
mov
add
lock
add
sub
add
mov
sub
rcr
add
add
movb
add
push
add
lcall
add
add
mov
pop
cmp
mov
add
hlt
add
jp
push
mov
add
add
add
add
call
add
xor
add
aam
loopne
jb
add
add
add
add
dec
mov
inc
add
add
add
add
adc
rolb
add
add
clc
add
js
pop
mov
and
add
push
rolb
push
add
add
add
data16
add
jp
pushf
add
add
cmp
sbb
call
add
inc
mov
add
add
add
add
add
test
add
out
push
add
add
loop
add
add
clc
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
shrb
add
ljmp
cmpsb
add
add
repnz
add
add
out
add
insb
repnz
xchg
add
pop
add
xchg
add
push
push
add
ret
sahf
add
add
add
dec
add
push
push
aam
add
dec
je
add
scas
add
mov
fadds
add
add
add
je
add
add
add
inc
cwtl
add
add
les
add
add
repnz
add
add
add
add
mov
add
out
add
add
insb
or
add
add
push
add
add
dec
pushf
cld
add
mov
add
add
push
add
add
add
add
add
add
pop
inc
sbb
add
add
add
add
cmp
add
add
test
add
add
add
fiadds
add
add
add
test
add
push
add
add
and
add
xor
fiaddl
add
add
jp
faddl
call
add
add
push
add
int3
jb
add
in
outsb
add
add
add
add
add
add
mov
add
add
add
lcall
add
add
add
add
add
xchg
addb
xchg
into
add
add
add
xchg
add
add
add
pop
insb
add
mov
push
cmp
es
hlt
ret
add
imulb
add
rolb
add
add
sbb
add
pop
sahf
hlt
add
add
mov
sbb
add
add
add
adc
jb
and
cld
add
mov
add
cwtl
cli
fiaddl
xchg
add
add
mov
add
add
inc
add
add
add
inc
faddl
add
add
add
add
pop
add
rolb
hlt
mov
xchg
add
add
add
add
add
add
add
xchg
add
repnz
add
andb
test
add
add
fidivrs
je
add
add
add
add
add
add
add
xor
add
lods
add
mov
add
sub
add
add
add
add
add
mov
shlb
add
add
cmp
add
add
mov
add
add
data16
cmp
jbe
fiadds
lods
dec
add
scas
addb
add
adc
add
int3
loop
cmp
je
dec
pushf
add
in
add
add
add
loop
add
rolb
add
int3
add
push
add
add
les
xor
add
add
ljmp
add
add
je
add
sarb
add
in
and
dec
xor
push
add
add
add
add
inc
add
add
test
add
pop
dec
outsb
push
add
repnz
mov
testb
add
push
add
jl
add
push
add
addb
hlt
add
cli
add
addb
add
add
mov
js
pop
aam
mov
add
add
add
add
add
add
ret
add
ds
add
fiaddl
add
cmpsb
add
add
add
add
add
faddl
mov
adc
add
mov
add
test
into
add
inc
outsb
mov
movsb
inc
add
add
add
mov
cmp
shlb
jo
add
add
faddl
sbb
movsb
xchg
add
mov
adc
add
add
and
mov
clc
adcb
add
data16
add
pop
add
out
dec
test
add
addb
add
inc
xchg
pop
dec
add
addb
add
add
add
add
add
add
add
add
test
add
add
add
sahf
xor
dec
xorb
hlt
add
add
in
add
and
int3
add
test
add
mov
add
mov
int3
add
add
add
inc
add
testb
add
sbb
add
sbb
inc
add
add
add
add
add
add
add
add
add
add
cmp
push
add
andb
add
cmpsb
push
in
add
mov
add
add
add
xchg
mov
cld
add
add
xchg
add
cmp
add
dec
add
jle
mov
cld
add
add
xchg
push
add
add
push
fiaddl
pop
add
xchg
cli
ds
push
push
add
les
add
add
add
add
add
push
cmp
cld
add
add
jbe
add
add
loop
sub
and
pop
add
add
add
test
in
sarb
add
lock
add
add
add
mov
pushf
faddl
add
add
repnz
notb
in
dec
mov
add
add
rol
add
cs
dec
add
add
cld
addb
xor
loopne
xchg
add
push
mov
sbb
mov
add
add
jl
add
push
add
call
xchg
and
add
add
add
push
or
add
add
inc
jp
add
add
sub
lcall
ds
add
cwtl
sub
add
push
dec
pop
add
add
lods
loopne
add
xchg
add
cld
add
adc
sub
xor
add
insb
xor
add
add
add
into
add
add
add
add
add
outsb
add
call
sbb
add
xchg
xchg
mov
jle
stos
add
lods
push
mov
push
or
mov
add
add
add
add
je
add
add
add
je
lret
add
add
pusha
add
add
fmull
add
adc
add
inc
add
add
or
add
add
sub
and
add
add
add
mov
add
add
jo
add
mov
sahf
add
add
add
inc
addb
add
add
lods
add
fiadds
jp
add
push
add
add
add
add
cmp
test
add
add
or
add
add
xchg
add
sbb
add
add
push
pushf
adc
add
out
add
add
add
add
add
add
add
out
add
add
sbb
push
add
cli
fadds
add
add
add
int3
add
add
add
add
add
pop
add
add
add
pop
xor
add
add
sahf
sub
add
cmp
add
add
add
pusha
rolb
add
cs
add
add
xor
add
add
sahf
dec
cmp
adc
ljmp
mov
enter
bound
rolb
bound
add
js
add
add
adc
add
add
add
add
push
pushf
loop
lock
loopne
add
add
add
add
es
add
add
add
add
add
jp
mov
add
cmp
cwtl
mov
add
add
fs
mov
add
add
add
add
mov
add
add
add
add
inc
add
add
inc
add
mov
nop
add
add
scas
add
add
clc
addb
add
add
sub
inc
add
cmp
add
add
add
add
add
pop
add
add
add
nop
sbb
xchg
add
or
and
loop
inc
add
xchg
mov
add
call
add
add
xor
sbb
je
push
add
add
add
add
movsb
add
mov
out
cmp
add
add
add
dec
pop
add
push
je
movb
add
and
add
add
add
xchg
add
mov
add
xchg
call
add
ss
ljmp
out
add
add
and
add
js
mov
push
add
scas
add
add
mov
add
add
add
add
add
add
add
add
lret
ds
add
add
add
add
add
add
add
or
cmp
test
add
fsubs
mov
addb
jb
dec
or
add
add
push
pop
add
add
add
add
add
add
add
add
mov
add
add
add
fadds
rolb
add
add
xor
add
add
sbb
lods
fiadds
add
add
jl
add
mov
add
xchg
add
add
add
xchg
add
mov
add
add
add
add
mov
sbb
pop
add
movsb
xor
xchg
add
fiaddl
add
add
jp
add
add
adc
rorb
shlb
add
add
add
add
add
add
add
sahf
add
add
jo
in
add
pop
inc
add
add
pusha
add
push
loopne
add
fdivrl
add
push
add
add
add
add
loop
add
add
add
xor
add
add
repnz
add
mov
add
lcall
add
out
and
adc
add
add
mov
sbbb
add
add
push
add
add
mov
and
lret
add
rcrb
add
add
add
add
int3
xchg
ds
dec
add
in
rolb
add
lret
dec
add
dec
add
cwtl
xchg
add
mov
add
add
push
mov
push
xchg
add
add
cmpsb
add
sub
add
add
xchg
or
mov
mov
inc
add
add
push
add
mov
add
add
sub
cmpsb
enter
loop
add
add
adc
add
add
add
add
add
add
dec
add
mov
fadds
js,pt
add
xchg
add
add
add
add
add
push
add
dec
mov
loopne
add
test
add
dec
add
movsb
lods
loop
hlt
mov
pop
cld
lcall
add
adc
repnz
mov
lret
scas
cmpb
dec
pop
add
addb
rolb
add
add
add
add
pop
add
add
hlt
add
test
dec
lods
add
add
lcall
xor
inc
into
add
mov
nop
and
add
outsb
add
idivb
add
fsubs
add
add
rolb
adc
adc
add
add
lock
push
sub
add
stos
cmp
add
add
add
mov
add
add
add
pop
add
add
mov
add
inc
add
les
notb
add
add
movsb
mov
jb
add
add
cmp
xchg
add
add
add
add
add
cmp
add
and
add
out
movsb
inc
testb
add
clc
jbe
out
add
jl
add
in
testb
and
hlt
sub
clc
add
add
mov
cld
sub
add
data16
add
add
add
add
add
push
idivb
shlb
push
add
add
add
nop
lret
pusha
dec
lret
mov
add
jl
hlt
add
add
add
call
add
add
sahf
cmp
add
add
aam
jb
push
cwtl
inc
lods
outsb
add
add
add
xchg
add
add
add
out
lcall
xchg
add
add
add
add
je
add
add
add
add
add
lods
add
add
sub
ljmp
dec
add
add
mov
mov
mov
add
hlt
add
fdivp
add
data16
add
add
add
fsubl
add
add
data16
je
add
es
add
add
add
push
add
add
add
hlt
push
or
add
out
loopne
sub
data16
add
jbe
outsb
adc
add
jle
push
push
loopne
je
js
repnz
nop
add
xor
or
add
outsb
sbb
add
dec
dec
mov
add
out
add
adc
add
add
pop
cmp
add
add
mov
add
add
xchg
outsb
clc
add
add
add
add
inc
add
cld
pop
add
into
lock
add
pop
add
imulb
add
pushf
add
add
cwtl
add
push
add
add
jbe
add
add
push
add
add
push
add
jl
add
add
add
sub
cmp
add
add
add
and
cli
push
add
fadds
fiadds
add
add
pop
fidivs
lret
add
pusha
add
add
add
or
add
add
push
push
rolb
add
add
aam
call
enter
ret
add
mov
mov
and
fidivrl
faddl
inc
add
testb
add
add
add
add
and
out
rcrb
add
mov
add
sbb
add
add
push
jp
inc
add
add
add
into
inc
add
cmpsb
xchg
add
add
pushw
add
add
sbb
pushf
push
add
sbb
add
add
loop
dec
add
add
add
add
push
add
pop
cmp
mov
outsb
add
lods
add
in
xor
add
sbb
xchg
add
testb
rolb
ret
add
movb
test
out
xchg
je
add
add
add
movb
add
rolb
add
add
mov
add
dec
add
add
adc
pop
push
add
add
add
lret
add
add
mov
add
add
movsb
add
mov
xor
xchg
add
sub
add
add
add
add
add
add
add
test
add
add
add
add
ljmp
adc
add
cs
mov
inc
add
scas
add
add
mov
add
add
add
add
add
sub
add
add
add
dec
bound
push
add
movsb
or
js
add
add
dec
add
add
add
add
add
add
xor
add
add
add
add
add
ljmp
adc
add
add
add
add
lods
add
add
adc
add
adc
add
add
rolb
add
add
add
add
add
add
pop
lods
pop
and
add
or
mov
push
mov
add
add
xchg
add
movsb
inc
add
out
aam
scas
mov
add
add
mov
sub
add
add
add
sbb
or
ljmp
fiadds
add
les
push
add
add
add
sbb
add
adc
add
fsubr
add
adc
add
fiaddl
rolb
add
add
pop
add
add
add
add
inc
add
pushf
add
push
add
and
add
add
in
add
add
ret
add
ds
sbb
add
stos
mov
add
add
add
add
loopne
add
add
inc
js
jle
sarb
push
add
add
scas
add
scas
add
add
push
in
faddl
add
add
cmp
add
addb
pop
aam
in
mov
add
add
js
add
sub
jbe
add
add
fiadds
add
add
call
add
mov
cmp
aam
cmp
jb
and
rclb
add
add
add
add
add
add
jo
stos
add
add
add
add
push
add
je
dec
mov
sahf
lods
ljmp
sub
add
sub
add
insb
xor
inc
test
cmp
lods
mov
stos
add
add
add
pop
add
add
lock
add
adc
adc
add
mov
lods
add
dec
add
xor
add
add
add
add
add
add
dec
add
add
mov
add
add
add
add
or
pop
loop
adc
jp
cld
sub
mov
add
mov
test
lcall
push
fiaddl
and
add
sub
or
add
testb
mov
xor
xchg
add
add
out
lret
call
add
add
add
add
add
sub
xor
add
mov
cmpb
jle
ret
lods
jp
mov
add
add
add
add
mov
ds
add
movsb
in
in
rolb
ficompl
cld
push
add
add
adc
push
push
add
adc
add
clc
xor
add
adc
add
push
pop
add
add
lret
pop
cmp
jl
into
add
add
add
add
adc
in
into
add
add
add
xor
add
jle
out
js
add
les
add
push
add
add
add
add
push
push
sub
inc
add
add
mov
add
call
add
add
add
add
add
shlb
xchg
or
push
add
cmp
and
add
clc
mov
add
add
nop
add
in
add
xchg
add
in
pusha
add
xchg
add
stos
jo
add
pop
dec
test
and
add
push
in
add
add
add
add
mov
xchg
les
add
xchg
add
push
add
add
clc
loop
add
add
push
add
xchg
add
add
je
sub
adc
add
and
and
add
add
add
cmp
cld
nop
sahf
mov
add
add
add
mov
and
or
add
ficoms
cli
mov
add
add
mov
add
add
xor
add
add
adc
add
enter
loop
sub
add
jl
add
add
add
insb
mov
add
mov
add
stos
dec
cmp
xchg
add
add
push
add
fs
add
int3
jo
ficoms
jl
fsubrs
add
add
cwtl
add
dec
sub
add
add
add
add
add
add
add
in
incb
add
add
add
clc
add
push
mov
push
add
add
add
add
add
adc
add
xor
add
faddl
sub
nop
pushf
lock
or
cmpsb
add
add
add
in
add
mov
xchg
fmul
inc
add
add
add
sub
lock
add
add
add
pop
add
add
add
add
test
add
cmp
call
add
add
add
es
add
add
bound
add
sub
mov
add
add
add
add
and
add
add
outsb
add
insb
add
add
cmpsb
add
add
add
add
add
sahf
jp
push
add
sbb
add
les
add
add
xchg
es
add
dec
push
add
add
add
cli
add
add
add
dec
add
push
add
add
dec
mov
adc
movsb
outsb
add
add
xor
fdivl
add
fadds
dec
add
add
fiaddl
and
add
add
add
and
add
push
add
add
add
add
add
lock
fadds
outsb
add
add
jle
add
add
loopne
add
mov
incb
add
add
enter
add
add
add
pushf
add
add
mov
push
add
mov
add
add
add
push
sbb
adc
add
add
add
out
add
adc
push
xor
and
mov
mov
loop
push
add
hlt
add
adc
add
add
hlt
sbb
sbb
add
dec
sub
sbb
add
add
add
test
sbb
add
add
add
add
add
and
and
add
lcall
add
mov
sub
add
add
cmpsb
pusha
mov
add
add
add
add
push
mov
add
xchg
add
pop
je
add
lret
inc
add
add
test
add
and
loopne
mov
add
mov
add
in
add
fs
add
add
push
add
add
add
xor
pusha
add
pop
cmp
add
add
pop
jbe
add
add
add
cli
add
mov
add
add
dec
add
add
add
pop
add
sub
push
in
add
aam
add
push
sbb
add
data16
add
push
add
push
or
add
add
add
dec
jle
movb
add
loopne
and
add
dec
add
pusha
fiadds
add
add
add
pop
jbe
sub
push
pushf
add
push
jp
add
pushf
add
add
add
hlt
add
pop
add
add
pop
dec
inc
push
inc
add
and
push
aam
add
add
add
pop
add
adc
and
outsb
loop
add
cwtl
add
hlt
add
add
add
add
add
add
inc
mov
dec
add
pop
and
add
add
mov
add
fsubl
add
add
add
xchg
addb
sub
add
test
add
xchg
add
add
pushf
incb
add
add
add
add
add
add
add
data16
add
add
dec
adc
pushf
mov
cmp
push
add
pop
add
hlt
add
sub
add
add
add
add
add
or
add
js
add
pop
add
add
and
hlt
outsb
inc
add
rolb
add
sub
out
add
add
xchg
pop
rolb
ss
test
add
add
add
add
add
mov
mov
add
add
test
add
add
add
pop
add
sbb
in
loopne
push
add
add
cmpsb
add
add
add
add
add
xchg
push
pop
add
add
add
mov
add
add
data16
push
add
add
add
add
add
mov
fs
add
push
add
add
add
xchg
add
lret
sbb
add
add
add
lods
add
add
aam
add
add
bound
adcb
lock
mov
add
imul
add
add
jbe
jp
mov
add
dec
je
sbb
or
fadds
add
add
add
add
add
add
es
add
add
add
add
add
add
add
mov
xor
add
add
incb
aam
add
push
push
add
ret
cwtl
dec
sub
add
dec
rolb
inc
add
add
push
fiaddl
add
add
mov
add
add
add
mov
add
push
add
lcall
add
add
inc
and
lcall
add
mov
add
jp
add
add
out
add
mov
add
add
jb
add
mov
rorb
shlb
add
add
add
ljmp
cwtl
push
add
in
and
nop
add
outsb
push
sub
loopne
add
add
mov
sbb
add
inc
cwtl
add
add
in
add
ljmp
add
add
add
movb
enter
stos
lock
add
js
add
add
sub
shl
add
fsubrs
jo
test
add
inc
data16
or
add
add
add
xor
cmp
test
int3
add
add
add
data16
add
add
fidivl
dec
add
add
add
xchg
xor
add
lock
mov
sahf
xchg
add
pop
insb
add
add
add
xor
loop
scas
xchg
add
mov
add
dec
jo
je
jl,pn
add
add
add
add
insb
add
add
hlt
ret
xor
add
push
aam
nop
dec
cwtl
add
sahf
add
rcrb
inc
rcl
pop
add
add
sbb
add
add
add
insb
add
add
mov
add
add
push
add
mov
add
add
adc
add
add
add
add
add
add
add
add
add
hlt
add
add
add
mov
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
push
add
fmull
out
aam
add
mov
add
add
rolb
add
data16
add
push
mov
add
add
add
add
add
cwtl
add
sub
add
sbb
add
repnz
shrb
add
add
add
add
add
xchg
pushf
js
jb
sbb
add
or
or
loopne
add
add
xor
add
add
add
add
sbb
add
xorb
sub
add
enter
push
add
int3
mov
add
add
add
add
pop
add
add
pop
add
add
rolb
add
nop
add
add
add
add
add
add
add
test
mov
lret
ljmp
add
add
insb
repnz
fs
push
add
add
sbb
rolb
add
nop
add
lock
add
add
addb
xchg
add
add
add
add
add
add
and
add
add
or
add
nop
xchg
stos
add
add
add
sbb
les
add
sbb
pushf
add
add
xor
add
sbb
sbb
add
nop
and
push
add
mov
add
cld
add
add
movsb
cmpsb
add
add
add
inc
sahf
add
sub
add
add
add
add
add
js
loop
add
add
add
sahf
ljmp
add
add
nop
add
pop
add
into
xchg
add
lods
movb
inc
add
add
mov
mov
xchg
add
add
cld
add
add
add
add
sub
add
add
add
add
add
int3
cld
inc
add
movb
cmp
movsb
push
mov
add
je
add
cmp
add
or
add
add
add
add
jo
add
add
add
add
mov
jl
into
add
jo
push
add
add
push
pop
add
add
add
out
add
add
add
add
sbb
add
enter
add
mov
rolb
pop
aam
sub
and
pusha
add
add
add
xor
add
add
add
add
sar
add
add
add
push
push
add
add
pop
add
add
add
add
add
push
aam
push
add
add
inc
testb
add
scas
add
add
loop
lock
add
or
faddl
ret
fsubrl
add
add
test
add
push
clc
add
add
add
add
je
xchg
add
add
mov
in
add
mov
data16
pop
add
add
add
add
dec
in
adc
ljmp
add
add
add
pushf
add
ret
push
inc
add
add
add
add
add
and
add
add
add
add
add
add
add
add
xchg
add
add
ficoml
add
add
add
add
pop
movsb
mov
and
xchg
add
add
pop
sahf
out
add
and
call
aam
aam
add
push
add
add
add
or
dec
add
add
xor
or
add
add
cld
pop
stos
sub
add
add
inc
pop
sub
add
add
add
loop
add
add
add
lcall
pop
add
xor
add
add
add
add
fadds
add
jb
add
add
fidivrs
add
add
add
pop
add
mov
add
add
rolb
movsb
decb
add
jb
add
add
jle
pushf
shlb
add
adc
add
add
pusha
nop
loopne
add
add
add
push
add
add
add
add
add
add
mov
enter
add
add
add
add
add
je
add
adc
mov
dec
and
dec
add
add
add
les
sbb
add
add
add
dec
xor
add
or
mov
insb
lods
add
sbb
add
and
add
add
add
add
mov
add
int3
add
add
add
out
add
add
out
bound
add
add
add
add
ds
add
add
test
add
add
add
add
je
add
add
movsb
add
sbb
add
pusha
add
add
mov
add
cli
add
add
add
add
add
add
ss
add
add
add
inc
pop
mov
push
add
xchg
data16
lret
add
hlt
mov
add
add
outsb
add
mov
or
add
add
add
pushf
add
sbb
inc
add
add
fcomps
add
add
add
cmp
add
add
jbe
aam
repnz
pop
enter
adc
push
cwtl
push
jbe
push
add
xor
pop
add
fimuls
enter
add
add
push
add
ds
mov
add
add
and
add
add
add
jbe
add
sbb
insb
add
add
add
xor
add
inc
add
add
call
jp
fadds
addb
add
add
cli
add
incb
xor
les
les
in
repnz
add
ret
push
add
mov
xchg
fiadds
add
add
add
add
add
add
add
add
test
add
add
add
add
push
mov
inc
add
faddl
add
add
ljmp
sar
add
add
fimull
cmp
add
add
lret
add
add
add
add
in
lock
add
push
hlt
add
nop
out
adc
add
jle
add
add
rcr
dec
add
into
add
add
add
lret
mov
add
add
repnz
add
add
adcb
add
es
add
aam
xchg
add
add
add
cli
jl
lret
add
add
add
data16
add
add
test
ret
nop
add
repnz
adc
ret
mov
add
add
add
add
movsb
add
add
add
dec
addb
cli
lock
add
add
add
add
add
fadds
add
sub
hlt
add
add
add
add
fiaddl
add
add
push
add
add
and
push
add
nop
add
subb
insb
sbb
mov
add
add
add
add
loop
mov
cmp
pop
add
add
add
add
add
sbb
add
jp
jp
outsb
add
add
push
add
add
add
add
cmp
ljmp
mov
add
add
adc
push
add
add
je
add
add
add
ret
add
add
add
xor
mov
add
les
lcall
add
enter
add
int3
add
repnz
repnz
add
scas
add
add
add
add
out
ljmp
add
add
add
jbe
add
loopne
in
xor
add
add
add
adc
add
add
mov
mov
add
push
add
adc
lock
add
add
ret
pop
add
add
adc
inc
ljmp
add
xchg
add
pusha
mov
add
add
aam
add
je
add
nop
aam
adc
mov
add
add
cli
cwtl
mov
add
add
pop
add
add
add
ds
and
adc
sahf
add
sahf
add
in
add
je
add
mov
sub
push
add
add
out
add
add
xchg
jp
add
inc
push
enter
add
add
out
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
cli
push
js
add
add
add
add
ret
add
push
ss
add
xchg
add
add
test
cmp
faddl
inc
xchg
add
add
add
incb
sbb
add
loop
es
cmp
test
add
add
rolb
add
and
call
add
add
add
inc
inc
add
pushf
cwtl
add
push
add
ds
add
mov
add
lock
ret
add
add
add
add
push
add
pushf
add
add
dec
or
add
add
mov
add
add
add
fiaddl
mov
add
add
add
lods
sbb
stos
stos
add
add
add
cli
ljmp
ljmp
add
add
out
add
pusha
jb
add
lcall
add
sub
pop
int3
add
add
add
cld
push
jb
mov
les
jle
add
add
add
add
jp
sub
or
in
add
add
add
lock
add
add
inc
testb
mov
add
add
add
add
add
add
xchg
mov
add
test
sbb
add
add
add
add
fcmovbe
add
add
jle
add
lret
dec
add
ficoml
add
mov
add
nop
add
insb
inc
add
add
add
add
add
loop
pop
add
add
dec
add
add
out
in
add
clc
add
add
mov
into
js
dec
add
xchg
add
add
lret
sbb
add
xchg
mov
movb
inc
add
nop
add
add
add
call
inc
add
add
add
add
dec
in
add
add
add
add
call
add
int3
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
nop
mov
push
fidivrl
add
je
sub
je
inc
test
repnz
push
add
add
add
add
add
add
add
add
add
add
add
add
sub
test
add
lcall
xor
add
add
add
add
add
and
pop
dec
mov
cli
add
xchg
mov
in
add
add
mov
add
add
add
sub
dec
add
add
mov
sub
fiaddl
lret
enterw
add
add
add
add
add
and
add
add
add
add
cmp
inc
push
add
add
add
dec
push
add
enter
add
add
xchg
add
adc
mov
add
add
cld
add
add
cwtl
hlt
add
add
add
add
or
add
add
add
push
rol
add
movsb
add
add
add
add
and
int3
add
and
inc
fadds
mov
add
add
add
jb
push
push
add
data16
add
add
add
rolb
and
mov
jle
push
xchg
add
lcall
add
add
add
mov
stos
add
add
lods
add
ljmp
add
xor
add
add
inc
repnz
add
xor
in
add
add
add
add
add
adc
cmp
int3
fiadds
add
add
add
cs
rol
add
sub
push
les
fadd
les
add
add
add
add
add
add
add
add
sbb
cld
mov
test
add
mov
mov
add
add
push
add
add
cli
add
add
cmp
add
adc
add
movsb
add
fiaddl
and
xor
sbb
stos
add
add
mov
mov
add
testb
add
ds
clc
inc
add
js
enter
add
add
add
mov
in
add
add
add
add
add
data16
add
fs
mov
add
add
add
cld
add
xchg
push
add
add
jl
add
add
inc
push
or
add
add
add
push
call
add
xchg
add
add
add
loop
add
faddl
movsb
or
add
pop
add
add
ljmp
add
data16
mov
add
add
add
add
call
add
add
add
push
add
add
data16
push
add
add
add
push
test
lock
add
es
lcall
fadds
mov
add
add
jp
mov
add
mov
add
ds
add
add
outsb
xchg
add
add
push
add
insb
add
add
add
inc
mov
push
push
add
push
mov
add
add
add
aam
fidivrl
add
in
or
sbb
bound
call
and
add
fadds
mov
pushf
in
cmpsb
add
xor
add
cmpsb
add
add
in
add
xchg
cmpsb
sbb
add
add
add
add
add
cmpsb
add
add
add
sbb
push
repnz
mov
mov
add
add
add
push
pusha
add
add
add
add
hlt
add
pusha
mov
xchg
add
add
add
add
pop
cli
push
add
add
add
add
test
add
add
add
add
add
pusha
add
mov
enter
pop
mov
add
add
add
fdivrl
add
and
add
add
sbb
xchg
jle
mov
aam
add
add
add
add
add
add
pushf
add
add
test
add
push
add
or
add
ss
add
lods
add
add
add
fdivl
mov
add
add
jb
push
fimull
add
add
add
add
add
movsb
add
mov
or
add
add
incb
add
xor
data16
add
sub
push
add
add
add
add
add
add
push
add
add
add
outsb
add
rolb
jle
lcall
dec
or
add
add
mov
add
add
lock
mov
add
push
call
add
add
movsb
add
add
push
sahf
add
add
add
es
add
push
add
cmp
add
cli
add
add
add
mov
add
add
mov
push
add
jo
sub
xor
push
add
rolb
push
add
push
add
xor
and
add
add
ret
add
add
xor
push
dec
add
mov
add
in
add
pusha
inc
dec
fiaddl
add
cli
push
enter
sbb
add
xchg
sub
add
add
hlt
in
add
rclb
dec
add
jle
add
lock
add
jl
add
add
add
sub
add
add
lods
add
add
add
mov
aam
add
mov
add
add
add
or
les
data16
fcoms
add
add
add
out
add
add
add
add
out
pop
cld
add
add
in
add
add
add
add
mov
pusha
add
inc
add
add
add
add
js
jb
add
xchg
add
add
sbb
aam
add
add
add
add
les
rclb
mov
bound
add
add
ss
cmpsb
mov
add
add
cli
mov
add
add
add
add
push
mov
mov
call
add
add
add
add
add
loop
add
xor
dec
add
call
add
mov
add
add
jp
add
add
add
nop
int3
sub
add
add
add
add
add
add
add
ret
add
push
add
bound
add
sub
out
or
push
add
add
add
add
xchg
add
add
add
add
sbb
pusha
add
in
enter
add
add
add
add
add
mov
add
add
add
add
add
add
sbb
ret
loopne
add
add
mov
ror
fadd
add
jbe
add
mov
add
cs
add
add
add
add
add
addb
add
add
add
add
add
add
add
call
add
add
add
cwtl
add
cmp
add
cmp
adc
add
add
add
add
add
add
add
add
add
add
add
mov
add
adc
mov
add
add
xchg
mov
outsb
add
add
add
add
dec
add
jle
mov
add
add
xor
fadds
in
shrb
mov
scas
jbe
add
push
sahf
pop
add
add
add
xchg
add
call
add
add
jp
cmp
out
cwtl
mov
add
cwtl
add
add
and
add
lcall
add
hlt
xchg
add
add
sub
add
add
add
cmp
add
add
add
stos
add
or
add
mov
add
add
add
loopne
add
ds
cmp
lret
add
add
add
add
add
loop
add
mov
add
add
xchg
mov
rolb
add
add
add
jo
add
add
xor
add
add
add
add
add
add
add
add
pop
in
add
and
fisubs
hlt
add
add
add
jle
pop
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
push
in
add
push
je
add
add
push
add
es
add
xor
add
insb
add
data16
dec
add
pop
xor
int3
push
mov
add
add
xchg
add
add
les
add
add
add
add
faddl
into
mov
dec
add
add
lcall
fadds
inc
dec
add
clc
inc
add
add
mov
add
add
mov
add
add
add
push
add
add
pop
xor
add
inc
pushf
add
push
add
fs
mov
mov
decb
push
and
insb
xchg
add
add
add
add
add
lock
mov
add
add
add
add
add
hlt
pop
add
add
add
add
movb
mov
jle
add
add
lcall
add
add
add
xor
add
add
jl
add
or
add
add
cld
add
testb
outsb
rolb
add
add
add
add
add
add
add
add
add
ret
add
add
rolb
push
jb
rolb
add
mov
add
add
add
add
add
mov
xor
add
push
xchg
add
add
add
addb
add
movsb
add
add
xchg
pusha
cmp
xorb
loopne
rolb
or
scas
add
add
int3
rcl
sub
add
shr
add
ljmp
add
aam
xchg
cld
add
insb
add
loop
dec
add
add
add
add
add
cmpsb
add
clc
add
add
or
add
push
ret
cwtl
les
add
add
sub
movsb
add
cs
movsb
add
add
or
add
out
jo
or
add
add
add
lret
add
add
add
add
add
shr
add
add
clc
mov
pop
divb
add
add
ret
add
adc
add
add
mov
add
xchg
sub
add
mov
add
add
ret
add
add
les
add
data16
sub
cmp
addb
in
add
sub
add
out
fadds
or
ljmp
add
add
add
add
and
add
add
add
lcall
add
sbb
int3
add
add
add
cli
push
dec
inc
clc
add
push
add
fiaddl
jp
add
add
out
hlt
testb
add
add
add
add
and
add
test
push
add
xchg
loopne
repnz
adcb
loop
jl
add
pusha
add
insb
add
lock
add
jb,pn
outsb
add
add
adc
lock
add
lcall
xorb
add
mov
adc
rolb
fadds
testb
pushf
inc
push
push
add
add
add
add
add
jo
dec
shrb
cld
lcall
add
xor
and
inc
add
add
add
add
add
movsb
mov
add
jle
sub
test
add
add
add
add
add
jle
add
test
add
add
clc
add
add
add
add
lods
add
or
and
add
add
jb
pop
jp
dec
add
jp
mov
cmp
add
add
jb
add
add
out
add
add
add
sub
add
dec
add
add
addb
add
mov
add
add
add
add
inc
nop
add
add
lock
add
loop
add
jl
push
add
mov
add
add
add
add
add
add
add
add
cld
add
into
data16
inc
mov
or
add
push
cli
outsb
add
add
add
add
add
add
add
je
pusha
add
add
add
sbb
addb
add
sub
add
add
add
add
or
add
pop
add
xchg
add
dec
cld
add
ljmp
xchg
add
add
data16
add
add
inc
add
xor
mov
andb
mov
or
addb
out
add
sti
inc
jle
imul
jle
rol
push
inc
inc
jg
out
sub
adc
test
and
pusha
gs
rclb
mov
mov
cmpsb
addb
std
pusha
push
inc
shll
add
sbb
pusha
sub
mov
and
and
addb
ds
int
iret
iret
push
loopne
jmp
lds
fdivr
fwait
xchg
ja
push
and
testl
adcl
fildll
imul
mov
cmp
loope
cmpsb
and
dec
mov
loopne
pop
popa
push
mov
rolb
pusha
pusha
xchg
addr16
inc
and
adc
pop
sbb
dec
dec
add
sub
mov
test
or
lods
and
xor
fs
mov
into
xchg
dec
jge
xorl
fwait
pop
jg
sbb
dec
jno
mov
ljmp
push
addb
pop
sbb
add
inc
icebp
sub
sub
and
jae
dec
inc
rolb
andb
cmp
loopne
aaa
add
inc
pop
loopne
insl
leavew
sbb
sbb
adc
mov
jns
hlt
fwait
mov
pushf
sahf
fbld
add
jb
jae
jle
loopne
rol
mov
cltd
cmpl
ss
data16
fs
xlat
jno
fst
iret
movsl
and
pusha
adcl
in
add
sbb
mov
cmp
test
in
pop
add
test
mov
ljmp
loopne
jecxz
dec
xor
dec
push
dec
push
mov
push
scas
jo
jo
clc
push
push
pusha
mov
pusha
and
hlt
inc
cld
ljmp
sub
loopne
and
add
out
and
dec
lds
mov
popa
adc
add
pop
sub
xchg
add
lea
outsb
aas
nop
push
mov
mov
les
cmpb
sbb
inc
loopne
adc
cmp
cmp
push
mov
daa
adc
push
mov
arpl
dec
mov
pusha
clc
daa
in
xchg
nop
xchg
in
sarb
andb
outsl
jo
pop
and
int
mov
repz
mov
hlt
lcall
inc
imul
pusha
mov
add
jp
add
mov
jmp
mov
add
pop
stc
in
shr
cltd
andb
mov
out
scas
pusha
inc
rorb
inc
sarb
rolb
lea
add
mov
cmp
addb
in
pushf
filds
xchg
push
pop
xchg
lods
add
mov
adc
dec
inc
adc
xchg
or
loopne
iret
push
jl
xor
aad
leave
pop
popa
add
add
mov
cld
fs
jae
sbb
mov
mov
fildl
push
addb
in
daa
sub
dec
loope
jo
andb
jb
call
pop
fimuls
repz
or
and
andb
mov
aaa
pop
lea
lcall
mov
loopne
in
pop
push
or
add
mov
nop
xchg
mov
test
out
dec
inc
and
shlb
mov
js
push
jb
sub
and
loopne
ds
mov
sbb
dec
push
rol
dec
fdivr
jbe
cltd
js
jbe
in
sbb
and
pop
leave
dec
scas
mov
orb
pusha
loopne
int
jmp
and
mov
pusha
mov
lret
pop
shl
push
out
aaa
dec
push
push
stos
andb
xor
sub
mov
pusha
xor
xchg
add
mov
dec
clc
fwait
in
adc
lret
andb
loopne
sbb
dec
push
xchg
pop
lahf
mov
cli
hlt
addr16
add
sub
fistpll
rolb
inc
and
lock
loopne
lods
mov
inc
lock
out
mov
add
inc
adc
add
inc
inc
dec
jecxz
pop
add
inc
xor
out
pop
rolb
and
push
mov
sub
ret
xor
mov
add
int3
lahf
xchg
dec
push
pop
xor
push
push
inc
loopne
adc
out
rcrl
and
dec
push
and
imul
ja
push
pusha
add
jmp
loopne
test
pusha
out
and
xchg
push
dec
sbb
xchg
dec
arpl
pusha
rcrb
mov
and
fs
inc
pop
popa
or
mov
inc
adc
mov
and
add
add
xchg
popa
cwtl
mov
lods
and
ljmp
sbb
add
sub
js
push
sti
jno
shll
and
sub
setne
mov
shlb
dec
rolb
lds
lods
sbb
sbb
fsubl
scas
addb
pop
mov
leave
adc
shlb
fcoms
out
jbe
pop
pop
std
push
sbb
add
loopne
loopne
sub
pusha
rcrb
pusha
pusha
adc
mov
mov
sbb
push
pusha
mov
ss
and
push
in
sbb
or
pusha
jmp
out
or
cmpsb
loopne
push
mov
dec
ss
push
xchg
cmp
inc
inc
testb
in
add
add
mov
out
lret
sub
sarb
sub
shlb
adc
or
hlt
mov
or
xor
stos
loopne
out
andb
fstps
lods
addb
pusha
inc
cs
and
xchg
push
stos
pusha
pusha
divl
add
sar
js
orl
imul
fistl
lods
and
imul
mov
shlb
dec
push
pusha
and
add
add
fdivrs
arpl
inc
and
aas
mov
lret
inc
mov
mov
in
popa
mov
loopne
gs
push
dec
pop
xchg
xor
fstpt
xor
in
jno
sti
sub
sti
in
cmpsl
int
mov
mov
pusha
inc
mov
push
outsb
int3
addr16
lahf
mov
dec
dec
repnz
sbb
jb
out
call
sbb
mov
inc
loop
xchg
dec
push
inc
pop
pop
scas
and
mov
sub
or
inc
inc
andb
xchg
lods
mov
insl
ljmp
addl
pusha
repnz
pusha
loopne
rorl
leave
sub
xchg
or
pushf
adc
cld
xor
mov
add
or
inc
xor
loopne
push
mov
inc
jp
inc
cmp
cltd
pusha
mov
mov
push
mov
inc
add
scas
xchg
or
add
stc
mov
andb
cmpsb
mov
jle
jle
rolb
mov
inc
cmpb
or
mov
dec
cmpsb
pusha
mov
pusha
pusha
jg
adc
xchg
loopne
mov
add
ret
cmpsl
or
idivl
inc
and
and
loopne
das
lcall
dec
outsl
imul
adc
sarl
add
xchg
or
cmp
out
mov
pop
hlt
xchg
pop
mov
pusha
imul
and
aaa
xor
sub
shll
lods
pop
cmc
or
pusha
mov
outsl
fiadds
and
add
daa
insb
xchg
dec
leave
inc
test
add
jbe
je
pop
adc
pop
mov
cmp
iret
push
stc
icebp
inc
push
enter
repz
xor
sub
pusha
daa
lret
inc
sub
jne
jo
inc
arpl
inc
xlat
test
js
sbb
leave
xchg
push
js
add
pushf
stos
sbb
popa
insl
cltd
inc
popf
loopne
adc
nop
test
inc
lretw
jb
add
add
loopne
adc
jo
aam
inc
pop
inc
roll
loopne
stc
add
sarb
std
enter
inc
jecxz
fdivl
sub
loopne
mov
push
cld
clc
jbe
js
inc
or
clc
cmp
stos
loopne
pop
leave
stos
mov
stos
loop
cmp
mov
cli
cmp
loopne
leave
js
clc
test
adc
mov
inc
xchg
xchg
gs
adc
adc
pusha
add
sbbb
fisubrl
and
sub
imul
data16
stos
inc
rcrb
loopne
add
rol
sbb
cwtl
or
mov
shlb
mov
pusha
inc
das
xlat
add
fldl
and
ja
mov
sub
imul
jp
aaa
imulb
int3
dec
push
addl
and
or
mov
adc
hlt
subl
rclb
pusha
inc
push
stc
das
cmp
addl
mov
mov
lea
dec
scas
insl
lret
gs
clc
out
ret
repz
cmpsl
test
mov
loopne
hlt
and
or
add
add
aaa
pusha
xor
std
jno
adc
sbb
pop
mov
rolb
lock
loopne
jbe
pusha
mov
cld
insl
in
ss
and
loopne
shrb
inc
cmp
mov
in
ljmp
push
push
sub
orb
mov
jbe
and
inc
or
sub
loopne
mov
mov
sbb
add
inc
dec
ret
andb
dec
push
inc
insb
dec
in
pop
cmp
imul
xor
popf
sub
jae
or
mov
cmc
jns
push
out
rorb
gs
hlt
insb
nop
push
fcomps
jecxz
loope
scas
add
movsb
loopne
mov
nop
jmp
and
add
lahf
jg
cmp
pusha
adc
iret
je
rol
cld
pop
adc
mov
loopne
mov
data16
add
repnz
mov
mov
cmp
add
aad
ds
cmc
inc
inc
and
icebp
xor
jge
inc
and
sbb
ds
mov
mov
inc
loopne
cmpsb
and
push
mov
cmp
inc
pusha
push
aad
addb
push
pop
and
add
pop
das
iret
cwtl
mov
imul
inc
inc
enter
or
shlb
xor
and
or
sub
mov
mov
jg
loopne
jle
dec
mov
and
or
je
cmp
and
push
rorl
cwtl
pop
int
add
jg
stc
pop
call
xor
rolb
std
push
jecxz
lahf
dec
xor
pusha
pusha
sub
cmp
adc
add
ljmp
sarb
dec
in
arpl
ret
loopne
addr16
addps
orb
incb
in
cs
add
ljmp
mov
add
repnz
and
sbb
inc
jle
sar
inc
add
mov
rcll
xchg
insb
xorl
jae
or
pop
pop
lds
xchg
push
mull
lret
inc
loopne
jle
sub
and
ljmp
imul
test
out
shlb
jmp
test
dec
les
mov
pusha
pusha
sti
and
inc
mov
daa
pop
sbb
pusha
and
pusha
rolb
push
cltd
movsb
mov
ficompl
jl
lds
das
push
hlt
pop
std
dec
in
adc
das
sbb
fdiv
pop
imul
and
jp
in
loopne
clc
stc
imul
cmc
test
push
sbb
push
sbb
sbb
fisubrl
mov
cli
stos
cmpsb
loopne
lret
xor
jg
sub
inc
shll
dec
ds
inc
hlt
sbb
xchg
ds
jg
fldl
xchg
movl
inc
cmc
arpl
daa
xchg
addr16
addb
xor
es
mov
sti
das
std
mov
xchg
int3
inc
sti
ret
add
pop
lcall
push
xchg
xor
sti
and
rcl
adc
daa
fdivrl
pop
or
leave
xchg
inc
adcb
fnstcw
lret
push
add
fwait
jbe
sub
inc
or
xchg
push
fists
lods
sti
hlt
xor
ret
fbld
imul
adc
add
pop
cmp
pusha
rolb
push
pusha
loopne
mov
xlat
add
add
pop
dec
and
pop
mov
mov
lret
into
and
jge
add
inc
pop
dec
dec
xor
jae
push
jg
xlat
mov
pusha
loopne
xchg
repnz
add
mov
inc
mov
xchg
or
add
xchg
push
mov
pusha
mov
mov
jle
fcomip
stos
mov
sbb
pusha
cld
mov
push
jecxz
sub
andb
ds
out
sbb
subb
push
pop
xchg
movsl
add
add
sub
mov
inc
cli
jo
mov
mov
add
pusha
shll
sbb
arpl
xor
and
loopne
loope
xchg
pusha
ror
xor
aaa
mov
lods
and
add
clc
lret
xchg
aaa
sbb
mov
or
loopne
adc
bound
jbe
sbb
add
jns
jmp
and
lret
ret
repnz
repz
mov
mov
andb
push
sahf
fnstcw
je
rolb
pushf
xor
inc
shlb
rclb
gs
and
ss
lds
xor
dec
xor
or
leave
inc
fiadds
loopne
aaa
xchg
outsl
mov
and
inc
int3
out
sahf
int
adc
insl
jae
cmp
sub
pusha
fadd
mov
dec
add
rorb
add
xor
mov
js
loopne
push
sbb
mov
mov
shll
and
inc
inc
aam
incl
pop
or
add
dec
mov
dec
int
pop
inc
enter
inc
mov
jns
lret
dec
fs
aad
and
cmc
adc
inc
mov
sub
dec
movsb
shlb
xchg
test
add
push
icebp
add
idiv
test
sbbl
sbb
pop
cld
add
arpl
mov
xchg
scas
and
pusha
and
insb
aas
in
or
cmc
sub
jp
loopne
cmp
mov
repz
add
xchg
imul
xchg
dec
loopne
sahf
movsb
loopne
insb
cs
inc
js
add
dec
pop
jle
jmp
lds
and
loopne
insl
loopne
jp
or
and
sbb
mov
or
add
andb
shrb
sbb
loopne
push
movsl
into
mov
ret
stos
loopne
mov
clc
pusha
popa
mov
add
sub
mov
cmp
add
pusha
inc
imul
sbbl
mov
jp
mov
movsl
jae
insb
shll
adc
mov
mov
nop
out
sbb
movb
inc
iret
or
adc
xchg
lahf
int
jl
xchg
mov
pop
xchg
mov
mov
mov
in
cmp
js
inc
dec
mov
push
movsb
and
and
mov
in
mov
pusha
enter
sbb
xchg
adc
repz
rcll
adc
xchg
mov
jbe
aam
js
aas
mov
hlt
es
pusha
cmp
fldcw
andb
or
and
mov
cmp
add
call
rorl
inc
mov
mov
sahf
jg
adc
addb
sbb
and
inc
push
dec
ds
push
xchg
test
push
cmp
jo
call
shlb
les
mov
icebp
sti
rcrb
rcrb
sub
pusha
pop
pop
mov
loop
mov
xor
test
add
loopne
test
js
add
or
stos
pusha
mov
jl
mov
cmp
mov
in
loopne
rcll
ret
stc
inc
fsubl
fsubrl
mov
xchg
mov
push
pop
pop
jb
lret
mov
addb
imulb
pop
mov
lods
rolb
push
lahf
js
arpl
hlt
gs
sbb
jg
inc
xor
and
mov
sub
cmp
fwait
nop
fstp
sbb
jnp
xor
bound
add
sbb
mov
inc
add
or
and
and
mov
mov
jae
mov
pusha
rcrb
dec
movsb
andb
mov
sahf
pop
dec
add
and
pop
int
test
divb
fstpl
inc
rclb
xchg
lret
mov
push
popf
jne
mov
inc
sbb
and
roll
push
out
mov
pusha
pusha
aam
sub
and
add
adc
mov
sbb
inc
push
add
lock
inc
pop
jl
jle
mov
pop
in
pushf
jg
clc
rcr
mov
imul
pop
icebp
ret
fistpll
stos
loopne
xchg
cmp
dec
aad
push
pop
andb
dec
inc
daa
sahf
pop
xchg
dec
adc
pop
or
inc
pusha
into
aaa
push
mov
aam
pop
xor
out
pop
add
inc
lcall
dec
pop
sar
cld
add
mov
scas
shlb
andb
mov
loopne
sbb
inc
out
xlat
ljmp
andb
psubsb
ljmp
daa
cli
addr16
xchg
in
popa
push
adc
adc
mov
jmp
push
lret
jmp
mull
shlb
andb
rcr
test
shlb
in
aas
pop
scas
xchg
das
and
mov
cmc
inc
jmp
je
pop
popa
stos
unpckhps
sbb
mov
inc
aam
lock
outsb
xor
cli
aad
jno
cmpsl
adc
fwait
imul
add
outsb
daa
cltd
or
sbb
mov
jne
xor
rolb
pop
divb
xor
cld
fistpl
pusha
sahf
test
pusha
lcall
arpl
lret
leave
int
inc
pop
dec
sbb
sar
ret
shl
lahf
fsubs
mov
shl
push
jo
test
jg
loopne
mov
inc
or
mov
mov
and
stos
pusha
mov
loopne
xchg
scas
add
gs
mov
push
mov
mov
fldenv
pusha
or
ror
push
test
inc
stc
stc
jmp
fcmovne
js
add
js
fsts
shlb
pop
dec
push
ret
pop
xchg
outsl
pop
mov
jne
insb
fildl
xor
in
leave
push
dec
lods
pop
nop
lret
testl
fwait
add
jl
pop
in
mov
fwait
pop
pop
fsub
adc
sub
mov
repnz
push
cmp
cmp
scas
and
and
pusha
in
scas
andb
mov
loope
fisubrs
loopne
pop
mov
dec
sbb
sub
es
push
shll
nop
aaa
sub
cmp
dec
sub
inc
sub
and
lds
loopne
adc
or
cld
fwait
push
add
or
sarb
inc
jp
loop
sub
adc
cmp
dec
je
outsb
mov
addb
lret
and
mov
adc
add
inc
pop
mov
es
cmpb
addr16
push
xchg
push
pop
scas
mov
mov
cmp
xor
andb
xor
push
bound
sti
mov
les
mov
pusha
inc
test
loopne
stos
add
stos
loope
xor
test
jno
pop
stos
imul
push
out
andb
mov
mov
jg
repnz
loopne
dec
popa
mov
dec
or
sar
fcom
and
cmpsl
cwtl
ret
lods
rolb
lcall
inc
add
mov
or
fcomps
mov
subb
aas
clc
cmc
pop
es
pusha
imul
mov
jl
jmp
pop
lds
fsubs
int3
push
call
jmp
jbe
jl
pop
fmul
outsl
cwtl
inc
icebp
mov
cmp
sub
in
andb
repnz
xchg
pop
jmp
and
pusha
push
add
add
mov
mov
inc
lret
and
and
mov
imul
test
ret
iret
inc
out
in
jnp
push
rolb
xor
push
jnp
mov
iret
jle
add
xor
loopne
inc
add
rclb
call
and
pusha
andb
pusha
xchg
int
or
stos
add
xchg
mov
inc
scas
in
push
and
into
jle
sbb
out
dec
int3
xor
pop
fbld
and
and
dec
push
stos
pusha
and
add
frstor
pusha
jne
xchg
add
subb
cmpsl
andb
add
bound
out
pop
jnp
data16
cs
rcrb
out
mov
ljmp
cld
add
xorb
fildll
mov
add
rorb
mov
movsl
or
loopne
in
mov
movsb
and
mov
mov
outsb
xor
roll
sbbl
push
ss
push
loope
and
mov
add
sbb
push
xchg
push
mov
inc
in
xchg
pusha
testb
paddsw
or
inc
adc
add
pusha
rclb
fsubrl
shl
jl
jge
or
fadd
imul
loope
int
pushf
arpl
lret
pop
shl
mov
inc
mov
arpl
inc
dec
adc
shlb
and
loopne
push
decb
sbb
mov
popa
mov
andb
push
rclb
cmpsb
pusha
shrb
sub
and
jnp
test
pusha
rcr
lret
ret
pushf
jo
rol
sbb
add
addb
loop
pusha
inc
cmpsb
andb
sarb
adc
icebp
je
shlb
xchg
sub
mov
inc
xorb
gs
fwait
mov
sarb
cmp
mov
pcmpeqd
sbb
mov
inc
aaa
pop
mov
rclb
adc
mov
aad
subl
pmulhw
pusha
mov
mov
push
mov
sarl
mov
addr16
pop
out
pop
cmpsl
pop
pop
xor
pop
jo
pop
jle
repnz
sbb
mov
mov
and
shr
or
add
cmpsl
dec
jo
xchg
jne
jo
rol
cmp
xchg
inc
xchg
dec
xor
fadd
cli
xchg
adc
rolb
out
test
cwtl
push
gs
stos
shlb
sub
jp
fs
dec
cltd
jecxz
addb
mov
pusha
xchg
mov
dec
inc
arpl
notl
dec
xor
xor
shl
imul
addb
mov
push
dec
pusha
pop
jmp
arpl
add
in
call
inc
xchg
in
xchg
pusha
ret
fsub
addb
xchg
test
rorb
lds
bound
add
dec
fldcw
or
and
xchg
xor
adc
or
pusha
mov
cli
sub
and
loopne
mov
push
and
and
and
add
sub
adc
lods
add
mov
and
andb
add
stos
shl
mov
pusha
pop
sti
dec
dec
inc
push
test
and
mov
lahf
jne
test
mov
xor
xchg
push
repz
and
idivl
loopne
repz
jg
test
cmp
std
leave
fistpl
scas
inc
xchg
mov
mov
cmpsl
mov
iret
dec
sub
and
aas
jp
add
adc
pop
lret
xor
inc
sbb
das
stos
das
cmp
sub
jp
adc
jno
jmp
call
stos
and
into
fwait
das
daa
repnz
loopne
scas
pusha
and
repz
jae
incl
sbb
push
sub
mov
fcoml
xchg
mov
mov
rolb
mov
jo
addb
insb
sub
fistpl
shrb
inc
cmpsb
and
or
adc
mov
and
shlb
loopne
cmp
pop
lea
and
lea
and
mov
jmp
sahf
push
fcoml
hlt
sarb
mov
push
adc
andb
mov
pop
and
add
mov
roll
fistpl
loop
jns
and
lahf
movsb
add
iret
pop
or
rcr
pushf
mov
xchg
rcrb
xchg
test
test
inc
mov
adcl
push
cmp
inc
ret
xchg
push
insl
pushf
fbstp
pop
jb
pop
push
addr16
jbe
xchg
jno
inc
and
shll
insl
mov
mov
sbb
pushf
rcrb
lahf
cmp
inc
and
mov
mov
inc
in
and
adc
lcall
sbb
xor
mov
mov
fisttpll
add
jb
add
or
hlt
iret
out
stos
loopne
rcr
das
sub
shrb
andb
add
icebp
sbb
aaa
mov
mov
sbbl
shll
xor
dec
iret
scas
inc
sbb
scas
mov
xor
rolb
and
cmp
cmc
and
push
dec
jle
pop
in
out
xchg
loopne
popl
add
inc
imulb
mov
cmc
sub
scas
stos
outsl
movsl
mov
xor
into
xor
int3
inc
or
add
cwtl
aas
pop
lcall
adc
ret
dec
cmp
jmp
inc
mov
jge
jg
mov
sbb
mov
loopne
aas
jmp
jb
sub
js
lods
loopne
fs
mov
loop
lods
dec
aam
and
mov
cmpsb
and
jl
daa
jno
mov
out
addb
and
ss
test
loopne
jge
and
lock
or
inc
loopne
jge
inc
andb
push
cmp
test
inc
mov
ljmp
shlb
das
stos
test
loopne
dec
loope
and
imul
jmp
xchg
inc
sti
test
mov
inc
add
mov
pop
cmpsb
and
or
pusha
and
lret
js
pop
call
aam
mov
rorl
push
imul
add
mov
add
add
and
cmpsb
pusha
pusha
ljmp
fsubrp
in
int3
jp
dec
scas
loopne
stos
insl
and
rol
mov
cmpsl
out
jp
lea
mov
inc
mov
mov
dec
repnz
mov
nop
jmp
jmp
mov
pop
cmpsl
mov
inc
loopne
sete
cwtl
aad
xchg
movsb
shlb
icebp
mov
inc
mov
push
in
mov
pop
add
mov
mov
sub
insl
or
les
add
push
push
xor
mov
call
cld
sub
inc
add
imul
nop
push
pop
and
cmp
je
push
push
push
push
push
push
push
bnd
mov
cmp
jne
es
add
cs
add
stc
mov
push
push
clc
call
test
jne
push
ret
jmp
lea
movl
push
push
call
test
lea
jne
movzbl
or
mov
cld
not
imul
and
es
call
jmp
sbb
mov
add
ret
pop
pop
add
pop
push
sub
push
push
inc
or
xchg
lea
cld
lea
lea
mov
cld
add
mov
mov
mov
sub
xor
push
cld
jmp
xchg
je
xor
mov
jmp
fdivrs
fwait
mov
cmp
fxch
dec
pushl
xchg
cld
out
xchg
loopne
xchg
pop
mov
in
cld
movsl
cltd
inc
push
jmp
mov
pop
mov
add
inc
stc
lods
pusha
loopne
outsl
adc
add
and
imul
adc
pop
dec
and
fists
cmp
mov
mov
icebp
les
sbb
fwait
mov
in
adc
mov
fwait
out
mov
mov
repz
stos
mov
loopne
lds
xor
movsl
out
xchg
cwtl
cwtl
and
xor
add
jmp
jae
push
xchg
and
inc
xchg
adcb
popa
pop
xor
cmpsl
insl
jl
and
loopne
mov
icebp
cmpsl
push
aad
inc
and
mov
pusha
xchg
inc
cmp
cmpsl
jb
push
add
jbe
sbb
xchg
leave
ret
inc
call
int
aad
inc
inc
adc
sarl
jecxz
adc
andl
loopne
insl
cltd
addr16
inc
mov
mov
inc
jp
and
loopne
add
test
pusha
fsts
add
lock
dec
cmp
add
loopne
repnz
popf
int
add
jne
notb
dec
stos
shlb
fisttps
dec
ljmp
push
push
adc
cmp
push
add
and
adc
addb
scas
rolb
bound
cli
clc
rorb
push
inc
and
cmpsl
xchg
sbb
mov
dec
cmp
rcrb
aam
cli
std
push
add
mov
mov
push
jbe
std
jp
addb
jnp
shl
mov
mov
loopne
in
pop
das
ror
xlat
jo
and
xor
mov
dec
int
add
add
jmp
outsb
xor
int3
add
shlb
arpl
and
subl
dec
arpl
fwait
lret
inc
shlb
mov
xchg
loopne
jl
test
loope
loopne
loope
mov
loopne
pop
rcrb
roll
mov
and
inc
jmp
push
and
test
mov
add
jge
aas
pop
addr16
bound
pusha
fbld
push
jecxz
rolb
jb
inc
push
repz
pusha
mov
sbb
loop
xlat
shl
and
sti
lahf
sahf
xor
add
cmp
rcr
xchg
xchg
inc
loopne
outsb
mov
mov
inc
and
jge
divb
mov
fs
inc
sbb
rol
adc
mov
jbe
addb
scas
loopne
js
mov
out
pop
or
pusha
mov
cmpl
and
pop
and
xlat
test
in
and
call
ja
sub
mov
insl
jecxz
movsb
addb
push
shl
rolb
pop
and
xlat
fwait
push
dec
test
and
jo
scas
pusha
inc
and
pusha
aad
pop
mov
ret
pop
loopne
and
mov
cwtl
push
les
push
xor
repz
mov
dec
dec
xor
mov
mov
push
push
rol
mov
mov
jg
cmp
inc
outsb
insb
add
inc
mov
dec
xor
das
stos
imul
js
add
in
pusha
and
loopne
jmp
add
cmp
and
pop
sub
inc
or
nop
rorl
xor
pusha
inc
orl
subb
xor
popf
mov
les
dec
sub
insb
in
les
out
ss
mov
jl
dec
movsl
sub
int
pop
xchg
jle
inc
mov
pusha
loopne
lahf
lock
fs
push
loopne
pop
mov
and
sbb
shr
mov
and
outsb
pop
and
add
sub
add
xchg
push
and
addb
and
mov
lcall
inc
out
and
arpl
ljmp
and
mov
mov
and
addb
cld
out
mov
cltd
nop
jae
sbb
fstpt
lea
sub
pusha
scas
inc
mov
jnp
add
movaps
incl
pushf
cmp
repz
lret
call
jns
cmp
inc
shlb
add
mov
loopne
fldl
in
nop
imul
fnstcw
sbb
xor
add
ret
cli
sarb
daa
sub
add
and
insl
inc
add
jnp
jb
cmpsb
and
and
fsub
pop
mov
push
inc
push
fcompl
push
and
add
cld
xor
mov
pop
shl
and
sarb
lcall
xchg
add
mov
sarl
cwtl
lds
out
psubusb
inc
aaa
lret
mov
and
call
fstpt
xlat
dec
push
shl
push
pop
es
inc
loop
iret
icebp
or
cmpsb
pusha
pusha
stos
add
adc
inc
rcrb
xor
test
add
mov
pop
mov
inc
icebp
add
out
cmpsb
rolb
inc
mov
sub
pop
cmpsl
hlt
xor
jns
mov
push
add
cmp
andl
pop
xchg
push
shr
mov
sbb
mov
mov
pusha
sar
sbb
insl
or
lcall
mov
mov
addr16
addr16
les
in
fnstcw
loopne
loop
pop
add
pop
dec
push
lods
sub
shrb
cmp
andb
add
adc
addb
or
add
shlb
mov
int
test
gs
add
fcmove
push
shl
cmp
pop
test
loop
push
dec
outsb
sti
mov
pop
jle
inc
subb
fst
jg,pt
aad
inc
add
add
loop
test
int3
lds
fstp
daa
das
mov
lods
sub
and
pusha
mov
pop
mov
pop
loop
inc
or
pop
mov
loopne
xchg
xchg
fldl
mov
inc
shr
in
mov
orl
add
xor
cmp
es
pop
ljmp
push
stos
and
sbb
dec
adc
and
shlb
xchg
fimuls
pop
adc
and
mov
in
sbb
and
jnp
xor
pop
lods
pop
sbb
add
cmpsb
loopne
or
nop
sbb
pop
popa
call
inc
jne
dec
mov
add
dec
mov
inc
lret
loope
inc
pusha
aas
adc
mov
mov
loop
rolb
jne
repz
push
adc
and
outsl
dec
pop
or
inc
in
insb
ret
ret
inc
cmp
ja
cmp
pop
stc
aam
loopne
iret
clc
stc
adc
and
lods
dec
fisubrs
jb
gs
push
mov
popf
testl
pusha
mov
fs
mov
mov
orl
fists
sahf
fmull
cltd
adc
shlb
mov
fildll
jmp
and
cmpb
and
push
clc
hlt
or
pusha
pusha
sti
jns
sub
mov
mov
lret
add
mov
decl
adc
notb
mov
mov
xorb
pusha
pusha
movsl
push
jmp
ret
fstpt
push
bound
out
pop
xchg
cmp
sub
je
mov
inc
adc
cmpsl
jb
rdpmc
int
or
sahf
or
xor
pusha
and
shrl
push
add
add
addr16
adc
iret
jp
outsb
loopne
pop
push
mov
sub
shlb
fcoms
lods
addb
push
repnz
andb
in
or
push
frstor
sub
cwtl
mov
xor
movsb
and
sbb
into
pop
or
add
fistpl
movl
push
or
and
xchg
es
push
mov
dec
cmp
hlt
push
add
add
fwait
xchg
mov
add
sahf
add
ret
mov
loopne
jns
xchg
sahf
insb
add
pusha
cmpb
push
push
and
inc
sarb
repnz
int
aam
and
loopne
nop
jno
gs
pop
or
and
rol
rol
push
loopne
mul
pop
adc
lock
sub
and
sbbl
add
enter
arpl
or
loopne
push
push
sub
or
ds
jecxz
add
dec
lock
add
mov
lds
lods
cmp
pusha
rcrb
adc
in
push
and
outsb
sbb
aad
push
ljmp
mov
push
in
and
rcl
push
test
shrb
mov
leave
add
and
loopne
andb
and
fcoms
or
pusha
setns
rolb
cmpsl
jle
lret
fidivrs
jg
js
inc
xchg
pop
scas
push
add
and
cwtl
mov
add
dec
aam
js
aad
or
add
cmp
inc
pusha
mov
movsl
mov
add
mov
fnstcw
xchg
loopne
int
pop
mov
push
add
test
and
cltd
test
mov
loopne
xchg
lret
iret
xchg
and
add
in
pop
xchg
mov
push
or
pusha
inc
mov
inc
adc
mov
push
je
outsl
and
cmp
cmp
ss
addb
push
mov
shlb
sub
and
adc
push
adc
filds
pop
inc
sti
inc
sbb
aam
add
das
push
pop
mov
addb
inc
mov
and
pusha
fdivr
in
enter
pop
inc
mov
imul
outsl
jl
insl
jecxz
loopne
mov
mov
inc
lock
test
mov
andb
xchg
push
push
mov
addb
test
mov
and
icebp
int3
pushf
mov
push
scas
pusha
pusha
mov
sbb
bound
cmp
ja
jb,pt
mov
aas
dec
xlat
stos
rolb
cmp
sti
pop
lret
loop
jmp
int
iret
pop
je
dec
mov
jae
stos
xchg
sahf
xchg
pop
adc
popf
scas
nop
jne
xchg
and
pusha
out
ret
sbb
mov
dec
fs
pusha
loopne
mov
xchg
fildl
mov
loopne,pn
lods
fcomp
idivl
shll
scas
loopne
shl
or
addb
dec
or
test
dec
in
aad
andb
push
es
inc
cmp
inc
std
xchg
xchg
rcll
repz
xchg
lds
lock
add
loopne
add
cwtl
andb
dec
push
lcall
aam
inc
pusha
sbb
loopne
cmp
or
mov
into
mov
cmp
xor
cmc
fnsave
pop
fldenv
pop
into
stos
and
adc
xchg
iret
cmp
andb
inc
rcrb
rcll
cmp
addb
mov
loopne
mov
inc
mov
andl
add
ds
test
out
into
jmp
frstor
pop
mov
lahf
sti
adc
cmp
fstpt
adc
aas
bound
inc
mov
shll
subl
test
pop
and
pusha
dec
jmp
jno
push
add
push
push
loope
add
sbb
add
cmc
jmp
sub
add
add
mov
sub
addb
and
push
cmpsl
jns
dec
pop
mov
push
loopne
inc
mov
fdivp
lods
add
cmp
or
dec
and
add
and
shlb
mov
outsl
addl
cmp
test
mov
jmp
mov
out
mov
add
subb
fimuls
jbe
mov
aaa
jl
inc
add
push
pushf
cmpsl
imul
mov
repnz
mov
mov
ds
das
test
push
sti
bnd
outsb
add
inc
pusha
or
imul
mov
cltd
rorb
jle
inc
mov
inc
or
decl
mov
adc
fldl
adc
or
iret
mov
add
out
xor
fisttps
andb
add
sbb
push
jmp
add
mov
int
mul
inc
notl
mov
fisubrl
shr
mov
add
sbb
and
loopne
mov
les
mov
cli
mov
pusha
mov
cmp
loopne
mov
inc
data16
iret
cmp
add
lahf
jo
daa
lcall
sub
pusha
and
jecxz
aam
mov
hlt
int
jl
cwtl
imul
loopne
push
pop
cmc
dec
pop
jmp
or
add
or
and
cmp
and
lds
arpl
cmp
dec
jle
std
mov
shlb
mov
rclb
add
and
arpl
or
lock
mov
and
and
addl
notb
shlb
add
dec
stc
push
mov
pusha
mov
addb
adc
loopne
mov
jg
mov
push
movl
or
add
mov
or
add
mov
and
jl
mov
pop
sub
pop
xchg
pop
rcrl
mov
les
frstpm(287
inc
popf
sti
loope
and
mov
shll
ffree
sbb
adc
test
mov
mov
rolb
mov
test
loopne
clc
inc
lret
dec
cmp
outsb
cmpsb
loopne
sbb
adcl
sub
mov
enter
and
loopne
call
xchg
outsl
sbbl
mulb
inc
cmpb
aad
sbb
js
push
int3
add
sub
les
pusha
add
dec
xor
mov
inc
mov
aad
rol
ja
arpl
test
xchg
into
sub
and
and
adc
mov
mov
clc
repnz
nop
cld
jae
add
add
cmp
push
clc
repnz
nop
cld
jae
sub
add
push
outsb
add
lods
clc
repnz
nop
cld
jae
add
add
push
add
mov
mov
add
clc
repnz
nop
cld
jae
add
or
mov
add
adc
repnz
nop
cld
jae
add
push
cmp
cmp
loope
add
add
xchg
add
add
add
clc
repnz
nop
cld
jae
ljmp
pop
test
and
add
roll
add
add
mov
xchg
ret
inc
je
push
outsb
add
fwait
push
clc
repnz
nop
cld
jae
sub
xor
add
add
push
and
push
mov
nop
leave
nop
jmp
add
mov
js
and
inc
and
repnz
nop
cld
jae
add
xor
add
jmp
movsb
jp
add
imul
ljmp
pop
push
mov
nop
leave
nop
jmp
add
js
mov
add
lock
add
add
add
add
xor
shl
cmc
lea
clc
repnz
nop
cld
jae
lret
add
call
push
mov
nop
leave
nop
jmp
add
orl
ret
add
jbe
inc
add
sarb
push
add
cmp
sbb
nop
cld
jae
add
cltd
mov
add
add
repnz
nop
cld
jae
add
push
add
mov
add
add
in
nop
leave
nop
jmp
sbb
pusha
push
pusha
sub
push
mov
nop
leave
nop
jmp
roll
movsb
add
jo
fucomi
lock
add
push
mov
nop
leave
nop
jmp
add
sarl
xor
movsb
inc
add
add
je
and
pusha
arpl
test
add
clc
repnz
nop
cld
jae
add
jp
insb
mov
dec
push
clc
repnz
nop
cld
jae
add
loope
add
xchg
mov
push
mov
nop
leave
nop
jmp
out
mov
inc
ljmp
push
mov
nop
leave
nop
jmp
imul
xbegin
jae
add
rcll
je
and
push
push
mov
mov
nop
add
inc
inc
add
sbb
sub
adc
repnz
nop
cld
jae
push
add
add
add
shlb
add
clc
repnz
nop
cld
jae
cmp
hlt
ljmp
cmp
mov
nop
leave
nop
jmp
add
ljmp
mov
xchg
ret
mov
add
js
lret
add
js
cmp
add
incl
push
mov
nop
leave
nop
jmp
add
imul
out
push
mov
xchg
ret
push
inc
add
cmp
es
clc
repnz
nop
cld
jae
add
movsb
call
mov
nop
nop
cld
jae
push
fwait
cmp
dec
orb
mov
cmp
cmp
ret
jl
mov
push
lock
stos
loopne
mov
rolb
pusha
mov
add
int3
movsb
addb
add
mov
outsb
add
add
mov
sbb
clc
repnz
nop
cld
jae
push
jp
mov
add
or
clc
repnz
nop
cld
jae
add
mov
pop
mov
cmp
nop
nop
cld
jae
mov
add
adc
or
loopne
mov
clc
repnz
nop
cld
jae
mov
dec
push
mov
nop
leave
nop
jmp
add
add
les
in
nop
leave
nop
jmp
cmp
je
add
add
ret
push
mov
nop
leave
nop
jmp
lret
xor
push
or
arpl
mov
and
out
add
add
sbb
add
pusha
or
nop
leave
nop
jmp
push
and
add
add
lahf
mov
clc
repnz
nop
cld
jae
adc
in
mov
clc
repnz
nop
cld
jae
insb
add
xor
add
repnz
nop
cld
jae
xchg
add
jne
test
xor
add
repnz
nop
cld
jae
rolb
jo
lea
push
mov
xchg
ret
cmp
jmp
xor
add
shl
cmp
push
mov
nop
leave
nop
jmp
fwait
add
add
add
xor
in
nop
leave
nop
jmp
mov
add
jmp
nop
cld
jae
add
ljmp
nop
nop
cld
jae
xor
loope
add
mov
nop
nop
cld
jae
add
add
data16
mov
xchg
ret
les
add
jl
cmpsl
call
clc
repnz
nop
cld
jae
call
sub
and
or
nop
leave
nop
jmp
pop
add
sub
repnz
nop
cld
jae
mov
add
nop
nop
cld
jae
adc
add
push
jp
fsub
add
push
mov
xchg
ret
mov
outsb
hlt
add
lret
add
mov
jge
clc
repnz
nop
cld
jae
add
imul
cmp
mov
clc
repnz
nop
cld
jae
jo
add
push
push
clc
repnz
nop
cld
jae
mov
fwait
dec
ljmp
nop
cld
jae
mov
mov
dec
inc
clc
repnz
nop
cld
jae
jp
jmp
xchg
add
hlt
clc
xor
mov
nop
leave
nop
jmp
mov
fwait
add
out
test
jb
repnz
nop
cld
jae
add
sbb
jle
imul
arpl
and
xor
mov
js
add
push
and
mov
nop
nop
cld
jae
jmp
push
add
add
movsb
jl
fwait
clc
repnz
nop
cld
jae
xchg
jmp
cmp
add
add
cld
push
mov
xchg
ret
add
add
add
add
scas
mov
adc
add
repnz
nop
cld
jae
cltd
rolb
add
push
mov
xchg
ret
mov
mov
fwait
decb
mov
push
mov
xchg
ret
inc
mov
lret
je
add
imul
clc
repnz
nop
cld
jae
mov
ljmp
and
pop
cmp
repnz
nop
cld
jae
xchg
fwait
add
add
popa
clc
repnz
nop
cld
jae
add
outsb
add
add
loopne,pn
inc
jbe
push
push
mov
nop
leave
nop
jmp
add
add
cld
hlt
cmp
repnz
nop
cld
jae
mov
imul
sarb
nop
nop
cld
jae
inc
cmp
jp
xchg
add
mov
push
mov
nop
leave
nop
jmp
add
add
addb
in
nop
leave
nop
jmp
cmp
add
add
sub
mov
xchg
ret
or
addb
add
inc
js
int3
push
jp
iret
pusha
clc
repnz
nop
cld
jae
add
add
add
add
aaa
lods
push
mov
xchg
ret
mov
fwait
sahf
jl
jo
andb
andb
and
lea
push
mov
nop
leave
nop
jmp
add
xchg
push
push
mov
xchg
ret
mov
add
dec
pop
clc
repnz
nop
cld
jae
push
cmp
xor
lret
js
add
push
mov
nop
leave
nop
jmp
cmp
movsb
add
mov
clc
repnz
nop
cld
jae
jo
cmp
in
pop
clc
repnz
nop
cld
jae
add
add
lods
cmp
pop
cmp
loopne
mov
clc
repnz
nop
cld
jae
push
add
push
push
or
add
mov
clc
repnz
nop
cld
jae
ljmp
mov
clc
repnz
nop
cld
jae
dec
add
add
add
jo
enter
clc
repnz
nop
cld
jae
add
push
out
mov
add
mov
movb
mov
xchg
ret
sub
add
outsb
lret
out
addr16
clc
repnz
nop
cld
jae
and
adc
sub
nop
cld
jae
push
jmp
add
mov
push
mov
fwait
clc
repnz
nop
cld
jae
add
add
std
clc
repnz
nop
cld
jae
lret
push
loope
mov
push
mov
nop
leave
nop
jmp
outsb
push
add
cmp
and
add
repnz
nop
cld
jae
add
adc
shrl
inc
add
mov
fwait
add
mov
incl
add
rolb
mov
xchg
add
iret
add
clc
repnz
nop
cld
jae
xchg
add
js
cwtl
sbb
repnz
nop
cld
jae
add
add
sbb
popa
mov
push
mov
xchg
ret
adc
add
dec
add
inc
add
jecxz
repnz
nop
cld
jae
add
out
int3
gs
clc
repnz
nop
cld
jae
incl
mov
clc
repnz
nop
cld
jae
lods
cmp
add
inc
nop
hlt
inc
or
push
popf
inc
add
add
mov
fwait
add
clc
repnz
nop
cld
jae
or
add
fwait
add
repnz
nop
cld
jae
add
insb
lcall
rcr
adc
xchg
mov
clc
repnz
nop
cld
jae
add
iret
push
push
mov
xchg
ret
add
add
mov
mov
shlb
xchg
inc
add
add
dec
add
mov
clc
repnz
nop
cld
jae
add
add
lcall
mov
nop
leave
nop
jmp
add
and
js
xlat
push
push
mov
nop
leave
nop
jmp
add
xor
mov
clc
repnz
nop
cld
jae
add
push
sub
pusha
fdivr
xchg
clc
repnz
nop
cld
jae
add
cmp
add
mov
pop
jae
repnz
nop
cld
jae
add
add
xor
add
in
nop
leave
nop
jmp
mov
je
icebp
pop
push
mov
xchg
ret
add
imul
jl
sub
fdivrl
test
push
mov
xchg
ret
cmp
add
add
fwait
xor
repnz
nop
cld
jae
add
add
add
je
push
mov
nop
leave
nop
jmp
mov
add
clc
repnz
nop
cld
jae
mov
xchg
add
pushl
clc
repnz
nop
cld
jae
cmp
jmp
and
sbb
lahf
cwtl
inc
add
add
hlt
and
add
repnz
nop
cld
jae
mov
add
daa
shr
clc
repnz
nop
cld
jae
push
add
xchg
push
adc
sbb
push
mov
xchg
ret
add
push
loope
sbb
clc
repnz
nop
cld
jae
add
add
jo
rep
push
mov
xchg
ret
add
lret
add
addb
mov
xchg
ret
add
je
mov
js
leave
xor
push
mov
nop
leave
nop
jmp
add
add
add
mov
clc
repnz
nop
cld
jae
and
inc
or
je
or
pusha
cmpb
sar
repnz
nop
cld
jae
out
add
add
test
push
mov
nop
leave
nop
jmp
add
cmp
sbb
mov
in
nop
leave
nop
jmp
push
xorl
cmpl
mov
pop
mov
clc
repnz
nop
cld
jae
add
jmp
cltd
add
add
and
mov
and
push
ja
push
mov
nop
leave
nop
jmp
add
lods
and
push
mov
nop
leave
nop
jmp
add
cmp
clc
repnz
nop
cld
jae
add
add
pop
ljmp
in
inc
add
add
incl
js
add
clc
repnz
nop
cld
jae
mov
cltd
adc
out
out
int3
pop
add
push
mov
xchg
ret
add
add
jmp
and
dec
push
mov
nop
leave
nop
jmp
add
jl
xchg
clc
repnz
nop
cld
jae
add
push
push
mov
push
mov
xchg
ret
add
jo
cmp
add
mov
repnz
nop
cld
jae
mov
lret
mov
or
mov
push
mov
nop
leave
nop
jmp
and
add
loopne
xchg
add
clc
repnz
nop
cld
jae
cmp
jo
mov
push
mov
lods
enter
push
scas
add
inc
or
add
arpl
push
je
push
mov
nop
leave
nop
jmp
add
repnz
nop
cld
jae
add
add
mov
dec
mov
push
mov
xchg
ret
imul
add
push
add
call
clc
repnz
nop
cld
jae
rolb
js
pusha
decl
repnz
nop
cld
jae
js
add
add
stos
and
xor
icebp
push
clc
repnz
nop
cld
jae
lods
cmp
loope
add
push
add
inc
adc
nop
nop
cld
jae
cmp
push
add
add
imul
add
add
add
jo
add
jno
push
mov
xchg
ret
add
or
push
add
add
test
nop
leave
nop
jmp
add
add
push
inc
jo
jne
jmp
incl
insb
push
push
jmp
outsb
xchg
lods
add
orl
xchg
call
out
cmp
jno
clc
repnz
nop
cld
jae
add
hlt
add
cmp
jae
les
ljmp
sub
clc
repnz
nop
cld
jae
push
sahf
add
mov
mov
xchg
ret
insb
add
add
xor
xorb
repnz
nop
cld
jae
fwait
dec
rcrb
mov
xchg
inc
add
add
add
sbb
add
sub
test
clc
clc
repnz
nop
cld
jae
xchg
outsb
xchg
mov
daa
mov
clc
repnz
nop
cld
jae
xchg
add
add
movsb
loopne
inc
add
clc
repnz
nop
cld
jae
les
subb
push
mov
xchg
ret
add
add
clc
repnz
nop
cld
jae
je
push
add
incl
add
xorl
clc
repnz
nop
cld
jae
add
inc
ja
clc
repnz
nop
cld
jae
add
les
in
mov
add
clc
repnz
nop
cld
jae
add
push
lods
sbb
repnz
nop
cld
jae
or
js
sbb
stc
mov
clc
repnz
nop
cld
jae
add
xchg
xchg
add
dec
push
add
clc
repnz
nop
cld
jae
incl
hlt
jmp
jne
push
mov
xchg
ret
inc
push
add
add
outsb
jae
inc
in
repnz
nop
cld
jae
add
add
inc
and
clc
repnz
nop
cld
jae
add
and
fwait
rclb
xor
push
mov
xchg
ret
dec
add
push
inc
add
push
mov
xchg
ret
add
add
outsb
push
add
push
pusha
pusha
mov
mov
xchg
ret
rolb
mov
add
nop
nop
cld
jae
add
add
ljmp
nop
nop
cld
jae
je
add
add
imul
adc
call
sahf
movsb
out
rolb
mov
clc
repnz
nop
cld
jae
add
mov
add
push
push
mov
xchg
ret
add
add
ljmp
rclb
in
nop
leave
nop
jmp
hlt
add
add
add
dec
xor
add
in
nop
leave
nop
jmp
add
add
xchg
inc
add
add
add
push
clc
repnz
nop
cld
jae
cmp
decl
stc
pop
push
mov
xchg
ret
insb
cltd
add
cmp
xchg
lods
stos
clc
repnz
nop
cld
jae
push
add
add
outsl
jl
clc
repnz
nop
cld
jae
add
xor
push
mov
xchg
ret
and
add
add
add
popa
pop
push
mov
xchg
ret
push
js
add
je
sahf
pop
mov
add
repnz
nop
cld
jae
add
add
lret
add
push
mov
nop
leave
nop
jmp
lret
cmp
add
add
mov
inc
aas
add
push
mov
nop
leave
nop
jmp
lods
push
add
nop
leave
nop
jmp
hlt
lods
add
add
add
mov
nop
nop
cld
jae
mov
add
movsb
add
jmp
mov
and
and
add
add
rclb
in
nop
leave
nop
jmp
ljmp
adc
nop
cld
jae
add
or
sub
lods
add
pop
push
mov
xchg
ret
push
mov
hlt
insb
loope
mov
scas
and
add
clc
repnz
nop
cld
jae
add
xchg
mov
mov
clc
repnz
nop
cld
jae
or
addb
lods
gs
push
mov
nop
leave
nop
jmp
dec
add
scas
loopne
ja
repnz
nop
cld
jae
add
lods
fwait
je
sarl
call
in
nop
leave
nop
jmp
add
insb
insl
fld1
jmp
add
add
add
lods
mov
add
dec
xor
lea
clc
repnz
nop
cld
jae
xor
add
add
push
clc
repnz
nop
cld
jae
fwait
subl
add
xor
rolb
xchg
clc
repnz
nop
cld
jae
add
add
cmp
push
clc
repnz
nop
cld
jae
outsb
add
push
xor
mov
clc
repnz
nop
cld
jae
xor
addl
mov
fcoms
xor
repnz
nop
cld
jae
hlt
add
add
hlt
cmp
daa
call
push
mov
nop
leave
nop
jmp
push
cltd
add
mov
orb
clc
repnz
nop
cld
jae
push
pop
dec
mov
test
push
mov
nop
leave
nop
jmp
add
add
xor
loopne
mov
mov
cmp
ret
xchg
shlb
sbbl
test
repz
call
in
nop
leave
nop
jmp
add
xchg
clc
in
add
clc
repnz
nop
cld
jae
mov
fwait
add
xor
push
clc
repnz
nop
cld
jae
cmp
xchg
hlt
mov
add
xchg
or
mov
nop
nop
cld
jae
addl
push
add
add
cltd
call
clc
repnz
nop
cld
jae
lret
sahf
add
mov
mov
loopne,pn
lret
aaa
out
incl
add
jl
add
or
lret
imul
xor
add
add
or
daa
pop
clc
repnz
nop
cld
jae
add
addl
add
dec
push
mov
nop
leave
nop
jmp
add
sarl
sub
push
mov
push
mov
nop
leave
nop
jmp
add
shl
out
es
jnp
nop
cld
jae
mov
fwait
out
repz
clc
repnz
nop
cld
jae
outsb
js
js
push
push
mov
xchg
ret
inc
les
add
loopne
push
decl
push
mov
xchg
ret
xor
add
add
xor
shlb
movzwl
push
mov
nop
leave
nop
jmp
sbb
xchg
add
lcall
clc
repnz
nop
cld
jae
xor
add
insb
add
pusha
push
mov
xchg
ret
add
add
mov
pushl
clc
repnz
nop
cld
jae
sahf
add
xor
nop
nop
cld
jae
push
add
mov
cmp
inc
mov
push
mov
nop
leave
nop
jmp
add
push
add
push
inc
pop
push
push
mov
xchg
ret
mov
add
add
push
adc
aas
call
clc
repnz
nop
cld
jae
addl
inc
into
sbb
decl
nop
cld
jae
add
lret
fwait
add
add
jne
clc
repnz
nop
cld
jae
xor
xor
pop
clc
repnz
nop
cld
jae
adc
les
stc
dec
push
mov
nop
leave
nop
jmp
add
push
xchg
outsb
js
mov
clc
repnz
nop
cld
jae
add
add
jae
push
mov
nop
leave
nop
jmp
adc
add
hlt
xchg
rep
clc
repnz
nop
cld
jae
add
xchg
add
mov
xchg
ret
add
insb
mov
hlt
xor
loopne
and
inc
jge
push
mov
xchg
ret
add
add
add
add
dec
push
mov
xchg
ret
xchg
rclb
add
push
push
mov
xchg
ret
cmp
add
rolb
add
mov
rorl
repnz
nop
cld
jae
jmp
add
test
add
push
mov
nop
leave
nop
jmp
xor
js
mov
clc
repnz
nop
cld
jae
js
sbbb
clc
repnz
nop
cld
jae
add
add
add
push
mov
mov
cmp
ret
mov
xchg
xchg
xchg
xchg
insb
rolb
rolb
clc
repnz
nop
cld
jae
sub
sahf
add
rclb
mov
pop
clc
repnz
nop
cld
jae
add
mov
shr
mov
adc
jno
inc
and
push
mov
xchg
ret
les
inc
jo
mov
clc
repnz
nop
cld
jae
add
push
add
clc
repnz
nop
cld
jae
add
add
mov
nop
leave
nop
jmp
add
add
rcrl
lock
mov
clc
repnz
nop
cld
jae
push
add
xor
push
mov
xchg
ret
and
dec
add
and
and
idiv
clc
repnz
nop
cld
jae
add
mov
clc
repnz
nop
cld
jae
mov
xchg
xorl
fld1
clc
repnz
nop
cld
jae
inc
inc
fwait
add
pop
clc
repnz
nop
cld
jae
jl
add
fwait
jl
outsb
aam
xchg
mov
xchg
ret
cmp
js
out
xor
clc
repnz
nop
cld
jae
add
add
roll
mov
xchg
ret
add
popa
push
clc
repnz
nop
cld
jae
add
add
add
imul
sti
push
mov
xchg
ret
add
sub
add
lret
out
pop
movzwl
clc
repnz
nop
cld
jae
add
movsb
add
insb
lahf
push
clc
repnz
nop
cld
jae
sbb
cmp
add
or
jecxz
jns
clc
repnz
nop
cld
jae
js
shl
addl
pusha
clc
repnz
nop
cld
jae
and
add
xchg
sti
lea
clc
repnz
nop
cld
jae
add
lret
add
xchg
mov
clc
repnz
nop
cld
jae
add
ljmp
repnz
nop
cld
jae
add
outsb
mov
dec
push
fistpl
clc
repnz
nop
cld
jae
add
hlt
mov
pop
dec
cmp
push
mov
nop
leave
nop
jmp
add
add
test
pusha
or
movsb
clc
repnz
nop
cld
jae
mov
add
add
add
mov
xchg
ret
js
ljmp
out
push
pop
push
clc
repnz
nop
cld
jae
add
fwait
add
loop
mov
clc
repnz
nop
cld
jae
add
js
dec
pusha
clc
repnz
nop
cld
jae
pop
push
imul
mov
jmp
inc
std
add
push
mov
xchg
ret
mov
lods
js
add
xchg
or
repnz
nop
cld
jae
add
add
sbb
push
push
mov
xchg
ret
add
add
add
cmp
pop
push
clc
repnz
nop
cld
jae
inc
add
add
sbb
rclb
in
nop
leave
nop
jmp
add
add
loope
add
mov
clc
repnz
nop
cld
jae
add
jge
sti
add
add
push
mov
nop
leave
nop
jmp
add
add
movsb
clc
repnz
nop
cld
jae
hlt
add
xchg
add
push
push
mov
xchg
ret
add
add
push
pop
add
mov
pop
push
mov
xchg
ret
push
add
add
add
pop
ljmp
xchg
inc
add
mov
xchg
add
add
clc
repnz
nop
cld
jae
cltd
xchg
add
cmp
mov
nop
leave
nop
jmp
push
add
add
mov
clc
repnz
nop
cld
jae
add
shll
mov
add
push
mov
xchg
ret
jl
push
mov
push
add
repz
mov
nop
leave
nop
jmp
add
add
adc
call
nop
nop
cld
jae
rolb
add
mov
clc
repnz
nop
cld
jae
add
add
mov
test
idiv
clc
repnz
nop
cld
jae
add
sub
mov
xchg
ret
add
add
add
imul
cld
jae
add
cltd
roll
imul
mov
push
mov
xchg
ret
js
mov
add
add
repnz
nop
cld
jae
push
add
add
push
mov
clc
repnz
nop
cld
jae
add
add
jae
repz
repnz
nop
cld
jae
jmp
cmp
je
add
and
outsl
add
clc
repnz
nop
cld
jae
add
outsb
add
mov
add
add
in
nop
leave
nop
jmp
ljmp
repnz
nop
cld
jae
add
mov
jo
in
rep
clc
repnz
nop
cld
jae
rcrb
insb
movl
orl
add
ljmp
pusha
push
mov
xchg
ret
push
rcrb
cmpb
jne
clc
repnz
nop
cld
jae
sahf
add
repz
clc
repnz
nop
cld
jae
add
add
clc
repnz
nop
cld
jae
push
add
pop
mov
push
mov
nop
leave
nop
jmp
add
mov
inc
mov
clc
repnz
nop
cld
jae
and
cmp
outsb
addb
sub
repnz
nop
cld
jae
ljmp
push
clc
repnz
nop
cld
jae
add
fwait
add
rolb
mov
nop
leave
nop
jmp
add
add
add
add
pusha
mov
push
mov
nop
leave
nop
jmp
add
and
add
fisttpll
mov
add
repnz
nop
cld
jae
shl
add
test
nop
cld
jae
add
add
pop
clc
repnz
nop
cld
jae
ljmp
push
ds
rep
clc
repnz
nop
cld
jae
cmp
ljmp
add
pusha
pusha
fsubl
clc
repnz
nop
cld
jae
add
pop
add
loopne
test
leave
nop
jmp
add
add
ljmp
adcl
in
nop
leave
nop
jmp
add
add
add
insb
dec
add
mov
nop
leave
nop
jmp
sbb
dec
xchg
push
clc
repnz
nop
cld
jae
imul
jo
mov
or
clc
repnz
nop
cld
jae
add
add
cmpl
jae
add
mov
xchg
ret
hlt
add
xchg
loopne
push
push
mov
sbb
jo
add
add
add
sahf
add
pusha
loopne
shr
push
mov
xchg
ret
and
add
jmp
lea
movsb
mov
and
mov
adc
repnz
nop
cld
jae
jp
add
mov
adc
repnz
nop
cld
jae
sbb
add
pushl
and
es
repnz
nop
cld
jae
add
cld
xor
dec
cmp
repnz
nop
cld
jae
add
add
mov
mov
and
add
add
hlt
dec
push
add
addb
shl
clc
repnz
nop
cld
jae
add
add
fwait
js
and
lock
call
clc
repnz
nop
cld
jae
hlt
inc
add
push
addr16
clc
repnz
nop
cld
jae
add
add
add
lret
rclb
xchg
inc
add
add
add
add
mov
nop
leave
nop
jmp
jmp
add
mov
mov
add
clc
repnz
nop
cld
jae
pop
mov
clc
add
stos
inc
add
add
xorb
popf
cmpl
push
mov
nop
leave
nop
jmp
add
cmp
idiv
clc
repnz
nop
cld
jae
ljmp
hlt
adc
nop
nop
cld
jae
xor
xchg
mov
lahf
clc
push
mov
nop
leave
nop
jmp
jl
xchg
add
les
repnz
nop
cld
jae
mov
js
add
scas
mov
push
mov
xchg
ret
add
add
cmpl
adc
push
push
mov
xchg
ret
add
add
mov
les
repnz
nop
cld
jae
add
add
pusha
loopne
sub
mov
nop
leave
nop
jmp
add
xor
cmpw
push
mov
nop
leave
nop
jmp
add
add
mov
mov
repnz
nop
cld
jae
add
les
mov
fwait
push
mov
nop
leave
nop
jmp
add
insb
add
xchg
add
inc
jne
pop
and
mov
nop
leave
nop
jmp
inc
jl
add
movsb
loopne
movsb
inc
loopne
pop
push
mov
nop
leave
nop
jmp
add
push
add
add
repnz
nop
cld
jae
sbb
dec
xchg
add
mov
lods
add
push
mov
nop
leave
nop
jmp
add
ljmp
mov
xchg
ret
sbb
movsb
add
add
outsb
dec
mov
clc
repnz
nop
cld
jae
add
add
insb
push
mov
nop
nop
cld
jae
inc
add
cmp
daa
add
push
mov
xchg
ret
xor
add
mov
clc
repnz
nop
cld
jae
add
cmp
loopne
movsb
pusha
pusha
ud1
add
clc
repnz
nop
cld
jae
add
sbb
hlt
cwtl
or
clc
repnz
nop
cld
jae
dec
mov
lods
loopne
clc
nop
popa
push
push
mov
xchg
ret
add
insb
add
add
add
ret
add
clc
repnz
nop
cld
jae
outsb
mov
mov
std
mov
push
mov
nop
leave
nop
jmp
add
loope
add
cmp
and
mov
jne
in
add
add
clc
repnz
nop
cld
jae
add
add
jns
mov
adc
mov
nop
leave
nop
jmp
fwait
add
sahf
cmp
add
inc
push
add
push
mov
xchg
ret
movsb
add
xor
mov
xchg
ret
adc
cmp
mov
clc
repnz
nop
cld
jae
add
add
add
and
add
add
add
add
push
mov
nop
leave
nop
jmp
cmp
add
add
mov
xchg
ret
and
add
nop
nop
cld
jae
add
add
pop
subb
leave
push
mov
nop
leave
nop
jmp
add
mov
mov
lcall
add
add
clc
repnz
nop
cld
jae
adc
xor
das
add
clc
repnz
nop
cld
jae
add
push
add
clc
repnz
nop
cld
jae
pop
add
add
mov
clc
repnz
nop
cld
jae
xor
roll
add
add
push
push
mov
xchg
ret
add
push
add
and
fwait
int
sbb
push
mov
xchg
ret
mov
outsb
mov
clc
repnz
nop
cld
jae
push
cmp
and
rcr
andl
nop
cld
jae
add
add
repz
push
mov
nop
leave
nop
jmp
dec
dec
and
add
add
shl
sar
repnz
nop
cld
jae
add
add
dec
rclb
sbb
call
pop
xlat
rol
push
mov
xchg
ret
add
add
js
je
add
insb
jbe
sub
push
mov
nop
leave
nop
jmp
add
add
xor
push
mov
nop
leave
nop
jmp
cmp
jge
icebp
clc
repnz
nop
cld
jae
les
dec
orb
repz
clc
repnz
nop
cld
jae
subl
out
jp
or
mov
repnz
nop
cld
jae
add
dec
lret
outsb
pop
cmc
xor
clc
repnz
nop
cld
jae
add
add
add
inc
cmp
add
add
add
cltd
and
inc
sti
push
clc
repnz
nop
cld
jae
inc
push
add
add
add
pushf
testl
sbbl
cmp
dec
je
add
test
repnz
nop
cld
jae
add
push
mov
xchg
ret
add
adc
jp
add
ret
lea
clc
repnz
nop
cld
jae
add
jmp
mov
nop
nop
cld
jae
add
add
jo
insl
dec
clc
repnz
nop
cld
jae
inc
add
mov
ljmp
sub
nop
nop
cld
jae
add
add
add
and
test
clc
repnz
nop
cld
jae
xchg
cmp
push
clc
repnz
nop
cld
jae
mov
add
add
add
pop
push
mov
xchg
ret
add
push
add
add
shrl
pop
clc
repnz
nop
cld
jae
add
push
add
cmp
add
ljmp
add
cld
arpl
mov
xchg
ret
mov
adc
dec
inc
xchg
sbb
leave
mov
and
xchg
jo
add
mov
in
nop
leave
nop
jmp
rol
and
add
push
mov
nop
leave
nop
jmp
add
add
fiaddl
jmp
jp
add
sarl
add
xchg
add
test
repnz
nop
cld
jae
add
incl
nop
nop
cld
jae
push
add
mov
or
clc
repnz
nop
cld
jae
imul
add
stos
pusha
andb
mov
and
add
jl
ljmp
pusha
in
mov
nop
nop
cld
jae
dec
xor
add
andb
loopne
out
clc
repnz
nop
cld
jae
add
add
add
cmp
rol
loop
clc
repnz
nop
cld
jae
mov
out
je
clc
repnz
nop
cld
jae
jl
add
push
mov
xchg
ret
add
out
add
push
mov
nop
leave
nop
jmp
lret
add
add
mov
push
mov
xchg
ret
out
les
add
pop
mov
clc
repnz
nop
cld
jae
add
add
pop
aad
push
mov
xchg
ret
hlt
ljmp
add
add
clc
repnz
nop
cld
jae
add
mov
pop
clc
repnz
nop
cld
jae
lods
add
je
add
jnp
add
push
mov
nop
leave
nop
jmp
js
inc
sahf
and
and
test
repnz
nop
cld
jae
mov
clc
repnz
nop
cld
jae
and
mov
inc
jmp
xchg
add
or
add
xchg
ljmp
nop
nop
cld
jae
add
add
xchg
mov
dec
jne
clc
repnz
nop
cld
jae
mov
add
push
add
push
mov
nop
leave
nop
jmp
add
repnz
nop
cld
jae
roll
add
imul
nop
xchg
mov
inc
add
cmp
add
push
sub
clc
repnz
nop
cld
jae
mov
add
add
adc
mov
xchg
ret
push
push
add
mov
fwait
push
mov
xchg
ret
add
add
add
add
movzwl
clc
repnz
nop
cld
jae
out
add
out
mov
clc
repnz
nop
cld
jae
cmp
mov
and
add
mov
nop
leave
nop
jmp
roll
movsb
add
jmp
sub
add
add
xchg
adc
mov
clc
repnz
nop
cld
jae
lods
hlt
imul
add
ja
push
mov
xchg
ret
push
lret
jp
dec
add
add
mov
add
clc
repnz
nop
cld
jae
add
add
add
nop
nop
cld
jae
add
add
add
insb
and
cmpsl
test
push
mov
nop
leave
nop
jmp
push
add
shlb
js
sti
add
clc
repnz
nop
cld
jae
cltd
movsb
imul
xchg
leave
fld1
clc
repnz
nop
cld
jae
cltd
add
cmpsl
ret
push
mov
xchg
ret
fwait
insb
adc
add
add
stos
pusha
rcl
clc
repnz
nop
cld
jae
mov
imul
sahf
ljmp
nop
nop
cld
jae
js
mov
push
mov
add
add
jne
add
xorb
and
nop
nop
cld
jae
cmp
je
insb
add
loopne
testb
or
mov
xchg
ret
jmp
out
lods
add
fwait
clc
repnz
nop
cld
jae
add
mov
mov
clc
repnz
nop
cld
jae
loope
sub
js
add
gs
push
mov
nop
leave
nop
jmp
add
adc
add
mov
mov
nop
leave
nop
jmp
push
insb
add
xchg
add
aaa
xchg
clc
repnz
nop
cld
jae
fwait
inc
les
cmp
add
pop
rep
push
mov
nop
leave
nop
jmp
xor
pop
add
inc
adc
repnz
nop
cld
jae
mov
cmp
out
jns
outsb
and
repnz
nop
cld
jae
mov
add
mov
mov
xchg
ret
mov
lods
add
clc
repnz
nop
cld
jae
ljmp
cmp
push
push
push
mov
nop
leave
nop
jmp
insb
add
add
sbb
push
mov
xchg
ret
cmp
xchg
or
ret
inc
add
mov
add
adc
mov
mov
cltd
mov
and
add
push
push
add
add
je
sub
repnz
nop
cld
jae
and
add
add
jae
repnz
nop
cld
jae
push
jmp
add
andb
add
add
add
push
add
mov
js
xor
cmp
push
mov
gs
mov
inc
add
mov
push
mov
ret
and
push
mov
nop
leave
nop
jmp
rolb
js
add
mov
cmp
repnz
nop
cld
jae
and
dec
mov
push
mov
xchg
ret
les
add
fwait
and
stc
popl
clc
repnz
nop
cld
jae
add
add
xchg
add
into
xor
adcb
nop
leave
nop
jmp
hlt
add
fwait
sti
pop
push
mov
xchg
ret
add
les
add
or
pop
sbb
nop
cld
jae
jo
roll
mov
add
dec
mov
cmp
nop
nop
cld
jae
add
add
pop
push
mov
nop
leave
nop
jmp
add
add
add
psubsw
decl
add
insb
add
dec
add
cmp
clc
repnz
nop
cld
jae
pushl
js
mov
clc
repnz
nop
cld
jae
cmp
push
add
jle
push
mov
xchg
ret
add
add
add
add
adc
inc
in
clc
repnz
nop
cld
jae
insb
add
addl
and
inc
mov
rep
push
mov
xchg
ret
add
add
imul
clc
repnz
nop
cld
jae
add
cltd
pop
push
mov
xchg
ret
ljmp
add
xchg
clc
repnz
nop
cld
jae
add
add
aaa
test
push
mov
nop
leave
nop
jmp
push
sub
add
add
or
push
push
mov
nop
leave
nop
jmp
and
loope
add
add
clc
repnz
nop
cld
jae
jp
add
hlt
add
jecxz
dec
clc
dec
inc
clc
repnz
nop
cld
jae
add
add
or
clc
repnz
nop
cld
jae
jp
add
fwait
xchg
push
push
add
clc
repnz
nop
cld
jae
add
xchg
push
mov
movb
add
push
mov
nop
leave
nop
jmp
push
loope
nop
push
fld1
push
mov
nop
leave
nop
jmp
sub
add
add
add
pop
clc
repnz
nop
cld
jae
add
add
push
mov
xchg
ret
mov
mov
add
push
add
add
clc
repnz
nop
cld
jae
add
add
add
rorl
repnz
nop
cld
jae
dec
ljmp
jb
push
mov
xchg
ret
add
add
add
movsl
fistpl
push
mov
xchg
ret
add
xchg
push
ljmp
call
in
nop
leave
nop
jmp
cmp
add
sbb
stc
clc
repnz
nop
cld
jae
xor
ljmp
dec
cmp
repnz
nop
cld
jae
imul
add
dec
outsl
mov
clc
repnz
nop
cld
jae
add
jo
push
ds
add
push
mov
xchg
ret
xor
add
fwait
inc
js
subl
push
mov
nop
leave
nop
jmp
add
iret
push
clc
repnz
nop
cld
jae
add
out
ljmp
nop
nop
cld
jae
xchg
push
add
add
or
mov
nop
leave
nop
jmp
and
add
add
cmp
push
mov
xchg
ret
add
add
inc
les
movzwl
clc
repnz
nop
cld
jae
add
add
in
nop
leave
nop
jmp
add
and
int3
js
fisttps
nop
nop
cld
jae
add
imul
andl
dec
cmp
xor
sbb
inc
add
movsb
add
rcrl
sbb
push
mov
xchg
ret
xchg
add
xchg
jo
add
mov
cmpsb
loopne
jbe
fdivr
mov
clc
repnz
nop
cld
jae
push
movsb
add
out
subl
push
mov
xchg
ret
add
mov
add
add
clc
repnz
nop
cld
jae
add
add
add
loope
add
clc
repnz
nop
cld
jae
add
lods
add
out
push
push
mov
xchg
ret
xchg
add
push
xchg
sub
inc
adc
clc
repnz
nop
cld
jae
and
add
pop
andb
incl
dec
add
add
add
loope
add
add
pop
clc
repnz
nop
cld
jae
fwait
add
add
mov
mov
xchg
ret
add
or
sarl
mov
clc
repnz
nop
cld
jae
add
push
mov
push
clc
repnz
nop
cld
jae
mov
jae
jne
push
mov
xchg
ret
add
les
sbb
add
test
clc
repnz
nop
cld
jae
add
adc
add
repnz
nop
cld
jae
add
fwait
out
lret
mov
scas
enter
nop
leave
nop
jmp
push
xor
add
xchg
mov
push
mov
nop
leave
nop
jmp
add
mov
mov
clc
repnz
nop
cld
jae
and
fwait
test
clc
repnz
nop
cld
jae
add
add
push
sbb
in
nop
leave
nop
jmp
add
orb
push
clc
repnz
nop
cld
jae
les
insb
add
sbb
cmp
repnz
nop
cld
jae
add
xchg
add
push
mov
outsb
das
aam
or
pop
push
and
add
jae
push
mov
xchg
ret
sahf
jo
add
add
and
hlt
out
je
clc
repnz
nop
cld
jae
add
push
sbb
loopne
in
inc
mov
add
push
mov
nop
leave
nop
jmp
xchg
mov
mov
push
mov
xchg
ret
ljmp
xchg
jne
clc
repnz
nop
cld
jae
add
sub
mov
sub
subl
add
add
add
jge
icebp
push
mov
nop
leave
nop
jmp
cmp
mov
xor
inc
adc
add
sar
repnz
nop
cld
jae
cmp
and
xor
repnz
nop
cld
jae
cmp
add
add
mov
lahf
in
clc
repnz
nop
cld
jae
inc
xchg
push
loope
call
clc
repnz
nop
cld
jae
mov
and
repnz
nop
cld
jae
add
add
addb
mov
clc
repnz
nop
cld
jae
addl
add
repnz
nop
cld
jae
fwait
add
js
and
and
mov
xchg
ret
sahf
pop
loope
add
ljmp
jno
inc
add
add
add
sahf
xchg
fildl
adc
inc
add
sub
imul
outsb
mov
popf
add
clc
repnz
nop
cld
jae
ljmp
cld
jno
mov
pop
ficomps
add
fwait
int
inc
add
mov
add
xor
pop
clc
repnz
nop
cld
jae
add
add
flds
in
nop
leave
nop
jmp
jmp
mov
mov
andb
inc
cmpsb
shlb
clc
repnz
nop
cld
jae
je
ljmp
xabort
nop
nop
cld
jae
cmp
add
into
les
jae
repnz
nop
cld
jae
lret
mov
add
add
in
nop
leave
nop
jmp
add
insb
cmpb
nop
cld
jae
add
push
sub
loopne
andb
iret
or
cld
jae
add
mov
cmpl
in
nop
leave
nop
jmp
loope
cmp
adc
clc
repnz
nop
cld
jae
add
xor
add
rcrb
and
nop
cld
jae
incl
inc
inc
add
add
push
xchg
clc
repnz
nop
cld
jae
add
inc
insb
mov
push
fld1
push
mov
xchg
ret
add
add
int
inc
push
adc
clc
repnz
nop
cld
jae
sub
mov
xchg
ret
mov
out
xor
sbb
add
iret
pop
jmp
add
add
add
mov
loope
js
jmp
stos
inc
add
add
add
insb
add
xchg
nop
and
fdiv
jo
fmul
pusha
fdiv
cmp
mov
roll
repnz
nop
cld
jae
adc
fisttpll
nop
cld
jae
cmp
add
add
mov
push
mov
nop
leave
nop
jmp
add
mov
fistpl
push
mov
xchg
ret
pop
add
add
mov
call
lds
and
add
add
add
ljmp
cld
jae
add
mov
add
pusha
loopne
mov
movl
add
add
add
fidivrs
int
inc
and
clc
repnz
nop
cld
jae
add
lods
add
xchg
add
clc
repnz
nop
cld
jae
cmp
insb
sub
and
clc
repnz
nop
cld
jae
imul
test
call
in
nop
leave
nop
jmp
and
mov
clc
repnz
nop
cld
jae
les
dec
push
push
mov
xchg
ret
add
add
js
imul
push
mov
nop
leave
nop
jmp
loope
xor
sahf
add
add
jl
mov
clc
repnz
nop
cld
jae
add
inc
fldl
nop
nop
cld
jae
movsb
add
add
add
test
nop
cld
jae
mov
fwait
imul
add
push
mov
xchg
ret
add
dec
add
roll
mov
nop
leave
nop
jmp
xchg
sub
les
add
add
repnz
nop
cld
jae
add
push
in
mov
clc
repnz
nop
cld
jae
cmp
ljmp
xor
clc
repnz
nop
cld
jae
add
add
mov
mov
nop
nop
cld
jae
ljmp
cwtl
push
movzwl
clc
repnz
nop
cld
jae
add
test
iret
clc
repnz
nop
cld
jae
ljmp
mov
xchg
ret
insb
and
outsb
sbb
add
popa
push
mov
nop
leave
nop
jmp
call
pop
xchg
lods
add
mov
push
mov
xchg
ret
add
mov
add
add
in
nop
leave
nop
jmp
lret
xor
add
add
add
mov
add
add
mov
push
lods
inc
pusha
ss
dec
loop
jmp
insl
inc
jle
out
mov
mov
shrb
loopne
das
xchg
and
shlb
pusha
inc
fidivrs
dec
clc
into
aas
push
adc
adc
mov
rolb
fcomp
sbb
inc
stos
addb
mov
add
pop
cmp
xchg
xor
sti
pop
icebp
pop
lock
dec
and
insb
sbb
lahf
xchg
daa
jp
push
and
xchg
xchg
jne
sub
ds
loopne
jb
scas
outsb
out
lods
and
test
rorb
mov
inc
inc
mov
adc
jg
rolb
enter
pop
mov
inc
and
pusha
jne
out
add
sub
mov
rclb
and
pop
and
add
dec
or
jnp
xchg
adcl
mov
cltd
lret
mov
loopne
fisubs
pusha
andb
arpl
jnp
loopne
jae
subl
and
popl
xchg
shlb
add
mov
jae
scas
pusha
loopne
pusha
inc
or
rcrb
mov
inc
rorb
pusha
shlb
pusha
rcrb
pop
lods
add
hlt
jns
inc
les
sub
xor
pusha
and
lods
mov
lcall
jle
xchg
xor
enter
push
pusha
and
shll
rol
jg
jae
jp
popa
out
xchg
hlt
jo
mov
xor
roll
jno
and
ficompl
push
clc
pushf
and
xchg
pop
out
outsb
fiadds
and
add
mov
fisttpll
xor
mov
cltd
or
add
mov
jae
sbb
mov
add
sub
shrb
inc
std
fbstp
out
mov
rcrl
pop
sbb
sbb
sti
jae
repnz
lea
mov
incl
loopne
mov
add
fdivrs
xor
cmc
pop
add
add
and
loopne
sub
and
sub
mov
pusha
int3
xchg
mov
into
insl
imul
push
ds
pop
push
jecxz
shl
dec
ja
mov
ret
cwtl
mulb
imul
scas
sti
push
out
clc
testl
ja
int
pop
push
loopne
fcomi
or
push
cmp
xor
loopne
clc
dec
imul
adc
fs
andb
mov
clc
cmp
and
rolb
pusha
and
stos
fistps
inc
aam
jb
mov
mov
nop
test
jbe
lahf
mov
imul
xor
enter
sub
scas
pusha
loopne
pusha
mov
data16
add
pop
push
jp
shl
jns
and
jg
sub
mov
lcall
arpl
loopne
push
inc
or
jecxz
and
stc
call
xchg
sub
test
shrb
add
mov
test
stos
xor
mov
and
add
and
outsb
adc
daa
mov
xacquire
sub
xchg
adc
loopne
pop
xlat
movsl
sahf
movsb
andb
ljmp
jns
jno
jns
sub
aad
loopne,pn
xchg
cwtd
inc
sarb
inc
imul
jae
adc
mov
xorl
fildll
cmc
or
sub
icebp
cld
out
jg
cmp
fmull
repnz
sbb
and
add
shrb
aad
dec
test
inc
cmp
out
xor
pop
pop
nop
adc
loopne
enter
dec
xchg
xlat
lret
dec
mov
mov
adcb
jecxz
add
sbb
into
push
sahf
cmpsb
mov
sub
mov
mov
and
push
ja
std
icebp
inc
lea
mov
into
mov
enter
mov
lock
inc
out
loop
adc
repnz
inc
sub
inc
bt
sbb
cmp
imul
loop
fiaddl
inc
pusha
pop
mov
pop
and
and
push
dec
mov
jne
loopne
jg
jns
mov
fiaddl
jno
iret
sarl
adc
ret
sub
and
mov
inc
out
rcll
imul
jbe
int3
xor
cmc
add
and
inc
rorb
andl
cmp
and
xorb
xchg
fucom
fwait
sub
add
add
inc
jecxz
mov
xorb
add
ja
aad
ss
push
repnz
sbb
daa
shll
loopne
adc
leave
repnz
pop
xor
jle
pop
scas
mov
pop
xlat
stos
leave
ret
pop
inc
lds
xlat
push
shl
push
push
cmp
cmpsl
loopne
mov
cmp
lds
jnp
test
mov
jo
or
aas
pop
int3
lcall
and
mov
fidivrl
aad
loopne
xor
mov
call
inc
xchg
sub
mov
negl
sbbb
into
repz
mov
sbbb
loopne
lcall
ljmp
mov
loopne
mov
pop
fwait
inc
flds
pop
div
iret
adc
adc
fnstcw
mov
stc
fcomip
mov
inc
and
lea
addr16
xor
inc
in
rcrb
xchg
or
out
jae
inc
mov
int
push
and
or
push
lcall
test
add
cmp
cmp
sub
rolb
insb
stos
mov
add
inc
rclb
or
sub
mov
sub
mov
pop
adc
mov
xor
je
mov
add
and
pusha
adc
lock
add
add
repnz
bound
mov
add
mov
add
shlb
xor
outsb
dec
ret
arpl
pop
arpl
out
fnstcw
sti
jmp
add
std
cmp
mov
sahf
ret
shlb
cmp
push
jecxz
add
outsb
mov
mov
or
lret
mov
add
pusha
shlb
jnp
mov
or
test
lahf
dec
iret
jmp
pop
and
xor
pushf
adc
xor
and
fnstenv
clc
popf
loope
cmp
cmp
mov
or
push
dec
lahf
pop
jg
lcall
rorb
dec
cs
adcl
add
loopne
or
xorl
in
fsubl
sbb
dec
sub
sub
mov
pop
mov
push
mov
cmp
pop
cli
jbe
push
sub
add
xlat
mov
loopne
mov
mov
orl
je
add
xlat
or
and
add
inc
cmp
test
inc
jge
in
sbb
jmp
mov
das
cli
xor
leave
inc
rcll
mov
and
clc
sbb
leave
daa
push
inc
mov
push
les
mov
add
sub
jno
jno
mov
xchg
bound
pop
sub
add
je
sub
jb
jae
mov
pop
xor
lret
pop
leave
adc
sbb
fsubrp
sub
xor
ret
jmp
lods
rolb
lods
or
sub
mov
mov
xlat
insb
pusha
push
gs
inc
rcrb
popa
pop
leave
adc
js
or
or
loopne
inc
test
addb
fcomps
mov
std
jmp
or
loopne
inc
and
xor
loopne
and
nop
xchg
adcb
stos
add
in
jl
sbb
shl
sub
mov
mov
icebp
addr16
jl
mov
call
pusha
adcb
inc
inc
inc
and
ror
mov
ljmp
jbe
bound
push
xchg
fnstenv
pusha
inc
sbb
rcl
clc
jg
and
stos
and
repz
pusha
mov
inc
mov
iret
pop
sbb
loope
lock
outsb
aam
loopne
jg
jae
mov
mov
inc
push
push
xchg
fmull
mov
lret
and
xorb
movsl
lret
mov
fisubl
inc
loopne
add
inc
pushf
and
subb
inc
lret
iret
push
shlb
shll
shrl
adc
push
xor
push
mov
push
loopne
mov
jne
mov
mov
popf
ficomps
jge
dec
cld
xor
mov
sub
add
jp
xor
xor
andb
xor
aaa
mov
insb
sub
inc
ss
xor
imull
cltd
mov
add
inc
sub
inc
add
and
add
pusha
xchg
pushf
repnz
scas
mov
rorb
cmp
pop
je
and
popf
in
or
and
sti
mov
loope
daa
cltd
movsb
mov
pop
stos
andb
lret
shl
or
pusha
xchg
mov
push
xor
enter
or
loopne
loopne
push
mov
mov
sub
pop
inc
andb
jae
dec
xchg
push
mov
or
add
inc
add
pusha
inc
dec
movsl
lahf
push
iret
ficompl
and
cmp
stos
and
out
push
mov
inc
addb
pusha
sub
cmp
sbb
and
pop
push
inc
loopne
loopne
dec
test
cmp
fcos
std
adc
push
inc
iret
adc
mov
xchg
xor
std
lret
and
add
push
add
xor
loopne
xchg
lret
das
cli
mov
hlt
rolb
and
ljmp
xchg
popf
enter
inc
shrb
jnp
mov
testl
xor
in
and
mov
loopne
pop
cmp
pop
mul
pop
mov
pushf
lret
mov
pusha
adcb
push
ja
scas
push
shlb
rclb
inc
sub
and
jmp
jl
dec
push
jnp
andb
fiaddl
or
mov
fisttps
add
sbb
loopne
pusha
add
std
cmp
sub
or
cltd
mov
inc
mov
mov
mov
sarb
lcall
in
pop
push
sbb
int3
pop
ret
and
lahf
cmc
shrl
xor
add
jmp
cmp
jnp
mov
rolb
subb
inc
outsb
sbb
push
pusha
mov
loopne
cmp
pusha
repz
pop
jae
mov
add
mov
addb
mov
sbb
stos
add
pusha
inc
imul
jae
pop
cli
add
pop
mov
jmp
dec
jmp
imul
and
rcl
nop
sub
mov
scas
and
add
jne
mov
mov
pop
outsb
mov
ficoms
xchg
jmp
adc
inc
lds
xchg
cmc
jb
adc
out
sub
cs
pusha
lret
into
in
pusha
mov
push
mov
push
mov
loopne
push
popf
push
ficompl
addr16
cwtl
adc
pusha
shr
cld
notb
dec
xchg
pop
loopne
pop
insl
sahf
pop
jmp
aaa
out
jmp
les
jecxz
pop
imulb
inc
dec
insb
cmpsl
and
pop
arpl
mov
out
aam
mov
add
pusha
aad
popf
jecxz
jo
jae
jl
fsubp
xor
sbb
inc
out
into
rorl
mov
mov
pusha
or
cmpsb
addb
add
test
mov
xor
es
loopne
xlat
xor
rolb
lret
inc
mov
les
out
cmova
aam
mov
imull
andb
andb
cld
push
insl
or
loopne
pushf
push
dec
mov
inc
and
cmp
sub
jecxz
jecxz
or
out
mov
mov
jle
das
stos
jle
add
xchg
push
cmpsl
shl
cmp
xlat
add
lcall
or
inc
jbe
pusha
subb
imul
mov
and
and
and
inc
xchg
xlat
imul
out
push
fidivrs
shlb
jae
lret
push
lods
pop
xchg
pop
xchg
rcrb
lahf
aad
add
dec
fwait
cmp
pushf
jle
fs
mov
shlb
sbb
or
push
push
push
out
js
add
repz
pusha
jb
mov
shl
jb
pop
and
dec
mov
rolb
cltd
sbb
out
pop
and
inc
inc
ja
sbb
std
out
mov
lahf
adc
xor
cmp
shl
inc
or
add
loopne
mov
sarb
into
or
jp
and
cld
inc
fdiv
insl
push
mov
adc
mov
or
loop
dec
into
and
outsl
aad
loopne
iret
fcom
imul
pop
popf
enter
aad
mov
outsl
sub
repnz
adc
jle
stos
sti
inc
adc
lock
adc
dec
popa
and
jmp
pop
inc
or
and
jno
pop
inc
insl
and
shlb
addb
pop
or
push
loopne
pop
je
lcall
sarb
int3
sbb
add
lock
pusha
icebp
addps
inc
int
fsubl
test
mov
mov
xchg
iret
jae
sub
pusha
fldenv
jae
lcall
pop
mov
inc
lods
add
in
cltd
mov
pop
iret
mov
loop
sub
add
ret
add
int3
cmc
leave
adc
fsubs
lret
andb
lds
mov
dec
cwtl
fs
and
faddp
xor
sti
sahf
pusha
stos
inc
pusha
mov
pusha
inc
push
add
pusha
lcall
pusha
jl
rcrl
andb
pusha
mov
sti
mov
sub
in
popa
int3
cli
fisubrs
cmpsl
out
and
inc
mov
xchg
in
cmp
ret
jnp
add
inc
out
shlb
sarb
inc
cli
dec
dec
jg
movsb
inc
loopne
inc
mov
mov
add
lcall
out
lods
mov
jge
adc
add
xor
push
mov
fmul
out
push
pop
sbb
jge
inc
cmp
adc
and
pusha
fildl
stos
pusha
pusha
fdivs
and
mov
jp
fs
and
adc
inc
jmp
mov
ds
push
sub
fcom
pop
movsb
pusha
shlb
test
fsubl
jns
mov
mov
dec
loope
jle
shlb
lcall
test
xorb
fisubrl
and
add
xor
dec
jge
fcomps
fs
test
push
pop
xchg
fcmovnbe
jg
pop
push
outsb
cwtl
jp
aam
xbegin
fildl
add
sarb
and
lock
loopne
sarl
adc
lret
cwtl
sti
arpl
jg
pop
push
mov
sarb
mov
shl
jge
mov
and
dec
mov
lahf
adc
and
aad
out
outsl
cmpsl
mov
sbb
push
rolb
sbb
add
inc
inc
lods
test
loopne
outsl
scas
test
dec
jb
push
sub
sub
inc
sahf
push
add
inc
and
pusha
imul
arpl
sub
push
mov
aam
loopne
cltd
inc
pop
push
iret
pop
jle
pop
xor
js
cmp
pop
mov
inc
out
lcall
and
dec
push
sub
lret
das
mov
lea
xorl
sbb
and
fwait
out
push
dec
push
inc
inc
or
mov
cmp
xor
xchg
pusha
xor
adc
mov
sbb
sti
cmp
out
and
test
iret
fists
mov
in
sarl
and
sarb
stos
mov
add
pop
popf
cmc
and
add
adc
add
dec
pop
mov
adc
mov
cwtl
stc
jmp
and
push
push
jle
adc
fisttpl
mov
and
xor
mov
in
sbb
jg
sub
cld
inc
bound
pusha
fisubl
add
scas
jmp
out
stos
inc
pusha
jle
mov
mov
shrb
jno
enter
leave
rolb
push
imul
pusha
aas
mov
mov
or
jg
adc
loope
pusha
mov
pusha
add
ds
pop
xchg
outsl
sbb
shl
lret
jl
dec
jmp
in
sbb
in
inc
ss
lea
jecxz
cmc
imul
iret
xchg
lret
rcl
outsb
jae
mov
or
cmpl
sbb
and
add
pop
push
and
push
popa
das
push
mov
imull
or
pop
xor
sbb
loopne
cld
add
mov
idiv
cli
movsb
addb
jle,pt
daa
dec
cmpsb
andb
and
add
inc
push
das
fsubrl
add
ret
cmc
add
jg
pcmpeqw
push
sti
in
pop
xor
test
xchg
and
mov
mov
ljmp
fsubrl
or
loopne
push
jecxz
insb
pop
mov
sti
sbb
sub
ljmp
mov
fdivrp
xor
rolb
test
icebp
push
and
loopne
andb
and
inc
inc
fidivrl
and
add
cltd
mov
add
out
lar
loopne
pop
in
inc
loopne
addb
or
rclb
and
loopne
add
enter
push
cltd
cmp
imul
lds
push
adc
sub
mov
cmpsb
andb
and
shll
mov
mov
sub
pusha
and
add
rcrb
loopne
mov
jge
andb
jb
sbb
cmp
pusha
rolb
inc
add
dec
mov
adc
sbb
pusha
inc
mov
insb
icebp
sbb
div
divb
xchg
cmp
cmp
rol
pop
js
addb
dec
push
add
push
andb
cmc
xchg
jle
xchg
pinsrw
xor
pop
sub
sub
imul
ja
mov
push
xchg
pop
xor
sub
xchg
push
add
shlb
and
mov
add
or
loopne
es
mov
inc
adc
into
sub
pop
push
jae
mov
adc
out
jp
adc
mov
cmp
fucomip
pusha
scas
and
in
stc
adc
ja
movsl
and
xorb
pop
int3
clc
out
fstp
lret
ja
daa
pusha
pop
pop
dec
push
mov
jmp
jnp
mov
pusha
lock
mov
sub
pusha
in
xchg
outsb
xor
mov
mov
mov
mov
not
inc
cmp
pusha
mov
mov
push
loopne
iret
and
mov
add
in
dec
or
add
dec
shrb
icebp
fs
fxch
pop
shr
test
xchg
and
fsubr
inc
cmp
add
loopne
jns
arpl
xor
mov
ror
mov
sbb
lret
stos
pusha
add
and
dec
mov
int3
or
insb
lock
add
and
andb
pusha
add
jecxz
in
cmp
and
add
xchg
divb
arpl
outsb
mov
das
lret
mov
and
mov
in
into
and
bound
mov
ds
ret
xchg
dec
or
mov
and
xchg
in
imul
sbb
imul
sbb
stc
ljmp
push
push
andb
mov
sub
pop
test
outsb
je
enter
pusha
mov
cmpsb
pusha
and
xor
cmc
cmpsl
add
in
scas
rolb
mov
jo
mov
mov
shrb
push
jbe
pusha
pusha
fcoms
jg
inc
ljmp
pop
push
in
scas
dec
adc
mov
out
iret
les
inc
loopne
loopne
push
and
daa
imul
cld
in
and
test
jae
loopne
sub
stos
leave
dec
divb
jne
shlb
andb
pop
mov
cmp
and
gs
in
xor
imul
sbbb
divl
xchg
fsincos
int
std
jl
out
sbb
mov
sub
and
rolb
inc
jecxz
sbb
addb
jae
cli
pop
imul
loopne
push
movsl
mov
xchg
js
and
jno
pop
dec
adc
and
mov
addb
sbb
in
mov
test
pop
pop
xor
adc
fnsave
inc
std
inc
je
sbb
mov
xchg
ret
addb
aam
jg
adc
push
sbb
loopne
cmp
rol
mov
xor
je
lods
shl
test
fdiv
xchg
cli
xchg
repz
push
mov
dec
fbstp
mov
adc
shl
xchg
in
into
sub
loopne
clc
pushf
pushf
int
and
sahf
push
dec
and
lahf
lock
leave
or
mov
ret
orb
shlb
push
dec
and
out
pop
cmpsb
and
lods
loopne
xchg
adc
push
and
mov
sub
out
mov
inc
xchg
sbb
in
mov
ret
adc
jbe
bound
fwait
xchg
sbb
xor
cmpsl
aaa
pop
xor
loopne
xor
mov
push
lahf
xchg
mov
adc
fcoms
std
paddd
dec
push
pop
xor
and
mov
or
and
and
or
jns
leave
idivl
xchg
dec
mov
cld
aam
push
xorb
cmp
cld
jnp
xchg
pushaw
mov
int
dec
loopne
addb
add
fiadds
aaa
aaa
js
scas
and
out
xchg
cwtl
ss
sbb
int
je
cli
lret
add
jae
mov
cmpsl
nop
lcall
out
fwait
mov
pusha
push
xchg
push
pusha
ss
xchg
pop
push
and
movsl
and
and
and
mov
pusha
mov
shlb
daa
pop
mov
rolb
or
bound
shr
popa
mov
rep
addb
sub
add
and
shr
mov
lock
rolb
push
mov
je
xlat
pop
push
ss
leave
lock
out
pop
add
mov
or
shlb
dec
andb
inc
inc
xchg
jne
fists
aam
push
rorb
and
dec
ss
add
inc
cwtl
sbb
or
rcr
insl
add
sbbb
cltd
ja
sub
das
std
into
lret
inc
sbb
cmc
dec
fwait
enter
cmp
cmpsb
add
insl
cmp
scas
and
lea
push
loopne
repz
xchg
int
or
inc
adc
and
shlb
loopne
sbb
idiv
fcomps
je
inc
jae
loopne
pushf
fcmovu
xchg
and
add
ja
andb
pusha
mov
mov
add
xbegin
test
les
pop
lods
add
xchg
shlb
push
testb
pop
test
sarb
add
sahf
push
call
xor
mov
xor
add
adc
push
and
fst
shlb
fcomi
jne
leave
pop
inc
loopne
andb
jge
outsb
loopne,pn
popf
lea
bound
in
scas
rolb
xchg
movsb
and
cmc
aam
cs
repz
loopne
out
shlb
mov
xchg
and
js
pushf
inc
arpl
jge
mov
rclb
or
jecxz
aam
popa
stos
add
push
in
imul
leave
daa
pop
jo
je
aas
into
adc
mov
and
mov
mov
sbb
cltd
roll
add
in
mov
mov
and
jns
popf
movsl
movsb
add
inc
pusha
pop
xchg
mov
shlb
and
pusha
lcall
scas
pusha
inc
imul
inc
mov
fs
add
sbb
lret
and
pusha
add
aam
mov
inc
push
mov
imul
lret
test
in
fwait
inc
iret
jnp
insl
lds
shlb
add
xor
pusha
push
pusha
sar
out
and
andb
sbbb
jb
leave
daa
scas
and
imul
pop
and
add
and
cld
inc
das
mov
push
cs
lods
rolb
push
add
loopne
xchg
shlb
lea
pusha
push
xor
inc
adc
ss
leave
testl
cmp
add
test
xchg
and
icebp
repnz
shlb
xor
inc
pusha
mov
xchg
mov
add
ss
inc
xchg
and
adc
push
loopne
push
pop
mov
fs
sub
sarb
shlb
mov
inc
sbb
pop
adc
loopne
inc
sbb
out
andb
cmp
loopne
add
add
add
push
sub
push
loopne
loope
fstpl
test
loopne
lcall
negl
mov
loopne
lea
les
aas
adc
mov
and
fisubrl
mov
add
xchg
outsl
aas
sbb
mov
jbe
movsb
pusha
loopne
icebp
cltd
pop
inc
xor
mov
aad
adc
jl
stc
push
rolb
cmp
push
add
cltd
into
add
push
mov
mov
push
pop
in
mov
xor
xchg
aas
add
loopne
les
test
jo
adc
ficomps
inc
inc
stc
sub
mov
xchg
push
mov
jnp
adc
and
dec
mov
je
andb
adc
sub
idiv
and
loopne
mov
fmulp
aad
leave
repnz
mov
xlat
lods
pusha
pusha
aad
fdivs
ret
cmp
pusha
inc
lods
dec
gs
imul
dec
loop
testl
rol
in
mov
nop
sub
and
mov
hlt
imul
xor
mov
mov
aad
jb
arpl
add
hlt
in
loopne
stos
into
cmp
push
mov
cltd
push
loopne
clc
mov
cmpsb
pusha
inc
test
cwtl
aaa
push
lret
cmp
add
xor
repz
xchg
pusha
adc
sub
and
pop
pushf
addb
or
inc
pop
pop
cmp
ret
xor
and
pop
mov
pop
adc
adc
mov
insb
adc
mov
xchg
in
arpl
sbb
outsl
cmpsl
xor
mov
addb
dec
fmul
inc
iret
mov
orb
sbb
ss
scas
loope
mov
xor
push
lods
shlb
ljmp
fidivs
xor
mov
add
loop
loopne
xor
push
add
mov
pusha
add
ja
and
scas
pop
jp
aam
nop
ds
loop
stos
andb
and
scas
xchg
cmp
movsl
scas
mov
push
push
lret
inc
ret
andb
inc
add
adc
push
pusha
pusha
gs
lods
shl
inc
shrb
mov
xchg
jmp
rclb
inc
outsl
enter
lahf
or
adc
jl
lods
add
jmp
jmp
adc
movsl
jnp
mov
cmp
cld
pop
xor
or
data16
fwait
insb
aaa
cmp
sbb
roll
in
ss
loop
out
mov
and
and
sbb
call
mov
pop
stos
addb
ja
scas
mov
push
pop
lock
ror
jp
and
enter
mov
cmp
mov
insb
adc
add
rolb
push
std
mov
leave
xlat
adc
mov
jae
sub
sbbb
or
mov
out
or
dec
jle
mov
inc
xchg
mov
dec
jp
inc
enter
inc
sub
mov
mov
and
aas
loopne
inc
pop
push
int
aas
adc
inc
jecxz
addb
cmpsl
js
jmp
mov
loopne
mov
addb
ficomps
mov
shlb
loopne
bnd
cmp
pop
stos
cmpsb
andb
mov
and
shl
es
add
imul
mov
les
out
pop
and
mov
adc
jno
push
inc
xchg
test
das
arpl
mov
shlb
mov
loop
mov
sbb
xchg
add
mov
cmp
mov
add
xchg
js
xchg
push
daa
aaa
xchg
and
data16
jnp
push
loopne
out
out
das
push
push
idiv
mov
loopne
pop
cli
cli
les
pusha
pusha
cld
jno
and
aam
adc
popf
push
jno
xchg
sub
inc
addb
lock
dec
xorl
loopne
xchg
mov
and
jp
mov
add
mov
mov
jg
cmpsb
shlb
in
dec
das
xchg
mov
loopne
movsb
loopne
mov
mov
mov
pusha
arpl
pusha
cmp
divb
dec
pop
pushf
xor
push
out
mov
inc
inc
enter
xchg
mov
cmp
jb
xor
push
dec
mov
xor
je
inc
shlb
cmp
adc
mov
out
jl
mov
aaa
repnz
int3
int3
rcll
mov
lock
mov
pop
in
pop
xor
mov
insb
stos
mov
in
enter
sahf
aas
push
scas
add
leave
jle
int3
mov
mov
icebp
jge
addb
sbbb
sbb
mov
fldenv
jb
hlt
outsl
cmpsb
add
sbb
daa
cmpsb
addb
sbb
mov
pop
inc
inc
and
insb
stos
andb
popa
pop
add
cwtl
mov
pusha
popf
repz
addr16
and
cld
and
loopne
loopne
lods
and
add
movsl
mov
sub
pop
jge
mov
shlb
push
pusha
add
call
test
bound
add
mov
or
popa
push
xchg
imul
shlb
dec
ss
ficoml
in
cmc
mov
cmp
gs
jnp
mov
shrb
mov
insb
lret
rcll
mov
andl
pushf
cmp
adc
shll
xlat
stc
inc
clc
pop
aad
jo,pt
scas
add
es
add
xor
and
orb
and
js
lods
shlb
cmp
pop
cmc
cltd
sub
pusha
icebp
push
aam
cmpsb
mov
or
inc
inc
mov
outsl
mov
andb
jl
xor
test
mov
xor
add
outsl
dec
add
or
add
js
ds
or
mov
rclb
leave
ficomps
or
shlb
loopne
jae
pop
pusha
inc
dec
popa
loop
and
andb
dec
xchg
out
sbb
or
inc
xor
mov
xchg
loope
inc
mov
fwait
aam
add
jae
xor
fprem
lods
pusha
xorb
loopw
call
test
add
loopne
or
movl
mov
add
loopne
cmp
fdivrp
inc
mov
aam
mov
cmp
enter
lahf
mov
fwait
movl
mov
ret
mov
jb
jmp
fwait
and
ror
mov
loopne
mov
add
jnp
rol
lret
loopne
fimull
jne
pop
fisttpl
and
sbb
cmp
adc
sbb
lahf
push
shlb
std
lock
mov
std
jp
and
dec
sub
ljmp
mov
adc
data16
sti
sub
mov
loopne
sti
jl
xchg
mov
sbbl
std
sahf
add
mov
popf
dec
je
rcll
aaa
xor
pushf
ret
cli
ljmp
xor
mov
push
dec
andb
mov
or
push
repnz
addb
andb
push
test
inc
push
fnstcw
mov
fldl
mov
bound
inc
push
push
and
orb
add
test
and
jb
lcallw
arpl
mov
ret
ss
jne
ficomps
and
pop
and
mov
lods
mov
mov
test
js
out
aad
decl
add
pop
adc
inc
sbb
rol
and
pop
pop
mov
rolb
jo
andb
mov
adc
aas
jl
decl
or
pusha
or
insb
cld
adc
sbb
adc
inc
dec
add
loop
lds
sub
pusha
adc
mov
ror
loopne
dec
cmp
jo
mov
sbb
mov
sub
pop
push
outsb
imul
or
push
mov
add
lods
aaa
jnp
and
pusha
loope
repnz
adc
ss
pop
in
in
or
ljmp
cmc
pop
cmp
jnp
shll
add
ficoml
stos
shlb
pusha
rclb
mov
movsl
push
add
bound
pusha
shr
cmpsl
enter
add
rolb
jmp
pusha
and
cmp
mov
mov
sbb
outsb
lea
loopne
mov
jl
push
dec
mov
pusha
pop
nop
icebp
faddl
mov
sti
aam
mov
inc
orb
and
fwait
cmp
inc
or
add
mov
adc
push
pop
loopne
jne
lcall
and
cmp
jle
inc
and
push
adc
jne
ret
pop
dec
pop
dec
dec
or
xor
jle
adc
test
mov
insl
mov
loopne
pusha
inc
in
push
push
int
pop
sbb
shlb
fsubs
andb
daa
clc
dec
es
add
add
std
mov
call
push
jge
mov
dec
fst
es
inc
fsubl
and
rorl
add
mov
shlb
mov
daa
sbb
sti
xchg
jbe
jg
shll
rolb
ds
pop
fimull
dec
pusha
push
pop
mov
inc
mov
jp
cs
jns
dec
rolb
mov
jb
mov
divl
icebp
cs
dec
push
shlb
mov
pusha
xorb
in
out
lahf
and
subb
dec
pop
xchg
xor
jns
mov
sbb
lods
roll
aam
jmp
jmp
loope
sub
iret
pop
push
mov
sarb
gs
or
in
sub
rclb
int
test
es
inc
into
sbb
and
mov
pop
dec
addr16
sbb
pop
xor
dec
lock
xchg
adc
outsl
cmp
loopne
hlt
pop
adc
fwait
jo
mov
loopne
shll
mulb
aad
in
xchg
xchg
repz
fidivrs
and
mov
push
fisttpll
add
mov
cld
pop
mov
push
iret
xor
mov
movsb
andb
mov
and
sbb
xchg
xchg
lods
popf
into
pop
add
cwtl
pusha
pusha
data16
adc
xchg
outsl
rorb
push
adc
shrl
roll
scas
and
loopne
xor
cwtl
das
inc
cmp
scas
clc
push
push
cmpsb
shlb
enter
sbb
mov
filds
and
test
xchg
std
mov
cmc
and
sub
pusha
scas
adc
xor
pop
fwait
cmpsb
pusha
rcl
adc
and
loope
and
notl
lahf
and
cmpb
and
adc
add
stos
add
enter
dec
inc
dec
add
aad
imul
leave
inc
js
enter
inc
icebp
sub
les
xor
pop
mov
fidivrs
int3
sbb
jne
movsl
repz
jbe
xchg
mov
xchg
das
pop
aam
mov
cmp
int
mov
sbb
adc
lcall
in
add
shlb
clc
jnp
movsl
addb
stos
mov
ds
dec
mov
aaa
mov
outsl
jecxz
cmpsl
les
andb
pop
cli
nop
xor
sbbl
test
and
cmp
clc
sbb
pop
mov
jo
add
jo
add
mov
push
mov
inc
shll
adc
xchg
cmp
rolb
push
jae
cli
cli
inc
scas
lcall
mov
xor
sbb
les
mov
jbe
mov
mov
and
call
push
ror
cmp
addb
add
addb
push
cmp
jbe
addr16
pushf
sbb
mov
and
sub
andb
pusha
lods
mov
mov
sbbl
dec
cltd
shrl
and
out
jns
xor
push
mov
out
andb
lods
lahf
push
xchg
gs
outsb
sub
pusha
sub
dec
mov
gs
cmpb
mov
add
jo
add
pop
inc
sub
dec
mov
pop
test
mov
jge
sub
mov
jecxz
dec
dec
out
mov
pusha
pop
sub
mov
inc
mov
xor
hlt
add
cmp
outsl
cmp
loopne
inc
fsubs
mov
jg
js
sti
ss
aaa
aam
mov
divl
jns
out
sub
andb
sub
add
jo
out
and
mov
mov
inc
aam
add
orl
and
repz
pushf
xchg
or
pusha
inc
add
add
into
sbb
push
xchg
inc
mov
rolb
insb
test
movl
inc
push
loop
xchg
lods
pusha
inc
jo
mov
testb
inc
adc
stos
inc
inc
ss
cmp
pop
mov
pop
push
pusha
inc
ja
stos
pusha
mov
xchg
stc
lret
loope
mov
in
leave
repz
push
rcr
mov
jmp
adc
push
jns
sub
inc
jmp
or
inc
scas
addb
cmpl
andb
cltd
pop
fldenv
mov
mov
mov
jns
jmp
addr16
pusha
cltd
mov
mov
push
imul
pop
and
mov
mov
inc
pop
insb
mov
push
loopne
and
rcl
cmpsb
pusha
cmpb
jbe
and
add
inc
cli
iret
inc
cltd
je
leave
js
pop
pop
add
popf
sbb
pop
xor
jle
sbb
arpl
cli
inc
mov
rcrb
in
xchg
andb
xchg
add
inc
sub
mov
scas
pusha
pusha
in
jge
inc
sti
out
xor
mov
clc
dec
dec
or
dec
or
inc
neg
ja
int
xlat
xor
pop
jge
icebp
cmp
jnp
test
dec
sbb
push
das
lods
les
push
pop
leave
fstpt
add
jnp
jns
jb
in
cmp
sbb
inc
imul
cmpsl
mov
sub
and
das
cmc
sbbl
pusha
dec
inc
rorl
and
jecxz
mov
lahf
cwtl
lods
movsb
pusha
mov
mov
mov
shl
inc
shl
dec
mov
and
add
sub
push
outsl
jo
adc
pop
int3
in
add
xor
add
mov
hlt
cmp
pusha
inc
mov
pop
lods
shrl
repnz
rorl
mov
std
push
rolb
sarb
pop
pop
aam
jp
sub
sbb
mov
pop
xchg
inc
into
divl
cmp
test
add
pushaw
inc
clc
mov
jge
dec
aaa
popa
rcll
lods
rolb
mov
mov
daa
into
inc
les
andb
pop
adc
cmpsl
xchg
cmpsb
and
add
add
aam
fdiv
mov
sti
icebp
in
jcxz
pop
int
stos
repnz
mov
imul
test
pop
cmp
or
add
rolb
push
mov
repnz
and
outsb
ljmp
push
mov
cmp
test
and
pop
outsl
xor
shl
pushf
ret
pop
adc
and
andb
sbb
and
add
mov
dec
inc
fnstsw
jns
adc
cmpsb
and
xor
dec
imul
add
sub
loopne
int3
add
pusha
fstpt
ret
jbe
mov
loopne
incl
addb
jae
popf
cli
popf
xor
push
addb
sub
je
clc
sbb
push
add
mov
addr16
mov
rcrb
popa
lods
add
add
push
mov
out
pop
adcl
std
pop
aad
adc
js
inc
daa
loope
cmpsl
scas
rolb
lock
test
and
jbe
aad
and
push
outsb
xor
imul
pusha
pusha
jle
mov
fisttpl
mov
add
pop
notl
in
xor
test
pushf
loope
hlt
cmpl
fcoms
rolb
add
pop
rcr
test
ja
mov
mov
sub
and
xlat
mov
inc
xchg
cltd
fnsave
push
lods
pusha
inc
mov
fnstsw
add
push
call
push
sub
rolb
out
inc
push
fdivs
rcrb
jge
movl
pusha
xorb
cmpsl
jle
sahf
push
dec
xor
jbe
mov
lcall
addb
and
sub
cmp
pop
movhps
xchg
and
imul
xchg
fldl
inc
sbbb
dec
lods
adc
dec
cwtl
mov
xchg
and
adcb
jno
jmp
dec
into
cmpsb
loopne
push
fsubs
jne
inc
sarb
dec
add
and
xor
add
mov
imulb
and
rcrb
cwtl
inc
jg
andb
cltd
dec
imul
iret
in
aam
sbb
loopne
mov
pusha
rcrb
shlb
xorl
std
pop
jns
dec
test
jg
mov
addb
enter
test
dec
or
mov
sub
sub
cmp
inc
rolb
add
loopne
aaa
mov
pusha
inc
xor
jl
out
test
add
push
dec
mov
sarb
hlt
inc
data16
sarb
stos
and
mov
dec
ja
pop
in
sahf
and
add
test
inc
stos
enter
les
loopne
outsl
jb
rol
arpl
add
inc
outsb
rolb
or
add
shl
pop
xlat
lret
adc
inc
and
add
rcrb
iret
push
stos
lds
addb
in
aaa
pop
adc
js
and
cmpsb
pusha
loopne
push
shll
jns
std
movsb
pusha
inc
nop
xchg
mov
adc
dec
mov
xlat
fwait
jno
pop
push
ror
sbb
shlb
gs
inc
pop
outsl
pop
cltd
sub
xchg
int3
mov
mov
mov
mov
and
xchg
inc
mov
aam
test
rolb
pop
mov
fucomi
les
dec
pop
xchg
in
imul
inc
and
add
pop
lret
pop
and
loopne
aad
in
sbb
adc
and
cmp
jmp
loopne
pop
jmp
and
shlb
movsb
andb
add
iret
or
inc
loopne
mov
scas
and
sbb
pusha
add
push
loopne
inc
mov
lahf
push
pop
cwtl
push
push
fdivl
andps
and
cmp
jb
leave
out
pusha
rcrb
icebp
adc
pusha
mov
mov
ret
imul
cmpsl
mov
inc
mov
daa
inc
pop
xchg
rorb
inc
pushf
dec
adc
mov
lahf
stos
andb
divl
inc
inc
dec
test
xor
imul
test
fdivs
jno
adc
inc
inc
jbe
ss
cmp
push
sub
in
out
loopne
mov
shlb
and
pusha
andb
aad
pop
fidivrs
xchg
fidivl
mov
fs
mov
subl
in
xlat
rcrb
inc
shr
jae
push
xor
addb
lret
jo
inc
add
inc
test
je
lock
ror
movsb
pusha
xorb
lret
in
out
lods
int
ret
ljmp
pop
ffreep
mov
test
inc
andl
pusha
xor
cmpsl
lahf
push
in
lock
fimull
movb
pop
loopne
mov
loopne
lds
lcall
inc
mov
cwtl
mov
xchg
fistpll
jo
mov
adc
sti
in
push
sub
shl
mov
adc
add
inc
pop
xchg
mov
add
aam
cmp
jno
inc
push
rolb
inc
cmpsl
add
imul
sub
xchg
data16
mov
pop
push
ret
push
mov
rol
sub
sbb
mov
xchg
push
xorl
and
mulb
push
cmp
and
jns
ds
mov
arpl
pop
jg
sub
mov
sbb
fdivr
mov
pop
inc
cmp
push
and
shrl
jp
pushf
in
cmp
jp
sub
mov
mov
mov
inc
dec
jmp
xor
fs
loope
pop
mov
pusha
pusha
mov
pop
pop
aas
push
test
xor
push
add
fsubrl
call
jg
leave
std
je
lgs
inc
inc
test
andb
xor
pop
bound
mov
scas
loopne
repnz
inc
lret
mov
cli
test
stos
inc
mov
sub
loopne
sarb
shrb
aaa
outsl
adc
pop
cmp
icebp
push
pop
call
rolb
int3
js
icebp
cmp
sub
add
sub
and
adc
ljmp
push
cltd
mov
inc
arpl
mov
sahf
adc
inc
and
shrb
xchg
lret
notl
sbb
das
lret
insb
lods
loopne
or
rcr
dec
movsl
aam
repnz
and
mov
shrb
pop
or
fistl
ret
inc
mov
sub
and
jg
into
sbb
mov
int3
mov
aaa
inc
xor
pop
dec
xchg
pop
testb
mov
js
movsb
mov
addr16
and
jmp
xlat
into
sbb
cmc
addl
xchg
into
mov
sbb
cwtl
repz
cmp
into
loopne
cmc
xchg
aaa
or
jb
pusha
mov
add
decb
test
sahf
in
pusha
mov
sarb
out
loop
call
call
jns
mov
jge
stos
mov
jle
adc
icebp
mov
and
loopne
inc
sub
lea
add
adc
lds
sbb
loopne
sub
sbb
std
enter
and
ret
inc
lock
mov
pusha
shlb
outsl
nop
in
adc
sarl
addb
xor
rorl
popa
xor
cmpb
pop
outsb
cmpsb
mov
setbe
loopne
xchg
push
imul
mov
rolb
inc
xor
andb
paddusb
jmp
sbb
sahf
dec
adc
push
mov
xchg
mov
loopne
mov
inc
stos
and
scas
inc
sarb
jecxz
adc
and
loop
pusha
and
or
and
or
or
in
add
loopne
stos
pusha
andb
inc
enter
inc
add
xorb
je
mov
andb
add
mov
xchg
fisubrs
push
rcrl
dec
sbb
addb
idiv
jecxz
pop
add
cmp
jecxz
cli
add
add
xchg
pop
sub
rorb
inc
jb
lahf
out
int
daa
dec
call
movsl
hlt
sbb
dec
pop
xchg
cltd
call
fistl
clc
or
loopne
insl
in
lds
daa
mov
jnp
idiv
or
pusha
lcall
mov
xchg
add
loopne,pn
pop
enter
xchg
cmp
fistpll
pop
loop
adc
movsl
lret
add
inc
and
add
dec
jns
in
fs
sub
shl
out
vcmpfalse_osss
addr16
in
xlat
leave
push
push
pop
repz
adc
mov
inc
mov
es
and
jno
gs
push
cmp
sub
popa
sub
call
scas
shrl
pop
sub
dec
push
insb
outsl
and
mov
mov
inc
pop
sbb
mov
pop
hlt
mov
pop
sbb
iret
out
scas
loopne
cmpsb
andb
cmpl
test
mov
test
add
pop
cltd
jmp
frstor
aaa
cmp
adc
std
push
rolb
mulb
add
rclb
add
mov
jmp
loopne
into
loop
inc
mov
loopne
and
adc
inc
sub
and
mov
jle
and
and
push
sbb
inc
mov
pop
xchg
fs
inc
loop
dec
in
cli
mov
popf
movsl
stc
adc
xchg
sbb
mov
in
dec
mov
inc
daa
nop
mov
cmp
lcall
add
push
jbe
out
dec
outsb
cli
nop
ret
xchg
push
inc
sbb
xchg
in
push
add
enter
push
mov
xchg
jno
sub
mov
add
in
ret
cs
mov
add
inc
out
jb
pop
lds
sarb
jo
loopne
test
rclb
notl
loop
adc
aam
hlt
aas
mov
pushl
cli
dec
jecxz
mov
mov
and
ret
pusha
leave
xor
setle
sub
xor
push
fcomps
pop
ljmp
push
cltd
and
ret
loopne
sub
adcb
movl
adc
mov
imul
lock
call
xor
shlb
xlat
test
fwait
sub
andb
andb
and
ja
shr
push
pusha
add
loopne
push
inc
pusha
cmp
mov
mov
add
add
bound
pusha
loopne
fistpl
gs
sbb
inc
inc
jnp
mov
rclb
sahf
jnp
dec
inc
fwait
inc
mov
mov
adc
andb
fsts
rol
mov
inc
movsl
push
addb
in
cmp
inc
aad
push
or
int3
add
lcall
add
lret
sbbb
mov
ret
sub
inc
imul
xor
sbb
jge
test
in
adc
incb
mov
outsb
sub
sub
pusha
adc
push
out
int3
jbe
call
out
cmp
js
loopne
out
mov
int
cwtl
xchg
add
pusha
inc
dec
xor
loop
enter
mov
ljmp
inc
dec
inc
mov
test
sti
pop
aad
adc
mov
push
pusha
sbb
test
pusha
add
push
int
loopw
adc
out
icebp
or
cmpb
loopne
repz
add
inc
add
fsubrl
mov
lock
loopne
jl
mov
loopne
clts
rolb
mov
cli
jmp
mov
push
mov
and
push
push
dec
and
pop
adc
loopne
dec
nop
sub
cwtl
mov
addb
loopne
inc
jmp
xchg
sbb
jge
mov
enter
addb
shll
testb
pop
test
mov
jecxz
ret
add
rolb
pop
iret
push
enter
pop
pop
pop
xor
jmp
push
push
inc
mov
mov
insl
or
sbb
mov
insl
fcoml
mov
pusha
push
adc
sub
outsb
shrb
inc
sub
int
out
cmc
pusha
jle
int3
sti
je
repz
inc
xorl
inc
push
mov
mov
loopne
and
mov
sbb
ficoml
xchg
xchg
rclb
dec
jle
adc
test
mov
std
insb
stos
pusha
add
pop
mov
and
cld
xlat
not
pmaxub
loop
mov
and
inc
dec
lock
mov
leave
inc
call
out
jg
pop
out
inc
rcrl
dec
xchg
or
add
out
mov
pop
cmp
lret
jg
and
jmp
or
xor
loopne
mov
adc
ljmp
ss
lahf
bound
pop
stos
mov
mov
pusha
rcrb
je
mov
add
mov
inc
sbb
cmp
jae
add
add
mov
mov
inc
loopne
mov
addb
add
out
add
mov
ja
add
inc
add
addb
sti
cmp
fistl
jbe
sbb
in
ret
xor
mov
cltd
test
loopne
jle
test
cltd
aas
mov
jge
ss
shr
dec
inc
popf
lret
mov
and
sub
aam
dec
out
add
or
es
loopne
dec
movsl
and
add
jno
push
popa
aaa
nop
int
and
cld
fcompl
jb
fdivs
int
cmp
hlt
push
push
inc
pusha
and
mov
test
mov
and
inc
fneni(8087
sub
rorb
mov
and
andb
mov
rcrl
shll
std
iret
das
scas
andb
ret
pop
cmp
ret
decl
jo
pusha
mov
and
mov
jl
add
or
negb
and
and
std
inc
iret
loope
aad
dec
popf
scas
shlb
rolb
pusha
pusha
push
mov
mov
negl
int
mul
xsavec
mov
inc
add
mov
and
push
lret
mov
inc
and
add
shl
out
pop
mov
nop
fistl
mov
jmp
aam
lds
inc
jmp
jl
andb
shlb
out
mov
hlt
cltd
cmp
pusha
inc
test
cmp
add
add
inc
jmp
cwtl
adc
mov
pop
xchg
mov
mov
and
cltd
push
dec
mov
dec
outsb
mov
icebp
jg
push
pusha
insb
xor
sbb
add
and
xchg
in
nop
and
inc
inc
divl
push
add
lret
and
lcall
mov
loopne
mov
sub
add
sub
mov
test
add
and
sbbb
push
loopne
inc
stos
mov
mov
aaa
pop
out
out
inc
adc
mov
sub
addb
stc
jmp
inc
dec
adc
adc
xchg
popf
das
or
popf
lcall
dec
lods
inc
pusha
loope
rolb
xchg
push
push
andb
and
xchg
cmp
push
shll
adc
in
mov
mov
adcb
sub
loopne
and
add
in
cli
loopne
mov
out
mov
adc
pop
cmpsb
add
mov
and
sub
pop
fsts
mov
outsl
shrl
ss
lods
inc
add
sar
sahf
in
inc
and
and
nop
pop
pop
or
shlb
pushl
lret
rol
aaa
jne
mov
rolb
inc
sarb
mov
jns
dec
inc
mov
mov
inc
nop
cmp
cmpsl
in
jle
rol
imul
inc
aaa
push
or
ror
aaa
icebp
rcrl
sahf
mov
cwtl
mov
jnp
mov
rolb
nop
leave
push
dec
out
mov
int
std
push
sbb
nop
dec
imul
inc
lods
mov
inc
aad
ss
add
pop
sar
inc
fdivrp
or
setnp
pop
or
rcrl
mov
andb
add
dec
lods
pusha
inc
cmpsb
and
xor
sub
mov
add
mov
les
add
div
js
mov
ret
rolb
pop
mov
out
cmp
jmp
mov
hlt
ficomps
sub
inc
out
loopne
add
out
xchg
cmpsb
andb
jl
sbb
push
sbb
gs
jo
cmp
addb
loopne
or
repnz
stc
jne
aad
mov
inc
lods
xor
std
cwtl
adc
inc
mov
iret
xchg
lfs
out
pop
outsb
stos
sarl
pop
dec
imul
xlat
lea
inc
cmp
cwtl
int
sub
rclb
jle
push
jnp
andb
mov
fs
adc
add
test
loopne
movsl
push
arpl
jp
dec
lods
mov
add
shlb
fidivrl
addr16
xchg
enter
add
mov
inc
push
imul
std
xchg
ds
popf
push
clc
bound
or
add
and
sti
out
lock
mov
adc
and
and
and
jecxz
and
inc
pop
jo
pop
push
pop
sub
cmpb
xchg
dec
test
add
inc
les
out
fistps
jne
addr16
ss
scas
inc
mov
pop
leave
mov
and
pop
add
pusha
mov
jl
addb
imul
and
xlat
fs
inc
mov
loopne
loop
mov
popf
add
orb
loopne
cltd
xor
mov
mov
test
andb
les
sub
pop
dec
mov
jae
addb
dec
out
or
addr16
inc
inc
xchg
loope
jl
or
mov
sbb
addb
pop
mov
nop
incl
sbb
mov
pusha
jbe
sub
rcrb
das
add
jle
aam
movsl
daa
mov
cmp
jb
sbb
fsubrl
mov
mov
pusha
add
dec
loop
clc
sti
fs
pop
cli
pop
adc
push
repnz
adc
loop
jo
test
sarb
in
in
and
or
adc
xchg
in
lret
cmpsb
loopne
inc
xchg
loope
mov
push
cmovbe
sbb
cmp
jb
sub
push
std
mov
sbb
pop
repz
sub
mov
mov
and
lds
rol
mov
enter
dec
dec
or
jnp
repnz
dec
out
and
cmpl
cmpb
iret
dec
sbb
dec
insl
shr
andb
add
xchg
mov
daa
adc
push
lahf
sbb
pop
loop
test
loopne
jl
outsb
xor
and
lds
loope
adc
add
fs
movsl
mov
adc
loope
imul
mov
dec
xchg
pslld
shlb
subb
pusha
cmp
mov
push
jns
or
jmp
mov
cmp
add
jle
lret
or
jp
outsl
out
xchg
lds
mov
xchg
or
nop
xchg
mov
jg
jmp
mov
add
mov
inc
loopne
int
sub
xor
xchg
or
dec
in
inc
mov
or
lahf
addl
ror
movsb
pusha
add
pusha
xchg
pop
mov
and
mov
out
and
inc
hlt
add
sbb
and
loopne
mov
dec
xchg
inc
movl
cmp
lds
movsl
fildl
and
push
push
enter
out
push
sti
and
jbe
scas
andb
leave
nop
mov
xor
ficoml
loopne
ror
pop
push
inc
adc
jne
and
dec
pop
sar
mov
and
sahf
mov
mov
push
cmp
into
cwtl
xchg
push
push
int3
loopne
negb
jl
xchg
je
mov
mov
inc
push
pusha
inc
pop
xor
aad
push
mov
add
mov
leave
call
push
test
loop
movsl
add
incl
and
push
add
hlt
lret
in
cs
sbb
mov
mov
jno
mov
add
mov
and
push
inc
inc
cmp
lods
rolb
xchg
ret
scas
inc
loopne
pusha
rolb
sub
mov
into
outsl
adc
lret
push
in
aad
pusha
add
pusha
and
mov
fidivrl
stos
loopne
adc
addr16
pusha
jp
xchg
sbb
loopne
mov
out
pop
rcrl
mov
push
mov
add
push
shl
and
xor
aam
push
mov
fwait
push
imul
mov
push
cmp
xchg
inc
insl
jo
loopne
loopne
je
push
cld
cli
xchg
sbb
sbb
mov
xor
cli
arpl
les
fwait
sbb
loopne
movsb
add
inc
dec
popw
xor
rolb
mov
pop
nop
pop
imul
adc
inc
adc
inc
jbe
andb
insb
popa
jb
xor
movsb
loopne
loopne
mov
dec
or
rolb
loopne
jg
pop
int
and
adc
sbb
adc
cld
mov
sbbb
in
sub
cmc
repz
rcrb
and
xlat
in
sub
xor
add
frstor
dec
nop
ja
not
xchg
mov
fs
mov
dec
push
pusha
pusha
andl
imul
xor
add
les
inc
sbb
leave
aas
jbe
push
push
and
add
or
pusha
stc
in
and
mov
mov
jo
push
or
add
ret
stos
rol
push
xchg
scas
andb
mov
psraw
xchg
mov
das
imul
add
cmp
dec
cltd
test
pusha
fistpl
bound
aad
mov
in
lahf
lcall
inc
mov
roll
mov
mov
jne
loopne
repz
jbe
mov
int3
loopne
call
addb
ss
movsl
cmpsb
loopne
popa
mov
repnz
inc
lods
and
cmp
lcall
add
and
jp
leave
pop
jae
das
leave
cmp
movsb
andb
cmc
data16
inc
mov
pop
ljmp
insb
push
sub
and
mov
and
jns
pop
js
xchg
sub
lcall
incl
and
xchg
fdivrs
jns
and
loope
scas
sub
mov
cltd
mov
sbb
inc
jne
outsl
in
mov
test
hlt
loope
and
pushf
jnp
pop
jne
and
mov
pop
aam
dec
pop
fdivrl
xchg
xor
clc
push
cltd
jle
and
adc
dec
scas
add
hlt
inc
pop
push
imul
jbe
jmp
push
mov
hlt
outsb
idiv
insl
mov
testl
or
ret
repz
mov
xchg
inc
jo
and
sbb
rcll
push
std
outsb
inc
adc
mov
add
mov
push
and
test
loopne
andb
xchg
int
testl
xchg
mov
aad
mov
addb
adc
mov
dec
imul
pop
and
dec
jns
or
and
dec
out
inc
outsl
cli
imul
ds
adc
dec
jnp
andb
mov
and
mov
mov
bound
cmp
and
insl
sbb
xchg
fs
pop
out
mov
loopne
fcmovu
enter
pusha
inc
out
frstor
fiadds
fbld
sbb
inc
mov
pusha
pusha
leave
jae
jae
stos
aaa
sbb
loopne
sti
add
sarb
add
loopne
cmp
mov
and
mov
or
test
inc
fcoml
add
or
call
push
push
pusha
loopne
and
xchg
loopne
inc
and
sbb
jg
or
mov
push
push
cmpsb
inc
xorb
adc
imul
xchg
pusha
call
or
std
and
cmpsb
add
pop
popf
or
testl
cmp
pushf
mov
mov
push
in
and
xor
jle
inc
mov
popf
dec
push
push
pusha
rclb
cmc
push
fimuls
cmp
and
mov
popf
lods
mov
sahf
icebp
mov
dec
jne
ds
jl
sub
and
rclb
scas
pusha
and
in
mov
sarb
dec
adc
popf
pusha
dec
jns
jl
loopne
pop
inc
outsl
cmp
hlt
mov
andb
arpl
sbb
add
jmp
js
dec
push
mov
addr16
add
mov
leave
mov
loopne
ret
out
outsl
sbb
mov
loopne
push
pusha
shr
imul
mov
dec
or
outsb
cmc
mov
negb
in
dec
inc
movsl
sbb
pop
shr
and
pop
pop
test
loopne
add
jo
test
fcompl
jecxz
add
jecxz
loope
push
push
addb
dec
fisubl
jg
xor
out
add
add
mov
mov
dec
loop
cmp
iret
push
sbb
rol
les
push
jnp
shlb
push
add
movb
cli
data16
cmp
push
cmpsl
mov
add
adc
out
jns
lret
push
loopne
jne
add
push
jo
and
xor
test
inc
loopne
fsubr
xchg
imul
out
out
in
inc
loopne
jg
call
lcall
xor
shll
mov
mov
or
adc
sbb
xor
roll
mov
pusha
mov
ja
jle
jp
sub
icebp
jae
push
mov
inc
dec
ljmp
xor
ret
rolb
cwtl
mov
inc
push
repnz
ljmp
ret
hlt
mov
xchg
rorb
loope
sbb
loop
add
ficompl
mov
push
pop
icebp
inc
jbe
and
gs
jno
push
or
test
dec
lret
inc
dec
dec
sub
loopne
mov
push
aam
lahf
add
pusha
and
loopne
or
fldl
pop
divl
es
add
lods
popa
stc
and
mov
sub
mov
rcll
sub
jnp
or
inc
jae
pusha
sarb
sbb
pusha
pusha
iret
or
out
jmp
push
mov
dec
xor
dec
mov
fisubl
lret
and
dec
das
mov
loopne
jnp
pusha
inc
int3
in
jnp
mov
mov
mov
push
push
call
cs
sub
jno
pop
outsb
cmp
mov
shlb
xor
cs
and
and
inc
and
jb
div
jp
sbb
add
fsubr
mov
jl
cs
inc
mov
pusha
out
lock
sarb
and
and
andb
inc
gs
inc
jb
push
pop
xor
jae
cmpsb
and
xchg
cmpb
jns
shl
add
jbe
sar
jo
inc
push
in
mov
gs
inc
cli
shlb
pop
lret
rol
rolb
rcl
sbb
pusha
sarb
data16
adc
pop
push
xchg
sbb
push
add
shl
inc
cs
add
jae
mov
xchg
lret
insl
mov
xor
cmp
xor
int
rolb
jl
and
mov
icebp
sbb
imulb
repnz
jo
test
shrb
loopne
jb
dec
dec
add
and
sub
mov
scas
and
ret
filds
xchg
add
jne
cmc
clc
and
pop
cld
push
and
shlb
mov
jne
and
xor
stos
xchg
mov
xor
enter
push
push
cmpsb
inc
mov
pusha
mov
cmp
push
push
add
sbbb
mov
aas
js
xchg
jge
and
ror
jno
inc
std
sbb
pusha
and
jnp
mov
stos
addb
pusha
push
jo
mov
inc
pusha
sub
or
fists
mov
lods
adc
xor
cmp
stos
shlb
fstl
push
mov
daa
fidivrl
dec
test
add
add
pop
lods
pusha
inc
fists
in
or
add
jb
xchg
mov
or
xor
in
mov
addr16
mov
roll
cwtl
bound
pop
jecxz
add
dec
popa
add
dec
pop
cld
aad
adc
repnz
mov
xchg
dec
xchg
jecxz
or
and
or
add
cli
mov
inc
repz
or
pusha
ljmp
and
movsl
sub
loopne
dec
in
push
fstpt
inc
push
loopne
lret
and
inc
nop
lret
enter
or
xchg
testb
and
sbb
and
shlb
push
mov
icebp
jno
mov
cmp
and
dec
out
inc
cld
lock
mov
mov
mov
or
mov
push
enter
or
mov
mov
mov
add
inc
xchg
test
dec
push
data16
cwtl
xchg
rcr
stos
pop
and
sbbb
clc
sbb
add
repz
loopne
cmpsb
rolb
pushf
es
mov
pop
pop
jne
notb
and
pusha
and
adc
and
je
jmp
xor
or
adcb
stos
call
stc
xchg
int3
mov
adc
push
and
jecxz
leave
or
std
sub
shlb
addb
out
jmp
inc
fldl
les
idivb
popf
mov
push
pop
mov
and
fnsave
aam
fadds
mov
pushl
rol
cmpsl
fucom
jmp
pop
inc
xor
andl
mov
stc
or
inc
lock
orb
inc
pusha
sbb
sub
add
sub
out
enter
push
jl
mov
or
xchg
out
sti
in
dec
lret
sub
mov
loopne
int3
aad
add
or
loopne
inc
lods
mov
test
pop
lock
adcb
adc
inc
jo
je
inc
imul
mov
mov
mov
push
pop
inc
enter
out
out
sar
and
inc
popf
jns
push
mov
leave
mov
nop
xchg
sti
push
mov
jp
and
pusha
loopne
xor
and
fisttps
inc
or
mov
add
xchg
adc
sub
cmp
mov
xchg
shlb
rcr
test
xor
jl
jmp
inc
inc
enter
sarl
cmp
out
cltd
mov
icebp
imul
addb
fsub
push
call
mov
mov
xchg
neg
xlat
mov
cwtl
pop
dec
lea
inc
sbb
addb
or
add
mov
dec
ja
daa
fiaddl
pop
pop
aaa
pop
pop
mov
jae
lcall
push
add
sbb
iret
test
dec
mov
pusha
inc
cld
fcmovb
adc
dec
fimull
push
and
ss
ret
out
std
neg
xchg
pop
push
jle
push
sub
pop
xchg
popa
pop
inc
test
mov
clc
and
mov
cmp
mov
shlb
mov
pop
in
test
out
or
mov
inc
mov
popf
or
rol
imul
mov
jecxz,pt
and
jecxz
inc
rclb
mov
mov
mov
cmp
jbe
or
insb
jmp
pusha
xorb
push
push
jecxz
jmp
push
loope
movsl
lahf
xchg
push
mov
and
mov
pusha
pop
fdivrp
or
rcl
adc
in
test
add
mov
push
and
dec
fsubrs
pushf
negb
mov
sbbl
and
mov
bswap
push
mov
or
decb
dec
adc
push
jmp
stos
xchg
dec
sub
loopne
loopne
jnp
jno
aad
pusha
inc
sub
sub
sbbb
fsts
pusha
subb
add
inc
adcb
fbld
loopne
popa
leave
stos
add
and
inc
adc
xchg
divb
popa
dec
fimuls
and
loopne
into
pop
ja
movsb
andb
js
sub
mov
push
fwait
jo
push
andb
push
andb
and
or
rol
push
xchg
pop
stc
xor
sub
lds
push
pop
or
jg
andb
lret
mov
out
push
idivb
iret
ss
dec
scas
inc
pusha
jnp
inc
test
ror
push
or
mov
hlt
inc
movsl
roll
inc
fcompl
mov
fucomp
out
mov
cmc
pop
aaa
stos
or
out
fs
xor
data16
das
gs
shrl
mov
inc
mov
imul
xchg
mov
add
sbb
dec
dec
out
sub
int
andb
mov
pusha
lcall
pop
mov
mov
jno
inc
xchg
cmp
insl
push
fstpt
pusha
push
ss
add
out
mov
out
call
pop
add
mov
jmp
push
jno
sub
adc
pusha
cmpb
and
movsb
inc
and
sbb
inc
xchg
sarl
xor
loopne
mov
mov
adc
inc
push
push
clc
sub
inc
imul
loopne
shlb
adc
icebp
and
mov
inc
pusha
loop
add
pop
lahf
sbb
xchg
aas
cwtl
cmp
inc
lret
dec
push
push
and
add
xor
add
mov
push
add
arpl
in
lcall
add
mov
push
and
fstpl
mov
add
xchg
fcmovbe
ss
adc
loopew
push
repz
rcr
and
mov
mov
cltd
bound
sbb
mov
and
ljmp
pop
and
mov
pusha
mov
mov
aaa
sti
mov
subb
movups
adc
rcrb
push
and
gs
add
shlb
cmpsl
jl
inc
mov
dec
cmp
jo
fstps
add
mov
pop
jle
cmp
sub
gs
pusha
pusha
xor
add
insl
movsb
add
xor
pusha
inc
pop
adc
aad
pop
adc
mov
cli
pusha
inc
sub
xchg
decl
and
lahf
and
movsl
pop
mov
mov
loopne
xchg
fcoml
xor
sub
and
into
mov
add
dec
notb
cmp
inc
sbb
mov
add
mov
loopne
outsl
fldenv
cmc
inc
xchg
arpl
sub
pusha
mov
push
xor
lahf
dec
push
xor
sub
icebp
out
push
into
cmc
das
jne
and
jg
xor
cmp
push
das
nop
push
mov
add
inc
inc
int
test
loopne
add
inc
sub
xchg
mov
jp
cmp
and
or
sti
jo
cs
inc
inc
cs
andb
add
inc
sbb
dec
ret
xchg
insl
inc
pop
adc
inc
lods
rcll
cwtl
test
mov
and
loopne
inc
out
dec
push
repnz
jns
inc
ret
lcall
mov
pop
xchg
pop
bound
fcoms
ja
jo
jns
adc
inc
sub
mov
pop
sti
xchg
xor
mov
mov
sub
ds
mov
loopne
shl
jmp
mov
addb
mov
data16
sub
add
fcmovbe
xor
xor
leave
dec
out
push
xor
loope
xchg
aas
movsb
and
cmpsl
cmp
cmp
xor
loopne
cmpsl
in
lret
xchg
jns
inc
pop
inc
lea
dec
pop
jle
mov
pusha
add
in
cli
and
mov
and
call
jb
scas
or
push
sbb
xchg
les
icebp
fwait
xchg
lods
add
adc
push
pop
dec
lods
das
mov
loopne
roll
andb
sub
inc
imul
jmp
mov
push
or
pusha
mov
clc
loop
aam
add
stos
mov
adc
loopne
fisttpl
ja
mov
xchg
and
cltd
das
out
mov
test
jne
and
lcall
call
cmp
push
mov
inc
mov
sti
dec
add
andb
cmpsl
mov
and
or
sbb
or
movsl
popl
dec
mov
mov
loopne
jge
sub
and
add
rolb
add
and
inc
not
inc
imul
dec
cmp
icebp
scas
and
sub
add
in
dec
sbb
int
or
inc
add
mov
jecxz
jmp
insl
jae
out
enter
inc
stc
jl
pusha
pusha
cs
pusha
outsl
sbb
les
push
repnz
in
jne
inc
clc
inc
inc
int
xor
shlb
subl
mov
daa
pop
inc
sbb
pop
mov
lcall
clc
hlt
cmp
jo
adc
inc
mov
mov
add
pushf
mov
and
mov
cmp
xor
sbb
cltd
jecxz
push
cmp
mov
aad
addb
mov
push
dec
pop
addr16
test
and
jl
and
push
in
ds
jg
inc
loopne
dec
cld
int
fprem1
xlat
sbb
mov
xor
pusha
and
rolb
repz
pop
aaa
ret
lock
xor
pusha
adc
sti
stos
mov
ret
mov
or
loopne
rol
daa
xor
std
dec
jle
jge,pt
aad
data16
int
adc
dec
adc
shlb
shl
stos
andb
stc
jbe
inc
loopne,pn
cmp
cmp
xor
mov
shll
inc
or
inc
add
jo
jns
bound
xchg
xchg
outsl
xchg
movb
and
push
inc
mov
push
xchg
in
pusha
loopne
loopne
mov
sub
and
xchg
or
and
shlb
fnstsw
pop
push
add
add
xchg
in
std
cld
xchg
pushf
jle
mov
add
push
adc
out
jne
andb
mov
shr
ret
add
call
jmp
int
and
and
fs
pop
loopne
ret
sarl
mov
rclb
bnd
loopne
les
cltd
bound
mov
inc
pop
adc
je
iret
test
fsubr
xchg
addl
mov
and
rorb
sbb
imul
int
andb
jge
inc
cld
imul
dec
and
mov
mov
inc
call
cmp
pusha
loopne
std
rol
adc
inc
add
push
testb
js
lcall
jnp
aaa
cmp
pusha
add
mov
shll
add
jae
loope
mov
cmp
cli
inc
mov
insl
cmp
dec
xchg
call
dec
xchg
scas
addb
test
subb
jns
jl
cli
mov
cli
push
gs
jl
push
nop
add
lcall
addr16
aad
lret
cltd
inc
xchg
out
rep
popf
mov
movb
cmpb
pusha
adc
bound
fstpl
divb
out
pop
mov
pop
cltd
ror
test
xor
mov
fdivr
test
mov
and
mov
xrelease
orb
in
mov
or
push
mov
sbb
cmp
mov
shrl
dec
fbstp
inc
pop
add
jl
lds
add
and
sub
lret
xor
or
fimull
sbb
fwait
mov
push
mov
lea
mov
adc
jp
nop
xor
pusha
xorb
pusha
xchg
mov
shlb
and
pusha
push
inc
add
add
cmp
es
mov
inc
out
sub
dec
sub
inc
add
imul
int
and
hlt
in
imul
in
fisttpl
cli
lea
loopne
fwait
push
inc
or
inc
sti
adc
mov
and
fcmove
pop
dec
mov
hlt
jge
mov
add
dec
xor
xchg
xorl
sbb
xor
xor
xchg
mov
push
pop
andb
jbe
and
and
or
popl
mov
ret
jge
pusha
inc
scas
rolb
push
cltd
xor
sub
xor
jmp
scas
addb
cltd
movsl
cs
adc
add
clc
dec
cwtl
icebp
mov
cmp
pop
shl
lret
and
leave
out
addb
pop
mov
mov
iret
xchg
and
shlb
xor
pusha
subb
push
dec
dec
test
cli
lods
mov
cmp
loope
add
cmpb
call
pop
push
shl
push
push
loopne
lods
andb
shrb
sub
cwtl
mov
sbb
cmpsl
sahf
xchg
mov
mov
leave
pop
test
add
or
add
clc
fnstcw
mov
clc
lea
std
mov
pop
mov
xor
push
aam
and
imulb
pop
lcall
inc
ss
insb
sbb
inc
sbb
addr16
addb
mov
or
ret
stos
and
sbb
and
pop
xor
js
stc
hlt
stos
inc
inc
popf
dec
bound
and
rcll
int
inc
test
cmc
dec
rorb
and
lret
jbe
in
inc
mov
rolb
pop
leave
pop
in
lret
scas
loopne
sub
add
xor
and
add
add
lcall
mov
mov
and
add
repz
shlb
inc
xor
fwait
mov
test
push
jecxz
mov
inc
jbe
cmp
bound
inc
inc
sub
and
shl
pusha
mov
cmp
add
mov
repz
xorb
inc
add
in
int3
std
scas
mov
fldl
adc
push
bound
rolb
mov
push
push
mov
shl
lds
loope
xchg
jns
sbb
cmp
add
in
xlat
inc
inc
in
je
and
dec
jnp
mov
inc
cmp
andb
aad
pusha
and
or
inc
ss
and
addb
inc
add
cmp
inc
fidivrl
sbb
dec
lea
mov
lret
or
mov
dec
rclb
fs
loopne,pn
fimull
pusha
inc
xor
cli
ret
cltd
push
arpl
sub
and
push
mov
add
addr16
sbb
in
ficoms
mov
sub
xchg
jmp
or
push
cwtl
aas
cmpsb
and
add
pop
out
mov
mov
andb
ja
xchg
imul
andb
int3
lods
loopne
and
loopne
dec
xor
mov
inc
mov
loope
sbb
push
sahf
mov
jl
test
nop
dec
cmpsl
mov
add
push
add
inc
push
xchg
iret
pop
std
add
or
arpl
imulb
dec
jae
and
xchg
nop
sub
or
sub
shl
xor
ljmp
addb
rolb
pop
mov
test
add
cmp
mov
mov
lods
dec
out
popa
stos
add
cmpsb
add
sub
xor
push
lret
push
inc
pusha
into
inc
add
shlb
inc
cmpb
aaa
push
fstl
cmpsl
mov
lret
dec
ljmp
pusha
cmp
inc
mov
lods
shlb
inc
push
ret
cmp
cmc
aas
and
mov
mov
ss
popf
stc
pop
test
and
ror
and
orb
notl
clc
push
inc
das
sti
addr16
push
push
mov
imul
addb
cmp
or
xchg
movsl
stos
or
push
ds
sarb
pop
subl
int
rcll
add
mov
les
inc
divb
xchg
add
add
cmp
shlb
andb
xchg
lret
test
cmpsb
mov
xchg
outsb
and
mov
jg
push
mov
stc
pop
std
ds
xchg
and
mov
push
or
add
fstpl
int3
xchg
dec
std
adc
cmp
arpl
stos
rolb
loopne
pop
loope
push
sbb
arpl
imul
ret
mov
inc
and
sub
je
loope
inc
xor
pusha
mov
pusha
aaa
push
xchg
jg
dec
movsl
movsl
inc
test
nop
rcrl
loopne
push
pop
cmpsb
add
jle
mov
inc
cmp
add
loopne
in
xor
fstp
cli
mov
push
add
pusha
cmpb
jno
sbb
push
sub
shrb
orb
rcr
mov
jo
shll
jnp
adc
push
clc
iret
out
aaa
mul
push
push
sbb
inc
repnz
call
xchg
inc
jne
and
loopne
mov
and
aad
loope
call
mov
and
and
mov
fildl
mov
fcom
push
cmpsb
mov
mov
push
mov
loopne
jo
add
add
andb
sti
dec
imull
das
cmp
or
shrl
fadds
or
sub
insl
pop
inc
pop
sbb
sub
mov
fnsave
fsubl
fistpll
aad
add
dec
push
lock
jle
mov
insl
in
cmp
lods
mov
sub
jp
into
xchg
iret
rcll
int
roll
dec
insb
mov
sub
loopne
fcoml
and
ss
and
dec
add
inc
enter
dec
xchg
add
inc
repnz
test
and
add
mov
and
inc
loopne
xchg
popa
fcompp
jge
ja
loopne
dec
jbe
pop
scas
xor
andb
stos
add
xchg
enter
out
mov
lods
loopne
das
sahf
popf
sahf
adc
rcrl
pusha
inc
mov
movsl
inc
mov
shl
aaa
notl
jb
jnp
in
push
stos
addb
jle
rcr
and
xchg
pusha
dec
jecxz
lahf
mov
shl
mov
and
aas
xor
dec
fldt
adc
xchg
mov
in
sbb
push
stc
lea
outsl
sti
test
and
mov
addb
call
out
movsl
mov
dec
jnp
lcall
js
insb
mov
subb
push
and
test
inc
mov
xchg
pop
cmp
pop
push
mov
clc
lcall
dec
push
or
fcompl
mov
pusha
ficompl
aaa
xor
sub
dec
mov
inc
daa
std
lret
pop
test
pusha
sbb
rcrl
imul
in
add
xor
outsl
jmp
and
add
push
shrl
cmp
std
stos
dec
cli
sub
mov
gs
repnz
popa
adc
jecxz
dec
inc
cmp
fcoms
sbb
in
fstpt
inc
test
cmpb
mov
test
fdivp
pushf
icebp
nop
inc
fmul
cltd
mov
add
jo
shlb
ror
lods
lret
dec
scas
add
xchg
mov
push
pop
pop
pop
push
pop
popa
xchg
aad
and
xor
sbb
call
movsl
mov
ret
insb
jle
xchg
popa
fisubrl
aad
pop
jnp
push
lods
mov
push
add
lds
sub
jl
cmpsl
inc
jnp
pop
rcrl
test
inc
imul
sub
movsb
addb
pushf
insl
add
jg
and
mov
lods
addb
and
sub
out
and
subb
add
out
jne
lods
sbb
andb
pop
movsb
and
mov
push
fwait
lahf
aam
jb
add
mov
cmp
jle
movsb
inc
adcb
jns
push
xor
sub
loopne
inc
ljmp
aaa
sbb
mov
sub
pusha
sub
stos
shl
cmp
xchg
rorb
shlb
or
sbb
mov
shl
adc
inc
jl
xchg
pop
mov
mov
push
fdiv
or
and
das
fsubrs
call
adc
add
push
xchg
aaa
add
xor
xchg
out
sbb
or
inc
pushf
adc
push
push
adc
fcmovnu
lahf
cli
lods
pusha
cmp
mov
sahf
out
mov
inc
xchg
pop
gs
stos
das
clc
jb
lret
movsb
and
sub
pop
aaa
cmp
lds
loope
pop
jne
xchg
jge
push
and
mov
rol
sbb
inc
ds
jns
push
pop
push
inc
mov
push
and
ja
movsl
pusha
xchg
gs
or
subb
test
dec
push
mov
fs
int3
jo
mov
iret
add
outsb
push
push
add
movsb
and
dec
sbb
pop
movl
incb
add
jle
mov
pop
dec
repz
xor
inc
inc
mov
stos
inc
mov
testb
movsl
test
add
push
cmpsb
inc
add
and
outsb
outsb
push
xor
in
and
cmp
xor
pop
add
pusha
pop
outsl
icebp
dec
dec
inc
cwtl
xchg
add
add
rolb
add
push
ja
loopne
add
jno
cmp
sbb
inc
jl
add
lret
icebp
movsl
out
movsl
mov
out
jbe
insl
aas
push
mov
or
rcrb
jnp
adc
add
sbb
loopne
jne
jl
xor
int3
pop
or
and
loopne
xor
addb
or
rolb
xor
mov
ljmp
arpl
jb
hlt
dec
repz
mov
xchg
jecxz
popa
outsl
fucomi
loopne,pn
mov
stos
jmp
xor
xorl
fiadds
or
sbb
movsb
pusha
and
pusha
loopne
nop
in
lcall
test
lahf
test
add
dec
fstps
xchg
push
dec
cmc
cld
xor
add
mov
insl
shlb
pop
shlb
pusha
jne
push
and
jb
lea
or
mov
lahf
xchg
jo
xchg
inc
scas
mov
inc
dec
in
add
imull
mov
push
add
and
loopne
xchg
pop
mov
jnp
int
bnd
mov
mov
mov
pusha
shlb
ds
or
dec
or
inc
mov
jp
je
fcoml
xchg
sub
xor
aad
std
sub
dec
inc
mov
cmpsl
lcall
jno
movsb
mov
in
in
cld
push
add
xchg
stc
sti
cmp
and
adc
sahf
jno
add
mov
rolb
std
push
mov
lahf
in
mov
xchg
sti
pusha
add
and
roll
mov
andb
sbb
xchg
andb
jns
add
and
pop
stos
pusha
inc
sbb
sarb
sti
repnz
xlat
adc
xchg
out
shl
cmp
cld
leave
je
cmc
adc
sbbl
fdivrs
imul
nop
sti
pop
push
xchg
insl
imul
cli
lcall
and
loopne
sbb
and
add
std
pop
adc
aas
sub
rolb
mov
es
jl
mov
fs
pusha
lcall
mov
push
ja
push
les
lock
mov
cmpsb
mov
dec
icebp
cwtl
enter
cmp
movsl
mov
fldl
pop
xor
inc
aaa
dec
pusha
push
shl
stc
pop
pusha
rorl
std
std
mov
jmp
mov
adc
jo
mov
rorl
push
dec
push
pop
fs
mov
test
adc
add
mov
shlb
addr16
mov
xchg
lahf
mov
pop
xor
xor
pop
mov
loopne
jo
call
lock
jae
and
fwait
sbb
cli
adc
cmp
adc
mov
das
dec
and
add
imul
mov
cmc
cmpsb
add
fbstp
and
loopne
std
cld
call
dec
cltd
pop
lcall
push
cmp
sbb
push
and
js
sub
scas
xchg
addr16
in
cmp
add
add
push
inc
andb
inc
gs
and
fildll
rol
push
mov
pusha
shlb
pop
or
pusha
lods
push
mov
std
or
loopne
out
add
popf
out
dec
test
pusha
push
or
or
pusha
add
jmp
pop
fidivl
je
inc
and
fdivs
negb
andb
jmp
pop
mov
jnp
add
mov
cmp
pusha
mov
fdivrs
outsb
xor
inc
mov
daa
dec
add
loopne
leave
sbb
cmp
jecxz
sbb
mov
jl
sub
rcl
sbb
loopne
pusha
and
cwtl
dec
push
jnp
andb
add
mov
scas
test
loopne
and
dec
adc
or
sbb
pusha
rcrb
verr
add
loopne
mov
push
pop
dec
mov
ficomps
ficomps
loopne
aas
inc
lcall
filds
loop
loopne
inc
mov
daa
inc
xor
pop
dec
xor
mov
ja
fucomi
data16
push
repz
enter
push
out
push
and
pusha
movb
ss
icebp
mov
add
loopne
inc
pusha
pusha
mov
dec
inc
ret
hlt
fisubl
gs
or
rorb
cltd
xor
call
add
inc
ds
stos
mov
cs
and
dec
dec
scas
inc
add
negb
in
mov
adc
jo
les
dec
stos
out
add
inc
test
inc
mov
sarl
mov
xor
stc
push
push
or
shrl
out
mov
or
andb
loopne
jle
mov
jmp
xor
idivb
std
xor
lea
fidivs
mov
mov
mov
rorb
out
loope
lods
sub
and
xchg
sahf
sbb
fcomps
push
addb
jg
flds
adc
and
pop
dec
sub
fwait
cmp
stos
and
loopne
pop
imul
fisubs
ss
cwtl
adc
lret
xchg
jl
dec
andb
lret
jmp
shl
roll
loopne
dec
jo
cmp
mov
rcrb
push
adc
and
repz
andb
out
pusha
mov
add
sbb
adc
call
icebp
shlb
addb
pushl
pop
jne
pop
and
mov
lods
pop
ret
mov
fwait
cmp
pop
dec
mov
loopne
loopne
mov
scas
inc
das
mov
sub
popf
cmp
sbb
dec
les
push
push
push
ja
pop
dec
faddl
rolb
cmp
dec
daa
cmpsb
rolb
loopne
js
stos
loopne
xor
lret
adc
push
clc
cmpsl
cmpsb
add
ljmp
pusha
mov
cmovl
leave
inc
mov
popa
pop
cmp
es
inc
repnz
jmp
push
and
mov
jae
dec
scas
jmp
jns
outsb
mov
popa
idivb
rol
or
pop
jmp
inc
popf
stc
shlb
xor
stos
sbb
loopne
ficompl
mov
mov
push
fs
sub
sarb
and
inc
orb
test
adc
inc
mov
mov
scas
add
dec
out
mov
cld
inc
addb
outsb
jg
xchg
mov
inc
loopne
shll
dec
sti
dec
repz
out
inc
push
sbb
lret
fistpll
sbb
repnz
divb
pusha
add
adc
mov
lret
jmp
lret
jp
mov
xchg
sub
shlb
das
aad
jno
add
rcrb
call
loopne
and
repnz
lahf
decb
jns
test
jno
fldcw
inc
shlb
addb
mov
scas
loopne
cmpsb
loopne
push
call
stos
xor
pusha
cmp
and
fucomp
int3
outsb
cmp
sub
mov
mov
rorb
cpuid
add
xor
cmpsb
inc
inc
scas
aas
or
cmp
loopne
mov
scas
in
pop
jb
lret
mov
pop
and
add
out
out
lahf
adc
movsb
loopne
incl
sub
inc
in
xchg
divl
and
loopne
js
fs
add
pop
cmpsb
mov
cmpsb
shlb
mov
ret
std
lcall
and
mov
enter
les
dec
xor
loopne
sub
add
les
and
aaa
test
addb
inc
rcll
fldl
sub
inc
mov
dec
test
push
test
mov
loopne
mov
jl
in
pop
fwait
daa
fiadds
imul
mov
mov
mov
pop
andb
loopne
push
push
sbb
inc
mov
fcomip
daa
push
lock
or
shlb
mov
jl
add
mov
jb
sarb
arpl
jge
outsb
aaa
and
addb
and
and
loope
mov
hlt
add
dec
lods
cli
push
pop
pop
jecxz
stos
and
fadd
sub
mov
rcl
mov
xor
shrb
mov
dec
lods
shlb
xor
mov
sbb
lds
push
scas
xor
pop
movsl
shll
cld
and
loopne
les
dec
or
push
push
dec
ret
push
jp
stos
mov
es
sti
add
inc
mov
mov
loopne,pn
cmc
xorl
adcb
mov
aam
and
adc
inc
add
dec
in
loope
loopne
pop
mov
repz
lea
inc
add
mov
pop
or
rolb
ret
cmp
je
imul
pusha
loopne
lods
pop
pop
mov
pusha
loopne
inc
jp
fadd
mov
cwtl
pushf
aad
mull
adc
lea
pusha
add
jno
inc
shll
packsswb
aad
repnz
nop
dec
mov
mov
add
add
mov
lock
test
mov
andb
or
pop
stc
jge
ror
cmp
cvtps2pi
and
pusha
out
jae
mov
pop
insl
mov
loope
push
andb
xor
jns
gs
scas
and
mov
and
and
mov
scas
push
pusha
add
add
xchg
adc
push
bound
pop
mov
sub
mov
and
and
loopne
mov
mov
push
loopne
mov
fadds
pusha
inc
push
xchg
and
loopne
xchg
rcl
dec
mov
fs
lahf
cld
or
mov
mov
jmp
loopne
fistl
cmpl
pusha
and
repnz
xchg
or
adc
jo
and
cmp
pop
and
mov
ss
icebp
out
pop
leave
sbb
fdivp
iret
jns
and
cmc
ret
xlat
aam
or
pop
push
shrl
sub
inc
roll
add
sub
sbb
fwait
mov
and
add
dec
repnz
and
pushf
jmp
fildll
aaa
push
dec
cmpsb
loopne
cmp
pop
jp
mov
into
mov
or
andl
jle
call
aad
sbb
dec
idiv
sbb
push
inc
xor
out
xchg
rol
in
jbe
sub
sbb
add
out
push
cli
and
add
fimull
mov
cmp
aad
push
mov
shlb
add
popa
aas
add
jae
sub
xchg
icebp
mov
mov
pop
rolb
dec
fprem
mov
loopne
cmpsl
shr
xchg
decb
inc
shl
data16
inc
push
inc
inc
pop
es
loopne
mov
mov
add
outsb
into
movb
and
jge
and
loopne
mov
call
and
mov
std
arpl
rcrb
add
shlb
add
or
je
andb
xchg
test
shr
addr16
pop
push
or
pusha
fists
loopne
ret
popf
cmpsl
push
movsb
mov
mov
and
mov
jne
pusha
and
loopne
cltd
lods
and
cmpsl
xchg
push
lea
imul
add
jg
cmpsb
and
and
sbb
ss
call
outsb
stos
fstl
jmp
sbb
arpl
andb
add
ja
hlt
cmpsl
add
inc
pop
mov
jo
ljmp
xor
cld
push
insl
dec
aam
xchg
adc
fisubs
adc
xor
cmp
add
loopne
pop
push
cli
xchg
mov
jl
sbbl
cmp
fdivs
test
and
aam
mov
mov
repz
fcmovb
int
subl
push
mov
xchg
jae
repz
outsl
clc
dec
xchg
ja
fisttpll
inc
pusha
push
and
pop
mov
scas
pusha
mov
and
push
mov
aas
mov
incl
pop
sbb
lods
rolb
ljmp
inc
cli
and
mov
leave
and
jl
xchg
scas
cld
dec
fnop
fildll
add
and
stos
test
dec
pop
sbb
jmp
add
aaa
cltd
aam
lret
and
push
aam
adc
jecxz
pusha
loopne
popf
add
pop
outsl
lret
mov
pushf
jecxz
and
aas
jne
shlb
mov
mov
xchg
cmpsb
mov
add
add
hlt
enter
mov
or
in
xchg
rol
cmp
loopne
or
clc
pop
icebp
mov
sbb
outsb
cmpl
mov
jns
repz
sbb
cmpsl
mov
and
repnz
adc
pop
repz
imul
add
or
jb
popf
aaa
push
and
adc
fnstcw
xchg
aam
adc
pusha
subb
inc
aam
aad
jg
lock
into
into
xchg
test
sarb
popf
aas
xchg
mov
and
mov
add
add
mov
sbb
movsl
pusha
cmc
mov
xor
push
shrl
movsl
test
inc
testl
mov
shlb
pusha
addb
mov
ret
inc
stc
je
pop
mov
in
shl
adc
test
stos
cmpsl
outsl
je
xchg
ret
ret
add
lcall
cld
popf
mov
mov
and
loopne
test
shlb
sbb
sub
add
sahf
shrl
and
cmc
xchg
add
shlb
jg
out
sbb
divl
dec
dec
inc
dec
mov
stc
push
gs
or
inc
mov
sbb
xchg
shrb
inc
paddsw
mov
sti
aaa
mov
shlb
and
mov
cmpsl
bound
ja
ja
ja
sbb
test
adc
sub
inc
push
mov
fistl
fisttpl
push
pop
add
and
into
fidivl
fnsave
in
repnz
clc
pusha
xorl
data16
bound
nop
mov
and
mov
pop
dec
inc
pop
pop
mov
and
add
imul
adc
jbe
stos
ss
ss
lods
hlt
xlat
sub
stos
shll
mov
insl
and
pop
cmc
loopne
cmc
fwait
jmp
adc
lret
mov
mov
in
jecxz
popa
gs
insb
out
push
mov
sub
xchg
je
mov
push
sti
pop
or
cmp
loopne
add
sbbb
xchg
jmp
cmpsb
rolb
xchg
mov
inc
jne
shlb
adc
xchg
out
iret
fldt
add
out
inc
inc
sbb
pushf
test
jo
pusha
mov
push
or
loopne
outsb
mov
xorb
mov
sub
pusha
mov
sbb
pusha
loopne
jo
lock
pusha
pusha
push
les
xchg
fldcw
xchg
jg
add
loopne
sub
add
test
scas
andb
loopne
inc
pusha
pop
push
enter
addb
and
inc
sarb
outsl
jmp
jne
nop
push
rol
xchg
sub
pop
enter
sahf
loopne
cmp
loop
imul
inc
mov
insb
push
and
lock
pop
add
loope
mov
cmp
sbb
sbb
andb
pusha
jmp
andb
rolb
mov
inc
shl
fsubs
mov
subb
lea
mov
inc
inc
add
inc
lahf
outsl
lahf
out
push
rolb
inc
add
dec
inc
push
popa
fs
lods
loopne
push
add
jmp
lret
js
addr16
or
dec
addl
push
mov
xor
sub
add
add
add
fimull
lds
push
inc
cmp
popf
popl
adc
pop
mov
ret
enter
cmp
loopne
test
adcb
sbb
loope
testb
add
add
movl
rolb
inc
xchg
leave
push
cmp
cmc
add
insb
shrb
push
shll
dec
mov
inc
jmp
add
movsl
push
and
adc
aad
out
mov
cmp
loop
std
leave
and
pop
dec
dec
dec
xchg
mov
loop
jmp
into
shlb
sub
sub
add
cmpb
add
shrb
add
cmp
pusha
and
inc
pop
inc
push
sub
mov
or
loopne
pop
lock
mov
pusha
fiaddl
mov
xor
mov
data16
lock
mov
adc
loopne
push
in
cmp
loopne
pop
mov
mov
fistps
jge
add
pop
data16
pop
mov
mov
lea
lods
and
xchg
add
or
sarb
add
inc
test
addb
loopne
cmpsb
inc
loopne
xchg
cli
mov
mov
and
ljmp
push
test
dec
pop
enter
rcrl
pusha
repz
fmuls
or
inc
cmc
lret
jae
in
push
ret
jbe
ss
popf
push
loop
ffreep
fwait
dec
jge
in
loop
inc
into
cmp
pusha
or
add
and
andb
xorb
xorb
jb
movsl
mov
out
mov
dec
adc
push
mov
jle
inc
jno
mov
bnd
xchg
pusha
push
sarl
xchg
xchg
ret
pop
pop
lds
jnp
fsubrs
pusha
sbbb
fsubrs
loopne
xor
push
andb
lea
sbb
mov
mov
inc
js
xchg
jo
mov
addb
adc
pop
mov
cmp
mov
out
ret
sbbb
test
nop
stc
daa
mov
add
xchg
imul
mov
mov
xchg
and
mov
test
and
pusha
inc
in
and
mov
roll
loopne
sub
insb
add
push
and
mov
loope
andb
push
arpl
push
mov
or
loop
stc
mov
shlb
loopne
out
scas
add
cmp
xchg
pusha
and
xor
repz
clc
xor
lahf
or
mov
mov
out
xchg
mov
xor
xchg
lcall
shrl
sbb
test
and
dec
sub
arpl
sub
addb
mov
in
fisttpll
xlat
sti
arpl
mov
insb
sahf
fdivrl
inc
pusha
sbb
loopne
iret
pop
lods
inc
add
std
sub
inc
sbbb
jecxz
outsb
cmpsb
mov
and
jge
mov
movsl
jmp
andb
dec
add
and
sbb
fstpl
pusha
dec
popf
in
shlb
pusha
pusha
loop
xor
push
adc
xbegin
leave
lds
add
sbb
inc
cli
jg
push
xchg
aas
mov
rorb
lock
iret
or
getsec
in
inc
sbb
or
ficomps
and
orb
shl
jno
mov
jae
fs
fsubrl
push
add
subb
sbb
stc
push
jnp
cmp
sub
rcrb
mov
add
add
stc
mov
shlb
fdivrl
jle
rolb
sti
dec
jne
sarl
xor
repnz
mov
lcall
in
dec
test
addr16
pop
das
pop
cmp
cltd
xchg
inc
inc
aam
and
fldl
and
add
inc
push
push
prefetch
andb
das
fcmovne
push
xchg
sar
loopne
roll
adc
sbbb
cmc
mov
cmp
pusha
adcb
xor
and
dec
shrl
addb
jmp
inc
jno
sbb
inc
and
shrl
inc
rol
mov
je
mov
xor
icebp
xor
pop
shrb
mov
pusha
and
inc
xorb
jno
aaa
int3
test
ret
xchg
xor
pusha
add
mov
rorb
mov
pusha
xchg
daa
and
sub
mov
cltd
std
cmpl
and
inc
mov
xor
addb
xchg
setne
lock
andb
pusha
mov
inc
inc
or
and
je
fnstcw
shrb
xchg
xchg
out
push
inc
inc
mov
cltd
cltd
psubsb
xor
pop
or
rcr
cmp
push
add
sub
loopne
push
sbb
mov
dec
and
int3
or
in
sub
mov
ja
xchg
scas
pusha
add
fwait
shlb
mov
push
rolb
pop
or
mov
mov
mov
xlat
mov
add
shlb
push
les
stos
inc
inc
pop
ja
imul
pop
pop
inc
mov
pusha
xor
mov
stos
loopne
sahf
mov
aas
push
insl
leave
xor
jecxz
leave
jae
add
jecxz
jle
mov
cmpsb
add
jg
test
les
dec
or
and
sarb
std
sahf
push
inc
add
out
cmpsl
pop
cmc
dec
shl
xor
cld
pushf
push
into
pushf
lcall
outsl
push
mov
popa
push
jmp
enter
cwtl
sahf
sub
push
mov
mov
loopne
shlb
leave
pavgb
pusha
pusha
lahf
xor
inc
fucom
add
fcompl
cmp
cmpsl
in
stc
fstpl
test
and
pop
push
or
sub
add
mov
std
jp
mov
cld
fcompl
addb
mov
inc
shr
cwtl
push
negl
push
mov
das
mov
addb
push
and
mov
mov
dec
push
xchg
pop
aad
stos
mov
mov
lcall
inc
push
jno
sti
je
mov
shlb
in
shlb
xchg
adc
xchg
push
adc
repz
inc
mov
stos
and
addb
icebp
sbb
mov
hlt
ja
mov
loopne
cmpsb
pusha
mov
pop
or
add
jmp
push
test
add
lret
pop
and
mov
jbe
daa
push
loopne
mov
inc
rcrl
rolb
push
rolb
xlat
and
ror
icebp
dec
gs
loopne
lahf
adc
loopne
xor
xor
xchg
rolb
pop
js
inc
fsubrl
add
ljmp
mov
sahf
push
pusha
mov
loopne
inc
mov
adcb
add
test
mov
mov
dec
jb
mov
rclb
inc
or
rcrb
andb
jle
out
loopne
sbb
sub
popa
jmp
loope
pop
ss
xor
mov
xchg
mov
mov
jp
cmpsl
mov
push
leave
and
xor
xlat
xor
mov
adc
fsubrs
sbb
inc
inc
add
sbb
repz
xchg
stc
daa
lods
scas
and
dec
cltd
int3
jg
xlat
ljmp
add
addb
in
neg
inc
xor
inc
scas
aam
loopne
into
repz
xlat
insb
mov
jo
idivl
and
pop
ret
xor
mul
out
and
in
movsb
rol
jmp
xor
cld
arpl
mov
jecxz
les
mov
push
iret
add
pop
aaa
in
repnz
popf
push
js
mov
push
or
inc
cmp
inc
push
xor
inc
add
and
inc
addb
nop
and
inc
add
mov
sbb
insb
iret
pop
ret
js
in
pop
sub
fs
andb
std
shrb
enter
loopne
leave
add
push
xor
sarb
stc
mov
cmp
call
jb
xor
or
ret
and
inc
mov
enter
add
inc
mov
fistpl
adc
nop
push
pushf
jno
loopne
out
cld
inc
pop
fidivrs
cli
lahf
fwait
add
mov
test
loopne
in
push
lcall
mov
and
add
pusha
cmp
add
sub
sbb
stc
add
lret
ret
aad
pop
fwait
lahf
lods
add
mov
sub
jae
stos
addb
repnz
in
sub
in
aad
out
cltd
test
inc
fcomps
pop
pusha
in
and
addb
pop
in
shlb
pop
push
xchg
pusha
xor
pusha
shlb
and
stc
sbb
jnp
mov
cmp
mov
pusha
add
sub
ja
jno
inc
cmp
mov
adc
sbb
xor
fsub
out
lcall
into
rol
cmp
lock
rolb
mov
xchg
xchg
stc
loope
push
stos
add
dec
jbe
imul
dec
inc
adc
and
sbb
das
add
xorl
das
jp
bound
inc
mov
insl
cld
mov
repnz
sub
push
or
xchg
aad
cmc
add
rolb
cmp
add
sti
mov
mov
jecxz
test
insl
push
insl
arpl
jae
jbe
ret
fwait
xor
nop
imull
cli
adc
test
loopne
addl
lea
or
mov
cwtd
repz
cld
shlb
and
cmp
pop
dec
inc
dec
sub
xchg
lds
dec
sarb
pushf
hlt
cmp
mov
test
lret
repnz
loopne
add
cmp
aaa
cwtl
pushf
lret
scas
pusha
mov
mov
add
add
lret
test
imul
cmpb
data16
ljmp
repz
inc
mov
rolb
add
aaa
push
outsb
in
or
loopne
xchg
out
add
ss
cwtl
inc
addr16
or
pop
shrb
mov
pusha
inc
sbb
jmp
adc
and
out
mov
add
push
xor
and
inc
shrb
ror
shlb
push
lahf
popf
cwtl
cli
pop
insb
cld
xchg
in
pop
lcall
mov
cmp
push
sbb
addb
loopne,pn
mov
loopne
mov
dec
aas
xchg
pop
dec
sbb
cmp
adc
mov
adc
jecxz
outsl
and
rolb
mov
xchg
add
adc
inc
pusha
or
inc
stos
inc
pusha
fwait
insl
cmp
add
inc
scas
ret
mov
loopne
fwait
inc
mov
adc
shlb
and
inc
fcmovne
fmul
mov
lds
sti
push
pusha
and
cmp
xchg
fwait
js
push
and
data16
mov
ficoms
cmpsl
and
loopne
jle
xor
add
stos
and
pusha
rorb
mov
std
ds
pushf
dec
mov
xchg
sti
push
mov
loopne
sbb
jg
loopne
out
ja
stos
mov
loopne
mov
adc
sti
arpl
add
subb
bound
loop
sbb
rcrl
call
xchg
stc
mov
add
loope,pt
shl
aaa
out
test
add
xor
sub
shlb
and
pop
inc
movlps
ljmp
les
pop
mov
adc
mov
pusha
pop
sbb
mov
jmp
push
aas
cli
mov
rolb
mov
inc
mov
push
and
loopne
inc
in
sub
out
and
mov
pushf
out
call
fiaddl
inc
and
sbb
loopne
ficomps
pop
dec
out
adc
or
or
loope
pop
pusha
push
dec
mov
in
popa
arpl
xchg
jbe
mov
add
push
push
rolb
pusha
shlb
mov
push
or
addb
popa
mov
rcrb
jo
faddl
addb
dec
nop
fildll
sub
mov
jo
andb
dec
addb
lea
and
scas
loopne
mov
dec
jle
xchg
je
hlt
push
add
lcall
mov
cmp
push
loopne
scas
pop
in
iret
fistps
mov
inc
adc
push
popaw
mov
cmpl
iret
ror
pop
and
pop
mov
imul
daa
cwtl
mov
dec
fdivrl
into
add
and
sub
add
pushf
rclb
sbb
mov
cmc
pop
mov
subb
dec
outsl
sbb
mov
lcall
gs
rolb
shlb
jle
push
sbb
mov
xchg
and
pusha
test
sbbb
and
test
jne
cli
lods
pusha
loopne
repz
cld
inc
mov
xchg
mov
adc
jno
ljmp
andb
mov
pusha
push
into
mov
lods
and
pop
mov
subb
inc
out
xor
adc
insl
xorl
adc
lods
push
int3
pop
shlb
add
jne
std
imul
mov
pop
dec
xchg
inc
clc
fiaddl
sub
mov
out
lods
pusha
rclb
rol
and
pusha
pop
push
leave
lret
hlt
pop
call
mov
into
loop
and
bound
out
xlat
mov
inc
lods
loopne
enter
add
mov
add
sub
cmp
jns
add
insl
jmp
inc
fdivrs
sub
xorb
andb
mov
inc
jae
scas
inc
push
inc
push
fwait
cmc
jne
das
sbb
aaa
les
cwtl
add
xor
ret
fistpl
std
cmp
add
shlb
mov
inc
or
push
mov
addl
fmuls
and
imul
sub
cmpb
sarl
jo
push
lock
rolb
dec
fdiv
jbe
pop
ds
cmpsl
pop
clc
jno
loopne
mov
xchg
mov
mov
add
into
sub
pusha
adc
sbb
in
mov
add
fs
outsl
lods
push
movsb
rol
mov
and
pop
cs
mov
and
sub
add
fstp
push
mov
mov
and
mov
mov
ss
loopne
out
inc
in
lret
sub
add
mov
jae
jmp
xor
pusha
inc
pop
mov
psrad
sub
mov
mulb
andb
fstpt
xorb
sti
sub
sbbb
push
pop
cmc
or
jno
sbb
in
push
mov
pusha
loopne
rolb
rclb
and
sub
rolb
add
or
dec
leave
mov
test
orb
and
ljmp
aaa
lods
mov
sub
and
mov
pop
shll
pop
mov
loopne
cltd
mov
loope
fisttpl
push
and
and
mov
add
mov
movsl
in
inc
arpl
push
mov
jbe
xchg
daa
sbb
es
add
fs
cs
add
and
insl
mov
pop
inc
dec
jno
pop
push
xchg
jg
aaa
add
loopne
mov
sbb
mov
outsl
repnz
aad
push
add
popf
lods
inc
add
call
xor
pop
sub
shlb
fs
ficomps
popf
out
scas
loopne
jl
adc
ret
fbstp
and
iret
inc
inc
cld
xor
frstor
adc
popf
popa
popa
sub
test
pusha
push
mov
mov
xchg
inc
xchg
popf
push
sbb
jb
rclb
adc
imul
aam
sub
pusha
mov
cs
mov
nop
jbe
or
mov
push
test
rorb
xchg
add
loopne
inc
into
push
rolb
inc
jne
sbb
add
shlb
lds
andb
sbbb
and
adc
dec
jp
inc
ffree
jp
pop
popf
loop
jb
xor
jmp
ljmp
aaa
ret
xor
test
mov
cmpsl
and
lahf
stc
das
outsb
mov
jg
pop
std
mov
std
cmp
cs
das
or
scas
fdivr
pop
mov
inc
hlt
cmp
or
and
inc
aaa
loope
je
push
loopne
or
add
cmpsb
shlb
adcl
xchg
push
in
repz
insl
scas
push
and
xor
cwtl
in
push
jnp
or
andb
loopne
cmp
mov
shlb
shlb
or
leave
sub
mov
into
aam
out
sti
call
adc
aas
ljmp
cmp
dec
jmp
insb
lock
pusha
loopne
xchg
ds
in
push
and
imul
jl
cmp
and
test
rolb
call
fwait
and
inc
inc
dec
aaa
cmp
pop
into
jbe
int3
loope
add
mov
and
movswl
mov
sbb
jns
lret
inc
popf
pusha
cwtl
daa
mov
aas
test
mov
push
jg
add
push
rcrl
loope
push
loopne
sbb
outsl
or
pusha
fdivp
or
xor
lods
je
xor
incl
add
jge
jl
data16
push
mov
pusha
sarb
testb
loopne
inc
rcl
mov
test
shll
mov
sbb
enter
dec
xchg
add
lcall
jmp
fsubl
loopne
cmp
or
rcrb
xor
add
fsubs
loopne
call
xor
fs
subb
js
loopne
mov
and
in
mov
shlb
pusha
inc
dec
dec
mov
andb
lods
pusha
xor
test
or
sti
push
mov
sarb
in
jno
push
pop
mov
popa
cmp
out
inc
loopne
ljmp
loope
movsl
loopne
popf
imul
jl
mov
loopne
jae
arpl
out
inc
sbb
out
xchg
jo
mov
lret
push
mov
std
pop
popf
stc
bnd
shlb
jb
icebp
sub
push
jo
inc
and
out
ds
add
and
jle
sbb
dec
arpl
iret
jmp
loop
insb
jle
add
dec
or
loopne
inc
and
xchg
negb
fsubp
pop
sub
mov
inc
xchg
in
or
loopne
mov
ficoms
das
mov
loopne
pop
leave
andb
or
repnz
addb
sub
loopne
jnp
add
and
repz
ljmp
push
js
cltd
std
or
rorb
fistl
xchg
stos
sbb
pusha
pusha
jne
mov
std
cmc
mov
mov
stos
sub
sub
xchg
out
push
mov
xchg
cmp
pop
dec
dec
lock
cltd
push
sbb
sub
rclb
inc
pop
pop
add
loopne
xor
mov
addb
jmp
leave
loope
in
addb
mov
inc
in
push
push
aaa
push
add
inc
xchg
lods
mov
dec
test
mov
addb
loopne
lods
pop
rcrl
imul
pusha
addb
call
stc
addb
inc
xor
dec
sbb
fidivl
mull
push
mov
andb
inc
add
shll
cli
pop
mov
cmp
subl
push
inc
mov
sbbb
aam
inc
mov
pushw
loopne
pop
dec
lods
mov
das
int
lahf
or
inc
fmull
dec
mov
vpscatterdq
orl
ljmp
mov
pushf
mov
out
and
loopne
addr16
mov
pusha
cmpb
outsl
cmp
nop
mov
fwait
lods
add
fsts
xor
cld
iret
dec
adc
adc
ret
and
pusha
lret
and
fldl
lock
push
xchg
cmp
and
push
lea
daa
xchg
jl
in
out
pop
sub
sahf
outsb
cli
daa
mov
or
inc
inc
inc
lea
andb
mov
popf
mov
mov
adc
ds
pop
sarl
hlt
sub
mov
xchg
and
fcoms
jns
sub
add
sub
insb
movsl
cmp
call
and
shlb
or
mov
rorb
push
hlt
fs
mov
inc
cmp
mov
addb
and
aas
xchg
jns
inc
push
sbb
lcall
jl
mov
mov
inc
xchg
int
jge
mov
js
mov
add
pop
cmpsl
inc
xor
aam
sti
int3
mov
loope
imull
shl
mov
xor
mov
mov
mov
inc
outsb
xchg
pop
cltd
add
hlt
xchg
inc
jo
pop
sub
fmull
add
loopne
cmpsl
dec
cmpps
lret
loope
dec
movsl
cmp
mov
movl
ret
lock
loopne
push
sbb
rcll
pmullw
decb
shlb
xor
lahf
or
jge
loopne
adc
inc
and
ss
push
fsubs
add
aas
shlb
inc
push
cmc
lret
iret
pop
data16
inc
dec
repz
push
sbb
xchg
mov
lret
imul
xor
mov
mov
mov
decl
aaa
mov
mov
andb
shlb
adcb
lods
stos
add
jl
int
and
and
pop
mov
in
cld
push
sbb
dec
mov
std
dec
hlt
xchg
es
jmp
mov
shlb
xor
inc
inc
out
dec
call
xchg
adc
mov
iret
shr
add
inc
arpl
out
shlb
vpshaq
or
das
or
pusha
dec
test
loopne
addb
xchg
jb
and
in
cmp
cmp
pusha
inc
push
sahf
aad
and
popa
jnp
andb
cmp
xchg
jge
cmc
movsl
push
inc
mov
pop
add
loopne
std
js
adc
dec
inc
std
pop
jge
xchg
sarb
test
stos
andb
ljmp
fmuls
mov
jo
cmp
andb
jmp
sub
pusha
sbb
int3
rorl
shl
gs
fucomip
lcall
pop
ja
adc
xlat
or
addb
ret
aad
or
jg
mov
sub
shlb
shr
mov
or
shlb
add
inc
push
loop
inc
pop
outsb
daa
repnz
cwtl
and
lret
ljmp
notl
stc
xchg
jno
shlb
jecxz
and
andb
popa
jns
xchg
jae
jns
insl
aas
sub
vpmovmskb
xchg
cmpsl
xor
shlb
push
rolb
and
sbb
xor
loopne
or
cld
filds
sub
loope
cmp
inc
add
sbbb
insb
movsb
and
dec
add
divl
add
test
orb
and
rolb
divb
pushf
and
sub
mov
sbb
loope
test
cmp
jl
test
xchg
cwtl
pushf
daa
repz
mov
pop
aaa
sub
insb
sbb
ljmp
xlat
jl
sub
inc
jo
pop
shrl
add
add
pop
dec
jbe
in
or
jo
dec
mov
push
xchg
xchg
aad
xchg
popa
out
jge
add
insl
fiadds
mov
repz
adc
sbb
sbb
outsl
pop
push
jae
mov
ljmp
scas
mov
mov
mov
stos
and
sub
jp
pop
pushf
and
loopne
xor
lock
xor
mov
inc
mov
mov
cld
cmp
loopne
aad
decb
add
jp
sub
dec
cmpl
jp
mov
mov
jl
xchg
scas
loopne
outsb
idivl
xor
fisttps
mov
sbb
shlb
jne
ret
rorl
pusha
add
shlb
push
pushf
in
add
xor
shl
cmp
loopne
pop
dec
das
in
pop
nop
fcmovne
insl
or
mov
and
je
fimuls
loopne
loope
aad
xchg
aaa
andb
mov
mov
mov
add
mov
pusha
loopne
adc
xorl
pusha
sbbb
addr16
orl
jnp
mov
outsb
sub
loopne
loopne
dec
test
cmpb
and
mov
mov
or
pop
aad
loop
lods
jnp
xor
pop
or
daa
loopne
jae
xor
cltd
stos
and
ret
or
pusha
into
dec
stos
pusha
inc
in
mov
shll
addb
pop
lds
push
int
insb
and
fisttps
and
adc
mov
in
iret
jns
test
rclb
mov
dec
jmp
mov
mov
pop
mov
andb
addr16
je
cltd
xchg
cmpsb
rolb
loope
jmp
xchg
jp
int3
fs
xor
or
pop
pop
int
pushf
mov
test
insl
and
and
mov
mov
inc
cmpsl
mov
mov
ror
in
fnstenv
jge
mov
das
xor
lret
in
xchg
iret
cld
jmp
data16
pusha
sarb
or
mov
jo
xchg
inc
pop
mov
jbe
xchg
nop
lock
loope
daa
or
repz
popf
mov
ret
push
add
shlb
fistl
mov
outsb
aas
sbb
lret
add
add
mov
loope
cmp
add
add
xchg
jge
mov
or
lret
rolb
repnz
lahf
dec
testb
xor
fwait
hlt
adc
mov
add
mov
sbb
ljmp
and
orb
xchg
mov
or
pop
loopne
lea
in
push
lret
fimull
and
loopne
iret
andb
fs
dec
xchg
sub
add
ret
pusha
inc
ljmp
mov
inc
mov
add
xchg
in
aam
aaa
xor
sbb
and
xchg
xor
movsl
inc
sub
pusha
punpckldq
lcall
shrb
xchg
sub
add
xor
jno
sbb
cmpsl
jae
sahf
inc
and
jno
les
mov
loopne
decb
xchg
xor
inc
loopne
js
xor
mov
jg
rorl
inc
pusha
test
shlb
ret
popf
enter
mov
xor
push
stos
add
pusha
mov
sti
fstpt
jbe
jp
fnstcw
mov
add
xchg
clc
pop
xlat
add
clc
dec
jp
mov
jo
ljmp
test
rorb
and
daa
push
add
ljmp
inc
jb
xchg
fdivl
dec
inc
into
and
movsb
mov
mov
adc
mov
push
push
pusha
add
adc
and
popf
or
sub
movsb
and
je
jns
mov
jns
add
or
das
xchg
lods
and
push
dec
hlt
sub
sub
sti
jne
mov
movsb
inc
mov
aad
shlb
jns
sub
je
sub
and
pop
stc
sub
pusha
jae
push
xor
pop
jns
inc
mov
and
push
inc
push
mov
xorb
pusha
repz
add
rcl
mov
dec
ret
mov
sti
loope
sub
pop
cmp
repnz
adc
adc
ja
addl
pop
loope
fisubrs
mov
add
shlb
testl
nop
xchg
push
clc
pop
adc
in
subl
jmp
jg
aaa
std
jecxz
mov
add
int
fsubrl
andb
andb
mov
inc
out
fldln2
mov
xchg
add
shrb
pop
jge
mov
cmp
andb
pop
out
add
jmp
test
pusha
xor
and
dec
sub
ljmp
cmp
into
sbb
inc
and
data16
pusha
xor
sbb
repnz
cld
jp
loope
and
jo
and
jmp
sub
andl
add
xor
inc
repnz
inc
loopne
push
and
test
or
jbe
mov
adc
pusha
inc
mov
mov
inc
mov
nop
lock
add
subb
xchg
adc
and
cmp
push
lret
sbb
sub
pusha
cmp
xchg
lods
cwtl
int3
sub
and
mov
fisubl
loope
gs
mov
daa
jnp
lcall
mov
push
icebp
scas
sbb
jno
sti
sbb
cmc
push
lods
mov
adc
and
ret
jns
dec
inc
fidivs
push
pushf
lock
fwait
cli
loopne
andb
aam
jae
fists
movsl
lods
add
lret
je
movb
xlat
sbb
mov
inc
mov
popl
jnp
mov
xchg
push
and
push
gs
dec
jnp
pop
and
pusha
test
loopne
icebp
mov
andb
cmp
mov
out
xor
mov
mov
add
popf
or
andb
imul
sbb
shlb
in
mov
inc
cmp
loopne,pn
push
xor
and
inc
xorb
inc
push
icebp
mov
cmp
cmc
adc
aaa
test
orb
nop
adc
and
fld
fnstenv
mov
sti
jecxz
or
rolb
rolb
loopne
pusha
loopne
xor
sbb
addb
lret
ret
fwait
xchg
xor
adc
mov
mov
inc
inc
jge
cltd
jns
in
push
out
out
mov
and
bound
sbbb
loop
add
ja
mov
xchg
outsl
mov
loopne,pn
sti
pop
mov
shlb
or
lret
sub
and
mov
bound
fucomip
out
pop
sti
adc
cmp
insb
icebp
fisubrs
outsb
addb
add
inc
mov
cld
sub
add
out
xchg
je
pop
mov
xor
ss
or
test
mov
xor
push
and
rorb
js
inc
adc
pop
xchg
xor
nop
arpl
xlat
mov
hlt
rcrl
pusha
aas
out
addb
popa
mov
pop
lret
push
loope
loop
ja
hlt
mov
push
shlb
pusha
shrb
fadds
es
and
jge
pusha
loopne
sbb
inc
dec
mov
movsb
mov
aas
mov
repnz
xrelease
shlb
daa
in
cwtl
add
inc
int3
cli
jns
into
jns
idiv
dec
test
mov
add
rolb
and
add
sbb
and
cmpb
addr16
inc
movd
add
mov
push
addb
testl
rolb
inc
pop
xchg
loopne
sbb
addb
dec
pcmpgtw
push
inc
test
mov
inc
mov
arpl
cmp
inc
mov
mov
add
lds
jno
jl
lret
fldl
fistps
loopne
fisttpll
loopne
adcl
xor
add
inc
and
mov
rcrb
mov
pusha
fs
mov
cmpl
mov
sub
fcmovnbe
test
pusha
xchg
add
aas
push
leave
cmpsl
lcall
mov
cld
scas
and
rolb
sbb
repnz
nop
pop
aaa
mov
inc
fbld
mov
and
repnz
push
imul
add
inc
sbb
divb
inc
in
andb
push
in
dec
jb
mov
pusha
inc
dec
sub
out
test
add
inc
and
nop
xor
push
push
popa
jbe
in
addr16
jmp
int
sub
and
xor
lahf
jmp
cmp
push
inc
and
aaa
xchg
kmovw
adc
hlt
out
inc
and
fsubrl
jo
or
pop
in
inc
out
push
cmpl
mov
call
add
out
jp
ljmp
pop
leave
push
mov
inc
jp
rcrb
push
enter
jb
and
sarb
lock
fmull
and
pusha
fbld
sub
cmp
cmc
pop
call
sub
push
pushf
movsb
addb
or
dec
insl
mov
lret
xchg
call
inc
sub
dec
mov
popa
jmp
inc
jle
inc
mov
cwtl
jbe
pusha
inc
outsl
stos
push
pop
mov
adc
shl
or
add
cmpsb
mov
imul
add
jno
es
loopne
enter
dec
movsl
and
and
sub
sahf
add
add
push
insl
xor
jp
sarb
sub
lret
pusha
insl
cmp
repnz
fisttpl
add
in
cmp
adc
xchg
andb
mov
insl
mov
cpuid
inc
rclb
scas
int3
repnz
sub
and
gs
add
jns
loopne
outsb
jbe
jmp
shlb
mov
pusha
sbbb
add
imull
sbb
add
shrb
push
dec
fnstenv
rolb
adc
and
stc
xor
pop
push
push
pop
jmp
nop
dec
mov
shlb
xchg
mov
mov
pop
push
loopne
cltd
pop
pop
xchg
adc
xor
mov
push
mov
jo
loop
adc
les
mov
andb
jmp
cmpsb
mov
pop
xor
ds
fs
das
and
xchg
jne
mov
into
or
and
dec
sti
std
clc
test
dec
inc
rolb
adc
fs
mov
andb
mov
sbb
xchg
cmp
loopne
pushf
mov
adc
xchg
xchg
xor
sarb
andb
fsubr
xor
test
sub
adcb
sub
mov
dec
cmpsl
fsts
mov
ret
test
inc
sahf
loop
shl
sti
rorl
xchg
mov
andb
sbb
cmp
sahf
loope
rcrb
lret
scas
add
xor
and
movsb
mov
adc
stos
mov
xchg
mov
jmp
add
addl
add
push
jecxz
iret
inc
push
mov
mov
shrb
xchg
lods
loopne
enter
and
or
mulb
aaa
jno
gs
dec
repz
jnp
push
cltd
daa
cld
scas
shl
shlb
fisttpl
xchg
mov
push
and
pop
mov
aas
jmp
inc
rorb
int3
cmp
loopne
inc
cmc
or
sbb
inc
add
loopne
jge
clc
or
pusha
or
shrb
loope
add
mov
mov
sti
inc
sahf
rcrl
loop
push
aaa
xchg
rolb
pop
dec
sub
test
jnp
mov
hlt
out
add
or
rol
jne
add
mov
pushf
add
sti
adc
sub
add
inc
inc
push
imul
gs
ljmp
popf
data16
or
or
loopne
push
jne
adc
test
mov
aaa
pop
sti
sbb
mov
lock
sahf
push
ja
mov
insl
dec
aas
and
rcrb
pop
cwtl
or
sub
push
push
aas
mov
pop
insb
addr16
sahf
les
rol
mov
lds
icebp
xchg
cmp
mov
aam
push
std
clc
repnz
mov
andb
loopne
adc
add
mov
pusha
cwtl
sub
andb
fdiv
jp
or
cmpb
jl
sub
cmp
inc
sarb
dec
test
sarb
insb
push
dec
lock
into
xlat
leave
push
jmp
pusha
mov
ficoms
inc
inc
sbb
and
inc
or
add
cmc
ret
push
ja
rcll
and
sbb
andb
leave
xor
jb
mov
and
pop
gs
test
add
and
mov
rcr
jmp
mov
xor
pop
mov
icebp
aam
push
add
push
test
mov
mov
cmc
lock
leave
xor
lret
xchg
push
fistpl
and
xor
sbb
pusha
inc
push
shl
rclb
mov
test
shl
mov
pusha
sahf
mov
jecxz
fstpl
sbb
pop
push
sbb
inc
mov
pop
insb
jmp
aaa
cmp
pop
aas
or
jmp
rolb
inc
push
cmp
out
jl
call
shl
repnz
and
xor
jl
fwait
cmp
lret
jecxz
movsb
mov
jp
mov
mov
xor
rol
jmp
jle
push
mov
mov
daa
in
mov
shlb
roll
push
jns
add
inc
lcall
andb
subl
je
test
pusha
inc
xchg
xor
mov
push
ja
dec
dec
out
addb
in
mov
push
popa
xor
jne
add
loopne
jae
add
and
inc
fsub
sti
dec
or
rorb
mov
rol
and
mov
xchg
in
or
mov
push
and
or
inc
sub
and
lcall
and
mov
adc
sub
and
ret
adc
cmp
jno
icebp
fwait
inc
test
sub
and
mov
xchg
jno
pusha
pusha
rcrl
pop
mov
and
sub
push
inc
add
add
jno
add
pop
sub
add
mov
mov
aaa
notb
add
pop
repnz
shlb
lahf
test
mov
and
mov
xor
fsubs
inc
addb
jg
sub
sub
add
fmull
and
into
jo
pop
mov
popa
pop
jo
pop
fistpl
leave
xor
sbb
adc
call
imul
sbbb
mov
xor
das
cmpsl
movsb
shlb
fstl
lret
loopne
xchg
push
and
inc
rol
mov
adc
push
shl
jle
ret
loopne
push
loopne
es
xor
loopne
and
sbbb
into
loopne
xchg
xor
dec
neg
call
pop
clc
jecxz
outsl
push
xchg
mov
aad
adc
pop
bound
insl
dec
fs
jnp
shlb
cmp
inc
mov
pop
sub
pusha
loopne
add
loopne
adc
add
inc
andb
rclb
sub
popa
mov
pop
push
mov
bound
push
out
daa
xchg
lret
inc
pusha
leave
shrl
dec
iret
inc
pop
xchg
mov
adc
push
dec
pop
int3
adc
sbb
mov
pushl
xor
addb
jne
gs
addb
add
sarb
mov
or
add
sbb
jp
addb
mov
loopne
mov
jmp
in
outsl
and
fcompl
mov
or
sarb
inc
mov
and
shlb
rolb
and
pusha
dec
dec
sub
and
arpl
inc
popf
lds
in
rol
add
int
push
add
bndstx
push
fcoml
loop
push
xchg
daa
fs
inc
xor
loopne
bound
into
push
pop
shr
loop
leave
push
negl
jle
out
cld
adc
fs
mov
dec
nop
adc
push
fsubrl
rcll
inc
add
cmp
and
inc
lea
ret
sbb
shl
flds
sub
popl
push
lret
popf
mov
and
out
and
out
scas
andb
mov
loopne
jle
pop
shll
mov
pusha
xorb
jb
loope
insb
insb
aas
mov
cmpsb
mov
lret
xchg
jp
jg
inc
inc
stos
mov
dec
mov
xchg
ja
mov
js
in
mov
and
cmp
push
and
and
cwtl
lea
je
add
xor
push
push
mov
add
loopne
pusha
loopne
mov
inc
pop
sub
jmp
faddl
loopne
jae
repnz
mov
push
iret
push
xchg
cwtl
mov
lods
rolb
jo
shlb
mov
dec
push
test
mov
sub
gs
sbb
add
sbb
sbb
int
add
lds
adc
lds
sahf
insl
sbb
push
lds
inc
fstps
cmpsl
iret
mov
mov
inc
loopne
andb
sub
ja
daa
icebp
mov
pusha
pusha
in
js
and
adc
mov
es
pusha
js
mov
fsubrl
and
xchg
outsb
or
iret
dec
test
and
popa
mov
add
pop
stc
push
add
inc
aaa
pminub
cs
inc
add
mov
popf
dec
or
lret
pusha
mov
in
or
lods
add
andb
jl
insb
xor
or
pusha
sbb
sub
add
in
cs
xor
lcall
add
ljmp
pusha
mov
cmc
mov
pusha
cmc
fimull
into
cmp
mov
das
div
or
mov
push
lret
outsb
fiaddl
rol
aad
cmp
add
mov
cwtl
and
add
ljmp
int
xchg
sti
xor
and
pusha
lods
and
jg
test
push
fnstenv
cltd
add
jle
insb
notb
enter
inc
and
lret
andb
adc
cmp
sub
inc
push
mov
inc
int3
aaa
int
sbb
scas
or
pusha
out
jp
testl
loopne
cmc
adc
xor
addb
popa
cmp
or
pop
adc
in
jo
sub
push
pusha
xlat
pop
inc
mov
in
outsl
push
test
inc
cmp
and
cmpsb
loopne
jns
fisttps
pusha
rcrb
pop
adc
pusha
mov
pusha
mov
mov
mov
stc
push
fldt
cld
add
cmpsb
addb
imul
mov
dec
mov
xor
ss
cs
pop
jl
inc
sbb
scas
sub
cmp
stos
dec
outsb
adc
imul
orb
pusha
add
rolb
cld
pop
addl
add
xchg
inc
bound
test
mov
pop
cmp
inc
lcall
pop
fucomi
int
stos
and
loopne
and
sub
cs
rcrb
imul
roll
fisttps
stos
cmp
inc
cmpb
inc
or
pusha
inc
cmc
add
pusha
and
dec
cld
icebp
sub
loopne
jg
dec
das
mov
pusha
or
dec
jecxz
pop
andb
mov
add
mov
fs
std
sub
xor
scas
push
dec
jns
and
jne
sahf
xchg
mov
add
dec
jns
cli
mov
shrl
pusha
shr
or
inc
loop
fimull
xor
repz
js
inc
cmc
push
inc
mov
inc
mov
cmp
push
cmp
jb
test
or
jne
mov
loope
mov
loopne
sbb
rcrb
mov
sub
dec
test
pop
pop
ds
dec
aaa
adc
xor
xor
cmp
out
shrb
popf
negb
adcl
and
add
pop
test
add
add
movsl
push
out
xchg
jle
std
sbb
push
jecxz
mov
and
rolb
pushf
push
push
mov
or
pusha
rcrb
jno
cmp
and
cmp
and
mov
xor
xchg
je
cmp
movsl
lods
test
ficomps
jne
mov
xorb
push
rolb
shl
xor
loopne
inc
or
pusha
jecxz
mov
or
mov
test
xlat
cs
rorb
xchg
cmpsl
inc
das
xor
shl
js
arpl
shl
data16
mov
rol
inc
pop
jo
sub
sbb
lods
call
xor
mov
xchg
sbb
ds
mov
pusha
outsb
cli
pop
or
or
xor
sbb
outsl
push
xchg
cwtl
push
arpl
add
pusha
dec
mov
out
popa
cmp
mov
push
fldl
inc
and
andl
in
push
xlat
aad
mov
pop
adc
inc
push
and
jb
lret
and
or
and
testl
mov
mov
push
test
movsl
cmp
nop
xorl
in
and
mov
mov
mov
mul
xchg
mov
push
aad
mov
and
mov
jg
inc
loopne
cmpsl
xchg
and
mov
insl
sahf
insl
xchg
pop
xchg
or
int3
mov
shr
lods
mov
les
rolb
and
andb
lock
mov
shrb
xchg
loope
aam
mov
and
pusha
push
in
shlb
cltd
sub
cmpb
mov
sbb
and
inc
jb
jp
rcll
sub
inc
cmp
pop
dec
repz
dec
sbb
xlat
ljmp
pusha
add
inc
bound
add
loop
addb
and
jp
push
dec
cmp
rolb
xlat
and
mov
popf
add
jae
push
mov
loope
int3
loopne
popl
rorb
xchg
pop
incl
xor
cltd
bound
mov
add
jp
inc
mov
addb
test
sub
out
sub
and
sbb
out
je
push
pop
adc
lahf
xchg
nop
inc
andb
fstps
add
jne
xor
imul
xchg
mov
cmp
out
lea
cltd
mov
pusha
add
pop
push
xchg
inc
mov
in
mov
rolb
lret
push
out
out
push
aam
mov
ret
lret
inc
orb
pop
bound
mov
loopne
rolb
lea
cmpsl
arpl
xchg
xchg
lcall
inc
xorb
dec
adc
dec
cmp
sub
mov
inc
push
cmp
test
xorb
inc
fcmovbe
out
inc
out
pop
aas
in
loop
jo
lods
mov
mov
pop
lds
test
bound
sbb
jg
push
jb
das
outsb
dec
lock
mov
loopne
hlt
sti
and
fisttps
shlb
inc
and
jmp
imul
out
pop
xchg
add
gs
fidivl
les
in
sub
add
addb
loopne
jne
mov
add
add
push
jle
xchg
es
shlb
pop
cltd
imul
int3
scas
mov
adc
fidivrl
out
mov
pop
add
call
inc
sub
fsts
add
shlb
fimull
loopne
inc
cmp
bound
fsub
call
andb
add
pop
or
andl
data16
mov
cmp
pand
mov
jnp
cmp
sbb
cli
cmc
add
and
pusha
mov
inc
add
int
testl
jo
jecxz
add
inc
repnz
out
mov
xor
push
sahf
jle
add
sub
and
cltd
cmp
outsl
aam
and
jnp
push
inc
and
sub
leave
pushf
jno
stos
pusha
add
xchg
and
cmp
mov
std
pop
pop
mov
icebp
dec
call
and
mov
sbb
rolb
andb
mov
add
pusha
fildl
inc
shlb
mov
sub
scas
mov
and
or
lfs
loop
jl
mov
jle
sub
and
inc
xchg
mov
or
dec
inc
gs
fnsave
pop
idivl
pusha
add
push
movsl
imul
and
inc
ror
xchg
arpl
mov
mov
mov
sahf
out
stos
repnz
xor
inc
mov
mov
inc
arpl
addr16
and
add
push
inc
jae
jge
and
fwait
jmp
sbb
push
fistpl
ret
hlt
xor
fists
lret
lods
and
mov
bound
loopne
inc
aas
dec
add
rcl
daa
mov
mov
and
or
push
movl
pusha
and
into
movsl
lods
mov
inc
loopne
pop
or
pushf
push
sub
pop
fadd
mov
xchg
inc
ljmp
add
test
cs
inc
and
lret
cmpsl
bound
lods
mov
mov
fcompl
loopne
add
cwtl
sub
pushl
inc
bound
sub
sbbb
mov
pop
and
sbb
inc
add
std
lret
mov
xchg
sbb
int
and
dec
pop
enter
mov
or
cmc
cli
adc
dec
xchg
pop
push
icebp
hlt
dec
fstl
pusha
and
sahf
sti
mov
outsl
repnz
clc
cmp
cli
loope
xchg
adc
xor
loopne
rclb
inc
xchg
or
mov
cltd
shlb
pusha
stos
mov
cmp
in
xchg
jno
fs
js
outsb
jg
loopne
ret
hlt
into
mov
mov
pusha
and
sbb
inc
lds
lods
inc
and
pusha
mov
push
pusha
xchg
add
fwait
inc
andb
or
rcrb
mulb
inc
sub
pusha
leave
clc
push
loopne
xchg
aas
sbb
stos
cwtl
sbb
mov
pop
jb
add
add
pop
fnstcw
sub
std
inc
mov
xchg
push
rorb
push
call
shll
sbb
out
xchg
jae
and
and
add
pusha
pop
in
add
mov
iret
push
sub
int3
idivb
mov
and
sbb
mov
andb
addb
and
push
loopne
adc
sbb
stc
push
mov
add
pusha
inc
fldt
or
sbb
shlb
and
mov
dec
insl
jecxz
aas
test
mov
and
jmp
cmp
std
inc
mov
inc
outsb
stos
nop
icebp
sub
loopne
out
jmp
lret
test
shlb
pusha
sbb
push
sahf
mov
push
icebp
bound
int3
jmp
ss
and
sub
push
push
addb
frstor
pusha
fistps
and
add
push
cmpsl
mov
adc
lcall
dec
ss
repz
fisubrs
fs
mov
cmp
or
stos
shlb
jb
sub
rclb
ds
mov
pushf
pop
orl
sbb
pusha
shrb
sbb
fisubrs
ds
mov
pop
xor
nop
mov
mov
mov
mov
lds
fistps
lahf
push
int
jbe
insl
dec
sti
push
and
lret
call
sub
fmulp
bound
les
jno
mov
imul
stos
adc
adcl
push
cmp
popa
and
push
jbe
lea
shl
or
add
loopne
daa
push
and
dec
inc
orl
inc
fwait
je
call
lods
shlb
ret
movsb
mov
pop
mov
mov
sbb
jno
pusha
adcb
loopne
inc
rcrb
cmp
or
xchg
push
mov
push
push
mov
pusha
add
inc
loopne
leave
inc
lods
push
cltd
mov
pop
push
push
pusha
loopne
cmp
inc
sbb
jmp
cld
cmpsl
and
jbe
jmp
push
and
xor
mov
rolb
sbb
ljmp
adc
push
ror
mov
and
jne
mov
cmovnp
loopne
mov
and
cwtl
push
push
or
xor
jne
movsb
mov
mov
clc
and
ror
sub
testb
popa
fwait
in
enter
ja
loopne
push
jg
adc
pusha
rolb
adc
push
or
shll
rol
dec
call
sub
pusha
xor
jno
sbb
movsl
in
inc
jmp
mov
xor
mov
loopne
or
lret
icebp
cmp
inc
pusha
mov
andb
insb
jb
insb
jnp
lret
and
push
pop
int
popa
pushf
mov
and
xchg
cmc
push
mov
cmp
mov
cmp
jmp
sbb
inc
mov
mov
pusha
pusha
roll
push
fcomp
mov
mov
mov
push
aad
and
in
cld
adc
mov
sub
loope
pusha
cmpsl
mov
jl
add
sub
jne
xchg
adc
loope
int
jge
loopne
std
mov
xor
pusha
add
xor
fucomip
rcll
mov
mov
aaa
out
cltd
fistpll
roll
iret
cmpsl
xchg
mov
dec
jbe
lods
pusha
mov
mov
rcr
mov
addb
dec
sub
pusha
cltd
ss
fcompl
and
mov
pushf
stos
loopne
adc
ljmp
xor
pop
lret
inc
aad
test
and
dec
cmp
sahf
shlb
inc
inc
inc
push
and
mov
shl
ficomps
or
jg
inc
enter
or
push
jns
inc
and
rcrb
and
and
mov
jl
test
repnz
sti
shr
sbb
adc
dec
sub
test
pusha
mov
push
testl
cmpsl
mov
mov
mov
push
adc
cmp
inc
punpckhdq
pop
fidivrs
ljmp
add
mov
push
and
jbe
inc
shlb
inc
inc
aas
test
or
loopne
cmp
mov
push
mov
adc
aad
addb
roll
out
shll
mov
mov
mov
push
aam
inc
xlat
lret
xchg
stos
add
add
fimull
data16
mov
iret
sbb
jle
jns
pop
popl
bnd
cltd
icebp
sbb
mov
and
iret
mov
jmp
add
rolb
pusha
add
in
lock
jns
cmp
push
loopne
and
jge
hlt
inc
xchg
int
repz
shlb
pop
into
adc
mov
push
mov
pop
push
loopne
out
aad
cmovo
sbb
push
insl
and
shrb
sub
cmpb
mov
sbb
mov
add
in
loope
mov
xchg
jo
in
xchg
imul
cwtl
addb
shl
jo
jne
in
xor
and
or
sarb
and
adc
shl
in
rclb
push
pusha
add
or
push
data16
loopne
in
cmp
xchg
adc
push
fcmovnb
pop
insl
cmp
add
jo
adc
mov
sub
inc
fdivrs
jg
aad
mov
pusha
sti
scas
ja
xchg
lds
ds
pop
dec
mov
sub
pusha
aam
addb
shlb
popa
push
sbb
xor
std
movsl
and
pop
xchg
add
lret
fwait
sahf
adc
movsb
add
movsb
inc
adcb
fstps
dec
add
and
mov
loop
imul
cmp
push
shll
push
daa
or
loopne
aas
add
rep
sub
pop
lods
ds
mov
movsl
addl
loopne
xchg
loopne
inc
aaa
out
and
lea
fdivrs
test
add
les
jmp
addb
or
addb
cmp
cmpsb
loopne
rcrb
arpl
add
aam
inc
loopne
loopne
mov
mov
sbb
ss
xor
rcll
subl
xor
cmpb
pop
loope
dec
test
add
mov
scas
pusha
addb
mov
lock
jb
adc
test
sbb
mov
push
into
fimuls
sub
rol
bound
dec
fcoms
cmp
inc
movsl
inc
fildll
mov
pusha
push
call
int3
push
push
fbld
inc
inc
xor
xor
addr16
lock
jg
loopne
adc
orb
sbb
loopne
hlt
sub
inc
inc
das
jp
notb
mov
loopne
xchg
or
adc
and
stos
and
xchg
and
loop
cmp
sub
mov
xchg
out
sub
add
mov
inc
or
inc
shr
aam
mov
add
add
loopne
mov
sub
mov
stos
pop
sub
ss
mov
inc
fiadds
xchg
inc
stc
jge
ljmp
add
push
sbb
push
fists
add
out
add
imul
mov
add
mov
neg
xchg
roll
and
dec
dec
cmp
add
and
pop
jb
pop
or
andb
insb
or
rolb
sbb
adc
xchg
mov
mov
repnz
orl
das
xchg
sahf
mov
int3
mov
rolb
jmp
push
dec
cld
sbb
sar
xchg
std
mov
mov
push
negl
mov
jo
mov
shlb
and
xor
jb
pusha
xorb
push
addb
pop
pop
add
loop
lret
dec
pop
fcoms
not
movsl
adc
sub
sub
adcb
mov
mov
loopne
mov
cld
or
pusha
mov
loopne
mov
dec
aaa
dec
ja
in
add
test
add
test
xchg
and
pushf
xchg
dec
mov
ret
dec
movsl
cmp
xchg
es
pusha
data16
adc
adc
inc
mov
jge
das
out
and
sub
lret
add
in
std
imul
mov
adc
aad
and
mov
jecxz
imul
in
mov
dec
and
fstps
sahf
sub
add
pop
movsb
and
mov
dec
mov
cwtl
loop
fstp
cmc
notl
mov
inc
lahf
icebp
pmovmskb
jge
xchg
outsl
xchg
rcrb
inc
pusha
push
jle
cmp
in
cltd
in
xchg
icebp
mov
in
adc
mov
sahf
roll
test
cmp
sub
inc
in
xchg
jp
add
andb
mov
push
mov
int
out
jle
bound
in
outsl
jo
mov
mov
clc
fwait
stc
dec
int3
lds
inc
inc
lods
mov
arpl
popf
repz
jp
push
mov
fcomi
jne
loopne
jns
insb
xchg
rolb
addl
adcb
cmpsb
inc
inc
jecxz
sahf
push
push
gs
ljmp
add
xor
rolb
lret
inc
loopne
and
ret
jmp
xchg
add
nop
lret
fildl
fstp
push
xor
inc
ret
femms
pusha
loopne
inc
loope
jg
std
jecxz
dec
push
cmpsl
in
sub
cmpb
cwtl
addb
ror
xchg
add
loopne
jle
andb
shlb
fwait
sub
outsb
xor
push
scas
out
jae
negb
movsb
andb
and
in
aad
push
outsl
rcrb
cld
xchg
sub
and
in
repnz
add
loopne
sti
cmp
sti
fiaddl
aas
mov
or
loopne
inc
shlb
pop
jge
popf
movb
mov
or
lods
add
xchg
mov
add
into
jb
sub
fwait
push
lds
jl
fnstcw
jno
inc
add
inc
xchg
xlat
push
xor
inc
pusha
lods
mov
shlb
xor
inc
rclb
int3
daa
pop
pusha
xchg
jmp
repnz
mov
rolb
andb
dec
or
addb
and
es
pusha
add
inc
and
sub
cmpsb
and
rorl
mov
inc
push
xchg
das
das
loopne
test
xchg
push
inc
inc
mov
cmpb
inc
cmp
sbb
mov
pusha
mov
aas
ja
out
enter
movb
mov
add
ss
mov
jns
mov
dec
in
inc
mov
xor
and
das
adc
adc
push
adc
jns
jo
jmp
adc
sarb
inc
js
jl
sbb
add
push
or
sub
fwait
pushf
cmc
sub
xorb
andb
in
mov
arpl
montmul
add
adc
loope
lret
jbe
test
subb
pusha
pop
ret
xor
mov
jno
lcall
subl
pop
mov
xchg
int3
jl
addr16
mov
or
in
jl
add
and
inc
inc
mov
xor
aad
gs
add
mov
nop
pop
pushl
shl
dec
push
cmp
push
push
imul
jns
andb
dec
mov
imul
sub
loopne
pushf
loopne
mov
aaa
movsb
inc
mov
jecxz
lock
pop
pop
mull
add
inc
pop
out
in
mov
sti
pop
ret
push
pop
in
movsb
rol
ljmp
mov
inc
pop
imul
xor
mov
and
xchg
fistps
and
pusha
enter
jo
das
iret
mov
and
jecxz
stc
jns
loopne
sub
or
adc
xchg
ret
ljmp
pusha
jmp
popf
pop
mov
fimuls
xchg
pop
pop
pop
sub
clc
push
jns
in
jae
sbb
popa
lea
push
pusha
and
jmp
or
daa
outsl
mov
bound
cmp
mov
loopne
lock
inc
loopne
into
push
cmp
test
xchg
mov
loopne
xchg
movsb
inc
mov
mov
pusha
pusha
js
mov
mov
mov
nop
leave
arpl
or
mov
pusha
hlt
xchg
dec
push
or
and
dec
fstp
sbb
idivl
xchg
mov
inc
xchg
loopne
dec
push
mov
in
sub
movsl
fwait
sbb
out
adc
push
inc
add
push
loopne
ss
jle
cltd
jl
andb
mov
xlat
ss
test
addr16
arpl
jmp
in
xor
pusha
loopne
ljmp
jmp
xchg
ret
jns
pop
xor
loopne
xchg
jmp
push
outsl
xor
dec
arpl
jns
add
dec
addb
popf
pop
push
rol
mov
xor
mov
mov
es
rorb
cmp
xchg
pusha
add
std
divb
push
jp
or
shlb
sbb
or
inc
mov
push
pusha
xorb
add
jb
pusha
inc
mov
pusha
loope
mov
rcrb
xor
andb
pusha
and
loopne
in
sub
and
mov
sarb
in
clc
xchg
rorb
sub
add
add
adc
insl
into
test
dec
pushf
sbb
pop
push
loopne
or
mov
inc
cli
loopne
lcall
and
add
mov
sub
or
loopne
xlat
push
rolb
movsb
shlb
shl
add
mov
outsl
scas
inc
sub
test
jmp
fiaddl
pop
fwait
and
lds
pop
jmp
sub
shrb
fistl
cmc
dec
rclb
movsb
mov
hlt
test
stc
ss
and
rcrb
pop
or
mov
scas
sti
mov
pmaddwd
push
add
sbb
mov
fs
jl
mov
cmp
dec
das
pop
cmpsb
rol
xor
out
popa
mov
add
and
pop
stc
mov
repnz
pop
int3
xchg
and
jecxz
lods
shlb
inc
add
mov
sub
rorb
xchg
push
lods
mov
fs
imul
int
out
pusha
je
lcall
mov
clc
in
ficoml
loopne
add
loopne
lods
and
dec
jge
dec
adc
cmpsb
pusha
addb
jae
lahf
adc
sahf
sbb
into
add
inc
xorl
jns
jp
fucomip
jl
fstl
pusha
mov
xor
inc
sti
in
shlb
pusha
loopne
cld
dec
add
or
test
jne
cmp
lods
loopne
mov
pop
call
pusha
pusha
jle
fimuls
fisubrs
mov
push
ret
rolb
pop
movsb
and
or
jp
and
jbe
call
sbb
stos
dec
fimuls
xor
daa
adc
or
add
and
push
inc
call
mov
and
mov
int
in
mov
shlb
and
cmp
sti
hlt
lgs
stos
push
rolb
stos
mov
push
dec
shlb
test
and
mov
in
sbb
ljmp
pusha
loopne
mov
sub
inc
test
sub
jg
pop
or
pusha
and
sbb
add
cs
arpl
shlb
add
adc
adc
xchg
xlat
push
andb
sbb
inc
pop
shlb
push
mov
stos
mov
and
push
repnz
out
out
mov
dec
add
adcb
daa
pusha
or
pusha
pop
add
shll
inc
test
shll
aad
add
and
shlb
loopne
scas
std
loope
push
cmp
std
inc
inc
subl
inc
aam
aam
loope
je
ret
ret
bound
xor
cmc
ja
lock
imul
inc
ljmp
and
dec
lods
cmpsb
add
mov
into
popa
push
dec
out
ds
js
xchg
stc
loop
mov
inc
rorb
push
add
pop
dec
es
inc
or
mov
pusha
sarb
mov
add
jecxz
sbb
jno
mov
inc
wbinvd
test
inc
ret
mov
inc
jae
mov
mov
imul
xor
mov
mov
loopne
loop
jns
inc
lock
mov
popa
in
mov
rolb
fadd
jmp
mov
jle
pushf
or
push
mov
and
cmc
cmpsl
sub
xorb
and
mov
loopne
loop
pusha
dec
jb
jns
fwait
out
jecxz
pusha
xchg
loop
jmp
xchg
pop
mulb
bound
push
push
pop
mov
pop
dec
inc
pop
call
fisttpl
jg
jmp
adc
lods
push
lock
inc
or
pusha
mov
addb
nop
out
add
andb
insb
movsb
and
inc
rorl
das
xchg
inc
lock
adc
xor
loopne
jae
mov
pop
xor
push
es
pusha
shrl
xchg
in
xor
jnp
inc
inc
or
and
in
pushf
mov
add
mov
and
shl
ret
inc
cli
aad
jp
lcall
sti
stos
loopne
fldl
andb
int
addb
sbbb
lods
mov
sahf
cld
sbb
add
sbb
and
sub
and
cwtl
and
pusha
adc
pusha
fidivl
dec
andb
pushf
addr16
and
sub
pusha
mov
jb
adc
cmpsb
pusha
sar
xlat
out
mov
outsl
pop
aad
cmovo
ja
stc
andl
xchg
pop
dec
or
inc
fsubl
andb
sub
loopne
aas
xchg
inc
mul
pop
adc
arpl
pop
fldl2t
dec
lock
aam
outsb
and
cmp
orps
addr16
adc
gs
scas
mov
popf
popf
sbb
cmp
mov
test
sub
mov
andb
andb
add
pusha
clc
mov
pop
stc
lret
jmp
adc
pop
stos
loope
pusha
mov
loopne
shr
jp
out
xchg
mov
pushf
sub
rclb
sub
mov
fs
cmp
cltd
jne
inc
pop
push
push
orl
addb
loopne
cmc
scas
inc
inc
xor
andb
xchg
push
rorl
sub
inc
jae
loopne
mov
in
push
or
sar
jae
pop
imul
push
aam
sbb
mov
inc
sub
add
mov
mov
jb
pop
cmp
pop
lock
mov
mov
sub
test
push
push
dec
adc
jno
cmc
jl
leave
push
enter
ja
ljmp
pop
xlat
xchg
pop
pusha
jnp
pop
dec
inc
mov
and
fcomi
iret
pop
push
into
adc
fstpl
inc
xchg
out
dec
cmp
mov
rolb
das
enter
mov
mov
inc
imul
shlb
pop
push
push
mov
xchg
mov
pop
ljmp
mov
arpl
and
and
xchg
in
inc
ror
loopne
inc
lret
frstor
fwait
push
and
mov
xchg
and
orb
mov
mov
adc
push
dec
ficoms
pusha
add
adc
mov
mov
or
fadds
cmp
add
andb
mov
dec
add
mov
mov
loopne
and
mov
into
xor
inc
lds
packuswb
add
inc
addb
in
xor
lret
and
pusha
jmp
in
dec
in
addb
lds
pusha
mov
cmpl
sbbb
xchg
cwtl
or
sub
jle
outsb
push
push
pusha
loopne
fdiv
mov
and
inc
and
mov
je
test
rolb
pusha
sarl
cmp
les
mov
pop
add
sahf
adc
push
andl
mov
mov
rolb
sbb
movsb
mov
call
mov
and
ret
dec
mov
push
and
and
fwait
nop
fldt
mov
scas
jge
and
inc
inc
ja
jg
lahf
jbe
xchg
scas
pusha
add
aaa
or
pop
jbe
rorl
incl
and
lods
push
movsl
iret
outsl
sub
aad
and
inc
ja
aad
cltd
lds
jmp
pusha
lcall
adc
leave
or
loopne
hlt
xchg
lods
push
push
add
icebp
xchg
inc
ljmp
fwait
in
test
arpl
gs
jno
pusha
jp
ss
mov
inc
pusha
icebp
ret
aad
in
push
add
vmread
sub
and
pusha
mov
mov
mov
push
rolb
cmp
jle
aam
adc
fisubl
decb
clc
icebp
call
dec
dec
xchg
fldt
dec
mov
dec
xchg
dec
mov
sbb
sub
and
xchg
jbe
fs
jno
imul
sub
jo
or
and
inc
repz
lcall
or
pusha
mov
and
out
fcomip
lock
xchg
cmp
lret
xor
andb
pusha
jg
addr16
jmp
jp
pusha
rcrb
mov
inc
mov
test
jecxz
dec
call
add
inc
popf
pop
aas
repz
inc
add
xchg
lcall
shlb
mov
outsb
sub
jl
cmc
mov
inc
lret
or
adc
sahf
jbe
mov
loop
dec
shll
cltd
pop
loop
mov
clc
mov
inc
cmc
xchg
and
sub
addb
mov
push
push
sbb
js
dec
add
addr16
adc
test
jp
dec
jmp
jo
fwait
xchg
movsb
add
pop
xlat
cmp
mov
fadds
insl
xchg
aaa
and
mov
arpl
dec
add
loopne
in
jge
xor
cli
adc
xchg
out
rcll
inc
enter
inc
aaa
gs
or
shlb
test
loopne
andb
add
aam
xchg
or
add
ja
in
addr16
pop
adc
sbb
inc
inc
fbld
fsts
push
in
inc
add
fiaddl
and
mov
ret
fdivrs
and
arpl
loopne
mov
outsl
iret
pop
jmp
fwait
movsb
and
arpl
add
lahf
scas
ss
pop
jmp
lahf
fbstp
lret
add
inc
adc
inc
inc
adc
inc
jg
pop
mov
aas
enter
mov
popf
xor
aad
mov
pusha
hlt
inc
jmp
xor
scas
or
inc
mov
lret
dec
or
out
cmp
sbb
mov
cwtl
xorl
pop
cmp
setae
inc
outsb
sbbl
mov
lea
add
xchg
aas
sbb
inc
mov
insb
test
rolb
pusha
and
add
inc
xchg
mov
ret
jno
pusha
inc
lds
add
pop
jns
in
mov
dec
in
mov
fsubs
mov
sbb
push
or
inc
divl
sbb
xchg
jae
andb
dec
xlat
fistpl
or
add
ja
xor
repz
jge
inc
pusha
pusha
mov
mov
das
cmpsl
out
jmp
jmp
lock
push
popa
in
jns
push
es
pop
sub
adc
vmovd
loopne
fimuls
mov
add
xchg
or
mov
push
hlt
add
ficoml
cmp
in
iret
push
andb
in
xor
loopne
std
stc
arpl
mov
xchg
inc
call
add
lods
and
call
lahf
lea
and
and
and
ss
mov
jbe
fwait
push
shlb
xchg
orb
aad
push
loopne
out
xchg
adc
leave
nop
sub
mov
mov
imul
insb
das
pop
xchg
adc
xor
adc
dec
fcomip
adc
and
adc
sahf
pushf
sbb
jno
xchg
and
in
shll
lods
repnz
loopne
mov
popa
adc
loopne
inc
add
cmp
data16
js
push
loop
ljmp
pusha
ja
popa
jns
cwtl
aam
mov
lods
add
cmp
shl
mov
sub
pop
or
scas
push
lods
add
jo
jns
push
mov
mov
shlb
pop
mov
in
add
shrb
add
sbb
push
add
lods
jns
mov
jbe
test
mov
and
pushf
jp
push
push
lods
and
addb
and
inc
push
push
pusha
orb
in
dec
cmp
mov
jne
in
jge
mov
inc
pop
outsb
jp
lock
mov
loopne
mov
stos
iret
and
cwtl
push
insb
pop
cmpsl
cmpsb
pusha
pusha
mov
inc
mov
loope
int
in
inc
add
and
sbb
xor
mov
adc
inc
addl
mov
and
call
mov
mov
mov
jmp
pusha
sarb
mov
dec
shrl
aad
or
lds
lods
mov
push
int
add
push
lods
dec
fidivs
cmp
sbb
mov
or
or
push
pusha
pusha
mov
inc
pusha
mov
mov
push
push
push
fsts
inc
jg
cmpl
mov
movsl
mov
out
jns
sarb
add
add
movsl
loop
cmp
sbb
rolb
sbb
aas
adc
arpl
xor
cwtl
cmc
pop
or
rorl
push
push
cli
push
addb
fisubrl
and
arpl
and
out
pop
popf
scas
scas
and
pushf
rorb
cltd
aaa
adc
xor
mov
pop
jmp
ficomps
inc
mov
aad
pop
pop
mov
aaa
out
or
add
inc
inc
addb
ss
push
andb
mov
shl
into
fldenv
out
jbe
scas
push
shl
xchg
inc
add
inc
inc
scas
and
mov
lock
mov
cmpsb
pusha
inc
mov
test
sahf
fistpl
jl
arpl
pop
xor
inc
add
adcb
dec
ljmp
ret
pop
jno
into
ficoms
pusha
xchg
inc
xchg
aam
lock
cmp
shr
ret
lret
pop
inc
cmc
rclb
andb
or
sub
nop
add
mov
out
fisubrs
bound
lods
mov
jbe
cmp
outsb
pop
inc
je
xchg
js
lods
fsub
xchg
dec
loope
je
jecxz
vpsubusb
shlb
push
cmp
outsl
or
inc
inc
popf
xchg
mov
xor
add
mov
mov
pop
jbe
jns
jmp
rclb
icebp
jle
mov
xchg
sbb
fsubrs
adc
loopne
push
test
xorb
test
mov
mov
and
ret
inc
fldcw
lea
pop
aas
call
fwait
popa
xor
fadds
stc
push
pop
add
mov
fcmovnbe
jns
xor
mov
pop
adc
xor
xor
cmc
jecxz
push
mov
or
scas
andb
sbbl
movsb
add
fistpl
pusha
push
dec
sbb
sti
int3
aaa
or
pusha
std
adc
inc
or
mov
andb
pusha
pop
or
add
imul
sbb
ja
fucomp
out
adc
add
daa
in
mov
jo
pusha
shrb
mov
mov
loopne
or
sarb
mov
xchg
mov
clc
push
dec
or
pushw
pusha
inc
dec
shll
pushf
push
and
xchg
out
mov
movsb
pusha
andb
mov
sbb
popf
out
and
daa
gs
pop
adc
mov
dec
xor
test
pusha
inc
adc
and
andb
or
pusha
aam
xchg
sub
xor
int3
mov
mov
in
enter
mov
adc
mov
pop
ficoml
or
loopne
ds
and
mov
xor
and
adc
inc
mov
push
inc
adc
fs
sbb
mov
cmc
out
inc
add
rorb
loopne
cmp
add
jp
outsl
xor
insl
pop
dec
xor
cld
or
jg
mov
enter
repnz
dec
mov
push
pop
das
lahf
mov
and
and
pop
dec
arpl
push
pusha
loopne
xor
adc
inc
dec
adc
pusha
pop
gs
sbb
inc
ret
lea
dec
popa
enter
jge
sti
cwtl
and
xorb
mov
subl
inc
sahf
cmp
xchg
pusha
idivl
leave
std
sub
in
push
mov
rolb
mov
push
sahf
and
les
xchg
fs
lahf
jnp
pmuludq
rep
scas
pusha
ss
imul
add
mov
lret
mov
dec
in
mov
daa
jge
ds
fsubl
test
and
mov
jbe
jae
add
add
mov
jnp
xlat
out
cs
and
xchg
fucomp
pop
cmp
pusha
add
add
cmp
xchg
jbe
or
and
mov
loopne
push
adc
jo
xor
call
addb
add
mov
lcall
inc
mov
mov
fldcw
inc
loopne
test
adcb
or
mov
das
stc
ret
add
test
shl
or
out
jae
and
sub
push
fstp
out
mov
adc
popf
pop
rcl
pop
lods
and
pop
fs
sbb
sbb
add
rolb
mov
int3
cmp
addb
cltd
lret
ret
dec
test
addr16
dec
out
and
outsl
fistpl
inc
add
popf
jo
xlat
mov
imul
jp
shlb
data16
rcr
jmp
inc
inc
retw
and
clc
adc
sub
pusha
fwait
popa
sub
jne
mov
mov
mov
cmp
add
sbbb
out
xchg
sub
inc
inc
xchg
pop
popf
out
std
shrb
push
and
fldt
push
xor
mov
mov
imull
pop
cmp
fwait
shll
xor
loopne
scas
fnsave
jns
rolb
ret
lods
ret
xchg
cmp
xor
scas
loopne
cwtl
pop
add
sub
add
push
or
cmpl
int3
dec
xlat
shrb
sarb
mov
jb
push
test
loopne
mov
sbbb
jo
push
nop
pop
test
and
add
xchg
aas
and
inc
cltd
add
adc
inc
and
fwait
add
pusha
mov
push
mov
xchg
inc
ss
push
loopne
xchg
adc
xchg
mov
jb
fsubs
and
sub
fwait
mov
stos
and
mov
pop
mov
sub
cmpsl
dec
test
adcb
neg
shrl
out
dec
cmp
in
push
add
inc
push
fmull
dec
push
push
roll
pop
sub
mov
iret
pop
pop
xor
andb
sbb
scas
enter
xchg
adc
or
shlb
movsb
mov
or
addb
push
repz
inc
dec
cmp
ret
push
pushl
or
addb
js
inc
and
push
lods
sbb
pop
xchg
pop
dec
ret
jno
pusha
add
stc
sub
pusha
and
add
pusha
ljmp
imul
loopne
outsb
lods
rolb
andb
cmc
sbb
test
pop
cmp
not
pop
fld
jp
mov
mov
or
dec
mulb
imul
lods
das
jae
inc
pop
adc
aam
xor
push
aaa
fidivrs
mov
push
stc
adc
inc
add
fdivr
inc
mov
mov
pusha
jne
push
nop
push
push
ret
pusha
inc
cmpb
test
add
das
icebp
xchg
mov
out
and
push
clc
pop
addl
mov
mov
lret
inc
aad
pop
fldenv
pusha
mov
jb
xchg
mov
xchg
xor
mov
mov
cmc
add
xorb
xor
andb
push
jl
cmove
andb
data16
sub
mov
adcl
test
loopne
xor
pop
add
push
aas
test
rolb
xchg
ds
pop
pusha
pop
into
mov
mov
andb
test
mov
cmp
in
inc
push
sbb
adc
popa
push
cltd
inc
aaa
stos
pusha
add
lcall
xor
adc
and
adc
ret
sbb
addr16
inc
xor
dec
pop
lea
pop
inc
mov
rclb
fistpl
fs
and
xchg
repnz
cli
sub
scas
xor
divb
loopne
shlb
jae
pusha
out
jno
xor
inc
aad
das
mov
jno
adc
pop
jl
push
sti
rcrl
dec
test
lahf
pop
sub
dec
xlat
stc
outsl
push
cmova
mov
mov
or
mov
adcl
push
inc
sub
call
pop
mov
leave
xchg
push
mov
mov
cli
sub
js
and
lods
mov
sub
fs
pushf
out
outsl
loopne
adc
cld
sbb
addr16
ficoml
inc
dec
push
cmp
and
pop
inc
nop
popa
xchg
ret
stos
loopne
push
jg
imul
add
cmc
sub
add
or
loopne
jbe
push
ret
cmpsl
fcompp
cmp
pushf
in
pop
iret
add
rclb
add
aas
icebp
cs
pop
inc
and
pusha
imul
inc
fisttps
cltd
adc
xlat
std
in
out
lret
call
fstps
add
shrb
inc
inc
rcr
or
inc
sbb
shlb
into
cmpsb
shlb
sub
in
push
pop
adc
fcomip
inc
mov
sbb
mov
add
pop
or
mov
in
daa
negl
mov
xchg
mov
mov
test
mov
jne
pusha
inc
jae
lret
cmp
adc
add
pop
out
bound
aas
xor
adc
xchg
lcall
add
push
loope
loopne
int
mov
mov
pusha
shr
cmpsb
add
aaa
adc
mov
jbe
mov
and
push
arpl
popa
xchg
add
aaa
dec
ljmp
push
pop
dec
dec
lods
mov
shlb
pop
inc
push
jo
fs
pop
add
frstor
adc
and
fldt
xor
test
int3
jb
or
int
adc
addr16
data16
xlat
subl
mov
pusha
adcb
add
int3
jl
subl
loopne
pop
icebp
xchg
xchg
inc
sar
daa
outsb
fldcw
pusha
mov
loopne
adc
stos
das
jge
xlat
in
inc
push
jno
inc
in
cmp
pusha
add
and
sahf
or
and
hlt
mov
inc
add
negb
sbb
lahf
dec
movsl
imul
cwtl
adc
frstor
call
push
xor
ret
or
shll
shlb
fcomp
sarb
dec
xor
icebp
add
inc
add
dec
dec
or
shlb
hlt
mov
lret
daa
xor
pusha
sub
add
sti
mov
stos
mov
repz
xchg
scas
sarl
mov
in
inc
daa
jl
int
inc
lds
add
insb
mov
insb
movsb
mov
fsts
fisttps
or
xchg
int
and
sbb
xor
ljmp
adc
fdiv
jno
mov
loopne
pop
lock
push
stos
add
leave
es
and
push
adc
mov
mov
mov
mov
ret
aaa
clc
pusha
cmp
stos
cmp
mov
hlt
cmp
fisttps
inc
mov
pusha
and
cmp
push
loopne
mov
sub
dec
jae
mov
mov
andb
out
and
jae
or
cs
push
icebp
loope
dec
jo
imull
mov
leave
and
pop
inc
lock
insl
pop
fidivrs
cltd
clc
rcrl
andb
js
add
push
sbb
je
cmp
out
xor
call
inc
fisubs
lret
xor
call
or
inc
xor
jecxz
nop
xchg
rclb
jnp
xchg
jnp
lcall
dec
and
inc
fldcw
or
std
lods
push
fcomip
or
adcb
stc
arpl
xor
addb
pusha
addb
or
cmp
sbb
cld
js
mov
loop
add
xor
or
adc
push
and
mov
inc
or
jo
int3
sbb
and
add
addb
lcall
mov
fistps
shl
or
lea
pusha
rol
orl
cld
adc
push
test
shl
ljmp
popa
cmp
shlb
sub
push
inc
addr16
inc
andb
sarb
iret
mov
jg
fildll
pusha
movsl
mov
mov
lods
mov
rolb
add
int3
sbb
and
push
ljmp
shlb
and
sbb
xchg
adc
fidivrs
fisttpl
and
movsb
inc
add
cmp
mov
daa
insb
cmp
jmp
inc
pushf
mov
sub
btc
jbe
es
and
imulb
push
insl
cltd
loopne
icebp
popf
lods
sti
inc
sub
add
int3
les
sbb
cmp
loopne
popa
jmp
ljmp
test
cmpb
and
addb
and
sub
jo
sahf
mov
repz
mov
adcb
mov
lcall
xchg
stos
inc
inc
jnp
lret
mov
push
mov
je
mov
rolb
add
mov
mov
inc
sahf
xchg
sbb
adc
jnp
bound
mov
into
add
mov
sbb
sub
sub
pop
jg
adc
inc
add
rclb
les
inc
sbb
mov
pusha
fbstp
and
mov
cmp
jg
add
jbe
jns
sti
lcall
inc
loopne
sbb
scas
and
mov
and
add
and
clc
jns
les
loop
dec
roll
andl
loopne
jb
ficoms
adc
out
fndisi(8087
jbe
and
pop
push
pop
rcl
std
into
loopne,pn
inc
mov
xchg
pusha
cmpsb
loopne
push
popf
add
fidivrl
loopne
pop
jmp
jno
mov
loop
mov
cmp
inc
inc
fwait
pushf
iret
test
imul
add
add
shlb
sub
inc
sbb
mov
js
pop
in
loopne
pop
dec
cmp
les
lcall
fbld
lds
das
or
pusha
inc
sub
test
mov
add
push
loopne
xchg
es
adc
sbb
loopne
ret
push
inc
ret
lret
xchg
in
stos
addb
inc
jae
dec
lcall
shr
mov
pusha
addb
xchg
sbb
jno
adc
inc
jge
rolb
add
add
data16
and
rol
rolb
xor
pop
jne
cli
out
cli
adc
insl
call
xor
xchg
shll
aaa
xchg
inc
cmp
ja
scas
imulb
loopne
mov
stc
sub
clc
push
test
test
ljmp
and
push
shl
inc
stos
in
push
inc
fs
mov
xchg
sarb
les
push
jae
rorb
and
inc
pusha
jns
popa
stos
cmp
adc
imul
sub
and
add
repnz
mov
aam
loopne
mov
add
imul
shlb
and
push
arpl
mov
loopne
jg
push
std
pop
push
in
jo
inc
pusha
aas
mov
rcr
fdivs
jo
add
xchg
and
push
sub
das
inc
lods
shlb
fstpl
or
stos
aaa
in
mov
xchg
ret
or
loopne
pop
push
andb
push
adc
arpl
std
shll
lahf
movups
pop
sub
push
pusha
cltd
sub
cs
cmpb
cmp
jbe
mov
xchg
std
push
and
inc
push
xchg
push
mov
pop
faddp
xor
adc
shlb
xorb
jbe
pop
sub
loopne
lock
hlt
lods
loopne
jae
pop
js
inc
shrl
data16
sbb
mov
mov
sub
and
fcoml
bsr
out
jb
push
pop
dec
dec
push
shlb
dec
sbb
loopne
pop
lods
cli
or
test
and
mov
loopne
stos
mov
mov
cs
add
push
xor
sbb
andb
push
jl
cli
sub
pop
mov
das
popf
repz
sbb
imul
fcoml
cmc
mov
loopne
and
loopne
movsb
rolb
and
movsb
addb
jns
sub
pusha
inc
lods
xchg
pop
push
push
add
mov
pusha
js
loopne
jl
std
dec
addr16
fisubl
xor
scas
pusha
shl
test
ret
sub
outsb
fcomip
inc
pop
jnp
and
and
sbb
pop
test
jb
push
add
pusha
push
xchg
rcrb
fwait
std
test
add
repnz
sub
rcl
add
inc
and
addr16
ds
clc
add
orb
jmp
stos
sbb
shl
push
jo
decb
mov
lods
or
adcb
push
movsl
cmove
fs
sbb
icebp
mov
inc
jne
out
fs
aam
inc
mov
loopne
sub
out
sub
inc
lahf
leave
add
test
sar
push
lahf
addb
std
pushf
and
pusha
jb
mov
push
inc
jg
ret
mov
xchg
shrl
mov
and
and
repz
jno
lcall
les
popf
loopne,pn
mov
add
rorb
call
fiaddl
ror
loopne
addb
loopne
adc
inc
insl
dec
jns
pop
fidivl
popa
popf
mov
lea
insl
iret
add
pusha
andl
pop
add
rcrl
shlb
ja
mov
dec
movsb
add
lcall
xor
in
decl
and
loopne
jp
rcll
mov
aaa
test
rcl
iret
dec
dec
sbb
pop
jno
dec
fdiv
push
push
and
push
fisubl
loopne
jg
stc
xor
cs
inc
cmpsl
xlat
or
and
rclb
rorb
stos
sub
loopne
in
add
repnz
daa
cmp
adc
pop
push
mov
add
jo
test
pusha
loopne
das
xchg
clc
shll
xor
mov
sti
jmp
add
shl
cltd
xor
or
arpl
cld
jbe
adc
jno
add
andl
sbb
ret
nop
xor
sarb
add
dec
xchg
sahf
test
add
and
and
mov
add
dec
sub
orb
mov
iret
cmp
add
dec
pop
stc
aad
add
ljmp
add
cli
sbb
movsb
rolb
sbb
jb
jg
sbb
sub
out
andb
rorb
das
clc
imul
lret
ljmp
sbb
call
xor
mov
gs
push
push
pop
add
mov
andb
loopne
das
pusha
or
add
jmp
add
jecxz
out
inc
mov
jo
xchg
popf
sub
sbb
and
arpl
fldenv
add
divb
iret
jne
pop
scas
arpl
add
leave
cli
sbb
pop
rcll
pusha
push
imul
mov
nop
sbb
lret
imul
inc
inc
and
mov
imul
mov
or
test
loopne
stos
inc
loopne
jecxz
inc
inc
dec
fcmove
pop
cltd
enter
push
mov
subl
jno
mov
mov
ljmp
xor
mov
and
sub
cmpsb
pusha
and
jbe
les
adc
add
and
clc
adc
gs
inc
loopne
jb
xchg
insl
int
inc
ror
mov
push
dec
fisubrs
in
jnp
aaa
mov
shrl
lahf
bound
repz
mov
push
cmp
in
mov
and
mov
lcall
xchg
cmp
cltd
mov
insl
inc
test
mov
inc
and
push
insb
mov
pop
gs
xchg
mov
xchg
xchg
stos
popf
push
inc
rclb
test
push
xor
mov
sbbb
add
loopne
fidivrl
pop
fidivs
mov
ja
shlb
lds
aad
pop
or
and
aam
enter
xor
sbb
addb
shlb
pusha
and
sahf
and
sub
addb
xchg
inc
sbbl
inc
or
lahf
xchg
mov
outsl
inc
and
add
scas
pusha
andb
nop
mov
fadd
stos
add
xchg
dec
and
rolb
mov
cmpsl
mov
xor
sti
popa
inc
outsb
inc
sub
mov
pop
inc
out
sti
inc
dec
push
unpckhps
mov
fnstcw
add
pushf
sub
je
jl
or
test
fs
cmp
pop
xchg
outsb
inc
repz
jno
mov
test
test
xor
push
out
mov
add
fimull
test
and
call
cmp
xor
lret
and
call
inc
mov
repnz
and
shrb
mov
cmc
fwait
mov
call
dec
dec
mov
ds
mov
pusha
andb
mov
jbe
loopne
jnp
xlat
ljmp
insb
lcall
sbb
push
mov
test
lock
xchg
inc
xor
push
test
pusha
jg
dec
jne
ret
pop
xchg
mov
movsb
shl
das
int
stc
and
and
mov
pusha
xor
sbb
imul
pusha
iretw
jo
inc
add
int
xchg
jecxz
ds
shrb
movsb
and
scas
and
fcos
jb
fucomp
and
enter
xchg
lds
push
mov
icebp
xchg
pop
and
add
inc
mov
add
pop
lock
xchg
mov
sub
and
inc
sbb
add
xchg
mov
pop
lods
cli
mov
mov
aas
adc
jmp
lcall
and
test
jmp
lods
andb
add
push
lods
and
lds
lock
and
hlt
int3
das
xor
shrb
int
adc
aad
jbe
js
xor
les
mov
shlb
jno
mov
push
push
xor
mov
mov
push
xchg
cmc
mov
or
mov
arpl
ret
sbb
test
xor
loopne
popf
sbb
mov
sbb
mov
sub
pop
dec
loopne,pn
lret
out
enter
and
rcrb
inc
push
mov
xor
ret
add
lds
mov
testl
push
mov
mov
lock
jb
xor
sbb
pusha
inc
fs
mov
add
add
jnp
ffree
push
stos
lcall
and
daa
repz
popa
inc
xchg
pop
xchg
mov
mov
sbb
xchg
dec
sbb
add
mov
jge
aad
addb
nop
int
dec
fldl
out
out
jle
stos
bound
repnz
imul
ret
mov
pop
xchg
ja
shrl
iret
add
imul
jno
outsb
out
rcrb
push
mov
data16
hlt
push
add
jg
shlb
inc
shlb
and
fs
daa
hlt
pop
in
jns
dec
push
addb
enter
fcmovb
or
mov
mov
ror
andl
fistpl
xchg
mov
or
dec
js
scas
mov
xchg
lods
mov
pusha
and
pop
push
push
mov
pop
add
loopne
mov
addb
push
push
mov
pusha
js
mov
out
scas
fistl
imul
aaa
int3
push
and
add
mov
ljmp
mov
add
mov
jo
aaa
scas
and
push
jl
hlt
lret
and
dec
dec
fiadds
mov
rolb
test
scas
dec
fimuls
sahf
add
add
xchg
adc
pusha
ljmp
fnstcw
jg
jns
inc
jo
xchg
aam
daa
pop
mov
push
addb
and
pop
loop
xchg
lcall
pusha
test
mov
movsb
mov
xchg
mov
fsubr
dec
jo
mov
mov
pop
sti
shl
mov
imul
sarl
andl
pusha
mov
cmpb
xchg
je
add
xchg
ret
dec
mov
and
pusha
mov
mov
jnp
inc
shr
inc
lods
jno
push
push
pop
push
stos
pop
sbb
ret
addb
inc
sub
mov
mov
inc
mov
sti
push
lret
shl
jmp
dec
ljmp
push
sbb
adc
xor
js
dec
adc
test
pusha
mov
lret
fsubrl
or
pop
je
int
nop
das
jbe
xor
cmp
cltd
xchg
jge
sbb
sub
and
jne
or
movsb
and
mov
addb
push
clc
and
andb
xchg
jno
push
xchg
jecxz
out
imul
std
pop
movsl
out
fsubl
jecxz
mov
push
and
nop
imul
add
push
popf
pop
icebp
cmp
fs
leave
dec
xchg
xchg
lea
pop
xchg
out
add
mov
add
mov
push
mov
dec
jp
inc
xchg
push
mov
clc
repz
cltd
into
pop
mov
ficompl
int
data16
cmp
aaa
loop
inc
add
dec
data16
mov
push
or
adc
orb
mov
xchg
lahf
sbb
jno
xor
ss
jg
cmpsl
rclb
addr16
jmp
mov
add
adc
and
insl
lcall
loopne
lahf
adc
inc
push
pusha
add
jmp
mov
adc
jno
xchg
adc
das
outsl
inc
sub
outsb
jne
ds
and
movsl
neg
aam
mov
ret
mov
in
ds
shrb
add
and
mov
sub
mov
iret
cs
shlb
push
add
outsl
rolb
jp
addb
lock
mov
rolb
and
in
andb
xchg
inc
pop
iret
xchg
insb
mov
fbstp
and
loopne
iret
sbb
sti
mov
inc
or
shlb
loopne
push
jbe
clts
loopne
xchg
cs
adcb
pop
dec
pop
les
cld
loopw
push
movsb
inc
adcb
int3
pop
daa
je
mov
jg
dec
sbbl
sbb
xor
mov
out
jbe
xchg
enter
and
loopne
dec
fcmovnu
mov
cltd
aaa
cli
cmp
push
inc
rclb
fs
mov
add
pusha
mov
jns
pusha
inc
and
lret
cmovo
loopne
sub
push
add
pusha
add
dec
push
cmpsb
loopne
aam
test
add
popa
fbld
addr16
rcrl
or
stos
mov
mov
add
mov
loope
and
mov
cmp
push
add
jns
pop
dec
add
js
adc
pop
lahf
cmp
xor
or
jae
jbe
jb
int
fnsave
stos
and
and
pusha
fwait
jmp
sarb
sbb
inc
inc
push
pop
xor
pop
out
outsb
add
add
shl
and
add
push
jbe
and
xchg
pushf
or
mov
mov
pusha
mov
add
mov
popw
leave
in
mov
cmpsb
shlb
fsts
xchg
insl
and
mov
cmp
scas
dec
test
push
sahf
dec
dec
pop
ja
and
dec
mov
xchg
gs
lods
or
sub
xorb
mov
pop
pop
int3
sub
sbbb
dec
fsubl
cwtl
pop
mov
inc
pop
aam
cmp
or
sub
sbb
and
pop
dec
out
pop
roll
loopne
fadds
mov
icebp
pop
jne
fs
sarb
xchg
mov
pop
int
jo
aad
xchg
and
ret
out
gs
ret
add
dec
and
mov
lds
xchg
cltd
inc
or
push
sbb
jg
xor
dec
aas
test
loopne
mov
push
andb
loopne
lea
sbb
addb
pusha
loopne
dec
fsubrl
into
mov
sbb
mov
push
xor
imul
sar
jl
cmc
mov
addb
jge
in
adc
out
cmp
lock
inc
dec
test
es
loopne
mov
mov
xor
dec
lea
dec
movsl
push
inc
orb
xchg
mov
loopne
movsb
addb
andb
inc
inc
xchg
mov
inc
cltd
ror
fs
addb
inc
mov
mov
cmp
cli
cmc
jns
notl
lret
lods
mov
push
ljmp
mov
jbe
sbb
out
andb
sti
xchg
aaa
iret
clc
pop
into
repz
loopne
pop
add
pusha
push
incl
clc
aad
fs
sbb
cmp
and
fisubrl
jns
fnsave
adc
xchg
xor
loopne
popf
ss
mov
mov
push
sbb
gs
mov
pusha
roll
pop
adc
lods
inc
mov
inc
dec
dec
xor
mov
lods
xchg
lods
pusha
sarb
fs
lar
loopne
outsb
mov
sbb
bound
daa
insl
mov
inc
or
rolb
cmp
andb
loopne
in
or
xor
cmp
loopne
xchg
xor
adc
popf
cmc
jnp
aaa
lcall
imul
mov
test
and
rorl
repz
jb
xchg
cmpsl
push
addb
scas
pusha
add
jo
dec
jno
dec
push
addb
push
xchg
ja
shlb
repnz
jp
xor
loopne
or
and
and
push
leave
icebp
icebp
out
xchg
sar
lahf
push
pushl
sbb
cld
or
mov
dec
pop
pop
push
sbb
and
and
push
mov
cli
fisttpll
or
loopne
inc
xor
pop
lods
and
jl
and
lcall
mov
aas
out
rol
dec
xchg
subl
xchg
add
adc
xchg
dec
mov
mov
mov
daa
pusha
ja
push
ja
push
into
mov
jb
mov
iret
aas
jnp
mov
cmpsl
xchg
and
rcrb
dec
dec
and
rolb
or
pusha
loopne
push
sbb
xor
cli
pop
arpl
in
lock
pop
xchg
adc
mov
popl
pusha
mov
push
dec
addb
xchg
add
mov
cmp
lret
sub
push
jb
addb
jno
push
inc
cmp
daa
pop
jge
xchg
nop
push
fcomps
loop
add
das
cmp
jg
push
rolb
xor
shlb
movsb
inc
and
add
movb
rorl
aam
adc
mov
andb
dec
xor
shll
sbb
pusha
loopne
sub
add
add
cmp
xor
cmpsl
mov
add
lahf
xchg
inc
js
in
mov
cmp
cwtl
cmp
mov
mov
and
rolb
ror
filds
addb
xor
pusha
pop
outsb
sbb
out
jmp
ret
xchg
pusha
cltd
add
inc
ds
clc
jno
xchg
ret
fists
in
sti
pop
pop
and
xor
sbb
add
cmpsb
rolb
andb
sbb
add
jb
scas
mov
movsb
and
or
xchg
sbb
inc
push
cmpsl
push
push
push
andb
in
mov
pop
js
stos
pop
and
add
cmp
fadds
shl
testb
push
outsl
jb
jge
lret
or
aas
adc
xchg
jo
mov
inc
or
and
aaa
addb
pop
push
cwtl
or
sbb
push
xchg
les
push
cli
lahf
fstps
mov
fdivl
adc
mov
xchg
xorb
push
push
mov
mov
das
xlat
xchg
cld
inc
xchg
gs
outsl
push
push
das
dec
push
imul
loop
mov
addr16
and
icebp
fsubs
nop
jno
jmp
dec
jecxz
adc
add
adcb
mov
mov
ret
shlb
jno
stc
fldenv
ja
shll
andb
bnd
je
cmc
inc
mov
sub
cmp
mov
mov
pop
xchg
xchg
push
loopne
repnz
fimull
pusha
ror
rcrl
pop
lods
pop
mov
add
daa
add
add
mov
sbb
int3
pop
jle
js
scas
add
mov
cmp
out
repnz
addb
xor
stos
rolb
aas
ret
roll
sub
dec
jl
add
add
shll
mov
scas
inc
je
jnp
pusha
pusha
and
in
sahf
dec
out
push
sbb
sbb
cmp
push
mov
movsb
addb
shlb
mov
mov
jae
dec
fwait
imul
xchg
addr16
ror
mov
xor
inc
roll
test
inc
pop
or
mov
and
ljmp
mov
pop
pop
lea
jle
cmp
loopne
push
dec
leave
not
and
sbbb
inc
dec
rcrb
lahf
les
andb
imul
add
push
rcr
sbb
push
pop
push
loopne,pn
dec
cmc
cwtl
sub
cmp
adc
xlat
lret
inc
popa
outsb
and
sbbb
loopne
mov
mov
mov
movsl
test
andb
jmp
mov
and
pop
dec
insl
lret
mov
inc
aad
xor
jp
fsts
jnp
inc
and
insb
mov
hlt
scas
rcr
jo
xor
add
outsb
xor
pop
shll
push
imul
sub
mov
add
mov
shlb
add
add
dec
nop
shlb
xor
adcb
inc
mov
adcb
jo
pushf
lock
jb
inc
shl
xor
sahf
imul
addb
inc
pop
or
pusha
rcrb
loopne
push
sub
add
das
out
pushf
jnp
les
push
jecxz
lret
loopne
jg
jb
sahf
jp
in
fnstenv
xchg
outsl
and
add
inc
inc
fs
cmc
cmc
cli
adc
into
int
jo
push
pop
xor
pusha
xlat
sub
cmp
pop
sbbl
jp
push
and
ret
jmp
je
inc
arpl
andb
rolb
mov
jnp
mov
mov
mov
bound
and
addb
rolb
cmc
mov
jge
pusha
sbb
mov
in
sub
lcall
mov
push
icebp
mov
lods
shlb
and
pop
mov
divb
insb
out
addr16
addb
adc
lods
pusha
loopne
inc
inc
loope
rcl
imul
loopne
and
sbb
inc
es
sub
add
pop
adc
hlt
push
xlat
dec
rcll
xchg
push
cmpsl
add
shlb
lods
gs
cld
popf
xchg
cld
les
rolb
dec
sqrtps
lock
outsl
pop
xor
pop
pop
push
shlb
in
pop
clc
loope
jl
fwait
mov
and
js
sbb
pop
pop
stos
jmp
pop
test
jp
cmc
pop
pop
aas
test
pusha
pusha
out
loop
insb
sub
pusha
cmp
and
in
repnz
lock
add
or
mov
lods
loopne
push
jge
mov
push
push
jmp
sar
adc
jg
inc
mov
push
mov
fistl
and
mov
push
lds
loope
xor
outsl
repnz
adc
es
and
dec
mov
cmp
lahf
xor
imul
mov
loopne
in
cmp
movsb
mov
divl
lcall
jmp
repz
mov
mov
fstpt
jecxz
cli
pop
clc
cmc
lret
andb
mov
add
loopne
fildl
xchg
push
insl
sub
jecxz
stos
and
addb
inc
sub
add
movsb
add
push
shr
negb
es
imul
xchg
or
mov
add
dec
mov
add
in
cmp
xor
adc
add
and
mov
loopne
test
add
jae
pop
pop
in
cmp
pusha
loopne
clc
add
arpl
jge
gs
loopne
out
mov
andb
add
loopne
or
and
pusha
stc
das
pushf
imul
and
push
or
inc
test
xor
mov
inc
push
in
fnsave
xchg
fs
jecxz
mov
sub
sar
inc
dec
insl
stc
inc
adc
xor
popa
ret
addb
lret
and
inc
mov
jnp
mov
les
dec
add
inc
repz
test
mov
jl
mov
inc
mov
jp
mov
mov
mov
je
and
inc
inc
notb
inc
xchg
jecxz
cltd
and
pusha
scas
jb
out
shl
mov
inc
adc
jmp
and
loopne
pushf
popa
into
or
rorb
int
in
mov
shrb
loopne
out
andb
mov
xor
sbb
cwtl
mov
cmp
loopne
and
sub
and
or
jl
and
pop
jns
mov
test
sarb
inc
fimull
in
popf
gs
or
ss
jns
and
out
pop
xor
fidivl
loopne
jbe
out
loopne
sub
jmp
aad
push
inc
inc
daa
addl
loopne
fcoml
jmp
cmp
ss
rcll
fwait
subl
mov
jge
pushf
gs
lock
mov
outsl
dec
xor
lea
add
stc
add
cld
jo
push
mov
or
and
add
jno
push
loopne
dec
test
mov
jno
mov
sbb
push
add
mov
and
rolb
sub
xchg
or
aad
in
dec
pop
pop
fdivrs
ror
fdivrs
jle
loopne
xor
mulb
in
iret
loop
inc
popf
xchg
inc
push
outsl
inc
fldl
pusha
and
cmp
sbb
jb
cmp
data16
and
cwtl
jae
cltd
jle
pusha
and
loop
jmp
pop
cmpsb
pusha
adcb
inc
adc
mov
lods
inc
sub
fcoms
push
ficompl
call
addb
cmc
sub
mov
rolb
scas
lods
and
repnz
jae
and
pusha
and
and
jne
adc
pusha
sbbb
cmp
and
inc
and
std
dec
pop
pop
and
sti
cmpsl
dec
daa
sub
push
fnstenv
push
arpl
jo
out
pop
jne
mov
and
rolb
mov
and
pop
mov
or
loopne
xchg
jge
dec
sub
mov
mov
js
jmp
bound
and
rcl
push
inc
inc
inc
int
and
xor
and
add
inc
stos
cmpsb
and
pusha
inc
imul
rcl
inc
and
mov
adc
xchg
cmp
in
dec
pushf
and
shlb
lds
cmp
jnp
cmp
lods
inc
insl
mov
dec
xchg
and
rol
imul
clc
mov
mov
pusha
push
scas
mov
inc
mov
dec
scas
push
jnp
ficoml
sub
jle
addr16
cmp
arpl
loopne
testl
movsl
xor
adc
or
add
mov
shlb
rorb
test
rcr
negl
mov
xchg
jl
aad
int
mov
lds
add
imul
xchg
inc
ss
jl
inc
lea
sbbl
loopne
pop
insb
mov
in
sub
xchg
pop
in
repnz
loopne,pn
icebp
lahf
mov
and
outsb
fldt
xchg
xlat
xor
loopne
js
cmp
aas
xchg
cwtl
scas
pusha
sarb
xchg
or
pusha
ret
scas
add
fisttpl
sub
aam
daa
mov
scas
add
fnstenv
testb
add
jb
sti
stos
sub
adcb
lds
gs
cs
inc
xor
add
iret
sub
push
cli
andb
sbb
inc
shr
leave
pop
gs
and
loopne
adc
lret
pusha
sub
adc
sbbl
arpl
jb
dec
sub
jge
loopne
push
loopne
mov
insb
mov
inc
pop
mov
fcomps
pusha
xchg
movsl
stos
adc
xchg
and
and
sbb
mov
js
jge
addb
inc
mov
jle
sub
fs
arpl
add
popf
das
out
outsl
mov
rcrb
sbb
xchg
jne
addb
fldenv
mov
sti
lret
inc
mov
rol
hlt
loop
and
movsb
loopne
les
mov
and
stos
loopne
std
loope
xchg
repnz
and
add
mov
shlb
add
sbb
cmc
pop
adc
and
and
dec
sub
inc
and
movsb
pusha
orb
in
push
cmp
dec
sub
push
scas
rolb
mov
xor
scas
shlb
loopne
ret
mov
fstpt
daa
arpl
xchg
mov
scas
pusha
icebp
int
sub
pop
jg
push
and
mov
add
mov
pop
add
pusha
pusha
les
loopne
outsb
xor
cltd
test
pusha
pop
xchg
mov
cltd
adc
stc
stos
loopne
stos
loopne
xchg
jne
or
insb
mov
ret
and
jnp
cmp
cli
ss
ficompl
repz
pusha
loopne
shll
pusha
mov
or
dec
mov
shll
dec
in
jbe
and
cltd
xchg
rcr
xchg
testl
push
jmp
jae
scas
add
popl
xchg
inc
jb
iret
add
fsubrs
xchg
fsubr
ljmp
inc
push
fldt
in
ds
lds
addb
loopne
lahf
sub
mov
roll
repz
cmp
sbb
cmp
cmpsb
inc
subb
add
jmp
mov
sbbb
add
mov
xchg
mov
js
insb
adc
add
xor
rcll
jo
test
loopne
pusha
mov
fildll
loopne
loop
insl
xchg
fisttpl
inc
mov
or
rolb
and
push
addl
std
fidivs
out
push
das
and
or
pop
dec
aas
movsl
cli
cmp
out
in
ds
testb
and
outsb
in
clc
and
in
sub
xchg
popa
xchg
std
sti
push
add
add
fiaddl
pop
cmp
outsb
push
scas
rorb
and
adc
inc
pusha
push
adc
sbb
aam
test
mov
pusha
or
and
lods
loopne
jo
iret
ljmp
mov
nop
mov
scas
inc
mov
push
xchg
push
sbb
push
mov
sbb
push
pop
out
fadds
mov
loopne
and
loopne
push
flds
pop
aad
lock
pop
push
or
push
push
loopne
cmpsl
jge
cwtl
dec
aaa
jmp
mov
pop
int
and
xchg
inc
sbb
and
outsl
jns
lock
mov
rcl
addr16
cltd
jnp
mov
add
mov
dec
adc
dec
bound
bound
int
push
loopne
push
pop
inc
or
cmpsb
add
divb
andl
inc
cwtl
sbb
aad
pop
dec
cwtl
cmp
sub
outsb
icebp
jae
xchg
movsb
loopne
fdivrs
cmp
lods
and
mov
loopne
adc
shlb
mov
imul
addb
es
mov
push
std
jae
sbb
cmp
sbb
inc
mov
jp
sbb
and
xchg
add
mov
jnp
xchg
inc
add
xchg
mov
mov
xchg
pusha
mov
dec
inc
pop
sti
xchg
xchg
popa
cmpsb
shl
and
and
add
loopne
and
repz
xchg
rcrb
pop
mov
loopne
adc
sbb
rcrb
ds
inc
inc
pop
in
fcomp
adc
outsb
fidivs
add
jns
cmc
add
adc
ficompl
stc
scas
fisubs
out
loopne
insb
xchg
lret
lcall
jg
fstl
pop
xor
loopne
mov
loopne
jns
movsb
loopne
popa
jmp
push
sarl
push
clc
jae
add
xor
addb
outsb
mov
pop
mov
sub
push
mov
lret
rcrb
adc
mov
mov
add
pop
maxps
and
test
loopne
add
and
stc
add
jno
iret
cmp
inc
dec
xor
sbb
fwait
cmp
mov
cmpl
mov
adc
jns
or
jecxz
pusha
pusha
rclb
xor
loopne
mov
sarb
xor
shl
sbb
push
mov
enter
sbb
pusha
sub
outsb
jmp
popa
pop
mov
push
lahf
rolb
and
pusha
jge
into
js
mov
xchg
clc
mov
dec
test
xchg
in
loopne
outsb
add
loopne
rorb
mov
jbe
inc
mov
js
pop
xor
mov
fildl
shll
test
rcrl
test
mov
adc
mov
pusha
mov
mov
sarl
addb
xchg
mov
mov
push
inc
loopne
sub
inc
add
aaa
scas
ret
sbb
inc
nop
adc
lret
daa
mov
cmp
mov
aas
nop
ret
in
inc
add
shlb
mov
add
jnp
jno
ja
xor
das
or
pop
xchg
xchg
push
jo
xorl
mov
inc
dec
out
mov
arpl
push
ret
out
jg
test
add
sbb
inc
adc
jns
jecxz
mov
push
in
addb
addb
add
add
push
loopne
in
sub
shrb
int
int3
int
cltd
lods
fmulp
xchg
mov
bnd
aaa
std
stos
andb
int
xchg
pushf
cld
dec
mov
pusha
je
mov
or
cld
jl
inc
mov
add
cmp
add
loopne
add
jp
sti
lock
xchg
dec
pop
lcall
shll
sbb
mov
sbb
lcall
je
lock
xchg
jl
cmp
daa
jle
andb
xorb
jle
in
jnp
pusha
pusha
jnp
dec
push
mov
sti
movsb
pusha
mov
mov
mov
pusha
pusha
clc
in
cmp
imul
pusha
or
repnz
fwait
mov
inc
addr16
lods
andb
mov
cmp
or
orb
pop
cmp
xchg
scas
pusha
pusha
fcoml
and
adc
lock
mov
mov
xor
and
mov
cmp
mov
inc
out
inc
stc
lea
je
inc
int3
xor
ret
sub
mov
imul
cltd
mov
cltd
shlb
inc
fwait
in
out
aam
mov
xorb
pop
adc
inc
data16
cli
clc
mov
pop
mov
cli
testl
loop
aam
sahf
adc
loopne
les
dec
fwait
mov
push
adc
mov
mov
out
insb
das
dec
push
loope
ja
rorb
cmp
popf
jbe
aad
inc
lds
inc
mov
mov
add
jmp
dec
and
pusha
insb
adc
imul
les
in
dec
enter
out
fwait
std
lret
ret
sbb
std
enter
fwait
test
and
mov
push
js
dec
and
sbbb
xchg
hlt
sub
inc
and
inc
aaa
popa
and
jecxz
add
xchg
ljmp
mov
jg
mov
dec
out
pop
rolb
cmpl
rolb
xor
push
cmp
pop
pop
maxps
and
cmpsb
pusha
loopne
in
sbb
hlt
lret
repz
sbb
rorb
cwtl
addb
adc
fdivrp
adc
ja
cmp
dec
add
shll
popa
mov
jnp
movsl
sub
cmpb
and
vcmpps
add
jl
jecxz
mov
xor
jmp
shlb
sbb
addb
pusha
out
shl
add
cmp
rol
pop
clc
and
dec
jmp
push
inc
dec
xor
dec
ret
sub
add
inc
inc
xor
aas
xlat
lret
in
test
add
xchg
shll
add
loopne
fstp
mov
inc
and
and
jmp
and
fiaddl
loopne
stos
shl
int
adc
dec
push
and
add
or
inc
push
jne
add
push
push
jecxz
jp
add
pusha
repnz
divl
das
add
add
mov
ret
mov
in
pop
cli
lahf
xor
in
ljmp
shll
call
push
mov
rcr
jnp
sti
movaps
or
loopne
push
and
dec
bnd
leave
add
mov
in
push
and
iret
aaa
xchg
xor
scas
shlb
dec
push
pop
xchg
push
rolb
mov
or
mov
push
cmp
pop
sub
and
addb
inc
pusha
mov
xlat
fstpl
push
ret
xchg
xor
mov
pop
push
mov
xchg
lods
rol
jae
stos
loopne
mov
mov
cld
out
adc
or
xorb
mov
ret
repz
data16
pop
and
hlt
jp
in
add
mov
leave
jmp
or
ds
pop
add
fiadds
rclb
xor
cmpsb
pusha
sub
sbb
andb
pop
xchg
repz
rolb
and
add
pop
mov
sub
pusha
addr16
mov
loopne
mov
adc
mov
add
mov
arpl
iret
xchg
push
pusha
pusha
jnp
add
ret
cld
sbb
andb
rolb
nop
fcmovu
pop
push
add
shl
insb
push
pop
enter
adc
and
add
dec
mov
and
inc
js
jmp
sahf
xor
imul
pusha
inc
clc
outsb
aam
mov
jbe
andb
cmp
push
movsb
add
xor
js
pop
or
sbbl
mov
sub
jns
dec
cmp
andb
fdivs
fisttpll
inc
loopne
cli
nop
add
addl
adc
shlb
push
xchg
and
insl
mov
push
mov
jp
dec
std
and
fwait
pop
pop
fadds
and
loopne
mov
lods
add
ret
mov
xchg
inc
mov
and
jbe
out
mov
add
inc
and
or
fsubs
rolb
paddusb
sub
add
and
jb
mov
and
test
shlb
mov
shll
sbb
mov
and
mov
int
in
jp
andb
shlb
mov
cmc
push
insb
add
jno
sub
mov
in
loopne
mov
xchg
int3
mov
or
adcb
inc
fidivs
cmp
lcall
adc
and
add
mov
fnclex
in
add
and
ljmp
and
in
cmpsb
mov
mov
inc
pop
fs
jp
lods
shlb
dec
aaa
setle
in
movsl
int3
test
mulb
arpl
mov
mov
mov
add
mov
inc
jae
pop
xor
sbb
dec
popf
sbb
fmulp
gs
rcrb
cwtl
test
inc
shl
rcll
inc
fildll
dec
lahf
sti
xor
lahf
stc
smsw
xor
or
lds
sub
rorl
cld
ds
outsl
out
jne
jecxz
push
add
int3
gs
call
test
insl
jl
add
lcall
fidivl
or
stos
add
mov
stos
cwtl
ja
xchg
adc
mov
dec
es
adcb
test
jle
xchg
push
mov
xlat
pop
mov
inc
cmp
inc
fldcw
xor
loopne
add
lret
sbb
inc
pusha
les
push
and
insl
dec
andb
int
iret
aas
jp
insb
pop
pop
out
cmpsl
push
xchg
enter
cld
mov
adc
jno
mov
cmpsl
mov
jecxz
xor
mov
jne
loopne
fmul
clc
leave
xchg
mov
xchg
sub
imul
adc
and
test
mov
rclb
mov
add
out
inc
popa
mov
push
mov
jno
imul
xchg
fisttpll
pop
addb
mov
pop
iret
cmp
mov
mov
cmpsl
push
outsb
and
mov
push
iret
or
xchg
dec
dec
and
rorb
pop
pop
xchg
mov
testl
rcll
inc
and
rolb
mov
jbe
shll
rorb
and
inc
push
lcall
inc
insl
cmp
popa
sbb
add
adcl
loopne
or
mov
fsubs
mov
rolb
in
jno
sbbl
adc
xor
loopne
mov
inc
sbb
rclb
stos
add
xlat
xchg
jno
call
mov
enter
sbb
add
xchg
cmp
loope
add
inc
pop
xor
xchg
mov
pop
add
shl
sahf
pop
and
or
pusha
sub
inc
pusha
out
dec
lret
push
add
stos
movsb
inc
loopne
sub
andb
test
sti
add
fbstp
out
cltd
adc
pusha
rcl
add
cs
or
lods
andb
xchg
aad
inc
fnstcw
jp
mov
sub
int3
insb
mov
lcall
ss
cld
jge
cmp
adc
and
shll
shrl
add
mov
jg
pop
test
shrb
or
add
jle
js
mov
imul
push
xchg
push
mov
and
jge
je
xor
dec
lods
shlb
dec
sbb
push
add
push
xor
vandps
orl
pusha
cwtl
cmp
lret
in
inc
shl
sub
mov
in
or
pusha
and
add
mov
jb
mov
stos
mov
out
adc
inc
sarb
int3
push
hlt
icebp
shl
sti
fwait
lahf
adc
adc
scas
stos
imul
out
loop
imul
imulb
popl
mov
loopne
in
sub
add
jp
pop
jg
and
jge
xor
or
fcmovnu
aam
adc
pop
xor
add
shrb
and
mov
mov
loopne
and
jne
cmc
sub
jae
repz
or
and
scas
mov
cwtl
pushf
mov
add
and
int
into
das
sti
js
lret
inc
lcall
push
mov
scas
test
mov
loopne
fwait
jae
or
pusha
daa
daa
mov
loopne
pop
pusha
mov
xlat
jecxz
mov
daa
jmp
mov
lea
pusha
daa
imul
mov
pop
add
inc
jb
sub
mov
in
jnp
aaa
xchg
repz
rolb
and
add
rclb
lahf
xlat
pop
cli
sub
xchg
out
call
iret
out
rolb
stos
jbe
outsl
enter
push
push
out
ret
dec
popa
mov
loopne
xchg
xor
and
cs
jno
shrb
mov
xchg
jne
andb
sbb
jbe
loopne
sbb
sub
mov
and
dec
cli
jp
xchg
cmp
cmc
std
out
or
mov
xor
mov
es
inc
inc
lods
pop
push
pop
or
loopne
addb
shll
dec
mov
inc
jae
sub
pusha
mov
pushf
stc
rcrl
popf
mov
or
adc
sahf
jmp
mov
aas
das
popf
popa
xor
andb
popa
pop
xchg
push
inc
stos
and
adc
leave
lret
mov
lock
cli
adc
adc
cmpsl
inc
sahf
fistps
test
nop
add
pusha
push
mov
pusha
rclb
add
fwait
and
adc
sub
cmp
nop
sbb
lods
sub
push
jle
fadds
nop
jno
int
and
add
movsb
add
pop
sahf
sub
loopne
jl
jge,pt
pop
cmp
and
inc
or
jo
jge
sub
pop
outsb
enter
add
shrb
out
and
sbbb
jp
cmp
mov
mov
dec
inc
mov
inc
iret
fdivrs
mov
cld
adc
mov
xchg
xchg
ror
jno
ljmp
sti
push
and
dec
dec
push
int
adc
out
daa
aam
popf
std
sub
mov
mov
or
sarb
aaa
shrb
or
loopne
push
in
sbb
add
adcb
vprotb
ds
je
arpl
dec
mov
fisubrl
sub
push
loope
lods
andb
in
mov
mov
dec
mov
ret
rcll
repnz
sbb
loopne
mov
xlat
sbb
fdivrs
addb
xchg
arpl
cmpsb
add
dec
test
and
mov
or
cli
daa
fidivrs
add
pusha
pusha
repz
fists
sti
leave
jae
rol
rcrl
enter
mov
mov
cmp
loopne
mov
lods
jp
aam
addb
inc
inc
movntps
inc
out
mov
mov
stos
add
sub
rclb
add
pusha
pop
adc
cwtl
pop
sub
and
xor
arpl
add
lods
rolb
xchg
sub
sub
sbb
pusha
inc
push
and
sbb
mov
fwait
rcll
push
lret
cs
pusha
fadd
int3
aas
test
mov
mov
mov
adc
pusha
push
sub
and
lret
outsl
popf
in
ljmp
add
sbb
and
addr16
sbb
xlat
out
push
stos
push
mov
repnz
aam
insb
mov
xor
loopne
in
mov
je
push
inc
inc
rcll
ficomps
xchg
into
mov
add
rcr
xchg
sub
xchg
loopne
push
ret
and
loopne
cltd
and
adc
fldl
cmpsl
ljmp
xor
mov
in
rol
push
je
xchg
pusha
mov
mov
and
sbb
shlb
inc
jl
ret
inc
js
sbb
cmpsl
and
shlb
push
shll
inc
add
push
mov
stos
ror
inc
mov
ljmp
daa
in
fs
ret
repz
lret
adc
loopne
lahf
xchg
movsl
inc
stc
aam
xchg
imul
add
pusha
and
xchg
pop
dec
sub
cmp
out
adc
aas
push
pushf
inc
jb
push
fimull
addr16
stos
in
cwtl
add
loopne
add
lcall
mov
add
jmp
mov
sub
jb
cmp
pop
popf
add
mov
ret
jecxz
cmovo
and
xchg
sbb
jne
xchg
ret
movsl
mov
cltd
roll
loopne
push
loopne
ficomps
inc
ss
mov
mov
pusha
mov
add
and
popa
sbb
mov
add
xor
add
test
jecxz
inc
inc
aad
mov
sub
add
dec
lods
in
sbb
inc
subb
mov
ror
cmp
push
pusha
loopne
cmp
shlb
mov
xchg
cmpsb
and
negl
inc
jg
je
incl
and
addb
iret
mov
dec
adc
jl
and
adc
fsubrp
movsb
and
out
dec
and
aaa
cli
fstps
int
jecxz
addb
cmp
test
pop
xor
inc
or
add
dec
loope
push
xor
inc
xor
ret
cmp
xchg
pop
daa
mov
inc
adc
flds
pusha
pusha
cld
ret
dec
jle
sti
lds
pusha
jle
jns
fs
loopne
jecxz
dec
in
repz
add
dec
into
aas
arpl
dec
scas
and
inc
test
loopne
imul
cmpsl
mov
jns
aad
in
ret
xor
mov
test
stc
pop
in
mov
ja
lods
in
vmovaps
jle
jmp
push
ljmp
add
cmc
xchg
jl
sahf
stos
mov
jmp
fwait
into
mov
lcall
movsl
sti
out
xor
movsl
gs
mov
mov
add
push
mov
pusha
inc
ja
mov
jg
repnz
xchg
bound
fnstenv
jo
and
sbb
cmpsb
mov
les
jnp
push
and
sub
addb
add
mov
or
xchg
shlb
add
push
inc
mov
inc
dec
mov
rolb
les
fcmove
mov
cmc
test
add
xchg
inc
cmp
inc
add
push
adc
pop
push
in
and
shl
cltd
inc
xor
in
jbe
ja
mov
xor
or
in
mov
sub
loopne
test
loopne
orl
cmp
and
loopne
jecxz
addb
movsb
add
fwait
daa
add
shl
push
test
shrb
pop
or
and
rclb
loopne
and
mov
jns
movsl
aaa
xor
add
lret
mov
pusha
inc
push
sahf
fwait
push
and
push
outsl
or
inc
mov
cmp
sbb
out
push
and
add
and
addr16
pop
mov
xchg
outsb
mov
inc
imul
inc
and
and
add
pusha
push
jecxz
add
test
add
aam
fwait
out
gs
scas
ljmp
add
and
mov
push
ret
mov
xlat
sub
pusha
push
mov
jmp
out
pop
add
loopne
popa
out
inc
adc
add
pusha
pop
aaa
push
stos
add
shlb
inc
test
or
push
outsb
fisubrl
inc
loopne
std
movsl
xchg
in
jge
pop
cmpsb
and
shrb
mov
js
inc
mov
inc
add
and
sbb
adc
mov
imul
inc
mov
push
test
add
sbb
je
scas
outsb
daa
mov
jecxz
mov
jmp
and
loop
or
pop
mov
mov
loop
into
pop
jb
int3
shlb
jbe
insl
popa
and
pusha
mov
add
inc
sub
mov
sbb
lret
mov
add
popa
jge
dec
nop
cmp
and
incb
push
adc
repz
cmp
mov
jle
and
sbb
nop
cmpsb
addb
cmp
addb
xchg
aaa
add
add
mov
insl
xor
std
jbe
cmp
push
cmpsb
add
sub
shrb
pusha
roll
sar
add
pop
mov
push
pusha
mov
andb
sbb
mov
stos
xor
mov
and
push
jno
not
cld
in
aaa
adc
add
and
and
mov
in
or
cmp
aam
in
int3
call
add
and
mov
mov
into
push
pusha
inc
mov
in
inc
mov
inc
fadds
rcl
push
sub
addb
xchg
push
dec
fdivrl
fisubl
loopne
jae
in
mov
shll
jp
lock
jle
cmp
lods
push
std
test
and
push
sub
pusha
fidivl
aaa
popf
add
mov
icebp
push
rol
in
xor
push
sarb
pusha
int3
cmp
testl
inc
gs
inc
mov
inc
rcl
xor
push
int
data16
push
add
andb
hlt
cmp
pusha
ss
cmp
rorb
js
jg
adc
inc
fisubrl
loop
sub
cmp
sahf
xor
push
or
cmp
jge
shrb
shrb
cmc
call
inc
pusha
push
push
jno
jmp
cmpsb
pusha
mov
or
test
negb
mov
fisttpl
mov
and
pop
notb
enter
loope
movsl
into
adc
in
adc
dec
cmp
add
mov
sahf
inc
xor
ret
ret
or
std
jb
pop
out
test
subb
pusha
loopne
sub
orb
ret
cmp
rol
cs
insb
inc
mov
icebp
mov
aaa
jne
shlb
sbb
adc
lahf
dec
mov
cld
or
adc
pop
mov
mov
sub
inc
ret
stos
pusha
mov
std
sub
add
rcl
rolb
push
jg
int
mov
loope
inc
cmpb
xor
and
dec
mov
inc
sub
add
pop
sub
mov
jle
lods
sub
add
push
add
fstl
loopne
out
lock
aaa
xor
and
xor
das
push
xor
and
add
clc
fwait
push
mov
and
loopne
xchg
dec
and
xchg
loopne
sub
shr
test
inc
inc
adc
rolb
xchg
add
cld
inc
cmc
sub
loopne
cli
test
inc
xchg
das
mov
out
hlt
jbe
pusha
andb
inc
dec
push
lcall
repnz
repnz
loopne
xchg
xor
mov
mov
jb
es
scas
addb
movsl
push
rolb
push
rolb
rcrb
cmp
rorb
pushl
into
scas
pusha
loopne
lret
jp
std
out
inc
push
rolb
add
hlt
fimuls
scas
ss
or
and
xlat
add
and
in
adc
dec
in
or
xchg
les
cmpsl
cli
mov
icebp
lds
mov
jo
mov
xor
add
dec
jle
add
loopne
pusha
cmpb
and
sub
add
shlb
test
jae
loope
and
and
addl
adc
sbb
jle
add
pop
cmp
mov
nopl
clc
and
loopne
fimull
sub
sarl
rolb
dec
mov
pusha
and
icebp
adc
gs
nop
cli
cmp
lcall
lds
rol
jne
pusha
inc
fisubrl
and
imul
insl
cmp
addb
sahf
jne
dec
lcall
adc
mov
mov
mov
add
inc
push
add
mov
stc
or
rcl
lods
loopne
int
pusha
add
adc
shlb
test
inc
inc
in
movsl
and
pop
rorb
mov
pusha
push
pusha
inc
fisubrs
loopne
rolb
adc
shl
add
fwait
or
stos
add
call
add
mov
mov
mov
call
ret
enter
mov
pop
imul
mov
pop
scas
jns
sbb
and
daa
cld
or
rcl
pop
in
arpl
push
xchg
jne
or
mov
addr16
aas
rolb
push
sarl
mov
subb
cmpb
lret
add
mov
cli
int
popl
loopne
or
lea
insb
mov
aaa
adc
negl
leave
or
push
dec
xor
popa
shll
add
pusha
inc
pop
repz
and
mov
dec
jbe
mov
inc
mov
pusha
in
jnp
inc
push
sub
cmp
mov
sahf
push
add
mov
sbb
pop
sub
push
pusha
add
daa
sbb
insb
jno
xor
mov
dec
inc
and
or
mov
mov
or
and
rcrb
jae
add
ljmp
and
stc
dec
in
bound
cli
mov
js
cltd
andb
hlt
test
and
push
xchg
jl
sbb
loopne
xchg
inc
roll
cmp
mov
sbb
sub
sbb
loopne
cmpsb
pusha
and
mov
das
cld
dec
push
lret
into
fs
clc
xchg
lret
ret
lret
add
xlat
in
pusha
push
ret
cmp
fstpt
xor
loopne
or
mov
mov
sbb
popf
inc
test
or
popf
pop
sub
add
loopne
aad
in
popa
aad
lahf
or
mov
push
push
in
mov
aad
jno
pop
push
aad
xchg
and
cmpsb
add
add
outsb
dec
add
push
mov
sbb
mov
inc
or
xor
addr16
lods
cmc
cmp
loope
cmc
push
loopne
inc
fdivr
rol
daa
cmp
sbb
cmpsl
sbb
mov
mov
inc
loopne
and
test
hlt
mov
popf
ds
inc
mov
lods
cwtl
stos
shrl
aas
loop
call
and
rcrb
clc
cmp
add
subb
cli
test
rcll
jb
dec
add
and
je
lds
ss
pavgw
xchg
icebp
leave
pop
mov
scas
inc
adcb
adc
add
subl
jp
jae
pop
mov
xchg
xor
bound
mov
cmp
iret
popl
rolb
out
loope
lock
inc
push
inc
pusha
push
mov
movzwl
rcll
mov
mov
and
call
aam
test
loopne
rorl
jmp
or
mov
dec
insb
popf
adc
inc
and
addr16
pusha
out
push
leave
popa
inc
sub
fimuls
add
mov
cmp
pusha
addb
adcb
add
cmc
pusha
pop
add
shlb
scas
andl
dec
mov
stos
and
cmpsl
or
mov
jle
addb
dec
bound
xchg
lcall
das
mov
insl
add
stos
mov
and
pop
xchg
mov
lea
xchg
sbb
shlb
jns
mov
daa
jecxz
and
and
lea
push
and
add
inc
add
lea
roll
cld
add
fs
or
cmp
jb
push
nop
add
adcb
and
mov
pusha
cltd
stos
inc
loopne
add
pushf
mov
cwtl
push
les
or
pop
addb
in
mov
and
daa
lahf
fcoml
loopne
pushf
push
mov
shlb
pusha
orb
in
fwait
jl
dec
arpl
fwait
insb
and
add
xor
dec
adc
addb
data16
sub
xchg
in
mulb
pop
testl
and
or
add
loope
and
pusha
cwtl
lcall
xchg
loopne
loopne
cs
pusha
mov
addb
lock
push
push
mov
lahf
fistps
push
mov
pushf
mov
stc
fucom
popf
or
and
push
mov
icebp
xchg
xchg
xor
push
pop
stos
push
jnp
jge
mov
push
inc
mov
inc
aad
and
and
shrb
loopne
add
push
xor
testb
in
inc
pusha
jg
std
ljmp
pusha
lds
pop
or
cmp
inc
and
pusha
inc
repz
mov
pushf
andb
xchg
lock
cmp
inc
shlb
mov
mov
je
pop
nop
test
pusha
xchg
xor
xor
cmp
push
insb
fidivrl
addr16
xchg
add
loopne
js
pop
mov
sti
cld
test
add
push
and
lret
loop
add
sub
test
inc
mov
clc
jnp
cmp
add
jae
mov
mov
fstl
daa
std
lcall
addr16
lcall
sub
idivl
pop
movsb
addb
fucomip
stc
movsl
xor
loopne
jo
push
scas
insb
cmp
xchg
add
jb
aad
pop
jbe
cltd
rol
adc
jp
and
inc
std
jo
mov
mov
rcrl
and
loop
mov
rol
pusha
subb
ror
orl
cmc
addb
js
cmp
pusha
fdivl
push
and
arpl
inc
fcomps
xor
and
addb
orb
xchg
sub
pusha
lahf
aam
inc
inc
outsl
andl
cld
xchg
out
dec
cmp
iret
mov
cmpsl
xchg
sub
jecxz
enter
xor
sub
add
shrl
or
and
out
cli
mov
lods
add
cmpsl
cmp
loopne
pop
aam
mov
leave
mov
dec
xchg
xchg
inc
add
mov
movsl
mov
loopne
loopne
cmp
sub
inc
pushl
add
adc
mov
pusha
pusha
ljmp
push
jo
mov
dec
adc
scas
into
xor
xchg
dec
cmp
repz
sbb
add
lea
dec
mov
loopne
and
mov
push
and
and
std
mov
shl
fsts
fwait
ret
inc
inc
or
loopne
cmc
lods
cmpsl
push
mov
xor
mov
pop
inc
cmp
scas
andb
pusha
sahf
mov
mov
add
popa
cmp
adc
pop
dec
ljmp
adc
jp
dec
jl
mov
loopne
pop
inc
mov
pusha
loop
int3
in
xchg
and
bound
and
fs
mov
data16
add
add
jae
ja
cwtl
cwtl
xor
mov
lret
stos
add
push
and
loopne
sbb
or
fdivl
sahf
xchg
add
popa
mov
pop
cmpsb
add
outsb
mov
mov
and
addb
inc
jg
pop
cwtl
pop
pop
gs
pop
add
std
xchg
insl
add
bound
imul
je
push
inc
insb
xchg
cmp
jp
inc
loopne
loop
add
addr16
inc
push
in
loopne
cli
push
pusha
rolb
sub
push
mov
outsb
mov
shll
rolb
rolb
out
push
loopne
loopne
out
out
cmp
enter
mov
orb
pop
loop
jne
sub
inc
daa
mov
into
pop
cmc
fdivrs
stos
inc
sbbb
inc
pop
cmpsl
int3
jge
clc
imul
ret
cmpsb
rolb
add
jbe
mov
leave
das
fsts
je
ret
imul
sub
xchg
loopne
cmp
add
js
and
pusha
xor
mov
or
rcll
int
cwtl
jne
fadds
and
xor
jl
mov
push
push
pop
fs
stos
testl
xchg
rolb
jne
sub
rcrb
sub
aas
out
out
inc
shlb
mov
aaa
cmp
inc
inc
into
mov
and
mov
dec
imul
loopne
nop
jno
loopne
push
out
popa
pop
aas
push
loop
loopne
sub
inc
jle
rolb
inc
rol
sub
and
mov
xor
jbe
mov
push
mov
addb
jp,pt
imul
mov
lret
sahf
push
andb
cli
cmp
add
fstl
pusha
inc
arpl
cwtl
inc
push
pusha
cmpb
ret
jp
mov
and
inc
mov
mov
loopne
jmp
scas
pop
fwait
fwait
call
inc
cmpsl
leave
aam
fists
mov
adc
push
cmp
mov
add
push
movsl
dec
iret
leave
sub
data16
sarl
cwtl
push
out
jge
negl
jns
mov
mov
mov
pop
les
arpl
pusha
loopne
lock
popa
jg
pop
test
mov
insl
lea
xlat
cmp
jns
shrl
inc
mov
xchg
lock
pushf
and
sub
iret
jbe
rep
xor
inc
shl
andl
test
jno
push
jae
stos
push
pop
test
stc
or
xchg
adc
mov
shl
int3
into
out
bound
mov
inc
and
sub
jp
and
hlt
push
mov
call
adc
test
xchg
movsl
dec
adc
push
mov
pusha
push
mov
push
adc
out
shll
pusha
cmp
jg
jecxz
pop
sbb
add
xchg
dec
add
inc
add
jmp
mov
xchg
push
and
call
xlat
in
loopne
cmpsl
xor
andb
inc
loopne
out
pop
xor
add
push
ds
loopne
aad
loopne
aad
mov
mov
ret
mov
les
mov
inc
loopne
mov
mov
jno
adc
sub
and
mov
jge
sbb
loop
add
test
shl
mov
lret
loopne
mov
jl
push
pop
mov
inc
and
add
in
pusha
aam
jne
push
loopne
sub
fwait
jp
cmp
xchg
cli
test
loopne
and
inc
add
or
mov
rcr
data16
add
pusha
ret
fmull
pusha
add
cmpsl
fcmove
mov
sahf
pop
lret
stos
arpl
jnp
rolb
xor
sahf
or
or
inc
push
jns
mov
stc
imul
pop
xor
and
sbb
dec
pop
or
subb
push
pop
add
dec
mov
pusha
and
sub
loopne
mov
dec
add
pusha
in
lock
sarl
inc
inc
inc
mov
data16
inc
cmpsl
cmp
dec
mov
or
inc
pop
jae
dec
idiv
push
mov
lods
and
in
add
cmpsl
loope
lea
mov
mov
call
pop
sbb
dec
sub
inc
mov
rolb
inc
loopne
and
data16
andb
loopne
pusha
and
popf
mov
push
pop
das
arpl
arpl
sbb
inc
and
xchg
in
fst
in
jo
push
push
xor
xor
xorl
mov
add
xor
aam
or
outsl
add
stc
mov
jb
inc
loopne
jmp
or
pusha
jne
mov
pop
in
cmp
and
sar
xor
jbe
push
xchg
inc
mov
pop
sub
and
fwait
shl
ret
xor
push
aaa
ret
loopne
push
mov
mov
add
insl
or
addb
pop
arpl
icebp
aas
pop
int
inc
xor
popa
jmp
in
test
inc
rcr
push
pushl
mov
add
inc
add
aaa
popa
pusha
test
in
insl
pop
clc
or
mov
cmp
jb
rolb
add
and
dec
data16
xor
cmp
clc
jne
and
adc
push
addb
and
das
and
inc
cmpsl
fmulp
out
pusha
xor
loopne
fdivl
rcrb
sbb
inc
insl
or
sbb
or
or
sbb
inc
je
mov
xchg
jo
dec
pop
xor
into
andb
sahf
and
pop
in
jno
dec
pop
dec
mov
push
dec
dec
add
cmpb
mov
ror
dec
add
inc
and
mov
or
add
adc
test
aas
jl
mov
cltd
clc
cs
loopne
rolb
insb
jne
sub
pop
or
and
xchg
out
mov
out
pop
call
xchg
cmp
adc
pusha
rorb
push
xchg
out
add
sahf
enter
movl
fidivrl
test
test
inc
inc
xlat
cmpsl
jle
rolb
pop
push
fs
shlb
rolb
push
mov
and
cmp
dec
cmc
pop
je
cld
pop
mov
mov
xor
call
xor
daa
adc
adc
mov
movsb
mov
aam
cltd
mov
movsb
add
outsb
sbb
pop
lock
mov
dec
repnz
cmp
and
imul
xchg
call
and
sbb
and
mov
outsl
sub
js
jae
movsl
add
and
std
or
loopne
push
lahf
jp
mov
