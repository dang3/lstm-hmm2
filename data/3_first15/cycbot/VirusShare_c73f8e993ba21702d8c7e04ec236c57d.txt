arpl
in
dec
rolb
mov
in
add
mov
sbb
xlat
lods
gs
xchg
cld
sbb
rolb
mov
test
dec
cmp
add
std
fimull
push
push
sbbl
shrl
cmp
mov
jmp
add
and
addr16
scas
fwait
rcl
mov
je
mov
mov
fldt
aas
test
aad
loop
mov
fcomps
cmpsb
and
imul
jge
and
nop
add
jge
scas
mov
cmpsl
and
fstps
bound
mov
rorl
jecxz
test
mov
shrl
fcmovbe
sti
movsl
out
shrl
or
loopne
mov
gs
mov
add
test
leave
popf
mov
add
add
add
mov
and
mov
data16
mov
push
andl
imul
sbb
mov
pushf
mov
mov
jl
add
add
xor
add
movsb
mov
add
or
push
aas
jp
lds
sbb
dec
or
pop
inc
imul
iret
lcall
mov
lret
cmpsb
clc
pop
addr16
aad
add
add
or
mov
xchg
outsb
hlt
dec
loop
mov
sub
mov
mov
mov
js
jno
cmp
inc
pop
jbe
lret
sbb
add
push
adc
lea
inc
inc
add
dec
xlat
icebp
rolb
push
bound
mov
add
mov
push
loopne
mov
or
loop
mov
imul
pop
mov
add
insl
xchg
cmc
mov
or
add
add
fistl
add
push
push
xor
or
out
mov
push
xor
mov
loope
sub
add
add
aas
pop
mov
cltd
addb
ja
ss
xchg
mov
repnz
add
rcrl
jmp
mov
cli
lret
pop
call
add
sbb
push
sbb
mov
ret
fmull
mov
add
sub
cmp
add
push
sub
add
push
push
mov
adc
int
lahf
aas
js
rcrl
mov
dec
dec
aas
test
pop
aaa
addr16
mov
call
enter
inc
xor
add
xlat
pop
clc
fcomi
inc
add
pop
inc
push
cli
push
insl
and
adc
ret
lods
jp
bound
mov
push
xor
movsl
push
cmc
sbb
insb
jo
mov
mov
iret
inc
pop
mov
out
or
add
mov
rolb
mov
mov
mov
mov
add
inc
add
stc
xlat
in
jle
add
mov
pop
ret
xor
out
mov
ret
repz
pushf
add
mov
outsb
daa
leave
insb
jns
mov
jne
mov
mov
sbb
sub
insl
sbb
and
loop
mov
xchg
xor
add
jne
add
jle
mov
int
imul
xchg
adc
out
lahf
jne
inc
dec
add
mov
scas
mov
lea
push
sub
add
stc
sbb
add
std
lock
add
pop
in
add
ftst
outsb
mov
mov
dec
dec
fisttpll
and
repz
xor
adc
lods
lret
scas
test
add
rolb
mov
pop
jo
mov
les
dec
mull
mov
jno
inc
mov
test
mov
mov
mov
inc
dec
aad
sbb
mov
mov
mov
idivb
stos
jecxz
ds
mov
pop
arpl
imul
daa
ja
and
mov
sub
mov
mov
lcall
xor
movsb
fdivl
adc
add
out
fs
sbb
push
mov
sub
push
push
push
push
push
push
cld
call
add
es
movzbl
cmp
ss
push
push
call
mov
cmp
je
es
lea
cs
sub
mov
push
es
call
test
jne
jmp
leave
push
es
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
nop
lea
lea
sub
add
mov
sub
sub
push
pop
push
je
jmp
add
add
scas
mov
inc
add
jno
pop
addb
clc
dec
movb
xor
mov
mov
add
xchg
out
or
push
jno
xor
add
fcomps
mov
pop
out
repnz
add
pop
in
add
sbb
popf
adc
mov
xchg
jmp
mov
add
mov
adc
mov
aaa
insb
lods
xor
mov
cmpsl
lret
xor
mov
push
add
mov
jae
fs
lods
orw
insb
pop
jmp
lret
icebp
sub
rolb
fdiv
jnp
lea
dec
xchg
dec
test
mov
aas
popf
inc
add
adc
aaa
iret
or
popa
fwait
aam
xchg
pop
ss
imul
add
mov
imul
addb
loop
mov
jg
fmul
mov
jg
outsb
sahf
insb
inc
out
and
mov
xor
mov
lret
in
cmc
mov
add
data16
add
add
push
cvttps2pi
mov
xchg
add
lret
push
pusha
add
push
add
lods
stos
mov
mov
add
das
movsl
dec
out
ja
or
loope
mov
ds
sub
mov
test
add
xor
divb
push
add
mov
sub
add
aaa
xchg
sub
add
cltd
mov
rorl
add
movsb
mov
pop
jo
mov
mov
mov
xor
add
xchg
mov
scas
push
mov
cmpsl
cltd
xchg
add
cmp
jmp
loop
mov
push
lret
sub
ret
jmp
mov
add
and
fimull
sbb
add
mov
push
mov
repnz
fstpt
push
mov
xor
mov
add
pop
inc
add
cmp
mov
mov
mov
out
xchg
roll
add
sti
push
add
mov
mov
rolb
mov
mov
xchg
enter
mov
ds
das
jle
add
inc
add
xor
mov
cltd
jnp
ja
xchg
pop
aaa
jnp
add
add
sbb
insb
in
and
cmpsb
repnz
stc
insb
dec
sbb
add
ss
repnz
enter
out
scas
mov
mov
lea
mov
mov
outsb
sbb
jmp
mov
push
add
rolb
mov
add
out
addb
dec
nop
add
mov
xor
mov
add
sbb
in
movsl
cmp
call
rolb
lcall
and
mov
push
push
test
inc
add
out
xchg
in
pusha
add
mov
mov
add
scas
inc
sahf
in
sub
and
mov
jmp
daa
iret
lock
add
popf
pop
xlat
xchg
or
mov
loop
mov
add
jl
leave
icebp
imul
fdivs
inc
add
cmp
add
fucomp
inc
add
xor
mov
cmp
loop
mov
mov
aas
rcrl
pop
das
inc
pop
leave
jae
mov
dec
xor
icebp
cmp
add
fnstcw
mov
mov
fwait
adc
and
add
push
add
add
or
fistpll
cmp
stos
popf
fdivr
jb
mov
mov
mov
clc
arpl
in
mov
loope
jmp
pop
xorl
mov
cld
mov
fs
pinsrw
lahf
inc
or
sub
and
fnstenv
rcll
pusha
add
divl
pop
jns
adc
lods
pop
or
scas
dec
jno
add
call
and
test
add
mov
inc
hlt
aam
icebp
test
push
loope
push
add
add
add
mov
aam
adc
cmp
int
adc
mov
add
aam
xor
mov
sbb
cmp
out
xchg
and
fldt
mov
add
mov
jnp
xor
ret
sub
add
add
mov
cmp
in
add
mov
fistpll
imul
mov
and
xor
mov
ficompl
sti
ret
xchg
sahf
jae
mov
and
mov
xchg
ja
pop
mov
cwtl
jmp
mov
data16
bound
mov
and
mov
scas
loop
mov
mov
dec
das
dec
aaa
add
xchg
shll
pop
mov
mov
inc
pop
shll
mov
mov
mov
add
decl
pop
push
sbb
jmp
addr16
stos
mov
add
add
add
loope
icebp
inc
call
mov
add
fs
xchg
and
pop
fildl
bound
mov
or
mov
subl
mov
add
scas
inc
das
jp
sbb
jnp
popa
pop
out
xchg
inc
add
lcall
add
xchg
ja
repz
xchg
out
add
movsl
inc
outsb
lds
mov
add
add
mov
xchg
in
inc
xchg
push
add
xorl
fwait
jp
add
ficomps
jp
call
sbbl
xor
mov
sub
in
add
icebp
pop
int
push
add
gs
cmp
add
add
add
add
sub
pop
pop
popf
add
push
movups
mov
mov
add
sub
xchg
sbb
xchg
mov
out
sbb
test
sub
insl
scas
or
es
mov
scas
ret
clc
add
add
and
mov
pop
adc
roll
add
aas
jns
cmpsb
sti
int3
xchg
fstpt
xchg
pop
shll
hlt
std
jb
mov
dec
xchg
mov
add
dec
cltd
rcll
sti
cmc
out
movsb
dec
sbb
cltd
or
test
mov
sbb
cld
push
mov
jns
add
xchg
das
lods
cmp
js
xlat
dec
les
add
mov
or
cmp
cmpsl
dec
inc
push
sbb
xlat
flds
push
xchg
sbb
add
mov
add
jns
inc
add
inc
pushf
int3
decb
mov
mov
sar
into
jg
xchg
ds
add
mov
add
mov
repnz
push
jecxz
adc
lcall
scas
sbb
addb
xor
hlt
sub
adc
mov
mov
push
dec
pop
rolb
mov
outsb
daa
movsb
jb
mov
bound
mov
js
or
adc
xchg
pop
jo
mov
or
loope
add
add
add
inc
sbb
inc
sub
add
gs
mov
mov
out
xlat
out
sbb
imul
xchg
aas
pop
jne
in
xchg
sbb
push
jp
testb
loopne
mov
in
popf
repnz
add
popf
in
add
or
addb
mov
inc
add
lods
push
addb
pop
cltd
out
push
push
mov
daa
mov
xchg
dec
mulb
mov
clc
inc
push
inc
add
in
clc
and
popa
sbb
mov
adc
mov
sbb
add
mov
stc
popa
pop
jnp
enter
loopw
mov
int
std
scas
xchg
mov
and
mov
mov
pop
pop
or
mov
lock
stc
pop
cmp
leave
cs
xchg
mov
lahf
ljmp
in
xor
mov
sti
xchg
add
imul
rolb
mov
mov
int
push
pusha
add
mov
mov
lahf
sub
add
rolb
mov
jmp
add
mov
push
add
dec
inc
or
mov
gs
jg
mov
add
loopne
mov
cmp
add
mov
jo
mov
xchg
addb
insl
fisttps
xor
mov
and
mov
mov
dec
inc
imul
xchg
pushf
std
cwtd
iret
mov
xor
xor
sbb
addl
cmp
mov
mov
mov
add
cmpsb
push
add
xchg
lret
mov
add
add
xor
mov
cmpsb
mov
hlt
add
addr16
das
dec
mov
push
jle
loop
mov
xchg
cmp
stos
cmp
push
xlat
and
aam
outsb
ret
push
add
mov
test
xor
cmp
add
mov
inc
loope
mov
mov
pop
js
add
xchg
aad
xchg
inc
xor
mov
dec
nop
add
dec
rolb
mov
mov
add
imul
lock
sbb
cwtl
mov
mov
clc
mov
outsb
mov
add
jle
fimull
lds
xor
mov
repnz
in
cmp
pop
stos
pop
lods
imul
add
mov
das
aam
cmpsb
gs
mov
int3
arpl
clc
mov
mov
add
mov
dec
pop
push
jmp
adc
mov
ja
ret
mov
add
test
nop
add
loop
mov
adcl
xchg
mov
mov
add
add
cli
iret
xchg
inc
inc
js
adc
mov
xor
jno
add
mov
ss
pop
jns
sarl
jl
jmp
or
popa
xlat
inc
cltd
pop
push
add
push
or
mov
mov
orl
js
sub
cmp
ss
adc
sti
add
test
xor
stos
xlat
cmp
sbb
mov
aaa
inc
adc
xlat
jbe
inc
jo
mov
pop
and
pop
lret
fnstsw
cmp
xchg
cmc
rolb
mov
add
and
mov
mov
ljmp
add
sbb
inc
adcl
push
add
mov
add
lods
jge
addb
mov
ss
mov
or
pop
jne
scas
jno
or
ss
mov
test
sub
rolb
dec
daa
addb
xchg
negl
mov
lret
pop
cltd
add
mov
arpl
add
mov
push
xchg
fadds
mov
add
sub
adc
mov
test
add
popf
mov
xor
scas
xchg
inc
rolb
mov
sahf
mov
daa
mov
inc
push
inc
enter
and
ss
cwtl
add
add
adc
add
add
push
std
adc
aam
int3
mov
add
jecxz
popa
out
pop
testb
jmp
add
in
addb
or
popa
in
int
fnstenv
pop
jg
inc
adcl
movsl
pop
pushf
pushf
repz
add
cmp
jecxz
ret
in
mov
lea
push
movsl
inc
cmp
mov
mov
mov
mov
pop
mov
data16
and
push
push
adc
mov
mov
stos
xor
lods
loope
add
in
es
push
es
inc
dec
std
fwait
aam
divb
lcall
mov
clc
pop
les
add
lods
xor
lahf
xchg
fdivrs
xchg
add
mov
lds
add
fsubs
mov
sbb
sbb
jb
mov
mov
add
inc
add
inc
out
gs
mov
lcall
js
jns
popa
adc
mov
mov
add
jmp
inc
insb
dec
repz
and
mov
jge
pop
cmpsl
repz
test
push
add
mov
add
mov
repz
dec
and
jne
pusha
add
mov
test
mov
stos
and
dec
cmc
push
pop
xchg
add
mov
arpl
add
fnstsw
mov
or
lods
pushf
push
dec
rolb
sbb
enter
sub
mov
pop
pop
and
mov
or
add
adc
mov
pop
popf
adc
mov
xchg
xor
jno
es
inc
iret
xchg
mov
pop
push
popf
cmp
sub
outsl
pop
into
cli
pop
xchg
sbbl
mov
leave
cmp
lret
push
mov
jl
adc
add
mov
or
add
add
add
xchg
dec
xchg
jmp
lret
fs
sbb
fwait
xor
cmpsb
xor
bound
mov
xchg
cli
iret
push
fbstp
pop
stc
sub
ljmp
mov
divl
ds
dec
mov
mov
mov
pop
int3
mov
mov
and
mov
in
cmpsl
push
sbb
mov
mov
mov
rolb
mov
add
insl
sbb
mov
add
sbb
mov
add
mov
adc
mov
sub
dec
pop
pop
sbb
enter
testl
sbb
add
pop
add
adc
xor
or
das
push
lret
inc
cmp
mov
rolb
mov
mov
mov
add
mov
mov
sti
addb
pushf
clc
xor
add
xor
mov
xchg
pop
pop
pop
xchg
cs
sbb
rcl
scas
das
push
mov
icebp
sub
test
sti
mov
lods
mov
dec
nop
add
lea
sbb
sbb
or
ja
mov
pop
sub
gs
rcll
aas
jne
movsb
daa
mov
dec
mov
in
int3
gs
sti
mov
mov
mov
pop
loop
mov
pop
or
xchg
xlat
jbe
cld
mov
add
ss
outsb
insl
cmp
loope
add
jo
mov
push
sub
leave
xchg
aam
inc
out
rorl
mov
add
xchg
dec
fsts
add
rep
mov
daa
dec
push
add
dec
enter
fwait
add
mov
fsubrl
add
sub
mov
add
mov
cmp
out
cltd
fsubs
add
mov
xor
dec
jno
lahf
xchg
lret
xor
cmpsl
inc
xchg
mov
cmpsb
mov
mov
mov
push
bound
mov
movsl
xchg
mov
xchg
xor
mov
stc
jge
add
fldenv
add
int
add
xchg
mov
mov
mov
ljmp
sbb
sub
add
pop
xor
add
cs
sbb
loop
mov
add
mov
mov
add
xchg
xchg
in
mov
test
arpl
ds
xchg
std
add
mov
add
jge
add
inc
add
push
xor
mov
dec
ret
mov
mov
daa
lock
into
int
popa
sub
xchg
xchg
repnz
add
mov
icebp
lret
push
iret
xor
add
pushf
jno
les
mov
lea
pop
push
and
mov
mov
int
cmp
xor
mov
dec
in
addb
test
add
mov
add
add
mov
add
or
test
xchg
sbb
out
mov
xor
mov
ss
mov
xor
mov
bound
mov
sbb
mov
add
mov
outsb
imul
int3
push
or
popf
std
sbb
dec
or
int3
jl
rolb
out
or
add
mov
mov
imul
fdivrs
xor
mov
push
mov
mov
cmp
mov
mov
add
out
mov
repz
cwtl
fbstp
mov
scas
jbe
ds
jne
cmp
rcrl
mov
xchg
scas
test
in
pop
std
in
inc
add
xchg
in
cwtl
xor
aam
add
sub
je
icebp
loopne
mov
add
xchg
pop
mov
out
stc
scas
insl
push
out
inc
incl
lret
mov
dec
pop
in
add
xchg
add
movsb
pop
dec
lods
jge
addl
mov
jg
outsb
nop
add
and
adc
add
sub
lret
pop
cmp
pushl
loope
cmp
add
add
xchg
add
push
ja
pop
addr16
add
jo
mov
insl
jp
rolb
mov
dec
xchg
xchg
xchg
je
push
and
xchg
add
mov
subl
xor
hlt
cmp
lock
ret
std
rolb
mov
add
js
test
sub
add
mov
cld
mov
xchg
lcall
out
bound
mov
mov
inc
add
lock
inc
data16
mov
loop
mov
xchg
sub
mov
mov
jg
ror
jp
hlt
shll
sti
outsl
loope
or
and
cmpsl
cmpsl
mov
mov
xchg
add
in
cmpsb
mov
mov
push
fistpl
xchg
cmp
add
dec
in
sub
pop
sub
xchg
sub
loop
mov
mov
int
mov
add
fimull
mov
xchg
out
out
xor
mov
mov
ret
xchg
or
mov
push
or
mov
jns
mov
das
or
xchg
add
int
cmc
jo
mov
xor
mov
rolb
mov
jmp
lock
call
mov
add
mov
add
stc
and
push
add
lret
sub
add
add
mov
outsl
mov
push
xor
mov
js
add
fwait
jae
xor
ficomps
xchg
add
loope
add
les
and
add
in
lret
add
mov
xor
push
aam
nop
add
rolb
mov
mov
inc
fcomp
addr16
mov
iret
les
mov
rolb
mov
add
daa
xor
mov
popa
cmp
jno
in
add
add
cmc
in
aam
sbb
inc
add
aaa
insl
lock
idivb
cmp
jb
mov
call
testb
add
mov
in
addb
push
shrl
pop
xchg
sub
popf
movsl
clc
xor
mov
rolb
mov
fwait
mov
push
fdivr
out
pop
pop
add
cmp
lret
sub
add
dec
popa
ljmp
repz
add
imul
sti
into
inc
inc
add
mov
popa
mov
add
add
mov
mov
jmp
pop
push
or
aad
aad
mov
mov
adc
mov
mov
loopne
mov
ljmp
dec
push
dec
pop
pusha
add
jo
mov
add
faddp
add
add
add
mov
outsb
jp
mov
add
insb
scas
mov
imul
lods
pop
mov
mov
mov
push
insb
arpl
mov
xadd
mov
jae
mov
jmp
gs
xor
mov
arpl
jb
mov
sub
les
add
xor
add
add
mov
sti
mov
pop
mov
sbb
sbb
adc
xchg
jecxz
add
jb
mov
imul
pop
add
mov
add
add
mov
cmp
inc
jl
mov
js
outsb
lods
jbe
add
add
and
mov
push
add
cs
shll
pusha
add
add
jmp
outsl
dec
xor
out
add
mov
adc
mov
push
addb
scas
rolb
mov
mov
xchg
test
sub
stos
jno
sbb
insl
adc
add
fldl
mov
pusha
add
push
add
and
subl
mov
jb
mov
jno
aam
repz
mov
add
add
mov
add
scas
xor
mov
lcall
fdiv
dec
and
mov
mov
mov
lea
xchg
ret
je
jecxz
sbb
add
jae
outsb
fcmovbe
in
jmp
leave
pusha
add
mov
mov
mov
pop
cmp
push
addb
lods
lret
xor
mov
test
xor
xor
mov
mulb
std
negl
or
addb
test
repnz
leave
sub
add
outsl
lods
mov
shll
gs
outsl
add
mov
sub
loopne
mov
add
loopne
mov
jo
mov
sbb
mov
xor
hlt
dec
lods
inc
add
fdiv
add
enter
lods
repnz
out
lods
pop
push
adc
mov
cwtl
xor
mov
jne,pt
std
into
aas
sahf
je
add
hlt
aaa
lret
add
add
sub
rol
clc
xchg
jmp
or
push
clc
mov
push
and
mov
xor
add
xor
enter
sbb
pop
mov
clc
xor
mov
adc
mov
dec
std
jp
push
decl
mov
mov
mov
mov
pop
cmp
jl
in
or
mov
outsb
adc
dec
mov
lcall
fists
mov
jmp
sahf
or
add
pop
mov
dec
xor
xchg
test
add
stc
cmp
mov
sbb
outsb
daa
push
push
frstor
out
or
adc
or
mov
add
inc
add
xchg
inc
sbb
add
rolb
mov
pushf
xchg
cmp
mov
loope
popf
xchg
add
dec
pop
xor
movsl
arpl
mov
dec
mov
cli
adc
mov
loopne
mov
mov
add
add
push
mov
adc
fstpl
out
test
ret
xchg
inc
outsb
mov
dec
rcll
je
add
and
dec
and
mov
gs
fwait
stos
cwtl
addb
out
cmc
stc
inc
add
push
add
std
push
mov
inc
xor
mov
sub
mov
movsb
cltd
mov
inc
push
xchg
stos
in
ss
cmp
mov
add
pop
shr
jmp
add
add
js
int3
inc
add
cmp
add
out
movsb
cmp
adc
mov
test
loope
shll
add
push
push
outsl
ds
rolb
mov
jbe
pop
cld
addb
rcll
add
rcrl
test
xchg
sub
mov
int3
xchg
cltd
xchg
fs
or
jge
into
mov
gs
mov
mov
scas
xchg
sbb
add
sbb
decl
add
adc
add
add
mov
add
mov
or
inc
and
mov
aad
sub
dec
pop
jae
and
mov
xchg
add
lods
repz
add
mov
ja
xabort
pop
push
pop
les
lcall
sub
or
in
stc
sub
ret
js
add
mov
jbe
mov
mov
add
mov
fsubrl
inc
fdivrs
lea
outsb
je
add
loop
mov
mov
add
fimuls
addb
or
fsubl
mov
dec
repz
mov
popl
mov
adc
sub
lret
std
test
mov
pop
push
out
xchg
jmp
lret
and
lea
add
mov
xchg
or
pop
mov
mov
or
imul
adc
mov
subl
push
gs
mov
pushf
fmuls
mov
fwait
mov
add
clc
addb
sahf
stos
and
aad
adcl
mov
test
rorl
insl
jge
arpl
mov
and
inc
add
mov
xor
mov
add
add
in
jg
pop
adc
addb
cmp
in
jns
aad
ficomps
push
leave
push
inc
outsl
inc
mov
lea
adc
mov
push
lock
mov
mov
mov
mov
sbb
jmp
mov
mov
popf
adc
jge
add
inc
pop
pop
mov
jns
scas
xchg
addb
ds
dec
push
push
add
xchg
inc
adc
mov
xor
add
mov
leave
testl
in
jecxz
jecxz
push
jle
jge
jo
mov
addb
xchg
add
mov
mov
add
pop
pop
mov
inc
sbb
scas
mov
stos
hlt
jp
and
mov
mov
test
push
add
push
add
mov
cmp
ljmp
jbe
push
test
add
outsb
adc
add
add
mov
xchg
add
push
mov
clc
mov
call
mov
add
add
and
jne
cmp
nop
add
loop
mov
adc
mov
loop
mov
add
pop
jle
test
nop
add
in
out
add
fcoml
xor
push
jno
add
sub
dec
jae
bound
mov
push
and
add
inc
test
sbb
xor
mov
add
add
add
mov
dec
fmull
mov
stos
mov
les
and
mov
mov
in
mov
mov
fisubl
mov
repnz
cmp
sub
add
sub
dec
popa
jne
and
push
cmp
mov
add
inc
mov
adc
cmp
and
mov
inc
add
push
add
add
jl
imul
add
aad
enter
andl
adc
mov
fisttpll
xchg
sahf
jno
repnz
dec
test
ret
aas
push
out
push
add
dec
inc
add
aas
or
add
lahf
rolb
add
out
fmull
jge
and
xchg
cmp
mov
movsl
das
cmp
cmp
dec
xor
xor
mov
movsl
pop
std
xchg
add
mov
add
ljmp
dec
xor
mov
add
in
mov
add
cmpsl
dec
je
es
out
aam
push
xor
and
xor
xor
adc
outsb
xchg
adc
adc
mov
mov
leave
in
and
mov
mov
add
ffree
jl
ficoms
pop
ja
xchg
std
decb
scas
push
repnz
and
xlat
sar
int
add
add
sbb
lcall
cli
dec
and
mov
idivl
and
mov
scas
jg
add
hlt
ret
inc
test
out
push
mov
aaa
inc
out
cmp
jl
sbb
jecxz
pop
mov
dec
pop
inc
and
mov
addb
fs
push
sub
add
fnstenv
and
jbe
enter
mov
push
add
xlat
dec
jl
cmp
mov
jbe
leave
lcall
mov
js
mov
scas
mov
inc
add
bound
mov
lods
dec
inc
fistpl
add
loope
sbb
push
rorl
mov
add
cmpsl
addb
sbb
popf
mov
add
jo
mov
add
aas
aaa
and
mov
mov
pop
lock
jp
cmp
aad
addb
sbb
sti
std
lret
add
js
mov
push
je
and
mov
sahf
cwtl
mov
lcall
out
adc
mov
repz
clc
cltd
add
push
imul
stc
cmp
and
add
mov
sbb
js
sbb
mov
push
iret
inc
in
pushf
mov
mov
mov
push
popa
in
and
mov
and
jb
mov
mov
add
pop
push
add
imul
jle
adc
mov
pop
bound
mov
mov
mov
in
cmpsb
mov
push
cli
pop
fninit
ja
ret
divb
add
sub
addb
test
sub
pop
out
adc
adcl
rep
sbb
and
lret
jge
add
or
add
mov
and
or
add
test
daa
adc
mov
repz
out
out
inc
add
incb
popf
mov
add
sub
adc
pop
mov
dec
notb
mov
add
pop
ss
loop
mov
insb
out
adc
scas
rorl
push
aas
pushf
sub
repnz
or
add
imul
mov
add
inc
add
ret
jmp
add
insl
stos
test
jbe
lock
je
add
xor
mov
bound
mov
lods
sbb
cmp
jge
inc
add
mov
add
mov
rolb
mov
mov
xor
mov
or
fs
sub
mov
in
shrl
or
lods
push
add
add
push
fs
mov
sub
dec
push
inc
fwait
test
fwait
loop
mov
fwait
cli
rolb
mov
in
jmp
inc
cwtl
fsubr
jbe
in
and
add
mov
out
push
jmp
and
mov
jle
scas
pop
pop
dec
fists
adc
mov
cmp
mov
add
add
pushl
loope
mov
xor
mov
push
dec
lret
loopne
mov
pop
sub
mov
or
add
ss
rcrl
testl
gs
out
cmc
and
mov
add
mov
jl
mov
test
lahf
mov
add
dec
jb
mov
fwait
push
pop
dec
les
adc
leave
or
mov
mov
add
mov
sbb
ja
add
sbb
mov
sub
xor
push
std
jmp
in
pop
mov
jl
add
adc
mov
sti
and
mov
add
call
addb
insl
jge
jns
xchg
hlt
jns
mov
add
xlat
std
in
mov
test
dec
mov
fidivrs
mov
mov
add
adc
mov
jns
shll
mov
imul
rcll
or
std
xor
add
mov
mov
je
cmpsl
add
dec
jl
out
frstpm(287
cmpsb
lahf
add
ret
cmp
addr16
stos
cld
push
lahf
out
in
dec
or
xor
out
insl
in
idivb
dec
and
lds
mov
mov
idivb
mov
gs
push
sbb
nop
add
mov
mov
mov
je
xchg
mov
pop
cmp
cmp
imull
mov
add
movsb
cmp
add
test
int
stc
sti
add
mov
insb
gs
rolb
mov
inc
jae
jae
lods
and
add
mov
enter
pop
push
out
mov
add
rep
or
movsl
pop
pop
xor
fcoml
mov
jbe
inc
jnp
xchg
add
mov
insb
imul
sbb
cmove
xchg
cmp
push
cmp
mov
mov
jmp
mov
ficompl
xor
mov
out
test
add
xchg
mov
add
cmp
jle
jp
add
add
inc
dec
dec
or
add
mov
sbb
jne
add
icebp
mov
mov
dec
dec
or
xor
mov
and
mov
negb
fstpt
mov
repnz
testl
mov
test
in
dec
xor
scas
dec
ret
mov
lods
xor
stos
pusha
add
sbb
push
dec
inc
daa
flds
add
mov
sub
cwtl
add
in
push
add
add
dec
xlat
mov
add
cmpsl
outsl
add
push
inc
lods
mov
jb
mov
sub
adc
mov
fs
pop
dec
lcall
inc
out
add
inc
add
pop
out
push
mov
jp
lahf
rolb
xchg
add
cltd
repz
xchg
shll
pop
mov
cmp
lods
pop
mov
sub
add
ds
mov
loop
mov
sarl
cs
push
push
mov
addb
fistpll
lret
mov
push
je
test
out
call
stos
cmp
push
dec
mov
mov
dec
addb
adc
push
or
andl
cmp
fadds
mov
das
lock
cli
or
rolb
dec
rolb
mov
inc
call
popa
push
gs
ss
xchg
add
mov
xor
mov
enter
mov
push
pusha
add
inc
add
pop
cmp
push
fistpl
add
mov
add
mov
rolb
mov
add
dec
imul
icebp
jns
dec
ficoml
fldln2
aam
rolb
mov
add
add
mov
push
xchg
add
pop
test
mov
mov
cmc
dec
lahf
out
les
js
add
add
xchg
ror
lea
aad
mov
sbb
mov
jbe
dec
scas
or
repnz
into
jne
add
xchg
add
mov
mov
fidivs
dec
xchg
push
popa
adc
test
jne
clc
or
out
mov
lds
inc
xchg
int
mov
sbb
ret
pop
imul
jge
jbe
inc
add
mov
pop
jmp
addb
negl
in
add
adc
mov
jecxz
add
cmc
orl
add
mov
repz
sbb
mov
arpl
add
mov
mov
push
gs
lock
mov
fcmovb
ret
dec
test
addr16
scas
mov
mov
add
in
sbb
or
push
mul
add
jne
pop
cmp
add
fsts
enter
push
xchg
repz
insl
test
and
mov
addb
mov
add
lea
gs
xchg
mov
leave
adc
add
xlat
lock
mov
jnp
stos
es
in
shrl
cmp
les
jbe
add
inc
add
pop
push
in
addb
std
js
add
push
out
adc
mov
push
pusha
add
xchg
mov
call
test
mov
push
pop
add
mov
popf
imul
into
pop
ds
push
gs
jbe
mov
push
add
mov
imul
mov
jo
mov
add
fisttps
pop
sahf
jnp
add
out
aad
add
pop
jp
and
mov
jge
outsb
loopne
mov
stos
loop
mov
add
stos
mov
add
xor
mov
push
mov
mov
in
adc
mov
add
inc
cmp
fnstsw
dec
les
jg
arpl
xor
jne
sbb
lods
icebp
rolb
mov
adc
pop
js
test
imul
add
pop
inc
sbb
mov
mov
lods
lret
repz
movsl
xor
xchg
pop
aaa
xchg
sub
jecxz
daa
dec
mov
aad
out
add
imul
test
popa
adc
adc
mov
add
push
add
sub
mov
xchg
add
mov
mov
add
mov
enter
aas
inc
jg
mov
push
sbb
add
daa
push
inc
inc
ljmp
pusha
add
sub
jb
mov
add
daa
inc
cld
test
addb
xchg
mov
mov
mov
xor
stos
pusha
add
mov
mov
mov
in
out
test
add
cmc
roll
cld
adc
mov
push
and
jmp
ljmp
fnsave
cmp
add
add
add
adc
mov
data16
jns
in
mov
add
out
and
mov
and
loope
push
push
out
pop
ss
pop
scas
mov
popa
nop
add
fisttpll
xchg
test
add
shll
mov
mov
sub
cs
add
mov
add
outsl
seta
pop
stos
jge
in
adc
testb
dec
ljmp
mov
ss
fists
add
lock
fldenv
xchg
add
cmp
dec
xor
rcl
rolb
mov
subl
ds
adc
mov
mov
int
dec
fucomip
jl
add
add
mov
add
addl
or
jecxz
add
sub
int3
loop
mov
inc
add
cmp
std
cmc
hlt
add
mov
jl
add
jne
pop
jmp
in
fcomps
mov
mov
mov
pop
lret
add
sbb
push
js
scas
sub
lcall
mov
push
dec
inc
jnp
add
push
xchg
das
das
dec
jbe
sarl
mov
mov
addb
inc
add
into
lea
lret
add
mov
hlt
fisubrs
mov
or
dec
cmp
mov
pop
mov
divl
ds
lahf
icebp
xchg
xchg
add
cli
out
jle
test
neg
mov
cwtl
inc
pusha
add
add
dec
xchg
out
repz
add
lret
add
or
mov
jl
shll
cmove
or
cld
sub
je
or
lahf
jge
testb
aad
pop
inc
add
or
cmpsb
jno
aam
cld
data16
aad
outsl
pop
in
add
mov
addb
push
jl
sub
add
out
lcall
cld
outsl
imul
rolb
add
cmpsl
movsb
push
cmp
add
push
push
bound
mov
xor
addr16
or
push
sti
ss
push
fisttps
imul
add
jg
mov
add
or
jb
mov
roll
dec
add
pushf
sub
inc
add
add
rcll
scas
repz
mov
xchg
push
mov
lds
lcall
inc
das
xor
mov
insb
lock
fstpl
add
addb
addb
push
add
lods
mov
mov
imul
fisubs
and
int
jmp
adc
xchg
out
pop
shll
push
divl
addb
movsb
add
pop
and
leave
stc
dec
and
add
add
out
cmp
add
faddp
adc
mov
inc
push
je
add
add
cltd
jmp
lods
sbb
sahf
xchg
add
mov
mov
mov
sbb
adc
mov
xor
inc
push
adc
mov
mov
mov
sub
jns
mov
mov
pop
mov
dec
adcl
mov
add
mov
dec
lods
xchg
mov
cmp
add
incb
mov
inc
dec
test
mov
pop
mov
mov
mov
add
mov
cld
adc
pop
cwtl
mov
lock
push
icebp
cmp
add
sbb
pop
sub
arpl
xor
mov
pop
out
pusha
add
adc
mov
hlt
sub
inc
mov
adc
xchg
adc
add
pop
stos
mov
mov
jne
add
adc
mov
add
sub
popa
mov
das
xchg
cmp
enter
addb
mov
push
or
xor
inc
add
pop
pop
pop
lret
aas
fdivl
mov
mov
jge
pop
out
pop
and
mov
jb
mov
out
les
cmp
insl
outsb
dec
pop
add
mov
rcrl
push
add
repz
xor
xor
xor
fildl
cmpsb
dec
mov
jne
mov
stos
lret
mov
repnz
fimuls
cmp
xchg
inc
and
adc
mov
sbb
push
add
adc
in
push
sbb
mov
cld
pop
sbb
cmp
mov
cmpsl
fdivrs
jno
add
add
pop
int3
outsl
sub
mov
ja
add
mov
cmp
mov
test
inc
add
mov
mov
mov
add
mov
mov
bound
mov
pushf
jmp
in
jne
mov
push
in
int3
pusha
add
mov
push
mov
out
repnz
movsb
sbb
jae
aaa
pop
std
xchg
xchg
or
fcomp
out
fwait
cli
adc
ret
addb
hlt
or
sbb
xor
pop
pop
daa
call
jb
mov
add
mov
rolb
mov
loope
sbb
ljmp
jnp
and
mov
outsb
or
leave
xor
mov
add
inc
jmp
sbbl
inc
add
into
xchg
outsl
mov
in
mov
and
test
pop
push
pop
fistpll
or
mov
adc
inc
add
imul
xor
cltd
or
ret
inc
adc
mov
mov
add
mov
xchg
and
lret
add
mov
out
jo
mov
sbb
leave
movsb
mov
insl
sub
add
add
dec
cmc
inc
or
jp
xor
jmp
or
lods
xor
out
iret
in
xor
popf
int3
push
push
mov
push
data16
out
stos
js
jmp
xor
push
lea
mov
mov
mov
adc
fwait
test
jnp
out
add
mov
cltd
icebp
fsubl
je
xchg
imul
mov
lods
inc
xchg
sbb
jl
lcall
scas
add
mov
jge
in
add
dec
add
mov
add
add
inc
xlat
mov
in
mov
mov
sbb
xor
add
add
mov
fdivrp
mov
pop
test
ds
push
cli
cmp
adc
mov
add
mov
leave
std
push
cmpsb
std
les
adc
imul
std
addr16
xlat
les
bound
mov
ds
outsb
lahf
roll
add
pop
stc
cmp
stc
push
inc
popf
cli
popf
std
ss
xor
add
sbb
xchg
add
dec
push
mov
push
sbb
enter
add
in
jbe
add
insb
push
add
ja
loope
ja
add
int3
rolb
push
push
and
mov
add
mov
push
dec
inc
mov
dec
jge
lods
adc
mov
mov
scas
movsb
rolb
mov
xor
mov
ljmp
jnp
lock
mov
mov
addl
sub
add
inc
rolb
test
mov
dec
jl
push
insb
loopne
mov
or
mov
inc
mov
les
mov
mov
jno
add
xlat
xchg
cmp
movsb
cmp
and
mov
add
mov
mov
ljmp
mov
jb
mov
adc
mov
inc
shll
imul
mov
aas
int3
add
mov
mov
sbb
add
mov
add
cmp
add
bound
mov
mov
loopne
mov
dec
loop
mov
inc
sub
add
xchg
popf
roll
rolb
mov
rcr
and
mov
adc
mov
push
jns
sbb
ljmp
sti
cwtl
outsl
ds
xchg
add
in
dec
push
add
add
enter
pop
pop
mov
inc
add
fldl
xchg
sub
add
cltd
xlat
sub
add
mov
cmpsl
int
out
cmpsl
repz
out
inc
inc
push
cmp
mov
xchg
lods
bound
mov
test
int3
pop
xor
stc
hlt
stos
rorl
push
add
out
push
scas
add
mov
add
mov
rol
stc
mov
loopne
mov
data16
in
frstor
sbb
sub
pop
push
jl
mov
lcall
jns
fwait
mov
push
jne
out
addb
lea
mov
push
pop
add
mov
or
cmp
add
xor
jge
popa
mov
addb
repnz
sbb
int3
jno
add
cmp
add
mov
jmp
sti
icebp
push
cmpsb
inc
dec
fsub
xchg
pop
andl
push
add
aad
pop
ficomps
inc
shll
lret
add
call
or
add
adc
add
inc
add
fstl
scas
push
cmp
pop
repnz
jmp
or
add
jo
mov
loop
mov
in
sub
mov
inc
push
sbb
leave
test
xchg
scas
test
mov
sbb
mov
addb
lret
add
mov
pop
or
notb
sub
cmpsl
div
add
dec
fisubrl
lods
sbb
in
add
repz
jne
lods
cmp
jmp
xor
jge
movsl
rolb
mov
shll
stos
aam
push
test
xchg
sbb
push
add
jecxz
mov
xlat
sbb
and
xchg
sbb
test
jnp
int
push
add
add
add
jne
dec
or
ret
movlps
mov
xchg
mov
add
mov
add
pop
hlt
adc
jnp
mov
add
add
addb
add
cmp
jle
das
dec
cmpsl
scas
jb
mov
cmp
insl
mov
jb
mov
sbb
jp
inc
add
cli
dec
sub
aaa
rcr
lret
ret
fldl2t
bound
mov
call
add
sbb
jmp
lret
sbb
xchg
test
movsl
mov
mov
or
mov
push
out
add
cmp
pop
push
add
add
mov
jns
and
mov
loope
cld
xlat
sti
sahf
popa
adc
mov
cmp
add
sarl
and
rolb
mov
add
mov
mov
mov
lahf
mov
mov
jecxz
cmp
mov
add
push
dec
cmp
adc
adc
mov
cli
cmp
rolb
mov
sbb
sub
fstps
jmpw
mov
xchg
lahf
push
adc
adc
mov
jno
leave
mov
mov
in
sahf
inc
add
jb
mov
add
addb
hlt
xor
mov
int
push
jns
add
pop
inc
es
mov
outsb
lcall
mov
idiv
mov
je
aas
int3
jmp
stos
aaa
fildl
mov
iret
ret
push
aad
jns
push
movb
xor
pop
cld
push
push
lret
xor
mov
pop
cmpsb
data16
adc
jp
popa
inc
pop
addb
inc
xchg
add
xor
es
test
jg
add
mov
mov
scas
or
inc
scas
xchg
add
mov
mov
mov
test
sahf
ja
and
jmp
pop
adc
mov
add
add
sub
mov
mov
loop
mov
data16
sub
xlat
dec
inc
jp
mov
or
fucom
into
mov
mov
pop
xchg
inc
add
iret
loopne
mov
lcall
or
add
add
mov
pop
arpl
add
mov
mov
add
mov
jle
add
mov
cmp
in
mov
int
xrelease
negw
add
in
and
jb
mov
pop
nop
add
sarl
fsubs
push
dec
gs
and
mov
inc
add
in
es
sbb
add
cwtl
push
jp
movsl
jg
xchg
xchg
aad
sub
pop
js
xor
mov
or
loope
add
mov
mov
sbbl
mov
mov
add
ret
xchg
aas
mov
and
mov
mov
jb
mov
and
sub
adc
mov
mov
push
add
pop
jge
cmp
mov
pop
imull
or
add
mov
add
outsl
ret
mov
jb
mov
push
jne
add
push
fisubl
add
sub
sub
and
mov
mov
and
mov
push
mov
add
ljmp
jb
mov
rolb
mov
add
pop
rolb
mov
jne
neg
in
bound
mov
jle
or
add
dec
pop
ljmp
add
push
cli
jnp
out
add
add
cmc
cli
adc
push
mov
add
mov
loopne
mov
dec
inc
add
orl
mov
test
inc
adc
mov
push
bound
mov
dec
les
add
pushf
add
mov
add
mov
in
cmp
push
or
ss
mov
mov
xchg
add
addr16
sub
sub
xchg
stos
addb
xchg
out
mov
ss
pusha
add
pushf
or
push
add
push
inc
repnz
mov
mov
mov
dec
sbb
mov
movsb
cmpsl
jns
out
sbb
add
push
out
add
jg
mov
or
add
in
mov
xchg
cld
mov
add
xor
mov
add
fbld
xor
mov
mov
mov
inc
ja
or
mov
bound
mov
jecxz
and
mov
orl
mov
jno
popf
shll
les
sbb
sbb
fimuls
sarl
mov
xchg
movsl
ja
clc
int
or
inc
fwait
sbb
cld
dec
pop
fisttps
cld
test
jecxz
add
inc
add
cwtl
ljmp
push
add
mov
fs
movb
aaa
pop
jp
sbb
les
push
loop
mov
add
sub
insl
popf
adc
mov
and
jg
fwait
adcl
nop
add
mov
and
mov
sub
fisubrl
adc
call
imul
stos
pop
arpl
mov
sbb
push
movsl
inc
add
lds
jle
add
pop
into
loop
mov
sbb
mov
stc
lock
push
add
inc
and
add
out
push
aaa
das
mov
adc
pop
test
adc
cmp
test
jl
xor
outsl
add
mov
add
mov
add
repnz
out
scas
push
add
mov
das
xlat
sbb
bound
mov
add
xor
sub
insb
popf
mul
adc
jmp
stos
mov
cmpsl
dec
cli
test
js
mov
mov
int
add
ret
inc
mov
dec
into
dec
popf
arpl
add
sbb
or
nop
add
add
add
add
movsl
lods
mov
lods
pop
stc
pusha
add
and
mov
mov
insb
lret
ret
scas
fcmovb
add
push
stos
sub
xchg
add
cmp
add
shl
inc
mov
add
mov
add
mov
outsl
ja
push
jae
push
add
cld
fistpll
xor
mov
sub
out
add
mov
cmp
sahf
stos
daa
jae
aam
jne
cmc
sbb
add
mov
mov
cwtl
incb
shl
or
pop
or
in
out
dec
pop
mov
add
orl
lahf
push
add
mov
mov
test
das
arpl
lods
insb
js
lods
rorl
pusha
add
jne
das
adc
xchg
xchg
push
add
pop
sub
sub
clc
adc
je
out
jae
mov
jns
clc
es
mov
stos
sbb
jge
add
lret
mov
jbe
add
add
inc
jne
xor
mov
bound
mov
lcall
ret
xchg
call
adc
mov
pop
test
and
adc
cmc
dec
in
das
ret
popa
dec
leave
pop
jmp
jecxz
cltd
sub
test
xor
mov
inc
lcall
loopne
mov
add
shr
ljmp
outsb
push
pop
movsl
mov
mov
pushf
mov
mov
add
cmp
jo
mov
jge
sub
sub
addb
jp
mov
sub
mov
xor
mov
push
rcrl
das
popa
in
push
outsb
and
mov
aad
jb
mov
add
jmp
int3
add
mov
push
add
fidivrl
mov
mov
sti
inc
fdivs
and
inc
add
adc
mov
fwait
mov
pop
pand
lods
cmp
loopne
mov
and
sbb
rolb
int3
jmp
imul
sbb
push
adc
mov
movsl
pop
pop
ljmp
mov
fs
jns
adc
mov
mov
mov
xchg
pusha
add
add
add
sub
arpl
mov
push
fld
or
test
into
sbb
push
add
mov
mov
add
repnz
data16
in
hlt
xlat
insb
and
lods
push
or
sub
in
adc
dec
gs
mov
in
es
cmp
xor
mov
dec
call
add
xchg
xor
out
jbe
aam
test
mov
leave
pusha
add
add
adc
add
cmp
jns
test
mov
stos
and
mov
add
sub
test
out
nop
add
testb
sbb
xchg
or
sarl
adc
mov
mov
or
adc
or
sub
add
add
cmp
test
cmp
out
push
daa
mov
popf
cmpsb
rolb
mov
fstl
fdivrp
lret
xchg
cmpsb
mov
mov
iret
into
and
mov
cld
adc
push
add
sti
jb
mov
add
mov
fidivrl
xor
leave
popf
pop
adc
add
das
push
inc
sub
push
roll
xchg
insb
pop
mov
iret
aas
addb
jle
out
inc
add
mov
sub
mov
pop
push
jo
mov
inc
dec
stos
mov
hlt
mov
fisttpll
or
mov
mov
out
mov
pop
mov
rolb
ja
lahf
push
ljmp
outsb
xor
mov
jmp
in
inc
mov
cmovs
hlt
mov
stos
add
scas
stos
std
mov
mov
mov
xor
mov
push
orl
pop
aas
dec
dec
push
sub
add
rolb
mov
orl
inc
dec
mov
cmpsl
lock
add
xchg
mov
bswap
mov
mov
mov
jb
mov
push
ret
loop
mov
pop
ret
add
add
addb
js
dec
in
insl
test
mov
pop
sbb
add
mov
sub
aaa
in
mov
jae
adc
jbe
popa
roll
mov
les
mov
mov
mov
push
jge
sbb
into
cltd
inc
mov
or
add
mov
mov
fmulp
cwtl
pop
push
arpl
mov
mov
outsl
lahf
pop
dec
sub
lods
popa
inc
add
add
aaa
clc
in
stc
mov
xlat
jo
mov
int
sbb
adc
mov
add
add
fcoml
mov
mov
jb
mov
pop
cltd
cltd
enter
add
cltd
xchg
mov
add
mov
mov
cmp
sub
mov
mov
andl
lcall
pop
xor
mov
das
lea
add
cmp
sub
test
mov
inc
out
sbb
lret
cmp
mov
or
into
std
rolb
pop
sbb
jge
mov
mov
imul
jbe
add
iret
movl
pop
sub
sbb
cmp
stc
add
mov
mov
rolb
fcompl
inc
jns
aaa
imul
jnp
loopne
mov
pop
adc
int3
scas
test
lret
inc
add
add
or
int3
bound
mov
dec
mov
das
andnps
int3
inc
into
mov
mov
sbb
out
clc
inc
add
jb
mov
push
ret
hlt
and
mov
mov
in
sub
nop
add
movl
add
add
sti
cmpsl
or
mov
xor
sub
pop
mov
xor
push
mov
or
icebp
push
xchg
mov
aad
cmc
lds
xchg
and
mov
mov
adc
add
xor
mov
push
call
sti
ljmp
test
in
sbb
inc
lret
loop
mov
cmp
push
cld
and
mov
mov
mov
jne
outsl
negb
fcomi
jo
mov
add
mov
fists
sub
pop
sbb
enter
pop
inc
push
jne
test
clc
xor
test
mov
xchg
add
jmp
loop
mov
sbb
push
add
mov
mov
mov
adc
mov
jmp
add
jmp
mov
sahf
leave
ret
jmp
add
imul
sbb
repnz
sbb
in
add
add
in
xor
xchg
add
leave
inc
xchg
pop
dec
jae
loopne
mov
loope
push
fadd
add
cwtl
and
mov
shrl
jbe
cmp
sahf
adc
mov
dec
jmp
mov
jb
mov
sub
insb
adc
mov
dec
icebp
int
mov
mov
inc
lahf
imul
data16
out
push
or
xor
cwtl
hlt
mov
add
push
inc
xchg
adc
movsb
lock
test
xchg
mov
mov
jno
cmp
mov
in
jbe
sbb
in
lea
cmc
adc
repnz
rolb
pop
and
sahf
sahf
inc
lea
ja
iret
mov
fs
and
mov
xor
mov
mov
add
xor
in
xchg
inc
fcoms
push
aas
sti
add
mov
mov
mov
and
mov
adc
scas
sub
ret
xchg
lods
cmpl
aad
xchg
add
jp
cmc
mov
rolb
mov
test
mov
mov
nop
add
xchg
jae
mov
push
rolb
add
mov
call
les
add
add
test
adc
sub
in
inc
add
mov
filds
add
mov
addb
pop
cli
lock
sub
outsl
fwait
pop
or
adc
add
into
or
or
js
out
xorl
mov
repnz
and
add
mov
lock
add
pop
jl
push
mov
add
daa
int3
lahf
arpl
mov
cli
rolb
adc
mov
pusha
add
mov
test
add
inc
add
mov
sti
xchg
mov
and
add
push
add
or
xchg
mov
mov
push
addb
and
mov
sbb
jp
fsubrp
pushf
lret
pop
stos
sbb
add
dec
loope
and
xor
mov
sti
sbb
xchg
push
inc
mov
insl
jns
add
inc
add
mov
jnp
scas
outsl
lahf
jae
iret
inc
add
push
xchg
cs
stc
movsl
inc
add
push
popa
cmp
mov
xchg
clc
fiaddl
dec
test
les
add
adc
scas
adc
outsb
call
movsb
adc
mov
xchg
cmp
int3
dec
cmp
mov
mov
mov
scas
popa
jmp
pusha
add
and
pop
push
add
mov
xor
in
push
push
sahf
test
je
daa
dec
mov
mov
add
sub
mov
xchg
sub
jp
mov
mov
imul
test
mov
repz
adc
sbb
mov
pop
fistpll
ds
cwtl
sbb
pop
jns
outsl
dec
push
mov
stos
ljmp
adc
sbb
add
mov
add
add
inc
movsb
xchg
das
test
and
mov
mov
les
xchg
lcall
add
sub
and
xchg
xchg
fcoml
nop
add
cmpsl
ret
cmp
insl
ficomps
add
xchg
add
sbbl
pop
jg
sub
and
xchg
dec
add
adc
pushf
mov
rolb
mov
lea
je
rcr
inc
xchg
jg
push
addb
pop
lret
mov
mov
mov
or
jo
mov
scas
mov
imul
mov
push
sub
mov
pop
jmp
insl
mov
dec
dec
push
cld
xchg
xchg
add
mov
cmp
mov
mov
in
pop
cmp
sbb
xlat
jge
push
insb
fsubrl
mov
loop
mov
add
dec
adc
fldenv
pushf
fsubl
mov
mov
sub
add
mov
add
mov
mov
mov
mov
push
mov
jnp
sub
add
addl
sub
mov
mov
push
repnz
mov
xor
xchg
add
scas
mov
push
repz
jbe
pop
sbb
push
jne
rolb
mov
xchg
mov
add
fimull
inc
xor
add
sub
adc
aad
mov
in
add
in
cmp
movsb
xor
bound
mov
int
rolb
mov
adc
add
xor
mov
lret
sti
cmp
fs
inc
icebp
add
bound
mov
and
test
adc
mov
test
loope
add
xchg
pop
imul
mov
lds
test
xchg
je
faddl
mov
add
decb
cmp
lds
add
xlat
scas
pop
cmpps
cld
push
mov
dec
dec
stos
fisttpl
das
sub
jae
insl
add
mov
add
lret
add
and
mov
mov
inc
inc
xor
mov
lcall
cs
mov
pop
mov
fsubrl
repnz
add
xor
mov
jge
dec
rolb
mov
gs
or
add
lret
mov
mov
push
das
sub
mov
ret
pop
adc
xor
mov
mov
rcl
lods
cmp
add
nop
add
lret
repz
fdivrs
dec
push
mov
fsubs
sub
adc
repnz
imul
add
xor
mov
pop
int
sbb
add
mov
addb
stc
into
das
mov
push
daa
mov
sub
push
sbb
add
sub
adc
fnstcw
xor
daa
popa
bound
mov
xor
mov
add
adc
mov
fwait
int
es
sub
add
stos
inc
movsb
pop
pop
and
mov
xor
jle
and
addl
adc
popl
movb
ss
aam
add
cld
jl
or
mov
loope
clc
subl
mov
xchg
rcrl
loopne
mov
jnp
mov
shl
add
sub
cltd
fists
jbe
jg
cmp
adc
inc
addr16
fistpl
sbb
mov
xor
pop
add
mov
add
popf
out
stos
es
inc
aaa
and
add
scas
pop
jp
jle
pop
jae
repnz
add
add
pusha
add
mov
push
jecxz
pop
lods
adc
in
rolb
mov
int3
xor
fistpll
add
adc
aad
sub
lods
test
mov
or
sbbl
mov
add
sbb
ds
ret
or
or
or
inc
jb
mov
lret
adc
mov
mov
lcall
js
and
and
add
dec
pop
inc
lods
aad
movsb
dec
pop
pop
cmc
inc
mov
jmp
outsl
popf
maskmovq
testl
mov
cs
nop
add
cmpsl
ret
xchg
jb
mov
das
rolb
mov
jle
mov
cltd
cltd
mov
pop
xor
out
or
fstps
dec
incl
stos
test
rolb
mov
dec
js
in
add
mov
stos
inc
lret
jp
adc
add
cltd
mov
xchg
add
or
dec
adc
scas
inc
adc
mov
bound
mov
cwtl
push
add
or
gs
rcll
gs
pusha
add
xchg
cmp
das
das
adc
mov
popa
mov
adc
in
xchg
insl
repz
add
sbb
pop
xchg
add
into
sbb
fstpt
addb
dec
lcall
movsb
mov
add
sbb
mov
jno
ja
mov
mov
fmull
add
mov
add
scas
in
cld
cmp
xor
xchg
fisttpl
ljmp
pop
leave
insb
aad
dec
dec
cmc
sbb
mov
mov
rolb
mov
mov
mov
sbb
mov
daa
movb
inc
jbe
add
es
xchg
dec
xor
stc
jmp
enter
mov
mov
jge
add
pop
dec
iret
rolb
addb
dec
lods
dec
fxch
sub
aaa
in
sub
add
mov
mov
dec
cli
mov
add
pop
pop
pop
mov
add
mov
mov
xchg
push
dec
jb
mov
in
scas
iretw
dec
pushf
jp
inc
pop
je
inc
add
mov
mov
jns
push
test
mov
add
jne
push
test
add
ss
mov
add
out
cmpsb
fwait
xchg
cmc
jnp
dec
dec
push
imull
movsw
sbb
xchg
popa
test
cmp
xchg
add
mov
xchg
movsl
lock
mov
add
mov
pop
insb
int
stos
cmp
jns
pushf
js
imul
mov
cmpl
mov
and
into
popf
and
cmp
add
cmc
stos
jo
mov
mov
cmp
push
rcll
addb
and
mov
push
fs
inc
dec
repz
add
andl
sub
aam
mov
add
adc
js
hlt
cwtl
lods
ret
push
add
in
inc
mov
add
ss
mov
mov
mov
nop
add
mov
mov
lods
in
jno
pop
insl
jp
dec
les
out
fists
lds
xchg
repnz
mov
data16
adc
jl
sbb
mov
hlt
fnstsw
pop
lock
repnz
mov
daa
xor
inc
ja
out
pop
subl
call
leave
loopne
mov
add
dec
aas
cli
xor
mov
add
adc
mov
dec
fldt
mov
cltd
pop
push
add
jb
mov
cmp
xchg
sbb
je
xchg
loopne
mov
mov
dec
sub
add
daa
mov
add
sub
pop
push
add
cwtl
lds
mov
mov
pop
lods
add
pop
mov
add
sub
add
sub
and
push
add
or
xlat
rcrl
mov
add
lods
dec
jno
add
bound
mov
add
mov
mov
dec
ret
and
push
mov
mov
lods
inc
mov
addr16
cmp
inc
imul
add
add
xor
mov
push
cmp
jecxz
jp
mov
inc
mov
add
shll
fisttps
add
mov
outsl
add
mov
in
xchg
push
xlat
mov
repnz
mov
lahf
jmp
cmpsl
dec
jno
je
movsb
dec
sub
mov
mov
movsl
in
rol
add
xchg
pop
mov
fsubs
xor
adc
add
push
dec
mov
adc
mov
inc
add
add
lods
roll
add
mov
leave
or
fcomi
popf
int
add
add
dec
jb
mov
add
movsb
fisubl
dec
insl
loopne
mov
jno
add
mov
add
fisubl
addb
mov
dec
jp
jmp
mov
mov
mov
xchg
add
mov
sbb
aad
outsl
sub
dec
outsb
xor
loopne
mov
xchg
add
ret
pop
pop
and
add
push
das
cmp
add
inc
mov
mov
fs
repnz
mov
in
mov
add
mov
mov
insb
test
push
push
add
sti
roll
mov
fstpt
sub
test
es
insl
xchg
sub
repz
mov
push
es
aad
and
xlat
xchg
add
sub
xor
loop
mov
xchg
mov
adc
push
push
int
repnz
sbb
jle
xchg
mov
push
sub
mov
sbb
sub
jg
adc
mov
xorl
mov
mov
stos
dec
mov
mov
inc
add
pushf
imul
lahf
fwait
test
pop
clc
dec
std
int
xrelease
add
inc
jns
inc
add
mov
jne
mov
dec
in
dec
sub
and
out
ds
mov
dec
push
test
add
xchg
pop
jmp
std
jmp
fstpl
mov
cmp
add
add
jge
imul
add
adc
add
pop
rolb
mov
or
xor
mov
std
xor
mov
loop
mov
and
arpl
push
add
cmp
mov
mov
mov
jl
add
add
add
mov
add
scas
push
outsb
sahf
dec
mov
fistps
add
jecxz
mov
mov
mov
mov
pop
sub
add
test
push
dec
adc
mov
mov
movsl
addr16
push
push
bound
mov
fcompp
mov
jmp
sbb
cmpsb
push
repnz
add
imul
int
and
pop
and
mov
add
mov
jle
xor
pop
das
lods
pop
popa
xchg
add
out
fcoml
push
add
out
adc
ds
jp
add
jg
arpl
jns
add
iret
add
xchg
add
add
xchg
pop
cli
dec
and
mov
push
mov
mov
mov
shll
add
bound
mov
test
pop
and
mov
sub
lcall
sahf
pop
adc
mov
add
and
mov
mov
fisttps
sbb
sub
outsb
movsl
xchg
and
movsb
scas
adc
ds
mov
mov
add
adc
mov
sub
jmp
fcomps
push
jle
stos
fimull
push
mov
mov
aad
jae
aam
imul
jns
lret
imul
pop
jo
mov
pop
inc
push
add
int
sbb
sub
jbe
aas
and
les
dec
out
mov
fistpll
lcall
or
mov
out
adc
cmp
decb
push
and
cmp
or
dec
mov
mov
fsubrl
stc
pop
cmpsl
adc
repz
pop
std
fmull
in
movsl
call
push
add
sub
pop
aaa
dec
popa
mov
gs
mov
fisttpl
xor
lods
mov
adc
in
add
mov
ss
pop
sbb
add
scas
push
jecxz
mov
jne
and
lea
movsl
sub
mov
ss
adc
mov
jmp
addb
add
or
jmp
or
jae
cs
xchg
test
cmpsb
shll
add
adc
jg
jae
add
test
stc
adc
mov
bound
mov
addb
das
push
inc
std
and
mov
data16
sub
push
add
push
cmp
fwait
fwait
cwtl
xchg
sarl
popa
shll
scas
aad
mov
add
mov
add
stos
stos
jmp
adc
pop
cmp
int3
std
addb
ljmp
jbe
inc
icebp
sub
mov
pushf
add
mov
sub
iret
mov
add
les
mov
sub
stos
dec
cmc
push
xchg
add
mov
ss
das
aaa
adc
fwait
sbb
add
add
xor
add
jns
jp
inc
add
jo
mov
add
inc
iret
bound
mov
movsl
dec
push
ja
sbb
jmp
or
mov
das
sahf
xor
xchg
int3
cli
inc
add
imul
inc
add
aam
rolb
mov
sub
inc
insb
add
mov
adc
inc
add
aaa
cmp
add
cs
push
add
mov
add
add
or
push
push
mov
add
mov
in
repz
xor
mov
mov
add
push
mov
scas
sub
pop
or
add
dec
dec
int
xor
mov
push
or
out
movsb
pop
inc
or
mov
xchg
push
mov
clc
mov
xchg
or
mov
mov
inc
cmpsb
mov
mov
daa
fiaddl
aam
add
andl
mov
push
movw
popa
ss
add
mov
mov
add
scas
mov
mov
jg
mov
cmpsb
dec
xlat
test
mov
sar
mov
mov
fwait
shrl
sub
cmpsl
mov
mov
inc
mov
pushf
sar
and
jmp
lret
lret
push
and
add
inc
dec
iret
imul
mov
iret
insb
sbb
sahf
pop
sub
add
ret
outsb
mov
add
movsb
seto
mov
gs
out
pushf
push
add
pop
rolb
mov
rolb
mov
sbb
jnp
and
add
cmp
je
out
mov
sbb
mov
repnz
xchg
jo
mov
mov
stc
stos
lods
cmpxchg
add
jno
in
rol
rorl
mov
lods
cmp
iret
pop
movsl
mov
mov
add
fwait
and
test
sbb
add
sbb
xor
mov
mov
inc
test
xchg
jl
pop
addb
jg
divl
testb
pop
imul
pop
out
gs
add
pop
jo
mov
add
fnstsw
fwait
xor
pop
xchg
sub
adc
cmc
adc
mov
add
xchg
cltd
pop
repz
lret
js
ret
movb
add
mov
adc
dec
xor
mov
repz
mov
add
mov
mov
mov
xchg
dec
xchg
push
hlt
mov
mov
mov
add
inc
mov
and
mov
mov
pop
xchg
jb
mov
clc
adc
and
out
ret
sbb
out
push
nop
add
adc
xchg
cmp
mov
mov
xlat
mov
mov
add
or
push
add
mov
cmp
inc
sub
mov
add
xor
mov
daa
xor
mov
add
addb
xchg
ret
ret
jmp
mov
out
std
jmp
add
xor
rolb
mov
fdivrp
lods
inc
sub
add
ss
jg
push
mov
xor
daa
sub
or
add
jp
scas
je
mov
mov
jp
add
push
pop
sbb
call
ror
mov
add
sub
add
mov
xor
mov
add
push
out
push
dec
push
mov
add
imull
cwtl
pusha
add
mov
xlat
call
fidivrl
cmc
jle
out
add
xchg
dec
cmp
hlt
inc
sbb
add
inc
add
in
nop
leave
jmp
xchg
add
xchg
shr
clc
repnz
nop
cld
jae
add
cmp
repnz
nop
cld
jae
add
out
push
pop
push
mov
xchg
ret
add
sbb
xchg
add
push
jne
add
clc
repnz
nop
cld
jae
leave
add
add
inc
call
in
add
add
cmc
xor
inc
bound
push
out
and
mov
add
testl
add
sbb
jg
add
repnz
nop
cld
jae
add
add
clc
jne
clc
repnz
nop
cld
jae
pop
add
bound
mov
movzwl
clc
repnz
nop
cld
jae
add
pop
push
mov
xchg
ret
add
cmp
add
add
icebp
lret
mov
push
mov
xchg
ret
roll
outsb
add
add
call
mov
xchg
ret
inc
pop
add
scas
jb
addb
cmp
dec
cmp
repnz
nop
cld
jae
add
ret
imul
and
cmp
ret
add
push
push
add
add
pop
cmpl
push
mov
nop
leave
jmp
fwait
cmp
adc
xchg
add
push
mov
xchg
ret
add
add
lea
out
imul
clc
repnz
nop
cld
jae
xor
mov
sbb
loopne
inc
add
add
add
add
mov
clc
repnz
nop
cld
jae
xchg
sarb
add
sahf
push
push
mov
nop
leave
jmp
add
leave
push
cmp
scas
add
add
add
repnz
nop
cld
jae
add
mov
mov
nop
nop
cld
jae
add
scas
add
push
sti
fisubl
xor
add
clc
repnz
nop
cld
jae
add
clc
repnz
nop
cld
jae
add
add
push
scas
add
call
clc
repnz
nop
cld
jae
push
jne
add
inc
add
sbb
repnz
nop
cld
jae
stos
add
and
icebp
out
jne
clc
repnz
nop
cld
jae
scas
add
rolb
push
in
push
push
mov
xchg
ret
xor
xor
lods
jle
filds
mov
add
clc
repnz
nop
cld
jae
add
movsb
lcall
or
in
nop
leave
jmp
add
add
repnz
nop
cld
jae
push
mov
add
mov
mov
clc
repnz
nop
cld
jae
ret
push
ja
int3
add
rclb
int3
inc
add
add
xor
lods
inc
fwait
adc
call
clc
repnz
nop
cld
jae
and
add
rolb
sti
push
clc
repnz
nop
cld
jae
add
sbb
sahf
add
mov
add
repnz
nop
cld
jae
add
add
inc
push
mov
xchg
ret
add
add
xchg
shll
add
add
add
and
add
icebp
add
mov
clc
repnz
nop
cld
jae
leave
add
lea
clc
repnz
nop
cld
jae
inc
add
add
add
repnz
nop
cld
jae
add
add
data16
pop
and
clc
repnz
nop
cld
jae
imul
rclb
fiadds
xchg
ret
xchg
add
rolb
imul
nop
nop
cld
jae
jb
filds
add
cmpsl
cmp
nop
nop
cld
jae
mov
add
add
clc
repnz
nop
cld
jae
add
add
push
clc
repnz
nop
cld
jae
add
add
add
jb
or
clc
repnz
nop
cld
jae
mov
add
dec
clc
repnz
nop
cld
jae
add
add
add
and
push
mov
xchg
ret
scas
add
mov
mov
clc
repnz
nop
cld
jae
sti
stos
xor
xchg
mov
jne
push
mov
nop
leave
jmp
dec
roll
outsb
scas
add
mov
push
mov
nop
leave
jmp
mov
jle
mov
mov
clc
repnz
nop
cld
jae
out
in
mov
push
push
mov
xchg
ret
add
add
mov
sbb
nop
nop
cld
jae
fwait
mov
icebp
clc
repnz
nop
cld
jae
xor
jb
test
dec
mov
push
mov
nop
leave
jmp
add
add
add
inc
pop
loop
mov
push
clc
repnz
nop
cld
jae
outsb
rolb
cmp
ljmp
add
mov
nop
leave
jmp
add
sahf
add
outsb
xchg
dec
call
clc
repnz
nop
cld
jae
add
icebp
scas
mov
pop
out
add
add
push
and
add
push
mov
nop
leave
jmp
add
add
ljmp
jne
clc
repnz
nop
cld
jae
add
add
nop
nop
cld
jae
ja
push
out
ja
and
mov
add
clc
repnz
nop
cld
jae
mov
leave
cmpl
sub
add
add
xchg
cmp
mov
clc
repnz
nop
cld
jae
push
add
xchg
imul
inc
push
mov
xchg
ret
inc
add
add
add
fisttps
nop
nop
cld
jae
jb
cmp
add
ljmp
cli
clc
repnz
nop
cld
jae
add
add
add
out
imul
clc
repnz
nop
cld
jae
jb
stos
jne
sti
icebp
jbe
add
add
clc
repnz
nop
cld
jae
mov
add
adc
nop
nop
cld
jae
add
add
outsb
add
clc
repnz
nop
cld
jae
add
sbb
mov
mov
cltd
or
in
nop
leave
jmp
sti
xchg
add
adc
mov
add
add
clc
repnz
nop
cld
jae
add
xor
fimull
nop
nop
cld
jae
add
add
add
sbb
mov
nop
leave
jmp
scas
mov
cmp
pop
dec
push
mov
xchg
ret
and
rcll
outsb
add
add
nop
cld
jae
add
add
add
rolb
cmp
repnz
nop
cld
jae
rolb
inc
add
push
mov
nop
leave
jmp
push
add
outsb
icebp
add
add
push
push
mov
xchg
ret
add
add
add
add
push
mov
nop
leave
jmp
mov
add
clc
repnz
nop
cld
jae
add
cmp
cld
cmp
adc
mov
nop
cld
jae
cld
add
add
add
add
add
pop
lea
push
mov
xchg
ret
xor
add
add
mov
push
mov
nop
leave
jmp
stos
shl
add
add
test
add
scas
add
add
add
add
out
ja
and
inc
add
mov
cmp
ret
jne
ret
pop
and
mov
clc
repnz
nop
cld
jae
shlb
add
scas
add
mov
clc
repnz
nop
cld
jae
xor
imul
inc
cmp
repnz
nop
cld
jae
add
add
xchg
and
mov
push
mov
nop
leave
jmp
jne
inc
xor
mov
clc
repnz
nop
cld
jae
cld
add
cmp
xchg
movsb
popf
mov
clc
repnz
nop
cld
jae
add
add
icebp
mov
pop
add
clc
repnz
nop
cld
jae
lea
clc
clc
repnz
nop
cld
jae
test
push
jne
add
or
nop
cld
jae
add
mov
add
ja
mov
push
mov
xchg
ret
add
add
add
pop
repz
add
mov
rcll
call
repnz
nop
cld
jae
add
int3
add
add
add
add
and
push
mov
xchg
ret
int3
add
xchg
add
ret
into
push
clc
repnz
nop
cld
jae
add
add
int3
add
pop
and
clc
repnz
nop
cld
jae
sahf
add
add
add
lret
inc
jp
push
mov
nop
leave
jmp
push
scas
in
test
movswl
clc
repnz
nop
cld
jae
int3
dec
add
xchg
rolb
jge
lret
clc
repnz
nop
cld
jae
add
add
scas
add
movb
add
clc
repnz
nop
cld
jae
cmp
test
movsb
clc
repnz
nop
cld
jae
add
add
add
clc
repnz
nop
cld
jae
ja
add
push
popa
clc
repnz
nop
cld
jae
push
add
add
add
fists
xchg
mov
nop
leave
jmp
cld
add
loope
add
clc
repnz
nop
cld
jae
xor
scas
int3
mov
clc
repnz
nop
cld
jae
outsb
shll
add
clc
repnz
nop
cld
jae
lea
out
add
aad
push
push
mov
xchg
ret
add
outsb
add
sti
outsb
sahf
add
xor
clc
repnz
nop
cld
jae
out
sbb
and
stos
add
clc
repnz
nop
cld
jae
cld
filds
add
mov
clc
repnz
nop
cld
jae
add
popa
ret
cmp
mov
sub
repnz
nop
cld
jae
add
cmp
push
clc
repnz
nop
cld
jae
jle
add
imul
addb
adc
push
jmp
add
add
push
jb
add
sbb
leave
clc
cmpl
push
mov
nop
leave
jmp
inc
scas
mov
add
push
mov
nop
leave
jmp
push
add
add
mov
push
mov
nop
leave
jmp
inc
xchg
repnz
nop
cld
jae
mov
leave
cmp
add
pushl
add
push
jle
xor
add
add
add
xor
test
call
in
nop
leave
jmp
add
call
clc
repnz
nop
cld
jae
pop
add
jb
add
mov
nop
leave
jmp
add
dec
add
add
ja
pop
cmp
push
mov
xchg
ret
add
int3
add
and
push
push
mov
add
lds
loop
add
add
sbb
sbb
les
test
call
in
nop
leave
jmp
add
out
mov
sub
push
mov
nop
leave
jmp
jle
inc
inc
mov
and
repnz
nop
cld
jae
add
push
add
xor
add
push
mov
xchg
ret
add
add
mov
mov
add
push
mov
xchg
ret
add
add
cmp
and
mov
push
mov
nop
leave
jmp
ja
rolb
xor
mov
xchg
ret
add
add
sub
add
repnz
nop
cld
jae
add
add
add
push
mov
xchg
ret
add
aaa
ds
push
mov
nop
leave
jmp
add
add
mov
testb
inc
add
add
add
adc
mov
add
clc
repnz
nop
cld
jae
add
idivl
cmp
push
mov
nop
leave
jmp
leave
int3
outsb
jle
xor
and
push
mov
xchg
ret
add
mov
mov
in
lcall
call
or
add
xchg
adc
in
and
repnz
nop
cld
jae
lea
inc
add
leave
push
mov
push
clc
repnz
nop
cld
jae
fwait
push
ja
aam
add
movl
add
add
add
movsb
push
mov
xchg
ret
xchg
add
push
add
fwait
lret
and
clc
repnz
nop
cld
jae
add
add
cld
in
push
clc
repnz
nop
cld
jae
ret
fwait
add
inc
test
push
mov
clc
repnz
nop
cld
jae
lea
stos
add
add
scas
mov
clc
repnz
nop
cld
jae
add
dec
cmp
mov
nop
leave
jmp
cmp
add
add
lea
pushf
pop
clc
repnz
nop
cld
jae
mov
sti
add
test
jne
push
mov
xchg
ret
push
add
int3
sbb
add
repnz
nop
cld
jae
add
add
mov
fs
insb
push
mov
nop
leave
jmp
jb
add
sub
dec
adc
add
in
nop
leave
jmp
add
lods
add
clc
repnz
nop
cld
jae
jb
cmp
push
clc
repnz
nop
cld
jae
int3
add
cmp
add
pop
dec
clc
repnz
nop
cld
jae
add
scas
int3
add
add
repnz
clc
repnz
nop
cld
jae
imul
dec
push
push
mov
nop
leave
jmp
add
outsb
xchg
mov
push
mov
mov
roll
call
jecxz
add
fstpl
mov
nop
leave
jmp
push
add
add
addb
push
scas
pop
clc
repnz
nop
cld
jae
add
add
sahf
push
xor
mov
clc
repnz
nop
cld
jae
add
push
mov
scas
add
add
outsl
add
out
add
push
mov
xchg
ret
add
add
push
push
mov
xchg
ret
jb
out
int3
xchg
add
add
push
mov
nop
leave
jmp
add
mov
push
mov
nop
leave
jmp
jne
ljmp
inc
sub
nop
nop
cld
jae
add
ja
sbb
add
add
in
nop
leave
jmp
add
mov
clc
repnz
nop
cld
jae
out
outsb
add
jmp
add
ret
xchg
add
cld
outsb
imul
cmp
mov
nop
leave
jmp
add
and
add
lea
sar
repnz
nop
cld
jae
push
leave
inc
add
ljmp
repnz
nop
cld
jae
pop
add
pushf
mov
push
mov
nop
leave
jmp
jb
shrb
mov
mov
push
mov
xchg
ret
add
cmp
sti
xor
in
add
clc
repnz
nop
cld
jae
add
dec
push
clc
repnz
nop
cld
jae
add
push
add
lea
add
rclb
in
nop
leave
jmp
add
add
add
add
dec
call
clc
repnz
nop
cld
jae
jb
add
movl
add
push
mov
xchg
ret
add
push
rolb
mov
iret
or
inc
add
jb
add
add
nop
nop
cld
jae
push
add
cmp
add
loope
sbb
mov
nop
leave
jmp
add
add
leave
fwait
pop
out
pop
es
clc
repnz
nop
cld
jae
add
mov
push
mov
nop
leave
jmp
jne
add
add
fwait
xchg
mov
xchg
ret
add
int3
add
add
dec
or
mov
nop
leave
jmp
add
xor
inc
clc
repnz
nop
cld
jae
cmp
shrb
cmp
push
mov
nop
leave
jmp
scas
ret
add
inc
sub
mov
add
cld
add
add
add
add
mov
clc
repnz
nop
cld
jae
and
add
cmp
add
dec
mov
clc
repnz
nop
cld
jae
jle
icebp
push
add
sub
loop
mov
xchg
ret
sbb
mov
dec
add
xchg
xchg
jge
add
clc
repnz
nop
cld
jae
rolb
ja
leave
push
int
popa
add
mov
mov
add
sub
clc
repnz
nop
cld
jae
inc
mov
add
push
fwait
push
mov
mov
add
add
lock
add
mov
hlt
add
in
nop
leave
jmp
and
scas
and
add
add
jmp
stos
add
inc
out
xor
outsb
add
mov
test
hlt
clc
repnz
nop
cld
jae
scas
add
ret
aam
adc
addb
fsubs
sbb
add
clc
repnz
nop
cld
jae
shlb
mov
rep
push
mov
nop
leave
jmp
add
xchg
pop
mov
push
mov
nop
leave
jmp
int3
add
add
add
add
jmp
repnz
nop
cld
jae
roll
scas
add
clc
repnz
nop
cld
jae
sti
mov
add
jle
add
clc
repnz
nop
cld
jae
cmp
xor
jne
clc
repnz
nop
cld
jae
outsb
ret
jle
xchg
add
mov
clc
repnz
nop
cld
jae
test
sbb
std
roll
xchg
ret
add
pop
add
add
cmp
nop
nop
cld
jae
add
mov
add
repnz
nop
cld
jae
add
add
xchg
add
clc
repnz
nop
cld
jae
scas
cld
mov
mov
clc
repnz
nop
cld
jae
xor
add
inc
add
xchg
in
call
in
nop
leave
jmp
add
xor
adc
mov
mov
push
mov
xchg
ret
add
add
outsb
not
push
mov
nop
leave
jmp
add
add
push
scas
add
add
add
dec
add
xchg
push
adc
clc
repnz
nop
cld
jae
add
mov
clc
repnz
nop
cld
jae
add
ja
xchg
shll
or
in
nop
leave
jmp
icebp
push
dec
test
add
je
add
clc
repnz
nop
cld
jae
push
add
push
jp
inc
mov
nop
nop
cld
jae
inc
add
mov
xchg
ret
outsb
push
add
add
sti
cld
ja
add
add
push
mov
nop
leave
jmp
inc
add
add
test
repnz
nop
cld
jae
add
sub
xor
inc
add
add
push
roll
test
je
clc
repnz
nop
cld
jae
ret
cld
and
mov
in
nop
leave
jmp
in
stos
int3
leave
ret
movsb
cli
movzwl
clc
repnz
nop
cld
jae
add
add
fwait
adc
mov
push
mov
nop
leave
jmp
push
mov
ffreep
xor
push
push
clc
repnz
nop
cld
jae
sahf
sbb
int3
rclb
mov
sar
nop
nop
cld
jae
mov
add
add
clc
repnz
nop
cld
jae
ret
xchg
outsb
add
repnz
nop
cld
jae
add
add
xor
or
lret
in
nop
leave
jmp
add
ljmp
and
push
mov
xchg
ret
add
add
mov
clc
repnz
nop
cld
jae
sbb
add
jns
ljmp
jae
ljmp
je
clc
repnz
nop
cld
jae
mov
mov
push
clc
repnz
nop
cld
jae
add
mov
push
mov
xchg
ret
add
jle
inc
add
add
push
push
mov
xchg
ret
add
ret
mov
add
push
clc
repnz
nop
cld
jae
mov
add
add
or
mov
xchg
ret
dec
outsb
add
add
mov
xchg
ret
add
add
cli
jmp
xchg
roll
mov
scas
leave
add
push
add
push
mov
nop
leave
jmp
add
sti
add
mov
mov
clc
repnz
nop
cld
jae
add
add
add
jb
rol
clc
repnz
nop
cld
jae
shrb
jb
add
add
sbb
add
repnz
nop
cld
jae
inc
ja
arpl
fldl
dec
lret
inc
add
mov
add
cmp
push
mov
nop
leave
jmp
scas
add
add
inc
cs
add
add
jle
int3
lods
mov
clc
repnz
nop
cld
jae
add
add
and
clc
repnz
nop
cld
jae
add
xchg
pop
clc
repnz
nop
cld
jae
scas
xchg
lods
sti
add
xchg
pop
clc
repnz
nop
cld
jae
lea
add
add
xchg
test
repnz
nop
cld
jae
add
pop
in
sbb
mov
xchg
ret
push
pop
add
leave
leave
add
add
mov
xor
mov
push
mov
nop
leave
jmp
leave
add
push
add
add
add
in
nop
leave
jmp
int3
add
inc
and
repnz
nop
cld
jae
add
add
stos
inc
je
pop
clc
repnz
nop
cld
jae
scas
add
scas
lods
ljmp
clc
repnz
nop
cld
jae
add
add
xor
clc
repnz
nop
cld
jae
jne
lods
xchg
mov
or
clc
repnz
nop
cld
jae
add
scas
xchg
adc
add
or
repnz
nop
cld
jae
icebp
stos
add
scas
add
add
cmpsl
mov
popf
clc
repnz
nop
cld
jae
ds
mov
push
mov
nop
leave
jmp
sti
dec
roll
add
stos
clc
repnz
nop
cld
jae
rolb
push
sti
add
mov
nop
cld
jae
add
sbb
mov
add
nop
cld
jae
lea
ljmp
mov
mov
nop
nop
cld
jae
outsb
add
add
cs
clc
repnz
nop
cld
jae
add
add
add
lcall
cld
jae
cmp
sahf
add
mov
repnz
nop
cld
jae
fwait
mov
xor
add
mov
add
push
mov
nop
leave
jmp
inc
fwait
pop
push
mov
mov
jmp
add
add
jb
sahf
add
cmp
pushl
push
mov
xchg
ret
dec
add
ret
add
jne
mov
clc
repnz
nop
cld
jae
leave
push
add
add
mov
jmp
cld
add
add
leave
add
mov
sar
nop
nop
cld
jae
imul
stos
call
clc
repnz
nop
cld
jae
add
add
movl
inc
add
mov
add
cmp
repnz
nop
cld
jae
scas
lods
xor
rolb
xor
clc
repnz
nop
cld
jae
rolb
add
xor
inc
idiv
lea
clc
repnz
nop
cld
jae
sti
xor
add
fldl
in
nop
leave
jmp
add
inc
shlb
cmp
add
clc
repnz
nop
cld
jae
add
adc
nop
leave
jmp
add
add
sahf
lods
push
add
test
push
mov
nop
leave
jmp
add
fwait
xchg
ret
ljmp
inc
and
clc
repnz
nop
cld
jae
add
mov
add
clc
repnz
nop
cld
jae
xchg
lea
inc
mov
repnz
nop
cld
jae
rolb
int3
icebp
in
hlt
xchg
xor
pusha
clc
repnz
nop
cld
jae
add
add
ret
mov
add
add
mov
adc
or
clc
repnz
nop
cld
jae
pop
outsb
push
stos
je
pop
clc
repnz
nop
cld
jae
jle
xor
and
jle
clc
repnz
nop
cld
jae
mov
ja
test
nop
leave
jmp
cld
add
fwait
add
lods
scas
subl
nop
nop
cld
jae
add
cld
add
repnz
nop
cld
jae
add
and
add
add
jg
clc
repnz
nop
cld
jae
stos
inc
add
out
inc
cmp
enter
cmp
ret
mov
scas
add
imul
nop
nop
cld
jae
and
xor
xor
mov
hlt
mov
xor
clc
repnz
nop
cld
jae
add
xor
push
clc
repnz
nop
cld
jae
sahf
add
in
mov
clc
repnz
nop
cld
jae
add
mov
add
push
push
mov
nop
leave
jmp
roll
add
add
inc
daa
dec
ret
clc
repnz
nop
cld
jae
xchg
add
je
clc
repnz
nop
cld
jae
in
add
mov
push
mov
xchg
ret
dec
ljmp
mov
mov
pushf
jl
clc
repnz
nop
cld
jae
add
cld
jae
add
cmp
scas
add
mov
add
push
mov
nop
leave
jmp
dec
cld
add
loop
mov
shr
push
mov
xchg
ret
push
add
inc
fstl
repnz
nop
cld
jae
add
cmp
out
add
push
mov
nop
leave
jmp
cld
in
add
push
idiv
mov
push
mov
xchg
ret
ret
mov
push
add
or
nop
leave
jmp
add
fwait
add
add
mov
mov
clc
repnz
nop
cld
jae
outsb
add
imul
push
mov
nop
leave
jmp
push
xor
fldl
nop
nop
cld
jae
add
lahf
xchg
clc
repnz
nop
cld
jae
add
ja
fs
mov
push
js
mov
xchg
ret
add
dec
push
clc
repnz
nop
cld
jae
add
add
add
test
add
repnz
nop
cld
jae
add
rolb
outsb
add
push
adc
cwtl
push
mov
lods
inc
add
pop
add
add
add
add
adc
inc
mov
sub
repnz
nop
cld
jae
add
inc
xchg
call
in
nop
leave
jmp
push
add
mov
bound
mov
add
clc
repnz
nop
cld
jae
add
add
shll
jne
jmp
add
add
xor
and
add
push
mov
nop
leave
jmp
add
add
lahf
add
clc
repnz
nop
cld
jae
xchg
cld
dec
rorl
nop
cld
jae
in
rolb
add
add
add
clc
repnz
nop
cld
jae
add
add
add
push
mov
in
nop
leave
jmp
scas
jne
add
add
dec
mov
push
mov
xchg
ret
ds
add
cmp
repnz
nop
cld
jae
scas
add
out
stos
out
add
imul
repnz
nop
cld
jae
filds
add
mov
push
mov
xchg
ret
shlb
add
imul
mov
xchg
ret
add
pop
add
add
pop
cmp
roll
add
mov
aad
aam
gs
mov
xor
clc
repnz
nop
cld
jae
cld
cmp
outsb
mov
mov
mov
jmp
incl
inc
push
imul
lea
ja
inc
cmp
xchg
or
nop
nop
cld
jae
add
add
jecxz
push
push
mov
xchg
ret
add
add
jb
mov
clc
repnz
nop
cld
jae
xchg
add
test
inc
lods
xchg
repnz
push
mov
nop
leave
jmp
sti
add
loopne
mov
shl
push
clc
repnz
nop
cld
jae
add
outsb
add
fidivrl
clc
repnz
nop
cld
jae
mov
add
mov
push
mov
nop
leave
jmp
add
add
mov
clc
repnz
nop
cld
jae
inc
add
nop
cld
jae
icebp
add
shrb
add
mov
clc
repnz
nop
cld
jae
add
mov
xor
mov
inc
roll
in
nop
leave
jmp
add
outsb
and
mov
nop
leave
jmp
xor
add
add
out
add
push
clc
repnz
nop
cld
jae
mov
mov
shll
push
clc
repnz
nop
cld
jae
sbb
test
add
add
and
and
clc
repnz
nop
cld
jae
lods
icebp
scas
push
add
shll
add
add
fwait
push
mov
scas
add
aad
sub
repnz
nop
cld
jae
add
add
add
rcrl
mov
add
addr16
add
add
outsl
push
push
mov
nop
leave
jmp
add
add
add
add
jno
ret
clc
repnz
nop
cld
jae
lods
leave
mov
add
add
add
clc
repnz
nop
cld
jae
add
jne
mov
clc
repnz
nop
cld
jae
push
lea
stos
fwait
add
cwtl
pop
clc
repnz
nop
cld
jae
add
mov
add
sub
in
nop
leave
jmp
push
xor
add
add
push
stos
push
push
mov
xchg
ret
jb
cmp
push
jb
test
jne
clc
repnz
nop
cld
jae
add
add
cmp
nop
cld
jae
add
add
ror
das
sub
clc
repnz
nop
cld
jae
add
add
add
adc
mov
stc
jmp
add
add
add
add
add
add
add
push
mov
xchg
ret
add
add
icebp
outsb
add
ja
pop
push
mov
nop
leave
jmp
inc
add
ja
inc
add
mov
cmpl
push
mov
nop
leave
jmp
xchg
add
lods
pop
ret
add
add
mov
repnz
nop
cld
jae
mov
add
add
mov
clc
repnz
nop
cld
jae
icebp
sti
add
push
add
repnz
nop
cld
jae
and
add
add
sti
clc
repnz
nop
cld
jae
add
inc
imul
clc
repnz
nop
cld
jae
lods
outsb
push
add
fwait
jb
jne
push
push
mov
xchg
ret
add
fwait
add
filds
cs
clc
repnz
nop
cld
jae
cld
push
push
shlb
add
add
push
push
mov
xchg
ret
sbb
add
add
cmp
ret
clc
repnz
nop
cld
jae
add
pop
add
add
add
clc
repnz
nop
cld
jae
jb
add
add
repnz
nop
cld
jae
add
add
filds
cmp
mov
nop
leave
jmp
rclb
inc
push
add
mov
add
clc
repnz
nop
cld
jae
add
mov
mov
ja
add
push
add
clc
repnz
nop
cld
jae
add
add
test
or
add
repnz
nop
cld
jae
ja
add
add
mov
add
add
clc
repnz
nop
cld
jae
xchg
add
xor
clc
repnz
nop
cld
jae
add
add
cld
into
pop
clc
repnz
nop
cld
jae
out
mov
add
mov
clc
repnz
nop
cld
jae
add
leave
add
mov
push
mov
nop
leave
jmp
stos
fwait
ja
push
mov
add
xchg
jne
add
add
movsl
adc
fldl
sub
rcll
nop
leave
jmp
add
jle
stos
fwait
ds
pop
push
mov
xchg
ret
outsb
mov
cmp
add
sub
inc
sub
dec
fiaddl
xchg
ret
add
mov
rorl
nop
nop
cld
jae
test
add
add
les
jmp
clc
repnz
nop
cld
jae
cmp
xor
enter
nop
nop
cld
jae
push
sbb
add
xchg
inc
jb
clc
repnz
nop
cld
jae
lods
push
add
mov
jmp
nop
cld
jae
scas
scas
add
add
in
add
push
mov
xchg
ret
push
add
push
xor
test
cmp
push
mov
nop
leave
jmp
lea
push
mov
nop
leave
jmp
add
jne
add
inc
into
xor
clc
repnz
nop
cld
jae
cld
leave
add
pop
add
in
mov
mov
clc
repnz
nop
cld
jae
shrb
add
repz
and
push
clc
repnz
nop
cld
jae
mov
stos
xchg
add
clc
repnz
nop
cld
jae
add
push
mov
clc
repnz
nop
cld
jae
cmp
add
lcall
nop
cld
jae
add
cmp
add
repnz
nop
cld
jae
outsb
push
inc
add
add
loopne
mov
mov
clc
repnz
nop
cld
jae
add
push
cld
dec
ja
xor
mov
clc
repnz
nop
cld
jae
inc
add
push
nop
leave
jmp
add
add
xchg
and
mov
repnz
nop
cld
jae
add
push
cmp
repnz
nop
cld
jae
stos
add
push
add
cmp
testl
add
pop
scas
lods
add
jle
pop
push
mov
xchg
ret
ja
add
add
ljmp
push
mov
xchg
ret
add
add
scas
fwait
add
add
clc
repnz
nop
cld
jae
add
xchg
cld
movswl
clc
repnz
nop
cld
jae
ja
ja
add
push
mov
inc
clc
repnz
nop
cld
jae
add
add
xchg
xchg
or
mov
nop
leave
jmp
add
add
inc
ret
push
test
mov
cmpl
jae
push
sar
pushl
push
mov
xchg
ret
ljmp
jp
inc
or
repnz
nop
cld
jae
rolb
xor
mov
add
push
mov
xchg
ret
in
sti
add
pop
add
push
xlat
out
sub
mov
xchg
ret
add
add
mov
add
mov
inc
add
xchg
jle
jecxz
xor
je
clc
repnz
nop
cld
jae
jle
jb
or
mov
inc
add
add
add
add
clc
repnz
nop
cld
jae
jb
add
and
mov
clc
repnz
nop
cld
jae
add
test
add
pop
clc
repnz
nop
cld
jae
roll
mov
mov
dec
push
push
mov
xchg
ret
mov
add
popa
add
repnz
nop
cld
jae
outsb
add
add
xor
add
push
mov
nop
leave
jmp
add
in
jne
clc
repnz
nop
cld
jae
xor
push
xor
test
leave
clc
repnz
nop
cld
jae
add
outsb
add
out
inc
test
clc
repnz
nop
cld
jae
leave
filds
lods
cld
mov
mov
add
out
dec
push
mov
mov
cli
add
add
inc
adc
repnz
mov
xchg
ret
and
add
cmp
add
fildll
inc
add
add
roll
nop
add
clc
repnz
nop
cld
jae
add
repnz
repnz
nop
cld
jae
add
scas
rolb
add
ret
push
adc
add
push
mov
xchg
ret
add
add
pop
clc
repnz
nop
cld
jae
add
mov
imul
imul
leave
jmp
add
add
mov
test
in
nop
leave
jmp
in
add
call
push
mov
nop
leave
jmp
leave
outsb
scas
add
stc
movzwl
clc
repnz
nop
cld
jae
add
mov
push
in
nop
leave
jmp
pop
mov
add
xchg
add
push
xchg
mov
add
clc
repnz
nop
cld
jae
outsb
add
add
rolb
mov
mov
nop
nop
cld
jae
xor
leave
scas
add
jbe
rep
clc
repnz
nop
cld
jae
add
add
jb
in
ja
push
push
mov
xchg
ret
add
add
jmp
cmp
repnz
nop
cld
jae
fwait
imul
clc
repnz
nop
cld
jae
add
add
ja
fwait
mov
clc
repnz
nop
cld
jae
mov
sar
nop
nop
cld
jae
add
add
add
or
repnz
nop
cld
jae
add
scas
add
fwait
push
mov
repnz
nop
cld
jae
push
add
imul
push
mov
nop
leave
jmp
add
add
shll
test
push
mov
xchg
ret
mov
add
cmpsb
mov
add
add
repnz
nop
cld
jae
xchg
add
add
mov
xchg
ret
in
leave
add
add
add
push
mov
xchg
ret
add
add
ljmp
add
and
add
add
push
aaa
cmp
mov
xchg
ret
add
fwait
inc
add
add
add
sti
push
mov
xchg
ret
mov
push
scas
add
add
push
mov
xchg
ret
pop
add
add
shrb
stos
mov
clc
repnz
nop
cld
jae
rolb
ja
add
mov
push
mov
nop
leave
jmp
jb
scas
mov
or
clc
repnz
nop
cld
jae
dec
mov
jb
push
mov
nop
leave
jmp
jb
add
or
repnz
nop
cld
jae
add
scas
add
imul
repz
call
add
add
add
or
dec
jno
add
xchg
or
push
mov
xchg
ret
push
rolb
mov
clc
repnz
nop
cld
jae
push
add
ljmp
clc
repnz
nop
cld
jae
int3
ds
inc
cmp
add
clc
repnz
nop
cld
jae
out
push
sti
add
push
mov
nop
leave
jmp
add
fists
loopne
add
clc
repnz
nop
cld
jae
lods
add
push
repz
nop
cld
jae
xor
rolb
add
cmp
push
mov
xchg
ret
add
scas
add
xor
add
clc
repnz
nop
cld
jae
inc
pop
add
icebp
push
sbb
repnz
nop
cld
jae
mov
fwait
je
jmp
test
inc
add
imul
pop
pop
add
xchg
add
or
mov
xchg
ret
int3
ja
sti
xor
sbb
movsl
clc
repnz
nop
cld
jae
and
add
add
bound
mov
push
popa
add
mov
xchg
ret
pop
jne
add
push
sub
test
sar
clc
repnz
nop
cld
jae
add
ja
outsb
jmp
push
mov
nop
leave
jmp
add
add
scas
in
mov
clc
repnz
nop
cld
jae
ret
and
leave
add
mov
push
mov
xchg
ret
dec
add
add
dec
add
xor
push
mov
xchg
ret
in
add
clc
push
push
mov
nop
leave
jmp
outsb
add
add
testl
push
mov
nop
leave
jmp
scas
stos
add
test
clc
repnz
nop
cld
jae
ljmp
add
xlat
inc
add
add
mov
dec
call
push
mov
xchg
ret
add
add
xchg
clc
repnz
nop
cld
jae
xchg
add
add
in
sbb
repnz
nop
cld
jae
cmp
add
pop
ja
outsb
add
test
cmp
call
in
nop
leave
jmp
add
jb
push
fidivrl
push
mov
nop
leave
jmp
shlb
fwait
add
add
push
mov
nop
leave
jmp
out
add
cmp
add
repnz
nop
cld
jae
xor
jne
inc
rcr
js
push
mov
nop
leave
jmp
rolb
add
push
adc
mov
add
repz
mov
nop
leave
jmp
add
int3
add
rolb
xchg
add
in
nop
leave
jmp
add
add
in
add
mov
clc
repnz
nop
cld
jae
add
xor
loopne
mov
mov
mov
sbb
arpl
mov
nop
leave
jmp
filds
add
fiaddl
jge
clc
repnz
nop
cld
jae
mov
fwait
adc
mov
adc
repnz
nop
cld
jae
add
jne
mov
testl
add
cmp
add
add
add
add
in
nop
leave
jmp
push
add
lods
mov
push
mov
xchg
ret
add
add
add
jp
pop
and
repnz
nop
cld
jae
lea
add
add
js
mov
add
adc
add
add
add
add
repnz
and
push
mov
nop
leave
jmp
add
lods
push
pop
outsb
cmp
repz
mov
xchg
ret
scas
mov
add
mov
add
in
nop
leave
jmp
add
ljmp
jge
clc
repnz
nop
cld
jae
jne
inc
ja
mov
push
clc
repnz
nop
cld
jae
ljmp
add
mov
mov
clc
repnz
nop
cld
jae
add
mov
add
clc
repnz
nop
cld
jae
add
add
mov
push
mov
nop
leave
jmp
test
add
xor
mov
clc
repnz
nop
cld
jae
shrl
add
jno
add
push
mov
nop
leave
jmp
push
add
imul
push
mov
xchg
ret
jle
xchg
add
add
int3
add
add
push
mov
xchg
ret
add
add
nop
cld
jae
add
mov
ret
mov
xor
add
clc
repnz
nop
cld
jae
imul
mov
clc
repnz
nop
cld
jae
add
add
push
cmp
clc
push
mov
xchg
ret
xchg
scas
scas
xor
icebp
cmpl
and
clc
repnz
nop
cld
jae
add
lods
push
mov
xchg
ret
ret
add
add
add
add
repnz
nop
cld
jae
mov
mov
repnz
nop
cld
jae
mov
rorb
mov
push
mov
nop
leave
jmp
inc
xchg
add
cmp
push
push
mov
xchg
ret
push
lods
add
add
ja
lods
push
mov
xchg
ret
sbb
add
xchg
mov
clc
repnz
nop
cld
jae
ja
push
jb,pt
add
add
mov
mov
nop
leave
jmp
add
add
arpl
nop
nop
cld
jae
add
mov
test
add
nop
leave
jmp
add
and
out
push
push
mov
xchg
ret
add
push
add
clc
repnz
nop
cld
jae
int3
add
push
out
cltd
mov
clc
repnz
nop
cld
jae
cld
and
and
xchg
mov
repnz
nop
cld
jae
rolb
cld
rolb
int3
push
clc
repnz
nop
cld
jae
mov
add
mov
mov
clc
repnz
nop
cld
jae
add
jnp
outsb
and
mov
xchg
ret
inc
add
in
add
pusha
clc
repnz
nop
cld
jae
add
scas
add
lea
mov
add
clc
repnz
nop
cld
jae
add
push
pop
add
xor
clc
repnz
nop
cld
jae
sbb
push
outsb
ljmp
add
inc
add
stos
mov
insb
shr
clc
repnz
nop
cld
jae
add
add
lea
add
xchg
xchg
push
mov
nop
leave
jmp
add
and
xchg
jne
clc
repnz
nop
cld
jae
add
add
mov
mov
xchg
ret
add
add
sahf
add
xor
push
fwait
add
add
adc
jecxz
or
add
test
add
mov
nop
leave
jmp
test
lods
jle
sbb
aad
mov
clc
repnz
nop
cld
jae
mov
jb
add
add
mov
xchg
ret
xor
scas
scas
rcll
sti
test
push
mov
nop
leave
jmp
out
inc
jb
imul
push
add
add
add
clc
repnz
nop
cld
jae
mov
enter
nop
cld
jae
push
scas
ds
add
xor
push
mov
xchg
ret
cld
xchg
cld
xchg
clc
repnz
nop
cld
jae
jb
xchg
add
cld
add
clc
repnz
nop
cld
jae
add
push
ja
sbb
clc
repnz
nop
cld
jae
roll
add
idivl
nop
cld
jae
add
add
jle
add
push
push
mov
xchg
ret
xchg
add
add
add
inc
sbb
mov
cmp
ret
add
add
add
imul
sbb
decl
add
adc
pop
push
mov
nop
leave
jmp
add
xchg
add
add
inc
pop
cmpl
push
mov
nop
leave
jmp
mov
mov
add
clc
repnz
nop
cld
jae
icebp
ja
add
add
jne
clc
repnz
nop
cld
jae
add
jecxz
xor
push
mov
nop
leave
jmp
push
add
add
and
in
nop
leave
jmp
add
mov
mov
mov
cmp
push
add
roll
jb
addb
nop
add
je
aaa
or
pop
mov
mov
ss
mov
sub
xorl
sub
sbb
cmp
popa
in
incb
mov
mov
repnz
cltd
sbb
add
sub
cld
ret
lcall
outsl
cs
pop
insl
es
idivb
outsl
mov
mov
dec
leave
loopne
mov
mov
jb
mov
movsb
xchg
out
in
inc
loope
movsl
push
or
or
add
mov
add
jns
repz
add
xchg
mov
mov
sbb
and
mov
fsubrl
std
dec
xor
or
clc
addl
mov
add
aad
inc
lret
dec
mov
add
xchg
pop
mov
mov
popl
data16
popf
jecxz
out
fldt
sub
dec
jmp
test
xor
bound
mov
adc
mov
insb
inc
lds
add
jp
movsb
cld
adc
stos
mov
mov
test
add
xchg
pop
loop
mov
add
ret
inc
push
add
mov
add
int
addb
pop
addb
push
add
add
mov
mov
lea
add
add
divl
sbb
aam
mov
adc
jnp
insb
pop
loope
and
mov
out
pop
fmull
in
xchg
or
mov
jb
mov
inc
add
out
je
xor
int
inc
lea
mov
rorl
mov
mov
into
add
mov
add
push
jae
or
pusha
add
add
cltd
dec
mov
mov
cmp
add
fsubr
test
mov
or
adc
lds
add
shrl
adc
pop
mov
mov
or
add
xchg
dec
sub
push
ja
addb
pop
adc
rcr
add
incl
or
mov
scas
mov
cmpl
adc
out
les
add
imul
icebp
mov
jge
dec
inc
les
xchg
xor
pushf
lock
add
pushf
push
xor
mov
lock
jle
add
mov
or
dec
mulb
add
dec
test
add
push
add
mov
scas
int3
pop
into
mov
push
mov
dec
js
mov
or
fiaddl
mov
add
add
xchg
add
cli
push
imul
adc
in
mov
sbb
mov
mov
shl
sub
sbb
dec
push
jae
push
cmp
sub
stos
mov
mov
mov
lods
ljmp
mov
mov
cmpsb
mov
xchg
mov
rolb
mov
mov
out
scas
in
jns
leave
push
sahf
jl
in
js
mov
add
mov
add
pop
push
jge
fs
mov
jno
xor
mov
mov
push
es
add
push
ss
add
adc
mov
pop
daa
gs
popa
sub
add
and
in
fstps
cmp
lahf
xchg
jnp
jnp
xchg
push
or
mov
fcompl
and
add
jmp
xor
inc
mov
fdivrp
and
mov
ret
sub
jmp
and
mov
mov
imul
cwtl
loopne
mov
mov
mov
push
push
hlt
aad
adc
xchg
mov
stos
push
pop
dec
mov
loope
push
cmpsl
xlat
xlat
mov
cwtl
shrl
iret
xchg
inc
mov
sub
rolb
lret
mov
xor
cwtl
add
mov
xchg
adc
jle
fildl
dec
jne
pop
loopne
mov
add
lcall
fwait
push
lret
mov
xchg
add
or
in
jae
and
pop
push
add
add
add
jo
mov
jbe
add
fstps
cltd
or
sahf
cld
in
and
sbb
add
jns
add
lcall
les
sbb
add
je
pop
enter
dec
mov
fsubrp
jbe
sarl
mov
sarl
repz
push
pop
leave
jmp
add
fisubrs
jne
dec
pop
xor
sbb
int3
mov
jno
in
leave
push
popf
jl
add
lock
add
int
mov
mov
movd
adc
add
mov
addr16
add
and
rolb
mov
pop
dec
pushf
xchg
xlat
jl
dec
sarl
xor
into
out
inc
xor
sbb
popa
outsl
mov
cwtl
push
adc
mov
ss
push
addb
and
mov
mov
adc
mov
xor
add
das
jne
xchg
popf
push
xor
add
lcall
addb
test
add
mov
and
add
or
add
add
mov
xchg
insl
fwait
hlt
addb
sbb
clc
push
or
call
or
jns
ss
pop
out
arpl
sub
fldenv
sbb
fdiv
aam
sub
sbb
xchg
xchg
add
mov
lea
dec
inc
add
fidivs
ljmp
mov
cltd
iret
fists
sub
into
jae
add
jbe
xchg
pop
frstor
mov
dec
rcrl
cmp
mov
push
xchg
mov
jnp
ud0
inc
mov
add
rolb
in
fwait
ja
sbb
je
inc
add
xchg
xchg
xor
in
cmp
adc
sbb
and
add
dec
aam
int
movsl
data16
xchg
ljmp
add
xchg
add
sub
insl
andl
mov
xor
addb
jb
mov
lods
cli
dec
adc
popa
dec
aas
inc
add
push
adc
addb
push
movsl
insl
cli
jl
fwait
test
push
add
dec
js
lds
jae
push
test
sub
lret
mov
fsubp
jecxz
add
push
inc
or
add
mov
fmuls
stos
cmc
cmpsb
fcomps
decb
push
imul
mov
add
cld
movsb
cmp
lds
push
sub
add
into
enter
add
push
mov
add
add
fs
jb
mov
push
out
mov
or
stos
cltd
mov
mov
add
sahf
addb
cmpsl
mov
add
sbb
jb
mov
call
sbb
mov
mov
enter
cwtl
mov
add
mov
sbb
cs
cld
movsl
sahf
cld
out
adcl
mov
add
sti
pop
sbb
mov
or
mov
dec
sbb
cmpsl
add
mov
add
cmpsb
bound
mov
mov
mov
into
pop
sbb
jl
loope
inc
push
add
sbb
jl
jnp
aad
out
and
pop
rolb
rcr
push
pusha
add
sub
add
mov
or
iret
clc
mov
fwait
cld
xchg
jecxz
push
test
adc
mov
scas
mov
pusha
add
sub
or
sbb
in
dec
mov
test
mov
add
add
in
inc
add
lock
sub
inc
add
and
shll
cmc
inc
mov
add
add
pop
out
inc
dec
sbb
mov
fs
and
mov
sub
rolb
rcrl
in
stc
rolb
mov
add
scas
rolb
mov
add
out
les
int
mov
mov
add
push
bound
mov
pop
mov
add
sub
scas
das
xchg
pop
test
inc
xchg
mov
pop
rcll
add
cmc
push
mov
mov
add
adc
aad
cmp
add
mov
mov
push
mov
imulb
lret
fildll
js
sbb
lods
adc
sbb
mov
mov
in
jo
mov
lahf
pop
push
aam
fwait
jae
dec
test
sub
push
sub
out
in
test
push
jb
mov
xchg
mov
add
shl
xchg
pop
mov
loopne
mov
cmp
push
fldcw
gs
and
xor
mov
mov
mov
popf
sbb
jmp
imul
mov
cli
leave
cmp
test
adc
mov
jle
fwait
cmp
xchg
mov
mov
or
sub
cmp
ja
stos
subl
inc
dec
aaa
js
in
xorl
jmp
add
add
add
popf
addb
push
rolb
mov
xchg
js
add
lds
mov
mov
mov
xchg
pop
mov
es
popa
daa
sbb
movsb
test
fcompl
icebp
movsb
dec
imul
mov
mov
ss
add
adc
mov
aad
add
mov
dec
jecxz
lods
pushf
outsl
add
pop
jae
call
and
movsb
xchg
test
pusha
add
vpunpckhwd
addb
xlat
jnp
fcomip
cmpsb
call
add
fisubrs
mov
pop
sub
lock
mov
daa
out
pop
xchg
inc
fsubr
lcall
sbbl
icebp
lods
sahf
cmpsl
push
dec
add
add
sbb
push
movsb
mov
lahf
addb
jae
sbb
inc
dec
jg
push
dec
in
shr
dec
inc
xchg
test
push
pop
enter
fistpl
mov
jl
inc
lea
push
add
jmp
pop
mov
mov
cmpsl
aad
add
notl
pop
inc
xor
rolb
pop
inc
add
jecxz
xor
lock
inc
mov
nop
add
fistpll
push
insl
push
fs
push
mov
adc
push
cli
rcll
add
adc
mov
adc
mov
mov
push
jno
xchg
add
mov
ljmp
stc
aam
dec
dec
stos
in
inc
sbb
inc
sub
xchg
les
adc
mov
cld
movsl
in
filds
xchg
pop
cmp
mov
in
sbb
enter
enter
mov
dec
scas
xchg
add
fs
inc
roll
mov
dec
repnz
mov
sub
sbb
das
mov
sbb
mov
out
and
mov
std
mov
mov
mov
cltd
aaa
or
add
mov
xchg
mov
jp
rolb
mov
pop
in
push
insl
in
dec
xchg
nop
add
add
sahf
sub
jmp
push
jns
add
add
cld
fs
sti
test
mulb
call
in
hlt
loop
mov
les
lret
fstl
mov
sub
add
add
mov
jg
add
mov
sahf
mov
xor
mov
inc
mov
jl
xchg
test
dec
mov
jbe
push
mov
add
pop
adc
mov
imul
inc
pop
movsl
inc
add
loop
mov
add
add
mov
popa
dec
in
adc
or
jns
mov
insb
sbbl
and
pop
mov
xchg
ja
mov
add
mov
mov
pop
in
iret
lret
sub
jmp
add
jne
add
lret
pop
pusha
add
les
test
xchg
add
mov
testl
in
inc
repz
jge
cmp
dec
lret
leave
push
out
ret
sbb
clc
sbb
in
push
fldt
mov
popf
adc
mov
add
data16
mov
loope
or
in
jbe
add
inc
xchg
xchg
sbb
ljmp
cmp
push
mov
xchg
repz
cli
add
add
add
mov
pushf
mov
dec
xor
mov
cmpsl
adc
imul
sbb
cmpsl
dec
lret
into
pushf
sub
fisubl
rolb
sub
add
inc
clc
xor
je
xorl
mov
mov
mov
cld
fdivs
add
in
out
daa
adc
mov
je
lahf
sub
enter
add
aas
int3
jecxz
mov
mov
add
mov
add
test
add
adc
add
or
rcll
imul
add
repz
out
cmp
rolb
mov
out
je
jns
jns
xchg
les
cmp
jle
pop
cld
jmp
add
mov
addb
inc
nop
add
mov
mov
daa
cwtl
ret
icebp
ret
ficoms
mov
mov
add
int
lds
push
and
mov
adc
mov
pop
pusha
add
mov
add
mov
mov
in
jne
ljmp
mov
mov
inc
sahf
mov
xchg
jae
add
add
xchg
add
mov
rolb
mov
add
add
int
sbb
xor
mov
popf
dec
pop
stc
sub
add
roll
add
lret
push
or
cmp
xchg
pushf
loopne
mov
add
adc
mov
decb
add
pushf
jb
mov
add
push
hlt
jno
adc
mov
pop
and
mov
jbe
add
add
loopne
mov
inc
test
xorl
add
in
ljmp
xor
ljmp
fstps
add
cld
push
or
adc
mulb
into
daa
das
sub
in
icebp
dec
shll
mov
lret
sub
testb
mov
xlat
cmp
mov
or
cld
mov
popa
aad
popa
fldenv
adc
fldenv
mov
mov
add
jge
xchg
add
mov
jl
rolb
fmul
das
imul
adc
inc
add
stos
ljmp
in
leave
jns
and
rcr
pop
jne
mov
mov
mov
ret
cmpsl
daa
inc
ret
addb
push
in
int
add
add
pop
insl
add
pop
adc
inc
add
mov
and
out
stos
iret
jge
xchg
xlat
inc
mov
mov
faddl
mov
xchg
push
xchg
cmp
insb
add
mov
popl
mov
mov
push
fcmovnu
pop
jnp
cli
or
insb
sbb
sbb
fistpll
pop
testb
ret
lahf
repnz
or
add
add
mov
dec
mov
imulb
pop
or
mov
add
push
ret
mov
add
ret
roll
jmp
cmp
cmp
add
ffree
add
add
mov
xor
test
daa
pop
adc
xor
mov
add
aas
mov
lock
movsb
cwtl
es
jg
hlt
ret
xchg
scas
rolb
mov
aad
or
adc
mov
add
mov
add
shll
mov
add
imul
pop
and
cmp
outsl
clc
mov
lret
or
mov
call
dec
adc
jae
ja
aas
pop
mov
add
add
xor
mov
push
add
in
scas
imul
jbe
out
rolb
and
test
rcrl
add
adc
and
mov
push
sbb
scas
push
inc
xchg
bswap
push
enter
jo
mov
xor
dec
jg
add
stos
addb
pop
push
int
addb
or
idivl
xor
dec
dec
push
fcompl
mov
rep
mov
mov
xchg
push
mov
xchg
sbb
sbb
or
add
test
cmp
mov
loop
mov
dec
xor
hlt
ss
adc
daa
loopne
mov
add
add
mov
inc
add
test
add
mov
mov
add
dec
bswap
inc
loop
mov
imul
int3
lahf
sub
scas
jg
adc
xor
mov
in
inc
out
mov
add
mov
add
sbb
lea
or
push
fimuls
inc
frstor
fisttpl
lods
jb
mov
daa
mov
push
cli
jno
rolb
mov
es
sbb
sbb
mov
lds
add
pop
xchg
and
cli
sbb
add
je
jge
add
loopne
mov
pushf
add
test
or
add
dec
fimuls
popf
push
shll
mov
rcrl
fs
and
jns
ljmp
mov
cmp
cmpl
into
push
add
es
add
cwtl
out
adc
mov
add
mov
cli
in
add
out
out
push
loop
mov
mov
xchg
add
add
fsubrs
add
add
mov
mov
outsb
arpl
add
aas
mov
mov
aaa
les
mov
mov
mov
fs
scas
insb
addb
shll
clc
inc
pop
pop
push
mov
add
push
push
mov
outsb
xchg
jmp
mov
add
add
sbbl
add
jmp
mov
mov
mov
and
inc
cmc
add
sbb
cmp
inc
fdivs
popa
xor
mov
loopne
mov
cmp
lahf
gs
add
mov
mov
std
pop
aaa
pop
jne
in
xchg
les
sbb
adc
mov
cmp
mov
testl
add
mov
mov
add
xchg
xchg
sub
dec
cmp
inc
enter
fisttpll
loope
dec
int3
stc
cld
cmp
adc
mov
cld
add
mov
cmpsl
jl
push
add
add
insb
xlat
idivl
mov
pop
fwait
ja
adc
mov
imul
add
push
add
mov
inc
add
ds
push
movsb
mov
ljmp
inc
add
cmc
pop
push
or
add
add
push
cwtl
inc
sbb
je
cmp
dec
inc
inc
sbb
sub
or
push
jns
adc
add
mov
es
cltd
xchg
loop
mov
mov
inc
cld
arpl
push
add
aaa
push
jge
add
inc
mov
loope
jecxz
clc
or
mov
and
pushf
push
pop
sub
loope
mov
imul
cmpsl
cmp
xorl
xchg
movsb
bound
mov
in
push
add
xchg
flds
add
mov
mov
mov
push
sub
sbb
push
inc
push
push
jle
jmp
mov
or
jnp
popa
sti
and
scas
add
in
mov
lcall
mov
and
dec
rcrl
popf
call
add
rcr
xchg
jae
div
add
repz
mov
pop
sbb
add
pop
imul
test
push
mov
add
mov
add
inc
mov
jne
mov
and
mov
add
add
test
jns
hlt
mov
loopne
mov
xlat
sbb
out
test
push
jl
add
loopne
mov
add
ret
mov
in
or
pop
js
and
mov
add
xor
add
add
popa
shr
pusha
add
xor
les
add
enter
lahf
jne
jl
dec
xchg
mov
mov
mov
mov
nop
add
arpl
sub
inc
imul
fsubrl
add
dec
lods
clc
addr16
cld
ds
add
movsl
or
out
pop
loop
mov
mov
jl
mov
and
cmc
lods
js
xchg
shll
mov
or
shll
test
hlt
adc
mov
mov
and
mov
mov
cwtl
adc
mov
pushf
xchg
pop
fcomps
xor
pop
hlt
leave
hlt
repz
stos
idivl
or
leave
lcall
das
scas
popf
out
mov
add
add
inc
mov
sbb
loopne
mov
aam
xchg
xor
mov
mov
add
addb
sbb
out
cmp
hlt
mov
xor
cmpsb
add
call
fisubrl
mov
jno
lea
mov
mov
in
mov
mov
pusha
add
adc
or
mov
add
daa
inc
add
stc
adc
test
mov
gs
xor
xchg
push
pop
fsubrs
pop
ret
xchg
jnp
aad
pop
leave
test
add
sbb
xor
xor
mov
mov
add
pop
xchg
shll
jle
pop
jmp
cmp
fnstcw
xor
push
add
jbe
jmp
mov
jns
push
add
mov
cmp
pop
cld
test
clc
aaa
cwtl
insl
adc
movsb
pop
push
add
ljmp
mov
mov
inc
mov
imul
and
mov
jp
lahf
int3
lock
mov
lock
push
add
lds
cmp
mov
add
iret
jae
ficomps
sbb
lret
ret
push
orl
lahf
and
mov
add
dec
cmp
add
inc
add
jl
cli
imul
push
ret
jl
std
arpl
add
push
cmp
xor
mov
mov
adc
or
add
popa
arpl
test
rcll
ljmp
push
push
add
dec
mov
mov
add
mov
in
jg
pop
lahf
mov
lds
mov
add
xchg
xchg
xchg
adc
mov
lods
ret
jmp
ja
mov
filds
lods
xor
call
mov
add
push
add
add
imul
rcll
mov
or
add
jbe
xor
add
add
outsl
xchg
into
imul
and
mov
imul
mov
mov
bound
mov
nop
add
xor
ljmp
mov
into
sub
lods
sbb
rolb
je
fiadds
add
mov
or
adc
mov
nop
add
and
repnz
mov
add
aas
pop
jbe
cltd
out
popa
inc
jecxz
jno
mulb
xchg
lret
pop
inc
mov
mov
cli
pop
mov
mov
dec
lahf
sbb
hlt
sbb
xchg
add
inc
add
in
ret
lcall
test
add
aam
fs
leave
inc
add
jno
lods
inc
jo
mov
xlat
fcomps
add
rolb
mov
inc
cltd
add
stos
or
pusha
add
js
les
or
in
adc
adc
js
add
cmpsb
mov
mov
mov
push
cmpsb
cmp
and
mov
add
cmp
es
lods
push
mov
dec
sub
imul
push
nop
add
out
xchg
sbb
xor
aas
pop
mov
add
pop
and
mov
ja
add
mov
jae
insl
push
pop
aaa
out
pop
iret
fsubp
mov
pop
jo
mov
mov
push
cmp
mov
push
add
aas
cwtl
adc
addl
je
mov
pop
dec
jg
jne,pt
add
mov
rolb
mov
test
cvtps2pi
sahf
mov
add
mov
lock
daa
imul
and
mov
mov
call
sub
setno
fnstenv
mov
xor
mov
repnz
sbb
scas
loop
mov
mov
xor
mov
add
mov
mov
rolb
mov
add
in
dec
lahf
cwtl
jno
test
iret
sahf
push
insb
push
cltd
cltd
xor
add
xor
mov
clc
dec
pop
dec
inc
pop
mov
mov
repnz
fiadds
repz
arpl
fdivrl
nop
add
adc
fildll
lds
out
aam
iret
test
sbb
dec
push
xlat
sub
mov
enter
sub
and
sbb
sub
lock
mov
mov
jecxz
repnz
cld
fwait
addr16
testl
ret
fucom
add
mov
push
add
insl
add
inc
dec
mov
xor
and
mov
dec
and
imul
push
psrlq
fs
mov
pop
add
mov
push
jmp
jl
rolb
cwtl
filds
mov
ror
jae
push
test
ss
pop
bound
mov
dec
add
push
fistl
sub
add
fcompl
add
jge
inc
fsubr
mov
fdivl
add
mov
inc
sets
fwait
pop
fwait
inc
mov
mov
mov
imul
mov
rcrl
pop
int3
int
xor
or
pusha
add
mov
dec
push
sbb
in
add
dec
test
fs
lahf
inc
addb
or
or
inc
jecxz
leave
push
add
ja
add
add
sbb
outsb
in
fs
pop
icebp
aad
xchg
sbb
pop
xor
addb
pop
pop
adc
jns
and
inc
cmpsb
loop
mov
std
inc
add
add
xor
pop
cmp
xlat
ret
js
cwtl
adc
bound
mov
push
lahf
lahf
negb
mov
sub
push
xchg
cmp
cmp
mov
mov
jbe
dec
arpl
mov
add
gs
add
jne
xchg
rolb
mov
fdivs
mov
out
hlt
repnz
cmpsb
ret
test
push
add
lret
inc
add
ret
pop
dec
mov
pop
aaa
imul
repnz
xchg
add
cmp
mov
mov
lock
sub
rcrl
dec
xchg
fistl
sub
aam
xor
add
lret
icebp
nop
add
add
cmpsl
ret
lahf
addb
add
ja
scas
fwait
sbb
lahf
int3
imul
sub
outsb
pop
mov
jecxz
mov
push
add
add
cmc
mov
add
mov
or
xor
mov
mov
xchg
push
cmpsb
adc
int
push
rolb
mov
dec
addr16
xor
push
add
repnz
lcall
les
pop
adc
out
fwait
jle
jl
add
fistps
cld
fsubrs
add
push
loope
and
add
mov
mov
mov
mov
jge
test
lea
push
frstor
mov
add
add
pop
je
inc
mov
ficoms
mov
sbb
add
jmp
xor
add
mov
popa
cmp
js
test
mov
add
inc
add
dec
mov
sahf
sbb
lcall
cmc
add
mov
mov
xlat
fimull
push
in
push
cmp
shll
sbb
leave
and
mov
mov
ljmp
mov
fmuls
into
out
andnps
and
mov
rolb
pop
out
jae
es
pop
adc
mov
and
mov
jp
add
jl
pop
pop
jne
ja
xchg
and
mov
add
add
mov
mov
iret
and
mov
loope
test
and
sub
mov
fcoms
insb
lahf
aas
or
ja
hlt
mov
lret
in
insb
adc
xchg
xchg
add
imul
mov
inc
clc
cmp
sub
sbb
lcall
jnp
dec
cbtw
ffree
and
mov
into
sub
add
and
mov
mov
imul
and
mov
mov
sarl
add
jne
mov
mov
mov
add
cli
out
xchg
popa
pop
fsubr
mov
cmc
scas
push
mov
pop
jge
test
cltd
mov
insl
pop
and
mov
rolb
mov
mov
and
mov
mov
adc
pop
jo
mov
or
dec
push
aaa
cmp
pusha
add
scas
into
js
lea
cwtl
adc
adc
add
mov
mov
mov
mov
cmp
std
inc
add
add
jmp
addb
xor
xor
mov
js
scas
rolb
mov
pop
insb
push
add
xchg
rcrl
stos
sub
cli
mov
add
push
jp
inc
jne
shll
mov
out
pop
dec
and
push
pusha
add
add
loope
cmp
mov
add
push
out
inc
stos
lahf
or
add
sub
mov
addb
addb
adc
pop
stc
push
mov
add
add
add
add
mov
add
dec
mov
mov
or
dec
lea
aad
les
cli
gs
test
insl
xchg
mov
or
int3
sub
test
jge
add
mov
sbb
popa
imul
fwait
pushf
jecxz
divb
insb
outsb
or
mov
xchg
lock
adc
mov
adc
sub
test
mov
rolb
mov
addb
cmp
inc
add
push
add
mov
mov
mov
mov
hlt
jg
jnp
outsb
out
mov
push
xchg
add
mov
cs
add
into
clc
add
or
rolb
mov
outsl
test
mov
mov
repnz
mov
mov
adc
mov
xchg
sub
dec
jp
pop
xor
sub
or
ljmpw
sbb
jmp
jl
and
out
add
push
mov
xor
mov
sub
hlt
dec
aam
out
xchg
pop
mov
dec
dec
cmpsb
pop
or
stos
xor
mov
cmp
js
dec
fldl
mov
push
mov
mov
rolb
mov
sub
sahf
add
mov
pop
pop
and
mov
out
mov
sbb
es
xor
pop
mov
aas
sbb
add
add
push
cmp
mov
jge
addb
shll
in
jp
rolb
sbb
push
add
out
mov
mov
dec
lret
pop
sub
call
icebp
mov
add
add
fimull
push
add
mov
adc
mov
dec
mov
mov
mov
cmp
jecxz
pop
push
movsb
fisttpl
into
sti
outsb
push
cld
addb
sub
fdivl
or
add
loope
add
pop
or
ljmp
loope
pusha
add
adc
push
outsb
xchg
das
pop
ret
je
jle
push
add
add
add
push
push
jle
mov
inc
add
in
mov
xchg
mov
jne
mov
movsb
mov
insl
ja
push
add
sbb
mov
mov
lret
adc
xor
sub
andl
data16
and
mov
bound
mov
add
xchg
add
js
add
add
push
add
in
push
mov
mov
lods
ret
mov
mov
add
pop
jne
add
mov
inc
add
jno
push
outsb
pop
adc
lds
cwtl
jns
movsb
mov
push
add
imul
add
mov
mov
inc
inc
test
bt
cmp
inc
cmp
cld
out
xchg
setne
jle
xor
das
fistps
push
push
lret
mov
rolb
mov
mov
aas
test
rolb
mov
cmp
add
push
add
and
push
dec
jnp
add
cmpsl
psubd
add
scas
adc
dec
jbe
sub
fwait
in
jb
mov
pop
std
js
sbb
sub
add
repz
sbb
mov
or
cli
mov
arpl
data16
mov
out
cmp
ja
mov
mov
imul
add
mov
arpl
jp
ljmp
addb
mov
add
mov
lcall
movsb
pop
mov
jle
ffreep
pop
jcxz
or
jp
lea
addb
sub
or
lea
imulb
lock
jecxz
pop
mov
or
pop
iret
or
outsb
xor
inc
add
mov
fldcw
xchg
lods
jae
add
pop
dec
pop
sbb
mov
push
cmp
pop
xor
mov
lea
mov
dec
lods
notl
fs
xor
mov
sbb
add
and
mov
add
add
cmp
jb
mov
add
arpl
add
pop
loope
jge
dec
fidivs
mov
movsb
sbb
cmp
fs
adc
rcr
inc
xchg
inc
fwait
mull
add
and
test
mov
add
bound
mov
add
fimull
mov
inc
call
or
mov
add
mov
push
popa
fcom
add
repz
clc
cmp
xchg
insb
dec
mov
jb
mov
lds
add
scas
es
mov
mov
dec
add
xor
add
jbe
call
jle
lea
js
and
shll
add
icebp
fdivrl
sbb
in
jne
inc
add
cmp
call
push
lods
inc
pop
push
sbb
outsl
and
cmp
outsb
mov
mov
dec
out
cmp
push
add
add
mov
add
mov
fsubr
mov
and
aaa
cmpsb
in
test
add
cmpsl
insb
test
add
ljmp
fimull
cmpsb
adc
jnp
add
sbb
add
xor
mov
ret
popa
loopne
mov
inc
add
lea
jl
rolb
mov
add
icebp
mov
add
bound
mov
add
mov
adc
mov
or
mov
cmp
sti
sahf
mov
mov
lea
add
pop
adc
mov
add
data16
mov
push
ss
mov
test
test
stc
outsl
jmp
sub
fwait
dec
out
add
inc
or
push
popa
addb
mov
mov
dec
cmp
or
mov
outsb
adc
mov
mov
popa
jp
jae
mov
xlat
mov
inc
mov
jmp
add
fld
jecxz
lea
add
not
push
sbb
add
mov
add
mov
imul
add
add
add
dec
hlt
cmp
mov
stos
out
lock
fdivl
add
imul
out
dec
dec
shrd
add
loopne
mov
add
sub
mov
cmpsl
push
sub
lret
add
mov
mov
mov
pusha
add
jns
hlt
rolb
mov
rolb
mov
int
and
add
lcall
xorl
mov
adc
mov
push
add
loop
mov
dec
iret
mov
neg
mov
pop
scas
mov
loope
add
xlat
adc
mov
cli
daa
inc
add
out
rolb
fsubrs
ret
mov
and
mov
adc
mov
cmp
into
mov
add
cld
inc
add
popa
cmovo
mov
jo
mov
cmp
push
cwtl
adc
mov
push
mov
gs
add
dec
cmpsb
pop
jp
lret
pop
mov
mov
pop
add
mov
cmp
loope
dec
popf
jo,pt
mov
adc
movsb
jecxz
xor
div
add
push
add
sti
inc
add
mov
xchg
lock
sarl
jg
lahf
add
xchg
ljmp
inc
rcll
add
mov
hlt
aas
rcrl
stos
cmc
cmp
mov
xor
mov
pop
push
add
mov
loope
mov
add
mov
outsb
jge
adc
xor
jmp
pop
cltd
and
fldt
jg,pt
mov
mov
mov
xchg
repnz
cli
sbb
add
add
xchg
lods
push
xor
mov
adc
mov
mov
aas
ret
out
add
add
add
mov
mov
or
add
mov
icebp
lret
enter
addb
and
mov
nop
add
iret
jle
cmp
pop
add
mov
mov
xor
mov
adc
mov
xchg
outsb
aas
outsb
xor
mov
push
fiaddl
mov
pop
fnclex
add
add
mov
and
mov
popa
mov
pop
adc
mov
mov
mov
pop
cli
mov
push
add
inc
push
lea
mov
sub
cli
rcll
dec
fmuls
in
dec
push
xchg
lock
inc
add
mov
lods
push
addb
ficompl
xchg
add
mov
icebp
pushf
and
sub
dec
jl
add
push
adc
hlt
out
push
add
fucomip
inc
push
bound
mov
test
add
or
cld
or
cwtl
ljmp
add
and
or
xchg
add
movsl
dec
cld
js
mov
and
add
add
add
inc
cmp
xor
rolb
mov
mov
adc
cmp
testb
fldl2e
js
arpl
es
inc
add
in
mov
xor
mov
insl
sub
imul
add
jo
mov
cmp
ss
push
out
sbb
add
mov
mov
jmp
mov
es
or
scas
xchg
shll
add
mov
popf
mov
rcrl
mov
roll
arpl
rcll
outsl
or
fsubs
add
xlat
mov
add
lods
ss
push
rcl
mov
xor
mov
inc
mul
test
push
xchg
shll
mov
inc
in
fldcw
mov
mov
aad
out
repnz
pop
xchg
push
push
push
mov
add
cli
call
repz
shll
sarl
or
add
add
mov
loope
pop
sub
loopne
mov
pop
push
cmp
loopne
mov
mov
add
aad
les
cmp
add
mov
xor
jae
pop
mov
pushf
or
bound
mov
inc
add
adc
mov
push
inc
out
sarl
add
xor
stos
aas
adc
add
fs
stos
xlat
int3
aad
testb
add
mov
mov
pop
cmp
dec
dec
xchg
dec
inc
push
mov
cltd
dec
in
xor
gs
push
aaa
jle
daa
clc
dec
or
dec
lret
lcall
cmpsl
jl
mov
dec
jmp
hlt
sub
mov
push
rcll
add
and
mov
aam
jmp
mov
push
sub
mov
mov
sbb
mov
add
add
pop
test
mov
sub
add
jge
cmpsl
stc
test
add
add
dec
cmp
add
int3
and
fmull
repz
scas
int
pop
scas
mov
or
mov
jl
out
pop
jle
add
mov
mov
add
cwtl
push
add
and
mov
xor
mov
add
mov
xchg
addr16
and
movsl
div
add
addb
and
add
dec
dec
xchg
add
mov
add
je
daa
add
push
add
dec
pop
xor
lret
add
push
jge
out
cmpsl
push
test
into
fsubrs
fidivs
imul
pop
into
out
xchg
in
clc
bound
mov
lahf
addb
lods
mov
inc
xor
mov
pushf
mov
mov
inc
in
pop
dec
out
mov
push
add
inc
lret
jle
fdivrl
lret
xor
mov
push
dec
es
in
std
mov
pop
pop
sub
or
pop
pop
xchg
ret
mov
mov
mov
mov
cs
stos
loope
ret
stc
pop
xchg
inc
mov
es
sti
rolb
data16
mov
jp
sub
mov
add
mov
cmp
add
pop
negl
add
add
mov
dec
cs
int3
inc
pop
leave
jae
add
sbb
mov
mov
addb
sub
add
lret
fidivrs
mov
flds
mov
mov
shll
xor
mov
adc
loope
aad
ret
ficompl
add
nop
add
add
jecxz
xchg
push
xor
div
add
hlt
mov
pop
test
add
adc
jecxz
push
and
mov
add
mov
das
imul
int
stc
xchg
sbb
daa
test
push
add
cs
sub
inc
push
add
push
ja
inc
aad
add
pop
cmpsb
cli
cmp
std
lods
loopne
mov
inc
je
aam
data16
call
sub
pop
pop
stos
dec
xor
aaa
sbb
ja
rorl
rcll
adc
inc
jecxz
add
add
and
mov
mov
push
and
mov
add
mov
mov
jle
ficoml
loop
mov
jle
cmp
sbb
roll
mov
mov
insb
je
xor
mov
in
rolb
mov
mov
and
mov
cmp
hlt
jmp
fsts
shll
icebp
fwait
mov
jb
mov
pop
push
add
fst
subl
mov
adc
inc
sbb
sbb
call
test
sbb
sbb
pop
sbb
movsl
imul
sbb
sbb
rorl
mov
popf
xchg
and
aad
pop
jmp
cld
inc
jp
xchg
clc
xlat
imull
pusha
add
add
add
mov
inc
pop
out
add
adc
out
dec
jae
add
push
fucompp
xchg
add
and
mov
cmp
sbb
mov
and
xchg
in
inc
sbb
cmp
add
cmp
inc
add
jns
sbbl
mov
jo
mov
mov
dec
xchg
addb
inc
add
mov
add
fisubrl
inc
fs
movsb
mov
adc
or
test
cmp
mov
add
mov
xchg
insl
inc
decl
add
or
xor
mov
jno
add
fucomi
repz
fs
iret
andl
mov
mov
mov
mov
mov
fwait
add
clc
sub
js
mov
add
jmp
call
sbbl
les
mov
mov
mov
iret
rolb
mov
push
add
add
inc
add
push
add
dec
xchg
add
adc
mov
mov
jle
cld
adc
mov
stc
ljmp
mov
adc
jecxz
cmpsb
jp
cmc
xor
out
shrl
jnp
mov
mov
mov
cs
xchg
mov
pop
xchg
sub
add
mov
mov
movsb
mov
inc
test
mov
lds
sbb
out
dec
das
add
or
push
push
mov
mov
mov
mov
cmp
and
lret
js
sub
les
add
lcall
arpl
dec
enter
sub
mov
xor
mov
and
mov
jno
mov
mov
out
or
sti
xchg
sub
push
add
push
imul
jo
mov
sub
imull
mov
int3
sub
cmp
rcl
mov
adc
mov
mov
mov
pop
xor
mov
mov
inc
sbbl
add
cmp
xor
in
inc
mov
inc
add
mov
add
icebp
dec
pop
fs
push
je
das
int3
ss
push
arpl
daa
xchg
sub
xor
mov
adc
mov
sbb
jo
addr16
mov
mov
inc
add
mov
lcall
mov
imul
stos
js
jne
pusha
add
add
xchg
adc
pop
data16
push
icebp
push
inc
or
and
cmp
movsb
mov
add
jne
bound
mov
xchg
jno
clc
les
ret
leave
mov
int3
iret
imul
add
pop
xor
mov
add
cwtl
cld
aad
nop
add
and
in
push
ds
add
mulb
cmovs
arpl
je
ret
icebp
or
ljmp
xor
mov
add
sub
or
add
sahf
or
and
push
aaa
jmp
mov
aaa
movsl
mov
rolb
xchg
cwtl
and
addr16
insl
xchg
sub
cwtl
sbb
xchg
mov
add
add
sub
push
mov
mov
jne
inc
add
add
std
or
imul
mov
enter
es
sti
dec
sub
xchg
leave
js
into
mov
add
xor
mov
sbb
add
mov
xchg
dec
std
add
mov
sub
mov
lods
stos
dec
jg
push
jge
mov
in
xor
add
fdivr
dec
pop
into
xchg
add
out
or
mov
shll
mov
test
add
aas
cwtl
xchg
cltd
push
xor
mov
sub
out
push
mov
movsl
push
mov
mov
add
push
int3
sub
mov
add
mov
push
in
int
sar
add
aaa
and
cmpsl
and
pop
or
and
mov
mov
cmp
dec
mov
movsl
sbb
movsb
jecxz
adc
fisubs
adc
mov
mov
leave
les
in
negl
sahf
sbb
push
aaa
out
ljmp
mov
out
mov
or
and
xchg
pop
int
push
pop
frstor
add
add
and
shr
icebp
loope
dec
test
lods
fsub
arpl
dec
jecxz
fwait
mov
pop
nop
add
add
js
enter
push
add
xor
popa
sub
mov
xchg
add
repz
in
rcr
enter
fstps
xchg
decb
xchg
pop
ljmp
cmove
mov
add
movsb
and
add
stos
es
out
addb
std
fmulp
ja
imul
cmpsl
mov
add
mov
and
mov
je
popa
mov
pop
nop
add
sti
jae
adc
lods
pop
cmp
dec
enter
mov
mov
int3
icebp
pop
jb
mov
add
pop
xchg
mov
jl
adc
mov
add
cld
mov
sbb
jbe
add
aaa
sbb
jge
sub
arpl
imul
add
mov
ja
or
mov
mov
ja
in
mov
pop
fwait
addb
gs
lock
popf
call
adc
mov
mov
cmp
mov
jne
ficoml
or
push
add
fisubrs
loopne
mov
dec
pop
lea
sldt
mov
mov
add
add
fdivr
out
mov
push
add
into
pop
cwtl
dec
lcall
popf
xchg
idiv
or
daa
lret
stos
and
mov
jl
int3
jae
adc
add
ljmp
popf
xchg
add
add
push
add
leave
jne
push
stos
test
sub
xlat
mov
jns
popf
imul
mov
add
int3
daa
rolb
mov
loope
rolb
mov
add
xchg
add
add
mov
sub
add
mov
jg
add
add
add
fdivr
lds
mov
scas
add
jae
call
add
int
in
sbb
jo
mov
insb
fidivs
or
aas
les
daa
repz
cltd
clc
mov
unpckhps
add
and
mov
test
pusha
add
or
inc
xor
mov
scas
pop
pop
push
add
lods
scas
ds
add
cltd
dec
arpl
sarl
xlat
bound
mov
dec
or
add
xchg
insl
daa
aaa
aas
data16
bound
mov
mov
mov
push
pop
xchg
fldt
ja
fdivrl
add
mov
push
add
push
movsb
fcom
cmpl
movl
pop
dec
enter
add
push
repz
pushf
cmpsb
xor
pop
pop
and
aad
jne
add
mov
mov
pop
iret
stos
sbb
sub
ret
pop
popa
jmp
pushf
cli
adc
std
popf
clc
cmpsb
or
add
xor
add
adcl
and
lret
sbb
cmp
add
add
inc
stc
lea
add
push
addb
cmp
mov
mov
out
mov
or
xlat
sub
pop
jg
call
jl
add
and
mov
add
push
add
das
out
fnsave
cmpsb
in
pop
cmpsl
pushf
dec
xor
ljmp
mov
mov
stos
fldenv
add
sbb
add
add
xchg
inc
add
mov
push
pop
js
push
dec
pop
rolb
mov
leave
es
mov
xchg
add
fwait
jg
es
fisubrs
mov
aaa
sub
mov
fstps
dec
and
loopne
mov
add
or
add
pushf
clc
mov
jne
gs
add
and
lods
push
sub
mov
add
dec
push
xor
mov
sub
or
jae
sub
adc
mov
mov
push
xchg
mov
nop
add
add
adc
add
mov
cltd
mov
mov
addb
je
scas
imulb
repnz
or
movsl
pushf
mov
add
sub
test
dec
or
inc
inc
add
negb
jb
mov
mov
add
rolb
mov
push
sbb
mov
js
ljmp
mov
lret
or
push
add
xor
push
adc
jns
cmpsb
add
mov
mov
mov
add
push
add
pop
sbb
mov
sahf
sbb
bound
mov
xchg
sub
notl
adc
xchg
mov
filds
ljmp
cmp
jns
addb
jecxz
inc
fisttps
stos
pop
addb
stc
sbb
mov
test
mov
loopne
mov
mov
stc
xchg
add
iret
pop
mov
push
pusha
add
or
popa
in
repz
call
lret
add
inc
ljmp
iret
xor
addb
xor
or
fnsave
mov
add
lods
or
mov
cmp
jbe
push
ret
aad
add
mov
int
add
mov
add
add
jo
mov
fcomps
rcrl
addr16
xchg
pop
dec
cmp
fs
jp
lcall
out
cli
inc
add
mov
dec
xchg
mov
or
mov
mov
fnstenv
pop
pop
fdiv
cli
rolb
mov
add
out
adc
xchg
movsl
ja
imul
mov
lahf
jbe
or
pop
out
addr16
lahf
or
inc
add
pop
xchg
lock
rolb
mov
out
dec
in
or
call
mov
add
add
popf
sbb
pop
aas
inc
dec
pop
sub
jnp
push
add
and
addb
adc
sub
aaa
pop
data16
fs
mov
xchg
push
jge
test
cld
sub
adc
mov
add
mov
xchg
add
fcoml
arpl
or
out
cld
imul
ds
jnp
or
jge
nop
add
mov
mov
and
divb
sub
add
mov
stc
pop
lahf
bound
mov
ret
stos
rolb
mov
add
pop
bound
mov
cmp
add
data16
add
lahf
dec
sbb
pop
orl
test
xchg
sbb
mov
mov
movsb
pop
pop
dec
movsb
and
mov
push
or
add
xor
mov
add
mov
jl
push
add
mov
cwtl
sbb
cmp
mov
int3
stos
enter
sub
cmp
mov
es
mov
test
jb
mov
push
les
mov
gs
pop
add
mov
sbb
sbb
fcomip
add
insl
mov
dec
or
mov
mov
push
add
mov
cli
imul
mov
push
iret
sub
ljmp
mov
add
mov
aas
xchg
int3
add
lods
and
cmp
lods
es
jl
es
insl
rcrl
in
jnp
test
stc
inc
fistl
into
or
lods
pop
cmp
mov
in
mov
sbb
movsb
outsl
sbb
and
fwait
mov
add
je
sbb
scas
add
mov
jp
jecxz
pusha
add
sbb
mov
mov
insb
sub
xor
add
push
xor
dec
mov
fwait
jbe
out
stc
call
gs
icebp
push
arpl
fadds
xchg
add
cld
mov
add
push
iret
rolb
dec
dec
xlat
push
add
inc
add
add
lret
mov
xchg
mov
addr16
add
push
add
das
mov
xor
mov
or
jae
sub
movsb
and
mov
xor
in
cmp
add
dec
pushl
and
cmp
mov
fwait
nop
add
xchg
ficomps
insw
or
cld
bound
mov
add
dec
cmp
mov
mov
xor
mov
in
push
sub
inc
cmp
mov
push
mov
inc
filds
mov
add
ds
sbb
add
jnp
loop
mov
inc
out
sti
in
scas
rolb
mov
add
mov
daa
ret
jmp
add
inc
mov
xchg
xor
mov
push
rol
jno
aaa
sub
scas
fstps
aaa
push
repz
repnz
mov
push
add
arpl
lea
lcall
mov
aam
jg
pop
in
xchg
ficompl
subl
incb
add
and
js
enter
mov
gs
jmp
mov
daa
xor
mov
gs
rolb
mov
add
sbb
sbb
icebp
push
add
fdivs
shrl
cwtl
ds
mov
add
nop
add
mov
mov
dec
test
cli
lods
xchg
popf
ss
add
pop
lcall
das
in
jmp
sti
lret
imul
and
nop
add
mov
dec
shl
in
pop
cltd
test
insb
imul
into
test
aad
das
imull
and
mov
sub
scas
push
jg
jecxz
arpl
inc
jnp
xchg
jp
sbb
add
add
push
stos
outsl
inc
mov
gs
lret
mov
jmp
xor
ret
jge
dec
in
mov
mov
add
jle
in
pop
cmp
sbb
daa
lea
sub
inc
mov
jns
jbe
insb
or
adc
inc
xorl
je
jp
js
xor
repnz
out
jbe
add
sbb
adc
mov
enter
xor
mov
test
xor
add
fldl
mov
mov
cltd
stos
out
in
lcall
or
add
hlt
call
pop
in
sbb
xlat
mov
mov
scas
lods
cmp
cmc
sbb
mov
push
mov
mov
lret
add
add
mov
mov
test
sbb
mov
sub
rol
rolb
and
mov
inc
cmp
pop
xchg
jg
push
add
je
add
push
sbb
mov
pop
ror
sub
xchg
xchg
stos
pop
int3
icebp
jp
gs
add
add
out
stc
rolb
mov
add
add
adc
mov
xor
jp
and
sub
add
pop
xor
mov
sbb
imul
loopne
mov
jmp
and
mov
movsl
mov
sub
sub
pushf
cmp
xchg
mov
or
xchg
mov
push
in
insl
mov
mov
add
into
xor
mov
scas
inc
add
push
and
sub
mov
adc
add
call
mov
and
fisubrs
sub
add
add
inc
mov
mov
xchg
pushf
pop
push
push
cmp
inc
add
mov
out
repnz
in
imul
sub
test
add
notl
lods
scas
push
push
into
pop
in
outsb
imul
add
pop
cmpsl
xor
je
add
rolb
mov
daa
and
xchg
add
add
xchg
add
mov
push
mov
test
or
rcl
outsb
cmp
lcall
mov
and
mov
pushw
addb
nop
add
mov
sti
and
mov
add
inc
add
mov
je
pop
push
dec
loopne
mov
push
pop
fcom
add
and
fs
jecxz
jp
cmp
cmc
cwtl
movsw
aam
pusha
add
add
mov
leave
sub
mov
add
add
add
xor
add
icebp
pop
bound
mov
add
addb
pop
mov
loop
mov
add
mov
lea
sbb
adc
cmp
lock
pop
mov
mov
in
in
xor
push
jl
into
jl
and
add
andl
jmp
jno
pop
lahf
pusha
add
and
lahf
ficompl
pop
rolb
mov
lods
inc
add
sbb
mov
jge
adc
inc
add
dec
dec
xchg
repnz
int
jmp
enter
add
add
mov
out
ret
mov
mov
ja
mov
inc
xchg
inc
add
jo
mov
add
ficoms
add
add
add
mov
adc
mov
add
or
sbb
das
insl
mov
clc
xchg
dec
lods
push
xor
add
and
mov
xor
and
push
jecxz
mov
mov
mov
scas
mov
cmp
adc
int3
cli
fwait
imul
cwtl
inc
adc
mov
add
shl
in
pop
jg
into
cli
cmpsb
ds
insb
xor
add
insl
lret
cmp
push
xor
mov
in
lcall
mov
inc
jmp
add
mov
lahf
push
sti
push
push
mov
jp
enter
push
add
cmp
aad
int3
lcall
mov
std
rolb
or
daa
int3
psrlw
inc
add
adc
jne,pn
testl
jne
add
lahf
sbb
add
iret
jne
adc
jb
mov
inc
mov
mov
aad
add
xchg
pop
in
push
add
aam
pop
bound
mov
mov
call
xor
mov
sbb
dec
cld
ja
push
gs
lret
xor
enter
mov
stos
add
addb
test
mov
mov
leave
hlt
mov
jns
pop
rolb
mov
dec
or
lock
xchg
jp
push
pop
xor
mov
insb
mov
repnz
mov
mov
mov
inc
mov
add
faddl
das
in
sahf
js
addr16
loop
mov
mov
add
je
lds
pop
dec
xchg
xchg
imul
arpl
call
adc
loop
mov
add
sbb
je
pop
mov
mov
mov
mov
mov
lret
icebp
scas
icebp
push
aad
mov
in
mov
add
pop
jb
mov
insb
mov
lods
ret
into
shll
add
fs
add
mov
out
cwtl
mov
inc
xor
and
mov
add
cltd
pushf
sub
fnstsw
add
pusha
add
mov
rolb
mov
repz
push
push
mov
cmp
daa
orl
cmp
cmp
ficoml
add
lret
or
pop
xor
mov
in
mov
mov
es
add
mov
mov
add
xchg
mov
xchg
popf
imul
fsub
push
jns
in
mov
sbb
or
aam
cmp
pusha
add
lods
movsb
test
add
adc
mov
fucom
add
mov
push
xor
add
mov
fiadds
add
xor
inc
push
add
mov
jo
mov
mov
cmp
and
mov
add
mov
add
jg
jle
add
mov
mov
lcall
add
jno
jb
mov
mov
pop
add
add
or
lahf
mov
pop
push
cmp
movsl
iret
imul
daa
pop
out
je
push
xor
mov
add
xlat
jecxz
dec
popa
mov
sbb
sbb
mov
add
mov
stos
inc
jmp
jae
jg
mov
add
sub
add
sbb
mov
int
test
and
mov
jne
cmp
test
add
out
xchg
adc
test
ret
inc
add
cli
mov
mov
rolb
mov
js
mov
xor
inc
add
dec
jge
dec
lret
push
push
dec
adc
sub
ss
daa
mov
mov
mov
mov
nop
add
fstpl
pop
fs
aaa
in
xor
mov
mov
out
aaa
jb
mov
mov
mov
mov
mov
add
scas
aam
aaa
std
int3
mov
mov
outsb
loop
mov
insl
xchg
xchg
mov
cmc
jo
mov
and
loope
xchg
jne
or
sub
cmp
add
xor
mov
lock
inc
add
mov
sahf
mov
pop
pop
cltd
mov
je
add
jns
rolb
mov
nop
add
mov
insl
stos
jne
pop
mov
xor
testl
stos
xchg
sub
xlat
mov
mov
lcall
dec
xor
test
add
call
imul
mov
scas
roll
pop
and
mov
jle
jne
leave
sub
in
xchg
lret
into
sbb
adc
add
adc
push
bound
mov
pop
clc
rolb
xchg
jge
lods
jno
add
adc
out
pop
or
fidivs
jbe
push
mov
iret
fcomps
pop
inc
mov
hlt
mov
and
cmc
or
mov
add
mov
cmp
lret
fwait
imul
aad
outsl
sub
pop
mov
push
add
xor
add
push
int
insb
cld
ret
dec
mov
sub
jl
sbb
pushf
das
lods
dec
loopne
mov
lret
mov
mov
hlt
sub
bound
mov
cmp
in
into
aaa
mov
mov
push
adc
repz
enter
cmc
adc
mov
je
inc
outsl
pop
lcall
call
aad
push
test
mov
addr16
sub
push
sbb
fstpl
mov
jle
ljmp
mov
int3
dec
loopne
mov
jns
in
testb
xchg
adc
outsl
jg
inc
lret
lcall
adc
add
mov
shrl
or
mov
lret
add
mov
js
repz
push
incl
xor
mov
mov
push
push
dec
add
mov
sbb
lahf
xor
outsl
outsl
push
add
das
xor
mov
add
adc
mov
sub
lahf
push
dec
out
pop
adc
dec
insl
cwtl
cwtd
out
fcom
fwait
xchg
add
cmp
mov
inc
add
je
fisubrs
fs
rolb
mov
insb
outsb
stos
sbb
gs
repz
sbb
add
mov
and
mov
fld
add
in
xor
mov
aam
add
aaa
stc
xor
mov
pop
adc
push
push
clc
inc
add
pop
jg
add
int
cltd
out
add
and
mov
mov
or
bound
mov
jecxz
enter
iret
popf
cli
fnsetpm(287
and
mov
call
lods
mov
mov
add
add
add
cltd
mov
mov
lods
pusha
add
push
jo
mov
cmpsl
lods
push
add
push
jb
mov
mov
sbb
pop
sub
mov
add
ja
sub
and
mov
mov
mov
pop
pop
and
adc
cmp
pop
cmp
push
std
jnp
add
fldenv
add
shll
stos
pop
in
mov
ds
mov
or
cltd
dec
adc
pop
dec
test
fdivrl
mov
popf
mov
jbe
add
sysexit
push
add
xor
dec
nop
add
mov
movsb
dec
test
sub
aaa
sub
add
fs
ret
test
mull
add
es
ds
shl
add
bound
mov
loopne
mov
sbb
orl
and
mov
or
popf
or
aad
add
mov
addb
xlat
cmp
pop
sub
xchg
mov
add
add
rolb
mov
lret
imul
add
jmp
add
pop
dec
xor
add
sub
pusha
add
cmp
xchg
addb
imul
dec
add
mov
mov
add
xor
js
scas
ss
adc
mov
cmp
imul
aam
mov
addr16
mov
add
xchg
fldl2t
dec
out
sub
fsubr
mov
mov
jle
mov
mov
mov
ss
sbb
add
adc
mov
ljmp
leave
adc
mov
mov
shrl
xchg
jle
in
loopne
mov
psubsb
cld
pop
cmpsl
jo
mov
fmulp
cld
cwtl
push
mov
loop
mov
pop
fistl
mov
notb
add
add
add
add
inc
mov
mov
jne
pop
mov
mov
pop
pop
xlat
mov
loope
int3
dec
push
mov
add
adc
mov
mov
mov
xor
xor
mov
cmp
ds
test
jae
fwait
dec
add
mov
in
popa
pop
int
pop
add
sbb
add
cmp
jno
stos
test
xorl
addl
shld
mov
cwtl
push
in
roll
rolb
mov
lods
xchg
jge
fiadds
add
lahf
jb
mov
in
test
adc
mov
int3
adc
cmp
or
scas
je
lods
addb
xor
mov
test
add
mov
and
mov
pop
pushf
xor
cmc
lcall
inc
sub
enter
push
and
mov
sbb
repz
fistpll
cmp
mov
cmc
inc
and
mov
rolb
cmp
inc
push
add
mov
sub
inc
add
mov
mov
push
add
add
sbb
and
add
pop
pop
std
jmp
push
mov
pop
test
add
aaa
push
add
mov
mov
ret
sarl
test
xor
jno
sbb
mov
sti
repz
mov
add
cmp
ret
push
and
xor
mov
cltd
cwtl
cmp
xchg
xor
mov
lret
pop
sub
sbb
aaa
pushf
ja
or
mov
dec
or
bound
mov
data16
daa
lea
dec
or
push
lret
add
decb
sub
dec
jecxz
dec
dec
or
pop
cmpsb
adc
push
sbb
and
mov
lock
movsb
mov
int
loopne
mov
fisubrl
ds
mov
sub
rolb
mov
add
fistl
mov
add
jns
in
push
imul
mov
stos
test
nop
add
jae
add
xor
mov
add
mov
fwait
mov
mov
pop
add
mov
leave
mov
mov
loopne
mov
mov
lea
mov
lahf
fistpl
mov
mov
js,pn
add
mov
sub
cld
mov
mov
mov
in
pop
fnstenv
loope
jno
movb
mov
nop
add
mov
test
mov
sub
lcall
fistpll
add
sub
mov
cmp
loop
mov
or
repnz
xchg
mov
cwtl
lods
bound
mov
or
call
cmpsb
out
add
mov
xor
es
fnop
add
into
push
add
hlt
sbb
sbb
or
mov
mov
ss
adc
mov
mov
cmpsb
push
add
pop
hlt
sub
mov
repz
add
leave
sub
int
movl
cmp
mov
mov
ss
add
movups
faddl
add
bound
mov
cmpsb
mov
mov
cwtl
iret
push
popa
cmpsb
or
cmp
sahf
pop
inc
adc
push
pop
rolb
mov
sbb
rep
push
jbe
in
arpl
mov
cmc
xchg
add
loop
mov
or
movsb
aad
jb
mov
inc
js
mov
call
jle
fisttps
push
mov
ret
sub
add
cmp
mov
xchg
daa
aas
rolb
mov
imul
sub
arpl
out
movsb
sbb
pop
jle
xchg
push
push
add
out
test
or
rolb
mov
rol
mov
add
mov
cmp
lock
sbb
lods
stos
jl
jp
and
aaa
addb
dec
out
xchg
dec
mov
ret
and
mov
test
pop
fdivrs
clc
inc
push
lock
mov
daa
sbb
dec
fs
mov
push
inc
jmp
mov
mov
out
cmp
lods
push
lods
jns
ds
dec
std
je
pop
pop
jo
mov
fmul
sub
xchg
push
push
jmp
mov
jns
sti
sbb
ret
arpl
mov
mov
mov
add
xor
mov
sub
cmp
push
mov
sbb
mov
sti
adc
push
loope
fdivr
dec
cwtl
cs
mov
mov
jmp
or
inc
lea
mov
mov
mov
lods
xchg
scas
push
add
or
sbb
addb
sub
clc
cld
sti
sti
xor
iret
sahf
cld
jecxz
lret
aas
ss
push
add
jae
fcoml
adc
push
nop
add
sar
fcomi
popf
xor
mov
testb
add
xchg
sub
add
cmc
bound
mov
adc
mov
inc
inc
push
rolb
mov
fscale
fs
popf
rolb
mov
push
and
cs
sub
mov
jg
add
in
dec
inc
cwtl
or
add
in
pop
lock
xor
jae
and
cmp
imul
cmp
daa
push
sar
mov
popa
hlt
xchg
add
mov
pop
and
fimull
mov
cmpsl
mov
mov
jno
nop
add
push
push
xor
add
sub
leave
fwait
test
mov
pop
xchg
mov
jbe
mov
scas
jbe
lret
add
or
add
mov
mov
add
rolb
mov
and
add
mov
sti
cli
aas
mov
cmpl
movsl
jnp
xor
mov
xchg
xchg
xchg
cltd
xchg
jo
mov
out
cld
mov
subl
add
mulb
add
imul
mov
pop
and
mov
mov
add
loope
push
mov
mov
lea
cmc
push
lret
mov
inc
pop
in
and
add
pop
mov
add
xor
mov
clc
cmpsl
lcall
and
adc
add
mov
scas
repz
dec
dec
jo
mov
out
movsl
pop
scas
out
mov
sub
es
gs
mov
add
mov
inc
push
stos
sarl
add
mov
add
negb
lcall
and
mov
sbb
mov
scas
pop
mov
icebp
push
popa
gs
jns
inc
add
xchg
mov
loopne
mov
sbb
mov
mov
enter
dec
jno
mov
std
push
jg
in
insb
pop
push
or
das
or
insb
or
jmp
mov
cli
sub
xchg
add
mov
cli
outsb
test
mov
add
roll
cli
clc
shr
sub
cwtl
push
pop
sub
mov
in
leave
test
mov
mov
fcmovnb
cmp
js
add
inc
lds
add
pushf
push
cwtl
push
add
dec
mov
add
sbb
add
fbld
mov
adc
adcl
and
jl
add
add
or
push
or
sub
repz
sbb
add
cmp
or
add
add
mov
ret
mov
adc
pop
ss
mov
adc
jbe
pop
cmp
fbstp
xor
mov
add
ss
icebp
push
sti
in
mov
mov
add
mov
xor
hlt
and
mov
add
adc
js
jno
pop
rcrl
mov
add
mov
arpl
dec
mov
xchg
add
sbbl
sub
mov
jae
addb
stos
scas
addb
stos
xchg
add
mov
sbb
push
adc
inc
jb
mov
dec
mov
mov
mov
mov
mov
fimuls
cmp
mov
gs
push
mov
mov
add
fisubs
sub
das
leave
mov
mov
mov
mov
pop
pop
out
cld
ja
cmp
sbb
add
enter
fistps
and
cmp
lret
cmpsl
mov
sahf
jo
mov
mov
aaa
mov
add
or
or
jp
aam
movsb
sub
jne
sahf
pushf
push
add
mov
add
add
mov
jmp
mov
mov
mov
and
mov
cmp
push
add
mov
cmp
mov
and
sbb
add
inc
xchg
dec
fsubp
mov
and
mov
mov
push
xor
out
out
mov
mov
mov
mov
mov
popf
push
in
lret
cli
movsb
dec
ss
lea
js
shll
add
mov
stos
xchg
push
clc
ds
shll
test
or
pop
cmp
sbb
mov
cwtl
addb
xchg
add
fisubrl
xchg
pushf
mull
mov
icebp
cmp
pushf
dec
or
pushf
imul
in
flds
add
movsl
fucomp
call
inc
add
push
pop
xchg
rolb
jbe
push
or
fwait
rolb
xchg
sti
in
insb
stos
add
pushf
inc
sub
mov
add
xchg
in
aaa
push
push
jmp
add
mov
xchg
xor
dec
and
mov
add
hlt
cwtl
cmpsb
mov
repnz
push
adc
xlat
jp
xchg
js
add
mov
add
int
dec
inc
fs
repz
repnz
ds
pushf
dec
or
jne
or
repnz
add
call
inc
or
xor
mov
cli
fidivrl
or
dec
out
push
xchg
jle
sti
rcrl
add
mov
mov
shll
add
dec
int3
push
test
stos
sub
scas
les
adc
add
ret
fdivrs
sahf
mov
and
mov
out
and
xchg
add
sub
out
lcall
loop
mov
stos
lods
add
mov
jle
pop
rolb
mov
xchg
aas
mov
dec
cmp
mov
int
loop
mov
nop
add
pop
inc
add
pusha
add
idivb
adc
mov
aas
daa
pop
xchg
adc
inc
repz
in
rcll
stos
dec
and
mov
mov
js
jne
push
loop
mov
push
scas
mov
loop
mov
xor
in
push
mov
jl
jge
add
addb
xlat
pop
jae
add
aaa
loopne
mov
add
stos
insb
sub
sub
push
dec
sub
loope
add
xlat
je
add
popf
fwait
xchg
jne
pop
cmpsb
mov
add
ret
int3
or
in
pop
inc
sbb
add
dec
and
jne
push
add
imul
fstp
insl
jnp
add
lcall
mov
mov
dec
mov
stos
fistl
fmul
inc
xchg
push
jmp
aaa
pop
xchg
sub
dec
jl
pop
insb
or
and
movsb
push
add
mov
dec
adc
mov
inc
mov
movsb
call
mov
sbb
inc
pop
into
cmp
xor
hlt
lcall
add
fwait
orl
les
jno
add
xor
mov
add
idiv
push
add
mov
mov
fwait
movsb
add
adc
mov
cmp
out
mov
cltd
out
addb
leave
mov
fldt
shll
mov
add
pushl
iret
or
adc
jae
test
fwait
and
mov
cmp
mov
mov
cmc
mov
sbb
xor
mov
pop
fldenv
leave
insb
xor
outsl
pop
icebp
in
mov
ret
sub
pop
ficompl
inc
lcall
mov
popw
pop
jbe
inc
fldl
pop
jecxz
test
jmp
mov
fistpll
fisttpl
and
mov
add
pop
ja
add
ret
mov
sub
sub
xor
mov
xchg
sti
jl
mov
into
mov
add
mov
orl
outsl
cld
ret
cmpl
cmc
mov
mov
int3
xor
daa
leave
push
int3
xchg
movsb
push
add
xor
adc
xor
stos
imul
and
mov
push
lea
pop
xorl
add
mov
cld
push
rolb
mov
cmp
mov
add
test
pop
xchg
add
xchg
add
rcr
add
lahf
push
add
inc
mov
stos
mov
in
jg
sbb
inc
add
pop
shr
aaa
add
mov
jp
lahf
outsl
mov
add
mov
add
add
cli
mov
push
inc
mov
loopne
mov
jmp
das
repz
xchg
fucomi
mov
fiadds
mov
jo
mov
rolb
mov
mov
mov
pop
and
into
lea
test
dec
inc
add
add
test
pop
jns
sbb
sub
mov
add
icebp
iret
jo
mov
inc
mov
mov
cltd
sbb
sahf
sbb
lods
sub
mov
add
lret
cltd
stc
lahf
dec
stc
sti
cld
scas
subl
or
stos
lods
inc
add
mov
pop
test
cmp
sub
push
fimuls
add
add
mov
mov
loopne
mov
pop
cmp
mov
cmp
lcall
jg
lahf
mov
add
mov
inc
add
stos
pop
repnz
add
mov
and
mov
add
push
rolb
pop
loopne
mov
mov
add
add
mov
lret
jl
xchg
adc
mov
dec
or
leave
jmp
pusha
add
add
je
outsl
ret
push
pop
mov
mov
jge
out
mov
iret
add
mov
cmpsl
scas
pop
inc
add
mov
in
adc
jbe
jmp
fdivr
cmp
adc
mov
ja
mov
add
adc
mov
sbb
mov
pop
mov
test
rcrl
pop
lcall
fisubs
add
mov
mov
or
pop
mov
mov
mov
mov
or
add
sub
mov
fwait
nop
add
mov
std
mov
mov
adc
xchg
mov
sbb
add
out
push
lock
jne
xchg
movsl
jge
push
addb
nop
add
lcall
arpl
popf
push
add
xor
mov
das
jne
mov
mov
mov
add
mov
mov
out
add
mov
test
add
iret
push
inc
loope
cld
dec
and
fidivl
push
mov
mov
xlat
mov
lahf
push
sbb
xchg
stos
stos
orl
outsl
ret
decb
jns
or
repnz
mov
outsl
out
mov
mov
add
mov
add
mov
add
cmp
stos
es
sbb
iret
aaa
inc
popa
sbb
xor
mov
iret
ds
fisttps
mov
add
mov
cwtl
sub
lock
mov
xor
add
jmp
test
mov
hlt
pop
adc
cmp
jecxz
dec
arpl
add
mov
mov
add
mov
add
ret
hlt
ret
sbb
mov
push
data16
mov
fistpll
repz
push
push
inc
rolb
mov
pop
cmp
mov
mov
jo
mov
nop
add
add
jg
add
add
int
imul
add
mov
add
xor
mov
add
mov
jmp
mov
cld
xchg
cmpsl
sub
addb
rolb
mov
pusha
add
jne
cmovnp
jle
xchg
push
ss
and
out
popl
xchg
xchg
mov
add
out
dec
mov
lock
mov
jp
data16
mov
inc
add
add
dec
dec
or
mov
add
cltd
insl
jg
cmp
add
call
test
es
pop
sbb
add
lock
add
int
push
dec
mov
das
inc
cmp
lods
xor
std
stos
aam
test
mov
dec
push
bound
mov
jmp
mov
fwait
cwtl
loope
repz
mov
inc
mov
mov
jae
leave
dec
in
jle
add
pushl
imul
mov
xchg
add
or
add
mov
add
pop
pushf
fstps
mov
add
mov
cmpsl
and
mov
cld
cmp
shll
lods
jp
add
mov
neg
push
push
mov
add
mov
sub
je
add
xorl
mov
scas
mov
fs
pop
jns
dec
lret
add
or
sub
mov
cmp
pop
mov
fimuls
test
dec
call
icebp
push
cmpsb
aas
jecxz
xchg
mov
cmp
idivb
iret
mov
add
fs
scas
mov
in
mov
ss
std
js
pushf
out
inc
fcoml
xchg
adc
mov
sub
jo
mov
lret
call
jl
nop
add
xlat
add
pop
aad
daa
loop
mov
dec
das
sbbl
push
pop
pop
pmulhuw
add
mov
mov
cmpsb
clc
or
jns
cld
jl
xchg
add
cmp
add
push
cli
or
add
mov
jae
push
add
mov
pop
push
add
orl
or
sbb
mov
mov
push
out
fstpt
dec
adc
mov
fsubrs
inc
into
xor
stc
ucomiss
add
pusha
add
mov
sub
fstps
leave
in
add
roll
mov
sti
pop
fldt
mov
cmc
out
daa
mov
ljmp
stc
sbb
mov
mov
mov
xor
or
inc
xchg
sbb
cmp
xor
mov
adc
lahf
push
push
cmp
push
mov
inc
or
mov
add
mov
mov
pushf
in
out
jl
and
add
pop
ret
frstor
mov
ljmp
inc
loop
mov
push
jns
arpl
pop
mov
xchg
es
mov
add
pop
adc
inc
push
mov
dec
je
mov
jp
scas
out
cmp
add
lret
and
mov
cmpsl
das
cmpsb
inc
xchg
mov
xchg
push
push
xor
movsb
fcmovnbe
add
cmp
fwait
lret
test
xchg
mov
add
add
jne
inc
xchg
add
mov
cld
lock
jno
mov
js
fistpll
push
and
mov
or
mov
lahf
inc
mov
add
mov
dec
addb
cmp
mov
adc
out
les
gs
aam
lahf
adc
sbb
mov
fidivs
add
and
push
add
add
mov
inc
sbb
scas
add
mov
lods
cld
mov
xor
add
cmp
out
add
cmp
or
gs
lret
popf
xchg
xor
push
lods
fwait
js
test
add
lock
mov
add
rolb
mov
and
insb
jb
mov
xor
mov
xchg
orl
inc
add
sbb
pushf
add
push
out
xor
mov
mov
inc
and
add
mov
mov
xor
mov
jp
add
imul
add
jbe
leave
loope
in
sti
sahf
cwtl
push
add
pushf
nop
add
xor
pop
lods
addb
in
loopne
mov
fistps
mov
inc
jns
es
sti
mov
xchg
or
push
add
sbb
sub
shll
or
push
add
add
adc
cmp
jp
imul
xchg
jg
add
add
mov
call
repz
arpl
dec
pop
sbb
scas
ja
xor
mov
or
dec
lcall
divb
mov
mov
mov
mov
pushf
fistpll
add
add
add
pop
cmpsb
int
incl
xchg
adc
push
cmp
add
jb
mov
mov
jno
add
lret
pop
scas
aam
xchg
loope
nop
add
inc
mov
push
add
out
mov
add
dec
ja
sbbl
stos
or
mov
add
gs
dec
loope
inc
and
or
imulb
push
in
dec
xchg
aas
fildll
xor
pop
insb
push
add
cli
ror
add
add
imul
bound
mov
xchg
sub
sbb
mov
cmpl
jno
mov
arpl
add
mov
or
fst
add
pusha
add
cli
outsb
mov
addb
mov
add
add
xchg
add
add
pop
jbe
xor
mov
add
pusha
add
outsl
in
stc
repnz
sub
aas
jge
repz
push
push
inc
insl
mov
add
push
add
lods
rolb
mov
jae
fmull
mov
gs
in
xor
mov
lcall
add
inc
xor
or
sub
pop
push
stc
pusha
add
mov
and
mov
add
xchg
add
mov
cmp
fstpt
out
add
sbb
xor
inc
jp
rolb
sbb
mov
loop
mov
mov
cwtl
mov
ja
arpl
push
repz
loop
mov
add
mov
dec
mov
jbe
pop
std
addb
es
mov
repnz
jg
push
ljmp
cs
daa
and
cmpsb
fs
sbb
dec
fistpll
dec
sub
cli
nop
add
dec
and
ja
push
add
in
mov
repnz
push
xor
into
mov
mov
add
cmc
insl
mov
ss
and
mov
add
lock
stc
jg
daa
mov
enter
pop
ja
int3
dec
jmp
lock
in
jns
rolb
sub
add
push
loopne
mov
mov
adc
std
adc
or
mov
js
add
push
add
sbb
leave
insb
pop
scas
int
mov
pop
mov
mov
rcr
add
mov
cmp
jns
add
mov
repnz
aad
mov
mov
mov
mov
mov
add
pop
fidivrl
add
outsl
aam
xchg
add
mov
mov
leave
jp
add
cmp
cmp
or
mov
rolb
mov
sub
add
sub
lds
mov
mov
mov
push
mov
call
cmp
push
in
in
stos
mov
add
stc
push
lea
leave
fsubr
mov
jmp
stos
rcr
test
call
lea
add
add
xchg
cld
pop
cmc
std
data16
sbb
add
sbb
cmpsl
inc
rep
out
cmpsl
scas
fidivrs
test
dec
scas
repnz
ljmp
pop
pop
arpl
flds
add
imul
cmp
inc
mov
loope
je
adc
mov
sbb
or
or
jl
mov
inc
sbb
push
sub
mov
into
fdivs
mov
int
psrlw
jg
inc
mov
fcomp
lods
lods
popf
enter
and
cltd
leave
rcrl
movsl
cmpsl
aad
inc
sarl
add
rolb
mov
sbb
roll
pushf
mov
mov
add
mov
movsl
mov
les
mov
mov
add
ffreep
add
fdivrs
cmpsb
sahf
and
fimuls
dec
fs
pop
dec
sub
push
add
add
or
add
mov
xchg
add
add
insl
inc
aas
mov
out
gs
dec
ret
and
dec
into
xchg
pop
movsb
pop
mov
imul
jmp
lcall
cmp
loope
rolb
jge
std
rolb
fcompl
aad
les
xchg
out
int3
lods
xor
push
adc
scas
pop
xchg
aad
add
rolb
mov
mov
dec
jge
mov
sahf
inc
add
sbbl
daa
fdivr
mov
repz
add
out
mov
lahf
test
ret
jns
add
or
inc
and
mov
add
cmp
mov
cld
std
outsb
dec
add
add
jb
mov
xchg
mov
cmp
push
or
scas
outsb
inc
adc
scas
je
mov
cmp
push
test
add
add
loop
mov
mov
pop
xchg
leave
punpckhdq
sub
mov
xor
mov
test
outsb
push
aaa
iret
out
faddp
add
xor
mov
sahf
mov
mov
pop
add
mov
add
cmpsb
inc
sbb
scas
scas
loope
add
mov
jmp
or
mov
in
jp
rolb
mov
ret
inc
xchg
fdivl
mov
pop
gs
pop
out
xor
scas
push
sar
push
mov
inc
das
insb
xchg
xchg
in
xor
testl
test
fmull
leave
sbb
push
add
pop
mov
mov
mov
xchg
add
inc
add
ficoml
lock
mov
mov
call
push
in
add
add
dec
or
lret
push
xor
mov
lret
push
add
push
orl
aas
test
add
xchg
inc
push
mov
mov
sbbl
aad
push
mov
cld
ret
sbb
mov
pop
cli
cmp
psllw
add
insb
jl
jmp
add
add
mov
cltd
mov
sbb
dec
xor
cld
aam
fisubrl
cmp
inc
xchg
repnz
add
je
lahf
push
idiv
add
mov
inc
and
mov
popa
xor
mov
mov
add
cmp
mov
stos
test
sahf
stos
and
add
test
icebp
inc
mov
mov
xor
mov
mov
mov
test
aaa
into
mov
mov
into
dec
push
add
mov
pop
xlat
add
testl
lcall
inc
add
push
inc
add
leave
xchg
sbb
inc
aaa
adc
mov
sbb
cld
stos
repz
inc
add
add
popa
roll
dec
sub
adc
std
iret
adc
call
sbb
mov
mov
add
bound
mov
je
pop
cmc
cmp
iret
mov
popa
jle
mov
sbbl
jle
add
mov
lret
out
addb
sbb
xor
add
faddl
leave
mov
mov
mov
frstor
mov
mov
pop
xchg
xchg
pop
inc
xor
mov
inc
pop
dec
sarl
add
jecxz
popf
dec
cmp
insb
push
pop
dec
or
push
in
add
mov
mov
mov
add
mov
pop
sub
shll
add
and
in
aas
mov
mov
std
fstpt
adc
add
mov
mov
add
mov
cwtl
xchg
xchg
jmp
test
add
dec
push
add
mov
sub
sti
mov
adc
xor
mov
int
fldenv
mov
sub
addb
shl
add
xor
mov
daa
jns
jo
mov
ret
xor
stc
push
push
xchg
add
add
sub
add
adc
dec
fldl
inc
shll
fisttps
or
inc
and
leave
in
pop
jle
inc
add
pop
cli
xchg
add
arpl
jl
jne
sbb
sti
sbb
add
fistpll
int3
add
xor
mov
cmp
lea
arpl
jo
mov
add
rolb
mov
insl
jecxz
popf
cwtl
in
push
ja
or
stos
mull
add
sbb
rolb
mov
xchg
jae
pop
push
add
test
mov
jns
int3
push
add
add
arpl
mov
add
push
sub
inc
mov
scas
js
jns
inc
mov
test
push
sti
lods
sub
add
out
mul
sbb
inc
aas
ret
mov
mov
add
add
mov
sbbl
and
or
xor
mov
scas
imul
add
mov
xor
mov
fstpl
mov
mov
lods
fwait
ret
xor
mov
gs
jno
cs
fcomi
pop
push
and
mov
int
sahf
inc
xor
lock
or
lret
dec
addb
enter
insb
popf
or
add
mov
mov
pop
jo
mov
dec
sti
filds
mov
cmp
jge
xchg
cmp
mov
push
outsb
sti
jecxz
dec
cmc
xchg
mov
mov
bound
mov
add
push
add
xchg
mov
mov
jo
mov
cmc
les
mov
push
fs
ljmp
jecxz
sbb
or
sub
sbb
push
add
loope
xchg
mov
add
push
stc
mov
js
fwait
xor
mov
std
nop
add
add
xchg
dec
lods
scas
jae
add
mov
dec
jno
add
mov
xor
mov
nop
add
add
mov
rolb
mov
rolb
mov
mov
leave
rorl
dec
pop
es
in
cmp
loopne
mov
jl
add
add
xchg
and
mov
mov
mov
lahf
rolb
popa
mov
mov
add
or
dec
jne
jns
cmp
fisttpl
add
xor
add
imul
mov
cmp
enter
nop
add
stos
data16
jecxz
jmp
inc
aas
pop
mov
int
idivb
gs
addb
mov
fsubl
add
xchg
mov
les
jno
incb
popa
push
call
mov
xchg
aam
adc
addr16
pop
movsb
pop
add
lods
pop
sbbl
inc
add
inc
add
add
add
movsl
ja
bound
mov
add
std
xchg
push
mov
mov
mov
mov
insb
push
inc
pop
dec
out
mov
shl
or
adc
movsb
dec
mov
pop
adc
pushf
inc
clc
in
cs
lods
push
adc
mov
ds
scas
ret
mov
mov
fldenv
add
add
test
mov
jns
add
and
mov
std
sarl
add
mov
mov
mov
pop
adc
and
fs
fcom
daa
xchg
les
jnp
push
add
xchg
dec
out
xchg
andl
add
adc
scas
cmp
stos
or
xor
add
inc
test
sub
popf
xchg
add
mov
inc
pop
xchg
mov
fnstsw
movsb
stos
dec
stos
popa
mov
cwtl
in
add
mov
repz
repnz
lock
lock
mov
dec
pop
popf
pop
lods
outsl
sti
jge
or
mov
movsl
jecxz
inc
and
mov
addr16
mov
cmc
sbb
mov
popf
and
sahf
mov
xchg
xlat
lcall
aam
repz
mov
add
pop
jbe
add
mov
jmp
jmp
testb
rolb
mov
mul
add
inc
in
addb
jge
push
insl
lret
pop
pop
pushl
xlat
sub
mov
add
cmp
mov
imul
pushl
lcall
dec
mov
push
cmpsb
xor
mov
addb
sbb
rcl
add
dec
xchg
popf
cwtl
fwait
add
mov
push
pop
mov
cld
lock
and
xor
and
mov
fcomps
in
pop
cmp
inc
add
enter
test
add
jmp
mov
inc
dec
int
addb
mov
imul
adc
mov
jecxz
inc
add
lods
xchg
push
call
int3
insl
sub
push
iret
std
out
roll
inc
push
add
pop
cmp
push
jo
mov
pop
or
scas
lods
lcall
repnz
out
sub
hlt
xchg
lret
leave
daa
mov
jge
adc
dec
cmp
pusha
add
add
js
mov
out
pop
push
mov
inc
cs
sbb
je
mov
jnp
bound
mov
lock
add
mov
loope
imull
stos
lahf
jns
add
mov
test
movsl
lahf
jl
aaa
std
pop
add
mov
add
sarl
jnp
inc
adc
push
scas
mov
lods
aad
add
add
mov
cmp
pop
lahf
mov
mov
mov
mov
sub
sub
jns
popa
jle
add
jno
addb
jge
xchg
add
movsb
sbb
xchg
jo
mov
add
mov
fstpl
mov
add
xchg
adc
fwait
movsw
pop
fldt
add
out
in
jmp
fcoml
mov
mov
and
add
arpl
repnz
dec
bt
fidivrl
jbe
dec
dec
pop
leave
cmp
xor
mov
sub
and
mov
mov
inc
movsb
je
or
outsl
inc
lcall
mov
dec
pop
daa
aas
jge,pt
je
aaa
dec
sbb
add
jle
cltd
xor
mov
add
push
jnp
mov
mov
mov
pushf
stos
mov
mov
fwait
out
pop
xor
mov
add
shll
movsb
xchg
clc
mov
add
mov
adc
dec
in
add
jbe
hlt
aaa
pop
mov
mov
fwait
call
sub
mov
sbb
dec
push
pop
cmpsb
pop
xchg
inc
fldenv
sub
les
xchg
inc
negl
jg
fs
cmpsl
sub
cwtl
xchg
stc
shrl
push
dec
inc
dec
xchg
push
sub
add
stos
in
add
and
pop
das
clc
sti
or
ja
fs
in
dec
mov
push
mov
mov
std
sbb
jae
jne
add
mov
sub
dec
repz
pushf
adc
mov
add
rolb
mov
mov
lret
loop
mov
mov
cmp
fadds
mov
xchg
sub
lea
mov
mov
cmpsl
add
mov
aam
fldcw
mov
add
and
mov
stos
aas
push
adcl
xchg
ret
or
mov
sbb
pop
and
mov
add
fisttps
add
xchg
mov
pop
fsubrl
adc
mov
sbb
in
fldcw
adc
mov
xchg
and
jbe
fwait
cmp
push
cmp
push
adc
mov
and
mov
out
pop
loope
add
mov
pop
stos
push
iret
sbb
jb
mov
mov
nop
add
cmp
fdivrl
push
add
dec
inc
fnstenv
add
mov
ja
ficompl
rol
fisubl
jmp
lret
daa
dec
mov
out
push
lock
adc
add
mov
add
rolb
mov
and
push
leave
es
addr16
adc
mov
pop
mov
add
inc
add
lods
add
aad
pop
cmp
mov
add
jecxz
jecxz
jae
in
lods
test
rolb
pop
xchg
ljmp
dec
adc
mov
sbb
mov
mov
inc
add
jl
sub
add
xchg
push
add
leave
cwtl
enter
aad
aaa
imul
pop
sub
add
pop
mov
iret
daa
out
fs
repnz
xchg
mov
dec
adc
mov
icebp
fimuls
lods
loop
mov
imul
mov
sbb
mov
add
or
adc
dec
imul
loope
mov
mov
pop
dec
xchg
iret
imul
add
mov
mov
mov
lock
mov
adc
add
and
add
push
push
in
cli
rcl
lret
add
js
add
add
add
mov
mov
jo
mov
loope
pop
fstpt
xor
add
mov
cmp
movsl
in
xchg
adc
or
mov
inc
add
imul
aas
sub
decl
jbe
or
push
ds
mov
je
jp
jge
daa
imul
add
cmp
add
inc
fadds
bound
mov
push
and
fnstsw
add
mov
mov
sbb
or
xchg
fcom
cmpsb
cwtl
xor
mov
out
add
mov
add
mov
sub
jl
adc
addb
int3
mov
add
aad
adc
fildl
mov
mov
addl
dec
push
in
jnp
add
ret
dec
dec
gs
push
cmp
push
or
sub
mov
pop
fbld
add
mov
arpl
std
aas
out
rolb
inc
push
scas
or
add
mov
and
mov
add
and
mov
add
pop
sbb
xchg
mov
neg
cmp
pop
pop
adc
xor
mov
stos
fiadds
mov
sub
sbb
add
in
jb
mov
jecxz
mov
sahf
outsl
inc
out
lret
sbb
fcoml
iret
dec
xchg
pop
call
jmp
inc
and
mov
int
enter
in
push
add
sub
sahf
push
fptan
add
dec
mov
and
push
mov
mov
scas
loope
push
mov
shll
cmpsl
imul
sti
rolb
aad
sbb
and
add
mov
int3
sbb
jp
add
xchg
outsb
test
pop
xor
xchg
frstor
mov
insl
call
mov
mov
mov
nop
add
jbe
stos
jge
add
sbb
aas
stos
ss
repnz
push
les
imulb
mov
cwtl
lahf
outsb
jo
mov
dec
das
xor
mov
mov
rorl
in
mov
fisubrl
mov
mov
inc
jb
mov
add
mov
in
loop
mov
add
dec
mov
xor
mov
xor
ret
push
add
add
add
sbb
xchg
pop
nop
add
xchg
movsl
jecxz
pop
popf
pop
push
add
mov
fsubl
addb
or
jb
mov
lea
das
stos
cmpsb
jp
jnp
iret
push
push
in
jmp
dec
mov
icebp
into
xor
inc
xor
nop
add
iret
xchg
add
jecxz
add
jl
cmp
imul
int
and
xchg
add
dec
imul
mov
add
jl
adcl
leave
arpl
add
int3
mov
fimuls
fildl
and
cmp
xchg
dec
jle
xchg
mov
mov
inc
add
add
lods
mov
add
subl
out
cmpsb
jno
dec
inc
aad
xor
mov
mov
add
lcall
mov
jg
lret
adc
lods
pop
lret
stos
mov
jl
jge
add
fldenv
imul
inc
add
mov
dec
addb
pop
sahf
inc
pusha
add
and
mov
mov
sub
movsb
inc
sub
mov
stos
lea
xchg
scas
js
xor
add
jmp
mov
loope
test
inc
sbb
movsl
mov
sbb
mov
jbe
test
enter
push
add
lods
int3
or
mov
pop
test
addb
jnp
jge
mov
popa
test
push
loop
mov
jae
jecxz
xor
jg
add
fistpl
and
mov
repz
int
and
mov
addb
imul
jbe
add
sub
add
les
icebp
lret
sub
cli
cmc
sbb
imul
mov
mov
push
test
add
add
mov
ror
push
cmp
in
movsb
sti
mov
pop
adc
sub
dec
or
mov
sarl
mov
pop
imul
mov
mov
xor
add
add
and
add
add
fdivrl
popf
dec
or
test
xchg
mov
add
cld
pop
aad
mov
lock
add
inc
adc
xchg
or
lahf
stc
data16
mov
cli
and
mov
mov
ja
adc
cmp
pop
push
pop
adc
add
data16
mov
sbb
mov
add
xchg
addb
mov
movsl
leave
mov
in
in
jnp
inc
add
sbb
mov
imul
ficoms
popf
rolb
les
bound
mov
dec
les
inc
out
sbb
inc
fimuls
popf
inc
jge
mov
add
or
scas
inc
xchg
bound
mov
lret
ret
sbb
ljmp
addb
jae
or
or
adc
pusha
add
pop
test
pop
inc
inc
pop
and
mov
lds
jg
mov
aad
loop
mov
ljmp
mov
outsb
xor
mov
xchg
insl
aas
dec
addb
sarl
xor
mov
mov
mov
jbe
add
addl
and
xchg
sbb
pop
repnz
mov
fidivs
imul
push
add
shr
jae
mov
pushf
aas
pop
call
mov
xchg
add
outsl
xor
mov
or
jecxz
inc
jno
cmc
mov
mov
test
jbe
sbb
lock
add
dec
repnz
jle
dec
xlat
aad
mov
xor
mov
push
lahf
in
leave
mov
cmc
loope
fnstsw
mov
sbb
add
xor
mov
fsts
stos
inc
inc
or
pushf
lods
cltd
push
jbe
fildl
mov
in
xor
add
add
cld
xchg
rcll
adc
add
add
inc
jbe
test
and
sub
add
push
push
mov
push
ljmp
xchg
imul
pop
xchg
pop
inc
xchg
xor
imul
sbb
add
cs
mov
or
fs
rcll
leave
add
mov
add
movsb
pushf
fld
testl
out
lcall
mov
mov
mov
mov
cwtl
or
in
push
enter
sbb
xchg
fs
mov
cmc
test
mov
ljmp
xor
push
pusha
add
mov
mov
ucomiss
add
and
add
add
add
orl
out
int
dec
jg
xchg
add
out
jns
add
aad
aaa
pushf
mov
fistpll
dec
xchg
push
dec
sub
out
xchg
test
lret
in
stc
and
mov
add
imull
imul
push
mov
lods
jno
popf
adc
jo
mov
add
imul
scas
imul
addb
mov
shll
jno
add
cmp
xor
jo
mov
dec
xor
add
push
iret
inc
add
ja
je
fcomi
push
leave
or
mov
mov
mov
and
aam
add
in
xlat
insl
inc
jle
mov
cmp
jl
and
push
add
add
in
aaa
pushf
jno
xor
fisubrl
and
mov
xchg
sahf
pop
loope,pt
pop
push
outsb
cli
cld
mov
gs
cmc
mov
xchg
sbb
arpl
pop
sahf
data16
mov
aad
add
jae
std
mov
icebp
jnp
adc
int
push
add
mov
cmc
fsubrl
shr
stc
sbb
cmp
loopne
mov
int3
stc
push
cmpsb
push
lea
jnp
jo
mov
mov
adc
add
shrl
cltd
movsl
fdivs
mov
add
mov
sbb
rolb
mov
mov
mov
daa
or
pushl
int3
pop
pop
xor
add
mov
insb
or
ficompl
enter
iret
vhsubpd
pop
and
mov
xchg
mov
lds
das
mov
repnz
add
imul
xlat
xchg
leave
inc
xor
add
add
mov
push
aad
add
lods
jmp
lret
ficomps
add
test
add
jp
cmp
mov
mov
and
ror
popf
mov
sub
mov
ja
add
mov
add
aas
testl
push
jle
lds
cli
ret
in
mov
stos
jbe
or
mov
xor
or
dec
mov
add
mov
dec
ljmp
lds
pusha
add
repnz
in
iret
inc
mov
pop
lock
lds
in
jmp
add
add
xchg
int
aad
cwtl
ret
fldenv
push
fiaddl
enter
pop
xchg
sti
hlt
add
mov
add
aam
rolb
mov
int3
in
ss
addr16
pop
xchg
push
add
cmp
push
add
mov
aad
ret
in
add
mov
pushf
rorl
cmp
sbbl
mov
repz
pop
lods
pop
mov
jbe
sbb
inc
and
mov
mov
mov
mov
cmp
divps
addr16
lahf
pop
inc
cmp
xor
mov
mov
and
leave
cmp
jne
ja
cmp
cmpsb
cmpsb
inc
movsb
jmp
ljmp
mov
add
xchg
add
push
mov
pushl
add
pop
xor
movsl
mov
mov
add
add
shll
cwtl
inc
test
in
arpl
mov
ret
lods
addr16
adc
push
add
mov
add
add
xchg
fdivrl
add
mov
add
or
xlat
mov
xchg
rolb
mov
fsubrl
add
add
arpl
insl
sbb
sbb
and
pusha
add
add
cwtl
out
pop
cs
mov
dec
sbb
outsl
xor
gs
out
sbb
jb
mov
filds
dec
fnsave
inc
jno
sub
cmpl
outsl
pop
movl
adc
dec
pusha
add
in
int
int
fnstcw
and
or
mov
int
dec
and
movsb
pop
lea
add
mov
mov
jle
and
mov
outsl
jnp
inc
jb
mov
mov
lea
addl
jae
arpl
lret
mov
mov
add
and
stos
test
fisubrl
cmc
insb
popa
inc
insl
out
mov
add
add
mov
mov
sub
adc
mov
add
mov
popa
jbe
adc
dec
or
mov
add
mov
push
rolb
mov
out
xor
mov
mov
mov
add
push
lea
ljmp
add
mov
mov
lahf
xor
add
pop
jo
mov
movl
or
mov
xchg
add
push
add
imul
nop
add
fucomp
rolb
mov
or
les
mov
jp
sbb
rolb
mov
add
mov
dec
xchg
pop
fcoms
imulb
ret
jg
pop
mov
mov
in
stos
jmp
jecxz
cltd
xchg
push
aad
loopne
mov
push
and
mov
lcall
jl
and
std
rolb
mov
lcall
mov
outsl
xchg
add
sbb
lds
add
push
shl
int
jns
cwtl
bound
mov
sbb
sbb
imul
mov
lods
mov
push
sbb
add
push
add
mov
mov
mov
cs
adc
mov
jmp
push
imul
and
aad
inc
cmp
or
jecxz
mov
pop
negb
mov
repz
add
mov
loope
cmp
enter
mov
or
fadd
add
add
inc
push
and
mov
xchg
mov
aad
test
dec
addb
push
stc
fsubs
add
pusha
add
add
out
hlt
jl
cli
movsl
mov
addb
jns
inc
incl
add
xor
bound
mov
imul
clc
and
dec
jmp
cli
in
scas
addr16
fs
jbe
xor
jmp
cmp
hlt
mov
add
jg
les
cltd
shrl
and
leave
insb
lahf
sbb
fisttps
xor
mov
inc
add
add
mov
ja
cltd
das
int
mov
mov
push
addr16
pop
dec
imul
add
pop
and
bound
mov
popa
push
ja
add
add
and
mov
sbb
inc
add
test
inc
add
add
loopne
mov
add
fcomp
mov
in
inc
stc
movsl
push
dec
lods
jbe
lods
pop
pop
xor
mov
add
jne
bound
mov
xchg
int3
mov
insl
push
sbb
xchg
sub
icebp
mov
sub
mov
and
mov
addr16
sbb
mov
cmpsb
or
add
jmp
clc
out
xchg
lods
jle
call
add
jnp
iret
das
negb
mov
je
sbb
xchg
mov
xor
daa
cmp
add
popl
dec
fsubr
fs
fildl
imul
lds
mov
add
add
sahf
nop
add
or
repnz
popa
int3
stc
movsb
ret
pusha
add
inc
add
out
test
mov
add
cwtl
adc
mov
mov
push
add
mov
pop
test
add
inc
jno
add
add
enter
or
push
add
xor
mov
add
add
sti
lret
pusha
add
mov
jb
mov
imul
xchg
fimuls
lcall
gs
dec
iret
adc
mov
xor
mov
js
and
int
iret
ficomps
sarl
add
popl
add
rolb
mov
xchg
aad
dec
mov
aas
ss
and
dec
inc
add
jl
sub
dec
lcall
es
adc
mov
mov
mov
add
or
mov
add
mov
xchg
xlat
jl
hlt
or
movsl
dec
jmp
add
jno
aaa
inc
popf
push
adc
mov
adc
mov
inc
mov
mov
sub
mov
pop
and
and
mov
in
divb
mov
mov
dec
fsubrs
or
push
push
ret
or
push
add
mov
lea
push
das
sub
or
fists
add
xchg
out
add
and
mov
sub
jb
mov
cmp
push
cmp
outsb
loop
mov
outsb
jmp
lahf
and
mov
pop
sub
ja
test
pop
dec
mov
sub
je
stos
call
push
push
push
jb
mov
fstl
mov
rorl
icebp
clc
fdivs
mov
sub
add
mov
add
mov
mov
lret
rolb
into
pop
addl
pop
cmpsb
lods
xor
ljmp
dec
movsb
pop
stc
sahf
push
add
add
adc
mov
popf
imul
lahf
enter
pusha
add
insb
clc
jp
pop
xchg
jge
cmp
push
cmc
jne
enter
mov
ds
fsubrl
jbe
movsl
out
sub
mov
test
data16
xlat
sub
add
inc
jecxz
sub
rolb
sarl
call
jecxz
hlt
lret
lret
xor
fstpt
jno
adc
mov
mov
mov
fcompl
ljmp
jecxz
ror
xchg
cvtps2pi
inc
adc
sbb
add
es
test
inc
push
push
add
movsl
out
pop
inc
add
mov
jns
add
mov
dec
push
mul
mov
lcall
or
mov
scas
out
test
hlt
in
add
jl
outsl
pop
fwait
mov
mov
nop
add
cmpsb
pusha
add
popf
sbb
inc
xor
insb
pop
cmpsb
lods
jae
pop
jle
loope
jb
mov
out
sbb
mov
out
ret
inc
inc
pop
stos
dec
aas
leave
jnp
shrl
add
mov
jno
icebp
adc
mov
lods
iret
imul
iret
rolb
gs
pop
adc
xchg
nop
add
outsl
aad
add
lds
fldcw
mov
fstl
mov
jb
mov
jb
mov
fdivs
mov
add
insl
lret
mov
mov
test
lods
add
mov
add
dec
adc
jo
mov
fwait
and
mov
adc
mov
mov
mov
xchg
add
lods
pop
fimull
in
notl
add
mov
idivb
mov
pusha
add
lods
mov
mov
mov
adc
mov
xchg
add
mov
aad
loope
in
rcll
mov
enter
outsb
ljmp
mov
add
data16
sub
sahf
pop
sub
or
push
inc
add
cmp
jbe
dec
rolb
mov
lret
xchg
rolb
pop
ret
xchg
imul
imul
nop
add
push
mov
enter
mov
sub
jp
rolb
push
test
aad
mov
and
mov
or
sub
mov
std
in
into
mov
and
add
dec
rol
add
jne
add
pop
dec
sbb
leave
lea
mov
outsl
inc
dec
in
test
push
cltd
dec
mov
xor
mov
lretw
sahf
dec
sbb
cmp
in
cmc
es
jmp
in
adc
push
pop
or
iret
cmpsb
cli
mov
and
mov
loope
rolb
mov
sahf
cmpsb
or
rolb
push
rolb
in
xor
hlt
rcll
cmovb
mov
and
rorl
lds
scas
sub
lret
rolb
mov
inc
int
add
cs
jmp
ljmp
decb
test
and
sub
mov
mov
push
mov
cmpsl
negb
lret
scas
mov
mov
adc
add
rolb
mov
fwait
testl
jmp
fs
or
test
lcall
lods
cltd
mov
fisubrl
data16
je
add
rolb
and
mov
test
repz
mov
repnz
or
cmpsb
jmp
aas
aaa
in
lcall
mov
out
push
xchg
push
ja
mov
mov
add
mov
mov
add
dec
fimull
add
out
lcall
add
lods
xchg
mov
in
std
das
add
stos
or
cmp
pop
xlat
mov
inc
pop
shll
jle
add
and
cmp
gs
xor
mov
int3
sti
push
mov
icebp
mov
shll
mov
int
ds
inc
addb
cmp
nop
add
js
and
mov
sub
mov
adc
lcall
int3
push
xchg
mov
sub
add
dec
leave
cmp
pop
iret
adc
mov
mov
cmp
pop
popa
jmp
add
arpl
xor
mov
cs
mov
jo
mov
int
adc
mov
std
out
sti
mov
mov
int
faddl
push
sbb
inc
add
jae
pop
mov
push
or
add
test
rolb
pop
fstpl
and
mov
add
std
icebp
in
adc
test
ja
pop
pushf
dec
loopne
mov
add
out
cmpsb
mov
and
test
mov
or
add
cmp
mov
mov
cwtl
lock
jae
dec
addb
cmp
mov
mov
push
push
adc
add
jecxz
cmpsl
xchg
or
rolb
add
mov
jp
add
test
js
add
mov
lods
cwtl
addb
daa
roll
mov
or
cmpsl
mov
out
dec
dec
push
pushf
addb
jle
push
add
mov
in
mov
mov
mov
inc
or
scas
mov
add
mov
add
addb
mov
sbb
mov
cwtl
sti
push
add
addr16
add
mov
data16
stos
cmp
add
cmp
sti
xor
mov
xor
call
pop
cmp
add
es
push
adc
mov
push
mov
add
mov
add
mov
pop
pop
mov
addb
and
add
push
repnz
mov
add
test
adc
aam
add
push
scas
out
loop
mov
add
mov
or
or
pushf
xchg
xchg
stos
dec
cmp
add
scas
mov
xchg
mov
sub
ss
add
jnp
add
rolb
mov
jne
iret
dec
dec
mov
or
mov
cmp
add
add
mov
add
mov
movsb
into
jp
inc
add
rcrl
pop
mov
shll
xchg
mov
xor
imul
mov
mov
lods
bound
mov
addb
jne
push
inc
test
mov
add
sub
les
sbbl
mov
rcll
add
insl
pop
push
add
mov
add
xor
fwait
popf
push
addr16
pop
aam
rcll
dec
jne
or
std
mov
sub
pusha
add
scas
or
mov
mov
std
lods
hlt
xor
or
xchg
add
pop
out
out
dec
mov
jl
cmp
sbbl
add
mov
push
das
clc
mov
fwait
jmp
clc
fs
lahf
cli
xchg
test
gs
pop
mov
mov
sbb
cmp
popf
rolb
mov
mov
jg
add
mov
in
add
xchg
into
les
add
mov
mov
call
icebp
int
lret
loope
pop
pop
test
adcl
mov
xchg
les
jmp
add
mov
in
xchg
add
mov
mov
mov
or
add
add
mov
in
jne
mov
cmc
rolb
mov
fs
nop
add
roll
mov
add
add
mov
add
mov
loope
xchg
add
mov
mov
xor
add
stos
sub
add
mov
add
add
mov
mov
cmpsb
adc
mov
push
adc
add
sbb
fldt
in
int3
push
pop
insl
out
rolb
arpl
sub
mov
add
dec
mov
nop
add
les
insb
rcrl
sub
adc
insl
dec
cmp
add
jp
fwait
stc
pusha
add
mov
add
inc
shll
xchg
xchg
mov
out
insl
repnz
mov
add
add
dec
xor
jae
sub
xor
sbb
add
mov
mov
add
mov
add
push
or
xor
std
call
add
sub
pop
stc
insl
rolb
mov
cmp
add
mov
mov
xchg
popa
loop,pt
mov
jbe
add
scas
pushf
mov
cli
inc
outsl
xchg
inc
add
sti
ja
fcomi
add
mov
and
mov
jg
insb
jmp
and
pop
push
rdmsr
add
and
ss
add
cmpsb
push
dec
enter
jmp
mov
mov
push
dec
jmp
add
add
jno
cmpsb
push
fistpll
iret
les
jnp
fmull
push
fcmovu
adc
mov
push
cmp
dec
jb
mov
mov
loop
mov
mov
mov
sbb
push
add
test
add
mov
shr
xchg
leave
xor
xchg
mov
pop
fsin
arpl
add
pop
xorl
aam
mov
and
adc
data16
fcomp
repnz
xchg
jb
mov
jbe
and
addb
bound
mov
pop
adc
in
mov
mov
add
add
mov
mov
push
add
add
cmp
fwait
or
jecxz
rolb
mov
les
push
add
lret
pop
addr16
loopne
mov
std
outsb
jbe
add
movsb
add
cmovbe
mov
mov
mov
add
shll
mov
add
mov
push
mov
xor
pusha
add
lret
cmp
jg
adc
mov
sbb
lahf
jecxz
cmp
jmp
repnz
stos
mov
into
xchg
ss
mov
mov
add
add
insl
cs
xchg
mov
jmp
cmp
cmpsl
rcrl
xor
adc
std
addr16
jae
ljmp
fwait
rolb
mov
mov
mov
add
mov
mov
addb
clc
pop
cmpsb
movsb
mov
cld
pop
or
dec
jo
mov
mov
pop
fdivl
stos
jecxz
or
sbb
das
fisttpll
xchg
inc
push
cmp
cld
cltd
xchg
inc
jg
push
inc
jne
hlt
hlt
mov
mov
pop
aam
out
xchg
adc
daa
xchg
add
mov
add
mov
fucomip
jle
jno
add
add
mov
xchg
mov
add
mov
addr16
add
mov
