leave
mov
loopne
inc
movsl
loopne
adc
test
loopne
lea
loopne
pop
cmpsb
loopne
dec
movsb
loopne
aaa
test
loopne
in
test
mov
cmpsb
loopne
mov
loopne
dec
movsb
loopne
sub
loopne
dec
movsb
loopne
cmpsb
loopne
stos
mov
loopne
loopne
loopne
pop
cmpsb
loopne
in
cmpsl
loopne
pop
mov
loopne
pushf
movsl
loopne
or
mov
movsl
loopne
adc
loopne
jg
loopne
clc
cmpsl
loopne
shll
loopne
mov
loopne
inc
mov
loopne
cmpsb
loopne
jbe
loopne
dec
cmpsb
loopne
pusha
movsl
loopne
pop
movsb
loopne
ljmp
mov
mov
loopne
mov
test
loopne
jle
loopne
aas
cmpsb
loopne
jb
loopne
movsb
loopne
adc
mov
cmpsb
loopne
dec
mov
loopne
movsl
loopne
adc
loopne
lret
test
mov
cmpsb
loopne
int3
cmpsb
loopne
ret
mov
movsb
loopne
pop
mov
loopne
shlb
loopne
dec
cmpsl
loopne
jg
loopne
lahf
movsb
loopne
or
loopne
shll
loopne
push
movsb
loopne
and
loopne
popa
movsl
loopne
inc
movsb
loopne
ret
mov
loopne
jnp
loopne
push
movsl
loopne
jmp
loopne
xchg
cmpsl
loopne
fisubl
mov
mov
loopne
fwait
mov
loopne
cmp
loopne
xchg
loopne
movsl
loopne
mull
loopne
int
loopne
fsubs
loopne
mov
loopne
adc
loopne
mov
test
mov
mov
loopne
jbe
loopne
lock
loopne
add
mov
movsb
loopne
add
loopne
fldenv
loopne
pop
cmpsb
loopne
push
movsl
loopne
insb
movsb
loopne
lods
cmpsb
loopne
add
loopne
pop
cmpsl
loopne
push
test
mov
cmpsb
loopne
mov
loopne
stos
mov
loopne
add
loopne
loop
loopne
pop
test
mov
test
mov
movsl
loopne
and
loopne
sub
loopne
fwait
mov
loopne
lea
loopne
mov
mov
loopne
cmpsl
loopne
shll
loopne
movsb
loopne
out
loopne
shlb
loopne
push
movsl
loopne
dec
mov
loopne
and
cmpsl
loopne
and
loopne
or
loopne
shll
loopne
out
loopne
push
mov
loopne
sbb
loopne
repz
loopne
arpl
loopne
jne
loopne
shrl
mov
test
mov
cmpsl
loopne
mov
loopne
xor
mov
loopne
jge
loopne
add
loopne
jns
loopne
pushf
mov
loopne
xor
loopne
xchg
movsl
loopne
push
test
loopne
xchg
cmpsl
loopne
andl
mov
cmpsl
loopne
cmpsb
movsl
loopne
int3
cmpsl
loopne
test
cmpsl
loopne
mov
loopne
addr16
inc
mov
loopne
adc
loopne
fbld
mov
movsb
loopne
cmpsb
mov
loopne
pop
test
loopne
mov
mov
loopne
fldcw
loopne
add
loopne
stos
movsl
loopne
cmpsb
cmpsl
loopne
xlat
mov
loopne
test
loopne
in
mov
loopne
lds
loopne
clc
movsl
loopne
aam
loopne
mov
cmpsb
loopne
xor
loopne
iret
movsl
loopne
cmc
cmpsl
loopne
or
loopne
loopne
loopne
adc
loopne
mov
movsb
loopne
addr16
jl
loopne
adc
loopne
lds
loopne
sbb
loopne
pop
movsl
loopne
mov
test
mov
movsb
loopne
add
mov
movsb
loopne
mov
loopne
push
loopne
lods
cmpsl
loopne
andl
loopne
xor
loopne
mov
loopne
xor
loopne
popa
movsl
loopne
enter
cmp
loopne
xchg
mov
loopne
hlt
test
mov
test
loopne
inc
test
loopne
pusha
movsb
loopne
inc
movsl
loopne
mov
loopne
lcall
mov
mov
loopne
in
loopne
popa
movsb
loopne
stos
mov
loopne
daa
mov
loopne
enter
mov
test
loopne
mov
mov
loopne
insl
mov
loopne
imul
loopne
out
loopne
scas
test
mov
mov
loopne
andb
mov
test
mov
mov
loopne
test
loopne
sti
movsb
loopne
daa
cmpsb
loopne
sub
loopne
popa
movsl
loopne
dec
mov
loopne
pop
movsb
loopne
in
loopne
mov
loopne
addr16
pop
mov
loopne
inc
movsl
loopne
sub
loopne
xchg
loopne
dec
mov
loopne
insl
mov
loopne
shll
loopne
inc
cmpsb
loopne
xchg
cmpsb
loopne
sub
loopne
mov
loopne
add
mov
mov
loopne
lods
mov
loopne
outsb
cmpsb
loopne
or
loopne
fisubl
loopne
cmp
loopne
push
loopne
pop
test
loopne
jle
loopne
or
mov
loopne
loopne
mov
movsb
loopne
mov
loopne
fsubrs
loopne
adc
loopne
shrl
mov
cmpsl
loopne
mov
test
mov
cmpsb
loopne
mov
movsl
loopne
xchg
cmpsb
loopne
jno
loopne
and
loopne
and
loopne
xchg
cmpsl
loopne
inc
movsl
loopne
adc
loopne
clc
cmpsl
loopne
add
cmpsl
loopne
sub
loopne
xchg
mov
loopne
pop
mov
loopne
outsl
mov
loopne
les
mov
test
mov
test
mov
movsb
loopne
cli
test
mov
mov
loopne
je
loopne
push
movsl
loopne
mov
loopne
fsubrs
loopne
push
test
mov
mov
loopne
mov
cmpsb
loopne
arpl
loopne
movsb
loopne
sub
loopne
add
cmpsl
loopne
add
test
mov
cmpsb
loopne
xchg
movsl
loopne
aaa
mov
loopne
push
mov
loopne
inc
test
mov
cmpsb
loopne
fisubl
loopne
push
mov
loopne
xchg
loopne
jno
loopne
scas
mov
loopne
dec
movsb
loopne
cli
mov
loopne
adc
loopne
movsl
loopne
push
test
loopne
in
loopne
jno
loopne
shlb
loopne
cmpsb
cmpsb
loopne
test
loopne
add
loopne
mov
test
loopne
sbb
loopne
scas
mov
loopne
xchg
cmpsb
loopne
clc
movsl
loopne
insb
movsl
loopne
xchg
mov
loopne
shll
mov
mov
loopne
popa
movsl
loopne
jmp
loopne
push
test
loopne
mov
loopne
xlat
mov
loopne
mov
cmpsb
loopne
jge
loopne
mov
loopne
rep
loopne
movsl
loopne
aad
loopne
loop
loopne
xchg
cmpsb
loopne
popf
mov
loopne
inc
mov
loopne
sub
loopne
mov
loopne
cmpsl
mov
loopne
and
loopne
shll
loopne
nop
mov
loopne
imul
mov
movsb
loopne
inc
mov
loopne
fldenv
loopne
xor
loopne
sbb
loopne
imul
loopne
dec
mov
loopne
insb
mov
loopne
sub
loopne
or
loopne
xor
mov
loopne
je
loopne
mov
loopne
hlt
cmpsb
loopne
test
loopne
and
movsb
loopne
movsl
test
mov
mov
loopne
sbb
loopne
ljmp
mov
mov
loopne
hlt
mov
loopne
pop
mov
loopne
out
mov
loopne
xor
loopne
movsb
loopne
pushf
cmpsb
loopne
push
cmpsb
loopne
into
test
mov
test
mov
test
mov
movsl
loopne
mov
loopne
shlb
loopne
js
loopne
test
mov
mov
loopne
and
movsb
loopne
push
movsb
loopne
in
cmpsl
loopne
lds
loopne
push
mov
loopne
push
mov
loopne
mov
loopne
andb
mov
mov
loopne
arpl
loopne
loopne
loopne
stos
test
mov
movsb
loopne
inc
movsb
loopne
adc
loopne
mov
movsl
loopne
repnz
loopne
in
loopne
fisubl
mov
cmpsb
loopne
xchg
movsl
loopne
scas
test
mov
mov
loopne
shlb
loopne
push
loopne
pop
mov
loopne
pusha
mov
loopne
mov
cmpsl
loopne
lret
mov
loopne
scas
mov
loopne
adc
loopne
xor
loopne
loopne
shll
loopne
xchg
movsb
loopne
shll
loopne
xor
loopne
pop
mov
loopne
out
loopne
aad
loopne
or
loopne
into
mov
loopne
fsubs
mov
movsl
loopne
dec
mov
loopne
andb
mov
mov
loopne
je
loopne
mov
loopne
xchg
loopne
andb
mov
test
mov
cmpsl
loopne
scas
mov
loopne
mov
loopne
sbb
loopne
and
loopne
in
loopne
pop
cmpsl
loopne
loop
loopne
mov
movsl
loopne
dec
cmpsl
loopne
pop
mov
loopne
das
cmpsl
loopne
mull
loopne
mov
movsl
loopne
sub
loopne
subl
mov
cmpsb
loopne
std
mov
loopne
push
movsl
loopne
dec
test
loopne
pop
cmpsl
loopne
xchg
cmpsl
loopne
pop
cmpsb
loopne
sub
loopne
xor
loopne
cmpsb
mov
loopne
loop
loopne
shrl
loopne
cmpsb
loopne
mov
loopne
mov
mov
loopne
add
loopne
cmp
loopne
in
cmpsb
loopne
ljmp
loopne
out
cmpsl
loopne
shlb
mov
mov
loopne
leave
mov
loopne
movsb
loopne
xor
loopne
or
mov
loopne
ja
loopne
or
loopne
jno
loopne
pop
cmpsb
loopne
ss
loopne
aaa
movsl
loopne
int
loopne
outsb
movsb
loopne
shlb
loopne
repnz
loopne
push
loopne
cmpsb
loopne
lret
mov
cmpsl
loopne
dec
test
mov
movsb
loopne
andl
mov
movsb
loopne
ds
loopne
das
cmpsl
loopne
stos
test
mov
mov
loopne
ljmp
mov
cmpsl
loopne
sbb
mov
loopne
or
test
loopne
push
mov
loopne
jae
loopne
cmp
loopne
push
test
loopne
outsb
mov
loopne
lods
cmpsb
loopne
mov
loopne
lret
test
mov
mov
loopne
insb
mov
loopne
jno
loopne
inc
cmpsb
loopne
ja
loopne
or
loopne
add
loopne
push
cmpsb
loopne
push
cmpsl
loopne
stos
movsb
loopne
jp
loopne
shll
loopne
sbb
cmpsb
loopne
mov
loopne
insl
cmpsb
loopne
scas
movsb
loopne
cmp
loopne
xchg
test
mov
mov
loopne
xchg
mov
loopne
push
cmpsb
loopne
mov
mov
loopne
je
loopne
call
cmpsb
loopne
repnz
loopne
cmpsl
loopne
push
mov
loopne
add
loopne
add
loopne
ret
cmpsb
loopne
ret
mov
movsb
loopne
mov
loopne
cmp
mov
cmpsb
loopne
aas
cmpsl
loopne
push
movsl
loopne
jo
loopne
or
movsl
loopne
mov
mov
loopne
mov
loopne
dec
test
loopne
jnp
loopne
push
cmpsl
loopne
lods
cmpsl
loopne
iret
mov
loopne
cmp
loopne
int
loopne
cmp
loopne
add
loopne
sub
mov
loopne
push
cmpsl
loopne
in
cmpsl
loopne
dec
cmpsb
loopne
push
test
loopne
xor
loopne
push
test
mov
mov
loopne
pop
movsl
loopne
pop
movsl
loopne
test
mov
movsb
loopne
mov
mov
loopne
pop
cmpsb
loopne
stc
movsb
loopne
add
loopne
fisubs
mov
test
loopne
push
loopne
pop
mov
loopne
mov
loopne
nop
cmpsl
loopne
xor
movsb
loopne
inc
cmpsb
loopne
or
mov
loopne
sub
mov
mov
loopne
std
mov
loopne
cmpsl
movsb
loopne
dec
test
mov
cmpsl
loopne
dec
mov
loopne
andl
loopne
push
movsl
loopne
movsb
mov
loopne
inc
movsb
loopne
bound
loopne
or
loopne
cld
cmpsb
loopne
repnz
loopne
aam
loopne
cmpsl
loopne
cmpsw
loopne
loopne
mov
loopne
push
cmpsl
loopne
subl
mov
cmpsl
loopne
xchg
movsb
loopne
jecxz
loopne
pop
movsb
loopne
pop
movsl
loopne
enter
xchg
loopne
push
movsb
loopne
dec
cmpsl
loopne
mov
loopne
xchg
cmpsl
loopne
add
loopne
dec
movsl
loopne
daa
cmpsb
loopne
shrl
loopne
repnz
loopne
pop
cmpsl
loopne
adc
loopne
xchg
cmpsl
loopne
dec
mov
loopne
mov
movsl
loopne
imul
loopne
shlb
loopne
push
mov
loopne
and
loopne
inc
mov
loopne
dec
test
mov
cmpsl
loopne
ljmp
mov
movsb
loopne
jge
loopne
mov
loopne
push
mov
loopne
xchg
test
mov
mov
loopne
mov
test
mov
movsl
loopne
cltd
mov
loopne
or
mov
cmpsl
loopne
push
cmpsl
loopne
pop
mov
loopne
adc
loopne
mov
loopne
mov
test
mov
mov
loopne
adc
loopne
test
mov
mov
loopne
scas
cmpsb
loopne
jl
loopne
mov
cmpsb
loopne
ja
loopne
mov
mov
loopne
mov
loopne
jg
loopne
fisubs
loopne
pop
movsb
loopne
movsl
loopne
xchg
movsl
loopne
imull
loopne
frstor
loopne
dec
cmpsb
loopne
mov
cmpsl
loopne
das
movsb
loopne
sbb
loopne
fsubl
loopne
aad
loopne
and
loopne
jmp
movsl
loopne
insl
mov
loopne
pop
movsl
loopne
int3
movsb
loopne
shlb
mov
movsl
loopne
pop
cmpsl
loopne
cmp
loopne
push
cmpsb
loopne
push
test
mov
test
loopne
dec
mov
loopne
popa
movsl
loopne
bound
loopne
cli
mov
loopne
push
movsl
loopne
shlb
mov
mov
loopne
aaa
test
mov
cmpsl
loopne
dec
test
mov
mov
loopne
xor
loopne
lea
loopne
mov
test
mov
cmpsl
loopne
inc
test
mov
mov
loopne
mov
loopne
arpl
loopne
adc
loopne
std
cmpsl
loopne
cmpsl
mov
loopne
sub
loopne
fldt
loopne
pop
mov
loopne
das
cmpsb
loopne
xchg
cmpsl
loopne
jne
loopne
dec
cmpsb
loopne
push
cmpsb
loopne
int
loopne
sbb
mov
loopne
mov
loopne
out
mov
loopne
xor
loopne
stc
movsb
loopne
stos
test
mov
movsb
loopne
movsl
loopne
jo
loopne
mov
loopne
dec
cmpsl
loopne
fisubl
loopne
adc
loopne
lods
movsl
loopne
jnp
loopne
mov
movsl
loopne
jmp
movsb
loopne
push
movsb
loopne
jnp
loopne
mov
test
mov
mov
loopne
aas
mov
loopne
mov
cmpsl
loopne
fldt
loopne
and
mov
loopne
jbe
loopne
ss
loopne
dec
cmpsb
loopne
in
loopne
push
test
mov
mov
loopne
xor
loopne
out
loopne
imul
mov
cmpsl
loopne
mov
movsb
loopne
movsb
loopne
pop
mov
loopne
dec
mov
loopne
mov
loopne
test
movsl
loopne
hlt
mov
loopne
bound
mov
movsl
loopne
cmp
movsb
loopne
and
loopne
popf
mov
loopne
mov
mov
test
mov
test
mov
movsb
loopne
ljmp
mov
mov
loopne
push
cmpsl
loopne
subl
loopne
push
cmpsb
loopne
icebp
mov
loopne
and
loopne
imul
mov
mov
loopne
mov
movsb
loopne
inc
mov
loopne
inc
test
mov
mov
loopne
cmpsl
loopne
sub
test
loopne
cld
cmpsb
loopne
ja
loopne
mov
test
loopne
fsubs
loopne
cmc
mov
loopne
sbb
loopne
xor
loopne
xchg
mov
loopne
lcall
mov
mov
loopne
cmpsb
loopne
repz
loopne
and
test
loopne
push
movsb
loopne
fsubl
loopne
xchg
movsl
loopne
push
cmpsb
loopne
mov
mov
cmpsl
loopne
cwtl
cmpsb
loopne
mov
cmpsb
loopne
cld
mov
loopne
sub
loopne
mov
movsl
loopne
dec
movsb
loopne
aaa
movsl
loopne
imull
loopne
xchg
movsl
loopne
out
loopne
cmpsl
cmpsb
loopne
push
mov
loopne
movsl
cmpsl
loopne
or
loopne
jo
loopne
push
loopne
xor
loopne
pop
movsb
loopne
movsb
loopne
pop
cmpsl
loopne
fsubs
loopne
push
test
mov
movsb
loopne
push
movsb
loopne
loopne
arpl
loopne
adc
loopne
xchg
loopne
jle
loopne
jns
loopne
mov
test
loopne
jb
loopne
lahf
mov
loopne
jns
loopne
mov
loopne
js
loopne
outsl
mov
loopne
cld
mov
loopne
xchg
cmpsb
loopne
dec
cmpsb
loopne
and
mov
loopne
insl
mov
loopne
lcall
mov
test
loopne
fwait
mov
loopne
cmp
loopne
jl
loopne
sbb
loopne
jnp
loopne
mov
loopne
mov
loopne
inc
test
mov
test
mov
test
mov
cmpsb
loopne
insl
mov
loopne
push
test
loopne
fwait
mov
loopne
or
loopne
clc
cmpsl
loopne
mov
loopne
mov
test
mov
mov
loopne
push
mov
loopne
lahf
mov
loopne
andb
mov
cmpsl
loopne
xchg
mov
mov
loopne
lret
mov
mov
loopne
movsl
mov
loopne
test
loopne
shlb
loopne
sbb
mov
loopne
sbb
loopne
add
loopne
mov
movsl
loopne
fldenv
loopne
cld
cmpsl
loopne
xor
loopne
jg
loopne
jp
loopne
jmp
movsb
loopne
mov
test
loopne
and
loopne
sub
movsl
loopne
movsw
loopne
cmpsb
loopne
sbb
mov
movsl
loopne
sub
loopne
lods
movsl
loopne
ret
cmpsb
loopne
movsl
loopne
popf
cmpsb
loopne
xor
loopne
dec
mov
loopne
mov
cmpsb
loopne
out
loopne
addr16
mov
cmpsb
loopne
mov
test
mov
movsl
loopne
int
loopne
pushf
mov
loopne
xor
loopne
jl
loopne
in
movsl
loopne
sub
loopne
andl
mov
test
loopne
test
loopne
fisubs
loopne
xchg
mov
loopne
out
loopne
add
mov
test
mov
movsl
loopne
ret
mov
test
loopne
and
loopne
jg
loopne
jae
loopne
add
loopne
and
mov
test
mov
movsb
loopne
loop
loopne
les
loopne
jg
loopne
les
mov
cmpsl
loopne
jp
loopne
andl
mov
cmpsb
loopne
and
loopne
mov
loopne
jg
loopne
jae
loopne
push
movsl
loopne
mov
loopne
adc
loopne
daa
mov
loopne
pop
mov
loopne
cmp
loopne
cmpsl
mov
loopne
xchg
mov
loopne
cli
cmpsl
loopne
cmp
loopne
dec
cmpsl
loopne
fldt
loopne
test
loopne
mov
mov
loopne
xchg
loopne
movsb
movsl
loopne
xchg
cmpsl
loopne
mulb
loopne
mov
loopne
lcall
mov
movsb
loopne
shll
mov
cmpsl
loopne
loope
loopne
fldenv
mov
movsb
loopne
pop
movsb
loopne
jmp
loopne
test
loopne
or
mov
cmpsl
loopne
sub
loopne
dec
test
loopne
pop
movsb
loopne
xchg
mov
loopne
mov
loopne
add
loopne
mov
cmpsb
loopne
mov
loopne
cmpsb
loopne
sbb
loopne
lret
mov
mov
loopne
push
movsl
loopne
imulb
loopne
popf
mov
loopne
push
cmpsl
loopne
inc
test
mov
mov
loopne
mov
cmpsb
loopne
dec
movsb
loopne
fbld
xchg
mov
clc
adc
jp
mov
clc
cmpsb
clc
jmp
sub
xchg
imul
daa
clc
sub
clc
xor
add
call
add
jbe
clc
jl
lods
xlat
dec
cmp
add
out
aaa
xchg
test
cmp
clc
dec
in
sbb
clc
jns
add
cmc
mov
shlb
jo
add
add
add
or
jne
clc
clc
or
in
push
sti
fisttps
les
push
jb
push
mov
push
sub
lea
push
call
sub
es
push
mov
and
test
setne
nop
nop
loop
pop
lea
or
sub
xchg
not
xchg
ss
pop
add
movzbl
shr
push
or
and
push
mov
add
add
push
mov
push
push
call
push
call
leave
ret
mov
sub
mov
pushl
pop
sub
add
ret
test
nop
nop
nop
nop
nop
mov
push
push
je
mov
adc
add
ret
pop
jmp
jmp
mov
lea
push
pushl
nop
nop
nop
nop
ret
popa
add
cmp
add
and
add
adc
add
add
sti
fnstsw
add
add
add
fistps
popf
cmp
clc
stc
add
add
jo
add
and
add
add
add
fisttpll
clc
pop
clc
xor
add
ss
ret
sub
and
add
loop
cld
jmp
sbb
push
add
dec
lods
inc
clc
sbb
mov
push
negb
mov
clc
push
clc
shl
mov
or
clc
mov
or
scas
enter
clc
jno
add
clc
dec
pop
push
add
mov
ss
ret
jg
outsl
jle
clc
jle
in
pop
scas
lret
clc
sub
ss
aad
cmp
sarl
mov
add
cs
clc
jne
insl
pop
jno
add
fst
cmp
add
mov
sub
add
push
shl
in
mov
add
out
mov
mov
mov
dec
ret
clc
sub
add
add
pop
mov
cmpsl
out
add
push
filds
add
mov
pop
mulps
add
clc
ficomps
clc
out
sti
out
in
push
add
inc
add
sub
jecxz
mov
dec
out
lock
add
mov
sahf
iret
xabort
xlat
add
add
jg
jnp
mov
clc
push
pop
or
add
mov
lret
clc
xor
clc
jl
and
add
loopne
cmp
stos
out
push
add
mov
jmp
ja
add
into
add
add
push
push
cld
jmp
das
ret
inc
clc
fsubrp
mov
xor
clc
push
mov
sti
push
or
push
jmp
outsl
dec
test
cmp
push
pop
xabort
push
cld
jmp
or
pusha
add
out
pop
sub
clc
mov
fcmovne
sar
mov
cld
jmp
sub
xchg
lret
fcomi
loop
gs
pushf
sahf
xabort
movsl
clc
push
dec
xchg
jae
add
jg
mov
sbb
jmp
jg
sub
push
add
ja
repz
insb
inc
insb
insb
cld
jmp
add
pushf
fs
xor
es
sub
clc
or
clc
add
or
clc
xchg
cmp
add
mov
clc
out
in
cmpsl
clc
mov
inc
add
xchg
xchg
mov
mov
add
vsqrtps
add
loopne
mov
ja
add
xchg
ljmp
loope
iret
int3
es
mov
add
cmp
call
cld
jmp
mov
add
inc
clc
dec
jg
add
cmp
ds
mov
fs
fwait
push
add
ja
test
fadds
add
mov
jo
add
loope
or
mov
xchg
dec
nop
inc
add
arpl
add
clc
sub
ret
test
jp
gs
jo
add
imul
or
jp
and
pop
xchg
push
clc
mov
xchg
mov
mov
inc
clc
inc
clc
xor
add
stos
dec
mov
lret
push
mov
clc
stos
push
add
push
aad
sub
fcoms
cld
jmp
or
xchg
sbb
jmp
add
mov
jmp
scas
and
stos
loop
ds
push
mov
in
or
lcall
clc
and
add
xor
add
lea
cmpsl
clc
flds
add
add
cli
or
inc
clc
jb,pn
add
jae
add
dec
ss
ret
test
add
clc
xchg
in
ds
add
dec
jne
xor
add
shlb
adc
add
mov
clc
mov
fsubrp
sbb
jmp
negl
test
imul
clc
jge
clc
xor
add
add
jno
add
mov
mov
add
jmp
push
imul
jl
fs
sahf
imulb
add
clc
push
add
add
fistpll
mov
inc
clc
sti
repz
clc
cmp
sbb
add
and
add
arpl
add
int3
sub
clc
jp
mov
and
add
pop
clc
inc
add
sub
clc
mov
imul
clc
push
insb
jle
clc
pop
ficoml
add
push
call
cld
jmp
dec
test
decl
cld
jmp
xor
das
movsl
clc
lea
insl
adc
pop
add
rorl
add
and
add
add
mov
add
movsb
clc
popa
add
lret
mov
add
out
mov
clc
mov
cmp
add
out
mov
push
imul
add
imul
clc
stos
clc
xchg
clc
pop
aam
inc
clc
movsl
clc
int3
jae
add
add
clc
adc
add
clc
xlat
inc
clc
cmpsl
clc
lret
mov
add
add
clc
aam
clc
nop
cmp
push
xor
cld
jmp
cmp
lret
or
lcall
clc
xbegin
add
scas
notb
add
add
inc
clc
pop
insb
xor
add
add
mov
adc
add
fists
push
stos
mov
xor
add
and
add
clc
inc
clc
sub
dec
jb
add
add
mov
jmp
and
mov
push
loop
sar
add
dec
lahf
jmp
add
add
cwtl
and
mov
sbb
imul
clc
mov
scas
cmp
add
xor
add
add
cmp
clc
movsl
clc
cld
icebp
jo
add
clc
movsb
clc
jge
sahf
cli
pop
mov
sar
push
push
jne
cld
jmp
nop
mov
pop
fldl
add
clc
in
fistps
pop
adc
add
clc
aad
sbb
mov
in
cmpsb
clc
mov
xchg
and
add
mov
jge
pop
clc
mov
push
ret
clc
repz
test
cli
lahf
add
add
jmp
cld
jmp
lods
aaa
add
adc
add
cmp
clc
or
mul
clc
fnstenv
fs
sarb
jle
add
es
xchg
and
clc
mov
add
add
cmp
sar
dec
sbb
cmpsl
add
add
inc
add
lods
insb
jbe,pt
or
and
add
sti
cs
mov
add
cmp
add
push
cmp
movsb
clc
mov
add
mov
clc
fisttpl
divb
add
clc
mov
stos
add
add
fwait
ret
add
loopne
pop
mov
push
add
adc
add
mov
add
or
inc
sub
mov
mov
add
add
clc
jp
and
add
clc
mov
sub
clc
mov
or
jmp
lods
pop
sub
inc
cld
jmp
sub
or
test
sub
fimull
add
fs
pushf
push
les
cld
jmp
inc
popa
mov
push
ret
clc
push
shll
add
adc
add
clc
jno
add
test
pop
loope
movsl
clc
and
add
dec
xor
add
add
sub
add
call
add
lea
xor
cmp
pop
xor
clc
add
add
and
sar
clc
adc
xor
add
clc
cmpsl
clc
movsl
clc
xchg
testb
bound
add
cmp
add
push
add
repnz
cld
jmp
aaa
sub
push
mov
loop
and
add
add
pop
clc
test
dec
shlb
add
mov
mov
add
push
add
pusha
add
idivb
or
sub
or
pop
sub
add
lcall
clc
push
add
push
mov
scas
sub
stc
sbb
cli
notl
mov
movsb
clc
int3
fimuls
aas
mov
pop
lahf
push
clc
in
cmpsb
clc
adc
add
aad
clc
fisubrs
jae
add
test
dec
incl
jmp
add
sub
insb
sbb
xchg
scas
fmull
clc
cmpsb
clc
fstl
add
cli
sbb
pop
or
lret
sbb
jbe
and
sar
clc
jb
add
jge
clc
out
cmp
sbb
pop
pop
clc
movsl
clc
mov
clc
dec
scas
jp
clc
bound
add
gs
sub
add
clc
rcr
gs
sbb
sbb
add
add
add
jnp
je
imul
clc
lret
movsb
clc
loopne
mov
or
lods
dec
cld
int
clc
push
add
inc
clc
out
scas
mov
pusha
cld
jmp
popa
nop
sub
push
dec
jecxz
xchg
inc
add
add
adc
xor
add
mov
xor
add
add
repz
popa
add
iret
jo
add
iret
fs
fs
out
xor
add
cld
mov
dec
mov
add
cld
jmp
sub
add
push
add
test
add
dec
cmp
jmp
sub
clc
sar
data16
adc
clc
add
add
clc
xor
xor
add
add
mov
mov
fs
ss
clc
dec
fdivrl
clc
cmp
cmpsb
clc
in
add
add
popf
mov
cld
jmp
pop
aaa
jno
stc
pop
cld
fwait
mov
aad
push
cld
jmp
push
add
add
jp
dec
pop
xor
add
cli
mov
rcll
add
adc
add
clc
test
in
rsqrtss
add
clc
mov
add
fs
aaa
out
loope
arpl
add
add
ljmp
std
lahf
lcall
mov
jle
out
inc
add
popa
add
lahf
icebp
xchg
mov
clc
loope
iret
popa
add
fistpl
mov
cld
jmp
subb
mov
test
nop
jnp
mov
and
add
and
add
cmp
insl
lock
out
xor
add
cmp
push
dec
mov
pushf
xchg
add
lods
or
nop
jp
lock
add
jmp
or
cltd
and
cld
jmp
sub
xor
add
or
add
inc
clc
adc
jmp
or
add
clc
fistps
push
pop
mov
aam
add
or
jecxz
aaa
push
clc
xabort
arpl
add
push
addr16
fisttps
adc
add
or
ret
cli
clc
lock
mov
mov
loope
push
das
inc
add
xor
add
hlt
xchg
in
cmp
sbb
enter
mov
cwtl
adc
mov
add
add
add
clc
aad
mov
add
mov
pop
jb
add
scas
push
jo
add
and
add
jno
add
clc
sbb
jnp
clc
push
mov
add
arpl
add
or
add
mov
add
lahf
popa
add
int
mov
xlat
add
add
pusha
add
jb
add
add
add
add
xchg
adc
add
add
pushf
xor
add
gs
mov
add
pop
clc
sbb
lods
ss
ret
sub
sub
add
lahf
cmpsb
clc
xchg
and
add
cmp
clc
mov
bound
add
clc
test
clc
adc
or
jne
add
push
add
out
push
and
add
add
clc
add
add
imul
mov
add
addr16
jg
xbegin
xor
add
cwtl
cmovns
clc
cltd
or
jmp
dec
adc
nop
imul
adc
clc
xchg
outsl
adc
cmp
add
and
add
clc
or
clc
nop
pop
inc
clc
mov
clc
cmp
clc
cmp
std
push
add
scas
mov
clc
adc
add
out
and
add
add
inc
add
add
add
sbb
sbb
xor
add
clc
mov
push
cmc
push
and
add
clc
out
xor
add
aad
clc
cs
mov
jp
jbe
cld
jmp
or
clc
loop
in
sub
add
add
push
add
mov
sub
clc
sub
clc
and
add
jmp
add
loop
lret
fcomps
clc
idivl
jmp
subb
sub
clc
cmp
add
icebp
adc
negb
inc
add
ret
clc
jno
add
clc
and
add
mov
clc
mov
clc
fadd
clc
imul
push
add
mov
je
cld
or
arpl
add
mov
add
adc
mov
lods
xchg
xor
add
and
add
fisttps
adc
add
add
mov
cmp
mov
and
add
and
adc
add
add
mov
add
dec
into
or
xchg
clc
mov
add
xchg
loopne
xor
mov
xchg
mov
mov
clc
push
add
add
pop
sbb
push
mov
cld
jmp
and
ja
sbb
clc
jg
clc
mov
data16
push
clc
rcll
add
sub
add
xchg
mov
clc
ficomps
clc
pop
jg
clc
jns
clc
outsl
mov
push
add
push
rep
cld
jmp
test
add
ljmp
or
clc
jnp
test
stc
clc
stc
inc
add
xlat
imul
clc
cltd
fdivs
add
mov
clc
xor
add
inc
clc
lret
cmp
cmpsb
clc
das
pop
fdivs
add
sbb
movsl
cld
jmp
sub
sub
and
add
inc
clc
lret
clc
mov
xchg
mov
call
clc
mov
mov
mov
clc
loopne
sub
stos
mov
push
enter
fidivrs
clc
mov
add
in
pop
sbb
add
ljmp
mov
add
mov
fnstenv
add
mov
pop
ss
ret
es
addb
es
lret
out
mov
es
pop
movsb
clc
idivl
add
sub
add
xchg
nop
jne
adc
add
clc
in
sub
ucomiss
add
test
insb
test
pusha
add
cld
aad
clc
xor
add
out
cwtl
outsl
and
add
int
pop
jae
jmp
dec
cmp
sar
add
jmp
cs
lret
mov
stos
popa
add
idiv
push
xchg
test
out
in
pop
aad
clc
push
add
imul
insl
cmp
int3
clc
bswap
jnp
dec
mov
adc
jmp
sub
xchg
pop
repz
into
mov
std
outsl
scas
lock
fwait
rorl
cmp
add
int3
jo
add
clc
outsl
fistpl
je
cld
jmp
ljmp
in
or
jnp
pop
adc
in
sbb
repz
jmp
adc
add
push
loopne
or
test
in
cmp
clc
ds
inc
add
pop
push
or
sub
daa
clc
cld
dec
or
movsb
clc
jmp
push
pop
outsl
push
add
mov
xchg
push
xchg
mov
fildll
int3
dec
mov
add
clc
jmp
add
vcvtps2pd
fmuls
ds
mov
cld
jmp
sub
cwtl
aam
add
out
xor
add
into
push
dec
nop
sub
dec
scas
fs
inc
clc
xlat
outsl
add
add
add
clc
ds
lods
sub
mov
add
daa
clc
pop
in
test
loopne
mov
test
xchg
pop
test
or
add
cld
lods
dec
mov
add
into
sub
push
add
pop
mov
dec
jg
fwait
sbb
add
sub
mov
mov
sub
stos
push
clc
into
fcoml
and
add
jmp
imul
push
add
add
clc
lahf
mov
inc
add
jp
jecxz
jmp
ret
lcall
shll
clc
dec
jg
cmp
clc
lea
repnz
lock
inc
clc
sbb
clc
dec
test
mov
out
loopne
dec
enter
cmpsl
clc
inc
clc
fs
dec
push
clc
mov
movsl
clc
sbb
add
cmpsb
xor
mov
add
add
add
clc
outsb
xor
add
clc
xor
add
add
or
jecxz
fcompl
mov
je
clc
mov
clc
xbegin
mov
clc
insb
jmp
clc
sbb
aam
and
add
add
mov
sar
movsb
clc
movsl
clc
jno
add
cmc
jle
mov
add
hlt
lret
add
push
test
or
repnz
mov
es
pop
popf
sahf
xlat
loope
and
add
pop
clc
xchg
aas
sti
lods
pop
fldcw
push
pop
mov
add
cld
jmp
jg
outsb
lock
sub
clc
jp
add
and
add
mov
dec
xchg
gs
pop
in
outsl
lock
sbb
push
ret
aas
sub
xor
add
xchg
repnz
clc
push
add
bound
add
add
das
inc
add
aam
inc
add
push
add
lcall
movsb
clc
mov
clc
es
cmp
clc
aas
and
add
add
daa
clc
lcall
clc
and
add
aaa
dec
enter
add
inc
add
cli
sbb
sub
sar
mov
and
cld
jno
add
and
fs
cltd
xchg
cltd
leave
xchg
mov
sub
and
add
add
push
add
mov
clc
jne
test
xchg
cmp
xor
hlt
jo
add
clc
jge
add
jg
add
pop
cmp
sub
mov
push
pop
mov
mov
clc
rcr
push
clc
movsl
clc
js
popf
adc
add
clc
sbb
pop
clc
sahf
stos
jl
mov
add
add
cmpsl
clc
inc
add
sbb
fcoms
jo
add
test
clc
aaa
xchg
loope
test
inc
clc
jns
clc
mov
mov
clc
xchg
or
inc
clc
jno
add
sub
mov
rcrl
sar
add
or
cwtl
mov
dec
and
add
clc
add
add
xor
add
clc
mov
out
mov
ss
xchg
push
jmp
sub
add
xchg
sti
scas
stos
lock
jmp
aad
clc
sar
jo
add
xchg
and
add
mov
cs
int3
dec
hlt
insb
jge
add
imul
test
out
cltd
jae
add
adc
add
insb
dec
xor
add
sbb
clc
lods
push
clc
dec
push
mov
xor
arpl
add
stos
mov
pushf
stc
cmp
fcomps
mov
incl
or
test
jmp
xor
xchg
push
sar
or
pusha
add
adc
add
add
add
clc
push
add
lods
aas
jne
xor
add
add
mov
inc
add
es
insb
mov
cmp
clc
jb
add
xlat
xor
add
mov
and
add
clc
in
outsb
xor
add
sar
ud1
cld
jmp
cwtl
xor
das
or
dec
out
xor
and
jmp
clc
mov
cmpsl
clc
sub
add
xor
add
push
add
pusha
add
adc
add
pop
dec
fsts
sti
mov
clc
dec
inc
add
jns
outsl
mov
hlt
movsl
clc
and
add
adc
add
push
add
jmp
jmp
add
mov
jne
adc
add
dec
iret
dec
cld
jmp
inc
outsl
cmp
aam
add
pop
jg
clc
dec
jp
clc
outsb
or
mov
clc
bound
add
popf
jns
cmp
clc
lea
jmp
lea
mov
jmp
dec
es
jp
add
cli
es
lcall
mov
inc
add
add
add
rclb
shrb
jmp
sahf
cmpsb
or
jmp
rcrl
clc
data16
sub
sahf
mov
popa
add
fimull
clc
jle
inc
clc
bound
add
popf
or
xchg
mov
jmp
nop
add
add
or
mov
cld
jmp
cmp
xchg
xchg
lahf
push
adc
add
add
dec
out
xchg
shll
pop
inc
clc
cli
push
jmp
cld
jmp
xchg
jb
add
push
mov
cld
jmp
push
sub
nop
pop
popf
push
out
test
dec
cmp
pop
lea
add
sbb
cld
jmp
xchg
es
aas
mov
pop
add
add
out
popa
add
lcall
imul
lcall
aad
xor
add
push
ret
adcb
clc
jge
test
lea
clc
outsb
addr16
mov
mov
cld
jmp
or
cltd
and
add
loopne
xor
add
sar
adc
add
lret
mov
shll
cmp
cmc
inc
clc
mov
jb
add
clc
imul
mov
ss
ret
scas
jg
cmp
gs
add
add
mov
test
popf
inc
clc
loop
arpl
add
jl
add
adc
add
add
mov
mov
incl
lea
ret
ja
test
mov
ljmp
pusha
add
push
xchg
int
ret
clc
imul
jg
clc
mov
test
add
outsb
mov
clc
decl
jo
add
dec
sub
clc
aad
add
test
mov
add
sub
clc
mov
pop
clc
fwait
test
ja
add
add
clc
dec
cmp
or
clc
fcomps
clc
pop
xchg
addr16
push
clc
clc
popa
add
adc
add
clc
sub
fidivs
or
mov
or
add
and
add
outsl
lods
mov
clc
xchg
pop
cmpsb
clc
pop
cmp
insb
cmp
jmp
mov
pop
push
dec
push
add
sub
add
negb
je
add
add
add
das
add
add
lret
clc
aas
pop
filds
add
push
add
ljmp
mov
push
cld
jmp
push
push
and
sbb
cmp
clc
inc
clc
xchg
xchg
cmp
add
push
stos
out
int
clc
dec
cmp
cmp
mov
push
add
cld
jmp
sub
xor
jno
add
clc
push
add
sub
pusha
add
rorl
add
icebp
dec
pop
sarb
and
add
add
add
adc
cmp
inc
clc
cmpsl
clc
push
add
push
xor
clc
mov
add
cmp
mov
clc
or
sahf
jle
clc
loopne
push
add
bswap
fcompl
add
out
into
aaa
xor
xbegin
out
xadd
push
clc
mov
adc
gs
jb
add
add
jbe
cld
jmp
aas
sbb
add
aad
push
lods
cld
jmp
sub
lods
sbb
add
decb
clc
mov
add
movsl
clc
mov
lcall
jmp
insb
cwtl
add
fldenv
add
or
add
shlb
add
inc
add
mov
add
fmull
adc
add
add
das
xchg
std
mov
mov
clc
cmp
add
decl
adc
pop
sub
lret
test
sbb
sub
add
clc
mov
add
dec
xor
add
out
cmp
jmp
sub
sub
xchg
cmp
clc
inc
add
cmp
cmp
mov
add
add
imul
sar
or
clc
add
add
mov
cmp
add
idivb
sbb
dec
jo
add
fwait
cmp
sbb
sar
jmp
cmpsb
push
je
jno
add
add
mov
clc
mov
clc
insl
fistpl
mov
add
sub
push
push
add
cld
jmp
call
push
insl
shll
clc
add
add
pop
cld
jmp
jge
push
jg
add
fs
xchg
ja
movsl
clc
jmp
lahf
mov
clc
nop
data16
push
pop
cld
jmp
jg
jp
sub
lahf
adc
add
mov
clc
sub
lret
xchg
push
push
mov
clc
adc
add
nop
clc
pushf
popa
add
fmull
pop
in
adc
add
clc
ds
daa
clc
mov
out
insb
addr16
cwtl
jp
adc
add
add
pushf
mov
gs
dec
and
add
sbb
push
sti
fs
sar
clc
sbb
mov
and
mov
and
dec
xor
clc
out
insb
rorb
jg
in
mov
pop
push
clc
jge
add
call
in
fbstp
cmp
aaa
jne
add
mov
jmp
data16
push
vmovhps
inc
clc
into
fistpll
mov
hlt
add
add
mov
fistpll
lret
sbb
or
add
and
add
sar
clc
std
lea
sub
test
clc
sub
add
clc
lret
mov
add
mov
push
sar
cltd
jmp
add
mov
mov
add
adc
sub
movsb
clc
cwtl
test
stos
adc
push
ss
ret
xchg
insb
sub
jl
add
pop
xor
outsb
fcomp
inc
add
movsb
clc
std
inc
clc
and
lcall
aaa
add
int3
mov
cwtl
mov
add
cmp
inc
clc
xor
add
add
xor
add
clc
int
clc
mov
mov
test
jp
clc
jne
clc
mov
mov
add
add
dec
sar
clc
pop
dec
test
adc
add
clc
adc
add
clc
push
into
sub
cmpsb
clc
adc
add
cs
cld
jmp
popa
xchg
sub
loopne
mov
clc
scas
jno
add
clc
call
loope
fidivrl
clc
inc
add
decl
jmp
adcb
sub
pop
xor
add
clc
mov
mov
clc
push
xor
add
sbb
in
test
movl
data16
and
add
xchg
movsb
clc
std
jge
jb
add
add
notl
add
cmp
mov
push
out
cltd
add
add
in
lcall
ret
clc
aad
push
mov
mull
push
add
outsb
add
add
jbe
popf
in
push
add
cmc
arpl
add
pop
or
clc
and
add
xabort
jp
dec
push
push
push
cld
jmp
cmp
inc
clc
push
jmp
scas
or
clc
scas
call
push
add
gs
cmp
clc
push
add
adc
mov
imul
loope
addr16
mov
ret
jecxz
xor
add
pop
popa
add
push
add
cld
jmp
cmp
cmpsb
clc
cld
xchg
cmp
jbe
pop
cmpsb
clc
std
jle
ljmp
xchg
add
jmp
dec
add
add
clc
rcll
add
mov
adc
add
add
outsl
cmpsb
clc
ret
pushf
fisubl
cmp
mov
clc
stc
rcrb
cmp
push
add
aam
xchg
repz
ss
loop
sbb
cltd
cli
fs
test
imul
add
scas
dec
lods
sub
push
add
ja
and
test
push
add
lcall
bound
add
notl
add
inc
clc
mov
bound
add
and
add
ret
clc
cmp
int3
int3
adc
add
add
add
adc
push
cwtl
push
add
jge
cmp
and
fisttpll
sbb
lahf
add
add
add
mov
mov
fcoms
add
jnp
shll
xbegin
jae
add
pusha
add
mov
add
mov
jne
adc
add
clc
mov
clc
mov
mov
add
stc
jnp
mov
clc
mov
mov
out
add
add
hlt
xor
add
add
mov
pop
jle
jnp
and
adc
clc
cmp
movsl
clc
adc
add
clc
cmp
je
mov
xor
add
cmpsl
clc
pusha
add
sbb
mov
addr16
int
xor
add
clc
loope
xchg
add
cmp
add
cmp
sar
jl
push
jns
clc
pop
cmpsb
clc
imul
jl
xbegin
sub
xchg
jl
push
cld
jmp
cwtl
and
add
out
sbb
add
jae
add
mov
mov
push
dec
lea
clc
out
inc
add
mov
ja
shr
cld
jmp
aaa
popa
sahf
cmc
inc
add
iret
negb
shl
arpl
add
xabort
out
push
or
push
add
ret
add
test
pop
lock
add
cmp
pop
xbegin
add
add
push
daa
clc
mul
clc
mov
add
ds
loop
stos
pop
dec
pop
mov
xor
clc
out
movsl
clc
inc
clc
xabort
pop
sbb
xchg
dec
fiaddl
shlb
je
clc
push
call
cld
jmp
or
add
dec
mov
clc
cmp
add
cwtl
mov
push
cld
jmp
pop
add
cmp
arpl
add
dec
das
repz
clc
sub
pusha
add
cvtdq2ps
clc
jnp
jne
and
add
add
mov
clc
sub
popa
add
js
adc
add
clc
sub
clc
stc
mov
push
xor
add
test
hlt
shlb
add
xabort
cmp
add
clc
loope
imul
xor
add
out
std
stos
into
and
add
lret
xchg
fwait
rcll
js
inc
add
pop
clc
mov
cmp
clc
aaa
repz
fimull
mov
jecxz
mov
xor
clc
cmp
add
jb
add
popf
sar
test
mov
add
inc
clc
js
icebp
sbb
push
add
es
jnp
clc
jmp
xor
add
add
clc
daa
clc
cmpsb
clc
mov
push
add
add
add
cmp
fildl
add
call
add
out
push
cmp
cmp
std
cld
dec
clc
clc
dec
or
push
xchg
out
fs
repz
clc
jno
add
sub
add
pop
dec
ja
push
add
aas
outsb
cmc
push
fwait
add
add
dec
sahf
vcmpeqps
add
push
mov
clc
xor
add
clc
cmpsl
clc
cwtl
push
fwait
daa
clc
or
add
leave
sub
jmp
add
add
das
xchg
popa
add
xchg
rcr
mov
mov
clc
jno
add
sbb
imul
pusha
add
xchg
jp
mov
xbegin
shlb
add
out
sub
cmc
test
inc
add
mov
add
xchg
mov
loope
add
add
aas
push
add
popa
add
pop
imul
bound
add
clc
scas
insb
iret
cwtl
clc
sbb
mov
cld
jmp
sub
popf
add
cltd
ds
clc
fadd
clc
test
add
add
jmp
push
xchg
aas
inc
add
inc
add
frstor
add
add
sub
inc
clc
cli
cmpsl
clc
addr16
ja
dec
dec
icebp
push
bound
add
cmpw
cld
jmp
test
jno
add
clc
and
add
test
xor
aam
clc
or
clc
add
aas
xor
add
mov
clc
aam
add
dec
jns
add
lods
jbe
ja
clc
inc
add
mov
clc
adc
dec
mov
fildll
ret
scas
push
lret
sbb
dec
cmp
jmp
mov
lret
xchg
cmp
imul
fisttps
enter
clc
mov
fstpl
add
jae
add
add
sub
pop
inc
clc
jo
add
cltd
xor
cmc
fldenv
xchg
ljmp
bnd
cmp
inc
clc
push
add
add
data16
std
call
ja
pusha
add
xor
add
add
clc
cld
and
add
jmp
add
into
mov
popa
sub
xor
sub
or
add
cld
jmp
pop
sbb
lods
cvtpi2ps
and
add
std
jle
xchg
push
clc
xchg
add
daa
clc
or
add
jnp
jo
add
mov
cld
jmp
sahf
jp
jnp
add
add
add
pop
adc
jge
and
add
lods
mov
and
add
add
mov
jns
or
add
ret
clc
fdivrs
clc
mov
add
jmp
lea
xor
add
pop
insl
es
dec
adc
add
clc
cmp
pop
cld
jmp
lea
pop
sub
sti
xchg
lods
dec
jbe
add
and
lcall
pop
sahf
sbb
cmpsb
clc
leave
pop
sar
scas
jmp
push
add
cld
jmp
fnstcw
jmp
xor
std
or
clc
mov
in
ficomps
add
sbb
clc
push
add
test
add
gs
imul
dec
and
cmp
stos
adc
add
add
scas
repnz
call
xor
add
clc
xchg
pop
pusha
add
loop
mov
test
add
fisubrs
std
or
mov
dec
test
adc
clc
cld
fistl
dec
popa
add
je
sub
add
sahf
sar
clc
sar
inc
add
cmp
add
add
add
lea
loopne
mov
push
push
add
sbb
push
ss
ret
or
scas
mov
add
in
lea
fucomi
mov
add
push
add
adc
add
clc
adc
add
mov
je
add
or
jbe
add
bound
add
add
push
fldenv
mov
add
in
sar
or
clc
sti
or
mov
add
clc
pop
add
add
and
add
add
pusha
add
dec
imul
clc
icebp
xchg
xchg
dec
push
cmp
cld
jmp
sub
sub
es
lcall
mov
clc
mov
push
add
mov
xchg
outsb
insb
outsb
test
dec
sub
jle
jp
clc
jg
imul
or
clc
ror
xchg
mov
add
imul
sbb
push
clc
outsl
sar
clc
hlt
idivb
fnstsw
xchg
xchg
dec
cmp
jle
mov
jp
push
data16
mov
cltd
sub
inc
clc
inc
add
or
shlb
push
add
pushf
and
add
clc
es
dec
mov
mov
add
add
add
imul
push
dec
out
mov
jmp
stos
outsl
enter
add
mov
pop
out
loopne
mov
sbb
add
jne
mov
mov
jns
in
jge
dec
push
lcall
lea
pop
xchg
fistl
in
fcompl
and
add
std
out
adc
add
add
jmp
cld
jmp
push
sahf
enter
flds
clc
icebp
mov
lret
mov
adc
add
cmpsb
clc
add
mov
xlat
and
add
pop
decl
lods
jle
add
cmpsb
std
je
jb
add
popa
add
jo
add
clc
repnz
add
xchg
cs
imul
sub
fdivrl
out
xor
add
cwtl
in
inc
add
pop
xchg
adc
add
test
inc
clc
cs
sub
ret
clc
popa
add
cltd
iret
mov
pop
decb
fbld
add
sub
add
sub
clc
fs
call
xor
add
mov
jge
add
ret
clc
push
pop
xchg
ror
jnp
fucomi
lock
rcrl
mov
in
inc
clc
sti
pop
inc
add
je
clc
cmc
insb
push
add
push
js
popf
mov
sbb
cld
aad
ljmp
gs
movsl
clc
sub
lar
add
mov
cs
push
cmpsl
clc
mov
add
add
add
or
fisttps
add
inc
add
xor
add
xchg
pop
pushf
mov
sbb
add
lahf
add
add
jmp
mov
cwtl
js
clc
xchg
stos
pop
dec
ljmp
add
sbb
inc
clc
int
clc
pop
sti
dec
call
adc
inc
add
jne
clc
enter
mov
cld
jmp
dec
pop
mov
clc
pop
ret
cmp
clc
nop
pop
xchg
mov
push
add
scas
mov
jecxz
xchg
clc
cmpsl
clc
fisttpl
or
add
clc
push
clc
push
add
xchg
or
clc
xchg
cmp
out
mov
out
aam
sub
clc
xlat
mov
inc
clc
cmpsl
clc
xchg
fidivrs
add
clc
inc
add
iret
xchg
pushf
out
icebp
loopne
mov
or
shr
cld
jmp
jge
je
std
mov
clc
mov
mull
add
div
rcll
add
enter
add
je
add
push
clc
dec
push
or
add
dec
or
clc
enter
hlt
push
add
cld
jmp
mov
popf
lods
loopne
out
mov
clc
pop
icebp
call
adc
add
clc
xor
add
clc
mov
js
jl
loopne
xor
add
test
cmp
dec
inc
clc
cmp
xlat
dec
mov
shrl
clc
hlt
mov
lods
mov
dec
xor
clc
outsl
out
leave
mov
mov
and
add
push
iret
and
add
xor
add
add
into
push
pop
repz
clc
out
pop
mov
pop
iret
clc
push
icebp
int
xabort
incl
jne
cld
jmp
sub
and
cs
stos
stos
push
add
mov
je
push
sbb
jbe
cld
jmp
cmp
hlt
push
imul
mov
cld
jmp
pop
scas
add
inc
add
mov
inc
clc
mov
rcl
sbb
clc
inc
clc
cmp
push
sar
add
jp
lret
mov
flds
push
decl
cld
jmp
es
fwait
mov
push
add
mov
add
sub
mov
mov
and
add
outsl
cwtl
sbb
dec
sub
push
ret
inc
data16
clc
outsl
xchg
and
add
push
jmp
mov
mov
add
xor
mov
insl
call
add
cmp
repnz
cld
jmp
adc
add
testl
dec
jb
add
clc
push
ret
clc
cmp
rcrl
clc
or
xchg
sbb
hlt
adc
add
add
data16
mov
mov
movsl
clc
push
add
xchg
push
dec
push
clc
push
mov
std
jl
enter
add
add
negl
add
add
add
in
mov
insb
mov
shlb
stos
in
push
rcrb
add
clc
outsl
mov
mov
clc
out
sub
sar
maskmovq
idivl
fcompl
aaa
nop
or
add
dec
and
add
das
cmc
iret
jle
xor
add
clc
sub
add
lcall
cmp
jbe
clc
xlat
jns
xchg
test
addr16
pop
loope
jno
add
clc
inc
clc
push
insl
add
push
or
popa
inc
stos
pop
dec
je
add
loopne
jle
xchg
xchg
dec
push
or
lock
clc
adc
add
lret
xbegin
fcomi
mov
clc
in
cmp
in
leave
clc
xchg
mov
cmp
pop
adc
add
enter
add
add
add
rorb
add
cld
jmp
sub
push
jb
add
add
jmp
clc
sbb
fs
clc
xor
add
call
clc
push
int
clc
in
out
push
mov
ss
ret
fwait
sahf
xchg
jp
je
adc
add
jp
nop
lods
int3
mov
clc
xchg
mov
cmp
jecxz
inc
clc
movsl
clc
push
cmp
call
add
lock
add
divl
add
inc
clc
jb
add
add
loope,pn
sub
and
add
add
shll
jb
add
push
stos
ss
ret
aas
sahf
sub
clc
jge
dec
xor
add
add
mov
jecxz
or
and
add
lea
imul
lcall
adc
add
adc
add
inc
add
inc
clc
mov
jno
add
sti
fisubl
cmp
add
sub
cld
jmp
lea
add
jge
dec
fstpl
add
sub
scas
mov
clc
xor
add
clc
mov
add
xor
clc
inc
clc
or
clc
scas
mov
adc
add
add
add
add
stos
sub
mov
stos
clc
push
movsb
clc
sarb
cmp
jmp
sub
ja
dec
movsl
clc
jno
add
cmp
pop
mov
and
add
add
add
fisttps
clc
jp
mov
push
add
dec
sbb
clc
dec
inc
clc
sar
cli
mov
add
jmp
pop
mov
inc
clc
fadd
clc
add
add
arpl
add
sub
daa
clc
inc
clc
ret
cmp
mov
cld
jmp
pop
push
add
in
sti
mov
xchg
stos
lods
repz
add
add
cmp
aas
sbb
and
clc
mov
pop
push
add
jle
clc
inc
clc
int
clc
outsb
jg,pn
clc
adc
add
cld
daa
clc
inc
add
sahf
jmp
mov
push
ret
cmp
add
cmp
add
ljmp
clc
fcmovnb
clc
dec
sti
or
clc
roll
clc
adc
add
add
xor
mov
je
addr16
lcall
inc
add
xor
add
inc
add
pushf
sbb
clc
addr16
cli
inc
add
in
test
outsb
sar
cmp
jp
test
scas
sub
cld
jmp
add
arpl
add
jae
add
add
pmullw
pop
pop
inc
add
cmp
cmp
dec
ss
ret
je
push
nop
movsb
clc
call
pop
clc
and
add
clc
xchg
push
pop
mov
ja
ds
jae
add
clc
cmp
or
clc
repnz
inc
clc
lock
scas
out
sbb
add
inc
add
out
idiv
sub
pop
clc
dec
inc
clc
fs
sbb
nop
rorb
mov
pop
adc
add
cli
dec
adc
add
mov
add
cltd
adc
and
in
sub
cld
jmp
or
adc
add
repnz
clc
fcmove
hlt
mov
add
xor
add
pop
test
stos
notl
add
push
scas
sub
ret
sub
push
outsl
fimull
or
enter
add
clc
or
fstpl
clc
loope
adc
add
clc
mov
sbb
pop
xor
mov
add
dec
mov
clc
jbe
push
divl
add
nop
fnsave
add
and
add
add
fs
cmp
sub
add
movsb
clc
aas
mov
and
add
repz
out
int
add
sbb
popf
insb
cmp
add
popa
add
shlb
add
or
fidivs
loopne
addr16
push
jle
sahf
xchg
ffree
clc
mov
clc
pop
clc
sub
xor
xbegin
push
add
or
cmp
test
lods
add
dec
dec
adc
xor
add
jp
clc
xchg
push
add
clc
mov
cld
xor
add
add
add
jb
add
sbb
clc
imul
add
test
clc
dec
push
outsb
jp
clc
mov
pop
and
add
and
sti
lret
xor
aad
sbb
das
icebp
aam
call
cld
jmp
pop
add
add
add
push
adc
fwait
hlt
js
jno
add
add
jle
clc
ds
add
shl
clc
mov
clc
push
clc
inc
add
aas
outsl
arpl
add
xor
add
xchg
sbb
test
cld
jmp
loope
xabort
xchg
mov
add
add
xor
add
fcom
xor
add
push
ret
and
cmp
add
add
aas
lea
xchg
decl
test
jmp
mov
sub
jmp
ja
push
push
xabort
cmc
mov
jecxz
in
xchg
xor
add
js
and
push
push
testl
fcmovb
clc
cmp
clc
mov
js
sub
clc
es
and
add
or
push
sbb
testb
mov
add
fsts
add
clc
mov
mov
inc
add
and
decb
fimull
pushf
sar
dec
push
jmp
je
push
cmpsl
clc
ljmp
add
fildll
jne
xor
add
notb
add
pusha
add
and
pop
cmp
clc
lret
mov
lods
popf
loopne
incl
xchg
add
fwait
cmp
stos
aam
dec
jnp
clc
sub
adc
add
mov
mov
scas
sub
add
add
jp
gs
mov
cmpsb
clc
sar
clc
ret
clc
cmp
xor
add
xchg
cmp
add
aad
clc
jecxz
dec
pop
insl
insl
inc
add
scas
fnstcw
lea
mov
add
add
cmc
cmpsb
clc
mov
std
ss
clc
fists
add
xor
gs
mov
jmp
add
cmp
insb
xchg
dec
add
in
es
and
out
cmp
into
ret
clc
cld
jns
xchg
test
add
add
clc
pop
mov
clc
insl
out
jne
clc
xchg
jmp
notb
add
iret
cmp
add
dec
outsl
aad
and
add
aam
imul
cld
jmp
mov
push
pop
cld
jmp
das
mov
or
add
mov
sub
push
nop
iret
mov
inc
add
mov
pop
add
add
add
clc
cmp
in
push
add
cld
jmp
cmp
clc
jge
clc
dec
test
or
out
dec
mov
add
add
dec
mov
xchg
int
add
mov
add
add
sub
clc
sahf
bound
add
pop
test
shl
clc
ds
and
add
fwait
adc
shlb
dec
out
cmp
and
ret
clc
lahf
cmp
clc
cltd
cwtl
bound
add
add
add
add
dec
shl
clc
iret
adc
add
nop
repnz
clc
inc
add
arpl
add
xchg
outsb
xabort
clc
add
add
clc
mov
fisubs
pop
xchg
adc
add
jbe
mov
mov
cld
jmp
pop
sub
push
leave
in
lcall
test
mov
int3
scas
dec
inc
add
jno
add
pop
push
add
mov
xlat
mov
jle
pop
in
inc
clc
sub
testb
clc
enter
enter
stc
ffreep
clc
cmp
decl
adc
add
test
pop
push
add
aaa
xchg
clc
push
and
mov
je
cld
jmp
in
jge
add
cld
jmp
sub
push
cld
jmp
data16
pop
aaa
mov
add
inc
clc
nop
push
mov
dec
or
add
cltd
push
mov
add
sti
cmpsl
clc
and
add
add
and
add
clc
idiv
dec
cld
insl
xchg
popf
cltd
aas
insb
push
add
inc
clc
ljmp
add
xchg
outsb
test
add
push
inc
add
jmp
xbegin
mov
cmp
xchg
inc
clc
fcmovnu
ret
clc
movsl
clc
jno
add
in
mov
inc
add
or
clc
xchg
and
addr16
fidivs
add
add
jo,pn
add
clc
pop
icebp
push
mov
cmp
xchg
jbe
push
dec
mov
cmpsl
clc
and
add
notb
add
outsl
stos
fmul
movsl
clc
pop
push
add
fcomps
lcall
leave
xor
add
add
dec
std
dec
mov
add
add
mov
add
jg
out
scas
push
add
inc
clc
pop
clc
xlat
pop
pop
pop
stos
xchg
sub
mov
mov
mov
push
nop
xchg
inc
add
data16
dec
mov
add
add
ss
ret
popw
fs
shrl
mov
add
arpl
add
and
inc
add
test
lahf
push
clc
nop
jb
add
add
clc
mov
add
sbb
clc
fadd
clc
adc
clc
push
loopne
mov
cltd
jae
add
add
and
add
add
clc
push
xor
add
pop
cld
jmp
sub
aas
je
jnp
add
or
sbb
into
xlat
mov
clc
out
cmp
add
in
pop
and
add
adc
das
mov
push
lcall
xor
add
clc
mov
clc
punpcklwd
add
addr16
jae
add
dec
fldenv
or
add
and
add
add
add
bound
add
xor
ds
and
add
add
adc
add
mov
xbegin
scas
adc
add
clc
push
dec
vmovaps
add
aas
xchg
lods
mov
aam
add
sar
jge
mov
clc
mov
stos
mov
int
dec
or
in
ret
fcmovu
hlt
test
add
add
pop
popf
ljmp
jno
add
inc
clc
adc
add
testl
push
fcmovnu
ljmp
clc
jl
mov
outsl
xchg
int
stos
inc
add
jl
enter
clc
inc
clc
clc
scas
cmp
clc
icebp
sub
sahf
scas
add
add
lods
mov
clc
xchg
push
add
mov
shll
jnp
faddl
clc
jbe
xor
add
jp
or
clc
jl
add
cmpsb
clc
aad
push
clc
cltd
and
add
cmp
pop
scas
jl
cwtl
cmp
adc
add
outsb
imul
imul
lock
xchg
mov
add
gs
xor
add
add
stc
out
test
popa
add
dec
test
dec
popf
cmp
add
cld
cmp
clc
pop
clc
push
add
mov
mov
hlt
and
add
add
nop
add
add
add
add
test
int
xchg
sti
sub
mov
or
fs
xchg
das
mov
add
and
add
js
scas
fwait
dec
pop
pop
mov
insl
and
add
or
or
and
add
icebp
loop
sarb
int3
aad
sbb
js
mov
clc
inc
add
or
lcall
clc
cmp
popa
add
repz
add
add
shll
add
scas
pop
add
add
ret
clc
push
mov
arpl
add
add
add
shll
lcall
add
test
clc
push
insb
scas
movsb
clc
dec
push
xabort
clc
inc
clc
out
fisttps
clc
push
jns
lods
and
out
mov
clc
push
movsb
clc
mov
add
call
add
ret
clc
push
add
nop
pop
clc
in
jp
lock
adc
add
sbb
add
push
pop
sub
clc
aas
movsb
clc
xor
add
add
mov
clc
lahf
fnsave
add
xchg
fdivrl
xchg
outsl
nop
cmp
mov
repnz
jge
adc
or
test
xor
clc
dec
or
clc
loope
cmp
in
pop
sti
or
mov
add
pop
inc
clc
out
das
mov
or
sub
add
jmp
mov
outsl
add
add
call
in
loope
daa
clc
dec
pop
test
shl
clc
or
dec
loope
aas
sub
pop
push
add
xchg
dec
mov
push
mov
cmpsb
clc
fdivrl
sar
add
lcall
inc
add
cli
clc
in
je
pop
sar
lods
xlat
inc
add
cmp
add
mov
addr16
mov
iret
test
jo
add
add
pop
dec
xor
add
lcall
sti
adc
fildl
iret
xlat
sbb
ficompl
mov
add
add
add
clc
push
clc
cmp
fcoml
and
jmp
sub
clc
mov
or
jp
push
cmp
cld
jmp
outsl
sti
jne
aad
std
push
pusha
ss
ret
pop
test
dec
jb
add
hlt
imull
jb
add
add
xabort
clc
stos
imul
add
and
add
add
dec
into
pop
cmp
mov
mov
add
daa
clc
iret
mov
clc
push
push
add
or
push
ret
outsl
je
sub
mov
cld
jmp
xchg
push
dec
push
add
and
add
add
add
cmp
das
add
and
or
push
add
xor
add
cwtl
loope
rorb
or
clc
testb
sar
rclb
fwait
rep
insb
mov
clc
outsl
shll
add
adc
add
add
and
add
cld
jmp
je
mov
clc
rcrl
push
or
add
ret
lcall
add
push
data16
jmp
add
repnz
add
clc
mov
clc
xabort
popf
pop
sbb
rclb
add
pop
dec
xchg
mov
add
inc
add
sbb
jmp
or
jle
clc
cmp
clc
icebp
jbe
add
jae
add
insl
cmp
inc
clc
in
lret
xor
add
clc
sahf
dec
xlat
es
loopne
ffreep
clc
mov
inc
clc
dec
cmpsl
clc
sbb
dec
push
add
out
test
bound
add
lods
inc
clc
out
pop
clc
mov
clc
jmp
sbb
mov
add
dec
fucomip
fdivrp
mov
xor
add
add
cs
mov
clc
push
add
pop
xchg
shrb
push
mov
cld
jmp
fwait
xchg
mov
clc
cmp
and
add
add
lcall
cmp
xchg
je
add
mov
cmp
fcmovnu
pusha
add
add
add
fwait
dec
push
add
jbe
push
add
or
add
add
add
dec
mov
xchg
mov
cld
jmp
sbb
cmp
add
xor
add
sub
mov
lods
mov
mov
test
add
push
aas
dec
pop
jo
add
add
cmp
clc
or
adc
add
inc
clc
jg
clc
xor
add
cmp
inc
clc
push
add
pop
roll
add
loope
mov
add
jo
add
push
lods
ret
clc
setp
cmp
add
in
mov
js
test
scas
pop
clc
jno
add
add
xor
ret
clc
xchg
mov
sar
jmp
mov
push
add
cmp
clc
sub
jmp
add
gs
std
in
insb
sub
inc
clc
data16
jp
clc
lahf
std
cli
sbb
cld
jmp
nop
sub
inc
clc
cmp
mov
adc
add
shl
clc
sub
scas
imul
arpl
add
aam
clc
iret
movsb
clc
inc
add
divb
xchg
jp
clc
pop
mov
jno
add
inc
clc
pop
or
add
outsl
fsubp
clc
ficoml
add
pop
pop
dec
cmp
adc
jmp
scas
sub
add
add
lcall
push
add
gs
pop
ffree
clc
push
push
and
xor
inc
clc
fidivrl
xchg
pop
das
adc
add
mov
gs
mov
jge
and
add
xor
sti
dec
bound
add
into
pop
aaa
jle
aaa
std
lods
aaa
hlt
std
sarb
pop
and
add
sar
js
clc
testl
outsl
sub
add
mov
test
xchg
shl
sub
cltd
inc
add
popf
dec
stos
lret
push
push
add
push
add
cld
jmp
sub
shl
clc
push
xor
add
int3
imul
das
or
pop
cmp
clc
cmp
add
xlat
icebp
cmp
pop
icebp
shrl
test
shrb
add
clc
mov
add
add
ret
clc
sbb
add
add
add
jb
add
inc
clc
daa
clc
iret
test
inc
clc
loope
fcmovnb
clc
xchg
push
add
out
xor
add
add
clc
pusha
add
scas
pop
mov
insb
lods
int
cmp
add
add
mov
add
shlb
push
dec
jecxz
popa
add
sar
inc
clc
mov
mov
mov
jmp
lret
mov
add
add
add
add
add
sub
daa
clc
loope
pop
cmp
jnp
and
add
add
fwait
lret
cmp
add
dec
lret
imul
clc
lcall
xchg
enter
clc
movsl
clc
mov
dec
push
lods
out
mov
testb
push
add
ss
ret
add
pop
in
push
add
mov
inc
add
in
pop
clc
add
add
jp
push
add
dec
and
ror
sub
add
inc
clc
pusha
add
sub
add
clc
inc
clc
push
xchg
jnp
clc
jmp
mov
jbe
clc
lock
clc
jno
add
clc
and
add
clc
jg
clc
xbegin
clc
push
fildll
clc
ljmp
lock
jle
pop
movsb
clc
data16
pop
jbe
pop
mov
std
lods
jge
mov
adc
push
ret
inc
dec
sub
xchg
mov
mov
clc
sub
mov
nop
rorl
clc
push
cs
inc
add
das
inc
fwait
sub
clc
movsl
clc
pop
cmp
sahf
daa
clc
xchg
loopne
test
xor
add
inc
add
mov
xchg
test
xchg
aaa
sbb
and
add
jne
test
push
add
mov
aam
xchg
daa
clc
jg
cmp
push
jmp
add
or
add
popf
scas
add
cld
jmp
sub
inc
add
jge
mov
xor
add
mov
clc
arpl
add
lret
movsb
clc
jnp
sbb
sar
faddp
clc
xor
add
pushf
xor
add
jne
clc
clc
xchg
xbegin
add
add
mov
jb
add
jge
repnz
out
mov
push
adc
add
dec
cmp
and
add
cld
add
lea
scas
xlat
xchg
and
add
clc
adc
add
mov
sbb
clc
lahf
inc
clc
adc
clc
mov
popf
imul
clc
call
add
add
add
dec
cwtl
ljmp
clc
repnz
add
add
lea
xchg
aas
adc
add
lret
inc
add
and
add
mov
stos
or
aam
jnp
sbb
ret
clc
jae
add
aam
jo
add
je
push
add
push
add
lahf
cmp
loope
sar
clc
fnstcw
insl
mov
fcoml
add
xchg
mov
push
outsl
stc
jmp
push
pop
sti
xor
sbb
imul
dec
dec
aad
sbb
sub
xlat
inc
add
out
bswap
xor
add
add
mov
jnp
push
bound
add
pusha
add
xor
add
sahf
jmp
add
inc
clc
inc
add
add
jecxz
sbb
jp
repz
add
pop
ss
ret
or
clc
cmp
add
sar
int3
in
cmp
clc
aam
clc
je
out
or
cmp
inc
clc
data16
adc
add
inc
add
sub
addr16
push
add
lods
nop
clc
dec
push
insb
popl
xor
add
clc
in
mov
cli
adc
add
xor
cmp
clc
clc
into
ret
clc
cli
fdivl
add
add
into
jp
add
flds
sbb
repz
es
popf
xor
add
in
sub
push
mov
mov
pushf
xor
add
push
inc
add
int
popf
dec
add
add
push
or
add
aas
push
nop
xchg
aam
inc
add
push
sub
cmp
clc
nop
int
clc
movsb
clc
sti
pushf
std
in
jnp
xor
add
aad
ljmp
xor
add
push
jb
add
sbb
jmp
sub
inc
sub
dec
mov
scas
neg
aaa
lret
or
dec
sub
cmp
clc
cmpsl
clc
ret
clc
in
xchg
push
add
jle
add
lods
xchg
aas
xchg
out
push
add
mov
cld
jmp
sbb
adc
jbe
cld
jmp
add
xor
push
add
adc
push
dec
pop
add
add
int3
xchg
push
adc
inc
clc
mov
xchg
bound
add
mov
mov
call
clc
inc
add
xchg
push
stos
mov
jg
sar
hlt
cmp
mov
add
into
lea
cmpsl
clc
hlt
mov
out
lahf
mov
mov
movsl
clc
mov
add
out
stos
jmp
clc
xchg
mov
jnp
lea
add
data16
lahf
inc
add
es
mov
xchg
add
add
clc
mov
out
xor
add
mov
outsb
insb
gs
fwait
decl
test
xor
add
jmp
xabort
mov
cmp
cltd
testl
jg
clc
push
rcll
clc
int
inc
add
inc
clc
std
sahf
jp
pop
and
add
mov
repnz
movsb
clc
jecxz
cli
xor
add
add
xlat
push
in
cmp
movsl
clc
cmp
clc
xchg
insl
sbb
sti
and
add
mov
add
es
pop
clc
out
cwtl
test
jg
mov
adc
add
clc
mov
mov
ja
add
cmp
testb
clc
shl
clc
addr16
adc
ss
shlb
mov
add
cwtl
push
push
cld
jmp
sub
add
mov
stos
daa
clc
fs
lret
lods
sub
clc
xor
shl
clc
cmp
movsb
clc
es
movsb
clc
rcrl
clc
test
aaa
addr16
and
clc
cmp
fwait
pop
ja
jmp
cld
jmp
popa
decl
or
add
leave
divl
cmp
add
xchg
jae
add
pop
or
inc
clc
and
xor
clc
mov
add
or
clc
loopne
aad
mov
mov
loopne
test
aam
pop
cltd
test
pusha
add
imul
clc
aad
xor
clc
cltd
sbb
cld
jmp
add
jg
cld
add
inc
add
add
mov
in
js
add
pop
insb
push
sbb
daa
clc
jle
clc
cs
add
gs
sbb
imul
jae
decl
clc
ret
clc
insb
in
in
add
add
enter
shrb
clc
roll
push
add
in
adc
add
imul
jmp
lods
push
pop
mov
clc
sbb
jmp
cmp
or
std
cmc
xchg
rcrl
cmp
cltd
xor
add
gs
jmp
sub
fwait
sub
add
add
movsl
clc
ret
fsubr
mov
add
sahf
jge
clc
outsl
fdivr
into
leave
xchg
fwait
or
add
adc
add
mov
roll
add
xor
add
clc
addr16
lahf
inc
clc
jmp
fidivl
add
add
add
sub
sub
add
sti
jg
clc
pushf
bound
add
inc
add
push
clc
cmp
stos
ret
add
push
xchg
sub
iret
enter
into
ret
clc
movsb
clc
and
clc
inc
clc
push
add
sbb
clc
and
add
js
clc
out
lret
fs
xchg
adc
clc
dec
cmp
clc
push
push
sti
jb
add
fdivl
clc
add
add
jp
or
sub
and
add
pushf
incl
inc
cmp
jmp
push
sub
push
add
mull
push
cmp
add
add
inc
add
sub
mov
movsb
clc
scas
je
add
mov
fsubs
clc
xchg
xor
add
pop
shr
xor
add
push
push
lock
add
das
imul
inc
clc
addr16
loope
inc
add
leave
xchg
xlat
jg
std
leave
mov
add
clc
in
test
mov
jmp
test
cmp
add
out
pushf
jbe
xchg
aaa
enter
add
adc
add
clc
push
scas
loope
ljmp
xchg
cmpsb
pushaw
add
movsb
clc
xchg
jmp
cld
jmp
adc
add
and
add
ss
ret
cmp
add
scas
jo
add
push
test
mov
and
add
mov
nop
jae
add
add
cmp
jmp
sub
mov
cmp
fistps
inc
clc
cwtl
mov
mov
jb
add
es
cmp
dec
pop
add
inc
clc
cmp
stc
xchg
xor
add
data16
push
mov
cld
jmp
jg
sub
add
add
mov
loop
popa
add
nop
call
add
scas
or
stos
das
or
lcall
clc
and
add
clc
imul
add
xchg
add
add
add
inc
clc
je
pop
inc
add
pop
out
xabort
mov
out
out
in
sahf
push
add
ss
add
pop
mov
mov
inc
add
dec
push
dec
push
add
inc
clc
mov
clc
jp
nop
jecxz
jne
mov
add
pop
or
dec
dec
pop
add
add
xor
adc
and
hlt
popl
add
mov
jmp
pop
and
jbe
mov
ss
add
test
push
lret
je
cld
jmp
adc
xchg
jg
inc
add
arpl
add
mov
ja
in
or
mov
push
add
cld
fs
sub
clc
xchg
imul
fdiv
pop
repz
add
add
icebp
loop
jno
add
add
cli
ss
add
aas
mov
pop
inc
clc
filds
add
dec
mov
xor
add
sbb
mov
dec
pop
testl
push
jne
cld
jmp
cmp
push
cld
jmp
sub
lods
xor
add
clc
aaa
xchg
cmpsl
clc
and
add
add
add
jp
pop
mov
add
scas
jae
add
jmp
add
add
add
outsl
pop
cmp
add
push
add
add
add
add
or
call
push
ret
or
pop
loop
push
add
sbb
jno
add
cs
mov
clc
or
clc
or
add
inc
add
fcmovbe
pushf
inc
clc
push
cli
imul
aaa
sar
fisubl
add
sqrtps
add
xbegin
add
adc
add
sub
dec
loop
add
add
pop
stc
or
loopne
lahf
jnp
xor
je
lock
clc
xchg
stos
cmp
movsb
clc
das
cmp
mov
fisubs
add
lret
add
add
jno
add
mov
loop
or
sti
xchg
stos
call
sub
mov
icebp
int
sarl
jbe
cmp
and
jl
mov
clc
aam
clc
sbb
add
clc
scas
sahf
sub
add
out
xchg
mov
add
jle
clc
mov
fsubrl
or
add
add
xor
mov
clc
sub
call
repnz
add
xor
aam
ss
repnz
cli
call
dec
js
clc
test
mov
inc
add
sub
add
add
clc
ret
clc
dec
sub
in
lods
or
clc
mov
xor
push
add
xor
sti
cld
jmp
push
pop
sbb
rcrl
pop
sub
add
add
add
cmpsl
clc
push
std
leave
dec
out
dec
sahf
lret
clc
mov
push
ret
ja
in
dec
lods
mov
push
clc
pop
js
cmp
cld
jmp
or
mov
add
jle
clc
int
jle
adc
sahf
mov
clc
xor
add
scas
jg
add
push
into
imul
clc
mov
scas
lock
mov
leave
cld
jmp
popa
sahf
push
sub
sbb
and
add
add
clc
add
add
clc
jle
xchg
popa
add
and
add
add
clc
cmp
mov
add
add
add
repz
jmp
pop
adc
add
push
add
pop
clc
push
add
cld
jmp
lret
push
fldt
ja
clc
adc
add
clc
jbe
clc
push
add
jne
clc
shll
add
pushf
aas
xchg
cmp
stc
out
jo
add
clc
cwtl
sti
mov
push
clc
inc
add
lea
xchg
push
pop
sar
clc
mov
add
and
repnz
std
cwtl
xor
lret
add
add
add
nop
jg
aam
hlt
out
jnp
add
imul
add
push
add
clc
jae
add
scas
add
add
sbb
clc
mov
lret
repnz
add
lret
push
xchg
arpl
add
push
and
lret
in
lret
cmp
or
int
clc
rclb
push
add
rol
clc
adc
add
repnz
clc
out
and
add
push
sbb
xchg
test
je
inc
clc
push
adc
bound
add
repz
aam
and
add
push
sub
clc
add
add
add
je
xor
add
add
out
fsubs
add
xchg
add
add
xchg
rclb
xchg
push
sarb
mov
clc
or
dec
sarl
int3
mov
nopl
add
adc
add
popa
add
into
xchg
adc
clc
iret
fs
insb
cmp
and
add
push
jns
push
shr
cld
jmp
sub
test
add
add
test
push
add
or
nop
jp
clc
pop
stc
and
add
punpcklbw
add
jg
add
shrb
nop
xor
outsl
js
iret
mov
repz
aaa
mov
aaa
sbb
mov
jge
fs
add
mov
lods
lods
fidivrs
xchg
cmp
cld
mov
xor
dec
jge
push
push
cld
jmp
cmp
sbb
popa
add
push
add
int
clc
push
lahf
outsl
inc
add
inc
jp
push
add
repz
add
xabort
push
std
add
add
inc
add
cmp
clc
sbb
clc
cmp
mov
out
dec
push
clc
int
shl
sti
dec
push
sbb
mov
add
xchg
repnz
clc
pop
stc
loopne
bound
add
das
mov
xchg
xabort
add
mov
add
ret
pop
rorl
xchg
cld
sub
clc
jl
clc
sbb
push
ret
sub
lea
mov
sub
push
ret
push
sub
repnz
movsl
clc
cmp
jp
imul
pop
jl
clc
fisubrs
pop
cld
jmp
es
cmpsb
pop
in
or
stos
mov
add
xor
add
sub
inc
add
jecxz
test
add
jb
add
add
clc
inc
clc
aaa
lcall
dec
fcmovb
clc
xchg
jle
or
clc
pop
cltd
pop
mov
das
mov
clc
push
ret
clc
dec
sub
into
mov
clc
dec
arpl
add
xchg
inc
add
mov
out
mov
adc
call
add
mov
and
add
lret
clc
mov
add
clc
int
clc
mov
sub
or
clc
mov
rcl
mov
push
dec
fildl
add
insl
dec
hlt
xchg
es
into
mov
clc
jb
add
enter
push
add
and
add
pop
cli
jns
sahf
fidivs
add
and
add
add
lret
loopne
lods
cmp
mov
sub
outsb
xchg
out
dec
mov
movsb
clc
sub
clc
or
ficompl
xchg
push
pop
cld
jmp
sub
xchg
xchg
xchg
sbb
clc
jnp
push
je
xchg
push
inc
add
imul
cmp
add
push
add
dec
xchg
push
jmp
sbb
fwait
jns
xchg
jb
add
cmpl
shrb
add
data16
xchg
mov
clc
repnz
sar
adc
add
dec
sbb
jmp
lea
and
add
clc
jo
add
sub
mov
mov
jb
add
shll
add
clc
sar
adc
add
and
clc
pop
clc
adc
add
push
clc
lret
out
mov
add
jge
sbb
sar
add
or
movsb
clc
mov
and
iret
incl
jmp
cmpsb
dec
test
int3
rorb
cmpsb
clc
push
sbb
clc
adc
add
add
es
in
jp
mov
add
clc
stos
xor
add
jle
lahf
pop
pop
ljmp
add
xchg
cmp
add
ss
ret
or
icebp
and
add
push
cmp
lods
cmp
sub
add
fs
pop
mov
add
add
clc
and
jns
mov
fimuls
adc
add
clc
cmpsl
clc
jp
ret
clc
sub
andl
or
add
shlb
cmp
xbegin
add
pop
addr16
movsb
clc
sub
xor
add
lret
popf
mov
out
jmp
arpl
add
add
popa
add
imul
jae
add
add
xchg
and
add
std
insl
cmp
in
mov
add
and
add
cld
and
pushf
pop
pop
mov
add
xbegin
and
add
leave
xor
add
push
add
cmp
ss
add
ret
clc
push
add
push
add
mov
scas
cli
loopne
push
add
mov
jp
add
enter
dec
mov
add
pop
jge
int3
lock
ja
add
xchg
jne
iret
sar
adc
ja
cmp
pusha
add
sub
cwtl
push
add
mov
xchg
ret
clc
iret
in
scas
popa
add
popf
insl
inc
clc
mov
mov
mov
clc
dec
mov
in
fcmovnb
clc
loope
adc
add
addr16
lcall
push
xchg
insl
notl
add
shlb
add
jne
xchg
mov
jae
jmp
je
es
xchg
stos
mov
add
clc
add
add
mov
fwait
enter
add
jno
add
insl
mov
jmp
scas
das
insb
negb
clc
push
pop
clc
rol
clc
xchg
mov
cmp
cld
jmp
insb
dec
xor
lret
mov
pop
jb
add
icebp
test
mov
add
adc
jmp
or
cmp
add
fisttpll
pop
xchg
sub
icebp
ss
inc
clc
cmp
enter
clc
or
adc
add
mov
fdiv
incl
sti
cld
jmp
es
test
push
data16
cmp
add
add
ljmp
lret
sbb
sar
mov
clc
lret
pop
and
add
insb
push
sbb
add
add
add
mov
push
add
xchg
sub
sub
inc
add
ss
adc
add
clc
lods
ds
inc
clc
cmp
shrb
clc
call
sbb
cmp
outsl
xchg
pusha
add
mov
dec
sbb
jne
cld
jmp
incl
fistpl
add
inc
shll
add
clc
test
jecxz
adc
or
decl
ss
ret
jg
jp
add
adc
mov
clc
loop
xchg
cmc
push
mov
cld
jmp
sub
ja
mov
cld
jmp
divb
add
xbegin
out
testb
clc
mov
add
std
lea
out
into
ss
clc
roll
adc
add
clc
imul
cld
jmp
nop
inc
or
hlt
data16
insb
cmp
xor
add
iret
leave
mov
mov
clc
pop
xchg
push
cld
jmp
jg
jl
and
add
xor
add
jp
jb
add
movsl
clc
pop
shl
clc
out
cmp
add
add
clc
cmp
clc
mulps
sub
clc
cwtl
js
pop
and
add
ss
ret
pop
sub
push
ja
clc
pop
cs
mov
cld
jmp
lods
insb
push
cli
jle
xchg
sbb
clc
push
jmp
cmp
mov
mov
add
jmp
add
add
mov
adc
cltd
push
pop
aad
inc
add
xchg
jge
xor
add
add
cli
pop
addr16
pop
sbb
call
cld
jmp
and
test
xor
sub
dec
pop
cmp
xchg
adc
jp
clc
cmpsl
clc
inc
add
rorl
xchg
lret
js
popf
cmp
clc
xchg
adc
lea
cld
jmp
das
jp
or
add
add
call
jne
cld
jmp
lret
mov
pop
jmp
leave
inc
add
arpl
add
jbe
adc
and
add
adc
add
cmp
add
add
sub
insl
cli
mov
int3
push
xchg
mov
roll
add
sar
add
pop
sar
add
add
mov
nop
sub
clc
mov
clc
ret
add
add
clc
ret
clc
hlt
pop
insl
mov
pop
sbb
clc
jmp
clc
jecxz
mov
test
clc
aas
or
fldt
push
cmp
scas
ljmp
pop
xchg
xor
add
push
aaa
ret
clc
cmp
clc
arpl
add
insl
pop
mov
std
loope
out
mov
stc
lods
cmp
sbb
add
pop
jecxz
sub
pop
cmpsb
clc
and
add
inc
clc
cld
das
clc
enter
sbb
jne
cld
jmp
sub
xchg
shrb
lahf
mov
sub
test
lcall
add
pop
test
clc
decl
sbb
add
xor
mov
in
negl
push
add
std
sbb
cld
jmp
sub
adc
add
push
sarb
and
add
mov
jae
add
clc
fistps
fnstenv
hlt
cld
jmp
sub
mulb
add
pusha
add
push
mov
cld
jmp
pop
inc
imul
add
sub
clc
into
fdivl
sbb
not
fwait
int
clc
icebp
add
add
sbb
add
dec
sahf
dec
cmp
sbb
add
add
add
test
add
test
add
ror
inc
clc
ss
or
add
cld
in
sar
clc
test
add
dec
popa
add
xchg
int3
pop
incl
mov
decl
sub
test
add
lcall
add
add
add
clc
xchg
inc
clc
jne
jp
add
push
add
out
xchg
out
inc
add
fs
mov
pop
cli
and
add
add
add
ja
mov
add
inc
add
gs
fs
mov
push
jne
mov
xor
add
je
cld
jmp
bound
add
sbb
cmp
scas
adc
jo
add
add
inc
clc
adc
add
ss
cmc
jnp
ds
push
add
rolb
add
jns
mov
fisubl
add
jge
mov
lods
ljmp
fs
sub
mov
test
add
jno
add
xor
jmp
dec
adc
push
add
dec
clc
sbb
fistpll
cld
jmp
test
pusha
add
sarb
xbegin
inc
clc
ficoms
add
pop
outsb
addr16
gs
sar
clc
shr
ds
gs
sub
pop
cmp
mov
lods
or
clc
mov
push
add
dec
insb
into
daa
clc
gs
or
xor
add
jne
test
lcall
add
in
cltd
rclb
js
mov
popf
sarl
call
dec
cs
aas
sub
xchg
adc
add
clc
mov
clc
cmp
dec
aaa
int3
mull
popa
add
adc
mov
sar
pop
aas
xor
clc
iret
push
loope
js
ja
clc
aaa
dec
mov
add
mov
add
clc
jbe
cltd
rol
clc
sbb
test
add
add
jmp
cwtl
jnp
mov
xor
add
clc
dec
or
and
add
test
push
clc
inc
add
add
add
fmull
jge
ret
clc
loope
sar
bound
add
add
xchg
sub
add
sbb
jmp
pop
pop
push
add
inc
add
lods
in
insb
xchg
cmpsb
clc
jns
clc
rcrl
ds
push
add
pusha
add
cmp
add
add
nop
test
dec
sbb
adc
clc
sar
jne
adc
add
pushf
adc
add
add
loope
fldcw
leave
dec
cmp
clc
out
push
cmp
loop
mov
or
in
clc
vunpcklps
addr16
mov
clc
xlat
dec
and
add
dec
psllw
add
out
push
mov
cld
jmp
and
pop
lods
mov
test
mov
jbe
clc
cmp
cmc
cmp
or
idivb
lret
mov
sub
add
mov
rorl
and
add
add
stos
stc
push
cmp
sub
clc
adc
add
rcrl
clc
nop
pushf
mov
clc
xchg
lods
mov
dec
mov
clc
ss
out
mov
or
test
mov
jmp
sub
mov
lret
dec
lods
data16
addr16
decl
lcall
mov
aas
xor
add
add
stc
mov
mov
cmp
outsl
jge
xchg
ljmp
cmpsb
clc
dec
std
loop
movsb
clc
nop
scas
in
mov
add
sub
fcmovnbe
inc
add
dec
std
jb
add
clc
pop
imul
mov
movsl
clc
jnp
push
inc
add
in
dec
lods
dec
daa
clc
cmpsb
clc
xor
add
mov
jnp
pop
sar
clc
xbegin
clc
lock
inc
clc
dec
addr16
idiv
mov
add
negl
dec
pop
cmp
clc
cmpsb
clc
and
add
mov
add
popf
lret
movsl
clc
cmp
add
leave
scas
pop
cld
or
je
scas
pop
or
mov
jl
add
hlt
push
push
in
repnz
pushf
inc
add
pop
push
add
daa
clc
dec
add
add
out
mov
divb
cmp
addr16
mov
negl
lock
cmp
clc
fadd
clc
incl
sbb
add
test
ds
clc
and
add
dec
mov
dec
out
mov
clc
pop
inc
clc
xchg
and
add
mov
dec
into
fmul
pop
inc
add
xchg
mov
jno
add
add
gs
jns
pop
loop
ja
clc
push
cmc
inc
clc
dec
inc
add
or
ss
ret
pop
or
clc
in
lret
and
ss
push
clc
add
add
aam
clc
test
mov
sar
push
add
bound
add
loop
insl
enter
jge
aad
xchg
pusha
add
out
loop
cmp
push
cld
jmp
sub
test
add
add
out
mov
sub
add
fnstsw
clc
repz
add
aas
aam
cltd
push
jmp
mov
retw
push
xor
add
add
add
mov
mov
mov
sub
push
clc
or
add
add
and
add
pop
inc
add
inc
clc
lahf
mov
xchg
iret
sar
clc
adc
add
fiadds
sbb
ljmp
aas
cmp
add
popf
mov
add
xor
push
cmp
add
add
add
imul
clc
sub
clc
pop
inc
add
int3
sbb
test
out
nop
push
add
push
jb
add
xabort
clc
outsl
cmp
push
add
call
add
test
mov
stos
mov
clc
cmc
sahf
pop
das
outsl
dec
lods
call
push
ret
nop
lea
fucomp
test
pop
cmp
add
and
add
clc
out
enter
rolb
out
cmc
dec
notb
rcrb
xchg
loope
inc
add
push
add
push
or
add
add
add
clc
jg
cmpsl
clc
mov
mov
pop
add
sub
in
addr16
inc
add
iret
scas
pop
add
add
add
sub
clc
insl
push
mov
cld
jmp
je
mov
add
not
aam
clc
push
jmp
add
dec
xor
add
cmp
adc
shl
clc
push
add
cld
jmp
pop
sub
add
mov
add
pop
pop
and
add
inc
clc
mov
add
add
add
lret
lock
cld
jmp
sub
das
cmpsb
push
repnz
clc
mov
clc
ja
add
mov
add
or
mul
clc
movsb
clc
pop
mov
push
or
cmp
add
add
pop
lods
push
add
and
add
cmp
cld
jmp
sub
add
shrl
push
sbb
rcll
push
clc
sbb
shll
xor
add
clc
out
mov
testl
xchg
jo
add
clc
in
in
fldcw
cwtl
add
call
loopne
aad
clc
cwtl
mov
clc
add
add
add
xchg
add
add
mov
dec
iret
pop
ret
clc
fdivp
jmp
push
add
dec
das
jg
jae
add
clc
in
leave
arpl
add
pop
mov
outsl
lods
or
push
adc
call
in
test
push
add
push
add
adc
mov
popf
cld
jmp
sub
sub
add
test
test
ficomps
sbb
jecxz
xlat
adc
add
adc
and
add
add
dec
inc
add
mov
push
jno
add
clc
jae
add
cmp
inc
clc
std
jmp
jmp
sub
cmpsb
or
and
add
bound
add
lods
call
jnp
xor
clc
push
add
or
ds
clc
in
jmp
nop
faddl
js
adc
data16
and
clc
loope
test
mov
es
push
mov
ss
ret
nop
sub
add
pop
clc
mov
clc
xchg
adc
add
add
cmp
jbe
lock
xchg
jnp
out
in
pop
clc
cld
dec
push
cltd
mov
cmp
imul
cmp
add
dec
ja
iret
fst
xchg
movsl
clc
or
add
clc
push
jmp
das
adc
lock
xbegin
add
add
push
das
mov
dec
pop
icebp
aad
inc
add
xchg
xchg
sti
xor
out
cltd
fldt
lea
pushl
push
ret
sub
cwtl
nop
push
sbb
clc
xlat
sub
cld
jmp
movsb
fwait
fs
mov
jl
loopne
jecxz
xbegin
add
or
mov
sub
clc
adc
push
or
mov
mov
cld
jmp
aaa
sub
mov
push
clc
in
xchg
aam
ja
xchg
xchg
and
faddl
fcmovnb
clc
mov
pop
clc
popa
add
push
add
or
mov
add
outsl
icebp
sbb
clc
mov
and
add
cmc
je
add
jb
add
jae
add
add
add
mov
lods
sar
jne
add
lods
jp
mov
into
mov
out
insl
add
add
pop
and
add
shll
add
insb
xchg
shlb
clc
jp
pop
ret
clc
arpl
add
xor
add
add
adc
add
in
cmovae
add
stos
fadds
stos
jb
add
push
clc
out
lods
stos
lret
add
add
sub
add
xchg
cmp
and
add
adc
add
pop
out
scas
fsubl
push
add
shr
int
cmp
add
sahf
push
add
jecxz
nop
xchg
cmp
scas
xchg
inc
add
loope
cmpsb
clc
inc
clc
add
add
push
xchg
loop
mov
jmp
cld
jmp
test
pop
xchg
ljmp
push
jnp
add
lock
add
push
add
decl
mov
lcall
es
cmp
clc
aas
sub
add
add
add
scas
jmp
push
dec
mov
inc
add
enter
sar
movsl
adc
sub
das
scas
xchg
sub
pop
clc
ljmp
imul
or
lahf
insl
or
out
xor
add
clc
xchg
ljmp
xchg
mov
fisttps
adc
add
add
mov
push
enter
test
aaa
mov
add
clc
sbb
xchg
int3
mov
das
out
sbb
add
jno
add
js
clc
test
pop
add
add
movsb
clc
sub
sub
add
clc
push
add
repz
in
xchg
es
daa
clc
xor
add
add
clc
dec
es
sub
add
cmpsl
clc
pop
imul
xor
inc
clc
pop
adc
add
cmp
add
jbe
jge
add
or
add
scas
dec
imul
push
clc
clc
fistl
divl
dec
fucomp
ss
fildll
insb
insl
mov
daa
clc
hlt
adc
add
clc
or
clc
xchg
sbb
clc
add
add
mov
clc
test
clc
fs
push
mov
popa
sub
in
enter
add
add
add
push
popa
cld
jmp
add
dec
inc
clc
leave
in
int
clc
mov
call
adc
add
arpl
add
clc
data16
mov
movsb
clc
mov
cmp
stc
fwait
xchg
pop
ss
clc
xlat
push
add
cld
jmp
cmpsb
aas
out
xchg
mov
xchg
cmpsb
clc
or
xchg
in
mov
inc
clc
add
add
pop
iret
push
add
pop
iret
cmp
popa
add
imul
pop
fcmovnbe
mov
add
add
imul
mov
add
jo
add
xabort
pop
sub
jne
push
add
scas
mov
shrl
clc
fsubl
add
add
add
clc
dec
lret
xchg
sub
pop
or
add
push
add
cld
jmp
dec
add
add
clc
pushf
mov
clc
push
dec
cld
xchg
push
pop
dec
neg
push
add
jno
add
add
push
js
insb
stos
test
add
out
xor
add
ljmp
or
add
jmp
mov
mov
clc
mov
adc
call
add
fdivrs
pop
lea
mov
mov
sti
stc
ja
add
jmp
hlt
ret
fwait
add
ss
popa
add
mov
pop
sub
in
lods
xchg
rol
clc
movsb
clc
pop
mov
add
or
outsl
pusha
add
mov
lods
ret
icebp
enter
clc
add
add
cmp
addr16
inc
clc
outsb
adc
add
clc
cmp
add
cmp
clc
push
or
clc
mov
jmp
jmp
jo
add
insl
aas
mov
mov
insb
mov
clc
xchg
imul
fcmovnbe
pop
clc
mov
jno
add
clc
and
add
clc
xchg
loop
inc
clc
test
clc
or
pusha
add
mov
in
mov
mov
or
xor
add
in
es
icebp
test
sub
add
add
clc
test
push
inc
clc
insb
jmp
mov
repnz
stos
and
add
add
sbb
clc
loopne
mov
clc
push
push
cld
jmp
add
cmpsb
clc
mov
clc
push
shrl
stos
sbb
clc
fnstcw
add
in
jae
add
jecxz
lock
mov
push
cld
jmp
outsl
test
mov
repz
arpl
add
sbb
popf
aam
clc
jmp
clc
xor
add
sbb
jmp
imul
add
cmp
clc
icebp
in
mov
sub
mov
mov
test
mov
add
add
addr16
jae
add
xchg
jo
add
clc
rorb
clc
mov
add
or
clc
loope
loopne
jge
in
pop
rcr
pop
push
add
loopne
inc
add
outsl
mov
inc
add
sub
out
iret
fwait
sar
clc
xchg
add
add
add
out
xlat
movsl
clc
push
push
ss
ret
outsl
insb
sahf
fucomip
dec
mov
clc
testl
out
fwait
add
lea
insl
cmp
sbb
jmp
clc
push
clc
sub
or
mov
jae
add
push
push
push
adc
add
scas
aad
push
add
arpl
add
clc
cmp
inc
clc
sti
jo
add
add
clc
add
add
clc
vmovups
add
ss
ret
sub
add
repnz
bound
add
add
test
sub
push
mov
adc
cwtl
pop
xor
add
lcall
jmp
xchg
adc
add
add
fwait
mov
sub
cmp
call
jne
clc
icebp
mov
clc
and
add
add
push
jp
add
xor
pop
sub
outsb
mov
sbb
add
ds
push
add
sbb
sar
clc
mov
clc
adc
data16
cmp
inc
add
mov
adc
add
fnstenv
and
add
clc
add
add
jg
cmp
pushf
ljmp
cwtl
sub
jge
add
pop
dec
xchg
shlb
clc
enter
add
clc
fwait
imul
cld
jmp
sub
andb
pop
fs
mov
clc
fs
jecxz
adc
add
nop
mov
cmp
add
mov
clc
xchg
xlat
pop
std
clc
adc
mov
dec
push
jmp
xchg
je
mov
es
cmp
xbegin
jo
add
push
cwtl
push
cmc
adc
push
std
test
fs
cwtl
cmp
lods
sbb
aam
clc
fs
or
sahf
mov
add
jmp
sub
add
inc
add
push
stos
pushf
icebp
aas
xor
add
stc
cmc
aam
clc
or
add
push
loopne
je
lcall
mov
test
fstp
dec
xor
pop
pop
mov
sti
dec
inc
add
pop
loopne
aam
and
add
repz
dec
hlt
or
and
cmp
clc
fistl
mov
clc
adc
jg
add
or
aam
add
xor
add
xchg
mov
add
lahf
sarb
jne
push
loope
inc
add
xchg
js
iret
pop
out
inc
add
movsl
clc
lock
push
add
cltd
out
mov
or
frstor
add
popf
repnz
mov
clc
nop
inc
add
jne
dec
sar
clc
cmpsb
clc
ljmp
cmpsb
clc
fimull
dec
sti
xlat
sbb
sbb
inc
add
and
push
clc
mov
clc
cltd
dec
lret
clc
dec
cmp
inc
clc
sub
add
add
clc
dec
stos
dec
or
add
aas
lcall
clc
pop
dec
add
add
add
clc
mov
add
xor
movsb
clc
fiaddl
clc
mov
clc
iret
ja
add
stos
enter
aas
mov
jns
scas
push
add
sti
mov
cmp
imul
or
add
cld
cmp
lock
clc
enter
add
xchg
cmc
aaa
sar
cmp
add
cmp
xchg
push
add
cmp
inc
clc
push
out
inc
add
movsb
je
add
loopne
cld
jmp
push
andb
clc
or
clc
push
add
aam
add
push
add
mov
add
inc
clc
lods
ss
jb
ss
ret
aaa
sub
sar
cmpsb
clc
inc
clc
in
xor
add
stos
pusha
add
mov
fs
inc
add
stos
cltd
and
add
and
popl
add
adc
add
cld
jmp
xor
sbb
xor
add
insl
dec
inc
add
loopne
cmp
cwtl
xor
cmp
jns
clc
mov
inc
clc
arpl
add
add
pop
mov
push
add
mov
add
xchg
xchg
jecxz
hlt
ja
inc
clc
aad
clc
pop
mov
push
sar
clc
and
add
clc
fimull
pushf
shll
fwait
cmp
scas
or
lret
add
incl
push
ret
pop
sub
mov
clc
mov
inc
ss
ret
and
add
add
add
cmp
push
outsl
mov
add
aad
clc
xor
add
not
cld
jmp
aas
cwtl
cmp
imul
add
clc
jmp
stos
loope
mov
add
clc
push
add
or
test
clc
std
or
mov
lret
in
jno
add
jg
clc
sub
fldcw
add
mov
add
loop
mov
jmp
popa
imul
ljmp
mov
clc
cli
xchg
aas
fsubrp
insb
aas
adc
add
add
adc
add
clc
mov
sub
add
pop
adc
xchg
xchg
sub
lret
mov
clc
mov
cmp
mov
js
pop
sbb
or
add
push
clc
jl
xabort
cs
into
mov
adc
add
pop
mov
clc
inc
clc
inc
add
loop
aam
cs
cmp
push
ss
ret
adc
sub
int3
push
add
lret
add
cmp
add
pop
adc
add
jns
call
iret
outsl
mov
xor
add
add
clc
dec
xchg
sub
add
pop
popa
add
mov
or
clc
add
add
stos
rorl
pop
daa
clc
inc
add
adc
add
clc
mov
push
rcll
add
rcrb
fwait
das
cmp
clc
or
clc
cwtl
xlat
push
add
sti
loop
cld
adc
clc
add
add
jmp
movsb
clc
xlat
int3
xlat
data16
mov
clc
out
in
jns
repnz
popf
inc
clc
mov
out
icebp
mov
mov
or
clc
fs
outsl
xchg
stc
or
fdivrl
clc
add
add
repnz
push
add
aam
shll
add
mov
clc
sar
add
mov
or
mov
scas
std
clc
jecxz
push
add
gs
inc
clc
pop
sub
das
push
jl
out
xor
add
imul
add
insl
popf
and
add
pop
arpl
add
repz
icebp
bound
add
clc
and
jmp
pop
lret
or
add
push
add
adc
add
aam
mov
add
clc
fdivp
pusha
add
or
jmp
sub
gs
pop
rcrl
add
notl
clc
mov
and
dec
pop
scas
push
je
repz
pop
add
add
push
mov
cmp
lret
cs
inc
add
shr
popa
add
inc
clc
xbegin
add
or
add
push
data16
cmp
mov
mov
clc
cmp
pop
mov
clc
ljmp
mov
ret
outsl
movsb
lret
clc
sub
clc
jp
adc
push
cs
sub
arpl
add
clc
mov
clc
fadd
clc
mov
clc
jecxz
rcll
sbb
push
cmp
mov
add
pop
add
add
clc
ficoml
cmp
add
enter
add
clc
aad
bts
lret
mov
jge
add
hlt
sti
clc
notb
cmp
add
xor
add
sbb
fcos
pushl
cmp
ret
xbegin
add
daa
clc
into
jg
clc
fwait
in
xabort
clc
fs
ret
clc
cwtl
push
add
popl
mov
out
popf
mov
cmp
add
clc
daa
clc
jge
jecxz
pop
pop
adc
add
add
clc
xchg
adc
jns
clc
cs
jne
add
jnp
movsb
clc
mov
add
clc
cmp
lcall
xabort
insb
lods
pop
mov
clc
inc
add
imul
clc
sbb
cli
cld
jmp
adc
adc
cmp
scas
dec
adc
add
movsb
clc
cmp
xchg
mov
mov
add
push
xchg
jmp
add
add
cmp
in
jle
add
std
mov
clc
cmc
push
clc
adc
add
test
jns
add
add
add
stos
xchg
sub
add
and
add
add
cld
jmp
cmp
test
adc
add
ljmp
ljmp
in
jnp
into
fisttps
clc
sub
clc
xchg
xchg
pop
or
clc
mov
push
add
mov
push
or
push
jne
lods
or
ret
clc
jne
aas
pop
in
mov
mov
cmpsl
clc
pop
cmp
clc
pushf
pop
popf
arpl
add
mov
and
add
clc
sbb
clc
xchg
mov
ds
sar
pop
sub
add
int3
jbe
sub
add
mov
clc
fdivrs
inc
add
mov
das
jmp
xchg
cmp
clc
mov
dec
mov
add
xor
add
sub
sar
jl
sub
add
data16
xlat
movsl
clc
cmp
leave
cld
jmp
sub
insb
sub
add
add
and
insb
mov
mov
ret
clc
clc
mov
ret
add
outsl
clc
cmc
clc
cmp
fdivrs
xchg
push
push
add
jae
add
fcompl
cltd
dec
jbe
add
pop
cwtl
mov
add
leave
push
sub
cld
jmp
push
mov
add
add
clc
test
or
cltd
pop
add
add
add
dec
adc
add
icebp
cld
jmp
popa
mov
and
add
scas
frstor
add
mov
cmp
push
out
sahf
decl
add
inc
add
sar
add
or
mov
imul
jge
clc
popf
inc
add
cwtl
cmp
clc
int
jg
add
jl
pop
in
mov
xor
cld
jmp
outsl
cmpsl
clc
fwait
cmpsl
clc
add
add
daa
clc
jo
add
adc
add
add
clc
fldpi
pop
out
xor
add
clc
dec
std
insl
ja
popf
cmpsb
clc
mov
int
add
add
bound
add
or
inc
clc
scas
cmp
cmp
add
jmp
sub
mov
cld
jmp
sub
sub
add
bound
add
clc
pop
mov
add
cmp
mov
mov
xchg
out
xchg
sahf
jne
clc
push
push
jle
pop
cmp
lcall
clc
sub
clc
inc
add
dec
inc
clc
push
jns
clc
enter
pop
mov
mov
add
sbb
pop
out
mov
and
add
cld
jmp
dec
push
cwtl
or
clc
push
ss
ret
insb
xchg
dec
xchg
xor
add
add
test
xchg
xchg
mov
add
add
xchg
mov
inc
clc
notb
into
ds
clc
xor
add
add
sar
shrl
push
add
add
xor
add
iret
mov
xor
add
xchg
cmc
repz
cmp
daa
clc
fidivrl
push
ret
adc
inc
add
cmp
add
add
inc
add
xor
add
cld
jmp
and
add
clc
pop
fdivrp
push
xchg
rorl
add
xor
push
cld
jmp
inc
jp
xor
outsb
cs
aaa
aad
clc
inc
add
xchg
in
cwtl
lods
cmpsl
clc
adc
add
inc
add
jecxz
lods
mov
imull
data16
pushf
sub
clc
push
add
lock
cmc
fwait
inc
add
mov
inc
add
sbb
add
enter
in
cmp
test
xor
add
dec
sub
add
mov
dec
push
out
push
iret
xchg
cmp
mov
dec
popa
add
aad
pushf
jb
add
add
std
push
add
dec
add
add
add
out
mov
add
bound
add
clc
xchg
std
jo
add
loope
and
add
inc
clc
pop
aas
fsts
clc
or
or
lret
xor
clc
xor
pop
pop
mov
sbb
loope
pushf
adc
add
loop
xbegin
jmp
xchg
add
add
hlt
sbb
mov
clc
mov
sbb
clc
and
add
lcall
in
or
popf
push
ret
clc
repnz
push
push
add
add
clc
repnz
and
add
add
gs
add
add
movsb
clc
cmp
jnp
push
jmp
sub
xabort
mov
clc
out
xor
add
add
clc
mov
pop
xor
add
add
xchg
xchg
cmp
pop
clc
mov
hlt
xor
add
ljmp
sti
aam
lods
xor
add
cld
jmp
sub
jg
jge
cmp
clc
popf
out
push
add
xbegin
clc
popa
add
out
xchg
inc
add
out
dec
pop
leave
clc
inc
add
sub
or
xchg
cmp
sbb
bound
add
cmpsl
clc
inc
clc
cmp
add
fnstenv
sbb
add
dec
mov
add
fdivr
jb
add
clc
cld
rcrl
mov
adc
add
add
clc
mov
add
pop
insl
clc
xchg
dec
add
add
add
add
test
imull
push
cmp
sub
jge
clc
arpl
add
inc
add
xlat
lods
pop
dec
rolb
add
aaa
lea
inc
clc
fcomi
enter
push
jne
test
ljmp
std
data16
cltd
mov
mov
clc
inc
add
movsb
clc
and
add
aas
ja
mov
clc
mov
clc
xchg
outsb
cmp
mov
sti
cmp
jb
add
scas
jl
mov
repz
pop
loopne
xchg
hlt
cmc
inc
add
sahf
cmpsb
clc
test
fisubrs
insl
inc
add
std
test
dec
adc
add
clc
jae
add
xor
add
lea
notb
loopne
notl
je
add
jmp
test
add
xchg
stc
jmp
clc
push
popa
add
xor
add
clc
inc
add
mov
rorl
out
cmp
fs
xor
add
add
and
add
clc
icebp
addr16
mov
add
iret
ja
add
add
add
fwait
into
mov
jmp
fwait
pop
push
idivb
das
and
add
adc
add
jne
cld
jmp
inc
clc
adc
add
call
push
ret
push
or
mov
jmp
sub
push
xchg
mov
psrlq
xchg
mov
pop
and
add
add
jge
jb
add
aad
clc
cmc
pop
push
jmp
dec
sub
add
outsb
cmp
mov
add
clc
js
out
and
add
mov
mov
clc
jmp
push
add
fildll
sub
mov
cmp
clc
add
add
clc
mov
out
dec
push
add
das
ds
cmp
add
in
xor
cmp
add
mull
add
stos
insb
int3
cltd
xbegin
clc
xchg
dec
enter
cmp
push
jmp
movsb
sub
mov
cld
jmp
nop
outsl
or
clc
jp
jge
repz
clc
sahf
mov
and
pushl
test
adc
add
mov
clc
sbb
pop
or
in
mov
out
dec
iret
mov
js
into
lcall
sti
daa
rolb
ljmp
pusha
add
mov
clc
in
pusha
add
sub
pop
and
push
decl
ss
ret
push
pop
xbegin
add
jl
jae
add
jle
cwtl
lret
pusha
ss
ret
insb
movsb
je
pop
clc
jle
add
add
add
push
cld
jmp
cwtl
sbb
sbb
mov
add
jmp
sub
inc
add
stos
fidivl
clc
inc
clc
mov
add
repz
add
cli
sbb
add
fs
push
clc
inc
add
cmpsb
clc
into
mov
clc
or
clc
pop
sahf
pop
dec
iret
xchg
ret
push
cld
jmp
xchg
insb
xorb
sahf
push
add
dec
push
push
aas
jne
mul
clc
push
add
es
pushf
insb
push
and
add
cmp
mov
cmp
pop
gs
shr
inc
add
clc
and
add
cld
jmp
mov
xor
inc
clc
test
clc
and
add
mov
add
clc
aas
push
add
cld
cmp
bound
add
fsubp
clc
mov
and
add
out
movsl
clc
xor
add
fldcw
nop
cmp
clc
jb
add
clc
dec
jg
jge
mov
call
je
push
mov
cld
jmp
xor
or
add
decl
jmp
subb
sub
or
pop
test
clc
sar
test
cld
sti
sub
dec
jne
ret
clc
adc
add
add
add
pop
clc
cmp
mov
xchg
lcall
push
ret
dec
data16
rclb
add
clc
test
clc
push
mov
sub
add
clc
jnp
mov
add
pop
clc
js
or
into
inc
add
into
add
add
and
add
add
add
movsb
clc
fiadds
add
pop
jno
add
sub
add
inc
clc
jp
clc
add
add
daa
clc
inc
clc
xor
mov
xchg
and
add
mov
xor
call
mov
clc
sbb
push
add
ja
add
imul
xbegin
mov
cld
jmp
sub
xlat
shrb
push
mov
inc
clc
in
scas
fdivrl
xor
add
clc
mov
imul
jae
add
jle
add
test
or
add
xabort
push
jmp
sbb
pusha
add
vunpcklps
clc
pop
jae
add
and
add
sahf
pop
lods
mov
clc
inc
clc
mov
push
test
dec
cld
jmp
dec
jp
sahf
sub
add
std
outsb
cmp
xchg
jg
aad
lods
dec
sar
clc
mov
add
test
add
popf
jno
add
add
cld
jmp
popa
add
hlt
es
add
add
add
push
add
bound
add
and
add
push
xor
cld
jmp
sub
and
jmp
pop
fidivrl
clc
mov
daa
clc
outsb
fwait
inc
clc
movsl
clc
cmpsl
clc
clc
pop
sub
add
adc
jmp
scas
sub
mov
test
data16
clc
cmp
cmp
sar
clc
mov
add
leave
add
add
dec
ja
or
clc
pusha
add
aaa
xchg
pop
push
cld
jmp
adc
loop
shrd
cmp
popf
xchg
lahf
cli
jno
add
add
dec
scas
ds
push
add
mov
or
mov
clc
jbe
clc
loop
loopne
sbb
cmp
ret
testl
ficomps
push
add
sbb
clc
in
rorl
dec
mov
data16
lods
stos
daa
clc
xabort
xor
add
jae
add
adc
mov
bound
add
sub
mov
xor
add
sbb
clc
sbb
jmp
and
aas
nop
push
xor
add
clc
or
add
pop
popf
adc
add
add
das
inc
clc
ds
add
lock
add
add
enter
add
movsl
clc
xchg
sub
mov
mov
dec
clc
iret
mull
add
xor
add
shrb
jbe
and
add
add
xchg
daa
clc
push
add
int3
xchg
pop
js
clc
push
add
arpl
add
clc
pop
adc
add
mov
jmp
insb
pop
adc
test
test
push
leave
jle
sbb
sahf
inc
clc
adc
add
jb
add
add
add
fcoml
inc
clc
push
add
mov
jne
cld
jmp
dec
cmp
lcall
inc
clc
cmp
clc
js
xchg
out
mov
clc
cmp
add
adc
add
mov
cmp
fbstp
sbb
push
add
mov
add
insl
add
add
mov
pop
enter
xchg
add
add
pop
jecxz
or
clc
cmp
dec
dec
shlb
clc
das
sar
clc
iret
mov
clc
pop
test
xor
add
adc
add
or
clc
test
add
cld
jmp
pop
sub
adc
add
out
push
add
mov
adc
add
mov
clc
pop
mov
pop
add
add
add
bound
add
clc
imul
cmp
jmp
xchg
or
insl
sub
add
xbegin
xabort
add
cwtl
cmp
sub
test
mov
add
sub
aad
testb
mov
mov
add
sar
clc
mov
gs
xor
add
fcompl
sbb
dec
es
jecxz
mov
jne
lods
cmpsl
clc
cld
cmpsb
clc
pop
test
inc
add
mov
jmp
outsl
add
xor
add
sub
push
add
push
ret
clc
xchg
das
and
add
pop
push
jmp
imul
add
mov
push
sar
push
clc
mov
pushf
and
es
jo
add
fneni(8087
clc
mov
push
sbb
fstl
inc
clc
lea
cld
sub
add
cmp
mov
add
xlat
jmp
mov
jecxz
stos
xchg
push
add
sub
stos
add
dec
out
leave
jge
jp
lcall
in
pushf
dec
leave
adc
mov
mov
pop
cmp
clc
jmp
add
loope
adc
or
sub
mov
add
iret
pop
push
pop
pop
aas
xchg
xchg
nop
arpl
add
test
cld
jmp
je
add
add
add
adc
fnsave
jmp
sub
mov
decl
test
mov
cld
jmp
jg
clc
and
add
add
pop
push
add
cltd
fildl
mov
clc
xchg
pop
mov
pop
lret
add
cmc
out
inc
add
dec
mov
push
add
inc
add
push
fldcw
add
add
clc
arpl
add
test
xbegin
add
insl
addr16
aas
call
add
add
sbb
test
jnp
mov
inc
clc
mov
mov
dec
sar
out
rol
clc
rclb
add
or
pop
enter
repnz
add
mov
lea
add
rclb
and
jmp
add
clc
in
mov
lea
jg
movsl
clc
dec
bnd
add
push
mov
cld
jmp
sub
jbe
mov
iret
inc
add
lods
pop
dec
dec
add
lods
or
push
push
inc
add
clc
mov
xchg
push
fdivrs
xchg
or
add
data16
mov
arpl
add
push
mov
ss
ret
adc
sub
xor
add
cmp
clc
fwait
pop
rcll
add
add
xchg
cli
jg
movsb
clc
push
add
hlt
fsubl
jo
add
add
insl
mov
pop
sbb
stos
fmul
pusha
add
add
add
sarb
lock
lods
aad
clc
jae
add
scas
lea
or
sbb
mov
imul
xchg
push
call
cld
jmp
scas
xabort
ret
add
test
jmp
or
push
push
clc
lret
mov
jmp
dec
sub
clc
sahf
pushf
shl
cmp
fwait
cmp
ss
ror
das
dec
pop
jb
add
aaa
out
cltd
outsl
imul
jbe
jp
jp
cmpsb
clc
cwtl
mov
pop
mov
jmp
xor
push
sti
fnstsw
clc
unpcklps
clc
xchg
mov
add
nop
mov
and
add
gs
int3
adc
add
loop
jns
clc
xchg
lcall
call
cld
jmp
cmp
fistpll
cmp
test
test
call
add
imull
pusha
add
aad
push
add
jo
add
inc
add
std
add
add
clc
add
add
sar
jmp
sahf
or
jle
clc
test
scas
jecxz
cmc
jle
xchg
or
inc
add
aam
je
add
shrl
cld
jmp
das
sub
sub
lods
xbegin
lahf
imul
lahf
in
inc
clc
ficompl
stos
xor
add
data16
sub
add
mov
mov
add
xchg
call
clc
push
add
outsl
cmp
xor
add
add
fldenv
add
and
jmp
sbb
sub
popf
dec
adc
add
inc
add
or
sbb
je
jecxz
or
add
fimull
lods
sub
mov
clc
dec
and
add
mov
pop
into
lahf
mov
repnz
inc
clc
inc
add
sahf
xor
cmp
sbb
add
movsb
clc
lods
jae
add
mov
xorps
or
add
add
outsl
ret
clc
sbb
mov
clc
add
add
fdivr
cmp
adc
sar
add
xchg
out
cltd
jns
notb
add
push
popf
mov
sarb
and
add
clc
es
mov
mov
jmp
mov
clc
jbe
cmpsb
clc
or
cs
cmpsb
clc
ss
add
xchg
dec
mov
clc
cld
fnstcw
add
add
insb
pop
cmp
add
pop
clc
lret
hlt
outsb
xchg
or
add
insb
in
stos
fwait
dec
lock
add
clc
cmp
add
aas
xchg
mov
faddl
data16
outsl
test
nop
sar
es
or
or
push
jb
add
add
clc
dec
lods
repz
mov
jae
add
gs
icebp
ss
and
add
add
add
clc
sti
xchg
and
add
loope
dec
sar
clc
xabort
sub
jnp
clc
cltd
into
mov
popa
add
bound
add
cmp
jbe
clc
pop
xchg
out
hlt
rclb
clc
add
scas
cltd
into
mov
jbe
clc
enter
add
and
add
in
xchg
xchg
and
add
ljmp
clc
pop
or
imul
sub
clc
ja
pop
sahf
sar
test
add
mov
lock
cli
repz
add
pop
clc
lret
xchg
test
arpl
add
add
add
xchg
jl
pop
dec
in
mov
clc
dec
lcall
cltd
jle
loope
mov
cmp
aas
movsb
clc
aaa
mov
lahf
pushf
xor
mov
xchg
xor
add
test
mov
xchg
mov
mov
clc
mov
add
daa
clc
in
xchg
lret
clc
pop
pop
jg
cmp
adc
add
flds
add
sub
clc
mov
cli
pop
stc
hlt
test
fstl
dec
jbe
adc
cld
jmp
jge
sbb
push
add
cs
pop
xor
jecxz
stos
fists
cmp
cmp
push
add
add
popf
cmp
adc
add
and
add
rorb
in
ss
clc
xchg
or
add
add
fmulp
loopne
pop
fstpt
pusha
add
popa
add
in
sub
clc
out
scas
adc
add
clc
pusha
add
lea
xlat
jg
clc
enter
mov
std
push
clc
fs
lahf
mov
or
xor
clc
add
add
dec
out
adc
add
sub
hlt
lods
in
jle
add
xchg
hlt
arpl
add
add
adc
add
call
sub
clc
sub
leave
js
clc
in
dec
es
jmp
add
out
aas
push
xchg
xchg
sahf
and
add
add
cmp
clc
inc
add
ret
clc
pop
ds
hlt
push
add
add
ds
jge
clc
fs
es
mov
add
mov
xor
add
xchg
iret
dec
push
add
sbb
add
mov
mov
fdivrs
int
or
xchg
sbb
in
roll
add
clc
je
add
add
clc
nop
pop
cmp
add
imul
fstpl
cld
jmp
sub
scas
xlat
pusha
add
ljmp
xchg
mov
clc
sub
add
stos
and
add
add
call
mov
or
std
loope
fmull
mov
sub
dec
dec
push
pusha
add
push
add
lock
jne
bound
add
arpl
add
mov
rolb
pop
jmp
fiadds
pop
mov
inc
add
dec
and
add
jmp
cmpsb
clc
cld
cmp
adc
and
outsb
cmp
add
add
add
jmp
dec
jbe
clc
add
add
int
data16
lea
mov
int
inc
clc
jle
mov
into
mov
add
ficompl
add
add
mov
adc
add
cmp
add
xabort
clc
mov
add
lock
clc
in
ss
hlt
insl
inc
clc
or
clc
inc
clc
ljmp
fisttpll
clc
cli
dec
pop
xchg
fmull
pop
mov
daa
clc
aas
pop
clc
xchg
out
dec
scas
fistps
adc
add
dec
sahf
mov
xor
add
in
mov
clc
in
jp
insb
in
pop
mov
sahf
sbb
clc
pop
clc
sbb
in
cld
jmp
mov
lcall
add
mov
call
cld
jmp
jp
test
clc
inc
add
dec
and
into
adc
add
add
cmp
clc
inc
cld
jmp
aaa
outsl
imul
icebp
mov
out
and
add
lea
add
add
ja
clc
cwtl
push
ret
mov
xchg
mov
clc
pop
xchg
jle
repnz
lahf
pop
inc
clc
sar
clc
int
daa
clc
icebp
nop
lret
inc
add
add
add
lret
mov
fnstcw
pop
es
jecxz
fisubrl
sbb
xor
add
xchg
mov
push
mov
ficoml
add
rcrl
notl
add
inc
clc
mov
ret
clc
cmp
push
lcall
test
clc
xor
add
or
add
xchg
push
inc
clc
push
cmpsb
clc
lret
test
clc
adc
add
xor
add
movntq
out
cmc
fistl
sti
adc
loopne
cmp
clc
cmp
cmp
add
dec
je
add
add
test
mov
clc
cmp
loopne,pn
pop
jne
mov
clc
cmp
add
add
movzwl
cld
jmp
sahf
insb
dec
pop
inc
clc
cmp
lcall
mov
repz
mov
inc
clc
test
cmpsl
clc
fstpt
jp
mov
call
mov
cld
jmp
sub
je
fcmovu
imul
std
xor
add
xor
add
xchg
ja
clc
jno
add
cld
push
clc
xchg
xchg
cmp
lods
jne
dec
rolb
add
xor
add
jge
adc
add
inc
add
ljmp
add
or
test
cmp
fldt
add
xor
add
add
inc
and
cld
jmp
or
jp
clc
leave
xchg
pop
sahf
cld
aad
es
sub
add
add
test
rorl
sar
clc
int
mov
adc
add
xchg
in
cmc
in
ds
inc
clc
out
pop
xchg
test
sbb
mov
add
add
incl
jmp
sub
inc
pop
sar
mov
add
add
push
dec
rdtsc
add
pushf
sarl
in
stc
xor
add
inc
add
pop
cmpsb
clc
pop
clc
imul
add
add
add
in
fucomip
repz
push
mov
test
jp
mov
sbb
pop
insl
into
rolb
lret
mov
repz
stos
add
add
insb
fistpl
add
add
add
add
add
add
into
fnstenv
ror
aas
jle
mov
add
mov
dec
jp
push
mov
ret
push
push
sbb
scas
pushf
movsl
clc
aad
mov
add
insb
fsubs
clc
icebp
push
clc
cmc
das
cmp
push
add
add
add
repz
sbb
je
clc
or
clc
inc
clc
jg
clc
mov
cmc
cmp
xchg
pop
and
cs
icebp
push
cmpsb
clc
sub
add
add
lahf
cli
out
xchg
sub
outsl
and
add
and
add
mov
imul
clc
mov
in
push
inc
clc
div
je
add
add
and
cld
jmp
push
xchg
sub
shlb
clc
jne
xchg
cld
jmp
xor
or
clc
sar
mov
sbb
add
and
cld
jmp
sbb
cwtl
push
push
cld
jmp
or
lods
cmp
fists
clc
je
sbb
cmp
xor
clc
pop
lods
fs
pusha
add
inc
add
lret
pop
push
repz
mov
clc
insl
lret
xchg
mov
sarl
add
pushf
hlt
mov
fwait
dec
cltd
cli
pop
fs
or
xlat
mov
push
sbb
add
and
pop
aas
sbb
clc
int
popf
adc
add
out
mov
add
mov
add
cmp
add
xor
push
add
xchg
test
sub
adc
add
into
iret
add
js
jmp
clc
add
add
decl
jmp
xor
negl
pop
or
add
add
cmc
leave
mov
jnp
add
cld
jmp
add
pop
adc
add
out
cmp
div
pusha
add
incb
add
push
mov
xchg
cmpsb
clc
lret
cmpsb
clc
mov
mov
mov
clc
stc
in
sub
add
sbb
in
int3
mov
sbb
add
add
call
data16
ds
lss
add
add
clc
je
add
data16
imul
add
pop
pusha
add
jae
add
add
sti
cwtl
enter
add
fmull
mov
cmp
clc
add
add
add
inc
clc
shl
mov
jl
add
das
cwtl
mov
pusha
cld
jmp
movsb
cmp
aad
clc
ror
into
outsb
add
add
mov
pop
pop
sar
mov
push
pop
jp
pushf
repz
clc
xchg
mov
pusha
add
sbb
jae
add
fisttpll
dec
pop
lret
movsb
clc
cs
xchg
stos
std
loope
pop
jle
clc
jns
rep
cld
jmp
sub
and
clc
inc
clc
dec
or
icebp
mov
clc
scas
lcall
add
cld
sahf
data16
fwait
ss
add
clc
lret
fists
add
inc
clc
cmp
add
fs
mov
cld
jmp
mov
add
cwtl
mov
sar
clc
add
sbb
add
clc
xor
add
nop
pop
test
fdivrl
mov
add
dec
test
sar
jo
add
jno
add
fimuls
adc
ljmp
add
push
add
xor
add
ds
xor
sub
mov
call
stos
jl
pop
mov
add
mov
clc
incb
add
ret
add
push
push
clc
mov
or
sahf
sahf
sbb
add
sub
clc
mov
loopne
mov
add
cmc
mov
ret
clc
and
add
mov
pop
adc
add
jmp
mov
loopne
mov
clc
sbb
clc
add
add
push
or
stc
mov
pop
and
add
xlat
fimull
add
add
clc
stos
sar
stos
push
push
pop
shrl
mov
clc
out
nop
xlat
outsl
sub
push
sar
mov
dec
mov
sahf
sub
clc
clc
push
add
xchg
mov
decl
int
decl
scas
sub
pop
cmc
sahf
gs
fisubl
mov
mov
lcall
add
xor
data16
cmp
fsts
add
cmp
add
clc
or
mov
daa
clc
mov
clc
or
add
clc
mov
pop
push
aaa
pusha
add
cmp
dec
and
add
add
and
add
js
xor
add
add
cmp
add
pop
ss
ret
movsb
sub
clc
mov
add
enter
xbegin
and
add
clc
jmp
add
inc
clc
inc
clc
out
push
add
dec
jle
mov
clc
mov
out
inc
clc
test
sub
dec
outsl
xchg
inc
add
adc
add
add
rolb
add
sub
push
cld
jmp
lods
cmovs
outsl
dec
cmp
pop
jnp
add
clc
movsb
clc
and
add
and
add
push
inc
cld
jmp
test
or
cltd
fsubs
add
out
mov
clc
mov
add
xchg
ficomps
sbb
push
ret
jge
es
add
movsb
clc
add
cmp
add
add
jp
or
mov
jo
add
lcall
lods
mov
adc
jnp
lahf
dec
scas
movsb
clc
pop
cmpsb
clc
addr16
lret
pusha
add
push
jmp
psrad
out
stos
jno
add
jb
add
fldenv
inc
clc
inc
clc
adc
add
xchg
fisttpl
xchg
pop
push
add
adc
add
outsb
cltd
out
sarl
in
push
clc
idivl
jmp
jmp
fmulp
or
insb
sub
dec
or
clc
nop
mov
test
clc
cmp
xchg
xchg
push
push
add
lods
insl
push
add
fiadds
clc
int3
dec
and
add
clc
xchg
inc
add
dec
ljmp
add
mov
loopne
pushf
cwtl
out
and
add
clc
mov
adc
add
lock
int3
test
loope
in
sbb
insl
pop
mov
jno
add
cmp
add
mov
cmp
clc
mov
clc
fwait
shrl
xchg
iret
inc
clc
xor
add
rcrl
insb
mov
clc
pusha
add
pop
xbegin
ret
sbb
add
dec
jae
add
mov
cld
jmp
push
sub
hlt
push
add
loope
lahf
or
add
add
jmp
jle
ljmp
or
pushf
dec
xor
add
add
mov
clc
xchg
jmp
clc
ja
sub
lahf
out
ss
jg
clc
xabort
and
add
jbe
clc
mov
add
sub
jle
clc
repz
inc
clc
push
push
jb
add
add
out
mov
add
pop
test
jle
clc
push
movsl
clc
mov
add
jno
add
sbb
add
jmp
cmp
inc
add
sbb
add
ljmp
test
clc
loop
push
add
sbb
jne
mov
hlt
test
clc
pop
sbb
loopne
data16
cltd
out
addr16
xor
add
cmp
add
dec
lea
add
dec
push
add
push
add
sbb
dec
in
decl
or
lods
dec
ss
clc
inc
clc
pop
loopne
push
add
mov
jo
add
es
fcomip
xchg
in
divb
add
add
adc
decl
mov
mov
adc
sub
fcompl
push
add
adc
fs
push
add
iret
add
add
fists
xabort
add
es
hlt
adc
add
mov
push
ss
ret
sub
mov
add
add
imul
jae
add
add
xor
add
cmp
adc
clc
lock
clc
cmp
mov
fbstp
mov
out
out
ds
inc
clc
movsl
clc
movsl
clc
std
je,pn
xchg
mov
mov
cmpsb
clc
paddusw
test
ret
add
call
push
ret
scas
sub
mov
fstps
dec
popa
add
mov
push
test
push
add
dec
push
add
jg
sahf
jg
push
push
add
and
add
loop
cmp
clc
pushf
pop
add
add
sar
pop
xor
add
add
inc
add
lods
cmp
clc
add
add
rclb
clc
or
cmp
test
stc
sub
lock
pop
movsl
clc
push
clc
rorb
xchg
xor
add
clc
inc
add
pushl
ss
ret
sub
add
push
cwtl
loopne
push
add
in
jmp
clc
dec
jle
arpl
add
jns
add
mov
add
jno
add
lret
mov
imul
cld
jmp
sub
sar
push
stos
ss
ret
xchg
sub
test
add
xor
add
rclb
pop
outsl
cld
jmp
sub
cld
cld
jmp
lea
cmp
cltd
dec
xchg
icebp
mov
add
leave
inc
add
cs
mov
clc
push
imul
sub
lods
mov
add
add
inc
add
mov
clc
data16
cmc
fidivs
add
pushf
sbb
popa
cld
jmp
push
jg
aaa
sub
add
loop
int
ret
clc
stc
rcll
add
adc
add
cld
jmp
cmp
loop
xchg
mov
add
jb
add
ljmp
rcrb
jmp
sub
das
dec
aas
inc
add
push
pop
ffreep
clc
add
add
aad
cmp
add
insl
cld
cmp
push
ss
ret
add
sbb
jmp
pop
push
add
rolb
pusha
add
mov
push
add
shrl
add
enter
mov
out
mulb
add
cmc
sti
fwait
or
clc
push
add
ja
test
push
mov
fdivrp
pushf
in
add
xchg
sbb
sub
add
insl
and
inc
clc
mov
add
negb
nop
xor
add
add
and
cli
ret
clc
sar
sbb
out
jo
add
add
xor
add
adc
push
or
clc
cmpsb
clc
sbb
test
sti
cld
jmp
push
clc
ret
clc
add
add
mov
scas
sub
cld
jmp
nop
sub
std
inc
clc
imul
add
std
out
movsb
clc
jp
and
add
add
es
mov
cmp
clc
enter
scas
dec
push
add
pop
jne
xchg
mov
pop
mov
dec
mov
add
out
cmp
cwtl
sub
add
out
mov
jne
push
add
ss
cmp
pop
clc
mov
xbegin
add
mov
ss
clc
mov
jge
jp
add
jl
testl
call
mov
pop
in
or
mov
iret
sub
xor
clc
lods
clc
and
add
dec
int3
loopne
push
popl
cld
jmp
cmpsb
jno
xor
add
cmp
add
into
mov
add
clc
loopne
mov
jecxz
inc
add
sub
sub
add
xchg
insb
insl
sbb
jmp
sub
scas
jge
inc
cld
jmp
dec
and
xor
pop
xor
add
xor
add
mov
add
out
xor
add
clc
xor
mov
jl
call
clc
add
add
cmp
cmpsb
clc
cmpxchg
sbb
clc
jae
add
sub
cmp
add
push
add
sub
adc
mov
dec
lock
clc
shll
add
inc
add
testl
mov
xchg
test
add
jmp
add
cmpsl
clc
bound
add
cmp
xor
add
imul
add
xor
cmp
clc
cmp
add
imul
xor
add
mov
add
add
sub
clc
leave
cmpsb
clc
mov
clc
shrl
testl
hlt
lods
in
fistpll
xor
add
clc
cs
clc
push
add
sub
push
add
add
add
xor
add
clc
xchg
jle
add
outsl
and
add
mov
add
jb
add
add
insl
sar
clc
std
sahf
ljmp
add
cld
jmp
xchg
nop
or
leave
int3
and
add
mov
fidivl
sub
clc
bnd
add
add
mov
ffreep
clc
xor
add
stos
xor
add
add
add
in
mov
clc
sbb
stos
sbb
cmp
mov
add
add
adc
add
lcall
cmp
clc
mov
cmp
out
jae
add
clc
pusha
add
mov
clc
cld
or
mov
cld
jmp
add
add
pushl
divb
push
ret
jg
xor
and
add
sbb
add
jmp
xor
sar
cmpsb
clc
pop
inc
add
sar
stos
in
push
add
arpl
add
arpl
add
push
imul
jns
ret
cld
jmp
xor
xchg
add
clc
cltd
inc
clc
loope
out
lcall
inc
add
aam
clc
out
ds
push
add
cmp
clc
loope
lods
cld
popf
pop
test
clc
popf
or
sbb
repz
jmp
clc
adc
add
xabort
es
mov
in
lock
aam
clc
aam
mov
add
es
clc
pusha
add
cmc
mov
sub
insb
and
add
push
add
js
pushf
mov
sarl
jl
sbb
jmp
xchg
test
add
xor
add
insl
movsb
clc
dec
xor
add
add
jbe
add
xor
add
stos
cwtl
and
add
pushf
inc
add
cmp
clc
in
lcall
push
mov
push
aas
sub
int
sbb
clc
mov
add
sbb
sub
add
jo
add
xchg
scas
jmp
mov
mov
add
ss
movsb
clc
ja
add
pop
out
in
out
pop
jp
clc
mov
testl
and
push
ret
popa
sub
lcall
test
xor
add
jb
add
ret
cld
jmp
fs
lret
and
add
add
sub
and
mov
clc
xor
add
pusha
add
cld
jl
sbb
fstl
clc
inc
lock
jmp
push
sub
and
dec
add
add
popa
add
out
popa
add
fwait
mov
jns
pop
push
ja
sbb
jb
add
add
pop
cmp
daa
clc
cmc
movsb
clc
xor
aas
mov
push
fdivr
ljmp
shrb
xchg
pop
clc
mov
insl
ja
add
jg
sahf
push
clc
stos
mov
insl
xchg
pusha
add
lcall
add
add
push
clc
push
sar
out
jae
add
adc
clc
stc
xchg
fsubp
clc
adc
add
xor
mov
inc
add
cld
inc
add
jl
push
cli
aam
add
std
lods
test
repz
clc
popf
insb
arpl
add
frndint
popa
add
inc
clc
xchg
mov
add
jmp
or
mov
xchg
in
cmp
inc
add
jmp
lret
mov
inc
clc
adc
add
dec
iret
sub
lret
lahf
test
ds
xor
add
sbb
std
cmpsl
clc
inc
add
test
gs
dec
sub
fimuls
addr16
jae
add
pop
dec
jb
add
add
push
mov
add
jo
add
mov
add
add
clc
inc
add
cmpsl
clc
sti
test
data16
imul
pop
icebp
jle
clc
or
xchg
mov
clc
stos
lret
clc
mov
mov
testb
sub
clc
sub
clc
sub
cmp
call
xlat
add
add
pop
cmp
sbb
in
sub
scas
xchg
aaa
lret
fcompl
add
stc
mov
pop
dec
fcomps
sar
clc
dec
fstpl
ret
cld
jmp
imul
pushf
mov
clc
sar
lcall
add
add
add
jnp
adc
cli
xchg
inc
add
clc
or
and
fwait
sbb
jmp
sub
jno
add
mov
sub
jns
add
jno
add
jg
test
xor
add
imul
add
add
add
outsb
or
xbegin
jmp
fsts
cwtl
loope
xor
add
rcll
loopne
jmp
add
stos
cmp
add
repz
push
jge
clc
loope
add
mov
mov
clc
rcrb
enter
add
add
loopne
or
push
add
sar
jo
add
sub
fdivrl
pushf
jge
xchg
dec
cmp
add
dec
jg
and
clc
or
enter
clc
iret
inc
add
cmp
mov
clc
rcl
fcoms
add
gs
mov
push
add
add
xlat
mov
clc
leave
jmp
and
add
or
addr16
fmuls
add
dec
notb
in
in
push
add
sub
decb
add
add
add
push
add
xor
add
iret
mov
stos
ds
add
fwait
sub
sahf
addr16
mov
add
stos
add
pop
imul
and
add
cwtl
lea
clc
push
outsl
cs
sub
add
add
daa
clc
pusha
add
loopne
cmp
add
je
push
cld
jmp
cmpsb
fwait
das
xor
add
ss
ret
sub
add
fisubl
imul
rorl
add
mov
push
add
popa
add
mov
adc
fs
call
add
add
jmp
cmp
clc
js
sbb
es
jns
test
aaa
das
add
add
clc
in
or
scas
into
cmc
or
clc
mov
cld
jmp
movsb
ja
and
insl
inc
add
neg
nop
inc
clc
pop
ja
and
xor
add
mov
add
shll
cli
push
rep
clc
mov
clc
in
sub
add
add
mov
push
lods
cld
jmp
sub
sub
push
add
repz
dec
push
cld
jmp
sbb
or
es
jg
dec
push
cld
jmp
sub
hlt
xbegin
cmp
push
mov
cld
jmp
or
cmp
clc
mov
sbb
xchg
or
add
enter
test
push
add
ljmp
xchg
popa
add
push
cmp
cld
jmp
add
sub
fistpl
mov
pop
loop,pt
test
add
pop
dec
jle
add
add
clc
enter
and
xchg
jne
nop
cmp
add
pop
clc
lods
jmp
add
add
cmp
mov
jbe
add
pop
push
xor
add
fs
mov
add
cmc
leave
lahf
repnz
add
push
add
xchg
insb
sub
shrb
clc
pop
pop
sbb
add
pop
and
add
fcomp
add
ficompl
add
lods
and
add
rcll
add
adc
add
clc
lods
mov
fs
cmp
jmp
rorb
inc
add
push
fstps
clc
jo
add
add
cli
int3
loopne
adc
add
add
add
aas
push
add
mov
js
stos
test
add
ja
xor
add
cmpsb
clc
sarb
imul
daa
clc
out
sbb
sub
xbegin
cmpsb
clc
cmp
jl
clc
sub
add
clc
dec
dec
and
add
es
mov
fcomps
inc
clc
jnp
add
pop
out
lahf
lods
rclb
push
cld
jmp
nop
inc
add
pop
imul
test
xchg
jae
add
cwtl
mov
clc
and
add
dec
call
clc
cmp
clc
sub
adc
add
clc
enter
add
sub
cltd
inc
add
es
popl
cmpsb
clc
xchg
jl
add
clc
addr16
sti
push
add
movsb
clc
fwait
sti
sbb
repz
inc
clc
scas
insl
xbegin
adc
add
or
mov
cld
jmp
ret
movsb
clc
aad
cmc
mov
add
scas
scas
xchg
add
add
add
or
clc
dec
aaa
in
inc
add
push
clc
jmp
int
add
jl
clc
jg
gs
jl
mov
add
inc
clc
xabort
clc
push
add
in
cmp
cmc
push
arpl
add
add
lret
gs
shl
or
jg
and
add
addr16
xchg
mov
jnp
mov
add
mov
mov
pop
and
add
jmp
sub
dec
dec
cwtl
and
add
clc
jecxz
decl
test
stc
cld
jmp
xchg
dec
fidivrs
pop
sub
and
add
pop
jns
inc
add
clc
fs
jbe
test
jae
add
add
pop
mov
or
clc
cmp
xlat
fsubrs
xchg
clc
sbb
clc
fiadds
add
mov
lret
add
mov
add
pop
dec
jne
das
pop
push
imul
mov
or
adc
add
add
lods
icebp
add
add
add
pop
or
push
clc
mov
clc
lods
out
add
push
call
mov
jmp
sub
cmp
test
sahf
popf
scas
jo
add
xchg
insl
dec
inc
clc
nop
cmp
clc
test
add
add
pop
or
in
inc
add
mov
fsubl
add
cmp
add
mov
add
or
sub
mov
clc
xor
add
mov
jg
scas
cmp
nop
cld
and
add
outsb
or
add
jg
xabort
add
mov
sar
pushl
inc
xor
je
cmp
add
push
incl
repz
jmp
subb
adc
cmp
jne
push
add
ss
ret
sub
loope
push
stc
jmp
or
mov
loop
mov
add
push
push
cld
jmp
inc
sub
stos
push
icebp
ljmp
sub
adc
add
pushf
pop
push
mov
cld
jmp
push
cmp
clc
xchg
arpl
add
gs
mov
enter
clc
cmp
mov
xchg
xchg
in
pop
mov
mov
cld
jmp
sub
repnz
pushf
pop
out
mov
xor
add
ret
clc
data16
mov
add
lea
push
add
leave
xlat
sbb
push
or
clc
xchg
cmp
clc
mov
clc
lods
push
mov
out
dec
sub
scas
lock
pusha
add
or
cmp
add
dec
mov
repnz
add
clc
sub
nop
fisttpl
add
pop
mov
add
ds
sbb
loope
sar
inc
clc
outsb
sbb
cld
jmp
xchg
jge
xor
call
jmp
sub
push
clc
sahf
mov
add
inc
add
outsl
jg
push
pop
xchg
pop
dec
xor
dec
sbb
mov
decl
mov
or
add
jmp
inc
add
xlat
mov
clc
cmpsb
clc
clc
adc
add
xchg
addr16
popa
add
clc
cmp
add
je
cld
jmp
gs
int
clc
push
pop
cld
jmp
add
outsl
je
cmp
in
pop
sub
jge
add
lahf
loop
decl
test
mov
cld
jmp
and
jo
add
insb
das
gs
cltd
xchg
pop
xor
add
movsl
clc
adc
add
out
test
xchg
mov
add
or
clc
and
add
nop
sub
add
dec
out
add
add
clc
inc
clc
xor
add
clc
pop
outsl
add
add
push
pop
cld
jmp
clc
loope
xor
add
pop
imul
cmp
add
cmp
add
cmp
add
or
add
add
clc
fwait
out
pop
and
add
clc
xchg
std
clc
shr
ja
mov
clc
pop
in
inc
clc
inc
clc
mov
clc
fs
or
add
clc
mov
push
ret
cwtl
pop
adc
add
push
clc
xchg
aad
clc
and
add
inc
clc
sub
or
lret
lock
sbb
jmp
push
mov
pop
xor
add
clc
jb
add
pop
call
xabort
or
mov
clc
lret
mov
add
add
insl
dec
movsl
clc
adc
add
cmp
clc
or
cmp
add
xabort
mull
clc
sar
jae
add
lret
insb
lock
pop
stos
aas
pop
mov
xchg
test
mov
incb
add
insl
add
add
pop
sbb
xchg
int3
xabort
fnsave
add
add
cmp
pop
cwtl
push
clc
sub
jmp
cwtl
popf
js
clc
outsl
dec
xchg
cmp
xchg
data16
mov
test
cmp
sub
add
push
add
clc
aaa
clc
test
dec
inc
add
popa
add
sar
cmp
clc
aas
lret
in
imul
enter
inc
sub
push
add
mov
add
xor
jne
sub
clc
lods
sar
or
add
add
test
mov
shll
add
pop
mov
add
xchg
divb
clc
stc
pop
xchg
xor
add
xchg
jge
fsub
clc
cmpsb
clc
push
mov
add
add
jmp
push
mov
dec
mov
add
insl
repz
dec
or
add
jnp
stos
xchg
lock
xor
fstps
pusha
cld
jmp
xor
add
rcl
mov
clc
ljmp
ss
add
cmp
push
add
sub
xchg
xchg
scas
mov
out
cmp
add
mov
cmp
call
and
add
add
jmp
ja
int3
rcll
fdivs
add
and
jns
or
clc
ss
mov
cld
jmp
sub
add
clc
pop
add
push
add
js
mov
lcall
or
adc
add
mov
mov
cld
jmp
popf
cmp
clc
jnp
clc
sahf
gs
ss
mov
add
dec
jmp
sub
inc
add
pop
xor
add
add
add
clc
sahf
mov
gs
push
dec
jno
add
push
add
arpl
add
clc
mov
add
sub
sbb
push
in
jmp
cwtl
sub
add
pop
push
clc
and
adc
add
push
push
clc
insl
mov
mov
or
cmp
cmpsb
clc
jmp
add
add
inc
add
ds
lods
iret
loope
dec
sbb
clc
notl
add
jbe
pop
clc
cli
inc
clc
cltd
mov
clc
int
stos
jl
add
icebp
pop
sti
cmc
daa
clc
mov
clc
xor
add
aas
cmp
nop
decl
stos
decl
clc
lret
xor
add
xor
pushf
mov
mov
xlat
jmp
dec
xchg
push
icebp
out
cmp
add
mov
loop
sub
mov
push
xchg
sub
clc
movsb
clc
and
clc
sbb
inc
clc
out
stos
hlt
inc
add
xchg
cld
sub
out
add
ret
clc
mov
loop
test
add
or
clc
iret
pop
mov
jae
add
adc
add
clc
push
add
leave
js
loopne
clc
cltd
xchg
sub
pop
add
add
add
mov
aas
aad
add
add
add
add
dec
adc
add
addr16
xchg
ljmp
int3
aas
aad
stos
icebp
dec
mov
scas
cmc
mov
daa
clc
fidivl
imul
mov
cmp
add
sub
jnp
add
cmp
clc
outsb
xor
add
add
add
mov
and
add
add
clc
ss
das
sbb
add
xor
add
in
sbb
add
xchg
dec
mov
add
ja
add
or
add
add
pop
xchg
mov
add
push
dec
aas
aas
dec
hlt
push
add
sbb
cld
jmp
sub
imul
sub
dec
mov
add
popf
dec
push
jmp
fs
sbb
add
sbb
fst
fsubrl
enter
rcl
jmp
sub
in
jmp
test
clc
lret
sub
test
clc
xor
add
add
add
push
jp
test
fwait
cmp
aad
arpl
add
clc
mov
clc
dec
jg
add
add
cld
jmp
jno
pop
aad
clc
ret
clc
sbb
jns
cli
jns
add
fucom
clc
fsqrt
lods
clc
nop
cmp
mov
sub
pushl
sub
xlat
lods
negb
add
dec
fstpl
mov
add
mov
dec
mov
xchg
icebp
mov
bound
add
mov
push
clc
cmpsb
clc
push
ss
and
add
add
fdivs
add
push
rcll
add
add
add
add
xor
add
add
incl
jno
add
inc
sub
clc
push
sar
notb
idivl
adc
add
add
mov
test
clc
adc
add
je
js
add
adc
add
sub
ljmp
mov
cld
jmp
sahf
xchg
mov
scas
aas
sbb
add
clc
lea
or
jmp
push
aaa
jno
pop
clc
mov
dec
clc
ds
pop
bound
add
add
mov
jns
push
mov
daa
clc
add
add
insl
add
add
aam
add
cmp
clc
pop
inc
add
push
add
and
add
push
add
mov
xor
add
push
faddl
jnp
clc
cmp
xchg
insl
jo
add
clc
xor
jl
xabort
pop
clc
cmp
add
int
push
lret
arpl
add
jmp
or
out
push
cmp
clc
jae
add
pusha
add
xbegin
push
cld
jmp
push
clc
pop
push
mov
ss
ret
fs
pushf
jns
add
mov
cld
jmp
push
pop
sub
rol
clc
dec
cli
out
mov
cmp
pop
pop
add
enter
add
clc
push
repnz
rorl
shr
dec
mov
pop
push
sar
clc
in
popf
rcrl
fildll
push
cld
jmp
push
das
or
add
mov
add
add
sahf
mov
das
sub
fwait
sub
clc
push
clc
bound
add
hlt
ds
mov
push
clc
test
and
add
add
mov
mov
cld
jmp
and
fcomip
push
aas
sub
ljmp
add
jl
clc
ficompl
add
adc
add
add
adc
add
clc
repz
test
sbb
sar
adc
add
add
sbb
jbe
clc
jg
xor
cld
jmp
sub
jle
mov
adc
dec
popa
add
iret
in
frstor
sar
insb
push
add
repz
dec
push
loopne
rol
clc
xor
mov
jo
add
mov
mov
sub
push
ret
jge
adc
add
pop
xchg
xchg
stos
outsl
movsb
clc
xor
in
mov
clc
jns
clc
movsl
clc
pop
jl
dec
cmp
push
mov
aas
fnstsw
mov
outsb
ljmp
test
add
clc
add
add
clc
lods
cli
stos
adc
add
ficoml
add
in
ja
jecxz
mov
pop
mov
ret
fisttpl
add
jae
add
jge
clc
rcll
add
push
add
dec
xchg
or
push
add
push
test
negl
inc
add
jae
add
cmp
aam
xchg
clc
mov
xor
cltd
decl
cld
jmp
push
lods
mov
vminps
clc
fidivrl
fidivs
sbb
sub
cmpsl
clc
and
add
pop
fisttpll
int
clc
ret
lret
xchg
addr16
sub
add
xchg
mov
pusha
jmp
std
xchg
jo
add
add
dec
leave
popa
add
mov
sar
or
add
jnp
add
pop
inc
add
in
sub
add
data16
je
mov
add
mov
add
notl
repnz
daa
clc
jle
clc
mov
clc
mov
sbb
and
add
add
repz
push
push
jl
jmp
sub
dec
sbb
jmp
mov
adc
sbb
add
add
addr16
sub
clc
mov
add
cmp
pop
cwtl
sbb
add
popa
add
or
clc
cmc
out
push
clc
jnp
add
inc
add
imul
mov
cld
jmp
popa
test
je
clc
cltd
adc
add
mov
clc
jns
jae
add
mov
add
push
cs
and
add
add
dec
in
sub
jbe
loope
and
mov
add
fildl
add
lret
rcll
add
stos
lcall
cli
push
loopne
jp
clc
in
mov
mov
cmp
sub
lods
dec
ds
cmp
add
xor
add
pop
pop
ret
clc
aas
mov
ds
call
ret
sub
lret
dec
lcall
add
lret
clc
outsb
dec
dec
mov
clc
data16
and
add
cmp
fimuls
add
pop
cmp
dec
push
sbb
jmp
cmpsb
sub
push
ds
push
add
mov
xlat
sahf
iret
jno
add
gs
jo
add
sub
clc
pop
mov
mov
fisubs
add
lods
mov
add
ror
cld
jmp
sub
es
adc
add
nop
sbb
clc
push
add
dec
movsb
clc
hlt
dec
int3
adc
add
clc
vandnps
add
clc
mov
sub
pop
sub
mov
add
pop
pop
mov
clc
std
in
cmc
jns
dec
xor
fs
cmpsl
clc
data16
cmp
sbb
clc
gs
ljmp
clc
jae
add
in
pop
int
adc
in
or
lods
pop
pop
pop
divb
add
mov
jno
add
cmpsb
clc
add
nop
mov
add
call
adc
add
clc
shlb
clc
mov
and
or
xbegin
clc
adc
add
add
clc
out
cs
add
es
sub
pusha
add
cmp
clc
scas
sub
push
add
ss
ret
cmpsb
push
sub
pop
clc
mov
stos
aam
pop
sub
add
add
or
movsl
clc
js
cmp
mov
add
jo
add
test
in
cmp
jne
cld
jmp
test
mov
inc
add
imul
add
sbb
add
cli
shrl
add
and
add
add
sbb
push
sbb
jmp
add
add
push
clc
cli
mov
clc
jnp
xor
add
add
mov
clc
xor
add
add
dec
mov
dec
sbb
add
sar
clc
call
test
mov
negb
mov
push
add
aas
pop
mov
push
ja
cmp
add
lahf
sbb
xabort
clc
std
test
jmp
clc
sbb
jmp
cli
dec
jge
push
into
mov
add
arpl
add
clc
idivb
sbb
and
clc
pusha
add
out
pop
lea
clc
push
clc
addr16
xabort
aam
clc
fwait
mov
clc
sub
sahf
test
xlat
sbb
ret
notl
add
clc
jae
add
clc
cmp
cmovae
add
int3
and
jb
add
add
jmp
push
push
sbb
add
mov
mov
clc
sub
add
imul
xor
add
add
or
clc
std
lcall
pop
outsb
xchg
int3
inc
add
pop
clc
push
push
add
cs
jbe
add
or
add
pop
stos
push
data16
and
clc
fimull
mov
pop
icebp
mov
clc
dec
ficomps
cli
xchg
pop
test
pop
js
ficoms
add
push
add
cmp
mov
lods
enter
je
clc
lock
fisubrs
dec
pop
xchg
sub
add
ss
test
add
dec
dec
inc
clc
nop
xor
scas
sub
ss
xchg
aad
in
mov
push
cmp
rcll
arpl
add
loop
mov
add
and
add
pop
ret
clc
dec
gs
vxorps
adc
add
xchg
xchg
pop
sbb
xor
add
inc
add
sub
mov
arpl
add
adc
add
movsb
clc
in
sub
add
out
sub
inc
clc
or
arpl
add
sub
mov
clc
sbb
ret
sub
jne
gs
clc
adc
pop
jmp
add
mov
add
clc
notl
push
add
ja
jo
add
clc
add
add
add
and
add
and
xor
add
add
or
add
clc
push
xchg
cmp
imul
jno
add
out
fs
mov
clc
das
icebp
jge
push
adc
add
push
add
fmulp
jle
cli
ja
inc
add
sub
cmc
cwtl
push
add
xchg
icebp
je
decb
hlt
mov
clc
jmp
pushf
ffree
clc
and
aam
cmpsb
clc
scas
mov
lcall
rcrl
add
xor
add
aad
clc
add
add
add
push
clc
lods
jmp
jae
add
cld
inc
clc
lret
xor
add
scas
add
add
clc
and
add
loop
mov
lea
not
adc
cmp
add
imul
add
cmp
cmp
jg
cmp
xlat
insl
stos
sub
add
ret
fdiv
pop
aas
jae
add
clc
daa
clc
xchg
cmp
clc
xor
add
jmp
mov
add
pop
scas
sbb
clc
fisubrs
inc
clc
ficompl
add
mov
notb
add
lods
push
mov
xor
add
hlt
xbegin
adc
add
popf
testl
repz
arpl
add
mov
jp
jmp
rorl
ffreep
clc
dec
mov
clc
mov
nop
push
clc
mov
jl
add
cmp
clc
push
cmp
add
outsb
dec
leave
xchg
dec
pop
inc
add
lret
mov
loope,pn
hlt
ret
outsl
xchg
jg
ja
clc
cmp
clc
mov
out
xchg
inc
clc
adc
add
lock
add
sar
jne
data16
lods
add
add
clc
pop
xor
data16
mov
xchg
popa
add
sbb
cmp
aaa
daa
clc
push
add
stc
loope,pt
cmp
adc
add
pop
adc
add
lret
push
clc
inc
clc
cmp
add
cmp
mov
add
add
and
add
add
xchg
fistpl
mov
add
add
sbb
add
loope
sbb
add
add
xchg
jmp
dec
mov
popa
add
and
addr16
cld
jnp
scas
pop
hlt
and
add
mov
clc
mov
test
bound
add
mov
cltd
jg
add
add
aas
xor
bound
add
add
sbb
fisttps
std
sti
sbb
sub
aaa
scas
cli
arpl
add
clc
mov
push
clc
cmp
or
adc
add
shll
clc
inc
clc
es
out
cmp
out
mov
add
roll
add
clc
mov
gs
push
push
xchg
rcr
in
adc
add
add
test
pop
std
mov
xchg
push
sub
xchg
mov
clc
sbb
xor
or
add
pop
out
jae
add
pop
pop
jl
add
mov
push
nop
arpl
add
clc
and
add
imul
clc
sar
clc
adc
mov
clc
aaa
jns
pop
mov
cmpsb
clc
xchg
es
test
inc
clc
push
ret
clc
mov
mov
clc
add
add
add
mov
data16
jmp
lahf
in
push
add
lods
inc
clc
insb
mov
and
add
popf
call
clc
xor
add
insb
inc
clc
sub
add
inc
add
divb
sub
sarb
ret
clc
mov
fwait
out
cmp
clc
sbb
xor
add
add
add
mov
cwtl
cs
sbb
clc
and
xor
add
add
stos
push
add
iret
addr16
inc
add
xor
add
clc
out
cmp
decb
js
adc
add
cmp
and
mov
push
mov
clc
fsts
enter
mov
xchg
or
add
mov
mov
outsb
aas
mov
add
test
imul
sub
clc
add
add
xlat
movsl
clc
dec
int
add
movsb
clc
out
sti
fidivl
add
mov
clc
jb
add
cld
xor
add
pop
loope
xor
int
cmp
mov
mov
clc
inc
clc
lea
and
add
clc
in
loope
xchg
aad
clc
cwtl
xchg
dec
jg
in
lods
insb
cmp
xchg
xchg
sar
mov
add
js
clc
pushf
and
add
dec
cmp
add
add
pop
clc
adc
add
jp
adc
add
add
mov
jae
add
add
push
add
pusha
add
and
add
adc
add
clc
add
add
add
pop
xlat
cs
xor
dec
scas
lret
xchg
fildll
cmc
mov
xchg
dec
adc
add
fs
dec
mov
pop
into
jge
repz
add
push
add
jmp
or
mov
pop
jle
pusha
add
cmp
mov
clc
mov
clc
lahf
movzwl
clc
or
adc
add
sbb
clc
stos
insl
test
ljmp
pusha
add
cmp
adc
add
clc
add
dec
adc
add
add
cltd
cmp
clc
cmp
jmp
out
mov
test
xor
add
clc
cmp
add
ret
clc
loope
cmpsb
clc
xor
add
xor
clc
pop
cmovl
out
adc
faddl
add
cmp
lock
xbegin
add
jl
add
clc
dec
pop
and
add
push
insb
mov
aaa
xchg
clc
stos
xchg
fsubrl
add
jg
push
xchg
jae
add
add
clc
push
add
mov
or
popf
pusha
add
bound
add
test
mov
sbb
add
shlb
add
jle
xor
add
jle
jle
push
add
adc
add
fimull
cmp
sub
pop
ret
into
pop
xchg
ljmp
insb
xchg
xchg
pop
pop
sbb
shl
clc
clc
divb
xabort
pop
add
add
add
shlb
mov
sub
jo
add
add
test
lcall
and
loope
push
repz
fwait
pusha
add
das
icebp
repnz
add
hlt
in
push
add
xchg
cmpsl
clc
pop
or
loop
ja
cli
and
add
inc
clc
movsl
clc
out
js
shll
mov
cmc
mov
clc
mov
mov
pushf
dec
add
pop
and
add
cli
lret
sbb
add
sbb
add
add
dec
loop
ds
clc
jmp
clc
cld
bnd
mov
clc
clc
outsb
inc
add
mov
clc
jno
add
lods
xor
ds
jecxz
and
or
add
push
add
rclb
add
add
insl
add
add
aad
clc
sub
ret
and
add
and
add
clc
xor
add
nop
fdivs
add
sbb
pop
aam
outsl
out
lods
ss
pushf
ds
clc
mov
xor
cmpsl
clc
adc
add
mov
aas
push
mov
mov
fucomip
mov
add
cmp
clc
int3
mov
add
push
dec
out
nop
fsubrs
jo
add
ss
bswap
outsb
sbb
int
push
test
pushl
pop
sbb
clc
push
add
mov
cmp
jnp
clc
out
in
sahf
cmp
movsl
clc
ds
je
add
mulb
add
clc
mov
pop
push
add
js
loopne
int
add
adc
add
mov
cmp
cmp
cmpsl
clc
enter
clc
hlt
clc
out
adc
add
add
push
add
jae
add
scas
sbb
add
xchg
inc
add
add
xor
add
jge
add
add
dec
and
add
xor
add
clc
lret
mov
clc
pop
mull
add
clc
pop
cmp
and
add
mov
dec
imulb
in
imulb
scas
jg
push
clc
dec
test
and
add
xor
push
clc
adc
add
jnp
mov
pop
in
out
mov
cmp
pop
xchg
xbegin
clc
int
testl
xbegin
mov
xchg
insb
dec
mov
int
sub
addr16
stos
faddl
in
mov
lret
aas
lods
adc
add
and
add
inc
add
and
repnz
inc
add
ret
clc
test
popa
add
mov
add
in
mov
add
jecxz
add
add
pop
adc
add
rolb
add
cs
clc
push
js
push
cmp
jnp
nop
jle
and
or
in
cmp
add
jle
mov
lods
or
jo
add
add
inc
add
xor
add
clc
cmp
rcrb
jg
or
mov
cmp
mov
clc
cmp
xchg
rolb
jbe
clc
rcr
xchg
sub
clc
push
mov
icebp
dec
sbb
clc
jmp
clc
iret
mov
mov
cmp
and
stc
leave
mov
in
and
pop
cmp
dec
idivl
add
lret
xchg
scas
mov
add
push
int
sub
clc
mov
dec
int3
sti
fwait
out
arpl
add
inc
clc
cmp
add
inc
add
cmc
repnz
mov
add
push
xor
add
add
adc
add
movsl
clc
loop
sbb
clc
sub
cwtl
test
jae
add
popf
cmp
sar
mov
mov
lock
popf
mov
sbb
cld
xchg
sub
lret
scas
mov
push
add
clc
cmp
lcall
pop
cmp
clc
sti
pop
pop
ja
clc
push
add
shrl
add
sub
cmp
clc
fisubrl
int
jne
add
daa
clc
or
add
clc
push
sar
add
jle
push
clc
ljmp
in
scas
std
lahf
sar
or
push
inc
add
es
or
test
sub
add
pop
or
pop
add
sar
inc
add
hlt
jbe
add
pop
mov
adc
add
imul
repnz
cwtl
cmp
xor
add
pop
out
out
inc
add
mov
inc
add
pop
fidivs
add
pop
testl
xor
jns
add
rcrb
mov
mov
clc
pop
je
add
and
cmp
clc
xchg
sar
add
outsb
mov
add
enter
add
nop
jg
ret
clc
add
add
clc
pop
push
cmp
add
and
add
mov
clc
sbb
clc
popa
add
cmp
shlb
add
xchg
push
ljmp
add
add
clc
std
xabort
pop
clc
jmp
mov
in
nop
cmp
mov
add
xchg
mov
es
sub
add
and
add
ss
clc
test
pop
leave
pushf
cmp
add
mov
inc
clc
and
loop
fsts
add
add
add
or
add
enter
add
leave
push
push
adc
add
fcmovnu
mov
clc
xor
add
clc
jg
push
jb
add
ret
clc
mov
pushf
fiadds
add
mov
clc
inc
clc
dec
cmp
stos
lahf
cli
aaa
pop
ret
fists
jmp
dec
dec
aam
xchg
adc
add
clc
xabort
add
cmp
lods
push
add
add
dec
insb
aam
or
clc
in
jb
add
fwait
fwait
pop
into
xor
add
push
add
icebp
mov
popf
jno
add
clc
dec
out
cmpsl
clc
inc
add
sbb
mov
push
sbb
add
sbb
add
add
adc
add
clc
daa
clc
mov
hlt
je
dec
add
add
imul
clc
addr16
inc
add
mov
add
mov
in
roll
add
aaa
sbb
add
add
jb
add
imul
clc
pop
jg
push
add
stos
push
sar
push
clc
mov
clc
add
add
clc
mov
push
mov
mov
outsl
mov
add
add
add
mov
clc
adc
add
clc
daa
clc
mov
clc
pop
scas
dec
es
xor
add
add
sbb
push
jo
add
xchg
jb
add
clc
clc
clc
inc
add
mov
add
pop
clc
push
fsubl
add
jbe
sar
adc
add
clc
add
add
cmp
xbegin
ljmp
mov
and
scas
push
push
add
add
xchg
adc
add
push
sbb
clc
jp
aam
scas
inc
clc
fbld
mov
scas
mov
add
add
mov
cmp
fstpt
jmp
cmp
clc
and
add
dec
push
sahf
rclb
add
mov
outsl
shrb
outsl
lcall
or
lcall
pextrw
fwait
xlat
cmpsb
clc
jle
push
stc
or
add
add
add
test
clc
jg
clc
cmpsb
clc
cmp
pop
push
clc
rorb
test
testl
push
mov
clc
popa
add
test
jmp
int
clc
arpl
add
dec
gs
jp
add
addr16
xor
popf
ret
clc
dec
mov
xchg
xlat
aad
xchg
pop
aaa
sbb
fidivrl
cmp
dec
pop
xchg
jb
add
inc
clc
ja
clc
cmp
test
insl
mov
add
mov
xchg
fisubrs
out
lcall
hlt
pop
out
add
add
add
cmp
mov
add
lods
hlt
add
jne
inc
add
mov
es
sub
aaa
inc
clc
enter
add
test
fnstenv
or
clc
outsb
or
in
mov
clc
mov
popa
add
jl
xchg
fcmovne
xchg
mov
movsb
clc
xabort
popa
add
imul
sub
jb
add
mov
cmp
mov
xabort
clc
mov
mov
mov
add
jae
add
jg
lods
clc
add
add
mov
xchg
inc
clc
lcall
fldt
add
cmp
hlt
call
adc
clc
push
add
add
pop
push
add
mov
pop
add
add
add
pop
jg
add
scas
xchg
jb
add
clc
loopne
scas
aad
arpl
add
and
add
dec
mov
mov
repnz
ud2
pop
mov
xchg
fmul
xbegin
xor
add
mov
or
sbb
pop
xchg
adc
clc
add
add
js
clc
xor
add
test
pop
xchg
clc
aaa
xor
add
xchg
inc
clc
or
push
add
or
clc
cli
and
clc
jo
add
sub
mov
gs
test
pop
pop
mov
add
inc
clc
cmpsb
clc
aas
in
mov
and
add
xor
add
add
fdivrl
push
clc
fs
test
mov
and
add
add
pop
insb
ret
clc
push
add
or
clc
call
add
sbb
add
dec
mov
add
sar
mov
mov
add
addr16
dec
mov
imul
add
test
clc
xor
add
loop
fs
dec
push
clc
ja
add
mov
clc
sbb
fs
adc
add
imul
add
dec
cmp
test
pop
cmp
push
add
fsub
clc
lods
adc
add
cmpsl
clc
sub
add
cwtl
sbb
ret
clc
rorl
cli
sar
sti
test
clc
bound
add
stc
stos
add
sbb
xchg
push
or
adc
insb
fldenv
aam
fwait
add
add
mov
push
lahf
adc
clc
dec
inc
add
push
gs
addr16
sub
inc
clc
lea
add
ret
clc
pop
aad
add
rolb
shll
jae
add
push
and
add
add
pop
clc
cmp
clc
xchg
mov
mov
ljmp
in
xchg
and
add
in
push
xor
add
clc
stc
xor
add
sub
add
movsb
clc
mov
add
add
add
flds
add
add
icebp
rorl
adc
add
add
add
cmp
out
xchg
dec
adc
add
lods
daa
clc
push
ret
clc
xchg
cld
movsl
clc
aad
push
lcall
mov
add
sbb
pusha
add
jnp
cltd
mov
sbb
add
jo
add
push
jns
clc
jbe
mov
or
add
cmp
jl
add
inc
add
sub
fimull
mov
clc
das
mov
clc
jb
add
sbb
clc
out
jp
add
sub
add
and
add
call
clc
dec
and
add
mov
mov
add
and
add
mov
clc
rorl
xchg
inc
clc
out
cmp
pop
ffree
clc
or
dec
add
add
fwait
xchg
out
push
imul
pop
scas
jo
add
clc
in
cmp
movsl
clc
mov
ret
clc
je
clc
lods
cmp
ret
clc
repz
mov
mov
add
out
cltd
mov
add
add
mov
into
loope
mov
inc
clc
jns,pn
clc
aas
cmpsl
clc
push
shlb
mov
test
jnp
add
jno
add
clc
and
add
add
dec
mov
mov
add
jecxz
xor
add
pop
push
add
pop
dec
push
xabort
add
fs
cmp
adc
add
sar
xbegin
out
out
xor
add
rcrb
inc
add
adc
add
mov
add
mov
jo
add
clc
mov
sti
sub
add
lcall
clc
cli
jae
add
clc
lods
sub
adc
add
cmp
clc
adc
add
scas
mov
and
add
repnz
sbb
mov
into
jecxz
dec
and
adc
and
add
add
fs
jp
sarb
aad
clc
fsubl
add
bswap
push
lods
repnz
fs
fcompl
je
clc
std
cmp
in
mov
jg
mov
add
test
push
add
repnz
es
loop
lcall
out
xor
add
int3
mov
inc
add
xor
add
add
clc
stc
sub
mov
fadds
mov
out
mov
add
xor
add
adc
add
xchg
and
add
cmp
dec
pop
cmp
xor
clc
insb
sar
shufps
inc
clc
cmp
pop
adc
cli
scas
gs
iret
popf
out
movsl
clc
mov
sub
inc
add
out
sbb
int
add
stc
pop
mov
popl
add
fstpt
test
add
sub
clc
leave
or
cltd
push
push
clc
cs
ljmp
add
lcall
sub
clc
mov
or
xchg
dec
and
add
clc
test
add
addr16
dec
jbe
in
ret
clc
jnp
clc
test
scas
sub
lret
mov
and
add
sbb
call
fs
fmuls
xchg
out
xchg
pop
rorl
pop
push
bnd
jecxz
xchg
sarb
clc
imul
add
pop
dec
dec
jecxz
mov
mov
add
sbb
sub
jno
add
xchg
xchg
aaa
out
pop
cmp
into
mov
clc
push
mull
clc
push
clc
sub
clc
add
add
cmpsb
clc
inc
clc
sbb
movsl
clc
adc
ljmp
push
into
sbb
roll
push
fs
mov
sub
roll
push
clc
movsl
clc
mov
add
in
mov
add
data16
insl
cwtl
adc
add
fidivl
clc
movsl
clc
int3
sti
cwtl
fcoms
add
cs
jge
mov
mov
pusha
add
or
jmp
cs
add
add
cmp
scas
fs
fsub
clc
xor
add
add
clc
idivl
push
jge
inc
add
dec
pop
and
add
movsb
clc
inc
add
or
clc
jl
ljmp
fsubrp
mov
clc
push
xchg
pop
clc
loopne
es
jno
add
cmp
sbb
add
pop
clc
fcoml
clc
mov
pop
stos
je
push
add
dec
mov
add
push
ljmp
or
pushf
ja
cmp
add
add
add
clc
cmp
and
add
divl
add
test
icebp
jo
add
mov
add
loop
jmp
jecxz
in
inc
clc
sahf
pop
cmp
addr16
fbld
fs
inc
add
fisttpl
add
mov
or
clc
cmpsb
clc
jl
mov
clc
fidivl
stos
mov
mov
test
int
add
sub
adc
add
insl
push
clc
cmp
sar
clc
fstpl
cltd
inc
clc
testb
clc
and
call
adc
add
push
lahf
pop
sbb
test
add
jge
in
inc
add
and
xor
or
clc
push
add
mov
push
add
int3
add
faddp
clc
cli
call
xor
add
add
mov
clc
je
cmp
mov
out
jg
push
add
std
inc
clc
push
dec
jle
sbb
test
mov
add
add
add
lods
jnp
cmp
clc
push
push
clc
cltd
outsl
mov
sub
xchg
jo
add
stos
xor
add
or
dec
das
leave
jne
ds
clc
fs
cmc
mov
xabort
sbb
dec
mov
pusha
add
mov
add
in
cmpsl
clc
cmp
fwait
or
add
add
into
pop
out
scas
inc
clc
adc
add
add
mov
add
pop
clc
movsl
clc
cmp
clc
stc
pop
fmuls
clc
outsl
adc
clc
cmp
cmp
push
push
add
or
jnp,pt
gs
cld
out
mov
xchg
fists
push
jg
sub
leave
mov
clc
jae
add
add
add
stos
hlt
sar
mov
sbb
jns
add
insb
add
add
sti
lcall
cmp
jmp
add
jbe
xor
add
dec
xbegin
jnp
leave
insb
inc
clc
pop
daa
clc
jnp
jb
add
test
mov
leave
mov
add
clc
mov
add
notb
xor
add
cmp
dec
sub
lret
adc
add
clc
jmp
stc
gs
inc
add
arpl
add
out
mov
arpl
add
nop
and
add
add
or
and
add
dec
push
add
cwtl
lods
fbld
xchg
pop
addr16
cmp
add
mov
stos
int
add
pmaxub
gs
mov
add
cwtl
mov
pop
clc
xchg
cmp
pop
in
repnz
pop
jl
clc
inc
add
adc
add
not
jb
add
push
inc
add
push
hlt
add
gs
repz
clc
ja
stos
xor
push
or
add
repnz
sbb
data16
out
loopne
and
add
clc
pop
repz
mov
add
sti
icebp
dec
push
add
fs
cwtl
sahf
cmpsb
clc
and
add
pusha
add
cmovp
xor
add
add
clc
mov
add
imul
add
pop
sbb
lods
adc
add
add
clc
jecxz
sbb
test
push
cmp
add
loop
sub
mov
add
enter
clc
fsubrs
clc
scas
inc
clc
push
dec
jmp
xchg
in
jl
xor
add
inc
clc
sub
clc
push
clc
and
add
leave
and
add
add
ret
clc
rep
cmpsb
clc
sub
div
dec
pop
jns
lret
sub
add
sti
insb
jno
add
notl
gs
cmc
in
dec
mov
add
lret
cmp
jb
add
add
xlat
adc
add
clc
shlb
clc
hlt
xor
add
iret
das
cmp
clc
bound
add
clc
fimuls
add
in
pusha
add
scas
xchg
push
cmp
hlt
mov
ret
add
xchg
cli
push
daa
clc
push
add
shll
mov
and
je
clc
imul
clc
idivb
loop
pushl
add
mov
sbb
clc
push
add
jnp
and
sub
int3
enter
sbb
pop
jmp
stc
xbegin
and
add
pop
jno
add
add
cmp
mov
add
popa
add
call
cmp
add
and
add
in
add
clc
lret
xchg
push
mov
add
pop
clc
mov
add
push
mov
scas
jge
jo
add
add
add
add
xlat
and
icebp
out
stc
cmp
add
and
add
rorb
or
pop
or
lcall
xchg
stos
lcall
clc
aad
jb
add
clc
jne
ds
add
out
pop
clc
sbb
out
nop
mov
add
daa
clc
mov
clc
sub
jge
enter
add
xchg
or
movsb
clc
lods
pop
clc
sbb
add
pop
adc
add
push
add
inc
clc
test
inc
clc
add
add
mov
add
sbb
or
or
jo
add
clc
mov
add
sbb
cmc
mov
xchg
popa
add
push
add
popa
add
and
add
dec
mov
add
jbe
mull
add
add
scas
or
or
dec
sbb
sub
sbb
notb
add
int3
or
mov
adc
add
add
jae
add
loop
repz
cmp
clc
daa
clc
jbe
bound
add
add
xor
add
sub
clc
xchg
test
xor
add
test
aad
or
stos
mov
aaa
sbb
mov
clc
mov
adc
or
pushf
sbb
clc
xchg
xor
clc
pop
leave
xbegin
cmp
clc
add
add
aam
clc
xchg
outsb
fwait
sar
clc
add
add
sbb
fldl
clc
add
add
std
pop
mov
add
out
sbb
sub
pop
das
pop
outsb
testb
sub
xbegin
sbb
js
clc
push
add
out
fdiv
xchg
icebp
or
add
dec
test
add
jnp
clc
xchg
adc
add
mov
cmp
clc
iret
out
ret
clc
es
into
int
clc
bound
add
add
sub
add
in
jge
clc
sub
add
test
pusha
add
jecxz
aaa
aad
add
out
mov
mov
xchg
sbb
clc
mov
mov
cmp
fcompl
sub
clc
mov
add
int
push
push
clc
mov
mov
sbb
clc
insb
jns
mov
clc
inc
clc
cmp
clc
cs
icebp
stos
mov
dec
fimull
add
clc
push
inc
add
movsb
clc
add
add
add
in
push
mov
clc
push
cmp
pop
bound
add
jbe
jo
add
clc
test
clc
es
xor
sub
call
fwait
push
cmp
out
add
push
add
fnstsw
pop
pop
sti
add
add
popa
add
add
add
sbb
popa
add
xchg
adc
clc
push
add
xchg
cs
or
clc
mov
sub
clc
icebp
filds
add
sar
lock
mov
add
or
out
xchg
movsl
clc
cmp
add
mov
in
das
cmpsb
clc
push
clc
inc
add
jmp
xlat
test
jg
ljmp
clc
xor
sbb
cld
aas
push
add
inc
clc
mov
add
pop
data16
cmc
inc
clc
test
inc
add
bound
add
add
pop
movsl
clc
stos
and
add
lret
adc
add
clc
movsb
clc
xor
add
add
sbb
in
cltd
dec
sub
xor
cmp
add
in
sub
add
jns
in
movsb
clc
dec
std
mov
add
out
data16
or
clc
scas
add
adc
ja
cli
mov
clc
dec
push
add
jno
add
clc
xchg
insb
imul
add
clc
call
clc
xchg
inc
add
out
mov
add
add
add
add
mov
clc
cmp
jb
add
sbb
pop
and
add
dec
cmc
mov
loope
mov
clc
cmp
clc
bound
add
pop
es
in
adc
add
jmp
clc
mov
adc
add
jge
clc
cmc
cs
mov
cltd
inc
clc
cmp
cmpsl
clc
out
cwtl
sub
clc
mov
xchg
add
add
push
add
je
add
add
clc
pop
jnp
mov
add
inc
add
mov
scas
test
mov
jnp
add
test
clc
pusha
add
push
ljmp
sub
lods
xchg
inc
clc
jmp
ret
clc
cmc
cmc
pushf
xchg
jbe
clc
pop
add
mov
xchg
sbb
add
jbe
xor
clc
mov
add
and
add
add
mov
mov
add
ss
pop
jnp
push
sub
xchg
inc
add
mov
add
add
add
clc
clc
out
test
xchg
lock
clc
xor
add
mov
push
xchg
xor
add
clc
inc
clc
aad
aad
clc
inc
clc
sbb
add
cmp
add
sahf
out
outsl
or
add
pushf
pop
rorb
add
cmp
cmp
sub
xor
add
test
js
ljmp
clc
fisubrs
cmp
cmp
cmp
dec
repz
add
loope
mov
add
movsl
clc
daa
clc
int3
leave
ljmp
fldt
clc
push
adc
add
clc
xchg
rcrl
add
adc
add
aas
jo
add
add
inc
add
mov
outsb
xchg
and
adc
add
push
pop
fimuls
clc
aam
add
xchg
or
ret
clc
mov
ja
clc
sbb
add
and
add
inc
clc
fimuls
add
add
fnstenv
add
stos
jmp
add
xchg
xor
add
iret
repz
stos
ljmp
repz
clc
shll
add
add
in
ret
pop
clc
push
lret
test
cli
add
add
cmc
mov
xchg
sbb
push
add
xchg
cmp
mov
add
call
stos
jge
add
add
mov
cmc
add
add
add
fst
pop
call
nop
cmp
add
pop
jb
add
clc
fsub
clc
icebp
pop
dec
aam
clc
test
jno
add
stos
mov
lock
mov
clc
das
js
sbb
std
and
add
push
loop
or
in
mov
add
jae
add
pop
push
add
xor
add
ret
clc
fisubs
dec
xchg
cmpsb
clc
adc
fdivs
mov
add
adc
add
mov
jns
clc
mov
add
mov
add
mov
ds
pop
addr16
pop
sbb
add
clc
iret
fstpt
add
mov
clc
cmp
lcall
in
nop
jecxz
pop
cmp
shll
dec
shrb
sub
adc
add
add
gs
fisubl
add
stos
and
add
clc
pop
cs
sbb
mov
jmp
imul
mov
mov
add
inc
add
push
xor
add
clc
sub
push
add
xlat
push
add
cmp
sub
fadd
clc
jl
jmp
aas
test
or
stos
mov
push
ja
es
cmp
aam
dec
pop
xchg
xlat
sub
xor
add
add
inc
clc
or
jp
dec
call
clc
jnp
sarb
xchg
sbb
lock
clc
jns
cmp
test
clc
cli
push
add
cmp
fucomp
cld
fcomi
push
bound
add
shrl
out
cmp
add
movsb
clc
mov
add
add
or
add
add
clc
sbb
xchg
out
ret
shrl
adc
or
add
std
xchg
or
add
imul
into
imul
sub
dec
and
in
xchg
jnp
cld
icebp
mov
cmp
dec
data16
and
clc
ret
clc
or
data16
cmp
pop
fbld
clc
add
clc
mov
add
mov
add
lahf
enter
fwait
outsb
movsl
clc
add
add
mov
mov
bound
add
clc
xchg
push
ss
clc
incb
add
shl
xor
or
stos
xchg
fs
inc
add
pop
cmp
mov
jp
inc
clc
push
add
inc
clc
jle
pop
ljmp
cmp
xchg
cmpsb
clc
das
push
add
jne
add
jns
inc
add
nop
cmc
dec
xchg
mull
add
and
add
add
jne
xor
add
add
repz
pushf
mov
in
mov
clc
adc
add
clc
push
sbb
add
mov
clc
hlt
test
hlt
mov
add
pop
clc
inc
clc
adc
add
jbe
add
dec
stos
outsb
lcall
clc
rcll
lods
cmp
xchg
outsl
fldlg2
ds
lods
imul
loopne
test
icebp
out
xabort
add
out
xchg
in
inc
add
add
add
insb
fs
mov
sub
add
add
mov
mov
add
mov
add
call
add
add
and
add
stos
loope
mov
lea
add
add
add
add
cltd
fidivl
add
clc
je
xchg
cmp
insb
pop
push
add
leave
jecxz
ret
clc
aad
clc
and
cmp
jno
add
mov
clc
lock
cmc
jae
add
clc
push
add
call
dec
pop
popf
rcrb
xchg
addr16
jecxz
add
outsl
push
push
inc
add
sub
gs
test
jae
add
add
mov
mov
out
sarl
fcoml
add
in
lea
push
sbb
ficomps
divb
add
xchg
addr16
scas
fidivs
add
sbb
cld
mulb
push
add
add
add
lods
add
add
add
add
mov
pop
ljmp
loopne
jns
add
inc
add
movsb
clc
and
add
add
iret
xabort
clc
pop
bound
add
pop
clc
scas
test
bound
add
clc
mov
add
xor
add
jecxz
gs
roll
add
jl
add
mov
clc
xor
add
adc
clc
push
xlat
jmp
add
cmp
shlb
add
aas
push
add
dec
pop
push
add
movsl
clc
in
scas
push
add
out
ds
cmp
dec
mov
add
jae
add
addr16
sahf
push
rolb
jmp
gs
ret
clc
push
add
sahf
cli
jmp
push
add
bound
add
and
add
xlat
add
add
add
push
add
jno
add
add
vcvtdq2ps
call
pushf
insl
aaa
stos
stos
mov
dec
pop
cmp
cli
rcr
out
cmp
add
imul
ja
clc
dec
shr
fs
hlt
inc
clc
and
add
cmp
add
cli
sub
clc
jecxz
inc
clc
test
fdivl
add
add
mov
shll
clc
xchg
cmc
xor
add
jle
clc
xchg
or
mov
inc
add
pushf
sub
add
push
mov
sbb
xchg
mov
clc
cmp
sub
push
add
push
sub
ret
add
icebp
jb
add
clc
cmp
clc
xor
add
pabsd
lcall
clc
icebp
scas
cltd
inc
clc
jae
add
inc
clc
mov
mov
xchg
ljmp
clc
test
adc
add
iret
lock
clc
out
rclb
add
adc
je
scas
aad
push
add
mov
add
insb
cwtl
push
sbb
add
int
pop
xchg
data16
mov
sar
add
add
add
mov
fdivrp
adc
add
pop
add
add
add
hlt
sub
jmp
dec
and
add
clc
push
add
add
xchg
mov
loop
pop
add
add
aad
jl
push
clc
test
xchg
int
clc
and
add
jb
add
clc
xchg
outsl
sar
pop
ja
mov
fs
pusha
add
mov
add
or
das
and
add
clc
sbb
add
push
mov
mov
mov
clc
sub
daa
clc
in
in
out
sub
sahf
adc
bound
add
xor
add
sbb
clc
sub
add
add
add
leave
and
add
movsl
clc
lahf
xchg
xchg
lret
loopne
and
add
jle
adc
add
bound
add
add
push
add
adc
add
push
mov
push
xlat
imul
dec
bound
add
mov
clc
mov
clc
mov
mov
clc
fimull
out
sub
pop
or
clc
int3
in
xor
push
push
add
pop
mov
add
or
push
xlat
pusha
add
and
add
dec
dec
xor
add
cmp
xor
add
test
add
xchg
xchg
ror
mov
aas
pop
mov
clc
mov
add
mov
insb
inc
add
xbegin
add
call
aam
mov
mov
lret
add
add
mov
clc
clc
jns
pop
out
adc
add
bound
add
clc
lods
mov
jmp
jno
add
add
cmp
add
clc
dec
in
add
add
add
add
mov
cmp
daa
clc
mov
cltd
lods
rorb
push
cmp
add
or
add
inc
clc
mov
clc
push
add
pop
push
loop
mov
mov
clc
lret
add
movsl
clc
repnz
ljmp
cmp
jns
test
clc
jmp
push
repnz
add
ljmp
cmp
add
lock
std
sbb
lcall
mov
stos
push
and
dec
repz
clc
mov
dec
push
clc
test
lcall
leave
movsb
clc
adc
clc
mov
clc
jmp
mov
popl
add
repnz
jle
jge
clc
mov
clc
ds
xchg
inc
add
popf
fsubrl
popa
add
int3
add
add
lret
ljmp
add
xor
add
add
ja
inc
add
cld
or
dec
sbb
add
add
cld
ljmp
sar
jo
add
inc
add
push
int3
pusha
add
outsb
enter
fmulp
testl
add
add
stc
test
in
in
mov
mov
add
pop
xchg
xchg
jne
xabort
int3
cwtl
scas
xchg
jb
add
clc
cli
add
add
data16
out
fcmovbe
pop
push
sti
ja
out
maskmovq
idivl
xchg
adc
testl
jne
add
mov
cmp
inc
clc
or
add
clc
mov
ret
test
clc
int3
aaa
push
clc
jns
clc
sub
pop
inc
clc
pop
lret
mov
add
cmpsl
clc
xchg
dec
dec
cmp
push
push
xchg
or
jne
adc
add
inc
clc
dec
sahf
test
lods
dec
jle
clc
xchg
ret
clc
outsl
cltd
inc
add
mov
mov
loop
push
clc
negl
sbb
inc
clc
stos
xchg
dec
addr16
mov
clc
inc
clc
sar
clc
punpcklbw
add
add
popa
add
stos
enter
add
sar
clc
outsb
push
clc
into
pop
aad
repnz
clc
push
add
lods
add
add
add
sbb
data16
out
fwait
call
arpl
add
add
in
arpl
add
mov
jle
clc
xor
add
cmp
clc
mov
sbb
add
add
clc
cmp
add
push
add
cmp
out
pusha
add
sbb
xchg
sub
clc
ret
clc
jecxz
call
xor
fistl
add
lock
fsubrs
lret
add
dec
adc
cmp
clc
fcomps
in
xchg
leave
and
fldcw
pop
mov
push
in
fstpl
clc
out
pop
cmp
pop
clc
jmp
popf
imul
add
lahf
aas
cltd
add
cmp
dec
push
add
dec
lcall
add
add
mov
clc
cmp
jno
add
xchg
shll
add
dec
xor
add
and
add
sbb
imul
jecxz
cmp
push
clc
shl
clc
xchg
lods
jge
lea
hlt
test
push
jmp
clc
push
add
add
clc
inc
add
je
jns
xchg
add
add
js
sar
clc
mov
aas
push
add
pop
hlt
push
add
and
add
pop
cmp
clc
dec
add
add
cli
mov
clc
mov
add
clc
outsl
and
add
add
add
cmp
mov
add
icebp
push
clc
xbegin
add
add
add
push
loope
jge
clc
mov
mov
and
add
push
mov
mov
add
dec
sarl
add
stc
push
add
test
stos
lret
mov
clc
mov
popa
add
mov
outsl
add
add
clc
mov
std
mov
add
cmp
out
inc
clc
push
jmp
add
mov
clc
pop
jmp
clc
or
xor
add
clc
sub
clc
sub
cmp
clc
cmc
aas
jle
mov
clc
jmp
dec
dec
xbegin
clc
inc
clc
add
add
adc
xbegin
clc
lahf
int3
test
int3
fdivrs
rorb
jne
dec
add
add
addr16
fcompl
add
xor
jp
mov
sahf
or
clc
sub
dec
popf
xchg
out
fs
jl
dec
gs
clc
push
mov
add
add
inc
add
or
jge
add
arpl
add
clc
cmp
push
mov
pop
mov
push
add
ret
add
add
in
repnz
cmovb
add
add
ret
mov
mov
fucomp
push
clc
iret
mov
jle
adc
add
inc
clc
data16
push
clc
jo
add
sbb
sub
clc
insb
insb
cmp
daa
clc
das
loopne
insl
xlat
leave
pop
inc
add
sub
popa
add
stos
push
add
jnp
sarl
ret
clc
jle
clc
jnp
and
add
cmp
mov
lods
out
hlt
pop
add
add
stos
add
add
push
add
dec
popa
add
or
add
and
add
dec
cmp
dec
inc
add
ds
jo
add
add
ljmp
push
xchg
dec
dec
scas
js
sub
adc
add
ret
xbegin
add
add
add
ds
lcall
push
add
test
jb
add
mov
push
nop
mov
in
dec
dec
leave
push
fst
adc
add
xchg
adc
add
sarb
mov
clc
sbb
add
jl
clc
movsb
clc
incl
add
add
sbb
mov
add
mov
add
scas
icebp
cmp
pop
xabort
jl
sub
cmc
mov
jl
dec
pop
dec
stos
xchg
stos
mov
xor
add
loope
jg
bound
add
clc
cmp
mov
push
add
sar
adc
add
add
and
xchg
mov
pop
ljmp
es
pusha
add
pop
cmp
add
add
push
xor
clc
in
mov
add
lea
add
clc
pop
add
add
fstpt
mul
clc
roll
add
mov
clc
dec
cmp
fcmovnu
mov
cli
dec
mov
add
test
and
add
add
bound
add
sub
clc
xchg
inc
clc
xor
add
pop
jg
or
stos
in
or
mov
fwait
popa
add
cmpsl
clc
ret
clc
leave
mov
jae
add
movsl
clc
icebp
mov
sbb
mulb
add
pop
imul
jno
add
add
data16
add
add
adc
add
cs
adc
add
mov
mov
sar
iret
arpl
add
and
add
data16
mov
clc
lods
xor
clc
movsb
clc
dec
and
add
or
clc
leave
dec
js
out
inc
clc
push
daa
clc
push
add
aaa
mov
cmp
clc
into
leave
push
clc
push
dec
int3
imul
add
mov
add
pop
mov
xor
add
mov
daa
clc
or
add
jb
add
or
ret
clc
push
dec
mulb
clc
inc
clc
div
xchg
out
pop
mov
int3
das
xchg
mov
add
clc
sub
cld
xchg
xlat
cmc
and
add
test
jnp
clc
hlt
popa
add
fidivrs
scas
inc
clc
out
jb
add
test
fiadds
pop
clc
sbb
add
push
add
scas
xchg
pop
sti
jge
clc
and
inc
add
xor
add
adc
xlat
push
sub
rcrl
push
add
cmp
push
or
clc
jmp
test
mov
fistl
dec
test
add
and
add
push
adc
clc
pop
cmp
clc
push
add
sbb
add
add
out
pop
ss
add
jle
clc
sar
clc
push
cmp
add
pop
jae
add
enter
add
add
cltd
cltd
in
sub
aam
jmp
outsl
add
jle
mov
or
clc
hlt
adc
add
aaa
repz
dec
aam
add
add
daa
clc
jp,pt
xchg
xchg
cwtl
ljmp
clc
xchg
adc
add
into
or
add
add
xchg
sub
in
mov
cltd
pop
or
cltd
sbb
ljmp
and
add
jg
add
into
rolb
clc
movsl
clc
ja
popf
xor
add
clc
xor
cmp
add
aaa
hlt
xor
jmp
jle
lret
and
add
mov
xbegin
mov
jecxz
sarl
xchg
mov
clc
cs
push
add
xor
clc
je
clc
repnz
add
push
stc
cmp
gs
icebp
mov
jae
add
add
je
gs
aad
clc
xchg
mov
aaa
xor
add
add
ret
clc
out
daa
clc
inc
add
mov
iret
out
call
pop
ss
adc
add
je
lret
mov
adc
mov
outsb
add
mov
js
call
sub
push
dec
pushf
xor
add
outsb
and
pop
nop
pop
stos
enter
clc
fsub
clc
rol
clc
gs
das
sbb
add
inc
clc
or
and
add
clc
xchg
sar
mov
add
push
sbb
pop
enter
in
fadd
clc
gs
mov
adc
lahf
add
add
add
scas
mov
clc
int3
pop
and
add
add
clc
xbegin
xchg
es
iret
push
mov
clc
repnz
add
add
mov
jmp
inc
clc
pop
cmc
mov
inc
add
pop
jne
mov
xchg
neg
daa
clc
adc
add
pushf
sub
add
fs
gs
or
mov
jl
or
push
add
fisubs
add
in
pusha
add
mov
jno
add
sbb
sti
pop
fcomp
jo
add
clc
in
sbb
cmp
push
pop
arpl
add
sub
enter
leave
jnp
clc
inc
clc
jge
clc
fnstenv
repz
test
fs
or
add
cmp
mov
xchg
cmp
cld
arpl
add
sbb
push
add
adc
jnp
add
dec
mov
add
xor
push
xor
add
xbegin
add
add
inc
clc
mov
clc
ficoml
clc
cmp
insb
add
xchg
pushf
cmp
insb
imul
jns
jecxz
cli
pop
cli
cmp
inc
add
ret
cmp
call
push
lcall
xlat
dec
mov
gs
stc
cli
in
scas
cmpsl
clc
cmp
push
add
pop
icebp
mov
addr16
sahf
adc
add
cmp
and
add
clc
outsb
or
add
popa
add
dec
ljmp
hlt
push
add
jne
jne
loope
and
add
adc
add
add
add
add
inc
clc
fldenv
add
sbb
mov
sub
jg
xchg
test
fwait
and
iret
movsl
clc
cmp
clc
dec
leave
cs
clc
mov
clc
add
add
test
add
add
add
stos
inc
add
ss
jge
sub
ljmp
push
clc
out
mov
clc
xchg
push
add
and
lods
push
mov
jno
cmp
clc
ds
mov
cmp
xor
add
stc
cmp
jmp
cmp
clc
daa
clc
jnp
add
push
inc
clc
mov
clc
xchg
adc
add
add
add
xchg
mov
out
cmp
jmp
cmc
xchg
inc
add
mov
fwait
out
dec
sahf
mov
clc
daa
clc
xor
push
add
inc
clc
lea
sbb
aad
push
loope
lahf
cmp
pushf
and
add
out
pop
lock
mov
add
cmpsl
clc
pop
test
es
xchg
xchg
sub
adc
add
lret
insl
xor
add
lcall
pop
leave
pop
xor
test
or
call
add
mov
cmp
add
add
cmp
mov
jge
add
pop
xchg
xchg
sub
inc
clc
bnd
add
fisttpll
add
xor
add
pop
push
add
fcoml
repz
add
clc
push
add
mov
movsb
clc
es
out
xchg
or
xor
jecxz
fildl
add
clc
dec
add
add
clc
ljmp
add
scas
adc
add
add
stc
adc
add
mov
add
fstpt
cmp
je
xbegin
fstp
sub
add
mov
inc
add
push
outsl
popa
add
pusha
add
inc
clc
divl
add
mov
cwtl
into
insl
fnstenv
dec
adc
add
add
in
push
ficompl
fsubrl
sub
add
jl
stos
xlat
cmpsb
clc
in
dec
lods
outsb
cmp
clc
xchg
pop
lods
repz
mov
out
mov
in
cmp
inc
clc
dec
lahf
pop
clc
lods
clc
out
in
cmp
add
add
add
pop
aas
bound
add
pop
hlt
mov
add
clc
clc
sti
cmp
mov
cmp
clc
jnp
das
ret
clc
push
mov
adc
add
xor
add
clc
lea
add
pop
jmp
fidivs
sub
bnd
loope
inc
clc
mov
clc
xchg
pushf
outsb
jns
clc
sar
clc
pop
fistpll
aas
fwait
icebp
jnp
int3
dec
cmp
add
push
imul
sub
sar
add
into
das
or
and
add
out
jecxz
mov
mov
nop
push
clc
sbb
add
test
pop
add
add
test
mov
jmp
cld
mov
sub
clc
or
xor
add
cmp
clc
repnz
addr16
mov
clc
mov
clc
outsb
mov
add
adc
add
xabort
divb
dec
ja
test
in
add
or
clc
xchg
movsl
clc
ret
cmp
aam
clc
mov
cltd
rcrb
add
clc
xbegin
xlat
cmp
test
adc
add
add
sub
hlt
jnp
push
clc
movsb
clc
jg
iret
fwait
sbb
add
cmp
es
int3
mov
clc
adc
add
add
xchg
inc
clc
xor
add
insb
sub
clc
arpl
add
add
ljmp
lret
clc
rclb
add
or
imul
loopne
push
cmp
add
add
add
add
add
outsb
in
push
xchg
fnstenv
add
xchg
sub
add
add
add
cmp
add
cmp
mov
int
add
add
jae
add
outsb
xchg
pop
inc
clc
pop
mov
pop
pop
fcmove
inc
add
sbb
clc
add
add
inc
clc
and
add
clc
sahf
mov
dec
jecxz
addr16
fdivs
es
addr16
arpl
add
clc
push
cmp
jecxz
jno
add
in
mov
lret
xbegin
push
cmp
jo
add
ds
ret
add
loope
dec
mov
mov
jo
add
sar
clc
out
xor
add
inc
clc
clc
sbb
cmp
add
stc
loope
adc
add
clc
jo
add
clc
lahf
ficoms
xor
frstor
add
je
clc
sub
fnsave
imul
clc
js
sahf
push
mov
jl
or
push
push
mov
ss
xchg
sbb
clc
add
add
clc
scas
lret
add
jle
clc
in
push
clc
mov
clc
inc
add
mov
inc
add
popf
push
add
cmp
jne
add
and
add
mov
or
add
ret
jg
outsl
pop
inc
add
sbb
outsb
outsb
sbb
add
mov
hlt
dec
and
add
jo
add
add
add
test
out
in
lret
clc
jmp
sub
inc
clc
mov
rcll
add
push
mov
add
mov
js
sbb
inc
clc
clc
mov
clc
in
sbb
mov
add
xchg
js,pn
outsl
repz
pop
push
add
xor
add
clc
aas
sbb
mov
clc
push
clc
loopne
in
xor
add
add
or
iret
push
add
add
rol
clc
jg
inc
clc
out
stc
mov
ja
inc
add
fnstenv
clc
pop
mov
inc
add
imul
add
in
js
clc
cld
or
dec
sbb
clc
arpl
add
fwait
jnp
add
je
aad
sbb
ret
test
mov
mov
test
add
add
mov
add
xchg
cmp
add
jns
xchg
push
pop
cltd
clc
push
add
xor
add
jae
add
out
push
mov
imul
add
loopne
data16
stos
sub
jg
xbegin
add
xor
add
repnz
pop
clc
arpl
add
clc
cmp
loope
push
dec
hlt
mov
add
add
sub
in
cmp
xbegin
ret
xchg
ds
cs
rorb
lret
js
lods
pop
imul
add
add
loop
dec
outsl
jae
add
add
lea
add
pop
mov
sarl
repz
pop
dec
pop
xor
inc
add
and
add
dec
mov
clc
dec
iret
repnz
clc
testl
add
cmp
add
add
add
clc
in
push
add
lahf
pop
adc
mov
fs
mov
add
lret
jbe
clc
cs
xchg
pop
ficomps
popa
add
lods
ss
push
push
daa
clc
sbb
in
in
js
sub
sar
jo
add
add
clc
imul
or
adc
add
stos
outsl
lahf
jbe
sbb
push
add
lahf
mov
ficomps
out
or
sbb
xor
and
or
or
hlt
cmpsl
clc
sbb
sar
and
add
mov
clc
insl
sub
sar
adc
add
xchg
daa
clc
scas
push
add
pop
cltd
gs
push
in
iret
push
gs
shll
xor
add
jno
add
inc
add
jb
add
lret
inc
add
mov
add
inc
clc
aas
test
jp
scas
sbb
mov
mov
jae
add
clc
and
add
test
arpl
add
add
clc
stos
and
add
inc
add
cmp
add
lods
inc
add
push
push
add
ret
clc
stos
cli
pop
jl
add
aad
add
lret
add
xchg
add
add
sbb
fldt
push
clc
in
lods
insb
fsubp
clc
sbb
add
sbb
clc
lret
out
sbb
daa
clc
repnz
clc
repz
and
add
jmp
xor
imul
add
clc
ljmp
xor
add
add
jmp
insb
push
cmp
enter
add
add
clc
aam
push
add
xchg
sub
add
clc
inc
add
shrl
jge
sub
outsl
add
add
and
cmp
clc
arpl
add
add
add
add
add
cmp
clc
push
adc
cmp
clc
push
lret
add
mov
clc
dec
sbb
inc
add
fcoms
pop
clc
cli
pop
xor
add
loope
fldcw
pop
nop
scas
mov
xchg
int3
js
cmp
fsts
clc
negl
mov
xabort
cmp
adc
add
cmp
hlt
faddl
clc
pop
push
clc
and
add
call
and
add
add
push
mov
add
in
jb
add
fisubrs
dec
xchg
inc
add
pop
jbe
pop
imull
add
lods
sbb
add
add
lock
add
xchg
push
aaa
mov
add
adc
add
clc
out
and
mov
clc
inc
clc
enter
in
ja
jg
push
gs
mov
clc
sbb
add
sbb
mov
cmp
insb
mov
add
aaa
push
pop
clc
fidivl
add
rcll
xchg
xor
add
inc
clc
lcall
add
pusha
add
insb
jne
cmpsl
clc
push
and
add
add
or
stc
adc
add
ja
nop
xor
add
add
mov
clc
and
add
fistps
stc
aad
add
sar
sbb
and
add
fmull
add
fcmovnu
mov
arpl
add
and
add
cld
dec
mov
mov
xchg
jns
fists
add
xchg
push
popf
add
adc
aam
add
add
add
inc
add
or
or
leave
mov
xchg
push
add
and
mov
add
cmp
mov
jbe
add
daa
clc
lcall
dec
sahf
push
clc
test
dec
and
add
add
leave
jg
jb,pn
add
add
add
mov
gs
inc
clc
xor
add
clc
cli
loopne
dec
sbb
filds
clc
test
cmpsl
clc
test
mov
stc
jns
loop,pn
lods
add
add
add
into
jae
add
daa
clc
cmp
jg
clc
ret
clc
xchg
xor
clc
push
add
add
add
add
add
add
add
jae
add
add
and
add
adc
add
clc
push
xbegin
ret
clc
stc
cwtl
jg
mov
jg
imul
add
and
add
jns
test
sub
add
clc
jo
add
clc
movsb
clc
imul
daa
clc
and
add
sub
push
push
fwait
or
add
push
add
mov
add
test
add
sbb
inc
clc
bound
add
lcall
add
inc
add
push
add
nop
sub
clc
aam
clc
cmc
js
cmp
add
push
fisubl
mov
inc
clc
jnp
fisubs
add
in
and
add
add
pop
clc
ret
clc
push
jb
add
add
add
pop
add
add
xbegin
add
addr16
add
add
mov
inc
clc
mov
cli
jmp
sub
add
out
inc
add
loopne
push
add
add
pop
clc
out
or
clc
dec
cmp
cld
mov
add
add
push
mov
sar
mov
add
add
insl
push
ss
stos
sub
xor
add
clc
cltd
or
clc
in
enter
in
cmp
cmp
sub
idiv
and
add
fisubrl
das
sarl
fucom
clc
fisttpl
lret
clc
addr16
fwait
mov
add
or
mov
add
inc
add
cmp
movsb
clc
mov
jnp
clc
das
cmpsb
clc
fwait
sti
loope
shl
pop
inc
clc
jae
add
pop
lahf
inc
clc
pusha
add
out
adc
add
inc
add
pop
in
inc
add
sar
test
enter
pop
xor
add
add
and
add
jbe
clc
clc
or
push
add
loope
aaa
lahf
add
add
inc
add
inc
clc
fistps
cmc
clc
xchg
cmp
push
add
mov
add
add
repnz
lret
pop
popa
add
mov
xchg
push
mov
mov
add
push
add
aam
push
clc
in
mov
mov
movsb
clc
pusha
add
data16
out
vminps
clc
jg
add
add
int
pop
and
add
rorl
add
add
inc
clc
pop
mov
clc
mov
pop
or
and
and
add
add
inc
add
fiadds
add
adc
sub
mov
clc
into
push
mov
clc
add
adc
add
add
add
add
repnz
add
test
data16
int
mov
xchg
mov
jge
pop
pop
mov
cmp
iret
fiadds
js
xor
add
jecxz
bound
add
sub
xchg
adc
sub
mov
stos
sub
sub
add
jl
sub
add
out
loopne
and
add
or
add
clc
pop
clc
inc
add
mov
add
fwait
insb
in
mov
inc
clc
ret
cmpsb
clc
push
clc
cmp
add
repz
jnp
adc
push
adc
add
mov
ss
pop
arpl
add
add
sar
nop
push
add
sbb
mov
clc
aam
jne
roll
mov
sbb
rcrl
out
lock
clc
jbe
xchg
xor
clc
inc
add
xor
add
add
stos
push
stos
pop
xor
add
jnp
clc
and
insl
xor
mov
das
lea
lods
enter
stc
sub
cmp
add
repnz
add
push
add
clc
pushf
bound
add
nop/reserved
fmulp
test
mov
add
add
add
in
inc
add
xor
add
add
jns
pop
pop
xor
add
add
xlat
adc
add
inc
clc
add
data16
gs
out
pop
loope
pop
push
or
cmp
insl
outsb
jne
popf
int
mov
mov
clc
dec
jg
add
jbe
out
pop
mull
clc
jnp
clc
ret
mov
mov
pop
add
clc
mov
add
xchg
stos
jne
sar
sar
enter
inc
add
sbb
jbe
sbb
push
notl
nop
mov
clc
jp
stos
ror
xchg
loop
jo
add
adc
add
outsl
mov
jg
add
punpckldq
add
add
adc
pop
cmp
clc
mov
idivl
or
in
ret
clc
xor
adc
in
jb
add
add
add
xchg
lea
add
or
lahf
push
std
nop
push
sbb
add
add
aam
clc
and
add
add
sub
jb
add
jmp
clc
add
sub
pop
mov
aad
cmpsl
clc
sbb
add
and
cmp
add
pop
jmp
loopne
pop
fnsave
add
push
add
sub
push
clc
add
add
shr
adc
add
add
push
add
sar
jg
addr16
adc
add
mov
bnd
push
and
cmp
add
test
fisubrl
clc
dec
push
clc
push
sar
fdiv
popa
add
pop
or
clc
dec
or
clc
loopne
filds
sar
clc
xlat
xor
push
pop
sub
lahf
fs
xchg
sbb
sar
and
and
in
std
adc
pop
inc
add
xor
add
clc
ss
je
and
add
sbb
mov
and
loope
movsl
clc
outsb
int3
in
mov
add
push
add
daa
clc
dec
cltd
jnp
shlb
add
push
xchg
lahf
lock
lret
data16
stc
mov
pop
add
mov
out
cmp
jb
add
clc
mov
add
xchg
fdivrl
add
inc
clc
enter
daa
clc
dec
push
add
cmpsb
clc
and
lcall
or
daa
clc
mov
add
pop
jb
add
clc
or
add
pop
sbb
xchg
pushf
imul
in
pop
mov
clc
jne
add
add
add
mov
inc
add
push
push
xabort
clc
adc
gs
cmp
clc
sar
jnp
xor
add
clc
ror
jmp
clc
cmp
shlb
clc
ret
clc
cwtl
cwtl
mov
cmp
clc
dec
lret
sets
mov
xchg
fwait
out
inc
add
call
and
clc
addr16
ss
fwait
push
clc
adc
add
daa
clc
sub
clc
mov
sub
add
cmp
add
add
mov
or
jl
clc
insl
mul
clc
pop
hlt
cwtl
in
mov
add
add
xchg
jbe
cmp
add
fcompp
cwtl
inc
add
adc
add
cmp
push
push
push
add
shrl
dec
xlat
lahf
and
add
out
or
cmpsb
clc
int
add
jne
clc
lock
add
add
jb
add
add
incl
mov
dec
push
or
or
add
add
jmp
inc
clc
xor
add
lret
xlat
sbb
or
add
pusha
add
jns
sub
pop
clc
pop
cmp
add
add
add
or
xchg
test
loop
sub
clc
in
iret
into
jae
add
clc
jl
clc
sti
je
dec
cmp
clc
hlt
int
es
cmc
outsb
js
add
outsl
inc
clc
xor
add
clc
pop
push
sbb
add
add
ss
jae
add
fimuls
jg
add
mov
add
mov
into
jbe
clc
sbb
clc
je
cmc
sar
int
clc
sub
xchg
cltd
mov
clc
dec
jb
add
clc
stc
js
stc
mov
clc
xchg
pop
je
and
add
aaa
movsl
clc
repnz
add
add
cmp
add
cmp
loope
and
clc
xor
add
mov
pop
pop
dec
fs
push
lahf
mov
pop
pop
push
add
pop
clc
ja
xor
cwtl
aad
adc
add
inc
add
sar
push
imulb
add
add
pop
sbb
out
inc
add
incl
fidivs
add
or
sar
push
mov
dec
cmp
pop
dec
jp
rcll
out
mov
push
xchg
cmp
add
pop
clc
int
push
clc
clc
adc
add
ret
clc
test
lcall
inc
add
jmp
pop
leave
in
fstl
clc
shrb
add
add
pop
lret
add
add
mov
daa
clc
in
push
cmp
js
adc
cmpsl
clc
in
out
inc
clc
dec
std
adc
add
clc
add
add
movsl
clc
lret
mov
ss
clc
pop
inc
add
sar
inc
clc
add
add
push
into
xchg
mov
add
push
clc
xor
add
add
xor
add
add
dec
rcrb
mov
push
inc
clc
mov
iret
add
add
ficomps
clc
scas
pop
aaa
ret
clc
mov
add
add
add
add
sub
popa
add
mov
push
fisttpl
clc
in
addr16
xchg
push
adc
mov
clc
bound
add
sbb
clc
cli
add
add
jecxz
push
add
fdivs
add
and
add
loopne
push
clc
xor
push
add
mov
jno
add
clc
or
clc
stos
out
add
add
jle
divl
add
pushf
and
add
add
aam
and
dec
inc
add
popa
add
jmp
into
shlb
pop
mov
nop
mov
add
fdivl
jle
clc
ret
clc
add
add
xor
add
jmp
scas
sbb
testb
add
push
dec
fs
pop
ja
add
mov
inc
add
lahf
dec
imull
jb
add
sbb
jno
add
add
inc
clc
gs
jbe
lods
bswap
cld
xbegin
pop
mov
clc
mov
or
and
and
add
add
push
add
add
add
mov
inc
add
vphsubbw
lret
into
int
test
in
not
dec
aam
clc
repz
aad
add
add
sub
adc
xchg
cmp
jle
sbb
push
add
jnp
clc
bound
add
clc
add
jo
add
mov
dec
cmp
jle
push
es
sbb
mov
mov
jns
add
inc
clc
push
clc
out
jne
daa
clc
jg
clc
aam
popa
add
scas
shl
xor
add
movsb
clc
leave
rcll
and
add
cmp
mov
push
ret
clc
dec
movsl
clc
jle
call
mov
dec
repnz
insb
dec
mov
add
cmp
add
sar
xor
inc
add
iret
fnstenv
add
cmp
or
cwtl
inc
add
ret
imul
bound
add
mov
nop
sub
xchg
ret
clc
scas
movsb
clc
fisubrs
cmp
add
add
outsb
xrelease
cmp
clc
imul
add
sbb
mov
shll
add
fs
pushf
mov
clc
xor
add
cmp
mov
xor
add
clc
mov
dec
int
clc
mov
call
cmpsb
clc
xbegin
push
add
in
loop
pop
dec
mov
add
clc
das
inc
clc
in
insl
mov
clc
cmpsl
clc
pusha
add
xchg
pop
test
aam
ljmp
mov
mov
addr16
and
xor
add
cmp
pop
sbb
inc
add
fcom
outsb
and
add
xbegin
add
add
mov
jle
mov
clc
enter
mov
or
add
jno,pn
add
clc
mov
clc
fcoms
clc
xor
add
jb
add
clc
mov
fldcw
int3
push
dec
jno
add
clc
sti
pop
jg
clc
rorb
inc
add
mov
clc
or
cmp
xlat
in
and
repnz
ljmp
jns
adc
add
mov
add
nop
push
jno
add
add
clc
cmp
inc
add
mov
mov
fstpl
stos
shlb
add
add
add
sbb
add
add
mov
add
divb
add
add
cmp
add
sub
pop
outsb
inc
add
pop
mov
push
clc
xchg
inc
add
insl
gs
out
cli
jge
ss
clc
or
add
add
ret
clc
aaa
iret
jb
add
sub
mov
clc
push
inc
clc
imul
loopne
mov
test
mov
jae
add
aam
add
fildl
xchg
ret
clc
add
in
pop
mov
xchg
push
clc
iret
lcall
pop
inc
clc
in
xchg
xchg
rol
clc
cmp
pop
pop
imul
sti
aaa
dec
jns
jbe
xlat
push
add
out
pop
and
add
pop
and
add
jecxz
push
add
add
add
push
lods
mov
push
sti
xor
add
dec
adc
add
ljmp
add
cmp
mov
lods
movsb
clc
imul
icebp
jmp
clc
or
add
icebp
loopne
test
clc
mov
or
inc
add
stos
xor
add
das
sar
add
sar
add
adc
mov
clc
jmp
clc
cmp
jne
test
cwtl
pushf
jns
cmp
cmp
pop
pop
jne
in
sub
add
ret
clc
clc
and
add
add
inc
add
mov
lret
pop
dec
loop
inc
add
inc
add
jl
clc
inc
clc
fmuls
cmp
and
gs
mov
adc
cmp
add
xchg
pop
mov
clc
popa
add
bound
add
jae
add
sar
and
add
add
jg
push
mov
add
cmp
mov
add
add
and
add
add
in
sub
ds
add
cmp
add
add
add
gs
sbb
add
mov
push
jecxz
pop
jge
pop
push
add
mov
dec
add
add
add
popa
add
loopne
stc
dec
rcrl
cmp
es
xchg
xor
add
in
inc
clc
lahf
sbb
pop
xlat
xchg
js
clc
pop
adc
add
mov
daa
clc
dec
push
add
clc
shl
jecxz
or
jae
add
add
mov
sbb
daa
clc
mov
mov
clc
mov
push
clc
push
xchg
xchg
cli
inc
add
or
clc
enter
add
addr16
mov
clc
repz
add
ffreep
clc
sub
push
add
add
add
push
add
ret
clc
sub
clc
add
add
add
sti
repz
jno
add
clc
adc
add
cmp
add
add
push
push
add
icebp
data16
xchg
ja
or
mov
xchg
sahf
test
mov
add
add
mov
and
push
add
mov
add
sahf
call
inc
add
push
inc
add
clc
or
clc
cmp
inc
clc
std
and
add
add
lret
ja
stos
cmc
gs
je
jne
add
adc
add
add
add
add
inc
add
dec
sub
addr16
push
daa
clc
and
add
clc
add
add
add
jo
add
add
jle
add
cmp
jb
add
add
enter
jne
add
dec
fs
inc
clc
sub
xchg
xbegin
decl
cmp
add
lahf
xchg
sti
push
push
add
repnz
add
bound
add
add
repnz
aaa
mov
adc
nop
mov
add
jmp
add
mov
aam
jp
fstpl
sbb
add
mov
add
add
add
add
jo
add
add
add
add
mov
mov
xabort
jae
add
clc
push
ja
pop
pop
jmp
clc
int
popf
loopne
popf
pop
clc
shlb
mov
xchg
decl
or
clc
imul
data16
sbb
dec
jg
rcll
add
icebp
jecxz
sti
out
fwait
clc
lea
add
and
dec
mov
testl
scas
inc
clc
mov
clc
or
insb
cwtl
pushf
push
outsl
mov
clc
mov
jg
xor
add
push
pop
aas
loopne
xor
add
ficomps
add
add
add
push
sub
fistpll
clc
pop
fiadds
add
jae
add
ja
sar
and
add
mov
add
adc
cwtl
mov
clc
clc
addr16
and
mov
jns
add
push
mov
test
xchg
lcall
push
cmpsb
clc
out
mov
pop
sub
push
idivl
ljmp
das
scas
dec
mov
cmp
clc
rclb
add
popf
xor
add
sub
or
jg
jns
mov
jmp
add
sbb
clc
ret
clc
or
add
jmp
clc
jnp
es
dec
out
push
mov
clc
xchg
sub
clc
xchg
test
loop
push
fnstcw
clc
ljmp
add
lahf
adc
nop
jne
mov
clc
movsb
clc
xor
add
add
pop
mov
cmp
add
call
push
add
mov
jo
add
mov
lock
clc
fidivs
scas
cmp
loop
fstpt
add
cmp
inc
clc
ss
test
push
add
test
sub
lret
inc
clc
mov
add
cmp
out
loope,pt
and
add
clc
out
jae
add
add
add
add
add
clc
sbb
adc
sar
nop
ror
mov
jo
add
clc
cmp
out
jle
ret
add
cmp
add
sbb
pop
jae
stos
stos
int3
fsubl
add
dec
mov
or
enter
add
or
mov
jnp
cli
stos
js
clc
push
add
xchg
pop
cmp
add
lcall
push
clc
sar
mov
lods
xor
add
add
fs
out
movsb
clc
pop
pushf
xor
add
icebp
mov
mov
dec
jmp
clc
loop
xchg
adc
add
and
add
dec
inc
clc
jg
add
cmp
add
clc
stos
xchg
mov
sub
add
add
and
add
sti
mov
jg
xchg
mov
adc
clc
or
jno
add
xchg
pop
mov
add
clc
jecxz
mov
js
test
jbe
jmp
ss
lock
loopne
and
add
add
and
add
clc
mov
add
addr16
repnz
std
hlt
shlb
add
mov
imul
aam
bswap
mov
jae
add
inc
clc
inc
clc
and
add
scas
ret
sbb
cltd
jmp
clc
leave
negl
push
nop
outsl
movsl
clc
jne
imulb
add
xor
jp
repz
test
in
dec
inc
add
add
add
jle
hlt
and
dec
add
xchg
or
lret
lcall
int3
lret
arpl
add
test
test
imul
outsl
mov
clc
cvtpi2ps
adc
clc
sub
add
push
cli
xor
add
clc
mov
push
cmp
mov
clc
cmp
dec
in
adc
add
xchg
imull
mov
shrl
add
stos
imul
fs
and
add
clc
std
repnz
pop
hlt
fldcw
sub
inc
add
sahf
int
mov
mov
clc
adc
add
aad
pop
jecxz
inc
clc
cmp
add
or
adc
add
clc
xlat
sub
clc
dec
and
add
clc
pop
dec
xchg
cld
and
add
stos
cmp
cmpsb
clc
lahf
mov
out
test
xchg
add
add
sbb
mov
add
and
cmpsl
clc
push
add
gs
ljmp
lea
arpl
add
jne
clc
or
popa
add
ss
dec
out
add
add
ja
dec
in
repz
mov
outsl
dec
mov
dec
pop
clc
scas
cld
cmp
add
pop
cltd
pop
out
jbe
mov
rcrl
repnz
sar
ficomps
add
jmp
cwtl
inc
clc
cmp
iret
push
cltd
outsl
in
inc
add
or
xor
adc
adc
add
xlat
push
add
adc
add
data16
mov
dec
mov
dec
push
add
std
mov
clc
sahf
or
decl
pop
popf
stos
jp
mov
movsb
clc
inc
clc
popa
add
arpl
add
push
pop
or
mov
mov
fiaddl
clc
in
bound
add
stos
cmc
mov
pop
inc
clc
sar
and
add
cmpsb
clc
pop
iret
ss
add
add
punpcklbw
add
clc
jmp
add
inc
clc
rol
clc
nop
mov
add
clc
scas
push
adc
add
and
sar
cmc
xbegin
add
add
push
add
std
repz
add
add
pop
clc
aam
clc
fldcw
push
add
in
call
movsb
clc
inc
add
fwait
fs
or
imul
or
push
icebp
enter
lods
mov
fcompl
add
add
clc
xchg
xor
add
add
add
jg
test
dec
shrb
cmp
inc
clc
mov
jle
clc
outsb
xchg
out
mov
xchg
mov
shrb
clc
ret
clc
xchg
cmp
clc
push
clc
mov
stos
push
add
mov
mov
clc
arpl
add
aas
jle
or
out
sti
cmp
test
icebp
mov
sub
add
je
xchg
pusha
add
xor
add
dec
sub
add
jae
add
jle
clc
incl
add
loopne
into
mov
clc
into
push
lret
pop
push
add
in
lcall
and
add
add
xbegin
add
pop
jns
clc
dec
jnp
clc
hlt
out
or
add
fsubp
clc
rorl
es
xor
add
iret
pop
clc
xchg
fistpll
test
xbegin
push
add
dec
push
in
movsb
clc
enter
pop
sub
mov
xbegin
add
leave
lcall
push
mov
push
add
mov
add
pop
mov
movsl
clc
pop
push
xabort
sub
add
add
add
scas
shl
clc
add
add
cmp
inc
add
inc
add
fs
pop
add
add
cmp
clc
push
nop
sbb
clc
popl
add
add
mov
clc
fcomps
sbb
mov
inc
add
xor
add
pop
lahf
ljmp
add
cld
mov
cmp
clc
rclb
add
mov
add
add
jmp
add
push
add
repz
clc
mov
xchg
add
add
mov
add
mov
clc
xchg
lea
sub
clc
ja
add
dec
in
fs
sar
cmp
test
push
jno
add
add
or
add
scas
nop
jo
add
add
mov
inc
clc
xchg
insb
je
mov
add
add
mov
dec
fs
out
xor
add
add
sub
add
add
jno
add
aad
add
and
add
and
add
enter
xor
add
repz
fdivp
pop
clc
add
add
icebp
aaa
mov
in
adc
add
jne
mov
imul
fimuls
clc
dec
sbb
sti
std
cltd
jge
test
clc
shll
jno
add
and
add
push
adc
jns
imul
std
xchg
leave
cld
sar
sbb
jns
pop
leave
loop
stos
cli
daa
clc
in
dec
sub
add
divl
add
out
scas
cmp
int3
scas
sti
or
clc
mov
jae
add
clc
int3
shrb
dec
insb
cmp
cmp
clc
cmpsl
clc
dec
inc
add
out
cli
sbb
bound
add
clc
mov
sbb
clc
cmp
add
es
lods
mov
jmp
clc
and
add
clc
cmp
xchg
xor
add
js
or
xor
aam
mov
clc
dec
roll
xchg
sub
jmp
pop
mov
inc
add
clc
sbb
xor
add
clc
dec
jmp
mov
clc
jae
add
in
jmp
push
mov
cli
dec
jle
clc
sahf
cmp
scas
xor
add
add
add
or
clc
mov
xor
and
add
add
iret
cmp
add
jl
xchg
add
xor
clc
lods
and
add
inc
add
pop
cmp
mov
clc
mov
cmp
add
outsb
push
xlat
loopne
cmp
clc
dec
cmpsb
clc
repz
mov
jnp
add
insl
adc
add
inc
clc
xchg
push
ret
jbe
clc
fxtract
push
sbb
add
imul
int
lahf
cld
or
sbb
clc
ret
filds
add
clc
insb
xchg
jge
leave
ss
sar
clc
or
ret
clc
dec
loop
je
lret
insb
add
add
mov
inc
clc
sar
icebp
jae
add
clc
inc
add
ja
pushf
inc
add
push
jb
add
jle
clc
xor
add
fwait
mov
aas
jno
add
idiv
mov
lret
cs
sar
repz
add
clc
dec
xor
mov
add
and
add
sti
popf
jne
add
dec
mov
shr
arpl
add
clc
jecxz
mov
insl
jle
add
add
add
adc
add
push
std
cmp
cmp
cltd
nop
arpl
add
or
add
out
xchg
or
jnp
pop
clc
add
cmp
dec
fistpll
fmull
je
push
das
stos
add
add
jge
and
add
bswap
pop
xchg
test
add
add
add
out
or
xchg
ret
clc
clc
add
jo
add
insb
xchg
and
add
xbegin
adc
add
clc
jp
in
mov
cmp
pop
sbb
cmp
clc
js
clc
xor
stos
add
add
cmp
or
hlt
arpl
add
add
fs
imul
add
mov
inc
clc
imul
add
clc
imul
add
add
movsb
clc
mov
dec
cmc
fs
mov
gs
test
pop
leave
cmp
fists
clc
adc
add
xlat
out
fcmovbe
cmp
add
out
out
lret
cmp
aad
clc
in
ds
clc
dec
and
add
add
in
out
cltd
fdivs
in
add
add
clc
jnp
add
inc
clc
push
aas
or
adc
add
fstl
add
push
clc
in
bound
add
or
add
arpl
add
pop
xchg
and
add
mov
and
push
add
cmp
fs
jp
clc
adc
dec
push
add
pop
lret
clc
inc
clc
out
aad
stos
pop
call
add
idiv
in
test
stc
bound
add
lret
add
add
add
inc
add
xchg
clc
pop
call
add
adc
add
add
loopne
lcall
add
and
add
add
dec
clc
jno
add
xchg
and
out
mov
jae
add
and
add
jmp
cmp
and
add
add
data16
in
xchg
pop
sbb
sbb
ret
add
sahf
nop
lahf
inc
add
jnp
clc
mov
imul
add
clc
in
fs
or
bound
add
dec
pop
push
jmp
mov
clc
movsb
clc
cmp
bound
add
popf
in
cli
mov
lret
add
sbb
xor
aaa
popa
add
stc
or
je
int3
pop
mov
mov
inc
clc
push
lret
adc
add
add
cltd
movsl
clc
clc
mov
jno
add
add
psubd
add
add
loop
mov
aam
clc
aaa
adc
fcmovnb
clc
inc
add
clc
aaa
sbb
add
or
sub
add
clc
insb
mov
adc
clc
mov
mov
movhps
das
rep
and
je
aas
lods
pop
or
in
sbb
sub
dec
aad
mov
clc
test
insl
push
add
cmp
sbb
add
push
add
sbb
push
inc
add
ljmp
xor
popa
add
insl
fisubl
add
cmp
in
pop
pushf
scas
pop
rcr
or
jne
clc
cmp
jle
lods
jmp
out
fs
sbb
fwait
xlat
sub
clc
stos
imul
lahf
sbb
clc
lcall
das
pop
movsl
clc
stc
ja
pop
mov
inc
clc
loopne
pusha
add
dec
xchg
loop
xbegin
loope
dec
pop
inc
clc
popf
sub
add
push
add
xchg
lret
mov
pusha
add
mov
xor
add
clc
rcll
add
xchg
ja
jns
cmp
mov
clc
loopne
push
fwait
cmpsb
clc
dec
shrl
add
lret
ret
clc
inc
clc
sbb
add
inc
clc
sbb
gs
lods
cmp
pop
mov
add
xbegin
nop
and
add
mov
add
sbb
clc
inc
add
xchg
and
add
in
pop
lock
movsl
clc
xchg
incb
leave
mov
add
add
mov
clc
xchg
cmp
clc
or
and
push
add
adc
add
clc
stos
popf
aaa
cmp
pop
inc
clc
and
add
mov
arpl
add
add
add
add
sub
clc
sub
clc
jo
add
push
in
sti
cmp
clc
cs
add
sar
add
clc
cld
cmp
cmp
stc
jecxz
inc
add
aam
push
push
add
iret
aam
sahf
pushf
pop
aad
clc
mov
clc
jno
add
add
call
mov
out
insl
inc
add
leave
sti
movsb
clc
sub
xchg
pop
fbstp
scas
sti
push
add
dec
sti
dec
jno
add
sbb
adc
add
clc
add
aad
jg
add
sti
pusha
add
fnstenv
cmp
mov
out
xchg
movsb
clc
leave
and
clc
imul
clc
mov
cmc
mov
ret
clc
or
add
in
adc
add
clc
daa
clc
imull
mov
xchg
sbb
clc
hlt
call
pop
outsb
sar
sar
pop
xchg
outsb
lock
clc
es
push
clc
mov
in
sbb
jne
pop
xchg
test
cltd
push
add
cltd
xchg
jge
ss
aas
repnz
hlt
jae
add
shl
clc
push
push
add
arpl
add
add
out
push
clc
imul
bound
add
inc
clc
loopne
jnp
pop
fstps
cmpsl
clc
sar
cmp
clc
push
xor
add
add
in
pop
cmp
mov
add
add
add
mov
or
fadds
sub
and
rcl
pop
xchg
cmp
add
enter
clc
notl
add
xchg
popf
mov
clc
xor
add
mov
test
add
clc
out
int3
mov
xlat
inc
clc
adc
add
dec
cmp
loope
add
mov
push
repnz
cmpsl
clc
adc
add
xor
or
add
clc
pop
imulb
adc
clc
ljmp
xchg
daa
clc
cs
pop
cmp
lcall
cmp
in
xor
add
clc
inc
clc
mov
or
clc
scas
leave
out
jnp
mov
int3
dec
mov
ljmp
outsl
inc
add
add
call
dec
sar
push
add
push
repz
sbb
push
add
mov
fldcw
aas
out
sub
clc
push
clc
out
test
enter
daa
clc
jmp
clc
push
add
add
clc
movsl
clc
xchg
push
add
adc
add
add
add
add
add
ljmp
xchg
sbb
nop
loopne
lret
pushf
dec
aaa
out
and
pop
mov
add
jno
add
arpl
add
int3
lods
mov
cmovs
clc
je
clc
into
jp
stos
sbb
push
mov
adc
add
xchg
ja
add
in
clc
lea
add
add
add
mov
call
clc
sar
xor
add
mov
dec
mov
aad
ljmp
mov
clc
ss
add
nop
xchg
cmp
push
fs
jb
add
sar
js
and
add
repz
clc
int3
cmp
clc
sahf
xchg
add
gs
jge
pop
mov
clc
lret
sub
or
dec
jmp
loopne
xlat
pop
sar
push
add
or
movsl
clc
cmp
clc
icebp
dec
bound
add
push
add
xchg
jp
in
mov
add
lcall
add
data16
in
push
sub
clc
or
sub
cmp
ret
movsb
clc
mov
push
clc
sar
jmp
cmpsl
clc
aaa
mov
add
cli
cld
ret
clc
jmp
add
sbb
add
add
or
mov
stos
inc
clc
movsl
clc
mov
add
out
dec
adc
add
jbe
cmp
add
add
jle
clc
movsl
clc
sub
sub
mov
rcrb
add
add
push
clc
iret
daa
clc
clc
or
cmp
test
fwait
sub
push
mov
ret
clc
and
add
push
mov
mov
add
flds
das
rcrb
clc
cltd
out
sbb
out
inc
add
pop
clc
mov
add
or
jae
add
or
add
adc
add
cmpsb
clc
and
add
shll
add
stc
inc
clc
jg
inc
add
sub
clc
pop
add
add
xor
add
push
add
pop
shll
add
int3
xchg
mov
xchg
jecxz
ret
clc
cmp
xor
add
xchg
lret
imul
out
test
add
add
fdivl
add
repnz
add
jg
clc
add
add
add
adc
add
xchg
mov
add
es
mov
dec
and
add
add
jg
clc
jmp
clc
pop
and
add
stc
sbb
xabort
xchg
mov
testl
clc
jl
std
mov
jno
add
mov
sbb
movsb
clc
gs
jge
clc
sar
xchg
xor
add
clc
outsl
hlt
call
ds
fsubl
add
clc
shl
test
fmull
fildl
add
xchg
sub
lret
ja
sbb
fisttpll
mov
inc
add
xor
add
mov
push
cmpsl
clc
sub
add
pop
pop
push
add
fiaddl
sbb
repz
jbe
mov
add
mov
add
add
add
pop
into
xor
mov
inc
add
mov
jecxz
xor
add
add
clc
movsb
clc
mov
inc
clc
out
push
and
add
mov
lahf
addr16
loop
dec
and
add
int
mov
add
push
mov
add
or
mov
clc
mov
sub
add
add
jns
sbb
add
clc
outsl
into
jbe
clc
add
add
sub
lea
clc
cmp
add
inc
clc
and
add
push
add
inc
add
std
popf
cmp
lcall
add
cmp
nop
mov
incl
xchg
fsts
add
imul
add
pop
fcmovb
clc
adc
add
clc
cli
and
add
clc
int3
stos
ljmp
mov
std
pop
ret
insl
dec
fs
sub
cs
jno
add
shlb
add
add
fiaddl
mov
clc
adc
jl
and
add
clc
fistpll
gs
pop
std
adc
add
and
add
dec
insl
in
push
popa
add
xchg
popf
cltd
stos
push
clc
jae
add
fldenv
test
push
inc
clc
fstps
cmp
mov
data16
movsb
clc
cmp
lret
repnz
add
pop
inc
clc
sbb
clc
mov
outsb
xchg
pop
cmp
arpl
add
add
add
add
add
mov
mov
jae
add
xor
add
xor
add
clc
outsl
arpl
add
jnp
jle
lea
add
clc
fiadds
add
sub
clc
lock
push
add
lret
xchg
aam
out
cmp
fisubrs
arpl
add
ret
clc
sbb
add
scas
mov
clc
cmpsb
clc
lea
pop
vcvtps2pd
ldmxcsr
add
push
add
clc
mov
add
fisubrl
dec
inc
clc
push
mov
rol
clc
inc
add
addr16
daa
clc
enter
icebp
aas
xor
xchg
jne
clc
mov
push
and
add
clc
adc
add
add
jne
add
std
jnp
stc
je
insb
xbegin
and
add
mov
adc
add
jmp
loopne
data16
adc
std
jb
add
inc
add
pop
jae
add
jmp
test
test
clc
or
clc
data16
cmp
filds
clc
test
movsb
clc
cmp
add
out
cmp
add
clc
daa
clc
add
add
clc
pop
cmp
and
cmp
pop
js
inc
clc
pop
cmp
imul
mov
in
lods
fisubrl
add
imul
sub
clc
xabort
add
and
add
mov
clc
mov
clc
inc
add
jns
add
add
clc
outsl
and
add
stos
out
pop
test
xlat
repz
and
add
mov
sar
inc
add
lret
in
out
add
add
dec
cmp
clc
test
adc
lock
cmp
or
clc
pop
in
sti
hlt
gs
test
clc
loop
ret
clc
je
add
inc
add
outsl
sbb
cmp
add
mov
fnstcw
cmp
push
sbb
xor
add
push
add
mov
add
clc
repz
out
mov
dec
cmp
ret
clc
push
and
add
add
sub
aas
mov
jnp
jmp
iret
or
dec
and
inc
add
or
add
jnp
xor
add
hlt
repnz
add
clc
inc
add
out
mov
add
xchg
push
or
add
sbb
pusha
add
and
add
add
clc
xor
add
push
aad
into
dec
stc
and
add
clc
lahf
mov
and
add
add
leave
sub
add
mov
xchg
lea
dec
jno
add
xbegin
sub
add
push
add
pop
fistl
add
imull
clc
imull
adc
or
clc
popa
add
adc
add
xor
add
clc
push
adc
add
jecxz
pop
lret
xor
add
pop
pop
pop
into
jbe
cmp
add
stos
mov
mov
clc
and
clc
movsb
clc
sahf
pop
sbb
or
cmp
clc
xor
sub
clc
pushl
add
dec
stos
bound
add
cmp
clc
mov
add
test
clc
hlt
lods
dec
lahf
jg
std
dec
ljmp
cs
pop
testb
pop
sub
jo
add
lret
faddp
clc
xchg
in
es
in
adc
cltd
dec
inc
add
mov
popa
add
inc
clc
dec
pop
pop
fisttpll
ficoms
cmpsb
clc
gs
pop
xbegin
mov
cmp
mov
add
mov
cmpsb
clc
ljmp
pop
add
add
clc
mov
clc
dec
arpl
add
fs
cmp
iret
fmull
popa
add
lret
dec
adc
add
clc
lahf
push
add
pushf
bound
add
repnz
sbb
xbegin
add
aaa
sar
and
add
add
movsl
clc
lods
aaa
sbb
sti
pop
popa
add
xchg
adc
add
clc
sbb
inc
add
push
xor
add
clc
mov
cmpsb
clc
ret
clc
aam
ljmp
ret
clc
repz
mov
mov
leave
sti
pop
ds
repnz
add
add
xchg
mov
lret
add
adc
add
pop
mul
clc
cmp
loope
and
add
rclb
add
imul
xor
add
push
aaa
das
and
out
inc
add
repz
add
add
jl
clc
int3
test
pop
stos
data16
mov
movsl
clc
or
sbb
lret
clc
jle
call
xchg
jge
fs
mov
add
add
outsl
arpl
add
mov
rorl
add
sar
enter
cli
jbe
mov
loopne
imul
neg
stos
clc
sbb
int3
pop
cmc
sub
push
aas
pop
clc
adc
pop
fidivrl
xchg
call
adc
add
mov
decb
or
clc
pusha
add
mov
add
xor
adc
add
add
mov
clc
or
pushf
clc
pop
scas
sbb
xor
add
cmp
clc
ljmp
and
bound
add
ljmp
cmp
fsubl
inc
add
pop
jmp
in
push
pop
add
fcompl
fisubrl
clc
jb
add
mov
test
jo
add
xchg
cmp
imull
add
mov
clc
inc
clc
or
popa
add
int3
insl
test
stos
insb
mov
ficomps
or
push
mov
mov
lcall
push
add
dec
push
add
xor
add
mov
cli
test
jb
add
xor
add
jne
movsl
clc
push
ljmp
add
cmpsl
clc
push
sub
add
cmpsb
clc
aaa
sbb
roll
add
add
add
clc
int
es
sub
mov
sarb
cmp
repz
add
frstor
adc
add
clc
outsb
jge
clc
lods
ljmp
sbb
clc
xchg
jae
add
sti
xchg
mov
stos
pop
xor
add
aam
loop
push
add
pop
add
add
loop
outsl
lret
clc
or
push
aad
call
cmpsb
clc
sub
mov
xlat
xor
add
xchg
xchg
sbb
xchg
pop
pushf
stos
testl
shlb
add
push
clc
adc
aas
loope
mov
and
add
mov
clc
test
cmp
push
add
jbe
inc
clc
add
xchg
dec
xor
add
add
add
call
lret
sbb
clc
sbb
int3
sub
clc
cmpsb
clc
xlat
cmp
cmpsl
clc
jecxz
mov
cmp
add
adc
add
popa
add
xor
add
mov
add
mov
in
ljmp
inc
clc
sbb
cwtl
out
mov
aad
clc
mov
jno
add
add
iret
sar
xadd
enter
add
loop
ljmp
push
add
fwait
jnp
clc
das
das
insl
cmpsl
clc
jmp
insl
mov
iret
cmp
adc
add
jge
lods
pop
xor
add
add
aas
xchg
cmp
xchg
cs
cwtl
xor
xchg
sbb
clc
pop
std
mov
ret
shrb
clc
fcoms
add
out
cli
push
add
jbe
xor
sub
cmp
clc
lock
mov
add
sbb
add
cmpsb
clc
dec
xlat
test
jnp
sub
clc
push
inc
clc
mov
popf
ss
add
stos
dec
mov
lret
data16
movsl
clc
push
push
add
aaa
int
add
sbb
add
xor
add
and
add
pop
in
mov
sbb
es
fdivrs
in
lahf
cmp
mov
sub
fnstsw
shlb
cwtl
fwait
ds
iret
cli
mov
add
add
add
xchg
sahf
pop
mov
pop
cs
push
push
add
adc
add
test
add
dec
ss
insb
cs
ljmp
add
cmp
test
ljmp
add
jge
sub
inc
clc
mov
clc
scas
cli
int
add
cmp
lods
in
xchg
inc
add
and
add
dec
test
movd
das
sub
movsl
clc
inc
clc
inc
add
iret
outsb
cmc
scas
mov
and
cwtl
or
clc
jno
add
lret
jg
fisubl
mov
nop
sbb
sbb
xchg
je
add
push
xchg
sar
add
push
or
aad
cmp
clc
add
add
clc
lods
into
ret
cld
push
push
clc
add
add
lcall
clc
fidivrl
mov
add
clc
paddw
cmp
add
fcmovu
inc
add
daa
clc
add
add
cmpsl
clc
pop
das
rorl
clc
sub
lods
mov
mov
and
add
pop
clc
xor
or
fisttpl
sbb
xchg
pop
and
add
jns
fs
xchg
adc
add
insl
fsubl
pop
popf
adc
add
clc
jecxz
push
xchg
or
iret
repnz
sar
fisubrl
clc
push
iret
mov
insl
add
add
sar
ret
add
sar
ds
add
adc
add
cmpsl
clc
popa
add
pop
ret
clc
test
data16
mov
mov
inc
add
jne
mov
mov
add
cltd
stos
jmp
clc
test
add
cmp
xor
add
push
add
cmp
add
enter
add
loop
cmp
ffreep
clc
jp
add
jne
add
inc
clc
in
imul
imul
mov
add
test
aaa
dec
out
mov
enter
cltd
bound
add
mov
mov
clc
inc
add
dec
movsl
clc
push
add
add
xabort
mov
lahf
mov
cs
clc
insb
pop
pop
daa
clc
out
in
jecxz
sar
popa
add
mov
add
cwtl
mov
clc
lahf
in
fstl
aas
das
in
cmp
lods
dec
push
outsb
xchg
mov
cmp
pop
mov
jmp
add
rorb
add
add
inc
add
xchg
mov
lea
add
clc
hlt
ds
add
inc
add
mov
add
sti
aas
repnz
jmp
or
lods
bound
add
add
add
ror
jmp
add
push
test
push
add
sar
jbe
arpl
add
adc
clc
test
sbb
arpl
add
mov
clc
or
add
push
add
in
por
and
add
mov
add
adc
add
fsubs
std
mov
pop
mov
clc
fstpl
insb
call
add
push
cltd
or
mov
out
cmpsl
clc
jae
add
add
out
xchg
aam
push
popf
into
bound
add
jns
pop
gs
es
faddl
dec
or
mov
add
arpl
add
lock
clc
mov
add
rcrb
lea
pop
mov
lahf
mov
clc
sbb
lret
push
std
and
add
movsl
clc
out
xchg
jl
pop
mov
clc
adc
add
sbb
pop
or
aaa
jnp
cmp
pusha
add
std
nop
addr16
dec
mov
add
lret
loopne
inc
add
xchg
fbld
add
xchg
test
call
add
mov
clc
mov
test
nop
add
mov
fsubs
add
test
inc
clc
outsl
add
add
add
clc
leave
iret
dec
cmpsb
clc
nop
mov
clc
sar
pop
rcl
xlat
std
cmpsl
clc
mov
rorb
fstpt
ret
clc
adc
add
pop
xchg
adc
into
pop
clc
into
or
sbb
shlb
inc
clc
xor
lcall
add
pop
inc
add
mov
clc
inc
add
repnz
outsl
inc
clc
movsb
clc
push
clc
lea
add
cs
pop
xor
add
add
dec
sub
movsb
clc
leave
lock
jbe
stos
rep
sub
add
movsb
clc
adc
add
clc
leave
out
cmp
in
aaa
xchg
jne
enter
loope
lea
xor
add
mov
dec
mov
xor
add
fucom
clc
push
into
aad
clc
call
inc
add
add
add
add
dec
mov
add
mov
add
pop
mov
cmpsb
clc
xchg
push
xchg
xchg
aam
cmpsl
clc
add
outsb
xchg
lcall
clc
out
imull
xor
add
cld
mov
add
bound
add
enter
inc
add
cld
adc
add
xor
add
mov
add
dec
add
add
clc
test
lahf
xor
add
add
add
add
ss
sarl
ret
clc
cmc
and
add
add
clc
jmp
add
arpl
add
mov
add
clc
in
push
lods
dec
cmp
popa
add
cli
or
xor
add
add
leave
jbe
test
clc
cmp
mov
add
fs
je
adc
clc
jns
pop
jmp
ss
xabort
xchg
push
clc
pop
xchg
call
add
add
enter
sbb
clc
cmp
cmp
jno
add
add
dec
loop
sar
int
pop
and
add
sbb
add
sub
add
mov
clc
cltd
push
clc
xchg
out
cltd
jp
clc
mov
lods
lcall
add
add
sbb
sub
inc
add
call
mov
in
test
movsl
clc
js
add
cmp
shlb
clc
sti
xbegin
gs
cmp
clc
pop
mov
mov
dec
mov
pop
scas
mov
loope
xlat
data16
xchg
repnz
clc
out
xchg
mov
cli
out
dec
fimull
clc
fwait
jge,pn
fiadds
add
fidivrl
clc
mov
in
lea
sbb
sbb
xabort
cltd
adc
sbb
clc
adc
cmc
int
sbb
fdivs
gs
jno
add
sub
push
cmp
push
xchg
adc
add
mov
mov
mov
clc
in
push
pop
test
loop
shr
fstl
add
add
in
fldt
mov
clc
test
in
mov
clc
dec
xchg
stos
push
add
push
mov
sub
xabort
or
into
mov
iret
mov
jno
add
cmp
mov
cmp
add
cld
mov
push
add
out
lock
clc
jp
popa
add
out
jbe
call
call
cld
push
add
cmp
xchg
test
xor
add
add
out
pusha
add
jp
inc
add
imul
dec
sub
add
imul
clc
cmp
rorl
add
sbb
ss
add
popa
add
inc
clc
mov
lods
mov
in
lahf
cld
mov
and
clc
push
adc
sbb
stos
pop
mov
scas
in
xchg
pop
xor
add
clc
push
add
lret
jne
xor
add
clc
jmp
add
fwait
inc
add
xchg
into
add
add
adc
repz
imul
lock
add
lret
repz
sti
in
cmp
pop
fwait
jge
clc
in
add
pop
clc
xor
clc
inc
add
and
add
add
mov
inc
add
cmp
cmp
clc
cmp
pop
dec
inc
clc
clc
add
add
sbb
clc
push
nop
mov
push
cmp
insb
aaa
insb
cmp
adc
ja
clc
mov
clc
das
and
fistpll
or
add
clc
or
push
clc
and
mov
popf
dec
int3
sbb
popa
add
aas
outsb
loopne
mov
inc
add
fstpl
add
adc
add
rcrl
ret
clc
cmp
add
insb
inc
add
inc
clc
inc
clc
jmp
mov
clc
mov
add
add
lret
fcomp
mov
clc
iret
js
add
add
mov
pop
cltd
adc
add
add
leave
jo
add
dec
into
dec
into
mov
clc
pop
adc
add
inc
clc
push
add
sub
aad
clc
add
add
add
mov
mov
mov
mov
ficomps
cmc
pusha
add
adc
add
cmpsb
clc
in
stc
add
sar
js
add
scas
and
add
cmpsb
clc
inc
add
mov
add
clc
mov
clc
stc
mov
add
add
clc
and
add
add
add
jne
xchg
pop
pop
pop
outsl
jb
add
sbb
add
clc
push
test
cmp
sar
clc
or
push
aaa
fwait
jecxz
sbb
add
adc
add
cmp
xor
add
add
movsb
clc
movsl
clc
fcompl
cmp
jne
mov
data16
cmp
clc
jno
add
add
mov
dec
fs
inc
clc
ja
jmp
cmp
pop
in
std
rcll
jmp
add
mov
jbe
fadds
add
cmc
fcmovne
into
mov
add
cmc
in
mov
ja
data16
stos
rclb
loope
int3
je
xor
cmp
sub
clc
or
test
cmp
jne
mov
add
jecxz
push
add
fisubrs
lret
mov
pop
lret
add
lea
movsb
clc
sub
cmp
xor
xchg
adc
add
push
xchg
sbb
clc
jge
clc
pop
xchg
sbb
add
push
iret
dec
push
dec
mov
fsubrs
add
je
clc
mov
iret
ds
out
jecxz
outsb
cmp
out
mov
lods
mov
cmp
clc
pop
outsl
in
mov
add
shll
add
popa
add
in
or
add
jmp
lock
push
mov
clc
pop
pop
add
lret
aas
in
jg
test
aam
jg
sub
cmp
xor
add
xbegin
clc
mov
mov
sar
pop
jae
add
clc
dec
add
in
sbb
mov
mov
clc
addr16
out
sar
clc
mov
push
adc
add
add
je
inc
add
mov
add
add
popf
sar
cltd
roll
clc
aaa
push
adc
clc
popf
cwtl
or
outsb
mov
push
adc
add
repnz
clc
out
cmpsb
clc
loopne
cmp
clc
cmpsl
clc
sub
clc
out
jge
popa
add
fs
mov
add
dec
pop
iret
int3
sar
add
cmp
mov
sub
mov
clc
inc
clc
pop
aad
clc
data16
push
add
sbb
es
or
dec
cmp
es
xor
test
clc
xchg
in
sub
jbe
clc
cmpsb
clc
and
inc
add
dec
or
mov
add
push
test
cmp
clc
mov
nop
sahf
or
loopne
test
dec
scas
arpl
add
ja
mov
shrb
cmp
add
fxch
mov
sbb
clc
or
pop
pop
into
or
push
lea
or
inc
add
in
cli
push
add
imul
mull
clc
jp
jg
clc
fstl
out
cmp
je
imul
stos
fcomip
cmc
sahf
pop
in
xlat
xchg
sbb
int3
mov
clc
push
clc
out
aad
clc
adc
xabort
popf
stos
or
fistl
clc
or
cmp
insb
and
add
stos
jg
xor
add
mov
cmpsb
clc
fisubl
clc
mov
fildll
mov
fdivrl
add
mov
inc
add
pusha
add
jb
add
addr16
test
clc
or
push
add
push
fiadds
aad
imul
add
das
mov
add
sbb
iret
mov
aaa
fisttpll
push
add
and
add
push
clc
pop
rol
clc
data16
cmpsb
clc
mov
clc
cmp
ja
lret
mov
add
adc
add
add
insl
jno
add
pop
mov
clc
dec
push
jle
sbb
sqrtps
add
add
cmp
xor
add
cmp
daa
clc
adc
add
jp
rol
clc
mov
add
sar
xor
add
or
sar
movsb
clc
pop
add
xchg
cmp
mov
mov
gs
mov
jb
add
clc
jae
add
repz
clc
call
cmp
mov
add
aad
clc
pop
cltd
call
mov
inc
clc
xchg
aad
cmp
cmp
mov
dec
stc
and
add
clc
xor
add
xor
aaa
idiv
sub
add
cmp
jge
add
pushf
jae
add
test
imul
mov
push
add
xchg
adc
add
or
decl
xor
add
add
clc
and
add
fadd
clc
insb
sbb
clc
bound
add
clc
mov
mov
es
lea
add
add
je
pop
leave
jge
stos
inc
add
fs
or
push
add
jae
add
or
lcall
icebp
into
mov
clc
scas
insl
jp
clc
sub
and
add
add
add
pushf
pop
cmp
popf
shrl
rolb
and
repnz
mov
clc
mov
mov
clc
mov
in
pop
pusha
add
xor
add
push
add
sub
pop
pop
clc
dec
inc
clc
pusha
add
popl
add
addr16
fisubl
add
add
add
cmp
clc
sbb
clc
inc
clc
sbb
cwtl
int
shrl
xor
add
add
test
aam
jnp
dec
movsl
clc
cmp
addr16
gs
jle
shrl
clc
mov
add
add
add
in
test
scas
call
xor
add
es
js
sbb
add
mov
sbb
sbb
clc
xchg
scas
daa
clc
jb
add
mov
clc
stos
mov
clc
in
pop
je
xlat
cltd
adc
add
and
mov
cmp
add
add
add
jb
add
pop
add
add
add
fldcw
add
add
scas
pop
xchg
stc
es
sub
cwtl
cmpsl
clc
insl
adc
push
enter
mov
mov
push
stos
fistpll
aam
pop
clc
ret
clc
push
add
add
add
clc
rcrl
clc
adc
clc
lods
in
sub
xabort
lods
mov
movsb
clc
inc
add
add
add
add
outsl
push
mov
add
mov
clc
mov
clc
in
mov
xchg
sar
sbb
push
add
lahf
ret
cmp
clc
push
and
add
clc
xlat
ljmp
imul
iret
push
add
call
lret
loop
fdiv
sub
push
sub
add
pop
adc
add
mov
ja
clc
or
test
clc
push
add
cmp
inc
add
inc
clc
ret
add
sbb
out
shl
rcrb
add
push
add
mov
mov
sbb
pop
sbb
fldt
clc
jbe
clc
xor
add
pop
call
clc
nop
inc
clc
fisttpl
in
out
or
clc
xchg
adc
add
add
cmp
clc
jg
out
or
mov
ja
bound
add
cmp
mov
clc
imul
cmp
add
stos
fisubs
add
loop
fsts
repz
aaa
adc
add
pop
data16
xchg
mov
ss
cmp
incb
jle
ficomps
push
pop
xor
add
clc
cmp
cmp
xchg
lahf
sbb
clc
popa
add
jg
ljmp
xchg
sbb
push
add
mov
aad
out
sar
xchg
fsubl
mov
add
fs
sti
test
pop
hlt
and
add
dec
adc
add
mov
inc
add
cmp
add
pop
push
add
stos
add
or
clc
test
cltd
mov
lcall
das
xor
stos
mov
add
add
xlat
fcompl
out
jno
add
scas
or
jge
mov
push
adc
add
testb
jle
lahf
data16
inc
clc
and
add
mov
dec
pop
pop
test
movzbl
xor
add
dec
xlat
fbld
add
sahf
mov
std
xchg
sub
clc
clc
inc
clc
test
clc
mov
test
lret
and
add
insb
xchg
repnz
popa
add
jge
or
clc
mov
jle
leave
or
lret
clc
and
add
add
clc
scas
push
mov
aaa
adc
pop
sbb
gs
jge
xchg
fwait
sub
add
clc
repnz
data16
xchg
and
add
clc
lods
xlat
cltd
sbb
cmp
add
sbb
clc
xor
add
push
xor
add
insb
sar
add
enter
daa
clc
arpl
add
clc
xchg
add
add
cmp
clc
aam
lods
addr16
lea
mov
call
push
add
mov
add
mov
sar
sub
dec
test
insl
add
jecxz
ret
clc
loop
mov
clc
xchg
xchg
insl
cli
xchg
out
fwait
push
add
push
add
jmp
add
bound
add
clc
repz
lods
and
add
cmpsl
clc
xor
add
clc
lret
scas
cmp
clc
jp
add
scas
and
add
sub
shlb
clc
loope
cmp
add
cmp
ret
out
pop
jo
add
add
faddl
push
xor
add
clc
or
push
fwait
inc
clc
sbb
js
jae
add
clc
data16
xabort
add
or
sbb
add
jl
add
mov
add
ja
clc
lods
dec
ds
add
outsb
dec
movsb
clc
cmp
clc
push
mov
add
mov
test
cmpsl
clc
xor
add
add
cmp
add
notl
inc
add
jno
add
mov
add
sbb
push
xchg
cmc
and
cmp
pop
sbb
iret
in
sub
add
add
mov
mov
mov
gs
out
aam
jb
add
add
adc
add
fisttpl
add
es
imull
or
clc
add
add
add
outsl
imul
xchg
jmp
pop
or
adc
add
xor
mov
fwait
pop
and
add
pop
dec
enter
clc
mov
shll
add
sti
mov
add
adc
add
shlb
clc
mov
inc
add
adc
add
hlt
in
ja
mov
add
and
inc
add
adc
clc
and
loopne
xor
add
ret
clc
cmpsb
clc
jp
clc
mov
clc
pop
or
or
clc
cmp
dec
ss
incl
clc
sub
ret
enter
clc
stos
mov
cmp
dec
mov
add
outsl
js
pop
bound
add
add
mov
add
pop
xor
add
add
scas
movsl
clc
movsl
clc
dec
inc
clc
xor
add
clc
sub
pop
hlt
out
xbegin
push
jns
add
aad
add
cmp
arpl
add
mov
and
add
clc
sub
lods
arpl
add
arpl
add
outsb
sbb
adc
add
clc
inc
clc
das
inc
clc
mov
fists
add
inc
add
dec
clc
and
add
clc
ret
clc
stc
cmpsl
clc
jecxz
loop
jo
add
lret
add
clc
shrl
lods
inc
clc
imul
sbb
clc
in
fsts
fsubl
pushf
push
clc
sar
push
add
pop
sub
call
add
cmp
mov
xor
add
xchg
dec
mov
gs
je,pt
jns
xchg
aaa
or
mov
fcom
jmp
add
aam
clc
mov
add
into
lret
push
add
xchg
lfs
icebp
imul
add
add
popf
ljmp
mov
dec
pop
add
add
add
repz
adc
add
cmp
std
pop
clc
or
clc
fsubs
clc
scas
mov
data16
cwtl
dec
fcoml
clc
fwait
cmp
clc
sbb
ficoml
add
add
data16
iret
inc
clc
fcmovu
test
enter
add
or
add
mov
clc
and
add
fwait
push
add
cmc
xor
add
cmp
sub
inc
clc
xchg
xchg
sub
add
add
jl
clc
fs
cmpsb
clc
mov
clc
xchg
push
add
data16
adc
add
cld
frstor
add
sub
clc
mov
int3
mov
add
xchg
pop
mov
xor
add
add
add
sub
outsb
aad
mov
mov
cmp
add
scas
mov
clc
mov
inc
add
pop
mov
jge
clc
fs
or
or
add
xlat
cmp
mov
clc
shld
inc
add
add
add
xbegin
add
mov
mov
and
add
pop
cmpsb
clc
jne
clc
cmpsb
clc
or
add
xor
add
inc
add
cs
clc
push
dec
iret
xchg
movsl
clc
push
xchg
mov
aas
gs
fildl
dec
int3
test
adc
add
add
sub
cmp
mov
std
xchg
lret
add
sub
clc
xor
add
test
cmp
sub
clc
pop
repz
cs
fdivrl
and
add
cwtl
movsl
clc
in
dec
leave
jmp
add
mov
cli
jecxz
outsl
aas
push
sub
in
sar
lcall
mov
das
mov
push
clc
inc
add
insl
stc
sub
out
popa
add
mov
sub
mov
stc
xchg
arpl
add
lea
cmpsl
clc
sarl
push
pop
adc
add
repnz
bnd
add
or
clc
aam
into
pop
inc
clc
out
cmc
and
add
dec
sar
in
push
mov
idivb
mov
push
clc
fs
jmp
cmp
cltd
scas
addr16
dec
mov
insl
push
cmp
add
jns
ljmp
dec
mov
clc
int3
mov
pop
ljmp
sbb
dec
mov
jae
add
add
es
push
cmp
add
push
add
pusha
add
stc
enter
ljmp
pop
rclb
mov
add
aaa
mov
mov
cltd
jl
add
jo
add
clc
rclb
or
push
add
add
mov
xor
mov
add
pusha
add
cmc
sub
add
clc
xlat
push
filds
clc
mov
clc
out
or
outsb
cmp
clc
enter
cmp
jl
cs
clc
sbb
add
sbb
scas
jmp
adc
jp
clc
mov
fdivr
ds
clc
test
xabort
in
or
cwtl
mov
lods
cmc
mov
mov
clc
or
lea
negb
cli
insb
fisubl
add
add
and
add
dec
std
leave
xchg
std
mov
clc
aas
imul
cs
clc
jge
mov
aad
dec
sbb
add
bound
add
sahf
arpl
add
push
adc
mov
add
jle
add
pop
je
pushf
int
outsl
cltd
xchg
cmp
clc
popa
add
mov
clc
in
or
clc
pop
xchg
pop
xlat
dec
adc
mov
add
xor
add
aaa
xor
add
scas
daa
clc
mov
clc
cs
arpl
add
sub
add
xchg
jns
mov
mov
add
push
nop
mov
add
loopne
lea
xor
add
dec
push
push
out
gs
loope
pop
xchg
aad
add
movsl
clc
scas
jl
clc
inc
clc
ljmp
xor
add
add
mov
add
and
sti
cwtl
pop
test
aaa
xchg
push
sti
ret
clc
addr16
jecxz
dec
cli
movsb
clc
push
add
cmp
clc
or
xchg
adc
add
mov
dec
movsb
clc
jo
add
add
out
adc
add
sar
cmp
scas
call
aad
cmpsl
clc
es
ja
js
add
add
add
dec
cmp
in
in
and
add
data16
mov
push
add
stos
cmc
pop
decb
add
inc
clc
inc
add
adc
push
add
sar
mov
adc
add
inc
add
push
add
icebp
or
test
add
adc
add
cmp
lret
add
clc
arpl
add
clc
push
nop
cmp
stc
outsl
fsubr
scas
sub
push
add
in
inc
add
pop
out
cmp
dec
inc
add
insl
add
call
add
in
test
inc
clc
wbinvd
xchg
fdivrs
cmp
clc
dec
stos
mov
clc
add
add
clc
adc
and
add
xor
adc
add
clc
bound
add
add
das
and
add
dec
push
and
add
lea
mov
add
cmp
std
push
fistl
repz
cld
jbe
clc
sub
lods
hlt
ror
mov
add
fwait
lcall
test
sub
xchg
mov
add
mov
in
or
mov
sahf
clc
enter
push
outsl
add
add
in
data16
jle
push
or
jnp
test
dec
cwtl
pop
clc
xor
add
xchg
stos
sar
add
pop
push
clc
cmc
enter
loopne
mov
clc
cmp
clc
cmp
and
add
clc
pop
fdivs
call
clc
scas
outsl
lcall
and
cmp
add
daa
clc
mov
sar
aad
jecxz
fsubrl
mov
nop
push
add
jb
add
sub
clc
test
clc
sub
clc
pop
in
cmp
clc
cmp
add
xor
das
lcall
add
das
movsl
clc
adc
add
int3
out
scas
adc
add
in
rcrl
xor
add
push
xor
add
cmp
clc
sub
add
add
sub
jp
add
jmp
add
aaa
int
clc
add
add
ljmp
add
pop
jns
sar
leave
jne
sbb
add
or
divl
cmp
add
xchg
jnp
clc
roll
cli
mov
clc
in
mov
imul
jnp
cltd
jmp
clc
scas
popa
add
pop
mov
add
dec
mov
loope
ror
jp
pop
loope
pop
xchg
add
idivl
or
or
xchg
stc
inc
add
mov
clc
das
xor
add
add
es
jl
outsb
xbegin
sub
add
fidivrs
cmp
clc
test
add
jl
ja
clc
or
cmp
ds
or
add
aas
jbe
inc
add
stc
es
cmp
out
stc
loop
mov
add
dec
pop
aad
jno
add
imul
add
xor
add
add
stos
outsl
lahf
lock
pop
pop
mov
clc
push
add
ja
clc
and
add
add
clc
pusha
add
jno
add
pop
mov
dec
cmp
push
sub
sbb
sub
adc
cltd
pop
sar
adc
clc
xchg
xor
add
add
mov
clc
rcr
aas
xchg
call
mov
add
imul
add
add
clc
ret
out
enter
stos
mov
add
add
sbb
add
jp
ret
clc
xor
mov
jp
insl
jl
clc
aad
clc
jbe
add
sti
lcall
clc
dec
mov
clc
std
div
pop
shrl
and
jbe
clc
fmull
clc
cmp
add
idivl
insb
ds
fsubs
add
popf
fnsave
vsqrtps
add
mov
daa
clc
in
dec
adc
clc
fmulp
es
inc
clc
xor
add
fcmovnbe
mov
sub
add
lret
xchg
mov
xlat
xchg
test
push
clc
or
xabort
add
and
leave
sbb
xchg
dec
cmp
add
mov
int3
sub
and
sbb
mov
jmp
lcall
xchg
ficoml
add
or
push
add
test
clc
mov
add
outsb
push
lret
cmp
lret
ljmp
mov
pop
dec
aas
gs
inc
clc
lcall
jmp
add
clc
or
clc
or
add
dec
jo
add
add
inc
add
dec
mov
add
clc
mov
iret
aam
stos
mov
add
cld
cmpsb
clc
sti
enter
js
clc
stos
sbb
aad
sub
out
cmp
pop
clc
je
xor
add
cmp
xchg
add
add
cmp
clc
and
add
clc
sar
and
add
inc
clc
and
add
clc
sub
xor
add
loopne
cmp
add
or
clc
add
add
or
add
clc
inc
clc
addr16
push
add
jb
add
clc
inc
clc
jnp
clc
ljmp
add
xchg
inc
add
pop
inc
add
outsb
addr16
je
add
mov
add
mov
mov
iret
jne
out
cmpsb
clc
jl
jns
mov
mov
sub
push
mov
clc
jmp
clc
xchg
cmc
icebp
fisttpll
clc
xor
add
add
arpl
add
pop
pop
sub
icebp
mov
add
sub
clc
cmp
cmp
icebp
js
repnz
fmuls
add
aaa
dec
test
scas
das
and
add
clc
lret
mov
shlb
test
cs
sar
loop
jb
add
mov
clc
mov
push
add
test
xchg
mov
clc
jl
xbegin
insl
sbb
out
mov
add
ret
stc
out
mov
add
rcrl
and
add
or
loope
aas
arpl
add
and
add
inc
add
arpl
add
push
xchg
cmc
add
add
clc
dec
mov
xor
add
clc
insb
cmp
clc
mov
xlat
mov
sbb
sub
mov
jecxz
in
mov
add
test
sbb
add
mov
clc
dec
test
call
mov
cmp
sbb
xlat
dec
add
jge
cwtl
in
or
sub
push
dec
inc
add
jnp
xchg
push
add
or
add
adc
add
push
mov
and
add
clc
cmp
mov
pop
mov
cs
clc
ds
xchg
stos
cmc
jge
xbegin
clc
inc
clc
enter
xchg
sahf
or
sbb
add
lock
shlb
add
xchg
aam
pop
sahf
das
cmpsl
clc
push
adc
add
dec
and
shlb
ljmp
xchg
ret
adc
add
add
gs
call
add
sar
sbb
fdivr
mov
lods
insb
jl
dec
das
loope
popf
shrl
add
clc
adc
add
xor
add
jne
clc
add
add
clc
cmc
pop
fistpl
fstl
clc
ror
pop
lods
or
inc
clc
dec
adc
add
clc
pop
sub
incl
clc
jno
add
out
jne
jecxz
jo
add
or
add
in
stos
fcoms
clc
cmp
sub
lods
push
data16
inc
clc
movsl
clc
lahf
add
add
or
jo
add
clc
das
imul
clc
and
cmp
es
movsl
clc
pop
sub
add
jecxz
dec
fcoms
add
loope
lcall
out
adc
add
push
add
jge
lret
add
xchg
inc
clc
add
add
pop
clc
push
add
repnz
adc
add
add
mov
mov
add
add
add
clc
adc
add
jo
add
mov
jb
add
clc
repnz
pushf
leave
lods
pusha
add
push
aam
and
add
sarb
mov
xor
test
clc
fs
je
clc
inc
clc
imul
add
mov
test
push
repz
inc
clc
sbb
clc
sbb
fadd
clc
lcall
imul
clc
jp
mov
push
test
add
inc
clc
xor
add
push
clc
cmp
jecxz
xor
add
clc
xor
add
cmc
mov
clc
mov
add
mov
clc
sub
popf
mov
dec
dec
out
aaa
stos
sub
clc
mov
mov
jbe
sub
testb
add
leave
add
add
or
cmpsb
clc
imul
jns
add
imul
clc
rcrl
dec
pop
je
test
jb
add
clc
imul
ljmp
xorps
sbb
clc
xor
add
test
sar
mov
lret
data16
fldcw
push
pusha
add
insb
sbb
add
ljmp
clc
test
popa
add
scas
je
mov
popf
fmulp
mov
shll
icebp
scas
xor
add
lods
jno
add
pop
in
mov
xor
test
stos
xchg
mov
mov
out
mov
aas
xor
add
add
cmp
cmc
ret
clc
ja
add
add
add
xchg
add
mov
add
xor
add
lods
xlat
ret
jmp
add
jecxz
jbe
push
cwtl
stos
inc
clc
sbb
lock
in
add
clc
lcall
cwtl
test
xchg
adc
add
or
add
cmp
arpl
add
sbb
add
pop
es
push
clc
push
push
push
ds
repz
xor
adc
sub
push
sub
jns
clc
stc
or
clc
cltd
mov
arpl
add
jle
push
clc
cwtl
sar
imul
and
add
shll
add
pop
cmp
pop
adc
add
cwtl
sub
clc
imul
clc
mov
testl
adc
add
hlt
xor
clc
cmp
aas
mov
clc
mov
icebp
pusha
add
icebp
inc
clc
sub
aaa
sbb
add
xchg
cmpsb
clc
imulb
popl
clc
stos
in
mov
clc
pushf
push
in
or
pop
mov
inc
add
jns
cmp
cld
cmc
popa
add
stc
cmc
pop
movsb
clc
mov
mov
insb
clc
stc
cld
and
add
clc
pop
cmp
clc
rol
clc
add
add
pop
push
add
mov
negl
cmp
addr16
xchg
in
add
jne
cmp
mov
inc
clc
xchg
enter
push
shl
clc
adc
add
outsl
lahf
test
clc
lahf
jb
add
add
movsb
clc
inc
add
fdivl
mov
sub
add
pusha
add
sbb
push
lock
out
lods
icebp
test
push
clc
nop
add
add
inc
add
adc
add
into
sti
xchg
cmp
test
loop
ljmp
add
test
clc
loopne
pop
mov
mov
add
xor
add
mov
stos
push
daa
clc
jge
cld
mov
test
in
dec
and
add
jae
add
clc
aam
clc
jo
add
cs
clc
hlt
cs
add
pop
jae
add
hlt
jb
add
clc
adc
add
cmpsb
clc
sar
clc
sbb
mov
pop
fs
lods
xchg
sub
add
add
adc
add
hlt
test
rolb
add
aaa
rorl
stos
enter
mov
sub
adc
clc
mov
or
ret
jmp
mov
add
pusha
add
lods
mov
loope
jp,pt
dec
iret
and
stos
pop
out
pop
ficomps
clc
lret
dec
clc
dec
inc
add
dec
aad
fbstp
add
ja
clc
imul
add
push
add
in
fdivr
dec
sahf
adc
add
insb
push
insb
add
in
mov
cltd
jb
add
imul
push
mov
sub
sarl
clc
sbb
push
sti
ficompl
clc
jae
add
adc
jge
stos
mov
cmp
clc
test
clc
cmp
clc
mov
push
cltd
pop
push
mov
clc
inc
add
rorl
pop
aaa
aaa
fidivrl
cmpsb
clc
aas
mov
jle
ljmp
mov
or
jg
add
or
push
add
xchg
adc
add
int3
mov
movsl
clc
mov
pop
push
pusha
add
insb
clc
push
mov
iret
xbegin
pop
lea
add
jno
add
cmp
xchg
stos
mov
jp
add
mov
inc
clc
outsl
xbegin
das
and
add
xor
bt
mov
clc
and
add
not
das
mov
clc
jnp
add
imul
add
in
scas
mov
in
and
cmp
xchg
shrl
clc
mov
loop
stos
cmp
fildl
fiadds
add
out
mov
jbe
xor
add
add
xor
add
clc
pop
cli
mov
add
arpl
add
add
xchg
mov
sbb
dec
cmpsl
clc
add
inc
add
xor
add
xor
add
repz
mov
sbb
push
testl
add
lret
stos
adc
add
cmp
or
add
enter
cltd
mov
adc
add
sbb
push
clc
cmp
add
or
xor
add
out
inc
clc
dec
test
dec
and
popf
mov
sub
aas
jae
add
out
jbe
insl
cwtl
movsl
clc
jno
add
add
push
add
imul
push
xor
cmp
or
adc
add
add
mov
push
add
jmp
bound
add
cmpsb
clc
int3
xchg
in
pop
pop
mov
clc
loopne
comiss
insl
cmp
add
pop
imul
clc
fwait
xchg
jle
movsb
clc
cmp
or
movsl
clc
pop
das
leave
jnp
hlt
add
add
xchg
sar
mov
test
clc
and
and
add
fnstcw
clc
push
sub
xor
add
popl
add
mov
sub
adc
add
movntps
popf
dec
aas
pop
sub
clc
dec
lods
xor
add
xor
clc
inc
add
mov
xchg
sbb
clc
cltd
mov
cmp
clc
add
push
clc
mov
movq
loop
stc
sbb
add
add
stos
fs
test
fidivrs
imul
jle
test
stc
adc
add
cmp
sbb
sbb
add
sbb
loopne
add
add
iret
jno
add
cwtl
push
lahf
xabort
dec
sbb
fdivs
add
shll
add
add
add
sbb
add
sar
fcoml
add
jecxz
xchg
fcomi
sti
mov
add
cli
int
cmp
clc
sahf
dec
adc
sub
clc
iret
xchg
xbegin
clc
mov
jge
mov
cmp
add
sbb
fmuls
jae
add
mov
clc
lods
inc
add
cmp
add
xbegin
stos
adc
clc
or
add
pop
out
scas
mov
or
cmpsb
clc
pop
mov
add
add
add
in
xor
add
xchg
mov
mov
or
clc
cmp
data16
and
add
sbb
ret
cmp
mov
cwtl
cs
jge
push
add
lahf
idivl
push
popf
lret
adc
add
add
add
add
mov
mov
xor
add
add
repnz
add
es
jge
mov
sub
push
cmp
add
adc
add
sub
shrl
in
cmp
sahf
mov
mov
clc
xlat
adc
mov
clc
cmp
adc
add
je
dec
add
add
test
clc
mov
lret
add
sar
add
pop
jle
dec
mov
push
xor
add
push
sar
nop
imull
clc
sar
add
in
cmp
xor
jbe
sub
shll
lret
add
add
jl
jecxz
dec
stc
jle
add
pop
push
jle
clc
dec
cwtl
cwtl
inc
clc
data16
mov
sbb
add
inc
clc
and
in
adc
add
add
clc
ja
clc
jne
clc
dec
inc
clc
xchg
mov
sbb
pop
mov
movsl
clc
pop
pushf
xchg
mov
sbb
add
lret
adc
add
clc
push
pop
jbe
fmuls
bound
add
roll
add
lcall
shrl
add
and
dec
xchg
ljmp
int3
pusha
add
push
add
xlat
test
cmp
add
outsl
inc
clc
xor
mov
add
or
sarb
aam
add
ds
cltd
push
add
lods
mov
xchg
cmp
adc
add
add
add
ds
arpl
add
xchg
sub
sub
clc
push
push
add
push
clc
pop
lcall
add
jbe
add
ficoml
mov
scas
daa
clc
adc
clc
or
clc
test
push
cmp
clc
jbe
jnp,pn
pop
jno
add
jns
xlat
dec
imul
cmp
xchg
pusha
add
sbb
mov
clc
jne
inc
clc
fs
lods
jl
add
data16
roll
clc
sbb
sbb
clc
or
and
add
add
lock
aaa
and
add
clc
push
fbstp
add
into
inc
add
xor
clc
lock
xchg
mov
jl
clc
out
cmp
clc
xor
pop
aas
dec
lock
add
add
adc
add
clc
cmpsb
clc
js
fstl
xchg
pop
mov
add
sub
add
and
add
sbb
addr16
cmpsl
clc
mov
sub
xchg
not
push
add
jg
add
push
pop
pop
add
add
lahf
or
add
xabort
cmp
add
pop
loopne
cltd
xchg
and
add
push
dec
lods
dec
pop
aas
pop
xor
add
lahf
jle
jne
sbb
aaa
pop
inc
clc
mov
pop
cmp
aas
aas
and
in
fldcw
add
scas
fidivrl
clc
jge
add
aaa
jle
add
mov
add
insb
lods
or
gs
dec
cs
mov
add
add
add
clc
cld
and
negb
push
popf
ja
call
add
xchg
add
add
xchg
sbb
add
clc
add
test
cmp
clc
xchg
push
cltd
fists
add
mov
clc
mov
push
hlt
cmp
xchg
movsl
clc
divb
enter
into
or
fidivs
add
add
cmp
adc
add
sahf
aad
lcall
adc
add
add
dec
pop
pop
jmp
push
add
popf
mov
bound
add
xchg
inc
clc
sar
roll
js
jo
add
add
sti
sbb
clc
add
cmpsl
clc
out
loopne
adc
add
add
int
add
in
int3
or
clc
repz
and
add
cmp
xor
add
mov
add
js
mov
icebp
jo
add
cmpsb
clc
and
add
mov
push
dec
hlt
mov
pop
pop
in
xchg
xchg
jno
add
out
and
add
lea
jle
mov
data16
icebp
fidivl
es
sbb
pushf
cmp
imul
stos
lret
or
cmpsb
clc
loope
sbb
add
clc
into
pop
pop
pop
mov
clc
mov
clc
imul
push
fidivl
rcrb
push
clc
gs
mov
inc
clc
xchg
inc
clc
fldt
flds
push
sub
xor
add
cmp
add
in
xchg
inc
add
mov
test
pop
xchg
insl
jno
add
jge
cmp
dec
stos
clc
loop
xchg
xor
scas
xchg
push
sub
sub
outsb
or
push
and
add
sbb
mov
mov
clc
cmp
adc
add
fstps
data16
adc
add
sar
adc
pop
mov
clc
inc
add
shll
imul
dec
jo
add
in
pop
and
add
push
add
inc
clc
ljmp
mov
add
mov
int
in
movsl
clc
out
cwtl
or
or
xor
add
add
dec
sahf
call
push
add
lcall
mov
pop
cmc
or
insl
in
lahf
out
outsl
in
out
push
ret
clc
pop
or
and
add
pop
jne
clc
lods
adc
sar
leave
push
add
or
sbb
sbb
sbb
xor
jmp
add
or
sub
clc
call
fisubrs
xchg
xchg
cmp
movsb
clc
xchg
pop
jns
pop
adc
add
repnz
add
cmp
clc
insb
xchg
rcll
clc
push
xchg
jne
popl
gs
dec
pop
clc
mov
enter
mov
jo
add
clc
decb
sbb
add
pop
das
arpl
add
jo
add
mov
loop
sbb
mov
jns
add
cld
call
pop
clc
call
clc
imul
decb
jle
add
movsb
clc
push
dec
jnp
add
cwtl
fucom
clc
push
sub
inc
add
cmp
xlat
sahf
mov
add
cli
inc
clc
mov
add
jo
add
dec
test
mov
clc
xor
enter
jl
repz
popl
add
mov
cmp
outsl
pop
jg
add
sub
clc
push
add
push
add
aad
outsl
push
pop
clc
dec
jb
add
add
jp
xor
add
clc
push
add
daa
clc
lock
add
sbb
add
and
xchg
jbe
aas
daa
clc
dec
lock
xchg
pop
inc
add
xchg
dec
mov
lret
add
clc
in
inc
add
fbstp
push
add
mov
pop
adc
add
pop
mov
stos
mov
add
hlt
stos
test
repnz
clc
push
movsb
clc
enter
xor
add
pusha
add
iret
test
flds
add
lods
pop
clc
and
add
arpl
add
push
clc
add
add
add
add
add
fistps
clc
stos
arpl
add
add
dec
push
add
lret
cmp
mov
add
push
xchg
hlt
push
es
mov
cmovo
add
jle
clc
jle
pop
clc
dec
testb
imul
mov
clc
fisubl
push
clc
inc
add
jmp
in
rol
clc
dec
loope
dec
movsl
clc
insl
cmc
in
inc
clc
in
popf
out
std
pop
push
add
jno
add
ficoms
add
clc
call
add
xchg
xchg
test
es
sub
enter
jb
add
sub
sub
sub
add
mov
clc
test
fs
sub
xor
add
xor
add
dec
mov
shlb
add
mov
clc
inc
add
push
stos
pop
clc
bound
add
clc
sbb
push
push
add
lret
clc
bound
add
clc
push
clc
loop
leave
into
repnz
aam
xor
add
add
fisttps
or
add
mov
add
arpl
add
add
cld
outsl
in
push
repnz
add
add
jns
mov
ja
push
test
loopne
cmpsl
clc
sub
inc
clc
fcomps
ret
clc
out
div
imul
add
jmp
mov
add
ficoml
add
cli
xchg
mov
sub
and
sbb
clc
rolb
add
fwait
int3
xchg
cmp
add
mov
imul
mov
dec
mov
xabort
clc
mov
out
sub
dec
lret
fnstsw
movsb
clc
hlt
mov
repz
push
clc
add
aas
addr16
xabort
adc
add
dec
mov
push
dec
xor
clc
jecxz
dec
bound
add
xchg
pop
aas
xchg
pusha
add
cmp
add
add
ret
xchg
lock
jbe
insb
mov
clc
cmp
add
or
sqrtps
add
add
add
cld
jno
add
clc
mov
add
clc
sbb
mov
and
popa
add
aam
push
loop
popf
add
add
add
mov
add
mov
icebp
sar
jb
add
clc
stc
sbb
mov
add
jl
gs
sarl
shrb
add
inc
add
xor
add
mov
cmp
jmp
cltd
pop
int3
sbb
repnz
dec
test
dec
cmp
clc
sar
add
jb
add
clc
lcall
or
add
inc
clc
mov
add
sub
clc
in
jns
clc
lods
dec
or
ss
test
push
add
fsubrl
add
aam
es
popf
fcmove
in
pushf
inc
add
xchg
jge
jb
add
fcmovnu
int
cmp
add
add
xor
add
pop
sub
cmp
clc
jb
add
addr16
jl
add
stc
pop
clc
jg
mov
dec
iret
inc
clc
cli
test
aam
push
clc
adc
add
clc
inc
clc
cmpsb
clc
inc
clc
out
adc
add
lock
add
jl
ja
frstor
fs
xor
add
clc
hlt
cmp
mov
fcomps
imull
add
jle
out
push
ds
clc
jns
clc
push
clc
in
push
add
and
add
add
add
scas
mov
mov
sub
cmp
xchg
jg
aas
push
add
rcl
negb
decb
clc
cmp
aam
clc
nop
mov
add
mov
sub
xchg
mov
cmpsl
clc
mov
mov
add
sub
add
push
add
xabort
cmpsb
clc
push
add
scas
xor
jl
add
add
add
lea
push
add
testl
out
pushf
data16
pop
leave
lods
imul
add
add
dec
mov
clc
jne
add
shlb
add
cmp
add
bound
add
ret
clc
lret
cmp
jo
add
add
jnp
cld
pop
fwait
pop
cmpsb
clc
aad
add
mov
mov
loope
xlat
add
add
daa
clc
cmp
clc
xchg
mov
cmp
pop
jb
add
add
pushf
cmpsl
clc
stos
and
add
add
jecxz
insl
add
add
jbe
xchg
and
clc
fsubs
add
push
imul
add
dec
popf
mov
clc
adc
add
in
loopne
js
push
jb
add
add
mov
clc
icebp
cltd
jo
add
gs
xchg
cmc
lods
adc
add
pop
adc
add
test
and
add
add
add
jo
add
mov
clc
cltd
fildl
js
push
testl
add
add
add
mov
add
cmc
add
add
clc
mov
aam
clc
dec
cld
ret
clc
arpl
add
clc
negb
push
insb
mov
stos
ret
clc
dec
sbb
push
add
jge
xbegin
add
dec
adc
add
clc
push
int
cli
add
add
xor
clc
loop
push
clc
pop
test
add
and
add
cltd
out
cmp
clc
fnstcw
insb
fldt
add
push
add
add
clc
jbe
mov
clc
repnz
es
mov
add
enter
push
fildl
sub
cmp
out
testb
decl
clc
mov
add
add
lods
loope
and
add
cltd
dec
mov
clc
xlat
jg
xor
add
clc
int
add
inc
add
pop
pusha
add
pop
mov
dec
aas
xchg
cmp
shrb
lods
add
add
clc
adc
add
clc
pop
dec
int3
fildll
icebp
lock
ret
std
sahf
out
cli
or
push
clc
in
cmpsb
clc
adc
add
inc
add
gs
lcall
iret
inc
add
pushf
test
inc
clc
push
add
inc
add
pusha
add
sbb
gs
and
add
sub
sar
and
add
xor
add
lcall
test
cltd
or
clc
xabort
jo
add
iret
ror
aam
cmpsl
clc
xbegin
clc
jg
cltd
adc
enter
add
hlt
mov
clc
ret
clc
vzeroupper
xbegin
add
add
sub
clc
add
add
push
es
push
clc
jg
fdivrp
mov
sub
add
jne
sbb
insl
sub
inc
clc
jl
xor
add
cmp
push
mov
mov
rcll
cmp
xor
hlt
pop
clc
mov
pushf
cmp
iret
mov
mov
pop
icebp
imul
xabort
lahf
ret
clc
xchg
in
mov
jbe
add
jno
add
xlat
pusha
add
xlat
mov
add
cmp
sub
jne
fwait
out
clc
push
add
das
mov
cs
add
dec
ss
sahf
stos
xchg
push
and
add
bound
add
clc
and
clc
iret
xchg
jbe
lea
mov
clc
sahf
lea
cmp
clc
sbb
cli
cltd
cwtl
mov
cwtl
push
inc
clc
inc
add
sbb
clc
lods
mov
add
popf
lahf
mov
out
pop
xbegin
cltd
mov
add
or
clc
xchg
push
je
add
imul
stos
cmc
xchg
xbegin
add
add
clc
inc
clc
dec
insb
pop
lods
cmc
outsb
adc
repz
and
add
add
xabort
mov
iret
fisubrs
nop
pop
adc
clc
inc
clc
pop
add
clc
outsl
arpl
add
inc
clc
arpl
add
mov
jo
add
xor
add
scas
mov
mov
iret
dec
push
add
mov
add
clc
fadd
clc
notl
jp
add
mov
xor
add
clc
ja
add
mov
dec
adc
lock
mov
out
popf
mov
add
mov
jns
clc
stc
iret
stc
call
add
add
add
repz
add
pop
dec
push
scas
icebp
shlb
icebp
push
push
add
add
jge
add
inc
clc
adc
add
loop
pop
in
cltd
test
mov
scas
sub
and
add
pusha
add
ds
cld
popf
lods
or
sub
push
pop
fsts
clc
add
add
inc
add
inc
add
pop
jno
add
lcall
clc
roll
add
cmc
mov
inc
add
ja
add
mov
add
test
clc
mov
add
inc
clc
and
add
clc
mov
add
adc
add
fcoml
jmp
clc
mov
loope
cmp
lods
xchg
dec
ds
fwait
out
push
xor
add
mov
add
movsl
clc
dec
cmc
inc
clc
fimull
jbe
jecxz
testb
loope
hlt
aam
add
sub
es
inc
clc
mov
dec
int3
jno
add
add
or
out
js
scas
out
inc
add
mov
insb
js
inc
clc
outsb
mov
mov
clc
rorb
and
daa
clc
pop
mov
add
dec
pop
mov
cwtl
jne
dec
repnz
cmpsl
clc
movsb
clc
xchg
or
jo
add
jl
clc
jmp
ds
add
js
mov
ror
test
cwtl
inc
add
shrl
scas
jns
clc
clc
in
and
add
pop
aam
jno
add
clc
xor
add
jecxz
sbb
dec
xor
add
add
data16
jmp
sar
add
lcall
cmpsl
clc
xabort
inc
add
mov
add
daa
clc
cld
rcl
sbb
cmp
clc
shlb
pop
mov
clc
xor
clc
pop
mov
clc
push
cmp
clc
ljmp
jae
add
xchg
push
mov
ds
sbb
sbb
add
push
scas
jbe
sub
call
js
js
clc
and
add
pop
aaa
sar
or
add
add
cmp
cmp
pop
pushf
hlt
jae
add
add
add
add
into
pop
xchg
gs
ds
aam
mov
clc
nop
cmp
push
aas
cmp
adc
add
mov
clc
jno
add
add
jno
add
add
daa
clc
popa
add
sub
push
imul
test
push
add
inc
add
sub
add
lods
dec
dec
mov
mov
clc
out
inc
add
shll
add
repnz
mov
and
add
enter
mov
clc
cmc
mov
rcll
add
jge
aaa
push
fstl
add
push
mov
jns
clc
frstor
add
rorb
pop
test
fstl
ja
call
clc
cmp
mov
sarb
filds
add
clc
outsl
daa
clc
inc
add
enter
cmp
and
add
sub
clc
xor
add
js
add
hlt
sahf
insb
outsb
in
mov
cmpsb
clc
dec
add
add
dec
in
fists
rol
clc
imul
bound
add
shll
push
add
dec
hlt
or
clc
xlat
push
in
movsl
clc
icebp
cwtl
xchg
mov
mov
dec
sbb
clc
jbe
xor
cld
mov
add
add
pop
cmp
mov
xchg
sub
clc
jae
add
clc
push
addr16
xor
add
mov
notb
shll
mov
mov
iret
aas
prefetcht1
add
add
adc
add
sbb
xchg
jno
add
add
push
sub
clc
push
dec
inc
add
aad
add
add
clc
gs
push
or
xchg
jb
add
mov
test
inc
clc
push
jno
add
add
test
jnp
clc
ss
inc
clc
push
es
out
jecxz
xchg
mov
add
inc
add
negb
mov
clc
sar
clc
icebp
outsb
or
clc
fidivl
add
push
add
or
clc
aad
int3
fs
push
sbb
insl
fstps
popa
add
sbb
add
add
add
clc
cs
xabort
das
fsubl
add
stos
fnstsw
outsb
adc
inc
add
jge
clc
ret
add
dec
pop
gs
cmp
sub
imul
add
ss
dec
push
leave
pop
xor
add
and
add
aaa
in
pop
sub
add
ljmp
xchg
dec
or
clc
adc
add
mov
clc
and
add
es
loop
jne
add
loop
inc
add
jno,pn
add
sar
inc
clc
outsl
ret
clc
xor
add
add
clc
mov
xchg
clc
loopne
fadds
add
sub
clc
addr16
lcall
pop
jbe
clc
enter
add
xor
sbb
clc
xor
push
clc
insl
mov
xor
add
cmp
clc
test
clc
mov
dec
sub
imul
pop
jecxz
cmpsl
clc
aad
adc
add
or
mov
clc
call
clc
mov
lea
xchg
push
aaa
pushf
lods
inc
add
xabort
add
in
outsl
pop
pushf
inc
clc
xor
add
mov
mov
add
push
xabort
sar
or
push
add
data16
sbb
add
das
cmpsl
clc
sar
sub
xchg
mov
pop
and
add
add
insl
stos
push
add
xchg
sub
insb
adc
in
push
pop
cmp
cltd
cmp
add
add
insl
cli
mov
iret
mov
cmpsl
clc
out
insb
adc
add
add
add
sub
test
mov
loopne
inc
clc
lods
add
es
adc
add
add
fsubl
clc
into
push
test
cld
out
cmpsb
clc
es
test
xchg
stos
icebp
sbb
stos
out
jl
clc
push
add
sub
or
jg
clc
ror
ret
mov
pop
or
test
clc
push
jecxz
mov
stos
pop
clc
xor
add
outsl
sarb
lcall
add
ds
xabort
xchg
pop
js
mov
mov
fstl
add
push
imul
add
or
push
or
clc
add
add
clc
clc
jne
add
xor
add
daa
clc
inc
add
loope
sahf
xchg
push
out
arpl
add
dec
clc
xchg
sahf
inc
clc
imul
add
call
clc
mov
inc
clc
dec
pop
pop
sar
clc
mov
sub
clc
std
icebp
fldenv
jl
ds
clc
sub
jns
stc
mov
add
mov
cmp
pop
in
fndisi(8087
clc
jae
add
enter
stc
push
add
in
mov
add
pop
dec
test
rorl
cmp
clc
dec
mov
clc
insl
aad
sub
jne
rol
clc
icebp
sbb
mov
data16
push
xchg
jge
clc
push
clc
hlt
xchg
and
add
loopne
jnp
clc
add
add
add
add
lret
push
mov
clc
out
push
xor
add
repz
cmp
jecxz
add
pop
clc
pop
and
clc
add
ficoml
loope
out
sarl
pop
clc
pop
jge
and
test
add
pop
mov
clc
push
add
data16
adc
add
add
add
pop
stc
jno
add
jnp
push
add
xor
clc
test
mov
sub
sar
jns
dec
dec
movsl
clc
xor
add
jbe
clc
enter
pop
fsubs
lea
add
clc
and
lods
sar
and
add
imul
clc
fcompl
js
mov
clc
sar
push
add
mov
push
pop
es
fldt
clc
aad
mov
ss
sbb
add
clc
mov
adc
add
push
fisttpl
pusha
add
inc
clc
jl
adc
clc
push
hlt
push
cmp
fsts
std
ss
mov
clc
dec
addr16
fs
cmp
dec
daa
clc
repz
insl
shlb
pop
in
fs
pop
mov
adc
inc
clc
in
sti
fistps
pop
clc
test
repz
add
fs
fcomip
jbe
mov
clc
dec
and
insl
cmp
and
add
inc
add
imul
clc
push
clc
jae
add
add
adc
ja
into
and
add
dec
push
or
std
fs
out
sub
inc
add
and
add
pop
inc
clc
fwait
pop
or
clc
or
add
jg
aam
ljmp
jne
mov
push
jl
xchg
test
sar
clc
repz
mov
clc
xchg
jp
rcrb
sub
add
inc
add
and
add
clc
fimuls
leave
jae
add
mov
ds
add
inc
clc
add
add
insb
xor
add
inc
add
inc
add
loop
insl
outsb
pop
mov
add
mov
out
xor
add
add
mov
dec
add
stos
sti
jge
iret
cmc
out
dec
pusha
add
cmp
mov
add
and
add
add
dec
mov
clc
test
data16
pushf
cmp
add
xchg
mov
movsb
clc
sub
sahf
daa
clc
adc
add
add
out
enter
test
clc
fsubl
loope
into
scas
vsqrtps
add
add
sub
cmpsl
clc
mov
lret
add
add
add
cmp
mov
popf
or
mov
add
bound
add
dec
stc
icebp
xchg
aam
and
add
cmp
add
add
cmp
add
push
gs
push
mov
cmp
insl
ljmp
inc
clc
cmp
in
fidivrs
repz
inc
clc
pushf
dec
mov
cmp
fidivrs
mul
clc
outsb
cmpsb
clc
xchg
xchg
and
add
xlat
mov
pop
clc
and
sar
or
clc
adc
add
mov
clc
dec
adc
cmp
add
add
push
clc
imul
jle
jae
add
popa
add
das
add
add
mov
add
or
dec
cmp
es
sbb
lcall
pop
aas
scas
dec
inc
add
jno
add
cltd
das
pushf
adc
inc
clc
or
imul
daa
clc
jl
fnstsw
fisttpl
add
mov
clc
popa
add
ljmp
sahf
std
imul
clc
test
add
push
in
sbb
add
sbb
add
dec
jae
add
add
clc
inc
add
bound
add
mov
add
sarl
xor
add
clc
iret
test
mov
clc
push
cmp
dec
sbb
and
and
add
add
inc
add
pop
mov
cmp
ss
js
mov
add
jb
add
push
lcall
clc
inc
add
sbb
add
cmpsb
clc
jae
add
jl
add
and
add
and
add
or
clc
cmp
stos
cmp
stos
xchg
add
add
clc
das
push
nop
fldcw
cli
cmp
add
dec
cmp
ja
clc
jb
add
add
xchg
test
into
dec
imulb
xbegin
data16
ret
add
dec
pusha
add
sub
clc
or
outsl
aas
dec
or
sahf
sar
dec
fisttpll
jg
sub
sahf
jno
add
add
in
jp
arpl
add
clc
and
add
clc
cmp
add
xchg
lret
add
test
mov
mov
jno
add
cwtl
test
xabort
clc
loopne
sarl
clc
test
add
add
clc
push
add
add
shlb
clc
cltd
xchg
mov
mov
sub
sbb
or
add
inc
clc
outsb
test
push
add
aas
scas
insl
sbb
add
ret
int
insl
jbe
jns
clc
pop
xor
mov
xor
add
bound
add
sbb
notb
add
inc
add
ret
clc
cmp
cmpsb
clc
into
int3
stos
dec
mov
push
and
add
mov
mov
add
pop
pop
arpl
add
add
push
add
nop
inc
clc
xbegin
nop
sub
jp
add
and
add
add
sbb
clc
rcrb
ja
int3
cmp
and
add
add
mov
mov
xor
cmp
fwait
adc
or
cli
ja
clc
push
add
insl
mov
sar
add
dec
push
inc
add
jge
clc
sub
aad
mov
add
cwtl
sbb
clc
loopne
ret
clc
or
xor
add
cli
cmp
add
popa
add
pop
faddl
add
add
imulb
add
pop
stc
cmp
add
mov
das
xor
add
ss
shlb
clc
xchg
out
test
add
push
dec
loope
inc
add
jle
test
pop
dec
popa
add
das
inc
add
mov
mov
add
sbb
clc
bnd
add
add
mov
and
add
clc
mov
push
add
mov
dec
or
add
add
add
pop
cmp
pushl
mov
add
jns
jl
out
pop
push
fwait
jp
clc
sahf
es
rorl
sbb
add
dec
ret
add
shl
clc
mov
sub
ret
clc
js
sbb
dec
dec
sub
clc
lea
adc
add
fcomi
hlt
sub
mov
cmp
clc
sub
add
sub
add
mov
divb
add
push
fcomi
add
add
cmpsb
clc
push
add
loop
jle
imul
mov
je
add
add
loope
mov
scas
push
outsb
mov
faddl
es
push
add
dec
xchg
or
add
add
add
mov
clc
inc
add
cli
jp
lret
add
mov
lods
mov
add
mov
sbb
clc
imul
sti
mov
mov
fdivrs
add
or
jmp
mov
pop
clc
pop
out
mov
mov
clc
aaa
fldenv
add
fwait
das
pop
mov
push
add
xchg
sbb
clc
add
add
adc
add
out
inc
add
jmp
gs
push
pop
mov
pusha
add
fs
in
inc
clc
loopne
push
add
outsb
jbe
add
ficomps
adc
add
iret
mov
clc
testl
add
pushf
adc
enter
mov
clc
jo
add
add
add
imul
and
add
clc
not
pop
adc
add
stc
xchg
mov
add
add
lret
pushf
cmp
cs
push
add
inc
clc
add
add
mov
add
scas
push
clc
test
mov
add
test
sbb
clc
jge
mov
clc
fisttps
clc
mov
add
sub
add
or
clc
mov
pop
inc
clc
mov
clc
cmp
add
mov
clc
jo
add
fmull
clc
push
jmp
sub
sbb
clc
js
add
ss
lcall
clc
push
add
push
dec
gs
leave
mov
add
pop
pop
in
ds
into
push
add
mov
cmp
lret
lock
add
in
fidivl
add
add
cmp
insl
pop
pop
insl
ja
test
xor
leave
cmp
fdivl
add
dec
dec
imul
add
or
sar
clc
mov
add
sarb
sti
and
add
jp
mov
add
daa
clc
sahf
and
add
add
pop
clc
xbegin
mov
enter
add
clc
clc
jl
add
sbb
mov
mov
add
daa
clc
cli
out
insb
iret
or
clc
cmc
pop
pushf
push
xchg
mov
fldcw
int3
movsb
clc
test
loope
push
add
mov
push
adc
add
out
jb
add
xor
add
imul
js
clc
jmp
cmp
cmp
sar
xchg
or
es
xor
add
add
cmp
add
add
xchg
mov
sbb
xchg
lcall
clc
pop
int3
mov
jne
inc
clc
cmp
mov
jg
ljmp
xchg
pop
nop
push
pop
je
or
add
test
inc
add
sbb
add
adc
add
clc
in
inc
add
je
mov
clc
aas
clc
aad
push
add
mov
add
inc
add
mov
xchg
fldl
add
pop
clc
lcall
add
add
test
push
push
add
idivb
test
dec
rcrb
mov
add
out
pop
jo
add
add
clc
jbe
add
dec
push
jbe
loope
and
add
jecxz
jge
dec
outsb
cmp
adc
clc
cmp
sbb
add
add
pop
cmp
mov
jmp
fisttpl
mov
fcmovb
clc
xor
add
add
cmp
cmp
xor
add
stc
mov
mov
pop
mov
pushf
cmp
and
pusha
add
pop
mov
sub
fisubs
lcall
xchg
sar
cmp
clc
std
ljmp
daa
clc
mov
add
add
lods
xbegin
daa
clc
inc
clc
mov
add
and
add
pop
iret
cltd
sti
leave
dec
es
mov
add
pop
or
clc
iret
in
fldcw
lcall
dec
out
or
pop
xor
clc
pusha
add
dec
gs
je
lahf
stc
mov
add
lcall
add
pop
push
add
dec
leave
cmpsb
clc
jns
and
add
add
movsb
clc
cmp
xchg
stos
mov
lods
xor
add
pushf
cmp
fsts
cwtl
repz
insb
pop
int
clc
mul
clc
mov
or
add
clc
test
pushf
pusha
add
push
jns
add
jnp
clc
push
clc
push
or
add
fs
sbb
jns
sub
clc
xor
add
add
ljmp
mov
adc
sar
sar
stos
movsb
clc
mov
hlt
loopne
cmp
clc
dec
outsl
mov
pushf
cmp
add
mov
clc
cs
inc
clc
xlat
adc
add
dec
and
add
int
cmp
test
dec
stos
in
xchg
add
add
lods
clc
add
add
mov
clc
mov
inc
clc
adc
add
popf
pop
cmpsl
clc
pop
gs
imul
clc
popa
add
movsb
clc
inc
add
sbb
clc
xor
add
xor
add
clc
scas
cmp
fists
sbb
clc
mov
push
xchg
xchg
push
sub
inc
clc
clc
push
nop
or
dec
sub
clc
sub
bound
add
add
test
dec
cmp
repnz
clc
out
jno
add
ljmp
cs
clc
and
add
lods
and
add
add
cli
popa
add
xchg
sar
push
pop
lret
pop
sub
add
xor
cmp
lcall
ret
clc
nop
out
fistpll
inc
add
cmpsl
clc
pop
clc
insl
ret
clc
add
add
add
out
mov
clc
cmp
js
pusha
add
adc
add
clc
roll
clc
aam
add
clc
call
add
repz
scas
inc
add
or
clc
xchg
rolb
stos
int
add
repnz
jge
cs
xchg
mov
add
xchg
mov
add
adc
add
fcmovne
rorl
sub
adc
cmp
pop
cmp
add
popa
add
popf
or
and
add
add
add
clc
fsub
clc
cmp
and
add
clc
gs
out
mov
pusha
add
rorb
clc
dec
rclb
add
mov
daa
clc
test
mov
inc
clc
push
sbb
je
rcll
add
clc
xchg
mov
in
push
fs
inc
add
outsl
sbb
dec
jecxz
sbb
clc
iret
inc
add
test
clc
out
cmp
lret
out
dec
cwtl
cmp
ds
add
clc
movsb
clc
sti
nop
scas
in
sub
add
push
nop
xor
add
or
arpl
add
repz
popa
add
js
stos
mov
and
push
add
stc
aas
lods
divl
std
pop
sbb
dec
jns
clc
jae
add
mov
add
jns
ds
clc
jp
xlat
jbe
loop
adc
add
lods
rclb
clc
sbb
mov
clc
stos
adc
add
xchg
sub
ret
clc
add
add
add
jne
mov
add
mov
lea
mov
clc
add
add
in
jmp
cmp
sub
add
and
cs
and
clc
cltd
push
add
pop
stc
cmp
mov
scas
sar
mov
clc
in
jne
sbb
dec
pop
hlt
mov
clc
scas
jae
add
add
iret
dec
push
clc
sar
xchg
fstpt
sbb
pop
inc
clc
sar
lcall
movsb
clc
sbb
add
jnp
cmpsb
clc
std
pop
xchg
sub
test
cmp
jae
add
pop
insl
xchg
mov
push
je
add
sub
push
mov
clc
mov
add
fwait
push
push
push
pop
inc
add
xor
dec
outsl
stc
sbb
add
ds
ljmp
push
inc
add
popa
add
pop
clc
cs
dec
es
lods
pop
mov
adc
add
add
icebp
cld
ds
dec
xchg
cmp
addr16
lret
pop
pop
jle
clc
lods
repz
clc
js
lods
cli
push
clc
nop
test
clc
lock
sbb
clc
jecxz
aam
fildll
clc
and
add
mov
loop
daa
clc
sar
aas
mov
add
dec
pop
shll
or
xchg
fmull
add
test
clc
sahf
aas
pop
cltd
pop
jne
gs
mov
cwtl
ja
add
sahf
ds
cmp
mov
and
push
pop
hlt
pop
mov
add
jg
repnz
loop
xchg
mov
push
clc
jp
clc
xchg
lods
sub
cmp
aam
clc
sar
add
ja
ds
outsl
lock
lea
mov
clc
adc
add
mov
clc
test
xor
add
push
scas
xchg
mov
adc
add
push
sub
sar
add
addr16
es
jl
add
sbb
add
es
ror
repz
push
pop
call
fdivrl
lret
xchg
insb
arpl
add
out
mov
mov
shll
lret
ret
mov
add
jg
cmp
dec
sbb
add
add
clc
xchg
popl
mov
xlat
shlb
clc
in
xchg
popf
cmpsb
clc
mov
imul
sub
inc
clc
xchg
xor
mov
repnz
es
inc
add
jle
push
imul
scas
xchg
dec
push
in
in
out
cmp
loopne
mov
jno
add
clc
ror
inc
add
inc
clc
add
dec
pop
sti
lods
lods
adc
add
dec
jno
add
or
add
or
add
mov
add
adc
add
bound
add
pop
mov
stc
mov
add
pop
scas
xor
add
rcll
add
push
add
inc
add
jnp
sarb
sub
add
cmc
jbe
xchg
cmp
push
add
sub
or
add
shlb
mov
fildll
add
popf
stos
mov
dec
add
xlat
shlb
sbb
xor
add
nop
sbb
dec
out
iret
cwtl
lods
insl
mov
clc
dec
add
add
test
mov
sti
aaa
frstor
add
fisttps
insb
mov
cmp
clc
lahf
add
add
clc
lods
fdiv
int
test
dec
xchg
test
clc
mov
inc
clc
mov
add
mov
adc
add
add
xor
add
in
pop
call
add
jmp
mov
xor
add
pop
sbb
lea
clc
bound
add
add
lock
pop
clc
xchg
sub
add
cmp
dec
add
add
out
cmp
add
cmp
cmp
sub
xbegin
adc
cmp
clc
sub
clc
jae
add
sbb
add
adc
add
jae
add
ja
clc
mov
push
inc
clc
add
add
add
clc
adc
xabort
add
add
add
clc
or
adc
add
add
nop
pandn
clc
pop
clc
repz
pop
sbb
add
dec
lahf
xchg
pushf
mov
dec
movsb
clc
fdivrl
xchg
je
add
jmp
es
cmp
jns
xchg
sub
add
xchg
stos
fwait
aad
fdivr
and
add
clc
call
and
adc
add
fcompl
lea
pushf
leave
mov
clc
jge
sub
in
inc
clc
call
xor
add
cltd
mov
dec
mov
add
mov
add
sub
add
loop
mov
or
clc
jno
add
icebp
mov
lcall
mov
inc
clc
movups
add
add
gs
mov
stos
das
subps
pusha
add
xchg
sbb
clc
sar
xchg
dec
mov
cmp
add
add
xchg
inc
add
jo
add
fimuls
mov
push
add
sti
jmp
and
add
clc
inc
clc
pop
fcomi
xor
arpl
add
cmp
into
mov
push
stc
std
enter
leave
mov
sub
add
sub
jo
add
lods
inc
add
and
mov
push
ret
clc
in
sbb
or
add
lea
add
stos
and
add
add
add
fdivrs
adc
add
fsubl
cmp
xlat
aam
adc
add
sub
add
leave
cld
decb
popf
jle
cmc
xor
repnz
and
inc
clc
shlb
add
clc
stc
add
add
add
clc
ret
clc
adc
add
clc
inc
clc
imul
and
add
popa
add
mov
adc
add
inc
clc
dec
mov
dec
sbb
mov
xabort
lods
mov
jmp
inc
clc
pop
mov
jle
or
ret
clc
stos
push
jmp
stc
push
mov
and
add
fdiv
inc
clc
mov
repz
jno
add
pop
clc
es
pusha
add
mov
xor
add
add
xor
add
hlt
repnz
add
dec
add
add
cmp
add
pushf
bound
add
clc
mul
clc
fsub
clc
push
xchg
push
mov
add
xbegin
mov
clc
mov
clc
jne
mov
clc
dec
sub
and
sub
inc
clc
in
jle
xlat
cmp
add
fstpt
pop
fidivs
cmp
or
dec
dec
push
clc
xchg
mov
lret
cmpsl
clc
mov
add
aam
push
call
fsubr
mov
xbegin
mov
add
mov
jae
add
add
jne
clc
push
push
add
clc
pop
jecxz
mov
xor
add
jnp
add
mov
out
pushf
cltd
jo
add
clc
push
mov
clc
and
add
clc
lods
aaa
ficomps
clc
mov
add
add
cmp
or
add
mov
clc
call
push
add
jge
clc
mov
insb
out
jp
jge
nop
negb
push
mov
je
mov
xchg
pusha
add
js
xchg
and
add
add
mov
push
popa
add
add
add
add
add
sub
add
daa
clc
cmpsb
clc
push
icebp
sub
add
add
ja
inc
add
dec
mov
mov
mov
add
xor
add
jno
add
inc
add
into
ss
add
add
pusha
add
dec
pop
sbb
aam
inc
add
arpl
add
repnz
pop
or
xchg
sbb
jne
mov
add
add
lcall
xor
add
sub
jbe
xchg
lods
sar
push
clc
fs
test
add
add
clc
and
add
pop
clc
fistl
mov
clc
jge
clc
pushf
mov
mov
addr16
cmp
clc
adc
add
clc
scas
nop
inc
add
sbb
clc
push
push
mov
shl
clc
jns
sbb
clc
fldenv
add
jns
clc
shr
and
add
icebp
ret
dec
add
add
push
jl
cltd
sub
pop
lea
jb
add
ror
cmp
dec
scas
fs
js
ss
or
fisubl
movsb
clc
inc
add
cmp
es
test
push
add
or
add
add
ljmp
cmp
xchg
jbe
xor
add
push
dec
sub
add
sub
addr16
pop
test
clc
out
xbegin
add
gs
cwtl
mov
add
mov
pop
es
shll
add
clc
mov
mov
popa
add
ret
clc
add
add
add
in
push
int
mov
clc
or
sbb
sub
repz
jo
add
clc
mov
add
aaa
sub
add
adc
add
sar
rdmsr
add
lods
push
jge
dec
movsl
clc
enter
add
mov
mov
add
fisubrs
repnz
mov
pusha
add
cmp
scas
jmp
add
push
leave
test
push
mov
clc
out
stos
setne
jp
add
jno
add
clc
mov
push
aad
jle
adc
add
stos
and
scas
fmull
jae
add
add
cmc
sahf
pop
or
sub
xchg
or
clc
lahf
in
ds
icebp
test
xchg
call
add
add
sar
lcall
add
adc
jnp
add
sar
mov
clc
bound
add
mov
leave
xchg
mov
clc
ret
xor
clc
dec
push
lods
cmc
jle
cmp
pop
mov
add
aad
cs
popa
add
and
add
add
lcall
clc
xchg
and
add
cltd
adc
clc
inc
add
out
pop
clc
mov
out
into
xchg
roll
shll
ret
push
add
fdivl
or
movsb
clc
ds
add
dec
cmp
mov
clc
ffreep
clc
cmpsl
clc
mov
and
add
add
and
add
dec
add
add
sar
clc
dec
inc
add
mov
add
xabort
lods
jge
pop
cmp
xchg
xchg
bnd
xor
scas
sbb
clc
mov
in
daa
clc
icebp
out
scas
or
inc
clc
testb
jp
add
xor
movsl
clc
leave
int
adc
add
add
int3
xchg
inc
add
daa
clc
cmp
jle
and
lcall
aad
sbb
push
xchg
stos
push
test
add
add
clc
fstpt
xor
add
add
jno
add
add
or
popa
add
fmull
adc
add
and
add
clc
mov
push
aaa
push
clc
push
imul
fisubrs
adc
add
add
clc
ss
clc
add
add
xlat
js
clc
adc
add
sub
pop
push
add
mov
push
add
inc
add
je
sbb
add
add
add
pusha
add
ja
pop
mov
add
or
std
inc
add
inc
clc
aad
xchg
xchg
sbb
add
enter
clc
pop
movsb
clc
data16
in
shlb
add
mov
add
add
or
add
leave
sbb
push
and
add
mov
clc
push
inc
clc
cmp
add
and
add
clc
cmc
mov
sbb
out
test
jl
push
add
or
push
sar
add
mov
pushf
and
add
mov
clc
or
add
ss
out
cmc
add
add
mov
lods
add
int3
lods
pop
insl
movsl
clc
scas
gs
sub
imul
outsl
xchg
lods
sti
pushf
jbe
clc
add
and
add
cmp
clc
imul
cltd
movsl
clc
pop
out
jle
in
jo
add
add
mov
cmp
sar
add
fnsave
add
add
lods
sub
inc
clc
bound
add
pop
mov
icebp
cmp
clc
stc
gs
out
loop
add
add
clc
mov
push
clc
lods
xchg
push
daa
clc
loopne
aam
sub
rorb
add
clc
shlb
lock
add
add
push
add
or
scas
or
iret
scas
mov
push
clc
cmp
add
pop
xchg
fisubs
add
out
jns
mov
dec
inc
clc
xor
cmp
mov
push
add
leave
psubusw
lret
icebp
mov
pop
out
sbb
clc
dec
xabort
scas
jecxz
sub
add
sahf
add
add
jecxz
push
iret
inc
add
lret
add
clc
cmp
cmp
jns
mov
add
jno
add
repnz
int
jo
add
cmc
inc
clc
ss
sub
inc
add
sbb
clc
xchg
xchg
jo
add
add
in
push
mov
add
and
add
inc
clc
cwtl
and
add
add
arpl
add
sar
cld
mov
loop
adc
add
adc
add
add
add
aam
aas
popl
jb
add
jae
add
add
mov
add
cmp
sub
cltd
enter
loope
cmp
add
add
call
inc
clc
leave
mov
js
clc
mov
add
add
add
xadd
imul
std
xchg
bound
add
dec
cmp
add
add
pop
clc
fstl
clc
xor
dec
xor
add
pop
out
xchg
out
jp
clc
stos
and
mov
cs
jmp
fdiv
add
add
sub
ret
mov
jns
clc
notrack
pop
inc
add
stos
add
add
xchg
call
add
int3
cmp
pop
pushl
sub
and
jno
add
xchg
mov
mov
clc
pop
pushf
out
lods
mov
imul
dec
ffree
clc
ljmp
push
add
add
add
add
xor
add
mov
sub
adc
clc
jge
sub
inc
add
push
add
mov
add
xchg
stos
mov
push
add
pusha
add
lret
out
enter
add
inc
clc
or
clc
push
or
clc
loop
and
add
sbb
fadds
pop
jle
insb
test
cmp
into
cs
xor
cmp
cmp
clc
fstpt
mov
int
mov
clc
add
sar
inc
add
cmp
add
mov
jmp
clc
outsl
mov
movsl
clc
adc
add
add
cmp
add
push
push
clc
add
add
add
mov
clc
mov
daa
clc
and
add
insb
imul
clc
ds
sarb
loopne
testb
lea
xor
add
add
fst
sti
out
ljmp
jecxz
inc
clc
in
addr16
fsts
in
jno
add
clc
pop
xlat
cmp
xor
add
and
add
nop
pop
sub
add
sub
ds
add
add
mov
clc
mov
mov
sbb
add
and
or
clc
icebp
cmpsl
clc
mov
xchg
sbb
fcmovnu
add
add
and
add
mov
push
clc
adc
add
jne
add
inc
clc
jmp
clc
hlt
xchg
fimull
fwait
sub
test
loope
fstpl
cmpsl
clc
xchg
inc
clc
or
pop
cmp
out
ret
clc
mov
clc
xchg
loop
pop
imul
vmovaps
add
inc
clc
jo
add
pop
inc
clc
popa
add
xor
add
add
data16
add
add
icebp
out
int3
cmc
push
cmp
add
push
mov
repnz
add
clc
xor
add
jne
push
fimuls
clc
ret
clc
push
sub
jecxz
push
cmp
push
add
push
add
cld
in
jp
stos
pop
add
or
movsb
clc
lret
add
clc
mov
ljmp
adc
jge
clc
leave
sar
or
mov
adc
push
mov
add
clc
stc
loop
push
add
cld
ja
clc
pop
mov
dec
mov
mov
mov
cmp
clc
sar
cmpsb
clc
js
clc
adc
add
std
addr16
add
add
mov
add
clc
fisubl
clc
jae
add
lret
lods
push
pusha
add
xchg
push
inc
clc
or
lea
add
aam
mov
or
add
clc
repz
mov
add
imul
sub
clc
jb
add
push
data16
mov
test
dec
add
add
push
add
lret
cltd
push
clc
imulb
decb
add
clc
in
jle
clc
jmp
xbegin
cs
xabort
jns
sbb
lret
and
add
xchg
mov
sbb
push
push
add
xchg
bound
add
imul
push
xchg
sub
add
add
add
dec
aam
clc
sahf
sub
dec
loope
mov
inc
clc
xchg
aam
nop
je
inc
add
add
mov
clc
clc
lahf
or
cmpsl
clc
cmpsb
clc
ja
lret
add
testl
pop
adc
add
movsl
clc
cmp
clc
clc
xchg
movsl
clc
pop
clc
mov
clc
xor
add
add
jg
add
lahf
inc
add
add
add
cmc
sbb
and
add
jns
add
insb
mov
add
add
xor
add
je
push
pop
ds
clc
clc
out
dec
test
push
and
add
mov
mov
inc
add
js
add
fdivrl
in
test
in
push
fs
lods
clc
dec
or
mov
and
add
add
xchg
dec
pop
jne
clc
pop
rol
clc
ret
clc
enter
clc
mov
cmpsb
clc
mov
mov
add
mov
jp
pop
mov
sub
sbb
add
clc
ds
fwait
or
dec
xchg
dec
sbb
dec
inc
add
std
cmp
pop
ss
add
xlat
shr
test
rcrl
clc
pop
clc
jmp
cwtl
dec
out
jle
clc
adc
clc
mov
add
rcll
add
adc
inc
add
sub
stos
cmp
clc
out
ss
enter
clc
cmp
clc
or
add
clc
jae
add
push
mov
dec
pop
add
add
insl
jmp
add
rcll
xor
add
clc
gs
inc
add
cmp
add
xchg
xchg
das
adc
add
mov
cs
pop
nop
cmpsb
clc
cmpsb
clc
lods
xchg
movq
add
std
ret
jo
add
pop
or
cmc
clc
cmp
add
mov
add
pop
stc
in
inc
add
push
flds
sub
pop
push
add
dec
stos
and
add
xchg
das
movsl
clc
lods
xor
add
incb
cli
cmp
mov
clc
pop
and
add
cmpsl
clc
call
hlt
jl
push
mov
add
cwtl
and
add
into
dec
xor
add
lock
nop
mov
add
mov
push
add
and
add
add
xlat
xchg
jns
int3
jge
add
cmpsl
clc
pop
imul
cmp
iret
jb
add
lods
xbegin
mov
clc
jmp
add
int3
mov
clc
xchg
sub
repz
add
add
aad
mov
xchg
std
and
add
mov
add
fadds
test
ljmp
push
mov
cwtl
stos
adc
add
add
mov
pop
adc
clc
cmp
notl
cmp
mov
clc
xchg
imul
mov
clc
xor
add
clc
sbb
mov
or
adc
add
add
call
clc
pop
pop
cmp
rolb
arpl
add
sarb
mov
jo
add
add
fdivrs
call
fists
add
mov
pop
sbb
es
dec
adc
add
push
frstor
add
add
push
add
lock
push
jne
ret
clc
push
or
dec
test
js
clc
cmp
clc
xor
add
add
cld
adc
add
sbb
add
xchg
mov
mov
mov
xchg
inc
clc
xchg
push
sbb
mov
dec
lea
add
movsb
clc
insl
pushf
sti
dec
jb
add
pop
jnp
add
add
add
sti
dec
pop
or
mov
clc
shll
outsb
mov
lea
test
mov
add
clc
add
add
add
lret
mov
adc
add
add
pop
ja
bound
add
inc
clc
into
xchg
inc
clc
mov
xchg
loop
mov
scas
xor
push
nop
cmp
jne
inc
clc
adc
add
fsubp
clc
push
movsl
clc
cs
push
add
lods
mov
add
jnp
add
xchg
pop
das
fldcw
add
clc
jb
add
add
call
clc
scas
jge
or
clc
ds
clc
fwait
outsl
cmp
fidivs
xchg
imul
jbe
add
es
lods
negb
add
lea
xor
add
push
mov
sub
cmp
lcall
sub
mov
and
add
clc
ljmp
add
outsl
lods
aaa
data16
mov
stos
daa
clc
cld
dec
xchg
sbb
aas
lret
daa
clc
inc
clc
sar
ja
das
sub
lahf
mov
clc
imull
push
add
cmp
mov
cmp
stc
dec
mov
movsl
clc
sub
mov
adc
adc
mov
clc
xchg
repnz
jecxz
mov
clc
dec
mov
jg
pop
mov
add
or
clc
ja
add
add
xor
add
add
int3
lods
cmp
clc
sbb
add
adc
add
inc
clc
xor
add
mov
mov
dec
cli
jbe
mov
das
push
pop
lret
add
sar
add
add
add
add
add
push
add
cwtl
push
add
daa
clc
aaa
or
mov
and
std
int
clc
test
add
int3
scas
into
inc
clc
cmp
mov
pop
fwait
aaa
or
add
xchg
movsl
clc
push
add
cs
int3
push
add
insb
xor
clc
cld
jbe
cld
test
es
cmp
mov
sbb
jns
add
sbb
and
add
icebp
outsl
gs
inc
add
gs
test
enter
gs
jl
add
rorb
mov
clc
inc
clc
mov
xbegin
jns
clc
stc
and
add
lcall
clc
es
jmp
clc
inc
add
lret
jecxz
mov
cmp
add
mov
scas
popa
add
stos
lahf
adc
add
add
jbe
add
and
add
mov
clc
lcall
add
clc
dec
data16
fmul
scas
sbb
sbb
lods
add
add
clc
lahf
lods
nop
xbegin
cmp
scas
stos
bound
add
add
and
add
sarl
lret
mov
ljmp
lea
add
mov
add
cmp
aad
add
pop
jge
dec
fisubrs
add
push
xchg
add
add
add
add
js
clc
xbegin
fs
sar
lret
rcll
add
clc
sar
mov
pop
cmp
pop
ret
clc
xor
daa
clc
ficomps
push
sub
clc
mov
add
add
cli
adc
jg
daa
clc
insl
loope
clc
stc
inc
clc
ss
clc
addr16
jl
mov
mov
clc
setb
clc
loop
cld
xchg
in
roll
add
pop
xabort
pop
bound
add
test
pop
mov
add
insl
xchg
loope
ret
clc
out
arpl
add
sbb
lret
pop
out
push
sub
fbld
add
inc
add
and
add
add
cwtl
jns
fimuls
add
push
fsubs
xor
add
sub
jnp
bound
add
pop
or
inc
clc
pushf
sub
clc
aam
sahf
jne
add
adc
add
clc
sbb
xor
add
clc
push
mov
into
aad
out
js
clc
mov
imulb
adc
add
adc
add
clc
inc
add
jp
clc
jnp
clc
sub
add
mov
add
mov
cmp
pop
int
enter
add
dec
push
clc
add
add
add
clc
insl
inc
clc
mov
add
fisttpl
stos
push
add
add
xchg
je
out
ja
loope
add
add
mov
clc
inc
add
push
ja
shll
xor
add
mov
test
fwait
inc
clc
jb
add
dec
cmp
clc
pop
out
in
int
xchg
in
repz
xlat
in
in
add
add
add
lret
clc
fs
popf
mov
clc
test
pop
clc
adc
dec
fidivl
add
std
nop
push
fcoml
add
xchg
loope
imul
xchg
or
clc
lcall
or
frstor
add
sar
sbb
ljmp
add
mov
clc
movsb
clc
jmp
xlat
cmp
xchg
push
add
aam
clc
dec
push
jno
add
mov
push
jo
add
cs
add
lock
add
add
add
popa
add
mov
js
add
adc
add
nop
jns
clc
ds
sbb
add
scas
out
and
add
cwtl
or
dec
inc
add
decb
xchg
roll
jmp
and
add
adc
add
cmpsl
clc
sar
sbb
rcl
adc
add
clc
ret
clc
lret
dec
stos
out
sbb
pop
mov
xchg
popf
movsb
clc
push
clc
push
clc
inc
clc
jmp
add
jmp
pop
jge
clc
add
add
je
mov
clc
fwait
mov
clc
sti
mov
inc
add
mov
repz
and
add
test
out
imul
cmp
add
test
xor
enter
mov
out
enter
ljmp
xor
add
add
clc
jne
or
fadds
clc
xlat
sub
adc
jg
clc
fwait
jb
add
clc
jo
add
add
mov
data16
xchg
or
pop
insl
inc
add
xchg
push
imul
es
imul
addr16
xchg
insl
fmull
popf
sar
add
adc
add
mov
add
xchg
adc
jae
add
clc
jno
add
clc
cmpsl
clc
sbb
clc
cmp
sub
add
aam
stos
daa
clc
scas
or
add
scas
jns
cmp
clc
mov
es
jne
add
das
int
clc
inc
clc
inc
clc
inc
add
jo
add
clc
clc
out
pop
daa
clc
gs
fnsave
add
or
add
jecxz
mov
push
je
clc
gs
xor
add
add
das
mov
clc
sub
ret
clc
es
or
clc
mov
repnz
clc
test
xor
add
add
leave
push
into
mov
pushf
push
add
push
mov
add
add
add
outsl
and
add
enter
mov
out
je
ds
xchg
nop
insl
nop
in
fcomps
test
add
call
es
sbb
clc
imul
clc
jmp
std
cs
loope
lock
add
mov
sbb
add
fisubl
insb
int3
pmaxub
mov
xchg
ljmp
mov
add
enter
add
ret
clc
jecxz
int
cmp
jnp
add
jmp
ljmp
clc
mov
add
jno
add
dec
sub
mov
add
add
test
mov
add
push
jmp
clc
mov
cmp
add
xchg
pop
sub
add
cmp
lods
int
add
adc
mov
test
out
xor
add
push
clc
adc
add
clc
push
xor
add
clc
pop
mov
mov
add
sub
adc
add
pop
clc
xor
add
pushf
pop
or
add
jle
jmp
add
clc
idiv
dec
adc
fsubs
fdivrp
push
clc
inc
add
js
and
add
clc
xbegin
mov
add
cmpsl
clc
call
add
ret
clc
cmp
add
dec
daa
clc
insl
or
js
cmpsb
clc
cmp
cmc
inc
clc
add
lret
mov
add
or
fdivl
add
pop
dec
clc
inc
clc
push
hlt
inc
add
sbb
add
jae
add
add
insl
inc
clc
inc
clc
pop
or
clc
lret
cmp
jp,pn
and
add
add
inc
clc
or
and
add
cmp
pop
jns
push
add
dec
cmc
push
add
sar
clc
scas
jecxz
add
add
clc
inc
clc
adc
jmp
inc
add
and
add
bound
add
add
add
stos
cmpsb
clc
mov
add
jo
add
clc
cmp
jbe
lcall
clc
pushl
add
cmc
and
add
notb
add
ja
clc
cmp
icebp
mov
dec
lea
loop
rcrl
mov
clc
jns
sbb
clc
inc
clc
pusha
add
add
add
loopne
jne
bnd
gs
jb
add
add
mov
add
dec
test
dec
jns
add
add
add
loop
rcrl
xchg
pop
sti
mov
xchg
pusha
add
call
or
clc
imul
xlat
shlb
inc
clc
jp
ret
clc
jns
add
jl
pop
ret
clc
popf
and
add
loopne
sbb
add
xor
jl
dec
in
pop
clc
push
add
mov
jl
out
jmp
clc
mov
loope
arpl
add
ss
movd
or
add
add
or
clc
jnp
mov
add
push
clc
sub
clc
jno
add
addr16
pop
clc
xabort
add
add
sar
fdivrp
out
or
test
push
gs
xor
add
in
int3
lcall
or
test
mov
clc
movsl
clc
cmp
clc
cmp
push
add
inc
add
jle
insl
imul
mov
push
add
or
cmp
mov
clc
mov
xor
jecxz
in
mov
dec
mov
push
xchg
jne
cmp
movsb
clc
or
aas
sub
sub
xor
add
or
pop
add
add
add
push
add
jg
clc
lahf
cmpsl
clc
add
add
dec
inc
add
mov
add
cwtl
test
ja
pop
clc
sar
daa
clc
xor
test
cmp
cli
adc
add
out
lcall
clc
inc
clc
out
stos
fisttpl
push
sub
sar
clc
cmp
clc
addr16
inc
clc
mov
add
mov
add
xabort
xchg
adc
sub
clc
and
add
insb
lods
jmp
jl
cmp
xor
clc
iret
in
test
cmp
and
add
clc
mov
push
pop
loop
hlt
ja
aaa
es
or
data16
xbegin
add
add
movsb
clc
jg
add
sbb
lcall
cs
test
mov
clc
xchg
push
push
clc
cmp
lea
dec
cs
push
add
bound
add
cmpsb
clc
xor
add
push
add
fisttpll
out
aam
jne
clc
mov
clc
sub
add
lea
dec
add
mov
mov
test
dec
dec
sub
clc
adc
add
test
push
das
fnsave
nop
xchg
xor
aaa
mov
icebp
mov
sar
clc
adc
add
xabort
clc
xor
imul
mov
inc
add
nop
and
pop
clc
je
add
cld
lcall
popa
add
xbegin
das
popa
add
mov
xchg
inc
clc
adc
clc
cmpsl
clc
movsl
clc
dec
pop
clc
in
and
add
inc
add
xabort
clc
cmc
repnz
and
add
stc
sub
add
mov
jp
addr16
sahf
ja
pop
leave
idivl
xchg
mov
mov
cwtl
jg
addr16
ficompl
add
cmp
in
cmp
clc
xchg
sub
cmp
fnsave
add
icebp
sbb
adc
add
add
cltd
xlat
xor
add
clc
push
add
out
push
cmp
mov
ret
clc
aam
mov
xbegin
mov
inc
add
inc
add
in
cltd
and
add
sti
mov
arpl
add
clc
push
xor
add
or
xchg
push
adc
add
mov
clc
aas
adc
add
push
xchg
inc
add
sti
pop
jmp
in
and
loope
iret
add
add
out
and
add
mov
rclb
and
add
insb
mov
mov
pop
das
mov
add
clc
aam
stos
es
pop
push
jg
adc
add
imul
push
xor
add
and
add
clc
sar
xlat
mov
stc
fildll
insl
push
clc
sti
mov
mov
mov
adc
add
sub
outsb
lods
cmp
cmp
add
insb
call
add
sub
clc
or
add
lahf
and
add
fldlg2
adc
add
adc
add
push
add
add
push
pop
lock
and
add
push
jge
add
pop
push
sub
movsl
clc
out
pop
mov
clc
sbb
fwait
mov
xchg
sub
gs
inc
add
data16
push
add
data16
test
add
pop
outsb
cmp
jne
cmp
add
push
add
xor
add
add
clc
data16
pusha
add
and
add
cmp
and
add
xor
add
clc
fstpt
push
es
ja
sub
fmuls
add
add
bound
add
add
es
pusha
add
idivl
mov
clc
sti
inc
add
cmp
inc
clc
pushf
lock
clc
dec
lret
clc
es
jns
xchg
bound
add
add
sub
roll
or
mov
sbb
add
add
push
clc
lock
mov
clc
add
cmp
add
or
mov
mov
movsl
clc
insb
fs
add
add
lret
inc
add
add
add
clc
mov
add
pop
neg
arpl
add
clc
cmc
and
add
cmp
add
mov
fstpt
sbb
add
add
add
cmpsl
clc
inc
clc
adc
add
cmp
add
xchg
push
add
fdiv
xlat
jmp
aad
xchg
mov
ret
or
mov
push
add
and
add
add
int
pushf
and
add
push
add
and
inc
add
cvttps2pi
add
cmp
pop
mov
jo
add
repnz
pop
in
ss
add
add
clc
mov
negl
or
pop
movsb
clc
sub
xor
add
inc
clc
adc
add
add
add
add
ret
mov
clc
mov
fcomps
cs
aad
clc
mov
add
lock
cmp
clc
add
pushf
pop
mov
add
fimuls
add
in
lret
cmp
jle
faddl
inc
clc
lret
mov
pop
clc
push
or
test
stc
mov
add
and
mov
das
int
inc
clc
lret
into
clc
adc
add
and
and
add
clc
pop
mov
sti
xbegin
rcll
clc
fcoml
sar
clc
inc
add
out
loope
jns
clc
fs
ficompl
fcoms
add
sbb
cwtl
mov
scas
imul
clc
push
clc
mov
or
stos
out
jmp
ljmp
cld
nop
sbb
pop
add
add
hlt
in
lea
lea
stos
cmpsl
clc
mov
imul
adc
add
add
add
add
mov
pop
xchg
bound
add
xchg
call
mov
add
xor
add
clc
call
xabort
in
cmpsl
clc
xchg
sub
data16
adc
add
push
xor
add
cmp
cmp
gs
lea
jns
clc
scas
inc
clc
sbb
scas
mov
lcall
add
push
insl
xlat
shl
and
add
testb
add
std
adc
add
add
add
xor
add
movsb
clc
or
popf
imul
cmc
daa
clc
xbegin
cmp
cmp
clc
int3
xor
adc
add
add
sub
add
pusha
add
repnz
negb
push
clc
mov
add
clc
sub
notb
push
out
mov
clc
arpl
add
ret
clc
dec
daa
clc
into
clc
xor
add
clc
pop
lods
stc
pop
push
mov
add
stos
pop
stos
pushf
ds
cmp
pushf
loope,pt
jo
add
mov
insl
je
dec
movsb
clc
sbb
xor
add
add
fsubs
add
mov
jb
add
inc
clc
mov
add
idivl
add
cmp
xor
add
adc
and
add
test
push
fwait
cltd
jp
clc
repz
mov
clc
jg
clc
ja
pop
mov
dec
sbb
clc
sahf
fcmove
mov
clc
xor
sub
in
jne
cmp
mov
add
add
scas
in
cmpsb
clc
xchg
fwait
mov
pop
jle
clc
mov
add
dec
mov
jecxz
mov
js
add
loop
imul
add
pop
fstpt
add
add
add
mov
test
out
adc
mov
clc
mov
cld
adc
add
pushf
hlt
push
add
jns
clc
rclb
add
and
add
inc
clc
sub
add
add
pop
clc
sar
arpl
add
clc
add
add
clc
js
movsl
clc
out
call
movsb
clc
jl
mov
clc
loopne
inc
clc
jne
mov
mov
fcmovnb
clc
addr16
scas
test
sar
mov
popf
popf
inc
clc
xbegin
mov
hlt
or
add
or
push
mov
gs
icebp
in
add
add
xchg
addr16
push
add
mov
add
add
add
out
and
sub
clc
jne
add
out
bound
add
dec
jb
add
add
push
dec
cmp
clc
xabort
clc
inc
add
cld
fwait
imul
or
add
lea
clc
adc
add
test
adc
add
dec
scas
adc
add
pop
clc
add
add
add
cmp
add
mov
lahf
inc
clc
test
lahf
lods
push
pop
jmp
add
xor
add
or
xor
clc
push
add
push
clc
sbb
fmull
fidivs
sbb
add
push
and
add
cltd
and
push
js,pt
mov
clc
mov
add
sbb
jecxz
cmc
xor
lods
in
xor
add
add
addr16
test
in
in
clc
dec
push
add
js
clc
je
adc
add
stc
adc
add
daa
clc
lcall
adc
add
add
test
clc
test
and
add
pop
lock
test
or
push
rcrb
lock
jmp
pop
sbb
or
add
out
stc
sti
dec
inc
clc
or
clc
mov
int
mov
mov
add
dec
aad
sub
sahf
sbb
add
add
add
add
stos
mov
outsb
fcomi
test
sub
aas
add
add
xchg
rcrb
lods
xor
add
arpl
add
mov
decb
clc
enter
pop
arpl
add
mov
cltd
stos
ficomps
push
dec
mov
add
mov
ret
clc
adc
add
xchg
and
stos
std
stos
int
stos
mov
add
pop
push
clc
pop
ds
or
jge
clc
xchg
aam
mov
cmp
add
shll
add
clc
daa
clc
repnz
clc
pusha
add
repz
dec
jecxz
dec
test
clc
xchg
mov
clc
ret
sub
sub
int3
inc
clc
jmp
inc
clc
in
sub
add
jnp
and
add
add
cmp
repz
loop
insb
mov
lret
push
add
pop
clc
jg,pn
test
inc
clc
mov
add
lock
add
inc
clc
xchg
xchg
lret
jb
add
outsb
push
mov
or
clc
aad
leave
lret
cmc
jl
clc
jp
repnz
add
loopne
mov
int3
fcoms
and
add
clc
cmp
mov
inc
clc
aas
and
add
clc
data16
cmp
sar
mov
inc
add
sbb
int
and
add
and
add
rorl
clc
loop
test
pop
fwait
mov
cmp
add
lcall
and
add
imul
xchg
mov
and
add
xchg
roll
xor
add
pushf
and
add
adc
add
mov
cltd
inc
clc
or
mov
sbb
lcall
clc
lock
xchg
repz
clc
or
clc
lods
adc
das
mov
cmp
add
scas
int3
and
add
push
cltd
in
inc
add
fwait
sahf
es
daa
clc
sti
mov
rclb
stos
outsb
sti
xchg
mov
xchg
outsb
mov
outsl
ret
clc
sbb
mov
js
loope
xlat
xor
cmp
add
clc
and
add
pop
dec
push
add
jb
add
mov
mov
fldl
add
xchg
adc
add
in
xor
add
mov
clc
mov
out
sar
sbb
sbb
clc
inc
add
test
shlb
data16
adc
lea
add
in
movsb
clc
and
cmp
xor
add
clc
fucom
clc
into
push
add
jnp
jnp
mov
mov
cmp
add
add
clc
cmp
stos
enter
clc
mov
scas
cmp
aad
clc
fs
cld
sar
clc
cmp
cwtl
jl
cmp
add
es
push
add
js
fisubl
and
add
clc
push
out
pop
jl
pop
inc
add
xor
clc
mov
clc
jno
add
aas
lcall
clc
lret
and
add
add
adc
pushf
inc
add
das
popf
cmp
clc
push
add
xchg
int
clc
data16
data16
pushf
jecxz
and
add
outsb
mov
push
add
push
out
jecxz
mov
add
sub
add
jl
clc
data16
insb
jg
inc
add
scas
inc
add
pop
js
clc
mov
xchg
stos
scas
imul
xchg
fs
cmp
jbe
add
ret
clc
imul
jge
leave
xchg
xchg
fwait
aas
idivl
or
clc
cmp
clc
pop
clc
gs
imul
add
cltd
jno
add
add
xchg
or
insl
movsb
clc
add
fistl
add
mov
aaa
imul
sub
clc
add
add
add
push
mov
add
scas
and
add
scas
dec
xor
add
add
jle
add
xchg
adc
add
clc
dec
jg
mov
roll
clc
sbb
push
inc
clc
mov
or
jecxz
ja
clc
sti
ds
push
fisttpll
loopne
jb
add
ss
or
pop
clc
sar
add
and
add
test
sti
or
ljmp
clc
add
add
xor
add
or
push
add
xchg
mov
sbb
add
or
lahf
pop
jb
add
rcll
lahf
mov
lods
cmp
cmpsb
clc
fsubrp
test
int3
test
outsb
out
or
push
add
jae
add
fs
in
dec
insb
mov
pop
clc
cli
inc
clc
fstps
gs
xchg
push
clc
push
add
pop
stos
xor
add
cmp
clc
push
adc
add
add
add
and
add
add
add
adc
add
clc
and
add
push
sbb
add
mov
sbb
clc
lret
clc
loope
push
add
std
test
scas
in
sub
ss
mov
clc
aaa
cs
int
xchg
jg
add
das
mov
add
dec
sti
arpl
add
hlt
sahf
fdivl
clc
pushf
adc
add
arpl
add
sti
lcall
sub
xor
add
cmc
xchg
cmc
mov
add
xlat
jne
pop
divb
aad
je
out
adc
add
mov
add
bound
add
add
inc
clc
inc
clc
out
sbb
cmp
clc
into
and
add
imul
enter
mov
addr16
cwtl
dec
ret
clc
xor
add
outsl
or
sbb
clc
stc
adc
add
jge
mov
repz
ret
out
rcr
jp
clc
loopne
or
add
add
cmp
add
mov
jns
nop
clc
add
add
dec
rorb
xchg
sarb
add
add
clc
jns
lret
add
out
lods
jbe
sub
xlat
xchg
push
clc
inc
add
data16
test
push
jg,pn
clc
pusha
add
and
add
pop
fisttpl
add
mov
clc
sub
clc
mov
jae
add
out
mov
add
xor
add
lods
cmpsl
clc
jae
add
mov
clc
negb
add
clc
xchg
out
into
fwait
test
cmp
add
and
jb
add
aad
xchg
dec
cld
rorb
add
cmp
mov
jecxz
jl
clc
jmp
ret
cmp
add
into
xchg
cmp
enter
xchg
sbb
fisttps
jne
rolb
add
add
ds
nop
aad
clc
sbb
add
dec
sub
mov
clc
stos
pusha
add
cmp
fucomp
bound
add
clc
or
clc
vorps
cmp
mov
jl
or
sahf
sahf
cmp
dec
lods
xor
add
xor
add
dec
sar
cmp
clc
pop
mov
lret
aas
push
cmp
jno
add
jns
popf
sub
and
add
int
adc
add
clc
dec
jmp
repz
sub
jge
or
push
sbb
sbb
push
push
pop
ret
clc
cmp
xchg
aas
dec
push
pop
fsubrl
add
in
add
iret
adc
clc
xabort
clc
movsl
clc
test
ja
push
clc
cmp
outsb
push
add
adc
rorl
ret
mov
add
add
mov
clc
sub
add
insl
cmp
add
pop
clc
jb
add
clc
xor
dec
or
add
xchg
mov
movsl
clc
adc
mov
clc
xor
push
add
adc
add
push
pop
cmp
int
gs
xor
add
add
fsin
lods
sar
test
add
addr16
adc
add
add
cmp
decl
repnz
add
add
or
add
and
pop
fcom
scas
fcompl
clc
cmp
ljmp
dec
jmp
cmp
frstor
cmp
nop
mov
dec
gs
testl
add
sub
pushf
aaa
or
add
lahf
dec
push
aaa
stos
fwait
mov
clc
mov
pop
loope
jecxz
adc
fdivrs
insl
stos
rcll
ja
repz
add
add
setno
cmp
clc
dec
push
add
sbb
inc
clc
ljmp
ja
gs
dec
gs
mov
mov
clc
mov
add
clc
lods
sbb
cmp
pop
inc
add
nop
xor
add
out
and
xor
add
clc
nop
xor
add
gs
test
sbb
repnz
jmp
dec
push
mov
xabort
clc
fidivrs
xchg
or
clc
insb
scas
in
push
push
add
jns
inc
add
xor
add
inc
clc
push
sar
jg
fisubrl
in
or
add
jno
add
and
cmpsb
clc
fistl
add
clc
mov
and
jns
push
adc
add
cmp
add
mov
in
cmp
mov
pop
lret
pop
insl
push
in
cmp
inc
clc
sub
dec
lret
add
push
fstpt
mov
cld
jno
add
jnp
scas
fwait
xlat
test
aad
clc
mov
add
pop
imul
inc
add
adc
cmpsb
clc
and
add
clc
dec
push
lret
add
mov
cmp
add
clc
pop
add
add
pop
pushf
mov
out
bound
add
clc
sbb
clc
mov
cltd
sbb
sub
clc
xchg
aaa
jns
clc
sar
inc
add
adc
add
push
jl
xchg
loop
loop
daa
clc
testb
xchg
sahf
loope
outsb
mov
cmp
clc
fidivrl
fstp
ucomiss
jecxz
xchg
cld
xchg
or
stos
ljmp
push
movsb
clc
out
clc
mov
lahf
xor
add
call
maskmovq
testl
and
add
clc
sub
mov
add
ljmp
repz
loop
mov
lret
cmp
clc
int3
add
add
sbb
mov
gs
rclb
add
add
xor
add
add
add
jns
jo
add
xabort
or
cmp
data16
sbb
add
add
sar
xor
add
cmp
clc
xor
add
es
add
add
jge
jle
mov
add
xor
add
xchg
jno
add
call
dec
inc
add
xbegin
add
mov
clc
arpl
add
add
adc
add
out
outsl
fbstp
push
rclb
add
mov
add
mov
stc
and
add
mov
push
jg
clc
mov
clc
fcmovnu
inc
clc
push
add
test
fwait
or
clc
xchg
cmpsl
clc
nop
adc
fbld
adc
add
add
aas
repz
add
lcall
lret
mov
bound
add
imul
hlt
xchg
pop
inc
add
and
clc
or
pop
clc
stos
dec
jecxz
jbe
jno
add
sar
aaa
push
fs
movsb
clc
cmc
in
mov
int
mov
clc
cmp
add
daa
clc
cwtl
mov
clc
push
inc
clc
bswap
or
clc
mov
add
clc
sbb
add
inc
add
xchg
sub
clc
jo
add
ss
js
push
push
add
lea
cmpsb
clc
outsl
pushf
call
inc
clc
lods
call
gs
sahf
jo
add
push
add
sbb
clc
lret
inc
add
data16
lods
mov
insl
push
add
mov
call
sbb
sbb
clc
addr16
cltd
cmc
push
dec
cltd
pop
clc
pop
and
add
add
sahf
jmp
sbb
aaa
jmp
mov
js
clc
xor
add
add
loop
push
shl
clc
push
clc
xchg
jae
add
sub
leave
sub
pop
xlat
dec
rcrb
enter
inc
add
inc
add
inc
clc
aam
adc
clc
xchg
in
hlt
xchg
add
add
test
cmp
mov
inc
clc
clc
push
add
and
add
add
int3
divl
clc
adc
add
imul
clc
pop
clc
sar
mov
push
push
inc
add
xor
add
fsubs
clc
xor
mov
jmp
push
sub
popa
add
lcall
clc
notb
sub
add
cld
std
bound
add
add
add
je
push
add
add
add
jmp
sti
cmc
push
add
fcmovb
clc
data16
fidivrs
add
add
add
add
fsubr
mov
movsl
clc
inc
clc
std
xchg
lods
out
jno
add
add
cmp
clc
sub
mov
xchg
loope
leave
dec
xor
add
inc
add
mov
add
add
add
mov
pop
lea
jb
add
fbld
add
cmpsb
clc
stc
cmp
clc
into
cmc
mov
pop
jo
add
add
and
in
sahf
dec
or
and
bound
add
ficoml
add
add
cmp
clc
mov
bound
add
sub
adc
add
aas
pop
clc
lcall
add
clc
fidivl
sahf
add
add
clc
mov
add
xchg
mov
inc
add
aam
add
das
stc
fimuls
sti
adc
add
clc
outsl
repz
jne
xchg
pop
cmpsl
clc
repz
test
jg
xchg
cmc
stos
pop
push
xchg
push
add
test
data16
pop
mov
add
shlb
clc
outsb
popa
add
push
add
xchg
jbe
clc
pop
mov
clc
dec
push
add
dec
jg
clc
sar
pop
or
clc
outsl
xor
add
lods
ret
clc
sub
ja
mov
fwait
divl
sar
adc
add
neg
sahf
int3
gs
mov
js
clc
cs
add
mov
clc
xor
add
add
daa
clc
dec
and
pop
mov
xchg
insl
cmp
daa
clc
sbb
add
int3
aaa
push
add
or
out
pusha
add
jg
clc
sub
in
mov
add
lea
add
clc
loop
das
test
sar
add
mov
xlat
notl
clc
inc
clc
or
add
push
push
addr16
push
popf
dec
sbb
arpl
add
clc
es
pop
clc
add
add
test
leave
cs
divl
arpl
add
mov
aaa
cpuid
clc
test
jge
pop
ret
clc
cmpsb
clc
fldt
in
or
fs
repnz
jne
sub
add
jb
add
clc
cmp
add
adc
clc
mov
ud1
add
clc
pop
out
imul
push
add
sar
test
jl
imul
std
sub
mov
add
cmp
das
and
add
sar
clc
movntps
add
clc
push
adc
add
add
add
push
add
ljmp
fs
mov
dec
mov
add
pop
sar
clc
pushf
in
fidivrl
jo
add
jae
add
mov
clc
sahf
popa
add
ret
clc
jp
and
inc
clc
jne
push
xchg
repnz
clc
xbegin
mov
pusha
add
enter
and
dec
cmp
add
push
add
out
in
inc
add
fiaddl
add
mov
dec
cmp
xlat
add
add
cmp
in
sbb
clc
cvtps2pi
inc
clc
aam
jb
add
clc
in
pop
clc
dec
ret
add
fs
xchg
clc
sub
clc
pop
int
fwait
dec
fwait
sub
lods
xor
clc
jg
add
jg
sar
adc
add
xchg
lret
sub
loop
adc
add
dec
stos
mov
sub
xchg
or
add
xchg
xlat
mov
add
fwait
xor
add
add
and
test
stos
sar
flds
clc
xchg
sub
add
pusha
add
lock
fwait
sbb
clc
loop
in
xchg
in
shlb
clc
cmp
add
sub
add
sub
pop
clc
cmp
xchg
loope
adc
add
mov
add
pop
xchg
addr16
sbb
add
add
mov
bound
add
clc
lods
pop
clc
mov
inc
clc
mov
clc
sbb
clc
test
jle
pop
jbe
mov
add
clc
cmp
clc
push
add
xor
add
add
cld
call
cmp
leave
jb
add
clc
xor
imul
add
dec
int3
gs
pushf
xchg
int3
cwtl
movsl
clc
leave
adc
add
and
add
in
lcall
clc
push
outsb
cmp
xchg
xor
add
add
add
clc
and
add
add
mov
jne
popa
add
inc
add
aas
pop
call
add
enter
add
or
add
add
add
add
or
add
mov
sub
push
add
and
add
cli
sub
add
pop
leave
xchg
shlb
mov
cmp
or
clc
add
add
clc
into
lret
add
sbb
add
add
loope
aad
test
imul
leave
aam
or
add
add
or
clc
add
add
jnp
add
cmp
mov
inc
add
jns
cltd
sub
add
clc
mov
ljmp
clc
pop
pop
clc
cmp
lahf
repnz
sbb
sub
xor
add
sar
add
cmp
mov
xchg
push
clc
and
repz
clc
and
add
add
clc
dec
cmp
enter
pop
loop
gs
lahf
pop
dec
cmp
add
xchg
cmpsb
clc
fistpl
shr
add
add
add
clc
fbld
add
clc
pop
pop
sbb
into
or
cmp
add
jo
add
nop
cmp
js
mov
stos
cltd
mov
test
test
dec
rolb
stos
fadds
add
clc
or
add
call
clc
or
clc
push
aam
std
add
sbb
xor
add
add
dec
mov
and
push
mov
or
leave
cli
js
jns
clc
mov
clc
push
jmp
add
xchg
push
punpckhdq
clc
repnz
aas
adc
arpl
add
sub
clc
xlat
xor
sub
adc
add
call
add
clc
fistps
jl
test
xchg
hlt
cmp
int3
dec
push
mov
add
clc
cmpsb
clc
imul
add
add
mov
test
sbb
add
add
js
pop
lea
add
outsb
mov
add
push
shrb
dec
dec
lods
loope
mov
adc
add
add
inc
clc
arpl
add
cmc
pop
xor
outsl
je
seto
clc
aas
pop
jge
fsub
clc
aad
jns
fcmovnbe
cmp
cmpsl
clc
shr
push
clc
cli
cs
clc
ffree
clc
xchg
out
adc
add
add
popa
add
dec
push
in
and
add
add
or
inc
clc
and
clc
insl
jo
add
das
add
add
cli
xbegin
dec
mov
clc
pusha
add
ja
test
clc
pop
jecxz
mov
cld
test
mov
add
mov
cmp
push
add
movsl
clc
xchg
dec
dec
push
add
lods
jmp
rcll
adc
add
pop
jmp
lcall
int3
and
std
pop
sar
adc
add
sub
cmp
ja
jbe
jnp,pn
add
nop
aaa
cmp
xbegin
adc
add
ss
jg
clc
fistpl
clc
sbb
inc
add
mov
sbb
cmp
fcom
and
add
aad
cmp
adc
add
outsb
call
add
scas
cs
lret
add
add
cltd
shl
clc
mov
add
add
xchg
inc
clc
cmp
stc
sbb
add
pushf
aaa
pop
dec
push
add
sub
clc
sbb
test
dec
mov
add
cmp
clc
inc
clc
sub
cwtl
mov
cmp
xchg
mov
clc
xor
add
clc
mov
add
inc
clc
jbe
mov
sub
push
clc
clc
nop
dec
pop
cmpsl
clc
sbb
and
add
push
add
in
adc
add
add
clc
mov
add
clc
in
mov
adc
clc
gs
xbegin
jp
shll
add
inc
clc
popa
add
adc
add
add
icebp
imul
clc
cmp
push
add
scas
dec
xchg
dec
aaa
dec
cli
dec
mov
add
adc
cmp
add
dec
mov
xchg
ss
inc
clc
jae
add
lcall
push
jns
xor
mov
clc
lods
test
add
cmp
fadds
pushf
call
add
test
sahf
testb
clc
inc
clc
and
hlt
add
in
jno
add
add
insl
ss
cmp
clc
call
ss
lret
repnz
add
loopne
movsl
clc
stos
int3
test
outsl
pushf
mov
clc
inc
add
loopne
in
std
pop
pop
jae
add
mov
int3
mov
sub
clc
cmp
sar
and
pop
fsubrs
stos
loop
xor
add
mov
clc
mov
addr16
movntq
out
or
jecxz
mov
sarb
ss
add
cmpsl
clc
jg
pop
aam
jl
clc
call
adc
add
clc
hlt
push
sbb
add
add
clc
adc
add
lock
imul
sahf
jmp
cmp
clc
sub
iret
movsl
clc
push
fcmovbe
clc
scas
lcall
mov
clc
push
xabort
popf
mov
xchg
call
mov
daa
clc
jnp
add
movsl
clc
and
add
push
ret
stos
mulb
fsubrs
pop
jbe
push
enter
push
lcall
add
and
add
add
dec
pop
jle
add
loope
mov
gs
ljmp
push
add
jno
add
mov
cmp
mov
add
or
clc
jb
add
daa
clc
jne
decl
mov
add
dec
xor
add
sbb
in
xchg
dec
clc
out
cmp
xor
add
add
xchg
pop
jo
add
cmpsb
clc
jae
add
stc
ret
clc
iret
sub
inc
clc
repz
or
clc
sar
out
cmpsb
clc
sbb
ret
clc
pop
pop
clc
mull
ret
clc
cmpsb
clc
fs
inc
add
popf
push
add
repz
add
clc
stos
push
add
and
add
cmpsb
clc
push
loopne
mov
inc
add
lahf
bound
add
lods
out
jb
add
mov
add
clc
pop
jp
in
cltd
cmp
add
dec
scas
imull
adc
add
mov
add
add
loopne
xchg
pop
inc
add
sbb
aaa
xlat
jecxz
mov
add
mov
clc
pop
in
in
mov
cli
lret
lods
pop
pop
fidivs
add
lods
add
add
add
bound
add
ficompl
sahf
mov
cmp
clc
xor
dec
push
clc
xabort
clc
pop
outsb
repnz
add
add
clc
cmp
insb
es
or
addr16
loopne
mov
or
imul
or
push
clc
inc
add
jg
bound
add
stos
push
clc
pop
sbb
stos
and
insb
xlat
leave
iret
cmp
add
ljmp
fisttps
push
add
jae
add
add
add
stc
mov
in
into
fs
pop
cmc
sub
jnp
loopne
in
inc
add
mov
mov
data16
push
add
mov
add
jg
cltd
aaa
inc
clc
xchg
pop
jae
add
add
add
add
add
sub
imul
enter
test
push
pop
insb
nop
mov
xor
add
add
fiaddl
add
adc
add
adc
outsl
push
add
jmp
inc
add
sbb
add
add
add
and
add
add
xchg
sarb
mov
jmp
add
xor
add
xchg
xchg
and
add
clc
test
icebp
and
add
add
mov
mov
outsl
xbegin
clc
pop
clc
mov
aas
and
add
mov
clc
outsb
inc
add
push
add
insl
sub
mov
mov
mov
mov
pop
xchg
test
addr16
adc
add
add
in
mov
add
test
popa
add
and
add
sar
lret
fldenv
scas
popf
stos
mov
and
add
jno
add
push
add
test
add
iret
pop
jo
add
xchg
adc
add
insl
jbe
clc
pop
push
fisubl
clc
mov
pusha
add
and
add
jbe
jecxz
push
clc
movsl
clc
mov
add
add
pop
clc
scas
dec
sub
cmp
clc
sahf
test
dec
xchg
clc
aam
add
mov
clc
jnp
push
clc
xabort
xor
add
div
adc
add
sti
into
stc
repz
pop
jmp
outsb
mov
lods
xor
add
fstp
int3
xor
xabort
test
add
xchg
mov
outsl
dec
into
push
mov
cmp
xabort
dec
dec
sub
clc
mov
lock
popa
add
inc
add
shr
outsl
xor
add
mov
fidivl
add
pop
out
xbegin
add
sub
cmp
inc
add
in
inc
add
pop
mov
clc
incb
add
lods
xchg
push
add
test
leave
idiv
sbb
add
arpl
add
add
frstor
add
inc
clc
iret
jb
add
mov
sar
clc
or
pushf
xlat
daa
clc
xlat
cmp
push
clc
mov
fsubr
fsubl
add
inc
clc
dec
sub
clc
add
add
add
hlt
clc
outsb
jns
mov
pop
imul
clc
xor
add
sub
xor
cmp
cmp
add
ret
clc
push
xchg
arpl
add
cmp
add
mov
leave
and
add
sar
ret
clc
mov
cmc
sar
add
inc
clc
test
xabort
iret
es
cwtl
int
call
loopne
dec
in
pop
jnp
clc
clc
jp
xor
add
clc
jp
daa
clc
push
push
clc
push
cltd
cwtl
mov
clc
cmp
dec
xchg
adc
fdiv
pop
mov
clc
aad
enter
jae
add
clc
enter
icebp
in
sub
icebp
std
push
add
cmpsb
clc
mov
clc
movsb
clc
daa
clc
or
xlat
add
and
test
test
add
cmpsl
clc
rclb
test
push
add
dec
or
add
add
js
xchg
imul
sbb
movsb
clc
sub
adc
lret
jns
jp
pop
cs
clc
aaa
imul
sbb
add
fldt
daa
clc
xchg
and
add
mov
add
or
fwait
or
jg
clc
and
add
clc
sbb
inc
add
adc
and
clc
and
hlt
xchg
stc
das
xchg
xchg
xlat
jle
adc
add
jb
add
and
add
cld
mov
push
int
inc
add
in
xor
clc
jp
mov
push
add
xabort
leave
test
scas
jle
add
push
es
jb
add
mov
dec
mov
add
mov
out
sub
scas
mov
clc
push
add
cmp
mov
dec
test
gs
hlt
loopne
popf
pop
adc
mov
out
sti
lret
clc
jbe
xor
add
cmp
pop
jecxz
negb
dec
sar
fwait
cmp
clc
jns
sub
pop
mov
push
add
push
add
repnz
hlt
cltd
or
bound
add
clc
lods
cmp
add
jnp
clc
xor
add
clc
xchg
jne
and
add
jbe
add
sub
jbe
shrl
lcall
fiaddl
inc
clc
sar
add
jo
add
push
repnz
aad
dec
xchg
call
mov
dec
xabort
clc
push
add
sbb
push
cmp
add
pop
leave
jp
jnp
inc
add
cmp
clc
sub
cmc
push
add
inc
clc
xor
add
imul
mov
push
add
sahf
idiv
sar
neg
dec
jl
push
ret
jb
add
movsl
clc
shlb
add
rorl
or
cmpsb
clc
iret
inc
clc
das
fwait
sbb
clc
jo
add
add
adc
sar
add
add
imul
dec
pop
add
add
sbb
xchg
popf
out
inc
add
bts
rol
clc
fildl
add
cld
push
push
mov
clc
or
clc
xchg
insb
jg
cmp
repnz
add
push
insl
outsl
in
cmp
add
pop
scas
jb
add
aad
jge
push
and
add
inc
add
rcrl
add
mov
pop
sub
add
mov
jge
clc
jnp
push
add
test
ret
add
popl
add
adc
add
jnp
or
sub
add
clc
jo
add
jle
cmp
add
pop
adc
add
and
add
cli
dec
ljmp
clc
mov
clc
test
jge
add
jp
fimuls
mov
mov
outsb
insb
scas
into
mov
xchg
mov
call
pop
mov
int
jns
clc
out
fildl
add
and
add
pop
lcall
clc
xchg
push
add
add
clc
mov
mov
inc
clc
push
mov
sbb
stos
mov
jle
shll
adc
add
add
add
clc
gs
mov
xlat
or
outsl
sbb
add
lahf
inc
add
clc
mov
clc
add
add
call
mov
clc
sbb
push
in
cmp
clc
inc
add
push
jmp
clc
mov
add
clc
mov
mov
xlat
sti
mov
clc
test
or
xor
add
clc
jbe
sar
adc
gs
mov
cmpsl
clc
inc
add
cmp
lahf
bt
insb
sub
xchg
dec
cs
rorb
movsl
clc
add
add
sub
add
jecxz
or
mov
lock
outsl
filds
cmp
clc
hlt
or
nop
test
push
add
aaa
stc
clc
ss
pusha
add
inc
add
inc
clc
jns
rclb
loopne
stos
jecxz
dec
pop
mov
and
add
add
in
pop
cmc
sbb
add
mov
add
jmp
fldcw
sbb
or
jp
sar
mov
rcrl
clc
lods
cmp
clc
pop
push
add
inc
clc
cmp
clc
mov
clc
jae
add
lods
pop
jge
add
cmp
sti
clc
outsl
add
add
ss
cli
xor
mov
movsl
clc
xor
add
xchg
mov
push
and
mov
add
and
add
adc
add
mov
ffree
clc
or
bound
add
add
cmp
add
or
int
cmp
dec
ret
clc
mov
add
add
clc
lcall
ret
mov
inc
add
repz
clc
in
mov
inc
add
jb
add
sbb
test
cmp
sub
imul
aam
jb
add
clc
jnp
or
jno
add
sub
mov
clc
lret
sbb
popf
mov
xchg
daa
clc
das
pop
mulb
repz
clc
ret
jo
add
imul
decl
push
clc
push
jno
add
pop
adc
add
test
ret
clc
mov
pusha
add
adc
add
mov
add
cmp
fildl
xor
clc
mov
add
jnp
adc
clc
push
add
pop
clc
ljmp
add
and
add
sub
and
add
jecxz
rcrl
int
and
add
in
std
ret
clc
mov
arpl
add
es
sub
clc
jmp
add
add
adc
add
add
adc
add
mov
imul
mov
add
call
add
gs
call
add
cmc
loop
push
add
cli
push
call
lods
adc
add
add
push
popf
mov
add
in
dec
xchg
ret
add
fildll
int
sbb
adc
add
outsl
sub
movsb
clc
push
add
fldcw
clc
jne
inc
clc
pop
int3
inc
add
inc
add
push
add
repz
fs
fucomp
push
add
xchg
test
mov
pop
out
pop
clc
xor
add
add
jno
add
clc
adc
add
or
add
add
add
sbb
insb
std
mov
add
rcr
lods
loopne
dec
fstpl
aam
add
push
add
stc
mov
inc
add
popa
add
xchg
int
fld
clc
je
insl
loopne
or
add
inc
clc
test
dec
cmp
mov
mov
mov
test
jo
add
xchg
in
push
adc
mov
add
test
jp
popa
add
shlb
add
mov
add
add
adc
clc
addr16
fisttpll
aam
test
stc
adc
add
jo
add
pop
mov
add
cmp
clc
sub
and
add
clc
pop
loop
fimuls
add
mov
jno
add
rcrl
xchg
and
add
clc
pop
in
ret
clc
scas
or
mov
fstps
clc
jb
add
add
push
add
mov
mov
ljmp
arpl
add
cltd
mov
add
push
aaa
cmp
clc
cmp
push
ret
clc
cmp
push
imul
cmp
push
add
sar
shll
mov
mov
xor
loop
jno
add
push
sub
and
add
add
clc
scas
jl
data16
iret
std
test
sar
jb
add
add
fnstcw
clc
or
loopne
clc
popa
add
ret
clc
fs
add
loopne
out
mov
adc
add
clc
inc
add
into
pop
jno
dec
mov
add
add
out
int
ljmp
insl
into
stos
mov
sbb
add
inc
add
lea
add
pop
es
data16
mov
add
adc
clc
sbb
add
mov
adc
add
clc
or
clc
push
add
add
push
mov
mov
fdivl
jb
add
inc
clc
loop
add
add
add
into
adc
add
sub
add
mov
outsl
add
add
push
add
int3
loope
enter
clc
cmp
dec
testl
clc
xchg
push
test
sahf
dec
sub
pushf
cmpsl
clc
mov
xchg
xchg
pop
clc
dec
pop
mov
clc
cmp
sti
or
clc
pop
or
clc
jno
add
mov
mov
xor
add
jbe
add
ret
clc
mov
clc
push
mov
in
sti
pop
mov
xbegin
flds
add
mov
clc
pushf
cmpsl
clc
mov
mul
clc
jno
add
clc
enter
jns
push
add
sub
imul
clc
pop
cmp
testb
add
jb
add
xor
add
insb
hlt
xchg
and
add
clc
jbe
daa
clc
test
xchg
xchg
jb
add
test
aas
arpl
add
negb
adc
clc
sub
mov
sub
or
xchg
push
xbegin
xabort
add
add
lods
sti
xchg
or
jge
clc
test
cmp
addr16
icebp
mov
pop
push
mov
inc
clc
js
add
fdivs
adc
add
add
sti
das
adc
add
fwait
add
add
clc
push
add
in
aaa
xchg
jnp
cmc
sub
xor
push
add
add
xor
in
sbb
popa
add
dec
out
xchg
mov
clc
imul
mov
fcomip
mov
cmp
clc
out
dec
mov
clc
adc
add
add
add
lock
clc
test
pop
je
clc
dec
fs
pop
jbe
fistpll
ret
clc
xchg
dec
sub
clc
repnz
and
add
add
dec
cmp
jg
clc
cmp
clc
pushf
cmp
clc
jo
add
clc
mov
add
add
clc
std
lret
add
cmp
push
ljmp
dec
aad
clc
or
sub
add
jo
add
xor
clc
ja
cmp
and
add
cltd
dec
pop
xor
add
add
or
add
lahf
mov
add
clc
mov
stc
push
add
pusha
add
add
add
clc
pop
mov
push
cmpsl
clc
int
imul
clc
js
popf
mov
pop
cmp
add
fs
leave
add
add
inc
clc
dec
sti
stos
repz
cmpsb
clc
sbb
fs
ficoms
sahf
ss
xchg
add
add
mov
clc
pop
inc
clc
jl
out
pop
loope
cmp
jmp
inc
add
insb
jecxz
sub
gs
cmp
clc
iret
std
lock
sar
clc
daa
clc
rcrl
cmp
pop
clc
pop
shll
add
or
clc
mov
mov
mov
mov
add
add
clc
sbb
sbb
lcall
clc
and
add
xlat
xchg
ret
or
dec
xchg
pop
clc
and
add
fdivrs
xor
add
lcall
pop
or
xchg
ret
mov
xor
add
es
fidivl
add
adc
add
add
adc
add
insb
das
pushl
add
cmp
adc
add
daa
clc
jns
xchg
cmp
addr16
mov
dec
mov
loopne
ljmp
clc
jmp
clc
lcall
add
repnz
repz
jno
add
clc
jae
add
gs
nop
adc
jns
clc
in
sti
xor
add
clc
cltd
mov
clc
mov
adc
add
or
cmpsl
clc
xchg
mov
das
je
jns
clc
sbb
add
add
adc
add
sbb
imull
clc
ror
mov
stos
in
pop
dec
xlat
fildl
clc
hlt
insb
hlt
or
or
mov
repz
mov
add
and
add
test
add
movlps
add
fdivr
enter
inc
clc
sbb
cmp
jmp
or
clc
data16
mov
clc
pushf
js
clc
dec
arpl
add
lret
add
add
add
lcall
cli
mov
shl
mov
add
loop
cld
add
add
add
xchg
arpl
add
push
jo
add
clc
sahf
outsb
cli
stos
xchg
xor
add
jb
add
clc
in
mov
add
loopne
mov
and
add
aaa
cmpsl
clc
cmc
jmp
clc
mov
cltd
cli
cmpsb
clc
pop
das
mov
clc
movsl
clc
pusha
add
sti
pusha
add
gs
int3
ss
fimull
mov
clc
mov
sbb
clc
mov
pusha
add
mov
outsb
jnp
clc
xbegin
pop
sub
cmp
add
add
cmp
cmp
mov
out
lods
ret
clc
xchg
stc
ja
xlat
xchg
je
add
jmp
sbb
add
sar
clc
sbb
add
mov
enter
xchg
or
pop
stos
out
jne
add
into
push
out
es
call
ret
in
fs
xchg
fsubr
xbegin
add
cmpsl
clc
add
clc
xor
clc
and
add
add
add
clc
jae
add
dec
sti
pop
clc
lods
or
clc
in
or
sar
clc
cmp
sarb
add
js
push
ret
clc
insb
mov
mov
repnz
test
out
sbb
roll
add
cmp
pop
pop
clc
mov
push
neg
mov
add
pop
jle
pusha
add
sub
adc
add
outsb
adc
add
cltd
pop
mov
inc
add
sub
clc
test
cmp
add
xchg
dec
pop
sub
das
jecxz
xchg
sbb
clc
jne
clc
jb
add
fsts
add
clc
loope
push
add
fs
push
add
stos
out
jb
add
pop
scas
dec
xchg
lock
clc
enter
clc
dec
clc
ljmp
cmpsb
clc
cmp
lock
mov
add
add
pop
test
cmpsl
clc
bound
add
leave
or
sbb
arpl
add
clc
inc
clc
xchg
pop
clc
xchg
and
repnz
xor
add
fstpt
jb
add
stos
jns
inc
add
test
xor
add
fstl
add
sub
test
bound
add
faddl
clc
pop
jb
add
add
clc
cmc
dec
fwait
scas
sub
add
push
clc
jbe
pop
xbegin
add
add
jb
add
fstpl
sbb
lea
or
sarb
jle
aad
clc
out
mov
mov
clc
data16
cwtl
mov
pop
sbb
pushf
mov
clc
dec
cmp
jl
dec
jae
add
repnz
or
ror
xchg
js
cmp
clc
js
cmp
cwtl
cmp
add
pop
sub
clc
sub
clc
push
add
mov
add
add
mov
sbb
lahf
faddl
add
hlt
sahf
cmp
mov
cli
aas
loope
push
cld
sarb
cmp
xbegin
xchg
testb
fstl
add
xchg
je
jo
add
daa
clc
in
fistpl
clc
cmp
xor
add
pop
cld
mov
clc
xchg
jne
mov
add
jno
add
sar
clc
xchg
mov
add
fsubrs
jp
clc
xor
add
mov
sub
add
mov
add
add
jns
clc
cmp
jge
xabort
mov
js
outsl
std
jns
jno
add
imul
push
add
sub
add
jae
add
clc
xchg
pushf
add
shll
add
inc
clc
fiadds
add
push
stc
dec
aaa
xor
add
cmp
ffree
clc
aaa
cmp
clc
sub
add
test
jmp
add
xor
add
fdivrs
jmp
cwtl
aaa
fisubs
clc
jno
add
add
cltd
xlat
out
aaa
mov
jno
add
mov
or
mov
add
add
int
or
int3
scas
dec
faddl
inc
clc
xchg
jns
mov
dec
xor
add
add
jo
add
arpl
add
push
jno
add
xchg
popf
xabort
add
fists
add
clc
sub
mov
mov
xchg
movsl
clc
and
add
clc
loope
jno
add
fs
pop
clc
xbegin
clc
mov
repz
jmp
add
pop
call
out
push
push
inc
clc
inc
clc
lods
adc
add
int
sti
fs
xchg
out
cmp
clc
or
cltd
sbb
add
adc
add
push
clc
aam
rorl
fisttpll
pop
add
add
add
add
add
fcmovu
dec
out
ret
clc
loop
imul
ret
aas
jmp
pop
dec
mov
int3
gs
sbb
into
xchg
test
lods
sahf
xchg
repz
push
outsb
and
add
xor
clc
adc
add
sbb
shr
push
add
fwait
dec
push
cmp
imul
add
test
in
pop
imul
popf
mov
add
jae
add
clc
stos
adc
jg
mov
xchg
and
add
or
jp
pop
sbb
sub
clc
adc
add
add
jbe
test
imul
add
xor
lahf
pop
sar
hlt
sub
add
add
add
sar
add
aad
lea
clc
cmp
add
test
arpl
add
mov
xor
clc
mov
clc
jge
mov
cmp
clc
movsb
clc
dec
data16
xchg
lret
pop
bound
add
addr16
and
add
add
vunpckhps
add
stos
xabort
pop
ret
clc
stc
dec
sbb
cmp
xor
add
jo
add
or
clc
fiaddl
add
push
pop
lret
clc
cmp
clc
adc
sbb
clc
cmp
add
std
sub
clc
out
lock
clc
std
jecxz
sar
add
add
clc
dec
sub
push
into
cmc
cmc
sub
clc
ds
push
sub
add
fsubrl
add
add
sub
out
push
sub
clc
cmp
add
std
push
clc
mov
xor
add
pop
sar
clc
push
add
sti
jnp
es
nop
fistpl
in
xor
add
test
clc
fistpll
loop
rolb
stos
sbb
cmpsb
clc
sahf
pop
fidivl
add
ljmp
cmpsb
clc
fdivp
in
push
clc
clc
push
ja
mov
dec
mov
call
inc
clc
mov
jb
add
mov
lock
clc
xchg
cmp
sub
loope
ficoml
add
sarl
sub
push
jmp
sbb
add
add
mov
dec
testb
or
or
mov
add
clc
fidivrs
fldcw
add
push
pop
jnp
sbb
add
sti
pusha
add
cmp
mov
xchg
push
ja
pop
adc
lret
adc
push
movsb
clc
and
add
js
mov
xor
add
or
add
mov
add
and
mov
ds
cwtl
pop
push
movsb
clc
dec
out
push
add
and
add
stos
mov
add
sub
sti
imul
filds
clc
inc
clc
cli
jns
add
add
and
add
clc
je
cwtl
xchg
out
jg
add
jnp
and
push
pusha
add
pop
aaa
push
cmp
push
clc
fwait
jae
add
xor
jl
add
sahf
cltd
mov
sub
clc
jae
add
clc
fiadds
add
daa
clc
outsl
dec
bound
add
clc
test
pop
clc
out
mov
clc
sarb
repz
add
data16
sahf
fiadds
add
mov
clc
xor
add
mov
add
enter
push
jmp
clc
cmp
cmp
pop
ljmp
xchg
sub
clc
clc
adc
add
clc
insb
in
pop
adc
add
xchg
mov
sahf
sbb
push
test
xor
add
ret
add
inc
add
fimull
push
inc
clc
jl
sar
mov
loope
cmc
fwait
xor
add
add
add
data16
xchg
add
add
and
sbb
xchg
mov
cmp
add
out
jno
add
clc
loope
sub
nop
lods
sbb
add
cli
cmpsb
clc
xchg
mov
push
loop
pop
lret
add
pusha
add
mov
push
jne
sahf
xchg
popf
idivb
ficomps
adc
test
add
xchg
mov
clc
mov
pop
push
add
sar
clc
clc
mov
clc
scas
inc
add
push
add
stos
mov
outsl
arpl
add
repnz
add
cmp
sbb
cmpsl
clc
jecxz
fistl
add
outsl
xor
add
inc
clc
adc
mov
fmul
imulb
clc
test
adc
add
add
add
shrb
add
sahf
mov
mov
clc
rcr
bound
add
clc
mov
movsl
clc
shl
clc
movsb
clc
fcompl
mov
clc
call
jb
add
clc
mov
or
push
add
negb
add
out
cmpsb
clc
jl
test
mov
add
add
clc
push
add
mov
add
cmp
clc
std
mov
add
mov
add
adc
xchg
xchg
out
lods
shlb
add
and
add
clc
xor
add
sbb
out
sub
cmpsl
clc
lahf
cmc
sub
add
lock
out
sbb
dec
popf
dec
pop
insl
or
sahf
sbb
je
movsb
clc
jbe
jbe
xchg
mov
xchg
xor
add
add
stc
fidivrl
mov
clc
mov
sbb
iret
shr
dec
mov
cmp
out
cmc
mov
mov
cs
clc
gs
jbe
dec
xchg
lods
call
cmp
mov
lock
jno
add
inc
clc
cmp
jo
add
pop
jecxz
mov
add
add
clc
dec
and
jecxz
xor
sti
aaa
cmp
popa
add
dec
or
sub
std
xor
add
clc
clc
aas
push
std
shrb
outsb
in
sbb
cltd
std
pusha
add
push
dec
ror
xchg
ret
dec
pop
in
out
cmp
mov
lret
add
clc
dec
cmpsb
clc
xabort
add
adc
cmp
add
int
and
add
add
js
cmp
add
inc
clc
mov
push
aas
hlt
push
add
lock
out
push
add
xchg
mov
cltd
faddl
add
scas
xor
add
add
es
and
lea
jo
add
add
shlb
add
sbb
cmp
clc
lret
clc
jnp
mov
clc
push
ret
clc
xchg
xchg
xor
add
add
inc
add
imul
fwait
xchg
xor
add
add
cmp
add
ds
xchg
mov
repnz
shr
fisubrs
adc
xchg
test
fnstsw
leave
dec
mov
mov
push
add
add
add
loope
and
add
pop
movsb
clc
push
or
add
aaa
push
lcall
ljmp
dec
lcall
mov
imul
sub
in
repz
mov
clc
mov
xchg
stc
rcl
out
das
or
je
push
add
or
adc
add
jb
add
add
cmp
push
add
sub
and
add
mov
add
lret
push
xchg
jno
add
add
shrl
fstl
add
sub
add
clc
pushf
cmp
mov
sub
clc
sar
clc
mov
push
mov
ja
cmp
stos
push
sar
clc
shrl
push
add
outsl
pop
popa
add
jp
mov
mov
inc
clc
mov
add
push
gs
pop
clc
xor
add
jae
add
out
fs
sub
add
add
ss
popf
sbb
cmp
add
dec
icebp
jns
fsubrs
clc
sahf
pop
mov
ja
mov
cmpsl
clc
jl
test
ja
xchg
sbb
out
ss
cmp
add
lea
xbegin
add
clc
xlat
cwtl
shr
sub
add
dec
xchg
or
out
jns
mov
jl
inc
clc
test
ret
enter
add
loope
sub
add
shr
gs
enter
pop
arpl
add
bound
add
add
jle
cwtl
lret
dec
scas
push
add
data16
cmp
clc
adc
add
fistl
clc
dec
xlat
and
add
insl
mov
stc
enter
mov
clc
adc
add
dec
es
mov
dec
adc
add
nop
pop
lea
cmp
add
or
and
add
fisttpl
add
xor
add
clc
inc
clc
jecxz
pop
pop
xchg
add
clc
xor
add
popf
das
cmp
dec
and
add
daa
clc
out
xlat
xor
clc
in
mov
xchg
lcall
clc
and
add
push
add
adc
add
mov
xchg
mov
clc
mov
mov
cmp
mov
pop
jns
pop
add
add
out
je
add
add
insl
inc
clc
fs
cld
jne
jle
cmp
sub
clc
clc
lret
mov
add
setge
pop
decb
pop
in
in
or
mov
or
clc
mov
ret
mov
add
cmpsl
clc
cwtl
es
push
xor
add
add
hlt
ljmp
mov
add
push
add
xor
mov
repz
gs
sub
out
scas
fstps
testl
clc
and
add
mov
xchg
fnstsw
clc
int3
xor
add
clc
stc
cmp
or
in
outsb
adc
add
sar
clc
lahf
testb
fnstsw
clc
fs
sbb
xchg
movsb
clc
or
dec
push
in
ja
sub
rcr
negl
xabort
addr16
jge
ficoml
insl
sub
cld
dec
dec
dec
jnp
cmp
in
lods
lods
and
pop
mov
clc
jl
clc
mov
add
mov
add
push
push
clc
repnz
add
add
cmp
adc
add
clc
sub
add
mov
clc
or
jnp
add
jmp
clc
lock
cwtl
fidivs
cmp
add
pop
push
in
xchg
ucomiss
out
popa
add
dec
lods
pop
lcall
jbe
into
push
sbb
arpl
add
clc
xchg
test
aad
add
add
adc
clc
push
lock
mov
pop
ljmp
or
addr16
mov
clc
cwtl
jecxz
cmp
clc
out
or
cmp
add
mov
sub
inc
clc
pop
loope
lahf
jle
mov
loop
out
xor
add
repz
clc
fsubs
clc
js
cmc
and
add
dec
mov
sub
stos
sbb
sbb
push
mov
xchg
push
add
jne
mov
test
clc
fldenv
outsb
lea
mov
clc
fcmovnbe
mov
mov
mov
sbb
out
cmp
dec
cmp
or
add
pop
cmp
xabort
mov
jmp
clc
xabort
out
imul
clc
inc
add
mov
rclb
clc
sbb
clc
push
popf
outsl
roll
add
iret
ret
xchg
add
add
add
or
clc
sar
add
xlat
imul
push
add
sbb
xchg
or
sar
clc
mov
enter
add
push
sbb
clc
iret
pop
in
dec
enter
mov
sub
add
inc
clc
sub
mov
inc
clc
dec
and
add
add
dec
shlb
mov
lock
add
rcrb
push
insl
dec
repnz
clc
ret
clc
lret
mov
outsl
cmp
shrb
adc
add
mov
add
mov
clc
enter
add
in
aas
mov
xchg
call
lea
ret
clc
xchg
dec
sbb
clc
push
and
xchg
cmp
lods
js
ret
pop
test
sbb
add
or
dec
or
add
sar
pop
cmp
mov
cmp
mov
add
add
push
clc
sbb
clc
dec
jb
add
bswap
sub
add
sahf
push
xchg
and
lock
add
add
add
jae
add
jp
repnz
clc
mov
sbb
clc
sub
in
imul
test
sbb
clc
mov
movsl
clc
xchg
std
shl
clc
mov
mov
cmp
and
mov
lahf
nop
or
rcll
aad
add
mov
clc
mov
clc
jne
xchg
outsb
stc
sti
pop
fwait
mov
push
inc
clc
ljmp
clc
jnp
mov
cmc
inc
clc
in
sar
mov
add
outsb
lods
sbb
xchg
lods
aam
or
lret
test
push
sub
mov
and
je
add
in
pop
clc
xor
add
add
cmp
clc
mov
add
outsb
adc
add
push
repz
add
add
add
clc
stos
mov
add
inc
clc
push
add
xor
add
sbb
add
mov
ljmp
stos
daa
clc
fildll
imul
pop
fcmovne
cmp
cld
dec
sar
mov
clc
int3
and
lods
mov
mov
popf
out
mov
jp
mov
mov
add
and
add
sub
pop
movsl
clc
pop
clc
int3
fmul
scas
or
clc
iret
sbb
push
xabort
leave
sub
or
into
push
cmc
leave
addr16
bound
add
enter
clc
inc
add
lret
call
add
and
add
add
mov
clc
pushl
lcall
add
adc
add
pop
sbb
fs
icebp
mov
clc
xchg
dec
adc
add
add
mov
clc
pop
or
sar
or
add
out
cmp
cmp
push
daa
clc
mov
mov
add
add
sub
fidivs
sar
mov
mov
iret
test
cmp
mov
add
add
cld
cmp
add
idivl
or
clc
add
add
add
aam
mov
clc
cli
xor
add
dec
pop
mov
add
cs
jecxz
cld
ds
enter
clc
popa
add
jecxz
and
add
mov
sub
outsl
push
jno
add
add
loopne
sbb
mov
clc
cmp
xchg
loope
mov
test
jno
add
jne
xchg
clc
pop
jmp
pushf
sbb
out
xchg
xchg
rcll
clc
adc
add
gs
mov
shll
xchg
iret
stos
xor
push
es
adc
add
cmp
or
clc
sub
in
jbe
lea
loop
xlat
or
cli
test
sub
add
ret
clc
sub
add
rorb
clc
mov
jno
add
xor
add
dec
mov
clc
xchg
sbb
stos
cmp
jnp
clc
and
add
clc
insl
lret
add
add
add
xchg
popa
add
push
add
cmp
add
mov
push
add
aad
cltd
testl
add
mov
cwtl
or
clc
outsl
es
je
dec
aam
pop
clc
es
or
clc
aaa
dec
popf
std
and
add
mov
arpl
add
xchg
jp
mov
clc
mov
rolb
add
adc
add
xchg
mov
ret
clc
push
clc
pop
pop
sbb
ss
jl
mov
add
pop
fsts
cmpsb
clc
adc
add
add
jns
clc
and
add
dec
xor
add
fadds
out
test
mov
add
int3
inc
add
cmp
stos
and
add
xabort
sbb
mov
ficoms
push
cmp
jnp
ret
clc
or
xchg
push
icebp
in
pop
sub
add
mov
daa
clc
xchg
push
add
call
out
pop
xchg
mov
cld
mov
mov
push
stos
xchg
aam
arpl
add
mov
clc
mov
jno
add
and
add
pop
mov
xor
add
add
clc
jb
add
pop
std
and
add
movsb
clc
inc
add
out
xchg
sbb
lock
add
clc
ljmp
push
setno
inc
clc
cli
dec
and
add
sbb
js
loopne
inc
clc
in
inc
clc
ss
jne
add
movsb
clc
cmc
fwait
xor
add
sub
add
mov
add
cwtl
lods
or
and
ret
clc
hlt
and
cmp
add
dec
out
push
add
or
clc
ret
clc
xchg
mov
je
jno
add
or
jb
add
clc
hlt
mov
sbb
xchg
cmp
jnp
clc
dec
fstpt
sbb
clc
pop
xchg
push
add
adc
add
add
mov
femms
and
add
push
add
xchg
cmp
sbb
mov
clc
sub
inc
clc
xabort
lods
push
in
into
rorl
clc
dec
mov
sub
and
add
xchg
dec
sbb
or
inc
clc
mov
in
dec
add
add
xchg
testb
add
clc
jnp
xadd
and
add
cmp
add
cld
jle
dec
xor
clc
push
push
clc
mov
add
fwait
jg
clc
dec
out
xor
inc
add
stos
ljmp
shrb
pop
dec
mov
clc
add
clc
and
add
clc
hlt
test
arpl
add
xor
cmc
sbb
clc
in
cmp
aaa
movsb
clc
adc
add
clc
mov
test
clc
inc
add
adc
add
arpl
add
jnp
clc
lods
cmpsb
clc
mov
jg
add
cmpsb
clc
call
clc
mov
jne
ficoms
add
add
mov
clc
mov
adc
add
add
push
push
push
add
es
mov
cmp
xor
jge
add
pop
jmp
sahf
and
sar
mov
add
lcall
sub
clc
mov
add
xor
add
testl
loopne
mov
jge
clc
push
jo
add
inc
add
pop
jae
add
fs
push
add
mov
pushf
mov
jbe
clc
jge
clc
mov
sub
mov
add
cli
lret
add
repnz
add
add
add
clc
out
mov
add
xor
add
aad
jbe
push
mov
clc
xor
add
push
push
sar
jp
add
or
add
add
sbb
add
ja
mov
and
test
mov
clc
clc
pop
mov
clc
rcr
data16
fstpt
lcall
ret
clc
and
add
push
nop
ret
pop
int
cmp
inc
clc
add
mov
add
insl
mov
clc
mov
mov
add
fisubs
inc
clc
push
xchg
mov
clc
xor
add
push
lods
cmp
inc
clc
xchg
xchg
repz
add
inc
clc
negb
xchg
sar
clc
mov
add
nop
mov
push
lcall
add
add
clc
cmp
sub
or
pop
cmp
je
clc
mov
add
cmpsb
clc
pop
inc
add
insl
sar
mov
call
add
pop
xor
add
inc
add
or
fistl
loopne
sub
add
insl
xor
pop
jecxz
xor
add
push
clc
jecxz
sub
add
lock
push
add
xchg
sar
clc
adc
aad
ss
stos
test
clc
jnp
out
xor
add
add
scas
iret
pop
in
movsb
clc
sar
pop
dec
das
cmp
pop
aaa
cmp
loope
addr16
jecxz
jmp
clc
jbe
repnz
xchg
or
fst
mov
add
mov
jl
sub
js
js
mov
add
jle
fstl
add
pop
cmp
clc
mov
clc
fbstp
loopne
mov
sub
jp
ja
jbe
clc
sbb
mov
clc
pop
lock
insb
sub
adc
add
adc
add
ja
clc
cmp
add
add
add
adc
clc
je
clc
push
add
clc
inc
add
mov
add
clc
mov
add
pushf
mov
add
sub
into
cmp
dec
mov
jb
add
ja
add
in
mov
add
push
add
add
pop
std
cmp
clc
sub
mov
cmp
stos
lods
mov
insb
xchg
push
xchg
cmpsl
clc
rorb
test
sbb
clc
pop
push
add
fisubrl
repz
call
clc
pop
cmp
add
xor
add
xchg
inc
add
das
add
add
clc
sahf
inc
add
pop
repnz
mov
in
mov
out
data16
pop
int
add
fnsave
add
or
and
setae
push
sub
lods
adc
add
jg
sbb
pop
loop
lcall
cmp
cmpsl
clc
sub
scas
repnz
sub
test
add
es
fsubs
aaa
cmp
or
stc
inc
add
cltd
dec
rcrl
add
jecxz
jne
add
jno
add
clc
xchg
jb
add
mov
xabort
clc
clc
movsl
clc
addr16
mov
add
add
clc
cmc
jae
add
sar
sbb
push
mov
add
out
mov
push
pop
pop
jl
sub
add
add
add
push
cwtl
stos
add
mov
push
add
dec
cltd
jle
sbb
mov
clc
sub
clc
inc
add
or
cmpsl
clc
sbb
movsb
clc
xchg
and
add
ljmp
dec
add
clc
imul
or
clc
mov
and
add
inc
clc
jb
add
inc
clc
call
jge
int
clc
sub
clc
push
jne
dec
jo
add
jns
inc
add
out
dec
add
add
clc
mov
fs
test
fs
dec
mov
mov
add
int3
out
jns
test
out
ja
sub
jecxz
add
fbld
add
jno
add
sub
cwtl
cwtl
sar
adc
add
clc
ss
pop
sub
add
ret
clc
or
mov
sti
outsb
fdivs
ret
clc
xor
add
idivb
add
xlat
imul
and
add
add
cltd
pop
mov
xor
add
add
sub
test
mov
fisttps
clc
pop
mov
mov
add
mov
clc
dec
pop
add
add
dec
xlat
ds
cmp
push
cli
dec
xor
add
clc
popa
add
loope
add
add
scas
aaa
jns
js
add
mov
cmp
add
or
sub
jbe
loopne
mov
jmp
clc
mov
mov
add
mov
out
mov
mov
sahf
nop
daa
clc
mov
bound
add
pop
sub
out
adc
add
outsl
scas
cwtl
cltd
cld
std
mov
je
add
push
add
neg
dec
xor
add
cld
cmp
sbb
sbb
jmp
fldt
mov
add
movsb
clc
popa
add
outsb
out
push
add
push
add
xchg
xchg
sub
add
add
add
imul
add
test
clc
push
insl
bound
add
xbegin
clc
bnd
clc
ret
clc
lret
lock
cmpsb
clc
insl
stos
sub
adc
cmp
ret
clc
aas
or
clc
push
add
add
add
in
sbb
clc
pop
jns
add
add
andnps
add
mov
test
gs
and
div
xchg
xchg
dec
addr16
xchg
inc
add
inc
clc
xor
mov
fwait
pop
pop
int
clc
inc
clc
or
add
inc
add
or
add
or
add
and
jmp
sbb
push
add
inc
clc
das
out
lret
jmp
sar
clc
xchg
out
int3
mov
clc
leave
jae
add
rcrb
sub
add
sub
add
clc
xchg
divl
add
sub
out
call
rcl
xchg
imul
int3
daa
clc
out
mov
clc
xor
add
sbb
sar
clc
fucomip
mov
clc
push
loop
adc
add
clc
leave
fstpt
outsb
mov
add
test
or
push
sbb
inc
clc
push
in
call
add
loopne
insl
lods
jge
int
clc
sarl
and
add
dec
pop
cmp
clc
cltd
jg
jnp
popf
xor
clc
jmp
add
cwtl
and
add
repz
fs
mov
call
inc
add
jnp
lea
mov
sahf
dec
push
clc
movsl
clc
cmp
dec
shlb
add
cmp
add
repz
in
sub
out
shrl
inc
add
ljmp
flds
cmp
test
shll
rorb
into
lret
bnd
cmc
lret
lock
add
add
mov
jno
add
jb
add
add
insl
aaa
pop
cmp
clc
dec
push
add
pop
mov
cmp
clc
and
cmpsb
clc
and
jno
add
and
add
add
cld
xor
cmp
lahf
mov
scas
nop
outsl
mov
clc
pop
insb
pop
popf
pop
clc
and
add
add
xor
add
clc
sub
inc
add
jns
clc
xchg
pop
and
add
add
arpl
add
fnsave
add
stc
loop
shrl
lret
sbb
cmpsb
clc
out
stos
dec
insl
push
std
pop
cmpsb
clc
mov
clc
cmp
jle
pop
leave
mov
clc
pop
xchg
imul
ret
clc
mov
add
or
clc
aad
push
pop
std
mov
add
pop
cmpsb
clc
sub
clc
pop
push
or
add
xchg
xchg
sahf
fistps
rcrb
out
outsb
dec
or
or
aas
dec
xor
xbegin
movsl
clc
cltd
popa
add
add
sbb
cld
sar
clc
call
test
jmp
loope
repz
inc
add
imul
test
add
fucom
clc
cmp
sbb
clc
dec
mov
clc
imulb
faddl
add
jno
add
xchg
aam
clc
jo
add
add
add
add
mov
fbld
and
add
repz
pop
inc
clc
xchg
push
mov
adc
inc
add
adc
add
mov
clc
jno
add
cmp
leave
xor
fnsave
add
cli
movsb
clc
pushf
dec
addr16
fisttpll
sbb
mov
clc
sti
and
add
add
jl
xbegin
stos
lods
fdivrs
cmp
clc
adc
add
jp
das
dec
xchg
adc
add
add
mov
nopl
clc
cmp
jmp
scas
xabort
in
cli
cmp
add
or
add
add
sti
jmp
clc
sub
add
clc
push
stc
adc
add
cwtl
dec
dec
pop
popa
add
lcall
mov
add
test
mov
add
gs
and
add
mov
iret
jmp
clc
sub
add
add
adc
mov
add
sub
clc
or
add
repnz
mov
popf
cmp
dec
cli
sti
dec
mov
call
arpl
add
repnz
clc
das
sbb
xor
add
cmp
jbe
clc
mov
in
gs
mov
jns
ss
add
add
and
cmp
pop
sbb
pushf
xor
add
push
and
sahf
lods
fdivrl
lret
hlt
add
add
cmp
pop
sbb
lock
lret
mov
enter
in
adc
add
or
add
pop
cmp
push
add
test
jle
cld
stc
cs
mov
pop
inc
clc
inc
clc
cmp
push
jg
scas
sub
icebp
mov
xor
std
pop
dec
pusha
add
push
add
mov
aas
out
inc
clc
add
or
clc
pusha
add
or
clc
add
push
mov
inc
add
scas
rcl
jo
add
add
add
scas
xor
add
add
sar
clc
jp
clc
data16
mov
test
nop
cmp
sub
pop
clc
ds
shrb
daa
clc
mov
dec
jae
add
clc
sub
loope
jbe
add
xor
add
xchg
fpatan
daa
clc
and
add
add
xor
clc
xchg
js
push
push
mov
in
stos
jp
sub
mov
add
cmp
add
popa
add
in
or
cmp
inc
clc
xchg
pop
fs
jl
xor
add
clc
sub
add
add
js
clc
iret
xbegin
mov
add
xbegin
clc
sub
clc
jne
pop
dec
xchg
cmp
movsb
clc
in
inc
clc
in
xabort
rcrl
in
push
mov
cmpsb
clc
push
add
push
cs
mov
scas
or
das
fs
push
fs
or
in
std
jp,pt
int
lods
xchg
and
add
mov
add
call
jp
std
jae
add
inc
clc
ret
push
jl
xlat
mov
clc
pop
loope
data16
mov
clc
out
cli
adc
fwait
dec
clc
inc
add
cmp
mov
or
stos
xor
add
test
scas
push
insb
mov
mov
pop
and
add
add
xor
add
sub
xor
add
repz
clc
aas
inc
clc
xchg
into
in
jno
add
outsb
push
out
mov
add
test
sbb
clc
xlat
adc
dec
lea
add
rorb
test
dec
ljmp
add
clc
jno
add
cmpsb
clc
cmp
clc
xchg
fstl
hlt
clc
jne
adc
add
and
jo
add
lret
add
add
negb
imul
jne
and
add
test
outsb
inc
clc
call
ja
das
xor
add
clc
in
outsb
in
insl
imul
ficoms
add
cwtl
push
push
call
xchg
sub
mov
fists
add
xor
add
lods
fbstp
inc
add
xchg
and
add
clc
push
and
add
outsb
inc
add
fidivs
inc
add
ret
add
jle
clc
mov
add
hlt
fstps
pop
cmp
test
xabort
and
mov
and
mov
mov
pop
dec
or
clc
ret
stos
mov
mov
jge
clc
push
jge
add
mov
int
sbb
fdivl
add
cmp
fldenv
add
add
cmp
add
cpuid
clc
mov
and
add
clc
sbb
inc
clc
sti
jns
dec
stc
fmull
cmp
out
ss
mov
scas
in
jmp
cmp
scas
pushf
enter
clc
call
jmp
sub
pop
sar
cmc
sar
mov
add
or
ret
clc
das
and
add
cmp
mov
clc
aas
jo
add
add
leave
ljmp
add
or
clc
sub
and
add
cmp
sub
movsl
clc
js
lret
clc
fwait
test
add
gs
xor
add
add
mov
mov
mov
clc
ljmp
scas
xor
add
clc
xchg
in
stos
cltd
pop
xchg
stc
xchg
adc
add
add
push
add
inc
add
xchg
aad
mov
scas
adc
daa
clc
dec
add
and
add
jne
add
adc
adc
add
in
scas
jnp
clc
mov
cli
aaa
mov
add
loopne
ja
cmp
clc
in
adc
add
clc
push
out
push
cmc
fwait
and
add
out
or
dec
mov
xor
add
xchg
push
jo
add
shlb
xchg
sub
lock
add
cmp
clc
mov
push
clc
call
clc
push
mov
clc
shlb
add
test
add
xchg
add
add
inc
clc
mov
add
inc
add
leave
call
adc
add
clc
int
sub
add
mov
into
add
add
clc
xchg
dec
mov
in
jmp
in
mov
or
adc
jl
add
outsl
pop
jns
dec
mov
and
add
clc
add
add
jnp
add
repz
pop
xchg
jb
add
not
dec
mov
xchg
jg
pop
push
add
movsb
clc
mov
mul
clc
rep
mov
loopne
in
inc
add
rorl
add
add
push
clc
aaa
fidivrl
pop
mov
clc
push
add
mov
pop
pop
in
xor
add
test
xor
add
pop
cmpsl
clc
int3
outsb
mov
pop
imul
clc
ret
clc
clc
mov
clc
out
sub
clc
test
cmp
xchg
imul
xbegin
xchg
dec
mov
hlt
adc
add
add
ja
clc
mov
dec
push
ret
call
out
bnd
clc
or
sub
jnp
dec
add
add
clc
test
stc
jg
jmp
jl
add
sbb
push
cmp
fcmove
roll
jne
cli
mov
sar
add
xlat
lahf
mov
clc
mov
pop
mov
dec
adc
add
and
add
jecxz
cmp
add
sahf
lods
lahf
cli
btc
inc
clc
and
add
mov
je
cwtl
push
clc
stos
inc
add
push
mov
sbb
pop
xlat
push
stc
enter
cmc
testl
pop
cmc
loope
aad
clc
adc
sar
lea
mov
add
add
add
mov
fwait
mov
call
aaa
push
pop
inc
clc
adc
xchg
push
mov
clc
fcoms
sub
clc
shll
out
cli
xor
add
add
add
clc
ljmp
bound
add
clc
out
mov
inc
add
jl
cmp
into
movsb
clc
mov
dec
shlb
out
xor
add
clc
push
add
lock
add
pop
push
add
mov
fs
push
sub
loope
mov
clc
clc
sub
add
inc
clc
cmp
loope
add
add
lahf
shrl
mov
shll
add
imul
clc
inc
clc
mov
clc
in
insb
leave
loop
shr
cli
fmull
clc
pop
stos
dec
inc
add
stc
adc
add
pop
clc
fs
imul
or
push
pop
gs
and
add
or
mov
add
out
dec
ret
mov
cmp
aad
dec
ja
clc
test
clc
lcall
and
add
out
push
lahf
sub
clc
sbb
push
inc
add
gs
je
mov
push
clc
inc
clc
jb,pn
add
cmp
enter
clc
pop
add
add
jno
add
mov
cmp
add
clc
cmp
cmp
clc
adc
mov
clc
jbe
clc
jle
ret
clc
jl
mov
xlat
dec
or
add
xor
inc
clc
and
in
fcmovb
clc
mov
add
sub
je
movswl
imul
adc
add
insl
sub
add
movsb
clc
sub
clc
sbb
inc
add
test
xabort
sbb
popa
add
xchg
icebp
or
pop
jg
mov
cmp
add
push
lahf
out
push
mov
clc
push
scas
mov
add
inc
clc
push
clc
cvtps2pd
lock
add
add
mov
jne
cmp
mov
imul
cld
in
and
add
clc
rorb
stos
mov
scas
xor
mov
clc
cmp
add
add
add
clc
aam
clc
adc
add
jg
xor
clc
adc
add
test
lea
clc
xchg
inc
clc
push
clc
jge
test
aaa
loop
imul
push
push
add
mov
clc
push
add
fcomps
sar
in
outsb
ret
clc
test
js
add
lret
sbb
add
lret
repz
fcmovbe
fwait
push
add
add
add
loopne
movsl
clc
loopne
scas
cmp
pop
out
arpl
add
outsb
or
clc
mov
add
adc
add
test
pop
xchg
cmp
add
loop
inc
add
adc
add
ljmp
out
jle
or
and
mov
inc
add
inc
add
scas
pop
ret
clc
or
fmuls
xbegin
and
add
clc
cmp
mov
clc
jae
add
aaa
ss
cmp
outsb
cmp
mov
jl
mov
mov
fists
adc
add
clc
insl
cmp
xabort
add
int3
addr16
or
mov
mov
push
add
inc
clc
add
add
cwtl
cltd
inc
add
xchg
test
add
cmp
xlat
js
data16
call
add
lods
ret
add
test
aas
in
xchg
add
add
fs
jno
add
pushf
fimull
sbb
jbe
xor
add
dec
out
fimuls
sub
clc
or
leave
adc
add
cltd
jge
clc
hlt
adc
add
mov
dec
lods
ja
clc
dec
pop
pushf
sahf
cmpsb
clc
sarb
insb
cwtl
adc
add
clc
cli
xor
add
jnp
jle
int3
aad
pop
clc
mov
pop
mov
add
jb
add
push
or
add
stc
repz
loop
loopne
jge
jbe
add
push
add
dec
outsb
add
add
in
cmpsl
clc
and
add
sbb
aaa
outsb
push
add
jo
add
clc
sub
or
or
gs
inc
add
out
sbb
add
cmp
sar
sub
add
add
xor
mov
clc
jo
add
leave
int
xchg
leave
xchg
clc
mov
and
add
jne
sar
and
add
add
add
xchg
sbb
add
movsb
clc
scas
scas
xor
add
xor
add
and
add
pop
outsb
sub
push
in
push
add
mov
clc
cmp
push
push
add
loop
dec
ror
push
add
fistps
clc
jne
test
dec
inc
add
in
mov
add
out
sub
clc
sbb
add
daa
clc
push
add
sbb
and
add
test
pop
clc
sub
jl
clc
shrb
clc
sbb
aas
in
add
add
add
add
xor
inc
add
ss
std
mov
mov
enter
add
cmp
inc
clc
mov
clc
pop
cmp
imul
add
lahf
data16
aad
das
frstor
add
add
xchg
movsb
clc
js
clc
negl
das
adc
add
repnz
clc
test
lods
pop
fnsave
clc
push
clc
rorb
jo
add
clc
lahf
cmp
imul
add
insb
mov
jmp
jg
clc
xor
add
add
mov
inc
clc
maxps
add
nop
fidivrs
adc
mov
cmp
push
add
push
inc
add
adc
add
or
add
add
lods
xor
add
sub
add
adc
mov
add
add
sbb
inc
clc
push
outsl
pop
pop
dec
jno
add
mov
push
add
push
clc
arpl
add
lods
inc
clc
movsl
clc
dec
vcvtps2pd
add
sar
mov
adc
add
xchg
insl
sar
cmp
inc
add
xchg
inc
clc
shll
or
mov
repz
cmp
add
lock
clc
mov
mov
add
and
add
movsl
clc
clc
push
in
mov
clc
lret
add
clc
xor
add
mov
packuswb
icebp
pop
jmp
dec
add
add
xlat
cmpsl
clc
test
dec
cmp
and
mov
add
fwait
icebp
je
cld
mov
add
ds
pop
hlt
ja
data16
rcr
hlt
dec
sar
scas
add
mov
xchg
movsl
clc
cmp
add
incb
roll
test
xchg
enter
cmpsl
clc
sub
inc
clc
jb
add
add
xor
fwait
hlt
out
ljmp
add
mov
ret
clc
sub
xor
clc
cli
xor
add
clc
dec
sbb
clc
adc
add
clc
xchg
enter
ret
clc
xchg
ret
add
iret
loope
push
add
loope
in
push
pop
mov
clc
stos
xor
add
add
clc
in
xchg
arpl
add
clc
push
sti
add
pop
clc
xabort
inc
clc
sar
test
xlat
pop
popa
add
jp
add
pushf
xchg
push
add
mov
add
and
add
xchg
jp
sub
add
ss
and
add
jmp
lahf
sbb
imul
dec
sar
fstpt
push
clc
add
add
scas
mov
add
adc
add
nop
repz
add
cltd
outsb
lock
add
add
rclb
add
clc
sub
clc
movsb
clc
out
cli
divl
add
sbb
pop
cs
clc
add
xchg
push
add
movsb
clc
add
add
sbb
xabort
xbegin
add
mov
clc
stos
in
inc
add
dec
popl
adc
add
clc
xchg
mov
out
int
js
fstpt
add
jle
cmp
clc
cmp
out
jp
clc
pushl
es
test
rcrl
icebp
in
cmp
adc
add
clc
inc
add
sbb
and
add
and
xchg
sub
pop
lcall
clc
ja
clc
xor
add
mov
push
lahf
jne
mov
clc
gs
aad
add
dec
inc
clc
lahf
test
clc
dec
mov
mov
leave
xabort
clc
cmp
add
inc
add
jns
add
clc
test
mov
pop
cld
or
add
ret
clc
push
add
add
clc
testb
xchg
jp
cmpsb
clc
jo
add
add
in
mov
not
sar
xor
add
pop
inc
clc
sub
mov
dec
in
xor
add
aam
or
clc
jge
clc
adc
add
movsb
clc
pop
pop
clc
jne
clc
dec
mulb
call
add
pop
jns
clc
jne
clc
enter
insl
fcompl
ret
clc
mov
add
fldcw
int3
js
clc
mov
clc
and
add
sub
xor
add
clc
pop
movsl
clc
aam
fildll
lods
imul
clc
ljmp
movsb
clc
fwait
cld
or
clc
div
popf
xor
add
add
in
lret
xor
add
clc
jmp
pop
xor
add
daa
clc
cmpsl
clc
daa
clc
xchg
adc
push
addr16
scas
pop
shll
add
mov
bound
add
mov
iret
and
add
clc
xor
add
pop
sbb
xor
add
inc
add
outsl
xbegin
inc
add
pop
mov
inc
add
xchg
mov
clc
in
mov
clc
lock
xor
add
add
clc
mov
mov
add
inc
clc
fsubrl
mov
add
loopne
pop
gs
aas
arpl
add
inc
add
jb
add
add
loop
aas
adc
add
xbegin
mov
sub
fs
xor
lods
adc
add
add
cmc
inc
add
dec
cltd
add
pushf
mov
clc
sub
loop
dec
sbb
cmp
fidivrs
pop
adc
add
ret
clc
test
add
mov
add
arpl
add
mov
clc
data16
mov
xor
add
dec
pop
lcall
add
add
clc
mov
dec
and
add
data16
out
mov
add
xchg
aaa
fisttpl
add
xchg
push
add
xchg
test
fnstcw
clc
cmp
ds
add
mov
sar
fwait
sub
xor
fnstenv
add
add
ret
mov
inc
clc
lock
pop
sti
xchg
movsl
clc
in
mov
leave
sbb
cwtl
cwtl
fstpt
mov
add
repnz
dec
lea
clc
xor
pop
cli
cmp
add
add
xor
add
add
sub
push
xchg
sbb
inc
add
data16
aad
mov
bound
add
add
lret
jmp
mov
add
pop
sub
insb
call
jne
clc
fimull
clc
es
sbb
mulb
rcll
add
clc
mov
clc
out
idivb
and
and
xchg
fsubl
cwtl
xabort
xchg
mov
clc
jmp
add
sub
clc
mov
movsb
clc
rclb
add
in
mov
add
enter
mov
aad
add
sbb
xchg
sbb
sub
jp
cmp
sub
fs
ret
clc
jo
add
popa
add
jae
add
cld
mov
add
and
jae
add
add
mov
sar
add
inc
add
and
add
add
pop
dec
cs
ffreep
clc
ret
xbegin
cmpsb
clc
sti
lret
mov
adc
add
jecxz
rcrl
bound
add
add
sbb
xchg
push
xlat
push
stos
push
pop
mov
mov
icebp
inc
clc
int
or
mov
pop
test
dec
sub
das
mov
mov
popa
add
add
repz
add
clc
ljmp
dec
jbe
clc
outsl
nop
outsl
std
and
push
fcmovnu
dec
out
jp
cltd
xchg
xchg
clc
add
add
add
adc
add
add
clc
jmp
add
and
add
jnp
mov
dec
and
add
insb
mov
cmp
int
add
and
add
xchg
jb
add
lods
ret
clc
pop
out
adc
add
clc
clc
clc
js
add
fsubrp
shl
aad
adc
add
clc
mov
pop
fisubrs
pop
jns
clc
sar
xchg
pop
data16
hlt
ja
add
mov
add
dec
sbb
clc
dec
push
pop
xchg
scas
and
or
add
cmp
mov
jmp
into
cmp
cmp
lret
push
test
sub
adc
add
mov
ss
add
mov
xchg
mov
add
add
je
mov
add
clc
xor
add
add
mov
add
clc
enter
mov
js
cld
mov
clc
lock
into
jg
dec
sub
clc
sar
add
movsl
clc
mov
clc
add
ss
jl
add
jmp
jne
clc
push
enter
out
mov
xor
add
or
add
cmc
push
pop
jmp
clc
sub
jno
add
jbe
sbb
sub
xor
add
push
add
addr16
and
add
ficompl
add
inc
clc
pop
cmp
add
mov
add
add
dec
sub
inc
clc
push
add
add
add
daa
clc
xor
in
inc
add
cmp
clc
and
add
cmp
xchg
scas
stc
std
or
clc
xor
add
mov
add
out
cmp
jle
add
data16
das
call
cmp
add
in
loopne
jo
add
ljmp
fnstsw
add
lea
xlat
das
daa
clc
shlb
add
jp
pop
inc
add
hlt
into
dec
out
adc
add
je
pusha
add
lret
sbb
push
rcl
or
add
adc
add
clc
outsl
sahf
sbb
clc
out
sbb
ret
clc
iret
xchg
dec
and
xor
add
call
push
add
dec
jg
sub
add
imul
pushl
pusha
add
mov
xor
add
add
mov
adc
add
repnz
dec
xor
add
std
jnp
clc
repnz
clc
loope
push
clc
repnz
addr16
jne
mov
clc
mov
mov
add
pusha
add
xor
add
add
or
xchg
mov
pop
cmp
add
dec
movsb
clc
dec
mov
inc
clc
aam
pop
cmp
add
mov
push
aas
lea
lahf
loope
dec
dec
clc
ss
stos
shll
in
test
jge
jno
add
clc
inc
add
sti
add
add
fimull
clc
clc
lods
inc
add
push
cmp
shr
imul
xchg
xbegin
jecxz
stos
gs
push
pop
dec
gs
clc
sbb
and
add
add
cmp
add
add
shll
es
loop
cli
out
push
in
add
add
inc
add
sub
add
imul
mov
in
repnz
clc
cmp
add
clc
cmp
ret
or
jbe
add
jno
add
lret
cmp
clc
push
add
cmp
add
ret
loopne
push
into
push
sub
lea
psrld
add
incb
clc
and
mov
xlat
sar
add
mov
push
lahf
mov
cmp
mov
xbegin
sbb
or
clc
test
pop
clc
pop
fistps
lcall
xbegin
add
adc
add
add
push
add
bound
add
dec
mov
mov
add
neg
push
jg
mov
add
fimuls
cmp
add
das
mov
add
icebp
cmp
cli
ja
push
add
add
aam
cmp
xchg
mov
clc
inc
add
jge
inc
clc
in
adc
add
ret
clc
add
add
adc
add
xchg
add
aad
add
imul
add
add
mov
add
mov
add
sti
adc
add
fwait
mov
imul
push
clc
lods
sub
add
or
cltd
call
hlt
out
ja
jmp
mov
mov
sub
add
std
cmc
fnstsw
clc
pop
add
add
imul
add
clc
pop
dec
xchg
push
test
and
add
add
add
mov
add
add
test
imul
dec
ja
clc
popf
mov
in
sub
add
push
add
insb
cmpsb
clc
mov
cmp
push
clc
scas
aas
popa
add
sub
add
mov
cltd
sub
add
in
idivl
fs
mov
add
outsl
aaa
cwtl
testb
out
jmp
mov
add
dec
mov
adc
add
add
sahf
cmc
ficomps
jns
clc
test
lcall
mov
clc
mov
clc
lea
add
int3
sahf
lahf
or
sti
out
push
cmpsb
clc
sbb
in
out
cmc
ret
add
jae
add
mov
das
stos
sahf
cli
dec
cmp
movsl
clc
pminsw
frstor
add
data16
pop
pushl
clc
dec
jae
add
stos
clc
xchg
pop
clc
push
cmp
rol
clc
aad
jp
stos
xabort
js
ja
and
jo
add
cs
in
cs
out
jg
jb
add
xchg
rclb
push
mov
filds
add
add
cltd
adc
add
out
add
add
add
jg
sub
mov
add
nop
fldenv
sti
pop
lret
call
clc
fmull
adc
add
mov
test
sbb
or
push
jns
xchg
add
add
clc
xchg
sbb
aas
mov
xchg
jo
add
add
fcoms
add
clc
movsl
clc
jmp
daa
clc
xor
add
push
clc
mov
inc
clc
nop
ret
clc
pop
out
imul
add
xor
add
xchg
test
lock
or
sbb
sbb
add
sahf
and
add
or
clc
pop
add
add
push
out
testl
add
cmp
sahf
mov
and
add
add
fscale
mov
add
xchg
or
push
sbb
lahf
je
jmp
clc
shrb
into
pop
fistps
add
and
add
clc
ja
add
mov
mov
pop
or
pop
test
fs
int3
xbegin
das
mov
mov
xchg
xchg
cmc
scas
rcll
cmp
add
add
wrmsr
add
dec
inc
add
fwait
dec
sbb
clc
out
push
fidivrl
sub
fwait
jg
or
mov
fisttpl
into
xchg
xchg
addr16
es
dec
mov
clc
add
add
add
das
divb
add
add
add
add
lods
daa
clc
mov
add
mov
clc
stos
dec
jp
push
stos
filds
add
sarl
xchg
dec
sbb
push
pop
addr16
clc
mov
outsl
jmp
and
add
dec
ss
into
das
scas
xor
add
add
push
es
cmp
add
or
and
xor
inc
clc
mov
in
adc
clc
cmp
cmp
add
enter
negl
clc
fs
pop
fsubrl
cltd
pusha
add
mov
clc
aam
rcrl
aas
pop
sub
clc
pop
xor
add
into
ds
mov
ss
fmull
add
add
inc
add
inc
add
movsb
clc
movsb
clc
push
clc
jecxz
int
push
add
add
add
mov
push
dec
pop
mov
add
mov
mov
scas
ljmp
cwtl
cld
add
add
lahf
and
outsl
stos
cltd
push
outsl
jbe
mov
or
push
add
add
inc
clc
aas
out
dec
xor
add
stos
push
mov
ret
clc
movsl
clc
lahf
popf
mov
add
push
add
push
clc
sbb
pop
mov
lahf
or
jbe
into
into
push
clc
in
jae
add
iret
sub
mov
leave
inc
add
clc
stos
in
test
popl
pop
movsb
clc
clc
adc
clc
testb
sub
push
sbb
aam
sti
push
mov
clc
jns
gs
aas
fstpl
clc
add
add
adc
add
add
add
inc
clc
jecxz
cmp
loope
xchg
outsl
or
mov
push
add
cwtl
push
stos
shr
or
sub
sub
clc
sar
scas
ret
clc
ret
clc
cmp
inc
add
mov
mov
xchg
jge
or
add
pop
pop
pop
sub
add
inc
clc
jecxz
and
xor
add
clc
test
sbb
push
clc
push
sub
add
aas
je
ja
ja
xor
add
imul
add
je
lcall
adc
add
aas
mov
mov
clc
jecxz
sub
add
add
adc
call
mov
push
add
or
data16
pusha
add
ss
leave
in
fists
add
and
clc
add
add
dec
test
mov
adc
add
clc
inc
add
and
add
pusha
add
or
add
hlt
xlat
lcall
mov
add
int
ds
into
hlt
leave
fiadds
cmp
clc
mov
clc
mov
xor
add
jnp
stos
or
push
jmp
jne
clc
cmp
lea
cmp
clc
loop,pt
movsb
clc
xor
add
add
add
sbb
dec
xchg
jge
aam
repz
mov
mov
xchg
mov
clc
dec
cmovl
clc
mov
sub
clc
out
stos
out
imul
insl
cmp
clc
mov
push
sahf
sub
aam
es
lock
clc
stos
push
into
aas
mov
aas
shlb
add
add
xchg
call
and
add
mov
fidivrl
fsubrl
add
in
xchg
lcall
sbb
add
clc
int
clc
or
cmp
push
add
inc
clc
jo
add
add
out
fcomps
dec
inc
add
leave
nopl
add
pop
or
add
add
clc
aas
test
xor
add
clc
ret
imul
rolb
insl
jl
push
clc
dec
and
cmc
loopne
enter
clc
mov
xlat
and
jle
popf
cmp
and
and
fisttpl
imul
fwait
jle
stos
jno
add
xor
add
add
sar
jle
add
gs
sbb
jl
add
push
push
and
add
clc
in
sbb
add
pop
test
mov
scas
jae
add
cmp
add
add
add
js
jo
add
clc
inc
add
aad
pop
loope
mov
sahf
je
mov
clc
cmp
jmp
jg
nop
lcall
or
clc
inc
clc
test
add
fs
mov
add
inc
add
cmp
call
clc
pop
mov
xchg
cmp
leave
gs
cld
pop
or
clc
fsubrl
sub
clc
adc
mov
jne
clc
mov
add
aam
xlat
xchg
pop
movsb
clc
dec
mov
xchg
push
add
cmp
inc
clc
pop
cltd
lods
jns
clc
je
add
ss
cmp
clc
in
jmp
fwait
dec
add
add
add
add
clc
icebp
add
add
sti
enter
cmp
jmp
push
xor
add
fcmovbe
loope
jge
clc
pop
cmp
inc
clc
lods
adc
add
xor
clc
and
add
clc
popa
add
push
add
fisubrs
clc
push
sar
cmp
cmp
xor
add
fnsave
mov
das
xchg
push
add
add
adc
add
loop
iret
inc
clc
mov
cmp
xchg
cmp
pop
sbb
add
jnp
sbb
xchg
js
cmp
movsl
clc
sub
in
and
notl
add
inc
clc
dec
and
jne
arpl
add
clc
pop
pop
or
sub
add
xchg
fsts
add
es
test
jl
mov
and
add
add
clc
fiadds
mov
iret
movsb
clc
pop
clc
pop
add
clc
or
inc
clc
xor
testb
mov
jnp
mov
clc
test
lods
push
adc
xchg
xor
add
add
sub
cs
loopne
das
rorl
test
add
add
pusha
add
fistps
pop
xor
add
imull
test
sbb
mov
pop
or
add
jecxz
out
lods
std
test
fs
push
add
dec
movsb
clc
dec
lock
add
pop
std
mov
add
daa
clc
pop
pushf
sar
mov
inc
add
sub
add
loop
add
add
add
adc
add
add
jmp
add
xchg
xor
add
aaa
pop
scas
jnp
data16
ret
testb
das
mov
repz
addr16
dec
mov
jmp
fisubrs
cmp
pop
ret
add
imul
push
pop
xchg
pop
pusha
add
sar
js
mov
clc
inc
add
mov
fs
dec
in
jne
lock
sub
pop
stos
es
or
jmp
push
inc
clc
outsb
movsl
clc
mov
pop
test
pop
cltd
xchg
cs
cmp
add
and
add
scas
inc
add
pushf
fcmove
ficomps
aaa
stc
icebp
dec
imul
add
xchg
xchg
inc
clc
mov
lods
dec
sbb
push
add
and
add
test
fsubrp
cmpsb
clc
dec
and
add
add
ret
loope
pop
jo
add
clc
test
std
cmp
clc
shlb
pushf
fs
push
push
add
mov
and
add
add
sar
clc
xbegin
ret
clc
clc
repnz
cmpsl
clc
adc
add
jb
add
clc
mov
rcrl
clc
lea
sub
clc
dec
inc
clc
sub
jge
mov
clc
sub
clc
adc
add
dec
rsm
add
add
ja
mov
adc
add
lret
jmp
clc
and
add
add
xchg
jae
add
clc
fs
sub
nop
ret
cwtl
or
cli
movsb
clc
jmp
clc
push
cmpsb
clc
das
cmp
repz
lods
adc
mov
ds
cwtl
pop
negb
icebp
repnz
sti
cli
xor
add
pop
dec
lret
cmp
mov
cmp
add
pop
fmull
clc
jmp
clc
fmuls
daa
clc
dec
push
clc
or
mov
loope
cmp
inc
add
jae
add
add
add
and
and
add
fs
gs
loopne
imul
aad
xchg
inc
add
pop
clc
sar
out
xchg
add
in
sahf
xor
add
clc
dec
pop
clc
pop
and
add
inc
add
mov
loopne
leave
and
insl
mov
in
fisubrl
add
add
add
add
sub
sbb
push
push
mov
clc
sub
inc
add
add
add
xlat
scas
rorl
add
add
gs
push
add
fcmovnu
jmp
jb
add
add
rolb
xchg
mov
clc
out
fsub
clc
xchg
pop
js
clc
mov
mov
clc
push
ds
push
mov
aaa
sub
cmp
clc
mov
jbe
sub
lea
xbegin
clc
mov
add
fs
inc
clc
dec
lahf
cmp
clc
lret
jno
add
add
fimuls
add
xlat
mov
clc
sahf
mov
push
add
movsl
clc
cmpsb
clc
por
negl
jmp
lret
add
out
fimull
add
mov
clc
std
lahf
xor
fnstcw
clc
xlat
addr16
sarb
jbe
cmpsl
clc
xlat
rorb
lahf
jp
pop
ret
in
ror
fwait
addr16
movsl
clc
adc
add
or
mov
push
add
xor
add
pop
push
push
add
imul
mov
add
pop
stos
out
push
add
loope
xor
add
scas
int
jne
clc
outsb
cmp
add
test
clc
cld
or
clc
inc
clc
inc
add
outsb
imulb
clc
aas
lret
clc
or
clc
js
ret
clc
push
push
sbb
clc
push
xchg
ds
pop
mov
clc
xor
add
adc
add
ss
pop
adc
mov
add
in
dec
jg
scas
inc
clc
daa
clc
scas
add
add
jg
add
ret
inc
add
sub
push
add
andps
cmp
mov
insl
scas
cmp
or
leave
inc
clc
es
dec
mov
fdivrl
push
clc
xor
add
imul
mov
mov
clc
pop
mov
in
push
add
xchg
mov
clc
mov
clc
dec
jmp
clc
pop
cmpsb
clc
insb
dec
test
push
add
lret
ss
clc
xchg
inc
clc
psubusb
add
xor
sar
out
mov
gs
pop
pop
fsts
jecxz
add
add
clc
es
mov
add
add
xbegin
insl
bound
add
lahf
inc
clc
test
sub
add
add
clc
hlt
rorl
adc
sbb
add
fcoms
add
xchg
ret
shll
add
clc
pushl
mov
je
loopne
inc
clc
push
clc
es
pop
clc
dec
mov
call
add
int
add
stos
cmp
dec
and
add
pop
xabort
lret
fldenv
clc
ss
sbb
arpl
add
clc
aaa
pusha
add
mov
clc
inc
clc
sbb
add
jnp
ret
clc
daa
clc
jno
add
addr16
popf
and
adc
add
clc
clc
inc
add
enter
mov
add
mov
test
fs
or
push
add
add
pushl
add
xchg
inc
add
test
imul
jg
clc
jns
clc
fwait
xchg
ja
add
clc
push
mov
and
push
adc
add
push
jg
or
add
hlt
sbb
xchg
mov
arpl
add
ja
xor
add
jl
mov
adc
add
shlb
add
mov
mov
stos
mov
in
xbegin
sbb
inc
clc
insb
inc
add
jbe
lret
cwtl
lods
aad
clc
mov
push
aas
aam
lret
xchg
cltd
push
outsb
das
repz
clc
cli
mov
add
data16
cvtps2pd
add
xlat
fmuls
xlat
repz
xchg
inc
add
jge
clc
es
repnz
lahf
mov
clc
and
add
add
loop
xchg
cmp
fs
shlb
add
sbb
sahf
sbb
mov
out
mov
jl
ja
or
enter
xchg
mov
add
sbb
fdivs
clc
inc
clc
mov
add
add
test
cwtl
xor
mov
add
into
outsb
iret
mov
jg
clc
test
mov
clc
adc
clc
xabort
clc
repz
jnp
aas
test
popa
add
push
clc
ret
clc
xchg
dec
add
clc
ret
aaa
mov
mov
imul
bound
add
jno
add
pop
loopne
lea
clc
pop
jnp
add
mov
clc
lock
sbb
jmp
add
jne
ret
clc
addr16
enter
jmp
loope
inc
add
mov
xchg
lret
lahf
dec
sahf
xchg
int
lods
cmp
mov
clc
inc
clc
in
jno
add
pop
push
sbb
xor
add
add
cmp
cmc
jne
add
jns
fistpl
aas
or
repnz
add
std
test
daa
clc
cmp
mov
or
clc
lcall
cmpsb
clc
and
add
jae
add
add
clc
push
cmp
lock
outsl
pop
call
das
cwtl
and
add
add
mov
clc
pop
mov
pop
pop
sti
cmp
adc
loop
popf
inc
clc
jb,pn
add
add
addr16
fwait
clc
xchg
ret
js
adc
add
clc
inc
add
xchg
push
xbegin
clc
cli
or
xchg
es
fldl
mull
inc
clc
cmp
add
pop
leave
cltd
addr16
jno
add
cmp
xor
add
rcll
add
mov
clc
mov
mov
clc
je
sbb
or
fwait
xbegin
das
out
dec
fcom
jecxz
cmc
bound
add
clc
adc
clc
cmp
test
adc
clc
sbb
call
xor
add
push
clc
fwait
xchg
sbb
add
fsubl
add
push
add
aam
hlt
sub
adc
add
adc
add
ret
clc
jl
clc
fcmovnu
add
add
cmpsl
clc
jnp
add
and
add
add
add
clc
sti
aaa
out
dec
mov
fmuls
cmp
in
gs
xchg
xor
add
clc
aaa
dec
jb
add
pushf
popa
add
js
clc
mov
pushf
jbe
nop/reserved
add
not
movsb
clc
cltd
pop
and
add
cwtl
lods
mov
add
jne
push
add
sar
inc
clc
and
cmp
stc
sti
sbb
xchg
int
das
jp
add
sahf
mov
lret
or
mov
int3
dec
int3
incb
jecxz
jo
add
clc
comiss
mov
incb
call
add
lods
cld
push
add
push
add
vorps
add
outsb
cli
jbe
and
add
add
lret
adc
add
jbe
mov
add
cmp
clc
mov
clc
xchg
or
jge
add
hlt
and
add
mov
add
lods
mov
xor
add
jno
add
daa
clc
cmpsb
clc
cs
in
inc
clc
push
or
cmp
clc
nop
mov
inc
add
push
adc
add
ds
add
push
add
xor
add
add
or
add
mov
clc
adc
add
jbe
lret
xlat
and
add
imul
cmp
insl
iret
dec
jmp
daa
clc
aas
pop
or
jmp
std
lods
sbb
pushf
or
xor
cmp
add
jne
pop
xor
add
in
or
clc
mov
js
add
add
add
repnz
mov
lods
test
sbb
mov
xor
add
cld
dec
out
mov
jb
add
add
mov
add
xchg
mov
clc
mov
sti
jmp
clc
outsb
sbb
stos
and
add
outsb
test
add
sarb
xor
add
jns
dec
and
int3
dec
sbb
add
xor
add
fidivs
add
movsb
clc
cmp
cmp
sub
fcoms
mov
clc
mov
add
cmp
lea
mov
clc
arpl
add
clc
jne
clc
xchg
mov
sbb
adc
add
add
and
add
add
pushf
lss
or
add
xchg
cli
mov
or
add
add
add
aaa
out
pop
cld
ret
clc
test
idivb
lock
sbb
add
int
clc
jo
add
clc
or
add
stc
xabort
xchg
clc
xor
and
add
add
add
