inc
dec
jmp
mov
notb
add
aam
jo
mov
add
push
mov
sbb
cmp
repz
cmpsb
mov
mov
rolb
mov
aas
sbb
add
mov
js
add
add
xor
out
rolb
sub
int
addb
imul
mov
aaa
add
addb
insb
mov
mov
into
ja
adc
mov
add
fnstenv
sbb
cs
xor
push
dec
push
and
xchg
xchg
mov
add
mov
mov
clc
stos
xchg
xlat
mov
stos
ss
je
sbb
adc
lock
mov
add
mov
lcall
inc
add
mov
ljmp
cmp
pop
push
sti
or
dec
lret
and
mov
add
xchg
xchg
adc
mov
imul
mov
mov
xor
mov
and
scas
add
add
int3
or
add
mov
mov
add
add
addb
lret
mov
pop
icebp
test
clc
push
mov
jge
jge
enter
add
rcll
adc
addb
lret
outsb
cmpsl
and
mov
or
dec
mov
add
adc
mov
rorl
ffreep
pop
jp
push
rolb
mov
xchg
or
int3
lock
inc
push
push
add
push
add
and
fcmovbe
cli
adc
add
add
repz
xor
dec
stos
rolb
lahf
and
mov
fildl
rcrl
sbb
test
add
js
roll
push
add
and
add
jbe
mov
mov
sub
sahf
loopne
mov
loope
addb
pop
and
add
push
jo
mov
add
push
test
out
mov
sub
add
jo
mov
out
xchg
lret
mov
adc
add
fcoml
add
rolb
mov
add
push
add
outsb
sub
enter
add
and
rorl
in
js
insl
fldenv
jl
add
or
add
mov
add
add
mov
pushf
mov
add
fidivl
mov
xor
mov
lea
mov
mov
pusha
add
arpl
or
dec
sub
cmpsb
out
aad
add
leave
sub
decb
addr16
cltd
or
addb
add
mov
mov
mov
fnstenv
mov
mov
add
add
scas
mov
mov
rcrl
mov
add
mov
out
dec
sti
sbbl
andl
iret
xor
addb
addb
push
loope
add
pop
pop
int
pusha
add
xor
inc
add
add
inc
xchg
out
rolb
mov
lret
xchg
jge
jg
scas
loope
pop
xchg
xchg
mov
fstpl
xchg
rolb
mov
adc
lret
jo
mov
loope
icebp
mov
push
and
mov
mov
add
mov
insl
mov
push
mov
fs
add
ljmp
shrl
mov
out
push
dec
nop
add
mov
inc
add
sbb
jnp
sub
or
clc
add
push
add
aam
mov
insl
push
inc
call
cltd
inc
add
xchg
out
lahf
fwait
dec
ficoms
jg
cmpsb
sub
into
pop
push
mull
fs
sbb
inc
int
adc
adc
mov
dec
xchg
pusha
add
add
pop
mov
sub
mov
ret
mov
or
jbe
sub
add
mov
add
mov
jno
std
xor
jmp
mov
in
adc
mov
sbb
loop,pt
mov
shr
adc
into
iret
je
xor
mov
mov
add
add
jb
mov
mov
scas
icebp
sbb
dec
add
inc
in
fsubl
push
inc
addb
test
mov
push
pop
pop
ret
jnp
fbstp
mov
pop
daa
clc
imul
add
inc
add
mov
xor
pop
loope
mov
iret
pop
clc
sub
sete
jnp
pop
cld
add
fsubp
or
outsl
es
push
aas
push
add
nop
add
add
mov
mov
or
jb
mov
lods
mov
scas
and
cwtl
or
insl
ds
xor
mov
lret
pop
jecxz
repnz
inc
add
mov
and
mov
aas
sbb
mov
mov
push
add
cli
int
jecxz
mov
dec
addr16
xor
es
testl
pop
sub
xchg
pop
xchg
pop
xlat
pop
inc
insl
sub
mov
mov
out
nop
add
stos
mov
aad
ljmp
call
aam
addb
mov
fiadds
ss
jbe
dec
or
test
into
addb
in
adc
mov
add
es
cmp
clc
jae
pop
mov
mov
jbe
add
mov
rorl
or
mov
adc
gs
popa
mov
loopne
mov
sbb
mov
adc
mov
push
add
negb
cmpsb
in
pop
std
lea
push
cmpsb
sub
mov
xor
hlt
rolb
mov
icebp
rolb
pop
popa
arpl
or
out
and
mov
jo
mov
push
scas
mov
inc
rorl
pop
and
sub
add
add
push
pop
xor
add
repnz
xor
mov
mov
add
adc
inc
add
popf
lret
es
mov
mov
add
fwait
mov
add
push
xchg
fisttps
mov
test
adc
cmp
push
push
mov
sub
push
push
push
push
push
push
cld
call
sub
es
movzbl
cmp
ss
push
push
call
mov
cmp
je
es
lea
cs
sub
mov
push
es
call
test
jne
jmp
leave
push
es
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
nop
lea
lea
sub
add
mov
sub
sub
push
pop
push
je
jmp
add
add
mov
fdivr
int
sti
and
mov
add
cmp
mov
popa
stos
xchg
cs
sbb
mov
pop
xchg
jg
add
jnp
lret
push
ds
movsb
in
adc
sbb
rolb
mov
pop
clc
lret
fimuls
rcrl
add
mov
in
cmpsl
dec
les
push
add
xor
mov
cmpsb
jecxz
pop
mov
mov
xor
mov
repnz
cli
icebp
adc
or
add
add
mov
jecxz
subl
enter
lods
leave
cmp
push
mov
add
jbe
test
xchg
dec
xlat
pop
dec
packsswb
inc
push
jl
lods
push
add
add
cmpsl
mov
mov
shll
add
rcll
mov
xor
mov
lret
jl
xchg
mov
push
fcomp
or
xchg
fcmovne
roll
mov
push
add
push
xchg
testl
jo
mov
pop
ret
repnz
daa
adc
mov
loop
mov
movsb
bound
mov
add
aaa
pop
dec
push
daa
jo
mov
insb
xlat
cmp
inc
imul
daa
xor
mov
call
jp
outsb
lea
mov
mov
cmp
cmp
shll
add
fiaddl
sub
ret
mov
mov
adc
mov
mov
add
lcall
add
inc
in
popa
pop
xchg
pop
adc
je
mov
add
outsl
test
xchg
fnsave
mov
dec
repnz
add
int
aam
test
repz
cltd
ja
mov
addb
rcl
add
lret
push
inc
jg
rolb
mov
les
das
ret
and
mov
add
mov
mov
pop
dec
jecxz
jo,pn
mov
inc
and
mov
mov
mov
add
jne
push
test
decl
lods
ds
dec
outsl
int
add
mov
add
and
out
mov
fcmovb
add
xchg
add
xchg
sbb
sub
fs
aaa
jbe
mov
shl
add
mov
add
sbb
sub
add
mov
sub
mov
push
loopne
mov
inc
adc
mov
popf
pop
bound
mov
dec
rorl
outsl
jle
rorl
mov
pop
out
int3
inc
or
jb
mov
int3
out
xchg
push
add
mov
ljmp
daa
push
xchg
shll
jecxz
into
pushf
in
pand
mov
sbb
mov
jb
mov
cmp
stos
pusha
add
push
addr16
add
cs
push
dec
rolb
test
sub
lods
dec
scas
sbb
add
mov
jno
ficompl
xor
mov
add
mov
add
cs
pop
xor
mov
add
icebp
enter
sub
mov
dec
push
and
add
add
mov
sahf
inc
jbe
mov
add
bound
mov
fisubrl
jle
outsl
fnstsw
icebp
pop
loopne
mov
mov
dec
test
adcl
add
mov
mov
bound
mov
and
leave
mov
mov
jno
add
add
mov
jo
mov
gs
test
arpl
add
pop
nop
add
mov
dec
mov
sbb
push
sub
jmp
repz
std
xchg
cmp
inc
add
call
or
cmpsl
leave
pop
xor
pop
mov
sub
add
cld
ja
mov
add
mov
mov
lret
stos
pushf
mov
mov
cli
jl
std
pop
mov
addb
popa
xor
frstor
mov
clc
or
inc
and
add
lcall
add
and
dec
rolb
jge
loopne
mov
add
xor
int3
cmpsb
cld
jecxz
dec
pop
jne
xchg
mov
loop
mov
mov
push
xor
mov
scas
dec
lret
flds
bound
mov
mov
loope
pop
pop
sub
imul
mov
in
mov
pop
inc
add
rorl
dec
cmp
dec
mov
push
pushf
dec
pmulhw
inc
fldcw
add
mov
in
pop
or
sbb
mov
sbb
in
inc
xor
imul
inc
addb
loope
mov
or
mov
fsubrl
cwtl
xchg
mov
add
out
jl
out
xor
mov
fwait
cmp
aad
jl
dec
std
insb
pop
das
sbb
mov
mov
out
rolb
pop
outsb
mov
add
pop
mov
outsl
add
mov
es
stc
outsb
xchg
dec
adc
add
adc
mov
mov
add
add
cmp
mov
in
sbb
mov
xor
add
cmc
jl
add
mov
xor
xchg
scas
jle
adc
sub
cmpsl
add
loop
mov
add
add
insl
and
in
sub
jo
mov
imul
mov
inc
es
test
loopne
mov
pop
push
lds
jbe
out
mov
dec
lret
xor
mov
lds
mov
mov
divl
mov
push
ret
iret
and
mov
add
push
push
cli
imul
addb
movsb
lcall
push
add
mov
lret
rolb
mov
loop
mov
bound
mov
cltd
xor
test
jmp
in
or
add
mov
and
mov
add
jo
mov
push
inc
aam
push
ficoms
add
and
mov
sub
or
loop
mov
fwait
mov
add
mov
xchg
mov
add
movsb
xor
add
sahf
mov
mov
xor
mov
mov
inc
fbstp
repz
add
stos
lods
push
in
lcall
sub
add
pushf
adc
daa
adc
add
loopne
mov
clc
mov
test
inc
fsubp
add
imul
lcall
mov
lock
and
fldcw
adc
loope
jo
mov
mov
out
or
sti
jbe
sub
enter
notl
add
pop
lcall
arpl
ljmp
repz
add
test
jb
mov
inc
stc
rsqrtps
mov
dec
popf
xchg
in
mov
xchg
pop
jno
sbb
shll
xor
mov
fwait
pop
lock
add
cs
hlt
xor
xor
add
mov
gs
xchg
cmp
ja
add
dec
mov
pop
or
lods
movsb
and
mov
and
add
and
mov
fsubs
inc
sbb
shrl
movsl
cmp
add
or
add
mov
or
add
mov
add
sbbl
lahf
addb
out
arpl
aaa
push
add
cwtl
inc
add
add
mov
fldenv
inc
add
pop
fsubl
pop
lahf
xorl
jg
pop
aad
roll
add
fldl
and
cmpsl
lea
sbb
dec
pop
push
add
add
cmp
xchg
adc
mov
iret
jo
mov
push
fs
inc
add
mov
enter
test
mov
mov
scas
mov
lock
imul
push
inc
inc
cld
xchg
xor
mov
loopne
mov
jge
mov
fidivl
sub
add
mov
aad
es
dec
mulb
jmp
sub
pop
jl
add
add
mov
sub
lods
out
add
mov
mov
inc
add
push
add
sbb
add
add
push
sub
xchg
adc
jmp
and
imul
mov
inc
int3
gs
inc
and
jnp
out
mov
rcll
mov
stos
scas
dec
imul
lret
loopne
mov
sti
or
rolb
mov
add
sbb
add
bound
mov
cmp
sbb
in
pop
lahf
mulb
push
add
mov
jmp
dec
mov
add
testl
testb
lds
mov
mov
aas
cmp
sub
popf
roll
add
add
ja
pop
cld
data16
mov
test
adc
aad
rcl
add
xlat
in
pusha
add
xchg
vphadduwd
pop
stc
icebp
xchg
inc
add
mov
add
mov
mov
into
cmc
xchg
push
ret
ret
mov
loopne
mov
ret
repnz
mov
mov
push
pop
xor
or
add
push
call
fcmove
ret
pop
xchg
cmpsl
xor
icebp
out
lea
addb
testb
add
inc
jp
cli
arpl
adc
pop
outsl
mov
ret
dec
jbe
ss
push
in
bound
mov
mov
mov
add
mov
sbb
xchg
add
lcall
mov
mov
xor
cmpsb
and
sbb
fstp
xor
add
sarl
push
add
cs
pushf
xchg
dec
lods
mov
push
add
dec
iret
adc
mov
add
mov
xorl
fnclex
add
jl
inc
add
mov
add
imull
fistps
adc
add
mov
add
cs
pop
je
rcl
cmp
jp
in
add
add
pop
and
mov
js
insb
xchg
xchg
loop
mov
mov
inc
stos
xchg
lcall
inc
xor
mov
jno
sub
add
dec
jb
mov
mov
mov
pop
cmpsb
test
daa
mov
xor
mov
je
mov
mov
xor
mov
push
dec
push
mov
inc
push
jg
rolb
sub
cmc
pop
icebp
push
add
inc
xchg
and
mov
xor
jl
call
mov
repz
mov
addb
push
roll
add
dec
fdivs
xor
mov
push
and
mov
loope
jg
mov
enter
mov
sti
pop
adc
mov
fsubl
or
add
add
cmp
leave
lock
add
mul
add
mov
scas
rolb
inc
pop
rolb
mov
mov
and
add
inc
lahf
sub
pusha
add
mov
mov
fwait
mov
add
mov
add
mov
jp
inc
pop
sbb
dec
addr16
sbb
pop
fistl
les
rolb
movb
xor
pushf
inc
add
movsb
jne
dec
test
add
addr16
add
mov
addb
insl
sahf
js
fwait
daa
mov
mov
cltd
xchg
stc
rolb
mov
leave
dec
cmpsb
popa
jmp
stc
fst
push
mov
adc
add
scas
lret
cwtl
cld
push
fstpt
sub
loope
rolb
mov
ret
or
pop
cltd
cmpsb
les
add
sub
add
fdivrs
mov
xlat
jp
add
add
out
fstpt
add
mov
or
jmp
mov
mov
and
push
add
add
cmpsb
add
ret
stc
mov
dec
sub
into
mov
sbb
fwait
inc
es
dec
pop
call
and
mov
push
out
or
mov
imul
push
das
fistpl
out
push
clc
sbb
dec
cmp
xor
mov
jns
inc
ffreep
imul
cmc
daa
sbb
xchg
mov
out
shll
mov
sbb
xlat
fidivrs
add
jecxz
mov
mov
add
xchg
js
lret
dec
pop
dec
sub
sub
inc
pushf
lret
sub
xchg
cmp
lret
mov
hlt
fmuls
add
or
add
xor
mov
cmp
inc
add
ja
scas
jecxz
lahf
fsts
sub
mov
sub
add
add
loope
addb
mov
add
call
and
pop
xchg
cmp
popa
out
adc
pop
ret
cs
sahf
sbb
and
pushw
stos
and
mov
mov
adc
mov
and
add
inc
inc
adc
mov
incl
add
mov
xchg
arpl
add
mov
mov
outsl
mov
jb
mov
or
ficoms
add
stc
and
add
inc
push
jle
arpl
loop
mov
popf
mov
mov
btr
test
jb
mov
pushl
xchg
or
clc
jecxz
inc
add
add
cmp
es
add
mov
sti
imul
pop
fwait
cmp
mov
add
mov
push
mov
and
sti
loope
push
mov
rolb
mov
lcall
sbb
addb
or
out
and
mov
push
sbb
pop
push
inc
jp
push
and
jo
mov
repz
inc
jns
fidivrl
lcall
std
sbb
push
sub
jno
cmp
fwait
sub
mov
pop
ljmp
mov
lret
out
jne
aam
mov
xor
mov
lods
pop
subl
xchg
fwait
shll
sub
lds
add
add
add
movsb
loopne,pt
mov
xchg
add
xlat
lret
aad
add
cmp
popf
mov
inc
add
les
add
fcmovnu
dec
mov
jbe
add
movsb
mov
or
xchg
mov
outsb
mov
add
cmp
sbb
or
data16
mov
stos
popa
rolb
mov
pop
sbb
leave
mov
add
add
dec
fcmove
fildll
xchg
pop
out
in
call
add
in
pusha
add
push
inc
xlat
push
dec
adc
mov
dec
cmpsl
sub
mov
je
outsb
cmpsb
mov
push
add
stos
jne
add
out
sub
add
jg
mov
add
movsb
test
mov
in
jae
int3
mov
mov
jae
ss
dec
fstl
xchg
xlat
addb
jl
popf
in
pop
lcall
lret
mov
loope
add
adc
dec
push
pusha
add
add
mov
mov
inc
xchg
add
and
mov
add
into
lret
test
xor
mov
xchg
aam
lds
cwtl
pushf
adc
fwait
xchg
xchg
mov
add
sub
add
adc
add
mov
stos
dec
mov
rolb
mov
mov
mov
or
push
add
das
insb
mov
es
aas
lret
inc
or
sti
push
rolb
mov
sub
jno
xor
fsubs
std
call
add
jbe
dec
inc
add
or
cmp
inc
loop
mov
ja
dec
cmc
sarl
mov
call
gs
repnz
and
mov
mov
mov
fstl
fldcw
xlat
addb
ja
pop
sub
mov
mov
test
clc
lods
repnz
pushf
mov
mov
insl
les
mov
add
mov
insl
jne
add
cltd
ret
cmp
ja
pop
mov
xor
or
arpl
jecxz
cmp
fnstsw
rolb
mov
cmp
sahf
mov
xchg
je
sahf
fsubl
xlat
sub
add
lret
out
pmullw
das
cmc
mov
push
push
inc
add
lods
int
fiaddl
ret
test
xor
mov
mov
mov
push
inc
dec
cmpsl
call
xor
mov
data16
mov
pop
sub
jo
mov
lds
pushf
xchg
add
test
addb
xor
jmp
xor
add
add
mov
int
mov
pop
jle
dec
icebp
mov
add
mov
mov
add
add
fcomps
in
fstps
movsl
cmp
popa
push
addl
mov
push
fstps
jno
add
aam
jge
pop
hlt
lahf
mov
xor
mov
std
mov
add
add
mov
sub
or
fsubrp
enter
mov
xchg
inc
jnp
add
mov
xor
imul
mov
stc
mov
mov
test
mov
add
sbb
mov
pop
cltd
packssdw
lcall
and
mull
pusha
add
iret
adc
lods
clc
pop
jp
out
jnp
mov
cmpsl
and
mov
lahf
lods
clc
ja
int3
movsl
mov
dec
imul
jne
jecxz
mov
gs
mov
xchg
gs
add
add
test
mov
mov
or
lock
add
js,pn
stos
sub
adc
dec
or
add
rcr
mov
adcl
or
cli
test
mov
or
xor
mov
sub
inc
mov
clc
jno
loop
mov
lds
repz
push
jbe
sub
fwait
pop
shrl
sbb
insb
or
cltd
jecxz
mov
xchg
mov
mov
sub
jno
dec
in
icebp
mov
inc
add
xor
mov
mov
bound
mov
aam
insl
out
aas
jo
mov
lods
scas
mov
jl
in
mov
mov
xchg
add
in
movsl
out
cmp
daa
push
lods
and
add
aam
and
add
aam
jecxz
jae
pop
addb
out
sub
add
sbb
push
xchg
imul
loop
mov
mov
xchg
or
or
rolb
mov
push
adc
stc
pusha
add
scas
pop
inc
sbb
out
mov
push
imul
push
sbb
add
cmpsb
gs
fsub
dec
popl
fmuls
xlat
in
pop
and
mov
add
lahf
dec
idivl
arpl
mov
mov
cmpsb
pop
xchg
add
test
pop
xor
fcomps
add
add
pop
mov
lods
mov
mov
pop
js
mov
mov
fildll
xor
lret
decb
lahf
and
mov
lea
lcall
mov
mov
cmp
clc
clc
add
xchg
imul
cwtl
mov
clc
pop
pop
or
and
subl
jnp
inc
cld
outsb
and
mov
fisubrl
mov
sbb
inc
jnp
cmp
jmp
push
add
sbb
sbb
jecxz
and
xchg
movsl
mov
popa
cmp
add
mov
mov
stos
push
jnp
add
mov
jle
ja
jbe
mov
push
add
mov
push
mov
cmp
mov
mov
inc
pop
imul
gs
add
fimull
push
mov
in
lahf
dec
lock
dec
fcoml
add
mov
int3
into
push
jae
cmp
add
mov
mov
xor
jb
mov
in
repnz
out
aaa
xchg
add
inc
mov
xor
jae
or
xchg
push
pop
lock
xchg
xor
mov
les
mov
mov
pop
dec
int
mov
pusha
add
cltd
mov
jne
ret
lcall
rolb
mov
mov
add
dec
fsubrl
orl
add
shrl
sbb
xor
mov
push
xor
add
jnp
jmp
stos
xchg
add
ss
mov
test
dec
push
mov
jnp
add
pushf
lock
andl
add
xor
mov
or
pushl
add
lods
aad
adc
addb
into
inc
add
jbe
sbb
dec
add
mov
adc
add
cltd
push
ja
push
outsl
fs
mov
mov
add
ret
addb
dec
jmp
les
or
rolb
mov
and
fstpl
iret
dec
div
mov
arpl
mov
push
lods
xchg
and
cmpsb
in
pop
lods
cmpsl
scas
xchg
out
push
add
jo
mov
scas
stos
test
mov
mov
lods
pop
mov
rolb
cmp
aad
cmp
lea
fisttpll
mov
mov
push
dec
and
sbb
add
or
das
xchg
add
jo
mov
xchg
fildl
mov
mov
dec
rolb
adc
add
gs
jle
in
pop
sub
pop
push
push
push
cmc
inc
ret
das
and
mov
mov
scas
insb
mov
push
xchg
add
add
add
sub
mov
add
fdivs
outsb
push
addr16
bound
mov
fsubrp
daa
std
mov
enter
stc
std
into
xor
mov
mov
cli
mov
sub
repz
adc
std
mov
xlat
dec
in
adc
mov
push
in
repz
adc
or
mov
push
push
push
cmp
out
addr16
frstor
test
sbb
xchg
pop
and
xchg
cmpsb
mov
inc
dec
outsb
xorl
mov
add
add
dec
or
ljmp
add
add
mov
fs
rolb
mov
and
inc
cmp
mov
and
mov
add
fnstcw
movsl
loope
test
inc
popa
xlat
dec
sti
or
mov
add
xor
mov
pusha
add
mov
push
mov
fdivrs
insb
and
mov
mov
and
gs
and
mov
dec
and
inc
add
mov
or
add
mov
clc
sbb
mov
mov
inc
add
adc
hlt
jae
sbb
add
or
add
call
je
cmp
mov
movsb
hlt
popf
adc
mov
stos
sbb
cmp
ljmp
add
mov
or
or
jle
add
imul
in
stos
push
add
les
sbb
add
mov
add
into
push
add
mov
addb
or
or
mov
jl
mov
mov
pop
mov
mov
aaa
adc
mov
icebp
test
push
push
push
adc
mov
aas
inc
add
mov
mov
fnclex
add
inc
add
mov
adc
add
mov
add
rcll
fs
icebp
jmp
test
ljmp
add
add
mov
add
pop
dec
mov
add
scas
test
xchg
xchg
xchg
dec
je
add
fwait
std
xchg
push
mov
je
adc
mov
mov
test
xlat
iret
adc
mov
pop
stos
cltd
nop
add
add
inc
push
out
mov
lock
aas
dec
into
cmc
cld
dec
push
dec
push
sahf
mov
add
sbb
stos
fwait
add
mov
ret
lods
and
mov
data16
aad
mov
sbb
xchg
daa
add
add
dec
aam
pop
rolb
xchg
add
add
addb
addb
cld
aam
add
std
test
or
jnp
inc
dec
ds
popa
daa
fwait
popa
scas
jno
xchg
adc
push
lcall
nop
add
repnz
arpl
pushf
in
cwtl
sub
lea
mov
mov
arpl
aad
add
adc
or
add
adc
arpl
ja
or
jecxz
dec
xchg
fsubrl
mov
add
xchg
pop
pop
inc
add
xor
sub
add
pop
push
cmp
inc
outsb
mov
or
adc
inc
imul
rolb
mov
xchg
aaa
out
idivb
add
cli
mov
pop
data16
pop
lsl
sub
add
add
outsl
mov
mov
addl
cmp
add
xchg
je
and
jnp
add
adc
mov
andl
cli
add
add
xor
mov
add
inc
addb
mov
mov
cltd
xchg
rcr
fcmovnu
mov
cltd
enter
mov
mov
and
mov
js
inc
dec
ss
mov
push
test
sahf
loope
add
mov
and
mov
inc
faddl
out
jno
add
mov
ds
movsb
jg
pop
mov
and
or
add
dec
ja
fimuls
xchg
add
popa
fimuls
xorl
jns
test
mov
mov
pop
fadd
add
push
sub
sub
mov
add
mov
add
cs
jnp
loope
scas
jge
jg
xor
pop
or
mov
adc
dec
addr16
add
mov
mov
mov
xchg
ljmp
lcall
add
xor
aas
into
add
mov
jge
adc
js
out
push
movsl
push
add
add
addb
lahf
into
loop
mov
out
test
add
pop
push
push
add
or
lods
push
mov
pop
pop
into
nop
add
dec
fildl
add
stos
lods
out
xchg
aam
ficompl
push
jmp
dec
repnz
negb
mov
add
add
andl
add
push
cmc
xchg
cltd
lea
jb
mov
mov
rorl
mov
sbb
test
int
sbb
leave
and
mov
std
cmpsb
mov
and
enter
xlat
and
inc
cmp
loope
add
mov
iret
mov
add
mov
push
inc
xchg
mov
add
inc
mov
jne
int
jl
sub
mov
scas
lret
enter
inc
addr16
xchg
mov
add
rolb
adc
sbb
out
addb
ret
int
rolb
jle
add
dec
add
addb
and
mov
add
or
add
dec
dec
into
xor
out
or
adc
mov
iret
and
mov
jne
std
mov
and
mov
mov
mov
dec
out
xchg
add
mov
add
hlt
pop
les
add
mov
mov
mov
add
xlat
stos
sbb
add
add
mov
push
test
rorl
adc
mov
fcomps
mov
add
sub
lods
sub
sarl
dec
pushf
mov
adc
mov
push
pushf
mov
lcall
test
es
cltd
icebp
fdivl
mov
cmp
pop
sub
xchg
mov
sbb
add
cld
push
mov
test
mov
cwtl
xor
mov
enter
mov
mov
add
ret
jo
mov
cmpsl
adc
mov
add
xor
push
pusha
add
mov
sub
mov
imul
addb
lcall
mov
mov
add
inc
add
add
sbb
pop
stc
inc
pop
outsb
into
sbb
mov
inc
add
mov
add
aas
push
dec
ss
maxps
stc
and
sbb
mov
add
add
cld
and
xchg
add
add
mov
jg
push
cmp
imul
add
mov
cmpsl
mov
push
add
cmp
mull
and
insl
add
mov
add
mov
rcll
scas
in
add
aas
pop
push
add
push
stos
inc
out
fidivrs
xchg
add
fwait
cmp
push
xor
cli
mov
add
adc
ljmp
dec
faddl
mov
mov
mov
fists
add
xchg
or
sbb
in
add
lock
adc
mov
jbe
jge
jecxz
add
add
and
xchg
push
ss
mov
movsb
cltd
mov
stos
mov
dec
sahf
call
add
add
loop
mov
add
iret
and
mov
mov
mov
pop
lods
dec
or
rorl
adc
mov
orl
mov
add
mov
inc
add
add
xor
mov
add
loop
mov
rolb
xchg
add
divb
push
test
fistl
pop
test
cwtl
inc
dec
pop
xchg
cs
push
add
addr16
cmp
add
js
cmp
bound
mov
cli
lret
fsubr
adc
aas
lods
push
add
inc
add
ja
sbb
subl
adc
mov
mov
lcall
xor
mov
or
pop
add
mov
jb
mov
pushf
mov
jl
fsubr
add
xor
mov
fisubrs
pop
sub
add
call
push
scas
push
sbb
addb
cmp
mov
or
jp
repnz
out
das
mov
push
add
mov
rolb
pop
arpl
mov
mov
xor
jbe
and
mov
mov
and
mov
cmp
int3
stos
mov
fbstp
daa
cli
lret
scas
xchg
pop
stos
jmp
xor
cmp
dec
jle
lea
ret
loop
mov
push
mov
add
add
add
mov
mov
sub
lods
inc
sbb
lock
pop
mov
add
lea
mov
push
movsb
xor
mov
add
inc
add
aas
cmp
mov
xchg
jg
push
jae
xchg
mov
mov
sbb
movsb
xchg
outsl
adc
add
mov
mov
call
jns
adc
mov
mov
hlt
ss
scas
push
add
mov
and
pop
xchg
lods
pushf
out
inc
sbb
testl
mov
bound
mov
sbb
sub
or
out
and
add
loopne
mov
lock
lock
xchg
cmp
fisubl
mov
dec
mov
mov
mov
mov
lock
add
data16
add
imul
dec
inc
push
inc
rolb
test
pop
fsubrl
push
dec
sti
push
add
mov
rolb
mov
out
movsl
push
pop
repz
mov
inc
add
add
mov
pop
shll
and
or
sbb
mov
lods
bound
mov
mov
fnstenv
cmpl
mov
popa
cmp
jge
inc
add
xchg
cmp
push
repz
xchg
aam
fiadds
mov
add
mov
add
sbb
mov
mov
add
ficompl
pusha
add
mov
jbe
xor
int3
insb
inc
imulb
jne
rcr
cli
ret
mov
addl
lcall
jecxz
cmpsb
loopne
mov
iret
sub
xchg
dec
sbb
vmread
lea
fnstsw
sarl
jl
cld
adc
mov
add
rcll
jmp
cmp
popf
bound
mov
pop
enter
clc
and
push
cmp
pop
out
ret
outsl
mov
sbb
add
jecxz
xchg
cmp
in
adc
mov
add
ret
mov
or
out
sbb
mov
lahf
movsb
outsl
jmp
add
adc
clc
adc
in
dec
push
icebp
rolb
sbb
lahf
frstor
sbb
divl
mov
add
mov
push
scas
and
lret
sbb
mov
mov
ljmp
lahf
enter
shll
gs
jle
adc
pop
jo
mov
mov
scas
ds
lock
xchg
pop
add
mov
inc
stc
add
mov
daa
lcall
ret
call
push
lods
repz
inc
sub
sbb
mov
xchg
int
push
pop
fisubrl
fucomp
in
mov
ja
xchg
add
cmp
inc
add
xchg
add
bound
mov
dec
or
test
xchg
shll
bound
mov
mov
out
and
mov
mov
add
add
rolb
mov
xor
push
aas
inc
lds
pop
cmp
stc
filds
add
mov
scas
in
xchg
setnp
movsl
outsl
fucomp
daa
cltd
xor
mov
jns
xchg
shl
xchg
add
add
and
mov
loop
mov
xchg
daa
js
pop
mov
ljmp
testl
push
mov
add
add
mov
cs
adc
mov
fstpl
dec
mov
pop
insb
dec
xchg
add
add
add
xor
mov
les
xchg
add
int3
dec
decb
fs
cmp
jp
add
push
xor
movsb
push
push
xchg
add
add
mov
add
addb
aas
push
mov
adc
mov
xchg
and
add
mov
or
movsb
sub
cwtl
mov
pop
add
mov
sahf
addb
outsb
lock
add
add
mov
mov
pushf
mov
add
pop
mov
fidivl
mov
mov
addb
sbb
add
aad
ja
push
mov
mov
add
rolb
mov
cli
jmp
sub
ds
mov
hlt
push
mov
lcall
fistps
fs
pop
mov
lret
ja
sub
addb
lea
sbb
push
lret
mov
mov
mov
mov
jae
add
int
mov
cmp
ret
pop
data16
mov
mov
push
jle
mov
sbb
cmp
add
sbb
xchg
ja
adc
dec
push
push
adc
jmp
add
xchg
mov
adc
test
aad
adc
add
add
add
ljmp
imul
sub
xchg
add
mov
xchg
loope
mov
mov
leave
or
mov
pop
les
add
pushf
sti
jecxz
add
and
imul
mov
ljmp
out
rolb
mov
add
add
push
add
add
ret
ficompl
mov
lds
inc
lods
push
mov
mov
addr16
or
add
mov
mov
mov
mov
mov
pusha
add
loope
push
and
stos
int
add
dec
imul
add
push
in
adc
mov
add
mov
add
xchg
add
mov
test
jle
sbb
stos
mov
rolb
mov
jg
sub
ds
arpl
add
mov
mov
add
push
add
mov
mov
add
mov
mov
testl
ret
mov
add
cmpsb
mov
data16
aad
dec
xchg
xchg
push
cltd
jmp
loope
push
mov
mov
add
test
popa
in
push
push
add
mov
rolb
cmp
out
mov
jae
inc
out
stos
sub
in
cs
adc
cli
pop
je
lea
fsubrs
mov
mov
loop
mov
insl
dec
stos
mov
faddl
add
sub
neg
mov
xchg
dec
das
xor
fcomi
dec
stos
in
sahf
test
mov
jmp
xchg
out
outsl
lods
lods
jecxz
dec
pop
mov
outsb
cmp
mov
int3
add
or
mov
cs
pusha
add
xor
mov
cmpsb
cld
std
jns
lock
mov
mov
mov
cltd
outsb
push
inc
add
mov
pop
push
data16
mov
xchg
push
mov
mov
std
add
mov
cmp
lods
pop
outsb
rolb
mov
addr16
adc
call
cmp
lret
fsub
popf
push
fidivrs
jb
mov
xor
lret
mov
pop
push
cmpsb
mov
push
cs
mov
add
loop
mov
loope
pop
xchg
repz
fwait
sub
cmp
mov
fldenv
jmp
in
or
loop
mov
aam
loopne
mov
jb
mov
add
add
addb
dec
ljmp
jge
and
mov
data16
js
inc
add
cs
xor
or
test
aas
fisubs
mov
add
sbb
lods
scas
or
add
and
mov
mov
inc
jp
into
push
add
mov
fcomps
xlat
stos
clc
cltd
loopne
mov
gs
je
or
movsl
stc
xchg
xlat
test
data16
pop
mov
ret
xor
mov
daa
xor
leave
imul
inc
add
out
mov
mov
adc
dec
enter
cwtl
mov
cmp
jae
add
mov
outsl
loop
mov
std
dec
cmc
pushf
mov
add
sub
inc
aad
or
mov
pusha
add
add
sbb
lds
inc
mov
addb
mov
add
add
rolb
mov
sub
test
add
icebp
ret
movsb
in
leave
sbb
xchg
jmp
mov
pop
mov
mov
outsb
mov
add
jns
pop
dec
jnp
xchg
ret
add
mov
push
mov
mov
test
repnz
pop
pop
dec
mov
add
adc
mov
xchg
add
jbe
add
mov
pusha
add
addb
movsl
out
lret
cli
call
mov
inc
jo
mov
jecxz
push
pop
mov
jns
fadd
adc
mov
mov
cltd
adc
mov
mov
and
cmp
jae
jns
lcall
add
mov
lock
pop
aaa
and
and
iret
std
mov
mov
xor
mov
mov
mov
mov
mov
cmc
cwtl
fadd
mov
daa
mov
mov
inc
add
mov
test
inc
cmc
gs
add
add
jb
daa
push
add
repz
add
push
fnsave
add
stc
ret
sub
jle
add
mov
imul
xor
pop
mov
jecxz
and
mov
cmp
jne
mov
mov
mov
gs
loop
mov
add
pusha
add
popf
addr16
cli
adc
mov
aad
jecxz
add
ds
popf
pop
pushf
popa
jae
inc
mov
add
add
add
xchg
cmp
je
pop
ret
or
push
add
sbb
fidivrl
iret
xor
sub
mov
jmp
jo
mov
lar
mov
aad
and
add
mov
and
pop
or
test
mov
dec
or
int
push
and
pop
sti
push
int3
aas
sbb
mov
push
arpl
pop
in
sarl
xchg
xchg
adc
lret
cmpsb
in
add
mov
out
clc
lock
xchg
sub
xlat
cmp
aas
div
push
sbb
outsb
or
addr16
dec
jmp
sub
ja
lock
out
cmpsb
adc
add
in
add
lods
sbb
sbb
mov
jne
cmp
test
push
mov
or
out
out
fiaddl
lods
sbbl
mov
sbbl
and
mov
std
xchg
jno
inc
pop
clc
cmpsl
daa
std
adc
gs
psrlq
pop
xchg
mov
mov
bound
mov
loop
mov
push
ret
adc
xor
and
mov
cmp
cmp
insl
mov
add
mov
push
sub
mov
xchg
add
inc
mov
add
shrl
add
push
add
cmp
push
mov
mov
inc
addr16
mov
mov
add
test
icebp
pop
sbb
jo
mov
fisttpll
stos
movsb
inc
sbb
jne
add
rol
add
lods
cmp
add
and
jne
sbb
add
mov
cmp
mov
cli
ja
add
gs
push
add
into
xor
jbe
fstl
inc
test
addb
push
jge
pop
stos
or
fimull
fistl
push
addb
les
add
rolb
push
xchg
mov
gs
inc
or
adc
mov
and
mov
add
imul
dec
mov
mov
ret
jo
mov
jnp
push
sahf
mov
lret
std
jb
mov
adc
mov
es
cmpsb
sub
mov
dec
jl
test
mov
ljmp
mov
add
jbe
sub
or
add
xor
lock
dec
outsb
adc
mov
add
in
dec
enter
mov
add
add
mov
add
add
test
out
sub
push
std
push
pop
fldt
add
add
icebp
notl
add
lock
add
add
mov
cwtl
cli
lret
dec
pop
clc
mov
aas
or
adc
aam
or
xchg
mov
add
mov
jbe
push
add
add
mov
inc
add
mov
sub
add
add
stc
or
push
out
inc
add
fs
fmul
adc
mov
stos
push
add
push
xor
addb
in
sahf
movsb
dec
pop
mov
pushl
add
mov
mov
mov
xor
mov
test
pusha
add
popa
cmpsb
rolb
mov
adc
adc
mov
and
jnp
sub
ss
pop
int3
xor
mov
and
js
mov
mov
adc
mov
cwtl
adc
or
out
fstpl
js
je
add
aad
outsl
test
fcomip
sub
mov
add
add
jnp
adc
mov
add
mov
sub
jp
cmp
or
sub
lea
popa
push
into
jge
mov
mov
cld
clc
ja
addb
add
mov
mov
pop
dec
pusha
add
xor
mov
mov
adc
gs
out
dec
popf
push
xor
mov
xchg
test
pop
out
jbe
gs
std
mov
or
lods
addb
xchg
add
loop
mov
pusha
add
xor
mov
xchg
or
gs
mov
cwtl
push
mov
cmp
inc
cmpsl
fldt
les
nop
add
adc
mov
in
jecxz
scas
out
cmp
mov
cs
pop
mov
rolb
pop
cmp
mov
mov
sub
int
aad
addb
int3
test
rep
aaa
in
pop
xlat
inc
test
add
lods
or
iret
roll
out
push
add
add
popf
dec
sub
add
mov
or
add
les
addr16
xor
mov
and
jecxz
leave
jp
cmc
xor
mov
loopne
mov
add
pop
outsl
pop
nop
add
adc
fisubl
stos
xchg
xchg
add
ja
sub
cmpsb
add
xor
js
cwtl
push
aad
mov
fsubrl
gs
xchg
and
mov
je
roll
mov
add
ffree
cmc
adc
jbe
daa
sub
pushf
in
push
add
xor
mov
mov
fldl
jge
and
mov
xchg
outsb
ret
cs
scas
jecxz
scas
xor
mov
dec
roll
mov
cmp
test
mov
adc
pop
dec
fsubl
cmp
shll
mov
add
add
and
dec
jo
mov
jb
mov
add
fnstsw
add
repz
dec
or
add
leave
rolb
mov
mov
movsb
add
mov
insb
sub
xchg
adc
cmp
add
and
add
fwait
or
inc
sbb
sbb
push
addr16
aam
lods
lahf
or
stos
jp
stos
mov
xor
sbbl
hlt
jmp
lret
mov
mov
addr16
xor
mov
add
add
sbb
repnz
mov
stc
je
mov
in
fdiv
stos
push
jb
mov
inc
dec
jnp
rep
addl
sbb
mov
or
mov
addb
dec
push
dec
es
rolb
mov
dec
cmc
in
jmp
cmp
sbb
bound
mov
fildll
adc
mov
mov
mov
add
sbb
push
mov
pusha
add
cmp
inc
rolb
mov
cmc
push
cli
lock
mov
mov
add
pop
adc
mov
sbb
add
add
mov
add
mov
or
add
sbb
sbb
dec
mov
mov
mov
mov
mov
add
mov
daa
addb
xchg
add
mov
mov
push
xor
mov
xchg
notl
out
sub
ljmp
xlat
fisubs
hlt
orl
add
in
aaa
mov
mov
inc
add
add
addb
into
pop
mov
mov
js
jl
or
aaa
in
or
mov
popa
leave
dec
push
cli
rolb
mov
or
cld
push
fsubr
hlt
xchg
icebp
adc
mov
mov
or
fwait
sub
and
mov
add
push
add
add
lods
popa
and
jmp
mov
dec
xchg
ds
jecxz
mov
xchg
mov
test
add
xlat
jnp
adcl
es
pop
xlat
pop
pop
jnp
push
add
and
xchg
in
test
cmpsb
push
sbb
mov
test
mov
inc
mov
aam
add
imul
push
mov
cld
popf
cmp
adc
mov
outsl
ficompl
adcl
bound
mov
add
add
fiadds
sahf
adc
dec
cmp
xchg
hlt
xor
mov
or
push
stc
mov
add
mov
jg
and
jecxz
jge
or
mov
add
cs
xchg
ret
or
add
jo
mov
std
mov
mov
xchg
pop
mov
bound
mov
lahf
push
adc
mov
sbb
mov
add
push
add
add
mov
add
mov
idiv
loopne
mov
je
add
mov
adc
add
inc
loope
call
mov
pushf
pop
sub
sbb
add
divl
add
xor
mov
dec
jnp
push
mov
clc
loopne
mov
inc
jns
cwtl
add
mov
and
in
jmp
add
into
ffreep
mov
xlat
inc
sub
xchg
push
gs
adc
jo
mov
cmp
add
int
add
add
or
adc
mov
or
inc
lret
sub
pop
xchg
sbb
xor
mov
sti
and
mov
test
jnp
aas
sbb
mov
push
push
lods
xor
mov
add
mov
add
add
add
inc
add
out
ds
mov
mov
add
sub
ja
add
movsl
rolb
mov
aaa
stos
iret
mov
pop
jp
lds
int3
outsl
loop
mov
mov
add
mov
mov
mov
gs
nop
add
inc
add
gs
lea
inc
cmc
jecxz
xor
mov
in
aam
pop
dec
sbb
add
or
cmp
sbb
sub
ljmp
arpl
mov
and
add
mov
and
xor
xor
mov
es
testl
add
imul
sbb
out
pop
cld
pop
mov
lods
inc
mov
aas
inc
mov
add
mov
or
cmpsl
icebp
mov
sub
xchg
and
cmp
sbb
jl
mov
jns
mov
cs
in
add
and
add
push
jns
adc
icebp
mov
add
sub
add
add
mov
roll
jge
add
add
mov
jnp
pop
pop
pop
faddl
add
mov
mov
mov
mov
mov
test
or
icebp
sub
xchg
cld
addb
jg
fdivr
ss
xor
cli
enter
inc
inc
add
and
inc
jae
add
das
or
mov
mov
into
adc
mov
pop
mov
call
push
add
add
sub
jmp
sbb
add
ffreep
scas
jb
mov
scas
js
stc
sbb
push
sub
add
add
addl
push
xchg
dec
sub
pushf
fucomip
jp
and
mov
addb
in
je
xchg
ret
lods
pop
xchg
add
add
cmp
mov
add
pop
out
and
mov
adc
mov
add
add
and
mov
add
dec
stos
jae
push
cmp
sbb
pop
inc
clc
fabs
addb
mov
insb
ja
mov
cmc
les
mov
imul
or
add
adc
mov
add
inc
push
sbb
pop
sbb
xchg
add
lds
stos
leave
mov
mov
cmpsl
sub
icebp
lcall
mov
sbb
test
add
in
into
in
pop
sarl
add
dec
or
mov
repz
test
jecxz
loop
mov
add
pop
iret
xor
mov
add
jae
int3
insl
inc
add
inc
cwtl
mov
or
push
sbb
pop
inc
add
loope
mov
mov
push
pop
cmp
sahf
xchg
shrl
insl
jne
add
dec
xlat
jle
xlat
jp
jle
and
xchg
add
mov
fiaddl
movsb
insb
js
jnp
mov
je
outsl
dec
nop
add
cld
mov
xchg
lret
dec
loope
add
sub
add
roll
adc
cmp
mov
imul
in
mov
mov
push
scas
pop
stc
adc
xchg
loopne
mov
push
scas
scas
xor
sti
inc
ret
pop
and
mov
mov
mov
or
mov
in
pop
or
pop
pop
loopne,pt
mov
push
fs
mov
mov
cld
mov
pop
lods
sbb
lcall
mov
sbb
ret
adc
mov
mov
out
xor
cmp
add
std
outsb
sub
jne
and
in
pop
imul
lods
in
sbb
ret
lods
cmp
in
add
adc
inc
mov
mov
push
pop
push
aaa
rcll
add
xchg
inc
add
mov
ljmp
repnz
add
cmp
stc
aad
inc
add
dec
adc
leave
or
add
out
add
mov
mov
or
shl
aam
add
stos
imul
cli
jo
mov
dec
jle
xchg
add
add
jg
sbb
lods
fiadds
mov
cmp
xchg
sbb
imull
xor
mov
mov
popf
pop
push
rolb
xchg
lock
out
push
fwait
in
jnp
push
pushl
mov
jno
ja
adc
mov
clc
xlat
arpl
rolb
mov
and
mov
add
push
js
pop
mov
mov
fisttpl
cmc
mov
sbb
andl
fwait
mov
add
mov
movsb
or
or
or
cwtl
cltd
pop
and
mov
mov
psubd
fwait
addb
pop
add
mov
add
mov
add
jp
adc
mov
add
lock
add
fnsave
mov
add
mov
mov
shll
addb
or
mov
sub
aam
out
lahf
pop
push
xchg
test
add
jecxz
int3
scas
push
or
xchg
push
in
xor
stos
repz
hlt
cmp
in
push
inc
add
cld
les
pop
pusha
add
pop
push
jg
movsb
mov
add
cmc
lds
mov
jb
mov
or
or
jl
push
push
rolb
mov
sbb
pusha
add
pushf
lcall
rcr
mov
lret
xchg
xor
sbb
icebp
push
or
mov
mov
push
xchg
mov
mov
lods
movsb
fisubs
fstpt
loope
mov
push
stc
scas
sub
and
mov
adc
mov
jl
mov
add
mov
push
add
add
sub
pop
push
sub
bound
mov
imul
xor
mov
stos
or
repz
push
add
in
notb
daa
icebp
xchg
cmp
mov
add
in
mov
pop
jle
push
add
add
les
push
add
add
mov
push
addr16
adc
add
mov
lcall
adc
mov
add
dec
negb
fists
cmp
ja
mull
in
out
xchg
arpl
add
mov
push
aam
add
adc
mov
jo
mov
int
cld
rolb
mov
dec
push
hlt
in
mov
popa
dec
daa
jnp
add
in
add
rolb
cli
test
aad
inc
mov
addb
mov
pop
or
add
add
mov
leave
mov
mov
sub
lods
mov
fimuls
and
push
test
add
xchg
mov
mov
icebp
inc
or
jo
mov
fmul
loope
xchg
jno
add
and
mov
jbe
rolb
mov
pop
rcll
xor
in
cli
movsb
push
rcll
int
hlt
adc
mov
jge
or
inc
pop
popa
sbb
scas
mov
in
int3
rcrl
add
add
adc
jle
sbb
movsl
cmp
clc
imul
add
adc
in
in
jmp
mov
dec
inc
push
scas
add
mov
cld
sbb
das
movsl
jp
icebp
enter
mov
sbb
add
mov
xchg
loopne
mov
cmpsb
mov
mov
add
jmp
out
cmpsb
ret
bound
mov
xor
jno
add
mov
js
xor
mov
mov
sbb
sub
jae
and
mov
pop
mov
push
xchg
addl
adc
sahf
lea
add
dec
les
cwtl
jge
add
or
in
add
mov
insb
mov
mov
pop
xor
mov
inc
jb
mov
loop
mov
and
mov
xchg
add
mov
mov
dec
mov
jnp
add
cmc
mov
clc
cmp
or
jns
add
mov
rolb
fwait
adc
add
mov
pushf
ljmp
inc
jmp
stos
repz
jno
test
incl
sahf
jp
jbe
lods
pop
mov
add
imul
and
insl
mov
mov
or
movsl
les
cmp
rcl
add
inc
mov
mov
add
sbb
insb
cs
insb
sbb
add
lret
sti
xor
mov
xchg
lret
add
mov
mov
jae
mov
mov
jo
mov
mov
jp
inc
pop
out
aam
cmp
cmc
test
mov
cmp
add
out
popa
hlt
addb
clc
sub
add
out
and
mov
icebp
jnp
adc
mov
mov
mov
mov
mov
lods
ljmp
xchg
mov
push
add
add
ja
add
adc
add
and
mov
xor
jno
fnstsw
cmp
mov
les
add
xchg
mov
mov
sub
sbb
push
rolb
adc
mov
adc
aaa
inc
add
mov
mov
add
mov
add
adc
add
jle
in
adc
cmpsb
mov
leave
pop
pop
ja
jns
mov
add
cmc
and
mov
mov
jmp
add
sbb
push
mov
xchg
in
push
cmp
dec
out
add
dec
dec
ja
fucom
add
or
ret
movsb
adc
inc
frstor
jae
adc
mov
add
mov
mov
sbb
rolb
mov
xchg
cmc
pop
dec
inc
pusha
add
pop
pushf
addb
adc
cmp
xor
add
andl
adc
pop
mov
lcall
loopne
mov
data16
and
mov
sub
stc
lds
rcl
dec
paddq
adc
mov
add
and
mov
inc
xchg
add
icebp
and
add
pop
xchg
push
add
insl
jmp
xchg
gs
mov
cmpsb
xor
arpl
scas
js
testl
add
mov
push
popf
adc
jae
sub
js
mov
sarl
lret
rolb
mov
adc
mov
test
cmp
add
dec
and
mov
push
cmc
cmpsl
jp
je
sub
mov
mov
sbb
hlt
and
notl
bound
mov
mov
lret
movsl
leave
ret
pop
test
inc
notl
add
mov
inc
sarl
mov
ret
mov
es
push
xchg
pop
dec
test
pusha
add
ret
push
mov
iret
or
inc
out
sbb
and
push
adc
ss
add
mov
adc
mov
add
push
gs
add
icebp
xchg
add
jmp
pop
mov
sbb
scas
pop
aad
xor
mov
fildl
fidivl
adc
mov
shll
add
ret
sub
lahf
xor
xchg
add
mov
aas
mov
mov
aad
movsl
cmp
les
inc
add
in
rolb
dec
cwtl
int3
jp
call
imull
mov
mov
add
xchg
add
mov
adc
adc
mov
add
push
sbb
jo
mov
xchg
mov
mov
jge
add
mov
test
scas
jnp
into
leave
inc
inc
xchg
nop
add
pop
imul
mov
notl
add
pop
mov
mov
jns
fadd
push
push
call
push
add
rcrl
add
add
aas
mov
push
pusha
add
push
add
xchg
dec
pushf
cmp
mov
cmpl
fcoml
mov
in
jl
push
pop
mov
jecxz
sub
xchg
mov
push
sub
add
cmp
es
addb
lods
cltd
jmp
repz
mov
jns
add
stos
dec
pop
cwtl
mov
xor
mov
sub
cmp
add
fadd
pop
mov
mov
mov
inc
add
mov
insb
mov
mov
xchg
inc
sbb
cmp
mov
and
add
sub
mov
cmpsb
mov
push
push
call
sbb
add
or
push
movsl
fstpl
call
add
push
add
mov
aad
add
mov
daa
data16
out
ficoml
mov
in
push
add
add
push
adc
mov
movsl
mov
jne
loopne
mov
dec
jne
arpl
or
fstl
scas
movsl
mov
sub
add
fmul
mov
test
mov
mov
addr16
jmp
sub
jp
add
pop
imul
mov
pop
adc
mov
mov
and
repz
pop
iret
dec
push
mov
and
mov
mov
pop
rolb
mov
push
push
addr16
mov
xchg
mov
dec
adc
mov
add
repnz
loope
pusha
add
xor
fwait
mov
mov
int
test
ja
mov
gs
jnp
hlt
jg
mov
mov
push
sbb
push
enter
rcll
iret
jge
add
push
adc
test
mov
xlat
cli
jecxz
sbb
add
sub
add
hlt
fcomi
bound
mov
dec
hlt
iret
adc
mov
add
in
into
imul
jb
mov
inc
dec
inc
dec
inc
int3
clc
faddl
sete
xchg
add
mov
mov
loope
mov
xor
add
jl
lds
outsb
sbb
ss
sbb
testb
fwait
insb
sub
testb
mov
cmp
rolb
mov
sbb
das
jo
mov
inc
inc
push
add
jge
pop
outsb
int
int
add
test
or
adc
mov
fstpt
mov
add
xor
cmp
cld
mov
jb
mov
aad
adc
mov
pop
xor
cli
sub
addb
shll
mov
and
mov
mov
push
xchg
or
xor
scas
xchg
mov
mov
mov
test
pop
cmpl
pop
cmp
imul
mov
test
out
pop
rolb
lret
aas
xorl
mov
add
add
mov
cmp
lret
cmp
cmp
mov
test
inc
ljmp
add
fmull
movsl
jo
mov
lods
pop
jbe
in
inc
lock
cmp
or
push
loopne
mov
test
mov
mov
or
mov
stos
fldl
mov
les
inc
cmc
dec
jle
or
sub
and
mov
sbb
pusha
add
int
xchg
adc
ss
push
sahf
jmp
inc
push
dec
or
addb
ss
sub
mov
addb
lret
or
mov
repz
int
imul
add
add
mov
test
adcl
add
in
mov
cwtl
jg
sbb
loop
mov
and
xchg
clc
mov
and
mov
jge
int3
add
mov
rolb
mov
mov
xchg
add
out
mov
dec
inc
add
inc
lahf
lods
mov
out
push
add
fdivr
xor
dec
mov
mov
add
movsl
jnp
mov
mov
jno
cmpsl
or
dec
enter
mov
stos
inc
push
add
cld
cmp
add
inc
in
pop
addb
xchg
push
xor
mov
cmp
lds
into
daa
mov
add
mov
jnp
inc
push
mov
mov
add
add
dec
inc
jg
ret
mov
sti
mov
negb
pop
mov
inc
add
mov
add
dec
push
addb
mov
push
add
add
mov
adc
xlat
lcall
add
mov
adc
ret
cmp
xor
mov
inc
and
movsl
push
pop
mov
add
mov
mov
aam
add
mov
cs
mov
pop
icebp
fildl
mov
add
das
pop
test
cwtl
xor
or
mov
out
mov
mov
pop
jl
ret
jo
mov
scas
in
add
sbb
mov
mov
mov
pop
sbb
mov
addl
pop
add
sub
das
adc
mov
mov
cmp
addb
and
mov
mov
add
and
mov
lcall
push
daa
jecxz
movsb
jb
mov
pop
pop
ret
inc
xor
mov
cld
movsb
outsl
movsb
mov
test
push
mov
jbe
aam
mov
popa
enter
inc
xchg
sahf
push
push
sahf
mov
and
mov
out
jl
mov
adc
mov
jmp
and
mov
mov
in
add
mov
mov
jle
mov
mov
fwait
cmpsb
or
mov
sbb
call
mov
and
mov
add
mov
add
add
nop
add
cmpsb
pop
test
and
repnz
dec
push
sti
test
jecxz
fidivs
mov
leave
lret
pop
adc
mov
jle
mov
and
fnstenv
mov
call
les
cmc
les
dec
and
je,pt
les
out
cmp
outsl
in
mov
cwtl
stos
jecxz
mov
fst
push
xor
mov
jb
mov
and
mov
add
mov
mov
in
jae
insl
push
scas
jno
scas
out
lds
adc
mov
adc
ljmp
dec
lds
add
jge
flds
jl
mov
loope
sbb
aas
ljmp
add
aad
inc
add
adc
add
and
xchg
rolb
rolb
mov
cmp
mov
mov
iret
rolb
mov
rcll
rolb
mov
dec
sub
mov
add
push
imul
jbe
into
andl
mov
jle
add
cmp
lds
insl
mov
movsl
mov
mov
insl
ret
scas
adc
mov
pusha
add
add
mov
nop
add
sbb
add
adc
or
inc
pop
in
in
test
mov
xchg
adc
mov
mov
test
mov
fwait
repz
push
shrl
mov
add
scas
icebp
lret
mov
mov
add
ficompl
adc
push
add
sbb
mov
xor
sbb
sbb
mov
xor
mov
cmp
push
add
push
mov
dec
jge
mov
test
outsl
sub
cli
scas
xchg
push
add
mov
rolb
mov
insb
xchg
loop
mov
hlt
fildll
push
add
sti
push
mov
out
ja
in
popa
cmpsl
jae
wrmsr
add
mov
int3
cmp
enter
arpl
rep
adc
mov
in
or
sbb
add
ret
out
adc
mov
lock
and
mov
data16
test
iret
mov
add
inc
mov
mov
mov
repnz
xlat
sbb
push
sub
cmp
je
mov
mov
mov
or
xor
test
roll
in
gs
cli
mov
int3
out
movsl
dec
lcall
xchg
shll
xchg
mov
push
in
outsl
push
add
dec
push
fisubs
add
add
mov
lock
loope
aas
je
inc
add
add
mov
add
outsl
cli
mov
xchg
iret
xchg
outsb
in
pop
pop
pop
insl
adc
add
test
add
mov
fisttps
scas
dec
xchg
xchg
sub
sti
push
aas
ret
gs
mov
mov
mov
add
xor
repz
sti
movsb
cwtl
jp
add
xchg
mov
dec
ljmp
add
jbe
add
data16
xchg
mov
and
mov
in
sbb
aad
insl
es
arpl
xchg
rolb
cmp
frstor
mov
lea
ja
arpl
mov
and
add
loop
mov
aas
mov
jle
jns
sbb
add
mov
inc
pop
mov
pop
mov
dec
lahf
dec
aas
fwait
sti
lahf
adc
xlat
xor
ja
outsb
js
xchg
stos
lods
sub
cs
xchg
stc
adc
xor
out
lds
stos
mov
sbb
int3
mov
mov
pop
mov
add
xor
mov
push
int3
sbb
mov
out
jb,pn
mov
sub
lds
in
jge
inc
push
iret
inc
pusha
add
or
repz
or
mov
dec
pop
sub
das
or
mov
pop
mov
add
add
shrl
mov
xor
push
add
mov
fistpl
cli
mov
test
inc
sahf
or
cltd
pushf
andl
mov
repnz
into
out
add
test
inc
push
pop
xchg
sar
and
add
add
or
mov
dec
out
adc
mov
push
fadd
and
push
add
je
fidivs
movl
addr16
xchg
mov
or
mov
nop
add
pop
test
adc
jo
mov
mov
xchg
dec
inc
add
add
test
push
xchg
mov
push
sbb
jnp
xchg
hlt
lea
mov
in
out
push
add
pop
xlat
and
mov
add
sub
mov
mov
mov
cwtl
dec
sub
dec
xor
mov
lret
mov
enter
dec
loope
or
xchg
and
mov
mov
inc
xor
sbb
aam
imul
call
sahf
jns
mov
stc
mov
cmpsb
mov
test
lcall
jp
lret
pop
iret
or
add
lods
test
add
mov
add
fcmovu
or
jne
mov
imul
lret
mov
xchg
cmp
test
out
movd
inc
sub
jnp
movsb
jecxz
mov
outsl
add
xor
cwtl
xlat
pop
lcall
mov
dec
addb
sub
add
mov
add
pop
dec
pop
outsl
popf
pop
loop
mov
rorl
add
sarl
rolb
mov
sub
loop
mov
xor
pop
fs
pop
aad
push
imul
add
out
mov
add
mov
xor
mov
jg
lods
popw
pushf
pusha
add
call
mov
gs
push
jle
adc
push
add
jo
mov
mov
outsl
loopne
mov
mov
mov
add
dec
repz
ljmp
addl
out
addr16
mov
imul
aas
or
sbb
mov
mov
pop
push
in
gs
add
add
insl
mov
pop
outsb
jae
mov
nop
add
jae
rolb
mov
inc
mov
pop
js
test
div
mov
add
add
mov
mov
adc
or
pop
inc
jl
cmpsb
jge
add
iret
fwait
cli
fmulp
xor
lcall
sub
xor
mov
lret
int3
cltd
mov
jae
dec
rol
add
in
lret
test
addb
outsl
nop
add
mov
stos
dec
or
cmp
mov
mov
and
icebp
sub
cs
sbb
mov
je
add
mov
pop
mov
push
ljmp
ds
pop
les
mov
inc
pop
ret
insl
pop
addb
sub
sub
mov
leave
mov
add
jmp
pop
mov
and
add
dec
sub
add
mov
sub
nop
add
add
mov
jns
xchg
jne
jo
mov
sti
pop
xchg
addr16
mov
je
jnp
mov
mov
pop
jnp
add
aaa
cmp
xchg
int
add
faddl
pop
out
popf
and
pop
in
xchg
mov
inc
cld
jne
fdivrl
add
mov
dec
xchg
int3
pop
mov
jp
push
dec
jnp
je
pop
ret
cmp
xchg
lret
and
mov
mov
sbb
gs
mov
popa
fistpll
mov
add
stos
inc
jmp
push
rolb
mov
ret
ret
mov
fadds
lods
push
rolb
mov
dec
mov
mov
mov
push
add
sub
adc
mov
add
add
ret
push
inc
insb
or
cmpsl
fucomi
push
loopne
mov
lods
add
adc
mov
dec
lock
xor
pusha
add
sub
sub
xchg
inc
jle
pop
popa
sarl
dec
mov
mov
enter
fcompl
add
stc
mov
add
rolb
mov
add
adcl
mov
mov
mov
pop
push
add
pop
outsb
xchg
int3
iret
push
add
aad
in
mov
repnz
test
stos
xlat
mov
loopne
mov
add
cwtl
call
loopne
mov
movsb
mov
push
add
xor
mov
dec
xor
sbb
and
mov
sbb
cmp
and
push
frstor
add
insb
xchg
rolb
mov
fisttps
cmp
dec
or
dec
cmp
push
rcll
ret
mov
fsubrs
jne
jp
sub
addb
mov
icebp
jle
and
rcrl
add
rolb
sbb
mov
adc
adc
push
and
add
adc
add
mov
imul
cmp
sbb
call
adc
mov
inc
ljmp
mov
add
mov
push
sbb
cltd
jp
dec
fisttpll
adc
mov
xor
mov
movl
mov
mov
add
pop
sub
mov
add
mov
mov
lds
mov
out
xor
mov
mov
add
xchg
cmp
repnz
mov
mov
add
xchg
add
mov
test
pop
and
cmp
sbb
jge
lahf
mov
add
mov
mov
add
pop
add
mov
add
je
push
xchg
mov
add
mov
and
xchg
imul
sbb
add
iret
lods
stos
pop
daa
push
mov
int
sahf
push
sti
cmpsl
in
scas
int
jmp
filds
rep
aad
rolb
mov
addb
pop
sub
xchg
into
mov
mov
test
mov
cmp
mov
inc
dec
lods
fdivrs
jno
leave
dec
aad
add
mov
jmp
add
mov
pop
mov
mov
cwtl
arpl
fdivl
and
mov
ljmp
push
dec
cmp
ljmp
add
mov
lds
mov
pushf
inc
add
mov
mov
insl
in
enter
cmp
mov
add
add
push
push
out
pop
aam
and
xchg
add
mov
sbb
test
add
pop
pop
inc
nop
add
addb
in
sub
add
mov
aas
fbstp
xor
sbb
clc
xlat
lea
fisubl
add
sub
dec
inc
add
add
add
mul
adc
bound
mov
jge
push
adc
jo
mov
push
and
mov
test
jge
mov
add
repz
push
ja
iret
in
and
insb
dec
scas
pop
loopne
mov
sub
rolb
aad
sahf
repz
add
push
add
mov
jg
pop
inc
push
cmp
mov
add
bound
mov
leave
jmp
neg
xor
mov
push
inc
sub
adc
mov
jg
mov
fcoms
mov
add
jo
mov
add
push
add
mov
loop
mov
dec
jp
add
mov
lock
test
push
mov
add
add
mov
lods
popf
jmp
fwait
sahf
xchg
add
mov
test
aas
xor
mov
dec
push
aas
sti
jnp
test
sbb
loope
xchg
add
jg
sub
lods
lcall
ds
add
dec
pop
mov
ljmp
add
add
add
jnp
sub
fcomps
daa
rolb
mov
loope
xor
mov
cmp
and
mov
adc
mov
jbe
fldl
les
lock
mov
lods
push
nop
add
or
xchg
das
add
hlt
and
ficompl
jne
mov
xchg
push
outsb
xchg
jge
or
push
jnp
addb
ret
inc
add
mov
mov
inc
sbb
push
xchg
mov
and
xchg
aam
popf
imul
outsb
jp
add
in
lock
and
mov
push
add
out
aam
mov
mov
lcall
mov
pop
adc
aam
add
mov
mov
aaa
add
mov
dec
movsb
ja
lahf
mov
loopne
mov
add
add
push
mov
nop
leave
jmp
ror
repnz
mov
sub
clc
repnz
nop
cld
jae
dec
add
and
add
test
add
push
mov
nop
leave
jmp
add
mov
sub
into
enter
cmp
ret
jle
xchg
in
add
jae
repnz
nop
cld
jae
leave
lods
dec
lea
into
test
push
mov
nop
leave
jmp
add
add
add
test
sub
add
repnz
nop
cld
jae
add
pop
add
clc
repnz
nop
cld
jae
js
add
add
mov
push
mov
xchg
ret
pop
add
lea
add
add
repnz
nop
cld
jae
add
add
add
clc
add
in
nop
leave
jmp
mov
int3
add
clc
repnz
nop
cld
jae
roll
xchg
xchg
js
aam
dec
mov
clc
repnz
nop
cld
jae
fildl
mov
add
pop
clc
repnz
nop
cld
jae
add
add
add
icebp
clc
repnz
nop
cld
jae
popf
add
xor
cli
add
test
add
push
mov
nop
leave
jmp
and
call
clc
repnz
nop
cld
jae
leave
xchg
js
add
das
add
clc
repnz
nop
cld
jae
mov
add
movsl
cli
inc
add
adc
div
test
subl
out
clc
clc
repnz
nop
cld
jae
fwait
mov
add
rep
push
mov
xchg
ret
add
add
add
add
repnz
nop
cld
jae
add
mov
jge
ret
repnz
nop
cld
jae
add
add
mov
push
mov
xchg
ret
add
add
add
nop
cld
jae
mov
add
arpl
mov
push
mov
nop
leave
jmp
add
add
in
nop
leave
jmp
add
add
fmull
nop
cld
jae
add
jle
inc
cwtl
pop
or
jg
push
mov
nop
leave
jmp
jns
int3
add
add
lahf
push
push
mov
xchg
ret
xchg
faddp
scas
cli
add
dec
push
mov
nop
leave
jmp
js
cmp
imul
add
mov
mov
add
push
mov
nop
leave
jmp
add
lods
xchg
mov
push
clc
repnz
nop
cld
jae
pop
add
movsl
addb
mulb
test
push
mov
nop
leave
jmp
dec
aas
add
adc
mov
xor
clc
repnz
nop
cld
jae
add
add
xchg
add
xchg
add
add
clc
repnz
nop
cld
jae
lods
add
xor
nop
nop
cld
jae
jle
add
add
xor
mov
ret
push
mov
nop
leave
jmp
pop
add
add
dec
add
mov
xchg
ret
cmp
add
add
pop
xchg
cmp
in
nop
leave
jmp
mov
fldt
push
mov
xchg
ret
cmp
into
scas
add
add
add
test
mov
push
clc
repnz
nop
cld
jae
jle
add
std
xor
clc
repnz
nop
cld
jae
mulb
mov
sbb
in
nop
leave
jmp
leave
xor
add
xchg
cmp
xor
add
clc
repnz
nop
cld
jae
xchg
mov
mov
pop
clc
repnz
nop
cld
jae
pop
jge
add
add
add
push
mov
rol
insb
cltd
add
js
cmpsb
dec
cmp
jmp
mov
clc
repnz
nop
cld
jae
in
pop
add
imul
clc
repnz
nop
cld
jae
add
sbb
lea
adc
mov
nop
leave
jmp
add
pop
sbb
imul
inc
add
add
fildl
cs
push
mov
xchg
ret
pop
icebp
mov
add
fisttpll
nop
nop
cld
jae
into
add
xor
lea
clc
repnz
nop
cld
jae
mov
cmp
add
clc
repnz
nop
cld
jae
add
into
cmp
push
mov
nop
leave
jmp
xchg
jle
add
repnz
nop
cld
jae
dec
add
mov
pop
mov
clc
repnz
nop
cld
jae
mov
cwtl
rolb
sbb
mov
xchg
ret
xor
inc
add
pop
sub
test
sub
add
repnz
nop
cld
jae
jns
add
add
clc
repnz
nop
cld
jae
add
sub
add
add
aas
add
add
xor
adc
add
sub
nop
nop
cld
jae
add
int3
and
push
mov
nop
leave
jmp
add
xor
cwtl
mov
and
push
mov
xchg
ret
popf
cli
add
mov
pushl
clc
repnz
nop
cld
jae
add
pop
add
or
mov
xchg
ret
xchg
aas
cwtl
add
add
xor
mov
nop
leave
jmp
imul
add
add
add
repnz
nop
cld
jae
add
mov
clc
repnz
nop
cld
jae
add
fidivrs
nop
nop
cld
jae
mov
add
add
add
and
mov
lea
push
mov
xchg
ret
add
mov
add
cwtl
push
push
mov
nop
leave
jmp
add
mov
add
inc
inc
add
repnz
nop
cld
jae
xor
add
clc
repnz
nop
cld
jae
add
cmp
add
lcall
clc
repnz
nop
cld
jae
fildl
int3
loope
mov
clc
repnz
nop
cld
jae
add
add
push
ret
pop
dec
clc
repnz
nop
cld
jae
add
add
xchg
adc
push
mov
nop
leave
jmp
in
xor
add
add
add
nop
cld
jae
leave
popf
cli
lret
add
mov
nop
leave
jmp
pop
add
fucom
idivb
rcll
inc
sbb
inc
add
jle
mov
lret
lea
clc
repnz
nop
cld
jae
adc
add
pop
divb
add
clc
repnz
nop
cld
jae
add
inc
add
mov
flds
xchg
ret
jge
rcll
add
mov
repnz
nop
cld
jae
mov
fimuls
repnz
nop
cld
jae
add
add
add
clc
repnz
nop
cld
jae
jns
add
in
add
mov
clc
repnz
nop
cld
jae
fimuls
cmp
repnz
nop
cld
jae
fidivrs
mov
clc
repnz
nop
cld
jae
mov
testb
xor
push
mov
nop
leave
jmp
add
add
add
fiadds
add
clc
repnz
nop
cld
jae
mov
dec
addb
mov
xchg
ret
add
add
bound
mov
dec
movzwl
clc
repnz
nop
cld
jae
scas
mov
mov
xlat
add
je
add
add
push
push
mov
xchg
ret
add
add
ficomps
popa
add
mov
nop
leave
jmp
addb
icebp
dec
add
inc
xor
mov
stc
push
clc
repnz
nop
cld
jae
mov
add
clc
repnz
nop
cld
jae
sbb
add
mov
clc
repnz
nop
cld
jae
add
xor
icebp
mov
mov
nop
leave
jmp
add
rolb
scas
repnz
pop
push
mov
xchg
ret
rolb
fstpl
cli
scas
add
clc
add
in
nop
leave
jmp
fidivs
leave
mov
dec
add
movsl
mov
add
pop
add
add
add
les
jp
clc
repnz
nop
cld
jae
add
cmp
testb
xbegin
out
add
add
in
add
xor
sbb
clc
push
mov
xchg
ret
add
mov
cmp
mov
xchg
ret
add
and
mov
add
add
push
mov
nop
leave
jmp
fimuls
jle
push
mov
nop
leave
jmp
int3
repnz
imul
adc
mov
test
push
clc
repnz
nop
cld
jae
add
jns
add
int3
xor
jle
add
in
nop
leave
jmp
in
and
add
push
push
mov
xchg
ret
mov
add
adcb
add
das
push
push
mov
xchg
ret
fiadds
mov
fdivp
movsb
clc
repnz
nop
cld
jae
cmp
rolb
xchg
add
jnp
mov
data16
mov
dec
add
test
mov
or
repnz
nop
cld
jae
add
add
call
push
mov
nop
leave
jmp
add
add
outsl
add
clc
repnz
nop
cld
jae
lea
add
or
das
mov
clc
repnz
nop
cld
jae
fiadds
lahf
xor
clc
repnz
nop
cld
jae
add
push
mov
nop
leave
jmp
roll
cwtl
add
push
clc
repnz
nop
cld
jae
dec
testb
cmpl
jae
fwait
add
mov
nop
leave
jmp
add
add
add
lea
in
add
add
add
add
sub
pushl
clc
repnz
nop
cld
jae
lret
add
pop
jae
add
mov
xchg
ret
add
jge
inc
mov
lret
push
mov
xchg
ret
add
mov
add
sub
jmp
and
add
jge
mov
inc
add
add
add
add
mov
mov
xchg
ret
leave
fldl
add
add
clc
repnz
nop
cld
jae
movl
add
in
nop
leave
jmp
add
leave
adc
pop
dec
mov
push
mov
nop
leave
jmp
in
adc
add
repnz
nop
cld
jae
add
add
xor
mov
cmp
jne
clc
repnz
nop
cld
jae
into
mov
shll
clc
repnz
nop
cld
jae
add
add
add
mov
leave
push
mov
xchg
ret
imul
imul
int3
lahf
mov
push
mov
xchg
ret
add
cwtl
aas
frstpm(287
inc
js
clc
repnz
nop
cld
jae
mov
fildl
inc
cmp
push
mov
xchg
ret
add
leave
add
add
jle
cmp
push
mov
nop
leave
jmp
add
in
sti
mov
push
mov
xchg
ret
add
fldl
add
mov
das
sub
push
mov
nop
leave
jmp
add
mov
mov
sar
nop
nop
cld
jae
scas
add
cwtl
add
jbe
movzwl
push
mov
nop
leave
jmp
popf
imul
cmp
call
cld
jae
cmp
add
adc
xor
add
imul
mull
xor
dec
add
mov
push
mov
nop
leave
jmp
add
add
lea
lock
add
add
repnz
nop
cld
jae
inc
roll
push
mov
xchg
ret
xor
add
dec
in
and
mov
mov
clc
repnz
nop
cld
jae
pop
jge
add
push
std
lods
push
mov
xchg
ret
add
mov
fucom
enter
push
mov
xchg
ret
mov
add
add
add
mov
mov
clc
repnz
nop
cld
jae
cmp
sbb
repnz
nop
cld
jae
add
dec
xor
clc
repnz
nop
cld
jae
aas
add
cltd
and
clc
repnz
nop
cld
jae
dec
xor
mov
clc
repnz
nop
cld
jae
add
mov
add
and
push
clc
repnz
nop
cld
jae
add
lea
add
add
repnz
nop
cld
jae
add
fstpt
and
push
fs
repnz
nop
cld
jae
add
add
push
push
mov
xchg
ret
xchg
add
add
add
js
inc
movsl
pushf
call
clc
repnz
nop
cld
jae
add
popf
add
xor
clc
repnz
nop
cld
jae
inc
lods
mov
mov
add
add
push
mov
nop
leave
jmp
add
add
xchg
add
add
mov
clc
repnz
nop
cld
jae
fmulp
add
jge
pusha
add
mov
add
aas
add
mov
in
in
cmp
add
pop
push
mov
xchg
ret
add
add
imul
ficoml
mov
xchg
ret
dec
mov
cli
inc
add
clc
repnz
nop
cld
jae
mov
add
xor
call
sbb
cmp
ret
add
add
add
jl
push
mov
nop
leave
jmp
add
dec
add
repnz
nop
cld
jae
add
pop
add
push
mov
nop
leave
jmp
add
mov
flds
nop
nop
cld
jae
add
add
sar
repnz
nop
cld
jae
add
add
pop
mov
clc
push
clc
repnz
nop
cld
jae
lea
aas
xor
mov
jne
clc
repnz
nop
cld
jae
pop
add
cmpsl
mov
add
clc
repnz
nop
cld
jae
add
mov
hlt
int
dec
or
repnz
nop
cld
jae
adc
add
add
inc
and
nop
nop
cld
jae
roll
xchg
add
icebp
int3
xadd
or
cld
jae
dec
fwait
pop
add
testb
nop
cld
jae
add
lods
add
mov
clc
repnz
nop
cld
jae
add
add
and
repnz
nop
cld
jae
into
repnz
xor
cld
add
clc
repnz
nop
cld
jae
cwtl
add
pop
add
in
add
add
clc
repnz
nop
cld
jae
mov
clc
repnz
nop
cld
jae
add
jns
add
add
incl
xchg
add
add
into
imul
mov
rclb
in
nop
leave
jmp
add
fwait
add
push
mov
xchg
ret
adc
cmp
andl
nop
cld
jae
xchg
in
div
jb
mov
add
clc
repnz
nop
cld
jae
fmulp
add
cmp
mov
add
add
push
mov
xchg
ret
add
testb
add
and
push
mov
xchg
ret
add
cmpb
push
mov
xchg
ret
add
fiadds
xor
test
sbb
nop
nop
cld
jae
rolb
add
inc
mulb
add
clc
repnz
nop
cld
jae
add
repnz
jmp
add
add
repnz
nop
cld
jae
add
pop
add
clc
repnz
nop
cld
jae
add
add
add
hlt
gs
cmp
push
mov
nop
leave
jmp
add
popf
xchg
cmc
mov
nop
cld
jae
add
add
add
xor
mov
push
mov
xchg
ret
xor
add
push
test
subl
clc
repnz
nop
cld
jae
add
add
add
add
pop
roll
xchg
ret
add
add
add
mov
add
clc
repnz
nop
cld
jae
add
rolb
mov
mov
xchg
ret
add
add
add
pop
pop
sahf
push
clc
repnz
nop
cld
jae
fwait
xor
or
nop
leave
jmp
fcmovnb
add
xor
mov
add
clc
repnz
nop
cld
jae
add
jns
lret
clc
repnz
nop
cld
jae
mov
mov
mov
mov
xchg
ret
fidivs
add
jge
js
int3
nop
push
mov
xchg
ret
shl
xor
jmp
nop
nop
cld
jae
xor
dec
mov
clc
repnz
nop
cld
jae
xor
out
pop
clc
repnz
nop
cld
jae
sbb
lods
aas
popf
cli
leave
fwait
mov
call
clc
repnz
nop
cld
jae
add
add
sar
repnz
nop
cld
jae
inc
in
add
add
dec
mov
clc
repnz
nop
cld
jae
add
xor
push
imul
nop
nop
cld
jae
lods
leave
lods
dec
cmp
test
mov
add
in
nop
leave
jmp
add
add
sahf
push
push
mov
xchg
ret
aas
add
jns
add
add
clc
push
push
mov
nop
leave
jmp
fidivrs
xor
int3
add
adc
loop
mov
xchg
ret
pop
movl
add
inc
clc
repnz
nop
cld
jae
add
add
add
cwtl
pop
int
sub
add
call
cmp
ret
adcb
aas
rol
ds
clc
repnz
nop
cld
jae
add
cmpb
jmp
mov
and
leave
pop
add
push
push
and
mov
inc
add
in
add
repnz
push
mov
xchg
ret
fwait
xchg
add
add
ffree
enter
push
mov
nop
leave
jmp
mov
xchg
scas
add
or
cld
jae
mov
mov
add
inc
adc
clc
repnz
nop
cld
jae
add
xor
dec
shr
clc
repnz
nop
cld
jae
add
into
add
fs
add
out
mov
clc
repnz
nop
cld
jae
and
mov
nop
nop
cld
jae
dec
lea
xchg
divb
mov
add
clc
repnz
nop
cld
jae
add
testl
push
mov
nop
leave
jmp
icebp
and
ljmp
jae
cwtl
add
cwtl
add
jge
pop
pop
clc
repnz
nop
cld
jae
lods
xor
add
int
clc
repnz
nop
cld
jae
addb
cli
xchg
addb
or
rclb
aam
add
pop
repnz
add
ficoms
cld
jae
add
add
add
repnz
nop
cld
jae
add
xchg
add
add
push
mov
xchg
ret
add
add
scas
je
clc
repnz
nop
cld
jae
js
add
push
or
flds
xchg
ret
rol
roll
imul
orl
iret
arpl
add
mov
add
stos
add
fs
mov
clc
repnz
nop
cld
jae
ss
in
sub
movsl
clc
repnz
nop
cld
jae
popf
scas
in
pop
in
loope
outsl
mov
clc
repnz
nop
cld
jae
add
add
add
add
clc
repnz
nop
cld
jae
add
into
add
push
mov
nop
leave
jmp
add
add
add
add
sub
test
or
add
in
nop
leave
jmp
add
clc
repnz
nop
cld
jae
in
add
add
dec
mov
push
mov
xchg
ret
mov
cmp
js
stos
clc
repnz
nop
cld
jae
lret
add
shlb
nop
cld
jae
in
mov
push
adc
mov
add
clc
repnz
nop
cld
jae
scas
adc
inc
dec
add
fisubs
mov
popa
add
repnz
nop
cld
jae
add
int3
scas
mov
jcxz
mov
jmp
incl
add
js
add
add
sarb
leave
jmp
xor
add
ficomps
add
les
clc
repnz
nop
cld
jae
add
add
add
nop
cld
jae
adc
inc
mov
mov
push
push
mov
xchg
ret
add
add
mov
add
dec
inc
scas
mov
jmp
incl
add
add
scas
cmp
imul
mov
int3
mov
clc
repnz
nop
cld
jae
neg
or
clc
repnz
nop
cld
jae
jge
xor
mov
jge
push
mov
nop
leave
jmp
add
repnz
fildl
xchg
ds
push
mov
nop
leave
jmp
dec
inc
notb
add
idivb
call
clc
repnz
nop
cld
jae
fldl
add
nop
leave
jmp
xchg
movl
xchg
inc
jl
clc
repnz
nop
cld
jae
add
adc
mov
nop
nop
cld
jae
mov
add
add
xor
jne
clc
repnz
nop
cld
jae
pop
add
mov
push
mov
nop
leave
jmp
add
mov
add
clc
repnz
nop
cld
jae
aas
add
pop
push
mov
add
test
add
add
sbb
fildl
mov
call
in
nop
leave
jmp
add
sarl
nop
nop
cld
jae
in
js
mov
clc
repnz
nop
cld
jae
add
and
mov
add
call
clc
repnz
nop
cld
jae
add
add
pop
add
clc
repnz
nop
cld
jae
add
int3
js
mov
sub
add
clc
repnz
nop
cld
jae
fildl
testb
add
push
mov
nop
leave
jmp
mov
out
xchg
clc
repnz
nop
cld
jae
mov
add
push
mov
xchg
ret
jns
add
lret
mov
mov
xchg
ret
add
testb
lret
push
clc
repnz
nop
cld
jae
mov
cwtl
fstpt
mov
mov
nop
cld
jae
mov
add
andl
nop
leave
jmp
add
xor
mov
nop
leave
jmp
add
inc
mov
js
pop
dec
jmp
add
mov
add
leave
popf
sub
clc
repnz
nop
cld
jae
add
jbe
clc
repnz
nop
cld
jae
and
je
fs
lea
clc
repnz
nop
cld
jae
add
add
mov
clc
repnz
nop
cld
jae
fildl
int3
imul
add
jne
clc
repnz
nop
cld
jae
inc
xor
sub
test
clc
repnz
nop
cld
jae
add
add
mov
xchg
ret
xor
scas
dec
add
xchg
mov
nop
nop
cld
jae
leave
jge
aas
add
repnz
nop
cld
jae
leave
add
fiadds
std
ret
clc
repnz
nop
cld
jae
dec
jns
add
xchg
cmp
jb
push
mov
nop
leave
jmp
and
xor
mov
push
mov
xchg
ret
add
mov
ja
push
mov
nop
leave
jmp
cli
addb
inc
or
nop
nop
cld
jae
xor
add
add
clc
repnz
nop
cld
jae
add
add
add
xor
mov
inc
push
mov
nop
leave
jmp
fiadds
aas
lods
add
repnz
nop
cld
jae
add
add
xchg
add
cmc
cmp
clc
repnz
nop
cld
jae
add
dec
cmp
repnz
nop
cld
jae
mov
adc
addr16
xchg
clc
repnz
nop
cld
jae
fiadds
cmp
add
jno
std
pop
clc
repnz
nop
cld
jae
jle
add
add
mov
push
mov
xchg
ret
mov
js
mov
adc
jmp
add
leave
fldl
js
add
je
clc
repnz
nop
cld
jae
xor
adc
xlat
jb
inc
add
scas
rolb
popa
add
aaa
out
popl
repnz
nop
nop
cld
jae
xor
cmp
movsb
loop
mov
clc
repnz
nop
cld
jae
mov
add
fdivrs
clc
repnz
nop
cld
jae
add
test
push
mov
nop
leave
jmp
xchg
jge
inc
sub
repnz
nop
cld
jae
xchg
add
inc
add
add
mov
movsb
adc
add
repnz
nop
cld
jae
add
add
xor
inc
mov
xchg
clc
repnz
nop
cld
jae
add
jge
add
add
nop
nop
cld
jae
leave
add
add
cmp
into
push
push
mov
xchg
ret
xor
into
add
lret
add
push
mov
or
sub
push
add
add
xor
cmc
jo
mov
add
push
mov
nop
leave
jmp
xor
mov
add
or
mov
xchg
ret
roll
add
add
in
nop
leave
jmp
jge
pop
add
into
add
dec
mov
mov
add
push
mov
xchg
ret
cmp
add
mov
pop
clc
repnz
nop
cld
jae
rcr
add
add
mov
nop
leave
jmp
add
jns
add
mov
xchg
loopne
mov
test
push
mov
nop
leave
jmp
mov
addb
shrl
push
mov
xchg
ret
add
add
add
add
mov
nop
leave
jmp
add
adc
xor
xor
clc
repnz
nop
cld
jae
dec
mov
sbb
push
mov
xchg
ret
jge
mov
xor
xchg
ds
push
mov
xchg
ret
js
xchg
add
inc
xchg
add
xor
clc
repnz
nop
cld
jae
add
repnz
add
add
clc
repnz
nop
cld
jae
and
fidivs
add
repnz
nop
cld
jae
add
add
fldl
add
stos
push
clc
repnz
nop
cld
jae
add
jns
add
xor
push
xor
push
mov
xchg
ret
lret
mov
iret
add
clc
repnz
nop
cld
jae
add
add
add
lock
or
inc
add
xchg
repnz
dec
add
scas
add
clc
repnz
nop
cld
jae
mov
neg
mov
clc
repnz
nop
cld
jae
mov
fmulp
popa
clc
repnz
nop
cld
jae
add
jns
int3
imul
or
test
call
in
nop
leave
jmp
adc
ss
add
push
mov
nop
leave
jmp
add
add
mov
imul
in
add
mov
add
mov
add
pop
push
push
mov
nop
leave
jmp
mov
popf
jns
mov
clc
repnz
nop
cld
jae
mov
mov
or
inc
add
add
xchg
add
out
add
xor
add
clc
repnz
nop
cld
jae
add
insl
not
clc
repnz
nop
cld
jae
mov
mov
mov
clc
repnz
nop
cld
jae
and
pop
leave
xorl
push
mov
nop
leave
jmp
inc
add
sub
add
repnz
nop
cld
jae
add
add
or
in
nop
leave
jmp
add
in
ss
repnz
clc
repnz
nop
cld
jae
shll
call
clc
repnz
nop
cld
jae
add
xor
arpl
push
push
mov
xchg
ret
jns
js
shl
add
pop
call
push
mov
nop
leave
jmp
lods
int3
add
add
add
fimuls
push
sbb
and
add
lods
add
into
add
repz
mov
push
mov
nop
leave
jmp
and
add
add
clc
repnz
nop
cld
jae
add
add
add
mov
clc
repnz
nop
cld
jae
add
add
test
repnz
nop
cld
jae
add
repnz
nop
cld
jae
xchg
cmp
inc
mov
add
adc
add
repnz
nop
cld
jae
add
add
call
clc
repnz
nop
cld
jae
lea
xor
mov
nop
leave
jmp
int3
add
add
add
push
push
mov
xchg
ret
add
add
jge
mov
clc
repnz
nop
cld
jae
add
add
xor
nop
nop
cld
jae
add
add
mov
add
repnz
pushl
aas
movl
jg
popa
add
mov
xchg
ret
imul
add
add
jae
add
inc
sbb
and
inc
add
xchg
add
clc
repnz
nop
cld
jae
add
mov
into
add
add
inc
add
clc
repnz
nop
cld
jae
add
leave
fidivs
ficoms
xor
add
clc
repnz
nop
cld
jae
mov
jmp
jmp
add
int3
add
add
xor
add
add
mov
nop
leave
jmp
add
fwait
add
in
add
loopne
push
mov
nop
leave
jmp
mov
add
test
clc
repnz
nop
cld
jae
add
add
mov
mov
push
mov
nop
leave
jmp
add
add
in
repnz
adc
mul
jge
push
mov
nop
leave
jmp
add
mov
add
shll
add
nop
nop
cld
jae
add
imul
add
add
addr16
testl
sti
add
sldt
mov
inc
lahf
add
clc
repnz
nop
cld
jae
xor
mov
add
mov
inc
cmp
in
nop
leave
jmp
mov
add
roll
push
mov
add
mov
jmp
and
mov
xor
push
mov
xchg
ret
into
cwtl
xchg
add
add
add
push
push
clc
repnz
nop
cld
jae
add
sbb
leave
and
mov
clc
repnz
nop
cld
jae
add
add
in
cmp
jbe
clc
repnz
nop
cld
jae
fildl
mov
leave
lods
xchg
add
nop
nop
cld
jae
pop
add
mov
add
clc
repnz
nop
cld
jae
add
fwait
scas
mov
push
mov
nop
leave
jmp
add
xchg
call
jle
add
fldl
pop
lods
dec
shrb
nop
nop
cld
jae
add
add
xchg
add
arpl
add
or
clc
repnz
nop
cld
jae
xor
push
insb
inc
jb
clc
repnz
nop
cld
jae
adc
movb
repnz
nop
cld
jae
add
add
scas
sub
mov
inc
add
jle
adc
repnz
nop
cld
jae
cwtl
add
add
or
add
repnz
nop
cld
jae
mov
mov
cli
inc
add
scas
xchg
xor
js
aas
push
mov
push
mov
xchg
ret
js
int3
add
add
sub
repnz
nop
cld
jae
add
sbb
jmp
jp
push
mov
nop
leave
jmp
sbb
cwtl
add
or
jge
push
mov
nop
leave
jmp
js
jge
mov
repnz
nop
cld
jae
add
adc
add
les
clc
repnz
nop
cld
jae
imul
add
adc
cmp
repnz
nop
cld
jae
mov
addb
mov
clc
repnz
nop
cld
jae
repnz
xor
add
xchg
lret
add
clc
repnz
nop
cld
jae
adc
mov
mov
mov
repz
incl
dec
mov
add
xchg
add
roll
push
mov
add
add
add
mov
mov
add
mov
add
push
add
clc
repnz
nop
cld
jae
fmulp
pop
pop
add
rorl
push
mov
xchg
ret
add
add
fiadds
add
push
push
mov
xchg
ret
lods
imul
add
xchg
mov
push
mov
xchg
ret
add
add
mov
add
in
nop
leave
jmp
inc
sbb
xchg
fldl
xchg
add
mov
push
mov
nop
leave
jmp
jns
add
add
add
add
clc
repnz
nop
cld
jae
add
inc
pop
cmp
push
mov
xchg
ret
add
add
mov
add
push
push
mov
xchg
ret
add
mov
lea
rolb
mov
repnz
nop
cld
jae
mov
add
fwait
mov
pop
push
mov
xchg
ret
add
add
pop
add
mov
das
popl
clc
repnz
nop
cld
jae
pop
add
add
add
add
clc
repnz
nop
cld
jae
add
js
lret
push
xchg
mov
mov
push
mov
xchg
ret
add
add
xchg
popa
add
nop
nop
cld
jae
add
add
mov
push
and
push
push
mov
xchg
ret
jle
add
add
cli
add
popa
dec
add
clc
repnz
nop
cld
jae
adc
add
mov
clc
repnz
nop
cld
jae
lods
lret
jno
mov
push
mov
nop
leave
jmp
scas
pop
fildl
fnstsw
lods
fwait
jp
clc
repnz
nop
cld
jae
add
rolb
frstpm(287
mov
mov
nop
leave
jmp
repnz
fwait
fwait
lea
add
clc
repnz
nop
cld
jae
add
movl
mov
mov
ss
ret
loopne
cmp
pop
add
add
add
push
mov
xchg
ret
in
xchg
fiadds
add
cwtl
and
roll
adc
repnz
nop
cld
jae
add
jp
add
clc
repnz
nop
cld
jae
mov
scas
pusha
add
nop
nop
cld
jae
jge
fdivp
leave
cmp
repnz
nop
cld
jae
mov
add
xor
or
dec
faddl
xchg
ret
scas
fiadds
add
add
xlat
or
mov
xchg
ret
add
leave
add
xchg
clc
repnz
nop
cld
jae
xor
rol
xor
in
nop
leave
jmp
add
add
roll
imul
adc
repnz
nop
cld
jae
add
add
repnz
test
add
clc
repnz
nop
cld
jae
mov
adc
test
mull
repnz
nop
cld
jae
in
add
add
cmp
mov
nop
leave
jmp
add
icebp
add
add
leave
fcomi
addb
cmpsb
cltd
mov
clc
repnz
nop
cld
jae
xor
add
test
nop
nop
cld
jae
add
add
movzwl
clc
repnz
nop
cld
jae
add
mov
sub
add
add
int
lea
add
push
adc
nop
cld
jae
jge
mov
lods
add
sar
repnz
nop
cld
jae
cmp
adc
jge
imul
in
nop
leave
jmp
mov
add
add
jl
sbb
mov
nop
leave
jmp
add
cwtl
add
out
push
clc
repnz
nop
cld
jae
add
add
jns
pop
adc
repnz
nop
cld
jae
imulb
add
scas
out
add
push
mov
nop
leave
jmp
xchg
pop
add
add
xchg
sti
mov
push
mov
nop
leave
jmp
mov
add
incl
xor
lret
add
add
fwait
adc
push
mov
xchg
ret
add
jns
add
shr
push
mov
xchg
ret
dec
dec
add
fldl
scas
mov
clc
repnz
nop
cld
jae
add
cmp
add
rep
clc
repnz
nop
cld
jae
divb
cli
cmp
clc
repnz
nop
cld
jae
xor
add
in
dec
aaa
add
test
and
cmp
testb
fsts
repnz
nop
cld
jae
pop
mov
fidivrs
popf
xchg
rcr
push
mov
nop
leave
jmp
xor
cmp
inc
add
scas
add
clc
repnz
nop
cld
jae
in
add
add
inc
and
mov
push
mov
xchg
ret
add
popf
mov
add
cmp
push
mov
nop
leave
jmp
popf
add
sbb
dec
sub
ss
add
mov
add
xor
mov
sbb
inc
add
cmp
jge
ss
add
leave
jmp
add
add
inc
pop
add
push
mov
xchg
ret
add
ds
push
mov
nop
leave
jmp
sbb
dec
js
leave
add
add
movzwl
clc
repnz
nop
cld
jae
rolb
imul
sbb
cld
jae
mov
cmp
ds
push
mov
nop
leave
jmp
xor
mov
add
mov
nop
nop
cld
jae
inc
rolb
inc
add
in
movzwl
clc
repnz
nop
cld
jae
icebp
dec
add
pop
or
repnz
nop
cld
jae
lods
add
mov
clc
repnz
nop
cld
jae
add
add
lods
add
push
clc
repnz
nop
cld
jae
add
xor
mov
mov
clc
repnz
nop
cld
jae
mov
xchg
mov
add
clc
repnz
nop
cld
jae
add
or
nop
nop
cld
jae
lods
fwait
add
add
loop
mov
add
in
nop
leave
jmp
add
and
add
jno
mov
push
loopne
mov
xchg
ret
mov
cmp
in
nop
leave
jmp
add
in
in
add
loopne
mov
mov
test
nop
nop
cld
jae
add
sub
mov
xchg
ret
add
add
jmp
add
add
fiadds
leave
add
add
aas
lods
jo
mov
push
mov
add
add
jge
inc
pop
stos
movsb
dec
add
add
repnz
nop
cld
jae
add
cwtl
pop
xor
mov
clc
repnz
nop
cld
jae
add
add
nop
nop
cld
jae
js
inc
mov
fiadds
add
mov
clc
repnz
nop
cld
jae
add
add
pop
jns
pushf
mov
clc
repnz
nop
cld
jae
mov
add
cmp
add
mov
clc
repnz
nop
cld
jae
add
mov
mov
clc
repnz
nop
cld
jae
mov
cwtl
mov
add
in
add
add
xor
dec
add
stc
mov
push
mov
xchg
ret
add
cwtl
frstor
mov
xchg
ret
mov
roll
add
fiadds
dec
push
clc
repnz
nop
cld
jae
imul
add
mov
pop
dec
and
push
mov
nop
leave
jmp
inc
add
add
mov
adcl
add
shl
cld
pop
inc
in
and
mov
add
mov
xchg
ret
add
add
mov
js
xchg
clc
repnz
nop
cld
jae
jge
add
push
mov
nop
leave
jmp
adc
cmp
jg
mov
nop
nop
cld
jae
js
add
add
push
push
mov
xchg
ret
add
add
sbb
js
add
arpl
clc
repnz
nop
cld
jae
add
and
mov
mov
nop
leave
jmp
in
xor
add
or
repnz
nop
cld
jae
add
xor
xor
in
adc
mov
xchg
cmp
nop
cld
jae
add
jge
and
xor
push
clc
repnz
nop
cld
jae
mov
xchg
add
sar
and
mov
mov
cs
clc
repnz
nop
cld
jae
pop
mov
cmp
add
jae
add
add
add
int
pop
jae
mov
nop
leave
jmp
roll
add
sub
mov
nop
leave
jmp
add
addb
lea
fs
insb
push
mov
nop
leave
jmp
inc
add
push
mov
nop
leave
jmp
xchg
pop
fldl
in
cwtl
dec
jle
dec
add
mov
xchg
ret
add
fiadds
add
jle
mov
nop
cld
jae
mov
xchg
mov
mov
nop
leave
jmp
jge
xorb
add
add
and
jmp
incl
mov
add
add
add
or
repnz
nop
cld
jae
add
sbb
mov
clc
repnz
nop
cld
jae
add
add
in
mov
push
mov
xchg
ret
add
add
scas
fildl
sarb
rclb
and
add
cwtl
xor
add
mov
clc
repnz
nop
cld
jae
cmp
add
push
mov
nop
leave
jmp
add
pop
add
add
add
add
repnz
nop
cld
jae
xor
inc
or
nop
cld
jae
lea
add
add
mov
push
mov
nop
leave
jmp
add
add
mov
xlat
push
add
repnz
nop
cld
jae
scas
add
xchg
add
nop
nop
cld
jae
add
add
pop
lods
add
rolb
mov
xor
clc
repnz
nop
cld
jae
add
test
fimull
popf
flds
xchg
ret
jle
adc
add
mov
xchg
in
inc
add
add
add
rcrb
add
mov
nop
leave
jmp
pop
add
movl
mov
mov
clc
repnz
nop
cld
jae
add
cwtl
xchg
inc
adc
mov
push
mov
nop
leave
jmp
add
add
xchg
add
sbb
jne
clc
repnz
nop
cld
jae
add
pop
add
sar
clc
repnz
nop
cld
jae
add
xor
mov
adc
in
nop
leave
jmp
xchg
add
dec
jmp
clc
repnz
nop
cld
jae
mov
dec
add
repnz
imul
call
in
nop
leave
jmp
add
add
push
mov
xchg
ret
jns
add
add
adc
mov
nop
leave
jmp
dec
cli
add
js
add
rolb
mov
std
add
clc
repnz
nop
cld
jae
add
adcb
fimuls
movzwl
clc
repnz
nop
cld
jae
add
mov
mov
clc
repnz
nop
cld
jae
aas
add
fisttpl
push
mov
nop
leave
jmp
and
icebp
add
mov
popa
add
mov
xchg
ret
ss
add
inc
pop
scas
mov
clc
repnz
nop
cld
jae
and
add
nop
nop
cld
jae
add
lods
add
add
mov
mov
clc
repnz
nop
cld
jae
roll
mov
mov
clc
repnz
nop
cld
jae
add
add
adc
push
clc
repnz
nop
cld
jae
popf
scas
add
xchg
jmp
in
mov
repnz
mov
lods
add
fisubrs
mov
xchg
ret
add
add
mov
clc
repnz
nop
cld
jae
repnz
mov
add
repnz
nop
cld
jae
lods
xor
adc
sbb
pushl
clc
repnz
nop
cld
jae
popf
add
xor
xor
clc
repnz
nop
cld
jae
add
add
add
jbe
repnz
nop
cld
jae
cmp
xchg
push
cld
lret
inc
add
aas
rclb
cmpw
push
mov
nop
leave
jmp
add
mov
bound
mov
clc
repnz
nop
cld
jae
and
mov
add
add
add
in
nop
leave
jmp
fstpt
xchg
rolb
xor
xchg
add
jb
clc
repnz
nop
cld
jae
add
xor
push
in
add
add
add
adc
push
mov
xchg
ret
add
mov
push
repnz
nop
cld
jae
xchg
mov
xor
mov
movsb
push
mov
nop
leave
jmp
popf
add
fs
add
push
push
mov
xchg
ret
into
leave
inc
add
add
jl
xor
repnz
nop
cld
jae
jns
faddp
iret
xor
clc
repnz
nop
cld
jae
cmpb
fwait
add
call
in
nop
leave
jmp
in
and
mov
lods
push
mov
xchg
ret
adc
icebp
add
enter
nop
cld
jae
add
fiadds
add
pop
clc
repnz
nop
cld
jae
add
add
dec
sub
clc
repnz
nop
cld
jae
fiadds
and
in
sbb
add
fiadds
add
jns
stos
pop
lea
imul
jo
mov
add
sbb
inc
mov
mov
cmpsl
aam
add
mov
sti
sbb
cld
nop
add
mov
leave
testb
add
inc
mov
mov
pop
push
aas
fiadds
ret
pop
stos
xchg
cmp
jns
aam
adc
mov
insb
sbb
rolb
mov
loope
fnsave
jge
daa
sub
xor
mov
insl
sarl
addb
mov
addb
push
add
pushf
in
nop
add
mov
xchg
and
add
test
jmp
fisttpll
cld
jae
sti
mov
mov
loope
scas
add
mov
inc
add
add
inc
sub
pop
lahf
mov
mov
add
pop
push
add
mov
jecxz
das
bound
mov
add
imul
mov
sbb
jnp
jb
mov
dec
stos
lods
xchg
dec
fbld
ret
xchg
xchg
jg
jl
xor
testl
jb
mov
add
mov
jno
je
xor
jmp
movsb
sbb
icebp
xchg
adc
mov
inc
xlat
lds
jns
mov
add
mov
insl
lods
popa
dec
xor
mov
into
xor
pop
cmpsl
add
mov
bound
mov
daa
jbe
fbld
xor
mov
mov
add
imul
mov
out
pop
push
dec
popf
xor
mov
mov
or
jnp
add
adc
push
int
out
add
lret
popa
xchg
add
sub
out
add
or
loop
mov
push
jl
adc
fnsave
push
jo
mov
cmp
mov
shrl
rolb
cmp
mov
popf
inc
add
xchg
sbb
add
dec
sub
add
aas
mov
mov
sbb
xchg
adc
mov
mov
add
and
call
mov
test
imul
xchg
push
stos
and
jmp
aaa
xor
sub
fwait
ljmp
mov
adc
adc
jle
cltd
insl
stc
adc
pop
jno
aad
ja
out
xor
dec
inc
pop
outsb
mov
scas
lods
out
xor
push
mov
mov
xor
lret
xchg
cmp
xchg
cmp
jno
hlt
mov
push
cmp
xchg
movsl
std
adc
jle
imul
mov
push
imul
cwtl
adc
mov
mov
gs
test
rolb
mov
or
movsb
iret
int
in
pop
sti
add
inc
mov
sti
stc
je
add
jns
jl
popf
or
fs
add
in
iret
xchg
mov
in
xchg
cs
cmp
adc
jge
add
loopne
mov
fbstp
je
xorl
mov
dec
mov
sbb
cs
subl
scas
mov
imul
test
bound
mov
mov
aam
jno
adc
push
jo
mov
fdivs
pop
inc
into
xchg
push
pop
fnstenv
mov
faddl
pusha
add
pushf
getsec
clc
lods
scas
push
mov
int
jmp
adc
andl
add
jno
jle
add
inc
inc
div
add
cmc
orl
mov
dec
push
imul
mov
mov
fsubrl
icebp
inc
add
es
aaa
les
xchg
addb
aam
jecxz
add
sbb
sbb
mov
jmp
mov
lods
xchg
add
mov
leave
jo
mov
inc
add
mov
and
mov
addr16
xor
and
mov
adc
lods
faddl
adc
mov
aam
cmpsl
pop
or
push
call
xlat
jbe
add
fisubrl
lret
cwtl
add
or
icebp
cmpsb
mov
dec
cmp
cmp
pop
fsts
sub
xchg
pop
addb
xor
add
xlat
lcall
pop
add
inc
mov
mov
fwait
adc
mov
mov
mov
or
popa
mov
dec
mov
jns
lods
fs
ret
lods
dec
mov
or
add
mov
in
push
dec
in
adc
sub
dec
icebp
aaa
in
test
sbb
outsb
inc
add
xor
pop
xor
mov
mov
out
sti
and
xor
mov
in
out
rcl
pop
jle
std
inc
add
add
inc
lahf
adc
mov
mov
add
imul
std
push
sbb
rolb
push
jle
mov
add
mov
stos
rolb
mov
popf
gs
mov
fimull
insb
mov
xchg
test
lret
add
repz
xchg
pushf
push
scas
jg
ds
sub
xor
mov
mov
int
mov
lret
xor
das
cli
pop
addr16
dec
aam
out
add
inc
mov
inc
jae
shll
mov
test
mov
jb
mov
push
stc
and
mov
daa
int
fdivl
cli
sub
xchg
pop
fisttps
mov
push
jl
mov
movsl
gs
fdivp
add
add
sahf
mov
xchg
add
stc
push
cwtl
inc
ds
cmp
pop
gs
stos
mov
add
add
add
inc
add
xchg
mov
inc
add
add
repnz
add
mov
lds
jb
mov
add
xchg
pop
xchg
xchg
cmp
mov
mov
inc
add
mov
inc
lods
xchg
add
add
rolb
mov
flds
call
addr16
or
js
cmp
aaa
add
mov
scas
test
xchg
add
mov
and
repnz
fs
add
add
cli
xchg
mov
mov
mov
add
fildl
mov
pop
xchg
mov
mov
out
dec
push
pop
jecxz
sub
pop
pop
fnstcw
and
mov
mov
add
mov
scas
sbb
inc
add
push
outsl
sub
addb
dec
mov
mov
sub
pop
outsl
dec
nop
add
push
mov
ljmp
add
xlat
test
inc
mov
add
fs
pop
rolb
mov
mov
cltd
in
sbb
jno
mov
mov
add
or
mov
add
icebp
hlt
and
add
mov
cli
popa
pop
fsubrs
je
cmpsb
mov
nop
add
and
nop
add
sbb
js
ret
fsubs
adc
add
mov
push
cmpsb
push
mov
mov
sbb
bound
mov
fwait
int
arpl
push
and
add
movsb
cmp
out
out
mov
imul
add
mov
jae
jne
add
fsts
add
push
ret
inc
push
orl
loop
mov
fbstp
add
mov
addr16
hlt
mov
rorl
stos
or
push
mov
dec
arpl
mov
das
xor
push
jmp
mov
add
iret
cltd
jne
out
mov
mov
dec
je
in
sti
jecxz
in
jae
push
jmp
dec
adc
scas
add
add
jnp
mov
xor
mov
stos
scas
jg
cmp
jecxz
mov
dec
in
repz
and
stc
or
pop
inc
rolb
add
mov
add
mov
cli
lcall
lahf
addb
sbb
mov
add
mov
stos
sbb
mov
adc
mov
rolb
lds
fsubl
sub
bound
mov
add
push
add
mov
fs
push
add
movsb
aam
sub
mov
mov
sahf
cmp
mov
cs
int
ret
mov
dec
mov
jge
mov
jbe
push
xchg
add
and
mov
jg
add
ljmp
sbb
sub
jne
out
mov
or
and
mov
add
mov
sub
sub
sar
lods
push
aaa
addb
jmp
push
int3
mov
pop
inc
jmp
lods
cld
fldl
mov
and
iret
xchg
jnp
mov
dec
push
add
sub
std
mov
add
adc
add
sahf
xchg
add
aam
mov
mov
and
mov
mov
in
das
mov
mov
bound
mov
add
push
or
jecxz
inc
xchg
xchg
faddl
idivl
mov
test
mov
fsubrs
repz
xchg
add
add
mov
dec
mov
xchg
fidivrs
addr16
mov
add
inc
pop
pop
fadds
mov
out
add
dec
les
rolb
mov
inc
jns
push
pop
sub
ret
movsb
and
mov
mov
xor
mov
inc
add
rolb
mov
cmpsl
stc
push
orl
mov
fbstp
mov
mov
xorl
xor
mov
xchg
fisttps
or
add
mov
add
mov
lods
int3
out
sbb
adc
fs
add
pop
iret
mov
aas
out
mov
add
sub
mov
add
inc
add
jle
outsb
or
mov
inc
dec
ficompl
and
mov
or
repz
xor
pusha
add
out
jnp
jae
add
pop
mov
or
rolb
mov
flds
cmpsl
push
add
rcrl
mov
xchg
jo
mov
scas
add
fwait
ja
mov
stc
std
pop
sbb
fadds
cmp
add
mov
mov
pop
and
mov
push
dec
mov
sbb
mov
cmpsb
pop
xchg
inc
nop
add
mov
add
mov
lahf
mov
test
lret
icebp
test
cmp
out
cmpsb
jb
mov
test
jl
add
mov
add
loopne
mov
dec
mov
clc
add
xchg
cmp
push
jmp
movsb
fisttps
add
in
and
insb
fidivrs
fisubs
add
imul
xchg
sbb
loop
mov
or
pop
pmulhuw
push
add
push
or
or
or
add
inc
add
mov
mov
mov
in
cmp
and
jmp
scas
and
inc
mov
sub
add
add
pop
lahf
fiadds
xchg
add
add
mov
imul
add
cwtl
out
mov
mov
and
add
sub
lock
mov
dec
lea
mov
mov
add
add
add
fmuls
mov
rolb
lds
mov
lock
iret
sbb
push
les
mov
push
xor
mov
sub
pop
aam
scas
cmp
addb
int
add
inc
add
add
jmp
xor
pop
fndisi(8087
xchg
mov
bts
xchg
pop
xor
cmpsb
adc
add
fxch
jno
and
dec
push
jp
loopne
mov
add
mov
ret
mov
mov
mov
jecxz
mov
scas
sub
pop
mov
test
xchg
sub
rcrl
ret
inc
out
pop
or
cmp
aad
repnz
and
fwait
push
xchg
add
add
ja
add
lock
insl
cmp
xor
mov
adc
mov
pop
jns
popa
xor
test
push
jge
imul
push
add
mov
xchg
dec
addb
fwait
std
inc
lock
mov
aas
sbb
fisttps
cwtl
dec
sbb
movsl
cld
leave
imul
bound
mov
or
cmp
add
sub
lods
pop
out
fsubs
or
lock
add
mov
mov
add
clc
outsl
sub
aam
sbb
daa
push
add
ja
movsl
pop
std
sub
add
add
out
std
mov
pop
fchs
add
mov
inc
lods
and
pop
rolb
mov
dec
lock
jbe
jmp
xchg
jae
data16
in
addb
xor
mov
aaa
sbb
jo
mov
shrl
mov
mov
fnsave
add
sbb
mov
scas
movsb
mov
add
daa
mov
int
mov
add
sub
repz
add
aaa
rolb
mov
add
lcall
andl
add
movsb
aam
add
jle
add
sti
push
adc
lods
xchg
sbb
adc
mov
adc
mov
scas
push
add
adc
mov
mov
mov
lret
inc
and
dec
adc
stos
mov
lahf
cmp
mov
mov
inc
rolb
jmp
mov
unpckhps
add
and
xchg
stos
cltd
and
jle
ret
loopne
mov
adc
fistpl
outsl
jne
push
addb
mov
mov
lds
xchg
mov
cmpsb
cmp
fimull
or
or
std
ljmp
ja
rolb
mov
into
jb
mov
mov
or
cld
or
into
subl
push
xchg
adc
add
add
addb
cmpsb
out
out
xchg
lods
mov
push
ljmp
jb
mov
jge
test
sbb
cwtl
aaa
and
mov
mov
mov
jno
add
or
cli
mov
inc
sarl
jg
add
inc
add
add
inc
sbb
das
mov
mov
iret
jmp
xchg
sub
mov
daa
push
add
and
inc
mov
cmp
dec
or
mov
mov
popf
inc
inc
or
js
mov
mov
add
fimull
mov
mov
sbb
sbb
mov
add
mov
stos
sahf
inc
add
push
in
push
div
add
stc
mov
stc
sbbl
mov
dec
leave
sub
divb
add
flds
mov
mov
stos
mov
mov
dec
movsl
sbb
ret
das
push
xlat
bound
mov
adc
mov
mov
mov
dec
sub
and
mov
add
add
fnstcw
xor
pop
out
pop
xlat
adc
mov
inc
pop
addb
gs
fwait
fwait
push
push
xchg
insb
dec
xchg
xchg
add
iret
cmpsl
add
clc
aam
test
jb
mov
pop
add
imul
xchg
aam
pop
jo
mov
test
fstps
push
and
fsts
xchg
adc
aam
cmp
add
mov
xor
jg
cmpsb
push
push
out
ja
add
mov
and
mov
leave
inc
hlt
popa
ja
mov
mov
or
outsl
incl
add
mov
cmp
xor
jns
test
mov
out
and
mov
in
push
js
dec
xchg
imul
sbb
add
mov
scas
xchg
mov
scas
sub
lret
jnp
lock
sbb
out
sub
out
push
push
lods
shll
mov
into
addb
fiadds
mov
mov
or
in
repz
push
cltd
repnz
push
or
mov
mov
cmpsl
imul
nopl
xor
add
add
sub
and
mov
mov
out
add
ljmp
cltd
pop
add
mov
cmp
push
lods
mov
push
or
call
sbb
add
or
add
mov
sahf
call
mov
dec
and
mov
icebp
push
aaa
out
mov
mov
cmp
xchg
shll
inc
adc
clc
or
xchg
mov
jl
add
add
xor
add
cltd
or
fdivrl
adc
mov
mov
pop
rcll
mov
fsubrp
jo
mov
cmp
loopne
mov
mov
add
enter
mov
add
add
add
dec
pop
add
pusha
add
ret
jge
add
mov
push
xor
out
add
mov
aas
pop
push
add
fsub
add
rol
add
ret
outsb
sub
add
pop
imul
mov
mov
xor
mov
or
add
mov
add
mov
xchg
fs
sbb
lahf
push
add
add
fs
pop
lods
popf
mov
inc
sub
es
ljmp
mov
mov
xor
icebp
out
inc
add
outsb
scas
cmpsb
dec
and
add
mov
inc
scas
dec
mov
into
rolb
mov
ret
xor
mov
inc
lahf
jge
add
xor
add
mov
and
call
mov
adc
cmpsb
lea
xchg
mov
mov
and
fndisi(8087
push
add
add
mov
sub
fistps
rolb
mov
mov
jb
mov
adcl
icebp
mov
popa
push
iret
inc
and
into
in
dec
jns
dec
cmp
jge
add
in
mov
push
xchg
add
mov
testb
mov
add
mov
mov
mov
pusha
add
test
ror
push
rolb
mov
arpl
jl
outsl
call
dec
inc
add
loope
add
rolb
mov
jae
daa
xchg
ja
dec
clc
dec
int3
jmp
mov
push
dec
out
add
add
sub
loopne
mov
mov
dec
scas
and
mov
xchg
add
add
mov
jo
mov
cld
cmp
pop
adc
movsb
imul
add
add
shr
lcall
mov
add
dec
mov
sbb
insb
sbb
sub
add
push
push
hlt
mov
clc
test
add
jno
stos
lahf
lods
push
add
out
xchg
dec
cmpsb
aas
jge
iret
incl
fiadds
subl
icebp
inc
push
add
add
add
insb
push
cmpsb
in
ficompl
in
cmp
in
fldcw
lods
jb
mov
mov
xchg
add
adc
add
add
push
push
xor
aam
adc
mov
cmp
int
fs
fisttpll
jecxz
adc
mov
out
add
mov
repnz
adc
pop
lahf
dec
lods
adc
push
ds
mov
mov
arpl
in
push
fs
mov
mov
mov
or
outsl
inc
push
test
jle
les
add
push
aam
ret
dec
es
xor
push
add
xor
rol
mov
mov
aas
in
int
jecxz
or
aad
std
sbb
in
jo
mov
pusha
add
push
xor
mov
mov
pop
rorl
sub
fidivs
lock
cmp
int
add
mov
in
dec
movsl
and
popf
cld
push
add
mov
push
cltd
dec
pop
fstpl
cmp
and
cmpsb
lret
pop
push
or
aas
jle
xor
add
call
aam
lahf
loope
paddusb
add
mov
mov
shrl
mov
add
add
and
iret
xchg
call
call
add
mov
sbb
mov
je
into
hlt
dec
out
iret
sahf
bound
mov
mov
cmpsl
inc
add
mov
lahf
mov
inc
add
xor
xor
inc
sbb
sub
mov
sti
mov
mov
pop
daa
push
cmp
sbb
push
pushf
mov
ret
add
mov
in
in
fwait
cltd
push
jle
adc
add
fdivrs
mov
push
in
lret
std
inc
sbb
mov
mov
aam
cltd
lret
daa
pop
xor
mov
roll
add
das
adc
mov
xor
mov
mov
out
mov
add
mov
adc
mov
xchg
add
cli
fcmovbe
add
sbb
sub
or
xor
mov
fmuls
add
iret
jne
rolb
mov
jbe
outsb
mov
enter
hlt
mov
add
mov
add
push
pop
lds
out
add
int3
sbb
les
add
mov
jb
mov
or
push
dec
cmp
loope
cwtl
cmp
cmp
push
fimuls
outsl
fsubp
add
xor
xchg
mov
in
sub
into
pop
fsubs
and
add
repnz
and
xor
mov
loop
mov
and
add
and
mov
inc
lret
mov
ds
add
adc
mov
add
xlat
loope
cltd
xchg
ficoml
ja
mov
add
mov
pop
pop
sbb
int
push
xchg
adc
insl
and
mov
sysexit
push
pusha
add
mov
scas
loopne
mov
xchg
into
cld
mov
mov
push
mov
mov
add
mov
and
mov
int
lods
adc
dec
pop
jne
xchg
jb
mov
add
inc
jecxz
mov
scas
stos
mulb
mov
ljmp
push
sbb
ljmp
mov
push
rcll
add
rcll
pop
cwtl
leave
mov
mov
mov
add
enter
jns
in
mov
addr16
jnp
mov
ds
add
mov
inc
fisttpll
movsl
insl
addb
mov
sbb
mov
insb
pushf
jl
mov
add
add
mov
xchg
lcall
cld
dec
and
mov
add
std
mov
add
xchg
scas
call
xchg
aas
jp
add
cli
or
pop
jae
jp
dec
jl
xchg
cmp
inc
scas
jp
arpl
inc
push
and
add
pushf
dec
mov
aam
inc
push
dec
pop
and
loopne
mov
jmp
push
push
mov
adc
mov
push
jmp
div
jo
mov
add
mov
mov
int3
lods
mov
mov
jl
out
mov
pop
cmpsl
in
xchg
pop
out
add
sub
jecxz
sbb
divl
mov
out
add
fs
int
inc
add
mov
add
fcompl
mov
add
pop
fwait
push
imul
test
pop
sbb
add
xchg
add
inc
push
jno
pop
sbb
add
fwait
ja
xchg
out
jno
mov
pop
inc
inc
add
mov
add
repz
mov
pop
loop
mov
enter
into
rcr
add
addb
fnstsw
mov
mov
daa
rolb
pushf
cmp
add
sbb
in
push
and
add
mov
mov
addb
out
cmp
mov
lret
rolb
mov
add
mov
orl
pop
stos
out
cs
xchg
mov
lret
lcall
push
cmp
dec
cmc
sbb
sub
js
add
add
dec
fs
cmp
jns
ret
xchg
mov
add
jno
add
mov
cmp
repnz
add
mov
push
push
fs
add
add
pop
scas
je
add
out
rcll
pop
inc
mov
dec
dec
pop
push
add
lret
add
or
stos
inc
mov
add
decb
mov
add
sbb
scas
aam
loop
mov
sbb
mov
jo
mov
mov
mov
repnz
mov
xor
mov
in
loop
mov
mov
sub
aaa
jl
add
mov
mov
mov
mov
mov
cmp
sarl
aam
fcmovne
clc
lods
inc
in
push
mulb
stc
mov
cltd
xchg
add
inc
lods
rolb
mov
imul
add
mov
mov
mov
push
dec
sub
sahf
inc
mov
and
dec
and
mov
out
inc
mov
imul
in
or
add
add
sbb
add
addb
loop
mov
xor
adc
mov
mov
data16
mov
ss
add
pop
cltd
rcr
adc
add
in
rcr
addb
outsl
ja
jle
jp
and
mov
mov
sbb
call
xor
mov
mov
cld
mov
xor
add
or
add
sbb
mov
imul
push
add
push
add
add
xchg
mov
insl
and
mov
pop
cmc
xor
mov
dec
xor
mov
std
movsl
popa
cmp
outsb
rolb
pop
idiv
inc
aas
xchg
into
je
add
mov
ret
mov
add
add
stc
outsb
addr16
add
bound
mov
mov
call
inc
jle
or
push
ret
mov
and
mov
dec
sbb
xlat
dec
loopne
mov
jg
cmp
scas
aas
xchg
in
in
jmp
sbbl
mov
je
cmpsl
scas
shll
mov
add
inc
jae
mov
dec
xchg
cmc
fucomi
adc
mov
push
xor
pop
xchg
sahf
inc
dec
fistl
add
add
jmp
int
jne
stc
out
filds
add
jns
mov
iret
addb
jo
mov
popf
sar
xor
cmp
lret
rolb
dec
cmp
bound
mov
add
loop
mov
clc
or
in
xlat
or
sbb
add
pusha
add
stos
and
mov
loop
mov
pop
sbb
mov
pushf
cmpsl
in
pop
inc
add
enter
push
testl
jo
mov
add
rolb
mov
sar
sub
add
mov
inc
inc
mov
mov
ss
cmp
cld
aam
in
aad
std
pop
fldenv
dec
pop
into
sti
add
aad
add
js
push
popa
addb
jnp
jns
sub
push
outsb
adc
cmp
lds
mov
mov
and
rol
xor
mov
aaa
movsl
das
adc
push
add
pop
or
pop
sbb
pop
push
mov
lods
mov
rolb
repnz
arpl
or
dec
jbe
jns
add
push
clc
adc
jle
add
test
mov
xlat
mov
faddl
mov
cmp
fld
add
fbld
stos
xor
test
pop
adc
cmp
or
loop,pn
mov
mov
out
movsb
xrelease
mov
mov
mov
add
and
cltd
in
bound
mov
dec
idiv
dec
fdivl
scas
insl
rolb
mov
mov
decl
insb
mov
or
jmp
push
add
test
dec
fstps
mov
push
stc
out
sbb
pushf
aas
fbstp
cli
aaa
push
pop
loopne
mov
or
and
mov
mov
jmp
into
xor
cltd
jns
adc
stc
inc
pop
push
adc
xlat
sbb
jge
jnp
add
sub
cli
sbb
mov
repz
mov
or
add
insl
rolb
mov
leave
sbb
aas
inc
add
inc
cmc
in
xchg
sub
mov
add
mov
outsb
mov
cmp
loope
sbb
mov
orl
out
loopne
mov
push
orl
out
jno
loop
mov
testl
ja
mov
js
sub
and
mov
int
add
cmp
add
adc
fcomps
lcall
mov
addr16
push
dec
fisttpl
je
jno
in
pop
xchg
xchg
sbb
mov
out
push
cmpsb
mov
add
add
add
aam
add
mov
scas
scas
fdivrp
sub
xchg
lods
or
inc
sbb
ret
and
cmp
fbstp
adc
add
mov
add
add
mov
pop
xchg
icebp
repz
mov
push
icebp
in
fwait
mov
dec
sub
ds
push
stos
xor
jne
loop
mov
add
add
mov
or
mov
cmpsl
ret
or
push
scas
fs
and
mov
add
clc
out
dec
or
xchg
out
add
mov
add
mov
insl
mov
je
add
dec
lods
mov
mov
mov
bound
mov
fcoms
mov
xchg
sti
fnsave
cltd
loop
mov
call
xlat
ljmp
mov
sub
into
pop
sub
fnsave
mov
aad
add
imul
icebp
out
sub
mov
xchg
dec
inc
add
mov
xchg
add
out
jmp
mov
fadds
add
in
outsb
dec
ljmp
mov
mov
mov
mov
sub
mov
pop
dec
sahf
aam
out
frstor
mov
repnz
fstpt
xchg
add
addb
addr16
mov
cmp
push
push
imul
and
scas
out
mov
scas
dec
mov
out
mov
mov
sbb
inc
or
sub
or
lock
or
ds
jb
mov
cs
add
xchg
xchg
lret
aam
push
arpl
adc
mov
mov
addb
jmp
push
xchg
icebp
dec
jbe
and
add
data16
mov
mov
pop
pop
repnz
ljmp
aam
sahf
push
hlt
sbb
pop
stc
push
sbb
hlt
daa
pushf
xor
mov
xchg
add
or
ja
adc
add
mov
sbb
add
cmp
push
add
mov
pop
je
out
aaa
xchg
add
mov
push
jb
mov
mov
or
fdivs
mov
push
bound
mov
in
into
and
mov
out
das
das
addr16
cmp
cld
jmp
in
int
aas
rorl
popf
mov
push
fisubl
add
mov
push
cwtl
jne
push
inc
inc
addr16
add
lds
test
add
mov
mov
add
add
add
out
test
pop
adc
mov
mov
xor
jb
mov
outsl
push
jae
pop
jl
pop
movsl
cmp
rcrl
mov
mov
xor
fsub
adc
dec
jl
and
mov
xchg
lock
imul
sub
das
push
mov
fstpt
push
mov
imul
mov
icebp
outsl
push
and
xchg
jmp
fs
fisttpl
jl
lock
xchg
mov
out
inc
add
insl
dec
jo
mov
pop
xchg
xor
mov
fldl
das
repnz
in
fiadds
ljmp
pushf
es
mov
jmp
pop
cld
int
xchg
pop
mov
mov
scas
lret
sahf
adc
pop
fsts
notl
jae
add
out
and
scas
push
pop
inc
dec
out
pop
cld
xchg
rolb
mov
enter
mov
inc
xor
add
dec
in
into
sti
lret
jns
fwait
add
jae
popf
dec
iret
xchg
pop
iret
stos
ss
sti
xchg
xor
mov
push
je
push
add
in
add
andl
mov
mov
fdivrs
jb
mov
jbe
cmp
mov
addb
xchg
pop
push
enter
arpl
xor
mov
xorl
add
enter
add
add
sbb
add
mov
dec
adc
mov
lcall
mov
inc
cmpsb
dec
inc
add
mov
inc
xlat
xchg
in
dec
mov
push
mov
add
jno
test
stos
pusha
add
mov
dec
lods
loop
mov
jl
xor
insb
loop
mov
sub
and
mov
xchg
adc
jg
pop
out
addb
cmpsl
jg
lret
pavgb
mov
cmp
addb
jb
mov
add
dec
mov
or
mov
inc
scas
mov
gs
cli
rolb
lcall
mov
out
add
cld
rolb
mov
mov
mov
and
js
jecxz
jae
or
jecxz
adc
mov
mov
fcoml
mov
mov
mov
xchg
add
adc
mov
xor
mov
mov
repnz
fmul
or
add
je
daa
lcall
mov
sahf
mov
xor
mov
dec
std
fists
add
mov
sub
dec
jmp
mov
mov
add
test
cld
in
sbb
pop
int
loope
mov
push
add
add
mov
lahf
mov
pusha
add
add
fwait
pop
pop
mov
iret
adc
pusha
add
add
icebp
out
mov
jl
jp
outsb
pushf
mov
out
push
or
jb
mov
mov
arpl
jo
mov
adc
sub
push
mov
jmp
mov
adc
jns
out
inc
add
inc
add
mov
sti
dec
cmp
mov
mov
iret
sbb
fildll
movb
data16
push
out
outsb
sbb
mov
mov
rol
test
xchg
mov
fcoms
mov
add
add
mov
movsl
cmp
int
add
add
mov
es
adc
dec
test
jle
add
pop
mov
gs
lds
add
lcall
and
push
ret
mov
lcall
xchg
lock
ret
jp
add
lahf
jge
addr16
add
sbb
in
xor
add
push
xchg
adc
inc
into
mov
movsl
lea
pop
int3
xchg
lock
cmp
xchg
in
jnp
test
add
ret
mov
mov
in
mov
jns,pn
pop
pop
fimuls
lcall
sub
dec
and
mov
add
idivl
in
loope
fcmovb
mov
aaa
xor
add
pop
iret
push
sbb
add
add
add
loopne
mov
fisttpll
inc
call
test
add
outsb
sbbl
enter
je
cli
lock
add
mov
hlt
lret
gs
cmp
jecxz
push
or
pop
add
jg
js
cmp
add
push
mov
bswap
sbb
pushf
iret
repnz
jnp
push
lahf
mov
std
call
out
push
jne
add
mov
mov
mov
add
xchg
sbb
pop
pop
iret
lret
adc
mov
test
sahf
jae
mov
lock
test
jmp
add
jp
cmpsl
test
and
mov
cmp
mov
js
jge
add
or
iret
push
fidivl
inc
add
mov
add
lods
std
and
mov
add
scas
lods
jae
jb
mov
pop
dec
jae
stos
outsl
push
mov
insb
clc
pushf
stc
dec
into
mov
bound
mov
mov
call
jp
mulb
cld
and
sti
xchg
push
xor
mov
sub
lods
add
mov
dec
sbb
jmp
add
arpl
sub
and
and
mov
inc
fimull
icebp
inc
lret
in
jmp
ds
lahf
add
mov
addl
add
push
add
pop
pop
stos
or
mov
popf
jge
mov
jb
mov
xor
mov
sub
mov
sti
jae
movsl
addl
cmp
stos
ss
ss
lods
pusha
add
xchg
or
inc
nop
add
add
imul
add
add
mov
test
pop
scas
sbb
das
jnp
addb
lods
test
add
mov
adc
mov
inc
pusha
add
mov
mov
rolb
mov
dec
inc
pop
cli
add
addr16
push
push
mov
add
mov
add
test
mov
mov
aad
mov
pop
dec
fisubrs
scas
sub
int
add
ss
movsb
push
xchg
push
fiadds
inc
in
cmp
pop
aad
movsl
fldlg2
cmpsl
outsl
inc
rcrl
add
clc
movaps
mov
insl
cs
hlt
jp
inc
ljmp
add
pop
inc
xor
into
or
out
adc
stos
inc
aam
inc
add
imul
mov
add
in
cmc
xchg
rolb
mov
inc
in
loopne
mov
jae
jl
fildll
xor
pop
test
add
pop
push
or
icebp
or
add
mov
icebp
test
aam
add
jno
add
add
mov
inc
pop
test
add
mov
add
sbb
xor
push
dec
xchg
mov
dec
cs
xor
push
and
add
mov
add
call
sub
std
fnclex
add
adc
mov
push
xor
mov
daa
inc
stos
aam
mov
add
es
cmp
add
and
mov
sti
adc
xchg
add
mov
pop
jno
sub
mov
mov
mov
mov
sub
jae
mov
mov
mov
popf
cli
insl
sub
pop
mov
xchg
pop
mulw
rcrl
adc
nop
add
ds
std
std
ficompl
addr16
icebp
stos
adc
mov
inc
add
outsl
pop
ret
enter
mov
push
jbe
fimull
push
add
add
add
mov
loop
mov
jmp
pop
cmp
push
std
lods
mov
mov
inc
sub
dec
roll
xor
mov
dec
lret
ret
mov
sbb
mov
mov
gs
lret
loop
mov
add
jns
and
mov
add
inc
inc
pop
xor
mov
lds
push
mov
cmp
or
jno
cli
in
bound
mov
sahf
inc
add
fdivp
adc
roll
jnp
jo
mov
xchg
push
addl
mov
adc
mov
xchg
ficompl
enter
pop
mov
sti
jle
push
adc
mov
push
stos
jns
bound
mov
fistl
mov
loop
mov
add
jmp
add
das
in
bound
mov
cmp
mov
dec
xchg
jnp
roll
fiaddl
push
jno
fimull
add
aam
sbb
adc
imul
push
pop
iret
or
addb
int3
xor
adc
jno
and
push
push
lcall
mov
das
cs
sub
push
xlat
stos
into
daa
push
addb
cmp
and
add
mov
add
out
ja
and
in
negb
mov
pusha
add
or
pop
lcall
test
dec
imul
add
or
mov
imul
add
aam
push
cwtl
insl
sbb
pop
inc
add
lods
out
push
cli
rolb
mov
xchg
pusha
add
cwtl
sub
mov
mov
insb
jge
push
and
decl
fidivl
inc
add
add
push
jo
mov
imul
add
inc
add
adc
in
jecxz
xchg
loop
mov
fwait
pop
sbb
add
mov
push
dec
or
fsubs
aaa
fnclex
add
popf
sbb
mov
jmp
popa
add
or
mov
add
mov
pop
jo
mov
shll
ss
and
add
loopne
mov
mov
add
mov
out
or
pop
insb
adc
mov
mov
mov
imull
mov
sub
imul
pushf
xchg
push
add
cmp
movb
add
cmpl
fisttpl
dec
test
in
cltd
add
mov
xchg
cmpsl
in
ret
sub
pop
add
mov
leave
add
lock
cmpsl
mov
test
dec
lds
add
mov
add
jmp
enter
inc
lahf
imul
or
out
repz
scas
mov
jl
add
out
rolb
mov
clc
aas
in
fistpl
mov
mov
or
add
add
pusha
add
clc
sahf
in
add
ja
sarl
pop
push
sub
decb
mov
push
mov
rolb
mov
cld
sub
add
cltd
sub
mov
mov
mov
sbb
push
or
mov
cli
xchg
mov
xor
rolb
mov
add
in
nop
add
sti
sub
cmc
aas
xor
pop
mov
mov
jp
clc
adc
mov
jge
mov
jb
mov
movsl
or
push
add
mov
movsb
sahf
xchg
adc
mov
xor
mov
add
stc
xor
and
andl
dec
xor
mov
ja
add
in
add
ljmp
xchg
xchg
shll
in
mov
cmp
add
or
add
mov
mov
in
rolb
mov
xchg
insb
jg
add
adc
int3
add
mov
fcmovne
inc
dec
fcom
add
add
fdivrl
dec
pop
enter
ja
cld
mov
dec
inc
rcl
test
lea
movsl
sbb
mov
loop
mov
push
sti
neg
jns
in
or
loope
je
xor
jbe
mov
mov
xor
mov
mov
cmp
jne
or
cli
mov
xor
mov
pop
mov
xlat
jnp
cwtl
jg
pop
ljmp
fwait
sarl
pop
xor
cs
int3
into
xchg
add
add
mov
dec
inc
outsb
xor
mov
mov
imul
mov
enter
jnp
mov
add
xor
mov
xchg
dec
xor
mov
add
and
aad
cmp
call
pop
cmp
rolb
mov
add
adc
test
or
sbb
add
push
push
gs
sub
jg
addb
arpl
mov
add
mov
mov
mov
mov
jp
add
mov
pop
sbb
push
push
addl
out
xor
or
fistpl
lret
jle
aad
inc
add
js
and
or
lds
rolb
mov
mov
add
mov
sbb
add
nop
add
sbb
or
addr16
enter
add
add
jl
leave
mov
aad
std
mov
rorl
out
les
fwait
addb
mov
xor
jmp
push
sub
lock
jecxz
rolb
mov
das
and
mov
jmp
dec
push
in
jo
mov
loope
loope
push
hlt
frstor
mov
movsl
pop
into
popa
push
dec
dec
or
xlat
sbb
add
mov
sub
xor
mov
addr16
imul
cwtl
mov
push
adc
jge
imul
mov
data16
push
pop
stos
fists
das
xor
cmp
xchg
mov
sbb
xlat
mov
sbb
lret
add
mov
dec
testl
arpl
push
and
mov
addb
popf
int
mov
and
mov
xchg
out
sbb
jns
sub
or
xchg
add
ljmp
mov
sub
lds
pop
mov
cmp
clc
out
push
jno
add
add
mov
dec
or
mov
add
mov
enter
mov
rolb
mov
scas
je
cwtl
sbb
mov
xchg
jg
adc
mov
add
aaa
stos
lea
xor
mov
add
ret
xor
jno
ret
dec
push
sub
or
rcrl
push
rorl
test
imul
decl
mov
mov
push
mov
add
add
jae
out
push
or
jb
mov
pop
out
imul
inc
add
icebp
jl
pusha
add
imull
ret
xor
sbb
add
adcl
adc
pop
xor
mov
repz
inc
jbe
add
mov
insl
jnp
cmp
rolb
mov
icebp
sub
push
mov
jle
imul
mov
mov
adc
mov
out
push
movsl
mov
mov
cmp
add
sbb
xrelease
adc
add
les
mov
or
movsb
mov
jl
loopne
mov
xor
xor
inc
add
fbld
cld
xchg
fs
jb
mov
inc
push
lcall
mov
add
or
jne
arpl
repz
je
xchg
fadd
dec
push
out
jbe
inc
add
xchg
mov
add
add
cmp
xchg
mov
ror
testb
inc
jg
pop
inc
outsb
ja
add
nop
add
mov
aad
and
mov
mov
popa
movsl
jo
mov
add
into
adc
push
add
jg
aas
mov
mov
icebp
xor
add
add
cwtl
jae
pop
hlt
add
mov
or
mov
mov
repnz
leave
push
add
mov
mov
ds
mov
add
push
cmp
xor
jp
jmp
add
pop
mov
mov
push
repz
aaa
leave
mov
add
sahf
xchg
add
xchg
int3
push
push
and
mov
jbe
test
xor
int
lahf
not
add
sub
lock
add
aaa
lods
les
lcall
jle
sbb
add
add
insb
movsb
adc
mov
add
aas
les
repz
lret
add
addr16
pusha
add
xlat
loope
cwtl
and
mov
repnz
sbb
jbe
add
cmp
cmc
cmp
sahf
mov
mov
andl
add
add
mov
cltd
in
add
jg
repz
loop
mov
aas
mov
adc
push
add
mov
in
in
add
ja
add
adc
mov
mov
push
fisttps
mov
and
xor
push
sub
nop
add
mov
push
faddl
add
mov
mov
out
jno
jns
cmp
add
add
mov
mov
loop
mov
out
inc
add
xchg
dec
xor
mov
inc
mov
stos
dec
mov
xor
mov
push
jecxz
into
xchg
sahf
sbb
repz
jae
and
mov
add
add
add
mov
mov
sbb
adc
sub
dec
push
pop
cmp
mov
add
cmp
imul
call
ljmp
inc
xchg
mov
add
std
test
jl
mov
sub
adc
rolb
sbb
cmp
sub
decb
mov
dec
jmp
adc
mov
out
pop
dec
xchg
std
in
add
loop
mov
cmpsl
xchg
adc
mov
inc
imul
dec
js
aad
inc
jge
xchg
shrl
xchg
add
ljmp
xor
movsl
fsts
dec
stc
mov
fwait
stc
mov
add
mov
push
stos
stos
lret
add
stos
mov
mov
xor
nop
add
adc
mov
cli
mov
add
lock
push
clc
push
add
repz
outsl
popf
xor
jbe
add
jecxz
xor
addr16
add
jae
cmp
adc
cmp
ss
cmp
filds
outsl
cmpsb
ljmp
mul
xor
mov
popf
in
inc
popf
mov
add
in
fs
hlt
pop
add
add
movsb
imull
and
mov
jbe
cwtl
sbb
jg
jo
mov
mov
jecxz
add
or
enter
loopne
mov
add
mov
mov
ss
add
stos
ja
popa
and
jns
jle
jp
xchg
and
or
mov
jecxz
enter
scas
dec
xchg
sbb
add
add
add
imul
mov
pop
pusha
add
add
int
cmp
cmp
outsl
push
icebp
and
imul
sub
in
xor
mov
jnp
add
cmp
or
rcll
inc
add
add
cmp
xchg
jp
add
mov
xchg
jle
addr16
add
stos
dec
add
add
inc
add
repz
inc
add
or
test
lods
mov
lock
push
add
xchg
jo
mov
test
add
sub
add
xchg
sub
add
test
mov
add
mov
leave
dec
dec
fs
add
ss
ret
inc
add
add
add
addb
xchg
movsl
nop
add
cmc
test
add
cmp
mov
ss
add
clc
inc
rolb
lods
jae
mov
and
mov
iret
xchg
loope
orl
pop
aaa
xor
loope
rolb
mov
nop
add
mov
mov
mov
add
sub
inc
cmp
mov
sti
add
mov
inc
mov
dec
aam
pop
xchg
fsubrp
insb
out
add
mov
and
mov
in
push
cmp
mov
dec
repnz
jb
mov
xor
pusha
add
xor
mov
cs
cltd
push
add
fidivl
push
inc
test
aaa
fimull
fprem
and
pop
xor
bound
mov
cmp
jmp
rolb
mov
dec
mov
mov
jl
push
add
adc
mov
mov
mov
xor
mov
popa
cmpsl
movsb
outsb
or
inc
shll
mov
imul
push
stos
jb
mov
mov
mov
rcll
xchg
in
jecxz
mov
sbb
imul
or
push
mov
inc
add
push
add
aas
cli
mov
add
cmpsb
int3
cmpxchg
mov
test
xlat
fs
in
in
mov
mov
test
dec
rolb
mov
das
adc
add
mov
push
pop
out
mov
mov
rcr
mov
into
lds
fdivrl
out
xchg
rolb
mov
xchg
cmp
adc
mov
shll
mov
sbb
out
jae
adc
mov
dec
add
push
add
dec
sahf
xchg
add
or
mov
jb
mov
add
dec
add
mov
or
scas
sub
rolb
mov
popf
xchg
sbb
add
add
mov
and
mov
xor
dec
in
mov
or
mov
add
mov
roll
mov
daa
fs
popf
mov
mov
mov
mov
mov
mov
rcll
mov
jle
pop
xor
mov
dec
mov
pop
push
daa
mov
repnz
mov
add
jne
jecxz
push
add
or
add
and
dec
outsl
cmp
push
rolb
mov
nop
add
repnz
add
push
rolb
mov
int
bound
mov
inc
add
loope
mov
add
cmc
cmp
jge
in
add
inc
leave
in
repz
pop
sub
rolb
mov
add
add
push
mov
sub
cmpsb
sbb
xor
add
mov
addl
add
adc
cmc
xor
mov
fldl2t
jae
mov
lret
stc
mov
cmpsb
add
repz
rolb
mov
out
gs
out
jmp
ja
mov
repz
sbb
add
mov
pop
pop
pusha
add
insb
outsb
xchg
add
add
inc
mov
add
add
adc
mov
sbb
sbb
inc
xchg
add
add
repnz
dec
ds
sbb
ret
push
add
jp
mov
imul
mov
out
cmp
add
mov
pushf
sahf
jge
out
jecxz
push
hlt
out
in
ss
or
mov
add
inc
es
xchg
add
repnz
das
mov
mulb
fisubl
test
nop
add
nop
add
add
cmp
xchg
push
xchg
add
sahf
leave
fs
bound
mov
add
xor
mov
pop
divl
add
rolb
mov
les
rcll
add
cltd
test
mov
mov
add
ja
push
xor
add
sbb
xchg
cmc
pushf
pop
cmp
xor
mov
into
nop
add
bound
mov
dec
mov
mov
sub
fisubs
lret
mov
and
mov
mov
sahf
sub
aaa
adc
fucompp
pop
xor
mov
jns
sbb
lods
jne
mov
jb
mov
add
popf
icebp
sub
in
dec
lahf
pop
stc
or
es
add
jae
pusha
add
addr16
fsubrs
test
aam
jg
jecxz
add
stos
test
arpl
int
pop
aad
add
adc
icebp
xlat
cli
mov
add
add
nop
add
pushl
mov
mov
aad
or
addb
sub
dec
and
add
add
mov
add
or
daa
sti
nop
add
stos
mov
cmp
cld
sub
jl
int
add
in
push
addr16
push
add
jle
push
cwtl
ret
lret
pop
or
sub
aas
enter
add
or
loop
mov
mov
stos
cltd
jecxz
stc
imul
add
sub
add
add
out
cmpsl
jmp
icebp
out
hlt
push
shll
out
int3
jae
icebp
mov
into
leave
add
mov
or
cmpsl
cmp
fdiv
cmc
cmpl
jg
xor
and
push
sbb
mov
add
lods
loope
popf
outsl
inc
stos
ret
mov
shr
leave
pop
mov
lods
repz
or
mov
dec
xchg
dec
not
mov
xor
mov
sti
cmp
add
xchg
add
add
jb
mov
jle
xchg
add
cmp
add
iret
dec
loope
rolb
mov
lret
rolb
adc
dec
mov
xchg
lds
mov
ss
imul
adc
dec
jo
mov
ret
cmp
stos
adc
xor
adc
into
aaa
nop
add
xchg
inc
add
jl
sbb
sub
rolb
mov
sub
iret
add
adc
cmc
pop
dec
pop
xor
mov
mov
in
xchg
jmp
mov
pop
pusha
add
mov
js
add
mov
lea
adcl
cmp
sbb
addr16
xchg
xchg
sbb
imul
repnz
jl
mov
add
sub
out
test
mov
push
add
sbb
add
scas
sahf
in
rolb
int
jno
lds
std
push
scas
es
cmp
int3
jge
pop
in
inc
jb
mov
jmp
shll
mov
repz
mov
cli
ss
nop
add
add
jmp
fldenv
mov
add
add
mov
dec
xor
mov
and
mov
cmc
lock
clc
fwait
rcrl
push
popa
sbb
sub
add
jns
jno
jmp
popl
mov
jmp
adc
cmp
mov
mov
daa
mov
mov
es
clc
lret
fdivrl
das
xor
mov
mov
rcl
mov
gs
mov
iret
adc
add
lahf
xchg
insb
arpl
add
mov
xor
cmpsb
in
lock
jb
mov
add
jb
mov
clc
jo
mov
push
mov
enter
ss
mov
sbb
mov
xchg
nop
add
mov
ljmp
xchg
mov
jmp
mov
dec
add
mov
cs
add
mov
mov
add
mov
mov
icebp
sahf
adc
mov
dec
hlt
clc
outsl
pop
adc
dec
jb
mov
pop
arpl
add
adcl
fsubrs
mov
std
jle
sub
out
mov
fcomi
out
mov
mov
push
and
in
aaa
and
movsl
mov
mov
inc
and
add
mov
mov
lahf
adc
mov
sub
fidivrl
cmc
cld
pop
sub
mov
add
mov
jb
mov
pushf
sub
lods
and
add
xor
push
dec
bound
mov
mov
jmp
jns
xor
mov
add
lcall
imul
jae
mov
mov
add
test
pop
mov
dec
aaa
mov
jnp
ds
stc
aaa
xchg
imul
loope
push
add
add
mull
stos
dec
test
cmp
adc
roll
jecxz
add
out
mov
mov
xor
mov
add
mov
push
scas
cmp
push
add
adc
lea
cmp
mov
xchg
out
xor
mov
push
hlt
push
add
inc
std
mov
or
add
mov
add
add
mov
mov
add
dec
in
sub
lods
cmc
pop
psrld
mov
xor
mov
in
dec
stos
fs
add
mov
mov
addb
das
js
loope
cld
or
add
rolb
mov
pop
sbb
add
mov
push
xlat
mov
idiv
in
movsl
jge
addl
in
stc
mov
lods
iret
mov
cld
pop
mov
mov
cmp
xor
add
roll
add
push
pop
add
mov
scas
or
xchg
stos
icebp
repz
call
sbb
jbe
jle
mov
test
add
push
or
xor
add
mov
jmp
shl
icebp
mov
xchg
es
inc
or
nop
add
es
xchg
jp
jle
les
add
sub
jle
rolb
mov
or
add
mov
test
mov
add
adc
insl
lds
mov
add
repz
adc
mov
stos
in
movsl
adc
mov
add
mov
add
addl
mov
jp
dec
xor
or
push
xchg
aad
loope
out
inc
inc
mov
xor
mov
int
pop
imul
or
popf
fucomp
jne
insl
sub
js
mov
and
mov
addb
dec
mov
fwait
int
sti
ret
scas
or
dec
lahf
xor
sbb
loop
mov
data16
cli
add
mov
add
rcrl
add
lret
rep
adc
or
out
adcl
add
mov
push
sti
dec
or
jae
mov
add
cmpsl
repz
add
outsb
rorl
mov
mov
loope
ficomps
lds
mov
fadds
scas
data16
mov
add
fstl
fdivrl
add
push
push
cmp
push
xor
hlt
mov
mov
mov
add
arpl
xchg
adc
xor
mov
cwtl
add
cwtl
clc
sub
int3
push
pop
push
jbe
add
outsl
mov
mov
lret
xchg
stos
data16
mov
mov
mov
cmp
add
aaa
in
add
lret
hlt
sbb
add
dec
aad
fbld
lahf
pusha
add
test
pop
out
jge
pusha
add
mov
fimull
xlat
add
and
mov
mov
ljmp
xchg
fidivrs
jne
sbb
cmp
call
xchg
loope
or
out
mov
add
flds
add
outsb
movb
xor
push
loopne
mov
gs
movsl
in
dec
dec
decl
add
add
jne
inc
sub
das
push
or
addb
scas
rolb
mov
rolb
mov
mov
mov
ja
adc
xor
popf
das
xchg
lock
scas
sbb
ret
mov
sbb
xor
mov
mov
and
lcall
jo
mov
or
jecxz
xor
add
xor
mov
das
push
shr
bound
mov
cld
xchg
add
aad
lret
mov
mov
jl
mov
lcall
lods
test
mov
rol
rolb
mov
add
ret
int
insl
clc
ja
sti
fsubrl
inc
mov
cmp
orl
ret
into
jo
mov
mov
fnstsw
cmc
pop
std
mov
add
adc
mov
add
inc
add
cmp
fisttps
dec
hlt
xchg
add
add
mov
add
dec
popa
cmp
addb
mov
mov
cs
add
clc
sub
arpl
mov
loop
mov
push
cmpsl
push
or
dec
or
mov
add
in
imull
stc
mov
add
addr16
test
mov
add
fcom
imull
xor
mov
fisttpll
inc
add
iret
xchg
mov
dec
or
ljmp
divl
add
add
xor
into
out
cmp
sub
add
jns
out
enter
mov
sbb
add
sbb
stos
adcl
sti
jns
lods
xor
stc
lock
mov
xlat
aas
ljmp
mov
sbb
push
add
and
mov
movsl
je
add
add
loopne
mov
and
dec
xchg
jge
xlat
dec
loope
ret
int
dec
nop
add
mov
mov
mov
mov
mov
mov
push
repz
or
mov
adc
add
add
out
repz
mov
sbb
sub
jmp
in
mov
add
dec
in
jo
mov
xor
add
je
lds
adc
sbb
xchg
pop
mov
add
mov
lret
stos
pop
jle
js
push
cmp
imul
jecxz
ja
add
xor
outsb
cmpsb
mov
and
addb
popa
mov
ret
rolb
mov
test
test
push
mov
add
add
mov
cmp
ret
pop
sahf
or
out
repnz
rolb
mov
jb
mov
mov
sub
addb
mov
add
mov
jge
fdivrl
mov
aaa
test
ljmp
add
xor
mov
imul
in
jmp
add
jl
xor
mov
pop
das
in
cld
mov
movsl
outsb
inc
xchg
mov
popa
in
pop
sub
mov
add
cmp
pusha
add
stos
add
mov
mov
test
addr16
xor
jecxz
addb
in
jmp
out
jne
pop
aam
cmc
imul
int3
out
jp
ds
add
sbb
push
xchg
push
add
out
or
add
adc
movsl
cmc
push
adc
add
outsl
scas
mov
and
adc
mov
daa
mov
imul
mov
add
mov
cwtl
xchg
es
fnstsw
mov
js
dec
sahf
and
sbb
push
mov
fs
mov
repz
mov
mov
pop
stos
jne
xor
and
mov
xchg
repz
inc
pop
ret
inc
add
mov
insl
std
shll
jmp
and
cmpsl
adc
mov
adc
mov
push
mov
adc
mov
pop
cmpsb
fdivrl
sub
add
ljmp
add
mov
dec
scas
mov
test
and
mov
sub
sub
mov
cmp
push
mov
mov
xchg
add
mov
lock
adc
mov
mov
add
cmp
xor
shll
xchg
push
daa
aaa
imul
mov
or
inc
pop
addl
cmp
iret
push
sbb
pop
cld
xchg
popa
mov
cmp
and
xor
sub
mov
add
xchg
mov
loope
inc
cld
dec
out
xor
fsts
and
scas
ret
add
loopne,pn
mov
jne
inc
dec
inc
add
popf
nop
add
lcall
inc
lret
ljmp
sbb
cmp
jb
mov
testl
sub
add
cld
pop
cltd
or
pop
jno
cmp
sbb
mov
imul
xlat
mov
cwtl
jns
dec
inc
icebp
xchg
rolb
pop
or
inc
sti
add
add
mov
loop
mov
mov
out
jns
add
dec
inc
mov
gs
or
cltd
xor
mov
es
xor
add
daa
fisttpll
in
add
pop
loope
add
je
dec
mov
sub
xchg
dec
cmp
add
inc
test
lret
mov
push
mov
test
dec
negl
lcall
add
adc
push
cmp
push
and
mov
push
pop
and
mov
mov
js
push
cmp
mov
and
test
pop
jle
fstl
add
mov
mov
sbb
mov
mov
add
and
dec
cmc
imul
push
lcall
pop
inc
xchg
nop
add
movlps
mov
xchg
and
add
stc
mov
mov
mov
hlt
dec
cld
xchg
add
xchg
add
push
out
movsl
sbb
bswap
xchg
rolb
mov
rolb
mov
fsubs
iret
dec
out
sub
pop
mov
mov
lret
rolb
mov
scas
cwtl
outsb
push
and
add
xor
mov
aaa
jecxz
mov
and
rolb
mov
add
add
or
enter
fisttpll
add
jle
jmp
xchg
jb
mov
mov
test
pop
outsb
dec
mov
jb
mov
add
rolb
mov
leave
mov
xchg
insb
mov
mov
mov
and
mov
inc
sbb
xchg
pop
pop
addb
ds
sahf
and
mov
add
xchg
cmp
push
pop
jo
mov
adc
addr16
lcall
popa
sbb
rolb
mov
mov
mov
add
or
in
adc
dec
jns
add
push
jne
push
sub
add
cli
jge
in
lret
lea
ja
add
mov
aaa
cltd
ljmp
stos
pop
dec
ds
add
add
in
jb
mov
rolb
mov
or
mov
or
mov
cltd
ss
mov
cmp
and
mov
adc
mov
xchg
xchg
scas
mov
mov
test
jnp
fnstenv
cltd
mov
and
addb
push
xchg
pop
stc
neg
cmc
and
mov
add
adc
popf
dec
aas
cltd
mov
iret
mov
fildll
lret
inc
xor
addb
push
push
push
adc
mov
loope
sahf
mov
xchg
movsb
inc
add
cmp
in
sbb
les
or
push
ret
popf
xor
jmp
adc
loop
mov
std
loope
sub
stos
div
xor
lods
inc
cs
or
xchg
add
fst
xchg
add
add
clc
scas
int
or
dec
or
mov
jp
lret
nop
add
add
jae
mov
add
test
add
mov
imul
mov
loope
mov
test
push
jecxz
sahf
add
mov
sbb
add
mov
xor
mov
dec
pop
rolb
mov
mov
and
add
aam
add
shll
testb
mov
jecxz
add
arpl
sbb
add
mov
call
inc
mov
arpl
cltd
in
cmp
mov
mov
les
sub
add
mov
add
add
xchg
mov
dec
lds
add
pop
mov
jne
add
mov
add
aad
xor
mov
add
int3
int
jb
mov
ja
es
xchg
repz
pop
push
and
clc
jge
cwtl
mov
and
jns
add
push
push
inc
jle
jno
repz
mov
mov
fwait
sub
fs
aam
and
pop
sub
in
xchg
xchg
or
add
jl
dec
enter
loope
lahf
jne
mov
mov
in
jno
add
mov
xor
mov
mov
in
fucomip
addb
les
push
add
mov
mov
inc
adc
mov
add
add
iret
xchg
push
mov
xchg
repnz
out
push
add
add
jg
aad
push
mov
mov
cltd
pop
fistps
cmp
cmpl
repz
mov
mov
sahf
daa
sbb
popa
in
push
add
rolb
mov
add
mov
push
xchg
test
insb
pop
xchg
push
add
fcomps
int3
incb
mov
cmp
loopne
mov
pop
dec
and
mov
adcl
stos
mov
dec
sbb
rolb
jns
movl
cmc
fyl2x
jb
mov
mov
cmp
mov
or
call
add
iret
xchg
add
jecxz
add
add
outsb
add
pop
lahf
lea
inc
les
add
dec
fistpl
push
pop
dec
fildl
arpl
lds
cmp
xchg
test
mov
divb
mov
icebp
cmp
rcll
pop
jbe
ljmp
cwtl
sbb
push
jg
outsl
nop
add
cmp
adcl
jne
aaa
out
cmp
mov
add
pop
mov
mov
in
mov
add
mov
xor
mov
fs
add
pop
pop
mov
mov
testl
cmp
loope
jg
imul
add
mov
mov
lds
xchg
mov
add
out
adc
inc
add
clc
push
mov
cmp
dec
jmp
mov
add
add
mov
lret
inc
add
idivb
mov
pop
fwait
outsl
sti
adc
mov
and
mov
arpl
loopnew
mov
or
mov
sub
mov
pop
lock
sbb
das
aas
mov
scas
jo
mov
insb
mov
jae
inc
push
movsl
jne
inc
je
or
jg
mov
cmc
mov
movsb
lock
xor
jno
out
add
leave
nop
add
fisubl
mov
pop
ret
int
add
mov
mov
fwait
xchg
cmc
and
mov
xor
mov
adc
cld
jno
adc
mov
rolb
mov
sahf
mov
mov
adc
rolb
mov
jbe
sub
inc
cmp
inc
mov
popl
mov
adc
mov
add
mov
mov
mov
jecxz
add
mov
adc
ret
test
add
add
jns
cli
sbb
adc
leave
jne
repz
data16
jge
mov
add
jg
add
in
mov
sbb
push
outsl
mov
in
fs
inc
and
add
rolb
mov
cmpsb
mov
fimuls
aad
into
hlt
xchg
roll
repnz
or
jl
xlat
dec
dec
mov
leave
pop
lock
jns
pop
push
test
rol
mov
lds
repnz
cmp
add
xchg
lahf
cmpsb
jmp
sub
adc
mov
cmp
stc
push
repz
add
out
in
or
jbe
sbb
dec
mov
add
rolb
mov
add
xor
mov
inc
add
mov
in
hlt
clc
sbb
mov
xchg
aam
jne
add
mov
dec
mov
rcr
movsl
cmpsb
mov
mov
xchg
mov
inc
and
mov
jg
adc
iret
mov
les
cmp
cmpsb
flds
ss
pop
sub
add
mov
mov
mov
dec
xlat
es
into
xor
push
add
jp
lcall
mov
add
inc
rolb
bound
mov
mov
mov
lock
add
xor
fsubs
call
mov
mov
fsubr
mov
mov
pop
out
add
add
sub
add
loop
mov
loopne
mov
mov
add
loope
mov
sbb
lcall
jns
cwtl
movsb
or
pop
in
jno
add
addl
testl
mov
add
mov
sbb
mov
ljmp
test
pop
adc
stc
sbb
addb
add
add
sbb
stc
adc
leave
aaa
sahf
dec
dec
aas
cmp
js
ja
in
enter
div
mov
test
fistl
add
and
mov
lea
mov
push
cmp
loopne
mov
enter
mov
xor
mov
mov
sbb
add
popf
xchg
ret
push
mov
dec
insb
loope
add
pop
adc
cmp
pop
into
lds
in
inc
cwtl
push
je
pop
out
or
xor
fwait
ljmp
add
subl
inc
cs
jg
mov
xchg
ds
andl
push
jae
sbb
add
fsubrl
dec
rolb
mov
into
mov
add
mov
xor
mov
aam
jno
mov
add
repz
nop
add
ldmxcsr
push
cmp
add
mov
xchg
xor
lock
shl
leave
insl
gs
push
add
add
and
sub
dec
iret
iret
data16
dec
movsl
fdivrs
test
cmp
pop
and
fdivrs
popa
jo
mov
add
mov
enter
mov
imul
cli
push
mov
ds
and
out
and
aam
movsl
shll
jne
mov
and
mov
addps
lret
cmp
add
sub
mov
out
add
add
cmp
add
push
in
insb
add
mov
add
out
cld
push
pop
data16
in
jg
lods
out
ja
gs
mov
andnps
call
add
daa
jno
cmpsb
js
push
sub
ds
aad
and
add
jne
add
fs
lea
pop
out
and
push
cmpsl
xor
pop
in
cmpsl
lock
rolb
mov
jno
daa
sbb
lret
add
mov
sbb
shll
fcomps
push
lcall
pop
push
addb
inc
mov
add
jp
sti
pop
in
outsl
mov
mov
add
dec
or
mov
add
inc
cmp
stos
and
mov
and
mov
mov
sub
and
mov
jae
pop
movsl
scas
lahf
add
mov
jb
mov
sbb
add
mov
insl
jmp
add
add
mov
mov
aas
out
out
pushf
lcall
repz
test
xor
cmp
mov
jecxz
and
cmp
mov
mov
adc
lods
stos
fwait
test
xchg
mov
test
add
lcall
add
jnp
in
cmc
inc
es
cmpsl
ret
dec
inc
inc
adc
pop
cmc
or
add
push
add
inc
sub
mov
mov
push
lcall
xchg
fmull
imul
mov
add
add
cli
or
jl
lock
mov
push
add
iret
pushf
xor
mov
mov
mov
add
pop
push
repnz
mov
dec
aad
fsubrl
add
xchg
les
dec
mov
inc
out
dec
addb
mov
mov
inc
lock
scas
mov
sti
out
add
mov
mov
shll
fnstcw
add
mov
cmp
add
xchg
mov
cmp
mov
xchg
cmp
scas
addb
aad
leave
jmp
add
jo
mov
xchg
lea
fildl
dec
push
sub
push
jo
mov
dec
dec
roll
pushf
inc
add
adc
mov
lea
mov
add
add
mov
test
add
mov
push
fldcw
aaa
jp
pop
jle
mov
mov
mov
cs
mov
adc
mov
xchg
add
sub
add
test
or
lret
cmpsb
frndint
call
add
mov
mov
add
mov
jno
in
add
sbbl
rolb
outsb
popf
enter
pop
mov
mov
sbb
mov
sahf
outsl
filds
or
dec
fstpl
fnstsw
add
and
enter
or
sbb
ficomps
add
dec
mov
mov
add
and
push
es
mov
mov
and
mov
add
add
mov
mov
lahf
pushw
jmp
dec
stc
int3
push
xchg
add
push
test
and
push
push
out
mov
mov
mov
jl
fdivrs
lret
mov
dec
popf
sahf
lahf
mov
dec
mov
mov
mov
mov
pop
dec
jb
mov
test
or
sbb
mov
mov
pop
adc
sub
cmp
push
aad
imul
cs
xchg
scas
jb
mov
lahf
aam
add
mov
daa
pop
in
rcll
dec
mov
mov
or
add
aaa
jns
rorl
loopne
mov
dec
repz
jmp
test
std
sub
add
sub
mov
push
push
mov
cmc
ja
add
mov
out
sub
fiaddl
xchg
xchg
in
adc
mov
test
dec
repnz
add
aaa
mov
sub
jnp
xor
add
xor
add
jmp
push
sub
jae
mov
rolb
mov
sti
mov
push
call
add
mov
fdivr
adcl
mov
xorl
mov
xor
mov
das
sub
lods
mov
out
hlt
in
scas
or
std
mov
xchg
ss
sbb
cmp
add
add
sarl
add
test
test
hlt
sbb
sub
mov
mov
push
sahf
jb
mov
add
dec
push
sbb
testb
sub
mov
shr
scas
mov
loope
jmp
in
jmp
pop
sub
cmp
loopne
mov
int
cli
mov
ret
outsl
es
stos
mov
movsb
fcmovnbe
aas
push
bound
mov
sub
fstl
add
aad
rolb
jl
push
outsl
xchg
add
int3
adc
adc
mov
popa
add
sub
imul
out
insl
xchg
rcrl
cmc
repnz
loope
notl
ja
rorl
pop
cld
test
add
lahf
dec
nop
add
daa
mov
cmp
mov
inc
ret
pop
cs
add
das
dec
sbb
out
cmp
pop
sbb
add
sub
and
mov
inc
xchg
hlt
xchg
xchg
loope
call
inc
add
clc
xor
xlat
jns
inc
in
into
scas
mov
movl
pop
jno
jno
add
outsb
fs
adc
adc
out
inc
add
adc
mov
ds
in
xor
mov
mov
lahf
nop
add
aas
loopne
mov
stos
addb
mov
jb
mov
mov
mov
xor
jmp
mov
pop
inc
popa
lret
add
dec
pop
fsubrs
add
rorl
data16
jae
fs
fxam
cmp
lret
pop
sub
loopne
mov
xchg
mov
mov
je
and
inc
lret
jmp
add
sahf
dec
xchg
popa
xchg
ret
inc
add
mov
mov
push
xor
mov
sbb
sub
add
fdivrs
imul
jmp
mov
mov
add
cmp
into
pop
fdivs
xchg
add
add
add
dec
scas
adc
mov
jno
in
je
mov
mov
mov
xor
mov
add
push
adcl
xor
mov
mov
cmp
mov
add
adc
fmuls
add
push
imul
adc
mov
jmp
adc
mov
add
cmp
ja
stos
fsubl
mov
iret
mov
cmp
aad
std
push
add
inc
add
push
test
fcoml
inc
mov
mov
xor
add
pop
or
call
negb
jle
add
xor
mov
mov
xchg
out
jmp
js
mov
push
outsl
push
or
add
loope
add
dec
jg
inc
add
mov
add
hlt
dec
add
mov
les
mov
cmp
notl
xchg
nop
add
pop
pusha
add
and
fstl
push
add
xchg
mov
fs
mov
rolb
mov
jne
ss
ja
jl
dec
enter
pop
xor
mov
add
inc
lret
insb
lods
sub
pop
outsl
out
jge
roll
mov
add
ret
sbb
sbb
jl
jnp
movsl
mov
test
push
dec
stc
xchg
add
and
mov
inc
cwtl
jns
jo
mov
addb
cmp
inc
out
add
xchg
xor
mov
mov
out
in
aam
outsl
mov
dec
popf
add
mov
add
inc
nop
add
pop
dec
cwtl
test
dec
jg
sbb
mov
add
or
add
pop
lret
pop
jo
mov
or
jo
mov
sbb
jb
mov
add
sbb
rcll
aam
add
mov
cmp
xchg
mov
mov
gs
push
add
xlat
lcall
and
jl
jo
mov
push
inc
cmp
or
dec
push
mov
out
popf
sub
and
mov
xchg
mov
fstps
cmp
jb
mov
cmpsl
mov
mov
sbb
mov
repz
push
arpl
pop
or
cld
xchg
add
lea
gs
lea
pop
adc
in
or
mov
mov
add
add
or
lods
pop
subl
in
loopne
mov
gs
int
add
pusha
add
mov
mov
insl
dec
adc
mov
fsts
cmp
lret
xchg
into
ljmp
mov
add
daa
out
xor
loopne
mov
jne
fiaddl
add
fdivrs
cmp
stos
ret
notb
push
add
lcall
cmpsb
mov
mov
test
in
xor
es
add
inc
icebp
dec
and
push
rol
arpl
xchg
add
movsb
adc
mov
add
sbb
mov
mov
add
pop
inc
push
or
xchg
cmp
rolb
mov
mov
maskmovq
pop
dec
stc
sbb
sbb
dec
or
sub
mov
add
out
jmp
outsl
mov
lcall
add
jmp
insl
mov
sub
scas
fwait
into
mov
cmc
pop
or
xchg
imul
add
stos
mov
add
adc
ret
sub
pop
push
mov
cs
enter
mov
add
dec
pop
pop
inc
add
push
addb
mov
mov
popf
inc
hlt
mov
in
xor
sbb
pop
fnsetpm(287
adc
add
arpl
push
shll
testb
scas
mov
mov
mov
push
xlat
stc
jnp
inc
inc
add
mov
push
pop
sub
xchg
add
add
xchg
mov
ja
add
pop
xchg
mov
test
imul
mov
into
cmp
fisubrs
xor
jle
add
imul
add
lods
addb
popa
mov
jecxz
fidivrs
jbe
sbb
mov
cmp
add
jb
mov
mov
jno
sub
add
loop
mov
add
add
mov
mov
add
cli
imul
add
mov
mov
mov
inc
dec
mov
daa
aam
xor
mov
pop
jno
in
and
mov
cmp
mov
add
int
add
lds
sbb
sbb
inc
mov
ret
sub
mov
imul
dec
xchg
dec
rolb
mov
movsl
jmp
xchg
lret
mov
cmp
add
mov
fldl
add
add
xchg
add
ftst
imul
sbb
mov
rolb
mov
add
add
mov
add
add
nop
add
mov
add
js
add
ret
adc
add
mov
loopne
mov
push
ss
sbb
sbb
push
stos
nop
add
jnp
mov
add
xor
in
icebp
xchg
enter
xlat
sbb
repz
sub
lds
add
fcomi
add
fnstcw
mov
add
mov
pop
mov
out
insb
add
mov
popa
js
mov
add
add
sbb
fidivl
stc
imul
mov
arpl
int3
das
out
or
push
arpl
fisttpll
pop
dec
push
add
into
push
outsb
inc
or
or
ljmp
jp
mov
enter
fnstsw
push
dec
scas
or
cld
jmp
popf
insl
xlat
pop
cmpsb
push
pushf
mov
std
xchg
add
into
xor
mov
jge
add
mov
out
popa
not
sti
es
add
rolb
sbb
shrl
mov
mov
negl
xor
mov
inc
dec
mov
xchg
or
pop
and
repnz
and
arpl
in
setns
imul
mov
mov
add
dec
stos
push
xchg
mov
mov
mov
jecxz
das
sti
pop
cwtl
mov
iret
adc
mov
mov
cwtl
and
add
mov
mov
sbb
jne
insb
bound
mov
add
cmp
add
dec
test
mov
jg
or
mov
mov
push
int
test
adc
xor
mov
cmp
add
repnz
add
out
std
fstps
repz
daa
std
bound
mov
dec
xor
and
or
cmp
stc
mov
or
jne
xchg
icebp
xchg
add
and
add
jmp
xlat
icebp
lock
cmpsl
ret
sub
jbe
scas
jmp
mov
enter
add
mov
or
int3
out
add
mov
xchg
push
cltd
pop
and
mov
mov
dec
out
xchg
adcl
mov
xorl
pop
cmp
mov
test
pop
cmp
mov
sbb
enter
add
xor
mov
aad
mov
mov
jno
lock
mov
addb
mov
mov
jmp
lock
xchg
mov
testl
popf
call
and
xchg
mov
orl
push
add
lret
sub
addb
ja
decb
pop
jg
add
ss
xor
mov
je
fwait
popa
mov
mov
aam
xor
add
test
jae
or
push
scas
cmp
mov
jmp
xor
mov
inc
jmp
xor
aam
push
lret
hlt
jmp
add
pop
and
xor
add
dec
jp
dec
stos
add
mov
jno
pusha
add
sti
into
dec
or
mov
add
lods
loope
out
mov
add
and
addb
mov
dec
pushf
and
mov
lret
xlat
push
arpl
pop
pop
pop
sbb
inc
mov
jmp
push
addb
mov
add
jae
cld
add
mov
clc
xlat
dec
negl
xor
mov
jle
add
mov
add
xorl
mov
mov
popa
fwait
pop
cli
inc
xor
jbe
hlt
je
pop
fimuls
in
pop
repz
mov
dec
dec
inc
je
shl
xchg
add
mov
cltd
adc
mov
int3
cmp
addl
lea
jbe,pn
sahf
aaa
test
lret
mov
mov
inc
lcall
shrl
and
scas
inc
add
jg
cmp
jg
leave
mov
fcoms
sbb
cmp
add
daa
mov
push
mov
stos
push
push
add
or
ss
mov
xchg
and
lret
xor
jbe
jo
mov
fdivr
loop
mov
push
and
and
mov
enter
add
inc
test
rolb
cmpsl
sbb
leave
addb
xor
ss
xor
iret
xor
sub
jp
sub
add
mov
or
into
mov
inc
sbb
mov
xchg
add
leave
jl
or
cld
lods
and
rolb
mov
ret
leave
xchg
xor
lea
in
xlat
xchg
cli
mov
pop
or
mov
sbb
jno
cwtl
test
mov
subl
mov
xlat
mov
mov
in
add
pop
xor
mov
arpl
sub
adc
xchg
inc
pop
in
xchg
or
icebp
pusha
add
incl
cmp
mov
in
insl
dec
jg
push
add
and
sahf
je
daa
and
inc
jle
and
mov
mov
or
add
notl
scas
inc
repz
lods
inc
add
in
fmul
sti
jne
js
add
cmp
lcall
add
orl
lods
and
mov
xor
loopne
mov
jg
lret
in
sti
xchg
jmp
mov
arpl
add
mov
rolb
mov
jecxz
sbb
add
xchg
push
ret
jbe
rolb
mov
mov
mov
mov
xor
mov
pop
sub
jne
xchg
add
add
push
add
callw
mov
nop
add
fdivrl
mov
mov
jno
pop
and
add
mov
aam
dec
add
mov
xchg
mov
add
mov
rorl
push
or
lods
inc
push
mov
mov
aas
inc
jne
dec
ja
cs
je
pop
pop
push
jbe
push
int
lods
bound
mov
jecxz
outsl
adc
mov
or
mov
stc
and
add
les
aas
mov
mov
xor
mov
loopne
mov
ss
jo
mov
int3
jp
mov
rolb
mov
mov
pop
notl
add
int3
jns
add
nop/reserved
inc
popf
pop
insb
xchg
stc
into
cs
jns
mov
call
add
es
push
add
stos
xor
push
daa
push
test
mov
push
jo
mov
repnz
mov
add
cmp
add
jg
int3
sahf
test
xchg
ret
mov
lods
nop
add
add
pop
mov
movsb
into
push
inc
mov
lahf
faddl
mov
lcall
xor
addb
or
mov
pop
sbb
add
dec
pop
mov
adc
add
mov
push
mov
or
mov
jns
rolb
mov
dec
xchg
loop
mov
add
mov
shrl
push
jge
xchg
dec
xchg
add
imull
insl
lock
into
je
sti
ret
cmp
cmp
ss
add
ja
out
fldcw
in
fimull
pushf
cli
add
mov
pushf
mov
or
in
mov
stos
movsb
sub
add
mov
add
sbb
add
ja
jmp
or
loope
fimull
mov
mov
aad
idivl
inc
adc
movsb
out
xchg
xor
cmp
rolb
cmp
jmp
mov
fimull
add
adc
inc
inc
jb
mov
jmp
mov
sbb
add
mov
jecxz
add
xor
mov
push
jnp
imull
rolb
mov
push
dec
dec
cmp
add
dec
lcall
push
sub
add
and
sbb
push
jo
mov
mov
xor
cmpsl
cmp
movsl
pusha
add
rolb
repz
or
add
pop
loope
ret
jno
or
repz
push
addb
cs
scas
or
pop
in
scas
inc
cs
add
sbb
clc
mov
out
cld
loop
mov
sub
addb
ds
push
cmpl
mov
rolb
fdivs
insb
xchg
sbb
mov
cmpsb
call
imulb
mov
xor
mov
gs
inc
bound
mov
test
dec
jo
mov
sahf
sub
mov
dec
or
add
mov
add
inc
lds
sbb
add
cli
in
add
rcl
push
adc
mov
add
add
pop
push
add
mov
add
add
push
add
jmp
imul
or
sbb
add
rolb
addb
fdivr
dec
or
pop
mov
jnp
sub
mov
repnz
sub
das
inc
add
daa
mov
fdivrp
adc
mov
das
rcrl
mov
add
xlat
fwait
push
adc
mov
cli
inc
xchg
push
sbb
sub
mov
or
bts
int3
mov
aad
cmpsl
sbb
daa
and
in
mov
mov
add
fs
outsl
insb
push
adc
mov
imul
popl
dec
aaa
incb
inc
add
add
dec
scas
pop
xlat
iret
pushf
in
cmc
jae
add
movsl
bound
mov
fwait
cmp
mov
sbb
xor
sbbl
and
mov
add
cmc
mov
push
mov
sub
ficoms
mov
dec
xchg
add
and
mov
jne
aad
stc
push
jae
add
je
hlt
jg
inc
jno
inc
and
jl,pt
xor
in
roll
fldenv
pop
sbb
pop
sbb
fst
add
push
aam
add
jmp
mov
push
sahf
and
fisttpll
xchg
mov
add
rcrl
add
mov
xor
bound
mov
push
add
pop
dec
and
add
sbbl
sbb
push
lret
test
lret
pop
inc
mov
sbb
ret
pusha
add
or
mov
shr
jo
mov
or
sti
aad
push
insl
push
dec
aad
add
rcrl
mov
adc
movsb
xor
mov
mov
jb
mov
mov
adc
mov
test
cmpsb
pop
repz
data16
mov
iret
mov
sbb
add
imul
xor
mov
xchg
loope
pop
jns
jns
lds
imul
stos
mov
add
mov
rolb
lcall
xor
lahf
jl
repz
fidivrl
sbb
pop
insb
push
add
add
mov
mov
notl
pop
jb
mov
lret
mov
mov
pop
and
mov
add
mov
ret
std
outsl
je
mov
mov
lods
rcrl
jae
sub
mov
std
outsb
shll
add
push
mov
fidivrl
jl
jg
xor
and
addb
sbb
repnz
clc
push
push
add
mov
cli
xchg
xchg
ljmp
dec
outsb
lret
jg
push
xlat
in
lcall
into
mov
mov
popl
lcall
insl
mov
mov
cmp
out
les
add
pop
fnsave
add
int3
mov
and
cwtl
jp
lods
icebp
sahf
outsl
pop
sbb
push
add
mov
add
add
imul
repz
scas
mov
sbb
dec
jmp
outsl
in
mov
add
mov
mov
xchg
add
mov
jmp
cmp
xchg
filds
enter
dec
jo
mov
sbb
mov
out
mov
rolb
mov
add
xchg
fidivrs
and
pop
stos
hlt
sbb
xor
fsub
jns
test
push
add
ret
sbb
bound
mov
jecxz
xor
xchg
sub
add
mov
sbb
add
xor
stc
cs
inc
cmpsb
sbbl
mov
add
mov
mov
rcll
xchg
add
dec
mov
push
cmc
add
dec
out
fadds
add
pop
pop
push
cmp
and
mov
mov
mov
add
xor
repz
lret
xchg
add
mov
ljmp
push
add
mov
movhps
les
sahf
out
cs
mov
cmp
xor
add
add
mov
cmp
pusha
add
mov
sti
and
add
je
fwait
popf
inc
cld
jecxz
fimull
and
mov
pop
and
add
mov
rolb
mov
in
xor
addb
adc
mov
mov
aam
xchg
mov
and
in
add
or
dec
nop
add
add
mov
mov
cmp
loope
pop
jp
add
lods
scas
dec
loope
rolb
mov
addb
mov
dec
sub
sbbl
mov
mov
repz
mov
add
lods
lods
cld
and
mov
shll
xor
add
mov
lcall
lock
rolb
mov
add
jae
dec
imul
mov
xlat
jnp
cmc
mov
add
or
cli
sbb
nop
add
adc
mov
mov
ss
bound
mov
sub
add
mov
add
adc
cmpsb
int
adc
mov
xchg
test
mov
xchg
add
and
mov
add
test
addl
mov
add
push
sub
add
mov
icebp
dec
adc
sbb
sbb
add
sti
mov
add
mov
inc
out
jnp
syscall
mov
push
cmp
cmpsl
add
out
add
mov
mov
xchg
cmp
call
jne
rolb
mov
add
enter
mov
sbb
imul
xchg
mov
ss
mov
cmp
and
mov
fcoml
mov
add
arpl
fcmovnu
in
sub
je
dec
int3
mov
in
lods
scas
jp
stos
jmp
rolb
mov
mov
add
sub
add
mov
mov
rolb
mov
mov
inc
addr16
pop
mov
mov
dec
pop
iret
cmpsb
cmc
inc
outsb
in
pop
mov
add
outsb
adc
sub
mov
or
loopne
mov
cwtl
xor
mov
add
or
or
add
xor
mov
add
cwtl
jo
mov
pop
ds
jle
jp
repnz
and
add
nop
add
add
mov
imul
sti
loop
mov
aam
add
mov
mov
add
inc
add
adc
add
add
mov
add
loope
or
push
jb
mov
jb
mov
pop
rolb
pop
subl
in
fsubs
add
call
mov
outsb
fisttpl
add
mov
addb
rcrl
sbb
mov
mov
add
mov
mov
sti
dec
sbb
cmp
add
adc
mov
ss
mov
add
pop
dec
and
mov
sbbl
lea
add
repnz
add
mov
addb
inc
add
mov
add
fistl
push
xor
mov
ss
mov
subl
int3
pop
xor
add
sbb
ss
ljmp
xchg
jb
mov
inc
sub
add
dec
adc
lret
mov
xchg
pop
in
add
add
add
pop
sahf
jns
pop
mov
mov
jmp
dec
in
fwait
cmp
mov
nop
add
cmp
insl
push
add
ja
push
movsb
rolb
jg
mov
add
mov
mov
sbb
add
mov
mov
movsb
pop
xor
mov
xchg
inc
into
cmp
add
jo
mov
xchg
ljmp
adc
mov
repz
lods
cs
imull
xchg
mov
hlt
fwait
or
popf
xchg
pop
mov
add
movsb
outsl
dec
jg
push
fbstp
aam
add
dec
popf
mov
lock
pop
loopne
mov
mov
hlt
mov
add
add
adc
mov
pop
xor
inc
add
inc
ficompl
mov
movsl
addb
push
lds
mov
mov
mov
fcmovb
mov
test
arpl
add
mov
roll
dec
dec
into
aam
or
test
mov
mov
div
fldt
add
pop
mov
xchg
jnp
je
push
dec
loop
mov
and
inc
add
adc
mov
mov
pop
dec
pop
pop
inc
add
loope
xchg
leave
repnz
add
stos
or
aam
or
adc
and
mov
mov
or
push
xor
in
add
mov
test
jle
pop
mov
jmp
ds
add
mov
loope
fdivs
insl
jne
movsb
cmc
xor
mov
add
dec
lret
and
mov
fnstsw
movsl
or
sub
movsb
push
inc
jmp
sbb
jg
push
sbb
lret
mov
add
mov
pop
addb
jo
mov
dec
sti
push
out
pop
stos
mov
mov
mov
adc
mov
jge
jae
add
push
pop
idivb
and
mov
mov
inc
add
cmp
mov
mov
mov
sbb
add
mov
mov
mov
mov
or
and
mov
in
lods
jne
ss
invd
jno
adc
mov
imul
movb
pop
call
lods
daa
adc
outsl
mov
jp
pop
push
stos
mov
mov
add
mov
insl
popa
pop
insl
lods
fs
push
addb
rolb
mov
sar
mov
adc
mov
xchg
push
outsb
xchg
push
and
mov
add
mov
lods
sub
xchg
push
addb
adc
add
scas
xchg
xchg
or
popf
xchg
ss
cltd
fildl
pushf
xchg
xchg
lcall
loop
mov
arpl
add
cmc
cltd
inc
add
ds
imul
mov
int
adc
into
add
mov
mov
mov
cmp
add
fsubr
stos
scas
mov
add
mov
mov
add
mov
pop
or
ja
add
movlps
mov
sub
out
mov
decl
push
lret
aad
pop
add
dec
ret
push
add
adc
dec
sub
push
mov
scas
ret
inc
lcall
mov
mov
pop
lods
and
mov
inc
arpl
inc
pop
imul
and
fnsave
mov
or
add
mov
mov
fiaddl
jbe
jno
add
js
xchg
sub
mov
xor
mov
add
jo
mov
mov
mov
xor
lcall
sarl
loope
inc
xor
xchg
jecxz
mov
mov
mov
sbb
lea
ljmp
pop
or
roll
mov
inc
and
mov
lahf
xor
xchg
scas
cwtl
jnp
pop
fst
add
addl
sub
mov
sbb
int3
mov
cld
mov
cwtl
rolb
mov
and
xor
sub
mov
dec
or
jl
push
dec
cmp
idivl
xchg
xor
mov
add
cs
mov
dec
fwait
cmp
dec
push
cs
push
movsl
pop
data16
fwait
and
mov
sub
mov
xor
mov
push
adc
mov
add
jg
push
movsb
bound
mov
es
fisttps
mov
mov
outsl
mov
xchg
push
shrl
test
loop
mov
add
xor
mov
std
sub
aad
out
adc
push
repz
jb
mov
push
push
mov
mov
inc
add
add
sahf
jo
mov
add
aas
cmpsl
pusha
add
mov
mov
xchg
lock
cmc
jae
rolb
test
cltd
rolb
mov
fiaddl
jl
add
insl
mov
mov
dec
mov
sbb
mov
jle
sti
pop
mov
sub
push
add
imul
aam
xor
push
add
xchg
out
movsl
or
add
mov
popa
mov
push
add
insl
fcmovbe
insb
cmp
pop
aad
add
dec
mov
aaa
jge
jle
loop
mov
add
mov
adc
and
jecxz
push
mov
jmp
push
push
and
mov
add
add
pushf
mov
mov
sbb
sub
add
mov
ss
sbb
jno
data16
mov
lcall
or
xor
mov
mov
mov
sub
sahf
mov
push
cmpsl
cmc
das
in
call
test
sbb
dec
pop
sti
sbb
fsubs
fisttpl
push
dec
xor
mov
sti
popf
mov
mov
ret
sbb
repz
int
ret
mov
std
cmp
scas
out
push
lea
icebp
aas
xorl
inc
add
enter
mov
mov
scas
jnp
jae
stos
sbb
rol
mov
popl
inc
addb
jecxz
loop
mov
xchg
or
jp
and
jg
in
xchg
add
mov
xchg
pop
inc
mov
sbb
mov
scas
rolb
mov
cmpsb
cmp
pop
add
mov
insl
xor
mov
mov
mov
jb
mov
fldl
movsl
sbb
popf
sbb
pop
push
addl
adc
mov
add
cmp
sbb
pop
add
mov
jns
cmp
or
ja
add
jne
mov
in
push
add
mov
std
cmp
sub
mov
xchg
inc
in
aad
jno
xchg
mov
addb
cmp
mov
jmp
imul
push
jno
sub
inc
addb
icebp
mov
mov
in
sub
mov
adc
mov
mov
sahf
dec
mov
jns
lods
ljmp
mov
mov
lcall
mov
test
rcrl
add
add
add
xchg
mov
mov
and
mov
dec
in
jg
inc
add
mov
push
push
mov
mov
push
cmp
mov
inc
mov
mov
sahf
mov
add
add
sbb
fwait
popf
jae
lea
add
bound
mov
and
test
mov
ljmp
insb
ret
and
xor
inc
enter
add
js
sahf
jbe
lret
push
mov
add
scas
or
cmpsl
aad
into
lahf
rcll
mov
imulb
je
out
test
repnz
mov
mov
daa
addl
dec
ja
cmp
add
and
mov
bound
mov
mov
add
negl
rol
jp
cltd
push
jnp
jb
mov
gs
and
or
hlt
gs
pop
pop
inc
repz
dec
mov
cld
sub
xor
add
mov
sbb
popf
lea
mov
test
push
stos
add
es
add
int3
movsb
xchg
mov
icebp
inc
add
add
dec
xor
jl
cmp
ficoms
stc
test
inc
out
jmp
imul
sbb
and
mov
push
add
push
add
mov
cli
test
jnp
or
add
mov
repz
add
add
mov
add
sub
fs
xchg
add
push
jl
push
sub
movsb
lods
in
mov
mov
sub
rolb
mov
lock
add
leave
mov
mov
loop
mov
add
add
pop
test
xchg
les
push
add
mov
xchg
lock
dec
inc
stos
rolb
mov
xchg
stos
push
xchg
jne
sub
stos
mov
mov
lret
sub
int3
mov
fwait
dec
jno
jb
mov
insb
loop
mov
mov
fldcw
stos
add
mov
call
inc
xchg
ret
data16
cli
call
mov
add
fnstenv
add
adc
pusha
add
xchg
xor
sbb
adc
jb
mov
push
push
mov
movsb
mov
outsb
outsb
xor
add
lret
jmp
mov
ds
add
push
push
mov
adc
cmpsl
test
in
scas
and
mov
add
mov
xor
inc
mov
aad
addb
mov
mov
add
mov
sub
fs
idiv
pop
out
push
dec
mov
out
add
shll
add
in
int3
popf
ljmp
mov
add
arpl
jge
icebp
push
mov
mov
add
mov
xchg
xor
into
cmpl
aad
jg
popf
push
cmp
mov
pop
jmp
addb
scas
push
add
inc
and
pushf
sbb
push
push
cwtl
xor
mov
repnz
bound
mov
mov
fwait
addb
loope
pop
inc
cmp
or
and
mov
mov
add
mov
dec
aaa
mov
scas
cmp
repz
xchg
mov
cs
add
push
mov
add
push
enter
div
fsubl
pop
test
fadds
cmpsb
xchg
sbb
loop
mov
sbb
adc
loop
mov
outsl
mov
pop
inc
add
mov
add
add
pop
mov
hlt
in
and
mov
mov
sti
dec
pop
sub
cmpsl
lret
jo
mov
leave
jo
mov
rorl
push
add
mov
and
out
mov
lahf
int3
popf
pop
imul
rolb
mov
mov
and
mov
add
rolb
mov
in
lahf
pop
mov
or
lds
add
add
mov
dec
stc
adc
mov
addr16
and
adc
lds
incb
mov
pop
ret
jno
cld
imul
lods
call
lods
adc
add
inc
mov
dec
lds
jle
repz
jg
test
gs
ja
add
xor
mov
popa
mov
mov
adc
mov
mov
add
push
fsubp
jae
xor
sub
pushf
jbe
push
add
jge
mov
inc
lea
sub
mov
add
cltd
sti
dec
mov
test
pop
push
popf
or
in
enter
mov
mov
add
out
add
iret
cmp
xchg
mov
xchg
add
xlat
or
add
inc
mov
les
add
inc
cmpsl
jb
mov
mov
jns
xor
mov
mov
pop
mov
iret
dec
stos
mov
sbb
enter
sbb
nop
add
enter
mov
add
inc
mulb
jno,pn
adc
mov
add
push
adc
mov
inc
add
mov
push
jne
test
add
jge
add
jl
inc
add
das
sti
jnp
jne
jae
test
mov
cmc
pop
jno
mov
jecxz
mov
loope
out
add
icebp
leave
imul
lock
dec
or
mov
add
gs
outsl
out
jb
mov
adc
out
xor
cltd
cmp
jae
lahf
push
outsl
and
add
into
ja
add
sub
jne
jl
xor
push
movsl
icebp
addr16
ljmp
loope
dec
out
inc
adc
mov
inc
cmp
mov
cwtl
or
outsl
aaa
addb
add
mov
add
mov
mov
fildll
add
ja
adc
mov
frstor
mov
adc
xchg
incl
out
add
js
sbb
add
mov
pop
jmp
xchg
add
sub
sub
mov
mov
xchg
mov
ficoms
push
jle
dec
std
ret
ja,pt
outsb
fisubrl
cmp
and
mov
add
mov
push
fnstsw
out
jb
mov
jecxz
mov
jg
add
push
mov
sub
dec
mov
mov
adc
mov
sbb
add
or
mov
addb
pop
push
aas
inc
lds
jo
mov
scas
mov
rolb
inc
fldenv
dec
stc
pop
lods
ret
xchg
jno
sub
filds
mov
xchg
rolb
mov
call
loopne
mov
push
add
mov
cmpsb
inc
sub
add
mov
add
sub
dec
inc
mov
add
mov
mov
rolb
enter
add
jl
add
sarl
mov
cmc
sub
cmovb
mov
mov
addb
lret
mov
add
adc
out
clc
mov
sbb
and
mov
mov
jg
outsb
mov
or
mov
cmp
aad
fucomip
and
mov
les
sub
mov
rcll
popa
test
addb
icebp
cmp
inc
add
rcll
es
insl
loopne
mov
jg
jb
mov
mov
add
inc
cmp
out
pushf
pop
mov
sbb
inc
jo
mov
outsb
xor
into
cmp
add
test
jnp
movsb
lret
adc
mov
xchg
pop
adc
rep
mov
mov
les
add
mov
lods
imul
mov
pop
imul
mov
pusha
add
mov
add
addl
mov
jle
mov
iret
imul
sub
scas
and
mov
xlat
pop
repnz
mov
in
daa
aas
lods
addb
jmp
mov
insb
data16
mov
add
rorl
incb
mov
add
pop
adc
mov
cmp
jns
lcall
pop
xchg
mov
lret
cld
call
mov
add
push
fwait
push
sahf
xchg
aad
bound
mov
add
push
adc
dec
fsts
lods
sti
xchg
ljmp
mov
pusha
add
loope
sarl
pushf
sbb
mov
mov
pop
mov
mov
cmpsb
jbe
push
or
mov
test
jl
add
movsl
push
insb
fimuls
jns
add
stos
xor
cmc
mov
xchg
bound
mov
ret
das
mov
iret
out
dec
mov
add
push
ret
or
pop
cld
adc
mov
in
mov
test
fidivrs
adc
mov
add
xchg
bound
mov
std
dec
aam
loop
mov
add
ds
push
jg
xchg
add
ljmp
xchg
xchg
iret
out
dec
inc
hlt
mov
mov
jnp
movsl
fsubrl
test
addb
adc
sahf
lret
lds
call
fnstenv
icebp
inc
add
add
dec
cld
dec
insl
test
ret
daa
mov
popf
dec
scas
mov
jb
mov
add
add
icebp
jl
jae
mov
sarl
pop
sahf
rolb
mov
addb
movsb
js
add
les
pop
dec
and
and
pop
mov
jmp
xchg
lock
out
stos
inc
stos
fadd
jle
addb
pop
mov
jmp
jbe
jno
add
xchg
add
add
add
mov
pop
jns
hlt
dec
int3
mov
mov
mov
movsl
push
mov
mov
mov
push
out
cmp
add
mov
add
mov
jb
mov
dec
insl
and
add
adc
jecxz
inc
enter
bound
mov
js
xchg
mov
pusha
add
mov
xor
mov
jecxz
add
pushf
imul
add
mov
push
and
mov
jns
jmp
add
movsl
push
mov
mov
mov
mov
or
lods
rolb
mov
push
push
mov
out
add
stc
or
repz
pop
loope
push
ret
scas
stos
mov
jecxz
dec
outsb
cmp
rolb
mov
xor
mov
push
jmp
pop
lock
jns
inc
mov
loopne
mov
cmpsl
add
out
dec
sti
int
shll
xor
mov
fmuls
les
rolb
xor
arpl
push
inc
add
aas
mov
add
insb
cmp
out
dec
or
xchg
rolb
mov
fldl
mov
add
sbb
fidivrl
divl
cmp
mov
mov
lcall
add
pushf
stos
rolb
mov
lods
xchg
add
add
add
shll
add
mov
pushf
pop
mov
aas
pop
sbb
inc
jg
xor
mov
add
xor
mov
add
jns
push
and
shr
in
lret
in
outsb
hlt
ljmp
scas
es
adc
inc
add
add
lret
fisttpl
inc
cmp
lret
test
gs
jnp
in
aas
mov
movsl
sbb
fs
inc
add
das
ret
xchg
fcomp
adc
xor
mov
scas
sub
mov
mov
mov
xlat
jl
add
leave
loop
mov
push
add
decl
stos
jae
and
mov
mov
ror
or
and
mov
bsf
mov
mul
mulb
mov
out
mov
ja
pop
aam
es
fimull
cmpsb
sbb
and
mov
jmp
ret
hlt
imul
shll
mov
and
mov
xchg
lods
out
cmp
lods
inc
dec
aaa
inc
pop
mov
add
popf
jg
mov
or
pusha
add
call
aam
mov
add
and
repz
js
hlt
pop
ja
addr16
adc
mov
mov
xor
mov
and
mov
push
and
adc
inc
xchg
sub
pop
cmp
and
mov
add
or
add
mov
lods
lcall
rolb
mov
ljmp
add
cmp
in
inc
es
mov
mov
jo
mov
xchg
xchg
fdivl
lods
xor
jbe
cld
jne
std
sahf
push
sub
int3
les
inc
add
inc
add
adc
out
cmp
jnp
mov
mov
insb
stos
movsb
iret
int3
jo
mov
shll
add
or
cmp
xor
mov
mov
mov
sub
into
inc
pop
xor
mov
loope
xchg
lods
push
mov
adc
push
notb
dec
ficoml
leave
call
cli
dec
jl
fcoml
fmull
js
push
leave
sub
ret
adc
mov
jle
add
imul
or
add
mov
add
mov
or
pop
arpl
cmp
inc
inc
pop
adc
or
imul
jecxz
movnti
mov
insb
add
jns
add
push
pop
out
arpl
rolb
mov
mov
inc
lret
adc
mov
aad
out
inc
add
andl
inc
cmovle
stc
js
inc
add
push
outsl
cmpsb
push
add
add
xchg
add
fwait
sbb
mov
cwtl
or
cmp
mov
std
movsb
subl
pop
data16
mov
adc
pop
mov
test
xchg
fldl2e
aas
jl
jae
xor
ret
jne
mov
test
mov
xor
inc
add
mov
xchg
or
pop
xlat
ds
fnstenv
mov
aad
inc
push
xchg
add
xchg
add
mov
add
jg
lret
and
xlat
rolb
mov
xor
lcall
add
sbb
add
sub
dec
icebp
flds
mov
cmp
mov
addr16
cltd
inc
add
cmp
fdivr
ds
rolb
add
mov
adc
push
mov
ja
lds
inc
iret
xor
add
or
adc
mov
inc
call
idivb
lret
add
and
pop
leave
repnz
xor
jno
or
add
out
add
sub
cmpsb
inc
bswap
ja
xor
mov
jl
pop
loop
mov
mov
fcompl
adc
inc
dec
orl
cs
add
inc
and
mov
inc
xchg
push
pop
xchg
incl
jecxz
fwait
sub
iret
rep
xor
sbb
add
test
mov
add
add
repnz
or
stos
add
fimuls
gs
lret
cltd
xlat
push
add
mov
mov
jmp
jp
out
mov
add
dec
add
mov
loopne
mov
repnz
add
add
ret
xor
mov
add
mov
mov
and
add
sbb
ficoms
mov
add
add
mov
xchg
rolb
mov
add
lods
testb
gs
mov
xor
mov
test
xor
mov
ficoml
add
or
add
add
mov
jg
jnp
movb
add
imul
mov
mov
and
call
mov
add
add
mov
push
mov
inc
cmpl
add
je
aad
arpl
loop
mov
xchg
sbb
add
mov
adc
mov
add
add
insl
bound
mov
mov
mov
adc
add
mov
push
add
mov
adc
dec
dec
outsb
and
mov
test
add
or
setp
sub
addb
arpl
imul
sub
rolb
mov
jo
mov
add
mov
jge
sbb
dec
hlt
jp
pop
cmp
insb
add
mov
stos
fstpt
add
cmp
sbb
sbb
add
dec
push
rolb
mov
add
ret
out
add
mov
push
push
test
add
fidivrs
xchg
inc
sti
fdivr
jns
add
out
add
add
cld
rolb
mov
lcall
pop
xor
jg
push
xor
xor
mov
cmpsb
mov
fadds
add
mov
mov
mov
popf
adc
mov
pop
je
add
mov
mov
es
aas
in
push
and
mov
addb
std
and
outsl
xor
je
cmp
add
xor
mov
cmp
das
pop
cmp
adc
mov
or
push
pop
sti
lods
inc
pop
sbb
fisttps
add
aas
cld
add
out
mov
mov
stos
cmc
push
add
lods
jmp
mov
es
or
in
cmp
mov
push
jno
add
sbb
pop
ds
pop
addb
xchg
push
mov
rolb
mov
movsl
add
add
mov
jge
jno
add
iret
jo
mov
sbb
mov
add
add
out
mov
mov
add
test
mov
mov
xchg
mov
mov
jbe
push
mov
mov
xchg
xchg
out
imul
dec
idiv
into
lods
pop
into
mov
in
out
insb
jne
aam
xchg
pop
mov
dec
repz
test
add
stos
add
jmp
mov
add
add
mov
and
mov
cmpsl
mov
mov
lahf
sub
xor
mov
aam
pusha
add
mov
cltd
xor
icebp
mov
add
pop
es
lds
and
popa
xor
push
inc
add
inc
cmp
dec
out
sbb
pop
dec
js
mov
add
mov
dec
jns
dec
add
into
mov
mov
or
rolb
mov
mov
mov
add
cmpsb
rolb
mov
das
jmp
mov
in
adc
dec
and
mov
hlt
jmp
mov
in
movsl
jb
mov
jb
mov
sbb
pop
dec
mov
in
sbb
sub
mov
gs
cli
pop
pop
xor
std
test
xorl
mov
inc
add
mov
add
mov
or
lods
mov
cmpsl
mov
push
ja
loopne
mov
in
aad
nop
add
or
imul
icebp
jmp
addb
mov
movsl
add
mov
sbb
cmc
push
cli
fnstcw
into
or
data16
mov
and
fidivs
mov
add
push
pop
sarl
scas
rolb
mov
add
std
fld
add
fadds
xchg
fucomp
dec
popf
in
mov
adc
mov
pop
cli
fwait
andl
add
fwait
mov
xlat
sub
je
repz
sbb
stc
jnp
ret
push
fwait
out
jle
add
fldl
mov
mov
aad
mov
ret
cld
xor
mov
inc
test
std
xchg
mov
outsl
add
sbb
pop
xchg
dec
movsb
xchg
je
mov
dec
test
imul
or
in
push
add
add
add
push
cs
dec
pushf
mov
lea
add
push
xor
mov
enter
data16
fwait
adc
cmpsb
fwait
int3
xor
mov
das
push
and
test
xlat
adc
out
add
xchg
add
push
cmpsl
stos
fsubr
movsl
push
scas
adc
out
les
mov
pop
stos
arpl
fbstp
add
sub
cmc
jae
mov
fisubrs
jne
pop
lods
ret
mov
cwtl
jp
add
add
add
stc
mov
mov
jp
inc
dec
pop
lods
outsl
fwait
bound
mov
movsb
push
dec
leave
or
lock
jbe
lock
push
fldl
jo
mov
push
xchg
fisubrs
or
cmp
js
sahf
xchg
rolb
mov
jge
bound
mov
int
add
out
test
or
cmp
mov
bound
mov
mov
icebp
push
dec
incl
lods
scas
push
dec
jo
mov
add
dec
pop
jae
sbb
add
add
dec
incb
push
aam
pop
pop
mov
rolb
dec
inc
das
fldt
add
lds
mov
mov
ret
enter
push
fidivrl
jno
pop
pop
xchg
add
mov
pop
test
add
sbb
mov
gs
mov
mov
push
fistps
or
test
jnp
xchg
xor
push
bound
mov
inc
add
fidivs
scas
mov
mov
fldcw
lret
push
dec
cmpsb
stc
dec
lods
cmpsb
outsl
push
mov
add
jo
mov
push
add
rolb
mov
ja
in
mov
mov
pop
adc
mov
sbb
jnp
pop
bound
mov
push
pop
pop
cltd
jb
mov
imul
sahf
mov
add
dec
stos
ljmp
inc
pop
dec
push
add
mov
add
push
cld
push
mov
lret
push
dec
push
in
lret
or
jo
mov
icebp
popa
push
mov
out
inc
sub
mov
in
pop
dec
xor
add
aam
add
sahf
mov
inc
call
dec
addb
sbb
sub
test
mov
pushl
adc
mov
add
mov
mov
sbb
movsb
pop
adc
mov
pop
mov
pushf
int
xor
fistps
test
int
fucompp
mov
les
inc
mov
sub
mov
scas
loopne
mov
mov
pushf
arpl
mov
adc
aad
movsl
adc
add
mov
lock
add
lods
test
cmp
push
movsl
adc
and
mov
ficomps
dec
clc
push
or
sub
imul
mov
repnz
mov
rolb
mov
jge
stos
loopne
mov
add
add
repz
jb
mov
push
leave
jmp
scas
jg
sbb
fisttpll
jp
lcall
pop
call
dec
and
mov
mov
mov
pop
push
add
add
mov
mov
mov
mov
add
jo
mov
jg
sub
add
jno
mov
mov
ja
std
add
mov
sub
xchg
dec
adc
mov
pop
fdivl
add
jecxz
or
mov
mov
rolb
mov
addr16
rcll
gs
gs
popa
pop
sub
mov
leave
ss
ficomps
test
aad
repz
add
outsl
xor
pushf
ss
ficoms
mov
cmpsl
inc
add
mov
mov
clc
xor
add
dec
add
add
add
