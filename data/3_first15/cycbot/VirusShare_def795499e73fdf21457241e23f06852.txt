push
outsb
rorl
mov
dec
mov
mov
cmpsl
xchg
in
out
aas
movb
lcall
jle
add
add
mov
add
add
mov
sbb
sahf
jmp
add
add
popa
or
add
push
add
add
mov
jo
insb
hlt
add
add
mov
mov
arpl
add
cmc
adc
mov
mov
ror
xlat
adc
int3
fwait
sub
add
mov
arpl
pusha
add
les
cmp
mov
cmc
into
insb
cltd
outsb
std
lret
add
mov
mov
fs
bound
mov
add
mov
push
add
mov
popf
mov
add
add
add
add
mov
jns
add
hlt
add
mov
add
mov
adc
jl
les
jp
into
das
push
add
push
gs
cld
and
pop
es
add
jg
add
fbld
jge
add
enter
adc
dec
fcoms
das
fwait
jns
sub
std
scas
mov
incl
pop
push
imul
fisttpll
add
lea
mov
punpckhbw
pusha
add
add
dec
test
jle
mov
mov
add
daa
cltd
mov
jmp
add
repz
cli
lret
popf
rolb
sti
mov
add
add
mov
cmpsl
mov
add
add
xor
pop
mov
mov
add
in
out
leave
jae
repz
insb
popa
scas
add
add
popf
jge
xor
or
add
int3
int3
or
mov
pop
sbb
aas
das
out
mov
pusha
add
lret
pop
sub
pop
out
add
rcrl
lods
addb
mov
add
add
add
add
add
mov
mov
and
movb
xor
add
mov
mov
mov
fimuls
movsb
add
add
xor
cmp
test
add
sbb
or
dec
data16
xchg
loopne
and
mov
lock
dec
xlat
mov
int3
fisttps
test
adc
xchg
add
add
cmp
add
mov
sub
add
sub
adc
xor
jp
add
add
sbb
hlt
add
daa
stos
lahf
outsb
lahf
add
add
scas
daa
adc
jl
cmp
mov
cmp
mov
jne
stos
test
mov
pushf
call
adc
and
dec
inc
jle
sbb
add
add
and
add
jns
jno
add
lds
mov
je
cmp
pusha
add
add
addb
repnz
imul
lds
imul
add
and
fcomip
sbb
add
add
push
add
pop
dec
mov
cltd
sbb
std
inc
add
fucomp
push
insl
fwait
mov
shrl
fcmove
mov
mov
and
jbe
stos
out
hlt
add
pop
dec
clc
add
mov
pop
sbb
data16
xchg
add
mov
pushf
add
mov
xor
in
test
pusha
add
stos
inc
sbb
incl
mov
test
add
ret
add
push
pop
sbb
sub
mov
add
mov
mov
add
and
add
push
cmp
aas
fadds
add
icebp
or
addr16
add
sbb
adc
les
rolb
pop
dec
das
stc
pop
andl
sub
add
mov
jge
inc
mov
sbb
push
add
inc
add
xchg
mov
add
jbe
repnz
addb
test
fnstcw
cmp
addl
fs
dec
jne
lods
mov
ds
fsubrl
addb
repz
lock
mov
adc
ss
dec
xchg
add
add
inc
daa
xor
sub
icebp
xor
movb
add
add
add
insb
push
adc
xlat
call
mov
and
add
add
mov
jmp
add
jl
dec
mov
ret
lret
cmp
iret
js
dec
imul
add
jae
add
or
xchg
and
mov
dec
add
jne
mov
pop
dec
inc
add
add
xchg
out
cs
scas
addb
test
pop
xor
inc
add
filds
add
dec
in
pushf
push
add
inc
jle
fsubrs
test
sub
add
dec
lret
add
pusha
add
icebp
push
add
add
movsl
add
mov
loop
fwait
scas
popa
xchg
add
add
data16
add
insb
pushf
pop
push
add
in
mov
add
add
push
xchg
jns
dec
les
movsb
add
add
pop
and
mov
les
ljmp
inc
inc
jmp
mov
rcll
inc
daa
mov
push
sti
dec
xor
add
mov
mov
out
outsl
push
add
add
mov
push
add
add
out
push
mov
pop
addb
inc
jl
test
jmp
addb
ret
sti
popa
mov
push
or
cmp
inc
sub
jg
mov
in
scas
and
movsb
add
add
fnsave
mov
ret
hlt
add
aad
add
mov
pandn
push
dec
into
cmp
into
sar
or
pop
adc
aad
sarl
std
addr16
or
add
xchg
add
add
add
mov
mov
add
add
jnp
ja
sbb
fcomi
add
jmp
add
xor
jbe
lea
add
adc
and
push
xchg
add
aas
dec
mov
mov
add
je
sbb
push
add
add
pop
icebp
iret
mov
mov
pop
adc
rolb
addb
inc
add
jnp
adc
jo
nop
add
pop
jg
add
add
testb
movsb
add
add
add
pushf
push
aam
mov
inc
xchg
add
jne
xor
add
pop
push
add
add
pop
rcll
int
in
iret
icebp
xchg
add
pop
das
movb
adc
adc
fs
dec
inc
xchg
sahf
sub
add
and
dec
outsl
push
push
add
add
jne
add
mov
pushf
pop
inc
add
test
fistps
cmpsb
add
add
jns
add
hlt
add
xchg
cmp
jns
data16
add
mov
pop
mov
jmp
orl
or
arpl
xchg
mov
hlt
add
js
dec
cmpsb
add
repnz
xchg
add
push
inc
add
jp
add
lret
imul
stc
cmpsb
add
jnp
cmc
jns
jno
daa
jmp
in
push
stos
jge
add
jns
fcompl
xchg
add
adc
addb
push
dec
add
inc
mov
add
add
add
and
add
fsubs
inc
add
cmp
sub
lods
pop
xor
insb
shr
addb
add
mov
add
int
xchg
add
add
sti
fidivs
ja
insb
outsb
outsb
mov
hlt
add
sahf
pop
and
mov
scas
push
insb
jl
add
rolb
jne
add
add
cmp
add
sarl
add
mov
or
add
js
add
mov
push
add
xchg
add
test
push
add
add
ret
test
mov
aad
push
add
cmc
mov
imul
cltd
icebp
xor
or
add
imul
sub
out
ret
add
out
jne
sub
cmp
add
das
mov
and
mov
add
add
mov
hlt
add
fwait
jns
jae
testb
push
add
fdivl
add
arpl
outsl
mov
add
xchg
add
add
mov
pop
jnp
addb
mov
lods
push
sbb
add
cmp
sub
dec
and
stos
jp
add
nop
add
add
repnz
mov
in
cmp
add
mov
sbb
adc
dec
test
xchg
inc
add
sub
add
hlt
add
test
out
push
daa
loop
aad
xchg
add
mov
add
add
stos
sub
in
enter
mov
add
je
movsb
add
add
add
add
add
or
add
jle
add
mov
pushf
repz
mov
add
imul
add
add
and
movsb
add
mov
pop
mov
add
in
bound
mov
sbb
sub
fcoml
add
add
inc
xor
mov
mov
inc
add
popa
faddl
nop
add
push
movlps
mov
cmp
xchg
pop
jb
or
addb
loopne
sub
add
mov
inc
push
dec
pushf
cmp
mov
cmp
mov
add
jnp
sub
mov
xchg
cmp
inc
add
sbb
cmp
dec
sub
stos
jne
enter
mov
add
pop
icebp
cmpsl
jno
rcr
out
imul
addb
aas
fcmovnbe
insb
and
mov
pusha
add
adc
mov
out
pusha
add
xchg
jmp
bound
mov
mov
fdivrp
xor
mov
mov
jmp
enter
mov
in
movsb
add
add
push
push
cld
call
sub
mov
cs
es
ss
push
call
cmp
je
es
lea
push
cs
es
call
test
jne
jmp
lret
icebp
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
lea
add
repnz
mov
sub
mov
push
pop
push
push
jmp
jmp
add
add
or
jnp
add
leave
call
mov
in
cltd
xor
int
addr16
add
add
inc
out
sub
add
cli
jae
das
ljmp
add
add
mov
add
ret
mov
lret
mov
rolb
pop
mov
inc
add
outsb
imul
hlt
add
popa
dec
sbbl
adc
xor
ja
add
lret
add
xchg
xchg
repnz
jbe
movsb
add
cmp
ds
into
addr16
jl
rolb
inc
add
add
pusha
add
inc
add
add
ret
or
call
test
cltd
add
add
xor
aaa
mov
mov
xor
xchg
mov
enter
adc
fcomip
add
mov
mov
out
repz
inc
add
addb
add
mov
movsb
add
out
or
xlat
mov
add
push
mov
add
add
mov
cmc
lds
jl
add
mov
lahf
cld
clc
sahf
mov
sbb
pushf
and
cli
jmp
add
in
inc
loopne
mov
imul
or
pop
and
mov
adc
scas
mov
stos
push
add
pop
iret
or
add
sub
or
mov
les
mov
or
stos
imul
pop
and
and
mov
add
mov
adc
in
xor
lcall
add
add
aam
mov
out
jecxz
testb
scas
std
cmp
movsl
pop
sbb
addb
add
aad
add
jmp
hlt
add
fidivrs
push
add
sti
loopne
xchg
add
incl
data16
scas
inc
jbe
clc
inc
add
add
add
add
cmp
adc
int
add
pushf
adc
push
jmp
rolb
pop
mov
pop
and
fidivrl
dec
pusha
add
in
inc
add
mov
jmp
xor
call
aas
or
repnz
xor
mov
outsl
cwtl
mov
scas
mov
lds
dec
xor
fcmove
xor
cmp
jnp
push
add
add
xchg
xlat
dec
xchg
daa
pop
xchg
lock
add
add
add
add
in
sbb
add
add
andl
xor
sub
xlat
jmp
mov
in
mov
testb
sbbl
addb
in
out
mov
xor
xor
mov
outsb
and
dec
push
xchg
dec
push
pop
adc
push
jnp
add
pusha
add
or
add
loopne
std
notl
xchg
jb
je
sahf
lds
imul
cmpsl
push
add
mov
add
xchg
add
call
cld
jmp
add
add
add
xor
sti
imul
sti
inc
pop
inc
gs
xor
mov
add
cmpsl
add
and
add
add
mov
imul
add
add
push
aam
push
dec
fstpl
dec
imul
add
xchg
test
mov
xchg
in
adc
daa
push
push
add
push
mov
test
sub
jle
leave
inc
add
fidivs
add
aam
mov
add
movsl
testl
add
push
add
sbb
add
lcall
mov
push
adc
pop
and
or
add
and
imul
push
ret
sbb
add
dec
lds
push
add
add
mov
andnps
push
call
popa
xor
push
jmp
add
add
add
add
gs
int
add
pusha
add
and
call
sbb
push
cmp
sbb
add
add
add
sub
imul
mov
add
add
sbb
insb
sub
pop
inc
add
into
sbb
jne
or
pop
or
in
push
ds
cmp
pop
lds
add
add
dec
jns
add
jb
xchg
jns
pop
shr
push
or
mov
bound
mov
imul
add
les
cwtl
arpl
or
aam
leave
mov
sbb
sbb
cmp
add
add
jnp
add
mov
fidivrl
add
xchg
add
arpl
add
mov
inc
add
add
jp
imul
mov
jne
add
add
pop
popf
mov
add
jne
add
add
aaa
xor
cmp
xor
add
scas
test
add
mov
pop
sub
add
mov
add
aam
call
sub
testb
mov
ds
add
push
add
dec
push
add
push
cltd
or
add
arpl
loope
add
mov
subl
call
addb
out
mov
fidivrs
dec
sbb
add
pop
loope
loope
push
add
add
sbb
add
daa
jb
test
adc
mov
aaa
inc
add
add
fsub
add
add
add
add
push
add
fsubrl
enter
add
rorl
ret
inc
add
stos
das
inc
add
pop
sub
cld
in
inc
add
mov
dec
fstps
and
mov
xchg
xchg
add
push
jae
aaa
in
cltd
jns
push
ret
and
mov
rolb
inc
mov
aas
xchg
stos
push
in
xor
out
xchg
cld
mov
jle
dec
mov
ret
push
add
cmp
and
loop
adc
xor
push
adcl
dec
mov
add
add
inc
int
pop
cmp
add
mov
push
adc
ds
lds
mov
or
or
cmp
fstps
lahf
pop
adc
lds
sbb
loopne
ficoml
out
dec
add
add
mov
sbb
mov
mov
repnz
lods
int3
jbe
dec
jg
sub
add
mov
add
add
out
pop
xor
xor
js
jmp
add
fwait
int3
sub
adc
popf
movb
add
adc
dec
add
mov
js
add
jo
inc
add
aaa
popf
inc
add
jmp
add
add
add
addb
rcll
adc
cltd
test
mov
outsl
jle
add
and
jmp
in
testb
add
stc
insb
add
mov
or
mov
add
mov
sbb
outsb
pop
sbb
frstor
add
or
cmp
ret
loope
lods
inc
add
inc
add
add
mov
add
inc
add
inc
into
adc
pop
test
add
xchg
mov
mov
add
roll
add
jle
cmp
add
scas
jnp
add
int3
mov
rcll
pop
inc
add
cmc
repnz
enter
add
jecxz
insb
push
add
add
mov
mov
add
add
add
add
data16
add
call
lcall
pop
pop
lock
add
inc
sahf
xor
bound
mov
popa
pop
fisttps
add
rolb
aas
fdivl
inc
add
fisubl
lds
add
add
pop
or
add
test
mov
std
add
mov
jnp
test
xor
inc
or
out
lcall
das
jo
pop
adc
inc
add
add
add
add
movb
pop
mov
add
inc
add
dec
jle
add
mov
mov
mov
fiadds
mov
mov
sti
and
aad
stos
mov
add
pop
push
adc
cmpsb
add
add
lcall
adc
jne
add
jge
add
add
push
xchg
inc
add
mov
or
out
sub
add
fildl
xor
add
mov
rolb
out
mov
add
add
movb
add
add
add
xor
pop
add
add
mov
or
lods
rolb
add
test
je
add
mov
jmp
insb
fdivr
repz
xchg
iret
mov
xchg
sbb
add
add
inc
sub
jp
add
ja
add
add
add
add
scas
popf
jno
or
imul
sub
mov
jp
add
notl
pop
aam
pop
insb
fnsave
enter
add
adc
repnz
mov
dec
stos
dec
fisubs
add
pushf
addb
in
push
add
mov
cld
sbb
add
mov
add
add
xchg
add
jmp
add
mov
fldt
add
enter
and
mov
pop
push
loope
xor
cmp
push
add
or
addb
inc
packsswb
movb
sub
mov
xlat
pop
add
inc
test
icebp
aas
out
cmp
push
aaa
sub
mov
add
jmp
jmp
ficompl
pop
sti
jno
dec
xchg
das
inc
add
fwait
aad
adc
mov
lods
mov
loop
out
movsl
pop
popf
shrl
test
xor
or
and
mov
sahf
lret
sub
loope
add
mov
pop
push
ret
mov
adc
enter
add
lds
mov
clc
mov
add
add
xchg
addb
popa
popa
stc
mov
rorl
add
push
push
add
push
add
cmp
add
push
icebp
push
add
add
out
scas
push
add
dec
fsts
imull
sbb
add
gs
add
xchg
push
add
pop
iret
add
mov
xchg
add
ljmp
dec
pop
cmp
cwtl
das
call
add
add
mov
pop
outsb
cmc
daa
lock
fidivl
mov
add
es
lods
mov
testb
test
mov
ret
cmp
push
lret
lret
in
fprem1
loopne
inc
outsb
push
aam
daa
cmp
dec
addr16
add
jecxz
test
add
iret
movb
and
mov
push
add
add
push
add
inc
add
or
mov
and
mov
add
mov
pushf
sbb
add
add
sbb
mov
jnp
shll
mov
and
add
rol
jo
sbb
lods
adc
mov
idivl
mull
jne
jb
fistps
add
jecxz
movsl
dec
dec
sbb
add
sbb
jb
mov
add
jle
mov
out
pop
hlt
add
add
or
jo
stos
rcll
inc
aaa
xchg
jb
mov
add
mov
scas
sbb
int3
out
fwait
popf
dec
int
dec
lea
adc
mov
push
addb
sub
add
mov
and
push
add
testb
sub
xchg
add
call
mov
mov
xor
sub
add
push
add
les
ret
cmp
mov
add
add
jg
cltd
mov
lods
aad
mov
cltd
pop
dec
sub
sarl
jle
pop
mov
add
movsl
cli
sbb
xchg
lret
aas
test
dec
or
jo
loope
jbe
mov
add
dec
mov
add
pushf
aaa
push
add
loop
jbe
xor
sbb
mov
dec
bound
mov
add
cmc
mov
addb
mov
mov
sbb
add
add
fwait
lock
in
addb
add
js
ds
ds
and
add
sbb
mov
add
add
cmp
add
pop
out
add
cmp
dec
cmpsb
add
add
add
add
mov
sti
push
add
add
mov
lods
pop
jno
add
xchg
xchg
add
pusha
add
sbb
sbb
int
jnp
push
ds
add
cmp
pop
dec
mov
mov
add
add
cmpsb
add
add
adc
fimuls
ljmp
mov
addb
mov
add
fstl
or
jb
mov
dec
jns
add
add
push
add
jg
rolb
repz
add
and
mov
into
stc
or
push
mov
rcl
adc
stos
fisubrl
sbbl
fcompl
aam
push
cmpxchg
in
stos
ficompl
jae
gs
add
loop
cld
ja
add
test
ljmp
add
add
and
jb
cmp
stos
out
jecxz
push
jnp
add
insb
in
xchg
add
jae
add
mov
or
pop
mov
enter
cmp
push
add
inc
add
movsl
sub
add
add
pop
xchg
add
add
stc
outsb
ljmp
test
and
addb
add
add
mov
cwtl
xchg
push
add
lock
rorl
add
jnp
add
add
stos
mov
sahf
mov
movb
sahf
add
add
pop
pusha
add
mov
int
jo
je
in
loope
into
inc
stc
ds
add
mov
add
add
mov
ljmp
clc
stos
rolb
jp
add
sub
add
add
mov
adc
add
rolb
xchg
popa
fdivs
out
and
js
rolb
int
add
stos
fdiv
add
add
mov
add
adc
mov
ret
add
pop
add
or
loop
sbb
mov
nop
add
rolb
add
add
sbb
pop
ja
sub
add
inc
add
sbb
les
fsubr
adc
add
mov
les
cmpsl
pop
xor
test
and
int3
or
mov
addr16
int
gs
jbe
enter
ljmp
jmp
add
mov
add
dec
and
outsl
jl
scas
pop
pop
jmp
test
rol
add
add
mov
push
add
cwtl
mov
push
jo
sub
mov
pushf
pop
outsb
shll
addr16
test
pop
sti
jae
adc
inc
add
add
popf
mov
cmp
add
inc
jo
and
sbb
cwtl
add
add
mov
inc
add
mov
cmpsb
add
add
pop
jnp
xor
cwtl
in
fld
add
fldl
push
add
and
adc
add
add
fs
mov
mov
jmp
loopne
jnp
push
dec
fsubs
inc
sub
mov
add
cmpl
add
in
aaa
ss
mov
mov
adc
pushf
mov
jbe
sub
arpl
roll
cmpsb
add
les
sub
add
je
and
add
add
xchg
add
xor
add
add
sbb
sbb
add
cld
cmp
rolb
cmp
pop
cmpsl
rolb
add
adc
aas
sbb
add
sahf
add
mov
add
fmull
or
xor
xchg
test
jb
inc
inc
add
fs
mov
pop
and
popa
sub
add
pop
lret
dec
hlt
add
xor
fcmovbe
add
sti
jno
add
add
cltd
inc
pop
xchg
or
or
shll
add
add
lods
lcall
jae
add
push
in
jecxz
in
in
mov
push
cmc
rolb
in
mov
testb
mov
dec
push
fildl
rolb
cmp
mov
adc
movups
inc
add
mov
mov
out
pop
xor
mov
pop
fnstsw
add
lret
add
jae
sub
jecxz
sbb
add
push
add
aam
lods
push
add
ljmp
add
cmpsb
add
mov
mov
add
loope
jb
addb
inc
add
ds
add
add
add
mov
jbe
mov
mov
add
jmp
add
xor
mov
xchg
add
mov
ljmp
add
push
lcall
add
inc
add
add
inc
faddl
addb
hlt
add
add
faddl
add
add
mov
mov
add
push
outsb
data16
mov
adc
pop
pop
mov
test
enter
add
rolb
bound
mov
mov
add
test
and
mov
outsb
lds
and
mov
test
add
and
mov
mov
mov
dec
pop
pop
mov
dec
jnp
add
add
inc
add
mov
add
add
mov
inc
int
sub
add
adc
cmp
pop
ret
lds
ffreep
add
add
add
sbb
nop
add
je
dec
cmp
mov
stc
and
pop
test
lods
jg
add
mov
mov
jg
fadds
sbb
cwtl
adc
add
jecxz
aad
jnp
jg
add
cwtl
mov
add
jp
sbbl
add
add
cmp
js
pop
movntq
out
pop
js
cmpsb
add
xchg
hlt
add
jmp
add
std
jno
ja
lods
push
cwtl
push
or
add
rolb
push
add
push
or
jnp
or
ret
ficoml
sub
pop
cmpsl
mov
mov
sbb
bsr
rolb
inc
in
pop
dec
jecxz
ficoml
add
ljmp
addl
add
fldl
loope
addb
push
add
xchg
add
add
add
popa
xor
into
push
stc
pop
or
mov
add
xchg
add
pop
cs
mov
dec
shll
ljmp
clc
adc
xchg
add
xor
or
arpl
xchg
fwait
in
jae
add
jmp
call
cmp
add
dec
popa
fsub
imul
add
mov
and
add
jo
push
add
xor
cltd
adc
or
add
btr
fisubs
add
add
cmp
add
add
std
cmp
nop
add
icebp
ret
ljmp
mov
leave
in
fcmovnbe
add
mov
loop
xchg
add
inc
mov
dec
fld
add
add
aas
mov
test
add
add
add
outsb
cmp
in
lret
pop
pop
cmpsl
add
mov
add
add
mov
and
movb
push
add
push
add
xor
call
and
mov
adc
sahf
mov
push
rorl
add
xor
fsts
add
mov
push
jg
ljmp
xor
mov
stc
and
out
dec
imul
adc
sbb
xchg
sbb
sbbl
cmc
cmp
or
cwtl
sub
jl
subl
and
add
cmp
lea
add
sub
add
add
sbb
in
add
shll
add
add
or
pushf
lcall
add
fsubrp
rcll
mov
mov
or
xchg
sbb
inc
add
les
mov
movsl
vandnps
mov
inc
loopne
shr
cmp
xchg
add
sub
jge
or
jbe
add
dec
mov
jg
sub
add
dec
idivl
add
add
add
dec
pop
or
stos
subl
fldenv
or
add
add
xchg
imul
data16
subl
ja
and
clc
sbb
mov
dec
testb
mov
jmp
sub
jns
xchg
fiadds
cmp
mov
fldt
mov
dec
aam
xor
in
testb
inc
add
in
cli
mov
jae
ja
add
add
add
add
xor
jmp
sbb
mov
test
add
xchg
jae
mov
add
inc
add
dec
lea
mov
lcall
rcrl
add
cmp
lods
xchg
push
cmp
aas
adc
add
jnp
cmpsl
je
pop
jl
xchg
add
stc
repz
xchg
add
stos
aas
out
dec
sti
pop
pop
in
aam
sahf
lds
mov
push
add
sbb
jne
add
add
add
lods
bound
mov
add
add
cmp
add
push
add
dec
popa
mov
and
add
jns
gs
push
inc
add
add
or
add
in
pop
add
and
mov
sub
xor
lahf
pushf
insb
lahf
dec
pop
mov
xor
push
xor
and
add
addb
add
push
stos
pop
mov
add
add
adc
xchg
addb
xchg
mov
xchg
jno
arpl
add
pop
ret
mov
rolb
icebp
push
add
add
dec
mov
or
lds
cmpsl
je
popf
sub
lret
stos
cs
cmpsl
pop
lahf
jnp
lock
rolb
aas
jmp
add
inc
fidivrl
push
add
sahf
mov
xchg
adc
repz
adc
loopne
add
ret
xchg
lahf
jae
bound
mov
jmp
add
cmp
dec
pop
or
add
add
mov
dec
gs
addb
add
inc
test
pusha
add
daa
mov
cmp
and
call
pusha
add
mov
into
ffreep
dec
cmp
sbbl
add
enter
add
adc
or
rcrl
jb
scas
or
add
inc
out
cmp
jae
js
add
hlt
add
add
les
push
add
repz
cmp
mov
mov
push
add
pop
add
adc
fidivl
mov
mov
inc
pushf
mov
inc
xor
add
push
rcl
add
mov
jp
cmp
jnp
push
aaa
cmpsl
and
mov
add
dec
clc
icebp
pop
lea
add
add
push
mov
out
jp
jp
add
add
das
js
xchg
fwait
pusha
add
aad
in
mov
out
or
add
mov
add
rolb
and
mov
add
fsubr
cmp
add
push
add
add
jno
mov
add
addr16
ja
mov
das
xor
add
bound
mov
add
or
dec
and
mov
ret
cld
pop
add
mov
test
mov
addb
add
add
sub
pop
mov
cmp
and
mov
leave
out
add
add
add
add
mov
add
push
add
push
add
xchg
out
sbb
add
add
add
cmp
insl
adc
mov
pop
daa
sub
stos
stos
cmp
inc
add
fcoml
adc
mov
or
add
add
or
mov
inc
xchg
mov
data16
mov
add
dec
xchg
stos
mov
mov
add
mov
movsl
mov
jo
lods
or
movb
push
popl
add
add
xchg
mov
lret
sbb
add
lret
add
mov
push
add
mov
jo
xchg
add
jbe
push
ja
call
push
xlat
sub
add
out
jg
popf
mov
imul
stos
jmp
add
mov
les
inc
test
add
sbb
add
add
stc
mov
add
push
add
rolb
add
add
pop
xor
xchg
add
add
int
pop
iret
data16
or
inc
mov
add
and
addl
gs
ljmp
sbb
mov
cmp
inc
and
dec
aas
jo
jecxz
outsl
lahf
pop
inc
loope
add
add
mov
jmp
mov
xlat
push
out
aad
add
popf
nop
add
in
pusha
add
cmp
add
sbb
mov
pop
rcrl
imul
add
add
sarl
int3
or
sbb
add
test
xchg
add
mov
mov
mov
jl
mov
and
mov
int3
adc
je
and
jmp
add
cmpsb
add
inc
add
je
fcompl
add
ret
mov
xchg
add
mov
add
add
data16
hlt
add
add
add
imul
imul
data16
rolb
adc
bound
mov
sub
mov
daa
test
add
popf
dec
push
adc
dec
adc
cli
xlat
in
pusha
add
addb
cld
fwait
test
add
fldcw
add
push
add
jmp
into
hlt
add
enter
addb
add
add
adc
push
add
pop
sarl
stc
mov
outsl
dec
jmp
repnz
adc
loopne
jle
push
add
mov
ss
int3
cmp
add
jl
add
cli
xor
lret
add
sbb
test
mov
pop
xchg
jp
add
cmpsb
add
adc
jbe
dec
loopne
and
lret
test
cmp
mov
add
add
in
rolb
sbb
hlt
add
xchg
push
testb
sahf
int
aaa
in
mov
add
fwait
mov
mov
cmp
push
add
sahf
mov
jb
pop
in
mov
add
add
add
outsb
test
dec
mov
add
cmp
push
fisubs
add
and
add
add
mov
test
add
add
mov
sahf
sub
call
add
mov
into
xor
jmp
lcall
xchg
dec
xchg
add
int
movsl
inc
add
pop
fistps
lcall
mov
mov
xchg
movsl
inc
add
lcall
mov
jge
jno,pt
add
cli
aam
mov
dec
push
xor
addr16
in
add
mov
insl
add
add
jl
mov
sbb
adc
add
aad
nop
add
fmull
add
mov
add
sbb
add
stos
loope
add
leave
mov
add
addb
and
add
add
test
scas
insb
mov
add
cmp
pop
xchg
sub
adc
mov
jp
add
clc
sub
add
in
lock
add
add
mov
imul
bound
mov
add
add
push
add
xchg
add
add
addb
dec
or
ret
lret
sbb
pop
mov
std
sub
jno
add
sbb
cltd
xor
pop
jns
add
push
add
jb
mov
inc
add
cmp
jbe
xchg
add
pop
sub
push
add
add
mov
jnp
add
adc
xchg
add
add
hlt
add
lcall
and
addr16
add
push
mov
add
mov
adc
inc
pop
testb
mov
dec
pop
loop
sub
add
test
ja
rcrl
aad
imul
add
sbb
add
mov
mov
adc
mov
stc
mov
push
add
ret
push
cwtl
and
fbld
movsl
insb
aam
pop
push
add
stos
sbb
add
push
add
mov
xor
popf
mov
add
xchg
add
add
inc
fidivrs
ds
jnp
les
popf
jns
dec
fsub
out
popa
js
mov
add
add
lcall
push
and
or
xchg
add
cmovno
insl
add
lcall
popa
cmp
mov
cli
or
sub
pavgw
add
lds
cmp
rolb
jg
and
clc
push
fisubs
add
add
add
mov
add
stos
sbb
cmp
out
pop
pop
pop
in
pusha
add
jns
add
jl
sub
in
mov
popa
mov
add
pop
jo
dec
mov
dec
stos
mov
outsb
jae
add
push
cld
inc
add
xchg
add
jne
push
add
dec
dec
jae
movb
jmp
daa
mov
repz
addb
fldenv
ret
jae
test
ja
push
add
imull
mov
add
add
stos
pop
xchg
adc
sub
cwtl
jmp
push
pop
mov
mov
fwait
testb
mov
mov
mov
lret
scas
push
add
ret
dec
fnsave
pop
mov
xchg
sbb
add
cmpsb
add
mov
test
pop
adc
push
iret
xchg
add
jno
cmp
add
clc
jo
out
xor
inc
call
add
pop
inc
in
outsb
cmpsl
and
mov
add
mov
fdivrl
stc
out
and
mov
dec
pop
jl
mov
jl
add
add
xchg
add
add
mov
add
add
ret
add
inc
add
xor
xchg
add
outsb
pop
bound
mov
data16
xchg
mov
fsts
xchg
add
mov
add
add
pop
repnz
enter
mov
jecxz
mov
mov
add
xchg
add
dec
push
loop
pop
std
out
xchg
inc
add
insb
and
add
stos
roll
add
add
jo
xor
pop
stos
mov
sbb
xchg
add
rolb
add
out
stos
rol
scas
sbb
push
jae
push
add
add
jmp
add
lods
aas
imul
adc
fcmove
ds
in
test
pop
in
push
dec
addb
xor
add
fsubrs
add
loopne
adc
rolb
add
std
fdivr
sti
push
add
add
and
popf
in
mov
add
inc
sub
cs
testb
pushf
gs
cli
and
add
lods
add
mov
xchg
mov
pop
xor
inc
daa
and
lock
mov
andl
pop
mov
incb
mov
iret
rorl
jmp
sbb
xor
out
dec
fwait
ret
insl
pop
push
daa
repz
sahf
xor
movsl
lcall
std
enter
add
fwait
push
add
dec
push
addb
imul
push
test
adc
fisubs
dec
insl
xchg
jo
test
jbe
aaa
mov
add
lock
sbb
sbb
mov
or
mov
add
pop
daa
jg
add
stc
or
or
mov
push
xchg
pop
push
add
out
cmp
pop
add
add
or
xchg
jb
addb
jl
xor
add
jle
and
xlat
push
add
pop
mov
cli
aad
sbb
push
add
ret
cwtl
cmp
sub
add
cltd
data16
repz
add
xchg
addb
push
leave
iret
repnz
add
std
decl
add
mov
jg
adc
mov
add
adc
lahf
dec
inc
add
add
push
add
xor
test
add
rolb
call
add
mov
stc
xchg
bound
mov
loop
bound
mov
dec
dec
mov
sub
cmp
cmp
and
roll
pop
adc
xchg
add
mov
jle
dec
popf
sbb
add
jmp
dec
dec
out
add
add
hlt
add
add
add
add
add
pop
in
xchg
int3
push
divl
add
in
xchg
pop
push
add
add
mov
add
ficompl
sub
shrl
test
add
sbb
mov
pusha
add
add
imul
fnstenv
pop
pop
cmp
out
dec
sub
pop
int3
sub
into
sbb
mov
inc
pop
les
push
and
add
add
adc
cmp
add
add
es
dec
stc
or
inc
jmp
sub
mov
xor
add
mov
les
mov
neg
cmp
add
add
call
add
das
mov
outsl
push
add
dec
jbe
orl
in
rolb
enter
popl
add
xchg
stos
mov
mov
xchg
add
movsl
inc
add
add
cmpsl
hlt
add
test
test
add
std
push
add
add
pop
mov
dec
leave
and
imul
rorl
xor
mov
mov
iret
xor
jmp
dec
sbb
add
xchg
sbb
jmp
pop
inc
add
je
adc
sbb
pop
jg
fdivr
fistpl
add
add
out
pop
stc
cwtl
cli
aam
jle
test
add
hlt
add
add
mov
ret
adc
into
mov
adc
loop
test
add
jg
pop
je
sbb
rolb
rcll
cli
cmc
pop
pop
movsl
pop
xor
dec
rcr
fs
push
mov
mov
add
cmpsl
xchg
xor
add
je
cld
pop
cmp
jo
xchg
add
mov
sub
sub
xor
rolb
xchg
dec
push
sub
add
jp
mov
cmp
fcompl
fdivl
negl
data16
add
scas
les
jb
mov
inc
add
ffreep
add
sbbl
add
add
xchg
jnp
add
enter
push
add
push
sub
add
mov
sti
and
cpuid
add
in
and
rolb
stos
data16
mov
xor
add
push
add
insl
sbb
xchg
xchg
jmp
add
lahf
sbb
dec
loopne
pop
adc
xor
xchg
jne
add
repnz
bound
mov
push
add
ja
call
adc
mov
add
movsb
add
sbb
loop
mov
daa
stos
cmp
js,pt
stc
or
jl
pop
enter
cmc
jge
fucomip
adc
xlat
popa
testb
jne
mov
xchg
add
pusha
add
rcrl
jno
mov
pop
int3
rolb
repnz
out
xchg
mov
sub
add
les
or
add
mov
xchg
ja
mov
xor
int3
out
add
add
jg
pop
inc
jbe
fs
je
add
dec
fldt
int3
push
mov
add
add
adc
pushf
inc
mov
push
out
inc
add
lahf
sbb
add
add
mov
jl
add
ja
cs
je
ds
add
push
add
pusha
add
jge
add
popf
jne
add
jmp
add
stos
pop
sbb
xchg
lock
or
test
bound
mov
mov
add
mov
add
call
shll
add
push
pop
inc
jbe
or
sub
add
pop
jl
add
add
in
sub
js
rcll
mov
lds
sbb
inc
pop
xor
xchg
add
sub
add
jae
flds
xchg
add
mov
stos
add
add
add
add
xchg
add
fildl
add
inc
add
add
add
mov
mov
ret
repnz
and
adc
add
cltd
jbe
or
add
add
adc
addb
add
add
jg
mov
dec
cmp
repz
test
add
add
out
or
orl
dec
lds
ja
xor
fwait
sub
pusha
add
add
mov
fwait
pop
lock
pop
pop
test
pop
fidivs
into
sbb
dec
sbb
add
fwait
aaa
pop
jns
jl
fisubrs
or
add
sti
cli
stc
cld
and
int3
mov
clc
cmpsl
and
mov
add
mov
cmp
add
or
dec
pushf
and
add
insl
xlat
popf
jns
rcr
and
dec
dec
nop
add
xchg
sbb
add
fcomps
add
cmp
mov
jge
add
xchg
xchg
add
add
adc
xchg
shll
push
fucomi
sub
adc
jg
bound
mov
add
push
add
push
jl
add
add
testb
jnp
add
push
rolb
add
xchg
lods
fdivs
jo
cs
add
add
pop
xchg
pop
pop
jae
add
add
add
add
and
mov
imul
add
add
test
sbb
sbb
and
jno
add
add
mov
addb
add
dec
cli
add
mov
mov
add
sbb
and
mov
jbe
nop
add
add
add
add
mov
movb
add
push
add
call
movsl
out
mov
jg
add
pop
xchg
pop
push
jb
sti
xor
mov
cmp
add
mov
ds
xor
add
insl
add
mov
xor
cmpsb
add
cvtpi2ps
add
mov
testb
add
mov
ret
cmpsb
add
fmul
xor
mov
add
add
aad
leave
mov
sub
xor
int3
data16
testb
add
add
add
jbe
sbb
pop
dec
scas
mov
int3
and
loopne
ds
xchg
xchg
or
lds
xchg
test
dec
repnz
stos
pop
rolb
cld
sub
dec
adc
movsl
repz
cmpsl
xchg
imul
dec
arpl
add
mov
out
add
loop
fidivrs
add
cs
imul
push
xor
jl
inc
pop
icebp
in
jmp
cmpsl
inc
add
add
repz
test
add
insl
sbb
inc
add
add
add
mov
rolb
stc
mov
add
xor
decb
lods
jnp
fcomps
outsl
leave
test
pusha
add
mov
jno
push
add
add
pop
cmpsl
hlt
add
cmp
mov
jno
add
add
add
or
fldcw
add
addr16
add
push
add
add
add
mov
std
mov
sub
mov
mov
sarl
add
daa
pop
sahf
push
push
add
stos
and
mov
mov
push
add
cld
xchg
add
jno
add
mov
jmp
imul
push
cmp
mov
add
addb
pop
out
pop
mov
add
add
mov
outsb
cmp
loope
add
mov
cmp
add
mov
push
xor
inc
add
mov
pop
popa
mov
insl
cld
sub
add
scas
sbb
fwait
sub
stos
jo
adc
repz
or
pop
push
add
add
cwtl
enter
push
adc
xor
mov
call
out
and
push
add
inc
es
add
xlat
cltd
scas
sub
mov
xchg
add
mov
rolb
inc
sub
add
dec
lods
ljmp
pop
test
xchg
pop
push
add
call
add
add
test
test
add
mov
mov
fst
add
jmp
add
out
ret
add
mov
mov
pushf
lds
push
add
and
add
sbb
and
mov
ficompl
aaa
pop
mov
add
outsl
lds
xchg
scas
es
frstor
adc
add
mov
loop
or
add
call
leave
mov
add
push
add
imul
sbb
stos
fsubr
ret
push
in
and
jae
add
xchg
add
dec
sub
sbb
mov
mov
mov
push
add
test
add
add
add
jnp
frstor
add
inc
xchg
add
add
aaa
sub
data16
sub
bound
mov
mov
scas
sbb
add
inc
mov
inc
push
add
insl
out
stos
and
pop
or
fidivs
and
mov
add
mov
add
mov
dec
mov
push
add
add
mov
test
nopl
sub
movsb
add
xchg
add
mov
in
pop
sahf
scas
stos
in
jp
or
mov
mov
mov
pop
xor
or
mov
arpl
add
imul
fcoms
inc
add
pusha
add
xlat
jge
jno
add
add
lahf
mov
add
pusha
add
test
movsl
cld
lods
ffree
cwtl
xor
add
rolb
sbb
add
mov
push
add
in
add
adc
add
imul
fildll
cmp
add
add
clc
or
push
add
add
pop
inc
lcall
and
mov
xchg
mov
insl
mov
dec
test
call
xchg
add
xchg
ljmp
jp
cs
add
sub
add
test
out
in
divl
pop
aad
adc
mov
add
jp
leave
pusha
add
add
inc
add
jecxz
add
dec
dec
clc
jle
add
leave
enter
add
and
loopne
adc
lahf
in
push
fwait
add
cmpsl
add
inc
inc
cwtl
inc
cld
mov
add
lret
in
mov
outsb
cmpsb
add
and
mov
add
add
filds
add
loopne
adc
enter
add
ret
xor
mov
rolb
dec
stc
aam
dec
or
sub
test
test
aad
mov
add
push
add
cmp
int
add
push
testb
sub
rolb
sbb
fdivrs
hlt
add
add
scas
mov
addr16
xor
add
and
mov
add
fdiv
jmp
cmc
mov
add
add
sub
rolb
add
add
cmp
inc
add
gs
add
add
jnp
loope
add
or
jnp
pop
and
cli
mov
add
jecxz
sub
fidivs
cmpl
sbb
add
adc
cmp
popa
and
into
cmpsl
push
add
add
add
add
add
pop
adc
movsb
add
lahf
xchg
inc
add
mov
add
adc
pop
sbb
push
add
add
and
rolb
leave
jp
jno
int3
cmp
add
sbb
rolb
pop
je
aad
fwait
inc
add
xor
add
add
add
push
add
mov
loope
add
push
add
add
mov
addb
push
add
stc
dec
outsl
fdivl
jp
add
add
cmpsl
add
add
add
push
mov
movb
add
pop
push
add
jg
jae
cli
push
mov
mov
adc
mov
mov
mov
add
add
sbb
add
jb
mov
daa
stos
mov
stos
cmp
dec
jl
dec
mov
push
sub
mov
mov
pop
add
ljmp
out
roll
idivl
pop
test
mov
addb
andl
add
out
sbb
xor
mov
outsl
xlat
push
add
add
jns
mov
xchg
roll
cli
dec
fstpt
adc
sbb
pop
add
data16
outsl
lock
adc
into
add
xlat
scas
ret
mov
jbe
insb
lea
and
jns
add
jb
sti
sub
cli
pxor
cmp
add
mov
out
dec
mov
add
add
les
bound
mov
mov
push
add
pusha
add
xor
add
cmp
add
cwtl
cmp
rolb
repz
add
mov
add
mov
clc
movb
stc
mov
add
enter
push
add
push
add
add
aad
dec
cmp
testb
mov
mov
loop
cmp
out
or
test
push
xor
ds
add
loop
aaa
int3
cld
and
cmpsl
leave
jae
jecxz
jp
inc
add
fsts
add
add
add
add
in
sub
cmp
dec
jp
std
paddusw
leave
call
mov
jne
enter
cmc
add
jns
dec
mov
dec
pop
cwtl
mov
xchg
mov
outsb
xchg
or
inc
add
add
jno
jg
add
mov
inc
add
adc
add
repz
mov
jecxz
fcomps
add
add
pop
mov
imul
jns
add
add
mov
sbb
popf
daa
mov
nop
add
test
or
jmp
add
into
or
xlat
dec
das
jl
add
add
add
dec
jge
add
add
adc
jae
ret
add
je
mov
cmp
sbb
mov
ljmp
pop
scas
fst
add
lcall
std
pop
mov
add
pop
adc
mov
scas
sub
add
jbe
ja
add
add
jns
int3
dec
adc
dec
mov
sti
and
cmp
daa
adcl
fimuls
in
push
sbb
add
inc
add
dec
loop
mov
stos
fisttps
mov
mov
mov
fstpt
addb
add
sub
add
cmp
add
sbb
ret
popa
jecxz
add
mov
das
sbb
jmp
add
add
loop
xchg
dec
mov
cpuid
add
pop
jmp
mov
pop
push
add
dec
xchg
mov
xchg
inc
add
xchg
add
add
or
add
add
fstpl
jo
xor
adc
and
add
pop
stos
in
jl
int
inc
add
pop
mov
sti
xor
push
or
aaa
jnp
icebp
in
add
and
add
and
std
xchg
add
add
mov
and
mov
jbe
mov
idivl
aam
shrl
sub
cmp
sbb
insb
push
add
pushf
test
rcl
or
addb
add
pop
push
add
mov
add
mov
add
jmp
dec
sti
add
add
sbb
lds
mov
xchg
add
rolb
dec
rolb
jb
stos
xor
mov
inc
push
xchg
mov
dec
push
cltd
popf
rolb
ret
jl
out
ret
add
add
aaa
adc
cwtl
adc
xchg
adc
xor
adc
aad
jno
shrl
pop
mov
push
add
xlat
push
rcrl
pop
dec
and
add
cld
mov
cltd
and
inc
fisubl
add
fstps
pushf
in
neg
jo
push
xor
nop
add
sbb
xchg
add
rcrl
arpl
jo
cwtl
lea
add
cli
bound
mov
inc
add
cli
push
xchg
mov
cli
jl
out
and
mov
ret
aaa
inc
add
and
rolb
jge
add
popf
in
cmpsb
add
fs
add
cmp
ja
add
into
jns
add
and
pushf
je
adc
mov
inc
add
cmc
movb
std
mov
flds
add
fsts
add
cmovae
add
enter
add
mov
loopne
addb
testb
sbb
popf
mov
add
in
push
add
mov
push
xor
add
mov
scas
pop
cmpsb
add
xchg
add
mov
xchg
add
lods
les
push
add
sub
mov
mov
and
mov
dec
cmp
push
and
xor
mov
add
mov
add
cmpsl
or
xor
iret
sub
add
sub
call
add
lahf
cmp
dec
stos
adc
dec
sahf
dec
pop
in
pop
pusha
add
xor
or
add
mov
add
ljmp
mov
sub
jmp
jnp
add
negl
loop
push
cmp
addr16
mov
mov
stos
dec
fidivl
sub
inc
mov
add
out
push
add
add
add
add
add
nop
add
inc
fdivrs
dec
test
dec
xor
dec
addb
add
mov
or
cs
add
imul
les
cmp
jle
cmp
add
add
sbb
add
mov
add
add
out
adc
lock
sti
imul
inc
add
xor
sbb
mov
movb
cmp
icebp
enter
and
mov
add
and
hlt
add
inc
add
push
add
xlat
inc
jecxz
push
add
mov
add
push
add
add
ret
int
add
sbb
add
add
scas
addb
aaa
inc
sub
movsl
addb
jmp
add
lcall
cmp
or
lahf
cwtl
data16
add
push
add
dec
dec
pop
mov
rcll
je
push
cmp
and
mov
mov
test
pop
pop
lret
and
popa
sti
repnz
xchg
or
scas
jecxz
mov
cmp
add
add
mov
mov
add
lret
out
je
rolb
mov
ffreep
fstl
jae
add
inc
add
mov
push
add
add
mov
xor
xchg
add
lea
add
xchg
lods
xchg
int
sahf
in
in
add
push
add
and
mov
nop
add
sub
add
outsl
movsb
add
inc
add
push
add
in
dec
mov
xchg
xor
out
iret
lods
xchg
jne
add
pusha
add
or
fimuls
jmp
add
testb
add
loop
pop
or
add
mov
add
popa
jne
testb
push
add
cmp
xlat
es
add
add
add
outsb
add
mov
add
mov
stc
ret
pusha
add
add
call
pop
repnz
test
add
repz
or
mov
ret
add
add
xchg
add
add
sub
xchg
std
and
js
add
inc
add
aaa
dec
sub
cmpsl
mov
mov
add
jmp
out
test
mov
add
ret
ffree
daa
pop
lret
lcall
data16
jmp
into
data16
add
add
pop
in
pop
jle
cltd
or
lea
jge
dec
rolb
xchg
push
add
xchg
add
add
out
decb
push
add
push
add
add
outsl
clc
cwtl
addb
mov
movsb
add
int
xchg
orl
ret
data16
lea
dec
pop
dec
adc
js
dec
add
mov
popf
adc
sbb
inc
and
mov
cmp
vpunpckhbw
mov
add
fiaddl
dec
test
add
fisttpl
jecxz
mov
mov
in
ja
cmp
sbb
sbb
std
jge
or
add
mov
add
add
test
push
addr16
inc
add
inc
data16
add
in
add
ficoml
sbbl
inc
add
add
pop
or
add
add
and
lret
xlat
mov
ficomps
insl
jbe
ja
jg
add
stos
lahf
add
adc
cwtl
dec
lods
sbb
add
add
les
testb
xchg
add
add
sbb
imul
or
sti
out
mov
mov
es
call
jb
repz
fwait
stos
mov
dec
std
ret
leave
movsb
add
cmc
xlat
cltd
mov
sbb
mov
call
add
cmp
xor
leave
dec
je
aaa
adc
test
cwtl
data16
sbb
stc
add
lock
mov
pop
ret
aas
sti
push
add
add
mov
sub
nop
add
stos
add
mov
add
add
in
aam
mov
sar
imul
add
ss
add
int3
dec
testb
stc
testb
pop
xor
inc
mov
mov
sub
push
add
or
add
push
sub
leave
and
arpl
add
cltd
popf
dec
out
pusha
add
dec
jmp
mov
mov
int
dec
sbb
mov
or
dec
push
add
add
jo
mov
movsb
add
xchg
add
xlat
out
inc
mov
jnp
xchg
add
sub
mov
xchg
bound
mov
xchg
mov
jno
into
nop
add
and
add
add
mov
or
rolb
jl
std
ljmp
xchg
and
add
fiaddl
jne,pn
jae
les
cmpl
mov
add
mov
add
out
push
add
lsl
jbe
push
add
cli
mov
and
add
inc
add
setnp
sbb
dec
adc
jo
rolb
sahf
addb
pop
jb
mov
add
adc
arpl
dec
mov
xor
jo
adc
sbb
cmpsl
inc
jle
out
add
add
add
add
iret
mov
add
mov
test
dec
sub
xor
pushf
loop
test
add
add
adcl
add
out
in
mov
sbb
add
xchg
pop
test
add
lods
push
or
add
add
sbb
add
mov
jno
jecxz
stos
insl
dec
sbb
rolb
and
daa
sbb
outsb
mov
inc
fdiv
add
cltd
xor
add
mov
add
mov
popf
cs
adc
add
push
int
mov
push
shrl
enter
mov
mov
sti
mov
push
xchg
rcr
popf
in
pop
push
add
mov
jno
push
pop
jns
adc
mov
lret
xchg
push
add
push
add
dec
in
pop
mov
lea
icebp
pop
lret
mov
or
addl
add
add
mov
add
cmpsb
add
ljmp
jb
sub
add
mov
movb
mov
add
pop
rolb
mov
les
aad
add
mov
mov
add
add
add
jge
add
sub
xchg
add
pusha
add
mov
xor
mov
cltd
xchg
xchg
push
add
call
add
loop
mov
rolb
out
inc
add
lret
lahf
les
cmp
add
and
scas
mov
add
stc
or
into
mov
test
mov
add
cmp
add
add
outsl
xor
scas
or
out
push
add
ret
mov
insb
sbb
jge
mov
ret
add
cld
dec
cmp
add
cmp
js
add
test
int3
jae
jnp
fstpl
stos
aad
fs
add
add
or
add
scas
popa
addr16
jl
sbb
add
in
or
jl
or
add
leave
jecxz
lods
inc
add
lock
in
fdivrl
cmpsl
mov
dec
add
mov
or
leave
lds
add
test
lds
mov
add
jle
add
data16
and
imul
fadds
aas
fwait
pusha
add
lcall
add
add
mov
mov
sbb
ret
add
rcrl
xor
mov
add
cmp
or
add
dec
and
data16
push
sub
add
jmp
jbe
add
sbb
inc
add
test
add
jne
add
cltd
and
add
pop
pop
xor
mov
pop
fnstenv
add
xlat
negl
push
loop
mov
mov
sbb
inc
add
mov
cmpsl
aaa
push
or
sub
and
mov
add
inc
push
add
cmp
mov
add
and
mov
add
pop
into
cmp
inc
add
xchg
or
sub
add
pop
dec
addl
add
cmpsl
sbb
or
add
sarl
sbb
mov
add
jae
add
ljmp
addb
mov
test
xor
xor
ljmp
mov
jle
mov
pop
pop
dec
lahf
int
pop
xchg
xchg
add
rorl
mov
ja
mov
int
rolb
loope
push
test
imul
loop
xor
mov
xor
jnp
add
inc
add
add
daa
mov
pop
outsb
sub
add
add
daa
xchg
aaa
lret
sti
xchg
add
add
enter
and
ljmp
add
add
xchg
add
int3
hlt
add
mov
rcl
lea
inc
add
outsb
pop
inc
leave
lea
repnz
pop
jne
add
ljmp
inc
xchg
inc
add
adc
loop
jl
add
mov
ret
mov
iret
or
add
add
sbb
xor
or
pusha
add
fisubs
mov
add
add
pushf
xorl
jge
add
add
push
and
mov
test
adc
xor
push
mov
dec
arpl
add
add
add
sbb
add
movsl
jmp
jl
add
add
or
testb
push
add
xor
ljmp
xchg
add
mov
test
lods
mov
movsb
add
lret
mov
shll
add
gs
push
outsb
and
sarl
out
loopne
nop
add
add
add
mov
add
xorl
mov
add
mov
add
rolb
mov
and
loop
adc
mov
add
add
or
add
mov
add
add
dec
in
add
add
filds
add
add
mov
jl
add
jno
pop
pop
inc
add
add
cmp
ret
pop
mov
xor
imul
add
daa
xor
test
movsb
add
jae
cli
test
lods
mov
or
dec
or
adc
cmp
sbb
ds
add
adc
pop
xor
das
clc
or
inc
xchg
cmp
add
or
aas
or
repnz
insb
xchg
mov
sub
push
add
pop
jno
xlat
cwtl
jmp
add
and
gs
sub
int3
in
and
outsb
sub
ret
sbb
mov
push
add
pop
imul
sbb
in
add
movsl
inc
add
add
call
add
jp
leave
fscale
push
jbe
jp
stos
pusha
add
inc
add
xchg
add
xchg
add
jns
push
sub
out
jo
shrl
out
adc
imul
add
add
add
rolb
mov
add
mov
or
add
movb
add
add
ret
scas
bound
mov
inc
add
and
rolb
add
add
out
cmc
pop
xlat
sub
popf
pop
mov
mov
sahf
pop
jb
js
inc
sub
sub
stos
jle
pop
sbb
popa
paddsw
std
mov
cmp
jmp
xlat
push
cmp
xchg
add
scas
ror
mov
popf
ss
inc
add
mov
mov
fucomip
or
repz
scas
fwait
ret
or
mov
rcrl
mov
cwtl
fndisi(8087
sarl
and
inc
add
flds
xor
les
and
add
add
mov
dec
jnp
add
add
xchg
pop
mov
dec
gs
add
loope
pop
xchg
add
int3
pop
or
clc
loop
data16
mov
bound
mov
add
lock
mov
jns
lea
dec
mov
xor
xor
pop
popa
dec
repnz
adc
in
addb
insl
test
dec
movb
fsub
test
add
jnp
and
mov
in
pop
push
loope
and
mov
add
stc
or
movsl
shll
add
push
add
xchg
jp
insb
mov
fmull
dec
xchg
add
add
jmp
add
add
dec
scas
push
add
sub
add
out
mov
sahf
es
push
adc
push
add
mov
and
add
add
mov
cmp
inc
inc
add
sub
cmp
ret
add
mov
sahf
dec
sbb
dec
push
push
add
mov
add
stc
or
lahf
shll
iret
movb
jae
add
xchg
cmp
test
adc
shll
add
mov
mov
aaa
lods
push
inc
add
jb
movsl
add
mov
mov
popf
shll
mov
sbb
dec
and
cmp
js
jmp
add
cld
rorl
add
sahf
pusha
add
in
aad
xor
dec
mov
cmc
imul
iret
lahf
sub
fsubrs
dec
aam
pop
clc
mov
mov
rcrl
push
sub
mov
pushf
adc
push
pop
mov
add
iret
sbb
mov
ret
mov
pop
inc
out
cs
add
add
aam
nop
add
test
mov
lods
or
dec
in
mov
dec
pop
cmp
lods
push
mov
add
pop
aas
movsb
add
push
add
add
add
into
pop
popa
xor
pop
mov
addb
cmc
cmp
push
add
add
rolb
add
add
fsts
loope
add
lods
mov
pop
inc
add
jne
out
loopne
push
add
add
mov
mov
add
in
pop
mov
xchg
jae
inc
mov
add
mov
inc
inc
cmc
aad
push
xchg
add
add
add
packsswb
pushf
std
rol
mov
testb
lahf
into
jne
adc
add
fisttpll
iret
adc
add
add
push
or
add
add
mov
add
add
or
add
add
in
repnz
mov
pop
pop
mov
mov
mov
bound
mov
dec
jle
jno
add
int
xchg
sub
mov
xor
push
or
pusha
add
mov
push
aaa
mov
outsl
cwtl
pop
add
xor
data16
loope
add
out
addb
jge
cmp
repz
add
xchg
test
leave
dec
pop
popf
xchg
mov
cltd
rcll
stos
push
add
inc
add
outsl
adc
add
repnz
mov
pop
fwait
cmpsb
add
add
add
sti
clc
adc
cltd
ret
add
pop
scas
pop
inc
pushf
pushf
mov
lods
jns
xchg
add
add
lahf
aas
pop
nop
add
xor
data16
cmpsl
dec
test
dec
mov
or
addb
sbb
test
add
sbb
add
add
jnp
add
rcl
ljmp
popf
shll
jo
push
push
add
por
std
rorl
aaa
lea
rcrl
movb
lea
add
add
notl
add
cmpsb
add
out
int
dec
dec
leave
imul
add
ja
sub
or
add
add
icebp
stos
adc
je
loopne
jmp
or
add
dec
pop
add
int
mov
add
in
or
adc
in
aad
daa
loop
popf
andl
add
mov
jle
xchg
bound
mov
add
add
dec
mov
mov
addb
add
sbb
or
add
xchg
fcmovnbe
pusha
add
and
cmp
insl
movb
aas
jo
cwtl
xor
inc
or
imul
add
pop
fstps
sub
jns
push
or
inc
adc
loopne
jg
sub
dec
clc
aad
jg
add
jecxz
add
or
add
lcall
movntps
adc
mov
out
popf
mov
hlt
add
mov
xor
xchg
add
movsl
fdivrl
add
add
aad
push
xchg
sub
test
mov
out
push
add
add
xchg
mov
dec
xorl
and
mov
popa
imul
or
add
dec
mov
sub
push
add
add
insb
ljmp
mov
fnstcw
add
pop
imul
int
stos
sbb
add
rolb
xchg
data16
push
rolb
jns
call
add
add
cmp
mov
and
mov
xchg
sub
mov
and
add
add
sbb
pop
sub
arpl
mov
xchg
sub
test
add
add
adc
imul
sub
dec
cmpl
fcoms
push
add
mov
pop
sbb
pop
push
hlt
add
mov
and
mov
add
add
lock
and
outsb
xchg
add
mov
jne
jp
add
add
add
add
xchg
add
stos
fistpll
xchg
add
sub
add
movb
add
add
add
out
lods
int3
inc
xchg
add
les
negl
sbb
dec
pop
mov
aas
in
arpl
add
mov
pop
xchg
adc
or
sbb
add
mov
cmp
add
in
insl
rorl
add
cmp
adc
ja
les
sti
rolb
pop
popf
loop
inc
add
mov
add
dec
test
xchg
aaa
testb
add
xor
pop
fstpl
and
in
mov
mov
xlat
cmp
xchg
add
stos
inc
add
das
aad
xchg
jnp
ret
mov
inc
add
fidivs
add
loop
insb
and
mov
cmp
in
cld
add
mov
add
add
ja
loop
movb
movb
les
nop
add
daa
or
add
and
mov
add
mov
add
jl
fbstp
push
add
add
xchg
add
cmpsb
add
sbb
jns
add
mov
add
add
sti
ja
popa
rolb
js
add
inc
fdivp
push
add
add
outsl
push
add
test
inc
xchg
add
int3
mov
add
jb
jo
and
adc
out
lret
fstpt
and
mov
or
mov
jne
add
push
sbb
add
add
lret
push
add
add
and
mov
nop
add
sbb
xchg
xor
add
movb
xor
dec
imull
mov
jmp
movsb
add
fiadds
mov
mov
add
lret
add
int
add
add
mov
xor
lds
mov
jp
add
sbb
out
icebp
jmp
xchg
test
outsl
mov
pop
pop
shl
mov
add
icebp
in
or
push
scas
xor
cmp
add
iret
jb
int3
bound
mov
movsl
push
out
pop
rolb
adc
jne
iret
xor
pop
mov
add
add
add
loopne
imul
dec
lahf
xor
cs
adc
mov
and
addb
nop
add
add
add
add
ljmp
adc
push
inc
outsl
jmp
in
xlat
xor
cli
and
add
loope
dec
push
add
bound
mov
pop
cwtl
add
inc
dec
ds
add
testb
insl
push
add
fcmovnb
cwtl
jne
jl
add
jb
mov
and
mov
cmpsl
repz
mov
push
mov
and
movsb
add
sub
xor
jns,pt
adc
pop
dec
cmpsb
add
add
add
add
filds
mov
add
jecxz
xor
cmp
mov
mov
add
add
fcmovnu
push
inc
data16
add
xchg
adc
ds
add
push
add
and
mov
push
add
mov
or
rorl
fwait
jecxz
adc
mov
add
mov
dec
aas
stos
movsb
add
rolb
movb
add
add
xor
add
or
cmp
push
add
add
pop
int3
push
add
add
mov
add
mov
add
mov
push
pop
fcmovnbe
xor
gs
add
mov
xchg
nop
add
dec
mov
mov
add
popl
rolb
pushf
clc
pop
sub
je
popa
test
std
adc
in
jae
mov
aas
jno
add
mov
repnz
add
add
fidivrl
jb
adc
add
xchg
add
in
cmpsl
aas
add
sbb
add
mov
popa
stc
int
ljmp
jl
in
test
jecxz
in
push
mov
add
out
cmc
mov
jmp
daa
cmpsl
xor
aam
mov
pop
xor
mov
dec
jne
jno
jns
cli
int
pop
fwait
ret
jle
adc
add
mov
mov
mov
mov
lret
movsb
add
pop
mov
cli
psubd
popa
add
cmpsl
addb
add
rolb
cmp
add
mov
addr16
mov
add
decl
cmp
loope
rolb
daa
out
xchg
xor
aam
loope
add
sub
ret
lahf
xchg
add
add
repz
add
lock
xchg
mov
xchg
sbb
dec
jne
cltd
testb
adc
rcll
sti
inc
fbld
adc
loop
xchg
mov
mov
add
add
in
rolb
lret
cwtl
mov
jne
push
mov
jg
add
mov
and
scas
and
mov
pop
sbb
sub
xchg
add
inc
adc
addb
xor
mov
and
mov
add
add
push
add
imul
add
mov
lock
and
shll
lock
sbb
add
xchg
add
add
add
das
pop
test
jle
xlat
in
sub
add
insl
or
add
into
cli
inc
mov
xor
xchg
xchg
add
xchg
lcall
sub
add
add
pop
mov
ljmp
stos
in
daa
pop
addb
xor
add
pop
xchg
iret
xor
sub
jb
in
loop
fidivs
mov
test
mov
fdivp
dec
daa
cld
iret
dec
cmpsl
add
movb
movb
fisttpl
jno
lods
mov
add
dec
test
xchg
add
sbb
mov
pop
test
mov
pop
jnp
add
nop
add
add
push
add
pop
pop
test
inc
add
add
add
shll
and
mov
lahf
pop
push
add
push
push
cwtl
cmpsl
jp
add
inc
add
add
test
mov
mov
incl
add
mov
add
std
jne
add
lcall
add
add
adc
nop
add
ret
bound
mov
dec
add
mov
pop
jl
add
dec
pop
rcrl
test
ja
sub
add
jge
pusha
add
mov
pop
xchg
add
lea
cmp
mov
in
scas
adc
je
clc
out
and
adc
testl
xor
jmp
add
addl
sub
add
add
add
popf
mov
adc
adc
cmp
add
rcll
popa
out
enter
push
ja
mov
add
inc
pop
xor
test
inc
add
mov
repnz
movntq
out
outsb
insb
out
push
aad
int
repnz
add
add
mov
dec
mov
add
adc
cmp
aaa
into
mov
mov
add
add
sbb
adc
je
push
add
xor
cmpsb
add
pop
xchg
add
stos
pusha
add
mov
and
mov
lret
add
add
add
add
add
mov
add
fnstenv
pushf
ret
ds
data16
jnp
sub
xlat
pop
mov
std
cltd
ljmp
add
xchg
add
ds
fsubrp
rep
lahf
stos
fwait
add
add
mov
add
mov
mov
insl
sub
jle
add
sbb
cli
aaa
xor
add
mov
cmp
addb
mov
mov
rolb
pop
jmp
inc
gs
rolb
clc
or
add
add
add
adc
repz
scas
jl
cmpsb
add
add
dec
xor
test
sub
mov
enter
mov
xor
jnp
push
cmp
call
add
mov
ja
jae
ret
aaa
sub
sub
sahf
xchg
imul
addb
inc
push
loopne
sub
add
add
int
lds
das
int
push
add
mov
test
test
rolb
push
std
xor
mov
sub
mov
inc
add
xor
mov
jo
adc
jl
ret
pop
lea
dec
imul
pusha
add
ss
arpl
add
push
add
inc
add
cmp
push
cmp
out
cli
add
add
addb
add
dec
ret
addl
add
mov
mov
add
data16
add
push
add
add
xor
mov
movsl
and
add
shll
add
out
push
aam
adc
imul
add
js
add
add
jo
xchg
add
jae
inc
enter
add
ds
aas
mov
push
xchg
mov
add
mov
les
cmp
outsl
movb
add
daa
das
xchg
add
sbb
je
out
mov
add
cmp
add
push
nop
add
add
add
add
add
iret
jb
fsubrl
mov
aaa
loopne
loope
add
pop
push
mov
mov
push
add
add
add
hlt
add
dec
das
adc
inc
add
loop
inc
add
pushf
cmpl
in
dec
decb
lahf
or
repz
jp
push
popf
lods
and
mov
add
cmpsl
outsl
and
or
add
std
xor
je
insb
ret
lcall
jg
mov
inc
add
faddl
lds
loope
jge
fisttps
dec
add
inc
add
inc
add
std
mov
add
add
jp
add
add
das
lea
add
jne
mov
cld
mov
rolb
addb
outsb
dec
inc
arpl
push
xchg
popf
mov
into
xchg
inc
add
xor
add
in
xchg
jge
dec
inc
add
shll
into
std
leave
mov
cmp
add
adc
cmpsl
lret
add
dec
cmp
push
add
stos
mov
mov
adc
sub
loope
jle
add
mov
aas
pusha
add
xor
jb
mov
lods
inc
ret
mov
dec
cmp
fcmove
and
jmp
or
lret
xchg
mov
jge
push
xchg
add
sbb
add
aam
lock
xrelease
into
xchg
add
sbb
or
push
add
mov
loop
int
daa
loop
add
cltd
mov
add
add
rolb
ljmp
scas
jp
add
cld
pop
jns
add
dec
pop
or
or
add
jb
popa
inc
cmp
in
fdiv
add
aas
xchg
sub
add
jge
loop
js
jle
inc
adc
out
gs
add
cmp
push
add
mov
mov
jmp
fldenv
int3
cld
inc
sub
lea
nop
add
add
add
mov
dec
sub
into
jae
add
in
or
add
mov
inc
mov
add
ljmp
xor
pop
addr16
ss
mov
add
add
hlt
add
pushf
push
test
add
jnp
imul
add
sbb
je
lds
inc
add
popf
popa
imul
pushl
adc
fstpl
add
imul
ficoml
loope
je
addb
cmp
dec
clc
xlat
xchg
leave
mov
add
add
pushf
test
sub
mov
sub
add
mov
add
dec
pusha
add
mov
xchg
lock
fwait
adc
roll
sbbl
daa
ret
adc
cmp
adc
or
xchg
add
mov
cmp
nop
add
inc
add
xlat
decl
mov
in
aam
cmc
enter
mov
testb
dec
add
push
in
aam
sbb
add
sbb
add
add
pop
arpl
and
mov
test
fbld
pop
xchg
add
add
inc
ffreep
add
add
jne
add
xchg
add
sarl
add
popa
addr16
rolb
loop
cmpsb
add
loop
lea
mov
mov
xlat
testb
add
shll
ret
pop
mov
sahf
icebp
mov
add
bound
mov
rolb
push
stos
test
mov
pop
cmc
cld
jno
ficoms
dec
xor
ret
inc
stos
sti
sub
mov
data16
xor
inc
rcll
add
mov
sub
add
add
xor
dec
movsb
add
add
add
add
and
push
cli
lods
pushf
int
test
add
add
aad
xor
iret
scas
push
add
add
cmp
dec
mov
aam
jp,pt
add
add
test
rolb
add
fldcw
je
sbb
add
and
mov
add
add
mov
add
push
add
test
add
add
mov
rolb
mov
into
lds
mov
add
inc
rcll
loope
adc
push
add
jle
incb
mov
out
inc
add
mov
add
mov
add
and
lock
add
add
mov
lds
daa
mov
add
aaa
xor
jnp
test
js
pop
sub
sub
add
lcall
fcoms
push
adc
add
int
lods
lret
adc
mov
add
add
xor
mov
mov
das
mov
mov
ret
ret
mov
sub
add
cmp
inc
cld
sub
add
lret
push
cld
mov
test
ret
add
add
jo
sub
add
mov
pushf
xor
insb
fistps
jg
pusha
add
jmp
fucom
in
movsl
inc
rolb
jp
mov
enter
xlat
jl
int3
jmp
dec
push
add
jge
xchg
add
add
add
data16
cltd
nop
add
adc
xchg
daa
sub
add
pop
add
mov
mov
jb
mov
inc
add
addl
add
sub
add
add
lcall
lds
add
in
mov
cmp
mov
negl
movb
in
testb
sub
add
pop
in
add
inc
mov
addr16
xchg
xchg
add
data16
cltd
or
add
add
mov
add
and
jl
dec
enter
mov
mov
lret
dec
jecxz
add
add
pop
mov
mov
nop
add
jge
mov
dec
ljmp
adc
xchg
add
mov
out
jg
pop
jle
add
jp
mov
gs
lock
ret
inc
add
mov
add
sbb
mov
add
inc
lods
pop
sti
addb
mov
addb
mov
stc
nop
es
or
add
inc
in
add
shll
add
mov
stc
nop
es
add
int
xor
and
nop
es
push
dec
push
add
add
add
leave
stc
nop
es
iret
incl
loopne
push
int
xor
repnz
add
test
push
mov
xchg
ret
push
cmpsl
mov
add
adc
nop
es
add
add
out
and
sti
add
add
or
add
add
add
mov
stc
nop
es
push
xor
add
add
rep
stc
nop
es
test
fidivrl
push
push
mov
xchg
ret
xor
loopne
fucompp
dec
aaa
test
inc
adc
add
sub
add
add
mov
inc
and
cld
nop
jmp
add
mov
add
cmpsl
mov
popf
nop
cld
nop
jmp
fisubrl
out
sbb
dec
cmp
nop
es
int
add
push
mov
sub
nop
es
repnz
sbb
les
push
mov
xchg
ret
mov
xor
inc
add
mov
xchg
ret
add
and
add
sbb
cld
nop
jmp
mov
je
add
add
test
sbb
add
adc
add
hlt
xor
loopne
stc
mov
stc
nop
es
jae
xor
add
add
add
nop
es
mov
add
ds
nop
cld
nop
jmp
xchg
push
add
add
stc
nop
es
out
and
loopne
push
mov
add
leave
repz
mov
sbb
leave
xor
nop
cld
nop
jmp
aad
add
jae
mov
stc
nop
es
and
or
xchg
adc
cld
nop
jmp
jmp
push
add
add
add
and
cld
nop
jmp
xor
add
mov
aad
inc
add
clc
roll
add
add
push
mov
xchg
ret
add
or
push
mov
xchg
ret
out
lock
add
adc
push
push
mov
xchg
ret
add
incl
add
mov
xchg
ret
add
sub
sub
push
mov
xchg
ret
xor
add
add
add
or
jb
bound
dec
add
imul
jb
add
xor
push
mov
xchg
ret
push
add
out
cmpsl
add
jg
nop
cld
nop
jmp
add
jns
ljmp
inc
add
and
jae
pop
mov
stc
nop
es
add
add
inc
sbb
nop
es
hlt
int
add
sub
nop
cld
nop
jmp
jae
iret
add
push
jns
add
stc
nop
es
fucomp
mov
add
jmp
stc
nop
es
add
out
add
add
xchg
add
call
nop
cld
nop
jmp
aad
sub
push
mov
xchg
ret
add
add
sar
cld
nop
jmp
xor
push
add
and
inc
jp
nop
cld
nop
jmp
cmpsl
int
add
stos
push
stc
nop
es
fucom
push
push
push
add
test
nop
cld
nop
jmp
push
lock
add
int
mov
nop
cld
nop
jmp
add
add
add
xor
and
stc
nop
es
xor
add
jmp
dec
cmp
nop
es
cmpsl
clc
test
fs
mov
stc
nop
es
xor
out
add
add
push
stc
nop
es
add
add
add
cld
je
nop
cld
nop
jmp
scas
mov
add
lret
and
nop
es
incl
mov
mov
stos
call
stc
nop
es
add
add
leave
sub
nop
es
add
arpl
mov
mov
stc
nop
es
xacquire
iret
inc
add
loopne
add
add
cmpsl
pushf
push
push
mov
xchg
ret
add
add
mov
nop
cld
nop
jmp
add
mov
push
mov
stc
nop
es
add
add
add
xchg
adc
xchg
add
nop
cld
nop
jmp
jmp
mov
add
push
mov
xchg
ret
mov
repnz
out
add
mov
stc
nop
es
mov
add
lock
inc
push
mov
xchg
ret
add
fidivrl
ja
mov
stc
nop
es
lock
sub
cli
nop
cld
nop
jmp
add
iret
arpl
loopne
loopne
add
add
push
mov
xchg
ret
add
mov
rclb
xchg
in
add
add
and
int
add
push
stc
nop
es
and
add
or
push
stos
and
stc
nop
es
roll
add
cmpsl
bound
mov
add
adc
jb
insb
xor
stc
nop
es
add
clc
shr
xchg
push
mov
xchg
ret
xor
xor
ds
nop
cld
nop
jmp
dec
cmpsl
bound
into
lea
stc
nop
es
fisubrl
lock
push
push
mov
xchg
ret
out
mov
add
es
loopne
add
sbb
jo
or
nop
es
add
incl
add
cmp
cli
mov
stc
nop
es
add
rep
stc
nop
es
sarl
add
add
loop
or
es
add
es
mov
stc
nop
es
mov
add
push
mov
xchg
ret
loop
add
dec
movzwl
stc
nop
es
add
frstor
add
and
stc
nop
es
lock
add
xor
nop
cld
nop
jmp
push
clc
add
int
push
sub
and
add
add
xor
xor
dec
add
nop
es
add
add
shrl
shr
stc
nop
es
add
add
roll
add
stc
nop
es
add
add
add
push
icebp
stc
nop
es
imul
cmpsl
add
add
mov
jb
jmp
add
rep
stc
nop
es
je
add
push
cmp
stc
nop
es
test
sub
push
mov
xchg
ret
add
add
add
push
mov
adc
or
mov
movsb
push
jo
xchg
add
jmp
add
loopne
int
and
dec
cmp
nop
es
and
mov
mov
push
mov
xchg
ret
add
clc
mov
add
push
mov
xchg
ret
jmp
inc
add
stc
nop
es
hlt
test
add
mov
xchg
ret
mov
bound
mov
push
nop
cld
nop
jmp
xor
add
repnz
add
add
push
add
add
push
add
imul
jns
inc
add
add
add
add
push
stc
nop
es
iret
je
add
xchg
bound
mov
xchg
ret
add
mov
les
test
int
adc
nop
es
add
mov
ficoml
mov
xchg
ret
roll
mov
pop
nop
cld
nop
jmp
add
out
add
lock
out
push
mov
adc
add
call
add
mov
stc
nop
es
shl
add
push
add
sbb
add
or
add
icebp
inc
js
mov
add
nop
es
add
add
add
add
outsl
popa
fs
nop
es
add
jns
out
mov
nop
cld
nop
jmp
add
add
add
insl
mov
stc
nop
es
push
xor
nop
es
push
mov
jnp
mov
cld
nop
jmp
xor
je
addr16
add
stc
nop
es
jae
cmpsl
lcall
mov
stc
nop
es
loopne
sub
movsb
stc
nop
es
add
add
arpl
push
das
mov
stc
nop
es
loopne
jbe
fiaddl
stc
nop
es
je
clc
loopne
push
stc
nop
es
add
jae
add
add
stc
nop
es
add
roll
cltd
add
stc
nop
es
or
movb
push
nop
cld
nop
jmp
add
add
and
add
add
jmp
addr16
add
test
add
pop
stc
nop
es
add
hlt
add
jne
stc
nop
es
cmp
sldt
add
nop
jmp
dec
add
add
add
pop
pop
lods
push
mov
xchg
ret
dec
add
shrl
es
loopne
mov
shl
nop
cld
nop
jmp
imul
add
jmp
mov
add
nop
es
add
xor
mov
stc
nop
es
add
add
add
jne
gs
nop
es
add
lret
loopne
mov
xchg
ret
repnz
jns
mov
sbb
adcb
imul
lea
stc
nop
es
out
add
add
add
stc
nop
es
xor
arpl
fiadds
add
or
add
add
testb
mov
nop
cld
nop
jmp
shr
add
add
cltd
push
push
mov
xchg
ret
add
push
push
mov
pushf
adc
add
nop
es
loopne
pminub
stc
nop
es
add
loopne
add
dec
add
mov
xchg
ret
or
push
add
adc
add
nop
es
add
jae
cmc
add
loop
xor
movsb
add
test
mov
xor
and
add
addb
pop
push
mov
xchg
ret
and
mov
ficoml
sbb
jb
push
add
add
push
push
add
mov
xchg
ret
jns
jmp
xor
jmp
fldl
add
nop
es
add
pop
add
push
mov
xchg
ret
add
and
enter
jb
xor
add
pushl
nop
cld
nop
jmp
xor
iret
aad
add
fimull
jb
hlt
add
xor
cld
mov
nop
cld
nop
jmp
xchg
add
add
mov
nop
cld
nop
jmp
add
push
jns
add
insl
mov
stc
nop
es
add
add
add
out
jae
add
mov
stc
nop
es
jae
add
mov
jle
add
or
add
sbb
cmp
add
xor
stc
nop
es
jmp
add
rolb
in
pop
nop
cld
nop
jmp
add
add
push
popf
push
stc
nop
es
add
add
add
or
cld
nop
jmp
jmp
add
add
add
mov
xchg
ret
jmp
roll
add
dec
xor
nop
cld
nop
jmp
loopne
loopne
rcr
clc
decb
mov
es
add
add
sar
mov
stc
nop
es
and
imul
inc
add
add
lret
mov
push
mov
xchg
ret
add
push
mov
dec
cmp
nop
es
fidivrl
push
loopne
add
and
cld
nop
jmp
add
add
call
nop
cld
nop
jmp
add
mov
stc
nop
es
add
add
add
add
imul
stc
nop
es
add
xor
sbb
mov
stc
nop
es
hlt
push
loopne
add
fisttpl
es
shll
sbb
mov
nop
es
add
add
cmpsl
add
sub
stc
nop
es
push
add
add
add
inc
add
push
stc
nop
es
shrl
xor
imul
cmpsl
and
xor
xor
stc
nop
es
mov
add
and
mov
lret
push
mov
insb
aam
jle
add
arpl
add
fsubp
add
mov
stc
nop
es
iret
iret
add
sbb
add
jle
stc
nop
es
jmp
shl
add
stc
nop
es
arpl
sbb
xor
add
stc
nop
es
add
mov
in
add
add
add
inc
sbb
jae
je
mov
stc
nop
es
rcrl
and
mov
mov
stc
nop
es
dec
add
cmp
xchg
nop
es
push
add
mov
nop
es
add
add
mov
jg
stc
nop
es
pushl
add
mov
stc
nop
es
loop
add
push
inc
add
push
add
mov
stc
nop
es
add
cmpsl
das
push
stc
nop
es
mov
loop
push
scas
sub
push
mov
xchg
ret
add
xor
fiaddl
iret
add
stc
nop
es
add
lock
add
jne
nop
cld
nop
jmp
add
add
je
sub
inc
add
inc
add
push
mov
stc
nop
es
jmp
xor
fbstp
stc
nop
es
push
add
or
pop
stc
nop
es
cmpsl
jae
or
and
out
mov
mov
xchg
ret
add
inc
add
jmp
jb
loopne
add
jp
adc
imul
inc
add
mov
mov
bound
mov
add
add
stc
nop
es
add
sbbl
inc
add
sar
add
add
arpl
stc
nop
es
loop
xor
add
mov
nop
es
loopne
add
and
mov
pop
push
mov
xchg
ret
add
add
add
xchg
mov
add
xchg
mov
nop
cld
nop
jmp
hlt
add
loopne
xchg
add
mov
push
mov
xchg
ret
add
or
iret
inc
into
jne
stc
nop
es
add
cmp
nop
es
add
mov
add
mov
je
pop
test
push
mov
xchg
ret
add
xor
xchg
add
add
es
add
add
xor
add
stc
nop
es
add
loopne
fisttpl
es
push
add
add
ret
nop
cld
nop
jmp
loop
add
add
lock
and
push
mov
xchg
ret
add
arpl
add
xor
nop
cld
nop
jmp
add
loopne
add
add
push
add
nop
es
scas
fldl
scas
cmp
cmp
nop
es
add
aad
push
add
adc
into
call
stc
nop
es
add
add
lcall
jb
add
mov
daa
sub
nop
jmp
add
add
add
loop
mov
stc
nop
es
add
add
jmp
cmpsl
or
mov
xchg
ret
cmpsl
or
lcall
add
test
add
stc
nop
es
inc
mov
add
stc
nop
es
push
push
add
pop
cmpl
nop
cld
nop
jmp
jae
mov
addr16
add
imull
loop
push
mov
xchg
ret
loopne
clc
push
repnz
jb
add
dec
iret
ret
in
push
add
add
stc
nop
es
add
add
add
add
add
stc
nop
es
add
add
add
add
xlat
pusha
add
stc
nop
es
add
inc
out
add
fstl
nop
es
add
push
loopne
add
inc
add
mov
xchg
ret
add
add
add
sbb
nop
es
mov
arpl
mov
mov
es
roll
add
addr16
les
stc
nop
es
add
or
rolb
push
nop
jmp
je
out
hlt
xor
push
call
stc
nop
es
je
xchg
mov
add
add
mov
xchg
ret
clc
add
mov
stc
nop
es
jae
lods
push
nop
cld
nop
jmp
fldl
add
loop
add
mov
xchg
ret
sub
add
es
add
xor
clc
add
repnz
and
cmp
ret
add
add
add
loopne
add
cld
nop
jmp
mov
je
shl
mov
nop
cld
nop
jmp
arpl
pavgb
lcall
nop
es
inc
int
add
add
gs
and
push
mov
xchg
ret
add
xor
dec
dec
nop
cld
nop
jmp
or
add
xchg
add
add
je
and
movb
add
push
nop
cld
nop
jmp
loop
lcall
push
push
stc
nop
es
and
out
fucompp
add
add
nop
es
add
push
lcall
es
add
add
ret
mov
stc
nop
es
add
inc
int
jns
mov
stc
nop
es
xchg
fiaddl
add
add
filds
xchg
ret
xor
add
rolb
pop
stc
nop
es
jae
add
call
mov
xchg
ret
add
jmp
xor
in
inc
add
loop
clc
xor
push
add
xlat
xchg
cwtl
decl
push
mov
xchg
ret
add
imul
je
sbb
popa
add
nop
es
int
xchg
mov
sbb
dec
add
jb
mov
fldl
xchg
ret
movswl
incl
fisubl
scas
ret
stc
nop
es
push
add
and
stc
nop
es
add
lock
push
add
cmp
nop
es
add
add
and
nop
jmp
add
dec
add
lock
push
nop
cld
nop
jmp
push
push
add
loopne
push
jb
add
add
add
add
sbb
nop
cld
nop
jmp
dec
add
insb
add
push
mov
xchg
ret
add
repnz
dec
add
insb
sti
inc
add
add
mov
nop
es
add
clc
push
verw
mov
stc
nop
es
add
jae
add
outsl
nop
cld
nop
jmp
jmp
jns
add
mov
rcll
stc
nop
es
loopne
int
push
decl
cld
or
jmp
add
add
push
ret
stc
nop
es
imul
loopne
xor
mov
nop
cld
nop
jmp
mov
add
jcxz
pop
stc
nop
es
xor
arpl
add
add
xchg
shll
movzwl
stc
nop
es
out
add
add
jb
loopne
and
add
stc
nop
es
lock
mov
push
mov
jmp
add
and
jp
add
add
es
push
add
add
out
out
xor
add
add
stc
nop
es
sub
clc
mov
cmc
stc
nop
es
add
add
stc
nop
es
dec
add
je
int3
call
stc
nop
es
add
iret
jo
loope
inc
nop
cld
nop
jmp
add
fidivrl
rolb
push
add
jne
push
mov
xchg
ret
add
jmp
xchg
add
stc
nop
es
add
add
add
add
add
or
nop
es
xor
scas
jns
fcmove
lea
stc
nop
es
add
and
xor
mov
add
pushf
jmp
lret
imul
jns
add
fsubs
cld
nop
jmp
imul
and
and
add
jb
add
imul
add
and
stc
nop
es
add
add
jg
andl
jb
add
xchg
mov
nop
cld
nop
jmp
mov
xor
inc
add
es
add
fnsave
xor
and
add
mov
loopne
add
add
sub
insb
call
nop
cld
nop
jmp
out
add
arpl
jne
stc
nop
es
fidivrl
or
stc
nop
es
int
fisttpl
es
xor
loop
fisttpll
stc
nop
es
mov
add
clc
dec
dec
nop
cld
nop
jmp
add
jmp
add
sub
fadds
xchg
ret
dec
loop
add
add
xchg
add
mov
stc
nop
es
aad
and
out
add
dec
movzwl
stc
nop
es
and
add
add
add
pop
adc
add
ds
stc
nop
es
je
je
xor
cmp
fcoml
mov
xchg
ret
mov
add
push
shl
push
mov
xchg
ret
add
add
add
shll
es
add
add
mov
nop
cld
nop
jmp
add
and
mov
add
jne
stc
nop
es
call
add
fdivr
nop
es
add
add
lock
pop
cmpl
nop
cld
nop
jmp
add
add
add
movzwl
stc
nop
es
loop
cmpsl
jae
addb
push
stc
nop
es
add
push
add
cmp
pop
stos
nop
cld
nop
jmp
add
jmp
add
add
lcall
es
mov
add
jne
stc
nop
es
add
aad
mov
stc
nop
es
add
push
loopne
loopne
mov
stc
nop
es
add
out
add
jmp
in
pop
mov
inc
push
adc
fadd
add
movsb
gs
add
nop
jmp
xor
sarl
push
stc
nop
es
loopne
add
sti
mov
stc
nop
es
push
xor
add
add
mov
adc
cld
nop
jmp
xor
cmp
nop
es
cmpsl
add
add
lock
fucomp
out
out
stc
nop
es
iret
add
add
stc
nop
es
push
scas
aad
add
nop
cld
nop
jmp
add
add
jae
sub
push
mov
xchg
ret
add
scas
push
cmp
mov
xchg
ret
add
add
add
inc
cmpsl
mov
add
pop
add
add
sbb
add
flds
xchg
ret
sbb
push
loop
add
fwait
mov
stc
nop
es
bound
push
loopne
nop
es
add
repnz
add
subl
push
mov
xchg
ret
out
and
add
add
add
cld
stc
nop
es
push
push
ja
push
stc
nop
es
mov
jmp
mov
stc
nop
es
clc
fldl
add
arpl
xchg
jg
push
mov
xchg
ret
add
add
add
add
cmp
add
push
mov
xchg
ret
jmp
hlt
add
push
push
not
push
mov
xchg
ret
sub
push
jecxz
add
push
mov
xchg
ret
add
push
jmp
nop
cld
nop
jmp
xor
jns
ror
mov
iret
inc
add
add
out
add
add
nop
es
add
mov
nop
cld
nop
jmp
add
jns
add
mov
inc
cmp
nop
es
push
and
add
insl
jmp
stc
nop
es
push
repnz
add
movsb
add
nop
cld
nop
jmp
add
add
sbb
add
lret
push
stc
nop
es
xor
popa
aaa
xchg
add
add
mov
stc
nop
es
hlt
inc
add
add
stc
nop
es
add
add
inc
push
scas
sbb
adc
add
inc
add
add
add
push
mov
xchg
ret
push
sbb
add
jb
add
mov
add
add
xchg
stc
nop
es
add
add
fisubrl
popa
add
mov
xchg
ret
lock
stc
nop
es
xor
add
add
add
mov
jmp
nop
cld
nop
jmp
add
push
add
pop
mov
stc
nop
es
rcr
cvtps2pi
add
jecxz
add
mov
xchg
ret
add
push
jmp
add
push
mov
xchg
ret
repnz
add
and
mov
mov
push
mov
xchg
ret
add
imul
add
push
push
mov
xchg
ret
xor
add
dec
or
mov
xchg
ret
aad
add
je
add
stc
nop
es
mov
add
test
nop
es
add
push
push
sbb
add
stc
nop
es
add
push
add
inc
inc
add
nop
es
mov
sbb
call
add
add
add
or
stc
nop
es
shl
add
push
nop
cld
nop
jmp
add
add
sahf
add
stc
nop
es
clc
fidivrl
add
add
adc
nop
es
xchg
sarl
loop
mov
in
or
xor
add
stc
nop
es
arpl
aad
inc
add
stc
nop
es
xor
add
iret
int
loopne
push
stc
nop
es
push
sbb
add
add
mov
push
mov
xchg
ret
add
add
jb
ficomps
nop
es
addr16
add
and
add
push
mov
pop
leave
ret
add
pop
add
add
sbb
dec
push
mov
xchg
ret
cmpsl
add
push
jns
xor
add
mov
xchg
ret
push
add
je
add
addb
inc
push
mov
xchg
ret
add
push
add
loop
adc
adc
nop
es
mov
xchg
rorl
nop
cld
nop
jmp
add
mov
add
add
xor
add
stc
nop
es
add
push
nop
cld
nop
jmp
hlt
xor
add
add
add
mov
stc
nop
es
xchg
add
add
push
add
call
jmp
add
or
inc
push
mov
xchg
ret
add
add
add
mov
enter
nop
jmp
int
jmp
jle
ret
mov
xchg
ret
jmp
add
add
add
es
sub
push
sbb
nop
es
add
add
inc
add
cmp
jne
stc
nop
es
dec
add
dec
add
stc
nop
es
add
add
add
add
mov
stc
nop
es
dec
add
jae
add
mov
stc
nop
es
add
je
add
stc
nop
es
jns
add
jns
push
stc
nop
es
and
mov
mov
stc
nop
es
add
inc
add
add
push
mov
xchg
ret
xchg
loopne
add
jb
out
mov
stc
nop
es
jns
push
cmp
stc
nop
es
add
test
push
mov
xchg
ret
xor
and
pusha
nop
cld
nop
jmp
sbb
jae
loop
add
out
mov
nop
cld
nop
jmp
add
jmp
add
out
stc
nop
es
add
add
sldt
add
add
cmp
test
std
stc
nop
es
aad
add
add
lea
nop
cld
nop
jmp
or
add
add
cmpsl
or
mov
xchg
ret
add
add
add
add
add
nop
cld
nop
jmp
xchg
or
lock
imul
push
mov
xchg
ret
add
add
add
add
mov
mov
xchg
ret
bound
xor
xchg
push
add
nop
es
add
pop
add
nop
cld
nop
jmp
add
add
add
add
mov
push
stc
nop
es
xor
dec
add
add
adc
and
mov
nop
cld
nop
jmp
jmp
mov
or
nop
es
add
add
jmp
call
loope
incl
int
add
inc
stc
nop
es
jmp
aad
and
jge
nop
cld
nop
jmp
add
add
insl
and
stc
nop
es
je
imul
clc
in
add
add
add
add
push
add
mov
stc
nop
es
mov
addr16
mov
pushl
stc
nop
es
add
aad
add
xor
stc
nop
es
cmpsl
add
jmp
push
jae
mov
cld
nop
jmp
and
loopne
jns
add
sub
jmp
lcall
xchg
sub
test
out
stc
nop
es
add
add
mov
jmp
nop
cld
nop
jmp
push
and
jg
inc
call
aaa
in
incl
xor
scas
add
jae
add
mov
add
jmp
add
add
and
es
out
or
pop
push
stc
nop
es
add
add
inc
add
jns
add
push
stc
nop
es
push
add
add
add
add
sar
nop
es
jae
verr
add
inc
add
push
mov
xchg
ret
iret
jae
imul
push
xchg
ror
mov
push
mov
xchg
ret
add
add
add
jp
test
out
stc
nop
es
aad
jmp
add
add
nop
es
xor
add
dec
or
mov
xchg
ret
add
add
sbb
pop
stc
nop
es
add
push
mov
add
nop
cld
nop
jmp
aad
add
jmp
imul
mov
test
stc
nop
es
bound
add
or
nop
es
imul
imul
pop
movzwl
stc
nop
es
push
add
repnz
popa
add
nop
es
cmpsl
add
add
push
jmp
nop
es
sldt
mov
int3
push
push
mov
xchg
ret
push
sub
scas
sbb
inc
add
rol
shll
xchg
add
inc
in
push
mov
xchg
ret
add
add
data16
add
nop
cld
nop
jmp
loop
out
loopne
addb
add
es
add
sub
jns
stc
nop
es
imul
push
out
add
add
nop
cld
nop
jmp
or
add
lcall
out
je
nop
cld
nop
jmp
dec
push
add
stc
nop
es
int
add
pop
cmpw
stc
nop
es
bound
lldt
stc
nop
es
mov
add
call
jmp
add
out
test
in
inc
add
shll
shrl
xor
add
add
pop
push
mov
xchg
ret
cmpsl
bound
add
iret
add
jo
nop
cld
nop
jmp
add
add
add
mov
adc
add
stc
nop
es
incl
add
xchg
call
nop
cld
nop
jmp
add
xor
in
push
mov
xchg
ret
mov
push
cli
add
nop
cld
nop
jmp
arpl
fldl
clc
add
sub
inc
add
add
add
add
jne
stc
nop
es
add
invd
shr
nop
cld
nop
jmp
add
xor
iret
jns
push
push
mov
xchg
ret
push
add
jmp
loop
or
xor
nop
es
loop
scas
add
mov
mov
xchg
ret
and
add
mov
xchg
ret
mov
hlt
out
push
stc
nop
es
xor
loopne
add
add
push
nop
cld
nop
jmp
push
xor
push
add
mov
stc
nop
es
add
add
int
sbb
es
cmpsl
mov
scas
add
push
mov
xchg
ret
or
xor
add
or
stc
nop
es
and
test
jmp
sub
dec
mov
or
nop
jmp
add
jns
push
add
jae
xchg
inc
add
shr
stc
nop
es
lock
loopne
int
sbb
fcomp
inc
add
add
mov
cmpsb
add
jl
stc
nop
es
add
push
mov
nop
cld
nop
jmp
mov
out
add
adc
stc
nop
es
mov
and
nop
cld
nop
jmp
add
add
push
clc
add
add
stc
nop
es
push
push
push
add
je
add
hlt
add
add
add
add
add
xchg
stc
nop
es
loopne
cmpsl
iret
add
add
add
nop
jmp
xor
lock
add
stc
nop
es
sldt
arpl
xorl
add
push
stc
nop
es
out
or
cmp
std
mov
stc
nop
es
je
bound
bound
add
fildl
xchg
ret
repnz
fiaddl
add
add
mov
push
push
mov
xchg
ret
jmp
add
add
or
test
cld
nop
jmp
add
rclb
cld
incl
add
sldt
add
or
lods
and
imul
es
mov
add
nop
cld
nop
jmp
add
add
cmc
push
add
add
add
sbb
nop
es
loopne
add
mov
add
cmpsl
sbb
in
add
mov
or
jo
std
in
movsb
add
add
in
call
jmp
jns
add
push
nop
cld
nop
jmp
add
add
xchg
sub
mov
stc
nop
es
jmp
add
add
mov
nop
cld
nop
jmp
out
and
jmp
test
nop
es
clc
scas
add
jae
mov
stc
nop
es
add
lock
loop
pusha
push
mov
xchg
ret
add
add
sub
and
nop
es
xor
add
sbb
cmp
stc
nop
es
xor
add
xor
je
stc
nop
es
add
je
ror
stc
nop
es
add
add
add
mov
stc
nop
es
cmpsl
add
add
add
stc
nop
es
loopne
inc
add
mov
pop
and
nop
es
clc
add
loop
xor
add
xor
rep
stc
nop
es
rcll
add
test
cltd
flds
xchg
ret
xor
add
push
and
add
arpl
jmp
stc
nop
es
movhps
scas
loopne
xchg
sbb
stc
nop
es
add
add
sbbl
jmp
out
imul
add
push
fisttpl
loop
add
add
add
pop
stos
stc
nop
es
push
int
add
loop
add
rclb
std
mov
lcall
add
push
mov
xchg
ret
push
sub
insl
add
stc
nop
es
or
and
popa
stc
nop
es
fidivrl
add
add
mov
nop
cld
nop
jmp
add
mov
sbb
es
cmpsl
add
int
add
add
stc
nop
es
add
sarl
xchg
in
stc
nop
es
and
add
adc
nop
cld
nop
jmp
add
mov
add
es
hlt
add
mov
add
jge
int
pop
jae
nop
es
out
mov
jge
nop
cld
nop
jmp
loop
loopne
arpl
jmp
stc
nop
es
add
pop
out
mov
stc
nop
es
sbb
and
inc
add
nop
jmp
dec
lock
push
add
xor
je
stc
nop
es
push
and
jne
nop
cld
nop
jmp
and
mov
stc
nop
es
repnz
jns
add
sbb
nop
es
out
repnz
add
out
pop
push
mov
xchg
ret
push
add
push
int
xchg
stc
nop
es
add
add
decl
push
mov
xchg
ret
clc
add
add
add
call
add
stc
nop
es
add
lock
call
stc
nop
es
and
add
dec
push
mov
pop
add
push
lret
movb
add
add
je
stc
nop
es
add
cmpsl
sbb
sub
nop
es
mov
cmovae
push
stc
nop
es
add
add
push
add
sub
nop
es
sub
mov
add
stc
nop
es
add
fst
pushf
mov
stc
nop
es
add
xchg
inc
pop
lods
push
mov
xchg
ret
inc
test
dec
mov
mov
stc
nop
es
add
pcmpeqb
arpl
and
nop
cld
nop
jmp
add
inc
lcall
stc
nop
es
clc
add
aad
add
mov
fs
nop
es
lcall
jne
nop
cld
nop
jmp
bound
int
add
into
push
push
mov
xchg
ret
add
add
add
sbb
nop
cld
nop
jmp
sbb
push
jmp
xor
nop
es
cmp
lcall
push
mov
xchg
ret
add
roll
jns
mov
stc
nop
es
and
add
add
add
add
add
stc
nop
es
add
add
add
lcall
xor
call
xchg
push
hlt
xor
fadds
icebp
stc
nop
es
add
add
popl
stc
nop
es
add
add
add
cmp
nop
es
add
jns
add
add
nop
cld
nop
jmp
xor
lock
sbb
test
mov
xor
push
add
inc
add
je
add
lock
add
es
push
fisttpll
jmp
add
in
pop
push
mov
xchg
ret
push
sbb
xor
add
jbe
jecxz
rolb
mov
push
nop
cld
nop
jmp
add
mov
add
je
add
jmp
arpl
add
add
add
mov
stc
nop
es
add
incl
add
and
ss
nop
cld
nop
jmp
cmpsl
add
push
mov
add
add
scas
lahf
test
mov
es
add
movsb
add
mov
cmc
or
jno
add
sub
adc
rolb
dec
mov
mov
repnz
mov
outsb
add
ds
add
je
xor
dec
push
add
add
cmp
inc
popa
pop
add
mov
fcmove
scas
mov
jo
xor
dec
lods
adc
add
mov
ficompl
lea
daa
les
jle
sub
jno
add
outsl
push
push
push
add
pop
stos
fildll
add
fistps
add
xorl
xchg
add
jnp
or
sub
dec
and
mov
fimuls
aam
dec
adc
out
push
out
cmc
ja
add
sbb
hlt
add
jns
jbe
jmp
or
arpl
pop
fldt
jg
xor
fisubrs
and
fcompl
cmp
lea
add
mov
sbb
push
mov
add
shl
add
mov
leave
outsb
mov
bound
mov
add
je
jo
fstps
das
ud1
pop
adc
sahf
pusha
add
add
mov
xor
xor
cmp
add
xchg
sahf
pop
xchg
ret
ficoms
xchg
mov
xchg
add
cmp
ror
in
insl
add
jp
lea
add
mov
insb
lods
stc
sub
add
push
push
add
inc
dec
mov
mov
icebp
mov
add
mov
scas
mov
add
rolb
repz
push
add
jno
scas
mov
sub
std
in
fwait
cmp
pop
sub
or
inc
add
add
nop
add
push
add
add
mov
add
mov
sub
mov
pop
mov
add
add
xor
insb
pop
dec
xor
adc
jo
test
lds
fildl
add
add
mov
scas
mov
jge
jo
sbb
add
xor
sub
cmp
rolb
mov
add
add
sbb
loopne,pt
inc
sub
sbb
add
les
ret
pop
mov
stos
outsb
and
bound
mov
ret
add
icebp
enter
add
cmp
pop
mov
add
push
das
js
incb
add
add
dec
test
add
out
dec
push
add
test
add
arpl
sub
and
mov
and
enter
out
fistl
add
cltd
lahf
inc
add
dec
add
lods
cmp
adc
add
add
add
cltd
pushf
adc
add
add
dec
pop
enter
sahf
and
mov
jnp
cmp
aam
xchg
xchg
sub
popf
in
add
sti
lcall
out
xor
push
pop
adcl
mov
iret
push
stos
fsubr
push
add
mov
insl
sti
rcll
push
add
push
xchg
mov
ljmp
add
add
lahf
outsb
jg
sbb
adc
dec
out
les
sub
in
in
testb
add
xchg
divl
push
add
pop
xor
int
add
pop
jle
test
dec
adc
outsb
out
jne
jnp
mov
enter
dec
mov
ljmp
xchg
mov
fwait
cmpsl
icebp
in
ja
cli
jnp
jne
mov
test
cmc
stos
push
negl
sbb
add
jo
and
fwait
cltd
sub
add
jns
sahf
enter
and
add
cs
add
pop
int
jne
out
es
loop
mov
add
push
add
add
inc
and
mov
out
popa
xor
mov
or
add
sub
jmp
add
fs
mov
xchg
inc
add
mov
add
pop
mov
sti
push
add
jns
pop
jmp
daa
cmp
inc
ficomps
inc
jmp
add
add
add
mov
fsubrs
test
mov
adc
inc
mov
icebp
pop
lahf
ds
add
sub
xchg
sub
adc
mov
sub
lds
push
inc
add
loopne
jbe
and
add
leave
jbe
xchg
add
jo
into
cmpl
xor
lahf
addl
dec
adc
jg
mov
fmulp
mov
ret
aaa
aas
xchg
sub
jmp
add
add
dec
rorl
mov
adc
mov
std
insb
testb
mov
adc
inc
add
ljmp
adc
jecxz
aas
sbb
js
xchg
add
lcall
int3
aaa
ds
in
imul
stc
or
adc
mov
add
xchg
dec
ret
jbe
dec
or
xorl
add
imul
testb
pop
out
or
or
rcll
or
js
shll
add
daa
jecxz
mov
mov
add
into
push
in
rolb
cld
inc
add
nop
add
dec
and
dec
aas
push
push
pop
popf
mov
cmp
add
mov
sbb
push
lock
mov
pushf
out
enter
in
in
pop
or
add
or
mov
adc
push
and
mov
stos
loopne
in
mov
mov
mov
adc
xor
xor
jp
iret
fldcw
add
sub
cli
shll
test
add
add
sub
js
push
rolb
xchg
add
xchg
add
dec
je
leave
iret
movsl
add
mov
add
sub
add
lods
and
sub
add
mov
dec
addr16
ja
jg
add
dec
sbb
data16
addb
sbb
and
lods
mov
aam
pop
push
add
xchg
add
pop
adc
mov
pop
add
add
test
mov
add
filds
add
out
add
jo
fidivl
xchg
add
clc
das
addr16
lahf
leave
iret
mov
cld
and
mov
push
dec
adc
xchg
add
mov
fdivrp
nop
add
add
and
mov
sbb
outsl
icebp
mov
into
push
add
je
loope
lahf
mov
push
mov
loope
push
scas
and
lock
popa
dec
sahf
movsb
add
addb
imul
cmpsb
add
flds
mov
jmp
push
add
add
add
aaa
mov
add
int3
fstpl
xchg
add
mov
dec
or
add
sub
test
cmp
data16
nop
add
lret
int3
pop
insl
orl
mov
mov
and
cmp
sti
or
add
add
mov
clc
inc
add
std
pop
lret
add
aas
sbb
nop
add
add
add
add
aam
pop
jns
add
cltd
lods
repnz
and
mov
add
roll
mov
pop
leave
loop
sbb
fdivr
mov
add
push
int
and
outsl
xchg
add
jg,pt
das
jnp
or
movsl
dec
sbb
popf
push
add
outsb
lahf
add
fwait
cmp
lds
pop
js
ljmp
loop
das
add
sub
jno
add
add
add
hlt
add
jge
adc
movb
jp
add
int
push
mov
sbb
out
sahf
dec
push
add
lea
mov
jl
call
sbb
add
sub
add
xchg
iret
sbb
add
cmpsb
add
dec
testb
add
mov
movsb
add
dec
insl
repnz
and
add
ljmp
out
lcall
jne
and
mov
add
pop
mov
pop
lods
sbb
add
add
add
add
add
fs
add
xor
jl
insl
push
into
cmp
out
dec
sub
adc
movb
jne
push
mov
add
leave
jle
loop
jns
add
lahf
xchg
add
dec
dec
pop
mov
in
ja
nop
add
add
sub
add
je
push
movsl
inc
add
mov
lret
xchg
xor
les
mov
stos
pushf
sbb
jge
sub
pop
mov
inc
add
xor
xchg
add
mov
in
int
sbb
add
mov
mov
out
push
add
dec
xchg
add
push
add
or
add
add
lahf
rorl
sub
xchg
into
fwait
roll
xor
and
mov
or
lcall
data16
mov
repnz
mov
add
inc
add
xor
test
sub
jnp
add
add
adc
dec
jb
mov
jb
decb
out
fcoms
add
outsb
mov
rcll
push
add
mov
adc
mov
cltd
jp
add
add
gs
xchg
add
pop
fdivl
add
int3
test
add
mov
add
add
add
xor
movb
add
add
pusha
add
rolb
mov
sub
cltd
push
sub
add
add
pop
pushf
andl
add
add
add
dec
dec
mov
pop
cmp
clc
jle
add
add
fdivrl
ja
pop
out
add
mov
mov
add
in
jne
les
sub
rorl
adc
dec
xor
repz
add
xorl
movsb
add
mov
add
add
cmpsb
add
push
add
mov
inc
add
lret
mov
cmp
jge
fdivl
pushf
push
add
cmpsl
arpl
add
stos
sub
pop
add
mov
add
movsb
add
add
add
xchg
test
add
inc
add
jg
js
add
add
int
daa
jmp
dec
int3
shll
popa
stos
lods
out
aaa
cmp
xlat
sbb
repz
cli
and
mov
add
mov
add
add
adc
cmp
add
decl
add
cmc
inc
add
add
sbb
adc
scas
cwtl
push
push
add
xchg
adc
int3
xor
insl
mov
cmp
enter
fwait
jmp
jnp
add
add
mov
xor
mov
inc
add
out
dec
fadds
jg
jno
shrl
cmp
jecxz
add
jb
mov
data16
fdivrp
testb
add
add
add
clc
rolb
lds
pop
adc
lods
xchg
fldenv
inc
add
aaa
iret
icebp
sub
and
jle
jo
dec
mov
mov
xchg
add
xchg
xor
jmp
jae
aaa
icebp
mov
stos
push
add
pop
jbe
cmp
mov
ret
mov
mov
sub
xchg
add
xchg
xchg
xchg
roll
fwait
inc
add
sbb
je
dec
fwait
repz
add
repnz
icebp
add
mov
push
fdivr
pop
js
or
add
inc
add
sub
push
add
ret
push
xor
out
adc
imul
ret
dec
cmp
int3
mov
xchg
je
movsb
add
add
cmp
add
dec
xchg
jo
add
mov
outsl
inc
add
and
mov
inc
ja
add
mov
jg
mov
pop
in
test
mov
jp
cmpsl
pop
hlt
add
daa
jl
data16
repz
cld
xor
pop
push
lcall
add
fcomps
roll
cmp
enter
pop
or
jb
xor
sbb
add
mov
mov
add
daa
mov
adc
xchg
add
inc
mov
js
cs
fnstsw
lahf
adc
add
ja
mov
movsb
add
std
int3
and
mov
rolb
add
mov
into
and
mov
push
add
cmp
xor
outsl
jno
out
mov
sti
sbb
and
jno
add
inc
add
mov
mov
add
add
add
std
stc
and
mov
insb
icebp
test
cmc
and
pop
sti
push
in
dec
dec
jp
fdivl
add
add
outsb
es
fcoms
jae
jnp
add
push
add
mov
enter
cmp
add
add
mov
add
xchg
aad
mov
in
nop
add
mov
fidivrl
nop
add
push
add
add
inc
mov
stc
jmp
repnz
lret
add
add
pop
and
mov
loop
xor
add
vpand
jecxz
adc
flds
or
imul
add
add
data16
add
add
add
mov
add
push
mov
inc
add
cwtl
mov
xor
leave
fisubl
les
push
add
into
lea
cwtl
xchg
add
fcmovnb
aas
movsb
add
mov
cmc
pop
out
nop
add
push
add
ucomiss
xor
add
out
testb
xchg
pop
sub
pop
mov
enter
pop
xor
sub
cmp
repnz
jge
movsb
add
lods
aad
add
test
xor
pop
and
movb
imul
add
in
inc
add
testb
xor
rcrl
push
add
add
jge
dec
arpl
fisttps
test
xchg
add
scas
rolb
xchg
add
mov
mov
lret
sbb
add
imul
ret
sbb
into
inc
add
stc
popf
pop
cmp
add
adc
adc
mov
adc
adc
test
loope
repnz
pop
loope
add
xchg
sbb
mov
add
mov
stos
xchg
add
add
movsb
add
sub
mov
cmpsb
add
sub
inc
add
lret
ljmp
add
push
add
xchg
add
jno
adc
push
add
add
cmp
adc
add
xlat
push
add
sub
inc
inc
add
add
add
inc
add
lcall
cltd
scas
adc
popf
and
mov
icebp
sub
add
add
or
add
mov
xorl
in
cli
push
in
or
mov
fldenv
insl
testl
add
mov
inc
sti
pop
jae
add
jmp
add
add
imul
insl
mov
add
dec
jg
cld
and
mov
mov
aaa
loopne
jl
jl
jne
add
testb
adcl
and
aas
sbb
add
inc
rolb
ja
ss
xor
xchg
jecxz
add
fstpl
fisubrl
or
jmp
mov
mov
xchg
and
mov
inc
test
insl
xchg
rcrl
add
mov
icebp
sbbl
data16
mov
stos
mov
add
movb
xor
inc
add
repz
pop
pop
addr16
add
mov
int3
dec
jl
mov
add
fistl
add
js
jbe
and
mov
jl
add
cmp
mov
xor
add
sub
sahf
mov
mov
add
loop
test
outsl
or
or
or
pop
in
rolb
add
cld
adc
add
fnstcw
movsb
add
add
add
cld
movsl
test
mov
pop
out
jbe
jp,pn
cwtl
clc
sbb
incb
add
inc
push
add
xor
fdivrp
daa
pushl
das
and
mov
inc
mov
adc
sbb
fwait
mov
pop
pop
mov
test
roll
jl
add
cmp
and
add
out
jp
add
xor
pop
mov
mov
push
cmp
addb
fwait
dec
lea
xor
jbe
aaa
dec
enter
mov
in
add
or
insl
test
inc
rcll
lock
add
icebp
cli
in
js
lods
out
mov
jbe
xor
dec
jmp
xlat
scas
dec
fdivp
enter
testb
outsb
data16
add
add
mov
testb
loop
jo
jnp
movsb
add
add
repnz
shll
add
aaa
icebp
xchg
insb
xchg
add
pop
scas
jecxz
jl
sahf
rolb
add
sbb
clc
mov
add
mov
mov
and
mov
lret
lret
lods
int3
sub
out
or
push
imul
test
add
shrl
ljmp
fmull
push
or
and
in
cld
add
faddl
add
test
adc
in
int
pop
add
addb
lock
add
popf
leave
sub
cmp
scas
inc
add
popa
in
add
mov
mov
or
push
pusha
add
add
jecxz
pop
cltd
loop
popf
fdivrs
mov
add
xchg
add
add
add
xchg
rolb
cli
insl
mov
mov
mov
addr16
cmp
lds
mov
ja
pop
out
xchg
repnz
out
mov
pop
xchg
add
not
add
xor
lds
add
fwait
dec
into
jnp
cli
xchg
add
mov
cmpl
mov
fwait
bound
mov
adc
add
lret
lods
adc
aas
cmp
repz
dec
jl
add
pop
inc
add
add
add
add
std
in
sub
add
imul
addb
hlt
add
add
push
add
jmp
inc
add
add
pop
es
add
int
add
mov
loopne
jns
pmullw
pop
xchg
jp
test
addr16
add
add
sub
add
mov
roll
add
ret
add
inc
push
testb
add
and
xor
rolb
fstps
push
add
add
add
add
xor
cmpsb
add
stos
xchg
add
mov
dec
stos
pop
sbb
into
push
add
push
test
aaa
add
mov
or
adc
add
call
add
lret
enter
aas
push
mov
pop
and
hlt
add
sahf
clc
fists
sbb
add
int3
dec
loop
loop
out
xlat
daa
sbb
lock
push
ret
push
xchg
mov
inc
add
add
lds
add
mov
leave
xchg
add
push
add
in
repz
stos
loopne
pop
dec
stc
cs
fisubrs
bound
mov
xchg
add
pop
fimull
rolb
call
add
fists
xchg
jmp
or
stc
mov
push
add
icebp
imul
push
add
add
add
or
add
scas
adc
pushf
push
add
rolb
add
mov
inc
add
mov
leave
inc
add
jns
jp
pop
mov
add
add
add
fidivrs
mov
ja
inc
jno
cwtl
dec
cmpsl
adc
out
repnz
cld
leave
pop
je
pop
inc
add
add
shll
movb
cmp
add
add
fimull
xor
movb
ret
push
add
or
add
mov
add
add
and
mov
lds
add
mov
cwtl
mov
xor
leave
xor
clc
jae
faddl
cmp
incb
mov
or
iret
mov
add
add
push
cmp
enter
adc
aam
sub
xchg
add
add
repnz
push
add
das
imul
xchg
xor
loope
mov
imul
sub
sub
add
adc
cld
test
mov
push
add
insl
mov
jge
pop
mov
into
add
add
loope
cmp
sub
add
jg
mov
mov
add
mov
sub
sbb
mov
jns
cld
movb
js
add
sti
dec
and
jge
add
mov
stc
mov
add
xlat
xchg
repnz
in
std
mov
mov
push
add
add
add
mov
jne
add
leave
inc
add
add
jne
jbe
loopne
rolb
xor
pop
mov
xchg
imul
add
dec
outsl
jmp
and
mov
loop
sub
cld
push
mov
movsb
add
pop
mov
add
les
rolb
xchg
add
popl
add
insb
into
std
js
push
xor
add
add
add
push
add
and
call
mov
rolb
xchg
and
mov
fiaddl
out
in
insl
sub
repnz
mov
fstps
or
or
mov
add
das
jnp
push
add
xlat
lods
mov
add
in
mov
add
add
rolb
add
add
mov
xchg
inc
inc
sub
mov
jbe
push
iret
mov
inc
add
inc
inc
add
add
cmp
enter
lds
add
xchg
add
imul
sbb
mov
ret
inc
fldt
aas
jno
add
adc
lods
popf
pop
and
push
add
xor
mov
jle
mov
jb
jecxz
add
mov
lahf
inc
in
dec
mov
mov
add
in
les
push
imul
push
jb
jge
xchg
das
push
fsts
lcall
add
mov
add
add
icebp
pop
cmp
ret
add
push
lcall
add
cmp
push
rcll
add
insl
jns
dec
cli
scas
shll
arpl
out
mov
cmpl
add
out
rolb
rorl
testb
add
jmp
add
scas
add
add
push
add
push
add
pop
test
sbb
call
jae
adc
or
test
inc
jmp
sbb
pop
and
in
add
iret
adc
insb
add
mov
jge
add
add
sub
lret
jno
and
or
mov
pop
xchg
add
lods
daa
out
xchg
ds
add
mov
add
mov
push
add
mov
outsb
and
add
sub
mov
add
jl
stos
adc
mov
mov
add
testb
mov
data16
add
add
mov
dec
cmp
sbb
add
icebp
cmp
fldl
inc
nop
add
clc
xchg
add
or
xchg
testb
push
add
out
inc
mov
fsub
add
add
scas
ret
insl
dec
mov
sbb
push
add
pusha
add
inc
add
sahf
push
mov
addb
cmp
add
stos
mov
cltd
push
adc
out
add
mov
xchg
jae
loopne
xchg
lahf
fisubrs
mov
sbb
add
repnz
std
outsb
scas
inc
rcrl
add
or
je
mov
add
in
jl
add
inc
add
sub
push
sbb
mov
push
gs
data16
sarl
dec
or
add
cmpl
ds
icebp
dec
bound
mov
rolb
push
add
subl
test
add
les
shrl
or
add
ljmp
xchg
xor
jp
add
inc
pop
sub
into
lds
add
repnz
add
add
mov
test
pand
mov
leave
rolb
push
fs
test
adc
sub
or
and
add
popa
and
or
add
add
fs
mov
xor
loopne
sbb
and
mov
pop
fmul
pusha
add
sub
pop
push
sbb
fcoms
xor
sub
inc
mov
jg
daa
add
add
cmp
adc
jp
add
dec
rolb
add
add
add
bound
mov
or
xor
nop
add
sub
add
cmp
add
out
lret
data16
add
pop
ret
mov
into
insb
into
pop
add
push
add
xchg
dec
lret
mov
fdiv
add
mov
mov
xor
pop
jecxz
add
push
push
add
and
addb
je
add
andl
mov
add
add
lods
pusha
add
dec
mov
jb
dec
test
xchg
aad
je
dec
dec
sahf
xchg
add
aaa
push
mov
rep
adc
hlt
add
mov
add
or
jmp
enter
dec
dec
fcom
dec
pop
add
sub
hlt
add
or
mov
fstpt
add
insb
add
add
out
sti
addb
add
push
add
sti
xlat
out
mov
mov
xchg
add
xchg
cld
outsb
mov
in
out
mov
lahf
insb
daa
or
rcll
das
cmpsb
add
add
pop
icebp
lock
push
add
arpl
push
inc
add
and
mov
adc
cmp
add
addb
jns
jmp
inc
add
add
add
and
mov
ret
mov
sub
aaa
sbb
jno
cmpsl
push
in
sbb
add
xor
les
fsubrl
add
sbb
push
jg
sub
jne
mov
pop
lock
add
cwtl
pop
and
scas
mov
push
push
add
in
mov
mov
das
test
add
jnp
add
add
sbb
add
xchg
movsb
add
jnp
add
dec
cmp
aam
add
cli
in
lods
cwtl
xchg
add
repz
outsl
xlat
stc
xchg
add
add
or
int3
rcrl
add
push
add
add
mov
add
add
cmp
add
lock
cmp
outsl
xor
push
imul
dec
movb
test
lds
jge
add
add
inc
pop
addb
push
xor
js
xor
dec
sbb
add
add
adc
int
mov
add
push
add
cmc
cmc
out
adc
jecxz
mov
and
mov
out
push
adc
push
add
add
add
dec
jnp
sub
mov
add
daa
jae
test
jnp
inc
inc
testb
aaa
add
add
jg
xor
divl
pop
stos
sar
sub
add
push
add
push
into
int3
js
cmp
push
inc
add
inc
add
xchg
add
pop
lock
add
mov
add
xor
pop
add
insb
inc
add
add
addb
push
add
mov
or
xor
lock
push
add
mov
data16
mov
mov
add
jae
call
jmp
in
cmp
adcl
jno
cmp
sub
jns
popa
mov
in
inc
add
insb
test
pop
push
add
add
push
ss
xchg
dec
loopne
cwtl
mov
icebp
and
mov
add
pop
xor
jg
movsb
add
or
mull
add
mov
int3
push
add
pop
rcll
mov
dec
gs
stc
cld
leave
std
call
jae
add
addb
pop
icebp
sub
cwtl
mov
mov
test
push
add
pop
xor
pop
cmpsb
add
scas
int3
fistpll
dec
iret
dec
or
push
out
loope
cs
add
push
scas
xchg
stos
push
add
xchg
mov
sbb
mov
std
lcall
or
mov
addb
mov
add
adc
add
add
int3
cmp
cmp
out
stos
movb
add
cmp
cmpsb
add
xor
addb
add
shl
rolb
adc
add
push
add
pop
out
mov
add
jmp
mov
jae
shrl
outsl
push
add
loope
loopne
lret
sbb
addb
jg
sub
add
mov
pop
jnp
add
add
add
sub
sub
cs
and
xor
bound
mov
out
gs
lcall
push
add
xor
sahf
shrl
xor
add
dec
sbb
frstor
add
test
mov
add
movsl
jmp
lahf
sarl
mov
mov
roll
add
lcall
lods
sbb
imul
add
rcl
cmp
or
jge
add
xor
shl
into
inc
add
add
add
cld
test
scas
imul
jp
add
pusha
add
add
mov
or
fistps
add
rolb
adc
cwtl
into
movsl
cmp
aam
mov
seto
das
or
dec
ret
xlat
or
xor
add
push
add
mov
pusha
add
rolb
adc
adc
mov
add
mov
sti
std
call
xchg
add
push
leave
lods
pop
mov
dec
lea
push
mov
add
add
mov
or
and
mov
adc
cmp
mov
add
add
mov
add
pop
jno
add
imul
loope
cltd
mov
lret
in
add
fnsave
xchg
jle
scas
cmp
adc
imul
xchg
add
mov
test
mov
sub
pop
sub
mov
mov
mov
xchg
add
nop
add
push
pop
fmulp
mov
add
add
add
cmp
add
add
xchg
add
add
loop
inc
cmpsl
out
add
dec
lcall
out
jo
xor
add
je
fcompl
push
ljmp
cmc
dec
xor
gs
push
add
add
daa
sub
movsl
sub
jg
imul
add
ret
outsb
push
jecxz
rolb
iret
bound
mov
cmp
add
add
or
mov
sub
add
jl
and
mov
jno
xor
mov
addr16
stos
push
add
mov
jge
daa
xchg
ds
add
adc
mov
add
mov
filds
ja
stos
aad
ret
in
add
lret
sahf
xor
lea
add
pop
and
mov
inc
inc
add
stc
ja
add
mov
inc
adc
xor
cmp
add
lods
ficompl
add
add
add
scas
mov
add
mov
jp
lret
mov
leave
dec
mov
mov
push
pop
sub
xchg
addb
orl
aam
mov
aad
inc
push
in
in
stc
adc
xor
pop
aam
popa
push
add
aaa
pop
push
add
mov
add
dec
cmpsb
add
xchg
add
add
and
bound
mov
sub
add
insl
leave
adc
out
scas
xor
add
add
mov
aad
push
jo
rolb
std
add
or
or
add
add
add
repz
adc
push
add
add
add
add
inc
add
scas
stc
dec
iret
or
mov
ret
cltd
lret
add
rcll
out
jecxz
into
inc
mov
dec
jnp
add
sbb
cmp
out
mov
and
mov
add
dec
mov
and
or
xchg
leave
lock
add
pop
sub
sub
xchg
dec
loopne
sub
xchg
inc
add
add
jg
and
mov
xchg
dec
push
fs
int3
sub
xchg
add
dec
test
pushf
test
clc
sub
lock
add
add
and
out
pusha
add
push
add
add
aaa
mov
stos
enter
ja
sub
add
push
daa
jp
add
add
scas
std
pop
pop
lahf
sbb
adc
dec
je
scas
ja
push
popa
insl
adc
movsb
add
add
mov
inc
jne
add
lods
rolb
add
arpl
sub
add
cmp
lcall
add
adc
inc
dec
pushf
in
mov
in
lret
aaa
fstp
lret
test
fsubrs
test
add
sbb
je
sbb
push
add
add
movb
cmp
das
or
add
insl
pusha
add
add
ljmp
shl
jnp
push
mov
adc
mov
mov
add
movsl
jnp
mov
outsb
xor
fbld
add
addr16
in
mov
popa
sub
js
dec
jo
jbe
inc
mov
in
push
push
add
sbb
push
jb
add
les
test
in
iret
aad
xor
lock
add
fsubrl
add
dec
jmp
add
mov
add
add
jle
sub
mov
jl
xchg
add
mov
dec
jnp
repnz
add
add
add
or
inc
mov
push
add
add
mov
adc
call
add
dec
lret
das
bound
mov
or
add
add
pop
ja
mov
sub
cli
test
out
jns
add
add
scas
and
mov
fadds
test
adc
int
and
call
push
rcll
sbb
pushf
dec
or
add
or
push
mov
ljmp
xchg
sbb
add
fs
add
inc
add
add
loopne
xchg
aad
aas
mov
pop
jno
lret
movsb
add
sub
and
add
bound
mov
adc
cmp
and
jb
add
cmp
add
sahf
andl
add
mov
or
add
insb
push
add
mov
add
dec
jecxz
and
mov
mov
xorl
ja
add
add
adcl
mov
add
add
add
add
rolb
jmp
add
dec
dec
inc
cli
aam
sub
dec
xlat
jg
imul
and
mov
stos
loop
scas
cld
lods
outsl
mov
add
jg
adc
xchg
rcrl
add
adc
fiadds
call
and
mov
mov
mov
enter
push
add
mov
adc
aad
add
mov
into
push
push
mov
inc
add
or
add
popa
inc
pop
movb
add
mov
mov
add
sbbl
mov
fnstsw
add
cwtl
add
mov
xor
add
add
pop
lret
or
xor
add
or
lcall
mov
inc
lret
cld
push
pop
rolb
push
fmul
rcrl
pop
jmp
add
cmpsl
adc
add
addb
and
mov
popf
cld
cltd
cli
ljmp
cmp
pop
xchg
aad
add
mov
add
add
mov
add
add
push
pop
push
lock
xchg
add
inc
mov
sti
adcl
add
inc
inc
pop
add
sbb
je
rcll
lock
ret
mov
cmp
in
rolb
dec
mov
call
add
mov
scas
mov
das
xor
test
test
xor
add
xchg
xor
rolb
test
mov
or
mov
adc
add
or
popa
out
mov
push
add
mov
add
add
pop
cld
fs
xchg
add
sti
inc
cmp
add
movb
add
jb
lds
sub
mov
lods
jnp
loopne
xchg
add
mov
push
add
sub
les
adc
notl
addb
jp
dec
dec
xchg
iret
lret
and
mov
ds
rcl
add
xchg
adc
and
jne
add
sub
cwtl
out
mov
jg
mov
sub
scas
ja
add
scas
inc
add
dec
inc
add
enter
aad
imul
add
jecxz
push
add
sbb
aaa
dec
cmpsb
add
mov
rorl
aam
or
stos
addb
add
ffreep
add
add
or
xchg
add
notl
add
daa
jb
decb
mov
add
test
add
add
xchg
add
pop
pusha
add
xor
pop
pop
mov
add
aaa
aaa
sbb
call
mov
jo
lret
mov
rolb
and
add
add
mov
add
xchg
add
add
inc
std
pop
lods
xor
add
mov
sub
outsl
lahf
loop
dec
subl
loop
out
bound
mov
add
xchg
add
mov
add
out
sbb
add
mov
or
fmul
outsb
mov
cmp
xchg
cmpsb
add
add
ret
dec
add
mov
mov
jmp
cltd
idivl
fwait
imul
mov
dec
repz
add
lea
jnp
loopne
sub
fnstsw
mov
js
push
add
add
mov
aad
add
add
or
scas
mov
fnstcw
sub
cli
sub
add
pusha
add
dec
push
pop
ficomps
mov
in
jb
cmp
mov
cwtl
nop
add
sbb
add
popa
mov
fistps
adc
sbb
loope
das
data16
add
addb
hlt
add
cwtl
lahf
outsl
jo
das
pushl
cmp
enter
or
jmp
add
lods
popa
ds
lahf
outsb
fsqrt
clc
fmull
add
aaa
jne
add
sub
add
enter
mov
stos
cmpsb
add
ja
push
dec
sahf
sub
stos
xchg
loope
fnsave
add
fcompl
cltd
push
jle
and
mov
out
mov
mul
xchg
add
add
ret
inc
je
adc
add
test
test
mov
mov
mov
add
add
fdivs
add
nop
add
popa
int3
test
jmp
cs
lahf
push
push
add
xchg
aas
imul
add
adc
xchg
inc
sbb
add
add
sti
xchg
add
aaa
stos
xchg
in
or
lock
mov
add
or
jp
push
dec
jns
add
add
out
add
pusha
add
mov
and
mov
pop
mov
sub
scas
repz
mov
sbb
push
mov
push
add
sahf
hlt
add
add
test
add
add
dec
scas
mov
mov
test
dec
xchg
add
mov
xor
xchg
add
add
mov
je
loopne
and
dec
sub
add
inc
add
push
xor
pop
fisttpll
push
fisubrl
mov
mov
jo
test
mov
jp
mov
jae
add
push
add
sbb
mov
outsl
or
dec
cmp
ljmp
daa
mov
iret
jns
div
add
add
add
dec
xor
adc
mov
pop
cmpsb
add
push
add
push
cmp
add
mov
add
dec
pop
dec
insl
mov
fists
add
mov
or
xor
in
outsl
out
pop
in
nop
add
cmp
add
xchg
add
pushf
mov
jne
or
pushf
sub
sbb
cmp
sub
sbb
inc
add
or
cli
dec
sbb
ds
add
in
rcr
add
jno
cld
int
cmp
js
cmpsl
outsl
and
mov
mov
ret
jno
js
xor
outsl
popa
xchg
sti
mov
dec
or
add
sub
pop
adc
add
or
xchg
repnz
adc
pushf
test
jae
mov
add
cmp
hlt
add
pop
loop
outsb
pop
lcall
add
add
adcl
push
add
imul
fmull
jmp
push
add
addb
cwtl
out
mov
add
cmpsb
add
jns
xor
inc
add
xchg
pop
pop
rolb
imul
mov
add
add
add
adc
js
push
jmp
add
add
aam
cltd
in
sti
mov
les
test
mov
clc
jle
add
add
push
lret
lea
popf
repnz
testl
aas
push
add
dec
sub
add
add
jno
push
fcompl
add
shll
mov
jb
sub
mov
mov
femms
and
pushf
int
add
mov
enter
adcl
cmc
push
add
add
pop
testb
sbb
inc
mov
add
sbb
addl
add
or
add
leave
xchg
push
je
xchg
stc
cmp
xchg
jne
je
test
push
inc
jg
sbb
outsl
dec
fmuls
call
add
incl
mov
mov
and
add
sub
mov
mov
add
sub
dec
ljmp
jmp
add
fadds
aaa
pop
mov
cld
push
add
add
test
add
push
jmp
add
mov
stc
sub
add
hlt
add
mov
add
movsb
add
leave
scas
sub
add
add
rolb
or
lock
iret
xchg
add
add
jp
xchg
jo
or
inc
and
in
std
sbb
gs
mov
scas
adc
into
cmp
outsb
sub
or
ret
add
add
nop
add
movsb
add
rolb
or
or
add
mov
loop
adc
ds
and
mov
fbstp
clc
call
add
add
push
add
add
or
push
add
and
mov
add
add
add
add
push
add
and
add
pop
mov
jbe
testb
icebp
pop
mov
jmp
jbe
incl
add
in
and
mov
sub
add
jge
bound
mov
mov
jb
cmp
cs
fisttpll
aam
mov
shrl
jne
rolb
fstpl
jbe
or
mov
repnz
adc
add
mov
add
stc
mov
xchg
in
add
mov
cld
insl
pushl
add
pop
jno
ds
add
add
outsl
stos
inc
add
add
jns
add
and
mov
push
into
mov
add
stos
jbe
stos
pop
rolb
cmp
clc
jp
cli
aad
imul
fdivrp
test
ret
add
mov
pop
push
push
add
mov
daa
cmpsb
add
shrl
mov
popa
sbb
or
outsl
sbb
add
aaa
bound
mov
pop
fldenv
mov
fnstcw
sbb
and
es
xchg
mov
add
add
add
add
jge
add
pop
xchg
cmp
add
lahf
and
add
je
adc
ss
jecxz
xor
imul
add
mov
rolb
movsl
out
jo
icebp
mov
add
add
and
imul
lds
add
mov
mov
mov
add
add
add
add
pop
rolb
add
jns
add
aas
jnp
add
xchg
pop
pop
sbb
xchg
add
sub
xor
bound
mov
and
dec
jg
loopne
repz
sbb
add
xchg
add
inc
cmp
pop
das
gs
mov
xchg
out
xor
rolb
inc
add
add
add
dec
cmp
out
in
jmp
xchg
sbb
cmpsl
rolb
insb
aas
inc
mov
sbb
inc
add
add
xchg
mov
xor
pop
je
rolb
movsl
cmp
dec
daa
loope
mov
mov
pop
mov
aas
into
out
adc
rcll
sbb
int3
pop
outsl
aas
fildl
sub
imul
iret
add
lds
in
jo
xor
int3
ss
push
add
add
pushf
sbbl
scas
jb
rolb
stos
cmp
jg
cmp
pop
aas
addr16
iret
out
pop
jle
xchg
inc
add
in
push
add
xor
mov
inc
add
sub
imul
fidivl
in
call
add
ljmp
cmpsl
popa
mov
add
in
dec
jne
sbb
insl
rorl
out
add
cmp
addl
outsl
mov
add
sub
sub
into
fimull
add
fwait
inc
sbb
int3
pop
xor
dec
out
pop
dec
cmp
mov
add
add
sbb
lcall
adc
aam
mov
xor
sbb
inc
add
std
js
mov
add
mov
add
mov
xchg
add
iret
jp
movb
xor
scas
lock
or
add
xchg
add
cld
popa
push
add
sub
insl
inc
add
rcll
jg
add
add
mov
mov
mov
add
add
xor
sub
xor
add
jnp
test
or
and
mov
fwait
lds
or
divl
push
add
add
add
pop
dec
scas
outsl
mov
sub
imul
cld
int3
mov
dec
dec
jl
dec
das
stos
jnp
mov
sbb
add
enter
add
int3
mov
imul
add
mov
std
sti
ja
mov
or
push
add
add
or
mov
adc
add
and
rolb
sahf
pop
mov
add
cmp
add
push
add
imul
mov
mov
addb
add
or
mov
sti
adc
mov
add
pop
jl
mov
dec
sbb
mov
add
jmp
push
add
sahf
mov
andl
add
rolb
push
cltd
jecxz
sub
loop
dec
and
mov
rolb
hlt
add
pop
std
inc
add
cmp
out
pop
stc
or
add
add
mov
dec
cmp
mov
mov
sbb
mov
sti
add
dec
mov
add
mov
cwtl
cmp
fistpll
ds
addb
adc
mov
cmp
sbb
add
jl
mov
les
or
mov
dec
jg
and
add
lods
ficoms
jbe
insl
mov
add
lret
cmp
inc
es
add
addb
add
sub
cs
push
add
cltd
mov
orl
gs
push
mov
cmp
gs
cmp
mov
fildll
add
add
fmulp
push
add
ljmp
inc
pop
push
xor
lock
aad
and
add
adc
mov
xchg
xor
rolb
clc
push
add
pop
icebp
mov
fidivl
pop
dec
mov
sti
data16
sahf
and
mov
inc
add
xchg
jmp
add
insb
scas
add
add
xor
sub
mov
lret
add
mov
add
pop
dec
cmp
xlat
movsl
cmp
loop
mov
out
add
pop
mov
or
mov
cmp
clc
mov
dec
test
xchg
movb
loope
xlat
mov
imul
add
loope
add
jmp
dec
rcr
adc
push
movb
add
dec
sbb
dec
adcl
scas
and
mov
or
add
adc
jge
testb
push
add
adc
and
mov
and
mov
add
jns
sub
cltd
adc
lret
add
icebp
inc
pop
sarl
mov
add
and
xor
dec
lahf
sub
add
lcall
call
sub
ljmp
out
fcoms
add
aaa
pop
and
adc
add
mov
xchg
add
push
inc
inc
add
pusha
add
cmc
xchg
add
add
mov
enter
dec
js
adc
loopne
mov
and
mov
cvtps2pi
or
xor
add
inc
add
xor
rolb
jo
xor
mov
push
ss
add
push
add
jg
cld
xor
jb
xor
cli
fdivrp
adc
add
mov
mov
add
arpl
add
add
rolb
push
add
ds
jge
add
add
add
les
or
ljmp
or
mov
sub
add
lds
add
insl
lret
data16
jp
loopne
or
mov
in
xchg
add
flds
add
add
add
mov
cmc
ja
fwait
pop
mov
add
xlat
ds
push
dec
xor
fldln2
dec
mov
mov
outsl
inc
out
add
imull
add
ret
add
fildll
and
and
add
mov
push
add
testb
ret
add
in
add
push
xchg
mov
add
and
add
mov
sbb
xchg
imul
fwait
data16
bsr
mov
lds
add
sbb
add
cmpsl
sbb
add
mov
add
cltd
push
shrl
bound
mov
or
sbb
cltd
add
mov
add
stos
int
xor
sbb
push
cmc
push
add
add
mov
test
mov
fldcw
and
mov
stos
add
push
xchg
add
loope
adc
sub
nop
add
add
rolb
cmp
push
sbb
adc
cmpl
pop
in
fstl
inc
add
cmpl
fimull
pusha
add
mov
mov
data16
jmp
fidivs
add
add
xchg
add
imul
jmp
in
aaa
mov
testb
lods
add
int
or
add
mov
jno
cwtl
into
mov
jo
pop
and
mov
sarl
xor
mov
push
sub
jmp
mov
enter
xchg
add
or
add
movb
pusha
add
add
add
fucomp
jle
add
add
add
sub
and
add
add
xchg
loopne
xor
jnp
mov
add
ljmp
xor
add
add
add
pop
dec
fdivp
or
in
push
add
mov
push
add
add
lds
add
aam
xor
movsl
and
sbb
xchg
add
add
and
mov
or
fidivrs
sbb
add
add
imul
inc
add
add
or
inc
add
je
sbb
data16
fsubs
mov
add
add
rcl
or
add
adc
jbe
cmpsl
add
dec
test
add
lret
addb
mov
add
add
fs
lds
push
pop
icebp
cmovne
sub
xor
fsincos
cmp
add
pop
out
mov
aam
xchg
add
test
push
add
add
add
mov
out
test
dec
lods
insl
dec
shll
mov
js
add
sbb
add
int3
cmc
add
mov
adc
mov
add
and
dec
push
pop
mov
add
add
out
mov
add
add
pushf
cmp
lret
push
in
insl
aaa
jmp
add
add
insl
inc
add
add
add
or
imul
mov
add
mov
rolb
inc
add
mov
add
jmp
fwait
sub
jne
icebp
xchg
jno
sub
addr16
sbb
fdivrs
mov
mov
hlt
add
add
repnz
loopne
push
addb
mov
je
sub
in
dec
fwait
mov
outsl
loope
data16
adc
imul
add
rcll
sbb
xor
dec
mov
lds
and
mov
inc
add
xchg
jbe
xor
pop
testb
add
mov
test
out
iret
sbb
add
js
push
pop
mov
and
sub
jecxz
mov
xor
pop
adc
xchg
int
add
push
add
add
add
nop
add
ds
testb
add
insl
pushf
sahf
xor
fnstcw
rolb
mov
add
add
add
lods
or
in
das
dec
adc
add
lcall
cld
popa
jl
add
lcall
jae
clc
mov
add
jb
aad
add
add
add
addb
dec
push
add
add
les
ret
add
lds
pop
inc
cmp
out
cs
sbb
add
pop
imul
inc
add
jb
cmp
xchg
inc
lcall
pop
or
add
enter
pop
movsb
add
jecxz
xchg
fistpl
in
lods
subl
jno
or
pop
loop
gs
xchg
sub
mov
or
pop
cli
push
add
or
imul
jl
add
add
cmpsl
jo
push
xor
iret
pop
pop
dec
xchg
sub
rolb
add
mov
lcall
add
add
sub
call
add
std
push
inc
add
mov
mov
cmpsb
add
lods
mov
int3
jno
dec
cmp
add
xchg
fbld
imul
fnstsw
cmpsb
add
ja
add
insl
insl
out
mov
sub
mov
add
sbb
data16
mov
add
mov
add
rorl
inc
stc
data16
mov
mov
lahf
dec
lock
add
iret
jl
sub
jno
fstpl
add
dec
dec
sbb
mov
add
adc
add
sub
add
inc
push
loopne
ficoml
add
push
mov
add
mov
popa
jae
iret
dec
sbb
add
mov
add
add
es
add
jae
addb
add
add
jno
fbld
int
lds
mov
lds
jmp
sbb
add
add
fcmovbe
add
sbb
push
cmpsb
add
mov
add
add
xchg
scas
sbb
pop
or
mov
mov
mull
mov
inc
add
pop
js
cmpsb
add
outsl
fcmovb
add
add
inc
add
aad
adc
jnp
addb
ljmp
iret
push
jp
push
add
fdivs
icebp
adc
jecxz
add
add
mov
add
adc
add
jp
cmp
add
stos
out
jle
add
dec
xor
push
add
add
add
rcr
mov
and
add
add
sbb
fcmovnb
out
add
add
add
xor
add
loop
dec
scas
js
xlat
mov
add
dec
jbe
add
add
add
sub
ja
nop
add
dec
sub
push
rolb
fisubs
aaa
or
movb
stos
scas
or
add
out
flds
and
add
rol
add
jae
fdivrl
rolb
jle
add
jle
cmp
add
adc
outsb
into
and
push
int
cmc
leave
movsb
add
add
pop
nop
add
sbb
cmp
add
xchg
mov
mov
stos
inc
jmp
jae
add
jp
ret
daa
and
mov
lods
push
addb
add
pop
xchg
ja
xor
cltd
nop
add
int3
rolb
rolb
clc
inc
add
push
sbb
scas
adc
mull
add
xchg
leave
mov
popa
lret
aaa
inc
add
mov
daa
mov
pusha
add
push
add
push
loop
xchg
push
add
mov
movb
cmp
cwtl
xchg
add
pop
fdivs
sub
add
add
sar
mov
fldenv
pop
jne
stos
sbb
cmpsb
add
mov
rolb
add
sahf
cmp
bound
mov
adc
clc
nop
add
lods
xlat
xchg
add
arpl
lret
add
add
rolb
sbb
inc
add
mov
inc
jns
popa
arpl
out
push
add
xchg
add
mov
pop
popa
cmp
xor
mov
mov
jo
jge
out
sbb
je
insb
push
push
cld
test
filds
add
add
popa
cmpsl
jns
jmp
dec
cmc
stc
ret
rolb
mov
lcall
pop
popa
mov
adc
pop
xlat
insb
pop
add
adc
lret
mov
enter
push
dec
aas
jp
lock
add
les
std
xor
adc
cs
sbb
push
add
push
add
data16
pop
ds
xor
bound
mov
lret
mov
mov
add
fldt
push
dec
dec
sti
xor
icebp
or
aam
adc
lret
sub
psubusb
mov
imul
add
lds
dec
pop
xchg
push
add
jle
add
aas
and
mov
add
mov
jmp
icebp
dec
lods
int3
sbb
add
loop
dec
lahf
in
jno
mov
hlt
add
add
ja
push
cmp
add
loopne
movsl
pop
fbld
mov
rorl
testb
add
fcmovnbe
test
popa
add
out
pop
fwait
and
mov
add
add
xchg
add
add
aam
icebp
movsb
add
and
filds
add
lods
pop
sbb
aas
lret
ds
js
add
icebp
or
add
mov
add
add
mov
movsb
add
xchg
cli
lods
pop
push
xchg
add
ds
inc
add
mov
je
ret
sbb
add
add
push
add
hlt
add
cmpsl
movsb
add
add
ja
add
jno
add
or
cmp
std
mov
add
and
mov
push
in
xchg
add
xchg
add
mov
pusha
add
rcrl
add
addb
mov
or
add
cmpsl
mov
add
jne
dec
pop
xchg
cmc
jbe
std
rolb
add
push
inc
ret
add
sub
fdivl
add
sub
push
dec
dec
lods
inc
add
jmp
inc
add
lahf
rcr
jae
adc
push
add
add
mov
sbb
add
dec
jle
add
cwtl
int3
loop
sbb
cmp
fcoml
testb
inc
add
push
scas
mov
aas
sti
cs
cmp
add
aam
call
adc
sti
cltd
dec
ret
pop
lcall
jmp
mov
jno
mov
add
sbb
lcall
push
add
mov
dec
cs
test
sbb
add
xchg
dec
cmp
jecxz
adc
lcall
xor
out
mov
add
mov
adc
cmpsb
add
pop
rorl
addb
add
rorl
inc
add
nop
add
inc
push
add
add
mov
add
hlt
add
inc
loopne
repnz
loopne
adc
ds
pop
jp
sahf
jmp
add
movsb
add
xor
inc
add
pushf
test
movq
add
sub
add
adc
mov
dec
out
bswap
in
ret
fwait
call
adc
mov
push
add
mov
jecxz
pop
insb
adc
scas
rolb
add
mov
fimuls
add
push
add
lea
jg
add
mov
je
mov
sbb
je
pop
rolb
mov
cwtl
add
sbb
jl
xchg
add
add
pop
jae
aas
push
add
xlat
fisubl
add
lock
out
add
or
lea
add
lock
add
in
adc
push
add
dec
icebp
jg
scas
sti
add
mov
repnz
repz
mov
add
add
mov
cmp
pop
ret
adc
insb
and
mov
sub
enter
sub
jae
repz
pop
cwtl
pop
xchg
hlt
add
aas
pop
push
ja
add
rolb
hlt
add
add
add
lea
mov
and
sub
mov
fists
das
in
cs
lds
add
add
add
mov
cmp
pusha
add
mov
jge
add
add
inc
sub
lods
xor
jo
stos
lds
add
cli
negl
mov
or
mov
add
fwait
fwait
inc
add
add
push
add
sar
mov
add
lcall
add
add
mov
cltd
inc
add
add
cltd
xchg
mov
pusha
add
repnz
test
pop
lret
adc
bound
mov
add
xor
aad
mov
mov
fldcw
xor
movsb
add
cltd
repnz
push
jne
add
addr16
and
mov
insb
stc
add
mov
add
add
repnz
enter
sbb
xchg
lods
out
out
xchg
add
mov
insl
fadds
sub
arpl
enter
dec
mov
xor
pushf
push
mov
stc
sbb
and
mov
add
add
int3
cwtl
adc
stos
sub
js
add
inc
add
mov
daa
and
dec
inc
sub
add
push
add
jne
fldcw
jecxz
add
xlat
es
mov
push
add
mov
add
mov
mov
mov
push
add
push
mov
or
and
add
js
jnp
xor
loop
stos
jmp
lea
cmp
add
mov
arpl
add
into
push
add
inc
nop
add
add
enter
add
jp
insb
stos
popf
pusha
add
leave
and
lret
hlt
add
add
sub
add
bound
mov
jl
in
sub
add
add
push
or
or
and
mov
iret
pop
and
mov
cs
out
cld
jbe
jnp
push
push
dec
stos
data16
fisttpll
push
popf
sbb
add
cmp
ret
mov
testb
add
xor
outsl
mov
int3
push
xchg
xchg
dec
mov
jns
add
lret
add
gs
add
and
mov
jl
xchg
push
mov
add
cwtl
inc
js
add
dec
ret
stos
or
scas
repz
in
add
mov
insb
ret
xor
popa
in
pushf
push
add
fwait
out
sbb
and
push
add
fmull
cwtl
add
mov
mov
add
stos
sub
dec
aad
add
xchg
add
mov
imul
add
mov
scas
testb
add
cmp
fcmovb
fnstenv
jnp
inc
loop
pushf
movl
sub
int3
jns
pop
insb
xor
push
add
outsb
cmc
mov
add
add
push
xlat
dec
fwait
scas
sysenter
add
mov
jmp
dec
in
xchg
adcl
hlt
add
jle
push
add
add
test
jb
gs
push
add
rolb
jnp
add
and
mov
add
add
mov
inc
mov
dec
loopne
jo
je
cmp
ja
mov
mov
pusha
add
loop
push
pop
or
loopne
or
add
pop
jae
inc
add
jle
push
add
xor
add
dec
push
xchg
das
xor
jb
inc
add
sub
jmp
rolb
and
add
add
inc
mov
mov
fimuls
pop
test
and
mov
lods
sbb
fbstp
and
ja
add
fs
push
cmp
addr16
add
mov
sti
xchg
scas
jg
je
ficomps
orl
add
add
movb
add
test
add
xchg
adc
add
repnz
movsb
add
insb
add
cmpsb
add
hlt
add
pushf
fwait
test
mov
xchg
add
add
add
popa
out
ss
lods
add
aad
pop
mov
pop
mov
add
add
jnp
push
cs
loop
ja
mov
roll
add
ret
arpl
add
add
mov
pop
addb
push
add
push
add
repz
pop
push
mov
mov
test
add
pop
cmpsl
rolb
mov
adc
lret
test
div
fnsave
aad
sub
push
clc
out
push
push
add
adc
mov
shrl
fisubl
sbb
add
dec
test
or
lods
and
mov
xor
and
mov
cs
leave
add
mov
pop
cwtl
fstps
mov
enter
jge
sahf
sub
jb
sahf
cltd
in
xchg
enter
jo
addr16
add
cs
add
or
push
std
rolb
adc
mov
std
addl
xchg
add
add
imul
add
scas
lea
mov
add
add
dec
pop
add
cs
xor
jae
add
add
sbb
icebp
xor
xor
push
add
mov
and
cmp
add
add
daa
out
enter
cmp
aam
adc
or
pusha
add
mov
mov
push
push
add
sti
out
iret
pop
aad
add
aaa
xchg
add
add
and
mov
add
faddl
add
mov
add
shl
mov
add
cld
je
int
jge
add
mov
inc
mov
pop
cmp
call
add
lods
in
in
jo
or
js
dec
sbb
add
leave
in
ret
sbb
imul
popa
les
mov
lock
xchg
aaa
cs
aaa
push
add
popa
jmp
add
jb
jb
rolb
or
add
add
or
jb
mov
ljmp
jne
push
inc
add
les
sbb
mov
lods
sbb
pop
decl
add
xchg
add
xchg
xchg
xlat
and
mov
rolb
add
add
pop
inc
or
xchg
add
xor
push
add
xchg
add
sub
lret
add
cmp
inc
add
add
add
xor
push
daa
jg
pop
ss
sub
mov
add
pop
xlat
or
mov
rolb
loop,pt
dec
cmp
mov
adc
mov
imul
fwait
js
arpl
test
fucomi
lret
push
add
in
inc
add
pop
lret
jne
add
dec
mov
fsubr
hlt
add
inc
lods
rolb
jecxz
mov
adc
add
mov
out
mov
xor
scas
les
add
testb
sbb
scas
add
add
ja
add
call
popf
xor
xchg
test
push
rolb
outsl
std
pop
in
in
lds
sti
or
testb
inc
add
or
push
jne
add
arpl
adc
test
add
sub
stos
loope
add
adc
add
sub
add
fstpl
add
add
mov
xchg
add
fcomi
mov
pop
push
add
leave
jg
jb
add
pushl
hlt
add
stos
in
add
imul
add
fcoml
cwtl
mov
mov
add
pop
sub
add
lds
test
xor
fsubl
mov
lret
adc
mov
cltd
in
clc
dec
add
adc
stos
fnstsw
mov
cmp
sbbl
add
inc
or
add
add
or
add
inc
add
add
pop
jp
loope
pusha
add
loope
js
icebp
sub
addr16
lds
and
mov
add
pop
push
xchg
mov
int3
or
lcall
cli
and
mov
xchg
dec
push
add
sbb
adc
lret
add
push
mov
pop
sub
push
add
mov
push
xor
in
push
or
add
add
add
mov
lahf
mov
gs
add
jp
add
add
add
lea
add
add
in
push
call
add
int3
ret
cli
clc
mov
cmc
pusha
add
fldl
mov
add
insb
inc
add
pop
mov
dec
fs
insb
xor
pushf
pop
stc
loope
lds
or
fisubrs
dec
shrl
jl
add
jle
and
lret
push
add
mov
inc
add
movb
in
pop
stc
jb
add
mov
mov
add
add
or
fisubrl
xchg
or
add
or
push
rcll
add
arpl
lahf
adc
int3
mov
inc
add
out
jmp
add
mov
push
add
mov
int3
mov
sbb
popa
lahf
push
add
push
push
xor
adc
xor
mov
sti
and
mov
push
add
hlt
add
add
decb
addb
lret
dec
pop
insl
loope
sub
das
mov
pop
mov
pushf
clc
lret
aad
mov
pop
test
xchg
add
jb
jne
addr16
add
jnp
mov
adc
aad
mov
jecxz
lods
push
jns
add
in
scas
insl
and
mov
add
movb
rcrl
popa
movb
push
adc
dec
cmp
or
add
and
movsb
add
add
add
mov
add
inc
mov
pop
call
mov
mov
add
pop
out
mov
cmp
xor
xchg
and
arpl
add
rolb
sub
sbb
dec
in
or
add
out
sbb
add
xor
add
add
jb
jb
sub
push
cmp
add
sbb
pop
mov
push
mov
and
ficompl
imul
cltd
out
stc
mov
pop
adc
in
dec
test
pop
movb
mov
movsl
rolb
repnz
stos
and
mov
int
add
popf
sub
add
push
jg
sub
dec
jmp
popa
enter
add
in
sub
adc
add
clc
hlt
add
imul
sbb
add
dec
inc
cmp
adc
fstpl
nop
add
jno
add
xchg
and
bound
mov
out
xor
xchg
push
js
jns
mov
cmp
add
add
je
ffree
jns
add
xchg
xchg
pop
cmp
mov
das
xor
test
push
add
test
and
es
pop
xor
push
adc
add
add
dec
movb
add
add
ja
xchg
add
pop
lock
loopne
inc
outsl
jnp
fxtract
add
and
arpl
loopne
or
add
ja
sub
add
cmp
add
fadd
mov
dec
test
out
loopne
xchg
cmc
mov
mov
mov
mov
les
dec
xchg
add
adc
add
repz
out
add
test
sub
and
mov
and
jo
sahf
dec
sbb
repnz
cld
cmp
jmp
push
adc
adc
mov
mov
push
add
xchg
stos
add
test
stos
jae
lods
cmp
icebp
mov
mov
repz
sbb
add
mov
pop
lods
pop
dec
shll
add
xor
mov
add
add
les
fwait
repnz
bound
mov
add
mov
add
jecxz
add
push
add
push
add
cmp
jb
mov
and
add
jmp
rolb
inc
loope
xor
and
cmp
lea
je
aaa
insl
cli
daa
out
daa
add
mov
add
mov
out
xor
imul
repnz
mov
xchg
add
std
sub
cmp
scas
sub
xchg
movsb
add
mov
jmp
add
add
add
jb
mov
add
push
add
mov
jp
lahf
mov
add
cld
inc
add
jge
lock
test
pop
testb
addb
cli
fisubs
adc
js
add
mov
lea
inc
add
pop
loope
add
fcoms
testb
inc
add
push
mov
mov
add
cld
pop
jecxz
add
mov
add
add
pop
pop
inc
jl
mov
xor
sub
xor
adc
push
add
jge
sbb
mov
mov
or
add
jbe
daa
sbb
fucompp
mov
mov
lret
insl
push
jp
repz
push
add
and
mov
and
mov
iret
inc
aaa
xchg
cmp
insl
adcl
rolb
das
mov
aad
add
xchg
add
add
add
jne
call
xchg
add
cmpsl
mov
jo
add
pop
imul
xor
call
add
xchg
sbb
add
jb
addr16
fcomip
add
leave
imul
fdivl
pop
inc
cld
pop
adc
add
mov
ljmp
movd
xchg
adc
test
sarl
cmpsb
add
scas
cmp
mov
cmc
testl
ja
add
add
push
add
add
leave
and
ret
jmp
push
add
lods
add
add
adc
lds
bound
mov
and
pop
jmp
jle
add
add
stos
test
movb
or
outsl
xchg
mov
add
movb
addr16
sub
sub
sbb
mov
lret
xor
mov
sbb
jno
push
and
mov
fwait
mov
test
fadds
mov
add
aaa
out
jmp
inc
add
lea
insb
push
add
cltd
pop
add
nop
add
push
add
add
outsb
mov
ret
ret
add
or
int3
test
push
iret
punpckhwd
daa
jnp
add
repz
pop
mov
add
dec
mov
push
add
call
cmp
add
xor
xchg
sub
shr
add
pop
sbb
sbb
mov
add
std
pop
sbb
xchg
push
add
test
sti
clc
rcrl
test
inc
mov
lret
cmpsl
mov
inc
add
adc
mov
add
in
in
xchg
loope
repnz
popa
insl
int3
decb
and
pop
mov
dec
xor
add
push
rolb
lea
mov
inc
aad
cli
movsb
add
jmp
sub
out
ja
add
add
add
mov
xor
xchg
add
add
fwait
mov
push
aad
add
imul
push
inc
and
mov
add
add
push
cmp
mov
add
push
add
add
add
add
inc
add
mov
add
mov
mov
iret
dec
testb
jo
lret
lea
dec
inc
add
add
add
mov
jecxz
or
jg
mov
push
xor
pop
cmp
add
add
add
movb
xchg
add
testb
mov
test
add
add
mov
add
sbb
xor
pushf
cmp
add
cmpsb
add
mov
add
mov
xor
push
rolb
aas
xchg
popf
cmp
mov
movb
or
shr
fildll
int3
dec
js
sub
lret
ljmp
gs
sbb
xchg
xor
bound
mov
push
add
mov
or
add
lods
sahf
orl
ljmp
jae
sub
add
inc
add
add
sub
add
mov
lds
add
sub
cmp
aam
mov
and
mov
add
add
pop
and
enter
and
add
out
nop
add
add
add
arpl
add
push
add
xlat
jae
jbe
test
adc
jae
add
jge
sub
pusha
add
adc
xchg
aad
popa
cmpsb
add
scas
xchg
add
cmp
add
push
add
and
mov
add
mov
push
loopne
xchg
add
add
add
or
add
add
mov
pop
rorl
adc
clc
mov
rolb
stc
std
fsubrs
lcall
push
push
mov
add
mov
cltd
mov
dec
insb
lcall
add
cmc
lds
call
mov
bound
mov
in
pop
xchg
imul
inc
movb
aaa
loope
push
ja
add
out
jae
add
push
enter
add
pop
jno
push
add
add
stc
xor
jbe
jle
lahf
leave
add
pop
dec
mov
das
fistl
add
adc
jnp
aaa
cmpsl
test
add
in
inc
and
mov
add
in
inc
out
arpl
int
xchg
add
add
mov
ret
mov
aaa
jmp
shrl
scas
xchg
xor
lods
mov
sub
flds
ret
lret
fs
add
sbb
std
push
aaa
imul
insl
adc
fistpll
add
mov
lahf
out
xchg
cwtl
addr16
fcos
mov
fistpl
jecxz
add
add
add
sub
repz
pop
push
or
test
es
jnp
add
leave
push
xor
push
add
test
enter
mov
js
xchg
pop
clc
pop
mov
inc
add
add
int3
int3
sub
addb
dec
dec
ret
inc
add
add
insb
sub
add
pop
adc
pop
cmpsl
aam
jnp
push
add
pop
in
pop
mov
xchg
bound
mov
mov
sub
sbb
mov
in
mov
add
imul
mov
xchg
scas
imul
xchg
nop
add
add
add
test
std
sub
jmp
dec
pushf
push
push
add
outsb
adc
pop
sbb
add
cmp
sbb
xchg
sub
aad
push
out
pop
pushf
add
mov
je
jle
add
mov
imul
loopne
addb
add
popf
inc
ja
xor
and
std
jge
in
mov
mov
lret
jbe
xor
daa
das
and
mov
and
add
cmp
mov
push
out
jno
lock
pop
inc
mov
push
sahf
mov
mov
xlat
leave
or
cmp
aas
jl
xchg
add
cmp
mov
and
mov
pop
mov
jecxz
out
cs
jno
inc
add
mov
add
addb
pusha
add
xchg
inc
add
push
out
xor
inc
je
xor
fld
lret
mov
add
stos
in
adc
cmpsb
add
jae
adc
test
cli
shr
cmpsb
add
xchg
divl
in
mov
add
add
mov
mov
add
add
push
add
nop
add
scas
xchg
add
scas
aas
jmp
mov
mov
cmp
bound
mov
add
rolb
add
pop
xlat
dec
mov
mov
test
add
add
in
jb
outsl
push
pushf
jnp
add
xor
mov
push
int3
add
mov
sub
scas
mov
out
mov
jmp
vmread
test
push
scas
push
mov
inc
add
xor
stos
adc
mov
sbb
iret
cmp
test
add
scas
xchg
add
test
adc
daa
jle
cwtl
fimull
fcmove
pop
dec
and
mov
mov
add
mov
cmp
fimuls
push
add
add
jecxz
stos
or
add
pushf
lea
inc
xlat
push
add
push
mov
mov
add
mov
sbb
ds
loope
daa
pushf
lds
pop
jae
xchg
add
leave
adc
add
mov
clc
pop
mov
add
add
inc
rolb
mov
mov
adc
test
jl
add
out
incb
mov
add
add
push
insl
mov
sbb
mov
adc
mov
add
nop
add
data16
push
jg
fbld
cmp
mov
bound
mov
xchg
or
add
lret
pop
ljmp
popa
fmul
out
imul
lahf
xchg
cli
mov
pop
push
xchg
sub
stos
mov
fisubrs
test
aam
fwait
adc
std
test
addb
out
jns
inc
add
mov
leave
pop
mov
add
sahf
jmp
or
push
xor
dec
mov
add
add
stos
add
mov
pusha
add
cmc
add
pop
rolb
stc
pusha
add
imul
cltd
inc
add
dec
jnp
lds
add
add
add
movb
or
dec
mov
add
mov
push
add
add
loop
sub
add
mov
adc
jecxz
pop
scas
jae
out
fisubrl
nop
add
add
jmp
add
add
or
sti
popf
lahf
inc
push
add
jg
inc
add
mov
mov
loop
xchg
addb
xor
stos
mov
pop
jp
addb
push
add
dec
cmpsl
adc
add
add
add
stos
divl
dec
add
mov
add
pop
cmp
mov
lods
out
add
mov
inc
xor
mov
add
inc
push
add
add
mov
fadds
lahf
aam
and
mov
xchg
add
add
mov
xor
xchg
add
add
or
push
sahf
xor
xchg
add
leave
fstl
add
test
movb
jnp
cmp
out
push
add
cmp
inc
add
add
fildl
mov
imul
dec
sbb
add
stos
sbb
movb
add
jne
pop
pop
or
add
add
pop
rolb
addr16
mov
mov
dec
xchg
jnp
mov
bound
mov
roll
into
mov
xor
les
daa
cli
cmpsl
jmp
inc
jae
add
add
mov
push
add
mov
jno
hlt
add
mov
add
mov
add
dec
nop
add
scas
loop
add
out
xchg
scas
out
or
out
das
stos
or
cmp
mov
pop
mov
ror
add
mov
add
add
add
mov
test
add
mov
or
pop
je
cwtl
cli
clc
lcall
in
mov
mov
addb
add
add
daa
lock
push
xrelease
mov
xchg
add
add
inc
je
sub
mov
movsl
sbb
add
or
ret
lock
repz
sar
mov
mov
jne
fisttpll
push
dec
test
mov
xchg
inc
add
inc
mov
add
add
push
repnz
or
test
mov
add
popa
or
loop
fisttps
int
aad
xchg
insb
mov
ljmp
mov
mov
cmp
mov
jp
mov
arpl
data16
loope
add
jno
mov
inc
add
insb
rcll
add
xchg
add
add
mov
or
or
sub
sub
ja
mov
inc
add
mov
testl
and
add
add
testb
pop
fisubrl
jecxz
jns
ret
aas
testb
mov
pushf
jmp
add
ret
bound
mov
addb
inc
add
mov
ljmp
jg
and
mov
dec
popa
in
xor
rolb
test
or
push
js
xor
in
addb
and
add
mov
jb
mov
mov
sub
and
mov
inc
add
je
roll
sbb
into
or
cld
pop
inc
sbb
add
add
ds
xchg
add
jbe
movsl
jecxz
add
pop
bound
mov
push
add
out
add
std
adc
mov
add
mov
seta
mull
aaa
lcall
adc
sti
insl
mov
out
or
add
add
movsb
add
add
out
jl
xor
cmpsb
add
inc
lds
inc
add
imul
movb
add
jp
add
add
sub
test
in
xor
sub
int
adc
jmp
cmp
data16
cmp
add
add
add
add
inc
add
xor
adc
lods
addr16
in
add
push
add
add
add
addb
mov
or
push
add
mov
add
and
mov
jno
fisttps
inc
add
inc
dec
cltd
in
dec
mov
popf
add
mov
add
add
and
cmp
xor
mov
add
jg
cld
add
add
pop
mov
and
add
add
addb
and
mov
push
add
sub
jnp
push
movb
and
or
xor
fucomp
lock
add
add
add
dec
add
nop
add
cli
sti
test
cmp
add
cmp
and
mov
push
add
adc
lcall
ss
sbb
mov
sub
leave
xor
sub
add
mov
xchg
stc
pop
subl
mov
dec
xor
lahf
imul
inc
add
fstl
add
add
sbb
addb
adc
test
xor
inc
add
adc
and
arpl
add
sbb
cmpsl
loope
iret
sbb
add
fsubs
add
daa
and
mov
mov
push
sub
add
call
add
push
push
mov
add
add
add
pop
ret
mov
add
sti
xor
fmuls
push
xor
ds
add
add
add
bound
mov
fsubrs
repz
aad
add
movsb
add
xor
loop
movsl
adc
jmp
add
jle
adc
inc
cmp
gs
imul
jmp
nop
add
adc
lret
orl
int3
addl
jg
aas
stos
pop
stos
push
mov
mov
sub
iret
mov
dec
decl
rolb
jb
jge
add
add
or
add
sarl
sbb
mov
push
mov
inc
add
or
mov
and
cli
xor
push
add
add
or
js
cli
adc
inc
imul
xchg
loopne
pop
mov
add
ffreep
add
lret
ret
inc
cmpsl
into
jle
push
jle
cltd
das
scas
mov
add
xor
add
sub
mov
movsb
add
jns
fcomip
sahf
cmc
stos
rolb
int
and
test
pop
add
addr16
add
jns
add
std
pop
xchg
pushf
jmp
jmp
rcrl
add
repz
mov
jae
push
add
roll
jg
add
clc
cmp
add
fisttps
inc
sub
sbb
inc
push
gs
jp
add
lods
xchg
add
add
mov
add
data16
mov
push
lcall
add
jle
add
scas
rolb
pop
cmpsl
adc
jecxz
add
add
psubw
add
add
add
add
pop
push
cmp
add
enter
mov
jle
sub
addb
jp
add
add
mov
add
mov
mov
arpl
mov
add
adc
add
fwait
jbe
jg
cltd
addb
jp
cmp
add
push
add
cmp
xchg
add
and
or
add
fwait
pop
test
test
cmp
dec
lods
inc
rolb
inc
push
loop
repz
enter
fxch
push
call
mov
jb
rolb
outsb
insb
mov
enter
mov
add
sub
sbb
sahf
popa
jnp
sbb
fisubrl
insb
pop
and
mov
scas
cmp
add
test
xchg
mov
add
add
cmp
ret
int
data16
add
fcoml
inc
sub
mov
sbb
aaa
repz
scas
jo
push
add
cmp
add
mov
cltd
ror
aas
lock
jg
jmp
mov
test
add
scas
aaa
inc
add
add
add
pop
cmp
add
add
add
fidivs
jnp
push
mov
scas
xor
sbb
pusha
add
inc
add
pop
pop
aas
cmp
arpl
idivl
dec
jo,pn
dec
adc
fstp
adc
mov
jmp
and
inc
mov
add
cld
mov
add
sub
aaa
clc
dec
sbb
loope
add
add
mov
loopne
das
addb
inc
loope
lret
ja
cmpsl
addr16
add
mov
pusha
add
mov
xor
add
adc
movsl
daa
out
mov
fstps
aaa
inc
insb
jns
and
lret
into
mov
popf
sub
cs
add
mov
dec
dec
lahf
imul
adc
data16
add
sub
adc
push
pop
xor
outsl
push
popf
pop
fidivrl
outsl
xchg
loop
push
add
add
add
fwait
cmpsb
add
mov
xchg
pop
jb
fmull
aas
notl
xor
add
push
sahf
lcall
xchg
cmc
icebp
push
add
iret
lods
sub
out
pusha
add
add
add
add
out
lea
outsb
mov
nop
add
lods
insl
sbb
add
and
push
add
shrl
lahf
aaa
test
lret
ret
xor
add
mov
int
lock
dec
mov
add
repz
loope
add
jnp
add
inc
add
add
movb
adc
adcl
icebp
sub
push
add
pop
cs
add
lock
rolb
rolb
add
xor
pusha
add
cmp
add
and
aas
sub
loopne
sub
add
add
add
sbbl
sti
ret
popa
adc
add
pop
push
sbb
add
rolb
mov
add
add
or
add
adc
jbe
push
stos
test
fdivrs
jo
xchg
imul
jl
nop
add
lcall
or
nop
add
xchg
call
outsb
xchg
out
jp
push
push
add
add
xor
inc
sbb
add
mov
add
mov
add
sub
lods
int
add
mov
push
mov
add
movsb
add
mov
cld
inc
or
mov
or
or
mov
sti
fcompl
mov
mov
inc
push
add
mov
add
enter
push
add
add
push
add
mov
rolb
mov
rolb
sub
add
cwtl
mov
mov
mov
or
add
inc
add
lods
push
js
sub
add
xchg
jle
add
dec
hlt
add
add
jecxz
scas
outsb
adc
je
pop
mov
push
xlat
das
inc
dec
sbb
sqrtps
fsubrs
popf
mov
dec
decl
inc
add
adc
inc
add
cmc
push
add
repz
add
add
cltd
into
push
cmc
aas
je
stos
cmp
jge
add
add
push
add
jp
xor
xchg
les
cld
stos
mov
loop
cmp
cwtl
adcl
fcmovnb
sbb
add
ret
add
int3
xchg
add
ja
add
push
add
cmc
ffreep
add
add
in
xchg
add
jns
setno
shrl
add
add
pop
mov
add
dec
cmp
and
cld
movsl
test
bound
mov
cmp
nop
add
rolb
or
add
mov
add
lods
dec
out
mov
add
jge
inc
add
add
fimuls
in
and
mov
rolb
add
jmp
add
addb
xchg
int3
mov
sarl
pusha
add
pop
xchg
add
out
addr16
jl
icebp
sbb
adcl
xlat
adc
jp
and
add
mov
pop
cwtl
cmp
add
rolb
dec
cmp
sub
adcl
dec
or
add
mov
add
push
add
jnp
and
rolb
outsl
repz
ret
iret
ret
faddl
adc
dec
mov
daa
inc
add
ficomps
mov
add
addb
dec
mov
into
push
cmp
add
adc
sbb
ja
mov
int
push
jbe
mov
add
push
add
inc
push
add
adc
in
cmp
lcall
ja
mov
je
sbb
dec
inc
add
xlat
push
test
xor
jb
pusha
add
xor
cwtl
jbe
js
add
imul
mov
xlat
out
addb
jno
add
data16
add
mov
bound
mov
aaa
and
mov
add
add
mov
insl
jge
jg
add
inc
add
inc
add
mov
push
ret
add
in
sub
inc
add
movsl
mov
pop
adcl
push
shll
hlt
add
add
add
or
add
rolb
sbb
or
lods
cmp
add
add
add
add
add
pop
addb
pop
imul
add
test
push
add
add
dec
je
aas
out
adc
and
mov
add
out
aad
psrlw
in
enter
inc
add
add
insb
stos
in
out
add
mov
pushf
or
mov
aam
push
xchg
or
add
add
shll
pop
ja
jl
sahf
or
rcl
add
add
pusha
add
fwait
pushf
das
das
and
mov
mov
add
mov
orl
push
stc
rcr
fdivl
outsl
mov
add
frstor
mov
or
add
add
add
add
out
add
clc
or
call
push
add
fdivrs
push
pop
testb
testb
add
jmp
add
jg
mov
jp
add
sbb
sbb
add
mov
add
add
jo
lods
sbbl
cwtl
movb
add
add
in
ret
cs
arpl
addl
jmp
sbb
shll
lcall
add
add
fmuls
lods
pop
mov
pop
mov
hlt
add
or
or
and
mov
add
add
dec
pop
daa
xor
cmp
mov
add
mov
jecxz
add
mov
ljmp
fcmovnbe
cmp
jae
icebp
ret
jge
jg
dec
sub
addb
inc
into
rolb
addb
mov
sbb
mov
jge
lret
daa
add
cld
aas
scas
incl
mov
inc
add
addb
lea
push
add
add
add
add
mov
leave
in
add
add
dec
imul
mov
add
add
dec
xchg
add
jmp
or
das
mov
or
mov
add
lods
fistpl
add
add
add
and
mov
fiadds
shll
or
jno
enter
xor
sub
sub
int3
inc
or
or
inc
scas
outsl
push
add
pop
cltd
rol
pop
push
add
jge
jp
in
cmp
loope
nop
add
cmp
jp
add
add
test
cld
ljmp
mov
addb
out
xor
cmp
mov
ljmp
add
mov
dec
rolb
cmp
add
xor
fsubs
add
add
push
add
xor
add
xor
add
add
add
mov
xor
dec
mov
pop
addr16
or
aam
xor
cmp
mov
loop
dec
test
cmp
push
add
stos
out
lock
add
pop
push
add
add
add
call
or
add
add
lcall
nop
add
lcall
mov
add
sbb
add
add
and
in
out
adc
sahf
xlat
cmp
out
aad
pop
mov
dec
jp
sbb
aad
addr16
pop
int3
push
add
mov
call
scas
hlt
add
and
push
movsb
add
jns
xor
add
dec
and
pop
insl
mov
mov
sub
or
push
add
jle
add
mov
push
and
add
sbb
jmp
xchg
sub
jns
add
mov
push
add
inc
add
add
call
push
add
stc
lret
addl
add
jns
xchg
inc
add
add
add
mov
leave
lcall
add
jmp
sti
xor
inc
add
mov
mov
pop
pop
jp
push
add
call
jle
outsb
aad
nop
add
xchg
mov
insb
add
mov
sbb
add
mov
cmpl
outsb
ret
jne
add
loopne
jne
pop
aas
iret
lcall
adc
in
cmpsl
sbb
clc
int3
nop
add
or
jae
mov
xchg
notl
add
push
dec
xchg
inc
add
out
into
fidivrs
fmuls
lret
and
mov
movb
adc
add
pop
pusha
add
mov
push
insl
mov
dec
push
add
test
loope
dec
mov
add
arpl
rcll
int
stos
jle
add
int
ljmp
pop
mov
xchg
test
mov
testb
add
dec
mov
iret
add
pop
or
add
cmp
add
ljmp
add
xchg
mov
sbb
mov
xor
adc
add
gs
push
dec
lahf
insl
mov
stc
in
xchg
add
incl
and
icebp
or
les
push
jbe
cmpsl
sub
add
mov
ret
inc
add
adc
or
pop
pop
jge
add
out
iret
sbb
add
sub
rolb
faddl
add
pop
stos
cmp
and
mov
mov
in
or
pop
xor
daa
inc
add
and
mov
add
add
add
flds
mov
add
in
imul
in
lock
add
inc
repnz
fcom
mov
add
push
add
add
outsb
sahf
in
lcall
leave
inc
add
test
mov
pop
jno
cmp
mov
leave
or
stos
mov
add
add
cs
leave
rolb
sbb
push
add
push
add
add
inc
xchg
dec
out
mov
jge
rcll
or
jae
lea
add
inc
add
add
dec
xchg
sbb
add
sub
fsubrs
insl
add
lea
add
mov
fisttpll
or
roll
movsl
jnp
push
add
test
xor
les
adc
add
addb
mov
xchg
cmp
jae
addr16
pop
call
mov
mov
mov
push
add
add
sbb
add
lret
pop
adc
add
mov
add
in
repz
test
push
and
mov
pop
cmp
aas
sbb
jae
add
add
int
add
dec
std
sub
ret
cmc
pusha
add
push
fnstcw
add
fsubp
ret
test
xor
sahf
xor
mov
vpsrlw
test
add
mov
rolb
test
adc
push
add
mov
jle
add
cmp
add
add
add
pop
push
dec
movsl
xchg
add
mov
sbb
daa
icebp
jnp
xchg
add
clc
inc
add
xlat
dec
mov
aad
add
notl
cmc
push
inc
add
add
jmp
cmp
scas
mov
rol
adc
add
clc
sub
sub
rorl
xchg
add
mov
aad
cmpsl
push
lods
adc
pop
push
add
pop
jp
les
push
adc
popa
iret
mov
repz
or
ret
ja
mov
jge
es
out
aas
xor
sbb
rolb
jb
add
in
cmp
add
andl
add
add
leave
aad
push
add
add
xchg
add
cmp
add
mov
shrl
cmc
pop
in
repz
xchg
adc
imul
push
add
test
add
add
jge
and
shrl
mov
add
add
mov
testb
add
mov
pop
cld
sub
dec
push
mov
add
add
jae
push
aam
push
dec
iret
addb
and
pcmpgtb
pop
in
dec
and
mov
stc
cmpsb
add
aam
nop
add
add
and
mov
mov
add
add
add
adc
cs
jmp
incb
imul
imul
add
add
mov
add
ja
fmull
add
xchg
or
data16
pop
rolb
sbb
das
mov
flds
popa
je
mov
add
fistpll
push
add
xor
pop
fcompl
imul
int3
dec
xor
push
add
add
jmp
add
sahf
or
test
ror
jb
fcmovbe
add
add
fistps
push
add
jns
jb
test
sub
int3
and
xchg
outsl
jnp
mov
add
sti
sub
jl
mov
mov
pop
js
mov
push
mov
into
loopne
cmp
add
add
cmpsl
dec
sbb
dec
sbb
add
xchg
enter
push
add
jo
push
add
add
pop
les
rcll
push
add
adc
push
add
push
add
fcomi
imull
mov
repnz
xchg
pusha
add
xlat
mov
iret
arpl
add
add
mov
sahf
sbb
mov
cmp
dec
mov
push
add
jbe
xor
and
mov
jne
out
mov
ret
rcrl
jnp
add
mov
add
add
and
ficoml
scas
std
and
mov
xchg
lock
fisubrs
and
mov
in
imul
jae
adc
add
add
ljmp
imul
cwtl
or
mov
push
stos
rolb
popa
push
add
add
add
mov
inc
add
inc
add
push
pop
jns
dec
push
add
xchg
sarl
pop
divl
add
push
add
add
pop
rolb
mov
ja
iret
jnp
mov
fldt
add
jecxz
add
add
xchg
push
in
sub
fists
hlt
add
xor
popf
add
add
addb
add
sub
movsb
add
and
fnstsw
add
mov
push
add
cli
inc
add
int3
jecxz
test
add
cmovno
xchg
add
mov
cwtl
movsl
sbb
add
add
bound
mov
lea
mov
testl
cmpsb
add
add
aaa
aas
jns
add
punpckhdq
fisttpl
jno
rcrl
or
dec
push
mov
add
aad
jg
add
test
mov
add
pop
stc
xor
mov
add
cwtl
lret
das
hlt
add
mov
pop
inc
sub
test
add
jg
subps
pop
and
aaa
stos
pop
fisubrs
jecxz
mov
xor
push
add
add
add
std
testb
add
add
jo
mov
add
lret
dec
das
sbb
mov
mov
iret
mov
ret
xchg
adc
mov
add
cmp
mov
sub
push
das
and
mov
repz
aam
xchg
data16
fnstcw
cltd
sub
push
add
in
gs
cmp
jno
int
add
cmpsb
add
out
adc
movups
loopne
std
imul
add
popa
cwtl
lcall
aam
adc
sub
add
add
jecxz
neg
sbb
add
inc
add
add
sbb
add
fwait
pop
fcmove
out
cmc
lcall
push
lds
add
pop
cmpsb
add
jge
cltd
dec
jno
xchg
add
mov
add
mov
add
lcall
pop
sub
fldcw
xchg
fisubl
and
jne
mov
mov
pop
or
addb
add
pop
sub
dec
mov
sbb
push
daa
sub
add
rolb
test
add
pop
mov
arpl
nop
add
daa
gs
mov
cmp
add
in
cmc
mov
int
add
sub
addb
add
cltd
lea
add
pop
divl
inc
subl
add
cmp
sub
jbe
mov
push
and
mov
xor
movb
addb
add
lock
sub
add
inc
add
addl
mov
add
sub
fmulp
stos
clc
jg
pop
roll
add
and
and
mov
push
inc
add
adc
icebp
in
cs
int3
sub
pop
fimuls
add
push
add
dec
jmp
push
add
vpminub
loopne
in
jecxz
fdivs
enter
inc
rorl
add
mov
and
mov
loop
xchg
mov
push
lahf
jne
push
mov
pop
test
outsb
test
cs
mov
dec
rcr
and
add
add
arpl
pop
xchg
xor
mov
add
add
xor
stos
test
inc
sub
aaa
mov
jae
add
mov
pushf
call
aam
mov
enter
push
add
xor
cmp
add
add
rolb
mov
mov
fidivl
jg
movsb
add
and
pop
sub
fwait
aaa
sub
mov
push
loopne
movsb
add
add
cwtl
aad
nop
add
add
add
mov
xor
xor
cmpsl
inc
add
inc
dec
inc
add
hlt
add
out
add
add
cmpsb
add
add
cmp
cmp
sbb
or
pop
add
in
call
jge
xchg
add
stos
fadds
popf
cmp
lods
roll
or
inc
push
das
sub
xchg
add
js
sbb
lcall
ja
popa
mov
add
xchg
add
jmp
mov
out
aad
sub
add
dec
add
mov
lods
add
pop
ljmp
inc
cwtl
push
popf
lds
scas
add
pusha
add
addb
repz
and
mov
and
mov
mov
std
fisubrs
bound
mov
dec
out
sbb
add
mov
inc
add
loop
cmp
add
add
fadds
add
or
push
bound
mov
cmp
sbb
ljmp
jb
arpl
lds
add
mov
xchg
test
repz
lea
inc
bound
mov
add
push
add
fistl
and
mov
pop
sub
xor
cmp
gs
mov
and
jae
outsl
xchg
lcall
in
mov
inc
add
xor
movsb
add
loop
sub
mov
jl
aaa
loope
movb
aad
fstpt
data16
mov
add
push
xor
aaa
rolb
loopne
add
mov
push
mov
imul
push
add
add
add
add
dec
sub
add
popa
les
push
add
cwtl
pop
in
cli
inc
inc
add
icebp
fstl
add
and
add
add
dec
inc
add
leave
loope
inc
add
dec
jo
or
ja
or
add
mov
add
add
inc
dec
lds
jl
sub
les
lret
adc
xchg
add
movsl
mov
test
jp
add
xchg
add
mov
dec
push
sahf
addb
mov
add
cmpsb
add
add
pop
stos
flds
add
jp
mov
sub
jne
ljmp
sbb
add
push
mov
cmp
xor
ds
test
pop
fwait
ret
jns
ds
xor
add
mov
out
xor
mov
insl
jb
or
add
add
add
push
stos
or
add
out
in
pushf
mov
mov
mov
jnp
les
mov
mov
mov
add
push
add
or
ffree
xchg
push
add
insl
lcall
sub
add
xor
and
mov
dec
dec
adc
cld
fwait
cmp
add
aad
ret
add
jns
insl
push
add
or
or
add
mov
push
add
hlt
add
add
int3
pusha
add
add
scas
lea
arpl
add
add
pop
ljmp
arpl
data16
add
add
and
mov
lahf
sahf
cwtl
mov
sbb
pop
mov
mov
ljmp
lock
jge
add
push
add
xchg
sti
cmc
jbe
mov
aaa
stos
leave
iret
aas
xchg
pinsrw
inc
jle
gs
dec
xchg
add
add
les
mov
add
add
movsl
xchg
mov
cmpsl
jo
pusha
add
adc
mov
roll
std
sbb
add
xor
addb
gs
fstpt
movsb
add
add
pop
lods
lea
mov
inc
add
push
add
into
xchg
adc
inc
add
and
mov
dec
or
add
cmp
aaa
mov
add
add
iret
mov
cmp
les
push
add
mov
push
add
adc
movsl
push
add
sub
add
enter
adc
adc
xchg
add
mov
pop
cmpsb
add
add
add
sti
xlat
mov
outsl
pop
jnp
stc
movsb
add
add
lea
add
cli
dec
and
and
pop
add
addb
into
jmp
jo
cmp
aaa
pop
arpl
call
pop
sub
stc
daa
js,pn
inc
add
arpl
add
add
lock
push
add
add
sahf
cmp
test
sub
push
pop
fbld
je
xor
add
or
shll
cmp
das
stos
pop
out
push
add
mov
add
xchg
push
add
fldl
mov
aad
push
mov
fcmovne
add
add
add
imul
gs
and
jo
pop
nop
add
repnz
add
iret
or
add
add
mull
cmp
mov
pop
loop
adc
adc
or
add
fstpt
fwait
movsb
add
add
fcompl
enter
inc
insb
ret
out
add
pop
sub
test
lahf
out
push
add
jb
jae
dec
fdivrl
mov
pop
add
mov
lds
pop
xor
add
das
and
fisubs
mov
mov
ljmp
add
push
add
sahf
scas
scas
mov
ja
bound
mov
jbe
jl
push
js
jg
scas
jp
adc
hlt
add
add
scas
mov
add
leave
arpl
add
mov
push
add
gs
and
sbb
add
cmpl
sbb
lods
js
loop
fimuls
repz
mov
or
mov
mov
out
les
xchg
add
mov
add
push
add
enter
add
add
add
pop
popa
js
add
lods
lock
add
dec
lret
aad
dec
fbstp
mov
and
mov
mov
enter
pop
das
cltd
ret
push
add
rolb
push
add
adc
aaa
push
add
adc
mov
inc
dec
xchg
add
pop
pushf
xchg
add
jns
int
iret
cs
push
mov
rolb
xor
add
inc
add
les
call
mov
and
mov
add
xor
mov
addb
lock
add
mov
add
sbb
add
aaa
cmpsb
add
sub
add
icebp
rolb
lds
xchg
jp
add
imul
jmp
add
jnp
popa
adc
xchg
add
add
jnp
rolb
scas
ret
loopne
pop
sti
push
add
enter
ror
and
xor
mov
iret
mov
jecxz
hlt
add
fisttpll
add
jne
pop
add
call
add
loop
call
fdivs
mov
add
insl
sbb
push
arpl
test
lods
xchg
add
add
jg
call
inc
outsb
inc
mov
add
mov
cmpsb
add
lret
and
inc
add
push
add
add
jns
add
add
mov
add
add
add
push
add
push
in
xor
jns
pop
in
subl
mov
add
add
cmp
add
pop
push
add
mov
lds
mov
icebp
testb
dec
cmp
data16
add
add
xor
cmpsl
xchg
add
mov
ja
rolb
loop
lret
pop
popf
jno
add
mov
add
lea
mov
mov
fisubrl
cltd
dec
xor
int
add
add
push
add
mov
jno
sub
add
rorl
push
enter
cmp
out
mov
or
and
mov
lahf
and
sub
add
add
lock
mov
add
loope
dec
subl
lcall
mov
lods
fistl
push
push
nopl
test
jne
mov
add
in
clc
inc
add
mov
mov
cs
repnz
mov
or
xor
out
insl
rcl
add
fdivrl
mov
cmc
test
add
add
add
loope
add
jb
shrl
or
movb
mov
dec
add
mov
pop
pop
xchg
add
xchg
add
add
addb
add
push
add
jle
dec
jle
inc
or
out
add
mov
jno
add
add
popa
jb
call
adc
lret
mov
push
dec
mov
das
mov
pop
cld
lcall
or
add
inc
in
xor
stc
mov
mov
dec
xor
movsb
add
add
jg
or
imul
jl
add
movb
add
adc
cld
lret
rolb
addr16
jne
or
add
push
mov
jno
xchg
push
mov
arpl
and
add
cmp
mov
das
int3
rolb
dec
xor
mov
arpl
jo
adc
int
movsl
js
fwait
pop
pop
insb
xor
and
add
testb
gs
sub
ret
push
push
or
add
iret
lea
clc
orl
int
lret
jle
xchg
sti
in
fwait
and
mov
push
pushl
lcall
add
xor
cmp
cld
loopne
inc
xlat
scas
and
fnstenv
adc
movb
dec
inc
add
push
add
jge
cmpsb
add
jmp
cmp
les
add
cli
or
inc
imul
add
outsl
aaa
push
lcall
mov
test
mov
add
and
mov
in
test
js
in
jge
jno
xchg
repz
xchg
add
stos
jp
hlt
add
add
mov
ds
dec
adc
loopne
adc
sub
in
les
xchg
nop
add
out
add
dec
imul
lods
bound
mov
xor
lock
xor
test
add
jmp
add
and
dec
inc
cmp
bswap
sahf
sahf
test
add
rolb
push
lret
addr16
mov
push
inc
inc
add
inc
add
imul
lahf
add
add
mov
inc
addb
xchg
addr16
add
cmp
or
adc
push
add
rolb
addb
popa
aas
cli
cwtl
mov
add
add
add
movb
rcll
xchg
add
pop
dec
aaa
xor
adc
push
add
and
mov
xor
add
stos
jns
movb
dec
push
sti
faddl
data16
mov
add
aam
mov
movsb
add
xor
mov
adc
stos
xchg
sub
add
dec
das
out
push
add
mov
mov
add
cmp
add
mov
add
fidivl
out
lock
out
inc
imull
dec
xor
mov
lods
add
mov
inc
add
mov
add
add
test
xchg
in
push
js
add
add
mov
add
push
addl
fistpll
sbb
add
loope
idivl
inc
add
push
add
xor
ljmp
lods
mov
pushf
push
sahf
and
mov
push
add
pop
sub
addb
aas
sbb
dec
ja,pt
sbb
add
add
sbb
cltd
orl
add
popa
mov
add
testb
and
cmp
push
add
pop
fcomip
add
leave
jmp
add
inc
movsb
add
imul
add
jg
add
add
mov
add
or
add
imul
fwait
or
xchg
add
add
repnz
sub
cmpsb
add
add
mov
push
add
pop
popa
push
add
or
repnz
add
add
and
add
add
add
pop
or
add
xchg
mov
dec
and
mov
add
cmc
sub
dec
arpl
pop
cmp
add
xor
pop
xchg
add
add
mov
add
cltd
xchg
fildl
mov
aas
jle
rolb
inc
add
mov
dec
push
adc
aam
xchg
imul
inc
aam
mov
add
lahf
loop
push
cmpsb
add
cmp
pop
xchg
scas
mov
dec
mov
add
add
add
add
push
jge
daa
in
cmp
xor
in
mov
cs
icebp
sbb
aaa
xor
dec
in
int
lods
xchg
add
frstor
sub
mov
inc
add
fbstp
testb
jo
push
xor
cmp
add
ljmp
rolb
mov
bound
mov
lock
mov
mov
fidivrl
push
ffree
add
pop
popf
dec
push
add
add
xor
pop
les
mov
and
mov
add
mov
add
add
add
and
inc
add
test
mov
addb
movsl
icebp
xlat
dec
pushf
mov
pop
jbe
iret
mov
add
add
add
lods
incl
cmp
mov
pop
push
add
in
mov
addb
rolb
cwtl
mov
add
lods
sbb
test
inc
add
xor
lods
push
add
add
xor
int
add
mov
mov
mov
repnz
sbb
add
add
add
mov
icebp
add
add
jns
add
clc
and
out
jae
push
add
dec
shll
add
cmpsb
add
aad
cmp
bound
mov
lahf
scas
ret
cmp
filds
mov
mov
add
lahf
mov
inc
push
shll
mov
push
fwait
data16
add
out
test
adc
cmp
add
cmc
mov
cwtl
xor
lock
shrl
lods
cmp
push
sub
xchg
jne
add
mov
mov
mov
adc
adcl
movsl
cmpl
cmp
mov
scas
and
mov
sub
add
into
out
aaa
adc
inc
lock
pop
jle
mov
sub
add
mov
add
add
cli
mov
lock
and
mov
xchg
add
add
sub
sbb
dec
out
test
add
or
addb
lret
test
outsl
sbb
divl
add
add
addb
loope
adc
mov
loope
lds
mov
lds
mov
jle
xor
cmp
add
nop
add
or
jge
mov
add
sbb
mov
pop
pop
jecxz
int3
adc
out
das
mov
add
pop
pop
mov
shll
mov
rolb
pop
inc
fidivl
add
leave
inc
loope
sub
mov
or
add
mov
negl
or
and
addb
stos
jo
dec
push
xchg
addr16
dec
mov
sub
adc
call
mov
add
add
mov
ret
popf
dec
lret
sbb
shr
xor
push
fcmovbe
adc
pop
dec
jle
add
add
mov
rcll
jno
pusha
add
add
mov
sbb
lcall
push
add
add
lcall
mov
add
mov
add
and
jecxz
pop
call
inc
lods
das
addr16
sub
add
add
into
test
inc
add
jne
add
add
jecxz
add
dec
lods
push
add
lock
xor
dec
testb
add
pop
insb
ja
push
mov
imul
add
mov
dec
test
sahf
pushf
repz
rolb
add
pop
iret
cmp
addb
add
or
mov
add
pop
mov
mulps
data16
add
adc
adc
pop
in
jp
xchg
add
inc
add
lock
xor
mov
inc
add
adc
mov
mov
xchg
aaa
add
mov
sub
cwtl
pusha
add
add
add
push
add
rolb
jp
sub
add
pop
xchg
js
add
cmp
rolb
add
lcall
sub
call
test
aas
pop
nop
add
xchg
adc
mov
add
lods
jp
and
add
xchg
cmpsl
ds
inc
add
add
pop
testl
int3
data16
pop
call
rcll
das
in
faddl
add
dec
out
insl
mov
adc
filds
mov
xchg
mov
testl
inc
add
outsb
rcrl
dec
mov
pop
jno
push
scas
loope
std
cwtl
repnz
add
add
xchg
add
add
add
add
mov
iret
jge
pop
std
call
add
mov
sub
movb
jae
cmp
push
mov
add
sub
xchg
pop
pop
jae
pusha
add
push
dec
add
lods
imul
add
add
and
dec
inc
xchg
jmp
or
iret
jge
movb
add
ds
add
xchg
push
add
test
cwtl
outsl
ficoms
sub
add
scas
ljmp
mul
add
das
js
sub
jns
test
stc
sbb
lock
jnp
add
dec
out
mov
stos
enter
add
sub
sbb
repnz
xor
add
or
out
lods
int
add
fbld
add
stos
sbb
aas
pop
mov
ds
call
inc
add
add
or
add
jne
sub
mov
dec
aad
push
add
add
jge
add
rolb
jns
add
outsl
mov
add
adc
or
xchg
mov
add
mov
add
cld
and
mov
arpl
cmpsl
push
add
and
add
shll
gs
test
add
lds
iret
push
add
add
mov
fsts
aad
repz
movsl
testb
mov
xor
ds
push
add
push
add
mov
add
mov
stos
in
pusha
add
pop
xor
mov
sbb
mov
add
pop
in
fisttpll
cmp
inc
cmp
mov
pusha
add
fs
sbb
dec
xchg
add
xor
push
add
xchg
add
mov
push
pop
xor
sub
add
addl
add
add
mov
and
add
loopne
xlat
pop
mov
pop
inc
fwait
test
cmc
jmp
add
movb
mov
adc
add
adc
rolb
in
inc
add
xchg
add
add
mov
add
clc
mov
push
add
add
inc
sub
xchg
inc
dec
inc
or
mov
dec
pop
sub
sub
push
mov
mov
inc
add
fdivs
nop
add
add
jb
pop
pop
inc
test
in
inc
out
mov
mov
and
out
add
les
mov
nop
add
xchg
xor
insl
cmc
bound
mov
aas
pop
push
dec
mov
imul
add
dec
xchg
add
mov
add
mov
decb
or
sbb
mov
add
add
jmp
das
xor
mov
add
mov
cmp
ret
add
inc
add
add
jo
out
push
repnz
or
push
test
aam
push
add
xor
inc
add
fnstsw
add
add
push
add
pop
mov
imul
pop
mov
insb
scas
jecxz
jg
cld
inc
cltd
jge
pop
jnp
pop
xor
aad
mov
xchg
xor
push
add
jbe
dec
cli
sbb
mov
add
jbe
in
inc
add
cmp
pop
outsl
mov
outsb
add
add
add
mov
sti
xlat
leave
pop
int3
jl
add
add
mov
pop
cltd
push
inc
addb
jecxz
add
pop
push
add
add
or
addb
loope
add
rolb
push
sub
or
adc
movsb
add
jbe
inc
nop
add
cmc
jne
rolb
fadds
add
out
cmp
pop
addr16
fsubrs
add
movb
inc
das
pop
mov
fistps
ret
out
js
addb
rolb
mov
push
add
addb
sbb
add
and
mov
popa
testb
mov
mov
add
or
add
mov
mov
jle
jg
add
and
mov
std
and
xor
ljmp
mov
xchg
les
xor
push
out
sub
jne
add
in
inc
and
mov
add
into
add
mov
jp
inc
add
push
add
lods
int
rolb
cmpsl
test
adc
pop
jmp
push
add
add
ja
pop
mov
scas
push
add
inc
outsb
adc
push
mov
das
lret
push
add
xchg
mov
add
cmp
mov
mov
cmp
pop
add
push
dec
fcomps
aas
push
add
mov
hlt
add
rolb
and
add
xchg
mov
pusha
add
clc
mov
add
mov
add
mov
adc
adc
add
fidivl
xchg
mov
bound
mov
add
or
das
hlt
add
mov
mov
add
dec
add
xor
add
in
dec
sbb
mov
int
add
mov
jae
add
or
sub
cmp
adc
mov
jbe
addb
nop
add
mull
lret
outsb
push
add
add
add
xchg
add
ds
pop
xchg
push
add
popf
cli
mull
adc
add
xchg
add
bound
mov
add
mov
add
mov
xchg
repnz
cmp
add
pop
mov
mov
xlat
movsb
add
mov
out
add
xor
aas
jno
rolb
add
mov
in
and
add
dec
mov
arpl
sbb
push
add
push
out
dec
test
dec
jge
jnp,pt
mov
mov
jne
dec
xrelease
add
add
movsl
sahf
mov
sahf
sub
add
mov
lahf
mov
insl
dec
push
add
bound
mov
add
jge
sub
or
imull
sahf
pop
aam
rolb
out
add
add
mov
rolb
mov
add
add
ret
mov
shll
add
add
inc
int
ds
jecxz
add
adc
into
add
mov
mov
add
pop
into
and
or
push
push
add
lret
push
add
xchg
add
push
add
add
dec
sub
mov
sub
add
test
movb
add
sbb
add
add
rolb
push
sub
add
add
mov
nop
add
subl
cmc
insl
mov
jg
ja
cwtl
jecxz
add
addb
jle
fsubrs
xchg
insl
xor
add
adc
inc
pop
loopne
popf
int3
mov
inc
add
add
add
jg
je
arpl
or
mov
stos
rolb
sub
mov
repz
fimuls
inc
pop
fisttpll
add
add
cmp
in
outsb
aaa
sbb
or
test
addr16
iret
xchg
mov
push
mov
stos
jle
push
add
or
mov
add
mov
rorl
test
pop
hlt
add
lds
add
shrl
lds
cmp
jecxz
add
aaa
rcr
adc
add
movb
ds
mov
ja
fiadds
mov
in
sbb
add
sbb
enter
cmp
cli
leave
fcmovu
mov
lock
iret
adc
adc
sbb
inc
add
push
in
inc
add
mov
xchg
daa
lcall
rcrl
pusha
add
scas
or
and
mov
test
dec
and
hlt
add
adc
jmp
add
mov
push
add
movl
dec
dec
mov
add
movl
sub
add
inc
pop
into
xor
sub
add
popl
cli
or
add
sbb
lcall
ja
js
jnp
aaa
add
mov
icebp
pop
cmpsb
add
push
add
pop
cmc
push
in
insb
jmp
into
outsl
add
rolb
call
mov
aaa
jge
add
add
add
orl
repz
add
psrad
aad
add
and
pop
mov
push
add
lea
cmp
add
test
push
add
xor
adc
add
mov
fsubl
push
xchg
add
fcoms
jae
mov
xor
mov
xchg
add
nop
add
add
add
fstp
jl
cmp
scas
data16
cmpsb
add
icebp
nop
add
or
pusha
add
add
fcoms
cmp
sub
cmpsb
add
sub
mov
jne
jle
inc
mov
shll
add
shrl
add
call
sbb
mov
les
rolb
in
leave
insl
fbld
in
outsl
scas
pop
rolb
dec
cmp
mov
xchg
add
mov
jmp
pop
or
or
add
je
jnp
jle
jl
add
xor
imul
add
push
add
nop
add
add
js
xchg
add
adc
add
aam
int3
xor
inc
add
addr16
pop
jbe
cltd
adc
fwait
je
dec
repnz
add
pop
call
xchg
fdivrs
lret
mov
addb
cmp
pop
pop
push
add
sbb
add
and
add
mov
sub
jae
mov
sahf
sbb
add
lods
push
addb
add
int3
xor
add
fwait
imul
movsb
add
inc
aaa
xchg
jo
outsb
fwait
out
rcll
add
add
bound
mov
rolb
sub
add
push
gs
xchg
add
test
fsub
push
add
add
imul
dec
roll
and
test
mov
add
cmp
add
fidivs
mov
push
sti
daa
dec
cmp
stos
aas
xchg
data16
stos
add
mov
adc
fiadds
add
adc
dec
outsl
xlat
inc
in
or
add
or
data16
dec
fldcw
fnsave
push
fs
in
cltd
xor
add
mov
push
add
add
pushf
adc
add
mov
cmp
cmp
aaa
or
add
and
mov
push
add
add
and
mov
add
imul
add
ret
inc
add
sub
cmp
mov
dec
mov
pop
in
and
mov
mov
jmp
into
into
repnz
into
xor
cli
arpl
and
add
bound
mov
xrelease
add
add
imul
add
in
outsl
and
mov
jb
inc
add
add
mov
dec
rorl
out
loope
adc
mov
cmc
jno
in
aas
push
popf
push
add
and
mov
aam
dec
inc
add
add
add
mov
add
or
add
add
enter
mov
add
mov
or
add
rolb
mov
and
mov
pop
push
push
jnp
jns
xchg
add
ficomps
je
mov
add
outsl
arpl
test
mov
or
add
stos
int3
movb
stc
mov
xor
stos
mull
jno
add
loopne
mov
add
mov
addr16
scas
dec
mov
add
add
or
pop
add
int3
cmp
or
cmp
jg
or
fwait
and
sub
adc
fnstsw
xor
jg
sub
